add
jb
inc
jns
je
out
daa
es
push
in
addl
cltd
add
xchg
scas
aas
add
movsb
mov
in
and
cli
xchg
xchg
cmp
mov
sub
mov
scas
jg
xchg
lock
scas
push
cmp
cmp
pusha
out
cmp
sbb
push
add
cltd
inc
pop
xor
or
shrl
cmp
xchg
fs
push
inc
mov
mov
jge
sub
out
or
and
std
shrl
adc
pushf
mov
into
lahf
pop
pop
sub
xchg
test
addb
lods
xor
pushf
sub
pop
jne
add
in
adc
imul
icebp
mov
hlt
iret
cmc
out
decb
cmc
add
pop
jl
popa
lds
in
outsb
out
rcrb
adc
nop
out
adc
stos
lds
in
cltd
test
movl
add
xor
pusha
call
jmp
and
jp
rcll
sub
dec
call
into
pop
iret
mov
fnstcw
jl
das
stc
xchg
jecxz
add
cmp
enter
sahf
mov
adc
test
xchg
jno
and
mov
dec
mov
push
sbb
sub
arpl
lea
or
xchg
sub
cmpsb
fs
inc
ficoms
fildll
xchg
pop
jnp
pop
cltd
xchg
add
push
testb
call
cmpsb
icebp
and
mov
pop
or
jnp,pn
into
cmpsb
jo
cmc
xor
int3
push
mov
sbb
inc
dec
or
mov
movsbw
mov
pop
pushf
pushf
pushf
movw
pushl
ret
mov
rcll
xchg
xchg
in
mov
imul
sbb
add
out
mov
movsl
sbb
xchg
stos
fdivl
arpl
aas
mov
pop
cmp
dec
shlb
mov
dec
inc
pop
sbb
dec
dec
int
mov
push
scas
fs
add
pop
orb
lret
lods
fwait
out
jge
mov
add
mov
jb
aaa
imul
cmpsl
and
fistpll
dec
pop
push
aas
mov
call
not
pushf
sub
pushl
pushf
bt
rol
mov
push
pushl
inc
call
neg
test
or
mov
test
pusha
cmc
and
movb
add
push
push
push
pushf
lea
jmp
push
call
int3
add
lret
js
lahf
sbb
scas
mov
mov
repnz
cltd
push
ret
int
dec
ja
jmp
and
push
add
call
jmp
dec
ret
jp
js
dec
loop
ljmp
in
insb
xchg
pop
jg
xchg
pop
or
mov
sbb
and
scas
rep
xor
xchg
mov
enter
test
sub
jbe
enter
incb
popf
cmp
push
mov
aad
or
js
shrl
ds
or
in
bound
test
ss
shl
out
cmpsb
and
adc
sbb
xchg
daa
cmpsl
stos
adc
jmp
aas
shll
mov
pop
inc
cmp
sub
test
add
jmp
int3
mov
pop
push
xor
insl
push
inc
jmp
cwtl
ss
int
add
movb
imul
sub
in
inc
in
stos
cltd
mov
xor
xor
ss
inc
icebp
cmp
sub
icebp
adc
cmp
ss
cmpsl
pusha
sub
cltd
ja
mov
push
sbb
xchg
inc
pop
faddl
fwait
ja
aam
gs
pop
repz
icebp
add
data16
jbe
iret
and
adc
sar
push
js
call
cmp
push
or
shl
mov
rcrb
lds
jg
shl
andb
addb
sbb
scas
in
add
push
ret
movswl
xor
dec
inc
aaa
mov
cld
ja
sbb
or
jb
fxch
scas
inc
and
stos
cld
and
xor
out
add
cltd
xchg
add
dec
sbb
mov
mov
mov
sarb
inc
ret
call
mov
out
std
push
fs
cld
fistpll
out
lea
jne
sub
rol
ror
mov
xor
sub
push
stc
lea
cmp
bt
pushf
clc
sub
pusha
call
push
pusha
adc
shr
cmp
inc
pop
dec
orb
pop
not
or
jl
inc
ds
and
gs
lea
mov
jl
add
and
xor
or
mov
ljmp
das
fsubl
xchg
xchg
aam
fnstenv
inc
rcrl
sub
cmp
repz
pop
mov
cmp
jae
jp
lahf
fucomip
lcall
lea
fwait
mov
movb
cmpb
pusha
call
jnp
pop
jle
rcll
in
movsl
ds
andl
inc
testb
dec
loop
out
test
stc
into
xchg
out
sub
mov
fstps
jg
inc
std
ror
cmpsl
dec
sub
mov
and
xor
xchg
adc
lret
pop
xchg
or
cmp
out
jg
nop
dec
das
aaa
scas
mov
pop
mov
mov
rcll
sbb
mov
loop
roll
adc
cmp
push
hlt
xchg
rorl
pop
pop
jg
iret
aaa
sahf
imulb
and
ja
repnz
ret
pop
out
dec
pop
in
addr16
mov
jge
je
jg
and
sub
movsl
mov
das
jae
test
and
clc
lahf
imul
mov
push
sub
xchg
push
addb
adc
dec
pop
dec
mov
mov
out
push
pushf
dec
fsubrp
lret
aaa
fs
out
xor
mov
ret
dec
inc
push
setp
sets
inc
bt
mov
adc
inc
xchg
aam
cmc
mov
pushf
cmc
pushf
mov
bt
clc
push
xchg
rcl
mov
bt
cmc
movb
sub
call
mov
lea
jne
call
sbb
les
shll
repnz
scas
ds
jns
push
lahf
loope
mov
aas
adc
sbb
sub
sbb
insb
fwait
add
cld
int
dec
nop
icebp
int
add
insl
test
pusha
mov
pop
push
cmp
sub
int
ds
stos
jp
outsl
pop
pop
setge
mov
pusha
inc
jmp
dec
push
sbb
stc
adc
stc
sbb
push
pop
dec
fistps
xchg
mov
pop
js
cmp
xchg
xor
loop
in
std
daa
push
scas
sub
or
push
sbb
bound
int
fcmove
push
call
popf
mov
xor
popf
jmp
outsl
btc
aad
sub
cli
test
adc
push
or
shlb
pop
movsl
dec
cmc
dec
ljmp
test
cmp
add
hlt
test
or
mov
lret
push
cmpsb
xor
ficompl
daa
jne
xor
xor
loop
ss
enter
mov
fcmovnb
pop
pop
mov
ljmp
testl
adc
mov
jge
sub
pop
cltd
lds
mov
insb
sarl
nop
jmp
ss
neg
lret
pop
aad
sbb
jp
insl
outsb
dec
es
movsb
fdivrl
add
sbb
jle
daa
jg
bound
call
cmp
pushl
movb
call
jmp
jmp
lret
mov
sub
and
leave
dec
jno
repz
sub
push
ljmp
adcl
and
fucomi
in
mov
je
jmp
es
addb
jae
dec
push
jne
jne
sbb
and
scas
pop
push
cmp
mov
rclb
fiaddl
dec
loop
and
fs
push
mov
push
push
jle
jg
pop
cmc
std
pop
imul
jbe
dec
adc
arpl
pop
jl
shll
ds
pop
scas
clc
inc
or
test
cmp
sbb
jne
sub
pop
cmpsl
nop
test
notl
je
mov
sub
pop
mov
insb
dec
push
pushf
repnz
ljmp
and
pusha
lea
call
pushf
mov
pusha
lea
jmp
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
fs
je
jmp
shl
sub
neg
pusha
mov
sub
xor
seta
add
adc
shl
sar
mov
stc
cmp
clc
cmp
test
call
outsl
insb
xor
cs
insb
add
ja
jb
rol
sbb
call
lahf
mov
inc
mov
in
je
rcrb
jb
cld
mov
lret
sbb
repnz
sbb
sbb
sub
js
inc
mov
xor
or
ss
loop
pop
les
test
mov
cmp
fldcw
mov
mov
dec
pusha
mov
dec
lods
dec
ja
dec
pop
out
imul
jge
add
dec
out
insl
adc
fwait
shr
push
xlat
jg
outsl
ss
in
jno
sarl
or
xchg
push
and
lret
inc
mov
fisubs
xor
dec
and
dec
add
pop
add
sahf
jg
and
sub
lahf
loop
repnz
adcb
cmp
clc
mov
outsb
jmp
stos
pop
mov
into
pusha
not
mov
lea
jmp
fistpll
mov
ss
dec
les
jns
sbb
aam
loopne
mov
mov
sbb
dec
and
shlb
jns
fistpll
mov
movsb
fcmovb
and
sbb
adc
add
subb
fld
aam
call
mov
jg
stos
pop
adcb
in
mov
mov
pop
gs
lret
outsb
add
neg
fsts
jle
lds
cmp
dec
jbe
mov
les
fistpll
add
mov
push
leave
popa
bound
lea
push
cmp
xchg
rorb
shrb
mov
clc
stc
shl
mov
pushf
bt
sub
push
pushf
rep
jmp
pusha
sub
pushl
pushf
call
cs
shlb
lds
imul
cmpsb
jge
scas
in
and
shrb
sub
sbb
and
push
sbb
push
testl
into
dec
pushf
xchg
push
mov
dec
push
std
cmc
sbb
sar
jne
ret
mov
mov
mov
and
cmp
jno
mov
int3
rol
scas
push
in
sub
push
stos
and
pop
push
pop
sahf
daa
fists
daa
mov
sub
push
jae
pop
dec
lea
jae
call
movw
pushf
cmc
cmp
pushf
pushf
pushf
lea
je
push
lea
jmp
jne
mov
rorl
orl
loop
cli
mov
inc
out
popa
xchg
lods
fdivrs
mov
in
movsl
int
int
out
push
leave
lods
xor
aaa
dec
ret
jmp
sub
aaa
cld
xchg
sub
mov
pushf
loop
pop
sub
ss
out
mov
repz
sub
aad
push
xchg
jae
xchg
cmpsb
pop
and
inc
in
insl
nop
shll
imul
push
pop
sbb
shl
clc
rcrl
in
sbb
cmp
jnp
ljmp
mov
out
adc
leave
bound
movzbl
movsbw
pushf
lea
call
popw
stos
jbe
rcrl
adc
dec
sahf
push
cmc
daa
bswap
shll
or
mov
test
int3
ljmp
inc
leave
push
fucomip
stos
faddp
mov
mov
mov
sbb
adc
aad
data16
cmp
mov
testb
lret
loop
bound
in
and
jle
jns
push
int
lahf
lcall
xchg
out
sub
xorl
loope
movsl
push
aad
cmpsl
iret
cmpsb
test
cmp
and
mov
or
adc
mov
and
jne
pushf
pusha
lea
call
pusha
pusha
adc
jmp
jmp
jmp
push
lea
jne
pusha
stos
pushf
lea
jmp
adc
out
jne
shll
dec
or
xcrypt-cbc
cmpsl
push
int3
mov
aam
into
dec
stc
aas
int
sahf
jns
xchg
loop
mov
movsb
test
mov
test
push
shll
ljmp
adcb
mov
push
inc
frstpm(287
lea
popa
pop
divb
xlat
mov
push
xchg
and
add
lods
test
in
outsb
sbb
xchg
xor
cmp
inc
inc
xchg
push
or
in
sub
inc
aam
iret
les
push
jne
shrl
xchg
insl
je
cmp
add
daa
cmpsw
cmp
es
fnstcw
cwtl
pop
mov
fistps
sbb
mov
clc
sti
xchg
dec
test
mov
inc
xchg
xlat
popa
inc
jecxz
pop
inc
push
subb
mov
mov
cmc
jb
mov
mov
fisubl
jnp
shrb
sbb
pop
mov
push
push
mov
loope
xchg
fldcw
push
out
inc
sahf
sahf
xchg
cmp
jne
je
rcll
or
lods
inc
xchg
xchg
xchg
pop
roll
inc
mov
inc
or
sarb
xchg
add
fsub
adc
xor
shlb
pop
incl
test
out
mov
add
or
lcall
dec
adc
int3
xor
inc
lcall
incb
pop
push
rorb
or
xchg
push
or
lea
ja
stos
jmp
adc
jmp
jo
mov
mov
add
add
fidivrl
insl
jge
mov
sbbl
mov
icebp
add
sub
in
loop
xor
testl
xor
mov
mov
jecxz
xor
mov
cmpsl
xor
sub
sub
sub
mov
cmp
pusha
push
test
scas
test
sub
lret
xchg
flds
and
sbb
pop
mov
xor
mov
sub
scas
test
jge
ret
inc
in
stos
mov
dec
aaa
lods
movsl
fwait
outsl
push
mov
arpl
test
dec
mov
shll
dec
arpl
mov
jmp
mov
test
movsl
lret
pop
push
lahf
fcoml
jl
stos
jmp
jp
mov
lds
pop
icebp
shrb
jmp
jb
fwait
mov
push
jecxz
pop
and
pop
pop
inc
push
mov
mov
mov
mov
test
mov
adc
mov
sbb
shll
push
push
fidivrs
clc
sub
mov
icebp
or
push
push
lret
cmp
popf
push
ret
sbb
in
sub
ret
xor
rorl
mov
jne
xchg
push
lods
jecxz
rclb
mov
sub
insb
out
sub
pop
movsl
outsl
test
mov
out
lods
mov
shl
sub
out
xor
jae
sub
stc
xor
inc
in
fsubrl
mov
ds
jnp
mov
inc
inc
inc
inc
fcomps
jne
xor
sub
shll
mov
enter
mov
mov
call
cli
cs
ror
mov
test
lods
movsl
pushf
jecxz
sub
or
std
les
add
cmc
icebp
mov
les
push
cmc
push
cmp
xchg
xchg
daa
loope
xor
enter
sub
mov
lahf
outsb
lds
sub
stos
cmp
jl
xor
push
cmpl
daa
test
sti
ret
sub
mov
jo
xorl
int
jecxz
icebp
cmpsl
daa
mov
daa
movsl
cmpsl
cltd
pop
cmc
push
sahf
sarl
outsl
jmp
int3
sbbl
mov
xor
xchg
mov
lds
push
test
movsl
aam
loope
jmp
les
or
mov
ret
pushf
pop
xlat
xchg
cmc
push
push
call
cmpsl
mov
and
mov
mov
xchg
jg
scas
dec
movsb
xchg
sub
pop
std
jne
pop
or
jle
outsb
decl
sub
and
mov
cmp
aad
repz
and
cwtl
mov
and
jae
int
xor
push
cmp
xor
lea
xor
pop
dec
mov
pusha
mov
test
push
lea
pop
or
ljmp
push
hlt
loope
sub
int
outsb
iret
mov
test
pop
lods
xor
mov
ret
shll
mov
lods
or
mov
mov
pop
xor
mov
je
add
pusha
jecxz
fiadds
cmp
daa
pcmpeqb
repz
mov
je
sub
int
icebp
mov
add
xor
push
mov
mov
int3
and
jno
addl
mov
inc
and
mov
repz
or
cltd
movsl
repz
inc
jp
icebp
aaa
inc
cmpsl
xchg
orl
push
sub
repz
imul
mov
mov
push
or
sub
test
sbb
mov
mov
arpl
imul
mov
scas
pop
push
mov
sarb
lea
ss
lea
pop
lods
pop
sub
repnz
pop
scas
adc
subb
test
push
mov
ljmp
decl
ljmp
mov
mov
sbbb
cwtl
sbb
cmp
stos
sarl
iret
sbb
pusha
mov
test
push
lea
pop
or
in
ljmp
push
sbb
out
gs
jecxz
daa
sahf
push
push
repz
and
test
mov
add
int3
and
mov
rol
push
mov
pop
lods
pop
sub
xor
xchg
add
jmp
lods
icebp
mov
mov
or
int3
mov
cmp
imul
add
pop
inc
mov
cmp
sbb
sbb
push
popf
test
test
xchg
pop
sbb
call
push
stos
iret
subb
pop
lods
ds
int
loope
pop
adc
imul
into
imul
add
clc
push
mov
dec
sbb
imul
or
jg
jne
jge
cltd
push
sub
cmp
ljmp
int3
lcall
repz
xor
add
mov
jae
movsb
jmp
and
pop
or
movb
xchg
dec
int3
jbe
xor
repz
jb
pop
mov
xor
push
xor
test
cmp
inc
and
call
daa
fiaddl
pop
xchg
cmp
push
pop
sub
test
push
push
test
push
cmp
add
daa
sbb
pop
mov
je
movsb
pop
movsb
mov
mov
mov
jge
mov
rcll
cmp
aad
push
lods
sbb
mov
pushf
pop
ss
add
cmpsb
jnp
test
out
adc
lahf
repz
cmc
clc
cmpsl
cmp
pop
outsb
iret
lret
adc
add
stc
outsl
mov
cwtl
sahf
lret
pop
inc
lods
mov
mov
pushf
pop
ss
testb
mov
pop
lea
cmp
je
sbb
xchg
and
add
jl
mov
mov
cmpsl
xlat
jo
aaa
into
push
lods
dec
insb
dec
jl
add
add
dec
xor
xchg
cwtl
cs
dec
sub
jge
pop
and
xchg
xor
inc
mov
cmp
adcb
lea
push
lock
out
in
repz
fwait
scas
rorl
loopne
mov
sbb
jl
movsl
push
addr16
lods
shrl
pop
lds
cwtl
mov
scas
inc
fucomi
test
into
xor
mov
inc
ja
cld
cwtl
jmp
or
out
xor
push
bound
arpl
sahf
mov
hlt
iret
loopne
daa
and
test
jo
and
fdivs
ret
icebp
mov
out
adc
push
xor
std
nop
sarb
cmpsl
sbb
jl
icebp
les
fmull
xor
cltd
sbb
aad
les
inc
fildl
movsb
sti
sub
lods
int3
out
jb
push
jae
mov
ja
sbb
jb
into
jmp
sub
mov
xchg
ret
dec
iret
loope
lret
leave
xor
and
jmp
cwtl
mov
mov
popa
jns
add
pop
imul
into
fwait
inc
add
shl
adc
in
fadd
std
jl
gs
jle
sarl
cmp
dec
sbb
scas
imul
outsb
cltd
and
push
loope
mov
pop
dec
sbb
sbb
cmp
outsb
pop
lea
mov
ret
pusha
xchg
mov
dec
xchg
loopne
cs
inc
jge
cmp
outsl
or
repz
outsl
sti
out
dec
ret
filds
and
jo
and
aad
cmp
mov
xor
sahf
mov
ficompl
jp
cmpsl
mov
into
fisttpl
inc
jmp
pop
xor
sub
jecxz
mov
xlat
hlt
inc
in
push
inc
in
sub
pop
mov
out
fldpi
mov
insl
fbld
movsb
lea
lret
sub
into
stos
mov
neg
mov
das
or
mov
insl
mov
mov
mov
inc
enter
cltd
sbb
mov
or
ljmp
cmpsl
in
movsl
icebp
psadbw
movsl
aaa
dec
addr16
dec
mov
neg
gs
popf
data16
shlb
movsl
jns
mov
shrl
lds
push
lods
adc
mov
inc
daa
xchg
mov
movsl
mov
sbb
mov
movsl
add
fildll
mov
hlt
sbb
movsb
cmp
movsb
sub
out
jno
cmp
enter
ret
testb
sbb
mov
outsb
out
xchg
dec
lds
push
mov
movsb
mov
lods
out
enter
push
leave
mov
cld
lods
pop
mov
test
inc
cmpsl
push
add
cmp
enter
xor
mov
mov
in
shll
out
pusha
mov
movsl
push
jle
mov
xor
adc
outsb
add
addb
sub
lods
xchg
cmp
je
insl
xchg
sub
int3
lods
lods
add
jb
insl
cmp
insl
stos
repz
mov
lods
in
sbb
sbb
cmp
sub
lea
pop
lea
cmp
jp
aam
lea
leave
fnstenv
rol
in
sub
into
mov
in
dec
lods
or
lahf
xor
int3
adcb
cmpsl
push
in
int3
xchg
pop
inc
int3
and
in
lock
mov
jg
inc
insl
inc
imul
sub
out
int3
mov
shr
and
out
cmp
add
adc
je
insb
cmp
stos
repz
and
inc
mov
lods
arpl
sbb
sbb
jge
rcrl
test
and
or
fbstp
inc
mov
and
sbb
add
lods
push
mov
aas
sub
pop
or
sbb
ja
mov
mov
stos
repz
insb
and
cmpl
lods
mov
je
jmp
lahf
add
add
int3
add
imul
clc
cmpsl
mov
int3
gs
stos
ret
pop
aaa
push
push
and
sub
lods
aad
jmp
fiadds
add
jno
cwtl
insb
or
sub
lock
jmp
lods
inc
inc
jmp
repz
xchg
inc
jmp
cwtl
add
lods
enter
lods
cmpl
leave
shlb
xchg
in
pop
inc
repnz
scas
icebp
and
aam
mov
scas
lods
testb
lods
lock
je
jecxz
add
cs
fisttpl
xor
or
push
inc
imul
xorl
add
lcall
push
hlt
add
ja
std
in
add
rcrl
dec
in
mov
xchg
inc
mov
adcl
or
repnz
add
adc
push
ljmp
add
in
sub
lcall
std
push
mov
sbb
xor
ret
clc
xchg
dec
adc
or
mov
xchg
repz
mov
or
xchg
insl
jne
or
mov
xor
int
dec
flds
pop
jmp
mov
lcall
sbb
mov
xchg
sbb
dec
test
push
push
xor
in
cld
pop
lcall
addr16
mov
orb
loope
fstpl
sbb
push
lea
xlat
fimuls
lods
pop
sub
in
xchg
mov
lods
in
mov
mov
and
fwait
xchg
rolb
scas
int
es
sbb
ret
xlat
sbb
sub
jb
fists
xchg
xchg
jb
cmp
xchg
jne
mov
mov
xlat
fdivrl
mov
les
sub
aam
int
inc
jo
push
inc
sbb
mov
test
push
sbb
push
je
in
pop
inc
xor
sar
mov
xchg
fsubl
jbe
insb
or
divl
pop
push
mov
jle
add
jmp
push
cmc
push
repnz
sarb
mov
and
dec
mov
ret
mov
add
xchg
pop
xchg
pushf
lds
ds
xchg
mov
xchg
loop
ds
jg
cmp
pop
pop
mov
pop
rcll
sbb
iret
icebp
shrl
push
decb
lods
push
sub
pop
xchg
cmpl
stos
sub
arpl
pushf
scas
mov
loopne
dec
xchg
out
sbb
aas
push
inc
out
call
inc
lock
jb
cmp
jmp
repz
popa
mov
inc
int3
mov
or
jmp
lods
cmp
ror
sbb
add
mov
inc
add
cld
add
enter
insl
mov
je
ret
adc
jp
shr
add
push
shrl
xchg
aaa
ror
rol
call
cmp
add
gs
xchg
sbb
repz
shlb
imul
fscale
popa
pop
scas
lea
dec
push
data16
rcrl
xor
rcr
add
sbb
sar
and
ljmp
ds
rorl
or
aas
ret
aas
cmpxchg
push
lods
push
jge
adc
sbb
fildl
jmp
dec
not
aad
xor
rcll
ret
call
jmp
ret
stos
adcb
int
jge
setne
mov
cmp
stc
mov
addr16
cld
jg
scas
mov
cmp
xor
into
jo
data16
roll
add
xchg
mov
xchg
sub
cmpb
lret
fwait
xchg
push
lcall
push
push
adc
imul
jecxz
mov
roll
cmp
shl
adc
fiadds
push
mov
ja
sub
out
push
xchg
lcall
idivb
push
ja
mov
push
ja
pop
push
jbe
ss
mov
cmp
loope
mov
jl
adc
add
ja
mov
ja
cmpsb
jbe
jb
xchg
push
pop
sti
mov
cmp
cmp
xchg
mov
mov
mov
mov
cmp
sti
xchg
or
push
testl
adc
mov
pop
mov
testl
or
insb
xchg
aaa
sbb
add
sub
push
mull
pop
lods
faddl
fnstcw
jno
pop
adc
push
popa
ljmp
jge
mov
mov
rcr
mov
push
mov
rep
adc
xor
push
fdivp
mov
test
push
mov
repz
inc
xchg
xchg
icebp
dec
inc
cmpsl
loopne
lret
xchg
cmp
mov
repz
inc
cltd
and
add
cmpsl
adc
sub
aas
xchg
inc
mov
xchg
push
jb
mov
js
adc
ss
mov
mov
push
ja
jne
sub
testw
sbb
dec
xor
outsb
pop
push
leave
sbb
mov
adc
xor
mov
data16
push
sub
dec
mov
sub
cmpsl
push
add
push
dec
xchg
sbb
adc
notl
test
test
adc
and
test
inc
cmp
imul
sbb
xchg
pushf
pop
inc
cmp
mov
pop
add
xchg
pop
aad
icebp
in
mov
adc
es
mov
mov
cmp
cwtl
lret
pop
pop
mov
je
mov
mull
cwtl
repz
shrb
adc
xchg
lock
aam
xlat
push
pop
pop
loop
sbb
inc
jnp
push
fdivp
mov
jnp
cmp
test
jnp
test
jnp
adc
dec
rclb
xchg
lods
cmp
notl
test
cmp
adc
test
pop
adc
loope
mov
int3
sti
nop
push
push
xchg
xor
cmp
pop
cli
cmp
xor
pop
lds
movsb
mov
cmp
add
fdiv
je
sub
scas
mov
insl
pop
pop
cli
jbe
xor
pop
je
push
cmpsl
pop
xchg
movsb
pop
xchg
repz
rorl
lahf
inc
std
sub
and
pop
aaa
icebp
rcrb
cmpl
adc
mov
mov
scas
jnp
in
outsb
clc
icebp
outsb
addl
sti
mov
fnsave
mov
xlat
push
scas
lods
rcrb
push
sub
in
push
divb
and
fdivrs
ret
xchg
sub
xchg
pop
mov
outsl
daa
xchg
adc
adc
mov
fdivrs
or
xchg
jns
outsl
jbe
dec
pushf
xor
dec
dec
insb
incl
pop
fwait
into
inc
dec
jp
repz
jmp
or
jp
pop
add
mov
xor
icebp
ret
xchg
adc
fpatan
rol
int3
jp
lret
popa
mov
pop
cmp
aad
pop
mov
movsl
push
mov
and
popa
xor
lahf
ret
arpl
shll
fildll
dec
pushf
pop
repz
dec
daa
push
repnz
pusha
mov
mov
jecxz
sbb
or
stc
jae
push
stc
cmp
push
ds
pop
stc
dec
lods
pop
stc
inc
sbb
or
jmp
pop
lds
gs
mov
insb
mov
faddl
push
stc
sub
sahf
mov
lods
int
ffree
test
fdiv
aaa
mov
mov
adc
pop
sub
adc
xchg
jg
pop
mov
scas
inc
repnz
pop
xchg
dec
out
jns
adc
lcall
lret
sub
jecxz
mov
in
into
jle
fdivs
pop
out
fs
and
mov
xchg
test
enter
pop
adc
das
popa
cmp
mov
sbb
jbe
hlt
pushf
and
ret
and
cwtl
mov
push
sub
scas
push
mov
ds
add
ds
imul
mov
sub
inc
icebp
fadd
fsubrl
jmp
inc
sbb
mov
enter
lods
push
cmp
loopne
shl
pushf
lret
adc
xchg
into
shlb
mov
fisubrl
lahf
rol
or
mov
scas
test
xchg
mov
xlat
imul
jmp
mov
dec
scas
xor
fwait
mov
sbb
pushf
fwait
jecxz
pop
xor
cmpsl
idivb
add
sbb
lods
loopne
sahf
xor
insb
ljmp
cltd
aas
clc
int3
and
mov
scas
lret
cmpsl
insl
movsl
pushf
fdivs
ss
les
and
sub
cwtl
popf
dec
bound
jns
xchg
lcall
lods
xchg
pop
mov
lea
repz
mov
cld
sub
jb
pop
pop
mov
nop
lcall
lods
push
js
inc
cmp
sbb
and
jne
movsl
sub
push
aad
mov
pop
dec
lcall
push
stc
jecxz
jb
pop
fxch
mov
ret
insl
out
cmp
sbb
sub
test
inc
cmp
outsl
js
mov
lret
lret
std
ds
ret
dec
dec
aaa
inc
xchg
icebp
movsl
aaa
cmc
xor
pop
or
std
xchg
mov
sahf
fimuls
repnz
test
sbb
lahf
and
dec
xchg
ds
sarb
cmp
push
push
jo
jae
cmp
jecxz
clc
aaa
jb
mov
dec
adc
fistpl
outsl
or
insb
jno,pn
in
cmpsl
cmp
ja
sub
cmpsl
int3
nop
aaa
jp
jae
jle
cmp
jecxz
pop
mov
jae
mov
sbb
pop
push
xor
inc
fisttpl
jl
cs
pop
into
sbb
add
fwait
or
mov
test
movsb
ret
subb
push
mov
mul
les
and
daa
xchg
jp
ds
add
js
cmpsb
mov
sbb
aam
lds
sub
xchg
push
ffree
je
cmpsl
into
xchg
cmp
sahf
imul
sub
movsb
pop
pop
mov
imul
notb
push
mov
jmp
sub
vpminub
repz
mov
into
mov
pop
sahf
andb
and
pop
mov
repz
xlat
pop
sbb
neg
test
mov
jl
push
in
mov
pop
pop
pushf
fcmove
dec
mov
int3
and
jg
int
jg
ss
sub
das
sub
dec
not
inc
sub
cmpsl
jnp
xchg
sbb
cld
pop
es
repz
add
mov
cmpl
lods
push
fdivl
xchg
ds
aad
mov
enter
mov
lahf
outsb
or
jmp
or
outsb
lea
adc
bound
mov
jo
mov
push
sarb
test
sbb
imul
xor
mov
cmpsl
cmovp
pop
sub
mov
cmpsb
fmulp
cmpsl
mov
mov
sbb
lea
mov
pop
lods
cli
cmp
ds
popl
test
daa
mov
xchg
addl
ret
fwait
xchg
leave
dec
or
lea
mov
stos
les
inc
mov
jnp
ljmp
std
cmp
add
lea
mov
sbb
shl
pop
jg
sahf
repz
lahf
cmpl
push
out
js
and
adc
test
jle
xchg
repz
cmpsl
cmp
aas
push
jg
mov
sahf
shrl
insl
pop
push
js
push
scas
popf
mov
and
cmp
in
lods
mov
into
sub
adc
mov
cmpsl
iret
cmp
arpl
cmp
or
mov
cmp
adc
das
and
repz
fwait
pop
lds
cmp
sbb
stc
or
and
fwait
and
iret
add
or
dec
rcll
inc
std
out
and
xor
xchg
inc
mov
lds
mov
sub
sub
xor
pop
sbb
cwtl
sbb
fcmovne
inc
sbb
xchg
pop
mov
jne
inc
jmp
repnz
in
mov
sub
sub
test
pop
fwait
mov
shll
cmp
mov
scas
mov
or
lea
sbb
mov
pop
sbb
dec
stos
mov
lock
rorl
shlb
cwtl
xchg
push
ret
subb
xchg
and
xchg
repnz
mov
scas
adc
ret
outsl
pop
into
xchg
mov
test
xor
mov
test
les
cmp
shr
sbb
js
repz
jno
fwait
je
lea
test
jg
daa
or
adcb
fsubrl
jne
jnp
or
jge
dec
pop
cltd
roll
add
push
sahf
imul
test
scas
mov
sbb
fstl
push
call
mov
mov
dec
shl
inc
cmp
hlt
je
jne
iret
jbe
sub
movsb
or
out
aam
add
test
lahf
cmpsl
push
cmp
jp
and
jne
cwtl
mov
lcall
inc
mov
cmp
inc
das
pop
cmpsl
bound
mov
mov
out
movsl
dec
pop
mov
mov
pop
xchg
mov
add
bound
push
sbb
push
xor
sbb
repz
pop
jnp
adc
pop
ret
cmp
push
push
fdivrl
pop
or
and
outsb
xchg
mov
xor
dec
sub
mov
sub
mov
pop
or
cmc
mov
sbb
je
pop
orl
jecxz
sub
popf
lahf
pop
jmp
mov
dec
std
repz
jne
fcompl
pop
mov
pop
and
scas
mov
pop
pushf
cld
jl
mov
mov
lcall
or
lcall
addr16
aas
mov
dec
sub
in
ret
push
lahf
ss
xchg
lods
je
fwait
cmc
mov
and
mov
sbb
js
pop
rorl
xchg
shrl
int
loop
out
shl
cmpsl
push
inc
divl
pop
mov
lods
loope
inc
int3
popf
xchg
adc
mov
mov
xchg
or
cmpsl
fcomi
push
cmp
hlt
rol
sub
cmp
popf
ret
in
push
mov
cmc
mov
mov
cmp
mov
mov
pop
imul
in
push
ret
cmp
data16
push
icebp
mov
sti
push
idivb
sar
rclb
rorb
pop
inc
cld
mov
cs
lds
les
sti
lahf
roll
xor
mov
sbb
mov
adc
fucomip
sbb
mov
lea
push
les
cmp
sbb
adc
adc
loope
out
lods
movsl
inc
dec
mov
add
mov
jmp
into
in
repz
aam
sub
scas
adc
dec
out
lods
stos
out
inc
mov
inc
pop
pop
pop
pop
push
jp
cmp
mov
xorl
ljmp
push
push
mov
cmp
fnstenv
into
mov
mov
movsl
jno
push
or
jnp
cwtl
sbb
sbb
or
iret
fldenv
bound
add
cmp
enter
fwait
clc
in
and
sub
lds
int3
lea
lods
cltd
mov
xor
mov
ds
lcall
inc
mov
test
push
ja,pt
aaa
mov
enter
aad
stc
push
inc
ljmp
aam
xlat
xor
jno
push
lea
adc
mov
insl
xchg
dec
sub
cmp
xchg
inc
mov
mov
mov
add
out
and
mov
inc
dec
into
inc
cmpl
cmp
les
mov
dec
lea
ret
rep
push
imul
popa
outsl
out
rolb
sub
mov
pop
mov
iret
push
add
push
mov
xor
mov
in
inc
mov
mov
lahf
or
dec
fsubl
sbb
mov
or
notl
mov
test
sbb
test
adc
mov
cmpsb
sbb
cmpsl
cmp
xchg
pop
xchg
std
shl
shrl
les
aam
adc
daa
adc
rcrl
out
add
inc
sbb
addl
bound
lea
sar
push
popf
cmpsl
jge
in
cltd
fs
mov
sbb
stos
add
jmp
repz
and
cmp
sub
lods
sub
loope
movsl
mov
xchg
or
sub
dec
pushf
fdivl
les
lds
insb
lds
ficoml
loope
cmc
test
xchg
rolb
stos
push
or
aam
pop
data16
jb
shr
add
mov
mov
inc
bound
lods
mov
loope
mov
adc
into
ss
in
cmc
ret
sbb
fildl
jle
mov
cmc
adc
iret
push
pop
mov
cmpsl
jp
pop
push
jle
xlat
cmp
ja
mov
leave
je
push
repz
repnz
mov
subb
mov
adc
add
rcll
test
scas
lret
pop
nop
mov
leave
sub
cmpsl
xchg
mov
add
repz
sbb
inc
pop
jmp
stos
adc
bound
cmp
push
mov
icebp
out
lea
xchg
out
sbb
and
pop
adc
ss
xchg
mov
stc
xchg
or
fldenv
movsb
mov
hlt
repz
nop
pop
lods
aam
add
lods
pop
call
mov
xchg
jmp
rcrb
or
and
mov
nop
int
pop
lret
leave
nop
loop
insb
je
loope
mov
cld
sub
mov
arpl
pop
add
imul
lds
fldl
or
movsl
cmpsl
ljmp
pop
fbld
lcall
cld
push
push
and
cmc
out
lret
add
ret
fsubrl
lods
leave
or
test
dec
loope
xor
sub
inc
std
pop
rclb
dec
nop
sub
adc
movl
xchg
sets
and
mov
bswap
ror
dec
pop
movsl
setns
dec
push
loope
mov
push
les
int3
fmull
bound
mov
add
inc
icebp
sub
sbb
sub
cmc
push
das
mov
and
int3
movsb
loop
lods
push
ljmp
mov
in
dec
pushf
insb
xor
or
out
adc
insb
outsb
repz
dec
xchg
popf
das
xor
lods
les
pushf
fbld
in
cmp
movsb
cmp
je
pushf
sub
outsb
lea
outsb
xor
lea
push
push
aas
scas
out
xor
sbb
out
sbb
int
daa
cs
daa
das
mov
outsl
nop
mov
das
xlat
hlt
sub
mov
mov
movsb
cmpsl
sub
xor
daa
inc
aaa
mov
lods
push
dec
jl
stos
imul
pop
add
enter
cmc
into
xor
pop
or
xchg
or
pop
fidivrl
mov
mov
adc
scas
fisubrs
fadd
mov
sub
fsubs
sbb
cmpsl
sub
mov
outsb
ds
cmpsl
xchg
and
sub
rol
aam
movsb
dec
xchg
pop
iret
not
popa
nop
lea
subb
in
sub
test
loope
in
scas
repz
inc
mov
jae
xchg
jl
aam
xor
mov
mov
notb
outsb
pushl
outsb
incl
mov
mov
pop
lret
mov
cmp
stos
or
push
xchg
loopne
shll
and
out
cmp
icebp
int
cmpsl
fs
dec
mov
popf
fcmove
push
adc
fimull
adc
push
enter
dec
adc
jbe
mov
loop
scas
loopne
or
sub
sub
sbb
pushf
fxch
arpl
pop
mov
movsb
mov
arpl
inc
mov
jno
sbb
mov
in
fwait
cmp
xor
aad
add
xchg
mov
pop
and
ror
bound
mov
je
xchg
daa
int
rclb
pop
aad
inc
push
xchg
lea
add
rcll
mov
add
test
mov
jae
pop
push
cmp
test
roll
sub
jo
fsubr
xor
adc
mov
lea
pop
lea
adc
repz
aam
lds
and
sbb
sbb
cld
rcll
lea
aam
out
mov
and
mov
roll
test
add
xchg
mov
xchg
int3
in
rol
loope
cmp
push
dec
outsb
jbe
ss
lcall
scas
xchg
inc
rolb
mov
sahf
out
add
adc
das
xchg
and
mov
jecxz
push
stos
mov
xchg
cmpsl
sbb
add
addr16
sbb
xchg
ret
lret
inc
out
adc
jnp
jns
int3
and
lock
pushf
mov
push
lods
stc
aas
outsb
repz
rorl
mov
sarl
in
test
gs
fldcw
add
xchg
lds
xchg
add
xchg
sub
test
lea
clc
pop
stos
aas
scas
mov
int3
dec
lds
pop
mov
xchg
dec
inc
push
jns
jno
dec
xor
bndstx
loop
dec
rcr
dec
outsb
out
mov
dec
loopne
mov
adc
lret
add
pop
lea
movsb
call
inc
into
pushl
sub
adc
lea
cltd
lcall
test
pusha
and
pop
loope
jge
inc
mov
ss
xchg
xor
nop
mov
jno
dec
add
cld
outsb
xchg
loop
jbe
push
outsl
je
outsb
xchg
or
mov
insl
enter
sbb
lods
incb
cmovge
jno
adc
cmp
lea
mov
out
inc
push
mov
mov
fbld
sbb
xchg
mov
jbe
pop
movsb
out
das
outsb
ljmp
cmp
fldl2e
sub
scas
in
lahf
cmp
mov
xchg
popa
int3
movsb
andl
lahf
xchg
mov
insl
pop
dec
cmpsl
inc
mov
or
movsb
jmp
pop
imul
pop
imul
jmp
leave
sub
scas
mov
pusha
nop
jbe
ja
and
es
fldcw
sub
scas
and
jnp
int3
pushf
jae
fimuls
jne
mov
addr16
in
cmpsb
inc
sbb
repz
fstps
adc
push
pop
pop
lret
xchg
inc
push
dec
cmp
mov
not
and
add
pop
sarl
mov
nop
cmpsb
cmp
pop
mov
jecxz
lahf
cmp
int3
pushf
pop
mov
xchg
pusha
int3
movsb
pop
mov
push
data16
mov
sbb
push
pop
inc
cmc
movsb
xchg
jp
sbb
mov
shlb
mov
gs
or
repz
sbb
jmp
lods
jle
loopne
scas
and
dec
cmpsl
scas
adc
popa
pop
xlat
pop
aad
cmpxchg
and
test
testl
mov
lea
cmpsb
movsb
adc
mov
dec
xlat
pushf
outsb
lea
popa
mov
inc
scas
addr16
sbb
enter
inc
add
sub
mov
cmpsl
mov
loope
mov
mov
ja
mov
mov
popf
mov
push
pop
mov
jno
mov
pop
dec
ja
mov
inc
pusha
jle
test
mov
ret
xchg
inc
mov
sub
gs
in
add
out
mov
xlat
jnp
repz
fiaddl
imul
pop
ss
sub
or
cmpsl
dec
xchg
test
sbb
int3
xchg
mov
mov
rorl
loop
jg
scas
mov
and
mov
xchg
jp
rcrb
dec
mov
push
xchg
and
xchg
stos
lds
sahf
xchg
dec
mov
and
pusha
xchg
mov
cs
call
sub
mov
push
outsb
repz
pushf
stos
jo
ret
pop
push
xor
mov
sbb
ret
and
into
sub
or
cmpsl
push
into
xchg
insl
pop
pop
lea
shll
pop
and
lods
or
insb
int3
movsb
outsl
mov
int3
in
inc
cmpsl
mov
lds
xlat
test
iret
pop
mov
outsb
cmpsl
mov
jecxz
cmpsb
jecxz
sbb
repnz
sbb
imul
clc
mov
mov
cmp
mov
dec
jecxz
pop
inc
or
mov
mov
or
test
inc
mov
ja
js
int
or
arpl
xchg
repz
idivl
or
inc
xor
adc
sbb
mov
lcall
iret
lret
enter
pop
pop
xchg
js
lea
jae
sbb
cld
clc
lea
mov
cmpsb
iret
xchg
pcmpeqw
mov
loopne
mov
int3
cmc
inc
cmpsl
rorb
sbb
add
bound
daa
pop
mov
dec
loop
pop
enter
test
lods
or
and
or
cmpsl
pop
aas
add
and
mov
movsl
or
in
mov
mov
pop
pop
xchg
mov
cmp
mov
mov
or
stc
jns
aaa
aad
dec
push
add
imulb
pushf
ss
int3
ret
int
mov
mov
mov
pop
mov
and
and
or
jns
int3
loope
scas
stos
mov
nopl
cs
push
repnz
and
mov
rcr
mov
mov
mov
je
mov
rorl
mov
loope
lds
cmp
dec
mov
imul
sbb
mov
mov
mov
cltd
mov
popa
ss
xor
int3
sbb
push
sub
vldmxcsr
mov
sbb
pushf
pushf
js
or
stos
loop
mov
xchg
xor
xchg
mov
xor
repz
int
xor
aaa
stos
pop
pop
arpl
dec
inc
sbbb
sbb
pop
dec
pop
incl
pop
xor
mov
lret
mov
mov
movl
pop
jne
lcall
cld
cwtl
push
adc
xchg
clc
iret
test
or
xor
lret
out
test
mov
mov
pop
shlb
mov
aas
mov
test
and
fdiv
leave
inc
cmpsl
pop
sbb
and
lods
scas
mov
push
arpl
mov
mov
jecxz
pop
and
mov
inc
and
cmc
jae
and
cmp
arpl
les
mov
cwtl
mov
fdivrs
mov
int3
xchg
inc
mov
fistpl
mov
and
mov
imul
mov
cwtl
cs
cwtl
loop
sub
out
arpl
push
loop
mov
int3
ror
int3
and
pop
lods
xchg
pop
loopne
out
sub
and
push
mov
mov
jbe
or
adc
add
iret
sbb
iret
sub
loop
inc
pop
bound
repz
je
xchg
cltd
call
cmpsb
adc
xlat
xor
je
mov
and
mov
and
pop
imul
ds
push
cmc
and
and
lods
sub
and
repz
loope
push
loope
lea
add
das
shrl
cmpsl
daa
sbb
loope
cmc
dec
and
mov
or
jecxz
pop
pop
cld
jne
addr16
add
icebp
jne
lret
push
mov
jmp
subl
jg
aaa
shll
fs
sbb
add
mov
aas
out
sub
or
jecxz
mov
cwtl
int
sub
sbb
fcomps
adc
sub
pop
popa
and
xor
jmp
into
inc
movsb
sahf
icebp
pop
inc
cmpsl
lock
popf
mov
xlat
pop
sbb
sbb
and
ja
call
je
pop
or
loop
ficompl
push
loopne
andb
lds
fnstsw
pop
lea
push
nop
sbb
pop
pop
addr16
pop
xchg
nop
xchg
lret
testl
cmp
mov
orb
sbb
xchg
sti
pusha
aam
push
mov
push
mov
pop
in
repz
pusha
and
sbb
hlt
pusha
into
inc
leave
popf
icebp
dec
inc
cmpsl
in
shl
mov
xlat
jns
iret
dec
pop
sub
int3
shll
das
pop
jno
aam
test
add
or
push
filds
fbld
repz
fistps
nop
aad
out
xchg
add
loopne
test
push
lahf
andb
jmp
ljmp
das
and
mov
push
add
and
addr16
pop
xlat
and
or
cwtl
pop
insb
in
pop
in
sbb
sub
lea
pushf
mov
mov
pop
and
arpl
cwtl
repz
pop
in
jge
pop
or
mov
dec
jns
or
shl
dec
lea
movsb
mov
cmp
and
out
cmpsl
jns
repz
repz
outsb
iret
pop
lret
sub
repz
and
cmp
xor
cmp
and
mov
cmpsb
int3
rcrl
sbb
sub
or
loope
sub
cmpsb
mov
hlt
scas
iret
jbe
repz
sahf
mov
sbb
pop
sub
pand
and
mov
pop
pop
popa
outsb
mov
push
stos
das
aad
scas
cs
fucomip
pop
jne
cs
jnp
cmpsl
rcrl
sub
push
out
in
out
push
pop
cwtl
dec
repz
mov
pop
out
or
pop
jb
pop
xchg
fwait
int3
movsb
imul
mov
xor
movsl
mov
cmp
pop
pop
pop
lock
outsb
cmovns
or
movsl
adc
mov
repnz
xor
movsl
lock
in
cmp
inc
daa
xchg
gs
xor
sbb
pcmpeqw
sbb
repnz
sub
mov
call
and
sbb
pop
add
cwtl
repz
js
pop
pop
mov
das
lods
adc
pop
mov
add
cmp
pop
divb
je
movsb
inc
in
mov
into
pop
out
mov
arpl
mov
pop
pop
dec
lahf
nop
movsb
mov
pop
ret
movsb
jecxz
je
xchg
jge
jg
aad
fsubrl
mov
pop
imull
and
lods
cmc
pushf
dec
sub
pop
adc
dec
fldcw
out
mov
icebp
pop
pop
aas
scas
call
or
pop
mov
pop
mov
lods
add
stc
or
inc
and
pop
and
lea
fcomp
aas
and
nop
test
pop
dec
fists
sub
pop
sarb
movsb
fnstenv
jne
sarl
ja
jno
dec
sbb
fmull
mov
movsb
sub
aam
sbb
aam
add
dec
aad
lahf
cs
pop
xor
out
mov
hlt
xchg
loop
adc
pop
push
mov
push
mov
into
sbb
xor
aas
sbb
pop
pop
xor
mov
dec
fstps
adc
sbb
repz
loope
adc
cli
or
movsb
mov
test
dec
mov
cmpsl
es
imul
jo
movsb
push
je
int
fs
xor
pop
cmpsl
out
outsb
pavgb
xor
mov
lcall
int3
das
jmp
mov
pop
mov
call
mov
xor
jnp
xchg
pushf
int3
movsb
jne
bndstx
push
imul
rcrl
xor
jmp
pop
lds
movsb
imul
push
lret
pop
inc
daa
mov
ss
lods
lea
out
dec
hlt
shl
fnstenv
mov
loop
push
arpl
inc
cltd
xor
cs
dec
call
imulb
mov
movsb
jne
adc
ss
mov
iret
pop
or
dec
add
jmp
mov
pop
mov
lods
mov
pop
lea
pop
imul
xchg
sbb
pop
cmpsl
lea
pop
in
dec
hlt
shl
sbb
mov
loopne
push
arpl
cmp
xor
cs
dec
call
xor
xchg
mov
movsb
jne
adc
mov
add
cwtl
fmull
push
mov
cwtl
xor
xor
lret
insb
jbe
imul
das
pop
ljmp
sub
pop
sarl
push
inc
adc
mov
pop
push
cmpsl
ljmp
es
in
xor
roll
pop
call
test
movsb
pop
lea
loope
mov
or
les
xchg
sub
leave
cmc
dec
lret
xchg
jne
orl
lea
sub
mov
sbb
xor
in
out
fstps
pop
push
sbb
dec
push
jmp
pop
jle
sarl
sub
vcvtps2pd
in
pop
jge
mov
sbb
cmp
loop
jns
pop
pushf
in
add
push
dec
mov
xor
cmp
mov
sbb
add
jmp
je
icebp
dec
pop
js
mov
xor
lds
hlt
les
and
addr16
out
sub
jo
pop
mov
add
xchg
sbb
push
dec
fwait
outsl
push
sarl
xchg
sbb
jnp
and
inc
loop
fcoms
lret
lock
lods
add
adc
dec
das
insb
push
fiadds
call
pop
bnd
inc
mov
and
pop
inc
xor
scas
out
in
mov
in
sbb
repz
lods
ss
es
inc
mov
cmp
xor
jg
and
shrb
sub
mov
sbb
shl
adc
test
dec
dec
loop
push
jmp
xor
mov
dec
lods
icebp
movsl
mov
negl
xor
xor
sub
and
sbb
mov
repz
dec
jl
cli
test
mov
or
insb
lods
cld
pop
xor
insl
lds
pop
shll
xor
push
rolb
dec
fisubrs
hlt
cltd
push
or
mov
pushf
not
les
pop
sbb
and
mov
pop
mov
roll
outsb
mov
sahf
mulb
xchg
aad
pushf
and
insb
dec
fwait
xchg
sub
jne
js
add
dec
xchg
test
call
xchg
push
ss
and
sbb
cltd
mov
ret
mov
popf
imul
sbb
sahf
lock
hlt
fcmovne
loopne
sub
sbb
cmc
add
xor
xor
cltd
std
dec
popa
dec
ret
push
les
push
mov
pop
lea
aaa
out
and
jmp
dec
mov
cmp
add
sbb
pop
cmc
xor
or
cltd
dec
sbb
mov
jb
lock
and
clc
xor
jge
cltd
jns
dec
and
cmp
loope
cs
fdivl
jbe
je
fistpll
imul
icebp
xchg
xchg
rorl
adc
pop
cmc
outsb
or
lret
shr
inc
jmp
push
dec
sbb
push
sbb
push
xchg
inc
lock
add
sbb
std
mov
push
ret
xlat
jp
mov
mov
push
fisubrl
cmp
in
pop
es
pop
int3
and
pop
stos
xbegin
faddl
jge
xchg
out
pop
jle
add
fidivrs
mov
icebp
push
sarl
shll
and
mov
lock
sbbb
lahf
sbb
loope
daa
mov
lods
mov
jecxz
outsl
out
shll
clc
push
data16
test
cld
mov
mov
aam
lods
xchg
sbb
or
and
add
adc
xchg
stos
lods
sbb
sbb
xor
inc
aas
cmp
cltd
je
cmc
test
cwtl
sbb
xor
sbb
cmpsl
sbb
js
or
popa
aaa
dec
cmp
ljmp
ljmp
ja
hlt
jge
mov
mov
fmul
shll
pop
outsb
rcrl
mov
jecxz
incl
mov
add
insb
cs
dec
pushf
push
sbb
test
movsb
sub
fcoml
cmpsl
jbe
xchg
inc
sbb
jmp
jmp
xor
xorb
add
adc
and
mov
fldcw
mov
test
pop
jmp
sbb
cmpl
int3
lea
sbb
fcompl
sbb
mov
and
xchg
rcr
push
out
jp
fcmovnbe
andb
call
fldt
out
sub
scas
or
mov
loop
dec
cld
fwait
sbb
cli
int
fwait
xorl
clc
sub
cltd
xor
sub
sbb
push
jae
decb
dec
xchg
add
mov
call
jae
mov
or
cmpsl
sbb
or
dec
ret
xor
cltd
outsb
pop
lahf
lods
add
push
sbb
xrelease
push
je
lods
xchg
call
mov
mov
add
jmp
negl
repnz
xchg
repnz
js
and
cmp
pop
sbb
add
sub
sub
ret
mov
xchg
mov
cmpsl
xor
lea
lods
push
mov
fsubrl
pop
mov
mov
mov
xor
mov
inc
imul
out
mov
push
sbb
js
mov
jb
mov
jb
push
sbb
jmp
jl
shll
out
in
and
push
add
outsb
mov
mov
and
xor
out
sbb
push
lods
mov
lcall
sbb
add
sub
and
push
cmpsl
xchg
test
repz
fs
sbb
mov
mov
je
xor
mov
imul
mov
pmaxsw
mov
int3
mov
addr16
mov
push
jno
repz
jno
repz
cltd
popf
jno
lods
cmp
jb
jecxz
je
jno
push
ss
dec
mov
jge
cs
cmp
outsb
incl
xor
inc
sbb
xchg
scas
mov
dec
cmpsl
jle
rep
mov
jnp
loopne
cmp
pop
aad
sbb
sbb
cmpsl
mov
mov
int3
mov
push
xor
repz
mov
repz
mov
mov
cmpsl
daa
ds
idivl
dec
cmpsl
adcb
mov
jg
lock
cmpsl
cs
cmpsl
stc
jo
xchg
sbb
mov
dec
repnz
push
movq
fsubrl
stos
xor
and
out
enter
jo
lds
fsubrl
xchg
sub
dec
popa
push
dec
push
inc
das
sub
cmpsl
inc
das
push
cmpsl
iret
das
das
mov
insl
lods
js
jbe
cmpsb
pcmpeqd
rol
cmp
shr
sbb
fwait
mov
mov
xchg
sahf
iret
jne
jbe
adc
fiaddl
mov
lds
pop
adc
int
lds
mov
dec
jae
lret
inc
or
pop
aas
subb
arpl
xor
sbb
dec
scas
inc
dec
inc
cmpsl
fsubs
and
mov
cmp
lret
lds
in
sbb
push
mov
ja
cld
icebp
ret
in
mov
ror
clc
pop
das
shrb
hlt
mov
and
ja
mov
into
mov
ret
mov
pop
sbb
adc
int
inc
inc
imul
pop
in
cmpsl
ja
je
sti
sub
cmp
aad
sub
insb
mov
lods
imul
sub
inc
add
imul
das
cmc
mov
xchg
mov
xor
jbe
sbb
sub
negb
ss
mov
jne
mov
ss
repz
or
mov
dec
sbb
insb
or
add
cmp
push
dec
std
out
ja
sbb
pusha
repz
iret
mov
lds
mov
mov
sub
xrelease
bound
dec
sbb
shlb
int3
adc
cmp
repz
or
sub
mov
bound
mov
test
or
or
lds
cmp
mov
mov
pop
lahf
iret
mov
dec
out
push
mov
jg
mov
lcall
mov
subl
xchg
test
mov
es
sub
shrl
je
movsb
out
xor
dec
scas
mov
pop
enter
leave
outsl
lahf
jmp
jbe
and
lea
jmp
push
push
and
jnp
aam
sbb
push
xor
mov
xor
inc
sub
mov
hlt
fmul
dec
sbb
cmc
cli
test
jbe
idivb
aam
mov
or
fs
xor
sub
das
insb
mov
inc
add
lods
pop
cmc
les
pop
leave
in
sbb
mov
pop
imul
fs
mov
mov
mov
sub
add
rorl
cmp
xchg
daa
mov
pusha
bound
ja
jne
add
lods
movsb
sbb
mov
rclb
add
xor
jae
add
dec
push
imul
mov
test
xor
and
xor
push
push
xor
inc
orb
push
mov
jge
sbb
mov
xor
mov
shl
orb
sar
int3
and
hlt
jno
insb
push
inc
mov
popf
mov
dec
icebp
hlt
orb
sub
sarl
mov
mov
pop
inc
rep
dec
add
in
mov
bound
jbe
mov
mov
in
lods
cmpsl
mov
lea
sbb
mov
test
arpl
add
push
mov
inc
jp
iret
push
sbb
je
orb
cmp
or
jecxz
addb
mov
push
call
loopne
lea
repz
repz
inc
jno
icebp
ss
out
cmpsl
add
loopne
movsl
repz
push
mov
mov
or
out
xorl
test
mov
adc
aam
cmp
pop
mov
jno
in
xor
xor
out
outsb
iret
jge
jbe
fcmove
dec
imul
jns
add
sub
jp
shrd
movsb
pop
das
sahf
out
outsb
iret
iret
sub
adc
loope
sub
test
subb
xor
mov
iret
inc
ljmp
call
push
mov
rol
ljmp
jne
mov
pop
aas
mov
cmp
in
and
fdivrs
lods
out
lahf
popa
out
dec
lea
inc
ret
and
stos
sub
sub
orb
or
lcall
sub
jno
je
movsb
pop
in
ljmp
add
push
mov
push
sub
adc
mov
mov
lea
fimull
sub
fists
lods
ljmp
arpl
push
lds
and
jmp
sbb
push
and
cmpsl
fsubrs
xchg
pop
pop
mov
cmp
xlat
mov
jno
adc
mov
inc
repnz
mov
push
mov
in
leave
cmc
jecxz
jmp
xchg
xor
in
in
loopne
adc
jmp
out
ljmp
jmp
call
inc
mov
mov
test
cmpb
adc
iret
mov
test
cmpsb
inc
dec
lods
and
cwtl
je
inc
imull
lahf
ror
cmp
repz
repz
imul
sub
icebp
imul
call
or
push
inc
pop
in
adc
adc
mov
and
ret
inc
scas
dec
mov
xor
das
push
xchg
ret
pushf
lea
sub
popa
cmc
dec
hlt
sub
pop
in
sbb
int
sbb
mov
in
inc
dec
hlt
loopne
aad
fs
sub
je
shrb
call
cmp
lret
call
ljmp
mov
fstpt
xchg
inc
and
pop
insl
mov
dec
lods
test
mov
jecxz
mov
lea
fimull
je
call
mov
ss
pop
push
and
push
push
ret
and
jecxz
push
stc
cmc
pop
bsf
test
in
int3
negl
outsb
and
push
daa
xor
pop
adc
aas
daa
int3
mov
inc
cmc
fnstenv
mov
daa
mov
adc
fcmove
add
imul
pushf
sahf
cvtpi2ps
dec
pop
imul
imul
xchg
mov
cmp
mov
movsl
daa
dec
outsb
xchg
cmpsl
loop
mov
push
ds
pop
cmpsl
outsb
mov
mov
or
sbb
jecxz
mov
outsl
mov
and
xchg
xchg
sbb
mov
psllq
les
add
jb
xor
psllq
and
inc
fisttps
sbb
outsl
or
jne
gs
sbb
ret
cs
lods
cs
pop
test
les
adc
and
in
jge
pop
cmp
es
loopne
cmp
sti
inc
pushf
inc
dec
sbb
push
mov
in
xor
loopne
scas
jp
pslld
dec
xchg
jge
push
add
out
outsb
adc
movd
mov
inc
pop
push
pop
rcrl
push
jne
dec
pop
bound
lods
loopne
mov
sub
mov
mov
repz
je
movsb
mov
mov
cmpsl
arpl
fstps
inc
imul
add
sbb
daa
jnp,pt
aam
jo
shrl
push
or
xor
mov
dec
xchg
popa
push
loop
mov
mov
lea
insl
popa
jg
cld
push
das
mov
jns
stos
les
pusha
fcom
dec
cltd
jl
mov
enter
sub
sub
cmpsl
mov
daa
pushf
cmp
mov
jae
dec
cltd
jp
hlt
dec
mov
in
jno
nop
in
or
xor
nop
push
pusha
xchg
jecxz
in
shl
dec
cltd
mov
mov
fcomip
je
hlt
cmp
or
scas
jo
nop
push
pusha
xchg
pop
sbb
shrl
cltd
lret
stc
mov
pop
repz
hlt
mov
lea
sbb
cmpsl
mov
enter
lock
jnp
add
dec
fsubs
cmp
ljmp
mov
sub
and
sub
cmpsl
mov
push
adc
aaa
xchg
jbe
sbb
fcoms
sub
stos
jmp
dec
jne
jo
mov
ret
mov
rcrb
icebp
negl
lods
mov
fucomip
cmpsb
jo
or
ljmp
pop
xor
rolb
mov
and
xlat
lods
and
ds
mov
mov
ret
mov
call
mov
sbb
sub
daa
popa
lock
stos
repz
stos
cmp
mov
and
jne
call
add
rolb
cmpsl
push
mov
pusha
mov
repz
outsb
pop
adc
aaa
xchg
fcmove
inc
xchg
pushf
jae
mov
lret
fmull
fcoml
data16
clc
sbb
ss
push
add
aas
xlat
ljmp
cmp
lds
inc
mov
mov
fimull
sbb
pushf
out
jb
stc
add
sbb
fadds
cld
jne
pusha
iret
std
add
repnz
movsb
add
lds
dec
aaa
inc
sub
stc
jge
cli
or
jbe
xlat
out
stos
outsl
or
add
push
mov
sub
dec
movsb
fisttps
cmp
jl
adcb
imul
mov
js
stc
nop
mov
jae
or
sahf
dec
popf
mov
inc
out
test
inc
dec
adc
shlb
lahf
inc
into
mov
cwtl
pop
cltd
dec
repz
cmpsl
sbb
mov
aad
imul
jg
nop
mov
mov
outsb
les
das
stos
out
outsb
push
lret
mov
sbb
ucomiss
pop
test
incl
push
lahf
push
bound
jne
pop
jmp
pusha
adc
and
adc
ss
sbb
mov
pusha
pop
adc
inc
or
out
xchg
inc
and
shrl
mov
mov
cld
add
and
add
dec
sbb
enter
xor
jnp
sub
repz
sbb
push
rcr
mov
xchg
add
mov
push
cmp
shlb
orb
pushf
sbb
mov
jecxz
iret
or
jecxz
sbb
jg
in
aad
pop
pusha
xchg
cs
cmp
aam
xlat
pushf
scas
sub
and
sbb
aas
ljmp
push
loope
mov
in
les
je
cmp
insl
ljmp
xchg
and
call
jns
mov
inc
fs
movsb
decl
cwtl
mov
mov
stos
movsl
subb
into
push
push
and
shll
sbb
xchg
pop
lea
push
nop
cld
pusha
loopne
repz
cmp
lahf
xchg
nop
lahf
xchg
data16
xchg
pushf
push
mov
sbb
iret
test
mov
lcall
inc
sar
data16
inc
rolb
mov
jbe
hlt
inc
xchg
leave
pop
jl
dec
cmp
in
push
fwait
sarl
push
cmp
push
rolb
push
outsb
jmp
mov
aam
jg
scas
int3
and
xchg
movb
dec
rclw
orb
ret
iret
jae
push
psubq
mov
movsl
inc
fistps
mov
xchg
pushf
pop
mov
sbb
iret
sahf
xchg
push
mov
sti
cmpsb
mov
stos
add
bound
mov
negl
cmpsl
or
inc
mov
lods
lret
jbe
inc
inc
stos
add
lahf
sbbl
out
cmc
in
mov
shl
xor
repz
incb
test
es
cwtl
dec
adc
aam
in
lcall
dec
iret
inc
shrb
negl
test
repnz
or
gs
fsubr
stos
movsb
test
or
cs
sbb
mov
cmp
int
inc
pusha
or
cmc
dec
inc
dec
cwtl
repz
jle
lret
scas
inc
lcall
cwtl
pop
and
fwait
xchg
cmp
leave
mov
mov
add
shl
dec
sbb
add
je
adc
jecxz
dec
push
loope
loope
outsb
out
add
cmpsl
xchg
les
loop
mov
cwtl
sbb
aas
xor
inc
hlt
mov
out
les
add
push
outsb
iret
adc
and
shll
dec
movsb
outsl
fistpll
rcll
adc
test
xchg
out
push
pop
xlat
repz
add
sub
inc
addr16
or
cmp
sbb
lods
in
inc
jnp
incb
dec
mov
call
and
xor
xor
add
sbb
je
ret
mov
xlat
scas
stos
hlt
or
cmp
sarl
mov
push
cltd
inc
dec
shl
mov
stc
jnp
sar
sarl
mov
and
fnstsw
pusha
and
pop
mov
arpl
xchg
adc
rorl
dec
xchg
rcrb
daa
ds
push
pusha
shll
push
cmp
dec
adc
jmp
mov
cli
enter
cmpsl
cmp
mov
ljmp
dec
xchg
pop
or
negb
mov
sbb
mov
pop
pusha
xchg
insl
mov
or
repnz
imul
nop
adc
pushf
aam
cltd
jg
ljmp
sarl
or
jne
jmp
mov
and
movl
repz
and
sub
mov
scas
vpgatherqd
adc
fists
shrb
scas
loopne
sbb
push
popa
pop
inc
je
in
dec
lods
int3
jge
ffreep
mov
lods
jne
cmp
shlb
lret
mov
dec
dec
pop
cwtl
mov
aad
out
mov
lods
ljmp
out
add
cwtl
push
pushf
push
jg
pop
push
dec
fnsave
sub
jae
and
popa
pop
mov
addb
push
xchg
push
ja
mov
pushf
push
insb
pmulhw
repnz
mov
mov
shlb
pop
lret
mov
in
test
scas
cmp
fildl
push
inc
lea
sbb
adc
int
and
xchg
imul
sbb
inc
dec
pop
jae
mov
mov
imul
jge
dec
xchg
xchg
and
sub
insl
mov
popa
ficompl
xchg
popa
cmp
sub
mov
daa
in
inc
inc
push
sbb
push
xchg
into
paddsb
add
in
pop
hlt
jns
subl
jns
shr
mov
fmuls
jns
mov
inc
xor
cs
xchg
mov
add
jns
cmc
gs
xchg
mov
or
jge
les
test
int
sti
test
fsubrs
dec
xor
cmpsl
lds
aad
jp
and
cmp
pop
rcr
xchg
out
test
xchg
scas
int3
fdivl
mov
adc
cmpsl
ret
inc
mov
pushf
push
or
cmpsl
enter
dec
outsb
add
mov
arpl
stos
sahf
in
mov
dec
lods
lret
xchg
mov
mov
fstsw
daa
push
hlt
ret
mov
mov
jl
xor
mov
ficomps
stc
rclb
stos
rcrb
stc
xor
add
sub
xchg
mov
mov
jno
ret
adc
scas
add
mov
pop
cmpsb
add
jg
cmpsl
clc
adc
mov
mov
pop
or
out
mov
inc
daa
push
cmpsb
jb
pop
clc
jge
dec
sub
sub
vpsubb
jp,pn
cmpsl
xchg
out
sbb
add
mov
cmc
mov
insl
test
jne
test
mov
lcall
test
jae
add
mov
dec
mov
nop
sub
jmp
or
in
adc
xor
pop
mov
outsb
enter
xchg
pusha
push
inc
mov
xchg
inc
sbb
jg
incl
cmc
loope
out
add
in
push
pop
sub
push
js
insb
mov
rcrl
mov
mov
xchg
or
lods
pop
dec
out
and
inc
add
dec
push
sub
nop
inc
cli
and
aaa
cmp
push
lcall
xor
aaa
sbb
notb
ffree
dec
push
pop
loop
bound
das
stos
aaa
adc
out
enter
mov
lds
scas
cmpsb
push
into
sbb
movsl
ja
mov
xorl
aaa
push
outsb
add
pop
insl
pop
pusha
fstpl
inc
sbbl
pop
xor
div
negl
jae
jns
aas
or
add
sbb
sbb
out
insb
repz
scas
cmp
or
or
ret
test
ret
xor
mov
out
mov
mov
and
daa
or
fsubs
lds
adc
es
xchg
mov
hlt
pop
enter
sub
int
js
sbb
pusha
enter
in
mov
sbb
shrl
sub
or
mov
aaa
fsts
je
cmpsl
xchg
pusha
je
mov
setno
ret
lds
cltd
xchg
push
cmpl
mov
mov
mov
dec
test
mov
popa
mov
inc
lds
mov
jg
repz
xchg
stos
lds
xchg
stc
out
not
add
push
pop
xchg
cmp
push
mov
int3
inc
ret
inc
jae,pt
mov
add
sub
stc
jmp
fstps
fildl
sbb
ds
and
and
ja
jno
push
add
or
clc
aas
insb
cmpsl
mov
int
pop
mov
jle
or
mov
dec
sub
add
fisttpl
xor
fsts
mov
adc
inc
enter
bound
pop
adc
dec
jmp
cmpsl
ret
mov
sbb
pop
xchg
cmpsb
add
adc
aad
add
lea
jb
repz
loopne
inc
push
add
lcall
lods
jmp
repnz
shll
xlat
pushf
xor
adc
mov
into
dec
leave
sub
dec
les
dec
pop
mov
orl
ret
and
imulb
fsubs
sbb
mov
xchg
inc
ljmp
orl
ret
mov
mov
movsb
out
xchg
xor
pushf
call
outsl
mov
pop
fldlg2
fucom
xchg
xchg
and
pop
ret
inc
iret
push
pushf
xchg
mov
int3
cmpsl
psubusw
jl
add
aas
nop
mov
xorl
sbb
and
add
or
pop
das
in
xlat
xor
mov
pop
mov
mov
cwtl
or
cmp
mov
sbb
push
xchg
imul
mov
push
mov
sub
fstpl
daa
mov
mov
fldenv
ret
mov
outsl
fidivs
sbb
lea
mov
pushf
shlb
repz
call
std
gs
mov
sub
mov
lea
xlat
lods
scas
rorb
mov
insb
bound
pop
jmp
stos
testl
mov
out
pop
mov
mov
lahf
mov
adc
pop
ret
aas
cmpsl
adc
cmp
mov
ror
pop
sub
mov
xor
adc
sbb
out
mov
orl
popaw
test
iret
testl
sub
repnz
ss
in
test
rorl
fcoml
fdiv
push
popf
xor
insl
insb
daa
mov
in
xchg
ss
xchg
ja
mov
in
inc
fsubrl
data16
stos
lret
fadds
pop
sarl
push
lock
shlb
lea
ja
leave
out
jge
pop
ret
push
loope
jb
mov
add
jge
fadds
push
enter
push
mov
sbb
xchg
pushf
jo
cmc
nop
cmp
les
jecxz
jmp
adc
stos
add
lea
cmp
jle
mov
popa
lods
jno
movsl
mov
jl
mov
in
mov
inc
mov
repz
add
pushf
ret
xor
outsl
cmp
hlt
fcomps
push
push
pop
pop
push
xor
fdivs
pop
daa
mov
loopne
addl
pop
mov
cld
sbb
sub
shrl
fsub
or
es
cmpsl
adc
xor
mov
je
jp
jae
jge
aad
dec
ret
mov
inc
aad
mov
pop
lods
push
rolb
mov
scas
movsb
jmp
mov
or
hlt
sbb
pop
xchg
xor
leave
ret
fstp
pop
dec
int3
sub
jbe
dec
push
adc
ret
jne
mov
adc
loop
les
jae
aad
mov
mov
lds
enter
arpl
icebp
jle
xchg
rolb
push
push
add
jb
ds
test
mov
sarl
in
adc
cmp
cmpsl
cmpsl
mov
or
lds
jg
insl
js
fcomps
mov
add
xchg
push
pop
mov
fldcw
xor
pop
and
or
cmpsl
outsl
mov
adc
sbb
das
jmp
imul
lds
cwtl
sbbb
out
loope
pop
add
xor
test
xchg
fxch
rcll
mov
jo
repnz
nop
mov
mov
xor
loope
outsb
subl
rcrl
sub
sbb
imul
xchg
out
ror
push
lock
imul
mov
mov
aam
shrl
std
sbb
out
mov
popa
mov
fisubs
push
xchg
xor
adc
fwait
out
int3
or
dec
xlat
data16
loope
test
cltd
push
xor
repnz
cmp
loope
lods
insl
pop
push
inc
dec
add
icebp
movb
cld
sbb
pusha
popf
xchg
roll
and
xor
nop
mov
rcrl
cmp
mul
jle
mov
mov
stos
and
jns
subl
sbb
jb
stc
xor
insb
push
bound
dec
or
outsl
int
pushf
mov
loop
stos
adc
nop
jp
xchg
sahf
mov
push
mov
sarb
test
fidivrs
xchg
dec
dec
cltd
and
lds
popf
cmp
in
loop
loope
jae
enter
mov
scas
add
xlat
sti
add
sub
add
gs
cli
loope
std
fwait
outsl
fsts
mov
jo
mov
sbb
and
mov
or
mov
cmp
pop
pop
fstps
cltd
dec
sbb
aaa
xor
mov
dec
jnp
inc
dec
push
cmp
sbb
daa
sbb
dec
movl
lds
or
mov
mov
push
xchg
sub
push
push
hlt
mov
pop
movsl
push
movsb
out
adc
mov
or
out
push
sub
or
ja
sub
push
shl
ljmp
into
xchg
mov
mov
xor
shll
inc
aad
call
pushf
ret
insb
sub
jmp
sub
fstpl
add
push
push
jno
mov
push
les
notl
fildll
repnz
push
imul
pop
subb
adc
out
mov
sti
cmp
sbb
dec
or
lods
add
push
xchg
mov
xchg
repz
mov
icebp
dec
add
mov
in
scas
out
xchg
push
or
loope
and
push
sbb
in
jbe
pop
bound
sbb
stos
std
mov
cltd
outsb
add
adc
inc
pop
adc
add
mov
insb
int3
dec
mov
lea
or
xchg
push
xor
lods
jb
in
sbb
dec
shl
inc
insl
sub
stos
add
aas
enter
insb
pushf
test
lods
push
xchg
sbb
sub
repz
push
call
mov
jecxz
or
push
push
sub
add
xchg
mov
or
push
lret
dec
ljmp
and
mov
add
mov
jmp
inc
mov
mov
call
ret
fdivl
in
and
jo
ret
pusha
inc
or
dec
andl
sub
pushf
cmpsl
ret
push
loope
cmp
xchg
xor
pop
mov
les
rol
icebp
adc
lods
cmp
sbbb
ret
pop
in
mov
into
xorps
push
xlat
add
adc
stos
push
stos
sbb
xor
mov
je
push
aaa
and
scas
cs
push
adc
mov
push
mov
sbb
aas
lds
add
xchg
jecxz
adcb
cltd
pop
adc
hlt
mov
std
dec
or
push
add
or
rorb
in
inc
popf
out
and
shl
subl
pusha
shr
into
xor
dec
push
xchg
xor
je
rcl
fildl
jecxz
shrb
aaa
dec
pop
push
cmpsb
loop
int3
sub
das
jmp
loop
sbb
dec
stos
hlt
pop
clc
xchg
adc
lahf
cld
nop
mov
jbe
rclb
cmp
in
stos
movsb
or
aam
das
jbe
js
cld
frstor
nop
nop
enter
xchg
adc
lods
cs
sbb
fstpl
cmp
std
ljmp
fwait
push
imul
cvttps2pi
sbb
pop
cmp
push
xchg
gs
sarl
pop
roll
cmp
sbb
jle
movsb
lret
xor
jmp
mov
aad
aaa
stos
push
leave
test
lea
subl
jmp
aam
adc
dec
or
sbb
mov
cmp
pop
lret
jb
daa
sti
cmpsb
dec
xor
mov
aad
popa
idivl
repz
iret
and
jg
incl
hlt
dec
add
rcr
pop
add
aam
out
push
out
loopne
out
stos
hlt
idiv
cmp
out
push
out
iret
iret
ret
jmp
and
xor
sar
sub
out
shrl
adc
inc
cmpsl
imul
or
in
test
aas
sub
xor
shl
lods
imul
stos
and
scas
test
mov
push
into
dec
fldl
push
cwtl
repz
dec
xchg
in
into
push
mov
in
dec
out
rclb
mov
hlt
iret
fidivl
push
dec
mov
cmpsb
push
push
in
outsb
pop
mov
sbb
daa
test
fsubs
sbb
xchg
xchg
dec
or
lods
xor
pushf
mov
mov
stc
xchg
mov
sahf
mov
xchg
test
add
pop
dec
xchg
cmpsl
js
push
mov
subl
push
xchg
hlt
sbb
iret
daa
shll
test
movsb
test
repz
mov
push
and
and
mov
mov
pop
clc
idiv
adc
sbb
jg
pushl
mov
arpl
stc
push
out
mov
test
repz
mov
push
add
mov
pushf
mov
scas
movsl
push
and
pop
or
sub
dec
inc
insb
test
das
aad
lret
or
pop
sbb
pop
popf
push
ljmp
fmull
jp
or
jb,pn
jge
cmpsb
cmp
lds
push
test
aad
loop
outsl
ret
insb
sti
add
push
divl
push
mov
pop
test
fisubs
ss
pminsw
lods
lea
xor
mov
xor
loopne
lret
cli
add
fadds
add
or
jb
idiv
popf
inc
lods
les
out
fwait
jnp
stos
dec
push
testl
lcall
lods
in
mov
stos
xor
ret
movsl
add
aam
pop
ds
int
cs
cs
mov
fwait
dec
popf
lods
xlat
sar
ja
call
sbb
pop
stc
mov
popf
mov
es
sbb
or
push
ja
adc
rcl
out
in
pop
mov
rclb
sbb
ffreep
ja
lret
sbb
pop
mull
push
xchg
out
out
bswap
jne
insb
xlat
mov
test
movsl
in
arpl
cli
idivb
aas
arpl
loopne
mov
stos
mov
sub
xor
pop
andl
sbb
mov
xchg
cmp
sub
lods
mov
fisubrs
idivb
mov
mov
je
xchg
inc
int
ret
xchg
add
insb
pop
mov
lods
out
mov
mov
rolb
push
imul
xor
dec
call
push
les
out
xor
lods
inc
xchg
mov
stos
stos
subl
in
repnz
xchg
fdivl
sub
arpl
call
xlat
mov
pushf
mov
mov
aam
pop
test
call
int3
movsl
scas
xchg
mov
movsl
jb
pop
xor
push
cmc
clc
outsl
mov
fcoms
pop
push
xchg
and
xlat
mov
out
push
nop
cmpsl
mov
mov
mov
xchg
adc
rolb
shlb
aam
jbe
test
adc
xchg
int3
imul
nop
pusha
int
test
xlat
jno
dec
adc
subb
push
imulb
add
inc
and
mov
sub
hlt
inc
outsb
pop
adc
xor
mov
push
mov
fiadds
ficoms
movsb
xchg
icebp
enter
mov
mov
push
decb
aas
rorb
xor
cmp
dec
and
das
jecxz
insb
mov
pushf
push
mov
dec
or
fwait
stos
mov
sbb
mov
sahf
pushf
call
dec
sbb
xchg
inc
out
jecxz
add
adc
cwtl
xchg
sub
scas
and
nop
push
fistl
aad
iret
int
mov
shlb
lds
xchg
js
mov
call
jns
push
lcall
pop
inc
cmp
mov
sbb
sbb
cmc
popa
xlat
mov
repz
push
popf
icebp
ljmp
in
pop
stc
mov
ds
sahf
mov
mov
leave
pop
push
mov
movsb
mov
stos
aas
aam
je
test
daa
in
jmp
lret
je
push
and
adc
mov
sti
adc
pop
fidivs
add
push
aad
pop
and
enter
mov
mov
cmp
sti
inc
loop
gs
mov
divb
int
dec
mov
mov
xchg
movsb
mov
add
mov
fmulp
or
jbe
mov
subl
cmc
in
dec
leave
sbb
bnd
or
push
xor
pop
std
daa
pop
insb
jle
aaa
jle
jbe
ljmp
mov
mov
fbstp
push
sbb
leave
fistl
or
or
dec
mov
mov
dec
or
scas
mov
test
jle
aaa
mov
mov
dec
shr
in
sub
in
lods
mov
sub
stos
int3
in
xor
test
jo
mov
push
outsb
das
nop
lcall
sub
pushf
mov
int3
lods
cmpsl
sbb
jb
inc
sarl
dec
lods
cmpsl
sub
add
fcmovnbe
xor
xlat
cwtl
cmp
sbb
idivl
fwait
ds
pop
xchg
jp
inc
push
push
mov
mov
mov
dec
xchg
addb
pop
adc
andl
daa
xor
aad
loopne
inc
enter
or
add
mov
pop
mov
lea
stos
mov
or
xchg
icebp
nop
lods
adc
adc
lds
or
mov
int3
sub
xchg
leave
pusha
loopne
pushf
pusha
repnz
lcall
dec
cltd
push
dec
into
and
lret
cs
mov
movl
aad
adc
iret
mov
add
or
mov
ret
aaa
dec
lcall
or
mov
mov
mov
mov
fwait
dec
stos
mov
lret
xor
dec
cs
aad
lds
sub
cmp
xchg
sahf
dec
cs
insb
dec
outsl
mov
or
mov
mov
and
pop
sbb
jg
incl
lods
mov
inc
dec
adc
adc
sub
xor
shl
sub
int3
dec
outsb
out
cmpsb
test
dec
lds
jmp
and
mov
xor
mov
mov
arpl
std
das
mov
in
mov
or
pop
pop
mov
xor
mov
loope
dec
and
push
add
mov
ret
ror
and
movsl
mov
and
sbb
sahf
das
pop
dec
mov
es
inc
mov
mov
add
adc
lods
cld
gs
fistps
cmc
js
out
xchg
lods
xlat
xchg
into
adc
sub
ljmp
mov
sbb
stc
jb
cmpb
scas
pop
lods
dec
cmpl
adc
cmp
mov
xrelease
inc
js
out
jp
xor
iret
fadd
push
xor
es
pop
dec
mov
cmpsb
inc
adc
js
push
xchg
fs
jg
incl
or
cs
sahf
dec
pop
mov
stos
int3
movsb
mov
stos
or
leave
jb
adc
repz
mov
lcall
gs
les
jns
fisubl
test
and
mov
cmp
mov
je
jecxz
je
dec
es
lods
push
or
xor
sbb
xor
incl
incl
push
jp
dec
pop
push
sub
je
int
lods
popa
int
repz
pop
repz
push
rcrl
lea
pop
lea
xor
ds
or
cli
dec
popf
fs
je
dec
data16
cwtl
je
dec
gs
shl
loop
loopne
cmc
lcall
arpl
mov
or
lea
and
int3
scas
jno
int3
add
adc
int3
dec
popf
shll
dec
sub
mov
cmp
aas
mov
push
mov
jae
sub
mov
jnp
inc
push
hlt
mov
xor
pop
lea
iret
call
dec
rcrb
movsl
scas
lods
ljmp
int3
int
cli
xlat
mov
jp
das
and
dec
add
dec
mulb
or
adc
cmp
hlt
dec
subb
inc
out
rorb
or
cs
out
ja
cmpsl
jge
or
cmpsl
mov
repz
lods
into
xor
dec
sbb
fisttps
stos
mov
jecxz
mov
cli
shll
adc
jmp
stos
loopne
hlt
pushf
addl
insb
leave
adc
mov
out
or
in
das
call
movsl
and
sbb
shr
stc
fwait
xchg
lds
pop
mov
addb
xchg
adcl
lret
imul
pushf
cmpsb
and
imul
and
sbb
mov
lretw
xchg
imulb
jne
aad
fmulp
mov
arpl
push
pop
aas
push
mov
cmpsl
lahf
add
add
jnp
fnstsw
ja
fs
clc
xor
xchg
adcb
push
xor
pop
xchg
and
mov
pop
and
push
ror
mov
or
lds
out
insl
xchg
cmp
movsb
scas
mov
adc
mov
xchg
js
arpl
push
shrb
sbb
daa
mov
imul
jl
lret
cmc
mov
pop
aas
jle
lea
lea
pop
das
hlt
clc
dec
sbb
scas
stos
jge
mov
iret
jae
xlat
loopne
arpl
inc
and
xor
iret
gs
imul
test
add
mov
ret
mov
loop
fadd
push
sub
and
ret
ret
test
hlt
repnz
push
xchg
pushf
dec
test
inc
outsl
and
xchg
mul
outsb
sysenter
stos
popl
aam
push
mov
cmp
mov
xor
cmp
lret
adc
scas
sbb
or
in
cmp
mov
mov
ljmp
pop
dec
shrb
scas
cmpsl
in
mov
hlt
mov
inc
mov
mov
rcrl
sbb
mov
xchg
dec
mov
lock
mov
das
iret
add
mov
pop
lods
loop
outsb
das
jmp
ja
cmp
mov
scas
int3
and
and
lods
sti
and
je
and
ret
imul
lds
aas
mov
loope
movsb
loope
je
sbb
les
inc
mov
mov
sub
sbb
iret
jle
outsl
mov
mov
sbb
iret
mov
fisubrs
mov
and
sbb
mov
test
xor
movsl
dec
sbb
popa
mov
imul
push
pop
xor
popa
add
or
out
jbe
mov
adc
cwtl
int3
mov
jns
xchg
test
cmpsl
int3
cmc
sahf
faddp
or
std
popa
stos
sub
repz
pop
data16
sub
lahf
inc
icebp
rcrl
mov
popf
fwait
pop
jnp
add
ret
les
mov
pusha
jae
pop
test
loopne
orb
clc
cmpsl
ja
lods
fmulp
fsubrs
les
lds
into
dec
pop
sarb
push
sbb
dec
xor
xchg
push
das
shlb
aad
sbb
and
adc
loopne
push
pop
ret
mov
cmpsl
sbb
mov
jmp
mov
scas
push
nop
sub
sub
jmp
les
and
cmpsl
shlb
pop
lods
sbb
mov
cltd
lret
loop
and
lea
cmp
mov
cwtl
je
mov
sub
push
mov
test
insb
jae
push
mov
cmc
sbb
push
sbb
jmp
mov
pop
xchg
movb
cmp
inc
aaa
pop
pop
lea
dec
push
push
movsb
loopne
movsl
mov
pop
mov
pusha
sbb
les
fldenv
sub
stc
fisubrl
xchg
or
jl
outsb
out
pop
xchg
lds
pop
xor
pop
mov
mov
adc
mov
mov
xor
and
les
aam
nop
mov
pop
mov
inc
mov
and
jo
cmpsl
and
into
dec
outsb
xor
pop
xor
rcrb
stc
shll
mov
repz
sarl
adc
and
cmp
divb
mov
push
cmp
shrl
mov
fistps
push
rcr
mov
cld
not
pushf
aas
dec
mov
mov
sbb
ja
movsl
sbb
jnp
add
jmp
and
bound
js
ds
inc
pop
sar
lahf
sub
pop
adc
cld
stos
mov
adc
call
aad
inc
imulb
fnstenv
push
mov
insl
mov
test
jns
and
inc
cmc
out
ja
nop
pop
loop
cli
mov
notb
mov
addr16
push
cmp
mov
ljmp
mov
xor
addr16
cli
add
hlt
xor
lcall
addr16
ret
xor
dec
xchg
ja
repz
lods
stc
xchg
cmc
and
mov
in
aam
lret
popa
icebp
lea
mov
sti
xchg
das
add
insl
ret
sbb
aam
push
repz
cmp
xor
loop
outsb
or
adc
sbb
in
xlat
es
out
out
mov
mov
lahf
pop
out
stos
incl
cmp
out
lds
sbb
or
mov
mov
leave
pop
std
insl
lds
je
fcmove
mov
jmp
cmpsb
xchg
adc
cmpsb
idivl
ret
cmpsb
lcall
rol
es
loop
push
mov
jecxz
pop
push
imul
xor
sar
insl
fnsave
cli
loop
pop
popa
mov
mov
iret
or
cli
test
fistl
cmpsb
sbb
test
mov
dec
mov
sbb
push
imul
xlat
adc
mov
popw
ret
fdivs
int3
jns
inc
pop
inc
ret
xor
mov
and
push
aad
aaa
mov
mov
fwait
or
sbb
insb
std
es
sbb
inc
push
pop
lock
cs
pusha
pop
shl
sub
jne
ds
cmp
shrb
fisubs
mov
outsl
xchg
mov
popa
shr
out
xchg
sub
xchg
daa
je
in
and
xchg
lods
xchg
mov
pop
in
enter
add
jae
sbb
cmpsl
dec
in
lea
data16
add
pushf
lcall
iret
scas
inc
inc
xor
int
rcrb
xchg
mov
lods
movsb
cmp
xchg
pop
pushf
data16
mov
sarb
jle
or
scas
xor
sub
repz
cmc
and
pop
xor
cli
pop
add
cmp
es
ret
mov
bound
add
aas
adc
lea
xor
and
pop
gs
inc
and
sbb
and
aad
jnp
lahf
and
mov
movsl
sbb
sbb
lods
sub
jb
in
in
pop
scas
popl
adc
mov
rolb
test
cs
adc
repz
xor
in
lea
dec
and
cmc
scas
jp
lea
pcmpgtb
mov
and
addb
cs
or
not
adc
lea
xor
and
nop
xchg
lcall
test
test
movsb
lret
mov
xor
cltd
add
or
jge
mov
fs
fcmovnb
ds
xor
push
jbe
jae
flds
cltd
add
fs
sub
les
je
and
fisubrl
xchg
ret
jae
lret
and
jmp
into
jae
push
cltd
lds
je
and
lds
outsb
mov
xor
add
ss
aaa
jecxz
ror
add
mov
repz
and
outsb
lea
test
js
sub
push
xor
pop
xchg
cmpsl
sbb
das
and
dec
repz
aaa
mov
and
fbstp
mov
sub
int3
rcrb
mov
cmpsb
dec
mov
inc
cmp
push
jbe
sahf
xor
sbb
cltd
enter
xor
addr16
jp
lds
je
pop
inc
les
pop
sub
mov
jb
scas
jae
scas
int3
dec
jmp
jg
jecxz
mov
cld
filds
xor
and
in
mov
iret
cmpsb
jecxz
mov
xlat
mov
pop
lods
mov
sbb
lahf
and
mov
pop
out
sbb
mov
mov
aaa
pop
mov
dec
out
movsb
pop
sbb
pop
mov
pop
mov
nop
ret
sbb
test
jmp
cli
clc
xchg
mov
pushf
das
sbbb
je
fidivrl
mov
jp
in
cmpsl
je
movsb
mulb
lcall
fcmovu
enter
das
sub
lahf
rorb
inc
jmp
mov
movsl
pop
mov
xorb
xchg
adc
setp
scas
push
sub
or
insb
push
loope
lahf
cmpsl
lea
sub
pop
icebp
add
sub
jbe
mov
loopne
test
lea
std
lds
out
adc
sbb
cmp
inc
ret
cmp
out
mov
bound
xchg
jb
mov
pop
icebp
movsb
lea
out
inc
xor
xlat
inc
xchg
xor
mov
xor
cmp
and
inc
sbb
std
into
dec
test
xlat
sar
mov
mov
cmpsl
das
lds
sbb
mov
jo
testb
sbb
aas
stc
notl
lcall
mov
jecxz
mov
add
es
xchg
imul
sbb
pushf
cmpsb
lea
ret
les
mov
mov
mov
pushf
xchg
rcrb
mov
test
das
lds
pop
push
mov
push
imul
mov
pop
fnstenv
jns
fstps
sahf
out
cltd
mov
arpl
cmpsl
pop
rcll
fcomp
negb
dec
sti
ja
lods
cld
push
lahf
or
test
pop
add
cbtw
je
add
mov
stos
mov
jecxz
push
pop
sbb
lods
lcall
fistl
mov
pop
dec
outsb
dec
pop
sub
int3
mov
adc
and
ftst
ret
sbb
pop
idivl
daa
pusha
push
cmp
push
sbb
insl
xchg
push
shrb
lock
lea
sahf
insb
pop
aaa
xchg
push
popf
pop
cmc
scas
add
sbb
mulb
btr
dec
shlb
jbe
int3
adc
adc
cmp
mov
or
cmpsl
adc
out
sbb
push
sbb
lods
pop
sbb
outsb
pusha
rorb
bound
mov
sarl
aaa
push
test
mov
or
fmul
repz
sbb
cli
enter
clc
pop
sub
cmpsl
lahf
lea
orl
sbbb
xchg
mov
loopew
and
je
jle
mov
sbb
int3
mov
add
ret
push
and
fstps
or
and
push
cmp
pop
cmc
or
pop
dec
rcll
lahf
iret
mov
inc
jne
xor
pop
repz
push
cli
or
test
mov
or
mov
lods
pop
add
pop
bnd
pusha
ss
sub
mov
pop
lea
add
je
inc
adc
mov
jns
cwtl
outsb
sahf
int
in
mov
lahf
sahf
pop
int3
in
out
inc
scas
mov
mov
mov
xlat
pop
mov
push
mov
dec
out
movsb
jge
loop
lea
imul
repz
pop
ret
aaa
pop
sbb
scas
xor
int3
sub
cmp
fdivr
test
ja
jo
cmp
into
mov
in
gs
cmpsl
push
aam
adc
mov
insb
sbb
sbb
add
add
iret
lea
repnz
rcr
aas
mov
sbb
xor
lods
jbe
je
sahf
mov
fstl
sbb
or
xor
pop
mov
jne
pop
pop
out
in
and
das
mov
or
mov
adc
sbb
lods
scas
jmp
cli
insl
adc
js
or
pop
or
mov
or
or
push
sub
add
lea
cmp
cltd
nopl
add
push
cld
enter
adc
push
fsubrs
cli
push
bound
test
and
insl
jno
cwtl
je
shll
adc
pop
add
jb
cmp
outsb
mov
add
push
add
repnz
lahf
movsl
stc
push
out
das
sub
mov
add
dec
adc
jb
clc
xchg
dec
dec
adc
inc
sbb
sbb
je
test
dec
fisubrs
cmpsl
in
vmwrite
enter
fstpl
and
pop
rclb
mov
je
sahf
push
push
dec
xchg
mov
mov
push
sahf
pop
mov
lret
mov
lods
sarb
cmpsl
cmpsl
jmp
sahf
sub
mov
outsb
pusha
pop
test
ret
fst
arpl
jmp
mov
jae
jge
roll
mov
repz
jnp
ficomps
lds
les
aam
xchg
jnp
ficoms
test
enter
icebp
shll
dec
out
mov
pop
mov
push
sbb
mov
imul
sbb
fmull
fsubs
fnstsw
outsb
shrb
les
add
inc
test
test
mov
test
mov
cmpsl
jmp
fnstsw
movsl
jno
inc
pop
sbb
inc
xor
int
in
and
frstor
mov
mov
aas
hlt
mov
or
stos
repz
mov
aad
shr
into
dec
sub
push
push
lcall
pop
jp
daa
cld
pop
dec
xor
mov
mov
pop
push
pop
sarb
dec
and
pushf
jecxz
inc
xor
cmpsl
mov
add
or
icebp
cmp
cmp
rclb
sub
mov
pushf
fiadds
sub
incl
rcrb
xor
cmpsl
in
test
lahf
push
sbb
outsb
xor
test
fwait
in
shrl
movsl
pop
add
or
negl
movsb
comiss
imul
mov
popf
jmp
push
sbb
xchg
fdivl
mov
loope
in
addr16
or
mov
pop
arpl
push
arpl
dec
mov
add
das
mov
jmp
faddl
les
sbb
gs
mov
lds
mov
pushf
rclb
in
xchg
sbb
insb
xorl
mov
fwait
pop
call
mov
cmpb
in
adc
jmp
mov
add
lret
sbb
jbe
aas
xchg
cs
dec
xchg
ret
inc
mov
lret
les
xor
popa
and
jmp
xor
sbb
mov
enter
adc
sub
push
cmc
jne
fsubs
or
imul
mov
jp
ds
repz
push
jge
cs
movsl
fcomps
adc
cmpsl
xchg
push
or
sbb
movb
cmp
popf
xchg
in
enter
mov
sbb
mov
mov
pushf
and
sub
cmpsb
sbb
sbb
pop
dec
lods
rcrb
repz
add
sbb
stos
aaa
adc
xchg
mov
call
and
cmc
inc
and
mov
testl
fstl
or
aaa
mov
loop
xchg
vsubss
xchg
outsl
fists
das
orl
loop
lock
cmp
fwait
cmp
xchg
pop
inc
or
jl
sbbb
and
popf
sub
mov
jbe
or
or
aam
or
mov
sbb
xchg
stc
popa
xchg
call
xor
jl
mov
sub
jns
add
sub
inc
and
jnp
cmpsl
jnp
out
mov
jae
movsb
test
jns
je
jae
gs
xlat
fstps
pop
test
aam
adc
inc
bound
mov
pushf
aaa
pop
jb
dec
repz
cmp
mov
jae
cld
inc
xor
rclb
cmpsl
mov
mov
bound
mov
xor
fcompl
addr16
popf
add
push
mov
xchg
and
xchg
in
xchg
stc
stos
ljmp
daa
ret
xchg
inc
cltd
push
sbb
pop
pop
js
gs
cmpsl
add
xor
pop
adc
jmp
fucom
jl
repnz
cmpb
add
outsb
mov
int3
call
mov
flds
loopne
inc
and
in
mov
das
icebp
ds
sub
push
dec
inc
jbe
pop
pushf
dec
and
arpl
std
fcmovu
sub
cmp
mov
icebp
lcall
xor
leave
or
mov
data16
pop
out
aam
sub
lods
pop
out
stc
mov
dec
lods
or
lds
pop
xchg
test
test
loopne
push
inc
pushf
sbb
and
jl
inc
ds
into
pop
xchg
ja
push
mov
repnz
xchg
pop
into
push
movsl
add
popf
popf
jne
xchg
out
dec
inc
loope
inc
dec
out
ret
mov
fwait
rol
mov
std
mov
jb
mov
xchg
xor
shl
mov
gs
int3
lods
xorb
mov
pop
mov
cmp
inc
shrl
jno
xor
in
and
xor
dec
dec
filds
jg
ja
repz
sbb
mov
fxch
imul
addr16
pop
fmulp
push
jo
iret
xchg
icebp
sub
adc
push
dec
mov
pop
and
lcall
mov
dec
imulb
out
cli
aas
fadds
xchg
add
add
out
cmc
sbb
pop
add
jl
mov
push
shl
test
repz
data16
push
sbb
mov
popa
inc
jbe
xor
xchg
pop
popa
mov
or
movsb
jne
xchg
scas
xchg
sahf
xchg
mov
mov
test
xor
icebp
fidivl
adc
mov
xchg
pushf
faddp
mov
jno
stc
mov
cmp
in
inc
mov
jo
ret
jecxz
es
dec
push
rcrb
inc
cmp
loope
loope
mov
mov
jno
mov
jns
gs
sbb
sbb
bound
gs
jmp
int3
icebp
push
mov
iret
add
imul
insb
push
ja
sub
xor
push
inc
aad
shll
jbe
test
movsb
dec
shlb
test
pushf
jecxz
xor
cmpsb
mov
pop
xor
pop
jmp
cwtl
sbb
inc
outsl
xor
ss
les
adc
data16
fbld
push
shlb
lock
dec
inc
mov
popa
lock
add
jnp
cld
pop
lock
cltd
mov
mov
push
mov
gs
test
dec
out
lea
pop
mov
shrl
sub
arpl
leave
fprem1
xor
or
es
cmp
jg
mov
jae
jg
fiaddl
cld
sub
inc
cmp
aaa
mov
sbb
xor
mov
jo
into
push
mov
movsl
jbe
enter
jp
fcompl
mov
jo
xlat
push
dec
push
enter
scas
mov
or
mov
xchg
jb
das
outsb
mov
xchg
cmc
sbb
stos
loopne
ja
push
inc
pop
inc
fwait
inc
scas
imul
mov
das
mov
mov
add
cmpsl
mov
jo
imul
mov
in
das
xchg
sbb
push
xchg
xor
dec
daa
stos
jns
fcomps
push
pushf
xchg
dec
lahf
sbb
shr
das
vpsadbw
jae
mov
mov
adc
and
int3
and
or
dec
mov
add
bound
or
mov
push
data16
mov
pop
scas
aas
or
mov
xor
scas
jae
cmp
cld
in
mov
jae
repnz
int3
out
mov
cmp
out
add
push
lcall
jae
xchg
mov
or
iret
scas
addr16
fildll
lods
outsl
push
ljmp
cld
cmpsl
ss
out
ss
mov
mov
sub
push
pop
pop
lods
xor
cmp
repnz
divb
into
sbb
je
cmp
sbb
dec
ss
lods
jge
stc
xchg
inc
sub
test
int3
lods
mov
je
ss
pop
dec
negb
adc
test
xor
jbe
cmpsl
lret
test
and
dec
and
jbe
sbb
xor
inc
sub
push
icebp
mov
adc
sbb
add
lds
xchg
jle
jne
mov
out
scas
lcall
stos
sbb
stc
cltd
xor
mov
clc
sbb
mov
jae
push
adc
mov
jl
cmc
into
les
mov
pop
test
jne
movsl
aam
xor
adc
mov
jecxz
fwait
inc
cmp
aam
jbe
add
je
jl
mov
adc
setl
push
xchg
mov
shll
mov
or
sbb
mov
int3
dec
push
xchg
hlt
add
pop
hlt
fs
test
shrl
xchg
cld
jne
jnp
sub
jg
xchg
addr16
test
in
pusha
push
jne
movsb
adc
scas
loope
nop
adc
xlat
out
jne
gs
pop
sub
cmpsl
inc
push
push
in
scas
mov
pusha
ret
daa
mov
in
ret
push
das
or
insl
pop
sub
xor
push
fdivl
arpl
cmc
fwait
arpl
hlt
cmp
lods
cwtl
gs
sub
push
and
add
push
dec
sbb
sub
add
in
repnz
inc
push
and
or
cmp
andb
out
cmp
pop
mov
cmp
pop
inc
mov
mov
add
mov
es
repz
test
mov
cli
inc
lds
mov
addl
rcr
hlt
cmp
mov
push
std
push
sbbl
rolb
mov
inc
mov
lret
aam
daa
and
aad
mov
inc
sub
repz
aaa
aad
outsl
fists
xchg
dec
popf
pop
mov
mov
mov
subb
mov
pop
cld
cltd
ret
aas
add
or
icebp
lret
xor
daa
mov
inc
stos
xchg
xor
les
push
je
push
les
lea
mov
mov
test
ret
pusha
mov
or
jmp
mov
mov
je
mov
mov
es
push
adc
mov
into
ror
scas
inc
inc
je
jnp
lods
pop
in
lea
pop
ja
aam
mov
inc
xor
pusha
aaa
xor
mov
inc
push
lods
test
sbb
mov
add
cmp
ffreep
sub
and
hlt
enter
nop
popa
and
mov
loopne
xor
test
cmpsb
jns
stc
mov
test
xchg
push
push
mov
pop
rep
mov
ret
dec
sti
jno
icebp
cmp
out
or
fdivr
mov
mov
xchg
xchg
js
sub
ljmp
icebp
inc
inc
clc
adc
mov
bound
mov
aaa
lods
xchg
es
or
loopne
cli
in
in
out
fidivrl
inc
inc
jmp
ja
adc
mov
sub
lds
lahf
push
scas
xchg
add
mov
scas
cli
mov
or
mov
mov
inc
repnz
imul
jp
or
fldcw
mov
out
mov
mov
xorl
leave
inc
mov
repnz
or
out
mov
xor
mov
mov
pusha
std
les
xchg
lahf
imul
ret
fcmovb
mov
mov
repz
inc
pushf
mov
xchg
mov
lahf
jmp
mov
mov
sub
data16
and
adc
aad
cmp
in
dec
adc
and
in
les
loope
fbstp
inc
jb
xor
dec
fbstp
jle
lcall
aas
mov
sub
xor
les
cmp
imul
les
hlt
shl
imul
addl
mov
jbe
fsubr
popa
push
sub
inc
movsl
enter
mov
mov
mov
mov
insb
mov
sbb
xchg
loop
or
mov
ret
orl
sbb
mov
stos
cmp
mov
stos
ret
jnp
push
jno
mov
in
cmp
push
mov
mov
aas
enter
push
sbb
fistpll
les
sub
push
nop
push
mov
push
cmpsl
add
ret
sub
pop
ljmp
and
push
jecxz
xor
rcl
ret
pop
sub
xchg
xchg
sub
lods
imul
mov
pop
insl
es
cwtl
sbb
fists
pop
lock
out
in
jbe
cmpsl
dec
test
mov
vsubps
mov
and
mov
imul
jp
jno
pop
lods
pop
jmp
cltd
push
sub
mov
clc
test
adc
xor
pushfw
mov
cmp
int3
and
out
lahf
out
dec
sbb
call
lcall
call
mov
lea
out
ret
lods
and
sub
mov
out
push
or
iret
in
imul
call
mov
data16
test
mov
fwait
mov
out
int3
sti
sub
sbb
into
int3
fcmovb
sub
mov
pop
test
test
mov
stos
add
lods
out
outsb
sub
repz
out
fcompl
data16
add
in
jb
xor
movsb
daa
ljmp
mov
in
out
test
movsb
pop
mov
repz
xchg
pushf
mov
mov
mov
mov
mov
xchg
test
mov
dec
push
mov
leave
repz
jmp
mov
dec
mov
mov
and
cmpsl
mov
mov
pushf
mov
xor
or
fwait
cmp
mov
mov
fildl
ss
in
or
xchg
pop
lods
leave
mov
fcmovne
shrl
or
test
cmp
ljmp
xor
outsl
pushf
xchg
xor
xchg
inc
lea
pop
sahf
mov
orb
cli
inc
in
mov
fiadds
lea
mov
xor
xchg
icebp
mov
xchg
xor
xchg
nop
lret
in
cmp
push
mov
pusha
lret
nop
shlb
cwtl
sbb
outsb
mov
mov
jns
mov
xchg
or
mov
lea
lds
xchg
lds
iret
inc
xchg
mov
mov
mov
push
mov
fsts
sub
push
sbb
sbb
repz
adc
mov
loop
jbe
cmpsl
std
outsl
xchg
fwait
ljmp
cmpsl
test
call
outsl
and
lret
xchg
jo
scas
adc
out
orl
add
outsb
sub
mov
sub
xor
xor
iret
sub
loope
fisubrl
aas
in
call
int3
mov
lods
sub
iret
into
lods
sub
dec
call
xor
imul
cltd
loop
in
cld
or
inc
mov
jmp
out
enter
or
add
push
add
enter
or
mov
add
outsl
add
xor
mov
mov
out
mov
sbb
shrl
pop
insl
call
push
inc
lock
mov
add
imul
cmp
int3
fmuls
scas
test
push
stos
cmp
mov
push
sub
lds
in
subb
pop
mov
mov
leave
lock
mov
xchg
cmp
inc
pop
jmp
push
jge
cli
jmp
movsl
sbb
popf
pop
in
lds
fsubrs
rcr
cmp
adc
or
sub
cmc
xor
and
sbb
mov
fildl
jmp
push
inc
pop
lret
push
pusha
stc
loopne
jb
cmp
push
ja
lock
aad
nop
xor
mov
hlt
jl
daa
or
dec
adcl
xchg
movsb
and
test
cmp
popa
xor
stc
xorl
popf
adc
icebp
dec
outsb
ret
or
jne
movsl
sub
sub
fnsave
getsec
add
gs
outsb
mov
sub
mov
jl
hlt
test
mov
scas
lods
scas
ret
repz
xchg
cwtl
daa
les
mov
shlb
pop
mov
mov
outsb
sbb
sbb
dec
sub
sub
dec
dec
jge
mov
int3
movsl
xor
sub
mov
insl
cmp
sbb
imul
dec
std
mov
aas
push
lret
insb
pop
xor
jl
loope
dec
cli
rcrl
das
mov
sbb
pop
mov
loop
test
loope
loopne
arpl
fcompl
in
sub
das
testl
into
fstp
cmc
jecxz
jl
jbe
mov
fwait
cmpsl
movsb
mov
jmp
dec
cltd
lcall
lret
cmp
out
inc
les
jae
js
adc
icebp
and
sub
push
and
mov
or
stos
sub
mov
cmp
sbb
push
sbb
mov
jmp
mov
int3
std
ret
jmp
pop
daa
gs
cmp
loope
cmpsl
lds
aam
sub
cltd
push
jne
or
je
sbb
fisubl
pop
das
dec
test
popa
cmpsl
xlat
test
lds
jmp
or
outsb
mov
mov
mov
icebp
pop
repz
cs
dec
and
out
int
push
cld
loopne
ficompl
pusha
xchg
outsb
std
xchg
lods
clc
pop
jg
mov
push
push
inc
mov
jae
out
adc
lods
xchg
lret
daa
ja
jne
mov
lea
je
jl
sub
stos
mov
or
movb
xchg
cltd
scas
pop
loopne
sub
pop
sub
outsl
sbb
hlt
cs
lods
sbb
inc
push
int
ja
aad
insb
faddp
jmp
ljmp
cmp
sbb
mov
outsl
dec
cmp
xor
fwait
stos
movsl
mov
lods
xchg
sbb
scas
cli
gs
addr16
mov
std
lds
in
jo
scas
pop
cs
jecxz
test
jl
outsl
fiadds
outsl
test
xor
jnp
add
jae
xor
mov
xor
fdivs
mov
enter
dec
cli
mov
or
in
adc
cmp
cmp
popf
inc
insl
inc
loopne
sub
outsb
lods
sub
je
adc
jl
loop
push
sub
xchg
data16
xchg
mov
dec
mov
pop
jl
xchg
jmp
and
sub
sbb
xor
xchg
pop
das
ss
xchg
fs
stos
aaa
sub
xchg
sbb
sub
jge
or
adc
jecxz
std
icebp
addr16
sbb
movsl
cmp
popf
mov
mov
sbb
out
push
mov
push
dec
test
mov
xor
loopne
sub
or
movsl
xchg
movsb
pop
shrl
cmc
sub
xor
in
cmp
rcl
sbb
mov
xor
inc
cmpsb
ficoms
mov
outsb
in
jne
out
fldenv
lods
stc
dec
add
adc
push
sahf
inc
and
fsts
outsb
stos
sbb
mov
push
mov
lods
fs
out
loopne
cli
pop
lods
movsb
jge
popl
lods
cmpsl
outsl
ret
out
cmp
pop
jne
jg
out
ret
xlat
popf
aaa
and
stos
add
insl
cmpsl
inc
add
lods
dec
stos
loopne
push
mov
sti
sub
fmul
into
sahf
out
int
call
flds
imul
call
scas
lds
stos
cltd
inc
inc
adc
cmpsl
sbb
pop
insb
push
sub
addr16
mov
jecxz
test
cmc
int3
jge
lods
fiadds
scas
daa
movsl
fldt
inc
xchg
push
aaa
jmp
outsl
mov
sbb
pop
das
test
insl
xchg
add
stos
mov
std
xchg
ljmp
mov
lret
mov
mov
imulb
cmp
repnz
lcall
rol
xchg
or
jbe
pop
movb
cmp
pop
repz
aaa
arpl
mov
jge
jmp
roll
scas
jg
mov
jne
jb
jle
pop
fstpt
into
pop
jo
mov
leave
push
fdivrl
or
jmp
lods
sbb
sbb
add
out
pop
jb
int3
mov
cmp
insb
mov
rcrl
xor
inc
aas
idiv
xchg
je
mov
and
and
pop
test
mov
sti
loop
stos
adc
sub
inc
lods
mov
mov
dec
je
sbb
cmc
jge
or
cmpsl
repnz
pop
fcomps
shlb
int
inc
lret
in
xchg
xor
jge
xchg
or
mov
or
scas
cmpl
test
xchg
mov
je
pop
mov
xchg
test
jns
cmp
mov
xor
int
and
insb
lds
fmull
sub
push
xchg
jle
js
mov
push
or
mov
xor
stos
loopne
sub
push
xchg
les
ret
mov
cmp
xchg
insb
jb
mov
jl
xor
xchg
fadd
pop
cli
movsb
jmp
jne
jne
mov
jbe
pop
adc
imul
dec
aas
scas
add
out
or
inc
pop
fsubrl
in
or
xor
aaa
mov
loop
mov
sub
sbb
pushf
lea
and
mov
ret
jmp
cmp
add
movsl
mov
movsb
sar
xor
rclb
mov
into
in
mov
lds
and
imul
outsl
dec
jle
ja
cmpsl
fucomp
cs
rorl
jae
fwait
sub
test
scas
mov
in
or
leave
lea
scas
sub
outsb
add
in
sti
pop
sub
std
shll
adc
mov
lahf
cmp
mov
popf
dec
fcmovnbe
xchg
sbb
sti
call
mov
insb
repnz
into
sbb
inc
mov
sbb
mov
lret
lods
fldl
mov
lds
test
adc
adc
mov
mov
lods
subl
xchg
fcoml
mov
sub
sbb
sbb
mov
cmpsb
pmaddwd
shrl
xor
xor
sbb
mov
or
pop
cmp
cmp
mov
inc
ljmp
jnp
mov
mov
loope
movsl
mov
jo
xor
sub
outsl
dec
jmp
jl
sub
data16
mov
jp
fiaddl
or
mov
xor
in
movsl
push
lds
sbb
jp
or
in
outsl
push
sub
fiadds
jbe
dec
xlat
mov
xchg
xchg
les
je
jnp
jmp
or
sbb
mov
pop
cltd
mulb
fwait
lods
sahf
iret
cltd
stos
cwtl
mov
sbb
sbb
call
mov
mov
popa
lods
in
sbb
aad
fwait
xor
jl
sti
insl
mov
gs
in
lcall
lea
ja
or
lcall
stos
or
sub
sub
jmp
imul
push
cmp
xor
popf
sub
cmpsl
mov
or
xor
outsb
sbb
insb
sbb
lret
shrl
mov
lahf
decl
jmp
push
shrb
jecxz
in
bswap
sub
xor
xchg
aaa
imul
pop
out
mov
inc
push
sub
roll
test
mov
jo
stc
add
fcomps
out
inc
mov
mov
clc
mov
xlat
mov
pop
scas
ss
mov
inc
fildll
cmp
lods
xlat
les
das
fadds
shl
lods
out
sbb
jo
lds
out
cwtl
push
cmp
hlt
adc
insl
gs
push
in
daa
decl
shrl
jmp
test
cmp
shrb
lods
loopne
xor
push
sub
stos
jg
stos
and
cmp
hlt
xor
mov
scas
and
std
mov
xchg
inc
xchg
mov
scas
add
inc
cmp
add
nop
mov
mov
xchg
mov
inc
and
scas
dec
xchg
insl
mov
mov
andl
xchg
fistpl
dec
lea
inc
push
inc
dec
das
rcll
xor
jle
rcl
pop
movsb
repz
xchg
js
cs
cmp
jbe
mov
push
mov
fsubrl
je
xor
lds
add
mov
fcompl
out
cmpsl
pushf
jae
hlt
pop
inc
stc
sbb
mov
mov
in
push
dec
adc
in
out
imul
insb
hlt
sub
xchg
mov
popf
test
in
xor
js
nop
ret
xchg
ss
xchg
cmc
cs
enter
xchg
dec
fwait
test
xor
movsb
aam
xor
mov
adc
test
mov
mov
into
push
mov
mov
inc
test
cmp
mov
sub
pop
add
sub
sahf
mov
mov
cmp
into
or
fwait
mov
icebp
scas
xlat
sub
lahf
daa
pop
mov
jbe
cmp
jl
cmc
fnsave
into
leave
fwait
sub
insb
mov
out
pop
lea
sub
xlat
mov
ljmp
jmp
enter
mov
int
fwait
push
jmp
sar
ret
mov
xchg
dec
test
into
pop
lods
fdivl
add
and
mov
sbb
popf
lods
dec
jge
dec
adc
add
jg
xlat
lods
movl
pushf
mov
add
fisubrl
lea
mov
jmp
imul
lret
test
or
ret
jmp
and
push
dec
int
mov
dec
xor
cmp
jne
mov
lods
outsl
push
sbb
ret
xchg
lret
jb
cwtl
pop
lds
cmp
ja
sbb
orl
pop
jbe
mov
out
test
js
lret
xchg
xchg
dec
inc
dec
mov
repz
pop
fwait
je
test
int
jl
dec
repnz
mov
scas
lea
mov
pop
into
sbb
jne
inc
or
stc
xchg
mov
insb
mov
int
sub
xchg
rorl
das
or
js
jl
ret
xchg
jmp
mov
or
sbb
and
ljmp
stos
pop
out
mov
jl
jmp
cmp
in
insl
cmpsl
in
pop
lods
dec
xchg
mov
xchg
call
ds
out
add
cmp
dec
mov
mov
ds
pop
lea
mov
cmc
mov
enter
out
idiv
mov
dec
cmp
cs
daa
cmp
adc
mov
xchg
or
jp
je
cmpsl
scas
daa
mov
orl
sub
mov
and
movsl
movb
repnz
pop
mov
xchg
cltd
lods
insb
jne
sahf
rep
xor
mov
lods
sub
iret
mov
add
mov
insb
mov
and
lods
mov
in
add
mov
dec
push
inc
sbb
jns
mov
sbb
repz
std
insl
xchg
and
xchg
dec
fsubp
lods
jo
cmp
dec
cmp
add
jmp
push
mov
mov
mov
stc
mov
cltd
and
push
push
in
hlt
mov
pop
stos
jnp
andl
stos
cltd
mov
and
aas
test
jb
mov
pop
dec
mov
popf
test
std
mov
jmp
clc
mov
sbb
or
xchg
out
push
fstl
sbb
jb
daa
inc
mov
push
xor
aaa
sbb
repnz
cmpsl
sbb
repz
sbb
sbb
dec
std
mov
stos
mov
and
mov
std
int
or
dec
sbb
ret
out
pop
ret
movsl
enter
movsb
into
inc
popf
cmp
mov
scas
cmp
jb
xchg
aaa
and
insb
add
jg
mov
negl
movsb
imul
sbb
scas
pusha
ret
mov
jne
mov
lahf
dec
scas
std
sub
popf
loope
cltd
push
mov
mov
sub
pop
sub
sub
mov
repz
dec
incb
push
out
push
mov
outsl
push
lea
or
jmp
movsb
lock
jmp
pop
sbb
cmc
test
test
jb
xlat
jp
mov
or
and
pushf
fsubl
sbbb
mov
popf
cwtl
mov
scas
loop
dec
add
dec
push
outsb
in
int
fcmovu
mov
addl
cmp
sbb
shll
mov
and
mov
pop
dec
push
adc
mov
int
lods
adc
ds
hlt
inc
xor
lods
xchg
mov
lods
pop
outsb
icebp
xlat
pop
mov
mov
stos
scas
outsl
jne
or
in
in
or
fs
shl
inc
mov
jno
daa
movsl
je
insb
stos
or
adc
call
mov
mov
mov
int3
push
sub
hlt
cmpsl
inc
lea
hlt
jmp
rolb
jmp
jno
xchg
std
test
add
jne
dec
enter
pop
mov
or
add
enter
daa
push
hlt
mov
jae
xchg
push
jp
pop
ret
mov
dec
dec
std
mov
les
sub
jl
xor
icebp
adc
movsb
jl
or
and
movsl
addr16
or
pop
mov
push
push
jecxz
xchg
pop
lods
mov
mull
sub
rol
mov
sub
inc
scas
hlt
pop
pop
outsl
push
pop
jbe
jns
mov
outsb
or
and
fwait
cmp
mov
call
mov
call
and
xor
sub
es
xchg
xor
fwait
pop
sbb
out
out
cli
lea
mov
mov
mov
loope
pop
outsl
incb
mov
mov
cmc
outsl
inc
icebp
pushl
push
test
or
fucomp
outsl
cmp
xchg
cmpsl
dec
push
xor
mov
mov
test
cmp
ja
out
lods
dec
sbb
adc
insb
cmp
sub
cmp
into
lods
lahf
xchg
pop
xlat
xchg
adc
outsb
push
cwtl
sub
mov
sbb
cwtl
imul
mov
lods
mov
push
pop
sub
je
in
nop
mov
imul
cmp
aad
lret
or
icebp
cmp
lahf
mov
lahf
popf
test
and
and
stos
push
inc
sbb
lods
xlat
or
mov
loope
mov
or
mov
jp
movsl
jns
push
xor
cmpl
loop
lods
jne
push
xor
aas
subl
stos
sbb
jl
cmp
pop
dec
mov
sbb
jne
cltd
mov
pop
scas
sub
add
mov
mov
outsl
dec
mov
or
in
outsl
aas
sub
lods
pop
into
scas
cmpsl
lds
pop
stc
sarl
lea
mov
fidivrl
popf
test
push
and
xor
fadds
and
insb
cli
jmp
xchg
lea
and
sbb
lods
inc
movsb
xor
test
xchg
hlt
jecxz
pop
sub
jbe
int
ret
inc
imul
xor
pop
and
jge
nop
stos
adc
imul
xchg
sbb
cmc
pop
cmp
in
mov
push
mov
cmp
in
mov
lods
mov
push
jecxz
jge
sbb
fwait
mov
mov
lock
sbb
mov
pop
lea
mov
adc
pop
popf
insb
sub
into
mov
leave
cmp
dec
fldt
pop
sub
sahf
popf
fs
sub
vpaddusw
repz
jo
or
cmpl
out
cmp
sbb
add
mov
arpl
and
ja
and
sti
fsubrl
repnz
aad
test
pop
cmp
lea
stos
or
movsb
test
jmp
jl
jmp
mov
in
mov
xchg
sub
sahf
cs
dec
and
jo
leave
push
mov
imul
push
pop
jge
mov
jmp
mov
sub
dec
fimuls
shll
lods
jo
cmpsb
fsubrs
out
inc
mov
idivb
mov
pop
pop
pop
insb
mov
sahf
enter
or
add
daa
add
sub
call
inc
loopne
lret
je
mov
mov
mov
mov
sahf
repz
push
sub
stos
mov
push
xorl
outsb
ja
add
adc
cwtl
sub
mov
shrl
push
scas
inc
adc
dec
dec
mov
dec
mov
sahf
scas
xchg
std
subl
xor
stc
adc
cli
cs
jge
mov
shll
stc
int
lods
data16
sbbb
pop
push
cwtl
or
fdivrp
js
aaa
adc
bound
lret
shll
mov
push
outsl
cmpsl
popf
push
in
jb
loopne
lret
push
subl
stos
shll
loop
and
jmp
inc
lea
out
int
jae
aaa
outsl
fucomip
sub
mov
adc
fcomps
pushf
aas
and
out
outsb
lds
jmp
outsl
into
pop
dec
mov
call
push
adc
stc
sub
push
lret
outsl
inc
mov
insb
scas
sbb
push
xchg
stc
loopne
ja
inc
pushf
repnz
or
or
insl
jle
pushf
ss
xlat
movsb
jb
pop
out
sti
adc
insl
adc
mov
scas
jb
mov
in
loope
hlt
lret
add
lods
arpl
cmpsw
mov
pusha
cmpsl
push
mov
into
xchg
adc
xlat
out
lds
lret
cmpsl
outsl
mov
push
xchg
and
pop
pusha
vphaddwq
sub
xlat
dec
pop
movsl
das
jae
pop
popf
pop
pop
fistps
test
xchg
shr
sbb
lods
sub
pusha
scas
das
ficompl
test
jnp
cmp
ja
imul
pop
or
mov
lcall
outsb
rcrl
lds
inc
pusha
mov
jbe
dec
lds
add
insb
cmp
roll
scas
pop
int3
fistl
in
and
fwait
lods
hlt
das
pop
push
leave
sub
pop
in
hlt
push
popa
mov
xlat
scas
jmp
mov
inc
sub
sub
fisubl
pop
int
inc
lock
fcmovnbe
push
cs
in
roll
push
out
mov
loope
mov
pop
or
stos
in
jb
pop
mov
jmp
mov
sub
test
sbb
dec
mov
push
mov
lret
lahf
mov
push
mov
or
test
loope
lret
cmpsl
insl
shll
push
xchg
or
xorl
shlb
sti
lods
jb
and
insl
in
lds
fldenv
int
outsb
dec
mov
pop
pop
fsubs
in
xor
cltd
in
ror
jg
cmc
ss
in
cmp
mov
mov
mov
sti
sbb
mov
lock
int
and
jnp
mov
pop
xor
dec
sbb
dec
pop
sub
xchg
outsl
inc
lds
call
fwait
jle
pop
into
faddp
rclb
mov
es
cmp
mov
test
enter
or
addr16
lcall
in
imull
dec
int
and
adc
mov
mov
popf
inc
test
adcb
or
inc
mov
jb
mov
cwtl
cmp
in
inc
mov
imul
push
test
inc
mov
outsl
cmpsl
inc
xchg
notb
sbb
xchg
fsubs
jl
lea
push
aam
ljmp
movsl
sbb
adc
int3
les
les
xor
push
jmp
ds
xchg
xor
mov
sahf
sbb
mov
cmp
std
hlt
movsb
or
scas
mov
jmp
int3
sub
fnstsw
sahf
test
xorl
inc
mov
fildl
jmp
mov
out
sar
inc
flds
inc
jg
or
mov
xchg
outsb
adc
nop
sub
xchg
and
xchg
in
pusha
xchg
mov
sbb
mov
out
jno
ljmp
les
mov
daa
stos
jl
lret
mov
mov
inc
xor
sub
test
mov
loop
cmpsl
jbe
inc
xchg
ja
sahf
xlat
jmp
xor
fcomp
cltd
pop
pop
or
movsl
pop
adc
xor
lods
pop
or
and
cs
lods
xor
in
sbb
cltd
push
insl
cmp
std
pop
mov
jae
pop
xor
push
push
movsb
xchg
dec
cmpsl
int
sbb
pop
pop
push
pop
js
loope
int
in
test
jb
add
xchg
out
loopne
repz
pop
pop
lds
cmpsl
mov
jbe
jb
mov
jl
xchg
lds
insl
adc
loopne
mov
pop
mov
fsubrl
pop
std
or
sub
hlt
ss
loope
jmp
test
fstpt
mov
mov
fwait
enter
ffree
outsl
test
xchg
std
add
lret
mov
jbe
xor
mov
repz
xchg
insb
mov
int
cltd
shlb
mov
lret
or
lods
mov
or
fcos
rcrl
popf
mov
mov
inc
add
add
push
pusha
or
xchg
icebp
fldcw
int3
cli
outsb
mov
fimuls
dec
inc
mov
loop
cwtl
inc
push
ds
sub
sbb
int3
pop
fucomp
imul
dec
pop
stc
mov
pop
testb
inc
shll
in
lea
xorl
push
mov
pop
push
cmpsl
adc
in
hlt
add
jnp
std
lahf
insb
push
es
and
or
pop
out
mov
sub
iret
lea
daa
and
add
pop
xor
add
hlt
sub
push
rcrl
jo
mov
outsl
ja
jle
je
cmp
subl
sub
fsubr
outsl
enter
pop
or
push
mull
in
push
call
data16
pop
sub
mov
lahf
mov
xchg
jl
cmpsl
add
mov
gs
imul
pop
mov
xor
movsb
lahf
fwait
xlat
pop
ds
je
jecxz
cltd
loop
ret
cltd
in
add
or
int
and
jp
scas
xchg
xchg
movsb
cs
mov
loopne
jb
popa
dec
pop
push
shll
std
mov
addl
jmp
dec
pop
lods
daa
popl
push
push
sbb
mov
push
popa
int3
jecxz
mov
fimull
cmp
jp
sub
iret
fsubr
jbe
jnp
ja
jge
push
enter
aam
les
mov
adc
das
lea
lea
movsl
sbb
mov
sub
loope
call
pop
mov
addr16
xchg
test
lahf
daa
lea
mov
push
xchg
pop
sbb
sub
mov
repnz
cmpsb
mov
or
out
cmp
mov
xchg
sub
xor
fsubs
mov
xchg
mov
rcrl
rcl
cmp
mov
jmp
pop
mov
cmpsb
fdivrs
mov
or
outsl
mov
push
out
xchg
arpl
mov
pop
lods
or
jae
push
or
add
fmuls
pop
fnstenv
adc
out
fstp
sahf
mov
jb
repz
mov
test
fidivs
rorl
fdivs
inc
pushf
js
mov
inc
loop
jo
cmc
fucompp
add
mov
fstpl
pop
hlt
popa
mov
mov
ret
cmpsb
pop
xchg
faddl
jp
stos
and
scas
mov
xor
adc
and
xor
les
push
sbb
push
sub
imul
and
dec
or
pushf
aam
int
call
add
in
in
mov
xchg
push
imul
pushf
xor
cs
daa
insl
lret
lods
call
shrl
into
aad
cmpsl
mov
sti
fidivl
mov
xor
cmc
out
sub
jmp
mov
jae
sub
fnstcw
inc
mov
cmpsl
aaa
mov
daa
sbb
lea
add
outsb
xor
shll
cmpsl
imul
mov
leave
test
or
and
test
neg
adc
fdivrl
test
out
xchg
push
lea
cmp
outsl
ret
and
sub
mov
adc
int
outsb
mov
dec
lds
lcall
push
mov
test
sbb
or
pop
cmpsl
mov
repz
hlt
add
push
inc
icebp
out
cmp
popf
stos
dec
arpl
enter
dec
cmp
pop
loopne
push
mov
sbb
xlat
stos
pop
andl
mov
aam
insb
pusha
scas
shll
lods
adc
mov
jmp
imul
js
test
addr16
stos
xlat
sbb
repnz
fwait
pop
push
inc
add
pop
call
sbb
jo
inc
push
mov
lea
pop
lods
arpl
cwtl
pop
fwait
lea
outsb
xlat
push
push
fs
aam
mov
mov
sub
in
push
popf
dec
in
pop
mov
cs
pop
movsl
inc
lods
xor
popl
testb
lahf
jns
dec
cmp
add
les
out
dec
xor
push
lcall
mov
imul
jnp
les
fistpll
jb
movsl
mov
or
jge
pop
movsl
cmovge
inc
fmuls
lods
adc
cmpsb
add
test
stc
pushf
pop
sbb
push
mov
icebp
movsb
jp
pop
or
leave
mov
out
loopne
cltd
clc
out
inc
lods
pop
lret
pushf
or
xchg
adcl
adc
mov
jg
mov
int
cmp
js
fnstsw
mov
cmpsl
dec
addl
or
fbstp
je
scas
dec
sbb
int3
movsl
mov
into
pop
jecxz
cmc
das
lods
lods
mov
jge
fs
out
out
scas
sub
xchg
stos
daa
fistpl
lret
rcrl
lds
xor
test
jge
lods
inc
jp
and
mov
lcall
lret
mov
mov
mov
jmp
pushf
sub
xchg
movsb
hlt
fwait
cwtl
cltd
push
adc
mov
mov
ja
xchg
mov
pop
jne
adc
ja
ja
loopne
scas
subb
daa
fwait
nop
lds
adc
jns
cli
aad
xor
outsb
sbb
fstl
es
jle
add
sub
in
ljmp
stos
outsl
dec
pop
inc
mov
into
dec
mov
pushf
addr16
push
frstor
lock
aaa
mov
into
pop
mov
mov
cmpsl
into
mov
xor
mov
xlat
aas
mov
outsb
das
pop
scas
test
jecxz
sub
sub
mov
test
mov
mov
or
sbb
sub
xchg
pop
cwtl
fildll
mov
cwtl
mov
mov
xchg
call
cmpsl
pop
mov
add
lret
pop
imul
sbb
cmpsb
fstpl
mov
push
pop
pop
mov
test
push
mov
aaa
aas
pop
mov
mov
movsb
dec
mov
insb
jb
xchg
mov
mov
inc
int
test
xchg
xor
ret
outsb
cltd
mov
aad
mov
cmp
push
adc
pause
scas
mov
push
out
mov
mov
sub
pushf
jg
pop
movsl
into
repz
xlat
popf
mov
jmp
loopne
jae
repz
cld
imul
sbbb
cltd
add
sub
sahf
dec
popf
pop
js
add
pop
icebp
add
sub
or
mov
inc
sub
repz
lods
sub
pop
pop
xchg
sbb
push
mov
sub
pusha
lea
lcall
xchg
lods
and
xor
jl
scas
pop
inc
or
lahf
std
dec
lahf
lods
loop
std
sbb
push
into
in
jmp
fptan
cmpsl
sub
sbb
insb
notl
fmuls
inc
lret
mov
lods
mov
and
mov
hlt
mov
outsb
mov
or
push
mov
mov
sub
and
shlb
cld
sbb
jp
pop
lds
das
addr16
push
cltd
inc
sub
icebp
jmp
movsb
lret
decb
fwait
jle
mov
nop
loopne
sub
pop
push
mulb
cmpsb
je
sbb
out
pushf
cmpsl
jae
jmp
fsubrl
lods
popf
ret
sub
cmp
pushf
scas
insl
xchg
cmpsl
mov
cmpsl
cmpsl
pop
jne
mov
and
xchg
push
sbb
mov
pop
xor
pop
repz
sbb
mov
adc
daa
push
pop
call
jb
fsubrl
bndstx
cltd
arpl
popf
pop
xchg
jnp
sub
fisubl
lods
push
ret
shlb
lret
or
pushl
es
jne
mov
pop
sbb
inc
popf
imul
and
mov
sub
xchg
xor
stos
and
jge
pop
inc
cld
cmp
cmpl
mov
outsl
adc
mov
movsl
mov
push
mov
pop
mov
ja
js
das
pushf
jo
fnstsw
pop
inc
push
xchg
inc
or
outsl
or
or
push
mov
into
rclb
pushf
outsl
fdivrs
mov
xchg
dec
adc
lahf
dec
sbbl
enter
cmpsl
xchg
cli
push
xor
adc
scas
jne
sti
ss
fdiv
jl
lret
lret
add
mov
in
sbb
push
xchg
cmc
addl
ds
daa
cmpsl
dec
imul
movsb
imul
sub
insb
mov
insl
arpl
fstl
mov
pop
pushf
xlat
sbb
ret
aas
xor
aaa
scas
xor
xchg
fistpl
fidivl
push
hlt
cmpsl
jae
sbbl
fwait
jo
into
adc
xchg
ds
mov
mov
xor
in
pop
pop
push
dec
mov
or
mov
lods
shll
xor
cltd
fwait
js
adcb
lds
fsubrs
mov
out
arpl
push
imul
fs
sahf
xchg
fmul
fwait
movsl
sub
dec
vpmulhw
or
pop
inc
mov
fisttps
scas
fucomi
mov
xchg
int3
lret
pop
cli
pop
mov
push
stos
arpl
lods
xor
jno
popa
fimuls
jbe
outsb
jb
loop
sbb
pushf
lcall
sbb
mov
cltd
sub
in
fisubrs
loopne
xchg
mov
sub
jecxz
scas
adc
lock
mov
sbb
push
pusha
ljmp
outsb
jbe
sub
mov
mov
stos
jmp
jb
pop
xor
mov
jae
and
sbb
ret
loop
fildll
jo
and
xchg
mov
cmp
or
in
sbb
into
and
mov
pop
subl
aam
out
mov
or
int
stos
sbb
ret
insb
inc
out
fiaddl
lods
cwtl
repz
out
in
arpl
mov
jg
and
xchg
clc
mov
sbb
xchg
mov
adc
sub
or
icebp
das
fldcw
pushf
xchg
push
mov
jmp
test
sbb
add
jmp
aas
cmpsl
fcmovne
add
xor
lods
push
mov
fs
insb
out
int
popf
lods
xor
jmp
int
nop
xor
mov
lds
lret
pop
andb
pop
jnp
xchg
jae
mov
pusha
pop
jmp
in
scas
aas
add
into
push
push
popf
sbb
fs
sub
cmpsl
lds
add
sub
cwtl
mov
stos
inc
je
xchg
les
push
inc
je
repz
fdivrp
jbe
aam
pusha
cs
and
cmpsb
pushl
out
insb
cmp
cmpsb
sahf
lret
fsubs
inc
pop
pop
and
in
addl
imul
mov
jo
into
sub
imul
mov
subb
bound
loopne
or
xchg
lea
in
mov
sbb
pop
cwtl
jg
loop
jmp
jbe
mov
test
xchg
add
out
outsl
mov
mov
mov
pop
push
sti
dec
xlat
rcr
lods
mov
icebp
movl
insl
add
mov
test
sub
call
xchg
dec
repz
out
jge
loopne,pn
test
pushf
and
xchg
jne
movsb
mov
in
mov
push
pop
icebp
cltd
in
aam
pop
lods
push
inc
xchg
or
push
xchg
pop
out
xlat
test
btc
mov
aad
addl
test
inc
ret
mov
cmp
sbb
lods
jle
fcmovbe
push
popf
xchg
repz
sahf
mov
cmp
jne
int
mov
xlat
cs
pop
test
mov
int3
loop
out
pop
xor
std
ret
push
dec
mov
aam
dec
daa
mov
lds
aam
movsb
enter
call
pop
mov
lea
int3
or
dec
out
addr16
inc
out
outsl
pushf
mov
sbb
in
std
jne
pop
inc
aaa
jns
mul
pop
xor
and
in
mov
mov
push
daa
cmp
insb
loop
repz
cwtl
pop
dec
xor
mov
and
arpl
int
call
pop
cmpl
push
xchg
sbb
push
mov
stos
incb
call
mov
ds
in
enter
cmp
mov
mov
cmp
mov
pushf
out
popf
insl
mov
push
sbb
sbb
jo
cmp
lods
ss
mov
cltd
push
xor
pop
pop
movsb
aaa
aas
movsl
jae
cmpsb
ret
mov
mov
cmp
ljmp
dec
rorl
push
decl
pop
int
adc
into
and
aad
out
in
xor
scas
pusha
adc
xor
pop
xchg
and
rclb
mov
and
test
adc
pop
sbb
jecxz
test
stos
cmp
xchg
fs
sti
in
into
adc
lds
popf
cwtl
fxch
dec
mov
mov
sub
in
repnz
push
xlat
outsb
notl
dec
sbb
push
add
inc
popf
leave
jns
je
inc
inc
mov
jno
popl
movsb
cmpsb
in
mov
sub
xor
pushf
sbb
int
daa
adc
dec
out
xor
or
lret
clc
daa
shll
mov
dec
mov
jnp
xlat
cmpsb
sarl
mov
in
icebp
rcrb
call
push
pop
sbb
bound
cs
popf
stc
pushf
fsubrl
movsb
dec
in
movsl
dec
mov
jno
dec
pop
int
outsb
adc
sahf
push
push
mov
hlt
mov
sbb
push
in
inc
xchg
pushf
scas
sbb
lods
scas
mov
out
add
sub
lret
pop
dec
fwait
scas
jo
cmp
rolb
movsl
insb
lds
cmp
and
pop
adc
rep
push
fnstsw
cmp
pusha
out
cmpsl
mov
cmpsb
sbb
lahf
sub
test
inc
jmp
mov
dec
adc
push
adc
stc
popl
ret
cmpsl
and
cmc
lds
sub
cmpsl
jmp
sub
test
add
fnstenv
dec
es
in
inc
adc
mov
shl
xor
and
cmpb
mov
mov
repz
out
lahf
and
mov
bnd
jne
aaa
push
jmp
dec
inc
mov
rclb
lahf
pop
jnp
sbb
sub
add
es
rcr
stos
cmpsl
mov
jmp
xchg
lcall
stos
xchg
xlat
xchg
add
mov
dec
push
jl
pop
iret
ja
mov
mov
lds
sub
insl
imul
daa
mov
sub
scas
call
fwait
shrl
sar
xlat
or
lock
pop
and
mov
imul
and
jns
push
cmp
test
leave
push
xlat
pop
cmpsl
mov
outsb
popf
jb
add
mov
push
fwait
insl
subl
pop
scas
pop
xchg
jle
movsl
mov
int3
test
push
xor
decl
xchg
lds
and
ljmp
pop
sub
sarb
ss
pop
mov
sbb
jns
in
or
and
fsubs
mov
mov
or
nop
xor
mov
clc
xchg
out
test
jl
inc
xor
mov
popf
push
push
test
inc
pop
fwait
movsl
mov
cmp
pusha
test
mov
imul
enter
or
ja
cmp
mov
fldl
add
ss
jge
in
jl
pop
push
mov
rcll
lret
and
xor
dec
cmp
sbb
cmp
rcl
std
inc
xchg
and
popa
mov
inc
imul
dec
mov
mov
mov
or
mov
lds
xchg
cmpsl
mov
xchg
adc
int
insb
mov
jb
push
addr16
ret
mov
not
sbb
in
lds
pop
dec
nop
movsb
scas
das
xchg
jmp
mov
lods
adc
test
dec
mov
lea
cmc
xchg
nop
cmp
sarl
shrl
cs
lods
negb
push
mov
int
call
mov
outsb
xchg
repnz
lods
mov
xorb
mov
lds
mov
push
dec
dec
lds
mov
cmp
std
scas
jmp
xchg
xor
fldcw
jae
out
mov
call
mov
pusha
cltd
inc
lcall
test
sbb
mov
push
jecxz
loop
mov
lock
test
pop
das
mov
xchg
mov
push
and
sbb
sbb
sarl
jo
pop
insl
xchg
sub
push
xor
sarl
cs
in
icebp
sarl
mov
mov
xchg
add
ja
in
mov
jle
sbb
cltd
pop
pop
push
jg
jb
popf
push
pushf
dec
pop
out
insl
xlat
sbb
cmp
add
inc
lds
fistpl
icebp
shll
or
clc
lods
mov
mov
loopne
jmp
fstpl
test
mov
lret
test
daa
sbb
pop
rclb
aam
dec
jb
xchg
sub
adc
lock
sahf
mov
or
sub
je
cmc
sbb
out
cmpsl
lcall
pop
aam
xchg
cmp
in
xlat
lds
jae
inc
movsl
pop
int3
mov
lds
cli
or
push
lock
mov
mov
ficomps
out
mov
fwait
pop
mov
fisttps
ret
sbb
movsl
lahf
fwait
xchg
jecxz
jns
or
sti
fstl
lcall
push
arpl
xchg
stos
call
jle
lds
out
sub
daa
cmc
loopne
movsl
mov
cs
xor
popf
adc
sub
shll
inc
ja
das
xor
xchg
gs
mov
lds
sub
sub
into
lock
mov
xchg
adc
sti
dec
mov
or
lock
sbb
in
push
xchg
inc
fcmovnu
and
arpl
pop
cmp
scas
loope
sbb
xchg
mov
mov
rsqrtps
adc
aaa
push
jno
mov
mov
cmp
mov
test
pushf
mov
testl
mov
pop
pop
leave
adc
xchg
mov
mov
fdivrs
ja
adc
pop
std
jmp
push
in
and
mov
call
mov
sbb
sub
sti
mov
out
or
movsb
pop
lahf
xchg
or
mov
movsb
out
add
flds
test
pop
mov
mov
loope
outsl
jg
cmp
or
rcr
push
xor
loop
jnp
add
fcomip
cmpsl
mov
jno
push
xchg
hlt
xchg
inc
pop
xor
popa
popa
insb
std
or
ror
out
fstpl
or
sbb
das
pop
scas
insb
loope
ja
loop
scas
mov
pop
inc
dec
int
aaa
xor
sti
sub
sub
lods
test
imul
jmp
xchg
jne
pop
leave
sbb
jnp
dec
push
hlt
xchg
and
sub
pop
insb
xor
daa
mov
mov
or
lahf
push
pop
sub
inc
negb
mov
out
adc
pop
add
fnstsw
rorl
ret
pop
movsl
sbb
add
ja
mov
mov
push
mov
dec
scas
aaa
mov
sub
xor
sbb
xchg
lret
mov
or
sbb
rclb
jecxz
jb
and
icebp
stos
repnz
rcrb
loop
dec
jno
push
dec
adc
ss
repnz
jnp
adc
jecxz
mov
scas
push
mov
dec
iret
int
movsl
aaa
aam
dec
ds
int
inc
add
loope
das
in
scas
mov
and
dec
mov
fldenv
jg
into
adc
pop
lea
stos
pop
int3
mov
push
lds
daa
adc
rcl
cmp
hlt
notl
mov
popf
and
fistl
mov
xchg
xchg
daa
pop
mov
popa
sbb
pop
mov
fwait
lods
cmp
or
xchg
mov
fstpt
das
daa
in
jmp
scas
jmp
mov
xor
lods
ret
in
or
inc
repz
lds
icebp
and
mov
daa
xor
add
js
xchg
xchg
lods
sbb
hlt
int
or
pop
into
mov
cmpb
pop
sub
dec
arpl
jne
lods
adc
arpl
mov
jns
outsb
push
loop
or
jmp
cmc
idiv
mov
and
lds
pop
stos
aam
add
or
in
inc
out
bnd
test
mov
xchg
insl
mov
mov
pop
and
jmp
xchg
jmp
cmpsl
mov
adc
cmp
lods
add
jmp
xor
popa
xchg
mov
xor
push
cmpsl
mov
test
pusha
outsl
xchg
pushf
insl
xchg
mov
pop
push
fwait
lods
mov
push
or
inc
dec
xchg
outsb
movsl
jne
in
mov
or
sub
or
movsl
lds
xchg
cmc
mov
cmpsl
xchg
xchg
fwait
adc
daa
jno
test
lods
test
lods
call
xchg
mov
pop
xlat
and
or
or
lds
aad
inc
lret
jb
ds
fwait
loopne
lds
and
lcall
mov
sub
mov
imulb
repz
sub
sub
and
call
adc
inc
shlb
nop
mov
sahf
mov
inc
lods
scas
push
enter
scas
out
inc
lea
pop
jbe
pop
xchg
ss
mov
xchg
push
inc
push
jp
test
fld
fisttpll
sbb
js
add
push
push
movsb
sub
stc
sbb
mov
sti
add
repz
xchg
es
mov
adc
mov
shrl
cmpsb
mov
mov
rorl
in
rcr
sub
xchg
fwait
add
leave
dec
lret
pusha
enter
je
dec
les
xchg
xor
push
dec
and
dec
mov
in
mov
sub
mov
sub
mov
cs
adc
mov
sbb
or
stos
push
sbb
mov
popf
adc
mov
push
mov
roll
jecxz
fcmovne
xor
fisttpl
pop
shrb
out
sub
mov
dec
mov
push
mov
sahf
popa
sbb
xor
in
sbb
jno
ret
ljmp
decb
mov
xlat
call
stc
sbb
jb
aam
dec
fwait
ljmp
out
mov
int
lcall
shlb
aaa
pop
push
lds
int
jmp
daa
jbe
xor
xlat
pop
ret
sti
sbb
rorl
sub
push
orb
mov
push
scas
int
mov
push
adc
in
and
mov
adc
scas
movb
mov
sbb
outsb
icebp
and
push
lds
pop
jl
xchg
inc
mov
fneni(8087
lods
pop
jb
add
aad
stos
adc
mov
ja
fdivl
pop
or
xchg
or
subb
outsl
dec
les
into
pop
xchg
fidivrl
mov
jp
shrb
outsb
inc
jo
lcall
sahf
mov
sahf
cmpsl
mov
inc
mov
dec
call
jb
fistpll
dec
out
cmc
cmp
add
pop
mov
dec
not
repz
dec
sbb
push
lods
sub
insb
js
and
repz
jge
jle
repz
lret
fisubrs
mov
mov
adc
cmp
jecxz
iret
cs
cmpxchg
pop
mov
mov
fucomip
sub
arpl
in
scas
mov
and
lcall
mov
mov
imul
add
popl
mov
xchg
imul
pop
scas
or
outsb
out
in
push
mov
loopne
into
mov
xor
lock
xor
pop
ds
aas
mov
jo
push
jno
add
nop
scas
lret
jg
fwait
popf
jb
pop
std
adc
mov
jo
bound
xor
jno
je
inc
inc
xor
lods
cltd
pop
push
jp
in
lds
jns
mov
roll
jg
cmp
sbb
aaa
in
add
movb
icebp
inc
ret
dec
cmp
std
push
scas
and
mov
rcll
icebp
sbb
mov
sub
pop
cmp
push
xchg
cmpsl
mov
insb
pop
pop
pushf
loopne
push
into
mov
push
or
cmpsl
jo
cmp
cltd
das
call
shrl
sbb
lcall
xchg
aas
pop
sbb
adc
loopne
push
into
enter
fsubr
dec
mov
or
addr16
scas
and
cmp
movsb
shrb
sub
xor
mov
lahf
shrb
push
xor
jb
repnz
push
sbb
test
inc
fisubl
push
cmc
sbb
pushf
xchg
jmp
hlt
loop
cmpsl
int3
imul
jmp
xchg
push
jbe
pop
pop
jo
sbb
sbb
scas
sbb
xchg
or
add
in
jp
mov
notb
stos
sbb
inc
test
mov
add
add
inc
sub
icebp
lea
push
les
push
jmp
loopne
and
sbb
jne
in
sahf
scas
dec
or
lock
mov
in
cwtl
mov
dec
stos
xor
std
lock
mov
push
enter
test
rorb
and
pop
outsl
cld
shrl
movsl
mov
dec
inc
dec
enter
sbb
fimull
out
pushf
loopne
cmc
push
into
repz
in
or
jne
fimull
sbb
add
out
jmp
lds
mov
mov
xchg
mov
enter
xchg
fsubrs
into
es
dec
std
and
fnstenv
fisttps
loop
push
and
outsl
mov
xlat
rcrb
lea
fistps
int
push
inc
adc
iret
inc
jmp
lret
flds
sbb
and
sbb
movsb
and
sarb
hlt
mov
ficompl
inc
pop
xlat
ds
nop
or
sbb
mov
lods
fidivs
out
int
test
scas
cs
pop
inc
repnz
or
testb
mov
hlt
xchg
leave
mov
mov
pop
pushf
imul
mov
fldln2
xor
mov
rdpmc
scas
mov
or
fsubrs
scas
cmc
sub
cmpsl
lret
sbb
hlt
sbb
mov
push
repz
sbb
ja
loopne
xchg
cmc
inc
sbb
ljmp
sbb
loope
sub
les
sarb
subl
adc
cs
jle
jg
xor
adc
and
and
pop
and
pop
fcomps
cmp
or
push
jnp
bound
adc
mov
pop
lcall
sub
mov
ljmp
mov
setno
mov
cmpsb
cmc
sbb
mov
lock
into
xor
xchg
lods
rcrl
or
add
bound
fwait
outsl
jo
std
jne
xchg
jl
cwtl
mov
dec
inc
mov
sub
mov
cwtl
or
fld
mov
cld
shlb
jb
les
cmpsb
movsl
xor
push
gs
jge
lds
sbb
cmp
fmuls
and
pop
in
cmpsl
mov
sarl
pop
icebp
pop
mov
cwtl
sub
or
cwtl
cwtl
cmpsl
jg
or
lods
push
inc
jg
pop
rcrl
das
mov
bound
btr
pop
ljmp
scas
loop
mov
int3
data16
mov
dec
mov
insb
inc
fwait
aam
int
push
xor
aas
lods
inc
pop
cltd
cmpsl
rorl
ja
jp
pop
sbb
xchg
popf
insl
xchg
cld
add
fnstenv
lret
pop
jbe
mov
insl
shlb
or
add
inc
and
adc
ret
mov
hlt
pop
sub
inc
stos
cwtl
pop
test
push
jp
ja
jg
les
pop
ret
xchg
xchg
sub
rol
and
mov
push
insb
std
push
xor
lods
loopne
in
test
fucomi
test
bound
in
pop
int3
in
cmpsl
aam
add
das
das
insb
mov
pop
out
sbb
mov
cmp
stos
sarl
jmp
into
mov
and
jb
stc
mov
outsb
mov
or
in
lds
inc
stos
xchg
pop
enter
lods
bsr
icebp
aaa
xchg
add
test
loop
push
cs
popf
ret
xchg
fists
scas
mov
push
mov
call
and
stos
lock
push
addb
add
adc
lahf
and
clc
loopne
dec
hlt
loope
mov
and
or
fcompl
inc
mov
mov
jb
xor
mov
jno
imul
je
pop
pop
ja
ret
in
mov
xchg
cld
push
movsl
scas
cmc
pop
lock
pop
mov
push
pop
sbb
rclb
and
loope
fucom
das
test
fwait
mov
sub
jmp
pushf
push
inc
scas
dec
lods
es
lcall
cmp
cmp
addr16
jmp
push
cmp
scas
das
lods
mov
lds
hlt
imul
test
push
mov
pop
fcmovnb
mov
jbe
iret
outsl
mov
cmc
mov
mov
xchg
push
add
hlt
pop
pushf
dec
aas
dec
xorb
testl
lods
test
pop
sub
mov
ja
mov
out
ja
cmp
int
out
scas
dec
and
sub
inc
roll
push
xchg
cmp
jle
movsl
pop
rcpps
scas
xor
rcll
into
jo
jne
cmp
stos
pop
jno
test
test
mov
mov
mov
fbstp
pop
enter
jmp
jmp
int3
mov
mov
hlt
xor
jge
lods
dec
in
and
push
cmpsl
jne
lcall
pop
xchg
dec
ja
dec
sub
sub
and
dec
add
fstps
int3
nop
movsb
pushf
mov
mov
in
cmp
xor
hlt
std
aad
ss
int
xor
cwtl
mov
xchg
das
and
mov
mov
cmpsb
movsl
daa
js
mov
enter
xchg
mov
test
jg
lds
mov
addr16
cmc
js
push
lret
popa
xchg
sbb
sbb
push
jge
jae
je
iret
pop
nop
mov
sahf
lods
outsb
pop
scas
push
adc
or
cmpsb
imull
ljmp
inc
aas
addr16
mov
into
jg
inc
stos
jno
push
inc
mov
out
sti
bound
push
outsb
insb
jle
and
lods
cld
sbbl
xlat
cltd
push
sub
lcall
movsb
jmp
cmpsb
lea
fbld
imulb
push
sahf
mov
jge
out
mov
rcrb
jb
int
test
out
sub
shlb
fdivr
outsb
fwait
lret
fcoms
push
fidivrs
int
out
pop
repz
scas
stos
dec
sub
stos
cmc
adc
mov
in
movsb
mov
repz
out
outsb
jbe
pop
fistl
imul
aad
cltd
add
mov
in
mov
push
lods
dec
loope
pop
lcall
mov
outsb
xchg
pop
out
xor
xor
repz
or
cmp
pop
dec
adc
push
sbb
xchg
test
push
outsb
mov
mov
mov
lahf
sbb
jge
repz
push
add
shll
push
inc
mov
jmp
aas
or
xlat
or
and
subl
lods
xchg
into
xor
lods
pop
dec
cli
xchg
inc
jmp
sub
sbbl
ljmp
jns
inc
cli
int
data16
jae
fwait
mov
mov
scas
inc
add
mov
sbb
mov
xor
lahf
daa
sbb
shlb
inc
mov
pop
cmpsl
imul
sbbl
or
bound
ja
loope
popf
jmp
pop
loop
ja
lahf
and
pop
daa
pop
inc
das
test
subl
lods
xchg
xor
jae
popa
inc
cltd
sbb
fsubl
fnsave
inc
jp
pop
mov
inc
out
notb
arpl
test
loop
je
das
sbb
in
lds
daa
mov
xor
pop
lods
fadd
adc
cmpsl
neg
dec
jb
mov
arpl
xchg
pop
mov
leave
in
or
data16
xchg
sahf
xchg
pop
fsubrl
mov
pop
inc
mov
shrb
sub
sbb
add
push
xchg
adc
shrb
fdivrl
in
test
out
mov
adc
mov
jae
adc
int
cltd
lds
push
pop
push
iret
sbb
insb
orps
sahf
cmp
xor
lahf
or
aaa
jae
test
shll
int3
movsl
movsb
mov
inc
push
add
outsl
mov
and
add
mov
sub
subl
scas
mov
imul
inc
inc
pop
mov
cmp
sub
in
outsl
dec
test
cltd
cmp
jecxz
arpl
daa
stos
faddl
dec
mov
lds
stos
push
rcrb
adc
loop
mov
or
daa
call
inc
cmpsl
cmp
lods
add
fwait
loope
pop
push
cltd
dec
enter
rorl
xlat
sub
fstpl
fwait
clc
mov
xchg
mov
inc
pop
xchg
popf
subl
inc
mov
in
pop
lds
test
xor
mov
ret
push
pushf
xchg
scas
xor
jmp
mov
pop
out
outsl
je
mov
ja
push
fldenv
or
jge
sbb
mov
cs
cmp
in
aad
mov
push
lea
xlat
pushf
es
jmp
lret
xchg
daa
dec
mov
popf
jnp
subl
fnsave
in
rcr
mov
addr16
cld
dec
add
mov
rorl
mov
mov
ds
or
sbb
xchg
pushf
in
int
cmpsl
out
cwtl
fcompl
sub
sub
dec
push
xchg
cltd
dec
int
cmpsb
add
cltd
sub
jo
sbb
mov
sbb
lods
jae
movsb
imul
mov
rcr
mov
mov
ljmp
mov
xchg
movsl
push
andb
imul
sbb
mov
aas
xchg
xor
xor
sbb
push
jmp
push
mov
popf
clc
pop
inc
xor
mov
int
daa
shll
xor
mov
rcrl
push
sbb
hlt
mov
out
pushf
mov
push
mov
jbe
pushf
and
cld
inc
mov
aam
push
cmp
add
leave
imul
movsb
popf
push
sub
mov
movsb
iret
fstps
xchg
out
cmpsl
outsb
les
test
shr
xchg
push
mov
lds
pop
dec
mov
test
insb
vpcmpeqb
mov
pushf
cmpsb
pop
popf
sub
or
mov
call
hlt
call
pop
into
dec
and
jns
mov
cmpsb
mov
xchg
in
xchg
addb
cmpsl
imul
sub
pop
jmp
repnz
pop
mov
je
xchg
aam
lods
mov
mov
iret
call
push
aad
decl
mov
mov
fisubrl
sbb
and
inc
cmp
xchg
pop
or
mov
fsts
xchg
loop
into
adc
mov
fsubr
insb
iret
sbb
mov
sub
fdivrl
or
sbb
int
mov
aad
xor
jnp
cmpsl
ja
shlb
inc
ljmp
test
sbb
jne
xor
sub
cmp
adc
scas
test
dec
cmp
bound
xchg
sub
lds
mov
lods
addl
cwtl
aas
mov
out
sub
adc
js
sbb
cmp
sahf
cmpsl
jle
pop
out
mov
aas
mov
imul
cwtl
mov
mov
push
mov
xchg
das
pop
scas
add
aam
loop
lcall
mov
push
addr16
push
push
and
mov
lds
shlb
sahf
dec
push
mov
or
lods
xchg
xchg
fists
test
filds
jge
mov
in
mov
xlat
lods
mov
pop
imul
ret
sbb
ss
inc
stc
lret
aaa
or
or
lea
mov
insb
inc
pusha
cltd
shlb
js
aas
stc
inc
cltd
enter
lret
pop
xor
lea
xchg
push
gs
jne
mov
lea
cmc
sub
sub
sbb
push
mov
adc
adc
mov
fwait
jmp
pop
inc
xor
out
mov
mov
jb
in
inc
cmpsb
jle
sbb
adc
aam
mov
mov
mov
movsl
mov
jb
sti
das
mov
mov
popf
popf
sahf
pop
fwait
and
imul
push
pop
fisubrl
test
mov
jns
in
inc
fcmove
out
mov
fisubrs
mov
inc
sub
lcall
repz
pop
sbb
int3
pop
mov
xor
lods
jae
pop
or
add
out
mov
adc
jns
pop
sbb
std
arpl
add
nop
mov
test
dec
scas
xchg
cmp
sti
mov
leave
mov
fs
out
mov
out
and
mov
sbb
sub
ret
or
gs
loop
repz
inc
adcb
mov
into
sar
mov
mov
sti
mov
mov
cltd
cmp
push
add
mov
aaa
or
push
push
adc
cmpsl
mov
sti
stos
insb
xchg
repz
aaa
inc
in
and
cmp
mov
jmp
dec
cmpsb
daa
jns
sub
and
cld
scas
and
mov
popf
rcrb
jnp
out
add
jb
ljmp
push
inc
or
mov
test
das
jb
xor
sbb
insb
jg
cmp
mov
and
xchg
sbb
mov
mov
xor
pop
pop
mov
insl
cwtl
sub
sbb
mov
repz
outsl
mov
lds
call
aad
xchg
cltd
lock
mov
popf
pushf
rcr
dec
je
add
mov
pop
push
enter
mov
lods
pop
jns
adc
in
mov
cld
int3
std
xchg
fdivrl
movsb
pushf
pop
lods
push
rolb
mov
aam
dec
sahf
push
scas
adc
pusha
out
xor
sbb
ds
adc
sbb
xor
jmp
lds
ret
inc
cmp
pop
lcall
mov
mov
in
shll
int3
fmul
mov
popf
mov
inc
mov
push
xchg
mov
cmp
movsl
rorl
or
sbb
sbb
inc
cmpsl
out
push
sub
imul
es
aas
push
pop
add
movsb
pop
xchg
adc
lods
xchg
in
inc
sbb
cwtl
xchg
push
stos
pop
sub
sarl
lea
jmp
gs
gs
dec
xchg
cli
fnstcw
aaa
mov
xchg
xchg
lcall
repz
or
jmp
out
and
push
xor
in
cmp
ret
mov
mov
mov
lea
int
mov
stos
popa
dec
sbbl
lods
stos
add
pushf
lcall
test
popf
into
inc
mov
das
xchg
or
pop
pop
movsb
mov
jmp
inc
dec
inc
pop
push
xchg
ljmp
repnz
daa
std
xlat
test
dec
ss
cltd
jmp
mov
sbb
loopne
push
out
stc
into
and
mov
pop
rol
cmpsl
les
and
xor
nop
mov
test
fwait
pop
dec
dec
xchg
dec
or
scas
inc
inc
mov
jbe
inc
xchg
mov
pop
cmp
cmp
cwtl
inc
mov
fdivl
adc
pop
xchg
add
hlt
push
out
es
inc
sbb
push
js
or
iret
leave
popf
mov
pop
das
pushf
cltd
lea
pop
sti
out
movsb
sbb
lods
lds
sub
out
lret
mov
repz
sbb
or
cmpsl
insb
adc
push
push
iret
xor
xchg
gs
icebp
adc
cmp
sbb
insl
hlt
dec
aam
and
pushf
lock
lcall
sbb
xlat
je
xor
movsl
loope
jmp
mov
data16
pop
aaa
and
jmp
dec
insb
or
adc
leave
data16
movsl
push
loopne
fistpll
fisttpl
enter
sti
lods
add
xchg
imul
and
mov
dec
jns
sti
sbb
adc
sbb
adc
inc
or
loopne
fimuls
movsb
xorl
sahf
jl
add
les
movsb
xlat
dec
movsb
sbb
pushf
or
push
push
in
jmp
pop
gs
push
xor
pop
pushf
lods
shr
aaa
dec
sub
fidivs
xchg
mov
sbb
mov
mov
in
mov
xchg
and
push
xor
mov
adc
sbb
mov
jmp
lods
lcall
icebp
sub
scas
in
call
aad
and
aam
out
push
scas
pop
sbb
dec
std
movsb
out
mov
ljmp
pop
mov
fistpl
jnp
pop
dec
xchg
insb
loopne
and
mov
les
add
ss
pop
cld
cmpsb
fwait
sbb
inc
pop
adc
or
sbb
neg
xlat
mov
test
mov
clc
cmp
outsl
push
sbb
popf
call
mov
insl
movsb
add
jge
mov
mov
xchg
or
lret
mov
sbb
cmpsb
ret
push
scas
mov
lods
ss
adc
pop
aas
lcall
shrb
mov
add
and
jb
lds
push
ret
test
mov
mov
mov
push
movsb
add
pusha
cmpsl
stos
xor
dec
jle
lea
ret
ja
sbb
out
mov
out
insb
inc
pusha
push
in
push
and
adc
add
cmp
fs
cmp
xorl
repz
gs
and
lock
scas
lahf
mov
or
mov
or
outsl
imul
pop
mov
pushf
pop
pop
fadds
jo
clc
mov
in
lds
dec
sbb
imul
scas
xlat
insb
dec
mov
push
dec
inc
jbe
movsl
mov
pop
adc
in
dec
and
sub
jo
out
daa
dec
aad
xor
stos
fwait
aas
pop
sub
jae
ljmp
jno
data16
or
pop
repz
xor
lods
sub
lods
je
cs
test
lods
dec
and
push
sub
dec
pop
cmp
dec
mov
jb
mov
xor
pop
lods
xchg
add
jmp
inc
lcall
push
cwtl
push
jecxz
xchg
test
hlt
fwait
sahf
push
sub
jnp
imul
sbb
or
cmc
nop
leave
enter
shll
fdecstp
je
lock
cwtl
mov
or
fisttpl
movsl
push
mov
sbb
test
jl
xlat
pop
jnp
sti
adc
jmp
mov
push
cmp
movsl
iret
loope
inc
sub
outsb
xchg
out
les
cs
out
push
jp
cmp
shrb
fnstsw
mov
push
dec
pop
sahf
mov
imul
popa
xchg
mov
dec
test
scas
xor
mov
mov
sub
lods
fcmovbe
popf
loop
push
popfw
loopne
mov
dec
in
bound
xchg
mov
mov
sti
pop
out
xor
mov
stos
andb
sub
cli
and
mov
ss
mov
mov
stc
push
je
xlat
sbb
lds
pop
mov
xchg
inc
xchg
cli
lahf
test
dec
jns
jns
mov
ja
xchg
lret
cmp
xchg
and
test
les
mov
outsl
jge
insl
loopne
adcl
xchg
in
adc
pop
lret
mov
aad
pop
or
sub
cli
xlat
ret
mov
xchg
je
mov
movsl
repz
mov
pop
sbb
or
xchg
aam
add
out
inc
jbe
std
add
jg
popf
push
insb
push
mov
loop
sahf
cmp
jge
das
movsb
mov
outsl
sti
adc
mov
cmp
mov
jl
into
lods
ss
popf
lock
aaa
std
mov
mov
lahf
push
lods
lds
dec
in
ja
dec
mulb
pop
inc
out
aam
or
insb
fcmovnb
bound
sti
cwtl
mov
adc
inc
in
lret
jmp
inc
or
inc
mov
inc
pop
cmp
xchg
lret
add
push
pop
mov
out
aaa
ja
inc
jmp
adc
pop
push
movsl
fmuls
scas
lds
xchg
call
xchg
scas
mov
xchg
pushf
ja
ret
cmc
pop
ja
adc
gs
stos
addl
insb
mov
mov
daa
cmp
out
stos
xor
outsb
outsl
lahf
cmp
jecxz
sbb
pushf
xchg
lods
xchg
push
hlt
mov
fsub
xchg
sbb
sarb
test
lds
loopne
push
cmpsl
sbb
add
jmp
fsubl
or
cmp
inc
flds
inc
pminub
std
cmp
popf
sbb
movsb
test
adc
xor
mov
mov
in
push
aam
call
pop
mov
enter
lds
mov
imul
add
mov
daa
les
push
inc
popf
cmp
pop
fwait
pop
stc
cltd
cwtl
hlt
roll
ret
mov
loop
cltd
fistl
lods
sub
scas
mov
into
push
inc
imul
sbb
adc
lods
insl
add
pop
pop
dec
ret
cmp
in
int3
icebp
cmp
sbb
xor
or
add
mov
test
xor
adc
lods
pusha
ds
rcr
jo
scas
lock
mov
mov
mov
jae
xlat
push
lds
add
sub
in
aad
and
mov
into
ret
fisubrs
rorb
rorb
and
mov
inc
mov
or
sbb
pop
push
shlb
push
insb
in
stos
mov
push
dec
rcll
pushf
cmc
adc
xchg
test
insl
xchg
pop
or
xchg
ss
pusha
shlb
mov
popf
inc
and
cltd
outsb
mov
jb
outsb
stc
enter
fwait
mov
cwtl
fs
and
clc
cmpsb
xor
arpl
mov
fildll
in
scas
and
sar
mov
sub
or
sbb
mov
add
pop
push
xor
mov
jmp
sbb
pop
enter
movsl
rcrb
push
loop
shlb
jae
lods
movsl
out
int
rolb
jnp
push
and
mov
test
pop
cwtl
mov
fstpl
mov
lret
scas
push
xchg
lret
sbb
mov
sbb
loope
fisttps
mov
push
sub
mov
mov
test
sahf
shrb
adc
push
iret
int3
sbb
dec
mov
ljmp
in
out
jns
pop
xor
cld
lahf
and
movsb
popa
out
lods
movsl
cwtl
mov
int3
pop
std
mov
mov
stos
sti
or
and
in
sub
mov
push
hlt
mov
push
jae
cmpsl
cmpsb
or
out
pop
arpl
and
push
fwait
inc
inc
add
jge
in
aam
je
push
sub
and
cwtl
pop
icebp
es
pop
test
and
mull
mov
hlt
pop
fbstp
mov
or
mov
fwait
ja
inc
inc
mov
push
es
add
cmp
lahf
mov
inc
int3
adc
movsb
fisttpll
mov
jo
or
repz
mov
mov
xlat
and
cmp
push
bound
std
pop
inc
nop
sub
shll
sbb
mov
mov
add
in
mov
dec
mov
in
out
addr16
pop
xchg
repz
xchg
scas
in
or
push
out
xchg
push
jmp
repz
pop
lahf
test
or
add
jns
shr
out
int
stos
pop
loop
test
jmp
test
xchg
popf
lods
pop
ret
vmovntps
mov
sti
lods
lret
inc
das
ss
xchg
xchg
cmpsl
jmp
mov
movsb
xchg
pop
stos
mov
xchg
cwtl
std
fildll
orl
add
mov
in
ljmp
mov
mov
jmp
fdivrp
negl
jecxz
and
sbb
mov
mov
inc
or
cmpsl
das
xchg
dec
shl
xor
adc
movsl
mov
and
mov
jne
es
xor
mov
push
fistpl
or
xchg
adc
jnp
movsb
fdivs
xor
pop
jno
pop
xor
mov
repz
adc
mov
test
mov
cli
outsl
jnp
cmp
xor
mov
inc
push
shll
and
fbstp
test
mov
sahf
aas
mov
fildll
sbb
lds
jo
lret
cmpsb
int3
mov
cld
cmpsl
push
sub
jb
xor
xchg
sbb
sbb
test
das
lcall
imul
insb
pop
jle
sbbb
jg
xchg
test
call
sub
mov
mov
mov
out
mov
mov
push
mov
mov
sbb
lea
movsb
add
sub
jecxz
mov
ljmp
lods
stos
mov
xchg
ljmp
ljmp
pop
ja
jl
lods
sub
lods
jb
movsb
add
stc
jmp
mov
movsb
je
gs
cmpsl
in
test
scas
push
mov
pop
inc
xchg
mov
mov
push
adc
fcom
out
test
mov
jle
cmp
mov
testl
dec
inc
push
sbb
mov
mov
push
clc
sbb
enter
pushl
outsb
and
mov
and
xchg
fsubs
clc
inc
cmpsb
outsl
das
sbb
cmp
dec
mov
ljmp
xchg
sar
lods
test
xchg
adc
cwtl
cld
jl
push
push
dec
jmp
sub
adc
or
lds
pop
jge
insb
mov
sbb
cltd
mov
ljmp
jp
cmpsl
jb
aad
mov
lcall
rcrb
push
popf
sub
sbb
sahf
dec
fidivrs
fimull
sbb
roll
into
daa
cli
fstps
gs
lods
and
cmpsl
out
mov
add
or
in
mov
inc
pushf
out
dec
int
test
pusha
mov
mov
aad
pop
inc
fnstsw
jbe
push
imul
xchg
lcall
mov
xlat
mov
or
mov
popf
xchg
push
fld
inc
sbb
testl
fidivs
lret
jb
imul
mov
and
inc
mov
or
sub
inc
and
into
rcrl
hlt
imul
mov
cltd
xchg
dec
xchg
int
push
or
cmp
das
xor
cld
stc
out
lret
or
daa
loop
das
mov
cltd
sub
test
stc
scas
mov
jbe
ret
in
ljmp
and
dec
hlt
xor
ret
popf
mov
fnstenv
bound
stos
cmp
imul
movsb
jns
lods
xor
bound
pop
mov
cmpsl
pop
jnp
lahf
add
mov
cld
add
sub
cmp
subl
pop
iret
fcompl
stos
or
lds
mov
sbb
add
mov
sub
scas
xchg
or
enter
in
mov
ss
push
ja
repz
sarl
loop
mov
mov
in
mov
or
adc
and
stos
lods
lds
les
leave
in
loop
stos
pop
mov
aas
mov
sub
xchg
pop
in
movq
not
popf
loope
push
pop
insb
aaa
mov
xchg
dec
pop
xchg
add
ret
mov
mov
mov
xchg
adc
out
cmp
push
lahf
pop
xchg
push
popf
lods
or
cs
xor
mov
jo
repz
pop
dec
in
scas
xchg
fmulp
filds
sub
popf
mov
xrelease
mov
jae
sbbb
push
cmp
pop
stos
nop
popa
push
int
jbe
pushf
xlat
rorb
pop
mov
and
dec
cwtl
insl
popa
scas
xorl
push
sbb
jl
push
ljmp
mov
inc
cs
stos
sub
mov
jne
xor
jnp
mov
lcall
mov
stos
mov
mov
mov
int
mov
lds
pop
lcall
xchg
push
imul
mov
pushf
fistpl
loopne
or
scas
cmp
aas
in
xorl
jmp
push
mov
cltd
mov
popa
lods
filds
sti
leave
fcompl
int
xchg
repz
lods
xchg
xchg
orb
sbb
in
pop
xor
out
daa
icebp
xor
mov
repz
dec
xchg
jnp
mov
xchg
stos
pop
jo
test
movsl
cmp
lahf
pop
in
inc
fsubr
push
pop
les
pop
jp
test
test
lods
mov
mov
call
sbb
stos
repz
cmpsl
lahf
repz
xchg
lret
pop
mov
sub
outsl
movsl
inc
mov
leave
sub
pop
add
push
xchg
xchg
aas
mov
fidivrl
imul
or
lea
pop
mov
rorl
mov
dec
pushl
or
jo
dec
stc
call
out
sti
pop
jae
mov
xchg
cld
inc
sub
xchg
mov
clc
icebp
scas
dec
sbb
repz
shll
int3
inc
pushf
dec
mov
sub
xchg
fisubrs
dec
inc
popf
mov
scas
das
mov
dec
pusha
popl
sub
scas
xor
in
gs
in
jo
add
inc
jb
imulb
sbb
dec
xchg
inc
mov
mov
repz
pop
mov
stc
out
insl
pop
pop
lds
incl
fsub
sti
add
call
loopne
notl
dec
xlat
push
test
mov
int
and
pop
push
or
sbb
leave
in
fwait
lds
and
jb
mov
pop
pop
cmpsb
adc
mov
mov
test
jbe
movsl
fimull
int
push
jp
mov
sbb
or
sbb
movsb
add
repz
mov
test
jmp
outsb
inc
xchg
shrl
mov
or
push
test
test
mov
into
lahf
add
mov
sbb
fstpl
fwait
adc
imul
dec
icebp
sub
in
cmp
lods
pop
jmp
mov
lret
stos
loopne
lea
fwait
xchg
xchg
movsl
movsb
ja
in
cli
sub
sbb
mov
xlat
pusha
or
sub
popf
mov
ret
in
dec
add
jne
lcall
adc
pop
imul
stos
inc
sbb
imul
lcall
xchg
scas
sbb
lret
mov
movsb
lahf
lret
lret
sar
cwtl
push
popf
fucomi
mov
fwait
adc
leave
fnsave
jo
fisubrs
adc
sub
pop
lods
loopne
sbb
dec
cli
lods
pop
sbb
scas
mov
cld
xchg
cli
das
cs
or
inc
cmpsl
imulb
cwtl
loop
lds
sub
add
out
pop
mov
jae
jo
push
je
sub
in
out
mov
add
pop
sqrtps
push
sub
push
es
int
cmp
jns
mov
out
jle
lea
lcall
fistpll
add
or
push
cbtw
stos
mov
fstps
mov
sub
imull
adc
add
out
jmp
out
ds
mov
rorb
mov
sbb
ret
hlt
xchg
in
add
ljmpw
inc
mov
mov
xlat
xchg
jbe
xor
jecxz
xor
cmpsb
adc
stos
pop
insb
push
jmp
cwtl
sub
fisubl
movb
and
sbb
adc
push
sub
mov
fistpl
push
xor
pop
fsubr
frstor
adc
test
dec
imul
insb
pop
fsubl
arpl
cwtl
sbb
xor
movsl
jns
dec
scas
leave
xchg
push
enter
mov
loopne
cltd
pop
push
cmc
mov
insb
js
xchg
xchg
and
pop
lds
test
aas
sbb
xchg
dec
sbb
xchg
int
mov
stc
leave
icebp
push
inc
sbb
popf
popa
jge
xor
std
or
lds
add
idivl
enter
and
in
mov
pop
loop
into
out
das
pop
lret
mov
std
hlt
mov
mov
xor
jmp
outsb
sub
fmulp
xor
das
inc
inc
xor
mov
inc
sub
mov
sub
push
pmovmskb
sbb
mov
dec
sbb
hlt
add
ret
dec
mov
test
add
shrl
repnz
test
mov
mov
stos
vmread
mov
pop
fldcw
lock
mov
adc
daa
insl
dec
pop
and
loopne
xor
xlat
fmul
lock
push
in
sbb
xchg
dec
sub
insb
mov
xor
test
fdivr
jmp
cli
ret
arpl
xchg
fidivs
jnp
hlt
lods
mov
test
in
fisubrl
lds
push
or
add
push
out
xchg
out
enter
xchg
jo
jp
pop
mov
add
and
mov
divb
andb
in
mov
test
dec
repz
fcomp
mov
into
sbb
xchg
es
push
repz
inc
aas
jmp
clc
jb
jge
pop
outsl
push
cld
xchg
mov
sahf
leave
je
lahf
adc
cmp
adc
shl
mov
xor
fnstsw
mov
testl
movsl
xchg
iret
jp
cwtl
in
push
jne
adc
pop
xor
mov
mov
cmp
mov
push
sahf
adc
inc
in
inc
divl
push
mov
pusha
push
das
popa
dec
sub
test
mov
popf
mov
scas
xor
stc
daa
push
dec
cmc
inc
xchg
stos
les
das
pop
fidivl
mov
mov
loopne
sub
cltd
daa
or
aas
pop
mov
lret
pop
in
jns
movsl
push
mov
sbb
inc
loop
xchg
pushf
add
out
xchg
mov
hlt
sbb
pop
cmp
jl
jmp
test
orl
test
sbb
or
and
xor
hlt
in
cs
jno
in
loop
xor
in
or
loop
inc
pop
and
adc
sbb
in
or
cltd
jmp
jl
dec
je
mov
into
cs
loope
out
xchg
mov
shlb
into
lds
pop
mov
cmpsl
stos
pop
stos
push
test
out
into
pop
pop
jbe
stos
jbe
cli
comiss
popl
xor
xor
lcall
mov
mov
enter
jae
add
jmp
in
or
mov
out
adc
jge
xchg
xor
mov
mov
mov
aaa
in
mov
mov
lret
movsb
xchg
fwait
xlat
rorb
in
mov
mov
mov
sub
outsl
mov
psrlw
xlat
push
adc
xchg
and
loopne
fsubrp
lcall
nop
push
cmp
into
sbb
sub
cmp
cmpsb
imul
repnz
and
jl
sbbl
jne
aaa
aaa
out
inc
scas
jne
lods
jle
mov
xchg
pop
and
scas
jbe
jecxz
xchg
mov
xchg
lahf
mov
push
pushf
xlat
inc
pop
loopne
mov
jns
loope
pop
shrl
push
lahf
aad
jnp
fwait
pop
shr
jnp
or
addr16
xchg
ja
mov
lret
pop
popa
scas
outsl
mov
les
add
mov
adc
sbb
ss
es
int3
mov
in
xchg
jecxz
mov
cmp
out
arpl
iret
xchg
mov
lret
fsincos
or
xor
fsubl
aam
add
rep
mov
ficoml
sbb
out
mov
loopne
push
data16
pop
psubusw
insb
ficoml
or
sbb
jae
and
repz
sbb
sbb
push
psubsw
mov
test
adcl
add
push
ljmp
in
in
ljmp
cwtl
hlt
in
xor
fucomp
xor
sbb
lock
xor
sbb
enter
movsb
push
in
adc
push
cmp
cmp
rcrb
out
cmpl
pop
daa
in
sub
fldln2
pushf
push
jl
ret
daa
add
sub
lods
jno
mov
jg
in
lret
cmp
inc
lahf
add
cwtl
negl
mov
movsb
daa
in
je
mov
fdivl
sbb
and
mov
and
aam
popf
sti
sub
gs
adc
hlt
out
movsb
sbb
xorb
mov
in
lds
mov
aas
cwtl
lcall
ja
fsts
pushf
popf
sbb
push
in
cmpl
mov
movsb
cwtl
xor
mov
cmc
add
mov
insb
jo
out
sbb
out
xor
dec
mov
jae
je
sub
sbb
xlat
int
sbb
lods
adc
cmp
lcall
loop
scas
push
push
out
fmull
cwtl
cmpsl
inc
inc
inc
dec
lea
jmp
push
mov
stos
sub
mov
ss
fiaddl
clc
push
mov
adc
call
sahf
lds
icebp
mov
cmp
sub
fmuls
adc
add
movsb
sbb
sbb
sbb
ljmp
cli
test
popf
scas
fmuls
inc
insb
mov
pop
pop
fcompl
or
cwtl
pmaxsw
dec
jg
cmp
lds
mov
mov
mov
cmpsb
idiv
mov
adc
jae
or
mov
dec
push
das
fcomip
sbb
ja
and
sbb
mov
fxtract
pop
fsubrs
xchg
lds
negl
repz
popa
xchg
xchg
imul
pop
mov
push
xlat
daa
and
lea
test
in
lahf
mov
mov
cmpsl
mov
jmp
vaddsubpd
divb
xlat
rol
inc
aam
mov
jbe
push
xchg
ret
lret
scas
push
cmpsb
jns
sbb
adc
insb
lret
enter
icebp
cmp
popf
pop
fmul
lods
jecxz
int3
sub
enter
sbb
cmpsb
jb
pop
xlat
mov
insb
out
pop
sub
movsl
imul
fisubl
adc
orb
nop
push
pop
sarb
xchg
je
sub
mov
inc
repz
popf
out
outsb
ds
aaa
sbb
push
add
stos
sub
int
aad
insb
push
add
movb
sbb
lods
sarl
addr16
push
les
jmp
cmp
xchg
cmp
mov
xor
or
pop
movsl
mov
mov
testl
std
lcall
pop
xchg
scas
addr16
enter
sub
and
mov
pop
xor
cmp
lods
movsl
idivb
movsl
and
sbb
cmp
lods
stos
pop
repnz
mov
iret
pop
sahf
fnstsw
inc
mull
adc
lods
xchg
fistpl
lret
xchg
daa
sbb
or
xchg
inc
sbb
scas
adc
jo
xchg
dec
cmp
scas
aas
cli
dec
add
rorb
test
in
xchg
cmp
stos
stc
dec
xor
push
testl
dec
es
or
test
outsb
repz
mov
push
aam
or
jns
arpl
int3
xchg
sub
fcomps
mov
test
pop
scas
xchg
add
mov
sbb
push
loopne
stc
mov
std
cmp
dec
xchg
fwait
pop
daa
test
test
mov
mov
arpl
aam
jno
add
in
mov
pop
dec
dec
imul
popf
mov
xchg
std
fstpl
push
adc
scas
fildll
shl
xchg
add
sub
xchg
sub
or
mov
sub
stc
or
mov
xor
or
lds
pushf
mov
fdivrp
cmpsb
xchg
jnp
mov
cmpl
adc
ficomps
sub
psadbw
xor
sbb
test
push
cs
adc
fdivs
idivb
jecxz
dec
lods
jne
push
sub
sub
or
jae
pop
adc
in
lds
xor
sbb
pop
imul
sbb
sbb
ja
stos
sub
mov
lahf
out
jge
xor
sahf
inc
or
ja
sbb
shlb
int3
insl
lods
dec
inc
sub
or
call
lds
jnp
adc
jge
lahf
lods
push
push
aam
mov
clc
shlb
hlt
loopne
test
and
xor
mov
lahf
push
dec
shll
test
int
pop
or
sti
xchg
shl
enter
shl
mov
arpl
lods
or
jge
icebp
sar
aaa
push
xchg
daa
sub
adc
negb
out
dec
and
cmp
sub
int3
mov
cwtl
lds
lock
shr
hlt
loopne
gs
xlat
cmp
ja
lods
jb
add
jge
sbb
pop
mov
xchg
pop
dec
sbb
and
dec
test
fisubrs
ss
aad
in
test
ljmp
pop
sub
mov
shlb
xor
int
je
or
aam
mov
adc
fs
adcb
dec
sbb
pop
negb
pop
sbb
xchg
iret
xchg
mov
in
movsl
lds
fistl
fwait
cld
mov
imul
lods
adc
mov
pop
test
xor
ljmp
mov
mov
mov
sbb
add
lods
lahf
out
insb
mov
loop
int3
data16
test
scas
dec
sbb
sbb
pushf
cmp
lret
negl
popa
lock
stc
jno
jge
xchg
icebp
add
icebp
int3
xchg
lods
lahf
push
scas
cmp
mov
xchg
addr16
jo
sbb
pushf
sbb
adc
mov
clc
cmp
sub
xor
sub
frstor
icebp
push
mov
xchg
sahf
xchg
sbb
push
fmuls
xor
inc
pop
xchg
jg
mov
sti
pop
sbb
sub
aas
jbe
sbb
dec
out
push
insb
lods
lods
mov
sub
mov
and
mov
out
add
enter
and
sbb
jo
pop
pushf
jo
xchg
roll
xor
scas
and
mov
js
mov
sub
jmp
test
or
in
cmp
and
mov
sub
hlt
andb
ret
lods
sub
dec
fwait
inc
adc
rcrl
mov
cmp
fmull
stos
xlat
aaa
ror
outsb
pop
sbb
lahf
pop
int
sub
mov
pusha
shrb
call
fldcw
sahf
xchg
sahf
sbb
ret
push
imul
push
sub
or
outsb
sub
xor
mov
xchg
stc
mov
or
xor
fldenv
imul
pop
cwtl
mov
lods
negb
mov
jge
add
cmpsl
mov
fidivl
push
std
sti
jbe
or
icebp
xchg
pop
pushf
pop
xchg
cld
jmp
jge
data16
loopne
cltd
cmpsb
out
jb
fadd
xchg
jne
test
or
mov
sbb
rolb
imul
movsl
mov
das
pop
leave
cmpsl
add
ljmp
mov
mov
sbb
mov
pop
mov
movsb
lea
sbb
outsb
pop
stc
xchg
imul
icebp
and
mov
sbb
add
scas
scas
push
pop
xlat
outsb
les
sub
icebp
sub
and
cmp
aad
cld
lea
cmc
adc
add
mov
test
repz
xchg
lods
or
inc
xchg
lds
cmp
shrb
cmp
imul
dec
fwait
mov
out
jnp,pt
pop
xchg
sbb
adc
lds
lret
int
lds
int
lcall
mov
insb
orb
cltd
adc
fnstenv
cli
pop
hlt
fists
push
pop
scas
cmpsl
test
mov
xchg
sub
mov
xchg
push
lret
movsb
add
ss
cmp
pop
pop
pop
xchg
ss
or
cmpsl
scas
insl
inc
sub
shl
repz
movsl
push
add
sbb
sbb
sbb
lods
cmpsl
or
jge
inc
cmc
or
aam
out
mov
mov
cmp
dec
repz
xchg
shrb
adc
rorw
int
js
hlt
sbb
mov
hlt
push
jl
lret
jecxz
mov
insb
sbb
das
mov
dec
in
rcl
out
and
int3
lea
dec
sub
pop
or
movsl
jbe
loope
neg
sbb
push
pop
xorl
enter
scas
cmp
mov
inc
popf
fwait
lahf
push
fnstsw
mov
pop
adc
inc
mov
pop
push
fdivr
orl
cmp
arpl
andl
popa
cwtl
pop
xchg
pop
repz
jp
lcall
cmp
sti
xlat
out
lret
stos
sbb
mov
outsl
je
mov
in
add
sahf
cmp
pop
or
std
imul
test
adc
out
sub
into
popf
js
shlb
mov
jmp
push
aaa
mov
jbe
aam
pmuludq
cvtdq2ps
add
cmp
cmp
test
xchg
push
mov
xor
xchg
scas
pushf
hlt
sbb
mov
movsb
shld
cmpsb
xchg
lahf
into
jne
leave
in
loopne
aam
enter
pop
xlat
mov
push
ret
mov
popf
pushf
ja
pop
mov
testb
push
pop
inc
repnz
adc
inc
repnz
xor
mov
mov
push
ljmp
in
popa
pop
adc
faddl
cmpsb
stos
test
cld
xchg
cld
cltd
xchg
lea
jns
xchg
icebp
inc
or
lcall
das
mov
ljmp
or
imul
jo
push
jg
repz
sbb
fisubrs
sub
lret
test
outsl
cmpsb
insb
cmp
int3
setl
fidivl
xor
std
pop
jb
hlt
jmp
pushl
aaa
and
add
lods
adc
movsb
movsb
loope
scas
xchg
sub
lahf
lods
push
mov
xchg
and
out
mov
jg
mov
jl
pop
and
mov
pop
cwtl
xchg
pop
or
sub
imul
sub
lods
xchg
stos
and
and
inc
cmpsb
jo
push
fwait
mov
test
lret
int3
mov
fwait
push
jle
repz
movsb
mov
leave
out
or
enter
adc
and
xchg
push
adc
or
mov
lds
lods
jge
lods
dec
push
xorl
xor
mov
in
call
sarb
mov
rorl
ja
imul
insb
cmp
out
in
dec
lods
xchg
into
inc
call
xchg
dec
mov
push
adc
dec
adc
xchg
notl
dec
dec
pop
enter
mov
test
shrb
dec
add
inc
insl
push
pause
fwait
pop
stos
sub
xchg
and
out
fwait
iret
adc
lahf
jns
mov
into
ljmp
jp
addr16
repz
push
lahf
call
ret
jae
loopne
pop
pop
adc
xchg
pop
dec
mov
aad
mov
lods
push
daa
sbb
dec
pop
movl
dec
addb
or
hlt
lcall
pop
push
push
and
add
sub
movsb
ret
aas
adc
mov
insb
out
mov
adc
cmc
inc
idivb
negl
std
jl
inc
repz
loope
cmp
sbb
xor
xchg
xchg
mov
cmp
xchg
jl
pushf
mov
outsl
fstl
call
add
dec
outsl
movsb
jnp
fcompl
jge
jns
scas
les
out
dec
mov
push
mov
push
out
shr
movsb
inc
jmp
mov
cmp
mov
and
in
push
out
aas
scas
xchg
xor
movsl
call
jns
xor
lret
jo
bswap
sbb
ljmp
and
pop
push
in
mov
sbb
pop
push
popf
push
aas
sbb
outsb
sbb
mov
cmpsl
pop
mov
xchg
movsb
xchg
inc
jg
mov
pop
xchg
scas
push
xor
sbb
popf
stc
mov
js
mov
pushf
mov
out
rorl
in
sub
insb
sub
dec
xor
jne
mov
xchg
fstps
xor
jae
sbb
lahf
push
fistpll
mov
dec
ja
xchg
dec
es
xchg
repz
xchg
cs
dec
pop
mov
test
stos
ljmp
mov
jb
mov
lret
or
mov
pop
or
sbb
or
sbb
sbb
enter
jb
shll
dec
jge
pop
adc
and
pusha
mov
fisubrs
pop
mov
mov
ja
insb
xor
repz
sbb
mov
xchg
arpl
pushf
jne,pt
daa
lods
faddp
enter
or
or
sub
dec
pushf
xchg
addr16
pop
lret
ret
out
mov
mov
or
jae
mov
pushf
imul
and
testb
mov
mov
out
cmpsl
outsl
pavgw
or
in
push
push
sub
jecxz
sbb
jnp
out
in
mov
cmpsl
mov
icebp
test
cld
stos
inc
pop
mov
pop
push
dec
stos
int3
sub
in
jns
subb
out
dec
fcomps
out
das
int
jno
adc
lret
xor
aaa
ja
mov
xchg
fdivrl
imul
xor
sub
ss
and
pop
stos
dec
fistps
int
daa
cli
mov
pushf
jmp
lods
push
fsubl
mov
inc
shrl
jnp
cmpsl
lods
scas
xchg
aas
pop
ja
xchg
cmp
inc
inc
xor
movsb
mov
mov
std
mull
or
add
xchg
fwait
movsb
push
sbb
jnp
and
out
jmp
je
lods
fbstp
out
out
xor
inc
scas
xorb
mov
xor
testb
inc
ss
mov
ss
push
mov
xchg
daa
xchg
inc
popa
mov
mov
dec
aaa
xchg
pop
in
xor
or
pause
xchg
mov
dec
jae
stos
mov
int3
add
fucom
scas
xchg
or
ja
lea
xchg
pushf
addb
pop
lods
mov
lods
mov
cmp
sbb
cmp
sub
sub
inc
call
rclb
pop
xchg
xchg
clc
lcall
int3
orb
stos
sub
sbbl
add
ds
rcl
aad
lds
leave
addl
fisttps
mov
pop
enter
mov
mov
outsb
iret
lret
push
mov
jge
adc
mov
push
dec
xchg
sbb
mov
mov
inc
std
pop
lret
mov
xchg
out
je
les
add
jp
lcall
call
scas
pop
dec
out
sbb
mov
jmp
adc
and
sub
sub
es
aaa
mov
pushl
mov
aas
mov
sbb
lock
movsl
or
call
dec
out
pop
push
in
pop
jl
fwait
lods
leave
lods
clc
lods
sbb
pop
clc
add
sub
insb
jp
xbegin
scas
lods
pushf
subl
ss
pushf
test
dec
dec
xor
iret
es
stos
mov
subb
xchg
fwait
repz
pop
cmp
leave
dec
or
mov
cmp
cmp
cmpsl
fisttps
cmpsl
ljmp
cmc
std
xor
dec
aaa
xorl
loope
dec
cmp
xor
out
daa
jge
or
pop
pop
cmp
pop
sub
cmpsb
int
fucomp
mov
insb
pop
sbb
jne
mov
in
int3
sub
xchg
cmpsb
pushf
movsl
fmuls
sbb
popf
mov
arpl
jb
les
mov
int
dec
mov
mov
pop
test
repz
cmp
test
adc
mov
lds
pop
outsl
inc
movsl
cs
push
test
mov
pop
pop
jo
jb
pop
adc
cwtl
sbb
js
int
xor
inc
push
mov
dec
mov
rcrb
lahf
rcl
ss
icebp
sbb
out
lods
sub
adcb
out
insb
inc
in
push
lret
insl
dec
and
loope
sbb
inc
ljmp
push
sbb
bndldx
add
pop
mov
mov
pop
imul
or
insb
mov
les
and
loope
icebp
rep
sbb
movsb
fdivrs
div
lea
stos
mov
or
cltd
insb
mov
cmp
fidivl
daa
xchg
xor
popf
clc
imull
push
fucomi
cmpsl
jns
add
lds
in
ficomps
int3
push
outsb
mov
jae
mov
arpl
leave
push
mov
mov
leave
mov
scas
dec
jl
inc
jne
xchg
leave
add
mov
cmp
jb
and
popa
fisttpll
jne
mov
insl
push
and
xchg
mov
movsl
push
popf
or
lock
xchg
add
mov
jmp
mov
cmp
sbb
hlt
inc
out
js
mov
mov
sbb
ret
push
outsl
mov
mov
cmp
in
sub
lret
movb
sbb
nop
xchg
mov
xchg
pop
add
lcall
mov
sub
mov
sbb
cmpsl
pop
inc
pusha
or
dec
loop
adc
xor
mov
cld
xlat
icebp
fdivrl
cmpb
out
daa
mov
cmc
loopne
push
sbbl
fstpt
pop
es
imul
lods
mov
out
fmull
sbb
into
and
add
fs
mov
insl
mov
add
cli
jmp
xchg
popf
or
xlat
outsl
or
insl
jae
adc
dec
int3
aad
adc
loopne
inc
sbb
rcll
mov
scas
rcrl
call
xchg
mov
lds
das
sysexit
jns
inc
adc
pop
fwait
shrl
lds
mov
call
nop
lods
pop
ret
mov
inc
cmp
lods
pop
int
mov
ret
mov
mov
shl
aas
lods
inc
pop
das
pushf
cli
enter
adc
jae
dec
out
lods
shl
sahf
out
rcr
in
or
sbb
out
jne
mov
aam
aaa
insl
cmp
aam
sbb
mov
fnstsw
mov
in
xchg
mov
aas
ficoms
ss
push
sbb
cmpsb
mov
cmc
sahf
fwait
jle
rorb
mov
daa
dec
lcall
add
pop
nop
rorl
mov
mov
jbe
jge
repz
mov
pop
cmp
pop
cli
iret
mov
cmpsl
insb
lds
add
cwtl
push
in
daa
lods
iret
sbb
mov
sub
ss
scas
ret
lret
dec
int3
adc
int
mov
sbb
lds
out
ljmp
add
lds
jle
icebp
add
std
push
sub
fiadds
add
push
sbb
sub
ja
mov
mov
mov
cmp
cltd
cwtl
enter
jl
sub
cmpsl
jb
int
repz
cmpsl
scas
sub
mov
cltd
das
clc
xchg
pushf
push
rcrl
in
faddl
jb
psrad
ds
enter
pop
xchg
pop
mov
ret
or
add
push
hlt
inc
adc
call
mov
sbb
mov
popa
mov
push
ret
add
stos
pushf
sub
jle
int
cltd
xlat
jbe
xchg
push
mov
cltd
jo
mov
notb
jg
dec
mov
sahf
adc
fistpl
std
stos
mov
ja
sub
lcall
popf
dec
sahf
xchg
fwait
insb
jb
loop
pop
pop
push
pop
lret
mov
ss
mov
or
popf
scas
push
xlat
xlat
ljmp
enter
test
mov
xchg
ret
xchg
int
ret
lods
hlt
and
push
mov
push
std
mov
jae
jle
mov
test
lds
fdivr
cmpsb
jge
scas
xchg
mov
or
mov
arpl
roll
cwtl
mov
lds
xchg
inc
sbb
xchg
repz
scas
lret
in
test
mov
pop
movsl
into
adc
hlt
sbb
insb
in
in
or
xchg
into
leave
out
div
popl
int3
out
mov
fmuls
fldt
out
jbe
mov
enter
lret
pop
mov
push
xor
movsb
jb
fcomps
out
cmpsl
lock
fstps
lret
shl
jmp
add
cmpsl
push
fwait
mov
lea
pop
pop
aaa
out
fnstenv
jbe
dec
mov
pop
xchg
adc
addl
ret
mov
into
sbb
jbe
xor
pushf
and
mov
lods
sbb
pop
lret
jle
loop
bnd
xchg
cmp
cmc
dec
pop
je
sub
push
pop
sub
sbb
xchg
sub
ss
sub
pusha
jbe
pop
roll
orb
dec
je
aaa
imul
ret
dec
repz
into
lea
jge
ret
decb
xchg
jmp
inc
addb
aam
inc
jnp
pop
xchg
jmp
lds
mov
mov
pusha
sub
xor
ds
add
mov
repz
cwtl
and
fcompl
shlb
jg
pop
pop
fistpl
cmpsb
sbb
xor
rcl
pop
push
jo
loopne
outsb
sub
subl
cmp
in
arpl
xchg
pop
push
add
or
jl
mov
sbb
fisttps
sub
subb
mov
push
popa
mov
sbb
mov
sub
jmp
mov
pusha
sbb
push
xchg
mov
pop
mov
sbb
mov
mov
and
pop
sbb
lods
pop
dec
add
cmp
xchg
popf
es
hlt
dec
in
inc
imul
repnz
clc
test
sub
add
lods
fwait
mov
popf
jns
pop
pop
lods
das
pushf
out
xor
xor
lret
addr16
sbb
cmp
fisubl
in
in
fcompp
mov
push
jle
mov
push
pop
arpl
xchg
cld
sub
scas
imul
cs
lods
push
xor
and
mov
pop
mov
mov
enter
fdiv
sub
xor
mov
xor
sarb
pop
mov
mov
dec
xor
scas
out
adc
jbe
loope
sbb
mov
lds
jmp
cmp
imul
dec
dec
cmc
mov
mov
dec
in
popf
std
ljmp
out
fmulp
sbb
test
stos
test
ficompl
pop
mov
cmpsl
rcrb
dec
lahf
sbb
add
and
out
cwtl
mov
ret
dec
imul
and
aas
lods
pop
mov
icebp
repnz
aam
lods
xchg
push
xchg
ret
mov
insb
dec
outsl
mov
sbb
rcll
sub
sub
ret
aas
fdivrs
add
aaa
push
sbb
enter
into
in
pop
insl
loopne
lret
jne
lods
mov
sbb
sub
pop
cwtl
mov
jge
movsb
or
scas
jp
movsl
or
or
nop
mov
or
js
lea
xchg
movsb
xchg
lahf
into
push
mov
test
cmp
or
incl
mov
enter
ret
test
lret
mov
scas
mov
add
add
stos
xchg
ret
or
dec
iret
push
out
add
in
xlat
xchg
daa
insl
outsb
jns
test
or
scas
xor
xor
ret
sbb
xchg
mov
aaa
inc
mov
fcmovnu
call
jnp
lods
je
in
mov
data16
dec
cmpsl
cmpsb
or
lods
mov
xor
pushf
mov
cwtl
xor
jge
test
ja
mov
jge
call
mov
add
lods
push
and
xchg
lods
pop
arpl
cmpsl
xchg
adc
sub
xor
jecxz
xor
adc
xor
jmp
jo
sub
lods
pop
jnp
rorb
insl
sbb
out
push
lods
lds
add
enter
ja
fs
in
fistpll
scas
mov
xchg
sbb
cld
mov
push
xor
loop
xor
and
xorb
aad
fldl
adc
xor
imull
add
lea
out
addb
insb
lods
mov
cmp
cmpsl
cmp
jmp
stos
mov
lods
leave
adc
scas
lret
adc
mov
pop
fsts
lods
lea
outsl
add
les
lret
ds
lods
push
mov
popf
insl
lock
mov
aaa
ds
cli
sbb
jmp
inc
mov
sub
stc
pop
xor
fsubrs
repnz
repnz
movsl
testb
pop
dec
ds
xchg
and
sbb
out
xlat
xchg
inc
fiadds
pop
fmul
and
cwtl
out
addl
fldcw
mov
cmpsb
pop
int
mov
push
or
sub
out
inc
jne
cmp
add
adc
call
lods
xchg
fs
jle
jnp
push
mov
mov
sub
or
lret
jmp
sbb
out
cltd
jno
mov
test
jl
mov
stos
jnp
test
push
cmpsb
and
push
mov
mov
lcall
xchg
push
and
arpl
into
push
adc
fdivrl
out
jno
cmp
xchg
test
addb
mov
repnz
aaa
or
sub
inc
arpl
mov
lahf
daa
ror
or
xlat
std
dec
lea
icebp
pop
mov
mov
inc
cmp
xchg
xchg
adc
pop
ss
test
add
adc
fisubrl
cmp
or
lods
ret
add
sub
sbb
imul
push
les
in
fwait
sbb
loop
call
and
into
mov
xchg
jl
mov
pusha
lret
or
sbb
aas
pop
ljmp
pop
movl
orl
pusha
pop
push
adc
cltd
jge
mov
sbb
outsb
sbb
xor
stos
sbb
jbe
loopne
push
lock
jb
mov
mov
push
dec
xchg
loopne
scas
ret
dec
and
and
adc
mov
pop
in
rorl
outsb
jo
sub
dec
xor
jb
jmp
mov
aaa
push
inc
loopne
into
pop
xorl
hlt
mov
sub
cmpsb
inc
pop
push
test
jb
out
arpl
test
mov
cmpsl
loop
pop
fdivs
fsts
and
push
shr
call
push
clc
sahf
ljmp
test
aas
add
mov
andb
or
dec
cmp
inc
imul
and
xlat
mov
or
jb
loopne
xchg
sti
cwtl
fcoml
sahf
stos
cmpl
add
lds
sub
aas
mov
test
loopne
insl
fmul
xchg
add
sub
xchg
je
xchg
sti
jne
das
popf
in
sahf
inc
push
pop
loopne
sbb
jno
adc
jbe
pop
or
cwtl
pop
cltd
daa
lcall
ja
push
out
inc
lds
mov
push
mov
cmpl
xlat
and
inc
or
mov
lods
dec
mov
mov
dec
movsb
fsubs
and
in
xchg
ss
adc
xor
cmp
aas
lds
or
loop
test
xlat
scas
inc
mov
das
dec
addr16
mov
sbb
insb
add
adc
mov
add
aaa
ret
rol
jle
outsb
cmpsl
pop
push
inc
add
and
ljmp
cmpsb
dec
inc
mov
fsubl
call
out
sbb
je
out
jne
orl
stc
mov
in
mov
mov
fwait
lea
add
mov
outsb
cmc
mov
imul
xor
lcall
movsl
in
mov
mov
mov
pop
enter
mov
xchg
scas
xchg
mov
mov
xchg
out
jmp
out
mov
scas
mov
repz
mov
and
xor
sbb
les
inc
jmp
jb
cmpsl
lods
dec
xor
jae
pop
arpl
test
pusha
cvttps2pi
xchg
xor
pop
std
push
mov
dec
sbb
mov
lods
into
pop
popf
inc
or
lds
cwtl
loope
xor
shl
mov
cmpl
movsb
or
out
push
ror
xchg
mov
outsl
in
lods
cmc
sub
adc
pop
inc
mov
mov
out
push
cmp
lret
sbb
cmp
adc
push
loopne
cmp
pop
stos
icebp
test
mov
adc
mov
leave
lcall
mov
mov
or
bound
jbe
sti
insl
ficoms
lahf
scas
orb
js
adc
scas
iret
pop
lods
js
jnp
push
push
and
mov
test
ljmp
repz
pop
out
mov
fsubl
mov
pushf
dec
loope
hlt
lcall
add
out
push
cmp
xchg
or
cs
subl
sbb
les
pop
push
std
pop
jbe
dec
in
int3
mov
inc
fisttps
sbb
lods
mov
inc
sbb
mov
lahf
or
sti
mov
pushf
cmpsl
push
lods
faddp
pop
mov
xchg
dec
lds
mov
dec
loope
aam
dec
andl
lret
in
sahf
or
stos
rcrl
and
jl
in
push
push
movsb
movsb
sbb
scas
or
subb
orb
dec
gs
inc
mov
and
lds
sub
mov
adc
dec
cmpsb
xor
jmp
cmp
pop
cmpsl
mov
mov
out
sub
in
iret
and
and
negb
je
adc
stc
mov
dec
cmpb
mov
cmp
out
inc
repz
xor
pop
mov
mov
jbe
hlt
jns
xchg
sub
pop
sbb
mov
sbb
sbb
sbb
xchg
test
pop
in
push
psubusb
and
cmp
add
frstor
mov
ds
xchg
xchg
pop
pop
int3
push
adc
xlat
cwtl
imulb
cmp
ret
sahf
out
and
loopne
mov
xor
mov
cwtl
ja
adc
cwtl
pop
fstpl
push
xor
shlb
into
lcall
jne
cltd
lods
test
mov
addr16
mov
arpl
adc
test
cmpsb
mov
mov
pop
mov
or
xchg
adcl
pop
or
jnp
xchg
setg
rclw
lret
dec
dec
xchg
push
dec
dec
inc
cmc
add
sub
mov
out
in
imul
cltd
adc
test
xor
dec
sti
insl
es
test
lds
insb
mov
xor
loop
xchg
cmpsb
cmpsl
in
mov
in
or
cmp
stos
sbb
or
mov
cmp
fisubl
and
xchg
aam
push
sbb
xchg
jp
out
fsubs
cli
mov
aad
jae
imul
ror
push
mov
addr16
jo
jge
les
jp
pop
loop
jge
xor
mov
shll
fcompl
icebp
mov
mov
jbe
mov
call
out
fdivrs
test
jbe
cmp
add
fisubrl
mov
imul
add
cltd
lds
xchg
pop
lea
aaa
mov
cltd
fcomps
cmp
add
enter
mov
daa
sub
cmp
movsb
mov
pushf
cmpsl
mov
mov
vminsd
mov
insl
lds
xor
in
lahf
outsl
scas
mov
sub
popf
jne
stos
mov
popf
sbb
add
push
fdivl
add
mov
cmc
jns
xchg
and
pop
mov
cld
pushf
or
sub
inc
inc
mov
enter
and
cmp
push
leave
insb
les
xchg
xchg
cld
and
enter
inc
sbb
mov
fimull
mov
pop
xchg
movsb
movsb
icebp
popf
aaa
mov
sbb
fwait
xchg
sub
out
push
aaa
lret
mov
mov
mov
repz
iret
in
mulb
dec
push
cmp
stos
fdivl
out
mov
out
dec
sbb
push
mov
fistps
negb
call
xchg
xchg
dec
cli
xchg
xor
jle
push
jns
mov
sub
mov
or
std
xchg
fldcw
leave
and
inc
lret
xor
cmpsl
imul
std
or
jb
faddl
es
jmp
icebp
pop
or
xor
ss
pop
sub
sub
mov
mov
in
movsl
lods
and
test
frstor
xchg
out
cmp
outsb
or
sbb
sbb
sbb
mov
dec
cmp
pop
jne
or
pop
cmc
mov
jmp
pushf
mov
sbb
es
xor
sub
scas
int3
je
xor
popf
movsb
push
xchg
test
cli
and
push
push
dec
int3
sub
cmp
aaa
push
sub
xchg
sub
lret
xor
fcmovne
js
ficompl
pop
mov
sbb
mov
repz
std
ret
int
mov
push
pop
es
imul
mov
rcll
or
into
repnz
outsl
pop
xor
mov
mov
adc
leave
mov
push
in
je
std
loop
pushf
call
mov
mov
mov
insl
xor
cmp
nop
mov
adc
ljmp
out
imul
mov
scas
dec
loop
adc
xor
test
mov
cmpsl
mov
ljmp
cmpsl
mov
mov
jge
mov
cmpl
fwait
lea
in
popf
pop
cmpsl
sahf
pop
xor
daa
add
ljmp
fcompl
movsb
int
push
out
lods
lahf
mov
mov
enter
mov
shlb
je
jmp
sbb
repz
xor
out
cmp
sub
pop
sub
mov
pop
xchg
dec
adc
xor
nop
xchg
loopne
xor
mov
sbb
lea
out
lods
mov
aas
je
mov
shl
mov
mov
lods
lds
pop
in
mov
test
mov
mov
mov
mov
scas
pushf
mov
mov
mov
fwait
or
pushf
repz
cmpsl
sahf
lea
sbb
je
lods
lcall
movsl
lea
out
lods
mov
and
mov
mov
test
repz
cmpsl
mov
out
adc
xchg
or
sbb
aas
push
mov
push
sahf
sub
mov
cmc
xor
fildl
pushf
inc
mov
sbb
into
xchg
repz
mov
daa
out
sbb
mov
adc
jmp
push
repnz
xchg
fidivs
mov
test
sahf
mov
lock
les
cmp
lahf
in
js
ja
jecxz
fwait
lahf
cli
lret
ret
push
jecxz
mov
sub
enter
xorb
test
mov
mov
mov
pushf
or
icebp
sti
dec
xchg
jl
cwtl
leave
or
adc
adc
std
fistps
mov
mov
mov
fwait
rcrl
mov
sbb
dec
je
pop
test
int
dec
icebp
cmpsl
scas
loop
mov
xorl
rcrb
mov
lods
pop
xchg
adc
and
sbb
hlt
iret
pushl
jnp
movsl
stos
add
fwait
sub
mov
insb
cmpsl
cs
lods
test
out
jbe
jns
ret
in
dec
sarl
or
mov
sbb
push
lods
fwait
dec
fistpl
pusha
pop
xchg
cmpsl
inc
scas
sub
pop
and
pop
scas
in
std
pop
into
mov
mov
cmc
dec
pop
xchg
pushf
jp
pop
fsubs
jl
imul
in
lds
lcall
out
mov
and
mov
movsl
out
ja
lret
mov
aaa
xor
repz
sub
jo
mov
repz
sub
in
mov
pop
cmp
rcrb
jne
fisubrl
lcall
or
sub
pop
cmpsl
adc
lret
and
enter
push
pusha
imul
rcrb
enter
shll
orl
sub
loop
pop
xchg
sbb
pop
mov
inc
lods
sub
pop
int3
mov
pop
mov
adc
cmp
push
in
mov
scas
adc
pop
mov
adc
je
mov
pop
mov
jmp
daa
mov
xor
mov
sbb
xor
sbb
lahf
dec
lret
dec
imul
mov
sbb
iret
mov
xchg
ds
aam
sub
sub
movsl
daa
sahf
lods
sbb
mov
in
sbb
imul
out
adcb
xchg
jns
push
lea
icebp
mov
les
leave
push
mov
daa
insb
mov
sub
hlt
fstl
test
sarl
xchg
sti
xchg
loope
and
repz
xchg
pop
mov
icebp
movsb
jg
push
dec
outsb
rorl
xchg
xchg
je
dec
movsb
fwait
ret
jmp
ja
adc
pop
popa
xlat
mov
je
ret
push
leave
movsl
test
mov
repnz
cli
sbb
pop
ja
adc
or
add
jge
lret
les
inc
mov
subl
lcall
cmpsl
sub
shlb
inc
test
dec
jl
rorl
and
adc
dec
lods
mov
jmp
pop
xor
inc
loop
rol
add
inc
insb
sub
jne
lahf
jle
cmpsb
ret
js
sti
hlt
add
clc
push
das
jbe
pop
ret
out
and
daa
push
dec
add
mov
inc
daa
adc
sub
inc
in
jbe
lods
js
popa
cmpsb
cmpsl
aam
pop
stos
cltd
mov
pop
lods
lods
jmp
push
dec
in
test
fwait
pushf
sbb
jne
sahf
mov
pop
fsubs
hlt
cld
cmc
insb
fistps
popa
sbb
sbb
cld
cs
pushf
push
lods
sbb
add
fstpt
pop
xor
mov
cmpl
ret
dec
std
xchg
xorb
addr16
movb
push
cmp
sahf
lods
pop
lds
loope
aas
mov
cli
inc
lods
enter
pop
stos
arpl
push
ja
enter
pop
xor
mov
pop
xchg
lods
and
xchg
popf
lcall
loope
sbb
inc
add
jb
popa
adc
dec
cmpsl
adc
int
sbb
mov
mov
jbe
add
sbb
inc
scas
js
mov
mov
mov
in
ljmp
dec
daa
addl
sbb
inc
jo
lds
pop
mov
mov
leave
mov
cwtl
iret
out
fistpll
aam
arpl
and
xorl
lcall
xchg
roll
pushf
push
xor
xor
add
in
or
aad
hlt
loope
hlt
std
stc
jo
into
xor
xchg
xchg
mov
lods
add
pop
nop
iret
in
hlt
stc
xchg
mov
mov
inc
mov
mov
das
std
negl
fsubl
arpl
cmpl
push
cli
fstps
sbb
in
ja
add
pop
and
sbb
jae
jns
fistl
in
icebp
js
adc
loope
in
dec
mov
dec
jecxz
jne
repz
xchg
imul
aaa
enter
stos
shl
sub
adc
push
sub
shr
lcall
rorl
dec
fldt
jmp
int
clc
sbb
or
mul
insl
aam
fyl2xp1
and
mov
lea
sub
popf
test
sbb
repz
jb
pushf
mov
adc
in
repnz
mov
hlt
mov
int
cmpsl
lea
out
mov
out
imul
or
imul
mov
push
xchg
dec
mov
and
sbb
cmp
fs
cmpsb
cmp
outsb
pop
add
lret
scas
xchg
cmpb
mov
push
jbe
fstps
cwtl
mov
das
xor
jl
mov
ret
stos
cs
repz
ljmp
inc
jl
cwtl
sbb
cmpsl
xchg
sbb
aaa
push
aas
mov
jp
arpl
aas
addr16
sbb
mov
pop
outsb
shll
dec
js
lea
xchg
aad
pop
xlat
xor
pop
lock
enter
jle
inc
jne
jl
pop
loop
sbb
movsl
data16
aam
adc
popf
xor
mov
sahf
lcall
mov
push
mov
sti
shll
popa
mov
in
add
sbb
movsl
cwtl
addb
aam
fldt
scas
sbb
icebp
xlat
bound
dec
xchg
inc
out
mov
jmp
cmpsb
and
push
ds
pop
dec
pop
sbb
jo
dec
or
inc
data16
pop
rcrl
jmp
ds
mov
iret
inc
icebp
jmp
arpl
in
pause
mov
outsl
fiadds
sti
jl
push
stos
inc
daa
cmp
daa
aam
cmp
fldcw
insl
aad
mov
les
sub
ss
mov
lds
es
pop
dec
stc
mov
lods
addl
dec
clc
sbb
xchg
push
dec
inc
scas
sbb
add
push
movsb
cmpsl
push
movsb
popa
xchg
pop
xlat
push
and
and
int
ret
xchg
mov
push
lret
sbb
scas
rcrl
loop
add
test
inc
into
scas
or
pusha
test
lds
push
xor
or
cli
jne
or
mov
test
jo
enter
int3
frstor
push
xor
jle
sbb
inc
push
jno
push
xor
jg
and
inc
xor
inc
adc
movsl
jb
stos
mov
outsl
jb
repz
loopne
lahf
fildll
in
fldcw
xchg
sbb
xchg
sbb
jnp
or
cltd
js
mov
pop
int
pusha
push
mov
mov
into
fstpt
sbb
mov
test
sbb
mov
imul
jae
ljmp
cmpsl
jbe
cmpsb
int
jle
dec
lods
iret
sbb
mov
cmpl
push
fwait
mov
pop
mov
fcomps
sub
xor
in
movsl
mov
fsts
insb
dec
out
dec
lods
or
jl
outsb
inc
mov
andb
add
pop
test
ds
cmp
jl
lods
mov
scas
pusha
fcoml
lods
jmp
jbe
fwait
pop
cmpsb
or
ret
into
jle
xlat
mov
test
or
mov
jl
in
sbb
mov
jl
aad
adc
fdivl
inc
mov
insb
inc
repnz
jge
mov
jmp
ja
cwtl
sarb
pop
popf
in
dec
jge
in
dec
lds
paddusw
and
nopl
adc
sub
ret
sub
mov
xor
pop
pop
inc
cmp
push
cmp
std
or
sti
xor
pop
lcall
jnp
mov
and
cld
lret
fistl
jbe
adc
inc
cmp
xor
xlat
pop
xor
dec
stos
sub
test
and
pop
jb
add
xchg
pop
mov
lods
inc
xor
mov
xlat
push
in
test
jnp
scas
dec
add
adc
mov
cmpsl
scas
inc
lahf
sub
inc
add
cmp
pop
cmc
jb
jmp
loop
mov
pop
sub
lds
xchg
mov
xor
fisubs
fwait
sbb
sbb
imul
xchg
test
or
bound
jmp
insb
add
test
jo
enter
mov
jg
movsb
fimull
jnp
inc
rcrl
mov
fidivl
push
or
dec
xchg
mov
xlat
dec
cld
lods
pop
dec
call
inc
inc
out
lods
pushf
mov
iret
adc
loope
incb
dec
xor
add
xchg
pop
ror
loop
pop
pop
int
test
inc
cli
jle
cmpsl
testl
repz
stc
and
mov
and
pop
inc
xor
pop
lods
loopne
into
and
xor
sbb
push
scas
dec
into
jb
cltd
daa
xchg
mov
jnp
test
cmp
pop
push
pop
push
jecxz
sbb
out
insb
jbe
das
out
sbb
cmc
pusha
lahf
js
pop
sbb
scas
out
fbld
popa
add
ja
insl
lods
into
hlt
test
mov
fsub
je
icebp
push
or
or
insl
lods
mov
into
test
je
mov
add
sbb
mov
cmpsb
lret
xchg
sbb
jmp
xchg
popf
shll
les
push
mov
rorl
icebp
imul
inc
sub
jae
push
int
adc
sbb
or
ss
mov
ret
hlt
add
add
sahf
fs
mov
bnd
dec
outsl
test
insb
cmp
imul
pop
mov
pushf
and
pop
je
dec
jmp
js
outsl
mov
div
mov
int
add
cmpsb
ret
xchg
mov
jb
xor
jbe
push
sub
shll
sub
shl
stos
and
adc
sti
test
lods
mov
mov
push
sbb
xchg
sbb
push
clc
push
enter
xor
sbb
clc
pop
pop
movq
aaa
push
push
fxch
pushf
cmpsl
inc
mov
inc
insb
pop
and
sbb
test
stos
inc
push
ret
and
pop
xchg
mov
mov
sbb
scas
popf
fwait
shl
mov
push
pop
dec
sub
imul
add
jp
scas
add
push
xor
ret
pop
mov
mov
jbe
pop
insb
inc
pop
dec
mov
ret
subl
pop
je
clc
mov
push
pop
push
int
lock
ss
sbb
push
xor
mov
scas
imul
dec
call
push
mov
cmp
pop
pop
cwtl
lahf
add
xor
fsubl
aas
icebp
lods
lods
mov
sbb
lods
mov
mov
aas
jecxz
hlt
push
stos
xlat
sub
cli
lods
adcl
and
arpl
in
sbb
push
in
xchg
adc
les
sub
stos
jb
push
outsl
push
or
aad
dec
insb
sbb
inc
or
or
pop
std
cmp
bound
les
jne
mov
mov
scas
cmpsl
mov
xchg
push
shrb
and
pop
jns
jle
loop
pop
xor
xor
xlat
mov
lods
ja
xor
lods
loope
daa
xchg
xchg
sub
pop
pop
fstpl
pop
pop
sub
fmulp
jb
pop
xchg
ds
mov
stos
pushf
lods
push
aaa
jmp
adc
jle
jmp
jl
jne
dec
into
cmp
rorb
iret
cld
inc
adc
push
hlt
loop
negb
fs
repz
lds
jbe
mov
test
ds
mov
sbb
inc
mov
mov
xchg
test
push
fdivs
adc
mov
xor
mov
daa
or
jmp
outsl
imulb
inc
xchg
inc
mov
fnstenv
dec
mov
mov
lret
popf
sbbl
lret
jmp
shll
aaa
stos
or
mov
fidivrl
adc
movsb
lods
mov
xor
repz
addr16
inc
int
andl
out
ret
dec
cmpsb
out
lret
pop
int3
inc
scas
push
std
mov
les
js
cmc
dec
adc
push
imul
in
lds
or
mov
popa
push
mov
sbb
mov
inc
mov
and
cmpsb
jo
in
dec
stc
dec
jg
push
xorl
scas
mov
loopne
mov
test
xchg
das
insb
cmpsl
js
jbe
call
dec
cmp
inc
mov
mov
ret
dec
sbb
inc
scas
pop
xlat
push
dec
mov
mov
fsubs
mov
push
stc
lods
jb
xor
andl
sahf
sbb
cli
sub
in
daa
xlat
lahf
dec
insb
pop
xchg
into
sbb
jnp
sub
dec
mov
in
jbe
pop
jmp
fxch
mov
sbb
idiv
xchg
add
outsb
xchg
out
lods
idivl
cmp
out
pop
pop
scas
lea
fsubr
mov
mov
int
icebp
pop
dec
mov
mov
arpl
inc
jb
lods
pop
inc
adc
fwait
int
in
mov
sub
xlat
test
loopne
cltd
dec
and
lds
cmp
jno
test
enter
push
test
dec
sbb
lods
jge
pushf
movsl
shll
fists
imul
jle
dec
sub
lahf
call
out
jae
pop
rclb
add
xchg
cmpsl
add
cmpsl
inc
adc
fadds
cltd
daa
sub
pop
pop
dec
and
repz
jecxz
pop
pop
pushf
dec
mov
loopne
mov
aad
push
fwait
sub
sub
mov
aam
fmuls
lds
add
mov
jne
sub
mov
mov
cs
add
pop
loopne
in
dec
adc
jnp
out
jns
mov
sahf
stos
movsl
popa
gs
stc
test
sub
fcomps
mov
mov
jae
aaa
test
dec
push
addl
fmuls
fisubl
add
xchg
mov
in
adc
fiaddl
xchg
dec
int3
jp
xchg
xor
fsubl
fdivrs
and
ja
loope
add
sbb
pop
mov
hlt
outsb
xchg
push
inc
push
ss
lock
int3
xor
mov
sbb
sub
fld
adc
dec
pop
int3
jl
dec
xlat
mov
daa
or
cmp
xchg
popf
ret
push
icebp
push
mov
cmpsl
mov
xor
pushf
cs
shl
outsl
rcrb
sbb
pop
scas
aam
ljmp
repz
and
and
js
out
scas
cmpsl
je
xor
sub
repz
repz
mov
movsl
or
jo
push
loopne
jle
lds
sub
cmp
sub
sbb
add
imul
lods
ficompl
repz
jl
stos
push
in
ss
cmpxchg
mov
sbb
jmp
jp
push
push
jns
mov
cld
aas
inc
test
mov
xchg
pop
mov
mov
add
inc
pop
outsb
mov
test
add
hlt
fisubrs
outsl
int3
xchg
js
das
cwtl
inc
movsb
adc
and
push
inc
push
and
outsl
push
or
push
and
jg
jns
xor
cs
sub
xor
or
xchg
sahf
mov
mov
xor
xor
aam
outsl
cmp
add
mov
int
cmp
push
popf
pop
mov
jnp
xchg
fldt
cmpsl
add
dec
cmp
pop
loopne
fldcw
push
pop
mov
mov
jnp
push
lods
pushf
push
shlb
push
add
rcrb
repz
test
dec
test
sub
and
mov
push
push
stos
stos
xor
pop
pop
jge
xchg
ljmp
loop
insl
lea
sbb
outsb
nop
add
shll
test
jne
mov
in
ljmp
lret
push
scas
sbb
mov
mov
sbb
pop
int
and
mov
push
mov
xlat
and
jae
mov
shll
mov
bound
movsl
add
mov
push
fldt
lods
popa
outsb
fsubl
xchg
push
xlat
leave
xlat
movsl
sub
or
sti
lahf
dec
hlt
jno
call
dec
push
xor
sub
sbb
in
or
sbb
or
push
fwait
pop
int
mov
add
fiaddl
scas
shr
dec
ss
ret
cmpsl
jecxz
popf
and
ss
or
mov
mov
push
jp
outsb
jnp
mov
push
or
pop
mov
lea
mov
imul
data16
push
mov
mov
and
fidivrl
mov
pop
cwtl
mov
lahf
mov
mov
lods
mov
cltd
push
mov
lds
call
jmp
sub
sti
push
shr
cs
xchg
aas
mov
or
mov
or
push
sahf
out
fisttps
je
mov
mov
mov
dec
sub
lds
insb
xchg
cmpsl
lods
sub
scas
ret
movsb
lcall
or
cmp
mov
test
mov
lds
insb
sub
rcll
repz
mov
or
push
jg
cwtl
mull
clc
and
mov
aas
ficomps
mov
ret
pop
daa
les
shrb
sub
jge
lea
aad
leave
scas
enter
dec
xor
fldcw
stos
or
mov
mov
mov
mov
movsl
out
scas
dec
stc
jns
js
and
fsts
cmp
pop
add
idivb
and
jle
mov
dec
jle
cmpsb
add
mov
fisttps
test
add
jmp
loope
jle
push
lahf
lea
xchg
mov
roll
loope
fistl
leave
scas
cmc
add
rcr
adc
addl
inc
adc
loop
xchg
sbb
out
xorb
pushf
jecxz
add
cmp
ret
incl
jl
mov
jno
xor
jno
test
push
rclb
enter
sbb
jmp
orl
clc
sub
imul
movsb
je
loopne
mov
mov
std
nop
pop
rcll
iret
nop
jecxz
cltd
pop
enter
add
test
fisttpl
rep
push
mov
sahf
inc
inc
or
sub
jno
jmp
std
rcrl
popf
sub
imul
fwait
sub
push
pop
ret
je
pop
call
pop
test
nop
scas
mov
pop
push
mov
rol
out
pop
scas
mov
iret
lea
mov
lds
mov
nop
pop
pop
enter
out
sbb
mov
leave
icebp
scas
sahf
sub
or
mov
pop
je
pop
sub
lcall
stos
lods
push
pop
adc
insl
mov
sub
inc
lods
adc
lods
arpl
mov
mov
xor
and
lods
shrl
into
mov
jecxz
lods
repz
divl
mov
add
adc
mov
psrlq
sbb
lds
mov
fwait
pop
sbb
push
jae
js
int3
lds
mov
and
xchg
xchg
cmpsl
test
mov
hlt
adc
adc
lods
jmp
sub
fisttps
fsubr
test
pop
mov
sbb
dec
idivl
lahf
jmp
test
lds
fisubl
into
pop
add
inc
or
loopne
mov
out
lret
inc
stc
in
xchg
icebp
es
daa
loopne
pop
adcb
sbb
std
xchg
jecxz
aam
pop
cmpsl
cs
outsl
bound
add
sbb
dec
jo
lods
push
int3
test
cs
repz
das
push
dec
jne
in
pop
xchg
out
out
into
popf
lods
adc
dec
mov
pcmpeqd
imul
repnz
jbe
fistpl
xor
js
orl
xchg
add
pop
pop
testl
fadds
icebp
negb
inc
scas
cld
into
mov
in
or
daa
pop
or
hlt
mov
jge
repnz
fsubs
int
sub
inc
stc
ja
sti
cmp
mov
scas
lds
movsl
fsub
cli
movsl
dec
lds
fdivrl
fwait
jle
mov
mov
int3
sbb
mov
mov
xchg
mov
jb
cmc
mov
lds
int
cli
pop
sub
scas
hlt
cmp
add
sub
pop
hlt
xchg
js
jmp
and
jge
test
dec
jecxz
push
pop
movsb
pop
add
stos
add
cmc
inc
sub
cmc
sub
ja
mov
lea
cmpsl
test
cmpsb
hlt
fdivl
sbb
seta
dec
hlt
lcall
icebp
push
push
aam
shrl
shr
daa
in
out
lock
push
lods
lock
add
xor
fwait
mov
in
cmc
xchg
jb
mov
and
jnp
jb
mov
arpl
mov
int
jge
test
movsb
das
je
jle
mov
out
out
inc
in
jge
xor
fcomps
xor
mov
inc
mov
sub
in
pusha
ds
or
push
add
cmp
pop
cmp
cmpsl
and
sub
or
decb
pop
jge
std
jnp
fcomip
add
ja
xor
test
into
pop
pop
sub
loop
mov
and
shrl
and
repz
inc
and
loopne
pop
inc
sarb
mov
sbb
int
pop
cmpsl
outsl
cmp
iret
push
jae
fldt
addb
vmaxss
lods
popf
imul
rclb
xor
lods
push
dec
add
test
addr16
mov
cli
jne
lcall
outsb
mov
xchg
iret
lret
cmp
into
push
js
mov
xor
mov
pop
lods
fisubl
push
mov
pop
mov
push
repnz
cwtl
pop
lds
scas
cmp
sbb
lock
out
test
sahf
mov
popf
lods
leave
gs
jge
dec
push
insl
mov
mov
mov
test
or
xchg
test
lea
lea
push
jl
mov
pusha
test
popf
int
lea
cmp
jne
xor
cmp
repz
outsb
or
sbb
pop
adc
fwait
jbe
imul
rcrl
pop
sbb
xor
cs
outsl
add
or
test
lods
pop
out
cwtl
sbb
xor
sti
jb
mov
xor
and
mov
sub
cmp
std
movsb
imul
cmc
fcmovnbe
adc
out
jge
sti
jbe
xchg
cmp
or
into
or
pop
mov
dec
sub
push
test
push
xlat
rcr
sub
mov
lret
mov
cltd
cmp
mov
jns
xchg
ljmp
sub
in
xchg
lcall
test
add
sbb
or
scas
sub
cmp
ljmp
and
xchg
add
loop
xchg
add
hlt
dec
in
or
adc
sbb
shll
sub
fstps
add
lahf
sbb
xchg
sbb
pop
std
push
fisubl
scas
mov
dec
pushf
push
mov
lea
dec
jmp
arpl
jne
sub
cmpsb
in
cmpsl
jp
xorb
rcr
mulb
mov
jp
xor
decl
pop
xor
cmp
into
dec
inc
repz
clc
mov
sbb
lahf
cmpsl
sbb
or
or
mov
adc
mov
sub
cmp
inc
fdivs
out
cli
and
shll
daa
cmp
mov
push
xchg
sarl
push
jge
and
outsl
ss
hlt
inc
pusha
ret
pop
and
in
outsl
push
sub
dec
push
dec
push
rcll
or
xchg
js
popf
scas
add
mov
int3
cmp
fs
sub
in
test
or
popf
mov
mov
dec
insb
mov
mov
das
xlat
pop
leave
test
cmp
insb
add
cmc
in
mov
xor
lcall
mov
xchg
popf
sub
xor
pop
xchg
daa
xchg
jb
or
mov
stos
ja
hlt
ret
dec
mov
movsl
mov
cmp
mov
sub
sub
shrb
cmpsl
jmp
mov
scas
xchg
jmp
testl
sub
scas
repz
int
sub
cmp
repnz
mov
popa
scas
popa
fbstp
jnp
xchg
and
lret
stos
mov
cmp
andl
lahf
stos
mov
lret
test
scas
pop
movsl
out
jb
test
into
cwtl
test
test
aaa
lods
or
xchg
mov
jb
cwtl
cmp
mov
pop
and
mov
mov
lods
cmp
loop
sub
hlt
lods
or
shrb
sarl
lods
out
in
add
mov
xor
out
mov
mov
inc
pusha
xlat
std
stc
cmp
xchg
cld
aam
popf
mov
sbb
pop
cli
dec
inc
jp
int
loop
imul
fdivl
xchg
mov
out
sbb
sub
pop
in
inc
cmp
mov
test
dec
mov
xchg
imulb
jmp
sbb
jns
add
int3
cmpsl
or
xchg
lcall
int3
xchg
push
test
push
lods
mov
sub
sbb
mov
es
in
mov
mull
pop
ja
sbb
jbe
into
fsubrs
jge
xchg
jno
lds
push
mov
xor
test
xchg
stos
add
out
mov
popa
iret
fcompl
push
out
cmp
repnz
inc
stos
fstps
jne
add
xor
mov
repz
lods
push
and
xchg
xchg
cmpsl
mov
in
dec
xor
mov
push
and
out
in
mov
mov
lods
imul
insb
nop
cmpsl
jecxz
dec
das
fs
es
or
daa
mov
addr16
mov
pop
in
mov
xchg
pushf
cmp
fwait
adc
dec
out
push
insb
add
mov
insl
xchg
xor
movsb
in
scas
popf
sbb
in
sbb
or
enter
xor
pushf
movb
aam
fwait
adc
aad
into
aam
mov
fs
push
fcomps
pop
jecxz
iret
nop
mov
loopne
or
and
test
or
lahf
sbb
daa
pop
stos
xchg
fimull
sahf
push
lcall
pop
cmpsl
icebp
dec
dec
xchg
pop
ret
mov
lea
adc
lods
adcb
xor
fmuls
sbb
mov
pop
and
cltd
iret
adc
pop
sbb
movsb
push
sub
sbb
adc
mov
mov
pop
mov
sahf
lea
fs
adc
add
int
test
stos
jb
mov
or
adc
int
jbe
popa
xor
mov
out
sub
dec
mov
andps
sbbl
xchg
hlt
rclb
xchg
sbb
push
xchg
inc
dec
and
fwait
sub
sub
aam
scas
mov
cmp
fistl
and
popf
sub
movsb
pushf
sbb
mov
mov
fdivrp
sub
in
sti
xchg
aad
fisubrl
loop
std
fadd
pop
or
dec
or
mov
fidivs
inc
adc
mov
mov
repz
ror
xchg
lods
cmpsb
mov
bound
subl
bound
xor
adc
popa
pusha
mov
xchg
xchg
mov
xchg
gs
test
mov
fwait
leave
sub
aaa
movsb
scas
lds
mov
loopne
pinsrw
inc
les
shrl
pop
mov
fstpl
lds
and
ljmp
pop
fisubl
shl
inc
test
mov
sub
in
sub
cmp
push
pop
leave
lock
and
adc
push
push
cld
dec
push
dec
pop
push
outsb
push
hlt
stos
sub
sbb
scas
inc
pop
mov
pop
jns
adc
andl
dec
fimuls
lds
and
out
scas
icebp
push
std
sub
pop
or
push
jmp
out
mov
dec
push
mov
clc
movsl
lods
lds
or
imul
push
lds
xor
testb
push
xorb
or
out
sbb
and
les
fcmovbe
cmp
aam
mov
hlt
push
or
jmp
mov
mov
stos
dec
xchg
pop
mov
andb
mov
sbb
aad
lods
imul
xor
pop
cmp
rcll
pop
js
push
xor
push
hlt
mov
div
xchg
mov
xchg
push
ds
mov
jne
mov
bound
cmp
cmp
jb
sub
in
sub
nop
adc
loopne
fsubs
addb
je
scas
xor
adc
mov
adc
in
dec
xchg
arpl
pop
or
int
pushf
roll
and
out
ss
in
or
jne
xor
cmp
sti
mov
inc
rcrb
cmp
mulb
dec
lods
lea
std
adc
into
pop
mov
sbb
adc
pop
pop
or
sbb
sahf
sbb
push
shr
xchg
pop
aam
fimull
cmp
sub
xor
xchg
lahf
mov
mov
dec
daa
xor
je
test
cwtl
daa
in
jne
mov
mov
mov
sub
movsl
mov
out
mov
movsl
mov
test
scas
fdiv
rep
push
adc
fdivl
lds
lret
and
in
jp
mov
jo
test
mov
cmp
cld
or
addl
xor
or
mov
imul
inc
xchg
adc
out
lahf
repz
loopne
test
sbb
mov
pop
test
pop
xchg
cmp
xlat
and
rol
mov
lds
clc
das
inc
pop
sub
add
inc
jge
ja
pusha
sbb
daa
sti
inc
orl
fmull
xchg
cli
sub
idiv
sbb
mov
adc
aas
enter
jo
mov
dec
in
mov
ljmp
jp
in
inc
das
cld
mov
cmc
and
iret
cmp
push
cwtl
stos
imul
pop
pushf
stos
pop
mov
push
out
mov
inc
mov
sub
lods
jo
lods
daa
adc
cmp
mov
sbb
sbb
xchg
lahf
sbb
scas
popf
sub
push
ret
push
pop
adc
pop
cmp
adc
xchg
jo
pushf
pop
rcrb
mov
pushf
mov
mov
jae
cwtl
ss
negb
fcomps
pslld
loope
lfs
sub
mov
mov
mov
pop
push
aad
mov
pop
scas
push
push
dec
mov
sbb
mov
mov
inc
sahf
cmpsb
sbb
dec
jl
adc
add
pop
cltd
popf
jae
out
ret
jb
std
sbb
ss
aaa
dec
fcoml
int
in
repz
sbb
mov
pop
jb
lret
lcall
and
addb
scas
pop
test
add
bound
jle
clc
fstps
push
cmp
xchg
and
add
or
daa
push
sbb
cmp
int3
xchg
pop
jno
movsb
mov
add
adc
jp
imulb
pop
sub
push
imul
xchg
hlt
int3
mov
push
pop
push
xor
fwait
cld
orl
push
lods
adc
aad
or
mov
idivb
xchg
les
push
and
push
sub
jge
je
dec
fildl
inc
clc
push
test
aad
mov
shrb
xlat
sub
sub
adc
sbb
mov
testb
out
mov
test
cmpl
movsb
es
sbbb
xchg
push
movsb
xchg
add
jne
mov
daa
add
lret
lahf
pop
sub
outsb
popf
dec
mov
lods
faddl
pop
mov
insb
jge
and
sub
addb
test
or
pop
mov
movl
test
loopne
mov
pop
int
inc
pop
sbb
xchg
xchg
xchg
aaa
divb
sbb
lret
xchg
daa
jne
idiv
lods
pushf
mov
shlb
test
mov
imul
cmp
lock
mov
into
sbb
in
mov
xchg
rolb
lea
nop
mov
icebp
addr16
test
sub
jge
aad
and
adc
mov
daa
xchg
jl
push
lods
sbb
negl
cmp
mov
pop
pop
and
pop
sti
and
lcall
sub
outsb
push
ljmp
mov
into
sbb
jle
inc
pushf
mov
in
mov
mov
pop
mov
add
lea
ret
repz
mov
rorl
cld
or
inc
outsb
lea
insl
xchg
pop
pop
inc
jge
xchg
scas
lds
mov
mov
jl
inc
xchg
sub
into
fldl
ja
repnz
sbb
das
bound
out
inc
dec
lds
stos
sub
imul
xchg
loop
xchg
push
push
xor
lods
inc
sbb
std
or
mov
cltd
mov
cmp
fwait
into
fldcw
stos
inc
cmp
dec
inc
cld
cmp
lods
adc
imul
test
lret
pop
mov
sahf
pop
popf
jl
cmpsb
ret
push
jg
cmp
int
mov
lds
ja
enter
or
data16
dec
nop
cli
xchg
xchg
xlat
imul
cmc
mov
lds
dec
and
hlt
pop
sub
xlat
sub
fcom
pop
and
jmp
cmpsl
rcll
out
pop
push
lods
cmp
movsb
iret
xchg
mov
loopne
pushf
mov
mov
mov
movsb
and
stc
lret
xchg
sarl
fadds
cmpsl
jo
bsf
je
ss
int3
push
movsb
fisttps
jns
rclb
repz
xor
push
and
jb
or
in
lods
xchg
jns
dec
pushf
push
mov
sub
cmc
push
xor
sbb
test
push
xchg
ja
mov
imul
or
repz
out
lcall
outsb
stc
cmp
daa
mov
in
adc
mov
fisubs
sub
pop
lods
and
pop
cs
jnp
in
dec
stos
sbb
lahf
imul
or
clc
lods
jge
xchg
shr
inc
dec
arpl
mov
subb
jl
loope
xor
mov
cmpsl
push
pop
xchg
xchg
xchg
loopne
xor
mov
jmp
and
test
push
add
fisttps
mov
mov
pop
or
sub
mov
outsl
cmpsl
cmpsl
cmpl
xchg
mov
xor
repnz
push
jmp
pop
xchg
pop
push
fsub
inc
stc
jg
mov
dec
add
test
scas
pop
out
pop
sub
stc
call
mov
xchg
cmp
jne
shrb
daa
js
out
rol
jnp
or
and
or
ljmp
push
pushf
mov
push
mov
enter
or
movsb
cld
mov
xchg
lahf
cwtl
xrelease
push
mov
mov
or
ret
fiaddl
inc
les
pushf
jb
mov
adc
push
mov
jne
inc
or
lods
insl
dec
push
andb
mov
pop
mov
cmp
dec
xor
push
gs
sbb
jl
sbb
popa
or
aam
inc
inc
xor
popa
sub
lods
daa
add
sub
mov
jo
imul
inc
rolb
cmpsl
push
mov
xchg
in
ss
pop
cmp
sbb
cwtl
and
lds
jle
sub
add
xchg
loopne
push
cmp
bound
dec
scas
adc
lcall
repnz
mov
int3
add
repz
dec
stos
pushf
shrd
mov
pusha
push
icebp
frstor
das
mov
or
ja
mov
lret
fnsave
lods
ljmp
pushf
stos
sbb
pop
pop
jns
mov
daa
lds
xchg
add
and
inc
lock
out
push
jo
hlt
repz
or
dec
icebp
sbb
cmpsl
scas
pop
aaa
insb
in
dec
or
addr16
xchg
sbb
pushf
adc
push
dec
cltd
jmp
mov
sbb
out
pop
fists
fs
cs
fs
xchg
repz
jg
das
and
xchg
push
cltd
jg
imul
or
lods
sbb
stos
sub
or
int3
fdivrl
in
or
inc
xor
arpl
insl
cmpsl
addr16
lcall
ja
push
into
popa
scas
sbb
movsb
icebp
inc
divl
cli
push
add
mov
lods
rcrl
xchg
mov
jne
cmpsl
inc
mov
and
pop
mov
jmp
xchg
mov
fisubs
leave
xor
cmp
inc
iret
dec
lret
icebp
lods
call
idiv
aad
stc
pop
aaa
adc
cmp
xchg
inc
lahf
ja
and
pop
xchg
cltd
mov
aam
adc
push
cmp
jmp
xchg
dec
push
sahf
sbb
mov
xchg
mov
add
pop
test
inc
jg
out
test
xor
push
movsb
and
cmpsl
xchg
cwtl
push
clc
neg
adc
idivl
xchg
fs
in
jb
sbbl
in
sub
inc
mov
add
lock
or
jle
mov
add
cmp
xchg
cmpsl
sub
loopne
loope
addl
out
imul
and
jmp
rclb
mov
xor
pop
ljmp
xchg
cmc
loope
inc
lods
lods
xchg
sbb
outsl
mov
adc
jl
in
sbb
hlt
fstl
mov
aad
gs
sub
mov
lds
mov
mov
jo
movsl
dec
outsb
jmp
mov
mov
lods
pop
adc
pop
xor
rorl
aam
jmp
loopne
and
inc
in
inc
mov
xor
xchg
std
mov
sbb
loope
pushf
sub
gs
lds
cltd
xchg
add
out
fwait
add
popf
loop
jbe
adc
add
add
adc
pop
inc
mov
sub
fwait
cmpsl
imul
mov
push
popa
dec
xchg
mov
ljmp
call
xchg
mov
in
and
mov
shlb
das
pop
push
mull
inc
incl
pop
scas
push
jbe
loope
xchg
sbb
mov
fstl
dec
pop
cltd
outsl
fidivs
ss
in
out
in
out
jb
das
xor
loope
movsb
sub
mov
and
aad
out
inc
adc
push
xor
mov
adc
lds
mov
mov
xchg
cmpsl
pop
mov
hlt
push
jg
repz
loop
loop
and
sbb
push
out
das
nop
out
push
cmp
xor
add
fstpl
into
xlat
xchg
jecxz
sub
inc
adc
mov
push
sbb
loopne
pop
pop
jbe,pn
test
sub
sbb
xor
fldl2e
test
daa
arpl
imul
fldenv
or
popl
enter
icebp
ss
in
out
lods
dec
cmp
pop
sahf
mov
pushl
cmpsl
loope
add
inc
movsb
out
xor
lahf
sbb
mov
mov
or
add
lahf
aas
mov
xchg
dec
push
shll
dec
mov
test
mov
loopne
hlt
xor
mov
mov
je
sub
sbb
int
xor
sub
cmc
xchg
pop
mov
stos
movsl
adc
sub
fidivl
and
jne
rorl
aaa
cli
add
xor
sti
sub
jno
dec
shr
lds
push
iret
cmp
nop
jmp
adc
addr16
mov
repz
popf
xchg
and
mov
mov
fwait
int3
pop
pop
or
xchg
mov
fsubrs
cmp
sbb
out
fldt
push
sbb
imulb
and
cld
mov
dec
sub
negb
stc
aas
rclb
lret
dec
pushf
ja
mov
stos
inc
inc
lds
push
dec
aas
mov
inc
mov
xor
mov
lds
push
sbb
sbb
add
icebp
pop
test
popf
cmp
mov
pop
not
ror
mov
xchg
mov
enter
stos
hlt
sub
jno
pop
or
int
fmuls
arpl
mov
mov
pusha
inc
pushf
enter
sub
loop
pop
cmp
or
dec
outsb
dec
fadd
mov
push
scas
jne
mov
push
int
add
inc
mov
in
dec
sahf
mov
imul
lods
xchg
cltd
mov
add
and
ficompl
or
dec
xor
push
insl
mov
test
or
mov
fisttps
pop
jbe
imulb
mov
sbb
or
inc
sarl
jge
jno
dec
lds
add
mov
movsb
sub
sbb
and
mov
adc
dec
push
pop
insb
lea
cmpsl
mov
sbb
aam
scas
dec
mov
dec
mov
push
jns
mov
add
mov
lahf
mov
jnp
pop
cmp
test
lcall
or
mov
mov
in
mov
lods
inc
sbb
push
ret
mov
pop
mov
outsl
lods
mov
xchg
add
in
adc
xor
mov
push
sti
sub
movsl
cltd
pop
enter
insl
int3
adcl
mov
into
push
mov
rcrb
cmp
movsl
sahf
xlat
imul
mov
cld
jmp
add
in
lods
xchg
or
mov
es
test
mov
xchg
dec
mov
shll
inc
mov
inc
jns
sub
in
mov
mov
jge
or
lods
mov
mov
shl
add
cmp
out
sub
cmp
enter
test
xlat
loopne
pop
dec
mov
jns
cmpsl
popf
jne
dec
loop
add
hlt
lods
or
xchg
insl
lret
inc
mov
mov
cwtl
loop
dec
in
xchg
cltd
into
scas
add
jbe
test
lods
fdivrl
fwait
shll
mov
add
jl
scas
xor
nop
lahf
inc
mov
dec
xchg
jno
cltd
cmc
cmp
mov
insl
mov
ja
jmp
leave
in
xor
and
xor
xor
dec
and
scas
add
insl
cmp
ss
inc
inc
cltd
inc
int
add
jmp
push
imul
push
xor
ss
aad
xchg
cld
sbb
loopne
adc
icebp
je
push
mov
inc
int
test
dec
add
jns
push
lods
cmpsb
mov
out
clc
pop
in
mov
xadd
or
dec
or
int
and
in
lret
jns
xchg
cmp
lret
test
inc
bound
mov
cmp
stc
jo
inc
fwait
adc
pop
dec
sub
push
jne
fxch
dec
outsb
dec
icebp
dec
sti
ret
outsl
push
jge
mov
add
insb
sti
fstpt
mov
and
aam
xchg
jns
inc
ds
push
inc
scas
pop
daa
popf
xchg
lods
js
add
mov
aam
test
mov
cmp
rclb
outsl
sbb
xor
xchg
mov
fildl
sub
jno
xchg
daa
push
shll
fs
xor
jmp
sti
mov
rorb
adc
sbb
push
xchg
movsl
jge
ljmp
push
lods
xor
jne
loop
mov
loopne
inc
cwtl
sbb
jae
push
sti
loope
lods
mov
lds
push
aad
mov
or
xlat
and
jbe
jmp
les
shrb
imul
leave
jnp
les
dec
mov
cmpsl
mov
or
lods
mov
outsl
add
jl
add
pushf
dec
das
repnz
and
das
xchg
or
mov
sarl
mov
and
xor
fadd
in
hlt
inc
push
ret
xor
pop
repnz
cli
test
lods
xlat
sub
sahf
lods
lods
mov
adcl
xchg
cmpsb
int
jne
out
push
pop
push
test
jno
pop
pop
and
jo
xor
push
adc
jne
xchg
mov
dec
fisttps
repz
pop
mov
xor
outsl
addr16
mov
xchg
mov
stos
stos
xchg
add
or
cs
fdivl
inc
pop
xchg
pop
mov
lret
in
pop
push
and
cmp
arpl
or
pushf
push
jo
mov
ss
xchg
inc
lret
sub
or
cwtl
icebp
jno
insb
loop
mov
lods
lock
or
mov
jge
rcrb
xchg
xor
xor
fnstsw
lret
ficoms
and
push
jmp
loop
mov
insb
mov
neg
xchg
sbb
movsb
faddp
into
hlt
in
xor
scas
test
in
mov
xor
orb
addr16
insb
hlt
das
movsb
and
dec
or
mov
inc
and
stos
test
lods
testl
inc
and
in
dec
shrb
dec
fstl
fstpl
aad
int3
repz
push
psubsb
mov
cld
sub
push
mov
lret
and
out
inc
pop
xchg
pop
push
xchg
cmp
movsb
sbb
js
inc
popa
mov
fcmove
adc
sub
xchg
and
pop
movsl
faddp
dec
ficomps
fnstsw
cli
lds
outsl
pop
ss
mov
jmp
jno
out
sbb
pusha
cmp
lds
jnp
sub
out
pop
xor
or
pop
nop
loop
test
pop
dec
xchg
or
mov
xchg
scas
mov
mov
xor
jge,pt
mov
add
insb
push
mov
dec
inc
mov
mov
jne
pushf
ret
xchg
jmp
loopne
scas
test
outsb
sbb
jmp
xchg
mov
fwait
mov
jb
inc
or
fs
jo
sti
push
je
mov
iret
lods
adc
rep
push
mov
push
mov
rcll
sbb
and
cmp
add
jp
movsb
imul
pop
or
out
jmp
xchg
fsubrs
jle
scas
sbb
lds
shl
cmp
inc
dec
andl
cltd
xchg
sub
sbb
mov
push
sub
mov
imul
aas
lds
gs
inc
lods
popf
cmpsb
xor
cld
pop
aas
addl
sbb
push
das
je
mov
ja
cmp
mov
daa
push
scas
ret
inc
dec
repz
mov
js
imul
inc
fbld
jmp
inc
lock
out
scas
cltd
movsl
je
fwait
lret
push
pop
mov
fstpt
je
lods
and
cmp
in
scas
shll
push
in
std
out
test
loopne
adc
pop
and
in
mov
dec
divb
sbb
div
jmp
clc
adc
aaa
add
fisubrs
loopne
pop
cmp
lret
rcrb
lea
fists
scas
dec
mov
test
push
mov
adc
stos
dec
adc
mov
cmpsl
xlat
push
cli
inc
push
or
rorl
xchg
jmp
mov
popf
inc
repz
dec
shll
iret
mov
dec
jge
lods
dec
out
mov
mov
cmpsl
bsr
insb
outsb
inc
outsl
or
and
cmpsl
sub
adc
dec
loop
push
popf
jge
jle
sahf
pop
lds
outsb
dec
inc
add
imul
push
loopne
jmp
pop
rclb
inc
cmpb
loopne
mov
in
sbb
fdivr
pop
inc
pop
test
jb
mov
push
mov
mov
rcll
test
test
add
adc
pop
imul
sarw
inc
mov
lods
lret
popf
dec
test
cli
daa
mov
leave
mov
adc
cmp
call
int
cmc
inc
das
fcmovnu
fisttpll
jmp
movsl
lcall
test
cltd
into
sbb
or
add
gs
dec
or
inc
and
xchg
lret
push
jecxz
or
inc
pop
cld
mov
mov
cld
mov
cli
push
dec
push
repz
inc
fstps
daa
sbb
xchg
je
insl
xor
adc
aaa
sbb
mov
add
out
mov
pusha
test
lahf
sub
jmp
mov
mov
scas
and
mov
imul
fistpl
dec
arpl
pop
test
xchg
mov
stos
push
xchg
in
outsb
shlb
popa
push
fildl
pop
fidivl
out
jb
mov
popf
repz
xchg
sbb
jge
push
sub
int
mov
sub
xor
xor
scas
je
enter
pop
mov
dec
popa
sub
sti
mov
lods
stc
hlt
mov
aad
cmpsl
movl
int
jne
negl
lds
mov
insl
lods
sub
fadds
adc
std
cli
mov
ror
and
scas
dec
xchg
in
pop
lcall
cld
adc
call
ffreep
aam
adc
aad
mov
mov
insl
psraw
mov
lret
sti
sbb
dec
enter
into
or
pop
in
sub
lcall
dec
mov
mov
sub
out
mov
lock
lret
dec
cmp
jo
ds
out
cmpsl
sub
insl
lods
loopne
enter
mov
sub
cli
repz
sbb
jne
push
jbe
sti
mov
or
movsb
mov
mov
jp
adc
sbb
and
push
xchg
mov
pop
jae
in
in
sbb
jle
jb
les
rcrl
xchg
mov
sahf
daa
aam
lret
mov
loop
or
aas
pop
sub
fcomp
mov
sub
movsb
or
les
mov
das
dec
fwait
aam
in
popf
fmul
les
jb
lods
pop
bound
pop
mov
icebp
cltd
outsl
sbb
popf
adc
pop
mov
push
loopne
and
xlat
adc
jecxz
int
mov
push
je
ret
lods
mov
sub
sub
pop
fwait
lret
lcall
and
xor
cmp
inc
dec
outsl
fsubs
xchg
movsl
xchg
rclb
and
mov
push
nop
clc
pop
in
out
mov
sbb
mov
inc
leave
dec
stos
or
mov
mov
or
jmp
out
xchg
testb
pusha
mov
dec
inc
sti
and
scas
stc
push
mov
out
cmp
lods
pop
popf
push
pop
inc
pop
std
push
scas
hlt
pop
push
cmp
in
xchg
repnz
flds
rolb
push
mov
insl
or
negl
negl
clc
data16
out
cmc
scas
clc
ja
fcoml
fstpl
cmp
sbb
push
fcoms
and
movsl
inc
stc
push
rcll
sbbl
inc
mov
push
repz
pop
and
stos
jb
lret
outsl
push
sbb
sbb
xchg
hlt
ss
leave
pop
enter
mov
sub
int
outsl
aam
clc
cmpsb
adc
add
sahf
lock
mov
inc
int
cmp
dec
nop
repz
mov
hlt
jbe
cmc
sbb
loopne
inc
or
pop
add
or
out
jb
jle
cld
dec
cmpsl
in
repz
and
fisttpl
and
pushf
mov
inc
mov
mov
and
or
mov
mov
adc
sbb
jmp
mov
idivl
xchg
movsb
dec
in
mov
pop
pop
daa
push
popa
popf
jnp
mov
cmpsl
add
into
mov
mov
aam
sub
imulb
xchg
and
int
stos
lret
lret
ret
loop
dec
sub
fs
dec
xchg
pop
mov
cli
push
xchg
rorl
add
lods
aaa
loop
insb
testl
dec
mov
cmpl
sub
mov
fucomip
xor
jne
jae
fsubl
sbbb
call
fildl
das
cmp
and
cmpsl
pop
int3
or
mov
dec
inc
jg
repnz
imul
mov
outsl
adc
fisttpl
ja
ret
fldenv
xchg
cmc
sbb
popf
stos
mov
adc
clc
pop
cmc
mov
icebp
stos
mov
push
das
pop
mov
ret
or
inc
lret
xlat
add
in
mov
inc
loope
aad
fwait
sbb
jne
add
pushf
or
out
in
pop
cmpsb
rorl
es
pop
scas
jb
jl
icebp
push
les
inc
adc
loop
add
in
lods
cmc
push
jge
lcall
in
pop
mov
mov
mov
in
xchg
push
mov
push
and
lahf
inc
and
scas
iret
pop
dec
ja
popa
mov
cmp
sub
arpl
je
xchg
xor
jge
jmp
ja
lods
push
leave
in
insb
sub
test
test
ffree
mov
xor
mov
outsl
cmc
cmp
or
cwtl
adc
out
dec
sbb
sub
cld
int3
xchg
ret
push
add
mov
mov
or
mov
or
movsb
lahf
cmp
jb
sub
repz
outsl
enter
lods
jne
pushf
repz
sahf
adc
xor
cs
lods
push
out
add
addr16
and
mov
lds
xor
sbb
sub
xchg
inc
outsl
mov
fwait
jnp
dec
jp
xorb
xlat
arpl
mov
mov
adc
pop
movsb
loopne
mov
lods
mov
push
dec
repz
out
lds
addr16
sahf
in
adc
cmpsb
jmp
mov
movsl
jmp
xor
push
imulb
and
movsl
ret
fsubs
pop
repnz
int
stos
mov
lds
pop
insb
mov
repnz
shl
mov
adc
inc
outsl
lret
adc
lods
mov
xchg
fisubrs
inc
pop
sahf
sub
daa
ficomps
ret
dec
arpl
fscale
fnstcw
test
adc
or
pop
std
clc
cmp
leave
ljmp
mov
sub
sbb
mov
aas
test
pop
outsb
xchg
bound
cmpsl
pop
xchg
xchg
mov
or
movsl
je
or
and
add
int
sub
xchg
pop
jge
rolb
mov
sub
mov
cmp
mov
pushf
xlat
xor
test
adc
inc
jnp
pop
push
scas
xor
cmp
mov
fs
in
les
xor
fnstenv
xchg
stc
push
outsl
arpl
arpl
lret
dec
inc
xor
cmpsb
sbbb
orb
lds
imul
cmp
popa
cmpsb
popw
xor
push
int
mov
mov
xchg
popf
stos
cmp
cmp
mov
push
xor
cmp
fwait
add
orb
jmp
lods
icebp
mov
lods
int3
or
loope
inc
dec
sbb
pushf
mov
pushf
test
cmpsl
lret
subl
pop
mov
adc
out
aaa
pop
jl
xor
call
xor
stos
mov
addl
sahf
scas
scas
out
lods
shl
aam
repz
shlb
daa
xor
mov
lods
and
fsubrs
mov
cld
sti
cmc
dec
shlb
push
or
push
orl
and
ret
jne
ret
sbb
and
fbstp
ja
dec
mov
dec
jle
mov
inc
sti
dec
fimuls
push
ja
xor
mov
add
test
lds
or
or
negl
mov
es
push
cmpsb
push
mov
push
insb
push
pop
cmp
pop
jnp
mov
jo
int
aam
dec
cwtl
adc
inc
pop
cmp
xlat
fsubs
cmp
fucomi
or
or
jle
sbb
or
aad
stc
pop
enter
cwtd
iret
xchg
xor
pop
lds
xor
or
push
shlb
popf
ss
hlt
mov
inc
das
pop
pop
loopne
outsl
mov
test
mov
or
mov
lds
out
scas
or
mov
sbb
xchg
xor
mov
adcl
pusha
js
test
out
push
mov
lods
insb
outsl
dec
jns
adc
dec
xchg
sub
lret
sbb
push
repnz
flds
es
movsl
push
flds
add
imul
jbe
adcb
xchg
enter
lret
mov
add
mov
push
pop
xchg
and
fmuls
and
dec
cmp
cwtl
arpl
scas
lods
movsl
mov
rorl
call
pop
xchg
negl
push
rep
movsb
sub
dec
mov
mov
sbb
hlt
adcl
dec
sarl
cs
cmpsl
dec
int
cmp
fbstp
out
cwtl
into
int
jl
fwait
mov
test
fisubrl
mov
stos
int
push
pop
loop
scas
jne
sub
mov
inc
movl
lock
inc
lds
daa
cmp
pop
test
in
inc
xor
add
or
add
aas
ss
cmpsl
into
mov
dec
loop
rorb
in
shrb
or
push
call
xchg
jmp
lock
mov
or
push
and
cmc
pop
mov
adc
lods
sbb
mov
out
pushf
loop
xor
inc
sahf
jg
hlt
aam
iret
nop
gs
jge
jle
mov
js
pop
jmp
lcall
leave
pop
cmc
dec
xchg
add
cli
into
scas
ss
jno
pop
xchg
add
lods
xor
insl
jbe
and
xchg
xchg
stos
push
insb
cmp
in
adc
cmc
lret
cmpb
cld
lods
jp
in
push
mov
jecxz
mov
outsb
push
or
call
adc
inc
jae
mov
and
movsl
lds
gs
sbb
andl
scas
arpl
sbb
adc
shll
jae
mov
test
repz
loop
in
dec
xor
pop
sub
dec
pop
mov
in
sub
lds
or
mov
inc
or
dec
sbb
loopne
in
add
enter
int3
jp
sub
add
cld
mov
sub
repz
push
out
sahf
scas
mov
mov
test
lds
jno
or
pushf
lods
cmpsb
dec
dec
add
int
sub
push
ja
dec
fadd
jecxz
xlat
lods
jo
call
popa
fsubr
jbe
aaa
xchg
sub
mov
jecxz
insb
lcall
pop
mov
sub
inc
js
mov
nop
jmp
std
daa
mov
mul
dec
push
cmp
mov
mov
sbb
repz
cmp
cltd
and
arpl
out
enter
ret
and
and
fiaddl
mov
sub
cmpsl
bound
in
lret
pop
test
xlat
daa
mov
out
inc
pop
adc
mov
mov
dec
icebp
and
insl
sub
fisttpll
inc
xlat
lods
cmp
test
or
mov
mov
jns
repz
loope
shr
lods
sub
push
out
mov
jmp
gs
call
or
mov
add
stos
fiadds
stos
push
and
in
and
push
fisttpll
sbb
and
mov
mov
or
cli
xor
sub
jl
jb
sbb
out
dec
loop
and
add
sub
pop
sbb
jmp
mov
add
adc
call
xchg
jmp
add
loop
rcr
dec
cmc
jl
outsb
dec
xor
ret
sbb
ss
arpl
inc
out
mov
sbb
pop
push
je
jecxz
pop
in
inc
out
hlt
pop
int
adc
in
shl
inc
sti
in
cwtl
lods
inc
mov
test
sbbb
jns
pop
ss
leave
sbb
int
sbb
fs
loopne
insl
js
dec
add
mov
mov
mov
xchg
fcmovbe
and
push
cmpsl
cmp
or
adc
sub
or
test
pop
add
fldl
outsb
stos
add
psubusb
sbb
jmp
lods
sbb
dec
inc
int
into
in
mov
push
lahf
add
lret
add
mov
aaa
or
dec
or
xchg
leave
jg
call
inc
cmp
jbe
sub
pop
lods
pop
imul
jnp
out
fmul
add
or
sbb
jbe
sbb
in
add
or
or
cmp
push
daa
mov
xchg
dec
sub
subb
jb
pop
mov
cmp
pop
adc
fstl
inc
rolb
xchg
cltd
fwait
mov
mov
movsb
shlb
push
movsb
xchg
pushf
shlb
cmp
xor
or
mov
imul
or
mov
sahf
mov
sbb
xchg
fdivrs
imul
lret
mov
fs
mov
cltd
add
xchg
lcall
mov
lret
and
inc
lret
jmp
cmp
popf
sahf
and
sbb
pop
out
outsl
sbb
adc
nop
sbb
mov
or
ret
lret
pushf
cwtl
cltd
dec
mov
and
jecxz
add
mov
loope
movsl
push
ljmp
icebp
cltd
sbb
cmpsb
lret
mov
mov
stos
jge
mov
in
enter
pop
movsb
push
mov
fsts
insl
xchg
dec
sbb
push
mov
fmull
adc
insl
or
test
sbb
xchg
aad
cs
fdecstp
int3
mov
insl
popf
xor
xchg
mov
add
mov
lret
mov
push
addb
sbb
int
add
lods
xlat
pop
dec
out
inc
mov
test
mov
sub
xchg
xchg
lods
add
push
jmp
dec
xor
lods
lret
lea
jmp
lcall
pop
test
cli
insb
sbb
mov
mov
popa
movsb
jmp
cmpsl
insb
push
lds
loop
outsb
sbb
xlat
or
insb
sub
outsl
out
stos
mov
stos
lds
addl
jae
sub
movsb
and
stc
lods
sti
std
fadds
lea
movsl
fwait
jl
into
push
mov
aas
in
test
pop
mov
fst
mov
xor
xchg
mov
fwait
in
repz
sub
cli
jmp
test
sub
jno
sbb
dec
pop
ja
pushl
add
pusha
icebp
jmp
cmp
call
scas
pop
in
fcompl
push
imul
cmp
clc
fwait
add
bound
push
push
cmpsl
leave
inc
sbb
add
push
movsl
add
daa
jmp
push
test
jl
inc
mov
stc
mov
sbbl
aaa
jmp
dec
icebp
int
push
lods
sub
push
xor
mov
sbb
lds
mov
xor
xchg
cld
add
das
and
xchg
mov
push
sub
sti
rcll
loop
xchg
add
jle
out
sbb
insl
sub
lds
sbb
mov
and
pop
gs
out
mov
sbb
fldenv
test
cmpsb
leave
outsb
test
mov
mov
or
push
fcmovne
sbb
cmpsb
sti
loope
add
sub
mov
int
mov
scas
push
mov
sar
or
scas
push
adc
lds
and
sub
xor
push
sub
and
mov
outsl
or
daa
lds
push
mov
shll
xchg
scas
sub
add
loopne
ljmp
pop
mov
push
inc
scas
xor
lret
inc
popf
mov
loope
lret
sahf
outsl
sarl
into
pop
mov
ss
mov
xchg
mov
mov
sbb
xor
mov
xor
movsb
out
scas
movsl
mov
cmpsb
lods
inc
mov
mov
rorl
pop
cmpsl
cltd
cmc
xor
cmc
jecxz
push
repz
pop
stos
into
dec
push
daa
aam
notl
mov
daa
mov
mov
repz
mov
test
dec
mov
cmp
mov
and
dec
mov
ja
jne
sub
inc
aas
outsb
iret
in
inc
push
push
dec
pop
adc
iret
fldcw
mov
cmp
les
insb
inc
adc
pop
mov
jno
int3
les
xchg
cld
shll
movsb
imul
cmpsb
lahf
cmpl
repz
mov
sahf
dec
pusha
divl
mov
mov
movsb
lea
sarl
movsb
mov
pop
dec
push
ss
ljmp
inc
pop
mov
mov
jnp
push
sub
cmp
xchg
push
test
push
sbb
cmp
into
lods
jb
lods
es
faddp
xchg
out
add
dec
les
fsubrl
xchg
and
bound
xor
test
repnz
ja
cmp
jge
aam
xchg
pop
inc
adc
aaa
daa
jmp
pop
cmp
pop
sub
lea
sbb
jecxz
es
pop
pop
jle
and
inc
sbb
sahf
inc
cmc
mov
jp
xlat
in
cmpsb
and
arpl
inc
mov
mov
test
cwtl
xchg
addr16
adc
push
xchg
outsb
jb
insl
sub
imul
ret
jbe
push
mov
and
repnz
xchg
js
or
sti
xlat
lock
scas
mov
cli
cld
or
mov
jp
or
daa
and
xlat
pop
in
daa
fidivl
xor
arpl
scas
aam
pop
sub
xor
fwait
or
dec
pop
xchg
jnp
rcl
mov
in
repnz
test
test
movsb
js
xchg
sbb
popf
dec
inc
fadds
fsubs
adc
lahf
or
or
add
jnp
enter
mov
sahf
add
stos
xchg
jb
push
push
test
xchg
xor
inc
inc
out
neg
jmp
test
mov
mov
sahf
lds
pop
lods
or
std
movsl
lods
es
ret
lds
loopne
in
adc
scas
xor
lret
insl
enter
and
ficompl
cmp
sti
xor
mov
loope
stos
into
push
mov
inc
lock
sbb
hlt
test
stos
imul
aam
jmp
pop
movsb
xchg
jle
lods
push
pop
push
mov
out
shl
mov
sti
out
or
mov
jmp
jmp
pop
lods
imul
enter
cmpl
push
fldl
xchg
pop
subb
cmpsl
int3
nop
sahf
xchg
jle
ds
movsb
clc
sahf
out
rcrl
mov
aam
mov
lds
mov
pushf
lret
cmp
push
pop
ret
mov
cmp
cmp
clc
adc
icebp
dec
in
icebp
sbb
mov
std
sub
pushf
cmpsb
jb
lahf
cltd
lret
jp
xor
rolb
loopne
cmpsl
pop
fwait
insb
xchg
dec
mov
in
test
arpl
popa
mov
cs
pop
sbb
lods
sbb
sub
inc
mov
inc
movsb
and
inc
mov
data16
push
and
cmp
or
lahf
popf
mov
js
mov
pop
sbb
jmp
or
dec
mov
mov
out
sub
ja
cmpl
dec
jo
adc
sbbb
mov
xchg
and
cltd
xchg
arpl
fs
fwait
sti
cmp
xchg
out
fldl
mov
pop
movsl
adc
cmpsl
daa
push
sbbb
ss
repnz
lods
jmp
imul
int3
out
popf
test
call
sub
sub
in
pushf
mov
xor
jne
inc
or
pop
call
inc
xchg
int
sahf
fmuls
dec
out
fdivrs
out
ret
and
add
jne
and
push
lock
cmp
push
sub
out
sbb
jmp
ds
test
mov
inc
aaa
in
test
sbb
sub
sub
dec
loopne
push
cmp
setbe
ss
dec
lret
cli
out
test
or
and
fisubl
cld
jb
arpl
inc
stc
jmp
mov
sbb
outsb
daa
sti
jmp
jne
sbb
jp
test
or
insb
dec
popf
cld
mul
cmpsl
mov
xchg
mov
out
inc
or
pop
cmp
les
movsl
icebp
mov
cmp
add
in
pushf
repnz
fisubs
fdiv
pop
push
mov
mov
subb
das
sbb
icebp
sbb
mov
inc
push
push
cmpsl
insl
jb
sarb
sub
sarb
imul
sahf
inc
jle
jge
mov
lgs
jbe
fsub
cmp
data16
jne
lods
das
fiaddl
mov
call
imul
adc
jb
xchg
lods
mov
scas
mov
pop
inc
outsl
pop
ljmp
push
in
pusha
jno
sbb
mov
sub
xchg
test
xchg
xor
std
mov
call
fwait
xchg
mov
lods
cmp
adc
inc
ret
outsb
out
adc
aad
xlat
arpl
inc
lock
imul
pushf
lods
outsl
adc
outsl
xchg
inc
pop
dec
mov
pop
fsubrs
push
popf
jb
arpl
sbb
ljmp
fs
movsb
arpl
push
or
xor
lds
add
stos
adc
inc
lds
mov
lods
sub
sbb
repz
pop
shrl
insb
sub
cmp
lcall
popf
fwait
aas
mov
fwait
scas
cmp
into
push
mov
pushf
fsubl
jbe
mov
add
fisubl
sbb
or
lock
enter
sbb
out
fisubl
bound
call
addr16
xchg
in
movsl
lds
ret
sub
xchg
push
movsl
lahf
push
inc
add
or
movsb
insb
cmp
push
insl
outsb
sbb
pop
cmp
jns
mov
lock
scas
js
mov
in
inc
repz
in
leave
xchg
cmpsl
int3
mov
rol
movsb
loope
or
cmp
xchg
mov
xchg
cmp
xlat
jg
clc
or
adc
jb
lcall
movsb
adc
adc
ja
mov
or
cmc
jbe
adc
xor
in
xor
ja
orl
scas
fwait
or
data16
aas
fdivr
push
dec
cmp
outsl
outsl
mov
xlat
or
inc
cmc
scas
xor
or
mov
imul
lcall
cmp
push
scas
sub
int
inc
adc
sbb
jecxz
int3
mov
push
xchg
icebp
test
lds
sbb
push
seto
xchg
shlb
xchg
call
arpl
mov
or
pop
outsl
pop
fs
mov
popf
je
mov
je
xchg
popf
lds
jnp
push
std
repz
adc
mov
push
call
pop
jmp
fmull
bound
jo
add
cmp
data16
mov
loop
push
or
cmpl
cmp
movsb
fs
cmpl
or
stos
pop
add
push
ss
in
push
dec
dec
mov
test
test
dec
xchg
hlt
push
add
mov
int3
mov
popf
gs
test
mov
out
aam
scas
jmp
fidivs
sub
dec
xor
jge
lea
lret
sbb
int3
popf
lret
xor
pushf
xchg
push
jo
mov
pop
sub
gs
jnp
cmpl
rcrb
aaa
int
call
dec
sub
xor
mov
lods
xchg
in
sbb
addr16
sbb
int3
sbb
push
adc
dec
add
cwtl
sbb
mov
push
pop
or
pop
inc
loope
sub
adcl
shld
movsl
rorb
mov
dec
lea
sub
or
dec
fsubrs
jle
imul
inc
adc
in
mov
ret
sbb
out
sub
and
popf
repz
mov
fwait
cmc
sub
jae
nop
xor
dec
pushf
xchg
xor
mov
mov
inc
mov
jmp
gs
popf
push
pop
jmp
pushf
xor
dec
mov
popf
inc
pop
and
in
hlt
int
daa
pop
mov
popf
loope
push
xor
cmpsl
in
call
pop
sahf
or
sub
jge
popa
sbb
shlb
addl
add
aam
xor
sub
aad
xchg
push
fmull
fdivl
scas
aam
pop
pop
inc
lcall
mov
jmp
fcoml
sbb
lds
sub
enter
loopne
ret
mov
jb
xchg
jne
pop
mov
push
je
push
int3
lahf
and
mov
fldz
pop
addr16
daa
ret
fchs
and
dec
cmc
test
cltd
pushf
loop
dec
insb
stc
pushf
cld
addr16
popf
xchg
cmpsl
sbb
or
mov
mov
pop
pushf
dec
or
mov
lds
mov
out
cli
sub
hlt
scas
int
xchg
sub
inc
pop
mov
mov
mov
lea
mov
fdivl
test
or
sub
in
xor
je
mov
sbb
aas
cwtl
jecxz
daa
xchg
popf
pushf
lods
mov
repz
call
sbb
and
cwtl
int3
sbb
mov
test
dec
xchg
push
stos
repz
lret
repnz
push
mov
popa
pop
sbb
mov
inc
rclb
out
pop
xor
add
pop
mov
xchg
rcl
ss
xchg
jne
out
xchg
enter
gs
hlt
mov
loopne
lock
sub
jp
mov
ljmp
or
data16
test
dec
mov
xchg
pop
add
inc
xchg
xor
leave
mov
mov
pop
insb
jbe
inc
aad
adc
mov
subb
pop
test
ss
enter
shl
push
push
mov
rcl
mov
mov
pushf
lods
fcmovnb
out
lods
cmp
out
xsaves
mov
mov
cmpsb
inc
in
jnp
lods
lds
ja
cmpsl
jge
sahf
int
fdivl
into
shlb
dec
lods
sbb
add
data16
pop
test
addr16
mov
out
xor
jae
out
jl
mov
xlat
mov
mov
inc
inc
cmc
push
xor
test
inc
test
popf
xchg
xchg
or
mov
clc
pop
mov
dec
sbb
inc
inc
aaa
adc
loope
pop
or
xor
pop
inc
mov
out
in
sbb
popf
out
xchg
fisttpll
lods
sub
in
pop
mov
mov
sbb
push
xlat
and
subl
popa
inc
and
int
mov
mov
aam
mov
sub
pop
mov
mov
xchg
jmp
aad
xchg
scas
xchg
aad
xchg
scas
scas
mov
ret
sub
xchg
xor
adc
push
pop
lds
shll
mov
pop
push
mov
xchg
jne
iret
imul
pop
in
mov
push
or
int3
movb
or
lods
sub
pop
scas
pop
xchg
cs
test
and
xor
imul
insb
popw
mov
pop
out
lods
into
dec
mov
pop
nop
popf
mov
daa
fcom
dec
icebp
mov
pop
fisttpll
adc
cmp
mov
test
jne
imul
pop
mov
push
in
popf
stc
push
mov
lods
push
arpl
int3
lods
mov
test
push
arpl
or
lea
jg
dec
pop
movsb
mov
and
vmovhps
or
movsl
mov
inc
mov
loopne
dec
xor
or
xor
inc
xchg
pop
lcall
fcmovu
divl
mov
ret
sbb
test
pop
xchg
test
jmp
shl
lods
push
jecxz
and
mov
lcall
mov
xchg
stos
sbb
jno
sub
fisubrl
clc
cwtl
sub
xchg
pop
cltd
inc
daa
push
adc
ljmp
imul
movsl
pop
out
in
sbb
xchg
hlt
loopne
inc
mov
xchg
repz
sahf
fisttpl
add
fistpl
clc
in
pop
ljmp
mov
push
stos
push
jle
cltd
sub
sub
adcb
push
or
movsl
xchg
in
inc
cmpsl
jb
push
push
dec
mov
push
sub
movsb
pop
rcr
mov
inc
nop
xchg
and
mov
xor
insl
mov
inc
adc
movsb
mov
jl
mov
loop
mov
dec
mov
cmpsl
or
mov
xor
mov
fwait
adc
adc
pushf
mov
daa
lds
mov
aam
stos
cld
daa
outsb
lea
add
cmpsb
mov
cli
lahf
das
cli
ffreep
cmp
andb
push
aad
repz
addr16
and
or
pop
lds
pop
lahf
xor
hlt
clc
adc
sbb
hlt
into
test
ljmp
xor
out
outsl
aas
out
push
fistpl
ret
inc
add
dec
test
in
push
sti
xor
out
sub
mov
popf
jno
add
mov
cltd
or
cltd
insb
cmp
in
mov
movsb
fiaddl
sbb
movsl
adc
insl
fcoms
jge
mov
outsl
dec
pop
mov
adc
inc
outsb
popf
lds
mov
cmp
xchg
xor
jns
es
cmpsl
mov
subl
loopne
adc
push
in
add
inc
sub
xor
lods
daa
mov
pusha
mov
push
in
add
fsts
push
fistps
pop
movsl
jmp
cmp
cld
mov
movsb
insb
in
sub
jge
dec
sti
add
dec
rorl
add
inc
daa
mov
mov
xchg
push
cltd
jg
cli
cmp
jbe
aas
dec
in
and
or
xchg
aaa
cmp
jbe
cmp
mov
out
cltd
sub
push
and
pushf
push
addr16
loop
xor
add
xlat
sub
lret
jo
dec
push
cmpsb
sbb
iret
jb
mov
leave
js
jno
cmp
xchg
ss
dec
jmp
push
in
jnp
jp
cli
dec
lds
pop
fcmovu
xchg
mov
aaa
inc
jle
sbb
mov
and
mov
outsl
jmp
int
pop
out
mov
add
mov
dec
mov
mov
sbb
pop
orl
je
ret
in
mov
and
pop
in
out
fdiv
xchg
add
inc
push
stos
mov
adc
add
test
push
mov
fimull
mov
in
push
dec
add
rcll
sahf
shrb
repnz
sub
dec
jno
lret
xchg
dec
jle
dec
inc
push
outsl
shr
push
cmp
arpl
pusha
ret
outsb
clc
daa
cld
fwait
movsb
mov
sub
lock
xor
and
jo
xchg
xchg
imul
lds
adc
repz
cmp
fidivrl
ret
sub
outsl
inc
adc
sbb
movsl
sahf
push
xchg
pop
mov
jae
jb
xor
sar
in
sbb
sbb
mov
lret
pop
lcall
push
mov
cmp
push
dec
sbb
dec
sub
cmp
in
fwait
xor
call
enter
mov
pusha
add
das
int3
pop
movsb
leave
pop
movsl
mov
adc
mov
mov
pop
mov
dec
inc
sbb
cmpsl
sbb
lret
or
cmp
inc
adc
int
add
arpl
out
mov
rol
fisubrs
leave
sub
arpl
jecxz
nop
mov
lahf
daa
pushf
sbb
mov
lret
out
cmp
add
mov
sub
das
test
adc
arpl
push
cmp
lret
aaa
int3
std
mov
push
aas
out
inc
repnz
sbb
imul
add
or
sbb
movsb
test
jae
mov
mov
lcall
faddl
hlt
jae
fldenv
popl
stos
insb
inc
mov
sbb
xchg
lds
gs
leave
lret
daa
add
stc
movsl
jb
xor
push
xchg
jmp
fistpll
arpl
sti
jl
stos
jbe
inc
fdiv
int
sarl
popf
jb
mov
out
adc
test
arpl
jp
ja
test
sahf
cli
jnp
nop
xchg
sbb
jecxz
mov
xor
cli
test
jb
mov
cmpsl
inc
jl
or
nop
mov
subl
stos
stos
insb
cmp
xchg
pop
jne
outsb
lods
lds
fimull
pavgw
dec
dec
daa
mov
fadd
add
movsb
ret
clc
dec
fcompl
xor
in
loope
adc
fldenv
fsts
lods
or
xor
test
mov
popf
in
sbb
scas
sub
pop
sbb
jne
add
out
fwait
xor
dec
mov
mov
daa
pop
movsl
fisttpll
jmp
lret
cwtl
pop
mov
insl
in
cwtl
or
stos
je
xchg
leave
popa
jg
in
jmp
lea
stos
mul
xor
pop
and
lahf
inc
and
push
lret
jl
divb
repz
jp
xchg
push
xchg
push
shlb
mov
and
xchg
pushf
test
aas
pop
rolb
out
or
mov
push
in
sbb
ds
pop
aam
jns
mov
cmp
push
movsb
in
aaa
xchg
jmp
jo
out
hlt
cli
das
lahf
les
push
data16
dec
fistpl
shll
xchg
mov
clc
stc
cmp
add
sbb
jle
inc
cmp
mov
fldt
lods
fwait
or
fists
addr16
mov
or
ja
mov
jle
icebp
clc
push
loop
dec
cmpsl
scas
mov
lods
mov
scas
jl
aad
popa
add
call
bound
mov
push
aad
or
mov
sub
sbb
jb
ja
repz
mov
outsb
mov
mov
lods
scas
fwait
pop
add
sbb
pop
push
pop
cmpl
fsubrs
unpckhps
test
arpl
lock
cmpsl
push
je
fldcw
loopne
shl
mov
add
mov
sbb
cs
imul
fstps
and
lods
adc
mov
fbstp
lds
sbb
pop
mov
fsubr
rolb
dec
lea
jo
inc
sarb
push
xor
xchg
inc
and
jnp
xorl
fsubs
mov
dec
mov
repz
push
popf
sub
and
sbb
cmc
scas
cmp
pop
xchg
xchg
es
mov
es
cmpl
sub
fstps
inc
rolb
or
dec
fsubrl
mov
push
sub
popa
mov
lds
cs
jmp
xlat
push
shl
lahf
push
push
mov
sub
mov
fisubrs
mov
call
mov
sbb
cwtl
lret
scas
cltd
adc
or
cmpsl
ror
xlat
sbb
adc
pop
aas
nop
mov
jecxz
cld
fistps
add
mov
in
and
nop
and
inc
je
pop
xor
mov
fstps
ret
fstps
cld
xlat
pop
lods
xchg
cs
xor
sub
xor
imul
fcmovnbe
sub
jbe
xor
adc
loop
jb
push
ret
pop
pushf
or
stc
cli
je
pop
pop
sub
lds
xchg
cmpsl
jmp
fisttps
pop
test
outsl
lret
jbe
test
ret
mov
jmp
lea
mov
sbb
jb
xchg
sub
mov
enter
loopne
out
sbb
sbb
xor
sub
adc
shll
or
adc
xlat
test
mov
jnp
mov
jecxz
insb
jmp
push
pop
stc
lods
stos
push
mov
cmpsl
mov
movb
push
xor
sbb
xlat
mov
jle
mov
and
sbb
xor
sbb
sbb
lods
fwait
test
push
push
movsb
xchg
iret
lods
and
popf
enter
pop
in
imul
in
jb
int3
mov
push
mov
sbb
adc
fsubrs
xor
sbbb
in
jmp
inc
add
loopne
push
imul
xchg
pop
lods
mov
loope
outsb
mov
movsb
jno
cltd
sbb
int3
push
dec
and
hlt
add
mov
test
call
dec
fstps
clc
stos
mov
jns
call
cmp
ja
lods
fstl
loop
out
push
push
fimull
std
scas
jnp
cltd
hlt
inc
sbb
jb
fwait
jne
and
gs
jg
stc
xor
fildll
mov
or
push
or
repz
xor
movsb
cli
or
inc
packuswb
les
sbb
adcl
js
mov
loopne
daa
and
je
lods
sbb
jne
sbb
das
jp
insb
push
and
pop
dec
mov
xor
lods
cmpl
fadds
or
bound
sbb
mov
mov
xchg
push
aaa
jb
lods
mov
pushf
inc
jo
mov
push
in
fcmovbe
sbb
mov
fwait
pop
mov
movsb
mov
cmp
fisubl
out
test
pop
cmpsl
pushf
scas
lods
rorb
xchg
imul
pushf
add
or
cltd
hlt
lcall
cmc
cltd
inc
xchg
push
mov
sub
fcompl
mov
test
idivb
and
sbb
lret
inc
mov
pop
rolb
inc
sbb
ss
add
aad
cmp
xchg
xor
cmp
mov
stc
into
mov
shll
inc
pop
inc
aam
mov
lds
popa
out
movsb
pop
mov
mov
xor
jmp
test
mov
daa
push
stos
xor
push
xor
fldt
or
insb
pop
test
jl
mov
sbb
stc
xchg
pusha
cmp
lods
and
lahf
inc
lea
inc
jge
loopne
cs
jb
mov
and
mov
nop
and
lahf
mov
iret
sbb
cmp
scas
dec
std
lea
int
mov
enter
lods
mov
mov
into
scas
or
jmp
add
sbb
inc
enter
jae
mov
int3
pop
inc
imul
dec
repnz
inc
xchg
lods
xchg
out
inc
and
mov
lret
call
sbb
cmpsl
jbe
sub
test
daa
in
xor
xchg
int3
cmpsb
push
loope
imul
movsb
inc
dec
add
aam
mov
pop
jle
sub
pop
add
fists
xlat
stos
js
xchg
mov
sbb
fwait
je
mov
jno
popa
subl
lods
pop
ret
enter
mov
fwait
cmp
inc
sbb
hlt
fsubrs
je
test
sub
enter
push
inc
adc
out
lds
ja
jmp
pop
mov
cs
mov
push
mov
sbb
mov
mov
insb
add
popa
mov
mov
rcr
hlt
jb
add
and
mov
mov
xor
inc
pop
and
lods
paddb
pop
xchg
lahf
arpl
out
cmpsb
pop
loop
add
xchg
inc
aas
jnp
xor
lds
bound
lds
movsb
lods
add
xor
sbb
das
jle
dec
call
out
scas
jge
aas
mov
add
in
pop
loopne
jge
sbb
mov
in
vmwrite
add
push
cmpsl
int
add
push
aas
fcomps
divb
mov
lea
pushl
cwtl
lds
xchg
nop
adc
jns
subl
imull
mov
call
jne
mov
jp
lock
jbe
lds
pop
vsqrtps
or
ds
mov
cmp
adc
xlat
xchg
mov
inc
cmpsl
cwtl
sbb
lret
or
jle
sbb
dec
mov
mov
or
scas
push
out
jne
xchg
pop
adc
xchg
lcall
sbb
cmpsl
add
pop
xchg
and
out
push
xor
les
push
add
clc
lods
lock
add
or
int
and
sti
jne
imul
test
sti
andl
and
adc
lahf
pop
orb
lea
and
pop
sbbl
inc
loope
mov
xlat
mov
push
adc
pushf
mov
pop
loopne
mov
int
daa
cmpsl
add
jge
sbbb
test
mov
inc
dec
std
addl
push
rolb
adc
addl
rcrl
cmp
adc
dec
xchg
lcall
mov
xor
imul
push
pop
mov
mov
add
dec
push
movsl
xor
repz
mov
negb
ret
mov
adc
test
in
addb
cmp
jnp
into
int
adc
inc
adc
fsubs
dec
test
pop
pop
shll
mov
cmpsb
or
ret
fmuls
mov
sbb
ljmp
push
int
enter
pop
xor
enter
or
jmp
add
pushf
outsl
push
repz
addr16
sbb
movsb
cmc
pop
mov
mov
call
cmpsb
sub
fcomp
fwait
lds
dec
cmp
outsb
stos
subl
mov
xor
mov
sahf
xchg
mov
pop
lahf
mov
rcl
cmpsb
loope
mov
mov
cltd
xor
int3
movsb
mov
jge
ret
es
cwtl
test
loopne
test
mulb
xor
shll
cmpsl
add
out
sbb
stos
xchg
out
xchg
ss
xor
push
pop
mov
mov
dec
into
mov
mov
outsl
push
mov
std
sbb
sub
push
and
mov
xchg
or
fsubrl
mov
mov
sti
andb
lea
sbb
fisubl
fucomp
cwtl
xor
pop
int
sub
popf
lahf
sti
iret
fidivrs
mov
arpl
je
js
movsb
mov
mov
pushf
int3
popf
lds
imul
push
hlt
push
test
scas
push
lds
cmpb
repz
je
repnz
lds
popa
test
out
cmp
mov
push
fisubrl
sub
xchg
lcall
mov
xchg
fmuls
in
add
jbe
mov
dec
int3
mov
mov
pusha
mov
adc
test
into
mov
int3
std
int
push
test
call
mov
aad
push
dec
outsb
cmp
mov
dec
mov
sub
and
and
aam
inc
dec
sbb
rorl
adc
sub
mov
lods
pushl
add
jno
push
push
jecxz
pop
sahf
adc
pop
sbb
cmp
movsb
into
flds
insl
xor
cwtl
loope
add
imul
and
xchg
sarl
xlat
mov
js
xchg
stc
fucom
cld
and
jno
cmc
jns
add
jecxz
and
inc
xor
leave
xchg
cmpsb
jno
cwtl
movsb
lods
dec
or
push
in
adc
fsubr
xchg
sub
iret
push
insl
scas
and
mov
cltd
lds
lret
and
enter
xchg
mov
mov
je
mov
test
loopne
outsl
sbb
jno
push
int3
pop
xchg
leave
mov
sub
movsb
sub
add
loopne
shrl
movsl
das
pop
sbb
mov
mov
inc
pushf
in
int3
mov
sbb
jge
and
and
test
xchg
pop
popf
or
lds
pop
dec
ds
das
xchg
jle
xor
bound
neg
lods
mov
stos
mov
imul
pop
pop
jmp
mov
or
cli
xor
add
dec
lods
sub
hlt
xor
imul
out
or
in
mov
jbe
sub
lods
cli
push
sahf
mov
lea
xchg
das
movsl
add
aas
fcomps
lods
pop
cmpsl
push
or
and
adc
js
pop
xorb
lds
jmp
jl
aam
popa
xchg
imul
fdiv
popf
cltd
imul
shrb
mov
xchg
mov
xchg
sbb
test
push
js
cmpsl
pop
stc
mov
lods
into
xor
std
mov
or
das
hlt
pusha
mov
cmp
and
shrl
sbb
sub
outsb
arpl
in
and
fildll
lock
fiaddl
jne
in
in
mov
sub
jmp
imul
mov
and
add
mov
xchg
push
lods
test
test
push
hlt
mov
sub
xorb
pop
dec
xchg
cmp
jns
out
pop
imul
bnd
jmp
adc
je
xchg
sub
outsb
xchg
add
lahf
fildl
lods
fwait
pop
xchg
jge
mov
jmp
mov
int3
in
xchg
ficompl
ret
xor
dec
subb
and
fldt
mov
jecxz
ret
lret
push
mov
iret
and
xchg
adc
inc
jne
fmulp
dec
push
inc
rol
ss
mov
enter
sbb
sbb
ja
xor
push
pushf
insb
test
movsl
xchg
cltd
imul
mov
cwtl
jmp
clc
jb
and
test
dec
mov
jl
mov
pop
pop
cmp
rcrb
ss
pop
fmuls
dec
sub
jg
sub
test
push
mov
fs
mov
out
adc
jmp
in
lret
adc
push
pop
lcall
push
je
in
jmp
lcall
cmp
or
sti
adc
insb
int3
filds
sbb
out
and
xchg
repz
arpl
jge
stos
jle
jns
das
jmp
add
std
pop
mov
inc
jnp
jbe
mov
mull
xchg
sbb
imul
stos
sbb
sbb
pop
lret
bound
dec
add
or
movsl
daa
lahf
sti
in
hlt
in
insl
lcall
dec
pushf
sarb
inc
adc
or
cltd
dec
mov
cmpsb
int
decl
mov
xchg
lret
lods
push
mov
imul
xchg
cwtl
test
cmp
lret
sub
add
out
je
les
mov
jnp
stc
loope
push
sub
inc
pop
icebp
pushf
iret
sub
out
mul
aad
xorl
or
mov
or
and
or
imul
into
inc
or
cs
test
pusha
daa
jmp
les
pop
ss
mov
mov
enter
mov
mov
adc
jnp
test
fcomps
out
lods
mov
loopne
inc
nop
int
pop
les
and
pop
pushf
mov
outsb
xlat
repz
inc
dec
and
sbb
stc
scas
cmp
int
cmpsl
arpl
adcl
add
hlt
rcrb
sub
or
lahf
insb
jbe
fstl
sbb
imull
mov
or
add
or
push
push
pushf
adc
and
std
mov
int3
movsb
pop
cmp
scas
incl
rcrl
push
imulb
pop
cmp
mov
lods
ret
in
mov
cmpsl
roll
call
int
lds
aaa
les
rcll
imul
push
jmp
push
scas
xor
mov
sub
xchg
ret
mov
lods
lods
lds
leave
push
stos
jo
xor
movsl
xchg
outsl
xchg
sub
clc
call
pop
pop
sbb
enter
add
add
add
lahf
sub
mov
mov
pop
int
lods
cmp
inc
addl
fwait
in
fildl
out
inc
test
fldt
movsb
scas
out
call
inc
scas
jo
mov
cmc
std
add
cmp
int
add
inc
scas
popf
cmpl
jecxz
loop
dec
mov
and
jmp
repz
cltd
push
rclb
and
xchg
daa
mov
dec
mov
and
lods
fadd
shlb
xchg
std
sub
out
xorl
dec
cmp
mov
mov
lea
lcall
mov
push
sahf
push
in
sbb
push
dec
repz
loopne
or
sahf
sub
add
mov
stc
lods
jmp
xor
jmp
out
lea
or
mov
lret
hlt
or
or
xor
sub
cmp
mov
and
lods
jnp
int
xor
xchg
es
shrl
les
ret
jmp
stos
loopne
into
iret
cld
adc
push
scas
out
enter
xchg
insb
lods
pop
daa
mov
inc
pop
push
sub
out
addr16
lcall
js
fwait
xor
cmc
xchg
ret
cltd
lahf
or
mov
test
cmpsb
push
fsubrl
icebp
test
dec
stos
pop
lret
fildll
push
xor
cli
cmp
fbstp
jae
cli
je
jbe
ror
and
add
fdivrs
ret
pop
pop
inc
adc
dec
lcall
mov
insb
add
push
pop
enter
jge
ret
jmp
mov
aad
fimull
mov
xchg
push
leave
add
in
lods
icebp
lret
mov
out
negb
movsb
stc
sub
insl
mov
jle
adc
xchg
hlt
cltd
push
mov
add
inc
adc
dec
xor
xlat
test
out
lock
pushf
cmc
scas
dec
adc
adcb
repz
in
inc
repnz
inc
lahf
int
clc
add
cmp
lahf
das
cmpsl
lods
gs
jle
test
fcompl
inc
scas
loope
arpl
xchg
insb
mov
js
shlb
lcall
fwait
mov
xor
or
xlat
mov
sub
mov
ljmp
or
mov
pop
add
mov
ja
or
mov
cld
les
pop
pop
xchg
cmpb
stos
jbe
jb
mov
lods
jno
pop
sahf
jbe
ja
mov
in
cmp
inc
pop
inc
sub
stos
fisubs
aam
int
jae
das
xor
mov
and
mov
push
sahf
mov
sub
cmp
cmp
fidivrs
addl
mov
jb
jne
jge
aas
xor
mov
es
adc
pop
loop
sbb
adc
popa
out
inc
jne
mov
lds
mov
hlt
sahf
inc
lods
fsubrl
mov
popf
fcmovb
push
rorb
mov
mov
movsb
js
cwtl
sbb
mov
add
in
int
test
mov
mov
mov
mov
outsl
mov
inc
or
cli
test
test
lahf
std
iret
dec
cmc
in
push
jne
ret
inc
xor
jb
jns
mov
mov
mov
or
or
outsl
and
pop
inc
sbb
roll
je
dec
stos
lds
sub
add
stos
sbb
mov
pop
idivl
pop
push
popf
xlat
inc
jl
xor
cli
scas
xor
test
jne
mov
sub
or
mov
sbb
fcmovbe
and
subl
lds
mov
arpl
enter
and
nop
jne
ret
lds
cltd
fnstcw
mov
out
rcrb
movsb
int
sbb
sub
mov
ret
iret
sub
cmp
push
sbb
lods
std
inc
inc
fiaddl
dec
aaa
and
addr16
les
lret
jecxz
mov
decl
insl
mov
daa
xor
xlat
mov
scas
fistpll
mov
and
jecxz
call
jecxz
ss
xor
in
xchg
pop
mov
sbb
adc
fdivr
and
les
mov
push
push
repz
and
sub
das
ljmp
rcr
adcb
in
xlat
int
ret
inc
xchg
add
jge
scas
in
lahf
mov
outsl
in
add
aas
sbb
daa
and
adc
fs
repnz
sub
ljmp
icebp
jge
movsl
fsubrs
mov
xchg
outsl
dec
mov
jecxz
jne
sti
int3
je
and
aaa
add
jbe
mov
das
pop
mov
sbb
mov
cmp
and
and
int
stc
ret
cwtl
cmpsl
push
pop
pop
in
pushf
scas
in
out
inc
andl
fsubrl
in
mov
sub
andb
test
fwait
xchg
mov
and
sbb
out
mov
test
imul
jnp
enter
imul
mov
inc
lret
fimull
cwtl
fs
cmp
adc
gs
scas
xchg
push
and
leave
add
mov
inc
lret
repnz
cmpsl
dec
xor
and
xchg
mov
dec
fdivrs
shrb
or
adc
mov
push
int
mov
mov
add
push
jbe
setl
bound
insl
mov
pinsrw
xchg
jae
outsb
push
and
sbb
sti
inc
lods
dec
jecxz
cmpsl
xlat
adc
mov
fcoms
fwait
cmpsb
out
es
xor
fmul
add
mov
sub
and
loopne
in
push
fwait
mov
cmp
out
movb
sub
jecxz
mov
lret
loop
loop
add
adc
xor
popf
daa
lods
out
push
add
lods
int
sbb
sub
imul
pop
sbb
fdivrp
inc
loop
jne
mov
sahf
inc
lret
mov
lods
jb
loopne
repnz
repz
fisubs
movsl
mov
mov
fdiv
or
xchg
addr16
cmpsb
mov
mov
xchg
sub
or
test
je
pop
dec
sub
addr16
mov
sub
dec
popa
pop
xor
das
xor
pop
sub
fwait
das
mov
fidivs
mov
mov
cld
add
mov
scas
sub
mull
cmp
lcall
into
mov
adcb
test
cmpsl
pop
cltd
push
lcall
fwait
test
jmp
and
inc
jecxz
in
mov
pop
imul
and
jo
dec
fwait
cmpsl
pop
pop
out
mov
and
xlat
std
pop
and
sbb
repz
fwait
cmp
lods
pop
scas
aad
lds
dec
cmpsb
xchg
ret
aam
test
popa
mov
cwtl
mov
int3
aad
xlat
dec
mov
scas
daa
sub
add
inc
shll
add
into
out
cmp
xchg
push
fucomip
xor
adc
mov
fwait
lods
popf
enter
lds
mov
lret
mov
cmpsl
xor
ret
nop
icebp
or
lcall
push
xchg
jbe
cwtl
cltd
aaa
fstl
fwait
shll
test
hlt
inc
lahf
fsts
movsb
popf
pop
push
mov
js
inc
cli
pop
mov
subl
inc
sbb
pop
lds
xchg
out
orl
fucomi
aas
insb
cmp
dec
adc
mov
je
mov
add
fmul
test
add
pop
lods
add
loopne
jl
cmp
lret
fwait
push
sbbb
or
cwtl
mov
push
in
or
dec
test
loope
inc
loopne
in
popa
ror
movsl
mov
xor
popa
pop
ret
push
add
mov
add
aaa
mov
and
jl
test
add
lcall
sahf
xchg
jmp
mov
mov
push
mov
jns
mov
pop
jbe
xchg
push
in
mov
mov
insl
test
and
nop
xchg
shrl
jmp
das
sahf
jb
movsb
mov
xchg
insb
sub
sbbl
imul
xor
jle
sub
jmp
repnz
jmp
xor
or
jmp
or
sub
outsb
lods
clc
sub
pop
sbb
std
int3
outsl
fwait
adc
xor
lret
jle
loope
push
mov
cmc
in
jl
fldcw
loope
repz
outsb
or
mov
and
inc
mov
in
pop
push
cmp
jbe
jmp
aaa
jns
int3
sub
lret
ds
aaa
stos
pop
fwait
xor
add
mov
loopne
out
adc
std
xchg
mov
push
mov
dec
push
xor
stos
movsb
mov
cmp
and
dec
insl
xchg
xor
or
sub
in
mov
pop
mov
mov
shll
xchg
xor
insl
rclb
adc
rolb
mov
xchg
stos
imul
cld
aaa
test
mov
xchg
dec
lret
outsb
scas
int3
mov
mov
hlt
mov
mov
in
popf
dec
mov
cmpsl
mov
or
push
outsb
addl
jae
popl
in
shr
xchg
adc
daa
int
xchg
sbb
mov
jb
jge
cs
loopne
push
mov
or
sbb
idivl
ret
mov
bound
in
fildl
sub
scas
outsb
fdivl
aad
xchg
stc
jmp
cli
in
cltd
int
cmpsl
add
ret
ljmp
xchg
rcll
fsubrl
mov
mov
inc
loop
out
out
imul
stos
sub
lea
or
shlb
out
fcmovb
lcall
add
mov
push
ficoms
call
cmp
mov
xchg
or
add
mov
mov
mov
dec
into
fdivl
sti
into
ljmp
fstps
and
enter
pushf
lea
sub
sbb
mov
sub
jecxz
stc
mov
std
enter
mov
pop
xor
push
lahf
sahf
cltd
mov
cmp
shlb
ljmp
ret
jnp
sarb
test
push
into
mull
pop
mov
lds
mov
lds
add
fst
daa
xchg
call
push
daa
pop
xchg
mov
aaa
cli
mov
lds
mov
lret
jbe
mov
shll
mov
lock
adc
scas
mov
cmpsl
wbinvd
xchg
pop
loopne
push
adcb
jl
mov
dec
pop
mov
cmpsl
adc
int
js
push
mov
dec
pop
adc
lret
sahf
jae
popf
aam
ss
lock
push
adc
jnp
lods
mov
sub
movsb
not
pop
cmpl
test
outsb
mull
cltd
mov
aas
inc
outsb
jge
shr
xor
bound
mov
push
aam
movsl
add
mov
dec
test
push
les
in
adc
or
out
movsl
mov
popf
xorb
ud2
sub
pop
cltd
push
sub
push
hlt
lock
cli
adc
add
adc
add
sub
lods
imulb
movsl
das
or
xchg
xor
mov
push
stos
or
add
mov
loopne
xor
sar
xor
mov
jecxz
dec
aas
outsb
xor
xor
xor
push
mov
xor
inc
in
test
or
xlat
jnp
jb
in
mov
mov
xchg
stc
pop
das
mov
je
jae
loopne
and
and
pop
pop
xchg
inc
mov
call
outsb
scas
jl
mov
inc
call
lds
in
mov
push
push
xchg
inc
jno
insb
mov
scas
fdivl
ror
out
xor
cmp
jbe
mov
test
lods
mov
pop
aas
lcall
repz
sub
scas
push
sbb
lret
test
bnd
sbb
ja
mov
pop
lret
mov
inc
dec
scas
mov
push
xor
xor
sub
or
xor
inc
mov
mov
mov
lcall
jmp
pop
mov
repz
mov
xor
xchg
pop
cmpsl
movsl
push
adc
push
out
mov
and
add
xor
mov
clc
mov
jnp
mov
mov
cs
loope
dec
stc
test
pop
fstpt
stc
xchg
sub
repz
xor
int3
pop
cmpsb
jo
pop
and
push
cmpsl
cmp
gs
fidivl
sbb
ficoml
add
mov
xchg
jl
int3
adc
and
sub
aad
cmp
imul
inc
ret
mov
test
aaa
sub
dec
inc
push
pushf
dec
dec
jg
and
rcr
lock
push
repz
dec
push
mov
pop
loope
leave
les
pop
sub
daa
mov
shll
das
pop
cli
push
mov
inc
adc
jns
popf
jl
jo
xchg
mov
loopne
pop
xchg
ljmp
pop
in
pop
in
lds
lcall
mov
xchg
in
cmp
popf
js
std
jne
push
movsb
pop
pop
lea
lods
enter
ficompl
sbb
adc
stos
pop
pop
aas
stos
mov
pop
js
xchg
pop
jne
out
ficompl
es
ret
mov
icebp
push
inc
jl
lods
fldl
sbb
add
daa
and
lock
stos
rcl
or
mov
insl
insb
and
outsl
mov
inc
add
push
xor
xor
mov
arpl
mov
je
stos
aad
cmpsl
jmp
movsb
sbbb
loope
int
dec
mov
xchg
sub
ja
xchg
sbb
in
fcmovnu
push
or
dec
stos
jb
loop
icebp
insb
and
int
xchg
and
sbb
cltd
push
fwait
add
mov
push
lahf
scas
movb
orl
icebp
adc
xor
rolb
les
stos
sbb
cmp
or
or
js
lods
cmp
int3
mov
cmp
pop
idivb
adc
xchg
push
andb
stos
movsb
adc
lods
ds
push
mov
pop
cwtl
inc
cmpsl
jno
inc
mov
sbb
and
arpl
lcall
outsl
jb
mov
dec
mov
mov
mov
daa
mov
stc
mov
cltd
les
jnp
mov
int
popf
incl
push
inc
or
fldenv
jmp
test
or
mov
leave
adc
mov
mov
and
sbb
xor
test
lods
sub
push
out
or
cmpsl
mov
mov
data16
xor
mov
pop
inc
scas
adc
fidivrl
mov
mov
jl
mov
pop
out
mov
popf
inc
int3
add
xchg
xchg
xorb
mov
inc
repnz
push
clc
stos
sbb
inc
mov
inc
in
data16
popa
popf
push
push
loope
divb
fadd
cltd
adc
cwtl
lcall
pop
cmp
jmp
clc
xlat
mov
shrl
jbe
jb
and
ljmp
mov
sbb
in
sub
pop
stos
jmp
push
sub
mov
xchg
xchg
adc
lds
jbe
hlt
fwait
scas
arpl
xchg
mov
out
out
dec
sbb
add
stc
cltd
pushf
push
jbe
mov
xchg
jae
insb
lds
pop
mov
jbe
out
aam
imul
call
test
inc
bound
mov
xchg
push
add
mov
addb
lahf
sahf
cvtps2pd
iret
or
orb
or
out
cmpsl
subl
inc
das
adc
and
sub
add
dec
daa
fsubs
imul
or
negb
rclb
cld
mov
sub
cmpsb
fwait
std
mov
std
cmpsl
scas
cmpsl
sbb
pop
lds
ja
fidivrl
xchg
mov
inc
pop
inc
out
xor
mov
test
lds
lds
sbb
addb
in
sbb
pop
jge
popf
arpl
pushf
xchg
push
or
repz
aam
lahf
cs
jge
data16
cmp
mov
ja
out
cmpsb
add
jle
cmpsl
pushf
popa
imul
imul
arpl
jge
fisubrl
sbb
pusha
outsl
stos
mov
jb
sbbl
sub
in
lock
andb
movl
into
push
in
inc
sub
test
mov
call
push
and
sarl
cmp
jb
jne
shl
fdiv
jnp
jnp
pop
ja
push
outsb
pusha
scas
jle
arpl
sub
mov
mov
and
inc
outsl
in
mov
fcmovu
filds
push
mov
cmp
mov
int
cltd
loopne
cmpsb
and
xor
xor
pop
mov
popa
test
pop
mov
mov
cs
inc
mov
push
xchg
mov
pusha
or
daa
pop
es
mov
movsl
mov
pop
and
jge
dec
or
sbb
sub
and
add
addr16
cmpsb
sub
outsl
int
test
bound
mov
sbb
enter
jg
sub
or
and
xchg
pop
mov
mov
sbb
daa
in
xchg
subb
push
xlat
into
cmpsl
push
xor
sti
xlat
pushf
sbb
jb
lock
and
ja
imulb
arpl
dec
add
mov
mov
xor
dec
pop
hlt
xchg
hlt
lahf
or
stos
std
scas
loopne
movsl
rcrl
push
aas
jb
push
mov
daa
mov
repz
xor
imul
lds
jo
sbb
xchg
mov
sbb
fwait
cmp
ss
test
std
push
lods
add
pushf
test
and
rolb
sub
push
adc
fmull
in
jmp
mov
jno
mov
dec
cmpsl
int
hlt
cwtl
mov
mov
dec
sub
std
fwait
je
outsb
mov
xor
adc
xor
lahf
sbb
mov
test
rcl
shr
cmp
xchg
xor
mov
sbb
test
cmp
lods
lret
fadd
out
jns
imul
fwait
mov
jmp
test
fwait
jmp
je
xchg
lock
mov
imul
push
dec
push
pop
je
lods
cmp
inc
pop
lock
mov
jne
push
ljmp
mov
ret
cmp
mov
mov
sbb
aam
fwait
jae
jbe
aam
xor
or
cmpsl
inc
imul
xchg
mov
mov
mov
or
jae
orb
or
jge
sub
sub
sub
call
jne
jno
outsl
xor
mov
xor
push
call
call
scas
ja
scas
scas
out
int
scas
imul
in
or
call
sub
repnz
pop
lods
mov
stos
xchg
int
push
insb
cli
add
in
in
mov
sub
pop
push
imul
lret
cmp
cmp
fwait
xor
idivl
imul
mov
lock
sbb
adc
into
ss
test
repz
cmpsl
inc
jae
inc
adc
add
mov
lock
cmp
test
dec
lea
jmp
jp
mov
xchg
mov
adcb
punpckldq
fiaddl
push
jo
gs
out
pop
dec
xor
or
mov
loope
add
xor
and
sbb
jnp
mov
int3
lcall
sbb
dec
cld
and
cvtpi2ps
cwtl
dec
data16
jecxz
test
lds
jl
loopne
pop
xchg
imul
fcomps
adc
mov
jge
mov
sbb
or
push
aas
ror
jmp
dec
cld
mov
or
inc
inc
lods
sub
sbb
dec
jge
ret
popl
testb
je
adc
xchg
insb
push
jle
ja
test
and
xchg
inc
sub
fsts
pop
push
sbb
mov
mov
shlb
adc
aaa
or
adc
rcll
insl
jb
loopne
mov
lea
mov
in
test
aas
jge
pop
stos
rcr
jg
scas
inc
pop
test
enter
jne
fisttpl
or
jno
cltd
lret
and
shrl
addr16
mov
lods
sub
ja
xor
cmp
outsl
mov
lods
std
add
popa
int
imul
lods
sub
pop
jmp
orl
in
rolb
fidivrl
add
lods
xor
rorl
push
insl
fsubrl
faddp
mov
sbb
rcll
cmpsl
inc
jl
mov
mov
clc
sub
mov
cli
sbb
push
fsubl
push
sbb
decb
sbb
sbb
or
pop
or
jp
mov
mov
and
fisubrs
cmpsb
scas
stos
sub
scas
insl
pop
ret
jmp
or
add
movsl
movsl
lret
cwtl
int
lret
std
mov
jo
xor
dec
repz
lods
into
filds
mov
dec
or
frstor
jbe
pushf
and
stos
push
ror
push
shrb
rcr
fidivrs
into
loop
push
add
mov
mov
lods
pop
outsl
jne
jge
mov
sti
subb
dec
leave
and
jne
sbb
cmp
rorl
mov
int
mov
test
cmp
fisttpl
mov
adc
les
rol
xor
cmp
sub
out
sub
scas
xchg
out
outsl
mov
ret
mov
insl
mov
mov
int
insl
imul
scas
jo
and
jecxz
jbe
sub
daa
sahf
andl
repz
or
jge
addl
xchg
mov
sub
pop
xchg
cwtl
mov
mov
fdivrs
cmp
ss
je
xchg
inc
cs
pop
push
xor
cmp
jo
inc
movsl
xlat
popf
popa
pop
push
mov
mov
filds
loope
and
add
lret
or
sub
push
daa
cmp
aas
xchg
xchg
dec
popf
data16
add
or
ja
mov
push
mov
sub
xchg
fdivrs
scas
add
sub
sahf
test
dec
shll
push
imul
sub
fwait
jecxz
mov
mov
lds
aas
xlat
mov
loopne
sub
mov
pop
div
and
scas
cltd
ss
repz
cmpsl
outsl
xor
xchg
sub
in
lds
pop
mov
add
ret
xlat
dec
pop
sahf
movsb
or
lret
cwtl
fcmovne
aaa
sbb
or
mov
and
insb
pop
cmp
sub
clc
dec
lea
repz
clc
ljmp
mov
popf
subl
leave
ret
stc
xchg
dec
push
inc
dec
stos
or
loopne
cmp
sub
sbb
add
inc
cwtl
std
ljmp
stos
sbb
mov
in
mov
fwait
pop
push
cmp
shlb
das
stc
loopne
mov
out
cld
fwait
and
sbb
cmp
lods
aas
into
push
mov
or
test
aaa
xor
cld
fcoml
cmp
mov
out
imull
mov
add
shl
push
add
xor
stc
inc
mov
jns
in
ud1
xor
ss
pop
lods
or
pop
push
mov
xchg
mov
dec
jle
shrb
add
lea
push
and
pusha
adc
mov
xchg
repz
pop
data16
mov
fldt
cmpsb
adc
push
inc
xchg
jns
sub
xor
pop
mov
sub
jbe
adc
movsl
fwait
test
jbe,pn
and
pop
xor
xor
js
push
mov
call
cmp
cmpsl
loopne
aas
cmpsb
cltd
and
fistps
daa
pop
fwait
aam
lahf
test
inc
push
jp
inc
inc
rol
in
xorl
push
movsl
xor
or
push
stc
inc
or
lcall
inc
cmp
push
pusha
dec
dec
mov
dec
mov
movl
in
xchg
enter
mov
mov
pop
pop
loop
mov
stos
push
mov
orb
push
insb
icebp
popf
fwait
inc
out
lcall
push
jle
or
out
sahf
loopne
xchg
out
mov
pop
mov
cmp
cmp
fcmovb
out
stos
shrl
and
jne
jbe
xor
and
dec
sahf
jb
xor
stos
mov
rcrl
les
jl
scas
push
sbb
push
dec
lret
movsb
stos
sbb
hlt
inc
nop
add
incb
stos
push
imul
xor
sub
xchg
dec
mov
data16
mov
shlb
lods
int
sbb
jb
sub
jns
mov
ss
pop
xchg
sbb
mov
sub
dec
cmp
cli
int
sub
repz
js
xchg
inc
xor
ja
mov
sub
sti
fidivs
scas
adc
icebp
cmpl
das
mov
clc
in
pushf
das
mov
push
or
sub
fdivrs
scas
pop
add
pushf
mov
cltd
test
int
jmp
pop
mov
mov
adc
mov
sub
sub
xor
adc
sbb
mov
or
mov
or
xor
mov
mov
loop
movsl
mov
mov
cmp
adcb
movsb
xchg
inc
leave
sti
lcall
ja
cmpsl
aas
pop
cmp
jnp
mov
mov
test
nop
orl
jl
mov
and
jmp
mov
pop
sbb
xor
ja
mov
sbb
cltd
fsubr
xchg
jmp
enter
das
push
and
xchg
pop
jle
add
test
pop
ljmp
inc
xchg
lcall
mov
push
fwait
sbb
and
popl
call
cmpsl
sub
xchg
in
loop
inc
dec
lahf
sbb
xchg
aam
mov
outsb
jo
inc
mov
cmpsb
data16
cmp
ja
xchg
mov
test
ds
sub
in
pushf
pop
lods
mov
inc
lods
icebp
push
repz
int3
sbb
xchg
fstl
xor
or
cmp
scas
movsb
xchg
mov
sbb
add
and
lds
inc
pop
cmp
push
lock
pop
mov
lret
jne
mov
pop
outsl
test
inc
loop
call
outsb
pop
test
mov
test
mov
ret
push
imulb
arpl
and
fistpl
mov
in
stos
lea
push
mov
aam
int3
and
in
sub
jo
jne
mov
sbb
das
das
arpl
mov
fsubl
mov
loop
xchg
insl
scas
and
and
xchg
sbb
sbb
and
xor
sub
out
test
xor
popa
cwtl
neg
test
mov
lock
iret
mov
xchg
xchg
insl
jge
fdivl
int3
out
sbb
je
arpl
and
mov
fsts
lret
repz
addr16
divb
xchg
fcom
cmp
stc
push
jne
data16
or
repz
scas
pop
mov
pop
add
mov
sar
gs
jecxz
hlt
push
loopne
cmp
jecxz
rcrl
jbe
or
jns
push
pop
call
mov
lea
pop
hlt
inc
mov
scas
dec
stos
sbb
testl
adc
sub
call
cs
lods
mov
or
les
mov
add
adc
insl
add
js
insl
mov
fwait
dec
enter
repz
outsl
mov
iret
dec
lods
and
sahf
mov
add
cs
loopne
mov
ror
in
or
in
out
mov
lcall
mov
lea
mov
cmp
pop
aad
dec
cs
push
inc
stos
lock
movsb
inc
push
int
jl
dec
sahf
sub
mov
loop
sub
dec
insb
sbb
les
les
mov
cmp
lds
in
pop
movsl
and
push
sbb
jae
push
lahf
mov
adc
insl
mov
mov
xchg
adcl
mov
cmp
out
mov
loope
in
add
icebp
or
push
mov
stc
dec
add
data16
fadd
pushf
fwait
jno
stos
les
insb
pop
mov
into
dec
outsb
sub
das
lods
pop
fwait
mov
add
outsb
loopne
shll
mov
fadds
lock
cld
lahf
xchg
insl
pop
adc
pop
cltd
lods
adc
sbb
lods
insl
add
inc
inc
jbe
pushf
icebp
mov
fwait
push
hlt
cmp
ljmp
call
loopne
sub
xor
sub
fs
add
pop
sub
pop
imul
dec
inc
std
ss
xorb
sub
cmp
mov
jg
xor
xchg
jg
ds
sub
fdivl
xor
outsb
mov
sahf
mov
mov
jo
aaa
mov
into
dec
add
add
sbb
sub
int
movsb
fsubrl
vshufps
mov
add
xchg
jo
sub
push
ret
dec
shll
daa
aam
xor
inc
test
inc
insb
jbe
dec
in
mov
cmp
jb
cmpsl
scas
cmp
fadds
mov
aam
and
in
pop
or
push
movsb
xchg
fnstenv
into
stos
xor
pusha
push
mov
decl
movl
jb
callw
pop
xchg
mov
fs
mov
lds
push
adc
sub
add
push
scas
dec
popf
mov
mov
enter
push
jns
xchg
xor
les
nop
dec
jl
xlat
lds
xchg
leave
mov
jle
mov
out
push
sub
enter
xlat
test
sbb
xor
icebp
sub
lock
adc
adcl
push
inc
jne
add
xor
xor
fcoml
addr16
fldenv
imul
cltd
hlt
cmc
rol
dec
sub
ds
jge
pushf
mov
sbb
out
push
sub
cwtl
or
cltd
call
daa
fldcw
lods
jo
jmp
jg
outsb
xorl
insb
xchg
sbb
and
inc
aaa
test
sbb
add
cmp
dec
test
mov
xchg
jge
xchg
fisubl
add
xor
mov
insb
test
xchg
sub
lahf
sub
loope
jmp
out
xor
test
push
xor
pop
adc
cld
fisubrs
sub
xor
in
ret
shrl
ljmp
ret
lret
nop
pop
jmp
into
xchg
mov
dec
sbb
pop
stc
outsl
mov
imul
or
out
out
dec
stos
jne
loopne
fcmovnu
cmp
inc
add
in
mov
jbe
jl
test
sbb
xor
jbe
sbb
inc
int
lahf
aaa
outsb
push
icebp
push
pop
int
repz
popa
data16
mov
daa
dec
cmp
mov
repnz
pop
mov
mov
int
cli
mov
dec
mov
fwait
sbb
sbb
dec
pop
adc
xor
les
pop
fmuls
lret
bswap
mov
jb
mov
push
fisubl
pop
cld
sub
in
loopne
inc
xor
mov
int
cmpb
adc
pop
inc
sbbl
aam
pop
mov
lds
mov
adc
mov
dec
cmp
mov
subb
repz
sbb
pop
mov
imul
lods
mov
test
jge
jle
fs
pop
inc
cld
cmc
lahf
jmp
mov
and
out
cmpsl
push
push
cli
lret
fcmovbe
idivl
xor
retw
lahf
pop
jmp
mov
pushf
adc
xchg
adc
test
and
jmp
mov
outsb
push
movsb
clc
sub
out
inc
add
lcall
push
cmc
ljmp
stc
adc
outsb
vmaxsd
mov
sub
pushf
lds
cmpsl
aad
jne
mov
mov
test
pushf
adc
cmp
mov
mov
jle
xchg
push
enter
mulb
fwait
stos
push
lods
outsl
dec
lret
adc
and
pop
lds
clc
gs
out
test
add
clc
pop
subb
cmpl
pop
mov
and
inc
enter
push
call
lret
mov
int
push
push
sub
add
mov
and
xrelease
mov
js
jo
cmp
xor
mov
test
cmpsb
mov
xchg
pop
call
test
scas
and
mov
xchg
repz
mov
adc
test
mov
inc
jecxz
divl
sub
jbe
call
cmpsl
add
js
stc
push
pop
mov
test
js
sub
xor
cmp
mov
pushf
push
push
cmp
inc
cmp
loope
jecxz
cli
push
hlt
mov
or
xchg
repz
test
xchg
fwait
push
cmp
fwait
lods
mov
xchg
cwtl
scas
int
clc
pop
mov
loopne
movsl
and
filds
sub
fwait
cs
stos
dec
and
loopne
pop
xor
and
jne
movsl
sbb
outsl
lahf
lods
adc
dec
and
inc
xchg
pop
roll
jb
aas
movsb
xor
mov
lret
mov
ret
push
test
push
push
daa
pop
fiaddl
cwtl
out
movsl
mov
int3
xchg
jl
lret
xchg
aam
jmp
mov
jp
inc
mov
loop
fwait
and
ret
mov
and
sub
sbb
mov
fwait
hlt
jl
add
mov
repnz
cld
lock
inc
repnz
mov
pop
pushf
lahf
or
inc
mov
pop
in
mov
outsb
arpl
push
fstpl
jo
jp
cwtl
jne
stos
popa
test
hlt
xchg
std
dec
adc
popf
icebp
jne
and
sub
rcrl
inc
cwtl
incl
lock
inc
jmp
inc
cmpsb
cwtl
mov
imulb
repnz
push
fstpl
roll
testl
jne
pop
test
xchg
sbb
dec
push
cmp
out
xor
lods
ja
xchg
mov
lods
cltd
dec
imul
jb
cmp
add
lds
cmp
call
inc
int
lcall
sarb
mov
hlt
adc
test
jge
insl
enter
adc
lret
cs
je
sub
sub
jge
cltd
mov
xchg
jmp
sbb
popa
aad
test
jle
mov
lds
iret
stc
cmp
mov
into
push
and
mov
in
pop
lds
xchg
sbb
sbb
fstpl
xlat
mov
and
cmpl
mov
mov
sub
int
inc
loop
sub
push
and
dec
cld
add
cmp
rcll
outsb
in
add
cmpsb
xchg
sub
mov
out
popa
mov
call
jo
stos
jbe
mov
xor
hlt
ret
inc
xor
jl
cs
mov
fstpl
imul
shlb
and
lahf
sbb
jecxz
pop
jb
xor
pop
movsb
pop
mov
mov
pop
inc
add
sbb
sbb
jle
mov
dec
out
test
scas
daa
mov
outsb
test
mov
je
ret
cmp
mov
pop
jb
mov
adc
dec
loop
movsl
mov
cs
test
sub
movsb
jmp
and
mov
cmc
jbe
push
ljmp
and
push
push
dec
push
push
or
mov
cmp
out
mov
sub
call
and
push
cmpsb
or
mov
add
popf
mov
jbe
jns
data16
lock
test
xor
std
inc
pop
cmp
in
sbb
inc
loopne
jae
ret
xlat
cmp
sbb
sub
jg
scas
pop
cwtl
outsb
jecxz
paddsw
fsubrl
sti
push
or
cmc
dec
bound
sbb
pop
cmpsb
jl
lahf
cltd
cmp
dec
mov
mul
add
mov
stc
insb
ss
dec
jge
in
mov
and
sub
hlt
pop
test
scas
mov
sub
sbb
cmp
dec
outsl
dec
imul
inc
int3
sub
mov
sbb
fidivs
aas
mov
fs
ret
and
je
pop
xor
sub
and
jns
sub
jg
inc
ja
jp
xchg
and
and
inc
notb
mov
shrl
shrb
xor
rcrl
xabort
int3
orl
jne
inc
dec
fwait
push
jge
adc
cltd
hlt
dec
in
mov
lods
scas
rclb
fistps
xchg
pop
sub
adc
movsb
out
lret
inc
or
leave
jnp
addr16
in
inc
jge
fnstsw
mov
rcl
pop
xchg
adc
fdiv
jo
sbb
fs
pop
mov
fimull
in
lds
hlt
push
imul
mov
lret
loope
sahf
cmp
pop
mov
arpl
pop
cwtl
pop
jge
js
xor
mov
insb
or
outsb
mov
jmp
push
add
inc
cmp
sub
push
mov
xchg
cmpsb
mov
inc
push
mov
push
aad
sbb
cwtl
mov
xlat
mov
inc
xor
jge
aam
mov
push
mov
adc
in
cwtl
jmp
mov
shll
scas
pop
and
sarb
add
mov
stc
xchg
sbb
in
xchg
idiv
fwait
jmp
int
pop
insb
lods
out
lods
mov
test
push
mov
jecxz
scas
imul
cmc
fists
fisubs
scas
mov
jo
addr16
lods
jne
fmuls
shrb
fisttps
cmp
cmp
mulb
jge
mov
fbstp
fwait
les
jns
out
adc
lds
xor
cmp
es
iret
bound
adc
cmc
adc
stos
imul
sub
imul
or
test
icebp
jb
xchg
scas
test
leave
icebp
loopne
jecxz
mov
jecxz
js
jmp
xor
rcr
mov
subb
jmp
popa
jl,pn
andl
cld
lods
xchg
mov
sub
and
jns
outsb
sbb
mov
lret
inc
sub
cmp
xor
clc
stos
fsubrs
mov
lret
mov
insb
adc
ffreep
or
jmp
call
fldenv
xor
pop
mov
xor
insl
push
jnp
enter
pop
scas
leave
loop
into
and
andl
cmp
xor
mov
fdivl
lods
cld
loopne
push
cmpsl
fildl
push
lds
inc
inc
or
ret
and
inc
loopne
popa
pop
out
stc
stc
xor
push
xor
sbb
jns
daa
cwtl
cmpsl
movsl
icebp
sub
mov
pop
and
push
testl
bound
jmp
pop
lret
add
xchg
loope
cld
adc
mov
jl
sub
push
mov
popf
test
insb
vpaddsw
pop
popf
fwait
call
scas
jge
repz
sub
lea
mov
mov
dec
loope
jmp
insl
and
hlt
bound
mov
or
fwait
inc
inc
mov
push
xor
test
mov
mov
mov
or
jl
fnstenv
add
enter
je
adc
fisubrl
sahf
ds
jg
jle
cmc
je
mov
sbb
sub
inc
outsb
cltd
dec
stos
adc
mov
mov
or
in
ja
orl
fs
lods
adc
adc
adc
jge
mov
loop
test
mov
lods
mov
lea
pop
dec
mov
lds
sbb
jle
mov
and
insb
insb
sbb
lds
scas
cwtl
pop
push
pop
je
loopne
pop
xor
pop
inc
mov
aaa
inc
call
mov
jge
cmpsl
push
cmpsl
lret
xchg
test
sbb
push
mov
add
daa
mov
aas
ret
inc
add
scas
loopne
das
rcrb
xchg
pop
fdivs
inc
inc
xor
jmp
or
lods
pop
loope
or
push
push
sub
arpl
notb
mov
adc
adc
int3
mov
jno
arpl
fists
sbb
or
inc
cmp
lock
push
push
lds
jne
hlt
fwait
enter
idivl
pop
int
lds
movsl
push
mov
outsl
aaa
daa
out
push
in
icebp
rcl
xchg
mov
or
int3
int
loop
cmp
add
ss
push
imul
cmpsl
hlt
mov
enter
xor
pop
xchg
pop
popf
pop
mov
rcl
cltd
add
popf
aaa
mov
test
mov
lods
pop
arpl
xchg
pop
mov
push
lds
push
and
into
pop
sub
sub
push
loopne
mov
imulb
sbb
cmp
out
sbb
push
int
mov
int3
rcr
adc
xchg
inc
stos
fcomps
movsb
ret
lahf
out
loope
or
int
sub
lea
push
fists
mov
js
mov
daa
pop
repnz
out
mov
push
pusha
lods
orb
sbb
mov
idiv
or
cmp
ljmp
clc
imul
andl
sti
push
ret
popf
lods
adc
inc
lahf
scas
popf
rcl
dec
sbb
adc
mov
jno
hlt
int3
imul
cwtl
fcoms
call
fisubrl
icebp
out
jge
jo
imul
test
xor
loope
xchg
out
fcmovu
sbbb
aaa
lea
xchg
or
das
pop
fwait
push
arpl
in
and
ja
cmp
enter
dec
push
mov
icebp
sbb
lods
loop
sub
cmp
mov
mov
mov
add
dec
dec
mov
sahf
xor
add
xchg
push
mov
cmc
mov
adc
outsl
inc
in
sub
xchg
mov
sahf
insl
popf
xor
sub
test
pop
push
xchg
mov
mov
fs
mov
in
push
sub
cmp
insl
sbb
xchg
xchg
testb
xchg
push
inc
aas
add
popf
vmovsldup
jb
fsubrl
sbb
stc
or
xchg
fwait
cmc
std
into
cmpsb
xchg
add
test
fdivl
mov
int3
out
mov
fisubrl
and
rcrb
dec
pop
pop
sbb
cwtl
fcmovb
sahf
ja
lods
and
adc
jecxz
jb
sbb
jbe
lret
pop
mov
jb
sub
pop
inc
in
frstor
mov
inc
xchg
divl
mov
fsubrs
loop
daa
movsl
mov
mov
sbbl
int
je
rolb
mov
add
and
fdivs
sbb
aad
daa
test
or
lods
mov
test
xchg
out
mov
imul
call
popf
daa
out
in
inc
daa
and
or
sbb
ds
addr16
cmp
xchg
adc
or
pop
dec
lret
and
neg
sbb
out
fistpl
outsb
fldl
incb
sub
int
mov
out
sbb
push
adc
or
sbb
mov
push
jg
xor
sbb
lret
cwtl
add
mov
mov
pushf
popf
mov
outsl
and
popf
stc
lods
cmpsl
xlat
pop
sbb
xchg
out
cmc
or
fwait
pop
out
pop
pop
xchg
push
out
fdivrl
sub
lds
sahf
xor
sub
pop
push
ss
out
imul
cmpsb
push
aaa
inc
jb
xchg
mov
jnp
icebp
pusha
lods
daa
adc
dec
add
inc
pop
popa
sub
mov
loopne
and
mov
xor
les
lods
inc
fcoml
and
sbb
pop
cli
and
imulb
adc
dec
sahf
and
mov
insl
pop
test
mov
lcall
lds
push
push
jmp
into
pop
cmpl
sahf
jecxz
sub
mov
sub
sahf
cmpsb
lods
jb
loopne
addb
add
popa
mov
and
shrl
pop
rcrl
daa
adc
mov
pop
in
es
imul
pop
jmp
in
inc
loopne
pop
jg
jns
jp
push
adc
add
xor
dec
mov
pop
mov
test
in
dec
aas
testl
int3
sub
pop
mov
mov
repz
fisttps
insb
sti
inc
xchg
cmp
fistpl
dec
xchg
xor
sub
jg
jns
add
dec
sub
ss
cmpsb
mov
pop
xor
dec
lahf
daa
and
jno
repz
addr16
jl
lret
mov
inc
lods
and
add
pop
or
pop
cmp
mov
movsl
aad
test
add
lods
xchg
imul
mov
or
das
mov
pop
loop
mov
or
inc
fbstp
bound
in
cwtl
mov
or
outsl
adc
mov
int
cmp
jo
scas
cmp
in
ret
dec
insl
and
pop
mov
inc
ret
cmpsl
ss
or
xchg
add
sub
jmp
sub
mov
out
xchg
xchg
nop
inc
test
push
adc
imul
test
icebp
pop
xchg
shll
pop
lods
push
aaa
mov
sub
in
cmova
lock
sbb
jb
loopne
ss
test
loop
cmpl
push
add
and
mov
pop
movsl
hlt
xchg
insb
loop
cmpl
pusha
mov
dec
aas
push
or
mov
ljmp
inc
cmpsl
push
push
pop
xor
mov
mov
inc
pop
hlt
in
sbb
pop
in
bswap
movsb
les
mov
int3
pop
insb
pop
outsb
rclb
mov
cmpsb
jae
dec
mov
out
fstp
xchg
repnz
mov
xchg
test
mov
mov
and
jb
nop
loopne
push
pop
test
stos
lds
pop
add
popf
punpckhwd
in
add
pop
test
mov
int
adc
xchg
int
jae
int3
shrl
aad
ror
push
iret
pop
fwait
inc
outsl
mov
cld
in
fcmovb
add
adc
cmp
ja
js
test
ficomps
jae
ret
out
bnd
in
push
and
lods
pushf
inc
jno
cmp
jmp
movsb
test
test
ljmp
or
xor
mov
xchg
add
scas
loop
cld
or
mov
mov
pop
fwait
insl
pop
cmp
mov
jnp
sbb
clc
movsb
hlt
out
push
fmuls
popf
sti
hlt
into
lds
or
pop
lret
jle
ss
insb
fwait
mov
lds
push
xor
mov
lcall
in
lds
jmp
jge
mov
lods
sub
push
push
arpl
add
mov
lcall
in
lds
xchg
cmpb
jg
xor
jecxz
jl
pop
sub
cmpsb
daa
jge
jg
jne
pop
pop
mov
imul
ljmp
repnz
pop
mov
std
mov
shr
jmp
insb
adc
je
ljmp
pushw
mov
inc
imul
lock
in
out
imul
jb
or
movsb
mov
adc
sub
and
cli
pop
sub
mov
push
push
arpl
cmpsb
fdivs
hlt
inc
push
add
inc
popa
sub
mov
jne
mov
pop
or
into
arpl
ja
push
stc
pushf
std
hlt
dec
cld
dec
insl
les
adc
imul
loop
pop
out
decb
test
push
pop
or
mov
and
sub
lods
and
sbb
mov
push
dec
pop
cmp
mov
sub
in
push
cwtl
and
fistps
xchg
jecxz
add
jecxz
cmp
ss
or
cld
mov
cmpsb
mov
sbb
pushf
test
or
scas
pop
rolb
adc
cmp
pop
jmp
xor
mov
inc
push
icebp
cmc
jno
mov
aad
sub
sbb
out
int
pop
cmpsb
mov
pop
sub
inc
subl
jno
insb
popa
cld
mov
adc
sti
add
adc
fdivl
xor
sub
lahf
shrb
test
mov
mov
mov
mov
push
xchg
sahf
mov
mov
and
addr16
xor
fistl
int3
mov
outsb
lahf
rcrl
sti
enter
pop
or
cmpsb
pop
xor
int
out
pop
mov
xchg
enter
cmpb
jns
sub
movsb
pushf
fisubrl
mov
dec
mov
jmp
mov
popa
incb
repz
add
nop
pop
fsub
into
jle
cld
jne
jmp
cmc
xchg
inc
jmp
imul
int
add
loopne,pn
jmp
xor
mov
jge
cmpsl
jle
lds
mov
idivl
or
inc
mov
cld
lret
pop
fstpl
xchg
int
lahf
xor
mov
push
xor
ljmp
mov
fcoms
mov
mov
mov
les
call
cmpsl
cmc
mov
mov
mov
xchg
mov
sahf
fadd
xor
mov
inc
sub
inc
sub
mov
pop
jno
cwtl
ror
cmpsl
into
ret
xor
xlat
sbb
out
shll
je
jno
or
daa
xor
mov
inc
imul
fistpl
cmp
sahf
inc
mov
pop
pop
mov
dec
mov
fadds
cmpsl
sar
dec
push
movsb
mov
stos
xchg
mov
push
and
arpl
cmpsb
pushl
mov
imul
arpl
fisubrl
jae
loop
jae
mov
insb
icebp
lods
and
sub
sub
mov
jbe
std
cmp
xchg
test
mov
cmpsl
cmp
inc
outsb
es
cltd
rolb
sbb
inc
jle
stos
daa
lds
or
cmpsl
jecxz
movsl
aam
clc
es
cmpsl
or
dec
or
or
xchg
jae
sti
ret
sub
int
stc
push
negb
or
leave
dec
sahf
cmpsb
pop
hlt
mov
orl
negb
mov
or
test
test
push
lahf
daa
shr
icebp
fisttps
lds
fmull
inc
subl
fisttps
xchg
popf
mov
leave
dec
add
fisttpll
mov
jge
and
or
ds
xchg
lea
add
sahf
mov
xchg
aam
hlt
xchg
jo
sarb
in
jo
fnstenv
fdiv
or
pop
inc
insb
hlt
stc
insb
mov
or
xchg
andl
pop
insb
jge
push
nop
push
loope
call
mov
mov
pop
insb
stc
mov
shll
div
cmp
jb
iret
mov
in
lahf
pop
sbb
insl
ret
aaa
movsb
shlb
std
cmp
inc
pop
mov
je
push
and
cli
xor
cwtl
mov
and
insb
cmpsb
icebp
inc
lahf
rcrb
push
pop
jnp
repz
das
fcomps
dec
mov
outsl
pop
sti
pop
cs
xor
sub
mov
cmp
mov
data16
pop
push
into
mov
orb
jp
dec
fwait
ja
sti
lcall
and
mov
sbb
sarl
sti
ljmp
call
xchg
sub
dec
enter
mov
fstp
xor
out
push
pop
sub
jmp
lods
push
sti
dec
imul
cmc
jb
fcomi
mov
mov
sbb
jne
xchg
xchg
jno
mov
sub
ficomps
xchg
jge
mov
pop
leave
jmp
sub
cmpsl
pop
dec
cld
lods
xchg
cltd
mov
rcrb
fwait
insb
cmp
popf
leave
push
int
scas
int3
jle
loopne
xor
cmp
xchg
xor
sbb
fistpl
daa
jl
mov
cwtl
cltd
into
sub
inc
jae
jns
pop
cs
mov
pop
test
in
add
pop
ficoml
add
loopne
ss
mov
or
xor
xor
push
shll
movsb
pushf
mov
lea
mov
xlat
rorb
and
mov
popa
sub
mov
mov
imul
add
mov
sbb
mov
sbb
std
aad
loop
mov
in
dec
addl
insb
add
mov
scas
int
pop
xchg
mov
push
stc
pop
xchg
mov
xchg
inc
cmp
dec
out
fisubrl
aaa
xor
iret
cmpsb
cmp
nop
cmp
enter
push
mov
xchg
dec
inc
rcl
cmpsl
lods
adc
das
push
jmp
sub
repz
mov
aas
or
jg
fcomps
inc
xchg
inc
into
lods
pusha
sbbl
push
repz
add
bound
cld
or
addr16
and
sbb
mov
std
int
scas
pushf
ja
ret
jo
pop
lea
mov
inc
jnp
outsb
fiaddl
test
and
loopne
stc
in
dec
sbb
cmp
int
mov
lods
and
sahf
and
mov
outsl
in
push
mov
mov
test
lods
lcall
iret
lcall
jle
push
test
repz
daa
lds
mov
test
fwait
dec
stos
lret
lret
push
and
dec
lods
or
test
jae
jbe
add
adc
xchg
int
arpl
add
aaa
cmp
inc
xchg
test
enter
sub
mov
xchg
sti
lret
push
sub
ficoml
mov
stos
cmpsb
ret
mov
lods
iret
dec
jbe
adc
fidivl
pop
ret
pop
mov
mov
sub
nop
mov
xor
sbb
pop
push
or
cmc
xchg
js
orb
movsl
xchg
into
rclb
pop
nop
fucom
lcall
movsb
mov
push
dec
inc
mov
vmovntps
int3
jp
aam
lahf
pop
scas
pop
lods
lahf
xchg
sub
ret
cld
or
jbe
fldt
pop
fdivrs
mov
bound
les
push
xchg
fwait
rorl
fdivs
push
arpl
push
test
cmp
or
cmp
mov
mov
mov
pop
out
add
mov
dec
in
inc
ds
push
inc
mov
xchg
sub
mov
push
xchg
mov
vmaskmovdqu
shl
xor
adcb
retw
movsl
int3
cld
mov
and
sub
adc
sbb
push
xor
push
mov
or
outsb
dec
cmpsb
jbe
test
fnsave
imul
mov
stos
mov
or
cmpsl
ret
push
je
popf
xor
lods
and
aas
jecxz
fcoms
lcall
cmpsb
sbb
neg
push
inc
jl
stc
das
out
cmp
dec
arpl
lds
test
cmp
sahf
bnd
add
and
rcr
jbe
stos
cmp
dec
cmpsl
push
push
packsswb
cmpsl
inc
pushf
xorb
xor
mov
inc
pop
iret
fnsave
outsb
loopne
mov
test
cltd
jo
popf
outsl
dec
movb
or
pop
pop
push
or
repz
ja
mov
arpl
xchg
jg
mulb
dec
cmc
rolb
jmp
mov
xchg
test
xor
cmp
and
mov
adc
cli
pop
imul
jb
and
sarl
lds
ret
mov
push
jl
lods
ret
inc
adc
leave
insb
mov
jb
js
int3
loop
push
hlt
fcoml
orl
movsl
cmp
jp
outsb
sarl
jae
push
mov
sahf
pushf
scas
insl
shr
in
clc
xchg
movsl
dec
icebp
nop
pop
test
cmpsl
push
adc
out
add
xor
fsubs
inc
jg
mov
jle
xchg
sub
ret
mov
xchg
xchg
pop
sahf
scas
fdivrl
mov
mov
pop
or
xlat
adc
cmp
and
push
gs
add
mov
ficoml
lahf
fsubrl
inc
out
or
les
xchg
inc
sahf
cmpl
inc
out
push
insl
movsb
mov
xlat
cmpsl
jo
and
scas
add
fwait
movl
cs
mov
mov
mov
ret
cmp
imul
jns
mov
and
imul
inc
jmp
pop
push
ret
test
jl
addl
int
sub
xchg
bound
movl
int3
xchg
pushf
sub
cmpsl
adc
inc
xchg
cltd
xor
push
mov
cltd
daa
lds
das
sbb
sbb
fistpl
lea
xchg
mov
mov
xor
sahf
mov
scas
mov
push
faddl
push
push
leave
jne
js
test
mov
adc
dec
pop
push
sbbb
hlt
sub
or
inc
cmp
adcl
lock
xchg
mov
into
lods
sbb
test
jmp
loopne
xchg
mov
adcl
lret
push
add
xor
sahf
out
cltd
out
and
lcall
sbb
out
cwtl
add
mov
mov
out
push
nop
push
xor
xchg
clc
js
sub
adc
cwtl
fdivr
mov
xchg
mov
pop
popf
cltd
sbb
cmpsb
lds
inc
and
in
enter
sahf
push
pushf
negb
xor
sub
cwtl
lret
fistpl
jl
mov
or
lds
imul
or
sarl
mul
cmp
fdivl
push
out
dec
mov
mov
push
adc
fcmovu
pushf
mov
and
mov
fnsave
pop
dec
mulb
pop
mov
pop
lahf
cmp
pop
cmp
sbb
jmp
imul
push
pop
cwtl
cmp
insb
and
iret
shlb
jno
addr16
rcrb
push
into
leave
lods
or
cwtl
mov
pop
fcom
cmp
scas
dec
test
pop
jmp
loopne
lret
fldl
sub
xchg
add
movsb
mov
push
sub
aam
mov
push
inc
imul
arpl
pop
lea
mov
pop
in
add
ss
mov
popf
jmp
and
cs
daa
xor
sub
aam
mov
clc
sub
mov
mov
cmpsl
and
xor
xlat
ljmp
shlb
sbbb
mov
ret
mov
sahf
fstpl
xor
cli
sbb
test
lcall
test
sarl
sbb
lods
lds
or
fcomps
js
jle
push
insb
rclb
cltd
ficomps
cld
mov
in
fsubrs
repnz
ja
fs
incl
add
xchg
jmp
xchg
fmul
and
inc
add
cs
push
in
xor
dec
lods
xchg
in
outsl
int
jl
pushf
mov
and
add
xor
mov
inc
lods
icebp
lea
lods
insb
push
loopne
push
test
xlat
sahf
test
and
lahf
pop
loop
pop
jmp
inc
pop
loopne
jb
mov
jl
mov
or
inc
add
subl
dec
out
in
pushw
xchg
loopne
out
dec
lret
ret
xor
jne
ret
aaa
fwait
test
arpl
mov
sbb
cmp
mov
popf
push
lret
lcall
mov
cmp
mov
mov
pop
scas
sub
push
adc
add
test
cmp
loopne
adc
rol
enter
inc
out
or
jnp
lahf
pop
fiaddl
jecxz
lret
lods
xor
loopne
mov
mov
std
bound
stos
cld
imul
xchg
jo
sub
xlat
pop
punpcklwd
cmpsl
jecxz
into
scas
and
jno
test
lock
enter
sbb
in
inc
insb
xchg
xchg
ljmp
popf
lds
hlt
mov
xor
jmp
push
arpl
pop
movsb
movsl
inc
jg
and
sbb
sahf
jae
mov
and
ret
sbb
hlt
out
cmp
cmpsl
sub
or
mov
movsb
pop
out
cmp
jge
xchg
jo
push
adc
pop
cmp
subl
pop
into
ds
sbb
dec
ffree
out
or
push
iret
and
es
scas
jo
mov
cld
cmpsl
mov
movsb
fsubrl
std
xchg
test
out
mov
xchg
jns
jge
sub
sub
orl
mov
rorb
fcmovu
xchg
repz
cld
movsb
and
or
mov
xor
pop
jmp
ja
cmpsl
xor
pop
movsb
fsubrl
mov
lret
pusha
rcll
xorl
lret
scas
ret
loop
hlt
sbb
outsl
and
push
dec
test
jns
push
test
adc
or
lcall
outsb
into
dec
mov
aas
push
xchg
outsl
or
mov
fcmovb
data16
cli
lods
xchg
or
sarl
sub
out
xchg
fwait
dec
inc
sbb
xorb
test
shrb
leave
sbb
ret
out
sahf
xchg
icebp
and
inc
sbb
in
xchg
jbe
insl
stos
ljmp
ja
xor
insb
cmpsb
mov
lea
mov
xlat
fdivs
mov
sbb
lods
popa
sub
scas
in
cmpsl
pop
movsb
pop
dec
mov
pop
daa
outsl
or
sbb
testb
rcl
aad
lods
sti
mov
aaa
out
or
gs
das
sub
das
rorl
in
scas
push
jmp
cmp
das
rcrl
xor
ret
ret
fcomp
mov
pop
repnz
and
xchg
int
push
fimuls
push
fsubrl
add
scas
and
mov
inc
lods
pop
xor
mov
mov
fwait
adc
shl
rcll
in
leave
and
cmp
or
int3
dec
roll
inc
negl
jnp
lret
or
inc
cltd
add
xor
test
adc
nop
popf
jp
repz
test
mov
mov
fdivrs
cld
sub
arpl
lret
dec
inc
inc
sahf
imul
jne
sub
pop
pop
sbb
pop
daa
pop
or
mov
push
test
mov
mov
test
ret
jmp
lds
sub
loopne
insb
dec
mov
mov
mov
sbb
xor
aad
popf
ja
hlt
inc
mov
test
mov
push
hlt
add
mov
xor
daa
clc
and
fcomp
cmp
push
push
inc
cmp
lock
cli
cmc
test
or
lret
dec
mov
xor
mov
out
int
je
sbb
and
mov
add
outsb
movsl
lods
mov
and
stos
outsb
aam
stos
xlat
xchg
xor
sbb
mov
out
dec
lea
jo
mov
cmp
movsb
popa
test
shrl
dec
mov
cmp
lea
mov
movsb
xor
xor
sbb
out
xor
mov
fidivs
enter
xorl
int3
jbe
pop
fstpt
lret
adcl
push
adc
push
push
cmp
xchg
jmp
sub
std
lock
or
mov
cwtl
mov
mov
sub
std
xchg
rcll
pop
adc
mov
dec
xlat
sbb
data16
cmpsb
bound
movsb
dec
add
ret
notb
imull
jle
pop
jbe
jmp
in
neg
jecxz
stos
cmovp
movsb
pop
pop
sahf
lds
movsl
and
mov
jmp
cmc
out
jae
es
or
jbe
sbb
sub
fcompl
fcoms
scas
or
sub
cmpsl
lods
hlt
scas
inc
inc
and
pop
inc
les
xchg
dec
lea
push
lods
ja
lcall
mov
pmulhw
jg
lret
and
jne
jecxz
dec
jne
jbe
xor
out
pop
inc
stos
inc
xchg
lcall
sahf
repz
and
bswap
xchg
scas
cmp
xchg
jno
sbb
sub
mov
fs
daa
cwtl
mov
fwait
sahf
jo
lds
cltd
rcrl
pop
mov
xchg
fs
adc
fildl
daa
mov
lcall
mov
in
rorb
insl
cmp
imul
insb
jp
sahf
pop
popf
add
sub
loopne
push
bound
dec
pop
cmpsl
adc
adc
pop
int
mov
and
or
dec
stc
mov
xor
data16
or
seto
cwtl
hlt
lds
mov
push
pop
shrb
js
mov
lock
inc
in
in
mov
push
xchg
mov
test
aam
das
mov
int3
aam
cmp
xor
lods
sbb
jbe
push
jne
push
iret
mov
into
and
mov
push
cwtl
out
jo
orl
out
inc
ja
and
mov
push
mov
ljmp
or
sub
pushf
and
into
sahf
cs
movl
fisubrs
cld
mov
movsl
shlb
lods
cmpsl
outsb
test
pushf
and
sbb
cmpsl
pop
subb
jmp
mov
mov
icebp
loopne
daa
add
jb
jbe
ja
es
lds
mov
pop
xchg
mov
scas
and
xlat
mov
es
ja
push
inc
add
lods
fwait
aam
loop
daa
push
daa
outsl
push
imul
adc
cmp
test
add
cmp
sbb
lods
cmc
int
jge
hlt
mov
fcomps
mov
mov
jmp
cmpsl
cmc
sbb
mov
pop
inc
outsl
cmpsl
int
xchg
arpl
popw
mov
int3
inc
addb
sbb
add
outsb
rep
inc
sahf
in
daa
lds
jbe
arpl
jmp
adc
rolb
push
and
pop
imul
rcll
add
inc
push
push
mov
cmpsl
pop
insb
or
fwait
test
lds
movsb
jb
sub
fistl
adc
sbb
test
scas
incl
dec
sub
jp
dec
xchg
xchg
lods
pop
pop
sub
mov
insb
jmp
cmpsl
mov
loopne
bound
pop
xchg
or
pop
lgs
add
scas
mov
shl
cmpsb
sub
pushf
insb
test
lock
or
cmp
ss
and
scas
xor
sbb
xor
insb
mov
stos
or
and
lahf
cmp
ja
jo
sub
popa
test
out
in
repz
jmp
sbb
sub
jns
into
jp
das
ret
mov
test
out
inc
je
lods
insl
stos
les
adc
inc
inc
ret
cmp
inc
out
or
fistps
loopne
pop
ret
add
fdivr
xlat
xchg
clc
inc
scas
mov
add
or
test
cmp
ret
xchg
push
inc
xor
and
int3
inc
push
push
sub
add
mov
xchg
sbb
sub
pop
lods
clc
mov
cltd
sbb
mov
xor
push
fcmove
lds
out
inc
xor
div
xor
adc
loopne
loope
pushf
sub
push
jp
sub
or
fmuls
xchg
or
xor
int
pop
insb
cmc
hlt
orl
fsubrl
sub
pop
mov
add
aas
cmp
mov
mov
dec
sub
add
lods
mov
mov
cmp
pop
imul
or
cmp
cmpsb
popf
enter
loopne
pop
xchg
mov
dec
lret
jb
imul
jns
fmull
sub
sbb
mov
and
test
outsl
fldenv
push
int3
cltd
sbb
les
subb
pop
lods
loop
mov
inc
inc
fcomip
mov
xchg
add
add
mov
add
out
scas
scas
and
lods
inc
arpl
test
lds
subb
repnz
dec
daa
xor
loopne
loop
sbb
and
inc
mov
cmpsl
pop
in
mov
out
repz
insb
in
mov
or
push
fnstcw
mov
sub
xchg
mov
int
lds
dec
adc
cld
outsl
mov
notb
repnz
in
inc
dec
or
sarb
test
pop
or
sub
popf
mov
xchg
lret
jne
lods
cwtl
pop
in
add
ret
or
out
or
fistl
in
xchg
xchg
cltd
push
out
lret
pop
adc
pop
int3
xchg
xor
movsb
out
dec
push
imul
ficoml
pop
je
into
int
inc
into
rep
imul
sub
test
or
shrl
incl
mov
hlt
lret
icebp
sarl
sbb
jae
cs
icebp
sti
cmp
mov
mov
shlb
pop
mull
insb
cmpsl
cmc
mov
sbb
sub
in
pusha
stos
fldt
push
xor
adc
sub
mov
sbb
fldpi
test
mov
mov
xchg
xchg
mov
mov
inc
leave
jmp
loop
mov
inc
push
test
push
idivb
daa
cmp
jne
int
cmpsl
movsl
loopne
push
mov
sbb
loopne
ljmp
cmp
andl
fdivl
dec
jp
out
pusha
shr
xor
xchg
ror
add
sub
mov
dec
lcall
arpl
dec
mov
push
sbb
scas
jbe
call
shl
cmp
pop
mov
cmp
ja
mov
xchg
cmp
ss
sub
ret
push
jns
sbbb
jp
mov
aad
xor
out
cmp
ss
and
out
mov
les
xor
xchg
mov
aam
mov
xchg
xchg
subb
les
outsl
mov
push
call
xor
pushf
mov
jl
jge
inc
jbe
xchg
push
or
jmp
testl
jl
ret
pop
sti
xchg
adc
adc
mov
and
jp
mov
in
test
mov
push
or
or
out
test
xchg
lods
popa
push
mov
fisttps
inc
jl
inc
and
and
imul
xchg
push
subb
dec
gs
jns
pop
pusha
push
std
inc
mov
test
adc
sbb
inc
incl
push
xchg
ss
ret
jle
and
pop
inc
dec
add
sbb
pushf
pop
dec
lds
xor
in
cmp
sbb
jl
lahf
arpl
je
mov
push
int
sub
mov
mov
fidivs
sub
lods
scas
shl
notl
cmp
xor
outsl
or
jb
pop
push
xor
scas
stos
frstor
mov
gs
xor
jle
push
icebp
fcmovu
inc
aam
mov
stc
repz
sahf
sti
out
jbe
and
sbb
push
popa
dec
add
hlt
cwtl
cld
and
push
stc
lds
push
push
xor
push
ja
icebp
into
mov
pop
or
xor
mov
push
pop
int
repnz
and
mov
shrb
sbb
jmp
fwait
adc
repnz
jnp
push
and
jmp
ja
test
add
lds
pop
pop
xor
xchg
xlat
mov
bnd
andb
add
not
in
popf
rcr
jne
loop
mov
xchg
mov
jle
sub
mov
xor
jnp
lahf
dec
test
add
in
out
or
movb
out
sub
or
add
xor
jg
fldl
lods
out
lock
mov
sti
mov
xlat
aas
cvttps2pi
scas
lods
cmpsl
sub
in
popf
dec
xchg
mov
mov
fs
push
lds
add
aaa
push
jecxz
inc
pushf
mov
sub
add
sbb
xchg
push
out
sbb
out
jle
scas
imul
scas
push
jae
inc
hlt
fsubr
xorb
cmp
lock
lods
mov
lahf
pop
mov
add
add
fldenv
popf
das
pop
and
mov
lds
rclb
cmp
negl
hlt
dec
pop
insl
mov
and
xchg
pop
daa
scas
dec
popl
repz
jne
fcomps
cmpsb
cs
out
arpl
lahf
pop
jo
inc
idivl
xlat
arpl
and
xchg
mov
jmp
lods
lret
xchg
push
pop
daa
inc
mov
or
iret
bound
mov
das
enter
out
out
sub
lea
jmp
or
icebp
in
cmovg
std
push
fs
sbb
mov
push
pop
push
pop
push
out
mov
push
xor
pop
or
shll
rol
xor
pop
in
push
lcall
add
jg
lods
mov
or
and
sbb
adc
inc
pop
loope
cmp
repz
jb
sub
cltd
clc
cltd
scas
cmp
xchg
lods
shl
sbb
or
lds
mov
mov
mov
or
std
xchg
add
mov
or
pop
or
sub
fstpl
aad
mov
lret
dec
popa
or
adc
cmpl
xchg
jecxz
sbb
xchg
and
sbb
pop
push
mov
push
imul
sbb
sub
and
pop
cmpsl
adc
lret
jl
sbb
jns
int3
sbb
mov
iret
shrl
pop
adc
or
ja
mov
mov
ja
pop
nop
pop
mov
lcall
outsl
lea
mov
dec
mov
hlt
arpl
cli
xor
mov
loop
mov
or
mov
ret
cmpsl
and
add
add
andl
push
pop
inc
pop
adc
inc
fwait
insb
cmp
arpl
lods
lea
fwait
mov
xchg
scas
or
mov
sub
loop
jbe
mul
int
notl
idivb
cmp
lds
push
stos
popf
sahf
cmp
or
adc
sahf
mov
loop
xor
jge
cmp
rcrl
insb
or
cmp
cwtl
lods
in
ret
add
inc
ret
loopne
into
mov
ljmp
push
aaa
mov
leave
lahf
pop
push
clc
xlat
mov
sub
lahf
lods
lods
xchg
push
cmp
cmp
movsl
sub
jbe
pop
inc
sbb
jp
jb
sarb
inc
rorl
adc
addb
adc
popf
daa
pop
adc
sub
subl
inc
mov
mov
mov
sub
lret
add
mov
std
inc
pop
fistpl
push
jno
push
cmp
and
lods
cmpsw
pop
out
and
pop
sbb
push
popf
xor
out
sbb
int3
push
into
fmull
sahf
jns
in
or
in
sahf
pop
inc
and
or
and
xor
ljmp
mov
adc
ds
aaa
cmp
daa
add
mov
test
sahf
cmp
inc
sub
mov
cmpsb
lods
stos
fdiv
nop
insb
outsb
push
mov
lods
sbb
ds
mov
or
mov
cmp
jo
lods
fs
inc
xor
test
daa
push
xor
mov
dec
inc
sub
repnz
hlt
mov
inc
or
adc
lea
mov
fstpl
sahf
sub
outsl
andl
jb
repz
mov
dec
cmp
fsubl
adc
mov
lds
bound
out
pop
cwtl
mov
movsb
cmpsl
inc
adc
xchg
push
outsb
fadds
jge
test
popa
inc
lods
adcl
aad
aam
jns
in
cmp
mov
xchg
xlat
sbb
ret
inc
enter
mov
sbb
adc
in
fsubs
out
lcall
dec
mov
mov
lea
inc
and
mov
test
sar
lea
cmpsb
and
aaa
scas
mov
js
push
mov
cmp
mov
lahf
push
cld
inc
test
rorl
pop
adc
insb
pop
push
sbb
adc
cmp
or
mov
adc
xchg
mov
adc
loop
pushf
mov
mov
in
test
adc
or
in
mov
jae
sbb
mov
cmp
vxorps
in
std
push
inc
stc
loop
je
lds
sbb
xchg
in
lahf
cmpsl
imul
sbbl
dec
daa
mov
pop
add
mov
scas
pop
fstps
adc
xchg
push
lds
arpl
pop
stos
shll
sub
mov
inc
sti
add
fsubs
stc
sub
sub
cmpsl
mov
mov
scas
jge
mov
jne
cmp
jne
pushf
mov
test
mov
and
mov
pop
sbb
mov
mov
sbb
mov
in
fiaddl
movsl
cltd
lahf
mov
mov
jecxz
ljmp
xor
xor
push
stos
movsb
loopne
popf
dec
in
xchg
test
mov
rcll
cwtl
test
out
out
int
xlat
sub
mov
loop
fmull
xchg
out
int
lods
dec
push
lods
pop
in
imul
push
test
nop
hlt
loopne
mov
lret
jp
icebp
sbb
nop
nop
lock
shlb
rcrb
aad
sbb
mov
frstpm(287
mov
add
scas
int3
sti
out
inc
cmpsl
outsb
cmp
hlt
xchg
ljmp
test
mov
add
or
mov
dec
jg
cmpsl
sub
data16
out
aaa
fisubs
sbb
cmp
pop
mov
push
sbb
mov
int
scas
shr
mov
test
pop
sbb
test
fiadds
jne
cmp
repz
lds
jne
pop
or
or
xor
xor
bound
cs
xor
mov
jb
pusha
mov
into
pop
cwtl
inc
sbb
cmpsl
pop
mov
xchg
jns
dec
mov
cmpsl
imul
jmp
or
jb
pusha
call
ljmp
or
inc
mov
jecxz
outsl
or
ss
lret
jae
pop
pop
and
int3
push
pusha
push
xlat
xchg
cmp
mov
push
pop
or
divl
rcr
cwtl
xchg
movsl
lods
mov
lds
push
adc
cmc
pop
jg
sub
lods
jb
fsubrl
xor
sub
dec
scas
sub
xchg
or
inc
lcall
adc
mov
loope
fidivs
dec
lret
mov
scas
out
xlat
mov
pop
jb
cmp
nop
std
imul
stos
cmp
fistpl
addr16
movsb
test
movsb
mov
jbe
sti
shrl
out
daa
pusha
mov
mov
call
cmpsl
pop
push
mov
jbe
movsb
ljmp
stc
cmpsb
adc
pop
inc
xor
in
sub
mov
push
arpl
fistpl
jmp
loopne
xchg
adc
in
push
cmp
popf
out
adc
jge
xchg
cmp
or
insl
or
enter
add
dec
dec
dec
arpl
or
push
test
cltd
pop
and
sub
repz
in
cltd
and
and
inc
imul
mov
repnz
pop
xchg
lods
fisubs
sub
dec
cmpsl
movsb
mov
jnp
or
adc
imul
enter
test
cmp
inc
loopne
imul
xchg
sbb
int
push
outsb
pop
cmp
mulb
stos
pop
push
aad
jae
aas
adc
in
loopne
jb
in
enter
or
lods
call
loopne
pop
popa
fldl
sti
or
pop
and
shrb
out
push
mov
loope
cltd
mov
jmp
call
xchg
out
mov
inc
push
jge
sbb
push
pop
lods
dec
ret
pop
adc
icebp
pop
lods
sbb
scas
sbb
push
cltd
inc
inc
mov
mov
lea
inc
sub
adc
cs
cs
lret
lods
das
jmp
lret
push
sbb
arpl
ss
fnstenv
dec
sahf
cmp
jmp
pop
nop
int
mov
or
push
jmp
mov
mov
fstps
xchg
movsl
inc
mov
push
sbb
xor
jne
inc
sbb
mov
call
sub
mov
sub
int
sub
daa
lods
orb
sub
hlt
pop
or
icebp
scas
in
mov
aam
ja
mov
into
lret
or
scas
divb
imul
leave
mov
mov
mov
xchg
pushf
jmp
xchg
xlat
out
dec
pop
fistps
and
pop
popf
int
sub
jge
leave
and
rolb
test
lds
lods
pop
cmc
orb
fwait
mov
push
xchg
xor
aam
inc
sti
xlat
jnp
fcmovu
pop
and
xchg
ret
shrb
rcll
push
das
mov
mov
cwtl
insb
je
xchg
jge
xor
test
int
sbb
xor
push
mov
sbb
xor
imul
xor
push
daa
jno
ss
icebp
rolb
pop
sbb
mov
mov
lods
ret
lods
sub
jmp
or
push
ret
int
lahf
sub
or
jbe
jb
xchg
mov
xchg
dec
jmp
xchg
mov
outsl
loopne
ficompl
mov
and
in
or
pop
lods
mov
mov
mov
loope
movsl
out
xlat
sbb
xchg
push
jmp
cmpsl
or
sub
fwait
int
repnz
cs
lods
add
mov
mov
out
lods
cmpsl
mov
lret
xlat
rcrl
add
fildl
rcrl
enter
cs
mov
push
dec
mov
out
shrb
jb
das
and
movsl
xor
add
jno
push
mov
add
push
pcmpeqw
into
adc
hlt
adc
sub
clc
lods
cmpl
lret
sbb
jno
movsl
xorb
or
call
arpl
int3
std
and
dec
or
mov
cmpsb
mov
push
pop
xchg
mov
or
fmull
das
pop
outsb
mov
mov
mov
in
ja
and
and
mov
lods
push
sbb
mov
push
push
lea
mov
cmc
mov
in
xchg
pushf
push
push
jne
add
sbb
xor
ficomps
jmp
dec
cmp
push
sub
push
add
fisttpll
sub
shll
daa
sub
and
xchg
inc
mov
jg
mov
popf
stos
mov
mov
mov
loopne
std
test
sbb
int
sbb
loop
stos
xchg
fwait
loope
xor
popf
imul
mov
pop
sub
cmp
movsl
sub
out
xor
jbe
jb
jge
push
fcoms
int
adc
gs
imul
add
cmp
insb
push
jbe
lahf
outsb
and
imul
pushf
jbe
mov
pop
aam
xor
out
xlat
sbb
jecxz
lret
sti
mov
mov
mov
mov
mov
popf
jecxz
fdivrs
cmp
or
pusha
fcmovbe
push
push
loopne
jbe
pop
inc
sar
sbb
sub
pop
in
repz
pop
xor
mov
xchg
nop
push
sub
in
and
lret
das
pop
dec
mov
inc
inc
cmpsb
cltd
fiadds
mov
mov
mov
cmp
cmp
fs
les
mov
jb
sbb
std
icebp
cmpsl
outsl
bound
jne
pop
sub
pop
jmp
out
sub
push
js
into
mov
or
ss
in
cmp
icebp
insb
movsb
pushf
in
scas
scas
movsl
mov
test
mov
insb
sbb
mov
fsubr
ror
dec
mov
fldl2e
into
sbb
jb
pop
adc
and
ss
sbb
scas
add
pushf
xchg
daa
hlt
add
pushf
js
xchg
sbb
cltd
cmpsl
loopne
into
loopne
pop
add
in
mov
cmpsb
lret
fidivrl
into
and
outsl
xchg
xchg
leave
insb
xorb
jmp
cmp
jl
push
sub
sub
out
scas
jne
hlt
sub
ss
repz
push
push
pop
or
sbb
les
cltd
xlat
fdiv
pushf
loop
movsb
mov
pushf
cwtl
mov
sub
test
jb
shr
mov
data16
xchg
xchg
repnz
add
out
xorb
pop
test
mov
mov
push
jno
hlt
sub
je
lret
lahf
cmpxchg
mov
sbb
push
clc
pop
repz
mov
lods
movsl
pop
loopne
push
scas
aas
lcall
test
push
fmull
inc
pop
out
mov
dec
push
or
mov
ja
and
xchg
mov
pushf
or
lds
popf
out
outsb
or
andl
popa
sbb
mov
add
cs
int
adc
mov
jbe
negb
pop
cmp
fcmove
dec
test
sub
mov
testb
insb
mov
jp
mov
ja
incb
scas
mov
clc
scas
imul
inc
inc
adc
jae
push
leave
cmc
adc
ret
mulps
adc
sbb
pop
sti
pop
fs
testl
sub
leave
push
or
mov
lea
xchg
mov
mov
push
or
mov
fcoms
add
pop
mov
hlt
icebp
cmpsl
xor
adc
fcmovbe
sar
mov
mov
lcall
sbb
int
loopne
and
push
xchg
cwtl
pop
sbb
cwtl
sti
mov
scas
inc
shll
lret
cwtl
and
lods
cwtl
mov
mov
mov
ds
pop
dec
jmp
jmp
insb
add
pop
xchg
jg
imul
xor
int
sub
stos
lret
xchg
popa
dec
mov
lahf
mov
das
xor
popf
cld
mov
mov
dec
adc
daa
loopne
sar
cwtl
hlt
mov
and
dec
push
lods
jb
fst
mov
dec
dec
fisttpll
mov
out
sbbb
fcomps
or
cltd
fiadds
lea
rolb
sub
adc
mov
mov
push
cmpsb
movsb
mov
and
mov
mov
cmp
inc
aam
cmpsb
hlt
dec
lds
scas
out
xchg
out
add
ja
cld
addl
jae
popa
outsb
sub
scas
jl
pop
jns
pop
fwait
jae
outsb
push
pop
lcall
pop
into
or
in
into
pop
les
push
mov
mov
imul
xor
pop
mov
out
insl
enter
jl
mul
mov
ret
dec
insb
popa
sbb
add
mov
jno
lods
push
out
scas
push
shl
cmp
scas
pop
lcall
xlat
inc
adc
iret
mov
insb
addl
loope
jb
fmull
mov
in
fisubl
es
mov
adc
jb
cmc
movsl
cs
cwtl
push
mov
int3
mov
xchg
sti
dec
mov
jle
fisubrs
test
mov
jle
das
jbe
mov
push
addr16
dec
sub
out
mov
xchg
cmp
mov
loop
lahf
stos
cli
xchg
insb
xlat
imul
push
movsb
sbb
cmp
dec
pop
mov
les
mov
testb
pop
test
test
push
jge
and
fdivr
xchg
cmpsw
inc
cmc
or
loopne
sbb
negb
stc
jb
cmp
out
testb
cmp
sbb
je
mov
lret
in
stos
cmp
jnp
xchg
popf
pextrw
mov
lcall
sbb
fldcw
xchg
pop
pop
loopne
mov
inc
mov
cwtl
mov
lret
pop
sbbl
ja
xchg
cmp
ja
int3
push
push
cmpsl
sbb
sbb
ja
pop
sahf
in
mov
in
xlat
test
lods
addr16
fsubrs
fdivrs
rcll
cld
inc
ret
pop
push
out
repz
sub
rcr
cmp
aas
mov
jne
jb
in
loopne
add
out
mov
or
pop
push
cmpsb
in
lds
add
jbe
js
cli
pushf
repz
add
cmp
scas
mov
inc
test
ss
shlb
inc
or
sub
sbb
test
addr16
leave
cmp
jnp
daa
movsl
xchg
scas
sub
mov
mov
dec
xchg
mov
lea
inc
popa
xchg
sahf
fwait
xchg
clc
icebp
push
jae
jge
sti
add
jb
mov
sub
das
cmpsl
pop
fwait
outsb
adc
add
adc
insl
mov
in
push
in
test
dec
test
js
iret
test
daa
inc
sub
add
cmp
in
sti
xchg
hlt
jnp
in
aas
and
test
dec
int
xor
call
arpl
cwtl
jb
mov
cs
cwtl
sahf
cmp
call
inc
aaa
test
fnsave
inc
and
sbb
push
mov
mov
fldcw
scas
sbb
outsb
scas
or
push
inc
call
mov
cmpsl
cld
sahf
pop
and
xor
jne
leave
lods
enter
or
leave
stos
insb
xchg
pusha
cltd
es
sbb
cltd
out
mov
enter
mov
xchg
push
cmpsl
icebp
int
mov
pusha
xchg
cmp
mov
xchg
pop
cmp
xor
mov
push
shr
lods
xchg
neg
fisttpl
hlt
jb
negl
sub
aas
inc
fsubrp
add
lods
jnp
int3
push
inc
pop
jecxz
jbe
cwtl
push
sbb
jmp
mov
fldl
sub
lahf
ret
mov
add
loopne
sbb
mov
cmc
int
gs
pop
mov
dec
push
mov
cmp
ja
cmpsb
push
fidivs
mov
lods
and
sub
jo
jg
xchg
cmp
jnp
or
fnstsw
int
inc
loope
add
push
pop
cmc
lea
sbb
fld1
push
aam
cbtw
mov
call
jmp
scas
cld
pmuludq
int3
popa
ds
mov
mov
fistl
jno
lods
mov
negb
sahf
pop
mov
test
cwtl
loope
sbb
lods
cwtl
mov
les
and
pop
adc
mov
loop
fisttpll
xchg
mov
repnz
adcb
out
icebp
sahf
movsl
fwait
mov
sti
stos
xor
std
jnp
xchg
mov
pop
mov
adc
sbb
jb
lods
cwtl
shr
movsl
mov
mov
push
cmp
adc
mov
pop
mov
sub
dec
pop
adc
sbb
dec
movsb
shll
out
add
dec
push
mov
sub
dec
jns
mov
mov
rcll
loopne
pop
out
repnz
pop
lods
repz
pop
cwtl
cmpsl
push
ror
xlat
mov
jl
imul
repz
mov
push
cmp
jne
arpl
xchg
cld
pop
jmp
inc
dec
or
sarb
inc
sbb
lods
jge
bound
lods
insl
cmpsl
scas
jmp
cmpsb
inc
sub
out
das
dec
and
cmovo
incl
pop
adc
xchg
stos
add
push
pop
lds
pop
or
insb
dec
push
dec
sub
mov
jne
dec
mov
sub
mov
cmp
xlat
movsl
ja
and
cld
cs
daa
in
xor
ss
dec
das
cwtl
sbb
jb
loop
pop
arpl
imul
push
fidivs
iret
xorl
data16
cmpsb
mov
mov
add
and
lcall
sub
sarb
int3
xorb
sbb
xor
stos
in
pop
push
ss
sbb
mov
xchg
xchg
daa
loop
sub
lahf
fidivl
movsl
adc
sbb
ja
pop
jecxz
fcompl
ja
mov
out
or
mov
lahf
aaa
stos
lret
outsb
pushf
xchg
cltd
pushfw
jmp
loop
pop
mov
pop
push
mov
in
mov
sarl
repz
shlb
jmp
dec
jge
in
xor
mov
outsb
mov
inc
arpl
and
fisubrs
stos
xchg
daa
lods
inc
out
xchg
xchg
addr16
inc
mov
fsubr
xchg
iret
jae
cld
xor
stc
lea
xor
mov
mov
scas
adc
scas
fisubrl
dec
insb
lret
jnp
andl
adc
out
pop
test
lret
mov
test
lret
jb
push
pop
xchg
jns
in
add
lcall
fisttpl
rep
mov
mov
pop
fsubl
int
push
call
incl
cs
sbb
gs
fwait
cltd
xlat
lds
lcall
push
popf
add
data16
das
daa
jecxz
pop
ljmp
or
leave
das
pop
pusha
jns
and
movsb
push
lcall
mov
cs
jecxz
jl
mov
nop
xlat
rcr
ret
fsubrs
xchg
addr16
mov
sub
pop
fwait
loopne
lret
sahf
pop
movsb
pushf
imul
nop
int
test
jnp
mov
lods
xchg
icebp
cmc
mov
aas
mov
push
das
dec
dec
add
stos
shlb
pop
xorl
mov
jl
icebp
call
jns
inc
popf
jbe
fwait
insb
push
cmp
pop
imul
repz
out
fwait
jecxz
pushf
addb
add
sti
in
repz
or
mov
rcrb
mov
add
mov
fwait
push
mov
pop
sub
fsubr
jb
dec
inc
pushf
mov
dec
or
pop
jl
das
movsl
jo
hlt
adc
pop
je
fbstp
pop
repz
cmp
in
mov
and
add
mov
add
lret
out
xor
lcall
jo
in
mov
fisubl
aad
sub
ret
mov
in
cmpsl
fsubrs
push
adcl
jge
sbb
mov
jns
cli
ret
jge
pop
sbb
mov
push
xchg
sub
mov
int
ret
shll
cs
sti
inc
aad
xchg
push
daa
sbb
notb
lea
sub
jp
and
lods
xchg
jle
mov
pop
scas
xchg
scas
popf
stos
jge
mov
xor
fsubrl
jo
mov
outsb
jmp
pop
pop
cmp
and
sbb
fbstp
xchg
sbb
not
ret
sahf
addl
jmp
or
mov
addr16
xor
test
lret
out
mov
mov
jmp
sbb
nop
test
sub
leave
daa
dec
loop
sub
pop
loop
xorl
imul
inc
je
jl
outsb
and
out
imul
out
aas
mov
in
sub
xchg
out
daa
mov
push
and
and
insl
imul
ret
sub
pop
enter
leave
std
mov
sub
pop
xchg
push
push
cmc
enter
insb
aad
mov
dec
xchg
sbb
sbb
push
inc
inc
pop
in
mov
sbbb
jo
cli
in
hlt
les
lahf
in
mov
stc
and
mov
cmp
out
dec
add
int3
ljmp
pop
pusha
test
ss
sbb
sub
pop
and
jg
sub
pop
sub
es
pop
iret
xor
pop
mov
scas
insb
and
int
pop
pop
sbb
dec
pushaw
mov
jb
jbe
imul
stos
mov
je
hlt
fiaddl
jmp
push
push
push
lods
rcrb
pusha
cmpsl
pop
pop
xchg
mov
mov
nop
repz
cmpsl
jmp
sub
pop
test
mov
xchg
je
bound
jbe
sbb
mov
or
fisubs
flds
fwait
mov
sub
loopne
paddusw
mov
loopne
mov
sbb
mov
jmp
cmp
jp
cmpsl
int
mov
xchg
scas
xchg
std
mov
mov
loope
jb
loop
and
pop
sbb
fwait
sub
or
lahf
xchg
ret
sbb
xchg
ss
mov
cmc
push
cmpsl
je
cmpsl
lods
jp
in
push
pushf
xor
mov
mov
jo
rclb
pop
mov
outsl
mov
mov
loop
out
and
sub
fwait
ss
xchg
cmpsl
cmpsl
push
clc
cltd
sbb
sub
ret
pop
pop
xchg
cwtl
or
out
push
scas
test
adc
insb
pop
cmpsl
hlt
outsl
dec
aas
adc
mov
inc
cli
cmpsl
mov
in
sti
push
cmpl
hlt
inc
push
and
out
inc
das
xor
mov
sub
cmp
cli
cmpsl
lds
fstl
mov
mov
stos
daa
mov
dec
mov
and
fs
cltd
jmp
das
pop
mov
sbb
xchg
adc
je
lods
push
lds
adc
scas
lds
cwtl
push
xchg
or
daa
into
xchg
cld
sbb
pushf
out
frstor
pop
jg
push
mov
scas
or
add
lahf
mov
push
fdivs
mov
push
repz
mov
mov
lds
ljmp
popf
lods
call
movsb
fisubl
aas
mov
bnd
lcall
rcrb
sub
mov
aam
dec
scas
out
xor
sbb
xchg
popf
int3
dec
cli
loopne
pop
pop
mov
cmpl
mov
out
xor
pop
fisubrs
into
fiaddl
in
sub
lds
shrb
pop
into
test
arpl
dec
mov
pop
imulb
pusha
sub
loop
mov
int
iret
stos
inc
scas
xor
mov
sahf
xchg
xchg
popa
sub
sbb
mov
inc
scas
push
cmpsl
xchg
pop
mov
lock
loop
fiaddl
loope
fsubrl
cs
pop
inc
add
aaa
movsb
sarb
daa
ds
mov
push
push
daa
xor
loopne
mov
lds
sbb
sbb
push
out
add
xchg
test
dec
xor
mov
mov
add
mov
mov
xor
mov
and
in
push
hlt
push
mov
cmp
mov
int3
mov
or
lret
mov
and
adc
xor
inc
xor
xlat
loopne
rorl
repnz
xchg
outsl
fldl
push
cmpsl
repnz
xchg
mov
sbb
and
pop
xchg
jg
ja
ja
add
xor
std
arpl
gs
orl
inc
daa
imul
dec
int3
test
and
ret
arpl
fcompl
pushf
push
cmpsl
dec
xchg
xchg
js
subl
pop
sub
jae
rcrl
test
adc
nop
sbb
stos
add
stos
mov
nop
cmpsb
and
jmp
imul
hlt
dec
jl
out
xchg
push
cmp
gs
cs
fcoms
xchg
mov
into
fmull
cmp
inc
aam
in
xor
stos
scas
imul
call
test
pushf
inc
push
mov
test
movzwl
mov
sbb
fidivrs
shll
mov
dec
jbe
clc
and
jmp
stos
hlt
sub
jmp
mov
je
push
mov
fstl
iret
je
sbb
inc
fadd
inc
les
mov
mov
bound
fdivrs
in
sbb
pop
xlat
cmpsl
test
dec
imul
mov
push
jecxz
cmpsb
popf
inc
fdiv
stc
cmp
pop
sub
mov
hlt
subb
lods
jb
lds
iret
or
cmp
mov
jae
int
pop
std
pop
pop
cmpsl
lret
mov
ud0
adc
fdivs
imul
jmp
lcall
cmp
xchg
adc
mov
popf
leave
ja
xchg
cmp
jle
lods
outsb
mov
jne
dec
aad
mov
push
xlat
je
test
mov
outsl
pop
pop
cs
cmpb
xchg
adc
repnz
mov
jo
lods
sbb
and
xchg
lret
ds
fstps
js
insl
or
mov
in
scas
outsl
push
fistps
scas
cwtl
repz
mov
dec
daa
in
es
xor
lods
xor
pop
xchg
outsb
lcall
cwtl
or
pop
daa
cmpl
std
push
int
mov
inc
mov
daa
push
icebp
mov
push
xlat
push
mov
sub
xor
pop
in
daa
jmp
insb
shrl
enter
inc
inc
sub
lea
cmp
mov
stos
test
lds
lea
push
mov
test
sbb
repz
sti
push
dec
sub
lds
sub
pop
les
outsl
mov
outsl
lds
test
lds
out
lds
shrb
mov
push
xchg
test
xchg
or
cmpsl
mov
push
mov
mov
in
sahf
lds
mov
mov
mov
icebp
mov
mov
lds
test
dec
sub
lds
jmp
lds
mov
sbb
repz
sub
pop
in
mov
pop
out
movsl
sbb
out
jge
out
fwait
dec
sahf
jmp
sbb
push
aaa
sub
push
mov
jo
adc
scas
jmp
lods
mov
lds
cs
scas
lds
mov
sbb
sbb
xchg
test
sbb
xchg
mov
sbb
xchg
jbe
rcrl
xchg
xor
xchg
cmc
lds
push
xchg
mov
jge
push
xchg
jne
push
sbb
xor
dec
sbb
hlt
mov
mov
sahf
push
mov
je
lds
dec
mov
lds
cmp
scas
fst
mov
test
mov
aam
cmp
push
lds
sub
xchg
sub
xchg
sub
sarb
lods
sub
inc
xchg
ss
pop
sbb
dec
and
or
leave
sub
jl
inc
sub
and
xor
mov
pushf
fwait
hlt
fsubrs
lock
mov
pop
ss
xor
mov
or
lahf
scas
mov
or
cmpsl
sub
add
xor
scas
dec
cmpsl
mov
push
mov
lods
cmpsl
cltd
and
cltd
pop
xor
cltd
es
cltd
and
push
ret
in
mov
call
cmpsl
xchg
and
int3
cmpsl
je
xchg
sbb
loopne
je
xchg
sbb
in
out
sub
sbb
cmpsl
pop
nop
cmp
mov
mov
mov
cmpsl
lret
sbb
es
xor
mov
mov
in
fwait
enter
sub
sahf
cmp
mov
cmp
mov
das
stc
popf
cmpsl
leave
xchg
out
popf
push
aam
scas
lret
into
lea
mov
xor
lcall
inc
inc
imul
pop
sub
inc
movsb
pop
int
data16
mov
enter
scas
cmp
test
xchg
fmull
scas
dec
outsb
jne
mov
sbb
or
sar
xlat
ja
pop
pop
cmp
cmpl
popf
sub
pop
rcll
sarb
mov
sbb
pop
xchg
stos
mov
mov
sti
push
in
xchg
inc
xor
inc
into
nop
sbb
orb
xor
jbe
imul
pop
out
ljmp
imulb
imulb
cli
hlt
xchg
enter
shl
test
adc
adc
xor
jnp
jecxz
rorl
sbbl
mov
popa
fcomps
pop
ficoml
sbb
xchg
mov
lds
push
dec
cltd
pop
and
add
pushf
outsl
push
sti
imul
push
imul
data16
sbb
fdivr
cli
cmp
test
adc
fwait
mov
sbb
inc
aam
cmp
inc
in
mov
push
adc
outsb
stos
dec
cmpb
pop
mov
push
xor
jb
mov
pop
xor
sahf
inc
dec
xor
pop
xor
call
out
mov
bound
movsb
jmp
sub
dec
lret
jae
mov
xchg
jo
lea
mov
sub
inc
aad
dec
das
adc
xchg
loope
xchg
mov
inc
cmpsl
adc
movsb
xchg
jecxz
inc
add
outsl
jmp
jl
pop
jb
dec
pop
push
incb
cmp
rcrb
push
mov
mov
dec
and
mov
lret
fdivl
sub
orl
xor
push
hlt
fidivs
or
stos
sub
mov
iret
dec
test
test
out
adc
cmp
in
jbe
inc
sub
xor
inc
cmp
insl
sub
mov
loop
add
aam
imull
ja
mov
notl
sbb
lods
in
or
cmp
add
mov
adc
sbb
inc
lret
sub
dec
pop
insb
rorl
scas
mov
and
cwtl
add
inc
loopne
ret
push
mov
in
roll
arpl
pop
lcall
add
aaa
mov
iret
pop
aam
sti
pop
test
in
jbe
lret
subl
jmp
and
xchg
cmpsb
arpl
outsb
push
cmpsl
popf
aam
test
aam
inc
mov
pop
out
in
adc
inc
pop
unpckhps
xchg
out
sbb
or
cwtl
mov
sbb
mov
sti
cwtl
iret
sbb
fldl
xchg
cmp
outsl
dec
cmp
popf
mov
arpl
sbb
dec
pop
adc
fldenv
pop
and
jae
mov
xchg
adc
mov
add
or
push
vpmaddwd
jmp
pop
call
and
inc
mov
cld
mov
fcompl
out
fcmovne
call
jb
xchg
loop
lock
rcll
push
hlt
scas
sub
iret
in
jbe,pt
sub
sub
mov
je
pushf
pop
out
setnp
sbb
sbb
shrl
std
pop
popf
adc
xor
aas
push
pop
pop
jmp
out
lahf
sub
out
mov
ss
xlat
adc
popa
scas
lahf
imul
rcll
shlb
mov
add
outsb
mov
inc
push
push
mov
addb
lods
fstp
cltd
in
scas
xchg
pushl
jo
fstpl
mov
fwait
das
into
stos
icebp
mov
jl
jbe
aad
imul
mov
fdivrl
sbbl
in
sub
and
jmp
jmp
call
out
xor
idivl
arpl
mull
mov
cmp
pop
aam
or
shlb
mov
mov
lahf
xor
dec
sbb
sub
lret
dec
lods
sbb
add
insl
xchg
pushf
out
xchg
mov
or
idiv
pop
cmp
sbb
scas
fst
outsb
mov
lods
dec
movsb
sahf
push
cmpsb
lret
sbb
pop
shll
icebp
sub
lods
cltd
lods
or
sub
stos
lods
jge
push
push
es
mov
loope
and
lcall
popa
inc
cmpl
xchg
inc
xor
or
cli
iret
mov
outsb
pushf
cmp
stos
and
sbb
sbb
push
hlt
push
loope
xchg
ret
test
inc
ffree
or
call
lahf
fdiv
mov
pop
sbb
arpl
fadd
out
mov
pusha
push
sub
xchg
lea
sbb
lcall
stos
add
sub
stos
mov
mov
push
xchg
arpl
fdivrp
cmp
and
push
add
cmpsl
xchg
add
popf
stos
sbb
xchg
and
mov
mov
fsubl
ret
imul
clc
adc
sbbl
lahf
ds
sub
loopne
inc
inc
cmpsl
outsb
out
ss
shrl
lods
sub
push
xor
mov
ljmp
repz
pusha
xor
cmc
repz
and
mov
out
sbb
mov
push
xchg
adc
mov
in
push
mov
xchg
dec
in
jo
rcl
jne
pop
push
in
aaa
or
sbbb
js
mov
outsb
xlat
pop
lods
fisubl
mov
cltd
or
adc
xor
cwtl
cli
shlb
sbb
inc
lds
mov
sarl
dec
mov
lea
leave
jl
addr16
mov
push
jns
in
sbb
mov
inc
xchg
mov
int
sub
adc
sbb
jo
lret
dec
in
add
push
fstpl
movl
push
mov
repz
mov
ja
sub
ja
mov
sub
movsl
inc
jmp
scas
mov
call
cmp
push
into
pop
dec
and
mov
scas
test
ss
sbb
mov
scas
scas
mov
mov
lds
imul
cwtl
sub
cltd
sbb
jge
push
lcall
dec
fistpl
daa
repnz
sub
jl
in
sub
ret
and
sub
in
shl
ret
arpl
ret
int3
add
inc
or
aad
cmp
adc
xlat
and
scas
jns
outsb
pop
rcrl
sti
pop
jg
sbb
mov
mov
mov
cmpsb
stos
iret
ret
xchg
das
mov
scas
mov
lahf
fwait
mov
scas
pusha
lret
mov
mov
mov
mov
test
test
dec
jge
popa
mov
rcl
mov
xlat
mov
fucom
xor
mov
icebp
sbb
mov
pop
ja
xchg
sbb
ljmp
and
int
push
or
stos
rclb
cmpb
pop
sub
and
sub
in
xchg
jo
test
and
fstps
jmp
insb
lea
lds
pusha
mov
mov
jne
mov
push
rcrb
es
xor
daa
mov
mov
push
jne
sub
movsb
fwait
jl
mov
sub
or
cmpsl
out
into
xlat
scas
pop
pop
xchg
xor
test
dec
mov
mov
jl
cmpsl
out
aam
add
ss
pop
jp
fsubl
sub
in
mov
icebp
sbb
mov
cltd
subl
mov
xchg
mov
xchg
dec
add
sbb
inc
lret
fisubrs
pop
jp
xchg
or
sub
test
bound
mov
cmpsl
pop
cmp
aad
or
and
loope
scas
add
pusha
mov
push
cltd
cmpsl
dec
lods
or
and
cltd
fsubrl
inc
fdivs
mov
icebp
dec
cmpsl
scas
mov
mov
dec
cmp
lock
pop
xor
inc
inc
jg
pop
xchg
ret
xchg
sbbl
jne
add
daa
sbb
out
fildl
inc
lock
sub
leave
loopne
aaa
or
xlat
out
clc
cmpsl
pop
outsl
jecxz
jmp
popa
jg
jmp
inc
sbb
jmp
mov
add
mov
push
push
xchg
rcpps
jge
push
mov
test
outsb
mov
mov
js
movsb
jge
popa
mov
sbb
mov
push
xor
jg
inc
mov
ret
mov
mov
scas
adc
push
xchg
mov
xchg
ljmp
lds
mov
dec
and
outsl
jne
xlat
pop
popf
pop
dec
xor
addb
push
sbb
dec
cmp
in
sahf
mov
inc
cld
adc
push
or
fdiv
lods
cs
sub
xor
jge
pop
xchg
and
mov
sub
push
in
push
mov
ret
xor
and
cwtl
test
inc
sbb
pop
sbb
cld
daa
mov
ret
rolb
sbb
push
dec
popf
sti
test
cmpsl
and
out
pop
fdivs
or
and
cmp
icebp
jbe
aam
sub
jne
mov
sbb
cld
mov
in
icebp
ja
cmp
ja
into
adc
bound
int
sub
jns
mov
jle
pop
shll
aaa
pop
shlb
mov
arpl
lea
dec
pushf
out
mov
sub
gs
mov
add
je
mov
sub
xor
movsl
enter
out
push
test
mov
jp
sbb
mov
loop
jge
or
imul
pop
sbb
into
mov
int
cmpsb
insb
pop
jnp
lahf
mov
jecxz
inc
mov
jne
push
dec
mov
and
and
sbb
or
scas
jg
lods
xchg
jae
int3
jo
imul
cmpsl
mov
aad
adc
loopne
or
mov
xor
in
in
mov
jne
movsl
int
sub
xchg
cmpsb
jecxz
jle
push
mov
jae
in
mov
adc
ds
jg
jl
adc
outsb
sti
daa
test
in
mov
ror
loopne
fmull
xchg
scas
pop
adc
or
fwait
or
movsl
loope
push
pop
cmp
sbb
jb
mov
dec
daa
mov
pushf
test
pop
or
shll
sbb
dec
push
ret
pop
mov
mov
mov
stc
adc
popa
leave
gs
subl
int
xor
sbb
test
fisttps
mov
rcrb
int
lds
inc
pop
cmp
in
repz
std
inc
pop
aas
jae
mov
out
push
push
sub
out
lahf
jns
rcrb
or
mov
sub
outsb
jns
test
popf
inc
pop
std
cmpsb
mov
dec
les
jne
adc
jbe
cwtl
jo
pop
aas
adc
in
mov
pop
pushf
insl
push
outsb
push
lods
lcall
rclb
insb
pop
lds
sarb
loop
push
cld
lahf
ds
insb
outsl
out
cmpsl
mov
call
dec
mov
mov
mov
jns
shr
add
inc
mov
lea
mov
xlat
lods
mov
cvtps2pd
lods
mov
mov
mov
into
mov
adc
repz
and
inc
ljmp
xlat
repnz
inc
pop
push
dec
jmp
scas
or
push
cld
in
pop
into
add
xorb
dec
sbbl
inc
lds
lahf
lods
fsubs
mov
test
je
dec
jge
mov
pop
call
dec
mov
outsb
je
xchg
lods
repz
fwait
inc
sbb
sub
rcr
scas
dec
cmp
mov
sbb
adc
out
xchg
sahf
lods
int3
lods
or
lea
dec
mov
mov
xor
and
lods
mov
xchg
cli
cwtl
mov
mov
das
aad
jg
mov
imul
insb
pushf
in
into
lods
test
stos
icebp
mov
iret
mov
aas
cmc
lods
mov
xchg
jnp
jns
popf
xor
mov
fwait
and
in
lds
xchg
push
imulb
lret
push
cwtl
cli
sahf
rol
pop
rcrb
in
test
mov
xlat
sub
jecxz
mov
hlt
cltd
mov
xlat
mov
sub
pop
mov
fidivl
out
test
cmpsl
mov
insb
aaa
add
xchg
fmul
scas
inc
popf
ljmp
fbld
lea
popf
scas
cwtl
mov
dec
scas
mov
sbb
adc
lea
scas
xlat
mov
dec
push
popf
test
or
imul
pop
scas
popf
pop
sbb
rcrb
mov
aam
gs
int
movsl
cltd
and
icebp
shrl
xor
imul
sahf
pop
dec
cltd
stos
or
push
xlat
test
xchg
lret
pop
sti
pop
lret
add
jae
ret
test
push
test
push
cwtl
sub
bound
adc
xor
dec
dec
jae
cs
cmpsl
call
pop
clc
xlat
sbb
popf
insl
adcb
movq
stc
cld
hlt
add
imul
xchg
push
clc
dec
out
insl
arpl
jne
xchg
in
lds
popf
mov
cmpsl
movsb
mov
cmpsl
cmc
or
imull
mov
inc
pop
xchg
xchg
xchg
inc
pop
jmp
idiv
inc
sub
push
xchg
and
or
aad
sbb
popa
mov
cmp
pop
insb
mov
aas
sub
sahf
inc
arpl
push
push
hlt
subl
lea
jge
or
and
fistps
mov
lods
jns
cmp
lcall
ljmp
cmpsb
pop
mov
pop
jmp
pop
xchg
fs
shlb
fstps
lods
and
mov
dec
or
sub
aad
and
repnz
inc
mov
popf
add
xlat
mov
xor
inc
leave
std
push
lret
enter
xor
sahf
sub
mov
pop
loope
sub
jl
call
xchg
mov
fxch
push
push
xchg
movsb
or
jmp
loopne
xor
sub
xor
pop
das
jo
jbe
andb
aas
sahf
fwait
insb
jle
test
rol
jbe
shr
mov
push
cltd
jmp
jnp
iret
push
jb
das
pop
xchg
pop
es
and
into
dec
xor
ljmp
dec
jge
stos
mov
int3
mov
mov
cmpsl
cld
lods
mov
pop
test
pop
pop
enter
mov
cs
imul
jg
push
and
fwait
sbb
and
in
out
inc
pop
push
add
int
lods
mov
and
sub
mov
outsb
pop
cmp
mov
mov
fidivs
std
fwait
xor
xchg
xchg
dec
sbb
xchg
lret
cmpsb
adc
pusha
push
negb
int3
push
cmp
jo
xchg
adc
jb
xchg
push
mov
lds
cmp
sbb
aas
rcll
popf
sahf
inc
out
call
ds
das
stos
dec
pop
outsl
push
out
out
push
and
nop
sub
in
out
iret
inc
jbe
les
imul
cli
inc
push
loop
loope
scas
filds
out
pop
add
lds
imul
nop
sub
test
aaa
mov
shlb
mov
mov
pushf
mov
jno
xchg
les
lahf
sbb
or
mov
cmp
pop
out
loope
scas
in
bound
pop
mov
sub
mov
or
dec
cwtl
stos
adc
rcl
mov
xchg
push
xor
ljmp
cmp
rcll
pop
call
inc
daa
push
adc
mov
pop
xlat
cmp
ds
or
and
push
mov
cwtl
ss
rcll
hlt
fldenv
xor
pop
sub
cs
add
int
loopne
sub
push
enter
mov
cmpsb
call
mov
outsl
push
inc
jo
mov
leave
stos
sahf
jmp
insl
mov
and
lret
mov
lea
push
push
out
mov
fs
sbb
or
push
or
lea
rcrb
mov
lea
mov
mov
gs
iret
lret
xchg
js
das
and
or
and
scas
mov
repz
sahf
xchg
das
int
enter
out
sbb
sub
imul
pushf
mov
mov
lcall
xchg
dec
mov
int
cmp
movsl
pop
out
mov
mov
jge
ja
sbb
mov
or
lret
ja
cs
sub
icebp
jp
fsubrp
idivl
mov
fs
pop
mov
popf
jnp
cld
fcmovne
stos
lds
loope
ficompl
sbb
sbb
shl
inc
cmpsl
imul
movsb
xchg
mov
xchg
pop
jae
test
rol
pmaxsw
mov
pop
leave
mov
std
stc
pop
call
movsb
and
inc
stos
call
and
pop
shlb
fmulp
leave
int
clc
add
lds
and
lds
fwait
cmp
out
mov
mov
inc
pop
mov
push
mov
shrl
nop
sub
or
push
cmpsl
lds
pop
mov
outsb
mov
xchg
push
int3
movsb
jmp
insl
cmpsb
cld
movsl
leave
cmp
insl
je
test
stos
int
iret
inc
je
mov
orl
sbb
bsr
xchg
or
insl
pop
or
cmc
mov
lds
mov
sub
jecxz
lds
xor
test
add
and
rolb
cmpsl
inc
and
inc
push
cmp
dec
int3
and
popa
movsb
testl
mov
mov
xchg
jno
cmp
cmp
mov
hlt
dec
jge
cmp
jo
fcoml
mov
cld
and
or
and
mov
aas
inc
mov
ljmp
aas
test
cmc
inc
test
test
fwait
insb
lcall
js
popf
clc
test
mov
xorl
cmp
sub
pop
rcll
xchg
test
push
mov
jle
mov
lds
sarb
mov
les
into
popf
inc
das
pop
ret
jno
rorb
mov
repz
mov
jbe
jnp
xor
or
xchg
daa
cmp
mov
jbe
inc
jg
add
mov
aaa
push
mov
pop
mov
xchg
sub
cmpsl
add
and
clc
and
cltd
push
nop
mov
xorl
mov
sbb
mov
sbb
mov
mov
jb
test
cmpsb
clc
mov
inc
fxch
popf
mov
mov
pop
hlt
imul
pop
fwait
mov
sahf
mov
mov
pop
cwtl
adc
push
xchg
daa
mov
cmp
mov
lea
cs
inc
pop
les
jmp
and
into
mov
fisttpll
mov
ret
mov
mov
push
icebp
push
outsl
adc
xchg
pop
adc
sahf
pushf
ds
push
loopne
movsl
hlt
lods
loopne
push
cmp
pop
xchg
insl
les
mov
andb
sub
sbb
das
fcmovbe
push
mov
add
clc
ror
into
ja
xchg
cld
scas
mov
fwait
lds
popf
fdivl
push
das
and
jp
in
cwtl
lcall
xor
sub
and
mov
and
aam
enter
mov
or
or
in
lea
pmovmskb
test
sbb
push
arpl
call
and
dec
add
das
scas
out
jmp
ret
push
jge
pop
in
loop
jbe
loop
insl
adc
jno
shl
inc
cmp
dec
sahf
mov
movsl
xchg
scas
mov
jmp
int
mov
fwait
pop
lds
mov
pushf
sub
mov
jle
into
js
pushf
xor
sub
and
lret
xor
and
pushf
sub
test
xor
scas
fdivrs
popa
hlt
aad
cmpsl
sbb
int
fcomps
repnz
fs
and
pop
sbb
fwait
xlat
pop
mov
lea
push
inc
inc
es
shll
sub
mov
mov
mov
sbb
push
xchg
out
pop
std
mov
add
mov
setl
sub
sbb
jne
pushf
pop
mov
sub
lods
pop
cmpsl
jle
insb
add
fsubrl
xchg
cli
mov
jbe
out
add
fdivs
mov
lret
pop
jne
pop
cmp
test
fidivrs
iret
xchg
lds
jo
loopne
roll
mov
fistpll
mov
sarl
jne
mov
mov
mov
enter
sahf
test
movsb
int3
fwait
stos
push
xor
stos
cmpsl
xchg
repz
jecxz
ja
cmpsl
jg
xchg
dec
icebp
sbb
pop
xchg
adc
mov
iret
aam
jae
pop
sub
mov
and
aaa
cli
mov
lods
negb
scas
ret
dec
popf
xor
insb
loopne
jecxz
icebp
loopne
mov
addr16
sbb
fimuls
mov
lods
popf
pop
lahf
add
popf
lea
mov
pop
stc
ret
cmc
sub
dec
test
or
std
jne
pushf
cmc
ss
out
add
fs
daa
add
lds
dec
scas
jb
aas
pop
sarl
daa
pop
fnstsw
pop
inc
in
outsb
adc
js
fisubl
mov
into
dec
icebp
cmpsb
enter
lods
sub
dec
mov
dec
push
jno
cmc
dec
add
mov
mov
dec
push
sbb
xor
inc
add
repz
mov
jbe
mov
cmp
fcmovne
outsl
cwtl
in
jnp
cmp
fcomps
and
inc
aaa
popa
xchg
les
push
lret
dec
je
push
push
pop
xchg
mov
pop
mov
call
mov
int3
cmpsl
nop
jle
pop
sarb
repz
sbb
test
xchg
test
dec
mov
ss
sti
sub
push
pop
lods
outsl
xor
mov
mov
sbb
xor
mov
xlat
xchg
add
shlb
and
jb
mov
aaa
ret
pmaddwd
sub
mov
imull
outsl
shlb
add
inc
into
and
popw
mov
sbb
out
lds
fcmovnu
push
inc
cmc
push
mov
popf
mov
int
xor
scas
in
loope
cltd
frstor
inc
mov
mov
int
sbb
hlt
xchg
push
mov
xlat
pop
xchg
scas
out
fldenv
push
mov
inc
loope
daa
xor
push
mov
mov
mov
xor
lret
shlb
cli
lods
lret
cmpsb
je
or
pop
in
cltd
pop
shl
js
rcrb
sahf
dec
mov
addr16
push
inc
out
dec
in
sti
mov
pop
outsl
mov
mov
inc
mov
xlat
inc
pop
and
faddp
cmc
int
nop
fcmovnu
inc
jbe
inc
cmp
adc
xchg
pop
lcall
out
lea
fisubs
lds
sub
add
mov
rcrb
cmp
daa
loopne
cmp
push
addb
insl
dec
mov
loop
lahf
jae
fdivrs
loopne
cmpsb
jmp
mov
call
outsb
xchg
fstpt
cmc
out
pop
mov
mov
lahf
sbb
push
add
test
test
lea
fwait
xchg
or
jae
cmc
enter
lahf
sub
mov
xor
jo
lcall
ja
ret
aas
cmp
popf
adc
stos
je
xchg
incb
add
cmc
cmp
popf
leave
daa
xchg
lret
lods
xchg
adc
fs
mov
out
in
mov
cltd
or
xor
fnstenv
mov
out
jg
sbb
jge
cmpsl
leave
xchg
mov
jecxz,pn
and
cmpsb
ljmp
mov
xchg
out
and
mov
int3
loop
in
scas
pushf
sbb
pushf
mov
sub
and
jg
movsb
imul
xchg
cmpsb
pop
push
xlat
stc
fidivl
xlat
inc
mov
pop
ret
mov
sarb
add
negl
mov
dec
cs
mov
jmp
push
ss
jecxz
jno
pop
repz
sub
pop
psrad
and
lods
outsl
push
sbb
sbb
stc
in
pop
jb
mov
fadds
cvtps2pd
push
fsubl
fwait
shll
mov
xchg
movsl
jmp
mov
or
lret
std
fildl
dec
in
push
test
mov
jmp
test
inc
in
xchg
rcrb
test
aad
sarb
je
jb
popf
or
mov
scas
ds
push
mov
mov
or
jl
sub
dec
out
mov
push
lods
fldcw
mov
push
sbb
call
call
call
cmp
push
sub
je
sahf
jo
mov
je
lods
out
lret
stos
lds
lahf
pop
pop
pop
xchg
mov
mov
fwait
into
orb
mov
in
sub
into
dec
and
xchg
ficoml
sarb
dec
jmp
push
pop
adc
test
stc
sub
mov
cmpsl
jne
pushf
lahf
sbb
pop
mov
ja
ficoml
pop
and
adc
add
mov
or
add
mov
lods
push
or
lret
movsb
jno
mov
mov
pop
cmp
dec
jnp
sub
xchg
xor
sbb
fistpl
jb
mov
lds
ja
add
mov
xchg
pop
xchg
in
ror
mov
pop
sub
inc
stos
cltd
mov
cwtl
lret
jge
xor
dec
ret
push
mov
sahf
jbe
mov
dec
rcll
cwtl
push
arpl
cmp
mov
push
jns
ljmp
xchg
cli
adc
push
shll
jg
pop
xchg
mov
xlat
lahf
push
xchg
shrb
pop
push
pop
xor
adc
jns
jnp
leave
jle
fistpl
dec
sbb
cmp
cltd
xchg
jecxz
xor
mov
lds
inc
mov
jecxz
enter
lahf
cld
adc
das
fdivs
das
adc
mov
fnstsw
inc
int
ja
mov
rorb
dec
mov
out
out
insb
cmp
mov
jno
pusha
pop
dec
jg
ja
popf
cmpl
adc
mov
sbb
into
es
fsubr
enter
inc
mov
insl
adc
movsb
add
sbb
psubw
pushf
js
push
pop
out
mov
fistl
pop
cmp
pop
in
add
xchg
fdivs
outsb
jo
pop
xchg
mov
lret
pop
lds
shll
cmp
mov
js
xchg
enter
loopne
xchg
add
bound
fcomps
or
xor
xor
insb
lds
push
lahf
jle
lds
out
cmpsl
cltd
pop
and
std
sbb
sarb
ret
mov
xchg
xlat
cli
lods
pusha
stos
xor
or
scas
xchg
mov
push
jb
mov
jbe
mov
test
sbb
hlt
jae
push
jne
lods
andl
mov
and
or
outsl
or
fisubrl
shll
int
mov
or
gs
mov
into
pop
add
xchg
out
adc
cltd
xchg
pop
jge
int
adc
stos
stos
movsb
inc
jns
push
call
shlb
push
cmpsb
pop
fdivrs
data16
stc
data16
bound
sbb
jne
sbb
movsb
or
lods
xchg
mov
xchg
in
sub
lcall
lds
mov
mov
test
das
int3
or
and
es
ss
mov
inc
jae
adc
dec
cmpsb
mov
fisubl
cmc
scas
jnp
jle
addr16
adc
outsb
in
push
sbb
mov
and
imul
ljmp
nop
call
jl
outsb
imul
and
xchg
lret
popf
dec
cmpsl
jb
loop
test
xchg
jmp
daa
xor
ficompl
push
adc
test
push
lds
je
fcompl
push
fdivs
pop
imul
lcall
cmp
xor
fildl
mov
clc
pop
out
out
aaa
lcall
xor
xchg
in
hlt
xor
and
mov
mov
xchg
arpl
add
mov
cmp
jle
mov
mov
in
jp
arpl
jmp
dec
inc
and
and
int3
lds
push
pushf
inc
sbb
xchg
out
loop,pn
scas
mov
icebp
cltd
std
cmp
aaa
push
add
cli
jb
ljmp
cli
pop
adc
jle
shld
push
pop
jge
cs
es
inc
in
inc
sbb
outsl
mov
dec
dec
mov
mov
push
negb
ss
jg
pushw
outsl
cmp
and
and
xor
in
dec
and
push
inc
or
pop
test
jge
push
xchg
dec
dec
in
popf
sbb
inc
mov
or
icebp
xlat
arpl
inc
inc
inc
sub
rcrb
movsl
inc
stc
cs
xchg
fisubs
test
jb
int
lahf
pusha
sbb
pop
rcl
ret
xlat
mov
xchg
cmpsl
cmp
rcll
in
stos
mov
push
lods
mov
pop
js
int
hlt
mov
loopne
lret
add
ja
xchg
ret
call
pushf
test
cli
xchg
sahf
iret
push
mov
in
mov
lods
jp
push
je
stc
xchg
repnz
out
push
fiadds
cmpsl
xchg
shll
iret
outsb
bnd
and
pop
dec
cmpsl
cmpsb
mov
stc
fisubrs
fsubp
push
decb
cmp
cmp
adc
sub
cmpsl
cltd
je
sti
lods
imul
imul
ljmp
call
xchg
test
mov
xor
mov
fimull
out
push
cli
sahf
repz
jae
xchg
popw
in
andb
push
push
mov
push
mov
int
and
inc
icebp
cs
xchg
sub
movsb
stos
xlat
mov
sbb
cmpsb
ret
mov
je
lods
add
pop
mov
cmp
push
or
sub
movsl
pop
data16
push
in
sbbl
pop
sbb
shll
jle
jnp
push
cmpsb
std
lahf
dec
jne
add
sub
sbb
xchg
push
adc
ja
pop
daa
pop
adc
mov
xor
mov
inc
jg
repz
sbb
jl
pop
xor
inc
cmp
fs
adc
or
in
mov
test
xchg
inc
iret
and
fsubr
cmp
xor
cmc
movsb
jge
mov
xor
ds
cmp
repz
arpl
mov
movsb
sub
mov
mov
add
sub
shrl
ss
pop
xchg
adc
vmovshdup
fsubrp
inc
loop
lods
jecxz
clc
add
push
pushf
arpl
ret
cmp
mov
jmp
sub
lods
jg
stc
jg
mov
cmp
mov
dec
xor
int
shrl
mov
push
pop
cltd
push
sub
mov
aam
arpl
push
pop
and
movsl
mov
orl
sub
test
push
mov
xorb
ljmp
jbe
mov
out
mov
mov
loop
inc
movsb
fwait
nop
scas
std
or
cmp
sub
lds
inc
ret
out
add
repnz
mull
push
in
push
daa
mov
cmp
test
bound
xchg
xchg
sbb
dec
inc
or
stc
test
shr
lock
xor
xchg
pop
out
push
xchg
adc
jp
sbb
cwtl
mov
data16
ds
out
shrl
add
movsl
repnz
ret
mov
sub
cltd
sub
lcall
ret
jnp
sub
mov
mov
lret
cmpsl
sub
push
pop
push
scas
outsb
sub
adc
cmp
cmp
cwtl
test
lds
xchg
daa
push
test
or
out
jmp
xchg
sbb
dec
repz
jbe
xor
xor
iret
mov
cltd
mov
cmp
mov
dec
jnp
push
test
or
pop
imul
mov
dec
jp
int
in
ficomps
jae
int3
enter
mov
ror
out
ret
sbb
sub
jp
mov
mov
loop
gs
pop
mov
add
das
xchg
xor
ja
push
stos
pop
mov
movsl
xor
cmp
leave
lods
or
movsb
cmpsb
popf
fwait
mov
outsb
xor
daa
mov
xchg
pushf
jmp
ret
pop
inc
and
popf
cli
sub
out
push
mov
sub
sub
movsb
xchg
mov
pusha
fwait
loop
ror
cmp
inc
scas
sbb
sub
mov
imull
movsb
movsb
movsl
jmp
pop
adc
incb
pop
pushl
jp
pop
cmp
xchg
lret
sti
rcl
imul
add
push
mov
sbb
int
sbb
sahf
mov
testb
xor
mov
test
xchg
mov
int
cmp
inc
andb
iret
hlt
lret
xchg
rorl
enter
or
int
sbb
lcall
sbb
aas
adc
outsb
mov
fwait
sahf
mov
mov
inc
cmp
stos
mov
out
int3
test
mov
pop
int
mov
cwtl
mov
clc
cmp
adc
je
cmp
arpl
andb
cld
sub
mov
fs
jge
mov
jo
aam
mov
fcompl
sarl
inc
movsl
divb
arpl
add
jne
sub
add
jmp
mov
int3
rcrl
insb
cmp
fisttpl
lods
inc
shll
aam
lods
jle
lds
mov
sub
or
and
pop
pop
jnp
into
fsts
int3
les
xor
stc
sbb
mov
into
pop
into
inc
cmp
jae
jmp
rolb
in
push
mov
sub
pop
jmp
xor
fdivr
fiaddl
push
movsl
mov
cld
mov
lods
data16
sub
fcomps
out
jmp
mov
fdivl
push
mov
loopne
bound
test
divb
lds
int
sub
mov
dec
xor
in
jmp
js
into
jl
data16
push
mov
xor
push
lea
cmp
scas
mov
mov
dec
inc
mov
stos
icebp
sbb
jne
push
xor
roll
lea
ss
cmp
and
and
add
cmp
aaa
or
pop
scas
cmpsb
inc
fsubrl
inc
nop
inc
insl
daa
mov
pushf
sub
pop
mov
outsl
enter
cld
adc
jo,pn
push
in
mov
or
or
inc
mov
lret
mov
push
add
sbb
pop
pop
arpl
mov
ret
lea
adc
dec
xorb
gs
aam
and
and
xchg
rol
int3
add
jae
outsb
mov
xchg
mov
sbb
shrl
jb
dec
test
das
in
mov
cmpl
cmp
lds
jns
in
push
xor
cwtl
push
je
scas
xor
ficompl
and
cmpsl
sbb
movsl
scas
and
add
aas
loopne
insl
repz
and
popf
cmpsb
xchg
cmp
adc
das
or
sub
mov
cmc
mov
sbb
sub
cmpsl
fildl
movsl
inc
daa
cld
xchg
mov
xchg
mov
mov
push
leave
insb
jmp
fldenv
negl
lret
add
ja
mov
xchg
sti
int3
test
mov
push
mov
and
into
cmp
push
jne
daa
inc
aaa
inc
lret
cli
test
and
fisubs
je
mov
cmp
add
je
inc
mov
aaa
fildl
orl
insl
xchg
outsl
or
sbb
xchg
lret
movsb
mov
xlat
out
das
pop
pop
fwait
inc
xchg
ds
inc
mov
insb
adc
lret
adc
insb
mov
js
xchg
je
lods
cmp
cmp
jl
jle
clc
negl
xchg
mov
mov
loopne
imul
xchg
mov
jb
repnz
loopne
das
sbb
sbb
and
adc
neg
in
notb
daa
pushf
xor
movsl
pusha
push
or
arpl
mov
les
idivl
or
mov
mov
inc
fisttpl
mov
out
push
decb
cli
dec
dec
adc
lds
sub
outsb
inc
popa
mov
ja
and
mov
scas
addr16
out
ss
in
xchg
mov
in
mov
arpl
hlt
shlb
in
mov
mov
stos
in
push
xorb
insl
insb
shrb
in
out
loopne
shrb
push
outsl
xchg
xor
sbb
xor
decb
ja
out
out
and
loope
aaa
lret
ja
loope
inc
sahf
add
fucom
roll
jae
cmpsb
mov
pushf
jbe
iret
mov
test
loopne
jle
out
sub
fwait
and
decb
ja
aad
enter
push
mov
out
jnp
pusha
inc
sub
shlb
add
movsl
std
ror
sub
daa
jmp
gs
lds
cltd
or
fldt
sub
aam
inc
out
popf
clc
jae
sahf
add
scas
iret
pusha
insb
jne
je
jne
mov
negb
lods
sbb
outsl
lds
sub
push
adc
sbb
mov
scas
lds
dec
xor
fisubrs
rclb
push
fcmovu
out
mov
popf
push
add
sbb
pop
mov
mov
or
test
pop
xchg
lcall
fcompl
test
mov
movsb
xchg
cmpsb
or
pop
mov
in
inc
adc
jne
out
lcall
fnstsw
add
inc
xchg
mov
and
and
pop
xchg
lods
mov
adc
sbb
sbb
xor
adc
cmp
mov
mov
lea
imul
cmpsb
insb
cli
outsb
jg
xchg
int3
rcrb
testl
repz
rcr
sub
cmpsl
push
out
or
scas
loopne
mov
adc
cli
mov
push
push
jne
popf
push
mov
jmp
decb
dec
lcall
rcrb
mov
pushf
test
sahf
mov
bound
or
xchg
mov
lods
mov
push
fistpl
inc
imul
or
arpl
add
dec
fsubr
push
dec
mov
xchg
xor
sbb
cmp
icebp
lcall
jg
loopne
jno
imul
popf
sbb
cmp
cmp
inc
xchg
or
data16
add
xchg
xor
stc
or
daa
scas
or
cwtl
fdiv
outsb
xlat
insb
jge
jecxz
and
sub
fnsave
sti
push
pop
lds
scas
inc
pop
push
dec
add
and
cwtl
mov
mov
or
enter
mov
and
sub
jbe
imul
stc
dec
das
push
mov
popf
jle
mov
into
push
into
int3
xlat
mov
inc
push
sbbl
jge
inc
loopne
pop
inc
dec
jnp
pop
fsubr
in
xchg
cwtl
insb
or
orl
fdivrs
and
jp
and
mov
nop
int3
mov
shl
add
insb
movsl
sahf
or
lret
std
xor
mov
sub
shr
loop
ret
outsb
dec
xchg
xchg
pop
leave
repnz
jp
jp
pop
xchg
mov
scas
out
pop
pushf
insl
test
cmp
dec
pop
fidivl
movsb
clc
sbb
scas
outsb
ljmp
pop
pushf
pop
lret
insb
jmp
pop
push
mov
mov
xor
test
lds
outsb
xor
xchg
dec
jecxz
mov
ss
fimuls
and
out
fimuls
std
pop
jg
repnz
adc
jo
lods
jb
and
sbb
jmp
stos
pop
cltd
pushf
lcall
mov
leave
mov
sbb
push
pop
fmull
iret
inc
lock
ret
andnps
cmp
mov
adc
dec
ret
movsb
xor
jmp
loopne
ljmp
lods
xchg
dec
and
pop
out
mov
or
neg
pushf
iret
fmuls
and
jbe
xchg
lcall
movsl
add
and
jo
cltd
mov
pop
arpl
mov
fwait
dec
and
popf
add
jbe
fnstenv
fsubrp
stos
fcomps
icebp
in
fisttps
leave
pop
mov
cmpsl
lods
pop
pushf
fwait
cmpsb
mov
es
pop
stc
repz
lods
jo
std
addl
pop
pop
sbb
repz
xlat
pop
hlt
xchg
jmp
pop
xchg
cld
jp
inc
pop
lea
movsb
stos
xchg
or
iret
js
jbe
adc
pop
roll
sub
repz
xlat
pop
mov
addr16
mov
jbe
mov
test
mov
xor
js
mov
inc
ja
mov
jmp
sti
mov
cmpsl
fstl
cmp
jp
mov
or
test
dec
pop
sti
mov
mov
jmp
shll
mov
mov
daa
shlb
sub
scas
fisttpll
sbb
lds
out
int
movsl
dec
std
push
cmp
jg
push
ss
fcmovnb
fwait
adc
xor
and
leave
adc
add
and
xchg
mov
jecxz
insb
mov
sahf
movsb
cmp
int3
pop
jge
fbstp
push
mov
repz
fistps
idivl
repz
sbb
jnp
cmpsl
and
fs
out
xor
sbb
xor
cwtl
ret
jne
mov
pop
xchg
cmp
mov
lds
leave
mov
mov
hlt
repz
in
mov
mov
dec
pop
mov
lret
rcl
out
jbe
dec
mov
dec
js
out
ret
sub
and
pop
insl
ss
cmp
aas
and
mov
jl
inc
and
jge
hlt
scas
add
daa
fwait
push
sbbl
or
and
popa
push
insb
int3
nop
movsl
mov
out
dec
cs
xchg
ljmp
adc
xor
mov
xchg
mov
add
das
je
xor
ja
sub
sti
mov
cmp
popf
rcr
ret
fidivrs
int
daa
fidivl
sub
daa
cwtl
repz
in
sub
cmp
pop
cmp
lods
xchg
lret
lret
push
lds
pop
xchg
repz
push
daa
mov
enter
rol
cmp
mov
pop
add
sbb
je
dec
fidivrs
scas
outsl
mov
xor
out
or
pop
pop
and
loop
movsl
jnp
xchg
test
sub
mov
sbb
mov
mov
dec
int3
lea
mov
repz
pop
insb
int
rcr
imul
mov
mov
js
in
pushf
js
lret
xchg
mull
lods
xchg
add
out
data16
jns
cmp
xor
imul
mov
loop
jb
pop
call
jl
ss
test
mov
xchg
push
out
push
jecxz
jb
mov
rcll
test
sbb
rcrb
push
inc
xor
jne
fdivrp
out
pushf
pop
std
push
inc
shll
lret
cli
int
jae
mov
movsl
sbb
adc
fildll
or
pop
testb
int
mov
xchg
das
out
xchg
push
add
cltd
push
inc
pop
mov
insb
pop
imul
js
jo
push
xchg
adc
push
call
jne
sub
add
aas
mov
sbb
jne
fdiv
sub
mov
pop
mov
sbb
je
fldt
mov
xor
jno
pop
loopne
mov
inc
mov
add
push
fldt
xor
sub
cld
push
lds
xor
inc
or
jo
pop
aaa
repz
in
test
call
sbb
int
push
fwait
lods
data16
sbb
test
std
xchg
pop
pop
das
pushf
daa
int
orb
stos
sub
fdivrl
into
lock
dec
jns
add
mov
or
xchg
aam
dec
into
pop
xchg
lcall
sub
push
mov
mov
daa
add
je
mov
add
inc
jp
js
stos
sbb
call
loopne
arpl
lods
mov
push
or
inc
sbb
mov
mov
insl
lea
push
lahf
int
xchg
insb
ss
pop
fstpl
pop
xor
mov
loopne
nop
jecxz
fwait
loopne
es
xchg
test
dec
mov
pop
xlat
xchg
xchg
repz
lcall
test
mov
pop
mov
leave
mov
sarl
push
int
add
jg
pop
mov
sahf
sub
mov
mov
inc
jnp
push
outsl
loopne
push
jecxz
sbb
adc
call
xchg
jb
pushf
popf
repz
lods
push
mov
push
jb
lea
xchg
outsl
cmp
sub
xchg
cmp
stc
in
out
xor
mov
test
call
rep
aad
cld
ficomps
xlat
fwait
aad
insb
lods
inc
sub
insl
outsb
jmp
lods
add
inc
call
cmpsl
negb
insl
ljmp
test
mov
pop
mov
mov
jbe
mov
xor
bound
sub
add
cmp
fists
mov
sub
pop
ja
popf
out
adc
rorb
mov
aas
outsb
stos
stc
gs
arpl
add
xchg
mov
cli
fldt
nop
adc
out
sbb
arpl
scas
pushf
fistps
or
fbstp
dec
mov
xchg
add
repnz
fadd
cmp
xor
loope
adc
call
sbb
push
in
pop
fldl
shll
into
ret
xchg
inc
or
fcompl
mov
adc
loop
pop
imul
push
push
dec
hlt
jbe
adc
dec
cmp
pop
pop
mov
cmpsl
push
idivl
mov
dec
mov
mov
adc
dec
imul
sub
push
push
or
jne
rcrl
push
inc
sbb
xchg
add
push
cmpsl
stc
add
and
mov
adc
sbb
hlt
and
iret
inc
scas
insl
mov
daa
sbb
mov
dec
fs
mov
xlat
pop
ret
sbb
cltd
or
jle
xchg
or
fstps
aas
lods
mov
cmp
push
push
pop
out
sahf
bound
out
scas
sbb
dec
mov
sbb
mov
mov
lret
mov
fsubl
nop
mov
jecxz
and
mov
jl
xchg
ss
popf
sahf
push
jl
decb
sub
inc
jne
jmp
out
stos
xlat
vmovlps
mov
add
xor
int
jle
pop
xor
xchg
push
xorl
pop
push
arpl
dec
mov
arpl
jl
cltd
dec
mov
popf
cmp
jno
fidivrl
fbstp
sub
or
jecxz
enter
jmp
push
dec
sbb
jb
inc
sub
arpl
popa
mov
bnd
dec
clc
or
push
xlat
ds
sahf
pop
sti
movsl
aam
or
sbb
popf
jmp
adc
inc
push
adc
adc
pop
adc
xchg
test
lret
lds
push
xor
mov
push
sbb
mov
inc
sbb
rcl
mov
sub
pop
pop
jmp
or
negb
mov
repz
xchg
adc
jb
aam
mov
pop
adc
or
mov
sbb
cmpsb
in
std
push
pop
int
jmp
packuswb
and
fsubrl
lret
insl
loope
mov
mov
xor
pop
test
push
sub
insl
push
dec
imul
mov
int
sbb
out
xor
jmp
lahf
mov
ja
jecxz
xchg
aas
movsl
push
mov
inc
scas
push
mov
mulb
mov
test
xchg
dec
out
xor
imul
nop
fs
lods
movsl
pop
jb
add
mov
sub
mov
jecxz
pop
sahf
or
sub
rorb
mov
mov
sub
inc
daa
imul
cmp
je
or
lcall
out
push
scas
cmpsb
sarb
and
dec
mov
adc
pop
lahf
fucom
add
int3
std
xchg
je
fsubrl
ds
xlat
xchg
pop
repnz
inc
lcall
mov
sub
inc
cwtl
mov
xor
mov
pop
adc
imul
test
lret
mov
cmp
mov
stos
fwait
pop
xlat
cmpsl
cmp
iret
sbb
mov
mov
inc
jp
inc
jne
mov
add
inc
dec
jae
sub
adc
and
sub
jle
mov
push
shlb
push
les
pop
inc
or
and
sub
push
adc
mov
enter
push
jmp
popa
push
inc
fstpl
lods
xchg
in
sub
mov
ret
adc
das
adc
test
cmp
fsubrs
mov
dec
jne
mov
mov
out
popa
mov
call
sub
fimuls
pop
push
xchg
cs
fcoms
sbb
lahf
mov
jge
mov
mov
cs
cmc
nop
or
mov
out
mov
and
addr16
or
rclb
lea
push
stos
mov
arpl
fndisi(8087
sub
cli
loop
or
push
adc
imul
sbb
daa
sti
xor
push
cmpl
xchg
aas
xor
sub
mov
inc
hlt
addr16
mov
sub
movsl
and
loope
mov
nop
xor
cmpsl
ja
cmpsl
decb
mov
mov
out
outsb
scas
and
pop
mov
pop
loope
sub
pusha
loop
push
test
and
sbb
pushf
cmpsl
mov
pop
mov
inc
lcall
fisttpl
mov
fnstcw
or
xchg
add
data16
mov
out
mov
cld
stos
and
pop
dec
fwait
loopne
icebp
pushf
mov
mov
sbb
stos
roll
inc
in
dec
push
inc
jns
bound
jb
in
mov
xchg
xchg
lahf
rdtsc
and
sbb
jg
enter
and
add
pop
mov
lds
mov
xchg
and
or
pop
decb
pop
mov
adc
pop
scas
xchg
mov
lods
sbb
fcoml
scas
outsl
cmpsl
add
adc
xchg
sbb
aam
lret
cli
cmp
cwtl
xchg
sbb
sbb
sub
sub
jo
sub
push
push
cmp
cltd
mov
loope
movsb
jmp
push
adc
movsb
cli
enter
into
sub
mov
cmp
ret
ret
hlt
sarl
call
fisttpll
in
jne
sub
mov
fldcw
push
loopne
lds
push
test
repnz
or
fstpl
cmpsl
idiv
cmovbe
lret
add
and
test
dec
lds
and
push
fwait
push
mov
ss
xchg
ror
les
lret
push
mov
push
inc
das
sub
pop
lods
xchg
test
pop
subl
int
xchg
in
movsb
or
popa
and
or
sub
push
scas
test
lock
icebp
add
pushf
pop
mov
lds
or
push
push
loop
xchg
mov
mov
hlt
add
pop
and
fsts
ds
and
xchg
mov
shlb
mov
inc
mov
test
push
pusha
int3
push
lock
outsb
lds
mov
or
daa
mov
notb
xchg
dec
andb
xchg
inc
mov
mov
mov
pop
das
lcall
fsubl
gs
push
repnz
insl
cmp
jmp
fstps
lea
jb
xchg
nop
enter
add
int3
fldl
insb
dec
mov
mov
jecxz
add
adc
lret
or
push
mov
sub
jp
mov
iret
push
test
mov
inc
test
xchg
push
fadd
repz
outsl
inc
movsl
sub
push
hlt
loopne
sub
xchg
pushf
movsl
shrb
xor
hlt
cmpsl
sti
lods
dec
mov
pop
mov
mov
push
cmp
lds
test
lods
mov
daa
jne
mov
or
sarb
or
jbe
inc
mov
adc
jo
mov
or
not
icebp
mov
clc
push
xchg
fdivl
jl
xchg
add
mov
test
push
je
jle
mov
pop
push
or
test
xor
loopne
ja
mov
imul
pop
pop
mov
jge
mov
mov
adc
imul
sbb
push
stos
cmp
pop
ret
cmp
ljmp
jnp
xchg
icebp
movsl
std
mov
scas
fcompl
jb
mulb
jnp
sub
push
in
adcb
aad
or
pop
scas
jnp
sbb
inc
mov
push
adc
and
fldcw
sti
or
mov
xor
cmpb
mov
jle
movsb
hlt
orl
fcoms
lds
push
add
cmp
jge
popa
mov
test
testb
push
lock
sbb
movsl
mov
sub
add
in
pop
outsb
sbb
jbe
aaa
jp
inc
cmp
sbb
pop
sub
cltd
mov
adc
xchg
pop
cmp
cltd
mov
stos
aaa
jmp
pop
mov
push
sbb
and
xchg
push
mov
inc
mov
call
movsb
mov
sub
pop
lcall
sub
and
dec
outsb
mov
ficoml
mov
hlt
int3
pushf
xlat
adc
mov
or
pop
imul
mov
xchg
add
ljmp
test
les
cmpsl
outsb
mov
cltd
movsl
dec
fmuls
sub
movsb
pop
push
sub
cmp
movb
mov
pop
fstp
testl
aas
mov
lret
arpl
fwait
rcll
sahf
add
mov
fisubs
cmpsl
push
loopne
sub
xor
mov
repnz
fdiv
pop
test
out
stos
sub
bound
push
andl
and
mov
push
in
jne
mov
xor
aam
daa
hlt
insl
nop
loope
adc
and
cmc
fldcw
arpl
test
jns
clc
push
outsb
stos
xchg
ret
push
cli
jp
push
mov
mov
iret
ja
orl
xchg
mov
xor
mov
or
adc
popf
in
mov
pop
xchg
arpl
outsl
or
pop
cmpsb
es
inc
mov
pop
push
je
xor
adcb
in
sub
jge
rcl
cwtl
ret
cmpsb
inc
add
or
fs
mov
imull
adc
mov
rcl
pop
dec
sahf
pop
fnsave
sub
xchg
push
mov
mov
out
out
adc
hlt
lods
cmp
xchg
cmpsl
icebp
lahf
sahf
mov
cwtl
jae
jb
fnstsw
popf
sub
stos
cli
jmp
sbb
dec
inc
dec
mov
repnz
cld
stc
mov
mov
cmp
or
mov
fs
mov
fsubs
daa
das
mul
or
push
int3
push
cmp
mov
mov
pop
sahf
pushf
jo
hlt
jne
add
jne
or
xor
mov
fcompl
es
jo
cld
popf
lret
daa
jg
arpl
mov
xor
cmpsl
mov
xchg
mov
bound
ljmp
aaa
sub
mov
mov
imul
popf
mov
fcoml
rorb
pop
add
test
test
adc
jg
daa
and
mov
and
movsb
sbb
shl
xor
inc
lahf
and
push
sbb
scas
push
pop
pop
jnp
subb
repz
int3
fwait
lds
add
mov
pop
pop
inc
std
enter
mov
and
pushf
mov
mov
sbb
lods
shlb
dec
mov
sqrtps
sub
or
fnstenv
subb
fucomip
or
hlt
sbb
std
fdivs
mov
xchg
stc
push
cmc
shll
rcrb
hlt
inc
sbb
lock
not
add
iret
mov
adc
fstpt
mov
sbb
addr16
cmpsl
and
dec
sbb
mov
sarb
insb
mov
push
mov
xchg
ficomps
dec
pushf
lcall
sub
dec
mov
mov
arpl
pop
mov
push
test
fistps
out
inc
add
jp
jns
leave
pop
loop
pop
repnz
push
mov
stos
test
xlat
fwait
bound
push
movsl
cli
pop
or
inc
pop
lret
sbb
push
lods
enter
cmc
cmp
jge
orb
sbb
inc
fmul
mov
push
sub
xchg
mov
mov
mov
cmpsl
aad
inc
cltd
dec
fists
inc
and
shl
sub
xchg
jp
imul
data16
rcrb
xorl
outsb
bound
ljmp
adc
mov
pop
xchg
movsl
cmpsl
int3
pop
mov
push
aam
mov
cmp
sahf
repnz
movsl
mov
rorb
xchg
cmp
sahf
cmp
adc
push
rcrl
test
jae
pop
pop
pop
cmp
fistl
jno
insb
adcb
int
je
sahf
js
daa
push
mov
dec
or
pop
add
jae
xor
or
or
test
jmp
jmp
jb
test
xchg
jb
sub
daa
push
pop
pop
inc
in
fchs
mov
daa
pushf
cwtl
icebp
dec
sbb
loope
xor
stos
testl
push
daa
rcr
out
lods
mov
scas
jne
mov
bound
lods
movsb
into
jae
add
out
sub
lods
scas
inc
enter
jae
incl
and
mov
lcall
and
mov
lcall
lds
mov
sti
std
andl
hlt
cmp
mov
cwtl
popf
stc
cmp
mov
out
pop
ret
std
jb
pop
aad
loop
mov
cmp
shll
ja
add
lds
scas
loopne
cmp
adc
mov
andb
ficomps
in
loopne
je
mov
mov
xchg
or
loope
mov
cli
xchg
mov
add
test
ljmp
in
push
mov
cmp
cmpsl
out
jb
cmp
lahf
jno
cmpl
rcrb
lods
xor
inc
pop
insb
cmp
xlat
xchg
mov
xchg
sub
pop
pushf
test
pop
mov
inc
sbb
sarb
xchg
shll
cmpl
mov
jmp
cmp
ja
mov
jbe
js
ja
mov
scas
stos
icebp
mov
dec
inc
inc
cmp
cmp
outsb
xor
fcoms
push
push
sub
mov
rcrl
hlt
cld
pop
test
movsl
rclb
add
xorl
mov
sbb
xchg
mov
dec
jbe
mov
aad
hlt
shrl
adc
loop
mov
test
sbb
xchg
push
pop
call
rorl
hlt
push
imull
lods
and
pop
adc
lahf
leave
pop
dec
mov
fs
scas
nop
adc
and
gs
cwtl
je
jmp
xchg
aad
jg
je
hlt
icebp
mov
dec
xchg
mov
adcb
test
out
mov
mov
cmp
lret
ss
or
or
and
fldt
outsb
mov
pop
jge
xchg
lahf
push
inc
out
jae
and
les
pop
rol
testb
and
es
xchg
aad
lds
sub
push
lret
loope
fsubr
mov
sbb
int3
xor
fcomi
pop
lds
rclb
pushf
adc
test
icebp
push
pop
mov
imul
pop
sbb
lds
enter
aad
sbb
pop
lea
int
xor
push
xchg
pop
ret
lods
mov
cmp
fnstcw
cs
jb
sbb
sub
lds
push
sub
cmpsl
sti
movsl
mov
in
lahf
outsb
fmull
int3
daa
fstps
sub
cmp
mov
jns
rep
jge
popf
pop
andb
sub
scas
or
jl
mov
pop
int3
daa
lods
xor
pusha
mov
or
loopne
stos
mov
fcomi
leave
mov
xchg
lahf
or
jl
lods
test
icebp
and
aad
xchg
inc
add
bound
gs
and
xor
jg
outsb
out
je
out
je
out
je
mov
add
lods
daa
sub
sub
daa
shr
daa
sub
daa
aas
test
add
shrb
js
jg
in
into
and
xchg
dec
jge
push
aas
repnz
ljmp
int
xor
daa
roll
cmp
push
sub
nop
lock
test
lods
mov
cmp
int3
and
inc
js
add
out
std
pop
test
call
scas
jnp
mov
out
jmp
andb
xchg
pop
pop
sahf
sti
lds
push
cli
enter
mov
or
xorl
adc
mov
out
sub
mov
jmp
popa
dec
inc
js
mov
int3
jle
mov
fs
mov
dec
fldt
add
adc
cmp
sub
popf
je
loop
les
xchg
gs
xchg
xlat
mov
insb
pop
mov
aaa
mov
ret
mov
nop
mov
add
cmpsl
sub
or
in
outsl
dec
fwait
into
aas
scas
jnp
xchg
test
jo
xorl
in
and
loopne
mov
sti
inc
insb
lds
aaa
sub
int3
inc
jnp
or
jae
and
sub
jb
mov
adc
adc
and
jle
clc
cwtl
jge
inc
hlt
add
enter
sub
in
cltd
int
add
xor
xchg
popf
out
fmull
data16
outsb
stos
pop
mov
push
sub
lods
sti
subl
test
mov
jmp
sbb
xchg
sbb
repz
jno
dec
stos
out
mov
outsb
cmpl
je
lds
xlat
insl
movsb
stos
movsb
ljmp
cwtl
inc
sub
adc
js
lea
loopne
cmp
fsub
adc
je
adc
xchg
test
test
sti
test
pushf
loopne,pt
hlt
clc
imul
mov
pop
pop
jmp
push
int3
cltd
lahf
cld
pop
loopne
add
ds
int
sbb
xchg
dec
pop
inc
sub
test
inc
xchg
pusha
pop
fdivrl
cli
sub
jge
hlt
jecxz
jmp
dec
pop
testl
jnp
jnp
int
scas
mov
test
mov
mov
cmp
int3
das
cwtl
add
mov
inc
movsb
jle
popa
ficoms
fsubrl
add
call
dec
ds
cmp
jae
out
or
mov
push
xorb
sub
arpl
loop
fidivrs
push
jmp
imul
xchg
mov
mov
sub
jae,pn
fwait
jo
sbb
shll
xchg
pop
mov
sbbl
insb
sub
vdivps
jl
mov
lds
mov
sub
cli
xchg
push
dec
push
dec
jle
jb
pop
or
insl
pop
movsb
adc
xchg
add
lock
out
adc
or
sub
lods
xor
xchg
or
int
mov
outsb
dec
sbb
ret
jl
adc
xchg
push
mov
sahf
test
sbbl
std
mov
lret
dec
sub
cwtl
out
add
shlb
imul
sbb
pop
insb
in
inc
orl
repz
add
add
pop
jecxz
xchg
insl
movsb
jl
popf
scas
push
xchg
mov
aaa
rol
push
movsb
scas
lds
inc
frstor
dec
push
xchg
inc
scas
sub
loop
lret
or
insb
sbb
nop
nop
stos
jns
clc
ja
xor
mov
push
sbb
sti
lret
sahf
mov
push
gs
loopne
xor
adc
idiv
xor
jl
outsb
outsl
into
lods
lret
es
imul
xchg
mov
test
add
xchg
mov
lcall
xlat
lods
pop
cmp
es
lods
je
insl
xchg
repz
fsubrs
push
fldl
and
mov
adc
xor
xchg
movb
jmp
xor
mov
mov
test
xlat
stc
enter
fimull
mov
mov
rorb
and
adc
popa
test
cmp
pop
adc
into
loop
mov
movsb
xchg
enter
pop
inc
pushf
movsb
cwtl
cs
jb
scas
insb
push
loop
or
xchg
pop
cmpsl
push
push
push
aas
fucomi
mov
bound
adc
repnz
cmp
in
dec
inc
pop
inc
aam
in
pop
pop
lods
xchg
jge
xchg
jmp
hlt
out
push
lods
je
fcoms
push
jne
mov
cld
xor
dec
scas
mov
cs
fwait
data16
sub
mov
mov
dec
cmpsl
icebp
cmp
int
decb
mov
jp
stos
jg
in
inc
inc
call
cld
dec
mov
loopne
adcl
mov
sti
inc
in
xlat
ret
lret
ret
shrb
lret
lea
pushf
mov
cwtl
mov
dec
out
outsb
in
outsb
scas
test
mov
fdivrs
sbb
inc
mov
leave
pop
int3
mov
cmc
movsl
sbb
fisttpll
lcall
xchg
pusha
and
adc
pop
jb
cmp
into
ror
aaa
arpl
shrl
adc
mov
xor
into
xchg
call
decl
push
loopne
in
stos
adc
outsl
rcr
loop
pop
mov
jno
mov
adc
mov
fmul
test
cmpsl
inc
add
into
dec
sub
mov
inc
add
push
mov
in
jecxz
test
arpl
push
outsl
std
mov
sbb
test
cmp
pop
cld
add
push
or
jbe
mov
mov
push
xchg
ja
bound
xchg
lods
xchg
adc
mov
xchg
add
inc
std
lea
mov
inc
mov
cwtl
popa
mov
sbb
mov
mov
push
mov
pusha
pop
loope
mov
shlb
loopne
pop
dec
jb
popf
pop
inc
rorl
fsin
lcall
pop
mov
xchg
xchg
xor
or
lahf
sbb
je
hlt
fcmove
mov
call
fsubl
pop
scas
pushl
and
and
xor
mov
xor
daa
lods
add
xor
mov
daa
rcl
loopne,pn
mov
inc
ljmp
sahf
mov
fistps
push
pop
rorl
and
xchg
add
das
movsb
xchg
js
push
leave
ret
dec
mov
aam
scas
shl
mov
dec
mov
test
lods
inc
or
sbb
daa
jmp
fwait
ret
out
mov
ljmp
sbb
enter
aam
repnz
hlt
sbb
repz
loop
push
and
mov
cltd
into
mov
add
daa
in
outsb
inc
jbe
cmpsl
lret
mov
inc
repnz
out
xchg
shrl
fucomp
pop
or
mov
cmc
pusha
icebp
jg
pop
mov
jb
sbb
xchg
mov
xchg
pop
adc
jmp
cmp
repnz
out
or
scas
mov
mov
fimull
iret
sub
pop
lcall
lock
pop
sti
test
push
in
out
rcl
iret
pop
adc
imul
cmp
sarl
mov
stos
aaa
out
adc
icebp
shr
fcompl
cltd
movsb
mov
or
xor
arpl
xchg
inc
or
cmpsl
or
lods
xchg
jmp
scas
or
jne
mov
xchg
pushf
cmpsb
sub
adc
mov
cmp
lcall
adc
aam
daa
sbb
cli
sbb
jmp
add
mov
loopne
or
xchg
ret
scas
xchg
sub
inc
unpcklps
outsb
mov
gs
outsb
test
jnp
mov
test
aaa
sub
mov
push
pop
sti
inc
mov
clc
push
je
popf
popf
xor
ret
int3
xchg
jmp
sub
dec
or
stos
subl
mov
mov
in
add
fwait
add
adc
cli
lods
outsl
push
sbb
shrl
es
je
hlt
fmuls
insb
out
stc
pop
into
xchg
and
mov
xchg
lods
adc
cmpsl
push
or
call
pop
sbb
xchg
xor
test
lods
dec
jle
popf
lret
mov
jge
add
insb
sbb
daa
sbb
les
sbb
mov
cmp
sarl
cmc
fwait
movsb
mov
repz
adc
adc
pop
mov
fnstsw
xor
pop
adc
and
fcomps
es
aaa
popf
xor
js
sbb
insb
add
lods
xchg
mov
xlat
cli
inc
enter
orl
xchg
enter
fistl
aad
hlt
add
xor
cwtl
ja
jns
dec
lret
dec
in
test
loopne
mov
fldt
xor
movsb
sbb
mov
pushf
adc
dec
push
add
lea
fsubr
xlat
lods
xor
ficoms
je
imul
xor
mov
movb
or
xchg
adc
pop
rorb
jns
imul
lahf
dec
loope
pusha
repz
push
cld
sub
xchg
pushf
jmp
bound
push
popf
mov
sbb
push
adcb
hlt
cmpsl
adcl
int
dec
das
das
cmp
das
dec
fbld
sub
ret
cmc
out
sbb
arpl
cltd
add
mov
mov
sub
inc
int
out
scas
out
xlat
fcmovnb
lea
mov
scas
mov
lods
sbb
aam
fwait
mov
push
adc
cmp
pushf
inc
int
xlat
mov
or
adc
mov
mov
shlb
test
shrl
push
sbb
mov
push
imul
sbb
pop
dec
inc
nop
aaa
lods
ds
loop
mov
pop
pop
arpl
inc
popa
pusha
cmc
add
sbb
cmp
imul
aad
add
bndldx
ret
xor
inc
insl
roll
xchg
mov
out
and
jge
or
fadd
and
addr16
lock
jge
out
jb
cltd
mov
imul
add
sub
mov
enter
inc
push
imul
xorl
aas
lcall
pop
daa
and
add
dec
pop
daa
cwtl
int
add
mov
ret
mov
adc
or
insb
mov
jnp
mov
and
daa
test
pop
popa
ja
lods
popa
sub
iret
jno
hlt
aam
xchg
mov
sub
add
fistl
mov
repz
cwtl
mov
or
pop
scas
ds
dec
int3
xor
hlt
mov
aad
push
add
xchg
fwait
mov
jnp
jns
cmp
cli
mov
dec
orb
xor
mov
int3
lea
adc
shufps
push
or
test
inc
int3
in
rcll
idivb
in
das
jns
mov
mov
lods
xchg
loop
arpl
insb
and
cmp
xorl
cmpsl
fstp
mov
jle
inc
mov
test
cltd
mov
xlat
inc
outsl
jge
fdivs
andb
outsb
jne
ret
pop
stos
outsb
into
pusha
imulb
int3
or
xlat
cltd
inc
xchg
into
fimuls
outsl
mov
or
mov
jge
out
cli
test
enter
push
inc
int
mov
mov
lea
pop
xchg
xlat
sub
stos
loope
outsb
std
mov
mov
inc
add
add
ffree
sbbb
pop
movsb
shr
rcrb
scas
push
mov
jl
xor
repnz
or
hlt
mov
lds
mov
out
lret
mov
mov
sbb
xchg
lds
mov
dec
outsl
and
addb
sub
mov
xor
dec
popf
xchg
insb
daa
in
lret
mov
sub
push
or
loop
lds
push
iret
xor
lods
fisttps
lea
push
movsb
outsb
xor
out
outsb
and
pop
cmp
inc
sbb
sbb
xchg
cwtl
push
pop
jns
popf
hlt
lahf
sbb
mov
fidivrs
sub
push
adc
insb
test
sbb
cmp
cs
mov
aad
xchg
mov
clc
pop
fucomip
das
insb
cs
int
ret
adc
insb
fldl
cmp
loopne
filds
mov
jo
mov
cmp
test
inc
adc
xor
stos
push
pop
movsl
xchg
cmp
xlat
andl
das
loopne
push
scas
and
mov
mov
test
lds
xchg
sub
cmp
or
aam
and
add
data16
adc
and
gs
lret
insb
popf
test
and
popf
sub
mov
sti
loop
xor
xchg
and
enter
jmp
lods
outsl
dec
sbb
jae
mov
movsl
xchg
insl
jecxz
insl
repz
pop
xor
and
sbb
jecxz
outsl
and
insl
lret
leave
jb
dec
out
xor
cli
or
add
mov
ljmp
mov
pop
or
or
sub
repnz
je
hlt
mov
ljmp
mov
stc
insl
mov
outsl
mov
cmp
sub
call
or
mov
mov
mov
adc
aam
out
imul
inc
lods
out
int3
xchg
xchg
xchg
xchg
pop
sbb
sub
stc
mov
fcmovne
scas
in
rol
hlt
pop
jmp
int3
fs
lds
sbb
xchg
lods
sub
or
pop
dec
mov
std
sub
jmp
stos
jmp
jb
imulb
andb
neg
inc
pop
cmc
bswap
scas
lock
in
daa
fidivrl
push
sbb
mov
pop
cs
mov
popf
adc
xorb
out
xor
pushf
dec
push
int
test
fwait
xchg
xchg
dec
adc
mov
pop
or
imul
lods
insb
pop
pop
mov
lret
jne
cwtl
mov
daa
mov
xor
cmp
dec
pop
sti
int3
xor
jae
mov
cmpsb
ficomps
shrl
mov
aad
jno
out
cwtl
push
in
lret
dec
jle
fcomps
sarl
xlat
jge
adc
call
mov
lods
int3
out
lea
mov
xor
jbe
lods
jne
xchg
enter
mov
aad
lret
repz
pusha
cmpsl
in
fmull
pop
mov
push
movsl
mov
stos
popa
ja
mov
and
pop
jecxz
or
xchg
lea
mov
mov
jb
hlt
cs
sub
jmp
jp
shrl
in
mov
cltd
push
std
lret
adc
jecxz
sub
sub
ret
xor
xor
sbb
xchg
lods
int
pop
dec
mov
stos
fdivr
cpuid
mov
mov
mov
xor
loopne
inc
cmpsb
xor
aad
inc
inc
mov
movb
arpl
scas
test
mov
fsts
stos
ficomps
outsl
cmpsl
jmp
jle
sub
sub
jge
mov
arpl
pushf
pop
fdivs
sub
mov
xor
push
idivb
std
pop
sbb
ja
jg
into
adc
mov
imul
rorl
filds
sbb
in
test
stos
pop
mov
mov
out
xor
cmpsl
outsl
xchg
jbe,pt
xchg
cli
or
adc
xchg
in
mov
xor
rorb
sahf
popf
hlt
cmp
int3
in
clc
shrb
sbb
pop
sub
mov
hlt
leave
jo
xor
and
pop
cmpsl
cmc
movsb
lods
adc
shlb
popf
scas
shrb
inc
js
out
push
stos
pop
xchg
popl
testl
jmp
add
xchg
loopne
mov
out
mov
scas
dec
int
lods
outsl
push
pop
sub
dec
and
sbbb
fidivrl
dec
icebp
pop
xchg
test
loope
cmp
aas
and
pop
scas
adc
mov
push
jno
clc
add
jg
jb
scas
mov
fsubrs
repz
loope
push
mov
fwait
push
xchg
jle
push
mul
daa
mov
imul
mov
dec
jmp
in
mov
ret
xchg
xor
cmp
rcl
cli
int3
addr16
jge
xor
inc
jmp
xchg
push
mov
sub
popa
sbb
fistpl
add
jne
mov
std
stc
jl
mov
jbe
icebp
xor
jmp
sbb
adcb
scas
movsb
mov
daa
mov
loopne
jle
sbb
xchg
lods
scas
loop
fwait
testl
lods
xchg
outsl
sub
add
pop
sbb
stos
in
icebp
sbb
loopne
shr
test
aas
in
scas
xor
lods
add
hlt
outsb
inc
add
shlb
and
in
das
loopne
add
mov
faddp
or
mov
in
mov
imul
sbb
jl
pop
cmpsl
gs
sub
test
loopne
xor
call
cmpsb
add
or
inc
dec
fs
pop
int
mov
jno
lcall
aaa
pop
fs
cmpsb
test
cmpsl
dec
cmp
fnstsw
and
imul
push
cmp
push
fmuls
and
clc
pop
jns
sbb
cmp
daa
mov
cltd
mov
jle
xchg
sti
mulb
xchg
int
xor
test
cmp
aam
in
sub
xchg
pop
dec
lods
ret
mov
sub
mov
fwait
into
xchg
adc
aas
mov
pushf
mov
xchg
mov
stc
adc
out
or
and
into
lahf
pop
lods
and
inc
icebp
fwait
pop
push
les
sub
insb
lahf
xlat
sbbl
aam
inc
push
adc
xor
xchg
cltd
adc
fidivl
adc
adc
cmpsl
cmpsb
xchg
add
xor
mov
lods
xchg
sar
cmp
push
mov
pop
int
scas
lods
inc
and
and
std
sahf
push
mov
xlat
xor
push
lock
and
adc
fstps
ja
add
sbb
mov
push
mov
sub
popf
cmp
push
or
daa
ljmp
xor
xlat
shl
inc
test
in
popf
fsubrl
adc
xchg
jge
lidtl
mov
hlt
jbe
into
xlat
mov
cmp
push
or
repz
push
xchg
sub
pop
daa
mov
das
pop
xlat
add
jle
ret
cmp
pop
in
push
mov
mov
xor
adc
inc
pop
inc
xlat
xchg
cwtl
fwait
or
xchg
xchg
mov
inc
jbe
cld
mov
add
ss
xlat
xor
mov
xchg
push
stos
and
mov
dec
mov
cmc
sub
sbb
jbe
pop
push
fwait
mov
sbb
pushf
orl
outsb
jno
and
lea
lods
dec
imul
aad
and
inc
lds
xor
xor
xchg
lcall
xlat
clc
movsb
out
push
movsb
xchg
xchg
mov
jns
mov
sbb
sbb
enter
sbb
jb
inc
xor
inc
mov
jge
mov
lods
daa
dec
and
sbb
cltd
add
mov
cmp
fwait
xchg
shlb
pop
fimull
inc
repz
inc
jnp
mov
movsl
fldt
out
lds
sahf
sti
mov
push
movsb
inc
fstp
xor
das
push
decb
clc
in
je
mov
jle
pop
mov
rorl
jg
xlat
cs
jmp
mov
fisttpl
xlat
testl
daa
mov
fidivrl
lahf
movsb
sbbl
mov
mov
inc
mov
scas
xchg
ljmp
test
leave
clc
push
adc
sbb
push
subb
enter
mov
fistpl
rcll
inc
int
mov
cmpsl
pop
xchg
or
lock
iret
shrb
jmp
loop
arpl
outsb
pop
fistl
sbb
and
cli
mov
out
fcomi
lret
clc
cmpsl
mov
lea
mov
pop
cmp
pushf
ret
and
xchg
das
cwtl
imul
mov
add
leave
daa
pop
imul
fiaddl
sbb
jbe
fstps
das
xchg
pushf
cmp
push
scas
mov
push
sbb
nop
insl
or
sub
cltd
adc
dec
mov
pop
xchg
ds
adc
or
jp
push
jle
cwtl
and
jecxz
mov
out
fisttps
stos
decl
pop
dec
push
dec
jns
orl
cmpsb
ret
popf
test
mov
xchg
inc
sub
add
lods
push
sub
dec
lahf
aad
pop
add
inc
mov
jno
xchg
push
push
subl
ss
and
rcll
xchg
faddl
loopne
repnz
add
in
fucomp
divb
out
dec
pushf
mov
rclb
cmpsl
mov
rcrl
int
imul
xlat
sbb
jb
call
test
xor
jge
xlat
mov
repz
push
jl
or
sub
fwait
aaa
cld
fadds
and
jb
loop
adc
hlt
fmull
roll
sbb
and
mov
outsb
cmp
jo
test
cmpsl
push
and
push
mov
sahf
pop
cmpsb
outsb
in
loopne
lret
mov
mov
sbb
aad
cld
mov
cmc
mov
push
mov
sbb
out
xchg
dec
scas
filds
movsl
inc
enter
ret
rcrb
mov
cltd
ljmp
xchg
into
pushf
dec
popf
lds
sbb
daa
in
sub
push
dec
popa
mov
push
sub
outsl
sbb
fsub
jmp
into
lret
mov
xchg
pop
mov
out
mov
push
jecxz
adc
roll
nop
popa
sbb
pop
inc
sbb
inc
xor
and
shrl
js
push
fnstcw
and
mov
xchg
sub
pop
int
movsb
pop
sbb
neg
daa
aad
sub
je
add
mov
fcoms
repnz
in
insb
sbb
fdivl
xchg
hlt
mov
lret
fnsave
mov
jo
fistps
add
sbb
jne
cmp
enter
sbb
dec
fmuls
mov
jp
loopne
mov
pop
cmpsl
cmpsb
outsb
adc
ss
lds
xchg
fdivrs
mov
mov
test
daa
loop
cmp
mov
inc
cmc
add
ds
notb
mov
add
pop
mov
adc
mov
rcrl
mov
adcb
cmp
add
dec
dec
outsl
in
pop
int3
repz
and
cmpsb
xor
shrl
xchg
sbb
lods
push
xchg
mov
dec
jecxz
push
jne
push
movsb
dec
sub
icebp
pop
xchg
mov
shrl
and
xor
push
addr16
cmpsl
pop
push
pop
mov
and
or
pop
sub
pop
dec
mov
xchg
pop
cmp
mov
fiadds
cmp
pop
cmp
out
add
int3
xchg
and
xchg
xchg
test
push
out
pop
inc
sub
loop
mov
mov
xchg
pop
pop
xor
ja
lds
pop
fldenv
mov
xor
ds
in
stc
inc
pusha
inc
hlt
bound
sbb
pop
and
movsb
jnp
out
or
dec
sbb
cmc
push
xchg
mov
mov
lds
jne
xchg
inc
mov
push
ret
cmp
push
cmp
fldl
push
pop
add
jmp
mov
xor
mov
push
stc
imul
adc
adc
mov
jnp
cmp
insl
xor
push
add
mov
and
mull
push
sbb
mov
pop
cmpsl
sbb
daa
dec
xor
insb
adc
lret
pop
mov
cltd
jge
lret
daa
pop
xor
xchg
jle
sbb
ret
andb
adc
push
add
add
adc
cmp
scas
daa
loopne
lea
outsl
push
inc
fst
shl
or
ja
test
adc
call
lcall
imul
add
test
jo
mov
enter
fdiv
int
mov
dec
sub
pushl
sarb
mov
sub
enter
cmc
or
fisubs
bound
xor
out
sub
fsubl
push
mov
insb
popf
and
lds
fisubrl
fdivs
pop
ss
mov
xchg
jo
pop
scas
jne
stos
mov
mov
fwait
cmpsl
shrl
das
fcoml
addr16
rcrl
mov
aad
sub
shl
icebp
jge
frstor
data16
mov
and
fstps
mov
sti
enter
xchg
sahf
sarb
pusha
sbb
mov
out
mov
mov
push
fmull
mov
sbb
out
push
lcall
or
mov
in
mov
inc
cli
cmp
shl
add
push
cmpsl
out
adc
lea
popf
xchg
sbb
sbb
cs
add
cwtl
leave
xor
add
xor
add
pop
xchg
or
ss
jb
repz
xchg
mov
fisubrs
cltd
test
icebp
inc
sub
xchg
das
scas
scas
sbb
adc
mov
rolb
stos
dec
pushf
and
sub
jg
lds
dec
loopne
mov
insl
add
test
leave
sbb
mov
fucomp
popa
jp
popf
sahf
lods
int
lods
int
jmp
movsb
cli
cltd
int3
dec
popf
insb
pop
clc
push
hlt
jle
adc
insb
das
repnz
pop
xlat
sbb
insl
pop
iret
sub
push
or
rcrl
sbb
xchg
mov
jp
in
push
and
mov
pop
inc
cltd
mov
and
sbb
fwait
sbb
add
sbb
jp
lds
test
cmc
pop
lods
into
mov
mov
ret
cmp
sti
stos
fwait
xchg
fmuls
mov
rolb
cmp
sbb
sub
sbb
cmp
mov
mov
je
ljmp
pushf
arpl
in
int
sub
stos
jne
cmpsl
jae
jo
pop
stos
repnz
cmp
mov
test
stos
call
xlat
mov
cmp
sub
popa
cli
push
mov
mov
jmp
add
das
jge
push
fsubp
lods
sbb
sub
push
adc
movsl
mov
xor
and
jge
mov
dec
xchg
or
jb
scas
in
adc
dec
aaa
add
in
cmpsb
jmp
cld
pop
fs
insl
push
in
dec
push
pop
sbb
pop
xchg
mov
cli
ss
pop
hlt
mov
pop
dec
pusha
fdivl
fisttps
sbb
fnstsw
fmuls
jecxz
fisttpll
pop
inc
in
pushf
sbb
daa
mov
cmp
pop
pushf
and
test
pop
hlt
lahf
cmp
or
jns
lods
sbb
fisttpll
xor
leave
jbe
cltd
into
cs
sub
push
lea
mov
lret
rorl
test
leave
out
xchg
mov
push
pop
xor
loopne
out
pop
in
mov
incb
xchg
test
mov
xor
ret
push
lea
in
add
add
xchg
mov
rol
es
cmp
ss
ret
cmpsl
add
std
mov
rclb
daa
movsb
push
movsb
jbe
out
pop
test
xchg
pop
scas
rcl
lods
pop
pop
and
fisubl
mov
incl
jae,pn
ret
mov
movsl
jne
xchg
loopne
das
and
mov
movsb
pop
mov
sbbb
int3
popf
mov
pop
jmp
pop
fcomps
in
lcall
xor
std
add
xchg
test
pop
and
jo
sbb
sub
xlat
push
fdivs
mov
fcoms
jae
loopne
push
or
or
cltd
lret
fs
inc
loop
in
es
pop
lods
test
aaa
in
mov
test
jnp
loopne
push
repz
mov
daa
cmpsl
xchg
ret
movsb
loopne
repz
cmp
icebp
test
xchg
outsb
hlt
outsl
dec
pop
scas
les
roll
jns
cld
cmp
sbb
aas
stos
cmp
cmpsl
pop
repz
dec
cmpsb
cmpsl
lea
lods
xor
sbb
push
mov
icebp
dec
and
cmc
xchg
mov
aaa
sarb
xor
sbb
mov
adc
cli
pusha
dec
mulb
enter
sub
in
xchg
pop
push
mov
ret
pop
inc
sahf
fdivl
outsb
fisubl
pop
dec
popf
jb
int
mov
sbb
popa
adc
rcl
push
cmpsl
ljmp
jbe
movsl
xchg
mov
inc
ror
loopne
cmp
or
sbb
mov
add
adc
iret
push
aaa
inc
lret
mov
mov
sub
loopne
setp
enter
xor
or
dec
lret
lds
out
push
pop
jo
ret
lods
mov
add
stos
mov
mov
sub
imul
cmc
add
aas
sbb
shrb
jecxz
out
sbb
sub
call
mov
pusha
adc
jmp
inc
cmp
jl
enter
and
cmc
jp
inc
or
cld
insb
popf
and
je
push
sub
inc
dec
cmp
fdiv
jae
lods
mov
ds
pop
sub
std
push
imul
aaa
and
push
fidivrs
xchg
and
mov
mov
icebp
adc
ss
pop
repz
pop
out
xor
mov
pop
lds
cmpb
and
fwait
xchg
out
int
int
mov
xor
jmp
jmp
cmp
lods
dec
sub
pop
xchg
jnp
and
mov
in
mov
rcrl
movsl
or
int
out
dec
movsl
pop
das
sbb
out
sub
cs
cmc
fisttps
push
mov
add
lods
push
scas
mov
jp
hlt
int
loop
in
rorb
xor
cs
lcall
ror
pop
and
ja
lds
ret
call
inc
in
push
test
jnp
aas
jp
pop
sub
aad
das
pop
nop
repz
jnp
imul
ret
xchg
jne
push
int
cmp
cmp
jo
fsubl
xlat
adc
sahf
fldt
adc
mov
fcompl
mov
or
push
mov
lcall
jnp
pop
push
xchg
in
mov
xor
xchg
mov
xchg
pop
fisubrl
lods
xchg
xchg
mov
in
pop
mov
cmpsl
cmpb
jge
inc
cmp
mov
lock
std
cltd
sbb
les
in
lods
aad
xchg
call
out
xchg
sub
inc
xor
subl
add
clc
cmpsb
jnp
test
pushf
xchg
jl
loope
imul
popf
mov
loope
pop
cwtl
xchg
ljmp
mov
lahf
xchg
sarb
loopne
xchg
mov
in
out
push
aas
and
sub
pop
callw
pushf
jae
rcll
cwtl
adc
sub
mov
xchg
mov
mov
scas
push
loopne
mov
cmp
std
mov
es
cld
in
test
inc
daa
testl
inc
sbb
mov
mov
insl
dec
cwtl
out
push
sbb
sub
mov
or
sub
popl
or
fst
inc
subb
cs
stos
jo
movsl
cli
hlt
outsl
cmpsl
rcrb
fwait
jge
sahf
sub
sbb
loope
movsl
mov
repnz
sbb
jl
in
loopne
jnp
daa
mov
adc
sbb
add
mov
push
mov
inc
mov
pop
shll
adc
lds
jns
pusha
test
mov
sub
push
or
adc
imul
push
stc
aad
repnz
in
add
fs
sbb
mov
out
mov
mov
pop
sbb
pop
movsl
xchg
cmp
push
mov
pop
xor
pop
pop
mov
mov
addr16
jbe
push
pop
stos
pop
sbb
and
add
push
pop
jns
int3
dec
lea
lods
mov
int
fdivr
push
mov
xchg
cmpsb
adc
rorl
sbb
out
sub
ljmp
cmp
repnz
negb
mov
jle
shrl
call
mov
push
ds
and
or
loop
push
scas
cmp
fidivl
pop
mov
out
pop
das
mov
outsb
jmp
mov
in
int3
push
mov
xor
xchg
dec
hlt
call
mov
and
mov
insb
rcrb
movl
xchg
sbb
pop
mov
movsb
pop
dec
xor
xor
xchg
xchg
pop
pushf
push
mov
inc
ret
lret
std
mov
pop
xor
push
add
cmp
mov
into
pop
jbe
cmpl
scas
cs
sub
int
pushf
ja
cltd
movsl
roll
in
int
dec
out
addb
lahf
inc
mov
lret
mov
jl
xchg
subb
cmp
jb
fisubrl
xlat
cmp
rep
add
pushf
clc
or
sub
mov
pushf
xlat
push
sar
scas
stc
cltd
das
cmpsl
fwait
popa
mov
in
jae
insb
pop
xchg
pop
aaa
loop
cmp
and
lret
icebp
dec
add
jbe
sti
mov
jle
cs
or
xchg
ret
and
add
ret
shll
lret
pop
sub
scas
adc
out
into
pop
or
mov
add
xor
outsl
sub
mov
cltd
pop
scas
add
jbe
insb
mov
scas
test
xchg
xchg
lods
pop
pushf
repnz
xchg
cmc
frstor
jne
ret
sub
jle
inc
mov
pop
xchg
adcl
clc
sahf
jo
jge
xchg
mov
and
lds
test
call
or
mov
call
fcmovnbe
and
fcomi
cltd
mov
jmp
inc
dec
mov
mov
push
or
inc
cmpsl
std
and
xchg
mov
shrl
jl
and
fidivs
repnz
cmp
xor
add
xor
jl
in
scas
add
pop
and
fsubr
inc
aas
jns
lcall
in
pop
scas
add
popf
sbb
dec
movsb
add
mov
inc
pop
loop
sbb
pop
pop
xor
fwait
pop
mov
jp
jo
out
sub
loop
loop
mov
push
mov
xor
ja
pop
sub
gs
pop
sub
inc
dec
push
in
jbe
fstps
fldt
pop
insl
enter
lahf
dec
loope
or
or
mov
sbb
fucom
shll
sub
mov
fldlg2
sub
sbb
xlat
push
mov
sub
sbb
jl
iret
mov
popf
into
pop
or
push
stc
lahf
and
pop
push
cs
cmpsl
mov
cmc
outsb
cmpl
mov
out
sub
scas
outsl
dec
jb
and
sbb
jns
addr16
in
jo
jl
lock
pop
xchg
inc
cmp
arpl
lock
int
mov
cltd
cmpsb
iret
rorl
mov
lret
pop
pop
cs
lea
pop
push
lock
fcomps
clc
pop
jnp
lock
jle
inc
xlat
inc
jl
dec
sbb
dec
mov
mov
push
daa
test
adc
cmpsl
leave
jnp
mov
js
xlat
out
fwait
mov
and
jo
orb
cmpsl
ja
jo
jg
jmp
imul
iret
pop
jmp
xchg
repz
sub
mov
repz
dec
int
push
lret
int3
cmp
lods
ret
movsb
leave
in
adc
lods
ficomps
push
in
hlt
pop
sbbb
and
mov
ja
dec
jge
add
cmp
imulb
out
inc
mov
in
jnp
test
lods
jmp
movsl
in
loopne
push
xor
cwtl
imull
hlt
inc
inc
mov
xor
mov
fldt
and
xchg
scas
xor
mov
rcrb
mov
sbb
ret
inc
fmull
daa
or
repz
sti
xchg
mov
inc
fcmovb
sbb
lds
fisttpll
adc
mov
inc
xchg
sahf
adc
pop
scas
orb
movsb
jp
fwait
inc
push
cld
out
jmp
fdivrs
and
negl
push
mov
sub
cmc
lea
int3
dec
rol
neg
push
mov
loopne
inc
rcrb
and
mov
aad
xchg
cltd
loop
aad
subl
mov
sar
repz
test
cwtl
movsl
xchg
mov
jmp
jbe
out
cmp
xchg
jbe
scas
call
xor
rorb
fs
inc
and
push
test
shrb
test
daa
fmuls
mov
shrb
sub
lcall
xchg
xchg
jbe
jno
aam
outsb
and
xor
es
lds
cmp
aaa
rorl
repnz
pusha
cwtl
mov
lds
add
xlat
insl
fsubrp
mov
pop
push
mov
jmp
cmc
push
cld
mov
fists
dec
movsl
dec
mov
sbb
add
ret
xchg
or
roll
or
inc
stos
movsb
scas
xchg
pop
adc
sti
and
testl
adcl
scas
movsb
mov
daa
sbb
push
jbe
cltd
stos
xchg
in
stos
shll
push
mov
cld
or
hlt
pop
xchg
jae
out
fiaddl
xor
lcall
xor
jne
in
sbb
lods
mov
ljmp
hlt
inc
daa
test
sub
xchg
fldenv
jge
xchg
mov
imul
scas
enter
mov
scas
mov
lea
xchg
movsb
adc
mov
mov
xchg
mov
mov
jno
mov
pop
xor
pushf
call
movsb
sbb
mov
jmp
push
dec
shrl
or
xor
and
push
mov
test
pop
sub
mov
pop
fiaddl
aad
sbb
jbe
repz
cmp
or
mov
sub
add
pop
xchg
sti
dec
mov
dec
sub
jecxz
push
pushf
test
outsl
mov
in
mov
inc
xor
sbb
dec
sbb
out
andb
loop
adc
movsl
pop
dec
repz
stc
mov
mov
or
imul
outsl
push
in
jp
ljmp
cmpsl
cmp
test
fildll
mov
or
mov
sub
or
jne
mov
or
xchg
sub
inc
mov
mov
inc
inc
scas
test
aas
int
ja
cmp
cmp
insb
mov
imul
jp
in
mov
rcll
sub
mov
test
and
mov
scas
fstp
pushf
loop
push
sbb
jb
imul
xacquire
pop
push
fisubrl
and
cmp
or
xchg
mov
jnp
fisttps
jnp
icebp
adc
mov
movsb
mov
aad
in
loopne
dec
xor
fwait
or
clc
or
jge
aad
inc
adc
mov
pop
mov
push
pmaxub
out
mov
rcrl
lahf
xlat
pop
out
cmpsb
icebp
cmp
mov
ja
cmp
mov
adc
sub
adc
sub
push
loope
mov
pop
mov
ret
pop
mov
cld
je
sub
add
sahf
pop
cmpsl
dec
cmpsl
cmc
push
dec
jne
and
shll
sti
loope
fimull
cmpsb
sub
jp
jne
add
jae
xor
inc
push
pop
rcrl
cmp
enter
emms
test
or
pushf
xchg
sbb
pop
scas
mov
test
lahf
sub
movsl
loopne
notb
xor
mov
aas
shl
sbb
push
or
out
nop
fcoms
inc
jge
hlt
jmp
arpl
ja
cli
lcall
rcr
or
mov
inc
pop
inc
lret
enter
sbb
in
shl
iret
pop
inc
in
jb
sbb
pusha
add
enter
pop
push
and
movsl
mov
std
lds
jb
iret
pop
out
scas
and
pop
mull
dec
int
jb
mov
xor
test
sub
repz
inc
mov
sub
pop
std
jnp
mov
inc
mov
pushf
es
mov
add
push
dec
lcall
mov
mov
sar
mov
jle
mov
fstl
jl
in
ret
sub
ljmp
lcall
out
stos
or
out
fmul
sbb
fcom
pop
das
xchg
pop
xlat
sbb
aaa
pushf
hlt
xorb
push
add
movsb
mov
negl
sbb
push
xchg
scas
xlat
cmp
cmc
out
add
xcrypt-cbc
xor
and
test
jmp
fdivp
cmp
sub
or
xor
and
xor
aaa
mov
or
in
jbe
adc
mov
loopne
push
popa
lods
xchg
sahf
xchg
iret
pop
push
push
push
dec
dec
cmp
mov
aad
cmpsb
mov
ret
fsubl
mov
dec
dec
or
fs
fisubrs
and
sarl
insl
pop
mov
lds
into
fimuls
lret
push
in
sub
jb
loope
add
cmp
push
cltd
inc
cwtl
xor
jge
mov
jne
pop
clc
inc
jp
push
mov
push
inc
xor
dec
enter
repz
pop
pop
lea
int
lea
test
lret
call
sub
inc
cs
stc
jle
cmpsl
sahf
fadd
hlt
std
out
jle
and
bound
mov
push
fwait
sub
push
pop
xchg
sub
gs
jg
mov
iret
mov
repnz
mov
outsl
ret
adc
pop
push
mov
rcll
leave
pop
ss
mul
fcmove
xchg
loop
rolb
pop
cmp
xchg
and
aam
sbb
ds
push
int
or
pop
cwtl
cmpsl
roll
push
pop
xor
int
pop
sub
call
stos
or
inc
dec
clc
pop
fxch
dec
repz
scas
sbb
test
lahf
inc
test
xlat
cli
lahf
push
enter
mov
addr16
mov
xchg
hlt
mov
adc
adc
mov
adc
jle
test
lea
or
sub
aam
sbb
jg
testb
jle
mov
popa
push
sbbb
lods
testl
mov
pop
inc
imul
int3
pop
push
mov
pop
fistl
mov
repnz
out
xor
and
mov
ja
sbb
sti
push
sbbb
xchg
in
dec
and
mov
mov
pop
add
in
xor
mov
scas
in
or
fldcw
enter
inc
stos
movsl
mov
xchg
or
push
fucomp
pushf
cmpsl
mov
pop
out
cld
loopne
push
mov
movsb
mov
rcll
pop
mov
cs
repz
push
outsl
cwtl
xor
dec
jge
icebp
sub
sbb
scas
sbb
dec
xchg
sbb
sub
jl
dec
pop
lock
pop
dec
sti
pop
lret
fucompp
testl
fsubrp
sub
int
lock
sbb
ss
xchg
sub
jmp
mov
mov
loop
pop
cmp
fisttpll
or
sub
dec
cmpsl
insb
mov
lret
insb
or
mov
and
lahf
jo
push
in
fsubl
dec
xor
test
xchg
mov
jb
lahf
arpl
mov
test
ret
pop
mov
inc
sbb
push
test
in
cmc
lods
int
xchg
adc
insb
xlat
out
jb
arpl
xor
push
or
lods
xchg
adc
fdivrs
mov
loopne
adc
or
push
or
out
xchg
nop
sub
test
jbe
xchg
sbb
xchg
in
int
mov
pop
sub
pop
cmpsb
scas
nop
or
pop
add
and
jne
push
je
loopne
sbb
popf
in
push
iret
or
pop
xchg
and
pop
sbb
pmaxub
std
mov
int
fistl
hlt
repnz
lret
dec
das
cmc
push
adc
push
sub
jno
mov
dec
jbe
and
popl
pushf
push
cmpsl
cwtl
add
enter
pop
jo
mov
pop
or
imul
scas
dec
insl
je
lahf
jmp
fdiv
sbb
or
popf
sahf
dec
leave
lret
sub
stos
sub
mov
outsl
sbb
mov
sbb
addl
dec
mov
xchg
in
fwait
xor
lcall
mov
jmp
rorl
iret
or
test
into
test
cmc
ss
movsl
loope
add
outsb
xor
insl
cmp
xor
daa
shll
subl
xchg
jmp
adc
enter
push
cmp
jns
repz
daa
lods
xor
cwtl
push
and
cmp
icebp
in
movsb
je
mov
xchg
scas
dec
mov
xlat
pop
outsl
fcmove
arpl
lcall
pop
test
cmp
cmpsl
repz
mov
int
or
fstpl
sahf
sub
add
xchg
call
fnstcw
fsubr
out
mov
and
inc
cmp
out
xchg
in
jbe
jmp
lods
adc
test
sarl
push
or
out
xchg
or
sbbl
xchg
pushf
mov
sbb
add
push
mov
cld
in
popa
mov
mov
out
pop
rcrl
xchg
out
jl
jo
sbb
insb
fucomp
int3
repz
sbb
cmpsb
mov
mov
mov
mov
lods
outsl
push
sti
push
sarl
mov
out
insl
xchg
lea
repnz
loopne
lds
sub
xor
rclb
pop
into
pop
mov
lea
loop
push
xchg
out
insb
cmp
xchg
adc
cmpsl
shlb
and
fsts
sub
loopne
jb
mov
pushl
lcall
mov
outsb
cmpl
mov
pop
cmp
out
bound
cmp
pop
cmpsl
sub
test
lret
stos
leave
xchg
mov
mov
hlt
push
repnz
arpl
push
xchg
fstpl
lods
test
or
push
mov
cmp
or
cmp
fsubrp
push
rcll
pop
mov
test
jb
int
int3
outsl
or
mov
or
xchg
cs
sbb
cmpsb
in
insb
or
fwait
cmp
insl
or
mov
add
aad
xchg
xchg
lea
adc
movsb
je
mov
insb
inc
rorb
mov
js
xchg
adc
scas
dec
cltd
cmc
daa
ret
pop
aas
mov
mov
fcoml
pop
jg
sub
mov
sub
inc
pushf
inc
sbb
popf
cmp
jmp
sbb
dec
imul
les
aaa
into
jbe
popf
movsb
hlt
movsl
fidivl
mov
pop
out
or
jmp
test
sub
inc
jle
mov
or
pop
aaa
xchg
pop
add
xchg
mov
xchg
lds
jnp
pushf
inc
pop
in
mov
xchg
or
enter
xchg
xor
pop
into
xlat
jmp
pop
icebp
scas
and
stc
call
stos
push
mov
fisttpll
mov
sub
imul
push
sub
cmpsb
addr16
fcoml
jbe
mov
shlb
outsl
cmc
xor
in
adc
loopne
xor
stc
insl
dec
mov
lret
cmp
xchg
loop
lods
fwait
jbe
mov
inc
out
in
popf
jns
inc
ljmp
test
sbb
add
inc
in
out
loope
lcall
addr16
les
rcrl
jbe
jle
xchg
insb
and
pop
add
ret
mov
adc
js
lods
imull
inc
lods
mov
das
sbb
aad
cmp
les
in
mov
sbb
pop
pop
inc
jecxz
insb
popf
jne
int3
cmp
out
and
daa
test
xchg
inc
lret
sbb
jnp
out
int3
push
add
sahf
mov
xchg
insl
mov
pop
mov
cmp
hlt
testl
mov
mov
orl
jne
push
call
in
jnp
rcr
sbb
xor
jo
xchg
leave
sub
mov
out
mov
inc
das
divl
mov
icebp
stos
in
sub
push
dec
pop
fsubrl
ja
lods
inc
les
mov
jmp
mov
sub
aaa
ret
jge
mov
mov
ret
fwait
ret
insb
mov
lds
fwait
outsb
dec
jge
lea
int
adc
sbb
push
js
adc
insb
or
clc
stos
inc
sbb
fwait
mov
mov
addr16
sbb
jge
dec
inc
xor
lods
inc
movsl
movsb
lods
daa
sub
mov
mov
fstps
adc
mov
sbbb
adc
cmp
lea
xchg
mov
cs
aaa
push
sub
cmpsb
insb
sti
jns
aad
jp
mov
pop
rcl
mov
add
inc
loopne
into
insl
sub
sbb
ss
push
cmpsb
and
sahf
fsubr
and
push
ret
pop
mov
xor
das
sbb
and
and
loopne
cs
sub
add
push
leave
pop
mov
fwait
sub
mov
fldt
adc
sub
jp
and
pop
mov
add
das
mov
out
test
imul
mov
mov
lods
sti
jmp
mov
je
mov
mov
sub
mov
mov
test
add
inc
lods
mov
pop
lods
mov
movsb
inc
pop
test
mov
rol
jno
xor
popf
pop
or
inc
jbe
lods
dec
shlb
scas
or
insb
mov
outsb
mov
or
ja
ljmp
xor
popf
imul
mov
cld
sahf
fimuls
out
push
mov
fbstp
iret
xor
pop
outsl
movsb
mov
fnstsw
lods
out
loopne
imul
and
daa
sbb
call
in
mov
mov
pop
mov
aam
shl
repz
daa
pop
jb
lcall
std
das
mov
lcall
pop
jb
or
call
sub
cmp
cmp
scas
push
pop
sub
outsl
movsb
stos
pushf
sbb
add
cmpsl
test
or
xchg
push
cwtl
mov
ds
nop
rorb
push
sub
mov
jno
ret
outsl
or
add
push
xchg
xchg
mov
mov
and
cmp
rclb
lds
push
mov
jbe
imul
sti
call
sbb
leave
or
es
addr16
adcl
dec
jge
dec
or
mov
mov
pop
fcoml
mov
mov
fidivl
adc
dec
fcompl
pop
inc
sar
test
loop
adc
inc
aad
adc
notl
mov
lcall
mov
ret
mov
jae
stos
test
stos
lret
outsl
xor
pop
in
out
call
fsubr
push
sub
shlb
or
and
inc
lods
xchg
jp
daa
out
mov
xor
mov
ret
push
sbb
rorl
mov
inc
lea
xchg
dec
test
sub
test
outsb
jae
jne
inc
jl
adc
mov
push
fidivl
ret
or
in
fsubp
stc
movsb
cmpsl
inc
mov
mov
daa
divl
lds
mov
cmp
and
lcall
mov
xchg
dec
mov
mov
jge
imul
jge
sbb
adc
mov
aaa
lods
loope
jb
aaa
and
xor
test
jl
sub
push
sub
and
adc
push
or
cs
rcr
mov
mov
pop
pmulhuw
enter
mov
mov
bound
mov
jns
stos
and
ja
xchg
outsb
lods
lds
shr
xor
jnp
inc
push
lcall
sbb
inc
mov
mov
sti
or
movsl
ret
sub
mov
sti
add
inc
sahf
mov
and
int
mov
arpl
pop
loopne
pop
dec
dec
mov
xchg
mov
mov
popf
lods
pop
repz
mov
xlat
call
sbb
addr16
pop
xlat
fnstenv
pop
dec
pop
cmc
stos
data16
sub
jle
xor
or
stos
push
cmp
mov
mov
loopne
lds
jl
gs
dec
stos
lea
in
test
test
out
sub
scas
mov
jp
mov
dec
out
pop
pop
hlt
popa
movsb
imul
dec
cmp
inc
sbb
movb
xchg
pop
pop
sbb
cmp
call
enter
pusha
enter
pushf
mov
pop
outsb
or
jns
and
or
popa
sarb
cmc
cmc
add
or
nop
xor
mov
rcll
ljmp
scas
cmpsl
sbb
adc
push
es
add
cmpsl
sahf
sub
or
subl
push
lahf
dec
push
fstps
testb
adc
loop
xor
xchg
gs
xchg
jo
mov
out
push
and
repz
xchg
mov
cmpsb
insl
iret
fildl
into
loope
shlb
dec
pop
stos
adc
movsl
xchg
flds
mov
loopne
lds
into
pop
lods
cmp
xchg
sbb
call
outsb
arpl
das
into
popa
lods
push
jp
xchg
push
cmpb
mov
mov
lcall
aam
jno
jae
pop
and
push
and
sahf
mov
fmull
push
and
stos
dec
mov
pop
mov
mov
lea
inc
mov
or
push
clc
ljmp
xor
notl
xchg
test
inc
ja
out
cld
popf
jge
push
hlt
jge
pop
inc
loopne
add
jmp
lods
inc
sub
inc
sbbb
out
in
xor
inc
popf
outsl
cmp
lea
inc
dec
sub
mov
sti
sub
sub
movsl
fwait
insl
sub
mov
push
ja
sbb
fisubrl
aas
xchg
mov
movsl
mov
pop
cmp
pop
leave
mov
shld
mov
xor
mov
mov
dec
xor
outsl
pop
xor
call
mov
mov
test
in
scas
std
xchg
add
add
mov
pushf
mov
enter
lods
arpl
inc
sbb
mov
cmp
push
push
jl
mov
pop
into
mov
out
mov
add
cmpsl
cmp
sub
sti
icebp
shl
xor
bound
pop
sub
icebp
into
cwtl
lahf
aad
int
test
hlt
lret
insb
pop
cli
lcall
cmc
add
sbb
inc
sub
into
sbb
rcrl
scas
dec
mov
lds
loopne
div
sub
inc
cmp
pop
mov
int
insb
jge
mov
xchg
xchg
sbb
cwtl
pop
mov
cmpsb
jbe
imul
cmp
cltd
into
fstp
push
insb
subl
fstl
and
mov
arpl
cmc
cmpsl
jo
sti
xlat
mov
out
cltd
mov
out
pop
divl
divl
xchg
xor
fdivl
inc
push
ss
testb
fs
outsl
mov
data16
sub
mov
scas
jl
mov
leave
mov
popa
das
push
pop
stos
stc
mov
dec
fcmovb
fisubrs
insb
subl
inc
imul
lea
ret
jl
stos
in
mov
jbe
repnz
cmc
and
xchg
scas
in
movsl
dec
loop
movsl
lea
jp
nop
jb
mov
or
pop
lods
xchg
loope
gs
push
enter
mov
popf
xor
mov
and
sub
sti
cwtl
pop
int
sub
cs
fsubrl
fwait
or
add
test
jl
out
movsb
imul
lahf
cmp
sbb
mov
into
xchg
xor
test
and
fstpt
and
aam
stos
xchg
add
fsubrs
mov
nop
sbb
ror
pop
or
sti
add
push
xor
outsl
push
rorb
inc
push
mov
je
scas
insb
cmp
popf
fwait
sub
mov
int
scas
jns
add
sbb
jne
enter
adc
xor
jecxz
pop
mov
pusha
mov
mov
lret
mov
add
sbb
cmpsl
scas
int
mov
ljmp
ret
sahf
push
jo
sub
aad
push
not
rcrl
int3
in
aad
sbb
xchg
scas
sbb
dec
daa
fdivl
test
pop
dec
test
fdivs
scas
mov
cs
add
push
fwait
pushl
dec
mov
repnz
imul
and
sbb
inc
sbb
call
add
mov
mov
outsb
sbbl
mov
popf
mov
jne
push
mov
xchg
push
adc
lods
adc
in
cmc
daa
sbb
mov
and
push
sahf
sbb
out
int
ljmp
mov
aaa
outsl
into
mov
movsb
loopne
mov
in
jecxz
fucom
aas
push
ficompl
jo
lods
and
lods
out
cli
test
insb
lret
xchg
jmp
scas
rcr
mov
in
in
shrb
cmpsl
test
sbb
dec
sub
push
jg
ja
faddl
std
arpl
hlt
sbb
mov
adc
daa
mov
in
pop
jge
hlt
mov
adc
movsl
mov
mov
rcrb
and
pop
jmp
mov
push
xchg
mov
or
sbb
pop
pop
xchg
popf
jge
pop
pop
jb
adcl
lds
sbb
imul
jno
and
pushf
insb
test
lods
std
dec
pushf
mov
push
push
out
jno
rcr
sub
jno
in
dec
es
xchg
sarb
cmp
lods
dec
popf
out
mov
cmp
imul
mov
or
mov
mov
leave
jmp
inc
ss
sub
sub
dec
jmp
cmp
shr
ljmp
sub
loop
into
mov
outsb
add
jnp
dec
lahf
loop
push
mov
popf
adc
lahf
je
add
faddp
ror
movsl
lcall
adc
in
ret
jno
lret
scas
or
sti
inc
cmp
repz
jl
cmp
mov
jmp
cmp
inc
pop
and
sub
jbe
mov
js
scas
mov
in
je
lods
sbb
ljmp
mov
addr16
nop
xorl
repnz
call
in
into
push
mov
cwtl
mov
rcll
pop
xlat
pop
repz
mov
imul
cmpsl
or
sub
into
fidivrs
inc
stos
or
mov
adc
divb
lds
pushf
sub
cmp
and
cli
popf
push
lds
shlb
shr
mov
mov
out
insb
xlat
icebp
fimull
pop
xor
sbb
lea
cmp
mov
mov
xor
add
sub
pop
jg
stos
and
dec
cwtl
mov
mov
loopne
sub
faddp
sub
sti
add
sbb
lea
ret
test
mov
les
dec
rorb
mov
mov
into
mov
sbb
sbb
inc
jns
xchg
stc
sub
lret
cmp
sub
ss
movsb
mov
mov
stos
daa
sbb
push
aam
nop
fadd
leave
sbb
ret
sub
lcall
sub
xchg
lods
cmpsl
in
mov
sub
sub
cmp
sar
insb
leave
and
popf
cmpsl
mov
fcomps
sbb
cmp
jmp
fadd
pop
and
xor
and
mov
mov
adc
fildl
into
mov
xchg
leave
enter
mov
mov
sub
and
mov
add
sub
xchg
dec
pushf
or
repnz
sbb
sbb
filds
mov
mov
sub
sbb
mov
xchg
pop
cmp
xchg
jbe
test
subb
xor
jns
pop
ja
sub
into
outsb
cmpsb
xchg
xlat
jns
xor
mov
adc
mov
pop
mov
outsb
out
lcall
mov
sbb
and
xchg
cltd
cmpsb
mov
shlb
pop
jmp
inc
xrelease
das
paddsb
sub
ret
movsl
jmp
xchg
inc
std
lods
jbe
lcall
clc
cmp
out
int
ret
outsb
insl
jb
pop
ret
cmpsl
xchg
push
jp
and
xor
std
lods
movsl
loopne
mov
xchg
mov
mov
mov
and
subl
iret
xchg
cld
loopne
insb
test
or
mov
mov
xchg
xor
cmpsl
je
andl
sub
enter
jge
test
inc
xlat
scas
adc
out
xorl
clc
mov
insb
scas
add
jp
mov
add
shrb
test
outsb
xchg
fnstcw
cmp
push
dec
mov
insb
mov
sarb
mov
test
inc
int
mov
mov
xor
add
lcall
push
outsl
mov
xchg
or
outsl
in
insb
subb
enter
cld
push
pop
mov
clc
sti
lods
xor
test
scas
gs
scas
jl
dec
pushf
mov
push
lea
out
je
jl
mov
sti
lods
jmp
sbb
sbb
enter
mov
mov
cmp
or
mov
in
jns
sub
test
insb
and
adc
push
pushf
cmpsl
jge
dec
subl
fildl
out
rcll
jl
popf
movsl
mov
dec
iret
pop
subl
or
cmp
in
adc
int
mov
aaa
mov
or
xchg
scas
mov
aas
lods
xor
pushfw
jmp
xor
fdivs
lea
sti
or
test
scas
xor
xorb
lods
ljmp
loope
adc
outsl
sbb
fstpl
inc
and
enter
lcall
mov
rep
nop
fstl
cltd
lods
adc
lea
mov
es
sbb
jmp
sbb
mov
outsb
fmulp
in
movsb
insb
mov
test
rcrb
fwait
imul
jle
push
push
inc
je
mov
xlat
sbb
sbb
daa
fldt
lods
shrl
cmp
xchg
mov
or
adc
dec
sbb
push
pop
fsubl
fisubl
lret
push
xchg
mov
xlat
iret
jae
das
stc
lods
cmp
push
pop
popf
in
and
mov
cmpsl
test
sub
daa
jg
jl
or
sahf
and
lcall
lret
inc
rorl
cmp
cs
mov
cmp
jmp
imul
pop
std
inc
mov
xchg
iret
cmpsl
dec
cmp
cmpb
rcrb
incb
fpatan
jae
xchg
xor
xchg
dec
bnd
lock
sbb
lods
cmp
jl
imul
mov
and
sub
clc
rcrb
out
daa
sub
mov
adc
enter
sbb
inc
jnp
jge
sbb
sub
xlat
je
jmp
in
add
pop
adc
xor
adc
or
mov
neg
lock
test
xchg
mov
in
int
aad
jge
sbbb
mov
adc
imull
stc
sub
sbb
js
sub
cmpsb
mov
cld
and
pop
adc
pop
or
cld
ret
pop
xorb
sub
jg
mov
outsb
sbb
inc
orl
mov
stos
xchg
fldcw
mov
sahf
xchg
lret
inc
mov
dec
add
outsb
cmc
aam
push
js
mov
testl
imul
fwait
mov
or
jns
enter
movsl
aad
cmpsl
scas
mov
adc
mov
lods
mov
popf
test
jns
cmp
lahf
scas
mov
pushf
daa
inc
adc
mov
cmp
aad
cmp
sbb
cld
cwtl
stos
jb
xor
imul
outsl
mov
jnp
roll
jo
aam
jp
daa
rcr
out
xchg
push
adc
xchg
mov
pushf
in
cwtl
inc
leave
mov
jo
test
sub
dec
mov
mov
inc
mov
nop
jp
dec
scas
adc
inc
dec
sub
mov
sub
das
cwtl
jns
clc
mov
xchg
xchg
fldl
daa
jnp
cmp
lds
cltd
cpuid
cmc
in
test
lea
cld
mov
pop
xchg
lods
icebp
mov
stc
sahf
inc
mov
out
popf
push
inc
push
outsl
mov
or
inc
clc
call
dec
xor
mov
sub
mov
scas
jnp
jl
icebp
test
and
mov
in
sbb
cltd
add
push
gs
jo
imul
sub
jge
fnsave
push
notl
fimuls
mov
lods
sub
push
adc
mov
mov
push
je
push
pop
push
out
outsl
in
andl
in
push
popa
popf
test
add
xchg
pop
leave
sbb
pop
in
push
nop
mov
cmp
add
xchg
inc
mov
sub
mov
pop
jb
pop
stc
pop
mov
inc
lahf
lret
shrb
and
into
inc
adc
sbb
cmp
neg
mov
repz
mov
out
fwait
jbe
mov
mov
addr16
loopne
out
cmp
pop
test
test
ret
test
mov
xchg
cmc
xchg
rcl
xlat
fsub
mov
loopne
insb
xchg
mov
pop
mov
push
shlb
sahf
pop
in
xchg
loopne
cwtl
push
mov
jmp
shl
lods
push
in
adc
sub
pop
cmpsb
jne
push
cmp
loopne
scas
js
mov
lods
or
pop
xorl
xorl
mov
adc
scas
jmp
add
movsl
push
aaa
jns
adc
xchg
in
mov
js
or
dec
loopne
das
mov
sbb
or
and
cmp
enter
xor
sub
shlb
push
sub
repnz
mov
jnp
aam
cmp
outsb
cmp
jecxz
jo
and
xor
mov
sub
sti
shll
ss
xor
pop
xchg
ret
sub
cmp
int
pop
jbe
and
dec
negl
mov
jge
adc
lret
adcb
popf
dec
sub
push
insb
sahf
jmp
fsubl
cs
lea
xchg
cwtl
inc
mov
and
dec
xchg
cmp
mov
and
testb
gs
jbe
or
lea
sti
lods
add
pop
lods
cmpsb
xor
or
test
cmp
jb
pop
mov
sub
int3
cmpsl
push
sbb
leave
nop
lods
shll
data16
in
ja
mov
insb
dec
ret
jae
rol
test
jbe
daa
xlat
movsl
mov
cwtl
cmp
test
cmpsb
cmpsb
popf
addr16
dec
sbbb
jnp
mov
xlat
or
pop
notb
sarb
pushf
cmp
add
push
or
mov
test
mov
outsl
popa
out
rcll
xchg
lea
out
outsb
out
cmp
cwtl
add
clc
or
in
ret
inc
push
ljmp
addb
push
data16
fsts
adc
movl
mov
push
or
cmp
add
jmp
cmp
dec
das
pusha
dec
sbbl
sub
not
fwait
sub
inc
test
pop
pop
push
repnz
test
iret
into
pop
xor
cwtl
add
inc
loopne
jae
sub
pop
sub
fistpl
cmp
stos
jge
mov
inc
jae
aad
push
sub
out
mov
pop
imul
aam
imulb
aas
xchg
jmp
mov
dec
lret
inc
enter
repnz
push
in
sbb
or
mov
and
jae
mov
pop
scas
cs
and
mov
in
movsl
pop
add
into
into
jmp
xlat
cmp
jne
les
adc
lds
lods
ss
xchg
sbb
pop
lcall
es
push
jno
fcmovu
cmp
jmp
xchg
lret
in
scas
fwait
or
fsubrs
test
test
test
pop
js
sub
enter
or
outsb
adc
sub
sti
mov
daa
xchg
mov
loope
rcl
mov
or
cwtl
xor
mov
pop
xor
je
fcmovne
jae
lods
xchg
aad
scas
ss
sub
dec
mov
out
jmp
push
sysenter
loopne
imul
sarl
add
dec
or
imul
inc
mov
sub
sti
mov
sbb
lds
test
ret
fnstcw
das
lods
mulb
das
adc
push
ljmp
rcr
lea
cltd
inc
rcr
sub
pop
and
xor
insb
adc
inc
push
in
loopne
pop
sbb
jo
aaa
pop
mov
sbb
push
mov
xor
lea
cli
dec
scas
push
out
jae
cmpsl
cltd
int3
in
fists
cmp
fisubrl
sub
pop
flds
mov
popa
ret
jnp
int3
mov
das
sub
jl
mov
imul
sub
mov
pop
pop
das
sbb
xchg
mov
mov
jecxz
xchg
mov
mov
dec
sub
test
xlat
xchg
nop
xchg
push
mov
mov
stc
je
inc
scas
outsl
lds
in
outsl
int3
movsb
rorl
sbb
fidivs
mov
mov
popa
or
shll
jo
scas
push
leave
loopne
lret
gs
and
lret
pop
mov
sub
les
int3
std
pop
and
or
ret
dec
or
lock
lahf
lds
shrl
mov
in
test
sub
fiadds
les
mov
sub
in
setbe
sbb
jecxz
cltd
fwait
or
mov
lods
xor
fwait
add
cmp
or
pop
jp
in
mov
or
mov
mov
sub
aad
out
cmp
andb
sub
and
cs
push
lea
mov
pop
cltd
jno
loop
leave
in
in
xchg
lds
pop
and
adc
sub
rol
xor
sti
jmp
or
ret
lock
push
cmpsl
xor
jge
std
mov
stos
sti
xchg
and
mov
sbb
divb
scas
mov
sub
js
clc
scas
mov
jno
push
fisttps
fistl
sub
rolb
bound
mov
dec
push
call
aaa
js
xchg
mov
inc
sub
mov
fwait
hlt
into
mov
aaa
arpl
mov
ds
mov
cmpsl
movsb
xchg
xchg
mov
xchg
inc
mov
adc
dec
or
mov
inc
in
mov
inc
bound
push
mov
out
lret
lea
inc
imul
add
pop
sub
ret
mov
sub
scas
cmp
adc
lods
adc
int
add
xchg
mov
repz
lods
mov
dec
fs
in
cmp
dec
xacquire
adc
testl
cmc
fwait
inc
sti
lock
testb
add
addb
mov
push
adc
fadd
pop
push
bound
icebp
mov
loopne
shlb
int
pop
iret
stc
sub
adc
lods
push
out
movsb
into
popf
lods
jl
pop
hlt
sbb
sarb
mov
int
dec
dec
aas
sbb
jb
mov
mov
xchg
pop
hlt
sbb
xor
inc
mov
mov
shlb
cli
dec
cmp
sub
xchg
jns
inc
fwait
inc
or
cltd
inc
and
sub
adc
insb
jle
loopne
sbb
and
nop
test
dec
ja
sub
or
dec
or
push
push
inc
jbe
pop
xor
sbb
mov
test
xchg
lea
xchg
lds
lret
jbe
out
inc
lea
iret
mov
mov
cmp
mov
lock
inc
aaa
cltd
cmpsl
xor
adc
mov
xchg
add
jmp
lods
push
lahf
sar
jge
lahf
cmpsb
or
xchg
fcos
imul
lea
add
xor
daa
imul
xor
call
pop
mov
mov
pushf
or
in
test
out
ja
je
pop
sub
imul
xorl
icebp
lods
daa
test
out
lea
out
enter
push
pushf
sub
dec
xchg
bound
mov
test
scas
pop
mov
mov
pop
loope
stos
outsb
int
pop
test
scas
jne
movsl
icebp
out
daa
outsl
sub
mov
out
mov
stos
lods
jmp
and
daa
push
sub
mov
int
pop
scas
je
pop
push
scas
in
jo
popf
gs
stos
call
cmc
mov
cmp
mov
pop
shlb
loop
lds
sbb
stc
out
scas
jge
mov
sub
lock
mov
fdivrl
pop
ds
push
lret
roll
mov
insb
daa
sbb
dec
mov
mov
dec
or
and
cmpsb
repnz
push
mov
aam
aad
xor
mov
repz
xchg
loopne
pop
fdivp
pusha
lret
jae
repz
mov
pop
movsb
nop
das
pop
jmp
pop
jbe
mov
pop
inc
movsl
pushf
jmp
add
xor
xchg
pushf
ret
das
sbb
aas
int3
xor
popf
daa
negl
dec
cltd
mov
jae
pop
push
xor
sbb
push
mov
dec
test
xchg
repz
popf
in
pushf
fldcw
popa
xor
cmp
lods
call
xor
add
push
cld
xchg
mov
mov
stos
add
fildll
movsl
pop
jmp
or
mov
jmp
into
mov
sbb
imul
lds
mov
scas
sbb
mov
out
jmp
push
sub
and
dec
sub
movsb
lret
out
leave
mov
mov
rep
sbb
adc
lcall
lret
cmp
mov
dec
ret
adc
jmp
mov
int3
cmpsl
dec
in
jb
loopne
and
lods
ljmp
mov
ss
and
movsb
sbb
dec
pop
push
xchg
out
loopne
or
dec
adc
sub
int3
sub
leave
rcr
fistps
adc
out
xchg
aaa
leave
xor
pop
ss
test
mov
pop
push
sub
rcrl
inc
xlat
mov
insb
fwait
xlat
idivl
scas
fnstcw
push
push
outsl
sub
jno
mov
mov
outsl
divl
mov
pop
add
rclb
dec
ret
daa
push
fwait
insl
xchg
adc
in
popf
mov
sbb
loop
push
dec
out
lods
test
jmp
test
mov
movsb
aad
lods
xor
aam
mov
insb
lods
dec
mov
push
ja
cmpsl
loopne
int3
ret
cmp
xor
mov
inc
jb
jecxz
lds
test
fcompl
pop
dec
pop
sub
idiv
sbb
daa
sub
fwait
lods
popf
imul
inc
int
pop
cmc
xor
jl
inc
into
clc
dec
scas
jns
fsubrl
cwtl
icebp
shr
mov
ja
out
std
xor
outsl
or
fdiv
inc
lods
loop
sub
mov
dec
mov
cmp
jae
xchg
lret
pop
mov
mov
das
arpl
push
jae
xchg
iret
loop
jecxz
xchg
mov
sub
addr16
inc
ds
mov
dec
imul
jecxz
and
inc
mov
test
push
aam
jecxz
scas
pop
movsl
mov
xor
mov
mov
fadds
nop
iret
mov
stos
int
xchg
pop
scas
mov
int3
repz
jne
pushf
mov
inc
pop
popf
sbb
xchg
xor
daa
inc
into
inc
mov
jb
inc
mov
jl
in
movsl
mov
xor
out
sub
in
je
cmpsb
xchg
sbb
movsl
rolb
adc
inc
std
pop
inc
sahf
jecxz
xor
jae
pusha
pop
hlt
adc
in
sbb
xor
mov
sub
pop
jns
xchg
into
mov
sub
test
push
orb
incl
cmp
sub
push
test
mov
pop
lea
popa
movsb
out
or
imul
push
sub
sahf
out
mov
mov
xchg
jb
cmp
outsb
inc
cs
dec
xlat
test
cltd
jecxz
loopne
jbe
test
ret
adc
icebp
nop
push
mov
or
aad
push
xchg
lods
sbb
lods
mul
daa
xlat
pop
cmpsl
xlat
cmp
out
or
adc
js
lcall
add
rcrb
sti
fwait
popa
les
rcrl
xlat
cmpsl
dec
xor
cmp
loopne
lock
xlat
push
int
mov
push
or
mov
cmpsl
dec
lods
movsl
insb
hlt
mov
int3
lea
mov
and
mov
pop
dec
xchg
fsts
mov
push
ss
add
iret
cli
mov
mov
and
mov
int3
test
adc
xchg
mov
pop
lds
loopne
jecxz
jge
out
mov
jb
pop
movsl
jmp
mov
xor
sbb
test
icebp
adc
les
pop
or
cmpsl
fnstcw
in
and
and
mov
mov
mov
inc
pop
out
loopne
rolb
sub
test
lods
push
fisttps
and
rolb
dec
jecxz
es
popf
inc
rorl
adc
cwtl
pop
repz
pushf
or
xchg
mov
xor
add
cld
insl
xchg
xlat
fcmove
sub
xchg
xor
insb
in
sbb
mov
popf
nop
in
aam
stos
int3
mov
mov
scas
std
lds
lahf
inc
mov
lret
lcall
shll
cmp
or
movsl
mov
sbb
jne
fmul
sti
pop
or
pushf
lods
test
cmc
insl
ljmp
das
sbb
xor
add
add
push
ficompl
rcrb
cmp
pop
xor
call
pop
lods
cltd
movsb
negb
inc
xchg
shl
jmp
fdivl
repz
arpl
mov
mov
rcrl
test
inc
fadds
sub
xchg
mov
mov
icebp
dec
out
cmp
xchg
nop
popf
notb
ret
jecxz
out
pop
daa
fwait
sbb
in
cld
fldcw
lret
mov
push
cmpb
cmpsl
mov
xchg
gs
lret
jne
pop
pop
rolb
rcl
sub
popa
cmpsl
add
lods
lahf
cmp
negb
inc
ds
sbb
mov
and
dec
hlt
inc
loope
js
es
negb
fwait
cmp
sbbb
mov
lds
stos
add
mov
shrl
adc
fsubrp
lret
out
xchg
xchg
int
sub
fisubrs
mov
sub
inc
inc
mov
sbb
int3
decl
sub
mov
lcall
repz
push
sbb
subl
je
sub
enter
adc
sub
jns
jns
frstor
adc
mov
pop
dec
xor
push
sahf
xor
jno
out
and
hlt
pop
push
inc
lods
aaa
psrad
fs
out
push
test
jmp
repnz
mov
loope
mov
sub
mov
adc
cld
jnp
jb
out
sub
adc
sub
std
gs
dec
int
mov
lds
xor
mov
cltd
les
out
adc
mov
lds
dec
xlat
pop
or
cmp
rol
hlt
or
loopne
rorl
out
scas
jge
andps
cmc
inc
mov
push
adc
outsl
mov
sub
xchg
in
mov
lds
fs
pushf
out
das
int
dec
in
xchg
loopne
and
shll
mov
fwait
mov
add
out
push
in
and
lods
or
mov
or
jmp
scas
insl
pop
dec
lea
cmp
sti
xchg
jp
pop
xchg
dec
jae
mov
das
mov
jg
aaa
mov
mov
das
je
shll
cltd
inc
shll
ja
inc
test
xor
scas
push
loopne,pt
xlat
cli
jg
lds
out
loop
inc
pop
roll
sahf
or
test
out
cltd
and
fnstcw
or
popf
dec
add
push
scas
jge
popa
lods
fidivrl
fstpl
mov
xchg
xor
popf
or
xor
cli
mov
pop
sbb
pushf
xchg
movsl
xchg
mov
dec
mov
pop
repz
mov
sub
fiadds
mov
sub
lea
popa
jecxz
mov
cld
lahf
mov
movsl
push
mov
mulb
cltd
mov
xchg
scas
repnz
pop
test
out
xor
je
scas
sub
xchg
lods
and
std
and
out
in
pushf
std
int
sahf
test
add
mov
test
dec
mov
pushf
sbb
sub
lds
and
inc
sbb
dec
insb
cmp
clc
int3
xorb
ja
push
mov
fwait
aaa
ljmp
repz
ljmp
test
das
popf
sahf
call
mov
sub
inc
jmp
mov
pop
in
jno
xchg
jae
xlat
jns
xchg
hlt
lds
add
jmp
mov
int
mov
mov
ficompl
jg
ret
ret
add
cmp
xlat
sbb
insl
lds
call
sbb
popa
fs
sbb
mov
sub
mov
daa
mov
inc
cmp
cli
stos
vpsubb
push
dec
test
pop
xor
movsb
test
scas
adc
ret
loopne
fiadds
les
test
js
int
cs
imul
fisubrs
sbb
out
out
add
inc
sub
pop
test
sub
sub
movsb
cmp
fsts
daa
push
inc
fdivrs
les
push
mov
lods
js
mov
jb
cmp
in
div
sbb
mov
cmp
js
fistps
sub
pop
pop
nop
xchg
xchg
lock
sub
add
sub
cltd
jp
repz
sbb
xlat
mov
popa
sub
cmpsl
push
xchg
fwait
jmp
in
cmp
pop
movsl
repnz
push
and
mov
es
sub
mov
pop
and
cmpb
pop
pop
add
and
divl
pop
mov
jbe
fisubrs
pop
sub
mov
call
popa
repz
divb
dec
daa
movsl
sbb
jbe
divl
xchg
stos
mov
pop
call
push
loopne
pusha
data16
inc
mov
andl
or
je
adc
fucomp
push
sub
sub
addr16
push
xor
hlt
adc
mov
jp
fdiv
stos
mov
jno
daa
xor
leave
out
lds
fidivs
scas
stos
jp
cwtl
lods
std
xchg
cwtl
sbb
xor
jno
outsb
dec
test
outsb
mov
jae
mov
iret
mov
sarb
ja
mov
and
cmpsb
push
scas
dec
mov
das
repz
scas
mov
aam
push
jg
les
out
shlb
add
cmc
nop
scas
cli
fimuls
jno
cwtl
scas
insl
push
xor
mov
das
and
inc
ret
sbb
lret
mov
out
pop
mov
adc
cmc
cmp
jg
add
leave
push
sub
outsb
mov
das
lods
int
mov
es
push
xchg
lret
ss
popf
pop
test
outsb
dec
mov
aas
or
pushf
sub
jb
lea
or
stos
test
or
lret
lahf
pop
sub
faddl
mov
adc
mov
lods
movsl
nop
and
loop
lahf
fs
or
call
pop
mov
adc
mov
stc
jg
xchg
push
lea
out
sub
mov
int3
sbb
push
popa
xor
fwait
add
cmp
loopne
inc
inc
jnp
es
aam
in
push
clc
pop
xchg
xchg
push
outsb
test
add
daa
scas
outsl
mov
pop
jmp
cmp
movsl
mov
jno
mov
fdivl
jae
js
mov
sbb
and
cwtl
jge
popf
mov
pop
jno
sahf
dec
outsb
cmp
insl
scas
sbb
xlat
movsb
sub
lods
lcall
jno
xchg
cltd
bound
lret
leave
pop
sub
cmp
jno
lret
add
bound
cmp
insb
pop
adc
jecxz
ja
jge
push
jl
sbb
xlat
adc
int3
jle
fmul
push
int
jae
mov
mov
test
xchg
pop
push
jecxz
push
fwait
arpl
mov
jmp
stos
cmp
enter
cmpsl
aaa
xlat
mov
and
lcall
outsl
sbb
jae
sub
rol
mov
sti
lret
ja
add
and
in
shlb
mov
aam
and
xchg
xlat
jae
addr16
and
pushf
push
daa
xor
fwait
cwtl
insb
cmp
pop
cltd
out
aam
and
mov
enter
xchg
insb
pop
pushf
movd
lods
repnz
jo
lds
xchg
adc
push
cmp
int
push
subl
add
and
sti
adc
sub
je
mov
sahf
rcrb
pusha
pop
mov
inc
fsubs
mov
loop
aam
xor
mov
repz
pop
pop
int3
js
push
stc
mov
mov
push
lods
movsl
in
das
mov
or
pusha
and
xorl
movsl
mov
lahf
rolb
ret
scas
lds
pop
sub
jno
mov
dec
inc
lcall
cld
fcmovne
insb
or
fdivrl
test
aad
dec
dec
lods
pushf
jmp
in
fwait
push
cs
inc
int
cs
push
movsb
xlat
sub
pop
lods
pop
sbb
loop
mov
mov
hlt
ret
inc
lcall
sub
popa
jne
dec
sbb
dec
aas
xor
mov
out
ret
dec
inc
fmuls
pop
stos
jb
inc
inc
dec
ds
cmp
cmp
mov
sub
or
sarl
pop
shlb
inc
mov
or
mov
shll
adc
or
repz
mov
mov
mov
xchg
sbb
pusha
lea
dec
xor
pop
sub
sbb
fldln2
lcall
mov
pop
ret
shll
xor
pop
icebp
lea
jae
xchg
push
add
out
ljmp
mov
clc
idivl
mov
push
das
xchg
mull
add
pop
hlt
and
cmpsl
in
insb
mov
add
add
js
mov
mov
ss
iret
lds
imulb
and
daa
pop
addb
xor
test
or
push
dec
xchg
mov
movsl
xchg
imul
xchg
add
mov
dec
rclb
xorb
dec
sbb
jnp
popf
lds
fdivrl
add
mov
pop
cmp
push
inc
movsb
lds
enter
and
jecxz
jnp
push
inc
mov
mov
mov
mov
mov
and
das
ficompl
repz
mov
adc
jns
das
cmp
lods
lcall
lock
int
fcom
dec
in
and
mov
add
iret
cs
fbld
sbb
push
das
rcl
fidivl
jne
cmp
mov
xorb
pavgw
stos
xchg
mov
mov
into
pop
dec
sti
arpl
cmp
dec
and
je
pop
vpmaxsw
push
mov
cmpl
pop
test
test
lcall
inc
pop
mov
pop
mov
into
je
cmp
xchg
pop
mov
mov
mov
sub
push
fnstsw
push
scas
imul
xchg
mov
push
cltd
add
cmc
lret
mov
lods
jge
push
mov
sbb
inc
cmpl
es
push
lock
inc
jmp
sub
cltd
cmc
enter
xor
xor
out
out
sbb
mov
lods
mov
sub
out
or
push
push
xlat
jae
mov
cmpsl
jne
lock
jno
mov
cltd
mov
outsb
mov
push
cltd
jp
clc
mov
mov
push
and
ljmp
cmp
out
mov
xor
sbb
mov
int3
pushf
testb
mov
pop
adc
data16
incl
in
mov
mov
call
jnp
cmpsl
pop
jno
or
mov
lcall
movsb
int3
xchg
adc
and
jno
popf
repz
pop
into
out
push
pop
cmpb
lock
repz
call
inc
sub
movsl
xchg
lods
sbb
mov
pushf
xchg
jmp
orl
aad
shl
jo
in
add
cmp
jmp
xchg
cmp
ljmp
pop
push
mov
mov
inc
dec
out
int
mov
xchg
cmc
push
fwait
je
aam
stos
and
loope
fnsave
push
fnstenv
inc
sbb
mulb
sbb
mov
dec
lods
repnz
push
push
lock
pop
push
and
sbb
addr16
scas
in
push
daa
rolb
adc
mov
mov
pop
pop
clc
lea
jge
lahf
or
loope
pushf
dec
testb
or
sbb
shll
jg
scas
lods
mov
out
insb
in
push
sbb
mov
in
mov
push
int3
lret
loope
mov
cltd
das
and
jle
mov
add
add
mov
jle
adc
ja
inc
xchg
std
popa
push
fsubrl
mov
lret
movsl
lods
pop
adc
mov
mov
pop
cmovle
jo
xor
iret
mov
mov
rorl
cmpl
jnp
mov
les
mov
test
pop
mov
lods
bound
sub
push
jecxz
cmp
fwait
pop
imul
mov
mov
fisttpl
shll
sub
xchg
xchg
scas
sbb
cmp
fsubr
inc
pop
or
repz
xchg
lret
mov
loopne
and
movsb
sbb
and
fsts
xchg
int3
ja
test
or
xchg
sub
inc
enter
jno
or
mov
lods
mov
cltd
jo
insb
mov
mov
mov
lcall
lods
inc
jecxz
mov
lock
mov
pushf
mov
jns
ss
repz
and
repz
pop
je
cwtl
mov
mov
sbb
pop
lcall
pushf
out
push
pop
pop
push
lret
mov
adc
into
leave
mov
jmp
mov
popf
pop
cmp
pop
xchg
jne
hlt
inc
mov
in
push
xor
add
or
mov
mov
rclb
xchg
pop
jne
jmp
fdivr
inc
mov
xchg
imul
mov
inc
aam
insb
pop
xchg
cmpsl
sub
pop
push
movsl
arpl
js
test
mov
outsl
in
into
pop
jmp
insl
inc
cmp
rclb
scas
fidivs
ss
and
push
scas
jp
and
stc
push
gs
sub
cmp
pushf
shlb
insl
mov
lods
movsb
or
in
or
pop
test
dec
or
add
scas
test
mov
movsl
imul
push
cmpsb
mov
sub
in
dec
cmp
cmp
mov
imul
mov
jo
daa
lods
jb
scas
push
pop
mov
mov
fsubl
data16
cmp
stc
hlt
jle
mov
sbb
sub
jbe
xchg
inc
sub
inc
outsl
leave
mov
pop
fs
nop
cmp
ljmp
test
pushf
hlt
sti
int
hlt
popa
inc
subl
pop
sti
or
jb
mov
pop
js
jne
cmpsb
subb
cmp
xchg
hlt
cltd
imul
jmp
fdivp
lods
push
jecxz
es
mov
in
mov
out
mov
cmpsl
sub
sbb
jns
fcomps
lods
orb
insl
jae
xor
sub
jmp
xlat
iret
stos
fucomi
push
cs
cmpsl
in
pop
popa
pop
mov
jnp
mov
in
cmpsl
daa
lahf
xchg
rcll
shlb
xor
inc
aad
mov
mov
inc
inc
xchg
sub
out
int3
hlt
mov
xor
icebp
dec
lahf
repz
imul
mov
mov
add
test
mov
sub
lock
call
pop
mov
cmpsl
xlat
xchg
mov
push
mov
scas
cld
mov
outsb
ret
pop
test
aaa
mov
sbb
lret
rclb
shll
mov
lcall
into
inc
movsb
xchg
pop
dec
sbb
scas
fwait
lods
out
lds
cmp
repnz
xor
cmpsl
lea
xchg
dec
in
int3
sbb
jns
mov
imul
lock
or
dec
outsb
jns
mov
fbld
data16
add
repz
cmp
sbb
push
orb
mov
adc
mov
outsb
lret
mov
mov
insl
lods
jo
int
mov
pop
xor
mov
in
and
mov
rcl
movsl
mov
ljmp
pop
jns
clc
mov
testb
stos
jne
lahf
mov
inc
test
push
mov
adc
mov
pop
xchg
cmc
dec
mov
xchg
push
not
sub
aad
lret
repnz
lcall
jae
mov
sarb
jb
clc
and
pop
xchg
pop
jbe
out
lahf
icebp
movsl
addl
mov
pushf
outsb
xor
dec
xor
fldt
lds
mov
sub
xchg
out
cmpsb
jecxz
cmc
mov
movsb
test
pop
cmp
js
insb
in
sub
aaa
jno
rorb
fidivs
push
xlat
movsl
leave
mov
xlat
mov
daa
xchg
or
cmpsl
sbb
repz
pop
fisttps
fcmovnb
xchg
pop
xchg
inc
pushf
clc
mov
adcb
les
je
lds
inc
inc
jne
mov
aam
fwait
inc
or
arpl
fwait
int
sub
jl
inc
mov
insb
scas
xchg
pop
xchg
jb
call
xchg
or
repz
scas
lods
test
out
xlat
repnz
sub
ljmp
stc
inc
lds
outsb
mov
pop
call
fmul
sti
into
mov
lods
ds
fcompl
shl
loop
jmp
in
movsb
int
sbb
lods
lds
ss
daa
loop
xlat
or
les
std
mov
or
cltd
faddl
sahf
inc
int3
cmp
and
sahf
vmread
fnstcw
mov
push
insb
push
sub
leave
xlat
mov
daa
or
fwait
xchg
lds
inc
inc
jmp
xor
xchg
xor
cmp
jp
sti
xchg
cmpl
xchg
or
inc
mov
mov
stc
insl
xor
js
fmul
sbb
out
sub
enter
dec
mov
in
aas
cmp
push
stc
nop
xor
xchg
jbe
push
inc
in
enter
add
push
cmp
int3
mov
aas
xchg
and
pop
and
mov
aam
mov
pop
push
mov
pop
into
sub
xchg
pusha
and
jg
fildl
movsl
mov
mov
cmp
jl
jne
cmp
sbb
ljmp
popa
lods
dec
inc
mov
push
pop
sub
sub
xlat
pop
sar
mov
mov
pop
and
mov
mov
mov
ret
hlt
loope
add
call
roll
sbb
push
hlt
out
out
lods
dec
outsl
xchg
stos
or
andb
rol
cmpsl
add
int3
addr16
repz
pop
scas
das
add
pop
gs
xchg
or
das
pop
mov
cmpsl
repz
cmp
mov
mov
les
ss
les
sub
sub
or
call
pop
test
push
sub
jbe
pop
cmp
fdivr
pusha
lcall
mov
ret
lret
jbe
test
mov
mov
rcrl
xor
add
xor
repnz
ds
inc
and
push
andl
inc
sbb
cmpsb
daa
aaa
bound
mov
leave
or
jg
outsl
mov
into
fs
sbbb
push
sbb
jo
les
xchg
cmpsl
loopne
lret
in
xchg
inc
mov
sbb
xor
rcll
int
cmp
xchg
lods
pop
xchg
ror
mov
shrl
add
mov
shll
mov
jmp
js
jno
mov
dec
pop
rclb
out
sbb
testl
xchg
push
bound
sbb
push
and
dec
pop
mov
add
push
mov
je
into
int3
lds
stos
sub
mov
mov
push
mov
mov
pop
out
xor
arpl
jmp
je
test
push
pop
jne
lahf
mov
dec
jne
fidivl
fyl2x
daa
add
imul
jl
ljmp
mov
sahf
out
adc
or
jns
inc
ret
mov
add
sub
mov
in
xchg
ja
fisubrs
pop
inc
xor
cmp
xlat
mov
iret
pop
lds
mov
mov
leave
lea
xchg
push
mov
movsb
stc
mov
mov
mov
xor
into
push
iret
outsb
mov
subl
imul
cmp
idivl
jp
sub
in
xchg
shlb
pop
pop
test
aam
sti
leave
int3
mov
pop
imul
iret
sub
outsl
ja
inc
mov
and
jo
lret
das
sbb
inc
stos
and
mov
or
sbb
popf
daa
pop
sub
mov
inc
dec
rorl
addr16
jo
lret
mov
sbb
jbe
negl
in
daa
out
cmp
fisubrl
stos
scas
xor
cmp
movsl
cwtl
outsl
xor
cmc
in
pop
nop
fwait
out
pop
outsb
lds
xchg
sub
push
mov
mov
add
ret
mov
shl
jb
pop
adc
lahf
and
xor
mov
out
inc
jmp
pushf
xlat
add
test
fidivrl
jnp
scas
sti
dec
push
lahf
mov
pusha
add
fsubrs
and
aaa
sbb
jne
scas
fmull
clc
std
or
adc
mov
jmp
into
or
push
lods
sbb
mov
shrl
pop
cmp
popf
repnz
jg
push
insl
cmp
shll
rol
sub
push
js
test
in
iret
in
sub
jp
or
inc
jl
xchg
popf
scas
dec
ja
xor
pop
mov
daa
jb
gs
push
sarb
or
lds
outsl
xchg
mov
add
icebp
push
mov
or
data16
dec
pop
cld
sbb
fcmovnb
adc
mov
aas
xchg
daa
cmp
inc
movsl
jne
flds
sbb
pop
mov
xchg
add
adc
lock
sbb
lds
add
cmpsl
cltd
lds
dec
xchg
push
insl
int3
lods
insl
adc
in
imul
inc
ret
enter
jmp
jb
add
repnz
dec
nop
ret
push
lcall
mov
push
inc
sahf
pop
push
pop
or
mov
pushf
lds
das
cmpsb
test
lds
test
mov
decl
lahf
adc
and
mov
jmp
test
jnp
cld
xchg
int3
cmpsb
adc
aad
dec
xor
push
js
pop
jg
mov
sbb
mov
loopne
and
mov
adc
in
pop
pop
xorb
bnd
add
repz
jmp
cltd
iret
add
into
push
sub
pop
lcall
mov
rcr
mov
xor
int3
mov
dec
dec
lods
cmp
and
sub
xor
fs
mov
sbb
jp
cmp
inc
dec
lret
jb
sub
xchg
mul
push
inc
jecxz
xor
pop
push
push
cmpsl
inc
scas
shll
loopne
lods
sub
cmp
xor
pop
push
jno
or
mov
shl
insb
pop
xor
aas
dec
and
jae
subl
int3
repz
fdivrs
xchg
xor
sub
or
mov
aas
dec
add
fcoml
movsb
pop
filds
push
test
mov
sti
test
and
cli
ficomps
fwait
push
cmp
in
filds
int3
jmp
mov
pop
sbb
ljmp
sub
lods
push
dec
loope
cltd
jmp
inc
pop
fwait
shl
jb
orl
movsl
push
sbbb
mov
negl
daa
xor
jae
movsl
xchg
ja
aam
cmc
dec
mov
test
ss
loope
cmp
pop
or
and
jno
and
jbe
jbe
mov
pop
jo
aad
aam
test
imul
lcall
subb
xchg
cmp
pop
sub
push
push
jmp
mov
lods
lea
lahf
xor
imul
hlt
lahf
xchg
mov
scas
scas
fdivrs
lea
jbe
xchg
adc
push
pop
inc
cltd
or
pop
jmp
mov
mov
pop
xchg
repz
sub
mov
inc
pop
aam
jl
aam
data16
pop
mov
daa
jb
and
mov
sub
mov
mov
jmp
out
adc
lahf
icebp
jge
mov
mov
fwait
xchg
lea
cmc
loopne
cmc
mov
or
dec
mov
jmp
mov
xlat
add
aaa
inc
or
popa
adc
mov
inc
inc
sub
fstps
xchg
cmp
insl
inc
inc
pop
loopne
lea
test
mov
mov
pop
lock
xlat
xor
pop
sub
jb
aaa
mov
test
loop
sbb
scas
outsl
push
cmp
mov
cmp
inc
mov
adc
cmp
ja
push
mov
ss
fnsave
mov
adc
imul
lods
insl
lret
gs
sbb
leave
lret
movsl
xchg
stc
out
outsl
lea
loope
lods
in
mov
cmp
data16
mov
lret
sub
mov
cwtl
pop
movsl
mov
out
and
sub
push
shlb
scas
pop
push
movsb
test
cmc
andl
inc
mov
fwait
out
rcr
repz
movsb
push
push
pop
xchg
jne
inc
in
and
lahf
or
cmp
test
ret
aaa
mov
movl
push
mov
mov
lock
movsl
stos
imull
mov
int3
outsb
sbb
int
lods
xor
push
jne
arpl
sbbl
mov
insb
jle
sub
cs
out
cmpsl
ret
test
add
xor
and
aam
inc
push
mov
dec
ja
clc
add
lea
mov
xchg
outsl
mov
pop
mov
mov
cli
fcmovnu
les
lret
int
pop
pop
test
fdivr
mov
pop
add
push
xchg
inc
sbb
int
jb
mov
data16
mov
stos
and
xor
sub
and
fisttps
call
pop
lea
cmp
pop
mov
pop
mov
add
stc
enter
sub
pop
insb
xchg
xlat
push
xchg
mov
mov
in
jge
fwait
insl
pop
iret
aad
inc
insl
scas
int
ficomps
pop
sub
pushl
xor
mov
dec
fwait
and
push
add
clc
jp
mov
arpl
call
cs
outsb
dec
outsl
mov
sti
ret
insb
jl
or
mov
imul
xor
jbe
clc
adc
inc
add
lds
insl
popa
mov
out
or
scas
jne
inc
mov
pusha
test
int
sub
dec
pop
or
daa
cmp
dec
mov
sbb
pop
xor
je
mov
clc
mov
dec
nop
xor
xlat
cmpsl
les
icebp
dec
inc
aas
scas
andl
inc
or
mov
jmp
shlb
push
jb
and
sbb
testb
pop
cmp
cmp
out
insl
int3
add
push
cmpsl
cld
cs
clc
mov
fwait
mov
repz
leave
lret
mov
mov
loopne
sbb
inc
in
mov
test
adc
push
xchg
fwait
loop
lds
hlt
jle
mov
sbb
mov
inc
mov
pop
push
mov
rolb
arpl
int
loop
jb
lds
pop
insb
adc
jmp
loop
test
in
pop
dec
jl
mov
add
dec
fidivs
out
xor
cld
scas
lds
fsubs
pop
mov
add
in
push
aas
popa
imul
popf
sub
in
sbbb
and
dec
xor
int
or
lods
xor
sub
xchg
vpsllq
jbe
iret
inc
ret
loop
sbb
dec
xchg
xor
int
and
test
jge
xchg
aad
or
in
xchg
scas
std
xchg
mov
or
fcmovu
adc
inc
and
sbb
int
sbb
gs
addr16
mov
pop
xchg
ret
repz
cmp
movsb
push
push
cmpsl
and
jge
mov
inc
lret
xor
ljmp
movsl
dec
sbb
sbb
scas
int3
mov
or
pop
nop
and
cmp
push
pop
sbb
rcpps
aam
movsl
pop
mov
xor
jmp
and
out
int
pop
cmc
ja
push
mov
imul
imul
inc
shl
sub
mov
mov
lret
sahf
mov
stos
cld
cmpsl
out
inc
push
cmpsl
mov
push
mov
xchg
outsl
mov
and
pop
sub
fisubrl
into
and
loopne
test
mov
lahf
jno
xlat
lods
call
ffree
mov
or
mov
xor
sub
loop
stc
lods
jle
bound
insl
lods
adc
pop
scas
and
lahf
leave
insl
cmpsl
push
imul
and
xchg
xchg
cmp
add
fisubrs
out
dec
and
adc
sbb
add
pop
dec
mov
sbb
icebp
or
scas
or
iret
subl
mov
icebp
mov
mov
lds
mov
cwtl
xchg
adc
xchg
cli
jmp
adc
cld
and
fsub
es
cwtl
movsl
xor
xchg
and
daa
mov
cwtl
sub
cld
ja
jmp
jo
push
inc
mov
inc
or
sub
and
and
cmp
movsl
xor
xlat
cmc
add
loopne
sub
or
nop
enter
js
lahf
fcmovb
and
fdivs
sahf
jo
pop
dec
pop
scas
sbb
scas
pop
lds
jbe
dec
pop
dec
psraw
data16
fwait
rcrl
or
out
jecxz
scas
sbb
mov
aam
scas
out
xchg
iret
nop
aaa
in
out
or
push
push
test
and
jns
xchg
jbe
jecxz
call
inc
xlat
aaa
jns
std
and
adc
in
mov
ljmp
movsl
cmp
jb
push
adc
das
mov
cltd
popa
lcall
xchg
dec
mov
push
repnz
mov
out
imul
cmc
fists
repz
cmpsl
sahf
mov
jge
loopne
push
insl
lret
inc
dec
sbb
mov
cli
sahf
jecxz
inc
imul
sbb
int
pop
aad
imul
inc
cmp
add
movsb
mov
xlat
pop
lea
fcompl
in
lods
push
test
int3
mov
rorb
out
test
fxch
outsb
in
and
push
push
adc
in
test
sbb
mov
daa
add
or
push
xchg
and
adc
cwtl
mov
push
mov
add
fadds
aam
or
icebp
movsb
out
ficompl
inc
sub
insl
pop
xor
pop
jae
or
xor
or
xor
cmpl
hlt
lods
insb
sti
inc
lods
outsb
divl
mov
mov
ds
out
sub
dec
and
and
insb
lret
mov
lods
xchg
cmpsl
xlat
ja
sub
jns
jmp
icebp
pop
test
add
and
mov
sbb
push
mov
cs
cli
adc
push
or
mov
sbb
sbb
push
std
mov
pop
in
test
jo
sti
mov
jbe
fsubrs
popa
mov
mov
out
loope
subl
adc
pop
jmp
lods
lds
sbb
lods
stos
xchg
add
pop
loopne
lds
in
cld
lods
adc
sbbb
or
test
cmp
fwait
sti
daa
sbb
stos
data16
movsl
loopne
into
jle
into
and
lahf
mov
mov
lea
aam
pop
orb
add
mov
sub
mov
sbb
rolb
fdivr
fs
adcl
dec
shl
sbb
sbb
mov
dec
mov
cs
ret
sub
rcl
mov
ret
daa
jge
scas
mov
dec
jmp
lods
inc
sub
and
test
outsb
pushf
xchg
pop
mov
cltd
mov
pushf
add
cmp
pop
xchg
in
sbb
jnp
pop
mov
adc
mov
dec
sub
aam
mov
cmpsl
repnz
popa
cmp
mov
jbe
daa
scas
frstor
arpl
mov
push
scas
adc
push
mov
jge
sarl
popa
in
fwait
push
and
sub
mov
mov
pop
jl
test
cs
lods
nop
std
or
out
aam
jbe
call
cmpsl
cmp
jge
pushf
cmp
popf
mov
daa
mov
and
stc
ja
pushf
pop
pop
int
imul
mov
xchg
mov
push
mov
out
pop
subb
mov
outsb
scas
pop
mov
mov
add
fcoml
setg
mov
or
loope
cmp
outsb
xchg
fs
lods
scas
mov
in
int
and
outsb
pushf
push
icebp
out
or
fsubrl
mov
xor
xor
or
lock
xchg
sbb
xlat
push
test
fwait
push
xchg
cwtl
inc
mov
ja
xchg
daa
xchg
push
inc
sub
mov
sbb
pop
xchg
xor
sub
or
pop
mov
scas
mov
dec
movsb
sbb
sub
sub
and
scas
stos
mov
mov
sub
jns
and
mov
popf
xor
lds
das
cltd
sbb
sub
lcall
fldl
cmpsb
pop
dec
popa
fmull
lds
push
fcmovb
inc
fwait
int3
xlat
std
cmpsb
std
mov
sti
pusha
mov
dec
xchg
dec
ss
push
sub
mov
imul
shl
in
fldenv
mov
popf
test
pop
imul
addr16
add
lret
mov
add
lret
and
outsl
test
sbb
xchg
xchg
in
cmpl
in
das
jl
jle
sbb
cmp
lods
loopne
iret
cmpsl
push
gs
xchg
xor
fisttpll
jno
shrl
sahf
aas
lods
pop
jns
test
cmp
test
adc
lds
mov
mov
ror
lods
xchg
sub
sbb
sti
mov
mov
mov
push
and
mov
scas
cmp
icebp
test
jecxz
or
sbb
xor
mov
cltd
int
xor
jmp
pusha
into
adc
insl
xchg
loopne,pt
or
outsl
sbb
push
jb
inc
cmc
mov
imul
xor
lock
mov
js
fstl
jbe
cld
lahf
hlt
jl
fidivrs
ret
mov
and
sbb
pushf
mov
mov
adc
gs
jns
mov
xor
std
xchg
outsl
sbb
mov
inc
fwait
and
popf
add
or
adc
pop
mov
dec
aad
fidivl
mov
fwait
data16
cmp
insb
mov
in
jg
push
pop
xorl
shrl
test
es
push
inc
or
scas
sbb
imul
aaa
mov
mov
sub
stos
test
dec
push
sbb
ret
ljmp
into
mov
cmpsb
popa
js
ret
sbb
daa
loopne
popa
popa
mov
mov
insl
pop
jne
outsl
dec
sub
cmp
sarl
enter
aas
addl
pushf
pop
adc
mov
pop
enter
inc
and
xor
inc
daa
xor
inc
lds
push
inc
mov
inc
push
movsl
fsubrs
jbe
int
inc
xorb
hlt
pop
xchg
mov
jo
imul
mov
push
inc
push
lds
outsl
rcll
sub
fwait
inc
fwait
scas
lahf
ret
mov
repz
cmp
jl
les
test
jl
push
cmpsb
mov
jns
and
or
xchg
scas
rep
jmp
in
insl
test
subl
ret
push
fistps
lret
mov
mov
cmp
cmpsl
sti
sbb
push
sbb
scas
xchg
inc
jnp
xchg
push
jo
lds
dec
xchg
inc
lcall
jmp
arpl
insb
fwait
sbb
outsl
sub
loopne
cltd
movsb
jl
scas
movsb
popf
ss
rcrb
js
sbb
fisttpl
popf
lret
pop
imul
jb
loop
std
in
xchg
loopne
add
dec
jb
sub
xor
je
xor
push
pop
dec
hlt
mov
fs
lds
push
lods
jle
cmp
dec
and
pusha
sahf
daa
scas
int
clc
mov
lret
or
mov
arpl
lahf
lret
adc
addr16
dec
cmc
fcoml
jne
push
lds
lret
cmp
test
add
movsl
inc
xlat
int
ja
test
mov
mov
fldt
cltd
xlat
xchg
call
and
sti
daa
mov
aaa
cmpl
mov
mov
stos
push
loopne
dec
jns
xlat
arpl
in
or
js
xor
adc
jne
sub
lods
push
push
or
test
imul
shrl
add
jbe
sahf
lods
loop
inc
testb
xchg
mov
shll
leave
int
pushf
in
mov
push
iret
adc
popf
setl
adc
in
jle
mov
outsl
push
jns
cmp
fwait
imul
in
iret
xor
cli
jmp
jp
mov
movsb
push
fnstcw
add
cmpsl
clc
jl
sub
insb
add
js
sbb
mov
cltd
pop
and
pusha
enter
jle
out
out
lods
imul
pop
mov
ja
scas
cmp
xor
mov
jecxz
cmp
or
push
xchg
mov
les
xor
dec
and
popa
fdivrl
loopne
cmp
mov
mov
inc
lods
loop
outsb
stos
mov
ja
pop
stos
aam
pop
andl
pusha
pop
out
movsl
mov
and
nop
adc
mov
aam
mov
lock
mov
mov
pop
and
stos
push
fdivrl
aad
xchg
sahf
mov
repz
cmc
inc
ja
das
mov
pop
adc
or
pusha
out
loopne
sbb
fldz
push
or
nop
and
gs
push
aaa
sub
jl
pop
add
lea
adc
dec
scas
xchg
fisttpl
pop
movsl
stos
out
iret
fs
repnz
into
jl
xor
inc
iret
std
mov
popf
je
sarl
stos
fcomi
sbb
arpl
in
sub
lret
dec
inc
loope
movsb
and
push
add
sbb
xor
icebp
sbbl
into
mov
add
sbb
insb
pop
fcompl
ret
arpl
lods
scas
popf
pop
decl
mov
pop
dec
jge
out
jb
mov
mov
lods
dec
pop
cmp
int
lret
std
pop
in
lods
daa
call
push
in
pop
leave
pop
lds
xor
insl
das
push
stos
frstor
cld
movsl
inc
sub
insb
xlat
mov
xor
fiadds
scas
fwait
pop
pop
in
or
cltd
pop
cmp
frstor
cmp
xchg
xchg
inc
out
pop
jge
mov
nop
cmpsb
mov
mov
jb
pop
add
add
and
sbb
test
je
fcmovnb
andb
cli
in
mov
imul
sbb
es
lods
std
mov
or
mov
fsubl
fsubs
push
test
loop
pop
push
je
pop
xor
mov
mov
arpl
pop
outsl
jmp
add
sti
sub
into
pop
jmp
cmp
mov
in
pop
outsl
mov
into
in
adc
cmp
dec
shrd
and
ss
add
sbb
add
int3
inc
lods
add
mov
gs
fisubl
fsub
shll
dec
or
pop
scas
rolb
test
insl
pop
repnz
dec
and
lods
es
inc
sbb
and
jo
loopne
pop
inc
and
xor
adc
mov
mov
inc
gs
lret
scas
in
sti
sub
test
add
xor
adc
sub
pop
mov
adc
or
lods
cmp
aad
cmp
mov
fucomi
mov
sub
ja
xchg
scas
mov
cmp
sbb
int3
fwait
scas
or
sub
ret
ja
mov
test
mov
mov
sti
popf
lea
test
das
sbb
mov
mov
adc
loopne
loop
mov
rcl
cmpsl
decb
pop
mov
daa
jne
sbb
loop
je
adc
imul
push
insb
sti
pop
ja
sbb
pop
mov
sbb
inc
mov
mov
mov
cmpsl
or
lds
fwait
clc
dec
in
or
add
mov
arpl
addr16
sbb
mov
mov
aaa
int
or
out
test
xchg
repz
jmp
insb
out
push
mov
jbe
mov
jl
push
cmp
popf
pop
xlat
sbb
outsl
adc
cmpsb
stos
out
mov
pushw
stos
xor
push
shlb
lcall
mov
jae
xchg
jge
sbb
mov
jl
or
outsl
add
xchg
psubsb
push
xchg
fwait
js
repnz
ret
idiv
ret
fidivrl
push
xchg
xor
cmc
lods
xchg
lds
int
push
pop
xchg
icebp
and
xchg
pop
cmpsl
jo
and
fldcw
mov
inc
lods
xchg
leave
mov
cltd
jb
lea
cmp
aas
xor
outsb
mov
daa
imul
scas
int
and
iret
stc
sub
jp
sbb
cmpsb
aad
rep
lea
cmp
mov
aaa
dec
popf
mov
adc
xchg
pop
mov
movsb
and
outsl
jae
xor
jae
and
jb
test
les
cs
jne
es
test
pop
test
test
cltd
cmpsl
nop
or
xchg
jecxz
cwtl
or
imul
cmpsl
and
lods
sahf
aam
and
test
sbb
add
cmp
xorl
sbb
ficoml
xor
aas
in
pop
or
fstpl
sub
in
sti
call
in
insb
add
and
pop
mov
cltd
pop
fsubrl
rorb
add
mov
int3
jne
mov
adc
data16
ss
jge
andb
stos
sub
xchg
mov
mov
xor
popf
or
jecxz
outsl
dec
jb
xchg
xchg
mov
lds
cmc
pop
dec
sbb
sub
insl
rcll
fcmovne
lods
xor
insb
lods
scas
rcll
or
ss
inc
pop
pop
push
xor
ja
fwait
stos
cmpsl
pop
in
push
ret
mov
repz
movsb
ret
mov
or
sbb
es
movb
lahf
in
enter
mov
xchg
aam
cmpsl
mov
cmp
pushf
xchg
mov
push
sub
inc
cld
mov
out
pop
mov
or
or
popa
xor
cmp
cli
fsubrl
lods
lcall
hlt
les
cmpsl
push
mov
jo
in
jmp
shlb
in
mov
jmp
and
in
movsb
rep
inc
in
mov
cs
outsl
mov
cmp
lods
dec
in
sub
insl
outsl
add
sub
sbb
jmp
xor
outsl
mov
add
test
pusha
imul
jns
or
mov
push
stos
jbe
paddsb
sbb
mov
mov
aad
mov
inc
cltd
sti
int
test
sub
scas
loope
mov
test
outsb
and
or
dec
dec
repz
jmp
xchg
iret
push
xor
ss
dec
fcoms
data16
fnstsw
sbb
dec
cmp
push
inc
movsb
aas
dec
sbb
arpl
daa
cmp
cmpsl
sub
pop
test
es
push
insb
xlat
mov
xor
jmp
add
cmp
or
jbe
jmp
or
push
movsl
jne
int3
xchg
sbb
pop
test
jle
adc
imul
pop
icebp
ret
dec
fildll
cli
imulb
push
pop
mov
xchg
xchg
fs
jae
lods
insb
pop
test
and
xor
test
arpl
xor
out
mov
test
bound
jb
dec
jo
mov
in
leave
mov
pop
mov
aam
mov
sti
jle
fwait
mov
into
daa
mov
int
pop
out
sbb
outsl
push
psubsb
idivl
jmp
add
push
enter
aas
or
adc
mov
ret
outsl
sti
inc
lahf
sahf
inc
int
fldt
pop
sbb
hlt
sub
cmpsl
adc
stc
scas
call
jbe
arpl
add
cmpsl
test
xchg
xchg
popf
pop
push
inc
int
sbb
mov
add
push
js
pusha
sbb
jo
and
pop
popf
cwtl
pop
imul
fsts
and
mov
shrl
sub
mov
lret
mov
xor
pop
jmp
fdiv
add
fisubs
sarl
mov
mov
mov
sub
negl
mov
stc
xorl
pushf
mov
xor
xchg
cmp
je
jbe
roll
jmp
sbb
je
movsb
ja
sbb
into
mov
dec
sbb
pop
stc
arpl
add
push
imul
push
fistps
jne
pop
or
in
pop
add
lret
pop
pop
test
jnp
mov
mov
mov
out
pop
xchg
or
xchg
or
rcr
push
mov
mov
mov
fistpl
dec
add
and
in
sbb
push
enter
leave
push
sbb
dec
add
cltd
cmp
mov
pop
fmulp
in
push
mov
in
test
outsb
test
push
sti
js
orb
mov
negb
test
jo
or
sub
xchg
test
sub
or
add
gs
lods
push
sbb
sub
insb
add
add
adc
aas
stos
lock
shlb
loope
popf
or
and
or
sbb
test
pop
dec
add
mov
in
hlt
mov
dec
xchg
js
mov
stos
sti
subb
test
mulb
add
push
popa
mov
call
sbb
mov
lds
fistps
push
nop
mov
jle
pop
test
jecxz
adc
jp
scas
mov
popf
pop
dec
pop
or
pop
pop
mov
int3
je
sbb
push
enter
ficoms
add
jo
cwtl
push
pop
das
xchg
mov
mov
push
jne
ret
jo
sbb
mov
into
mov
imul
lahf
jmp
fwait
push
cwtl
mov
aam
cmpsl
fwait
adc
call
dec
mov
outsl
testl
shrl
mov
adc
es
inc
rorb
mov
dec
rclb
lret
add
mov
sub
scas
das
es
cwtl
insl
int3
iret
mov
fcmove
aad
test
in
stos
sub
stos
pop
test
fdivr
pop
jbe
mov
fwait
stos
ja
ds
mov
notl
mov
xchg
ss
sbb
push
cltd
xchg
lret
sub
outsl
and
lds
movsb
pop
sar
in
outsl
xor
into
inc
sti
jae
out
ljmp
int
xchg
movsb
mov
scas
pop
cmpsl
mov
out
fwait
push
adc
jae
test
push
jns
ja
pop
bound
mov
js
add
pop
movsl
popf
push
loop
loopne
andl
xchg
jle
out
jmp
loopne
mov
inc
pop
or
jmp
repz
mov
stc
cmpsl
xchg
mov
jp
pop
mov
lcall
pop
pop
jl
sti
rol
leave
sahf
mov
xchg
dec
test
lods
sarb
pusha
pop
outsb
add
jo
xchg
mov
cmp
xchg
stos
hlt
add
test
mov
test
adc
lds
and
mov
test
lods
pop
lods
flds
in
lahf
push
int3
push
fwait
sub
insb
mov
mov
pop
mov
adc
out
sbb
xchg
in
sbb
and
repnz
movsb
stos
and
stos
sbb
int
mov
movsl
sub
popf
mov
mov
repz
loopne
inc
add
jnp
add
lea
sbb
roll
repnz
xor
sbb
xchg
cld
sbb
test
aad
mov
out
mov
stos
xchg
or
pop
pushf
movsb
cltd
bound
fsts
pop
pop
int
test
out
add
xor
loope
ja
sbb
das
stos
cmpsl
lcall
mov
mov
xchg
lea
pop
les
lret
add
les
cmp
in
mov
or
jne
arpl
in
jle
pop
in
sub
dec
push
imul
cltd
into
sbb
loopne
jecxz
insb
stos
jge
or
lret
dec
sbb
cmc
push
cmp
int
outsb
dec
push
test
push
ret
adc
movsb
cmp
and
nop
push
int
cmp
scas
mov
adc
pop
lods
int
mov
pop
hlt
lret
jp
pop
pop
inc
test
rorb
jmp
and
cs
push
sbb
subl
xchg
stos
nop
sub
mov
xor
lahf
lret
fstpt
or
insl
scas
xchg
out
lds
dec
test
mov
push
in
scas
add
fistl
fildl
push
mov
shll
cltd
rcrl
fwait
lea
ret
popa
push
hlt
dec
xlat
cltd
inc
jl
push
push
orb
movsb
repnz
nop
pop
mov
repz
and
mov
out
lods
in
fsubp
popf
and
lds
inc
outsb
in
aas
pop
or
in
add
stos
lret
add
cwtl
sti
in
mov
pop
loope
mov
and
ror
xorl
int
mov
repz
mov
and
jp
push
movsl
xchg
imul
sub
pop
addb
sbb
cltd
and
add
ret
mov
jge
push
and
xor
mov
mov
je
inc
mov
fwait
sub
mov
adc
sbb
popf
insb
inc
les
sub
mov
lods
loopne
jnp
ljmp
insb
inc
int
lods
insb
mov
ficoml
dec
lods
jbe
test
ficoml
fdivl
scas
clc
mov
inc
in
sub
shlb
dec
pop
cmp
movsb
xchg
inc
sub
inc
loopne
daa
loop
inc
lds
mov
pop
inc
lock
cmpsl
insl
push
push
mov
sub
adc
dec
jo
mov
cmpsl
pushf
sub
and
mov
lods
in
loope
cmp
sbb
xlat
sbbl
fwait
mov
sbb
pop
std
call
popa
sahf
sbb
inc
stc
push
outsb
scas
jo
adc
cld
out
pop
imul
push
jle
xor
adc
sbb
je
cmp
int
dec
sti
popa
lods
jmp
sbb
pop
xchg
fldcw
cmp
test
push
fstps
lods
mov
popf
lcall
add
out
lret
mov
pushf
xchg
popf
mov
xchg
outsl
sub
daa
xchg
adc
ret
sbb
jns
inc
mov
sahf
sub
ljmp
mov
daa
fwait
mov
lods
push
pushl
pop
dec
popf
mov
sbb
mov
pop
in
pushf
int3
mov
dec
lods
aaa
repnz
pop
jo
fld
fdivl
mov
loopne
add
hlt
imull
cmpsl
lods
daa
mov
pop
movsb
add
jmp
xchg
cmc
imull
int
ficompl
sbb
jge
sbb
pop
lds
sbb
sti
mov
dec
mov
addl
into
aam
loopne
or
out
dec
xor
push
popf
andl
pop
inc
push
ds
cmpsl
xchg
popa
xor
sbb
mov
into
push
push
or
cwtl
sub
scas
enter
jo
mov
push
lds
test
dec
and
lds
sbb
mov
dec
sub
out
into
sbb
sbb
dec
out
push
mov
popa
repz
movsb
fdivs
sbb
hlt
loopne
mov
cmpsl
inc
cmc
test
pop
jb
jno
sub
popf
shrl
dec
push
xchg
cmpsl
push
or
ror
dec
aas
xor
pop
stc
and
inc
mov
xchg
sti
mov
push
fs
adc
pop
mov
cmp
push
mov
mov
es
sub
mov
aad
mov
dec
sub
stos
jb
pusha
xchg
and
mov
jne
xor
push
mov
sbb
push
and
lods
jbe
fidivrs
or
lods
adc
scas
inc
adc
pop
mov
sahf
enter
dec
scas
xchg
mov
jno
pop
fldt
daa
push
jbe
cs
std
adc
push
xchg
jecxz
jb
aam
mov
sbb
adc
fisubs
popa
xchg
lea
test
adcb
sub
jg
pop
notl
fldcw
movsl
and
jl
inc
dec
shlb
push
lds
xchg
sub
pop
je
push
mov
stos
lcall
clc
test
roll
or
hlt
add
pslld
jbe
mov
xchg
or
mov
test
add
sbb
push
pop
cld
lea
lahf
add
pop
loope
pop
lcall
icebp
jo
sbb
xchg
js
out
fldt
push
jp
lcall
lcall
fstps
sbb
push
xchg
cli
cs
es
fstl
imul
arpl
inc
mov
fnstcw
push
andl
pushf
fsubl
sahf
popa
scas
fwait
mov
sub
hlt
pop
mov
loopne
pop
scas
mov
pop
mov
clc
out
arpl
sbb
push
int3
mov
pop
lea
and
sbb
mov
insb
lods
rcrb
push
sti
into
lcall
mov
enter
sarb
insb
cld
test
mul
adc
int3
pushf
aam
cltd
xchg
add
inc
fstpl
lods
push
loope
addr16
push
ret
jp
cli
mov
adc
imul
ret
cmp
lods
adcl
pop
cmp
jb
add
sbb
scas
jp
jecxz
jge
insl
shlb
call
repnz
mov
mov
adc
lea
sbb
ror
sbb
in
mov
test
cmp
push
adc
leave
sub
mov
pop
sub
or
mov
sub
or
jbe
lods
lret
and
inc
jmp
mov
sub
das
sub
mov
inc
inc
dec
xchg
in
pop
test
clc
xlat
push
in
pop
pop
int
js
int
pop
outsb
sbb
sbb
shll
push
adc
fld
scas
jmp
testl
fsubrs
xchg
cmp
add
xchg
jecxz
sub
int
int
mov
mov
dec
cwtl
push
adc
dec
mov
pop
hlt
sub
mov
mov
out
imul
jae
in
in
cmp
out
cmc
mov
loopne
pop
jbe
in
test
pop
lods
mov
inc
pop
xlat
popf
push
addr16
aad
mov
test
add
push
mov
inc
mov
cld
loopne
daa
add
call
cld
inc
test
cmpsb
push
int
mov
or
in
into
ffree
mov
das
lods
xor
stos
pop
fildl
pusha
add
mov
jo
in
sbb
shlb
sbb
mov
jp
repnz
mov
xor
inc
jg
scas
add
icebp
jae
cli
mov
sub
ret
mov
mov
dec
inc
pop
or
loope
clc
lret
leave
out
icebp
xlat
lret
popf
pop
mov
pop
cld
cmpsl
add
dec
int
push
movsb
jge
cli
xchg
loop
inc
or
and
out
js
xlat
dec
stc
scas
or
xor
ret
xor
adc
jo
int
scas
push
outsb
and
push
test
sub
inc
cwtl
add
scas
loope
lcall
mov
cmpsb
aad
add
iret
lock
repz
xchg
or
fldl
or
das
movsl
nop
cmp
cmpsb
xor
test
daa
ret
mov
out
jecxz
int
test
cmpsb
loopne
movsl
shrl
mov
and
dec
xchg
xor
lds
loopne,pn
jae
sti
push
sbb
sbb
mov
out
daa
mov
das
pop
push
xor
divl
imul
insl
cs
add
sub
and
inc
fstl
mov
fistpl
gs
cmpsb
loopne
pop
xor
xchg
insb
pop
adc
jp
dec
xlat
rorb
fwait
hlt
jg
mov
cwtl
or
fisubs
hlt
test
inc
sub
fwait
sub
sarl
mov
gs
sbb
and
xchg
add
mov
je
push
in
or
mov
add
scas
fwait
inc
lods
test
ss
movsl
mov
nopl
add
les
insb
sub
push
adc
popf
mov
lods
cmpsl
test
mov
mov
sub
sbb
cmpsl
cmpsb
enter
test
adc
or
mov
daa
aam
aaa
inc
mov
daa
scas
loop
repnz
inc
mov
push
xlat
xchg
outsb
and
cmc
xchg
outsb
push
in
jle
xchg
ficomps
push
adc
jmp
daa
jmp
daa
xchg
test
push
jo
movsb
das
movsb
pop
outsb
int
in
push
jmp
test
sarb
push
cltd
xor
jge
cmpb
pop
je
mov
out
test
lods
xor
adc
sbb
fimull
cld
mov
add
dec
jns
pop
scas
jo
xchg
cmpsb
dec
out
lock
std
repz
xchg
cmp
push
fldcw
pop
fwait
daa
je
imul
test
cmp
and
inc
dec
adcl
loope
xlat
sbb
into
xchg
xchg
lahf
cmc
lea
call
xchg
dec
out
int3
lock
or
adcl
add
inc
fwait
xchg
test
sahf
scas
adc
pop
cmpsb
inc
sbb
cmp
xchg
les
mov
cmpl
repz
test
and
mov
stc
jle
scas
xchg
dec
daa
add
lret
cmp
jb
loopne
loope
xor
jne
inc
std
movsb
mov
push
jb
mov
int3
testl
rcll
push
pop
in
cmpsl
fcoms
push
mov
scas
xorb
int
xor
adc
daa
and
outsb
int
pop
test
or
mov
lahf
dec
mov
lret
mov
iret
dec
loop
sub
and
ss
ds
sub
nop
mov
daa
mov
movsb
push
int3
push
mov
mov
jl
cli
int
and
push
sub
testb
adc
lods
enter
mov
fsubl
lods
les
mov
mov
int3
in
sub
arpl
push
or
and
mov
popf
mov
mov
das
lods
stos
mov
or
cld
inc
sub
stos
into
movsl
jecxz
fdivl
adc
mov
push
int
fnstsw
jecxz
push
dec
out
push
dec
pop
and
test
xlat
mov
sahf
dec
ret
mov
movsb
xchg
test
cmpsl
xchg
pop
add
add
cmp
cmpsl
or
fstpl
and
jg
sub
cwtl
xchg
stc
pop
mov
sti
sbb
dec
cmp
xor
lds
or
sub
pushf
sahf
lret
scas
insb
mov
pop
in
movsb
pop
fwait
pop
in
in
mov
jmp
daa
ret
lods
sahf
aad
fnstsw
push
fsubl
push
hlt
ljmp
scas
outsl
push
scas
test
xchg
inc
fcmovnb
pop
negb
mov
addl
ja
mov
aas
imul
subl
jbe
sub
push
mov
jae
das
xor
mov
stc
icebp
mov
or
pop
add
cmpl
xlat
push
test
cmpsb
pop
gs
xor
mov
scas
adc
cmpsl
mov
mov
femms
xor
lods
inc
mov
dec
cmp
in
in
lea
dec
pop
loopne
ret
dec
sub
std
sbb
jb
push
sbb
loopne
adc
inc
mov
fcompl
sbb
add
test
shrl
nop
push
pop
pop
pop
aad
hlt
mov
fimuls
push
in
scas
mov
popf
out
push
in
lods
xlat
pop
sub
add
scas
movsb
stos
push
pusha
mov
mov
fdivrs
push
mov
out
shrb
aas
fdivr
out
addr16
scas
insb
pop
stos
sub
cld
ficompl
out
loopne
call
int
icebp
mov
lret
adc
lock
mov
leave
popa
pop
pop
int3
js
push
mov
sbb
mov
xor
movsb
aam
mov
int3
inc
add
ja
xchg
dec
mov
adc
int
popf
pop
int3
hlt
fwait
cltd
adc
sahf
dec
pop
mov
mov
in
and
or
jp
add
mov
mov
dec
dec
shrl
mov
mov
rorb
xor
int
xchg
fdivl
pop
lds
and
add
and
pop
hlt
mov
fistpl
das
add
int
test
jbe
or
mov
aaa
mov
push
mov
xor
push
pop
push
or
jle
sub
inc
iret
int
mov
call
imul
divb
sbb
mov
mov
jo
or
pop
push
mov
pop
dec
xchg
roll
mov
mov
mov
test
rcrl
push
cltd
mov
dec
dec
sub
cmp
popa
sahf
pop
aaa
cwtl
outsl
sar
or
inc
test
call
mov
ljmp
cmp
popf
in
test
push
cmpsb
sub
sub
pop
sub
in
loopne
and
mov
fisttpl
stos
mov
or
icebp
xor
test
xlat
stc
ja
test
push
scas
lea
jno
pop
cmp
shll
outsb
sbb
ror
popf
push
or
xorl
stc
daa
into
sbb
or
and
mulb
or
xchg
fwait
cs
mov
push
lods
xchg
and
pushf
ffreep
inc
xchg
int3
sbb
pop
lea
xchg
sub
mov
enter
or
in
sahf
icebp
pop
outsb
pop
xchg
jnp
pop
mov
mov
and
adc
xlat
and
popf
push
fdivs
aas
std
addr16
mov
mov
mov
lahf
repnz
into
repz
mov
xlat
mov
daa
and
push
popf
adc
mov
fldl
imulb
or
fld
or
mov
std
or
fsubrs
scas
cmp
xor
cmp
sbb
popf
aad
mov
pop
mov
fwait
adc
dec
scas
mov
xor
hlt
movsl
sub
in
sbb
cmp
dec
in
clc
shrb
cmpsl
jae
scas
lods
mov
testb
ja
loopne
inc
fnsave
hlt
cltd
adc
jle
push
je
aas
arpl
test
jb
jle
jmp
and
mov
insl
stc
mov
iret
xlat
sbbb
cmpb
ja
movsb
lock
repz
sbb
mov
push
mov
push
xchg
sti
or
push
aad
call
imul
or
imul
adc
cmp
popf
fstl
sbb
mov
adc
add
or
mulb
xlat
inc
jb
xor
mov
popa
inc
sti
mov
insl
mov
mov
pusha
cmp
mov
and
dec
lea
xor
mov
lea
push
cmp
or
xor
fwait
dec
xchg
mov
dec
pop
fmulp
jb
or
fwait
pusha
in
cltd
in
dec
mov
jns
mov
dec
and
mov
clc
addl
mov
adc
or
into
jl
scas
and
push
testl
adc
jb
popf
loop
out
imul
into
ss
pop
fcom
sbb
adc
xchg
shl
fwait
xor
les
dec
out
mov
jne
int
mov
push
push
ss
xchg
cltd
jl
cmpsb
or
mov
mov
adc
mov
int3
sub
mov
addr16
cltd
and
mov
mov
sub
or
xchg
das
mov
mov
jne
or
subb
ljmp
adc
pop
aas
in
sbb
int
test
or
xor
push
inc
sub
test
int
lret
pop
push
sbb
cmc
adc
mov
cmp
dec
fisubrl
dec
mov
loopne
cmp
ficompl
test
fcoml
hlt
or
sub
cmp
cltd
test
pop
sbb
pop
jg
fsts
jb
leave
xchg
data16
dec
xlat
stos
mov
icebp
adc
add
sub
cltd
dec
sbb
fdivl
lds
cmp
xchg
jb
scas
inc
in
jns
test
jo
test
mov
mov
mov
xchg
sti
mov
dec
hlt
push
fstps
sbb
cmp
jle
or
mov
aaa
dec
jo
loop
push
int3
sub
pop
ss
cmp
mov
push
cmpl
stc
push
aam
fdivrs
add
mov
fisttpll
push
and
int
rorl
repz
testl
lock
mov
arpl
lds
dec
sub
pop
mov
fisubrl
mov
inc
push
add
sahf
mov
rorl
push
jp
xchg
mov
pop
cmpsb
das
mov
hlt
mov
arpl
mov
in
in
orb
cmpsl
scas
je
cmpsl
pop
imul
fdivrl
scas
adc
stc
mov
imul
mov
dec
sahf
push
cmp
daa
loopne
repz
mov
out
dec
test
mov
mov
dec
icebp
push
push
inc
and
movsb
popf
jbe
loop
mov
dec
xor
mov
stc
or
fs
rcrb
lcall
xor
xchg
aas
lds
dec
in
sub
mov
xchg
fistpl
pop
div
popa
shl
lcall
scas
and
js
xor
data16
inc
sbb
test
shll
jbe
ja
pop
lcall
rcrb
pop
stos
xchg
sahf
cs
lret
cld
mov
mov
mov
pop
clc
popa
cld
mov
xor
xchg
push
test
lock
loop
lcall
rol
cltd
fdivrs
push
sub
pop
fstp
and
add
jmp
ss
repz
cmp
inc
cmp
stos
mov
sub
push
fisubl
jns
mov
sbb
dec
out
push
mov
dec
push
scas
add
ljmp
sbb
imul
dec
popf
mov
or
or
gs
xchg
sar
xor
dec
mov
xchg
aam
mov
sahf
lock
movsl
jle
mov
jmp
pop
xlat
sub
or
cmpsl
sub
arpl
mov
mov
lods
ffreep
lods
sub
fstpl
rcr
cmp
mov
fistpl
imul
xchg
pop
pop
test
and
hlt
mov
stos
dec
test
push
pushf
stc
dec
icebp
adc
dec
movsb
fldl
neg
loop
or
sub
dec
xchg
data16
imul
xor
rcrl
add
dec
stc
add
arpl
dec
mov
andl
scas
in
mov
mov
out
jmp
mov
xchg
insb
jl
imul
pop
sbb
and
and
push
mov
xor
and
and
mov
cwtl
xor
into
sbb
cmp
and
lahf
cli
cmpsb
adc
in
or
enter
push
lret
push
adc
fisubrs
dec
sti
fnsave
mov
mov
lods
mov
loopne
nop
loopne,pt
sub
test
jne
mov
mov
pop
decl
pop
loop
sbb
aaa
ss
mov
lahf
in
call
dec
sub
xchg
inc
iret
cli
and
rcrl
inc
std
cbtw
adc
fdivrl
pushf
lods
shrb
mov
popf
sub
call
mov
jg
pop
push
mov
push
out
lods
pop
and
cmc
sbb
dec
cltd
xor
inc
in
sub
sub
scas
lods
fisubrl
jmp
mov
jb
idivb
sub
bound
or
jne
mov
out
cmpsl
pop
fs
ja
cmp
or
outsl
push
das
push
fdiv
inc
jo
test
daa
sub
sbb
sti
sub
xor
and
inc
in
mov
inc
mov
cmpsb
dec
inc
xor
rcrb
arpl
popf
push
or
lret
cmovo
repz
mov
andps
movsb
hlt
ljmp
aam
mov
mov
in
cmp
cltd
test
mov
mov
insl
insb
cmp
popl
and
jne
js
mov
addl
cs
push
mov
and
xor
cmpsl
pop
popf
lods
mov
das
gs
lea
push
loop
fstl
scas
int
lods
xchg
or
filds
into
lods
daa
cli
pop
push
mov
stos
mov
les
xchg
xor
adc
jbe
imul
scas
insb
jge
xchg
jo
pop
dec
jae
sarl
test
int3
dec
movsl
arpl
adc
loope
mov
es
inc
cmp
xchg
in
popf
cmp
mov
add
lea
addr16
mov
enter
pop
fcoms
adc
push
mov
xchg
arpl
adc
mov
out
mov
mov
cmpsb
jo
movsb
rorl
push
jns
mov
cmpb
loopne
pop
xchg
push
movsb
mov
mov
fwait
mov
arpl
outsl
or
aad
jne
ja
orb
mov
add
add
stc
mov
stos
cmp
cld
test
jno
rcl
pushf
pop
jns
cltd
push
or
inc
or
popa
dec
sarl
and
pop
cld
jae
stos
in
sbb
aaa
mov
jmp
movsl
mov
push
stc
nop
or
mov
xchg
pop
rep
dec
mov
cmp
or
inc
ss
jnp
decl
mov
mov
cmp
inc
add
mov
and
lock
dec
mov
cmp
mov
dec
inc
jge
rcll
and
or
mov
outsl
adc
aas
mov
xor
fstpt
leave
jecxz
cmpsb
lods
hlt
mov
sub
jb
mov
testl
clc
jo
rcll
mov
ss
int
mov
xchg
sbb
jmp
in
jae
lods
das
subl
or
inc
mov
in
outsl
sbb
mov
lcall
enter
outsl
fisttps
rcr
mov
test
das
pop
test
mov
sbb
push
mov
lods
sub
data16
pop
hlt
lret
xchg
cmpb
mov
lods
cmp
int
or
or
decl
xor
mov
sbb
test
fs
pop
jb
aas
cld
xlat
and
push
mov
mov
outsl
aam
fsubs
push
mov
add
inc
cmpsl
lods
xchg
jmp
outsl
test
inc
mov
mov
test
lock
dec
rcrb
fildl
jbe
sbb
and
cmc
mov
js
cld
test
outsb
scas
xchg
in
repz
dec
jne
pop
inc
and
and
in
xor
sub
sub
pop
cld
xorl
xor
mov
ficoms
addr16
pushf
mov
cmpsl
fnstcw
loopne
insl
lret
nop
loopne
pop
notb
jg
jae
add
xchg
lods
out
sub
arpl
xchg
idivb
inc
adc
add
sbb
fidivs
ja
lds
daa
fwait
testl
pop
mov
shll
inc
inc
cmp
sti
fnstsw
xchg
pusha
add
outsb
add
int
call
arpl
clc
lret
data16
jns
jbe
enter
outsb
clc
adc
and
adc
and
imul
pushf
mov
out
adc
jmp
xchg
scas
mov
cmp
movsb
push
jae
sbb
repnz
xchg
hlt
add
in
mov
fwait
mov
jmp
call
pop
enter
xor
fstp
push
movsb
jecxz
movsb
outsl
push
rorb
into
fisubrs
hlt
pop
clc
cmp
sarb
add
test
inc
xchg
adc
mov
cmpsl
mov
and
int3
ja
or
push
fnstsw
cltd
movsb
or
in
into
cwtl
lret
ret
xor
lcall
xorl
loop
cmpb
nop
stos
xchg
pop
out
fwait
inc
pop
inc
loop
scas
sub
scas
cmpsl
sahf
test
pop
rcr
shlb
jl
pushf
test
test
or
decb
mov
daa
mov
adc
imul
inc
pushf
jl
inc
aam
ss
lods
dec
pop
pop
cltd
mov
or
inc
mov
mov
ret
inc
pop
jae
mov
cs
test
xchg
or
outsl
pop
mov
lods
std
scas
pop
add
mov
mov
push
pop
ficompl
insb
mov
aam
xor
arpl
mov
jo
sub
test
xchg
inc
fwait
and
sbb
xor
ret
xor
loop
mulb
mov
mov
mov
adc
mov
xchg
dec
jns
inc
orl
cmc
mov
repnz
incl
sbb
rcpps
mov
add
dec
mov
push
cmp
stos
mov
cwtl
jb
loop
sbb
dec
cmpsl
push
inc
adc
dec
dec
fwait
loopne
sbb
pop
lds
mov
cmpsl
sbb
dec
ja
mov
movsl
ljmp
push
lcall
lock
mov
cwtl
mov
sbb
icebp
out
and
das
xor
adc
push
movsl
inc
push
scas
sbb
inc
sub
testb
mov
cmpsl
lcall
jnp
icebp
inc
outsl
mov
cmpsb
test
push
dec
in
adc
jno
inc
scas
add
aaa
arpl
movsb
adc
sbb
push
sbb
in
into
test
dec
xor
mov
sbb
mov
sbb
ret
dec
enter
dec
scas
xchg
outsb
xchg
aam
xchg
jge
cmpsb
xorb
fildl
cmp
or
std
push
xor
cwtl
flds
push
jb
mov
nop
int3
cltd
push
int
bound
cld
pop
inc
mov
fimuls
xor
mov
pop
or
mov
fisubrl
lcall
mov
inc
inc
add
movsb
out
push
mov
adc
pop
scas
pop
or
mov
push
xlat
ljmp
aaa
or
mov
sbb
or
loop
sbb
push
jge
cli
xchg
es
outsb
dec
dec
iret
mov
push
mov
int
push
mov
jle
inc
mov
jo
cmpsl
xchg
ss
mov
mov
lods
lret
addr16
lods
nop
sub
add
adc
imul
mov
mov
ja
inc
sub
adc
stos
pop
rcrl
inc
mov
adcb
xchg
pop
hlt
inc
xlat
and
push
fwait
out
stos
jo
and
and
lret
push
enter
dec
cli
int
loopne
das
in
mov
pop
test
xchg
aaa
fldt
dec
ljmp
sbb
mov
push
faddl
bound
mov
pop
xchg
das
aas
pushf
jbe
push
cmp
push
or
into
push
push
pop
sub
out
in
mov
add
mov
sub
and
push
or
sub
enter
xor
mov
aad
pop
jge
repz
or
or
lea
insl
jno
sbb
or
jl
or
xlat
push
push
jecxz
pusha
and
mov
sub
pushf
loopne
lret
sub
aaa
repz
sbb
push
test
out
jns
insl
mov
mov
in
test
inc
mov
xor
push
and
dec
into
cmp
inc
and
loopne
adc
aaa
xchg
mov
xchg
xlat
pushf
pop
jb
fwait
lcall
inc
insl
scas
push
rcrl
fsts
test
int3
into
int
es
lods
shrb
test
ret
mov
push
scas
out
dec
pushf
mov
daa
int3
jne
cmp
xchg
decl
iret
ror
mov
idivl
imul
sub
lds
out
fsubl
jmp
jb
pop
adcb
jnp
mov
xchg
jmp
test
subl
imul
test
sbb
ss
lcall
and
push
xor
in
push
mov
adc
into
and
xchg
fldl
jmp
sti
mov
std
xlat
adc
lcall
or
inc
push
lcall
cmpsl
xchg
orb
dec
mov
push
flds
scas
jns
pop
lds
mov
divl
js
out
test
das
loopne
adc
sbb
jb
jecxz
cltd
jb
cmpsl
add
test
into
popa
and
int
scas
sub
cmp
mov
xchg
push
adc
inc
pop
dec
fisubrs
adc
fdivrp
sub
adc
inc
mov
cmp
mov
or
sbb
daa
and
mov
cmp
addl
jle
testl
sub
pop
add
push
in
mov
pusha
shr
test
lret
mov
mov
loopne
addr16
push
jle
mov
fs
ja
icebp
lods
out
dec
popa
jmp
xor
and
jmp
xchg
std
mov
pop
or
scas
lea
in
lds
mov
sti
cmpb
cmc
loopne
in
insb
js
adc
fnsave
mov
nop
aas
xchg
aas
xchg
xor
outsb
add
stos
les
dec
sti
or
stos
xlat
xchg
dec
subb
jae
lcall
jb
cmp
inc
movsl
adc
gs
mov
mov
loop
out
mov
or
cmpsl
scas
pop
xchg
push
cmp
je
imul
pop
pop
roll
sbb
xor
and
notl
cmp
popf
leave
add
jmp
test
fsubr
xchg
push
xchg
je
stc
in
outsl
imul
sub
add
insl
jge
subl
jp
sbbl
mov
lcall
push
cmc
in
hlt
cmp
add
xor
xlat
out
mov
xchg
ss
xchg
mov
enter
inc
cmp
mov
ds
sarb
push
sbb
pop
les
mov
in
sub
in
sub
fmul
lods
ds
mov
xchg
imul
mov
and
xor
xor
jp
sub
in
lds
repnz
lds
out
push
sahf
jmp
daa
push
adc
dec
add
adc
test
sbb
xchg
and
ficoml
loopne
pop
pop
fdivp
loop
ret
lods
test
mov
push
mov
push
loop
test
aaa
mov
mov
dec
jmp
lcall
pop
add
jmp
pop
xlat
lds
jne
mov
frstor
xchg
or
ja
outsb
cwtl
into
push
insb
adc
hlt
mov
mov
shl
inc
lret
les
adc
cmp
out
fwait
inc
dec
push
and
mov
xor
sub
shlb
xor
inc
lret
rorb
sbb
jne
sbbl
pop
mov
and
dec
test
inc
dec
dec
pop
loope
cltd
js
dec
jmp
mov
push
into
lods
or
jno
jmp
xlat
repz
sub
jbe
jle
inc
pop
sti
pop
mov
repz
lods
mov
pop
mov
int3
or
sahf
mov
lock
dec
xchg
adc
mul
sub
outsb
mov
sbb
pop
mov
loop
je
mov
enter
sbb
lahf
stos
sbb
pop
daa
mov
test
jbe
mov
cmp
rorl
pop
icebp
and
pop
ret
and
pop
add
hlt
in
inc
sahf
mov
jg
add
mov
in
mov
loop
xlat
sbb
mov
clc
mov
jl
sar
test
jne
dec
lcall
or
rcl
jns
pusha
sti
fs
lods
int
int3
sub
sti
sub
fisubrs
int3
repz
mov
mov
or
popf
xchg
fnstenv
cs
loop
dec
pop
pop
cli
and
mov
jne
test
cmpsl
and
push
cmp
hlt
adc
gs
sbb
sahf
dec
mov
pop
loop
jmp
xor
push
mov
xchg
fcoml
mov
insl
pushf
mov
lcall
aaa
int
and
out
sbb
jmp
mov
movsb
xchg
xchg
pop
cwtl
lea
outsb
shll
or
mov
popf
mov
xchg
fcomps
clc
in
into
movsl
mov
mov
ds
out
xchg
sarl
xor
idivb
movsb
inc
push
les
cld
inc
adc
insb
fwait
mov
in
push
add
repnz
aad
xchg
loopne
pop
jns
inc
in
fsubrl
int
mov
fbld
xchg
add
mov
xchg
mov
outsl
dec
pop
push
ret
and
cld
and
xchg
jbe
fildll
je
cmc
pop
fs
js
push
mov
movsb
ljmp
divb
ret
in
repz
mov
and
test
pop
test
push
xchg
js
xchg
ja
xchg
mov
xlat
icebp
loop
pop
daa
mov
cwtl
ret
mov
int
mov
stos
lret
shll
loopne
sbbl
mov
sub
xchg
xchg
pop
pop
jns
jle
jge
xchg
push
scas
cmp
inc
mov
cmc
aas
cwtl
mov
mov
repnz
stc
sbb
mov
lret
inc
sub
sti
xchg
mov
xchg
nop
scas
cs
mov
jbe
mov
pop
push
stos
sub
vmovd
lret
jl
or
sti
sub
fld
repnz
push
int
sub
cmp
sbb
cwtl
push
out
mov
jecxz
in
sbb
js
shlb
inc
or
and
inc
test
dec
inc
xor
scas
adc
in
lret
fisubrs
stc
cmpsl
dec
and
shll
insl
lock
ret
sbb
or
pop
cpuid
jne
inc
dec
add
std
pushf
pop
mov
fmuls
js
xor
out
mov
popa
in
lahf
xchg
pop
and
and
aam
sbb
sbb
push
div
xlat
loope
xor
jno
in
mov
xchg
dec
mulb
fcmovnu
imulb
hlt
xrelease
test
rcrl
lods
xor
das
cmpsl
xor
push
mov
pushf
shll
xor
fsubl
mov
cltd
popf
cwtl
mov
pop
xchg
stc
dec
in
push
stos
addb
mov
mov
jg
mov
fsubl
push
sbb
lods
mov
aad
or
push
push
das
lods
pop
popa
or
sti
lock
cmpsl
mov
and
push
fcompl
jle
inc
adc
cmp
loop
sub
cmp
imul
pop
fwait
add
daa
mov
pushf
shlb
hlt
loopne
mov
bound
pop
xchg
cs
jne
inc
mov
jbe
add
mov
les
mov
cmc
jbe
enter
mov
xchg
and
pushf
mov
cltd
repnz
lods
adc
xor
pop
pusha
mov
lods
fsubrs
mov
xchg
test
adc
out
pop
sub
mov
lret
push
sbb
push
mov
add
test
jbe
add
outsl
ficomps
flds
aas
cmp
ja
inc
mov
lea
or
sub
lret
xchg
pop
pop
jg
cmp
push
insb
cmp
cmpsl
xor
jnp
daa
cli
test
inc
arpl
iret
rcrl
lret
aaa
add
xchg
out
adc
int
mov
insb
mov
sbbl
fwait
outsl
adc
mov
pushf
mov
pop
jge
cmc
ja
adc
xor
sahf
addb
mov
cmpsb
mov
and
inc
mov
mov
clc
or
jmp
jnp
cmc
mov
mov
fisubrl
xchg
push
adc
push
mov
xchg
mov
pop
repnz
pop
cmp
loop
int3
sub
loopne
or
add
shl
fdivrl
cmp
or
std
leave
in
stos
xchg
loop
sub
and
lds
int
and
cmp
push
in
inc
jns
cmc
adc
pop
jmp
ja
add
jmp
xchg
popa
mov
loop
push
loopne
xchg
jb
movsb
cmpsl
sub
popf
scas
or
xor
cli
xlat
dec
in
lea
popa
xchg
sahf
daa
outsl
fmull
jg
xor
lods
sahf
lahf
hlt
pop
addb
cmpsl
std
and
pop
out
mov
mov
fmuls
outsl
mov
cwtl
fadds
mov
jno
add
sbb
fcomi
mov
pop
das
adc
mov
or
and
sub
dec
mov
test
add
pusha
scas
xor
hlt
aaa
cmp
shlb
ret
pop
jle
inc
mov
mov
xchg
fwait
push
cmp
sbb
pop
sub
aam
pop
jmp
pop
mov
add
cmpsl
scas
movsl
lds
jno
pushl
push
mov
pop
sbb
int3
push
pop
mov
lods
test
cmp
pop
mov
loop
loop
mov
aad
stc
mov
jb
mov
int3
andl
push
push
mov
adc
scas
push
jnp
mov
inc
leave
loopne
jb
out
popf
dec
xor
xchg
push
xchg
pop
insb
jo
pop
or
nop
imul
add
mov
inc
in
rclb
sub
mov
pop
aaa
data16
jmp
data16
sahf
xchg
inc
in
stos
insb
inc
jb
pusha
pop
or
jecxz
mov
scas
jbe
jg
hlt
testl
xchg
mov
jp
pop
and
inc
jmp
popf
repz
sub
fistl
into
xchg
adcl
cmpb
cwtl
inc
not
test
movsl
mov
cmp
sti
in
pusha
mov
out
mov
xchg
fucomp
and
adc
push
xor
aaa
adc
cmpsl
push
in
lods
mov
js
mov
mov
sub
mov
xchg
ja
scas
xchg
pusha
out
or
push
insl
push
xor
out
mov
jg
mov
and
sbb
fnstenv
jle
movsl
mov
cmpsb
pushf
test
xchg
pop
fdivrp
in
in
xor
imul
jmp
cmp
pop
fs
shlb
fcomp
adc
hlt
daa
call
int
mov
xchg
fs
push
scas
imulb
or
fmull
mov
cmp
dec
scas
xor
mov
and
cwtl
sub
sti
inc
arpl
popf
pop
xor
mov
aaa
pop
into
mov
pop
out
inc
cmpsl
sbb
jno
ljmp
lea
pop
push
sbbl
outsb
mov
add
lods
movl
mov
adc
les
push
nop
stos
ss
daa
sbb
fnstenv
lods
cmp
in
mov
lea
lret
hlt
push
repz
push
fscale
fldcw
movsb
int
test
mov
sbb
sub
mov
ret
scas
lods
lods
mov
xchg
lret
lret
xor
cwtl
mov
jmp
inc
and
pop
push
cmpsl
xor
fwait
mov
std
test
jbe
out
lahf
xchg
mov
push
sub
outsl
sub
mov
in
cmp
ljmp
insb
push
xchg
lock
jl
stos
and
fsubrs
loop
jmp
pop
in
jno
jge
jl
mov
jo,pn
sbb
cmpsl
inc
inc
int3
insl
push
or
pop
in
fucomi
movsb
push
std
dec
in
fldenv
test
mov
pop
push
test
add
sbb
xchg
test
jl
mov
and
popf
and
dec
lcall
pop
xchg
cwtl
insl
jmp
xor
mov
xchg
test
rorb
xor
lds
sti
popf
jns
push
add
push
push
mov
mov
adc
pop
xchg
aam
fwait
inc
add
mov
push
in
inc
in
pop
aam
icebp
ret
lret
popl
add
loopne
iret
lock
in
out
cmpsb
add
lcall
daa
out
je
scas
xchg
jae
hlt
sbb
js
push
sbb
push
mov
push
sub
ss
mov
mov
xchg
and
rcrl
in
fwait
cmpsb
cmpsl
out
cmp
pop
movsb
xchg
ja
test
lds
sub
and
mov
daa
stos
cmpsl
testl
jns
lahf
add
xchg
test
mov
xchg
xchg
test
add
and
or
pop
xor
scas
xor
iret
sub
push
stos
push
ljmp
xchg
shrl
or
sti
cmpb
mov
mov
add
inc
xchg
test
lret
jge
cld
adc
jl
xchg
adc
sub
add
jle
subl
imul
xor
sti
push
lret
mov
pop
fwait
js
lds
stc
sarb
xchg
mov
arpl
push
mov
mov
and
daa
mov
cs
mov
mov
mov
loope
sbb
int
cmpsl
scas
icebp
cmp
pop
ret
ret
insb
mov
jp
or
in
push
add
icebp
jbe
mov
outsl
inc
mov
incb
pop
and
aam
fsubrs
stos
xchg
or
out
or
cmp
je
insb
cmp
xlat
add
sahf
sub
aaa
outsl
imul
jbe
jb
out
flds
dec
movsb
mov
inc
in
or
xor
das
and
xchg
hlt
xchg
pop
mov
mov
lret
inc
lock
jl
jl
sbb
sbb
mov
cwtl
lods
popf
push
out
or
pop
sti
add
xchg
movsl
ret
mov
mov
in
aaa
and
ja
mov
scas
lods
push
int3
stos
andl
or
xchg
xchg
sub
inc
jnp
jmp
cmp
aas
fnstcw
in
std
inc
sti
xor
lock
inc
scas
leave
mov
aad
loopne
xor
popf
pop
dec
cmpsl
icebp
xchg
loopne
pop
je
out
jae
shrb
jb
inc
add
pusha
mov
and
outsb
mov
mov
mov
mov
std
inc
sbb
fdivrl
mov
mov
mov
sub
mov
cmp
mov
mov
mov
mov
cs
push
adcl
sbb
sbb
aas
nop
dec
or
test
test
test
push
dec
cmp
inc
mov
ret
mov
movsb
sahf
inc
imull
or
lret
inc
jmp
cmp
sarb
mov
fwait
or
loope
lcall
push
int
out
daa
bound
out
xor
mov
repz
std
jl
or
push
testb
mov
mov
ljmp
scas
mov
outsl
push
lds
mov
xchg
mov
lcall
mov
fcmovnb
movsb
xor
stc
cmpsb
mov
lds
enter
vphaddwq
or
mov
cwtl
mov
pop
out
fmull
jb
mov
xchg
stos
into
les
test
inc
mov
adc
insb
inc
fstl
icebp
hlt
mov
cmp
and
inc
xchg
movsb
loope
inc
hlt
btc
inc
test
mov
push
fstpl
push
pop
gs
mov
daa
xlat
sub
push
or
sbb
mov
cmpsl
adc
mov
xor
add
ljmp
lret
pop
sub
sub
pushf
xchg
pop
jecxz
frstor
jl
mov
into
pushf
pushf
xchg
inc
jmp
fidivrs
cmc
pop
addl
jns
add
sub
stc
dec
test
insb
sbb
push
cmp
xchg
scas
pop
int
stc
data16
dec
jecxz
imul
dec
sub
scas
shrb
rcr
in
shrb
icebp
cmc
add
xchg
mov
fwait
mov
lea
test
stos
sub
call
or
or
pop
addr16
pop
xchg
out
mov
stos
or
je
inc
icebp
cltd
out
outsl
mov
cmp
insb
mov
push
mov
cmc
push
lcall
orb
jae
push
pusha
sbb
imul
adc
insb
cli
sti
inc
cmpsl
mov
lea
inc
inc
jmp
cmc
lret
ret
pop
push
mov
add
ljmp
test
dec
sbb
xchg
xchg
adc
cmp
in
test
fcompl
dec
sub
mov
rclb
into
in
push
xchg
lea
mov
out
sub
jno
add
scas
or
sub
push
push
pop
push
mov
mov
test
jo
fldl
andl
in
shr
insb
mov
xchg
cli
test
mov
filds
dec
or
pop
mov
in
pop
lahf
cmpsl
fucomip
jmp
sbb
pop
jne
imul
pop
fmul
pushf
push
lcall
cmp
pusha
cmp
xchg
dec
push
fisubrs
aaa
mov
sub
jp
mov
push
mov
nop
xchg
arpl
xor
aad
xor
in
orb
js
mov
sbb
aas
add
movsb
xor
icebp
sbb
add
imulb
std
sub
sbb
adc
movsl
or
lods
add
cwtl
mov
inc
pop
mov
popa
adc
imul
mov
xor
mov
mov
add
sbb
fnstenv
cwtl
mov
orl
jmp
inc
aaa
das
jmp
mov
sub
jne
inc
pop
test
rcll
adc
push
stos
jl
xchg
out
aas
mov
mov
outsl
mov
movsb
mov
push
int
cmpsb
dec
push
and
pop
add
filds
pop
rcl
inc
mov
inc
negb
push
out
mov
sbbb
and
mov
jmp
in
dec
subb
jl
repnz
pop
cmp
pusha
ss
adc
insl
add
jae
lahf
pop
adc
jmp
sub
in
lahf
pop
lret
xor
test
js
pop
mov
call
sub
mov
cmp
mov
insl
mov
inc
mov
xor
jg
mov
and
mov
cld
shrb
xchg
pop
fsubp
dec
lahf
fwait
mov
stc
cmpl
icebp
js
aad
jmp
pop
insb
jle
inc
scas
mov
iret
arpl
rorb
cwtl
mov
cmp
xorb
ret
movsb
mov
rolb
sbb
data16
mov
push
mov
inc
fildl
loope
aam
scas
jne
sub
mov
jmp
aas
fbld
mov
cltd
leave
adc
pop
mov
pop
repz
or
pop
dec
int
or
fwait
sbb
lcall
mov
loopne
lea
ret
jbe
rcrb
addb
addl
mov
decl
cmp
hlt
xor
out
mov
cmpsl
sub
push
shlb
lods
jb
pop
loopne
pop
adc
repnz
xlat
push
ja
pushf
mov
imul
adc
sbb
mov
outsb
int3
push
jae
xor
or
sub
fs
sub
in
pextrw
pop
mov
jne
mov
and
add
andb
imul
popa
sub
or
loopne
push
sbb
jae
pushf
adc
pop
mov
hlt
int3
inc
in
jae
aas
insb
fistl
outsl
push
dec
push
push
mov
pop
jbe
fdivs
or
or
ret
and
pop
sub
push
inc
negb
stos
bound
lds
or
cmp
xorl
daa
pusha
inc
mov
xchg
imull
inc
std
fisubrs
lret
mov
js
test
mov
jmp
lret
mov
xorb
outsl
rcrl
leave
addr16
xchg
mov
inc
xchg
bound
sti
subb
movsb
cwtl
xchg
fiaddl
rolb
gs
cmpsw
add
fst
jg
pop
pop
sbb
xchg
or
mov
ret
pop
mov
aaa
xchg
fsubrl
or
push
mov
add
add
in
ret
mov
mov
mov
popa
inc
adc
lods
into
test
xchg
dec
daa
lret
mov
and
ds
lods
jno
notl
cmp
jae
sub
and
daa
ljmp
repnz
repz
xchg
and
push
daa
hlt
mov
xor
lahf
push
jg
mov
pusha
scas
popf
mov
lret
add
into
ja
stos
inc
pop
in
int3
pushf
outsb
stos
lcall
negl
inc
aas
xlat
fwait
inc
sahf
sti
icebp
into
mov
daa
shl
inc
int
int3
jp
cmpsb
aaa
jb
xlat
cmc
fcom
in
mov
cmc
test
das
sub
add
add
outsb
and
pusha
xchg
xor
cmc
mov
aaa
lods
sub
xor
xor
mov
div
inc
outsl
push
aaa
pop
cmp
mov
rcrb
ret
ss
ss
pushl
dec
popa
cmp
incb
lds
outsb
and
cmp
arpl
sarb
scas
and
add
jg
cmpsl
negb
ss
insb
cmp
xor
ret
scas
jb
loop
in
push
ja
nop
test
rep
stos
pop
xchg
mov
rolb
roll
and
push
dec
pop
das
adc
pushf
scas
mov
arpl
sub
shll
out
lcall
sbb
loopne
test
push
rcr
dec
jl
pop
test
lods
jg
xor
pop
mov
xchg
call
dec
xor
lea
lock
inc
xor
xor
lret
stos
mov
jmp
shl
cld
mov
xchg
and
push
mov
divb
cmp
stc
cmp
scas
popf
inc
mov
or
push
negb
xchg
lea
jmp
sub
pop
pushf
add
inc
fwait
xchg
or
mov
push
and
mov
popf
test
or
imul
pop
repz
insb
xorb
scas
into
cmpsb
and
push
cmp
dec
lods
je
loop
into
adc
ja
mov
lcall
lods
and
jne
mov
leave
xchg
stos
lods
lret
rcrb
push
mov
inc
mov
mov
pop
fsubp
pop
add
imul
sub
push
loopne
bound
insb
shr
sub
and
push
fwait
rcl
mov
in
sub
xlat
lcall
fwait
and
sahf
test
mov
mov
popf
lahf
and
in
sbb
cltd
ljmp
pop
cmpsb
xchg
push
cmp
into
lret
sub
imul
jnp
xchg
loope
sub
push
sbb
repnz
jb
xchg
lock
in
out
mov
xor
hlt
cmpsl
outsl
aas
dec
and
insb
add
pop
mov
push
lods
dec
es
dec
or
sbb
dec
scas
and
sarb
mov
jb
push
cmc
xor
out
mov
lret
rorl
xor
divb
sbb
mov
pop
mov
frstor
or
or
xchg
ljmp
imul
mov
sub
xor
out
dec
scas
mov
dec
push
cmp
push
add
lods
or
sub
shrb
aaa
cmp
in
xor
sarl
xor
or
jae
pushf
cmp
inc
cwtl
or
and
cwtl
pop
loopne
clc
lock
sbb
adc
inc
hlt
movsb
int
push
cmpsb
aaa
and
pop
sub
push
lcall
mov
lods
xor
ds
mov
and
fsubrs
in
out
clc
test
jae
mov
push
jns
xor
xlat
mov
xchg
pop
fwait
push
push
jmp
jle
mov
pop
lods
dec
mov
jb
add
push
sahf
lods
lahf
lret
xchg
in
xorl
jb,pt
leave
imul
ss
push
adc
lods
and
xchg
ss
mov
xchg
movsb
out
movsb
test
hlt
lods
lcall
jmp
fucomip
cltd
jl
inc
stos
int
dec
rorb
repnz
popa
jmp
pop
jae
dec
pop
shrl
pop
adc
dec
ss
js
loope
hlt
ret
dec
jp
imul
sub
sbb
loope
jae
test
add
neg
sbb
pushf
dec
shlb
jp
adc
int
add
mov
ret
xchg
hlt
jb
cmp
imul
push
fnstcw
sub
xchg
lahf
pushf
outsb
pop
fsubl
test
push
movsl
or
mov
mov
shrl
mov
push
outsb
outsl
into
push
dec
cmp
outsl
adc
adc
arpl
cmp
insb
sub
xchg
ja
jnp
arpl
js
lcall
or
dec
cmp
mov
cmp
call
mov
jle
and
mov
ljmp
dec
icebp
mov
mov
into
cltd
cmp
cs
out
dec
sbb
sti
xor
into
xchg
imul
dec
add
fistl
loop
fildll
sub
fistpl
inc
int
jmp
bound
notl
frstor
shll
rol
xchg
jge
or
push
in
lret
insb
cmp
pop
arpl
into
push
loopne
jb
mov
sub
pop
rcll
shll
fcmove
ja
pop
cmp
bound
and
xchg
int3
or
sub
fwait
jb
and
roll
fisubrl
mov
lcall
inc
push
int3
sbb
inc
test
sub
mov
arpl
add
xchg
dec
push
mov
jg
testl
xchg
pop
insb
cmp
loopnew
fcmovnbe
into
fwait
pop
dec
aas
daa
lods
dec
cmp
cmp
comiss
aam
cwtl
popf
cmpsb
nop
jno
xchg
and
and
xor
int3
and
popf
ja
inc
cmpsl
in
and
aas
mov
jns
loop
inc
int
lcall
rcrl
pop
scas
mov
jns
test
jp
cmp
pop
arpl
inc
push
insb
adc
push
push
dec
decl
ret
lods
and
cs
mov
jne
movl
das
pop
xchg
sbb
add
das
scas
jle
sbb
jo
repnz
sahf
leave
and
in
pop
ja
sub
movsb
xchg
pop
inc
mov
aaa
push
mov
fucom
addb
add
pop
xor
mov
mov
shl
roll
je
in
push
dec
mov
and
dec
loop
adc
sahf
dec
mov
xor
jae
jns
movsb
cmpsl
mov
sub
pop
fistpl
insb
mov
arpl
sub
aaa
loop
daa
mov
and
into
sbb
loopne
sub
test
xchg
out
dec
aam
aas
test
and
into
sbb
cmpsb
and
or
push
clc
test
testl
cltd
cs
mov
std
test
jge
pop
roll
jns
in
sar
fimuls
sub
inc
loopne
xor
insb
cld
fidivrl
jl
lods
xchg
popa
sub
divl
lods
inc
outsl
inc
mov
xlat
pop
lds
xchg
out
mov
sub
mov
aas
fbstp
lock
jl
pop
dec
xor
mov
daa
xorb
jge
pop
mov
xchg
pop
or
aad
sbb
pop
mov
push
stos
jmp
out
cmp
fisttpl
ret
xchg
les
lds
rcrb
mov
pop
arpl
xchg
xor
fidivrl
outsb
movsb
mov
stos
inc
daa
loop
leave
popf
test
mov
jge
pop
scas
jecxz
movsl
cmpsl
mov
jl
jo
pop
aad
mov
in
xlat
ret
popf
and
cld
adc
popa
xor
mov
fsts
push
mov
mov
pop
movsb
popf
push
sub
test
sub
stos
pop
rcrl
pop
mull
in
popf
pop
xor
sbb
ficomps
mov
xchg
test
je
insb
xchg
push
lret
movsb
imul
xorb
jl
test
jno
adc
pop
stos
xchg
sub
mov
inc
pop
out
jns
out
outsb
test
std
mov
adc
repz
cmpsb
fcmovu
ja
popa
dec
mov
mov
add
or
mov
mov
mov
sti
test
pop
lods
pop
call
daa
fwait
push
mov
pop
notb
roll
ret
mov
icebp
or
ret
sbb
cltd
sbb
sub
adc
cs
ss
inc
push
in
ret
popf
pushf
sub
js
lds
scas
loop
leave
lret
push
mov
scas
jne
sub
ror
adc
aaa
les
fidivrs
mov
and
xor
addr16
push
mov
js
fwait
pop
fsubs
in
pop
sub
pop
xchg
out
sub
cmc
movsl
mov
pop
mov
outsl
push
and
add
cmp
xor
cs
es
xor
xchg
sbb
jo
jp
scas
icebp
mov
fdivl
pop
and
imulb
shlb
fnstsw
cltd
jle
int3
inc
mov
add
mov
lock
dec
in
negl
mov
aad
fwait
jne
dec
add
int
ret
pop
mov
out
pop
test
sahf
ret
out
sbb
fiadds
loope
and
mov
jo
xchg
pop
cmp
inc
push
add
in
xor
jo
mov
ret
js
sub
add
into
push
orl
fucom
inc
loop
sub
loop
add
mov
iret
inc
into
and
mov
push
sbb
hlt
xchg
push
divb
shlb
in
jb
sbb
cmpb
dec
loope
in
out
les
or
dec
mov
aad
rorl
jo
out
push
sti
cmp
es
lds
fistl
loope
jb
add
test
or
push
adc
cmpsl
jmp
mov
jge
in
fsubrl
add
mov
dec
loop
sahf
or
jb
nop
lods
stos
loopne
into
scas
inc
repz
in
mov
arpl
fsubs
movsl
orl
xchg
cmp
sbb
test
mov
lds
mov
fisttps
jne
jl
lcall
pushf
shl
js
sbb
dec
imul
lret
sti
sbb
sbb
pop
cmp
fiadds
cld
adc
xchg
in
lret
sbb
roll
and
mov
jl
xchg
lds
mov
scas
cmpsl
arpl
xchg
inc
xchg
lret
inc
push
test
jg
cli
mov
into
filds
sub
pop
sub
enter
push
repnz
inc
lods
movsb
xchg
add
push
daa
mov
xchg
push
sarb
xchg
into
mov
jae
insb
std
sbb
das
fwait
lds
dec
inc
shrl
into
cmpsb
in
adc
xor
push
xor
cltd
xchg
mov
inc
cmc
iret
and
pop
es
loopne
add
push
push
push
mov
adc
and
mov
or
les
int
pushf
push
push
or
addr16
xor
mov
lahf
or
push
lcall
out
out
mov
fstl
push
xlat
add
out
insl
or
out
mov
mov
fsubs
addr16
jne
stos
jo
and
mov
scas
fisubs
loop
push
dec
test
mov
pop
ss
loop
xor
outsl
and
pop
jmp
out
sub
movsb
cmp
mov
mov
insl
jle
sbb
je
mov
dec
hlt
pop
pop
cmp
dec
sub
outsb
push
in
aaa
xchg
lahf
xchg
cmp
mov
sti
nop
loop
or
xchg
movsb
mov
idivl
cmp
ret
push
adc
xor
iret
mov
sub
iret
stc
repnz
jg
push
xorb
pop
cld
pop
mov
mov
push
sub
add
es
pop
mov
jbe
aas
js
push
lock
ret
mov
push
and
lods
andl
rcll
xchg
ja
ret
call
pop
loopne
ljmp
fwait
lret
scas
in
mov
or
mov
adc
xor
test
loopne
cmp
pop
jbe
xor
mov
push
pop
lret
imul
fwait
loopne
push
sub
add
or
lret
stos
pop
jbe
ja
outsl
inc
leave
lcall
in
shlb
sbb
mov
lods
inc
popf
scas
add
mov
cmp
xor
fwait
std
cmpsl
mov
aad
cmp
lock
pop
scas
jnp
clc
mov
xor
sbb
mov
pop
mov
mov
je
lods
pop
loop
stos
xor
pop
xorb
sbb
daa
shll
cmpsl
sbb
scas
mov
and
sub
cld
notl
int3
sti
inc
sub
pop
inc
cmc
xchg
xor
mov
dec
sub
arpl
clc
inc
dec
pushf
mov
insl
jmp
insb
cmp
sbb
xor
iret
dec
cmpsl
stos
push
xor
cmp
jmp
pushl
ja
insb
jl
lret
testl
xor
or
fistps
mov
xchg
ja
stos
jno
les
or
push
sahf
sbb
stc
jg
ja
xchg
jecxz
pop
je
jmp
jbe
and
ror
mov
push
pop
scas
xchg
add
lahf
sub
mov
xchg
push
add
lock
adc
scas
jbe
pop
jns
lret
shll
fsubrl
jo
and
sbb
pop
mov
add
fldl
pop
mov
inc
je,pt
and
pop
pop
or
push
sub
mov
incl
das
jo
cmp
or
fnsave
push
mov
fisubrl
push
mov
and
push
mov
loopne
mov
pop
lock
xor
ret
outsl
popa
sbb
hlt
mov
lock
push
add
fwait
mov
mov
mov
data16
clc
std
enter
pushf
pushfw
mov
dec
aas
jmp
fwait
xor
inc
ret
jbe
rcrb
ds
push
dec
mov
shll
scas
out
pop
pushf
pop
xchg
jp
inc
jp
adc
lods
pop
mov
mov
inc
rcrl
mov
add
xor
icebp
cmp
mov
outsl
cmpsl
bndstx
lret
lea
mov
test
int3
scas
fcmovnbe
out
roll
ja
dec
scas
ljmp
mov
adc
push
test
xor
into
cmp
shlb
mov
xor
sub
scas
mov
xor
lea
mov
mov
dec
ja
mov
imulb
mov
or
sbb
and
daa
mov
sbb
sbb
mov
pop
mov
inc
push
cld
or
mov
xchg
pop
cwtl
arpl
lret
enter
add
in
out
mov
mov
idivb
mov
lret
pop
mov
das
mov
mov
fcompl
fcoms
loope
xchg
fwait
adc
shlb
cmp
sbb
and
pusha
xchg
sub
sahf
push
push
in
mov
sahf
mov
pop
enter
outsb
inc
int
imul
in
mov
shll
daa
insb
outsb
test
mov
xchg
icebp
jmp
sub
xchg
popf
sub
movsb
ret
pop
cmpsl
add
in
cmp
sub
sub
xchg
das
sub
sub
lods
ja
int3
cmpsb
fwait
mov
mov
mov
mov
jge
fwait
test
jno
xchg
mov
cld
dec
inc
test
mov
test
sahf
shrl
sub
adc
mov
test
jecxz
insl
jbe
fsts
out
pop
shll
stos
xor
mov
add
adc
and
lfs
aad
in
aas
aas
mov
mov
xchg
pop
jle
rorl
scas
and
int
or
dec
sub
scas
push
daa
insl
mov
cmpsl
jecxz
ja
insb
cli
enter
jno
movb
inc
pop
scas
pop
cmp
dec
in
jo
or
in
jmp
fcomp
or
sub
arpl
mov
xlat
xchg
sub
outsb
sbb
fildl
leave
push
in
push
fildl
ss
fsubrl
sahf
aam
inc
insl
mov
pop
push
in
fdivs
jbe
sub
dec
dec
dec
mov
mov
in
cwtl
and
sbb
ja
iret
cli
es
push
mov
lcall
fwait
insb
or
adc
test
leave
inc
je
fcmove
xchg
bound
add
test
test
xlat
in
outsb
scas
lea
xorl
sub
mov
mov
mov
mov
insb
imul
enter
sbb
jbe
gs
jl
sbb
xchg
scas
xchg
fidivrs
lret
sti
subl
loope
arpl
and
add
push
and
negl
cwtl
dec
and
scas
shrb
enter
por
sbb
sub
lods
mov
outsb
mov
inc
adc
sub
scas
sub
mov
jns
js
fcoml
lret
cmpsl
insb
cltd
into
cs
insl
sub
insb
insl
shll
add
lods
insb
jge
inc
test
inc
in
mov
sbb
cli
lahf
xchg
sub
sub
and
pop
jp
mov
scas
push
movsl
xor
inc
stc
dec
js
sub
cmc
jl
mov
ret
test
popf
ss
dec
xchg
xchg
test
mov
push
sbb
fstl
mov
cld
lret
mov
aad
push
hlt
xchg
xor
adc
sbb
sti
inc
daa
or
sub
mov
fisubrs
aad
test
rorl
mov
cmp
pop
adc
clc
andl
scas
int
gs
lret
cmp
test
cmp
or
jmp
xlat
insl
into
enter
shll
pop
mov
push
push
inc
test
mov
adc
push
shll
and
sbb
jl
fcomp
add
mov
cvtdq2ps
out
pop
movsb
repz
pop
inc
lret
ss
hlt
and
push
mov
mov
sbb
sub
cmpsl
mov
or
scas
and
sbb
xor
pop
pop
aas
fstl
sbb
aas
xlat
mov
inc
aam
jne
cmp
and
imul
in
mov
fwait
xor
adc
dec
das
xchg
daa
or
mov
repz
cwtl
sub
jb
xchg
xor
push
icebp
lret
fisubrs
int
lds
sub
repz
push
xor
hlt
ret
inc
inc
mov
add
jecxz
dec
fistps
bound
daa
jo
add
popf
daa
lahf
hlt
or
lret
imul
adc
sub
sub
or
or
daa
pop
in
incb
sahf
mov
sub
dec
fmuls
jp
mov
xlat
mov
mov
int
pop
inc
loope
sub
iret
xchg
pop
fiaddl
xor
orb
into
test
outsl
add
cmp
jbe
outsb
sub
mov
xor
sub
mov
lods
push
push
cmp
pop
call
js
lcall
lds
inc
test
sub
jnp
cltd
pop
ror
mull
cmc
adc
mov
jl
xchg
inc
int
adc
shrb
leave
fwait
and
sub
pushf
movsb
mov
mov
xor
jge
inc
push
cltd
call
xchg
mov
mov
mov
inc
jecxz
pop
sbbb
fcomp
xchg
jbe
shlb
jne
adc
in
xlat
mov
loope
int
scas
cltd
fidivl
stos
dec
test
cs
fxam
sub
loop
adc
lret
add
add
pop
inc
mov
das
cmpsl
xchg
sub
insl
loopne
out
pusha
cmp
mov
sub
mov
fwait
sub
pop
add
out
cmp
std
mov
inc
add
movsb
push
sub
in
dec
outsl
ss
add
add
nop
sbb
das
test
mov
push
je
stc
repz
pop
stos
inc
mov
xchg
fwait
sbb
stc
pop
jnp
cmp
dec
daa
sub
clc
scas
jnp
sti
add
cwtl
daa
stc
cmpsl
scas
fisttpll
add
mov
les
inc
movsb
dec
dec
movsb
jbe
mov
inc
jne
test
pop
dec
das
js
mov
sub
push
push
mov
in
push
push
mov
sub
cmpb
stc
cmp
lods
push
mov
pop
pop
ds
fwait
cltd
scas
adc
pop
popf
rorl
add
or
shlb
out
cwtl
cmp
jbe
xchg
test
add
xlat
lcall
dec
add
pop
lret
cmp
sbb
outsb
push
cmp
xorb
add
mov
mov
mov
pop
scas
ja
inc
cmpl
mov
iret
mov
mov
sub
fwait
lods
pop
lahf
aad
xchg
pop
sub
outsl
jle
pop
mov
and
jp
xchg
mov
xchg
mov
sub
sub
scas
xchg
das
mov
add
mov
out
and
pop
out
mov
std
cs
jle
les
adc
mov
mov
push
enter
mov
repz
test
xchg
pusha
jo
lods
cli
push
jle
pop
xchg
jno
out
xchg
movsb
jmp
cmpsl
icebp
flds
push
repnz
xor
scas
popf
xchg
sbb
mov
xor
test
aaa
jne
mov
dec
out
pusha
test
test
adc
xor
jb
dec
pop
cmp
call
mov
mov
test
test
cld
xchg
add
addr16
mov
xchg
rcrb
mov
out
daa
cltd
mov
cmpsl
or
mov
repz
fnstcw
enter
adc
xchg
jne
mov
hlt
arpl
or
hlt
aam
push
xor
mov
push
lods
pop
xor
mov
and
adc
dec
insb
inc
adc
xchg
mov
loope
add
mov
mov
cmp
push
push
out
loopne
lock
push
mov
sub
and
xor
ret
cs
sbb
daa
sbb
xchg
xor
mov
lcall
cwtl
fldl
pop
les
and
sbb
aad
sbb
lahf
xor
xor
or
mov
lds
mov
loope
mov
inc
icebp
cmpsl
and
inc
scas
stos
pop
jmp
mov
mov
mov
sbb
or
lds
pop
pushf
mov
mov
xor
dec
or
cmp
jmp
nop
test
popf
movsb
mov
cmc
lcall
repz
ss
neg
nop
jbe
push
hlt
xchg
cmp
aas
jg
mov
std
test
lret
sahf
scas
xchg
arpl
out
inc
inc
lods
outsl
mov
popa
sub
cltd
mov
aad
pop
mov
jmp
out
test
push
test
jae
lahf
cwtl
sub
xchg
mov
or
fldt
add
mov
ret
stc
out
mov
sub
add
loope
dec
sahf
clc
ret
fwait
xchg
into
das
stos
insl
cltd
loope
insb
sub
dec
pop
xchg
fwait
imul
movsb
jbe
sub
testl
mov
ret
jmp
jmp
jnp
mov
push
out
inc
cmp
dec
xchg
scas
push
sbb
mov
cs
fiaddl
sbb
shlb
add
push
sub
in
dec
fcoml
in
aaa
stos
inc
mov
lret
add
lods
sbb
leave
add
test
stos
sbb
inc
repz
mov
mov
movsl
addr16
idivb
or
shr
icebp
clc
xchg
jo
lods
int
inc
sbb
push
fistl
jle
mov
sbb
shrl
cmpsl
xchg
stos
cmp
enter
cmp
fcmovb
cs
inc
test
mov
mov
xchg
loopne
push
pop
rol
hlt
sub
cmpsl
ds
aaa
push
mov
xor
or
pop
mov
jae
rcrl
push
xorb
mov
stos
push
ret
std
xchg
test
insb
ds
pop
dec
fwait
in
test
addr16
out
test
out
dec
mov
loopne
add
lret
out
xlat
insl
mov
popf
ja
ss
in
inc
mov
out
sbb
or
sub
mov
sub
pop
in
xlat
call
cmp
loop
scas
int
push
mov
orl
adc
daa
test
xchg
mov
mov
push
xchg
hlt
xchg
adcl
sub
mov
or
inc
adc
cmc
push
fildl
into
xchg
loope
xor
or
mov
jne
dec
sbb
add
lods
lods
add
jno
in
test
sub
lcall
or
cmc
subb
cmp
daa
hlt
push
scas
pop
xlat
out
cmp
pop
movsb
jne
sub
mov
push
mov
push
xor
sbb
xchg
cmpsl
xchg
inc
mov
lea
cwtl
jle
out
fmul
dec
lods
sbb
nop
gs
imul
dec
rcrl
inc
std
out
daa
lods
repz
sub
cmp
in
movsl
pop
add
mov
insl
sub
daa
jnp
int
or
insb
call
pusha
jb
mov
aas
pop
push
pop
adc
insb
sub
das
aaa
sub
popa
sti
ja
mov
aaa
cmpxchg
fsubrs
inc
dec
in
inc
in
out
xor
sub
imul
adc
test
ret
mov
sbb
adc
out
push
stc
nop
sub
cmpsl
inc
cmc
cmp
xchg
out
in
lods
sub
bound
lea
outsl
dec
xrelease
outsb
insl
clc
scas
aaa
movsb
into
lret
fstps
dec
hlt
aas
pop
repnz
movsl
sbb
repz
add
cmp
xchg
ljmp
leave
jnp
insl
xchg
jmp
pushf
and
mov
cmc
aas
add
stos
comiss
cmp
scas
adc
inc
mov
cmp
shlb
cmc
sbb
jae
lods
mov
lret
test
pusha
xor
rclb
repnz
cmpsl
out
or
lcall
inc
mov
jbe
std
andl
outsb
popf
xchg
fadds
pop
mov
push
in
xchg
mov
movsb
add
and
cmp
mov
jnp
xchg
in
test
lods
sub
adcl
icebp
pop
pop
rolb
cwtl
push
xchg
pop
and
push
lds
adc
xchg
jle
rcll
test
adc
lods
or
cmp
nop
dec
hlt
fidivrl
sub
and
sub
call
pushf
fnstsw
dec
jmp
pushf
insb
cmpsl
mov
lods
hlt
lret
in
daa
outsb
out
sub
sub
imul
add
xchg
jmp
mov
lret
add
and
inc
call
push
jmp
fadd
add
mov
into
jmp
test
cltd
lods
outsb
loopne
xor
adc
or
add
mov
sub
mov
into
mov
pop
xchg
sti
stos
out
mov
xlat
sub
fldt
out
lds
ljmp
test
mov
frstor
daa
scas
mov
lods
int
push
inc
sub
jnp
fidivrl
test
je
adc
in
pop
cli
cmp
push
cld
fsubrl
mov
mov
mov
adc
sub
dec
cmp
lods
cmpsb
insb
inc
fcomp
mov
mov
out
xchg
xchg
in
pop
mov
inc
push
pusha
pop
push
out
daa
bnd
mov
es
lods
add
push
sub
in
xchg
insb
insl
pop
lret
ja
push
lods
outsl
cs
outsl
or
sub
xor
pop
fistl
popf
loopne
cmp
in
into
lock
cmc
or
insb
hlt
test
lds
sub
mov
dec
pushf
push
movsl
scas
sub
repnz
stc
sub
sub
fldcw
sbb
test
add
in
fmuls
sbbb
mov
insb
pop
mov
sub
sub
gs
mov
in
or
mov
jp
mov
fsubrl
das
pop
in
inc
ljmp
mov
push
pop
movsl
mov
xchg
or
lret
or
push
push
sbb
dec
dec
dec
sub
test
push
int
xchg
lret
lock
out
call
scas
dec
jno
lods
add
inc
aaa
xlat
mov
cmp
repnz
in
ja
adc
inc
vpsravw
insl
lcall
xchg
in
jb
inc
mov
popf
call
mov
mov
xchg
pop
or
mov
cs
push
in
cmp
push
int3
lods
push
mov
pop
pop
or
mov
insl
pop
xor
and
adc
scas
pop
fildll
sub
dec
outsl
ja
fsubrp
sar
sub
test
adc
cld
cmc
dec
adc
int3
das
shrb
pop
das
or
stos
xor
jae
lods
sub
rcrb
sti
popa
insb
inc
test
test
push
in
xchg
int3
or
cmp
dec
ljmp
jge
les
push
adc
es
stc
pop
ds
push
cs
les
lds
out
dec
sbb
or
jo
dec
aam
pop
mov
punpcklwd
jle
fidivrl
cmpsb
cmpsl
cltd
scas
lods
cmp
push
add
pusha
mov
lds
testl
dec
outsb
dec
add
aam
leave
aaa
sbb
jmp
shrl
add
cltd
fwait
xchg
push
test
mov
in
in
add
hlt
ljmp
pop
inc
lds
push
add
int3
shll
xor
cmpsl
movsl
mov
das
insl
cmpsl
lds
cmpl
mov
lds
shlb
and
into
mov
ljmp
cmpsl
cmp
mov
mov
xor
mov
jo
jne
and
fcmove
inc
loop
jmp
cmp
cmp
js
xchg
fadds
out
scas
test
jno
dec
ja
sub
xchg
dec
mov
test
mov
mov
hlt
stos
lahf
xchg
pop
int
mov
lock
inc
sub
daa
jecxz
test
xor
dec
pop
jg
mov
sbb
test
pop
adc
sub
loopne
mov
push
test
lret
pop
std
xor
jmp
sar
pop
cltd
and
jo
mov
dec
mov
mov
cwtl
pop
cmp
nop
push
jle
subl
mov
lcall
jmp
stos
sbb
mov
jge
cmpsl
js
test
mov
sbb
mov
jge
lods
testl
mov
pop
push
jmp
mov
sub
xchg
stos
xchg
loop
call
jo
and
add
movsl
cmpsl
xor
repz
out
aas
shrb
jmp
sbb
testl
sbb
cld
xchg
mov
pop
loope
add
hlt
aas
call
mov
stos
mov
outsl
jb
cs
cmp
mov
jns
cmp
sti
pop
int3
jns
dec
push
das
mov
xor
loop
jmp
in
sbb
repnz
push
and
sahf
nop
lcall
xor
jmp
pushf
insl
dec
add
ljmp
cs
addr16
mov
xor
es
movsl
das
xchg
out
xor
sub
cmp
add
pop
in
mov
jnp
loopne
pop
fwait
in
mov
xor
cmpsb
jg
and
test
mov
out
into
xchg
dec
out
pop
test
cmc
je
jbe
stos
mov
jecxz
ss
push
add
in
flds
shrl
je
outsb
in
call
xor
mov
in
jl
adc
lods
outsl
jne
imul
gs
sbb
xchg
out
dec
das
subl
lods
dec
shrl
push
fisubrs
or
addl
jb
jmp
loop
ljmp
inc
ss
cmp
cmpsl
mov
adcb
adcl
mov
lds
xchg
push
push
imul
jmp
adc
xchg
cmp
test
stos
stc
popa
and
popa
repnz
insb
mov
mov
sub
inc
jbe
adc
adc
jg
scas
sub
mov
or
mov
mov
mov
lret
add
movl
sbb
or
jp
in
int3
std
mov
loop
stc
retw
sub
mov
cltd
movb
cmp
cmpsl
cli
sbb
sbb
or
adc
mov
daa
pop
mov
sti
lods
or
push
cli
in
fwait
push
xchg
inc
jns
mov
mov
leave
pusha
in
cli
stos
mov
cmp
dec
jl
xor
fsubrs
push
mov
pop
xchg
mov
vcvtpd2psy
andl
sub
cs
sbb
int
test
hlt
outsl
ret
adcl
xchg
push
mov
insl
inc
into
pop
mov
rorl
ret
mov
out
sub
imul
test
imul
movsb
fcoml
aas
cmpl
cmpl
vpxor
imull
pop
jmp
cmp
dec
mov
test
xchg
icebp
fadd
repnz
adc
cmpsl
mov
cs
pushf
ljmp
xchg
cmp
xchg
ret
fs
jnp
adc
fimull
add
mov
mov
mov
gs
cmpsl
aas
mov
movsb
mov
push
and
test
xchg
xor
scas
mov
popf
mov
xor
mov
out
ss
sub
fcompl
or
pop
cmp
jbe
cli
popf
mov
sub
lret
jle
jne
or
jns
mov
mov
das
mov
out
and
loopne
int
dec
sub
mov
adc
xor
and
sbb
jge
repnz
in
jo
mov
add
hlt
popf
cs
mov
jg
ret
enter
xchg
lds
adc
inc
lods
mov
push
icebp
fbstp
lods
loopne
cli
jmp
mov
jbe
je
fnsetpm(287
pop
inc
fmulp
mov
pop
lea
frstor
lods
cmc
lds
out
les
mov
xor
out
mov
std
aam
push
lcall
and
jbe
sti
and
mov
sub
les
sbb
sbb
pusha
xchg
loope
loopne
jmp
das
in
jmp
std
jl
movsl
sub
mov
cmp
add
je
add
outsb
je
aad
jae
push
mov
repnz
push
adc
sbb
xlat
xlat
sub
pushf
scas
hlt
xchg
std
imul
cmpsb
insl
add
inc
sbb
adc
xor
insl
jge
sub
in
jmp
arpl
in
cltd
test
xchg
daa
lret
stos
and
xor
jl
mov
sub
imul
mov
sub
lods
test
cmpsl
mov
add
mov
aam
dec
and
lds
add
mov
lahf
aaa
fadds
fistps
xor
push
mov
mov
sub
jge
mov
xchg
ficomps
lea
adc
loope
sub
fld
mov
mov
scas
and
test
sbb
lds
sbb
adc
cmp
dec
jg
insl
or
xchg
fsubl
punpcklbw
fstpt
fmuls
mov
stos
lea
daa
xor
mov
mov
pop
imul
sti
lret
xchg
inc
sti
andb
mov
roll
mov
add
dec
leave
xchg
sbb
loope
ffree
jne
lea
pop
sub
mov
cmpsl
add
test
pushf
mov
imul
xchg
filds
pop
jo
icebp
stos
ljmp
mov
mov
mov
jb
mov
sahf
cmp
or
or
dec
shll
and
mov
ss
fwait
pop
cmpl
jl
push
mov
mov
out
mov
push
movsl
sahf
mov
mov
mov
mov
sbb
test
repz
sub
sub
gs
mov
subl
fstpt
in
mov
test
pop
xchg
pop
lret
jno
andl
push
call
push
jno
insb
loopne
jns
add
jmp
sub
mov
insl
sbb
sub
in
popl
sbb
mov
in
xchg
sbb
mov
aam
sub
xor
cs
call
inc
fadd
insb
leave
push
dec
testb
dec
sub
push
xlat
lcall
test
xchg
adc
pop
popf
fwait
test
fcomps
and
pop
pushw
sub
mov
es
mov
sub
cmp
inc
jb
mov
das
pop
fmuls
add
shrl
outsl
pop
ret
pop
int
lods
int
lods
sbb
push
mov
mov
cli
inc
jge
bound
push
sub
popf
mov
cmpsl
sahf
sub
mov
push
add
lds
dec
mov
sbb
mov
stos
and
imul
setge
lods
add
lret
je
push
notb
xchg
mov
jns
scas
pusha
mov
and
repz
aad
xor
subb
repz
in
or
stos
xchg
xchg
jno
lds
in
mov
int
mov
in
shrb
lds
inc
fstpl
mov
aaa
or
fldenv
outsl
out
loop
shll
fs
outsl
sbb
andl
inc
pop
std
or
push
lods
cs
mov
mov
shrl
pop
pop
dec
mov
out
icebp
repz
pop
lds
cltd
subl
ret
cld
adc
inc
or
sahf
orl
fmulp
shrb
fs
movsb
arpl
lods
sub
je
ja
jmp
in
je
sbb
pop
scas
jae
popf
test
pop
jmp
popf
xchg
pop
test
jecxz
leave
push
loop
sahf
push
push
stos
aam
xor
ss
sbb
lea
inc
mov
in
mov
lea
hlt
sub
dec
and
xor
shlb
icebp
or
outsl
outsb
push
sub
std
lcall
fcmove
jne
push
ljmp
insb
es
lds
ljmp
stc
push
cmp
mov
in
aad
adc
clc
or
adc
push
unpckhps
push
mov
xchg
arpl
xchg
xchg
push
push
inc
int
fwait
and
lock
inc
or
inc
in
int3
aam
lret
push
and
mov
pop
pop
out
fidivs
sub
out
jmp
push
sbb
imulb
out
push
shr
into
ret
lea
xchg
shlb
loope
push
dec
hlt
lock
lods
xchg
std
push
lods
push
lods
mov
sub
nop
jne
arpl
sbb
outsb
int3
fcompl
xor
mov
out
cs
and
sbbl
loopne
jno
rcrl
pushf
mov
cld
jle
scas
scas
inc
dec
hlt
fxch
outsb
cmp
fimull
loope
cmp
cmpsb
in
in
dec
bnd
inc
scas
es
mov
shrl
in
pop
scas
sbb
mov
scas
lds
hlt
push
lods
cmpsl
fdivrs
mov
in
mov
sub
shlb
pcmpeqw
inc
repz
or
in
out
lcall
hlt
movsl
ja
xchg
adc
out
mov
cs
xchg
mov
push
mov
and
mov
stos
fstps
inc
mov
std
sahf
mov
mov
jp
jl
mov
subb
cmp
push
mov
mov
enter
xor
das
cmc
push
mov
push
stc
std
movsl
mov
fmul
pop
vrcpss
test
pop
fmuls
dec
stc
mov
and
lods
mov
sub
lds
cmp
lods
and
add
lds
jno
inc
xor
pop
sub
add
mov
add
lcall
adc
cwtl
add
pushf
lds
dec
test
into
out
cwtl
mov
roll
je
jl
jmp
xor
sub
jno
sub
stos
xchg
sbb
xchg
or
mov
rorb
sbb
dec
mov
outsb
xor
popf
dec
mov
cmc
mov
push
sub
repnz
out
loopne
outsb
pop
stc
xchg
jecxz
add
daa
dec
mov
hlt
lcall
or
hlt
fnstcw
jg
jmp
mov
dec
out
mov
scas
xchg
fists
imul
sbb
scas
mov
or
mov
pop
imul
dec
mov
pop
pop
ljmp
test
mov
mov
mov
fldl
enter
stc
lds
inc
inc
gs
outsl
sti
subl
std
pop
push
cmpsb
lods
push
xchg
or
xlat
mov
iret
sti
dec
mov
mov
inc
sti
dec
sub
sbb
aam
les
lret
mov
and
sbb
adc
sbb
lock
jne
jg
fcompl
daa
repnz
or
pop
cli
sub
movsl
xor
cmp
aas
xor
fisttpll
inc
xor
push
jmp
xor
sub
and
cltd
xchg
fimuls
test
mov
ret
fistpl
andl
scas
xchg
or
pop
pop
jp
sub
sub
xor
push
cmp
xor
cmpsl
shrl
daa
sub
dec
push
ljmp
fdivp
out
mov
inc
pop
popa
popf
sub
aaa
mov
out
jae
adc
out
mov
xlat
lods
xchg
mov
in
pop
sub
and
or
test
stc
pop
movsl
jmp
fs
pop
sti
mov
xor
stc
and
sbb
pop
inc
adc
lods
adcb
pop
mov
fnsave
fmuls
std
pop
dec
sbb
mov
int
lcall
cs
xlat
push
cmpsl
clc
loopne
lds
xor
out
out
sahf
je
xchg
jnp
cwtl
mov
inc
and
pop
shlb
scas
cmp
popf
cwtl
mov
mov
movsb
cs
xor
shll
jl
loopne
imul
jae
sub
mov
rol
sti
in
inc
mull
scas
cmp
into
jae
out
jnp
shrb
fadd
cmpl
xor
xor
cmpsl
adcl
mov
or
mov
mov
jg
sbb
pop
popf
xor
sub
and
fidivrl
xchg
lods
int3
add
cmp
or
inc
loopne
in
adc
sti
cs
repz
out
lret
and
and
mov
pop
popf
movsl
add
xor
outsb
fsubr
dec
js
fwait
xor
jmp
mov
or
rcr
test
lea
daa
in
add
lret
mov
shr
mov
test
jle
sarb
scas
movb
addr16
push
mov
mov
jbe
test
sbb
jnp
mov
jmp
pop
mov
push
pop
test
ret
fld
lahf
aaa
fmuls
pop
xchg
mov
sub
mov
mov
lret
mov
sub
rorb
xchg
add
fldenv
imul
pop
pop
xor
fsubl
popf
cmp
scas
js
into
pushf
mov
jmp
and
mov
decb
mov
mov
cmp
testb
fs
roll
mov
mov
stos
insl
cmp
mov
in
insl
adc
mov
cmp
fwait
mov
add
mov
cld
xor
xchg
mov
pusha
jns
or
ret
xchg
push
sub
dec
jae
sub
xor
add
movsl
inc
cmp
cmp
in
xchg
fisubrs
jmp
mov
fsubr
mov
sub
int3
pusha
xlat
in
leave
adc
clc
and
jmp
sti
mov
mov
sarl
mov
or
loope
mov
mov
mov
sub
popa
mov
mov
dec
push
push
in
and
shll
pop
mov
inc
out
rorl
mov
mov
das
mov
shr
scas
mov
repz
sub
enter
mulb
lods
fnstcw
mov
pusha
test
sbb
and
ret
and
shrb
pop
daa
addr16
cmp
popf
sub
and
in
lret
pop
out
je
mov
cwtl
cmc
push
lds
xchg
bound
out
fidivl
pop
pop
fcoml
pop
std
dec
cmp
jp
mov
mov
sbb
lods
adc
icebp
sahf
dec
and
sbb
jb
lods
and
imul
adc
popfw
cmp
fisubrs
mov
scas
popa
fdivrs
aas
and
push
pop
out
mov
xchg
addb
xchg
aas
pop
sbb
cmpsl
sti
scas
mov
push
mov
or
add
mov
pop
sub
fiadds
arpl
dec
xchg
and
dec
movsb
xor
cmp
stc
das
shl
out
in
cltd
mov
mov
repnz
push
adc
sub
lods
insb
hlt
daa
movsl
jmp
imul
ret
sbbl
test
dec
in
pushf
sbb
sbb
lret
loope
in
pusha
xchg
xlat
adcb
icebp
lods
xor
dec
dec
stc
push
mov
repz
sub
pop
ss
mov
data16
fstps
faddl
or
leave
and
jmp
fildll
adc
push
mov
scas
ret
mov
leave
sub
aaa
repz
cld
mov
fstl
mov
fwait
cmpsl
fisttpl
and
mov
test
sub
jno
mov
testb
pop
int3
jbe
lods
in
cmpsl
jo
movsb
pushf
jl
lods
cmc
les
sub
lahf
ljmp
lcall
jg
add
loopne
sub
seta
clc
xlat
mov
add
or
push
pop
dec
cmpsl
mov
into
mov
pop
sub
pop
push
in
test
lahf
ret
push
mov
shll
jg
push
aaa
ljmp
test
and
mov
iret
jne
fs
fwait
test
scas
loopne
in
mov
pop
add
mov
inc
clc
in
mov
je
add
js
xor
pusha
mov
in
out
dec
and
sub
lcall
fs
dec
fldenv
rcrl
jo
pop
int
cmpsb
inc
mov
mov
mov
loopne
loopne
jae
pop
sar
outsl
mov
fcom
fsubrs
jmp
sbb
jne
xor
ss
jbe
cmpb
aam
and
ficompl
in
repnz
xchg
sbb
flds
adc
sub
cmc
jbe
fisttps
xchg
mov
jmp
adc
jbe
loope
ljmp
or
sub
test
mov
stos
lods
mov
xchg
or
or
sti
sti
mov
mov
mov
lds
dec
cmp
mov
xchg
movsl
cmpsl
out
outsb
faddl
xor
xchg
lcall
mov
insl
das
sub
sti
iret
sub
rcrl
sub
lret
jmp
mov
xor
inc
xchg
lcall
lods
test
xor
fwait
inc
mov
xchg
repnz
or
mov
out
fisttps
movswl
testb
mov
ja
jnp
das
fwait
lea
flds
pusha
jmp
sbb
orl
xor
dec
sbb
shr
mov
mov
mov
outsb
adcl
test
scas
mov
movsb
test
shrl
iret
scas
cmpsl
out
xchg
js
adc
negl
xchg
mov
fstpt
mov
insb
negl
jb,pn
xlat
popa
lods
outsl
insl
test
push
dec
dec
cmp
repz
push
cmp
push
outsb
cmp
sbb
pop
adc
subl
inc
pushf
test
push
test
and
cmp
mov
sub
iret
out
test
pop
mov
dec
and
cmpsl
ja
sub
mov
cs
out
dec
cmpsl
mov
mov
enter
std
xor
ret
popf
cmp
in
clc
or
xchg
rorb
inc
add
xorl
jge
pushf
ljmp
ret
inc
test
lods
scas
int3
mov
lds
jae
out
in
jl
outsb
mov
xchg
xor
mov
jmp
or
scas
out
push
daa
nop
cmp
jge
sbb
mov
xor
dec
nop
sub
cmpsl
adc
movl
pop
sub
mov
xchg
in
nop
popf
xchg
pop
xchg
xor
or
dec
js
out
add
xor
pop
xor
add
into
lods
cmc
cmp
rcr
mov
ljmp
mov
cltd
hlt
out
xchg
loop
cmc
or
scas
mov
xchg
push
cs
into
mov
icebp
fisttpll
add
lahf
fstps
cmp
dec
mov
repz
mov
xor
jmp
fnstcw
ret
nopl
mov
repnz
or
sub
xchg
cmp
pop
mov
pop
xchg
filds
xchg
xchg
fistpl
loopne
sub
in
mov
mov
pushf
mov
popf
cwtl
pop
gs
movsl
stos
dec
adc
fsubrl
xor
cmpsl
aaa
mov
fidivl
fsubrl
mov
aas
iret
mov
or
in
leave
daa
xchg
xor
adc
lds
pop
adc
or
add
fsubrl
outsb
lods
pusha
insb
jecxz
xchg
loop
adc
ljmp
loop
xor
mov
nop
ret
jmp
negb
jp
jns
aad
xchg
xor
pop
lds
addr16
pop
test
dec
sbb
lret
inc
and
stos
scas
lea
int3
andl
pop
add
xor
push
add
sub
int
ret
mov
aas
fwait
mov
inc
mov
gs
outsl
mov
js
jl
addb
aaa
lds
xchg
and
les
fiaddl
mov
cmpsl
addr16
testb
pop
in
jbe
fxch
pop
add
mov
and
mov
repnz
shll
jmp
pop
test
add
in
int3
jmp
test
dec
mov
push
aam
xchg
aas
xor
cmp
fidivrl
and
nop
ljmp
add
jbe
sbb
push
mov
adcl
test
push
jbe
jae
mov
les
pusha
les
dec
in
sub
fbld
inc
loope
fnstsw
jae
add
push
lcall
stos
mov
orl
and
repz
cmp
addr16
mov
addr16
mov
sub
pop
fnstsw
lret
adc
mov
xchg
dec
test
out
xor
bnd
pop
cmp
pushf
cmpsl
adc
sub
sahf
fmull
jb
cmpsb
jo
sbb
and
mov
mov
inc
dec
sub
mov
mov
sub
jmp
lret
mov
mov
sub
scas
sbb
daa
out
loopne
mov
xor
jmp
cwtl
inc
fisubrs
sub
mov
fmul
cmc
xchg
xor
lds
xchg
xchg
gs
push
lcall
sbbb
rcll
mov
and
dec
cwtl
test
and
cmp
insb
pop
jmp
imul
jp
sub
pop
loop
ret
xchg
and
pop
ljmp
into
pop
ret
cs
mov
push
fnstenv
adc
mov
ret
or
lds
and
std
mov
sahf
insl
sub
or
xchg
rcll
pushf
mov
ljmp
stc
out
mov
pop
cmpsl
dec
mov
les
fxch
inc
dec
call
mov
fnstenv
or
imul
pop
stos
std
pop
repz
jb
xchg
or
outsl
dec
mov
sarl
cs
jmp
pop
jno
out
or
sbb
sbb
mov
cmp
into
lahf
outsl
cld
inc
mov
cmpsl
jp
sub
ss
or
pop
mov
mov
loope
mov
call
movsb
in
xor
loopne
ja
inc
outsl
daa
mov
xchg
mov
pop
cmpsb
xor
movb
fisubrl
jb
loopne
jge
cmp
and
aas
sarl
xor
int
fldt
fwait
lret
sub
knotb
aaa
scas
mov
cmp
lret
sub
lods
out
js
sti
adc
cwtl
out
mov
lahf
jne
mov
adc
imul
sarb
shlb
or
xlat
lret
sarb
jg
cmp
mov
mov
jb
mov
fdivrl
jns
mov
add
mov
push
fcmovnb
ljmp
je
addr16
loope
sar
fnsave
cmp
xor
and
ds
pop
pop
enter
pop
jbe
outsl
pop
mov
push
adc
pop
mov
fstpt
sub
or
flds
outsl
xchg
insl
jbe
adc
xchg
fbld
daa
pop
mov
mov
mov
and
stos
push
fsubr
push
mov
cmpl
add
sbb
xor
xchg
testb
gs
add
sub
or
lds
popf
dec
loopne
cwtl
mov
or
xchg
push
sahf
jl
pushf
arpl
jle
push
mov
and
cld
xor
mov
in
and
jecxz
mov
pop
lods
cmp
mov
mov
and
and
ret
int
lds
jle
subb
orb
shll
repnz
lahf
outsb
pop
dec
sub
mov
js
xchg
sub
jne
or
loop
lods
loop
xchg
call
daa
ret
inc
decl
pop
dec
daa
jl
cmpsw
bound
lods
xchg
js
sub
mov
sub
xor
in
aam
into
mov
push
add
imul
in
sub
jge
out
movsb
xor
aad
cli
aam
mov
push
xchg
out
add
outsb
aaa
cwtl
pusha
add
fwait
or
inc
sub
int
jmp
add
add
insl
sbb
mov
call
xchg
sub
sub
lods
ficompl
fwait
out
inc
xchg
into
and
les
outsl
mov
loopne
xor
insb
in
test
sti
je
jnp
iret
iret
mov
inc
push
push
mov
jge
pop
call
inc
inc
sbb
outsl
std
in
and
hlt
pop
pop
imul
daa
fistl
add
insb
stos
mov
jb
mov
ja
shll
in
mov
lods
xor
xchg
mov
insl
xchg
sub
and
scas
bound
test
das
popf
pusha
daa
xchg
add
test
cmpl
xchg
inc
mov
mov
or
sbb
outsl
push
push
mov
fcomip
mov
push
xlat
popf
push
mov
push
daa
sti
sub
push
fisttpl
cmpsb
mov
fwait
jg
cmp
ret
lretw
add
hlt
inc
popf
mov
insl
addl
inc
inc
into
mov
sbb
pop
xchg
pop
sbb
mov
mov
xor
fnsave
testb
das
mov
xchg
lcall
insl
add
sub
xchg
loopne
popa
lret
fildl
mov
sti
test
mov
mov
jge
push
cmp
rorb
ficompl
pop
or
ds
int3
sub
inc
dec
push
cmpsl
imulb
ret
fistpl
das
mov
movsb
fstpl
jge
jmp
cmpsl
inc
mov
add
insb
sbb
cmp
fadd
cld
into
push
or
pop
dec
xchg
loope
int3
lods
or
in
push
jne
jae
stc
lods
jmp
sti
xor
dec
mov
jne
pop
jmp
and
outsl
ss
loop
iret
insl
adcb
sub
push
dec
loope
daa
cltd
je
stos
imul
pushf
xchg
in
int3
test
dec
fcoms
lods
xchg
sti
mov
mov
js
test
inc
insb
or
mov
pop
ljmp
dec
cmp
sbb
xor
mov
xor
mov
cmp
sub
int
xchg
test
rcl
sub
ja
hlt
adc
xchg
in
std
divb
sub
jo
daa
das
mov
ss
das
mov
push
pop
daa
fisttpl
and
insb
jnp
insl
cmpsl
stos
xchg
dec
popf
mov
sub
popf
loopne
sbb
lods
mov
mov
sbb
pop
popf
fisttpll
mov
xor
je
xchg
sti
add
mov
in
push
sub
lods
int
or
sub
bound
arpl
mov
das
pop
sbb
sub
xor
jnp
movsb
scas
out
xor
xchg
hlt
outsb
scas
inc
sub
sub
xchg
aaa
scas
fwait
push
hlt
cmpsl
push
shr
into
and
lds
xchg
push
in
add
in
rcll
sub
ret
mov
mov
outsb
pusha
test
divb
pop
pop
mov
inc
in
stos
scas
into
pop
mov
das
outsb
pop
fs
sub
inc
xor
shrb
mov
daa
fisubrl
scas
xchg
test
stc
lock
or
sub
test
mov
adc
in
mov
xor
shlb
sbb
pop
aaa
push
es
adcb
mov
or
into
aas
cmpsl
xchg
jb
jb
push
cmpsb
cmpsl
sbb
insl
sbb
cltd
push
loop
jae
pop
inc
cmp
push
sbbl
dec
cmp
ret
das
pop
pushf
pusha
sub
mov
pop
and
mov
fcompl
fdivrs
cwtl
test
ds
pop
vpaddd
inc
jbe
jns
addr16
sub
je
dec
mov
adc
ljmp
xchg
stos
sbb
call
mov
cmp
movsb
fadds
fistpl
lods
test
sbb
adc
xor
in
fldcw
stos
les
int
pop
pusha
mov
les
mov
mov
out
js
mov
dec
std
push
inc
int
sarl
outsl
stos
jo
jb
loopne
cmp
lds
shrb
cmpsl
and
mov
cld
test
subb
nop
jle
lods
icebp
jmp
loop
fsubrs
outsb
dec
jmp
xor
and
mov
mov
sahf
sbb
or
sbb
xchg
push
les
popf
pop
orl
rcll
xor
insl
xor
mov
dec
sarb
inc
loopne
xchg
inc
sub
or
inc
or
cmp
scas
mov
jg
xor
xor
outsb
mov
out
xchg
test
jmp
mov
mov
xlat
pop
sahf
pop
xlat
ljmp
sbb
repnz
xchg
xchg
adc
xchg
jnp
xor
arpl
mov
push
sub
inc
adc
xor
lock
fs
mov
jle
scas
or
push
cmpsl
les
lds
popf
cmp
lcall
aad
lods
jge
lcall
push
loopne
sti
sub
lds
fistpl
ss
or
out
and
divb
push
das
sub
jg
je
sub
pushf
call
mov
xchg
cwtl
xchg
lds
gs
sub
repz
leave
and
out
mov
fstpt
out
ret
mov
call
xor
daa
mov
lahf
pop
test
xchg
xchg
xchg
jmp
cltd
mov
stos
rcl
mov
pop
cmpsb
and
push
call
scas
loopne
jns
or
outsb
into
popf
jmp
movsb
divb
scas
sbb
insb
outsl
push
lods
fildl
lods
push
outsl
outsb
sti
add
insl
imull
sub
aaa
lods
inc
lods
adc
dec
faddl
lods
cmp
rol
sub
scas
test
pushf
mov
subl
sub
add
xor
mov
fwait
inc
sub
lds
cltd
in
cmp
icebp
xor
sarl
daa
push
adcl
dec
out
jb
and
mov
and
cld
mov
data16
ficomps
sbb
add
scas
hlt
mov
inc
out
sahf
pop
xor
sbb
mov
movsl
scas
ljmp
fcmovu
push
call
pop
add
fldt
adc
out
sub
out
push
ss
in
dec
stos
dec
sbb
hlt
icebp
lock
int
outsb
fwait
or
sub
cmp
adc
enter
xchg
cltd
call
in
adc
and
jp
mov
aam
sbb
gs
and
rcl
push
push
pop
enter
out
ret
aam
xchg
aaa
and
pop
into
in
add
or
shll
pop
dec
xchg
sub
icebp
dec
jne
mov
xchg
aas
mov
mov
sub
std
mov
mov
sti
mov
outsl
dec
add
inc
mov
mov
popf
in
jg
mov
pushf
arpl
xchg
repz
xor
hlt
jge
loope
jne
cmc
add
sbb
imul
movsb
and
inc
mov
repnz
jo
inc
mov
dec
sub
mov
jno
or
xor
pop
push
xchg
sub
dec
lret
les
ret
lock
out
pushf
cmp
sbb
cmpsl
test
ja
mov
inc
jns
lea
push
daa
ret
out
daa
inc
mov
xor
mov
popf
cmp
dec
insl
shll
into
int3
mov
mov
and
shrl
push
das
daa
jae
in
imul
xchg
fistps
stos
loopne
ret
push
pop
and
insb
pop
push
or
xchg
std
dec
ret
inc
out
lods
inc
mov
aas
fwait
xchg
vrsqrtps
std
mov
mov
outsb
ljmp
add
test
or
lods
pop
mov
lds
nop
xchg
mov
jle
cltd
pop
or
addb
data16
sub
push
mov
xchg
add
lods
pop
call
jmp
aas
dec
sti
mov
sbb
xchg
enter
orl
fcomps
or
push
popf
in
or
outsb
call
in
sub
and
jnp
test
sub
adc
mov
ret
loopne
gs
sbb
or
outsl
xlat
lds
and
dec
popf
jbe
jne
shl
mov
repz
fisttps
scas
lods
mov
adc
jle
test
mov
aad
fwait
dec
mov
int
daa
movsb
mov
popf
cwtl
pop
sahf
sbb
pop
sbb
das
in
xchg
mov
pop
adc
push
cmpsl
scas
mov
mov
mov
movsl
in
leave
push
fidivrs
sbb
in
sahf
mov
in
ror
push
in
test
jne
adc
fwait
out
popf
xor
cltd
fsubl
adc
cs
icebp
jmp
fldt
mov
fwait
cmp
mov
loopne
jbe
sub
rcrl
cmpsb
cmp
call
push
cmp
cmpsb
out
sub
in
xchg
jl
dec
xchg
mov
mov
add
push
pop
mov
or
jp
sbb
pop
sub
enter
ret
mov
arpl
push
icebp
ficomps
inc
mov
pushl
lds
dec
int3
aam
roll
arpl
mov
or
dec
jbe
int
mov
je
cmp
mov
jnp
mov
push
pop
into
mov
inc
scas
pop
test
or
sbb
out
inc
dec
sbb
cmpsl
int
lock
es
popa
stc
fstpl
out
lods
cwtl
in
imul
or
int
mov
imul
inc
fwait
mov
xchg
xor
out
test
jmp
or
outsl
dec
loopne
in
fwait
out
jle
shlb
fistpll
addr16
sti
js
xor
scas
fcmovnb
fldcw
lret
mov
shlb
outsl
aaa
cmpsl
popl
and
inc
jmp
repz
push
add
imul
push
iret
xchg
aad
fisttpll
or
loopne
sbb
jecxz
ljmp
push
fsubrl
insl
ds
mov
jb
iret
mov
lret
test
jns
andb
mov
lds
leave
in
cli
ss
inc
movsb
ljmp
pop
mov
xor
mov
outsl
mov
loopne
jb
test
cs
add
jb
and
std
xchg
push
pop
inc
movsl
scas
jae
cs
inc
je
cmp
add
repz
mov
cmpsb
rcll
lret
icebp
shlb
pop
jne
add
call
jne
sahf
leave
push
cmpsl
xchg
lods
and
out
push
stc
ret
scas
cmp
xrelease
stos
movsl
xor
sbb
mov
pop
cmp
mov
nop
pop
aas
xchg
fs
test
cmpsl
add
ja
xrstor
std
ss
xor
and
pop
mov
mov
jne
or
add
sub
or
loopne
repnz
insl
xchg
and
mov
in
xchg
mov
int
popf
js
pop
fs
dec
repnz
mov
in
sbb
dec
jl
push
jo
roll
pop
cmc
scas
xor
xchg
fnstcw
mov
sti
call
sub
mov
mov
stc
test
test
mov
addl
scas
cmc
fidivs
lahf
mov
push
xor
jo
pop
jae
ret
loop
dec
mov
mov
repz
adc
and
loop
int3
imull
repz
fldcw
push
mov
imul
es
out
fstps
cltd
fistl
stos
sub
es
pop
repz
pushf
lods
aam
je
sub
ljmp
push
adc
aaa
lods
stos
cmpsb
jmp
push
and
sub
loop
sub
mov
cmpb
sti
jae
xchg
test
dec
sub
cmp
in
rcll
jmp
xorl
push
mov
aam
mov
mov
idivb
or
cwtl
fsubrl
out
or
inc
lods
dec
outsl
fcmovnb
dec
icebp
repnz
pop
lods
mov
jae
scas
es
ja,pn
add
test
ljmp
popf
dec
mov
push
insb
sbb
ffreep
jb
pop
push
dec
jae
lods
cmp
sbb
xor
xor
lods
shll
das
or
int3
jp
mov
pop
push
les
pop
int
sub
icebp
test
xchg
pop
in
pop
loope
ja
jb
jbe
out
xchg
fistpll
adc
cmpsl
mov
mov
rolb
and
js
je
enter
lret
add
mov
or
fistl
mov
mov
mov
ds
loop
inc
fsubl
test
mov
stc
stc
mov
mov
jbe
inc
dec
movsb
mov
pop
adc
and
mov
inc
popa
sbb
sti
sbb
mov
mov
enter
mov
js
dec
jae
gs
cmpsl
mov
or
daa
pop
in
andb
push
out
add
push
sbb
movsb
sub
fmuls
sbb
movsb
jb
aaa
adc
adc
dec
and
in
cmc
in
jmp
ret
xchg
js
and
ds
cmpsb
fdiv
bound
lret
pop
jmp
pushf
pusha
fstpl
dec
jne
outsb
outsl
adc
pop
testb
sbb
pop
lret
push
stc
mov
mov
out
loope
pop
imul
and
pop
jns
jecxz
cmpsl
rorl
jmp
ret
jmp
inc
subl
inc
mov
in
shrb
sbb
mov
xor
out
sub
test
sub
stos
jbe
cmp
jne
xlat
out
sbb
push
add
in
dec
xchg
mov
push
loopne
sbb
pop
sub
imul
cli
out
call
imul
loopne
cli
pop
fsubs
mov
lods
push
jmp
sbb
in
movsb
xchg
lret
mov
aad
aaa
pop
rcrb
pop
stos
pop
push
and
lods
outsl
repnz
add
das
outsb
pop
sbb
cltd
je
pop
sbb
fs
push
jmp
add
pusha
xor
fs
cmp
popf
and
mov
push
test
data16
sbb
subl
sub
into
xchg
lods
xor
or
xor
insb
xchg
lods
adc
arpl
push
jmp
xor
sub
lret
loop
jge
mov
mov
scas
mov
leave
and
and
je
mov
call
addl
inc
jns
frstor
dec
rorl
cmpb
aam
sub
shrl
mov
cld
sub
sub
aam
sahf
adc
mov
lods
ljmp
movsb
xor
dec
mov
sbb
lahf
in
sub
call
push
push
adc
xor
add
mov
xchg
je
call
popa
lds
aad
lods
jmp
jecxz
insl
sub
mov
js
sahf
and
mov
mov
pop
lods
xor
shrb
cmpsl
push
lea
push
add
or
bound
inc
stos
scas
pop
cmpsl
loop
out
dec
cmp
dec
sub
bound
scas
inc
sti
mov
ror
inc
rcrl
fwait
sub
and
out
arpl
imul
cmp
mov
pop
ja
lret
mov
mov
sub
inc
leave
jb
xchg
xor
notb
jg
add
mov
sbb
les
fdiv
roll
pop
lods
push
das
ds
pop
fnstsw
inc
out
lret
ljmp
popf
and
adc
adc
loopne
add
scas
int
mov
imul
negl
xor
jnp
inc
shl
aad
jmp
inc
popl
cld
mov
repnz
mov
arpl
test
hlt
mov
cs
hlt
test
int3
push
dec
shll
fwait
arpl
int
cmc
std
jmp
jo
lds
or
inc
cmp
int
jge
dec
arpl
mov
enter
int
and
ret
insb
inc
add
imul
aaa
mov
test
insb
aas
jmp
shll
jmp
mov
sbb
insb
xchg
test
inc
jmp
xor
push
sub
test
jno
or
mov
mov
in
mov
inc
ret
mov
push
inc
test
cmp
mov
icebp
push
xlat
scas
xchg
popf
mov
jbe
fmuls
cmp
cmp
push
ja
mov
andl
add
xlat
test
adc
adc
movsb
mov
adc
mov
sbb
or
cli
lret
or
add
das
out
lods
mov
mov
ja
push
add
sub
mov
out
clc
xchg
mov
test
sbb
mov
and
pop
mov
repnz
mov
sbb
scas
jo
cmp
hlt
mov
push
ret
sarl
adcb
sbb
outsl
or
mov
js
mov
into
fiadds
aaa
clc
mov
fildl
dec
xlat
enter
push
lods
push
outsb
push
mov
xchg
fistl
les
lea
sarb
sbb
hlt
loope
stos
inc
jb
popa
test
outsb
fadd
or
rcrl
add
push
and
mov
pushl
lods
pop
pop
sti
mov
in
mov
or
lds
dec
adc
repz
cmc
fsts
xchg
test
or
cmp
adc
cmpsl
xchg
outsb
or
lock
cwtl
xchg
test
sub
push
dec
repnz
mov
vpand
and
outsb
add
rolb
std
jo
inc
dec
pop
pop
ret
hlt
ss
jl
shrb
xor
cmp
add
call
shrl
sbb
add
ja
out
aaa
dec
xchg
insb
leave
jl
xchg
test
xor
mov
pop
or
sti
pop
mov
xchg
js
inc
int
pop
out
xor
xchg
dec
dec
adc
or
dec
int3
sub
mov
lea
sbb
or
mov
mov
push
jmp
pop
pop
into
fadds
sub
jb
popa
ljmp
fistl
mov
lret
mov
lcall
negb
test
adc
int
sbb
out
repz
and
mov
ret
das
test
dec
mov
mov
and
dec
out
lods
fsubrs
stc
lods
mov
in
mov
xor
mov
shrl
ljmp
daa
push
xchg
loopne
xchg
fisubl
movsb
jmp
fs
mov
add
sbb
pop
push
xchg
pop
ds
aam
ret
and
mov
adc
pushf
mov
insb
and
cli
flds
lods
jnp
sbb
and
push
test
iret
adc
xor
ficompl
sahf
pop
int3
inc
dec
cmc
enter
lcall
jo
test
ljmp
xor
jecxz
and
sub
xor
enter
and
mov
mov
xchg
out
daa
orl
or
xchg
mov
mov
in
pop
xlat
insb
pop
inc
cs
mov
dec
rcr
iret
xor
scas
add
loopne
dec
lea
mov
call
popf
sub
int
xchg
inc
xor
negb
or
test
mov
push
aas
sbb
out
enter
xchg
jne
addr16
nop
insl
mov
mov
mov
je
out
lea
mov
fwait
test
mov
xchg
out
in
sub
lcall
add
sbb
sbb
mov
popf
sub
repz
pop
popf
add
movsb
push
cltd
shl
xor
inc
das
push
push
mov
into
or
insl
jb
pusha
sub
daa
daa
dec
addl
cmp
in
sub
push
mov
mov
xchg
sub
xchg
inc
mov
paddsw
loope
cs
add
daa
mov
ja
outsb
mov
sbb
insb
sbb
bnd
icebp
repnz
sub
sbb
mov
into
mov
xchg
mov
dec
sub
pusha
stos
out
mov
xchg
fwait
in
add
sti
adc
sbb
push
mov
pop
sub
and
dec
add
insb
xchg
outsb
jo
mov
xchg
aad
or
je
ds
in
sub
inc
sbb
lret
jp
xchg
in
int
or
es
mov
nop
add
stos
out
fnsave
adcl
outsl
loopne
int3
pop
push
mov
mov
xchg
mov
sahf
add
in
inc
xor
aas
popf
arpl
test
sbb
adc
hlt
xor
push
in
jecxz
pop
loope
sub
out
mov
insb
mov
or
jge
push
push
pop
int
pop
adc
int
fstps
sub
dec
loope
pop
pusha
repz
pop
cs
dec
lods
xchg
inc
mov
pop
sbb
jge
mov
pop
inc
xorl
hlt
push
aaa
lods
inc
xor
jns
xor
pop
inc
lock
push
ret
xor
xchg
mov
lds
movups
dec
lock
or
les
pop
sahf
out
inc
jae
adc
xchg
lods
rclb
push
add
jo
in
jb
int
inc
and
mov
push
mov
mov
imul
loopne
dec
scas
mov
xor
jb
jecxz
sub
ja
adc
pop
push
or
scas
int3
jno
js
add
lahf
loopne
fiaddl
idiv
fcmovne
ljmp
or
lds
pop
adc
mov
fmuls
int
ss
pop
mov
mov
roll
cmp
lock
out
jne
inc
mov
and
fadds
addr16
cmp
xchg
fidivrs
lret
stc
enter
aaa
xchg
lret
fstpt
adc
das
scas
pop
sbb
imul
mov
lahf
push
aaa
outsl
push
out
dec
mov
pop
test
mov
cld
sbb
scas
dec
mov
out
pop
outsb
ror
jno
xchg
ret
mov
loopne
pushf
or
inc
dec
int
cmp
xchg
mov
mov
sub
out
leave
or
fdivrs
out
repz
pop
mov
xchg
in
xchg
imul
dec
js
mov
lea
sbb
bound
daa
mov
mov
mov
pop
stos
dec
in
mov
aaa
adc
testb
insb
adc
mov
imul
or
xchg
testl
pop
xchg
jae
jmp
hlt
sbb
icebp
loop
es
mov
les
jge
outsb
and
jmp
add
scas
testl
lret
cmp
lcall
lret
pushf
xchg
sbb
sub
cwtl
xor
lea
cmp
sub
mov
stos
mov
fndisi(8087
insb
push
imulb
aam
jno
add
outsl
mov
cmc
dec
pop
mov
ret
jl
sbb
and
jbe
in
call
xor
aad
loopne
clc
and
scas
int
sub
mov
lds
clc
sub
sbb
or
insb
lret
cmc
scas
fwait
hlt
pop
les
cmpsl
data16
pop
jge
pop
test
aas
jmp
cmp
lds
adc
mov
in
sub
sbb
cltd
jns
imul
loop
movsb
jo
sahf
das
je
fcomps
fidivs
fisttpll
loope,pn
outsb
fistpll
out
lcall
sbb
shll
adc
or
das
xor
mov
jge
sub
fucomi
inc
jbe
inc
cmp
cbtw
daa
fsubrl
push
rcrl
ja
jne
push
jne
icebp
sbb
fwait
ret
ret
cmpsb
negl
insb
in
and
ficomps
loopne
dec
imul
insb
sti
or
mov
pop
jmp
loopne
mov
insb
out
push
jle
adc
int3
movsl
mov
lods
pop
sbb
lds
fistpl
mov
shlb
daa
pushf
cmpsb
in
sbb
xchg
mov
sbb
mov
cmpsl
xchg
btc
cmp
aaa
hlt
pop
xchg
fidivl
mov
mov
lret
mov
xor
lods
mov
lea
lods
sbb
repz
adc
mov
sub
sbb
cmp
or
or
xchg
push
sbb
xchg
loope
push
aaa
or
insl
push
mov
xor
scas
fcomi
mov
mov
popf
sbb
int3
aas
and
push
fimuls
lret
xchg
test
lds
mov
std
sub
negb
insb
pop
xchg
and
pop
cli
cmc
and
and
sbb
mov
jne
mov
mov
dec
ret
out
loopne
movsl
test
fidivl
sub
frstor
pushf
pop
pop
out
outsl
xor
pop
test
and
pop
mov
pop
loopne
xlat
cltd
sub
repz
adc
adc
out
fwait
rorl
stos
mov
lahf
xchg
scas
lret
fwait
dec
pushf
sub
dec
data16
sbb
roll
mov
dec
cmp
pop
cwtl
jb
mov
rep
faddl
push
imulb
mov
xchg
scas
out
pop
jbe
andb
cmp
mov
cld
imull
xchg
sbb
pop
out
cmpsl
xor
or
mov
or
ds
sub
ja
dec
mov
pop
cld
shrb
lret
jb
lock
inc
fcomi
pop
mov
cmp
dec
adc
cmp
inc
mov
lret
jo
test
push
xlat
add
jns
data16
lcall
sbb
aaa
fs
lret
jne
cmc
sbb
cmpl
or
scas
fstcw
sub
or
ss
lods
cs
mov
lds
jo
std
hlt
mov
mov
xchg
out
xchg
and
mov
movsl
aad
sub
adc
mov
int
ret
xchg
mov
scas
or
fninit
mov
xchg
stos
mov
out
adc
add
cs
xchg
and
imul
insb
movsb
lods
cmp
lds
pop
and
add
in
mov
adc
pusha
fdivl
loopne
and
sub
test
adcl
cmpsl
loop
xchg
xor
jl
xchg
fcmovb
das
pop
iret
mov
mov
or
dec
ja
mov
or
xchg
mov
or
arpl
outsl
adc
adc
xor
sbb
sub
sub
mov
fisubrl
jg
jmp
mov
pop
mov
xchg
sbb
inc
addl
std
loopne
sbb
sub
xor
jmp
fwait
repnz
out
mov
in
std
sub
push
jnp
popf
repnz
adc
popa
bnd
or
jmp
push
cli
mov
jb
pop
mov
xlat
das
divl
push
mov
xchg
stos
mov
int
sub
mov
faddl
inc
in
mov
sub
inc
inc
outsl
push
daa
aad
push
and
fcoml
ja
imul
add
push
notb
cmc
std
mov
insb
mov
cmp
aam
mov
adc
repz
call
scas
sbb
fldcw
ficoml
xor
inc
lret
sbb
ljmp
xor
or
sub
mov
shl
sub
insl
mov
fisubs
daa
mov
or
dec
sti
sahf
in
in
xchg
lret
mov
and
int3
mov
xor
sbb
fdivrl
fadd
arpl
mov
loope
cmpl
andb
fdiv
in
in
test
movsb
cmp
jno
cmp
stc
mov
je
repz
loopne
into
sarb
sub
mov
mov
loope
fidivrl
xor
rorl
call
jp
jle
stos
cmp
scas
mov
addb
insb
bound
push
fs
fs
decb
mov
mov
scas
lds
xchg
stc
jne
or
pushf
shrl
scas
pop
fld
xchg
and
lods
pop
fwait
leave
loop
push
in
cmpl
icebp
sub
insb
int
cmc
shl
or
and
cmp
jl
adc
pop
pushf
insl
icebp
ret
popf
inc
pop
cwtl
xor
or
lahf
addl
sub
cwtl
sti
out
pusha
lods
sarb
outsl
jne
sti
fwait
mov
xor
jl
loop
add
or
add
push
loop
push
mov
add
mov
xchg
inc
test
pop
hlt
imul
in
loop
cmpsl
out
mov
out
jl
mov
out
and
stc
test
mov
cli
imul
test
or
sub
cmpsl
push
pop
lds
les
fwait
insb
push
insb
sub
pop
xchg
adc
int3
lahf
dec
inc
sub
stc
std
sbb
xchg
leave
out
push
inc
inc
hlt
cmp
jns
cmp
xchg
or
inc
int3
jecxz
inc
mov
enter
pushl
cmp
lea
shld
lds
fildll
sbb
push
jns
je
clc
insb
push
add
jb
xor
dec
pop
fwait
sbb
sub
jl
push
fucomp
les
rcrb
shlb
adc
icebp
xchg
sub
out
sbb
movsl
pop
mov
cmpsl
jmp
fnsave
jg
sbb
jbe
stc
inc
add
das
dec
das
pushf
daa
pusha
lods
jmp
xchg
mov
jmp
or
pop
sti
lods
add
or
movsb
test
aam
inc
das
sub
jne
adc
cwtl
in
jb
mov
or
fs
test
mov
ret
inc
or
sub
dec
lcall
aaa
loope
dec
rcll
mov
rcrb
shll
sub
adc
cmp
ficompl
outsl
arpl
cmpsl
hlt
mov
jl
dec
getsec
mov
loopne
out
dec
lret
lret
push
jg
mov
xchg
lods
and
fisubrl
int
sbb
dec
or
xchg
lea
clc
insb
mov
mov
lret
cli
icebp
in
mov
jns
jno
lret
push
inc
mov
in
dec
jl
xorl
cmpsl
jbe
dec
mov
ja
xor
loope
add
add
icebp
fdivr
ret
pop
or
and
lods
sub
movsb
pushf
mov
push
mov
clc
repz
insl
jmp
jp
and
mov
sub
xchg
in
fwait
mov
insl
scas
sti
jmp
in
nop
je
cmc
std
neg
in
ljmp
outsb
fdivrs
mov
pop
out
or
inc
daa
arpl
or
pop
inc
stc
clc
out
test
xchg
imul
les
cmpsl
test
test
mov
mov
imul
lahf
sub
pusha
cwtl
sbb
mov
roll
insb
stc
out
aad
les
adc
xchg
mov
pop
in
insl
jns
js
into
aam
addb
in
cmp
sub
stc
cmpsb
lods
jl
aam
pop
or
xchg
int3
inc
pop
jo
add
cmpsl
dec
adc
pusha
repnz
in
test
cli
sub
popf
xchg
ja
ret
cltd
andl
clc
sub
test
outsl
xchg
cs
xrelease
sbb
mov
push
inc
clc
fwait
xorb
xchg
inc
or
sub
sbb
sub
imul
dec
ret
mov
call
scas
bound
jne
cli
into
mov
test
mov
xor
pop
sbb
mov
pop
fnstenv
cmpsl
test
and
pop
out
dec
cli
in
in
jmp
std
daa
das
mov
stos
repz
or
pusha
pusha
jge
mov
je
push
pop
mov
test
insb
jne
mov
pop
dec
in
gs
sbb
xor
xlat
sahf
pusha
cmpsl
pop
add
shrl
icebp
fsubrl
cmpsl
cwtl
pop
or
adc
popa
in
cs
push
out
push
inc
imul
add
ficomps
je
sbb
mov
xchg
xchg
lret
cmpsb
inc
out
cmpsl
nop
ret
pop
jns
cmpsb
xchg
or
lahf
pusha
gs
fbstp
xchg
xchg
cmpsb
xchg
mov
pop
cltd
jae
mov
mov
lods
cmp
xchg
jne
mov
ljmp
push
cmp
push
inc
cmp
xchg
out
aaa
xchg
mov
cmp
fwait
in
cmp
cwtl
addr16
adc
cltd
int
push
dec
imul
sub
mov
add
leave
ret
loopne
cmc
jmp
mov
outsl
pop
sarl
lds
adc
lret
ja
ret
int
cmp
mov
repz
mov
shl
mov
scas
test
insb
or
dec
xor
in
inc
sbb
dec
jne
call
mov
xchg
test
jmp
jmp
cli
lods
mov
sub
xchg
movsl
sbb
add
in
or
aad
leave
test
sti
push
pop
sbb
inc
call
bound
pop
jb,pn
or
int3
pop
inc
jne
nop
dec
jmp
in
cltd
lods
adc
popf
test
daa
lea
sub
pop
xchg
mov
mov
std
pop
mov
jb
xchg
mov
inc
xchg
cmp
dec
push
xor
and
inc
scas
dec
imul
pop
cmpb
lret
add
inc
imul
mov
add
cmpsl
xchg
lods
fldcw
jnp
xlat
lods
inc
or
sub
repnz
loope
movsb
mov
fsubrl
xchg
arpl
mov
pop
jecxz
imul
lods
scas
dec
mov
dec
imull
shl
clc
adc
jg
sub
jle
arpl
fdivrl
insb
mov
xor
test
outsb
dec
out
mov
out
imul
xor
stos
imul
mov
or
lret
sbb
fnsave
cmpsl
popf
imul
stos
pushf
jmp
cli
insl
int3
xor
inc
in
loopne
jnp
insb
sarl
cs
sbb
inc
fwait
icebp
lcall
subb
int
lods
xchg
jnp
adc
adcl
cs
frstor
lahf
lea
xchg
cs
add
cmp
pop
insb
or
push
sub
insl
shll
sub
je
popf
cmp
pop
in
insb
push
sbb
fwait
mov
imul
jae
or
lods
leave
test
por
mov
bound
add
mov
scas
inc
and
sub
add
pop
aaa
inc
dec
sub
ror
cmc
jae
xor
scas
je
scas
lea
dec
cltd
cmpsl
leave
add
int3
cltd
sbb
cli
sbb
xchg
movsl
xchg
shrb
xchg
divb
divb
sbb
xchg
push
sbb
or
sub
sub
or
cmp
xor
sub
dec
and
cli
cmp
jb
xor
js
iret
push
adc
jmp
sbb
ds
or
in
fbld
mov
cwtl
push
pop
ss
icebp
sub
pop
aaa
outsl
or
outsl
insb
push
and
imul
fwait
jbe
imul
mov
daa
xor
out
stos
rcll
test
es
mov
or
test
sbb
ror
xchg
popf
sarb
or
mov
and
pushf
xchg
sub
sbbl
inc
testb
push
mov
sub
les
add
shrl
push
enter
inc
loopne
mov
push
pop
aas
addr16
mov
ret
pop
push
add
xchg
mov
js
sbb
mov
lds
pop
jo
mov
flds
imull
insb
arpl
push
cmp
sbb
inc
jg
or
mov
scas
mov
mov
xchg
movsl
in
mov
lods
mov
dec
mov
ret
and
dec
jg
jmp
imul
push
sub
int
insb
cltd
mov
adc
mov
cmpsb
int
fisubrs
mov
fs
mov
inc
inc
add
scas
pushf
loopnew
les
daa
pushf
andl
shll
mov
mov
add
dec
stc
cmpsw
insl
mov
fld
clc
in
lods
cltd
fidivrl
divb
jne
mov
scas
mov
dec
add
and
mov
jp
ud2
fsubrp
pop
pop
jo
movsb
mov
loope
inc
inc
sbb
cmpsl
cmp
in
or
sub
jmp
lods
test
xchg
xchg
mov
push
adc
aad
and
jne
xlat
ret
push
mov
and
adc
outsl
push
mov
adc
push
xor
dec
js
inc
xlat
mov
in
cs
pop
arpl
aas
loop
xor
mov
loop
and
int
stc
pusha
out
pop
je
inc
or
or
idiv
fiaddl
dec
testb
xchg
daa
daa
pop
dec
mov
fstpl
daa
pop
pop
mov
jecxz
aam
cmpb
xchg
pop
in
mov
scas
xchg
pop
mov
or
loope
call
pop
aas
sub
mov
mov
insb
decl
data16
lods
jno
and
or
lods
push
push
pushl
insl
test
sbb
repnz
or
jne
pusha
addr16
movsl
pop
fwait
sub
fistpll
jmp
mov
xchg
lods
pop
inc
sarb
out
loopne
mov
mov
cmp
outsl
sub
inc
jb
jmp
int
pop
jo
mov
dec
add
lcall
jge
leave
lods
fildl
test
jl
xor
add
sbb
push
cltd
inc
mov
lods
cli
imul
out
inc
dec
pusha
mov
out
mov
jmp
insb
incl
and
mov
xchg
push
lret
pop
int
and
or
sub
into
rorb
shlb
jne
inc
mov
push
xor
mov
add
repz
xchg
popf
fisttpl
and
jae
int
sbb
mov
mov
sub
ficomps
push
adc
xchg
pushf
mov
shl
and
sti
inc
mov
loopne
insb
bnd
imul
les
sbb
inc
jp
out
jno
shll
cmpsl
in
lods
aad
insb
insb
mov
add
fwait
in
mov
jl
jmp
mov
fldt
push
sbb
gs
int3
mov
cwtl
daa
out
jae
pop
xor
stc
cmpsb
xchg
neg
mov
das
imul
or
stos
andps
lods
dec
imul
cmc
aas
sbb
out
jmp
cmp
xchg
lods
sub
iret
fwait
test
cmp
int
enter
daa
add
cmp
fsubrl
jae
mov
push
xlat
mov
jl
repnz
sub
shrl
or
out
imul
cmpsb
push
aad
idiv
icebp
mov
or
repnz
sub
pushf
sbb
sbb
lds
ficomps
test
xor
out
sub
mov
cmpsl
mov
imul
sub
pop
leave
mov
mov
out
mov
pop
sub
cmp
sbb
mov
imul
shll
enter
lods
mov
sbb
pop
sbb
ret
movsl
test
jle
sbb
sub
xchg
mov
push
imul
sub
cmpsl
mov
movsl
or
mov
pop
imull
mov
cmpsl
mov
movsbl
insb
fldcw
sub
sub
mov
jae
xchg
add
xchg
xor
sbb
mov
and
xchg
cli
rorl
pop
imul
push
sub
sbb
mov
xchg
pop
push
mov
pop
mov
cmc
rolb
ds
cmp
sub
sahf
xchg
jg
ds
inc
sub
cmpsl
enter
in
jae
sub
movsl
pop
sbb
or
dec
test
je
inc
mov
cmp
mov
xor
stos
mov
sub
out
stc
jo
push
rcrl
xor
enter
jbe
lds
test
jp
cmc
mov
ret
lods
sub
test
sbb
repz
sbb
or
mov
mov
xor
lea
jnp
sub
mov
jp
sbbb
add
stos
lods
cmp
inc
les
ja
in
aas
mov
sbb
stc
cs
add
je
mov
and
pop
cmc
or
pop
xlat
push
ret
sub
mov
xor
int3
dec
add
xchg
aas
mov
scas
scas
in
xor
fcompl
sbbl
test
ss
sub
test
sub
out
mov
sbb
test
xor
mov
lret
test
pop
sbb
mov
push
sbb
jb
int3
mov
jnp
jle
dec
add
jge
or
mov
fldenv
rcll
mov
mov
cmp
shl
lods
mov
or
mov
out
mov
dec
sbbl
mov
jl
inc
sub
xor
int
int3
stc
add
scas
mov
test
sub
cmp
mov
dec
add
repnz
fldcw
push
sbb
mov
int3
mov
sub
rcrl
mov
imul
dec
ud1
mov
in
gs
cmpsl
dec
sbb
and
mov
lret
movsb
mov
in
xchg
sbb
mov
pop
jl
pop
sbb
leave
xor
push
jo
loope
popf
aad
lret
mov
mov
scas
sbb
mov
inc
jb
iret
outsb
loopne
loope
add
jecxz
cmp
adc
pop
repz
repnz
in
xchg
jmp
shll
or
inc
cmpsl
shl
xor
imul
shrl
cli
movsb
jl
xchg
add
add
adc
cmpsb
incb
push
movsb
cmp
xlat
dec
dec
lds
pop
lret
xor
subb
pop
jmp
mov
lock
or
cmpsl
mov
scas
sbb
pop
lds
fwait
lods
sub
xchg
push
add
sub
jmp
push
les
push
add
xor
xor
xchg
cmc
inc
sbb
enter
in
jno
or
cmp
pop
sbb
pop
sbb
int3
out
into
cwtl
mov
loopne
xor
mov
dec
aam
dec
rcr
shlb
into
adc
push
dec
out
ret
or
loopne
sbb
xchg
sub
pop
xchg
sub
push
mov
ja
xchg
jb
xchg
or
and
mov
aaa
mov
cli
sub
arpl
sbbb
jmp
fistpll
pop
mov
xchg
sbb
nop
inc
sub
ror
push
fnsave
sub
stos
repnz
pop
lds
sahf
inc
inc
insb
pop
jl
adc
xchg
xchg
xchg
sbb
das
ja
fmuls
xor
sub
inc
shrb
sbb
lods
aam
int
loopne
inc
movsb
mov
xchg
andl
mov
pop
jno
push
push
push
jno
shll
not
sbb
imul
or
add
sar
jae
mov
into
xchg
loopne
lea
push
clc
repnz
inc
arpl
xor
repz
jnp
int
or
xchg
pop
icebp
in
mov
mov
push
mov
jbe
ret
mov
lcall
sub
mov
pop
mov
mov
into
mov
lds
call
sbb
xlat
pop
imul
ret
push
pop
pushf
mov
pop
lock
lods
mov
loopne
sbb
cmp
push
jns
adc
ljmp
std
test
rolb
dec
movsb
mov
fistpll
sbb
int
jne
fwait
jmp
cli
jo
lock
ss
push
cmpsl
mov
dec
cmp
jbe
imull
ja
out
stos
cmpl
mov
sahf
clc
cmc
in
stos
hlt
xchg
inc
push
push
mov
push
in
test
ds
mov
mov
popf
bnd
mov
sahf
idivl
xchg
in
mov
pop
rol
or
sbbb
sbb
pop
jl
sub
repz
cmpsl
push
daa
push
inc
pop
jns
out
data16
sbb
mov
inc
inc
rol
xor
aad
shrl
xchg
enter
dec
jl
lods
and
ja
xchg
insb
repz
xchg
lods
xor
xchg
adc
mov
or
sub
cs
add
sub
add
insb
jmp
mov
popa
aaa
sub
fs
xchg
and
sarl
and
or
jecxz
testl
je
jo
jge
pop
xchg
jnp
and
fstpt
cmc
daa
lea
test
in
mov
mov
lods
imul
dec
imul
addr16
ss
stos
mov
push
and
xor
sbb
subb
pusha
out
fsubrs
inc
mov
stos
frstor
loope
ljmp
xchg
dec
int
fcomp
lret
mov
adc
push
lds
xlat
aas
ja
int
test
or
lcall
push
stos
xchg
test
sbb
push
aad
mov
sub
push
mov
test
sub
sahf
out
sub
fwait
xor
fildl
or
outsl
lods
fwait
xor
mov
addr16
sub
rcl
ficompl
and
mov
stos
add
rep
into
icebp
jp
pop
test
in
fisubrl
mov
sub
xchg
test
mov
ret
outsl
add
out
pop
arpl
popa
inc
pop
ficompl
fisubrs
and
push
into
mov
rcrl
sub
adc
jmp
pusha
jb
add
shll
add
sarb
cli
shl
cmp
arpl
pop
lock
push
sub
sbb
sbb
mov
add
xor
in
stos
fldenv
shlb
data16
pop
sbb
add
fdiv
dec
pop
lods
imul
lea
jno
fadds
jl
in
dec
fwait
mov
cmp
add
lea
mov
leave
or
jnp
push
cmpsl
mov
mov
shl
sub
sbbl
test
dec
sbb
mov
faddp
lods
add
aad
pop
jns
and
pop
lds
mov
cmp
negb
lods
inc
inc
push
fmull
lods
xlat
pop
fildl
inc
push
cmp
xor
insl
sbb
mov
jmp
jg
in
jb
xchg
ljmp
hlt
mov
jns
mov
int3
in
adc
pusha
dec
dec
fwait
mov
push
mov
sub
in
mov
jp
cmp
or
sbb
pop
popf
pushf
mov
fsubrs
dec
cs
xchg
sub
and
aam
into
rorb
fwait
xchg
jno
fs
cmp
jp
xchg
imul
rolb
pop
mov
or
xor
icebp
pop
pop
xor
sub
pop
mov
pop
imul
in
lds
mov
xor
mov
inc
in
nop
in
shlb
mov
int
inc
pusha
cwtl
scas
sub
daa
pop
aam
insl
push
ljmp
pop
xchg
ja
and
es
xor
cmpl
cmpsb
or
les
ret
mov
int
in
sbb
and
daa
ja
lahf
mov
push
and
xor
xor
mov
repz
fadd
xor
pop
dec
mov
xor
out
es
hlt
push
in
pop
ret
cmp
cld
mov
lds
cmpsl
mov
lahf
hlt
lret
jae
cmc
cmc
dec
fisubl
jae
and
cmp
dec
xchg
mov
mov
imul
lcall
fildll
test
and
inc
in
pop
push
scas
data16
jl
sahf
test
lret
test
sub
mov
inc
sub
pushf
dec
adc
int
mov
into
mov
daa
fsubrl
fmul
scas
shrl
test
xor
xor
leave
fwait
leave
mov
pop
xchg
ficompl
mov
sbb
pop
and
hlt
inc
test
dec
mov
mov
andb
lods
outsl
int3
adc
jo
insl
lods
je
adc
insb
lods
sbb
sbb
sub
xor
add
iret
sbb
sahf
cltd
xchg
mov
and
cmpsl
mov
mov
sbb
mov
push
mov
sbb
sbb
or
xchg
inc
jb
cld
popa
scas
das
fwait
into
test
lods
xchg
pop
je
xor
out
test
xchg
sub
dec
scas
mov
js
jmp
xchg
jne
mov
add
test
xlat
das
loopne
push
mov
pushf
lods
fucom
cmpsl
adc
inc
push
lea
aaa
and
scas
lret
int
mov
inc
je
jmp
xlat
lods
insb
sbb
out
ja
das
or
scas
cs
cmp
xchg
xlat
subl
out
test
subl
cli
fimull
cmc
sbb
loopne
clc
repz
xlat
cmp
sbb
inc
cmp
icebp
lahf
mov
repnz
icebp
xchg
jo
iret
sbb
jae
jb
xor
jno
mov
rcrw
mov
insl
sbb
mov
dec
insb
fdivrs
mov
ret
sbb
les
fstl
inc
jl
push
push
add
sub
jno
ss
or
sub
fwait
pop
sub
add
loopne
push
mov
cmpsl
jmp
pop
pop
lret
popf
jg
inc
shl
ret
test
pop
pop
mov
cmp
cld
in
inc
adc
mov
sub
sbb
mov
ja
jbe
fimull
mov
out
outsb
nop
pop
ss
cmp
xor
aaa
mov
xor
test
cs
cmp
add
into
adc
xchg
and
shld
std
sahf
sti
dec
sub
push
popl
dec
repnz
mov
fwait
shr
cmpsb
pop
cltd
adc
xchg
push
lods
int
xchg
mov
xor
xchg
mov
lahf
outsl
iret
jl
xor
jge
pop
mov
loop
and
lcall
loop
xlat
shrl
popf
sbb
or
sbb
add
cwtl
js
mov
das
adc
and
sarl
ja
mov
mov
fldt
mov
inc
sub
int
les
addr16
into
lods
push
and
lods
dec
sub
orl
mov
movsl
push
daa
adc
pop
mov
mov
mov
cmovnp
push
ret
sub
fidivs
mov
fbld
stos
mov
inc
daa
fsubr
lods
push
loop
stos
aas
nopl
sub
jo
mov
jmp
pop
xor
rorb
sub
into
in
jg
xchg
jns
nop
out
mov
inc
and
nop
daa
sub
jp
push
sti
add
nop
sbb
jle
movsl
jl
lret
adc
iret
fmuls
lods
or
mov
sub
sbb
cs
rorb
jne
shr
cmp
cmpsb
xchg
outsl
pop
mov
rcl
inc
jle
ja
mov
rcl
imul
std
xor
mov
jle
jnp
outsb
pop
insl
sbb
sarl
cli
or
pop
ret
addr16
bound
and
xchg
scas
pop
lods
mov
outsb
cmpsl
adc
sbb
pop
cmpsl
xor
inc
idiv
andb
lret
in
xchg
lods
xor
sub
mov
loopne
mov
enter
cs
hlt
sub
push
out
xchg
xchg
out
add
out
xor
mov
scas
mov
mov
cmc
jmp
cmp
inc
add
push
xchg
push
std
fiadds
sub
fwait
loope
sti
xchg
in
jg
std
lods
mov
pushf
fisttpll
lret
ljmp
daa
sahf
ret
inc
jo
test
into
stos
test
fadd
aas
sbb
scas
rol
inc
cmp
sti
inc
lods
xor
insb
and
pushl
lods
loopne
sahf
mov
pusha
sub
adc
insb
into
sahf
sub
in
pushf
inc
in
loopne
sbb
jg
xchg
into
sbb
add
fsubrl
fldcw
xchg
pop
insl
inc
pop
lods
push
jno
test
ss
scas
or
das
out
notl
mov
mov
or
enter
loopne
hlt
sti
subb
sbb
and
dec
js
mov
int
icebp
jb
cli
hlt
jb
cmp
fisttps
adc
lods
stos
adc
call
sub
pop
dec
out
mov
call
ljmp
fists
or
scas
subb
mov
inc
jg
std
jle
insl
push
inc
mov
lret
js
pop
int
mov
out
enter
pop
pop
lahf
add
scas
jb
sub
mov
lret
fisubrs
sti
jns
jmp
xchg
or
pop
mov
jmp
push
inc
test
cmpsl
icebp
gs
xor
sbb
adc
rcr
in
xchg
aaa
sub
pushf
push
scas
lods
aad
adcl
mov
shl
and
and
pop
out
mov
push
sub
adc
pop
push
movsb
sub
mov
jo
lcall
sub
push
ret
xchg
lea
jmp
popf
pop
jne
dec
jge
loope
xchg
jmp
dec
mov
enter
jne
cmp
pop
push
pop
popf
inc
jg
pusha
out
shrb
cmc
jb
mov
xlat
aam
test
pop
mov
int
sbb
scas
sub
and
pop
out
test
ja
pop
iret
fmul
repnz
inc
dec
sub
dec
mov
jmp
mov
adc
ret
mov
add
lods
fldl
mov
pop
popf
dec
std
push
loopne
ds
js
lds
int3
fcom
movsl
fbstp
mov
lods
mov
jmp
je
pusha
ret
lret
test
ret
pop
test
outsl
loopne
dec
cmp
jne
call
inc
loope
fstps
out
bound
fadds
test
out
stos
daa
scas
inc
repz
int3
jp
mov
imul
mov
jb
mov
and
or
out
jg
ss
mov
aaa
mov
pushf
nop
inc
mov
imul
jmp
push
outsl
pop
outsb
push
test
mov
jb
mov
jb
sbb
pop
jmp
outsb
jns
add
imul
sahf
cmp
loopne,pt
leave
gs
clc
mov
in
testl
dec
pop
cwtl
add
lea
sahf
sbb
inc
lret
outsb
jae
mov
sbb
cmp
xor
jbe
jmp
jg
enter
mov
pop
shrb
lea
loopne
sbb
outsb
xchg
cmp
mov
dec
sbb
out
cwtl
addr16
or
imulb
xor
aaa
std
sub
or
loop
dec
shl
loop
dec
sub
out
adc
mov
pop
pmovmskb
xor
mov
cmpsl
outsb
loop
cmp
mov
cmp
iret
mov
pop
jb
fadd
add
pop
cmc
in
out
into
push
ret
fpatan
fsubs
imul
in
jno
rcll
jbe
jmp
aam
orl
mov
jmp
daa
das
ret
mov
jg
xor
sub
movsb
push
jg
or
adc
hlt
int
into
sbb
out
and
scas
sti
fcmove
xchg
data16
adc
xchg
sbb
jne
test
mov
sbb
sub
mov
xchg
sbb
fucom
scas
add
jae
sbb
mov
sbb
sub
add
lea
sub
inc
iret
xor
dec
cmp
and
in
xor
mov
xor
loopne
call
inc
sub
daa
jl
xchg
ret
pop
fnstsw
in
pop
or
lahf
add
into
fwait
lods
sub
lahf
mov
imul
or
sti
test
cli
loope
fldcw
mov
movsb
addr16
mov
loopne
mov
popa
mov
pop
mov
push
add
ret
fwait
stc
mov
xchg
jge
lds
pop
idivb
dec
xchg
rorl
into
pop
pop
fcmovne
and
scas
daa
cmp
pushf
or
xchg
pop
les
sbb
mov
sti
scas
mov
push
sub
insb
in
mov
jmp
xorl
jl
sar
scas
sbb
pop
cmp
jns
lahf
imul
inc
sti
xchg
inc
outsl
jecxz
das
dec
pop
ret
jb
xchg
mov
sbb
xchg
mov
addb
aas
int3
and
insb
stc
pop
ret
movsl
dec
fdivl
call
jae
push
and
pop
and
out
pop
les
mov
imul
jmp
aas
lods
jbe
sbb
decl
pop
adc
int
dec
sub
xor
scas
out
cmpsl
jbe
jmp
out
loop
int3
push
loop
xor
pop
decb
andb
sbbb
daa
scas
mov
sbb
test
sub
lcall
push
rep
xchg
fnstcw
repz
in
shll
adc
icebp
popf
inc
mov
pop
mov
cltd
scas
lret
das
enter
jmp
dec
or
ss
sbb
xor
push
ss
pop
outsl
outsl
mov
xor
ret
jnp
js
sahf
xchg
pop
es
mov
sahf
je
xchg
adcl
je
loopne
adc
fsubr
pop
xor
ss
js
cmp
mov
movsl
cmpsb
nopl
aad
and
sti
inc
lods
dec
push
inc
ds
dec
and
pop
out
bound
pop
adc
ss
push
test
fistpll
lods
outsl
mov
inc
movsl
xor
loope
and
dec
xchg
mov
sahf
test
jne
repz
fwait
ret
mov
mov
scas
adc
movsl
mov
sub
fadd
sbb
outsl
pop
mov
or
dec
cmp
clc
testb
cmp
cmc
cmp
idiv
mov
push
sbb
mov
sub
lods
mov
inc
lods
jmp
call
in
push
mov
cmpsl
scas
into
dec
adc
mov
xorl
push
sub
and
shrl
push
sar
mulb
pop
add
outsl
lret
sbb
int
lcall
faddl
pop
sub
jno
inc
lock
insb
jl
ret
lret
mov
fildll
add
gs
or
pop
jne
inc
aas
mov
mov
rolb
mov
or
xor
popaw
xchg
mov
icebp
lock
dec
and
sbbl
subb
pop
int
sub
adc
adc
pop
repz
push
dec
cmp
or
addr16
xchg
pop
adc
mov
adc
icebp
sub
fisubrs
dec
and
gs
inc
stos
clc
cmpsl
popf
imul
lds
scas
repz
roll
out
lret
xchg
xchg
pcmpeqb
xchg
push
daa
les
sub
add
into
scas
sbb
lods
hlt
jns
lds
adc
and
js
ret
mov
xlat
add
adc
fcmovnbe
and
or
imul
stos
mov
outsl
loopne
out
pop
hlt
adc
lret
rcrb
pop
mov
xchg
stc
pop
cs
add
mov
push
lods
jo
xlat
movsb
pop
pop
testl
movsb
scas
ss
outsl
adc
jmp
mov
inc
leave
mov
out
fwait
lods
or
loopne
sub
sbbb
insl
sub
andb
lcall
xchg
nop
mov
dec
pop
in
and
insb
push
lds
inc
pusha
insb
xor
scas
in
cmp
mov
dec
outsl
dec
mov
sub
pop
outsb
lods
and
pop
sti
jne
cmc
test
ss
jge
aaa
int
out
pop
mov
sub
sub
and
pop
jmp
pusha
jo
insl
les
jmp
jbe
pop
or
lret
aad
xchg
adc
loop
cmc
pop
aaa
sbb
xor
push
or
cmpsb
int
out
cmc
imul
jmp
and
cmpl
scas
mov
adc
sbb
movsl
cli
subb
inc
ret
inc
lret
inc
sub
sub
inc
out
sub
jp
lods
xchg
shll
aam
jns
mov
cld
sbb
push
push
xchg
out
mov
mov
fadd
dec
int3
aaa
in
jle
mov
xchg
sub
mov
pusha
sub
pop
or
mov
jge
or
loopne
xchg
rcrl
cmp
repnz
cld
and
xchg
pusha
push
icebp
mov
data16
stos
jnp
hlt
sub
fwait
push
test
cmc
insb
notb
or
xor
mov
orb
lock
das
cwtl
jmp
lea
jbe
adc
cmc
xchg
test
clc
cmp
inc
push
hlt
int
xchg
gs
sub
mov
int3
into
add
insb
repz
lods
imul
cmc
push
xchg
dec
sarb
popa
and
or
ds
cs
orl
mov
test
mov
jb
mov
jge
pusha
push
std
outsb
fsubrp
rcrl
push
mov
jne
or
in
xchg
sbbb
shrb
fists
sub
pusha
and
sub
mov
fwait
icebp
aam
rcrl
loop
stos
cltd
mov
xchg
jmp
scas
in
out
lea
jne
pusha
push
mov
mov
scas
xchg
mov
andnps
fistl
mov
outsl
mov
loope
mov
repz
les
std
or
loopne
loope
sbb
fwait
pop
jbe
ja
jb
jmp
into
mov
and
imul
outsl
pop
pop
scas
add
cmc
js
sub
dec
out
cwtl
mov
out
xor
mov
mov
xchg
insb
jl
cli
test
dec
and
popa
jbe
and
jne
jmp
mov
ljmp
pop
test
push
lea
insb
out
aaa
arpl
data16
mov
stc
inc
sub
outsl
adc
test
lret
int
sub
shlb
or
fsubrs
jae
mov
mov
mov
insl
in
push
inc
push
daa
adc
test
in
jmp
jbe
pop
mov
sub
outsl
jl
cmp
sbb
cld
and
mov
mov
mov
cld
insl
mov
outsl
dec
mov
sub
dec
mov
adc
add
push
cmp
mov
mov
mov
sub
lods
lds
test
daa
adc
and
adc
xor
ret
lret
lods
mov
jge
enter
icebp
add
or
mov
shl
sub
les
ja
insl
bound
mov
xor
xlat
ljmp
cwtl
leave
pushf
sub
aad
fwait
sub
imul
sti
add
inc
jae
add
xchg
enter
gs
popa
shrb
ljmp
cmpsl
pop
mov
jg
jno
xor
test
and
mov
cs
outsl
std
add
fmull
in
in
loop
ljmp
mov
or
mov
adc
jge,pn
xlat
jl
pop
mov
out
jmp
add
shll
lcall
dec
lods
xchg
push
cltd
mov
pop
push
lds
rcl
pusha
lahf
dec
in
cmpsb
xor
lods
and
adcl
or
adcl
stos
or
int3
out
sub
in
fnsave
inc
cli
jecxz
mov
sub
sub
push
stos
lcall
gs
mov
sbb
test
sub
test
mov
dec
fwait
fwait
jnp
nop
data16
dec
lock
sub
add
mov
mov
popa
or
mov
mov
lock
leave
mov
mov
xchg
insl
clc
sbb
cld
in
ret
aad
mov
test
popf
popf
sahf
and
mov
push
out
inc
inc
lods
jo
and
dec
jbe
mov
imul
test
out
repnz
imul
add
and
lds
lret
and
and
cs
shrl
inc
mov
fldlg2
icebp
int
test
insl
aad
ljmp
popf
mov
inc
int
test
enter
nop
setnp
sahf
xchg
das
stos
fisttpl
inc
loopne
sub
inc
clc
mov
pushl
adc
cs
fcmovb
je
pop
xor
scas
int3
inc
pop
out
test
sbb
jmp
jp
pop
lds
xorl
daa
in
or
sub
loop
jp
jbe
xlat
jne
mov
cmc
adc
jmp
sub
mov
jnp
insb
add
adc
mov
xor
lcall
xor
shrl
xchg
fisttpll
mov
mov
xlat
mov
sub
xchg
lods
lods
xor
in
fdivrs
popf
insb
repnz
nop
push
lods
xor
cmpsl
int3
add
fwait
cmp
loop
mov
sub
scas
mov
in
scas
lds
in
fnstcw
mov
add
clc
aas
repz
ret
mov
aaa
xchg
sub
jmp
pusha
pop
push
mov
ret
popf
cmp
enter
xchg
xchg
out
mul
lods
mov
adc
sub
inc
and
adcl
das
jne
les
ret
bound
les
push
aas
add
adc
out
mov
incl
aad
sbb
nop
sub
test
fsubr
and
mov
scas
lods
daa
jp
sub
bsf
mov
or
test
jbe
sub
dec
sub
iret
sub
mov
fwait
out
repz
scas
jno
push
mov
mov
fcmovb
inc
xchg
jl
xor
jge
jmp
sub
out
testb
inc
in
lret
sub
outsb
daa
mov
xchg
jmp
xchg
add
jbe
mov
inc
daa
push
adc
push
in
insb
xor
das
lods
inc
add
push
movl
jecxz
enter
scas
out
jbe
mov
lods
sbb
aam
cmp
insb
gs
pop
xchg
push
cmp
push
out
jnp
imul
lods
sub
loope
test
dec
jge
pop
mov
vcvtsi2ssl
adc
xchg
mov
mov
lds
jne
fldln2
sbb
aaa
cmpsl
xchg
xor
shl
mov
mov
insl
cmpsl
push
movsb
mov
jmp
pushf
lea
push
jmp
sbb
mov
nop
lds
push
outsb
popf
xchg
sbbl
jg
rorl
dec
or
hlt
add
shrb
repz
repz
xchg
add
jl
cmp
arpl
mov
pop
in
subb
cmpsl
ret
jo
pop
addr16
cvtps2pi
xor
mov
push
jno
loop,pn
fisubl
lods
dec
xlat
ret
jae
in
and
adcb
loop
push
sti
or
add
jnp
es
pusha
cmp
arpl
sbb
fldt
les
xchg
push
out
js
pop
ret
pop
pop
and
xchg
aam
outsl
leave
icebp
and
xchg
or
idiv
mov
ret
imulb
or
aam
pop
sahf
jle
inc
xchg
xchg
mov
hlt
mov
ret
xor
sti
jle
in
loopne
pop
ljmp
inc
subl
leave
jg
int
add
fstl
sbbb
pop
pop
and
pop
imul
push
dec
pop
lods
mov
shll
cwtl
insb
dec
cmp
loop
add
xchg
mov
aad
or
sbb
jmp
arpl
test
cmc
mov
sbb
ret
lahf
outsl
xchg
daa
xorl
sbb
out
outsl
popf
mov
sub
mov
lds
lahf
dec
in
in
pop
std
das
pop
je
jo
in
mov
sbb
bound
imul
cld
sub
sbb
sbb
scas
iret
push
or
mov
mov
jno
and
lods
in
add
pop
add
call
xchg
mov
test
or
ret
cs
xchg
mov
divb
sub
jle
cmp
mov
inc
neg
in
adc
sub
call
and
push
aas
inc
daa
fyl2x
lock
sub
cmpsl
pop
or
flds
dec
push
jno
popf
scas
inc
sti
ds
scas
and
adc
stos
cmp
pop
xchg
fsubrl
push
mov
pop
xor
jg
outsb
aaa
pusha
lock
and
jb
daa
mov
or
loopne
jmp
das
mov
pop
jno
cmp
dec
outsl
mov
adc
fwait
sub
nop
sub
add
repz
lods
ljmp
in
in
cwtl
inc
daa
aas
iret
addr16
je
sub
loop
pop
dec
xlat
and
cmp
and
jno
mov
add
imul
or
imul
sar
pushf
push
scas
std
inc
jecxz
enter
add
pop
lods
in
pop
mov
or
ds
pop
test
mov
mov
sbb
jge
mov
jns
cs
jbe
movsl
jmp
push
aad
jg
dec
data16
dec
in
or
in
pop
mov
outsb
std
add
add
imul
fistl
adc
xor
les
mov
ljmp
sub
mov
or
call
mov
sub
std
daa
fcmovb
mov
roll
imul
jmp
rorb
and
mov
xor
cwtl
imul
mov
cmp
rorl
pop
pop
xchg
adc
mov
dec
and
pop
sub
and
or
out
xchg
xor
lds
add
push
pop
pop
inc
push
push
sub
out
ret
jae
push
cltd
sub
enter
mov
sbb
inc
mov
xchg
sub
cmp
cmpsl
add
xlat
popa
icebp
mov
test
lret
mov
mov
lret
jecxz
into
fmul
lods
sbb
je
sub
out
xchg
sub
mov
pusha
xor
pop
sub
hlt
leave
jge
stc
lods
jmp
add
enter
subl
mov
cmp
sub
cs
sbb
push
dec
shlb
js
frstor
xchg
dec
rcl
sbb
xchg
dec
sbbb
xor
add
dec
sub
sahf
sub
inc
mov
sub
mov
xor
sbb
movsb
je
mov
std
jb
aam
jo
jne
aas
push
xor
sub
xchg
lods
in
out
cmp
push
sub
loop
mov
loop
adc
push
js
stos
pusha
adc
xchg
xchg
add
jno
push
mov
xorb
jno
pop
dec
pushf
pop
inc
test
xlat
lods
push
stc
jmp
cmpsl
outsl
cmp
movsl
mov
jo
mov
fs
test
sub
xchg
out
subl
cs
push
jecxz
icebp
pushf
aas
or
sub
insl
jo
addr16
xor
in
testb
daa
mov
cmpsl
movsb
test
and
jecxz
sub
test
pop
sub
sahf
scas
dec
add
movsb
sbb
leave
or
negb
fsubl
jmp
add
push
sbb
shl
cs
lret
xor
repnz
xchg
cmp
loopne
and
push
pop
pop
int
mov
insb
ja
jbe
arpl
lods
rol
and
int3
xor
push
stc
sbb
ljmp
mov
call
lcall
push
mov
mov
cmc
add
sbb
xchg
stos
test
sub
cmc
sbb
out
mov
outsl
popa
xlat
push
aas
xlat
in
inc
sub
sub
pop
in
mov
jl
testb
sbb
jne
push
mov
mov
xchg
or
je
mov
out
js
xor
daa
movsb
lods
movsb
push
movsl
pop
into
adc
and
xchg
inc
in
xor
fwait
xchg
fdivrp
call
jbe
mov
adc
mov
or
cmc
or
fwait
cmpl
maxps
adc
adc
inc
sbb
mov
outsb
jbe
mov
push
sub
sub
arpl
out
jl
jge
push
les
push
inc
fdivl
mov
xchg
or
mov
xchg
inc
mov
enter
int
mov
sbb
into
mov
gs
das
xor
pushf
xchg
outsl
sub
jmp
out
cs
in
xor
fsubrl
cmpsl
sub
cmp
mov
sahf
xor
in
fwait
mov
addr16
add
shll
mov
jecxz
sub
jmp
fsubr
call
in
and
cmpsl
fcompl
andl
std
in
cmpsb
inc
loop,pt
bound
lret
test
leave
inc
stos
or
mov
mov
xor
mov
test
add
mov
pop
xor
pusha
lods
mov
cmp
adc
mov
repz
aaa
sub
mov
cmp
add
or
mov
loopne
das
add
mov
sbb
xchg
popf
or
lods
or
push
jae
cmp
inc
mov
in
mov
int
in
mov
add
popf
xor
pop
pop
popa
sub
sbb
xchg
sub
rcll
xchg
das
sub
dec
mov
sbb
inc
stos
test
sahf
out
jmp
jo
int3
mull
loopne
scas
inc
inc
enter
hlt
fdivrl
dec
out
movsb
stos
lods
gs
stc
pop
in
into
push
fwait
mov
cmp
xchg
ja
xchg
int
mov
sub
or
mov
mov
mulb
push
insb
or
bound
sub
jbe
mov
pop
xchg
or
xchg
mov
mov
sti
mov
rcll
dec
sub
cmp
xor
mov
inc
mov
insb
xchg
inc
leave
mov
incl
xor
loopne
in
sub
cmp
out
fdiv
test
fadds
movsb
icebp
mov
jge
lds
xor
pop
jle
mov
push
fstps
cli
and
fidivrl
mov
xchg
mov
pop
sahf
xchg
insb
mov
hlt
or
outsl
int
cmp
fwait
mov
inc
inc
mov
jmp
out
das
add
push
mov
xor
and
sbbl
sub
lods
push
add
push
fidivrs
addl
add
pop
mov
fdivs
cmpsb
cld
rcrl
and
sub
test
into
mov
mov
push
sbb
mov
pushf
jmp
push
fadd
lods
cmp
call
add
inc
pop
jmp
sub
mov
push
xor
ficomps
mov
cmc
sbb
pop
cmpsl
mov
aaa
adc
xor
andb
arpl
sub
cltd
scas
pop
fstpl
call
std
sub
sbbb
pop
fdiv
xchg
xor
xor
shl
xor
dec
inc
dec
mov
cmp
hlt
add
add
insl
andl
rcl
xchg
in
or
add
mov
enter
ret
xor
loop
out
pusha
ja
sbb
movsb
out
mov
xchg
mov
sub
and
sbb
push
clc
mov
mov
jnp
pop
leave
jno
inc
scas
jne
insl
mov
scas
sbbl
xchg
mov
orb
mov
hlt
lds
add
popf
gs
hlt
cmpsl
sbb
sarl
jmp
sarb
test
rcrb
inc
scas
aam
shll
leave
add
rclb
ja
clc
test
mov
int
fidivrl
in
insl
mov
les
aad
sti
xor
inc
mov
cmpsl
xchg
out
outsb
mov
jl
imul
xor
push
leave
and
sub
sbb
into
popf
scas
mov
int3
fcmovnb
lods
test
sbb
mov
in
sahf
inc
roll
xor
shrb
cmp
mov
popf
rcrl
xchg
cwtl
jo
lahf
pusha
lcall
jl
clc
inc
jb
push
subl
roll
inc
lcall
sbb
push
jecxz
pop
fbld
data16
mov
jns
xlat
test
xchg
ds
lods
jns
shrl
mov
les
xchg
push
leave
xor
leave
popa
mov
xor
lods
xchg
lea
push
adc
and
xlat
out
sub
mov
rorl
lcall
or
rcr
inc
sub
sub
sarb
add
sbb
cmpsl
fisubrl
imulb
mov
fwait
pop
mov
pop
outsl
cmp
push
ja
fs
mov
ret
rcrb
je
movsb
negb
xchg
dec
cli
pop
and
sbb
sbb
inc
inc
scas
dec
cmc
enter
mov
jo
jl
jecxz
push
aam
xchg
lock
mov
outsb
mov
mov
in
push
mov
xchg
outsl
shrb
gs
ds
mov
popf
adc
std
xor
jne
int
xchg
pop
in
bound
out
dec
mov
stc
in
inc
push
icebp
add
sub
push
jo
jb
push
stos
cltd
ja
jge
imul
sub
movsl
rcrl
inc
mov
movsb
fwait
inc
imul
pop
in
cmp
lcall
add
bnd
lcall
aam
mov
mov
lcall
icebp
and
lods
scas
addl
lods
sbb
je
fcomip
daa
mov
xor
lods
test
ret
int3
lea
pop
loopne
cld
into
in
sub
xchg
js
adc
mov
dec
mov
mov
adc
insb
cmp
popf
loop
pop
fninit
int
pop
daa
cmp
jmp
fwait
in
mov
fildll
push
in
insl
into
pop
jmp
jns
cmp
scas
in
sub
bound
ss
stos
pop
int3
mov
sub
pop
loope
mov
jge
in
int
in
inc
mov
dec
dec
aad
fmul
xor
xchg
mov
dec
cmp
mov
add
add
cmp
scas
lods
or
mov
shll
rcrb
cs
sub
orb
jle
jb
cs
shrl
cwtl
or
push
int
ret
out
mov
xorl
icebp
mov
fwait
mov
mov
mov
daa
sub
cmp
out
pop
loope
sbb
out
daa
jns
jmp
mov
mov
je
adc
xor
outsl
cmp
cwtl
nop
push
or
insl
inc
adc
popf
xor
imul
pushf
out
in
xchg
jb
fisttps
cmpl
test
xchg
adc
sub
mov
inc
add
fstp
mov
fwait
xchg
add
lea
iret
inc
mov
enter
aaa
arpl
cmpsl
push
sub
jns
sub
and
add
out
std
pop
xor
test
aad
xchg
mov
subb
add
mov
inc
into
call
decl
iret
sahf
mov
or
aad
fmulp
aad
inc
xchg
push
dec
adc
loop
adc
mov
inc
mov
xchg
cmp
push
stc
xchg
push
mov
or
mov
into
cltd
stos
mov
pop
xor
popf
xchg
ja
or
push
mov
test
mov
pop
sti
fisttpll
fistpl
ret
outsl
or
inc
mov
addr16
arpl
test
jnp
aas
fwait
or
insl
stos
test
cmp
out
fwait
lea
or
xor
jg
mov
mov
fmulp
cs
pop
sub
sbb
pop
lret
in
inc
push
mov
rorl
addr16
popf
push
test
or
loop
lods
or
mov
push
adc
sahf
lds
popf
dec
test
int3
fcmovnb
push
daa
add
test
sub
daa
rcrb
lahf
mov
mov
mov
aaa
pushf
stos
int3
push
xlat
lds
mov
insl
xor
jbe
enter
repz
inc
jne
mov
inc
mov
fs
stos
lods
jecxz
test
xchg
aam
mov
mov
lods
lret
xchg
cmpsb
icebp
sbbb
mov
testb
loop
push
mov
daa
mov
repnz
jl
mov
jmp
mov
pop
push
fstpt
inc
jns
mov
sub
cmp
jno
testl
stos
into
jne
fwait
cmp
les
pop
mov
fisubrs
pop
lret
pop
inc
adc
jl
into
mov
fsubs
jbe
mov
sahf
xlat
mov
les
mov
das
sub
lea
sti
andl
in
jae
sub
fisubl
xchg
add
mov
cld
test
enter
int
in
sbb
xor
mov
add
lds
push
adc
insl
vpcmpgtw
xchg
push
sbb
outsl
or
pop
or
mov
mov
aas
orl
pop
test
mov
xchg
in
jne
sbb
shll
imul
stos
xor
and
daa
in
loopne
add
cmpsl
cmp
xchg
mov
inc
cmp
push
mov
or
rep
test
gs
mov
xchg
xor
fs
mov
mov
int
pushf
inc
mov
rcll
mov
and
ljmp
das
jmp
int
sbb
in
jmp
int3
test
fldcw
push
in
outsl
jl
add
xchg
xchg
out
sahf
lret
push
pop
subb
jnp
adc
call
inc
jae
dec
jae
push
mov
sub
sub
mov
in
stos
xchg
cmp
vpminub
insb
xchg
shrl
mov
mov
pop
out
or
in
xor
aas
sub
push
add
fistl
add
push
fwait
pushf
mov
sbb
lock
lock
enter
adc
xor
xchg
fiaddl
mov
aas
mov
push
fistpl
xchg
jmp
insb
inc
push
std
decl
or
cmp
and
test
in
cltd
cmpsb
add
xchg
imul
std
adc
pop
mov
outsl
xor
stos
icebp
arpl
xchg
adc
push
fcmovu
repnz
sahf
mov
mov
orb
hlt
sbb
cld
mov
roll
ja
sbb
push
pop
sbb
xor
in
test
sub
pushf
push
cld
dec
pop
in
pop
clc
adc
addl
fildl
cmp
sahf
mov
mov
pop
xchg
sbb
jb
in
aad
loopne
cmpsl
fdivl
std
sbb
jecxz
out
cmp
push
and
xchg
mov
cmp
sbb
xchg
daa
pop
int3
push
daa
fwait
je
test
test
pop
call
in
cs
out
pop
fwait
xchg
mov
cld
movsb
or
es
sbb
movsl
daa
pop
int3
push
daa
fcomps
mov
jbe
mov
or
repz
xchg
in
fs
aas
dec
lods
faddp
cmc
pop
pop
daa
mov
pushf
bound
stos
cs
mov
jp
mov
sub
cmp
call
push
fldt
sub
sub
mov
aas
sub
or
rcrb
sub
sub
jg
shll
mov
outsl
rolb
in
mov
add
and
or
enter
jmp
ret
lret
cltd
cmpsl
sbb
test
sub
in
mov
leave
int3
push
push
loope
xchg
call
xor
loop
aaa
sbb
pop
sub
sti
shrl
inc
mov
in
pop
or
jb
test
arpl
dec
insl
insl
jbe
insb
inc
cli
mov
in
add
xchg
inc
outsb
test
cmpsb
inc
xchg
sub
sub
shlb
dec
add
aam
sti
in
or
pop
push
fwait
loop
jmp
mov
mov
nop
fbld
mov
daa
scas
push
movl
mov
fldt
push
sub
stos
loope
in
cs
test
out
in
jb
mov
push
mov
sar
and
cmp
movsl
lds
test
mov
rolb
das
movsl
mov
xchg
push
xor
mov
lods
imul
mov
sub
sub
sbb
pop
int
inc
cmp
lods
mov
call
sbb
sbb
ds
add
mov
je
outsl
lods
pusha
test
add
pop
ja
xor
int3
stc
out
aad
push
loope
xchg
psrlq
enter
pop
push
std
pushf
dec
xchg
fadds
mov
cmpsl
cltd
daa
lods
ret
sub
bound
cmpsl
imul
add
fxch
jle
dec
notl
xchg
lahf
push
rolb
cmpsl
outsb
cmp
pop
pop
imul
out
popf
xor
cltd
mov
jge
xor
cld
stos
insb
mov
arpl
jno
cmp
pop
fiaddl
jge
pop
sbb
pushf
bound
shl
ljmp
dec
mov
mov
dec
jle
leave
lea
lds
and
in
sahf
test
xchg
mov
push
mov
loopne
outsb
subl
cmpsl
xchg
dec
fisttpl
pop
cmpsl
mov
push
sub
aas
imul
adc
inc
imul
js
shll
insl
test
loopne
sbb
inc
insb
loop
repnz
lods
shll
cs
and
pop
xchg
sbb
std
les
cmp
adc
imul
fcoms
jno
xor
stos
scas
jo
fwait
jmp
ja
adc
xchg
sahf
xchg
test
adc
adc
mov
push
pop
jmp
jg
sbb
nop
in
inc
into
leave
mov
sbb
or
lea
sbb
xchg
mov
sbb
repz
pop
nop
aad
xchg
xchg
call
push
outsl
sbb
lret
inc
mov
add
mov
jb
inc
mov
lret
cmp
push
add
cmp
cwtl
mov
adc
out
movl
fsts
pop
sbb
inc
inc
xor
fisttpl
aas
sub
rcrb
jbe
sub
jge
push
jns
push
scas
mov
lret
adc
cmp
sub
mov
je
outsb
xor
push
cld
nop
push
inc
loopne
dec
leave
shlb
lods
fldenv
mov
dec
cwtl
mov
xchg
aaa
dec
ret
in
xchg
int
loope
ret
mov
test
inc
imul
mov
in
push
pop
les
dec
sub
lahf
cli
lret
jae
sbb
xchg
jecxz
sub
pop
vpcmpgtd
lods
or
push
push
fstps
cmp
mov
inc
lods
fld
mov
aaa
adc
jle
add
popa
lods
xchg
xor
rol
mov
fucomp
inc
jbe
mov
ljmp
flds
arpl
daa
cwtl
andb
in
movhps
or
fmul
sbb
add
imul
scas
data16
daa
cmpsl
out
dec
popa
test
pusha
insb
popf
jno
imul
mov
andl
pop
fisttpll
xchg
inc
sti
dec
or
mov
cmpsl
imul
data16
sbb
scas
stos
outsb
call
shll
fwait
nop
out
ss
xor
clc
push
push
pop
scas
addr16
in
inc
out
pop
cmpsb
dec
movsl
mov
in
cld
cmp
or
movsb
mov
movsl
cmpsb
push
mov
testb
mov
cvtdq2ps
int
test
inc
out
push
mov
sbb
sbb
mov
cmp
scas
int3
jp
jge
imul
lret
imul
outsl
adc
fistpl
cmpsl
fwait
push
mov
addr16
xchg
jb
daa
lret
pop
out
xchg
lea
jns
scas
xchg
pop
inc
scas
daa
out
test
mulb
int3
jae
shlb
adc
inc
ret
adc
and
lret
scas
fldcw
stos
outsb
mov
cmpsl
call
inc
lds
mov
hlt
pop
and
insb
dec
fdivrl
shr
into
push
cwtl
inc
sub
and
xchg
inc
sbb
sahf
xchg
dec
and
sbb
subl
mov
scas
add
ss
js
sub
stc
adc
inc
jge
xchg
in
sub
mov
shrl
sahf
push
add
cmp
adc
xor
xor
cs
test
xchg
jmp
shl
or
call
mov
sub
inc
pop
push
jmp
loopne,pt
dec
mov
stos
sti
xchg
stc
into
scas
daa
xchg
int
lret
sbb
sbb
xchg
outsb
outsb
jg
dec
popf
lods
outsl
xor
mov
mulb
mov
mov
popf
fs
ljmp
out
insl
shl
imul
inc
ficomps
mov
mov
mov
rcrb
int3
xlat
mov
js
dec
pop
ds
ljmp
xchg
ljmp
and
insb
mov
leave
xlat
and
js
or
pop
pushf
insb
cmpsl
lds
repz
adc
xchg
dec
cwtl
inc
movsb
lods
xchg
sub
aaa
inc
mov
rcrl
das
pop
in
ret
and
pop
xchg
mov
xlat
out
lds
outsl
push
fisttpl
repnz
xchg
xchg
lods
mov
cmp
into
stc
sti
sub
jb
sub
and
stc
and
and
dec
test
fisubrl
cld
lds
rol
pusha
and
push
int
loopne
inc
stos
aam
sub
add
jb
lea
inc
icebp
push
into
cmp
in
push
inc
mov
inc
xor
iret
cli
test
jne
loop
xchg
test
jb
xor
into
mov
lods
in
cld
xlat
cmpsl
jmp
sub
sub
xor
stos
cmp
sub
and
in
je
pop
lods
lds
push
outsb
ss
popa
in
mov
push
out
fistpll
test
or
mov
lock
add
cmpsl
mull
mov
lods
mov
inc
xchg
call
cld
insb
mov
sahf
adc
dec
repz
sahf
or
xchg
int3
addb
mov
mov
pop
pop
lahf
or
loope
xchg
fisttpll
pop
xor
mov
jbe
jecxz
pop
pop
xchg
xor
test
pop
mov
sub
movsl
andb
popf
jmp
cmp
fsubrp
cmc
into
insb
ss
int3
lods
fwait
ljmp
jnp
popa
inc
loopne
and
mov
mov
or
fnstsw
push
push
sbb
sbb
rclb
mov
aad
jns
dec
imulb
dec
push
mov
mov
lret
dec
aaa
pop
scas
test
xorl
jmp
inc
aam
pop
mov
out
ret
push
shl
pop
mov
test
hlt
sbb
je
vpshufd
mov
ret
fldcw
sub
lods
shrl
sbb
or
xchg
sub
out
loopne
sub
test
or
outsb
outsl
dec
mulb
incl
lahf
test
cmpsl
mov
sub
inc
add
inc
push
sub
inc
sbb
and
sub
mov
dec
sahf
fstpt
mov
xchg
pop
and
daa
or
adc
and
inc
pop
pop
jg
xor
cwtl
mov
scas
popf
pop
jmp
outsl
push
int
fwait
test
fs
stos
bound
xor
pop
push
rcll
mov
in
negb
cltd
fnstcw
jmp
pop
adc
out
push
repz
icebp
call
out
xchg
dec
mov
sbb
in
xchg
cmp
je
mov
jmp
mov
mov
stos
movsb
insb
rorl
gs
aad
add
jl
push
sub
loopne
push
xchg
hlt
mov
movsl
fbld
into
les
dec
lds
mov
pushf
jmp
movsl
clc
xchg
fiadds
test
cli
movsb
sbb
into
pop
inc
pop
mov
pushf
popa
mov
shrb
sub
lods
xchg
ret
cmc
in
dec
sub
cmpsl
lock
int
push
mov
in
stos
cltd
pop
add
or
pushf
xchg
popa
popf
shll
adcl
inc
test
mov
mov
pop
insl
lahf
inc
int
sbb
pop
jo
mov
in
hlt
ja
out
lea
or
test
dec
xor
cmc
fsts
pusha
adc
adc
not
jmp
sbb
pop
mov
pop
icebp
lahf
push
adc
mov
inc
cmpsb
fwait
and
xchg
stos
and
mov
push
in
mov
xor
int
rcrb
pushf
daa
sub
aam
lahf
mov
dec
jno
in
push
mov
jmp
ud1
outsb
mov
mov
push
push
popf
mov
ret
or
cmpsl
test
in
stos
repnz
scas
and
pop
jg
sub
jns
mov
or
push
push
push
sub
sbb
pop
jns
mov
mov
loop
sbb
or
fcomps
inc
cmp
rcrb
fnstsw
push
fldcw
call
imulb
dec
fidivs
pop
int
sub
fldcw
and
sbb
cmpsl
out
jo
cmpsl
add
pop
in
jnp
in
out
movsb
fdivrl
daa
sub
xor
loopne
pop
sbb
pop
insb
mov
mov
pop
scas
ja
pop
push
hlt
mov
loope
push
loopne
xchg
lds
popa
pop
xbegin
dec
mov
popa
pop
adc
pop
push
inc
repz
inc
mov
sbb
int3
jp
push
xchg
lret
test
xor
repz
test
or
and
and
popa
icebp
leave
jmp
into
fadd
dec
decb
outsl
xlat
ret
rcll
movsl
xlat
aad
xchg
clc
xlat
enter
arpl
not
and
xchg
add
fidivrl
cmc
jb
insb
sbb
pop
aas
jl
push
mov
ja
sub
push
lds
insb
enter
cmc
sub
jb
cs
push
xor
add
mov
mov
test
scas
inc
repnz
xor
insb
dec
or
mov
jmp
jl
mov
jns
rcll
std
pop
mov
jle
mov
adc
sub
test
imul
sbb
hlt
jns
push
sub
int
out
aas
pop
lret
xor
pop
or
shll
imul
scas
icebp
cmpsl
int3
popf
jp
mov
test
mov
call
inc
xchg
movsb
lods
dec
cmp
test
push
mov
jle
push
pop
mov
cltd
jne
add
inc
frstor
iret
and
rcrl
out
xor
jecxz
or
lods
outsl
or
jnp
sbbb
jle
and
out
loopne
dec
fcomps
in
fsubrs
pop
mov
xchg
xchg
idivl
fwait
jl
insb
dec
mulb
scas
aaa
ret
sbb
arpl
js
lret
mov
or
into
mov
or
loop
ret
jmp
lds
sub
mov
jbe
sbb
outsl
mov
mov
stos
test
int
jb
gs
out
cs
mov
test
pusha
fdivrl
lea
mov
xchg
popf
es
push
dec
hlt
add
arpl
out
inc
cltd
sti
repnz
sub
enter
xor
cmp
cld
imul
mov
lods
pop
jmp
xchg
and
sub
inc
lds
sub
dec
scas
scas
sbbl
gs
hlt
dec
push
pop
aad
jns
sbb
int3
pusha
imul
inc
dec
jmp
subb
sub
mov
mov
clc
stos
popf
insl
mov
sti
xchg
test
addl
in
cmpsb
fimull
arpl
into
sbb
or
dec
imul
pushf
mov
das
call
sti
jnp
cli
imul
inc
insl
sub
lret
fstpl
lret
hlt
mov
fcmovnb
scas
enter
xor
lods
pushf
nop
add
das
cwtl
jp
push
dec
in
xchg
repz
sbb
lds
cmp
xor
fstps
xchg
ljmp
mov
out
fs
dec
sbb
or
mov
mov
xor
xchg
jnp
stc
lret
ds
mov
into
test
mov
sti
inc
sub
in
daa
lods
loopne
cld
sbb
dec
push
jg
jp
int
mov
out
loopne
mov
shll
nop
outsb
insb
sti
mov
xor
clc
xor
sbb
movsb
sub
xchg
bnd
sub
jg
inc
ret
push
int
xchg
dec
or
sbb
stos
loope
outsb
sbb
js
mov
push
xchg
imulb
pushf
ficomps
lods
lret
rcll
sbb
lods
lea
xchg
fwait
lea
out
push
jbe
add
dec
xchg
cmp
daa
dec
add
xor
jb
pusha
in
icebp
lahf
jae
rolb
sti
outsl
hlt
mov
push
and
jb
cmp
pop
cltd
push
jo
mov
ja
sahf
jl
jle
adc
daa
imul
push
test
insb
xchg
fisubrs
mov
orb
jmp
pop
adc
ds
inc
int
mov
jae
add
enter
jns
push
add
testl
ss
xchg
xor
and
cltd
add
xor
ljmp
add
sbb
sub
scas
add
jbe
in
inc
sbb
je
fwait
insb
int
pop
pop
lods
or
xchg
mov
cmpl
and
popf
jnp
cmpsl
sbb
test
outsl
adc
add
jecxz
stos
add
loopne
mov
popa
sub
pop
lods
cli
and
mov
pop
xchg
push
dec
xor
pop
dec
add
lret
jae
andl
adc
xor
jo
cmpsl
xor
cli
repnz
and
inc
or
in
pop
sub
push
mov
in
mov
mov
and
std
pop
xchg
fadd
mov
inc
xor
inc
daa
xchg
subb
mov
stos
mov
sub
xchg
jl
aaa
loopne
xchg
cmp
ja
jge
je
jmp
stos
lods
scas
add
xchg
leave
jmp
add
pop
rcll
loope
inc
jbe
fwait
outsb
insl
movsl
mov
jnp
sbb
sbb
and
mov
sub
gs
jl
movsl
test
or
imul
movsl
sbb
int
stos
imul
dec
jg
mov
fidivrs
push
jne
mov
popf
push
ja
fadds
std
fmulp
loop
rclb
pushf
js
inc
xchg
movsl
jmp
outsl
push
cmp
mov
lds
adc
lret
loop
xorl
mov
mov
jmp
popa
bound
test
out
ja
out
subl
loop
push
test
or
loopne
inc
lods
sbb
jno
push
mov
sbb
in
aas
loop
outsb
outsb
stos
fchs
lcall
cmp
inc
lea
int
xchg
xor
pop
jmp
xchg
xor
xchg
push
or
loopne
pop
dec
daa
aam
hlt
mov
in
xchg
push
arpl
and
iret
sub
dec
cmp
test
or
mov
adc
rorb
add
into
mov
scas
sub
outsl
and
pop
sub
popf
xchg
mov
lods
fwait
and
mov
inc
cs
in
cwtl
in
mov
lods
pop
test
mov
loopne
sbb
fldt
and
js
in
inc
sbbl
pusha
mov
sub
adc
cmp
or
repnz
into
test
mov
xchg
inc
pop
mov
movsb
arpl
scas
inc
add
dec
sbb
and
xchg
fs
push
or
test
jle
ss
sbb
outsb
cmp
addr16
pop
mov
xchg
mov
imul
xor
adc
push
iret
sub
and
pushf
leave
ret
xor
sbb
fucomp
cmp
xor
imul
test
lret
mov
test
xlat
xchg
xchg
outsb
out
lds
inc
enter
pop
ret
and
sub
faddp
jo
mov
vprotq
arpl
sub
and
mov
cld
fcmovb
stos
sub
lods
imull
test
inc
insl
or
rcl
jbe
adc
jl
jmp
sub
int
sbb
lea
popf
jmp
andl
mov
loopne
les
in
xor
lret
push
iret
sub
cmp
mov
jb
adc
ljmp
xchg
and
repnz
pop
xchg
into
cmp
bound
jge
dec
jo
push
pusha
push
stos
xor
jge
cs
sub
scas
lock
scas
stc
xchg
andl
scas
stc
jge
lods
movsb
push
mov
inc
ds
pop
push
mov
sub
fs
mov
dec
aam
mov
aas
sbb
inc
add
pop
imul
ret
sahf
insl
dec
in
mov
lret
mov
cmp
mov
out
lret
rorb
inc
cmp
idivb
adc
pop
add
ficomps
mov
into
fwait
rol
fcmovne
sbb
ss
int
sub
mov
sti
dec
push
mov
je
vmovsd
and
mov
out
xchg
push
loope
xchg
and
mov
jl
mov
pop
and
movsl
ret
ss
leave
xchg
je
sbb
gs
cs
push
daa
mov
sub
push
lods
dec
mov
xor
test
in
arpl
scas
dec
aad
dec
nop
fimull
mov
push
popa
outsb
ret
xor
sbb
mov
shll
outsb
pop
arpl
leave
jl
pop
call
ds
js
test
xor
sub
xor
inc
in
scas
mov
out
pop
in
push
cmp
add
repz
mov
adc
imul
lea
outsl
je
push
mulb
cmpsl
psubsw
shll
and
mov
sub
push
mov
test
enter
pop
push
ret
mov
ds
insl
add
xchg
test
lods
in
jp
enter
int
ljmp
push
add
mov
mov
sbb
mov
in
imul
lds
outsb
rcrl
or
jb
push
push
push
inc
mov
xchg
cmpb
jo
jle
insb
xor
mov
je
sub
ljmp
pop
xor
xor
hlt
mov
and
sub
mov
stos
lahf
hlt
outsb
cli
inc
in
xchg
sub
push
outsb
aaa
dec
dec
cmp
int3
aaa
loop
jo
popa
pop
xchg
cli
push
test
mov
xchg
and
cmp
jbe
mov
cmpsb
out
push
loopne
outsl
add
insl
mov
fisubrs
clc
repz
xacquire
lock
sub
rcrl
icebp
sbb
fisubrs
mov
sahf
outsl
rcll
push
or
mov
rolb
pop
adc
lds
sbb
mov
xor
jecxz
filds
fwait
roll
pop
xlat
loop
je
je
cmp
xchg
clc
jne
xchg
pop
mov
fdivrl
jb
xchg
add
mov
repnz
call
fadd
mov
mov
popa
aam
xchg
xchg
repz
mov
inc
andb
xchg
sub
sub
sub
add
jmp
sarb
shll
test
xchg
roll
xchg
cwtl
inc
subb
stos
xchg
mov
cmp
push
pop
imul
jge
jo
adc
mov
push
popf
ffree
mov
popf
xor
lods
pop
push
inc
and
xchg
mov
xor
neg
push
and
gs
mov
fstpl
pop
movsl
call
movsl
mov
xchg
sbb
mov
dec
fdivrp
and
add
repz
mov
pushf
xor
pop
pop
popf
cltd
mov
xchg
xor
or
cmpsl
cltd
ja
das
inc
imul
fdivl
adc
xchg
out
dec
daa
mov
push
lret
jbe
and
insl
dec
mov
outsb
test
xor
pop
lods
loopne
pop
sahf
sub
insl
fucomp
jmp
hlt
add
cmp
shll
jge
divl
stos
pmuludq
mov
fnstenv
mov
dec
lret
lods
dec
stos
mov
ja
adc
or
in
inc
cmpsl
jmp
lock
pop
and
pop
daa
scas
popa
or
mov
cli
repz
lea
add
mov
mov
js
push
cmpsl
test
xor
pop
cltd
pop
shrb
arpl
je
outsl
and
mov
fwait
sbb
sub
xor
ret
stos
aad
jne
loopne
pop
insb
sub
popa
add
push
andb
ret
push
jne
mov
outsb
out
dec
xor
roll
addr16
mov
scas
jl
lods
dec
shlb
sub
stos
jle
mov
lcall
ljmp
fistps
sub
adc
shlb
mov
je
scas
repnz
aam
lds
xchg
xchg
push
sbb
inc
jl
mov
loopne
adcl
shll
sub
addl
test
adc
jle
mov
imul
or
int
pop
sbb
xor
and
into
in
pop
mov
jbe
pop
mov
xchg
adc
das
ror
jl
dec
andl
fnstenv
out
sub
mov
scas
sbb
pop
mov
xor
insl
add
jnp
sub
mov
cwtl
into
lods
lcall
dec
loopne
lods
mov
ljmp
rcrl
sbb
xchg
mov
sub
or
ljmp
lock
jb
inc
jp
loop
popa
jbe
rcrb
or
pusha
cmc
or
cmp
xchg
cmp
and
jge
cmpsl
inc
movsb
cs
push
sbb
xchg
stos
adc
push
lahf
or
imul
pop
mov
pop
jmp
lods
int
shr
jge
sahf
xchg
out
and
jmp
push
int
add
add
mov
test
or
int3
outsb
push
sub
ret
mov
jo
push
jge
sub
pop
and
sbb
movsl
sbb
xchg
lds
test
movsl
setl
jmp
out
repz
and
popf
or
insl
in
mov
cmp
lods
hlt
shld
ffreep
inc
shl
pop
add
les
test
mov
sub
inc
scas
jle
jae
sub
push
insl
mov
insb
sbb
xlat
adc
out
dec
daa
int3
and
in
ds
lods
loopne
push
testb
or
mov
mov
bound
mov
out
ret
push
pop
or
xchg
leave
jmp
or
sub
int
test
sub
in
out
push
xchg
fwait
leave
push
negl
mov
push
sub
test
jp
das
fmul
frstor
mov
cmpsb
sub
pop
repz
popf
xor
inc
and
loopne
mov
cltd
lret
xchg
mov
repnz
aas
sbb
jle
inc
pop
inc
lret
dec
mov
jnp
mov
cld
fistl
popf
push
and
xchg
shlb
xor
jae
inc
mov
je
into
xchg
xor
xchg
je
movsb
lods
push
ljmp
loop
pop
lds
push
cmc
jge
loope
push
loope
rcr
lods
out
adc
or
inc
lock
mov
sahf
in
popa
stos
aad
xor
ret
add
mov
or
mov
imul
cmp
enter
xchg
jo
pop
mov
jl
push
arpl
push
cwtl
pop
dec
and
sbb
cmpsl
rcrb
pushl
movl
ja
orb
push
rclb
popf
outsb
or
push
pop
mov
insl
arpl
aam
xor
lds
sbb
lret
cld
sub
push
mov
test
scas
ret
pushf
fisubl
out
in
sub
mov
or
fisttpl
pop
movsl
sbb
add
hlt
mov
or
and
lods
cmp
scas
fadd
jae
and
shrl
cmpsl
loop
pusha
ds
and
pushl
ret
jae
pop
pop
adc
mov
es
frstor
fdivp
pop
out
pushf
sbb
int
xor
fwait
pop
xor
or
mov
lcall
xor
lock
out
mov
lahf
dec
push
cwtl
mov
vaddpd
adc
cmpsl
cmp
imul
dec
mov
mov
lods
inc
cli
jle
mov
negl
stos
pop
mov
mov
ret
cmp
sti
cld
xor
cmc
into
push
das
fisubl
outsb
ds
pusha
in
xchg
push
int3
mov
jne
xchg
jl
mov
inc
clc
or
sbb
jl
cmpsb
das
daa
jge
xor
add
imull
cmp
xchg
mov
mov
cwtl
mov
dec
mov
fldt
repz
add
fnstsw
cs
jmp
sbb
cld
mov
mov
loopne
lds
xchg
xor
mov
movsl
push
movswl
dec
outsl
push
mov
leave
mov
mov
mov
mov
mov
test
int
mov
mov
add
repnz
xchg
xchg
out
loopne
repz
mov
icebp
or
das
mov
xchg
movsb
pop
dec
popf
lahf
or
loopne
mov
pop
add
and
ss
mov
or
ss
mov
mov
ficomps
mov
ljmp
rolb
pop
rol
in
pop
adc
mov
sub
and
int
sub
mov
jle
fidivrl
or
les
hlt
mov
adc
scas
sub
outsl
shlb
outsb
inc
push
xor
cmp
mov
test
cmpsl
and
add
in
enter
mov
and
pop
sbb
xor
sub
pop
sbbl
pop
push
and
nop
shl
cmpsb
insl
pusha
in
lds
idivb
xchg
orl
lods
mov
fwait
sub
into
adc
mov
or
cmpb
fistl
xor
fimull
add
lret
xlat
jle
mov
in
jp
lock
mov
xchg
jl
mov
ja
mov
clc
sbb
mov
xor
stc
inc
loop
mov
ret
insb
inc
adc
scas
cmpsl
test
and
mov
gs
scas
out
ja
cmp
xor
movsb
les
push
inc
or
and
dec
add
shrb
loop
loop
inc
in
ret
dec
mov
gs
xor
int3
ja
xor
add
int
arpl
test
jae
mov
scas
lret
les
movsb
push
lods
xlat
sbb
sbb
fwait
pusha
hlt
sbb
lea
mov
or
stos
or
mov
mov
mov
nop
sbb
out
lret
and
xor
sub
iret
cmpsl
arpl
xchg
sub
pop
adcb
scas
fnstenv
sub
nop
push
mov
lds
jae
push
mov
add
mov
jo
xor
ljmp
mov
and
rcr
add
std
int
clc
pop
mov
jmp
pushf
jne
xor
repz
cmp
mov
xor
sahf
pop
sbb
lea
sbb
sbb
dec
popf
xchg
sbb
push
jnp
movsl
lcall
xor
lods
jbe
push
sbb
lock
jmp
cltd
hlt
xchg
dec
inc
cmp
fstpl
pop
or
push
or
cs
insb
test
xchg
sub
xchg
sub
repnz
aad
cmc
dec
dec
and
fwait
sbb
sub
out
clc
popf
movsl
ljmp
arpl
sbb
dec
out
cmpsb
adc
pop
sub
sbb
lds
cltd
pop
das
or
push
out
mov
scas
and
pop
and
repnz
repz
dec
xchg
fdivs
and
es
stos
and
sbb
stos
lods
into
popf
dec
aas
enter
and
xchg
or
loope
daa
loopne
lock
lds
mov
data16
dec
sbb
cmc
js
mov
mov
movsb
xchg
cmpsl
pop
mov
daa
int3
mov
jle
jp
or
sbb
enter
adc
mov
in
mov
outsl
int3
aam
mov
out
in
lret
mov
jb
inc
xchg
lea
pop
stos
push
push
test
or
stc
sub
std
dec
inc
movsl
test
lds
sub
cmp
sub
popa
in
push
pusha
mov
lods
mov
outsl
pushf
icebp
jp
jb
enter
mov
mov
sub
or
loope
add
and
or
sub
inc
push
iret
mov
es
ret
cmpsl
outsb
sub
into
loop
adc
fwait
push
sbb
mov
ja
fsubl
pusha
mov
pusha
loopne
lds
scas
fnstenv
mov
sbb
xchg
sbb
mov
lcall
stc
pop
lds
xchg
push
mov
push
jmp
add
je
test
into
jmp
cmp
adc
adc
insl
xchg
sbb
dec
or
dec
loop
dec
ja
sbb
repz
and
mov
insl
cmp
dec
adc
outsl
inc
cmpl
fidivl
imul
pop
pop
rcrb
rcrb
adc
pop
mov
xor
xchg
data16
popf
mov
and
shlb
shlb
out
inc
or
test
jns
push
mov
lods
outsb
test
in
stos
jb
sbb
xor
mov
stos
push
std
mov
sub
jle
lods
jl
in
jmp
std
lods
scas
xchg
pop
cmp
lcall
loopne
ret
or
push
scas
loope
scas
sub
scas
stos
xor
popf
repnz
cltd
lods
mov
mov
push
movsb
pop
dec
mov
pop
rcr
movsb
mov
movsl
call
lds
inc
mov
mov
movsl
xchg
jle
popa
hlt
sar
test
pop
lds
pop
push
jbe
or
mov
stc
add
adc
mov
push
mov
es
les
jae
inc
hlt
mov
inc
mov
aaa
mov
sti
inc
sub
pop
ffreep
xchg
xchg
lock
push
loopne
mov
and
mov
push
sbb
shrl
xchg
push
cltd
es
mov
hlt
mov
addr16
ffree
jo
outsb
cli
mov
adc
dec
jb
inc
hlt
in
adc
pop
lock
lret
mov
sub
je
ja
xchg
int3
xor
mov
sub
les
movsb
loope
scas
test
sbb
xor
lock
mov
and
fwait
mov
popa
fwait
addr16
outsb
cmp
or
ud2
in
xchg
popf
aaa
jle
mov
stos
adc
and
out
lods
lods
push
loopne
sbb
xchg
into
mov
insb
fsts
jecxz
sub
shl
cmp
out
jecxz
pop
pop
push
addr16
jbe
cmpsl
xchg
pmaddwd
jge
lods
mov
jbe
rcll
js
in
insl
and
sarl
popf
loop
mov
cmpsl
jns
xchg
mov
in
jg
mov
sbb
mov
clc
fucomp
mov
mov
cmp
add
sbb
test
add
fldl
test
loopne
add
dec
mov
sbb
cwtl
dec
movsl
pop
pop
lods
xchg
out
into
scas
arpl
and
inc
les
loop
pop
jl
jns
adc
xor
scas
movsb
fadd
xchg
in
bound
sti
mov
dec
adc
and
fwait
lock
stc
dec
leave
push
imul
lods
adc
inc
pop
mov
mov
xor
aam
mov
and
or
mov
sub
lods
outsb
sub
mov
xor
push
xchg
pop
mov
pop
inc
mov
xor
push
fdivrp
repz
jne
cmpsl
lcall
lahf
mov
pop
lock
add
imul
cmp
lds
notrack
push
pop
out
inc
in
and
and
pop
int
and
arpl
mov
mov
lods
sbb
add
xchg
outsl
pop
cld
and
sub
push
push
add
mov
test
movsb
ljmp
je
pop
or
lds
lock
or
fildll
mov
fldenv
lods
and
push
jno
mov
mov
scas
mov
mov
int3
inc
out
sub
stc
sub
je
stos
jae
inc
mov
dec
and
mov
sbb
mov
fldt
enter
mov
sub
mov
mov
sub
inc
test
ja
mov
arpl
pop
testl
jo
sub
pop
or
bound
mov
xchg
mov
mov
icebp
cmpb
mov
ljmp
fs
push
sub
scas
or
fstpl
sbb
dec
inc
and
lods
int3
aaa
push
mov
and
mov
jb
jecxz
cmp
aas
repnz
ret
sub
mov
test
inc
jo
shl
sbb
outsb
jl
jle
cmp
push
aad
loopne
out
enter
in
mov
lret
popf
test
mov
rep
out
lock
mov
fsts
cmp
or
outsb
adc
test
push
mov
or
fidivs
out
add
repnz
loopne
and
test
xchg
lock
into
test
mov
sbb
outsl
fistl
jo
add
mov
fnsave
aas
fwait
rorl
adc
int
ja
imulb
or
movsl
cld
outsb
jo
fmuls
fistpll
xlat
std
fwait
cmpsl
fdivrs
add
mov
xorb
cli
inc
mov
pop
mov
lahf
cmp
dec
arpl
sti
jmp
adc
daa
sbb
cwtl
pop
int
ja
fs
mov
ja
aam
scas
inc
imul
pushf
pop
push
pop
sbb
mov
fmuls
scas
pop
lret
mov
into
pop
adc
fdivrs
mov
into
cwtl
or
push
sub
mov
outsb
leave
scas
jmp
das
cmpsb
lret
sbb
shrb
dec
scas
loopne
negl
aaa
xor
out
adc
arpl
fstpl
daa
jb
xchg
xor
fwait
mov
jp
rcr
lods
mov
sbbb
js
in
fmuls
and
jae
lods
sbb
fwait
js
or
hlt
int
cli
in
repnz
scas
lods
pop
cmp
add
mov
sub
sbbb
shll
cwtl
repnz
pop
aad
dec
dec
clc
jecxz
test
jle
mov
nop
sbb
test
js
jo
icebp
es
repz
ja
jmp
and
pop
rcll
mov
jb
push
cmp
pop
fcmovne
mov
jae
mov
pop
les
push
bound
pop
push
cmp
add
mov
test
mov
pop
or
out
and
sub
inc
mov
out
push
xchg
insl
std
mov
ret
xor
xor
loopne
and
sub
push
add
sti
cs
cmp
sbb
daa
sbb
inc
daa
sti
and
hlt
fisttpl
pop
in
mov
xor
pop
dec
hlt
test
arpl
insb
dec
xor
push
mov
int
ss
dec
pusha
repz
push
fwait
mov
int
cltd
sbb
xor
xlat
pop
sbb
inc
dec
pop
cltd
dec
popa
pop
or
icebp
pop
in
sti
jg
popa
sub
pop
mov
cli
aaa
xchg
outsl
mov
mov
xchg
mov
sbb
ret
int
outsb
or
mov
into
enter
out
movsl
es
shll
sub
mov
jge
imul
or
or
jnp
mov
loopne
sbb
pop
call
dec
xchg
or
jmp
mov
inc
push
adc
mov
fisubrl
sub
scas
add
pop
and
cmpsl
arpl
aad
andb
rcrl
test
xchg
sbb
or
movsl
movl
in
movsb
pop
xor
jo
push
mov
xor
mov
pushf
mov
mov
sub
leave
mov
inc
jne
pushf
sbb
leave
out
call
stc
mov
in
xchg
test
mov
outsl
cltd
mov
lods
pop
pop
std
cmc
out
insl
push
dec
xchg
jmp
cmpsl
mov
icebp
leave
lods
cmp
push
sarb
adc
lahf
lods
jge
imul
mov
and
aaa
sahf
jne
fldt
fwait
and
jl
pushf
and
in
shlb
add
aad
gs
fdivrl
stos
sub
popf
shlb
mov
sti
pop
mov
pop
jle
and
mov
xor
gs
push
cwtl
jl
mov
daa
mov
xlat
scas
jbe
fidivs
xlat
pop
jno
jmp
setle
call
movsl
movsl
mov
adc
or
das
and
add
loope
imul
xlat
in
push
adc
mov
lret
loop
divb
pop
push
jo
cli
test
jb
jb
ret
stc
pushf
int
dec
out
addr16
jo
std
pushf
test
imul
inc
jge
adc
mov
insb
jnp
add
cmp
adc
sbb
popf
or
insl
pop
insb
fcompl
cmpsl
xchg
mov
pop
xor
sbb
jb
outsl
sbb
jp
sub
jl
and
dec
outsb
outsl
push
xchg
add
pop
adc
pop
inc
mov
add
je
pop
hlt
xlat
data16
pop
test
mov
or
pop
sarl
mov
inc
jb
shrl
dec
loope
and
sti
inc
mov
neg
xor
and
lahf
out
rcll
enter
js
adc
rorl
add
in
mov
mov
xchg
dec
lds
jne
in
movl
dec
sbb
aam
mov
ds
rcll
fxtract
xchg
push
sbb
aas
stos
cli
or
lods
imul
add
int
ret
test
jecxz
ljmp
imul
push
pusha
out
xor
jo
inc
cld
in
sub
sbb
clc
add
aaa
jne
sbb
pop
int
xlat
neg
aaa
fdivs
jnp
inc
or
aaa
andl
lahf
mov
push
cmc
lahf
mov
and
jne
js
in
push
insb
mov
hlt
and
cli
push
rorl
inc
xchg
iret
mov
inc
psubusb
jle
int
pop
scas
mov
lahf
cmpsb
jbe
rcll
inc
mov
cmp
daa
pop
fs
int3
xchg
xor
sahf
push
pop
cs
cltd
dec
arpl
popf
xchg
insl
test
jb
ret
or
xlat
lds
rorl
in
xchg
fmull
sub
fldl
xchg
das
in
repz
push
std
hlt
jne
bswap
stos
lret
hlt
or
mov
mov
sbb
pop
mov
xchg
sbbl
scas
cmp
je
loop
push
sbb
rcrb
pop
jmp
push
jnp
pop
xchg
pop
jle
aas
repnz
fldt
push
repnz
repz
or
sti
cs
ror
sbb
dec
bound
and
lret
mov
mov
adc
push
hlt
inc
lret
ficompl
scas
fisttpl
test
cltd
pop
stos
dec
stos
sbb
sub
cmp
jl
and
pop
jb
xlat
push
mov
fnstsw
and
mov
psubw
das
pop
int3
js
push
pop
push
sbb
push
push
nopl
adc
and
xchg
insl
dec
rolb
mov
es
hlt
aad
sbb
ret
or
lock
xor
sub
into
mov
dec
mov
push
lret
mov
fmull
cmp
lods
dec
outsb
call
jbe
sbb
pop
inc
shrb
push
mov
pop
fadd
daa
jge
push
lods
cwtl
push
or
clc
xchg
push
inc
into
negb
push
cli
xor
xchg
in
lds
outsb
jg
popf
scas
xlat
dec
mov
jge
mov
jo
fiadds
xor
in
xchg
dec
sarb
mov
call
and
data16
mov
fmull
sub
les
xorl
stc
mov
cmp
mov
cli
flds
out
jo
mov
cmpb
jne
ret
into
xchg
scas
pusha
lods
out
lds
push
cmp
mov
loopne
dec
jo
in
dec
insl
adc
pop
int3
jmp
mov
cmp
and
lods
scas
test
jecxz
cmpsl
jmp
pop
fbstp
dec
or
cmpsb
push
adc
into
sbb
lret
test
arpl
jle
xchg
shl
lods
cmp
rcrb
stos
cmpl
sti
mov
popf
inc
sub
shll
movl
in
mov
popf
lahf
pop
mov
mov
and
mov
add
push
mov
lea
jns
xorl
js
dec
sbb
push
hlt
fcmove
stos
dec
sub
pop
sub
xchg
add
mov
pop
inc
rcl
xchg
in
dec
inc
in
sbb
in
dec
imul
push
dec
fimuls
add
sbb
cmp
pop
xchg
and
cmc
fsubrs
insb
sbb
cmc
into
pop
les
mov
pop
pop
inc
pop
sub
sub
add
mov
ja
iret
inc
xor
mov
pop
icebp
mov
jno
jmp
ret
fwait
sub
out
ja
ret
pop
insb
icebp
icebp
sbb
out
out
lods
or
pop
adc
mov
jne
jns
sbb
mov
jmp
push
xchg
sbb
or
jmp
xlat
pop
sbb
sti
adc
adc
stos
push
jl
adc
mov
aas
popa
adc
or
shll
cld
sbb
jne
mov
jno
rcll
pop
movsb
xor
pop
std
mov
mov
lahf
cmp
cmpsl
fistpl
lret
pop
push
sbb
gs
xlat
jnp
add
lea
lods
xlat
mov
or
fsts
push
sbb
xchg
mov
out
mov
cs
rcrb
sbb
scas
cwtd
ss
inc
jne
clc
lods
out
mov
push
add
das
xor
mov
mov
pop
inc
popa
mov
loop
mov
int3
les
lahf
enter
outsb
rcll
jge
add
inc
fsub
inc
jo
inc
cs
sarb
ja
fidivrl
jno
inc
arpl
sbb
into
divb
sbb
repz
sub
jnp
dec
mov
push
inc
mov
popa
xchg
test
or
lea
fisubrl
movsb
xchg
mov
inc
push
xor
jbe
cmc
mov
dec
xchg
mov
rol
cmp
and
pop
les
imul
mov
fsubrl
cmp
xor
xor
addr16
xlat
in
or
cmpsl
aad
daa
sub
xchg
or
jnp
sbb
cs
in
lods
add
xchg
shll
mov
sub
insb
lea
sub
rcll
jmp
dec
clc
aaa
mov
xchg
lock
pop
dec
scas
mov
into
push
rorb
enter
loop
cmp
cltd
test
std
xor
fiaddl
hlt
jnp
jo
or
xchg
sbb
sti
fwait
ss
mov
sub
imul
stc
mov
xchg
daa
movsl
mov
cli
mov
lret
push
aad
stos
inc
xchg
das
into
insl
and
mov
jl
add
sbb
xchg
jecxz
gs
je
outsb
pop
aas
mov
ljmp
lcall
sbbl
adc
mov
fld
gs
xor
stc
gs
dec
xor
enter
in
fwait
loope
int
sbb
fldcw
jne
lahf
aam
stos
rorb
mov
ja
inc
data16
aad
xor
sub
cltd
mov
push
cwtl
inc
jge
lds
lahf
orb
jb
push
test
scas
or
push
xor
pop
scas
or
stos
lds
jbe
xchg
stc
mov
and
cltd
jecxz
xchg
jo
nop
stos
stos
pop
jne
stc
sbb
lds
push
stos
pushf
sbb
test
mov
xchg
pop
daa
cld
xchg
mov
fiaddl
fcomi
pop
jae
decl
in
enter
cmovge
fwait
adc
in
xchg
mov
pop
adc
sub
inc
fstps
lds
in
cmpsb
mov
call
xchg
je
fidivrs
nop
jb
dec
flds
popf
cmp
mov
pusha
mov
les
cwtl
sub
rol
jnp
scas
pop
lds
clc
push
mov
mov
jmp
pop
and
hlt
ss
mov
inc
pushl
inc
stc
lock
xor
enter
test
push
xchg
cmp
imul
dec
in
mov
add
imul
push
mul
sub
mov
or
cltd
loop
loopne
jno
pop
cmpsl
std
dec
push
mov
lods
jmp
lds
sbb
stos
pop
movsl
cmpsb
sbb
sub
push
pop
xchg
popf
cs
loop
movsl
mov
lea
int
mov
fistpll
pop
sbb
popf
enter
jg
jl
adc
push
mov
pop
push
jb
test
push
popf
pop
movsb
xchg
cmp
jmp
xchg
or
sbb
mov
dec
xchg
test
movntq
daa
sub
in
jmp
push
jecxz
mov
push
add
movsb
clc
xchg
xor
add
cltd
jmp
in
stos
into
and
shlb
cmp
int
xchg
call
add
inc
cmp
pop
pop
in
int3
mov
mov
in
sbb
fldt
stos
into
push
cwtl
mov
lcall
lcall
fwait
adc
in
iret
push
sub
mov
pop
outsl
add
dec
and
in
test
jecxz
sbb
pop
jmp
push
in
mov
jmp
pop
xlat
add
inc
mov
dec
xchg
xor
mov
and
fwait
mov
sub
and
pop
fdivr
ss
ret
les
jecxz
sub
out
or
fildl
cmp
jl
cld
daa
push
test
das
xchg
mov
mov
loop
inc
fs
adc
cmpsl
out
jmp
out
and
sub
popf
fldt
xchg
fs
mov
jbe
dec
mov
ret
jge
pop
push
lods
cmp
lds
cmp
outsl
dec
pop
xor
mov
inc
jno
jb
push
shr
mov
mov
fcomps
sub
movsl
lret
mov
cmc
push
out
mov
dec
push
stos
loopne
push
sbb
jecxz
imul
xchg
cltd
push
lahf
jb
xor
xor
popf
test
lods
outsl
fsubrs
fcoms
sbb
mov
sub
iret
mov
das
mov
sub
cltd
jne
int3
cmp
mov
dec
repnz
std
mov
les
aas
sbb
outsl
icebp
xchg
pop
fildl
test
xchg
aam
test
and
out
mov
int
mov
xchg
xor
xchg
hlt
in
jo
adc
sub
cmp
jae
sbb
xchg
idivb
fs
int
or
std
lret
jb
flds
mov
adc
lds
mov
popf
xlat
out
sarb
lds
or
nop
popf
lock
sahf
fwait
lods
rcr
jne
mov
fcompl
imul
cmc
pop
in
sbb
mov
and
inc
daa
arpl
ret
div
aaa
outsl
push
xor
dec
cmp
in
xchg
sub
scas
inc
fcompl
dec
into
jno
fnsave
notl
push
push
arpl
mov
sbbl
lret
dec
cmp
lock
adc
xchg
lods
pop
dec
fcompl
scas
orb
and
and
sub
jne
mov
pop
js
sub
and
sub
jmp
loopne
dec
notb
jl
pusha
outsb
xchg
lods
sub
add
xchg
rolb
dec
pop
mov
mov
and
or
in
and
mov
mov
fdiv
insl
in
push
xor
mov
sub
xchg
mov
iret
andl
out
int
lods
cmp
pop
pop
xchg
sbb
pop
ror
and
inc
icebp
and
js
out
xlat
in
jne
add
xor
ss
stos
lds
mov
xor
mov
jne
xor
movsl
cmpsl
xchg
mov
lods
int3
mov
jne
jbe
sub
mov
and
sbb
push
dec
jne
add
scas
vcomisd
mov
into
cmp
pop
jge
xchg
pushf
sub
jae
sbb
pop
sub
dec
sub
test
rcll
fbld
jbe
test
sbb
jbe
xchg
pop
lds
fildll
movsl
insb
cmpsl
xor
test
sti
iret
sbb
xor
test
fsubrl
mov
xlat
xlat
jmp
lock
cmp
scas
dec
test
jge
into
and
dec
int
inc
nop
sub
mov
inc
push
sbb
out
jbe
sahf
in
sbb
int
inc
xchg
xchg
sbb
push
lds
pop
pop
sar
fstl
sbb
lods
lods
jb
mov
dec
push
shrb
and
dec
movsb
pushf
popf
jp
sub
outsb
fwait
sub
das
shrb
and
xchg
sbb
push
repz
sbb
sub
pop
mul
jecxz
xor
and
ljmp
mov
jmp
xchg
push
int3
dec
sahf
sub
jmp
repz
xchg
pop
xchg
inc
jmp
jne,pt
cmp
test
or
in
lret
dec
jmp
lret
push
pushf
lods
loopne
sbb
imul
or
xor
fstps
fistpl
add
hlt
xchg
stos
jb
mov
cwtl
jbe
cs
jmp
mov
push
mov
pop
daa
and
pop
and
frstor
jecxz
and
lds
jge
mov
icebp
mov
dec
ds
jb
adc
enter
rcrb
sub
outsb
pop
mov
mov
pop
call
xor
lods
push
lahf
imul
cs
loope
push
cmp
lea
in
sahf
jg
nop
test
jne
inc
in
loopne
mov
cmc
pop
pop
push
add
lahf
pop
dec
and
sbb
jne
jo
cmpsb
push
xchg
scas
pushf
sbb
xchg
xchg
dec
adc
mov
into
bound
nop
pop
loope
mov
sbb
lods
xchg
or
lret
push
or
pushf
lahf
fistps
push
mov
push
popf
xor
fs
sbb
jmp
dec
sub
sbb
jle
mov
test
pop
fldcw
jne
mov
xchg
dec
push
int
ret
xchg
push
stos
movsl
xchg
cmp
ss
pop
arpl
in
pop
into
int
mov
enter
loopne
test
dec
loope
xor
dec
int
addl
lock
jnp
xchg
adc
addr16
test
das
into
pop
pop
and
push
insb
jg
faddl
ss
push
and
cld
inc
jmp
je
pop
in
jmp
add
mov
hlt
sbb
jecxz
inc
fisttpl
out
imul
jb
stos
adc
cmp
pushf
sub
cwtl
sbb
movsb
lods
sbbb
outsl
div
fwait
cwtl
sti
mov
or
sub
xor
ja
pop
mov
or
pop
mov
push
inc
and
daa
and
cmp
push
fnsave
lods
mov
sbb
dec
jle
jno
in
cs
xor
mov
xor
out
xor
out
and
mov
lods
dec
push
shrb
movsb
mov
xchg
xchg
mov
ficomps
inc
mov
add
jo
jp
out
enter
sub
pop
dec
outsb
or
out
sbb
lock
in
cmpsb
int
je
dec
mov
mov
add
js
roll
test
test
mov
loopne
out
fs
xor
cli
inc
iret
out
sarl
cmpsl
bound
mov
in
gs
xchg
pop
mov
lret
xor
outsl
scas
mov
xor
cmpsl
jno
fwait
lods
mov
loopne
mov
or
fisttpll
mov
int3
fldt
cmp
jns
xchg
loope
lcall
add
orb
mov
insb
enter
hlt
cli
cld
scas
jmp
mov
dec
cmp
jns
outsb
lods
lahf
test
icebp
lds
fwait
add
ficoml
add
xchg
pusha
daa
jae
je
inc
imul
jecxz
es
sahf
mov
inc
xor
fisttpll
scas
xor
int
ja
mov
push
outsl
jge
in
xchg
push
ja
loope
and
push
je
mov
mov
xchg
fmuls
test
aaa
inc
push
shrl
dec
es
mov
in
jecxz
sarl
test
movsl
sbb
dec
mov
mov
sbb
pop
jmp
jae
xor
lea
mov
push
dec
out
sahf
ficompl
fs
inc
xor
inc
popf
loopne
pop
push
jbe
or
je
int3
ljmp
ffree
inc
pusha
leave
sub
call
cmpsl
outsl
push
jb
cmp
sbb
sbb
inc
pop
mov
sbb
adc
lods
xor
pop
mov
fstpl
xorb
aad
sub
cld
push
loopne
stos
dec
and
mov
into
and
cmp
ss
lock
aam
mov
xorb
and
push
pop
xchg
hlt
decl
clc
in
out
cs
sub
sub
outsl
int3
addr16
mov
mov
icebp
and
test
loopne
test
cmpsl
fisttps
xchg
adc
and
push
pop
inc
int
mov
ret
sti
pop
jle
sbb
adc
bound
leave
shr
mov
loop
sbb
fstps
inc
mov
aad
push
daa
pop
and
sbb
and
mov
adc
push
inc
fs
adc
les
mov
cmpl
dec
sahf
and
jno
scas
scas
or
scas
and
ja
lcall
pop
daa
jmp
daa
mov
nop
mov
ret
mov
stc
push
int
ficompl
pop
mov
out
or
pop
jp
enter
or
divb
mov
dec
lahf
jns
sub
jge
inc
xchg
sbb
insb
int
sbb
pop
xchg
cli
adc
fdivs
inc
int3
jecxz
pushf
pop
nop
dec
jbe
inc
pop
cmp
xchg
outsb
jmp
mov
mov
sarl
daa
test
stc
add
lret
inc
jle
jl
repz
xchg
cmpsl
call
repz
cmp
mov
dec
add
adc
push
sbb
xchg
xchg
dec
mov
js
es
icebp
add
hlt
fistl
cmp
arpl
popa
shll
dec
mov
outsl
loopne
lds
mov
cltd
and
call
sarb
dec
je
int
test
pop
stos
sbb
cmp
jbe
std
test
sbb
pop
stc
cwtl
mov
sahf
popa
mov
sbb
negl
enter
repnz
stos
in
jno
adc
ret
mov
in
mov
mov
pop
mov
sub
add
and
out
in
lods
test
mov
scas
xor
or
mov
mov
mov
xor
push
push
pop
pusha
clc
repz
jno
in
pushf
pop
pop
icebp
mov
test
cvtdq2ps
xchg
adc
popa
pop
out
stos
hlt
outsb
lods
scas
pop
pop
mov
negb
jecxz
sbb
int
push
mov
dec
jne
loopne
add
and
es
adc
inc
mov
fs
xchg
arpl
or
jb
lods
cmp
rorb
jnp
push
mov
push
js
xchg
les
out
adc
mov
loop
mov
and
pop
and
fdivl
lcall
xchg
mov
sbb
xchg
pushf
std
loopne
inc
xchg
adc
in
jno
pop
outsl
sub
aaa
bound
dec
inc
sbb
jae
xor
clc
pop
ja
popf
dec
pusha
in
stos
lds
fidivrs
add
push
mov
ret
in
mov
pop
testb
stos
out
jmp
mov
pop
and
dec
pop
cwtl
jnp
and
mov
push
pop
mov
xchg
cmc
pop
xchg
ss
add
or
xlat
lcall
cmp
popf
cld
inc
aas
cmp
xor
jae
xchg
push
jmp
push
pop
rcrl
scas
xor
cwtl
and
sub
in
scas
push
push
daa
dec
cmpsl
cmpb
xchg
dec
fwait
test
xchg
jg
ljmp
mov
incl
jo,pn
mov
xchg
add
sbb
push
sbb
pop
mov
sbb
pop
subb
mov
scas
mov
daa
aad
adc
out
movsl
pop
xchg
mov
inc
lahf
das
push
popa
push
cmc
or
xor
leave
fisubrs
sti
jns
icebp
sbb
es
and
scas
fbstp
repnz
fwait
dec
test
ss
cmpsl
pushf
mov
adc
scas
inc
jb
pop
test
fstpl
clc
xor
jge
testb
outsb
int
xchg
mov
pop
fsubl
cmp
loopne
std
sub
mov
cmp
lahf
ss
lret
mov
movsb
cmc
lret
imul
push
cmp
movsl
mov
les
sub
inc
inc
scas
mov
pop
andb
mov
out
lods
out
hlt
scas
and
push
mov
adc
mov
cmp
fidivs
test
and
je
sbb
cmp
cmp
aad
mov
out
ret
divb
dec
sub
mov
adc
xchg
fs
fisubrl
stos
imul
sub
call
mov
jecxz
cmc
lds
insb
bnd
inc
or
cmp
out
cmp
cltd
in
std
test
mov
imul
mov
in
mov
mov
mov
xlat
pop
mov
adc
pop
stos
je
pushf
stos
push
add
xor
xor
fwait
push
mov
vpcomq
inc
xchg
test
cmpsl
ret
jae
sbb
imul
loop
sarl
repnz
shlb
sbb
jbe
std
shrl
push
xchg
outsl
mov
rol
mov
into
imulb
movsb
push
xlat
mov
dec
sub
iret
test
out
mov
insb
lods
inc
cltd
fs
es
push
lahf
fsubrl
add
je
out
mov
jle
bt
out
pop
adc
xchg
sahf
and
mov
fistpl
lea
mov
iret
popf
mov
mov
clc
dec
sub
push
xchg
addr16
ss
into
mov
fs
and
inc
jecxz
pop
movsl
insl
pushl
dec
mov
cld
out
push
mov
or
fcomp
sub
gs
push
push
das
jnp
xor
dec
bound
insb
ret
in
jl
test
lods
loopne
add
pop
adc
mov
xchg
pop
or
aam
inc
or
mov
add
push
mov
test
xchg
sub
pop
sub
lea
lds
cmpsb
jl
jmp
int
pop
daa
fdivrl
push
lret
adcb
or
test
repnz
mov
add
sbbb
mov
aaa
movsl
jae
or
xlat
inc
mov
mov
int
sbb
or
scas
pop
inc
sbb
and
mov
mov
xchg
dec
xchg
cmc
add
xor
insb
popw
or
lods
aaa
xor
and
stc
daa
lds
lods
pop
jb
mov
xchg
or
loopne
jb
lods
pop
jne
pop
lods
xlat
cwtl
lock
cli
pop
sahf
pop
ja
aam
add
lods
pop
and
pushf
add
int
outsb
mov
loope
push
adc
sub
pusha
sub
mov
pop
lahf
mov
cwtl
sbb
add
fisttpl
or
mov
mov
add
fsubrs
xor
iret
hlt
dec
test
test
out
pop
cmp
sub
dec
fs
insl
lds
aaa
mov
cmpsl
mov
or
aaa
jb
enter
pop
scas
je
xor
daa
xlat
mov
popf
lahf
push
push
mov
mov
mov
outsl
dec
cmp
loope
popa
lods
push
sbb
adc
add
add
xor
mov
pop
roll
mov
fnsave
int3
into
ret
std
lock
ret
cmp
fcoml
inc
loope
bound
adc
mov
lds
mov
pop
sbb
xchg
into
popf
mov
nop
sbb
pop
pushf
gs
cmp
ret
add
pop
mov
aam
jnp
mov
mov
pop
das
inc
ret
loope
scas
mov
cmp
pop
pusha
in
jbe
sbb
mov
mov
inc
sub
push
std
cmpsl
add
pop
bnd
adc
in
jge
div
aas
xchg
stos
push
xlat
in
xor
push
lret
mov
add
push
xor
mov
xor
cmp
shrb
enter
mov
mov
insl
call
mov
xchg
or
iret
jmp
jle
insl
clc
jg
repz
dec
xlat
aad
push
sbb
xchg
int
adc
xchg
xchg
lods
enter
fldcw
xchg
mov
out
mov
std
xchg
xor
aas
fwait
in
mov
adc
sub
inc
enter
xchg
popa
sub
aam
pop
push
test
hlt
mov
mov
push
aam
sub
mov
mov
loopne
mov
int
pop
sbb
das
sbb
test
adc
pop
js
enter
andl
ja
mov
in
mov
loopne
dec
fcoml
out
popa
xor
stc
and
sbb
ja
repnz
pop
pop
pop
xor
dec
daa
dec
mov
pop
add
hlt
popa
pop
lcall
sahf
call
cmpsl
mov
fwait
mov
out
out
aaa
lea
lods
jge
lea
or
adc
pop
push
in
rcr
test
mov
icebp
dec
mov
subl
jno
ret
hlt
xor
mov
mov
mov
pop
xlat
and
mov
sahf
ret
fs
mov
cmp
jbe
cmpsb
jno
and
add
jns
ret
adc
sbb
adc
add
jp
dec
mov
pop
cld
ror
inc
push
jo
add
mov
div
outsb
outsb
loope
and
fidivs
lods
sub
cmp
pop
test
dec
lds
adc
mov
ja
in
xchg
mov
lret
std
mov
push
mov
mov
aad
push
fstpl
and
nop
fldt
hlt
inc
push
sbb
mov
sub
cwtl
mov
sbbl
mov
xchg
inc
outsb
jne
mov
and
push
cs
mov
xchg
and
dec
rcl
xor
push
int
unpcklps
stc
mov
cmc
aas
dec
sub
in
out
ffree
sub
xchg
movsl
dec
stc
in
dec
test
mov
pushf
fldt
mov
xor
addr16
jge
mov
stc
cltd
mov
mov
imul
xchg
in
xlat
lds
in
in
push
and
jns
mov
outsl
imull
sbb
dec
adcl
mov
mov
jns
inc
add
sbb
and
movsl
mov
lea
sti
out
and
sbb
lock
cmpsl
les
xor
xor
cwtl
push
hlt
mov
in
xor
test
jmp
cltd
xchg
call
jae
enter
mov
loop
sbb
push
adc
push
pushf
movsl
jp
mov
in
iret
lcall
lds
lahf
outsl
hlt
sub
sahf
jge
repnz
popa
or
push
mov
sub
cltd
xchg
test
pop
cmpsl
pop
xchg
sub
push
test
dec
mov
adc
mov
fmuls
movsb
jnp
xor
inc
fsubrl
xchg
rolb
mov
daa
jno
sbb
ds
test
pop
cmp
cmpsb
sbb
out
and
fisubs
xchg
xchg
daa
adc
or
mov
cmpsb
xchg
loop
adc
fidivs
cmp
cmpsb
cmp
lahf
lods
mov
sub
add
sti
and
in
inc
pop
or
cmp
out
dec
sub
xchg
adcl
jnp
and
jns
adc
sub
cltd
sub
sbb
gs
cs
sbb
lret
xor
mov
mov
sti
sbb
or
mov
xchg
push
or
mull
pushf
popa
sarb
hlt
fisubrs
ljmp
or
stos
shlb
mov
outsl
sbb
cltd
andb
and
sub
dec
rorb
xchg
rcrl
aaa
xor
xchg
insb
mov
icebp
cwtl
scas
mov
xchg
sbb
out
cmpsb
jno
or
dec
outsl
jb
cltd
sbb
movsb
repnz
pop
mov
call
sbb
mov
xchg
lret
clc
fisubrs
shlb
icebp
repnz
scas
cmp
ret
cmc
xor
mov
mov
inc
movsl
jmp
scas
icebp
imul
pop
xor
and
mov
sub
outsl
xorb
ss
rol
jmp
call
sub
jnp
mov
xchg
jne
into
rcll
fs
clc
mov
nop
scas
sub
pushf
test
ljmp
loopne
in
test
daa
or
mov
movsl
lret
sarb
test
mov
gs
fsubrl
lret
jne
or
jns
lahf
or
pop
mov
arpl
aaa
xchg
fwait
hlt
les
and
negb
out
and
sbb
cmp
xor
push
in
fiaddl
cmpsl
in
hlt
lock
pop
mov
push
pop
ret
repz
mov
cmpsl
sub
lock
pop
ss
jbe
repnz
ja
inc
jno
cmp
add
sub
cmp
ja
sbb
pop
push
inc
out
test
lahf
push
push
aas
out
in
loope
sbb
sbb
aas
pop
enter
lds
xchg
push
add
int
jb
test
cmc
nop
cmc
adc
inc
outsb
lahf
or
les
push
push
icebp
fsub
mov
push
cmp
imull
dec
cmpsl
pop
xlat
outsb
adc
cmpsb
inc
popf
xchg
push
cmpsl
imul
cmp
adc
jge
mov
xchg
pushf
xchg
sub
sub
mov
fcmovnb
mov
xchg
push
std
jg
pop
inc
inc
add
test
inc
push
pop
mov
cmc
aad
insb
pop
jbe
bnd
lods
adc
cmc
hlt
arpl
pop
push
inc
pushf
subb
vmovaps
sbb
sub
xchg
push
je
fs
test
fiaddl
jmp
jmp
fmuls
jg
daa
in
add
adc
pop
imul
mov
jle
je
xchg
and
in
mov
divb
je
insb
decb
pop
sub
test
mov
push
filds
das
jns
push
scas
aaa
cmp
pop
or
mov
lods
mov
daa
ja
mov
incl
mov
fcmovbe
pop
xor
pop
lods
or
and
fs
inc
dec
aaa
dec
mov
dec
sub
ficomps
ljmp
lea
mov
xchg
insb
dec
xor
inc
aad
scas
sbb
or
aam
push
pop
pop
jno
cmp
dec
lods
and
sarb
push
popa
adc
out
lock
ret
in
sbb
scas
push
xchg
inc
or
test
push
icebp
jmp
dec
int3
movsl
data16
fistpl
fbstp
sub
jmp
js
pop
outsl
int3
dec
push
test
mov
outsl
iret
stos
int3
cmpsl
mov
cmpsb
xor
xchg
mov
loopne
lds
lahf
out
ficoms
mov
scas
mov
iret
mov
adc
cmp
sub
sbb
fwait
mov
cs
aas
sbb
cmp
hlt
imul
jecxz
loop
mulb
shl
mov
in
leave
mov
fucomi
insl
mov
mov
or
dec
stos
sbb
insb
sti
jbe
mov
or
cmp
mov
call
pop
add
sarl
insb
add
mov
addr16
jbe
jb
ret
loop
mul
jno
out
aaa
insb
add
into
lods
jbe
adc
push
mov
jno
xchg
shlb
in
test
xchg
and
das
sbb
lahf
sarl
mov
cmc
mov
sbb
lock
inc
aas
jb
movsl
std
cli
icebp
adc
nop
daa
jb
outsl
xchg
enter
sbb
jae
repz
sub
out
ret
pop
push
pushf
sub
fcomps
pop
jg
mov
orb
leave
sub
pop
and
and
cs
clc
movsb
xor
push
sbb
stos
sub
sub
repnz
or
sub
daa
jmp
sub
mov
insb
loop
fcompl
push
fidivs
sbbl
out
cmp
fcmovnu
ret
rep
xchg
sbb
sbb
jmp
movsl
push
cs
xchg
adc
jns
mov
lods
inc
mov
int3
mov
or
push
movsb
ja
je
mov
mov
dec
inc
rcrb
rorb
aas
nop
and
outsl
movsb
in
outsl
popa
inc
lods
adc
push
xor
daa
fadds
test
sub
lcall
leave
jp
icebp
sub
dec
cmc
fcmovne
lods
shl
sahf
xor
dec
push
nop
pop
and
mov
scas
and
dec
mov
scas
dec
dec
test
insb
fmuls
push
adc
gs
mov
cmp
sbb
insl
fyl2x
enter
add
jae
pop
shlb
out
test
push
popf
jmp
jle
js
lock
mov
pop
insb
icebp
and
jl
dec
test
and
bound
popa
je
ljmp
sbb
sub
or
jecxz
in
lds
pop
pushf
fmuls
inc
or
mov
jns
gs
int3
jbe
push
movl
inc
out
loopne
daa
and
test
jmp
pop
dec
outsl
repnz
mov
xchg
dec
push
je
sbb
lahf
cs
lods
fidivrl
sub
sti
lods
scas
scas
int
mov
xchg
fidivs
sti
arpl
sbb
push
xlat
cmp
xchg
jae
shrb
pop
int3
push
int3
movsb
in
add
or
test
pop
mov
leave
icebp
cmp
inc
xor
les
cmp
test
jl
imul
loopne
jne
aaa
and
sti
addl
pop
mov
lds
push
sub
mov
mov
fidivs
scas
fcompl
repz
out
sbb
sbb
adc
test
lcall
mov
mov
out
jp
and
and
rcrl
xchg
imul
sub
xchg
cmpsl
mov
cmp
add
insb
mov
fldt
fidivrs
ret
cmp
shrb
loope
and
jb
loop
mov
dec
aaa
adc
fmuls
pop
jne
jne
or
flds
mov
mov
lds
and
xor
lods
mov
jle
movsl
sub
hlt
in
ljmp
ja
fldt
outsb
adc
xchg
sarl
shlb
mov
xor
mov
mov
jae
lods
pop
fwait
mov
mov
cmpsl
mov
add
stos
mov
cmp
pushf
out
outsl
xchg
pushf
push
shl
insb
jmp
cmpsb
out
mov
inc
add
sti
push
cmpsl
jmp
std
gs
lods
lods
popf
loop
pop
xor
push
cmpsl
aas
lods
out
sahf
ljmp
add
cmpsb
adc
jmp
fwait
mov
out
pop
xchg
repz
inc
xor
dec
popf
adc
jl
insl
sub
je
jb
mov
in
test
repz
mov
pop
dec
push
jbe
sub
cmc
lret
or
mov
ret
rorb
clc
adc
cs
jnp
fnsave
or
icebp
fmuls
mov
push
sub
sub
sub
jo
loopne
lahf
rorl
jg
xchg
adc
fnsave
mov
push
popf
arpl
mov
into
xlat
call
and
lahf
out
pop
imul
or
imul
lahf
test
or
push
dec
adc
std
sub
lcall
mov
lret
mov
cmp
cwtl
sub
int3
int
mov
int
out
bound
repnz
mov
in
call
lcall
lds
mov
mov
sbb
aas
xchg
mov
rorl
and
paddusw
jl
push
and
lds
or
xor
or
out
js
jno
xor
imul
out
mov
repz
outsl
pop
sbb
sub
rclb
sub
lds
adc
mov
pusha
jne
loopne
iret
aas
sbb
ds
xchg
mov
and
sub
adc
add
adc
popa
sbb
les
mov
insl
hlt
fisttpl
pushf
push
sahf
movsl
out
cwtl
mov
push
aaa
dec
lds
add
dec
mov
xchg
sub
int
aaa
xlat
xchg
test
sbb
into
ss
cmpsl
pop
lods
ror
inc
sbbl
clc
jnp
popf
js
test
mov
das
lret
mov
mov
data16
mov
rcrb
std
outsb
lcall
std
and
adc
jae
ja
dec
sub
add
sbb
movsb
jb
xchg
xchg
pop
jmp
pop
dec
xchg
mov
mov
mov
out
push
adc
inc
dec
adc
ja
xchg
inc
bound
adcl
lods
jbe
jge
lods
cmp
dec
adc
lcall
adc
add
and
cmp
stos
popf
or
xchg
mov
pop
popa
pushf
and
outsl
aad
jb
mov
test
movsl
pop
jl
inc
add
cmp
daa
pop
jmp
sub
dec
imul
mov
xlat
dec
gs
rorl
popf
ror
and
dec
sub
ret
cwtl
fsubrs
movsb
mov
lcall
mov
cmc
pop
insb
and
push
sub
sbb
mov
outsl
test
cwtl
and
push
adc
imul
pusha
sbb
test
cmp
data16
xor
add
mov
leave
scas
xchg
push
movsl
ret
jl
mov
inc
push
outsl
das
in
loope
imul
mov
aad
inc
lahf
divl
int
mov
scas
jbe
and
rcll
dec
out
jae
pop
popa
sahf
or
mov
inc
cs
pop
or
xchg
adcb
in
loopne
icebp
sbb
inc
pop
xchg
rcrl
inc
pslld
sbb
scas
jge
xchg
pop
xbegin
loopne
and
pop
jmp
xchg
sbb
cld
hlt
xchg
cmp
arpl
sub
jp
add
fistpl
js
xchg
and
fdivrs
pop
dec
sub
jecxz
inc
lea
xchg
test
jns
dec
sbb
cli
sub
push
pop
xor
mov
or
into
jbe
lods
pop
pop
imul
fisubrl
and
insb
mov
dec
mov
lahf
ret
vandps
xchg
pop
repz
jecxz
ss
or
fbld
leave
pop
xchg
and
mov
push
cmc
sbb
xor
push
pusha
test
adc
push
repnz
int
sti
jmp
fnstenv
xor
scas
scas
cmpsl
test
or
jno
or
pop
sbb
out
cltd
dec
push
xchg
and
ret
stc
mov
dec
mov
push
or
adc
and
fsubrl
xchg
lds
xor
pop
adc
in
and
push
mov
test
aam
push
mov
or
jge
scas
xchg
mov
div
scas
xchg
mov
jecxz
xchg
cmc
mov
das
ret
mov
daa
in
inc
xchg
fwait
test
pop
pop
outsb
into
xor
adc
sbb
inc
hlt
icebp
sbb
xor
call
mov
shlb
in
inc
inc
mov
divps
aad
mov
cmp
lea
jmp
add
jb
aas
pop
dec
and
adc
xchg
mov
sub
lcall
daa
jae
inc
popf
iret
push
jb
sbb
ja
icebp
mov
adc
inc
insl
paddd
sub
imul
push
int3
push
adc
adc
pop
add
in
push
xchg
movsb
mov
xor
jnp
mov
dec
or
pop
xchg
clc
mov
sti
mov
dec
daa
inc
loopne
fadds
xor
mov
ja
mov
push
sbb
mov
aam
adc
cmpsl
addr16
jle
lds
or
subl
fwait
push
push
mov
mov
dec
out
outsb
outsb
pop
pop
scas
mov
out
lahf
int
dec
cmc
xorl
popf
xor
lods
inc
mov
mov
lods
lods
in
mov
xor
fstl
push
jo
scas
jne
xor
jnp
mov
in
xor
add
lods
xlat
jae
sub
sahf
jmp
push
int
mov
jmp
int
scas
xor
andl
roll
or
ror
jb
inc
lds
outsb
dec
xor
hlt
sub
jnp
andb
pop
jge
jne
jmp
pop
pop
lods
pop
pop
mov
testl
daa
ja
cwtl
test
adc
popa
jo
pusha
cli
push
jns
xchg
iret
into
fldcw
call
mov
xor
sub
test
bnd
and
repnz
sub
movsl
push
cwtl
iret
jecxz
pop
cwtl
sbb
pop
or
lock
xchg
add
aaa
lods
or
cs
or
xor
pop
mov
xor
sti
or
scas
into
loopne
and
addb
popa
sbb
sbb
pop
lock
mov
sbb
popa
test
out
mov
or
cmp
cmc
cwtl
scas
mov
sub
scas
lret
daa
sbb
inc
popf
push
push
int3
inc
dec
push
in
mov
pop
pusha
jle
jmp
sbb
lds
mov
dec
sbb
sbb
aaa
pop
enter
ficomps
xor
pushf
lret
stos
subl
subb
inc
pop
xorb
addr16
jb
push
fstpt
shrb
js
call
out
out
mov
lds
mov
xor
lds
xchg
dec
xor
leave
test
loope
divps
sub
mov
movsl
pop
lods
jo
push
pop
sbb
into
es
pop
insb
fadd
es
jae
mov
sub
das
pop
sub
pop
in
cmc
shl
cltd
dec
jns
pop
lcall
outsl
out
pop
cmp
shll
lds
out
cmc
xchg
das
imul
lret
pop
inc
adc
add
out
add
lods
xchg
sub
xchg
cmp
ret
fisubs
lcall
fbstp
movsb
mov
test
mov
movsb
loope
testb
jl
mov
cmpsb
fwait
rcrb
dec
mov
stos
push
pop
lods
cmpsb
jb
add
sbb
cwtl
push
sub
sbb
or
dec
mov
fsubrs
or
add
aad
adc
in
lahf
xchg
into
lods
movsl
cmpsb
ret
lods
xor
out
stc
pop
rcr
shll
adcb
fst
pop
les
lea
lds
adcb
mov
push
lods
popf
ljmp
loopne
xor
sub
mov
sbb
lret
xchg
xchg
mov
int
xlat
push
daa
mov
and
pop
fmull
cmpsb
movsl
sub
inc
and
test
movsb
outsl
pop
mov
pushf
add
std
rcrl
xchg
mov
push
push
shlb
jb
pusha
imul
into
fstpt
mov
push
sbb
fs
mov
jecxz
aad
mov
in
inc
pop
lods
pop
rcrl
ja
push
xchg
les
test
xor
pop
sbb
xchg
dec
jae
call
mov
dec
xchg
cmpsb
mov
rcr
xor
ja
pop
ret
pop
test
cmp
sub
sbb
cld
stc
lods
ss
je
jmp
and
test
outsl
mov
out
mov
pop
into
loopne
and
mov
loopne
xor
loop
jmp
int3
imul
movsb
pop
adc
lahf
xchg
push
mov
xchg
push
lods
xor
push
sahf
xchg
daa
sbb
mov
add
dec
lahf
stc
out
out
or
negl
mov
stos
ret
lods
and
push
imul
fcomp
xchg
mov
push
xchg
imul
fnstenv
jbe
mov
sub
add
add
mov
mov
push
cli
hlt
add
cli
pop
jle
push
inc
sti
pushf
icebp
pop
xchg
clc
jae
ljmp
fnstcw
or
pop
inc
in
aam
out
mov
test
test
jno
shr
rolb
cmp
and
repnz
js
jo
gs
shll
sub
pop
inc
adc
cmpsl
push
xor
icebp
fimull
sbb
cmp
mov
cltd
mov
es
sbb
mov
ficompl
inc
dec
or
decb
loop
ret
fnstcw
outsl
jno
sub
xor
aaa
mov
cmpsl
xchg
cltd
aaa
imul
test
scas
aaa
pop
cmpsl
push
push
or
push
test
mov
jmp
out
mov
into
xor
scas
loopne
in
fucomp
mov
bswap
outsb
lret
and
mov
movsb
loopne
mov
shll
sti
mov
or
xchg
xor
mov
aaa
adc
fldlg2
mov
aad
int
outsb
sti
lods
movsl
mov
push
test
aas
mov
ds
sub
loopne
jnp
jae
jg
in
mov
aam
mov
lock
adc
mov
mov
lret
imul
outsb
test
jmp
fwait
push
ja
pop
xor
push
cmp
mov
cmp
xchg
push
cmc
std
mov
int
xor
sbb
sbb
mov
lds
sub
rep
sub
cmp
sub
daa
insb
jge
xchg
and
xor
xor
add
shlb
or
jne
adc
sub
push
cmp
sub
xchg
mov
xchg
jmp
mov
lock
rorl
pop
mov
inc
sbbl
jmp
fmull
outsb
sbb
and
adc
jge
stos
into
mov
jmp
mov
inc
mov
xchg
and
mov
pop
mov
sbb
jmp
shrl
stos
sub
outsl
dec
shl
shl
mov
mov
xor
or
out
scas
jmp
pop
cs
xor
and
shr
sub
add
inc
adc
insl
sub
push
xchg
mov
popa
sahf
push
cltd
inc
int
mov
hlt
mov
xor
sub
jg
xchg
cmpsl
mov
mov
outsb
mull
sbb
cmpsl
sub
lea
pop
int3
xchg
fwait
mov
xchg
jmp
lods
pop
aas
fwait
mov
adc
insl
push
xchg
add
push
mov
xchg
and
or
and
sub
pop
mov
sbb
movsl
dec
mov
pop
sub
sub
mov
jle
in
xchg
sbb
sub
xlat
mov
push
lret
cmpsb
jmp
sbb
pop
sub
lret
rorl
xchg
out
push
jl
mov
scas
addr16
movsl
pop
insl
jecxz
ss
sub
int
mov
mov
cli
mov
fwait
in
arpl
cmc
insl
sub
das
mov
sbb
adc
outsl
negb
mov
lods
mov
aad
out
into
daa
incl
mov
cmp
test
rorb
imul
xor
fsubrl
mov
add
xchg
fistpl
out
in
ja
mov
lods
fcomip
daa
mov
lea
sbb
cmp
jnp
enter
sub
mov
dec
rorl
int
pushf
xchg
sbb
sti
xchg
cmp
mov
push
xchg
scas
jae
push
adc
push
jb
push
dec
mov
icebp
fisttpl
dec
sbb
fdivrs
push
movl
inc
sub
xchg
leave
xchg
sti
lock
ret
add
lret
jecxz
xchg
push
jb
lahf
scas
xchg
adcb
sahf
add
int3
mov
add
inc
xchg
pop
inc
and
das
pop
mov
sbbl
shrb
mov
mov
sbb
daa
in
stos
lods
ss
pop
icebp
int
pop
push
bswap
leave
jle
xor
sub
cwtl
outsl
lods
sbb
mov
pop
mov
push
negl
mov
stos
call
repz
nop
push
lods
mov
iret
pop
cwtl
pop
gs
mov
sub
add
pop
lcall
cmp
nop
fldcw
in
cmp
sbb
sub
ss
and
sbb
or
aas
push
dec
jne
ret
pushf
jg
mov
mov
xor
xchg
negl
pop
jne
or
sbb
lods
xlat
aam
les
rcr
icebp
jg
pop
bound
dec
and
roll
sbb
lea
xchg
or
push
add
data16
pushf
addl
in
ftst
int3
add
inc
ret
loopne
push
sbb
sub
mov
lea
inc
std
test
pop
out
shrl
mov
insb
mov
repnz
mov
lods
xchg
push
inc
cmpsl
dec
adc
jmp
dec
add
cmp
cli
dec
xchg
or
sub
sub
push
lods
sbb
out
jno
lret
jl
rclb
inc
push
push
ss
lret
xchg
loope
add
push
xchg
and
push
loopne
lods
jae
pushf
mov
inc
xlat
sub
jne
mov
dec
pop
insb
jns
inc
out
lcall
outsb
rcrb
adcl
xchg
lret
sub
clc
pop
mov
bswap
ret
fmull
mov
push
inc
mov
hlt
jbe
mov
lret
ret
mov
aam
movsb
push
loopne
sub
mov
dec
inc
jno
insb
mov
dec
lahf
mov
aas
je
xor
jl
fdivr
mov
icebp
xor
pop
push
mov
icebp
or
dec
call
scas
cs
mov
push
pop
mov
out
mov
cmp
sub
loop
xor
and
fsts
pop
arpl
add
sbb
mov
fwait
xchg
pusha
and
hlt
mov
sub
fneni(8087
xchg
xor
cmpsl
call
lea
and
arpl
sbb
inc
cmp
mov
mov
fwait
cld
dec
ret
movsb
jmp
pop
sti
adcb
cwtl
mov
jbe
ret
jae
pushf
pop
outsb
jge
test
xchg
decb
mov
xchg
lahf
xchg
jmp
add
sbb
shll
jmp
in
cmp
mov
inc
jnp
test
scas
in
out
out
loopne
xor
push
rcrb
icebp
in
and
push
pop
lods
outsb
sub
fwait
lret
mov
inc
sub
into
mov
popf
stc
mov
mov
pop
pop
pop
fistpll
pop
lea
shll
cltd
xor
inc
ret
cmp
daa
outsl
push
neg
pop
std
dec
adc
sbb
push
sbb
pop
push
add
aam
mov
sbb
popf
sarb
sbb
movsb
lea
nop
and
sbb
sub
sbb
lock
imul
test
sub
xor
dec
mov
sbb
fnstsw
mov
jns
push
inc
das
imul
sti
cwtl
iret
mov
ficoms
inc
std
xchg
mov
xchg
push
add
or
add
nop
repnz
and
xlat
sti
insl
hlt
add
mov
xor
fwait
push
insl
inc
sub
fcomi
loop
and
fwait
jne
outsb
pop
in
in
out
int3
push
jns
jmp
cs
iret
ret
inc
mov
sbb
pop
scas
mov
push
popa
jle
pop
sahf
sbb
adc
lods
in
jmp
mov
test
xorl
pop
push
lods
pusha
cmpsb
inc
test
and
mov
mov
mov
xchg
jbe
xchg
or
ds
lods
repz
jae
cmp
loop
pop
pop
jmp
pop
sub
mov
int3
imul
pop
movsl
mov
nop
out
inc
in
pop
push
ret
sbb
leave
sub
outsl
adc
push
xlat
or
xchg
or
xchg
in
into
loop
sub
or
mov
aaa
int
lret
inc
in
test
and
aam
popf
adc
cmp
inc
sahf
dec
mov
ss
and
xchg
dec
mov
lea
dec
sbb
out
sbb
and
lahf
xchg
mov
outsl
test
mov
daa
pushf
scas
sub
mov
pop
lds
in
sub
sub
mov
in
dec
pushf
outsb
scas
lret
lods
in
dec
inc
movsl
or
rcrb
insb
mov
popf
add
fwait
js
push
out
outsl
pop
mov
mov
jno
test
lcall
adc
pop
int
ret
int
scas
scas
or
adc
jmp
repz
gs
fldl
adc
xchg
std
cwtl
test
xor
mov
mov
scas
xchg
sub
test
ds
xchg
pusha
mov
jb
les
mov
or
sbb
sbb
into
pop
cld
lcall
outsb
mov
aas
roll
cli
xor
testb
mov
or
mov
mov
sti
mov
mov
in
in
push
mov
push
clc
jmp
add
jbe
nop
popf
negb
jmp
lods
push
and
test
call
xchg
cmp
shrb
lcall
or
aaa
cmp
jb
mov
insb
inc
stos
outsb
pop
dec
setg
mov
adc
add
add
lods
cltd
repz
loop
jo
out
cltd
mov
std
jns
inc
inc
dec
addb
fucomi
xchg
fwait
pushw
arpl
movlps
pop
adc
out
cmp
and
icebp
rolb
adc
std
sahf
mov
adc
jp
movsb
push
pop
lret
fldl
mov
cwtl
pop
mov
mov
outsb
int3
jp
inc
call
std
outsl
popa
movups
ja
cmp
repnz
pop
cmp
jecxz
dec
js
mov
push
sub
sub
mov
enter
dec
stos
mov
push
add
je
negb
pusha
adc
je
xor
sub
out
lcall
int3
dec
sub
mov
push
mov
lea
xchg
test
out
push
sbb
jne
cwtl
xlat
data16
mov
or
add
cmc
sahf
into
rclb
fildl
gs
xor
sahf
push
pop
pop
je
repz
mov
call
mov
loopne
dec
push
sbb
mov
movsl
or
insb
or
mul
lds
shl
mov
xor
mov
stc
mov
sbb
stos
sub
mov
inc
mov
add
ret
push
pop
mov
xor
jae
call
dec
stos
in
cmpb
xor
mov
cmp
icebp
push
push
lahf
sub
test
mov
push
std
sarl
popf
pushf
mov
add
push
pop
xor
scas
leave
out
cmp
fldt
clc
into
pop
lods
fcomps
mov
push
jo
mov
outsl
push
aaa
pusha
sbb
xchg
cmp
sbb
sarb
vcomiss
shlb
aas
pop
arpl
push
aad
rcl
cmpsl
inc
pop
ljmp
mov
add
sub
xchg
push
jne
add
lahf
push
or
dec
dec
call
aam
dec
jne
dec
xchg
ss
sub
lds
je
ror
sub
jb
rcrl
cmpsl
pushf
in
mov
fsubs
and
dec
push
or
mov
in
mov
into
pushf
out
mov
int3
inc
xchg
lds
sub
mov
dec
pop
inc
inc
mov
mov
sub
cmp
cmpsl
loopne
xchg
adc
push
push
adc
xor
and
cmp
in
jae
or
pop
push
sbb
or
xor
pop
push
or
jae
popa
nop
or
xchg
cmpsl
jo
stc
push
int3
adc
test
nop
ud1
daa
inc
pause
mov
sub
inc
test
mov
pop
pop
gs
std
test
je
inc
mov
subb
nop
mov
mov
jo
cmpsl
mov
test
enter
loop
lahf
pop
daa
nop
out
add
pop
fistps
mov
aam
sub
pop
fwait
in
sbb
push
shll
int3
pushf
and
dec
xchg
inc
cmc
lcall
pop
pop
mov
jp
cwtl
mov
orl
push
mov
imul
scas
pushl
loope
sub
fs
fs
inc
sub
xor
jb
scas
scas
aas
cmpsl
mov
xchg
pop
dec
jmp
pop
cmp
iret
pushf
xchg
lea
xchg
mov
out
lea
mov
test
out
lods
pop
orb
jg
adc
mov
sbbb
xlat
shll
loop
and
test
fstpt
lret
inc
mov
xchg
scas
loop
lds
dec
pushf
sub
leave
pusha
lret
pop
in
xor
adc
mov
xchg
or
loopne
add
xor
sti
lods
mov
movsb
push
popa
lock
jb
inc
test
sub
outsl
adc
ret
movsb
xchg
lds
repnz
xchg
add
ljmp
popf
lret
push
push
xchg
pop
xchg
inc
push
jo
xchg
push
mov
lret
xchg
pop
push
into
pusha
jg
push
aas
inc
fildl
rorl
xchg
push
xchg
pop
lods
sub
mov
data16
in
stc
add
xchg
sahf
adc
push
arpl
test
xorl
and
cmc
popf
pop
mov
into
lahf
rol
mov
in
pop
cmpsl
into
xchg
adc
ficoml
adc
mov
pop
aam
pop
clc
xlat
inc
jle
insb
test
icebp
inc
into
mov
xorl
mov
jo
sub
inc
xor
mov
ljmp
push
or
test
cmpsl
xchg
mov
scas
fwait
rcrb
and
or
mov
sbb
jecxz
icebp
aam
and
sub
jge
popf
xchg
lds
into
jae
mov
in
cmpsl
cmpsl
sbb
mov
inc
inc
xor
sbb
daa
mov
test
pop
mov
push
push
xchg
cwtl
lea
mov
and
ret
shll
ss
popa
lods
xchg
sub
mov
lds
pop
and
inc
push
mov
cmc
inc
stos
shll
repz
inc
jge
inc
lret
mov
lcall
fdivrl
sub
mov
les
jnp
aaa
push
addb
jmp
icebp
in
das
mov
jnp
ja
jl
fdivs
inc
adc
cmpsl
mov
adc
and
cmc
and
mov
sbb
fcmovb
icebp
cmpb
mov
dec
fcmovb
in
jb
popa
insb
fiaddl
aam
shl
inc
sub
insb
xchg
into
sub
jb
pop
mov
into
scas
mov
and
jge
in
outsb
lods
or
add
sub
fdivrl
adc
out
out
mov
pop
jl
pushf
enter
jo
and
in
adc
fsubrp
data16
sub
mov
in
xchg
int3
mov
adc
dec
mov
push
sbb
inc
jmp
xchg
pop
mov
inc
lds
bound
push
jp
push
cmpsb
mov
fstp
outsl
dec
and
repnz
push
jbe
mov
pop
cmc
test
xchg
adc
je
sbb
jb
mov
pop
mov
mov
jne
out
fadds
rolb
jl
adc
nop
pop
dec
mov
mov
pop
das
push
hlt
mov
cld
stc
repz
add
insb
jge
xor
mov
outsb
and
lret
ja
sub
sti
mov
xor
push
dec
and
sbb
insb
jg
pop
mov
pop
jle
mov
inc
scas
imul
cmp
jnp
fnstsw
pusha
lock
sti
sub
mov
out
enter
or
in
cmp
push
lods
out
fsubrs
sub
mov
loop
inc
cmp
std
fnstcw
inc
jmp
pusha
jge
hlt
js
in
mov
dec
std
call
add
mov
inc
aas
jmp
cld
sbb
or
shll
ret
xchg
or
lahf
sbb
sahf
xchg
xor
xchg
mov
jbe
sub
out
aam
sub
cmp
inc
outsb
sub
fldt
xchg
cs
pop
add
and
hlt
orl
scas
push
or
xor
in
xchg
mov
push
repz
iret
sub
fldenv
cmpsl
ss
inc
cmp
adc
or
ret
popf
outsl
adc
lcall
mov
int
fadd
add
push
iret
out
imul
sub
sbb
outsl
and
ret
mov
xchg
int3
mov
pop
inc
ret
ret
xchg
mov
jbe
nop
js
iret
add
inc
ret
js
cltd
mov
lods
and
neg
mov
cmp
inc
loop
ja
cmp
xor
ret
loopne
and
shr
stc
xchg
les
or
das
sbb
lds
repz
xchg
sbb
jmp
cmc
rolb
jl
dec
test
popa
out
sbb
scas
imul
adc
mov
mov
ret
jne
mov
push
int
dec
icebp
sub
or
push
stc
hlt
ret
out
pop
sub
xor
cmp
sbb
notl
ljmp
pop
js
mov
sbb
or
jo
pop
imul
pop
mov
xor
push
mov
pop
rol
testb
adc
pop
pop
fidivs
and
inc
pop
cwtl
orl
hlt
mov
push
xchg
inc
outsl
mov
pop
mov
inc
sbb
daa
incb
daa
outsb
add
cmp
stos
fmul
ret
repnz
or
fnstenv
push
into
xlat
lods
xchg
pop
sbb
pop
int3
jns
aaa
inc
and
add
lret
or
inc
fistl
adc
mov
pop
aam
push
cmp
andl
js
push
das
sub
pop
test
aad
fcomps
or
xlat
sub
repz
sbb
add
mov
arpl
in
dec
in
jns
dec
dec
mov
or
into
jo
xor
push
test
xorb
das
hlt
rorb
pop
cmp
push
dec
hlt
idivb
push
addr16
in
lds
sbb
jno
stos
lds
jle
test
inc
and
fldl
scas
and
jle
push
sti
push
jns
sub
aam
shll
cmpl
lea
outsb
roll
enter
inc
jb
and
push
in
or
iret
loop
andb
subl
inc
mov
sahf
insb
shlb
xchg
mov
popa
mov
fs
pop
test
jb
and
addr16
pusha
insb
das
inc
stos
add
ffreep
cmpsl
into
mov
leave
mov
sbb
mov
mov
pop
sti
sbb
mov
mov
pop
jp
outsl
out
xchg
lcall
fisttpl
insb
jge
movsl
out
sub
pop
lahf
xchg
pop
out
or
dec
icebp
and
or
jb
in
sbb
xchg
mull
bound
sub
xchg
hlt
in
in
out
ret
popa
cmp
lods
sub
xchg
pop
call
sbb
cmp
lock
scas
movsl
jge
cld
and
cmp
pop
mov
xchg
stc
rcrb
filds
sbb
bound
insb
pop
inc
push
mov
ror
call
xchg
aaa
aam
lahf
inc
mov
loopne
inc
shrd
inc
fadd
rorb
fcmovne
mov
pop
mov
out
aaa
les
shl
sub
mov
call
xor
hlt
jbe
and
pop
cmpsl
push
leave
vpcmpeqw
and
daa
sub
dec
movsl
movsl
fldl
inc
sbb
xchg
mov
aaa
cmp
xor
lock
jo
jb
mov
call
movsl
mov
push
mov
mov
sub
into
push
mov
dec
or
jl
push
cmp
fsubs
sbb
or
jle
pop
cs
bsf
xchg
jge
cwtl
sub
sub
add
arpl
hlt
movb
cs
in
add
pop
push
out
rol
ret
mov
cmp
int
or
popa
dec
int3
mov
stos
cli
xchg
aaa
jge
cld
jns
lds
adc
rclb
xorl
in
jo
sahf
shlb
fcmovu
jne
xor
dec
push
cmc
es
or
dec
sbb
aas
outsb
mov
dec
orb
scas
push
mov
stos
out
arpl
pop
sub
sub
cmpsb
mov
dec
arpl
lods
add
in
dec
into
aad
fadd
jo
stc
inc
push
pushf
rorb
cmp
sbb
out
rolb
les
or
cmp
pop
pop
xor
fsubs
add
imul
jbe
fninit
mov
repz
scas
lahf
stos
fists
mov
scas
pop
das
imul
mov
aas
cmpsb
push
mov
mov
and
fnstenv
testb
repz
xchg
adc
or
mov
sub
int
xchg
push
xchg
lods
dec
adc
imul
add
dec
add
mov
pusha
jne
adc
xorl
notb
dec
loopne
daa
repz
xchg
lods
inc
pop
mov
mov
sbb
hlt
scas
adcb
stc
sub
pop
mov
shl
std
mov
mov
sub
mov
clc
sub
fimull
sbb
pop
sbb
in
lods
vhaddps
add
test
fs
or
in
add
dec
xor
and
jmp
push
pop
jbe
movsl
jmp
in
push
inc
lret
or
or
adc
div
add
mov
loop
inc
pop
push
or
and
mov
xchg
push
out
sub
sub
out
sahf
add
jecxz
add
cltd
rcrl
movsb
cmp
enter
jbe
sub
xchg
hlt
rcrl
lds
andl
ret
movsl
sub
mov
test
push
or
pushf
lods
shrl
mov
mov
mov
mov
hlt
loopne
fldt
mov
mov
repnz
adc
sub
arpl
jmp
mov
cwtl
sub
out
fistps
jb
test
mov
testl
insb
cltd
mov
sti
cli
or
sub
add
in
or
sbb
mov
in
sarl
es
adc
fcompl
and
mov
pop
xchg
adc
sbb
shrb
dec
shll
lea
fisttpll
into
jbe
sbb
or
mov
sbb
inc
dec
lds
pop
cmpsl
sbb
adc
sahf
add
rcrl
sub
jmp
jp
outsb
repz
mov
jae
inc
lock
mov
add
movsl
or
cmp
faddp
hlt
xchg
int
and
and
add
mov
aad
aas
mov
and
xor
mov
or
popf
test
scas
adc
xor
pop
xor
cmpsb
sub
daa
xor
xchg
cmc
outsb
inc
sbb
mov
or
or
dec
lods
out
mov
mov
cwtl
std
xchg
stos
pop
outsb
lods
in
mov
jne
and
xor
imulb
sbb
mov
mov
das
iret
cwtl
loopne
loopne
lds
mov
xor
in
data16
ret
dec
jecxz
enter
and
sbb
imul
fisttpl
je
mov
add
cmp
jno
push
sub
arpl
rcl
orl
lods
sbb
xchg
adc
cmp
lds
shrl
inc
popa
in
js
daa
fwait
out
shrl
aas
stos
shrl
push
inc
ret
sbb
int
enter
and
orl
cmpsl
jb
insb
orl
sub
or
bound
inc
mov
es
imul
and
jne
adc
cli
in
cs
in
mov
sti
mov
insb
bound
lods
enter
sbb
mov
mov
add
lahf
fistps
ret
xchg
mov
loopne
xor
push
sub
incb
dec
jmp
dec
andb
xchg
test
sarb
mov
and
xchg
stos
clc
jb
test
in
pop
int
mov
push
mov
adc
add
xor
mov
popf
pop
pop
int3
jge
or
pop
pop
cmpsl
enter
pop
sar
xor
in
movsl
leave
clc
or
xchg
lods
sbb
sub
fcoml
cmpsb
sub
int
add
arpl
jne
inc
xchg
out
jg,pt
rcr
shr
mov
jns
push
pop
dec
xor
int3
loopne
xchg
popa
movsl
rcrl
imul
lods
in
outsl
mov
daa
icebp
shrl
gs
fnstenv
or
push
push
jecxz
push
mov
mov
in
loop
clc
aad
inc
subb
pop
jns
pop
les
cli
xlat
lds
pop
cs
sub
adc
dec
faddp
mov
sub
shl
in
pop
xchg
mov
xlat
pop
pop
inc
mov
stc
int
sbb
pusha
cmc
movsl
loopne
pop
push
mov
mov
cwtl
sbb
ret
iret
jno
dec
in
lret
mov
xchg
out
mov
push
shlb
mov
dec
in
jge
push
loopne
outsb
in
sbb
adc
imul
xor
in
mov
pop
adc
in
xchg
fdivl
push
adc
inc
xor
xchg
mov
push
ds
sub
shrb
rorb
xchg
and
test
inc
movsl
nop
jns
or
mov
outsl
mov
pop
pop
int
scas
xor
jbe
jl
and
outsl
leave
push
xor
lods
mov
rorl
pop
into
push
jp
cld
xchg
lret
sub
shrb
stos
call
sbb
hlt
and
mov
jns
jbe
xor
xor
shlb
add
jp
daa
push
icebp
ret
lods
iret
jecxz
addb
popa
xor
xlat
les
out
and
sahf
jl
jo
push
fmuls
xchg
sub
cltd
xchg
enter
cld
test
sbb
cmp
lods
int
xor
sbb
cmpsb
fdivs
pop
cmpsl
mov
lds
add
lds
xchg
popa
es
sub
sub
popf
mov
les
xchg
mov
xchg
fists
frstor
sahf
lret
and
pop
cs
inc
sub
inc
sahf
mov
mov
in
inc
mov
sbb
lods
and
cmp
dec
adc
pop
pop
cld
cwtl
xchg
lret
jns
movl
rcrl
rorl
pop
and
loopne
push
mov
jl
adc
xchg
je
loope
arpl
or
gs
jecxz
cmc
mov
out
pusha
dec
cs
mov
rcl
repz
jb
pop
dec
adc
cmc
test
xchg
das
out
insl
pop
lds
xchg
mov
stc
add
xchg
xchg
dec
and
inc
mov
lods
jbe
dec
jae
xchg
inc
aad
fs
ja
sbb
in
mov
xor
push
daa
xor
mov
test
imul
xchg
jbe
fcmove
pushf
je
sbb
sbb
adc
out
or
jb
pop
lods
pop
push
aad
inc
jmp
sbb
imull
push
add
and
push
mov
lret
mov
push
adc
movsb
mov
sub
test
fcoml
into
mov
and
mov
push
popf
push
pop
mov
add
mov
mov
mov
int
sbb
sub
add
insl
mov
fscale
jge
cld
leave
jae
lds
sbb
sbb
jbe
sbb
das
mov
repnz
cltd
outsb
sub
add
fwait
lods
push
adc
daa
scas
inc
enter
jne
lcall
out
in
mov
cltd
pop
sbb
fs
test
mov
data16
arpl
mov
test
mov
pop
mov
cmp
xlat
pop
or
jg
cmp
test
cmp
jns
pop
loope
int
mov
ficompl
ret
movb
scas
popw
imul
jno
jp
dec
lea
sub
lds
add
dec
jle
insl
and
mov
adc
cmc
push
mov
xchg
or
scas
leave
ljmp
sbb
mov
ret
jbe
jae
sub
pop
nop
data16
cmp
mov
in
pop
add
test
out
lret
xchg
lret
test
nop
cltd
std
imul
test
in
repz
or
enter
cmpsl
add
add
outsb
movsl
je
popa
loopne
rcll
adc
pop
lea
cmp
lds
divl
xor
out
fwait
in
inc
out
es
je
dec
pop
inc
jne
pshufw
lret
cli
jb
cs
mov
push
insb
adc
xchg
and
clc
mov
adc
xor
push
adc
sbb
icebp
mov
push
je
stos
mov
repz
out
sbb
lock
aaa
mov
push
pop
cmp
mov
lods
lds
ja
lahf
jge
jbe
mov
mov
call
lahf
mov
lods
cmpsl
sbb
pop
mov
outsb
clc
in
pop
sub
in
ljmp
rcl
pop
jl
add
out
lock
test
syscall
lock
and
adc
or
int3
rcr
aad
jns
cmc
xor
aad
mov
xchg
add
jo
inc
or
enter
mov
nop
mov
cmp
stc
xchg
movsl
lea
scas
pushf
jp
sbb
inc
mov
xlat
in
jne
add
lods
iret
into
movsl
pop
fwait
sahf
cmpsl
cld
int3
dec
cmpsl
sub
jne
add
mov
xor
or
cmpsb
pop
jge
fs
pop
mov
mov
adc
out
leave
jne
sbb
and
push
rol
ret
xchg
bound
lds
faddp
popf
pushf
dec
sbb
ss
cmp
cmc
test
cmc
int3
arpl
add
mov
rcll
cmc
fsubr
push
xchg
add
push
sbb
lods
iret
fcompl
and
fisubs
inc
cmpsl
mov
add
test
mov
jl
lods
or
pop
add
push
out
orl
cmpsl
jbe
inc
mov
hlt
xchg
in
inc
adc
push
add
lds
insb
dec
dec
lea
lods
jmp
stos
push
hlt
inc
xor
cld
ja
push
xchg
shl
fucomi
cmc
mov
repz
adc
xchg
push
mov
imul
pop
lds
out
in
insb
jae
int
mov
sub
sbb
arpl
inc
in
and
ja
test
cli
ljmp
test
jns
daa
aaa
into
lea
and
mov
mov
mov
out
xlat
lods
fildl
sbb
push
daa
mov
inc
mov
mov
sub
xor
pop
test
mov
mov
mov
aaa
mov
dec
movsl
lods
or
pushf
mov
add
ja
cwtl
xor
add
inc
lret
test
loopne
push
lahf
jno
fisttpll
pop
cmp
lods
fisubrl
shl
cwtl
or
aaa
add
mov
les
mov
lock
push
enter
jne
pop
sub
mov
dec
pop
mov
imul
cmp
push
fcompl
mov
xchg
push
out
inc
mov
push
add
inc
ret
jnp
repz
or
xchg
xor
pop
in
shlb
outsl
movsl
or
sbb
sub
loope
clc
subl
push
cmp
into
pop
mov
sbb
ss
jmp
xchg
jbe
out
or
jno
pushf
push
push
fistl
xlat
mov
loop
in
push
out
ret
rorb
push
pusha
inc
jecxz
movsl
andl
cmp
lea
and
test
fprem
dec
push
push
mov
pop
or
mov
pop
pop
test
sbb
sub
xchg
jo
dec
add
mov
out
int
sarb
out
aaa
mov
int
sbb
inc
push
push
xchg
mov
xor
pop
aas
mov
inc
bound
subb
pusha
or
dec
sbb
inc
fwait
fwait
push
dec
adc
mov
mov
enter
jmp
outsl
cmp
add
jge
es
in
adc
sub
ds
cs
dec
xchg
cmp
lret
mov
lret
inc
mov
push
into
mov
mov
cld
out
mov
scas
dec
push
jecxz
or
and
test
pop
sub
loopne
popa
sbb
pop
imul
in
push
repnz
fdivrs
dec
stos
mov
sti
scas
pop
clc
in
push
addl
test
outsl
loopne
dec
es
out
lods
sub
loop
or
rorl
mov
cmp
fwait
pop
jb
and
lods
inc
add
xchg
clc
pop
iret
push
lods
outsl
mov
cld
mov
rcrl
mov
ret
dec
jle
sub
dec
dec
inc
ret
xchg
cmp
lahf
movsl
adc
je
mov
pop
arpl
sbb
mov
push
add
mov
push
popf
fs
std
pop
adc
sbb
push
pop
ret
xor
cmp
and
sbb
jecxz
insb
stos
jl
add
push
inc
sub
sbb
mov
mov
loop
adcl
fwait
sbb
xchg
test
lds
testl
xor
dec
dec
pop
inc
xchg
neg
and
je
sbb
imul
mov
mov
out
cli
aas
pop
mov
mov
mov
adc
jne
push
mov
inc
push
sub
pop
mov
pop
sbb
paddq
jne
pop
xchg
out
sbb
mov
mov
xchg
sub
or
jae
pusha
daa
or
mov
xor
add
cmp
adc
out
loopne
pop
ljmp
xchg
scas
mov
or
jmp
cwtl
bound
insb
xchg
push
dec
mov
pop
sbb
lods
lret
daa
cltd
cmpsl
pop
cmpsl
sbb
fidivl
jmp
fsubs
and
push
movl
add
ret
popf
mov
movsb
enter
pop
jno
icebp
mov
mov
pop
loopne
pop
pop
insl
ja
lods
mov
jb
mov
loop
ds
push
pop
hlt
rcrl
cmp
push
sub
sbb
adc
add
pop
xchg
imul
rol
mov
pushf
mov
into
lret
dec
lds
mov
jno
pop
test
daa
jbe
adc
subb
mov
xor
aam
jns
leave
loop
push
inc
in
sbb
mov
mov
iret
sub
sub
or
mov
mov
xchg
shlb
mov
cmpsl
mov
cmp
xchg
mov
je
adc
jnp
pop
in
divb
push
in
cld
lds
sti
dec
in
js
nop
sub
int
mov
mov
ror
insl
shrl
scas
vpsubb
in
push
pop
push
test
fwait
int3
sub
and
mov
pop
cltd
mov
pop
add
sbb
loop
das
enter
lea
sbb
rclb
loopne
repz
sbb
xor
xor
shrl
daa
call
jmp
movsb
and
icebp
xor
xor
cmpl
sub
std
lahf
pop
ss
data16
call
testb
lret
mov
int
lea
jne
icebp
cmp
sbb
ret
out
or
int3
std
jl
or
enter
sbb
jb
mov
push
aad
mov
scas
in
lcall
in
mov
in
in
loopne
pop
das
scas
pop
mov
outsl
mov
adc
or
shrl
push
xor
fisubl
out
ret
lods
std
pop
test
or
mov
loopne
jae
mov
and
mov
int
mov
aas
add
xchg
mov
lret
aas
add
xlat
test
mov
aas
adc
adc
mov
sub
mov
or
and
mov
xchg
je
lods
xchg
movsb
xchg
jo
mov
movsl
scas
leave
mov
mov
jge
xchg
test
clc
xor
out
movsl
out
cltd
cli
test
cli
int
mov
mov
dec
sahf
pushl
cld
stos
xlat
hlt
push
dec
shlb
fcom
cmp
scas
mov
sbb
lods
in
xchg
leave
cmpsl
sbb
loope
lods
push
adc
pop
sti
jle
int3
push
pmulhw
jmp
fildl
mov
fcoml
icebp
ljmp
mov
xor
jl
bound
or
daa
cmpsl
data16
xor
mov
inc
lcall
ds
jle
daa
pop
mov
cld
fcomps
cmp
ret
hlt
push
mov
test
mov
mov
pop
add
adc
mov
xor
or
imul
mov
adc
sub
rcrb
xor
movsl
mov
fwait
pop
ret
outsb
in
cmp
xchg
xchg
repz
mov
lds
outsb
rcr
movsb
sahf
fcoml
pushf
xchg
dec
inc
fadd
sbb
pop
add
aam
pushf
inc
or
and
leave
lods
aad
lret
pop
shrb
mov
jle
mov
cli
aam
sahf
pusha
xchg
ljmp
mov
xchg
or
dec
sahf
lods
mov
mov
lock
pop
sbb
in
lods
repnz
lods
cmc
and
xchg
jns
cmpsl
inc
in
hlt
xchg
mov
xor
bound
lods
mov
sub
movsl
sbb
insl
sub
or
dec
ja
cmp
mov
and
adc
outsl
cmp
sti
inc
lods
adc
mov
sub
pop
jbe
dec
dec
scas
pop
lds
popf
cltd
jb
imulb
into
inc
add
bound
add
push
mov
jno
mov
mov
push
cmp
inc
stos
lcall
adc
and
adc
js
subb
or
jmp
sub
or
ret
pop
sbb
pop
rol
ss
xor
and
insl
pop
push
xchg
test
fists
fwait
scas
xor
test
lcall
pop
int3
int
scas
arpl
cli
repnz
dec
lds
inc
fiaddl
lods
or
sahf
sub
xchg
cmpsb
hlt
popa
jmp
into
sbb
lods
add
mov
sub
jno
mov
movsb
sub
out
pop
scas
fdivrl
cltd
std
sub
ret
clc
xor
test
mov
popa
lds
pop
into
xlat
clc
inc
cmpsl
cmp
xlat
mov
mov
or
aas
mov
pushf
xorl
gs
mov
and
enter
mov
mov
sbb
dec
int
inc
mov
subb
clts
xor
out
mov
ret
mov
jne
insb
lods
sti
fstps
lcall
pop
enter
push
pop
xchg
or
cmpsl
push
int3
xchg
lea
in
popf
sub
and
sbb
push
pop
addr16
lea
insb
insl
and
or
sarb
fcomi
sbb
xor
jmp
out
jmp
xchg
mov
enter
int
lahf
insl
scas
add
outsb
outsl
fwait
jns
add
movsl
mov
cmp
inc
fwait
test
shrl
mov
sub
sti
adc
lods
shr
ja
adc
mov
adc
adc
xor
int
lods
imul
fwait
add
outsl
mov
sub
sahf
mov
mov
fnstsw
dec
mov
movsl
jne
sub
mov
movsb
sbb
mov
divb
or
call
loopne
fcmovb
xor
sbb
scas
ret
sahf
icebp
mov
outsb
in
mov
xchg
xchg
push
cld
lret
fdivl
sbb
stos
or
movsb
cmpsl
mov
into
mov
dec
fcmovb
movsl
mov
push
push
dec
test
mov
je
push
dec
xor
cwtl
sbb
lea
mov
ljmp
dec
pushf
repz
push
cmp
sbb
in
adc
sub
lcall
lret
xor
in
mov
mov
daa
leave
test
out
sub
int
arpl
scas
outsb
test
add
dec
sbb
mov
in
sbb
mov
sti
mov
fwait
out
pop
lds
lods
add
ds
ss
daa
lods
insl
fs
clc
imul
scas
cld
fsubl
push
in
pushf
sub
xchg
adc
add
insb
cmpl
jmp
dec
xlat
cld
in
pop
shll
inc
mov
mov
scas
in
popf
jbe
cmp
cwtl
and
rclb
sbb
fldenv
sub
sub
fadds
and
js
xchg
cli
lods
arpl
jecxz
out
xchg
add
mov
add
sbb
push
fcoms
fsubrs
sbb
sbb
aam
cmp
xchg
pushf
icebp
fdivl
mov
insl
rcrb
test
call
xchg
dec
ss
lahf
daa
lret
test
fldt
or
pop
and
rol
push
je
sub
in
xor
xchg
stos
xor
dec
inc
ficoms
insb
addr16
sbb
mov
cli
movsb
test
lret
sub
xor
push
jmp
jbe
int
pop
xor
stos
mov
scas
lods
sub
in
add
call
push
dec
scas
lods
pop
fistpl
xor
lods
icebp
mov
popf
arpl
sbb
and
or
shrb
sti
inc
lods
insb
cmp
inc
in
xchg
imul
test
scas
outsb
jbe
ficoml
lcall
sbb
adc
cmc
repnz
fwait
ss
movsl
add
mov
add
iret
pop
mov
movsl
sub
mov
xchg
lahf
push
lods
xor
adc
out
inc
or
xchg
or
pop
outsl
or
fwait
sbb
clc
dec
mov
push
fsubrs
mov
jecxz
movsl
sub
add
cmp
and
js
leave
push
jbe
test
arpl
popa
adc
repnz
andl
xor
jmp
xlat
loop
add
pushf
mov
movsb
div
loopne
inc
outsb
mov
int
andl
jge
dec
mov
lea
xchg
imul
fmull
aad
icebp
adc
push
in
or
ja
mov
push
sub
es
jo
lods
push
jo
inc
les
roll
scas
lods
sbb
and
das
pop
mov
cmp
sub
add
or
outsb
xchg
cmp
notb
dec
testb
push
pop
sti
xchg
add
jle
push
pushf
testb
mov
int
xlat
shrl
js
movsl
lret
sbb
arpl
je
push
mov
xchg
mov
lock
sub
aad
clc
aad
pop
mov
sub
dec
aam
movsb
daa
lds
pop
sti
int3
dec
cld
mov
in
lock
add
xor
mov
lea
adc
ret
mov
lock
mov
cmp
cmpsb
fisubrl
inc
addr16
xchg
aaa
repnz
adc
cltd
outsl
xchg
sbb
xlat
fwait
cmp
cmp
pop
lods
xchg
jne
cmp
cmc
cmp
adc
fs
divb
fsub
dec
pop
mov
sbb
sbb
xor
xchg
js
mov
mov
outsl
add
or
fwait
mov
lcall
and
iret
mov
shll
leave
test
lods
mov
push
scas
lea
mov
xchg
fcompl
mov
push
mov
cmpsl
mov
imul
sub
mov
sbb
test
lods
add
jl
mov
xor
ljmp
dec
or
lods
test
sar
std
pop
aam
sbb
lods
mov
mov
mov
pop
popf
mov
out
lds
int3
fwait
mov
faddl
xor
popf
dec
stos
dec
enter
inc
xchg
sub
repnz
xchg
xchg
fwait
mov
int3
aad
sha256msg2
cmp
cmp
out
mov
or
imul
mov
mov
repz
push
or
add
sar
mov
mull
or
lods
add
mov
mov
xor
mov
mov
fisubl
mov
xlat
idivl
idivl
imulb
lods
hlt
das
jbe
xlat
int3
lea
cltd
popf
xlat
or
and
outsb
xchg
daa
mov
stos
push
cwtl
fmull
push
rorl
xchg
xchg
lret
mov
cmpsl
inc
pop
int3
sti
xchg
add
sbb
ror
leave
sbb
mov
push
mov
mov
xchg
shll
dec
xchg
cmpsl
sbb
jge
scas
xor
mov
and
mov
push
int
lods
sbb
xchg
xchg
call
test
push
lods
movsb
mov
pop
cmpsl
popa
mov
sub
mov
je
hlt
je
lods
sbb
mov
lret
stos
jne
and
xor
lods
mov
mov
mov
push
sbb
sub
mov
daa
inc
sub
xchg
push
pop
adc
pop
rcrb
enter
lea
jno
fisubl
xor
rclb
jne
or
push
dec
data16
lock
scas
jle
push
lea
iret
mov
pushf
aam
rcrl
or
inc
call
lods
rcr
cltd
lea
cmp
mov
cmpsl
push
je
cmc
fwait
lods
jge
fldz
adc
test
repz
mov
sbb
mov
jmp
xchg
add
mov
cmpsl
xchg
icebp
inc
das
leave
or
lods
mov
xchg
push
mov
lea
sbb
and
dec
inc
cwtl
or
pop
dec
push
xchg
dec
aaa
pop
loope
out
xchg
inc
jne
jge
xor
cmpsb
icebp
nop
scas
lds
nop
outsb
pop
arpl
xchg
mov
insb
sub
mov
ljmp
imul
leave
ret
ret
mov
daa
xor
xchg
add
leave
imul
xchg
dec
mov
or
xchg
clc
sub
pop
mov
out
lods
lcall
sbb
sub
jb
out
fisubrs
mov
pop
mov
outsb
pop
or
xor
jge
mov
lods
pop
dec
dec
fimuls
out
pop
mov
xor
sub
xchg
stc
push
mov
sbbb
sbb
or
repnz
pop
mov
fdivrl
negl
inc
out
sub
out
fwait
stos
cmpsl
push
push
xchg
mov
xchg
xchg
xor
lods
inc
mov
in
mov
in
xor
ds
mov
mov
stc
jno
stos
movsb
inc
sbb
mov
ret
in
loope
cltd
clc
int3
pop
xor
cmp
lods
scas
mov
fisubrs
mov
mov
adc
inc
loope
je
lods
dec
dec
repz
lcall
sub
mov
repnz
das
fldt
xor
in
scas
cltd
aam
insl
mov
sbb
fwait
lea
xor
sahf
dec
lahf
or
fstl
mov
mov
pop
pop
stos
scas
out
mov
pusha
out
lahf
pushf
imul
ss
pop
in
test
pop
xlat
mov
sbb
jb
mov
xor
sahf
xchg
cwtl
pushf
sbb
fwait
xor
repz
nop
lods
mov
cmpsl
cmpsb
int3
inc
popf
lods
sub
rep
mov
mov
test
mov
shr
ds
mov
pushf
cltd
outsl
inc
fwait
sub
popf
pop
pop
cltd
shll
pop
fs
pop
push
mov
rclb
xchg
mov
sbb
das
fwait
adc
repz
mov
xor
pop
jge
inc
call
mov
mov
aad
sub
xchg
notl
cmp
rcrl
jge
sub
or
enter
cmpsb
adc
mov
rep
fmull
pushf
cmpsl
mov
jge
cltd
out
adc
push
dec
add
or
idiv
and
push
add
repz
jg
sbb
sbb
sbb
mov
mov
pop
xchg
mov
cwtl
int
sbb
lea
push
shlb
xchg
add
pop
xchg
sub
int3
xchg
lcall
sbb
div
int3
fwait
movsb
fcoml
aad
jb
cmp
into
jbe
mov
mov
fs
mov
lods
cli
fadd
mov
imul
sbb
repz
pop
lods
scas
mov
xchg
popf
pop
mov
lahf
int3
loope
dec
out
outsb
pushf
fs
mov
xlat
mov
cwtl
push
push
lahf
in
adc
cltd
sub
lret
mov
push
sbb
repz
mov
pushf
in
fcmovnb
mov
cmpsb
hlt
cmp
mov
mov
popf
lods
shll
sub
xchg
fnclex
xchg
xchg
cltd
cmp
enter
sub
mov
xor
gs
nop
nop
mov
xchg
mov
int
outsb
pop
movsl
mov
pop
cld
jno
out
mov
or
inc
je
pop
int3
loope
mov
mov
push
fsubrs
mov
ret
cmpsl
test
xchg
pushf
in
cmc
jmp
adc
sbb
mov
into
out
popf
pop
mov
ja
or
cmpsl
int3
jl
es
cltd
push
repnz
push
or
sub
or
and
pop
lods
xor
movsb
sbb
ret
fdivl
push
mov
mov
repz
lods
cs
movsb
dec
pop
lea
inc
xor
jne
inc
fsubrl
cmpsl
enter
ds
mov
push
setno
mov
subb
lods
ss
popf
mov
and
push
fwait
cmpsl
push
shll
mov
mov
mov
fistl
sub
mov
movsl
xchg
imul
sub
jecxz
push
pop
mov
btr
mov
or
fsubl
out
pushf
mov
jne
popf
xchg
fwait
push
mov
xor
les
mov
out
inc
mov
ret
mov
cld
stos
lods
scas
lods
cmc
popf
xor
pop
dec
mov
push
fwait
xlat
xchg
xor
sub
mov
ljmp
repz
in
lea
fwait
add
fwait
mov
adc
iret
outsb
test
outsl
mov
add
test
lahf
inc
cmp
lods
sbb
cs
out
sub
das
inc
lahf
lea
rorb
sbb
add
mov
popf
sub
repz
sub
adc
out
sub
icebp
cs
pop
sub
mov
mov
rorl
hlt
push
and
mov
xchg
sub
adc
mov
out
sub
adc
and
insb
lods
inc
mov
mov
mov
cs
pushf
xchg
pause
push
sahf
mov
mov
addr16
repz
xor
pushf
int
xchg
out
mov
mov
out
fistl
rorb
xor
mov
into
das
cs
mov
cmpsl
sbb
mov
test
std
cld
mov
xor
mov
cmpsl
popf
lea
xlat
lcall
inc
jno
mov
mov
inc
adc
mov
adc
repz
out
fnstenv
cmpsl
mov
mov
mov
pop
int3
cmpsl
sahf
lea
cmpsl
mov
lods
xor
cmpsl
or
mov
cmp
jae
mov
mov
sbb
sbb
cs
sub
repz
testb
lods
int3
cmpsl
mov
sub
dec
sub
push
xor
mov
jae
mov
stos
xor
sbb
pop
movsb
aaa
nop
mov
mov
xchg
mov
ljmp
mul
ss
xor
fadd
lods
mov
std
lds
mov
pop
xor
test
sbb
xchg
enter
stos
lods
dec
mov
test
xchg
rcll
test
mov
lods
mov
pushf
es
mov
and
cltd
repz
sbb
lods
mov
popf
cmpsl
cs
sbb
mov
out
sub
bnd
repz
cmpsb
repz
mov
xor
lcall
mov
xchg
mov
ret
arpl
shr
and
or
xchg
xor
pop
xor
ss
mov
loop
loopne
out
jmp
pop
pop
pop
icebp
jae
xchg
icebp
sbb
ja
out
repnz
fnstenv
test
xor
outsb
bound
lea
xchg
sbb
adc
aaa
loopne
adc
pushl
mov
push
xor
je,pn
or
out
mov
xor
xchg
negb
add
cmpsl
jne
mov
shl
mov
lahf
add
mov
mov
or
jmp
scas
xor
lods
push
arpl
dec
adc
cltd
fs
xchg
rep
adc
cli
inc
pushf
pop
pop
imul
mov
mov
mov
enter
add
das
outsb
repnz
mov
xchg
pushf
out
sbb
mov
lds
adc
fcoms
je
fstps
mov
loope
push
fildll
mov
lahf
insl
jb
mov
outsb
pop
fbld
inc
outsb
test
sub
xlat
stos
movsl
sbb
sbb
jb
out
sbb
xor
xchg
nop
lods
fldcw
test
and
or
rep
pop
mov
xchg
das
jo
sbb
shrl
sahf
sub
repnz
stos
xor
mov
stos
aaa
lods
mov
repz
icebp
lea
imul
sbb
cmpsb
xor
sub
popf
sbb
push
mov
popa
pop
cmpsl
mov
in
jmp
call
xor
pop
pushf
popf
mov
sbb
outsb
call
dec
xchg
and
dec
dec
mov
mov
or
pushl
inc
mov
mov
mov
mov
lods
xor
lock
lds
test
imul
pushf
out
shl
and
lea
sbb
popf
mov
mov
fwait
mov
mov
xorl
enter
lods
inc
int
test
push
cmc
test
andb
outsb
mov
lods
jl
mov
xchg
call
outsb
jae
adc
jl
popf
dec
xchg
push
pushf
xor
inc
sub
sahf
outsb
movsb
mov
mov
jb
popf
mov
cmpsl
mov
sub
sub
loop
sbb
fldt
repz
das
cmpsb
rcrl
dec
push
div
shr
fs
mov
das
xlat
or
adc
andl
mov
jmp
xchg
lds
mov
mov
fmul
ret
sbb
outsb
pop
pop
sub
sbb
sbb
popa
ret
lods
xor
pushf
imulb
mov
lods
add
scas
mov
inc
lock
mov
cmp
lds
sbb
add
mov
jae
inc
mov
insb
sbb
mov
push
cmpsl
sub
das
mov
xchg
mov
aad
scas
fwait
pushf
icebp
push
aam
mov
adc
add
daa
lods
cmc
lea
test
xchg
les
pushf
mov
mov
sbb
mov
outsl
xor
mov
popf
popf
lods
or
cmp
mov
jb
xchg
lea
int
sbb
imul
lahf
outsb
xor
inc
int3
cmpsl
imul
sahf
pop
mov
mov
lahf
xor
imul
mov
xor
lods
scas
jb
sub
movsb
mov
movb
mov
cmpsl
xorb
int
stos
shll
jo
lret
mov
mov
adc
ss
shll
leave
aam
ret
cmpsb
sbb
repnz
lods
icebp
in
scas
scas
loopne
cmpsl
and
lods
lock
xor
movsb
xor
jo
stos
sbb
mov
repz
lods
inc
das
inc
mov
ja
xchg
lahf
adc
xor
cmc
sbb
sti
lds
in
ret
push
mov
lods
sti
xor
shrl
sub
jbe
and
xor
es
mov
push
and
xchg
lret
sub
repz
mov
mov
int
or
xchg
repz
out
je
mov
stos
push
daa
pop
fstpt
idivb
jb
sbbb
cmpsl
mov
xor
cmpsl
cltd
lea
movsb
enter
mov
pop
or
scas
sbbb
lods
ljmp
mov
nop
jne
push
je
les
outsb
pushf
sub
mov
mov
repz
movsb
lea
movsb
xchg
jne
movsb
mov
test
cltd
cwtl
sbb
xchg
sub
xor
outsb
mov
inc
hlt
out
sbb
pop
clc
popf
add
sbb
jg
lahf
push
sbb
repnz
cmp
outsb
cmpsl
push
nop
push
mov
sbb
cmp
mov
subl
lahf
push
dec
mov
mov
sbb
nop
mov
jg
fisttps
out
push
xchg
cmp
icebp
mov
es
xchg
and
out
inc
and
sub
scas
int3
cmpsl
sahf
lea
xlat
lea
mov
sub
sub
mov
nop
repz
push
lahf
or
insb
mov
mov
mov
cmpsb
lea
sbb
push
push
pop
cltd
out
cltd
lahf
enter
cltd
stos
mov
sbb
sbb
mov
cs
test
mov
and
fmuls
idiv
pop
xchg
outsb
lods
jmp
fsubrl
inc
xchg
lods
outsb
xchg
scas
daa
inc
mov
or
div
daa
fwait
lods
sub
lahf
stc
mov
mov
or
xor
outsb
sub
cmpsl
in
das
scas
cmc
stos
pushf
sub
or
lods
test
fcompl
sub
repz
mov
repz
cmpsl
lea
sbb
cmpsl
push
repnz
mov
cs
push
and
popa
out
pushf
repz
pop
lods
scas
mov
jno
cltd
lods
ss
jbe,pt
cmpsl
or
lods
sub
sub
mov
mov
add
scas
lods
faddl
and
xor
outsb
cmpsl
xor
mov
repz
mov
inc
mov
outsb
pop
and
jmp
add
pushf
jnp
xchg
mov
add
push
divl
test
loope
std
sub
mov
push
mov
push
push
xchg
sbb
test
mov
sub
push
mov
cmpsl
pop
jns
int3
aad
outsb
jge
and
out
roll
or
push
icebp
out
fdiv
or
xchg
mov
mov
ljmp
push
mov
xor
ret
fwait
xchg
add
scas
scas
lods
mov
xor
outsl
mov
outsl
mov
sub
adc
mov
push
xchg
outsb
and
mov
lods
movsl
sbb
outsb
sub
daa
cmp
jno
jo
push
jbe
out
leave
lods
loopne
cmc
sbb
mov
push
and
mov
sbb
add
mov
add
roll
push
stos
std
mov
movsl
lahf
shll
fwait
imul
lods
sub
or
mov
inc
mov
xor
sbb
dec
setg
mov
fidivs
inc
pop
scas
out
xchg
mov
lea
adc
mov
sbb
xchg
xchg
mov
and
data16
ret
mov
test
pop
stos
sbb
mov
pop
mov
or
mov
xchg
mov
and
dec
fmul
inc
outsb
adc
fbld
pop
adc
cmpsl
jne
cld
xchg
jecxz
and
sub
pushf
fnstsw
aam
mov
popf
mov
jne
mov
cmpsl
subl
idivb
popf
xchg
scas
or
outsl
add
leave
mov
out
push
pushf
mov
out
mov
sbb
or
lock
mov
xor
clc
or
sbb
test
repnz
mov
sbb
lods
mov
lods
xchg
mov
lods
pop
dec
rol
mov
pop
fwait
sub
popf
mov
sub
sbb
mov
test
mov
lds
repz
xchg
loope
inc
hlt
mov
xchg
lods
scas
add
mov
mov
cmp
repz
daa
hlt
xor
xchg
repz
xchg
lods
mov
out
lods
sbb
movsl
xor
pop
test
daa
scas
out
sbb
mov
repz
mov
int
mov
stos
inc
stos
push
rcrl
int3
aad
pop
push
mov
pop
push
mov
mov
xchg
cmc
dec
fwait
add
das
mov
out
lods
and
fwait
in
jg
ret
push
negb
inc
int3
cld
or
sub
ss
iret
xchg
xor
mov
scas
inc
cmc
shl
mov
test
in
imul
xchg
idivb
mov
mov
repz
mov
xchg
imul
mov
mov
xchg
add
push
lahf
fistl
movsl
ss
cmpsl
jge
shr
je
mov
xchg
mov
pushf
sbb
xchg
dec
shll
in
stos
sbb
fistpl
repz
mov
inc
cmpsl
std
mov
xchg
scas
inc
sbb
inc
and
imul
lods
cmpsl
pop
sbb
mov
hlt
xchg
mov
xbegin
lods
sub
mov
mov
je
int3
pop
loop
outsb
sub
das
lds
mov
fdivl
jb
lock
mull
loope
scas
mov
ret
or
xchg
cltd
pop
xlat
mov
repz
xchg
cmp
into
imul
push
pop
mov
mov
sahf
xchg
pop
xor
mov
dec
into
lods
xor
lods
sub
mov
dec
into
imul
mov
mov
mov
mov
or
lods
inc
lret
inc
mov
cmp
lods
cmpsb
dec
negl
inc
mov
jle
inc
pop
lea
mov
xchg
mov
stos
out
arpl
cwtl
repz
addb
sbb
ljmp
fcomps
fsubr
pop
mov
scas
fdivrl
xchg
stos
xor
mov
stos
adc
ss
lea
cmpsl
cmp
mov
pushf
add
outsb
imul
mov
xchg
pop
movsl
cmc
fstps
call
std
imul
shrl
repz
mov
xor
imul
negb
outsb
push
sbb
xchg
mov
lods
xchg
pop
lret
lahf
out
mov
imul
sub
fmul
jne
int3
mov
cmp
xlat
mov
push
int3
jmp
mov
enter
sub
cltd
lea
sbb
stos
divl
pop
mov
sti
int3
xchg
arpl
mov
mov
inc
xchg
shrl
sbb
sub
dec
lea
jb
cltd
maskmovq
imull
shll
inc
es
lahf
lea
sbb
adc
loope
insl
in
sti
cltd
out
ljmp
and
pop
and
push
hlt
mov
imul
push
lods
xor
pop
xor
lds
int3
data16
shrl
imul
add
stos
dec
xchg
mov
flds
stos
mov
jns
mov
ds
cmp
and
sahf
xchg
int3
lods
adc
dec
nop
sub
sub
lods
jno
sub
fsubl
stc
stos
cmpsl
xor
sub
mov
rcr
stos
mov
shrl
out
push
mov
or
sbb
insb
fwait
lret
loope
scas
xchg
mov
jns
movsb
xchg
jb
or
jle
mov
adc
fisubrl
push
mov
arpl
ret
pushf
pop
and
repz
pop
daa
jne
jnp
jbe
push
adc
pushf
lcall
inc
mov
mul
imul
sub
les
pop
cmp
enter
cmp
add
shr
sub
mov
int
lcall
test
outsb
out
mov
je
int3
jg
mov
mov
movsb
push
repz
sbb
xor
mov
sub
lahf
xchg
lcall
sub
mov
sbb
int3
outsl
mov
cmpsl
cmp
jno
xor
es
jne
sub
sti
sub
lret
stos
adc
sbb
out
mov
lods
cmp
in
lods
sub
pop
movsl
xchg
loope
fwait
pushf
jecxz
adc
and
das
mov
test
pop
mov
out
cwtl
data16
mov
dec
fwait
mov
push
add
lret
test
out
pushf
pushf
in
scas
inc
test
ret
je
mov
test
sbb
mov
lods
test
xchg
mov
shrb
pop
enter
adc
jnp
xchg
test
sub
jle
pushf
fs
push
lea
mov
movsl
repz
incl
mov
sub
mov
mov
lock
shrl
sub
xchg
xchg
call
mov
out
cmp
dec
imul
popf
mov
cmp
nop
lods
test
mov
or
xor
mov
xor
sub
inc
shll
mov
in
add
xchg
mov
test
lahf
jbe
pop
divl
push
mov
mov
call
icebp
adc
sub
cmpsl
hlt
mov
out
xchg
xchg
aam
lcall
push
out
out
test
mov
js
test
lods
or
mov
stos
adc
sub
fwait
add
pop
shlb
imul
add
sbb
pushf
jne
inc
mov
ret
ljmp
mov
mov
shll
lret
mov
movsl
out
call
lea
and
or
cmpxchg
into
imul
adc
mov
pop
and
mov
int
lcall
sbb
mov
or
xor
cmp
ss
nop
test
mov
in
sti
and
mov
mov
aas
test
xchg
xchg
out
mov
nop
xor
xchg
mov
xchg
imul
shll
lret
cltd
mov
cmpsb
data16
dec
fildll
mov
repz
push
out
cmp
xchg
add
int
sbb
sub
mov
mov
pop
pop
mov
add
lods
jg
xchg
jp
adc
out
cmpsb
push
scas
sub
push
inc
xchg
out
lods
rcr
inc
out
inc
jb
int3
inc
lods
xor
repz
sahf
ret
mov
shr
popa
subb
not
cld
or
mov
in
int3
jne
jno
bound
mov
xor
aam
stos
ficoml
sub
lods
out
sub
push
sub
scas
sub
sub
ss
ja
dec
popf
pusha
shl
inc
enter
jmp
lods
push
aam
inc
adc
out
xchg
orb
bound
mov
cli
bound
or
inc
ljmp
cmp
getsec
movsl
cs
jno
rcr
shrb
addb
mov
push
inc
mov
jmp
call
rep
call
xlat
frstor
ss
sub
or
bound
push
mov
pop
int3
aad
adc
loopne
fcoml
shl
pop
icebp
sahf
lcall
cmp
inc
setb
jmp
push
inc
xchg
fs
sub
xorb
mov
pop
aas
cmp
out
aaa
inc
push
imul
mov
add
int3
ret
xchg
xchg
mov
dec
mov
rol
dec
mov
mov
push
into
push
sbb
fimull
xchg
sbb
cmpsl
in
push
fcoml
adc
xchg
or
aam
in
add
div
andb
adc
lea
adc
out
jmp
xchg
mov
lea
mov
xor
sbb
pop
in
popf
jne
cmc
pushf
xor
stc
shr
push
push
pushf
lea
je
call
or
movsb
not
jae
inc
mov
sbb
nop
call
leave
sarl
cmpsb
adc
pusha
inc
adc
jns
xor
mov
jb
and
fldt
xor
sahf
jecxz
imul
fmuls
adc
cld
mov
pop
push
xchg
or
add
push
shrb
mov
push
ja
repnz
popf
push
lods
test
nop
loope
test
test
icebp
leave
shrb
mov
bound
les
rep
pushl
bswap
movzbl
mov
pushl
lea
jmp
cltd
scas
lret
fwait
not
movsl
lds
sbb
inc
aad
add
mov
int3
test
inc
xchg
dec
divl
mov
jg
fs
cmpsb
xchg
and
mov
and
mov
cmp
repnz
lret
mov
mov
pusha
mov
loopne
test
outsb
xchg
adc
pop
or
pop
pop
add
jmp
add
not
xor
daa
xchg
lods
aad
loop
ret
or
mov
or
sbb
adc
jbe
jmp
add
mov
mov
add
push
sbb
ficompl
mov
lods
lea
insb
lock
aad
xor
scas
rolb
shl
push
cltd
xchg
push
push
dec
pop
aam
jge
fisubs
add
jae
add
sarl
outsb
jbe
sub
sbb
sbb
lock
xchg
add
aas
int3
shlb
jg
aaa
movsl
sbb
or
jp
dec
les
mov
loop
out
add
mov
mov
mov
cmpsl
inc
das
fldl2t
leave
lret
push
adc
dec
jp
fidivl
xor
cmpsl
fcmovu
add
or
mov
fimuls
movsb
stos
test
cmp
call
cmp
cltd
not
sarl
mov
cltd
rcl
pop
into
mov
or
push
sbb
loop
mov
mov
test
xor
stos
test
push
jo
movsl
mov
mov
lea
push
jle
lock
pop
imul
adc
movsb
push
dec
xorl
mov
outsl
fwait
dec
cmp
fdivs
ret
loop
pop
ficompl
pop
jb
push
mov
dec
inc
push
stos
xchg
cltd
not
xchg
and
pop
jecxz
test
jbe
push
sub
dec
push
arpl
pop
and
ss
fidivs
dec
pop
roll
lret
in
lahf
cmp
add
aaa
inc
xor
xchg
cs
jmp
dec
add
push
scas
mov
dec
xor
cs
rcrb
in
cli
jno
mov
mov
filds
cs
roll
push
adc
pop
stc
enter
in
out
insl
loop
and
fbld
clc
es
push
push
mov
gs
mov
lea
jae
mov
pusha
xchg
pushf
mov
pushf
dec
dec
inc
jmp
dec
fcoms
rcrl
push
or
pop
inc
ljmp
cmpsl
mov
call
dec
xchg
das
adc
mov
ja
addr16
in
lahf
fucomi
jge
sub
clc
inc
or
and
jge
iret
fs
or
int
push
ret
dec
lret
mov
jbe
fcmovu
sbb
or
xchg
enter
call
and
ljmp
pusha
mov
sbb
hlt
fdivl
ret
mov
leave
lahf
rclb
xor
cwtl
not
mov
lock
mov
xcrypt-cbc
cmpsl
push
std
out
daa
std
sbb
mov
fs
adc
inc
add
sahf
call
cmp
filds
pop
rclb
sub
nop
dec
mov
cmp
cmp
mov
mov
cmp
movsb
popa
clc
insb
outsb
jae
xchg
pop
sbb
dec
fstl
sbb
jg
cmp
xchg
jo
cmp
loope
pop
aas
pop
cli
neg
dec
ret
cmp
mov
and
pushf
mov
aaa
lods
add
fistpl
shll
clc
cmp
pop
icebp
xor
sbb
cmp
xor
fs
stc
mov
cmp
pusha
pushf
push
lea
jae
test
movsbw
adc
cmp
mov
cmc
movzbl
test
mov
neg
adc
mov
jmp
add
not
and
stos
and
add
mov
xchg
sub
xchg
add
xor
cmp
mov
inc
jo
mov
pop
jno
cmp
loopne
pop
subl
cmp
sti
call
jnp
inc
or
xor
mov
divl
push
cmp
bound
sbb
ret
outsl
mov
dec
dec
in
jnp
ja
add
daa
pop
xchg
jae
mov
lret
push
mov
mov
dec
mov
sahf
not
movsb
sbb
decl
cld
in
andl
cmp
aad
xchg
lcall
and
repz
inc
pop
rcrb
xchg
ds
sbb
movsb
popf
lret
ds
jge
mov
jl
adc
mov
cmp
cmp
mov
nop
and
jle
loopne
out
iretw
mov
xchg
lods
rcrb
mov
inc
out
fisubrs
and
mov
push
pop
sub
pop
insb
lret
and
roll
cltd
push
test
mov
adc
add
dec
call
dec
stos
cld
sub
mov
mov
sub
pop
into
movsb
mov
popf
add
xor
lds
sub
dec
mov
loopne
jae
fsts
sahf
sub
stos
in
xor
lds
ljmp
pop
sub
inc
decb
divl
dec
mov
pushf
mov
scas
mov
push
dec
push
lods
mov
inc
in
mov
inc
fdivrs
mov
push
dec
sub
add
pop
movsl
insb
mov
fsub
xor
mov
loopne
stos
out
movsl
push
mov
cmpsb
fs
push
hlt
andb
add
and
test
jae
and
lcall
iret
or
lds
ret
and
add
inc
cmpl
fneni(8087
pop
push
mov
and
cmpsl
inc
int3
lea
pop
add
sbb
or
fidivs
repnz
popf
daa
push
fistl
and
ds
daa
dec
loop
lods
xor
ja
lea
mov
cld
repz
mov
lds
leave
movsb
cmp
out
xchg
mov
lea
mov
js
sub
ds
les
jge
inc
inc
mov
push
lcall
mov
cltd
sahf
mov
mov
into
iret
jmp
cwtl
scas
push
add
jmp
call
xlat
pop
push
repz
test
fsubs
mov
xchg
mov
sub
aaa
push
test
jmp
cld
mov
mov
sti
testl
add
xor
or
into
lea
add
fwait
mov
stos
dec
scas
int3
loopne
push
mov
sbb
sarl
shrl
add
sbb
das
pop
xlat
fs
fists
fnsave
mov
cmp
movsl
das
add
into
nop
mov
xor
scas
outsl
dec
ja
dec
pop
lds
add
cmp
int
mov
mov
and
lods
mov
sub
adc
pop
aaa
mov
sub
or
je
je
jmp
out
mov
pop
jns
sahf
mov
mov
mov
jle
mov
mov
fdiv
and
mov
xor
int3
xor
jecxz
adc
out
or
add
sti
add
dec
rol
cmp
add
sbb
inc
test
xor
add
outsb
add
int
daa
add
mov
lods
lret
mov
mov
loope
and
daa
dec
cmp
outsl
push
sbb
inc
aaa
dec
add
cmp
movsl
jbe
int
xor
dec
jns
jbe
int3
inc
clc
ss
cmc
int3
iret
sub
jmp
sub
ret
pop
add
inc
mov
cmpsl
xchg
js
adc
lea
xchg
xchg
sahf
aaa
jo
test
mov
cmp
lret
enter
vmovdqu
xchg
xchg
sbb
test
mov
mov
dec
fiaddl
xchg
add
xor
xor
sub
push
inc
inc
cmp
sub
mov
mov
mov
scas
loopne
adc
mov
or
rorl
js
jmp
ret
inc
jge
jmp
popf
lods
push
mov
in
mov
ds
push
das
loop
fisttpll
push
repnz
sub
fwait
int3
sub
mov
subl
lds
sub
adc
cli
pop
movsl
adc
mov
inc
jae
or
call
inc
add
mov
jo
mov
les
sub
jmp
inc
mov
movsl
lock
cmp
sar
cmpsl
mov
jno
sub
cmpsb
add
adcb
mov
popf
shll
aaa
mov
inc
jmp
lret
inc
aam
les
call
xchg
xchg
inc
cmpsl
sub
call
out
add
movsl
jne
mov
ret
insb
shll
stos
mov
sub
dec
mov
ds
sbb
in
xchg
add
lea
add
cltd
hlt
dec
int
repz
out
addb
mov
out
mov
test
inc
fcomi
inc
lret
xorb
faddp
mov
in
std
test
mov
add
stos
inc
adc
cmp
fcomps
mov
sbbb
ds
int
pushf
mov
psubq
sbb
cmp
popf
outsl
cmp
js
sbb
add
outsl
cli
insl
mov
out
push
jl
clc
arpl
or
pop
in
pop
cmc
mov
dec
mov
ss
add
out
xchg
inc
xlat
or
cmpsl
add
mov
repnz
ret
mov
ja
xchg
scas
imul
mov
mov
fiaddl
xor
cmpsb
pushf
mov
xchg
les
test
pushf
es
adc
xor
inc
pop
mov
clc
mov
lods
mov
add
adc
mov
subb
jge
fcoms
clc
out
popf
add
mov
pop
pop
xchg
mov
mov
out
mov
stos
test
lea
and
test
out
out
fadd
xchg
add
ficoms
shll
cmp
lods
daa
fmul
push
lods
inc
inc
mov
or
mov
jnp
push
aad
jmp
sbb
cli
fs
lods
idivl
sub
outsw
push
mov
movsl
ja
push
lods
sbb
stc
cmp
std
pop
cmpsl
push
sub
or
push
xor
cmpsb
fistps
mov
leave
daa
in
inc
out
adc
inc
aas
mov
sub
mov
jmp
test
inc
sti
js
and
sahf
pop
sub
add
mov
repz
cmp
add
jne
cmp
mov
dec
ror
hlt
fst
xor
pushf
add
inc
mov
inc
jmp
mov
rcrb
jns
lea
push
in
ficoms
lea
mov
sub
shrb
clc
add
pop
xchg
fnstsw
scas
xchg
pusha
lods
divl
fs
insb
mov
test
scas
aaa
push
stos
cmpsb
iret
pop
test
iret
sub
add
lret
add
jbe
lret
jmp
add
mov
fmull
push
inc
icebp
mov
aaa
sbb
cmp
clc
lds
push
mov
mov
fxch
ret
test
lret
sub
daa
mov
mov
cmp
mov
lret
jmp
aas
pop
add
popf
sti
add
pop
push
mov
lret
stos
outsl
mov
inc
mov
mov
push
or
out
into
dec
sbb
pushf
stos
lret
add
dec
mov
pushf
add
mov
fwait
int3
mov
xchg
lock
adc
movb
mov
iret
in
sbb
lods
repz
mov
aad
mov
cmp
out
in
add
mov
jbe
pop
in
repz
add
adcl
add
mov
cmpl
mov
test
lahf
lods
sub
fwait
shlb
push
or
add
sub
and
and
jecxz
jge
dec
in
movsl
in
cmp
xor
lds
mov
fnstcw
fdivrs
loope
daa
lock
inc
int
inc
inc
mov
mov
dec
js
add
int3
inc
mov
js
movsl
outsb
arpl
mov
scas
mov
fwait
daa
outsl
or
pop
loop
or
sub
push
in
jb
cmp
movsb
or
sub
lds
mov
mov
repnz
movsl
andb
pop
mov
clc
mov
stos
mov
ds
pop
out
mov
cmp
push
gs
hlt
cmp
sub
add
inc
subl
inc
sub
add
aaa
js
cmp
out
inc
push
iret
mov
dec
gs
push
or
mov
or
mov
push
enter
dec
add
mov
outsb
movsl
mov
add
pop
shlb
out
inc
dec
jns
mov
sbb
and
cmp
sbb
xlat
sti
dec
sub
in
dec
mov
movsl
inc
sub
sub
mov
mov
fadds
pop
sbb
rclb
aaa
icebp
cltd
dec
jmp
inc
test
imul
xor
jecxz
mov
mov
lods
cld
add
lock
sub
pop
scas
mov
dec
adc
aam
pop
les
cld
in
fcomp
shll
movsb
sub
cmp
js
aam
lahf
mov
sub
rolb
push
fstp
mov
push
sub
outsb
sbb
add
stc
incb
mov
in
popf
rol
mov
xor
cmpsl
outsl
dec
nop
jmp
inc
mov
in
test
das
fnstsw
daa
test
insl
push
iret
gs
ret
movsl
sbb
push
push
std
push
mov
es
ficoms
or
dec
mov
sub
xor
je
lret
dec
xor
push
lods
lds
mov
xor
and
scas
add
bound
sub
lret
mov
popf
cmpsl
out
in
fwait
push
sub
fwait
inc
clc
fwait
fs
dec
movsb
fwait
enter
lea
movsl
lods
mov
loope
sub
jmp
pusha
insb
dec
test
and
out
pusha
or
jne
lods
sbb
inc
test
sub
or
add
add
mov
fisttpll
jg
mov
mov
mov
mov
cmc
jbe
mov
xchg
rep
mov
cwtl
int
pop
pop
jecxz
fisttpl
lahf
movsl
fwait
lahf
cmp
dec
mov
lods
mov
sub
negl
dec
stos
dec
xchg
daa
mov
xchg
scas
ficomps
mov
mov
stos
xchg
rorl
mov
or
fstpt
test
lods
mov
xchg
les
lods
daa
lods
or
jbe
mov
mov
mov
fnsave
test
rcrl
faddp
test
cmpsl
sbb
and
ret
popf
mov
fadd
movsb
mov
xor
test
test
cmpsb
fstpt
and
in
mov
leave
mov
icebp
les
xchg
sbb
mov
jbe
mov
xchg
lods
sahf
mov
rorl
sub
mov
xchg
mov
rcrl
movsb
scas
cmpsl
movsl
dec
xchg
das
mov
sbb
mov
mov
mov
mov
mov
mov
movsb
fwait
cmpsl
xchg
lods
enter
pop
mov
cmpsl
sahf
mov
fistpll
adc
sub
dec
inc
inc
pop
mov
add
mov
xor
mov
push
aad
inc
lret
add
mov
loopne
dec
and
js
mov
je
lret
xchg
sub
jo
aad
jns
or
pop
lcall
stos
and
add
stos
xor
pop
daa
in
cmp
lahf
hlt
mov
lods
and
add
mov
dec
mov
sub
xlat
cwtl
or
xlat
ficoml
sub
xchg
push
pop
dec
insl
inc
cwtl
clc
pop
fs
add
stos
push
xor
jmp
rorl
cmp
inc
into
out
dec
adc
mov
lret
lods
outsl
or
mov
adc
add
outsl
push
jge
jg
jbe
mov
mov
xor
bound
jmp
dec
test
lods
cs
pop
fildl
int3
xchg
mov
mov
push
in
mov
movsl
xor
xchg
mov
cmp
out
inc
dec
sub
scas
add
outsb
sti
inc
mov
add
xchg
xchg
daa
lock
add
adc
imull
adc
popa
adc
testb
cmp
dec
push
out
add
pop
sub
adc
cltd
popa
jge
sub
movsl
das
cwtl
mov
insl
push
mov
sub
mov
inc
add
xor
dec
mov
repz
scas
mov
mov
jmp
xchg
movsl
jo
mov
daa
inc
into
fildl
in
cmp
cmp
adc
dec
cwtl
lods
mov
lods
in
dec
mov
or
mov
xor
mov
sub
lret
lods
dec
movsb
cmpsb
push
daa
lds
push
pop
jns
cld
decb
add
mov
cmp
xor
mov
cltd
add
enter
outsb
jp
into
add
loop
dec
mov
jle
scas
pop
mov
jg
add
mov
inc
mov
fiaddl
insl
inc
mov
and
xchg
ret
bnd
call
ret
lds
cwtl
rorl
cmpsb
sti
sti
movsl
dec
and
fucomip
lods
add
add
adc
fisubs
vshufps
aas
std
add
push
in
out
sub
cmp
push
mov
sti
adc
inc
dec
and
xor
push
inc
sub
push
roll
roll
xchg
mov
sub
inc
dec
jge
aas
in
sahf
lock
xlat
cmpsl
popf
test
scas
dec
aad
push
jg
shl
adc
test
call
out
mov
ss
push
aaa
iret
jne
pop
mov
inc
fcompl
andl
and
xchg
inc
in
js
into
outsl
lods
dec
nop
cmp
pushf
inc
xchg
sarb
inc
cld
shr
loop
sbb
mov
clc
in
jle
add
inc
pop
andl
xchg
xor
mov
push
shlb
inc
and
mov
inc
shlb
outsl
sahf
addr16
ja
insb
adc
aam
jl
sti
adc
add
xchg
js
xchg
or
adc
cld
lods
jmp
icebp
test
pushf
imul
movb
divl
add
out
shrl
scas
mov
test
mov
add
mov
lret
clc
sub
sub
jl
mov
dec
xchg
and
repnz
js
add
loope
xor
adc
sahf
test
es
fs
mov
shrb
movsl
data16
pushf
push
adc
test
fstpl
mov
dec
out
mov
shl
mov
sti
stos
divl
or
test
fisttpll
lds
lret
movl
dec
in
jle
cli
xchg
mov
mov
mov
jo
pop
sub
sbb
sbb
add
ja
adc
rcll
inc
jmp
xchg
xchg
in
cmpsl
pop
lret
cwtl
test
sarb
sarb
gs
out
cltd
and
test
inc
cwtl
lea
daa
add
sub
mov
inc
stos
mov
cmpsb
popf
scas
mov
pop
xchg
lods
push
sti
aaa
je
or
in
clc
cmp
xchg
mov
push
cmp
out
mov
fdivp
in
mov
add
jl
out
addl
dec
or
in
add
leave
xor
add
jno
das
sti
xor
cmp
ljmp
ja
push
hlt
push
mov
neg
push
ss
leave
mov
mov
add
dec
movsl
loope,pn
test
cmp
push
adc
lds
movsl
inc
negl
int3
fs
sub
push
lds
repnz
fs
sahf
out
cmpb
add
bswap
test
add
mov
stos
into
push
dec
xchg
xchg
cwtl
xchg
in
loopne
mov
lret
aam
movsl
mulb
movsl
jle
in
cltd
dec
test
pop
sub
subb
add
inc
xor
in
cmp
mov
xor
mov
mov
mov
test
daa
lds
lret
push
push
stos
jge
adc
int
jg
or
cmp
aas
iret
xchg
sub
sub
sbb
or
add
inc
test
btc
xlat
xchg
lock
ret
dec
flds
cmp
in
std
fcmovne
mov
xorl
int3
fmul
pop
outsb
fwait
mov
mov
cmc
divl
sti
jge
into
fmull
das
arpl
mov
pop
fcmove
push
in
cs
insl
int
sbb
inc
lds
dec
jmp
int3
aaa
scas
mov
mov
cli
leave
adc
jp
out
push
popf
xlat
enter
sbb
xchg
testb
add
cmp
testb
daa
add
aas
lahf
add
jp
sbb
push
mov
xchg
push
or
jl
xor
ret
leave
sbb
aam
out
repnz
out
or
mov
insl
inc
and
clc
mov
iret
mov
xchg
pop
in
jno
pop
scas
adc
mov
jmp
outsb
xorb
mov
jp
mov
lods
mov
adc
dec
fisubrs
out
sub
test
pop
xchg
jns
sbb
pop
clc
std
sarl
jmp
jg
mov
mov
cmp
insl
ds
inc
jl
mov
jnp
mov
sbb
and
pop
mov
mov
xchg
add
les
fiadds
push
adc
inc
mov
sub
add
das
pop
cmp
add
lods
in
addr16
push
jp
and
lret
cli
sbb
xor
add
push
out
push
aaa
add
mov
scas
cwtl
lea
jp
push
roll
rcrb
and
fwait
adc
std
jb
xchg
mov
xchg
or
xor
lods
pop
mov
pusha
sbb
adc
ret
push
push
rcrl
popa
mov
add
out
mov
and
push
iret
xorb
sub
xchg
repnz
mov
in
add
in
push
inc
cmp
lods
mov
add
in
lds
pop
js
lcall
push
lret
cld
testb
sub
jg
inc
adc
lods
in
mov
add
mov
jmp
jmp
scas
xchg
mov
daa
mov
jne
test
into
mov
pop
gs
push
dec
or
outsl
daa
shrb
divb
divl
lds
dec
vprotb
adc
jmp
inc
sub
loopne
or
mov
mov
mov
sub
das
bound
cwtl
outsb
and
data16
lods
mov
scas
lret
push
loope
xor
fstpl
in
push
cmp
xchg
xchg
mov
push
xlat
mov
in
lods
xchg
fcompl
sbb
mov
mov
nop
sti
add
push
movsb
movsl
xchg
jge
rcrl
inc
int
pop
dec
mov
add
fsin
inc
out
add
jle
mov
mov
popa
xchg
jno
cmp
pushf
mov
movsb
sub
outsl
ja
fmull
mov
shl
movsl
mov
lods
dec
or
out
add
shl
inc
jle
inc
and
int3
push
lods
jne
dec
mov
xchg
xor
sar
outsb
or
movsl
sbb
addb
addr16
lret
scas
mov
cwtl
mov
outsb
pop
and
mov
arpl
mov
or
mov
jae
repnz
repz
sti
clc
stos
mov
dec
cmp
and
movsl
jb
xor
sub
push
cld
adc
xchg
cli
out
rcll
movsb
pushf
or
jle
rol
rolb
shrb
adc
mov
stos
repz
mov
lds
xchg
jne
out
add
push
mov
add
lods
movsl
or
cmp
jbe
xchg
jge
out
das
adc
mov
cmp
pop
lretw
data16
js
fiadds
cmp
fsubrp
mov
sub
push
or
idivb
mov
pushf
les
sub
inc
sahf
icebp
arpl
pusha
out
push
and
push
mov
lret
movsl
ja
lods
mulb
dec
push
cmp
fnstenv
inc
cmc
sbb
outsl
cmp
xor
mov
mov
jo
lret
insl
and
jg
int
mov
into
mov
insb
movsl
ret
cmc
adc
orb
push
int
lods
cwtl
out
push
dec
add
add
aaa
pop
adc
dec
pop
popf
and
sub
add
pop
xor
xchg
testl
xchg
and
pushf
adc
push
xchg
add
xchg
cmp
sub
les
iret
dec
mov
cmpsl
pop
or
xchg
imul
cwtl
pop
inc
mov
cmp
jns
imul
mov
cmc
cli
xchg
lret
lret
clc
scas
sub
in
pop
xor
inc
mov
fsubp
add
mov
ret
mov
lea
jae
jecxz
pop
cmc
clc
sahf
sahf
int
fstpl
repz
cmpb
dec
pop
mov
imul
pop
ret
shll
jge
inc
pop
les
sarb
scas
jae
dec
test
ds
jl
mov
inc
scas
or
lods
xchg
lahf
aad
lret
out
scas
pushf
sbb
mov
gs
dec
cld
xchg
or
dec
movsb
sub
hlt
icebp
ret
into
xor
mov
sbb
cmp
sarb
mov
cltd
lods
loopne
popa
mov
sbb
inc
mov
mov
lret
jo
fwait
sbb
mov
insl
sbb
lret
pop
imul
cmp
adc
sub
cmpsb
and
push
and
ja
rolb
jne
inc
jne
xchg
sub
inc
lods
movsl
mov
or
xchg
cmpb
sahf
lods
int3
stc
jo
out
inc
adc
mov
dec
test
testb
adc
shll
mov
rorl
jae
mov
aam
mov
sbb
fsub
xor
inc
pop
xchg
xchg
mov
outsb
and
and
vmovdqa
aaa
rclb
in
dec
adc
add
in
push
lds
adc
das
pop
std
popf
test
sub
xchg
sbb
aas
pop
mov
loop
stos
std
rcll
test
or
dec
add
inc
mov
mov
sub
hlt
push
lret
sbb
lds
and
xchg
dec
sbb
ffree
xchg
push
aam
pop
dec
js
test
fisubrl
icebp
call
push
push
dec
mov
jno
addr16
add
divl
push
sub
lds
adc
sub
mov
or
sbb
mov
lods
sbb
dec
jne
push
jmp
cmpsl
negb
pop
movsb
stos
cmpsl
int
sub
sbb
xor
daa
mov
das
adc
inc
shll
pop
dec
aas
or
cwtl
je
add
add
outsb
mov
jle
js
push
or
jle
add
dec
mov
lret
aas
jmp
xor
pop
aaa
stc
mov
cwtl
divb
xchg
daa
add
clc
ljmp
loopne
or
jmp
in
int
pop
inc
add
inc
movsb
lods
dec
inc
bound
push
jae,pn
insb
inc
fwait
mov
sub
cmpsl
sar
add
out
lret
or
add
mov
jl
inc
mov
in
fwait
nop
int
ja
mov
xchg
shl
xor
jb
mov
fildl
scas
mov
inc
rorb
or
movsl
xchg
add
add
xchg
mov
xchg
imul
dec
ljmp
cli
pop
out
cwtl
add
test
roll
or
leave
popf
fwait
pusha
lret
movsl
js
inc
cli
pop
xor
cmc
aaa
add
adc
sub
mov
inc
into
shrb
dec
dec
dec
mov
pop
aam
lods
xchg
rcll
mov
xor
faddl
paddusb
xchg
mull
mov
in
mov
out
adc
cmp
xor
pcmpgtw
jmp
loop
dec
ffree
jnp
xor
rclb
cltd
testl
inc
les
add
loopne
nop
jnp
adc
and
push
notl
jbe
dec
pop
push
lods
cmpsl
cmc
ljmp
cmpsb
mov
imul
dec
xor
cmp
into
enter
test
scas
aaa
movsb
dec
mov
scas
sti
inc
stos
jno
iret
shrl
or
repz
clc
dec
jo
mov
shlb
ficompl
xor
pop
leave
xlat
push
sbb
arpl
insl
aas
sti
fnstcw
movsb
test
daa
mov
adcb
pop
pop
sbb
adc
fisubrl
adc
bound
in
fstpl
adc
adc
ret
fwait
sub
outsl
dec
addb
mov
divb
cmp
in
inc
mov
sub
sarb
dec
mov
in
mov
mov
fnsave
lret
inc
and
xchg
push
mov
movsl
mov
xchg
mov
xchg
clc
lret
jb
imul
pop
jp
jb
clc
mov
ss
push
mov
pop
out
sbb
mov
fdivrl
pop
inc
dec
lds
repz
movsl
or
inc
je
inc
test
inc
jmp
test
dec
or
cwtl
cmp
xchg
inc
std
cld
mov
add
popf
test
xor
aaa
aaa
outsb
cmp
cwtl
enter
inc
imul
in
mov
rcrl
cmpsb
dec
std
ljmp
mov
movsl
rcrb
xchg
fdivr
mov
inc
xchg
fsubl
js
imulb
cmp
mov
cmp
mov
sbb
push
xor
ljmp
sub
pop
sub
cs
movsl
sbb
cld
lock
roll
out
shll
mov
or
pop
xchg
sub
leave
add
xor
std
or
les
add
xlat
push
sbb
and
pop
rorl
xor
push
or
int
mov
out
jmp
mov
or
mov
inc
and
pop
dec
and
fwait
rcrb
or
lret
fwait
test
mov
push
xlat
push
das
jno
rcr
cli
scas
add
add
aaa
mov
push
mov
div
cs
in
inc
int
rcrb
ret
insl
add
sbb
mov
lods
mov
in
test
cmpsb
xor
mov
jo
dec
subb
lods
jmp
or
in
in
shll
icebp
es
adc
dec
andb
in
or
negl
bound
cltd
push
sub
rcrl
sahf
test
test
lods
int
outsl
pop
inc
adc
xchg
mov
jne
or
add
xor
imul
int3
enter
or
loopne
cmp
in
push
mov
cmc
sbb
in
pusha
and
sbb
fwait
aam
rclb
dec
jne
jle
insl
out
mov
inc
jp
mov
lahf
sbb
add
mov
lcall
mov
daa
adc
mov
push
and
mov
push
jmp
shll
mov
imul
dec
inc
jge
ret
jle
jnp
cmp
into
and
dec
inc
push
addr16
enter
sbb
arpl
daa
jg
adc
in
call
mov
outsb
fsubrl
inc
jmp
clc
jae
sarb
std
test
nop
push
mov
inc
call
xor
mov
daa
mov
cmpsl
sbb
inc
dec
cmpsl
dec
push
dec
cmp
or
das
cltd
mov
jp
scas
pop
das
outsl
adc
ss
mov
push
rcrl
or
or
push
stos
fdivs
loope
add
aas
fldenv
pop
aas
or
jg
andl
mov
movsb
hlt
sub
in
jno
and
lret
cmp
sbb
and
in
in
cmpsb
push
outsb
push
push
subb
xchg
pop
lea
mov
nop
sbb
push
sub
xor
test
mov
in
ljmp
push
cmpsl
jns
push
jmp
cmp
aaa
outsl
pusha
xchg
and
jmp
into
adc
in
mov
pop
or
xor
cmpsl
cwtl
sbb
lods
lahf
lods
pop
xchg
add
mov
xchg
add
test
pop
int
popf
mov
jmp
ljmp
sub
js
scas
dec
lods
fdiv
ljmp
shll
mov
push
mov
mov
repz
in
in
imul
or
mov
cmp
popa
pop
jbe
jmp
outsl
dec
mov
pop
add
fdivrs
push
dec
xchg
adc
add
sub
cmp
mov
fstpl
jge
test
cmp
mov
dec
pop
xlat
mov
test
aad
aam
into
iret
jge
mov
mov
cmp
mov
pop
adc
lds
scas
or
jns
repnz
rolb
int
lret
in
sbb
mov
fildl
sbb
sub
mov
and
add
dec
into
jno
mov
js
aam
jo
ljmp
les
mov
repnz
roll
movsl
jns
mov
in
adc
mov
jle
adc
sahf
pushl
push
pop
or
in
stos
add
std
lods
aaa
stc
lds
ret
mov
movsl
pop
or
andb
aaa
in
inc
and
push
notl
daa
pop
in
mov
jo
cmpsl
les
movsb
roll
xchg
inc
sub
mov
int
jmp
jmp
hlt
add
inc
xlat
jmp
jne
insb
mov
cld
mov
pop
dec
mov
sbb
sub
xor
or
aas
aas
add
into
pop
fs
cmpsl
sbb
mov
clc
add
cmp
roll
movsl
push
lds
fidivrs
push
inc
cmp
xchg
or
dec
lret
out
out
mov
loope
inc
sub
js
lcall
out
xor
jmp
sahf
mov
add
pop
fcoms
popf
pushf
mov
cmpsl
or
outsl
mov
in
mov
movsl
cld
ja
pop
sub
sahf
add
int
and
cwtl
iret
ja
stc
sarl
jg
std
mov
icebp
sbb
fldl
mov
test
stos
mov
jle
rep
xchg
or
dec
lods
lds
pop
or
mov
jbe
nop
outsb
btsl
outsb
dec
ret
push
sahf
sub
xor
and
in
adc
sub
std
shll
mov
pop
out
pushf
hlt
vcvtsd2ss
ja
jo
imul
xchg
xchg
scas
aam
and
adc
sbb
jmp
cmp
lods
adc
jg
push
movsl
push
mov
mov
pusha
aam
jns
frstor
pop
std
not
lds
and
or
mov
lret
std
in
adc
sbb
nop
pop
int
lds
in
jmp
cld
xor
aas
add
lahf
mov
leave
mov
inc
sub
or
imul
mov
cmp
mov
adc
sbb
ret
pop
ror
cmp
inc
jl
mov
add
int3
sbbb
push
out
pop
sti
mov
into
adc
jecxz
xor
xor
insb
mov
stos
mov
aaa
lods
hlt
mov
leave
lret
xor
sbb
shlb
out
shrl
aam
mov
jae
in
inc
insl
shlb
aad
in
pusha
cmp
or
stc
adc
cmp
sub
lea
sarb
fwait
xlat
adc
popf
and
movsb
xchg
cmc
cmp
stos
outsl
xchg
cld
hlt
lds
sub
pushf
cwtl
add
and
repnz
scas
and
mov
inc
jne
jnp
cld
jo
mov
lret
movsl
mov
fnstsw
stos
int
and
xchg
xchg
rclb
stos
xor
push
cltd
xor
mov
adc
or
pushf
inc
imul
rclb
outsl
sub
mulb
mov
mov
push
gs
into
mov
mov
dec
fisubl
rcl
inc
xchg
push
inc
jbe
xchg
sbb
mov
sub
mov
mov
rcr
add
lea
mov
inc
dec
or
aas
xchg
sub
aam
mov
pushf
lock
fs
movsb
push
add
jo
lods
jp
sub
scas
aaa
movsl
fcompl
add
inc
xchg
es
ror
mov
lock
mov
mov
xor
mov
movsl
test
mov
or
cmp
in
decb
mov
sub
cld
jnp
movsb
or
push
xchg
push
mov
fcompl
add
sub
cmovp
dec
rolb
xor
xchg
enter
mov
pop
and
push
sub
mov
mov
shl
lret
shlb
adc
fsubrp
dec
fdivl
jle
cmc
jl
sbb
sbb
lds
addr16
sub
inc
cltd
lahf
outsl
mov
xchg
dec
call
int
mov
repz
dec
mov
dec
dec
js
out
insb
jl
inc
pslld
or
mov
rcl
jl
push
pushl
lods
pop
stos
test
popf
repnz
hlt
lret
mov
xchg
and
xchg
and
mov
cmp
mov
pop
aaa
xor
mov
mov
inc
fwait
iret
loopne
mov
or
pop
into
lds
mov
cli
shlb
mov
aaa
pop
pop
insb
stc
xchg
subl
int
ljmp
mov
insb
mov
add
lock
pop
jl
out
mov
in
sbb
movsl
addr16
cmpsl
fists
enter
cmp
nop
pop
inc
pusha
jns
adc
mov
daa
sub
xchg
inc
int3
cmp
cli
fwait
inc
jnp
cmpsb
sbb
sti
rolb
add
adc
sbb
inc
lcall
and
mov
push
cmpsl
movsl
push
mov
or
mov
rcrb
imul
xchg
andb
aas
outsb
test
push
mov
mov
and
mov
into
pop
mov
dec
lods
xor
mov
or
add
mov
cmp
add
into
outsb
loope
cmpsb
mov
xlat
or
sub
mov
rcr
das
mov
int3
inc
jmp
add
inc
dec
roll
leave
and
and
dec
ljmp
pop
push
call
mov
std
pushf
aaa
lods
call
inc
std
stos
jmp
movsl
sub
lods
jecxz
jmp
sti
int3
sbb
gs
pushf
mov
fs
ds
cmp
and
js
into
cmp
scas
adc
xor
and
into
adc
mov
fadd
cltd
test
subb
mov
adc
ret
cmpsb
push
pop
mov
outsl
scas
aas
push
push
into
stos
stos
out
cli
rol
icebp
in
in
cmpsl
lds
imul
dec
sbb
xor
outsb
sub
mov
lods
aaa
in
movl
les
in
mov
adc
insb
push
das
or
cld
repnz
sbb
sub
daa
jg
insl
inc
add
mov
mov
cmp
push
insb
lahf
jb
cmp
add
scas
mov
sbb
dec
pop
add
sarl
sbb
push
xor
pop
jbe
sbb
leave
inc
cmp
xchg
movl
test
sarl
dec
adc
icebp
scas
daa
sub
cmpsl
pop
inc
or
push
out
fwait
outsl
lea
test
push
popa
mov
mov
enter
das
sub
ss
fcmovne
mov
mov
jge
mov
lds
mov
ljmp
sub
ja
mov
call
gs
scas
and
jp
rcll
test
add
into
dec
cmp
mov
cltd
fbld
inc
inc
adc
xchg
mov
daa
jg
sub
je
imul
xor
loop
cmpsb
xchg
mov
mov
mov
insb
mov
pop
imul
sbb
in
adc
add
jmp
loopne
aam
fcmovnb
sbb
out
mov
or
sub
cmp
int3
mov
sub
inc
inc
lahf
sbb
lods
rcrb
movsb
cmp
xor
in
dec
and
lods
cmp
stos
test
pop
dec
rcrb
cltd
jmp
mov
subl
lods
xor
xchg
loopne
pop
cwtl
xor
adc
cmp
xchg
mov
mov
outsb
jmp
insb
incl
add
insb
and
xchg
sub
lahf
insl
cmpsl
lahf
fld
dec
in
mov
mov
mov
pop
dec
add
adc
notb
scas
sbb
push
mov
lock
fadd
dec
cmp
fstpt
or
leave
cmpsl
shll
push
add
lds
popf
fsubs
sub
xlat
js
mov
lret
push
cmc
iret
sahf
adc
out
push
outsl
jae
into
mov
inc
xchg
mov
push
int
sbb
dec
lods
movsl
jne
leave
cmp
int
scas
ljmp
iret
insl
adc
loope
pop
leave
into
in
xor
scas
mov
xchg
fsubrp
mov
push
je
mov
xor
dec
shll
cmp
inc
fdivl
add
inc
add
mov
lods
lret
movsl
jnp
lahf
es
xor
sbb
or
out
cmpsl
mov
scas
push
xchg
and
lds
sub
lods
mov
mov
push
mov
rcr
iret
xchg
adc
call
inc
and
insb
xchg
mov
fildll
push
or
lret
test
aad
sbb
fwait
mov
cmp
xchg
pop
or
add
mov
xor
jne
call
shlb
xchg
pushf
in
out
sbb
mov
and
pop
lods
mov
lods
pop
es
shl
adc
push
sahf
pop
sub
jge
adc
fs
xchg
cmp
lahf
leave
lds
mov
push
pop
mov
outsl
int
xor
sub
xchg
cwtl
jae
dec
add
or
cwtl
pop
ficoml
out
hlt
pusha
cmp
test
sbb
rcr
mov
inc
mov
mov
ret
dec
popa
cmpsb
imul
sbb
enter
or
aaa
loopne
mov
lods
test
in
xchg
dec
dec
pop
movsl
xor
shl
icebp
push
or
push
and
inc
pop
shrb
or
lcall
fldt
fstps
adc
hlt
sbb
mov
fimull
push
inc
cmpsl
xchg
xor
aam
ret
insb
imul
and
aad
inc
xchg
add
sbb
mov
popa
dec
movsl
add
call
in
leave
or
xor
sub
xor
jmp
stos
pop
mov
cld
stos
add
add
in
stos
loope
leave
and
add
cs
repz
lods
pop
into
adc
je
xor
cmp
mov
andl
cld
sarl
add
dec
popf
xor
sahf
cmp
mov
and
bound
movsl
in
inc
test
in
jmp
int
std
mov
or
sub
push
outsl
lret
dec
cmp
cmp
fwait
gs
mov
lret
flds
je
sbb
adc
xor
std
push
sbb
mov
icebp
or
sti
or
add
fadds
stos
into
push
push
jb
movsl
xchg
nop
xchg
ja
es
mov
in
cmp
xor
ret
daa
xor
or
daa
add
mov
inc
dec
push
adc
pop
dec
xchg
je
mov
or
aaa
scas
pop
rcl
aas
popf
mov
into
mov
mov
mov
cli
sub
lods
and
aas
xor
sub
mov
andb
loopne
aaa
in
mov
and
ficomps
push
mov
add
fadds
or
hlt
stc
lods
in
outsl
or
mov
sbb
pop
pop
repz
fisttpl
and
lea
mov
popl
inc
in
sbb
or
push
ss
mov
cmp
adc
push
nop
movsl
mov
or
lods
sub
mov
pop
sbb
sbb
data16
lea
and
int
mov
test
and
popf
lock
mov
pushf
lods
dec
scas
repnz
call
mov
push
stos
mul
insl
mov
mov
mov
xor
lds
rcrl
add
ja
out
xchg
lock
loope
stos
xchg
add
fcoms
mov
cltd
mov
sbb
ret
imul
fisttps
call
cmp
cmpsl
movsl
fcmovnbe
xor
pusha
pop
lods
xchg
push
xchg
mov
dec
out
dec
fstps
push
cs
leave
into
sti
out
imul
and
loop
mov
inc
je
jno
stc
mov
sbb
pop
push
xor
dec
sbb
pop
pop
xor
lds
sbb
insl
sub
pushf
sbb
shr
xchg
loopne
shll
and
pop
imul
lock
insb
ds
jecxz
dec
xor
fstpt
adc
xchg
and
adc
dec
cld
fmuls
ret
cmp
insb
movsl
xchg
cs
mov
out
rcrb
movsb
inc
sbb
or
add
test
push
mov
out
cmpsl
addr16
jne
adc
mov
push
pop
std
stos
fistpl
mov
sbb
imul
cmpsl
faddl
mov
xor
imul
jmp
push
and
subl
and
outsl
mov
xchg
sub
push
jnp
vpavgw
and
lods
pusha
lea
xchg
pushf
xchg
outsb
outsl
or
sbb
pushf
lcall
leave
sub
xor
xchg
or
cmp
xor
push
jle
std
jg
add
ljmp
lods
lret
mov
rol
repnz
fsubrs
cmp
mov
pop
insb
xor
inc
fcmovnbe
ret
push
sub
cmpsb
xchg
sub
push
xor
insb
jle
add
notb
mov
outsl
and
mov
mov
mov
fsubr
ret
dec
mov
enter
decl
and
shl
sub
sarb
cs
movsl
jae
mov
mov
js
xchg
loope
pop
mov
outsl
nop
sub
mov
test
push
adc
jne
movsb
mov
lds
mov
xchg
movsl
js
mov
sbb
lds
outsb
pop
outsb
lods
scas
xchg
cmp
mov
shlb
sbb
jmp
ja
xchg
stc
push
fistpll
inc
xchg
pop
in
sbb
add
dec
jl
mov
lret
in
mov
js
leave
imul
ljmp
mov
int
mov
fdivs
pop
mov
cmpsl
add
sub
jbe
sbb
inc
jge
adc
js
mov
pop
sub
xchg
xchg
scas
dec
movsl
movsl
xchg
clc
mov
out
xchg
lds
cmp
test
lods
loopne
imul
xchg
rorb
mov
cltd
daa
int
sub
jg
lcall
addr16
cmp
insb
pushf
int3
jne
pop
scas
insb
lods
push
daa
pop
iret
lods
in
xlat
adc
adc
mov
cmp
in
mov
cmp
mov
in
imul
xchg
hlt
cmpsl
xor
mov
adc
inc
popf
fs
std
movsl
ret
mov
roll
imul
call
vucomiss
es
loop
pop
lcall
ror
lds
or
sbb
arpl
mov
fcoml
bound
push
call
in
test
xor
ret
add
roll
adc
fs
rclb
aad
jmp
mov
insb
insb
int
push
out
ret
jne
pusha
scas
push
fisttpll
sub
outsb
sbb
adc
pop
jns
mov
fs
fcompl
sub
or
push
mov
sub
inc
rorb
lods
inc
fwait
imul
add
add
in
out
add
repnz
out
pop
or
lods
int
lds
dec
inc
xor
dec
jmp
aad
leave
loope
add
loope
sbb
cli
push
lret
or
scas
xchg
dec
in
sbb
mov
sub
jmp
test
fs
push
lret
jbe
and
cmp
jno
xor
pop
ds
imul
fimull
mov
dec
mov
add
test
mov
repz
fwait
hlt
pop
addr16
cmpsb
test
pop
std
push
fnsave
jno
mov
add
sar
lds
loop
pop
fwait
xchg
cld
fldcw
cmp
jne
mov
cltd
inc
fstps
hlt
cmp
mov
mov
fucomp
and
imul
mov
into
shrl
push
xor
insb
xchg
sub
mov
scas
dec
iret
cmpsb
inc
pushf
insl
cmp
imul
loope
mov
push
dec
pop
stos
xor
call
mov
jecxz
icebp
cmp
mov
sahf
movsl
mov
dec
aas
outsb
ljmp
xchg
sub
imul
lcall
dec
incl
sbb
pop
enter
xlat
sbb
mov
movsl
mov
xchg
cmp
mov
lds
xchg
popf
and
fcomip
cmp
out
sub
adc
or
mov
push
out
jne
push
in
test
and
push
cwtl
xchg
jne
add
scas
loope
and
dec
cmc
sub
mov
lret
xor
lea
adc
adcb
imul
sbb
mov
lret
jle
repnz
hlt
adc
jp
test
int3
in
add
into
lods
shlb
xorl
cmp
lds
inc
sahf
xchg
push
shrl
mov
mov
cltd
push
cmp
mov
das
mov
xor
and
rcr
xor
jl
pop
push
lds
pop
in
or
hlt
out
sub
rorb
xor
out
jp
mov
cmc
movsb
stc
pop
xchg
or
push
adc
sbb
jmp
aad
sub
daa
test
mov
daa
or
movsl
mov
cmp
xchg
out
push
sub
mov
pop
je
sar
ss
jno
xchg
push
push
inc
sbb
adc
out
mov
pop
ja
and
lods
cmpsl
inc
add
and
xor
pop
iret
lahf
mul
dec
add
daa
or
stos
insl
xor
xor
xchg
push
cs
lock
push
xchg
sti
sub
insl
popf
inc
scas
sahf
outsl
std
shl
sbb
stc
aad
das
sahf
lret
mov
lea
mov
seta
push
adc
sub
popf
push
leave
pusha
sub
add
xchg
pushf
sbb
cld
lahf
outsl
rorl
lcall
mov
movsl
jge
loopne
jbe
roll
pop
stos
mov
fstpt
mov
mov
cltd
inc
iret
mov
sub
outsl
sti
lahf
push
repnz
mov
out
pop
xor
adc
dec
dec
mov
in
lahf
scas
sub
stos
cmpsl
dec
movsl
mov
stos
movsb
nop
or
aad
sbb
add
dec
mov
mov
lret
cmpsb
stos
cmp
test
movsb
pop
testb
xchg
xchg
xor
ljmp
cwtl
test
mov
mul
jo
xchg
mov
mov
addr16
dec
out
xchg
jge
sub
mov
dec
mov
mov
cmpsl
and
aaa
leave
sbb
sub
cmpsb
jno
loop
repnz
mov
and
jb
or
imulb
push
sbb
inc
insl
mov
mov
adc
mov
xor
and
jb
mov
or
ss
out
cmp
mov
mov
icebp
mov
lods
jl
push
xchg
lea
add
mov
sarb
cwtl
cmpsl
push
and
lahf
out
lds
mov
sahf
loope
pop
sbb
cmpsl
aam
lds
mov
or
cmp
mov
push
ds
mov
lds
push
mov
inc
xchg
hlt
pop
cmpsl
sub
mov
fiadds
rcr
hlt
add
mov
xchg
sbb
int
add
dec
mov
xor
dec
into
push
jmp
hlt
inc
sbb
cmp
ret
in
pop
push
push
dec
in
push
and
mov
out
mov
xchg
xor
xchg
out
movsl
mov
jo
cmc
mov
or
je
xchg
mov
cs
or
pop
mov
mov
scas
cltd
jmp
ja
int3
mov
mov
outsb
stos
mov
fstps
mov
les
jae
dec
mov
out
movsl
hlt
popf
rolb
jle
sahf
pop
cmpb
dec
rolb
sub
sbb
jp
pop
ss
mov
shrl
add
xchg
mov
xlat
fwait
das
testl
xor
int3
sub
pop
add
hlt
inc
dec
fists
pop
cmp
shlb
or
sub
movsl
mov
dec
sbb
inc
popf
sub
cwtl
int
pop
jmp
mov
sub
and
ret
jg
mov
lret
sub
dec
test
clc
ret
sub
lds
les
xchg
pop
cwtl
in
add
lds
xor
adc
bound
cmpsl
cmpsb
dec
in
mov
and
dec
mov
and
lods
dec
hlt
sbb
push
lods
and
xchg
mov
and
xlat
dec
jae
cmpsb
pop
lret
fwait
outsb
test
dec
sub
xchg
xchg
sahf
fidivrl
pop
fnstenv
imulb
movsb
mov
lret
xchg
stos
ja
fisttpll
mov
int
enter
addl
mov
iret
adc
mov
sub
cltd
lds
sbb
dec
ja
lds
jl
sarb
ret
pop
por
insl
movsl
test
xor
dec
hlt
xor
cs
cmpsb
dec
shrb
popa
stos
fwait
mov
stos
ror
jns
xchg
mov
or
scas
idivl
mov
pop
movsl
fwait
jg
orb
js
lds
cmp
lret
pop
test
mov
add
ficoml
add
dec
popf
enter
jmp
nop
inc
bnd
popf
dec
inc
out
sub
mov
xchg
in
in
pop
dec
lods
fmull
int3
insb
iret
pop
imul
sti
lds
fwait
push
mov
data16
xor
jg
fcomi
mov
xchg
into
cmc
cmpsl
dec
mov
dec
xlat
fldln2
add
lds
cs
loop
mov
loope
and
loopne
inc
aaa
inc
jno
jae
jp
mov
jae
lods
inc
jne
push
sub
fimuls
xor
and
push
push
divb
push
xlat
fcmovbe
inc
sbb
imul
daa
flds
push
add
add
outsl
pushf
jmp
movsl
cld
adc
aaa
out
fwait
add
sub
sti
shll
movsb
add
push
popl
pop
movsl
pop
push
jg
lret
fsubs
xchg
add
das
clc
and
mov
mov
jo
into
dec
lret
push
lock
pop
xchg
ds
daa
stos
xor
adc
pusha
testb
outsl
inc
xor
mov
jne
scas
jl
mov
mov
jns
sub
cmp
xchg
cmc
sub
add
pop
sbb
cmp
leave
sub
ljmp
imul
enter
pop
mov
stc
enter
cwtl
ficoms
fadds
xchg
xorl
mov
sarl
js
cmp
pop
hlt
in
outsl
in
mov
add
insb
rcr
and
inc
rcll
and
pusha
mov
mov
jnp
jp
cmpsl
aam
das
in
pop
fistl
xchg
mov
xor
lret
pop
xor
dec
int
test
adc
aas
inc
and
clc
outsb
or
xorl
shrl
scas
fldl
pushf
aam
inc
mov
int
and
fwait
fwait
into
adc
loopne
lds
jp
dec
sahf
cmp
mov
add
imul
jae
imul
lods
mov
insl
xor
insl
mov
lea
lods
sub
imul
repnz
push
adc
daa
add
stos
scas
or
fidivl
ss
jnp
mov
leave
in
lods
adc
int
ret
dec
dec
adc
and
loopne
loop
xchg
fwait
ret
mov
add
pop
adc
mov
mov
add
mov
xor
dec
test
sub
xchg
daa
adc
fdivl
pop
movsl
mov
xor
lds
jo
pop
daa
dec
mov
movsl
jmp
or
add
inc
in
xor
adc
in
fisttpl
sbb
lods
ficompl
xlat
pop
shlb
inc
sbb
lds
mov
dec
push
movsl
test
cwtl
loop
mov
mov
cltd
orb
sbb
movsb
jne
and
sub
pop
mov
cmp
jmp
sahf
stos
out
dec
xchg
push
cmp
pop
repz
cmp
lea
cmp
fcmovnb
aas
idivl
call
ror
popa
sub
and
inc
popf
and
imul
mov
js
into
or
sub
xor
xchg
xlat
nop
dec
movsl
dec
test
adc
xor
cmp
add
jne
insl
add
imul
or
or
jge
sub
movsl
cli
dec
lret
jns
xchg
test
push
inc
rorl
mov
das
sbb
jbe
lcall
sbb
add
pop
jae
lea
iret
lock
and
jl
lds
adc
xchg
lods
cwtl
insl
dec
pop
data16
daa
mov
sub
sbb
movsl
ss
iret
and
mov
jmp
xor
fcmovnb
adc
xchg
out
xchg
xor
loopne
pop
and
cmpsl
mov
inc
stc
das
add
jle
into
dec
je
push
add
push
push
jmp
xchg
test
or
push
xchg
jge
ja
inc
add
xchg
pop
outsb
jmp
cmpsl
aaa
ss
lods
inc
mov
test
jne
iret
mulb
daa
pop
xor
in
sub
aaa
adc
sbb
je
push
out
fsubs
jmp
cld
push
mov
xorb
lods
out
sbb
outsb
inc
stc
jne
mov
jae
mov
test
cmp
ds
pop
in
xchg
and
sub
scas
in
cwtl
inc
sbb
mov
jp
pop
into
sub
sarl
sub
mov
or
cmp
mov
in
pop
dec
nop
popa
lods
or
and
mov
in
add
in
lcall
lock
outsb
add
or
stos
ss
mov
adc
mov
and
push
xchg
outsl
mov
dec
mov
xchg
cmp
push
xchg
in
popf
dec
stos
stos
movsl
mov
hlt
push
add
ja
mov
aas
pop
shlb
xchg
scas
ja
loope
push
lret
rolb
pop
push
dec
xchg
in
mov
add
fdivl
add
test
dec
pop
popf
jb
mov
jg
aas
adc
dec
add
insb
add
imul
sub
leave
sub
or
aam
xor
mov
das
and
mov
xchg
js
addb
mov
lods
nop
mov
xchg
aaa
mov
mov
xor
mov
scas
addr16
inc
xchg
rolb
into
push
scas
jne,pn
fadd
rcl
push
lahf
mov
jno
subb
adc
add
sbb
lret
inc
inc
in
lret
pop
push
sub
pop
addr16
fidivs
fnsave
in
cmp
insb
add
dec
or
pop
push
cltd
stc
mov
fistpl
cmp
cmp
rol
popf
cs
icebp
cmp
dec
pushf
popf
sti
ret
ds
push
push
movsl
xchg
sahf
fst
ljmp
scas
xor
repz
pop
push
stc
cmpsl
pop
or
notl
lock
cmp
inc
mov
jne
jmp
aas
xchg
xor
repz
jg
mov
dec
fcompl
in
out
loope
add
mov
mov
in
enter
popf
adc
dec
add
mov
sub
push
ret
cltd
lock
ret
loop
repz
jb
in
fnstenv
mov
cltd
or
call
addr16
push
sti
lds
data16
jmp
shrl
cli
push
pop
lret
and
sub
pop
outsb
sbb
cmp
ja
adcb
cmp
cmp
mov
sub
push
xchg
lds
sbb
xor
sub
adc
add
jnp
mov
pusha
sub
mov
push
jmp
and
lahf
or
add
jne
mov
sub
dec
pop
leave
inc
nop
jbe
rcl
mov
lea
push
repnz
loope
dec
ja
fs
loop
inc
fwait
mov
pop
lret
stos
xlat
adc
xchg
rcrb
into
pop
or
arpl
sbb
leave
inc
xchg
sub
xor
int
arpl
les
adc
sbb
sarl
mov
mov
lods
or
fisttpl
adc
test
aaa
lds
mov
xchg
jg
daa
insl
cmp
add
xor
and
mov
testl
scas
cmp
lock
sub
stos
xor
movsl
data16
mov
jnp
shll
push
pop
data16
lret
ja
add
out
in
add
xchg
mov
mov
inc
cmp
adc
test
daa
orl
daa
loop
xchg
dec
mov
pushf
jae
mov
jb
movsl
aas
hlt
inc
mov
jo
cmpsl
inc
push
ljmp
push
mov
cmp
clc
inc
mov
rcr
mov
or
imul
test
scas
pop
leave
pop
xchg
out
addb
or
out
inc
in
push
ss
pop
insl
push
ljmp
jb
in
cli
push
add
cmp
cwtl
test
js
lods
aaa
les
inc
and
ret
jle
xor
test
dec
sub
or
sub
sub
xchg
test
inc
mov
mov
jl
mov
add
je
ret
enter
movsb
into
pop
and
fnstsw
lods
aas
dec
jle
cltd
pop
out
icebp
dec
mov
cltd
cmp
in
outsl
pop
outsb
aam
popa
int
ds
mov
cmpsl
pop
add
or
arpl
or
fidivl
ss
mov
fdivrs
cmpsl
outsl
mov
dec
icebp
int
mov
ja
push
inc
loopne
popf
mov
repnz
xchg
mov
enter
mov
stos
dec
shlb
or
cs
ffree
mov
insl
push
mov
imul
cmp
ds
loope
fmuls
lods
cltd
jb
mov
insb
int
int
idivb
push
fimull
cmp
subb
cmp
fwait
adc
and
mov
push
loopne
jbe
out
adc
dec
outsb
repz
mov
xor
jmp
in
dec
stos
js
fsubrp
or
adc
in
push
sub
dec
or
cmp
aad
dec
xor
push
cwtl
outsl
hlt
out
jg
mov
lds
jne
lods
push
dec
push
or
mov
stos
shrb
fisubrs
xchg
mov
jns
cmc
dec
cmp
lcall
lds
add
int
xchg
idivl
add
jl
movsl
sub
cmc
jp
mov
repnz
aad
scas
fistpl
xchg
hlt
insb
mov
xchg
int
mov
imul
dec
cs
test
fsubrl
add
repnz
lea
mov
cltd
dec
xor
jo
pop
fwait
pop
out
insb
dec
push
lock
adc
rcr
outsb
cmpsl
je
push
mov
mov
mov
test
mulb
fiadds
dec
cld
mov
xchg
cwtl
jno
adc
mov
lcall
xlat
and
test
fsubs
cmp
scas
sbb
in
push
out
push
out
repnz
cmp
addps
mov
iret
outsl
mov
in
cltd
cmp
lods
lods
push
xchg
xchg
sti
add
in
in
outsb
sub
xrelease
ficoml
shlb
int
xor
adc
into
mov
dec
stos
xchg
adc
cs
or
pop
mov
add
sub
lock
rorl
lds
call
push
sbb
dec
fsubs
daa
mov
sub
dec
movl
pop
pushf
sbb
or
mov
xor
fstpl
jle
inc
cmpsl
fwait
into
test
fadds
movsb
mov
ret
mov
adc
loopne
loop
xchg
mov
mov
lds
or
xchg
mov
mov
scas
sbb
in
mov
aam
aam
std
jb
into
dec
addr16
ret
xor
popl
pop
lods
mov
scas
and
pop
lods
add
jne
cltd
mov
inc
data16
imul
aas
xchg
inc
and
lock
addl
xchg
mov
outsl
sbb
int3
insb
xchg
cmova
cmp
mov
mov
bound
cli
shlb
insb
movsl
mulb
inc
add
sub
cmp
fisubl
xchg
int3
cli
and
mov
xor
sub
and
rolb
hlt
cmpb
mov
test
or
inc
fdivp
cwtl
movsb
cmc
mov
mov
loopne
xor
xchg
fwait
out
adcb
shlb
lcall
fs
cmp
ja
daa
lds
clc
hlt
stc
test
mov
ljmp
fists
add
xchg
ss
sti
xor
mov
sbb
shr
int3
cmc
and
and
in
das
sahf
xchg
inc
push
or
cmp
fcmove
mov
adc
jle
gs
add
xchg
sub
movsb
sbb
xchg
mov
pop
in
mov
jnp
mov
lret
movsl
cld
sub
xchg
pop
sbbl
jne
int3
loope
mov
std
xor
push
fsubrl
lods
int
leave
in
lods
outsb
je
insb
enter
shlb
out
adc
pop
subb
jb
jae
invd
mov
loopne
adc
aaa
push
mov
cltd
lea
fiaddl
ljmp
orb
or
push
or
xor
fcoml
push
or
add
mov
daa
iret
mov
mov
shrb
in
mov
lret
daa
aad
lods
dec
ret
push
ret
xchg
mov
mov
outsl
mov
into
jae
jno
sub
cmpsl
cwtl
test
add
arpl
lods
xor
xchg
xchg
gs
in
sahf
xchg
add
dec
orb
aam
sbb
sbb
and
mov
xchg
aas
cltd
lods
int3
call
lods
daa
dec
mov
das
adc
and
mov
dec
int
mov
hlt
xor
mov
jle,pn
ret
pusha
xchg
clc
adc
rorl
loop
jo
mov
lahf
jbe
mov
push
xchg
lcall
and
mov
sbb
or
fnsetpm(287
adc
pop
out
ss
mov
sbb
in
daa
icebp
cmpsl
sbb
xchg
stos
xchg
inc
sbb
je
sbb
leave
push
lds
push
cmp
mov
idivb
loop
pop
xchg
lods
sub
mov
ja
mov
ja
fiaddl
in
mov
aam
xchg
adc
sbbl
inc
in
das
xchg
add
ja
insb
mov
lcall
and
mov
sbb
flds
xlat
jg
jp
dec
lret
jmp
lcall
and
xchg
or
xor
sbb
out
stc
sub
mulb
shrl
push
pushf
jne
xchg
mov
roll
jge
pop
inc
xlat
jmp
bound
mov
mov
arpl
cmp
inc
pop
dec
test
dec
insl
inc
mov
inc
sbb
dec
sub
add
aaa
std
sub
inc
in
mov
and
repz
or
xchg
add
xchg
movsb
sub
test
inc
fcoml
cltd
test
lods
daa
ds
in
cmp
outsl
mov
lds
inc
and
adc
lods
jnp
inc
add
leave
out
sbb
js
ja
mov
jg
pop
cmp
lods
cmpsl
add
out
sbb
push
lcall
test
arpl
gs
push
daa
pop
fbstp
fbld
mov
inc
testl
lods
sub
adc
out
idivb
ljmp
popa
adc
ljmp
jb
mov
movsl
adc
out
int3
xchg
daa
cmpsl
jmp
mov
lahf
push
test
sbb
enter
std
cwtl
push
mov
movsl
push
fs
imul
jecxz
or
hlt
xor
jo,pt
in
js
mov
sub
dec
mov
cli
daa
lret
movsl
les
scas
lds
lods
out
aad
je
popf
push
inc
aas
aaa
stos
stc
into
lret
lret
push
mov
mov
mov
and
push
out
popf
add
int
jne
out
inc
outsl
sub
jmp
mov
dec
push
add
mov
stos
push
movb
sbb
push
ret
mov
jp
mov
jnp
mov
cmp
xor
xor
insl
mov
cli
xlat
aad
and
lret
lods
repz
jl
cwtl
push
fwait
or
enter
out
loopne
mov
test
rcl
aaa
std
sub
out
sbb
shl
insb
leave
rolb
ret
cli
test
mov
fadds
test
jl
shrb
sarb
test
loopne
lods
or
sub
dec
sahf
mov
mov
fstl
sbb
movsl
lret
jmp
mov
es
fs
dec
push
mov
les
dec
mov
lods
js
pop
adc
jnp
shr
inc
push
scas
sub
mov
in
sub
cmp
adc
lds
ljmp
stos
mov
and
adc
jge
sbb
xchg
inc
xchg
outsb
rorl
sbb
jecxz
loope
jp
lret
shll
pop
cwtl
push
lret
sub
jl
popf
daa
mov
cmpsl
mov
xchg
sub
cwtl
std
mov
mov
xor
aaa
add
add
divl
subl
sti
add
mov
xor
pop
xor
sub
scas
jae
lea
sub
mov
nop
stos
mov
push
jno
ss
jmp
mov
cwtl
or
lds
jo
adc
nop
lahf
scas
mov
insl
int3
jl
fistps
sarb
test
syscall
xor
lock
jae
lea
das
push
push
fimuls
cmp
lods
nop
add
movsl
push
dec
adc
push
cwtl
roll
lret
pushf
mov
repz
sarb
sbb
cmpsl
xlat
add
add
dec
push
pop
mov
fs
sub
daa
loop
xor
and
or
in
add
xor
scas
fwait
dec
inc
adcb
sbb
sub
push
mov
out
sub
test
je
enter
dec
pop
push
xchg
stos
inc
add
cmpsb
adc
pop
into
aas
pop
xlat
and
mov
pop
dec
push
pusha
faddl
and
ljmp
xchg
dec
int3
imul
or
mov
sbb
das
mov
add
mov
stos
pushf
lds
daa
lds
cmc
mov
mov
gs
sbb
xchg
outsl
pop
inc
lea
dec
mov
fsts
mov
sub
stc
arpl
add
jge
movsb
mov
mov
push
shll
pop
aaa
adc
in
sbb
test
sbb
test
cmp
mov
pop
add
sbb
lcall
sbb
cwtl
cwtl
sahf
mov
out
pop
jle
add
loopne
repz
jae
jl
daa
xor
jns
loopne
in
dec
push
std
dec
and
and
or
lods
sahf
cmp
mov
scas
sbb
js
movsb
mov
sbb
xor
fwait
push
leave
pop
cli
dec
daa
dec
pop
mov
sbbb
push
add
dec
fwait
jnp
insb
mov
xchg
outsb
sub
dec
aas
and
outsb
lds
in
lods
mov
pmulhuw
and
sub
xchg
push
scas
test
and
lea
or
adc
cmpsl
sbb
push
lret
ficoml
pop
cmc
push
cmp
xchg
ss
mov
int3
pop
gs
mov
jns
fwait
mov
insl
or
test
mov
adc
and
mov
xor
and
daa
int
dec
xchg
leave
mov
mov
xchg
int
sub
in
lods
cmpsl
movsl
cmpsb
iret
mov
out
loop
mov
aaa
and
ljmp
test
repz
dec
push
ss
aaa
adc
xchg
mov
into
adc
push
or
dec
or
mov
pop
rolb
xor
outsl
fwait
mov
fdivrs
shrl
cmp
movsl
jmp
xchg
out
pop
loope
pop
insb
add
adc
pop
cwtl
and
pop
push
call
rcrb
xchg
cmc
sti
xlat
xor
pushf
pop
lds
movsl
xor
sarb
inc
push
and
jne
sbb
dec
pop
lret
dec
leave
movsb
xchg
sbb
fisttpll
daa
fimull
sub
nop
push
inc
xor
add
call
mov
mov
xchg
mov
and
adc
into
mov
clc
push
jecxz
mov
fwait
pop
xchg
add
data16
subb
cmp
jb
sub
mov
xchg
push
shlb
ret
jmp
inc
push
mov
fwait
shrb
cmpsb
das
mov
sbb
pop
adc
adc
ss
popf
mov
adc
ret
inc
inc
arpl
xlat
xchg
loope
dec
push
mov
add
xor
int
mov
ja
mov
jg
std
xor
lods
in
daa
ds
pop
cmp
jl
in
daa
test
xor
add
mov
je
shl
and
lret
lds
jo
pop
lods
xorl
ljmp
in
hlt
adc
fnsave
pusha
insb
sbb
xchg
fidivrl
in
lods
int3
adc
enter
push
fs
notl
or
jmp
insb
nop
sti
add
leave
mov
sub
mov
popa
mov
int
insb
sahf
push
pushf
negb
fs
and
gs
frstor
into
ret
incb
shll
dec
sub
jmp
arpl
iret
je
lods
movsl
clc
addr16
mov
shlb
mulb
insl
mov
ds
hlt
sti
add
mov
ret
mov
or
xor
sub
ret
push
daa
dec
shlb
in
std
pop
sub
mov
std
aad
in
xor
mov
xchg
jb
pop
mov
adc
stos
movsl
mov
cs
jle
mov
inc
in
adcb
imul
ljmp
lods
out
mov
stc
mov
aad
mov
xor
mov
call
inc
sar
sub
sbb
imul
loopne
add
movsl
add
add
lods
pusha
cs
movsl
lods
xor
push
push
je
and
popa
mov
inc
sub
rolb
hlt
scas
cmp
pop
out
sbb
pop
adc
xor
add
inc
or
pop
sbb
add
daa
mov
lahf
xchg
mov
mov
lock
cwtl
movsl
and
jne
bound
jmp
or
sub
in
cwtl
add
pop
shl
cltd
mov
pop
and
insl
jmp
movsl
push
sti
xchg
and
loope
xlat
or
add
add
test
data16
mov
test
addr16
lods
or
mov
ss
adc
add
lret
cld
mov
lods
xchg
lahf
lods
sbb
divl
adc
jne
ret
cmp
dec
pop
sub
adc
insb
add
mov
pop
hlt
pop
dec
mov
out
xor
lret
sub
in
mov
jmp
sti
in
dec
mov
popf
daa
insb
mov
pop
stos
sub
cmc
xchg
add
add
stos
into
fst
jge
or
icebp
daa
adc
inc
notb
cmpsb
rcll
lods
xlat
out
orl
outsl
mov
rcr
movsl
mov
push
xor
push
movsl
jb
cltd
jo
dec
outsb
sub
jecxz
add
sub
mov
sub
loope
pop
into
sub
push
sub
pop
jbe
mov
mov
and
mov
ds
push
insl
movsl
cmp
xlat
shlb
out
pop
stc
arpl
test
adc
fwait
xchg
push
insb
sahf
pushf
inc
cmpsl
xchg
add
data16
idivl
mov
adc
sahf
cwtl
mov
scas
test
shr
ss
int
add
xchg
imul
mov
push
fsin
lock
mov
jmp
movsl
sbb
les
xchg
adc
das
mov
pop
dec
mov
lea
sahf
gs
push
lods
in
orb
std
lds
rcll
xor
push
sub
lret
add
test
outsb
xchg
sbb
popa
mov
sbb
pop
shlb
or
mov
movsb
jae
mov
mov
jle
add
sbb
jns
repnz
popa
inc
sti
insb
dec
xchg
aas
rol
test
xor
push
lods
scas
add
int
xchg
mov
xchg
push
movsl
sbb
pop
orb
insl
fbld
lret
add
and
cmp
rcrb
pop
js
and
sbb
and
push
rcrl
ror
fcmovbe
add
rol
cs
sub
or
ljmp
inc
movsl
ror
stos
push
or
aaa
das
jle
mov
xchg
hlt
lret
inc
mov
test
shrb
jae
xchg
aaa
clc
pop
outsb
stos
inc
clc
loop
cmp
in
rcll
cmp
xor
shrb
push
into
dec
and
loope
gs
xor
movsb
dec
dec
sub
adc
mov
lret
verr
jne
inc
cmp
ds
ja
je
sahf
jecxz
stc
pop
test
mov
les
xor
mov
ret
mov
xchg
jmp
lds
ret
das
nop
cmpb
fsubrl
sti
pop
mov
enter
arpl
mov
xor
imulb
jns
ss
cmpsl
and
aaa
stc
push
cmpsb
lcall
cmp
pushf
aam
mov
mov
movsl
mov
in
push
xor
dec
push
testl
cli
mov
and
mov
cmp
mov
add
and
lret
mov
push
sub
push
and
rolb
subb
push
sbb
ja
es
out
mov
cmp
orl
nop
sub
in
add
add
push
sbb
pop
lds
aas
sub
inc
push
add
notb
cmpsb
out
les
adc
int
ss
dec
iret
push
mov
push
inc
stos
dec
inc
les
testl
or
lods
add
xor
in
push
movsl
inc
bound
sbb
lods
jno
cs
cmp
mov
lea
mov
inc
shlb
addr16
mov
xor
stos
jns
mov
cltd
jno
cmpsl
mov
xchg
jo
wbinvd
pop
add
ret
cmpsb
sahf
pop
mov
or
dec
in
inc
dec
push
cltd
test
dec
js
daa
dec
xchg
xchg
inc
or
and
fwait
mov
pusha
adc
lods
sbb
rcll
std
dec
js
dec
push
scas
sub
mov
mov
lods
std
xor
sti
insl
aaa
movsl
jbe
fsts
scas
jle
jns
or
xchg
shll
les
dec
nop
fsubs
lock
cwtl
mov
les
jno
jno
dec
mov
lods
cmpsl
xlat
add
jecxz
aad
dec
lds
mov
cs
fisubrl
test
js
dec
add
outsl
fwait
add
pop
xchg
inc
fs
sub
push
inc
lds
call
out
mov
into
orb
inc
mov
sbb
cli
cmc
xor
jmp
or
lcall
adc
bound
mov
fs
jmp
movsl
push
jp
cli
push
and
inc
push
add
mov
cmpsb
pop
add
jae
dec
sbb
mov
dec
test
mov
imull
mov
ss
pop
mov
aaa
or
pop
pop
sub
daa
popa
mov
movsb
mov
fbstp
incb
or
mov
sbb
cmpb
xor
aas
outsl
shlb
mov
mov
es
shl
xchg
mov
repnz
aad
les
out
mul
and
imul
aad
push
icebp
mov
aaa
mov
mov
sub
adc
pop
inc
jmp
scas
xchg
les
xlat
neg
insb
and
jmp
jb
sbb
cs
hlt
sbb
jmp
sub
sbb
js
mov
mov
test
adc
in
mov
and
inc
xor
fisubl
shlb
andb
pop
lock
push
sar
ds
subb
or
adc
pop
scas
inc
jno
sub
aaa
push
stos
pop
aam
cwtl
add
sarb
inc
aad
popl
push
in
pop
je
and
movsl
and
leave
mov
lahf
rol
mov
adc
loope
imul
fiaddl
pop
xorb
push
std
mov
jae
mov
or
inc
mov
popf
dec
add
or
mov
pop
hlt
inc
dec
cmp
mov
sarl
in
lds
mov
int3
jmp
push
pop
ret
cmpsl
pop
cmc
dec
or
int3
icebp
in
jmp
or
lds
sbb
insl
xchg
mov
xchg
mov
scas
rolb
xchg
gs
shl
int3
mov
fsubs
jno
add
mov
add
loope
pop
mov
cmpsb
or
xchg
xlat
dec
lcall
scas
add
mov
jns
cmc
stos
lret
pop
daa
xchg
int
or
sbb
jns
test
mull
mov
pop
mov
int
je
sub
in
loopne
gs
fsubr
or
mov
sub
pushf
imul
mov
mov
cmpb
sbb
add
lahf
pushf
shrl
jnp
push
aad
clc
mov
pop
xchg
add
testb
sub
or
int3
sbb
movsl
pop
inc
shlb
fs
push
and
mov
int
mov
mov
movsl
xchg
repz
inc
sub
sub
mov
mov
test
add
sub
lds
loop
enter
add
test
shll
leave
cmpl
xor
es
dec
stc
lds
fstl
lea
or
mov
add
mov
jne
rol
cli
sub
or
xor
xchg
inc
rcrb
es
push
xor
or
es
out
lods
cmp
lea
cli
andl
push
mov
cmp
sbb
lcall
fsub
stos
mov
xlat
in
push
jbe
adc
pop
dec
sbb
mov
cs
dec
pop
pop
sbbb
cmpsl
gs
lock
lods
inc
mov
sub
call
bound
imul
or
cmp
push
push
fwait
mov
pop
xorl
inc
or
jmp
mov
mov
inc
into
lods
lds
cmp
in
add
push
movsb
fimull
sbb
cltd
mov
rol
shlb
in
fdivs
jmp
test
mov
mov
add
mov
sbb
xchg
aas
mov
sub
das
jbe
cmp
mov
stc
repnz
and
nop
jl
ret
mov
xlat
gs
jmp
dec
mov
lea
jge
jns
dec
jl
ljmp
or
xchg
das
mov
in
lcall
mov
sub
cmc
pop
repz
aas
pop
aam
inc
xchg
xor
jb
repnz
stc
cwtl
jmp
enter
repnz
lods
fildll
adc
or
xrelease
mov
mov
into
stos
outsb
ss
mov
cwtl
xor
mov
mov
jle
inc
int
jbe
nop
cmp
call
inc
sbb
mov
jne
push
nop
push
cwtl
jns
add
rcl
pop
mov
insl
mov
jecxz
clc
les
fimull
add
cltd
pop
fldl
sub
inc
stos
sub
mov
jge
dec
jl
mov
ss
pop
movsl
int3
sahf
mov
or
mov
cmp
pop
fcmovnb
ret
arpl
cwtl
scas
jne
fwait
push
and
dec
in
stc
and
xchg
jns
adc
mov
sbb
mov
into
call
mov
cmc
fdiv
xchg
cltd
mov
enter
out
add
and
sub
cs
aaa
insl
and
inc
inc
push
aad
in
mov
jmp
push
movsl
push
icebp
popf
push
loopne
push
repnz
pop
stc
push
sub
dec
xchg
lahf
jg
stc
add
dec
or
adc
out
sbb
dec
push
jno
sub
xchg
pop
stos
mov
iret
hlt
xor
mov
pop
mov
sub
mov
sub
or
test
dec
adc
call
decb
push
adc
enter
pop
jge
pop
imul
in
loope
hlt
xlat
shrb
fidivl
stc
test
xchg
popf
mov
ja
push
inc
scas
push
mov
sahf
test
mov
cltd
sahf
shr
int
inc
je
pop
xchg
fbld
jge
aam
xchg
jmp
push
mov
mov
mov
ret
push
insl
insb
and
rcl
loope
push
jmp
add
adc
jb
xchg
dec
les
add
std
xchg
ja
add
lahf
negl
cmp
pop
sub
imul
xor
dec
shrb
leave
push
dec
scas
inc
adc
imul
fwait
mov
xlat
jnp
fistpll
insb
lods
add
adc
iret
outsb
add
mov
test
xor
cltd
mov
int
lea
emms
mov
sub
push
sbbb
sbb
ret
scas
mov
shll
jns
adc
mov
pop
xchg
ja
cmp
dec
inc
adc
push
sub
jp
jmp
pop
arpl
sbb
cwtl
mov
or
loopne
mov
add
sbb
xor
loopne
aas
xchg
inc
cmp
mov
mov
movsl
or
xor
mov
jno
mov
lods
dec
xor
lds
in
pop
popa
test
cs
sub
cli
inc
mov
or
add
xchg
test
xchg
and
pop
push
cmpsb
in
pop
sub
jo
call
clc
int
add
lcall
popw
jg
les
insb
shl
test
popf
lods
mov
mov
or
mov
jb
mov
add
inc
pop
bound
dec
dec
pop
pop
xlat
movsl
or
int
pop
xchg
jecxz
jbe
pushf
mov
mov
jno
xor
cwtl
mov
aas
vaddps
aad
aaa
xchg
insb
push
incl
jecxz
jg
rep
or
loope
xor
push
dec
pop
jecxz
dec
and
and
mov
bound
test
sub
adc
ret
dec
orl
lds
inc
stos
cs
mov
pop
ret
dec
divb
inc
add
xor
or
outsl
test
jmp
push
or
jb
inc
ljmp
cmp
xchg
movsb
pop
ror
add
dec
mov
lcall
or
call
dec
mov
gs
and
mov
dec
adc
and
sub
and
push
mov
movsl
mov
dec
push
push
mov
into
adc
in
jg
xchg
xor
out
cwtl
cmovl
js
inc
mov
in
fdivr
mov
lds
rcrl
lock
sbb
shlb
leave
mov
jle
mov
dec
mov
push
sbb
cmp
aam
popf
daa
jg
sub
sub
bound
or
lea
cmc
shrl
push
dec
cmp
fxch
enter
mov
sub
mov
or
outsb
iret
test
or
mov
js
test
in
mov
fs
and
or
dec
subb
add
iret
fsubrl
std
jge
cmpsl
or
imul
or
pop
dec
jg
stos
imul
leave
xchg
adc
sub
inc
cmp
cld
sti
movsl
mov
push
popa
inc
dec
jo
dec
stc
and
outsb
push
add
mov
xchg
fwait
popf
xchg
jae
imul
das
push
sahf
sbb
jmp
in
mov
lds
cli
sbb
ljmp
sbb
cli
cmc
icebp
call
leave
ficoml
cmp
shll
aaa
pop
jae
imul
add
aas
mov
xchg
xchg
int
aad
cmp
mov
loopne
jnp
out
xchg
push
mov
mov
pop
sub
or
pop
push
mov
syscall
inc
lds
outsb
cltd
stos
lods
data16
daa
cmp
iret
sahf
loopne
xchg
mov
shr
jb
pop
lret
push
xchg
iret
daa
adc
rcrl
repz
shll
dec
sbb
and
fwait
mov
fstl
sti
in
dec
mov
mov
mov
sahf
sbb
mov
dec
out
mov
stos
cmp
mov
xchg
adc
mov
cmc
mov
jae
movsb
addr16
scas
mov
ss
imul
sub
clc
or
imul
decl
fildll
scas
popf
pop
les
insb
xlat
mov
xchg
std
sbb
vxorps
and
pop
popl
lret
insl
inc
outsl
arpl
inc
test
repz
push
call
jmp
mov
into
lods
fdivs
lds
insb
push
rcll
lea
mov
cmp
xchg
subb
adc
fistpl
pop
int3
lds
enter
cli
aad
ss
pop
push
mov
loope
aam
xor
test
outsl
int
and
mov
lock
and
push
mov
lea
movsl
and
aas
lret
inc
insl
lds
test
cmc
xor
mov
dec
xchg
cmc
sub
cmpsb
pop
test
lea
paddusw
daa
sbb
xchg
lcall
ficompl
mov
test
lods
testb
outsb
adc
and
xchg
jmp
xlat
xor
dec
push
nop
out
loopne
add
push
shlb
out
add
xor
call
add
pop
or
fwait
scas
lds
or
or
enter
mov
out
dec
pop
cmp
mov
sbb
or
pop
xor
vpsubusw
add
cmp
roll
and
js
int
push
push
or
pop
insl
pop
mov
ret
enter
inc
jno
adc
cmp
pop
repnz
inc
jo
in
sub
daa
push
imul
dec
xor
outsl
int
push
popa
daa
and
sti
rorl
jecxz
fdivrl
imul
inc
mov
cmpsl
pop
xor
jecxz
pop
adc
lds
jl
rcll
sub
cmp
ds
negl
cmp
repnz
loope
mov
ret
jle
scas
lds
inc
inc
jbe
inc
pop
adc
rcrl
mov
add
mov
je
movsl
adc
sbb
into
mov
call
xchg
call
in
add
push
rolb
daa
das
jbe
ror
lods
rcrb
mov
daa
push
shll
or
adc
ds
fs
and
loope
ss
ffree
out
jle
sahf
fcomps
std
mov
push
movsl
jns
in
or
mov
pop
jmp
popa
sbb
in
or
adc
repz
xchg
mov
sub
xor
pusha
add
jno
jne
xor
lods
test
add
jl
sub
lea
out
add
xchg
mov
push
pop
clc
cmpsl
mov
and
lods
pop
mov
sub
stos
fwait
inc
fs
hlt
xlat
hlt
add
mov
jl
adc
repnz
add
mov
cmp
mov
insl
divl
lds
sub
inc
ret
test
int
fiaddl
aam
push
adc
leave
ds
std
outsb
dec
aaa
jo
outsl
cli
mull
cwtl
add
imul
pop
push
pop
fimull
mov
sub
sahf
daa
nop
lock
bound
sub
mov
fsubrs
mov
or
in
inc
lds
mov
insb
jle
into
add
aaa
xchg
xchg
shlb
iret
hlt
and
cmp
mov
lods
scas
scas
mov
or
adc
dec
adc
mov
sub
insb
pop
pop
scas
mov
pop
mov
cmp
or
loopne
inc
std
push
cltd
jnp
in
inc
shll
sbb
or
cmpsl
loopne
mov
sti
insb
mov
inc
in
mov
sbb
mov
movsl
sub
inc
loopne
stos
aas
aas
sbb
dec
ret
in
es
daa
mulb
mov
call
aaa
lret
sti
in
inc
iret
push
sar
stos
movsl
fstps
std
mov
daa
cli
fldl
data16
jb
cld
push
sbb
push
outsb
lret
les
or
outsb
lods
js
xchg
lea
mov
outsb
mov
inc
mov
sbb
enter
iret
lds
cmp
imul
enter
cmp
movsb
pop
sbb
mov
mov
xor
stos
dec
jmp
adc
adc
adc
or
add
push
xor
pop
jle
mov
pop
mov
cmp
dec
lea
ret
add
add
pop
mov
lcall
pop
lds
and
mov
fdivl
call
insb
es
fnstcw
mov
pop
daa
hlt
dec
cli
inc
xor
sub
lods
movsl
idiv
fsts
je
cwtl
repz
lds
std
add
mov
lds
inc
mov
stos
xchg
call
mov
dec
push
cwtl
fidivrs
cmp
jns
and
loop
movsl
jge
xor
mov
mov
das
adc
mov
fcompl
jbe
jl
lret
lds
xor
mov
push
pop
dec
in
pop
insb
int
add
les
jecxz
dec
addr16
push
add
jae
test
mov
or
sub
jns
hlt
pop
lret
dec
jo
sub
pop
mov
outsl
inc
mov
in
inc
das
out
pop
cwtl
rorl
add
jb
adc
sbb
mov
pop
lcall
push
mov
mov
or
push
push
les
fsubr
vpinsrw
movsb
imul
lahf
into
dec
mov
mov
cmp
dec
jl
pop
cmp
movsl
shrb
pushf
test
mov
hlt
lcall
aas
xor
sub
mov
adc
call
sar
mov
mov
iret
or
cmp
mov
outsb
and
ret
sahf
sahf
xchg
mov
dec
rol
addr16
sbbb
dec
mov
fbstp
ss
lds
hlt
add
mov
cmp
fwait
mov
rol
insl
mov
push
lods
xchg
orl
and
movb
int
inc
jmp
mov
adc
push
sub
cld
sub
in
or
xchg
cmp
pop
in
mov
loop
xlat
mov
fistpl
mov
xchg
in
lods
add
or
int
mov
in
sub
pop
outsb
xor
sub
dec
adc
lea
lods
in
adc
loopne
std
leave
fildll
jne
lds
dec
inc
cs
testb
jle
xchg
inc
leave
pop
mov
or
adc
mov
rolb
cmpsl
popf
js
lcall
xchg
int
lods
cltd
push
mov
cmc
sbb
mulb
jmp
out
push
ds
lds
cmpsb
cwtl
pop
pop
mov
add
mov
jne
pop
mov
mov
out
in
fwait
cmp
fwait
sbbl
add
mov
jle
test
ljmp
mov
scas
add
into
cmpsb
lcall
cmp
inc
fwait
in
mov
mov
lods
push
xlat
es
cmpl
fiaddl
sbb
jge
inc
sbb
movsl
jp
adc
lock
call
pop
jle
aas
lds
rclb
fcmovbe
inc
stos
mov
inc
or
stc
xchg
adc
dec
imul
dec
xchg
popa
lret
pushf
rcll
int3
xchg
pusha
add
fs
pop
stos
push
pushf
movsl
cmp
call
cli
push
es
rcrl
inc
fadd
mov
ja
lcall
ds
mov
xlat
cli
cmc
xchg
pop
fwait
lods
cmp
mov
test
mov
cmpsb
lds
mov
test
fdivl
mov
xchg
or
adc
in
push
aad
mov
cmp
lods
fsts
sub
ret
push
mov
or
mov
fwait
adc
imul
cmpsl
add
out
gs
scas
and
lcall
jbe
xor
jns
adc
xchg
adc
sbb
ret
std
sahf
nop
rcrb
add
mov
jbe
movsl
xlat
and
test
inc
push
shlb
adc
movsl
jo
mov
jnp
stc
dec
int3
add
in
into
or
cmp
add
sub
cmp
shll
cmp
mov
mov
testl
imul
ja
pop
fwait
adc
js
outsl
shll
cmc
test
mov
stc
nop
cltd
add
adc
push
add
testb
xor
fstpt
xor
or
push
or
aam
sub
into
es
ficoml
outsl
mov
cmpsl
jno
insb
mov
pop
out
push
mov
std
xor
pop
subb
test
jecxz
lret
test
imul
push
xor
roll
jp
mov
scas
xchg
dec
xchg
mov
clc
sarl
aaa
outsb
sarb
pop
push
inc
testl
lds
and
mov
dec
jnp
shrl
mov
mov
mov
jmp
jbe
jno
push
pop
insb
int
fwait
scas
fldcw
dec
xor
dec
or
push
push
jmp
mov
cld
insl
and
sahf
fwait
cltd
lret
sti
sbb
xchg
repz
xor
insb
sbb
cli
jnp
adc
mov
in
outsb
jecxz
js
daa
jbe
dec
and
or
fucomip
xchg
aam
mov
in
loopne
dec
je
imul
pop
out
jg
sub
add
int
pushf
mov
stos
aaa
lcall
iret
mov
into
stos
aad
leave
in
lcall
movb
ja
scas
into
dec
repnz
lret
loope
fstps
dec
lds
inc
mov
or
sahf
inc
mov
leave
xchg
ja
test
adc
dec
adc
sbb
mov
es
fisubrs
gs
ljmp
pop
mov
pushf
adc
pop
mov
sbb
pop
mov
xor
rcl
dec
or
pop
fcoml
mov
sub
pop
push
insb
dec
xchg
push
xchg
mov
not
dec
push
xchg
or
sbb
dec
xchg
mov
pushf
lea
callw
hlt
in
andb
push
cmp
mov
and
inc
mov
ss
lock
pushf
mov
arpl
into
fisubrl
les
inc
add
sbb
or
stc
and
pop
in
pop
out
out
lock
push
outsl
inc
in
or
xchg
or
mov
xchg
les
subb
add
decb
mov
pop
fisubs
movb
pop
push
call
mov
push
lea
jae
call
lea
call
pusha
jmp
test
popf
sub
sarl
sub
jg
and
outsb
out
ja
into
arpl
adc
xchg
leave
js
rsqrtps
dec
mov
xchg
aaa
outsb
add
ljmp
sub
and
ja
mov
sbb
jl
std
xchg
pop
mov
sub
xchg
jne
fsubs
js
aas
sti
mov
fs
cmc
pop
and
pop
inc
shrl
sbb
lods
js,pn
adc
orl
lcall
adc
subb
pop
push
sbb
jne
jp
sub
mov
and
and
shl
repnz
mov
cld
dec
xchg
sub
push
or
fidivrl
outsl
inc
xchg
repnz
and
lret
cmp
push
pop
add
push
adcl
shlw
or
test
pop
sub
lock
insl
ffree
call
test
leave
adc
ret
and
movsl
mov
adc
dec
xor
inc
mov
cmp
pop
jp
in
hlt
fwait
stos
fmuls
lock
jmp
fidivl
sbb
cmp
popa
mov
nop
pop
gs
inc
mov
rcl
ret
std
pusha
adc
or
and
inc
dec
dec
ja
xor
enter
mov
inc
mov
mov
mov
ja
mov
shrl
pushf
in
jp
push
sbb
xor
adc
sub
jmp
outsb
push
adc
insl
sar
pop
xor
clc
test
pushf
pushl
lea
je
push
pusha
movb
movb
lea
jmp
cmp
pushf
lea
ja
pusha
dec
call
lea
jne
pushf
call
pushl
popl
call
mov
lea
jae
js
pusha
cmp
call
ret
push
mov
sahf
mov
scas
outsb
lods
cmp
add
cld
js
cld
cmc
cmc
push
pusha
inc
lock
mov
xchg
fists
cld
in
xchg
cld
aaa
roll
stos
cmp
loopne
stc
xlat
fiaddl
frstor
mov
pop
xchg
outsb
js
jl
xchg
pop
pushf
jo
adc
and
fstps
icebp
inc
insb
scas
sub
lcall
cs
sarl
dec
aam
xchg
dec
push
mov
push
scas
and
rorl
sub
xchg
mov
pop
or
clc
pop
stc
mov
xchg
xchg
test
sbbl
outsl
fs
mov
pop
pop
jnp
dec
xchg
pop
add
mov
jns
adc
jmp
pop
jmp
into
sub
outsl
ljmp
xchg
dec
jp
nop
push
out
nop
xor
dec
ret
or
xchg
iret
dec
xorl
mov
xchg
pop
cmp
aad
outsb
and
inc
lret
loope
push
jo
inc
enter
outsl
insb
stc
test
mov
and
rcl
sub
fstps
test
sbb
mov
shlb
jo
shrb
mov
adc
ficoml
and
rcrb
movsb
sub
icebp
mov
addr16
xor
or
mov
arpl
cmp
aad
dec
aaa
xor
lret
mov
push
push
mov
out
rcrb
cmp
dec
xchg
test
scas
fildll
cmpsb
jno
aam
not
fstps
outsl
aas
insl
pushf
fsubrl
repnz
imul
jne
test
cmp
jns
mov
jg
sbbb
mov
xchg
mov
push
mov
repnz
repz
insb
outsl
jnp
jbe
leave
adc
cmp
xor
push
arpl
push
mov
in
and
fwait
sti
stc
mov
jns
xor
xchg
mov
mov
movsl
push
jmp
cmp
xor
or
dec
orl
fucomp
out
out
mov
push
in
int
sbb
mov
add
inc
rep
pushl
call
mov
daa
not
and
push
imul
mov
inc
xor
and
testl
icebp
divl
out
ficoml
pop
scas
test
push
ror
sarb
inc
leave
xchg
xchg
nop
out
jo
data16
pop
sub
jnp
inc
mov
xor
mov
enter
lahf
aaa
xor
add
inc
stos
or
shl
and
mov
or
enter
sbb
loopne
or
pop
sbb
jl
pop
test
ljmp
not
sub
dec
adc
jbe
imulb
test
mov
mov
test
pop
jmp
clc
test
pop
cmp
mov
out
xor
das
repnz
mov
sub
and
pop
popf
cs
dec
test
mov
fisubs
loope
xchg
sbb
int3
push
sbb
xorb
dec
jne
fstl
jp
repnz
not
fimuls
mov
fildl
mov
add
mov
repz
loopne
shrb
in
dec
sbb
fildl
je
out
inc
enter
jnp
inc
loop
xor
xchg
rclb
mov
sub
cmp
jge
mov
pop
shll
and
mov
stc
bt
clc
cmp
pushl
movw
pushf
jmp
scas
test
es
nop
mov
xchg
mov
rol
sub
les
filds
repz
lds
add
cs
sbb
mov
cmc
xchg
pop
roll
pop
lcall
mov
test
pushf
stc
xor
pushf
jmp
push
popa
push
in
push
inc
pop
add
pop
sub
popa
out
push
cld
sbb
xor
div
xchg
xchg
roll
xchg
subb
les
inc
pop
aam
xorl
int3
test
xchg
xchg
fcmovu
mov
jbe
icebp
pop
cmp
cmpl
mov
pop
cmp
outsb
adc
mov
fs
arpl
icebp
push
fisubrs
mov
in
xchg
sub
fldt
mov
push
xor
adc
hlt
mov
movsl
sbb
push
cmp
lea
xchg
shr
clc
cld
gs
lahf
push
lret
rorb
inc
das
add
xor
aad
and
mov
push
cmpsb
mov
shll
xor
pop
lea
xor
jnp
and
pop
jg
mov
xlat
ljmp
aas
ficoml
xor
sub
or
stos
aas
jnp
leave
sub
loope
xchg
inc
ret
gs
push
rorb
xchg
cmp
divb
add
add
out
movl
icebp
dec
fldl
dec
sbb
shlb
sbb
cmp
pop
jo
popa
mov
ja
incb
sub
mov
sub
pop
pop
pushf
mov
push
mov
push
dec
jmp
pop
movsl
pusha
clc
lods
inc
jno
cmpsl
dec
sub
mov
jmp
cld
dec
cmp
jl
pop
sti
add
mov
xor
dec
and
sbb
les
sub
cmp
sub
sub
pop
shll
cmp
xchg
adc
add
mov
sub
sub
movsbl
add
bt
mov
ror
pushf
push
mov
clc
repnz
pushl
pusha
call
roll
and
rcrl
xlat
jge
movsb
cmp
mov
in
test
lret
inc
xor
cld
or
out
shll
aad
mov
in
cmpsl
pop
shrb
sbb
loopne
cmpl
cmp
ds
test
mov
or
inc
and
shl
xor
les
test
outsb
jp
shll
sub
sbb
jnp
push
push
add
lret
and
inc
filds
add
sbb
movzwl
aaa
test
xchg
inc
xchg
add
not
insl
and
sub
arpl
or
mov
into
xor
sahf
jae
fs
jbe
sub
inc
adcl
sbb
stc
ds
lods
xor
js
push
sar
lahf
pop
out
std
push
push
cltd
mov
mov
inc
fnsave
clc
and
icebp
aas
mov
mov
dec
pop
mov
mov
stc
mov
cmp
jmp
pop
and
or
sbb
sar
jb
pop
js
mov
dec
mov
adc
push
jno
mov
cmp
ljmp
addb
inc
push
loope
add
gs
jle
mov
stos
sbbl
push
stos
dec
lret
inc
jbe
push
dec
daa
ss
inc
pushl
mov
jmp
sbb
in
cwtl
add
inc
int3
add
pop
sub
add
xchg
sub
jb
push
fistpll
cmp
call
movsb
dec
push
add
inc
fildl
ljmp
notl
jns
xchg
xor
xchg
out
out
lret
ljmp
pusha
enter
inc
sub
cmpl
icebp
jns
lcall
inc
popf
lods
xor
mov
inc
xchg
into
fldl
lahf
sbb
test
pop
dec
and
pop
mov
lret
cmp
add
ds
dec
sarl
fdivr
data16
fcompl
add
out
or
cmp
inc
clc
and
inc
test
adc
frstor
in
dec
test
xchg
jp,pn
fmulp
les
int
out
pusha
int3
mov
aam
pop
xor
xor
and
ljmp
sahf
cmp
fsubrs
jb
and
mov
mov
cmp
and
je
call
shll
xor
not
or
add
cmp
popa
cltd
mov
lahf
sbb
and
mov
ficomps
test
push
pop
lcall
pop
cli
fidivrl
jp
sbb
stos
ret
xlat
jmp
and
jae
dec
push
dec
sbb
push
pop
pusha
mov
and
out
leave
mov
xchg
adc
sub
fmuls
sar
mov
xchg
jo
mov
jle
mov
sub
adc
lods
into
xchg
push
push
jmp
pop
sbb
cmpsb
or
dec
fistpl
not
mov
mov
mov
cmp
jle
xchg
sbb
out
mov
lds
push
adc
and
fisttpl
pop
push
into
cmp
fadds
popf
faddl
dec
stos
cmpsb
dec
mov
jns
lcall
mov
dec
clc
cmp
mov
mov
fldenv
mov
push
fwait
orl
jmp
inc
and
dec
test
dec
dec
inc
push
dec
xor
cs
insb
add
jmp
call
mov
movb
push
lea
jne
neg
pusha
push
clc
sub
clc
mov
shl
add
sbb
sub
adc
cmp
mov
clc
call
dec
leave
in
sbb
shll
add
shll
call
push
pop
jnp
inc
stos
xor
jg
jnp
sbb
cmp
add
arpl
cmovge
shlb
inc
cli
xor
dec
jmp
js
in
mov
subb
stc
cmc
or
fucomi
mov
fmul
lret
sub
imul
aas
pop
xor
xor
fildll
fucomi
jmp
inc
movsl
xchg
cmp
mov
cmpb
int3
movsb
pop
not
fildl
add
dec
in
push
jns
andb
mov
add
adc
push
xor
xlat
in
cmpsl
loopne
imul
mov
aad
add
imul
mov
jg
dec
dec
ja
pop
adc
cmp
push
adc
ret
cmp
pop
push
shlb
gs
jg
xor
rcr
lea
cmp
or
js
outsl
in
sti
repnz
in
in
and
daa
movsb
gs
sbb
jecxz
ret
mov
fs
adc
or
test
sti
jmp
cmp
jmp
bts
or
mov
bts
shr
movsbw
mov
add
mov
pushf
pusha
or
call
pusha
call
lea
jne
stc
mov
bt
pushf
pusha
cmp
pusha
lea
ja
push
bswap
mov
jmp
xchg
cmp
pop
imul
or
iret
daa
cwtl
fstl
lock
pusha
sbbb
aaa
fwait
push
inc
and
call
fwait
sub
dec
inc
cmc
push
sub
push
lods
gs
lret
cmp
popa
test
iret
jmp
or
scas
inc
or
fcomip
repnz
jbe
adc
cmp
pop
test
lcall
insl
in
rcrl
pop
addr16
movsb
scas
rclb
dec
xor
sbb
lea
inc
pop
stos
cli
xchg
call
sbb
rolb
testl
mov
and
lock
ss
nop
test
xchg
bnd
or
jbe
push
mov
int
add
arpl
nop
and
sbb
leave
int3
movsl
std
test
and
xchg
lds
push
ss
dec
push
cltd
pop
sub
adc
adc
inc
add
subl
ret
popf
leave
xchg
sbb
roll
leave
sub
dec
clc
pop
ss
add
sub
flds
add
pop
mov
scas
loop
lods
aad
and
dec
adc
sub
test
jp
sbb
xor
mov
cmpsb
aaa
out
rcl
inc
inc
or
ds
or
xor
jl
out
sbb
adc
out
mov
pop
adc
jns
rcr
dec
mov
int
test
add
or
jbe
ja
add
rcr
inc
rcr
stc
push
fimull
rol
out
out
data16
jne
sub
out
ficoml
insl
add
data16
cmpsb
jne
aas
ds
lret
pop
push
out
pop
pop
scas
sbb
imul
mov
and
out
in
inc
add
xchg
mov
cs
gs
loop
rorb
xlat
test
ja
outsb
cmpsl
xor
cmp
pop
fdivs
scas
push
sbb
aas
out
outsb
inc
pop
sbb
and
dec
jnp
fnsave
dec
sbb
push
push
lahf
movsb
pop
aaa
adc
outsb
imul
push
loope
sbb
loop
xchg
andb
sub
or
lret
int3
adc
mov
mov
cltd
cmp
jg
add
push
movb
lea
ja
not
not
inc
dec
call
pusha
stos
push
mov
call
jg
and
not
clc
cmp
add
sbb
cli
xchg
mov
xchg
cs
xchg
or
je
or
xchg
adc
ret
pop
mov
push
sbb
nop
push
lds
mov
mov
clc
mov
sahf
ret
scas
shlb
divb
movsb
xor
mov
dec
inc
and
ljmp
and
add
je
popa
jbe
inc
imul
add
push
cli
or
dec
xchg
and
not
sub
das
xchg
sahf
jle
dec
and
jge
sbb
pop
test
mov
cmp
jae
adc
xchg
pop
and
mov
sbb
or
lret
xor
dec
hlt
fsub
stos
mov
das
dec
loop
sbb
push
pcmpgtw
inc
cmp
push
leave
aad
xor
shl
decb
cmp
xchg
push
xchg
mov
and
imul
add
adc
hlt
stos
push
sbb
hlt
pushl
and
call
test
pop
adc
sar
pop
xchg
in
mov
in
in
lods
ss
ja
add
jmp
jnp
subb
insb
lret
cmpsl
push
icebp
sub
mov
push
ss
adc
lahf
out
lret
movsb
push
daa
push
dec
les
mov
mov
lret
lss
cmc
jecxz
repz
dec
fucomi
test
xchg
loopne
xchg
scas
testl
rorb
and
xor
repz
adc
pop
mul
inc
imul
cmp
xlat
or
stos
jle
add
pusha
movb
movl
mov
pushf
pushf
push
lea
jmp
push
dec
fstl
not
rorb
sub
xchg
mov
sub
les
addr16
push
imul
insl
movl
cs
insb
jns
insb
int3
jo
into
push
adc
push
mov
fucomip
or
shl
in
ret
dec
pop
shlb
and
jge
ss
adcb
aam
out
add
jmp
push
rorb
mov
jl
lret
mov
xchg
xchg
xor
cmpsl
icebp
leave
jo
imul
sbb
ficoms
mov
ja
mov
movsb
ljmp
adc
shl
nop
addr16
push
jl
xchg
ret
hlt
and
xchg
mov
orb
test
inc
inc
and
sbb
or
loope
jecxz
jae,pn
xchg
fcomi
mov
movnti
and
mov
jb
hlt
pop
imul
cmc
les
sbb
pop
and
cld
stos
sbbb
push
fs
gs
push
inc
mov
or
cld
test
daa
das
bsf
sub
mov
btr
bswap
shr
adc
mov
ror
add
bsr
bt
rcl
add
and
ja
shld
btr
mov
push
call
clc
test
pushl
lea
je
push
mov
movw
movw
lea
jmp
clc
pushf
xor
bt
jmp
or
shll
jecxz
subl
fwait
pop
repz
in
inc
rorb
jb
int3
out
or
repz
sbb
shll
push
mov
mov
fs
mov
stos
popa
lret
insl
andb
test
mov
push
xor
and
sub
test
dec
mov
pop
mov
scas
xchg
xchg
push
pop
popf
jnp
shlb
popa
mov
push
xor
shll
dec
xchg
loop
leave
das
insl
add
cmp
pusha
push
bound
push
shl
pusha
fwait
ret
cli
or
rorl
cli
stos
xor
dec
scas
xchg
push
mov
and
sub
fisttps
nop
add
ja
mov
jb
sti
push
or
adc
jp
mov
and
mov
cs
out
add
aad
insl
cli
rcl
jge
or
sarl
adc
scas
mov
jecxz
scas
inc
bound
ret
and
pop
xchg
xchg
push
test
mov
shrl
adc
mov
add
roll
stos
mov
sbb
sbb
test
xor
mov
fstl
lret
pushf
cmpsb
push
add
mov
jecxz
inc
iret
sub
mov
sahf
leave
and
cwtl
std
in
test
das
dec
xor
pop
and
or
xlat
add
movsl
xlat
pop
loope
cwtl
dec
arpl
popa
xchg
pop
jg
sbb
sub
mov
shrb
fs
ja
push
pusha
clc
sub
inc
and
setne
add
add
sbb
mov
pusha
mov
pushl
pushf
cmp
repnz
pushf
lea
jne
movsbw
movsbw
cwtl
movsbl
movb
pushf
movzbw
call
cmp
jge
fists
popf
insb
roll
mov
xor
test
jno
stos
test
jbe
cli
cmpsl
mov
jp
add
mov
cmp
xchg
and
sarb
push
mov
adc
dec
js
gs
out
addl
aaa
mov
mov
cmpsb
shrl
push
leave
cmpsl
xchg
repz
pop
push
in
sub
xchg
fs
icebp
mov
inc
incb
lahf
or
das
sbb
daa
out
or
rorl
and
js
mov
es
ds
repz
sbb
sub
int
andnps
cwtl
cmp
adc
dec
mov
pusha
and
cli
cmpsb
lahf
xchg
mov
dec
in
gs
and
bound
into
test
push
xlat
inc
sbb
out
xchg
cmp
ret
ja
push
xor
lds
int3
int
rclb
xchg
mov
js
inc
bound
pop
cwtl
sahf
inc
bt
xor
mov
pushf
push
bt
test
jmp
fs
adcb
test
pusha
and
enter
mov
sbb
cld
mov
lea
push
and
mov
fwait
int3
repnz
or
gs
lods
cmpsl
dec
movsl
jns
out
xchg
jg
cmpsb
mov
sti
scas
push
xorl
mov
push
in
or
test
jo
iret
out
push
ss
dec
scas
and
fucom
insl
or
mov
mov
lea
jmp
pushl
jmp
add
out
jmp
jns
or
iret
dec
iret
cmpsl
cs
add
mov
mov
out
fidivs
leave
ret
sub
jle
or
repnz
test
push
je
sahf
dec
mov
daa
xor
jbe
int
xchg
push
adc
fs
push
or
jg
leave
mulb
ja
xor
pop
cmp
mov
and
pop
cmpb
ss
push
pop
push
push
xor
sbb
addr16
inc
adc
icebp
out
add
sub
or
rcr
push
xlat
aaa
cmp
in
jecxz
mov
jae
leave
scas
cmp
jb
mov
push
sbb
push
xchg
lahf
sub
sbb
xor
imul
sarb
scas
jge
cmpsl
pop
xchg
xor
jnp
mov
lods
enter
or
shll
xor
loop
push
xchg
mov
mov
sbb
call
ret
mov
add
push
pop
push
repnz
inc
cmp
pop
je
roll
in
push
icebp
in
icebp
mov
out
pop
daa
cmp
push
adc
pop
mov
add
mov
push
mov
or
dec
xor
popf
jne
gs
das
enter
out
dec
inc
call
cmp
or
rcll
sbb
hlt
sub
push
enter
ja
push
insb
jmp
mov
mov
ficoms
cwtl
test
cmpb
add
adc
sbb
mov
mov
mov
push
lret
xor
xor
push
aaa
mov
leave
inc
xchg
mov
and
dec
jnp
inc
jge
add
xor
dec
jmp
aad
jmp
sub
in
mov
mov
ror
lea
add
pushf
sub
call
arpl
fs
xor
cs
insb
add
clc
test
stc
bt
cmp
movw
lea
jb
call
pusha
pop
mov
pushl
mov
jmp
pop
jns
or
shll
movsl
test
cmp
mov
pop
out
mov
adc
jmp
repnz
push
repz
divb
jnp
push
mov
xchg
mov
xchg
xchg
cmp
xchg
cwtl
pop
inc
lods
repnz
addr16
shll
mov
clc
lock
xchg
inc
jno
inc
fisubrl
sbb
mov
add
not
insl
fisubl
or
jbe
sbb
ret
aaa
test
xchg
fs
jge
xor
cli
dec
insb
out
fisttpl
in
ljmp
insl
in
xor
mov
or
pop
repnz
mov
dec
mov
mov
xchg
js
popa
mov
sub
mov
xor
jmp
mov
cmp
int3
bnd
lock
cli
sarl
pusha
pop
pushl
bswap
mov
movw
pushl
mov
push
lea
jmp
pop
not
fcoml
add
adc
jbe
fwait
mov
movsb
imul
jne
ret
mov
jp
into
cmp
out
repz
call
sbb
dec
pop
lock
inc
mov
xadd
jp
mov
stc
lds
out
inc
pop
mov
jmp
idivl
mov
jne
add
inc
mov
aam
lods
lods
fcmovb
inc
sub
int
negl
add
pushl
movl
jmp
pushf
lea
jae
ror
shr
rcl
inc
mov
cmp
mov
sbb
mov
pusha
sub
clc
bt
stc
repnz
push
jmp
xor
shlb
and
fwait
or
dec
sbb
mov
or
inc
mov
cmp
in
add
adc
xchg
sub
pop
push
inc
mov
out
inc
jp
cltd
cmp
add
add
sbb
es
pop
out
es
std
pop
cmc
insb
fnstcw
js
fldt
inc
dec
mov
mov
vpackssdw
adc
cmpsl
je
enter
mov
jb
imull
mov
jge
sbb
sub
or
xchg
les
and
pop
xlat
aad
fs
into
roll
pusha
dec
stos
push
into
and
imul
adc
dec
cmpsl
push
nop
push
pop
adc
gs
sub
inc
xchg
or
dec
in
or
mov
jle
in
or
mov
movsl
cmp
jbe
cmp
test
jmp
cmp
shll
repnz
cli
adc
push
dec
int3
add
dec
jo
mov
xor
push
push
mov
out
pop
inc
xor
lcall
mov
inc
js
jmp
lea
mov
arpl
out
sub
testb
and
push
jns
ljmp
popf
lods
shlb
or
hlt
inc
and
pop
adc
in
push
cmc
fisttpll
jne
jle
lea
cmp
add
xchg
pop
sbb
out
jge
ljmp
fdivs
outsl
adc
int3
xchg
sbb
push
popf
ja
or
inc
inc
sbb
clc
adc
inc
mov
mov
and
cltd
jmp
stos
lods
mov
push
mov
pop
popf
sti
add
push
outsl
dec
cmp
xor
js
mov
xor
test
mov
lret
mov
xchg
dec
std
mov
push
cmp
in
in
ficomps
jb
je
rcrl
dec
lock
inc
cli
mov
movsb
sub
in
not
shll
push
loop
andb
gs
dec
xchg
xor
mov
dec
xor
inc
adc
or
xor
in
out
test
sti
fsts
lret
dec
or
xor
xor
std
daa
fsubrp
push
sub
lods
js
sbb
and
mov
jge
loope
mov
pop
xor
sub
xchg
xchg
les
testb
out
scas
push
cmp
and
les
lea
int
aas
sub
and
xorl
not
or
fisttps
arpl
fcomp
mov
push
lcall
mov
mov
ret
mov
sarb
leave
adc
fcmove
scas
test
jle
and
cmp
out
in
and
fisubs
jg
pop
shl
mov
add
or
pop
or
mov
sbbl
xchg
stc
xor
inc
add
mov
cmc
sahf
xor
aam
pop
test
popf
mov
fidivrs
fisubs
xlat
add
push
fsts
xor
call
push
loope
or
rcrl
sarl
aad
loop
clc
mov
arpl
ret
push
and
pop
mov
imul
fists
xchg
loop
jns
inc
or
mov
ds
lret
ret
sbb
enter
mov
or
std
push
mov
cmp
int3
fisttpl
cmova
pop
aad
cs
pop
cmpsl
sub
out
jmp
pushl
pusha
lea
je
call
push
outsl
add
shl
pushf
xor
cmp
loop
aas
pop
out
out
pop
or
push
push
cwtl
cmp
mov
fwait
cmp
inc
mov
fs
out
fwait
dec
pop
js
pop
jecxz
lea
pushf
inc
pushf
fadds
fs
int
nop
stc
loop
cmp
adc
in
xchg
pushl
cmp
inc
mov
add
sub
bound
fs
pop
std
mov
inc
rcrl
push
push
adc
cmpsb
mov
sub
xchg
outsl
dec
jbe
cmc
cmp
out
testl
push
dec
adc
jne
sbbl
and
xor
push
int3
mov
lret
add
pop
mov
clc
adc
push
data16
test
cmc
dec
scas
push
cmpsb
jle
xchg
mov
dec
stos
loope
outsl
and
out
cmpsb
jmp
push
test
xor
adc
js
xchg
fwait
call
mov
arpl
add
mov
lahf
test
sbb
std
mov
sti
dec
push
xchg
aam
outsb
push
jb
adc
cs
push
orl
sbb
shll
adc
divl
outsb
movsl
addl
cmp
inc
jb
je
xor
pushf
sbb
xchg
jmp
xor
dec
xchg
adc
push
jl
bt
clc
cmp
jmp
pushl
popl
call
dec
push
sbb
not
pop
or
roll
repnz
loope
test
push
fsubrs
movsb
push
ja
pop
adc
push
std
jne
and
push
das
xor
imul
cmp
jge
scas
scas
pop
lods
cmp
inc
jns
or
jl
insb
add
cs
mov
fmul
xor
lock
imul
cmc
std
mov
push
sahf
lcall
and
xor
roll
cltd
enter
lret
repz
xor
push
test
daa
mov
jnp
in
insl
iret
ja
xchg
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
out
not
jmp
popa
rol
das
inc
inc
lret
gs
int
imul
call
iret
inc
ficoml
jne
jnp
dec
cmpsl
push
pop
mov
test
jae
adc
int
in
add
push
xchg
fisubs
in
pop
jmp
les
pop
push
leave
stos
cmpb
cli
mov
roll
xchg
ds
orl
jo
mov
out
cmp
fs
jbe
shld
sub
clc
mov
shr
xor
shl
mov
add
ror
add
or
btr
shr
sbb
shl
mov
shld
or
add
call
pop
in
xchg
add
roll
sub
cmp
adc
push
mov
or
cmpsb
imul
cmp
mov
movsb
push
and
and
sahf
daa
enter
xchg
movsb
dec
mov
jge
stc
or
fisttpl
js
cmp
cmp
inc
lcall
adc
in
mov
shll
cltd
test
pop
ljmp
test
jmp
mov
imul
scas
and
repz
cld
xchg
bound
test
jbe
sbb
fisubs
mov
data16
push
mov
inc
repz
stos
mov
jbe
pop
pop
dec
jg
xor
andb
lods
mov
xchg
mov
test
test
dec
dec
cmc
dec
and
loope
adc
add
les
dec
test
sahf
popf
pop
mov
mov
shlb
into
jne
rorl
shll
cli
adc
sbb
sbb
rcrl
and
bnd
out
out
lock
insb
or
and
cmp
push
cli
fstpl
mov
nop
inc
in
jmp
pop
xchg
push
adcb
test
sbb
popf
add
mov
and
mov
fidivrl
push
mov
nopl
addps
ror
or
or
adc
lock
sbb
jle
or
dec
xor
mov
pop
not
ret
pusha
daa
pop
inc
pusha
jo
adc
enter
fs
or
dec
int3
mov
push
mov
sub
lods
lock
std
add
cwtl
ljmp
out
shlb
jbe
loop
repz
sub
shlb
sub
mov
xchg
loopne
xchg
mov
test
sub
sarb
jmp
lret
arpl
orl
int3
lret
stc
icebp
mov
test
filds
mov
sbb
not
loopne
popf
add
lcall
lcall
scas
sub
cmp
lods
or
xor
mov
popa
fdivl
mov
or
icebp
fstpl
mov
int3
fstpl
or
lods
stc
jo
jo
insl
int3
rcrl
scas
out
or
daa
in
pop
dec
xor
sbb
cmp
enter
stos
mov
outsl
push
lods
dec
lret
pop
ror
add
xchg
nop
and
not
adc
mov
jns
lea
repnz
mov
shl
jmp
out
test
dec
adc
dec
test
mov
push
and
push
mov
enter
dec
cltd
dec
ret
adcb
out
jae
inc
xchg
pushf
cli
fldt
push
insl
fbstp
xor
icebp
xchg
sbb
repz
loopne
lea
stc
divb
mov
stos
mov
scas
ret
movsb
test
lahf
pop
lods
adc
ret
imul
fiadds
movsb
pop
adc
add
jle
fst
repz
fwait
cmpl
and
xchg
mov
push
sbb
dec
pop
in
mov
jge
lea
pop
cmc
cmp
les
es
mov
push
shl
rolb
test
fimull
mov
fcomip
dec
cmc
adc
into
cmp
jno
mov
jmp
jl
shr
int
adc
repz
add
pusha
or
push
jmp
iret
xorl
lds
sbb
jge
push
xchg
lods
jmp
not
fisubs
sbb
adc
shl
xlat
lahf
movsl
fcomp
lock
mov
fcompl
jl
in
divl
sbb
sub
add
cmpsb
movsb
adc
cmpsb
mov
inc
push
andb
cmpsb
mov
jne
shrb
mov
fildl
les
sub
hlt
stos
adcb
fistpll
sub
and
jno
push
mov
fcmovbe
push
sarl
add
inc
testl
ja
sbb
jecxz
dec
sub
ficoml
aaa
xchg
pmulhuw
hlt
pop
mov
js
pop
adcl
mov
sahf
dec
jb
int
mov
push
sub
in
push
push
pop
fistl
cli
pop
xchg
and
mov
mov
out
sub
imul
dec
popf
imul
xchg
idivb
mov
add
shll
mov
or
cmp
out
or
imul
fwait
lahf
sub
pop
test
ret
inc
repz
or
xchg
fisubrs
xchg
ds
push
lods
flds
dec
push
pop
cmpb
popf
sbb
dec
lea
push
push
push
and
dec
pop
mov
sub
adc
punpckhwd
jg
jbe
mov
stos
fisubrl
add
ja
mov
sbb
add
mov
lea
call
push
lea
jmp
add
pusha
ror
bt
jmp
xchg
cli
mov
scas
pop
sahf
jl
xchg
arpl
push
cwtl
fs
push
xor
adc
in
mov
aad
loop
sbb
fadd
dec
jl
mov
mov
imul
push
sbb
adc
add
notb
stos
xlat
loope
cld
or
add
pop
cld
adc
ficoml
mov
push
in
jecxz
stos
fdivrs
dec
and
adc
mov
icebp
jbe
cs
jne
add
popa
fs
imul
and
pushf
pushf
movb
pushl
ret
and
xrelease
jmp
cld
and
in
xchg
pop
js
in
fisttps
dec
iret
clc
pop
outsb
loop
nop
sbb
jno
push
out
mov
mov
sbb
leave
adc
mov
xor
jbe
cmc
xchg
popf
jle
fwait
xchg
push
cmpsl
cmp
and
xchg
sbb
iret
mov
push
movsb
movsb
fldt
dec
cmp
popf
clc
inc
mov
sbb
das
sbb
test
push
sub
in
int3
repnz
xchg
dec
rcll
or
and
leave
movsb
js
pop
xor
lret
jp
sarl
nop
mov
xlat
aad
addl
inc
fisttpl
jmp
out
pop
sbb
inc
dec
lods
cwtl
aad
je
ret
dec
pop
xchg
mov
xchg
inc
movl
lds
mov
dec
lret
sub
jecxz
enter
cs
ficompl
rorb
jecxz
lods
pop
rcrb
fiadds
outsl
imul
or
jle
fwait
or
lcall
push
js
hlt
xchg
ljmp
sub
imul
push
popa
xchg
lahf
pop
gs
fdivrs
ror
stos
cltd
scas
out
lods
std
jbe
aam
in
push
lret
push
pop
mov
mov
mov
pushf
pop
mov
jl
in
adc
dec
xchg
in
pop
out
ret
jl
in
jl
lea
pusha
loopne
mov
enter
imul
dec
inc
scas
loope
jne
sub
pusha
pushl
lds
nop
rorb
sbb
or
and
jne
xchg
adc
outsl
xchg
jne
test
or
aas
and
jl
adc
aam
test
not
outsb
insb
fdivl
add
inc
jbe
mov
adc
ds
fwait
inc
fimuls
mov
outsb
mov
in
sub
aad
fnstsw
mov
test
xchg
and
push
loope
pop
mov
sahf
pop
nop
fcomps
fmuls
mov
jge
fdivl
loope
stos
xrelease
dec
cltd
and
cmp
mov
imul
mov
das
inc
js
rcll
sub
mov
gs
es
fstps
push
xchg
xor
out
pop
pop
faddp
rclb
imul
sub
sub
sub
clc
daa
popa
fcoms
xchg
mov
sbb
imul
pop
xor
sbb
inc
cmovno
mov
mov
push
test
std
loope
stos
fbld
xor
inc
loopne
jno
jmp
movq
add
test
not
xor
mov
adc
cwtl
loop
in
cmpsl
xorb
leave
outsl
int
loope
lret
xchg
xchg
jmp
ja
dec
and
ja
aaa
inc
inc
movsl
mov
xlat
cmpsl
jg
pop
inc
sub
xlat
loope
jae
inc
pop
je
sbb
xor
out
xorb
jle
sti
int3
inc
or
and
das
sub
push
ljmp
sbb
mov
popa
cmp
jae
sub
ror
divb
push
pop
push
jg
xchg
xchg
add
shrl
lcall
out
mov
scas
sbb
in
push
jmp
mov
sbb
scas
pop
add
and
imul
lock
adc
jmp
test
or
and
adc
dec
inc
mov
add
and
jnp
jge
push
in
jnp
and
bound
es
add
sub
xchg
ret
adc
sbb
movsl
lods
cmp
dec
rcrb
jo
jmp
or
mov
mov
jmp
lcall
xor
cmp
lock
insb
pop
push
add
pushf
fidivrl
stc
sbb
jl
or
pusha
ret
dec
xor
mov
pop
leave
inc
dec
xor
movsl
arpl
inc
shlb
jo
lcall
xorb
push
push
jle
cltd
lea
push
mov
sahf
ret
push
sbb
gs
popf
lret
sbb
ja
fcmovnbe
fwait
jp
fcmovb
mov
sbb
lret
cmp
jmp
pop
mov
pusha
xor
inc
xor
rcll
test
sbb
inc
dec
pop
jge
pop
xor
mov
repnz
ds
adc
jne
in
adc
mov
and
insl
mov
jnp
jmp
je
loope
pop
push
mov
inc
push
aas
test
sub
xor
sbb
pushf
pop
ja
jecxz
inc
pop
pop
mov
cmp
push
xor
cltd
icebp
mov
mov
mov
mov
jmp
push
orb
mov
jp
inc
pop
cmp
in
out
jg
sarb
pusha
fstl
sub
jbe,pt
aad
push
or
xchg
push
fwait
aas
jne
mov
mov
xchg
xor
push
pop
push
shrb
scas
rcl
shlb
pop
cmp
push
cmp
jg
sbb
push
jg
jp
xor
push
xchg
addb
push
mov
arpl
dec
sbb
inc
mov
ficomps
pop
test
mov
pop
push
sbb
xchg
nop
cld
jecxz
jl
add
call
mov
sbb
scas
gs
add
jmp
pushf
and
cmc
and
lahf
inc
xchg
test
add
push
or
popa
lret
popf
xchg
dec
psrlw
jge
sarl
imul
inc
cmp
fucomi
adc
sbb
push
mov
push
clc
fs
jl
gs
sub
and
jns
repz
inc
xchg
mov
dec
jae
addr16
push
jns
mov
stos
cmpsb
popa
dec
and
hlt
mov
aaa
push
sub
mov
psrld
jg
adc
adc
lock
test
idivl
xchg
jle
shrl
mov
inc
mov
mov
scas
dec
and
std
and
loopne
pusha
call
jg
lods
jl
shll
mov
fcomps
cmpl
inc
mov
cmc
push
adc
push
jg
not
mov
fdivrl
scas
add
inc
push
insl
lea
jae
dec
out
sbb
iret
pop
flds
bound
mov
mov
loope
cmp
in
int3
inc
les
add
xor
jbe
fsubrl
jns
mov
mov
scas
mov
or
std
xchg
dec
cmp
not
cmp
lds
cli
rol
cli
cmp
xchg
xchg
jge
xchg
sub
aam
imul
mov
jp
jo
mov
push
sti
imulb
or
inc
jnp
jg
scas
cld
dec
ja
lock
movsb
rclb
lock
cmp
sahf
push
and
insb
mov
cmp
sbb
decl
lret
andl
pushf
push
jnp
test
sub
cmc
repnz
pusha
pushf
lea
jne
and
mov
rcl
sbb
sub
bswap
mov
cmp
sub
clc
bt
pushl
clc
pushf
bt
cmp
call
mov
neg
mov
clc
clc
test
push
shr
bt
bt
movw
cmp
jmp
mov
push
pushl
ret
btc
or
bt
mov
stc
call
pushl
stc
jmp
not
inc
adc
dec
rol
xchg
or
lahf
lea
sbb
mov
clc
sub
cmc
neg
mov
test
mov
lea
shl
movsbw
mov
cmc
stc
push
stc
sub
pushf
rep
call
pusha
jmp
dec
push
not
xor
jecxz
cmp
mov
add
sahf
mov
sbb
push
xchg
mov
pop
dec
cs
pusha
shll
outsl
into
int
mov
std
popf
and
lcall
jns
rcrb
fcoms
add
xor
xor
push
cmovp
mov
loopne
je
sbb
fcompl
add
sub
and
std
insl
mov
lret
fwait
mov
out
shll
add
mov
je
gs
xchg
sbb
repnz
or
dec
cmovg
jbe
bsr
mov
bsf
add
mov
ror
sub
mov
bsf
bts
xor
add
shrd
movl
rcr
push
shl
pop
mov
jmp
mov
adc
pop
fstpl
clc
call
into
movsl
test
adc
xchg
jl
scas
xlat
dec
cli
pop
sbb
sbb
and
mov
ds
mov
dec
in
ljmp
stc
testb
dec
push
cltd
jno
sub
jl
nop
fisubrl
idivb
jb
mov
sar
add
jb
rcll
int3
into
or
jno
rcrl
fsubs
lahf
daa
pop
adc
adc
mov
je
or
mov
jo
subl
and
addr16
sub
push
xchg
std
add
adc
out
js
mov
fcompl
dec
ficomps
dec
mov
out
sbb
cmp
xchg
pop
ficompl
jg
mov
jne
dec
xor
fiadds
add
sbb
sarb
je
repz
stos
sub
push
test
insb
add
push
gs
icebp
in
out
cmp
call
fistpll
mov
frstor
je
lahf
mov
js
cmpsl
mov
and
pop
xchg
aad
into
mov
shl
mov
jnp
in
fsubrs
loopne
jb
popa
fldl2t
adc
cmp
fsubr
lds
xor
imul
jo
shrl
in
negb
sbb
pop
fcompl
mov
fsubs
sub
ret
xor
xchg
push
inc
mov
insl
dec
fucomp
repz
out
dec
std
pop
adc
loopne
mov
aad
out
pop
icebp
std
pop
sbb
out
or
and
mov
jae
roll
loope
pushf
popf
sub
std
mov
pop
lods
jl
mov
or
and
jo
in
xor
jl
shrl
inc
pushf
lea
call
pushf
jmp
xchg
mov
jle
in
mov
push
xchg
cmp
aaa
inc
fwait
xor
adc
jmp
push
leave
mov
loopne
and
and
enter
push
stc
js
lret
mov
inc
loopne
cmp
in
or
sub
imull
fwait
loope
std
jo
jb
adc
out
pop
mov
mov
cmp
pop
pop
out
imul
lea
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
xchg
rorl
cmpb
and
sub
in
decb
ljmp
ficompl
sbb
push
or
sbb
pop
cmp
ficoms
sbb
sbb
push
sbb
pushf
add
adc
fisubrl
mov
jmp
pusha
in
bound
aad
dec
inc
and
xor
inc
inc
jmp
pop
mov
cli
leave
push
das
mov
jae
imulb
orb
cmp
xorl
loope
jbe
roll
push
xchg
test
lret
inc
jae
mov
int
ror
ret
lea
sub
leave
add
ss
push
jbe
mov
fcomi
jle
dec
leave
aam
sub
sbbb
add
and
adc
popa
sahf
mov
test
sbb
icebp
stc
or
aaa
inc
push
and
pop
mov
int
pop
das
xchg
cmpsl
sahf
sbbb
push
lahf
jmp
idiv
pop
mov
iret
arpl
adc
xchg
insb
loopne
je
jne
rcr
mov
push
cli
dec
mov
push
or
ja
mov
push
lret
out
jg
gs
fisubrl
ljmp
lret
neg
jno
inc
lods
mov
pusha
pop
cltd
andb
jmpw
dec
rorl
sub
in
loopne
fnstcw
xor
pop
push
mov
sbb
pushf
les
mov
push
fcoms
fdivr
cmc
xchg
fdivs
shll
sbb
lret
xchg
inc
popf
paddb
jae
cmp
lcall
stos
ficoml
and
rorb
icebp
jp
push
iret
rorl
cmp
out
mov
adc
pop
pop
inc
sbb
push
call
pop
push
dec
add
test
arpl
std
pop
push
adc
mov
scas
mov
ds
adcl
lds
cmp
pop
imul
add
lahf
xlat
insl
ret
subb
into
add
aam
sbb
jl
aam
sub
push
inc
dec
xor
divl
jne
fnsave
cwtl
mov
mov
sub
in
pusha
cmc
inc
lea
int3
addl
rclb
jge
rcr
mov
daa
ljmp
cmpsb
shl
cmp
ror
xor
test
addb
xor
psrlw
dec
push
xchg
jne
test
push
pushf
lods
imulb
or
roll
add
sub
mov
jmp
xor
je
sarl
repz
nop
call
pop
leave
dec
ja
mov
and
push
call
add
dec
push
insl
ds
test
push
fildl
pushf
or
or
mov
pushf
shr
lock
dec
pop
sub
lock
jb
scas
mov
mov
pop
enter
inc
insb
je
push
lret
or
push
inc
daa
sti
test
ss
call
scas
pop
push
dec
add
icebp
jb
xor
subb
fwait
add
jg
aaa
pushf
movl
jmp
mov
imul
aad
ret
push
xor
mov
pop
push
stos
int3
sub
xchg
push
je
and
and
pushf
addb
mov
lds
xchg
ret
fdivr
sbbl
push
stc
or
pushf
pop
xchg
push
inc
movsb
aas
outsb
xchg
adc
mov
add
aas
popf
mov
xor
lret
dec
mov
icebp
js
xchg
cmc
mov
sub
lea
ja
inc
jo
not
inc
inc
push
mov
jmp
jne
popa
push
shll
cltd
divl
mov
movsb
out
cmpsb
pop
xor
mov
dec
dec
ja
outsl
loop
push
pop
hlt
stos
push
or
push
pop
js
mov
push
xchg
mov
stos
roll
arpl
cltd
mov
dec
xchg
jge
pop
dec
negl
jg
les
mov
lock
divb
iret
inc
cmc
bnd
fcoms
and
data16
data16
mov
sar
pop
and
mov
aad
iret
add
push
cmp
fidivrl
addb
lock
jmp
call
push
jmp
jmp
enter
not
jno
xlat
inc
les
xchg
sub
cmp
or
adc
int3
jb
push
mov
inc
aas
add
cmp
jmp
jo
in
shlb
test
lods
fwait
and
push
lock
inc
call
push
mov
xor
lds
outsl
test
lods
fists
cltd
push
push
psllq
inc
jbe
cwtl
xchg
xor
fisubl
inc
jno
push
sahf
movsb
cltd
push
cmp
inc
cmp
stc
mov
push
xchg
inc
push
sbb
cwtl
mov
xchg
mov
add
ja
dec
clc
pushl
push
mov
mov
lea
jmp
stos
shrb
outsl
dec
lahf
outsl
jne
lock
repnz
ret
mov
sub
out
fildl
aas
mov
sbb
cmp
inc
mov
mov
xor
or
jp
pop
lds
jae
mov
loopne
repnz
stc
shlb
outsl
test
mov
sub
lds
cmp
push
push
adc
xor
andl
icebp
pop
lods
aas
push
pop
call
jb
xor
not
cmp
je
cld
inc
xchg
arpl
sbb
flds
xor
push
xchg
sbb
mov
jl
notl
ret
out
inc
fxch
stos
mov
push
leave
ret
and
or
xor
out
lea
sbb
lcall
lock
jnp
gs
cmpsb
sub
or
mov
xor
jb
movsb
and
inc
inc
xchg
jge
pop
mov
push
repnz
mov
mov
push
testb
int
iret
or
jno
mov
movsb
pusha
inc
xor
shll
cmp
adc
gs
xchg
fldl2e
les
xchg
dec
out
mov
xchg
xchg
call
inc
jge
mov
mov
fwait
js
pop
sub
lahf
cmpl
lret
aas
and
inc
push
mov
mov
incb
dec
lds
jne
mov
icebp
cwtl
mov
cmp
sub
or
jmp
sub
mov
xor
cltd
sub
movsb
mov
stos
inc
dec
cs
lahf
pop
cmpsl
jmp
test
outsl
outsl
adc
mov
lret
mov
imul
insl
outsb
lds
subl
mov
lea
and
mov
dec
lods
lods
cmp
mov
lret
cmp
ret
sub
repz
add
outsb
lods
pop
xor
jmp
into
inc
loop
inc
and
cld
mov
mov
and
repnz
mov
jg
ja,pn
cmp
daa
dec
mov
mov
imul
adc
jmp
cmc
movsl
and
sub
mov
sarb
movsl
shl
xlat
jge
fwait
xchg
push
push
aad
mov
dec
sahf
mov
movsl
cli
sub
inc
aaa
pop
cwtl
push
jb
cmp
pop
scas
xlat
into
dec
jp
sub
push
pop
in
adc
push
sub
sbb
xchg
push
lods
js
into
dec
daa
xchg
outsl
int3
fidivs
daa
sbb
xor
insb
cmpl
cmp
cmpsl
cmp
rcrb
mov
fistpll
mov
mov
inc
cmp
sub
insb
cmpsl
in
out
cmpsl
push
and
int
dec
dec
imul
lods
xchg
dec
mov
mov
sbb
dec
lock
and
sbb
test
scas
push
cwtl
je
dec
xor
dec
and
mov
add
cmp
or
mov
pop
repnz
xchg
mov
push
jge
or
dec
mov
push
jns
lods
cmpsl
js
dec
fcompl
out
sub
lds
jmp
pop
lods
mov
mov
push
jmp
cltd
xchg
lret
sbb
pushf
adc
test
jae
stos
test
outsl
enter
dec
lods
sub
cmp
into
mov
push
movl
inc
clc
outsl
adc
push
into
mov
subl
cmp
mov
add
int3
adcb
mov
out
gs
jmp
sub
gs
xor
imulb
jb
mov
mov
sahf
push
stc
lods
outsl
fidivs
popf
daa
sub
ror
push
lods
pop
mov
imul
mov
in
shrl
cmp
lea
outsl
push
lods
mov
mov
out
cmp
lock
outsl
dec
add
inc
sub
xor
cmp
fdivrl
daa
cmp
jno
cmp
cltd
add
xchg
cwtl
cs
add
pop
add
in
push
dec
and
push
xchg
lock
xchg
popa
sahf
pop
pop
in
push
push
cld
in
jmp
lcall
mov
pop
push
add
inc
xor
aas
lock
stos
mov
and
add
ficompl
dec
or
fldcw
lods
cmp
aas
cld
insl
mov
scas
mov
push
add
mov
ljmp
ds
sar
ficompl
scas
je
movsb
dec
cmc
rolb
lods
aas
pop
dec
lret
add
add
inc
repnz
mov
mov
dec
mov
sub
shll
aaa
les
dec
stos
xor
gs
arpl
dec
ficoms
movsb
inc
dec
pop
mov
add
lock
jmp
add
pop
dec
mov
repz
dec
inc
sbb
mov
divb
push
mov
scas
pop
movsl
scas
cmp
lret
mov
scas
pop
sbb
cs
mov
mov
lret
test
aam
loop
adc
ror
xchg
lea
mov
daa
add
out
cwtl
imul
dec
add
jns
or
sub
sahf
lea
or
push
mov
test
dec
adc
daa
sbb
dec
push
es
sub
sub
jno
sbb
mov
mov
mov
pushf
sbb
dec
mov
add
jle
xchg
fadd
mov
adc
jns
push
xor
sub
inc
fidivrs
outsb
push
and
lods
insb
lea
out
jmp
outsb
cmpsl
cs
ret
jle
in
or
int
jns
jmp
stos
inc
into
mov
and
push
cli
fwait
lods
fmul
int
or
lds
cmp
daa
outsb
and
outsb
lods
jno
adc
cld
je
mov
inc
jmp
jge
dec
je
cmpsl
inc
lds
popa
or
arpl
test
and
push
mov
push
add
pop
xchg
scas
push
repz
in
std
xchg
jle
add
hlt
jbe
incl
inc
xchg
int
scas
and
mov
lds
mov
ficompl
mov
jbe
sub
cmp
cmpsl
mov
dec
sub
add
cwtl
dec
in
pop
fldcw
into
pop
xor
inc
cmp
mov
imul
pop
lods
adc
imul
xor
aaa
insb
adc
mov
int
mov
stc
stos
mov
mov
ret
pop
sub
notb
mov
push
fnsave
push
sarl
add
xchg
adc
insl
xchg
cmpsb
cmp
fwait
push
cltd
outsl
or
xor
sub
fwait
xchg
dec
mov
xlat
outsb
lcall
stos
inc
shlb
scas
jl
xlat
adc
and
cmp
jecxz
cltd
lea
clc
jg
jb
xor
sahf
out
sbb
xor
sub
sub
add
push
sub
xchg
insb
aaa
dec
call
xchg
mov
ret
xor
aam
std
aad
cmpsl
rcrb
mov
pop
mov
push
call
cmp
add
push
popf
int3
cltd
fs
pop
lret
jl
and
mov
pop
mov
arpl
filds
fwait
movsl
dec
xor
mov
sbb
mov
xlat
and
cmc
mov
mov
inc
mov
adc
jmp
push
mov
pushf
jmp
pop
das
popa
movl
scas
cs
outsb
lret
ret
mov
in
hlt
mov
enter
fdiv
test
arpl
sbb
sub
sub
lock
cwtl
push
test
cs
aam
or
ja
sbb
and
lods
scas
lds
push
dec
in
sahf
mov
or
xchg
insl
in
jb
mov
add
dec
sti
leave
test
into
movsl
sbb
sbb
cmpsl
xorl
insl
pop
pop
leave
bound
lret
jne
inc
popa
frstor
mov
add
jne
inc
out
lods
fdivrl
lea
lds
cwtl
xchg
fisttpl
hlt
dec
mov
scas
aad
in
cli
mov
mov
sub
jae
sahf
sub
cltd
jns
lds
mov
sub
movsl
push
cwtl
jmp
js
xor
leave
or
or
popf
jb
xchg
mov
cs
xchg
cmpsl
cs
jns
imul
cld
loopne
ljmp
sbb
test
cld
adc
cmp
mov
lds
dec
je
stos
in
in
test
push
and
dec
outsl
dec
mov
sub
ret
insb
cld
and
pushf
test
ss
shrl
lea
inc
testl
pushf
jle
cmp
mov
inc
push
movsl
cmp
imul
dec
xchg
adc
fadds
mov
lds
adc
xlat
pushf
sahf
mov
pushl
xor
sahf
movsl
inc
stos
add
adc
sbb
pop
aad
pop
or
xor
sbb
outsl
mov
js
sti
xor
add
outsl
cmp
cmc
ja
rorl
aad
add
int
fsubs
loop
push
and
popf
ret
mov
pop
pushf
sarl
sbb
in
mov
out
pop
or
sub
push
popf
cmpsl
loop
cmp
mov
out
lcall
push
jl
inc
mov
push
insl
popf
mov
and
dec
rcrb
push
xchg
mov
push
addb
idivb
mov
cmc
paddsb
mov
scas
movsl
subb
test
test
add
cmp
cmp
mov
sub
dec
in
mov
icebp
adc
mov
adc
scas
pop
cmpsl
insb
mov
loopne
scas
cs
jo
jmp
mov
cli
in
lods
cmp
outsb
sti
cmpsl
lds
pop
je
add
and
mov
cmpb
or
divb
addr16
xchg
or
pop
dec
cli
sahf
popf
aam
addb
test
xchg
scas
xchg
ficoml
inc
push
and
fmuls
out
outsb
mov
dec
adc
or
mov
addl
adc
pop
in
cmpsl
sub
push
std
cmpsb
pushf
out
push
sub
xor
cld
test
add
out
lds
inc
movsl
stos
cli
in
shl
fmuls
lret
subb
pop
leave
mov
lcall
sbb
int3
xchg
pop
icebp
sbb
lds
mov
std
mov
adc
mov
movsl
ret
aas
pop
xchg
mov
inc
cmp
jnp
mov
xchg
xchg
sbb
sahf
test
pop
testb
and
mov
call
in
mov
bound
iret
les
fisttpll
push
pop
sbb
add
add
je
in
dec
aad
mov
stos
loopne
fucomi
cli
lock
xlat
pop
mov
mov
lahf
loop
outsl
pop
xchg
pop
mov
std
jp
stc
dec
mov
aad
repnz
stos
mov
mov
mov
je
popa
clc
push
mov
ss
fsubs
mov
in
stos
sub
pop
fidivs
push
repnz
pusha
dec
sub
out
mov
lods
loop
inc
add
iret
mov
mov
push
loopne
xchg
fwait
push
popf
outsb
sar
cmp
jmp
mov
mov
popf
imulb
sbb
ror
jnp
dec
mov
sub
movsb
push
cmp
add
push
addl
or
inc
mov
xor
outsl
je
movsb
scas
jl
mov
mov
add
notb
mov
repz
cmpsb
adc
outsl
imul
je
ja
nop
inc
push
out
cltd
sahf
push
mov
xor
stos
daa
push
shlb
or
sbb
aas
cs
cmp
mov
stos
dec
dec
vmread
sub
lea
jne
clc
out
add
dec
add
sub
test
decb
add
mov
inc
xlat
jecxz
or
mov
scas
in
fmulp
gs
or
jnp
inc
sub
popf
mov
adc
inc
cmpsl
jne
imul
sub
cli
dec
das
mov
push
jle
add
cmp
and
div
stos
or
scas
cmpsl
mov
mov
sub
sarb
cmpsl
mov
dec
and
mov
in
or
enter
push
jbe
sub
jecxz
sbb
mov
mov
lods
mov
lds
fwait
push
inc
mov
cs
inc
jl
mov
lea
lcall
xor
and
out
cmpsl
pop
xor
cmp
jecxz
xchg
mov
jmp
mov
clc
lods
sub
je
mov
scas
roll
lods
add
aam
sbb
std
cmc
repz
xchg
stos
loopne
lock
sub
pop
inc
mov
xor
sahf
lds
xchg
sbb
inc
stos
into
dec
ror
sub
and
jmp
mov
into
inc
xchg
push
sub
in
add
adc
mov
ds
lods
mov
mov
imul
popf
dec
lret
adc
or
push
popf
mov
ss
xchg
int3
rcrb
cmpsl
shll
outsl
push
das
inc
int
or
repz
jne
pushf
inc
add
sbb
jp
sbb
sahf
std
jmp
add
daa
jecxz
ss
lret
jb
shrb
push
sub
jle
mov
mov
cmpsl
dec
leave
jb
mov
out
daa
pop
add
mov
adc
jmp
mov
movsl
aas
ljmp
adc
mov
cld
aad
shlb
int
loope
or
xchg
fldcw
mov
ret
out
mov
aaa
enter
aas
dec
xor
sub
in
dec
lods
movsl
adc
stos
pop
lret
mov
add
movsl
jecxz
enter
hlt
inc
shr
stc
pusha
xchg
int
fistps
sbb
inc
int
dec
lods
sahf
xchg
shlb
add
push
inc
dec
push
fwait
enter
cmp
add
sub
jb
cmpsb
sbb
cmp
scas
pop
mov
adc
push
fucomp
mov
cltd
inc
fstp
fwait
dec
ret
sahf
fnstenv
mulb
ficoml
call
mov
bound
inc
mov
popf
cltd
std
mov
test
enter
scas
iret
out
add
fimuls
pop
in
sub
lds
dec
repz
shll
iret
adc
rorb
gs
pop
and
xor
stc
nop
adc
scas
cmp
aam
xor
jecxz
push
pop
test
mov
neg
xor
or
fcmovne
std
orb
fcmovbe
adc
cmp
ja
call
inc
jns
aas
lods
lds
inc
mov
dec
outsl
mov
or
and
clc
movsl
int3
int
inc
push
xchg
push
aad
mov
das
shrl
mov
es
mov
mov
sub
outsl
or
and
xchg
es
mov
fnstsw
scas
add
es
jnp
lea
xchg
inc
ss
mov
fisttpll
sub
lcall
mov
addb
or
push
call
lock
pop
scas
psraw
outsb
dec
fistpl
lcall
je
lds
shrb
sbb
shrl
jbe
in
inc
ja
mov
dec
mov
cmpsl
js
mov
sub
scas
push
mov
movsl
push
ljmp
fidivs
sbbb
cmp
and
dec
popf
iret
lds
xor
stc
iret
lret
cs
mov
mov
push
or
leave
jmp
adc
repnz
jbe
xor
or
or
xlat
rcrl
icebp
jle
lret
les
cmp
mov
pop
add
push
ret
daa
shll
jbe
jne
mov
loopne
jmp
lea
mov
sub
lds
inc
inc
inc
pop
mov
xor
out
and
or
stos
mov
jle
stc
add
loope
cld
sub
or
mov
into
subl
outsb
int
es
in
leave
shll
mov
sahf
mov
adc
mov
lcall
addr16
mov
cs
mov
inc
icebp
data16
mov
mov
push
call
lods
test
sub
mov
shrl
mov
xchg
cmp
movsb
push
jno
dec
scas
xchg
shr
jo
ret
mov
jl
in
test
mov
hlt
sbb
push
xchg
lcall
mov
mov
push
jno
insl
lret
xchg
mov
ljmp
movsl
pop
mov
sbb
rclb
in
mov
jge
stc
hlt
inc
js
sub
call
daa
xchg
xor
in
rorb
shll
mov
add
jle
and
jl
mov
inc
mov
rorb
shll
pop
dec
xchg
xchg
scas
jne
insl
push
fcomp
outsl
mov
shrl
inc
add
out
or
imul
test
mov
int
mov
xor
pop
das
sbb
daa
cmp
sub
pushf
mov
sahf
pop
xor
cmp
in
mov
pop
pop
in
movsl
std
push
push
rcl
inc
js
sub
sbb
mov
jo
scas
shrb
call
pop
into
adc
cwtl
mulb
ret
fcmovnu
jle
mov
ja
les
mov
add
push
or
mov
mov
pop
mov
or
shl
rcrl
xchg
jno
lds
fldcw
js
in
insb
fsubl
mov
mov
or
jne
mov
int3
mov
mov
adcl
out
outsb
stos
jle
jmp
test
stos
aaa
mov
cmp
out
cltd
lods
sarl
addb
rep
je
cli
jge
sbb
in
jle
xor
pop
mov
mov
outsb
syscall
cmp
pushf
lods
sub
fwait
into
adc
sbb
sahf
add
outsb
push
pop
jmp
dec
sub
jmp
xor
adc
cltd
jno
lods
iret
mov
cmp
mov
and
cs
dec
lods
pop
add
sub
and
pusha
out
add
sub
ljmp
cmp
subb
pop
xlat
in
xchg
mov
and
out
repz
inc
mov
sbb
mov
and
scas
in
inc
xlat
push
repz
rol
add
sbb
pushf
insl
cmpsl
fadd
mov
nop
or
test
fwait
outsl
into
lods
cld
dec
mov
xor
xchg
aaa
mov
and
rolb
mov
xchg
mov
mov
sbb
push
into
mov
mov
sbb
stos
sarb
dec
push
loope
inc
pop
daa
adc
es
scas
mov
pop
mov
adcb
and
int
jmp
lock
fildll
lret
jle
pushl
xor
orb
sub
mov
test
inc
stos
adc
jl
cmp
call
mov
add
mov
inc
dec
lods
scas
push
aaa
cmp
insl
sbb
cmpsl
xlat
lds
ljmp
cld
lea
test
or
bound
xchg
pop
sahf
jge
add
inc
aaa
cwtl
jle
adc
mov
add
push
insl
fisubrs
sbb
sbb
daa
add
push
in
mov
and
adc
div
dec
push
jg
fidivs
leave
jns
outsb
sbb
cmp
lds
pop
and
pop
daa
lret
or
aas
mov
popf
pop
mov
inc
and
aaa
stos
test
mov
shlb
xor
xchg
cmp
repz
mov
int
lcall
mov
xlat
mov
add
ljmp
cmp
lcall
push
jb
cli
push
nop
xchg
movsl
jle
sub
cmp
es
adc
xor
mov
dec
xchg
hlt
test
mov
fwait
std
repz
lds
sub
mov
xlat
mov
mov
add
int
xchg
pop
mov
lcall
mov
sub
lds
inc
mov
sbbb
pusha
fldt
hlt
push
das
pop
adc
xor
sub
cwtl
jne
jmp
dec
fcoms
mov
mov
sti
cmpsb
mov
iret
int
rcrb
add
mov
insl
scas
loop
mov
cld
sbb
shr
adc
cmpsl
fstpt
cmp
and
inc
cmp
sub
iret
mov
mov
cmp
sti
mov
daa
ret
in
jge
sub
mov
cwtl
stos
fsubs
cmp
adc
and
inc
jmp
dec
sbb
fistpl
lahf
repz
in
outsl
sub
and
repnz
lea
adc
and
enter
fcomps
and
mov
cmp
movsl
sub
cmc
push
repz
cwtl
mov
test
jecxz
leave
dec
bound
rorl
cltd
outsb
pop
imul
bound
adc
mov
scas
pop
mov
sub
sti
ja
ja
fwait
lods
mov
add
lods
lock
aas
jb
imul
or
adc
jmp
repz
test
push
fwait
imul
lods
bound
mov
jns
inc
and
xchg
adc
shr
in
cmp
add
inc
adc
sbb
in
scas
sub
jg
mov
pop
lock
repz
nop
sub
jle
dec
repnz
lods
add
inc
aam
fwait
mov
outsb
hlt
loopne
or
xor
add
lds
sub
lret
and
jmp
fstpt
aad
aad
dec
xchg
ja
inc
mov
cwtl
add
gs
lods
outsl
and
adc
cli
jns
cmp
mov
lds
lahf
inc
rclb
addb
add
les
in
sbb
add
daa
mov
fwait
cs
stos
lret
imul
pop
pushf
loope
repz
fsubp
sub
fdiv
cmp
lock
lods
mov
clc
insb
nop
pop
sarb
mov
shlb
dec
loope
out
mov
dec
stc
scas
mov
popf
jg
add
movsl
push
cmp
imul
fldt
inc
mov
mov
ds
lds
mov
cwtl
imul
and
leave
cmp
sbb
outsb
push
mov
sahf
push
test
fadd
mov
dec
mov
negb
fistps
inc
in
dec
dec
push
xorl
fildll
adc
insl
or
int
jns
sub
or
xchg
scas
add
sbb
aaa
scas
mov
mov
pop
mov
jle
daa
iret
add
cmpsl
inc
shlb
shrb
jns
add
xchg
and
inc
mov
test
xchg
mov
sbb
imulb
cmp
and
stos
or
mov
cli
mov
cmp
fidivs
sbb
cltd
xor
cmp
pop
mov
lds
xchg
or
add
mov
or
cmp
enter
fsub
sub
rorb
mov
cmp
div
lods
movsb
mov
sbbb
mov
out
or
leave
ljmp
push
sahf
test
mov
xchg
mov
lds
jmp
mov
xlat
rol
fadds
cmpb
stos
test
inc
xlat
in
and
inc
lds
lcall
mov
jae
xor
xchg
mov
mov
add
and
out
dec
adc
xor
je
outsb
sbbb
or
mov
sub
mov
xor
mov
cmp
xchg
fdivs
hlt
pop
push
stos
int
mov
cmpsb
das
push
loope
cs
movsl
xchg
pop
inc
mov
dec
push
inc
subb
fdivr
pop
dec
insb
fwait
insl
push
outsb
inc
or
bswap
xchg
cmp
rcll
or
cld
data16
aaa
imul
xchg
pusha
fs
push
stc
hlt
adcb
mov
cld
mov
movsl
add
test
add
sbb
lret
insl
fsts
mov
xchg
jecxz
xchg
ret
cmp
mov
pop
dec
stos
cmp
aaa
rorl
loope
pushf
shl
sti
sbb
testl
or
xlat
icebp
lods
out
pop
dec
into
mov
mov
out
shrb
jl
lea
fwait
lds
mov
sub
jg
mov
adc
mov
loop
cmp
jns
ror
ret
imull
sub
fwait
aam
adc
mov
movsl
shrb
xchg
dec
scas
adc
stos
arpl
xor
mov
dec
leave
cmp
jl
mov
aad
sbb
sbb
sub
sub
test
test
pop
mov
fucomi
mov
movsb
pop
in
dec
sub
mov
pop
lods
fimull
xchg
pop
push
mov
int
lret
add
movsb
test
das
xor
ss
movsb
test
sub
mov
inc
add
push
scas
inc
jbe
mov
jge
pop
xor
test
sarl
cmc
jbe
out
sub
push
inc
mov
and
jg
mull
xor
push
stc
in
mov
loopne
inc
call
dec
xchg
popf
je
lret
sbb
andl
into
mov
push
push
adc
adc
pop
inc
or
inc
add
icebp
jns
idiv
pushf
fcmovnb
outsl
cmpsl
push
lea
fwait
mov
push
xor
mov
fcmovnb
int
bound
mov
outsb
imul
xor
sahf
cli
lods
mov
xor
movsl
xor
jae
add
mov
lods
in
push
adc
and
dec
pop
dec
lcall
xlat
movaps
int3
sub
cvttps2pi
popa
int
or
movsb
jo
test
cmp
xchg
mov
lea
push
pop
push
add
fucompp
and
movsl
pop
pop
mov
call
pop
out
xchg
mov
pop
test
js
push
sbb
lret
adc
shl
lods
inc
cwtl
sub
cmp
add
or
inc
in
repnz
lock
pop
mov
dec
push
in
xchg
mov
aam
std
fiaddl
stc
insb
lds
popa
mov
popa
rclb
rolb
push
sub
add
xchg
pop
testb
mov
adc
inc
add
scas
xchg
pop
movl
xchg
data16
mov
mov
or
in
scas
jns
lahf
dec
fmull
mov
jae
push
jno
mov
pusha
jge
sahf
sbb
call
xchg
jne
and
pop
add
adc
leave
lods
pop
sub
clc
movsl
jge
mov
insl
adc
adc
movsl
push
lret
xchg
push
movsl
fwait
and
inc
pop
hlt
jl
adc
mov
lock
add
pop
jmp
cwtl
jo
sub
sbb
mov
sbb
sbb
in
popa
and
mov
jo
cld
add
xchg
roll
xchg
test
movsb
push
int
sti
dec
mov
adc
push
mov
cmp
xchg
outsl
mov
aas
popf
int3
enter
mov
dec
loope
xor
jl
cltd
movsl
jb
bound
sbb
mov
or
cltd
lcall
cltd
mov
cmc
mov
xor
mov
fidivrl
popa
pop
push
pop
cmp
vminpd
mov
mulb
fildl
lods
ret
mov
imul
pop
inc
or
sbb
xor
inc
mov
push
je
in
mov
repnz
cltd
sar
hlt
dec
stos
dec
movsl
or
pop
cmp
jnp
xorb
icebp
lret
lods
adc
adc
ja
out
jae
mov
jb
and
fldl
mov
jbe
inc
dec
test
mov
mov
push
jecxz
jne
int3
lds
scas
sbb
pop
dec
leave
fdiv
add
jmp
enter
pop
dec
bound
stos
mov
outsl
insl
cmpsl
pop
out
scas
xchg
test
dec
nop
popf
add
cmp
lods
fnsave
daa
nop
lahf
cld
lds
or
in
xor
jns
shll
loopne
lahf
stos
in
sbb
xchg
fstl
lcall
inc
adc
cmp
mov
push
cmp
mov
push
mov
shll
hlt
rorl
xchg
bts
xor
xchg
aam
outsb
loopne
aaa
xor
mov
mov
int
shlb
adc
add
pop
mov
mov
push
mov
mov
int3
mov
movsl
sub
scas
sti
pop
sbb
rcrb
jae
lds
mov
in
outsb
int
xchg
imulb
or
fld
push
ds
mov
or
xorl
imul
pop
adc
out
lds
outsb
cmp
pop
stc
push
push
xor
sbb
pop
push
pop
dec
repz
lret
into
and
sub
xchg
rclb
adc
or
ljmp
in
fldenv
leave
pop
lds
xor
jmp
and
mov
inc
daa
or
cwtl
pop
fldpi
jne
lds
dec
add
mov
mov
cmp
jno
bound
xor
mov
jne
stos
xchg
aas
mov
pop
in
mov
loope
xlat
pop
mov
pushf
push
add
pop
les
pop
sti
neg
movsl
mov
push
mov
aam
mov
push
pop
adc
lods
mov
add
cli
lods
fwait
idivb
shll
jb
mov
jmp
testb
ror
loope
cld
shr
call
jmp
fimuls
std
in
mov
ljmp
mov
dec
cmp
jmp
pop
xchg
xchg
fninit
mov
lds
daa
sbb
add
push
mov
push
ljmp
cmpsb
pop
mov
loope
mov
dec
sbb
sbb
sbbl
dec
stos
enter
xchg
inc
xor
xchg
mov
mov
fnsave
imul
loope
fstpt
mov
leave
dec
push
mov
cltd
enter
test
pushf
sbb
insb
outsl
enter
jns
cmpsl
imul
jae
pop
lds
adc
mov
mov
pop
sub
and
hlt
pop
lods
movsb
pop
push
xor
cld
cmc
iret
push
mov
pushf
and
in
xchg
push
jns
imul
lahf
ret
test
cmpsl
xchg
sbb
xor
xchg
lret
cltd
cmp
inc
pop
fld
fisubrl
stos
into
jmp
push
sub
adc
fisubrl
clc
sbb
mov
mov
das
fdivrs
pop
sub
fdivs
sbbb
mulb
add
out
jne
sub
push
sbb
je
call
mov
mov
push
mov
fwait
inc
mov
sti
pop
push
je
lds
inc
or
xchg
xor
and
outsl
pushf
push
adc
xchg
fucomi
adc
cmp
pop
cmpsb
xor
mov
imul
jecxz
push
sub
sahf
pop
mov
mov
in
mov
xlat
ret
jo
pushf
fwait
and
hlt
mov
movsb
sub
fsubrl
jbe
ret
pusha
stc
add
or
push
and
leave
xlat
fidivs
or
push
mov
lcall
out
pop
adc
and
dec
pop
test
popf
outsl
int
in
xlat
enter
sub
lea
popf
push
adc
xchg
mov
xchg
cmpsb
pop
cmp
cmp
adc
sub
jl
mov
lcall
aam
stos
outsl
jnp
push
lret
cmp
cmpsl
icebp
lds
test
mov
jmp
movsl
cmp
dec
cmp
xor
dec
sbb
and
xchg
ljmp
fidivs
mov
mov
bound
push
scas
arpl
std
sti
outsb
aaa
lret
xchg
pop
mov
fs
inc
test
daa
adc
shrl
dec
or
pop
lods
sub
adc
push
les
fsubs
imul
lds
xchg
push
repnz
xchg
lds
std
ja
lcall
mov
gs
ja
xchg
sub
mov
vdivpd
pop
imul
lods
and
pop
fwait
add
daa
or
sub
jb
insl
xor
outsl
or
mov
cld
push
mov
movsb
ja
not
push
or
mov
lock
inc
aaa
dec
pop
or
imul
xchg
scas
addr16
dec
ljmp
jnp
int
cmp
sub
arpl
in
sub
push
test
faddl
add
imul
xor
je
xor
cld
scas
add
sub
stos
jnp
cmpsl
imul
xor
insl
cmp
lds
inc
subl
and
hlt
shlb
lds
jmp
jle
or
cmp
pop
iret
sar
aad
scas
lds
jp
sub
sub
decb
add
cmc
popf
pop
mov
lret
lds
insl
popf
lret
mov
scas
pushf
and
das
popf
hlt
add
cmp
and
or
push
adcl
and
iret
std
push
sbb
fucomi
jecxz
add
xor
lods
adc
loop
test
rolb
int3
lds
lods
sti
mov
jo
mov
inc
test
push
mov
push
mov
dec
mov
jns
inc
inc
pop
mov
pop
or
adc
lahf
pop
lds
std
cltd
jmp
mov
jns
lcall
fstps
push
cmp
pop
aad
sub
lcall
mov
or
sub
movl
subl
ljmp
cwtl
pop
lods
lods
movsl
mov
repz
in
shlb
lahf
inc
test
enter
test
les
cli
push
insb
data16
pop
outsb
push
sub
and
mov
sub
jo
fsubl
inc
jae
pop
aaa
stos
ja
into
shrl
rorb
insl
sbb
fldenv
mov
xchg
dec
pop
int
daa
lret
sub
or
push
dec
inc
add
xor
cld
jne
push
lds
fdivl
mov
pop
and
xchg
and
out
fmull
mov
hlt
cmpsl
pop
xchg
pop
pop
in
jg
popa
jbe
or
imul
push
and
pop
lds
cld
sub
inc
leave
lods
sub
adc
mov
add
cwtl
lea
out
push
mov
xchg
lahf
xchg
iret
jge
cmpsb
fdivrs
dec
lods
bound
add
int
fnsave
mov
lahf
mov
cli
sub
cld
pop
stos
sub
data16
hlt
dec
faddp
arpl
hlt
jns
add
mov
pop
imul
loopne
cmpsl
push
sub
dec
loop
enter
jecxz
hlt
pop
lret
and
notb
aaa
inc
cmp
popf
outsl
jno
into
test
jecxz
mov
and
icebp
popf
xchg
adc
fstl
mov
mov
inc
dec
sti
out
dec
xchg
and
xor
out
or
outsl
negb
or
test
sbb
lea
or
in
mov
and
mov
mov
add
pop
push
mov
arpl
sbb
sub
fiaddl
loope
in
int
clc
in
psubusb
mov
mov
ret
std
mov
divb
enter
fwait
vpand
ret
add
in
or
outsb
movsb
xlat
psubsb
jmp
add
movsl
mov
mov
inc
icebp
sub
add
test
cmp
lods
nop
mov
iret
xchg
aam
cmp
arpl
push
nop
aas
fwait
bound
rorl
cmpsb
cmpsl
ljmp
clc
loope
push
loop
xchg
inc
sub
fsubrl
sub
jnp
loope
mov
div
fists
imul
test
xchg
imul
out
es
mov
cmp
lods
pop
in
out
mov
cmpsb
fadd
gs
pushf
outsl
loope
push
loope
testb
xchg
jp
dec
xchg
out
xchg
mov
mov
bound
fldl
or
mov
bound
push
and
jp
out
pop
pop
orl
sahf
fldl
jmp
push
fwait
aaa
lretw
mov
xchg
ret
and
and
mov
mov
push
push
sub
or
dec
pop
sbb
jne
aaa
clc
push
sbb
aaa
pusha
sahf
or
cmp
mov
je
mov
enter
adc
sub
jmp
lods
in
out
and
int
mov
inc
dec
cmpsb
lds
js
xor
lahf
lds
inc
inc
add
push
shll
sbb
push
mov
fisttpll
inc
dec
hlt
rolb
cmp
pop
outsl
lea
ss
daa
adc
mov
or
pop
addr16
enter
fstpl
push
imul
in
mov
adc
jae
xchg
lods
in
mov
or
lcall
adc
pop
imul
repnz
daa
sub
loopne
in
scas
add
push
sbb
fbstp
push
iret
xor
xchg
je
jmp
arpl
or
cmp
mov
cmp
lods
movsl
xor
dec
sub
xlat
clc
scas
out
mov
loope
call
outsl
test
jmp
dec
xchg
jns
and
ljmp
push
aad
pop
cmp
stc
jg
movsl
xchg
mov
in
out
stos
int3
mov
out
cmp
ljmp
xor
faddl
mov
mov
into
hlt
das
mov
sub
movsb
sbb
pop
int
adc
loope
mov
fcmove
lds
sub
or
push
mov
add
push
push
pop
leave
negl
nop
xchg
enter
jmp
or
mov
dec
outsb
or
dec
fwait
xchg
movsl
scas
xchg
xor
into
icebp
lret
loope
dec
out
lds
sti
loop
mov
xorps
dec
mov
rcrb
xchg
fnsave
outsl
popa
pop
shll
lds
sbb
repnz
sub
xchg
out
mov
into
mov
test
pop
mov
sub
lods
vmovddup
int
add
sub
divb
mov
sub
jae
daa
adc
dec
or
es
mov
jle
mov
in
or
sub
test
lds
or
scas
jmp
xor
xlat
mov
push
sbb
jo
jle
inc
sbbl
add
fs
adc
or
insb
insl
sbb
fwait
dec
aam
xor
dec
lcall
pop
inc
int
sub
daa
iret
jmp
aas
into
lods
mov
pusha
adc
cli
fmul
sbb
test
adc
push
mov
movsl
shrl
scas
dec
lahf
or
mov
es
in
pop
clc
sub
dec
movsl
outsb
icebp
pop
and
int3
insb
push
xor
xor
xchg
in
cli
add
dec
pop
and
out
vpandn
andl
insb
pop
jne
imul
mov
xor
icebp
mov
cmp
mov
lret
lret
sub
push
cs
loop
or
push
push
dec
xor
aas
jg
in
mov
jnp
cs
sub
mov
inc
push
shrb
pop
dec
outsb
loopne
imul
or
dec
add
cmp
mov
inc
pop
push
outsl
mov
sbb
xchg
cmp
call
jne
inc
pop
inc
imul
outsb
cmp
test
xor
or
lock
stos
pop
movsl
outsb
das
push
or
roll
fwait
data16
mov
cmpsl
add
sub
fiaddl
and
adc
hlt
xlat
addr16
test
movsl
and
pop
push
outsl
add
sahf
mov
lret
cmp
push
pop
xor
fwait
xor
fcmovne
jno
xchg
inc
fmul
mov
int
xchg
test
nop
in
iret
lds
xor
pop
sub
jo,pn
in
enter
push
inc
fcom
notb
movsl
scas
nop
fimull
jo
fwait
notb
fcomps
movsl
ds
orl
out
xor
insb
xlat
lds
test
outsb
jnp
cmp
push
lods
sub
lods
sub
mov
cmpsl
xchg
ljmp
ret
mov
lds
imul
movsb
inc
hlt
mov
pusha
cmp
sbb
pop
lock
daa
add
insb
rcrb
daa
fwait
mov
dec
test
cltd
mov
popa
lods
je
repz
pop
xchg
xchg
jbe
daa
inc
scas
rorb
vmovupd
xchg
nop
rorl
xchg
xchg
mov
jp
add
pop
int
lahf
lcall
psubb
aad
mov
lret
mov
fisubrs
lds
mov
mov
sub
pop
outsb
repnz
stos
jmp
movsl
fidivrl
inc
cmp
xchg
add
sbb
add
push
mov
gs
cmp
fcmove
mov
ss
xor
sbb
sbb
fdivr
mov
outsb
pop
std
mov
add
mov
or
add
hlt
and
sti
xchg
in
mov
popf
mov
mov
inc
sub
pop
jmp
dec
scas
add
sub
loop
inc
roll
jmp
scas
push
in
inc
xchg
jae
dec
xchg
sub
les
push
xlat
aam
int
inc
testl
mov
push
push
dec
sbb
dec
sub
xchg
cmp
outsb
dec
lods
mov
xchg
imul
xchg
cmp
pop
in
sub
adc
fimuls
xor
cmp
repnz
pop
lds
ds
lods
mov
lds
popf
movsl
push
cmp
mov
aam
mov
nop
mov
scas
nop
int3
fcmovnb
sbb
mov
and
adc
scas
adc
mov
jmp
pop
outsl
leave
les
cmc
pop
add
std
jns
and
ret
js
xchg
push
pop
dec
insb
cmp
add
lret
cmpsl
rcrl
call
fnstsw
imul
sbb
sti
stos
movsl
int
fcomps
push
adc
push
or
dec
add
jp
std
mov
ss
add
clc
push
daa
and
add
dec
sbb
insb
testl
sub
jg
cmp
int
xchg
and
dec
cltd
or
aas
mov
sbb
or
mov
mov
sub
mov
lret
movsl
inc
mov
das
lods
add
sub
mov
jnp
mov
repnz
int3
int
ficoms
sti
mov
xor
lcall
xor
cmp
fcmovb
mov
adc
or
cmp
mov
sub
mov
mov
pusha
cmp
pushl
inc
jg
sbb
daa
pop
lea
lods
out
jp
lods
sbb
imul
test
int
hlt
push
out
xchg
sub
mov
add
mov
sbb
addb
fwait
clc
adc
add
sub
xor
adcb
adc
lea
insl
add
or
fcoms
rolb
cmp
pusha
sbb
xchg
fsubrs
mov
push
mov
dec
sub
daa
pop
cmp
outsl
dec
inc
xchg
stos
cmp
popa
sbb
pop
bound
adc
pop
pusha
out
sub
jge
mov
cmp
imulb
fs
movsl
cld
dec
and
lahf
jnp
jp
int
pop
dec
push
add
fsubl
shlb
mov
dec
outsb
inc
mov
fistl
std
ss
sub
and
jae
or
dec
jg
mov
cmc
xchg
add
push
push
cmp
sub
ss
loopne
rclb
in
rcrl
lds
sub
rcrb
adc
or
movsb
or
sbb
out
mov
out
mov
addr16
cli
mov
test
movsl
leave
push
mov
dec
lea
fisttpll
add
pop
ja
adc
push
jne
add
stos
movsl
jl
sbb
xchg
pcmpeqb
stc
cmp
adc
neg
nop
cmc
cmpsl
in
in
shll
fwait
jge
in
call
mov
dec
cli
fnsave
cmp
insl
in
cbtw
mov
movsb
inc
movsl
scas
push
add
adc
fiaddl
pop
inc
inc
and
rclb
ja
lds
stos
pop
loop
sbb
out
add
pop
or
jg
aaa
pop
push
out
aaa
lods
lock
or
repz
sub
ret
into
and
push
loope
lock
xor
ret
xchg
fxch
sub
mov
and
movsl
sbb
jl
add
sub
lahf
leave
cmpsb
cwtl
mov
call
call
mov
pop
ret
cmp
mull
std
test
sarb
mov
fldenv
out
add
ljmp
push
sbb
mov
lds
cltd
mov
sbb
pop
lods
add
movsb
xlat
cmc
dec
and
mov
inc
lret
jg
sbb
mov
xlat
repz
xchg
inc
ja
inc
inc
or
test
aaa
test
cli
in
add
xor
insl
out
shl
cmpsb
inc
in
fs
pop
dec
xchg
inc
push
cmpsl
popa
es
sub
frstor
shlb
test
movsl
test
aaa
cmp
push
or
jne
pop
outsb
add
fisubrl
in
insl
mov
sti
inc
xchg
outsl
mov
test
cmc
lret
sti
pop
sbb
loopne
or
mov
lods
dec
inc
les
mov
mov
sub
and
into
stos
loop
jl
pop
push
test
imul
cmpsl
fsts
in
ds
lret
adc
int
in
mov
sahf
js
ds
lahf
mov
lds
punpckhwd
scas
fcomps
inc
aas
pop
pop
out
aas
sbb
pop
outsl
stc
xor
outsb
dec
sub
bnd
sub
mov
pop
mov
aam
lock
jnp
add
mov
in
pop
testb
jmp
aas
lds
push
xchg
sbb
pop
movsl
mov
hlt
jl
pop
mov
jbe
add
mov
std
pushf
movsb
xorb
popl
sub
push
ret
movsb
xor
xchg
ret
push
inc
sbb
xchg
movsl
jo
std
adc
add
adc
out
sub
aaa
cmp
add
rorb
adc
pop
subb
pop
mov
adc
or
ficompl
sub
lcall
mov
adc
repz
xchg
stos
lds
cmp
xchg
push
adc
out
movsb
jecxz
in
push
int
or
aas
es
repnz
aaa
sbb
push
sbb
sub
in
dec
mov
or
dec
repnz
mov
push
jbe
pop
movsl
aam
fwait
lods
cmp
dec
fsubrl
jbe,pt
add
repz
subl
popf
mov
stc
jmp
repz
jns
fwait
or
mov
mov
fisubs
cmpsl
xchg
inc
outsb
lds
lcall
outsb
negb
test
outsl
lods
jnp
mov
jb
sbb
mov
mov
arpl
cwtl
ret
frstor
mov
cmpsb
cmp
enter
dec
adc
pop
and
dec
mov
cmp
ja
cltd
pushf
clc
cwtl
xor
xchg
mov
xlat
aam
imulb
dec
pop
je
mov
pushf
stos
inc
and
adcl
sub
and
hlt
push
jmp
cltd
push
int
lahf
addr16
and
enter
jge
mov
test
fwait
push
outsl
pop
mov
mov
negb
sbb
inc
add
imulb
sbb
lods
push
xchg
cmpsl
loopne
out
leave
lods
xchg
push
dec
xchg
movsl
psubsb
sub
loop
lods
rol
movsl
mov
lds
fistpl
push
outsl
fisubs
pop
sti
pushf
leave
sbb
and
movb
pop
sbb
dec
xchg
adc
sbb
faddl
push
divl
inc
popf
lea
negl
aas
inc
xlat
sub
xchg
jecxz
mov
xchg
mov
inc
inc
fildll
mov
arpl
sbb
aad
and
xor
or
nop
adc
ss
cmpsb
sbb
cmp
les
mov
out
xor
pop
fsub
icebp
jbe
or
inc
aaa
scas
test
fsts
pop
fadds
mov
pop
push
outsl
jne
mov
addr16
clc
add
cmc
out
das
ret
cwtl
pop
stos
imul
or
mov
add
enter
test
clc
mov
push
sbb
inc
cltd
lea
out
xchg
sub
call
adc
and
int
inc
das
mov
sbb
mov
test
das
sbb
das
mulb
cltd
or
pushf
ds
push
arpl
loopne
xchg
xchg
cmp
pop
mov
dec
outsb
mov
push
mov
mov
lahf
fisttps
vmwrite
inc
int
add
push
cmp
xchg
or
ja
jb
mov
pop
or
xor
aad
adc
ss
pop
sub
mov
std
and
mov
or
push
gs
pop
stc
add
mov
xlat
lock
push
and
inc
xchg
movsl
cmp
mov
scas
ret
test
mov
inc
test
adc
xor
dec
inc
pop
pop
adc
in
xchg
cmp
push
push
xchg
mov
mov
pop
les
and
ja
sbb
xchg
add
mov
sbb
mov
sub
repz
mov
lcall
in
and
push
adc
stc
pop
push
push
pushf
adc
aam
push
inc
mov
cmp
push
mov
push
jge
mov
pop
push
add
arpl
lock
pop
jmp
xlat
psubb
into
mov
mov
jl
lds
xlat
popf
or
scas
pop
push
mov
mov
cmp
mov
mov
into
rcll
inc
or
pop
int
xchg
jmp
mov
jns
sub
mov
enter
lods
inc
cmp
aam
ja
or
push
push
sub
cmp
iret
orb
and
fcom
and
mov
jmp
ror
jl
lods
or
xchg
flds
jl
movsb
xchg
mov
pop
xor
loop
and
cmp
int
push
out
xor
fstpl
fildl
into
aaa
jb
fisubs
movsl
mov
push
sti
aam
mov
cld
mov
pop
std
shl
push
push
lds
xchg
lcall
sbb
fwait
mov
jl
jne
cmpsl
sub
jle
pusha
js
in
jnp
negb
push
repz
and
mov
add
pop
jg
xchg
xor
js
ds
cmp
mov
push
xchg
imul
stos
test
jge
mov
lods
push
dec
pop
movsl
cmp
cmp
mov
mov
int
sub
xor
jmp
lds
sahf
mov
ret
add
js
mov
mov
incl
add
pop
cmp
std
or
cmp
mov
xchg
fwait
lret
pushf
outsl
int
mov
sbb
or
xchg
mov
sub
arpl
fnstcw
imul
jae
mov
pushf
cltd
inc
lods
adc
scas
sub
idivb
pop
bound
push
push
jb
addr16
lods
mov
push
orb
fucomip
push
aad
in
and
icebp
sti
scas
loopne
adc
lods
xchg
icebp
jno
mov
outsb
mov
mov
shrb
cwtl
outsl
mov
xor
icebp
sub
shrb
cmpsl
nop
test
enter
add
enter
pop
jae
repz
or
xor
les
int
mov
cmp
dec
popf
bound
leave
sbb
add
mov
sub
add
sub
xchg
ret
adc
int3
lods
dec
inc
or
clc
lock
pop
loopne
and
movsb
push
fucomi
mov
and
inc
add
mov
sub
std
xchg
xor
pop
inc
je
cwtl
push
jbe
std
jb
mov
or
out
popa
pop
lret
sbb
arpl
and
push
dec
push
lds
in
mulb
cmpl
fimull
dec
aas
rcr
cmp
out
mov
push
mov
test
shll
lret
lods
movsl
and
adc
mov
xor
sbbl
cmpb
adc
sbb
mov
loop
in
pop
cmp
xchg
scas
test
mov
movsl
and
shlb
and
scas
ret
add
push
fwait
sub
jmp
mov
cld
lds
hlt
xor
sub
xchg
xor
pop
push
into
lds
pop
and
sahf
xor
add
xchg
mov
pop
loop
sbb
add
jmp
mov
sbb
mov
insl
inc
in
mov
movl
mov
repz
mov
push
jne
lods
pop
stc
mov
xchg
enter
jne
pop
lea
sub
push
leave
dec
cli
cmpsl
nop
or
lods
add
mov
xchg
aaa
lds
cwtl
jb
mov
daa
inc
hlt
jne
or
test
and
and
mov
das
int
mov
cltd
adc
fiadds
mov
dec
jns
sub
fsubs
outsb
adc
jl
ror
daa
dec
adc
push
aaa
xlat
cmp
cmc
mov
sub
movsl
insl
or
aaa
pop
dec
xor
in
jne
xchg
mov
aad
pop
les
push
mov
imul
int
mov
ficompl
stos
mov
sbb
xor
pushf
xchg
gs
mov
int
daa
inc
les
fwait
stos
or
aam
in
and
insl
mov
push
stos
and
sub
fildl
dec
fstl
xchg
leave
jne
stos
pop
add
pop
cmp
hlt
daa
cmp
xchg
in
loope
in
addr16
leave
mov
outsl
jae
ret
int
add
sub
ja
subl
cmpsb
cmc
lret
movsl
adc
test
adcl
mov
pop
cmpsl
lods
jecxz
push
stos
mov
imul
sbb
cmp
es
xlat
push
or
test
inc
or
lock
fwait
cmp
push
daa
faddl
inc
push
in
fwait
mov
jmp
adc
jnp
pop
call
and
or
mov
lods
aad
jne
aas
int3
add
add
scas
daa
les
cmc
hlt
pop
rorl
lret
adc
jns
pop
mov
fcmovnbe
imul
lds
sub
adc
packsswb
xchg
mov
dec
adc
gs
push
mov
jp
cmp
movsb
fstpl
lds
dec
xchg
push
jl
push
jmp
sub
test
cmp
add
ror
stc
repnz
push
jnp
adc
lds
adc
pushf
rcll
sbb
orl
pop
in
nop
popa
cmpsl
mov
loopne
aaa
cmpsl
shlb
add
dec
lret
sub
push
adc
dec
jge
inc
in
inc
jge
movsb
cltd
adc
lcall
or
notb
push
sub
xchg
push
daa
out
std
lret
jle
xor
sbb
mov
pop
lods
mov
jl
push
mov
fwait
out
fadd
push
in
and
daa
jle
sub
fs
ret
addr16
ret
leave
dec
mov
mov
das
pop
jnp
cli
fildl
stc
cld
xor
or
pop
lea
into
ret
push
xor
mov
push
enter
jmp
sub
and
sbb
ljmp
dec
mov
push
cltd
mov
lret
mov
clc
inc
shl
stos
push
sbb
scas
or
sub
adc
dec
jg
dec
push
sar
pop
cmpsl
mov
sbb
add
scas
xor
out
outsb
mov
lds
seto
outsb
push
ljmp
outsb
lds
sub
inc
test
outsb
xchg
mov
jmp
sbbb
sbb
sbb
int
lods
push
daa
sub
or
xor
rolb
mov
in
jns
dec
mov
cltd
xchg
jge
ret
xchg
out
add
sar
push
jmp
icebp
jne
loop,pt
stos
fwait
into
dec
aad
insb
hlt
leave
pop
mul
in
mov
stc
stc
mov
lock
mov
sbb
add
xchg
int
dec
adc
xchg
rclb
xchg
mov
enter
div
sbb
mov
or
movsl
hlt
js
mov
insb
add
popf
shlb
xchg
pop
jl
fwait
pop
or
mov
inc
xchg
jnp
int3
dec
ret
insl
pop
movsl
and
xchg
inc
idivb
js
push
fistpl
dec
les
movsl
jmp
in
mov
fwait
cmp
es
ret
adc
movsl
dec
bound
push
sub
adc
cmpsb
cmp
inc
cmp
fs
mov
mov
xchg
push
sbbl
pop
es
xchg
and
mov
or
sbb
mov
popfw
clc
xor
sbb
dec
insb
inc
jmp
insl
mov
rol
fs
loop
push
ret
in
sbb
mov
mov
daa
push
xor
add
add
orb
daa
lds
jecxz
cltd
dec
das
das
lods
loop
sbb
or
addr16
pop
mov
es
inc
lock
mov
jmp
xlat
int
pop
out
jg
mov
out
test
mov
inc
mov
mov
xchg
stos
push
xor
movsb
inc
jmp
stc
std
jne
scas
and
xlat
pop
mov
or
sahf
push
popf
fisubl
sub
sbb
stc
sub
mov
loopne
ret
sbb
movsb
fists
pop
lds
sub
enter
lea
dec
mov
cmp
bound
xchg
iret
or
out
mov
popf
test
out
adc
outsb
test
pushl
movsl
fwait
cltd
pushf
sbb
dec
jne
hlt
and
ret
mov
lret
push
dec
mov
add
sub
mov
mov
push
mov
mov
jne
cmp
adc
ret
addr16
mov
dec
sub
lds
insl
call
and
lds
push
mov
push
inc
inc
xor
and
movsl
sarb
pop
add
jmp
cmc
mov
add
mov
lcall
mov
aas
fwait
pop
and
inc
lods
push
mov
test
jecxz
mov
fsubs
clc
rolb
mov
and
adcb
adc
jmp
dec
mov
jb
sbb
pop
sbb
cmp
movsl
or
lret
cmp
jo
mov
sub
mov
cs
sub
sub
insl
sti
adc
jge
icebp
mov
mov
mov
aad
outsb
jle
js
mov
shrl
or
sti
push
or
pop
pop
sahf
mov
or
xchg
mov
jle
push
ss
pop
jl
or
icebp
mov
push
lds
sbb
xor
jge
inc
xchg
lret
push
bound
xor
scas
aaa
or
push
stos
movsl
insl
or
icebp
push
push
loope
jo
sub
pop
push
fmul
outsl
add
jne
lcall
push
cmpsb
das
cmpsb
in
and
lea
dec
dec
adc
xchg
jno
lods
cmpsl
movsl
xchg
or
dec
cmp
mov
xchg
sbb
int
stos
pop
mov
movsl
mov
xlat
jmp
rclb
aad
cmp
lcall
add
addr16
call
fimuls
in
aam
sbb
pop
aaa
das
adc
popa
pxor
push
sub
sbb
out
dec
inc
push
hlt
ja
sahf
iret
or
adc
dec
insl
fwait
movsl
xorb
hlt
inc
orb
rcrl
dec
mov
out
in
or
cwtl
cmp
rcrl
cmp
sbb
jle
xchg
mov
hlt
mov
mov
fnsave
insl
add
dec
or
lret
movsl
mov
or
es
inc
je
into
leave
jnp
push
mov
dec
cltd
in
xchg
cs
or
xlat
dec
aad
mov
aaa
add
nopl
xor
mov
pushf
cli
pop
add
add
mov
jns
cmc
pop
jno
out
imulb
aad
dec
and
addr16
and
sbb
lock
jae
daa
add
add
mov
mov
ret
pushf
aad
leave
jmp
sub
jle
add
inc
jp
fisubrl
cmp
in
pop
int
sbb
jmp
mov
push
or
insb
adc
push
xchg
or
cld
jecxz
fdivs
les
movsb
leave
and
fidivrl
addr16
inc
push
stos
pop
mov
or
jg
mov
in
lods
cmp
xchg
stos
cmpsl
cmp
lods
mov
push
jp
mov
fbld
push
cmpsl
js
insl
std
mov
lds
mov
jl
sbb
stc
aad
adc
dec
out
cmpsb
xlat
xor
fucomip
das
mov
repz
pop
or
ret
ja
dec
inc
je
movl
lret
adc
lds
dec
pop
mov
in
or
or
enter
mov
sub
inc
fcompl
mov
les
mov
popf
ljmp
pop
dec
aaa
push
loope
jne
sub
cmp
mov
adc
lods
fdivs
int3
mov
sbb
es
and
ljmp
xlat
mov
mov
mov
loop
xor
cwtd
lahf
sbb
xor
fmull
pop
movsl
lret
sub
leave
xor
popf
mov
sbb
cmp
movsl
vmovaps
mov
notb
lods
xor
jmp
jmp
dec
scas
dec
shlb
adc
andb
lret
inc
pop
jg
mov
or
cmp
aad
or
int
add
iret
mov
dec
mov
sub
push
xchg
pop
add
insb
cmpsl
mov
sbbl
mov
sbb
movsl
mov
or
inc
inc
sub
outsl
imul
aaa
xchg
in
movsl
xchg
or
pop
imul
das
gs
outsb
repz
mov
daa
cs
dec
int
mov
sub
dec
inc
jge
pop
movsb
add
sbb
mov
add
adc
xchg
add
call
mov
mov
sub
in
inc
scas
mov
pop
ror
cmpsb
fdiv
cli
mov
in
sub
in
xlat
std
mov
leave
mov
pop
or
jmp
cmpsb
dec
mov
jbe
xchg
mov
push
ret
add
ret
xchg
mov
mov
push
pop
inc
out
push
cmp
dec
pop
xchg
fucomi
jecxz
inc
add
or
pop
dec
add
inc
jbe
jmp
mov
lock
bound
fwait
outsb
movsl
out
xor
pushf
mov
test
js
pop
mov
and
jae
movsl
repnz
into
test
mov
sub
xchg
insb
sbb
mov
test
icebp
enter
lds
sub
inc
mov
inc
xchg
stos
pop
or
jo
add
lcall
sbb
lods
jmp
repnz
xchg
enter
cld
jle
mov
fstl
pusha
hlt
sbb
add
iret
lahf
and
aas
lods
popf
sti
pop
jmp
movl
outsl
in
cs
sub
xor
lahf
sub
mov
xor
mov
pop
sbb
in
mov
mov
and
push
jne
pop
add
insl
mov
and
scas
mov
mov
jo
rol
jle
mov
pop
inc
push
dec
cmc
sbb
pop
leave
mov
daa
cmc
leave
dec
xchg
jge
pop
enter
popf
jb
cmp
pop
mov
mov
cs
daa
push
jae
mov
in
cmp
ficompl
movsl
out
loop
call
xchg
leave
fdivl
jae
push
jo
inc
or
mov
scas
jns
out
inc
hlt
xchg
aad
pop
les
mov
sub
lret
dec
jns
loope
ja
in
js
stos
jl
pop
rclb
daa
mov
sub
cwtl
lcall
pop
fsts
or
hlt
fsts
sbbb
stc
je
sbb
negb
inc
mov
add
xchg
lcall
and
testb
inc
add
ffree
jns
rcll
cmpsl
dec
lcall
mov
test
mov
mov
mov
jno
mov
adc
loope
xor
ds
adc
push
outsl
jle
sbb
push
das
in
int
and
rcll
jl
test
add
xchg
cmp
test
icebp
push
or
inc
pop
mov
inc
sbb
repz
scas
mov
sub
pop
mov
xchg
mov
call
cld
mov
aam
ja
inc
mov
pusha
imul
jecxz
movsb
rclb
dec
inc
push
mov
loopne
lret
and
sahf
jmp
push
adc
adc
and
int3
scas
pushf
adc
int
sbb
and
dec
inc
fiadds
int
dec
outsb
dec
fadds
push
jl
pushf
dec
fdivl
fmuls
fwait
xor
jmp
sti
test
mov
inc
sbb
fildll
xor
push
pop
mov
insl
insb
fsubrp
push
js
cmp
cmpsl
sbb
daa
lds
inc
cmp
loope
add
add
outsb
sti
xchg
push
mov
daa
or
sti
and
cmp
jns
sbb
js
mov
mov
sbb
cmp
lcall
mov
push
shlb
mov
repnz
fisttps
mov
jns
xlat
mov
cmp
movsb
pop
add
daa
call
or
adc
movsl
pop
or
cltd
mov
out
mov
bound
inc
sbb
ss
lea
cld
repnz
sub
std
push
lahf
mov
cwtl
or
pop
cmpsb
repz
sti
in
lret
mov
cmp
jecxz
mov
int
rclb
clc
mov
pop
sbb
lods
add
test
adc
push
jmp
into
test
jecxz
aaa
mov
in
lds
and
cmp
jp
pusha
xchg
lods
dec
stc
xor
adc
adc
enter
pushf
xlat
int
in
lods
into
adc
jg
repnz
arpl
rcrl
out
fildll
add
inc
xchg
insl
aas
adc
in
les
popa
negb
test
js
jge
repz
call
pop
out
or
in
sarb
mov
ja
imul
and
sub
notl
lods
mov
lea
cmp
push
dec
sbb
lret
jae
ljmp
push
out
stos
mov
lret
pop
inc
xchg
insl
mov
lods
outsl
cmpsl
pop
pop
mov
movsl
xlat
xchg
hlt
and
lret
ja
mov
cmpb
test
xlat
dec
cs
mov
in
movsl
out
popf
pop
lods
cmp
cltd
jnp
int3
xchg
adcb
stos
ret
dec
ret
jae
sbb
rcrl
arpl
jg
and
or
pop
outsb
fwait
pop
sub
pop
push
outsb
mov
inc
lods
mov
cltd
sub
inc
outsb
or
aad
insl
mov
inc
sub
movsl
clc
dec
fldenv
mov
jge
cltd
xbegin
adc
xor
jl
fldl
cmpsb
push
or
int
movsb
popf
ds
pop
test
mov
xchg
add
mov
jno
jnp
loopne
je
pop
mov
xchg
cmpsb
mov
add
stos
in
sti
movsl
xchg
push
mov
fucomi
jp
adc
inc
mulb
repnz
jle
incb
add
cltd
cmp
mov
mov
jmp
mov
shl
jecxz
ja
cs
add
leave
test
or
xor
push
mov
cmpl
sub
jno
pop
add
roll
outsb
sbbl
rorl
cld
xlat
outsb
mov
cmp
cmp
imul
cld
jmp
andl
fldl
cli
or
test
incb
jmp
es
std
dec
mov
jae
int
movsl
jecxz
loop
filds
ja
movsl
ret
sti
push
out
mov
sub
clc
xchg
rcl
out
xchg
xchg
dec
mov
sbb
sub
aaa
push
jg
repz
add
push
lock
jl
ds
cli
cmp
out
test
adc
sbb
adc
fwait
adc
js
sti
push
xchg
mov
mov
jo
fmuls
xchg
outsb
cmp
xchg
sbb
cmp
push
imul
pop
push
inc
mov
scas
cwtl
ja
xlat
inc
xor
lds
xchg
mov
mov
lret
jge
pop
or
lahf
sub
bound
jle
aad
cld
fistpll
pop
in
and
mov
fwait
insl
and
daa
or
xor
mov
pusha
pop
imul
test
pop
stc
sbb
pop
repz
pop
sub
lcall
imul
aaa
mov
and
dec
xlat
popa
mov
daa
add
sub
push
push
pop
scas
mov
lds
dec
ljmp
or
adc
shl
rcrb
leave
sub
sbb
xchg
sub
jmp
pop
push
mov
ret
fs
jnp
mov
add
sbb
add
pushf
int
jle
dec
jge
js
and
test
lret
int
pop
fwait
sub
push
imul
mov
outsb
add
sub
mov
pop
sbb
mov
repz
fildll
mov
jle
hlt
sti
pusha
mov
push
mov
lds
adc
shrl
cmp
push
sbb
lock
jnp
out
movsb
and
clc
xchg
or
mov
sub
jl
je
icebp
cs
cmp
jb
sbb
mov
shlb
push
mov
sub
jecxz
or
add
mov
mov
pushl
xchg
daa
or
fnstcw
mov
pop
or
movsb
pop
mov
arpl
pop
mov
stos
and
or
fisubrl
dec
jmp
jbe
xlat
lds
pushw
inc
mov
jmp
add
and
sub
mov
pushf
shll
popl
mov
push
dec
cmpsl
mov
mov
inc
outsb
imul
aad
xchg
pusha
jns
sarl
pop
std
scas
push
add
shlb
jnp
int3
lods
sub
bound
rorl
mov
mov
mov
fidivrs
inc
mov
xchg
repz
lds
call
sti
jle
inc
lock
sbb
repz
adc
lods
scas
pop
sbb
xchg
push
xlat
pop
xchg
cmp
int3
repz
adc
mov
inc
popa
mov
loope
inc
scas
inc
mov
lcall
jp
jb
push
outsb
xchg
subb
mov
pop
mov
lret
adc
daa
pop
in
dec
cmp
leave
and
fimuls
mov
or
mov
pop
mov
jae
sarl
inc
ret
adc
sti
dec
mov
jne,pn
leave
and
das
test
orl
push
in
pop
imul
add
sub
sbb
adc
js
xorl
jae
adc
add
jmp
stos
scas
mov
data16
add
push
mov
xor
pop
pop
lods
ret
xlat
xchg
pop
lss
scas
sub
adc
popa
jmp
adc
mov
pop
js
shlb
lret
sbb
lahf
push
lds
push
rcl
or
inc
mov
or
mov
fucom
mov
outsl
push
pop
stos
in
scas
add
mov
sbb
loopne
int3
lret
push
push
xor
mov
and
addb
mov
sbb
nop
rorb
xchg
xchg
jne
mov
cltd
mov
rcrb
ss
xchg
out
mov
rcl
insl
jno
mov
out
pop
jae
repz
fndisi(8087
sbb
push
data16
sbb
sahf
jl
sti
xlat
mov
cmp
lods
or
sub
nop
mov
mov
sub
fwait
vcvtdq2ps
sbb
add
adc
cwtl
rcr
loopne
setp
sarl
xchg
lret
mov
movsl
rcll
in
adc
lds
movsl
movsl
mov
pop
cltd
lret
movsl
mov
inc
add
pop
test
or
add
mov
cmp
cmp
in
mov
add
mov
jmp
lcall
ljmp
adc
push
dec
imul
add
pop
jb
in
and
mov
in
lods
movsl
or
imul
push
into
into
pushfw
inc
lds
pop
add
inc
dec
mov
cmp
adc
lret
outsb
cmp
icebp
scas
cmp
aas
mov
jl
mov
pop
dec
sahf
sbb
nop
mov
jle
mov
xchg
push
add
dec
sbb
out
daa
dec
push
lock
push
xor
pop
hlt
pop
js
mov
aad
pop
mov
pop
std
addb
sub
mov
lods
xor
inc
aaa
mov
dec
int
icebp
out
xor
popf
aas
sub
sbb
mov
cmp
mov
push
cmp
adc
hlt
dec
xchg
mov
jle
test
sbb
xchg
dec
mov
push
or
mov
sahf
sbb
xor
cmp
daa
sbb
mov
sub
mov
mov
push
mov
int
cmp
dec
ss
add
jecxz
xchg
add
lds
aad
mov
or
std
popf
and
rcrb
sbb
lret
mov
mov
add
dec
ss
fwait
scas
movsl
cmp
rorb
lods
mov
pop
xchg
add
adc
mov
in
mov
movsl
ljmp
in
imul
nop
cmp
push
push
scas
jb
movsl
add
sub
sub
outsl
inc
inc
add
and
and
cld
ficoms
dec
or
dec
pushf
push
mov
add
fdivs
fimull
frstor
fidivl
mov
scas
vcvtss2si
int
mov
jns
xchg
or
sbb
orl
sub
shll
push
in
lods
mov
adc
loopne
sbb
sub
mov
mov
lea
loopne
or
int3
lret
push
movsl
jns
iret
lcall
push
push
lret
test
rorb
mov
hlt
faddl
jae
rcrl
or
ret
mov
lods
aas
nopl
mov
sahf
mov
cmp
jne
sbb
jecxz
xchg
xor
mov
aaa
mov
xor
xchg
scas
shll
je
xchg
lds
cmp
dec
sub
in
mov
lea
in
jne
push
mov
add
outsl
sub
mov
movsl
and
push
mov
push
aaa
les
shl
push
ds
push
fsubs
shlb
push
out
inc
cmp
stos
into
lods
fdivrl
sbb
in
xchg
cmp
cmpsb
mov
push
mov
pop
push
add
and
pop
movsl
loop
fisubrl
aaa
push
inc
and
int3
mov
popa
test
jmp
leave
sub
sbb
in
leave
loope
popf
ret
adc
das
mov
aaa
js
adcl
add
movsb
les
mov
mov
sbb
mov
pop
xchg
into
or
nop
call
fidivl
mov
mov
in
iret
fmul
das
lds
mov
icebp
in
cmp
adc
push
mov
ret
rorb
lret
mov
fadds
mov
push
sti
inc
cmpsb
and
mov
lret
shl
inc
cmpsl
jg
orb
fcmovu
mov
fxtract
sbb
push
jb
push
dec
xchg
jge
in
out
in
mov
shrb
lea
sbb
or
js
mov
outsl
add
ss
push
clc
mov
mov
cld
aas
rolb
mov
dec
mov
or
adc
stos
int3
js
repnz
loopne
xchg
jge
fstps
or
jmp
jl
movsb
or
jbe
xor
pop
imul
rorl
clc
call
fistl
xor
cmp
and
fwait
dec
dec
xchg
movsb
sub
xchg
inc
mov
add
inc
loope
push
js
stc
jl
popf
and
scas
mov
lods
xchg
mov
xchg
int3
push
bound
inc
dec
jle
sbb
loop
mov
sub
daa
leave
push
in
js
aaa
jne
scas
mov
mov
mov
push
je
cmp
leave
sub
test
inc
jb
add
or
ret
sbb
fwait
movsl
xor
jmp
bts
testl
adc
ficomps
sub
sub
pop
dec
pop
add
leave
sbb
cmc
daa
into
sarl
or
mov
test
insl
movsl
es
inc
sti
inc
popf
mov
sbb
scas
lods
rorl
movsl
daa
push
lcall
aad
lods
out
pushf
imul
pop
or
mov
dec
das
or
adc
adc
int
cltd
fldcw
mov
pop
jmp
imul
js
push
jnp
sbb
dec
pop
ror
cmpsl
pop
cmpl
push
nop
push
movsb
lds
movsl
adc
jg
and
daa
push
sbb
or
femms
or
mov
sub
and
stos
shrb
adc
pop
vpunpcklwd
mov
mov
mov
dec
ficoms
sbb
jecxz
adc
cmc
push
mov
pop
ds
dec
inc
sbb
arpl
jmp
movsl
or
jnp
lea
mov
std
mov
jle
cmp
pop
outsl
movsl
dec
adc
sbb
adc
sub
xor
add
mov
ficomps
movsb
adc
lods
dec
pop
cmc
pop
sub
push
or
inc
cwtl
ljmp
xor
das
rolb
xchg
outsb
mov
aam
shrl
aaa
pushf
sub
repz
push
mov
rcrb
imul
fnstenv
es
test
push
pop
movl
xor
mov
outsb
mov
lods
adc
daa
lcall
mov
dec
imul
fcmove
xchg
sahf
pop
mov
ffreep
mov
cmc
mov
aaa
pop
mov
sub
jno
push
mov
aam
pop
fstpl
jmp
pop
insl
pop
add
enter
clc
xor
adc
pusha
int3
adc
adc
std
fadd
jno
mov
or
out
shll
push
nop
xor
ljmp
push
ret
cmpsl
iret
pushf
mov
mov
fucomip
add
jne
lret
pop
cmp
mov
idivb
xchg
lcall
stos
xor
js
cs
hlt
daa
adc
pop
sbb
shlb
scas
bound
push
adc
shlb
shrl
call
aas
orl
inc
das
lods
add
xlat
dec
or
cmpsl
lods
mov
stos
mov
xor
jnp
movsb
add
lds
inc
pop
cmp
jnp
sub
mov
mov
nop
sub
inc
jne
lds
jl
cmpl
leave
xchg
mov
add
in
pop
imul
rol
xchg
popa
cmpsl
jle
adc
jo
mov
inc
mov
popf
jmp
xlat
repz
xor
mov
fwait
imul
jecxz
xchg
mov
inc
sub
sti
and
aam
mov
push
sub
mov
movsl
adc
lret
push
movsl
mov
xchg
push
js
pop
lock
cmp
ja
aad
lcall
fwait
cmp
xor
pop
jbe
iret
fildll
fnsave
repnz
loop
movlps
sarb
push
mov
sub
lods
mov
inc
inc
sbb
fstpt
cmpsl
ja
not
add
loope
cld
ret
cmp
std
mov
jns
pop
jnp
mov
andb
clc
mov
das
lods
stos
xlat
and
inc
in
hlt
xchg
cmp
mov
push
loope
lcall
gs
clc
xchg
mov
cld
hlt
lcall
add
or
adc
or
inc
fstpl
add
lock
push
divl
inc
scas
fcoms
lret
fimuls
pushf
add
sub
dec
daa
lock
in
shld
inc
sti
cwtl
mov
pop
jp
inc
jo
jns
inc
subb
mov
loopne
adc
add
ss
or
arpl
ret
sbb
rcrl
clc
dec
ret
xchg
rorl
pop
inc
ja
add
jno
cmp
inc
out
ficompl
jecxz
in
outsl
addb
movsl
mov
js
mov
fcmovne
jb
mov
mov
test
mov
add
sub
dec
jmp
mov
cmpsl
mov
into
cmp
adcb
mov
mov
lods
xor
hlt
in
fstpl
push
movsb
add
je
and
mov
arpl
and
add
leave
mulb
pushf
dec
jecxz
in
sbb
pushf
pop
cmp
add
das
out
shl
pop
cmpsl
mov
popf
insl
lods
dec
sbb
scas
adc
pop
repnz
lahf
add
mov
sar
pop
into
mov
nop
mov
cli
dec
pop
test
outsb
and
lahf
pop
mov
cmp
jb
lret
xchg
xchg
divb
scas
mov
sub
js
lds
sbb
adc
mov
movsb
cmp
inc
dec
jnp
mov
movsl
push
cmp
cmp
add
or
xor
sbb
sbbb
test
mov
scas
test
out
dec
ja
xchg
out
mov
xchg
push
js
push
in
scas
pop
test
ds
push
push
rorl
sbb
in
repz
fldenv
push
mov
adc
sbb
mov
ss
out
mov
out
pop
jns
jmp
mov
push
pop
jns
cmpsb
pop
or
adc
inc
mov
sub
dec
popa
pop
jmp
or
xchg
test
and
mov
int3
lahf
pop
cwtl
adc
test
loop
aam
dec
in
sbb
fadd
repnz
or
cmp
pusha
adc
call
or
test
mov
cmp
outsb
xchg
push
pushf
data16
movsl
jnp
add
xlat
jecxz
je
add
jne
sub
fs
ja
add
dec
cmp
loop
arpl
mov
sub
rcrl
jle
outsb
xor
mov
jne
push
pop
xor
test
mov
sub
lock
fwait
xchg
sbb
mov
insl
leave
xchg
test
stos
add
sub
imul
scas
adc
cwtl
push
into
outsb
es
movsl
daa
pop
popa
dec
sub
add
les
call
cmpb
add
add
inc
cmp
xchg
insl
lods
adc
insl
xchg
pop
sub
in
mov
arpl
add
mov
mov
and
imul
ds
xor
sbb
es
aad
loopne
xor
lods
jmp
outsl
mov
shl
inc
inc
inc
iret
lcall
dec
dec
push
cmp
das
fnstenv
push
fwait
ds
jg
ret
inc
movsl
outsb
jmp
cmpsb
pop
xlat
push
test
inc
outsb
adc
xlat
push
loop
mov
jl
lods
movsl
cmpsb
insb
ja
xchg
popa
jne
cmp
sbb
ret
jmp
mov
insl
nop
sbb
jns
mov
xchg
or
imulb
gs
add
out
pop
aaa
jmp
leave
jno
fnstenv
adc
mov
fisttpll
jp
or
int3
aas
jns
cmp
outsb
outsl
mov
movsl
lea
js
sbb
movsl
fcmovb
movsb
ss
mov
cmpsb
lods
popl
mov
popf
xchg
cltd
mov
jle
xchg
and
outsl
icebp
inc
scas
or
xor
std
shrl
mov
int
cmp
jo
xchg
xchg
dec
sub
test
test
sub
aaa
mov
sub
fisubs
mov
sbb
loope
cld
and
lret
in
push
arpl
dec
pop
cmc
aad
repz
insl
loopne
mov
mov
push
inc
dec
add
jl
adc
bound
lds
lcall
je
sti
dec
icebp
pop
jge
aad
les
jp
push
loop
sbb
dec
cmp
xlat
clc
push
push
das
ja
fwait
or
mov
xchg
dec
mov
pop
dec
mov
inc
test
hlt
cltd
mov
scas
and
adc
pop
cmpsb
sbb
sbb
ret
ret
into
icebp
or
lret
mov
and
push
lret
rcr
int3
push
pop
scas
add
mov
sbb
sub
inc
aad
push
mov
mov
lds
rclb
cmp
xchg
ret
int
lcall
mov
inc
pop
loopne
sbb
mov
xchg
inc
in
add
push
mov
int
dec
lods
push
and
lret
repnz
dec
jle
test
pop
outsb
mov
mov
imul
ljmp
shl
push
and
dec
mov
xlat
jne
pop
mov
xchg
xchg
inc
fbstp
call
adc
outsl
mov
mov
push
inc
and
sti
lahf
cmp
arpl
stos
stos
into
mov
push
mov
lods
jnp
xchg
mov
mov
nop
inc
aaa
push
jmp
mov
fnsave
insb
movl
jnp
shlb
and
repnz
push
or
add
test
xchg
mov
movsl
xchg
imul
in
ds
hlt
mov
int
pop
jb
mov
ss
xchg
cwtl
shll
imul
stos
xchg
mov
lcall
mov
pop
push
mov
ljmp
dec
xchg
aas
cwtl
inc
adc
sub
fst
popf
jge
cmpsb
mov
jns
repnz
lea
push
xchg
shll
mov
pushf
sahf
jno
xchg
mov
ja
xor
add
sbb
push
adc
rorb
push
data16
ret
lods
rolb
lret
scas
fstps
xor
mov
push
movsl
mov
lds
and
pop
enter
mov
xchg
cmp
push
out
mov
les
stos
pop
data16
and
xlat
cmpsl
inc
fwait
dec
push
stos
xchg
rcrb
mov
in
mov
subl
pop
incl
dec
scas
pop
mov
mov
je
fldenv
push
das
test
mov
push
test
push
add
push
and
and
mov
nop
call
mov
iret
mov
add
scas
lds
mov
loopne
cs
jmp
std
mov
lds
scas
ja
out
rcrb
lods
push
loope
test
sub
ret
push
insb
or
sub
imul
inc
or
bnd
mov
lods
inc
mov
lods
mov
fstps
lea
inc
fsubl
pop
cwtl
add
and
scas
jmp
int3
in
int
adc
lods
stos
outsl
mov
sub
xlat
push
pusha
std
lcall
push
push
iret
pusha
dec
add
mov
movsl
push
jnp
mov
movsb
cltd
fidivrs
popf
cmpsb
add
mov
and
xchg
cli
aam
test
daa
sub
movsb
rolb
xlat
imul
adc
mov
xlat
fsubrl
add
call
jnp
mov
and
push
jbe
in
rorb
jp
js
leave
mov
fdivrs
adc
sub
adc
daa
scas
in
das
loope
fwait
scas
outsl
xor
mov
xchg
add
aam
loopne
mov
push
enter
mov
xchg
cmp
out
dec
inc
movsl
mov
lods
pusha
inc
stos
popa
push
sbb
and
mov
inc
int3
repz
fwait
pop
inc
js
adc
test
sbb
dec
popa
xchg
lock
mov
rol
leave
hlt
insl
sbb
pop
fstpl
out
cmp
xor
cmp
ljmp
xchg
or
std
subl
cltd
sub
je
mov
pop
and
lods
and
mov
fwait
inc
push
aad
jp
jmp
xchg
test
es
lods
push
dec
dec
push
mov
adc
pop
xchg
and
shlb
aad
or
jge
pop
xchg
movsl
add
ret
jno
fildl
or
push
in
add
imul
adc
cmpsl
lods
gs
inc
push
loopne
inc
mov
mov
nop
pop
and
or
fcoms
fisubrl
mov
cmp
popf
out
aas
mov
lret
mov
fstl
and
jne
mov
lods
jmp
movsl
sbbb
leave
add
lock
cmp
roll
xchg
das
in
sbb
push
adc
add
dec
pushf
ljmp
outsl
movsl
jno
adc
les
clc
add
xor
imul
dec
jo
lds
lret
dec
mov
adc
cmp
lds
lret
push
adc
cmc
and
jnp
sub
add
xorl
ficomps
jnp
fnstenv
rorb
jmp
mov
pop
jbe
cli
inc
loopne
sbb
mov
sub
add
jnp
mov
sbb
in
sti
lcall
aas
jnp
movsl
popa
xchg
int3
hlt
sub
loope
dec
movsl
int3
sbb
ja
xor
jp
clc
push
sub
daa
stos
adc
lea
ja
sub
push
loope
into
mov
push
out
hlt
cli
pop
fcmovnb
movsl
inc
jnp
ljmp
mov
adc
into
dec
mov
inc
jl
ja
mov
fwait
adc
sub
and
outsb
popf
lds
fldcw
lock
xor
add
add
pop
jae
mov
in
mov
mov
nop
std
idiv
pop
lcall
mov
sahf
leave
xor
out
subb
jle
aas
test
dec
xchg
pop
rcrl
add
fadd
scas
adc
xor
sbb
mov
pop
cvttps2pi
inc
testl
subb
jmp
lods
mov
outsb
sub
pop
cmpsb
shrb
pop
mov
add
sbb
pop
in
ffreep
sub
or
inc
pop
leave
icebp
lods
scas
pop
or
lea
das
ja
jmp
add
sub
mov
mov
mov
mov
xlat
aam
mov
jbe
hlt
stos
in
movsb
jb
lret
push
mov
mov
lock
and
push
stos
add
jle
sub
xchg
xchg
mov
or
and
xor
fyl2xp1
mov
sbb
mov
leave
xchg
fsqrt
fs
sbb
lret
sub
iret
sbb
movsl
inc
sub
aad
xchg
mov
mov
fldt
xor
inc
jecxz
sbb
popl
xchg
in
cmc
dec
pop
add
mov
shll
insl
lcall
xor
stos
popa
inc
fnstsw
push
outsl
inc
mov
add
push
les
out
mov
rolb
in
hlt
mov
inc
push
mov
loop
or
stos
pop
add
mov
in
jno
and
rcl
mov
lods
add
or
inc
call
xchg
mov
hlt
pop
sbb
test
push
pop
adc
push
andb
and
loope
pusha
ret
lds
or
add
jns
mov
les
or
cmp
fdivs
jne
pop
nop
insl
and
xchg
lcall
dec
shlb
pop
cmc
imul
int
mov
cwtl
xchg
cwtl
cmp
mov
repz
mov
lcall
hlt
daa
xchg
xchg
xchg
stos
ds
push
cltd
dec
xchg
sti
xor
lret
cltd
hlt
mov
or
push
in
mov
push
outsb
insb
pop
add
pusha
lds
pop
cld
or
or
sbb
push
mov
dec
cmpsb
int
popl
lods
push
xchg
subl
push
and
setle
mov
cmpsl
shlb
loop
jno
cmp
jg
cwtl
out
and
pop
xchg
lds
out
sub
cmp
mov
cmp
push
icebp
sub
adc
jne
notl
shlb
lds
lods
aas
pushf
pop
mov
sub
int
inc
mov
or
ror
lcall
sbb
jno
cltd
or
in
in
sub
xchg
in
dec
xchg
sub
lds
push
mov
test
xchg
cmp
js
lods
mov
adc
mov
scas
shll
subl
xchg
sub
jb
in
or
data16
cli
movsl
cld
jb
leave
outsl
inc
clc
into
fistl
repnz
mov
jnp
lds
sbb
mov
xchg
fwait
mov
dec
fbld
or
xor
in
xor
or
push
sub
xchg
movsl
dec
cmp
ret
lods
fwait
lods
add
in
dec
mov
push
outsl
pop
mov
stos
jmp
mov
mov
cmpsl
pop
push
mov
in
dec
pop
mov
dec
dec
adc
bound
mov
pop
mov
pop
mov
or
pop
push
stos
lret
scas
stos
movsl
repnz
lds
sub
jecxz
repnz
cmc
xor
in
pop
addl
push
out
and
fwait
and
push
inc
testl
outsb
dec
loop
xchg
and
call
rclb
xchg
mov
in
mov
rclb
pop
adc
nop
stos
push
add
xchg
insl
pop
mov
stos
push
push
fucomip
mov
dec
movsl
sub
je
test
outsl
sbb
fldcw
in
loopne
cltd
push
xor
ret
push
lds
sbb
hlt
or
fsubrl
ss
fistps
stos
movsl
and
nop
int
mov
mov
add
ds
fdivrl
lret
test
mov
pop
cwtl
in
daa
mov
xchg
lods
scas
mov
js
inc
aaa
mov
mov
in
das
andb
outsb
mov
push
mov
in
or
sbb
dec
rcrb
mov
sbb
je
mov
movsl
cmpsb
scas
pop
sub
cmp
and
dec
dec
movups
dec
int
out
subl
fisttpl
sub
or
sbb
mov
std
out
xor
jge
and
test
lds
cmp
jns
and
add
test
or
popf
fwait
push
std
pop
outsl
add
scas
lds
mov
mov
fisubrs
pop
scas
sub
push
adc
lret
ja
pop
test
mov
cmc
nop
popf
repz
add
jb
int
xchg
lock
lahf
mov
loop
pusha
push
movsb
mov
jns
xchg
cmp
mov
in
jne
sub
sbb
jb
lret
ror
dec
sub
stc
movsb
negb
push
inc
push
and
int
repnz
daa
pop
inc
incb
popf
movsl
pop
stc
jb
xor
fs
addl
lret
lea
and
test
add
sub
xchg
fstpl
pop
into
int
out
mov
lcall
xlat
inc
pushl
movsb
pop
repnz
ja
sub
sti
into
mov
das
addr16
sbb
jns
js
mov
pop
sbb
scas
inc
push
insl
cmpsl
inc
lock
xchg
jmp
imul
ds
inc
dec
xchg
push
pop
mov
adc
cltd
rorl
jle
or
aad
mov
sub
mov
popf
or
cmp
lods
mov
ret
movsl
xor
inc
test
add
aam
arpl
dec
cmp
aaa
add
mov
lods
lds
jp
push
jns
ss
outsl
or
dec
xchg
ret
push
gs
xchg
push
mov
fmuls
mov
push
mov
sub
bound
gs
rol
iret
xlat
ljmp
inc
enter
or
sbbb
fistps
or
pop
js
cwtl
push
lds
es
lock
repz
inc
es
lds
dec
test
cwtl
mov
fwait
cmp
adc
pop
xor
dec
jge
stc
sbb
lea
fcoms
pop
in
and
jmp
cwtl
inc
jns
stos
mov
or
insl
idivl
adc
rorb
sub
out
sbb
mov
outsb
jns
inc
mov
dec
addr16
jp
pop
mov
sahf
fstl
loope
dec
add
mov
pop
add
cmpsb
xor
adc
es
xchg
mov
jg
pop
push
lods
xor
jno
push
mov
in
adc
fs
add
imul
dec
aaa
push
lods
jp
mov
mov
or
add
std
aam
xor
mov
jbe
or
mov
inc
icebp
loopne
lds
push
movsb
lock
mov
or
test
cmpsl
xorl
and
cs
add
mov
scas
pop
into
test
sti
sbbb
loop
addr16
or
xor
add
outsl
cmpsb
push
loopne
les
repz
xlat
ret
dec
movsl
xor
inc
push
push
loopne
ret
bound
mov
mov
popl
sbb
jno
lods
cwtl
mov
clc
add
jo
xlat
stos
dec
pop
xor
xor
pop
roll
js
cmpsl
inc
sbb
and
mov
lods
mov
cwtl
movsl
jmp
mov
jmp
sahf
inc
fs
inc
inc
push
push
pop
test
pop
movsl
outsb
mov
dec
clc
ret
pop
stc
shrl
lret
ja
lret
mov
lret
movsl
js
inc
adc
inc
lcall
add
data16
mov
or
mov
and
mov
fsubl
mov
fnstcw
xchg
mov
xor
arpl
cmp
cwtl
jl
out
jmp
jg
dec
lods
lret
or
sbb
lcall
cmpsl
xchg
gs
xchg
icebp
test
fwait
pushf
xchg
mov
pop
aaa
cltd
pop
jmp
mov
sarl
decl
enter
daa
outsb
lds
fcoms
repz
mov
adc
mov
notl
jge,pn
fwait
lock
stos
call
daa
repz
sub
xchg
clc
add
aas
adc
popf
or
push
jo
dec
cmp
jge
sbb
es
mov
xor
clc
mov
test
addr16
aaa
rcll
out
add
ror
idivl
sub
sbb
scas
outsb
pop
rcrl
nop
jb
mov
dec
outsl
sarb
xchg
mov
call
loop
out
int3
sbb
add
jbe
pop
sub
jbe
rcr
sub
pop
jle
inc
andb
sti
push
push
insb
pop
negb
mov
add
mov
movsb
mov
insl
adc
sarb
stos
je
popa
mov
xlat
mov
push
pop
bound
hlt
dec
adc
rolb
pop
bound
or
xor
mov
cmp
mov
add
fcoml
lcall
adc
in
and
xchg
inc
inc
cli
pusha
sahf
popa
ss
sub
notl
pusha
stos
jb
fst
int
in
fmul
into
mov
mov
and
cvtps2pi
subb
aad
int3
ja
add
mov
call
adc
sbb
mov
shrl
lret
pop
cmp
mov
lcall
test
xlat
inc
mov
clc
pop
pop
sahf
lret
cmpsb
sub
pop
jle
testl
cli
inc
or
cli
mov
jle
inc
dec
push
ret
scas
push
push
ljmp
leave
dec
sub
xchg
fwait
scas
movsl
pop
fs
xlat
or
cmp
repz
xlat
fistpll
inc
xchg
fisttps
imul
lds
sbb
sar
aas
or
mov
rolb
xlat
pop
mov
push
inc
mov
pop
sbb
and
shlb
outsb
pop
fistl
mov
inc
ss
push
dec
sub
daa
push
push
pop
ljmp
lcall
stc
leave
mov
xchg
shrl
pop
pop
xor
sub
push
lods
push
xlat
push
add
loop
sbb
sub
les
xchg
sarl
cmp
xor
rol
push
cwtl
repz
push
out
loope
and
into
in
insb
dec
cmpsl
xchg
imul
sub
dec
jmp
push
movsl
dec
or
shll
stos
ja
aam
push
sti
dec
cmc
inc
and
rcl
cmp
ret
movsl
and
dec
sbb
ljmp
les
mov
mov
ret
sbb
imul
cwtl
stc
stos
mov
mov
add
leave
mov
dec
shlb
jae
cmpl
notl
sti
cmpsl
arpl
or
stos
xchg
loope
pop
fcompl
lds
outsb
xchg
mov
cli
xchg
ja
cmp
lret
xor
sarb
ljmp
and
iret
xor
in
cltd
add
add
jmp
jmp
test
xchg
mov
stos
push
push
dec
enter
lods
mov
mov
movsl
fimull
into
loopne
call
insl
sarl
daa
in
jmp
push
xchg
xchg
shll
lret
add
adc
mov
cmp
fdiv
lods
fcomip
popf
int
shrb
mov
mov
xchg
add
dec
push
ja
movsl
add
push
and
dec
mov
sub
out
test
hlt
adc
nop
outsb
fucomi
mov
dec
mov
pop
pop
stos
pop
aaa
stos
xlat
sbb
mov
setnp
lds
mov
fcoms
or
pop
xor
daa
das
cmpl
test
push
xchg
xchg
popf
and
cltd
cmc
lods
iret
in
inc
and
or
pop
inc
pop
dec
lea
les
aas
std
lods
rcrb
mov
xlat
dec
mov
dec
fisttpl
bound
shl
daa
jg
dec
and
xchg
cmpsl
shrl
movsb
or
into
jle
cmp
mov
sahf
stos
jg
cmp
je
or
pusha
sub
scas
aaa
mov
fstps
sub
xor
push
and
loope
lret
int3
inc
insl
addr16
test
xchg
sahf
jmp
dec
push
pop
xchg
in
pusha
jmp
fsubl
decl
scas
mov
inc
jmp
lret
lock
and
sbb
adc
aaa
aas
hlt
xor
daa
test
sub
mov
sbbb
mov
inc
jmp
xlat
movsl
popa
faddl
dec
dec
in
mov
inc
pop
mov
inc
push
lods
mov
add
inc
pop
repz
lds
sahf
hlt
lea
arpl
pop
test
fisttpll
fstpt
cmpsb
xchg
adc
sarl
adc
stos
into
int3
mov
pop
leave
or
adc
inc
in
lea
pusha
lds
in
inc
in
cmp
popa
leave
mov
mov
shrb
sbb
push
out
mov
jmp
cmp
adc
and
test
mov
cmp
mov
test
hlt
mov
xchg
ss
int
jecxz
sbbb
mov
inc
lock
dec
pop
and
xor
out
jp
movsb
fildl
testb
pop
or
cmp
pop
jnp
imul
mov
out
test
sbb
cmp
jne
loope
daa
lcall
inc
sbb
pop
movsl
es
cmp
sti
jnp
dec
mov
xor
andb
xchg
repnz
test
xor
sub
int3
and
push
mov
mov
sbb
pushf
sub
hlt
mov
mov
sub
scas
mov
data16
ja
in
xchg
flds
jl
lret
scas
pop
add
jg
arpl
rcrl
adc
int3
mov
int3
push
inc
mov
enter
fwait
add
cwtl
xchg
dec
mov
and
sub
mov
pushf
mov
inc
pop
mov
and
adc
push
pop
fwait
or
xchg
xchg
mov
mov
or
stos
add
scas
pushf
dec
xor
lret
mov
cmp
ror
rcrl
inc
inc
popa
pushf
mov
pop
cmpsb
xor
int
stc
mov
or
add
adc
mov
mov
ss
shrb
out
in
fcomps
push
push
movsb
dec
xchg
xchg
pop
mov
cmp
lds
or
push
fwait
mov
push
leave
cmc
scas
lds
sub
cltd
push
cli
movd
jae
add
into
test
scas
inc
jns
mov
iret
movsl
imul
imul
pop
shlb
xor
lds
jmp
lret
mov
push
jnp
dec
add
out
es
push
cld
pop
and
popf
mov
test
and
lret
aam
lods
xchg
add
add
ss
jns
sub
pop
fldt
iret
mov
mov
sti
in
fs
daa
mov
fcomi
in
mov
movsb
ss
jp
fwait
loope
sbb
scas
jecxz
mov
mov
jecxz
and
sub
jg
adc
jle
inc
js
mov
sbb
ret
hlt
cld
mov
adc
mov
mov
push
jge
mov
adc
xor
add
and
jecxz
sbb
int
lods
jmp
push
xchg
scas
xchg
andb
push
inc
and
test
add
dec
sbb
jns
jb
mov
insb
sub
icebp
pop
pop
test
cwtl
push
in
shlb
imul
xor
rcl
test
into
pop
push
cmp
push
aad
inc
outsl
inc
clc
lea
mov
sbb
dec
or
xor
outsl
jb
in
mov
pop
cmp
lahf
sub
sub
jp
jmp
mov
adc
mov
or
enter
jo
inc
out
pop
fsubrs
rolb
sub
jg
fimull
adc
lahf
or
adc
mov
in
sbb
add
sbb
mov
or
sub
mov
movsl
xchg
ret
cli
mov
add
or
and
push
and
ljmp
adc
and
mov
mov
adc
std
inc
sbb
sub
sub
popa
in
mov
xchg
lods
movsb
push
divl
jo
mov
push
jne
or
mov
inc
es
sub
xchg
xchg
sbb
in
push
fistpl
xchg
cmp
mov
push
fwait
adc
lock
mov
mov
dec
xchg
mov
mov
pop
sbb
xor
sub
push
data16
mov
int3
sbb
fmuls
push
or
fwait
dec
push
mov
imul
mulb
or
addr16
mov
mov
repz
add
xchg
push
lret
ret
lret
mov
adc
sti
pop
loope
movsl
arpl
xchg
add
movsl
add
and
das
rclb
pop
mov
xchg
mov
fwait
insl
shlb
setl
push
mov
mov
inc
in
lds
insl
fcmovnb
add
pusha
jo
loop
jbe
orb
movsl
add
xlat
lret
dec
cmp
cmpsb
push
xorb
adc
mov
or
inc
or
pop
loopne
sti
aaa
adc
cmp
dec
aam
test
inc
lods
jbe
aam
xchg
lahf
outsl
dec
push
pop
stc
shll
or
add
cmp
mov
ja
jbe
lods
xor
leave
lret
lods
cs
stc
movsl
pop
popf
mov
lods
imul
sub
dec
mov
xchg
xor
cltd
lret
pop
adc
aas
jmp
or
sbb
mov
lods
dec
dec
lds
adc
push
cltd
ret
lret
aaa
inc
or
push
mov
popf
add
xchg
push
ret
mov
dec
movsb
or
sbb
xchg
arpl
push
xchg
popa
lcall
dec
xor
mov
push
movl
mov
push
push
xorps
movsl
arpl
fisubl
test
push
pop
push
imul
lahf
test
sahf
dec
pop
push
insb
std
sahf
xchg
add
push
pop
mov
cmpsl
sbb
adc
cld
and
sub
dec
popf
mov
in
lds
jl
fidivl
dec
mov
hlt
jbe
adc
adc
sub
sub
lcall
outsl
dec
shll
adc
pop
and
xor
mov
hlt
shr
pop
push
sub
lcall
fwait
sub
loope
mov
int
jne
testb
xchg
mov
adc
cwtl
cmpsl
hlt
cmpsl
adc
movsl
aad
xchg
sbb
enter
mov
cld
hlt
add
add
inc
popf
fcoms
std
cmp
aam
inc
mov
inc
ja
push
loope
sub
lods
jne
inc
sbb
popa
dec
xchg
ja
mov
mov
inc
fldenv
push
addr16
jg
jle
cmc
scas
aam
xor
in
jae
into
pop
test
movsl
mov
rcrl
fidivrl
or
push
dec
aad
in
clc
out
rcll
in
pop
xor
jge
cmp
data16
mov
inc
rorb
mov
dec
adc
mov
or
or
mov
lods
and
gs
movsb
popf
mov
shlb
or
bound
inc
inc
jecxz
dec
outsl
dec
cmp
enter
sub
aam
mov
jmp
ljmp
pop
adc
nop
adc
pop
in
aad
call
lods
push
ret
imul
xchg
cmp
sub
sahf
xchg
outsb
mov
push
and
lret
xor
dec
cmpsl
test
sbb
sbb
vpavgw
or
xchg
jns
push
outsl
or
mov
leave
loopne
push
pop
mov
adc
inc
ret
test
ss
js
or
inc
stos
ja
movsl
stos
jp
xor
pop
sbb
cmpsl
dec
cmp
and
cmp
bound
outsb
pop
pop
std
leave
xor
jl
lods
sbbb
movsl
ja
fwait
xchg
cmp
out
fsubr
push
cmpsb
mov
push
lds
popf
insb
add
push
mov
dec
or
dec
fldt
fucomp
sub
xchg
pop
xchg
lods
sbb
jb
jo
sub
lret
pushw
cmp
add
div
popa
cs
adc
cli
pop
inc
adc
and
pop
mov
xchg
xchg
inc
and
movsl
push
test
push
push
pop
adc
popf
pushf
cmpsl
push
mov
mov
adc
int
dec
outsb
lds
mov
iret
jecxz
mov
cs
fmul
sbb
in
mov
adc
jns
push
arpl
mov
mov
pop
mov
out
int3
mov
iret
xchg
mov
mov
xor
jl
int
xor
cmp
cmpl
and
fwait
mov
mov
outsl
ds
fcmovbe
rorb
pop
jl
sub
push
test
sbbb
cmpsl
mov
push
jae
lods
push
inc
in
push
mov
sbb
mov
movl
dec
test
adc
in
iret
lahf
orl
cmc
std
jb
sbb
xchg
dec
fwait
movsl
insb
fdivl
pop
es
mov
mov
shl
movl
and
and
jmp
leave
jle
cmp
sbb
ret
stc
out
mov
stc
push
lock
sbb
mov
dec
xchg
lret
and
jae
les
les
into
push
mov
sahf
push
ja
int
sahf
mov
push
scas
data16
lods
shrb
mov
adc
loope
divl
sub
pop
in
adc
push
add
repnz
outsl
push
in
les
jnp
mov
dec
add
and
dec
movsl
dec
xor
sbb
push
in
cmc
jne
cmp
inc
xlat
testb
inc
jne
test
lcall
inc
fiadds
ret
movsb
popf
adc
mov
jl
push
popf
jne
lods
mov
dec
in
mov
lods
sub
hlt
repz
jb
inc
loopne
add
xchg
lcall
sbbb
mov
cs
in
mov
mov
add
cwtl
mov
imul
scas
add
outsl
or
call
dec
nop
inc
mov
mov
aam
pop
das
out
add
add
out
jmp
movsb
les
adc
jno
xor
mov
mov
or
jnp
lret
adc
fwait
cmpsl
inc
sti
imul
sbb
or
pop
gs
jle
aaa
test
arpl
scas
push
divl
pop
in
movsl
jp
add
mov
mov
popa
inc
or
hlt
in
push
lea
sbbl
pop
push
lds
inc
dec
clc
pushf
and
or
in
std
or
ds
sub
add
stos
mov
fistps
push
inc
xor
cmp
pop
sub
jne
mov
mov
leave
subb
cmp
cmp
jne
fidivrs
push
add
lret
push
or
dec
pop
xorl
pop
adc
inc
xchg
cwtl
push
lea
adc
ret
push
mulb
repz
dec
dec
jg
std
pop
mov
lea
mov
mov
mov
movsl
jmp
push
imul
pop
cld
sbb
cmp
lods
outsb
bound
insl
xor
test
mov
mov
loope
frstor
cmp
clc
pushf
jl
mov
fisttpll
cmp
lods
mov
push
jp
bound
pop
test
dec
push
mov
cld
xor
and
dec
aaa
jo
scas
sub
repz
or
jno
mov
jbe
insb
pop
push
sbb
lret
aas
add
jb
addr16
mov
mov
adc
lods
es
fwait
sub
xchg
lds
cwtl
xchg
pop
pop
or
mov
sarb
pop
inc
movsl
sti
aad
insb
xor
icebp
mov
lock
mov
mov
cmp
jne
jb
lds
pop
and
sbb
sub
pushf
push
dec
in
jp
and
mov
ret
cmp
fwait
sub
lds
cmp
lcall
mov
mov
mov
mov
iret
add
adc
add
lret
mov
jns
cmp
sbb
and
mov
into
pop
jbe
pop
hlt
sahf
xchg
mov
cmp
or
lds
push
incl
lcall
xor
or
cmc
xchg
xorl
lcall
mov
sbb
mov
mov
movsb
push
add
test
pop
push
lock
out
push
int
or
rcl
cmp
test
push
jecxz
jns
mov
mov
lret
clc
add
fsts
mull
mov
xchg
cmc
divb
xchg
ja
and
jecxz
rcrb
sbb
fsubl
lea
decl
xchg
ja
aad
arpl
call
ja
lock
pop
pop
adc
movsl
test
popf
sbb
mov
jb
xchg
cmpsb
imul
push
mov
pop
xchg
loopne
lret
outsl
or
sbb
in
fs
loopne
mov
fstl
call
cli
jge
cmpsl
mov
lds
adc
loope
shll
mov
jmp
sbb
iret
cmpsl
fwait
shll
or
sahf
add
cmp
lret
in
or
push
loope
jno
clc
pop
xor
icebp
pop
js
fwait
add
shlb
hlt
cmp
in
mov
xchg
inc
lds
movsb
pop
shl
cmp
mov
sbb
sub
fsubrl
movsl
or
pop
and
push
push
iret
mov
imulb
cmc
jge
pop
pop
dec
roll
cmp
pop
fcoms
and
shll
stos
cmp
out
mov
mov
pusha
notb
movsb
sub
loopne
jno
push
outsb
or
or
and
jmp
dec
pop
int
cmp
lret
es
fbstp
jns
int3
aad
jle
into
outsl
in
cld
mov
or
lea
jmp
mov
sub
aad
xchg
int3
mov
add
shll
fisubs
sub
adc
xchg
repz
add
jmp
cmp
mov
jmp
shl
icebp
gs
push
or
fcoml
inc
pop
adc
repnz
inc
lods
test
and
and
int3
adc
sub
push
fbld
push
inc
jecxz
inc
or
int3
test
xlat
mov
pop
mov
inc
out
loopne
xor
xchg
rorl
shll
pop
xchg
xchg
pop
add
int
lods
dec
cmp
hlt
cmp
adc
mov
sarl
hlt
sbb
mov
inc
pop
sbb
xchg
sbb
add
in
lock
and
lea
mov
mov
xor
imul
adc
les
out
cmpsl
lock
daa
sub
mov
jae
jl
lds
lds
cmpsl
mov
and
iret
add
xchg
inc
or
jl
adc
push
xorb
xchg
xchg
shr
into
lods
xor
rorl
mov
jle
mov
mov
adc
xor
outsb
ja
mov
xchg
hlt
fwait
popf
inc
sub
movsb
loopne
mov
scas
into
dec
outsb
mov
push
pop
in
movsl
ret
push
mov
dec
dec
mov
call
in
cld
cmp
adc
add
fdivr
scas
outsl
mov
push
jp
pop
add
inc
sbb
jae
lds
mov
push
sarb
in
repz
ret
mov
jp
in
int3
aam
inc
iret
add
or
sahf
lods
dec
stos
xchg
outsb
xchg
negl
cwtl
sub
test
add
cld
fldt
lods
stc
cmp
mov
cmc
push
clc
popf
daa
jecxz
jb
pop
scas
fnsave
std
xor
cpuid
stc
and
pushf
mov
lods
cmpsb
mov
sti
inc
sti
push
pop
dec
movsb
repnz
int
jno
and
push
cmp
stos
movsl
sbb
add
xchg
mov
les
push
mov
jae
dec
add
xor
in
lds
rcr
pop
stos
mov
dec
xor
lret
imulb
ja
mov
sub
lods
sbb
jae
pop
lods
dec
inc
mov
jle
sub
pushf
jmp
push
dec
pop
add
fs
jmp
repnz
hlt
subl
push
test
ret
mov
fsubs
adc
mov
ret
dec
push
push
inc
xlat
insb
cwtl
movsl
mov
and
mov
jb
test
scas
mov
insl
inc
stos
cwtl
clc
or
cmp
sbb
fbld
jne
mov
pop
adc
pop
call
mov
and
jnp
fs
stc
pop
pusha
and
cmpsb
or
mov
call
lcall
aam
xor
inc
mov
test
mov
daa
mov
add
fidivs
mov
pop
mov
fstps
lret
movsl
pop
pop
dec
cmp
push
mov
in
mov
imul
mov
fwait
cmp
xchg
or
mov
rorl
jno
add
dec
cld
mov
call
dec
andb
xor
mov
sub
ficompl
mov
test
push
mov
adc
push
sbb
push
xchg
sub
outsb
lea
or
cmc
jge
lods
pusha
sbb
sub
icebp
push
xchg
jbe
mov
push
mov
add
xchg
xchg
mov
push
es
mov
movsl
xor
dec
cwtl
xchg
mov
enter
repz
jg
pop
hlt
adc
add
and
push
inc
push
adc
mov
cld
pop
mov
inc
test
sbb
inc
cwtl
imul
lcall
dec
aad
ret
stc
pop
and
stc
aad
xchg
stos
add
xor
stc
xlat
xor
lods
xchg
rclb
ja
sbb
es
mov
mov
lcall
icebp
loop
dec
scas
ds
fdivrl
mov
addr16
push
sub
or
mov
jae
je
imul
adc
xchg
or
inc
out
test
mov
mov
inc
dec
xchg
push
jmp
fmull
add
movd
jge
mov
mov
lds
icebp
insb
jp
popa
into
sbb
rcll
cmp
mov
fidivrl
in
cmpsl
in
retw
or
sub
fistpll
add
mov
sub
scas
shll
jbe
out
insl
imul
sub
in
stc
or
mov
cmp
add
jb
mov
mov
inc
std
mov
nop
inc
lods
jmp
dec
movsb
push
ror
dec
lcall
ss
sub
push
cmp
shr
movsb
dec
jmp
or
xchg
lods
stos
dec
subb
scas
pop
sub
jns
add
push
jmp
jno
pop
mov
mov
pop
xchg
push
inc
sahf
mov
sbb
jecxz
lea
mov
pop
jno
cmp
sahf
jo
push
loope
dec
mov
inc
push
adc
testl
and
mov
mov
sub
hlt
aas
in
jle
nop
push
xchg
adc
pop
flds
mov
in
jne
in
inc
fsubr
cmp
bound
sub
fstpl
cmpsl
adc
cmpsl
lods
sub
lea
rclb
push
movsb
fst
js
mov
das
call
mov
mov
sub
lods
xor
test
mov
arpl
xor
lea
lcall
or
xchg
inc
in
call
push
mov
imul
push
lds
jo
inc
enter
mov
xchg
xchg
inc
or
add
out
mov
adc
lret
cli
or
cmp
mov
movsb
ret
mov
mov
lods
xor
add
add
inc
jb
lea
sbb
mov
cmc
loop
push
pop
aad
mov
jecxz
test
in
and
sbb
mov
push
lret
sti
sbb
mov
adc
sbb
or
test
cld
mov
ljmp
je
pop
cmpsl
cmp
in
ja
fnstenv
stos
movsl
mov
dec
out
add
lahf
dec
daa
pop
leave
push
jo
insb
sub
sahf
daa
mov
sub
movsl
jae
in
add
jb
pushf
mov
fdivs
mov
aaa
or
adc
xchg
sarb
mov
or
in
mov
dec
ds
hlt
inc
mov
dec
in
dec
lret
cmpsl
jne
andb
xor
xchg
nop
sub
pop
push
aas
fnstcw
mov
popf
cmpl
shl
inc
shl
testl
mov
pop
cmp
int
mov
fildl
div
loopne
cmp
loopne
repz
push
adc
fucomi
negb
mov
mov
push
nop
mov
jecxz
jae
rcrb
sub
xor
mov
ljmp
xor
shrl
scas
mov
ja
jae
inc
mov
hlt
mov
frstor
cmp
add
xchg
pop
cmp
lahf
hlt
sub
sbb
addr16
sbb
pop
int3
shl
xchg
in
sbbl
pop
ljmp
dec
xor
fildll
movsl
jmp
sbb
mov
xchg
int3
mov
sbb
cmpsl
rorb
jp
pushf
negb
jb
add
lods
sub
cmp
out
popf
pop
out
movsl
mov
call
dec
xchg
leave
repnz
je
pop
testb
into
adc
and
arpl
add
jge
std
push
ljmp
aam
mov
mov
jecxz
pop
cmp
lods
cltd
std
fldl2t
inc
push
xchg
sbb
mov
jne
lret
pop
movsl
lahf
decb
mov
int3
xchg
clc
mov
mov
rcrl
mov
outsb
in
test
adc
add
mov
xor
mov
xor
shrb
mov
ret
iret
pop
pop
pop
in
or
cmp
or
sbb
shll
push
int
mov
or
stos
popf
xchg
insl
lock
pushf
outsb
mov
adc
jmp
fcoms
mov
inc
push
or
cmc
adc
xor
ror
hlt
mov
daa
lods
add
lds
lret
fdivrs
and
mov
inc
pop
cmp
fisubrl
push
dec
push
mov
lods
clc
xor
sbb
movsl
lret
test
adc
sub
clc
outsb
movl
sbb
sahf
fildll
int3
xchg
add
adc
mov
int3
pop
sahf
xchg
lock
mov
pop
enter
jmp
mov
fnsave
idivb
lods
shll
lods
push
lock
ja
lock
and
mov
dec
push
inc
sub
cli
repnz
pop
fcom
cmp
pop
mov
mov
or
je
jle
and
jg
pop
aad
mov
ret
out
fwait
add
in
lret
movsl
push
pop
and
lds
add
insl
xchg
sbb
dec
and
in
sub
fwait
sub
mov
cmpsl
xchg
dec
dec
or
in
addr16
lret
ret
lods
in
leave
dec
xchg
inc
lds
mov
jne
aas
jae
mov
xchg
das
shll
cwtl
in
lods
add
aaa
imul
sbbb
nop
sub
inc
test
and
ficompl
push
add
into
mov
std
lods
mov
out
push
xchg
lods
iret
pop
test
mov
lahf
inc
jge
enter
mov
add
pushf
dec
xchg
hlt
call
add
cli
ss
ja
mov
in
adc
xchg
lock
mov
sbb
rclb
rcrb
insb
inc
vpcmpgtb
and
jne
flds
xor
sbb
sub
fcmovne
rcrb
ljmp
lds
cmp
ja
nop
out
ja
adc
outsb
xchg
mov
cmpsb
mov
movsl
mov
pop
insl
mov
test
sbb
xor
inc
jnp
orl
inc
out
xchg
sub
pop
outsl
shrl
inc
hlt
add
adc
int
movsl
in
mov
in
js
push
inc
or
add
aad
sub
icebp
vpaddusw
dec
cmp
mov
daa
ss
mov
data16
or
xchg
fiaddl
mov
sub
shlb
cmp
push
add
add
stos
lds
mov
ja
testb
lods
dec
adc
xor
hlt
popa
out
subl
mov
movsl
scas
jle
xchg
or
mov
pop
push
xchg
pop
inc
mov
lahf
mov
sbb
ret
sbb
nop
push
in
insb
pushf
outsl
mov
mov
icebp
jle
jne
imul
pop
inc
fcom
xchg
sarl
pop
scas
xor
jecxz
test
xchg
sbb
inc
push
int
popa
mov
addb
xor
pop
dec
test
call
add
xor
outsl
dec
shrl
jb
in
jne
stc
xlat
outsb
inc
mov
sbb
mov
into
test
cld
stos
push
enter
pop
pop
xchg
ja
das
lret
cmp
xchg
daa
adc
jne
rolb
in
aaa
push
push
adc
push
enter
push
out
sub
inc
xor
mov
xchg
sub
je
ljmp
inc
push
movsl
mov
mov
jl
xor
rcrl
cmp
fmuls
imul
aas
xchg
hlt
leave
rolb
gs
pminub
movsl
insl
movsb
dec
cwtl
mov
sbb
jne
out
xor
out
xchg
dec
int
movsl
add
push
in
daa
mov
fisubs
scas
pop
jmp
int
xor
outsb
mov
out
cmc
subb
jns
in
add
into
push
or
popa
dec
test
and
hlt
add
jge
push
jnp
cmp
mov
push
pop
movsl
test
sub
inc
clc
cmc
xchg
cmp
add
adc
subl
lods
icebp
outsb
jnp
adc
shrl
add
in
inc
xchg
lock
xor
mov
sarl
scas
cmp
daa
add
cmc
jno
cmp
adc
cmp
addr16
and
mov
test
in
pop
pop
scas
sbb
or
add
add
mov
jmp
lea
jle
cmpsb
jo
pop
inc
sbb
lds
mov
aam
out
movsb
popf
aas
xlat
xchg
jb
mov
scas
pop
mov
insb
mov
xchg
ret
mov
repnz
insb
mov
pop
enter
fwait
jb
into
testb
or
mov
lds
xchg
sub
cmp
loop
fcoms
push
add
movsl
push
mov
inc
cmc
and
and
insl
and
add
xchg
xorl
cltd
mov
mov
insb
std
sbb
push
lcall
clc
jmp
sbbb
jbe
or
mov
movsl
cmp
cmpsb
fldl
lcall
cwtl
adc
dec
clc
ret
xchg
lret
sub
popf
imul
dec
mov
mov
out
cld
shr
pop
outsl
xchg
cmp
sub
movsb
cmp
int3
lds
xchg
stos
inc
push
popa
add
lods
and
shrb
mov
jge
ja
repz
fldt
mov
jl
xlat
jne
test
xchg
mov
dec
xchg
leave
xchg
add
lds
pop
in
add
and
mov
dec
lds
test
daa
mov
mov
mov
add
mov
jae
dec
popf
dec
pushf
lret
sti
xchg
mov
sub
jl
movsl
popf
out
push
int3
loope
push
cmp
pusha
push
sub
xchg
cmp
ja
cmp
cs
dec
mov
push
cltd
jp
jmp
mov
stc
dec
jno
cltd
lods
mov
adc
lock
imul
add
movsl
rol
mov
lds
pop
sbb
push
cwtl
imul
fcomps
in
and
add
ficoml
xor
inc
ja
mov
xlat
test
inc
pop
cltd
fisubrl
daa
cmpsl
xchg
fimull
sti
shrb
mov
dec
or
mov
xlat
ror
xchg
mov
out
adc
scas
add
frstor
out
les
cmpsb
mov
stos
sub
cli
call
mov
sbb
cmpsl
scas
scas
add
xor
push
inc
mov
ljmp
dec
cld
mov
xlat
xor
cmp
push
mov
in
loope
mov
cmp
pop
sahf
cs
js
pop
lds
add
fstpl
pop
sbb
xchg
adc
add
pushf
xchg
mov
insb
lds
add
outsb
outsl
dec
leave
jnp
es
cmpsl
cli
mov
xor
popf
int
xchg
push
sub
xor
fildll
and
lret
movsl
fcmovnbe
xchg
hlt
fs
pop
xchg
jb
in
pop
notl
fwait
xchg
mov
callw
sub
cmpsl
inc
add
push
mov
add
les
mov
iret
arpl
cmpsb
aam
cmc
jle
mov
and
adc
sbb
cli
loopne
mov
pop
imul
ja
outsl
or
pop
pop
dec
aad
cmpsl
popa
push
mov
rcl
inc
lock
xor
iret
scas
mov
out
ljmp
mov
xchg
xchg
test
cs
inc
xchg
cmp
int
mov
fcmovb
push
std
xchg
orl
outsb
and
loopne
add
cmp
and
in
daa
inc
sti
insb
jbe
mov
mov
in
movsl
arpl
push
adc
aas
lahf
outsl
push
sbb
inc
shrb
push
mov
pop
sbb
lds
dec
movsb
push
mov
imul
ss
loope
aas
lds
scas
int
mov
cltd
leave
sbbb
xchg
mov
jecxz
or
gs
imull
jnp
adc
xchg
sahf
push
ja
lds
jmp
push
daa
into
loopew
int
fcoms
cmp
inc
inc
gs
rolb
enter
mov
jl
xor
aas
push
rsqrtps
adc
push
mov
xor
aam
imul
movsl
sbb
and
outsl
jnp
mov
ret
mov
xor
mov
in
cmp
outsb
add
push
xlat
ret
outsl
mov
mov
mov
sub
mov
xor
lea
xchg
clc
test
scas
aaa
lds
inc
cmp
sbb
cmp
shrb
dec
add
aas
add
ficompl
add
jp
shl
xchg
inc
inc
pop
nop
add
or
xor
daa
lret
in
mov
dec
movsl
stos
ret
sbb
sub
push
add
sub
test
fistl
les
add
ja
pop
mov
in
jmp
mov
int
and
pop
jmp
lds
inc
mov
clc
das
and
or
cmc
aas
mov
jne
adc
push
mov
mov
sbb
xor
push
inc
inc
mov
in
add
repz
lahf
enter
movsb
inc
or
mov
adc
push
scas
cli
lds
sbb
addl
jmp
pop
mov
fwait
lea
jne
xor
cld
or
xor
out
jmp
lcall
mov
dec
mov
aas
daa
cltd
sub
rolb
mov
rcpps
in
xacquire
pop
add
out
scas
mov
cld
or
sub
pop
into
arpl
je
mov
out
lret
mov
stos
outsb
lds
jmp
scas
subl
in
jo
lds
inc
ljmp
adc
push
and
pop
mov
stos
js
insb
pushf
test
incl
test
jae
ja
test
add
jo
xor
cwtl
jnp
xor
in
out
xchg
loope
aaa
add
mov
inc
inc
push
std
jmp
and
cmpsl
js
rorl
test
xchg
xchg
dec
add
pop
xchg
xchg
adc
and
mov
movsl
cli
mov
repz
outsl
mov
insb
mov
dec
dec
into
mov
hlt
mov
add
xchg
inc
cmpsl
add
mov
test
pop
fcoms
es
adc
repz
or
dec
fstps
dec
movsb
in
sub
or
push
lret
shlb
ficoms
fistps
ror
cmp
jecxz
js
lds
cmpsb
jmp
imul
or
or
pushf
lds
jnp
imul
shr
xor
sub
and
adc
iret
movsl
pop
jns
add
sbb
rcrb
mov
out
mov
adc
xor
into
lods
xchg
add
jmp
aam
scas
sbb
lds
add
cmpsl
shl
sbb
pop
cwtl
add
inc
hlt
mov
mov
adc
in
pop
add
dec
movsl
inc
sub
nop
pop
xchg
push
xchg
shlb
out
iret
push
lret
out
test
mov
jp
popa
inc
mov
cmp
or
fnstcw
aam
mov
jb
test
adc
mov
pop
adcb
xchg
popf
das
notb
leave
jns
dec
mov
sbbb
adc
jmp
stc
jo
out
arpl
aam
js
inc
adc
loope
pushf
incb
push
cmp
jmp
int
and
fmull
push
daa
push
cmp
call
sbb
mov
ss
push
jnp
sub
test
mov
imul
loop
scas
xlat
cmp
aas
hlt
xchg
xor
fisubrl
sbb
leave
cwtl
sbb
sub
jle
cmpsb
or
push
pop
inc
lahf
jmp
adc
rorb
sbb
add
mov
jne
xor
daa
into
mov
data16
pop
add
out
lds
or
cmpsl
insb
jns
in
mov
fimull
inc
into
fwait
cli
sub
xchg
cmovp
mov
cli
test
xchg
sbb
rcr
lds
xor
fdivrp
pop
leave
leave
lcall
notb
imul
sub
stc
test
add
sbb
dec
adc
xlat
shrb
xchg
inc
adc
gs
sbb
pop
lcall
push
lods
push
inc
rcl
or
iret
jp
mov
ljmp
int3
lahf
lret
fdivs
fstpt
dec
fisubrl
js
cmpsl
call
mov
ja
push
mov
inc
fnsave
in
add
shlb
cmp
or
inc
je
insb
out
add
xlat
xchg
xchg
push
loope
xor
push
in
icebp
push
mov
add
lret
pop
mov
push
add
push
lock
xchg
xchg
movsl
repz
push
push
mov
jno
outsb
imul
in
xchg
add
and
leave
push
inc
push
push
icebp
or
sarb
fsubs
cmp
pop
hlt
push
push
mov
adc
fiadds
cmp
outsl
dec
sub
sti
inc
inc
or
push
push
popf
cmpsb
int3
mov
mov
aas
mov
xor
inc
movsb
dec
and
in
mov
sub
pop
movsl
sbb
loopne
lds
sbb
daa
xchg
fistpl
push
mov
jae
sbb
sub
cmp
pop
xchg
popa
mov
mov
pop
repz
leave
xchg
mulb
xlat
repz
push
mov
adc
cltd
dec
push
pop
loop
add
mov
stc
jp
out
jmp
and
imul
cmp
mov
push
mov
insb
fisubrl
adc
lret
pushf
add
jb
jmp
xchg
pop
jecxz
lcall
ret
popf
xor
cli
add
popa
sub
movsl
int3
pushf
or
sbb
cli
fistpll
jl
jae
das
lock
or
mov
lods
adc
stos
mov
push
aad
fsubrl
xor
fwait
inc
outsb
addb
aam
mov
or
xchg
cmp
lea
xchg
mov
into
pop
loopne
cmp
sub
xchg
orb
loop
mov
clc
inc
movsl
mov
add
sub
mov
movsl
faddl
push
addr16
sub
sub
xchg
mov
push
jl
push
add
fs
iret
sub
ja
sbb
iret
dec
inc
xchg
ror
inc
daa
dec
pop
mov
dec
repz
ljmp
jns
syscall
xor
pop
mov
scas
xchg
pop
in
cmpsl
je
cmpsb
das
sub
test
lock
mov
sub
xchg
jb
and
sbb
sub
rclb
mov
xchg
xor
add
pop
pop
test
mov
mov
stc
dec
mov
jbe
sbb
push
xchg
sub
icebp
push
movsb
lea
arpl
jge
push
push
dec
adc
sahf
and
pushf
outsb
sub
and
push
jp
loop
adc
aaa
int
lds
out
lret
out
inc
mov
pop
aaa
call
mov
movsl
dec
cmp
movsl
push
fcmovnb
fisubrs
into
int3
inc
add
mov
push
std
inc
loope
fisubl
inc
inc
xchg
mov
pop
jnp
fs
repz
cld
sub
fsub
xchg
cs
imul
xlat
push
clc
cmp
push
xor
mov
movsb
shr
aas
push
sbb
mov
movsl
mov
lods
jge
mov
or
fldt
xchg
cmc
scas
ss
shrb
cmpsb
aad
hlt
loope
mov
mov
imul
je
popf
adc
mov
mov
xlat
xchg
or
cmpsl
leave
push
inc
aas
push
sub
sub
sub
lds
int
pop
jecxz
cmpsl
scas
dec
sub
ljmp
fs
enter
dec
push
cmc
add
daa
inc
in
cwtl
test
roll
out
cwtl
mov
test
xchg
dec
adc
cmc
and
ret
shll
mov
and
test
mov
popl
dec
jle
mov
fldcw
adcb
pop
aaa
leave
int3
test
jl
adc
cwtl
js
shll
adc
daa
cmp
add
das
sub
jmp
ret
push
mov
sub
outsb
add
dec
xlat
pop
aad
inc
dec
sub
inc
mov
lds
sti
inc
adc
faddl
inc
mov
sbb
sbb
add
mov
sub
movsl
popf
push
sub
push
lcall
cmp
xchg
pop
lret
movsl
sbb
jg
add
cli
and
sarb
sbb
cwtl
jmp
mov
xchg
testb
lods
adc
adc
sub
xor
xchg
fiadds
cmp
repz
das
clc
loop
aaa
outsb
push
call
ljmp
pop
enter
lds
inc
sub
mov
stos
enter
sub
mov
lods
mov
test
int
push
mov
lds
jnp
or
repz
or
jne
aaa
js
inc
add
add
cmpsl
int
lahf
addr16
inc
test
push
aam
shl
loope
add
jbe
sahf
popf
mov
dec
mov
jge
cmp
insb
add
mov
or
and
inc
jmp
push
sub
subb
cmp
scas
cmp
push
mov
lds
lods
jne
mov
movsl
loop
dec
cltd
inc
and
test
enter
mov
cld
test
pop
xor
dec
in
insl
sbb
mov
mov
sub
jl
pop
mov
mov
movsl
into
cmpsb
mov
xor
lods
mov
jnp
lods
jge
mov
sub
roll
movsb
mov
cli
dec
aam
or
lds
add
sbb
cwtl
xlat
inc
repz
jb
negb
bound
xchg
xor
push
mov
dec
or
cld
cmpsl
sahf
or
scas
or
inc
mov
sti
jb
subb
test
sahf
push
pushf
outsl
and
xor
negl
jge
dec
jnp
movsl
push
ja,pn
mov
and
xchg
lods
cmp
mov
xor
mov
rolb
lea
adcl
push
ret
into
lods
ficoms
lock
mov
add
out
pushf
and
inc
sbb
in
faddl
sti
mov
add
mov
jmp
sub
xor
lds
cmp
pop
pop
sub
inc
sub
xchg
xlat
out
jge
push
xchg
add
orb
in
or
jbe
leave
pop
lods
sbb
lds
bound
dec
push
stos
sbb
pop
lcall
jle
int
mov
movsl
icebp
xlat
cwtl
scas
sbb
psraw
jmp
pushf
sahf
es
adc
andb
icebp
push
jbe
cmc
sbb
pop
inc
das
xchg
dec
fcoms
add
aaa
mov
push
flds
sbb
out
push
xor
cmp
bound
mov
lea
sbb
xor
popf
mov
in
sub
pop
out
lret
mov
sti
xor
inc
lret
mov
adc
daa
add
aam
inc
data16
outsl
jnp
es
xor
cld
xchg
ja
daa
cmp
in
imul
xchg
aad
push
inc
sbb
mov
dec
mov
test
sub
adc
loope
dec
dec
pop
iret
movsl
mov
add
hlt
xchg
or
lahf
lods
rorl
sub
shlb
jg
arpl
wbinvd
pop
mov
stos
or
in
cltd
outsb
and
push
jmp
xor
adc
ret
mov
lock
repz
outsl
imul
stos
mov
push
dec
push
out
mov
or
inc
fldenv
jge
adc
xor
cmpsl
ret
push
dec
sahf
xchg
xchg
mov
insl
loope
push
ljmp
addl
lcall
dec
mov
xchg
or
push
mov
pop
adc
test
sbb
gs
pop
cmc
and
push
loop
jb
icebp
outsb
add
jne
jo
andl
sbb
pop
pop
lods
lods
mov
xchg
hlt
fdivl
mov
xchg
push
imul
pushf
push
mov
push
cmova
aas
nop
shl
aaa
pop
mov
movsl
lahf
fs
fmull
pop
jp
push
jne
pop
dec
ja
cwtl
mov
sub
mov
mov
dec
loop
movsl
sub
xchg
das
in
xchg
push
mov
adc
rcl
loope
or
mov
hlt
pop
dec
sbb
pop
xor
mov
sbbb
mov
mov
popa
es
lea
pusha
fs
mov
popf
iret
mov
jb
jmp
repnz
mov
aam
dec
aas
popa
test
adc
push
lds
test
push
push
scas
int
addr16
lea
int3
addb
push
mov
push
mov
js
scas
popl
int
sbb
jbe
orl
dec
and
arpl
enter
cwtl
adc
cmpsb
ret
add
imul
xchg
std
rcll
jnp
fwait
hlt
mov
fnsave
adc
notb
jb
pop
lds
cmp
adc
push
lds
aad
dec
int3
cmp
sbb
mov
cmp
addr16
add
sbb
cmp
sbb
sub
mov
movsl
outsb
xor
pop
mov
push
out
xor
shll
ret
xchg
stc
mov
sub
gs
clc
sbb
mov
hlt
arpl
mov
nop
mov
sub
pop
sbb
push
mov
push
xor
sbb
clc
cmpsl
lods
outsl
enter
mov
lds
or
into
mov
mov
call
sub
xor
cld
insb
inc
mov
aam
or
push
hlt
shlb
push
dec
sub
or
lds
xor
sub
fnstenv
sbb
in
add
jl
pop
sbb
pop
cmpl
mov
stc
sahf
sahf
cmp
lods
or
insb
pop
push
mov
sahf
sub
sbb
mov
lock
add
inc
fwait
and
push
enter
dec
cmp
cltd
into
cmpsl
xchg
pop
ja
jecxz
adc
cmp
cmpb
leave
dec
movsl
es
sbb
aaa
dec
aas
nop
insb
lret
add
add
imul
daa
mov
mov
xor
fstpl
cmp
in
cmpsb
add
je
and
mov
jp
add
mov
aas
out
pop
lods
xchg
jo
jns
fcompl
mov
mov
adc
xchg
lea
int
popa
outsb
in
xchg
int3
add
or
sbb
jmp
xchg
fadd
fisubs
jg
mov
ljmp
into
or
xchg
shrl
xchg
test
test
sbb
lds
adc
dec
bound
pop
mov
xchg
xchg
mov
mov
or
and
cwtl
repnz
adc
icebp
push
sets
clc
sub
dec
stos
arpl
and
xchg
sub
xchg
mov
lds
jo
ljmp
xchg
sub
loope
in
lods
push
cmp
adc
sub
pop
sub
xlat
stos
stos
push
fidivl
in
pop
add
icebp
or
enter
xchg
imul
mov
push
shlb
imul
sbb
sti
mov
lret
mov
pop
inc
in
mov
jne
push
notl
cwtl
sbb
jle
mov
test
xchg
jnp
fcmovnu
mov
orb
hlt
frstor
stos
xchg
jb
add
mov
repz
push
js
push
sbb
lea
jno
scas
rcrb
cmc
sahf
sub
mov
les
sbb
pop
mov
movsl
scas
daa
sub
pop
push
adc
mov
mov
mov
jae
fsqrt
sub
cmp
dec
or
sub
movsl
mov
xor
ja
rcll
aaa
cmc
mov
jecxz
mov
push
scas
int3
mov
mov
xchg
dec
add
ds
add
daa
and
jae
int3
mov
cmp
cmp
lea
dec
out
xchg
adc
cmpsl
addr16
jnp
add
jmp
mov
push
sbb
js
inc
xchg
dec
test
push
cs
mov
xchg
test
inc
add
adc
push
sub
jl
xchg
in
pop
fadds
sbb
mov
mov
push
jecxz
adc
mov
nop
scas
aad
ret
mov
sahf
inc
fnstsw
and
test
in
cwtl
mov
xchg
pop
fstpt
clc
inc
lret
and
or
ret
fsubr
movsl
fsubrl
ret
xchg
pop
inc
mov
hlt
adcl
inc
jmp
xchg
cmp
jnp
lcall
loopne
dec
ja
test
and
sub
es
aam
inc
mov
sub
add
adc
adc
fs
add
mov
pop
out
movsl
fstp
iret
or
dec
sub
or
in
xor
mov
ds
sbb
add
push
xor
cmp
outsb
mov
hlt
inc
hlt
lcall
pop
sahf
push
outsb
lds
jmp
push
mov
sbb
inc
pop
popf
push
clc
mov
sarb
jmp
leave
scas
lret
test
push
cwtl
loopne
sti
fisubrl
push
pop
lods
sbb
std
test
mov
jecxz
mov
xchg
and
add
mov
mov
outsl
cmp
iret
jmp
insl
push
mov
and
sar
add
mov
sub
inc
add
dec
xor
mov
test
inc
inc
adc
pop
mov
ljmp
xchg
dec
iret
mov
cmp
inc
push
inc
dec
in
mov
cmpsl
mov
add
call
push
adc
shr
inc
loopne
jp
or
xor
dec
repnz
mull
aaa
inc
jmp
movl
jg
stos
mov
mov
loope
sti
jmp
pop
add
hlt
orl
and
mov
xchg
popf
xchg
adc
xchg
std
shlb
enter
lds
imul
es
mov
and
xor
fisttpl
xchg
in
or
mov
fmul
out
lcall
pop
daa
daa
lds
outsb
and
jns
loop
fiaddl
push
mov
shll
mov
das
inc
or
push
repz
scas
xor
inc
iret
sarb
int
insl
xor
add
stc
fnstenv
ret
add
rorb
add
mov
repz
jb
and
vpperm
and
fistps
in
inc
in
lods
clc
dec
loope
stc
movsl
repz
loope
pop
push
xor
mov
cmc
add
fcompl
push
add
jecxz
xor
es
or
add
hlt
lds
in
fldenv
add
les
hlt
and
movsl
pop
into
xchg
mov
adc
scas
adc
mov
dec
cld
pop
xchg
mov
mov
push
mov
push
and
outsb
cmpl
xchg
lahf
movsl
in
push
sahf
dec
add
loopne
rorb
push
pushf
test
movsl
clc
ljmp
sub
scas
aad
cmp
ljmp
xlat
mov
pop
jne
sbb
lret
inc
movsb
sub
cmpsl
jbe
add
push
sub
xchg
jmp
or
addr16
xor
int
pop
enter
clc
jle
ret
sub
add
jmp
inc
sti
sub
push
loopne
push
leave
les
jnp
enter
in
adc
scas
add
and
je
inc
loop
lds
std
hlt
int3
jmp
sbb
mov
jmp
mov
inc
xor
fwait
addb
xchg
outsb
out
outsl
jl
and
cmp
test
pop
sbbb
fdivrs
mov
repz
mov
idivb
xor
ret
mov
lods
mov
rep
mov
jae,pn
imul
cmp
push
daa
add
into
push
jbe
lods
insb
movsl
popa
xor
jnp
cmpsb
pop
fwait
cltd
dec
jge
pushf
mov
fidivl
clc
cmp
sub
in
pop
cmpsb
push
insl
shl
lds
ja
xor
iret
out
lds
cmpsb
in
sti
lahf
add
int
aad
cwtl
push
jecxz
cmpsl
popf
arpl
fldt
push
jnp
add
lahf
mov
mov
movsl
out
adcb
cwtl
add
pop
jb
mov
icebp
inc
adc
fwait
das
call
fldt
xor
fnstsw
fidivrs
xchg
pop
js
pop
inc
mov
ljmp
sub
fwait
outsl
push
jb
push
test
jo
sub
jg
out
jae
fadds
out
pop
cmp
jecxz
in
add
leave
mov
lcall
sbb
int
lods
movsb
lock
insb
xor
idivb
sahf
aaa
sub
and
movl
inc
orb
out
add
iret
sub
imul
clc
pop
or
cld
rclb
mov
shrb
and
or
xor
inc
and
into
enter
outsl
lods
jle
xchg
call
enter
add
movsb
cmpsl
lret
xchg
mov
jmp
inc
sbb
pop
push
rcll
ljmp
sub
or
inc
gs
pop
cmp
sbb
fists
nop
shrl
jno
sub
stos
mov
mov
jo
shl
dec
in
ja
jns
jp
cmp
pop
cmp
mov
ja
leave
fcoms
pop
mov
test
sbb
movsl
jmp
xor
lods
mov
inc
sbb
push
mov
and
push
cwtl
mov
push
mov
push
lret
insl
jmp
xchg
test
mov
cli
arpl
add
test
jmp
es
into
fisubrl
sti
packssdw
lea
loopne
xlat
shlb
cmp
and
popf
pop
aaa
pop
cmp
inc
subl
rol
leave
xchg
andb
or
dec
lea
or
movsb
sarb
insb
adc
sbb
jecxz
mov
xor
push
pop
je
sbb
and
mov
add
xor
cmpsl
rol
xchg
into
mov
cs
bound
xchg
es
push
outsb
movsb
mov
pop
jo
jnp
cmp
js
jge
add
loope
mov
xlat
xchg
cltd
mov
nop
pushf
imul
jg
inc
mov
daa
int
cli
dec
je
xchg
or
pop
jmp
inc
sbb
dec
xor
daa
ja
mov
jge
mov
or
out
xchg
dec
dec
test
je
mov
dec
fistpl
ret
shl
inc
add
sahf
filds
fnsave
in
fs
xchg
push
mov
test
dec
inc
shrb
cwtl
cld
in
add
subl
insb
mov
sahf
iret
mov
aam
mov
ljmp
mov
ret
mov
daa
scas
mov
in
push
repz
add
jmp
mov
mov
add
outsb
ret
dec
clc
pop
iret
pop
pop
adc
das
sub
xor
dec
adc
jbe
sbb
leave
data16
subb
and
mov
movsl
adc
fisttps
int3
mov
add
cs
xchg
in
jns
ljmp
pop
shlb
lea
mov
push
cmpsb
hlt
stos
int
inc
idivb
adc
test
xchg
mov
cld
sarb
sbb
or
jmp
gs
jo
fwait
stc
outsl
lods
ss
add
cmp
sub
push
lea
adc
pop
les
data16
arpl
adc
jecxz
arpl
dec
nopl
sbb
pop
in
jmp
push
rol
pusha
mov
outsb
or
or
push
jbe
sub
sub
xchg
ja
addr16
int
dec
lcall
adcb
jp
outsl
lea
push
out
mov
adcl
and
or
add
mov
cmpsb
bound
inc
add
or
sbb
pop
ja
addr16
mov
dec
lock
add
pop
fwait
lcall
dec
lds
mov
pop
lret
lret
test
ja
cmp
fidivrl
iret
cmc
lods
add
inc
repz
cmpb
xchg
jne
mov
and
xchg
fwait
loopne
xor
aam
add
jp,pn
scas
repnz
lds
fsub
xchg
xlat
mov
outsb
test
sbb
les
pop
mov
ja
mov
and
pop
sub
fdivrl
and
xor
cli
rcrl
lds
insl
sub
adc
fwait
or
mov
sub
cs
sbb
cli
notl
push
fldl
inc
lret
das
fbstp
andb
sbb
rolb
lods
cld
mov
jae
shlb
push
test
popf
sarl
mov
in
movsl
add
sbbl
ficoml
scas
das
test
push
xchg
and
iret
imulb
inc
icebp
imul
cmc
in
das
lds
imul
push
cmpsl
dec
aam
repnz
sbb
dec
fbld
insl
mov
mov
adc
arpl
arpl
gs
movsl
dec
and
ret
test
out
add
movsb
jle
adcl
xchg
mov
lods
pop
movsl
in
fisubrl
ljmp
push
sub
pop
scas
and
call
pop
mov
dec
lock
push
lahf
movsl
fsubrl
pusha
push
in
push
adc
subl
out
movsb
or
daa
push
inc
or
adc
adc
sub
jp
daa
jns
movsl
push
inc
dec
sub
ja
mov
jecxz
dec
xlat
les
stc
out
and
leave
arpl
lret
xchg
pushf
pushf
push
pusha
pop
fcmovne
stos
or
xchg
add
jmp
loopne
cs
movsl
test
dec
or
mov
cli
sub
and
das
mov
int
pop
or
sub
adc
mov
mov
jl
aas
loopne
pop
movsl
add
sub
jge
xlat
fstps
xor
lds
pop
call
mov
popf
xchg
xchg
pusha
lahf
es
pop
test
sahf
push
or
cmp
arpl
xchg
and
pop
subb
int
addr16
leave
push
je
dec
or
in
mov
lods
xlat
or
jbe
cwtl
divl
push
sub
sub
push
pop
sub
fsubl
hlt
sbb
adc
mov
jecxz
outsb
xor
sub
mov
daa
dec
lea
jmp
stos
lret
ja
or
fcmovne
or
fdivrs
mov
in
mov
lcall
sub
shl
sbb
cmp
or
and
test
jo
jnp
into
dec
dec
fwait
cltd
shlb
xchg
mov
sarb
fiaddl
lods
adc
mov
mov
push
cmp
push
cmp
sub
mov
inc
sbb
or
or
sbbl
popa
xchg
sbb
or
mov
mov
orb
daa
js
jmp
lea
xchg
roll
jmp
add
push
addr16
pop
mov
hlt
orb
call
incl
fildl
out
lds
xor
les
mov
gs
and
push
cmp
lods
arpl
push
sbbb
xchg
push
push
xchg
popf
mov
les
in
lret
std
push
fstpt
jl
ret
movsl
pop
cmc
mov
cwtl
mov
shl
shl
xor
out
mov
testb
dec
stos
xchg
sarb
mov
out
xchg
sbb
mov
pop
dec
imul
inc
push
aad
dec
mov
dec
add
pop
or
mov
pop
bound
fmul
adc
add
add
out
xor
lods
push
insb
imul
rolb
add
inc
testb
into
pop
outsb
cmp
adc
das
push
xor
movsb
loope
mov
out
sub
stc
jp
or
fisttps
jecxz
negl
dec
icebp
adc
mov
push
dec
and
in
add
jno
fstps
enter
cmpsl
lods
dec
xchg
push
adc
and
add
and
subb
in
inc
out
mov
inc
mov
aad
movsl
mov
xchg
sar
bound
sti
mov
cmp
add
pop
outsb
repnz
roll
repnz
aad
cs
jp
inc
xor
test
mov
popf
mov
in
sbb
sbb
imul
inc
jl
mov
pop
cmpsl
mov
pop
outsl
std
lcall
dec
add
adc
fsubl
sbb
aad
pop
leave
in
test
popf
mov
xor
cmp
lods
lds
test
fdivs
cmp
xchg
aaa
imul
scas
sbb
dec
mov
adc
mov
lods
cwtl
lods
dec
mov
sbb
and
int
pop
test
add
sbb
lea
iret
xlat
push
mov
add
xchg
sbb
jp
mov
loopne
iret
sub
mov
popf
dec
scas
stos
loopne
lock
outsl
dec
sti
add
inc
lds
loop
jne
xchg
inc
lods
mov
repnz
in
add
mov
jmp
and
pop
cmpsl
xor
insb
mov
mov
xchg
ja
fisttps
mov
cmp
divb
cmp
pop
dec
push
mov
mov
fcmovbe
lahf
xor
aaa
outsb
cwtl
aam
push
xchg
rolb
pop
xorl
lret
pop
lcall
push
pop
cwtl
cltd
xchg
daa
fistpl
test
in
mov
pusha
movsl
ljmp
sbb
sub
push
test
lods
xor
lretw
mov
lds
xchg
arpl
fsubrs
pop
add
and
test
movsl
dec
mov
movsb
shrb
xor
cmp
movsb
xor
push
pop
es
sbb
sbb
fs
jbe
xor
adc
inc
jecxz
pop
dec
push
xor
push
xchg
int
pop
cmp
pop
fcom
mov
mov
mov
push
lods
mov
sbb
xchg
inc
clc
xchg
jecxz
xchg
mov
fldt
fcmovnu
aad
movsl
cwtl
idiv
fldcw
adc
cltd
dec
mov
sub
or
sub
or
and
xlat
mov
in
and
mov
cmp
sub
movsl
test
push
ret
fsubrs
sbb
or
adc
ret
xchg
mov
sbb
mov
push
push
or
pop
popa
popa
lods
sub
sbb
mov
sahf
dec
mov
lds
rolb
incb
push
xchg
jmp
minps
cltd
loope
mov
mov
outsl
or
dec
lahf
fbld
into
iret
push
hlt
mov
ror
es
or
mov
sahf
in
pop
scas
jns
scas
adc
outsb
add
insl
lcall
daa
mov
mov
fists
inc
loopne
xor
insl
dec
dec
repz
aad
mov
jne
movsb
enter
idivb
test
xlat
inc
cmc
in
mov
or
pop
inc
arpl
xchg
mov
cwtl
push
mov
mov
add
mov
and
jns
je
jbe
shlb
mov
mov
aam
cli
pushf
stos
fs
jle
ret
sti
push
xchg
addb
mov
aam
fwait
mov
shll
or
in
movsb
and
jne
fwait
lds
push
ja
adcl
jl
inc
xchg
ljmp
and
outsb
pop
pushf
fldcw
les
jmp
filds
push
in
sub
push
arpl
add
inc
ret
add
xor
push
xchg
add
push
jge
pop
dec
inc
mov
inc
sbb
xchg
lea
add
jmp
pusha
repnz
pop
jle
inc
imul
mov
push
sub
mov
jle
add
int
and
cld
sbb
fisubs
mov
mov
jbe
mov
loope
stos
aas
dec
sti
js
fidivl
pop
cmp
lock
fildl
dec
inc
xchg
inc
xchg
in
push
out
cld
cmp
mov
insb
sbb
sub
js
jmp
xchg
std
cli
in
imulb
sbb
mov
dec
ja
sbb
scas
inc
pop
cli
pop
loopne
xchg
dec
cmp
cmpb
mov
mov
mov
jecxz
xor
sbb
push
xchg
inc
lea
int3
in
push
shll
ficompl
sarb
jo
enter
push
xchg
shlb
sub
test
jb
or
ds
sub
mov
orb
mov
xor
fmull
daa
lods
fadd
jnp
aas
les
pop
xor
add
inc
ds
and
scas
repnz
pop
fadds
popf
mov
hlt
stc
pushf
int
fwait
push
mov
inc
inc
aam
adc
psubb
hlt
fwait
and
jns
push
ja
adcl
mov
sub
stos
movsl
dec
pop
sbb
or
adc
dec
mov
mov
jl
mov
and
shl
jnp
dec
pop
cmpsl
clc
je
dec
out
add
dec
fcompl
mull
test
shr
loop
and
mov
mov
pop
loop
fnstenv
mov
in
rolb
cmpl
jl
repnz
out
popa
cmp
xor
in
and
xchg
fistpll
les
cmovge
push
pop
cli
call
cmc
dec
enter
cmp
add
cld
add
mov
push
stc
adc
pop
jb
push
xchg
mov
push
jmp
js
movb
mov
add
shl
popf
or
sbb
or
ss
sbb
pushf
fwait
xor
inc
rclb
popa
xchg
push
jo
mov
pusha
xlat
mov
rcrb
rcl
aad
imul
in
dec
adc
in
mov
add
pushf
pop
inc
sbb
mov
push
jl
int
addb
xchg
je
in
dec
mov
test
inc
jl
ret
push
jg
das
movsl
ret
popa
mov
fmuls
lds
shrb
negl
inc
dec
inc
sub
push
xchg
mov
xchg
mov
sub
cmpsl
pop
jp
inc
mov
testb
mov
es
push
jmp
mov
mov
movb
int
sbb
mov
hlt
aaa
adc
adc
and
adc
sub
mov
and
adc
hlt
bound
in
cld
pushf
jg
sbb
testl
sub
jne
inc
lret
cmpsb
push
adc
xchg
adc
fisubs
pop
xor
lds
mov
push
jecxz
mov
divb
jns
fcmovnu
or
pop
ss
lods
dec
popa
gs
mov
cmp
fisttpll
dec
daa
in
movsb
xor
mov
bound
sub
dec
xor
ja
sub
mov
addl
push
in
lods
xor
dec
lcall
enter
movsl
xor
jnp
into
inc
pop
gs
xor
test
cltd
imul
leave
jp
imul
orl
cmpsb
scas
mov
movsl
mov
mov
mov
dec
mov
fadd
ja
negb
fcompl
push
std
mov
mov
std
adc
pop
stos
mov
std
xor
pop
iret
rcr
xlat
arpl
outsb
movl
pop
aaa
mov
mov
add
and
jg
jl
inc
inc
and
hlt
pop
insb
hlt
jl
mov
movsl
shl
divb
testl
jge
xchg
fcoms
pop
mov
cltd
sbb
ficoml
adcl
push
push
push
xor
std
adc
cmpsb
in
xchg
das
fidivrl
aas
xor
int
lods
pop
push
sahf
lods
jge
mov
cltd
movsl
mov
in
mov
out
push
inc
repnz
fwait
inc
ds
popa
mov
xlat
jmp
in
fstl
mov
enter
cli
mov
rcll
or
pop
dec
sub
in
inc
sub
cmp
cs
out
add
pop
lret
rcr
cmp
xchg
ljmp
in
cmpsl
mov
mov
inc
xlat
lcall
in
lds
aad
dec
or
cltd
iret
cs
int
jle
xor
or
test
sub
or
mov
xchg
push
aaa
in
sbb
test
mov
test
int3
xchg
sub
and
leave
js
mov
sub
out
xchg
adc
shrl
outsl
or
scas
sbb
gs
xchg
sbb
hlt
mov
jno
xchg
and
gs
dec
jge
mov
bsr
pop
aaa
scas
scas
fldcw
mov
xchg
movsb
xchg
xchg
fistps
sti
sbb
inc
mov
or
inc
jl
jbe
sbb
xor
xchg
mov
add
outsb
or
fcomps
and
mov
es
and
cmp
lcall
mov
sub
popf
mov
or
sti
add
pop
shlb
leave
dec
cltd
lds
cmp
mov
fmuls
out
sbb
out
stos
inc
jmp
subl
inc
and
sub
pextrw
add
xor
cmp
sbbl
jmp
xchg
adc
mov
pop
and
mov
adc
mov
add
inc
ja
sbb
in
mov
push
cmp
lea
call
mov
xlat
dec
push
les
cwtl
in
push
mov
mov
rclb
lcall
icebp
mov
test
jmp
mov
popa
push
or
xchg
imul
in
out
mov
pop
dec
decb
cmpsb
ss
dec
inc
das
pop
scas
cmp
cmp
adc
add
xor
jb
aaa
xchg
call
int3
fnstcw
cmc
lods
and
lret
sahf
sbb
test
adc
popf
sbb
pushf
movd
lcall
sbb
sbb
add
in
sbb
cmp
mov
adc
inc
xchg
jecxz
or
sbb
xor
lret
mov
sbb
test
and
lret
lods
push
movsl
dec
imul
lods
inc
mov
rorl
aam
mov
sub
mov
inc
cmc
xlat
out
push
cmpsl
out
xchg
add
std
xlat
and
inc
push
insl
lds
and
dec
popf
adc
in
orb
lret
int3
lods
pop
fwait
cmpsb
xchg
incl
in
push
mov
into
sub
dec
in
inc
stc
in
jmp
ss
pop
lds
pushf
and
sub
movsl
xor
ja
mov
insb
xchg
xchg
lds
mov
sbb
icebp
cvtps2pd
lds
pop
jmp
fwait
out
mov
mov
xor
mov
mov
lds
dec
loop
into
push
or
mov
out
rolb
push
or
jo
mov
inc
pushf
and
xchg
das
aaa
lds
push
add
lcall
in
lcall
sbb
ds
andl
jnp
cmp
insb
xor
sbb
lods
jl
sbb
lret
push
or
mov
sbb
xchg
pop
xchg
cltd
daa
insb
xlat
pop
mov
or
shll
mov
scas
xlat
pusha
icebp
adc
sarb
add
jge
aad
js
jp
fs
cmp
daa
dec
push
pop
and
cmc
cmp
mov
cli
add
int3
int
stos
insl
movsl
dec
mov
popf
mov
cmpl
into
inc
lahf
adc
pop
add
sub
inc
adc
dec
xor
pop
inc
ljmp
push
xchg
stos
mov
and
rclb
sub
stos
adc
xchg
pop
rorb
test
fwait
lds
nop
lret
cs
xlat
lea
or
lret
jge
pop
lcall
pop
xchg
xor
nop
loop
mov
push
nop
enter
dec
inc
std
mov
inc
sahf
imulb
les
add
pop
pop
das
add
arpl
nop
mov
fstl
cli
das
cmp
sub
leave
lea
mov
mov
mov
xchg
cmp
mov
pop
dec
cmpsl
lcall
and
imul
pmaxub
pop
jmp
mov
mov
mov
mov
mov
fisubs
push
xor
aas
cld
xchg
aad
ficoml
fbstp
sbb
inc
mov
cmpsl
xchg
aaa
jae
xor
jmp
insl
mov
std
xchg
mov
lds
hlt
shlb
xor
jp
sub
pop
out
js
pop
push
jne
roll
xor
lret
sbb
jl
lds
add
push
aam
data16
pop
cmp
push
sbb
shl
sbb
xchg
jbe
daa
out
jp
push
mov
dec
mov
popa
imul
inc
mov
xorb
ffreep
in
add
or
mov
add
out
inc
dec
int
gs
mov
cmpsl
mov
sbb
cmp
fwait
sbb
ror
adc
add
sub
push
or
fsubrl
xchg
xlat
mov
xchg
mov
fsubs
or
frstor
push
jmp
std
in
mov
leave
inc
inc
pop
movsb
xor
inc
sbb
inc
sub
push
in
inc
or
dec
jecxz
xor
mov
cmp
lds
push
cmp
xor
add
loope
add
mov
test
jnp
xchg
sahf
rcrl
mov
movsb
or
adc
xchg
push
add
and
push
push
mov
pop
popf
negb
test
xchg
lret
sub
jno
or
lret
ds
enter
fadd
outsb
mov
lods
mov
mov
lds
mov
dec
pop
sbb
push
xor
scas
xchg
cli
sbbl
nop
inc
jns
rcrb
xor
loop
out
push
sub
push
loope
jbe
repz
push
sbb
add
or
outsl
or
lret
mov
rcr
outsb
jle
clc
mov
xchg
dec
sbb
mov
adc
inc
jle
xchg
mov
je
lea
movsl
jmp
daa
xchg
cmpsb
xchg
ja
cld
inc
push
jecxz
popa
fwait
mov
sbb
out
mov
mov
mov
lds
test
jg
test
lds
inc
cmp
stos
lret
push
push
adc
lods
mov
shll
lods
aad
sub
cmpsb
pop
pop
adc
adc
in
inc
stos
mov
cmpsl
fsubrs
lret
addl
mov
lds
jge
addr16
jecxz
jb
in
lods
outsb
add
inc
add
shl
rcr
imul
xor
xchg
shr
iret
shrb
mov
movsl
inc
push
jne
rcll
sub
and
inc
fidivrl
test
cmp
les
add
jl
cmp
ficompl
xrelease
clc
pop
cmpsl
add
rol
mov
push
sahf
xchg
mov
cs
sbb
dec
jno
inc
xor
test
stc
imul
add
stc
push
fnstsw
call
xchg
clc
adc
cmpsl
vdivpd
leave
jg
test
repnz
in
or
loop
clc
aam
jo
movsb
lds
mov
cmc
das
imulb
sub
vpsubusb
pop
xlat
dec
xor
xor
xor
add
into
pshufw
aam
sbb
mov
fwait
xchg
test
loopne
popa
dec
add
and
daa
outsl
out
xchg
fstpt
mov
ja
or
pop
xor
nop
dec
push
mov
or
test
shrl
cmp
lods
leave
inc
add
nop
sbb
lcall
xchg
mov
int3
dec
xor
std
stos
movsl
popf
push
add
aaa
and
push
or
aas
int
add
jge
es
pop
mov
lds
pop
push
insl
adc
adc
mov
mov
notb
in
fwait
movsl
pop
ficompl
dec
sbb
std
cmpsb
stos
jo
mov
add
outsb
jo
cmp
sbb
lds
dec
shrb
add
mov
jb
clc
mov
xchg
aad
jne
leave
push
sbb
inc
pop
push
fwait
sbb
push
sub
mov
add
test
stc
nop
sbbl
pop
or
push
fsubrs
in
jns
cs
movsl
mov
leave
pop
push
mov
dec
xchg
addr16
add
mov
popf
lds
lcall
lea
xchg
popf
xor
or
dec
mov
fbstp
mov
fldl
movsl
stos
fucomp
pop
inc
mov
loopne,pt
add
mov
push
lahf
mov
filds
das
cwtl
mov
lods
add
add
scas
fstp
fcompl
sbbb
das
out
cmp
xor
cld
jno
mov
lds
xor
jmp
pop
in
jg
ret
jl
mov
inc
push
les
out
stos
lahf
mov
insb
inc
lock
or
or
cmp
xlat
cmp
stc
inc
inc
hlt
outsb
lds
out
stc
mov
pop
xchg
shlb
mov
nop
vandnpd
loope
inc
and
cmp
pop
loop
jae
dec
adc
inc
fs
jns
xchg
adc
testb
xchg
ja
es
sub
out
sahf
mov
sahf
stc
or
sbb
adc
xchg
lcall
mov
sub
lret
cmpsb
xor
jmp
divl
push
push
xor
push
mov
lods
cmpsl
xchg
cli
sub
mov
loop
pop
pop
test
hlt
cmp
inc
and
add
shrb
in
cmp
push
dec
popa
pop
sub
push
ds
cli
xchg
and
ljmp
cld
shl
aam
sub
inc
pop
hlt
add
cmpsl
les
idivl
rcl
test
xchg
mov
popf
inc
std
imul
std
fwait
data16
add
pop
sub
sub
xchg
mov
rolb
xorl
rolb
and
ret
pop
add
xchg
sub
cmp
jge
call
hlt
sbb
in
adc
mov
popf
sbb
lock
pusha
push
test
stos
sbb
in
test
data16
and
add
pop
xor
daa
cmp
sub
mov
or
mov
outsl
repnz
mulb
ret
ds
mov
fwait
xchg
pusha
push
cmp
ljmp
movl
pop
clc
xor
loop
data16
xchg
inc
add
enter
push
fldcw
add
jae
jbe
or
jo
mov
ljmp
test
push
mov
xchg
xchg
movsl
xor
arpl
imul
sahf
dec
test
decb
lret
aad
int
cmp
int
hlt
andb
fdivrl
dec
mov
mov
shl
mov
adc
test
inc
std
out
pop
out
cltd
mov
jecxz
and
push
xor
aaa
mov
or
xor
or
test
enter
aas
roll
lea
mov
sbb
mov
jb
shl
popa
clc
sub
test
xchg
sbb
add
mov
lea
xchg
jg
arpl
pop
movsl
mov
cmp
mov
dec
cmp
sub
xchg
pushf
outsb
movsb
or
in
pop
test
inc
cmpsl
push
dec
arpl
cli
outsl
std
outsb
notl
ret
push
dec
sbb
sub
ret
adc
bound
js
push
lahf
outsb
fs
xchg
call
and
add
mov
sarb
dec
lret
sub
and
adc
dec
mov
add
mov
loop
sahf
repnz
fsts
imul
mov
mov
add
pop
sti
lds
xchg
sub
cmpsl
sub
mov
jmp
movsl
dec
repz
test
push
aas
inc
into
sbb
cmp
add
xchg
add
inc
inc
cli
xchg
testl
stc
mov
ror
mov
mov
scas
mov
push
dec
pusha
out
or
dec
ss
inc
xchg
jno
adc
test
stos
sbb
cmp
repz
into
add
rol
sbb
xchg
lods
add
inc
dec
adc
pop
iret
mov
shrl
jns
out
imul
roll
outsb
mov
stos
ja
xchg
xor
inc
dec
and
hlt
inc
fistps
mov
insl
sbb
cltd
pop
push
dec
addr16
test
decb
sbb
stos
nop
movsb
or
movsl
hlt
imul
jne
and
xchg
jl
add
mov
imul
xor
jb
aam
notl
or
xor
add
and
mov
fisttpl
data16
dec
imul
xor
imul
hlt
fwait
sbb
int
mov
movsl
lods
and
icebp
pop
push
push
push
pop
popa
insb
sbb
clc
push
enter
popf
pop
sbb
outsl
mov
pop
sub
sub
push
out
in
fidivs
sbbl
scas
aad
pop
add
xor
pop
es
les
jp
dec
jne
idivb
xor
and
jmp
xchg
and
xor
mov
mov
cs
movsl
mov
jmp
or
sub
xchg
rolb
jmp
movsl
mov
mov
lds
xor
sub
aam
mov
lds
outsb
fldl2t
incb
jne
xor
xor
in
std
ljmp
loopne
cmc
fsubrl
test
lea
adc
pop
inc
popa
in
out
or
sub
cmp
adc
push
inc
add
or
jbe
inc
mov
mov
add
mov
aaa
mov
cmp
loopne
adc
xor
cmc
cmp
test
sbb
cli
imul
int3
jne
test
aas
jno
cmpl
dec
lods
in
les
pop
shll
scas
in
sub
adc
mov
mov
or
scas
movl
dec
int
insl
clc
test
cmp
mov
mov
cld
jecxz
repnz
bound
sahf
idivl
push
fldl
pop
mov
sbb
and
insb
jp
test
scas
mov
or
mov
push
pop
frstor
add
dec
mov
xlat
adc
mov
mov
lcall
mov
lds
cs
roll
pop
and
leave
lock
int
fwait
push
push
test
aad
dec
mov
jle
cmp
scas
roll
inc
in
sbb
icebp
push
adc
fcmovnb
js
sub
add
lds
in
add
mov
daa
adc
sub
and
push
push
popa
bound
outsl
push
je
iret
mov
inc
loopne
inc
shr
mov
getsec
cwtl
inc
dec
and
push
xchg
jmp
mov
xchg
push
mov
std
lock
adc
mov
out
loopne
jno
lds
adc
jmp
movsb
push
push
popf
pextrw
mov
out
mov
inc
mov
sahf
lds
leave
daa
lods
loop
adc
add
sub
clc
fstps
fbstp
pop
pop
add
ja
clc
xlat
sbb
addr16
mov
dec
mov
or
mov
loop
out
in
dec
in
lea
dec
jmp
aas
aam
xlat
inc
in
xor
in
inc
jle
fxch
sub
push
dec
sbb
xchg
sub
jns
lcall
lret
lret
mov
sub
cmpsl
mov
fisttpll
lods
movsl
mov
adc
jg
inc
and
dec
inc
lds
add
mov
add
cmp
scas
lds
mov
and
fidivl
ja
out
fldenv
xor
lret
sbb
cld
fsubr
addr16
xor
mov
jp
cmpsl
sbb
sbb
push
dec
sub
mov
inc
push
je
lods
add
fwait
sub
sub
movsl
jb
loop
nop
loop
lds
sub
imul
dec
pop
popf
pop
lea
jge
xor
pop
and
inc
or
iret
andl
mov
xlat
ss
jnp
lea
outsb
sti
lds
fwait
das
jg
dec
cmp
mov
std
xor
xchg
or
stc
xor
jnp
mov
or
xchg
dec
outsb
orl
push
fdecstp
int3
mov
mov
sbb
sub
out
pop
nop
mov
pop
hlt
pop
ret
lock
scas
mov
inc
push
test
icebp
lahf
in
mov
mov
xlat
add
lds
mov
insl
daa
out
in
jae
dec
int3
add
and
mov
mulb
or
test
js
dec
stos
sti
ja
xlat
movsl
jo
and
xchg
in
mov
push
mov
lea
test
pop
sbb
inc
and
popf
pop
mov
lods
std
jne
out
nop
ret
cwtl
adc
and
jbe
xor
pop
pop
mov
leave
pushf
int
mov
movsl
dec
push
mov
inc
sti
jne
mov
out
lods
repz
mov
ror
mov
fcmovnu
loope
sbb
loop
ret
adc
dec
out
cmpsl
jne
pop
lahf
mov
sub
pusha
outsl
sub
push
xchg
jae
out
dec
loope
push
outsl
mov
cld
mov
lods
push
imul
jns
mov
mov
cli
xlat
fldcw
push
add
rorb
mov
jp
int3
test
mov
in
mov
lea
dec
js
lods
lds
cmpsb
inc
bsr
mov
insb
jne
in
add
xchg
inc
sbb
push
jne
sbb
in
testl
cltd
je
or
or
test
dec
outsb
and
mov
sbb
movsl
call
insb
scas
mov
mov
inc
inc
je
adc
out
sub
mov
dec
dec
daa
popf
xchg
cmp
ffreep
push
stos
ja
jmp
pop
das
std
movsl
push
push
cli
cld
dec
xor
fdivs
xchg
cmp
add
repz
scas
mov
mov
add
mov
movsb
jae
jmp
cltd
mov
ret
mov
dec
into
pop
fists
jecxz
arpl
inc
jne
outsb
gs
les
add
jmp
dec
inc
inc
xchg
daa
jae
xadd
sub
xchg
xchg
test
loopne
mov
pop
xor
outsl
adc
rep
hlt
call
aam
dec
pop
ja
sub
fs
or
xchg
and
into
mov
xor
cwtl
mov
vmovaps
int3
sub
insl
iret
xchg
imull
and
pop
mov
es
jmp
jo
nop
push
in
xor
call
sub
std
pop
jmp
scas
push
mov
outsb
inc
rol
xchg
mul
mov
pop
daa
add
xor
and
xchg
cmpl
loope
ja
cmpsl
jg
cwtl
sbb
movsb
or
fs
jecxz
inc
iret
cmp
orb
scas
les
push
pop
and
in
dec
add
pop
jg
into
xchg
sbb
sbb
sahf
mov
mov
lods
arpl
sub
dec
inc
hlt
movsl
shr
jo
inc
and
out
cli
arpl
cwtl
imul
cwtl
or
mov
addl
jnp
leave
lods
add
nop
rcrl
xlat
bts
dec
or
out
mov
enter
jno
jne
mov
inc
int3
jb
lds
filds
mov
xchg
jnp
dec
std
push
jno
outsb
int
mov
popa
cmp
pop
mov
xor
xchg
mov
sbb
sub
sub
outsl
pop
mov
sahf
shll
repz
cmpsl
sbb
rcrl
pop
mov
mov
mov
icebp
pop
movsb
xor
inc
pop
xchg
lea
push
jp
adc
dec
push
cmp
andl
mov
mov
rcl
hlt
out
arpl
add
sbb
cltd
xor
jl
xchg
loop
rolb
pop
inc
jne
inc
fcomi
lds
popf
cmp
call
popf
pop
push
mov
push
lods
shlb
push
pop
and
test
outsb
mov
jnp
push
lods
and
mulb
cli
loopne
push
add
xchg
scas
inc
xchg
shll
and
fwait
clc
inc
cmp
inc
push
pop
sub
dec
or
scas
sub
pusha
lods
aad
add
xor
pop
cmpsw
dec
out
jecxz
pop
adc
sbb
lret
sbb
mov
in
data16
scas
adc
sub
inc
fdivl
nop
mov
jg
mov
aaa
imul
push
sbb
add
aas
dec
jmp
jae
dec
jb
mov
lods
xchg
vmwrite
scas
add
pop
inc
movsb
fistl
adc
sub
cmp
and
dec
cmp
xor
outsl
xchg
stos
in
fnstsw
mov
jns
outsb
mov
loopne
cmp
xor
movsl
xchg
jl
loopne
outsb
inc
mov
out
cmpsl
data16
test
jns
lds
ret
or
mov
mov
inc
jbe
popa
scas
cmpsb
outsl
mov
cmp
ds
mov
xchg
cmp
xchg
sub
ret
notb
push
or
lahf
cmp
mov
lahf
rcl
leave
aaa
cmpsb
sbb
ss
xor
push
aad
xchg
rolb
je
lds
xchg
xchg
pushfw
rcrl
test
cltd
mov
rorb
sahf
inc
add
add
push
repnz
ja
stc
rclb
cmp
out
cmp
das
cltd
outsl
mov
clc
inc
clc
fcomps
rcr
sbb
movsb
dec
inc
sub
cmp
repnz
mov
mov
lds
dec
mov
test
ret
sub
stc
mov
push
clc
sub
shrd
or
push
and
insb
inc
inc
pusha
shll
int
add
cwtl
sub
mov
xchg
and
das
xchg
pop
cwtl
test
sbb
movsl
testl
das
push
aas
cmp
or
sub
or
mov
cltd
hlt
icebp
call
arpl
add
inc
sub
rclb
jp
sbbl
leave
mov
cld
lea
loopne
and
push
inc
push
mov
les
pushf
lds
outsl
jns
sub
pop
lock
imull
mov
push
popf
push
iret
xchg
sahf
fisubl
dec
sbb
es
ds
lea
mov
test
mov
pop
push
jno
test
fwait
sbb
filds
fs
jbe
jbe
stos
ja
addr16
or
inc
in
testl
xor
push
lea
add
in
push
fists
nop
out
adc
add
movsl
ret
xor
lds
mov
xor
or
dec
dec
iret
pusha
push
mov
lds
mov
xor
in
ja
add
lds
out
rolb
mov
movsl
lock
xor
pop
dec
mov
pop
push
inc
or
test
ja
mov
aad
lret
fmul
push
sub
inc
adc
xchg
or
mov
pushf
sbb
mov
movsl
subb
sbbb
mov
les
imul
add
sbb
dec
aad
iret
ljmp
idiv
out
data16
mov
popa
outsl
mov
mov
rolb
push
mov
movsl
jns
jo
mov
adc
dec
inc
lods
xor
sbb
and
jns
and
mov
dec
pushf
or
mov
pop
sahf
into
jge
add
add
int3
insb
into
or
in
dec
push
cli
xchg
or
notl
add
fisttpl
pop
sbbb
mov
cmpsb
sahf
jg
mov
in
dec
mov
lods
xchg
movsl
lahf
sub
test
mov
mov
rcrl
rol
insl
sub
xchg
add
mov
or
jp
lods
adc
outsb
xchg
fucomip
fsubrs
cmp
loope
aaa
fwait
cmpsl
sbb
outsl
sub
push
data16
nop
stc
lds
inc
hlt
and
lock
mov
inc
fldl
cs
fsubr
dec
sub
ja
jmp
inc
and
xchg
inc
mov
add
ss
pop
dec
lds
and
mov
push
mov
xlat
or
insb
sub
jbe
or
adc
sbb
lods
cmc
pop
fwait
shll
lahf
and
fistl
sub
sub
pop
xor
push
in
and
pop
hlt
int
fldenv
sub
xchg
jne
scas
sbb
cmpsl
push
fidivrl
sbbb
test
pusha
loop
xchg
mov
xchg
cmp
add
xchg
fstpl
jo
cwtl
std
mov
xchg
xchg
add
sbb
outsb
add
loopne
sbb
xchg
jg
cmp
sbb
push
sbb
int
sub
cmpsl
jge
mov
push
pop
ffreep
push
mov
mulb
lret
and
stos
lea
add
and
loop
dec
sub
dec
add
call
repnz
cltd
test
push
xor
add
fildl
mov
adc
iret
repnz
xor
lret
aaa
sbb
rcr
fidivl
mov
movsl
cld
mov
je
loop
lods
mov
pop
jg
scas
push
add
xchg
les
ffree
repnz
pop
adc
jnp
int3
xchg
cmp
leave
jmp
in
leave
leave
xchg
sbb
and
packuswb
lret
pop
dec
mov
fnstenv
popf
sub
dec
jle
lea
aaa
negb
xchg
aas
cmp
nop
fisttpl
ret
push
into
or
mov
mov
movsl
inc
int3
enter
jle
subl
push
inc
adc
sar
dec
sbb
and
mov
jp
adc
sbb
outsb
inc
and
aas
push
sub
mov
xlat
dec
lcall
roll
mov
inc
push
mov
ficompl
mov
add
aam
fwait
mov
mov
sub
or
aas
cmp
mov
test
rcrb
scas
jecxz
rcr
push
mov
mov
mov
movsl
pushf
pushl
sbb
mov
xchg
pop
lret
adc
or
dec
dec
and
imull
int
in
xor
inc
push
pop
xchg
xchg
outsl
mov
mull
sub
mov
stc
fiadds
rcrb
lods
rol
dec
mov
outsb
pop
cwtl
aas
pop
pop
clc
sbb
fistl
mov
mov
push
inc
add
outsl
leave
cmp
test
hlt
mov
cmp
outsl
adc
repnz
imul
stc
js
mov
sbb
lods
mov
add
int
aaa
sbb
test
jne
aaa
push
into
xor
js
scas
cltd
pop
arpl
xor
inc
push
int
lods
mov
cmp
call
test
aaa
mov
bound
add
dec
add
add
or
xor
jecxz
inc
mov
rcrl
cmp
cmc
std
fld
xor
lcall
ja
pop
ret
sub
loopne
pop
xchg
mov
xchg
sbb
xchg
inc
movsl
xor
ja
mov
add
pop
pop
lea
inc
xchg
out
mov
hlt
icebp
adc
jl
cmp
jl
mov
out
and
mov
push
push
add
int3
lcall
mov
negl
xchg
adc
mov
cld
scas
orl
sub
lds
lods
or
mov
ljmp
in
add
pushf
out
pop
push
mov
stos
sub
rclb
jmp
xor
or
lcall
inc
xchg
mov
adc
cli
cmpsb
fcmovne
or
pop
rclb
popf
lds
sbb
ja
mov
lret
or
xor
mov
cld
je
inc
test
xor
lds
sarl
imul
mov
lds
jne
lret
xchg
aaa
lods
fadds
pop
pop
and
lods
movsl
xor
out
mov
xor
jp
fsubr
std
mov
out
mov
mov
leave
mov
hlt
inc
xor
outsl
push
mov
inc
inc
dec
adc
incl
dec
dec
test
mov
cmpsl
jno
cmp
hlt
popa
out
adc
pop
inc
xchg
call
lds
jbe
xor
inc
mov
adcl
pop
adc
lea
xchg
push
xchg
out
aam
lock
popf
push
movsl
jne
call
xchg
clc
sub
mov
dec
inc
rcrb
dec
mov
add
pop
lods
movsb
pusha
sub
movsl
test
imul
sbb
fsubrl
add
mov
int3
push
inc
imull
jmp
stos
scas
mov
pop
cltd
outsb
sarb
lods
dec
mov
shlb
inc
std
mov
loop
xor
out
push
mov
mov
sbbl
jmp
insl
test
jne
lcall
push
call
hlt
test
xchg
mov
or
mov
xorl
sub
dec
out
or
int
jns
add
jp
in
inc
ljmp
leave
in
xor
adcl
xchg
ljmp
xchg
adc
add
bound
mov
insb
outsb
dec
sbb
test
mov
add
daa
mov
push
add
add
dec
inc
arpl
inc
cmp
stos
fisubl
jecxz
insb
cld
pop
imul
decl
pop
dec
mov
pushf
xor
add
in
les
scas
pop
sub
movsl
or
clc
incl
pushf
stos
aad
stos
mov
lea
mov
mov
inc
int
in
pop
repz
test
movsb
push
push
enter
mov
pushf
cs
mov
jge
cmp
into
stos
push
cmc
das
xor
push
push
and
fwait
mov
add
fdiv
icebp
mov
out
nop
cltd
pop
outsb
lds
cmpsb
and
in
cmc
addr16
ror
xor
cli
mov
pusha
inc
ror
loop
xor
outsb
mov
sbb
sbb
xchg
psrlw
sbb
rol
push
dec
mov
repnz
inc
lds
inc
lods
fadds
mov
cwtl
add
mov
fcmove
inc
cmpsw
push
hlt
mov
cwtl
cltd
xor
js
stos
outsl
or
inc
stc
lods
add
mov
push
dec
mov
pop
lods
push
pop
fldenv
out
cmp
iret
push
or
dec
sub
add
xor
or
sub
jmp
jns
mov
pop
mov
scas
lds
xor
lock
xchg
pushf
dec
mov
loopne
sub
sarb
fisttpll
lea
push
negb
pop
or
das
jmp
movsl
mov
dec
xor
xchg
push
mov
inc
repz
cwtl
sbb
push
or
push
mov
cld
and
leave
inc
lods
movsl
dec
pop
cwtl
loop
loopne
lods
adc
xchg
xchg
sub
xchg
ja
mov
rcrl
inc
and
icebp
sbb
inc
pop
push
daa
push
cmp
es
sbb
fadds
mov
or
adc
dec
jmp
jecxz
ss
xchg
sbb
test
lds
popa
dec
cvtdq2ps
jnp
test
jne
popa
xchg
outsb
xchg
push
lahf
in
cmp
scas
sbb
pop
lds
adc
push
pop
lret
and
pop
xor
adc
sahf
pop
push
data16
cld
or
pushf
add
cmpsb
sarb
stos
mov
call
jg
cmp
push
clc
adcl
push
cmp
or
jnp
and
idivb
in
out
jbe
loop
jnp
jo
sbb
xor
mov
sbb
dec
jg
add
mov
lret
mov
sub
add
jg
mov
adc
dec
cmp
jo
loopne
add
cli
ret
es
fcmovnu
stos
mov
jbe
sahf
mov
jmp
stos
lods
test
andb
push
cmpsl
inc
test
mov
int
outsb
push
repz
mov
cmp
fcoml
or
shrb
daa
push
lock
loope
xchg
test
mov
add
adc
into
pop
lods
std
xor
lods
int3
aad
outsb
cld
inc
push
cmp
lods
stos
dec
ja
cmp
rclb
and
gs
out
movsl
ja
dec
mov
hlt
clc
sarl
cmpsl
jge
ds
fisttpl
xlat
push
mov
xor
movntq
out
dec
mov
xlat
in
mov
or
in
lcall
jo
cmp
mov
add
inc
jg
inc
pop
repz
push
lods
adc
aaa
and
out
jns,pt
xchg
push
js
leave
adc
jmp
mov
lcall
mov
movsl
loopne
outsl
mov
add
inc
ja
inc
cld
pop
iret
lds
mov
sahf
ret
or
les
adc
pop
push
push
push
fs
mov
into
pop
mov
sbb
lcall
push
hlt
pushf
outsb
jne
lds
movsl
inc
ljmp
scas
mov
sub
add
and
hlt
stos
xchg
and
sbb
inc
xchg
lods
pop
incl
mov
shlb
cmp
dec
mov
sti
xchg
xchg
or
xchg
fstpl
movsl
adc
cltd
rcl
out
or
xor
outsl
jne
bound
int3
sarl
loopne
mov
mov
push
movsb
cmp
mov
sbb
and
leave
jo
xlat
fcmovnb
mov
bound
lea
add
popf
fistl
aaa
sbb
jmp
xchg
imul
repnz
cltd
dec
push
push
jle
lods
outsl
and
or
adc
pushf
push
pop
push
popf
pop
adc
lods
fisubl
and
jns
mov
orl
xor
les
pop
out
sub
jmp
push
add
out
pop
test
mov
add
mov
fdivrp
inc
mov
sbb
idivb
lock
ja
mov
jnp
mov
daa
in
add
jns
add
add
mov
inc
seta
stos
cmpsb
call
lods
scas
sahf
int
dec
mov
std
xchg
or
mov
outsb
or
fldt
add
sub
outsl
mov
or
cmpsb
jecxz
cmp
mov
not
dec
lret
add
add
cmp
cmp
cli
jns
mov
sub
mov
cli
mov
aam
fdivl
ret
fimull
test
popa
inc
sub
lds
cli
xlat
cs
mov
push
inc
jae
jb
pushf
mov
inc
jns
mov
mov
push
or
mov
imul
loope
hlt
cwtl
cmp
lds
fs
imul
lea
mov
push
dec
stos
cmp
insl
notl
gs
add
fs
stos
vucomiss
fisttpll
das
fimull
mov
add
rol
in
pusha
in
sbb
pop
cmc
inc
xchg
or
cwtl
aam
lds
sub
adc
dec
and
cmp
mov
lds
jne
mov
sarl
push
jb
data16
cld
and
xor
mov
jp
js
inc
arpl
xchg
enter
sbb
mov
inc
or
and
testl
daa
scas
xchg
cli
and
xchg
xchg
jl
sub
cmp
daa
inc
mov
test
cmpsl
scas
pop
jp
dec
stos
into
or
insb
mov
xchg
inc
imul
mov
pop
sbb
push
mov
movsl
and
orb
push
mov
into
mov
mov
xchg
pop
ret
mov
lcall
inc
cli
testb
xchg
and
xchg
pop
fists
faddp
mov
jae
loopne
sub
or
adc
outsb
sbb
add
mov
test
sbb
aad
xor
movl
rcl
scas
mov
daa
shll
push
adc
imul
subl
cwtl
in
pop
sbb
ret
data16
or
scas
icebp
lahf
inc
pop
clc
adc
prefetch
or
mov
xchg
test
test
test
lds
and
push
test
arpl
push
sbb
xchg
push
pop
pop
in
fmull
mov
out
mov
mov
pop
mov
xchg
push
jmp
pop
sbb
inc
into
leave
out
into
push
dec
dec
call
js
ljmp
dec
or
and
sahf
push
add
mov
mov
faddl
cmp
sub
cmp
add
lods
dec
lea
mov
add
in
ds
fdivs
inc
cmp
rol
dec
repz
cmp
mov
cmp
xchg
jg
out
loopne
inc
add
ret
movsl
or
out
lds
mov
mov
sbb
fisttps
arpl
movsl
test
and
hlt
daa
pop
cld
xchg
mov
mov
cmpsb
in
push
test
sar
and
int3
push
inc
loop,pt
je
cld
mov
xchg
rcr
cmp
jg
jne
lds
cltd
lea
push
xchg
repnz
movsb
cmp
pop
jbe
orl
rcl
mov
test
mov
cli
cmpsl
add
pop
sub
xchg
lea
js
loopne
ret
mov
mov
adc
jmp
sub
icebp
aam
fcomps
mov
rcl
ljmp
hlt
or
test
sbb
pop
loop
insl
sub
xchg
outsb
inc
add
js
orl
mov
in
or
out
adc
ds
sub
popf
sbb
lods
push
mov
adc
push
sahf
in
stos
adc
inc
ljmp
mov
fmul
push
jb
jecxz
and
test
pop
push
test
sbb
imul
jne
jmp
mov
sti
add
and
add
sbbb
mov
mov
repz
xchg
movsb
jnp
jecxz
loopne
sahf
xchg
mov
pop
lcall
fidivrl
pop
out
mov
push
pop
pop
daa
int
adcl
adc
pushf
les
adc
shlb
das
cmc
jbe
add
mov
leave
int
or
aad
mov
xchg
pop
loop
push
stc
dec
data16
dec
and
call
sub
xorl
jg
push
mov
repnz
out
mov
sahf
mov
sbb
lods
lcall
or
sbb
pop
mov
sub
dec
xchg
out
shr
sbb
cmc
lods
add
sub
or
insb
scas
add
rcll
loope
icebp
mov
pop
cmp
sub
push
xchg
lret
lcall
cmpsl
sub
mov
ja
xor
call
pop
aas
mov
cmp
xchg
add
jmp
fsubs
loop
mov
cmpsb
and
mov
xchg
adc
mov
add
xor
cmp
sub
xchg
lods
push
aas
lcall
or
add
mov
dec
in
pop
pop
push
or
int
sbb
sub
sarb
xchg
imul
sbb
les
movsl
adc
push
xchg
lret
adc
out
cmpb
and
pop
sbb
les
jns
inc
pop
fucomi
stos
lds
dec
rcrb
mov
pushf
sbb
and
rcrb
rolb
mov
dec
testl
lods
in
arpl
arpl
addr16
adc
sub
adc
jo
inc
fdivs
pop
or
hlt
int
sbbl
xchg
sbb
scas
cmp
stos
xor
mov
sbb
enter
mov
and
fimull
pop
pop
mov
pop
mov
jmp
pop
mov
orb
cmp
adc
repnz
mov
pop
pop
xchg
add
fiaddl
pop
int
test
pop
rcl
mov
aas
and
push
fstpl
and
xchg
mov
xchg
pop
add
pop
dec
lret
jmp
sub
test
es
adc
inc
int
aam
sbb
imul
mov
or
jb
mov
data16
or
pcmpgtd
mov
lcall
in
push
outsl
xchg
add
and
pop
imul
in
lods
xchg
push
clc
mov
mov
scas
rol
aaa
mov
in
in
push
sbb
xchg
jae
add
gs
arpl
jge
daa
add
push
mov
sbb
xchg
xchg
add
sarl
mov
arpl
jge
mov
jns
sub
stc
pusha
movsl
data16
mov
in
lcall
mov
push
cs
out
subb
lret
mov
mov
lea
movsl
dec
aaa
ja
inc
inc
in
dec
add
and
pop
inc
hlt
push
or
arpl
imul
movsl
mov
mov
nop
sub
add
aas
arpl
dec
mov
jmp
lret
xchg
add
mov
sub
jmp
xchg
push
sbb
sub
int
int
mov
jae
dec
or
add
xchg
lds
mov
stc
mov
cmp
push
dec
movsl
aad
ds
xor
out
mov
push
add
cmc
in
ret
jae
stos
push
pop
cmp
test
scas
push
movsl
mov
lods
cli
mov
and
add
pop
inc
mov
negb
daa
jg
in
adc
mov
jbe
addr16
stos
in
cmp
sbb
xor
pop
jg
cli
adc
hlt
mov
add
and
int3
sar
and
sbb
push
xor
mov
dec
push
jle
push
imul
je
fs
fisttps
lds
adc
sar
xor
sbb
imul
lcall
push
inc
mov
fcmovu
mov
mov
cld
fstpl
dec
mov
inc
ffree
scas
stos
shll
hlt
icebp
adc
jg
adc
mulb
cmp
sbb
sub
mov
rorl
pop
mov
add
and
mov
add
popl
pop
xor
adc
mov
add
add
fbld
mov
jnp
jns
xor
pop
push
pop
aaa
mov
roll
jne
xchg
mov
mov
sti
fidivs
xlat
mov
in
inc
or
ficoml
and
lods
int3
insl
mov
dec
mov
xchg
xchg
pop
subb
cmp
sbb
cld
push
mov
and
movsb
xor
xchg
lods
hlt
je
xchg
adc
mov
outsl
or
jle
mov
add
lea
fstps
fisttps
mov
inc
cmc
sub
sub
push
filds
in
or
test
sub
and
mov
mov
jp
ja
nop
movsl
cmpsl
enter
adc
inc
lcall
dec
lret
sbb
in
lods
dec
push
push
xchg
mov
cmpsl
movsl
cmp
test
roll
push
xchg
sub
sbb
movsl
cmp
stc
pop
loopne
sarb
ret
lds
lahf
rcrb
cmp
cwtl
clc
loope
in
in
rol
add
stos
clc
das
mov
lds
or
mov
mov
sbb
jmp
push
fldl
jge
mov
adc
inc
mov
shll
mov
outsb
rorl
scas
sbbb
push
call
mov
hlt
fmul
mov
enter
in
xorb
lods
gs
aad
leave
fcompl
xchg
cmpsb
jb
cmp
popf
pushf
and
pushf
dec
mov
ss
aad
int
addr16
in
enter
outsl
dec
jge
cwtl
stc
cmpsl
sub
sbb
jmp
pop
xchg
add
insb
cmpb
mov
dec
sbb
add
out
std
iret
xor
nop
hlt
js
sbb
xor
lods
fwait
xor
daa
leave
stc
pop
aad
movsl
sub
mov
xchg
sub
ret
pop
sti
push
mov
test
icebp
psrlq
xor
push
mov
pop
ret
xchg
pop
xlat
shlb
arpl
xor
scas
bound
adc
dec
cltd
xchg
repz
cwtl
dec
sti
xchg
in
addr16
in
lds
mov
inc
mov
cli
movsb
or
add
sbb
add
jl
mov
pop
or
or
movb
sar
mov
pop
cmp
nop
test
sti
or
cmpsb
jg
pop
cmpl
stos
cmpl
jg
adc
adc
in
out
add
xchg
and
loop
push
in
lods
andnps
popf
lods
and
push
dec
mov
lods
mov
pop
sub
scas
dec
or
imul
jne
push
pop
push
in
mov
clc
les
add
aas
fisubl
jmp
rorl
add
mov
insb
inc
cmpsb
jne
jbe
xchg
in
xchg
out
mov
mov
es
andl
xchg
cmpl
dec
divl
sahf
js
cld
jl
icebp
and
hlt
jnp
pop
jmp
add
lds
pop
jl
pop
out
int3
cmc
stc
sbbl
leave
dec
adc
aas
or
push
add
jecxz
jmp
paddw
cmc
adc
jg
shlb
jge
shl
mov
pop
jl
xchg
lret
push
nop
jmp
add
ds
jnp
jno
push
icebp
add
in
kmovw
mov
add
popf
xchg
xor
lods
push
pop
insb
adc
stos
sub
push
jecxz
cltd
xchg
stc
aas
mov
hlt
cltd
cmp
scas
out
xor
lods
in
push
and
stos
les
stos
loopne
vpxor
add
mov
push
jne
cmp
xchg
push
ret
mov
ror
adc
inc
es
movsl
lcall
imull
cld
mov
test
dec
pop
jns
test
hlt
jo
mov
int
fcomp
std
in
lods
inc
test
xor
int
add
cmp
movl
xchg
outsl
cli
xchg
push
sbbl
notl
daa
mov
xchg
clc
push
mov
out
dec
repz
out
jmp
je
add
inc
insl
push
mov
aaa
xchg
add
lahf
rcll
in
mov
ss
test
scas
cmc
inc
imul
sahf
std
bswap
mov
cwtl
pop
cmp
leave
scas
lret
loope
int
outsl
mov
stos
cltd
leave
lret
gs
cmc
stos
mov
ss
aaa
addb
adc
cmp
xchg
hlt
in
or
enter
dec
jae
or
pop
adc
cmp
sub
dec
sub
xchg
or
hlt
insb
movl
mov
mov
dec
push
hlt
and
pop
xchg
sub
pusha
out
int3
in
in
xchg
pop
sub
jnp
in
fdivrl
jns
cmp
push
mov
inc
cwtl
and
push
outsl
pop
xchg
data16
pop
inc
shrb
push
fdivrp
lock
sbb
add
or
add
push
or
das
sub
mov
cli
xchg
aad
push
xchg
jne
mov
mov
pop
lea
pop
inc
shlb
adc
xchg
sbb
cmp
push
sub
cli
cmc
cmpps
scas
lahf
mov
fadd
add
gs
out
pop
pop
cmc
cmp
inc
xlat
loop
js
sbb
dec
cwtl
mov
pushf
test
out
dec
int
add
and
loope
push
and
lahf
pop
pop
mov
inc
sbb
inc
inc
push
test
or
cmpsl
ja
cmp
lods
ss
mov
movsl
sbb
rcll
push
sahf
jl
sub
arpl
clc
push
ret
mov
insb
lods
cmpsl
pop
lds
push
xor
inc
sbb
testb
lods
mov
adc
in
mov
lea
test
daa
idiv
cmpsl
cmp
xlat
lret
call
xor
dec
inc
scas
xor
daa
adc
out
sbb
push
adc
dec
rcr
les
rcrb
mov
xchg
jne
xchg
jne
pushf
adc
push
mov
mov
xchg
push
inc
mov
jge
lcall
or
lock
inc
cmp
or
sbb
jnp
shr
es
push
xbegin
clc
xchg
fisttpl
cmp
add
mov
sub
rorl
mov
scas
mov
push
lret
mov
mov
jb
stos
lret
or
dec
jae
cmp
mov
jecxz
scas
adc
cmp
fnstsw
cmc
lds
shrb
nop
fwait
mov
shll
pop
jno
sbb
pushf
adc
xchg
repnz
jecxz
mov
xlat
js
or
loop
adc
outsb
jp
stos
mov
jnp
xor
and
inc
pop
pushf
push
imul
cmp
jecxz
sbb
and
iret
pushf
shrb
xchg
jb
out
push
and
imul
pop
mov
pop
test
lods
fdivs
cmpsb
loope
shr
pop
int3
test
mov
stos
dec
jne
mov
sbb
out
jb
movsb
sbb
xor
mov
repz
xlat
lds
inc
push
enter
sbb
test
and
lds
xchg
sub
fistpll
sub
popa
invd
inc
cmp
cmc
xor
cmc
lahf
jb
xor
inc
xchg
pop
aaa
loop
lahf
in
pop
cmp
insb
mov
loop
lea
xor
or
roll
fldz
jbe
jne
aad
xor
inc
iret
movsb
mov
jne
push
xor
mov
ljmp
mov
inc
or
jmp
add
mov
stos
movsl
out
out
mov
add
adc
iret
sahf
jmp
pop
inc
lods
sbb
cmpsl
enter
scas
das
arpl
xchg
pop
push
cltd
repz
xchg
lods
or
add
lds
push
idiv
fldl
into
lods
rorb
std
ror
mov
add
jbe
xchg
pop
in
test
in
movsb
sub
ret
out
fsts
xor
daa
aaa
mov
fdivr
or
repz
testb
lds
cli
push
cmp
movsl
mov
or
fwait
push
mov
flds
cs
mov
lcall
repz
cmc
lret
movsb
push
jg
xlat
lret
mov
xchg
popf
push
inc
lods
lret
test
outsb
xchg
push
adc
cwtl
pusha
fwait
stc
sti
mov
nop
rcrl
mov
xchg
mov
adcb
aad
mov
dec
mov
mov
cwtl
push
pop
xchg
adc
inc
pop
adc
or
jne
out
and
push
cmp
andl
movsb
movsl
ljmp
test
in
in
in
mov
adcb
lea
mov
sub
or
subl
push
push
outsb
fwait
adc
mov
jle
int
xchg
leave
pop
pop
test
scas
mov
or
xor
add
xchg
pop
jcxz
cmpsl
inc
ja
mov
nop
hlt
sbb
mov
shrl
push
cmp
shrl
js
fidivs
adc
out
xchg
pop
loopne
nop
nop
fs
jne
jbe
inc
mov
scas
fldl
cmp
test
mov
add
mov
xchg
aaa
es
mov
mov
lds
lcall
outsl
inc
mov
push
imulb
and
mov
lds
lret
cmp
dec
out
bound
xor
ficoml
or
test
popa
inc
add
adc
lock
mov
in
stc
sbb
sbb
lahf
dec
add
xchg
adc
pop
ljmp
jge
cs
inc
and
in
lcall
lds
das
subl
pop
push
push
mov
inc
cmp
cmp
xchg
out
xchg
icebp
push
test
xchg
inc
in
ret
movsl
pop
mov
daa
out
add
cmp
add
sbb
in
lock
je
fld
leave
mov
pop
or
or
ss
push
test
mov
icebp
inc
in
jno
push
sub
inc
xor
xchg
stos
fadds
adc
insb
hlt
aas
mov
pop
inc
sbb
xchg
popf
cli
test
stos
and
cmpsb
add
sub
ja
dec
cli
test
and
lods
adc
xchg
push
dec
inc
sbb
lods
movsb
call
pmuludq
sub
push
clc
jno
adc
push
imul
pop
rorb
call
hlt
gs
push
stc
adc
or
shlb
popf
add
pop
sbb
popf
cltd
mov
cmpsl
sti
dec
sbb
mov
ret
imul
mov
cltd
inc
iret
arpl
jne
ds
or
mov
pop
dec
lds
aaa
inc
mov
lea
inc
cli
rcrl
inc
adc
or
mov
int
aas
daa
pop
shr
pop
shl
in
sti
daa
stos
mov
push
mov
mov
push
push
push
add
fmuls
arpl
jae
adcb
inc
fstpt
int3
push
divl
pop
inc
jecxz
mov
mov
inc
outsb
dec
xchg
dec
loop
dec
aad
adc
shlb
stc
adc
movsb
mov
clc
inc
xchg
imul
imul
adc
mov
lret
dec
outsb
daa
mov
dec
out
lret
dec
testl
test
test
sbb
addr16
fsubrs
iret
lahf
lret
sbb
lret
cwtl
add
add
enter
cld
in
inc
mov
mov
dec
dec
das
inc
mulb
xchg
push
jne
int3
sub
pop
ss
icebp
dec
fwait
test
lret
push
pop
push
fs
in
filds
out
mov
mov
mov
or
mov
rolb
inc
das
out
aad
xlat
inc
arpl
or
and
mov
aam
xchg
cmp
cmp
popa
fdivrl
push
lds
push
lods
xchg
test
inc
mov
adc
loopne
and
and
mov
pop
and
push
inc
push
sbb
pop
in
mov
mov
jmp
cmpsl
dec
fwait
push
inc
adc
push
adc
loopne
jb
inc
nop
xorl
dec
fwait
cmp
push
sub
sub
mov
fs
movsl
aaa
mov
jg
dec
shr
cwtl
test
pop
sub
fmull
push
mov
outsb
and
adc
les
adc
sub
jmp
dec
test
ljmp
sbb
std
in
xchg
adc
cs
sbb
and
and
mov
mov
movsb
dec
in
and
or
push
pop
fst
std
movsb
mov
inc
clc
scas
jp
push
jne
rcrb
dec
cmpsb
mov
push
imul
ss
shll
psrld
jp
movsl
jae
lods
test
int
mov
sahf
xor
jb
push
daa
add
xor
in
neg
dec
jno
mov
mov
adc
loopne
arpl
jl
movsl
insl
fisubrl
movsl
rsm
mov
adc
stos
stos
stos
into
mov
adc
aas
fidivl
mov
mov
lods
lret
sub
cmc
in
loop
mov
fstpl
xor
inc
dec
out
jo
scas
xlat
mov
inc
mov
lea
std
sub
out
hlt
mov
imul
mov
aad
in
ljmp
mov
scas
mov
mov
mov
add
jmp
idivb
mov
test
into
dec
f2xm1
or
push
sti
and
cmc
jge
dec
aam
es
sub
mov
jl
add
lods
repz
mov
test
fisubs
stos
push
ja
adc
jge
adc
mov
jl
mov
push
loop
push
imul
iret
insb
call
push
mov
shrb
in
dec
dec
xchg
mov
push
mov
imul
aas
shll
pop
dec
sub
lds
std
test
xor
aaa
xor
fwait
jmp
sub
and
subb
xchg
roll
sub
xor
out
das
mov
sub
cltd
add
pop
xchg
push
or
movsl
xchg
dec
ret
ror
fstp
inc
add
push
jle
inc
sti
pop
add
call
shrb
inc
ficoms
mulps
add
movsl
stc
xlat
push
outsb
mov
sub
xchg
lods
mull
ljmp
dec
sbb
cmpb
mov
iret
xchg
pop
insb
dec
dec
mov
push
stc
cwtl
or
jmp
push
mov
call
pushf
mov
and
push
mov
ljmp
add
fstp
sbb
hlt
rol
iret
push
push
mov
cmpsb
add
sti
movsl
jle
mov
xor
popa
outsb
xorb
insl
lods
push
cwtl
mov
inc
nop
pop
jne
jbe
test
add
xor
shrb
cmp
nop
sti
imul
popf
cwtl
pop
ja
and
int3
popa
inc
fadd
xor
xchg
mov
pop
xor
jno
sbb
int
mov
int
cmp
es
sarl
shrb
lret
jbe
push
mov
push
mov
leave
xchg
inc
sbb
out
test
clc
add
test
jle
loope
cltd
or
div
ljmp
adc
mov
nop
jle
lahf
roll
jb
sub
mov
mov
inc
clc
mov
shr
icebp
in
and
fwait
push
lret
leave
add
and
dec
inc
push
pop
mov
and
inc
test
xchg
ja
sti
cld
jb
xchg
push
in
and
mov
cmpsl
fcomps
mov
fdivl
add
mov
cmpsl
mov
cmc
je
subb
into
mov
iret
data16
or
cmp
rcrl
testb
push
fnstsw
xlat
test
inc
arpl
fadd
sbb
sub
inc
push
push
pop
push
scas
and
add
testb
testb
jmp
daa
rolb
mov
mov
xor
int3
add
addb
stos
sub
push
aam
dec
shr
fimull
sbb
or
rolb
inc
addb
xchg
xchg
xchg
in
sahf
jmp
sbb
jl
mov
push
cmpsl
orl
cwtl
gs
pop
sbb
pop
js
add
repnz
or
dec
and
push
xchg
add
mov
mov
and
push
sti
adcb
mov
call
movsl
sub
sub
clc
and
das
mov
jge
imul
mov
add
sbbb
std
xchg
xchg
mul
lods
lods
lea
hlt
in
aaa
ja
test
movsb
fscale
cmp
scas
lds
xchg
adc
inc
bt
lea
xor
popf
lds
cld
mov
sbb
movb
xlat
js
shlb
out
push
and
cmp
jns
add
adc
insl
scas
into
stos
add
xor
dec
js
out
outsb
shll
mov
aas
outsl
inc
sti
cmp
mov
outsb
enter
pop
ficompl
in
movb
leave
cltd
lds
and
movsb
mov
adc
ret
test
jne
pop
xchg
cmp
je
lods
std
addr16
mov
add
in
stc
ja
mov
push
add
shrl
mov
das
daa
aas
pop
inc
inc
mov
lods
outsl
adc
or
or
mov
add
repz
je
mov
jmp
sbb
jecxz
test
lock
mov
push
dec
xchg
inc
imul
pmaxsw
into
ja
cmpsl
jns
sub
and
adc
test
sbb
pop
inc
mov
mov
jl
adc
lods
dec
shll
dec
mov
push
sub
or
pop
loope
iret
mov
js
ss
ss
pop
cwtl
in
add
push
cmc
test
and
out
mov
sbb
mov
cmpsb
add
jae
insb
nop
cmp
dec
daa
cli
mov
pop
mov
pop
ficomps
adc
fisubrl
push
cli
inc
repnz
test
or
xchg
daa
mov
xlat
imul
leave
and
in
stos
or
jge
aas
aas
incb
stc
sub
push
cmp
mov
mov
fstp
mov
jbe
mov
movsl
jae
out
push
push
sbb
mov
push
mov
or
jno
movsl
mov
stc
jmp
xchg
dec
mov
fistl
repz
mov
lods
int
dec
push
movsl
stos
pop
into
fsubp
add
movsb
add
inc
xchg
jecxz
cbtw
mov
push
fistps
mov
or
inc
xchg
aam
jecxz
lock
pop
xchg
cmp
scas
or
and
pop
pusha
into
in
je
negb
shl
add
movsb
push
mov
jnp
cmp
or
fcomp
dec
cwtl
and
pushf
push
je
jle
aas
inc
xor
pop
stos
icebp
data16
push
fwait
inc
fsubrs
or
jle
cli
and
daa
add
xchg
lock
sbb
subl
adc
dec
daa
lds
fdivrl
mov
mov
inc
imul
in
loope
loopne
mov
xor
pushf
pop
jnp
pusha
aaa
aam
in
ja
mov
mov
pop
push
frstor
jae
ja
mov
inc
mov
cmpsl
or
adc
add
jp
ja
fucomp
lods
cmp
loope
stos
test
icebp
leave
addr16
xchg
cmpsl
ss
int
data16
pop
int3
popf
fisttpl
xor
jns
icebp
ja
mov
pop
mov
dec
cld
pop
pushf
lds
insl
add
repz
xor
lods
sbb
inc
arpl
divb
popf
ljmp
mov
std
cmpsl
push
cmc
int
sbb
stos
mov
in
push
stos
ljmp
push
jns
repz
shll
pop
pop
rcl
out
aam
scas
mov
insw
dec
repz
divl
in
xchg
sahf
jecxz
icebp
xor
hlt
arpl
test
jmp
rcll
jb
mov
movsb
add
fwait
dec
inc
shrl
pop
pop
negb
inc
sbb
adc
add
pop
shrb
and
imul
aam
pop
int
jmp
adc
sbb
fdiv
aaa
movsl
push
lods
jecxz
mov
adc
mov
scas
popf
sub
mov
in
mov
lret
xchg
mov
leave
rclb
pop
pop
je
test
dec
inc
rorb
inc
xchg
mov
aaa
pushf
add
push
push
mov
call
and
mov
movsl
jnp
lret
adc
xlat
out
sub
jnp
scas
ja
mov
mov
mov
mov
cmp
cltd
xchg
or
jl
sub
lods
cmpsl
fwait
das
jae
mov
mov
js
rolb
xor
xchg
cmp
lods
xlat
mov
sbb
ret
cmp
cmp
imul
push
pop
sub
aad
pop
cmp
mov
repz
or
mov
lds
mov
movsb
or
bound
xchg
push
mov
mov
lds
dec
push
mov
push
pop
add
push
mov
xor
add
imul
pop
enter
lds
push
sub
jbe
hlt
mov
aad
movsl
in
mov
xor
inc
pop
shl
adc
imul
orb
aam
xor
mov
mov
mov
mov
mov
daa
adc
jecxz
adc
pushf
push
sbb
fnstsw
movl
jmp
inc
adc
daa
fsubs
mov
in
aad
cmp
add
imul
pop
lds
pop
sbb
mov
cmc
adc
dec
and
sub
push
add
testl
jno
aaa
and
aas
hlt
jns
jle
jnp
mov
scas
stos
adc
mov
pop
lea
ds
fwait
and
vpmacsdql
ja
pop
in
movsb
je
sbb
mov
loope
xchg
jecxz
frstor
add
mov
pop
inc
js
div
jnp
xor
xchg
and
ljmp
push
inc
adc
mov
jb
pop
push
in
lds
cmp
mov
add
fcompl
lret
rol
and
sub
pop
test
dec
mov
popf
add
xor
ret
and
idiv
out
test
sub
leave
js
mov
cwtl
test
addr16
lret
and
fsubp
dec
cmp
sub
xchg
int3
sar
fcomps
insb
mov
scas
or
ror
loop
push
and
pop
popa
fldl
orl
sbb
cli
negl
xchg
leave
addr16
out
and
jecxz
adc
sbb
fcomps
xchg
leave
dec
dec
repz
fwait
adc
xlat
or
pusha
lods
lahf
pop
fadd
pop
mov
negb
mov
adcb
mov
in
inc
lds
push
jle
xchg
div
mov
xchg
das
fdivrp
cmp
pop
mov
dec
mov
sti
and
scas
adc
lret
mov
lcall
lahf
xlat
push
mov
into
xchg
in
subb
pusha
in
mov
jmp
jmp
pusha
movsl
cmpsl
push
pop
rcrb
dec
movsl
pop
mov
lods
ljmp
or
xor
sub
and
rcr
jno
xor
jb
xor
outsb
stc
test
sbb
lds
dec
ret
or
lock
orb
ja
mov
xchg
cwtl
push
lcall
hlt
mov
jne
shl
loop
mov
leave
inc
xchg
fwait
add
in
movsl
je
push
stos
cld
out
in
lret
inc
mov
inc
leave
sbb
ja
pop
ret
fwait
mov
in
lods
daa
push
jns
cmp
ja
xor
fisttpl
arpl
cmpsl
and
jmp
repnz
shlb
push
jle
test
pop
push
cmpsl
js
cmpsl
mov
icebp
adc
or
adc
inc
jbe
iret
aaa
inc
subl
dec
rcl
rorb
inc
push
xchg
adc
out
and
adc
pop
mov
in
sbb
hlt
cli
test
pushf
aas
xchg
shll
mov
add
sti
mov
into
push
lea
loope
adc
inc
aas
mov
xor
bnd
mov
into
iret
and
out
ja
mov
movsb
adc
pushf
outsl
or
arpl
jmp
xchg
insb
lahf
and
sahf
push
cmc
std
lods
inc
outsb
daa
lods
sbb
pop
inc
pop
add
stos
cs
cmp
add
mov
sub
adc
les
incl
mov
pop
pop
push
dec
insl
shlb
daa
int
adc
inc
mov
push
xor
sti
mov
pop
mov
cltd
jnp
add
push
and
hlt
sub
stc
lcall
into
xor
lods
rorl
xchg
mov
std
push
ss
cmpl
pushf
add
shrl
sbb
adc
jmp
cld
fld
or
les
pop
cmpsl
inc
sbb
add
xor
hlt
movsl
sbb
pop
cwtl
push
jge
test
xchg
leave
ss
xchg
hlt
or
pop
dec
add
leave
imul
clc
mov
popa
sub
mov
ret
sub
iret
in
push
ja
add
mov
fdivp
outsl
push
dec
cmpsl
sbb
pop
add
jg
std
lcall
or
sbb
aas
mov
sub
ret
jae
js
xchg
pop
das
sub
popf
cltd
movsl
push
rcl
mov
movl
aas
xor
test
scas
jmp
pop
scas
jne
loop
xchg
mov
lcall
pop
sbb
push
daa
lds
mov
xor
fcmove
hlt
mov
out
lds
mov
ja
dec
sbb
pop
add
shll
scas
popf
push
mov
adc
sbbl
add
mov
iret
lahf
stos
sbb
scas
jno
add
lds
xor
inc
jge
lods
xlat
rorl
pop
dec
sub
sahf
mov
div
jge
mov
test
cmpsl
lcall
das
adc
mov
outsb
inc
aam
jae
scas
andl
sbbb
lods
je
les
cmpsl
aas
mov
and
inc
repz
ret
inc
das
test
icebp
jecxz
mov
inc
push
mov
and
sbb
in
pop
jl
leave
jmp
push
rcrb
sub
jg
das
fcomps
xor
and
and
sbb
insl
push
emms
or
cmpsb
rcll
mov
inc
mov
scas
inc
movsl
mov
pop
mov
jne
lcall
add
outsb
mov
repz
mov
xor
dec
shrl
dec
sub
test
lret
inc
sti
inc
pushf
jl
or
mov
idiv
cmc
pop
push
mov
add
xchg
clc
push
lods
sbb
and
lods
jne
popa
les
scas
push
js
mov
push
push
scas
cltd
ret
jno
inc
adc
fisttpll
fidivrs
mov
scas
pop
mov
lret
dec
sbb
mov
adc
mov
mov
or
movsl
pop
jno
hlt
or
mov
push
fstps
icebp
call
xor
movswl
leave
div
int
xlat
cmpsl
ss
pop
loopne
mov
das
xlat
imul
stos
xor
mov
aad
fisubrl
or
pop
leave
cmc
movsl
mov
lea
add
mov
imul
adc
int3
jno
imul
cltd
lods
pop
hlt
add
add
dec
push
cmp
js
add
rcrb
lods
mov
rclb
or
int3
stos
dec
mov
fcmovnu
aam
adc
add
andb
in
fadd
jae
xor
cs
jns
sti
stc
bnd
add
adc
jns
rolb
sub
lds
bound
sub
xchg
xchg
mov
das
std
and
cmp
es
inc
add
cmpsl
inc
cmpsl
jp
jecxz
mov
push
test
aad
mov
mov
std
shlb
lods
jg
jo
pop
rcll
dec
sbb
add
jnp
ret
sbb
mov
xchg
push
jnp
loope
mov
hlt
pop
adc
mov
scas
xchg
movsl
mov
pop
push
call
mov
lds
add
movsl
in
push
inc
pop
jbe
inc
jecxz
mov
arpl
sub
in
jle
loope
xor
ret
orl
jge
in
jne
in
add
xchg
sbb
xchg
mov
adc
mov
jge
cmp
ja
sub
sbb
cld
xchg
test
jne
adc
bound
inc
add
loope
popa
inc
mov
lahf
xor
xchg
adc
pushf
movsl
cmp
xchg
xor
ja
mov
dec
hlt
jns
lods
shrb
int3
add
clc
add
pop
xchg
pop
in
inc
mov
and
xchg
lea
scas
in
int
or
repnz
int
jbe
xor
or
adc
int
cmpsl
cs
imul
mov
fucom
outsb
cwtl
lds
rcrb
mov
adc
inc
push
enter
shll
xchg
stc
xchg
add
adc
std
and
mov
cltd
add
jmp
and
pop
aad
jecxz
bound
ds
add
jb
cmp
mov
mov
adc
dec
lret
jge
imull
mov
js
cli
insl
mov
es
popf
mov
hlt
and
lahf
inc
lds
mov
xchg
dec
jns
enter
jg
adc
add
stos
dec
xchg
enter
or
mov
xor
xchg
and
adc
popa
das
clc
popa
rorb
dec
sub
loopne
push
dec
jle
fiaddl
xlat
mov
xchg
loopne
pop
call
pop
daa
stos
pop
movsl
loop
popa
outsb
dec
push
stos
mov
add
xor
in
xor
jo
dec
jne
sbb
les
dec
xchg
loop
popl
lret
movb
outsl
movsl
in
fiaddl
je
mulb
pop
mov
movsb
jae
adc
dec
dec
and
mov
push
shl
movsl
cltd
pop
push
adc
cld
and
stos
out
scas
cmpsb
lret
xlat
movsl
outsb
push
add
sub
sbb
ds
cmp
lret
xlat
lock
push
or
pusha
push
xor
test
lret
adc
lret
js
inc
in
xchg
call
test
sbb
mov
pop
push
push
push
push
lods
inc
mov
adc
push
imul
add
mov
adc
jmp
imul
imull
movsb
lods
adc
fwait
into
stos
xchg
jg
xchg
pop
sahf
daa
pop
push
lds
clc
daa
icebp
arpl
sub
mov
dec
imul
leave
pop
xchg
jb
popl
mov
out
mov
mov
xchg
xor
adc
mov
into
scas
leave
mov
out
out
outsl
sub
lret
das
mov
or
into
test
stos
inc
in
movl
iret
dec
sub
insb
cmpsl
movsb
pop
in
push
fnstcw
mov
jne
les
mov
outsl
cli
cmp
mov
cmc
outsl
test
movsl
xlat
ret
leave
lret
hlt
pop
and
push
repnz
lods
sub
insb
xchg
test
lea
jnp
movsl
push
dec
xlat
mov
movsl
sbb
xchg
loop
pop
shlb
mov
add
mov
push
cmp
adc
aaa
xchg
sub
mov
adc
es
clc
add
push
outsb
jns
orb
push
push
sbbl
cs
push
stos
push
or
sbb
sbb
insb
aad
sbb
jmp
stos
out
lcall
outsb
lds
sbb
sbb
and
mov
bndldx
js
enter
hlt
mov
mov
xchg
arpl
lds
sub
jecxz
in
loope
imul
push
mov
aas
mov
mov
testl
jae
dec
mov
jmp
add
loope
decl
cmp
dec
dec
mov
mov
mov
in
push
cmp
div
cwtl
sbb
inc
cmp
cmp
cs
ret
pop
inc
adc
lock
jns
lods
jmp
sbb
lods
or
das
movsl
adc
sbb
mov
leave
lds
ret
dec
std
aaa
push
popa
movsl
sbb
iret
shl
stos
scas
add
xor
mov
scas
fmulp
rcrb
stc
cmc
ss
repz
xchg
or
dec
push
lea
cmc
or
test
pop
stos
cmp
std
mov
loope
push
xor
push
sbb
ret
inc
sub
clc
xor
dec
jmp
cmpsl
xchg
adc
add
divb
dec
add
fadd
jb
movsb
in
shrl
dec
in
mov
movsl
mov
or
adc
aad
hlt
popa
mov
dec
add
cmpsl
push
jp
or
push
pop
ficomps
dec
and
sbb
aaa
push
pop
cltd
push
imul
daa
xchg
mov
push
push
pushf
outsb
jle
in
jns
and
push
cld
mov
js
mov
fwait
inc
dec
std
scas
mov
mov
out
sub
leave
movsb
add
mov
jle
adc
and
lret
mov
insl
mov
test
in
cmp
mov
lock
mov
les
or
mov
pop
test
cmp
repnz
cmpsl
addr16
mov
shlb
daa
rolb
les
pop
fwait
aas
mov
pop
popa
mov
cld
mov
cmp
cld
std
mov
push
lret
cwtl
cmp
jbe
gs
std
and
loopne
nop
adc
cmc
jbe
push
xchg
repnz
sahf
xchg
inc
inc
or
push
std
loopne
adc
push
jne
std
arpl
inc
aaa
clc
scas
add
insl
in
jo
pop
scas
adc
test
xchg
test
mov
jmp
pop
outsl
mov
repz
adc
popf
mov
aas
sti
mov
dec
cmp
jp
add
rclb
pusha
call
mov
sbb
cwtl
in
mov
or
pop
mov
xchg
fsubs
dec
jbe
pushf
sbb
push
adc
popa
shlb
sub
jb
jmp
jbe
hlt
adc
scas
jl
mov
cli
xchg
jecxz
ret
daa
movsl
sub
push
insb
add
jle
jg
mov
xchg
fisubrl
and
inc
fidivl
insl
outsb
outsl
stc
out
sbb
xlat
inc
mov
repnz
push
popf
xchg
dec
push
adc
mov
test
por
insl
lret
out
inc
or
daa
dec
inc
cmp
adc
dec
mov
cs
int
outsl
outsb
gs
jnp
call
dec
mov
sbb
inc
mov
test
outsb
adc
sub
into
xchg
push
push
test
in
pop
cmc
mov
add
ja
mov
sbb
pop
jmp
add
inc
inc
in
jne
mov
shl
fsubs
xchg
xor
pop
subl
push
cwtl
icebp
pop
lret
rorb
dec
mov
call
lods
rcrl
loope
adc
in
and
add
push
pop
mov
scas
call
stos
int
movsl
ret
in
in
fsubl
icebp
mov
push
stos
push
out
and
push
mov
pop
test
inc
push
pop
lds
add
xchg
rolb
jle
xor
stos
movsl
ret
stos
or
out
jl
hlt
aaa
or
push
fstpl
pop
ja
sbb
insl
daa
lds
loop
cld
popf
push
lods
mov
sub
out
test
bound
jns
xor
enter
shll
imul
mov
scas
pusha
cmp
lahf
lahf
nop
dec
stos
outsb
adc
lret
jnp
pop
inc
or
mov
mov
dec
fwait
cwtl
in
mov
xchg
in
adc
jecxz
dec
in
lcall
cmp
addr16
mov
leave
push
pop
xchg
pop
es
inc
mov
popf
cmp
jp
push
pop
pop
in
sbb
mov
test
push
in
mov
jns
in
mov
test
lret
push
leave
stc
mov
jecxz
dec
dec
sub
dec
pop
jl
inc
xor
adc
sub
lds
mov
mov
dec
mov
cmpl
filds
inc
test
jp
in
mov
dec
lods
xchg
cmp
sub
icebp
jmp
or
cmc
das
fcoms
movb
add
or
daa
cmp
inc
adc
fnstenv
push
movsl
mov
vmovups
dec
mov
xchg
inc
int
orb
fldl
mov
pop
repz
xor
imulb
inc
push
cmpsl
xchg
cmp
dec
pop
xchg
push
sbb
cld
jb
movsb
arpl
int3
adc
xchg
xor
shrb
mov
xor
lods
adc
mov
lret
adc
outsb
or
jno
pop
cmpsl
lock
xchg
test
push
xor
loop
daa
test
and
sub
hlt
daa
add
int3
jbe
mov
push
into
xor
jle
and
test
xchg
jns
jl
and
inc
das
xchg
pop
lds
and
std
dec
or
sbb
into
enter
adcl
push
lea
jl
xchg
inc
or
xor
inc
mov
push
inc
in
cwtl
mov
jne
popl
pop
and
vpinsrw
mov
movsl
in
xor
inc
mov
mov
sbbl
jo
roll
mov
cs
dec
mov
ss
movsb
inc
popf
gs
sub
mov
inc
das
push
mov
outsl
mov
sbb
arpl
xor
rcrb
push
or
mov
jg
sbb
mov
mov
jno
jb
push
sahf
adc
fadds
movsl
test
xchg
inc
dec
cltd
jle
sub
xor
inc
cmc
fcmovu
psubsw
adc
jae
in
dec
mov
shlb
movsl
jb
out
sahf
ret
in
mov
movsl
cld
arpl
pushf
lds
les
pushf
out
push
imul
dec
xchg
xor
sub
inc
cmp
cli
mov
stos
dec
mov
lea
neg
jb
sbb
push
testb
int
sbb
xchg
outsl
dec
hlt
mov
aas
xor
xor
insl
test
lcall
cs
jae
daa
into
jecxz
filds
shrl
fsubs
jecxz
xor
testb
push
inc
add
popa
loope
int3
pushf
test
testl
vpsubusb
jge
rorb
aas
inc
scas
mov
mov
movsl
push
cmpsl
int3
les
ja
sbb
insl
cmp
into
fwait
adc
mov
mov
pop
mov
lcall
outsb
in
mov
mov
sbb
stc
ret
mov
lcall
cmp
lds
cmpsl
push
adc
ret
jns
out
mov
clc
inc
cli
pop
and
test
daa
dec
fsubp
decl
in
int3
and
and
pop
dec
push
les
lret
pop
jbe
sbb
xor
mov
fdivrp
push
lds
loope
pop
and
adc
jecxz
lret
mov
movsl
xchg
out
push
leave
inc
push
sbb
xor
fldt
outsl
dec
or
pop
and
mov
aad
pop
int
jb
xchg
movsl
rclb
ds
sbb
daa
mov
test
stos
dec
xchg
pop
dec
sbb
cmp
push
pop
cli
hlt
lods
scas
mov
movsb
xchg
sbb
cmpsl
adc
in
add
pop
js
roll
fiadds
ret
mov
std
pusha
out
cwtl
add
dec
rolb
xchg
mov
jge
dec
gs
shrl
mov
inc
roll
int
bound
push
xchg
in
add
inc
ret
jbe
mov
mov
adc
mov
je
lods
outsb
out
insb
loope
ficoml
push
imul
out
cli
push
xchg
pop
jg
pop
mov
pop
into
mov
sbb
dec
test
inc
mov
lods
test
pop
je
push
movsl
adc
dec
int
loop
and
push
test
outsb
mov
sbbl
pop
lea
cmpsb
pop
sbb
sbb
push
mov
call
cld
add
mov
or
mov
xchg
fmull
dec
addr16
imul
pop
pop
mov
lods
add
icebp
jmp
clc
push
lods
mov
icebp
inc
xlat
pop
pop
inc
hlt
xor
rorl
rcrl
cltd
push
xor
popa
jecxz
notl
out
jg
mov
pop
inc
adc
and
add
pop
pop
mov
xchg
xchg
fs
fsubrl
xchg
aad
ja
loopne
int
movsl
dec
imul
pop
cmp
inc
pop
jge
movsl
jmp
in
cmp
jmp
jbe
mov
mov
pop
jmp
xchg
sub
and
repz
arpl
repnz
in
cmp
pop
mov
push
aaa
jne
inc
push
jmp
movsl
push
shll
shl
push
xor
sbb
ret
fimull
mov
dec
int
cld
lods
outsl
inc
mov
scas
insw
xchg
add
mov
cs
movsl
in
popa
push
orb
mull
lock
pushf
lret
ficoml
push
mov
notb
rdtsc
xchg
mov
repz
cmp
pop
xlat
push
vpshab
xor
xchg
pop
and
jbe
lods
lds
rclb
ljmp
stc
test
jmp
cmp
dec
mov
sub
mov
jmp
adc
sbbb
add
jbe
cmp
dec
mov
add
adc
icebp
jg
mov
push
jae
lods
lds
pop
das
push
std
mov
mov
mov
cmpb
aam
out
leave
js
shlb
sub
adc
adc
mov
movsl
sub
jne
push
in
adc
call
xorb
sbb
mov
pop
adc
push
push
xchg
jmp
lds
lcall
push
aas
dec
movsb
adc
ljmp
or
lahf
cltd
mov
rcr
or
inc
push
mov
inc
pop
in
or
int
fimull
xor
pop
sub
cmp
sub
xchg
repnz
pusha
sbb
mov
aad
mov
xor
jo
xor
xchg
rorb
paddq
scas
push
mov
les
mov
push
push
or
mov
mov
enter
xchg
dec
jmp
mov
mov
lds
int3
add
icebp
adc
mov
mov
jle
sub
push
hlt
clc
out
mov
or
leave
add
push
in
add
sarb
popa
in
or
fadd
movsl
outsb
adc
and
mov
leave
rorb
rcll
hlt
dec
jl
iret
xor
stos
pop
inc
loope
fildl
cli
leave
cmp
nop
fwait
cli
and
jmp
cmc
cmpsl
sbb
cltd
pusha
jbe
ret
and
xchg
push
lds
std
mov
insb
rolb
mov
stc
jecxz
xchg
lds
stos
lcall
lds
add
mov
push
xchg
xchg
push
dec
jmp
into
push
imul
or
cltd
add
ds
ja
out
lahf
cld
outsb
push
les
pop
jns
xlat
sub
sti
pop
outsl
cmp
fiaddl
hlt
gs
dec
int3
fwait
lea
imul
addr16
adc
repz
push
js
cli
mov
out
add
mov
frstor
pusha
pop
push
jg
das
loope,pt
pop
pop
push
orb
mov
mulps
lods
rcrl
pushf
into
stos
imul
inc
or
dec
jo
cmp
push
idivl
int
jno
pop
xchg
push
jl
lea
lret
adc
mov
clc
dec
outsl
mov
pop
or
lea
out
cmp
test
dec
lret
repnz
jnp
test
outsb
enter
out
sub
or
sub
cmp
xchg
inc
pcmpeqb
sub
movsl
xchg
addr16
pop
pop
adc
cli
or
and
adc
fisubrl
addl
faddp
jo
ret
fadds
out
xchg
cld
mov
and
and
pusha
xchg
mov
mov
cmp
aas
sub
loop
and
cwtl
ret
inc
mov
or
bound
aaa
or
add
es
outsb
mov
das
dec
inc
jl
jge
jnp
ret
add
in
or
and
or
mov
pop
and
mov
inc
inc
pop
push
shl
cs
imul
dec
daa
jnp
mov
in
xchg
shll
clc
cmp
mov
ror
ja
jns
adc
pop
jmp
mov
into
mov
cmp
aas
pop
popf
jno
loop
mov
ljmp
xor
push
arpl
mov
mov
mov
lds
push
inc
dec
fsubrs
jp
daa
pop
test
xor
hlt
sbb
movsb
call
fidivrl
xchg
pop
jmp
cwtl
insb
sub
push
xchg
dec
cwtl
xorl
mov
sahf
mov
rolb
lret
sbb
test
push
mov
insb
popa
shll
cmp
add
or
loope
xor
test
insl
ja
stos
add
add
in
inc
fsubl
popa
xor
enter
in
adcb
jp
and
and
rcl
hlt
mov
clc
cmp
mov
fadd
dec
movsl
or
or
test
pushf
nop
pop
mov
push
mov
sub
and
in
in
loop
pop
pop
movb
inc
in
fisttpll
sarb
jp
loope
sbb
and
and
arpl
scas
and
xchg
add
push
mov
movsb
cmpsl
shlb
sarl
in
ss
pop
pop
xchg
test
addr16
aad
gs
sub
into
mov
int3
fidivl
repz
inc
ret
stos
mov
inc
sub
xorb
and
popf
xor
mov
dec
adc
pop
cmp
dec
jp
sbb
imul
mov
js
rcrl
out
stos
cmp
hlt
fsubs
pop
cmpsl
mov
mov
fadds
xchg
cmc
aad
js
mov
pop
lea
add
arpl
mov
and
jnp
push
mov
xor
in
dec
jne
imul
arpl
int
mov
or
sub
mov
cmpsl
add
divb
dec
outsl
mov
or
sbb
cmp
subps
shrl
mov
cmp
push
fcmovne
lcall
outsb
in
std
sbb
enter
aad
pop
jbe
gs
test
mov
mov
pop
xchg
ljmp
inc
mov
movsl
stos
ljmp
mov
sub
dec
sbb
sbb
fwait
arpl
sub
or
mov
lea
mov
dec
cmpb
cmc
aaa
adc
arpl
cwtl
movsb
push
cltd
or
test
or
bnd
outsl
jle
inc
lods
lds
pop
int
loope
negb
xchg
lods
sbb
mov
aas
pop
lds
loope
ffree
pop
sbb
adc
sbb
mov
sub
shr
js
xchg
push
or
pop
sbb
pop
in
mov
repz
sbb
test
lock
add
push
std
pop
mov
adc
hlt
or
lahf
or
mov
call
lcall
aam
stc
jo
sahf
test
mov
adc
or
and
xchg
or
pop
jle
ja
mov
sbb
inc
mov
mov
sub
adc
lahf
cmp
pop
out
cltd
and
mov
cmp
leave
sub
dec
mov
cmc
daa
imul
repz
jb
jmp
pop
dec
iret
or
pop
inc
es
add
es
loopne
mov
mov
movsl
sub
inc
out
es
xchg
jo
shlb
fstpt
in
push
stos
stc
pop
shrb
fdivrl
jno
mov
ret
mov
subl
add
sub
cmovb
cmpsl
lods
test
jmp
js
jmp
xor
and
mov
lcall
cmp
lods
das
adc
iret
and
mov
push
cmc
xor
mov
test
sub
mov
jmp
sbb
nop
imul
and
mov
pop
imul
std
pop
sub
clc
xlat
test
lods
je
in
cwtl
inc
scas
pop
and
test
push
outsb
sbb
icebp
add
mov
shrl
outsb
add
stos
stc
cld
outsb
xor
inc
jnp,pn
jb
loope
std
in
sub
gs
out
popf
addr16
lds
add
push
test
pop
lea
and
test
lret
fistpl
xor
and
ljmp
fisubl
sbb
lods
xor
fnstenv
xor
xchg
aas
lcall
jne
cmpsb
in
adc
jne
in
in
lock
inc
adc
sti
and
ljmp
mov
lods
push
pop
ficoms
pop
mov
mov
mov
js
inc
pop
mov
fldcw
inc
jge
rcrb
test
inc
push
jbe
or
lods
addr16
ja
cli
and
push
pushf
in
out
cltd
les
lret
daa
lods
jns
mov
sti
into
mov
aaa
in
cwtl
sbb
and
push
jno
mov
add
outsl
lods
vshufpd
pop
cwtl
clc
mov
cmc
xchg
dec
int3
adc
lds
inc
mov
cmp
cmpl
dec
shlb
movsl
cmp
inc
stos
adc
sub
addb
imul
rcrl
into
loop
adc
sbb
lds
into
sbb
inc
arpl
xchg
dec
inc
and
cmp
dec
xchg
xor
scas
mov
in
lds
outsb
mov
xchg
cmpb
andl
pop
inc
mov
add
loopne
cmp
fsubs
jae
mov
xchg
ss
mov
scas
jge
mov
popa
rcrl
mov
shlb
pop
inc
jne
hlt
mov
jnp
jmp
cwtl
push
int3
add
xor
mov
aas
adc
out
js
add
in
xchg
add
cmp
xchg
and
push
je
ret
push
pushf
jae
mov
xlat
int
sbbb
fwait
xchg
mov
repnz
inc
sbb
popa
sub
or
lcall
or
sub
adcb
push
jne
jb
sub
outsb
push
or
jnp
cmp
movsl
outsl
jno
jl
pop
loope
in
and
cwtl
outsl
pop
cmp
mov
sbb
push
sub
xrstor
xor
cmp
stos
movsl
std
xor
cli
fstpl
ret
pushf
xchg
orb
xlat
repz
sub
aaa
sub
into
mov
movsb
outsl
mov
movsl
xor
inc
inc
fadds
hlt
push
xchg
popf
test
ret
in
inc
inc
push
shlb
pop
fstl
fnstcw
dec
imul
push
pushf
pop
adc
xchg
jae
call
mov
or
mov
add
dec
scas
int
fmuls
movsl
inc
cs
fcompl
cmp
ror
mov
cmc
aad
push
mov
dec
mov
push
cmp
add
ja
add
mov
cmpsl
shrb
loop
scas
xor
mov
cmp
or
and
push
xor
xor
mov
mov
inc
int
ja
dec
mov
test
jge
hlt
shlb
nop
mov
popa
enter
pop
int
pop
test
call
mov
lcall
adc
scas
inc
in
insl
adc
add
sub
int
adc
cli
pop
inc
jb
add
outsb
fwait
arpl
icebp
dec
fisubl
stos
sbb
sub
fnstsw
rcll
sahf
popa
aas
in
xchg
add
sti
sub
cmp
sbb
or
cmp
gs
addr16
test
mov
mov
fldenv
mov
sahf
and
dec
fisubs
push
sbbb
mov
xchg
outsb
jmp
jecxz
mov
inc
loop
pop
adc
mov
notl
mov
push
mov
pmullw
pop
test
pop
add
loop
repnz
sub
outsl
mov
dec
cmp
mov
jmp
in
les
add
pop
cmc
cs
movsb
sbb
call
and
and
mov
adc
fsubrl
test
movl
std
movsb
out
xchg
xor
sarl
sub
rcll
ja
out
mov
enter
in
cmpsb
rcll
fmulp
popa
sbb
mov
cmp
in
and
lds
aaa
arpl
cmpsb
or
int3
dec
rol
adc
push
lds
test
mov
dec
dec
dec
les
push
gs
movsl
imul
fcmovb
lods
movsl
dec
fimull
movsl
xlat
add
scas
xor
in
lods
pop
cmpsb
push
nop
mov
pop
adc
sub
add
mov
sarb
ret
mov
lret
sub
stc
mov
xchg
aas
loope
mov
mov
cmpsb
stos
adc
movsl
xor
pop
mov
lahf
mov
ror
sahf
daa
inc
and
mov
movsl
mov
inc
pop
push
dec
sbb
jb
mov
lea
movsl
in
xor
xchg
orb
adc
jmp
mov
xor
pop
sub
fisttpl
fiadds
lds
inc
dec
std
stos
movsl
pop
test
inc
lods
pop
fildl
sub
mov
test
das
test
lds
add
cli
xchg
repnz
scas
jae
andl
jns
dec
sub
and
js
dec
mov
mov
loopne
dec
in
jl
outsb
ds
mov
sbb
jmp
fdiv
cmpsb
dec
or
inc
das
or
cmp
adc
out
sub
daa
leave
cwtl
loopne
lcall
mov
jb
push
scas
in
cmp
in
sbb
mov
pop
jle
pusha
sti
fld
subb
ret
fwait
mov
adc
cltd
inc
lods
sub
sbb
test
jns
push
mov
arpl
sahf
dec
aam
cltd
xorl
fwait
movsl
nop
jne
repz
xchg
insb
movsl
mov
dec
aas
push
bound
or
jno
push
adc
pop
inc
jmp
pop
out
xor
push
mov
stc
cmpsb
mov
sbb
jnp
sub
cmp
repnz
imul
movsb
jmp
xchg
shlb
dec
addl
push
loope
inc
mov
lock
sahf
push
cmc
sbb
dec
add
andb
in
or
push
lock
ds
divb
pop
and
fisubrs
js
push
stc
add
mov
xlat
movsb
jmp
outsb
push
test
add
movsl
jecxz
or
inc
lret
mov
inc
cltd
pop
jne
add
loop
negl
shll
jmp
xchg
rcll
jae
xor
sub
xor
dec
rcpps
cmp
jb
insb
lcall
enter
fldl
jne
mov
sub
push
or
ror
cmp
dec
or
cmpsl
jbe
fnstenv
mov
sub
loope
imul
add
les
sbb
add
out
daa
ja
cmp
xor
in
lea
mov
test
inc
rorb
in
sbb
jb
adc
mov
in
and
imul
test
or
jb
dec
fdivrp
outsb
mov
sbb
or
jae
out
cli
test
enter
and
outsb
loope
pop
lret
in
add
push
xchg
mov
sarb
sbb
movsb
in
lds
mov
out
mov
aam
jp
jo
xchg
cs
hlt
std
into
fucompp
jmp
mov
ds
xchg
push
bound
mov
in
push
ss
pop
mov
mov
pop
pushf
push
jbe
sahf
cmpsl
imul
cs
and
dec
xchg
daa
push
test
into
daa
xchg
adc
sbb
mov
or
jne
dec
pop
hlt
add
jmp
xor
lret
mov
ret
cmpsb
lret
shll
mov
sub
lods
inc
jge
cltd
movl
mov
in
fcomip
ja
shrl
sbb
outsb
lcall
add
xor
xchg
lds
out
lods
aas
cwtl
das
fwait
xchg
jo
inc
inc
sbb
push
adc
xor
outsl
sbb
and
adc
in
mov
add
scas
rcrl
xchg
sub
add
mov
mov
adc
xchg
xchg
std
jns
xchg
mov
scas
push
cs
notb
in
jbe
clc
movsl
loop
mov
lcall
mull
cs
pop
movsl
hlt
cmp
push
iret
sarl
jno
cs
sahf
pop
aaa
inc
xchg
out
sti
int
jge
mov
cwtl
mov
mov
sahf
aam
addb
lret
js
stc
cwtl
xchg
dec
or
and
mov
inc
out
lods
mov
mov
dec
scas
lahf
jecxz
jne
cwtl
xor
adc
movsl
mov
xchg
andl
scas
aam
inc
out
mov
lds
jp
sbb
das
pop
shll
lret
sahf
fwait
or
or
mov
adc
push
pop
push
mov
adc
or
xchg
sbb
xlat
stos
lds
dec
xlat
in
add
add
aaa
enter
jnp
out
xchg
ss
testb
hlt
movsl
sub
add
lret
push
in
mov
lret
pextrw
inc
test
jl
hlt
cmp
outsl
xor
pop
clc
pop
js
add
add
andl
cmc
fcomp
ljmp
in
adc
adc
add
out
ljmp
push
sub
lds
pushf
adc
sbb
faddl
mov
pop
push
sbbb
cs
mov
sub
std
mov
fstpl
int
ret
arpl
cmpsb
shlb
xlat
adc
xchg
punpckldq
mov
sbb
push
rorb
xor
sub
add
mul
out
mov
scas
outsl
or
call
and
cli
pop
sub
sbb
add
pop
push
movq
pop
fcoms
push
imul
jo
xchg
lret
or
cwtl
cmp
insl
mov
mov
lods
mov
int
sbbb
pop
sti
sbb
mov
xchg
or
test
orb
xchg
pop
dec
daa
mov
mov
pusha
push
test
fwait
movsl
insb
rorb
stos
ret
in
xor
out
int
leave
outsb
add
or
sahf
mov
ret
iret
pop
sbb
cmp
mov
lahf
std
sub
and
push
cmp
scas
xchg
push
sbb
insl
and
xor
sub
add
and
inc
inc
aaa
loope
repnz
adc
cli
sbb
in
inc
push
push
sub
arpl
sti
add
stos
lods
movsl
stc
bound
adc
cmp
pop
sub
xor
cmp
mov
mov
push
shrb
pop
nop
mov
mov
add
adc
adc
aaa
push
jmp
in
or
outsl
sahf
aam
sbb
sbb
sub
jmp
shlb
lods
inc
cmp
mov
mov
and
lret
into
arpl
mov
adc
xchg
and
lea
test
pop
xor
add
xor
xchg
add
fisttps
push
mov
movsl
lcall
jmp
xor
mov
add
xchg
scas
fdivs
xchg
and
mov
ljmp
jmp
ret
mov
push
cmp
push
icebp
sbb
xorb
pop
fs
xchg
push
rcrb
je
add
cmp
aam
mov
in
fsts
or
add
jp
test
push
stos
mov
xchg
mov
push
shll
fdivl
fcoml
in
inc
xlat
loop
loopne
ja
fcmovnb
pop
mov
mov
neg
daa
std
stos
pop
mov
sub
inc
push
inc
stos
dec
xor
push
push
mov
pop
cli
movsl
mov
bound
adc
sbb
push
lock
repz
mov
sub
notl
or
sub
mov
sbb
adc
or
dec
sbb
je
cmc
mov
mov
lret
out
sbb
mov
test
test
and
mov
mov
inc
add
or
push
mov
push
das
les
xchg
inc
xchg
daa
add
push
jecxz
xchg
test
and
pop
push
cmpsl
movsl
fnstcw
pop
push
lret
add
jo
and
xor
lods
aaa
lret
lods
pushf
flds
and
ja
aas
stc
mov
jle
inc
out
jnp
stc
mov
sahf
inc
xor
xchg
sub
xchg
cmp
das
popf
sahf
jae
in
and
pushf
pop
in
adc
pop
popf
dec
push
int
jnp
jae
roll
lods
xchg
xorl
les
add
mov
push
push
sbb
ret
movsb
jne
inc
or
mov
xchg
xchg
ficompl
int
cmp
pop
leave
in
decl
lods
add
inc
scas
inc
fwait
test
and
nopl
mov
test
std
and
mov
cltd
nop
push
inc
cld
mov
mov
pop
add
int
mov
sahf
int3
mov
hlt
and
movsl
repz
mov
sub
inc
cmpsl
test
ret
stc
int
mov
nop
push
xor
inc
cmp
sbb
sbb
into
cmp
outsb
nop
lds
push
xlat
ja
scas
jnp
adc
pop
cmp
cwtl
pop
dec
mov
imul
cmp
mov
les
jecxz,pn
fisttps
xor
ss
stos
aaa
xchg
xchg
push
adc
mov
cmp
mov
lahf
adc
xor
cmp
mov
fwait
jbe
pushf
daa
lods
icebp
repz
loope
test
jne
int
and
popf
jbe
mov
pop
out
les
icebp
cmpsl
jmp
cs
push
sbb
dec
clc
out
nop
in
hlt
adc
in
aaa
scas
push
test
push
aas
mov
das
and
out
ret
fcmovnb
shll
add
out
outsb
mull
mov
and
ja
push
and
les
adc
and
lcall
fs
loope
jne
cmp
loopne
aam
push
pop
cwtl
cltd
mov
out
mov
rcrb
mov
out
mov
out
aam
sbb
pop
fsts
sub
fsts
push
lods
jbe
out
and
mov
push
ja
arpl
enter
inc
daa
fstpl
cmpsl
push
jne
cwtl
jns
xchg
cmp
mov
sahf
sahf
sahf
jb
adc
xchg
cwtl
cmpsb
sbb
stos
jg
loope
outsb
dec
fstps
dec
lods
add
pop
addr16
xchg
popf
out
notl
jecxz
add
cld
test
sub
data16
add
xchg
into
in
mov
dec
insb
fwait
pop
and
int
mull
lods
mov
adc
inc
pusha
lret
xchg
jl
dec
shll
lcall
subb
pop
add
outsb
imul
insb
aam
movsl
jae
xchg
cmp
retw
aad
clc
fisttps
ds
repnz
test
jle
push
ret
xchg
into
aas
shll
ret
push
cmpsb
idivb
cld
add
mov
aaa
movsb
sub
mov
fisubrs
loope
scas
pop
xchg
out
cmp
xlat
mov
mov
in
movsl
test
cltd
sub
jl
test
in
stos
add
gs
pop
scas
xchg
mov
jecxz
or
or
jns
push
in
push
daa
notl
in
sahf
cwtl
pop
dec
lds
scas
pop
dec
in
aad
push
mov
mov
add
fdivrl
mov
out
mov
mov
push
rclb
push
adc
loop
shrd
mov
pop
adc
outsb
cltd
add
cli
and
push
loopne
bnd
adc
rol
stc
insl
aad
sarl
movsl
and
push
cwtl
hlt
dec
sahf
loop
fwait
mov
stos
int3
lds
clc
xchg
xchg
ja
inc
mov
add
mov
add
out
cmp
stos
xchg
sbb
sub
push
jecxz
mov
test
out
and
lods
fdivrs
or
push
push
int
xor
dec
and
adc
inc
sbb
add
push
or
imul
inc
sub
sbb
in
adc
cmpsb
insb
stc
pop
dec
mov
fimull
push
pop
mov
mov
rcrb
inc
xlat
mov
sbb
leave
ret
mov
in
push
loop
hlt
das
adc
inc
mov
hlt
pop
add
xor
adc
das
cmp
out
rcrl
jne
push
cltd
cld
sahf
leave
adc
cld
pusha
fwait
xchg
dec
add
in
push
sbb
cmp
cmp
test
orl
ret
arpl
not
add
repz
jnp
push
movsl
adc
dec
inc
xor
repz
fucom
clc
mov
adc
ljmp
adcb
pop
adc
sub
or
jecxz
aaa
lds
insb
adc
call
movsl
cmp
daa
mov
fwait
pushf
mov
imul
mov
imulb
fisttpl
lret
push
lahf
data16
ret
cmp
popf
push
inc
shlb
ljmp
arpl
cmc
push
hlt
mov
rclb
and
xchg
inc
jbe
cli
jge
add
imulb
lea
push
mov
cmp
add
push
pop
aam
fwait
jne
cmp
jne
jns
pop
ja
lds
sub
push
jb
or
int
nop
pop
icebp
aam
repnz
adc
pop
inc
sarb
dec
cmpsb
cltd
in
dec
rorl
ljmp
cld
pop
mov
mov
xlat
xchg
es
xor
push
je
add
cmp
iret
cltd
push
adc
mov
inc
movsl
lea
scas
mov
sahf
notl
lahf
mov
jmp
ja
cmpsb
in
in
pop
jns
xchg
push
or
and
mov
cmpsl
dec
jp
scas
loop
sub
aaa
jo
ret
sbb
cld
push
mov
push
mov
push
lock
cmp
cwtl
in
xor
pushf
dec
rorb
or
adc
fstpt
jne
mov
sub
cs
add
add
movsl
sub
call
cmp
add
je
dec
imul
aaa
mov
ret
into
int3
mov
ljmp
sub
dec
sbb
mov
les
dec
shlb
xor
pop
adc
mov
mov
repnz
stos
pop
test
hlt
xchg
int3
in
push
mov
mov
out
mov
push
mov
cmp
push
mov
mov
lds
add
or
sahf
jmp
jg
add
mov
bound
mov
mov
xor
shlb
in
js
cmp
push
xor
mov
hlt
pop
xchg
bound
mov
adc
lcall
push
hlt
and
mov
mov
cmp
sti
mov
mov
lock
loop
xor
cwtl
cltd
mov
scas
push
inc
and
int
leave
sbb
and
in
inc
shrb
jg
popf
inc
sarl
lods
movsl
daa
mov
xchg
xchg
test
ss
mov
mov
xlat
lret
push
sbb
out
xor
push
cmp
inc
mov
mov
add
das
cmp
cmpl
lcall
xlat
mov
and
and
xchg
adc
inc
and
stos
sbb
aam
pop
mov
push
jmp
dec
xchg
pop
push
xchg
cmc
loopne
pop
lds
cmpsb
cmp
out
mov
inc
rcll
adc
decl
mov
in
mov
and
insb
jne
bnd
pusha
cmpsb
jp
push
lret
loopne
mov
dec
pop
rcll
gs
pop
xorl
lea
aam
fiaddl
jecxz
xchg
mov
test
icebp
cli
sub
xchg
add
mov
jp
jae
pop
push
mov
add
push
test
iret
push
mov
std
lcall
fimull
cwtl
push
dec
in
fiadds
sbb
add
in
or
popf
adc
aaa
inc
subl
push
lcall
mov
xor
mov
je
das
add
mov
mov
cmp
lea
push
sti
or
fistl
inc
adc
mov
inc
jle
cwtl
mov
xor
push
mov
inc
aas
push
mov
pop
bound
popf
shll
push
into
cmpsb
not
sub
loop
out
cmpsl
or
mov
mov
xor
jecxz
add
or
inc
popa
leave
std
push
scas
hlt
jno
mov
add
add
popf
stos
xor
cmova
popa
dec
aad
in
xchg
insb
idiv
sub
push
fsubs
rep
mov
add
or
lds
or
push
leave
sub
pushl
push
lds
popf
mov
sahf
add
lds
aaa
fcom
test
jbe
iret
rcl
inc
subb
scas
inc
push
pop
inc
sbbb
mov
push
in
jns
out
push
aam
xchg
sbbb
cltd
and
in
jne
xlat
pop
stos
add
push
in
pop
iret
and
stos
ss
dec
dec
call
mov
and
push
mov
lret
outsb
or
sbb
lret
lods
lods
clc
incb
mov
shll
outsb
lds
xchg
jp
xchg
cmp
adc
divl
outsb
sub
dec
test
ret
xor
push
fistl
iret
arpl
pop
mov
jno
aaa
push
lahf
or
in
dec
ja
jecxz
adc
pop
push
iret
fiaddl
stos
ficompl
add
mov
push
out
bound
inc
and
adc
add
adc
cmpsl
mov
daa
mov
mov
pop
pop
mov
es
lret
out
sar
mov
in
xchg
clc
jge
aad
xor
stos
lds
push
push
add
lret
lret
addr16
inc
mov
loop
lock
lds
iret
cmp
test
test
fldcw
aam
mov
mov
sti
fcoms
adc
cmp
loopne
fists
les
loopne
mov
lods
loopne
aaa
mov
mov
inc
mov
sub
scas
push
inc
mov
mov
xchg
or
test
ja
cs
push
in
imul
lds
sbb
sub
adc
adc
add
jl
mull
imul
arpl
xchg
mov
sub
insb
fst
lods
sbbl
sbb
sbb
pop
lahf
sub
sub
std
mov
jno
cmp
and
pop
jne
mov
test
mov
add
sbb
lahf
in
stos
xchg
cli
cmp
in
push
jno
mov
movsl
jbe
out
iret
call
pop
pop
gs
fstpl
cmpsl
popf
mov
pop
negl
dec
std
ret
jo
stc
in
lods
jle
pop
dec
push
cld
mov
inc
in
nop
vmwrite
push
loope
mov
imull
dec
hlt
jnp
sbb
sub
movsb
stos
data16
add
push
push
lcall
sbb
jle
pop
inc
lods
lds
in
sbb
cmpsl
or
jae
ds
inc
xor
dec
lds
jmp
jle
lcall
cwtl
sbb
rcl
inc
popa
mov
ds
mov
jno
xor
fstl
out
dec
or
sbb
push
scas
cmp
and
andb
sub
sbb
in
imul
in
ljmp
push
pop
push
cmp
xchg
fisttps
loop
jmp
lods
and
or
ss
stos
and
fldl
int
mov
cmpl
jmp
in
fwait
mov
dec
mov
pop
pop
ret
xchg
pop
jb
jne
int
and
test
or
push
repz
lret
mov
inc
lcall
push
int3
daa
mov
aas
insb
ss
out
cmp
mov
sbb
rcr
scas
xor
sbb
ljmp
leave
fadd
rcrb
out
stos
data16
adc
or
in
pop
dec
pop
hlt
scas
add
iret
std
movsb
push
imul
test
or
xchg
daa
xchg
xchg
fnstsw
sbb
shlb
lret
outsl
mov
mov
push
mov
dec
xchg
icebp
dec
jmp
add
ja
jmp
lds
nop
pop
clc
xor
push
adc
mov
add
push
jle
cmpl
lds
lea
cmc
add
movsl
push
repnz
sbb
jl
mov
imul
add
xor
ret
popa
push
imul
cmpsl
dec
lods
movsl
scas
call
inc
sbb
sahf
mov
ret
mov
mov
inc
mov
lds
cld
push
ret
icebp
rorb
fadds
pop
mov
fnsave
cmp
sub
dec
int
das
and
insl
mov
ja
mov
inc
popf
mov
movsl
cmp
cltd
fistpll
shlb
mov
push
cltd
pop
xor
mov
in
movsb
inc
cmc
sub
dec
shrb
push
ljmp
sbb
inc
bound
repz
sar
inc
cmp
pop
movsb
jg
addr16
popf
outsl
dec
mov
sub
subb
add
insl
call
xor
cmovs
das
aaa
xor
lea
mov
and
clc
mov
sbb
ret
popa
add
frstor
scas
les
popl
fldenv
xor
dec
aad
fstl
insl
ja
fs
imul
adc
push
add
mov
adc
stc
mov
xchg
xchg
sbb
pop
lods
fsub
in
scas
outsb
bound
nop
jecxz
es
mov
pop
mov
push
shl
mov
xlat
movsl
mov
ds
dec
mov
int3
testb
loop
lahf
stos
lret
test
pop
sarl
dec
xor
jo
mov
test
cmc
jle
adc
sub
cmc
jl
lods
dec
ljmp
pushl
test
es
outsl
outsl
dec
out
dec
pop
xchg
adc
jge
mov
add
sbb
int3
jmp
add
subb
aas
or
inc
push
xchg
jecxz
push
sub
aaa
test
fcmove
mov
imul
rcrb
push
movsl
repz
fidivrl
mov
add
jp
sbb
mov
pop
push
push
idivl
cmp
mov
inc
int3
iret
aad
sbb
push
mov
mov
ret
adc
pop
lret
push
push
pop
jmp
lds
cltd
and
adc
adc
sbb
addr16
and
xchg
lods
das
xchg
scas
fldcw
bound
ret
lds
adc
mov
call
mov
inc
dec
movsb
sbb
mov
pop
inc
pop
rcrb
scas
cmp
mov
jbe
or
jae
xlat
das
lret
hlt
cwtl
sbb
loopne
ljmp
pop
pop
sbb
stos
movsl
neg
push
add
aam
int
and
sbb
out
and
out
loop
xchg
daa
push
outsb
insl
sbb
subb
and
pop
adc
cmp
and
mov
jle
pop
inc
inc
inc
sub
sub
daa
xchg
pop
xor
adc
add
and
ret
xlat
push
pop
arpl
adc
rorl
movsl
jecxz
js
popa
mov
daa
xchg
fbld
mov
push
fcoml
xchg
les
mov
dec
and
clc
mov
cwtl
rcrb
imul
cmp
push
pop
pusha
in
mov
xor
aas
adc
inc
xchg
xchg
mov
gs
mov
test
fstl
mov
test
jg
leave
cld
leave
sahf
jne
inc
adc
adc
ret
lods
mov
xchg
pop
mov
testb
orl
lea
push
mov
dec
leave
scas
cmp
or
xor
sbb
call
lret
inc
cmp
jmp
es
rcll
cmpsb
sbb
jmp
adc
sub
test
push
outsl
popf
mov
enter
cmp
in
pop
push
lcall
push
mov
in
pop
or
pop
lahf
sbb
scas
scas
mov
lds
fistpl
adc
movsb
sbb
add
mov
xor
pop
lret
stos
ret
xchg
test
scas
fisubrl
jmp
pop
jmp
movsl
aam
mov
aad
or
daa
xlat
lea
pop
xchg
add
dec
sahf
inc
rcll
bnd
iret
jg
xor
push
cwtl
imul
mov
insl
in
lds
mov
lds
mov
stc
into
dec
and
pusha
addr16
mov
imul
xor
lods
lds
jmp
inc
imul
xor
and
cld
or
test
pop
fwait
nop
fs
sbb
pop
jae
push
out
mov
mov
leave
in
mov
lret
lret
cmpsl
mov
pushf
fistpl
imul
or
mov
fwait
or
push
pop
mov
movsl
inc
fadds
pop
push
dec
test
mov
inc
test
outsb
es
repz
and
andl
mov
mov
inc
push
mov
add
mov
and
test
scas
add
adc
mov
push
jecxz
scas
stos
shr
sbb
lahf
dec
sbb
fsubrl
mov
adc
scas
cmpsl
shlb
xchg
and
jg
pop
add
movsl
in
mov
cmp
fadds
lret
negb
xor
lds
aam
adc
sbb
imul
sbb
dec
shll
mov
std
push
sub
mov
sbb
and
in
inc
rclb
pop
fisubrs
lods
xchg
inc
push
jle
loopne
push
pusha
xchg
jle
in
outsb
jecxz
call
inc
or
popf
add
imul
push
aad
jnp
inc
in
loop
inc
test
inc
cmp
xchg
mov
daa
push
mov
xchg
mov
insb
shlb
sti
add
rolb
aas
popa
rol
xlat
or
lea
add
cmpsl
fwait
dec
insb
lcall
incl
pop
cmpsl
lret
mov
and
push
clc
mov
aad
mov
mov
push
mov
add
add
lret
lret
inc
int
add
cmp
xchg
imul
pop
and
fstl
mov
cmp
add
mov
jmp
cmp
xchg
insb
adc
jmp
ja
cwtl
icebp
and
jecxz
jl
arpl
cmpsl
pcmpgtb
cmpsl
lock
in
loope
adc
or
mov
into
or
pop
sub
sbb
cmpsl
ss
jo
jl
pop
lods
xchg
inc
test
mov
and
cmpsb
cmp
pop
ljmp
lock
movsb
cmpsb
pop
push
mull
imul
mov
fistpll
test
ljmp
cmp
and
push
fwait
push
lods
inc
icebp
push
mov
js
sar
or
jb
mov
jmp
loopne
mov
leave
jne
in
inc
adc
sbb
std
arpl
mov
call
mov
leave
lret
hlt
negl
dec
popf
inc
movsb
mov
cmp
add
fcomp
nop
aam
rorl
jmp
mov
mov
rcr
push
mov
scas
add
jno
pop
das
cmpb
in
movsl
in
adc
stc
add
icebp
cli
push
fisttps
enter
push
leave
ljmp
addr16
test
daa
pushf
xor
std
jnp
aas
add
and
js
adc
scas
sbb
mov
jle
jo
sbb
sbb
pop
aas
iret
mov
jbe
fwait
xchg
scas
ss
sub
and
adc
dec
sahf
daa
lea
ret
sbb
mov
cmp
xchg
inc
loop
lods
inc
incb
mov
sti
push
dec
mov
dec
test
idivl
adc
or
pop
faddl
sbb
pop
push
mov
mov
adc
fwait
sub
or
mov
push
cmp
js
pop
mov
mov
pop
shrd
xchg
shlb
aam
scas
les
ss
cmc
jmp
add
add
add
pop
ss
ljmp
inc
scas
rorb
sbb
arpl
ficoml
rol
jl
pop
push
push
and
mov
mov
cmpsl
and
push
fs
jbe
stos
cmpsl
cld
movsl
sbb
add
mov
imul
pop
imul
mov
outsb
outsl
sbbb
test
and
fdivrs
sub
dec
in
and
cmp
enter
rorl
in
cmpsl
jge
jg
xor
bound
and
sahf
ret
mov
jmp
mov
lahf
add
pop
adc
fidivrl
mov
mov
int
jecxz
ljmp
les
xchg
jl
dec
and
cmp
aam
dec
adc
push
adc
daa
mov
aad
testb
xor
mov
int
sbbl
or
sub
jns
push
loop
dec
adc
sub
andb
leave
test
and
add
push
repz
pop
adc
inc
orl
das
imul
mov
sbb
or
pop
dec
test
mov
sbb
aad
clc
lahf
adc
push
es
add
push
inc
daa
ret
mov
push
daa
fadds
mov
sbb
sub
xchg
inc
cmp
stos
push
pop
leave
aam
adc
in
push
pop
pop
xor
cmp
sbb
inc
nop
cli
mov
adc
repnz
fsubrl
ret
lds
jbe
sar
cmp
dec
jp
ja
scas
xchg
mov
ljmp
and
dec
mov
mov
xchg
adc
outsl
mov
ret
push
jne
lahf
mov
mov
mov
pop
push
movsl
jl
fstpl
or
push
xor
in
add
mov
dec
scas
hlt
movsb
cmp
xchg
lret
mov
pop
pop
ret
mov
test
out
scas
and
inc
lea
in
mov
pop
fwait
jne
movsl
repnz
dec
cltd
push
push
bound
aad
inc
mov
xchg
loopne
mov
ja
xor
sbb
inc
clc
xchg
or
divb
mov
in
inc
adc
jbe
push
scas
cmp
movsl
lds
arpl
pop
in
aam
inc
roll
pop
push
js
adc
or
testb
imul
iret
lcall
ret
mov
xchg
lret
decb
mov
repnz
aaa
movntps
int
lds
add
movsl
dec
imul
aaa
sub
jle
add
pop
in
cmpsl
mov
inc
sbb
and
scas
icebp
les
iret
out
data16
lock
inc
push
les
stc
enter
push
lds
call
push
scas
add
outsl
pusha
test
lret
dec
lds
jmp
mov
movd
sub
sbb
stc
and
push
cltd
jbe
pop
mov
mov
sub
xchg
jg
pop
push
decl
xlat
popa
cmp
and
loopne
mov
sbb
xchg
pusha
mov
or
lds
jnp
pusha
xor
pushf
or
mov
pop
jl
lahf
mov
int
sbb
in
cli
aad
fdivrs
dec
mov
cwtl
jmp
andb
add
and
and
in
mov
xchg
push
sub
pusha
addl
stos
add
adc
loope
mov
jb
lods
sub
xchg
sub
psadbw
mov
mov
xchg
movsb
pop
adcb
lret
and
pop
cmc
stos
pop
mov
push
cmpsb
cltd
cmp
addl
sbb
sbb
sbb
movsl
les
inc
dec
pop
lret
in
push
sbb
xchg
adc
imul
sbb
movsl
fs
vmovhps
arpl
in
test
leave
xor
imull
cld
add
std
xlat
add
or
test
mov
push
sub
inc
cmovge
xlat
mov
jbe
aas
outsl
jae,pt
mov
pushf
mov
or
push
fcmovne
cs
jmp
test
sbb
lea
xchg
sbb
cmp
mov
mov
xor
pop
mov
pop
cmp
jno
add
pop
sub
shrl
neg
ja
add
pop
bnd
movsl
push
rcrl
out
lds
or
jns
je
push
mov
mov
ret
add
popf
pop
xchg
xor
stos
int3
lds
and
rcrl
int3
lds
xor
fistl
inc
pop
xor
out
mov
mov
std
ja
dec
call
stc
loopnew
inc
nop
pop
sub
push
fisttps
pop
outsb
sahf
ljmp
xchg
orb
mov
pop
xor
add
add
add
push
rcrb
xchg
std
loopne
add
mov
inc
jno
icebp
sbb
je
clc
notl
imul
inc
or
sbb
icebp
add
js
or
call
push
push
sbb
fcomps
lds
xchg
test
mov
push
mov
and
xchg
rolb
sti
inc
push
jle
add
pusha
mov
out
pop
and
sbb
inc
out
sbbl
lds
mov
ja
aaa
xchg
add
ret
mov
fs
shrl
ret
push
pop
sbb
xor
and
inc
fimuls
push
out
lds
push
xchg
orb
dec
cs
in
lods
jns
push
lds
mov
add
mov
cld
jns
shrl
imul
mov
inc
mov
fcoml
scas
mov
or
pushf
sti
lock
fcomps
xchg
lock
loop
mov
or
push
xlat
je
lds
pop
jne
ja
outsb
imul
cmp
add
pop
test
jge
in
and
dec
inc
mov
push
sub
lds
dec
jnp
dec
push
int
gs
in
inc
daa
inc
push
push
mov
push
fsubr
lcall
push
mov
xchg
cmpsl
cmp
jb
jne
fwait
pop
int
pop
hlt
dec
cwtl
jnp
out
mov
mov
stc
jnp
test
add
lods
and
mov
jecxz
or
movsb
lahf
lret
sarl
xlat
push
push
mov
clc
jbe
outsb
xor
push
aam
add
jge
scas
and
mov
insl
scas
pusha
add
insl
rorb
int
lds
test
out
dec
jo
in
arpl
pop
adc
incb
xor
mov
ror
sub
testl
pop
or
popf
js
clc
mov
sbb
pop
sbb
ja
test
pop
in
jne
inc
mov
lds
int
xor
xchg
lret
pop
xor
dec
aas
or
sbb
out
fstps
pop
jle
dec
cld
shll
stc
jo
movsb
ds
sub
push
popa
dec
xchg
fnstsw
inc
push
gs
ret
jecxz
divl
cmp
rcrb
pop
xchg
insb
xchg
lahf
outsb
mov
movsl
mov
flds
jno
push
je
or
mov
xor
stos
xchg
mov
fists
pop
push
mov
cmc
sub
lret
sbb
mov
dec
sub
aam
loope
jne
and
sbb
sbb
mov
in
mov
int
pop
sbbb
out
add
cmp
add
mov
outsl
out
sbb
dec
dec
and
mov
and
js
std
push
lods
pop
mov
movsl
xchg
jecxz
outsb
out
dec
lcall
inc
fdivr
ja
pop
rcrb
cltd
sub
lret
mov
fnstsw
sub
add
jo
pop
fiadds
cmp
cmc
sahf
add
sub
or
push
mov
mov
xorl
push
mov
loope
je
in
jne
mov
mov
sub
push
and
push
adc
aaa
mov
sub
pop
add
mov
sahf
sub
push
into
mov
dec
packsswb
add
jnp
addr16
adcb
cmc
es
frstor
arpl
jno
mov
add
scas
into
sub
je
rorb
loop
js
inc
subl
pop
pop
sub
add
push
cmp
ret
push
adc
sub
shll
mov
sbb
adc
push
xchg
push
shll
pop
dec
push
mov
add
fstpl
jge
cltd
idivb
fstpt
cmp
lds
pop
adc
shlb
mul
hlt
loop
push
lods
arpl
cltd
pop
mov
lcall
add
iret
test
sahf
and
fwait
cwtl
lds
xor
hlt
mov
stos
repz
sbb
lahf
xchg
cmp
push
je
xchg
popa
mov
push
fmuls
int3
jl
lock
cli
mov
gs
mov
push
dec
sub
popa
leave
cs
sti
test
movsb
das
xchg
sbb
push
adc
sbb
ds
push
mov
clc
es
and
xchg
and
cmp
adc
test
add
jns
pop
push
jae
jne
jle
lds
mov
loopne
mov
and
mov
hlt
mov
sbb
loope
hlt
mov
lea
xor
in
add
cltd
sub
or
mov
pusha
sbbb
in
out
push
cmp
pop
sbb
and
jae
scas
pop
adc
or
je
or
and
stos
int3
psubusw
addl
jge
dec
dec
jbe
sbb
fwait
xlat
pop
add
mov
pop
fldl
iret
dec
adc
hlt
js
pop
out
fdiv
adc
movsl
inc
test
loop,pt
iret
sbb
lods
pop
mov
test
mov
lcall
inc
dec
jmp
mov
test
xchg
outsb
or
adc
xchg
movsl
jmp
push
mov
lds
andl
inc
ss
and
hlt
push
das
arpl
nop
pop
and
lds
xor
and
popa
dec
dec
push
cmpl
and
pop
push
mov
xchg
mov
mov
jne
or
mov
xchg
xor
call
pop
movsb
shlb
mov
xchg
add
xlat
les
das
dec
xchg
xor
sbb
insb
mov
outsl
dec
mov
mov
icebp
pop
insb
inc
xor
pushf
mov
mov
pop
xor
and
push
pop
movl
sbb
adc
pop
js
mov
out
xchg
subb
push
cltd
jg
cmp
pop
testb
jb
ss
movsl
mov
loopne
fcom
scas
scas
fadd
add
add
mov
mov
fadd
xchg
lock
int
xor
sub
je
sub
mov
in
xlat
inc
sub
lahf
in
ss
xor
mov
scas
sub
jmp
stos
loop
insl
fcompl
in
outsl
aad
and
sub
pushf
in
imul
outsl
xor
lds
addl
lcall
add
push
mov
cmp
pop
mov
sub
sbb
jb
lods
pop
push
push
mov
mov
in
into
push
arpl
mov
pop
insb
sbb
repnz
cmp
lcall
into
lods
jmp
cs
xorl
inc
sbb
sbb
sub
imul
es
insl
les
xchg
mov
mov
cltd
push
aas
add
jl
decl
cmp
loopne
scas
pop
les
rolb
xchg
movb
rolb
dec
mov
xchg
in
mov
sbb
mov
xchg
add
frstor
in
scas
or
int
mov
xchg
pop
fcmovnbe
ud1
pop
and
inc
add
call
icebp
xor
xchg
call
sbb
movsb
in
mov
call
push
jne
subl
inc
or
mov
xchg
xchg
imul
nop
sbb
lret
push
fmuls
in
movsl
add
sub
mov
add
aam
stc
cmp
sub
and
pop
mov
fcmovnbe
arpl
pop
mov
test
push
mov
movsl
popf
std
jne
jo
ficompl
out
es
adc
int
aad
filds
aaa
inc
fsubrs
jp
fnstcw
lds
dec
adc
pop
sub
arpl
pop
ret
pop
xchg
fcmovnb
inc
lcall
xor
mov
ss
push
sbb
mov
aam
mov
adc
test
sahf
pop
cmp
xchg
sbb
add
iret
ja
shrl
scas
lea
sahf
inc
arpl
inc
pop
xchg
xor
jmp
int
mov
push
pop
mov
sahf
xorl
pop
fimuls
repz
movsl
cs
sub
dec
out
sbb
cld
pop
adc
push
mov
xorl
jbe
pop
inc
jle
jmp
insb
movsb
aad
dec
popf
testl
add
loop
fs
fiadds
mov
faddl
push
jle
bound
popf
pop
mov
push
xor
insb
push
mov
aad
int
shrb
std
in
aad
push
and
push
pop
hlt
mov
mov
jecxz
and
jl
cmp
hlt
in
push
fldl
cs
movsl
mov
scas
xchg
and
jne
sub
pop
outsl
pop
cmc
sbb
push
inc
out
out
test
mov
mov
pop
fldenv
setno
sbbl
mov
in
in
mov
les
dec
sbb
shll
or
call
push
mov
into
xchg
sub
push
loopne
xlat
inc
daa
mov
test
insl
call
imul
xchg
mov
scas
inc
mov
jl
test
push
pusha
aas
das
inc
fildll
sar
int3
sbb
xchg
push
mov
inc
in
cmpl
mov
fwait
dec
int
dec
popf
cs
inc
daa
dec
imul
clc
mov
fistpl
cmp
ss
ljmp
lret
fistl
pop
xchg
pop
xchg
nop
imul
mov
xchg
rcr
or
dec
mov
int
movsl
int3
mov
ja
loop
lcall
cmp
hlt
hlt
sub
js
das
jns
in
mov
xchg
and
mov
mov
xchg
loopne
dec
int
lods
popf
enter
pop
xchg
imul
cwtl
loope
and
or
ret
fstpl
fisttpll
sub
divb
lea
mov
mov
jmp
push
loope,pn
push
repz
daa
push
pop
cmc
pop
lahf
mov
and
and
sbb
adc
sub
shll
jmp
ja
jo
mov
or
inc
add
movsb
pop
inc
jecxz
jle
jbe
mov
push
xchg
mov
test
movsl
out
push
pusha
out
insb
les
mov
xor
jg
movsl
dec
xor
popf
mov
lods
loopne
push
xchg
addr16
pushf
pop
xor
stos
xchg
xchg
rclb
sbb
mov
stos
lcall
push
mov
dec
addr16
test
shll
loope
dec
lds
imul
pop
xchg
popa
sbb
dec
xchg
and
movsl
sub
lds
repz
adc
sub
loopne
adc
sahf
mov
sbb
aas
or
cs
fmuls
fsubrl
pop
lds
cmp
and
hlt
and
mov
shl
shrl
dec
fstpl
or
sbb
std
add
leave
fwait
pop
push
xor
add
lret
and
icebp
int3
sub
int
mov
push
jo
imul
add
imul
add
pop
inc
mov
pop
adc
leave
sub
fmuls
sbb
aam
mov
cltd
jne
xchg
and
lds
pushf
es
xchg
test
adc
mov
sub
cli
flds
cmpsb
push
test
out
jp
xchg
es
mov
push
rcr
jne
add
adc
sbb
lahf
sub
lds
aaa
lods
sub
push
repnz
sub
test
add
neg
dec
dec
xor
hlt
or
arpl
hlt
je
ja
lea
dec
out
out
aaa
fists
pop
sbbb
mov
or
ret
rol
mov
sti
popf
pop
cs
or
lret
fidivl
cmp
aaa
mov
jmp
ror
scas
sub
les
out
popf
aad
mov
mov
mov
jo
adc
mov
sub
fwait
jl
loopne
imul
pop
push
pop
mov
pushf
xchg
mov
jecxz
adc
xlat
pop
movsb
and
xchg
mov
sub
pop
arpl
mov
push
das
inc
aaa
rolb
xor
xchg
mov
sub
and
push
stc
sbb
fiaddl
arpl
dec
lds
jo,pn
adc
gs
lock
sub
into
leave
inc
push
lods
push
sbb
pop
jge
cltd
push
dec
ljmp
lods
mov
jmp
js
mov
movsl
inc
outsl
pop
rclb
dec
das
jo
lods
lods
mov
lds
push
inc
int3
jmp
sti
xchg
adc
mov
mov
pushf
ja
aam
repz
out
fwait
popf
add
mov
cmp
scas
stc
bound
lea
dec
sbb
pop
insb
mov
pop
arpl
sub
cmp
mov
daa
mov
xchg
mov
push
cs
mov
xor
lcall
mov
mov
inc
adcl
das
cmpsl
xchg
mov
ja
mov
leave
or
mov
sbb
test
outsl
movsl
mov
int
mov
inc
jae
icebp
subb
mov
fisttpll
std
stos
pop
faddl
aam
lret
mov
xchg
lock
rcrb
xchg
popa
sbb
cmp
mov
or
fadds
test
jne
jmp
or
int3
enter
les
mov
push
add
mov
insb
add
jne
mov
pop
add
inc
mov
fsubp
and
out
popf
or
sbb
mov
adc
insb
jns
insl
xchg
cwtl
mov
dec
popf
add
ljmp
inc
sbb
push
fwait
push
movsl
mov
push
ss
ss
push
cmp
add
add
pop
loop
push
in
cltd
mov
mov
mov
cwtl
ja
or
fildl
inc
mov
xor
xchg
enter
int3
push
add
sub
arpl
cmpsl
ret
shlb
es
adc
mov
outsb
cltd
lds
pop
test
xor
leave
adc
or
ret
xchg
xchg
cwtl
sbb
enter
bound
call
inc
sarb
fcmovnb
das
repnz
xor
xchg
movsb
mov
popf
lds
jnp
mov
xchg
sahf
or
mov
shlb
in
dec
add
aas
iret
sub
mov
scas
inc
and
add
mov
ljmp
xchg
mov
sbbl
or
cwtl
bound
mov
int3
jb
sbb
jge
repz
rclb
jecxz
sbb
lds
jae
cmp
jecxz
movsl
loope
inc
xor
mov
xor
mov
pop
es
sbb
out
push
xlat
subb
xor
sbb
sarl
xor
mov
fdivr
nop
lock
call
lds
cmp
ja
mov
mov
nop
sub
pop
xor
cld
mov
mov
fidivrl
imul
pusha
fdivrs
ja
add
cmc
pushf
cmp
add
popf
push
jne
pop
in
push
jbe
xor
pop
loope
pop
mov
shr
jnp
les
fmull
cmp
push
popa
jmp
sahf
les
dec
xor
push
inc
fmul
pop
push
shlb
xor
adc
add
push
and
push
out
mov
lret
loope
and
iret
cmp
jge
push
pushf
sub
test
xor
aas
mov
faddl
mov
sbbl
rcrb
xor
cltd
lods
sar
test
out
orb
fmul
insb
and
fdivs
shrl
fsubl
sbb
sbb
in
cmp
pop
jns
into
inc
cltd
lahf
inc
lock
movsb
add
xor
cmpsl
jno
pop
hlt
sub
or
add
fiaddl
mov
push
test
pop
xbegin
push
sub
jl
stos
mov
xor
dec
cmp
sbb
fistpl
movsl
fwait
cmp
push
dec
cmp
push
insb
jecxz
ljmp
xorb
cmp
push
inc
ret
push
insb
out
or
cld
xchg
mov
mov
sti
mov
aas
clc
aas
dec
enter
int
jl
pushf
je
adc
vdivsd
pop
imul
movsl
aad
adc
mov
mov
ja
xlat
add
je
mov
push
cmpsl
fs
jns
cmp
xchg
int
jmp
lds
aam
push
xor
out
rep
adc
test
dec
mov
pop
imul
fnstcw
stos
mov
outsl
fs
jnp
push
mov
cmp
arpl
movsl
fdivl
jg
inc
jo
repz
mov
xor
mov
mov
dec
mov
jo
pop
iret
subb
mov
or
jns
nop
aam
clc
daa
ret
arpl
test
leave
push
lds
lods
or
fcompl
jp
pushf
loop
repz
cmp
sub
lds
add
pop
jle
divl
mov
jae
pop
ja
dec
add
lea
mov
xchg
add
je
add
lea
into
dec
pushl
shlb
xor
mov
ja
mov
out
scas
out
push
inc
xchg
jle
dec
sti
fnstcw
xchg
jns
xchg
in
imul
lds
mov
popf
lahf
lret
loopne
push
sti
add
jmp
xchg
push
push
sub
js
pop
ss
ret
xlat
cmpsl
lret
leave
cmp
push
in
ljmp
outsl
std
adc
clc
cmc
jns
stc
popa
xor
adc
outsb
sbb
or
and
cmpsl
cmp
or
push
sbb
add
xchg
mov
jmp
xor
rorl
les
hlt
movsl
mov
pop
roll
jg
pushf
mov
scas
jle
nop
loope
xor
vpsubsw
cli
xor
nop
mov
xlat
add
stc
cmp
shlb
jp
xor
daa
lcall
pop
sub
jo
mov
sbb
add
or
lock
fsub
dec
dec
cwtl
js
push
nop
cmpsl
adc
mov
ret
mov
mov
xchg
test
push
pushf
mov
popf
fwait
pop
sub
rolb
adc
aad
mov
add
inc
push
lret
in
outsl
leave
mov
mov
pop
notb
sub
inc
add
ja
sub
mov
cltd
xor
hlt
and
rorb
into
adc
xchg
and
int
jno
sbb
cmp
xor
push
inc
scas
jb
push
rorb
jne
popf
repz
pop
push
xor
push
iret
jge
mov
add
movsl
xor
mov
or
negb
into
cs
pop
in
in
jecxz
imul
dec
pop
sbb
add
jle
cmp
test
mov
push
mov
cmpsb
cmp
stos
dec
arpl
mov
push
cs
mov
jne
lahf
and
cmp
fstpl
adc
pop
lea
out
adc
cmpsl
aas
dec
in
outsl
or
jnp
push
mov
adc
jne
push
add
adc
cmpsb
xorb
jnp
push
sub
push
mov
pushf
das
mov
jae
sbb
jmp
cmpsl
cmpsb
jae
and
xchg
mov
adc
push
sbb
jne
push
cltd
pop
scas
cwtl
or
fcmovnbe
jnp
sbb
cltd
jae
dec
cwtl
jns
stos
cwtl
pop
jmp
cmp
xchg
inc
scas
pop
jae
push
sbb
xchg
xor
dec
push
mov
cli
js
fsub
orps
lods
pop
hlt
imul
cmpsl
jns
roll
dec
outsb
xor
cltd
lcall
in
in
cmp
mov
loopne
jb
shll
lods
sub
dec
dec
out
push
sbb
and
outsb
xchg
lods
out
scas
fwait
out
iret
sub
cs
rcrb
test
repz
lds
jmp
adc
leave
mov
add
leave
lcall
add
pusha
ret
ja
into
cltd
add
inc
mov
push
jno
pop
mov
jns
lock
into
jo
cmp
sub
sti
outsb
cmpsl
cwtl
sub
xchg
push
sub
sbb
mov
in
mov
push
sub
imul
cwtl
out
sub
out
mov
push
cld
sbb
pop
das
jecxz
mov
fildl
adc
cmp
call
mov
scas
xchg
cwtl
adc
push
cmp
cmp
xchg
pop
loopne
hlt
es
mov
sub
pop
dec
loop
xchg
push
fisttps
push
or
scas
add
add
jns
pushf
andl
cmp
cmp
inc
pop
sbb
jg
sbb
in
jmp
lea
pop
mov
sbb
andl
sbb
push
sarl
in
sbb
cmp
adc
pop
mov
aas
aad
movsl
dec
jle
or
adc
leave
ss
pop
movsl
dec
es
inc
addb
jnp
lret
jns
push
call
sbb
pop
or
mov
inc
scas
push
int
movsl
xor
ret
jp
in
stos
cmp
add
shlb
call
outsl
testb
cmp
into
lret
cmp
push
dec
push
mov
leave
aam
dec
dec
xor
fiaddl
cmp
stos
movsl
scas
jle
call
xlat
pop
xor
mov
cmp
dec
mulb
ds
adc
push
mov
test
cli
scas
pop
mov
sbb
adc
popf
into
dec
mov
int3
push
jnp
insl
fucomi
sub
xchg
sti
int3
xor
and
push
hlt
mov
cli
aad
xlat
pop
imul
inc
sbbl
inc
add
inc
ret
ficoms
sub
sub
frstor
xchg
sub
leave
aad
hlt
cmp
es
mov
icebp
js
sysret
sbb
adc
mov
movsl
outsb
adcb
add
sahf
sbb
movzwl
jns
addr16
lret
mov
jns
inc
ljmp
cld
mov
lds
dec
fisttpll
call
sub
pop
les
repnz
mov
cmpsb
inc
movsb
lret
rcrb
andb
pop
int
push
loop
imul
adc
mov
sbb
jns
pop
sarb
in
and
mov
push
push
in
rcll
mov
movsb
test
scas
add
dec
cmp
out
aaa
insl
sub
mov
jge
ja
arpl
mov
inc
cli
cmp
jecxz
mov
repz
lahf
loope
xor
cltd
mov
ljmp
mov
cmpsb
cli
lret
iret
add
cli
jb
adc
jp
add
sarl
or
mov
roll
bound
push
add
jmp
jmp
mov
xchg
shlb
lcall
cmp
cmp
sub
out
push
popf
dec
arpl
jg
mov
jle
adc
movsl
inc
pushf
js
cmc
enter
cmp
pushf
push
jne
inc
cmpsb
mov
add
or
scas
std
xchg
mov
ljmp
jl
adcb
add
mov
imul
jne
push
mov
cmp
scas
sarl
repz
addb
fadd
in
movsl
xor
lea
lods
mov
shr
add
adc
loopne
outsl
dec
dec
outsb
mov
mov
jmp
adc
arpl
sbbl
ja
inc
loop
cmp
shr
add
and
jle
negb
pop
stc
data16
test
cli
outsb
push
stc
ret
and
jge
cs
mov
insb
push
lods
cmp
jg
xor
push
inc
insb
imul
pusha
adc
and
andb
sub
adc
pop
xchg
xchg
fsubrp
fldl
dec
lods
dec
cltd
jp
mov
in
outsb
pop
jnp
ss
xchg
scas
mov
lahf
pop
pop
pop
test
xor
dec
loopne
daa
fisubrl
mov
mov
outsb
lds
mov
jl
mov
fidivl
xorl
aas
cmc
push
adc
mov
or
mov
cmp
lcall
fs
adc
adc
lds
in
mov
add
daa
cwtl
adc
lock
jl
mov
int
fs
xlat
cmpsb
jge
mov
sti
or
in
xor
pop
out
add
aam
add
aas
and
sbb
cwtl
subl
add
push
sbb
stos
or
fcompl
dec
push
cmp
test
lods
pop
loop
test
jae
aam
mov
sbb
adc
cmp
nop
dec
cmp
inc
push
bound
loopne
push
aas
cs
or
hlt
ret
stos
mulb
call
int
pop
sahf
sahf
ja
and
in
cmp
fnstenv
repz
sub
jne
fcom
dec
je
lods
add
arpl
lahf
xchg
mov
xor
int
ljmp
cmp
xlat
jl
orb
xor
jbe
mov
inc
inc
fst
ja
in
push
movb
add
stos
xor
repz
fnstsw
push
cmc
aad
idivl
hlt
inc
ds
imul
adc
inc
loopne
xchg
xchg
or
std
cli
mov
xchg
sbb
pop
push
mov
xchg
mov
push
out
lret
aas
or
jmp
shrl
movsl
insl
pushf
lods
pop
shl
lds
adc
or
xorl
pop
inc
movsb
xchg
cltd
fldl
pop
int3
pop
mov
push
imul
lret
std
and
outsb
iret
mov
popf
lea
jmp
push
lds
sbb
jnp
push
divb
jecxz
out
push
loopne,pt
data16
daa
aad
sbb
sub
imul
test
pop
dec
cli
push
cwtl
sub
xlat
mov
dec
fldcw
loopne
adc
sub
jnp
pop
dec
xchg
mov
mov
cld
dec
mov
jmp
pusha
push
aam
ss
inc
in
add
lret
out
arpl
insl
movsl
jp
dec
push
inc
loopne
sbb
sbb
sbb
mov
lea
jnp
mov
jmp
jmp
xchg
and
lea
fnsave
pop
roll
pop
pop
lea
push
add
adc
ret
pop
pop
cmp
ja
int
push
rclb
lods
jmp
ror
int3
das
sahf
lds
lods
xchg
xor
inc
dec
sub
cltd
test
cmp
mov
out
insl
movsl
adc
test
pop
mov
or
xchg
jg
inc
rol
mov
cmpsl
cmp
inc
jnp
rcll
pop
mov
test
mov
mov
push
adc
frstor
test
out
push
adc
push
mov
test
bound
xor
dec
cwtl
xchg
cmp
jmp
mov
jno
cmp
mov
imul
je
test
sub
jge
enter
mov
ficompl
loope
sub
iret
sub
pop
shr
ja
fistpll
push
mov
pop
inc
xchg
or
fdivrl
mov
pop
outsb
lds
data16
insl
scas
enter
xchg
addr16
les
aad
or
jne
pop
mov
imul
lds
push
lods
jae
lods
and
aam
clc
push
inc
das
mov
shrb
pop
cli
popf
into
add
pop
movsl
pushf
or
push
in
inc
xchg
push
enter
mov
outsb
daa
pop
or
add
sub
adc
cmp
pop
lds
das
rcrb
mov
les
jns
es
xchg
scas
loopne
sbb
mov
lods
nop
repz
mov
mov
xchg
add
rcll
cld
daa
outsb
cltd
outsl
push
cwtl
or
js
cmp
cld
cld
rcll
mov
inc
add
lods
pop
add
mov
inc
or
nop
xchg
mov
bound
repnz
or
lock
aas
shlb
mov
mov
imulb
cmp
adc
jg
ds
int
push
pop
mov
stos
adc
ret
inc
inc
sbb
insb
mov
pop
cwtl
rorb
orl
pop
push
cmp
push
pop
and
jnp
mov
and
lods
popl
nop
push
sub
cmpsl
mov
pop
jmp
std
ss
sub
add
test
jno
xchg
adc
add
dec
sbb
xchg
les
scas
sbb
mov
mov
sub
rcr
es
dec
jle
stos
lret
sbb
cltd
push
jecxz
scas
jb
test
je
dec
xchg
xor
lods
adc
pop
std
mov
cmp
fisttpll
add
lret
or
inc
fcompl
add
add
mov
inc
sti
bound
xchg
inc
add
bound
aam
imul
sbb
push
les
and
movsb
cwtl
push
lock
int
fiaddl
test
lds
push
push
push
stos
cmp
dec
or
jl
es
aad
cmc
and
js
lds
fucomip
ja
test
cmp
pop
lret
movsl
and
jg
outsl
sub
ja
mov
dec
std
sub
cmp
jge
or
out
pop
add
clc
in
int3
bound
mov
addl
sub
ljmp
into
data16
mov
hlt
jne
in
push
jno
arpl
es
inc
loop
mov
lods
mov
jnp
inc
jo
addb
fidivl
sbb
ljmp
mov
push
pop
xchg
mov
cwtl
jae
add
or
and
subb
cltd
push
repz
add
inc
add
or
loop
sub
mov
dec
lds
mov
xor
adc
add
icebp
hlt
test
mov
rcrb
mov
scas
mov
insb
fnstenv
mov
jl
inc
or
adc
mov
xor
jno
mov
aas
cmpsl
dec
in
mov
in
push
std
aas
ss
test
addr16
fcompl
aad
int
scas
cmp
sbb
lea
in
add
push
add
adc
clc
or
adc
cmp
test
ficoml
push
stos
or
outsl
movsl
mov
imul
lret
orl
jnp
push
xchg
in
hlt
add
inc
data16
mov
std
lret
inc
push
sub
aas
inc
mov
adc
add
push
mov
mov
mov
lds
sbb
sub
mov
add
int3
loope
sub
dec
iret
stc
mov
sbb
dec
inc
sub
test
popa
sub
leave
add
imulb
sub
jmp
pop
repz
or
cmc
lcall
push
daa
xlat
push
test
hlt
mov
or
push
add
das
enter
lret
cltd
add
sbb
jmp
and
ss
das
push
cmp
jmp
cmp
mov
hlt
and
mulb
mov
scas
and
cltd
mov
into
dec
les
imul
or
sbb
xchg
pushf
jge
scas
popa
add
push
lret
ds
sarb
ficoml
add
inc
movsl
dec
ja
pop
mov
data16
movsl
fsubrl
dec
pop
insl
add
out
lahf
ret
xchg
popf
cmp
jg
pop
cli
stos
pop
jg
xchg
adc
adc
mov
loopne
scas
adc
add
popf
pop
cs
jno
sbb
imul
ja
pop
xchg
lods
xor
xor
sti
add
sbb
aaa
notb
rorl
jmp
iret
xchg
mov
xor
jbe
arpl
ret
mov
add
inc
movsb
shrl
xchg
ljmp
fucomp
add
test
xor
mov
xchg
hlt
cli
add
add
cmp
jle
pop
inc
sbb
jbe
lds
movb
jne
push
scas
mov
addr16
and
push
cmp
cmp
dec
addl
hlt
mov
sbb
std
lods
jae
pop
outsb
jg
jns
popf
cli
add
ja
roll
fstpl
pop
daa
xor
sub
fldt
nop
lea
inc
mov
jecxz
pop
add
inc
addl
mov
call
lcall
adc
je
cmc
jmp
movsl
mov
push
inc
pop
add
cmc
mov
push
sub
jns
jmp
mov
sub
movsl
repz
test
addr16
cwtl
inc
sbb
pop
loope
shlb
xchg
or
fisttpll
pop
test
rolb
ficoms
sbbl
and
and
fldlg2
fiaddl
data16
rcrb
xor
push
insl
mov
xchg
push
mov
jl
push
add
pusha
cmp
cmp
shlb
dec
nop
pop
jbe
sbb
lret
gs
dec
or
and
popf
lods
int3
mov
ja
sub
pop
mov
sbb
lcall
and
dec
in
pop
lds
xlat
fdiv
jns
loop
scas
adc
cwtl
inc
inc
adc
cmp
jns
das
sbb
push
in
dec
dec
inc
sbb
sub
test
push
mull
add
aad
popf
ljmp
aam
mov
cmp
inc
cmpsb
push
xchg
std
xor
push
das
jge
mov
cwtl
fldl
pushl
add
mov
cmpl
cmp
scas
fldcw
in
daa
std
shll
out
add
mov
push
lods
push
in
pop
push
lcall
ret
push
fwait
sub
cmc
jnp
in
mov
mov
jl
repz
adc
add
movsb
mov
pop
mov
or
mov
rcr
mov
iret
inc
scas
icebp
fnstcw
pop
movsl
and
mov
inc
in
inc
mov
cmp
lea
scas
insb
dec
mov
or
add
jmp
ja
pushw
mov
push
push
cmp
out
sbb
addl
iret
or
and
fmull
inc
lds
pop
jmp
mov
fucomp
inc
inc
cmpsb
jne
dec
jge
cld
inc
neg
sbb
adc
hlt
rclb
nop
pop
xchg
inc
cmp
xor
stos
iret
adc
mov
add
mov
dec
stos
into
mov
mov
cs
fisttps
xor
movl
int3
mov
mov
xchg
jl
add
lods
inc
push
lods
clc
daa
mov
sarb
sub
stos
movsl
mov
push
add
stos
into
stos
add
jnp
hlt
lds
cmp
arpl
iret
push
fildll
outsb
dec
jo
jp
mov
pop
adc
xchg
lods
pop
ds
mov
or
dec
movsl
gs
iret
mov
sbb
movsl
mov
ds
add
in
adc
or
lahf
add
sti
dec
not
outsb
add
ror
ja
daa
adc
shll
adc
ret
push
lahf
shrb
xlat
push
cli
movsl
push
in
shl
cmp
cmp
movsl
jecxz
fwait
jno
mov
pop
xchg
cwtl
inc
fxtract
inc
and
xchg
inc
int
in
add
jge
xor
into
jl
aas
repnz
lret
xor
or
fmul
inc
sub
loop
lea
imul
jnp
push
xchg
dec
call
insl
adc
mov
outsb
push
adc
in
add
pop
mov
inc
rcl
btc
mov
in
fsubrl
and
pop
mov
lcall
jge
mov
in
rcrb
les
add
addl
dec
mov
mov
xchg
jecxz
dec
push
sub
xchg
int3
lret
pop
test
xchg
sbb
dec
cli
sub
mov
or
and
mov
mov
pop
xchg
shlb
scas
add
stos
inc
mov
jns
roll
jmp
adcl
dec
cmp
push
nop
push
and
lds
fwait
in
leave
mov
cmpsb
inc
xchg
jb
mov
jne
cmp
add
mov
mov
xor
xor
enter
dec
in
xlat
jno
insl
cld
faddl
push
les
test
in
push
mov
push
jns
mov
jno
sbb
in
mov
mov
xchg
mov
shlb
cmp
shr
dec
daa
in
push
cli
pop
fwait
jno
pusha
mov
mov
dec
enter
xchg
lds
movsl
sti
push
fs
push
push
idivl
int3
mov
add
cmp
pop
mov
jg
into
xor
mov
pop
jae
adc
sahf
movsl
jo
push
push
orl
add
loop
sbb
int3
call
or
pop
test
push
xlat
and
and
testb
mov
jg
mov
jg
add
pushf
jle
adc
mov
ds
mov
outsl
dec
jge
pushf
test
jno
cmp
pop
bound
sub
mov
test
lds
pop
enter
add
mov
or
mov
pop
cltd
mov
push
push
sbb
adc
xchg
add
push
mov
pop
xchg
in
test
in
mov
xchg
in
insb
and
ret
xchg
inc
jmp
inc
jae
vmread
sub
fcmovnu
xor
test
sbbb
out
or
sbb
popf
cltd
ds
cmovge
push
dec
icebp
mov
pop
cmovno
pop
xlat
mov
mov
std
nop
jg
adc
adc
adc
cmp
mov
xlat
movsl
je
cmp
leave
clc
mov
popl
xchg
mov
jne
mov
push
sti
fisttpl
mov
addr16
and
adc
daa
jo
cmp
adc
sti
mov
shlb
adc
xor
sbb
add
sbb
fadds
rorb
lds
mov
enter
popf
fmuls
push
lods
lds
push
cmp
mov
jl
imul
movsb
notb
sub
jmp
mov
jne,pt
lods
pop
es
pop
adc
outsb
sub
daa
mov
jle
daa
or
pop
adc
add
hlt
jp
xlat
mov
push
jne
mov
sahf
cmc
dec
push
xchg
xchg
xchg
jmp
lds
mov
inc
and
push
or
aaa
test
jg
push
imul
sub
mov
add
movsl
pop
inc
adc
lcall
xor
mov
rorl
mov
jns
or
int
jnp
addr16
and
mov
xor
pop
xchg
push
in
mov
jo
inc
adc
push
or
mov
ljmp
and
mov
jmp
pop
mov
int
jge
jmp
mov
sub
dec
int3
push
push
sub
rolb
lret
loopne
das
mov
push
gs
std
mov
aad
inc
mov
pop
int3
push
scas
bound
lret
insb
mov
push
das
in
scas
lahf
in
fwait
xor
mov
leave
add
xor
cltd
je
xchg
add
nop
data16
sbb
pop
int
cmp
mov
das
sub
mov
xchg
pop
cmc
sub
repnz
sbb
pop
insl
into
push
xorl
mov
sub
add
and
inc
ja
jl
cmp
sbb
ret
pop
adc
icebp
aaa
lret
fs
sbb
daa
popf
insl
pop
cltd
shrl
push
sub
scas
cld
xor
int
lds
push
out
popa
add
out
ffree
jae
push
roll
mov
and
or
ffree
xchg
sbb
lds
xor
fistl
enter
pop
fnsave
inc
rorb
ret
jle
loopne
mov
jne
daa
inc
int
scas
xor
inc
pop
stos
movsl
shll
out
fildll
push
inc
cmpsl
adc
jmp
outsl
lock
ss
les
pop
and
inc
mov
pop
mov
inc
ljmp
mov
add
xchg
cwtl
push
xor
xchg
pop
cltd
xor
and
mov
clc
movsb
clc
pop
add
out
mov
fcomps
mov
jne
int
push
xor
inc
push
or
add
rcrb
mov
out
mov
add
jle
push
fsubp
subl
dec
mov
mov
les
lods
pop
popl
outsb
imul
es
push
outsb
lods
and
lods
jecxz
test
or
xchg
pop
lahf
inc
jne
roll
repnz
fdivl
adc
jmp
pushaw
xlat
lds
int
inc
fildl
xchg
and
lea
inc
outsb
lods
inc
mov
push
mov
ja
dec
shrl
sub
xchg
out
ret
aam
push
scas
lds
das
jne
test
sbb
mov
and
hlt
idiv
cmp
pop
shl
sub
cmp
in
adc
cmp
jns
push
jp
lds
loopne
pop
dec
cmp
je
dec
lret
pop
push
mov
div
mov
movsl
sub
js
into
mov
ficomps
add
mov
jecxz
pop
add
daa
or
push
call
xchg
and
in
int
scas
gs
jo
mov
out
mov
and
inc
inc
pop
icebp
cld
push
inc
mov
ret
dec
int3
stos
sti
mov
or
inc
adc
pusha
insb
xchg
add
push
cmpsl
jp
popa
pop
xlat
adc
test
lret
pop
jb
or
jg
sub
movsb
scas
leave
aas
jne
xchg
ljmp
xchg
inc
sbb
repnz
adc
inc
out
fsubrs
mov
das
cmp
ja
mov
in
mov
rcr
in
and
cltd
push
scas
repnz
bound
dec
imul
dec
and
sub
rcr
cmp
out
mov
cmp
into
push
mov
jg
int
imul
rorl
and
hlt
mov
xchg
outsb
dec
divl
dec
pop
int
jnp
dec
cmp
leave
xchg
das
imul
mov
pop
mov
test
inc
push
adc
fisubl
add
mov
mov
dec
sub
roll
mov
mov
incb
stc
out
fiaddl
insb
sbbl
adc
fwait
movsl
inc
xchg
mov
xor
sub
repz
lret
vmovaps
push
push
bound
sarb
push
cmp
fdivrl
test
dec
imul
or
lea
vandnps
xchg
subl
push
lret
fldl
sbb
ret
xchg
fisubrs
mov
cmp
outsl
test
iret
adc
stc
add
loope
adc
pop
xchg
movsl
jo
or
push
mov
adc
sbb
xchg
sbb
movsl
pusha
imul
or
jo
xor
sahf
mov
addr16
lods
fsubs
scas
jno
or
pop
dec
or
add
add
xor
movsl
ret
lds
loope
test
xchg
sbb
mov
out
andl
int3
mov
fdivrl
int
dec
bnd
fdivp
jae
dec
dec
call
mov
cwtl
cmp
jmp
out
enter
adc
and
xrelease
xchg
push
jo
push
dec
stos
fwait
outsl
enter
js
sub
popl
or
jns
pop
cltd
pop
xor
adc
test
loop
loope
fdivl
cmpl
xlat
popf
inc
ja
dec
aad
inc
scas
or
sbb
sbb
cmp
inc
fadds
out
xchg
mov
pop
mov
aad
ss
sbb
cmpsb
sub
inc
std
sub
test
scas
jmp
push
aam
mov
mov
xchg
daa
xchg
inc
inc
jle
fnsave
xor
ret
cmpsl
test
xor
push
imul
sbb
jmp
test
out
lds
aaa
sub
ja
pop
in
fs
or
test
xchg
mov
xchg
pop
arpl
je
aam
sbb
xchg
xor
lods
imul
aad
mov
sbb
in
imul
xchg
inc
jecxz
movsb
pushf
scas
mov
test
xchg
lahf
aad
mov
clc
ret
aas
push
aas
dec
pop
fcomp
add
paddq
mov
jns
pop
adc
stos
movl
sub
mov
negl
fidivl
inc
mov
jnp
jp
and
clc
pop
aam
out
jmp
jne
cltd
and
jle
pop
jae
or
xchg
cltd
mov
pop
stos
push
push
inc
pushf
mov
lds
xlat
add
mov
stos
push
pop
pop
or
aas
ret
mov
xor
xchg
sbb
mulb
sti
adc
outsl
mov
jne
sar
mov
lcall
pop
outsl
dec
in
or
sbb
inc
bound
aas
adcl
clc
sbb
hlt
sub
fs
mov
jne
in
loopne
data16
lea
mov
scas
les
push
xor
outsb
and
jbe
push
or
jg
and
testb
iret
daa
test
test
subl
scas
mov
mov
in
scas
lretw
ja
fsubrl
xor
leave
rcrl
mov
mov
fwait
sbb
loopne
mov
in
jne
fiadds
push
inc
fbld
sbb
lds
and
push
jo
lds
cld
mov
jl
push
es
or
ret
movsl
enter
int
xchg
icebp
jne
clc
arpl
cmp
cltd
iret
sub
aas
mov
aaa
leave
int3
dec
lret
mov
or
pop
adc
push
es
add
inc
mov
adc
adc
xchg
mov
cmp
xchg
pusha
mov
jp
mov
in
xor
push
push
jecxz
sub
push
fidivl
fptan
push
fcomps
push
lcall
cmc
inc
lahf
mov
xchg
or
gs
into
xor
mov
or
sub
mov
pop
add
icebp
mov
mov
mov
ret
pop
mov
outsb
imul
icebp
or
stos
xchg
push
scas
outsl
daa
dec
addl
cmp
rol
or
cmp
mov
and
jl
in
lds
mov
fcoms
mov
xchg
std
cmp
bound
push
wrmsr
mov
outsb
xor
add
nop
neg
xor
sub
push
jne
xor
in
loope
lds
loopne
insb
push
stc
and
cs
jg
push
lcall
sbb
shrb
dec
sub
stos
or
fisttps
jl
or
cmpsb
shrb
push
or
lcall
push
test
push
outsb
push
sbb
jne
sbb
push
std
call
cmp
repz
insb
test
adc
fidivrl
cmc
or
test
adc
pushf
adc
or
ljmp
xchg
loop
dec
inc
test
push
add
ljmp
add
pop
push
adc
add
mov
ret
and
mov
int
sub
cmpsl
dec
jmp
loop
andl
mov
xchg
arpl
mov
mov
jle
inc
scas
mov
mov
jmp
lret
inc
xchg
rol
jmp
roll
dec
inc
jb
pop
shrl
movsb
mov
shll
lea
in
cs
mov
xchg
dec
popa
push
loop
mov
sbb
hlt
xorl
add
fisttpll
into
pop
movsb
mov
pop
ror
sbb
movsl
bound
mov
aaa
sbb
add
out
aas
or
shrl
je
xchg
daa
inc
popa
sarl
repz
aaa
imul
jge
int
jnp
lahf
jle
inc
test
lahf
sti
cmp
insl
out
pop
inc
dec
fwait
outsb
out
cmp
cmc
aad
ret
pushf
sahf
push
adc
enter
or
inc
popa
pop
and
or
out
aaa
and
jns
jecxz
lods
sar
mov
or
out
dec
ljmp
push
scas
sub
in
lds
mov
cmp
pushf
push
scas
nop
sub
jns
leave
imul
sahf
mov
add
xor
das
push
or
mov
fisubs
or
sub
call
mov
push
vmovntps
or
shrl
pop
outsl
in
lret
incl
daa
mov
arpl
rcl
jb
lods
in
mov
mov
mov
cmp
adc
pop
movsl
scas
cmp
xor
adc
push
lret
mov
ret
lds
jne
je
dec
sbb
mov
sbb
outsl
call
push
shlb
imul
lds
clc
or
data16
pop
hlt
div
insb
scas
lds
jg
loopne
mov
aaa
aas
jmp
xor
leave
xor
cmp
gs
sbb
adc
mov
in
xchg
jnp
mov
pop
jae
lods
adc
adc
sti
add
outsl
dec
jne
daa
pushf
mov
jl
pop
jne
mov
mov
jne
ja
dec
ja
inc
je
adc
inc
imul
inc
mov
fisttpl
mov
fwait
lods
jmp
xchg
push
add
mov
sbb
jne
xchg
jb
cwtl
clc
xchg
inc
and
fisttps
fnsave
mov
push
popf
ljmp
mov
mov
xor
stc
scas
bnd
inc
lret
and
sbb
jecxz
std
xchg
mov
pop
jge
cmpb
sbb
inc
movsl
mov
mov
sub
int3
xor
lds
in
nop
sbb
mov
mov
stos
sar
or
push
and
dec
mov
xor
ja
bound
mov
xchg
sahf
roll
jmp
adc
and
icebp
call
adc
mov
lahf
sbb
inc
mov
lds
lods
popf
or
in
scas
loopne
add
mov
jb
or
ret
stos
push
sub
fdiv
int
sbb
movsb
mov
cmp
push
test
sub
outsl
add
sahf
je
dec
cwtl
mov
daa
mov
and
clc
dec
jne
test
xorl
lds
cmpsl
in
xchg
ficoml
and
call
cmp
mov
xchg
add
lds
pop
lods
push
jl
push
daa
sbb
inc
insb
xchg
sub
xchg
int3
test
push
sbb
jae
leave
dec
inc
inc
adc
cs
daa
cmpsl
xlat
add
mov
xchg
in
push
bound
std
in
aaa
fiaddl
ret
lds
clc
or
into
mov
mov
in
outsl
mov
mov
jnp
jge
ds
cmpsl
sbb
lret
sbb
out
mov
push
je
repnz
push
mov
lds
aam
movsl
inc
mov
xchg
cli
inc
inc
movq
jne
push
scas
loope
icebp
jmp
or
lds
add
push
mov
or
imul
adc
shlb
mov
and
call
inc
pop
dec
jns
icebp
test
dec
or
fcom
sub
mov
dec
pop
xchg
outsl
cs
dec
sub
pop
jns
adc
push
dec
or
scas
pop
pop
loop
enter
leave
or
clc
stos
clc
leave
xor
push
or
adc
js
cs
adc
mov
adc
jmp
add
mov
push
xor
daa
in
cmp
jmp
int
imul
dec
imul
cwtl
adc
rclb
fwait
popf
jno
mov
push
in
push
test
sub
imul
jl
add
push
mov
fstl
mov
in
cwtl
lret
mov
mov
push
nop
mov
lds
push
inc
jne
pop
mov
or
pop
inc
mov
sub
mov
lods
inc
in
dec
imul
lods
mov
rol
adc
push
push
lds
sub
in
push
aas
outsb
dec
sbb
pop
imulb
mov
negl
mov
sahf
inc
sbb
mov
add
mov
pop
and
lods
data16
and
or
psubusb
mov
sbb
out
scas
add
ja
and
and
xchg
pop
jns
lea
mov
rcll
sub
scas
dec
movsb
mov
rol
or
jmp
mov
rorl
ja
sbb
enter
in
adc
popa
adc
vpsubsb
adc
or
adc
cmp
ss
loope
xchg
jae
xor
pop
xor
push
jns
mov
xor
xor
pop
or
inc
loopne
stos
scas
lods
or
jg
xchg
mov
inc
cltd
fadds
mov
pop
mov
jno
int
push
cmc
data16
aam
je
mov
adc
sbb
push
mov
movsl
in
adc
outsl
int
jle
psllw
adc
test
xor
sbb
jg
scas
add
push
xchg
gs
pop
shlb
or
cmp
shll
fst
into
std
mov
adc
sub
push
js
mul
mov
mov
dec
mov
add
fwait
dec
mov
xadd
loope
xor
mov
cli
xor
or
std
call
lods
cmp
jg
pop
jns
jno
mov
fwait
out
sahf
cmp
imul
or
push
add
xor
jno
int
xlat
sbb
dec
adc
insb
stc
mov
fwait
mov
out
sub
scas
dec
add
xchg
movhps
mov
jns
std
mov
xorl
sbb
cmp
cmp
adc
decb
jmp
mov
lock
mov
mov
cmpb
scas
add
sbb
je
mov
jecxz
inc
mov
bnd
jl
add
mov
sub
nop
scas
pushf
dec
sahf
hlt
outsb
in
insb
add
sarb
sbb
xchg
jecxz
std
dec
mov
shll
addr16
scas
sbb
sarb
pop
ret
lds
cmpsl
inc
cld
sahf
or
mov
dec
pop
sub
outsl
pop
xchg
inc
sahf
mov
push
push
sub
ret
test
repz
push
je
cmp
out
cmp
sbb
dec
daa
fwait
add
fstl
dec
adc
mov
pop
cld
pop
or
fwait
fwait
insl
imul
shll
mov
stos
add
rorb
loop
and
xor
mov
mov
push
ret
movsl
imul
hlt
stos
std
rorl
dec
mov
jnp
in
pop
ret
xchg
fdivl
daa
fsts
push
push
inc
lods
mov
add
jge
pop
idivb
sbb
imul
adc
push
add
ja
jl
mov
jg
mov
std
shll
sbb
aaa
xor
sbb
jmp
movsl
and
or
dec
pop
test
addl
sub
leave
xchg
lods
xor
les
movsl
call
sbb
pusha
jp
sub
les
cmpsl
out
outsb
pop
mov
mov
mov
sarl
adc
jb
cmc
xchg
add
data16
fadd
lahf
jnp
dec
daa
mov
and
stc
and
mov
int
jb
subl
out
fcomp
shl
idivb
popa
sub
xchg
jmp
pop
cmpsl
test
inc
lret
enter
mov
sub
xchg
push
mov
addr16
adc
jbe
testb
lret
imul
jmp
movsl
pop
xchg
imul
ffree
in
push
stc
mov
lahf
dec
jecxz
add
sub
add
ret
sub
cmp
mov
push
mov
xchg
sub
mov
out
out
add
cld
mov
jl
in
add
sub
jmp
hlt
and
mov
mov
pop
roll
out
push
xor
das
inc
dec
ss
ret
push
mov
pop
je
pusha
inc
mov
lahf
add
repz
movsb
xchg
push
lds
mov
mov
mov
lods
imull
das
sub
push
aas
pop
lea
test
stc
sbb
push
sahf
jo
clc
mov
dec
ja
jnp
das
jecxz
dec
lds
cmp
jge
repz
std
dec
jbe
jl
scas
in
fadds
cmp
aam
inc
mov
inc
cmp
sub
rcrb
inc
cs
or
cmp
iret
xor
movsl
lahf
sub
add
fimull
adc
xlat
sbb
repz
xchg
push
cmc
mov
lds
pop
xchg
and
testb
mov
mov
push
and
and
aas
bt
cmpsl
pop
push
xchg
cmpb
frstor
lret
pop
lods
and
push
or
jns
sub
pop
daa
xor
idiv
pushf
mov
mov
pop
lea
testb
xor
cmp
fadd
ja
in
add
fildl
mov
push
push
mov
cltd
lea
push
es
add
dec
dec
xchg
pop
sti
adc
sbb
jmp
mov
dec
add
cli
aad
cmp
outsl
int
pop
add
repz
hlt
pop
xchg
sbb
lds
pop
sti
adc
stc
mov
aaa
lods
or
ds
adc
sbb
into
jmp
incb
mov
add
add
push
pop
mov
mov
out
divb
fildl
mov
jns
xor
aas
call
dec
pusha
jns
scas
cmpsl
test
in
clc
adc
push
stc
and
mov
test
ds
inc
jecxz
pop
insl
pop
test
sub
pop
xlat
inc
shrb
jbe
and
cmp
shr
nop
mov
clc
cli
cltd
or
pop
pop
push
inc
adc
nop
cmpsb
loopne
outsb
hlt
mov
mov
mov
sarb
push
cmp
jecxz
pop
pop
xor
scas
xchg
xchg
pop
daa
xlat
test
xchg
movsb
cmpsl
mov
incb
inc
mov
divl
daa
roll
mov
stos
sub
mov
lods
xchg
xor
jle
into
add
std
mov
dec
sbb
xchg
ret
in
xchg
sbb
test
out
int3
jmp
mov
mov
imul
pop
pop
cmp
out
dec
std
sti
xchg
add
or
sbb
movsl
adc
mov
aas
aam
or
rorl
adc
dec
sahf
test
xlat
popl
sar
or
push
ss
enter
aad
arpl
xchg
mov
in
lds
xchg
and
inc
mov
nop
inc
repnz
cli
and
rcll
repnz
or
jns
cld
iret
mov
test
xlat
stos
adc
ret
pop
cmp
stos
outsl
inc
js
jl
out
mov
daa
pushf
jb
push
ret
jb
mov
pop
fwait
mov
imulb
or
popf
mov
jo
adc
add
adc
jl
and
outsb
das
shll
pop
loopne
out
insl
add
jmp
imul
js
daa
into
adc
push
lret
imul
xlat
outsl
icebp
andl
sbb
aad
rcrb
leave
dec
js
imul
push
rcrb
mov
sub
inc
ror
fadd
or
cmp
in
clc
daa
inc
sub
xor
lods
shrb
add
xchg
cmp
dec
sbb
mov
sbb
xchg
in
sti
and
pop
xchg
ja
cmp
cld
jecxz
in
xlat
out
xchg
lods
adc
cmc
or
mov
hlt
aas
lea
in
sahf
or
dec
lods
fiaddl
addr16
xchg
insl
out
je
add
and
call
fsubs
mov
push
push
mov
mov
imul
and
push
lea
xor
jge
fildll
lods
ljmp
movsl
into
sbb
jbe
mov
push
inc
lds
rcl
and
imul
cltd
sahf
movsl
inc
inc
pop
adc
cmpxchg
push
inc
or
and
add
aaa
and
pop
mov
jmp
or
xlat
or
movsb
flds
inc
adc
repz
je
inc
xor
sub
mov
mov
pop
sbbb
fmull
dec
outsb
inc
addr16
adc
lods
rclb
sbb
test
push
push
dec
aad
loopne
xchg
repnz
mov
dec
lods
mov
leave
rcrb
cmp
arpl
int3
out
shrl
test
sbb
mov
repnz
std
jne
popa
xor
mov
pop
xchg
jmp
pop
push
xor
sub
leave
pop
inc
and
lahf
push
clc
sub
sbbl
inc
out
mov
mov
fs
push
push
cs
mov
in
ljmp
mov
shrb
lods
sub
addb
pop
idiv
dec
xor
xchg
push
xor
out
inc
pop
jne
clc
loop
sub
mov
incb
adc
xchg
ja
fcomps
mov
sbb
jbe
cmp
mov
in
mov
addr16
jne
add
add
frstor
push
or
rcl
rcrl
fadd
dec
xor
lea
iret
mov
sub
pop
push
push
adc
or
cmp
orb
fisubrs
jmp
fisttpl
and
out
xchg
aas
adc
fisubs
stc
adc
jp
push
xchg
enter
mov
xor
xor
hlt
mov
scas
mov
push
iret
outsb
movsb
add
fwait
orb
jl
inc
sarb
push
pop
mov
mov
ljmp
call
mov
mov
lds
add
jb
inc
ja
lea
lahf
neg
or
mov
repnz
adc
fisubl
sub
dec
ss
mov
jg
jns
add
fildll
adc
mov
pop
test
sub
fdivrs
or
sub
xor
fisubl
mov
idiv
add
jg
mov
mov
out
loopne
sbb
icebp
adc
dec
mov
mov
jg
dec
int3
jnp
and
mov
cmp
cmp
insb
add
out
std
push
jns
cmp
faddl
es
mov
adc
pop
sbb
push
pushf
xchg
jl
adc
hlt
test
pusha
jle
sahf
rcll
mov
mov
dec
out
mov
iret
ficoml
xchg
xchg
or
loope
loop
sbb
pop
mov
lods
mov
lds
sbb
addr16
add
sbb
xor
pushf
nop
lods
lds
scas
mov
insb
pop
pop
xchg
inc
aas
xchg
pop
sub
mov
inc
jmp
xor
and
mov
sbb
cs
jge
jo
dec
xor
and
cltd
ja
in
call
sbb
out
subl
aaa
repz
mov
faddp
mov
add
rcll
push
inc
jbe
add
scas
data16
mov
cvtpi2ps
cmp
push
scas
xchg
add
add
imul
pusha
sub
mov
mov
das
scas
repz
mov
mov
pop
xor
pop
mov
outsl
mov
inc
nop
daa
dec
test
jne
dec
out
cld
inc
lret
movsl
mov
xchg
and
shr
inc
hlt
sub
sti
orl
stos
int3
adc
inc
insb
cltd
push
lret
mov
mov
cmpsl
movsl
ja
sbb
sbb
pop
push
jnp
test
loope
push
fwait
push
xchg
mov
rolb
loope
push
mov
xchg
scas
es
jecxz
movsl
cli
push
pop
mov
jns
jmp
inc
popf
pop
xor
ret
mov
xor
ret
xor
sbb
add
inc
add
mov
cmpsl
sbb
dec
shll
mov
dec
inc
sub
aam
xchg
fnsetpm(287
movsl
dec
mov
mov
rolb
int
fcom
sub
jp
rorb
out
push
mov
in
push
and
add
lods
sbb
cltd
lods
dec
lret
ja
hlt
rolb
dec
pop
scas
jno
data16
mov
int3
pop
loopne
arpl
call
pop
pop
nop
sahf
cmp
dec
cs
and
lahf
insb
and
lds
inc
cmpxchg
dec
mov
sub
jne
xor
loope
lret
movsl
inc
push
jo
xor
inc
xor
dec
sbb
in
mov
stc
mov
inc
mov
pop
loopne
xlat
pop
mov
pusha
les
push
sbb
pop
adc
inc
mov
sbb
aas
pop
sti
push
cmpsb
jbe
sarb
mov
mov
mov
push
pop
adc
pop
dec
aad
push
lock
lret
lret
push
inc
aad
das
sbb
lods
mov
lea
sub
xchg
push
in
aad
inc
inc
cmp
js
add
jmp
iret
test
sbb
mov
mov
push
lods
arpl
test
lret
cmp
dec
add
push
and
mov
jbe
jno
push
mov
shll
fimull
lods
dec
inc
dec
sbb
push
xchg
xchg
not
jl
mov
cmp
lahf
sub
mov
and
in
movsl
sahf
arpl
mov
punpcklbw
je
kmovb
push
add
mov
ficoml
inc
int
outsl
or
push
outsb
mov
push
out
dec
aad
sub
leave
stos
outsl
iret
cmp
add
and
std
testb
fwait
push
lds
lcall
mov
xor
inc
xchg
jl
cmp
mov
sbb
or
add
push
or
pop
and
lahf
or
add
pop
fcoms
push
push
push
aam
sbb
pop
aad
push
sub
sub
pop
pop
sbb
and
adc
notb
shll
repz
pusha
xchg
adc
scas
lds
lret
sbb
dec
mov
mov
adc
sbb
mov
sbb
lds
mov
outsb
nop
pop
clc
int3
inc
inc
insl
movsl
das
in
ret
ficoms
push
fs
lret
or
ret
popf
xchg
je
add
dec
pop
jns
push
and
movsl
lods
cs
xlat
or
lds
fidivs
nop
les
mov
mov
rorb
mov
pushf
push
daa
adc
pushf
filds
mov
fwait
mov
jo
loop
sub
movsl
fsubr
andb
lds
mov
scas
in
adc
lods
sub
loope
rorl
or
jbe
lds
adc
add
mov
mov
cmpsl
pop
popf
add
int
and
fmul
push
pop
lds
test
and
cltd
outsl
dec
mov
in
fsubs
fldcw
imul
push
test
xchg
sub
and
jne
inc
adc
mov
movsl
mov
fstps
or
es
gs
ret
or
sub
lret
push
pop
adc
mov
lahf
arpl
pop
mov
mov
in
add
in
jge
inc
pop
daa
movsl
rorb
cmpsl
sahf
pop
loopne
lcall
cmp
pushf
mov
lea
dec
adc
rcl
or
jbe
mov
xlat
add
xor
inc
dec
mov
jp
xor
pop
ss
jne
sub
insl
int3
cmp
jbe
ljmp
dec
xchg
push
jge
and
and
movl
inc
push
ja
dec
xchg
ret
hlt
mov
shrl
xor
fstl
sahf
pushf
or
insl
movsl
or
jle
pop
push
in
sarl
hlt
push
fwait
bound
xor
mov
pop
inc
mov
lea
jp
xor
sbb
adc
iret
aam
jo
mov
enter
xchg
stc
lods
add
loop
addr16
mov
rorl
repz
add
xchg
inc
dec
mov
xchg
addb
hlt
sub
fisttpll
jae
fs
mov
push
xor
ret
pop
lahf
and
movsl
rcll
and
int3
lds
jecxz
adc
insl
dec
sub
cmpsl
and
xchg
fiaddl
test
push
movsl
mov
fwait
mov
cmc
xor
test
mov
mov
inc
repz
pop
dec
and
adc
pushf
lcall
vsqrtpd
cmc
shrl
mov
cmp
mov
and
loop
lea
xchg
add
aam
mov
outsl
leave
test
outsl
std
in
pop
not
inc
push
xchg
or
inc
jne,pt
data16
xchg
dec
pop
sub
xor
sbb
mov
test
add
xor
into
or
dec
gs
leave
mov
inc
lods
std
stc
xchg
lret
stc
leave
jmp
jbe
mov
nop
mov
cmpsw
popa
stos
inc
xchg
mov
lds
arpl
movsb
ljmp
lods
pop
shll
or
ret
inc
xor
mov
inc
movsl
pop
shll
out
std
test
push
mov
in
test
outsb
les
arpl
push
xcrypt-cbc
cmpsl
xlat
leave
cmp
movsl
fwait
movsl
mov
out
sub
es
xlat
mov
in
dec
mov
mov
jnp
lods
mov
add
les
outsb
adc
lods
add
test
inc
adc
shrl
int
inc
cmp
insb
mov
popf
test
fisubrs
sbb
ffree
lock
adc
push
pop
stos
cmpl
loope
test
push
ror
ret
aas
jg
sub
ret
push
dec
pop
pop
xchg
push
dec
dec
bound
cwtl
out
fucomp
fdiv
jne
mov
jge
fcmovnb
scas
xlat
adc
lret
sbb
xor
mov
jg
push
mov
sbbb
inc
lret
sbb
cmp
add
int
mov
sahf
push
or
das
subl
test
xor
ja
lea
mov
inc
and
outsb
push
pop
mov
pop
pop
enter
fwait
movsb
dec
lea
mov
pop
mov
movsl
cmpsb
adc
cmp
mov
mov
pop
test
ficompl
rorb
cmpsl
cmp
push
cmp
mov
in
mov
adc
adc
in
or
cmpsl
es
sub
bound
inc
int
pop
js
cmpsl
adcl
in
sub
popa
daa
cmp
pushf
faddl
enter
into
int3
push
cld
inc
ds
mov
nop
and
outsb
adc
sub
xchg
shl
sahf
popf
mov
arpl
inc
outsb
hlt
adc
pusha
stos
sbb
push
test
fistl
mov
push
int
jg
sub
mov
xchg
sub
and
push
mulb
or
sub
mov
mov
add
mov
inc
pusha
mov
add
incb
sbb
mov
sahf
sub
sbb
jle
cmp
mov
pop
mov
or
sbb
rcrl
ret
fnstsw
and
mov
lahf
in
into
mov
pop
jns
fcomps
ret
in
cmpsl
cmp
push
mov
sbb
loope
lret
mov
pushf
and
test
lret
fsubs
mov
rclb
sub
xchg
outsb
mov
aaa
mov
lods
xchg
stos
xchg
sub
out
sti
arpl
sti
dec
push
mov
inc
pop
daa
out
xchg
fildl
and
ret
mov
mov
mov
pushf
mov
lods
jne
clc
test
movsl
in
xchg
xchg
movl
call
push
mov
adc
int
movsl
enter
fwait
pop
xchg
out
rclb
lock
mov
xchg
aam
sbb
add
mov
and
push
loope
enter
lea
shr
jo
or
dec
scas
push
xchg
fcoml
or
outsl
adc
pop
cmpsl
sbb
jmp
inc
imul
sub
or
jmp
movsl
ficomps
lcall
mov
mov
dec
jg
jns
pop
jmp
cli
sub
push
fcompl
or
mov
movsl
pop
fcmovnbe
dec
daa
and
jnp
shl
sub
scas
lret
arpl
lcall
insb
xchg
push
sub
loopne
sti
sub
stos
fldz
out
push
cwtl
divb
cmp
inc
mov
lock
jmp
scas
icebp
sub
pop
cwtl
jns
leave
inc
mov
jns
and
mov
sbb
xchg
fmull
jns
subl
inc
adc
mov
inc
jo
js
and
dec
xbegin
loopne
stos
xor
mov
neg
out
push
pop
cld
int
fcompl
mov
in
xlat
shll
kmovw
add
adc
dec
add
jbe
dec
inc
mov
ljmp
insb
enter
inc
xchg
lret
sbb
arpl
xor
mov
xor
sub
lea
daa
icebp
pop
cld
inc
lods
loopne
test
add
popa
and
xchg
jmp
cltd
fists
jae
daa
dec
outsl
mov
push
pop
mov
jnp
movsl
add
pop
mov
xchg
or
lret
add
test
fsubrs
shl
mov
fmull
and
stc
bound
rorl
adc
imul
fsubrl
add
inc
mov
lahf
xor
fwait
or
push
mov
add
int3
lds
inc
cmp
mov
push
sub
daa
sub
pop
push
inc
mov
push
in
outsl
mov
sub
sbbl
jne
sti
into
jle
or
hlt
push
jge
movl
cwtl
dec
repnz
inc
int
jnp
aad
ret
lret
xchg
dec
xor
cmp
imull
sbbb
addb
popa
movsb
stos
int
mov
mov
imulb
push
outsw
or
jle
cltd
xchg
xor
adc
inc
and
and
popa
test
mov
adc
lock
sbb
add
mov
mov
xor
scas
movsl
movsb
pop
icebp
mov
jp
mov
pop
sub
inc
popa
and
insl
sbb
fwait
pop
xchg
daa
icebp
dec
loopne
mov
adc
outsl
out
mov
sbb
in
xchg
sub
dec
imulb
add
das
lods
movsb
add
push
mov
cli
sub
ds
inc
out
push
dec
dec
and
ss
xchg
ds
jnp
pop
lea
mov
sub
das
insl
mov
aas
inc
popf
rcl
addl
inc
mov
lods
dec
xchg
mov
push
pop
mov
int3
adc
or
sti
sub
adc
in
jns
jecxz
js
cli
jbe
lcall
inc
sbb
pusha
into
jne
sti
dec
adc
ficompl
adc
icebp
xor
lods
in
daa
out
test
bound
jg
sub
jns
pop
mov
push
cmp
inc
jmp
inc
push
jne
add
mov
lods
hlt
mov
mov
fwait
bound
add
fsubl
cltd
data16
rclb
jle
dec
es
push
ja
jmp
pop
imul
cmc
mov
pop
mov
jle
pop
jbe
xorl
popa
aas
sub
xor
push
dec
lds
jmp
xchg
insl
push
mov
inc
scas
ljmp
jo
add
add
fsubs
inc
test
adc
enter
jnp
stos
fsubl
movb
jne
pop
add
stos
lds
jnp
test
int3
push
jmp
push
clc
daa
jne
adc
ret
xlat
sbb
sahf
popa
push
mov
cmp
movsl
aad
adc
xor
out
sahf
scas
mov
jne
sarl
int
lods
adc
das
add
and
movsl
inc
dec
inc
xlat
pop
stos
push
jns
mov
pop
test
cmp
xchg
test
stos
or
add
mov
push
scas
lods
movsl
mov
aaa
adcl
mov
or
jp
add
adc
into
adc
cmp
sbb
add
pop
jge
mov
adc
xchg
dec
xor
push
xchg
out
lcall
cmp
sbb
mov
xchg
add
es
sahf
adc
pop
cmpsl
pop
push
bound
sub
inc
xchg
cmpsl
mov
mov
sub
mov
xor
loope
pop
inc
out
add
cmpsl
das
repz
lret
movsb
sahf
js
adc
addr16
mov
cmp
or
adc
and
aaa
jg
pop
cmp
push
xchg
mov
pop
mov
pop
arpl
adc
mov
xchg
fwait
stos
movsl
mov
outsb
arpl
sbbl
rcrb
or
xchg
clc
jmp
add
pop
pop
imul
inc
fidivrl
arpl
psrad
inc
aaa
clc
fistps
daa
lods
scas
cmpsl
adc
pusha
sbb
ja
daa
mov
call
nopl
xchg
ds
xchg
jae
jge
mov
movsl
push
hlt
outsl
addr16
scas
int
jp
pop
sbb
fs
sbb
ds
xchg
xor
movl
jne
arpl
andl
popf
xchg
or
adc
mov
cmpsl
fmul
inc
mov
cltd
iret
scas
lret
stc
sub
loopne
xchg
movsl
pop
scas
ret
arpl
test
mov
mov
cmp
mov
sub
fidivrs
or
into
sub
ljmp
push
mov
fsubl
sbb
popa
mov
pop
xchg
sbb
cmp
in
push
mov
lcall
push
ret
add
pushf
pop
adc
or
mov
push
and
push
xchg
and
scas
mov
lods
pop
lds
aam
adc
in
mov
das
cmpb
xlat
pop
movsl
iret
loop
inc
gs
sbb
test
aaa
scas
fadds
mov
je
daa
add
fidivs
adc
sbb
sub
sbb
inc
mov
push
and
push
jp
adc
insb
xchg
mov
mov
cli
test
imulb
jne
xchg
sbb
dec
loopne
aam
cmc
mov
add
sbb
xchg
lret
and
cld
mov
mov
int
add
imul
lret
fcomps
in
in
pop
test
push
mov
xchg
push
arpl
sbbl
lock
fbstp
push
add
add
and
add
add
lret
xchg
loope
sti
and
xor
stos
movsl
cli
jno
mov
lret
inc
jmp
outsb
pop
push
mov
xlat
vmwrite
pop
daa
mov
pop
loopne
push
ret
pop
inc
aaa
nop
repnz
daa
mul
out
jnp
pop
in
scas
int3
inc
stos
mov
inc
mov
enter
movsb
lock
push
mov
lods
adc
arpl
add
sbb
rcll
sub
ret
pop
loop
mov
loope
jmp
pusha
daa
adc
lds
pop
inc
mov
daa
adc
push
sbb
adc
pop
mov
jne
movsl
leave
cmp
fisttps
cli
mov
cmc
mov
mov
sub
scas
cs
inc
into
xchg
out
rclb
ficoml
test
xor
mov
mov
js
scas
data16
add
add
mov
shl
and
sub
jbe
aas
sti
data16
push
mov
test
aas
xchg
xor
push
insl
jne
int
sahf
dec
rcr
popf
pop
popa
lds
pusha
inc
cmp
and
in
popl
shll
inc
adc
pop
add
or
lds
mov
bound
dec
loopne
jnp
leave
mov
stc
ret
dec
std
or
adc
and
ret
add
test
sub
out
xchg
jns
add
mov
in
sub
js
sub
cmp
adc
mov
clc
fwait
adc
jno
mov
adc
sub
in
mov
xchg
movsl
inc
push
push
lods
pop
push
loope
bound
or
push
iret
dec
adc
and
sub
into
lea
xchg
call
add
rclb
adc
pop
mov
data16
pop
mov
inc
test
and
and
mov
cmp
ss
popf
test
movl
in
jge
xor
sub
cli
ja
xor
popa
decl
push
xchg
mov
fsubs
cmp
and
dec
fidivrl
testl
iret
xchg
pusha
psraw
adc
adc
in
push
dec
negb
clc
and
sbb
icebp
mov
popf
aas
pop
ret
adc
sub
mov
cmpsb
mov
cmpsl
push
cmp
jo
mov
mov
in
sub
add
movsl
add
xchg
ja
das
rolb
dec
inc
mov
test
ja
mov
sti
mov
add
mov
push
inc
in
jne
adc
sub
int3
loop
lret
iret
repnz
popa
adc
xor
int
ljmp
add
mov
sbb
xchg
pop
lods
mov
int
repz
popf
movsl
fnstcw
roll
add
jg
xchg
repz
test
popf
sbb
sub
mov
push
jns
fstps
adc
loop
movsl
aaa
cmpb
xlat
cld
int3
sti
les
pop
cmpl
pushf
jge
rclb
movsb
outsl
xor
shl
movsl
jno
leave
add
mov
orb
loope
sahf
mov
in
cld
stc
dec
sub
outsb
cli
or
sahf
es
and
sbb
push
lock
add
and
pop
jmp
leave
subl
pop
mov
and
mov
dec
aam
push
shrb
mov
addb
dec
movsl
sarb
lret
push
imull
cld
into
lds
xorb
movsl
in
ljmp
cmp
inc
cmpsb
adc
mov
mov
in
inc
movsb
outsl
sarb
push
clc
sub
adc
and
pop
sbb
mov
out
or
dec
push
add
push
stc
imul
xlat
loopne
pop
aaa
pop
enter
cmpsl
movsl
out
pop
push
add
lea
mov
add
fsub
fsts
sub
nop
aas
sbb
fcoms
loop
test
dec
mov
mov
shl
enter
movsl
inc
iret
pop
mov
jb
inc
mov
dec
push
fisubrl
int
pop
push
sbb
mov
xor
mov
sbb
int
mov
pusha
in
call
cmp
inc
test
sbb
and
and
je
inc
sbb
jne
cmp
lock
sub
xor
mov
in
fimuls
sub
aad
mov
push
scas
cmp
loope
sub
pop
jl
dec
int
jns
loope
jg
pop
dec
jbe
jnp
mov
fistps
aas
mov
js
movsb
jnp
movsl
add
adc
in
add
fisubl
sbb
pop
xor
das
mov
add
insl
dec
bound
sbb
pop
lock
pop
pop
xorb
lods
mov
mov
clc
movsb
inc
xchg
nop
aad
sbb
loop
cmpsb
popa
mov
shlb
cmp
pop
push
xor
and
and
nop
fiaddl
lret
scas
orb
xor
inc
pop
sub
in
mov
nop
int3
dec
pusha
sbb
dec
aaa
xorb
sbb
xchg
xor
push
vpmacsswd
jl
test
aas
lods
lds
mov
out
loopne
push
cmpsb
add
ja
inc
lods
pushf
mov
mov
xor
pop
add
iret
push
jb
shrb
mov
sub
xchg
dec
hlt
test
push
loop
aad
push
stc
and
pop
mov
dec
cmpsl
loopne
mov
jnp
mov
fsubrl
lods
jbe
push
clts
ja
push
je
out
scas
sbb
loopne
mov
jnp
lahf
push
cmp
cmp
scas
xchg
arpl
push
imul
push
xor
cmp
add
dec
scas
inc
and
mov
negb
sub
jp
fsubs
rcll
icebp
mov
and
sarl
lds
incl
jne
sbb
scas
add
frstor
daa
out
das
inc
mov
cmpsb
pop
movsl
sub
negb
xor
or
jb
movb
into
cmp
rorl
mov
add
outsb
and
adc
bound
ret
dec
add
pushf
add
sbb
mov
bound
or
fwait
adc
dec
dec
nop
out
add
clc
bound
cvttps2pi
sub
outsb
adc
sti
cmp
sub
daa
popa
out
mov
das
cmp
lea
adcl
stos
inc
test
int
test
add
fldt
mov
pushf
pop
rclb
test
xchg
iret
xor
inc
mov
mov
test
adc
mov
cli
mov
test
xor
cltd
xchg
lods
or
sub
sti
popa
jp
ja
sbb
filds
setne
push
mov
lods
adc
test
ja
mov
imul
dec
push
xchg
jecxz
lods
lret
push
sbb
xor
jno
cmpsl
and
pop
mov
adcb
cwtl
sub
daa
fcmovnu
std
and
pusha
and
push
loop
jecxz
lret
pushf
and
cmp
jl
movsb
jg
adc
pop
shr
add
outsb
mov
into
cs
jns
mov
lahf
sub
clc
dec
stc
pop
jns
add
dec
mov
movsb
cld
mov
jmp
sbb
mov
cwtl
pop
fs
jne
movsl
xchg
dec
jle
loop
in
arpl
data16
dec
pushf
fidivrs
dec
nop
stc
sub
shrb
sub
and
lods
inc
je
movsl
or
test
outsb
lds
xchg
ret
test
jnp
arpl
cwtl
in
push
push
int3
xchg
jl
call
fnsave
sbb
insl
add
aas
fmul
dec
scas
cwtl
push
or
lods
sub
and
inc
cmp
add
xlat
in
scas
mov
ficomps
sahf
pop
jnp
arpl
inc
andb
and
xchg
test
cld
jl
aas
jmp
and
inc
pop
push
ljmp
and
xlat
push
imul
mov
mov
mov
cmp
lret
lcall
inc
cmp
outsb
lods
ror
lds
shlb
ror
test
outsl
jnp
mov
adc
push
sub
and
and
jge
mov
lret
pop
mov
dec
dec
add
in
movsb
clc
sub
scas
pop
das
sub
mov
xchg
jmp
add
testl
push
fsub
mov
add
mov
fwait
xchg
xchg
mov
push
push
xchg
cmp
outsb
imul
dec
mov
aad
ret
mov
test
pop
mov
pop
mov
lret
stos
lds
push
cltd
pop
lods
adc
mov
clc
jns
dec
xchg
push
cmp
pop
loopne
sti
daa
dec
xor
aam
in
cltd
inc
xor
xchg
pop
pusha
shr
movsl
ds
pop
popa
pop
push
test
popa
rcr
bound
pop
push
sarb
mov
push
and
adc
jg
cs
inc
cmc
sbb
negb
adc
imul
mov
sub
test
aaa
push
sti
jmp
mov
and
outsl
mov
sbb
outsl
ja
movsb
xor
stc
mov
ret
push
push
ret
fdecstp
orb
iret
adc
jo
xchg
cmp
or
mov
xlat
sub
roll
imul
jg
xchg
xchg
lcall
movsl
outsb
mov
sbb
rolb
sbb
mov
movsl
fimull
les
jne
leave
fcomp
int
mov
in
test
outsl
mov
scas
push
gs
mov
sub
and
dec
jne
cmp
jle
ret
enter
or
or
mov
push
xor
jb
xor
and
into
cmpb
cmc
jecxz
mov
icebp
push
mov
arpl
hlt
mov
unpckhps
lods
in
xor
mov
popa
dec
enter
mov
push
pop
sub
or
test
mov
mov
sti
mov
lret
jecxz
cmp
xor
filds
fsubrs
xor
ds
xor
in
gs
cwtl
lds
pop
cli
jb
mov
test
inc
daa
and
aaa
inc
add
inc
rcll
and
mov
mov
imul
pop
bswap
insb
jle
add
sbb
push
jo
sub
cmpsb
mov
push
fs
push
add
mov
add
loopne
push
popf
inc
jnp
aam
fwait
outsb
aad
cmpsb
mov
pop
mov
mov
mov
cmp
add
rorb
sub
imul
ret
neg
fwait
ljmp
lret
mov
lds
inc
dec
xor
adc
adc
sub
mov
cmp
rcrl
addr16
push
sbb
dec
and
xchg
mov
push
ret
adc
outsb
adc
andb
pop
incl
or
loop
add
push
out
xchg
or
push
cmp
jge
mov
lods
out
sbb
call
xchg
rclb
xor
mov
mov
mulb
add
mov
xor
mov
popf
pop
lods
daa
movsb
push
xchg
mov
mov
sub
icebp
or
das
mov
loop
inc
in
mov
in
xchg
insb
bound
pusha
pop
xlat
iret
and
inc
ficomps
scas
xchg
jbe
mov
les
add
test
negl
and
iret
mov
sbb
fistpll
adc
adc
in
ja
inc
test
pop
push
sbb
test
outsl
pop
jge
adc
mov
stos
mov
lcall
lret
cmp
jns
stos
jbe
cmp
and
rcr
shll
mov
outsl
push
push
mov
push
lret
dec
scas
mov
jnp
xchg
sbb
sbb
push
jle
lahf
repz
cmpsl
cmpsb
pop
xorb
ljmp
idivb
mov
pop
mov
add
pop
scas
add
sub
jae
int
rol
lock
lds
loop
arpl
mov
imul
push
cmp
std
mov
fistl
push
shll
hlt
sahf
or
lcall
in
test
sub
in
xchg
push
mov
xor
jne
inc
sarl
push
inc
push
xor
jle
in
in
xchg
pop
fsubrp
or
rol
mov
std
nop
in
icebp
fnstsw
jp
cmp
push
cld
call
loopne
in
addl
push
sub
push
adc
pop
and
mov
pushf
pop
lret
mov
pop
fmuls
push
into
int3
in
sbb
fistl
shl
jl
cmp
lods
mov
push
cwtl
test
hlt
sbb
jb
pop
mov
loopne
pop
jnp
scas
mov
jne
loop
es
aas
cmc
pop
xchg
aas
lods
mov
sbb
test
pop
testb
test
movsl
pop
and
loope
fiadds
dec
sbb
gs
sbb
fdivrs
mov
loop
mov
add
movsl
jnp
arpl
and
popa
inc
jp
lods
shlb
jl
pop
inc
outsb
ja
xchg
and
addb
push
dec
sarb
mov
cld
xorl
std
ja
pop
fistps
add
pop
inc
mov
sarb
jecxz
test
ljmp
inc
cmp
mov
mov
xchg
push
push
jne
pushf
movsl
std
dec
loop
fbld
push
add
pop
in
jp
cmp
std
push
scas
jmp
push
mov
mov
mov
dec
dec
mov
ror
lods
mov
and
fwait
xor
mov
adc
xor
in
sub
cs
push
test
leave
mov
push
outsb
inc
jne
nop
sub
mov
lea
rcr
or
repz
add
scas
mov
xchg
mov
cmp
ja
mov
repnz
jl
fwait
add
sahf
in
iret
adc
adcl
daa
pusha
jne
test
or
mov
jne
pop
xor
loopne
sti
xchg
imul
mov
rcl
popf
jae
pop
jecxz
and
shr
insb
lds
mov
pop
mov
sbb
or
inc
fidivrl
int
adc
mov
in
add
notb
stos
outsb
sub
in
loop
cmpsl
repz
pop
push
xchg
or
movsl
pop
js
in
dec
mov
cmp
jmp
cmp
loope
xchg
es
mov
inc
cmpsb
mov
xchg
jbe
sbb
xchg
inc
add
lds
add
pop
adc
lods
cmp
push
xchg
mov
cwtl
bound
rcrb
jge
ret
push
xchg
xor
mov
jne
pop
fcmovnu
adc
jle
pop
into
outsl
int
ljmp
push
push
in
adc
ret
xlat
mov
push
mov
pop
fdivs
push
popa
sub
stos
mov
push
sbb
xchg
dec
aad
xlat
pop
outsb
outsl
cmp
out
movsl
lods
inc
outsl
inc
adcb
negb
dec
jb
mov
ret
loop
sub
jnp
jns
mov
outsb
mov
out
add
outsb
xor
sub
inc
cwtl
mov
cli
sbb
nop
push
cld
cwtl
sbb
dec
jno
mov
test
int
fwait
ret
andb
push
cltd
push
nop
mov
sbb
in
pusha
iret
mov
ds
push
lods
mov
lahf
jne
cmp
push
or
cmp
sbb
lret
push
sbb
outsb
cmp
xchg
jg
mov
sub
arpl
test
cwtl
mov
faddl
adc
ret
fwait
inc
dec
cwtl
jbe
leave
negb
jbe
ja
and
rcll
addr16
cmpsl
xor
dec
sbb
divb
stc
and
or
scas
mov
mov
push
add
add
and
ret
movsl
jmp
mov
mov
aad
push
inc
icebp
mov
nop
into
iret
inc
mov
std
mov
dec
adc
test
out
sub
shl
lods
inc
adc
fadds
popf
and
jmp
or
movsb
call
mov
popa
ss
aam
pop
mov
mov
mov
cs
xchg
int
adc
stc
fildl
dec
adc
dec
jnp
xor
sub
sarb
aas
loop
jo
adc
cwtl
xchg
out
lods
sub
aaa
rcrb
cmpb
mov
adc
jp
idivb
es
mov
arpl
jl
xor
sub
jecxz
mov
int
repnz
sbb
lahf
jg
idivl
or
in
push
mov
add
shlb
cmp
pushf
mov
rolb
je
dec
xchg
cli
lret
push
cltd
enter
push
lods
dec
push
jmp
xchg
xor
lds
mov
addl
add
add
hlt
scas
xor
ret
mov
push
in
adc
repnz
cmp
leave
adc
pop
and
sahf
bound
movsb
cmp
loop
dec
mov
daa
dec
add
xchg
cmp
inc
mov
mov
popa
sbb
popf
or
shrb
lcall
je
adc
or
popa
stc
cmp
inc
outsb
sub
outsb
or
cmp
xchg
adc
movb
in
leave
ret
jmp
out
ljmp
inc
in
push
mov
push
nop
sub
icebp
in
or
cltd
call
sub
pop
push
xchg
add
mov
ja
imul
or
das
mov
daa
sbb
xchg
test
clc
outsl
ret
imul
fldt
sbb
cmp
sbb
popf
scas
outsb
daa
mov
push
stos
pop
fcoml
test
imul
les
push
mov
jg
ret
scas
pop
sub
mov
add
jp
stc
pushf
mov
xchg
and
popf
jnp
push
stc
stos
out
dec
jb
jl
ss
mov
mov
sti
add
sbb
inc
ljmp
mov
pushf
adc
cmp
push
pop
pop
inc
into
xor
in
lds
mov
push
sahf
mov
pop
negb
push
mov
int
int3
xchg
cmc
in
dec
pop
jecxz
sbb
data16
sbb
imul
cmp
push
shl
dec
inc
sbb
and
movlps
xor
sub
addr16
test
test
and
cmp
insb
inc
xor
jmp
push
in
enter
outsb
jecxz
mov
mov
and
adc
inc
bound
in
xchg
pop
or
xchg
inc
mov
add
faddl
popf
insl
or
adc
jecxz
mov
pushf
dec
lret
jecxz,pn
repz
in
add
cwtl
jge
sub
jp
rcr
sahf
dec
pop
or
test
xchg
mov
push
adc
pop
mov
mov
mov
push
push
aaa
inc
mov
pushf
scas
xor
sbb
pop
sub
xchg
roll
loop
popf
ja
adc
out
lods
scas
jae
ja
xchg
inc
loope
fdiv
leave
pop
movsl
into
add
sbb
leave
mov
lahf
pop
adc
ss
lods
xchg
int
jb
icebp
sub
popf
sbb
popa
mov
in
sbb
pop
push
mov
push
jnp
hlt
lods
pop
xchg
inc
mov
in
loopne
fxtract
inc
pusha
movsb
mov
adc
lock
shrl
jns
push
hlt
sub
mov
add
dec
jge
adc
clc
sahf
lret
inc
inc
jns
ret
push
dec
mov
outsb
xor
sbb
fwait
movsl
inc
fiaddl
pop
incl
arpl
push
jl
lret
mov
lds
jne
inc
mov
mov
or
mov
and
inc
stos
sbb
decl
test
jnp
fwait
and
sbb
xchg
insb
das
sub
loope
mov
mov
fistpl
adc
sub
sub
ret
jo
and
dec
cmp
sbb
lods
int
lods
xlat
dec
add
adc
fisttpl
aad
out
mov
test
in
push
add
sub
xchg
int
arpl
dec
mov
testl
cmpsb
jno
fwait
ljmp
frstor
lret
add
idiv
stos
es
cmp
push
cmp
add
mov
xchg
mov
add
and
rcll
jle
in
add
fstpl
sub
mov
test
or
mov
mov
data16
dec
stos
mov
fcmovu
and
add
daa
sub
mov
pop
shrb
add
fsubs
iret
sbb
sahf
daa
pop
mov
adc
cmpsb
xchg
mov
add
add
mov
lods
jb
jns
xchg
iret
adc
stos
out
pop
bound
add
pop
scas
pop
sbb
sub
pushf
pmaxsw
in
xchg
fsts
stc
dec
pop
sbb
inc
push
xchg
pop
mov
mov
inc
orl
cmp
cltd
movsl
ret
adc
leave
sub
or
test
mov
xor
jb
mov
inc
les
or
push
mov
sbb
cwtl
movl
jns
jecxz
inc
cmpsb
out
pushf
mov
sub
jp
dec
jl
push
mov
pop
push
repnz
int3
iret
test
jno
dec
sbb
jmp
pop
daa
xor
dec
daa
cld
int3
xchg
mov
pop
cmp
daa
addl
clc
pop
adc
push
pop
sub
cmpsl
and
inc
push
mov
pop
dec
add
adc
mov
popf
daa
mov
mov
rclb
rolb
mov
rorb
nop
repz
mov
xor
pop
add
jns
push
lea
jle
cmc
std
mov
in
push
test
add
dec
mov
dec
mov
jmp
lcall
fldl
sbb
and
arpl
mov
adc
in
or
insl
and
or
jmp
vmovntps
xchg
fcom
dec
cmp
pop
lcall
movb
imulb
insl
sbb
sub
jg
or
adcb
inc
outsb
ds
mov
xchg
adc
pop
imul
in
add
cmp
xchg
in
in
mov
arpl
mov
cld
movsl
add
pop
or
cs
loop
xchg
push
cmpsl
fwait
stos
lds
hlt
inc
addl
mov
pop
mov
push
ds
add
jle
fistpl
popf
add
into
add
mov
je
gs
aaa
xchg
and
fwait
add
lret
and
sahf
xor
lret
cli
pop
daa
dec
mov
mov
push
ss
es
add
add
div
add
mov
in
movsl
sub
adc
int
jge
adc
mov
jp
pusha
push
inc
or
out
test
mov
pop
inc
pop
daa
imul
fwait
add
fisttps
and
add
test
pop
mov
movsb
or
inc
insb
push
test
push
sub
mov
xchg
cmp
jns
push
loop
jae
call
nop
leave
pushf
in
lea
xchg
cmp
mov
pop
or
loop
and
sub
sarb
fbld
mov
mov
adc
loop
arpl
add
lcall
loopne
pop
fldcw
repz
dec
lcall
add
inc
pop
sbb
test
int3
mov
lods
test
sub
fsts
popf
lods
pop
es
in
lcall
and
mov
outsb
mov
lods
dec
clc
movsb
fmul
mov
inc
imul
sub
mov
pushf
dec
mov
cmc
test
push
mov
iret
test
les
shl
repz
aam
fs
sbbb
lret
and
scas
mov
fdivr
inc
mov
enter
mov
and
pop
pop
pushf
enter
push
push
in
jle
mov
test
rcll
cmpsl
jecxz
fidivs
mov
xlat
inc
sub
scas
iret
inc
mov
movsl
push
jle
ficompl
stos
add
mov
hlt
fwait
mov
insb
jnp
test
xchg
pop
fmuls
loopne
test
add
mov
lds
mov
push
push
aas
cmp
shrb
ret
pop
in
push
clc
dec
dec
inc
xchg
in
mov
aam
pushf
jae
loop
les
clc
adc
sahf
sub
add
es
add
sbb
xor
or
daa
add
jae
in
dec
dec
mov
mov
lds
inc
push
movsl
cmp
add
push
fidivs
or
cli
sahf
push
pop
sbb
js
cmp
les
loop
aad
aas
mov
cltd
fsubs
aam
pop
push
movsl
and
ds
xorb
data16
fwait
movsl
adc
les
test
add
leave
push
int3
or
adc
or
pop
mov
dec
fmul
mov
dec
cmc
test
sub
mov
cli
daa
dec
pop
jge
cmc
or
inc
scas
iret
sbb
cmp
fcomps
mov
into
mov
sub
adc
mov
test
cmp
fldl
xor
or
icebp
or
sbb
xor
cld
mov
rcrb
negb
clc
and
in
cmc
sahf
lret
fnstcw
mov
push
xchg
into
or
jne
leave
sbbl
outsb
push
xchg
loopne
push
inc
push
shrb
stc
imul
or
outsl
cmp
pushf
das
push
fistl
mov
ja
in
and
daa
popa
inc
xchg
dec
add
push
stc
ret
mov
mov
sbb
out
mov
imul
js
xchg
push
dec
ja
pusha
test
lahf
ret
lds
pop
outsb
or
mov
insl
les
add
jge
and
xor
xchg
lcall
test
push
adc
pop
xchg
and
fisttps
sbb
movsl
out
mov
xor
xchg
xchg
add
out
pop
sbb
cltd
mov
mov
pop
dec
mov
xchg
adc
stc
lret
lret
add
int
pop
dec
xor
pop
dec
outsl
sbb
cmpsl
add
jb
mov
jo
cli
in
mov
imul
subb
arpl
test
repnz
cmp
rcrb
jo
aam
add
mov
adc
add
xlat
fwait
xor
test
fistps
mov
adc
cltd
pop
lods
cmp
fldl
ficoml
and
imul
xor
mov
mov
movsl
call
les
imul
loop
scas
xchg
jmp
cltd
movsl
jb
xchg
shll
pop
jmp
lcall
mov
mov
xor
jg
std
inc
negl
mov
fsub
and
lcall
sysenter
pop
mov
inc
or
aas
sub
add
pop
int
ja
xorb
mov
xor
jb
mov
sbb
pop
dec
or
insb
ss
sub
pop
jnp
sbb
scas
xchg
lret
push
mov
inc
push
jns
fwait
lret
ret
int
inc
jb
cmpl
mov
add
mov
pushf
xchg
aaa
push
bnd
cwtl
add
or
push
adc
int3
push
pop
cmp
jge
jle
mov
mov
aas
mov
cmp
repnz
leave
cmp
call
mov
mov
mov
fisubrl
pop
loop
dec
add
inc
ret
ret
push
xor
loopne
das
fcompl
mov
mov
fwait
daa
jne
cwtl
push
mov
add
xorl
insl
mov
int3
enter
daa
ljmp
orb
movsl
and
cltd
bound
ret
adc
jb
lods
daa
push
pop
xor
dec
xchg
cmp
ficoml
mov
mov
outsb
test
dec
dec
cmp
pop
sbb
lods
stc
cmp
push
sbb
lds
xchg
xor
cmc
push
lea
add
push
ret
dec
hlt
lds
dec
xor
push
shlb
jne
pop
sti
aad
xor
inc
mov
jbe
jmp
cmp
xor
test
rsqrtps
and
cmc
negl
push
outsb
dec
insb
jno
les
mov
mov
lods
or
xor
mul
fiaddl
out
or
bound
out
shlb
pop
shlb
in
add
dec
inc
dec
mov
sahf
cmp
scas
int
test
mov
int
in
jne
bound
in
sbb
dec
and
mov
fstpl
mov
loopne
roll
int
fucomi
xchg
xor
or
lods
mov
notb
ret
int
push
pop
mov
popa
xchg
lds
add
ja
mov
jo
pop
inc
xchg
jmp
or
in
cmp
jne
std
pop
xor
push
je
sahf
aas
and
fbld
aam
bound
and
or
pushf
add
add
jbe
aam
mov
and
cmp
adc
sub
out
fstsw
daa
or
pushf
dec
call
outsb
inc
and
jl
into
insb
push
gs
jmp
fimull
sbb
arpl
pop
adc
loopne
sbb
dec
cli
lods
test
cmp
test
push
xchg
pop
loope
sbb
push
mov
dec
xchg
mov
mov
inc
mov
mov
cltd
pop
dec
cld
incb
cmp
mov
mov
fisttps
inc
fistps
cmp
fwait
mov
outsl
leave
mov
pop
aam
cld
inc
mov
jmp
dec
bound
shlb
arpl
js
dec
stos
dec
xchg
std
pop
out
popf
vpsubusb
jb
lock
aam
mov
and
mov
jnp
fldt
cld
ss
xchg
dec
std
lods
fcmovnu
push
xchg
add
xchg
shll
mov
xchg
pop
push
push
iret
fwait
and
push
mov
jno
rorl
adc
daa
dec
imul
pop
jmp
fistpll
repz
loop
rcrb
dec
stc
xorl
add
adc
sub
hlt
inc
fsubl
cmp
xchg
pop
ret
fimuls
mov
mov
mov
mov
push
ret
sahf
mov
mov
xlat
adc
sbb
pushf
orb
aad
int
pop
dec
andl
sti
es
popa
push
jbe
mov
inc
fcoms
aam
sbb
int3
mov
jle
negl
shll
mov
movsl
adc
add
dec
pushf
daa
sub
aam
addr16
inc
into
sub
sbb
and
clc
hlt
inc
pop
and
xchg
cwtl
add
xor
loopne
enter
mov
insl
iret
mov
hlt
pop
lds
lea
into
sub
xor
adcl
add
adc
repnz
dec
xchg
adc
add
mov
or
pushf
fisttpl
sub
in
add
sar
or
mov
orb
out
dec
xchg
xor
lods
daa
inc
mov
sub
inc
dec
cmpsl
subl
push
add
js
andl
iret
pop
push
mov
add
fsubs
add
sub
rolb
movsl
in
das
or
aas
les
cmpsl
mov
outsb
inc
lods
mov
dec
mov
fistps
sbb
mov
jmp
add
pop
addr16
js
sbb
leave
gs
in
shll
mov
std
lds
sbb
inc
jle
int
loop
mov
push
inc
stc
cltd
mov
cmpsl
push
mov
dec
aad
outsb
lds
xor
in
mov
inc
movsl
inc
xchg
pop
in
scas
aas
lds
mov
mov
jmp
mov
mov
pop
push
and
aaa
lcall
cmp
adc
fucom
and
ja
fwait
sbb
imul
add
push
mov
or
pop
cmpsl
adc
cmp
lds
pusha
repz
mov
ret
pop
push
dec
push
or
lea
mov
pusha
loop
and
stos
movsl
repnz
adc
jns
dec
lret
es
mov
inc
movsl
shl
arpl
fnstcw
or
in
test
mov
daa
add
imul
or
add
mov
or
test
xchg
dec
dec
cmp
or
xadd
mov
lret
lods
xchg
xorb
rorl
insb
sar
jmp
scas
sbb
inc
nop
sbb
inc
scas
fwait
inc
mov
test
add
and
out
pop
out
xorl
nop
mov
sub
push
in
pop
mov
lea
out
lea
inc
dec
jmp
dec
adc
inc
arpl
inc
add
popf
scas
in
lods
add
out
pop
inc
mov
mov
mov
add
or
add
imul
cmp
inc
pop
inc
adc
ficoms
or
test
push
xor
clc
adc
loop
add
push
nop
xchg
push
movsl
popf
adcb
imull
fidivl
sub
dec
lds
xor
xor
rol
es
mov
mov
arpl
inc
xchg
aaa
lret
daa
decl
add
ret
rol
mov
cld
mov
inc
fistps
fldl
ljmp
cmc
or
sub
adcb
mov
rol
int3
outsb
add
fsubrl
lret
rcll
sbb
ret
jo
dec
cmp
insl
push
xchg
jp
shl
or
mov
outsb
int
xchg
cmpsl
movsb
fcoms
nop
dec
inc
or
sub
add
sub
xchg
data16
repz
lods
push
pop
sahf
cmpsl
xchg
xchg
into
cpuid
aas
jb
out
jmp
jno
stos
mov
adc
inc
mov
in
pop
inc
mov
xchg
inc
gs
push
iret
stos
ja
jnp
insl
pop
cmp
add
sbb
incb
mov
inc
inc
mov
lods
pushf
inc
daa
push
je
xchg
scas
cmp
mov
jp
xchg
xor
add
es
and
cmc
inc
rorl
add
ja
pushf
or
outsb
jbe
les
aam
mov
jb
xchg
xor
sbb
dec
std
sbb
int
mov
daa
mov
movsb
mov
lods
or
inc
mov
enter
dec
cwtl
int
je
adc
rcrl
mov
add
pop
pop
scas
sub
movsl
pop
dec
mov
subl
sub
jbe
rclb
das
fdivl
fsubl
lods
push
push
push
mov
ja
pop
add
inc
jp
mov
jnp
adc
jecxz
cltd
xor
cmp
xlat
dec
daa
adc
loopne
mov
addl
mov
les
ror
pop
test
and
dec
inc
add
adc
imul
add
cwtl
bound
cmc
mov
rcl
mov
pop
cmp
in
or
fadds
arpl
rorl
and
sbb
sub
insb
stc
jae
pop
int
lods
hlt
lds
popa
iret
lds
and
js
in
les
inc
jnp
dec
push
jge
xor
pushf
mov
pushl
repz
test
dec
fwait
imul
roll
sub
imul
sbb
adc
fiaddl
add
dec
js
jl
incl
lea
cld
mov
lds
or
cs
sbb
movsb
fwait
aam
xchg
jmp
xor
movsl
repz
pusha
fs
out
jl
outsl
dec
mov
inc
loopne
scas
mov
add
adc
xchg
in
dec
es
cmpsl
adc
sbb
movsl
mov
push
mov
lds
movsb
sbb
sub
ljmp
sahf
fistpl
sub
push
inc
pop
xor
cmpsl
es
and
dec
fisttps
cs
popa
daa
cmp
pop
inc
cld
cmpsl
xlat
fimull
inc
push
fwait
mov
leave
lds
jne
addr16
and
pop
in
sub
sbb
mov
popf
push
or
and
pop
mulb
and
dec
jo
push
adc
fsubrp
push
mov
adc
xchg
mov
out
sbb
fidivl
mov
bound
jmp
xlat
movsl
xor
mov
mov
mov
mov
push
loope
aam
repz
mov
outsl
jle
mov
push
aaa
push
xlat
add
bound
or
in
adc
jb
push
cli
aas
repz
xchg
and
lcall
shrb
adc
lods
xchg
mov
push
ljmp
mov
mov
cltd
pushf
cmp
mov
das
sbb
les
data16
lds
js
sbb
push
jle
sbb
or
mov
daa
pop
sbb
sbb
bound
add
pop
sbb
fs
add
fsubrs
fnstenv
xchg
pop
lods
push
inc
aaa
aam
sahf
mov
cmp
cltd
add
pop
iret
mov
fldenv
mov
adc
dec
scas
mov
push
pop
jg
mov
jnp
mov
cmp
test
mov
adc
sbb
movsl
and
sub
add
imul
mov
or
sbb
inc
testl
ja
add
cmpl
mov
xor
out
lds
nop
fwait
int3
fwait
mov
negb
jo
push
inc
inc
mov
add
test
add
lea
jge
ss
dec
mov
pop
jmp
test
aam
mov
daa
mov
call
jbe
mov
ja
movsb
sti
negb
inc
cmp
negl
pop
xchg
jbe
mov
xor
mov
xor
mov
int3
add
xor
cwtl
dec
repz
push
ret
imul
pop
jl
imulb
imull
add
pop
mov
aam
mov
sbb
add
xor
and
push
lds
xchg
pop
sbbb
es
sbb
or
fstps
push
sub
dec
jo
test
add
sarl
jg
sub
inc
mov
sub
fdivl
cmpsl
dec
dec
xchg
push
sbb
cmpsl
adc
stos
adc
movsl
nop
pop
scas
xchg
test
lods
popa
iret
add
sbb
nop
mov
loopne
lods
and
je
repz
popa
pop
mov
inc
lds
adc
xchg
cld
incl
cwtl
or
cld
cmpsl
mov
cli
movsb
sbb
push
outsb
rcll
filds
jne
out
ret
mov
pop
pop
int3
repnz
mov
inc
fcoml
divl
or
in
sarl
mov
mov
mov
add
xchg
mov
add
pop
xor
adc
icebp
mov
pop
adc
pop
out
loopne
leave
pop
push
insb
aam
lahf
inc
add
sub
mov
mov
sti
int
push
jecxz
push
adc
push
inc
fsubs
cli
jp
sbb
scas
in
loop
lahf
in
fdivl
add
mov
mov
vsubss
popf
out
mov
add
cmp
sbb
imul
in
dec
std
push
sub
int3
cpuid
and
mov
lds
js
adc
mov
lods
push
outsb
lahf
and
add
fimull
pop
lds
fisubrs
sbb
in
push
dec
scas
sbb
and
mov
pusha
leave
inc
mov
std
fildll
ds
lret
hlt
add
jnp
lret
sbb
arpl
push
int3
lods
lds
cli
mov
mov
jns
lret
and
sbb
inc
xchg
or
mov
pop
enter
std
mov
fsubrl
mov
outsb
jnp
loopne
les
cmc
inc
and
adc
je
and
test
pop
push
mov
mov
movsl
and
loop
jl
incl
call
fcomps
jnp
pushf
jnp
mov
mov
hlt
hlt
push
xchg
enter
inc
mov
sti
hlt
inc
add
mov
dec
cmc
pop
ja
cmp
test
lahf
xchg
gs
add
pushf
xor
jno
cltd
add
bound
js
xchg
inc
fsubs
pop
jp
jl
cmpsl
and
fmul
orl
pushf
outsl
daa
add
mov
or
lds
jo
loope
scas
sub
cmp
out
xor
push
pop
sti
mov
mov
xor
das
mulb
rclb
fisubrs
ret
dec
xlat
mov
push
inc
push
mov
xlat
inc
loopne
jge
repz
xchg
fdiv
xchg
movsl
xchg
dec
dec
add
mov
mov
movsl
cs
cltd
dec
sahf
shr
xchg
lahf
pop
mov
mov
or
movsl
imul
enter
leave
lods
sti
adc
test
jnp
xor
mov
or
mov
mov
mov
pop
daa
push
insl
push
add
xchg
es
leave
sar
minps
ja
cld
mov
xchg
dec
mov
hlt
insb
fists
add
xchg
lods
mulb
cmp
andl
push
inc
mov
or
jae
ljmp
adc
stc
clc
shrl
push
movsb
inc
movsl
sarl
cwtl
and
ret
in
xchg
add
mov
dec
dec
inc
pop
push
inc
in
pop
dec
test
mov
lret
adc
sub
and
repz
push
out
sbb
inc
ja
pop
std
jge
mov
xchg
lahf
addl
arpl
pop
aam
pushf
dec
movsl
int3
scas
popa
js
out
in
sarb
sbb
push
aaa
arpl
add
aas
push
test
lock
ds
rcl
lds
lds
cwtl
mov
jae
lcall
mov
pusha
int3
aaa
sbb
xlat
or
lods
jg
insl
into
sarb
js
inc
dec
mov
inc
int3
fdivl
dec
shl
sahf
fcoms
movsl
push
push
adc
mov
enter
movsl
hlt
mov
xchg
inc
push
inc
cmp
sbb
push
dec
outsb
pop
inc
mov
lret
popa
inc
into
add
iret
mov
mov
adc
bound
fwait
lahf
sarl
adc
dec
popf
test
mov
mov
out
movsl
dec
or
cs
push
mov
add
bound
push
imul
jne
mov
push
hlt
dec
pop
cwtl
pop
pushl
sahf
cmpsb
fcomps
mov
aas
sbb
sahf
mov
fwait
lods
movsl
push
jg
pushf
aas
cmpsl
shlb
add
daa
pop
cwtl
pop
mov
sub
xlat
mov
dec
int3
add
mov
imul
test
ja
pop
test
xor
call
sbb
cs
jle
mov
movb
or
int3
lods
movsl
scas
in
mov
jl
int
ja
bound
jecxz
jecxz
xchg
and
xchg
mov
add
neg
insb
inc
into
sub
jg
cli
fistpl
jmp
lods
jmp
jbe
pop
jmp
stos
dec
push
loope
inc
lock
add
scas
in
add
out
loope
test
call
and
insb
mov
imul
rcrb
or
sbb
incb
repz
xchg
and
inc
mov
or
mov
lock
sbb
test
cmp
aas
pop
inc
mov
or
inc
push
mov
jg
add
fistpll
cmpsl
add
scas
jp
xor
push
daa
inc
leave
push
pop
enter
or
xor
fisubrl
adc
lahf
jno
cmpsl
cld
lret
ret
add
mov
lahf
and
daa
add
std
les
push
popa
pop
hlt
arpl
gs
orb
sahf
push
popf
and
repz
lock
push
in
add
add
je
or
mov
xor
fnstenv
or
daa
xchg
inc
filds
frstor
lcall
mov
rorb
sahf
jnp
add
mov
lea
mov
vandpd
in
mov
pop
in
sbbl
xchg
fucomi
pushf
ret
mulb
inc
sahf
jecxz
sahf
lds
movsb
sub
xchg
and
lds
in
rorb
add
push
jge
dec
out
fwait
sbb
jecxz
and
arpl
lea
lea
aam
ss
jle
xchg
jne
add
scas
enter
cli
sbb
xchg
cmp
ljmp
aad
loopne
mov
xor
lods
sbb
ror
fnstsw
push
aam
mov
out
xchg
inc
imul
inc
xor
gs
dec
xchg
mov
adc
stos
jnp
loop
sti
lods
cmpsl
fisubrs
xchg
setb
fstl
xchg
lods
xor
fsubs
push
in
testl
loopne
arpl
sahf
push
mov
mov
sti
shll
xor
int
ja
xchg
test
adc
jp
jae
scas
pop
mov
cmp
xor
in
sub
and
push
mov
mov
cmpsl
or
sbbl
in
and
push
jp
add
add
pop
xchg
rorb
push
sub
add
sub
jl
push
sub
sbb
jl
hlt
dec
lcall
xor
mov
xor
add
sub
shr
ja
dec
test
ret
sbb
mov
cmp
popl
mov
sub
push
mov
mov
push
adc
outsb
outsl
dec
jge
sbb
mov
pop
mov
sub
pop
mov
xchg
push
xchg
pop
inc
imul
js
flds
adc
xchg
rcll
ja
loopne
mov
mov
in
shr
adc
shrl
jno
mov
daa
int
ds
int3
xchg
dec
ja
pop
mov
test
xor
sti
outsb
cmpl
popa
aad
ficompl
fucom
scas
in
shlb
es
cld
pop
sbb
sbb
and
popa
lcall
mov
add
inc
arpl
xchg
mov
jne
vpaddw
jbe
xor
mov
adc
push
cli
mov
pop
or
hlt
pop
test
adc
addr16
pop
mov
jb
pop
inc
dec
adc
lcall
seto
inc
push
fstpl
xor
push
sbb
push
mov
mov
lods
popf
je
adc
lock
or
xorb
fadds
lahf
insb
mov
adc
and
inc
cli
sahf
fisttpl
aaa
lds
xchg
cmpl
pushf
inc
mov
xchg
or
xchg
loopne
adc
in
data16
out
inc
in
loopne
pop
out
inc
test
ret
in
xchg
pop
scas
imul
jb
outsb
adc
inc
das
outsl
jo
jo
sub
mov
lods
sbb
mov
mov
scas
lods
xor
in
add
jmp
test
gs
rorb
cmp
std
and
out
rorb
and
bound
add
daa
pop
pusha
lods
les
push
mov
es
and
inc
jge
inc
mov
or
cmpsl
mov
stos
adcb
and
add
lods
clc
lret
jmp
mov
shll
cmp
lret
movsl
pop
add
inc
cltd
and
vmovmskps
mov
mov
push
lds
cmp
mov
mov
add
sbb
inc
loop
mov
jle
xchg
push
lea
dec
or
rol
movsl
xchg
jp
movsb
fmulp
and
xor
mov
int
ja
out
cmpsl
loop
xor
push
pop
lds
mov
test
hlt
rorl
mov
mov
push
sbb
add
leave
inc
imul
push
aaa
adc
inc
push
sbb
movsl
jl
xlat
sub
movsb
jae
stos
xchg
mov
pushl
fcomps
mov
test
cmp
or
shlb
push
mov
dec
add
cwtl
xchg
xor
lds
inc
enter
imul
rolb
mov
sub
pop
xchg
je
push
mov
xchg
inc
popa
dec
pushf
lds
mov
mov
call
and
push
cwtl
pop
popf
stc
push
dec
dec
or
movsl
push
xchg
mov
mov
pop
int3
ss
stc
dec
push
lret
cmp
and
ficompl
in
mov
push
imulb
lahf
lret
or
jae
lahf
fwait
jl
cmpsl
test
lods
aaa
addb
adc
lods
mov
sub
cltd
mov
xchg
cmc
hlt
sahf
push
sbb
mov
es
sub
subl
into
sub
xor
enter
push
aaa
mov
rcrb
mov
mov
scas
pop
addb
in
dec
mov
jno
mov
sbb
sub
xchg
mov
ds
jb
leave
in
ret
icebp
cmp
ret
nop
movsl
in
xchg
dec
int3
clc
movsl
faddl
xchg
cmp
addr16
inc
mov
add
movsl
mov
dec
jp
int
pop
fsub
out
imul
ret
clc
jmp
and
mov
lods
mov
subl
add
mov
mov
pushf
popa
stos
pop
fldenv
mov
pop
jmp
movsl
lods
mov
xor
stc
mov
sub
movsl
mov
scas
dec
clc
dec
push
dec
pop
lea
shr
gs
add
mov
jne
xchg
xor
sub
fdivrl
movups
sub
or
fmul
decb
daa
add
cs
loop
test
adc
pop
and
leave
loope
aaa
bound
lock
test
or
pushf
movsl
fcomps
cld
fs
sti
cmp
fwait
mov
hlt
mov
jecxz
ficompl
popa
roll
data16
cmp
imul
rcl
add
scas
mull
test
xchg
xor
xor
mov
loopne
add
fwait
xor
aam
lds
mov
jo
dec
ljmp
pop
xlat
mov
jg
std
shll
enter
daa
and
add
lret
push
loopne
cld
push
push
mov
leave
shlb
push
aas
fldt
inc
xchg
add
rclb
cli
sub
popa
xor
pop
int3
pop
es
in
test
mov
inc
lods
imul
repnz
dec
scas
addr16
cld
into
push
in
in
dec
shrb
xchg
inc
fadd
xchg
mov
inc
mov
inc
movsl
ficoml
dec
jecxz
aad
stos
dec
xlat
sub
mov
sub
push
adc
add
mov
pop
pop
outsb
and
xchg
xor
fwait
lea
add
iret
loopne
sub
pop
lods
adc
aas
hlt
jmp
and
insl
fbstp
in
into
dec
hlt
fwait
nop
mov
test
popa
clc
in
iret
jb
cs
sbb
addr16
popa
movsb
add
scas
rcrb
scas
jns,pn
clc
push
pop
pop
cmp
nop
fidivrl
mov
sub
std
xorb
fisubl
mov
mov
loopne,pn
cmp
mov
pop
loope
cmp
dec
scas
enter
incl
pop
xor
cmc
in
pop
fmuls
lea
sarb
stos
xchg
shrb
mov
jecxz
out
mov
movsl
cmc
add
dec
mov
sbb
pop
fnsave
lock
scas
int
push
lahf
adc
clc
xchg
shrb
vcvtdq2pd
pop
push
fcomps
test
cli
add
pop
and
inc
dec
mov
das
popa
jbe
outsl
or
in
or
jmp
popf
pop
dec
inc
sbb
push
xchg
stos
or
push
ss
pop
inc
scas
mov
ds
or
pop
xor
adc
cmp
out
inc
push
or
mov
out
sbb
cli
or
imulb
into
stos
push
mov
ret
daa
vpmacssdd
lds
jecxz
mov
lcall
imul
int
fstps
sahf
and
inc
pop
mov
stos
mov
or
mov
lods
or
fwait
int
mov
outsl
xchg
out
sbb
mov
sub
push
pop
jmp
inc
mov
sub
inc
inc
sub
fwait
pusha
push
jno
mov
movsl
xchg
out
pop
loopne
in
jg
xchg
cmp
ljmp
test
movsb
jnp,pn
outsl
imul
adc
shrb
cwtl
in
mov
imul
mov
stos
popa
mov
lds
push
add
lock
icebp
movsb
sbb
ret
pop
dec
mov
pop
jle,pt
in
push
mov
inc
shrl
ljmp
dec
sbb
pop
or
pushf
outsb
cmp
cwtl
aas
sub
and
add
push
mov
cmpsl
test
fcoms
flds
outsb
and
in
addl
loop
ds
mov
lcall
pop
test
add
pusha
or
cld
dec
fwait
popa
push
xchg
mov
arpl
jnp
sbb
arpl
repnz
sbb
push
push
nop
pop
cmp
jg
jns
or
mov
mov
push
cmp
andb
push
mov
xchg
adc
and
inc
jae
stos
or
push
data16
mov
int3
inc
jne
lret
or
sub
sub
jae
lea
daa
jg
push
dec
cwtl
orb
cmp
xor
aad
in
outsb
movsl
bound
mov
jmp
or
xlat
mov
mov
imul
inc
add
push
mov
popa
sub
mov
push
cwtl
aas
mov
jl
mov
jno
repnz
push
into
mov
lock
push
pop
and
sbb
pusha
pop
pop
mov
ja
enter
push
lea
mov
cltd
or
jp
mov
fnstcw
ds
repz
data16
imul
xchg
sub
jbe
fs
mov
add
inc
push
nop
push
icebp
daa
lds
test
add
and
jecxz
lea
inc
push
or
mov
ljmp
iret
push
into
leave
jmp
push
in
sub
fwait
in
push
test
cmp
rorb
xor
pop
ffree
lods
sub
ffree
ljmp
sbb
sub
in
int
rorb
add
xor
leave
fucom
inc
cmpsl
pop
mov
sub
rcrl
nop
out
in
cld
stos
adc
das
pop
nop
pop
mov
add
clc
sbb
pop
or
push
dec
xor
xchg
in
push
or
add
push
sbb
mov
loop
mov
filds
sbb
push
xor
push
fsubs
jne
mov
cmp
clc
jl
insl
adc
xorl
adc
lods
push
cmp
jge
sbb
or
int3
inc
pusha
push
pop
lret
mov
cmp
sbb
sub
xor
ret
mov
push
clc
rcrl
je
pushf
inc
sbb
xchg
cld
js
push
cmp
enter
test
daa
or
es
cmp
mov
inc
movsl
std
loopne
jae
jbe
fisttps
into
movsl
add
leave
mov
ja
xlat
add
leave
pushf
mov
in
divb
fwait
mov
inc
push
mov
test
rol
pusha
in
aas
arpl
push
stc
popf
mov
nop
jmp
lds
cmp
inc
pop
add
iret
movsl
pop
mov
popl
leave
scas
lcall
fwait
ret
adc
mov
movsb
inc
aas
icebp
ficomps
vhaddps
repnz
xchg
push
daa
aas
ds
mov
sub
push
inc
push
insb
pushf
arpl
mov
add
jp
outsl
or
jbe
adc
and
int
dec
jp
fnstsw
ficoms
shlb
js
xor
sahf
mov
rcll
lds
out
adc
inc
sbb
lret
mov
fsubl
cmp
int3
divl
lods
stc
jno
xor
cltd
mov
shr
in
lahf
sbb
outsb
add
sub
push
cmpsb
repz
sub
pop
lods
jmp
xchg
add
xchg
adcb
test
cmpsl
pop
push
test
lds
int
ja
cmpsl
stos
clc
add
push
or
mov
push
ss
pop
adc
out
cmc
sbb
pop
test
mov
pusha
outsb
mov
imul
jnp
es
lahf
popf
xchg
mov
jmp
out
pop
inc
subl
orl
pop
push
loopne
ljmp
jnp
xchg
aaa
mov
pop
xchg
sti
and
push
repnz
in
and
std
pop
shlb
hlt
inc
pop
cmp
xchg
adc
pop
xorb
das
jle
aaa
mov
xchg
push
jnp
xor
loopne
icebp
push
dec
mov
adc
xchg
jmp
je
pop
jmp
sub
mov
daa
fidivs
ret
jb
mov
pop
in
rol
mov
sar
inc
sbb
ss
push
cmc
nop
arpl
aam
xchg
pop
lods
push
or
adc
movsl
arpl
xor
jne
fs
stos
push
movsl
test
scas
pop
rolb
mov
cltd
test
clc
fcoml
push
ds
int
xchg
lret
daa
es
mov
movsb
fists
ffreep
scas
dec
jb
adc
ds
insb
xchg
dec
fwait
jns
fs
xor
jbe
out
pop
ret
xchg
add
pop
jbe
fwait
sbb
popf
enter
pop
add
lcall
mov
cltd
jnp
test
mov
and
adc
xchg
adc
and
test
andl
add
call
or
in
iret
cmc
or
prefetch
and
fdivr
push
aam
insb
pop
popf
lds
inc
iret
xor
pop
push
xor
cmp
add
jnp
push
jne
mov
arpl
fwait
ss
mov
adc
ljmp
mov
mov
mov
cltd
loope
int
ss
inc
ja
mov
test
jmp
dec
int3
outsb
mov
in
mov
mov
rolb
xchg
jb
test
sbb
sub
adc
stc
negb
ret
mov
mov
or
xor
pop
rcll
lea
shl
cmpsb
test
icebp
loope
pop
ja
xchg
leave
push
xchg
mov
lret
shl
dec
aam
xchg
or
add
stos
or
shl
or
notb
push
push
push
adc
xchg
pop
lea
adc
or
leave
movsl
fisttpl
mov
pop
mov
mov
lret
jmp
pop
aam
xor
out
push
inc
mov
sbb
cltd
add
movsl
dec
inc
ret
movsb
inc
sub
outsl
mov
shll
in
add
int
or
mov
add
sub
lods
adc
jge
hlt
fldcw
test
gs
ljmp
pop
add
jb
mov
mov
lret
mov
leave
loope
xor
imul
mov
out
mov
add
inc
test
repz
jl
add
mov
pop
fstl
mov
inc
push
jmp
xchg
and
cli
sub
aad
sub
std
orb
sub
aaa
aas
push
or
in
fadds
jbe
jb
cmpsb
cmp
daa
add
std
sbb
arpl
notb
add
mov
push
lock
xor
mov
sub
xor
scas
int3
lods
in
jp
inc
fwait
arpl
jp
arpl
out
scas
fstp
in
pop
xchg
inc
movsb
jno
pop
xor
lcall
xchg
int
shrb
sbb
shlb
mov
jb
in
sub
push
jno
inc
dec
pop
js
int3
dec
imul
inc
sbb
jae
xchg
fcoms
add
pop
pusha
push
shrb
movsl
mov
aam
or
inc
aas
xchg
in
jg
sbb
push
clc
rcrl
adc
in
pop
enter
fadds
jne
pop
in
sahf
test
mov
adc
fadds
shll
mov
inc
rolb
loopne
or
not
jle
add
ret
push
into
gs
or
lds
pop
and
fcompl
or
inc
pusha
sub
int
push
pusha
sub
dec
or
pop
aad
or
rcl
shlb
add
and
leave
add
popa
mov
push
xor
push
out
sub
mov
mov
pop
adc
test
jne
inc
dec
fdivrs
adc
or
jne
bound
scas
mov
and
in
lods
jbe
add
sbb
push
popa
mov
jmp
stos
ret
pop
pop
ljmp
mov
sbb
or
push
sub
jg
lretw
and
dec
in
add
cmp
xchg
sub
int
lcall
lret
add
or
and
aam
outsb
test
sbb
daa
jns
loope
mov
stos
loopne
movsl
and
lods
hlt
xorl
pop
add
and
push
xlat
enter
dec
ret
ret
aad
and
sub
mov
inc
rcll
adc
adc
cmc
scas
mov
imul
aad
push
daa
ds
popf
add
jp
lret
cmc
loope
lret
inc
jnp
dec
imul
jne
lock
rclb
mov
pop
sbb
lods
insb
cmc
mov
jge
push
mov
in
mov
cmc
out
in
pop
mov
std
jns
mov
addb
data16
divb
pop
mov
mov
lods
lods
das
pop
xchg
xchg
add
fmul
push
mov
enter
push
add
negl
mov
push
in
repz
cmc
repnz
data16
cld
pop
mov
lds
rorb
adc
adc
pop
push
push
fnsave
add
sbb
sbb
and
dec
or
pop
popf
cmc
inc
xor
fcoml
subl
cmp
mov
das
jmp
pop
mov
lods
inc
adc
add
popf
xor
pop
in
std
mov
scas
pop
xchg
adc
cmp
or
sahf
sub
and
pop
cs
lea
sub
lds
jmp
mov
je
aas
nop
andl
push
xchg
sub
lods
rsqrtps
jp
fsubs
dec
pop
sbb
mov
mov
xchg
lret
xchg
add
push
loop
pop
in
sbb
ss
int
mov
jae
cwtl
xor
mov
ja
sahf
loopne
fwait
in
imul
pushf
jb
mov
add
cwtl
mov
subb
pop
mov
ret
dec
jmp
movl
pop
negb
jae
hlt
mov
adc
jns
pop
add
add
inc
pop
bound
mov
mov
inc
lds
pop
mov
dec
aaa
sbb
jl
dec
mov
or
jo
sbb
inc
push
lods
movsl
mov
aaa
addl
dec
pop
and
sub
rolb
pop
ss
sub
cld
aam
adc
push
cmpsb
xlat
cmp
sahf
pop
mov
xchg
mov
dec
sub
addr16
jmp
test
outsb
and
dec
aad
pop
mov
movl
mov
das
mov
clc
pop
inc
add
push
inc
outsb
ret
sub
jle
hlt
or
std
inc
xchg
dec
lret
mov
push
jecxz
inc
ja
jno
add
fisubs
inc
mov
sub
inc
imul
sub
out
mov
xchg
sahf
jge
add
outsb
inc
push
cld
fidivrl
out
ret
mov
pop
outsb
xchg
jmp
fnsave
xchg
mov
scas
pop
add
shrb
fdivrl
add
pop
leave
push
xor
ds
mov
cwtl
fistl
jmp
pop
loope
mov
inc
clc
movsl
mov
rcrl
push
in
aas
outsb
popf
or
dec
int
test
push
mov
cmpsb
ret
and
cmp
in
repz
push
or
mov
adc
test
cltd
or
xorb
adc
pop
mov
jbe
pop
adc
popa
subl
dec
lds
les
sub
inc
daa
sub
int
outsb
fidivl
lcall
sbb
add
pushf
jp
dec
mov
cmc
mov
fsubrp
mov
mov
mov
sti
add
icebp
popf
int
rorb
stos
test
lret
ret
aam
push
jne
mov
sbb
sahf
mov
sarl
fwait
and
inc
mov
jmp
xchg
push
cmp
lret
enter
ja
push
pop
mov
pop
mov
lea
pop
push
mov
lcall
aas
fdivr
mov
pop
add
cmp
inc
pop
cmp
or
xor
movsb
adc
ja
cwtl
pop
mov
loop,pn
loope
ret
aad
push
mov
ss
js
movsl
xor
sub
sahf
shll
mov
pop
xchg
inc
jnp
inc
jg
xchg
dec
sbb
xchg
adc
inc
movsb
cmpl
sub
inc
sahf
jmp
cmpsl
out
shrb
push
int
mov
xchg
flds
mov
shll
es
pop
repnz
shlb
clc
or
clc
rcll
mov
pop
mov
mov
ds
push
mov
pusha
mov
fwait
movsl
rcll
fadd
push
xchg
jge
sub
xor
lds
ja
bound
shl
lahf
daa
sahf
xchg
push
shr
nop
clc
sub
ljmp
pop
xchg
jg
int3
jmp
jns
push
insl
xchg
icebp
into
or
inc
push
pop
and
pusha
dec
jae
jle
into
adc
xchg
mov
notb
movsb
dec
push
addr16
fdivl
aas
movl
sbb
mov
rcrb
add
std
jl
lods
or
push
sub
lds
stos
loopne
mov
jecxz
mov
ss
sbb
pushf
into
pop
int
loop
insl
xchg
lcall
enter
popf
add
stc
xor
test
xor
xor
popa
sarb
popa
push
push
mov
stc
adc
pop
mov
sub
test
mov
add
sub
call
jmp
push
popa
dec
imull
mov
stos
sysenter
enter
sahf
push
daa
inc
lds
movsl
imul
mov
cmp
aam
mov
adc
ljmp
inc
jmp
cmp
rorb
xlat
lret
mov
nop
mov
je
pop
clc
add
lahf
mov
mov
sti
aad
sub
fists
loope
push
clc
cmc
into
jns
mov
lds
mov
or
ja
sbb
bound
mov
xlat
movsl
jo
inc
jns
sahf
add
int
and
sti
jle
insb
lds
arpl
sub
call
cltd
fwait
sbb
popf
mov
sub
and
and
adc
repnz
sub
int3
in
lock
int3
sbb
out
adc
dec
cltd
xor
ds
push
nop
js
mov
loopne
or
aam
sbb
mov
icebp
sti
movsl
dec
cmp
nop
jnp
and
lret
lahf
movsl
mov
bound
inc
pop
jne
jns
mov
movsb
xor
in
add
push
sbb
lods
scas
dec
rcrb
hlt
in
scas
fwait
adc
inc
lods
push
or
dec
mov
xchg
xor
rclb
inc
push
cmpsb
test
pushf
shlb
js
cmp
filds
leave
mov
imulb
divl
fisubrl
or
fwait
loope
mov
rclb
cld
inc
sub
popa
fstps
pop
in
or
cvtps2pi
in
adc
fmul
or
xchg
xchg
jle
push
push
popf
leave
imul
mov
add
jle
pushf
int3
xchg
ret
orb
add
sbb
mov
sahf
jbe
mov
cmpsl
movsl
inc
ljmp
xor
in
shlb
lds
adc
cmp
pop
icebp
addr16
je
aas
insb
sti
lahf
insl
mov
and
imul
fstpt
sbb
sbb
aaa
jns
add
mov
pop
adc
jns
xchg
or
out
mov
test
pop
cli
jbe
cmp
into
clc
aas
out
cmpb
aad
xchg
inc
or
mov
push
push
fidivrl
mov
cmp
jmp
add
sahf
cmc
ret
xor
fnsave
jae
mov
sbb
cmpsl
clc
and
mov
out
mov
pushf
pop
inc
je
fwait
std
ret
xchg
pop
sbb
xlat
ss
push
mov
outsb
mov
out
cmp
and
bound
push
cmc
je
jne
data16
popa
inc
popf
in
push
dec
mov
aas
pop
mov
adc
vcvttss2si
mov
push
jle
pop
pop
test
fidivl
stos
into
scas
lret
out
test
fdivl
push
mov
sub
subl
insb
imul
rol
inc
mov
cmpsl
dec
cwtl
sub
lods
adc
inc
outsl
ds
shlb
popl
pop
mov
lock
sub
leave
inc
mov
inc
fldcw
loopne
test
jbe
jle
clc
sbb
testb
test
add
mov
repnz
out
dec
mov
jmp
dec
adc
in
hlt
xchg
rolb
icebp
movsl
inc
cmp
xor
push
lret
fidivl
xchg
or
push
push
sbb
lahf
add
in
cli
and
and
testl
popa
add
repnz
movsl
lds
xchg
mov
ret
xchg
jne
cmpsl
inc
test
and
adc
clc
and
scas
call
dec
xchg
in
add
pop
test
mov
clc
js
add
jne
add
inc
jecxz
pop
lret
nop
scas
add
ficoml
push
mov
jnp
sbb
rolb
sbb
pop
mov
lods
add
mov
push
push
mov
or
enter
mov
push
jle
aam
add
sbb
inc
dec
enter
in
cli
and
jb
out
xchg
lret
sbb
sub
pop
inc
std
pop
xchg
ret
pop
push
call
outsl
inc
sti
iret
mov
sbb
icebp
sbb
jb
mov
lea
inc
imul
fstpt
mov
arpl
lcall
dec
scas
in
les
sbb
test
push
pop
les
adc
jns
cli
outsb
sbb
inc
inc
mov
daa
jp
sbb
adc
movsb
mov
fsubrs
push
mov
add
jns
jecxz
in
outsl
push
or
and
nop
xchg
cmp
lds
inc
sbb
push
mov
imul
sub
test
std
in
xchg
decb
jns
sub
insb
lds
jo
fadds
lahf
outsl
xchg
and
add
xchg
xchg
mov
sbb
jne
adc
mov
pop
or
mov
add
push
popa
fs
out
sbb
and
test
fcomps
fdivl
movsb
lret
mov
lds
pop
push
pop
std
jge
lock
adcb
pop
inc
inc
mov
enter
mov
cwtl
inc
ljmp
pop
pop
ret
out
pop
fimuls
inc
sbb
cmpsb
sub
insb
sarb
loop
inc
hlt
add
lcall
movsl
fiaddl
pop
mov
cltd
into
int3
mov
mov
sub
pop
icebp
xchg
or
rcrb
lahf
sbb
adc
xchg
in
dec
mov
jmp
imul
push
inc
mov
xchg
xchg
and
and
or
push
clc
mov
mov
gs
arpl
add
mov
rcrb
and
mov
cmpsb
pushf
or
or
sarl
int
sbb
popa
aam
call
xchg
ja
cwtl
pop
pop
ret
sbb
mov
scas
inc
cmp
lcall
and
adc
jne
xlat
mov
vcvtpd2ps
xchg
add
jle
adc
in
add
xor
movsb
shr
push
jp
sahf
sbb
xor
test
mov
xchg
lret
int
inc
mov
sbb
loope
mov
dec
sub
jge
idivb
mov
xchg
lods
in
push
cmp
lods
mov
aad
mov
mov
outsb
lahf
mov
arpl
jp
push
popa
daa
sbb
rol
push
scas
shrb
jge
mov
cmpsl
into
test
add
inc
push
adc
push
mov
dec
test
cmp
insb
xchg
mov
xchg
lret
fimull
add
ja
repz
ret
xchg
js
pop
pop
orb
pop
int3
jge
mov
aaa
add
ja
inc
xor
sbb
insl
push
sbbl
and
sbb
test
sahf
xor
xchg
add
cltd
andb
int3
out
xor
movsl
add
fildl
ss
aaa
out
negl
das
enter
adc
pushf
hlt
mov
jge
mov
lea
cmp
sarl
adc
mov
pop
cmp
mov
add
movsb
fistpl
fwait
sub
lds
push
jmp
cmp
lods
fistl
mov
pop
push
fistpl
and
mov
push
cmp
jle
jnp
imul
scas
push
mov
mov
push
xchg
or
mov
es
divl
mov
lds
lods
pop
pushf
gs
jae
out
cmpl
cmpsl
xor
rclb
and
fwait
or
leave
push
daa
mov
inc
shr
mov
stc
inc
jae
sbbl
or
cwtl
outsb
add
jmp
dec
stc
mov
fistps
cmc
xchg
push
inc
cmp
mov
jmp
lock
and
dec
dec
fsub
add
fwait
rcrl
movl
loop
push
sbb
adc
pop
adc
or
sub
jo
lds
nop
mov
xchg
lods
cli
or
scas
repnz
in
mov
xchg
inc
rsm
sbb
or
jmp
and
in
int
xchg
rorb
xorl
mov
push
pop
lock
or
and
pop
pop
xchg
into
mov
negb
or
pushf
jge
mov
fld
and
test
mov
outsb
jbe
mov
popa
xchg
mov
in
mov
push
sub
lret
dec
xchg
test
out
dec
rcrl
xor
sbb
jae
push
xchg
test
dec
adc
iret
notb
pop
in
movsl
jp
or
inc
punpckhdq
mov
push
push
mov
mov
outsl
test
xor
ja
lods
jb
push
xor
shr
add
popf
ja
test
lods
aad
sbb
mov
jmp
test
pop
pop
lods
adc
out
mov
jle
fistpll
mov
or
lret
pop
aad
dec
fistpl
inc
xchg
push
mov
adc
cltd
jmp
imul
or
inc
sbb
inc
jne
fcom
leave
stos
adcl
or
jnp
mov
sbb
test
stc
and
xchg
test
push
into
dec
scas
aam
rorl
leave
pop
cltd
mov
mov
stc
mov
inc
les
aaa
addr16
aas
cwtl
and
mov
popa
leave
jmp
or
ficomps
hlt
test
cwtl
adc
mov
push
pusha
sbb
pop
fwait
xlat
in
fildl
cmpsb
jp
mov
cwtl
inc
push
cmp
fadds
jbe
testb
xor
sub
int
loopne
dec
xlat
and
xlat
mov
inc
sbb
push
arpl
add
push
cmpsl
std
dec
test
mov
xor
jns
movsb
pop
add
daa
aaa
sti
lods
mov
nop
stc
insb
fstpt
outsb
add
rolb
cmpl
mov
xchg
dec
insb
scas
movsl
add
das
xor
imul
lods
out
jbe
and
leave
mov
mov
mov
xchg
dec
push
imul
sub
inc
ds
xchg
xor
mov
pop
push
sbb
lds
sbb
fildl
mov
mov
aaa
in
test
xorps
sahf
dec
insb
push
mov
mov
dec
cmpsl
cmp
push
pop
or
xchg
cmp
mov
fiaddl
mov
mov
js
cs
push
cmp
js
adc
inc
mov
mov
inc
sbb
sbb
add
test
addr16
xchg
stc
inc
and
mov
inc
cmpsb
fs
inc
dec
lods
shlb
dec
jecxz
rolb
outsl
daa
lret
sbb
xor
rcrb
sbb
daa
jge
outsb
ljmp
cmp
cs
in
call
aad
es
iret
imul
xor
popa
jb
add
or
ljmp
sbb
cmp
scas
inc
mov
scas
test
push
lcall
push
push
shlb
jae
mov
test
mov
fwait
lcall
aaa
adc
in
faddp
push
add
push
pop
lea
push
rcpps
repz
adcl
add
add
xchg
adc
mov
push
jmp
movsl
adc
pop
into
dec
mov
dec
jb
mov
mov
dec
retw
das
lret
xchg
mov
into
mov
out
das
inc
popa
adc
push
sub
stos
dec
dec
stc
popa
fisubrs
push
icebp
and
arpl
sti
fnclex
push
pop
jb
loop
adc
movsb
push
ss
fisttpll
sub
mov
mov
adc
cli
cmp
cmovo
jb
addr16
inc
in
fbstp
jg
fcomps
sub
mov
in
clc
xchg
in
scas
jle
cmp
xchg
dec
sub
ja
pusha
scas
out
fcmovne
and
push
insl
jg
fildll
xor
mov
mov
or
xchg
das
scas
dec
push
shr
mov
fs
mov
or
jl
shr
cmp
dec
push
inc
rcl
push
test
fistl
cmpsb
ficompl
sbb
cwtl
or
jns
das
jne
int3
pop
dec
stos
lret
mov
mov
mov
adc
mov
push
xlat
and
add
push
or
fsubr
xor
pop
int
dec
cld
shl
xchg
cmp
repnz
jmp
mov
jp
pop
xchg
outsl
int
push
adc
lods
mov
hlt
outsl
std
pop
adc
sarb
inc
popf
fwait
mov
mov
mov
pop
mov
dec
stos
mov
rcr
roll
push
pop
jg
cltd
int
adc
loop
hlt
popa
dec
pop
cli
pop
xchg
xchg
daa
push
jecxz
lods
int3
mov
pop
int
sahf
add
pop
xchg
pop
push
jae
dec
add
jmp
adc
in
or
or
stos
mov
sub
roll
aad
sub
add
push
das
dec
lea
mov
sbb
dec
test
inc
lcall
pop
test
leave
pushf
lcall
sub
aas
cwtl
sahf
xchg
ja
test
pop
test
daa
xchg
push
pusha
cld
cld
sub
dec
mov
pop
inc
push
cmp
inc
xor
or
sub
add
test
mov
cwtl
mov
dec
and
push
fwait
nop
push
in
movsl
mov
iret
outsb
inc
push
sub
imulb
jb
ret
test
inc
push
out
dec
push
adc
es
ja
lret
clc
mov
mov
dec
pop
xchg
stos
mov
outsb
mov
jnp
stc
pop
scas
sbbb
jecxz
sub
movsl
out
xchg
sbb
and
dec
in
movsl
push
push
or
sbb
xor
cmp
dec
pop
jne
fisttpll
fwait
jmp
outsl
fldt
inc
add
dec
out
push
lods
dec
ficomps
mov
adc
cmp
loope
aad
sbb
in
iret
dec
cmp
jae
es
add
stos
mov
aas
cmp
movsl
fdivrp
adc
inc
popa
lahf
in
push
sar
xchg
out
push
pushf
xchg
inc
jae
xchg
ficompl
pop
fstpl
into
mov
rcr
lods
mov
add
dec
xchg
ret
mov
test
xor
sbb
cwtl
ja
jmp
or
mov
sbb
fstl
push
jl
mov
movsb
inc
insb
out
repnz
pop
bound
and
mov
adc
test
lcall
cmp
lods
outsb
lahf
adc
in
in
loop
fstpl
rcl
and
jo
mov
pop
in
xchg
sbb
cmpsl
pop
lea
lea
repnz
xor
sub
arpl
xor
rol
xor
sub
dec
cltd
jns
add
mov
lds
add
lcall
adc
pop
push
cmp
or
lcall
scas
jb
inc
cmc
ja
dec
dec
cmpsl
jnp
mov
into
in
bound
loope
jg
jle
dec
xchg
dec
pop
repz
cwtl
inc
xor
add
lds
pop
inc
sbb
mov
mov
mov
xchg
xchg
sbb
adc
push
or
repnz
xlat
roll
inc
pop
loope
lods
test
cmc
jae,pn
or
cmc
mov
fadd
lahf
pop
and
jge
add
outsb
negb
jp
mov
mov
aas
fcomps
repz
mov
sbb
outsb
add
pushf
sbb
pop
popa
movsb
pop
movsb
and
lods
inc
xchg
pushf
or
inc
js
pop
ja
xor
xchg
scas
cmpsl
and
cmpsb
sbb
idiv
adc
int
jle
xor
imul
mov
cmpsb
popa
bound
imul
cmp
rorb
pop
mov
jns
push
cmc
dec
ss
cmp
shrl
add
push
xor
mov
fdivr
xor
mov
scas
loope
add
sahf
xor
xlat
movsl
jno
ljmp
pusha
ror
xor
cmp
shll
xchg
jns
xor
xor
int
imul
xlat
mov
cmp
out
lret
arpl
sbb
loope
int
loopne
push
dec
sub
mov
adc
fwait
pop
mov
cmp
repnz
cmp
sahf
push
jmp
addl
shlb
test
icebp
daa
mov
jbe
mov
and
adc
fdivrl
das
movsb
divb
loopne
sbb
inc
cmpsb
ss
test
mov
push
xlat
movsl
jl
ret
or
pop
movsb
add
lods
enter
mov
mov
or
push
mov
lcall
pop
bound
jns
test
aas
lahf
jo
pushl
popf
scas
jp
push
and
test
fwait
lret
arpl
daa
pushf
mov
daa
jnp
cwtl
xor
inc
loope
shl
cmp
xchg
in
into
punpckldq
xor
jl
xchg
xchg
xor
sub
pop
jnp
outsl
sub
jge
inc
inc
sahf
pop
test
pop
push
jg
das
lahf
cli
lds
loope
out
mov
fs
cmp
std
insl
and
call
aam
xchg
mov
in
jge
out
xor
cmc
cmp
cs
add
outsl
cmp
xchg
imul
repnz
pop
adcl
dec
repz
outsb
xchg
inc
xor
stos
xor
into
lods
in
mov
leave
shrb
fldt
clc
andb
inc
push
push
xor
fadds
pop
or
ficomps
bound
add
add
loopne
xchg
movsl
mulb
dec
mov
cltd
inc
mov
push
add
pop
mov
sbb
sbb
mov
xchg
push
sahf
pop
mov
fimull
test
sub
scas
ja
cltd
add
cs
inc
adc
lds
js
sub
sub
out
addr16
movsb
fsts
dec
pop
mov
pop
or
insl
cwtl
movsl
shrl
int
and
or
mov
fcomps
cmc
aad
sbb
cltd
or
or
aaa
hlt
int
add
ja
push
dec
loopne
pushf
lods
lods
lds
insb
mov
pop
sub
imul
push
mov
xchg
push
pop
dec
cmp
mov
mov
cmp
jno
mov
mov
iret
fwait
bound
push
add
loopne
cmp
push
lds
push
push
lcall
int
aad
ret
mov
les
adc
nop
mov
aaa
fstpl
mov
inc
xchg
into
outsb
out
sarl
lcall
jno
mov
and
imul
in
xchg
or
jle
push
pop
mov
notl
jne
fst
pop
addr16
sbb
adc
push
cmc
lods
mov
jle
dec
lcall
lds
jb
cmp
pop
cld
push
jne
jno
arpl
inc
add
xor
jmp
int3
sahf
outsl
push
adc
enter
mov
mov
aas
dec
push
je
mov
ret
lods
and
div
into
inc
mov
loopne
icebp
dec
adc
xorl
cli
xchg
cmc
mov
mov
lahf
in
cmpsb
int
xchg
jmp
pop
push
mov
sub
xchg
push
mov
mov
push
jecxz
lea
cmp
fwait
add
nop
loopne
sub
xchg
imul
mov
xor
int3
sbb
jge
sub
jge
stc
clc
stc
xchg
xchg
loopne
movsb
sahf
ret
add
mov
lds
mov
adc
aad
ret
test
push
jge
xor
sbb
xchg
movsl
lahf
xchg
mov
jg
aaa
adc
mov
jo
mov
paddd
mov
cmpsb
add
neg
xor
mov
repnz
das
mov
dec
frstor
push
stc
mov
push
in
mov
popa
repnz
lea
hlt
jns
fisttps
ss
fwait
inc
pop
sar
dec
cmp
jne
fidivrs
insl
pop
pop
stos
pop
mov
xchg
add
push
fcomps
les
aas
add
into
loope
mov
adcl
mov
cmpl
movsl
xchg
aad
dec
int
lds
xchg
cmp
jae
add
cmpl
ficoms
pop
sbbb
pushf
cmpsl
ret
add
inc
adcb
xor
push
pop
pop
inc
js
testl
repz
call
fwait
cmpl
cmp
adc
jbe
inc
bound
jbe
popf
xor
and
popa
hlt
and
idivb
mov
add
pop
mov
sbb
mov
loop
mov
lods
add
lret
loop
fisttps
pop
jmp
xchg
and
mov
push
lea
rcrb
movsl
test
inc
shll
in
test
or
push
aam
pop
hlt
inc
mov
mov
fcoml
mov
lcall
adc
add
arpl
sbb
loopne
cmp
mov
pushf
mov
add
hlt
mov
mov
iret
rorl
insl
pop
aaa
daa
outsb
movsb
fldt
mov
rcrb
movsb
bound
lods
pop
or
stc
inc
movsl
push
repnz
cmc
sbb
mov
sbb
cwtl
ja
dec
adc
ror
cmp
and
lret
pop
call
ja
mov
sub
add
jns
les
movsl
inc
fs
popa
xor
sti
push
fistl
in
xor
inc
adc
mov
cmpsl
scas
push
insl
jecxz
or
jo
jnp
ret
sbb
mov
cmp
and
test
pop
fwait
mov
pop
shl
jb
adc
cmc
cmpb
add
ja
incb
push
popf
xlat
push
mov
jne
sbb
or
pop
outsb
fwait
fcomp
sahf
hlt
and
xchg
sbb
imul
sbb
int
movsl
mov
cmp
pop
lods
mov
out
shrl
mov
mov
in
pop
pusha
sarl
fwait
xor
loopne
lret
cmp
jle
and
popa
jle
adc
movsl
xor
adc
xor
inc
xchg
loopne
je
push
ja
lods
xchg
fdecstp
mov
sbb
inc
push
mov
int
int3
imul
push
sbb
test
lds
mov
cltd
movsl
inc
daa
rcl
adc
shlb
mov
inc
outsl
push
mov
gs
fildl
adc
pop
fwait
xor
roll
icebp
cltd
push
inc
outsb
repnz
ficoms
lea
mov
xor
xor
in
dec
sbb
mov
shl
sbb
ror
sub
fistl
aaa
adc
push
pop
hlt
add
daa
inc
std
mov
mov
jmp
das
ja
pop
fisttpll
into
mov
add
out
sub
and
orl
mov
inc
stc
popf
jno
sub
pop
test
movsl
inc
add
ja
int
mov
fbld
mov
imulb
or
or
rclb
lods
jo
and
xor
inc
outsb
or
inc
xchg
clc
popf
lods
pop
push
shl
lds
call
cmp
adc
into
mov
pop
jmp
orl
call
add
lods
std
fsubr
mov
xchg
push
aas
inc
pop
inc
adc
stos
lds
xchg
lret
stc
mov
pusha
arpl
sub
sbb
fs
or
jle
popf
or
xor
jns
adc
jnp
inc
in
adc
in
popf
cmpsl
and
inc
mov
mov
lds
repnz
and
lods
arpl
cld
inc
cmp
adc
lcall
pop
cmpb
jae
clc
inc
pop
cld
mov
push
cmp
fdivl
inc
add
ret
xor
dec
fisttpll
sub
push
dec
je
mov
push
inc
mov
popf
dec
dec
daa
int
aaa
outsl
jmp
mov
xchg
jo
lods
mov
inc
inc
sbbl
cli
loopne
add
xlat
fwait
sbb
aaa
xor
cmpsl
xchg
jae
aas
adc
xor
in
into
xchg
or
and
ss
ficoml
sub
int3
xchg
and
in
jg
or
jae
mov
xchg
sarw
sub
lds
cmp
daa
dec
sub
roll
clc
sar
mov
pop
mov
inc
aaa
xor
xchg
pop
inc
lods
js
cld
in
mov
adc
pop
fwait
cltd
dec
xchg
out
test
pop
dec
inc
pmulhw
cmpsl
mov
movsl
inc
mov
mov
push
add
lds
mov
in
leave
xchg
pop
in
sti
lds
roll
inc
push
xor
xchg
jmp
jp
fmulp
outsl
mov
inc
icebp
rcll
xlat
mov
sub
shr
xchg
xor
mov
lea
or
jns
fwait
addl
xlat
icebp
push
scas
xor
divb
mov
pop
mov
lds
mov
jp
sub
fcmovb
fsubr
inc
ret
inc
cmc
daa
sarb
fwait
xor
aad
ret
mov
adc
add
leave
xchg
pop
ja
lods
test
shll
outsl
xchg
xor
inc
mov
movsl
add
hlt
sub
pop
push
pop
pop
testb
adc
retw
roll
jle
shl
out
or
xorb
arpl
cmpsl
or
push
aaa
mov
pop
push
sub
insb
mov
cmp
sahf
dec
mov
push
adc
aaa
sar
scas
leave
aad
or
lret
in
jl
cld
lea
lahf
rolb
in
adc
dec
jge
cs
mov
lds
cmp
xor
jl
xchg
popf
aam
sbb
arpl
xchg
push
dec
xchg
arpl
mov
cmp
cli
hlt
sahf
fcoml
mov
cmp
test
pop
mov
adc
mov
ret
pop
nop
pop
sub
es
jmp
xchg
add
dec
push
cs
dec
sbb
out
cmpsl
xchg
repz
in
ret
cmc
fdivs
or
dec
loopne
test
xchg
dec
mov
call
hlt
enter
xchg
lret
test
jle
mov
fidivs
sbbb
inc
sub
fistpl
cltd
mov
jne
mov
xchg
add
lahf
idivb
fistl
jo
pushf
or
mov
xchg
enter
dec
cmp
jmp
cltd
cwtl
cmpsb
xor
jecxz
jecxz
insl
push
cmp
mov
xchg
push
add
add
push
icebp
push
sub
xchg
nop
adc
pop
mov
jne
cmpsb
fdivr
push
xor
or
daa
or
in
int
mov
or
sub
and
test
movsl
leave
adc
jno
psubusb
jge
sbbl
in
adc
mov
pop
pop
cmc
ja
sbb
cli
pop
add
out
adc
push
std
loope
xor
push
adcb
mov
shlb
push
aad
les
insl
cmp
jg
or
and
jg
dec
sub
cmpsl
sub
push
loope
imul
aaa
inc
mov
mov
push
cmp
test
adc
mov
jne
add
popa
sbb
sbb
mov
cs
out
sbb
add
xor
sbb
dec
inc
sub
cmp
test
xchg
sbb
push
jae
lods
cmpsl
xor
add
sub
xor
hlt
sub
or
pop
mov
or
pop
push
mov
or
jns
in
aas
lds
pop
or
int
sahf
xchg
pop
in
push
pop
sbb
adc
imul
fwait
cmc
movb
xchg
jge
pop
pop
cmovbe
add
adc
cmp
inc
xor
jne
and
imul
inc
xor
mov
add
pop
sub
fidivl
outsl
add
cli
and
and
std
cli
das
inc
pop
jb
loop
stos
fwait
pop
movsl
sub
dec
lea
jbe
icebp
mov
jmp
stos
adc
jmp
cmp
jmp
aaa
inc
rolb
loop
mov
mov
addl
xchg
mov
in
pop
adcb
in
add
bound
push
hlt
pop
xchg
adc
out
inc
insb
sbb
cmp
lahf
icebp
xchg
movsw
mov
ret
pop
xchg
stc
les
sbb
sbb
notl
pop
dec
mov
lcall
loopne
lods
inc
or
sub
add
lret
pop
cmp
or
hlt
inc
jae
or
mov
decl
mov
add
dec
push
add
sahf
hlt
sub
mov
sub
enter
sub
lret
in
dec
sti
adc
pop
outsb
dec
fistpll
jne
outsl
int
pop
mov
scas
pushf
pop
add
aad
push
aad
stc
movsl
xor
outsl
or
test
xchg
adc
outsb
inc
out
pop
xchg
jecxz
ja
sub
test
outsb
dec
pop
cmp
mov
pop
jb
out
lahf
lds
sahf
inc
je
cmp
adc
ficomps
and
lds
addr16
xor
adc
mov
iret
outsb
bound
bnd
cmp
das
call
sti
stos
test
add
or
ja
xor
and
and
aad
outsl
mov
lds
cwtl
push
fwait
cli
das
mov
xchg
sbb
add
out
mov
cmp
vdivss
outsb
or
inc
or
add
shrl
add
pop
subb
jmp
fdivs
mov
pop
push
stc
adc
bound
add
cmp
movsb
pop
or
aas
sbb
mov
push
ret
adc
ja
jne
mov
ret
push
pop
inc
inc
inc
mul
test
xor
mov
shlb
cltd
in
daa
lds
add
jp
fldl
popa
test
lock
mov
in
sub
repnz
cltd
sbb
aad
int3
fiadds
sbb
ja
ret
push
mov
push
lds
jne
ficoml
sub
out
sub
repz
push
xchg
pushf
xor
jnp
pop
inc
mov
inc
lret
or
daa
daa
mov
imul
inc
sbb
hlt
cmc
xchg
lret
into
lds
das
push
or
es
popf
xchg
cmp
into
xchg
scas
xor
mov
pop
fwait
adc
xchg
ret
les
ja
pop
xlat
subl
add
add
push
and
pusha
cmpsl
outsl
insb
rolb
xlat
pop
cmpsb
inc
add
pop
fimull
cltd
or
adc
mov
dec
shlb
imul
call
test
ret
adc
adc
fldl
ds
ret
cmp
in
add
mov
ja
dec
adc
incb
std
cmp
and
bound
lock
rorl
sub
mov
clc
push
pop
in
mov
scas
and
or
lods
dec
lock
dec
inc
insl
popa
mov
pushl
cmpsl
or
frstpm(287
mov
movsb
xor
sub
pop
adc
xchg
inc
mov
and
push
fisubl
inc
xor
and
insl
int
or
mov
pushf
push
sub
dec
std
insb
mov
xor
movsb
iret
stos
mov
jmp
dec
sbb
lahf
mov
ja
push
cmpb
stos
aas
sub
dec
cmp
mov
aad
cli
outsl
xchg
pop
push
xor
lds
sahf
repz
pop
lods
jb
or
clc
rcrl
push
sub
push
mull
mov
mov
test
lret
dec
pop
jp
pop
adc
lds
inc
pop
add
pushf
arpl
jne
loop
jg
stos
adc
push
daa
sti
inc
stos
add
mov
or
jae
lds
xchg
bound
daa
adc
add
lcall
in
loope
faddl
mov
xor
vmovaps
dec
dec
sahf
pop
fs
fwait
stos
adc
mov
hlt
xlat
lahf
push
lret
fstpt
ljmp
pop
test
sbb
add
jmp
mov
in
add
sti
lcall
sub
mov
in
js
add
mov
cltd
int
jae
inc
ljmp
ss
dec
call
jg
push
cli
xchg
jbe
lods
and
sbb
xchg
mov
or
mov
outsl
jle
xchg
ljmp
dec
sbb
div
push
mov
orb
xchg
xchg
out
leave
xorb
push
push
cmpsl
rcr
or
hlt
sbb
movsl
sbb
push
sbb
mov
push
pop
sub
lds
dec
or
sbb
sbb
xor
pop
lret
push
cmpsl
in
xor
lahf
push
pop
nop
push
dec
ret
and
orb
por
lret
sbb
sbb
popa
fcoml
jne
dec
push
cmp
enter
cld
inc
adc
cmp
aam
shll
cmpsl
cmp
dec
and
rorb
mov
popa
push
stos
fdivrs
rcr
cmp
jle
xor
push
into
push
push
xchg
fnstcw
outsb
imul
push
cld
rcll
lahf
popf
mov
mov
mov
lds
imul
mov
test
mov
fwait
bnd
inc
pop
jle
dec
mov
push
inc
sbb
mov
rol
pop
mov
pop
mov
movsl
adc
mov
xchg
mov
iret
mov
lret
rcrb
scas
int3
pop
dec
mov
and
push
xchg
mov
ja
sahf
ja
shlb
pop
xor
mov
mov
sbb
xor
imul
mov
mov
call
adc
push
mov
in
clc
xlat
push
mov
cmp
loop
clc
jns
movsl
movb
ds
out
imul
fsubr
xchg
pop
add
dec
cs
cmc
std
dec
adc
inc
jmp
cld
adc
or
out
fwait
mov
in
icebp
lds
xchg
mov
inc
mov
lods
mov
movsl
adc
sahf
sahf
inc
xchg
hlt
push
aad
add
cs
pop
inc
in
jns
leave
cmp
dec
scas
jo
dec
movsl
xor
test
xchg
pop
sahf
lods
or
cmp
xor
mov
inc
xchg
or
out
xchg
mov
daa
xchg
mov
cld
call
dec
dec
adc
outsl
pop
insl
xor
mov
push
cmpsl
pop
es
or
cmpsb
enter
and
imul
or
sbb
mov
or
push
add
adc
fcmovnu
mov
sub
pop
aad
outsl
lods
clc
push
imul
test
mov
xchg
and
or
rorl
mov
movsb
mov
mov
cwtl
or
pop
add
jne
mov
adc
cmp
pop
test
fwait
sbb
pop
push
push
imul
mov
movsl
dec
mov
push
lret
int
lcall
nop
ret
pop
add
movsl
xchg
mov
dec
into
add
mov
cmpsl
push
xor
inc
sub
mov
test
lahf
mov
rclb
pushf
outsb
jns
pop
hlt
lock
nop
xlat
pop
hlt
adc
fistps
dec
add
rcrl
sbb
imul
push
xchg
mov
nop
xchg
and
inc
jnp
push
gs
push
xor
xchg
pop
cmp
mov
xchg
and
mov
ficoml
sbb
shlb
pop
or
mov
mov
loope
pop
out
add
fcompl
inc
subb
repz
cwtl
mov
clc
cmp
ja
xchg
into
movl
adc
xchg
and
stc
pop
xchg
cmp
add
test
scas
fdivs
test
lods
lods
xor
lods
lds
inc
into
pusha
jae
mov
inc
lret
push
mov
xorl
les
hlt
jl
sbb
jb
jae
cwtl
arpl
outsb
xchg
ficoms
cmp
clc
leave
xchg
push
sar
pop
cli
mov
mov
lods
add
stc
or
or
rcll
testb
pop
setle
subl
inc
xchg
xchg
mov
push
movsl
shr
hlt
clc
sbb
repnz
mov
mov
insb
pop
push
addr16
jne
xchg
mov
xchg
or
sbb
sahf
scas
cmp
test
ja
fcompl
mov
lret
outsb
and
fs
dec
xchg
lahf
sub
test
lds
mov
or
cmp
cmp
adc
pop
jns
mov
data16
mov
inc
ficompl
and
daa
adc
xor
jae
cmp
mov
sbb
pop
push
inc
fwait
and
adc
loope
in
xchg
pop
dec
fwait
and
cmp
dec
rolb
ret
scas
orl
in
xchg
pop
sti
fwait
outsl
or
rcrl
mov
pop
pop
mov
outsl
dec
pusha
fadds
dec
dec
fidivs
jbe
imul
adc
frstor
cmp
data16
dec
cs
daa
in
mov
cli
test
mov
and
or
jl
xchg
rcrb
or
push
push
jo
xchg
int3
adc
pop
sbb
push
out
pop
sub
aas
pop
arpl
mov
cmp
jnp
pop
js
stos
xor
jns
jns
aas
mov
lret
movsl
incl
jl
push
adc
je
shll
adc
inc
or
outsl
dec
cmp
scas
add
fnstenv
aam
fcoms
loope
movsb
inc
cmpsl
int3
fldenv
push
arpl
xchg
scas
cmp
fisttps
mov
cmp
imul
pop
push
stos
out
fxch
dec
fstl
stos
cld
sbb
or
hlt
inc
clc
mov
aaa
dec
inc
mov
dec
xor
or
popa
or
cmpsl
jle
mov
mov
lds
dec
int
inc
outsb
js
rol
mov
imul
push
xchg
fwait
dec
pop
fcomip
int
jns
in
in
stc
pop
idiv
fbld
mov
jecxz
scas
inc
or
mov
dec
pushf
int
xchg
stc
mov
sbb
and
cmp
mov
or
rol
arpl
jle
movsl
lods
mov
pop
add
ss
mov
int3
push
aam
fldt
lods
push
lods
add
test
lret
test
mov
mov
rcrb
or
sbb
mov
fnsave
pop
jo
loope
movsl
popa
hlt
pusha
adc
sub
enter
lds
sbb
mov
movsb
add
sbb
popa
andb
adc
mov
adc
mov
outsb
jmp
fdivrs
xchg
scas
rorl
lods
jne
add
jle
insl
push
inc
clc
in
cmpsl
lods
movsl
pop
leave
test
sbb
xchg
call
sti
add
push
push
xchg
popf
push
mov
ss
push
push
add
mov
aad
inc
xchg
cs
aam
adc
inc
add
stos
stos
mov
fstp
out
cmp
and
sahf
push
jle
cltd
mov
or
add
cmp
fwait
bound
add
insl
dec
incb
int
and
popf
mov
mov
std
adc
pop
xor
push
pop
push
dec
xchg
pop
cwtl
pop
jae
ja
int3
mov
outsb
repnz
add
cmpsb
cmp
rcrb
jmp
xchg
je
xlat
lock
mov
insl
ret
inc
dec
adc
mov
into
jns
mov
aaa
cmp
loope
in
lds
popa
decl
or
les
lods
sbb
mov
adc
cmp
and
in
test
mov
stos
xor
cwtl
mov
add
movsl
in
movsl
outsb
pop
dec
mov
inc
dec
arpl
cmp
scas
pop
adc
and
fildll
shll
pop
pop
popf
mov
add
sahf
mov
sahf
push
int3
dec
cwtl
dec
xlat
mov
sub
sub
jle
cmpsl
sbb
mov
add
mov
push
fstps
sub
add
insb
movsl
add
aas
lret
sub
sub
dec
in
add
sbb
clc
dec
sbbl
jnp
scas
insb
movsb
mov
mov
imul
and
inc
clc
xor
test
fistpl
les
into
dec
int
mov
sbb
pop
int
mov
or
ss
sbb
mov
lret
stos
in
leave
lock
rolb
and
scas
popf
aas
sbb
mov
mov
xor
loop
mov
std
lahf
outsb
push
test
mov
daa
inc
aad
add
push
sbb
push
daa
stos
aas
mov
out
cmpb
or
add
rclb
mov
xadd
or
xchg
movsl
ja
pop
jnp
push
pop
push
shr
daa
mov
or
xchg
in
mov
jge
xchg
cmp
xchg
and
push
jne
in
loopne
mov
lds
sbb
in
or
or
pop
push
sbb
cmp
inc
lcall
cmp
adc
rorb
imul
inc
loope
test
jns
das
or
dec
test
ss
mov
push
rol
ss
test
mov
dec
push
or
adc
mov
cltd
xor
in
xor
mov
in
scas
addl
loopne
adc
mov
inc
out
imul
mov
loop
sbb
test
pushf
pop
xor
dec
inc
mov
mov
aam
hlt
add
xchg
insl
cmp
stos
arpl
inc
idivb
gs
andl
stos
movsl
inc
faddp
frstor
lds
push
xor
ss
scas
mov
mov
in
push
insb
cltd
jb
loope
scas
xchg
jmp
das
xchg
sbb
mov
negb
lock
in
lret
cmp
mov
adc
popf
fwait
movsl
cmp
pop
fs
mov
add
cld
inc
sbb
sbb
inc
dec
out
pop
mov
and
ljmp
and
in
push
shr
xchg
popf
sbb
mov
sub
inc
pop
xorl
fmul
adc
xchg
stos
lods
and
jg
xchg
test
sbb
vrcpps
loopne
ret
movsb
mov
mov
push
mov
loopne
mov
stc
out
cmpsb
clc
mov
xchg
or
je
inc
subl
mov
aaa
hlt
pop
lret
into
or
stos
movsl
mov
lock
ljmp
pop
mov
lret
outsl
cmpb
leave
mov
add
stos
fcomps
xlat
pushf
adc
nop
or
lods
movsl
ret
or
lea
push
mov
lea
add
in
lds
adc
loopne
ljmp
jne
pop
ret
les
leave
mov
rcrb
pop
adc
or
cmpsl
cmp
icebp
or
xor
test
in
and
shrb
aaa
inc
fistl
sub
jae
lret
rcl
or
and
enter
mov
adc
mov
xchg
push
cli
mov
push
sub
mov
repz
sub
mov
adc
mov
pop
test
movsl
inc
daa
clc
cmp
orb
loope
loop
or
aam
hlt
inc
jl
push
or
pop
sbb
add
pusha
jo
stos
jno
add
xor
add
lret
scas
push
shrb
jo
shll
mov
adc
xor
sbb
sub
sbb
mov
lds
sti
les
dec
lds
fcmovnb
adc
jbe
xor
jle
pop
stos
arpl
test
dec
arpl
mov
and
stos
pop
into
lods
cli
fildll
outsl
push
repz
mov
fldcw
mov
shlb
loope
pop
bound
daa
out
orb
jbe
xor
daa
jle
mov
xchg
test
inc
lds
repz
or
in
mov
pusha
call
dec
push
mov
dec
push
faddl
add
inc
loopne
shlb
dec
cmp
add
fisubrs
adc
orb
leave
out
cmc
dec
pusha
adc
ja
sarl
push
dec
sub
push
aas
int
inc
mov
mov
and
cltd
xor
mov
pop
pop
xchg
inc
out
repz
imul
sbb
aad
cmpsb
mov
out
cli
and
inc
pop
xor
mov
mov
fnstcw
lret
pushf
clc
fstps
and
sub
push
sub
mov
dec
dec
xor
push
stos
icebp
fisttpll
iret
add
pop
add
xor
mov
stc
adc
addb
pop
adc
xchg
push
mov
enter
imul
mov
aaa
fadds
inc
jmp
mov
xchg
jl
mov
inc
les
xchg
std
out
sahf
cmpsl
dec
mov
lods
insb
cmp
insb
push
lea
or
repz
dec
fcomps
push
mov
leave
pop
hlt
pop
aaa
cmpsl
lea
aaa
mov
add
scas
loop
or
adc
mov
out
sub
leave
cmpsb
sbb
mov
mull
aaa
inc
cltd
mov
in
aas
push
mov
int3
add
pop
scas
iret
jmp
andl
jnp
push
mov
pop
mov
je
rcr
mov
popa
out
mov
aaa
icebp
xchg
icebp
cld
dec
hlt
and
aad
data16
in
aaa
xchg
inc
ja
cmc
jmp
fcoms
popf
mov
cwtl
pop
in
xchg
and
insb
cmpsl
push
cltd
xchg
cmpsl
or
jle
outsb
push
and
sbb
ret
sub
xchg
dec
mov
dec
push
jp
pop
push
into
loope
mov
in
lea
dec
or
mov
mov
or
dec
sbb
mov
jmp
cmp
sub
mov
dec
mov
test
aaa
add
sbb
test
dec
pop
cmp
cli
inc
cmp
mov
insb
inc
nop
jne
add
xor
out
adc
inc
or
mov
loope
or
push
add
mov
add
daa
fucom
ret
dec
movsl
and
shl
rol
mov
pop
ret
stos
dec
inc
fistpl
cmp
lea
jo
ret
inc
test
add
std
push
shll
shll
mov
lret
mov
jbe
xor
xor
jnp
or
mov
xchg
dec
shll
clc
adc
aad
aam
jmp
and
test
inc
shr
andl
xlat
sub
mov
aad
or
cmp
in
enter
sub
cltd
mov
cmp
fldcw
jne
repnz
sub
sub
rdtsc
insl
mov
push
add
scas
jbe
xlat
push
mov
clc
lcall
es
test
or
cwtl
sub
jl
stc
addr16
lods
xchg
ss
js
rcll
cmpsb
cltd
push
mov
shl
aam
test
ret
hlt
add
movsb
aas
jle
stos
mov
ret
pop
pop
or
loopne
divl
xchg
sub
xchg
repz
pop
nop
popa
xor
push
scas
jnp
shl
mov
movsl
mov
lcall
xor
sbb
xor
and
add
repz
add
sti
in
and
pusha
xchg
mov
aam
int
mov
dec
dec
scas
add
xchg
pop
mov
or
pop
loopne
and
mov
mov
pop
push
hlt
popf
mov
jge
pop
enter
lock
lret
in
fwait
test
movsl
cmpsb
call
ss
sbb
mov
scas
pop
arpl
psubusb
sbb
inc
xchg
cmp
lds
push
mov
inc
std
daa
gs
xchg
xchg
jmp
dec
fisttpl
jnp
fistl
hlt
loope
jns
mulb
push
inc
mov
pop
sub
lahf
add
mov
fnstenv
rcrb
cld
loopne
lret
pop
fstpl
dec
inc
xor
mov
in
fnstenv
cli
push
sbb
jecxz
jae
out
add
jmp
or
push
dec
lds
pop
fisubl
les
mov
pop
fistps
shlb
shrd
insb
and
movsb
aad
push
popa
jmp
out
mov
add
in
xchg
repz
adc
push
adc
push
mov
jmp
mov
jb
lcall
movsl
mov
inc
loopne
in
or
packuswb
xchg
pop
cmpsb
jnp
add
movsb
imul
mov
mov
xlat
cmp
xchg
mov
xor
aam
stc
mov
adc
push
lcall
adc
fisubrl
jo
mov
sub
roll
sub
mov
bound
cli
pop
jecxz
mov
mov
dec
sbb
test
ja
cmp
adc
cltd
xchg
int
and
cmp
nop
inc
mov
mov
fcmove
fisubrl
addr16
and
stc
cmpsb
jmp
sub
adc
dec
jns
sub
pop
cltd
test
inc
pop
sub
or
push
mov
sub
ds
jecxz
fs
push
dec
xor
shlb
xchg
push
sbb
xor
sub
mov
daa
nopl
cmp
xor
push
mov
inc
lods
lds
ret
xor
fildl
subb
ljmp
add
outsl
mov
arpl
popa
cmpsl
or
leave
rol
xorb
mov
les
mov
sub
out
rcrb
lret
push
xor
add
mov
in
dec
mov
xchg
push
data16
jge
push
pop
dec
mov
mov
testb
add
sarl
test
loopne
repnz
pushf
aaa
jl
sub
push
mov
mov
mov
push
jb
jp
ret
push
dec
pop
test
ss
mov
cmp
and
subl
int3
fadd
sbb
dec
ljmp
inc
imull
sub
mov
popf
mov
sub
data16
adcl
jb
jno
rep
inc
stc
mov
popa
sar
pop
movsl
add
or
mov
inc
jne
shlb
mov
jp
outsb
xchg
out
pop
sub
mov
pop
add
imul
repz
lock
inc
and
scas
pop
mov
shlb
cmp
mov
push
leave
repz
pop
mov
xchg
lret
fucom
idivl
and
rcl
icebp
loop
push
jae
dec
popf
test
lds
cli
ret
pop
dec
mov
xchg
dec
loope
mov
out
mov
pop
xlat
lds
hlt
cmpsl
outsb
push
in
xchg
inc
inc
fisubl
leave
stos
lret
lods
cld
das
rorl
ja
add
inc
das
mov
mov
sbb
cmpsb
push
push
js
pop
testl
mov
mov
adc
add
outsb
movsb
jo
or
fistps
insb
pop
jecxz
adc
mov
arpl
test
neg
in
and
mov
xchg
outsl
inc
in
jns
js
adc
in
pusha
lea
push
js
insb
mov
pushf
shlb
mov
lds
test
adc
fidivs
and
fidivrs
imul
sbb
mov
xchg
insb
push
scas
mov
sub
dec
adc
push
and
push
xchg
dec
imul
and
dec
cld
xchg
push
imul
mov
imul
test
xchg
sub
cmc
int
jle
out
and
inc
pop
cwtl
negl
sub
scas
mov
sti
inc
jge
jmp
jge
add
inc
aas
add
lds
mov
rorl
cli
ss
mov
cmpsb
cli
inc
xlat
push
pusha
jg
mov
movsb
lret
test
sbb
xchg
out
scas
mov
shrl
cmp
xlat
jnp
jb
jb
ret
nop
imul
insl
push
dec
cmpl
aad
aas
jl
sahf
clc
sbb
jne
cwtl
pop
and
or
add
loope
jae
dec
push
je
inc
jne
mov
clc
lret
xor
addr16
cmp
icebp
inc
mov
mov
add
push
adc
hlt
int
loopne
std
outsl
cmpl
fwait
fcom
sub
outsl
and
arpl
scas
push
sub
rcrb
xchg
clc
sti
push
mov
or
add
in
imul
lcall
push
pop
push
insl
movsl
leave
xchg
and
aad
clc
xchg
sub
inc
mov
cs
fldenv
inc
in
cld
adcl
mov
in
push
lret
shlb
cmp
js
decb
dec
xlat
sbb
push
mov
mov
lcall
mov
pop
ret
cwtl
in
lea
ja
and
and
jg
jb
shl
xchg
in
cmpsl
mov
add
ja
mov
jae
pop
es
adc
push
iret
dec
push
xchg
xlat
shlb
cli
push
push
sub
ja
pop
ret
movsl
sbb
loopne
inc
out
pushf
mov
in
movsl
fnstenv
jae
jge
out
clc
mov
mov
mov
sbb
cltd
or
ret
movsl
pusha
test
sarb
imul
inc
jl
inc
or
add
hlt
cs
hlt
sub
dec
sub
jecxz
mov
mov
sbb
cltd
mov
mov
aaa
xor
test
aas
xorl
sub
xlat
cmp
xor
fwait
outsl
enter
cmpsl
test
cmp
adc
sahf
call
subl
outsb
lds
sub
imul
mov
in
adc
push
pop
mov
lea
sti
insl
arpl
aad
dec
xor
mov
pop
test
adc
cmp
dec
mov
into
adc
and
push
pop
aaa
xchg
sahf
mov
loopne
sbb
adc
gs
inc
aaa
pop
jb
hlt
imul
test
inc
mov
arpl
in
cmpsl
frstor
mov
pop
inc
mov
jb
mov
add
mov
fcomps
mov
inc
jne
addr16
enter
popa
cli
jno
dec
push
or
xorb
sbb
aaa
lret
or
scas
sbb
adc
std
cltd
lods
adc
xchg
jns
std
push
cwtl
cmpsb
cs
cld
jecxz
mov
and
lods
inc
js
lods
cmpsb
rorl
and
inc
sbb
je
add
or
mov
xchg
dec
es
add
lds
jg
lods
xchg
xchg
dec
mov
daa
adc
or
cmp
std
loope
mov
negl
mov
repz
xchg
cltd
in
mov
lock
mov
es
inc
lods
out
in
lds
daa
push
push
and
inc
cltd
add
jnp
adc
sub
cld
shl
aaa
pop
rorb
ja
cmpl
sub
xchg
ret
outsb
mov
les
jb
lds
inc
xor
scas
push
pop
xchg
mov
psrlq
test
mov
ficomps
and
dec
inc
and
imul
pop
push
nop
das
sahf
rorl
in
pop
jmp
insb
movsl
inc
or
fs
outsl
pop
das
int3
cmp
push
or
cmp
ja
enter
push
mov
sbb
jno
andb
mov
cmpl
sbb
jge
push
outsb
subb
fistl
hlt
cltd
rorb
pop
pop
rolb
dec
push
dec
jnp
cld
xchg
mov
shrb
ljmp
data16
mov
jo
lds
push
pop
push
repz
test
orb
inc
shl
cmp
add
rcl
lods
leave
jge
mov
adc
lret
js
sub
aas
mov
xor
inc
call
pushf
lcall
cmp
popf
vxorpd
fs
pop
pop
and
inc
ficoml
fdivrs
leave
pop
fidivrl
cwtl
lret
dec
jl
add
jb
cmp
sub
out
pushl
push
jae
adc
jbe
adc
popa
mov
mov
test
sub
fwait
cmp
ret
jns
mov
jo
cmc
sbb
lds
pop
jp
in
mov
adc
fwait
inc
js
push
xor
pop
sbb
push
adc
jle
cmpsl
or
icebp
sbb
cmpsb
mov
js
iret
add
les
push
mov
out
mov
in
mov
sbb
pop
push
shlb
std
fmuls
xchg
imul
outsl
or
cmpsl
sub
cmp
lret
xor
outsl
add
in
cwtl
mov
out
cmp
outsb
imul
push
sub
cmp
or
inc
cmp
in
push
js
push
push
pop
std
cmp
int
movsl
shll
mov
inc
xorb
fmull
sbb
in
inc
mov
pop
lods
jne
les
data16
cmpsl
lret
xor
pushf
mov
xchg
cmp
inc
lds
adc
push
add
test
fdivrs
inc
in
test
sub
xchg
int3
popa
out
aaa
rclb
dec
repz
inc
in
lea
pop
sahf
dec
andl
sbb
fldl
std
into
pushf
dec
std
jp
adc
dec
outsb
inc
adc
xchg
inc
ret
je
mov
dec
inc
hlt
and
icebp
mov
call
push
jne
clc
int
inc
xchg
movsb
ret
xor
fcompl
jns
lret
jge
call
jne
cmp
and
inc
mov
push
in
push
cs
mov
mov
xchg
fcomi
orl
lret
cmc
adc
cmp
pop
cwtl
ljmp
lds
das
les
jbe
and
push
sub
cmp
adc
sub
mov
add
xchg
int
insl
add
mov
sbb
mov
push
inc
xchg
adc
jecxz
xchg
shll
mov
sub
js
in
mov
pop
mov
cmpsb
jbe
icebp
xchg
fwait
mov
inc
fwait
lds
pop
push
add
int3
dec
xor
rolb
and
push
jno
in
inc
mov
outsl
dec
jge
add
hlt
pop
add
pop
test
cwtl
cwtl
lea
mov
outsl
and
jmp
sahf
push
pop
add
mov
mov
mov
or
sbb
stos
movsl
dec
or
inc
movsb
bound
sub
cmpsl
les
sbb
inc
popf
popf
mov
push
mov
leave
das
notb
cwtl
aaa
mov
xchg
lds
push
fwait
icebp
hlt
push
pop
cmp
rcrb
es
adc
cmp
dec
jle
xchg
dec
inc
push
xlat
aam
dec
pop
vcmppd
xchg
rcl
sbb
dec
bound
jns
subl
out
stc
movntps
lods
cmp
out
sti
push
rclb
in
push
jl
fstl
mov
jp
cmp
and
inc
fiadds
push
jl
adc
dec
aad
movsl
adc
xor
lahf
aad
xchg
cltd
lds
xchg
pop
sub
mov
shll
cmpsl
into
andb
sub
dec
xorl
movb
pop
in
add
gs
mov
pop
mov
daa
filds
cwtl
jb
mov
cltd
dec
in
inc
adc
sbb
adc
lds
out
scas
test
js
arpl
pop
jnp
scas
add
fdivr
clc
ss
std
jl
jb
ss
inc
loope
lahf
or
mov
add
imul
popf
orl
dec
add
les
stc
sub
mov
push
hlt
mov
lret
mov
jle
les
imul
mov
pop
xchg
rcrb
ds
ja
push
je
jg
dec
mov
cmpsl
imul
repz
xchg
dec
xchg
mov
cs
sub
xor
nop
or
cli
sbb
cmpsl
arpl
inc
mov
jne
or
pop
adc
fbld
in
xor
call
bound
lret
leave
jge
or
mov
stc
pop
mov
je
fcmovu
jmp
xchg
ja
mov
stc
xchg
push
mov
pop
mov
test
cmp
lcall
push
out
pop
add
push
rcrl
mov
mov
fwait
inc
adc
rol
jle
add
sbb
aam
les
testl
adc
repz
mov
adc
gs
subl
lds
push
cld
out
push
int3
add
ja
popa
loope
lret
pop
sub
add
jg
or
clc
shll
movsb
xor
mov
sahf
ret
pop
inc
test
shlb
mov
fsubr
movsl
mov
pop
icebp
mov
popf
push
ljmp
jp
aas
fwait
inc
mov
mov
dec
add
and
leave
stos
mov
fidivrl
cmpsl
jb
in
add
iret
outsl
lods
popf
test
push
pushf
mov
xchg
push
jnp
std
lcall
nop
cmpsb
sarb
outsb
push
mov
data16
jp
jecxz
shll
sub
out
inc
jmp
push
adc
lret
lret
test
mov
shrl
cmp
adc
pop
shlb
test
mov
sub
pop
dec
jne
xchg
mov
adc
scas
ficoml
xor
cmpsb
movsl
imul
lds
je
in
add
push
mov
subl
mov
imul
xchg
stos
lods
movsl
push
mov
in
int3
dec
add
dec
mov
in
inc
into
dec
mov
sahf
out
enter
mov
mov
sub
pop
mov
lea
loop
ret
pop
xchg
sti
mov
in
test
sbb
sub
in
lret
je
cltd
lret
push
mov
xchg
add
call
movsl
pop
mov
sub
addr16
add
xchg
cmpsb
jle
popf
leave
add
and
mov
sub
sub
inc
testl
xchg
and
cmp
pop
sahf
jno
daa
movsl
cs
jb
mov
fwait
ss
jnp
pusha
xor
sahf
outsl
ret
push
bound
adcb
hlt
scas
sbb
lahf
adc
or
out
std
pop
ja
mov
rol
clc
pop
lcall
jne
push
inc
and
std
shlb
jecxz
dec
pop
push
xchg
mov
pop
mov
adc
js
mov
aam
inc
repnz
je
jp
movb
insl
adc
into
mov
jmp
adc
inc
in
cmpsl
pop
xchg
sbb
inc
outsl
pop
jl
inc
mov
jecxz
in
int
enter
mov
cmpl
inc
insb
mov
xchg
fcomps
imul
jle
out
adcb
mov
push
outsb
ss
fstp
cs
mov
pop
repz
sbb
pop
mov
mov
add
push
xorb
push
test
in
cld
mov
outsb
scas
sbb
ljmp
ror
and
ja
aam
pop
aad
mov
xor
cmp
or
dec
jbe
or
mov
es
popf
lds
in
inc
stos
dec
mov
mov
movsb
mov
fnsave
mov
or
repz
sbb
imull
sub
sub
ret
int
jle
sbb
mov
lds
jo
incl
mov
or
clc
imulb
sub
lods
lret
mov
mov
pop
xchg
sbb
movsl
push
mov
xchg
in
in
jnp
dec
push
mov
dec
sbbb
xchg
sti
gs
dec
mov
and
stos
adc
mov
pop
stc
push
jle
rorl
mov
daa
dec
out
es
pop
mov
sbb
lret
movsl
outsb
jbe
pop
pop
sub
aas
loopne
inc
mov
pop
das
mov
or
andb
xor
std
popf
mov
mov
sbb
orb
mov
xchg
mov
dec
mov
sbb
mov
mov
push
out
mov
push
mov
popf
repnz
mov
cs
sub
mov
adc
push
jmp
cmp
mov
adc
jne
xchg
pushf
insl
lods
movsl
loop
call
out
mov
int
pop
adc
js
aam
loopne,pt
sub
shr
cld
daa
inc
or
cmp
or
xchg
fwait
inc
sbb
cmpsl
lock
xlat
test
mov
jne
add
dec
push
popf
push
jo
jle
push
rclb
les
inc
sub
pop
sti
dec
leave
xor
push
mov
push
jns
xchg
js
pushf
xchg
cmp
lods
mov
add
ja
and
mov
inc
leave
icebp
add
mov
cwtl
int3
popf
insb
outsl
lret
xchg
adc
sbb
push
mov
popf
fsubrs
xor
mov
push
stos
scas
mov
lods
cld
call
shl
nop
popf
lahf
sbb
mov
push
add
psrld
aad
arpl
arpl
or
dec
daa
mov
dec
movsl
lret
sarl
add
pop
jle
fiaddl
jge
jp
pop
loope
testb
jmp
daa
fsubs
leave
sub
lret
sbb
loop
inc
ss
fnstenv
jl
cld
xchg
idiv
loope
mov
in
and
push
push
daa
lods
push
test
lods
cmpsl
incb
xchg
lock
sahf
xchg
rcrl
jno
ljmp
arpl
loopne
mov
inc
pop
inc
sbb
cwtl
imul
sar
sbb
and
cmovo
cmp
ficoml
mov
popf
inc
pushf
lea
out
sbbb
mov
xor
or
cmpsb
push
jle
lea
sub
mov
push
add
sub
aad
xchg
addl
out
out
adc
ret
cmpsl
mov
pop
in
add
mov
add
ret
movsl
xchg
pop
std
xor
lcall
xor
pop
andb
cwtl
andl
sbb
pop
outsl
dec
ret
je
lods
xchg
adc
xchg
cs
push
mov
mov
pop
imul
xor
push
sub
cmp
imul
fisubrs
dec
push
sbbb
adc
xchg
jae
scas
lds
icebp
inc
mov
add
xchg
jg
or
xchg
fxtract
ja
mov
repz
and
out
mov
add
rcrb
movsl
daa
and
push
xchg
add
das
cmpsl
scas
outsl
dec
push
and
mov
sub
and
addr16
test
mov
sbb
cmp
adc
xchg
lret
jmp
jmp
mov
loop
movsl
xchg
xlat
jno
lahf
in
imul
xchg
fidivrl
push
arpl
add
call
xchg
add
lods
pop
lcall
in
stc
in
xor
adc
inc
push
daa
inc
adc
mov
ja
mov
cwtl
push
lods
popl
or
sbb
mov
and
inc
pushf
inc
mov
mov
lds
add
mov
xchg
ret
jo
push
mov
outsl
leave
insb
ret
pop
lea
dec
in
add
arpl
fucom
outsb
jae
aaa
mov
pop
add
int3
dec
jns
in
ret
arpl
movsb
popf
shll
ja
sbb
or
add
and
loopne
sub
push
fnsave
pop
insl
movsl
jge
mov
push
inc
mov
xor
in
lret
test
es
ret
leave
xchg
add
std
scas
clc
and
mov
jecxz
jnp
ret
adc
mov
subb
fdivrp
js
lds
push
fwait
daa
leave
subb
notl
dec
jb
ret
movsl
aad
and
mov
lahf
cmp
lock
push
cmp
les
cli
test
jmp
sbb
adc
fnstcw
dec
inc
in
mov
loopne
inc
imulb
adc
and
pop
pushf
push
mov
jle
scas
in
shr
xor
ret
sub
add
or
cmp
xchg
add
popf
testb
je
out
dec
sahf
imul
fstl
adc
cmp
pushf
xchg
adc
lods
dec
push
or
mov
mulb
jg
jmp
dec
lcall
outsl
dec
jns
mov
mov
aas
xlat
or
sti
mov
movsb
fldcw
das
clc
fistl
aad
sub
das
pop
popa
sbb
cs
push
cmpsl
xchg
std
scas
add
in
jp
ljmp
std
push
cmp
loopne
dec
rcrb
int3
jbe
jl
cmpsl
push
mov
adc
popa
mov
stos
faddl
mov
pusha
mov
and
xlat
popa
cmpsb
mov
out
mov
jns
fsubs
fnsave
clc
ljmp
scas
sbb
jae
fldl
mov
nop
adc
inc
test
push
add
int
pushf
pop
popf
jne
adc
lds
add
cltd
sub
xlat
lods
mov
push
les
lds
pop
or
cmp
das
pop
or
sbb
cli
mov
or
xchg
xchg
cs
push
mov
int
andl
mov
cmp
leave
ss
cld
fwait
movsl
mov
adc
lds
inc
repz
add
hlt
int
inc
aad
lahf
insb
dec
call
push
xchg
pop
adc
add
outsl
dec
aas
loopne
mov
test
pop
sbb
inc
cld
lcall
xchg
xor
adc
cmpsl
xchg
and
cmpsl
rcll
dec
jmp
lods
mov
je
call
leave
cltd
jb
dec
push
es
add
and
subb
xchg
hlt
inc
fldcw
pop
jp
mov
push
aad
add
ja
outsl
and
scas
xlat
sbb
jae
pusha
cltd
dec
mov
cmp
sub
fisttpll
sub
fldenv
test
lret
push
adc
pop
cmp
fdiv
arpl
clc
mov
test
inc
pushf
xchg
push
test
daa
cmp
xchg
iret
lea
and
push
rorl
sub
inc
and
mov
sbb
xor
and
or
sub
mov
sub
adcb
outsb
inc
mov
in
bound
mov
xchg
into
mov
aas
sti
mov
jl
rol
lods
pop
mov
sbb
leave
test
in
into
adc
adc
xchg
ss
icebp
not
jecxz
mov
mov
jae
mov
loop
hlt
or
push
ret
sbb
xchg
lahf
fucomip
adc
cmp
aas
dec
sahf
dec
adc
sbb
mov
sbb
adc
xchg
imul
lahf
and
push
cli
lahf
sub
sub
test
add
shrl
insb
add
xchg
push
cwtl
mull
aad
xchg
add
pop
test
cltd
xchg
jmp
js
adcb
mov
xor
mov
pop
push
call
loop
xchg
aas
les
idivl
pop
clc
iret
rcrb
xchg
xchg
mov
daa
lea
jg
outsb
push
push
movsl
lods
mov
cltd
lcall
push
mov
cmp
xchg
cmp
fwait
xor
hlt
pop
lock
inc
cld
in
ret
int
arpl
or
add
mov
jp
push
mov
push
mov
aam
add
push
scas
mov
xchg
mov
clc
cmpsl
mov
sti
mov
fsub
mov
out
push
adc
popf
jge
or
jmp
jae
out
jns
xchg
jge
mov
mov
ds
and
rcrl
in
inc
mov
pusha
neg
xchg
movsl
pushl
shll
pop
or
cwtl
das
pop
cmp
jl
mov
lods
lcall
mov
push
cmp
or
mov
insl
movsl
lcall
sub
xchg
cmpsl
fwait
les
in
stos
add
mov
adc
and
cld
stos
cwtl
int
mov
cmp
stc
js
push
fcmovb
xor
scas
mov
mov
mov
in
clc
aam
testl
xlat
jnp
mov
adc
sbb
xor
push
scas
outsl
mov
sub
insl
rcr
ret
jae
int
scas
inc
lods
outsl
cmpsl
dec
jae
popf
inc
or
add
or
test
add
sub
outsb
inc
lds
mov
je
push
xor
stc
inc
sub
lret
movsl
ja
sbb
push
jne
add
mov
pushf
cmp
scas
lea
call
xchg
adc
adc
xor
shr
shll
ja
mov
sbb
mov
pop
mov
lds
faddp
lods
scas
lds
add
cmp
inc
imul
xchg
xchg
fwait
lea
orb
arpl
leave
test
jmp
fucomp
in
push
scas
int
xchg
add
and
jle
sbb
nop
sub
hlt
pop
mov
xchg
adc
loopne
or
in
inc
dec
in
lret
test
cmpsb
sub
pop
pop
ljmp
xchg
dec
jne
dec
int
push
mov
and
sub
sbb
inc
shrb
cmpsl
mov
dec
add
push
add
sbb
lcall
cmp
test
icebp
sbb
hlt
push
hlt
pop
push
das
das
ss
int3
and
or
mov
pop
dec
iret
out
daa
rcll
cmp
loop
and
push
sub
push
inc
mov
push
xchg
jmp
pop
sub
sbb
stos
in
cmp
mov
daa
xchg
cs
inc
shlb
ja
cltd
lahf
or
mov
jae
pop
cmp
mov
icebp
mov
adc
aad
pop
pop
xchg
gs
stos
mov
outsl
mov
mov
push
leave
icebp
lods
push
jne
mov
mov
mov
mov
aas
push
sub
in
lods
mov
test
ret
xchg
jbe
cmp
pop
cli
nop
mov
inc
add
in
pop
dec
pop
shll
lahf
jbe
xchg
add
in
adc
mov
mov
mov
cmp
xlat
lods
dec
mov
arpl
mov
outsb
push
push
outsl
sbb
lret
mov
dec
cli
ret
jp
mov
call
pop
rcl
add
test
and
cmpsl
xchg
xor
xor
cmp
adc
sbb
repnz
inc
lcall
pop
push
mov
and
jle
push
dec
and
pop
sbb
push
and
jo
lods
and
mov
jns
gs
outsl
mov
fistpll
es
int
shrb
adc
jecxz
xchg
fwait
movsl
jo
jb
stos
dec
mov
sbb
xorl
hlt
aas
outsl
les
jo
mov
fsin
jmp
pop
push
test
cmp
cmp
pop
shlb
add
lret
mov
sarb
leave
pop
jo
lret
mov
mov
sub
jbe
out
push
adc
rorl
lds
iret
mov
das
inc
or
cmp
inc
ja
movl
fnstenv
aaa
scas
roll
lea
xor
jge
aas
mov
ljmp
popw
pop
lcall
mov
popa
pop
shlb
ror
cmova
cmpsb
popa
movsb
mov
dec
mov
push
test
mov
add
inc
mov
jmp
movsl
xor
xor
sbb
xchg
cwtl
inc
push
or
push
xchg
push
in
add
adc
in
lcall
pop
test
sub
dec
cwtl
pop
push
int
outsb
movsb
pop
scas
pop
lods
cmc
sbb
lds
and
cwtl
push
adc
cmp
jns
ss
push
lds
or
and
sti
cmp
out
push
adc
mov
scas
adc
pop
push
lret
inc
push
add
cli
cwtl
sarl
or
sbb
mov
pop
sub
mov
push
fimuls
sahf
mov
mov
retw
mov
dec
ss
jns
inc
test
int3
leave
repnz
lea
faddl
or
mov
push
sbb
and
lods
out
idivb
ja
jb
mov
mov
sub
xorb
xorb
cmp
aad
inc
out
ret
jb
insb
flds
jne
xchg
jp
jne
mov
pusha
sbb
or
stos
movsl
addb
rorb
popa
cmp
sbb
pop
les
pop
cld
sub
sub
cmp
cmp
cmp
sahf
pop
mov
jmp
subb
movsl
arpl
cmp
sbb
sbb
pop
pop
into
push
jnp
cmp
fcmovbe
insb
xor
in
pop
outsb
jle
leave
push
cwtl
lea
ljmp
mov
dec
es
jno
or
sub
mov
mov
sub
xor
add
rol
rcrb
pop
xchg
in
movsb
pop
push
ds
sub
sub
sub
fwait
sbb
fs
test
inc
js
sub
out
xchg
mov
xor
pop
mov
cmpsb
mov
outsb
adc
movsb
xchg
loope
rcrb
and
mov
aaa
outsb
sti
push
cwtl
or
sar
pop
test
mov
in
leave
xchg
xchg
pop
sbb
sub
je
mov
pop
mov
mov
pop
in
jae
popf
jne
rcll
das
inc
pop
cmp
pop
xor
mov
xchg
jecxz
test
lods
add
mov
mull
push
mov
cmp
int3
pop
loopne
lods
and
inc
das
fmul
in
rclb
lcall
pop
cwtl
cmp
pusha
in
adc
pop
push
stc
xchg
mov
rcrl
ja
das
jbe
mov
lods
xor
lds
ljmp
fwait
pop
scas
cmp
jg
add
lods
push
call
jb
cmp
cmp
fcmovb
scas
popl
mov
sarb
lds
mov
add
mov
nop
jo
icebp
mov
ret
mov
adc
mov
adc
jecxz
iret
cmp
xchg
xor
push
loopne
mov
adc
fisttpll
jge
sub
lds
popf
dec
mov
sub
addl
sbb
add
pop
sahf
jbe
xchg
faddl
sub
hlt
rolb
mov
pop
ss
lret
imul
and
fsubrs
mov
sbb
cld
or
cmpsl
dec
cwtl
lds
mov
adc
push
mov
mov
hlt
cmp
push
add
jb
lahf
arpl
mov
xchg
add
push
push
pop
fildl
xor
rcrb
xorps
popa
cmp
enter
adc
xchg
fwait
cmp
arpl
jne
dec
outsb
outsl
add
add
in
mov
xchg
out
mov
xchg
add
pop
mov
into
add
push
aas
inc
push
add
mov
adcl
pushf
out
pop
adc
lods
jae
movsb
inc
rcrl
mov
pop
call
mov
mov
inc
aas
dec
lds
daa
arpl
xlat
jp
jmp
aad
mov
sbb
mov
dec
jns
out
push
xor
inc
inc
mov
mov
inc
iret
lret
into
out
in
mov
xchg
cmp
xchg
loop
push
inc
cmpsb
fwait
xchg
movsl
daa
shrl
xlat
lds
xor
lock
sahf
nop
xchg
cwtl
in
mov
out
xor
cmp
aas
mov
fwait
dec
sub
lret
mov
es
xorl
mov
leave
movsl
cmpb
sbb
lea
mov
push
or
push
imul
addr16
fidivrs
aaa
enter
imul
fwait
pop
and
pop
sbb
jno
lcall
jl
adc
jbe
lret
rcl
inc
mov
pop
sbb
lods
jne
xchg
inc
push
mov
loopne
cli
in
arpl
cld
test
jo
xchg
fwait
adc
mov
lret
mov
push
fiaddl
or
jnp
jge
lods
aas
repnz
leave
xchg
lods
pop
pop
push
jge
pop
sub
mov
pop
add
nop
jb
sub
test
imul
adc
jnp
movsb
xchg
in
rorb
fsubr
lret
repnz
inc
mov
mov
jo
stos
mov
mov
ret
inc
mov
jmp
mov
call
insb
imul
out
push
xor
subb
ljmp
das
mov
mov
mull
in
js
lea
xchg
inc
test
push
sub
mov
jle
fmul
outsb
ret
xchg
sbb
cli
div
sub
lock
movsl
cmp
sbb
scas
div
lds
mov
add
sbb
lods
lret
call
lods
add
push
sbb
dec
test
mov
or
mov
scas
lods
imul
push
pop
je
sbb
and
or
call
xchg
jp
push
idivl
pop
cmp
xor
rol
lds
sbb
mov
inc
mov
test
daa
mov
sbb
lods
pop
or
loop
in
push
mov
jle
mov
sti
out
fisubs
sahf
mov
leave
lret
aas
adc
sbb
and
stos
xchg
push
inc
arpl
and
push
arpl
lahf
mov
cmp
adc
scas
mov
mov
test
mov
inc
arpl
pop
outsb
lds
jle
inc
les
dec
dec
add
push
mov
sub
dec
shll
mov
pop
shrb
xchg
popf
scas
divps
pop
mov
pop
lods
xchg
cmpsl
pop
sar
and
call
loope
lods
mov
adc
stos
daa
test
xchg
jae
fbld
jns
push
pop
daa
sub
ja
les
xchg
int3
adc
inc
adc
sqrtps
repz
loopne
xchg
pop
inc
mov
enter
jmp
sbb
dec
inc
ret
xor
sub
mov
or
sub
mov
in
fcmovb
cmc
mov
movsl
stos
scas
pop
popf
xor
push
mov
xor
sahf
lret
xchg
cmp
mov
jmp
mov
cmpsl
mov
into
insb
leave
dec
push
mov
shl
dec
outsb
das
or
les
cmp
mov
daa
addl
dec
mov
js
cmp
push
xor
mov
and
lret
fldenv
add
and
fwait
into
dec
or
in
and
push
xlat
pop
pop
inc
gs
stos
fadd
imul
imulb
xchg
inc
inc
lret
jg
leave
lcall
adc
adc
sbb
js
outsb
adc
jl
cmpsl
lret
jns
jecxz
inc
hlt
or
xlat
push
daa
xor
fdiv
fwait
cmpsl
mov
in
out
cmpl
sbb
mov
movsl
adc
mov
xchg
lock
adc
popa
mov
sbb
cmpsl
jge
sub
int
xorb
mov
sbb
mov
push
outsl
ja
pop
jecxz
mov
pop
shrb
mov
pop
pop
mov
dec
and
mov
outsb
or
js
xchg
ja
mov
in
mov
push
xchg
add
mov
push
inc
rcr
and
push
jmp
pusha
pop
fdivrl
nop
pop
lret
mov
adc
jbe
cld
outsb
sbb
dec
adc
dec
pop
movsb
scas
dec
movb
mov
pop
ds
orb
push
add
jmp
xor
mov
add
push
into
xchg
out
scas
lds
mov
mov
movsb
fidivl
les
push
pop
push
leave
aas
sbb
cwtl
adc
fcoml
sub
mov
ficompl
stos
mov
push
cmp
sahf
sbb
and
test
mov
ja
or
mov
mov
and
push
adcl
or
in
sub
jmp
pushf
rclb
or
ret
xor
scas
mov
pusha
mov
jmp
pop
call
stos
push
add
daa
inc
in
mov
cmp
shrl
aaa
insl
sub
mov
cmp
mov
cmpsb
inc
data16
ret
mov
out
stos
idivl
ljmp
shlb
dec
xchg
jmp
aam
jae
or
shrb
imul
imul
and
mov
mov
stos
test
xchg
scas
icebp
sarl
loope
imul
dec
outsl
lods
xchg
lea
cs
mov
dec
out
test
xchg
test
mov
mov
stos
out
ds
cmp
xchg
int
insb
scas
push
imul
iret
cmp
mov
repnz
scas
sub
pop
outsb
xchg
jge
aaa
inc
sub
or
mov
daa
add
push
mov
sbb
mov
sub
adc
sub
jle
cwtl
sbb
add
mov
fwait
test
jb
mov
or
clc
ljmp
jmp
or
ret
outsb
lods
mov
movsb
lock
mov
lea
xor
ret
mov
out
popf
lods
pusha
jmp
iret
mov
insl
jmp
fwait
scas
mov
mov
movsb
movsb
fldt
lea
fldln2
mov
jmp
ret
in
test
scas
mov
xorl
gs
loope
push
jge
lods
mov
ljmp
lret
sahf
int
push
cmp
sbb
scas
mov
adc
sub
test
in
lds
in
mov
mov
ror
js
fbstp
insl
add
and
jge
fisttps
test
enter
popf
xchg
mov
push
fwait
pop
mov
xchg
enter
ret
mov
in
mov
jmp
adc
addb
push
and
xchg
mov
or
mov
leave
cmpsl
pushf
lahf
nop
imul
das
insb
scas
in
dec
popf
in
fisttpll
out
adc
std
xchg
lods
out
ds
stos
xchg
mov
sti
jmp
mov
pop
xchg
fwait
imul
nop
push
mov
and
mov
push
cltd
pop
mov
xchg
jle
jmp
xorl
mov
mov
xchg
daa
shlb
in
scas
mov
aad
stc
xchg
ret
stc
jle
cmpsl
jmp
leave
enter
mov
outsl
cmp
mov
mov
mov
repnz
cmp
imul
decl
xchg
jl
and
test
cmpsb
mov
sub
fistl
pop
add
mov
loopne
scas
mov
in
pop
or
int3
imul
jmp
jl
mov
push
scas
lods
lods
out
xor
sbbl
nop
dec
ds
jnp
scas
mov
xchg
mov
shl
dec
test
leave
push
jno
mov
ret
add
scas
popf
jge
lods
test
dec
jmp
into
mov
scas
frstor
ret
jne
dec
mov
mov
outsl
cmpsl
std
fwait
enter
cmp
cltd
mov
mov
test
ret
sahf
sbb
jne
mov
cwtl
insb
out
sub
mov
or
mov
jb
sbb
lret
mov
mov
lods
imul
jp
cmpsl
mov
lea
jl
ret
xor
mov
lret
in
sahf
jns
pop
mov
mov
add
fs
xor
xchg
sahf
test
mov
push
aad
sub
mov
cmovg
js
jecxz
mov
nop
arpl
mov
sub
lods
popa
fnstsw
add
mov
in
jb
mov
in
call
sub
mov
enter
lahf
scas
mov
out
ret
mov
out
aam
imul
cmpsb
mov
mov
imul
xor
loope
lods
dec
fldt
mov
lods
pop
mov
pop
in
pop
ja
xchg
mov
test
mov
add
lods
in
iret
test
push
mov
sbb
test
sbb
sub
je
int
test
lods
jg
fisttpl
lcall
rcll
mov
push
and
lea
lahf
leave
mov
mov
cmp
mov
pop
lea
fnstsw
xor
mov
mov
enter
sub
xchg
es
mov
sti
imul
jmp
mov
mov
pusha
movsl
sub
lods
out
sbb
lea
xchg
idiv
popf
mov
mov
mov
sar
lods
in
dec
pop
cmp
test
jmp
mov
fildll
leave
sbb
aas
repz
lods
test
scas
xchg
fcmovnu
in
sub
mov
push
mov
cmpsb
push
xor
frstor
imul
mov
mov
mov
out
or
pop
mov
mov
stc
das
in
mov
dec
movsl
xor
outsl
or
push
std
cmp
fldt
mov
es
ret
inc
scas
push
mov
mov
sahf
mov
repnz
mov
mov
lahf
or
jecxz
push
dec
fisubs
mov
aam
inc
mov
mov
inc
int
ljmp
jns
aas
mov
mov
push
adc
ret
lock
test
mov
sub
pusha
mov
xchg
jle
sahf
scas
cmc
je
in
mov
mov
arpl
sub
int3
xchg
xchg
pop
in
ret
xor
scas
lea
mov
arpl
xor
sub
daa
xor
and
jno
cmp
imul
xor
adcb
fnstcw
xor
test
inc
scas
cmp
loope
jae
push
add
push
cmc
xchg
jg
add
mov
xchg
pop
sahf
pop
lds
ljmp
pop
mov
mov
mov
mov
add
outsb
mov
mov
stos
lahf
and
mov
push
cltd
sub
xchg
scas
inc
movsb
add
cmc
mov
dec
lods
mov
xchg
xor
mov
imul
xchg
push
cmpsb
shrl
lods
movsl
fwait
stos
cli
sbb
in
xchg
cmc
mov
loope
add
cmpsl
jle
stos
adc
mov
xchg
out
cmc
scas
fstl
fwait
jge
cltd
sahf
stos
lret
inc
jno
mov
lea
mov
enter
pop
lahf
xchg
ss
jg
insl
into
or
inc
cmp
stos
mov
xor
inc
sahf
cmpsl
or
ret
sub
loope
popf
insb
cltd
lret
mov
mov
jg
mov
fdivs
mov
mov
lea
ret
inc
imul
or
movsl
dec
rclb
ret
sbb
stos
outsb
sbb
inc
ret
mov
stos
mov
or
mov
loop
xor
mov
sub
orl
icebp
mov
cmp
ss
stos
rcr
mov
pusha
lcall
das
sub
mov
fcmovu
aaa
test
pop
xchg
sub
sarl
adc
and
mov
stos
mov
shr
xchg
lea
xchg
sti
jae
fadd
mov
negb
mov
movsb
js
cmp
sub
dec
jle
imul
std
sti
aad
cmp
mov
xchg
repz
scas
cmpsl
dec
jae
sti
scas
daa
xchg
fisttpll
cmp
es
dec
in
mov
mov
mov
cmp
mov
mov
lret
mov
fwait
mov
daa
stc
int3
pop
sub
lret
jns
shll
adc
dec
stos
cltd
xor
mov
jns
push
gs
popf
in
les
mov
in
sbb
sub
and
push
imul
or
sub
inc
xchg
dec
mov
push
sahf
movsl
stos
jecxz
cli
xchg
stos
cmc
xchg
mov
sub
pop
lea
fwait
sahf
pop
mov
xchg
imul
cli
ret
mov
outsb
mov
xchg
inc
xchg
jae
ja
pop
outsb
lret
mov
je
lods
jno
pop
pop
dec
shl
cltd
ljmp
mov
push
stos
sub
mov
inc
mov
movsb
mov
pop
popf
xchg
jmp
mov
pop
popa
jb
mov
fwait
xor
mov
mov
dec
test
ret
xor
dec
adc
cmc
insl
scas
sahf
test
test
js
mov
mov
mov
jmp
sub
data16
insl
sbb
repz
lret
dec
jnp
cmpb
mov
mov
cmp
xchg
adc
mov
cmpsl
fwait
jb
xor
outsb
test
dec
movsl
pushf
pop
insl
xor
push
xor
add
nop
mov
mov
rorl
adc
leave
xchg
mov
xor
xchg
sbb
jns
adc
inc
in
cmp
scas
ret
dec
mov
popf
mov
popa
sti
fwait
mov
fwait
popf
in
jne
mov
fwait
mov
lret
ret
ljmp
stos
clc
loop
lock
lds
or
sub
push
test
mov
lods
mov
mov
xor
cs
out
mov
mov
xchg
in
jmp
ret
mov
dec
les
xchg
lods
cs
mov
mov
mov
int
in
xor
dec
or
aam
rol
xchg
lods
mov
mov
jg
insb
push
rcrl
mov
and
lahf
sub
mov
jmp
mov
dec
or
jo
in
lahf
or
mov
lods
sbb
ds
mov
fisttpl
mov
cltd
jno
pop
int
lds
mov
xor
mov
and
leave
xchg
bnd
mov
pusha
daa
mov
mov
dec
lea
ds
push
mov
adc
aas
outsl
mov
xchg
inc
das
jmp
sbb
out
jno
int3
ret
daa
adc
dec
lret
jbe
rorl
jle
mov
lret
test
sub
mov
sub
mov
lea
cmp
mov
push
cld
ret
hlt
inc
jle
popf
xchg
ljmp
ror
sbb
add
jmp
cmc
pusha
mov
xchg
mov
xor
mov
lods
ss
lods
fwait
add
insb
xchg
xor
and
cmpsl
inc
jmp
bound
and
mov
stc
call
js
iret
cli
mov
cltd
sub
iret
stos
or
adc
pusha
xchg
int3
jne
mov
push
jb
movsl
std
shlb
sub
jecxz
push
in
mov
rorl
lods
add
mov
sti
lock
xchg
or
icebp
lds
movsl
or
xchg
pop
push
or
outsl
dec
pop
outsl
jae
scas
inc
mov
pop
mov
sub
out
and
sahf
jbe
scas
addr16
mov
in
test
stos
ljmp
mov
int
popf
pop
mov
sahf
outsb
ljmp
or
push
push
xchg
sub
in
popf
mov
insb
and
adc
lret
xchg
jg
mov
mov
fwait
sahf
xchg
mov
test
mov
push
mov
dec
xorl
sbb
adc
shll
or
clc
out
cwtl
popf
mov
mov
push
pop
mov
mov
add
jmp
daa
mov
das
sti
sbb
xchg
or
pop
sbb
mov
lret
sti
ss
add
mov
insb
aad
pushf
mov
imul
push
sub
jle
xchg
mov
enter
out
lods
xchg
in
inc
jns
mov
pop
movsb
mov
mov
jecxz
push
lea
arpl
daa
jne
sub
imul
mov
mov
pop
sbb
mov
mov
push
or
cs
pop
shrb
aam
xchg
mov
mov
add
daa
inc
mov
dec
pusha
mov
fldcw
rorb
or
xchg
testb
lahf
jno
ret
outsl
push
test
cltd
cmp
jle
cwtl
jecxz
data16
insb
scas
inc
mov
ret
test
in
lea
mov
scas
dec
jmp
hlt
xor
lods
mov
mov
mov
sti
adc
repz
mov
mov
jb
popf
mov
mov
sub
test
mov
cmp
popf
ja
in
xchg
pop
push
jmp
lods
ret
xor
xchg
lret
in
imul
xchg
cltd
enter
data16
int
shrb
ljmp
adc
adc
lahf
and
outsb
movsl
lea
xchg
sbb
imul
scas
cmp
in
mov
scas
xchg
add
jmp
clc
dec
or
cltd
outsl
test
testb
mov
jmp
mov
jmp
sbb
xor
mov
mov
loopne
scas
idivb
mov
rcll
xchg
scas
sub
rcll
fs
inc
mov
sarl
xchg
cltd
ds
scas
outsl
scas
xchg
out
sub
jmp
mov
xor
xchg
mov
jb
inc
ret
xchg
stos
dec
mov
dec
mov
mov
lods
dec
mov
mov
mov
mov
fwait
mov
pop
lock
out
pop
scas
ret
out
sub
lret
ffree
movsb
mov
daa
sahf
mov
xchg
lods
mov
cmp
enter
in
popf
les
mov
movsb
std
add
pop
test
inc
dec
stos
push
inc
test
leave
lods
out
in
fwait
stos
cltd
pop
pop
call
mov
mov
sub
xchg
insl
mov
mov
lea
add
iret
mov
lret
pop
cmpsb
sbb
mov
cmc
repz
sub
xchg
out
mov
lods
add
sub
int
xchg
mov
lret
enter
mov
cmc
push
test
mov
mov
push
mov
aad
lcall
fwait
aaa
or
dec
xor
scas
mov
jmp
sub
add
mov
lods
jb
add
sub
lea
leave
imul
hlt
std
mov
sti
repnz
mov
rclb
push
sbb
jne
scas
mov
imul
mov
pop
xchg
cmp
in
pop
scas
mov
mov
sub
cs
aad
test
lods
fwait
movsl
test
ret
jmp
xchg
mov
dec
ret
or
in
or
sti
popf
fidivs
outsl
ds
nop
lret
mov
outsb
scas
cmpsl
pop
ret
adc
int
ljmp
adc
xchg
push
shrl
test
mov
mov
int3
stos
cmpsb
jle
mov
nop
cmpsl
mov
test
or
push
int3
mov
mov
frndint
lods
test
mov
sub
stos
inc
dec
jb
ret
jne
cltd
dec
scas
lret
mov
xchg
sub
cmp
mov
enter
push
ret
lods
jle
in
icebp
xchg
lods
pop
cltd
push
loopne
mov
int
sub
insl
dec
in
xchg
scas
sbbl
loopne
ljmp
test
xchg
mov
jae
mov
sarl
or
mov
mov
and
mov
out
outsl
mov
mov
das
bswap
ret
mov
cld
mov
add
sbb
pop
mov
mov
or
lods
sub
add
push
mov
inc
adc
lret
xor
aam
xchg
scas
mov
fldenv
xor
imul
ds
xchg
lcall
xor
test
xchg
cmpsl
cld
mov
fldenv
lahf
mov
xchg
xlat
hlt
in
mov
lea
lods
insb
mov
aaa
dec
rorl
xchg
mov
fidivl
mov
mov
imul
mov
jae
cltd
outsb
xchg
sub
addl
mov
cmp
call
scas
mov
dec
aad
sub
fnsave
adc
lods
ret
inc
leave
stos
mov
mov
mov
push
nop
mov
pop
mov
in
call
mov
xchg
mov
enter
cmpsl
scas
movsl
lret
dec
pop
sbb
jmp
iret
mov
stos
stos
hlt
sti
adc
int
mov
decb
add
pop
mov
xor
dec
sar
sbb
sbbl
shrl
cltd
popf
push
lcall
mov
lods
sbb
xchg
test
mov
or
shlb
inc
mov
daa
pushf
and
ret
mov
dec
sbb
out
inc
in
mov
ret
ret
mov
shrl
lods
jge
or
fmuls
dec
pop
ret
lock
add
sub
mov
mov
int
dec
jmp
add
scas
das
mov
mov
lret
inc
jmp
lret
lea
fsubrp
sti
sub
outsb
and
sbb
adc
sahf
stos
cmp
and
mov
gs
adc
outsb
push
scas
mov
adc
outsb
outsl
mov
add
xor
xlat
lods
fstps
cs
movsl
or
sbb
fwait
mov
lret
cmpsl
scas
xchg
mov
in
hlt
jge
pop
fnsave
push
push
mov
rclb
lods
mov
mov
cltd
rol
cmpsl
dec
sbb
xchg
jbe
push
pop
cwtl
ret
loop
gs
ss
popf
nop
rolb
ret
movb
enter
lret
shrb
sarl
pop
fs
jecxz
aas
mov
and
test
clc
dec
nop
sub
daa
sub
cmp
pop
movsl
lods
cld
and
mov
out
inc
jg
cmp
jns
pop
xchg
xor
cmpsl
sti
ljmp
cmp
xchg
mov
daa
inc
fstl
rcll
test
jmp
mov
jae
fnsave
cltd
outsl
stc
or
cmp
jne
sti
scas
dec
fs
stos
cmp
pop
stc
mov
adc
ret
pop
sbb
cmpsl
les
xor
sbb
sti
repnz
scas
popf
mov
xchg
jne
int
xchg
add
lds
xchg
mov
mov
outsl
sbb
mov
imul
cmpsl
xchg
mov
stc
mov
out
lret
das
cmpsl
cmp
pop
add
adc
mov
mov
lods
cmp
repnz
lret
mov
push
in
popf
in
sbb
jnp
daa
lock
inc
stos
or
jno
mov
add
mov
mov
in
lods
lea
cs
mov
popf
mov
push
iret
push
xchg
lcall
leave
jle
lret
mov
mov
scas
xchg
out
cmc
out
and
movsl
mov
ja
mov
mov
rclb
sub
cmp
loope
out
loope
jmp
out
jle
cmpsl
movsl
xor
jb
lods
fwait
ret
dec
lock
xchg
xchg
pop
mov
mov
enter
jl
mov
mov
mov
imul
push
dec
outsl
insb
xchg
dec
cmp
lea
push
mov
leave
mov
loop
xchg
mov
pop
int3
lea
xor
outsb
mov
test
push
xchg
mov
xchg
call
or
sarl
jle
mov
les
fwait
xchg
cmpsl
cmp
sub
mov
fwait
cmpsl
ret
lods
scas
les
pop
and
insb
pop
std
test
test
les
popf
mov
and
ljmp
je
xlat
mov
outsl
xchg
lcall
lods
jecxz
and
cltd
push
imul
mov
jnp
pop
mov
sub
pusha
lods
mov
and
in
lahf
out
sub
jbe
shll
mov
lret
pushf
pop
jle
leave
ret
cmpsl
mov
jb
sti
jmp
jecxz
and
repnz
ja
sarl
push
xchg
jle
imul
ja
mov
push
push
mov
mov
mov
cld
mov
cmpsb
in
adc
mov
jmp
xchg
mov
outsb
scas
fwait
add
rorb
shll
sahf
out
xchg
sub
mov
or
scas
sbb
mov
fwait
xchg
jo
mov
ret
mov
hlt
push
sbb
push
shlb
sbb
sti
add
cmpsl
cwtl
mov
test
push
mov
sbb
mov
or
test
pushf
cli
cmp
lret
inc
test
add
xchg
je
adc
mov
jmp
pop
insl
notb
jmp
mov
scas
mov
xor
lcall
mov
in
jo
pop
or
imul
cmc
aaa
mov
fwait
xchg
jmp
jge
mov
in
pop
mov
fldz
arpl
lret
nop
jg
inc
mov
pusha
bound
dec
stos
pop
add
xor
lock
scas
stos
cli
test
test
jecxz
jmp
test
pop
aam
mov
xor
cltd
jmp
xchg
bound
xchg
xor
sub
mov
das
push
pop
xchg
test
sub
jne
mov
push
cmpsb
bound
mov
repnz
sub
lea
jo
jne
mov
fwait
mov
mov
das
pop
add
xchg
lahf
nop
insl
xchg
gs
jne
sub
add
outsb
jmp
dec
cmpsb
mov
scas
or
fwait
cmp
pop
ret
es
lds
mov
icebp
scas
test
mov
jb
ficomps
xchg
ret
jne
stos
fdivrl
daa
jb
dec
rclb
stos
sbb
in
je
dec
mov
xchg
add
add
mov
jge
dec
popf
int3
mov
enter
arpl
add
jecxz
jne
mov
js
xchg
lods
push
pop
lret
scas
lahf
adc
mov
loop
xor
mov
dec
or
adc
ss
sahf
mov
add
shll
scas
dec
fwait
jmp
push
xchg
xor
outsl
xor
dec
popf
or
and
scas
jb
scas
sbb
add
enter
pusha
dec
mov
push
mov
sub
xor
test
mov
jns
and
jae
mov
pushf
testl
mov
in
rep
or
pop
les
jnp
mov
dec
rorl
pop
sub
and
in
push
int
lods
inc
jle
cmpsl
sub
leave
fcmovbe
in
xchg
jmp
cmpsb
mov
lcall
popf
mov
stos
inc
and
imulb
in
repz
mov
rol
mov
mov
or
test
and
xchg
inc
inc
cmp
add
xchg
sub
mov
ds
daa
mov
rol
imul
lea
mov
fstpl
push
inc
mov
cmpsl
fwait
scas
jbe
subl
mov
stos
mov
fisubs
mov
mov
mov
int
pop
sub
push
in
in
cmpsl
movb
mov
xcrypt-ecb
cmpsl
lret
mov
lret
mov
repz
nop
mov
fistpll
xor
ret
scas
dec
outsb
fwait
pop
xchg
cli
enter
jne
dec
push
lods
outsb
mov
fidivrl
and
mov
jbe
jo
sub
in
mov
mov
jmp
mov
push
cltd
repz
mov
gs
or
sahf
or
push
fisttpl
xchg
lds
mov
bound
jp
xor
lcall
call
mov
in
mov
jle
in
mov
and
add
enter
jbe
sub
mov
add
daa
cltd
sub
pop
scas
add
shrb
call
xor
xor
mov
sbb
xchg
hlt
add
dec
xchg
rol
in
pop
mov
jmp
std
mov
cmpsl
loope
xor
sbb
insl
je
scas
scas
js
mov
loope
lods
stos
mov
imul
pushf
lods
outsl
shl
dec
mov
xchg
mov
push
repz
sub
fldl
lret
je
jle
dec
jmp
lret
mov
mov
add
cwtl
cmp
adc
jns
ds
popf
lods
or
fdivl
test
xor
mov
mov
mov
mov
push
ret
out
fdivrs
mov
jno
test
adc
cmpsb
mov
sti
fisttpll
mov
xchg
scas
scas
stos
imul
xchg
outsb
icebp
push
sbb
mov
subl
out
xchg
stos
or
adc
xor
xchg
lea
xchg
fidivrl
cmpsb
push
test
add
movsl
xchg
or
mov
pop
out
divb
mov
popf
out
mov
incb
sahf
les
lds
jp
imul
mov
jae
in
lea
dec
lahf
lret
mov
clc
pop
push
mov
inc
push
shl
ret
test
sub
mov
fwait
pop
imul
fnsave
pop
mov
ja
mov
add
repz
xchg
lret
ss
in
mov
jge
scas
mov
lahf
aad
scas
cmc
sbb
mov
adc
xchg
loopne
lret
xor
in
sbb
test
cmpsl
std
rorl
xchg
je
mov
pushf
mov
ds
mov
fstpt
mov
mov
shlb
xor
mov
adc
hlt
sub
loope
lcall
mov
dec
pop
mov
sahf
pop
mov
insb
push
lea
mov
int
in
and
jl
push
inc
mov
jg
lea
mov
mov
lds
shrl
sbb
push
lods
vcvtsd2ss
addb
dec
mov
sbb
dec
push
out
xchg
jge
daa
mov
xchg
inc
and
sub
cwtl
in
xchg
xchg
jle
sub
clc
pop
mov
mov
jns
add
je
inc
lret
xchg
jbe
sahf
jbe
lods
xor
jp
popf
pushf
lods
inc
mov
cmpsb
out
mov
movb
cltd
push
scas
mov
jecxz
xorb
lods
jno
dec
test
das
xchg
adc
lods
xchg
xchg
test
xor
aaa
loope
ret
sub
mov
push
mov
rorl
pop
hlt
scas
sahf
movsb
lds
mov
mov
push
outsb
jl
cmc
xchg
add
in
mov
mov
fildll
test
imul
lcall
mov
mov
out
roll
and
pop
les
fnstcw
xchg
cmp
or
sahf
xchg
xchg
xchg
jno
mov
jecxz
jbe
lahf
xor
mov
lea
test
mov
outsb
popa
mov
jae
outsb
xchg
test
scas
pop
mov
add
and
mov
sahf
add
cmp
mov
ret
lcall
lods
mov
test
lahf
mov
in
int3
in
ret
stos
pop
pusha
mov
or
inc
lods
sbb
insl
sti
mov
inc
cwtl
xchg
pop
lods
mov
sub
mov
mov
popf
fcomi
and
xor
sub
ret
cmc
mov
mov
int
out
fmull
add
xchg
jnp
xchg
ss
pop
scas
int
xor
mov
lea
es
movsl
idiv
les
add
insl
lret
lea
push
dec
sub
scas
mov
aad
imul
aam
stos
stos
dec
cmp
cmp
rorl
push
lods
cs
mov
sarl
mov
test
lea
xchg
jle
push
cld
mov
xor
loope
ss
cld
lcall
sti
mov
movsb
mov
fisttps
daa
outsl
les
inc
ljmp
sbb
xchg
mov
fdivs
mov
push
xchg
sub
mov
add
inc
dec
test
jecxz
cs
fs
aad
cmp
cmpsl
mov
or
pushf
dec
mov
mov
mov
imul
mov
jmp
xchg
xor
jle
dec
stos
popa
out
pop
pop
sbb
mov
je
stos
in
cmp
mov
fwait
xor
fs
xchg
mov
mov
add
cmp
mov
sbb
inc
mov
out
push
mov
push
ds
jecxz
and
mov
jmp
xchg
xor
test
lcall
dec
mov
sahf
mov
neg
ret
test
push
outsb
xlat
dec
xchg
ret
sbb
jge
xor
mov
stos
sub
cmp
sti
mov
daa
repnz
xchg
inc
mov
out
jmp
inc
mov
sub
sub
lcall
push
mov
ret
movsl
lock
pushf
daa
adc
xchg
scas
or
leave
mov
cmp
and
sar
mov
xor
fwait
cwtl
mov
add
xchg
xchg
mov
shr
xorb
mov
adc
xchg
sub
imul
dec
insl
je
rcrl
sub
ret
outsl
mov
rorl
fstl
lret
enter
cmpsl
or
in
mov
ret
fwait
pop
sub
imul
add
mov
lret
mov
jmp
cmp
stc
mov
lds
mov
mov
cmpsl
mov
in
mov
fisubs
and
movsl
std
xlat
jmp
jmp
fistpll
sub
push
mov
xchg
or
in
jmp
jle
mov
lods
jo
ret
jbe
adc
lds
mov
sbb
or
and
mov
pop
xor
addb
jmp
inc
scas
mov
or
push
mov
sti
hlt
rorl
ljmp
xor
mov
ljmp
jp
sub
lea
pop
nop
dec
sahf
ljmp
cmpl
in
fs
add
pop
out
xchg
dec
jmp
or
je
pushf
test
out
jl
es
mov
and
fxch
lahf
jne
aad
popf
dec
imul
sub
std
xchg
mov
xlat
push
imul
add
mov
mov
mov
push
mov
lods
lods
fstl
xchg
mov
das
mov
sub
fwait
movsl
ficoml
insl
inc
ret
lods
das
mov
cli
xor
push
dec
mov
imul
xchg
sub
xor
push
mov
mov
insb
or
fistpll
fwait
dec
jo
inc
fdivl
sub
add
adc
pop
cmp
mov
fimull
int3
popf
mov
cwtl
jp
xchg
or
xchg
rol
push
sbb
loop
mov
sahf
xchg
sub
cwtl
repz
fistl
and
mov
insl
sub
xchg
nop
and
mov
mov
add
mov
in
mov
pop
push
lock
sub
fnsave
adc
mov
xchg
lods
xor
std
mov
sub
push
lds
lock
mov
mov
stos
mov
sub
pop
jle
cs
rorl
popf
int
cmp
or
xchg
mov
in
adc
mov
aaa
sub
test
jb
mov
cmp
leave
int3
lock
adc
mov
in
mov
imul
out
in
ret
mov
jle
mov
inc
mov
popf
push
lcall
gs
dec
sbb
popa
sti
imul
cmc
mov
cmp
sbb
outsb
inc
mov
xchg
test
xorl
mov
jge
repnz
mov
adc
jo
in
in
mov
inc
mov
ficoms
es
hlt
mov
and
daa
and
and
jg
stos
icebp
stc
cmp
sub
and
pop
outsl
mov
cmp
xchg
fwait
sub
mov
sbb
stos
icebp
aam
mov
daa
cs
pop
mov
xor
xchg
in
sbbb
std
sub
je
mov
pop
adc
leave
sub
jb
push
mov
and
leave
ret
mov
sub
cwtl
mov
in
push
repnz
dec
lds
xlat
xor
stos
cltd
mov
clc
popf
lea
mov
daa
mov
lea
lcall
test
sbb
mov
aaa
clc
pushf
ss
jo
mov
shrl
jle
imul
pop
mov
sahf
mov
stos
xchg
incb
shrl
mov
ss
pushf
daa
and
ret
add
pusha
mov
dec
fnstsw
cmp
mov
jne
jle
mov
dec
mov
int
popf
cli
jecxz
rcr
jge
jb
mov
mov
cld
jbe
pop
cwtl
mov
pop
rcll
ret
and
cltd
jo
push
sub
adc
xchg
mov
mov
mov
imul
cmp
push
sahf
lea
leave
push
out
out
mov
xorb
dec
xchg
cmp
xchg
dec
pop
in
mov
lods
push
jg
enter
ja
ret
mov
mov
xor
mov
add
test
pop
mov
aam
ret
in
in
fstpl
cltd
ret
sub
cmpsl
lcall
lods
sbb
push
mov
scas
dec
cltd
out
cmpl
clc
mov
stc
mov
sbb
mov
mov
std
ljmp
ret
mov
fstpl
stos
imul
fcomp
or
push
lods
jl
jmp
jbe
enter
cwtl
punpckhwd
sub
roll
jne
jle
xchg
mov
mov
cmpsb
in
xchg
scas
add
sbb
lret
ret
cwtl
std
ror
push
inc
mov
in
popf
insl
fxch
push
test
cmp
mov
iret
mov
sub
aaa
pop
mov
outsb
or
lods
dec
mov
mov
cmpsl
mov
sbb
outsl
sub
add
pop
or
shrb
ret
icebp
loope
lds
sti
cmpsl
or
mov
repz
jns
mov
lods
fs
mov
arpl
scas
mov
lock
xor
mov
stos
mov
mov
sar
dec
jbe
lods
and
dec
sbb
xchg
jmp
std
scas
cmpsl
pop
jno
cltd
fstpt
or
test
scas
mov
sahf
aas
outsb
xchg
sub
mov
mov
xchg
dec
stos
rolb
cmpsl
scas
mov
jl
mov
data16
negl
push
jmp
mov
and
or
xchg
ss
in
mov
leave
mov
adc
add
ret
insb
orb
enter
std
mov
mov
popf
fwait
dec
stos
push
fisubrl
dec
mov
jmp
mov
shrl
cmp
ljmp
test
call
outsb
mov
jle
mov
add
sub
stos
add
hlt
out
jne
repz
sub
mov
adc
mov
push
xchg
cmc
cltd
lcall
pop
test
pushf
popf
test
xchg
jbe
pop
inc
mov
and
jmp
std
les
daa
xchg
test
mov
jb
mov
sti
fimull
scas
mov
sub
pop
inc
lods
test
outsb
lahf
fwait
mov
sub
cmpsb
mov
ret
in
xor
jmp
pop
adc
lret
and
in
cmpsl
test
movsl
in
pop
nop
ljmp
fwait
cwtl
and
mov
mov
stc
and
stc
cmpsb
es
mov
and
mov
ret
rcl
test
insl
mov
pushf
xchg
ret
repnz
adc
in
sahf
in
xchg
rcll
mov
pop
cmpsb
jmp
push
lods
mov
scas
add
push
sti
lods
sbb
xor
and
lods
out
mov
xchg
dec
jmp
or
rcll
jnp
scas
cmc
call
stos
das
cmp
inc
mov
cmp
int
pop
xchg
jecxz
mov
mov
in
mov
int
xchg
hlt
aam
mov
out
aam
loope
mov
mov
xchg
xlat
sbb
mov
fwait
es
ror
push
jo
mov
cs
test
add
std
mov
mov
repnz
stos
clc
dec
xor
ret
ljmp
lock
ja
sub
stos
scas
mov
add
mov
repnz
daa
mov
mov
push
mov
and
add
mov
jmp
popf
push
jge
jne
mov
cltd
fwait
push
lds
das
jne
in
les
add
sbb
mov
mov
push
stos
and
mov
pop
jp
outsl
fisttpl
xor
lret
shll
mov
scas
adc
test
repz
pop
xchg
scas
iret
mov
call
mov
push
out
aad
stos
ds
lea
in
mov
not
fsubl
mov
or
mov
jne
dec
sahf
mov
jnp
dec
les
cld
mov
leave
mov
mov
xchg
xchg
test
shrb
jl
outsl
stc
mov
leave
xchg
mov
xchg
lock
inc
mov
scas
pushf
hlt
lods
and
adc
insl
in
popf
mov
jne
aad
xchg
push
mov
insl
dec
mov
jle
mov
daa
mov
jae
and
cmp
mov
fisubl
ja
cmpsl
mov
pop
daa
ja
leave
lods
jnp
mov
sub
cmpsl
in
out
and
cltd
les
mov
jnp
xchg
mov
push
movsb
repnz
into
popl
mov
xchg
out
sbb
pusha
jg
fstpt
mov
dec
insl
or
cmpsb
cmp
sub
sbb
jo
xor
mov
mov
sub
mov
wbinvd
mov
xchg
enter
inc
sub
mov
imul
into
incl
shrl
icebp
int
mov
enter
stos
xor
push
aas
fs
ret
outsb
inc
lcall
xchg
mov
mov
push
sahf
aas
mov
lret
mov
push
je
xorl
sub
pushl
mov
xchg
dec
xchg
or
sbb
pop
popf
insl
scas
ret
xchg
mov
add
inc
lods
mov
loop
fwait
jmp
and
xchg
xor
std
test
orl
push
imul
scas
mov
std
in
stos
sub
test
pop
mov
or
mov
xor
ret
mov
mov
and
mov
lea
jmp
pusha
mov
inc
insb
xchg
cmp
ret
call
stos
push
iret
push
jg
out
lods
vmovapd
stos
mov
xchg
jae
lods
adc
mov
adc
sbb
mov
lods
ja
les
fildll
pop
scas
pop
rclb
insl
push
pop
mov
jg
xchg
outsb
mov
fstpt
insl
jmp
lahf
mov
loope
mov
fwait
jecxz
add
aad
xchg
sbb
test
mov
mov
inc
leave
mov
mov
outsb
xchg
mov
push
stos
cltd
imul
dec
xor
pop
iret
xor
call
sbb
daa
xor
adc
in
jmp
cmp
in
fistpll
mov
inc
sub
mov
fwait
sbb
pop
out
mov
inc
ret
jmp
stos
in
sub
pop
xchg
imul
mov
jle
sbb
sub
cmp
hlt
jns
mov
ja
lods
out
push
jmp
lret
jecxz
ljmp
call
lods
outsl
mov
mov
int
mov
test
sahf
mov
jne
pop
in
popf
lods
dec
lea
cwtl
xchg
daa
test
call
js
add
mov
mov
roll
repnz
xor
scas
in
fwait
add
lret
or
lcall
lret
ret
test
pop
sub
mov
mov
inc
lock
outsl
pushf
mov
xchg
outsb
or
sahf
dec
sub
mov
sbb
je
outsb
mov
dec
sub
movsb
lcall
in
add
pop
fistl
and
std
outsb
mov
fwait
sti
jne
mov
xor
mov
inc
xorb
mov
mov
mov
push
outsb
pop
lods
lds
into
popf
xor
in
in
in
loopne
mov
ret
mov
pop
aas
repz
mov
jne
outsl
std
mov
mov
pop
test
lds
xor
fwait
xchg
adc
push
lea
sti
outsb
pop
dec
xor
in
insb
push
in
xor
outsb
mov
aas
ret
aaa
mov
mov
jb
in
xchg
cmpsb
mov
enter
into
sub
stos
dec
outsb
xor
mov
rcrb
test
mov
aam
jp
in
push
in
mov
pop
rcll
mov
push
jg
pop
mov
daa
ss
scas
ret
fldt
mov
mov
sahf
mov
lret
int
mov
ret
divb
xchg
mov
test
xchg
xchg
pop
jmp
sbb
fwait
lea
daa
dec
gs
cmc
sub
dec
mov
cltd
push
jle
lods
mov
mov
mov
aaa
std
mov
scas
xor
dec
outsb
xchg
pop
outsl
out
cmc
jmp
lret
insl
mov
mov
in
inc
mov
shll
mov
in
dec
hlt
test
out
ss
jbe
mov
xchg
cld
dec
mov
popf
mov
cmp
daa
sbb
loopne
ret
rolb
das
shrb
lds
hlt
mov
cmp
xor
sub
mov
and
mov
sbb
fs
mov
lahf
push
stos
jl
inc
mov
inc
in
mov
xor
int
mov
xchg
xor
mov
test
ljmp
mov
mov
pop
int3
nop
rol
mov
pop
jmp
shl
mov
cmpsl
test
xchg
icebp
aam
dec
icebp
loope
test
mov
dec
xchg
inc
mov
movsl
xor
push
sti
jmp
mov
cmpsb
mov
fildl
xchg
fwait
or
notb
xchg
xchg
xchg
imul
outsb
adc
pusha
mov
ss
sarl
outsl
fistpl
mov
stos
pop
arpl
add
pop
lret
xor
xchg
in
mov
lods
push
add
sub
adc
sbb
loope
icebp
xor
cltd
push
add
popf
dec
and
loopne
jmp
ret
in
pop
sti
xchg
jb
popa
mov
adc
xchg
mov
pop
ret
cmpsl
movsl
in
dec
jmp
sbb
push
mov
hlt
icebp
loopne
cmpsl
inc
jbe
mov
sbb
out
jnp
mov
sub
xor
lock
jb
int
popf
dec
dec
dec
stos
jge
jmp
jle
mov
outsl
dec
cwtl
sub
cltd
jmp
mov
shll
repz
lret
xor
mov
iret
jmp
xor
mov
int
mov
mov
mov
jge
sar
gs
mov
add
xchg
and
aam
dec
xchg
lods
sub
mov
lcall
dec
xchg
dec
in
sub
sbb
xchg
mov
imul
and
mov
jmp
sahf
enter
sbb
push
push
aas
insl
adc
stos
fwait
mov
lea
cmpsl
stos
int3
push
inc
insb
ret
stos
call
jle
int
hlt
std
pop
mov
xchg
int3
addr16
test
scas
ret
cmpsl
mov
scas
jecxz
mov
stc
ljmp
xor
dec
les
dec
ja
scas
test
mov
mov
mov
mov
cmp
sub
scas
mov
scas
scas
jns
mov
call
in
out
loop
mov
orl
mov
push
inc
cmc
outsb
movsb
sub
fwait
lcall
stos
rcrb
add
rcll
xchg
cltd
imul
or
xor
cmpsb
in
insb
mov
pop
outsl
xlat
xchg
lret
pop
lods
movsl
pop
stos
xor
in
stc
mov
js
add
sub
ljmp
cmp
das
mov
mov
push
mov
add
cmp
sbb
mov
xchg
lods
xor
dec
or
nop
mov
lods
nop
sub
cmp
ret
xor
xor
xchg
push
push
mov
inc
xchg
push
mov
ljmp
lds
aas
jmp
xor
adc
pop
cmp
pusha
out
mov
push
ret
mov
mov
lods
outsb
or
dec
outsl
dec
decl
out
test
xchg
out
jp
daa
xchg
xor
xchg
mov
sub
and
scas
iret
sub
scas
sub
jle
loop
lods
das
push
mov
push
xor
out
mov
std
xchg
cmp
push
in
xchg
ret
jne
cmpsl
std
xchg
sub
mov
js
loope
ret
cs
mov
inc
outsb
mov
cmc
dec
stos
ret
xchg
scas
mov
xor
jno
stos
xchg
test
xchg
xchg
test
sub
aaa
pusha
add
sub
fidivrl
ret
pop
sub
mov
aas
lods
insl
inc
push
pop
jg
mov
fstp
mov
mov
aad
xor
sub
pop
ret
jno
pop
les
nop
dec
stc
shrl
xchg
popf
test
adc
outsb
mov
dec
scas
mov
mov
fwait
mov
ret
lods
jo
dec
or
mov
pop
add
out
icebp
dec
pop
jecxz
jbe
cmpsl
sub
aam
mov
stos
sub
dec
add
mov
jmp
pop
cmp
and
mov
shrb
sti
jno
lods
mov
jmp
fwait
mov
cmp
test
mov
outsb
adc
jecxz
mov
xchg
adc
dec
pop
xchg
mov
lahf
or
ret
xor
leave
push
or
scas
fnstsw
push
fwait
mov
xchg
inc
xchg
mov
mov
int3
jmp
mov
mov
mov
jecxz
lret
cld
mov
mov
inc
insb
les
jle
in
out
dec
pop
sub
sub
hlt
dec
cmp
popf
cltd
in
mov
ljmp
stos
in
dec
inc
mov
add
inc
pusha
lods
les
push
mov
xor
outsb
scas
lret
xchg
sbb
mov
push
mov
mov
pusha
mov
lods
sub
push
add
jo
icebp
fs
xchg
or
aas
or
jle
or
mov
imul
je
push
mov
ret
daa
scas
push
mov
add
adc
out
icebp
test
xchg
pop
sub
sub
mov
inc
jb
test
xchg
out
cwtl
stos
movsl
icebp
xchg
xchg
xchg
outsl
test
cwtl
or
cmp
mov
sub
mov
popf
lods
jmp
mov
das
push
or
push
xchg
xorl
in
cltd
ret
outsb
fsubs
lods
aad
dec
mov
in
sbb
mov
ret
xor
jmp
sub
cwtl
sub
xor
mov
mov
push
xor
xchg
push
in
push
mov
or
lods
mov
popf
push
mov
in
test
adc
ret
ja
sahf
cwtl
scas
mov
cltd
mov
idiv
insl
lret
pop
jno
lcall
lea
jmp
sub
lret
or
movb
and
xchg
lret
js
xor
sbb
fsts
add
sub
mov
jg
lods
mov
fwait
sbb
dec
adcb
mov
mov
mov
repz
jmp
mov
jle
mov
push
cmp
les
jg
xchg
mov
xchg
daa
adc
ret
xor
mov
jle
mov
in
outsl
rclb
xchg
lods
sub
mov
push
das
cmp
test
inc
notb
mov
repnz
sti
adc
cltd
jae
pop
sbbl
cmpsb
scas
xchg
lock
hlt
popf
jmp
shlb
mov
lock
arpl
scas
sub
scas
xchg
aad
repnz
in
fwait
lret
mov
sbb
fistpl
ret
sub
mov
leave
inc
test
jne
movb
aaa
mov
lea
enter
fstl
jmp
mov
jo
cmp
sahf
cmp
std
shrl
or
jb
inc
scas
add
lea
mov
stos
mov
and
in
fadds
scas
in
lahf
ret
out
pop
adc
outsb
js
mov
mov
fbstp
xchg
jecxz
ja
lahf
mov
mov
ret
mov
pop
and
daa
inc
mov
xchg
mov
sub
iret
in
les
xorl
or
scas
inc
out
mov
lahf
lret
push
sbb
xchg
repnz
insl
mov
cltd
popf
mov
insb
cmc
loope
in
xchg
push
sbb
mov
cwtl
lcall
std
mov
ret
mov
push
inc
idivb
jae
ret
and
int
in
dec
jb
sub
andl
scas
mov
cwtl
stos
pusha
jle
popa
mov
ret
test
push
in
sub
sub
out
nop
lods
fidivs
mov
pop
sti
xchg
movsl
sbb
das
fwait
inc
push
mov
rorl
sub
xorb
mov
mov
insl
mov
aas
test
inc
xchg
rcrb
ljmp
push
andb
lods
popf
mov
cwtl
sahf
ljmp
pusha
lods
pushf
jge
hlt
outsl
rol
lcall
daa
mov
cmpsl
inc
add
divb
das
mov
test
outsb
cmpsl
lea
daa
fmull
ret
pop
lahf
adcb
lcall
shrd
jne
add
dec
jb
lahf
or
add
mov
sub
mov
ret
dec
in
push
or
int
fnsave
mov
fdivrs
add
in
insl
mov
mov
push
in
pop
xchg
cltd
or
imul
sti
int
xor
out
xor
cltd
daa
outsb
int3
xorl
out
int3
decl
test
xor
loope
mov
cmpsl
std
int
lods
mov
mov
lahf
ret
testb
rcll
insl
pop
pop
push
lock
xchg
lea
sub
mov
cld
jae
in
imul
bound
mov
scas
xchg
pop
xchg
mov
lea
mov
mov
mov
cmpsb
jae
pop
stos
xchg
mov
enter
mov
lcall
push
outsb
cmp
mov
insl
in
imul
imul
outsl
daa
mov
sub
and
mov
lock
aas
add
mov
lcall
das
mov
lods
or
mov
sti
loope
and
mov
dec
scas
sub
test
leave
and
mov
es
dec
adc
imul
frstor
mov
notb
stos
imul
mov
divb
int
dec
pop
push
adc
popf
fs
daa
pop
xchg
push
in
cmpsl
cmpsl
fwait
pop
dec
xchg
ret
lods
orb
add
sahf
lds
js
stc
lods
xchg
icebp
push
inc
mov
mov
mov
adc
fmul
stos
xor
int
fwait
idivl
push
ss
ja
mov
mov
int
cmp
imul
out
ret
scas
mov
loopne
subb
jge
int3
fidivrl
mov
jae
daa
ja
scas
aad
in
out
enter
stos
sbb
jl
jmp
push
xor
icebp
hlt
xchg
push
or
std
sub
adc
test
pop
cmpsl
sub
mov
xor
adc
outsl
adc
mov
push
or
fcmovnu
mov
adc
sbb
bound
mov
jmp
or
sbb
test
and
hlt
js
sub
insl
jns
iret
repnz
test
shrl
xor
test
sub
mov
out
mov
xchg
inc
lods
imul
mov
inc
push
mov
lret
inc
ret
mov
test
pop
dec
adc
ret
cli
cmc
scas
mov
xchg
aas
pop
jmp
and
call
inc
push
lahf
adc
sub
dec
stos
rorl
lcall
into
mov
mov
stos
fistps
xchg
daa
addr16
fdivrs
jp
jbe
out
mov
test
mov
fisttpll
jle
sub
mov
cmc
xor
test
or
mov
and
or
mov
mov
pop
cmpsl
insb
jno
lea
sbb
in
popf
outsl
sarl
mov
andl
ja
cmpsl
mov
leave
int
jmp
std
adc
mov
scas
sbb
add
inc
xchg
pop
sahf
in
xor
idivb
test
add
jmp
push
enter
pop
fnsave
lods
lahf
mov
aaa
subb
ret
lock
jle
xchg
mov
rcrb
pop
aas
pop
sub
or
push
sti
fnstenv
mov
out
adc
mov
mov
fwait
mov
nop
mov
insb
fwait
add
test
xchg
popf
mov
loope
scas
cmp
mov
fldcw
outsb
sub
xor
or
pop
ljmp
and
pop
fnsave
cmc
xchg
cs
and
mov
shll
popf
stos
jae
mov
loope
stos
adc
imulb
mov
lret
mov
mov
ds
sub
mov
mov
pop
push
mov
sbbb
push
mov
cmpsl
push
mov
shr
xchg
ja
mov
hlt
fcomps
push
jmp
xchg
xor
fwait
sub
in
mov
and
xor
aam
cli
mov
add
mov
or
dec
jbe
add
jecxz
xor
cld
mov
xchg
loope
movsl
pop
ret
ret
adc
mov
jmp
movsb
pop
jle
in
sub
sub
icebp
cmp
lahf
pop
push
cltd
jmp
add
out
std
scas
mov
movsl
jp
or
inc
ret
cwtl
sbb
lods
mov
insb
mov
sub
out
sbb
loope
inc
mov
ret
outsl
lods
stos
xlat
xor
imul
pop
mov
sahf
jge
mov
daa
out
popf
mov
loopne
mov
lea
lods
rorb
out
mov
and
jmp
stos
xchg
ds
mov
repz
sahf
pop
mov
xchg
push
cmpsl
mov
ja
test
stos
mov
add
clc
jge
repz
std
mov
xchg
stos
imul
lds
movsb
lret
mov
mov
in
shrb
inc
fld
and
arpl
sub
cmpsb
lods
xor
or
lds
clc
sub
int
mov
jno
push
jle
sub
cmpsb
jmp
ret
push
lods
xchg
push
shr
pop
ffree
bound
push
jle
jb
int
push
mov
mov
push
sub
dec
mov
lods
mov
mov
pop
mov
les
test
mov
faddp
mov
out
adc
cmpsb
cs
mov
lds
adc
dec
xchg
lods
je
dec
mov
rcll
mov
mov
pop
jns
xor
stc
ret
clc
pop
pop
xchg
nop
mov
daa
jne
lods
mov
scas
xor
daa
mov
dec
stc
xchg
jae
pop
cmc
sub
mov
das
jg
ret
daa
cmpsl
mov
jmp
cmp
rcrl
mov
cwtl
mov
cltd
fisttps
rcrl
ret
out
ror
jl
in
fwait
in
ds
lods
insb
adc
stos
jmp
jne
push
cld
xor
aam
mov
dec
mov
rcrl
pop
in
jge
mov
in
jl
insl
ud2
mov
insb
ret
daa
push
jp
stos
aad
js
adc
int3
jb
popf
outsl
mov
insl
xor
mov
pop
mov
and
sub
jnp
js
sub
xchg
jne
mov
xchg
mov
popf
mov
daa
dec
pushf
ret
push
rol
idiv
fnsave
lods
push
mov
mov
stos
mov
jmp
pop
mov
ror
out
aam
lds
mov
xchg
movsb
inc
dec
mov
sahf
mov
fbld
ret
andl
mov
movsb
pop
mov
enter
inc
ljmp
lahf
in
xchg
mov
iret
ljmp
jle
mov
push
cli
mov
xchg
mov
mov
in
fcompl
test
dec
dec
insb
push
xchg
push
ret
hlt
arpl
mov
dec
sbb
mov
test
scas
fwait
mov
xchg
sahf
in
mov
cmc
dec
mov
stos
stos
cmp
std
mov
lret
mov
ret
test
jo
mov
rol
scas
mov
dec
stos
xchg
and
xchg
mov
lea
out
pop
mov
imul
and
xchg
sub
je
pop
cmp
jp
jle
add
xchg
scas
scas
fmuls
cmc
jl
mov
cmp
mov
xchg
xchg
adc
mov
xchg
imul
fdivrs
shll
mov
cltd
fwait
das
or
shll
ljmp
shrl
popf
xchg
fwait
fwait
mov
jmp
jo
mov
jmp
lods
push
jnp
add
jns
test
mov
cmpsl
pop
fildll
pop
and
xchg
ja
sti
repnz
xchg
imulb
add
jmp
int
xor
and
scas
jnp
xchg
nop
cmpb
xor
ss
insl
lahf
xchg
pop
mov
mov
insb
mov
test
mov
gs
jl
call
cs
jle
xchg
pop
loope
movsl
xchg
imul
imul
repnz
movsb
icebp
adc
mov
xor
mov
cmpsl
xor
sbb
pushf
lods
xchg
out
insb
push
outsl
scas
sahf
push
pop
mov
mov
mov
xor
lahf
sbb
repz
xchg
inc
mov
sbb
leave
lods
dec
ret
jp
rcll
dec
insb
das
jle
shl
imul
insl
mov
mov
fstpt
xor
mov
mov
mov
lret
add
aad
mov
leave
cwtl
fbstp
jge
mov
out
mov
or
punpckldq
mov
xchg
outsl
sbbl
xchg
imulb
enter
test
cs
arpl
add
ret
sub
cmp
stos
mov
jle
xchg
mov
dec
or
iret
mov
xchg
sub
aam
mov
lods
cmp
push
jl
push
add
aas
xchg
mov
fsubl
lret
mov
movsb
cmc
adc
sti
scas
mov
ret
imul
mov
xor
xchg
ret
inc
lret
and
dec
push
in
xor
in
lds
push
bound
cwtl
mov
mov
ret
lods
push
mov
mov
lret
mov
nop
or
in
test
pop
sbb
sbb
idivl
xor
xchg
adc
jmp
dec
sub
mov
stc
roll
sarb
fadds
cmpsl
mov
mov
cwtl
scas
xchg
repnz
negl
mov
xchg
sub
nop
push
int
and
in
lcall
cmp
mov
addr16
aam
in
xor
mov
test
xor
mov
dec
mov
sbb
subb
outsl
lods
cltd
mov
dec
jge
leave
sbb
call
subl
and
xchg
xchg
out
dec
in
adc
dec
mov
mov
xor
xchg
cmp
ja
xchg
cmp
mov
stos
mov
push
xchg
das
test
xchg
hlt
insl
xchg
inc
movsb
imul
ret
insl
push
pop
mov
mov
sub
pushf
pop
mov
insb
sbb
repnz
xchg
cmp
jg
ret
fdivrs
mov
pop
outsb
mov
scas
mov
addl
cltd
mov
cmpsl
pop
xchg
or
mov
jge
push
pop
shrl
sub
pop
sbb
imul
in
lret
stc
in
ret
dec
cwtl
mov
inc
lcall
bound
leave
mov
mov
movsb
push
ret
xor
mov
or
mov
inc
sahf
adc
add
cmp
outsb
pop
lret
shll
mov
andl
mov
hlt
out
mov
sub
xchg
mov
xor
insb
add
addl
fisubrs
cli
loope
ret
ret
mov
xlat
sahf
stos
push
mov
inc
into
ret
inc
mov
les
mov
mov
scas
pop
jno
mov
and
ret
dec
xor
sub
xchg
jmp
outsb
loope
mov
mov
and
mov
out
in
int
jno
xlat
mov
cmpsl
jne
out
xlat
mov
movsl
push
scas
ret
mov
imul
mov
pop
outsb
lret
sahf
mov
push
push
mov
dec
mov
enter
cmpsl
vpunpckhqdq
push
into
mov
fwait
dec
dec
mov
push
dec
ret
sub
fnstsw
insl
outsb
sbb
xchg
test
in
jb
lret
lcall
inc
std
mov
jmp
outsb
mov
push
test
lods
insb
sub
mov
shll
jno
dec
les
js
cwtl
popf
std
outsb
inc
sbb
mov
adc
mov
fldcw
cmpsl
scas
cmp
mov
xchg
xchg
sub
pop
das
divl
sub
or
outsl
sub
in
fildll
fwait
jns
xor
andl
lea
notb
je
mov
leave
insl
cli
xchg
outsb
add
mov
inc
or
stc
mov
subl
fwait
mov
mov
in
bt
sbb
or
call
mov
cmp
outsb
or
lahf
mov
push
mov
ja,pn
mov
pusha
or
ret
imul
mov
lcall
lahf
mov
cmp
xchg
mov
sub
in
lahf
jmp
mov
in
xorb
mov
fstl
dec
ret
outsl
xchg
lea
mov
icebp
mov
cmp
and
inc
imulb
loope
mov
add
out
push
inc
js
mov
shl
adc
out
mov
cmp
sub
cmp
in
xchg
icebp
int
cltd
sbb
stc
mov
cmp
test
movsl
mov
ja
rclb
popf
mov
xchg
sti
jb
sub
pop
ret
dec
xchg
mov
sub
in
arpl
int3
rolb
pop
or
xchg
hlt
xor
movsb
stos
outsl
into
xchg
das
sti
mov
test
mov
cs
sub
push
mov
out
hlt
mov
mov
mov
xchg
scas
sub
jmp
inc
sbb
lret
inc
int
mov
jp
sbb
movsb
inc
fwait
mov
mov
or
sub
mov
jmp
mov
mov
pop
outsb
in
in
mov
fwait
mov
fwait
movsb
ret
push
insb
xor
xchg
pushf
mov
push
insl
inc
mov
stos
js
fsubrs
je
mov
cli
scas
movsb
aam
outsb
mov
sub
mov
je
out
popf
in
pushf
ja
mov
cmpsl
xchg
push
inc
mov
pop
mov
mov
and
pop
cmp
push
cwtl
mov
test
ret
push
cltd
ret
mov
mov
jle
pop
mov
mov
movsb
xor
test
test
pop
in
rorl
fldcw
lods
insl
push
mov
je
mov
scas
mov
sub
lods
les
daa
or
pusha
lcall
sub
push
sti
xor
sahf
fnstsw
es
pushf
jns
les
ret
sub
jl
mov
cmpsl
ffree
inc
in
xlat
leave
out
sub
aam
rolb
inc
mov
lds
xchg
sbb
ret
dec
jle
stos
xor
mov
push
repz
out
mov
adc
sub
xor
cltd
aad
iret
pop
mov
mov
mov
xor
jne
in
mov
popf
sarb
jmp
xor
mov
test
mov
repz
mov
inc
cwtl
mov
fistps
sub
test
dec
loope
outsb
es
nop
mov
xor
push
inc
out
popf
jo
stos
adc
xorl
scas
mov
scas
dec
js
and
or
add
xor
lods
int
out
lahf
or
movsl
repz
pop
xchg
imul
insb
mov
xor
arpl
cmpsl
fmuls
inc
sbb
cwtl
xchg
xor
arpl
ret
ss
enter
mov
lds
mov
call
jne
inc
cld
xchg
mov
daa
adc
stos
vpmacsdd
sti
cmp
mov
icebp
popf
aad
nop
sub
jg
outsb
fmull
push
dec
push
ret
push
lret
cld
ror
push
sub
fstpl
dec
in
dec
jno
rclb
mov
cwtl
loop
lea
dec
jne
inc
adc
mov
aaa
xchg
arpl
jb
movsl
jmp
aaa
pop
cs
stos
jnp
test
xchg
mov
test
mov
insl
outsb
mov
pop
jae
cmp
lds
popf
imulb
in
adc
inc
pushf
lods
sbb
lret
adc
outsb
xor
pop
or
mov
adc
mov
xchg
loope
stos
loop
mov
cmpsb
sub
ret
lock
popf
cmp
outsl
xchg
insl
dec
repz
push
mov
push
pushf
sub
cmp
or
sbb
in
or
xchg
mov
inc
test
dec
xchg
inc
popf
out
stos
push
loopne
adc
mov
sub
mov
sbb
lds
xor
inc
fwait
jg
nop
mov
ret
sub
xor
mov
sub
mov
xchg
mov
or
push
int
inc
sti
push
xor
xchg
popf
shlb
outsb
xchg
pop
daa
mov
divl
mov
scas
dec
jmp
outsb
mov
sbb
push
mov
mov
add
mov
scas
or
xchg
jne
cmp
lods
stos
daa
push
in
cmpsb
ret
das
rorl
mov
loope
mov
in
lock
imul
sbb
lret
fiaddl
insl
and
mov
stc
fiadds
in
popf
or
scas
cltd
cmpsl
mov
or
or
sahf
add
std
xchg
jne
lea
ret
sarl
sub
popa
sahf
xchg
dec
stos
scas
subl
jle
pusha
lret
popf
inc
fldt
inc
xchg
imul
fst
ret
divb
mov
lea
outsb
pop
mov
cmpsl
ret
fs
inc
xchg
fwait
dec
imul
push
outsb
ja
inc
mov
xchg
repz
and
mov
loope
mov
pop
and
inc
mov
mov
sub
jne
mov
xchg
sti
add
adc
pop
push
xchg
popa
push
repz
add
mov
inc
xchg
fisttpl
les
out
push
push
xchg
xchg
sbb
mov
movsl
test
out
cmpsl
popf
in
sub
xor
pop
mov
bound
mov
icebp
jne
jns
fwait
add
sub
enter
jl
imul
xchg
mov
popf
cmp
movsb
and
dec
pushf
sub
mov
cltd
mov
mov
xchg
sub
ret
adc
mov
imul
insl
inc
fidivl
lea
push
in
movsl
nop
mov
xor
test
outsb
bsf
test
mov
xchg
scas
pop
xor
popf
cltd
mov
mov
cltd
mov
dec
outsb
jmp
mov
enter
mov
or
scas
xchg
mov
inc
mov
mov
push
lods
xor
adc
in
stos
mov
aad
scas
fwait
pop
xor
scas
in
ss
pop
lahf
cmp
std
shlb
mov
mov
loope
mov
ja
xchg
repnz
xchg
cmp
rcl
stos
decb
push
xchg
icebp
xor
in
mov
push
sub
mov
or
jb
or
lcall
and
repz
xchg
mov
sahf
inc
mov
jle
cltd
ljmp
adc
mov
jg
xchg
sub
lods
clc
into
stos
push
push
pop
fcoml
stos
fcomps
ret
je
mov
adc
cwtl
pop
iret
inc
shrb
mov
dec
pop
movsb
dec
mov
mov
int
mov
jns
xchg
and
lcall
mov
sub
pop
in
mov
mov
lahf
cmc
mov
scas
icebp
popf
loope
aaa
jmp
lret
dec
mov
push
mov
mov
sub
xchg
jge
ljmp
push
xor
jmp
scas
pop
mov
lret
arpl
divb
xchg
mov
inc
scas
sti
jmp
scas
lea
movsb
pop
push
mov
jp
in
test
mov
add
push
test
popa
jle
mov
out
lods
mov
sub
ret
push
xlat
lods
insb
inc
lcall
mov
xchg
xor
push
mov
pop
sub
insl
mov
xorl
fisttpl
testl
mov
in
shll
int
cmovb
mov
mov
pop
ljmp
ret
cmc
push
lea
mov
mov
mov
enter
daa
and
aas
mov
push
addl
cltd
in
adc
fwait
push
mov
mov
clc
xor
pop
lcall
jo
push
test
cmp
ljmp
mov
mov
stc
adc
mov
mov
pop
into
lods
out
push
sub
mov
or
lcall
mov
cmp
ljmp
idiv
imul
mov
push
jecxz
and
mov
push
cs
jmp
stos
lea
pop
btr
dec
imulb
jge
sub
mov
mov
inc
and
mov
test
sbbl
outsb
js
sbb
adc
jbe
loope
insb
lods
adc
std
pushf
xchg
imul
nop
mov
scas
shlb
xchg
imul
stos
fisttpl
jo
ret
ret
ja
xchg
bsr
out
dec
jle
popf
sub
push
fdivs
cmc
cmpsl
shll
in
sbb
mov
int
dec
mov
add
imul
in
lds
pop
lret
dec
pushl
add
popf
xchg
and
xor
mov
dec
outsb
pop
ret
cmpsl
test
cmc
sbb
mov
mov
in
mov
cmp
sub
pop
jno
mov
imul
imul
scas
vpsllw
daa
insl
into
xchg
stos
cltd
pop
mov
in
stos
add
and
mov
xchg
xchg
cmpsl
lods
out
jle
sub
dec
sbb
popf
lods
mov
add
out
dec
lods
mov
xor
mov
test
daa
mov
add
jae
ret
jne
dec
mov
out
xchg
mov
or
sub
mov
inc
test
sub
xor
xchg
imul
jnp
stc
mov
xchg
sub
ret
xor
pop
push
mov
mov
jo
test
push
test
test
ret
test
daa
dec
or
scas
out
push
jmp
lcall
mov
mov
imul
mov
mov
stos
xor
sbb
mov
mov
cmpb
cld
hlt
inc
stos
cmpsl
sbb
mov
outsl
xlat
scas
mov
cmpb
mov
int
dec
insb
cmpsl
lcall
outsb
loopne
ljmp
outsb
mov
cmp
xor
jb,pt
pop
mov
mov
mov
sti
into
inc
fistl
sub
pop
enter
mov
popf
xchg
pop
scas
addb
mov
xchg
mov
jp
mov
test
lods
mov
push
into
and
cwtl
std
imul
in
xor
loop
mov
mov
mov
adc
mov
mov
sub
add
out
and
imul
pop
ficomps
ljmp
stos
dec
jae
cs
lods
popa
leave
mov
mov
test
sbb
mov
sub
push
and
int
stos
loope
out
jl
mov
jecxz
addb
mov
and
popf
ljmp
jl
mov
addr16
pop
ffree
mov
in
and
fwait
or
push
sahf
mov
and
sub
or
dec
add
mov
leave
fwait
ja
in
xchg
mov
push
aaa
daa
sub
in
pop
fcomps
xchg
mov
shlb
stos
popf
lods
push
lea
paddsw
mov
xor
xchg
sahf
stos
mov
cmpsl
mov
mov
push
xchg
dec
inc
rorb
shrl
push
sahf
mov
and
cld
jo
dec
shll
mov
movsb
rclb
out
ffree
cmpsl
sbb
lcall
xor
and
sub
lods
sbbl
add
mov
out
and
stos
loope
dec
xchg
lods
hlt
addr16
mov
nop
jae
jbe
lds
pop
outsb
mov
fbld
xchg
push
lahf
cmpsl
jns
xchg
popa
adc
in
mov
lcall
imul
mov
in
adc
mov
sbb
cwtl
or
or
xchg
ljmp
jnp
loop
sarl
and
push
mov
lds
pushf
daa
jb
push
xchg
out
fnstenv
mov
rorl
shll
xchg
pop
pop
pop
ret
xchg
mov
sub
fldl
add
mov
jmp
fmull
ret
sub
push
sub
jnp
daa
pop
xchg
adc
dec
loope
out
pusha
xchg
mov
jle
cs
or
jg
ja
enter
mov
mov
shll
in
sub
das
push
lcall
test
fcmovnb
jbe
test
scas
lods
mov
scas
fsubrl
or
fucom
xchg
adc
fldcw
and
shlb
mov
sub
mov
push
cmp
xchg
scas
in
mov
outsb
nop
xchg
je
leave
lcall
in
mov
scas
cmpsl
push
sarb
xchg
hlt
jne
nop
test
mov
movsl
xor
cmp
sub
cmp
cmp
inc
imul
mov
out
shlb
mov
xchg
imul
push
or
fdivs
insb
in
jl
into
ret
outsl
std
jg
mov
xchg
mov
scas
xchg
testb
mov
mov
mov
pushf
xchg
sub
pop
lods
cmpsl
xlat
cld
cmp
mov
push
mov
int3
mov
test
lods
stos
ljmp
movsl
fwait
or
ror
ss
xchg
scas
mov
push
shlb
lea
out
sub
push
popf
mov
or
fnstenv
cltd
inc
xchg
insb
xchg
mov
lods
inc
int
cmpsl
fistps
cltd
inc
mov
mov
mov
dec
xchg
mov
xchg
in
inc
and
pop
sub
mov
stos
lods
mov
sar
xchg
and
mov
insb
scas
pop
push
hlt
mov
or
jb
scas
push
imul
pop
cs
leave
mov
stos
dec
dec
ljmp
stos
jge
cmp
in
mov
leave
movsb
stos
jmp
inc
sbb
jne
mov
mov
dec
jge
in
jnp
scas
sub
lcall
xchg
lret
push
pop
add
mov
mov
std
scas
int3
mov
jb
mov
dec
fldl
push
dec
mov
push
mov
test
lret
ret
pop
test
mov
rclb
mov
mov
mov
mov
gs
sbb
lahf
fnstenv
xchg
insl
jge
mov
jae
ret
test
mov
popf
lock
popf
pop
sub
imul
in
sti
inc
test
mov
mull
pop
test
mov
je
dec
mov
push
sbb
xor
mov
ss
xor
xlat
daa
sub
dec
stos
sbb
lods
mulb
mov
mov
mov
fcomp
xchg
out
mov
outsb
or
sbb
push
xchg
out
cmpsl
sbb
mov
mov
cmp
repz
rcll
imul
inc
cld
mov
stos
mulb
xor
pop
sub
clc
cmp
xchg
xchg
xor
inc
pop
mov
xchg
fidivrs
add
imulb
fsubrs
mov
lea
mov
test
hlt
mov
je
sbb
ret
ljmp
je
add
mov
jecxz
pop
sbb
in
lods
mov
fsubs
sub
push
and
lds
adc
std
rcrl
dec
jle
ja
ds
test
inc
ja
mov
xor
mov
lea
sahf
das
stc
fldenv
cs
mov
jge
jne
mov
dec
jmp
sub
or
inc
clc
push
or
xchg
lds
push
mov
mov
movsb
popa
lret
push
xchg
mov
divb
mov
adc
mulb
xor
outsl
std
lahf
mov
in
ds
push
mov
mov
jg
mov
repnz
xor
mov
push
leave
popf
divb
inc
cmpsl
mov
or
mov
movsl
push
stos
dec
lds
sub
sahf
xchg
dec
jne
fwait
stc
xchg
push
jae
jge
mov
daa
xor
pushf
lods
idivb
mov
dec
fwait
mov
shlb
mov
mov
jl
scas
sub
and
dec
inc
mov
repz
mov
cmpb
cmp
cltd
imulb
xchg
lods
xchg
scas
lods
loope
mov
mov
jnp
xchg
movsb
inc
cltd
out
xchg
push
cld
mov
icebp
dec
rol
mov
stos
jae
push
push
scas
ja
rcrl
leave
popf
add
add
push
mov
mov
jl
mov
xor
or
int3
mov
mov
je
lea
ret
mov
outsb
movsl
fwait
inc
cld
es
mov
xor
stos
xor
scas
mov
outsb
cmp
mov
cmc
das
xchg
mov
fsubrl
mov
pop
rclb
push
outsl
mov
stos
out
cmp
icebp
ret
xor
fdivrp
popa
ret
popl
int
mov
hlt
in
sub
cli
mov
pop
test
lcall
mov
mov
scas
aaa
and
mov
mov
cld
sbb
dec
sbb
aaa
add
mov
out
inc
in
sub
pop
xorb
ret
jno
outsb
scas
sbb
mov
sbb
mov
ljmp
rorl
mov
mov
xor
orb
outsb
int3
mov
xchg
add
int
pop
jmp
and
jae
xchg
mov
imulb
adc
mov
mov
add
mov
int
ficoml
call
mov
imulb
mov
loope
jg
stos
int
les
in
mov
popf
cmpsl
rorl
push
into
mov
sti
lds
xchg
mov
loop
pushf
xchg
js
cmp
pop
lds
xchg
js
cwtl
jae
xchg
push
shrd
sahf
mov
loope
mov
mov
jmp
mov
negb
out
mov
pop
mov
lahf
cmp
dec
or
mov
adc
ret
mov
fst
mov
stc
xchg
movb
adc
mov
outsl
popl
dec
cmpsl
mov
cmpsb
mov
mov
out
sbb
ljmp
add
fsubl
mov
xchg
test
xchg
mov
dec
jmp
or
cmpsl
jnp
pop
mov
mov
ret
push
mov
and
pop
or
out
sbb
push
stos
pop
daa
and
mov
shrb
lods
imul
repz
xor
stos
mov
xchg
rcr
lcall
dec
pop
stos
ss
in
cmpsl
xchg
mov
mov
pop
mov
xchg
add
jp
add
xchg
ja
and
sahf
hlt
mov
pop
mov
push
xchg
pop
inc
inc
stos
push
imul
test
in
aaa
bound
cmpsb
xor
outsb
mov
mov
mov
add
xor
in
sbb
cmpsl
sub
in
mov
mov
in
jmp
lcall
outsl
pop
xchg
aas
les
loope
or
dec
mov
mov
rorb
fwait
lods
mov
mov
or
in
in
or
sbb
popa
inc
sub
scas
sub
sbb
xor
mov
add
lods
push
imul
in
mov
mov
stc
sbb
mov
mov
cmp
mov
add
cmpsl
mov
xor
and
inc
popf
mov
jmp
mov
jbe
aas
inc
xchg
sub
ret
push
cmp
mov
push
xchg
sbbb
and
loopne
push
mov
or
inc
imul
mov
imul
mov
lods
jo
jecxz
loop
rclb
in
cmp
adc
lock
inc
sbb
mov
mov
das
pusha
mov
or
lock
dec
mov
jle
mov
xchg
outsb
out
aas
mov
ret
mov
std
dec
mov
test
mov
fldt
lods
shll
lock
pushf
scas
andl
cmpsl
jb
mov
lods
mov
std
sbb
mov
inc
xchg
xchg
mov
push
xor
mov
enter
daa
push
xchg
mov
mov
outsb
push
adc
ret
jnp
push
inc
cltd
dec
sub
cmp
push
sbb
mov
lea
add
mov
aam
bnd
mov
xchg
cmp
xchg
xchg
sbb
mulb
mov
sub
mov
sbb
xor
mov
inc
mov
rcrb
push
mov
push
repnz
lods
rorl
stos
mov
cmp
jmp
xchg
cmp
mov
jmp
gs
ret
sub
xor
inc
rep
jb
ljmp
mov
pop
imul
mov
je
cltd
jecxz
pop
out
sbbb
inc
in
jbe
mov
call
sub
jnp
mov
stc
mov
mov
sub
xchg
mov
loop
fwait
aas
mov
mov
mov
xchg
inc
jno
std
mov
sbb
insb
int3
mov
and
lds
mov
movsb
ret
xor
push
mov
xchg
lea
mov
test
lcall
popf
lret
xor
push
and
imul
mov
dec
ret
sti
js
xchg
or
mov
lret
mov
inc
popf
mov
inc
mov
cmp
adc
out
sbb
mov
sub
jecxz
stc
and
cwtl
mov
sub
xchg
lock
add
mov
scas
mov
xor
mov
enter
ret
mov
dec
or
imul
daa
cli
popf
shlb
mov
imul
movsb
sub
lods
nop
loope
lods
les
mov
xchg
mov
ret
mov
xchg
xor
push
inc
and
pushf
xchg
xchg
ljmp
lods
rcl
mov
adc
scas
pop
outsb
fidivl
in
mov
mov
lret
mov
jle
cmpsl
mov
fistps
push
xchg
rol
sbb
xchg
mov
stos
inc
dec
mov
xchg
stc
sbb
jmp
out
ret
imulb
mov
mov
sbb
stos
mov
pop
into
mov
mov
sar
stos
addb
xchg
mov
fwait
ret
jno
popf
lahf
mov
inc
and
shr
and
xor
add
lret
out
ret
in
int
xchg
mov
dec
jmp
push
lcall
mov
sahf
cmpsl
fildll
outsb
enter
inc
cmp
cltd
push
cmp
inc
pop
add
shll
ret
daa
jno
adc
subl
scas
mov
lods
icebp
dec
ffree
mov
jmp
sub
xchg
push
ret
das
mov
cmpsl
nop
pop
mov
hlt
adc
lea
push
lcall
sti
scas
daa
sub
jb
mov
lods
das
fidivrl
mov
dec
ret
repz
xor
test
and
cmpsb
outsb
movsl
push
stc
sub
adc
stos
jb
scas
hlt
ret
sub
push
jae
mov
enter
cmp
ss
mov
test
xchg
mov
fwait
and
lods
push
std
mov
in
pop
icebp
sti
test
lgs
push
outsb
fistl
jecxz
mov
mov
in
lods
pop
fstl
jno
mov
xchg
xor
xor
scas
jmp
xchg
jo
mov
in
adc
adc
ret
lea
loopne
mov
fldenv
aad
fwait
int
fldenv
aam
lahf
and
ret
adc
xchg
lods
add
mov
jle
call
clc
dec
shrb
xchg
jnp
je
out
mov
mov
mov
mov
mov
scas
daa
push
shrb
movl
in
dec
out
ja
adc
mov
je
cmp
imul
dec
xchg
fnstsw
push
add
sar
and
ja
mov
ret
fadd
xor
imul
push
sbb
push
inc
lods
xchg
hlt
and
mov
pop
out
pop
imulb
xchg
mov
lods
test
leavew
mov
sbb
xchg
mov
mov
ret
lret
dec
stos
mov
mov
outsb
jmp
orb
ljmp
lcall
mov
popf
jp
jb
cmpsl
popl
mov
test
mov
cmc
mov
mov
xchg
rolb
dec
mov
jle
outsb
jecxz
stc
jnp
ret
fdivrs
leave
mov
and
mov
movsb
orl
stos
int3
ljmp
push
and
int
cmp
int3
scas
nop
les
mov
mov
sbbl
mov
inc
ljmp
sahf
mov
lea
outsb
mov
fisubrl
jg
mov
icebp
stos
push
mov
rorb
cmc
mov
jl
mov
pop
lea
dec
fwait
scas
lods
mov
in
push
push
mov
negb
inc
mov
inc
push
stc
rolb
movsb
stos
test
push
imull
cld
xchg
mov
stc
push
aam
xchg
in
out
sahf
mov
push
ret
sub
sbb
mov
lock
cltd
mov
std
test
mov
xor
stc
mov
inc
loopne
mov
xchg
insb
jb
mov
cs
loope,pn
pushf
add
enter
out
mov
bsr
mov
push
sub
xchg
jo
mov
popa
aas
shll
mov
mov
sarb
cmpb
stos
daa
mov
aaa
mov
mov
out
pop
adc
sub
orb
mov
test
mov
pop
pushf
xchg
pushf
sub
dec
mov
push
fwait
jmp
int
lods
cmpsl
and
or
into
mov
xchg
push
ret
xchg
cmp
scas
mov
in
or
cltd
ja
scas
outsb
lahf
sti
roll
shlb
push
mov
sub
mov
xor
cvtps2pi
mov
xorb
jbe
cmp
xor
cs
inc
lods
imul
jb
push
cmc
mov
sbb
xor
dec
push
scas
xor
scas
xchg
mov
xchg
jbe
sub
cmp
sarb
or
xchg
xchg
mov
call
dec
xor
int
insb
mov
pushf
cmp
mov
xchg
lea
xor
aam
popf
js
xchg
ss
pop
xchg
mov
mov
xor
pop
xchg
mov
adc
xchg
mov
mov
lcall
ret
lahf
insl
pop
cld
pushf
in
lea
movsb
sub
mov
ret
hlt
add
xchg
mov
or
add
sahf
mov
or
lods
out
incl
mov
pop
xlat
lods
fwait
mov
popf
mov
inc
mov
imulb
jecxz
out
sbb
cmpsl
repz
pop
adc
mov
cmpsb
inc
ret
xor
out
jecxz
sub
mov
pop
mov
xchg
mov
cmp
xchg
ret
xchg
mov
aad
pop
mov
rclb
mov
sub
jae
mov
test
push
cmp
icebp
fidivs
mov
xor
xchg
dec
mov
add
pop
ret
sub
scas
test
mov
or
lret
nop
insl
pop
bound
cltd
insl
cmp
int3
mov
ja
shll
mov
rolb
mov
lahf
fwait
cmp
mov
push
mov
lods
sbb
xchg
dec
inc
sub
sti
sub
cmp
lods
stc
add
xchg
jecxz
jge
push
mov
inc
test
dec
xchg
sbb
push
bound
fistpll
lea
sub
dec
fisubl
mov
mov
outsb
add
loop
mov
dec
add
popa
movsb
lcall
mov
xchg
outsb
repz
std
cld
mov
mov
stos
push
lods
sub
divb
dec
shlb
xchg
das
pop
cmpsb
test
add
adc
push
xlat
mov
add
stos
das
inc
in
pushf
mov
sub
cmpsl
sbb
push
shrb
push
mov
scas
mov
outsb
mov
fldcw
imull
mov
xor
add
add
test
cmp
out
xchg
outsl
xchg
dec
test
jae
repz
or
mov
add
cld
insb
iret
cmpb
mov
loope
loop
test
mov
jecxz
ret
ljmp
mov
jb
add
xchg
imul
mov
mov
icebp
fs
scas
jle
fwait
clc
lcall
pop
mov
loop
popf
mov
loope
mov
mov
jne
dec
movsb
scas
ljmp
dec
fwait
xor
insl
gs
out
stos
outsl
cmpsb
insl
inc
mov
jecxz
fwait
test
test
push
mov
cmp
mov
push
test
mov
mov
mov
mov
mov
mov
xchg
or
push
jl
cmp
aad
sub
fimull
outsl
ret
mov
jle
dec
stos
das
cmc
sbb
push
xchg
movsb
pmuludq
mov
fwait
dec
jns
dec
sbb
jae
lods
mov
dec
add
shll
mov
mov
lret
xchg
mov
imul
mov
push
enter
cwtl
mov
lcall
jbe
lods
xor
or
mov
shrl
cmpsb
lahf
outsb
test
pushf
stos
mov
std
mov
jb
pushf
mov
imul
adc
jmp
xchg
lods
sub
std
insb
lea
adc
sub
dec
lret
jmp
out
dec
mov
adc
mov
je
dec
or
loop
pop
mov
icebp
shrd
mov
fisttpl
pushf
sbb
fstl
xchg
in
inc
mov
or
dec
xchg
cmpsl
cmp
cli
mov
test
hlt
xor
adc
ret
repnz
mov
or
jnp
ret
mov
fstl
mov
mov
add
pop
xchg
inc
and
ret
in
mov
mov
lcall
mov
ja
rcl
mov
mov
mov
mov
mov
or
inc
jo
mov
movsl
sub
dec
jae
sub
mov
rorb
jmp
xchg
in
cmp
mov
push
je
jne
out
mov
xchg
outsb
push
mov
xor
sub
imul
notb
mov
jmp
test
bnd
icebp
ljmp
pop
xchg
imul
lahf
movsl
scas
ss
std
mov
pop
addr16
lahf
cltd
cmp
cmc
xchg
mov
in
cmp
ret
cs
mov
stos
and
test
lret
insl
imul
dec
pop
add
scas
mov
push
dec
mov
jae
inc
sahf
fwait
cld
in
vpcmpeqw
xchg
inc
fwait
rcrl
xchg
and
push
lea
sub
je
and
test
dec
mov
jl
out
mov
xor
leave
insb
mov
frstor
mov
lods
ret
xchg
movsl
or
jmp
and
fistpll
cld
mov
sub
adc
push
fwait
xchg
pop
xorl
scas
jmp
repz
gs
xlat
mov
mov
fdivr
mov
test
outsl
nop
mov
xchg
add
pop
lcall
aas
mov
aas
xchg
fwait
pop
fwait
lret
xor
jle
outsl
fnsave
aad
mov
pushf
int3
xor
stos
test
ret
outsb
sub
ficoml
cmc
sbb
test
test
sbb
in
mov
mov
mov
sub
and
dec
fstl
iret
mov
mov
popf
cltd
aam
sahf
aaa
mov
xchg
scas
and
repz
cmc
imul
jb
std
adc
outsb
inc
icebp
cmp
mov
ja
pop
cmp
jle
ljmp
enter
mov
mov
xchg
inc
pushf
jg
inc
popf
sar
sub
cs
stos
push
jp
xchg
add
cmp
loop,pn
xor
xchg
add
cmpsl
fdivs
ljmp
ret
ss
cmpsl
adc
cmp
or
cltd
enter
jae
dec
cwtl
popf
ret
hlt
dec
xchg
dec
pop
xchg
mov
rol
outsb
inc
fbstp
push
mov
in
lods
xor
or
mov
mov
data16
outsb
fwait
scas
pop
jl
jle
icebp
cli
sub
mov
stc
inc
std
jecxz
or
xchg
mov
rep
mov
adc
xchg
mov
lea
aaa
mov
cmp
in
neg
jge
mov
mov
xor
scas
mov
inc
mov
cltd
add
in
inc
push
xchg
icebp
pop
add
nop
add
ds
push
fmulp
adc
mov
mov
stos
js
mov
dec
scas
cmpsl
dec
dec
roll
xor
mov
inc
jp
outsl
shll
mov
int
enter
adc
icebp
cltd
and
mov
mov
ljmp
clc
scas
mov
shrl
sarl
xchg
jb,pn
mov
xor
xchg
in
scas
adc
in
xor
lcall
lods
aad
sti
aad
push
outsb
cmpsl
lahf
mov
aad
mov
xchg
xor
sub
mov
int
jmp
cmp
cwtl
out
adc
jmp
push
shr
inc
mov
mov
ss
in
sahf
dec
les
mov
dec
ljmp
sahf
mov
xlat
cmpsl
lcallw
les
gs
dec
mov
add
xchg
inc
mov
jne
inc
popa
adc
stos
jg
cmp
mov
pop
xor
add
ret
int
mov
ficoml
mov
fwait
jge,pn
pop
cmp
sahf
jmp
cli
lea
hlt
push
xor
lods
ror
rorl
shll
adc
jb
shrb
jp
dec
mov
cmpsl
std
dec
stos
xchg
adc
xor
adcl
xor
ljmp
push
std
ret
cmpsl
sarl
mov
fdivl
ret
cmp
mov
or
mov
xchg
scas
pop
ja
lahf
mov
jns
mov
scas
sbb
xchg
leave
scas
jnp
xchg
outsb
push
cmp
rorl
nop
mov
inc
push
mov
mov
popf
pop
sub
xor
pop
fwait
rcll
jmp
mov
xchg
ds
mov
fnsave
mov
mov
mov
lods
lds
jo
mov
xchg
mov
adc
hlt
outsb
mov
jmp
jecxz
stos
mov
ja
cld
stos
mov
ret
lea
jmp
lahf
mov
xchg
mov
mov
scas
pop
insb
add
jl
adc
cwtl
push
aam
inc
lods
test
in
test
or
cmc
pop
dec
mov
pop
ret
cmc
imul
fs
mov
loopne
lea
clc
mov
test
nop
lahf
add
pop
xor
adc
or
scas
xchg
insb
inc
in
xchg
scas
divb
out
mov
jns
idivb
insb
mov
fwait
orl
mov
stos
cltd
lods
mov
dec
int3
push
mov
or
fwait
lcall
jl
mov
mov
cmp
pop
push
insl
lahf
popf
mov
add
fwait
add
movsl
xchg
mov
ja
std
mov
test
jbe
xchg
mov
int3
call
lods
rcr
pop
adcl
lea
xchg
insl
push
sahf
cwtl
sarl
ret
xor
loope
es
inc
loope
stos
lcall
xor
lods
jne
outsb
test
leave
test
stos
daa
das
rorb
inc
mov
ja
inc
mov
dec
add
rcrl
adc
and
xchg
imul
shrl
andb
insl
test
in
shrb
xchg
cltd
dec
fs
dec
fbld
mov
xchg
insl
and
ret
jbe
jp
int
insb
pusha
mov
add
dec
les
mov
mov
jp
test
xor
mov
call
pop
xchg
daa
scas
idivb
nop
mov
xor
imul
xchg
outsb
out
cmpsl
loope
sub
or
ret
sbb
mov
xchg
sub
call
test
jne
std
idivl
iret
push
lea
lcall
xor
xor
jg
outsb
cs
mov
cltd
test
sbb
jecxz
xor
pop
setae
sbb
bound
push
mov
jmp
shll
mov
pop
xchg
adc
fisubs
ror
mov
rcrb
mov
push
ja
sub
sbbl
mov
mov
push
sahf
hlt
mov
test
mov
push
movsl
jmp
xor
scas
daa
lea
fwait
mov
psraw
fwait
and
testl
les
cltd
test
inc
scas
add
xchg
jne
insl
mov
inc
hlt
mov
in
vphaddbd
in
mov
mov
shrl
mov
mov
fildll
shrb
insb
jl
scas
mov
repnz
add
rcll
mov
and
mov
outsb
fadd
daa
xor
cmpsl
popf
jge
mov
jle
cltd
xchg
mov
inc
and
sub
gs
movsl
sub
ficomps
jmp
mov
insl
xchg
jmp
fcomp
cmpxchg
and
mov
inc
xchg
hlt
repnz
movsb
xchg
out
dec
add
xchg
fwait
mov
sbb
push
mov
and
jl
sub
add
loope
and
inc
add
sub
mov
push
ret
mov
je
cltd
loopne
mov
insl
cld
or
mov
add
cmp
nop
or
mov
mov
mov
lods
mov
inc
shlb
enter
fisttps
dec
mov
stos
pop
pusha
call
xchg
lea
lahf
outsb
mov
mov
mov
fistpl
cmpl
xlat
outsl
xchg
xor
mov
xor
dec
outsl
add
xor
in
mov
and
ffree
ret
mov
jne
lods
enter
dec
lea
sbb
xchg
fldt
pop
icebp
xchg
insl
xor
push
ljmp
jg
and
daa
mov
out
decl
mov
pushf
jge
jno
mov
int
xlat
push
ret
push
lea
ss
mov
cld
rcrl
lcall
outsb
imul
sub
adc
adc
rcrb
mov
pop
inc
dec
lods
imull
push
or
test
xchg
loopne
ret
mov
sahf
xchg
les
xchg
push
mov
mov
ret
xor
dec
xchg
lods
push
xchg
sti
stos
jmp
ja
pushf
out
inc
sub
ret
scas
cmc
std
in
popf
aad
sub
das
push
sub
notb
repz
xor
ja
popf
movsl
xchg
inc
jo
cmp
mov
js
adc
mov
outsl
pop
mov
mov
mov
pop
lds
lret
adc
ret
imul
jge
repnz
push
sahf
mov
sub
popf
orl
loope
jecxz
pop
scas
jl
aad
sarl
repz
rcl
test
ret
jo
ret
xchg
movsb
ret
repnz
mov
mov
movsl
cmpl
orb
mov
ficompl
int3
mov
scas
nop
iret
mov
jbe
lea
xlat
add
and
xchg
insl
movsb
push
stc
adc
jno
cmp
stos
je
movsl
push
mov
rorl
mov
mov
inc
lods
lret
lret
ret
insl
popf
mov
imul
or
sbb
mov
mov
in
xchg
pop
mov
sbb
mov
mov
pop
xchg
scas
daa
sahf
test
in
mov
add
jno
fcoms
push
cmp
mov
mov
xchg
mov
lcall
cmpsl
mov
popa
dec
and
mov
lds
jno
lahf
mov
xchg
xchg
hlt
lock
jns
xchg
xor
fbstp
rolb
sti
sub
cmp
inc
mov
lods
fwait
xchg
test
dec
sub
xor
mov
and
lcall
nop
daa
scas
leave
xchg
mov
leave
mov
call
mov
add
mov
clc
pop
sub
mov
dec
mov
enter
aas
les
repnz
pop
or
outsb
pop
add
and
mov
mov
nop
cmp
pop
dec
mov
pop
ja
aaa
dec
ret
or
repz
push
sbbl
test
and
sbb
in
cltd
adc
mov
jmp
dec
ja
lods
andl
pop
pop
aas
mov
fcoms
cmp
mov
lcall
mov
les
xor
jge
aas
in
mov
adc
mov
leave
lret
xchg
cmp
movsb
mov
aam
cmpsl
mov
push
leave
push
xor
xchg
iret
scas
or
jecxz
mov
mov
pop
cmpsl
mov
add
mov
ret
daa
ret
outsb
lea
mov
sbb
dec
mov
mov
mov
lods
xchg
or
lcall
fidivrl
and
sahf
jae
cmp
fidivs
lods
outsb
ret
push
test
loop
mov
scas
push
cld
cs
lods
ss
movsb
mov
inc
push
or
rorl
mov
jno
mov
adc
mov
adc
stos
test
popf
mov
outsl
push
add
fcmovb
xor
fcoms
xchg
xor
imul
insb
mov
mov
xchg
xchg
std
mov
daa
xchg
test
lret
sub
lcall
inc
adc
mov
sub
mov
in
loope
mov
sub
enter
xor
ja
jnp
mov
mov
sbb
sub
sbb
xchg
mov
cld
lods
push
mov
shrb
add
test
icebp
stos
cli
pop
cs
xor
xchg
int
inc
loop
jae
inc
adc
and
mov
mov
mov
xchg
sahf
sbb
mov
push
mov
scas
adc
pop
aaa
nop
int3
sub
lcall
jne
xchg
push
jp
cmpsb
mov
jle
sub
lea
sti
lods
and
lret
mov
scas
or
nop
cmpb
xchg
sbb
lret
loope
xor
xchg
hlt
mov
mul
or
mov
inc
xlat
arpl
lods
scas
fdivrp
mov
inc
cmp
mov
sub
stc
movsb
lea
mov
or
adcb
mov
or
das
sbbl
mov
cmc
ja
fwait
scas
jg
or
popf
mov
cwtl
outsb
outsb
push
sub
pop
xlat
jg
xchg
mov
jne
mov
fbstp
pop
inc
in
fcmovu
scas
xchg
lcall
cltd
mov
enter
test
cmp
pop
inc
pop
mov
xchg
push
mov
dec
push
mov
inc
idivb
ret
insl
push
mov
pop
mov
mov
lods
push
in
mov
mov
mov
inc
daa
ret
outsb
mov
mov
mov
mov
and
add
cmpsb
sti
mov
js
pop
aam
xchg
stc
scas
das
mov
cli
xchg
sbb
jno
outsl
sbb
xchg
sti
scas
lcall
enter
je
in
scas
lret
and
rol
pusha
jb
roll
mov
inc
ret
jecxz
cld
sub
popf
cmpsl
push
or
xor
xchg
insb
dec
sub
mov
popf
or
aad
movsb
and
jle
out
fwait
add
lahf
mov
outsb
mov
xchg
jp
sub
xchg
mov
pushf
mov
add
mov
mov
jle
ret
xor
pop
leave
fisttpll
mov
xchg
popf
mov
outsb
fs
adc
lods
mov
adc
mov
jbe
imul
outsb
sbb
push
pop
inc
ret
inc
ret
outsl
jl
nop
scas
cwtl
imul
rol
daa
std
xchg
lea
loope
cltd
dec
lret
or
jge
fwait
ret
outsl
sahf
mov
lret
push
sbb
xchg
push
popf
sahf
aam
sub
movsb
cmc
pushf
into
mov
stos
test
lret
mov
jecxz
out
sub
nop
sbb
imul
call
lret
cli
xchg
adc
mov
sub
out
out
popf
lea
adc
sub
push
stos
jp
and
movsb
mov
je
or
in
mov
mov
out
mov
shr
mov
xchg
rorl
xchg
hlt
imul
mov
mov
shll
cmp
sub
mov
push
inc
xor
xor
mov
clc
fstpl
adc
ret
out
pop
mov
cltd
jp
hlt
adc
mov
pop
mov
in
mov
dec
outsb
daa
rorb
lods
ret
fxch
mov
ja
les
xlat
ret
mov
fists
dec
mov
push
xchg
lcall
lea
jmp
roll
lret
out
clc
dec
enter
pop
dec
shlb
cld
sahf
xchg
stc
dec
or
jl
imul
mov
mov
push
sub
repnz
xchg
sarl
call
insb
pop
js
aad
call
jae
enter
dec
int
pop
mov
mov
scas
pop
add
jne
enter
shlb
jno
scas
stc
push
cltd
mov
inc
loopne
mov
and
xchg
mov
mov
scas
push
lods
mov
push
aam
mov
scas
mov
shll
xchg
popf
stos
movsl
jl
stos
fbstp
stos
mov
and
dec
fnstcw
data16
rcrb
xor
shlb
cwtl
and
lcall
sub
pop
shll
or
orl
outsb
push
mov
scas
lock
scas
sarb
mov
dec
into
mov
scas
and
test
xchg
xchg
inc
mov
cmp
mov
sub
xchg
mov
sub
add
in
cltd
xchg
outsl
fsubs
or
xchg
fs
stos
mull
pop
pop
xchg
mov
dec
pop
mov
or
lret
daa
sti
mov
and
out
fwait
jecxz
pop
lds
shrl
adc
mov
repz
or
mov
mov
sbb
lea
mov
push
fstps
scas
mov
adc
popf
xchg
leave
in
ja
int
pushf
pop
cltd
xor
inc
ret
mov
mov
mov
inc
push
mov
push
or
cmpsl
push
cmp
lds
lea
das
enter
repz
fwait
jb
popa
push
jmp
pop
lods
mov
ljmp
jo
add
mov
std
xchg
dec
xchg
sub
push
adc
and
sub
int
ret
mov
sub
enter
mov
pop
pop
int3
ret
xchg
mov
enter
add
aas
mov
leave
mov
sahf
mov
or
imul
sub
int
mov
movsl
sbb
movsl
lahf
sbb
addr16
mov
cmpsl
movsl
fimull
xor
push
xchg
in
pop
in
mov
test
sub
mov
mov
add
push
mov
test
inc
mov
mov
jne
jno
popa
mov
rorb
pop
out
ja
push
sbb
stos
rcrl
lahf
or
jecxz
stos
jle
movsl
sahf
xor
xchg
bnd
std
mov
and
jbe
stos
cmp
test
imul
xchg
mov
or
mov
test
test
push
ret
jo
popf
mov
sub
ret
push
xchg
xchg
lock
mov
cld
shll
ret
xor
fidivrs
int3
mov
out
or
scas
xorl
fildll
scas
lods
xchg
bound
test
xchg
mov
loopne
jle
xchg
sub
sub
dec
pop
adc
push
jne
aaa
dec
sub
icebp
push
push
mov
mov
daa
mov
lods
nop
sahf
jno
pop
cli
ret
cmp
scas
fcmove
stos
pop
insb
adc
mov
lea
cmpsb
lods
sub
test
sahf
xchg
mov
das
mov
xor
sub
leave
dec
test
xor
stos
in
inc
shll
inc
mov
repnz
mov
xchg
btr
repnz
stos
mov
jb
cmp
dec
pusha
mov
adc
mov
scas
mov
or
sub
pushf
lds
inc
clc
pop
sub
mov
out
jecxz
mov
scas
lock
movsl
loope
jmp
and
mov
pop
mov
push
cmp
ja
mov
cmpsb
push
ret
hlt
icebp
addr16
xchg
mov
dec
adc
cltd
call
or
loope
cli
stos
lods
push
ffree
dec
mov
add
mov
xchg
mov
and
lods
cmp
mov
sub
je
stos
movsb
mulb
mov
mov
mov
push
cltd
outsl
stos
dec
mov
and
xchg
imul
outsb
jns
shrb
jne
mov
lods
lock
fnsave
scas
cltd
push
push
mov
lods
ret
xor
push
test
xchg
mov
mov
add
shrl
ret
sub
es
mov
arpl
mov
mov
cmp
adc
adc
arpl
rclb
in
xchg
andb
enter
lcall
out
lea
test
imul
xor
jb
push
mov
mov
push
sarl
dec
mov
popa
mov
das
inc
push
xchg
xor
int
ret
mov
mov
xchg
jl
jno
inc
dec
stos
cli
cmp
mov
push
mov
sbb
stos
icebp
pop
xchg
xchg
mov
imul
lock
push
pop
jle
stos
sbb
jmp
mov
pop
push
xchg
cld
scas
aad
mov
jns
inc
mov
jp
push
sahf
out
ja
pusha
rorl
ss
mov
je
int3
xor
aad
stos
cs
push
mov
leave
nop
outsb
inc
or
dec
xchg
inc
mov
jne
push
mov
mov
lret
mov
mov
jae
lods
mov
insl
ficomps
mov
out
push
aas
mov
clc
push
ret
fwait
mov
popf
es
std
scas
fdivr
hlt
mov
mov
lahf
mov
pusha
mov
xchg
imul
in
lcall
fwait
jp
or
sahf
mov
cmp
or
xchg
mov
xchg
out
lea
and
leave
sbbb
cltd
repz
or
and
mov
mov
add
stos
mov
cmpsb
push
xchg
test
inc
lods
popf
lods
test
pop
test
enter
mov
ds
int3
outsb
adc
mov
mov
shll
mov
cmp
fwait
stos
call
xchg
xlat
lret
cs
inc
outsl
lahf
int
outsb
lcall
sub
iret
hlt
adc
dec
scas
ret
out
add
adc
sub
push
in
mov
in
mov
dec
fdiv
cmpsb
sbb
lea
lcall
fdivr
data16
inc
lods
lods
push
in
sti
xlat
cmp
jle
jnp
in
mov
cmpsb
xchg
mov
mov
cltd
fwait
in
push
cmp
pop
jmp
ret
mov
scas
sub
lahf
frstor
mov
xchg
lock
adc
ljmp
mov
outsb
xor
dec
pushf
xchg
dec
or
rcl
mov
ret
push
test
mov
jo
shll
rol
push
adc
ret
mov
sub
jnp
pop
in
ret
in
adc
xchg
sti
inc
jecxz
inc
mov
movsb
mov
jne
xlat
mov
jae
imulb
nop
int
sbb
fwait
dec
push
rcll
fsubrs
cmp
mov
out
mov
add
inc
xor
bound
in
cltd
lea
in
movsb
mov
push
scas
inc
sbb
outsb
cld
stc
stos
insl
dec
push
xchg
pop
in
nop
cmp
cwtl
lret
sub
les
and
sbb
jge
ret
sub
mov
stos
lret
mov
outsl
es
or
repnz
les
imul
mov
ret
sub
arpl
int3
fwait
mov
mov
movnti
subb
mov
and
mov
stos
pop
adc
sub
mov
lods
mov
cmp
fsubrp
mov
mov
jle
imul
mov
xor
mov
xchg
rorl
mov
sub
lods
pop
dec
jle
in
in
mov
movsl
or
xchg
nop
std
movsl
xchg
mov
lcall
mov
jmp
push
leave
xor
outsb
mov
mov
in
fwait
dec
push
cltd
nop
stc
cltd
leave
mov
mov
lret
ret
sub
pop
in
mov
je
xchg
ja
jae
mov
mov
popa
lds
mov
and
push
popl
fimull
std
jl
xchg
xchg
xchg
imul
clc
mov
and
popl
fwait
mov
push
mov
dec
mov
pop
loopne
xor
int
mov
adc
xor
lods
repnz
cmp
lods
inc
mov
jle
xchg
add
int3
test
mov
ror
mov
fwait
push
mov
inc
lods
pushf
sub
xor
jne
mov
ret
insl
cmc
lds
push
or
repnz
mov
scas
add
cmp
mov
in
add
cltd
pop
scas
scas
cwtl
add
add
xor
fcmovb
mov
fbstp
roll
out
mov
loop
and
movsbl
xchg
test
jle
sub
daa
fucomi
leave
mov
or
xchg
loope
jb
cwtl
in
xor
xchg
ret
adc
cmpsb
shl
dec
mov
test
and
mov
test
aad
xchg
sbb
sbb
scas
pop
jno
jle
stos
inc
in
sub
imul
sbb
xor
lret
aad
jge
in
sahf
lds
or
lods
pop
mov
mov
and
push
xor
fstl
mov
fimull
scas
mov
dec
fdivs
call
mov
bound
nop
push
mov
shr
popf
pop
mov
pop
jae
or
xchg
icebp
jne
dec
scas
jmp
xchg
imul
stos
mov
mov
fs
daa
xchg
ret
lods
jno
mov
fs
sub
lret
stos
cwtl
js
cmp
push
sub
pop
repz
mov
outsl
sbb
sahf
jae
lods
out
mov
pop
ret
cs
bound
pushf
or
mov
add
xchg
mov
lods
jb
leave
cwtl
jecxz
jmp
les
in
sub
mov
xor
mov
iret
lcall
rorl
cwtl
cmp
rcrl
sbb
jg
lods
jbe
or
push
sti
mov
or
movsb
stos
push
mov
xchg
iret
cld
lock
adc
xchg
mov
hlt
mov
and
fcompl
mov
mov
mov
fwait
xchg
outsb
dec
or
in
or
inc
mov
cmp
ret
test
enter
sti
movsl
dec
test
lock
les
cmc
pushf
ret
xor
pop
mov
loope
xor
daa
cmp
loop
stc
xor
insb
or
data16
cld
shrl
imul
cmp
fwait
add
testb
test
imulb
add
mov
jmp
dec
or
xchg
shl
mov
stos
ror
insl
pop
cmc
into
ljmp
mov
sub
mov
scas
mov
add
xchg
jnp
daa
sbb
push
dec
in
out
sarl
jbe
leave
stos
dec
push
lret
push
dec
int3
push
jle
cltd
mov
sub
test
mov
stos
mov
mov
dec
test
iret
stos
insb
pop
insl
push
adc
cmpsl
test
cmp
ret
lods
fdivrs
lods
pop
mov
popa
jg
adc
pushl
mov
cmc
sbb
adc
jb
ja
xor
leave
xchg
fstsw
mov
pop
xchg
xchg
movsb
xchg
mov
test
leave
stos
test
mov
in
stc
xchg
daa
jbe
mov
arpl
insl
out
push
cld
pop
into
dec
xor
sahf
cltd
mov
jg
mov
outsb
xchg
stc
sahf
je
les
das
stc
push
lret
mov
add
cmpsb
sbb
imul
in
push
loop
xor
mov
push
nop
mov
sarb
inc
add
insb
aam
repnz
insb
into
lcall
or
loope
test
fwait
sub
mov
aas
lret
mov
mov
mov
cltd
mov
mov
xchg
leave
sahf
out
pop
mov
jl
leave
xchg
dec
mov
jle
xchg
outsl
or
jb
adc
mov
call
sub
mov
outsl
mov
dec
mov
movsb
lcall
nop
dec
into
scas
xchg
xchg
xchg
push
scas
popf
sub
cmpsb
sub
xchg
out
lret
and
loop
mov
jge
inc
data16
mov
xchg
xor
scas
xchg
mov
pop
xchg
fnstcw
lods
scas
mov
sahf
cmpsb
inc
xchg
mov
mov
xlat
or
mov
aas
in
adc
xchg
mov
clc
add
scas
add
fld
stos
xchg
pop
mov
xchg
stos
test
or
cmp
mov
xlat
fadd
or
pusha
adc
sbb
lods
add
mov
mov
jl
xchg
jne
cmp
ret
ljmp
pushf
jae
fs
inc
xchg
cmpsl
inc
push
pushf
sub
pop
outsb
loope
mov
aaa
push
xchg
xor
fs
push
ret
mov
lea
aam
mov
mov
mov
int3
mov
outsl
sahf
mov
jmp
push
ds
dec
xchg
fldl
jnp
inc
mov
xchg
stos
jmp
mov
or
xchg
dec
ror
aam
std
fbld
mov
xchg
cmc
push
arpl
mov
in
dec
mov
loop
mov
leave
xor
orb
test
pop
sub
mov
ret
outsb
mov
adc
stos
jne
and
lahf
pop
mov
scas
notl
hlt
sahf
je
jns
arpl
xor
xor
sub
movsl
ds
mov
xor
cmpb
mov
ret
stos
negl
movsb
push
add
mov
leave
lods
inc
sbb
mov
or
xchg
xlat
lds
addb
mov
mov
mov
aam
mov
push
dec
test
mov
les
sub
out
stos
popf
lcall
ret
fnstcw
lret
ss
mov
rorl
jbe
cwtl
and
cwtl
popl
into
insl
mov
ds
jmp
pop
xchg
test
outsl
icebp
mov
mov
popf
jo
sub
out
clc
jmp
imul
xor
mov
and
fwait
stos
jmp
ret
push
outsl
insl
adc
int3
jb
cmp
test
test
mov
mov
sub
mov
lods
mov
mov
inc
loop
jne
mov
lods
pop
push
sbb
and
mov
scas
ret
push
mov
sub
mov
pop
lods
mov
imul
pop
push
int
cmpsb
mov
dec
xchg
jmp
out
test
mov
adc
add
in
mov
leave
stos
sbb
jns
sahf
xor
pop
adc
arpl
lcall
outsl
mov
cmc
xchg
fcmovnb
mov
and
outsb
lea
adc
lahf
push
test
mov
jmp
and
mov
lods
jae
lahf
sub
test
mov
cmc
cmp
xchg
nop
mov
and
ret
mov
mov
pushf
mov
mov
push
or
xchg
das
jnp
nop
jp
mov
or
repz
lods
fwait
mov
mov
test
fsubrl
mov
pop
mov
mov
xchg
dec
imul
inc
sub
int
mov
fs
sub
mov
pop
xchg
scas
pop
lea
leave
in
xchg
xchg
cli
sub
ja
rcr
movsl
jecxz
pusha
popf
loop
lods
dec
mov
pop
mov
xchg
mov
cmp
inc
mov
loope
lods
xchg
notb
mov
lods
mov
in
ret
xor
mov
xlat
jno
pop
repz
bound
mov
cmpsl
in
vmovdqu
jle
push
in
and
mov
sbb
in
popf
mov
out
std
cltd
stos
sbbb
stos
sti
cmc
sarb
jbe
ret
mov
mov
xchg
xchg
inc
dec
add
mov
xlat
mov
xchg
jb
xor
adc
jmp
sub
cmpsl
ljmp
xchg
fwait
pushf
mov
or
mov
out
mov
pop
dec
mov
sbb
jo
out
mov
xchg
jmp
gs
hlt
mov
sti
ret
xor
jle
scas
outsb
and
jnp
mov
sub
test
pop
pushl
cli
sub
xchg
out
sub
cmp
nop
nop
jmp
sub
adc
pop
push
xchg
daa
shll
push
andl
xchg
mov
or
xor
cmp
int3
cltd
adc
scas
in
gs
pop
sub
mov
repnz
cmp
xchg
stos
inc
fcmovb
mov
pop
jno
pop
mov
in
imul
sbb
sub
fldl
sub
inc
add
xchg
or
mov
cmpsl
jne
stos
lods
dec
xchg
mov
insl
fldl
jle
mov
out
mov
xchg
xor
mov
jecxz
mov
xor
movsb
dec
lods
or
mov
inc
pop
pop
dec
pop
mov
in
and
test
mov
ss
mulb
mov
lods
mov
popa
xchg
hlt
jbe
loope
sub
lahf
sub
pushf
mov
sub
ficoms
mov
xchg
daa
test
jmp
dec
and
test
in
ja
mov
xor
daa
mov
sbb
mov
cld
imul
mov
repz
xchg
mov
pop
or
fstpt
mov
push
std
cmp
mov
dec
stos
dec
enter
imul
je
dec
add
inc
mov
mov
mov
ljmp
je
and
jo
in
xchg
test
lock
xchg
ja
les
push
stos
sub
xchg
xchg
pop
sub
mov
cmp
pusha
test
and
sub
lods
mov
ret
xor
adc
mov
dec
leave
jne
repnz
mov
cmp
xchg
adc
stos
outsl
push
lcall
dec
lods
sub
sahf
aaa
pushf
hlt
xor
hlt
fldt
mov
fdivs
cmpsl
outsb
jbe
fdivrs
adc
shl
mov
mov
mov
cmpsb
xchg
in
mov
mov
dec
mov
mov
and
mov
movsb
or
loopne
mov
mov
mov
inc
les
mov
xor
mov
mov
in
xor
imul
ret
sti
mov
stos
xor
ret
hlt
enter
mov
jns
mov
inc
mov
ret
ljmp
and
or
je
add
jnp
and
lods
rclw
lret
pushf
fs
popf
xchg
adc
mov
sbb
fistpl
lahf
mov
xor
jmp
inc
lock
adc
stos
divb
je
cli
xchg
sub
int
or
test
mov
daa
lea
inc
inc
mov
sbb
out
in
inc
imul
test
mov
dec
popa
shll
xor
dec
mov
fnsave
mov
rcrl
ja
add
imul
imul
mov
pop
js
fsts
scas
mov
in
fwait
mov
xchg
inc
xchg
fwait
mov
imul
mov
ffreep
jno
cmp
and
lcall
popf
sti
push
sub
negb
xlat
fwait
or
mov
inc
ja
mov
lods
xchg
loope
mov
fwait
inc
outsb
push
mov
mov
lret
mov
dec
iret
stos
sbb
or
mov
insb
test
xchg
xchg
outsl
mov
push
loopne
dec
mov
cwtl
insb
loopne
mov
fwait
dec
or
push
lds
out
sub
mov
mov
xor
add
and
mov
jnp
mov
loop
popa
ds
sub
push
fsubr
cwtl
sub
mov
les
xchg
lret
mov
outsb
shll
imulb
xor
fisubs
iret
popf
and
scas
mov
rol
jecxz,pn
xor
test
ja
negl
clc
xchg
out
loop
lea
repz
mov
pop
mov
int
loopne
movsb
jmp
daa
or
mov
jmp
outsb
fdivs
xchg
insl
push
or
xchg
sbb
xchg
imul
adc
pop
test
mov
ret
sub
popf
repnz
int3
lret
pop
mov
xchg
test
lds
sub
xor
pop
and
xchg
sti
das
out
pop
mov
mov
mov
daa
rorl
xchg
mov
clc
mov
sub
inc
mov
xor
mov
shrl
loope
or
dec
adc
add
pusha
andl
lret
cs
mov
das
cmpsb
outsb
push
mov
popa
jns
shll
and
mov
mov
or
fistps
ficoml
pushf
dec
cltd
mov
pop
mov
arpl
mov
or
rcrb
push
jmp
xlat
jg
mov
add
outsb
testb
xor
or
jmp
xor
ret
pop
push
fnstcw
jno
and
scas
cltd
dec
ret
pause
out
mov
lods
fstp
ud1
and
stos
call
rorb
mov
cmpsl
fcoml
lods
in
sbbb
test
inc
cmp
jl
inc
push
sub
mov
push
push
or
out
mov
repz
mov
inc
mov
shll
mov
jle
fwait
jp
icebp
cltd
clc
popf
pop
jle
cltd
hlt
push
fnstcw
push
lea
fstpt
dec
xchg
mov
sbb
sbbb
shrb
mov
mov
mov
inc
sbbl
cmp
mov
nop
jne
add
fidivs
lea
push
mov
cmp
lods
stos
push
xchg
inc
jb
icebp
int
add
jae
decb
add
imul
enter
jg
loope
stos
inc
sbb
enter
lods
or
mov
das
pop
mov
mov
test
jnp
push
stos
ja
adc
rolb
lea
outsb
mov
ja
cmp
in
dec
int
mov
mov
jmp
adcl
test
icebp
or
ss
mov
add
mov
and
lret
scas
cmp
mov
xchg
mov
add
mov
mov
mov
inc
fistl
mov
ja
mov
into
jb
rcrb
mov
movsl
ret
mov
lea
in
mov
cmp
loopne
mov
mov
inc
addr16
mov
lea
js
outsb
xor
sbb
add
je
dec
imulb
pop
fistpl
mov
mov
aad
xchg
scas
adc
xor
sub
fsubrs
aad
jns
in
dec
enter
fwait
scas
mov
gs
mov
jmp
clc
sub
fwait
dec
in
outsb
imull
aad
jp
lock
cmpsl
test
movsl
insb
mov
in
aas
fwait
insl
pop
test
cld
xor
adc
test
xchg
leave
out
or
insb
xchg
and
cli
sbb
test
jp
mov
jmp
or
mov
mov
adc
sub
daa
mov
mov
leave
in
push
mov
inc
int3
sahf
ja
nop
stos
out
inc
inc
xchg
out
rcrb
mov
inc
mov
add
fidivrl
mov
mov
lret
inc
mov
mov
outsb
mov
ljmp
dec
mov
insl
sbb
ljmp
sarl
and
xchg
and
dec
adc
mov
cli
mov
lea
mov
add
dec
mov
pop
ret
inc
xor
push
mov
subl
shlb
mov
ljmp
nop
xor
pop
xchg
outsl
pop
adc
lret
jbe
or
xchg
pop
aam
nop
or
or
xchg
je
cmpsl
mov
and
inc
mov
cmpsl
lods
ret
xor
xchg
pop
ret
dec
scas
lods
mov
std
mov
jo
jbe
add
aad
sti
jge
sub
mov
or
hlt
jmp
add
mov
ljmp
sub
mov
jle
lock
mov
test
jno
push
stos
imul
inc
scas
push
iret
cmp
dec
mov
lahf
cmc
pop
clc
int3
rclb
fldcw
bound
loop
or
sub
insb
mov
lcall
ret
cmpsl
in
xor
repz
and
push
mov
cli
dec
xor
lea
inc
ret
divb
mov
mov
aas
mov
leave
xchg
sbb
and
leave
sub
mov
cwtl
lret
mov
add
xchg
ss
mov
scas
mov
mov
shrl
mov
test
add
adc
in
imul
push
nop
adc
and
and
mov
sub
mov
xchg
lods
rcl
ret
mov
lea
in
cmp
mov
scas
stos
enter
push
shrb
in
lods
mulb
add
pop
call
mov
push
mov
lcall
xor
jns
mov
mov
pop
dec
mov
push
mov
adc
add
in
fistps
xchg
xchg
out
and
xchg
out
call
mov
cmp
or
sahf
sahf
mov
mov
nop
rorl
mov
hlt
jne
fwait
or
jecxz
scas
and
sahf
adc
jne
pop
mov
mov
and
sahf
jb
lahf
shll
cli
sahf
dec
stos
arpl
inc
mov
mov
ja
test
in
xor
sbb
sub
mov
icebp
filds
mov
jp
cmp
add
push
movsl
nop
fisubrl
jae
mov
xor
insl
or
cmc
and
sbb
mov
mov
mov
dec
cmpsb
shll
mov
pop
dec
xchg
insb
adc
std
scas
stos
xchg
popf
repnz
ret
mov
in
aam
sub
mov
dec
sbb
hlt
xchg
xor
mov
jecxz
shll
testb
lods
xor
mov
add
ret
sub
inc
push
mov
or
out
sbb
fs
sbb
pop
nop
mov
scas
lea
stc
mov
fwait
mov
iret
out
xchg
mov
add
imul
arpl
pop
movsl
mov
inc
and
lods
lods
ja
xchg
mov
sti
cwtl
sbb
in
xor
fildll
loopne
sahf
xor
ds
push
mov
lock
fiadds
lahf
adc
sbb
lods
and
std
push
mov
jb
xor
nop
int
int
pop
mov
lret
arpl
loop
sbb
fwait
dec
cmpsl
cmpsl
jae
inc
push
std
dec
and
pop
inc
insl
lods
sbb
lea
std
pop
jno
ret
mov
mov
mov
xchg
push
in
out
scas
movsl
mov
push
xchg
in
dec
lea
mov
mov
enter
mov
mov
cmp
test
mov
mov
out
push
sub
iret
mov
sbb
cwtl
pop
sarl
loop
sti
mov
imul
mov
mov
test
lret
dec
or
dec
mov
pushf
xchg
hlt
or
lds
inc
lahf
ss
cmp
daa
sub
and
jmp
cmp
sbb
scas
dec
adc
mov
jbe
dec
lock
jmp
xchg
icebp
add
lea
pushf
mov
pop
in
mov
add
mov
enter
mov
mov
ret
mov
mov
daa
ret
mov
inc
add
lds
xchg
int
sbbl
cltd
or
clc
mov
outsb
mov
mov
xor
mov
aas
mov
jb
xchg
push
dec
xor
stos
btr
add
xchg
jmp
adc
xchg
sub
mov
add
mov
stc
mov
lret
pushl
mov
dec
mov
mov
das
jno
jmp
mov
enter
jl
sub
xor
cwtl
mov
rorl
mov
mov
cmp
fistpll
sti
sbb
and
mov
push
xchg
mov
dec
mov
mov
or
mov
cmp
xchg
mov
jecxz
jge
ja
aad
mov
jbe
popf
mov
iret
lock
push
mov
mov
mov
add
xchg
lods
mov
ret
sub
xchg
mov
xchg
sbb
andl
sub
mov
nop
jb
ret
pushl
pop
je
xchg
pop
rolb
std
jbe
mov
in
jecxz
jmp
ret
insb
push
adc
mov
andl
outsb
mov
test
lods
and
fninit
sahf
adc
jle
daa
xor
test
xchg
mov
add
or
std
jno
push
cmp
repnz
loopne
inc
dec
mov
mov
push
jno
mov
scas
sub
sub
mov
test
sbb
mov
xchg
mov
cwtl
rol
mov
sbbb
mov
mov
stc
outsl
cmpsl
enter
adcl
sub
lods
or
pop
mov
scas
or
enter
push
popf
sbb
mov
out
lret
scas
negl
imul
arpl
std
std
sub
inc
pop
rcrl
and
les
imul
mov
mull
inc
sarl
icebp
fldt
dec
mov
cld
sbb
xor
shrl
xchg
movsb
push
xchg
xchg
sbb
fsubrs
lods
loopne
shrl
ja
enter
pop
cli
mov
outsb
mov
mov
stos
add
insb
inc
xchg
sub
outsb
mov
stos
sub
xchg
mov
fcompl
push
jle
lods
in
mov
pop
gs
ja
dec
sub
lret
mov
mov
xchg
inc
in
jo
cmp
lea
cs
imul
mov
push
dec
ss
aad
push
xor
stos
jns
std
pop
cmp
subb
mov
pop
int3
add
mov
scas
movsl
mov
mov
in
inc
mov
out
pop
ret
stos
lcall
cmpsl
lea
das
jmp
ffree
rcll
lods
xor
mov
xchg
and
pop
sub
xchg
stos
gs
push
out
mov
icebp
subl
mov
lods
mov
pop
sub
push
lds
or
ds
push
scas
pop
shr
sub
in
push
ret
icebp
out
test
add
lock
xchg
cltd
push
jns
mov
xor
aas
sub
jle
sub
xchg
mov
int
in
iret
push
mov
mov
mov
sbb
mov
sbb
shrl
insl
daa
lock
ljmp
sahf
arpl
jp
mov
mov
mov
adc
jno
rcl
gs
sbb
xchg
sub
mov
mov
push
jbe
jmp
xor
lret
test
mov
cli
out
xchg
xchg
sub
mov
sti
jecxz
xchg
xlat
mov
lahf
js
test
mov
outsl
pop
aam
enter
mov
xor
dec
jbe
xchg
rclb
lods
mov
ret
lods
jb
pop
dec
jecxz
jmp
hlt
mov
dec
xor
dec
lahf
daa
jl
xchg
dec
adc
xlat
cltd
lea
test
add
arpl
fisubrs
push
aad
lret
mov
popf
push
lret
aad
push
std
mov
mov
iret
adc
ret
lahf
out
daa
and
lret
lods
pushf
popf
in
stos
fists
sub
push
sub
dec
mov
das
lea
jl
scas
lods
out
mov
insb
dec
loope
imul
ret
cmc
in
mov
outsb
sub
lcall
adc
movsl
out
es
sbb
lea
or
movsb
pop
mov
xchg
and
push
sti
jo
sub
mov
push
push
lret
xchg
in
movsb
inc
cmp
mov
movsl
mov
lea
and
dec
pushf
sub
cld
into
mov
dec
mov
nop
dec
lods
pop
sub
cmp
fwait
xchg
jo
mov
lea
jecxz
push
in
enter
fiaddl
jl
clc
lods
lods
in
xchg
mov
lahf
dec
xor
sbb
mov
test
xchg
sub
scas
dec
clc
add
popf
cmpsb
pop
bnd
adc
stos
mov
xchg
and
sti
es
xchg
mov
mov
out
xor
aaa
mov
addr16
xchg
mov
mov
leave
dec
out
sbb
mov
jge
repz
or
icebp
stos
lods
mov
mov
das
mov
shr
daa
sub
pop
pop
aas
nop
dec
outsb
ret
dec
rorl
daa
mov
aaa
jle
cmpsl
sahf
cld
leave
mov
pushf
stos
mov
hlt
mov
sbb
andl
mov
inc
sub
cwtl
jl
sub
and
ret
mov
ljmp
sub
mov
scas
sub
pop
shlb
mov
ficomps
mov
mov
fbld
testb
mov
and
or
mov
shrb
mov
push
outsl
gs
push
cmp
mov
scas
and
scas
and
mov
pop
int
dec
insb
in
test
ret
outsb
loopne
jle
jmp
cmpsb
addl
push
mov
push
sub
fisttpll
cmpsb
sub
inc
sbb
adc
sbb
imul
ret
or
je
fcomps
fisubl
fwait
inc
ret
andl
movsb
fwait
or
cltd
pop
cs
pop
incb
lods
jne
sti
mov
mov
xor
ret
mov
mov
in
lret
enter
dec
aad
mov
std
sbb
ret
shll
bound
sahf
add
sbb
inc
add
push
pop
outsl
mov
movsl
lods
out
sbb
aad
repnz
fstl
mov
popf
sub
cwtl
outsl
je
push
sub
hlt
out
aas
lahf
xor
and
xchg
mov
leave
xchg
stc
dec
pop
pop
xchg
mov
mov
mov
mov
mov
mov
scas
dec
ja
xlat
stos
and
pop
mov
xchg
jmp
in
add
cmp
mov
movsb
daa
mov
cmpsb
fwait
lcall
pop
jo
shr
outsb
mov
adc
aad
jecxz
insl
mov
push
aas
mov
dec
mov
xchg
lea
mov
or
dec
push
pop
push
les
stc
mov
xchg
rorl
lock
clc
add
sub
cmc
std
xchg
mov
push
jmp
or
ret
jb
fldenv
mov
inc
ret
scas
out
dec
mov
sub
jno
in
mov
sbb
and
dec
test
mov
ljmp
rol
xchg
in
xchg
sbb
inc
mov
in
dec
xor
mov
mov
jmp
cs
cmpl
shll
hlt
dec
mov
push
push
mov
or
fsubs
andl
xchg
repz
sbb
add
inc
xchg
into
lods
mov
stos
mov
cmp
mov
xor
pop
lcall
lods
jmp
push
mov
xchg
mov
cmpb
add
xchg
out
xchg
mov
cltd
mov
lods
xchg
insb
in
mov
pop
std
cmp
ret
mov
xor
cmpsl
imul
mov
xchg
dec
sub
jns
ret
push
cmp
es
lcall
daa
outsb
stos
or
rolb
ret
jecxz
adc
xchg
xor
mov
je
push
test
mov
cmp
jae
aam
sahf
jmp
fisttpll
test
test
cmpsb
xchg
das
push
cli
movsl
mov
arpl
mov
fwait
push
cs
std
dec
adc
mov
lret
lret
nop
jp
xchg
out
fwait
ss
mov
loope
xor
mov
repz
les
test
jo
xchg
pop
xchg
jle
or
scas
repnz
sbb
or
nop
shll
mov
ss
int
daa
lods
scas
mov
xchg
mov
xchg
fnstsw
mov
mov
mov
fst
sbb
mov
lret
xchg
mov
in
xchg
or
dec
loop
pop
int
negl
add
xchg
lret
mov
ja
lods
jp
push
mov
or
or
fnstcw
inc
xchg
imul
sub
push
jle
ja
mov
fdivrs
adc
jb
outsb
mov
mov
fwait
jnp
je
add
mov
xor
xchg
in
repnz
popa
in
inc
std
xchg
mov
aam
pusha
cmp
add
jmp
mov
stos
xchg
sahf
mov
jmp
mov
mov
and
repz
lea
imul
lret
fnsave
xor
les
arpl
nop
pop
arpl
daa
mov
mov
sti
in
cld
ret
xor
pop
cld
mov
mov
mov
mov
mov
mov
mov
mov
xchg
insb
add
cmp
lret
cmpsb
stos
ret
scas
mov
mov
test
xchg
call
mov
sub
adc
ret
jbe
dec
mov
jno
cmp
int
inc
ljmp
cmpsl
xchg
adc
mov
pop
jne
mov
cwtl
and
sbb
mov
sub
cltd
inc
add
pushf
lds
popf
insl
inc
sub
lods
fs
inc
loop
mov
pop
mov
hlt
insb
test
outsb
test
xchg
popa
cmpsl
popf
mov
pop
into
ret
bnd
jle
out
shrl
push
bound
psrad
jp
mov
jecxz
mov
jnp
inc
mov
xor
shlb
or
dec
mov
mov
inc
sbb
jae
cmpsl
outsl
mov
xor
fsubrp
enter
ret
das
adc
cmp
sbb
imul
in
mov
jge
fbld
xchg
cmpsl
inc
stos
pop
in
jg
mov
ficompl
jmp
sbb
negb
scas
ljmp
ret
sbb
lods
ljmp
inc
mov
cltd
and
mov
mov
cmp
or
mov
popf
adc
mov
mov
rcrl
mov
mov
lret
lret
mov
aas
xlat
cmpsl
or
jle
mov
movsl
loopne
hlt
adc
dec
mov
enter
mov
lods
sub
xor
mov
test
mov
sub
sbb
stos
fsubl
inc
pop
mov
mov
fs
xchg
pop
int3
xchg
mov
and
add
mov
mov
cmp
xor
jne
loop
mov
mov
mov
pop
ds
mov
das
inc
insb
push
xchg
inc
test
sarb
sahf
push
stos
pop
sub
mov
cmp
mov
fwait
mov
mov
rol
inc
dec
add
lods
pusha
out
mov
jle
push
mov
mov
loop
int3
jbe
outsb
arpl
lahf
or
lods
add
add
stc
dec
adc
insl
fdivs
lahf
bound
dec
mov
adc
popa
sbb
scas
mov
push
test
rol
xlat
mov
scas
gs
xchg
test
xchg
lock
pop
jl
jno
lods
xchg
mov
popf
cmpsb
inc
imul
fldcw
outsb
adc
add
sub
cmpsl
stos
pop
ds
adc
xchg
xor
mov
ja
xchg
call
ret
lcall
push
mov
inc
xchg
je
mov
sub
ret
inc
icebp
iret
int
sub
cmp
xchg
insl
sbb
imull
and
lods
pop
ffree
stos
out
jl
xor
mov
mov
or
loope
add
popf
cmpsl
mov
fidivs
xchg
ret
sahf
aam
jmp
test
inc
jo
cmc
adc
mov
jecxz
int3
xor
xor
lea
mov
xchg
ja
enter
sti
mov
nop
cltd
sbb
movsl
push
jl
add
cmp
mov
or
shl
jle
jmp
xchg
xor
xchg
mov
mov
lods
dec
fimuls
pop
mov
out
sbb
inc
rorl
mov
dec
stos
xor
cld
mov
push
inc
mov
negb
jns
outsl
mov
mov
pop
xlat
rcrl
or
aas
lds
xchg
int3
jmp
xchg
sahf
ds
mov
ljmp
loop
mov
mov
mov
xchg
loope
fistps
ss
fldt
mov
stos
cltd
mov
xchg
push
shl
dec
sbb
sbb
std
jb
mov
jmp
cld
mov
fisttps
add
jne
pop
movsl
mov
mov
sub
js
ljmp
cmp
mov
add
mov
sub
fmul
shl
inc
mov
jmp
shlb
xchg
lods
mov
outsb
mov
pop
mov
inc
lahf
mov
mov
mov
jb
mov
nop
cwtl
push
xchg
mov
pop
jae
push
ret
stos
mov
cmp
jle
in
in
fwait
sub
cmpsl
scas
loopne
fmull
sbb
aaa
sbb
xor
push
leave
in
stos
push
inc
xchg
insl
sbbl
cli
enter
fwait
pop
ret
mov
cmpsb
cs
mov
ss
test
xor
jp
xor
mov
mov
mov
inc
enter
sbb
sub
mov
sub
mov
or
jmp
dec
int
dec
fwait
cltd
mov
push
into
scas
clc
and
mov
jecxz
addl
mov
insb
push
jmp
or
cmpsl
mov
lods
cmp
cmpsl
mov
int3
repz
jge
scas
xchg
xchg
ja
addb
and
jmp
in
mov
or
fwait
out
mov
insl
dec
mov
jmp
mov
inc
xchg
lds
daa
inc
sub
lea
push
sub
sbb
jle
xchg
rolb
push
mov
jle
mov
sub
shlb
xchg
mov
xorb
sub
cmp
imul
push
outsl
jae
outsb
fildll
roll
sti
xor
int
add
mov
in
mov
ja
sub
repnz
lret
movswl
fisubrl
mov
rcrl
lea
or
outsb
in
call
adc
mov
push
stos
insl
cmp
mov
fwait
dec
subl
popf
cmp
jecxz
xor
aas
add
mov
shll
adc
divb
loopne
cmpsb
jae
mov
adc
jg
sti
popf
insl
mov
cld
out
cmpsb
popa
sub
jmp
ret
inc
mov
mov
cmc
frstor
insl
push
mov
pop
aaa
rcrl
mov
inc
ret
push
enter
rorl
nop
xlat
mov
push
dec
jae
leave
xchg
sub
outsb
pop
lods
mov
sub
add
mov
stos
pop
jae
and
rol
push
sub
push
cmp
shrl
js
xchg
adc
aas
mov
or
scas
call
sub
leave
lds
dec
jnp
mov
pushw
test
pop
or
dec
xchg
xor
sub
mov
jle
divb
mov
stos
ret
insb
push
cmpsl
jle
adc
movsl
mov
jno
jo
mov
mov
mov
aad
movsl
hlt
rcrb
les
mov
jb
pushf
test
and
lea
insl
les
bound
dec
xchg
dec
das
mov
lods
in
xchg
mov
mov
inc
mov
ret
sub
or
in
mov
clc
popf
repnz
pusha
notl
daa
or
ret
jo
loop
in
mov
mov
fisttpll
out
mov
push
les
aad
dec
or
add
lret
insl
jne
mov
cmpsl
insl
mov
lods
adc
int3
mov
lcall
sarl
ja
ja
sub
mov
int
sarb
movsl
sarb
outsb
cmp
cltd
sahf
mov
les
leave
pop
test
mov
mov
jae
mov
mov
mov
loope
movsb
or
stos
xor
or
mov
mov
aas
inc
stos
mov
lods
xlat
popf
lods
cld
and
sti
mov
test
add
scas
jmp
rorb
jae
repnz
cwtl
imul
repz
ret
icebp
jns
mov
adc
sub
dec
call
stc
add
mov
lock
mov
fbld
dec
mov
jbe
mov
jp
les
in
ss
shrb
jp
cmpsl
mov
mov
cltd
mov
add
mov
imul
cmpsb
or
insl
mov
bound
scas
sbb
mov
cwtl
sub
pushf
fnsave
mov
mov
test
dec
aas
xchg
jg
xor
repz
xchg
int
adc
pop
mov
stos
jb
sub
cwtl
outsb
add
loop
lds
test
enter
xchg
imul
push
mov
scas
inc
xchg
mov
ret
clc
cmp
or
mov
lods
jb
jne
sub
add
mov
ret
mov
mov
or
sub
cli
daa
xchg
cmp
xchg
fwait
mov
fidivrs
cmpsb
mov
mov
cmp
adc
sahf
mov
mov
jmp
mov
dec
fs
ret
xor
std
shll
divb
pop
adc
xor
pop
mov
mov
shll
mov
mov
mov
pop
test
in
lret
or
mov
sbb
and
dec
mov
aas
sarl
xchg
push
or
mov
rcl
mov
aad
sahf
divb
aaa
cmpsl
ret
mov
dec
mov
inc
loopne
in
fsubrl
or
cmpsl
roll
hlt
jae
jns
mov
push
icebp
mov
scas
movsb
nop
push
mov
adc
fidivl
push
inc
mov
sbb
cmc
mov
jp
mov
imul
push
sti
push
cmpb
cmp
mov
arpl
mov
jb
mov
cmp
mov
mov
dec
sbb
xchg
dec
jmp
lods
cld
rcrb
mov
dec
mov
ret
outsb
lahf
js
outsb
sbb
lods
stos
rorb
test
push
mov
stos
push
sub
push
xchg
sub
xchg
pop
mov
cs
addr16
outsb
dec
jnp
sahf
lods
mov
outsb
xchg
shlb
mov
mov
test
cwtl
push
lret
xchg
adc
shll
sbb
xor
inc
cli
lds
cs
sahf
mov
popa
sbb
mov
fdivrs
in
imul
enter
daa
sub
lea
cmc
mov
das
xchg
cld
pause
mov
cmp
insb
inc
movzbl
lods
mov
lcall
xchg
push
mov
xchg
push
mov
in
movsl
sub
mov
xchg
cltd
ret
in
call
stos
xchg
cmp
mov
mov
inc
fs
ljmp
movsb
test
in
dec
mov
mov
outsb
stos
xor
loopne
mov
out
jle
outsb
movsb
popf
and
push
cs
in
lret
cmpsb
outsl
xor
mov
cwtl
leave
scas
outsb
jnp
xchg
ja
sbb
ja
enter
call
pop
push
mov
stos
pusha
adc
cli
decl
fcompl
mov
aam
test
test
shrl
lds
mov
fidivrl
icebp
or
dec
mov
sbb
int3
out
stc
mov
push
mov
and
mov
ret
in
test
dec
mov
xchg
jne
xchg
test
xchg
stc
mov
push
movsb
cmp
dec
pop
lods
pop
fbstp
std
popf
lea
xchg
test
mov
jle
dec
add
add
stos
js
pushf
mov
stc
xchg
mov
call
test
mov
mov
sbb
fldt
xchg
rorb
cmpsb
dec
or
int
sub
outsl
mov
out
xchg
inc
les
and
in
sub
mov
mov
addr16
mov
dec
leave
stos
inc
mov
dec
xchg
push
adc
mov
mov
xchg
mov
pop
sub
dec
outsl
mov
xor
mov
stos
add
jne
pop
mov
mov
imul
imul
xchg
push
mov
imul
fwait
mov
mov
sbb
fdivl
mov
adc
xchg
fnstenv
mov
test
sti
in
mov
sbb
test
fdivrs
sub
stos
mov
jno
mov
xor
sub
sahf
iret
nop
lods
mov
pop
xchg
mov
mov
insb
inc
jecxz
ret
adc
lods
add
test
sahf
cwtd
mulb
insb
mov
repz
add
fisubrl
ret
out
mov
mov
bound
out
pop
cltd
daa
lods
adc
in
ss
mov
movsb
xchg
jb
insb
repz
mov
mov
insl
aad
pop
mov
popa
xor
scas
sub
in
out
pop
dec
inc
or
adc
dec
aad
push
loop
test
mov
xor
mov
shrb
jne
mov
lock
jnp
mov
mov
jae
jne
xor
out
mov
mov
fwait
lcall
test
mov
mov
test
rcrb
or
jb
shll
mov
in
sbb
xchg
xchg
pop
sub
enter
leave
pop
shrl
fidivs
daa
imull
rcll
pop
xchg
scas
repnz
mov
mov
lcall
scas
test
pusha
fdivs
stos
ja
cmc
notl
cwtl
daa
out
inc
dec
stos
outsl
in
mov
jns
mov
int
in
sti
std
leave
xchg
pop
adc
scas
mov
mov
xchg
fwait
ret
repz
sahf
mov
cld
aas
leave
stos
jne
jg
lods
lods
jmp
daa
adc
enter
cld
sahf
or
sub
dec
loopne
mov
ljmp
in
mov
jnp
ret
xor
jmp
inc
dec
lock
pushf
pop
imul
fcmovnb
stos
stos
test
and
stos
cmp
mov
daa
mov
lods
and
mov
in
ret
cs
dec
movsl
or
stc
sub
mov
les
pop
mov
rcll
mov
sbb
imul
dec
xchg
scas
sub
data16
add
fidivl
les
sbb
lods
rclb
hlt
aaa
lods
mov
jecxz
ret
sub
mov
mov
jne
arpl
jns
xchg
xchg
push
movsl
sub
jb
popf
ret
out
enter
mov
push
hlt
mov
or
adc
lret
jecxz
add
scas
mov
cmpsl
outsl
mov
lock
ret
inc
xlat
mov
sub
in
test
pop
popf
push
dec
icebp
std
scas
pop
mov
xchg
lcall
mov
lcall
adc
fcoms
rorb
mov
es
insl
rcr
ret
push
mov
jg
jb
in
xchg
mov
js
outsl
iret
xchg
dec
ret
dec
call
movsb
mov
pop
out
cmp
fldt
shlb
lret
mov
popf
or
jge
sbb
es
andb
mov
int
mov
push
cltd
lahf
or
mov
scas
xchg
push
ds
sub
adc
xchg
pop
outsb
loope
lds
jmp
jne
lahf
mov
cmp
aas
mov
fwait
or
mov
enter
insl
aas
jo
insl
dec
jle
cmp
mov
or
lods
mov
outsb
ret
jno
inc
test
or
xlat
lds
fadds
mov
lds
imul
mov
pop
nop
jle
jne
test
popf
mov
ja
dec
mov
cmpsl
mov
sub
sahf
push
jb
lret
xchg
mov
lcall
ret
push
sub
mov
mov
dec
pop
xchg
mov
movsl
js
xchg
inc
rclb
xchg
jae
iret
add
mov
mov
lcall
xor
or
rcll
js
lods
mov
push
leave
jno
mov
sub
adc
lods
xor
fsubrp
pop
xchg
ja
or
mov
mov
dec
scas
push
or
pop
xchg
aad
cli
aas
pop
adc
cltd
je
mov
sub
sbb
mov
push
cmpsl
in
adc
mov
fldcw
jp
in
insb
mov
lahf
mov
cwtl
mov
jns
cltd
cmpsl
mov
daa
add
jle
insb
into
inc
in
out
fstps
jbe
mov
int3
xor
mov
mov
xchg
or
mov
lea
cmp
or
dec
xchg
mov
mov
jbe
ret
sub
xchg
sarl
inc
outsl
popa
mov
pop
ror
cli
mov
mov
imul
scas
rcr
popf
gs
xchg
push
mov
lds
ret
int3
cmpsl
dec
mov
pop
iret
in
mov
outsl
inc
or
daa
imul
push
jle
lcall
or
add
xchg
mov
aas
out
shll
or
jg
pop
inc
pushf
mov
cmp
fmuls
imul
dec
lahf
push
mov
inc
cmp
lods
and
mov
xchg
daa
pushf
int3
push
lods
lods
mov
ret
cltd
repnz
adc
sahf
out
addr16
mov
push
cmpsb
cmp
add
enter
lcall
mov
jecxz
popf
mov
cmpsl
and
adc
mov
sti
insl
sti
mov
or
lcall
outsl
mov
mov
addl
insb
loopne
pusha
mov
sahf
mov
push
mov
jl
roll
push
addr16
cmpsb
or
popf
je
mov
popa
ret
imul
xchg
jmp
and
lods
mov
fwait
bnd
mov
shrl
add
popf
hlt
mov
orb
enter
push
jle
add
daa
mov
lods
nop
std
mov
fstpt
dec
mov
lahf
movsl
sub
or
and
push
sahf
shlb
and
mov
sub
movsl
xchg
adcl
test
mov
sbbb
jecxz
push
jp
mov
pop
cmp
cltd
sti
jmp
mov
repz
or
lahf
lcall
push
mov
mull
mov
in
and
ss
inc
stc
mov
sub
sub
rcll
mov
pushf
mov
adc
imul
lods
rorb
push
mov
inc
movsb
mov
xchg
mov
pusha
sarl
popf
jno
inc
push
js
ja
clc
mov
hlt
mov
test
sti
stos
aam
mov
lds
shll
hlt
add
mov
insb
mov
imul
mov
push
insb
fdivrl
xchg
mov
push
jbe
jne
stos
cmp
fwait
mov
enter
scas
sub
sub
mov
stos
mov
mov
hlt
inc
xchg
lods
stc
loopne
movsb
mov
push
mov
jne
cmp
fwait
mov
imul
mov
bound
cltd
mov
xor
xchg
dec
sahf
xchg
aad
sub
test
mov
xchg
mov
into
imul
ret
jbe
mov
push
mov
cld
mov
xchg
in
jecxz
jge
and
outsl
push
pop
int
in
aam
mov
enter
ljmp
sbb
test
shr
cmpsb
mov
cwtl
test
xchg
repz
dec
add
mov
jno
inc
adc
sbb
xchg
mov
mov
push
xor
add
cmp
mov
or
sti
mov
mov
in
xor
cmpsb
subb
lods
push
cltd
add
hlt
jnp
idivb
mov
sbb
jle
pop
ret
xchg
mov
xchg
push
in
mov
shll
ret
insb
pop
rolb
mov
xchg
jle
cmp
xchg
fwait
sub
mov
stos
test
mov
push
mov
scas
mov
push
mov
movsb
cmp
mov
jae
lods
or
xchg
stos
push
in
cmp
inc
mov
inc
stos
arpl
jbe
mov
jne
outsl
movsl
mov
and
fistl
lock
xchg
lahf
pushf
mov
add
ja
push
mov
inc
lret
out
test
mov
scas
pusha
xor
ja
mov
mov
and
pushf
fwait
cld
lods
in
mulb
xor
push
movsb
sub
push
scas
lods
xor
adc
out
dec
cmpsl
lods
aam
xor
jg
outsb
pushf
fisubs
lret
shlb
dec
mov
inc
lods
ret
jmp
int
fwait
mov
test
aam
mov
fisttps
movl
mov
or
lds
push
movsl
sub
and
xor
dec
mov
shll
push
sti
xor
fdivl
cmpsl
scas
insl
mov
loope
mov
popf
mov
adc
imul
jl
lcall
mov
inc
mov
push
aaa
daa
ret
mov
adc
out
mov
inc
ss
cltd
cltd
xor
imull
scas
enter
cltd
shrl
adc
sbb
mov
fldt
mov
out
int
ljmp
icebp
leave
leave
sarb
cltd
mov
outsb
jmp
lods
lcall
adc
jecxz
xsaves
jmp
fnsave
mov
pop
jo
in
cmpsl
sub
ljmp
sub
xor
adc
int3
fsubrs
lods
ss
adc
mov
cmp
sub
adc
sbb
xchg
xchg
hlt
outsb
pop
movsb
cltd
outsb
cmpsb
inc
pop
mov
mov
push
mov
hlt
xchg
adc
iret
xlat
lods
movsb
je
jecxz
xor
ret
xor
enter
pop
cli
add
imul
push
xor
stos
mov
fidivrl
shrb
sbbl
outsl
shrl
movsl
jmp
std
test
xchg
mov
cli
mov
je
lahf
mov
popf
ret
jmp
jnp
sub
xchg
push
dec
pushf
les
push
or
mov
dec
mov
insl
pop
ret
mov
fwait
dec
inc
mov
cwtl
les
push
dec
mov
in
lea
sub
jle
mov
xchg
dec
sbb
mov
dec
stos
push
or
push
sub
repnz
shlb
adc
sub
pop
ffree
mov
mov
and
shrb
mov
sahf
pop
mov
push
pop
ret
nop
in
dec
xor
xchg
in
mov
cmp
int
xor
add
and
mov
enter
imul
aas
xchg
cld
ja
xchg
add
hlt
loope
jecxz
imul
sub
pushf
nop
popa
fadd
push
shrl
cmpsl
adc
stos
repnz
int3
pop
lahf
out
mov
popf
mov
cmpsl
ja
dec
mov
lods
push
sahf
dec
mov
icebp
adc
lret
lcall
xor
imul
xor
enter
fs
cmp
jnp
loope
pop
repz
mov
cs
mov
scas
mov
sbb
or
jo
xchg
jg
scas
pop
add
in
mov
daa
and
adc
sub
push
in
adc
mov
daa
add
andl
xor
mov
in
and
in
mov
jb
shll
jmp
mov
outsb
dec
mov
inc
in
xchg
scas
adc
nop
and
sbb
xchg
lods
fldcw
cmp
adc
pushf
repz
mov
push
lods
mov
adc
sbb
movsb
sahf
mov
mov
std
fisttps
or
mov
mov
insl
outsb
daa
sbb
aad
mov
ret
in
addl
notb
outsb
xchg
imul
xchg
shll
bsr
int
xchg
lock
xor
sbb
dec
dec
mov
cwtl
jg
lea
movsl
jne
dec
enter
jg
popf
stos
repnz
test
or
stos
lods
mov
jg
lret
pop
bound
xor
mov
nop
xchg
pushf
push
scas
mov
lcall
ret
push
adcl
std
xor
mov
ret
jp
insb
inc
cwtl
sbb
sub
cmpsb
xor
out
popf
pop
cmp
cmp
lds
cmp
pop
lea
mov
dec
fistpll
xchg
ret
out
test
mov
mov
loopne
jnp
pushf
push
jnp
push
sub
pushf
push
jmp
out
xor
mov
stos
int
sub
mov
ja
pushf
ljmp
std
lea
in
xor
mov
scas
jmp
out
push
push
mov
popf
fwait
mov
sbb
xchg
mov
add
movsb
scas
repnz
fcompl
mov
ret
ss
mov
mov
sbb
mov
outsb
les
sti
int
mov
mov
je
pop
pop
mov
sbb
cmpsb
inc
nop
imul
jns
shrb
jge
mov
lea
mov
sub
jne
aad
mov
fnstsw
add
mov
push
mov
in
negb
cltd
cld
xor
mov
insl
js
mov
sbb
cltd
fwait
or
aam
mov
mov
insb
lods
mov
shll
rorb
fwait
pushf
lret
outsb
mov
movsb
idivb
xchg
sub
out
xchg
mov
and
push
mov
push
setbe
cltd
fstl
jbe
movsl
mov
repnz
mov
fwait
dec
sub
mov
mov
xchg
add
xchg
xor
push
mov
or
jge
aaa
mov
int
lods
jb
mov
mov
cltd
mov
and
sbb
test
pop
loopne
nop
dec
push
insb
andb
icebp
mov
fsubrs
sbb
xchg
lods
test
sahf
mov
stos
add
lcall
iret
xchg
mov
cltd
lods
xchg
ret
test
push
push
ret
test
mov
mov
leave
lods
rcrb
scas
ljmp
icebp
rorl
pushf
xchg
mov
pop
mov
mov
mov
add
lds
xchg
subl
mov
pushf
sti
mov
jmp
shr
dec
mov
insl
mov
xchg
enter
lds
js
or
jl
shll
xchg
ret
jno
lods
sahf
aas
xchg
xor
out
jnp
mov
out
push
dec
inc
cli
ret
lods
sbb
ficoml
sub
lds
pushf
popf
sbb
jae
mov
cwtl
sbb
xchg
xor
add
outsb
inc
repnz
mov
out
mov
pushf
movsl
sub
cltd
hlt
or
mov
into
dec
pop
dec
mov
cmp
mov
test
mov
scas
lret
pop
and
les
mov
loope
pushf
fwait
outsb
dec
mov
and
outsb
mov
mov
std
cmpsb
or
add
xor
lea
inc
ret
mov
fbstp
push
ret
ljmp
in
pop
in
lods
pavgb
lods
mov
mov
push
cltd
jg
lds
scas
mov
cmpsl
mov
cwtl
pusha
mov
mov
mov
mov
ljmp
cltd
mov
ja
dec
pop
lahf
sub
lret
xchg
mov
xchg
mov
and
cmc
mov
pop
and
out
dec
mov
or
lcall
xchg
push
mov
xchg
testl
dec
mov
jnp
xchg
ljmp
enter
dec
shrl
outsb
xor
cmpsb
dec
pop
dec
iret
nop
dec
movsl
pop
loopne
leave
mov
pop
mov
push
gs
outsb
je
inc
mov
scas
test
jg
popf
pushf
cmp
mov
mov
je
mov
inc
mov
mov
cmpsl
lods
push
and
cmp
sahf
add
lods
sbb
xor
xchg
mov
mov
fwait
push
cli
inc
mov
mov
out
popf
mov
mov
or
sub
dec
bt
cmp
jbe
cmc
mov
fbstp
ret
mov
pushl
in
ss
scas
loopne
mov
jecxz
lds
pop
out
cmc
mov
mov
mov
test
fldcw
das
mov
lea
push
inc
mov
mov
out
pop
rolb
mov
lret
mov
lods
loope
iret
xchg
mov
mov
pop
mov
mov
push
cmpsb
jle
test
shlb
xchg
xlat
lods
and
jmp
inc
stc
or
mov
stc
push
mov
xchg
push
mov
mov
ljmp
cmp
xchg
mov
jmp
cld
scas
adc
mov
movsl
mov
xorl
pop
push
cmp
stos
pop
testb
mov
movsb
pop
mov
push
insl
mov
js
add
mov
cwtl
mov
inc
mov
sbb
outsb
in
xchg
hlt
adc
icebp
xchg
xorl
stos
in
in
adc
mov
jmp
jmp
in
add
movsl
xchg
cs
mov
xchg
mov
mov
icebp
std
shrb
mov
hlt
inc
rcr
mov
mov
jmp
xor
mov
add
xor
outsb
mov
xor
stos
fwait
and
icebp
sarb
ret
mov
mov
insb
mov
ret
in
aad
call
jge
in
in
iret
cmp
jbe
mov
cs
mov
push
mov
jae
outsb
scas
jbe
or
mov
mov
les
mov
mov
mov
xor
fnsave
hlt
adc
inc
or
test
pushl
arpl
rorb
sbbl
fwait
mov
cmp
cmpsb
fnstenv
mov
cmp
mov
test
sahf
call
mov
dec
gs
lea
lret
outsb
icebp
int
mov
in
mov
das
xchg
sbbb
cltd
lods
call
sbb
lea
mov
jns
mov
scas
xchg
xor
pushf
sbb
sub
repz
ss
pushf
mov
imulb
pop
mov
movsl
stos
jo
dec
dec
ret
xor
xchg
dec
cwtl
or
lret
cs
push
fs
mov
dec
lcall
popf
ja
rcrl
adc
mov
out
mov
cs
cmpsl
sub
mov
fnsave
xchg
jbe
or
ret
inc
mov
or
mov
jo
in
lods
jne
jle
outsb
ret
jmp
xor
ljmp
aad
cld
out
adc
jle
or
movsl
mov
xor
stos
xchg
rol
mov
fcomps
ret
imulb
mov
inc
xor
lahf
cmc
pop
mov
and
mov
insl
fs
iret
jae
cmc
paddsw
push
adc
and
roll
cltd
xor
mov
mov
mov
nop
xor
rcll
les
je
popf
cmp
push
dec
movsl
cld
imul
cwtl
dec
sbb
roll
mov
cmp
jmp
sbb
ret
mov
movsb
or
mov
lock
mov
add
dec
mov
ficoms
out
pop
lods
mov
mov
rcr
enter
xchg
ret
stc
sub
leave
orb
adc
jno
scas
cmp
cmp
mov
xchg
stos
add
jnp
xchg
jbe
lcall
dec
das
mov
mov
cmpsb
xchg
lods
loopne
frstor
inc
ret
ja
popf
mov
mov
mov
jne
mov
outsl
jp
aad
insl
mov
or
sti
sti
scas
xchg
jbe
xchg
stos
push
xchg
gs
mulb
scas
mov
loop
dec
imul
outsb
sbb
lods
xchg
outsl
or
imul
mov
xchg
out
mov
mov
mov
push
cmc
aas
fs
movsl
shr
push
mov
rcll
movsl
mov
lods
mov
mov
inc
mov
xor
mov
mov
in
mov
in
pop
lock
jo
inc
xchg
stos
shrl
ja
mov
mov
xchg
jmp
jle
scas
fscale
or
shrl
lret
lds
imul
mov
jno
add
mov
cltd
fwait
push
insl
or
int
int3
rclb
mov
div
iret
std
lret
es
adc
xchg
mov
addb
lahf
stos
xor
inc
cmpsl
popf
mov
outsb
addr16
inc
lret
leave
xor
lea
jb
xchg
jle
mov
mov
jge
push
mov
adc
ss
dec
pushf
cmp
scas
call
fbstp
ret
mov
jb
pop
out
sub
int
mov
and
rol
test
cltd
xor
jb
daa
leave
mov
movsb
insl
mov
push
mov
icebp
dec
je
mov
xchg
xchg
lret
ret
repnz
std
out
fs
mov
scas
pushl
cs
test
sti
cmp
jo
fnstenv
lret
mov
mov
xchg
jno
add
push
mov
out
add
das
int
out
mov
test
sahf
xchg
lds
sbb
inc
jmp
xchg
shll
xchg
ja
int
xchg
jmp
cmp
dec
imul
lds
test
outsb
ret
out
xlat
stos
insb
test
test
orl
mov
dec
inc
aad
lcall
lea
push
jmp
push
stos
outsb
or
mov
cmpsl
sahf
mov
into
das
insl
xchg
loop
lea
mov
or
loope
cli
dec
movsl
outsb
mov
mov
in
mov
mov
out
mov
lods
jns
mov
sarb
mov
mov
jmp
insb
xchg
fcompl
inc
mov
push
test
jbe
ret
xchg
jno
adc
jmp
das
mov
lods
popf
mov
cmpsb
pop
xor
jne
pop
mov
ret
in
pop
xchg
mov
xor
adc
into
jge
loope
inc
mov
xchg
jne
setnp
out
arpl
adc
aaa
lahf
loope
xor
std
or
xchg
repnz
frstor
mov
ja
in
movsl
dec
add
lret
jns
mov
xor
dec
push
enter
adcb
xchg
xchg
movsl
test
loope
xchg
shr
cli
test
jb
mov
xchg
push
pop
mov
cmpsl
mov
adc
jno
fbld
addl
sub
fisubl
popf
shll
or
xchg
xor
inc
cmc
pop
into
adc
xchg
mov
mov
mov
xor
sbb
mov
rclb
mov
xor
outsl
movsb
insb
xor
lea
or
fs
icebp
popf
xchg
dec
pop
shll
popf
lret
xor
arpl
xchg
mov
mov
mov
lods
jbe
push
aaa
cld
mov
dec
cmpsb
in
jo
call
jb
ret
popa
mov
mov
cltd
in
xor
xchg
call
cld
hlt
scas
xchg
xchg
lret
pusha
mov
mov
sbb
idivb
dec
fdivrl
mov
out
ja
lods
scas
sub
push
hlt
jg
mov
mov
in
aad
mov
mov
test
nop
int
lods
ss
add
in
mov
sahf
stos
mov
pop
addl
movsb
mov
jbe
frstor
mov
setl
and
add
scas
or
hlt
in
cmp
lods
mov
or
insb
dec
scas
and
fcomi
mov
lods
in
fists
scas
je
cltd
imul
jecxz
in
out
scas
leave
xchg
nop
xchg
or
aam
mov
mov
inc
test
xchg
cmc
mov
mov
into
int
inc
in
sbb
jne
rcl
scas
mov
or
std
jmp
xchg
mov
or
aas
xor
lods
fwait
insb
adc
xchg
int
outsb
xchg
cli
xchg
movsl
pusha
xchg
xchg
mov
pop
int
fimull
mov
sbb
jmp
inc
xchg
jmp
mov
cmpsl
cmpsl
cmp
popf
mov
cmc
xchg
lods
mov
scas
ljmp
push
imul
jno
jecxz
cmc
outsb
decl
out
push
or
push
mov
cmpsl
xchg
mov
xor
lahf
in
mov
stos
cmp
insb
sub
stos
fbstp
sub
test
lahf
mov
mov
sub
imulb
cli
dec
scas
push
stos
mov
nop
movsb
or
or
mov
leave
inc
mov
sub
xchg
cmpsb
lret
sub
scas
sahf
push
xchg
std
cmpsb
cmp
xchg
pushf
push
xchg
scas
inc
dec
add
std
ret
repz
mov
es
ret
lret
or
fs
add
test
dec
or
mov
mov
ja
xchg
add
leave
sbb
dec
jns
cmp
in
mov
clc
push
mov
jecxz
pop
xor
mov
xchg
clc
repz
adc
jae
pop
sub
fstpt
cld
jne
aas
mov
inc
adc
fisttpll
fmuls
mov
shrl
xchg
sbb
pop
nop
pop
testl
test
jmp
hlt
adc
nop
mov
lea
popf
jnp
sub
push
push
mov
rorl
in
mov
leave
dec
rcrb
test
mov
icebp
fcoms
or
mov
push
imul
arpl
lods
int
and
push
push
sbb
add
pop
mov
popf
lods
popf
mov
stc
ret
xlat
mov
fwait
sub
int3
inc
aaa
popf
daa
pop
movups
mov
xchg
jne
mov
sbb
fistpl
mov
movsl
nop
idivb
loop
shr
aas
pushf
mov
xchg
mov
mov
cmc
mov
out
out
jne,pn
xor
sub
faddl
cmp
popl
stc
ret
jae
mov
icebp
test
insb
mov
cmp
adc
mov
dec
in
push
mov
lahf
in
inc
ret
jo
xchg
adc
cmpsl
std
or
rcll
cmp
hlt
xlat
mov
mov
inc
fwait
sub
sbb
xchg
xchg
xor
xchg
scas
mov
aas
dec
divl
mov
outsb
lods
fistpl
popf
adc
leave
xchg
ret
imul
mov
or
jge
sub
or
xchg
outsb
test
hlt
outsl
fldcw
fcmovb
mov
inc
outsb
stc
sub
or
dec
test
ret
scas
inc
dec
pop
leave
outsl
inc
out
mov
scas
mov
or
decb
cmp
push
das
xchg
nop
fildl
leave
fs
ja,pn
cwtl
lret
push
xchg
pop
into
mov
dec
pusha
xor
xor
mov
mov
test
sbb
xor
mov
mov
lcall
jns
sti
stos
add
xor
jmp
xchg
scas
loop
xchg
lea
imul
pop
xlat
cltd
inc
cld
mov
stos
xor
push
pop
imul
and
lods
lret
or
and
imul
pop
cwtl
subl
cmp
adc
movsl
sbb
jnp
mov
sbb
pusha
dec
jne
push
and
cltd
daa
jmp
xor
in
int3
sub
popf
shrb
in
ret
mov
push
push
sub
dec
loope
pop
mov
sahf
leave
out
divb
cltd
push
cmp
test
pop
dec
xor
ret
call
cld
inc
int
popf
jne
pushf
mov
lahf
lret
insl
and
or
pop
mov
nop
xchg
hlt
cmpsb
scas
dec
scas
mov
add
mov
sar
mov
test
sub
scas
mov
xchg
out
mov
inc
fwait
sti
out
ret
rorb
imul
insb
push
ret
leave
inc
mov
jb
out
xchg
sub
ret
scas
or
jg
fstpl
mov
popf
pop
sbb
mov
sub
xchg
mov
popf
jno
xor
mov
cmp
push
test
mov
pop
out
adc
mov
enter
inc
in
mov
sti
mov
xchg
lds
mov
in
xlat
mov
jmp
out
cli
fwait
subb
pop
pop
cltd
int3
out
sbb
jnp
leave
push
or
stos
pop
ja
mov
ret
lret
mov
cli
xchg
scas
stos
push
lret
or
movsl
lea
sub
inc
hlt
dec
mov
int
dec
fwait
mov
into
div
in
cwtl
mov
stos
stos
mov
mulb
mov
arpl
lock
xchg
in
add
add
out
and
lret
in
mov
mov
xor
xor
xor
test
scas
pop
push
fbstp
xchg
ret
or
dec
stos
pushf
es
jo
sbbl
sub
fwait
cld
aam
sub
daa
test
es
mov
lahf
xor
jno
sub
jmp
aaa
dec
ret
icebp
cwtl
fs
push
aad
lods
xor
adc
cmp
movsb
pop
inc
movsl
ja
add
mov
outsb
roll
hlt
loope
test
lods
mov
mov
call
cmp
xchg
stc
lds
outsl
sbb
mov
pop
lock
and
sbb
ret
xchg
xchg
cltd
dec
cmpsb
mov
ljmp
clc
dec
mov
mov
xchg
fs
xchg
adc
jo
xchg
lods
cmp
inc
or
in
jmp
push
and
enter
cmpsl
jbe
mov
nop
fsubl
lds
in
push
clc
sub
mov
xor
sbb
ret
xor
aam
idivb
ret
ja
ja
mov
push
xchg
cwtl
mov
lods
daa
pop
fnstsw
movsl
mov
dec
push
mov
jne
call
xchg
or
mov
cmpsb
xor
push
fs
jmp
push
int
out
push
sarb
imul
mov
lcall
mov
in
mov
outsb
mov
stos
lahf
stos
hlt
and
dec
dec
jns
mov
cltd
or
jb
imul
push
outsb
xor
scas
movsl
mov
outsb
ljmp
mov
in
hlt
mov
ret
sub
mov
mov
outsl
lods
scas
scas
insl
jle
shl
mov
add
xchg
lods
xchg
cmc
in
or
xor
in
cmpsl
fcomp
mov
call
in
mov
sbb
fwait
jae
add
sub
lret
loope
leave
fwait
jne
push
dec
mov
je
mov
pop
sahf
shll
iret
mov
rorl
dec
sub
push
lahf
mov
mov
es
mov
sub
sub
lods
aad
inc
in
lcall
mov
sbb
mov
or
addr16
outsl
loopne
xchg
in
xor
xchg
ja
mov
out
pop
dec
adc
sbb
test
xchg
xor
dec
jnp
mov
add
sbb
outsl
loopne
mov
ret
push
scas
test
pop
sub
test
data16
cltd
iret
ss
mov
sti
jecxz
andb
scas
out
mov
mov
lahf
lods
in
pushf
repz
lods
lret
loope
jg
lods
adc
repnz
inc
jne
shrl
adc
xchg
xor
scas
mov
pop
mulb
int3
and
sbb
scas
jbe
add
sbb
mov
cmp
das
add
cltd
dec
sub
daa
fimuls
mov
inc
xor
add
sarl
std
arpl
mov
mov
add
mul
mov
push
popa
lods
mov
les
sub
push
cmpsb
lahf
cwtl
bound
subb
aas
test
ljmp
mov
and
ja
ret
mov
jbe
adc
jl
je
arpl
daa
out
lea
lahf
mov
movsb
mov
pushl
daa
xor
xchg
push
ret
das
fsubs
addr16
push
mov
lods
lods
stc
lea
ljmp
in
call
mov
and
or
sub
lods
lahf
fwait
mov
mov
enter
pop
outsb
les
mov
xchg
outsb
movsl
mov
rcrb
lds
enter
mov
or
lea
imul
sahf
mov
sub
mov
pop
cmp
mov
cmp
cmp
or
xchg
sub
adc
sub
mov
test
stos
sbbb
xchg
xchg
cmpsl
sbb
mov
aaa
xchg
outsb
leave
lods
loope
daa
pop
rorb
mov
add
mov
movsl
push
stc
insl
cld
mov
notb
push
movl
inc
lahf
mov
fsts
jae
jno
div
fwait
ja
mov
aaa
sbb
enter
mov
into
and
lret
mov
mov
push
mov
lret
lods
xchg
lock
rcrb
ret
ljmp
jecxz
or
lods
lret
mov
insl
pop
mov
sahf
xor
or
mov
xchg
or
mov
xchg
lods
cmpsb
inc
mov
jle
pop
outsb
mov
mov
clc
aad
jg
imul
sub
mov
lea
xchg
mov
mov
xchg
loope
in
cmp
loopne
in
mov
mov
fimuls
xchg
mov
xor
sub
fdivs
inc
daa
ret
mov
inc
leave
movb
mov
xchg
add
mov
xlat
mov
lods
ljmp
mov
xchg
inc
xchg
pop
subl
mov
lods
adc
mov
into
mov
ret
hlt
icebp
outsb
adc
pop
add
test
mov
lret
mov
jne
scas
repz
adc
xor
mov
and
scas
pop
dec
lods
adc
mov
dec
mov
dec
sbb
mov
sbb
cmpsl
mov
mov
adc
les
and
mov
mov
xchg
je
in
and
or
xor
jecxz
dec
mov
mov
mov
cmpsl
lea
testl
mov
sbb
cmp
pop
imull
and
mov
xor
xor
mov
dec
scas
mov
push
jo
xchg
aam
lahf
outsb
sub
mov
jno
pop
push
cmpsl
jns
push
hlt
lock
pusha
lret
mov
ror
in
daa
mov
into
lea
test
fldcw
mov
sub
jle
or
mov
lcall
mov
repz
fistl
mov
fwait
aam
jno
sub
test
lods
popf
or
into
sbb
stos
or
pop
push
rorl
mov
cmp
push
mov
sbb
cmp
outsb
mov
mov
xor
cmpsl
js
ret
out
pop
int
mov
call
shll
xchg
stos
jbe
mov
mov
pop
ljmp
lcall
in
ret
jae
jnp
mov
cmc
xor
jns
daa
filds
mov
pop
ret
xor
jmp
out
add
lahf
pushf
adc
mov
sub
and
pop
loope
mov
int
ret
push
mov
mov
sbb
movsl
sbb
mov
lret
cmp
outsb
and
mov
fisttpl
mov
mov
pushf
ret
sahf
or
movsl
or
rcll
jo
fsubrl
aas
lret
or
mov
frstor
cwtl
add
dec
jne
pop
adc
mov
sub
inc
jle
loop
mov
ret
xor
addl
scas
int
pop
lds
mov
mov
mov
test
test
mov
adc
std
shlb
lods
mov
pop
shrl
mov
pop
mov
pop
mov
lds
push
and
fimull
or
pop
add
lods
mov
pop
mov
insb
leave
sahf
mov
lahf
lds
nop
rolb
aad
mov
xchg
pop
scas
mov
insb
divb
lea
xchg
ljmp
mov
out
and
nop
sar
mov
lods
in
dec
scas
lds
imul
xchg
inc
movsl
stos
adc
sbb
xor
mov
pop
jge
in
xlat
scas
sbb
or
push
lods
int3
or
sub
outsb
in
scas
lea
pusha
in
xchg
dec
mull
mov
pushf
mov
xchg
repz
arpl
test
jecxz
sub
and
mov
jae
mov
ss
hlt
jge
dec
mov
lea
mov
cmp
jp
xor
insl
xchg
lods
pop
mov
adc
mov
mov
ret
inc
js
in
clc
jns
add
mov
test
data16
lods
ljmp
rol
mov
sbb
mov
xchg
sahf
mov
lods
pop
jno
lods
shrb
xchg
cmc
jo
xchg
mov
lods
icebp
js
ret
dec
inc
movsb
into
ss
fisubrl
dec
jecxz
push
push
loopne
das
dec
mov
lret
repnz
push
xchg
mov
jg
cmpsl
adc
loope
cltd
ret
lcall
xor
add
fwait
jecxz
pop
lods
fstl
rcll
cmc
nop
adc
mov
fwait
mov
rcrl
test
mov
fwait
pop
test
xor
sub
mov
outsb
mov
lcall
cmp
mov
insb
call
je
in
pop
mov
add
mov
mov
xchg
stos
mov
imul
xchg
insl
popf
xor
jge
mov
fwait
cmp
daa
or
mov
and
scas
sbb
add
mov
arpl
hlt
cs
mov
aaa
add
cmp
jecxz
stos
pop
dec
movsl
sub
adc
cmpsl
popa
fldl
xchg
jne
cli
fadd
or
nop
in
testb
lock
popf
mov
jns
push
lea
aam
scas
popf
outsb
mov
and
pop
xchg
icebp
cmp
add
xchg
mov
mov
lret
or
xchg
cmp
subl
xlat
sbb
push
mov
outsl
push
icebp
mov
insb
pop
rcll
mov
stos
inc
imul
fwait
mov
mov
nop
add
insl
and
cmpsl
inc
pop
scas
fstl
test
mov
fwait
rcrb
jg
movsl
lret
pop
lahf
inc
imul
sbb
jl
dec
loope
fsubr
lds
adc
mov
imul
aam
lods
imul
mov
jge
mov
ljmp
mov
aad
dec
lods
sbb
aas
xchg
dec
mov
leave
xor
mov
imul
lock
js
xchg
jbe
cs
adc
lea
das
mov
lahf
dec
fldl
rcll
and
inc
movsb
leave
jl
out
les
lret
outsb
repz
loope
mov
inc
out
mov
xchg
sbb
mov
push
dec
ret
in
xchg
outsb
int3
fwait
mov
xchg
adc
cmpsl
xchg
xchg
sub
call
leave
test
push
or
in
repz
hlt
lea
daa
call
outsb
push
cmpsl
dec
jle
and
mov
scas
adc
in
repnz
lcall
push
outsl
mov
mov
pop
push
les
dec
mov
jecxz
insl
mov
stc
mov
int
mov
xchg
loopne
cmp
mov
mov
mov
arpl
out
mov
lahf
aam
popl
mov
pop
outsb
stos
push
lea
fsubl
mov
insl
xorb
out
mov
pop
test
mov
mov
outsb
call
in
int3
jne
dec
lea
fisubrl
fmulp
rorl
mov
lods
cmpsl
fwait
enter
ret
outsl
jb
jle
scas
in
loopne
mov
scas
mov
hlt
fsts
enter
ljmp
mov
jne
mov
mov
sub
popf
push
mov
mov
adc
dec
push
nop
lahf
js
or
xchg
xor
sub
lods
mov
push
add
daa
jmp
or
jle
xchg
pop
loope
call
xchg
pop
in
jecxz
cmpsl
test
mov
mov
test
add
sahf
xchg
jmp
outsb
out
xchg
jmp
mov
jl
rol
or
lods
sbb
sub
fadds
sub
ret
dec
out
and
lods
lods
mov
cmp
mov
lea
in
movsl
ds
mov
nop
or
stos
cmpsb
call
mov
xchg
outsb
mov
cmp
aaa
fldl
arpl
xchg
cmp
in
adc
xchg
test
push
cmp
xchg
ret
out
pop
loop
xchg
hlt
sbb
xchg
mov
sahf
cwtl
lds
fucomp
enter
stos
sahf
fdivs
xchg
jno
js
clc
mov
testb
iret
mov
adc
mov
pop
adc
mov
push
pushf
ret
lahf
jmp
cmpb
faddp
cmpsl
xchg
ljmp
or
imul
jae
jle
setp
cs
and
xchg
imulb
ret
xor
sbb
scas
pop
inc
fcmovne
push
mov
scas
lods
js
leave
mov
in
adcb
ljmp
in
xchg
mov
dec
movsb
xchg
mov
pop
outsl
nop
mov
jmp
jae
mov
push
push
stc
in
shll
adc
in
in
mov
fildll
les
add
xchg
fidivs
ret
sub
inc
mov
ljmp
xor
aas
xor
mov
popl
mov
fwait
or
imul
dec
in
das
jmp
dec
adc
mov
lds
and
shrb
sbb
mov
insb
ret
xor
pop
xchg
pop
in
loope
jb
lods
std
mov
cmpsl
lret
aaa
lods
out
xor
popf
fmuls
add
and
lods
std
cs
mov
mov
sarl
shlb
scas
in
push
inc
xchg
lret
lea
mov
into
inc
mov
mov
cltd
lods
sbb
cmp
add
jae
sarl
repnz
pop
jno
xor
lret
cmpsl
xor
std
inc
mov
test
jb
xchg
cs
ljmp
mov
aaa
movsb
stos
jno
xchg
mov
cmp
movb
dec
scas
cltd
xor
pop
sbb
adc
lods
mov
dec
cmp
or
mov
in
ret
sub
mov
mov
imul
or
lcall
stos
mov
sbb
mov
mov
ror
xchg
mov
or
and
popf
mov
pop
mov
adc
movsb
mov
mov
push
mov
mov
xchg
mov
xchg
jns
pop
push
in
sarb
pushf
cmp
aas
leave
movsb
pop
xchg
inc
mov
push
add
cld
scas
or
into
popf
lods
mov
push
push
mov
mov
test
xchg
inc
ja
mov
subb
and
lahf
test
sbb
mov
lea
popf
sti
and
scas
rcrb
xchg
jbe
cmp
xchg
jb
mov
dec
iret
scas
insb
mov
jbe
fidivs
cs
mov
aam
rcll
mov
nop
stos
or
scas
inc
nop
mov
mov
mov
scas
xchg
popa
sub
ret
sub
push
inc
call
mov
aad
xor
add
cmp
lods
iret
stos
in
cld
loopne
sub
fldl
dec
lahf
mov
add
push
test
jp
mov
mov
hlt
mov
push
xor
stos
cmpsl
push
lea
dec
out
in
arpl
mov
dec
fisubs
xor
pop
lods
xchg
inc
ret
mov
push
jle
sub
or
xchg
jecxz
in
pop
imul
dec
test
loope
lock
add
mov
popa
pop
test
aad
cwtl
or
mov
xor
cmp
mov
jle
xchg
mov
hlt
loopne
mov
mov
andb
movsl
jo
int3
nop
jge
cwtl
lret
sbb
jmp
iret
ret
outsb
rcrl
ret
mov
cmp
dec
rcl
mov
push
adc
sarb
cmp
mov
aaa
movsb
inc
mov
aad
fistpll
aas
mov
fdivr
push
jbe
xor
scas
sarb
cmpsl
dec
rcr
cwtl
hlt
testl
test
inc
mov
xor
sti
mov
ret
repz
xlat
lea
mov
movb
or
add
sub
xchg
call
subl
mov
adc
hlt
inc
dec
arpl
jge
lods
xor
ret
shll
inc
ret
dec
mov
insb
shll
inc
xchg
scas
jle
ss
pop
lcall
test
lret
cmpsl
outsb
into
frstor
shlb
push
imul
cs
push
mov
jle
pop
lods
lea
inc
or
mov
popf
popf
nop
mov
adc
lods
mov
nop
sahf
mov
xchg
sub
stos
inc
ds
sbb
add
push
jo
or
mov
jmp
push
xchg
ja
sahf
xchg
cmpsl
lret
push
mov
mov
mov
sahf
xor
mov
add
cmp
fldcw
and
sub
mov
mov
repnz
clc
xor
xor
mov
ret
out
push
scas
lahf
int
sub
mov
sarb
push
sub
mov
ret
insl
fisubrs
dec
aas
repz
in
adc
iret
mov
xchg
jns
imul
ret
jne
pop
cmp
les
dec
cmp
inc
ret
stos
mov
imul
mov
outsb
bnd
jae
mov
xor
outsb
lods
mov
movsl
mov
jo
fisttpll
mov
mov
cli
std
xchg
sbb
test
add
scas
outsl
add
push
dec
das
movsl
mov
pop
hlt
outsl
ret
imull
xlat
xchg
cmp
xor
and
sub
test
pop
loopne
mov
xchg
fsubrp
test
mov
sbb
out
adc
inc
aam
cmp
jle
shlb
cltd
lods
jae
mov
and
mov
inc
dec
insl
mov
mov
sbb
mov
pushf
mov
jb
out
mov
ret
xchg
out
scas
lods
jmp
fistpl
xchg
jecxz
gs
xchg
in
imul
popa
cmpsb
in
enter
arpl
mov
in
arpl
mov
cmpsb
xor
sarb
jp
leave
mov
or
clc
addr16
scas
fbstp
lahf
and
inc
sbb
xchg
test
scas
int
dec
sub
packssdw
lods
or
sub
dec
lods
dec
fstps
cmp
lods
jbe
movsb
outsl
mov
push
pop
pushf
pop
stos
ret
dec
mov
push
adc
std
mov
sub
sbb
xchg
pop
lock
lods
lcall
jecxz
mov
pop
outsl
mov
popf
jb
sbb
insb
mov
mov
mov
mov
leave
into
lret
ds
cmp
mov
pop
sahf
out
scas
push
lods
jmp
shlb
call
popf
add
mov
mov
xchg
mov
lds
xchg
nop
dec
in
popf
sub
sub
sbb
popa
mov
stc
or
xacquire
jmp
mov
je
in
pop
mov
mov
cmc
xchg
jmp
or
and
out
stos
mov
jae
xchg
mov
mov
test
mov
in
xor
push
test
push
mov
jne
arpl
ljmp
out
leave
fwait
jne
dec
loope
push
insl
mov
mov
test
fs
jge
in
fsubrl
stos
stos
jnp
imul
or
insb
ret
sub
mov
out
and
inc
mov
mov
inc
mov
jmp
mov
in
aas
ret
xchg
imul
xchg
jg
aaa
bsf
stos
mov
lret
adcl
lret
jns
mov
cmc
jecxz
mov
mov
ja
iret
adc
xchg
mov
push
push
pop
mov
jl
fcomi
jo
xchg
push
icebp
scas
push
adc
mov
repnz
sbb
mov
cs
jmp
jmp
mov
lahf
movsl
iret
cmpsl
out
scas
int
push
mov
xchg
outsb
shlb
nop
lods
out
arpl
mov
imul
ja
scas
mov
xor
mov
lods
fcmovbe
pop
push
add
push
push
movsl
dec
mov
xchg
movsl
jecxz
std
adc
xchg
jne
popf
gs
stc
sub
sub
mov
mov
inc
lods
je
shl
mov
mov
orl
sbb
mov
cmp
data16
ljmp
mov
das
mov
xchg
jne
add
pushf
cmp
in
dec
enter
mov
fcmovnb
cmpsb
mov
rorb
jno
sub
lods
in
or
xchg
xchg
ror
ret
clc
pop
xchg
daa
pop
sub
lods
jg
mov
adc
popa
xchg
mov
mov
jecxz
in
dec
xchg
lods
mov
mov
mov
inc
lods
mov
adc
sub
dec
jl
mov
jmp
xchg
sub
cltd
xchg
sub
hlt
mov
inc
ret
lahf
mov
push
dec
lods
ret
mov
jns
test
fucomi
lahf
or
xchg
ljmp
mov
push
dec
mov
cltd
rol
add
jne
mov
mov
xor
sub
nop
cmp
mov
mov
pop
ret
mov
mov
jb
mov
out
jns
out
and
mov
insb
inc
pop
movsb
push
ret
cmp
pop
stos
rolb
lahf
mov
ret
loopne
out
mov
lcallw
adc
push
xchg
xchg
lods
mov
hlt
fdivrl
rcr
ret
dec
ja
ret
jo
std
pushf
mov
ljmp
repnz
ja
leave
mov
testl
adc
jae
clc
out
jnp
add
mov
popf
mov
hlt
push
lahf
cmp
outsb
add
repz
pushf
inc
xchg
divb
rorb
and
mov
add
movsl
jl
andb
mov
cmp
add
jne
xchg
xchg
iret
icebp
sbb
xor
ret
daa
outsb
or
adc
std
mov
push
ret
sub
mov
lods
mov
sahf
mov
sbb
in
mov
stos
lds
mov
xchg
popf
xchg
inc
mov
dec
mov
dec
imull
popa
and
icebp
inc
dec
popf
xchg
mov
std
mov
mov
mov
xchg
stos
cmp
or
mov
out
push
fwait
mov
push
mov
rol
xchg
js
lret
mov
daa
fidivl
mov
ja
xorb
add
inc
xchg
pushf
sbb
push
fwait
test
shlb
mov
sub
mov
out
lea
icebp
mov
test
jae
sbb
mov
jno
dec
int
bound
insb
jb
outsb
or
movsb
xor
lahf
mov
mov
test
xor
stos
add
nop
xchg
lods
int
lahf
mov
out
jae
and
rclb
mov
int
mov
loope
adc
movsl
ret
mov
add
pop
jecxz
imul
xchg
mov
mov
pop
lods
xor
push
lret
mov
push
movsl
xchg
cmp
flds
shlb
cmc
dec
lea
cld
push
jae
push
cmpxchg
cmpsl
mov
lods
repnz
xchg
pop
stos
jmp
pop
fsubl
adc
jmp
enter
inc
inc
mov
outsl
xchg
xchg
pop
cmpsl
push
lods
cmp
cld
dec
mov
lods
push
or
xorl
push
imul
or
outsb
pop
sahf
cmp
out
mov
popa
sub
outsb
mov
jno
inc
xor
dec
mov
stc
lods
add
lds
rcll
cmp
or
ja,pn
mov
mov
push
popf
mov
mov
or
stos
in
mov
xchg
mov
stos
ret
lret
add
and
push
inc
mov
test
xor
cmpsb
push
mov
divl
lret
sub
into
or
mov
cltd
mov
scas
lea
mov
dec
dec
or
xlat
mov
test
jbe
jge
push
pop
les
lret
xchg
inc
mov
xor
mov
movsb
imul
cld
test
cmpsb
fstpl
ja
jbe
xchg
cmpsl
pushf
cmp
in
mov
or
outsb
psubq
xor
cwtl
ret
cld
sub
cltd
daa
outsb
xchg
dec
fsts
mov
cs
lcall
out
cmc
ljmp
lods
mov
inc
mov
ret
xor
cmp
mov
mov
jp
mov
les
outsb
mov
jb
adc
jle
mov
xchg
fstpt
mov
xchg
push
cltd
add
mov
imul
cs
popf
pop
stos
mov
mov
cmpsl
shrb
inc
mov
stc
fisubrl
inc
push
out
lods
nop
mov
shlb
cld
jl
sub
les
pop
lret
pusha
lods
mov
call
pushf
imul
push
fucomip
sahf
mov
fnstsw
lea
das
push
mov
sti
sti
pushf
jns
and
popf
arpl
ror
out
enter
std
adc
dec
sbbl
inc
adc
pop
lcall
ret
andb
mov
push
adc
cwtl
xchg
ret
out
mov
mov
popf
fwait
mov
sbb
or
lods
xchg
imul
popf
les
cmc
ret
in
hlt
jle
test
cmp
loop
nop
repz
mov
lea
and
daa
lcall
cpuid
dec
jge
fmulp
pop
movsl
test
andl
out
add
sar
ret
lods
mov
sbb
mov
cmpsl
mov
enter
push
jns
sahf
cs
ficomps
or
movsb
add
in
scas
ds
in
xchg
sub
mov
xchg
sub
lcall
xchg
rclb
xor
mov
sti
adc
add
outsl
in
aas
dec
mov
inc
or
inc
nop
push
mov
xchg
cltd
das
mov
outsl
inc
and
cmp
aaa
outsl
shrl
test
xchg
outsl
mov
jns
mov
test
cmpps
inc
scas
push
fcmovnb
jmp
xchg
mov
or
mov
lods
or
je
push
js
sub
and
mov
mov
xchg
push
jbe
mov
ret
div
in
add
mov
lahf
cmpsl
leave
stos
xor
push
mov
mov
in
inc
outsb
xchg
xor
stos
mov
leave
stos
loop
xchg
cli
ret
outsl
sti
std
pushf
mov
dec
mov
imul
add
xchg
push
mov
mov
mov
push
mov
in
mov
inc
xchg
mov
jle
cltd
adc
add
insb
movsl
push
mov
mov
mov
sbb
jo
rorl
mov
scas
test
xchg
ds
in
push
mov
xchg
test
add
sub
imul
pushf
ret
mov
jno
xchg
cmc
xchg
pop
mov
mov
mov
mov
sub
mov
adc
mov
and
shlb
pop
push
mov
xchg
adc
ja
mov
outsl
mov
dec
pop
mov
mov
adc
mov
loopne
mov
test
push
add
cwtl
xchg
scas
mov
repz
xlat
ret
lds
lcall
inc
xor
inc
ja
xchg
xchg
xlat
mov
pushf
pop
movsl
ret
mov
mov
lcall
fcmovnb
imul
xchg
jge
sub
xchg
mov
out
mov
xchg
ljmp
shrl
inc
xlat
sahf
cs
cmpsb
add
mov
mov
std
cwtl
sub
imul
stc
nop
in
adc
lods
cli
pop
rcrl
xor
enter
mov
hlt
icebp
lock
pop
loopne
mov
mov
and
mov
je
iret
inc
repnz
or
or
cmp
loopne
mov
lods
movsb
pop
mov
aam
mov
inc
jmp
pusha
inc
ret
mov
outsb
std
or
roll
cmpsl
frstor
dec
cmp
dec
xchg
xchg
lret
pusha
lds
repnz
xchg
xor
enter
cmp
dec
scas
sub
stos
jne
cmp
mov
mov
mov
cmp
in
mov
ja
popa
stc
xchg
pushf
outsl
inc
adc
mov
ret
loope
test
mov
mov
stos
sub
lahf
test
mov
jne
mov
sbb
cmp
or
adc
mov
cmp
or
inc
xchg
jmp
cmpsl
shll
mov
call
mov
les
popf
in
mov
aam
cmp
insb
outsl
xchg
mov
ret
scas
sbb
out
xor
xchg
xchg
call
pandn
mov
roll
pop
lcall
pop
sub
or
or
jmp
jbe
aas
inc
xchg
insl
jecxz
sbb
in
push
into
adcb
mov
pop
test
inc
sub
xor
jae
call
mov
adcl
jmp
ret
in
and
leave
dec
push
mov
or
rol
popf
jne
lods
jge
xchg
in
push
shlb
mov
aad
mov
imul
cld
ret
daa
out
mov
or
repnz
shrb
and
daa
sub
lds
icebp
lret
sti
xchg
mov
sub
jnp
cltd
pushf
cmp
repnz
fucomp
lahf
aam
lea
pop
scas
negb
call
popf
and
test
and
xor
imulb
or
rcr
hlt
imul
inc
jg
ret
hlt
dec
inc
ret
fmuls
lea
mov
pushf
push
xor
xchg
sti
push
mov
sbb
mulb
andb
out
xor
fidivl
leave
outsb
push
mov
push
lea
mov
jmp
icebp
inc
push
xorl
pop
popf
mov
lds
mov
cwtl
mov
lret
mov
xchg
ljmp
mov
adc
mov
inc
mov
sub
mov
repnz
in
aas
push
mov
push
jg
fadds
push
out
stos
cwtl
hlt
call
in
rcll
push
test
stos
xor
pop
xchg
cs
xchg
outsb
xchg
lods
lock
lods
repnz
xchg
inc
mov
xchg
mov
mov
ljmp
add
mov
cmpsl
loopne
and
mov
in
nop
mov
inc
or
xchg
mov
mov
mov
mov
push
add
insl
sbb
call
add
jg
jbe
fcoms
movsb
jmp
adc
mov
mov
add
sub
ljmp
pop
stos
xchg
xor
fwait
or
mov
sahf
dec
mov
mov
jmp
or
shll
mov
mov
clc
add
lea
in
out
lods
scas
inc
enter
add
sub
mov
mov
call
inc
add
ret
xchg
pop
sahf
mov
or
sbb
xor
ret
lods
xchg
outsl
jne
lahf
fwait
push
sub
fldl
cmpsb
negl
ret
negl
or
push
and
mov
mov
xchg
pop
and
dec
enter
push
cmc
lds
leave
subl
lock
sbb
fcomps
sbb
dec
xchg
mov
rorb
mov
hlt
out
jns
mov
mov
popa
mov
out
cwtl
test
xchg
repz
ja
xchg
push
lea
ror
and
test
xor
xchg
add
stos
hlt
cmpsl
mov
fwait
jne
fldl
in
mov
aad
fcompl
les
sbb
mov
mov
in
je
cld
lods
mov
fwait
lods
push
fwait
shll
out
inc
scas
push
ret
mov
icebp
frstor
xor
shll
movsl
enter
into
mov
xor
fwait
push
imul
orb
mov
mov
mov
add
movsl
repz
lcall
inc
cmpsb
popf
std
mov
pop
jmp
or
pushf
out
mov
push
mov
test
sahf
xor
test
or
shll
pushf
pop
mov
xchg
mov
jne
jmp
xor
mov
ret
inc
adc
in
xchg
aas
call
das
xchg
loop
movsb
in
push
mov
in
in
mov
in
int
fs
rcr
stos
insl
repnz
scas
sbbl
mov
push
lods
cs
sahf
pop
stos
int
cltd
mov
mov
pop
mov
mov
pop
and
and
fimull
inc
cmp
xchg
ss
mov
mov
xchg
cmp
inc
lcall
mov
daa
test
adc
lea
mov
das
mov
adc
test
mov
std
cmpsl
jecxz
sub
jge
ret
in
or
movsb
xchg
sub
daa
ret
jmp
push
lret
ret
push
mov
lret
sbb
ja
jbe
xchg
in
mov
pop
mov
lea
fwait
in
mov
pushl
in
push
out
or
add
scas
inc
pop
xchg
jmp
cmc
xchg
xor
and
daa
cmpsl
fucomip
mov
push
inc
scas
push
xchg
mov
mov
or
mov
pop
xchg
sub
fcompl
sbb
inc
mov
and
mov
lea
mov
fisttpl
test
adc
xor
mov
inc
test
adcl
shll
inc
xchg
jge
mov
movsl
stos
jp
and
rcr
cwtl
std
in
jb
lods
sub
fwait
shll
aaa
inc
mov
push
rclb
xchg
pop
cs
mov
insl
popa
enter
stos
hlt
sub
fwait
jecxz
jb
shl
test
mov
popf
mov
jmp
loopne
mov
mov
out
int3
scas
mov
sub
adc
sub
xchg
repz
mov
mov
ret
jb
add
sarl
out
mov
mov
movsb
into
mov
cld
std
push
test
bound
jl
cmp
add
scas
je
mov
aam
jmp
rorl
stos
xchg
sub
add
in
xchg
add
or
jmp
push
in
mov
dec
call
movsl
fwait
mov
push
mov
movsb
add
adc
mov
movsb
pop
ss
jle
sub
orl
pop
mov
xor
mov
lods
cmp
daa
dec
dec
push
add
mov
fmull
and
xchg
ljmp
nop
mov
mov
mov
push
push
jle
lods
mov
mov
iret
xchg
mov
sbb
fcmovnb
xlat
mov
xor
xchg
and
roll
ss
mov
or
les
test
sub
push
cmp
jecxz
jnp
mov
ret
or
adc
daa
or
xor
xchg
rorb
pushf
call
sub
mov
outsb
mov
div
rorb
daa
push
ffree
mov
daa
out
sbb
jecxz
pusha
pop
ss
mov
mov
xchg
nop
cltd
adc
pop
outsb
ret
sub
in
jmp
mov
lock
stos
mov
and
lods
insb
jne
or
mov
stos
cmp
lahf
mov
nop
scas
fwait
sbb
adc
add
cltd
les
fistl
xchg
xor
fidivl
push
rorl
xor
cld
jbe
lds
neg
mov
lea
mov
popf
jl
movsb
jmp
xor
dec
mov
icebp
cltd
cmc
mov
insl
jb
sub
stos
fnstenv
xchg
jle
inc
mov
ret
stc
mov
gs
cs
fwait
jmp
mov
pop
hlt
xchg
mov
xchg
dec
cmpsb
movsb
sub
lods
add
mov
lea
lret
imul
lods
sub
pop
add
rcll
xchg
mov
das
sbb
xor
pop
in
movsl
mov
xor
daa
imul
into
lret
xor
fnsave
cli
mov
fldcw
loopne
je
int
mov
scas
test
mov
clc
enter
loop
xchg
insb
out
in
lock
pushf
add
repz
arpl
sahf
sahf
sub
cltd
cmpsl
push
sbb
ss
sbb
xchg
and
xchg
adc
popf
outsb
aad
sbb
xchg
xchg
cmc
scas
xchg
dec
leave
loope
mov
mov
mov
mov
cwtl
sti
fisttpll
mov
inc
scas
dec
xchg
jmp
add
mov
dec
dec
in
sub
xor
xchg
fidivl
ret
fnstenv
sti
pop
movsl
mov
inc
dec
fsts
imul
fnstenv
dec
stos
adc
push
shrl
cmpsl
nop
mov
sbb
mov
cmc
mov
lea
sbb
xor
stc
mov
mov
mov
test
sub
sahf
mov
sub
cwtl
fcmovu
mov
in
test
mov
je
jns
mov
mov
jmp
ljmp
imul
dec
xchg
xchg
nop
and
loopne
push
inc
bound
in
sarl
adc
jae
mov
arpl
pusha
sbb
mov
aaa
sti
rcll
mov
sbb
pop
rol
aas
stos
stos
inc
test
rol
das
clc
xchg
rcrb
fldenv
lea
adc
imul
push
dec
lcall
nop
inc
fstps
inc
cld
xchg
inc
rsm
lret
ret
cs
subb
into
stos
mov
mov
mov
fisubl
pop
xchg
adc
int
xlat
ret
push
and
mov
cmpl
xchg
daa
sar
int3
jmp
mov
fwait
mov
ret
lods
imul
daa
mov
imull
jl
ja
xchg
dec
stos
fucomip
andl
ret
sub
push
mov
decl
jo
in
mov
out
jne
fcoml
ret
xchg
les
loop
outsb
daa
mov
jp
std
in
adc
subl
aad
cmp
mov
mov
fld
sub
mov
les
paddsb
imul
in
sub
mov
xchg
adc
xchg
insl
rclb
mov
mov
aam
mov
mov
mov
gs
std
cmc
xor
mov
scas
stos
aad
lcall
mov
fimuls
or
cltd
in
or
xor
aas
les
movsb
loop
inc
leave
andl
ret
sub
jb
imul
sub
lods
or
mov
push
int
fsub
mov
in
push
add
mov
mov
mov
cmpsl
lret
xchg
out
out
inc
and
lods
mov
lods
jo
fisttpll
xchg
imul
mov
mov
xchg
test
dec
ret
repz
xchg
ror
bound
xchg
lods
xlat
daa
push
ret
lret
arpl
cmp
xchg
push
mov
ret
mov
loopne
cmpsl
adc
xchg
out
and
in
fistl
or
stos
in
inc
arpl
scas
mov
dec
mov
cmpsb
shl
xor
push
fcmove
cli
lods
mov
inc
push
test
lret
sub
jb
mov
out
leave
lahf
mov
xor
dec
xor
sbb
xor
mov
stos
jle
add
int
xchg
insl
mov
out
adc
out
sub
xor
std
mov
dec
mov
xchg
neg
mov
mov
sub
in
daa
lcall
mov
jl
lahf
in
cli
in
mov
cmpsl
out
outsb
lds
add
loope
jmp
add
notl
movl
mov
stos
sbbl
lcall
inc
fsubs
cmp
jle
sti
mov
pop
test
jg
mov
sub
inc
mov
lahf
jmp
js
setae
jge
mov
and
sub
jno
imulb
into
mov
test
mov
lahf
insl
mov
jae
cmp
mov
dec
roll
lods
fdivs
xchg
jmp
adc
lods
xchg
call
cmp
dec
scas
xor
xchg
dec
mov
cltd
dec
in
in
shrb
scas
jmp
repnz
or
push
add
mov
cltd
clc
cmpsl
sahf
mov
mov
mov
leave
in
mov
loop
in
pushf
mov
xchg
fisubrl
mov
mov
stos
ljmp
out
imul
pop
ret
dec
insl
lea
push
orl
scas
mov
lds
ret
stos
push
lahf
cmp
xor
fists
xor
jmp
shll
dec
and
fisubl
jmp
push
ret
insb
mov
aas
stos
mov
jmp
pop
lea
pop
mov
pop
adcb
dec
scas
dec
lods
jne
mov
mov
es
test
jecxz
sbb
mov
pushf
xchg
push
ret
scas
mov
or
mov
test
fwait
sub
mov
jge
sbb
negl
mov
jno
and
cmp
xchg
sbbb
lock
lahf
mov
lea
jne
fidivl
scas
orb
xor
scas
cwtl
xor
imul
in
test
mov
in
inc
lods
inc
or
xchg
mov
popf
repz
add
fsts
aad
lods
pop
dec
and
cld
mov
negb
sahf
push
mov
fildll
popf
inc
fistpl
sbb
or
cmpsl
mov
call
xchg
imul
adc
dec
stos
add
mov
mov
mov
xchg
test
push
fsubs
mov
jmp
mov
hlt
mov
dec
movsl
add
scas
mov
sub
jecxz
and
pushf
ret
mov
mov
xchg
loopne
ret
push
jne
xchg
mov
fnsave
push
lds
lock
stc
test
mov
ret
lock
outsb
sub
pop
jp
mov
xchg
cltd
cltd
jmp
leave
mov
pop
ret
mov
leave
rcrb
mov
cltd
xchg
test
sahf
mov
mov
stos
in
mov
mov
out
xchg
or
lea
sti
and
movsl
jae
xchg
vpmacssdd
lcall
jg
scas
loopne
push
popf
enter
mov
scas
ret
push
lds
divb
fistpl
pop
je
leave
xchg
mov
repz
insb
insb
aad
out
mov
rol
xchg
sub
pop
lods
add
ret
mov
jle
sahf
test
imul
cmp
pop
or
pop
xchg
in
sub
push
in
mov
popf
xchg
mov
or
cld
sbbb
dec
in
enter
lcall
mov
mov
lods
push
fnstcw
lds
and
dec
stos
movsb
std
mov
ret
xor
imul
mov
add
scas
imul
stos
ret
mov
mov
ja
aad
mov
push
sti
sub
in
testl
adc
cltd
mov
jmp
adc
jae
xchg
and
test
jno
mov
ret
sub
popf
mov
test
imul
or
cs
ret
in
outsl
xchg
scas
mov
jg
mov
ja
in
mov
lods
fildl
ret
jp
push
mov
iret
les
cmp
pop
js
xchg
mov
fistpl
mov
mov
sbb
xor
outsl
lods
xor
std
ret
push
imul
fisubrs
lds
sub
or
xor
ljmp
pop
iret
mov
mov
adc
rol
nop
in
int
mov
mov
cmp
mov
sarb
sub
popf
mov
test
ja
std
test
sbb
cwtl
mov
data16
xchg
nop
sbb
repz
mov
xabort
add
scas
out
mov
mov
mov
jmp
es
and
stos
sar
cmp
mov
lock
daa
xchg
inc
shrb
jnp
mov
scas
aad
push
push
sbb
cmp
push
push
jb
ret
xor
imul
add
stos
popf
mov
dec
cwtl
lods
popf
cli
outsb
inc
xorb
lret
in
pushf
jns
mov
out
pushl
aaa
jmp
test
test
cmp
cmpsb
daa
jg
cmpsl
inc
push
mov
movsb
push
test
data16
lahf
mov
stc
add
xchg
fwait
int3
ds
add
fisttpll
adc
rorl
jb
fsubr
xchg
stos
inc
mov
xchg
scas
fwait
add
adc
sbb
ret
sub
mov
mov
cltd
shl
leave
mov
in
xchg
ret
out
mov
push
xchg
jno
in
jae
lcall
mov
lcall
daa
scas
mov
sub
movsb
mov
and
fadd
dec
in
push
lods
insb
lea
fwait
lret
push
cmc
sbb
pushf
sti
jbe
mov
fdivs
xchg
sub
scas
inc
push
fnstcw
ret
out
pop
mov
lock
mov
cli
iret
mov
out
pop
mov
inc
insl
mov
cmp
add
or
mov
call
hlt
stc
inc
push
cmpsb
popa
lds
lds
insl
push
std
xchg
mov
dec
sahf
xchg
mov
cmp
xor
adc
mov
test
in
push
orl
jne
lcall
pop
dec
dec
scas
mov
mov
mov
xor
ja
lea
or
shlb
dec
cmpsl
mov
loop
sahf
sub
ret
xchg
fdivrs
movsb
jmp
push
repz
xor
in
cmp
xchg
fcmovu
mov
push
push
xor
pop
pop
push
pop
das
or
sarb
mov
push
mov
pop
jne
mov
xor
imul
push
cli
enter
fs
dec
repz
push
mov
mov
addr16
repz
jae
mov
shll
mov
add
and
notl
or
fwait
jae
mov
dec
mov
jne
stos
int3
out
dec
push
in
pop
in
cmpsl
mov
adc
test
jne
scas
pushf
xor
cmpsl
ja
fimull
mov
xchg
sub
xchg
scas
inc
mov
outsb
jg
scas
stos
pop
cmp
ret
stos
cmp
int
daa
mov
rorb
imul
ja
cmpsl
outsb
inc
mov
sbb
mov
clc
inc
popf
cld
mov
mov
adc
sub
fidivrl
fistpl
mov
push
xchg
test
cmpsl
mov
loopne
mov
sahf
outsb
icebp
loop
mov
mov
push
cmp
xchg
mov
mov
out
fisubrs
mov
xchg
jb
mov
lret
scas
mov
jbe
movsb
in
sbb
sahf
mov
movsl
push
scas
in
lods
add
adc
jns
mov
mov
xchg
mov
imul
nop
mov
cltd
xchg
mov
cltd
jle
mov
hlt
out
sbb
fcmovnb
mov
mov
cmpsw
mov
rorl
mov
push
push
push
mov
ret
inc
sub
mov
or
lods
push
dec
test
jl
sub
ffree
stos
mov
xor
xor
rcll
xchg
loop
mov
cltd
or
sarl
xor
xor
sbb
mov
leave
int3
jae
pop
xchg
scas
insb
mov
aas
cld
xchg
scas
out
lea
in
mov
arpl
or
scas
lds
sub
dec
push
div
xchg
in
int3
out
lea
lahf
sti
pushl
adc
jle
mov
lret
inc
inc
mov
movsb
test
pop
cltd
jg
std
sub
mov
dec
mov
ja
nop
dec
movsb
sbb
xor
mov
pushf
jne
repnz
mov
mov
int
imul
jno
andl
xor
scas
and
cmpsl
mov
je
xchg
lods
daa
sbb
outsb
lret
aam
in
in
mov
mov
mov
dec
xchg
adc
int3
rcrl
mulb
sub
xor
dec
call
test
mov
pop
stos
gs
xchg
cmpsb
in
sub
lds
mov
stos
ficoml
mov
push
jae
pop
mov
xchg
xchg
pushf
int3
inc
mov
push
mov
rcll
mov
xor
mov
jle
fistpl
dec
mov
scas
jp
mov
cmp
fmull
mov
mov
xchg
xchg
inc
mov
aam
mov
stos
lods
push
rcll
rcll
lret
xchg
insb
ds
cwtl
cmp
dec
cli
sub
popa
in
ret
fadds
popa
cltd
shll
pop
push
xchg
fildl
ret
popa
imul
xor
xor
pop
push
ret
out
jg
in
iret
ret
xlat
xchg
or
outsl
xor
int
fistpll
sub
enter
rolb
add
iret
jmp
aas
and
repnz
js
cmpsl
movsb
rcll
int3
adc
repz
mov
lock
mov
mov
int
mov
mov
inc
xchg
xor
mov
scas
jne
pushf
fwait
outsb
pop
sbb
adc
jecxz
cmc
in
mov
xor
scas
mov
jne
pop
repz
ror
cmpsl
lahf
pushf
jb
imul
push
dec
mov
ret
mov
test
dec
add
and
mov
lret
xor
inc
les
mov
sub
pop
outsb
mov
push
xchg
cmpsb
dec
push
lea
mov
lret
out
daa
in
mov
call
ret
mov
nop
mov
ret
out
add
fwait
xor
mov
stc
lahf
cmpsl
data16
mov
ja
popf
fisttpll
shll
es
add
lcall
cltd
insb
test
lret
outsb
push
xor
out
mov
fs
push
jp
leave
xchg
shrl
ret
mov
imul
xchg
sahf
out
jle
pop
loop
in
shlb
cmpsb
dec
sbb
int
in
xchg
xlat
cltd
cmp
xchg
xor
dec
sub
ja
lods
scas
daa
mov
xor
inc
sub
js
add
in
aam
lds
imul
dec
jmp
inc
mov
xchg
hlt
mov
pop
xor
nop
loop
fs
jmp
dec
lea
xchg
lds
orl
ret
push
lret
push
sbbb
mov
clc
mov
out
jl
outsl
mov
mov
pop
dec
mov
mov
mov
pop
xor
sub
xorb
loopne
jb
add
enter
call
jae
enter
popf
vaddsd
loopne
pushf
xchg
xchg
imulb
fisttpl
mull
pop
add
adc
xchg
pushf
nop
inc
ds
loop
sbb
xchg
jmp
mov
pop
fnsave
in
push
adc
cmp
sub
xor
and
mov
fsts
sub
xchg
dec
xchg
enter
nop
cmpsl
lods
mov
stos
cmp
xor
dec
mov
dec
mov
mov
inc
arpl
lcall
xchg
sub
data16
jo
add
dec
xchg
mov
ret
mov
lods
mov
lahf
mov
mov
daa
xor
mov
fcmovnu
sahf
dec
outsb
insl
jl
mov
pop
xchg
sahf
xor
fcomps
mov
mov
xchg
sbb
mov
sub
push
inc
fistl
scas
lea
leave
cltd
repnz
test
mov
mov
mov
fcoml
popf
push
sti
mov
mov
mov
stos
mov
sub
nop
les
push
xchg
add
rclb
mov
pop
mov
or
cs
push
mov
les
imul
icebp
les
lahf
xchg
push
mov
dec
jnp
mov
xor
dec
popf
outsl
mov
and
ret
sub
dec
stos
cltd
jo
dec
ret
pop
frstor
mov
cmpsl
mov
inc
inc
mov
cmc
xchg
mov
jno
test
rorb
stos
jmp
and
mov
mov
fs
out
adcb
mov
cmpsl
jb
daa
out
icebp
lcall
and
cmpsb
dec
cltd
mov
jns
xor
mov
xchg
mov
mov
inc
cwtl
mov
or
cmpsl
sbb
ror
cmp
test
push
jb
inc
loope
in
xchg
icebp
xlat
jnp
push
xchg
or
pop
cltd
inc
das
cs
jnp
repz
xor
negl
sahf
mov
sub
mov
into
lret
jbe
daa
pop
dec
mov
mov
and
jecxz
aam
push
fwait
insl
push
xlat
mov
sub
pop
push
ret
scas
sahf
jnp
test
and
fwait
push
jmp
iret
lea
adc
sub
fwait
jle
adc
ret
xor
push
xor
jmp
scas
mov
mov
idivl
arpl
ljmp
adc
mov
out
test
and
sahf
inc
mov
mov
cmp
int3
in
xchg
ret
lods
test
xchg
std
mov
mov
mov
cmp
jne
scas
fsubrs
pop
sbb
jecxz
jo,pn
insb
arpl
in
fs
jmp
mov
sub
pop
mov
jmp
mov
pop
scas
outsl
mov
xlat
hlt
clc
sub
xchg
jo
dec
xchg
je
add
fdivl
ret
out
mov
xchg
xchg
pushf
repz
fisttpl
icebp
cmp
mov
xor
and
mov
jecxz
test
hlt
mulb
xor
xchg
sbb
dec
xchg
xorl
mov
dec
ret
jmp
or
sahf
or
shll
mov
fwait
lret
mov
test
pop
scas
mov
sbb
mov
popf
pushf
xchg
or
mov
mov
insl
xor
push
cld
mov
xor
lods
fwait
je
push
xchg
jge
jmp
cmp
lods
daa
pusha
aas
add
test
ret
jb
or
mov
jle
and
inc
nop
ret
jecxz
xchg
mov
mov
jmp
mov
fstpl
aaa
fwait
sarl
ja
dec
xchg
hlt
out
inc
dec
mov
cmp
mov
mov
lods
mov
ret
mov
sbb
ss
shll
mov
negb
mov
scas
xchg
in
jmp
jmp
out
sub
or
cmpsl
popa
add
ror
xchg
sarl
movsl
push
sahf
sti
mov
lret
into
mov
out
pop
scas
mov
jmp
mov
xchg
mov
outsb
pop
mov
jg
daa
or
scas
or
ja
xor
pop
js
xchg
dec
pushf
movsl
push
in
ret
xchg
lcall
jo
das
stc
and
ljmp
gs
in
notb
xchg
cmpsb
ds
insb
sti
std
mov
popa
mov
mov
xchg
lock
out
xchg
mov
jmp
stc
pushf
movsb
mov
push
jbe
mov
je
fiadds
dec
mov
dec
sub
mov
push
pop
lea
pop
pop
mov
out
in
in
insl
js
movsl
mov
rol
idivb
inc
mov
jno
fwait
cmp
xchg
pop
or
jmp
mov
std
jg
jecxz
or
rclb
rol
imul
ret
scas
add
and
sub
imul
insb
cmpsl
inc
in
mov
fptan
mov
jmp
test
mov
nop
ds
push
mov
icebp
or
mov
inc
jle
sahf
mov
sub
pop
cmp
inc
jnp
add
xchg
pop
loop
mov
insl
mov
mov
lcall
adcl
sahf
enter
test
fmull
jnp
xorb
inc
testl
enter
jge
daa
xor
mov
xor
mov
pushf
test
xor
arpl
fsubrs
repz
mov
push
mov
push
add
aas
mov
lret
bound
ret
repz
xchg
mov
mov
pop
in
and
push
loop
repnz
ret
lods
stos
pop
sahf
mov
jge
sub
dec
sub
mov
lahf
fwait
lret
jb
cli
ret
in
dec
inc
in
fdivp
mov
ds
xor
mov
out
rolb
mov
mov
out
daa
lds
mov
ret
jmp
xchg
mov
push
push
inc
mov
xchg
sub
xchg
cmp
add
mov
add
jno
mov
bound
adcl
cmp
or
cmp
ss
lea
mov
aaa
xor
mov
rorl
jmp
outsb
mov
xlat
dec
leave
xchg
mov
cmp
nop
aas
pop
cltd
and
jne
xor
inc
out
mov
jae
stos
cmp
int3
mov
inc
mov
aaa
xchg
xchg
cwtl
mov
scas
jecxz
jecxz
push
lods
mov
into
cltd
out
imul
jge
sbb
inc
mov
pushf
pop
xchg
jmp
mov
inc
lea
and
inc
ret
push
mov
test
mov
jmp
ret
imulb
ret
andb
xchg
mulb
xor
int
scas
rol
pop
in
andl
mov
fcmovnb
scas
pop
mov
out
fwait
and
cs
int
add
scas
pop
cmpsl
in
xchg
inc
and
mov
test
cmc
xchg
test
lods
cwtl
in
cmp
test
stos
in
fsubl
pop
mov
mov
xchg
pushf
mov
lods
enter
shlb
fcoms
xchg
jmp
and
xchg
cli
mov
leave
mov
stos
mov
aam
int3
les
in
push
push
mov
xor
xchg
insb
enter
ret
or
sub
cs
mov
scas
lds
sub
jle
dec
xchg
in
leave
xchg
xchg
aam
add
jge
or
test
pop
hlt
cmpb
jecxz
scas
fldt
mov
xchg
xchg
push
out
and
shrb
push
xlat
ret
xor
inc
shll
lcall
xchg
jo
xor
scas
mov
jge
mov
cmp
es
imul
sub
lea
adcl
daa
mov
outsb
sbb
mov
pop
push
arpl
mov
shrb
out
jmp
lcall
sahf
es
jb
std
popf
push
lods
test
mov
out
repnz
repz
test
jmp
push
arpl
xchg
jae
mov
iret
bnd
data16
mov
call
popf
mov
lea
int3
ss
scas
jl
popf
cmp
in
mov
sbb
inc
leave
lods
mov
mov
cmp
mov
mov
das
ljmp
lods
int3
jmp
call
inc
jns
mov
jae
mov
push
in
aaa
mov
mov
push
lods
mov
divl
xchg
or
lds
stc
jl
add
mov
popf
dec
daa
xor
outsl
mov
mov
pop
xlat
pop
cld
sub
inc
mov
rcrl
mov
push
and
loopne
mov
lahf
mov
mov
xchg
sub
int
test
lret
fnstsw
pushf
mov
aas
jo
int3
das
jmp
lea
cmc
in
movsl
movsb
fadds
mov
xchg
int
arpl
daa
daa
mov
dec
shr
ficomps
mov
lods
mov
inc
lea
daa
ret
ljmp
sbb
pop
xchg
mov
arpl
hlt
xor
push
cli
enter
inc
xchg
jnp
jmp
lods
hlt
lods
fldt
test
xchg
fisubs
mov
lcall
mov
adc
lret
sbb
inc
ret
push
leave
sbb
mov
mov
icebp
daa
arpl
xchg
mov
push
in
in
xchg
imul
pop
popf
xchg
mov
fstpl
ljmp
imul
idiv
stos
or
dec
lcall
mov
mov
push
adc
lods
mov
lds
addr16
and
cltd
mov
fmul
cmpsb
hlt
and
in
cltd
sbb
lods
fsubrs
fisttpll
inc
mov
sub
mov
dec
dec
jle
scas
pop
jl
mov
fwait
push
outsl
adc
fsubrl
fwait
or
mov
mov
adc
lds
push
enter
ret
mov
mov
xchg
pop
test
icebp
mov
ja
dec
lcall
mov
adc
fstl
mov
out
adc
adc
mov
leave
mov
mov
fmuls
ja
jmp
mov
jbe
mov
int
outsb
xchg
rol
mov
insl
xchg
lods
cmp
mov
push
addr16
mov
orl
add
lods
xchg
cs
aas
movsb
in
or
mov
xchg
sarb
in
cmp
int3
lea
ror
inc
mov
ja
xchg
lods
xchg
int
xchg
or
xor
xchg
je
xor
test
push
and
lahf
pop
push
mov
out
sbb
inc
mov
pop
push
ret
lock
mov
jbe
mov
or
mov
adc
rorb
pop
jecxz
imul
sahf
push
mov
fistl
rcrb
cwtl
adc
mov
scas
dec
jae
stos
inc
cmp
mov
mov
shl
pop
int3
les
lods
outsb
lods
push
popf
dec
sub
xor
mov
cmpsl
dec
ljmp
mov
xchg
adc
push
lahf
mov
or
mov
sbb
ret
lcall
stos
sub
test
call
lcall
or
and
dec
lcall
scas
in
mov
and
mov
das
mov
loop
imul
lret
pop
xchg
out
es
jo
mov
inc
cmpsl
ds
pusha
ljmp
out
push
xchg
xchg
popf
pop
sub
xchg
ss
add
sti
out
fists
xchg
enter
add
imul
jbe
rcll
xchg
imul
loope
sbb
xchg
fwait
push
pop
insl
xor
xor
mov
in
repz
je
add
add
push
cmc
mov
mov
fwait
mov
outsb
test
push
sbb
ffree
jmp
jne
outsb
out
sbb
int
inc
popf
sti
xchg
xor
iret
repnz
sti
pop
movsl
cmp
pushf
scas
mov
mov
sub
inc
jb
lahf
mov
xchg
cmp
in
insl
mov
lods
int3
ret
sub
insl
jns
mov
push
sbb
cmp
sub
or
lods
rcr
rorl
sbb
mov
rcrl
aad
adc
lods
lds
fisubrs
popa
stos
xor
sbb
add
out
or
push
cmpsl
mov
add
mov
sahf
pop
fs
inc
push
lahf
mov
xchg
cmpsb
mov
mov
add
mov
popf
sub
sbb
mov
push
jge
sub
push
mov
notb
mov
daa
xor
fists
dec
daa
inc
mov
sti
bnd
mov
push
nop
popf
mov
cltd
jmp
mov
adc
dec
enter
out
lea
stos
xchg
mov
dec
dec
shl
mul
scas
stos
and
cmpsl
xor
aaa
dec
outsb
sub
cmp
jne
lods
lahf
lods
pushf
mov
sub
pop
ret
out
enter
and
je
fcom
loope
mov
mov
jl
xor
in
addr16
jnp
xchg
sub
ss
bound
cmp
test
xchg
ja
call
sub
mov
jb
mov
ss
mov
fwait
mov
stos
dec
ret
xor
xchg
lahf
cmpsl
or
lods
lea
push
mov
imul
pop
push
dec
leave
cmpsl
sbb
lret
ret
jb
cmp
cltd
sub
push
cmp
mov
mov
mov
imul
xchg
xlat
stos
jb
cwtl
mov
push
inc
rorb
sub
inc
jo
cmp
mov
jge
mov
out
xchg
scas
sbb
mov
xchg
ret
pop
cmp
out
call
stos
jp
sub
lds
and
mov
lods
stos
cmp
mul
or
scas
xchg
cmpsl
push
fnsave
mov
imul
mov
mov
mov
dec
repz
out
test
inc
mov
mov
clc
mov
sbb
nop
pushf
xchg
mov
fucomip
test
and
in
sub
lea
in
sub
mov
inc
mov
in
xor
out
jge
mov
add
fucomi
xor
mov
lea
lods
imul
mov
mov
dec
js
sub
xor
mov
inc
sub
cmpsl
inc
mov
xorb
mov
mov
mov
adc
iret
std
mov
test
out
shrl
iret
in
mov
dec
xor
xchg
xchg
lret
into
outsl
lahf
cmp
test
pop
jmp
std
mov
popf
mov
daa
jno
test
fcoml
sti
cmpsb
push
arpl
mov
lds
rol
mov
les
mov
loope
xor
push
mov
and
mov
fwait
mov
call
inc
test
push
adc
mov
outsl
rcrb
stos
mov
in
mul
pop
xchg
outsb
in
sub
lods
mov
mov
mov
pop
dec
movsb
mov
aaa
mov
fildl
pop
mov
outsl
test
loop
daa
rcll
nop
mov
lea
mov
mov
mov
sub
sahf
test
and
lahf
xchg
ljmp
jne
pop
ds
out
sbb
mov
mov
ds
inc
add
add
xor
push
mov
sbb
icebp
push
fnstsw
inc
imul
mov
fstpt
scas
out
mov
jne
mov
add
and
je
mov
lret
sbb
sub
jb
rcl
lock
in
cmp
outsl
pop
pop
sub
shlb
or
cmpsl
mov
mov
mov
inc
mov
cmp
jne
jns
mov
push
inc
mov
xchg
sbb
aas
jns
mov
xor
loope
and
shll
push
mov
mov
out
sub
popf
pushf
mov
mov
jmp
xor
or
repnz
xchg
cltd
xchg
inc
movsl
sti
popf
enter
mov
xor
jo
fwait
nop
mov
mov
mov
iret
sub
ja
in
cmp
stos
mov
lea
jmp
stc
ret
push
xor
pop
test
dec
mov
inc
mov
adcl
hlt
mov
stos
adc
pop
int
cli
pop
inc
mov
das
mov
mov
insb
jp
fwait
cmpsb
pop
push
js
add
or
push
mov
loop
pop
add
push
mov
shll
sbb
je
scas
mov
dec
sub
ret
mov
mov
js
repnz
mov
lcall
cwtl
mov
xor
fnstcw
xchg
mov
sahf
cwtl
xchg
int3
jmp
jmp
movsl
pop
sub
sbbb
cwtl
cli
cmpl
je
add
cmp
leave
ja
iret
addr16
popf
mov
lcall
mov
jbe
and
mov
lret
mov
fsubrs
scas
xor
cwtl
lods
repnz
add
jl
and
rorb
movswl
out
in
cmpsl
mov
mov
repz
sub
mov
jmp
movd
lods
cltd
in
movsb
or
int3
popa
sub
popf
push
out
xchg
push
mov
lods
scas
aad
jg
mov
or
sub
sbb
xor
mov
or
cmp
sahf
fucomip
jb
movsl
mov
inc
insb
out
sahf
mov
mov
xor
fsubrp
sbb
repz
push
mov
jo
pushf
mov
mov
popf
and
sub
rol
jno
jnp
xchg
sub
push
jne
ror
sarl
ss
sahf
xchg
call
les
nop
sbb
nop
sar
cmovbe
mov
xor
stos
or
sub
mov
pusha
ret
pop
dec
mov
pushf
scas
adc
xor
mov
movsb
popa
hlt
ret
call
stos
or
and
push
dec
mov
sti
adc
sbb
mov
push
mov
pop
repnz
dec
push
lods
sahf
add
cmpsl
mov
inc
sub
popf
out
ja
xchg
pop
mov
mov
and
add
mov
inc
mov
xchg
imul
mov
ljmp
mov
movsb
jnp
mov
fwait
dec
aaa
xor
and
les
or
mov
jge
mov
ret
imul
ret
mov
rclb
adc
rorl
push
lods
mov
adc
mov
fstl
lods
jmp
xchg
sbb
xchg
outsl
daa
xor
lods
cmp
subb
or
jecxz
in
lea
in
ret
xor
dec
xchg
xchg
push
test
decb
mov
setge
fstpt
sub
mov
shrl
push
out
mov
push
ret
lods
cmpb
push
cmpsb
mov
mov
xor
mov
rclb
aam
mov
inc
out
pop
add
imull
jle
or
lret
fsubrp
xchg
je
pop
xchg
fwait
nop
add
iret
mov
xor
loop
repnz
xlat
popf
and
shl
popf
lods
lods
sub
insb
cmp
inc
or
mov
lea
mov
jmp
push
mov
in
and
nop
stos
push
lods
test
xchg
leave
jmp
mov
sarl
push
mov
xchg
outsl
or
dec
or
enter
mov
enter
adc
lods
in
test
or
out
mov
lods
mov
adc
shll
jp
ret
adc
mov
fisubl
imul
nop
mov
call
stos
pop
jnp
mov
popf
mov
pop
jne
ffreep
mov
dec
mov
push
mov
sbb
sub
add
mov
mov
xor
arpl
outsb
outsl
adcl
sub
repnz
mov
sbb
lods
xchg
mov
cmp
cmpsb
setae
loopne
xchg
shl
int3
aaa
mov
mov
inc
daa
mov
sbb
cmp
mov
cmpsl
pop
dec
cmp
sub
mov
loop
shrb
mov
adc
cli
push
movsb
mov
popf
test
xchg
fwait
pop
mov
mov
fwait
mov
add
xchg
mov
and
in
sbb
scas
cltd
jno
push
cld
mov
inc
mov
shrl
mov
mov
jnp
cltd
icebp
mov
adc
out
shll
mov
or
add
sarl
ret
addr16
jmp
lods
popf
mov
cmp
ja
mov
and
outsb
scas
jl
cmpsl
fwait
mov
out
jle
andb
add
lock
jle
mov
mov
test
test
or
mov
mov
push
data16
xchg
lret
lods
mov
mov
orl
xchg
test
mov
xchg
jne
and
pushf
push
mov
inc
xchg
xor
jmp
stc
and
mov
sahf
sbb
mov
popf
xchg
jge
test
cmp
push
pusha
xchg
mov
mov
cltd
sub
movsl
daa
xor
xor
inc
mov
scas
mov
mov
xchg
in
out
into
lds
es
movsb
mov
stc
cltd
daa
mov
lcall
mov
lahf
xchg
fmul
loop
outsb
mov
loope
pop
mov
jns
mov
mov
sbb
in
mov
fwait
mov
push
pop
je
pop
cs
xchg
mov
or
lret
mov
outsb
addr16
insb
pusha
sub
outsl
les
in
push
cmp
or
movsl
sbbl
mov
push
cwtl
stos
aaa
xchg
roll
pop
popf
pushf
mov
cmp
outsb
jnp
mov
fsts
xchg
cmpsl
out
test
scas
mov
mov
xor
fsubl
mov
jmp
mov
pushf
jns
imul
xchg
xor
jle
insb
jg
loope
add
jae
sahf
mov
mov
inc
in
mov
lods
ret
push
mov
lds
mov
sbb
lods
mov
rol
test
lret
inc
mov
cmp
sub
inc
mov
lods
xor
pusha
lahf
mov
mov
imul
sub
add
push
mov
outsb
cltd
jne
xchg
xchg
sarb
lock
xchg
mov
mov
mov
jle
mov
pop
enter
scas
adc
jge
mov
popa
popf
xchg
cmpsl
jmp
outsb
cli
mov
movsb
inc
stos
xchg
mov
std
mov
outsb
fldenv
dec
test
jo
stc
out
lea
cmc
mov
mov
pop
add
insl
movsb
sub
sub
div
mov
xchg
loope
lret
imul
mov
sub
jno
lcall
insl
jmp
nop
repnz
xchg
xchg
iret
jne
addr16
xchg
stos
add
in
mov
mov
mov
ds
jle
mov
push
enter
xchg
cld
mov
sub
outsb
add
mov
ffreep
sub
stos
lea
lds
mov
lahf
cmpsl
dec
inc
shrl
mov
test
lcall
jae
in
adc
mov
push
sbb
movsl
dec
mov
lock
lea
dec
mov
push
jg
sahf
mov
lods
mov
gs
mov
mov
push
std
roll
fwait
test
mov
push
jmp
jo
mov
inc
push
shrl
xchg
lret
xor
shrl
jae
mov
inc
add
sub
xchg
mov
stos
pop
std
enter
add
xchg
cltd
mov
lock
cmpsl
sub
mov
popf
das
xchg
lods
push
in
mov
fldcw
or
and
xor
lds
adc
or
test
mov
leave
in
xchg
repz
mov
clc
lcall
xchg
frstor
xchg
hlt
push
dec
mov
ret
inc
shr
mov
mov
mov
lds
and
movsl
mov
popf
shll
sub
pop
pushf
lahf
stos
add
aad
jmp
mov
adc
shr
push
mov
lods
mov
repz
addr16
inc
mov
mov
xchg
fdivr
mov
mov
xor
xor
movsb
push
in
jmp
mov
mov
jo
fnstenv
mov
aam
sub
iret
int
jmp
scas
mov
dec
adc
lods
mov
cmp
mov
mov
sbb
sarb
outsl
call
hlt
mov
daa
es
lods
mov
inc
sarl
mov
xor
mov
push
xchg
xchg
push
in
inc
outsb
nop
sbb
jae
push
xor
scas
call
pop
daa
and
add
mov
push
pop
sub
sahf
out
xchg
push
mov
push
scas
mov
in
mov
outsl
jbe
lcall
lret
mov
push
xor
push
sbb
insb
cmp
cwtl
lods
mov
jae
ss
insl
add
jl
iret
test
push
cmp
rcrb
outsb
jne
pushf
in
mov
mov
pop
int
test
mov
adcl
inc
int3
xor
out
dec
js
mov
jno
mov
xor
xchg
pushf
jecxz
mov
cmp
insb
sub
test
test
cmc
jb,pt
xchg
adc
pop
push
xchg
xor
cltd
in
ret
jmp
adc
inc
popf
lods
xchg
sbb
mov
fwait
or
loop
mov
fcmovb
mov
imul
notb
cltd
imul
cmp
scas
in
xor
mov
mov
andl
xchg
loop
call
test
xor
cmp
in
push
push
stos
sub
xchg
jle
sub
inc
lods
imul
cmpsl
dec
test
insb
lods
bound
movsb
xchg
or
lods
clc
inc
sub
add
xchg
mov
jnp
hlt
jl
jmp
sbb
enter
mov
jb
cwtl
sahf
fpatan
xor
fucomp
in
leave
push
xlat
leave
adcb
add
lea
icebp
mov
jne
enter
push
mov
mov
add
mov
mov
popf
dec
xchg
and
xchg
andb
stos
rcl
std
leave
sub
pop
lods
mov
aaa
inc
mov
nop
int3
insl
lock
cmp
xor
fnstsw
mov
xchg
in
testb
pusha
mov
std
fwait
pop
xchg
adc
mov
jle
mov
lods
sbb
cs
sub
fidivs
pusha
js
insb
stc
ret
cmpsl
dec
push
mov
mov
sbb
and
test
imull
orb
aad
inc
mov
jbe
push
jns
mov
fidivl
xchg
lds
lods
cli
push
inc
mov
movsl
dec
scas
sub
fwait
lret
pop
lcall
out
xchg
adc
cmp
mov
inc
mov
xchg
and
adc
sub
jno
cmp
sbb
xchg
in
cwtl
in
pop
enter
mov
xlat
xchg
sbb
daa
sub
and
hlt
scas
arpl
mov
rcrl
cmpsb
shl
cmpsl
imul
repnz
fidivs
imul
daa
insl
push
or
mov
outsb
ljmp
mov
in
mov
jo
scas
jae
icebp
imul
sub
add
push
mov
xor
movsb
mov
out
je
aas
adc
in
inc
jno
cli
mov
lea
stos
jg
ret
in
jge
pushf
mov
cmp
je
mov
cmpsb
push
icebp
jbe
dec
les
jg
je
jnp
push
ret
sub
into
mov
pop
jmp
cmp
push
ret
cmpsl
adc
inc
shrl
aaa
fsubs
mov
mov
jae
les
test
and
jmp
in
lods
mov
lods
mov
outsl
mov
jg
xchg
mov
lods
insb
sbb
daa
jl
imul
ret
sub
into
sub
dec
stc
insl
lahf
and
add
xchg
inc
push
jmp
mov
jae
outsb
lret
aam
mov
inc
mov
mov
sub
mov
mov
les
das
popl
outsb
lret
in
push
cmp
pop
sub
loopne
mov
lcall
ret
adcl
outsb
cld
decl
and
jne
mov
pop
xchg
xchg
xchg
repz
aam
lds
sub
mov
lcall
mov
clc
xchg
out
outsb
out
xor
in
mov
mov
inc
mov
mov
push
mov
xchg
mov
gs
mov
pop
pop
push
mov
loopne
pop
mov
outsb
icebp
push
xor
push
test
ret
imul
jmp
fcmovbe
in
repnz
lods
pusha
mov
add
cmp
popf
mov
daa
sub
lahf
xor
scas
mov
jge
shrb
cmc
scas
cmpb
sahf
jp
cmp
movb
mov
pop
outsb
nop
stos
repz
std
ret
in
inc
leave
sahf
decb
arpl
jne
mov
add
mov
mul
enter
sarb
xchg
ret
jb
dec
lds
aad
sahf
divb
les
stos
mov
lods
pop
mov
ret
out
or
lds
rcll
mov
cmc
jno
sub
mov
dec
mov
lods
xchg
xchg
mov
xchg
mov
pop
sub
cld
aas
push
sub
stos
and
nop
ret
ja
orb
sub
push
push
lret
mov
pop
int
insl
cs
xchg
mov
fwait
fldt
aas
xchg
mov
mov
out
and
imul
movsl
loopne
xchg
sub
push
mov
subb
leave
mov
ret
push
popf
sbb
cmp
mov
lods
fnstsw
or
js
jecxz
dec
cmpsb
mov
dec
mov
and
mov
lods
shrl
sahf
mov
inc
sti
xchg
xor
stos
cltd
mov
jne
cwtl
mov
inc
push
pop
in
test
and
paddsb
jae
jecxz
pop
scas
scas
repz
jle
in
jbe
scas
xchg
cmpsb
adc
mov
mov
xchg
and
mov
ret
pop
push
jle
sub
inc
xor
cmp
rclb
or
mov
leave
movsb
sbb
rcrb
popa
outsl
mov
inc
mov
aam
cmpsl
sti
sti
lods
add
mov
mov
mov
addr16
outsb
adc
fistpll
out
imul
clc
push
lret
jb
add
jmp
mov
bound
push
loopne
inc
les
jle
cmc
sbb
sub
cltd
sub
mov
insl
hlt
shll
sub
lret
in
adc
mov
xor
mov
sub
push
movsl
ret
jmp
jne
pop
pop
mov
mov
mov
popa
fdivrl
insl
mov
xchg
lods
sbb
les
outsb
enter
mov
test
lods
jecxz
mov
fbld
das
sbb
adc
loopne
fwait
dec
lods
sub
mov
mov
aad
out
leave
shlb
lds
ja
fsubrs
add
pushf
in
jp
data16
inc
mov
mov
sti
mov
out
and
js
cwtl
mov
sub
lcall
or
mov
out
fidivs
enter
lcall
xchg
dec
mov
mov
divb
sub
icebp
add
aam
clc
mov
jmp
fidivrs
dec
mov
mov
jmp
mov
mov
or
mov
scas
cmpsb
mov
or
fwait
dec
pusha
and
mov
pop
lods
mov
hlt
inc
lods
ss
add
shlb
lret
int3
mov
fwait
lea
daa
ds
push
outsb
sub
sahf
movsl
mov
insl
mov
in
push
jno
hlt
scas
test
mov
and
ret
push
mov
sbb
adc
stos
push
fldcw
xchg
mov
mov
ret
hlt
test
dec
outsl
adc
mov
daa
lock
sub
mov
push
xchg
rol
adcb
hlt
cmpsb
push
popf
mov
ljmp
stos
loopne
mov
mov
sbb
lds
mov
mov
outsb
popf
imul
mov
sub
arpl
lret
mov
jge
clc
or
mov
or
push
add
popf
add
lods
mov
mov
xchg
mov
repz
mov
test
out
sbb
xor
or
jecxz
xchg
icebp
ret
dec
divb
loope
dec
cmp
pushf
jnp
mov
stc
scas
xchg
rcll
mov
lret
jmp
add
mov
mov
cltd
repnz
in
xchg
lds
xor
adc
leave
lods
divb
out
jl
add
mov
pop
mov
popf
jne
add
or
mov
test
lea
xchg
pop
andl
fbld
aad
stos
in
popf
cmpsl
mov
gs
mov
dec
stos
dec
mov
fcmovbe
mov
push
mov
mov
scas
inc
mov
fmull
xor
outsl
pop
xor
xchg
imul
test
scas
outsl
mov
or
xchg
daa
sub
test
fstpt
xchg
lods
mov
mov
mov
cs
mov
in
mov
inc
cltd
mov
sti
xchg
mov
je
outsb
and
lods
jp
inc
inc
daa
ret
pushf
sub
shlb
cmp
lds
sub
sbb
lahf
mov
lret
ret
out
add
enter
cmp
xchg
mov
jecxz
jecxz
jl
mov
xlat
mov
mov
xchg
cltd
frstor
mov
sahf
mov
aas
mov
add
ss
push
xchg
in
jmp
cli
cld
lods
jae
scas
std
mov
mov
cmp
mov
punpckhwd
inc
fisubl
or
inc
lea
js
xor
jg
in
int3
mov
negb
mov
ja
fsubrl
out
mov
xchg
push
jb
cmp
test
xor
push
xchg
mov
lea
ret
sbb
mov
xchg
test
cmp
imul
push
test
xchg
and
loop
sub
dec
outsl
movsl
fwait
xor
jmp
jb
test
cmp
mov
lock
xchg
mov
and
rol
mov
stos
fsubrl
ret
adc
xor
jp
sub
dec
mov
cmc
and
push
and
negb
jmp
xchg
xor
in
shlb
push
jl
jns
fwait
or
fnstsw
mov
xchg
lds
add
or
mov
lods
xor
pusha
stos
test
in
mov
mov
outsb
push
push
nop
fwait
jb
xchg
stos
and
jo
cld
test
ret
mov
mov
dec
daa
jmp
sub
in
ret
push
iret
es
add
jb
mov
xchg
xchg
jp
adc
xrelease
pop
sbb
pushf
psllw
fwait
fwait
fwait
xchg
jbe
mov
sti
movsl
sub
jbe
ret
stos
rorl
xor
cmc
imul
mov
popf
pushf
xchg
sbb
xchg
mov
mov
adcb
cmp
lods
popf
loope
inc
mov
into
mov
inc
aas
fwait
push
mov
scas
cli
outsl
inc
fwait
movsl
dec
sub
xchg
xchg
daa
in
daa
mov
repz
pop
add
arpl
mov
dec
lods
mov
dec
xchg
pop
push
popa
mov
sti
fwait
jecxz
ficompl
mov
sub
test
inc
scas
pop
fnstcw
xchg
iret
call
imul
dec
add
nop
push
mov
mov
mov
mov
mov
mov
imul
in
inc
xchg
mov
pushf
xchg
push
imul
or
sahf
fcmovne
fldt
mov
bound
js
xor
scas
popf
vcmppd
inc
xchg
test
xor
mov
mov
std
scas
ret
mov
sub
mov
xchg
outsb
daa
mov
ret
xor
pop
mov
jp
sbb
loop
mov
mov
insl
clc
xchg
sarb
ljmp
xor
std
scas
mov
lods
out
mov
sbb
ret
sub
mov
sub
mov
in
daa
adc
jl
jl
adc
icebp
lds
cmc
jmp
xor
adc
sbb
xchg
jnp
mov
xchg
mov
popf
inc
or
outsb
mov
mov
mov
insl
pop
xchg
pushf
mov
enter
out
mov
or
test
mov
nop
dec
cmp
push
mov
sub
jno
in
mov
and
mov
inc
testb
mov
mov
jge
mov
jge
mov
lds
mov
xchg
scas
mov
mov
mov
jg
sbb
movsb
in
rcrl
cmp
mov
xor
movsl
xor
push
mov
mov
add
lods
rcll
xorl
xorl
mov
hlt
and
xchg
xor
sahf
push
fisttpl
mov
mov
test
lret
cwtl
leave
scas
sbb
incl
push
mov
sub
movsl
lea
push
mov
jnp
mov
xchg
jp
lds
jb
mov
test
dec
mov
cltd
mov
cmpsb
ret
sbb
xchg
pop
outsl
adc
lahf
dec
in
ss
inc
stos
addr16
mov
ss
out
mov
imul
scas
xor
shl
mov
push
sub
scas
je
addr16
ret
test
inc
lea
sub
rolb
lcall
outsb
jae
pop
test
or
stos
idivb
movsb
xor
mov
pop
pushf
int
cmp
sub
sub
es
mov
scas
xchg
adc
cmpsl
jae
sahf
push
popf
pop
cmp
rcrb
in
mov
inc
xor
mov
cmpsb
fcmovnu
inc
jle
ret
ja
not
test
sarl
stos
scas
xlat
inc
cltd
push
and
sahf
shlb
ret
insl
sub
lds
sub
cmpsl
repnz
push
mov
xlat
adc
add
mov
jge
push
xchg
mov
pop
sub
sahf
mov
mov
mov
jo
movsb
daa
cltd
xchg
scas
inc
push
mov
xchg
jne
push
daa
jmp
add
fs
stc
sub
mov
mov
sahf
mov
ja
into
popf
mov
xchg
daa
mov
xor
jae
movsb
dec
test
jbe
sbb
xchg
mov
les
lret
xchg
push
jno
jbe
fisubl
mov
addr16
push
ret
shll
btc
sbb
scas
leave
mov
call
mov
scas
ljmp
negb
lret
data16
mov
mov
iret
mov
mov
into
mov
bswap
jno
shll
scas
mov
adc
mov
bound
outsl
xchg
mov
rolb
adc
and
ja
mov
test
out
inc
scas
aad
adc
jo
xlat
mov
cmpsl
mov
xor
stos
sbb
mov
shlb
mov
add
jne
push
ds
test
scas
add
mov
xor
mov
das
xchg
jne
fcom
movsl
stos
xlat
in
pop
ret
outsl
lods
lea
push
mov
mov
adc
ret
mov
daa
pop
in
sub
sub
push
xchg
xor
push
int
pop
ffreep
jecxz
outsb
xlat
mov
or
xor
test
lods
sub
fstl
xchg
push
jecxz
jmp
push
inc
lods
fsts
test
mov
test
outsb
mov
fidivrs
or
popf
imul
ret
sbb
sbbl
sbb
push
lcall
mov
gs
test
xor
xor
ret
push
xchg
int
jo
push
aas
xchg
lahf
lods
dec
pushf
xchg
xor
adc
nop
cmp
cmpsl
ret
in
ret
jmp
pop
mov
je
sub
xorl
sub
lret
add
enter
mov
int
xor
xchg
jnp
mov
pop
imul
nop
jns
xchg
out
ljmp
imul
lea
xchg
cltd
test
stos
sub
push
mov
movsl
add
fwait
lcall
in
test
mov
xor
inc
mov
jbe
daa
or
test
sbb
lds
sub
mov
pushf
in
mov
xchg
push
pop
jne
add
fstps
in
sub
mov
jae
sub
sub
in
shll
xchg
ret
mov
in
out
mov
cmp
xchg
lods
sbb
mov
cs
sub
mov
movl
dec
adc
sub
insb
inc
dec
xchg
mov
mov
mov
mov
iret
xor
xchg
push
xor
mov
stos
movsl
orl
mov
insb
shlb
mov
mov
pushf
or
loopne
mov
pop
cmp
loop
daa
stos
pop
dec
mov
arpl
in
leave
js
outsl
xor
cmp
jae
mov
mov
and
ret
mov
cmp
sub
sub
fimuls
fwait
sub
cmp
sbb
cwtl
jg
xchg
xchg
xchg
lahf
insl
shrl
ret
cmc
pop
jle
in
adc
je
outsb
nop
jl
mov
jno
mov
xchg
add
mov
jmp
test
scas
cmp
movsl
in
mov
mov
push
xchg
mov
mov
mov
xor
sub
push
adc
mov
adc
xor
dec
mov
aam
lcall
fwait
iret
mov
lock
jmp
jns
add
cmpsl
mov
mov
mov
xchg
xor
mov
adc
movsl
mov
mov
enter
into
mov
neg
pushf
lods
inc
cmp
in
mov
scas
sub
pusha
mov
ret
mov
xchg
sbb
mov
imul
sub
lret
pop
mov
cmpsl
scas
lds
rclb
mov
hlt
aad
fmull
cld
das
and
ret
and
fwait
out
into
sbb
repz
loope
pop
sub
gs
in
cs
mov
cs
xor
pop
cmp
jge
mov
xchg
fstpl
mov
mov
popa
push
ror
hlt
nop
lods
cli
rcrl
mov
mov
ljmp
ficoml
pop
setae
cmp
sub
fwait
iret
sti
lds
mov
and
mov
repnz
adcl
or
ret
jmp
and
add
sub
xor
cmpsl
rcrb
out
mov
mov
pop
lods
nop
mov
insb
ret
out
fstps
mov
mov
lods
fildll
dec
js
mov
jnp
mov
fcomps
dec
lods
mov
mov
push
adc
sub
xchg
xor
std
mov
ffreep
jae
test
daa
mov
imul
in
cmp
xchg
je
scas
cwtl
test
sbb
movsl
clc
scas
mov
or
jns
cld
mov
sti
jecxz
push
add
pushl
sahf
pop
xchg
mov
scas
xor
xlat
mov
rcr
mov
and
pushf
jnp
ret
cmpsb
mov
fwait
das
inc
pop
xchg
shl
sbb
mov
or
sub
scas
xchg
cs
mov
cs
test
test
jae
mov
lret
xor
cmp
dec
mov
mov
cwtl
mov
fldcw
mov
push
inc
cmp
scas
test
dec
sbb
pop
fisttpll
ljmp
imul
ret
scas
imul
pop
addr16
lods
sub
pop
outsl
ljmp
jg
jmp
sbb
push
ret
imul
cmpsl
lret
push
rcrb
mov
add
xchg
das
lea
push
stos
ljmp
andl
mov
loop
dec
fwait
lcall
test
cltd
sbb
mov
pop
xor
xchg
test
or
push
mov
add
lods
shrb
shll
xchg
adc
and
cmp
outsl
fidivl
call
sbb
mov
mov
inc
mov
xchg
jns
xchg
stos
lret
mov
adc
lahf
mov
or
popf
mov
mov
xchg
int
mov
push
fwait
xchg
mov
mov
mov
jle
insl
xchg
insl
outsl
popf
mov
sbb
or
out
jl
popf
lods
push
push
cmp
stos
cs
movsb
leave
outsl
into
xchg
out
or
adc
das
jnp
mov
mov
inc
mov
shl
loopne
outsb
dec
stos
ret
sub
imul
scas
xchg
ja
adc
btr
adc
xchg
lods
repz
popa
inc
test
fadd
stos
pop
shll
aam
scas
mov
es
hlt
mov
push
lds
jecxz
sub
mov
test
cmp
push
mov
out
pop
add
mov
dec
je
stc
cmpsl
mov
push
stos
mov
mov
ja
mov
and
push
cs
fs
sub
ret
sbb
and
adc
repz
fistps
adc
xchg
fwait
jg
push
xchg
xchg
mov
inc
mov
pop
test
xor
cmpsl
mov
ret
pop
xor
fnstsw
mov
adc
dec
pop
imul
push
or
int
jg
mov
scas
pop
outsb
lods
mov
ret
stos
mov
and
add
call
cli
lahf
mov
shrl
fisttps
ret
cmp
inc
xlat
mov
jmp
loop
mov
insb
xor
lods
xchg
fimuls
pop
fistpll
mov
mov
das
mov
int3
pop
sti
cmp
mov
sarb
xchg
aad
cmc
adc
sbb
xchg
dec
lret
mov
jns
xor
loopne
mov
mov
mov
clc
mov
test
leave
cmpsb
add
xchg
cmpsl
mov
jle
test
outsb
add
mov
shr
jmp
jne
sub
adc
mov
jno
imul
mov
mov
sub
or
dec
outsl
push
mov
pop
xchg
out
xchg
in
xchg
out
cli
mov
popf
scas
xchg
mov
add
mov
lods
lret
and
cmp
shr
dec
or
enter
mov
xchg
jecxz
pushf
mov
mov
sub
mov
dec
out
mov
pop
jmp
mov
scas
daa
mov
lret
mov
xor
stos
sub
pop
outsl
cmp
or
enter
arpl
xor
outsl
outsb
push
inc
push
mov
test
aad
add
loop
test
subl
aad
mov
sub
add
mov
cmpsl
mov
fmuls
sbb
mov
mov
add
xor
pop
mov
mov
outsl
pushf
out
nop
push
rol
jmp
xlat
mov
lds
movsb
ret
imul
xor
xchg
xchg
ss
pop
icebp
xchg
cld
sahf
lret
icebp
xchg
mov
fwait
and
xor
outsb
lods
ret
ss
inc
setl
mov
scas
test
pop
mov
in
adc
lret
mov
xchg
jae
mov
mov
jge
int
mov
aam
add
sbb
add
or
stos
cmp
mov
lods
or
mov
cmp
fstps
cmpsl
mov
push
lcall
mov
imul
arpl
mov
shlb
mov
outsl
mov
loopne
mov
mov
rorb
lret
sbb
inc
jg
ljmp
adc
fisttpl
in
pop
pop
push
dec
adc
popf
shr
mov
push
aaa
mov
int3
sbb
xchg
lea
out
rorl
sarl
lcall
scas
movsb
imul
sbb
cwtl
mov
pop
and
mov
in
movsl
mov
stos
sbb
in
popa
test
scas
jmp
push
ret
xor
dec
scas
cmpsl
pop
nop
pop
outsb
imul
jo
cmpsl
rclb
adc
testl
fadds
mov
lods
dec
lods
out
insl
and
notb
sub
movsl
push
and
xor
popf
fwait
lret
xor
es
xchg
xor
pushf
add
cmp
mov
iret
stos
mov
add
shrl
cmp
dec
loopne
xchg
xchg
sub
aas
les
rclb
pop
in
mov
cli
test
stos
in
inc
inc
mov
xor
sub
push
mov
ret
imul
mov
inc
lcall
fwait
dec
in
pop
jb
out
sub
daa
ret
sub
ret
inc
sub
mov
dec
stos
jmp
sbb
call
cmp
leave
mov
imul
inc
cmp
cmp
push
arpl
push
inc
mov
fucomp
mov
sub
sub
mov
cmpsl
push
add
mov
adc
pop
shll
ret
push
mov
notb
lods
loope
fcmovbe
push
cs
jo
fists
mov
in
sub
movsl
out
cmp
jno
mov
adc
sbb
in
ficompl
mov
stos
mov
adc
in
adc
mov
sbb
mov
movsb
push
mov
pop
hlt
jno
mov
mov
xchg
mov
fst
inc
xor
daa
ret
ljmp
mov
mov
sub
cmpsl
xchg
ljmp
sub
into
dec
adc
imul
mov
xor
bound
shl
xchg
lds
mov
inc
mov
jns
stos
inc
push
les
in
jae
std
pushf
mov
sub
lahf
hlt
xchg
call
insb
jecxz
xchg
mov
sbb
mov
dec
mov
das
dec
pop
add
in
dec
scas
divb
out
popf
mov
sub
add
cmp
sahf
mov
adc
mov
out
jbe
mov
sub
jle
mov
mov
jne
pop
enter
sarl
imul
popf
ret
loopne
xor
jne
scas
movsl
mov
dec
xor
movsb
in
test
in
insb
add
shrl
movsl
mov
adc
cmp
xchg
jmp
mov
out
cwtl
dec
cwtl
sub
cltd
ret
test
lea
cli
imul
lret
pushf
ljmp
mov
mov
dec
hlt
sub
test
lods
mov
dec
mov
popf
in
push
mov
mov
outsb
rolb
lods
dec
jmp
mov
push
mov
in
adc
pop
mov
mov
lods
xchg
fildl
adc
lcall
enter
xchg
push
ret
cmp
hlt
lea
jle
sahf
cwtl
mov
cmc
push
lcall
fwait
leave
sbbb
fmul
loopne
add
mov
cmp
dec
arpl
lock
xchg
addr16
test
mov
or
mov
fisttpl
mov
mov
mov
shrl
shrb
mov
movsb
in
fisubrl
mov
shll
cmp
stos
fiaddl
movsb
mov
ret
daa
jae
xchg
mov
pop
in
mov
stc
mov
or
cli
enter
mov
jmp
int3
in
dec
repz
add
fwait
mov
jb
sub
movb
pop
ret
xchg
cltd
cmpsl
cltd
dec
mov
jmp
mov
rorl
xor
cmpsl
int
xor
shll
and
mov
or
mov
mov
adc
cmp
dec
mov
movsb
sahf
and
int
outsb
adc
mov
xlat
mov
js
pop
fstps
sahf
loopne
int3
dec
lods
mov
sbb
mov
cmpsl
pusha
or
lea
jo
mov
sbb
andl
mov
or
shl
dec
mov
mov
popf
stos
addr16
fdivl
test
sarl
xchg
daa
sub
dec
inc
leave
mov
in
movsb
aas
adc
daa
mov
add
out
jg
shrl
shr
gs
fiaddl
mov
mov
cltd
int
mov
dec
negl
lahf
mov
hlt
out
inc
mov
fists
pushf
or
aad
cmpsl
mov
push
cmp
pop
and
sahf
xchg
fldl
cmpsl
popa
jg
xchg
mov
les
dec
subl
mov
addr16
mov
jo
xchg
enter
pop
mov
pop
adc
test
mov
mov
mov
popa
or
jmp
pop
pop
stos
outsl
add
frstor
out
mov
jmp
cs
into
lods
mov
shr
lret
mov
lea
pop
xchg
lods
stos
pop
int
mov
pop
ds
mov
push
xor
mov
jns
xchg
xchg
icebp
pusha
xchg
leave
lahf
sbb
adc
mov
jno
test
mov
scas
and
or
cmp
xchg
fwait
ja
pop
out
xchg
pop
push
mov
iret
jecxz
imul
imul
inc
mov
lods
mov
out
sub
push
fisttpl
jnp
mov
mov
jb
mov
xchg
mov
jecxz
adc
xlat
mov
fwait
cwtl
lods
cmp
jle
xchg
inc
sub
xorl
daa
inc
xchg
outsb
test
popf
xchg
or
idivb
cld
lea
mov
pop
mov
outsl
fcomp
rorl
or
pop
lcall
mov
insl
jmp
js
nop
push
cmp
insl
cmp
shll
sub
daa
scas
adc
mov
jb
mov
jecxz
dec
lahf
movsl
sbb
push
stos
sub
xlat
jmp
call
scas
sub
mov
nop
ret
push
dec
xchg
hlt
in
out
mov
aas
mov
enter
mov
push
mov
lods
sub
xchg
das
adc
sbb
lea
mov
jb
xchg
sti
sti
jmp
out
lea
mov
sub
mov
shlb
adc
push
enter
popf
popf
sub
adc
mov
sarl
cmpsb
repz
xchg
mov
or
rol
sub
xchg
adc
sub
imulb
cmpsl
mov
fwait
pop
cmp
mov
int
sahf
pusha
lods
inc
mov
sub
icebp
lea
add
or
xchg
cmpsl
imul
adc
scas
pop
outsl
pop
lahf
stos
lcall
fwait
mov
mov
scas
in
lea
fidivrl
ret
ja
add
mov
orb
mov
mov
shrl
into
nop
sarb
lock
mov
cmpb
adc
test
mov
rol
enter
xchg
pop
or
and
sub
and
pop
lret
push
jb
ret
addr16
mov
in
mov
sub
cmp
push
mov
lods
dec
xchg
repz
mov
mov
mov
imul
adc
mov
mov
or
ret
or
xor
lea
sahf
mov
mov
hlt
imul
mov
mov
imul
outsb
cmpsl
or
stos
call
mov
mov
sahf
test
popf
sbb
pop
in
call
pop
je
andl
icebp
mov
imulb
cmc
and
pushf
sub
jl
adc
xchg
xchg
outsb
mov
xor
stos
test
scas
insl
pop
inc
fbld
cmpsl
enter
dec
leave
pop
dec
inc
mov
das
push
xchg
aas
mov
icebp
xchg
bound
cltd
xchg
push
xchg
cmp
mov
mov
popf
jmp
es
cmp
jmp
out
lods
popf
mov
stos
outsl
test
sbb
adc
fidivrl
sub
call
scas
icebp
in
ret
mov
aam
pop
in
ljmp
testl
mov
sub
adc
nop
popa
stos
pusha
cmpsb
mov
dec
cmp
lods
les
mov
sub
xchg
ret
imul
insl
in
inc
xor
sub
scas
sti
out
in
enter
sub
scas
mov
outsl
push
pushf
addr16
in
popa
cmpsl
mov
jg
sub
scas
dec
in
fcomps
xor
mov
fisubrl
enter
lea
int
dec
xor
jg
fwait
shll
lea
dec
fcomps
in
lahf
or
cmp
repnz
enter
mov
xor
imull
mov
lods
xor
scas
mov
popf
lret
ret
sahf
aaa
mov
orb
mov
sbb
mov
inc
sub
sub
mov
mov
rclb
les
ss
ret
and
jecxz
push
jo
int3
sub
movsl
pop
stos
aad
pop
mov
addr16
mov
jns
test
inc
push
mov
daa
mov
adc
xchg
adc
xchg
outsb
popf
out
nop
mov
mov
lret
mov
imul
int
mov
hlt
xor
xchg
mov
lods
xchg
icebp
jecxz
mov
fwait
dec
gs
lods
leave
xchg
je
ret
test
xchg
mov
push
lds
pop
mov
lcall
pop
jns
insl
sbb
enter
iret
out
ljmp
sahf
lds
pop
hlt
jne
xchg
cmp
ss
mov
std
scas
dec
repz
xor
ret
stos
push
push
xchg
xchg
or
loope
vphadduwq
xor
cmp
cltd
sub
mov
pop
add
mov
in
inc
and
jmp
pop
lcall
xor
pushf
lods
mov
cltd
into
in
sub
mov
jne
push
loope
mov
aaa
mov
outsb
mov
movsl
ret
push
movsb
and
xchg
xor
jecxz
xor
mov
mov
mov
pop
xchg
stos
sub
inc
fsubr
leave
out
setb
rol
jl
fstps
jne
ret
mov
or
repz
mov
jnp
mov
shrl
test
pop
push
mov
lret
movsl
sub
mov
dec
or
les
jg
scas
mov
dec
mov
cmpb
into
sahf
xchg
mov
or
sbb
mov
mov
ret
jo
int
dec
xor
scas
mov
test
dec
xor
movsl
xor
fnstsw
enter
iret
xchg
mov
lret
mov
pushf
add
lds
lods
mov
cld
xchg
mov
mull
push
mov
push
mov
enter
sti
das
pop
sahf
lahf
xchg
mov
cwtl
ret
pop
adc
sahf
jb
mov
jge
imul
lcall
je
jle
int
jo
mov
daa
push
adc
mov
push
in
int3
adc
scas
cli
lds
pop
xor
cmpsb
sti
add
or
mov
push
mov
mov
xchg
mov
jns
push
mov
in
add
sub
dec
mov
sub
shll
lock
mov
movsl
sub
inc
mov
repz
ficomps
pop
ret
negb
lods
lods
ret
xor
test
ret
mov
cmpsl
stc
inc
hlt
xor
shll
aam
lret
insl
inc
mov
xchg
cmp
scas
cmpsb
jle
mov
jbe
inc
mulb
fcmove
xchg
and
inc
mov
cs
fwait
scas
push
sti
xchg
mov
mov
stos
cs
inc
je
xchg
ret
sub
rolb
dec
out
imulb
scas
pop
je
xchg
or
mov
jnp
mov
outsl
das
add
or
scas
pop
xchg
ret
push
daa
mov
cltd
pop
jmp
setp
sti
pop
cld
outsb
xchg
mov
push
dec
scas
ret
scas
add
mov
add
push
retw
mov
mov
mov
sub
scas
jnp
sub
xchg
mov
xchg
roll
pop
cmc
adc
xchg
nop
sub
push
sar
es
mov
out
insb
scas
mov
ljmp
int3
mov
movsb
imul
fadd
or
stos
cmpsb
jmp
cmpsl
scas
mov
sarl
mov
xchg
popf
ss
cmc
xchg
scas
mov
sub
dec
jno
jae
xlat
mov
insl
ret
hlt
xchg
outsb
xchg
test
and
jle
ljmp
xor
mov
faddl
xchg
xor
outsb
in
mov
lcall
xchg
mov
test
jae
in
rol
xor
lds
js
or
out
lods
out
mov
pop
sub
test
mov
xchg
popf
arpl
out
mov
test
sub
lahf
mov
bnd
mov
movsb
movsb
and
imul
rcll
cmp
and
adc
mov
into
cltd
mov
cld
mov
arpl
cld
mov
mov
es
xchg
imul
lock
lods
scas
and
jg
lods
xchg
xchg
jle
inc
mov
push
enter
int3
bound
sub
cs
dec
mov
scas
popa
mov
stos
in
dec
lret
jb
sub
jmp
in
int3
outsl
dec
push
xchg
stos
pop
sub
and
pmaxub
mov
cmpsl
sti
scas
and
mov
dec
mov
xchg
les
int
out
in
outsl
ret
out
mov
mov
daa
mov
setns
cld
mov
in
push
cwtl
push
stc
fstpt
lods
xor
pop
idivb
and
lcall
sub
fstp
loope
out
cltd
inc
outsb
xchg
scas
mov
pop
popf
pushf
sbb
outsb
shl
mov
pop
xchg
outsl
arpl
push
push
int
enter
test
pushf
outsl
add
imul
lea
xchg
xchg
xor
mov
pop
sti
jno
sahf
test
push
mov
dec
ret
movsb
inc
mov
fstpl
cmp
nop
lret
call
cmpsb
mov
leave
sahf
dec
outsb
imul
xchg
sub
cltd
outsl
pop
dec
xlat
mov
adc
push
outsb
les
mov
fildll
xor
or
sarl
nop
idivb
roll
out
mov
push
fbstp
lods
mov
out
mov
jle
fadd
mov
pop
mov
nop
jmp
mov
and
mov
stos
stos
inc
lret
add
xchg
imul
sub
or
mov
lds
mov
mov
shrb
imul
outsb
mov
mov
iret
cmc
jge
push
mov
and
imull
mov
movsl
xchg
mov
ffreep
mov
insb
pop
mov
sub
stc
add
scas
mov
movsl
sti
lock
imulb
xchg
push
mov
or
mov
je
rcll
aad
imul
and
ret
in
mov
fs
cmpsl
icebp
int3
cmpsl
push
aas
les
lods
inc
int
pop
pop
push
xchg
aas
xchg
scas
xchg
xchg
jg
test
fwait
in
mov
mov
mov
fs
mov
out
mov
shll
lret
jp
sub
sub
mov
xchg
lods
ja
in
xchg
mov
sti
fs
mov
jmp
add
enter
in
clc
adc
push
dec
movsl
cld
mov
lret
mov
pop
cli
xchg
lea
in
outsb
jge
sar
shrl
lcall
shrl
xchg
mov
out
sub
scas
lods
les
aad
scas
fdivrs
jg
outsb
pop
jae
ret
push
mov
and
in
scas
and
xchg
outsl
mov
lret
ret
inc
std
xchg
xchg
xchg
addr16
cmp
ret
scas
lods
xchg
pop
scas
ret
int
mov
loope
mov
shlb
dec
sub
ret
mov
jo
dec
cmp
mov
and
xchg
adc
mov
ret
jecxz
pop
push
dec
mov
movsl
mov
jmp
inc
jp
xor
mov
cmpsb
ss
xchg
daa
fistl
mov
sub
stos
imul
enter
inc
popf
ret
sti
stc
sbb
test
mov
xchg
pushf
repz
arpl
or
mov
mov
rcr
push
popa
ret
fbld
lret
mov
mov
ret
ds
popa
in
lahf
adc
mov
cmc
pop
xchg
mov
call
lret
or
ret
mov
test
mov
xchg
lea
das
mov
sub
popa
out
cmp
xchg
rcrb
jno
arpl
sahf
lods
xchg
cli
popf
fwait
or
sub
lea
fwait
das
push
cltd
lods
scas
jle
pop
int3
mov
push
push
mov
popl
sub
jle
nop
mov
test
mov
mov
out
sbb
insl
add
mov
out
scas
les
ret
loopne
mov
shlb
mov
xchg
pusha
ja
dec
cli
mov
add
insl
in
mov
xchg
sahf
or
xchg
daa
push
xorb
std
mov
sahf
mov
add
lock
pushf
jmp
sub
mov
fwait
sub
inc
push
outsl
jmp
sub
jo
dec
mov
notb
repz
mov
mov
shrl
jb
enter
je
add
mov
pop
cwtl
mov
cs
cltd
sbb
jne
mov
jno
mov
xor
mov
xchg
push
insl
mov
xor
icebp
push
pop
push
mov
xor
xchg
outsl
sub
pop
popf
cmc
sub
insl
sahf
jmp
leave
mov
xchg
in
or
stos
sub
mov
sarl
cli
xlat
mov
cmc
jle
outsb
add
out
cmp
mov
dec
sbb
js
dec
sarb
lret
mov
ret
jecxz
ret
pushf
dec
sub
push
outsl
adcb
or
dec
sbb
xchg
ja
mov
sahf
repz
or
fwait
mov
cwtl
cld
bound
enter
cmp
out
mov
pop
cltd
sub
test
and
dec
insl
inc
dec
fs
mov
cmp
cltd
jecxz
mov
jmp
ret
mov
mov
mov
gs
push
sbb
jne
leave
cltd
sbb
dec
mov
call
xchg
scas
xchg
pop
mov
xchg
popa
test
xor
test
fnstsw
sarb
leave
out
test
xchg
popf
daa
popa
mov
mov
lahf
movsl
outsb
mov
jecxz
aaa
fimull
xchg
cmc
push
jne
ds
popf
movl
ret
ja
add
dec
gs
inc
popf
in
outsb
lods
mov
test
mov
icebp
inc
clc
cltd
repz
and
xchg
mov
sti
xchg
jl
inc
outsl
fmull
mov
test
fisttps
mov
fisubl
ror
dec
scas
lahf
ja
adc
lock
cmc
test
mov
loopne
xchg
xor
sti
adc
loope
mov
daa
mov
xchg
cmpl
pop
adc
outsb
pushf
mov
cmpsb
mov
and
in
mov
mov
mov
ds
in
cs
pop
popf
mov
lret
pop
lcall
pushf
mov
sub
mov
aad
sub
pushf
les
xchg
insb
pushf
mov
mov
int
push
cmp
cmp
cmc
lahf
in
inc
jno
fdivr
test
std
cmp
mov
jbe
mov
mov
mov
xchg
cmpsb
mov
and
mov
cmp
pop
xchg
cmpsl
fs
mov
fisttpl
scas
rorb
fwait
pop
adc
xor
nop
ret
not
cmp
xchg
push
mov
add
fcmovne
ret
cmc
lahf
insl
xor
xchg
scas
mov
cmc
mov
and
sbb
fisubrl
test
mov
mov
sarb
outsb
rolb
les
sahf
inc
or
ret
popl
mov
or
shlb
ret
xchg
daa
mov
xchg
mov
mov
adc
xchg
mov
add
stc
sahf
ss
pushf
xchg
cltd
mov
mulb
ja
cld
ret
push
add
jno
lret
mov
cmpsl
cmpsl
xchg
jbe
mov
popf
xchg
mov
inc
mov
lret
or
cwtl
scas
rcrb
leave
std
xchg
sahf
pop
stos
hlt
mov
enter
mov
dec
push
ds
push
std
mov
jns
sub
scas
push
arpl
cmp
mov
dec
pop
sbb
nop
pop
mov
xor
stos
scas
dec
sbb
outsb
mov
mov
mov
mov
add
mov
xor
inc
lods
lahf
repz
lock
sti
insl
repnz
sub
in
out
aaa
lret
mov
mov
inc
cmp
pop
or
sub
mov
daa
pop
cmpsl
mov
js
sbb
ret
sub
xchg
mov
pop
data16
lea
add
mov
sub
js
popf
push
mov
mov
cmp
lret
pop
dec
movsb
lods
lods
outsl
lods
mov
mov
out
jae
mov
loop
in
inc
ret
in
mov
fwait
outsb
add
movsb
mov
mov
scas
cli
dec
pop
stc
mov
notb
lods
cmp
jle
mov
adc
insl
popf
xor
movl
popf
out
mov
fnsave
mov
mov
xchg
mov
mov
mov
mov
stos
stos
mov
testb
in
popa
ffreep
and
std
xchg
scas
repz
add
xlat
jb
outsb
xchg
scas
or
lds
fisttpll
jne
sub
jae
inc
or
jle
outsl
in
ss
jmp
mov
rclb
mov
test
jne
ljmp
popf
fnclex
jmp
dec
test
in
in
notb
outsl
movsl
scas
es
cmpsl
ret
sub
add
leave
xchg
outsb
mov
jp
pushf
adc
movsl
xor
inc
mov
mov
fwait
pop
imul
jae
scas
dec
sub
sahf
mov
sub
outsl
daa
inc
mov
fwait
mov
mov
xor
loope
leave
cmp
adc
scas
and
or
lods
and
ret
sub
mov
jnp
mov
sub
shrl
mov
mov
daa
push
mov
jae
mov
mov
ljmp
mov
mov
mov
add
cwtl
bnd
mov
mov
mov
mov
pushf
stos
ljmp
adc
inc
test
repz
lcall
call
adc
mov
test
popf
sub
add
mov
ss
imul
mulb
dec
cmpsl
out
call
hlt
inc
stc
mov
fwait
jmp
int
xchg
mov
insl
mov
dec
lds
push
xor
xchg
lea
in
xor
stos
xchg
fsts
popf
scas
mov
push
sbb
jb
leave
mov
dec
mov
cmp
sub
arpl
cmpsl
mov
sub
lock
mov
popa
stc
std
lret
cmpsl
cmp
xchg
dec
sub
xchg
xchg
ss
mov
sahf
lret
cwtl
xor
xchg
cmc
mov
mov
movsl
nop
xchg
sbb
mov
pop
imul
mov
pop
ljmp
je
mov
stos
sub
jl
lods
xchg
jmp
mov
and
push
mov
jnp
leave
lds
jl
sbb
mov
out
fwait
popf
dec
shlb
mov
lds
cltd
ret
outsl
sbb
int
mov
mov
nop
xchg
pusha
inc
push
jge
mov
adc
mov
jne
cli
cmpsl
test
jae
inc
inc
jbe
cmp
loop
sahf
adc
lods
mov
xchg
lcall
mov
repnz
xchg
sbb
sub
scas
mov
icebp
mul
sbb
mov
imul
fmul
mov
dec
stos
sbb
fadd
call
jmp
mov
cld
movsb
lret
mov
dec
stc
pushf
inc
push
aad
cwtl
pop
mov
scas
dec
inc
mov
cld
xchg
sub
repz
icebp
and
popf
jb
mov
xchg
stos
xor
jbe
scas
jns
mov
cmp
cmpsb
inc
mov
lret
inc
jnp
pop
repz
mov
lret
test
push
jno
shrl
sub
lahf
lods
push
iret
mov
xchg
xchg
jg
mov
xor
xor
arpl
sub
mov
xchg
out
push
mov
imulb
lea
mov
cwtl
mov
adcb
ret
ljmp
cmp
fimull
mov
repz
jmp
sar
cmpsl
fdivrp
popf
outsl
mov
rcrb
mov
inc
pop
mov
movsl
mov
sub
lock
cmp
rcrl
xor
sbb
in
xor
fdivs
push
xchg
mov
cltd
inc
aam
in
sbb
imul
imul
outsb
cmc
icebp
fistpll
hlt
mov
cwtl
cmp
adc
add
inc
xchg
lods
lods
xor
inc
xchg
mov
ja
fs
cmp
sbb
jecxz
push
xchg
das
lods
lods
mov
into
add
sub
arpl
mov
jle
jo
inc
mov
cmp
pop
jno
xor
xor
testb
xchg
stos
add
icebp
jmp
ja
imul
scas
push
nop
stos
ja
enter
or
out
stc
xchg
cmpsl
mov
lret
inc
outsb
ret
pop
cmpsl
xchg
pushf
cmp
pop
sbb
mov
lcall
test
mov
divb
ficoml
repz
mov
cmp
xchg
mov
adc
lret
xor
cmp
shrl
stos
push
pop
inc
cmc
ja
mov
cltd
xor
scas
test
out
cmp
pop
lea
sbb
mov
imulb
sub
sti
rolb
arpl
loop
test
divb
ror
repz
mov
dec
sarb
movq
notb
mov
add
mov
lcall
hlt
pusha
fmuls
hlt
outsb
adc
push
mov
jmp
mov
xchg
xor
xor
sub
or
stc
or
mov
lds
ja
dec
test
enter
push
mov
daa
mov
shrl
lods
jbe
mov
ret
dec
or
or
adc
outsb
dec
mov
and
lods
mov
mov
subb
mov
mov
insl
daa
iret
stos
insb
xchg
flds
jnp
cmpsl
arpl
xchg
jb
fistpll
mov
es
lea
mov
loopne
xchg
mov
mov
imul
mov
adc
pop
cmpl
movsl
shlb
out
pop
in
int
push
test
out
mov
push
adc
mov
fprem1
dec
addl
sub
xchg
sahf
adc
pop
mov
ret
ss
xor
sahf
loop
mov
out
mov
push
cmp
sub
mov
mov
loop
popa
cmp
arpl
fwait
inc
jne
mov
test
scas
xchg
mov
ret
push
ljmp
pop
pop
mov
fnstsw
shll
xchg
jge
fldcw
lea
jb
mov
in
mov
mov
mov
pop
pusha
inc
shrl
sbbb
movsb
fdivrs
jns
lcall
mov
jge
loopne
or
mov
ret
in
out
enter
mov
sub
ret
sbb
ret
jmp
and
out
inc
mov
hlt
scas
lea
rol
repz
scas
sahf
repnz
fstpl
jb
push
xchg
mov
mov
fs
test
xchg
ret
hlt
or
pushf
xchg
sub
push
icebp
lods
sub
sbb
inc
mov
jns
mov
mov
lods
ret
lods
outsb
push
cmp
in
lea
mov
push
shrb
stos
mov
in
inc
insb
fmuls
lds
scas
mov
aaa
mov
lret
movsb
ret
jbe
mov
std
mov
add
orb
cmpsl
adc
nop
in
mov
inc
lret
mov
jge
jae
xchg
scas
mov
rol
nop
insl
fstpl
fs
xchg
ret
out
in
mov
mov
and
nop
insb
jge
jo
ret
in
jl
mov
add
leave
pop
pop
adc
adc
xor
lods
lods
scas
faddp
pop
je
les
enter
outsb
adc
enter
sub
lock
mov
stos
dec
imul
fbstp
push
repz
xchg
mov
int
clc
stos
mov
mov
nop
in
mov
test
fisubrl
jo
lea
mov
popf
cwtl
mov
adc
dec
mov
mov
xor
fidivl
cltd
xchg
imul
dec
mov
cwtl
sbb
shrl
imul
inc
scas
stos
inc
xchg
mov
mov
xchg
or
inc
adc
aaa
adc
fwait
sub
icebp
mov
popf
sub
fidivrl
mov
fistpll
or
xor
xchg
nop
rcll
iret
xchg
mov
adc
ret
sub
insl
addl
cmc
stc
stc
cmpsb
sub
and
lcall
xlat
jb
outsb
mov
loop
test
jno
js
mov
xor
mov
in
nop
mov
jb
je
mov
push
lea
sarl
lods
ret
add
iret
mov
aad
xchg
stos
insb
in
dec
in
fmul
mov
pop
popa
mov
scas
aas
xchg
mov
mov
mov
or
xchg
mov
xor
out
lock
nop
xcrypt-ecb
cmpsl
or
ret
lock
loop
cmpsb
bnd
ret
jecxz
fnstcw
lret
leave
xchg
adc
int
mov
out
inc
mov
nop
push
mov
call
xchg
push
loopne
lods
cwtl
pop
xor
cld
mov
out
pop
ret
pop
jnp
mov
mov
push
pop
push
rclb
popf
shll
lods
fidivrl
das
scas
or
notb
mov
cs
rcrb
popf
mov
sti
ret
lods
out
imul
mov
hlt
loop
movsb
popa
xchg
mov
lods
pushf
sbb
fadd
and
mov
cli
mov
xor
ret
sub
test
iret
jno
mov
movl
mov
sub
nop
push
mov
pop
rorl
lahf
idivb
mov
mov
add
in
adc
mov
xchg
mov
cmpsl
imul
imul
cli
dec
mov
mov
xchg
stos
lock
xchg
mov
popf
jbe
mov
ss
rcr
inc
loopne
enter
cmpsl
or
lods
xor
adc
mov
xchg
outsb
xchg
cmpl
cltd
jmp
xchg
xchg
iret
repnz
xor
outsl
xor
stos
adc
pop
arpl
icebp
push
mov
dec
jae
loope
sti
in
mov
add
outsl
jp
insl
add
lea
xchg
sub
lods
imul
lahf
daa
ret
insl
or
sahf
pushf
lahf
daa
push
ret
mov
xchg
aad
sbbb
and
clc
mul
mov
lea
in
dec
das
enter
xor
xor
cmp
add
cmpsb
repz
lods
arpl
mov
ret
shll
xor
pushf
cmpsl
push
and
jp
das
fsubrs
sub
test
arpl
cltd
in
xchg
mov
mov
daa
sub
or
stos
inc
outsb
add
mov
loopne
shlb
mov
mov
sub
fdivl
hlt
in
cmpb
xor
mov
imul
push
mov
fs
push
lcall
enter
xchg
insb
add
jg
movsl
mov
aaa
mov
ret
mov
dec
or
das
lods
dec
test
cld
mov
mov
stc
shlb
in
mov
sub
mov
outsb
cmc
jae
nop
stos
jmp
jb
xchg
ja
xorl
jbe
hlt
adc
inc
pop
mov
ljmp
jg
inc
fistpl
lahf
movsl
or
lods
scas
dec
lea
outsb
mov
fdivrl
mov
mov
scas
push
xchg
sub
sahf
mov
or
add
add
mov
ret
jae
loope
ret
stos
inc
add
sbb
mov
rcll
fwait
in
sbb
inc
mov
aam
xchg
loopne
push
push
stos
out
daa
cwtl
in
mov
xor
nop
ret
mov
hlt
and
and
xchg
test
xor
sbb
popf
std
dec
ret
fxch
xchg
movsb
or
cmp
mov
repz
in
fsubl
and
mov
sbb
mov
mov
push
lcall
imul
sub
dec
ret
sub
jo
mov
ds
ret
mov
xor
mov
shlb
out
push
push
out
jne
lahf
xor
out
aad
xchg
fisttpl
push
mov
lahf
mov
movsb
xor
daa
lea
scas
mov
or
jecxz
jecxz
es
mov
adcl
fwait
dec
add
push
fwait
mov
lea
push
pop
or
lcall
xchg
mov
mov
in
mov
inc
mov
mov
mov
call
or
ret
test
mov
fcmovnbe
aaa
push
inc
sti
mov
and
jne
mov
jo
dec
mov
adc
xchg
mov
sub
jb
hlt
mov
xchg
xchg
xor
cmpsl
mov
inc
mov
xchg
mov
test
or
sub
push
mov
popa
add
mov
loope
imulb
frndint
xchg
dec
daa
das
lea
dec
sti
mov
adc
in
mov
divb
pop
test
jb
mov
xor
aas
cmp
mov
mov
repnz
fistpl
mov
or
int3
mov
mov
mov
mov
or
cltd
scas
andb
fistps
pop
aas
mov
lock
mov
in
mov
cmpsl
rcrb
mov
orb
mov
lcall
xchg
push
test
xlat
mov
mov
sub
jmp
xorb
pusha
lea
cmpsl
mov
nop
std
cmp
add
xchg
lods
pop
mov
xchg
rorl
iret
imul
mov
push
xchg
mov
adc
push
stc
frndint
lods
xchg
test
stos
mov
add
inc
xor
push
or
je
outsb
mov
cmp
lret
mov
scas
imul
sahf
fnstenv
int
mov
sbb
pushf
sub
sub
mov
dec
pushf
idivb
in
adc
pushf
in
adc
in
aam
stos
mov
out
aaa
jmp
sub
in
adc
mov
and
jo
scas
mov
push
cmp
jmp
mov
or
sahf
lret
add
lea
sti
mov
jmp
push
scas
sarl
in
mov
sbb
pop
mov
shll
or
test
popa
xchg
lods
test
lods
jmp
mov
divl
sahf
loope
xor
pop
xchg
daa
pop
insb
xchg
out
fstpl
pop
xchg
jg
movsl
cmp
lods
ret
ja
fstpl
shll
xchg
xchg
cld
lahf
jle
lret
les
lods
cmp
sbb
cs
xchg
test
xor
cli
jae
cmpsl
daa
clc
cwtl
sub
inc
mov
xchg
sub
insb
movsb
jnp
dec
mov
dec
cli
pop
mov
aaa
mov
movsb
lods
daa
ss
mov
xlat
ret
and
pop
mov
pop
cltd
int
jne
cld
mov
aaa
xchg
push
fwait
cli
lds
mov
mov
scas
mov
rclb
mov
in
movsl
mov
bound
in
out
push
cli
lret
xchg
sbbb
loop
inc
outsb
mulb
fwait
mov
push
mov
daa
jmp
push
in
sbb
pop
push
mov
xor
sti
int
xor
divb
movsb
cmp
push
shll
mov
push
leave
rcrb
lock
pop
sub
cwtl
and
std
fcmovnb
mov
pop
mov
in
push
ljmp
or
pop
adc
insl
scas
and
out
xchg
rcr
lods
sti
xor
mov
lcall
push
test
pushf
int
stos
call
push
dec
xchg
jmp
xchg
sub
mov
add
jne
pop
xchg
pop
jg
repz
mov
xchg
ret
xchg
sub
mov
and
or
sub
and
mov
lods
mov
mov
movsl
ja
mov
mov
sbb
test
mov
mov
out
lock
jnp
mov
mov
cmc
mov
ret
inc
es
xor
arpl
fwait
stc
xlat
jno
ljmp
shl
mov
loope
push
sub
movsl
hlt
pop
jg
mov
jl
dec
add
jns
mov
sub
cmpsl
adc
xchg
jb
mov
leave
xor
jle
and
adc
clc
pop
daa
cltd
push
stc
lods
mov
adc
mov
xchg
sub
xchg
jle
jae
sbb
stos
cmpsl
dec
insl
mov
icebp
incb
push
ret
insb
imul
adc
pushf
mov
push
scas
jbe
mov
fnstenv
dec
jo
leave
mov
add
addb
and
jle
out
jno
jae
daa
mov
mov
mov
pushf
adc
xor
sub
rclb
ret
test
stos
adc
scas
lods
imul
ss
in
inc
xchg
xor
jns
mov
std
outsb
pop
jp
stos
subl
jbe
nop
jb
je
popa
push
mov
ror
fs
mov
jp
fwait
outsl
test
cmpsl
pop
xor
cltd
insl
scas
aas
cmp
lds
jp
push
lret
movsl
xlat
popf
mov
bnd
in
popf
mov
add
imul
scas
lods
push
inc
mov
std
mov
add
fs
enter
xchg
scas
inc
fiaddl
outsb
aad
lods
in
movsl
mov
xchg
push
push
in
add
sbb
shll
mov
cli
int3
rclb
mov
mov
or
lahf
imul
imul
shrb
scas
lods
jmp
stos
fs
lret
hlt
out
rol
negb
aam
lods
jmp
xor
sbb
mov
movsl
jmp
repz
ret
xor
sahf
mov
daa
scas
mov
jne
stos
push
mov
mov
stos
les
push
clc
pusha
pop
imul
ret
dec
jo
or
rep
mov
mov
xchg
lods
out
mov
in
inc
xchg
lods
movl
cmp
js
mov
mov
jbe
ffreep
mov
out
sub
push
mov
mov
sub
popa
cwtl
aas
mov
and
push
shl
jno
cmp
mov
lcall
daa
push
sbbb
and
in
cwtl
stos
pop
pop
jns
ret
cs
std
and
mov
stos
mov
add
mov
push
push
int3
push
imul
mov
push
in
mov
imulb
adc
je,pt
mov
push
fcmovu
mov
push
mov
lahf
xor
pop
mov
pop
dec
test
and
mov
xchg
inc
and
lcall
sahf
mov
sub
mov
mov
fisttpl
insl
cmpl
mov
add
sbb
bound
xchg
add
stc
rolb
xchg
leave
xor
cld
jno
orl
xor
mov
add
dec
xchg
hlt
aas
cmpsl
stos
je
gs
enter
daa
xchg
sub
jg
add
push
pop
pop
xorb
out
ret
dec
mov
repz
shll
pushf
xchg
insl
inc
std
pushf
movsl
jnp
adc
cmp
dec
mov
cltd
mov
cltd
call
mov
sti
push
mov
arpl
cmovne
ja
popf
in
mov
add
mov
push
add
movsl
sbb
xchg
mov
cmpsl
movsb
scas
sub
mov
sbb
mov
or
mov
jnp
mov
sbb
add
sti
inc
cltd
cli
fcmovne
lcall
xchg
push
mov
fwait
dec
cwtl
imul
cmp
dec
mov
sub
lea
lods
mov
pop
jecxz
xchg
fstps
sbb
repnz
ja
jns
xchg
mov
shrl
lea
loope
insb
popa
repz
lea
ret
test
xchg
push
add
mov
sub
inc
mov
sti
out
hlt
shl
and
mov
pushl
aaa
cmc
in
mov
adc
mov
pop
mov
xchg
mov
std
and
mov
sub
fsts
mov
mov
ret
in
mov
mov
mov
imul
xchg
lahf
sar
mov
js
lods
lcall
and
int3
jno
inc
mov
jae
sbbb
movsl
pop
sti
outsl
imul
dec
movb
dec
adc
loope
ror
and
in
sbbb
mov
jne
mov
jae
in
arpl
mov
repz
loop
cmpsb
jecxz
mov
and
cmpsl
xchg
xchg
scas
jle
in
inc
movsb
mov
mov
out
fwait
mov
fs
push
cld
mov
dec
sub
sbb
add
mov
mov
xchg
scas
inc
dec
jle
xchg
dec
cmp
cmpb
and
inc
mov
and
in
int
inc
add
scas
jne
mov
sub
stc
mov
xchg
mov
js
ss
xchg
ret
mov
cld
lods
mov
inc
ret
lods
aaa
add
jge
popf
adc
dec
jmp
popf
xchg
lret
repz
xchg
hlt
jge
leave
xchg
out
lods
xchg
lods
loope
hlt
icebp
mov
xchg
mov
xchg
lods
xchg
outsb
fwait
pop
adc
push
mov
lahf
sub
jbe
movsl
inc
out
cmc
mov
lea
les
push
pop
sub
jge
in
cmc
add
repnz
mov
xor
scas
movsl
rcl
lcall
cltd
mov
imul
pop
lock
ret
xor
imul
scas
cmpsl
mov
xchg
mov
iret
cmp
and
repz
jnp
inc
test
cmp
or
sarb
mov
cmp
lods
icebp
xor
jge
in
push
out
lods
jbe
ret
sub
mov
insl
xchg
mov
enter
xchg
pushf
jne
cmp
jle
pushf
pushf
stos
in
jnp
push
mov
shrb
xchg
leave
lret
jmp
xchg
sahf
xchg
mov
dec
xchg
rol
das
jmp
mov
enter
rcll
sbb
movb
adc
ljmp
mov
mov
mov
mov
cwtl
sub
popf
lret
mov
add
xor
xor
stos
mov
jmp
xchg
adc
sarl
cs
or
mov
lret
mov
sahf
pop
xchg
mov
push
hlt
loopne
pop
mov
push
mov
jb
lods
loop
sbb
push
pop
mov
sahf
movsb
mov
mov
mov
push
cmpsl
out
mov
pop
jg
add
popf
fwait
lret
adc
hlt
push
push
dec
popf
repnz
mov
xchg
scas
test
std
mov
pop
js
xor
mov
xor
leave
cltd
hlt
pop
mov
mov
inc
movsl
imul
out
cmpl
jnp
lods
call
mov
outsb
cmp
pop
stos
add
and
sbb
mov
mov
fdivs
jns
cltd
scas
mov
andl
rorl
cwtl
mov
mov
jbe
inc
lods
mov
adcb
rcll
ret
insl
cmp
mov
roll
fnstcw
xchg
sahf
sbb
ljmp
test
aad
jb
ja
mov
mov
outsb
sub
inc
pushf
pop
and
stc
and
push
lea
pop
jp
rcll
xchg
jo
push
xchg
les
mov
mov
ret
out
or
ret
push
mov
jp
mov
sbb
bound
xchg
stos
xchg
ret
sub
mov
mov
mov
or
xor
mov
int3
xchg
lods
insl
adc
push
add
xor
in
ds
outsb
mov
call
aas
fwait
imul
cmp
pushl
enter
stos
inc
dec
sti
jmp
jne
pop
sahf
mov
imulb
das
or
hlt
lret
cmp
add
call
shrb
xor
mov
test
sti
xor
shll
in
notb
stos
daa
sub
sahf
inc
cmpsl
lods
vphadduwd
divl
jg
jae
hlt
mov
mov
mov
jae
push
nop
xchg
iret
in
jmp
and
lods
mov
popf
lods
ss
mov
scas
jmp
mov
fdivs
mov
pop
inc
negb
mov
insl
mov
mov
dec
push
mov
jbe
mov
adc
mov
mov
mov
out
xchg
repnz
jle
cli
cwtl
cmpsb
fwait
jg
repz
daa
ret
jmp
xor
jb
rclb
adc
mov
adc
lds
mov
ret
cmc
popa
mov
dec
scas
pop
sahf
add
fnstcw
xchg
test
popa
fldt
mov
pop
mov
mov
mov
inc
inc
mulb
dec
roll
clc
leave
xchg
int
ret
mov
dec
jmp
inc
mov
and
in
and
leave
mov
outsb
mov
in
mov
pop
into
adc
int
mov
mov
adc
fbstp
sarl
mov
xchg
cmc
mov
scas
dec
mov
inc
lods
mov
mov
jne
sub
hlt
cmp
adc
loopne
test
movsb
xchg
cmp
mov
sub
jmp
fnsave
movsb
cmp
scas
mov
and
cltd
jo
rcr
test
push
jge
out
scas
mov
xchg
subl
mov
xchg
sub
mov
aam
add
xor
jle
xchg
push
jno
xchg
xchg
and
push
mov
dec
jb
hlt
lahf
sahf
ret
mov
stos
fdivr
in
insl
mov
dec
and
mov
mov
loop
jl
xor
in
mov
ljmp
adc
hlt
dec
pop
insl
lcall
or
mov
stos
pop
notl
pop
and
fwait
push
in
mov
add
xchg
mov
mov
fwait
or
testl
mov
ja
cld
movsl
lret
ret
cmc
sahf
mov
out
xchg
mov
push
push
sub
jne
repz
into
xchg
mov
pushf
xchg
push
sub
inc
lahf
mov
ret
jmp
cmp
rorl
fld
lods
xchg
out
push
jns
mov
scas
in
ret
imul
mov
in
inc
push
test
nop
in
sub
test
cld
cmpb
mulb
mov
sar
lret
cltd
add
mov
mov
sub
lcall
cmp
push
mov
test
je
int
mov
ss
test
xor
test
andl
dec
outsl
popa
push
mov
dec
jb
lds
push
shll
push
xor
test
xchg
pop
xchg
cmpsl
test
int
jecxz
mov
stos
cmp
ret
jo
loope
stos
mov
scas
lods
outsb
sahf
mov
and
jae
out
or
int3
idivl
lret
mov
sub
adc
add
push
scas
movl
jne
fists
sub
inc
mov
mov
sub
in
lods
xchg
daa
and
dec
sarb
aaa
jae
mov
jo
mov
lods
ja
popf
cmp
push
sub
push
std
andl
es
mov
scas
enter
sub
xchg
xor
mov
ljmp
lock
lcall
sub
pop
xchg
popa
xor
leave
push
imul
out
outsb
dec
cwtl
sbbl
dec
or
call
in
xor
or
nop
jmp
into
jb
xchg
insl
jb
cltd
insb
shrb
aaa
mov
leave
scas
sbb
push
mov
stos
lret
xlat
mov
add
mov
mov
cs
fwait
jbe
hlt
jne
mov
fldt
jmp
jb
mov
jg
inc
mov
dec
in
popa
inc
mov
push
dec
stos
inc
cs
insl
or
js
scas
adc
lahf
stos
mov
lods
icebp
mov
ret
sti
xor
dec
xchg
rcrl
imul
shrl
mov
xchg
xor
dec
ret
or
mov
lds
jae
mov
insb
push
adc
mov
stos
cltd
mov
ret
inc
mov
movsl
mov
hlt
out
xor
pop
test
cmpsb
mov
or
mov
cltd
lea
loope
leave
sahf
inc
mov
lds
mov
pop
rclb
in
pushf
mov
and
cmpsb
cmpsb
push
mov
test
imul
cs
and
mov
js
movsl
mov
inc
stos
sub
daa
add
mov
or
mov
repz
setnp
mov
xor
jns
pushf
fwait
inc
pop
lret
mov
leave
xchg
rol
leave
outsl
jno
fmuls
dec
out
in
add
rcrb
mov
rclb
inc
lods
mov
repnz
lret
push
pop
dec
pop
cmp
mov
loopne
lret
xchg
mov
lcall
movsl
je
mov
dec
arpl
fisttpll
imulb
in
mov
stos
test
xchg
dec
lahf
fsubrs
lds
outsl
add
test
aaa
pop
fwait
scas
andb
adc
xchg
in
in
xor
push
sub
stos
cwtl
inc
pop
bound
enter
cltd
dec
mov
mov
ret
cmp
adc
insb
int
out
lock
mov
imul
das
push
sahf
add
shll
push
fldenv
lret
mov
mov
nop
mov
pop
in
in
insb
dec
mov
stos
mov
xchg
imul
xchg
lea
ret
imul
repz
pop
jbe
test
scas
mov
dec
in
mov
rorb
test
push
jg
sub
popl
test
adc
xchg
lods
add
rcll
mov
sbb
mov
sbb
mov
ss
gs
xchg
test
scas
out
xor
mov
pop
test
jae
imul
popa
movsb
xchg
imul
jbe
notl
popf
dec
imul
mov
lods
mov
adc
pushf
mov
stos
sub
push
mov
mov
ret
sub
and
mov
xor
xchg
xor
lret
sub
xchg
in
add
mov
repz
mov
and
cmpsb
in
xor
mov
xchg
dec
sub
fucomip
lahf
fistl
shl
cli
mov
imul
call
mov
mov
test
shll
ret
xor
xchg
cmpsb
mov
fsts
mov
test
outsl
inc
or
xchg
xchg
jno
dec
xlat
ret
stos
mov
lock
jb
movd
arpl
int3
scas
sar
test
pop
xchg
in
mov
mov
fistl
mov
inc
xchg
lods
mov
push
stos
xchg
scas
add
in
mov
fstps
jl
push
addr16
sub
sub
cld
xchg
int
cmp
stos
sarb
xor
jnp
mov
mov
mov
loop
cld
scas
movsl
in
popf
lea
xchg
sub
ss
inc
nop
sub
outsl
mul
rol
mov
push
jmp
mov
pop
sahf
xchg
inc
daa
rorb
mov
xor
lods
aad
ret
mov
test
mov
sahf
fwait
lret
push
add
ret
xor
scas
pushf
test
mov
mov
test
mov
xchg
imul
mov
aaa
ret
xor
and
mov
xchg
pop
push
mov
pop
shrl
outsl
mov
push
fadd
sub
aad
in
and
mov
out
cmc
push
rclb
mov
adc
rorl
test
cmpsl
cmp
test
mov
mov
mov
imul
clc
les
xor
repz
lahf
cmp
and
loopne
lahf
insb
push
pop
jno
popf
xchg
repz
mov
imul
fbstp
int3
lret
stos
mov
mov
mov
sbb
xchg
lcall
mov
out
mov
adc
xchg
mov
push
insl
inc
mov
arpl
shlb
xchg
xchg
mov
scas
push
rorb
bound
shr
mov
imul
mov
loope
push
pop
push
mov
lahf
stos
popf
inc
lcall
pop
sub
mov
mov
mov
frstor
lea
stos
out
mov
pusha
outsl
mov
mov
xor
sub
mov
repz
inc
xchg
cltd
xor
dec
cwtl
fwait
mov
rorb
mov
add
imul
jle
or
dec
adc
mov
sub
adc
add
adc
push
mov
ret
insb
ret
ffreep
scas
xchg
cwtl
push
mov
mov
fstpt
jecxz
rcrl
scas
dec
pop
jns
dec
xchg
outsl
mov
push
out
in
xchg
push
pop
lcall
jbe
ret
mov
mov
fstpt
xor
xchg
mov
pop
lods
xchg
mov
xchg
adc
popa
loopne
mov
sub
mov
cmpsl
outsl
jmp
imul
in
xlat
push
mov
mov
test
mov
fwait
xchg
mov
outsl
out
mov
xchg
fsubr
mov
dec
sbb
pop
shll
int
cmp
dec
lahf
dec
aam
mov
mov
shl
cltd
pop
nop
jne
fnstcw
lods
mov
adc
je
cmp
aam
scas
cmpsl
lret
xchg
mulb
aas
xor
leave
cltd
jmp
sahf
lahf
mov
mov
pop
mov
aad
xchg
sbb
cmpsl
dec
mov
xchg
jmp
rcrb
fisubl
add
or
mov
mov
mulb
xchg
in
insl
mov
mov
inc
arpl
daa
sub
sub
and
lret
jo
in
jb
popa
mov
mov
std
xor
mov
lods
test
mov
xchg
pop
or
cmp
xor
sbb
and
mov
add
scas
imul
imul
movsl
push
out
cmpsb
xchg
adc
enter
push
daa
jbe
ret
sub
mov
push
add
xchg
repz
ficompl
scas
mov
sub
lods
sub
pop
test
push
lahf
pushf
mov
push
push
xchg
push
mov
enter
scas
push
sbb
xchg
lret
mov
fcmovnb
or
mov
mov
fwait
lret
insl
lcall
mov
mov
mov
sbb
adc
test
dec
mov
jbe
in
lret
mov
cmpsl
inc
cmp
inc
mov
jp
mov
mov
mov
inc
mov
cmp
scas
mov
xor
inc
mov
stos
mov
cmp
xchg
scas
iret
out
sbb
popa
xchg
cld
mov
fisttps
lods
std
lods
dec
mov
adc
inc
fwait
ja
cmpsl
jb
mov
ret
in
lcall
stos
fimuls
mov
mov
sbb
jns
fistl
mov
mov
in
dec
sub
dec
jle
xchg
repz
mov
mov
adc
lret
mov
push
ficoml
sbb
xor
push
sbb
cmpsl
shll
lahf
ret
xor
outsb
lea
rcrl
icebp
lods
pushw
mov
mov
and
mov
lds
rolb
xchg
imul
add
pop
leave
lods
pop
leave
dec
xchg
lods
cmpsl
xchg
fisttpll
inc
mov
lea
mov
outsb
sti
shll
jmp
mov
test
fistpll
add
mov
in
scas
mov
or
xchg
mov
and
jae,pn
fiadds
in
pop
xchg
mov
sahf
adc
cld
ret
mov
lods
xor
inc
scas
mov
mov
test
je
mov
shlb
imul
xor
fcomps
int
dec
and
sbb
dec
stos
orl
jecxz
mov
in
pop
rorl
ret
mov
xor
cmp
ror
enter
inc
sbb
xchg
outsl
test
inc
pop
sub
mov
mov
mov
adc
in
pop
ret
cmpsl
fst
mov
mov
inc
imul
daa
mov
cwtl
int
sbb
scas
jecxz
repnz
pop
cmpsl
sahf
shll
push
cli
adc
out
divl
test
lds
add
xchg
loop
mov
enter
push
outsb
mov
in
ja
int
orl
cmp
ja
cmp
lahf
iret
daa
ret
mov
lea
sti
hlt
nop
sbb
or
mov
xchg
xor
enter
scas
cmp
mov
xchg
or
inc
xor
addr16
ret
sbb
pop
imul
lods
fistpl
cltd
dec
jns
stos
cmpsl
pop
xor
popa
sbb
mov
and
xchg
hlt
je
inc
mov
mov
xchg
mov
or
add
cmp
scas
fwait
jbe
sbb
cwtl
fsts
imul
das
add
xor
dec
xor
enter
mov
dec
inc
mov
xchg
or
icebp
lret
hlt
push
mov
dec
mov
loope
mov
mov
xor
hlt
sub
push
inc
xchg
dec
sub
xchg
cmpsb
nop
mov
mov
push
add
jecxz
mov
ss
mov
xchg
sbb
movsb
jmp
test
cmp
mov
mov
dec
pushf
cltd
push
and
outsb
imul
repz
mov
lcall
sti
daa
xchg
ret
adc
leave
lods
fistl
sahf
jnp
loope
inc
cmp
xchg
jbe
push
mov
daa
sbb
inc
sbb
push
sub
int3
ret
jge
mov
test
and
outsb
mov
aas
xor
popf
insl
xchg
test
into
mov
aad
pusha
lahf
xchg
dec
xchg
cmpsb
das
mov
ja
mov
pop
icebp
xchg
xchg
nop
mov
xor
es
cld
xor
xchg
cltd
dec
std
pusha
and
popf
mov
mov
outsb
mov
xchg
jecxz
out
and
hlt
test
ljmp
sarl
xchg
mov
mov
mov
adc
xchg
sub
pusha
leave
mov
in
rol
imul
std
sub
fcomps
test
iret
fcmovb
mov
xchg
xchg
mov
outsb
mov
leave
movsb
pop
push
mov
and
lock
shll
xor
dec
mov
mov
xchg
mov
pop
pushf
in
call
push
xor
scas
pop
lahf
push
ror
mov
cmp
jne
ja
pop
cmpxchg
jg
lcall
jb
scas
sarb
pop
mov
rcl
push
inc
sub
dec
xchg
jne
cmp
cwtl
pop
sbb
xor
rol
cmpsl
jne
imul
mov
arpl
lea
mov
out
mov
mov
scas
fidivrs
movswl
adc
mov
mov
and
stc
mov
lret
sti
dec
adc
mov
sub
xchg
test
lea
gs
insl
daa
add
push
or
inc
loopne
ret
mov
sub
sti
inc
mov
mov
xor
loope
ret
icebp
inc
pusha
insl
in
sub
cmp
andl
int
stos
mov
outsb
adc
scas
adcl
and
mov
in
mov
push
icebp
mov
iret
and
in
pop
jno
cmp
mov
lea
stos
ret
push
dec
out
lods
mov
inc
mov
sbb
pop
mov
mov
out
outsl
pop
jbe
mov
push
lea
movl
cwtl
pmulhuw
push
lahf
xchg
ret
cmpsl
xor
scas
mov
stos
repz
insl
imul
cmpsl
add
popf
ret
scas
int3
ficompl
sub
ljmp
sub
cmp
fstpl
dec
outsb
scas
xor
mov
pop
shr
sbb
sbb
xchg
jne
test
stos
xchg
sti
lret
mov
stos
mov
faddl
mov
cltd
jmp
or
stos
sti
dec
cwtl
fs
stos
data16
test
lods
ret
cmpsl
std
mov
shlb
mov
pop
dec
push
fwait
mov
add
cmc
xchg
rolb
push
test
sub
sub
lcall
add
mov
cltd
xor
shlb
imul
mov
cmp
mov
in
ret
dec
push
add
mov
cltd
lret
in
and
imul
push
divl
mov
push
dec
jbe
mov
dec
mov
std
add
lcall
outsb
in
je
dec
xchg
xchg
and
in
xchg
outsl
push
mov
or
fwait
mov
lods
rolb
pop
lret
mov
mov
lods
cmp
incb
xor
mov
movsl
jle
dec
pop
popf
mov
enter
sti
mov
sahf
jo
addr16
adc
mov
lcall
push
mov
adc
mov
mov
mov
aas
xchg
jmp
in
mov
jl
mov
movsl
mov
xchg
sub
imul
icebp
in
daa
inc
fdivrl
xchg
jecxz
imul
jmp
popa
add
ret
jmp
iret
mov
ja
sahf
lods
lea
lods
outsb
ret
jno
adc
dec
enter
addr16
ds
adc
xchg
leave
call
stos
push
xorl
rol
shlb
mov
lcall
stos
mov
jae
xchg
mov
sub
and
mov
test
sub
xchg
xor
int
mov
je
sbb
sub
dec
mov
stc
mov
out
in
pushf
movsl
loopne
hlt
xor
sub
mov
test
stos
push
adc
or
mov
ja
push
arpl
aam
ljmp
pop
test
hlt
lret
jle
fwait
dec
shl
or
jnp
scas
push
fs
aas
out
ret
jne
aas
jl
add
and
ret
scas
loope
xorl
xchg
std
leave
or
mov
pop
shr
out
test
push
lods
pop
rcll
ret
or
pop
push
xchg
cmpsb
int
shrl
jg
sub
jns
cmp
and
mov
into
mov
stos
jns
incl
sbb
daa
fcomps
popf
lods
in
popf
lea
pop
mov
shrb
sbb
ret
daa
popa
jns
lods
addr16
lea
mov
loop
mov
ja
out
loopne
mov
xchg
mov
or
adc
daa
and
sub
jne
stc
add
push
imul
mov
dec
xlat
outsb
je
mov
lahf
nop
mov
fisubrl
xchg
sbb
lods
jl
jle
lock
rcrl
outsb
inc
nop
sahf
xor
call
xor
adc
jae
cwtl
stos
in
add
icebp
lods
insl
push
mov
xchg
mov
ret
jae
mov
xor
mov
mov
aam
jbe
xchg
es
mov
add
call
jne
outsb
pop
jle
xchg
sub
int
dec
stos
popf
shl
mov
popl
les
mov
xchg
popf
and
stos
xor
sti
mov
mov
popf
je
sbb
lea
bound
push
mov
movsl
ret
scas
ret
push
movb
add
enter
push
mov
jno
test
mov
fsubrl
mov
mov
cmpb
mov
push
fs
popa
pop
lea
lods
rclb
xorl
xchg
push
push
sub
sbb
les
pop
pop
or
lds
sub
sub
xchg
lcall
das
sar
pushf
or
shl
sarb
ffreep
sub
cld
push
int3
test
lods
movsb
jmp
xchg
or
add
adc
mov
cltd
aas
sahf
xchg
sahf
pop
xchg
sub
dec
popf
pop
insl
push
mov
test
movsb
mov
shlb
testb
lcall
inc
pop
scas
gs
mov
xchg
add
lods
jecxz
cmp
mov
ljmp
lahf
adc
lahf
add
mov
mov
xor
mov
std
repz
mov
lcall
xchg
imul
ret
cmc
call
xor
out
xchg
imul
xor
or
xchg
sub
outsb
scas
and
popf
movsl
pop
outsl
lods
fdivrl
mov
xchg
xor
xchg
ljmp
xchg
scas
xor
mov
lahf
lret
mov
std
popa
lcall
leave
push
int
cmp
jg
jmp
fstl
mov
xchg
add
sbb
nop
mov
scas
push
lahf
jmp
inc
xchg
mov
adc
ret
cmpsl
inc
clc
popf
mov
xor
lods
xchg
shr
fidivrs
dec
outsl
lcall
sti
mov
ss
cmp
xchg
dec
sahf
icebp
je
xchg
lods
mov
push
cmpsb
ficoml
mov
cmp
insl
push
lcall
loop
xchg
adc
mov
xor
or
ret
imul
cli
or
pop
xchg
outsl
fsubrp
imul
mov
add
sub
clc
pop
les
ja
clc
stos
pop
xchg
mov
mov
xchg
lea
adc
sbb
sub
gs
xchg
xlat
mov
lods
dec
out
mov
push
mov
mov
xorl
sbb
setae
ja
dec
enter
xchg
popf
scas
dec
ja
inc
mov
mov
ret
daa
in
imul
sahf
sbb
js
mov
ss
push
je
xor
lods
jae
mov
ds
mov
mov
in
pushf
popf
push
test
dec
addl
add
mov
adc
fwait
sub
mov
call
mov
jmp
cli
dec
mov
push
mov
pop
mov
test
rolb
sbb
pop
mov
dec
popf
pushf
xor
mov
add
mov
popf
cld
out
mov
mov
fwait
dec
push
in
inc
sbb
std
dec
lods
fbld
cmp
dec
mov
lods
xchg
ss
fisubrl
out
lret
cmp
bound
in
sub
push
hlt
hlt
xchg
or
xchg
xor
pop
mov
mov
fwait
mov
push
cwtl
cld
mov
mov
pushf
xchg
in
nop
and
imul
mov
lods
mov
out
rorl
lahf
push
mov
mov
popf
adc
mov
sub
mov
mov
push
fwait
mov
pop
adc
add
mov
in
repz
repz
xor
mov
adc
mov
je
push
add
mov
ja
pushf
imul
arpl
xchg
ffree
movb
ret
test
inc
mov
insb
jnp
lea
inc
sbb
fwait
test
popf
xchg
in
add
mov
jmp
in
lds
mov
mov
scas
mov
fwait
in
jmp
inc
pusha
pushf
imul
rcrl
or
mov
and
adc
jae
cltd
xchg
loop
pop
ja
mov
in
insl
mov
cwtl
mov
mov
jo
ret
xor
xchg
movsl
sti
pop
and
push
es
nop
lret
sub
sti
mov
pop
ret
mov
push
mov
fildll
mov
push
push
mov
pop
fdiv
mov
mov
loope
pushf
addl
or
stos
xchg
adc
add
outsl
ret
ss
sub
adc
cltd
jne
cld
test
testb
test
sbb
popf
mov
popa
cld
mov
cltd
test
iret
imul
leave
mov
shl
and
stos
sarb
push
sub
call
mov
aaa
mov
jne
pop
jecxz
adc
mov
xchg
divb
testl
mov
dec
dec
cmp
dec
mov
mov
mov
sbb
mov
or
inc
jne
inc
setp
or
mov
xchg
cwtl
mulb
cwtl
mov
mov
in
int3
ret
icebp
mov
nop
ds
mov
jbe
nop
insb
push
add
xchg
popf
cmp
jbe
imul
mov
mov
mov
dec
popf
test
add
and
and
pop
add
ljmp
lcall
repz
lods
negl
test
int
sub
mov
xor
add
sahf
pop
movsb
jne
mov
push
xor
adc
lds
cmp
or
dec
pop
repnz
inc
jne
loope
addr16
pushf
shlb
jge
in
mov
sub
mov
jo
cmp
dec
lahf
lea
sub
inc
push
xchg
cmp
mov
les
and
mov
or
scas
sub
add
outsb
loop
cmpsl
mov
jle
mov
mov
lret
ret
data16
mov
mov
mov
ficoml
xchg
mov
xchg
push
mov
cmpsb
push
aad
jle
ja
mov
push
daa
mov
sti
push
mov
rcr
mov
push
mov
lahf
inc
mov
scas
xchg
push
nop
shll
ss
stos
outsb
stos
clc
push
sub
fldt
jb
mov
and
pop
jae
shrl
sti
fnsave
outsl
lods
mov
inc
xor
popf
ret
push
jmp
pop
pushf
sarl
addl
push
fsubrs
mov
imul
int
and
lds
dec
repnz
xchg
jg
fisttpl
lods
sarb
popl
lds
stc
pushf
jg
or
or
cmpsl
adc
add
je
scas
pop
mov
push
mov
movsl
mov
sbb
push
mov
mov
fnsave
popa
mov
outsl
xchg
rorl
mov
adc
mov
mov
lods
xor
mov
mov
xchg
lea
mov
push
arpl
pop
enter
mull
pop
mov
mov
sub
xchg
sub
outsl
mov
jg
mov
cmpsl
dec
push
inc
cmpsl
cltd
leave
hlt
pushf
shrl
ss
int
cmp
and
xchg
icebp
js
mov
add
ret
imul
into
and
in
cmpsb
stos
cmpsb
jge
or
xchg
int
iret
adc
push
mov
shr
jb
mov
ds
outsb
pop
mov
jae
mov
xchg
std
mov
fdivrl
ret
out
pop
mov
sub
int3
jno
out
lea
daa
sbb
push
mov
mov
mov
incl
mov
out
out
lods
mov
sub
push
filds
popf
mov
inc
mov
mov
ja
inc
aas
lcall
cmp
mov
mov
iret
hlt
dec
divl
insb
in
scas
jmp
mov
jl
mov
cltd
or
insl
ret
insb
mov
mov
lods
mov
in
sbb
movsl
std
push
add
ret
mov
pushf
stos
outsl
dec
adc
and
mov
xchg
mov
mov
ss
pop
mov
scas
lahf
loope
out
xor
lcall
or
sbbl
xchg
cmpsb
in
imul
cmpl
mov
push
roll
mov
jne
out
popf
mov
jb
push
dec
dec
xor
fucomi
jmp
xor
rolb
mov
enter
daa
sbb
fists
dec
scas
xor
xchg
cmc
xchg
sub
lods
fcmovnu
int
mov
mov
stos
or
mov
shll
mov
jae
movsb
jo
jle
mov
mov
xchg
bound
jmp
enter
sahf
scas
or
fcoms
sub
cwtl
mov
cmp
or
test
daa
ret
jbe
inc
jmp
dec
js
xchg
xor
cmp
push
fwait
mov
gs
sub
repnz
ja
ret
das
or
int
sti
or
mov
cwtl
cmp
stos
mov
cmp
mov
popa
in
mov
xor
mov
lods
pop
jns
enter
lea
push
mov
mov
roll
mov
es
mov
bnd
xchg
mov
add
sbb
fisubrs
mov
mov
mov
pop
pop
imul
popf
ret
cld
adc
lcall
hlt
fists
scas
and
push
mov
repz
lcall
lock
mov
or
pop
repz
xchg
push
test
lds
les
insl
mov
or
lret
inc
enter
jne
mov
in
dec
adc
imul
sti
cli
mov
mov
sbb
cld
lods
mov
mov
lods
popa
push
mov
js
aas
in
lods
jl
lds
xchg
jmp
xchg
shll
sbb
mov
pop
cs
pop
in
mov
stos
add
lret
in
mov
stos
jnp
mov
popa
mov
or
ja
in
pushf
xchg
clc
imul
mov
inc
dec
das
sbb
xchg
shll
iret
leave
mov
pop
mov
insb
dec
lds
jmp
adc
lods
repnz
cmpsb
stos
fwait
lahf
ret
lods
out
mov
pop
jne
add
mov
cmpsl
mov
mov
popa
mov
sarl
xchg
scas
scas
fcomps
scas
rorb
rcll
pop
in
nop
push
pop
mov
repz
or
fistpll
mov
ret
sbb
mov
mov
push
mov
shrl
ljmp
sub
icebp
xchg
insb
xchg
notb
idivb
insl
loopne
nop
sub
mov
jne
xchg
and
jns
mov
inc
scas
dec
in
orb
dec
sub
adc
cmpsl
mov
mov
mov
jae
sub
lea
insl
xor
mov
fwait
dec
stos
imul
sbb
lahf
sub
imul
scas
lea
add
and
sub
push
mov
pushf
fnsave
mov
icebp
lea
jle
lods
shrl
imul
mov
mov
rcll
dec
test
iret
mov
push
sub
cmc
jmp
sub
iret
shll
aas
xchg
xor
daa
sub
lods
stos
outsb
cmpsl
dec
lods
lea
pusha
outsb
push
fbstp
pusha
lods
outsb
cmpsl
xor
pop
mov
add
xorb
adc
inc
btcl
xor
xor
jne
add
xchg
leave
mov
fistpl
std
jge
mov
cmpsb
outsl
xor
mov
frstor
scas
push
mov
test
lods
mov
mov
add
leave
mov
mov
push
adc
out
push
xchg
sub
mov
subl
hlt
sub
sbb
cmp
lcall
cltd
cld
scas
jne
clc
es
lds
movsl
stos
aas
stos
xor
mov
mov
lods
add
sarl
jmp
cmc
ret
cmpsl
sbb
ret
pop
int3
sbb
jmp
jno
sahf
xchg
cmpsl
add
mov
jecxz
dec
subb
push
mov
mov
and
mov
lcall
add
cwtl
je
mov
outsb
xchg
push
pusha
shrb
mov
fisttps
or
loopne
enter
mov
ret
icebp
sbb
popf
fucom
insw
call
ret
or
jo
leave
nop
fsubrl
mov
lret
pop
mov
and
sbb
mov
cld
scas
das
out
xchg
mov
in
imul
lods
xor
xor
daa
imulb
adc
xchg
js
xchg
xor
jbe
mov
or
ret
ljmp
mov
adc
lods
outsb
or
mov
xchg
ret
push
jmp
sbb
ret
jo
or
repz
mov
popf
inc
fcmovb
scas
lea
push
xchg
mov
push
in
push
mov
xchg
lds
outsb
lds
and
jbe
pop
inc
mov
or
inc
pop
outsb
mov
out
pop
ret
xor
xchg
sub
push
leave
mov
jle
pop
mov
jnp
mov
pop
mov
inc
cmp
adc
nop
adc
lods
dec
dec
adc
mov
fnstsw
fwait
repnz
shlb
divb
dec
add
mov
mov
xchg
dec
jmp
mov
cmp
ja
mov
test
pop
mov
sti
aas
outsl
das
sti
pop
mov
sbb
popa
sub
mov
jo
mov
mov
cwtl
fwait
ret
ja
pop
iret
popf
insb
cmpsl
lea
imull
cmp
scas
outsb
adc
cmp
xor
outsb
push
or
imul
sbb
out
cli
add
insl
mov
xchg
fsubr
mov
add
loopne
sbb
cwtl
mov
int
cltd
push
and
rolb
loope
or
fldt
mov
mov
icebp
mov
aam
sub
pushf
xor
ss
mov
ljmp
mov
inc
add
lods
insb
push
xor
sbbl
xchg
stos
cwtl
xchg
mov
push
mov
dec
test
jns
out
mulb
xchg
sub
fwait
ret
imul
shrl
hlt
dec
sbb
out
mov
pop
pop
xchg
mov
sub
out
popf
mov
stos
gs
xchg
out
jne
std
loopne
mov
leave
push
testl
adc
mov
jae
xchg
xchg
xorb
sahf
in
mov
jns
cmpsl
dec
xor
js
sbb
scas
xchg
neg
pop
sahf
in
cmpsl
repnz
mov
lds
fld
daa
mov
shll
xchg
xchg
stos
mov
cltd
test
out
stc
mov
lods
addr16
or
std
xchg
or
mov
sbb
lods
mov
call
push
leave
in
push
rcrl
xchg
dec
adc
xchg
cs
dec
mov
jmp
ret
fwait
add
xchg
lock
nop
lret
loope
jae
mov
xor
popa
mov
mov
cmpb
dec
mov
outsb
rcll
mov
xchg
leave
jb
xchg
dec
sub
call
jno
push
mov
mov
or
lods
lcall
pop
scas
mov
adc
adc
out
push
sub
mov
add
xor
outsb
mov
popw
std
test
xor
or
scas
jmp
pop
outsb
cltd
ret
mov
clc
xlat
out
lods
arpl
xchg
imul
mov
dec
out
clc
sbb
mov
push
leave
fwait
push
xor
dec
cs
sbb
jo
pop
std
ret
mov
and
loopne
pop
nop
or
enter
dec
jns
mov
int3
jbe
mov
xchg
cltd
mull
mov
pop
ret
sti
int3
pop
xor
mov
mov
jae
lea
cmpsb
mov
std
pushf
bound
sahf
mov
lods
out
outsb
mov
pop
cld
mov
mov
mov
push
rclb
push
std
mov
mov
stos
iret
mov
pusha
movsl
int3
imul
into
je
out
push
lret
ljmp
add
push
mov
xchg
jg
popf
mov
mov
scas
into
xor
jbe
xchg
ret
cli
std
xchg
mov
lods
ret
adc
out
lret
xchg
xor
mov
test
ret
movsl
lods
popf
mov
hlt
sub
imul
jb
ss
ret
lods
jbe
mov
and
mov
xchg
jmp
push
xchg
mov
jb
scas
or
test
xor
out
mov
scas
mov
mov
lcall
das
rcrl
test
lahf
adc
jmp
jge
outsb
xchg
out
mov
in
cwtl
aaa
pushf
jbe
pushf
dec
jg
cmpsl
add
cmc
sahf
mov
mov
pop
insl
mov
xlat
mov
or
outsl
cmc
js
mov
cmp
sub
mov
mov
rorb
sub
aam
lcall
stc
out
or
fldt
mov
ss
xchg
in
imul
bound
mov
mov
scas
lret
ljmp
dec
push
mov
ja
mov
mov
mov
scas
mov
dec
scas
outsl
loopne
pop
hlt
mov
cmc
mov
jo
mov
jle
mov
xchg
test
sub
or
push
int
mov
xor
jbe
mov
mov
inc
scas
xor
xor
pop
jecxz
stc
outsl
mov
out
outsb
mov
rolb
and
popa
test
cmp
sub
call
inc
and
mov
mov
shlb
xor
cltd
pop
sahf
ret
repz
movsl
je
or
aas
lea
mov
mov
sub
dec
lahf
aad
dec
mov
ljmp
xorb
pop
stc
scas
push
test
inc
sub
int
je
test
call
pushf
scas
std
mov
repnz
leave
pop
push
mov
jno
lahf
pop
test
inc
mov
sbb
sub
mov
dec
mov
xchg
jle
jmp
jge
outsl
dec
mov
mov
xor
aam
fs
push
xchg
insl
out
cmp
in
mov
mov
cmpsl
andb
test
mov
das
push
loope
lret
mov
popf
mov
imul
je
mov
inc
dec
xor
xor
mov
lahf
test
lret
lret
jne
jg
stos
jno
sar
xchg
and
jbe
aas
xchg
xchg
cli
jae
push
xchg
mov
outsl
mov
push
lea
aad
sbb
out
mov
int3
or
andl
loope
and
add
cmpsb
cs
aad
clc
mov
imul
ja
and
idivl
add
pop
jb
test
fildll
aad
cmp
jmp
mov
jmp
mov
xlat
xor
xorl
mov
mov
jle
jmp
adc
loop
pop
mov
sbb
lret
cli
and
jle
pop
inc
inc
fwait
les
aad
inc
mov
xor
mov
add
iret
ja
mov
ss
xor
mov
popf
push
cs
pusha
rol
add
xor
aaa
inc
mov
mov
xchg
sub
adc
imulb
xchg
push
mov
mov
adc
add
lea
adc
loop
lahf
mov
lea
imul
std
mov
push
mov
insb
mov
loop
mov
mov
lret
outsb
adc
xchg
sub
mov
mov
add
pop
jg
push
int3
xor
push
rep
je
sti
rorb
scas
rcll
ret
mov
mov
or
icebp
outsb
lock
lods
inc
mov
idivb
in
dec
pop
lcall
push
adc
cmpsl
xor
sahf
jge
mov
mov
loopne
daa
mov
fadds
lock
mov
roll
outsb
ret
mov
shrl
or
scas
mov
xor
xchg
xor
ficoms
or
sub
xchg
test
out
sarl
jl,pn
xchg
lock
int
xchg
xchg
insb
push
push
mov
mov
add
test
xchg
mov
mov
or
pop
xchg
lods
jae
in
xchg
or
sti
sub
cmp
mov
xchg
roll
xbegin
nop
cltd
fisubs
xor
sub
lcall
sbb
mov
and
xchg
lret
mov
mov
dec
lods
push
movsl
adc
negl
imul
add
add
mov
mov
mov
loope
andb
ret
inc
pop
and
loope
mov
fld
jmp
and
outsl
sahf
enter
jmp
mov
mov
mov
stos
pop
push
xchg
fwait
shlb
mov
lea
sub
adc
scas
out
cmpsl
cmc
dec
sbb
scas
mov
pop
lea
in
pop
push
je
inc
mov
push
int
lret
shll
prefetch
mov
push
enter
jg
xchg
add
ja
xor
xchg
mov
nop
xlat
popf
xor
sti
fldl
sub
or
movsl
mov
adc
ret
mov
aas
add
stos
sub
sub
sti
mov
mov
leave
mov
bound
pop
pop
mov
leave
xchg
mov
frstor
mov
xchg
movsl
mov
push
xor
hlt
lods
sub
pop
daa
insb
cmp
in
stc
test
push
pop
mov
popf
fwait
mov
mov
cmp
fstpl
fwait
or
ret
push
push
jmp
imul
mov
cmp
xchg
js
aaa
cltd
dec
scas
lods
popf
cmpsb
lods
or
out
dec
jle
sbb
mov
negb
test
and
adc
in
ss
xchg
mov
je
mov
mov
in
dec
loope
xor
inc
mov
in
pop
mov
inc
movswl
ret
push
scas
adc
mov
stos
or
jecxz
cltd
jmp
jne
mov
xlat
dec
repnz
lods
push
xchg
stos
lds
xchg
movsl
popa
sbb
stos
fidivs
test
fldt
mov
leave
fidivl
jl
xchg
imul
fistl
aam
mov
in
insb
add
fwait
add
jb
imulb
mov
dec
iret
mov
insb
mov
ljmp
sti
mov
fwait
pop
push
in
mov
push
mov
bound
mov
insb
and
movsl
xchg
or
rcrl
mov
insl
rorb
out
ds
out
cmpsl
adc
ret
in
test
inc
xchg
add
movsl
cli
dec
mov
outsb
les
cmp
jecxz,pt
adc
push
or
jns
xchg
xchg
mulb
push
stos
sbb
adcl
xor
lret
dec
inc
movsl
dec
push
fisubl
out
outsb
call
cmp
aas
lcall
sub
nop
in
int
jns
movsl
rcrb
iret
mov
jle
popf
mov
out
ret
xchg
ror
aad
cs
scas
sub
leave
cmp
pushf
test
mov
loopne
adc
xchg
mov
pushf
mov
sub
scas
push
mov
lcall
jmp
push
jecxz
ret
jo
loope
stos
test
mov
xchg
in
sar
lea
subl
pushf
lods
fs
cld
jle
pop
sbbl
mov
jne
dec
mov
xchg
push
outsb
xchg
outsl
sbb
in
push
xchg
rdmsr
sbbl
xchg
ss
cmp
fcomps
lahf
sti
mov
and
imul
mov
add
ss
outsb
jnp
cmp
dec
lcall
lea
push
sub
xor
dec
pop
shlb
cwtl
mov
adc
lret
mov
pop
mov
mov
xor
std
fwait
lea
mov
pop
ret
scas
lahf
jae
mov
fsubrs
notb
stos
fistpll
mov
aas
lcall
push
mov
cmp
adc
clc
lds
icebp
lods
outsl
fldt
in
sbb
insl
dec
mov
xor
scas
outsl
mov
ss
lret
out
pop
cmpsl
out
jle
mov
add
lods
xorb
push
popa
outsb
nop
mov
jecxz
mov
xor
insl
lods
fsts
mov
add
xchg
addr16
ljmp
movsb
jmp
push
xchg
jbe
mov
dec
xor
int
repz
nop
mov
in
iret
popf
stos
or
inc
xchg
xchg
hlt
lods
setle
pop
jl
icebp
loopne
xchg
mov
sub
xchg
idiv
mov
les
mov
into
xor
lahf
mov
cmpsl
xchg
mov
sub
ret
mov
leave
cltd
popa
cwtl
sub
out
mov
inc
popf
outsb
arpl
ja
jb
mov
and
shrl
lcall
cmp
js
xor
lcall
stos
push
dec
rcrb
ret
icebp
iret
cmp
or
les
mov
lcall
cld
cld
daa
inc
adc
mov
mov
cmpsb
outsl
or
cmpsl
rolb
xor
mov
mov
stos
mov
mov
xchg
jle
lret
or
adc
pop
sub
std
leave
sti
and
jmp
test
cmpsl
ds
daa
imul
xchg
mov
leave
mov
leave
mov
jmp
push
xor
scas
aas
out
lret
xchg
sub
pop
popf
scas
or
xchg
mov
xchg
mov
frstor
jne
mov
mov
mov
xchg
push
jmp
pop
xchg
mov
mov
mov
sti
call
xor
in
mov
lods
push
jbe
xchg
adc
sarb
mov
aaa
out
mov
mov
push
cmpsb
inc
sbb
jle
test
adc
add
jae
movsb
ss
push
xchg
aam
sub
aad
in
sbb
jecxz
mov
jnp
mov
and
rcrl
pop
jo
ret
and
push
scas
scas
or
gs
mov
lds
sub
xchg
sahf
dec
loopne
cmp
mov
mov
inc
mov
jmp
mov
test
in
cmpsl
stos
inc
mov
pop
jmp
stos
cltd
fs
stos
loope
repz
mov
fwait
mov
xchg
roll
sahf
mov
adc
fidivrs
sub
les
jne
mov
jnp
insl
sub
divl
popa
add
mov
sub
mov
mov
test
int3
ret
mov
into
scas
rcrb
iret
mov
nop
repz
orl
movsl
lods
icebp
in
mov
rol
mov
dec
test
mov
mov
or
xchg
lcall
push
mov
mov
fwait
enter
pop
jb
xchg
lea
pop
lods
mov
mov
loop
call
mov
mov
adc
outsl
push
xchg
adc
movsl
scas
add
test
lds
pushf
add
fucomip
push
test
mov
sub
sub
inc
jmp
lock
stos
push
out
pop
cmp
nop
lret
stos
sub
fwait
ret
cs
inc
dec
mov
shll
mov
jp
or
xchg
mov
xor
adc
mov
sub
in
cld
xchg
or
mov
mov
sub
mov
xchg
or
cs
not
add
dec
jecxz
movq
pushf
mov
adc
mov
xchg
adc
mov
test
mov
xor
cwtl
inc
in
mov
cmpsl
mov
outsl
push
cs
mov
pop
movsb
and
cld
xchg
dec
cmc
lock
xor
mov
mov
lret
cwtl
sbbl
mull
mov
ret
sub
stos
push
pop
or
mov
imul
cmp
mov
outsb
xchg
mov
arpl
stos
loopne
mov
xchg
test
pop
popf
ret
mov
call
fst
xchg
jmp
jp
imul
or
add
in
xchg
stc
cmp
push
sti
stos
inc
stos
mov
or
add
mov
ret
lods
lods
repz
mov
inc
jae
cmc
dec
fdivs
sub
outsb
mov
push
mov
push
sub
pop
push
pop
fwait
leave
mov
add
test
arpl
popf
inc
popf
outsb
outsb
cmpsb
xchg
and
imul
jne
lcall
ret
inc
in
outsb
push
xchg
jg
adc
int
cld
xchg
imul
popf
scas
sti
add
popf
sbb
and
enter
imul
push
imul
scas
push
mov
lock
mov
outsl
dec
jle
xchg
cmpsl
fsubrl
inc
mov
scas
and
xchg
xchg
xchg
ja
shll
sbb
mov
jecxz
in
add
xchg
mov
arpl
leave
hlt
lods
push
loop
movsb
stc
ss
imul
and
mov
loopne
test
pop
mov
mov
in
push
push
lea
mov
mov
adc
lock
pushf
mov
repnz
scas
arpl
xchg
out
mov
xor
ret
je
aad
inc
xor
les
sub
stos
xchg
fadd
popf
mov
dec
in
jne
scas
ret
pop
pushf
jmp
inc
out
sahf
and
jmp
push
jbe
and
int
xchg
mov
test
jne
mov
and
popf
movsb
mov
push
mov
and
xchg
scas
call
mov
std
xor
lods
das
enter
or
sahf
mov
dec
mov
mov
or
jge
adc
pop
pusha
jmp
cmp
fisubs
daa
dec
mov
decl
inc
lock
xchg
ja
push
add
out
outsb
add
mov
ret
ret
jno
adc
insl
test
test
mov
jmp
ret
push
dec
in
jle
push
pop
sub
mov
cltd
pop
sub
cmp
mov
das
mov
mov
sub
xchg
xor
xchg
sub
jno
int
dec
sub
xor
popa
enter
push
test
add
loopne
fwait
mov
out
stos
jle
cltd
cmpsb
cmpsb
imulb
pushf
daa
mov
iret
imul
dec
xchg
ss
xchg
jmp
std
xchg
dec
xchg
xchg
js
jo
mov
mov
sbb
addr16
popf
repnz
pushf
mov
ljmp
outsb
es
cmc
jne
mov
movsl
xbegin
mov
outsl
cmp
rorb
xchg
pop
mov
push
xchg
mov
push
lea
sub
or
mov
popf
xchg
out
imul
lret
lea
mov
fsts
mov
jne
cmp
sahf
sub
mov
mov
lods
adc
mov
xchg
jle
orl
test
dec
imul
ret
lods
mov
cltd
pop
adc
scas
mov
xor
push
pop
add
fsubl
cltd
scas
stos
gs
ret
out
inc
in
or
sbb
call
in
mov
mov
jno
in
jae
cmp
cmpsl
mov
xchg
roll
dec
jge
icebp
fsubs
sub
sbb
subb
into
outsb
clc
fdivrl
xlat
cltd
fnstsw
mov
xor
mov
mov
mov
out
mov
dec
insb
or
add
mov
xchg
mov
das
xchg
es
sub
orl
insl
out
mov
std
push
shll
movsb
les
imul
enter
mov
pop
je
mov
out
push
aaa
add
ret
jne
aas
clc
xchg
mov
leave
mov
mov
rorl
fdivl
fcomi
scas
pop
mov
lods
cmp
pop
mov
push
inc
cli
mov
cltd
pop
sub
shrb
scas
mov
roll
lds
ret
xchg
push
aam
or
add
in
ja
pop
jp
lret
sub
mov
jmp
call
fwait
aas
mov
out
mov
mov
add
mov
push
mov
ret
cmp
mov
daa
rcrl
cmpsb
in
cmc
hlt
jecxz
push
daa
cs
sarl
lods
js
out
xchg
mov
das
lret
in
ret
push
lds
xchg
add
test
push
mov
icebp
lods
sarb
sub
adc
arpl
ret
loop
mov
lahf
lret
pop
mov
fldenv
sbb
mov
and
jne
insl
popa
repz
adc
ja
lods
adc
cld
lods
int
dec
fldenv
xchg
and
mov
in
bound
mov
insl
xor
xchg
push
mov
mov
mov
xchg
xchg
push
out
pushf
lret
lods
jbe
cmp
dec
ret
mov
xchg
mov
mov
push
xchg
jne
dec
mov
mov
pop
in
mov
mov
mov
mov
ljmp
lahf
lret
dec
push
jmp
adc
mov
sbb
mov
adc
push
mov
mov
mov
xor
fistl
pushf
icebp
pop
xchg
mov
lods
push
mov
mov
mov
push
cmpsb
es
repz
jo
mov
int
sarl
popa
push
mov
and
sub
mov
sbb
sub
out
push
mov
mov
sbb
movsb
cwtl
outsb
addb
cli
popf
sahf
adcb
dec
mov
shr
movsl
xor
sub
stos
adc
sbb
ret
mov
test
cwtl
inc
dec
jns
jl
int
mov
loope
add
cmpsb
test
mov
sub
rcll
imul
jo
lea
xchg
loope
fwait
inc
lcall
mov
ret
adc
xchg
movsl
or
stos
push
mov
pusha
mov
mov
sbb
lock
std
mov
xchg
jecxz
jne
and
fwait
pop
cmp
outsl
mov
xchg
push
outsl
call
sub
aad
and
mov
int
mov
mov
dec
es
xchg
jle
push
mov
adc
xchg
cltd
in
shlb
mov
pop
or
mov
push
mov
ret
mov
shrb
xchg
mov
insb
fsubrs
mov
xchg
jns
inc
add
xchg
xor
shl
xchg
scas
sub
lahf
aad
sub
push
jmp
mov
in
int3
mov
xchg
sub
in
sub
stos
mov
lret
jno
lods
imul
lods
das
jge
jbe
push
nop
xchg
xlat
sbb
std
rorl
aam
imul
mov
in
in
dec
inc
mov
outsl
ror
mov
xchg
in
popf
mov
dec
ja
in
ret
mov
fisubrl
ret
mov
sahf
inc
cli
xor
ret
in
sub
stc
xor
sub
sbb
mov
pop
add
cmpsb
mov
and
je
or
inc
clc
sbb
decb
das
pusha
mov
loope
outsl
sti
loope
insl
mov
mov
jg
xchg
xchg
push
mov
outsb
sbb
pop
scas
aas
fwait
stos
adc
mov
cs
lret
xchg
setae
or
inc
shrl
rorl
cmpsb
out
ret
outsb
jae
rclb
stos
mov
lahf
outsl
cmp
pushf
dec
sub
cmpsl
in
imul
sub
cmp
cmp
pushf
and
xchg
nop
push
xchg
fwait
shll
cmc
push
cmpsl
stos
imul
mov
movsb
mov
in
xchg
insl
adc
test
mov
jns
sub
push
mov
mov
fisttpl
xchg
insl
pop
cwtl
inc
mov
nop
adc
sbb
adc
xchg
movsb
xor
xchg
lods
pop
xchg
mov
stc
mov
adc
mov
or
ret
daa
sbb
add
in
mov
mov
pop
iret
mov
push
ret
sub
popf
insb
cmp
mov
xchg
mov
add
mov
arpl
jo
xor
rolb
std
xchg
dec
stos
and
mov
mov
fstpt
in
mov
cwtl
repz
jb
movsl
in
ljmp
loopne
test
xchg
out
mov
outsl
int3
scas
push
mov
divb
add
sub
dec
scas
lea
icebp
push
xchg
outsb
lea
les
fld
mov
add
jmp
subl
ja
cmp
xorl
mov
lods
cltd
mov
loopne
lea
sub
ret
das
xchg
outsb
cmpsl
imul
push
mov
int3
nop
imul
mov
xor
fstp
ret
aad
push
loop
scas
out
pushf
mov
pop
inc
mov
mov
mov
add
sub
mov
loopne
arpl
test
xchg
lret
adc
cmpsl
mov
jnp
out
lods
ss
dec
sti
loope
sub
xchg
insb
mov
fwait
movsl
sub
mov
bound
insl
into
jae
sub
insb
push
loop
mov
imul
les
movsl
into
mov
xlat
xchg
mov
outsb
cmpsb
push
push
scas
xchg
shll
roll
mov
int3
mov
xchg
cltd
xchg
mov
xlat
scas
push
in
xor
test
xchg
cmp
mov
mov
into
mov
scas
mov
and
ja
mov
rorb
icebp
jne
sbb
push
xchg
mov
sub
andb
mov
and
jnp
ss
in
dec
test
fcoml
push
ret
lret
and
inc
out
lods
jbe
movsb
insb
iret
sbb
xchg
jno
dec
adc
stos
mov
das
call
pop
mov
lods
xchg
repz
xchg
cmp
imul
xchg
add
jns
enter
mov
mov
xchg
out
mov
pop
in
ret
jmp
vmread
pop
lea
std
xchg
daa
stos
mov
dec
sbb
jns
jb
mov
sub
insl
cltd
daa
pop
sahf
lcall
pop
dec
sbb
movsl
test
rol
jmp
out
pop
mov
mov
aaa
popf
push
mov
sub
jae
xor
xor
jns
and
lods
loop
xchg
scas
idivl
lcall
outsl
das
xchg
lods
mov
xchg
daa
add
fwait
popf
inc
iret
dec
popf
sbb
mov
mov
in
mov
aad
lret
mov
test
mov
fwait
sbb
ret
out
mov
jmp
lea
jns
outsb
mov
adc
int3
push
in
mov
dec
lret
push
nop
pusha
movsl
lahf
inc
push
imul
pop
mov
xchg
mov
push
mov
mov
push
adc
or
je
scas
test
push
inc
xchg
sub
xchg
mov
mov
pushl
xchg
cmpsl
leave
lahf
lods
ret
mov
movq
sub
or
mov
xchg
lret
cs
mov
mov
push
call
mov
adc
jmp
dec
mov
mov
push
call
movb
pop
shll
les
pop
jg
cltd
cmpsl
pop
add
in
mov
fwait
nop
loop
stos
jae
sub
mov
jecxz
andl
xchg
int3
mov
fwait
mov
mov
mov
or
xchg
jbe
mov
jmp
inc
movsb
xor
cmp
mov
or
adc
shlb
lods
lods
test
int
jl
pop
mov
clc
cs
fstp
movsb
sub
and
in
mov
or
jo
call
scas
call
imul
adc
out
ffree
mov
mov
dec
inc
sahf
inc
mov
leave
or
test
enter
scas
dec
in
in
sti
mov
xchg
adc
dec
test
rclb
cltd
jne
mov
cmc
mov
pop
enter
add
mov
sub
push
aad
adc
in
cwtl
ret
jae
movsb
nop
in
sahf
mov
imul
xor
jle
jne
test
inc
ret
pop
mov
xchg
ret
call
sti
out
dec
mov
lds
test
and
ret
hlt
movsl
dec
mov
dec
in
mov
xchg
mov
lods
fwait
lcall
sub
std
movsb
testb
push
xchg
mov
daa
gs
outsl
movsl
cs
pushl
loopne
mov
scas
js
push
mov
mov
mov
lcall
mov
sar
stos
mov
scas
shll
jb
and
imul
pop
ret
dec
xor
jne
lea
mov
cltd
test
ror
mov
inc
leave
daa
arpl
repnz
mov
shr
fists
and
icebp
orb
adc
fwait
mov
mov
xrstor
xor
mov
pop
push
xchg
mov
imul
xchg
test
jmp
push
jae
cwtl
lods
fnstenv
dec
dec
test
addl
test
aas
lahf
mov
lret
push
sub
scas
and
daa
pop
pop
mov
shr
cmpsl
ret
xchg
sub
add
jg
pushf
stos
shr
mov
jbe
lods
imul
scas
lods
stos
mov
jbe
xchg
xor
mov
mov
shlb
jne
jp
cltd
rol
xchg
insb
mov
push
xor
and
pop
leave
lods
in
lret
inc
jmp
and
call
cmpsl
mov
dec
hlt
xchg
cli
jecxz
frstor
int3
scas
incb
mov
adc
add
adc
lods
lea
fistps
adc
fnsave
xchg
mov
cs
and
mov
cwtl
loopne
cltd
jne
int3
fwait
jmp
jg
xchg
mov
shl
loope
mov
outsl
test
repz
xchg
sahf
mov
mov
xor
rcrb
mov
insb
popa
loopne
das
or
mov
hlt
fistl
mov
sbbl
add
mov
sbb
rcrl
dec
push
mov
setge
xchg
rep
scas
pushf
cltd
adc
jae
xchg
ret
xor
mov
xchg
jno
dec
scas
sub
dec
xchg
mov
cmpsl
xor
fwait
ret
dec
in
mov
iret
dec
push
pop
mov
mov
lock
mov
mov
push
xchg
mov
adc
aam
and
dec
pop
dec
xor
mov
pop
je
mov
lock
add
test
shrl
lods
and
mov
dec
sub
leave
jmp
sub
xchg
mov
loop
xchg
in
orl
inc
fsubs
repnz
lret
fldcw
out
xor
jmp
leave
mov
dec
js
hlt
in
nop
enter
mov
out
popf
mov
iret
push
lret
pop
scas
jecxz
lcall
scas
push
out
pop
adc
mov
cmpsl
ja
fstl
fwait
out
clc
cmc
inc
cmp
xor
lods
pop
pushf
lods
mov
imul
and
or
loopne
nop
or
shll
jae
cltd
stos
lods
sub
out
clc
movsb
adc
dec
aas
inc
les
in
fcoms
faddl
stos
mov
pop
movsl
stos
sub
imul
insb
xchg
dec
xor
pop
xchg
shll
stos
arpl
xlat
gs
mov
xchg
sbb
insb
adc
inc
sbb
add
lock
mov
inc
inc
stos
cmpb
pop
mov
add
ret
cld
and
test
repz
js
adc
push
loopne
out
xchg
jge
je
sbb
push
cmp
pusha
loop
jmp
pushf
pop
mov
fld
cli
inc
mov
jg
inc
inc
cmpsl
xchg
xlat
insb
sti
fadd
xchg
dec
push
jmp
loope
mov
jecxz
scas
outsb
pop
insl
pop
or
mov
pop
test
rorb
loope
out
push
fbstp
repnz
adc
cmc
stc
xchg
push
mov
jl
mov
and
mov
cmp
loop
pop
clc
adc
xor
add
adc
ljmp
loop
jge
and
stos
mov
lds
push
stos
jae
push
mov
inc
adc
cs
sub
shlb
or
mov
call
jo
xor
aaa
mov
mov
pop
pop
iret
adc
jb
repnz
mov
leave
aad
inc
shrb
dec
mov
pop
cmc
iret
aam
jl
stos
xor
nop
and
fdivrs
mov
rolb
add
mov
mov
lahf
es
imul
inc
aad
fisubl
mov
lods
adc
aas
call
or
clc
mov
mov
xchg
arpl
push
imul
scas
sbb
mov
fcom
mov
scas
pop
jecxz
call
adc
mov
stos
shl
mov
nop
cmpsl
stos
jo
int
pushf
pop
stos
sub
sahf
mov
ljmp
or
test
testb
stos
bound
cmp
add
scas
repnz
jne
xor
fwait
and
lea
stos
movsb
jg
rolb
mov
cmp
inc
mov
sahf
addr16
adc
into
add
mov
outsb
and
pop
enter
xchg
icebp
inc
pop
stos
add
push
or
imul
andl
xor
in
les
insl
sahf
inc
daa
ret
subb
fisubrl
mov
inc
cmp
adcb
jp
sbb
imul
fisubs
mov
je
insb
ljmp
stos
add
sarl
mov
lods
pop
stos
icebp
mov
out
cmp
push
stos
dec
test
xchg
sub
mov
into
out
dec
mov
jge
iret
aas
lds
inc
sahf
stos
into
pop
in
cmp
mov
mov
dec
fnstsw
stos
sbb
fwait
stc
insb
inc
fdivrl
xorb
sub
cmpsb
stos
jg
sahf
xlat
lret
int3
stos
test
xchg
scas
mov
leave
mov
add
inc
shlb
stos
push
xchg
dec
js
adc
daa
popf
int3
shll
xchg
push
movsb
rclb
ljmp
orb
xchg
dec
ret
push
jnp
mov
adc
rol
mov
pop
in
xor
jae
jl
negl
stos
mov
mov
mov
cmp
xchg
insl
xchg
ss
hlt
jb
fstl
push
rol
stos
xor
xchg
call
xchg
lock
mov
inc
jmp
sarl
cli
dec
mov
sbb
mov
jbe
stc
or
pushf
mov
mov
inc
outsl
and
adc
or
mov
pusha
push
pop
bts
lcall
stos
xchg
sub
fwait
dec
push
lret
data16
mov
or
push
dec
push
lret
sbb
inc
das
imul
push
pop
stos
mov
pushf
inc
and
cmpsb
xor
dec
stos
test
lds
stos
pop
jne
sbb
stos
notb
cltd
jl
and
insb
nop
das
adc
mov
xchg
enter
ret
and
jb
xchg
insl
xchg
loopne,pn
gs
mov
stc
call
movsb
xchg
mov
enter
add
and
adc
jg
lods
or
je
inc
cli
repnz
stos
stos
enter
add
inc
std
jmp
stos
xor
mov
lds
push
cmpsb
stos
cmpsl
sti
push
repz
stos
adc
pop
fwait
pop
mov
jae
fildll
dec
mov
add
insl
sahf
xchg
cmp
fldcw
stos
dec
cmp
loope
mov
fdivrs
enter
je
pop
stos
ss
stos
stos
stc
adc
insb
fs
mov
insl
out
stos
xor
or
aad
fs
data16
rclb
movsb
jae
pop
ja
push
stos
jge
aad
inc
fs
cld
leave
dec
stos
dec
cmp
imulb
add
xlat
movsl
cwtl
sub
jno
adc
adc
loop
fisubl
pop
stos
ds
xchg
pop
cwtl
push
icebp
stos
cmp
outsl
rcll
pop
in
lahf
and
in
lock
std
sti
xor
shlb
push
mov
fnsave
and
divb
data16
add
xchg
mov
pop
js
sub
aad
jb
test
or
mov
test
stos
xchg
aam
repnz
xor
bts
mov
subl
and
imul
movsb
stos
lahf
fimull
xchg
cmp
mov
mov
das
jns
or
dec
outsl
popa
or
mov
hlt
fsubrp
iret
dec
shll
incb
dec
jbe
xor
stos
xchg
sbb
dec
pop
push
dec
stos
test
stc
insl
pop
cwtl
loopne
stos
push
ror
jnp
scas
sub
mov
je
icebp
out
nop
stos
pop
cs
sub
push
arpl
fidivs
int3
stos
insl
adc
jnp
stos
scas
push
out
mov
dec
dec
mov
add
adc
mov
lods
xchg
mov
jp
sub
aam
sbb
stos
dec
add
cli
inc
imul
jbe
jmp
sti
pop
cmp
shl
jle,pn
add
je
aad
mov
mov
inc
and
lea
mov
push
xchg
sti
xor
ss
inc
addr16
lock
pushf
pop
pop
fdivl
insl
ret
shll
xchg
pusha
std
inc
add
push
jg
cld
insb
dec
xor
xchg
ret
mov
daa
jns
notl
ljmp
scas
jl
push
xchg
imul
mov
xlat
fs
xchg
cli
jmp
or
clc
and
gs
xchg
mov
adc
stos
clc
sbb
into
jae
pop
mov
popf
vcvtsi2ss
mov
jno
cmp
nop
stos
xchg
inc
cs
fnstsw
into
adc
mov
fwait
rolb
fsubrl
or
inc
jp
dec
push
push
sahf
bound
stos
adc
mov
stos
inc
leave
xchg
add
adc
movb
mov
adc
outsl
mov
hlt
push
fwait
adc
dec
push
mov
stos
mov
jle
mov
lahf
call
inc
jb
sbb
popf
rcrb
out
test
xor
cld
stos
xor
fnstcw
cmc
push
dec
stos
movsb
imul
stos
dec
hlt
sbb
mov
xchg
mov
jecxz
push
stos
out
inc
stos
mov
mov
cli
push
jae
dec
sbb
mov
pop
cmc
stos
loop
xor
or
sub
outsl
push
dec
stos
jae
dec
aad
or
cs
scas
push
xor
lcall
jno
sub
inc
mov
stos
ret
fisubrs
call
xchg
push
dec
stos
dec
mov
lret
pop
dec
in
cmp
out
sbbl
repnz
and
fwait
sub
add
call
xor
sbb
out
dec
stos
pop
cltd
and
stos
xor
cmp
cmc
iret
cs
les
mov
push
mov
and
sub
stos
sbb
clc
loopne
mov
stos
push
fwait
popa
xchg
stos
adc
les
in
xchg
out
gs
mov
test
mov
sbb
fbld
inc
add
inc
mov
cmp
mov
sub
fwait
and
cmpsb
dec
add
mov
push
pop
mov
mov
inc
inc
enter
pusha
lea
pushf
sub
mov
insb
mov
or
fisubrs
or
push
sbb
lods
fs
scas
rcrb
cmp
jo
pop
popf
daa
pop
stos
movsl
bound
pmaxsw
sub
xchg
cmp
fs
and
mov
stos
imul
pop
push
stos
and
and
stos
mov
push
pop
jo,pn
gs
stos
cmp
mov
fisubs
mov
in
insb
movb
xchg
dec
xchg
inc
cltd
data16
lret
mov
xor
test
stos
push
das
popf
cmp
lock
orl
aad
leave
fistpll
outsl
xor
cmpl
push
daa
ret
not
push
stos
adc
test
pop
lods
rcr
cwtl
hlt
jbe
aad
push
shrb
sub
mov
aam
push
xor
sti
sub
stos
pushf
jb
cmp
pop
imul
cmp
insb
cmp
jo
lea
adc
fwait
lea
xchg
xchg
or
cmp
das
or
jl
scas
outsb
xorl
aad
mov
inc
stos
mov
dec
jge
subb
or
xor
or
sbb
push
jb
dec
xor
je
stos
xchg
add
adc
ljmp
push
arpl
mov
enter
lahf
stos
xchg
cmp
sti
idivb
cmp
subl
push
adc
cli
cs
add
inc
add
stos
das
pushf
inc
bswap
push
addr16
mov
stos
lahf
inc
ds
inc
outsb
cwtl
stos
and
jmp
mov
scas
test
stc
lret
scas
out
sbbb
cmp
stos
fisubrl
mov
stos
jmp
pop
and
mov
jnp
stos
pop
inc
stos
subb
push
sub
mov
mov
jns
mov
sbb
stos
dec
cwtl
add
arpl
jns
sbb
aad
outsl
pop
push
xor
clc
movb
cmpb
xchg
stos
mov
out
stos
leave
inc
sbb
in
jb
imul
pop
or
mov
es
fwait
inc
jmp
jg
jmp
cmp
fstpl
mov
mov
stos
push
std
fwait
outsl
repnz
mov
sub
sbb
sub
jp
stos
imul
out
and
pop
stos
shl
leave
adc
cs
movl
cmp
lods
mov
popa
mov
or
jno
or
out
and
sbb
jo
lret
out
jle
fildll
xor
jmp
fmull
popf
outsl
and
call
mov
test
mov
cmc
stos
dec
pop
aaa
cmp
shrl
xchg
stos
add
ffree
in
scas
adc
test
cmp
ds
stos
rolb
add
mov
fldl
cs
cmp
sub
sub
add
inc
outsl
sub
cmc
xchg
sbb
xchg
mov
dec
adc
hlt
lea
cmpsb
loopne
imull
shrl
dec
mov
popa
aas
push
mov
cli
push
aam
int
rclb
mov
subl
and
in
pop
jg
sub
cmovge
scas
sti
cltd
hlt
fldt
inc
sbb
push
cs
stos
icebp
pusha
cmc
shrb
dec
jle
stos
in
lcall
stos
adc
clc
jge
stos
ret
xchg
xchg
inc
stos
ror
in
loopne
inc
mov
scas
dec
mov
rcll
iret
lods
repnz
and
insb
sbb
std
sbb
sarl
sub
or
stos
icebp
enter
add
inc
addr16
xchg
mov
add
outsb
mov
ss
xchg
in
inc
sarl
rolb
adc
in
data16
lret
sahf
inc
lret
stos
dec
sub
inc
gs
stos
movsb
dec
addr16
enter
sub
sub
lret
dec
cmpsl
lock
stos
inc
push
sbb
mov
jmp
stos
mov
dec
pop
leave
out
push
lods
xor
xor
dec
movsl
fwait
rcll
stos
rclb
sbb
jmp
fs
sbb
std
gs
aas
stos
incl
inc
push
in
jne
mov
cld
push
and
mov
inc
sbb
insl
sub
jno
xchg
jl
mov
scas
stos
jecxz
xor
xor
xchg
mov
inc
mulb
push
out
push
lahf
test
adc
insb
fs
dec
clc
fldenv
jb
sub
mov
in
mov
push
lods
lret
mov
pop
insl
mov
imul
test
pop
stos
pushf
sti
lds
or
mov
mov
adc
mov
or
aad
mov
cs
xor
stc
std
movsb
and
stos
push
dec
mov
stos
add
je
jo
inc
push
jae
jge
jmp
mov
ret
dec
lock
loope
stos
pop
pop
pop
call
lret
jbe
mov
xchg
xlat
repnz
loop
and
pop
insl
mov
shlb
sub
lret
je
push
xor
mov
cs
mov
xchg
arpl
stos
push
mov
int3
call
arpl
cltd
mov
fldcw
or
stos
sub
or
sbb
jbe
push
push
movsb
lahf
gs
add
repz
lds
lock
stc
xor
stos
pop
push
mov
outsb
stos
jl
jno
adcl
out
stos
lahf
xor
mov
in
popf
fimull
inc
aaa
stos
es
lahf
cmpsb
insb
jns
stos
cwtl
test
popa
das
in
mov
pusha
pop
int
stos
mov
ss
inc
fsubrl
aam
push
sbb
dec
mov
rol
pop
xor
jns
sub
mov
dec
stc
xor
pop
loop
mov
adc
mov
stc
xchg
and
adc
stos
cmp
adc
dec
clc
mov
mov
xor
mov
outsl
mov
jno
xchg
or
push
stos
add
into
push
lret
cmp
stos
mov
mov
fnstsw
in
fnstenv
mov
stos
fcompl
inc
sbb
add
sahf
xlat
call
adc
push
sub
pop
add
insb
inc
pop
cmp
mov
insl
mov
mov
adc
jmp
add
cld
stos
adc
push
mov
imul
ret
and
outsb
int3
mov
mov
popf
stos
push
ficomps
out
ljmp
jl
js
stos
clc
xchg
aaa
stos
inc
mov
xchg
stos
loopne
add
xchg
mov
stos
mov
mov
xchg
insl
sbb
mov
add
jnp
sub
lea
rorl
sub
fstpt
test
or
cld
leave
test
in
dec
xchg
icebp
xchg
or
sbb
inc
mov
pop
lcall
stos
shrb
cwtl
sar
outsl
xchg
and
aas
push
gs
or
push
nop
aaa
fnstenv
in
mov
cmpsl
xor
orl
stos
adc
stc
jg
sub
xor
lea
mov
scas
xchg
push
inc
fldt
mov
fsts
xchg
popa
and
sar
rcl
push
stos
insb
adc
arpl
push
repz
stos
dec
lret
push
xchg
ret
loopne
pop
mov
stos
stc
cs
inc
ds
stos
test
mov
and
daa
ret
mov
cmpsl
stos
sub
sbb
inc
and
icebp
sub
push
enter
add
inc
sbb
int
test
ret
add
mov
jne
bound
mov
cmpsb
stos
adc
repz
or
pop
xchg
inc
mov
push
lret
cwtl
sub
in
jmp
pusha
rcr
dec
pushf
addr16
push
mov
cmp
push
or
scas
mov
cmpsl
mov
jp
test
xor
jae
das
xchg
lcallw
push
addb
cmp
cmp
cmpsl
and
out
pop
pop
stos
js
cmpl
leave
mov
add
int
dec
std
in
jnp
dec
aas
pushf
push
mov
in
cs
dec
jns
cmp
mov
or
fs
sbb
or
stos
sub
jno
inc
movsl
enter
leave
loop
push
loope
add
xchg
rclb
xchg
xor
mov
pusha
stos
lock
mov
stos
pop
es
mov
fbstp
outsl
inc
xor
or
and
xchg
stos
fs
dec
pop
xor
insb
jns
push
mov
pop
stos
imul
cmp
aam
or
jb
roll
add
stos
imul
gs
cmpsl
stos
inc
lods
cmp
xor
jo
mov
or
push
mov
stos
or
mov
dec
enter
mov
stos
movsb
call
inc
stos
stc
dec
jbe
jle
mov
xlat
enter
imulb
xchg
aaa
mov
stos
xchg
mov
sub
sub
sti
nop
mov
xchg
stos
int
inc
dec
psrlw
jmp
pop
test
dec
push
or
xor
inc
stos
push
addl
sti
pop
aaa
push
cmp
std
pusha
xlat
imul
shlb
xor
icebp
and
lret
addb
add
push
xchg
inc
mov
stos
cld
scas
xor
icebp
shrb
das
jl
mov
scas
pop
out
pop
xchg
add
inc
jbe
inc
test
stos
sub
std
mov
and
ljmp
test
loope
stos
in
popf
push
daa
mov
lret
jmp
xchg
in
pop
ret
std
push
fwait
add
mov
pop
pop
andb
push
push
rcrl
mov
test
lods
jno
mov
lds
and
call
rolb
mov
jp
lods
sbb
add
scas
pop
cs
loop
mov
dec
ss
xchg
xrelease
pop
mov
lret
or
stos
cmpsl
movsb
jge
pop
mov
dec
into
cs
sarl
stos
test
test
das
mov
fstp
mov
inc
loop
insb
mov
fdivrl
leave
cmp
jnp
sbb
mov
test
and
ret
stos
lock
push
stc
inc
jns
mov
int3
incb
or
loopne
dec
stos
loop
js
push
and
adc
fs
shlb
insl
mov
daa
lds
insb
inc
jbe
jle
adc
ret
stos
add
lcall
sub
mov
jb
out
mov
outsl
jl
add
or
mov
stos
push
aaa
mov
push
mov
hlt
pop
mov
out
push
inc
mov
xchg
sti
add
xor
ret
inc
loopne
call
imul
js
cli
je
jecxz
jbe
mov
nop
stos
jle
mov
push
or
insl
negb
mov
test
or
stos
inc
jne
out
push
insb
cmp
notl
lahf
stos
sub
and
push
addr16
into
ficomps
je
stos
push
jl
xorb
jae
cli
das
les
push
cs
stos
mov
dec
in
mov
rcll
adc
push
stos
cld
sbb
cmc
stos
or
push
xchg
rclb
dec
movsl
test
sub
fsubrl
mov
xor
scas
xchg
ret
xbegin
mov
xchg
inc
cs
in
into
ret
jae
mov
mov
stos
fsubl
gs
enter
mov
dec
icebp
inc
add
and
enter
inc
call
stos
cli
arpl
in
jl
mov
sar
adc
cmp
sbb
repz
stos
fmuls
aas
sbb
pop
add
inc
test
stos
sub
dec
iret
insl
pushf
and
fcmovu
xchg
xor
cmp
push
dec
sub
fcomps
push
stos
push
stos
in
xchg
stos
out
cld
adc
lock
mov
cmp
pop
pop
dec
stos
inc
mov
rorb
mov
sub
xor
std
mov
mov
pop
mov
repz
xor
pop
dec
lcall
jmp
data16
xor
into
inc
rcrl
mov
xchg
mov
fcomps
dec
pop
xchg
dec
stos
adc
dec
xor
sbb
lahf
ds
cmp
sahf
mov
mov
insb
mov
popf
mov
das
jmp
push
gs
push
mov
push
cmp
adc
into
xchg
stos
pop
iret
cmpb
aad
je
pop
inc
xchg
hlt
stos
dec
pop
push
push
mov
arpl
mov
jb
stos
sub
push
add
ret
push
scas
int
or
mov
jno
les
mov
pop
jo
rep
cli
fwait
shr
stos
and
dec
subb
jecxz
stos
mov
subb
xlat
xchg
cwtl
pop
dec
ret
push
fwait
insl
mov
push
jb
bound
insl
sub
jge
je
not
nop
dec
stos
jl
int
pop
sbb
scas
insl
adc
arpl
stos
mov
das
cmpsl
stos
int3
je
sahf
or
cli
into
stos
push
sbb
scas
push
sti
inc
aas
cs
mov
cld
mov
orl
xchg
ljmp
push
movsb
or
lgdtl
push
stos
inc
data16
jnp
jne
aaa
stos
scas
int3
pop
fildl
cli
daa
icebp
stos
ds
outsb
rorl
loope
out
sub
in
jmp
sbb
lea
stos
enter
and
and
stos
xchg
pushf
or
in
sarl
push
pop
jge
aad
movsb
insl
pop
xchg
in
push
loopne
mov
stos
sub
out
mov
xor
lea
mov
fimull
push
addb
push
mov
xchg
sbb
test
clc
and
ss
aas
xor
sbb
sub
add
xchg
jge
pop
vpunpckhqdq
ljmp
stos
insl
outsb
test
shl
mov
sbb
pop
sti
pop
bnd
insl
add
fwait
mov
icebp
mov
daa
stos
dec
cmpl
ss
jne
mov
lret
mov
loopne
cs
leave
cld
sub
add
in
std
or
lret
jle
iret
push
jae
shr
fsubrl
ja
jb
jl
fisubrl
stos
push
sbb
cmp
test
stos
ret
adc
loop
stos
pop
loopne
and
int3
popf
rol
mov
mov
stos
jl
sub
data16
cmc
xchg
lock
gs
push
xor
hlt
sbb
js
rcrb
stos
xchg
mov
xchg
push
mov
inc
dec
adc
sbb
inc
push
mov
stos
mov
dec
insb
or
xchg
je
popa
push
adc
sub
push
cld
out
jmp
imul
push
stos
adc
mov
push
outsl
lret
xchg
jbe
stos
sbb
fidivl
insl
adc
das
fwait
sub
push
jb
pop
push
xchg
test
xor
sub
sub
scas
or
jns
dec
insl
cmp
popa
lds
jne
rolb
mov
in
sbb
sbb
stos
shl
dec
cmp
stos
rcrb
mov
stos
cpuid
push
sti
sub
sbb
mov
and
mov
adc
gs
push
lods
stos
mov
sbb
push
stos
dec
mov
lock
jmp
scas
data16
lds
xor
mov
stos
orl
and
jge
jne
ss
add
adc
mov
cmc
clc
inc
lret
stos
lret
sub
dec
pusha
pop
in
imul
mov
inc
jg
sub
lods
cmpsl
cmp
sti
fsubrs
dec
jns
stos
mov
pop
insl
mov
jb
jp,pn
lods
movsl
gs
shr
cmc
cmpsl
stos
inc
sbb
insb
adc
xchg
adc
push
aas
inc
aam
xchg
inc
inc
fdivrl
cld
xchg
adc
insl
fs
pop
xchg
stos
mov
pushf
shr
sub
jno
xor
test
jmp
inc
and
notl
fisubrl
xor
adc
mov
xor
cmc
loop
std
stos
push
xchg
out
pop
insl
mov
scas
xchg
imul
in
xor
xchg
scas
jne
mov
mov
sarb
adc
repz
fwait
cmp
xchg
aad
jno
mov
shlb
mov
add
int
add
xor
add
sub
fistpl
ret
stos
es
mov
leave
sbbl
cmp
cmp
shr
fisttpll
rclb
dec
pop
aaa
les
call
jmp
mov
ss
xor
xlat
stos
push
inc
dec
mov
push
insl
stos
jl,pt
mov
pop
sti
stos
inc
mov
adc
popf
je
cmp
loop
stos
fisttps
cvtdq2ps
shll
xor
lds
sub
cmp
andl
jl
jecxz
pusha
popa
mov
repnz
jecxz
xor
popa
mov
add
inc
js
addr16
pop
imul
cmpsl
ljmp
mov
dec
leave
out
add
clc
push
test
stos
fst
lea
sar
mov
mov
mov
mov
lods
or
daa
aaa
stos
xchg
repz
inc
or
ret
subl
in
xchg
cmpb
xor
mov
das
xchg
jns
movsb
sbb
ljmp
xchg
mov
mov
stc
fnsave
push
stos
pop
cmp
mov
stos
clc
cld
test
ss
pop
stos
xchg
sub
stos
out
sbb
outsl
insl
jge
mov
lds
sti
into
mov
leave
stos
test
iret
or
fnsave
pusha
pop
test
or
fwait
iret
insl
ss
in
sbb
pushf
sarl
mov
repnz
outsl
insl
xchg
popa
or
mov
stos
mov
call
lahf
js
cltd
in
cwtl
cld
jmp
lahf
fwait
pop
stos
adc
ja
xor
stos
mov
and
xchg
lods
push
cmc
jmp
jle
andb
ljmp
stos
in
jge
in
mov
jl
iret
cmp
xor
mov
dec
je
xor
sbb
aaa
xor
imul
clc
mov
sbb
es
in
xchg
fnop
stos
push
push
cwtl
cmp
xchg
mov
xor
pop
jle
mov
lock
cld
stos
cli
fnstsw
xlat
sbb
call
mov
push
inc
stos
or
into
sub
call
add
or
pop
inc
push
mov
fs
lds
shrb
lock
outsl
mov
fwait
or
sti
js
add
jecxz
mov
mov
loopne
insb
pop
and
rorb
es
imulb
xor
cmp
scas
out
cmpsl
outsl
cmpsb
add
xor
popa
push
in
scas
stos
cltd
hlt
xor
rorb
test
fdivr
mov
popa
adc
and
loopne
add
out
push
lds
or
test
test
push
shr
gs
lea
imulb
jo
inc
xchg
scas
dec
jle
lds
add
inc
push
and
stos
mov
sub
sbb
bound
inc
imul
or
stos
adc
outsl
xor
xchg
movsb
sbb
pop
mov
sub
das
push
pusha
stos
jge
pushf
pop
aad
in
fldt
and
imull
fadds
inc
imul
stos
mov
lret
rcrl
pop
into
pop
mov
lods
out
popf
mov
sbb
xor
cld
xor
shlb
ljmp
push
lret
mov
mov
ja
mov
cmp
stc
pop
sub
inc
mov
jp
fs
fwait
jle
test
loop
or
mov
xchg
mov
in
stos
xor
jno
push
into
aas
and
mov
lock
push
stos
stos
pop
jns
mov
bound
and
jne
jecxz
fstpt
xchg
rep
push
adc
xor
cmc
cwtl
stos
xchg
stos
cltd
fs
lret
mov
enter
mov
jb
mov
mov
and
push
imul
lret
int3
test
shlb
in
lods
andb
sbb
dec
stos
iret
add
call
imul
jbe
stc
jb
mov
and
imul
insl
faddp
push
mov
inc
in
add
inc
mov
dec
je
add
sub
mov
jnp
add
mov
in
fsubrl
push
hlt
imul
stos
cmp
sub
pushf
mov
sub
adc
push
stos
mov
push
dec
movsb
mov
pushf
ja
pop
stos
aad
addr16
adc
add
adc
mov
push
stos
inc
out
mov
sub
inc
shll
and
test
xor
xor
in
insb
mov
pop
in
inc
jmp
ret
dec
pop
mov
sub
jle
push
andb
stos
pop
loopne
rorl
cmp
jns
jp
mov
or
pop
ljmp
std
cmpsl
or
cmp
mov
sbb
cmc
cmpsl
add
sub
scas
rorl
stos
leave
pusha
jae
mov
out
ljmp
jnp
insl
mov
xor
dec
mov
into
pop
cmp
stos
cmp
lret
test
stos
movsl
jbe
adc
pop
roll
fwait
dec
mov
pushf
imul
inc
iret
xor
mov
sahf
add
lds
sub
leave
xlat
cmp
insl
add
fs
mov
dec
js
stos
ret
in
mov
xor
out
sub
sub
ja
leave
pop
jmp
out
inc
js
bnd
push
scas
sub
push
jnp
stos
ret
xor
add
mov
clc
mov
leave
stos
add
setg
push
mov
cli
stos
lds
imul
inc
adc
hlt
cmpsb
stos
mov
adc
sub
xchg
sub
sti
mov
inc
ds
outsl
aas
lahf
stos
lds
sbb
repz
and
ljmp
stos
in
jp
add
xchg
aam
sbb
inc
add
push
mov
mov
lcall
popa
inc
sub
stos
fdivs
cmp
sti
fsubp
ret
bound
push
mov
pop
pop
or
mov
das
lcall
xchg
imul
mov
sub
lahf
mov
dec
jecxz
call
in
psubd
loopne
inc
ret
outsl
mov
xchg
adc
insb
ficoms
stos
add
insl
adc
movsl
je
loopne
mov
push
in
push
mov
adc
outsl
out
iret
jno
mov
ljmp
xchg
inc
idivb
stos
and
push
dec
sbb
jp
enter
add
push
imul
jnp
pusha
add
add
add
cli
je
stos
bound
mov
stos
repz
sbb
pop
inc
scas
stos
pop
adc
xchg
xchg
dec
data16
stos
lret
aaa
sub
loop
insb
pusha
add
adc
test
inc
dec
jg
mov
mov
fsubrs
fstpl
stos
cli
pop
xor
stos
stc
cmp
popf
stos
popa
movsl
fiaddl
stos
out
andl
out
stos
rclb
std
add
aad
mov
int
stos
push
xchg
cld
adc
std
cmp
xor
movsb
aam
aas
xchg
stos
bnd
xor
sub
jno
sbb
push
mov
cmpsb
push
int3
sub
rcrb
xchg
mov
outsl
xor
sbb
push
stos
cmpsb
push
out
lahf
jnp
pop
lock
push
adc
inc
jmp
les
lret
insb
mov
or
mov
jne
adc
mov
push
dec
sub
adc
pusha
push
pop
sbb
stos
test
aad
pop
sub
inc
mov
cmp
loope
xchg
sbb
xlat
jb
jp
xchg
mov
out
ja
mov
lods
pop
cmp
or
mov
or
in
clc
repz
jo
shll
int
or
out
insb
jle
cmpsl
in
aam
shll
adc
xchg
or
sub
mov
xlat
ret
cmp
dec
sub
stos
and
xor
stos
nop
je
movsl
nop
repnz
int
pop
mov
pushf
arpl
lds
imul
mov
lcall
stos
dec
sti
push
movsl
stos
in
cmp
cld
or
push
repnz
daa
lret
stos
pop
push
stos
jne
dec
add
mov
packuswb
stos
sub
das
icebp
loope
cmp
adc
mov
sahf
sub
push
jnp
inc
subl
mov
in
outsl
xlat
and
push
inc
test
xor
adc
mov
mov
cli
ret
lock
out
das
inc
inc
loopne
subb
adc
jo
and
jns
clc
pop
mov
rolb
lret
inc
lcall
stos
je
mov
stos
push
sbb
sbb
lea
sar
pop
adc
ss
xchg
fs
dec
out
inc
and
sbb
adc
jle
sub
sub
arpl
stos
mov
jmp
pop
out
mov
fucomp
sub
pop
adc
and
fwait
iret
test
cld
sbb
les
pop
lret
stos
repnz
or
stos
clc
loope
leave
scas
cwtl
mov
mov
add
mov
clc
shll
in
out
aad
stos
push
lcall
stos
shrb
pop
jle
in
adc
call
movsb
or
push
fs
stos
aas
popf
inc
lods
jg
arpl
je
jl
xchg
repnz
mov
dec
sub
imul
notl
hlt
pusha
mov
adc
js
out
mov
push
mov
and
jmp
rcll
cli
push
add
mov
push
mov
jnp
sbb
sub
test
xchg
mov
popa
or
push
jb
push
insl
push
in
lcall
imul
fwait
popa
dec
outsb
fisttps
cltd
faddp
xchg
jmp
je
adcl
mov
push
pop
das
push
gs
jb
leave
push
sub
mov
dec
stos
or
div
scas
pop
lea
stos
fldt
sbb
stos
hlt
or
dec
outsl
mov
adc
mov
adc
aam
nop
add
int
jo
stos
xchg
jl
mov
sbb
popf
mov
stos
push
xchg
xchg
dec
iret
cs
stos
pop
and
enter
push
stos
shrd
mov
stos
push
inc
add
sbb
mov
lahf
jl
inc
stos
jecxz
fstpt
fstl
sti
add
adc
outsl
bound
mov
repz
out
stos
mov
adc
ret
xchg
xor
test
insl
aad
xorl
mov
lock
fldcw
loope
jg
jno
lahf
cmpsl
pop
mov
fsubrs
pop
adc
dec
std
insb
mov
shll
pop
lret
stos
imul
dec
mov
test
sbb
cs
dec
test
rorb
cltd
mov
and
cs
inc
push
repnz
adc
pusha
push
cmp
mov
pop
inc
jmp
in
imulb
jno
rclb
lret
inc
xor
and
sbb
bound
or
fdivs
pusha
les
pop
stos
sbb
lock
pop
icebp
add
imul
mov
fists
hlt
jne
fs
add
push
pop
subl
mov
setb
pop
stos
xor
arpl
aam
ljmp
or
leave
iret
stos
add
and
imul
adc
fidivrl
add
and
inc
aam
lods
in
jmp
jmp
or
mov
mov
stos
mov
xchg
popa
call
es
inc
jbe
in
mov
mov
pop
mov
out
subb
or
imul
cmp
insl
and
adc
cmpsb
bts
repz
int3
jae
sub
stos
fmul
dec
push
imul
das
cmp
stos
mov
pop
repnz
test
push
movsb
add
and
ret
addr16
mov
stos
scas
mov
dec
stos
sarl
mov
mov
inc
or
and
sti
hlt
test
jge
lea
push
stos
sahf
and
and
fidivl
test
fisubrs
daa
pop
jp
stos
pop
pop
dec
xchg
mov
in
stos
push
inc
out
inc
scas
cmp
ljmp
ret
xor
stos
mov
mov
ret
sub
repnz
int
aad
push
xorb
cmpb
stos
adc
daa
cmp
adc
mov
jae
mov
xchg
cmp
shl
repnz
test
stos
loope
push
jge
cwtl
xchg
lds
adc
out
mov
or
popf
sub
enter
out
cltd
jnp
dec
les
fwait
mov
mov
lock
push
jae
loop
mov
mov
stos
push
enter
jge
jnp
add
push
fdivrs
mov
dec
push
stos
lcall
cli
popf
adcb
stos
mov
jb
popa
mov
sarb
cmp
aaa
jg
ret
mov
stos
add
adc
and
popf
into
pop
movsl
stos
out
dec
xor
fnsave
jl
mov
stos
cmc
jle
mov
stos
imul
ret
and
xor
push
jecxz
insb
xchg
mov
jp
insl
inc
nop
jge
mov
ljmp
cs
fisttpll
mov
or
orb
xchg
pop
mov
imul
xor
daa
jno
lcall
lds
or
mov
dec
dec
cmpsl
lret
mov
ficomps
xorb
lods
in
fdivs
stos
in
inc
cwtl
in
das
sub
adc
lds
stos
sub
add
stos
scas
and
stos
sbb
les
cmp
rorb
add
rcrl
stos
les
mov
insb
and
dec
sbb
sub
sub
mov
push
jbe
sbb
xchg
sub
mov
iret
add
cmp
pushf
dec
and
ja
lods
cmpsb
mov
idivb
out
outsl
mov
enter
add
inc
mov
mov
je
ret
es
add
jp
stos
cmp
imulb
ret
fsubrs
jl
pop
mov
mov
mov
ret
mov
leave
sbbb
rcl
cmp
ret
jg
dec
or
das
lcall
stos
outsl
pop
cmp
fs
stos
sub
int
aaa
lahf
stos
pop
pop
sub
and
and
mov
inc
sbb
mov
mov
rcrb
std
sub
outsb
mov
sbb
stos
fnstcw
mov
xchg
add
jmp
pop
jmp
mov
and
idivl
mov
lret
and
stc
dec
pop
or
mov
outsl
icebp
fwait
xor
sub
jne
push
xor
ss
ja
arpl
cs
xor
stos
mov
bound
add
test
mov
fsts
movsl
mov
cwtl
loop
repz
pop
in
cmpsb
mov
cmp
stos
std
xor
add
inc
mov
les
cs
mov
pop
and
imul
inc
fwait
sti
cmp
fisubrs
lods
test
jl
jmp
fwait
stos
ja
dec
ds
add
popf
jmp
loopne
scas
xor
ret
mov
xor
or
dec
mov
mov
daa
stos
in
and
shrl
stos
inc
pop
je
or
inc
insl
dec
cmp
jae
push
int3
xchg
arpl
xchg
mov
fwait
jg
fstpt
or
movsl
ret
mov
adc
add
popa
sub
pop
fwait
cmpsb
mov
test
test
push
movsb
fwait
pop
jecxz
sbb
in
stos
inc
sbb
xchg
gs
scas
sahf
les
stos
ds
in
mov
mov
icebp
out
xlat
pop
pop
leave
jg
xor
test
add
das
jo
xchg
stos
sub
insb
mov
jmp
sub
les
pop
daa
mov
and
in
ret
data16
adc
sti
stos
mov
ret
orb
inc
rol
cwtl
mov
cmp
fcoms
jo
popf
ljmp
push
jle
inc
xor
mov
hlt
add
fwait
adc
sbb
incl
clc
ret
stos
ss
cmp
xchg
sbb
mov
imul
enter
mov
push
mov
cmpsl
rcrb
cmpb
loope
mov
ljmp
ds
pop
mov
stos
xchg
stos
fwait
test
adc
lods
pop
out
jmp
fstpt
sbb
lds
lret
or
aad
pop
jp
leave
jo
add
mov
test
mov
aam
mov
mov
subl
rolb
femms
xchg
stos
ret
jle
sub
pop
ret
cmp
and
scas
adc
or
add
ficomps
and
jb
dec
jl
idivb
stos
and
lret
aaa
leave
or
mov
xchg
movzwl
ret
mov
push
cmpsl
jecxz
pop
xchg
pop
cli
xchg
or
stc
inc
jne
inc
mov
repz
out
stos
out
sbb
shlb
mov
mov
fs
mov
sub
sbb
sub
ret
or
inc
stos
loope
mov
lcall
add
sub
in
mov
xchg
stos
pop
ss
bndstx
or
push
jmp
ljmp
inc
in
mov
das
fcomps
jbe
stos
ds
adc
or
cmp
outsl
xchg
scas
mov
mov
fucomi
data16
popa
push
mov
cltd
out
stos
scas
shlb
jns
adc
es
jnp
sub
daa
xchg
loope
stos
dec
and
push
movsb
xchg
xor
xchg
popf
outsb
cmc
push
lds
xchg
cs
leave
iret
xchg
pop
shlb
sbb
sti
je
lods
xchg
xchg
dec
imul
push
cmp
inc
cs
ret
dec
insl
nop
mov
mov
jnp
dec
inc
dec
sub
mov
add
movsb
mov
js
mov
xor
hlt
repz
dec
push
xchg
sti
stos
or
xchg
xchg
je
and
sub
call
and
pushf
xchg
mov
out
cmp
in
jg
shll
fsubr
repnz
ret
stos
or
sti
stc
stos
outsl
jl
ss
jae
cmp
int3
inc
out
pop
jmp
fucomp
movsl
mov
jge
test
inc
fs
jmp
ffree
dec
inc
add
inc
push
scas
xor
add
add
stos
das
jmp
pop
xor
inc
stos
in
pop
cmp
lahf
mov
push
or
sub
cmp
pop
ret
jge
lret
pushf
mov
lods
and
es
pop
les
insb
xchg
icebp
mov
or
in
push
pop
inc
and
xchg
sub
cs
push
mov
subl
cmp
pop
fsts
movsb
imull
jno
int3
les
stos
fimull
adc
xchg
test
stos
cwtl
popf
cmp
jb
mov
xor
mov
mov
and
xor
dec
jb
lds
je
pop
aas
stos
pushf
and
push
push
inc
add
repz
pop
and
mov
stc
dec
jmp
or
inc
dec
test
mov
je
dec
call
sahf
push
mov
jbe
jnp
mov
insb
add
mov
ss
lcall
sub
fisubrs
arpl
mov
inc
push
push
js
lcall
fisubs
or
stos
movsl
push
sub
mov
lea
sbb
popa
fsubrl
subl
dec
xor
push
outsl
push
xor
pop
push
adc
add
icebp
jcxz
sub
scas
push
stos
pop
add
and
xor
dec
outsb
jb
jmp
stos
mov
xchg
jno
test
les
stos
sub
inc
and
sahf
out
stos
pop
sbb
test
shlb
jp
jns
lcall
pop
sub
sub
in
in
ss
inc
xchg
ret
jo
add
orb
roll
movsb
pushf
stos
jns
mov
jne
ljmp
lahf
cmp
out
aas
sti
stos
dec
add
lcall
or
or
and
es
ss
add
xchg
dec
hlt
loope
stos
test
jge
mov
jno
dec
or
cmp
mov
stos
test
xlat
ds
stos
and
lret
stos
ret
sub
pop
fmull
sub
inc
jp
insl
out
sahf
aad
mov
sub
stos
or
daa
aaa
mov
stos
add
pop
inc
stos
xchg
adc
aad
mov
stos
in
xchg
rcrl
dec
adc
stos
fistpl
mov
rcr
adc
fmul
jle
loop
ret
call
jbe
add
push
mov
or
fbstp
aas
bound
jmp
mov
shl
mov
or
pop
lret
repnz
ljmp
push
out
xchg
push
add
stos
inc
dec
or
pop
cli
mov
cmp
push
add
cmp
iret
lret
mov
xchg
out
mov
sub
loopne
push
mov
pop
mov
sub
stos
out
sub
lea
xchg
cmp
jmp
aas
ljmp
mov
mov
inc
das
xchg
leave
mov
jle
add
stos
les
dec
ljmp
dec
fstpt
incl
jle
cltd
mov
mov
inc
mov
add
jbe
xor
stc
stos
push
and
jle
mov
out
mov
stos
imul
mov
cmpsb
mov
jg
and
dec
arpl
testb
cli
stos
inc
and
pop
lahf
enter
add
cmp
les
mov
add
xlat
pusha
and
rorb
bound
add
repz
shrb
mov
xchg
dec
lea
cmp
out
jmp
pusha
out
mov
jp
xchg
pop
jmp
jp
cwtl
xchg
cmpsl
stos
lds
arpl
jmp
aam
movsw
test
ja
jg
pop
dec
jmp
push
mov
cmp
pop
adc
movsl
out
mov
subb
cmpsl
hlt
jmp
rolb
cld
std
rclb
lret
fsts
cs
cld
aaa
push
sbb
jmp
in
aam
mov
ds
lds
sub
aas
stos
adc
loop
stos
or
pop
popa
pop
pop
jo
outsl
nop
xchg
xchg
fs
push
stos
xor
ret
sbb
lock
outsl
cs
js
mov
fcomip
inc
push
xor
mov
xchg
pusha
loope
stos
inc
and
int3
sbb
mov
push
je
pop
push
jne
stos
dec
mov
cmp
dec
scas
cltd
stos
aam
pushf
jmp
stos
jb
add
mov
fdivs
xchg
inc
insb
and
pop
sub
ficompl
movl
push
and
fwait
repz
mov
dec
hlt
mov
mov
call
es
stos
jbe
aas
fwait
mov
xlat
sahf
adc
dec
cld
into
sbb
insl
inc
data16
fwait
aam
sahf
in
lods
das
sub
mov
mov
stos
enter
jb
and
in
les
stos
dec
int3
mov
inc
stos
loopne
lock
aas
mov
lods
cmpb
and
imul
mov
repnz
sbb
stos
sub
lods
movsb
stos
pop
lahf
cltd
add
add
cmp
fwait
push
scas
sub
add
and
xchg
xorb
sbbl
inc
jl
add
lea
in
jmp
stos
cmpsb
and
incl
and
aaa
xorl
mov
adc
aad
imulb
xor
sahf
sbb
sub
imul
sbbl
mov
das
fsubrp
cvttps2pi
pusha
or
stos
mov
mov
or
pop
sbb
pop
lods
fwait
jle
fsubrs
sar
addr16
ss
mov
xchg
lret
outsl
mov
insb
push
sbb
mov
lea
lds
sub
add
scas
stc
test
dec
cli
mov
negl
sub
arpl
add
sbb
ljmp
sbb
xchg
in
sahf
stos
enter
or
or
push
test
stos
rolb
add
inc
jne
int3
mov
stos
sub
dec
ja
mov
pop
std
shlb
bound
mov
or
incl
mov
or
stos
mov
popf
and
sti
stos
out
mov
sub
xchg
push
xorl
test
mov
stos
scas
hlt
dec
xchg
pop
adc
out
es
xchg
jmp
nop
dec
pusha
inc
out
test
add
cli
pop
mov
push
sbb
push
mov
mov
mov
mov
sub
xchg
iret
cmp
mov
sub
jae
sub
lcall
popa
xor
xor
fsubl
inc
or
rcrl
push
jb
aas
mov
adc
int
cmpl
xorl
insl
lods
dec
xchg
in
leave
movsl
cld
sub
imul
sahf
mov
test
stos
pop
cmp
les
in
popa
stos
repz
xor
stos
lea
xor
push
adc
mov
test
scas
add
ret
fstpt
ja
ret
sbb
insb
lahf
dec
add
xchg
mov
iret
and
lds
gs
pop
aad
fimull
mov
jmp
xor
sub
jle
stos
inc
add
je
pop
jnp
cmp
mov
push
mov
inc
bound
stos
and
stos
and
or
stos
stos
cmp
lret
mov
push
pusha
mov
aaa
add
xchg
ret
mov
push
lret
mov
mov
mov
pop
std
stc
stos
in
imulb
cmp
dec
cmp
movsl
mov
inc
push
xchg
sbb
inc
mov
stos
shlb
shrb
push
jb
jnp
mov
flds
adc
cmp
mov
jle
jmp
addr16
mov
iret
bound
loop
stos
add
and
stos
out
xor
icebp
sbb
stos
xor
lods
push
jge
pop
stos
lahf
adc
ja
mov
enter
aaa
pop
cli
xlat
test
or
xchg
xor
pop
js
mov
cs
lret
stos
adc
cmp
pop
cmc
mov
pop
stos
aad
push
xor
or
rcrl
mov
stos
aam
es
xor
cmpb
jb
scas
mov
add
movsb
mov
imul
lock
ret
fisubl
in
cmp
add
jmp
or
movsl
fmull
std
ljmp
in
pop
stos
fbstp
lods
stos
mov
push
outsl
xor
mov
push
stos
push
cs
stos
je
cmp
nop
jnp
mov
int
adc
mov
dec
stos
push
repz
push
lahf
pop
or
inc
mov
ret
lcall
cmp
mov
stos
mov
mov
fcompl
mov
sarl
shrl
inc
insb
xchg
stos
imul
or
fcompl
xchg
out
mov
inc
scas
cmp
stos
test
pop
test
stos
push
cmpsl
lea
cmpb
stos
rcll
pop
outsb
mov
out
out
push
test
fimuls
std
mov
or
pop
push
sub
stos
ret
mov
push
in
mov
popf
inc
add
dec
addb
ffreep
std
imul
pushf
out
sarl
mov
in
stc
fistpll
sub
iret
inc
andb
mov
mov
cmp
in
pop
fs
popf
mov
daa
clc
adc
mov
ss
jle
stos
inc
in
mov
stos
cs
out
and
inc
popa
jge
and
into
mov
dec
stos
xchg
push
test
shl
lret
jae
cmp
jno
fsubrl
mov
jp
cltd
int3
aas
insb
arpl
leave
or
push
pop
xchg
mov
add
or
inc
add
adc
mov
lahf
aam
mov
lea
cmpsb
ja
cltd
jle
mov
test
cmp
sbb
pusha
mov
ret
lcall
fs
insl
popf
loope
ja
out
push
sbb
and
xor
push
stos
leave
xchg
aaa
xchg
rcrl
hlt
dec
rcll
stos
sbb
push
ljmp
out
jle
mov
or
shll
cli
mov
add
stos
push
subb
stos
or
jae
outsl
push
test
or
adc
insl
stos
lcall
sub
sub
push
dec
or
and
fiadds
xchg
mov
imul
es
das
imul
mov
leave
scas
sub
mov
add
fildl
ljmp
ret
outsl
pop
cltd
sbb
and
inc
push
fimull
les
loope
lcall
xchg
into
pushf
stos
or
ret
ret
push
shlb
popf
xchg
adc
inc
aam
cmpsl
mov
imul
stos
negb
push
lret
stos
dec
nop
mov
shrl
mov
stos
jnp
nop
fsubs
add
pop
fwait
and
cmp
lahf
sub
cmpsb
arpl
repz
stos
xchg
pop
mov
dec
stos
xchg
jmp
dec
lret
or
pusha
jg
pushf
inc
cli
cs
flds
cmp
ss
int3
push
insb
jl
fdivrs
lea
dec
stos
or
es
cmpsl
in
mov
stos
jge
addr16
sub
xchg
movsl
jae
xchg
out
jecxz
jl
sbb
sahf
inc
fs
lods
shlb
std
push
cld
cmpsl
stos
aas
or
mov
fdivl
pop
scas
ret
aaa
roll
stos
push
gs
es
stos
ret
sub
stos
lahf
xchg
shrl
stos
icebp
cmpsl
xchg
imul
xchg
and
xchg
mov
je
and
sbb
pop
inc
insl
sbb
xchg
adcl
mov
fistpll
test
mov
mov
push
add
stos
int3
pop
ss
xchg
sbb
cwtl
stos
aad
mov
pop
fcoms
add
test
ret
mov
insl
xor
mov
call
frstor
imul
dec
int3
pop
cmp
add
stos
xchg
pop
lods
fwait
push
or
lret
add
mov
call
es
movsb
inc
outsl
mov
inc
lea
negl
insl
mov
inc
adc
sub
and
stos
je
ljmp
int
xchg
stos
arpl
pop
xlat
mov
inc
sub
mov
mov
mov
stos
cmp
jae
enter
int
repnz
push
mov
cs
in
rolb
stos
push
faddl
scas
or
jb
gs
xchg
add
cs
ds
push
stos
mov
pop
pop
out
inc
icebp
sub
push
sahf
test
mov
rcrl
jg
fsubs
leave
into
mov
mov
test
dec
fsubp
mov
and
or
stos
mov
inc
mov
fwait
sbb
mov
xor
mov
fdivs
jns
or
mov
fidivs
stos
dec
mov
push
test
xor
jmp
movsb
stos
sbb
adc
jmp
outsb
insl
ret
shll
and
in
sub
out
cmpsb
rcrl
shrl
mov
cli
into
test
lret
inc
mov
mov
fldl
lahf
jb
jae
jp
fwait
pop
sbb
stos
sbb
lret
xchg
jp
in
outsl
sahf
and
mov
or
push
pop
cmp
add
mov
cltd
js
stos
sub
pop
rcrl
push
cmp
loop
insl
mov
fwait
je
push
fldt
dec
mov
sbb
push
push
adc
pop
or
fiaddl
ret
fistps
xchg
insl
out
jmp
xor
cmp
lret
and
cmc
or
loope
or
jmp
outsl
hlt
lret
sub
adc
jbe
xchg
xchg
mov
inc
sti
arpl
mov
out
adc
push
sbb
outsl
pop
push
cmp
cld
pop
bound
addr16
stos
sub
mov
imul
ds
inc
in
fnstcw
lcall
pop
sti
sub
popl
mov
enter
xchg
sbb
movsl
aas
stos
or
stc
and
fnstenv
loop
mov
mov
push
stos
das
ror
and
xor
stos
popf
sub
jnp
dec
adc
cld
dec
fcmovne
aad
sbb
popa
dec
push
sub
sarb
clc
dec
adc
stos
jns
mov
lahf
imul
hlt
mov
ret
mov
push
and
loopne
stos
jp
push
dec
jno
dec
push
stos
sub
test
pop
pop
or
insl
lods
pop
mov
mov
add
stos
inc
mov
jecxz
dec
stos
add
pop
add
imul
js
add
stos
lahf
mov
aaa
jg
leave
stos
in
inc
pop
sbb
mov
lahf
jl
sub
adc
lret
push
jmp
sbb
mov
lds
pop
into
cmp
shll
cmpsl
loope
pop
sahf
fdiv
or
adc
add
push
pop
dec
adc
mov
int3
dec
pop
movsl
adc
push
sbb
xor
stos
sub
sarb
mov
push
aas
clc
push
loope
jmp
mov
mov
scas
adc
imul
stos
pop
in
push
jmp
vcvtsd2si
ja
adc
stos
mov
sub
stos
sbb
pop
mov
cmp
jmp
mov
jle
mov
int3
mov
lcall
subb
inc
sub
push
dec
lret
shrl
stos
push
movsb
xor
fucompp
cmp
xchg
jge
push
mov
lods
mov
xchg
cwtl
mov
push
cltd
pop
loop
stos
and
cmp
mov
insl
xor
pop
mov
xchg
add
cs
xorl
imulb
or
fcmovbe
xchg
inc
cmp
jns
cli
stos
jmp
dec
inc
fldcw
aad
es
add
call
push
jno
stc
xchg
xlat
jl
mov
shr
test
repnz
insl
add
mov
xor
cwtl
jp
jmp
sub
jecxz
je
xchg
int
nop
loopne
push
push
insb
inc
xchg
sbb
lahf
sub
jge
js
int3
in
or
mov
icebp
mov
mov
nop
cmp
addl
stos
mov
xor
inc
stos
adc
sub
movsb
shr
roll
stc
frstor
inc
cmc
adc
imul
fidivl
out
outsb
mov
lods
mov
insb
add
stos
mov
sbb
enter
push
test
adc
dec
cmpsl
insb
dec
icebp
test
stos
jge
lods
in
sbb
dec
pop
add
jmp
pop
mov
sbb
lahf
cli
test
testl
rcrl
xlat
xor
inc
stos
stos
imul
jmp
lods
dec
jb
filds
push
stos
popa
stc
mov
jae
mov
pop
repz
clc
pushf
bound
vpmacsswd
aaa
jns
pop
mov
sbb
call
jnp
popa
js
into
bound
cmp
cltd
or
mov
sbb
loope
pop
andl
fwait
push
rcrl
fcoml
jo
lahf
js
in
jp
sub
mov
stos
or
cs
sti
outsl
leave
cmc
mov
mov
bound
cmovge
mov
push
or
mov
ret
in
repnz
mov
sahf
jle
dec
xchg
ret
in
stos
decl
push
or
std
fld
stos
push
lcall
stos
out
mov
xor
nop
adc
jl
ret
mov
aaa
pop
xchg
dec
stos
imul
sti
xchg
shll
dec
hlt
cmpsb
push
stos
adc
popf
inc
xor
sbb
jecxz
lret
and
xchg
orl
cli
mov
and
mov
insl
push
or
bound
jmp
sub
lret
stc
stos
xlat
add
xor
push
push
popf
mov
dec
cld
stos
and
mull
xchg
sarl
xchg
adc
rcr
mov
lcall
movsl
gs
imul
in
mov
das
ror
jae
cmpsl
xchg
jecxz
fmuls
shrb
jmp
fimull
out
scas
ret
stos
insl
outsl
popa
sbb
push
xchg
adc
adc
sub
shll
jne
pusha
mov
stos
sub
fwait
cmp
push
loop
add
mov
roll
iret
xchg
push
xchg
insb
data16
and
enter
cs
xor
jge
mov
xchg
stos
mov
faddl
movsb
stos
and
mov
jmp
cmpsb
fsubrs
repz
clc
stos
adc
or
fisubrl
adc
mov
pusha
out
jmp
pushf
subb
cmp
mov
scas
cmpsl
roll
in
push
jecxz
ret
data16
stos
fildll
aas
jo
jnp
lods
push
fstpl
mov
movsl
insb
lock
leave
out
ja
mov
outsl
sahf
int3
cld
rclb
stos
jmp
push
test
bound
ja
jns
aad
mov
leave
mov
xor
stos
or
std
or
loop
out
and
mov
cmpsl
pop
addr16
clc
xchg
mov
dec
mov
xor
movsb
cwtl
stos
lahf
push
cmpsl
in
stc
fucomip
jp
sub
adc
scas
mov
lret
sub
fs
stos
lods
jne
or
lds
jl
push
adc
ja
xchg
pop
cmp
cwtl
jae
pop
aad
jb
pop
das
stos
push
dec
nop
loope
mov
insl
dec
dec
aam
pushf
and
stos
sbb
jb
mov
xchg
stc
add
xor
cwtl
mov
stos
adc
jmp
jo
cmp
aaa
jmp
or
loopne
dec
in
lods
lahf
adc
and
imul
dec
cmp
jmp
add
ret
stos
cltd
insl
mov
cli
inc
outsl
lds
jecxz
mov
stos
pusha
nop
mov
cmpsb
inc
bts
dec
lds
adc
mov
adc
mov
xchg
jmp
push
in
fimuls
imul
mov
shlb
mov
xlat
jmp
ret
insb
subl
mov
mov
mov
inc
xchg
pop
and
lds
stos
scas
es
jg
inc
test
mov
ss
out
pop
sub
insb
dec
imulb
jb
lea
lret
and
outsl
sub
insb
sub
int
fwait
add
insb
push
push
andl
stos
addr16
stos
out
incb
stos
sub
sub
stos
sub
icebp
sub
jns
jno
mov
push
stos
in
push
pop
imul
mov
or
cmpsl
inc
sbb
mov
sti
sbb
jo
dec
xchg
cmpsl
ss
dec
fadds
out
cli
dec
sbb
in
or
loope
lds
mov
and
lcall
mov
add
les
stos
lds
fwait
int
popf
fsubl
push
pop
jmp
sahf
fwait
add
lret
add
scas
and
pop
mov
insl
iret
lock
lahf
push
inc
adc
dec
aaa
mov
mov
stos
cmp
adc
or
push
push
mov
stos
mov
pop
push
insl
sbb
jle
add
ret
out
outsl
lahf
cli
adc
mov
cmpsb
mul
push
jo
movsb
xor
insl
jle
mov
scas
stos
xchg
cmc
mov
aaa
movsb
or
adc
cwtl
mov
hlt
stos
push
mov
xor
xor
mov
test
add
rorl
adcl
bnd
mov
cli
gs
sub
mov
push
xchg
stos
cltd
mov
or
imul
stos
lcall
popf
stos
sub
jp
insb
cli
insl
stos
xchg
out
fs
stos
js
stos
or
jne
push
popa
mov
sub
dec
das
pop
insb
inc
xor
lahf
xchg
mov
std
sub
lods
jbe
scas
xchg
jne
fistl
mov
sbb
dec
stos
jecxz
pusha
or
shlb
jl
mov
pushf
mov
pop
and
stos
daa
xchg
lods
loopne,pn
stos
mov
mov
or
ss
cmp
stos
out
and
loop
gs
push
stos
mov
mul
or
adc
sahf
xchg
fsubrs
dec
and
add
jnp
or
cwtl
fldcw
test
inc
xchg
xchg
stos
inc
mov
stos
cli
loopne
xchg
jae
stos
add
xor
mov
mov
ljmp
ja
cmpsl
lds
fcoms
es
mov
push
pop
pop
movsb
sub
mov
push
xchg
ret
stos
dec
mov
xchg
movsl
outsb
push
out
dec
mov
xor
outsl
dec
rcrb
push
aas
lcall
stos
mov
stos
loopne
dec
cmp
aas
mov
jmp
decl
mov
dec
pop
test
loop
lds
ret
fisttps
mov
xor
xor
jmp
pop
lahf
daa
push
clc
lock
xchg
fsubp
add
pop
stos
or
enter
stos
mov
dec
sub
jne
addr16
mov
push
adc
cs
pop
in
push
lahf
inc
push
pop
repz
les
mov
daa
mov
enter
or
push
jbe
lcall
cwtl
and
imul
stos
outsb
mov
cmp
xchg
fildl
jecxz
dec
jmp
stos
cld
mov
dec
gs
and
call
stos
add
jbe
dec
mov
xlat
cmpl
xor
sahf
dec
mov
fidivrs
pop
stos
mov
je
gs
xchg
stos
inc
nop
outsb
fs
int
xchg
insl
mov
mov
out
mov
popa
das
sub
inc
stos
mov
mov
sub
out
cmp
stos
mov
xchg
insb
repnz
mov
pop
jle
stos
aas
ret
sub
pusha
stos
dec
inc
pop
testb
dec
jbe
outsb
scas
std
arpl
ds
popa
fwait
clc
out
fs
arpl
stos
das
movsl
jp
cmp
mov
stos
xor
lea
dec
stos
mov
mov
pop
add
test
fisubl
xchg
daa
stos
test
mov
ret
stos
xchg
repz
xchg
mov
and
pop
sub
shrl
cmpsl
jb
jns
mov
sbb
dec
sub
subb
inc
jmp
stos
adc
add
adc
jnp
mov
mov
ss
jne
xchg
add
ljmp
in
jge
mov
mov
cltd
push
and
test
shll
sahf
arpl
into
jae
enter
xchg
push
xchg
xchg
push
jp
or
sahf
jbe
adc
mov
ficoms
xlat
stos
leave
dec
popa
rolb
jmp
xor
inc
stos
lods
add
in
xlat
mov
stos
ss
rorl
cmp
adc
jo
push
mov
insb
stos
repz
outsl
xchg
sbb
jl
loope
pop
scas
mov
mov
popa
out
in
pop
inc
or
xor
decb
stos
mov
dec
lea
aaa
jno
shrb
out
stos
xchg
xchg
push
hlt
movnti
jmp
stos
xchg
scas
xor
jnp
inc
sahf
insb
scas
mov
stos
sub
cli
sub
jp
daa
insl
fsubr
push
jno
fisttps
lcall
outsl
mov
popa
or
stos
inc
ss
push
xor
subb
xor
sub
dec
or
imul
mov
stos
into
sub
sbb
dec
and
jns
dec
mov
mov
sub
lods
xchg
scas
or
rolb
fistl
daa
cmpsl
sbb
popa
mov
mov
sarb
push
jbe
aas
fisttpll
les
push
loope
sub
or
add
loopne
mov
jb
pop
stos
and
popa
lret
xchg
lods
jbe
iret
lret
ds
adc
xchg
pushf
mov
test
in
stos
loope
dec
mov
stos
push
stos
add
mov
cmp
jo
stos
add
push
mov
aam
mov
repz
stos
ljmp
stos
stos
sbb
lret
mov
pusha
popa
fildll
fnstcw
xor
jo
test
mov
sub
inc
fwait
movsl
push
jne
aad
sub
stos
cmp
xchg
cmpsl
daa
cmp
sub
adc
jbe
xor
rcrb
and
and
cs
dec
push
mov
ds
mov
insb
mov
ret
cmp
lcall
mov
dec
stos
jmp
mov
sub
jno
test
insb
loop
adc
pop
out
stos
jmp
xchg
inc
mov
jmp
enter
push
push
mov
out
mov
cs
lods
sbb
push
fldlg2
sub
jo
lock
cmp
scas
mov
pop
jg
mov
pop
shrb
leave
push
aad
stos
sub
dec
aas
stos
xchg
repnz
aam
inc
add
jb
aad
popa
mov
mov
add
sarl
or
hlt
mov
mov
fisubrl
mov
stos
jo
ret
cmpsb
push
add
jmp
mov
stos
aas
inc
mov
xchg
in
movsl
insl
enter
fldt
stos
mov
sbb
out
dec
sbb
icebp
cs
xchg
int
adc
stos
sub
pcmpgtd
push
add
push
sub
cmp
pop
stos
lea
or
and
test
inc
lcall
push
mov
jle
sti
lret
cmp
xorl
mov
push
xor
hlt
lock
push
or
insl
add
addr16
push
pop
popf
stos
scas
mov
xchg
add
stos
pop
stos
ds
dec
repnz
pushf
notl
mov
mov
out
in
cmp
xchg
test
jmp
or
pushw
and
sbb
insb
mov
push
stos
test
sub
in
fistpll
daa
adc
hlt
pop
sbb
ret
pop
or
imul
stos
mov
int
leave
aam
stos
xor
push
sub
loope
mov
insl
dec
mov
pop
orb
shr
stc
cli
inc
rcrl
sarb
inc
popa
cmp
mov
mov
std
and
mov
mulb
mov
sti
adc
mov
mov
addl
outsb
rcll
jl
das
pop
sar
jae
jmp
addr16
push
push
jno
jns
nop
outsl
mov
adc
mov
lret
je
in
shrl
leave
cs
pop
jmp
xchg
sbb
repz
pushf
and
nop
stos
pop
add
insb
or
jp
daa
add
es
sarb
push
or
jns
sub
adc
jb
sub
fsts
mov
int3
stos
add
pop
lods
stos
jl
sub
xchg
mov
ljmp
stos
imul
lds
hlt
rorl
jne
push
lea
fists
xor
nop
cmpsb
mov
add
jno
fsubrl
inc
adc
les
mov
mov
pop
enter
inc
xchg
outsl
inc
call
ds
or
shrl
fsts
mov
jmp
aam
lret
lds
mov
jmp
mov
jne
add
mov
jle
insb
push
or
shll
mov
sbb
push
ljmp
cs
adc
cmp
stos
sub
inc
dec
and
jl
scas
fildll
fildl
dec
ljmp
cltd
stos
inc
push
adc
stos
mov
mov
lods
hlt
push
loope
mov
mov
orl
stos
push
pop
push
xor
inc
dec
bound
adc
cmpsb
and
andl
jae
testb
push
xchg
iret
enter
add
jno
mov
enter
out
xor
sbb
xchg
sbb
sbb
pop
stos
cmpsb
dec
sahf
ret
popa
or
adc
pop
adc
aam
ja
aaa
stos
sub
lods
pusha
cmp
mov
cmp
sbb
xor
fdiv
stos
gs
or
sub
lret
nop
test
pop
lret
add
adc
enter
cmc
stos
sbb
sub
loope
ret
inc
mov
in
xchg
repz
stos
scas
repnz
dec
xor
mov
mov
inc
outsb
insb
in
jmp
or
inc
stos
jno
xchg
sbb
loop
fldt
push
stos
push
loope
lcall
mov
xchg
jecxz
ss
shrl
lahf
mov
ss
movsl
cs
loope
imul
iret
ret
ljmp
jne
clc
stos
mov
mov
test
push
pop
dec
pop
inc
stos
cwtl
xchg
lahf
cli
aad
or
stos
pop
mov
push
insb
mov
out
aam
ret
sub
jge
mov
jb
mov
mov
jg
add
movsl
sbb
fldcw
cmpl
lods
popa
xchg
movsb
jmp
or
xor
mov
stos
nop
call
jl
inc
scas
jbe
test
xlat
jl
jnp
adc
stos
js
mov
ljmp
insl
jnp
mov
test
int
add
pop
stos
arpl
jmp
lahf
mov
movsb
int3
mov
push
adc
mov
sti
mov
js
outsl
stos
aam
addl
into
mov
xor
out
mov
mov
add
mov
stos
inc
loopne
int
fldenv
stos
scas
arpl
adc
push
stc
sahf
ds
stos
subb
mov
insb
ret
gs
inc
mov
jg
mov
xchg
pop
testl
push
mov
orb
daa
int
imul
cmp
sub
inc
addr16
adcb
stos
pop
dec
ljmp
inc
popa
fwait
jns
lret
mov
notb
jl
pop
dec
pop
inc
scas
stos
sbb
sub
test
adc
mov
sub
lret
pop
xchg
mov
mov
mov
and
mov
popf
pop
xchg
push
enter
stos
mov
jge
repz
mov
imul
test
enter
xor
pop
pop
stos
lret
cld
pop
jno
cmp
sbb
sbb
stos
rcrl
sahf
jmp
mov
and
stos
push
sub
push
daa
stos
add
flds
ljmp
mov
int3
out
shrl
pop
adc
pop
ja
inc
xor
mov
pop
movsl
in
push
stos
mov
sub
jmp
add
xchg
adc
stos
adc
cmc
popf
pop
stos
cli
in
out
xchg
and
stos
adc
mov
cmc
fistps
fs
repz
das
xchg
hlt
icebp
iret
mov
adc
stos
cmp
fsubrs
sub
xor
mov
mov
sbb
mov
stos
xor
mov
fwait
sub
std
lds
pop
stos
es
add
aas
stos
dec
inc
shrb
lcall
jne
sub
mov
mov
stos
add
xlat
repz
adcb
mov
cmp
inc
das
fwait
outsb
insl
dec
orl
in
stos
ffree
into
sub
pop
dec
stos
or
mov
fldt
jae
int
mov
adc
stc
sbb
test
mov
les
pop
and
pop
fucomi
and
sub
xchg
iret
arpl
loopne
lret
in
out
dec
dec
inc
stos
int3
sub
pop
stos
inc
movsl
and
dec
jmp
lds
mov
add
stos
add
enter
les
lods
insb
repnz
pop
jbe
jnp
int3
and
add
std
push
lret
or
bound
jmp
pop
repz
xchg
adc
dec
adc
fs
inc
lret
shrl
cmc
mov
dec
rcrb
scas
add
cmp
aaa
pop
cmpsl
stos
mov
adc
push
stos
push
test
push
stos
daa
adc
pop
push
loop
cmp
mov
lcall
je
out
stos
jle
ljmp
hlt
sbb
icebp
enter
insb
adc
mov
push
stos
mov
cld
sub
push
stos
cvtps2pd
inc
pop
mov
jmp
stos
lcall
sub
je
stos
aas
and
out
pop
push
fildll
fwait
icebp
pop
outsb
stos
mov
test
lahf
stos
je
test
add
mov
pop
inc
xor
stos
push
out
jecxz
add
dec
in
jne
push
dec
mov
push
pop
bnd
mov
xchg
stc
daa
inc
stos
rcrl
inc
jmp
pop
pop
xor
mov
pusha
icebp
lods
aam
mov
xor
outsl
insb
cmc
mov
mov
adc
mov
cmpsb
mov
or
stos
mov
jo
shl
push
lods
or
ljmp
movsb
dec
mov
stos
jne
cmp
sbb
inc
leave
sub
es
jl
mov
mov
xchg
xlat
lods
fcomps
adc
lcall
decb
mov
je
pop
jns
loopne
stos
inc
int
call
imul
stos
adc
int3
stos
scas
cmp
sbb
or
jle
leave
sbb
jmp
pop
mov
out
stos
je
sub
xchg
push
movsb
push
aad
cmpsb
subl
addr16
shrb
jg
inc
and
outsb
insl
xor
out
push
ljmp
test
xor
ss
xlat
sub
pusha
mov
insb
stos
sbb
in
test
lock
in
or
jp
pop
leave
gs
loope
ja
mov
inc
push
cmp
adc
jl
sarl
dec
xor
icebp
stos
mov
test
inc
ror
dec
sub
xchg
lahf
mov
stc
pop
fsubrs
push
ret
imulb
or
ss
insl
xor
xchg
lret
mov
shl
insl
and
xor
outsb
cmp
adc
ret
out
sbb
jle
outsl
xor
mov
ja
pop
or
dec
adc
fcompl
inc
shrb
jp
push
cmp
lret
xlat
ret
or
std
pshufw
inc
dec
add
cmp
pop
shll
rcll
cli
mov
into
cmpsb
leave
ja
ljmp
rcrb
stos
or
lret
ret
lret
sahf
mov
fwait
stos
push
pop
mov
popf
sbb
pop
dec
xor
stc
and
stos
es
xchg
mov
cmc
movsl
stos
xor
imul
sub
hlt
jge
mov
pop
push
inc
outsl
pop
xor
cmpsb
pusha
xor
jle
in
mov
shll
cli
mov
mov
mov
mov
mov
pop
jmp
rcll
mov
mov
mov
cltd
jns
inc
mov
inc
lcall
dec
call
xor
aas
push
xchg
sub
sti
jg
xchg
fwait
stos
or
jo
push
push
pushf
jb
mov
test
repnz
mov
in
xorl
xor
mov
jl
mov
dec
mov
pop
jmp
and
popa
mov
pop
xchg
jle
mov
push
scas
mov
cmpsb
repnz
and
and
ss
add
loop
stos
loopne
mov
pop
insb
dec
fsts
xchg
xchg
inc
iret
xor
pop
or
stos
insl
mov
lock
stos
loope
inc
jmp
stos
imul
inc
mov
xchg
and
dec
jmp
add
xor
sub
cmp
shl
mov
xor
stc
cs
xchg
or
cmc
cmp
fisttps
pushf
xor
mov
xor
push
xchg
repnz
dec
stos
xor
push
xchg
stos
iret
and
stos
shrb
in
cmp
jg
aaa
movsl
mov
out
das
inc
ret
sbb
adc
popa
inc
mov
notl
aas
jge
stc
push
jo
stos
dec
mov
pop
into
outsl
imul
pop
inc
mov
jmp
nop
mov
or
aas
jno
aad
jg
ss
loop
xor
fwait
lret
pop
inc
dec
js
insb
jo
div
sub
xchg
xor
sub
push
push
fwait
enter
stos
lock
xchg
cmpsb
cs
adc
mov
sub
mov
xchg
idivb
stos
and
jne
pop
add
push
sbb
xchg
adc
sub
pop
sarl
dec
aad
sbb
pop
sub
cs
mov
jmp
fidivs
out
shlb
mov
add
jnp
imul
mov
ficoml
jmp
xchg
xor
sbb
into
sti
push
jmp
or
ljmp
mov
inc
mov
ja
int
lds
mov
xlat
pop
cmp
ds
jae
cmp
incb
imul
jg
jno
pop
int
stos
cmp
lss
bound
rol
mov
pop
mov
jl
xchg
jle
sti
and
lods
inc
andl
test
mov
xor
push
in
shll
xor
movsb
out
sub
inc
dec
push
fldcw
scas
lock
stos
add
arpl
ficompl
stos
outsb
pop
push
mov
in
xchg
or
out
push
and
test
stos
jne
lea
pop
out
mov
add
and
mov
insb
add
mov
cmp
lret
xchg
call
popf
pop
push
xchg
ret
test
add
cmpsb
rorl
rolb
sub
xchg
stos
repz
cli
clc
out
xor
mov
xchg
pop
mov
out
mov
lock
mov
stc
or
sub
push
lods
mov
test
ss
xrelease
mov
out
out
stos
sbb
arpl
stos
vmovntpd
into
add
dec
stos
cmp
mov
test
sub
stos
mov
mov
mov
leave
jae
dec
xchg
stos
fwait
cmpsl
mov
scas
lods
sbb
sti
add
mov
sahf
jns
cli
stos
lret
lds
push
stos
push
imull
leave
dec
sbb
sub
lret
inc
out
aad
js
stos
mov
mov
mov
rcr
stos
loop
adc
jmp
cwtl
mov
mov
and
xor
stos
jae
call
adc
stos
rolb
stos
out
cmp
xor
and
movsl
lret
xor
cmc
mov
dec
orb
and
xchg
pop
insb
lahf
push
hlt
mov
rcll
lods
rclb
jecxz
lahf
leave
inc
test
xchg
xor
rcll
push
scas
sbb
nop
stos
aaa
push
pusha
add
daa
stos
mov
sub
stos
das
outsl
push
sbb
xor
jbe
xchg
push
inc
rol
lcall
daa
subl
lahf
stos
pop
dec
and
inc
xchg
leave
sbb
mov
jae
push
lret
in
das
mov
jno
xor
loope
jmp
addr16
cmp
call
mov
dec
test
lock
icebp
sbb
popa
mov
pusha
enter
stos
cmp
inc
mov
stos
les
ss
stos
and
inc
xchg
cli
loope
lcall
push
jg
dec
insb
dec
mov
mov
iret
add
xchg
sub
xchg
std
shlb
mov
enter
lcall
inc
mov
pop
dec
jae
sub
add
inc
test
or
stos
mov
outsl
sti
stos
and
and
stos
cmpsb
jns
adc
in
iret
insl
adc
scas
or
stc
stos
popf
ror
popa
xchg
push
stos
jne
pusha
pop
cmp
pushf
lock
pop
adc
or
cmp
test
insb
cmpsl
and
in
mov
mov
adc
ds
pop
ret
cmp
mov
sub
dec
imul
shl
fs
xor
mov
cs
push
aaa
mov
dec
dec
cld
test
mov
mov
jnp
cmp
inc
add
aam
nop
and
sub
insl
movsl
pop
inc
test
fnstsw
outsl
xchg
and
mov
xchg
sahf
adc
stos
icebp
sbb
stos
aam
or
sbbl
movsl
shl
stos
mov
push
inc
fildll
or
jne
sbb
and
xchg
adc
sbb
pop
scas
test
es
dec
jmp
dec
xchg
int3
mov
scas
pop
jmp
xlat
mov
jl
out
aas
xor
push
lcall
mov
popf
push
xor
ds
sbb
bound
leave
stos
pusha
shr
mov
xchg
ret
mov
mov
dec
jnp
mov
lret
es
stos
push
jbe,pt
jle
mov
xlat
pcmpgtb
jl
mov
es
outsb
xor
pop
dec
xlat
sub
and
je
lahf
add
nop
or
int
sbb
cmovs
sub
inc
add
jl
xchg
or
outsb
in
mov
jae
sti
sahf
lahf
stos
cmp
jno
xor
mov
push
cmpsl
jns
xchg
xor
push
sti
int
jp
cmp
mov
into
insb
xchg
sub
scas
mov
test
inc
ds
dec
inc
outsb
add
in
push
out
in
loop
jmp
lea
lock
mov
jmp
fs
and
cwtl
ds
jl
in
sti
das
daa
filds
lcall
pusha
arpl
stos
inc
mov
mov
in
pop
rol
mov
xor
jns
xchg
je
cmpl
mov
lods
adcb
jae
mov
rcrl
sbb
jb
add
adc
mov
add
clc
lock
enter
mov
ret
add
imul
imul
insl
cmpsb
in
mov
stos
xor
cmp
roll
imulb
movsb
aaa
fisttpll
ss
pushf
pop
lret
jae
sub
fwait
stos
mov
cmp
jp
xor
call
and
pop
mov
out
add
and
mov
stos
mov
and
stos
adc
xor
stos
mov
inc
fcomi
inc
fldcw
pop
lret
ret
sahf
stos
jmp
inc
pop
adc
int
insl
push
fmuls
cmp
ret
or
out
sub
sub
imul
outsl
mov
sbb
dec
aaa
mov
leave
sahf
imul
pop
xchg
inc
push
mov
clc
stos
mov
insb
push
pushf
stos
lret
sbb
pop
jns
jecxz
stos
pop
xchg
or
mov
add
mov
mov
push
sbb
cmc
mov
and
xchg
sub
fimuls
cld
in
lcall
inc
ljmp
pop
lcall
rcrb
add
movsl
xchg
fimuls
pusha
push
mov
mull
cmp
in
lret
das
icebp
mov
jge
stos
daa
into
jecxz
cmp
lods
lea
stos
cmp
scas
ljmp
sub
mov
or
shrb
mov
cs
in
mov
or
jge
loope
dec
aaa
and
stos
inc
orb
stos
sti
scas
push
cmovs
jno
sbb
iret
mov
sti
push
jp
dec
shrb
jle
lods
jbe
mov
stos
inc
imul
push
inc
out
stos
enter
add
inc
xchg
xor
add
popf
pop
and
lds
cmpsb
sbb
pop
pop
adc
inc
insl
pusha
addr16
test
mov
outsl
sub
xor
cli
fwait
mov
hlt
stos
fprem
mov
stos
jg
cmpsl
xlat
and
fcomp
mov
pop
aas
jmp
js
push
mov
and
push
fisubs
out
stos
xchg
mov
movsb
stos
rolb
mov
std
cmp
push
stos
push
fistps
mov
cld
dec
nop
arpl
xor
jg
pop
cs
adc
jmp
out
sub
jno
jmp
test
mov
aaa
pop
arpl
icebp
mov
outsl
xor
loop
in
push
mov
stos
ret
xchg
inc
cs
repnz
stos
jo
mov
stos
and
xorb
dec
sahf
jne
fdiv
push
mov
test
stos
repnz
outsb
dec
pop
push
fsubrl
lds
mov
mov
jg
ja
idivl
aam
push
adc
jb
pop
mov
add
outsl
adc
inc
sub
insl
mov
rcrl
fiaddl
shll
mov
stos
or
push
loope
jmp
or
aaa
stos
shll
mov
sahf
push
call
es
mov
jbe
std
sbb
or
ljmp
repnz
mov
jne,pn
shll
fstl
je
pop
nop
xchg
inc
and
cltd
pop
stos
sub
inc
dec
out
shrl
aaa
mov
jmp
shr
stos
scas
or
jo
xor
ja
sti
movl
addl
xchg
je
xor
mov
sbb
es
sti
adc
mov
cmp
jp
xchg
je,pt
stos
movsb
outsb
sub
xor
inc
out
mov
inc
shr
test
xchg
push
pop
stos
inc
popl
jecxz
mov
stos
sbb
es
add
clc
inc
jno
add
ret
stos
sbb
and
loope
popf
gs
stos
shrl
call
dec
jns
sbb
mov
das
inc
shr
pop
test
loopne
and
lret
mov
stc
mov
jg
sub
xor
adc
clc
stos
mov
rol
xchg
movsl
adcl
stos
daa
sbb
jge
test
push
sub
xchg
pop
cmp
rorb
mov
jmp
mov
sub
sub
fwait
sbb
in
test
xchg
push
sbb
sbb
sub
mov
mov
sub
mov
jmp
xor
inc
mov
int3
sub
jnp
jle
sbb
mov
dec
mov
rcl
push
enter
and
ret
or
xlat
stos
call
sbb
stos
in
popf
pop
add
out
stos
lahf
movsl
xor
ror
or
jne
iret
lret
jb
ficoms
lcall
pop
arpl
sbb
les
push
adc
xchg
nop
stos
jecxz
cmp
repnz
jne
mov
mov
int3
mov
sbb
ljmp
sarl
aad
notl
insl
xor
inc
mov
stos
push
mov
jb
divl
xchg
push
adc
sahf
push
dec
popa
ljmp
or
and
je
cmpb
test
jo
das
mov
ret
in
div
pop
in
mov
push
rorl
iret
scas
lods
stos
out
fstpt
stos
out
popa
sbb
lea
rcl
cmpsb
pop
adc
jmp
out
sbb
and
mov
loopne
stos
fwait
movsl
push
or
js
xchg
lahf
and
add
lcall
stos
mulb
into
push
inc
adc
cwtl
test
movsb
add
adc
fwait
jnp
rclb
icebp
add
stos
cmp
bound
jp
cmpsb
inc
jecxz
mov
push
adc
mov
stos
pop
ret
push
cltd
sub
jmp
icebp
pusha
add
fistpl
stos
xor
cmp
xchg
dec
jg
stos
je
cmpsl
mov
out
fcoms
loope
out
mov
adc
jmp
dec
pop
adc
xchg
inc
stos
pop
ret
movsl
out
in
loope
gs
pop
push
sbb
scas
inc
fs
in
jo
xlat
xchg
out
stos
aas
mov
inc
cltd
xchg
xor
pushf
fwait
stc
mov
push
mov
inc
stos
arpl
sub
inc
push
lahf
mov
loop
adc
and
test
in
stos
mov
sub
xor
lcall
insb
lock
cs
ss
pop
adc
and
repnz
test
add
sbb
pushf
movsl
xor
push
and
adc
pop
in
push
xchg
cwtl
mov
xor
lea
xchg
adc
mov
ja
aam
pop
lods
xorb
mov
jb
jle
adc
lds
add
mov
and
sbb
mov
stos
int
cmpb
stos
addr16
mov
js
jmp
sbb
stos
jp
mov
out
call
es
shll
into
stos
dec
mov
mov
cmc
sbb
insl
xchg
adc
int
mov
stos
subb
gs
arpl
nop
test
insl
dec
jmp
mov
daa
cld
stos
sbb
fimull
inc
add
mov
pop
adc
loop
stos
sbb
jne
sbb
add
lahf
repnz
addr16
xor
lds
popf
nopl
insb
and
nop
and
scas
mov
bound
stos
adc
int3
ds
cmp
xorb
push
pop
ljmp
push
fistl
and
outsb
fisubrs
mov
test
mov
in
subb
jnp
pop
lds
rorl
inc
stos
sub
dec
stos
and
shll
sbb
sbb
mov
mov
lret
stos
aaa
ljmp
stos
push
sahf
mov
mov
stc
jne
mov
ja
stos
mov
inc
or
stos
pusha
clc
jl
shll
mov
jns
push
jae
out
sbb
or
cli
stos
jg
cmp
xchg
add
outsb
in
call
pop
stos
inc
cli
lds
mov
fwait
stos
jecxz
neg
and
jbe
lods
jp
pop
sahf
stos
leave
shr
adc
or
push
cld
fsubl
xchg
outsl
mov
stos
ss
cmp
js
pop
stos
pop
mov
ljmp
adc
pop
out
sahf
testl
imul
pop
jle
jne
mov
mov
movsb
inc
adc
pop
repz
insb
sbb
mov
xchg
jl
add
ret
mov
pushf
sub
imul
out
xchg
mov
sarl
adc
jp
adc
or
mov
shrl
fadd
pop
xchg
mov
cmp
sbb
gs
push
ret
pusha
mov
or
stos
loope
sub
ljmp
ret
sar
xchg
inc
test
mov
scas
in
dec
mov
dec
sbbb
sbb
sub
or
add
in
dec
sar
das
jnp
mov
mov
sub
dec
mov
cmp
lret
popf
pop
outsl
popa
call
pop
push
rcrb
jge
mov
stos
dec
icebp
les
stos
jecxz
and
mov
aas
pusha
cmp
adc
push
mov
out
xchg
dec
testl
sahf
les
dec
jmp
repz
xlat
neg
iret
ret
stos
adc
enter
ljmp
out
jnp
stos
jle
mov
mov
pusha
and
out
fdivl
cmpsb
test
dec
xor
inc
in
arpl
clc
test
lret
push
stos
sub
jge
pusha
nop
dec
or
fstps
pop
cmp
adc
jg
sub
cmpsl
insl
daa
mov
test
dec
enter
popf
sub
jmp
mov
sbbl
jno
movsl
lea
out
ds
push
pop
stos
and
jg
stos
xor
std
mov
stos
imul
push
mov
cs
cld
data16
mov
stos
pop
cmpsb
not
mov
jmp
adc
jno
stos
mov
test
and
sbb
shll
xor
jmp
addl
inc
insb
lahf
inc
cmc
in
lock
ljmp
mov
fildll
cltd
into
in
jne
gs
jle
adc
mov
xor
fistpl
or
stos
aad
and
icebp
jo
jle
fs
imul
stos
cmp
mov
mov
xlat
add
shrb
int3
pop
sub
add
sub
pop
mov
cmp
stos
dec
lods
ror
daa
stos
jmp
fimull
xor
mov
inc
jp
call
xchg
insb
inc
jbe
daa
enter
or
xlat
push
insl
add
mov
jb
mov
cmp
sbbl
je
setle
sbb
cwtl
xor
adc
or
and
or
leave
inc
mov
icebp
sti
adc
iret
cmp
mov
mov
shl
xor
add
sbb
movsb
and
loop
inc
test
xchg
mov
mov
scas
shll
lods
ds
stos
or
mov
test
cmp
inc
sbb
jge
lea
fs
stos
xchg
shrl
or
stos
insb
repz
les
daa
bound
mov
ret
mov
in
cmpsb
and
cmp
inc
stos
inc
stos
shl
and
xor
mov
nop
test
dec
stc
pop
push
subb
outsl
mov
sbb
ficompl
mov
jns
and
mov
sub
or
loop
mov
pop
push
out
stos
ds
aad
test
xor
lcall
lret
repz
test
inc
add
stos
jge
jae
mov
fwait
mov
stos
sbbl
sub
pushf
in
arpl
or
mov
loopne
add
adc
insb
js
add
rcr
movsb
jmp
cmpsb
stc
ret
jbe
int
mov
dec
and
sub
stos
jle
push
cmc
ret
xor
incl
loop
push
pop
jmp
lret
popf
repnz
insb
out
aad
jae
lds
mov
cmc
jb
divl
jg
dec
add
cmp
xchg
jge
cmp
hlt
inc
xchg
fwait
adc
dec
pop
xchg
lea
stos
cld
jecxz
mov
stos
add
dec
xchg
outsl
jge
sbb
push
push
push
mov
mov
adc
mov
xchg
outsl
stos
dec
data16
outsb
sbb
or
sbb
jmp
stos
or
repz
mov
dec
and
mov
ficoms
stos
pusha
or
rolb
inc
cld
stos
fnstenv
sub
insl
jnp
sbb
cld
stos
fs
fldlg2
stos
pusha
push
adc
pop
mov
scas
lcall
sub
cld
stos
mov
mov
stos
push
shrb
adc
pop
mov
les
stos
pop
loope
rorl
out
mov
pop
xchg
stos
adc
stos
fisubs
dec
dec
stos
mov
lahf
xchg
cmp
fcmovne
stos
fdivr
jmp
gs
maxps
lods
stos
xchg
imulb
xchg
add
dec
movsl
jle
inc
enter
add
inc
stos
lods
jnp
add
mov
stos
dec
pop
cmp
bound
dec
je
repz
or
lds
fstl
fwait
leave
in
push
xor
mov
testb
cltd
inc
jg
or
xor
stos
and
push
jae
out
xchg
mov
stos
test
push
cmp
rcrb
dec
fsubs
stos
lock
negl
mov
and
pop
rolb
stos
arpl
and
pop
push
push
imul
mov
mov
repz
imul
fsubs
cmpsl
out
sub
jno
add
test
loop
lea
and
stos
sbbl
movsb
xchg
inc
cmpsl
inc
icebp
stos
aad
or
xor
loopne
stos
sub
rcrl
dec
dec
jmp
pop
stos
mov
jecxz
iret
dec
push
fistps
lods
mov
adc
stos
std
inc
stos
adc
cmpsl
xchg
pop
jmp
in
cwtl
imulb
push
adc
jmp
pop
icebp
in
or
shll
stos
call
stos
cmpsl
xor
cmc
addr16
popf
adc
stos
and
mov
mov
jmp
xchg
js
cmp
insl
lods
jo
and
mov
movsl
pop
or
adc
sbb
xchg
sub
push
mov
pop
stos
mov
cs
stos
addr16
dec
test
insl
adc
stos
stos
mov
mov
incb
jge
inc
and
nop
push
mov
int
rcrb
pop
arpl
dec
sub
int3
xor
sbb
xor
ffree
mov
and
jae
in
cmp
jo
daa
sahf
mov
pop
xchg
or
jl
add
fs
or
addr16
inc
aad
cs
add
push
outsl
outsb
xchg
mov
pop
out
sti
cwtl
insb
js
into
clc
out
mov
or
stos
push
aas
pop
and
inc
outsl
out
popl
and
stos
cwtl
add
adc
pop
mov
fcmovnb
dec
dec
stos
icebp
inc
movsb
setae
mov
lret
inc
insl
repnz
push
or
ret
stos
pop
ljmp
ret
xor
push
jg
or
stos
cmp
fdivrs
pop
xor
mov
clc
xlat
or
ss
fadds
in
stos
xchg
out
lret
lea
lcall
lods
lds
mov
cmp
lahf
test
in
mov
bound
scas
fnstenv
sub
fwait
insb
mov
fsubl
repnz
outsl
jp
xchg
loop
xor
or
cmp
std
add
sub
cmc
adc
and
sbb
movsb
adc
xchg
stos
popa
mov
sub
imul
add
stos
jle
scas
nop
ret
stos
xchg
cmp
loope
inc
int
fstl
aaa
sbb
stos
rorb
inc
jl
jo
pop
mov
stos
das
cmp
adc
jno
and
fwait
mov
fidivrs
and
jecxz
loop
inc
xchg
pop
cmp
shl
adc
rol
sbb
mov
push
ret
cmc
lods
mov
mov
inc
lcall
inc
mov
xchg
mov
aas
bound
aad
fs
into
imul
icebp
js
sub
mov
mov
add
xchg
adc
fidivs
xor
imul
jnp
mov
mov
adc
das
int3
add
addl
stos
and
pop
in
cs
push
xchg
sub
sbb
mov
rol
cs
ss
mov
cltd
stos
sti
mov
or
call
mov
addl
xchg
add
mov
fcomps
xor
dec
cmpb
xchg
pushl
iret
mov
insb
out
push
aad
gs
imul
dec
roll
stos
aas
add
jmp
jne
jnp
insb
int3
addb
sub
test
and
mov
push
stos
repz
jb
and
stos
and
sbb
sub
repz
pop
fs
stos
pushf
cmpsb
test
fxch
jecxz
jmp
cmp
mov
mov
push
adc
mov
loop
pop
push
test
cmp
stos
lret
loope
jg
and
stos
out
mov
test
add
addr16
std
adc
aam
push
push
stos
ror
mov
push
insl
pop
cmp
arpl
stos
mov
push
dec
mov
mov
je
pusha
stos
test
nop
sbb
and
and
mov
lcall
xor
or
dec
fcompl
lock
push
jns,pn
mov
mov
fistpll
sub
xor
rcrb
mov
push
jle
adc
aam
stos
pop
andb
shrl
aad
cmp
pop
scas
out
add
mov
inc
ret
mov
out
shrl
mov
mov
jmp
jmp
ret
and
insb
jmp
loopne
sub
push
add
and
inc
lods
leave
inc
jmp
jmp
dec
jns
dec
ljmp
add
es
jp
mov
int3
inc
imul
out
sbb
inc
insl
icebp
dec
sub
sub
fdivrs
mov
xor
mov
and
sub
add
mov
and
add
xchg
int3
shlb
or
stos
sub
cmpsb
lods
mov
test
xor
pusha
cmpl
sahf
repnz
mov
xchg
push
movsb
mov
out
jge
out
jmp
stos
xlat
sbb
scas
pop
cli
popa
add
push
dec
sahf
outsb
stos
jbe
mov
insl
pop
popa
out
stos
leave
sub
inc
mov
scas
ja
enter
stos
or
lods
or
stos
jae
int
pop
das
fsub
lds
stos
frstor
repz
xchg
pop
fbld
push
cld
in
inc
test
xorb
dec
lret
sub
aad
aas
pop
ljmp
add
lahf
jp
stos
jmp
mov
stc
mov
pop
hlt
pop
stos
or
xor
leave
xor
xchg
ret
xchg
jo
test
shl
pop
pop
loop
stos
outsl
xor
jge
add
lds
pop
das
cmpl
mov
loopne
fnstsw
jl
pop
lds
jae
shlb
fwait
nop/reserved
sbb
mov
dec
xchg
lret
pop
mov
int
push
sub
adc
stos
push
ret
dec
jb
inc
or
push
mov
mov
adc
push
ja
stos
lds
jmp
std
insl
xor
push
mov
mov
stos
ret
jne
mov
ljmp
aad
popf
jo
hlt
push
out
mov
stos
jl
and
cmpsb
fcomip
outsb
mov
aaa
loopne
sbb
int3
in
stos
xchg
add
or
ror
scas
adc
test
jecxz
stos
pop
popf
inc
cmp
stos
inc
lret
shrl
add
sbb
stos
and
leave
or
stos
inc
insb
sub
inc
stos
outsl
fidivrs
add
sti
pop
sbb
scas
stos
mov
push
mov
leave
mov
pop
sub
mov
int
fmulp
stos
mov
rclb
mov
mov
out
in
mov
mov
mov
jge
or
inc
in
lret
scas
xor
mov
ret
cmp
xor
sbb
popa
pop
mov
mov
adc
adc
lods
mov
adc
jge
mov
test
mov
je
push
rep
mov
and
in
xchg
stos
jmp
cmp
insb
testb
gs
jb
lods
daa
mov
mov
pop
inc
enter
add
jae
aaa
jecxz
stos
xor
mov
add
bound
add
stos
adc
inc
mov
mov
or
fstpt
rclb
fld
jmp
out
ljmp
or
js
xchg
mov
adc
xor
leave
push
stos
mov
cmp
jb
enter
jg
insl
aam
sbb
mov
fs
scas
rolb
sar
negb
imul
jno
push
mov
fiadds
cmp
push
fistps
add
mov
xor
xor
jno
and
loopne
pop
add
push
jmp
xchg
ret
ret
icebp
imul
stos
mov
ds
cld
lock
adc
pop
sbb
mov
fisttps
js
xor
stos
mov
mov
push
mov
or
push
dec
pop
or
pop
stos
sti
aad
sub
pop
jnp
stos
mov
mov
and
add
bound
adc
lods
divl
mov
push
scas
and
stos
jle
mov
xchg
jmp
out
xchg
jo
les
push
jmp
dec
aas
mov
xor
stos
call
xor
mov
xchg
stos
xchg
add
mov
mov
jae
xchg
in
sub
inc
stos
je
les
pushf
stos
jno
int
cmc
rorl
lret
stos
mov
mov
stos
pop
ret
int3
pushf
or
or
stos
cmpsl
subb
aam
cmc
in
push
adc
dec
mov
or
popf
lahf
repnz
shrl
xor
mov
or
xchg
add
sub
sets
insl
add
cmpsl
mov
outsb
dec
dec
xor
mov
mov
inc
subb
outsl
lea
fldt
and
add
adc
test
fwait
shl
addr16
stos
adc
test
movb
cli
pop
inc
adc
aaa
or
add
stos
das
pop
xor
out
jae
jno
fnstcw
ljmp
clc
xor
mov
insb
dec
mov
bound
jbe
in
fdiv
clc
jnp
outsl
dec
ss
in
xchg
ret
push
int3
nop
out
stos
xlat
and
cmp
jbe
push
xor
push
jbe
iret
fs
dec
test
xchg
mov
fucom
dec
sbbl
jae
pop
jg
in
outsl
cmp
sbb
jmp
and
stos
in
iret
lds
insb
sti
test
lds
ss
insl
xlat
inc
inc
push
sbb
ss
dec
stos
pop
jle
adc
ljmp
aas
mov
rol
mov
mov
mov
jle
call
adc
ljmp
mov
pop
lods
adc
out
mov
repnz
mov
cmc
mov
cmp
popf
shrb
xchg
leave
dec
cs
sbbl
push
sbb
stos
icebp
xchg
std
jge
jecxz
sahf
outsl
xor
mov
cmc
stos
mov
jle
ficompl
pusha
mov
movsb
mov
stos
std
or
inc
adc
xchg
jg
fisubrs
push
push
xchg
mov
stos
push
or
dec
mov
addr16
push
adc
lcall
add
dec
cmpl
mov
fidivrs
loope
stos
push
jbe
mov
insl
in
gs
das
mov
mov
sbb
in
lods
stos
or
fwait
movsl
xor
out
imul
xchg
sbb
popa
mov
lret
shrb
js
inc
mov
mov
mov
lods
and
xchg
popa
dec
stos
jle
into
push
lods
and
jo
notl
lock
pop
cmp
sub
out
mov
gs
popa
subl
call
call
mov
add
inc
cli
mov
imul
and
aaa
repnz
adc
xor
mov
xchg
daa
adc
pop
imull
xchg
and
dec
lret
outsl
cli
sub
cmp
fldcw
leave
cmp
fwait
lcall
insb
xchg
or
movsl
mov
popf
leave
stos
call
fidivrl
mov
popa
cmp
movsl
stos
mov
loopne
sbb
sbb
leave
aam
mov
xchg
sarb
stos
jbe
stos
imul
int
fnstsw
lods
xchg
pop
mov
stos
xlat
mov
clc
shrl
jno
gs
aad
sub
dec
loop
lahf
stos
push
and
stos
push
xchg
dec
xchg
cmp
xor
ljmp
lock
cs
lret
pop
cltd
push
mov
fistps
mov
jl
mov
push
and
fstl
xor
cmc
mov
aad
aaa
and
jg
inc
mov
icebp
or
stos
xor
and
xor
sub
orl
ja
stos
and
stos
lret
rol
add
mov
aaa
cmp
lods
dec
pusha
stos
add
or
out
mov
loope
dec
jp
adc
mov
insb
cmp
push
mov
xlat
stos
int3
xor
imul
stos
jno
mov
dec
outsl
jmp
cld
fsubrl
push
pop
jnp
jne
nop
stos
dec
sbb
stos
mov
fistl
inc
clc
stos
dec
int3
jle
outsl
or
add
adc
sti
sub
stos
pop
sbbl
sahf
fsubr
xor
dec
stos
jb
adc
scas
movsb
push
repz
jp
mov
and
hlt
scas
out
ret
popf
add
shrb
mov
sahf
mov
cld
xchg
out
sbb
stos
add
call
lea
mov
pusha
and
pop
dec
insb
fisubrl
fnsave
inc
mov
daa
mov
push
mov
pop
in
xchg
mov
inc
decb
xor
loope
jbe
rorl
or
xor
jns
mov
mov
ljmp
lea
mov
xor
mov
stos
sub
mov
jecxz
stos
sub
sub
and
in
lahf
push
sbb
stos
out
jge
and
out
stos
inc
jg
ljmp
pusha
test
pop
mov
ffree
xchg
jae
stos
pusha
loopne
lds
cmp
sbb
jp
movsl
push
sahf
ja
xchg
lret
xchg
in
in
or
push
mov
leave
stos
fs
imul
jmp
test
mov
outsb
stos
and
or
mov
jb
xor
mov
in
lahf
jge
jnp
pop
sub
stos
fsts
test
cmc
jae
stc
out
jecxz
shlb
jl
pop
mov
stos
imul
pop
stc
xchg
mov
in
xor
adc
sub
jecxz
in
inc
popa
pop
mov
or
daa
cli
insl
aas
fcompl
xor
stos
adc
cmp
adc
outsl
outsb
scas
push
xchg
popa
iret
stos
popf
or
inc
jmp
push
sbb
fs
fisubrl
dec
and
stos
pop
xchg
lahf
and
ficomps
stos
cli
or
xchg
adc
xor
jmp
mov
jne
in
cmp
subb
and
and
insb
jg
in
dec
add
sub
cmpsb
dec
mov
outsl
sbb
and
ret
sbb
stos
mov
mov
stos
dec
xor
pusha
mov
imul
in
fucom
outsb
push
mov
xchg
jle
orl
push
test
dec
fwait
mov
push
inc
iret
je
int3
and
js
gs
jno
lods
mov
idivb
nop
bound
push
enter
addr16
adc
inc
jl
jle
xor
inc
mov
outsl
push
jge
and
lret
insb
mov
lea
mov
in
cmpsl
out
xchg
stos
iret
or
lret
loopne
ror
mov
pushf
xchg
outsl
cmc
fldcw
imul
dec
or
insb
sbb
mov
int
stos
mov
scas
ja
stos
ds
xchg
pop
inc
sub
movsl
stos
xchg
out
div
ficompl
fisubrs
xchg
shrb
cli
out
stos
ltr
push
cmp
jp
adc
xchg
outsb
cmp
stos
bound
ret
push
mov
jmp
test
jno
mov
inc
cmp
aad
insb
xor
pop
dec
rcrb
enter
sub
icebp
int3
lds
xor
jmp
jne
mov
stos
pop
cs
loop
mov
stos
mov
fistps
stos
mov
jne
movsb
stos
mov
push
in
stos
pusha
adc
sub
xchg
gs
or
flds
jmp
pop
int3
xchg
dec
dec
and
xorl
int
mov
popf
test
iret
sbb
and
loope
jp
inc
sub
mov
ljmp
cmp
js
ljmp
pushf
cs
mov
stos
pop
xchg
call
lods
sbb
jo
mov
and
pop
mov
mov
push
inc
mov
sub
inc
adc
nop
cmp
stos
xchg
pcmpeqw
stos
sbb
lcall
icebp
or
es
push
cmp
xorl
add
repnz
xor
add
movsb
jmp
inc
and
aad
inc
lock
movsl
arpl
dec
add
sub
outsb
stos
mov
cmp
ljmp
test
cmc
mov
sub
jae
stos
xor
insb
or
xchg
js
in
les
pop
scas
pusha
fadd
dec
stos
int
in
jge
inc
mov
scas
push
xchg
mov
lds
xchg
mov
jo
jns
cmp
mov
and
xchg
sbb
xorb
mov
stc
fildll
jg
pandn
inc
clc
out
mov
adc
call
mov
stos
or
jge
movl
cmp
mov
inc
aam
adc
out
stos
cmp
stos
pop
mov
xchg
xor
fwait
insb
xchg
and
add
jmp
jno
cltd
or
push
jae
mov
sub
hlt
xchg
inc
movsl
jne
js
xchg
cmp
rol
inc
fsts
pop
stos
sbb
jp
mov
shrb
mov
and
jle
in
je
aas
stos
das
push
mov
cmp
sbb
popf
mov
rep
out
xchg
xor
sub
mov
mov
inc
jo
imul
stos
adc
out
add
mov
push
xchg
cmp
xchg
stos
dec
and
inc
stos
je
aad
jnp
pop
shrl
jmp
sbb
adc
push
jnp
dec
sub
mov
stc
or
and
dec
sub
insl
lcall
mov
mov
dec
push
dec
add
insb
inc
xchg
xchg
and
or
xchg
mov
fnstsw
mov
iret
and
fdivs
sbb
mov
in
sub
dec
stos
dec
xchg
add
fldcw
dec
outsl
stos
jge
insl
hlt
rcrb
stos
add
flds
stos
mov
loope
out
hlt
and
rep
inc
loopne
xchg
jmp
push
cmp
rolb
stos
lret
iret
lea
or
gs
bound
push
notb
faddl
lods
dec
jo
cmpsl
mov
push
loop
xchg
sub
stos
push
fmul
icebp
add
mov
andb
pushf
mov
cmpsb
dec
shrl
ja
xchg
sbb
aam
mov
stos
insb
pop
jns
or
push
sbb
fxch
add
scas
pop
bound
cmpsl
cmc
stos
dec
fadds
sub
push
ss
and
hlt
ret
jge
aad
sub
outsb
jecxz
cmp
lret
cmpsb
cmp
xchg
mov
mov
xchg
push
jl
stos
mov
rcrb
sub
xchg
push
aas
fwait
push
jb
stos
in
inc
mov
stos
jns
cmp
xor
pop
stos
or
add
jmp
insb
aas
in
imul
lods
test
xchg
cmc
stos
aam
or
pop
stos
push
xchg
shll
push
icebp
mov
jbe,pn
call
jge
lahf
stos
scas
test
lock
inc
cs
mov
mov
fildll
daa
out
stos
mov
int
mov
push
sahf
pop
xchg
adc
mov
popf
pop
jno
or
insl
int
clc
pop
cltd
dec
dec
int3
mov
repz
ss
out
pushw
stc
jb
xchg
stos
lret
mov
sub
ficoml
daa
jno
cmpl
mov
mov
sbb
mov
and
jmp
or
mov
xorb
insb
xchg
cwtl
es
pushl
aaa
imul
mov
xlat
sti
mov
cs
leave
out
in
lock
cmc
mov
inc
sub
out
stos
or
and
int
jl
mov
stos
icebp
arpl
stos
in
popa
call
out
or
icebp
pop
push
shll
sti
stos
popf
push
mov
xorl
or
lahf
and
mov
adc
cmp
fstp
outsb
inc
pop
addr16
xchg
scas
jl
pop
add
jb
push
outsb
cs
fwait
mov
mov
out
shl
inc
inc
mov
mov
stos
mov
xor
mov
loope
or
out
test
popa
iret
xor
jne
insl
daa
mov
push
stos
outsl
ret
xor
in
getsec
testb
sahf
sub
rcrl
pop
sub
jp
stos
xor
inc
xchg
les
ljmp
stos
or
mov
stc
xchg
cmpsb
dec
sbb
out
sbb
mov
ja
inc
ss
mov
ret
stos
mov
push
test
insb
cmc
jge
jne
lret
xchg
test
xor
mov
ds
and
stos
ja
scas
jae
divl
fwait
stos
sub
fsubrl
add
test
out
stos
sahf
in
gs
ds
ljmp
mov
sbbb
je
push
inc
push
cmc
jmp
push
pop
adc
ret
adc
mov
fsub
mov
add
aam
cwtl
dec
mov
and
icebp
inc
in
in
mov
lcall
imul
out
push
push
stos
xor
mov
jl
movsb
ljmp
in
lods
or
imul
insb
xchg
in
jb
test
mov
stos
push
data16
xchg
sub
in
pop
inc
dec
push
mov
gs
fwait
and
sbb
fwait
xchg
mov
sub
sub
ds
stos
outsl
std
insl
jp
negb
stos
or
xor
out
jnp
push
or
cmp
mov
sub
mov
stos
loopne
fdivp
or
or
xor
cltd
mov
mov
push
bound
sarl
subl
insb
in
inc
mov
in
sub
mov
popf
scas
mov
enter
push
mov
jmp
cltd
movsl
or
and
dec
mov
sub
loope
sbb
and
xchg
stos
pop
pop
loopne
sbb
push
stos
push
xor
ja
xchg
mov
pop
xchg
jno
pop
ljmp
lods
mov
testb
mov
adc
jae
add
sbb
xchg
or
push
mov
sar
stos
int
hlt
pop
inc
bound
insb
sbb
mov
push
shrb
test
xor
fisubs
pusha
scas
stos
rcrb
stos
int
repnz
pop
jg
or
push
stos
lods
into
adc
mov
pop
hlt
dec
jmp
pop
pushf
stos
sub
push
and
stos
in
cmp
pop
stos
fisubl
dec
xor
loop
mov
stos
repz
add
in
lods
insb
xchg
cltd
mov
push
xchg
outsb
and
cld
sbb
mov
mov
rclb
insb
jp
dec
mov
sub
cs
mov
xchg
adc
loop
pop
stos
adc
pop
pop
in
sub
mov
xor
sub
dec
push
cwtl
mov
cmp
test
jg
sub
stos
insb
filds
es
xor
sahf
das
ss
stos
jo
inc
adc
pop
dec
pop
stos
cmp
inc
cwtl
xchg
fst
stos
mov
pop
pop
jbe
fs
stos
xchg
jle
mov
mov
mov
jno
stos
pop
push
mov
push
into
add
mov
shrb
leave
inc
mov
stos
cwtl
daa
or
ljmp
adc
mov
mov
fsubrl
adc
sbb
mov
lock
stos
test
push
adc
nop
sub
mov
lock
add
xchg
shrb
mov
int
dec
mov
paddd
cmpsl
orb
mov
and
push
add
push
sti
jnp
outsl
adc
adc
fsubrl
fstpt
add
push
ja,pn
insb
add
lea
dec
scas
sub
arpl
cmp
jmp
in
mov
mov
out
jle
stos
pop
inc
push
mov
stos
stos
lea
aad
out
or
sub
stos
pop
test
test
in
jbe
daa
fwait
cmp
pop
scas
mul
loopne
shlb
and
rcr
or
xor
std
orb
loop
stos
adc
add
jmp
pop
mov
testb
ljmp
ljmp
xchg
imul
ficompl
ret
stos
fisttps
ss
pop
xchg
mov
jmp
out
push
pop
sbb
mov
fisttpl
insb
pop
pop
inc
cmp
mov
test
mov
fs
xchg
fstp
or
jnp
mov
icebp
or
adc
xor
call
ljmp
insb
stos
or
jbe
pop
leave
enter
cmp
inc
xchg
cld
js
mov
mov
stos
fisttps
dec
mov
rclb
jno
ret
sub
mov
inc
inc
add
mov
insl
or
leave
sbb
out
jne
sub
jg
jl
into
xor
cmc
ret
aaa
stos
enter
nop
adc
xchg
stos
lods
xor
hlt
push
add
inc
or
loop
loopne
stos
or
mov
aam
in
repnz
decl
jo
xchg
sbb
xlat
push
cltd
adc
mov
stos
jmp
mov
aam
lods
cmp
cs
xorb
cmp
and
stos
aaa
negl
sub
inc
dec
stos
adcb
fisubrs
add
push
jmp
in
mov
mov
das
popa
imul
push
lahf
or
mov
mov
mov
in
cmpsb
mov
stos
pop
and
popf
sbb
popa
out
fs
cltd
je
stos
adc
adc
stos
int3
mov
jmp
inc
loope
mov
mov
stos
lcall
adc
mov
mov
xor
xchg
xor
lods
stos
add
test
imul
sbb
dec
arpl
outsl
cmc
mov
jnp
scas
in
dec
or
cltd
add
inc
cli
and
xor
stos
add
and
out
stos
or
pop
fldenv
aaa
lret
nop
sub
mov
sbbb
ret
xchg
pop
xchg
int3
insb
sahf
cmpsl
jnp
rcr
mov
shl
data16
lea
stos
sti
jle
pop
shl
fidivrl
stos
test
pop
pusha
mov
movsl
stos
mov
dec
lods
sbb
sbb
xchg
rolb
std
mov
aas
push
jmp
sti
xchg
mov
cld
add
cmpb
out
cs
pop
les
dec
mov
mov
add
daa
test
loop
pop
adc
xchg
cmpsl
cmp
push
push
out
push
in
xchg
icebp
adc
jb
mov
lahf
stos
cmp
xchg
cs
cmc
cmp
pop
int
dec
mov
fistpll
aad
lcall
cli
ljmp
xor
cwtl
stos
adc
aad
and
pop
stos
inc
gs
dec
jl
adc
in
or
add
iret
sub
aas
push
ret
stos
push
cmpsb
insl
and
xchg
pop
hlt
mov
stos
loop
push
mov
sub
stos
ss
mov
ds
lods
out
pop
jmp
or
lret
pop
cld
xorb
mov
and
mov
xlat
sbb
mov
jo
fidivs
stos
push
aaa
add
pusha
je,pn
addr16
nop
push
push
test
bswap
loope
arpl
aam
int3
test
push
or
cmpsl
cwtl
int
in
mov
lret
ds
cmpsb
sbb
enter
stos
fdivl
lret
dec
ja
inc
out
or
push
inc
lods
rorl
outsl
addr16
scas
loope
ljmp
jmp
imul
in
pminub
adc
mov
inc
mov
jge
lea
pop
inc
stos
rclb
arpl
outsl
insb
jmp
ret
lods
test
in
mov
daa
push
int
loope
cltd
outsb
loopne
mov
fnstcw
stos
sbb
sar
xor
imul
mov
xchg
ljmp
lret
inc
sub
mov
sub
sbb
jg
sbb
outsl
sahf
or
xchg
push
jecxz
adc
stos
lods
xchg
mov
stos
int3
out
xlat
fcompl
fistpl
sahf
in
mov
dec
jns
testl
xchg
and
dec
jae
xor
mov
cmc
lods
sub
sbb
jp
xchg
xchg
sahf
inc
pushf
and
stos
ret
or
jmp
and
rcr
arpl
fdivrs
lds
shrl
lods
and
ja
je
js
addr16
mov
pusha
ljmp
jle
mov
stos
call
push
adc
inc
push
stos
sbb
fs
cs
js
stos
cmp
jl
and
or
cmpb
and
or
xchg
dec
bound
xchg
adc
pop
xor
std
mov
lcall
iret
inc
shll
jmp
dec
cli
push
mov
add
jne
dec
mov
or
andl
testl
mov
popa
push
stos
or
testl
xlat
rorb
nop
inc
xchg
lcall
int3
or
call
inc
add
add
stos
das
cmp
hlt
loopne
jb
xor
in
push
dec
sub
jne
dec
imul
fstpt
pop
mov
arpl
aaa
xor
jb
ret
stos
sahf
jmp
in
push
les
imul
and
xchg
jb
inc
stos
xor
adc
push
loopne
movb
pusha
adc
ret
stos
xchg
sub
iret
out
xchg
inc
jmp
scas
mov
gs
cs
movsl
cmp
ret
sub
enter
add
inc
ret
jnp
sbb
inc
xor
ror
add
dec
pop
and
cld
ljmp
sub
sbb
stos
fbld
push
scas
pop
scas
mov
stos
mov
mov
pusha
mov
jo
pushf
rcrl
fldcw
jmp
xor
jg
dec
xor
insl
and
jp
pop
aas
xchg
mov
stos
scas
cmpsb
add
stos
cmp
jne
aas
mov
jp
jg
out
ret
sbb
stos
stos
dec
sbb
push
rcrb
lods
std
cmpl
insl
sub
mov
mov
ljmp
lret
mov
jmp
add
mov
lcall
loop
insb
out
and
adc
mov
mov
repz
inc
mov
les
xor
jns
adc
xlat
pop
rorl
repz
xor
sarb
or
jmp
inc
xchg
adc
mov
in
test
cwtl
int3
lods
mov
stos
pop
idivl
dec
inc
sar
insl
mov
dec
xor
xor
shll
fiadds
adc
mov
imul
adc
mov
cmp
stos
pop
jo
std
xchg
mov
lea
xchg
mov
mov
mov
out
fsubr
mov
popa
add
pop
out
stos
inc
out
xlat
cmp
clc
dec
mov
into
insb
insl
paddsb
mov
mov
xor
stos
aad
inc
sbb
lods
nop
mov
int
mov
bts
movsb
arpl
insb
stos
mov
mov
mov
xchg
push
js
mov
or
ss
xorl
cltd
jmp
dec
pop
pop
xor
lock
fadd
enter
std
jae
daa
stos
fs
pop
stos
add
movsl
std
dec
ds
jmp
mov
mov
addl
inc
hlt
ja
test
stos
fsts
jp
notl
sub
insb
mov
mov
test
sbb
frstor
inc
dec
mov
sbb
adcb
jge
pop
nop
inc
mov
icebp
mov
jne
lods
pop
inc
icebp
xor
push
jb
mov
stos
int3
cmp
dec
nop
stos
clc
cld
andb
mov
iret
in
stc
fiadds
sbb
in
xchg
ss
adc
mov
bnd
mov
les
in
xchg
stos
mov
pop
jmp
stos
sbb
jb
jge
sub
lods
into
mov
sbb
cmp
mov
add
xchg
rcl
mov
mov
jmp
fmull
int
pop
jp
insl
iret
jmp
cmp
lahf
lret
mov
into
jb
add
fidivrs
dec
add
stos
pop
dec
js
xchg
lahf
mov
jmp
inc
rcll
lret
ja
pop
aaa
mov
shlb
jg
push
add
pop
stos
jle
jae
ret
xchg
loop
stos
mov
adc
icebp
push
sub
add
jae
xor
xchg
lock
and
jp
cmc
inc
lret
xor
imul
sbb
cmc
testl
jo
mov
pop
lea
sahf
inc
ja,pt
cmp
stos
mov
aad
adc
stos
rcr
negb
in
jb
push
stos
inc
dec
out
mov
sarb
sub
adc
outsl
cs
dec
aas
xchg
mov
shrb
push
in
and
scas
lcall
jp
outsl
jmp
jno
xchg
jns
stos
scas
ficomps
les
lret
jno
mov
sub
add
ljmp
inc
stos
sbb
and
daa
stos
pop
dec
ret
mov
cmp
fcmovnu
sarl
cmp
cmp
xchg
jno
or
push
inc
adc
xchg
xor
mov
lahf
loope
sbb
enter
xchg
stos
push
loopne
bound
rorl
mov
mov
andl
aad
lods
stos
xchg
negb
das
inc
loop
jmp
dec
addr16
enter
add
inc
jg
and
stc
mov
mov
stos
cmp
inc
imul
push
insb
lods
repz
mov
pop
sub
xchg
mov
dec
bound
sub
and
cmp
cmpsl
fldcw
adcb
outsb
pop
into
ret
xchg
stos
dec
fcom
dec
dec
push
adc
xchg
pop
stos
add
stos
imul
call
pop
stos
ret
xchg
sub
mov
lcall
cwtl
rorb
aad
es
or
xlat
ret
add
bound
leave
fldcw
scas
jne
sbb
popa
ret
jmp
stos
enter
aas
mov
stos
mov
test
lods
pop
pop
and
mov
stos
ljmp
test
jecxz
es
lcall
or
or
mov
xchg
test
cltd
fbld
ficoml
mov
or
jne
fcoml
cs
lds
std
xchg
pushf
or
cwtl
xchg
lret
in
xor
pop
xchg
bound
add
xchg
stos
cmp
orl
jae
mov
bound
shrl
lods
shrl
jp
mov
std
jno
cmp
cmpsl
jo
insl
stos
movsb
lods
jne
enter
stos
cmp
push
je
call
push
push
mov
imul
cmpb
jbe
or
xchg
outsb
xlat
ljmp
inc
insl
out
pop
sbb
loope
lds
add
fbstp
es
xlat
mov
mov
fs
insb
xchg
mov
xor
sub
aam
dec
js
sti
xchg
loope
fnstsw
inc
out
stos
jnp
and
scas
repnz
nop
mov
mov
stos
mov
stos
pusha
add
mov
inc
aam
stos
out
fucomp
movsl
scas
ja
xor
add
xor
jge
dec
outsb
push
xchg
add
xchg
aam
roll
xor
scas
lea
jg
movsb
and
ret
lret
fs
repnz
lahf
loopne
mov
sarl
test
into
in
inc
pop
inc
dec
sub
dec
cmpsl
movsl
xchg
xchg
cltd
shrl
xor
arpl
inc
repz
dec
popa
ss
stos
fsts
pop
mov
jno
repz
stos
shrl
daa
or
stos
sub
jmp
ss
cmpsb
jbe,pt
mov
push
test
ja
scas
aad
lds
call
mov
stos
shlb
adc
bound
push
jae
push
stos
out
or
xchg
sbb
aam
sahf
iret
pop
xor
mov
stos
push
xor
cld
xor
loop
stos
sub
js
xchg
mov
stos
and
pusha
loop
adc
add
mov
jmp
add
push
ret
sub
mov
cmp
loope
cld
out
push
popf
rolb
mov
xor
sub
jmp
stos
mov
add
mov
out
sub
shrb
scas
fdivl
popa
push
jne
stos
xchg
adc
stos
inc
and
or
rol
mov
insb
sbb
mov
mov
aas
insb
mov
insl
outsl
fsubr
fcoms
cmp
imul
lcall
dec
stos
sub
jae
stos
xchg
pop
dec
pop
fdivrp
popa
mov
or
lret
sahf
push
enter
pop
push
stos
in
xchg
leave
comiss
mov
xor
mov
cltd
cld
jmp
dec
int3
lret
adc
mov
ret
sbb
xchg
xor
fs
test
stos
sahf
mov
inc
les
leave
stos
lock
out
and
xchg
sub
push
loopne
push
outsb
cld
dec
stos
cmp
outsl
iret
stos
push
pop
sub
pop
xor
jmp
inc
jg
imulb
cmp
jne
insb
inc
cs
add
insb
adc
mov
dec
add
rcll
bound
push
lods
cmpsb
stos
insb
out
push
inc
stos
adcb
sbb
cmp
cmp
jmp
sub
adc
or
add
mov
int
bound
outsl
mov
cmp
fadd
and
inc
data16
stos
pop
stos
cmp
mov
cmp
cli
movsl
jb
xor
pop
sbb
lcall
add
add
fistpll
xchg
stos
out
push
mov
ss
cld
and
out
fildll
and
dec
sub
cmp
in
fwait
loop
cs
les
xor
xchg
and
aaa
icebp
stos
jg
xor
mov
stos
pop
lahf
js
jbe
in
stos
or
aaa
sub
stos
scas
mov
xlat
sbb
sub
jne
inc
jb
stos
lods
cmpsb
cmp
adc
jge
or
sbb
aad
pop
es
jmp
pop
fmuls
mov
stos
jno
push
lods
call
adc
out
xor
test
mov
shlb
imul
inc
outsl
push
cmp
pusha
jo
or
push
jmp
or
jp
dec
jb
pop
popf
stc
insb
fs
and
leave
sbb
xorl
jo
out
xlat
mov
xor
mov
rclb
sub
repnz
je
ljmp
dec
stos
xor
jmp
sub
fisttpl
mov
or
into
push
ljmp
sti
jb
jnp
stos
das
and
aad
lds
repnz
pop
lods
xor
jg
movsb
pop
imul
pop
jecxz
mov
mov
insb
or
xor
ds
daa
fnsave
out
jne
and
mov
test
jmp
insl
aad
insl
and
mov
insb
sbb
stos
enter
sub
inc
xor
mov
mov
ret
pop
std
inc
ret
daa
cmc
fldt
jae
mov
cmp
rolb
mov
dec
shll
jl
jle
stos
outsb
movsl
jns
mov
ljmp
mov
subb
pop
stc
stos
push
lds
pop
stos
sub
clc
stos
imul
xor
stos
js
out
mov
sbb
sub
lds
in
pop
into
fwait
pop
jns
stos
ret
mov
mov
lods
test
add
rcrb
adc
sahf
sbb
iret
in
lods
mov
stos
dec
lret
sti
in
or
push
shll
push
sbb
and
and
hlt
stos
jp
sbb
cmpsb
mov
gs
push
shll
loopne
ja
mov
mov
stos
cmp
jl
sarl
mov
fisttpl
mov
fadd
rcrl
pop
cmpsb
insb
popf
sub
stos
fs
call
popa
xor
mov
mov
lret
imul
lret
jno
mov
push
stos
cmp
push
xchg
repz
mov
inc
mov
stos
je
imul
insb
sahf
lods
sbb
mov
mov
cmc
mov
insb
movsl
outsl
xchg
adc
mov
in
cli
xor
dec
aas
dec
push
test
fstps
dec
ret
cmp
stos
gs
push
dec
xchg
xchg
aam
mov
jb
jmp
mov
push
mov
push
mov
mov
jle
das
jl
subl
jmp
cmp
mov
ficomps
scas
stos
orl
pop
sbb
popa
in
xor
outsl
mov
or
adc
inc
mov
les
xchg
testl
xchg
push
das
dec
loopne
shll
stos
int3
cmpsl
dec
fstl
or
jmp
pop
and
hlt
sbb
mov
sub
jnp
push
dec
mov
js
movb
loopne
inc
jnp
out
jb
mov
mov
mov
jmp
jb,pn
cmp
push
pop
stos
std
aas
adcb
push
xchg
sub
movsl
int
pushf
cmp
stos
jno
mov
jg
adc
mov
fdivs
add
stos
mov
push
insl
rep
insb
out
addl
pop
iret
cmp
xor
push
adc
fucomi
adc
xor
shlb
aad
aas
andl
mov
cmc
cld
stos
jmp
cwtl
cmp
xchg
dec
les
into
repnz
sbb
or
stos
je
cmp
stos
andb
push
mov
inc
enter
test
icebp
insl
sbb
dec
xchg
push
push
cmpsl
mov
lahf
ss
ds
lock
lds
shr
jmp
pop
fdivrl
or
fbstp
das
aam
jne
jb
mov
push
adc
pop
jmp
pop
into
mov
dec
sub
inc
dec
stos
jae
shll
adc
outsl
xor
jno
jb
push
xchg
add
stos
test
into
and
stos
loope
cwtl
mov
aas
sub
cmp
xlat
jl
stos
repnz
jmp
stos
fldt
in
dec
js
and
ss
stos
stos
clc
loop
shrl
push
jbe
dec
xor
xlat
jle
fwait
dec
mov
ja
in
outsb
pop
ss
mov
stos
insb
movsl
sbb
xchg
in
stos
test
stc
cmovbe
cs
add
insb
rcl
or
bts
mov
adc
nop
mov
subl
stos
mov
push
xor
xchg
sub
movsb
inc
lock
stos
mov
mov
jle
lods
insb
insl
dec
scas
add
mov
rolb
jb
outsb
lret
cmp
lcall
adc
jne
lea
push
popa
lods
and
pop
stos
clc
inc
pop
test
mov
add
jmp
ret
mov
mov
fiadds
testl
mov
jns
and
int3
ljmp
pusha
add
stos
jnp
mov
aas
pop
ret
sbb
pop
ja
stos
xchg
ss
das
arpl
mov
sti
pop
cli
sbb
or
xor
cmp
test
mov
sahf
leave
stos
pop
repz
jae
popf
les
fdivl
mov
pop
addb
sahf
dec
mov
cmp
push
stos
mov
pop
adc
pop
inc
jnp
adc
fiaddl
mov
cmc
aam
sarl
scas
stos
and
lret
jp
stos
pop
rorb
insl
push
adc
insl
dec
jle
mov
scas
imul
pushl
out
and
sbb
stos
clc
popf
jmp
mov
adc
mov
mov
cmp
jg
push
aaa
push
shrl
pop
stos
icebp
xchg
outsb
adc
adc
lret
sbb
jb
iret
mov
fninit
add
stos
inc
popf
mov
lods
stos
rcrl
mov
xor
push
fwait
push
fs
mov
stc
or
stos
fnstsw
outsl
insb
mov
xchg
pop
ljmp
inc
inc
sti
inc
stos
push
aaa
movsb
xor
testl
imul
popf
or
fimuls
sbb
mov
cltd
mov
in
out
dec
fimull
subl
es
in
jge
stos
cmp
sbbb
test
dec
scas
inc
push
xchg
fcmovnb
and
shll
xchg
cltd
cmp
jns
movsb
adc
mov
in
loope
cmp
and
and
insb
daa
movsl
and
jo
push
cmpl
jle
xchg
jp
xchg
cmp
in
sbb
mov
adc
outsb
lods
ret
sub
imulb
or
stos
je
or
sbb
inc
popf
adc
mov
mov
mov
xchg
xor
jae
cmpsb
dec
mov
je
stc
cmp
pop
bound
xchg
or
test
stos
icebp
sub
adc
jno
stos
setl
popf
lds
or
inc
xchg
sub
fmuls
fldenv
test
xchg
out
stos
test
cmpsb
dec
cmp
mov
stos
inc
xor
xchg
out
stos
in
cli
es
cmpsb
jp
stos
dec
push
dec
shlb
std
mov
lds
stos
sbb
push
jmp
mov
lea
bound
jg
lods
mov
jmp
popf
repz
jno
and
push
loop
jae
and
stos
push
pop
icebp
jno
xchg
es
popa
dec
sub
or
fwait
sub
cmp
mov
cmp
mov
leave
movb
and
mov
filds
cld
sub
mov
push
lret
adc
incb
pop
mov
fcomps
aad
inc
pop
pop
ljmp
push
mov
inc
test
push
jb
sbbl
add
inc
and
imul
xor
sarb
push
inc
mov
lods
stos
popf
mov
jmp
stos
cwtl
fisubl
mov
mov
mov
es
stos
fldt
mov
xlat
xor
cmpsb
xchg
adcb
stos
push
jo
mov
inc
mov
cs
addr16
mov
nop
jb
cmpsb
stos
int
inc
push
rcpps
in
arpl
inc
mov
or
das
cld
push
andb
pop
setae
stos
in
repnz
insb
jne
push
mov
jbe
jmp
lock
stos
fistpll
push
add
sbb
addr16
add
scas
fwait
sarb
sub
or
cli
stos
stc
mov
bound
out
clc
aas
stos
xchg
inc
pushl
test
std
stos
lock
fcmovbe
jo
popa
repz
cs
mov
test
lods
aas
sub
lds
mov
fimull
xchg
sub
in
test
inc
lods
mov
pop
xchg
mov
imul
xor
push
shll
ljmp
mov
mov
cmc
fs
icebp
cwtl
pusha
pop
adc
push
dec
clc
aam
xor
ss
stos
xchg
mov
push
insl
out
clc
sbb
nop
sbb
mov
hlt
push
push
mov
cmp
cltd
popa
insl
test
orb
test
cmpsb
inc
outsl
jecxz
pop
les
or
stos
fdivrl
icebp
insl
inc
and
sub
sahf
pop
out
lret
xchg
add
jno
mov
mov
inc
mov
mov
xor
leave
stos
pushf
adc
daa
lahf
mov
sbb
and
push
int
or
ret
enter
popa
jno
sbb
push
faddl
ret
stos
out
popa
add
cmp
jl,pn
mov
fdiv
jmp
mov
stos
es
shll
adc
outsl
hlt
fsubrl
sarb
sbb
sub
insl
icebp
scas
mov
mov
or
stos
cli
xlat
cmp
sbb
and
push
mov
stos
or
xor
outsl
and
xchg
xchg
xor
mov
pop
inc
fmulp
push
push
sti
fcomi
lcall
inc
stos
sub
jg
push
out
outsl
xchg
jl
mov
inc
int
or
outsl
xor
push
sti
rolb
cltd
jle
in
out
stos
add
sbb
push
ret
cmp
inc
hlt
ja
daa
cmp
stos
aam
fcmovnbe
pop
stos
mov
popa
dec
shrb
cltd
int3
fmulp
mov
stos
cli
mov
ljmp
loope
stos
aam
xchg
sbb
mov
or
cs
inc
cwtl
push
dec
mov
stc
stos
jns
fwait
jnp
and
push
pop
lods
jmp
or
xchg
repnz
stos
pop
dec
xchg
dec
push
jno
enter
movb
push
scas
jnp
aam
mov
add
sarl
bound
mov
xlat
adc
stos
pop
jns
xchg
mov
jb
shrl
adc
sti
sub
fcoml
xchg
jg
stos
sahf
cmpsl
jmp
xchg
fdivr
mov
jb
stos
jnp
stos
jl
mov
inc
cmp
cmp
stos
push
movsl
sbb
xor
lahf
or
sbb
mov
xchg
repnz
mov
pop
push
stos
jecxz
lahf
mov
outsl
div
cmp
insb
lcall
push
and
stos
push
ds
jno
push
jbe
stos
cwtl
lds
lea
pop
and
sarl
xchg
add
stos
mov
rcrb
int
into
push
out
sbb
lock
pop
stos
je
andl
cmp
push
xor
push
sti
jne
dec
mov
stos
mov
adc
sbbb
out
stos
inc
cwtl
mov
ss
pop
mov
fnstenv
aam
ds
xor
lds
daa
ljmp
call
repnz
push
jo
jnp
mov
inc
sub
push
pop
lods
pop
and
jmp
or
cmovg
call
inc
jl
jb
cs
mov
mov
xlat
loope
sub
insl
leave
sub
cmc
dec
cmp
in
iret
stos
je
jecxz
nop
loop
jmp
int
xor
daa
rolb
aad
rorl
out
inc
or
xor
sbb
jg
stos
mov
cmp
stos
inc
scas
fidivrs
jmp
rcl
xor
xchg
movsb
ret
add
pop
stos
xlat
inc
decl
addr16
mov
jmp
add
sbb
pop
xchg
cld
mov
push
shr
xchg
cwtl
ljmp
mov
outsb
out
sbb
stos
pop
push
mov
cld
test
addr16
jnp
stos
inc
daa
in
leave
dec
pop
add
stos
inc
inc
xor
test
inc
jbe
insb
sbbb
leave
or
mov
jns
inc
inc
dec
mov
lock
and
sbb
mov
mov
sahf
scas
lods
pop
in
lcall
clc
mov
roll
dec
mov
addr16
and
jge
mov
lds
cmp
add
push
test
fcomp
or
sbb
insb
jge
and
inc
mov
ss
loopne
stos
xchg
and
stos
imul
jb
cmc
or
inc
xor
call
add
add
mov
ja
gs
stos
test
in
pop
pushf
repz
dec
cmpsb
aas
fimull
stos
pop
fsubrl
xchg
push
cmpsb
adc
inc
loopne
loopne
stos
sti
inc
ljmp
pushf
add
popf
sbbl
lret
pop
jl
jmp
mov
stos
mov
imul
push
push
hlt
sahf
add
stos
test
scas
push
test
or
inc
stos
ss
mov
add
shrl
popa
jne
mov
mov
stos
mov
mov
stos
sub
gs
outsl
sti
and
xchg
in
inc
stos
or
jne
inc
push
stos
inc
repz
add
sub
int3
rclb
fcmovbe
clc
or
xchg
push
mov
movsb
mov
popf
sbb
mov
int
add
pop
imul
sub
repnz
fwait
adc
sbb
int3
lahf
daa
inc
sbb
fcoml
shl
jne
adc
outsl
stos
sti
or
loop
and
arpl
mov
push
cld
insl
adc
xchg
mov
out
stos
iret
imul
les
stos
fwait
divb
push
mov
fisttps
jmp
fnsave
jge
inc
inc
push
fnstcw
stos
andl
push
stos
clc
shll
repnz
imul
fcmove
sub
insl
jnp
stos
push
lahf
sahf
mov
mov
pop
mov
and
jl
in
sub
pushf
addb
fldcw
pop
cmp
add
pop
fcomps
test
fistps
subl
mov
sbb
out
jns
stos
aaa
sbb
sahf
inc
fs
sub
std
shr
hlt
xchg
sti
pop
iret
aas
cs
scas
mov
insb
mov
and
mulb
pop
inc
roll
and
cmp
fwait
loop
stos
jmp
and
mov
ljmp
icebp
push
clc
mov
insl
adc
shll
push
sbb
subl
imul
jbe
clc
jne
sub
mov
adc
inc
sub
cwtl
pop
int3
inc
stos
aad
sub
sbb
mov
stos
aam
mov
stos
jb
mov
mov
add
into
jnp
xor
aas
inc
sub
pop
jl
mov
sbb
add
stos
test
jmp
and
cs
mov
add
stos
es
pop
pop
jbe
mov
in
xlat
mov
lahf
dec
fldcw
outsb
insl
stos
fidivrs
mov
add
jmp
mov
mov
and
int
jne
jmp
in
repz
stos
enter
mov
cmpsl
imull
inc
xchg
sti
mov
cmp
aam
xchg
mov
repnz
add
sbb
lret
dec
stos
gs
add
imul
mov
inc
lods
in
stos
add
inc
sti
ds
in
clc
xchg
pushl
out
dec
cmp
pop
and
test
jae
pop
sti
mov
fsubrl
and
lods
mov
or
flds
stos
fcmovnb
in
and
daa
mov
lods
sub
ss
mov
subb
mov
mov
push
mov
cld
pop
jns
fidivrl
inc
inc
stos
sbb
xorb
mov
imulb
pop
movsl
mov
push
sub
jo
push
test
mov
out
in
jge
aam
in
lds
outsl
dec
into
mov
outsb
xchg
out
jb
cwtl
mov
add
loope
pop
sub
stos
mov
lret
cli
out
scas
inc
cmp
mov
pop
mov
sahf
popf
and
or
push
shl
mov
jmp
sub
js
jmp
cltd
mov
fsubs
jae
in
mov
ja
lods
jp
stos
iret
test
divb
mov
cs
ret
nop
sahf
dec
filds
mov
pop
mov
adc
pop
in
xor
push
lahf
pop
in
stos
adc
mov
pop
cmc
nop
sub
pop
aaa
xor
sahf
xchg
mov
pop
in
adc
sub
int
insl
test
xchg
inc
sarl
loope
shrl
cli
dec
iret
scas
sbb
icebp
and
mov
lret
mov
xchg
ret
jmp
push
inc
mov
dec
pop
fistpl
scas
bound
xchg
jnp
sub
xchg
rcrl
xor
or
scas
jmp
jnp
js
inc
jmp
ret
outsl
prefetch
shrl
test
les
jno
scas
push
add
fildl
scas
arpl
xlat
enter
xor
sarb
xor
mov
sahf
loopne
popa
loope
mov
mov
je
mov
push
xchg
shl
dec
in
lods
pop
xchg
pop
movsb
and
iret
inc
inc
stos
popa
fbstp
shlb
stos
arpl
not
stos
outsl
ss
fdivs
jb
std
imul
mov
inc
fs
inc
sti
inc
cmp
mov
js
mov
shrb
stos
movl
jmp
repz
std
pushf
adc
cld
jle
insb
xchg
xor
out
sub
xchg
lods
aas
pushf
sub
mov
cmp
addb
imul
dec
sub
scas
sti
shrb
jmp
fbld
shrb
enter
popa
out
xor
pop
stos
sbb
inc
lahf
cmp
jbe
std
mov
dec
aas
stos
pop
test
push
dec
sub
mov
cld
ljmp
cmp
enter
repnz
jmp
jae
sub
jno
mov
sub
cmp
xor
sub
aas
adc
or
js
push
jbe
lods
mov
imul
popf
test
in
pop
jmp
jl
xor
sub
xor
cmpb
mov
pop
insb
mov
xadd
dec
add
aad
or
jae
stos
push
outsb
pop
mov
add
push
xor
and
xchg
add
mov
loopne
fsubrs
aad
fidivrl
sahf
lock
in
or
jmp
into
adc
dec
pop
jmp
std
mov
imul
bnd
je
stos
mov
jne
mov
dec
scas
popf
ljmp
mov
xchg
sub
mov
je
stos
insb
scas
nop
push
insl
push
testl
mov
mov
int3
icebp
sub
lret
imul
push
stos
sarb
sti
ss
cwtl
mov
pusha
das
andl
rcrl
or
push
daa
stos
scas
add
lock
imul
push
add
inc
stos
cmp
jmp
stos
enter
outsl
out
sbb
test
jge
mov
mov
stos
xor
cmpsb
insb
out
insb
call
in
jle
daa
stos
push
lock
cmp
insb
scas
mov
inc
filds
stos
xchg
adc
fs
loop
jmp
rcl
addr16
movsb
pop
lea
ljmp
mov
mov
movsl
jmp
sbb
mov
jge
mov
stos
mov
inc
clc
and
xchg
addl
es
out
mov
ss
jge
movsb
fwait
lds
pop
and
cmp
lods
shrb
in
mov
mov
daa
or
jae
stos
sti
fwait
mov
mov
stos
jecxz
sbb
inc
jp
sbbb
sahf
jo
dec
sub
inc
ret
stos
mov
jne
lock
movsl
inc
inc
stos
fstl
fstpt
sub
mov
fadds
rorl
int
mov
shrb
dec
or
ret
pushf
jnp
xchg
cmp
inc
ret
or
in
stos
adc
dec
mov
das
out
xchg
mov
xor
sbb
enter
mov
push
gs
cltd
aaa
loop
xchg
imul
xchg
popa
jmp
int3
hlt
sbb
ret
adc
gs
mov
jg
jecxz
stos
insl
inc
test
aaa
mov
stos
push
add
mov
fiaddl
push
dec
stos
stc
lcall
imul
lock
arpl
ret
push
jbe
or
stos
dec
sti
push
push
lahf
mov
loope
je
notl
notb
inc
stos
xor
dec
and
stos
lahf
sti
fidivs
dec
or
insb
add
push
inc
xor
jae
stos
in
pop
fs
das
and
fisubl
mov
add
push
dec
loop
addr16
outsb
stos
dec
dec
mov
push
jmp
and
inc
sbb
mov
adc
xchg
shlb
sub
dec
xor
popf
xchg
lret
shrb
jns
addb
pop
in
and
shll
and
imul
loopne
inc
jo
dec
das
or
xchg
and
enter
sti
adc
sub
jbe
add
pop
add
dec
cltd
and
aam
ljmp
bts
mov
subb
and
out
mov
int3
repz
ret
adc
pop
lods
scas
mov
cld
lret
lret
sub
daa
rcrb
push
jmp
jne
and
mov
or
icebp
push
stos
fcmovu
and
stos
mov
mov
daa
rcrb
fcompl
stos
out
aam
add
ret
fs
push
jno
push
in
imul
dec
loop
push
xor
sti
cmp
out
pop
daa
push
pop
dec
insl
or
mov
stos
jmp
cmp
stos
sub
cwtl
cmc
push
or
pop
jmp
stos
pop
loopne
jae
dec
cmc
movsb
and
stos
shl
xor
adcl
add
push
fwait
int
mov
icebp
pop
mov
popf
mov
fistps
mov
stos
jne
mov
mov
push
icebp
call
mov
cwtl
cli
inc
add
aad
mov
dec
cmp
bts
cli
stos
fldt
jb
inc
mov
mov
cld
push
add
daa
cmc
stos
and
nop
scas
stos
mov
cmp
adc
cmp
outsl
lods
mov
xchg
inc
or
push
cmp
ss
pushf
stos
insb
cmpsl
xchg
es
or
nop
mov
insb
and
push
das
ret
insl
adc
pop
test
sbb
subb
in
je
adc
dec
nop
stos
iret
cmc
int
rolb
stos
daa
arpl
leave
mov
adc
xchg
or
push
lcall
cld
adc
cmp
xorl
repnz
jge
ljmp
aad
mov
lret
add
adc
and
mov
or
ret
outsb
ret
js
mov
mov
arpl
lea
test
loope
mov
xor
mov
outsb
insl
insb
xchg
scas
stos
lds
mov
and
jl
sbb
stos
mov
subl
inc
enter
movsb
xor
hlt
sarl
pop
sbb
mov
mov
ljmp
dec
xchg
fwait
cmp
stos
jmp
sbb
ret
pop
xor
mov
push
clc
sti
out
and
repz
gs
fsubr
jl
mov
fisttpll
lahf
insb
scas
pop
into
cltd
adc
test
stos
bound
fldl
mov
stos
mov
int
lds
adcb
mov
adc
pop
fcomps
jns
xor
leave
add
add
stos
mov
call
mov
ret
mov
mov
stos
ja
leave
jl
out
push
mov
xchg
fmulp
bound
call
pusha
stc
ret
jmp
lcall
add
xor
xor
out
testb
jl
arpl
insl
cmc
adc
pop
aaa
cmpsl
sti
les
stos
call
pop
hlt
jecxz
test
adc
ss
push
mov
push
mov
and
repz
dec
stos
pop
lcall
les
cli
push
adc
sbb
stc
adc
mov
mov
or
int
sub
sbb
in
xchg
dec
and
pop
mov
stc
sub
push
loop
and
dec
not
xchg
outsb
ret
or
dec
sub
stos
push
fiadds
xor
push
dec
mov
mov
out
das
rorb
outsl
testb
sub
add
xor
loopne
scas
stos
loope
call
sbb
popa
dec
shl
fists
insl
adcb
repz
mov
and
insl
loope
adc
lahf
rcrb
mov
mov
jmp
push
movsb
enter
or
iret
mov
daa
mov
pop
testb
inc
pop
shlb
bound
or
jmp
stos
push
ret
gs
jnp
imull
sti
mov
sub
imul
bound
or
repz
jmp
mov
pop
pop
mov
stos
lock
mov
jp
sbb
fcompp
stos
repz
cmp
push
jg
clc
xchg
cli
cmpsl
out
ja
stos
add
add
aaa
push
jle
sub
push
aad
addr16
xlat
imul
icebp
cmp
fwait
pop
in
sub
jns
mov
mov
add
jae
std
sub
je
add
mov
sub
cld
jbe
dec
cmp
or
pop
adc
iret
jmp
mov
inc
shll
sbb
loop
mov
cmp
pop
stos
mov
rclb
daa
xor
push
arpl
out
mov
xchg
cltd
inc
lock
insl
jg
pop
jnp
xchg
mov
fbld
daa
xor
icebp
jmp
add
bound
mov
mov
inc
pop
xchg
stos
test
pop
mov
stos
pushf
dec
add
dec
mov
test
add
les
xor
stos
jns
mov
cmp
dec
and
imul
jmp
inc
cmp
fnstsw
jo
sbb
jns
arpl
xchg
outsl
mov
scas
loopne
out
dec
sub
call
outsb
mov
jbe
scas
adc
push
xlat
clc
pusha
lock
insl
pop
testl
xchg
cld
sahf
and
pop
je
adc
fxch
xchg
mov
bndldx
stos
mov
mov
outsl
loope
mulb
xchg
push
inc
push
pop
stos
fstp
lcall
xor
mov
es
add
imul
hlt
push
mov
icebp
add
repnz
popf
stos
fcmovnb
bound
insb
gs
lcall
push
stos
sbb
lods
pushf
stos
movsb
inc
mov
push
repnz
lret
daa
insb
ja
cmp
in
int
not
push
out
mov
ret
and
mov
sub
or
mov
popf
pop
and
jns
repz
inc
ret
fwait
mov
ds
mov
data16
stos
aad
jp
repz
cmpsl
stc
stos
mov
xchg
sbb
xchg
jnp
stos
int3
add
cmp
jmp
ss
lea
cs
mov
stos
sbb
out
lds
push
shll
cmpsl
repnz
test
dec
xor
stos
and
lcall
push
xchg
xchg
fwait
mov
mov
addr16
aam
pushf
ror
jp
jns
pop
sahf
in
sbb
jae
in
mov
hlt
ja
lret
inc
add
mov
xor
mov
inc
jae
jbe
ret
adc
cmp
inc
mov
shl
push
sub
rcl
fwait
jle
stos
insb
ret
je
ljmp
dec
push
fwait
icebp
stos
negl
test
stos
outsb
xor
insb
fidivrl
stos
or
or
imul
in
push
loope
pop
insb
sub
adc
dec
pop
lcall
loop
inc
stos
inc
mov
daa
and
shrl
mov
cmp
mov
loopne
sub
push
mov
stos
icebp
or
roll
adc
cmp
jg
mov
imull
movsb
movsl
dec
les
inc
xchg
xor
xor
or
sub
push
scas
testb
in
mov
lods
fs
mov
push
pop
in
pushl
stos
adc
add
dec
scas
movsb
jle
jp
xchg
orl
popa
stos
sbb
sbb
stos
sti
loopne
adc
imul
rorl
stos
clc
and
ja
popl
lods
sub
pop
scas
ret
or
test
add
mov
sub
jp
inc
lods
cmp
mulb
mov
pop
dec
and
xchg
enter
add
inc
xor
jnp
arpl
mov
scas
add
das
and
mov
cmpsb
rcrl
repz
or
xchg
test
inc
fldt
stos
fistpll
out
pushf
stos
jne
inc
fstps
repz
jg
mov
outsb
cmpsl
popf
je
test
mov
das
push
lock
xchg
add
jbe
stos
sub
aam
and
and
stos
leave
inc
icebp
pop
movsl
stos
aad
mov
pusha
dec
pop
sbb
popa
mov
lret
test
cmp
aas
mov
stos
ds
mov
arpl
movsb
cmp
call
adc
stos
int3
jmp
stos
push
jno
sub
sti
loop
stos
sbb
jnp
pop
stos
push
enter
dec
mov
xor
mov
sub
insl
jns
inc
fbstp
mov
mov
sti
cmp
sbb
sbb
lcall
clc
and
stos
and
cwtl
pusha
mov
inc
jbe
outsl
and
dec
test
adcb
xchg
popf
jb
push
insb
push
add
js
imul
stos
mov
dec
cmp
lret
icebp
jo
hlt
out
mov
sbb
mov
cmp
add
cmpsb
stos
jo
sbb
mov
or
imul
sarl
mov
xlat
mov
and
dec
stos
xchg
mov
mov
stos
mov
mov
je
test
pop
nop
rcrb
push
stos
xchg
bswap
test
stos
mov
mov
mov
or
push
test
mov
fsubrl
cmp
cmp
stos
rcr
repz
arpl
stos
cmpsl
xor
mov
stos
sbb
mov
pop
ret
addr16
shrb
add
repnz
sbb
and
daa
mov
push
ret
fnstenv
je
in
test
jae
sub
stos
add
push
insb
insl
adc
test
mov
stos
movsl
daa
mov
jl
mov
stos
bnd
jmp
mov
pop
inc
cmp
roll
mov
push
stos
pop
pop
xor
jns
es
mov
sbb
movsb
dec
pop
sti
jmp
andb
sub
pusha
das
hlt
sbb
jmp
out
rolb
clc
les
flds
mov
es
out
imul
stos
jge
push
rol
and
add
into
xor
push
stos
test
xlat
mov
sbb
pop
and
cltd
stos
jae
rcrb
loop
push
jmp
inc
inc
in
test
jp
mov
stos
sahf
rclb
lret
loope
dec
and
iret
cmp
stos
add
adc
daa
mov
lea
adc
adc
loop
stos
ja
je
mov
shrb
xor
in
sub
jmp
mov
inc
test
stos
adc
fmull
stos
popf
cmp
out
ret
xor
in
dec
jl
cmpsb
xor
stos
cmc
lock
mov
mov
cld
xchg
popf
loop
hlt
stos
push
lods
adc
push
push
jmp
pop
xchg
loope
data16
add
mov
aam
stos
roll
test
push
popf
loopne
lcall
or
in
push
sub
mov
enter
mov
fldt
ljmp
lcall
adcb
test
cld
xchg
aam
mov
test
xchg
inc
push
push
subb
mov
int
push
pop
xchg
ret
icebp
mov
push
dec
mov
cs
pop
xor
jae
add
popa
jmp
xchg
std
cltd
test
adc
or
les
insl
mov
fiadds
ss
test
dec
in
sti
aam
xchg
orl
dec
jb
dec
pop
std
lods
stos
shlb
neg
dec
and
lahf
jecxz
inc
dec
in
rolb
add
out
xor
or
add
insb
mov
imul
std
cmpsb
mov
add
add
sti
les
out
hlt
fisubrs
pusha
ret
jge
jl
das
pop
or
mov
mov
lret
aad
cmpsl
je
mov
fcomps
inc
inc
data16
stos
sub
sti
stos
push
pop
gs
sub
out
xchg
dec
rcrl
mov
rorb
or
dec
pusha
ljmp
mov
cld
icebp
or
pop
test
add
outsb
or
sub
pop
pop
jae
test
pop
inc
mov
pop
mov
jb
mov
pop
xor
jmp
push
push
jbe
lahf
sub
lock
stos
xchg
lods
add
stos
pop
pop
mov
ret
stos
decl
jne
pusha
push
stos
mov
inc
ja
stos
adc
inc
movsl
pop
in
aas
aaa
insb
cwtl
xor
fcom
outsb
mov
out
inc
dec
jno
mov
imul
mov
sarl
stos
cmp
mov
loopne
add
insl
movsb
and
fildll
push
cwtl
ficompl
pop
mov
lods
idiv
jo
jb
jp
or
test
loop
enter
or
jbe
mov
pop
loopne
add
sbb
ret
aam
test
stos
xlat
dec
inc
pop
dec
mov
sbb
mov
xor
decb
push
mov
cmpsl
mov
mov
inc
loopne
shrd
ss
stos
dec
hlt
int3
jb
mov
fldt
aaa
repnz
push
cmpb
push
lock
repnz
pop
cs
cmp
jmp
xor
jge
inc
add
filds
scas
shl
mov
repz
ds
aam
dec
outsb
add
js
rcll
inc
sbb
mov
mov
bound
pop
test
sbb
jno
aad
push
daa
add
and
mov
stos
test
xchg
inc
add
in
daa
cmc
testb
lds
mov
mov
ljmp
dec
call
scas
jb
stos
jno
pop
stc
adc
adc
jge
mov
aad
dec
or
std
xchg
push
mov
out
stos
loopne
sbb
popf
xlat
jge
jmp
lds
cli
inc
into
mov
add
stos
in
push
jnp
das
sub
fstl
mov
ljmp
loop
in
sbb
pop
inc
mov
cmpsl
push
arpl
stos
sbb
clc
push
lahf
fs
int
faddl
jge
js
mov
jecxz
rorl
adc
adc
mov
je
stos
jge
xchg
push
adc
jle
mov
dec
lock
aas
pop
repnz
stos
addr16
fwait
xor
ljmp
mov
nop
jl
mov
mov
cmc
dec
imul
imul
xchg
stos
test
hlt
and
cld
adc
add
jmp
jecxz
sbb
inc
stos
ret
jo
mov
cwtl
add
das
add
and
mov
and
je
shlb
or
shrl
jno
jne
stos
xor
sub
stos
jae
sbb
push
stos
fincstp
push
aas
ljmp
stos
mov
fidivrs
lock
or
fistl
mov
in
movsl
in
push
xchg
and
push
dec
mov
sbb
arpl
in
shrl
stos
sub
mov
pop
out
popf
scas
stos
pop
fstpt
dec
pop
sbb
popa
mov
stos
movsb
push
shrb
jae
sbb
pop
insl
mov
ds
aad
push
stos
xchg
in
push
popl
jae
loopne
add
push
imul
orl
stos
iret
repz
lea
lahf
inc
pop
stos
or
lods
xchg
push
popa
outsl
divb
subl
mov
stos
add
ret
mov
push
mov
add
stos
or
outsl
dec
and
stos
ret
jnp
mov
pop
jmp
adc
mov
jecxz
cli
lret
les
and
add
mov
sarb
or
pop
sbb
aas
jp,pn
cmpsl
inc
je
fcoms
xchg
pop
push
subb
gs
lahf
stos
add
pop
mov
loopne
inc
jmp
stc
pop
inc
xor
movsl
mov
fcmovnb
loope
loop
icebp
stos
fs
sarb
jb
dec
stos
es
inc
xor
pusha
or
mov
jp
ds
pop
test
stos
mov
mov
mov
sub
sub
shl
jmp
stos
xchg
pop
iret
stc
mov
xchg
cmp
cs
add
xor
lret
test
adc
lahf
mov
sbb
cs
mov
xor
mov
push
stos
sbb
xor
lea
cltd
mov
clc
ret
and
pop
leave
lahf
inc
insb
cwtl
in
cmp
pop
shrb
push
xchg
mov
stos
pop
add
xor
clc
mov
mov
jmp
addb
inc
pop
and
imul
and
shrl
lods
xchg
enter
xchg
inc
or
stos
int3
popf
dec
xor
stos
mov
and
mov
mov
pop
sub
mov
cmp
inc
ljmp
and
sub
xor
nop
or
lret
or
pop
ffreep
arpl
sub
jae
scas
out
stos
cmp
or
dec
xchg
pusha
lret
mov
mov
cmp
imul
xchg
mov
fs
imul
add
mov
into
add
jno
stos
inc
adc
cmp
jb
call
fdivrs
lea
stos
pop
mov
lock
test
jmp
stos
call
jecxz
inc
shrl
les
int
adc
jp
lcall
mov
cmp
adc
sub
mov
inc
mov
xor
enter
stos
xchg
insl
jbe
imul
jl
stos
arpl
fimuls
mov
popf
stos
mov
stc
add
mov
test
and
or
call
ss
in
xchg
cld
jb
out
mov
sbb
aam
or
lcall
adc
mov
mov
fnstsw
mov
insl
scas
push
jae
cmpsl
push
xor
lods
and
stos
push
jp
push
dec
sahf
cmp
push
addr16
lret
stos
ja
adc
fnstenv
add
outsl
pusha
inc
mov
js
mov
mov
xchg
sbb
test
mov
cs
jg
push
mov
rcrl
cmpsb
icebp
ret
xor
ljmp
push
stos
repnz
push
mov
std
or
xchg
and
jl
in
stos
inc
dec
cmp
and
or
lods
sub
imul
mov
hlt
loop,pn
pop
adc
lret
xchg
jecxz
jp
inc
pop
or
mov
mov
out
push
cli
jmp
push
mov
mov
mov
ljmp
sub
sub
lods
mov
xchg
dec
sub
or
xchg
inc
in
sub
icebp
mov
lret
imul
in
inc
sbb
in
aas
dec
add
stos
jp
dec
shrl
fcoms
cmp
in
cld
addl
stos
xlat
adc
dec
mov
in
or
scas
sub
pusha
jmp
dec
or
shl
stos
out
scas
sbb
stos
arpl
cltd
fimull
cmp
gs
scas
ret
sahf
les
mov
ret
fwait
popa
stos
addl
mov
lods
push
inc
push
outsl
dec
aas
stos
fcoms
xchg
rorb
stos
push
call
gs
lods
fists
xor
je
dec
inc
shrb
dec
stos
cwtl
jae
sti
test
jp
dec
ret
push
inc
push
imul
pop
mov
imul
mov
bound
sbb
in
push
adc
jae
stos
fcoms
pusha
into
outsl
aam
adc
cmp
add
jnp
sbb
daa
push
stos
out
sub
loope
jb
push
loopne
call
jge
pop
insb
bound
cmp
jne
pop
in
stos
hlt
movsl
sub
ljmp
xor
cs
std
sub
stos
int
lock
add
and
sar
pop
in
cmp
and
stc
mov
jmp
sub
stos
pop
sbb
jno
flds
aaa
loop
jo
repz
stos
test
jmp
sub
lahf
xchg
or
cld
lock
jle
pop
jmp
xchg
sub
rcpps
xorl
stos
adc
xchg
shlb
mov
movsl
gs
cwtl
stos
mov
add
pop
stos
jmp
dec
loopne
lods
mov
mov
addr16
xor
stos
nop
jb
popa
in
int3
movsb
jmp
add
in
cli
and
mov
push
aam
fcmove
add
cmp
inc
iret
insl
lods
push
and
fmull
adcl
loop
xchg
mov
ret
out
lret
in
aam
lods
xlat
ret
out
stos
dec
xor
ja
mov
mov
jecxz
xchg
sub
stos
sub
fistpl
cmc
insl
int
adc
mov
mov
mov
adc
repnz
sti
xchg
stos
sahf
out
cmp
cmp
and
pop
xor
sbb
or
mov
fwait
inc
int
sti
shlb
cmp
dec
imul
push
mov
fs
out
movsb
pusha
pusha
stos
xchg
and
outsl
lea
ss
mov
insb
data16
das
test
stos
cld
in
rorb
insb
lret
pop
cli
xor
ret
aaa
mov
push
push
inc
pop
stos
push
sub
enter
in
xchg
lahf
add
or
mov
sbb
insl
xchg
stos
outsb
dec
dec
subl
push
mov
test
les
mov
outsb
sbb
sar
stos
pop
shlb
je
sbb
lahf
dec
stos
sbb
jne
push
sbb
sub
mov
pop
cmp
or
push
push
enter
jns
pop
pop
adc
stos
fwait
ds
fmull
ret
mov
pop
jp
xchg
aaa
sahf
shrb
xchg
mov
ficoms
pop
leave
int
popa
dec
add
stos
pop
fdivrl
ret
mov
inc
fstl
cs
adc
ja
inc
stos
mov
shrb
aas
stos
jle
clc
lret
jb
jmp
adc
stos
ret
int
mov
cmpsb
popf
jg
mov
dec
hlt
add
inc
stos
bound
loopne
jge
aaa
decl
ret
imul
and
mov
aas
ljmp
sub
adc
mov
out
mov
imul
fsubrs
sub
cmp
in
mov
outsl
rcl
mov
orb
cmp
pop
sbb
and
notl
mov
dec
push
movsb
sub
loope
or
push
push
popf
frstor
jmp
subb
in
mov
les
cwtl
insb
mov
ret
dec
mov
stos
dec
int3
sub
sub
shrl
dec
fldt
mov
or
rcr
lods
jl
adc
out
jmp
or
and
aas
xchg
xchg
std
ljmp
cli
aad
dec
cs
daa
stos
xchg
mov
jmp
stos
and
mov
stos
lods
push
pop
xlat
imulb
inc
sbb
stos
enter
add
or
aaa
add
test
lret
hlt
ds
and
stos
sti
lods
bound
arpl
rep
jae
adc
and
jecxz
xchg
mov
insb
push
stos
sub
push
xor
fiadds
lods
pushf
pop
inc
lret
fnstcw
and
test
sahf
push
ljmp
icebp
push
sti
stos
outsb
data16
pop
jp
cmp
mov
xchg
cmp
xchg
stos
out
outsl
hlt
jp
dec
pop
stos
fs
sti
shl
add
aas
icebp
mov
push
rcrl
dec
ds
cmp
inc
jmp
aam
fidivrs
sub
xor
jno
repz
test
loop
adc
and
mov
jbe
dec
bound
stos
push
dec
xor
stos
mov
inc
lock
int3
stos
pop
sub
fs
stos
lcall
mov
inc
inc
mov
push
stos
push
fsts
arpl
pop
adc
jb
aad
insb
add
pop
pop
fnsave
enter
mov
pop
stos
aam
fsubl
adc
and
mov
les
jno
imul
jmp
stos
fidivrl
xor
cld
lods
adc
or
mov
lds
mov
add
call
es
ss
mov
stos
dec
mov
lea
stos
adc
jmp
xchg
insl
xchg
adc
cmp
sub
cmc
pop
je
or
nop
mov
mov
adcl
stos
add
and
stos
jle
mov
sub
sbb
divl
mov
into
icebp
sti
stos
pop
lods
cmp
arpl
xchg
repnz
adc
xor
add
push
movsb
jnp
xchg
add
outsl
cmp
addr16
outsl
insl
imul
push
mov
outsb
stos
sbb
add
ss
stos
stos
xchg
jae
lea
mov
stos
dec
insb
inc
ljmp
in
dec
sub
lahf
jl
or
das
jle
out
stos
hlt
in
pop
add
andb
mov
sbb
shr
jmp
push
hlt
mov
cmp
ss
sbb
stos
mov
pop
jno
test
andl
stos
xlat
clc
rcrw
pusha
fbld
push
stos
bound
mov
cli
out
and
stos
push
in
dec
lds
test
cmp
sbb
xchg
push
jae
mov
fst
xchg
cld
pop
icebp
pminub
test
stos
and
daa
loop
sbb
mov
xor
insl
xchg
cmp
clc
mov
popa
push
xor
into
add
add
js
movsl
stos
ret
aas
rcll
loop
sub
rorl
stos
mov
stos
mov
in
jle
jmp
ret
fcomps
call
xor
aam
jb
push
popf
cmp
imul
jl
and
mov
cmc
cmpsb
or
aaa
lahf
mov
test
stos
mov
adc
insb
pop
push
sub
les
std
inc
icebp
mov
and
cli
outsb
jns
int
mov
xchg
hlt
stos
jb
inc
or
push
jle
stos
stos
add
xchg
stos
xchg
pop
or
fidivl
mov
imul
sub
jle
ss
test
stos
xchg
ret
or
lea
jno
sbb
stos
sub
push
mov
das
push
pushf
insl
orw
stos
mov
es
stos
enter
ret
dec
outsl
scas
test
sbb
popa
add
test
rcrb
xchg
jmp
outsl
scas
cmp
stos
les
jae
and
lock
nop
popl
ss
mov
cmc
stos
dec
sbb
adc
roll
in
mov
gs
stos
sbb
data16
stos
xor
inc
out
mov
fldt
shl
int
adc
popf
jnp
push
or
add
ja
stos
and
in
insl
cmpsb
mov
fs
sti
adc
pop
shl
test
add
mov
dec
sub
stos
jge
pushf
sbb
stos
fldenv
pop
cmp
outsl
or
xchg
mov
cwtl
mov
mov
mov
pop
stos
cmc
pop
adc
pop
stos
lods
mov
cmpsl
dec
cld
out
pusha
and
imul
rclb
inc
and
jp
stos
add
mov
cld
fadd
push
cmp
loopne
mov
jmp
lods
and
into
jno
stos
cs
and
or
shl
stos
sub
push
xor
popa
push
in
je
push
lahf
mov
iret
lock
mov
fld
inc
pop
loope
stos
jmp
fbstp
inc
sahf
sub
pop
sub
or
es
and
movsb
cwtl
stos
and
or
insl
ss
push
dec
push
test
aam
arpl
jb
inc
insl
lds
orb
jmp
ret
out
mov
mov
cmp
scas
pop
cli
lods
sti
sbb
jmp
or
push
leave
dec
stos
pop
jp
mov
push
mov
lods
jmp
adc
fidivrl
stos
or
xlat
jnp
stos
push
dec
xchg
fisubrs
arpl
ja
insl
sahf
sub
mov
in
imul
mov
addr16
seta
shl
mov
gs
pop
int3
pop
jge
or
jl
push
jne
mov
inc
test
stos
int
mov
mov
repnz
mov
jg
insl
push
and
jne
cs
push
imul
scas
cmc
jbe
movb
lret
out
lods
push
outsb
jmp
jb
mov
loopne
daa
test
add
lea
stos
movsb
xor
and
push
in
mov
roll
shl
and
stos
int3
je
daa
pop
mov
jbe
ret
lods
add
stos
inc
int
es
lret
clc
ss
jecxz
sub
jns
cli
fidivl
ljmp
stos
xchg
orb
fs
stos
push
stc
or
arpl
sub
push
jbe
and
stos
shlb
push
pop
xchg
cmp
sti
out
sbb
jmp
imul
lds
lahf
into
cmc
outsb
iret
cmp
call
push
out
mov
stos
mov
push
pop
in
fidivrs
stos
gs
lods
jge
fsubrl
stos
mov
jp
movsb
stos
addr16
dec
pusha
jo
cmpsb
loop
pop
or
mov
sbbl
inc
jecxz
ljmp
imul
adc
sahf
imul
mov
jmp
dec
pop
jle
xchg
mov
je
xchg
pushl
jns
adc
jge
xor
stos
repz
jae
xor
sub
mov
or
inc
insl
stos
xorl
jl
stos
xor
inc
shrl
xchg
adc
push
pop
push
mov
jns
jecxz
jno
inc
aas
ljmp
mov
sbb
cli
stos
inc
dec
daa
sbb
fisubrs
stos
imul
stos
ret
sub
ljmp
mov
repz
aaa
lcall
divl
sbb
sbb
mov
je
insb
outsb
mov
stos
pushl
xor
inc
fwait
roll
xchg
mov
sub
inc
dec
stos
imul
fldt
insb
enter
xchg
inc
sub
stos
push
je
adc
scas
testb
stos
ret
mov
insb
jb
and
sti
jmp
xchg
decb
stos
add
decl
mov
xchg
ds
iret
imul
pop
scas
gs
arpl
icebp
idivb
mov
fwait
mov
enter
add
stos
mov
dec
jnp
lods
pop
mov
stos
jo
enter
adc
int3
push
cmpsb
dec
mov
adc
ret
push
ljmp
in
sub
mov
pushf
in
stos
sbb
ljmp
stos
es
mov
and
cmp
mov
cs
fwait
sub
mov
insl
pop
mov
mov
adc
xchg
adc
xchg
out
cli
ffree
sbb
mov
pop
lods
shrb
std
cmp
push
stos
xor
mov
stos
mov
or
xor
mov
mov
leave
pop
insb
mov
adc
jae
sahf
fcmovu
xchg
loop
mov
and
mov
xchg
aas
testl
push
stos
sub
push
lahf
mov
cmp
ljmp
aam
stos
rcrl
xor
cmc
sar
jne
fwait
bound
push
fbstp
jge
insl
mov
mov
cmp
stos
sbb
jmp
sbb
dec
loop
stos
lret
aam
ljmp
jb
push
jnp
stos
cmp
dec
add
push
and
imul
daa
ja
cmp
stos
sbb
or
mov
daa
out
mov
mov
xorl
insl
mov
shll
xlat
stos
xor
rorb
mov
repnz
decb
stos
xor
insb
stos
and
add
stos
push
andps
arpl
cli
stos
clc
mov
push
stos
or
inc
stos
cmp
sti
loop
loope
stos
mov
mov
mov
repnz
xor
repz
inc
add
sbb
scas
insl
sbb
scas
mov
outsl
sub
mov
stos
add
add
inc
jmp
test
or
stos
pop
cmp
pop
into
insb
mov
lea
in
xchg
stos
pop
daa
sub
movsl
pop
xor
ret
stos
push
cli
out
in
mov
ret
cmpb
or
xor
jns
arpl
mov
rcll
stos
cmpsl
push
dec
fistl
imul
out
sbb
out
in
pop
sub
xlat
inc
clc
add
stos
ss
inc
jge
stos
mov
and
out
in
stos
sbb
popa
stos
lds
lret
jle
cmp
insl
xchg
test
pop
lahf
mov
fstl
pop
cltd
lahf
mov
sub
in
fwait
imul
fdivl
shll
mov
lret
insb
cmp
testl
leave
adc
mov
inc
xchg
push
mov
enter
mov
shll
xchg
pop
ja
mov
icebp
mov
push
test
stos
jle
adc
ret
loopne
incl
add
jmp
icebp
sbb
lahf
stos
in
inc
lea
leave
cmp
mov
mov
mov
and
push
xchg
stos
xchg
inc
and
stos
adc
jnp
push
movsl
mov
insb
xchg
orb
jecxz
leave
adc
or
jle
daa
rcr
xor
int
lock
jnp
push
inc
mov
xlat
fadds
or
into
sub
mov
stos
outsl
cmp
cli
xchg
es
rorl
in
out
push
add
inc
stos
mul
mov
dec
popf
dec
lock
fnstcw
jbe
adc
push
loopne
mov
in
shl
inc
das
fimuls
xchg
mov
mov
jmp
adc
dec
fwait
sbb
mov
sub
bound
out
stos
cltd
aam
pop
in
cmp
sbb
popf
clc
mov
les
xor
mov
jmp
std
sub
loopne
in
pop
inc
push
or
mov
sub
jge
iret
cwtl
or
imul
mov
lods
dec
push
and
fwait
inc
pusha
sti
orl
jbe
add
inc
xorl
stc
std
or
insl
mov
adc
clc
sbb
add
adc
lret
jb
out
xchg
stos
adc
sub
lcall
mov
ss
cmpb
push
stos
cmpsl
fsubrl
ret
fsubr
scas
mov
push
inc
mov
mov
add
arpl
loop
xor
jecxz
rcll
loopne
sub
sub
fstps
xor
std
cmp
adc
fistl
pushf
in
mov
cld
fs
cmp
das
sbb
or
shrl
insl
jno
enter
out
loop
arpl
stos
and
dec
pop
mov
sbb
xchg
stos
add
icebp
lea
mov
mov
cs
xor
pop
pop
jmp
sub
add
arpl
mov
push
cltd
fists
insl
pop
fs
cwtl
stos
cmp
cld
arpl
mov
mov
stos
mov
xor
pop
lret
jb
sub
das
in
add
adc
and
imul
icebp
sub
divl
in
stos
jns
test
or
xchg
or
in
and
mov
mov
call
je
fidivs
push
lods
imul
dec
sub
sti
cmpsb
mov
ret
in
stos
add
sub
sbb
rcll
lcall
arpl
ljmp
int3
in
push
les
in
mov
imul
addr16
subl
insl
adc
jg
jno
pop
push
movsb
mov
cwtl
add
pop
stos
imul
push
stos
cmpsl
scas
jnp
lods
add
sub
andl
mov
fistpll
out
mov
imul
pop
ret
stos
jl
das
stos
shlb
leave
les
imul
daa
add
jmp
sbb
xor
xchg
notl
pop
insl
mov
je
push
push
stos
rorl
sbb
jns
aam
mov
mov
xchg
mov
subb
ficoms
imul
fmuls
loop
stos
mov
clc
fwait
out
stos
xor
mov
popa
fldt
dec
dec
jl
stos
jns
adc
out
stos
add
cmpl
loop
ret
jno
mov
or
pop
push
jge
mov
aam
xchg
fcoml
int
lcall
push
sahf
jecxz
aaa
lret
outsl
dec
xor
ret
xchg
ja
cmp
loopne
repz
test
js
fcompl
add
stos
test
daa
enter
stos
pop
clc
lret
sub
fucomip
jecxz
push
cmpsl
icebp
les
in
cmp
clc
mov
sub
popf
push
pusha
ret
sahf
std
stos
xor
jge
jl
stos
lods
dec
mov
xlat
stos
jns
aaa
repnz
push
hlt
xchg
aam
adc
insl
jo
xchg
mov
insb
loop
inc
inc
lods
mov
ror
iret
cli
sahf
fsubrp
or
mov
pop
mov
test
fdivs
jae
or
bound
stos
push
hlt
fs
pop
sbb
dec
mov
sub
fsubrp
stos
sbb
test
push
mov
cmc
mov
mov
in
test
in
clc
repz
jne
cmc
dec
dec
loopne
leave
ret
sbb
mov
popa
xor
jmp
cltd
lods
cmc
arpl
add
mov
mov
or
fsubrl
jl
insl
imul
xchg
dec
stos
sub
dec
adc
orl
mov
test
adc
repnz
gs
repnz
dec
push
mov
adc
daa
inc
stos
inc
mov
jnp
insb
xchg
jl
add
aaa
cld
loop
xchg
repnz
fwait
stos
add
adc
jmp
bound
and
and
and
pop
sbb
test
lds
int
jge
fwait
cmpsl
mov
arpl
aaa
or
mov
xrstor
mov
fisubs
movsb
sub
push
dec
add
mov
stos
ret
outsl
pop
ss
lea
stos
loopne
movsl
lret
das
and
push
jmp
lcall
jne
stos
rorb
sar
fcom
jg
aas
mov
pop
fsubl
cs
mov
cmp
sbb
stos
pop
jecxz
sbb
jmp
xchg
fildll
jno
cmpsb
imul
and
and
or
jae
xchg
xor
dec
mov
sti
out
lock
ffreep
sub
mov
popa
sbb
sti
jno
xor
mov
jne
push
fstpt
mov
and
insl
stos
cwtl
jle
cmp
mov
push
lahf
xor
xchg
repz
in
and
je
in
xchg
sbb
out
in
mov
push
ret
stos
and
fldenv
imul
or
dec
push
jmp
lret
lods
inc
les
or
xchg
loopne
movsb
stos
out
icebp
mov
xlat
xor
cmp
ret
mov
stos
loop
xlat
les
dec
shrb
lcall
jl
stos
movsb
mulb
sub
fsubp
outsl
je
loop
xchg
sahf
cmp
insb
paddusw
arpl
push
call
es
push
stos
mov
out
call
sbb
orl
add
ret
repnz
sbb
push
outsb
sub
fildl
mov
inc
movsl
lahf
insl
stos
addr16
add
and
pop
jb
cmp
outsb
sub
lods
shr
mov
test
loop
imul
mov
and
sbb
in
insb
xor
in
sub
push
cs
mov
inc
inc
stos
in
inc
clc
inc
aas
jge
stos
xorb
fcmovnb
sub
popf
rcll
stos
xor
jmp
add
cmp
and
stos
sbb
mov
mov
and
lods
dec
into
stos
out
dec
clc
dec
and
andl
stos
xchg
sub
stos
out
add
inc
lea
stos
dec
adc
xor
ror
sbb
shl
test
jae
push
fldl
insb
or
pop
push
mov
fmuls
aam
subl
mov
sahf
cmpsl
xor
lret
out
in
jg
or
aad
popa
stos
leave
scas
xchg
add
cmp
stos
inc
xor
cmp
ret
rorl
xchg
stos
adc
and
stos
mov
mov
stos
push
and
jle
pop
xor
call
mov
lock
jno
stc
imul
shr
in
jl
mov
add
cmc
popf
lock
cmpsl
or
mov
gs
fwait
inc
vandnps
push
aad
xchg
testl
xlat
mov
dec
adc
pop
cli
pusha
mov
sbb
iret
cs
mov
jmp
gs
stos
cmpsl
mov
sub
enter
mov
js
or
jecxz
inc
push
sub
adc
imull
mov
es
adc
xchg
loop
ret
fmulp
int3
mov
push
mov
pop
in
dec
daa
sbb
subl
ret
mov
les
mov
sub
stos
lret
push
mov
iret
xchg
sbb
add
jg
rclb
push
fimull
les
stos
repnz
and
ret
scas
xchg
and
lds
scas
pop
add
dec
icebp
rcrl
stos
xchg
pop
das
or
jmp
jmp
clc
sar
mov
push
or
xor
inc
loope
sahf
add
fwait
enter
imul
mov
in
mov
sub
stos
lods
jg
bound
cwtl
das
outsl
sub
or
nop
xchg
inc
aas
cmp
repnz
stos
sub
pushf
or
inc
mov
cwtl
jg
xchg
push
cmpsl
subb
fsubrs
add
stos
ljmp
jl
test
test
out
daa
ja
in
sbb
adc
push
ljmp
cmpsb
or
push
mov
mov
fbld
add
pop
sbb
stos
mov
add
stc
jno
std
subb
adc
sahf
imul
loope
inc
pop
jae
push
stos
fadds
push
dec
das
inc
lahf
cmp
fidivrl
mov
mov
leave
jb
jns
cmp
xorl
push
insl
imul
push
stos
adc
cmp
stos
pop
lret
sbb
mov
jl
and
and
fsts
sahf
adc
lock
shl
jb
stos
xchg
out
add
sbb
inc
fisubrs
andl
sub
dec
jmp
mov
stos
jp
jo
cmp
push
cmp
or
push
aas
mov
outsb
sbb
ljmp
jbe
stos
ss
xlat
jb
shrb
insl
imul
jmp
push
sub
lds
xor
nop
mov
loope
int
aad
jp
pop
xchg
test
std
popa
daa
stos
int3
pusha
fsubl
insl
push
push
mov
sti
sbb
dec
sbb
mov
shlb
stos
push
dec
sbb
cmp
lret
addl
add
stos
cltd
shrb
outsb
fildll
out
out
es
pop
dec
inc
inc
lret
sub
jne
lea
js
mov
loop
stos
insb
cld
jg
test
mov
push
adc
stos
pop
mov
ret
mov
sahf
or
inc
call
add
lahf
inc
stos
rcl
leave
cs
jns
and
stos
xchg
xor
ljmp
xchg
out
adcb
nop
mov
and
into
sahf
pop
jb
fdiv
movsl
push
push
ds
ja
ss
addb
pop
iret
out
out
mov
xor
mov
shrl
insl
into
cld
mov
cmp
loop
mov
inc
jo
mov
lods
sahf
mov
jae
aas
out
stos
fwait
lahf
xchg
stos
sbb
lock
rolb
stos
sahf
jno
cmpsl
lret
mov
aas
jmp
adc
leave
xchg
push
add
mov
idiv
js
or
mov
stos
ljmp
mov
jle
mov
rolb
jae
cwtl
sub
pop
stos
ret
lahf
decl
test
mov
bound
iret
cmp
mov
dec
xor
imul
mov
cmc
jae
stc
aaa
test
insb
mov
xchg
push
mov
hlt
push
icebp
dec
outsl
adc
and
mov
push
aad
fs
aas
inc
mov
lea
imul
cli
dec
mov
sbb
stos
xchg
xor
jb
mov
stos
lcall
or
stos
inc
lret
in
xchg
subl
mov
mov
ljmp
loop
insl
aaa
mull
xor
stos
sbb
mov
fisubrs
mov
or
dec
jecxz
adc
outsb
sub
sbb
cs
mov
in
jno
mov
rorb
das
pop
stos
fisttpl
push
dec
sbb
popa
xchg
clc
adc
rcrb
insl
adc
fnstsw
stos
les
dec
loope
int3
jmp
stos
xchg
cmp
cmp
mov
ffreep
dec
xchg
daa
repnz
and
mov
jmp
mov
cmpl
inc
ret
and
mov
push
xchg
push
inc
mov
xor
mov
stos
pop
mov
inc
bound
jno
pop
repz
frstor
push
pop
rcrl
stos
icebp
scas
jle
mov
stos
and
fwait
xor
or
xor
jnp
xchg
das
stos
inc
inc
in
cmpsl
cmp
in
in
aas
sbb
push
mov
stos
stos
mov
mov
je
pop
cmp
movsl
mov
out
loope
loop
or
outsl
cmc
shlb
repz
mov
inc
push
bts
in
shrl
mov
cs
enter
sub
popf
adc
xchg
stos
and
mov
mov
lcall
stos
sbb
add
lahf
inc
push
stos
movsl
lock
ucomiss
xchg
cld
mov
fbld
orl
mov
mov
push
out
leave
xchg
adc
add
pop
cmpsl
add
stos
jecxz
sub
adc
mov
stos
fidivs
inc
mov
in
mov
pop
xor
fimuls
in
pop
stos
arpl
and
cs
xorl
mov
outsb
jnp
inc
jo
mov
lods
rol
in
jmp
sysexit
dec
sub
dec
jmp
call
pop
push
push
jbe
in
mov
addr16
xlat
stos
inc
ds
or
mov
cmp
add
mov
adc
inc
stos
jns
sti
pop
in
xchg
insb
lcall
outsl
or
mov
or
stos
or
stc
jecxz
cmp
subl
insb
or
dec
lahf
xor
mov
push
movsb
repz
mov
sub
adcl
cmp
mov
sarb
outsb
ret
mov
push
mov
inc
pop
out
fdivrl
xchg
out
shll
stos
jnp
and
fsubl
stos
cwtl
push
imul
cltd
cmpsb
mov
mov
ret
outsl
popf
xchg
in
xchg
mov
loopne
leave
inc
movb
shrl
push
test
jl
xor
test
imul
js
dec
inc
jnp
stos
or
fcompl
in
repz
rcl
mov
pop
jecxz
clc
call
pop
mov
xchg
mov
std
mov
lea
stos
in
mov
ret
lds
pop
movsb
cmp
sub
cmpsb
test
enter
clc
negb
frstor
xchg
pop
insl
xchg
in
push
or
jbe
dec
adc
adc
sbb
sbb
sub
stos
pop
movsb
sbb
push
stos
jne
xlat
leave
adc
jns
stos
mov
les
stos
jo
sub
xchg
shrl
stos
xchg
pop
ja
mov
mov
sarb
pop
push
stos
sarl
mov
push
ret
stos
cwtl
lcall
in
jae
push
dec
stos
in
lock
xchg
rep
into
out
cmp
xor
sub
jb
sbb
sbb
cmc
xor
aaa
adc
insl
imul
int
add
mov
shr
test
push
mov
cmc
stos
xchg
push
lods
cmp
and
add
dec
mov
mov
cli
sti
mov
fistl
push
xor
std
stos
or
add
push
ja
stos
outsl
pop
jae
xchg
cmp
sbb
loop
fbstp
lcall
lods
stos
sub
bound
cli
cld
dec
stos
xchg
pusha
pop
xlat
fisubs
mov
push
iret
mov
stos
ss
loop
js
or
sbb
add
in
adc
sub
leave
adc
scas
loop
push
stos
fcomi
stc
std
sbb
popa
outsl
jmp
mov
stos
adc
iret
into
mov
mov
dec
push
lahf
push
add
loopne
sbb
sahf
push
sub
dec
imul
ret
jb
movsl
inc
or
insb
mov
ljmp
popf
enter
add
inc
pop
or
jnp
outsl
push
mov
cli
das
stos
data16
mov
outsl
bound
stos
pop
xor
adc
pop
jno
push
xchg
mov
push
ss
sub
sbb
mov
in
jp
cmp
mov
inc
iret
mov
pop
stos
push
and
pop
jo
fwait
and
stos
int3
push
pop
fimull
movsl
aas
inc
mov
sbb
xor
stos
fs
jbe
and
stos
std
adc
pop
mov
push
xlat
mov
arpl
fimuls
pop
inc
insl
sbb
mov
jbe
lret
stos
sub
insl
outsl
cwtl
stos
test
rcll
xor
adc
insb
xchg
aad
mov
movsb
push
mov
stos
push
fimull
gs
lock
fnstcw
inc
mov
sbb
dec
lea
mov
inc
jne
insl
iret
scas
mov
shlb
into
pop
dec
jns
lcall
push
pop
mov
mov
sub
aam
jmp
test
push
iret
bnd
mov
mov
jae
add
stos
and
test
xchg
cmpsl
sbb
inc
jo
xchg
cwtl
stos
lods
insb
bound
jmp
or
push
pop
insl
mov
push
fsubrp
lahf
cmp
es
stos
test
movsb
mov
xlat
add
jmp
cmp
jmp
mov
push
in
or
shrl
outsl
gs
das
mov
int
mov
cmp
sbb
arpl
andl
stos
lret
sub
or
ljmp
sub
in
sti
lahf
jmp
push
imul
repnz
imull
push
xchg
push
sti
add
repz
jbe
pop
pusha
sbb
mov
outsb
outsl
pop
sahf
push
mov
dec
jecxz
stos
inc
stos
sub
cwtl
rol
test
icebp
lods
lea
cltd
repz
mov
aas
stos
test
aad
pop
inc
daa
insl
lock
clc
mov
ss
stos
outsb
mov
subb
int
shr
xchg
mov
and
ljmp
sub
push
stos
lods
sbb
pop
mov
stc
mov
sbb
jmp
adc
sub
clc
lcall
pop
xchg
nop
inc
out
ret
stos
add
push
add
jge
subb
shl
sbb
stos
jmp
mov
insb
mov
movsl
fldl
pop
xorl
loopne
fdivrl
sbb
mov
les
outsl
push
sahf
es
mov
scas
or
stos
inc
pandn
jecxz
out
stos
jle
loop
cmpb
stos
imul
xchg
jnp
adc
mov
stos
mov
into
xchg
stos
push
mov
test
cmp
hlt
repnz
dec
mov
sti
lret
dec
push
mov
popf
jns
jo
lds
in
pop
jl
insl
or
mov
divb
stos
aaa
int
imull
mov
aas
jo
xchg
ret
cli
adc
mov
daa
outsl
mov
xor
adc
jmp
sub
inc
rorl
stos
sbb
xchg
stos
mov
mov
stos
sub
leave
add
test
pop
xchg
push
cmpsb
mov
js
xchg
out
test
test
dec
sub
stos
ljmp
stos
insb
pop
into
push
mov
pop
rorb
sarb
filds
into
les
or
dec
jge
dec
out
lea
jg
xchg
xor
stos
popa
xor
sti
cltd
mov
or
insl
mov
data16
xchg
loope
insb
sbb
xchg
iret
xchg
mov
push
add
std
xchg
stos
mov
sahf
iret
dec
jmp
jae
inc
mov
push
mov
or
inc
imul
sbb
mov
enter
add
inc
sub
adc
movsb
icebp
stos
pop
mov
fidivrl
mov
bound
stos
jmp
repz
cltd
stos
inc
adc
and
add
push
sbb
lret
sub
sub
jecxz
pusha
mov
push
inc
rcr
mov
cmp
xchg
push
cmpsl
stos
mov
and
mov
inc
sub
mov
sub
stos
or
dec
stos
mov
jae
movsl
out
mov
out
dec
test
fs
stos
insl
outsb
sar
data16
out
insl
xchg
aas
mov
stos
push
mov
push
mov
sub
movsl
mov
icebp
mov
ljmp
sub
cmp
in
sub
jno
adcl
loop
pop
adc
jge
scas
pop
xchg
mov
ret
pop
subb
lahf
push
repnz
mov
pop
xchg
xchg
iret
stos
lock
xor
mov
ljmp
stos
jne
adc
insb
push
jp
pop
adc
enter
ss
rcrb
xchg
add
fwait
stos
dec
mov
mov
test
mov
xor
cmpb
mov
call
mov
leave
stos
mov
imul
push
and
insl
data16
and
jo
or
fcoms
or
ret
or
addr16
adc
es
sub
stos
cmpsl
mov
fwait
outsl
out
dec
int
and
sub
jle
stos
jbe
sub
stos
iret
ja
mov
stos
bound
invd
stos
lcall
sub
repz
or
stos
xor
push
loopne
mov
cs
pop
cmp
orl
xchg
push
push
outsb
or
out
and
stos
movsb
jno
mov
stos
inc
nop
sbb
enter
scas
adc
adc
insl
ds
subb
test
out
mov
inc
dec
jno
push
insb
fldt
rcrb
outsl
and
ret
pop
and
inc
sbb
xchg
daa
lods
lcall
ret
faddl
add
inc
and
mul
cmp
cli
xor
jns
repz
xchg
ljmp
and
jl
stos
mov
sti
mov
stos
insl
jmp
sbb
lea
cltd
sbb
clc
stos
push
dec
inc
ss
mov
xchg
sbbb
stos
pusha
mov
stos
sbb
sbb
and
xchg
xor
sub
cmp
mov
test
mov
out
fucom
mov
pop
stos
sbb
xchg
arpl
fsubrl
or
int
sahf
shl
lret
mov
jle
mov
leave
stos
stos
dec
addl
xor
outsl
call
mov
and
psrlw
xchg
adc
mov
mov
add
cwtl
inc
loope
scas
arpl
and
add
test
lods
xchg
sbb
rclb
jo
ss
sub
stos
lahf
out
jno
xor
bound
dec
jl
sbb
and
in
mov
scas
aaa
lcall
xchg
mov
stos
add
gs
sub
test
adc
xchg
adc
lret
les
rcll
cli
mov
sbb
stc
push
stos
mov
lret
in
loope
stos
push
sub
inc
insb
in
xchg
dec
inc
or
pop
xor
dec
adc
lcall
jbe
sub
jp
xchg
fidivs
bnd
mov
or
cltd
push
sub
jns
subl
scas
sub
mov
test
xlat
dec
mov
pushf
jno
pop
sbb
add
das
inc
shlb
jne
pop
mov
int
icebp
loope
mov
popf
and
jae
insb
sbb
hlt
loopne
xchg
stos
xchg
push
mov
inc
xchg
cld
out
iret
insl
sbb
aaa
mov
in
lods
lret
imul
cmc
es
int3
mov
cli
enter
dec
add
insb
decl
jnp
jg
mov
add
pop
das
and
dec
push
push
repz
sub
jmp
pop
rclb
xchg
inc
mov
lret
xor
pusha
insb
enter
adc
fnstenv
mov
jg
cs
out
cmpsl
incb
cltd
push
mov
popf
lea
stos
stos
std
je
pop
add
sbb
sub
mov
mov
stos
cmp
push
mov
stos
inc
fs
add
stos
js
xchg
sbb
push
stos
dec
aaa
mov
insb
into
lcall
sahf
pop
stos
jle
push
xorb
fscale
sub
cld
ss
mov
es
sbb
push
cltd
test
pop
stos
sub
xchg
push
cmp
inc
shlb
ret
push
push
jmp
sub
lahf
sbb
ret
stos
fbld
pop
ljmp
orl
mov
sbb
dec
lods
xchg
cmp
mov
xchg
cwtl
jl
fcmovnbe
dec
addr16
cmp
cmp
push
lret
cmp
sub
sbb
stos
xor
loope
jb
jmp
pop
mov
adc
add
outsb
cltd
imul
fnstcw
pop
cmp
xchg
sarl
lods
stos
jmp
or
or
push
jmp
dec
jae
fdivs
stos
icebp
jl
es
lret
jbe
dec
pmuludq
insl
mov
pop
dec
mov
fwait
insl
push
stos
add
movsb
mov
sub
outsl
nop
insl
jl
int
xchg
and
lds
stos
sub
jns
xchg
int3
dec
dec
decb
add
insb
or
mov
sti
inc
rolb
repz
mov
lea
sub
js
stos
std
fistpll
sub
popf
jl
js
xchg
inc
pop
lcall
scas
jmp
inc
add
fstpl
mov
and
pop
out
cmp
adc
mov
inc
inc
inc
outsl
mov
fwait
and
in
jae
jmp
stos
aad
call
bound
mov
pop
ret
inc
stos
xor
movsl
out
push
inc
rcrl
mov
idivb
cld
jmp
test
fwait
push
pop
lret
mov
lcall
jp
jge
addb
pusha
xor
dec
sbb
in
pop
push
adc
inc
mov
mov
sub
adc
stos
sub
sbbl
jge
cmpsb
cmp
mov
cmp
hlt
jg
stos
xor
in
stos
in
pop
lret
jae
pop
repnz
divl
sarb
fdivs
xchg
sahf
in
sub
mov
adc
stos
dec
push
movsb
mov
xor
loope
add
stos
shlb
mov
lcall
adc
outsb
push
mov
push
outsb
inc
push
and
loopne
ds
mov
xlat
jnp
jo
jne
sbb
xchg
lret
in
out
cmp
xor
das
push
jl
stos
pop
arpl
push
clc
imul
or
xchg
jne
pop
gs
cmp
jae
xchg
lds
stos
jecxz
push
dec
inc
pushf
mulb
ja
inc
xchg
xor
imulb
mov
flds
or
sub
jmp
addr16
xchg
add
or
adc
loopne
and
imul
inc
imull
sub
dec
sbb
push
add
mov
cmp
jns,pn
inc
inc
mov
xor
mov
insl
jl
and
sub
dec
dec
stos
dec
gs
xor
adc
outsl
inc
repz
nop
ret
cltd
and
xorl
and
inc
lock
stos
stos
loope
cmpsl
fisubs
pop
ds
loope
inc
imul
insl
testb
xchg
sub
movsb
mov
or
lock
and
lods
outsb
mov
xchg
sub
cmpsb
dec
stos
popf
rolb
and
test
inc
mov
adc
push
mov
stos
data16
and
mov
add
jo
stos
bound
repz
nop
stos
adc
shlb
xchg
hlt
dec
lret
pop
sub
js
pusha
fs
pushf
sti
stos
sarb
mov
cmp
pop
int
and
jne
sbb
mov
cmp
sbb
repz
cmp
and
pop
xchg
mov
movsl
add
ret
xchg
int3
insb
cmp
rcrb
xor
pop
aas
cmp
mov
ss
mov
cld
test
ds
xchg
push
stos
mov
mov
xchg
lods
mov
pushf
fcomps
test
push
stos
movsb
insl
and
xor
sbb
int
lds
dec
loop
mov
inc
sub
lahf
aam
inc
lock
sub
cwtl
es
pop
mov
stos
mov
lahf
xor
stos
inc
in
das
cltd
int
dec
stos
clc
add
aad
je
in
jb
pop
stos
sahf
imul
dec
outsl
out
xchg
pop
or
imulb
aam
ljmp
jb
int3
dec
stos
mov
mov
add
and
imul
shll
jo
push
jmp
mov
xor
dec
or
inc
xchg
cltd
pavgw
es
and
enter
push
stos
xlat
inc
dec
xor
loop
loopne
stos
stc
lahf
mov
popa
ds
lret
pop
sub
dec
out
inc
stos
pop
push
nop
cs
int
ror
or
arpl
sbb
push
xor
lea
mov
imul
test
out
xchg
push
pop
adc
bnd
subb
lahf
jle
or
or
add
and
mov
scas
lcall
jne
mov
mov
outsb
mov
jge
rcrl
inc
push
jb
stos
test
shll
stos
dec
addr16
rcrl
test
stos
ljmp
push
insb
jae
pop
das
leave
lcall
addr16
xor
cmp
stos
sbbb
lret
stos
shrl
fcmovnb
stos
jns
repz
mov
push
jmp
dec
ret
cmpl
stc
loopne
lret
movl
push
stos
vpcomuq
xlat
stos
push
test
std
stos
addr16
les
sbb
or
lds
mov
stos
out
enter
int
jmp
jge
sbbb
insb
mov
stc
dec
fwait
ret
xor
sahf
push
sbb
out
mov
daa
inc
push
mov
imul
xor
je
stos
inc
leave
inc
inc
stc
add
xchg
test
cmc
mov
loop
rol
inc
stos
adc
leave
ja
bound
fwait
rolb
stos
repnz
faddl
sub
ret
mov
adc
out
pop
into
popf
xor
call
gs
xchg
insb
test
push
or
mov
imul
jb
xchg
stos
dec
mov
adc
ret
jecxz
xchg
ljmp
sub
inc
stos
mov
out
lcall
sbb
call
stos
test
aad
adc
test
outsb
jl
ds
stos
js
sbb
out
je
insb
sti
inc
in
ljmp
lcall
and
std
sbb
inc
xchg
pop
or
fisubrs
stos
mov
pop
xor
push
fwait
mov
mov
stos
sub
f2xm1
push
das
add
insl
sbb
cmp
in
cmp
outsb
rorl
xchg
stos
mov
fcmovne
jns
jecxz
push
stos
fbld
xchg
add
in
or
cmp
mov
push
mov
xchg
jns
and
mov
dec
xchg
cli
mov
loopne
rcl
push
or
fisttpl
js
stos
xchg
xlat
fwait
push
iret
scas
xchg
jle
stos
insl
xchg
or
pop
pop
subl
inc
xchg
mov
stos
jns
push
enter
add
inc
mov
cld
jnp
sti
insl
jmp
test
insb
pop
loopne
and
rol
bound
push
lods
repz
cmp
adc
jo
jns
mov
pop
jnp
sub
icebp
stos
andb
gs
mov
pop
mov
stos
scas
jg
cmp
cmpsl
ljmp
push
push
sub
cmp
fstl
jno
imul
mov
call
fxch
mov
out
stos
mov
or
icebp
sarb
icebp
sub
dec
adc
xchg
fnstcw
cld
dec
push
lret
cmp
nop
lcall
jl
pop
jmp
dec
adc
jno
insb
cmp
pop
loop
enter
cmp
stos
leave
xchg
clc
out
xchg
icebp
fwait
dec
imul
mov
sub
lock
cmp
jno
jmp
pop
jg
or
fildll
jecxz
xor
mov
jne
push
sub
mov
xchg
xchg
adc
loopne
pop
cltd
jp
outsl
cwtl
cltd
mov
and
stos
cmpsb
jge
dec
add
cmpsl
ss
cwtl
jae
xor
jb
xchg
xchg
add
stos
or
test
ljmp
filds
hlt
outsl
jo
dec
fldt
mov
or
scas
push
mov
mov
call
es
stos
jbe
scas
push
mov
xlat
fsub
decl
test
pop
mov
lret
lock
jne
sub
adc
ss
nop
fprem1
stos
lahf
int
xchg
rorl
arpl
adc
movsw
ror
lret
or
insb
fisubrs
daa
rorl
stos
mov
dec
push
subl
fistpll
stos
fbstp
pop
inc
in
push
movsb
mov
std
and
orb
stos
mov
stos
push
add
fs
pop
mov
outsb
mov
out
gs
lcall
mov
pushf
test
rclb
and
mov
xor
mov
lret
push
and
lahf
cmp
stos
in
dec
push
xor
stos
push
sub
pop
cld
push
sub
aaa
ret
enter
nop
stos
ljmp
cmpsb
ljmp
loopne
stc
xchg
jmp
jne
mov
dec
data16
or
mov
push
adc
mov
jb
sub
sbb
add
dec
stos
mov
into
ja
mov
insb
test
ret
cmp
xor
pop
dec
cmp
lret
fwait
daa
xchg
hlt
fdivrl
js
sbb
xor
int3
lret
pop
jg
or
push
inc
loopne
leave
jae
rorb
andl
jle
push
insl
rcrl
aas
mov
mov
rcl
imul
jle
pop
fwait
ret
cmp
into
jl
adc
std
mov
stos
mov
xor
push
dec
cmpb
mov
stos
in
push
ljmp
add
push
xchg
dec
hlt
stos
mov
xchg
and
ss
stos
aas
add
repz
lock
xor
sub
arpl
cmpsb
lcall
sbb
mov
in
dec
or
fsts
stos
push
pushf
xchg
adc
xchg
stos
repz
jmp
xchg
and
repnz
negl
dec
stos
push
dec
cltd
push
inc
xchg
cmp
stos
je
in
or
push
fwait
stos
ret
mov
inc
mov
mov
je
lods
mov
xchg
lret
incb
jmp
in
jecxz
test
add
jp
fwait
cmp
push
xor
mov
cltd
stos
mov
scas
jbe
stos
mov
loope
ljmp
sbb
push
or
stos
xchg
push
and
stos
push
mov
push
lret
lea
insl
sbb
xchg
mov
test
sbb
xor
outsl
jno
mov
stos
cmp
dec
inc
loope,pn
dec
stos
and
js
cmpsl
pop
roll
inc
and
ret
aad
mov
stos
loope
insb
and
adc
bound
roll
test
dec
adc
stos
pop
xchg
fwait
xchg
dec
fs
lret
in
mov
shrl
stos
sbbl
stos
inc
cmp
jo
jg
fldt
fmuls
in
inc
data16
stos
call
pop
inc
sub
insb
pop
mov
fnstenv
out
cmpsl
test
pop
sbb
push
xchg
sub
rorb
fistpll
pop
push
jae
stos
mov
xor
xor
pop
stc
idivb
insl
push
mov
or
fnstenv
fwait
ret
test
stos
jb
in
repz
pop
stos
insb
sbb
mov
subl
stos
cmp
out
mov
fwait
es
xor
popf
mov
loope
shll
mov
stos
scas
sub
mov
stos
popa
lcall
outsl
inc
mov
lcall
pop
aad
sti
jmp
lods
jae
sbb
lods
mov
mov
jmp
cld
out
xor
sahf
std
jb
sub
mov
stos
dec
add
test
dec
imul
cwtl
stos
push
leave
aaa
add
and
lods
xor
sti
jmp
or
adc
stos
insb
fwait
mov
mov
and
stos
or
jbe
jnp
mov
mov
lds
insl
leave
xchg
loopne
mov
stos
xor
mov
fcom
je
cld
leave
nop
insb
sti
pop
int
rcrl
lret
pushf
out
cmp
int3
mov
push
std
push
loop
stos
mov
les
jle
stos
cmp
pop
in
loopne
mov
int3
xor
inc
stos
mov
movsb
fs
pop
inc
insb
into
and
cmpsl
push
mov
in
add
mov
adc
outsb
and
cmpsl
mov
insl
lret
mov
pop
jns
inc
pop
dec
lret
outsl
cmc
imul
xlat
mov
and
cmp
push
pusha
mov
shl
xor
add
pop
lahf
mov
jae
in
inc
jp
sub
setno
es
fisubrs
xor
jns
das
iret
mov
push
or
dec
or
test
push
mov
stc
test
inc
sbb
push
stos
pop
mov
mov
stos
clc
push
shl
imul
adc
mov
subb
xor
arpl
stos
into
dec
ljmp
test
mov
frstor
add
mov
stos
fwait
not
or
and
shrb
jp
pop
std
stos
sahf
xchg
jns
add
mov
dec
stos
leave
lods
dec
inc
add
hlt
inc
stos
inc
sbb
stos
mov
xchg
stc
rcll
or
adc
insb
inc
ja
out
stos
mov
lahf
add
adc
ffreep
stos
jne
jmp
popf
mov
xchg
fmuls
push
add
add
stos
dec
jl
call
mov
cmc
jmp
mov
mov
xchg
shll
hlt
jnp
loopne
stos
subb
outsl
cmc
add
inc
lret
dec
mov
loope
rcll
addr16
push
imul
sub
mov
insb
scas
or
cmc
pop
sub
mov
mov
jae
jg
inc
push
pop
aas
stos
sub
jge
loope
jb
mov
xor
xchg
lcall
push
outsb
jae
mov
cmp
mov
insl
movsb
subl
test
call
fildll
xchg
ret
stos
stos
popa
xchg
jmp
push
mov
push
dec
stos
iret
cltd
mov
jle
mov
jo
rorl
les
pop
stos
pop
and
loopne
cmc
jae
les
stos
movsb
inc
or
mov
push
sub
adc
and
and
dec
jno
lods
mov
cld
add
inc
pop
leave
in
loop
stos
es
add
inc
bnd
jnp
pop
stos
mov
mov
and
sub
mov
push
adc
pop
iret
mov
sub
sub
mov
add
inc
dec
in
add
cmp
push
mov
fdivs
test
mov
stos
lcall
bound
mov
pop
stos
pop
dec
movsl
mov
sbb
and
jmp
xchg
mov
or
outsb
push
es
cld
aad
dec
mov
movsl
xchg
xchg
mov
jmp
stos
outsb
inc
sub
lret
outsl
jae
test
inc
mov
and
xor
icebp
push
mov
repnz
mov
xchg
lahf
adc
lock
add
mov
and
stos
mov
xchg
imul
sbb
jne
push
jbe
mov
sbb
int3
stos
adc
inc
aad
add
pop
outsl
cwtl
inc
fidivrs
mov
dec
jne
cmp
aam
push
xor
and
add
jmp
outsl
stc
xchg
jecxz
ret
and
fsubrl
ficoml
xlat
stos
cmp
xchg
shrb
jmp
or
mov
dec
push
outsb
shrl
call
es
shll
and
cs
andb
lods
in
xor
insl
imul
insb
das
clc
sub
pop
mov
cmp
sub
clc
and
stos
mov
push
mov
stos
cltd
mov
or
stos
testl
mov
inc
sbb
push
stos
xor
mov
repnz
xor
xor
push
stos
pop
cli
add
out
inc
mov
ljmp
add
push
jne
clc
stos
sub
sub
out
xor
jbe
or
jns
test
push
and
mov
and
stos
push
out
repnz
pop
dec
in
dec
sub
jne
cs
dec
lods
xor
sahf
lds
int3
inc
divb
mov
adc
shl
fst
xor
xchg
stos
mov
ljmp
xor
xorb
adc
stos
pop
xor
inc
loop
pop
jo
movsl
mov
fwait
inc
inc
mov
cmp
mov
xchg
sbb
xchg
lret
jmp
sahf
jge
push
loope
mov
or
cmp
out
lahf
imul
jmp
insb
pop
add
mov
rclb
mov
ss
sahf
dec
xor
lret
mov
repz
addr16
leave
jl
mov
inc
int3
stos
jp
js
test
mov
lahf
cmp
adc
dec
inc
mov
shlb
xchg
push
mov
jle
xchg
stos
subl
jb
aam
adc
insb
scas
stos
popf
int
or
pop
inc
jb
xor
mov
jl
out
stos
stos
mov
sbbl
mov
inc
mov
mov
mov
les
push
mov
arpl
stos
push
aam
mov
test
mov
dec
xor
out
mov
lret
xor
shrl
ret
xchg
jns
test
stos
inc
das
je
push
xor
stos
lcall
pop
stos
sub
enter
iret
stos
xchg
mov
inc
fidivs
xchg
push
sub
stos
in
adc
xchg
xor
cmp
adc
and
sub
stos
dec
pop
lods
shrb
sbb
mov
popa
fs
cltd
pop
xchg
jbe
arpl
jb
mov
stos
imul
sub
cli
mov
xchg
sub
fwait
push
or
bound
stos
scas
cmpsl
dec
mov
lds
iret
pop
stos
mov
xchg
add
arpl
notb
mov
dec
mov
jp
enter
add
cmpsl
stos
sbb
jnp
inc
pop
mov
add
xchg
cmp
jae
into
xor
popa
stc
cmpsb
dec
jmp
adc
jmp
jns
ret
stos
pop
mov
and
add
pusha
dec
stos
or
pushf
push
mov
mov
cmp
lret
jg
stos
repz
push
stos
rcr
xor
adc
outsl
data16
xlat
pop
enter
stos
ss
pop
cmp
movsl
stos
pop
push
xor
iret
inc
loope
insl
mov
fs
mov
rorb
std
stos
subb
daa
mov
repnz
scas
mov
jl
pop
jno
lods
sbb
lret
inc
lds
fwait
inc
mov
scas
loop
fwait
repz
sub
rorl
xchg
movsl
outsb
icebp
in
pop
xorb
cmp
scas
xchg
xchg
stos
lahf
out
inc
lock
jb
jmp
ret
add
pop
stos
in
mov
fbstp
cld
xor
data16
stos
mov
mov
fsubrl
data16
pop
lea
cmp
adc
add
and
loopne
add
add
xor
jae
lret
stos
cmp
lods
cmpsb
stos
and
xchg
out
stos
mov
inc
mov
imul
lds
lods
xchg
stos
fadds
jmp
stos
stos
jns
dec
sub
test
mov
or
testl
and
scas
sub
dec
stos
cltd
mov
sbb
and
push
stos
sbb
adc
stos
xor
int
add
bts
arpl
ret
jb
icebp
xchg
es
das
movsb
push
or
fs
ret
in
sti
pop
jb,pn
cmp
outsl
cld
mov
stos
bnd
inc
xor
mov
cltd
add
xor
or
notrack
scas
mov
mov
dec
mov
cltd
mov
push
mov
add
mov
test
aad
jp
add
mov
and
jmp
stos
insb
mov
fmulp
stos
in
movsb
clc
daa
inc
adc
pop
ret
ret
test
filds
xchg
dec
out
cmpsl
mov
and
rorl
pop
jp
jns
pop
aaa
mov
ja
ljmp
jo
subb
mov
stc
xlat
jmp
sbb
shlb
push
aam
fiadds
ds
into
push
stos
out
loopne
mov
sbb
jge
mov
adc
scas
stos
in
movsb
or
cmp
ss
shll
jno
sub
mov
imul
and
sbb
sbb
mov
iret
sahf
stos
and
or
push
stos
xor
leave
and
stos
aam
lcall
lock
icebp
mov
mov
cmpsb
stos
mov
and
pop
mov
rolb
sti
push
negl
stos
pop
jle
push
push
jmp
sahf
stos
adc
das
push
testb
mov
mov
icebp
push
arpl
push
mov
dec
mov
mov
push
push
sub
xchg
stos
ret
or
mov
push
mov
dec
cltd
jecxz
out
jmp
inc
dec
sahf
xlat
mov
clc
enter
mov
bound
or
or
stos
lahf
sub
stos
dec
xchg
punpckhbw
or
cmp
push
cmc
xchg
pop
lcall
js
sub
clc
lcall
fimuls
push
data16
pop
and
in
mov
mov
insl
and
ds
adc
jmp
fwait
jecxz
in
cmpsl
mov
andl
mov
mov
fdivs
dec
pop
shr
mov
cmpsl
mov
add
outsl
adc
cli
es
mov
aam
inc
subl
dec
sahf
mov
iret
mov
xor
vpshuflw
dec
mov
mov
popf
loop
and
je
and
adc
movsl
stos
and
pop
push
nop
jecxz
cmp
push
mov
in
lea
adc
aad
sbbl
into
insb
mov
jno
lea
mov
mov
enter
scas
leave
outsl
xchg
push
xchg
scas
sbb
ret
and
mov
insb
pop
inc
jp
inc
jae
test
scas
lods
mov
add
int
xchg
stos
leave
xchg
mov
lea
mov
test
fcmovnb
mov
shll
xor
or
stos
cmp
push
in
pop
sub
add
sbb
out
mov
leave
fcompl
aaa
daa
fs
mov
pop
ret
and
jl
lods
popf
dec
outsl
rcrl
scas
lea
repnz
cltd
cmp
xchg
mov
add
mov
jmp
incl
sub
shlb
fcoms
stos
and
in
pop
leave
jl
sub
mov
lea
cwtl
cmp
jb
mov
jg
std
and
pop
mov
icebp
and
inc
ficoml
jno
inc
cmpsb
movsl
or
mov
dec
mov
mov
fwait
lods
and
gs
xchg
push
mov
cmp
cmp
mov
sbb
or
lods
cmp
sub
ficomps
aam
shrl
mov
fsubrs
andl
dec
mov
mov
push
push
jp
mov
push
fwait
adc
int3
sahf
cmp
cmp
stos
test
out
mov
mov
cmp
fsubrl
mov
loope
rcll
test
enter
mov
mov
xchg
int3
jb
inc
mov
stos
outsl
dec
mov
movsl
add
dec
push
xchg
sub
push
and
int
jmp
mov
scas
jl
add
xchg
adc
in
out
lds
mov
daa
lret
divl
loopne
sub
ja
mov
dec
adc
lcall
rorb
inc
push
mov
repnz
int
imul
mov
outsb
jle
mov
test
cs
lock
inc
fistps
scas
lret
movsl
jne
ljmp
xchg
xor
add
lds
into
data16
fwait
mov
push
stos
push
jle
mov
cwtl
pop
push
or
add
popf
outsl
push
out
loop
movsl
inc
sub
dec
xor
in
call
popf
cmp
add
adcl
insb
scas
inc
or
xor
dec
int
leave
ret
add
sub
pop
testl
xor
jl
mov
ljmp
das
sbb
out
inc
jno
add
sbb
add
ds
add
cmp
daa
stos
and
jmp
sbb
cmp
cwtl
jmp
loop
std
icebp
shlb
cmpsl
pop
insb
dec
aad
fwait
mov
movsl
leave
sub
xlat
loop
test
mov
scas
push
hlt
ficoms
add
into
dec
jmp
inc
in
std
lret
mov
jle
popa
sub
je
movsl
push
lcall
inc
inc
jle
ret
test
mov
sub
push
fmulp
fsubs
cmp
repnz
clc
int
pop
add
sub
cmp
dec
jl
lods
jg
dec
popa
cli
jno
add
int
cltd
mov
jmp
xchg
fstpt
jecxz
das
imul
gs
ffree
mov
call
xor
movsl
je
mov
xchg
pop
mov
fmuls
ss
fsubs
lods
inc
scas
push
mov
push
out
dec
mov
mov
jl
sbb
mov
sahf
mov
mov
pop
into
adc
call
mov
push
mov
out
inc
ljmp
inc
jo
push
aas
inc
adc
leave
insl
movsl
movsl
or
jmp
scas
inc
cmp
xchg
sub
addl
movsl
adc
xchg
bound
xor
scas
or
fsts
mov
mov
std
sub
add
sahf
pop
xchg
js
clc
mov
int3
scas
ds
adc
add
mov
mov
mov
fstl
in
xchg
lret
inc
push
and
ljmp
mov
mov
in
or
sbb
pop
repnz
daa
push
daa
mov
add
lock
imul
add
mov
xlat
movsl
and
in
mov
fidivrl
lods
dec
xor
scas
adc
cmp
push
lods
mov
cmpsl
fsubrl
mov
inc
in
in
cwtl
push
mov
outsl
mov
aas
or
xor
dec
imul
decb
xchg
add
dec
ffreep
cwtl
xchg
out
and
adc
jecxz
gs
dec
cld
push
pop
out
shr
sbb
popf
daa
xlat
cwtl
pop
xchg
or
push
adc
xor
sahf
lahf
scas
dec
dec
sbb
ret
popf
xchg
frstor
mov
call
int3
lds
adc
sahf
sbb
sub
or
push
mov
cmp
shrl
scas
add
dec
test
cmp
int3
cmc
xchg
add
and
arpl
xchg
xlat
add
ror
mov
mov
adc
fcompl
lret
xchg
or
mov
lahf
add
cmp
mov
mov
movsl
sub
xchg
cmpsb
imul
xor
fcmove
adc
fistl
mov
sahf
hlt
fwait
cmpsl
shlb
outsb
xlat
fldt
mov
sub
mov
pop
jge
and
sbb
fnstsw
popf
cmc
aad
test
jmp
push
push
xchg
jge
fistl
or
mov
cld
add
push
fmul
in
adc
lods
adc
movl
mov
lds
daa
push
mov
mov
lods
test
sub
test
enter
sbb
loopne
mov
cmp
jo
mov
loopne
adc
stos
dec
outsl
mov
insl
adc
inc
dec
fnstcw
popf
sub
in
sahf
adc
jb
ret
test
lds
and
pop
cmp
push
outsl
jae
pop
lcall
loope
hlt
jmp
shrl
dec
add
jo
adc
in
scas
xchg
out
adc
pushf
lcall
sbbl
jg
mov
sub
out
mov
lds
in
dec
outsb
jmp
movsl
xor
add
xchg
push
jp
or
call
lret
mov
sbb
int
outsl
jge
cmp
fstp
push
lea
cmp
sahf
sub
mov
or
int
sbb
ret
js
pop
cmp
out
add
insb
ret
movsl
testb
cs
sub
and
sub
mov
mov
jle
jl
xor
sbbb
cmpsb
xchg
addl
outsb
fwait
daa
mov
xor
in
movsl
jl
aam
repz
lods
lahf
sbb
ss
mov
or
out
jbe
or
jecxz
outsl
add
in
pop
cwtl
jge
rolb
jge
in
clc
ret
insl
cmpsl
aam
xchg
push
sub
out
js
sarl
push
mov
imul
mov
push
sbb
mov
lret
and
add
push
cld
xchg
sbb
sti
sub
mov
sub
sub
mov
pushf
push
mov
inc
jne
lahf
and
mov
js
mov
mov
cli
jns
movsl
test
xor
pop
pop
xor
inc
xor
lds
test
xor
scas
xlat
pop
in
in
lds
lcall
std
iret
lea
pushf
out
dec
adc
iret
pop
xchg
push
imul
adc
loopne
sbb
ss
dec
dec
jb
mov
test
insl
inc
movsl
in
mov
lods
bound
cmpsb
push
dec
mov
rorb
cmp
into
test
and
dec
popf
iret
sub
outsl
push
sbb
std
mov
loop
scas
nopl
outsb
neg
int
inc
loope
jb
scas
cmp
cmp
addr16
stos
hlt
xchg
notb
nop
sahf
push
mov
lds
ret
mov
mov
mov
mov
push
sbb
jno
mov
jns
fwait
push
mov
xchg
repz
mov
ret
clc
lret
fldenv
scas
cmp
mov
xchg
xor
and
cltd
lea
std
inc
ja
movsl
mov
pop
std
loop
popf
mov
scas
leave
inc
cmpsl
out
shll
xchg
rol
into
push
xchg
rcl
add
inc
mov
fidivs
sbb
in
outsb
adc
aaa
push
pusha
outsl
insl
in
cmpsl
pop
and
loop
outsb
xchg
loope
ljmp
jle
test
es
or
in
and
push
xchg
iret
sub
jno
pushf
jbe
pop
xchg
mov
sahf
rorb
push
mov
add
jmp
mov
dec
jbe
aaa
cld
lret
mov
adc
fdiv
repz
add
sub
mov
scas
mov
aam
mov
es
xor
in
mov
sbb
repz
xchg
mov
xchg
int3
inc
add
dec
shll
push
mov
int
cwtl
fimull
xchg
popa
dec
mov
sbb
repz
jle
push
dec
cmc
or
and
pop
pop
mov
sbb
fistl
sahf
or
lds
outsb
adc
test
jmp
jno
add
mov
mov
or
inc
call
mov
sti
lds
xchg
dec
xor
pop
ror
in
ret
sub
push
add
stc
xor
stos
fsubrl
jae
popf
pop
push
mov
pop
inc
jmp
outsl
or
mov
push
add
adc
scas
outsl
stos
or
and
mov
cmp
xchg
push
lods
orl
sahf
cwtl
frstor
or
xor
mov
adc
mov
aam
gs
fwait
sahf
add
push
pop
pop
fwait
jp
into
shlb
repnz
scas
mov
push
mov
sub
test
insl
ss
mov
sub
adc
inc
daa
sub
sbb
bound
fstpl
sbb
and
leave
inc
sub
sbb
mov
movsb
insb
xchg
or
mov
std
sbb
ss
jne
add
loope
stc
sub
add
mov
lds
shr
mov
in
faddl
imul
daa
adc
outsb
loopne
test
dec
repnz
sbb
lahf
add
adcl
lods
or
adc
jl
pop
add
pushf
jecxz
in
rcrb
push
adc
fildl
in
ror
test
jne
adc
sahf
outsl
std
inc
sbb
and
xchg
jle
push
xlat
mov
and
insl
out
push
outsb
lds
mov
repnz
add
pop
fistpl
mov
and
and
fpatan
mov
mull
fadd
mov
push
repz
bound
ljmp
stos
jecxz
xchg
xchg
outsl
inc
dec
xchg
sbb
clc
mov
sbb
xor
dec
cmc
loope
scas
cld
rorb
adc
lea
mov
push
xbegin
add
sti
fadd
lds
rclb
ficomps
cmpsl
je
out
add
mov
fistl
xchg
lods
push
pop
je
aam
out
inc
loop
hlt
int
xchg
lds
lock
add
xlat
pop
pop
or
add
sbb
dec
mov
mov
sub
xor
cmp
popa
fisubs
adc
mov
xor
and
sti
dec
or
add
lds
mov
push
clc
sti
jle
xchg
popa
shl
in
cwtl
xor
push
sbb
jge
jl
xchg
jb
sub
imul
insb
pop
dec
xchg
sti
mov
out
pop
push
mov
or
ret
ja
mov
clc
cmp
xchg
cwtl
rcrb
inc
sub
fsubl
and
cmp
fidivl
push
jg
mov
inc
jne
mov
int3
in
scas
jb
mov
add
xchg
mov
shrb
daa
mov
xor
mov
fldln2
mov
xchg
leave
mov
jae
lds
aad
sub
mov
aam
xchg
sub
mov
mov
mov
cmp
xchg
test
cwtl
movsl
mov
push
xor
add
add
mov
insl
sarb
out
add
mov
and
lea
psubd
fbstp
popf
xchg
mov
dec
dec
ror
scas
jecxz
inc
add
icebp
mov
mov
dec
cli
lea
sbb
push
xchg
push
cmp
sub
mull
in
mov
sub
je
push
insl
mov
xlat
dec
fisttpl
xor
dec
mov
cmp
scas
iret
add
into
mov
mov
cwtl
cmc
adc
mov
pop
adc
and
sub
xchg
mov
xor
stos
cmp
or
jb
and
mov
inc
sub
push
add
jbe
adc
int
fcompl
int3
and
pusha
jmp
and
popa
xchg
in
lret
int3
mov
fwait
cmpsl
push
add
xchg
add
add
sti
shll
xchg
push
lods
mov
aad
nop
dec
int
xor
enter
cmp
pop
mov
mov
mov
stos
and
sub
jge
shrl
xchg
call
loopne
adc
mov
in
push
push
xchg
lods
xchg
sub
pop
jnp
jg
xor
scas
stos
xor
cli
push
lds
mov
xorb
inc
sbb
rolb
je
cmp
push
fldl2t
aaa
in
mov
mov
and
and
mov
lret
jne
xor
add
jo
fs
sbb
mov
mov
sub
insb
lea
mov
lock
push
mov
adc
jecxz
sub
add
push
cmpsb
scas
add
insl
sbb
hlt
testl
jbe
and
int3
xlat
stc
mov
rcrb
fimull
add
in
in
lods
dec
xchg
aas
mov
rolb
fwait
inc
pop
sbb
lahf
dec
jne
in
mov
mov
inc
cmc
shrb
adc
pop
xor
sti
cwtl
stc
mov
test
mov
adcb
or
or
movsl
xlat
mov
les
lods
pop
cwtl
fldl
aas
xchg
sbb
push
jmp
mov
test
pop
or
xchg
push
stos
fsts
sbb
push
jnp
xchg
add
sbb
lock
or
std
mov
mov
ljmp
cltd
orb
inc
sub
test
insl
popf
in
sbb
push
add
jge
inc
shl
dec
clc
int
dec
mov
mov
xchg
sub
out
dec
imul
movsl
aam
lret
dec
jp
jp
cmp
inc
jl
xor
mov
sbb
xchg
mov
jl
ds
mov
mov
outsl
out
call
fsub
popa
or
mov
sbb
add
daa
dec
mov
cld
inc
adc
add
inc
pop
hlt
hlt
and
inc
pushf
inc
int3
cmpl
sahf
pop
lods
adc
cld
dec
xchg
dec
add
or
sub
add
push
and
dec
xchg
inc
sbb
or
dec
mov
mov
fldenv
lock
ljmp
scas
scas
int3
lea
into
int
lock
sarb
sbb
lods
movsl
jmp
jae
ja
and
xchg
cmp
mov
pop
push
lcall
mov
mov
xchg
rcrb
pop
hlt
add
xor
xor
stos
fiaddl
test
and
sub
fcoml
ficomps
add
js
dec
mov
mov
sbb
mov
mov
movsb
xor
cmp
add
fildll
call
add
mov
iret
icebp
shlb
mov
aad
fimuls
imul
lcall
pop
fsubrl
scas
sbb
sbb
movsl
add
mov
popf
outsb
lods
cmp
and
or
lods
mov
nop
ljmp
loop
mov
push
mov
lea
add
mov
push
or
stc
sbb
lods
sbb
cltd
lds
lret
ja
xchg
mov
fwait
pop
and
mov
testb
cld
sahf
lods
pop
rorb
pop
jne
in
add
and
inc
add
out
mov
ret
imul
sbbl
inc
mov
lods
add
pop
in
mov
adc
cmp
add
xchg
js
sub
rorb
adc
adc
imul
mov
outsb
in
cmp
scas
xor
or
mov
out
daa
cltd
pop
sub
out
aas
sbb
and
lret
test
xor
mov
mov
in
dec
fisttpl
int3
movsl
push
stos
xlat
and
mov
sub
scas
stos
rcl
or
jno
push
sub
mov
mov
inc
lcall
dec
and
push
pop
aam
fwait
jecxz
xor
mov
jecxz
and
mov
outsb
lods
adc
jecxz
push
imull
push
xchg
pop
loope
and
clc
dec
rorl
inc
loope
daa
sub
rclb
pop
jle
aas
sub
adc
daa
jmp
mov
adc
loope
pop
mov
imul
das
aam
pop
inc
data16
stos
int
into
mov
sahf
mov
xlat
lds
movsb
lcall
je
hlt
shll
lea
inc
mov
mov
stos
or
fisubl
ja
mov
adc
test
add
jle
pop
jo
push
aaa
mov
pop
roll
popf
scas
dec
les
add
rcrb
mov
push
sub
or
movl
xor
xchg
fwait
mov
sub
aam
mov
outsl
pop
fdivl
sbb
adc
pop
pushf
cmp
and
mov
mov
adc
sti
lahf
mov
mov
ret
aaa
cmpsl
je
mov
mov
and
adc
and
mul
loope
mov
jle
test
daa
lds
mov
sbb
outsl
or
cmpsb
dec
repnz
xchg
push
icebp
sbb
pop
outsb
cmp
inc
dec
xchg
fptan
lods
mov
sub
rdtsc
roll
dec
das
mov
fwait
mov
pushf
fidivs
add
fcmovnu
ljmp
mov
lock
jecxz
bound
ror
sbb
inc
pushl
lret
scas
sbb
push
daa
xchg
sbb
xorl
fmull
les
jp
out
lret
mov
divl
stos
dec
cs
sub
or
dec
mov
stos
aad
pop
mov
cmp
out
or
mov
test
insb
push
insb
stos
adc
out
pushf
imul
pop
xchg
jbe
stos
sti
and
leave
mov
pop
pop
insl
sbb
insb
fisubs
repz
cs
xchg
or
add
enter
ja
mov
push
iret
mov
ret
lds
mov
and
push
and
jp
mov
mov
mov
mov
add
std
dec
mov
xchg
xchg
test
lea
xchg
fidivl
cmp
inc
arpl
jle
xlat
js
outsl
push
sub
sbb
cmp
add
cmc
loope
add
mov
es
stc
ffreep
cwtl
aad
mov
or
out
cli
test
movsl
push
test
out
hlt
push
add
rclb
fwait
adc
or
stos
nop
jno
adc
in
lds
inc
movsb
pop
stos
add
iret
hlt
fbld
cmp
jp
lods
lds
mov
xchg
mov
pop
in
jg
out
pop
mov
mov
mov
aad
out
lds
pop
in
fwait
int
inc
fstps
cmp
push
lret
loop
mov
scas
in
movsl
pop
inc
or
add
es
ds
mov
xchg
xor
dec
push
leave
leave
fadds
dec
popl
out
fwait
jle
pop
jp
lods
clc
enter
fisubl
outsb
imul
sub
cmp
inc
ficompl
fwait
scas
xlat
mov
mov
mov
insl
push
dec
xor
aas
test
fiadds
adc
mov
add
mov
scas
fwait
fstps
mov
sbb
test
inc
xchg
jnp
mov
mov
jne
ret
fcmove
mov
inc
out
je
pop
lahf
xchg
lds
loopne
xchg
mov
adc
sbb
jmp
lock
ss
gs
int3
lea
xor
or
cwtl
mov
dec
test
fcmovnb
daa
jbe
roll
ret
shll
insl
or
xor
pop
test
mov
imul
addr16
scas
loop
fisttpll
mov
stos
into
push
xchg
xchg
or
pop
fcompl
daa
in
lods
ficoms
adc
data16
lret
fidivrs
lods
pop
jno
aam
add
dec
scas
dec
nop
xor
xorl
push
fadd
adc
fs
add
into
popf
pop
popf
lret
pushf
data16
cmpsb
fmul
daa
xchg
daa
mov
ljmp
mov
mov
inc
inc
push
sub
sub
fcmovne
call
ret
pop
pusha
sti
mov
or
out
adc
int3
inc
mov
cli
stos
jl
into
xchg
fidivrl
popa
or
cmp
loop
xchg
aas
clc
add
push
mov
xchg
lret
cmpl
cmp
inc
jg
sub
cwtl
pop
dec
sahf
inc
inc
cs
movsl
and
fcmovbe
mov
pop
mov
rcl
insl
test
mov
lock
aas
mov
arpl
lahf
aad
cmp
lret
subb
and
fstpt
mov
pop
and
paddsw
nop
sbb
imul
int3
or
add
scas
enter
hlt
test
cmpsl
mov
ret
mov
sbb
ss
in
imul
loope
outsb
stos
lds
jl
test
push
in
in
push
cmpsb
sbb
ljmp
jne
adc
inc
imul
mov
lds
aas
mov
popa
push
pop
sub
cwtl
lds
inc
sbb
leave
in
jmp
int3
sub
adc
inc
sbb
push
xchg
popf
or
pop
push
and
cld
test
cmpsl
xchg
add
movsl
xor
mov
sub
and
inc
lds
cwtl
movsl
adc
cmp
jae
fldl
int
ss
cmpsl
lock
shl
push
jbe
incb
stos
mov
and
lds
cltd
insl
mov
and
movsl
sti
mov
shlb
lret
pop
mov
dec
push
div
test
hlt
xlat
add
cmp
add
lds
dec
pop
aas
jp
or
jecxz
lds
and
addb
mov
loop
pop
jp
dec
adc
les
ja
xlat
and
or
push
inc
leave
neg
xchg
cmpsl
inc
mov
and
rorb
jle
movsb
mov
push
sahf
jae
daa
mov
add
lret
mov
pop
not
jnp
jp
dec
pushf
leave
cmc
out
sbb
xchg
sbb
or
dec
add
into
lods
or
lock
out
xchg
in
inc
hlt
sbb
imul
mov
mov
mov
mov
loopne
dec
enter
mov
stos
push
mov
push
xchg
pop
ljmp
and
stos
lret
xor
sub
stos
mov
sub
mov
hlt
xor
js
mov
sbb
xchg
fwait
mov
xchg
adc
jl
adc
stos
and
rcrl
outsb
sbb
inc
int
mov
test
jno
scas
adc
xchg
sub
nop
fwait
outsb
mov
lret
popf
lds
add
in
push
mov
into
push
js
dec
sub
sbb
movl
adc
push
pop
mov
ficomps
jl
stos
sub
hlt
pop
push
ss
xor
in
cwtl
mov
adc
lret
fwait
std
je
mov
xchg
outsl
mov
fcoms
cld
jne
jge
xor
lds
bnd
push
jecxz
inc
sub
inc
pushf
and
cltd
or
sbb
das
xchg
shrl
cmpsb
mov
push
mov
rorb
mov
lds
call
aam
pushf
pop
ret
in
lret
pop
jg
sub
push
cmpsb
cmp
and
pop
lods
cmp
cwtl
das
jae
add
aam
xor
clc
lock
pushf
xlat
int
loop
nop
stos
lds
std
mov
push
pop
pop
enter
xchg
lods
mov
add
lret
sbb
push
xchg
pop
lret
es
int
sbb
stos
in
dec
imulb
int
icebp
in
push
out
cmp
add
xchg
inc
pop
add
push
xchg
aas
mov
dec
ficompl
sahf
mov
mov
adc
jl
insl
mov
insb
in
test
mov
xchg
jg
jne
aad
aas
dec
outsb
ret
fld
aad
aas
daa
lds
jle
cmpsl
jno
ja
invd
pushf
pop
out
push
mov
das
scas
nop
add
mov
stos
shrl
adc
sbb
test
dec
mov
cmp
push
sub
jmp
sub
adc
xor
push
movsl
xchg
pop
movsl
and
in
leave
xor
popf
mov
dec
mov
cmp
cmpsb
fnsave
into
dec
in
movsl
mov
les
xor
xchg
jne
or
add
stos
dec
hlt
movsb
test
jb
mov
call
mov
mov
rorl
add
sub
and
jae
test
adc
dec
or
mov
adc
pop
in
test
mov
in
mov
jl
or
ja
mov
insb
movsl
jl
jae
cmp
or
outsb
out
das
mov
test
rorb
cltd
inc
sub
and
out
es
dec
adc
xlat
push
mov
xor
adc
add
out
dec
xor
and
sbb
or
aas
xor
xchg
sub
arpl
xchg
mov
lret
idiv
movsl
out
mov
movsl
ljmp
hlt
stos
sti
sbb
inc
std
call
dec
jmp
add
dec
mov
push
test
cltd
sub
cs
cmpsl
pop
add
mov
jmp
ret
cmp
inc
cltd
lods
lds
add
ss
fimuls
cltd
adc
outsl
mov
femms
pop
or
aad
sbb
dec
dec
pop
jb
mov
popf
and
stos
rcll
out
inc
bound
icebp
mov
in
xchg
ja
jns
sbb
pop
xor
adc
or
cmp
jecxz
xchg
movsl
push
and
dec
ljmp
mov
lods
cmp
or
fwait
add
pushf
adc
mov
shrb
insl
popf
ja
outsb
xlat
out
lahf
cmc
mov
lea
out
jo
push
jmp
in
pop
int
shll
xor
mul
les
mov
ficomps
lds
fdivrl
jle
pop
movsl
in
in
ret
cmc
push
pushf
stos
sub
mov
dec
aas
jnp
xchg
sbbb
enter
call
mov
xor
add
push
mov
in
mov
mov
lock
mov
ljmp
aaa
repz
inc
hlt
fcomps
loop
fdiv
mov
adc
sti
popa
lds
cmpsb
fadds
outsb
jne
scas
test
aad
cmp
xchg
sahf
cmp
dec
lahf
xchg
jno
pop
inc
cmp
jmp
sti
iret
push
nop
movsb
push
pop
xor
jb
lcall
bound
xchg
jmp
es
stos
aad
mov
cmp
pop
movsl
inc
mov
push
call
and
mov
cwtl
and
or
lock
hlt
cld
cwtl
in
testl
test
into
push
jno
pop
test
push
stos
cmp
add
push
add
in
xor
nop
lahf
movsl
insb
or
scas
mov
pop
mov
lods
add
pushf
inc
mov
sbb
mov
inc
dec
sbb
mov
mov
mov
inc
lods
lds
lret
mov
imul
fldt
in
scas
ja
sbb
cmc
daa
insb
imul
out
pop
push
iret
sbb
aaa
lds
in
int
lahf
cs
push
movsl
mov
cmpsl
lds
lock
mov
xchg
adc
mov
addr16
xchg
int
filds
sub
mov
jne
negb
xlat
inc
lds
inc
xchg
gs
or
sub
lock
scas
popa
mov
test
jl
movsl
mov
jno
call
pop
inc
pusha
mov
dec
pop
and
jge
mov
mov
sahf
lods
push
ret
movsl
test
inc
or
or
mov
sbb
in
mov
mov
js
mov
lods
int
dec
call
inc
aaa
outsl
mov
cmpb
sahf
dec
cmp
lds
rolb
cmp
sbb
mov
inc
push
into
outsb
mov
scas
sbb
xchg
nop
lods
clc
sbb
outsb
pop
nop
ss
jne
and
sub
dec
add
inc
lock
insb
inc
daa
outsb
xor
gs
rol
inc
lods
mov
mov
mov
cmc
adc
mov
jbe
push
mov
sbb
leave
pop
xchg
pushf
push
inc
sbb
in
jb
not
ja
sbb
xchg
shlb
shll
je
out
mov
scas
fisttpl
pop
inc
mov
push
xchg
pop
mov
and
push
xorl
insb
mov
aas
xchg
xchg
jecxz
stos
fstpl
idivl
call
test
stos
daa
fdivl
pop
pop
test
sbb
mov
push
rolb
lret
dec
or
fwait
mov
int
insl
clc
test
cmp
and
es
jns
sbb
cmc
hlt
pop
jnp
adcb
xchg
js
sub
sub
insb
mov
mov
lock
add
ljmp
sub
xor
dec
in
adc
int
mov
mov
xchg
decb
cmp
jle
cmp
push
adc
test
imull
push
in
shlb
lcall
scas
mov
cld
xor
mov
pop
mov
or
test
out
lret
or
movsb
sbb
stos
jno
dec
mov
std
in
rorb
cltd
dec
sti
outsb
add
mov
adc
outsl
dec
jl
sub
cli
lods
fwait
xor
or
adc
dec
push
sbb
kmovb
add
gs
enter
and
mov
jp
add
lret
pop
ret
movsl
pop
imul
fdivrl
lock
jg
mov
jns
xchg
lahf
cltd
jae
pushf
adc
je
pop
dec
outsb
ja
cltd
aad
pop
cmpsb
insl
add
imul
fsubs
out
xlat
inc
jp
jne
mov
jmp
xlat
jmp
dec
mov
mov
xchg
xor
push
out
sbb
cmp
mov
orb
fwait
lret
dec
loope
dec
pusha
leave
mov
sahf
repnz
in
nop
pop
inc
xorb
lcall
movsl
jg
jge
adc
dec
lods
shll
jne
mov
adc
mov
jb
or
cmpsb
in
push
or
mov
adc
xlat
out
pop
sahf
pop
test
adc
daa
add
js
or
jp
scas
pop
jae
jne
out
sub
add
lods
xchg
cmc
cmpb
add
jno
cmpsb
stos
inc
add
jmp
cmpsl
dec
lds
roll
push
mov
xor
xor
imul
std
add
jo
mov
jmp
mov
movsl
jl
sbb
mov
adc
cmp
das
mov
pop
mov
sbb
adc
add
jecxz
bnd
xchg
mov
mov
cmp
cld
push
mov
ss
sub
adc
sub
adc
or
mov
add
mov
xor
and
vandpd
add
in
test
hlt
leave
mov
scas
lds
mov
and
fwait
pop
hlt
lret
inc
movsl
btc
jo
sub
lret
mov
cmpsl
or
fsubl
dec
shll
xchg
add
mov
shll
mov
or
jne
fists
ja
pop
add
lea
cmp
or
adc
gs
dec
mov
push
imul
sbb
movsl
in
lret
mov
shlb
xchg
test
aam
lea
aaa
aaa
loopne
mov
aad
push
push
pop
mov
xchg
add
scas
fmulp
lea
dec
imul
mov
pop
es
mov
in
fwait
sbb
pop
outsb
mov
dec
clc
mov
stos
pop
xor
divb
test
imul
sbb
mov
icebp
fs
and
lods
imul
inc
mov
fwait
xchg
movsl
adc
sub
jb
es
cltd
test
stos
mov
sti
rorl
aas
xchg
lret
push
ret
imul
sub
sbb
xchg
sub
add
mov
cmp
das
adc
lret
inc
pusha
jmp
xchg
inc
jb
mov
cmp
cmpsb
dec
aaa
imul
adc
or
cmp
pop
mov
pop
add
ja
fs
dec
scas
into
sbb
lea
sbb
rcrl
ja
cli
xchg
or
sbb
hlt
sbbb
jae
mov
sub
movsl
xor
mov
sub
jecxz
lds
pop
adc
dec
or
push
mov
cwtl
xlat
divb
ljmp
aaa
sbbl
and
mov
incl
xorb
lret
adc
sbb
popf
mov
mov
sarb
loopne
jecxz
xchg
mov
jno
fwait
outsl
int
mov
or
dec
push
or
mov
lds
sar
dec
mov
dec
pushl
xchg
sub
xchg
and
xchg
push
stos
repz
jl
add
int3
jmp
xchg
rclb
sub
je
xchg
mov
adc
push
ja
push
aad
sub
loop
out
and
xchg
jle
mov
repz
lahf
aam
and
hlt
xchg
pusha
pop
xor
and
jl
ret
xor
xchg
daa
scas
icebp
insl
xchg
add
dec
add
or
push
add
sbb
sbb
pop
shrl
cwtl
jecxz
cli
cmp
mov
pop
imul
lcall
xchg
adc
pop
adc
outsl
or
mov
outsb
lods
add
stos
mov
adc
sub
fsubs
jo
pop
mov
stc
ret
mov
in
mov
sbb
jnp
jae
repz
shll
cmp
adc
aam
and
pusha
and
lds
add
sub
mov
repnz
pusha
pop
rcll
ja
jecxz
dec
rorb
addr16
jo
nop
mov
mov
mov
daa
fisttpll
aas
jne
dec
sub
and
repz
ret
lds
cmp
push
bswap
inc
push
mov
insl
idiv
push
popf
mov
movsl
mov
pop
cmp
mov
adc
sbb
xlat
dec
dec
or
call
dec
outsb
sbb
and
inc
out
lret
icebp
cmp
fistps
mov
xchg
sbb
popf
dec
sbb
mov
xchg
fcoms
mov
or
in
loop
jmp
loopne
jecxz
or
jne
cmp
adc
sub
fcomi
lds
xor
mov
fwait
test
xchg
mov
cvtdq2ps
test
mov
ret
rorb
shll
lds
shlb
xor
aas
in
das
and
in
push
pop
adc
inc
js
nop
and
xchg
ret
pop
lods
pop
test
inc
push
faddl
cwtl
lds
repnz
jne,pn
inc
imull
xchg
cmp
scas
or
addr16
adc
lea
hlt
xchg
mov
aam
pop
mov
and
and
push
das
addr16
lock
add
jle
jl
push
cmp
call
xor
lea
mov
inc
mov
rcrl
sbb
add
lds
test
inc
out
jg
xor
push
xlat
in
lock
xchg
gs
imulb
xchg
xor
xchg
mov
sbb
in
test
imul
xchg
push
les
fiaddl
scas
and
mov
sti
adc
or
nop
push
movsl
in
negl
pusha
xchg
cmp
xchg
dec
mov
mov
stos
rorl
jmp
dec
inc
les
scas
dec
lods
add
ret
pop
subb
adc
mov
mov
daa
fwait
xchg
sahf
movsl
jle
and
jg
xchg
sahf
test
mov
jmp
fsubrs
std
std
jecxz
jae
xchg
movsb
hlt
inc
pop
add
dec
jnp
push
leave
pop
pop
pop
int
xchg
imul
movsl
inc
dec
cmp
gs
jg
outsb
and
mov
inc
loope
xor
std
fld
scas
mov
xor
sub
or
sub
subb
push
or
imul
inc
fdivrs
mov
fcmovu
sahf
into
daa
frstor
add
movsl
mov
lret
addr16
aad
jo
call
lock
hlt
xchg
add
and
xchg
xchg
mov
and
add
adc
dec
daa
xor
pop
int
movsb
xchg
jbe
ret
and
xchg
fbld
push
mov
sbb
cmpb
shll
jg
dec
pop
scas
jecxz
push
push
pop
out
jle
xchg
xchg
xchg
sub
inc
jno
ficompl
push
adc
add
cmp
and
or
sub
mov
jo
insl
iret
dec
sub
femms
pop
lea
xchg
cmp
mov
inc
add
mov
sub
push
repnz
adc
sbb
adc
mov
inc
cmp
or
mov
and
or
jecxz
insl
pop
rorb
les
cltd
leave
add
neg
dec
subb
dec
mov
cli
mov
xor
sahf
or
in
incb
add
sub
and
adc
pop
sbb
inc
mov
cmpsl
lods
and
add
mov
jne
jp
xor
xor
ja
add
cmp
movsl
pop
int
pop
rcrb
lods
fs
movsl
fimuls
xchg
inc
int
and
lahf
or
out
lds
shll
cmp
cld
imul
mov
push
pop
scas
insb
add
or
mov
mov
ud2
popf
mov
sbb
push
daa
pop
or
dec
sbb
jp
idiv
sbb
repz
scas
in
push
mov
cmp
cmpsl
xlat
cmpsl
jbe
daa
lds
aad
mulb
push
sahf
push
out
mov
adc
mov
subl
hlt
xor
mov
sbb
rcrb
stos
test
stos
movsl
push
cmpsb
aaa
mov
and
lods
and
fwait
nop
jno
imul
fcom
daa
pushf
sahf
orb
pop
xor
xor
mov
mov
fstpt
mov
popf
and
es
inc
jp
and
inc
fcmovne
mov
imul
xor
andb
stc
test
daa
mov
dec
movsb
jle
add
jne
pop
xchg
pop
int
pop
dec
sbb
push
sub
hlt
sbb
sbb
push
cltd
pop
or
outsb
mov
loopne
add
clc
mov
xchg
push
out
stos
in
adc
xchg
decb
jbe
cmpsl
cld
vmovupd
iret
sbb
add
pop
mov
enter
jle
mov
or
inc
adc
pop
pop
popa
mov
imull
nop
add
jl
imul
mov
sub
fcom
and
sbb
fs
push
pushf
outsb
sub
cmp
sub
outsl
or
leave
cmp
inc
loop
mov
repnz
imul
insb
addr16
outsb
jle
jecxz
push
pop
sbb
sti
lods
adc
add
pusha
jae
fildl
mov
sub
lds
xchg
mov
pop
hlt
lea
adc
pop
sub
add
icebp
jmp
lcall
bound
pop
frstor
mov
ss
mov
incl
cli
pop
jecxz
xor
jae
lds
sbb
jg
mov
fistps
cli
dec
sbb
rcll
out
push
in
pop
in
inc
pop
sub
sub
loop
rcr
mov
xor
fsubrl
sub
inc
rcl
mov
fnstsw
mov
in
incb
jmp
movsl
out
jne
push
mov
xor
arpl
outsb
dec
sub
mov
lea
mov
push
lods
mov
inc
jb
fldt
or
sbb
scas
mov
add
sahf
sbb
sbb
pop
pop
ror
fidivrs
ljmp
sahf
ret
push
mov
nop
movsl
in
iret
push
add
mov
sub
sub
push
lods
mov
push
mov
mov
xor
cmp
aaa
enter
ljmp
jl
movsl
addr16
rcr
xchg
or
jle
in
pop
mov
jecxz
cwtl
pop
lods
mov
dec
xor
in
hlt
mov
pop
dec
aas
popa
mov
or
addr16
pop
es
push
push
mov
xor
div
lds
inc
mov
popf
ss
fnstcw
push
fnstcw
mov
shlb
inc
lods
mov
ret
je
push
xor
add
pop
inc
sbb
cwtl
mov
cltd
outsb
add
mov
pop
cmpb
movsl
xchg
pop
not
leave
mov
cltd
clc
pop
iret
or
mov
sbb
and
add
mov
push
mov
xor
outsb
sub
imul
push
mov
incb
in
add
pop
fnstsw
lods
lods
stc
sbb
add
sbb
mov
hlt
lds
jp
std
jl
inc
hlt
outsl
fistps
mov
pop
cwtl
lds
gs
add
adc
mov
sbbb
das
mov
mov
pop
out
xchg
aas
jo
in
sub
cmc
stc
xchg
push
lds
dec
mov
xchg
std
shrb
mov
lcall
mov
push
pop
outsb
dec
cmp
shrl
sub
or
inc
loop
lret
mov
cmp
lds
cmp
sbbl
int
les
fwait
pop
mov
dec
inc
enter
push
or
sti
xor
dec
les
ss
insl
jg
cmp
lahf
sub
mov
push
cmpb
cwtl
dec
xchg
in
inc
lret
push
push
and
hlt
xchg
pop
movsb
bound
add
mov
das
orl
outsl
outsb
xor
fstpl
int3
int
call
call
cmp
fmulp
lret
sbb
movsl
stos
inc
arpl
insl
inc
xchg
adc
adc
and
mov
cwtl
fldenv
xchg
das
aad
and
jae
jg
mov
mov
cmp
stc
cmp
or
dec
xchg
sbb
je
mov
test
pop
or
inc
xor
shlb
dec
mov
les
push
daa
mov
lods
adc
mov
ucomiss
push
shrd
mov
inc
popa
mov
and
insl
dec
dec
inc
rcrl
fidivrs
xchg
xor
pop
sti
stos
mov
into
push
ja
sahf
xchg
imul
push
daa
stos
fcompl
push
je
into
mov
aam
cmp
in
stc
into
xchg
mov
inc
movsl
mov
inc
fwait
loope
mov
mov
ss
cmp
sub
clc
insl
inc
or
mov
mov
movsl
dec
ja
ret
lret
cmpl
iret
into
test
test
mov
dec
mov
std
call
xchg
ffree
pop
into
test
sbbl
cmpsl
lods
and
push
sub
movsb
fcompl
fbld
repz
fwait
xlat
arpl
and
int
mov
lods
sbbl
sti
pop
jmp
sarl
xchg
mov
and
or
sti
addb
sub
push
fisubs
adc
repz
dec
fidivrl
lea
pushf
lds
dec
test
in
in
mov
scas
inc
inc
sub
lahf
in
inc
test
pop
insl
pop
cmc
cmpsl
addr16
fwait
pop
and
mov
jnp
dec
lods
mov
sti
add
mov
cmp
jo
inc
insl
lods
add
ja
mov
cmp
push
fildll
and
test
imul
xchg
stos
movsl
cmc
cli
mov
aad
push
nop
insl
pop
flds
sarb
scas
stos
fmuls
hlt
adc
mov
cmpsl
add
inc
fnsave
lcall
mov
add
sub
leave
cmp
or
pop
les
fcomps
push
lds
mov
and
shll
adc
popa
stos
mov
dec
mov
call
add
push
sub
mov
mov
mov
vpinsrw
add
into
sub
insb
inc
lods
popa
movsl
insb
out
mov
in
jb
movsl
sbb
fsubrp
inc
mov
pop
inc
pop
inc
sub
cli
add
inc
hlt
cmp
lods
das
pop
mov
mov
mov
sbb
jmp
lods
test
mov
dec
mov
out
lds
sbb
loope
jno
ret
leave
in
stos
push
testb
xor
inc
push
cmp
jle
fsubrs
icebp
sub
aas
add
imul
pop
js
inc
xchg
inc
mov
and
lods
mov
push
add
and
xor
add
pop
lds
mov
in
mov
add
pop
inc
int3
ja
pushl
aas
stc
in
push
xor
pop
addr16
jnp
dec
mov
and
lds
insb
push
popf
mov
pop
lds
addl
push
or
cmp
xchg
push
je
mov
nop
cs
popf
aad
cmpsb
mov
jno
filds
sbb
jb
repz
popa
jmp
js
sub
and
add
rcl
ss
dec
lea
lahf
jns
cmpsl
dec
scas
add
jne
dec
mov
sub
pop
inc
mov
xchg
xchg
adc
nop
jl
pop
rorb
jmp
psrlw
adc
cmpsl
movsb
dec
pop
jmp
js
int
mov
push
out
cmp
in
and
leave
jle
lds
sbb
xor
sub
insl
in
jae
dec
int
mov
xchg
mov
fwait
push
pop
call
popf
push
pop
add
jne
movsb
adc
mov
fdivrp
mov
mov
and
fsub
movlps
mov
xlat
sub
rcr
xchg
cltd
inc
mov
lods
mov
pop
lods
cs
mov
sub
insb
sbb
jae
and
cmc
in
cmp
lea
sbb
mov
xchg
cmp
int3
cltd
xchg
xor
adc
fstl
repnz
xchg
in
sub
cltd
roll
test
lahf
lret
scas
cwtl
xchg
jle
mov
aam
loopne
mov
sbb
outsl
xlat
cmp
cwtl
dec
out
inc
pop
mov
xchg
lds
fimull
cmp
or
imul
adc
add
lock
les
pop
jmp
sti
rclb
mov
test
cmp
xlat
scas
fnstenv
addr16
test
sti
mov
lds
mov
lea
dec
addr16
inc
stos
hlt
adc
mov
mov
imul
std
inc
imul
dec
imul
mov
scas
push
rcl
ror
jecxz
pop
cmc
mov
pop
daa
mov
pop
sbb
lret
lods
and
pop
jle
aaa
sub
inc
sarb
xchg
shrl
add
imul
mov
movsl
adc
scas
lds
push
sbb
push
pop
dec
frstor
je
stc
and
je
cmp
cmp
aaa
pop
inc
xchg
aas
stc
hlt
lcall
mov
mov
in
and
sub
filds
jae
shrl
and
mov
js
adc
lcall
rol
loopne
or
daa
in
add
lock
icebp
add
les
outsb
shll
push
push
setp
mov
push
jne
das
scas
pop
xchg
js
mov
and
nop
loope
notb
inc
ss
pushf
lods
aam
and
mov
xchg
xlat
ja
sub
test
mov
call
xor
test
mov
aas
xlat
in
int3
push
fistpll
outsl
jb
pop
adc
leave
int3
rclb
faddl
push
repz
pop
sbb
out
addb
fwait
and
enter
data16
xchg
stc
scas
add
xor
mov
das
add
or
addb
xorl
into
adc
xor
sub
and
and
movsb
mov
jecxz
jle
insb
cmpsl
fcmovb
rcrb
dec
insb
xchg
movsl
push
jno
xchg
negl
dec
ljmp
test
in
sub
add
jno
sub
shlb
xchg
cmp
mov
add
jecxz
lods
insl
imulb
cmp
adc
add
aam
and
addb
incb
fcompl
in
add
and
lret
popa
sbb
pushf
xor
adc
cwtl
mov
inc
mov
push
cmpsl
addr16
outsl
push
xchg
inc
inc
dec
lcall
and
stos
mov
sbb
add
cli
dec
repz
fwait
cmpl
movsb
nop
aaa
dec
scas
sbb
daa
jno
xor
lds
pop
cltd
mov
pop
in
push
and
push
mov
sbb
cmp
add
movsb
add
sahf
xlat
add
sar
int
scas
xor
ss
pop
adc
pop
sbb
add
lock
push
mov
push
cltd
bound
push
xorb
cmp
hlt
pushf
sbb
movsb
mov
xor
out
scas
aaa
and
daa
push
iret
pusha
rcll
mov
jle
scas
mov
sbb
lea
sub
cmpsl
xchg
loope
mov
ret
in
sbbl
lods
add
mov
cld
stos
sub
push
pop
sarl
xchg
jo
shl
out
scas
stc
fdivl
cmc
sub
lea
test
xor
mov
ljmp
xchg
test
in
popf
mov
lods
dec
cmpsl
mov
mov
mov
incb
dec
repnz
xor
mov
jmp
pop
pop
dec
cmpsl
dec
dec
in
int3
ss
inc
mov
into
out
xlat
sub
and
inc
daa
push
and
cmp
xorl
xchg
ja
mov
add
movsl
shlb
jge
outsb
out
ss
cwtl
or
inc
dec
sub
push
inc
clc
aas
scas
ss
mov
add
or
mov
sub
lods
clc
repz
testb
sbb
mov
xchg
fs
xchg
sbb
jl
insb
fdivr
jbe
clc
fstl
das
cltd
fisubrl
test
mov
std
xor
in
fisttps
lds
mov
sbbb
jp
shrd
dec
out
in
adc
shr
inc
jno
cmpsl
dec
lds
js
pop
stc
aam
ss
popf
adc
xchg
cmpsb
ficompl
xchg
dec
pop
sarl
inc
mov
sub
cmp
dec
mov
and
nop
ficomps
aam
or
dec
popa
outsb
jno
add
int
jle
jnp
lret
cltd
mov
lods
mov
iret
add
lea
jb
iret
shrl
cld
cmc
sbbb
testb
jnp
inc
sbb
push
imul
xchg
mov
xchg
inc
mov
sti
xchg
scas
lea
in
out
scas
stc
sub
pop
sbb
adc
or
xor
mov
or
mov
pushf
xor
xchg
mov
addb
cmp
cmp
push
jns
dec
loopne
pop
xchg
cmpb
xchg
push
jae
roll
pop
movsw
aas
mov
cmp
jmp
cmp
mov
sub
pop
push
xchg
cmc
js
in
loop
or
inc
popf
lahf
mov
jge
lods
mov
lock
xchg
push
inc
fldl
out
jae
inc
into
pop
mov
adc
mov
sub
aas
nop
xor
aam
lahf
call
pop
add
and
stos
in
arpl
repnz
xchg
int
dec
sub
cs
xor
mov
mov
jno
jmp
xchg
mov
push
xor
loopne
lcall
shll
dec
test
inc
jne
movsl
or
test
ja
mov
imul
jmp
jo
mov
test
cmp
jnp
xchg
int
ret
nop
jne
sbb
xchg
pop
fstpt
inc
or
jge
inc
pop
fdivp
rcrb
addr16
shrl
jo
mov
andb
cmpsl
cld
xorb
push
jno
mov
cmpsl
cmp
mov
shlb
negb
cmp
shll
mov
mov
push
fisubrl
stc
xor
sub
loopne
cld
inc
shrl
test
in
bound
jmp
push
inc
popf
mov
xor
fbstp
rolb
ja
adc
std
in
hlt
adc
sbb
out
repnz
leave
xlat
inc
movsb
das
mov
lods
adc
pop
enter
mov
sbb
les
dec
mov
mov
lods
mov
scas
or
ret
add
in
adc
xchg
add
cmpsl
adc
fdivrs
pop
mov
ja
cltd
xchg
xchg
adc
shrl
mov
or
inc
cmp
cld
pop
sbb
scas
push
fwait
push
loop
jbe
das
loop
test
ds
cmp
das
hlt
jmp
sub
inc
lcall
ja
ret
mov
in
lds
inc
orb
xor
pop
jmp
add
push
pop
bound
dec
scas
dec
jns
dec
mov
imul
xchg
lret
ja
iret
mov
inc
mov
arpl
and
lods
mov
movsl
and
jl
push
mov
xchg
ss
adc
mov
pop
fmull
jns
mov
pop
sbb
les
lret
ficompl
pusha
rdtsc
mov
or
cmp
xor
xchg
lret
inc
int
and
sub
mov
mov
scas
jne
outsl
movsl
and
movsl
scas
mov
xor
pop
push
movsl
sbb
mov
push
xor
hlt
cmpsl
and
cmpb
sahf
sbb
out
in
or
xchg
sbb
mov
ds
cli
inc
sbb
lods
sbb
pushf
fwait
les
push
fmull
std
movsb
imul
add
in
and
outsb
and
inc
sub
dec
cmpsb
cltd
push
or
ds
jns
jns
test
sbbb
call
dec
sub
popl
or
cmp
xchg
cwtl
mov
daa
inc
fwait
push
fcmovnb
shll
int
cmpsb
xchg
aas
inc
mov
hlt
mov
pop
div
xlat
loope
insl
push
push
aad
push
in
add
cli
sbb
or
int
fcoms
das
in
fwait
mov
dec
mov
mov
orl
dec
imul
ficompl
push
adc
ficomps
enter
inc
push
sbb
iret
repnz
popf
dec
sub
jl
cmp
pop
or
sbb
outsb
leave
sbb
cmpsb
push
dec
mov
push
sbb
int
xor
lds
push
xchg
out
lods
movsl
popf
rcl
shll
mov
fstps
mov
sbb
pusha
push
and
cmovns
mov
lods
lret
into
jl
sub
inc
int3
push
mov
ret
jo
and
and
test
cmc
cmp
aam
out
sub
mov
int3
pop
xchg
in
add
inc
pop
test
push
dec
push
adc
lods
lahf
add
into
dec
arpl
adc
pop
jb
and
cmp
cmpsl
fisubrl
push
cs
xchg
in
int3
notl
inc
popf
sbb
scas
jne
or
mov
push
xor
push
cwtl
mov
in
cmp
js
in
outsl
fsts
jo
stos
stc
repz
fwait
push
ss
mov
addr16
adc
cmc
mov
and
mov
pop
pop
addr16
inc
popf
xor
das
jg
xlat
mov
lods
jle
or
sub
add
mov
scas
aas
sub
outsl
enter
scas
mov
pop
insl
mov
push
xor
fmulp
mov
add
mov
inc
pop
adc
jnp
sbb
xchg
jmp
movsl
jbe
push
addl
mov
bound
sub
lods
insb
aas
lods
ljmp
push
repnz
cmp
sub
mov
mov
outsb
mov
cwtl
ret
push
into
inc
push
jmp
repnz
pushf
jecxz
ljmp
rorl
movsl
push
sub
mov
lcall
push
fildl
mov
push
mov
add
orl
sbb
mov
inc
fwait
pushf
cmp
inc
lret
movsl
jecxz
mov
stos
cmpsl
clc
xchg
cwtl
lock
movsl
inc
in
xor
or
iret
mov
lods
movsl
fldl
les
iret
jo
mov
push
add
mov
insl
lds
add
int
loopne
pushf
leave
aas
iret
cmp
cmp
out
pop
sbb
jne
fs
mov
fnsave
xor
mov
outsb
mov
mov
sub
xchg
add
mov
push
cmp
int
lcall
push
mov
mov
jl
push
daa
cmpsl
mov
mov
mov
sub
sub
push
loope
cs
push
test
scas
mov
jns
insl
inc
add
fidivrs
mov
mov
xchg
cli
ja
sar
cmc
sbb
xchg
jl
inc
enter
loope
test
add
je
lods
mov
or
in
push
movsb
xor
mov
insb
xchg
sub
add
xchg
negb
push
push
lret
lods
in
imul
xor
je
loop
scas
add
std
sub
xor
mov
rorl
cmp
outsl
lret
test
sahf
mov
vpcmpeqb
lahf
or
nop
dec
xchg
das
mov
into
scas
loopne
test
mov
ret
dec
lahf
aaa
scas
sub
movsl
add
insb
loope
xor
ds
test
pop
lock
out
add
adc
insb
ret
cwtl
jns
dec
comiss
aad
pop
cmp
leave
shlb
stc
mov
test
mov
fwait
test
push
mov
and
sub
repnz
lods
das
add
adc
jne
div
mov
jmp
fldl
rcl
push
mov
outsl
les
xorl
aas
lds
lret
inc
pop
add
xchg
dec
sahf
sarl
jg
ja
shlb
into
dec
add
call
arpl
or
sbb
lods
xor
aad
repz
push
dec
out
fucomi
mov
inc
jmp
or
jb
adcb
adc
inc
fwait
dec
and
push
mov
pop
mov
rorb
add
pushf
add
mov
or
fwait
push
inc
rcrb
pop
cmpps
xlat
pop
add
int3
dec
subb
sub
mov
and
push
dec
mov
xchg
sti
cmp
outsb
xor
add
lock
stc
add
mov
mov
lds
pop
cmp
fildl
pop
lds
movsb
enter
or
jge
lahf
mov
outsb
ljmp
jbe
mov
cmp
shll
mov
imul
ret
dec
xchg
subl
sti
out
mov
mov
movsl
inc
fnsave
test
fisubs
xchg
rorl
xchg
pop
jnp
mov
sbb
mov
ja
pop
aas
cwtl
adc
mov
jl
dec
scas
leavew
daa
insb
cmp
fadds
and
sbb
push
outsb
add
in
loop
pop
daa
mov
mov
push
enter
pop
add
test
shlb
cltd
call
inc
add
mov
adc
pop
lock
movsl
mov
mov
add
dec
out
pop
adc
lds
js
pushf
push
loope
mov
dec
movsl
mov
or
fwait
pop
add
sub
aad
je
jl,pn
mov
cmp
cmpsb
push
adc
mov
xor
mov
dec
addr16
jno
aad
inc
cmp
lahf
dec
add
int
arpl
shrl
xchg
in
loopne
ss
inc
add
xchg
nop
jne
aas
pop
test
frstor
xor
test
pop
in
push
cmp
lea
movsb
test
pop
setne
aaa
loop
pop
in
pop
gs
sub
test
inc
popf
enter
and
icebp
push
fdivs
imul
ja
mov
lods
stos
add
mov
xlat
push
sti
jmp
xor
dec
cltd
xchg
cs
mov
xor
sbb
inc
insb
fldl
cmp
mov
shlb
out
popa
int
pop
repnz
add
or
cld
mov
fs
orl
das
imul
mov
aad
cmp
into
std
mov
pop
inc
lret
sahf
mov
inc
inc
xchg
andl
mov
ja
pop
pop
lds
lock
pop
or
lods
dec
rcrl
negl
dec
repz
pop
mov
in
xor
jns
dec
les
andl
jns
inc
mov
call
loope
aas
into
push
xor
icebp
cmp
dec
cmpb
lahf
push
sbb
aad
push
cmc
jp
movsb
jne
adcl
daa
jmp
cmpsl
aam
sbb
shll
xor
push
movsl
mov
out
sub
adc
and
mov
stos
fldenv
vmovss
adc
or
cmp
sub
ret
mov
add
insl
movsb
and
arpl
push
in
sub
movsl
jmp
pop
hlt
loopne
and
lods
jge
jmp
xchg
push
and
mov
mov
scas
push
add
flds
lds
mov
sub
in
lea
cltd
jns
or
stc
jg
aaa
pop
jo
ss
std
popf
mov
stos
xor
in
mov
cmpsl
int3
mov
mov
imul
mov
add
xchg
push
popa
mov
sub
mov
mov
js
cs
lods
jne
lds
and
jmp
out
shl
lods
pop
inc
fs
std
pusha
ja
cmc
les
lret
jb
sbb
sub
outsb
add
xchg
pushf
mov
push
push
aaa
hlt
cltd
pusha
daa
dec
adc
xchg
mov
pop
cmp
shll
mov
pop
mov
push
fidivrl
daa
add
fidivrl
inc
dec
fnstenv
dec
sub
orb
daa
push
lds
jecxz
stc
ret
icebp
stc
stos
imul
add
mov
mov
sbb
adc
inc
into
lds
subl
xor
imul
inc
push
add
hlt
lds
adc
repz
mov
xor
adc
pcmpeqd
mov
fbstp
aaa
iret
dec
imul
into
cwtl
push
notl
out
inc
mov
mov
std
sub
aas
inc
jmp
pop
dec
sub
lds
dec
xor
lds
jo
loope
push
insb
cld
add
mov
mov
jle
lret
jns
aad
addr16
loopne
inc
xchg
andb
daa
xor
aas
lds
sub
dec
mov
sbb
clc
push
jecxz
dec
imul
sarb
and
jge
mov
stc
xchg
xor
das
sub
sarl
stc
cmp
arpl
negb
cltd
add
sub
pop
pop
lds
sub
mov
js
mov
rcrb
je
sbb
add
xor
lret
cwtl
mov
mov
lds
lds
fldcw
aad
fstps
or
add
sub
jns
sbb
pop
outsb
jmp
stc
sti
mov
dec
pop
pop
jnp
test
jp
xchg
sbb
stc
out
pop
stos
sub
or
xchg
pop
mov
pop
shlb
xor
fxch
test
sub
push
xor
sub
int
and
enter
jp
add
cmp
fmull
cmpsl
and
cli
xor
inc
or
ret
lds
aam
fsubrs
sbb
sub
mov
aam
and
mov
movl
push
lock
add
pusha
mov
inc
jmp
pop
push
enter
dec
push
dec
mov
fildll
push
push
negb
fcmovne
dec
mov
lahf
lds
dec
fisttps
rcrl
scas
add
mov
dec
pop
dec
xor
in
fwait
xchg
push
test
xor
cmp
add
xchg
iret
or
jne
or
mov
movsl
and
cs
scas
outsl
stos
inc
jl
out
push
jns
sbb
sub
mov
test
xchg
stos
lods
movsl
test
push
sub
mov
clc
cmp
dec
cltd
push
fstl
jb
or
adc
mov
dec
repz
and
mov
inc
ss
adc
xchg
push
lods
movsl
ficoms
sbb
jecxz
mov
sub
fwait
sti
fs
fstps
rcrb
popf
in
shlb
movsl
ja
pop
aaa
inc
in
cmp
fwait
cwtl
xchg
mov
xchg
mov
lods
daa
imul
jge
sbb
ds
push
dec
subb
cltd
and
or
popl
mov
cmp
aaa
add
data16
mov
inc
int3
sub
xchg
rcrb
add
mov
hlt
in
test
push
in
dec
nop
mov
popa
sbb
cmp
loop
movsl
inc
int
movsb
insl
movsl
lods
dec
add
int
mov
dec
push
loope
sub
outsb
push
stos
insl
popf
mov
mov
aas
call
popf
outsl
dec
cld
sub
not
aas
sbb
shrb
icebp
insl
xchg
dec
fistpl
pop
lret
ret
shl
xor
mov
push
mov
jns
push
push
xor
pop
xchg
inc
mov
jnp
es
xchg
es
out
test
movsb
or
cs
lds
cmp
xlat
sbb
in
cmpsb
jae
sub
sbb
shl
out
xor
and
stos
ss
inc
dec
frstor
mov
or
inc
mov
add
popf
mov
jo
push
jne
dec
stc
lea
adc
outsb
add
xchg
out
sub
cmp
mov
push
sbb
add
xchg
and
iret
adc
cmp
aam
dec
inc
pop
call
movsl
aaa
sbb
out
vorps
aam
ds
xchg
push
inc
ret
mov
ret
inc
movl
mov
inc
ret
and
outsb
es
sbb
dec
dec
into
aam
bound
pop
ja
cs
daa
scas
mov
ljmp
and
jle
lcall
loop
xor
push
out
rcr
shrd
mov
inc
test
ficoml
out
out
sbb
gs
or
mov
movsl
into
ss
mov
imul
push
or
test
jno
or
xchg
mov
mov
in
sbb
inc
lock
xchg
or
test
lret
or
ret
movsl
or
imul
xchg
shlb
jo
cld
pushf
xchg
ret
add
lret
mov
lret
imul
inc
push
xchg
sbb
int
iret
and
mov
push
xor
scas
rcrl
xchg
fsubs
mov
fcmovnb
pop
test
push
lds
mov
pushf
cmp
mov
insl
mov
inc
jb
or
lds
call
test
hlt
inc
sub
lods
stc
adc
cmpsl
add
mov
xchg
lds
mov
movsl
dec
leave
rcr
push
insl
ficoml
lods
mov
mov
mov
int3
mov
mov
push
lret
outsb
pop
adc
outsb
add
inc
pusha
ret
or
imul
or
and
sbb
push
ja
xchg
inc
rorb
dec
jnp
push
lds
xchg
imull
stc
test
mov
shlb
decb
and
scas
lds
add
div
mov
sbb
pop
adc
adc
movl
leave
das
xor
mov
pop
jb
sub
iret
loopne
test
loope
fistpl
and
mov
pop
into
lret
mov
out
daa
sub
outsb
or
dec
push
mov
decl
xor
cmp
in
mov
and
xlat
mov
scas
or
jno
inc
mov
lcall
add
popf
dec
mov
jl
jmp
cltd
add
orl
adc
repz
dec
shlb
mov
loop
imul
xor
sar
lock
stc
shrl
mov
cmp
push
test
outsl
negb
shlb
ss
cmpsl
scas
pop
push
lods
test
dec
dec
repz
push
sub
add
push
pop
add
movsl
fidivs
das
jne
cmpb
fstpt
cmp
xor
movsl
or
lea
cwtl
addr16
mov
sbb
pop
jecxz
xchg
pop
lea
add
scas
mov
push
lock
or
fldt
loope
fsubl
scas
in
sbb
mov
push
aas
lock
adc
daa
pop
lret
hlt
xor
and
out
pop
add
mov
xor
or
lds
jl
out
mov
in
sbb
mov
xchg
scas
rcll
mov
mov
add
ljmp
fwait
mov
mov
xchg
frstor
inc
lret
mov
push
rorb
add
inc
push
daa
test
mov
stc
add
mov
daa
xchg
mov
xchg
out
test
jbe
push
mov
mov
pop
jle
pop
jae
push
aas
subb
movsl
dec
add
repnz
dec
dec
sahf
add
roll
nop
push
clc
mul
fwait
dec
movsl
mov
clc
fadd
stc
test
lods
add
pushf
scas
push
je
movsl
dec
fimuls
pop
loopne
mov
and
popf
sub
dec
push
sbb
lds
push
loope
or
xor
lods
jnp
adc
jo
fcmovnb
push
ljmp
lea
mov
mov
mov
in
hlt
iret
cmp
mull
push
popf
ds
cmp
sahf
cmpsb
ret
std
xchg
lods
sarl
ljmp
out
cmp
xor
and
sbb
dec
fldl
sbb
rcl
mov
pop
or
sub
push
shr
mov
ucomiss
add
jo
push
pop
iret
stos
das
pop
jne
out
in
scas
int
lods
sahf
xor
insl
and
aas
lods
push
mov
ds
lods
jmp
mov
out
cs
scas
movsl
jl
jp
into
roll
sub
mov
js
jmp
mov
aam
lea
push
in
out
sbbb
lret
mov
stos
pop
movsl
pusha
repnz
pop
mov
mov
lea
add
mov
inc
dec
mov
inc
inc
xchg
mov
js
repz
xor
leave
xor
lea
xor
popf
push
adc
mov
fldt
mov
mov
mov
test
repnz
cwtl
lds
rorl
popa
test
dec
aas
adc
mov
cmpsl
sbb
bound
daa
lods
sub
out
mov
mov
sub
test
call
pop
scas
fldcw
mov
sbb
pop
jo
in
lock
mov
dec
movsl
mov
ret
jmp
jno
inc
ds
movsl
popf
cwtl
dec
inc
cmp
mov
and
xlat
inc
jae
addr16
mov
fs
mov
push
cli
inc
add
cmp
aam
cmpb
mov
mov
les
sub
scas
pop
adc
lcall
sub
nop
cmp
jmp
repz
push
addr16
fimuls
imul
mov
inc
imul
cmp
icebp
mov
inc
imul
movhps
pop
sbb
mov
in
or
in
adc
xor
inc
adc
mov
add
push
iret
cmp
xchg
push
pop
lods
sub
cltd
xchg
pop
fsts
sub
sub
xchg
cli
mov
fbstp
cs
pop
inc
mov
sahf
shl
mov
vpaddb
push
push
aaa
sar
inc
mov
pop
movsl
int
xorl
lea
aaa
repnz
jns
stc
pop
jns
jbe
sbb
aad
fisubs
lods
decb
jle,pt
in
cmp
sbb
aas
and
push
lahf
nop
rolb
sub
ljmp
pop
movsb
into
sbb
and
inc
push
pop
cmpsb
or
inc
fsts
out
lds
test
adc
xchg
pop
cmc
adc
in
mov
lahf
test
xchg
or
add
out
popf
mov
sbb
fstpl
out
lds
sti
std
pusha
mov
mov
xchg
pop
and
sbb
sub
ja
mov
mov
lds
push
fdivl
arpl
movb
fwait
mov
and
lds
addl
arpl
std
into
roll
sbb
xchg
out
push
call
inc
loop
add
xor
mov
add
sbb
inc
shlb
inc
xor
ljmp
fwait
out
loopne
adc
scas
aad
in
add
jne
imul
cmp
inc
hlt
or
aaa
mov
cmp
xchg
mov
and
adc
jg
dec
add
inc
cs
ret
xchg
arpl
cld
mov
dec
lods
fsubrs
add
loop
dec
shlb
mov
movsl
fcom
test
into
mov
hlt
mov
mov
sbb
adc
mov
mov
mov
push
je
cmp
lds
inc
add
mov
fdecstp
jecxz
rol
pop
loop
jae
xchg
add
jmp
into
cmp
insl
lret
lahf
lds
dec
pop
xlat
adc
stc
sub
pop
lods
fadds
dec
jl
inc
std
pop
push
popf
rcrl
or
cmpl
lds
inc
outsb
mov
sub
mov
ficompl
mov
jo
int
orb
ret
dec
xchg
test
jae
cmpsl
mov
call
loope
in
add
dec
jbe
imul
shl
roll
xor
xor
imul
cmp
rcrb
aas
xor
xchg
mov
lea
dec
jne
inc
mov
ficoml
sub
dec
outsl
in
mov
fwait
hlt
aad
jo
rcr
inc
es
ret
inc
or
mov
sbb
mov
es
js
jne
mov
jle
insb
lret
addl
jo
pop
mov
test
cltd
xchg
es
es
lret
int
rolb
mov
jb
push
aad
std
cmp
mov
call
leave
add
ret
sub
sbb
xchg
sbb
jns
inc
jne
inc
mov
add
dec
mov
cmpsl
jp
into
mov
in
js
sarb
lods
inc
add
in
mov
jmp
in
cs
inc
mov
dec
iret
lods
mov
repz
inc
push
cmpsl
fsin
lock
popa
sub
sub
popa
sub
test
sti
lds
push
jns
sarb
xchg
dec
imull
mov
insl
push
lret
fs
mov
xor
pop
xor
ljmp
add
adc
mov
cmp
mov
ficomps
cmp
inc
dec
dec
scas
arpl
cmp
out
dec
mov
lock
pop
xchg
idivl
xorb
xor
xor
ljmp
and
ljmp
pop
push
hlt
mov
rcrl
sub
lds
and
sbb
popa
adc
mov
cmp
dec
int
or
fldcw
jl
loopne
incb
fwait
enter
out
lods
ficoml
xor
push
addr16
mov
aam
enter
ja
add
push
cmc
mov
jl
sub
mov
jge
xor
jg
dec
pop
les
dec
test
cs
decb
out
rcrb
adc
push
in
cmp
lcall
xor
lds
pop
lds
push
or
or
dec
pop
fistpl
test
xchg
mov
leave
inc
or
ja
sbb
dec
addr16
xchg
xchg
cld
int
pusha
or
mov
inc
mov
lods
vpsubsb
in
sbb
in
into
test
clc
jns
push
xor
dec
stos
cmpsl
sbb
hlt
xchg
daa
mov
cmpsb
imul
add
adc
adc
push
dec
hlt
or
rolb
mov
fwait
roll
fidivl
jge
push
xor
daa
and
mov
fildll
movsl
lds
pop
or
mov
jmp
add
xor
stc
inc
in
movsb
pop
imul
insl
pop
adc
cmpl
int
test
pushf
lret
lea
data16
js
add
repz
mov
pop
leave
jge
cmpsb
aas
inc
in
fcomps
sub
mov
xlat
inc
in
push
adc
push
inc
inc
cmp
addr16
lahf
pop
sbb
clc
fsubl
data16
ljmp
push
lods
ret
push
cmpsb
clc
lret
mov
mov
lock
into
sarb
mov
inc
xchg
stos
mov
stos
push
sub
lds
ljmp
outsl
adc
dec
xor
pop
mov
pop
scas
adc
pushf
js
mov
jmp
dec
fisubrl
fldcw
adcb
push
pop
mov
or
inc
aaa
or
mov
dec
or
xchg
out
push
add
sbb
lds
in
adc
xlat
jmp
mov
xorb
stc
scas
add
dec
lds
cltd
outsl
jb
ret
dec
jne
jecxz
arpl
mov
or
cmp
sarl
and
lea
out
rcll
sbb
es
sar
inc
aas
inc
out
and
jno
mov
add
outsl
dec
cld
rcl
and
pop
ret
dec
sahf
dec
cmpsb
inc
pop
movsb
mov
inc
add
push
sbb
mov
testl
push
jmp
adc
jecxz
data16
mov
cmp
dec
jbe
and
ret
outsb
mov
in
addr16
cwtl
iret
pushf
lods
jl
aaa
outsb
xor
mov
sub
pop
loope
negl
lods
imul
sahf
dec
scas
mov
lods
sbb
cmc
push
xchg
pop
fwait
mov
jb
loopnew
lock
arpl
arpl
mov
fwait
dec
adc
adcl
dec
fistps
dec
xchg
lock
mov
jmp
gs
xchg
clc
sbb
cwtl
cwtl
rorb
sbb
arpl
or
gs
dec
imul
inc
mov
sti
pop
adc
cltd
inc
dec
mov
das
mov
xchg
push
dec
fsubrl
andl
cwtl
pop
add
int
repnz
imul
iret
arpl
outsb
jbe
adc
fistpl
mov
inc
mov
aam
es
pop
vmread
jle
dec
pop
stc
cld
mov
fwait
out
test
cmp
repz
xchg
fbstp
idiv
je
jno
in
lahf
sub
xor
add
or
lods
ds
sti
rcrb
test
and
insl
xchg
in
rolb
push
mov
inc
xor
or
lock
mov
jne
clc
cs
leave
repz
fidivl
notl
cmpsb
mov
adc
gs
sti
jnp
pop
mov
dec
cmpsl
fwait
dec
cltd
imul
fwait
inc
iret
push
hlt
mov
stos
jbe
or
outsb
inc
pop
cld
mov
sahf
xlat
cmp
pushf
and
sti
and
and
add
in
rcll
lock
push
sub
pop
pop
jp
ljmp
test
lcall
sbb
int
jecxz
fbld
push
xor
outsb
cmpsl
push
push
mov
mov
fdivrs
shr
lods
xchg
xchg
inc
imul
xlat
mov
lds
dec
in
jns
mov
fwait
scas
inc
ja
add
jae
mov
jmp
xlat
rcrb
adc
int
inc
cmp
fisttpll
gs
push
popf
xor
and
fcoms
scas
addr16
stc
mov
sbbl
fldcw
xor
mov
stc
lods
sbb
test
hlt
repz
inc
fiaddl
pushf
mov
xchg
int
sbb
testb
sti
sarl
cmp
lods
inc
or
fwait
repnz
aad
cmc
fidivs
mov
jp
xorb
loop
adc
lret
pop
mov
sbb
cmp
enter
lds
lret
adc
shrb
pushf
add
js
icebp
mov
inc
aam
sbb
in
cmovae
sbb
mov
cs
sarb
mov
in
adc
add
or
lret
push
pop
lds
movsb
iret
xchg
lcall
or
ret
insl
fmuls
push
imul
enter
or
sti
and
mov
and
nop
xchg
mov
movsl
mov
cwtl
fcompl
sti
cmp
pop
mov
inc
movsl
in
pusha
ja
jmp
pop
mov
dec
ret
lea
cmp
dec
cld
sar
and
es
ja
push
daa
mov
jl
lea
pusha
arpl
push
mov
push
nop
imul
cltd
les
pop
cmp
xor
lea
subb
jns
or
pop
jns
lret
insb
sar
iret
adc
sub
cmp
out
push
xor
inc
add
fsubrs
outsl
lods
dec
lea
xchg
mov
add
scas
icebp
push
push
xchg
fildll
lods
inc
shlb
add
jbe
push
sarb
test
fwait
sub
sub
inc
je
xchg
xchg
mov
test
imul
loop
scas
jecxz
cwtl
mov
inc
adc
and
mov
mov
pop
call
das
fidivl
iret
cmp
lods
cmpb
les
or
and
enter
jge
addb
aaa
ret
dec
daa
ja
notb
stos
pop
push
int
int
popf
jp
dec
mov
jmp
mov
add
sub
xor
pop
ret
popa
cmp
in
lds
push
add
adc
sahf
shrl
test
fidivrl
int
gs
jecxz
xchg
scas
or
jl
xor
push
mov
pop
xchg
test
aad
pop
sti
lods
xchg
call
mov
xchg
sub
stos
xor
mov
lods
nop
xchg
mov
js
sub
in
or
jmp
push
ljmp
dec
mov
add
xor
or
or
mov
mov
and
mov
es
test
inc
aad
fnstcw
roll
xor
nop
lods
mov
or
add
mov
mov
adc
push
mov
xor
mov
mov
rol
and
les
loopne
mov
cmp
cmp
rorb
sub
lods
rcrb
test
xorb
lods
sub
call
sub
loop
loope
sbb
je
mov
in
ficoml
jg
jbe
sbb
flds
rorl
iret
int
lods
mov
dec
adc
and
cmpb
cmp
les
add
or
xor
sti
out
adc
push
jae
push
les
mov
inc
xchg
sub
add
mov
daa
jmp
rol
mov
ret
imul
bound
rolb
clc
popa
rorl
cwtl
leave
mov
pop
popa
sub
add
pushf
push
test
ds
xchg
mov
test
rorb
rcl
lods
addr16
int
icebp
mov
cmpsl
and
in
inc
shll
ret
jne
push
scas
mov
aas
aad
pop
inc
xchg
or
lds
xchg
ret
or
pop
das
shlb
adc
xchg
mov
outsw
loopne
jecxz
xor
pop
orb
out
int
mov
push
jne
cmp
dec
mov
hlt
addr16
add
pop
aad
or
pop
mov
ret
mov
mov
movsl
mov
mov
ja
add
stos
movsl
jle
lret
int3
add
mov
sub
inc
xchg
sub
xchg
inc
cmp
inc
inc
rcl
addr16
sub
adc
es
fistl
ds
movsl
test
add
pop
bnd
and
xor
std
loopne
cmpsl
mov
mov
dec
fnsetpm(287
mov
hlt
jb
pop
divb
lods
inc
and
inc
mov
xchg
mov
daa
hlt
jnp
ret
dec
in
fnstenv
pop
ret
out
mov
sbb
fcmovu
cmpl
lds
in
pop
xor
pop
nop
cltd
clc
shlb
pushf
aad
outsb
mov
mov
cmp
adc
int
mov
inc
or
daa
scas
shrl
test
stos
xchg
nop
cmp
sbb
rcrb
or
js
mov
not
sub
fldenv
xchg
jne
roll
addr16
mov
xor
xchg
outsl
cmp
jb
mov
arpl
pop
daa
cmp
pop
stos
mov
mov
sub
in
movsb
push
rcll
ja
xchg
mov
aas
fsubr
movsl
adc
jno
push
imul
and
insl
push
xlat
shlb
pop
cmp
dec
cmp
mov
testl
pop
mov
ret
mov
movsl
sub
sahf
add
push
rorl
xchg
and
lods
mov
xchg
imul
push
pop
mov
or
lods
ljmp
hlt
mov
pop
xchg
inc
call
fimull
scas
ret
lcall
ret
inc
filds
in
sub
jl
fs
xchg
and
aaa
mov
lds
es
int3
inc
cmp
and
dec
pop
mov
aaa
inc
xchg
jmp
mov
stc
fldcw
loopne
push
inc
or
mov
dec
add
int
ja
aaa
fcomip
mov
and
clc
add
leave
dec
inc
cwtl
lea
out
cmp
inc
adc
sbb
jp
out
cmp
fwait
sbb
or
outsl
popf
movsb
push
imul
sbb
adc
sub
shl
pop
aad
arpl
data16
mov
and
fstps
fcoml
dec
xchg
in
test
in
add
arpl
mov
js
mov
aaa
lret
in
jns
mov
push
aaa
xor
cmpl
lcall
test
dec
clc
cmpsl
pop
enter
push
cmp
fistpl
cmp
lcall
inc
mov
and
out
push
sub
dec
jnp
aam
jg
stc
popl
pop
pop
xchg
daa
clc
outsl
sub
jmp
xchg
popa
stc
adc
mov
ja
xchg
movl
or
outsb
rcr
mov
xchg
mov
fcmovb
fistpll
mov
pop
test
aad
jns
dec
xor
pop
lcall
xor
test
xor
pop
and
inc
pushf
pushf
mov
lahf
jp
shrb
inc
or
and
adc
sub
loope
sar
push
loope
push
add
lods
popf
mov
cltd
nop
inc
push
pop
adc
jne
jmp
bound
int
std
adc
add
and
push
fs
inc
jnp
inc
int
pop
inc
mov
arpl
inc
ja
cli
mov
dec
cmpsb
xor
pop
icebp
ror
pop
and
jne
or
arpl
dec
lds
pop
in
lds
fsubp
xor
ja
ficomps
sbb
scas
outsl
in
cwtl
ds
lods
jge
dec
and
push
div
xor
mov
test
std
mov
xor
movsl
pop
daa
cmc
lock
enter
fxch
out
rol
cli
inc
dec
popf
sub
jb
leave
cwtl
xchg
into
mov
jp
jmp
nop
das
mov
or
xchg
iret
repz
jbe
cs
cld
test
pop
jbe
inc
rol
push
fists
scas
lds
lahf
movsb
mov
xchg
adc
and
pop
fcmovne
xor
jb
insl
je
jecxz
xchg
jle
cmp
mov
lea
push
lds
cltd
mov
shlb
lds
xchg
test
sbb
mov
lds
jns
push
mov
jmp
xor
and
adc
push
xchg
mov
push
cwtl
outsb
sbb
clc
cmp
in
lods
mov
add
ja
lcall
cmc
push
hlt
and
xchg
cs
mov
rol
push
inc
and
inc
mov
mov
stos
in
jnp
dec
rcr
ja
jbe
mov
scas
movsl
test
jl
jo
jns
cmp
arpl
popf
pop
add
cmp
pop
xor
lds
sbb
jecxz
cmp
add
cs
mov
add
aad
sbb
push
cmp
bound
mov
cmp
scas
fcmovnu
test
sub
or
rol
out
imul
imull
lods
add
xor
inc
in
stos
push
add
and
push
cmpsb
ret
add
mov
mov
xchg
push
mov
mov
icebp
inc
cmpsl
aam
fidivl
push
mov
fwait
and
pop
jb
xlat
inc
adc
lahf
adcl
xchg
cmc
push
inc
sub
push
int
and
out
clc
hlt
cwtl
add
inc
jecxz
pop
ss
out
xchg
push
test
cmp
fidivrl
fisubs
insl
push
lods
pop
and
ficomps
sub
cmp
movsl
outsb
push
test
xor
aas
in
fisttpl
ss
and
xchg
pushf
pop
fs
inc
popf
pop
insl
test
popf
clc
adc
sub
pop
sarl
sub
xchg
mov
aaa
xchg
leave
loope
imul
loope
and
stos
pop
inc
xor
xchg
mov
jo
mov
or
in
sub
jne
mov
mulb
aam
daa
clc
jae
add
sbb
push
movsl
in
outsb
pop
out
sub
outsl
inc
mov
mov
cmc
fistl
in
sbb
xchg
popa
xchg
xchg
cmpsl
outsb
fistps
inc
xchg
lcall
push
popa
mov
push
cmpsb
ja
mov
cmc
cmp
cli
push
test
popf
int
add
addr16
movsl
mov
add
pop
aas
push
push
mov
add
fcoms
push
and
xchg
repnz
sub
sub
movsl
push
insb
or
dec
lahf
add
lods
mov
mov
sbb
adc
pop
pusha
loopne
outsl
int3
cs
jne
pop
push
mov
stc
int3
int
mov
psubq
aaa
lods
inc
daa
lds
mov
into
adc
lea
mov
fmulp
mov
sbb
dec
pop
mov
mov
xor
adc
mov
repz
jmp
shll
out
mov
xchg
or
loopne
mov
push
push
push
adc
pop
scas
aaa
pop
xchg
sbb
aas
bsf
in
add
or
xchg
sbb
sub
xor
lea
ja
jp
clc
iret
pop
mov
sub
cmpsl
push
xor
scas
outsb
cmp
xor
fidivrl
lods
insb
cwtl
lds
imul
dec
dec
lcall
mov
subl
sub
mov
rorl
xchg
daa
rcrb
fdivl
xchg
int
dec
mov
roll
jo
push
inc
mov
push
ret
inc
mov
dec
adcl
xlat
test
add
xorb
xlat
pop
mov
jbe
or
mov
pop
mov
fcompl
cmp
add
scas
pop
jp
outsl
dec
shl
mov
pop
mov
pop
mov
les
enter
mov
push
or
dec
imul
lods
ds
cltd
sbb
dec
lds
xchg
pop
out
xchg
mov
sbb
sbb
jne
lahf
mov
sub
lods
mov
stc
lahf
fcmovnbe
sbb
adc
dec
mov
xor
fcompl
loope
fndisi(8087
add
cmp
inc
insb
into
sarl
mov
mov
jg
stos
jbe
jo
fcmovnb
imul
jnp
or
cld
inc
sbb
jl
gs
jmp
push
pusha
cmpsl
sti
call
xor
ret
push
jecxz
lods
cmpsl
xchg
jle
add
push
cmpsb
bndstx
or
inc
addr16
mov
sbb
int
ljmp
pop
test
xor
mov
mov
inc
xor
pushf
das
movsb
scas
cltd
sbb
mov
add
xchg
inc
js
negb
ror
inc
lahf
es
or
mov
mov
rcrl
imull
adc
gs
push
xchg
call
fstps
push
push
stc
scas
push
mov
xor
jmp
in
mov
sub
jecxz
and
bound
and
imul
pop
mov
xchg
rcrl
imul
pop
and
out
lock
add
cmp
xchg
das
loope
leave
icebp
cmp
fstl
mov
movsl
movsb
push
mov
mov
int3
push
test
sbb
lret
jnp
daa
aaa
sub
inc
test
int
dec
cmp
cmp
hlt
mov
popf
js
lea
sbb
fmul
cli
icebp
ja
adcb
movsl
imul
and
xlat
mov
jbe
mov
mov
xor
sub
ret
add
mov
test
mov
sbb
xchg
adc
mov
enter
inc
scas
testb
sahf
push
adc
dec
or
das
mov
imul
jge
adc
and
subb
pop
shrb
rcr
and
add
mov
push
outsl
in
push
mov
lods
lds
pop
lods
shlb
cmpsl
and
jbe
lahf
mov
popf
sbb
mov
or
ret
push
adc
dec
add
inc
int
sbb
in
jbe
enter
lds
xchg
jmp
add
mov
imul
rcrb
mov
inc
cmp
aad
mov
cld
addr16
xor
fisttps
cmpsl
mov
int
enter
cmp
and
clc
dec
cbtw
pusha
push
push
pop
or
add
push
xor
xchg
sub
mov
loope
sbb
inc
arpl
or
sub
mov
mov
push
push
aad
pop
jne
into
ret
in
stos
cmp
dec
jno
cmp
xchg
lret
dec
push
hlt
call
leave
mov
movsl
fisttpll
pop
int
test
cmpsb
push
movsb
push
in
xchg
mov
sti
scas
mull
std
sbb
mov
xchg
mov
popf
loope
insb
mulb
xchg
cmp
movsl
cmp
pop
mov
test
jl
cmp
leave
mov
add
mov
js
data16
xchg
jne
lods
add
mov
movsl
in
lods
jmp
sbb
xchg
dec
movsb
popf
or
cmp
nop
in
add
dec
xor
cltd
mov
xlat
mov
sbb
or
mov
cltd
movsl
xchg
imul
mov
jo
xlat
aas
popa
mov
mov
cltd
lods
hlt
jge
push
push
sub
inc
sbb
xor
push
mov
push
mov
add
lock
scas
mov
or
mov
stos
scas
or
inc
dec
jmp
ja
cld
add
aas
jg
mov
lds
rcrl
dec
mov
js
cmpsl
and
hlt
fisubl
jbe
mov
fsts
hlt
sub
jns
mov
dec
cmp
mov
mov
lods
mov
or
xchg
xchg
int
scas
mov
stos
loopne
mov
inc
and
std
dec
xchg
loopne
repnz
movsl
insb
test
fstl
add
jle
sbb
add
or
fwait
adc
repz
dec
sub
xlat
sbb
aad
outsb
add
mov
leave
pop
fstps
into
lahf
jbe
sbb
xchg
adc
xor
push
mov
insb
xchg
or
lds
fidivs
clc
jle
adc
cs
mov
add
fnstsw
dec
pop
xchg
pop
aaa
andb
push
lret
movsl
rol
scas
xchg
or
or
pop
fcomps
or
xchg
sub
lock
movsl
popl
push
lds
pop
jle
fldcw
push
out
adcl
pop
xchg
add
add
and
mov
mov
pop
mov
in
movsl
fistl
jns
cs
shrl
and
int
in
mov
push
push
punpckhdq
and
out
movsb
or
out
dec
add
pop
ja
mov
add
dec
popf
inc
mov
lock
xor
stc
shr
adc
add
sbb
lock
dec
push
cmpsl
inc
xchg
pop
adc
fwait
lret
push
pop
sbb
mov
add
jmp
es
sub
pop
xchg
adc
mov
mov
rol
xlat
addr16
xor
aad
inc
mov
and
sub
clc
cs
xchg
push
pop
js
pushf
imul
pop
scas
add
or
push
xor
push
rcr
movb
inc
jbe
dec
int
loop
enter
adc
cltd
inc
or
jle
sbb
mov
stc
lea
lds
push
movsb
outsb
sti
leave
dec
pop
adc
fwait
jle
push
in
sub
jnp
dec
inc
andl
arpl
xchg
ja
lock
add
pop
cmovl
xchg
cmpsb
jg
and
mov
loopne
aas
sub
jge
xchg
stos
lods
aam
imul
addl
lods
mov
sbb
addb
sbb
dec
test
xchg
mov
mov
movsb
stos
or
and
xor
cmc
scas
ja
fisubrl
inc
enter
fwait
mov
stc
jge
mov
cmp
jbe
adc
fmulp
dec
dec
cmp
jmp
dec
sbb
loopne
xor
das
mov
out
sbb
inc
mov
outsl
imul
dec
lea
or
adc
cmp
pmaddwd
cmp
or
dec
xor
stos
ljmp
js
jmp
xchg
and
sbb
lret
frstor
jmp
cwtl
fistl
xchg
sub
das
jl
cmp
xchg
add
mov
pop
pop
sub
clc
cmp
aad
cmpsl
xchg
imulb
push
hlt
cmp
pushf
int3
scas
and
ja
fsts
pop
or
dec
sub
sbb
sbb
mov
pushf
shrb
sbb
add
pop
cmpsb
pop
cltd
mov
cmp
in
pop
push
adc
rolb
add
xor
sbb
pop
bound
push
mov
loop
sti
cli
sbb
pop
ds
pushf
ret
or
outsb
stos
xchg
movsl
jmp
cs
outsb
aas
lock
add
ret
pushf
xchg
jb
push
inc
xor
jne
ja
sub
mov
xor
outsl
dec
jl
inc
pushf
imul
push
add
ja
cld
stc
xor
adc
int3
addr16
cmpsb
fwait
adc
add
test
in
xchg
xor
mov
in
aas
fadds
or
out
test
pusha
push
mov
pop
mov
es
sahf
lds
mov
js
xorb
lahf
mov
cmp
mov
nop
add
xchg
popf
xchg
aaa
push
pushf
jns
jbe
pop
jg
les
leave
adc
inc
movsl
sbbb
inc
lcall
dec
or
adc
sbb
xchg
sub
loopne
out
pop
mov
jns
xchg
cld
sub
xchg
or
pop
out
mov
lcall
pop
pop
sbbb
or
jg
push
cmp
int
add
add
mov
dec
das
test
jg
sub
or
sbb
cwtl
rcrl
jae
fsubs
lret
mov
mov
iret
dec
jle
push
daa
dec
xchg
add
add
sub
pop
mov
sbb
push
sub
lds
mov
push
cmpsb
pusha
sub
adcb
scas
xchg
aas
push
jns
xor
and
loope
roll
sahf
jle
sbb
jbe
roll
inc
enter
in
lods
jmp
ror
mov
divl
insb
xchg
mov
lds
and
cmpsl
push
scas
add
ret
loope
fimuls
jle
and
roll
push
mov
cld
std
loope
lods
lds
add
out
test
sti
hlt
lret
pop
rcrl
xchg
movsl
pop
sub
pushf
lcall
in
lea
pop
mov
sbb
mov
pop
lret
lods
cwtl
arpl
int
stos
sbb
xchg
pop
xor
mov
inc
jmp
jecxz
lea
xor
mov
xchg
nop
jg
and
pop
cmp
into
mov
add
mov
xchg
mov
pop
push
fstpt
fnstenv
daa
push
jecxz
mov
xchg
sbb
lods
mov
push
std
xor
mov
imulb
mov
pop
mov
lds
arpl
push
mov
cmp
dec
stos
sbb
lods
cwtl
and
outsl
cmpsl
orb
in
push
adcb
adc
pop
sbb
adc
repnz
out
pop
adc
shll
sub
and
in
mov
imul
shlb
lods
push
daa
or
aad
stos
pop
lock
shll
daa
out
adc
hlt
pop
fsts
pop
fcompl
mov
jno
mov
mov
scas
jne
fadds
sbb
add
popf
dec
movsl
in
sub
repz
add
test
adc
dec
dec
cli
fiadds
dec
pushf
and
in
adc
movsb
and
sub
mov
mov
dec
sahf
cmp
cmp
push
std
out
int
stc
fcompl
loope
lcall
icebp
xchg
daa
lds
into
pop
adc
ss
adc
out
test
cmpsb
in
push
jg
mov
add
cvtps2pi
xchg
mov
pop
sahf
xchg
xor
push
push
fisubrl
mov
lds
test
mov
inc
dec
pushf
mov
in
lods
fstpl
into
push
ljmp
sub
cmp
sub
sbb
pop
inc
sbb
push
inc
outsb
in
aad
adc
mov
dec
test
xchg
lds
push
cmpl
lock
mov
test
lret
aaa
add
and
arpl
std
push
push
adc
in
mov
es
loopne
mov
es
movsb
push
push
adc
adc
cmp
mov
ljmp
insb
mov
lret
iret
imul
lea
imul
jecxz
sub
sbbl
pop
mov
negb
or
scas
pop
or
lds
mov
ret
cmp
fistpl
outsl
pop
or
mov
lods
enter
adc
add
sbb
and
les
or
and
lahf
in
push
cmpsb
and
loope
shr
dec
lds
mov
test
pop
add
push
add
xor
pop
movsb
insb
jmp
nop
repnz
mov
sti
movsl
adc
pop
lret
and
lods
jnp
mov
push
das
in
lds
push
xor
jne
neg
mov
push
movsl
in
test
roll
push
std
pop
jae
push
push
popa
xor
lea
lahf
xchg
sbb
mov
loope
cmp
sbb
fadd
aad
ret
cmp
imul
jnp
addl
or
adc
lret
pop
xchg
push
push
xchg
popf
loopne
shll
aas
xor
push
imulb
and
push
lods
push
enter
inc
movl
inc
mov
lds
fldt
ss
dec
popa
lcall
sahf
add
or
ds
repnz
xor
lret
push
mov
leave
pop
add
lds
mov
stc
mov
pop
sar
test
mov
dec
inc
lea
sbb
insb
leave
or
dec
fwait
rolb
adc
mov
outsb
cmp
int
arpl
clc
fs
out
mov
in
je
pop
xchg
jne
fsubrl
loopne
sbbl
xchg
fsub
jae
movsl
xchg
fcmovbe
repnz
out
or
in
inc
flds
jmp
mov
ret
mov
cmpsl
pop
and
ss
into
push
out
lds
outsb
leave
push
dec
push
sbb
mov
dec
xchg
into
pop
dec
inc
mov
xchg
inc
xor
js
les
push
dec
adc
xor
mov
mov
dec
cmpsl
adc
in
mov
xchg
lret
sub
inc
cmp
lret
adc
in
push
out
call
jo
fnsave
inc
mov
jb
add
fwait
test
cwtl
in
adc
testl
in
and
or
test
scas
mov
add
hlt
xchg
fistpll
inc
mulb
cld
js
int
pushf
cmp
or
jmp
mov
mov
xor
lods
inc
mov
pop
imul
sub
dec
insl
ja
mov
xchg
xlat
push
call
cmpsl
and
outsb
lds
add
out
lods
lds
rclb
mov
lods
sub
mov
and
mov
push
sti
or
adc
adc
lds
xrelease
shlb
aas
testl
pop
subb
fwait
mov
mov
fwait
shr
cli
xchg
test
out
xchg
sub
sub
jo
rcr
xchg
sbb
aad
mov
pop
test
clc
rcll
push
pop
dec
push
xor
out
jge
sbb
inc
sub
inc
fstpt
push
sub
pop
jmp
fcompl
sub
jo
movsb
ljmp
enter
mov
sbb
sbb
sti
pop
pop
call
clc
lds
aaa
and
push
mov
or
or
lds
xchg
je
cltd
hlt
add
sahf
cwtl
pop
pop
and
sbb
lret
hlt
sti
mov
cmpl
mov
cmp
inc
into
xchg
in
or
cli
jo
pop
cmc
std
jnp
and
pop
adc
mov
inc
push
movl
xchg
loope
lods
jmp
movsl
lods
or
mov
lds
in
rcrl
lcall
enter
jb
ja
lds
inc
and
jmp
pop
inc
inc
popf
adc
faddl
leave
xchg
dec
sub
cwtl
iret
in
sub
pushf
lods
movsb
sbb
push
mov
aaa
pop
pop
jae
aam
sbb
push
or
adc
fldcw
loopne
loopne
outsb
dec
push
mov
sbb
mov
dec
cmp
xchg
push
pop
clc
jl
xchg
adc
jle
call
movsb
pop
mov
pushf
pop
shrb
push
rcrl
aad
dec
lds
xchg
not
sub
scas
pop
rclb
sahf
xor
mov
movsb
pop
dec
repnz
mov
je
xor
sti
or
test
lds
xor
jl
and
xchg
aam
pop
push
aaa
nop
cltd
or
shlb
fadds
mov
leave
inc
lods
stc
js
fwait
rcll
and
int3
and
jecxz
adc
insl
aad
arpl
cwtl
mov
les
mov
mov
adc
inc
mov
add
xlat
push
cmp
sbb
inc
cmpsl
rcr
lods
cmp
hlt
sub
dec
rcrb
mov
inc
inc
xor
pop
lods
fistpl
ja
std
mov
jnp
movups
jne
in
loope
mov
stos
into
push
jmp
dec
inc
stos
in
mov
lods
add
sbbb
rcrl
movsb
int
mulps
mov
mov
jns
mov
add
mov
lcall
pop
push
add
xor
xor
dec
adc
sub
fadd
aaa
mov
inc
idivl
xchg
inc
cltd
fsubrl
addb
ret
lods
loop
fld
push
push
stc
dec
fcmovne
pop
inc
cmp
add
lret
shl
sub
cmp
in
mov
test
mov
popf
fisttpl
mov
sub
adc
cmp
mov
mov
inc
int3
adc
imul
outsb
mov
mov
dec
pusha
aas
sub
push
pop
adc
scas
and
jmp
jg
sub
sbbl
mov
and
push
cmp
in
mov
dec
mov
inc
add
hlt
push
cwtl
cli
push
inc
rol
xchg
dec
fisttpll
or
jl
add
enter
stos
pusha
imul
mov
popf
dec
pop
out
jle
ljmp
inc
outsl
xchg
push
std
int3
mov
xchg
sbb
pop
test
xlat
dec
and
push
mov
movsb
push
fwait
lds
jmp
ja
adc
hlt
and
in
incb
insl
jbe
xchg
jecxz
in
mov
push
movsb
xorb
mov
cmp
and
scas
or
or
push
int
iret
mov
dec
out
das
insb
outsl
dec
iret
cmc
cli
int
xor
lods
into
rclb
cmpsb
lock
pop
sub
pop
xchg
ss
sar
sbb
int3
dec
hlt
mov
or
cwtl
adc
add
notl
out
out
adc
int3
cmpsb
mov
ret
add
mov
dec
cmp
mov
addr16
sbb
or
add
pop
ret
inc
push
imul
xor
cmp
add
mov
es
in
int
out
cmpsl
sub
add
adc
in
fs
pop
mov
jmp
lds
mov
mov
pop
sti
out
into
add
jae
rclb
jecxz
push
jnp
sub
mov
call
inc
sub
mov
rolb
push
hlt
sub
pop
sub
mov
mov
mov
loop
jg
inc
xchg
cwtl
pop
adcb
mov
loopne
push
sahf
or
imul
dec
sahf
cld
sub
inc
adc
sbb
push
lods
jg
fcmovne
adc
sbb
cmp
mov
test
mov
ja
jmp
into
jecxz
or
pop
stos
xor
sbb
dec
dec
add
push
inc
push
pop
jge
push
dec
ljmp
leave
inc
loop
stos
das
sub
xor
leave
lret
pop
cmp
lods
popa
adc
aaa
shlb
sbb
scas
andb
mov
sbb
inc
mov
push
xor
daa
mov
cmp
inc
jecxz
ror
cmp
repz
pop
pop
nop
push
pop
lret
imul
iret
add
jl,pn
and
scas
jge
cwtl
in
in
push
mov
pop
push
xor
daa
pushf
sub
rcll
dec
iret
inc
fiaddl
les
in
push
cltd
retw
mov
sbb
stc
mov
subl
inc
sbb
inc
xchg
inc
mov
dec
cwtl
insl
lods
decb
insb
cmp
out
data16
iret
or
jne
std
and
in
jmp
lds
cld
nop
add
mov
leave
shlb
std
mov
divb
inc
mov
sahf
dec
loope
jne
inc
dec
addr16
leave
inc
add
dec
adc
xor
in
xchg
xor
cmp
lret
or
cmpsl
lahf
outsb
scas
stos
ret
xchg
mov
mov
lods
mov
sti
jno
lods
lds
cmp
pop
dec
or
adc
out
outsl
sahf
in
jne
fldcw
dec
push
xchg
rcrb
pop
mov
cmp
inc
mov
fildl
in
call
xchg
add
add
sub
shll
test
pop
or
cmpsb
or
daa
jae
lods
mov
lret
inc
aas
daa
adc
jnp
test
aam
add
adc
test
lret
xchg
mov
repz
loopne
inc
test
xchg
popa
stos
push
nop
imul
ret
add
test
dec
stos
add
pusha
sbbb
jle
aad
or
lds
push
int3
stos
inc
sbb
inc
mov
clc
cmpsb
lcall
mov
mov
add
shrl
pop
mov
fs
movsl
pop
xchg
push
sub
and
jne
mov
es
jae
lods
fsubrs
fucom
pushf
fmulp
mov
jmp
movsl
out
xchg
scas
cld
pop
ja
dec
inc
xchg
jae
shll
mov
dec
mov
xchg
andb
lds
push
fmull
addr16
mov
jnp
xor
outsb
cld
jmp
popa
cmp
and
jge
add
fdivs
ret
adc
in
scas
add
or
lds
cmp
xchg
ret
mov
mov
add
jns
sub
xchg
jo
cld
pop
sbb
shrb
out
movsb
out
push
xor
lea
lea
push
sti
and
mov
mov
out
push
xor
xchg
test
and
adc
bound
push
jp
pop
inc
sarl
inc
sbb
das
sti
mov
int3
cmp
int3
movsl
and
adcb
pop
cmp
adc
shll
repz
sahf
in
hlt
mov
es
push
push
lea
inc
jbe
sbb
xchg
int3
aad
sbb
and
xchg
push
mov
movsl
iret
sub
outsb
jbe
cltd
push
inc
xchg
lcall
cmpsb
ret
std
adc
jl
pop
sti
into
dec
mov
sbb
fwait
pop
xor
cmp
push
mov
xlat
mov
repz
inc
pop
rcll
cld
rcrl
inc
int
fwait
push
movsl
sbb
sub
sahf
cmp
data16
fwait
jl
xchg
xchg
sbb
or
cmpsb
leave
stc
gs
sbb
sbb
inc
pusha
adc
and
test
pop
jge
rcrb
std
lea
aad
fwait
or
sub
in
or
push
sub
adc
roll
add
jge
cmc
repz
lds
lods
sbb
pop
adc
mov
movsb
dec
mov
cld
lds
testl
lods
insl
movsl
adc
xchg
xchg
cli
or
out
lds
or
int3
and
push
fsubrl
mov
sbb
sbb
pop
jge
pop
or
jne
fcmovnb
push
iret
jl
scas
cmp
push
out
jne
cmp
fisttpl
xchg
lds
mov
addl
lret
jp
pop
xchg
xchg
xor
xchg
add
sahf
mov
add
sub
loop
leave
mov
jp
lods
dec
pop
shll
ficoms
add
leave
out
sahf
xchg
xor
stos
pop
push
or
lds
pop
dec
int
leave
and
cli
mov
xchg
push
int
movsl
cmp
mov
int3
imul
dec
cmp
ror
mov
mov
jmp
sbb
movsb
shlb
inc
inc
gs
mov
sbb
mov
mov
and
lods
sbb
jp
jo
repnz
jle
insb
cmp
mov
aas
cs
sbb
outsb
hlt
lods
mov
stos
inc
push
leave
lahf
push
mov
pop
lds
mov
orb
xchg
cwtl
mov
cmp
adc
shll
xlat
shlb
mov
xchg
fs
insb
clc
add
mov
imulb
scas
leave
jae
add
jmp
aaa
xchg
sar
movsl
inc
mov
lcall
sbb
movsl
or
je
jle
ja
sbb
adc
lret
lock
mov
push
dec
fsubrs
int
xchg
and
push
mov
rcrb
pop
push
add
loope
push
int
outsb
movl
sbb
fwait
les
mov
ret
mov
push
inc
sarb
cmp
mov
and
lea
dec
adc
mov
add
sbbl
outsb
jl
cwtl
xchg
sar
insl
movsl
mov
lret
sub
subb
sti
ss
xchg
jae
cwtl
pop
fwait
pop
xchg
sub
popa
cmp
pop
pop
aas
add
add
outsb
aaa
adc
out
cwtl
mov
sub
fstl
pop
insb
leave
fs
aad
lds
cltd
pop
in
inc
xchg
cmpsl
cmpsl
std
add
faddl
adc
lods
dec
out
cmp
hlt
frstor
pop
cli
or
ss
add
fildl
clc
or
adc
push
and
push
push
subl
xchg
and
add
mov
inc
add
push
mov
mov
inc
mov
pop
les
inc
ret
negb
imul
inc
push
das
lea
out
jecxz
fs
pushf
add
inc
lds
jne
adc
or
xchg
cs
mov
mov
cwtl
pusha
lea
xchg
xchg
mov
nop
cmpsb
inc
jl
fwait
and
loop
sti
std
pop
stos
mov
out
push
outsl
or
xor
cmp
in
mov
loop
stos
icebp
add
popf
push
pop
test
fcomps
insb
divl
mov
aas
mov
jecxz
push
mov
mov
mov
enter
aam
cld
mov
stos
cmp
mov
negl
mov
jno
in
nop
mov
cmp
pop
sbb
jae
jmp
jmp
jne
movsb
mov
stos
jle
stos
lret
in
add
xlat
lods
push
fwait
mov
out
mov
add
sbb
mov
fwait
cli
insl
out
pop
push
jns
loopne
jl
and
and
stos
push
mov
iret
lea
cmp
ljmp
cmp
or
into
push
inc
jecxz
nop
inc
cmp
pop
stos
loopne
dec
pop
std
mov
aad
out
stos
test
mov
mov
loop
jmp
add
mov
fistl
push
mov
mov
call
mov
rcl
ds
insb
add
sbb
sbb
stos
or
clc
mov
jg
sarl
stos
mov
pop
sahf
stos
dec
pop
inc
movsb
xor
pop
pop
mov
out
xor
push
imul
xchg
fistpll
pop
xchg
mov
cld
mov
lea
xchg
stos
add
pop
inc
out
insb
repnz
cli
mov
cmc
das
or
inc
cmp
popf
jmp
cmpsl
notb
sbb
push
ds
fldt
out
mov
jge
lcall
out
push
lods
fsubl
test
jnp
call
sbb
dec
repz
stos
and
mov
jo
mov
leave
cld
add
mov
ret
int3
lahf
mov
xor
movsl
mov
push
fwait
pusha
sbb
ja
jbe
pop
mov
sbb
xchg
outsl
add
cltd
push
mov
mov
mov
stos
add
xor
lods
mov
fcmovb
not
cmp
lods
and
sbbb
in
cmp
or
mov
bound
adc
jnp
scas
dec
stos
gs
es
idivl
inc
lods
mov
pop
or
es
xchg
es
sbb
jno
add
out
xchg
mov
xor
mov
call
xchg
pop
mov
xlat
sub
sahf
sbb
fwait
es
push
mov
repnz
fdivrs
mov
insl
cmp
stos
mov
mov
je
repz
in
lods
pop
imul
ja
shrb
add
stos
xor
xchg
mov
mov
sub
stos
mov
mov
inc
or
push
insb
jo
mov
pop
jmp
adc
xchg
mov
cmpsl
cmp
jmp
out
fisubs
movl
stos
or
arpl
mov
das
mov
mov
icebp
ret
pusha
stos
pop
sbb
sbb
jmp
mov
inc
cld
stos
xchg
xchg
in
mov
insb
stos
sub
dec
add
jne
add
bound
stos
sahf
jg
js
cmp
das
cmp
mov
cltd
rorl
mov
shl
clc
and
cwtl
aas
adc
inc
movsl
stos
mov
pusha
jo
adc
movsb
in
jmp
imul
push
mov
stos
iret
fisubs
sub
sbb
cmp
hlt
stos
jl
mov
or
test
push
ss
arpl
aam
call
xor
inc
loope
jns
pop
fdivs
mov
or
pop
and
mov
push
pop
xchg
aaa
insl
mov
mov
sbb
sbb
stos
mov
adc
mov
lods
push
test
add
pop
movsl
imul
iret
insb
pop
loope
and
js
push
or
adc
insb
popf
repz
fsubrp
movsb
xchg
testb
in
aam
stos
lock
in
in
pushf
pop
mov
push
or
stos
int
jmp
in
repnz
sub
and
inc
rcr
dec
stos
xor
cmp
stos
dec
inc
mov
sub
roll
insb
jmp
imul
xor
fwait
std
icebp
stos
jns
lock
pop
mov
das
sbb
inc
mov
push
or
push
pop
jns
cmpsl
xor
or
lods
push
fdivrs
stos
pushf
mov
mov
aaa
lods
loope
arpl
imul
aam
jns
cwtl
lods
out
and
dec
mov
pop
or
sbb
sbb
mov
xor
inc
lea
scas
mov
loop
push
movsb
add
stos
mov
lods
sbb
cmp
loope
shrb
inc
inc
and
insl
mov
jecxz
aaa
and
xchg
cwtl
and
mov
icebp
lret
gs
dec
cmp
xchg
mov
sarl
stos
mov
sub
mov
shrl
sbb
das
sbbb
popa
scas
insb
inc
mov
jbe
inc
jge
fs
negl
dec
aaa
stos
xchg
int3
pop
fwait
push
aas
lods
lods
cltd
fsub
dec
stos
mov
inc
sub
jmp
dec
cwtl
cmpsl
sbb
mov
jns
lods
cs
outsb
pop
or
xchg
ljmp
jg
js
pushf
cwtl
xlat
cmpsl
das
inc
pop
stos
mov
mov
ss
mov
out
mov
adc
repnz
sub
mov
sbb
shr
jmp
stos
lock
and
dec
movsb
mov
out
jl
mov
test
divl
sarl
aam
loop
add
add
pushf
xchg
cltd
lods
aaa
stos
jb
pop
loopne
mov
dec
jmp
sub
aaa
adc
stos
push
pop
hlt
jnp
sbb
popf
fcom
xchg
mov
insl
and
cmp
cs
dec
lds
jmp
mov
push
cld
sbb
pop
data16
das
orb
pop
push
sub
mov
xor
outsl
or
aas
cmp
in
lods
stos
aaa
jle
jmp
fisubrl
imul
and
sbb
jns
stos
lcall
xor
imul
jmp
push
mov
and
mov
popf
stos
fimull
dec
sub
mov
sub
loope
aaa
inc
andl
gs
jmp
jns
popf
cmpsl
aaa
pop
mov
leave
jmp
add
xchg
mov
je
in
push
shr
xor
xor
addr16
jecxz
mov
testb
mov
test
sbb
push
scas
aad
pop
sub
adc
jp
aaa
dec
nop
cmp
xor
push
ficompl
fwait
das
shr
mov
imul
sti
loop
lret
popf
movsb
test
mov
mov
sbb
lret
stos
sbb
ds
sub
jmp
in
jmp
push
mov
and
mov
mov
jmp
jbe
sbb
and
lcall
jp
sub
xorl
gs
stos
sarl
lcall
lea
cmp
mov
lods
add
jge
sar
or
outsb
test
sub
icebp
movq
fmuls
mov
les
and
ret
insl
sub
mov
adc
pop
int
aaa
and
bound
xchg
cmpsl
aas
adc
mov
mov
outsb
in
fisubl
cmp
clc
jecxz
shrb
inc
js
mov
pusha
rclb
orl
ljmp
fwait
dec
dec
mov
loop
fidivrs
mov
push
lret
jg
dec
fstpt
jno
and
es
lock
push
and
xor
mov
int
jecxz
xlat
fdivs
pop
lahf
xchg
mov
lret
psubq
ret
cmpsl
pop
jge
dec
adc
lock
mov
cmp
fmul
mov
icebp
sbb
fnstenv
or
out
and
sub
xor
xor
xor
jmp
movsl
fldt
lock
mov
push
and
iret
popf
test
aaa
stos
inc
imul
fdivrs
jp
jl
sbb
aaa
mov
stos
pop
cmp
ficoml
shrd
or
pop
outsb
and
dec
popf
adcb
rol
xchg
push
insl
loope
aam
or
lock
fistl
jmp
pusha
ja
cmp
or
fisubs
and
pop
int
sub
cmpsl
sub
dec
outsl
mov
cmp
lods
out
push
stc
cmpsb
add
sarb
fbstp
jae
popaw
dec
loope
stos
and
pop
lret
mov
dec
jbe
xor
pop
arpl
dec
push
push
inc
jge
test
xor
pop
pop
and
push
stc
jge
add
jno
std
icebp
mul
jecxz
add
std
inc
jecxz
shll
and
inc
and
stos
push
ljmp
imul
sub
lock
pop
and
push
sti
jge
test
std
xchg
mull
add
test
pop
and
or
aad
js
aas
and
xor
ljmp
add
decl
xor
gs
dec
xchg
push
mov
jae
sub
repnz
xor
inc
lahf
lret
mov
xchg
ja
push
push
sbb
outsl
inc
pop
adc
jg
cmp
ljmp
cli
imul
lods
das
mov
fwait
pop
cmpsb
gs
dec
adc
mov
xchg
sbb
jecxz
dec
stc
adc
incl
sub
and
mov
clc
stos
lods
lock
lret
fimull
in
or
imul
mov
xor
mov
or
jl
testl
pop
lds
dec
mov
lahf
shrl
icebp
mov
xor
jb
mov
repnz
xor
jae
lcall
cmpsb
mov
repnz
xor
jae
jae
cs
ljmp
outsl
mov
dec
jl
xchg
sub
sbb
push
mull
stc
or
roll
in
mov
mov
mov
cltd
mov
push
and
test
and
mov
sti
and
test
jae
push
mov
scas
insb
nop
mov
sub
out
pop
jne
pop
aam
iret
stos
scas
das
imul
inc
and
vshufpd
sbb
inc
rorl
imul
sahf
or
aas
ret
inc
mov
sub
and
loopne
adc
stos
pop
icebp
dec
lret
rorb
add
xor
gs
push
mov
or
xchg
jg
insb
call
push
pop
fnstsw
jle
lock
out
loopne
dec
mov
pop
mov
dec
and
jae
or
mov
scas
fmuls
add
icebp
das
and
fbstp
mov
repnz
fdivl
push
loop
int
adc
pop
lds
pop
mov
daa
lock
mov
jno
xor
jb
mov
mov
inc
out
les
cmp
movb
mov
std
pop
pop
xchg
in
pop
cmp
dec
jnp
inc
jl
icebp
xor
dec
jl
js
inc
call
mov
fs
add
pop
sub
pusha
and
push
and
sub
out
shlb
mov
sti
and
repnz
int3
sub
mov
addr16
and
jg
add
in
and
out
mov
inc
rol
xchg
jmp
jmp
ljmp
loop
aad
rol
add
cmpsl
icebp
out
push
fdivl
mov
repnz
jle
cmp
jbe
pop
mov
repnz
xor
jae
jae
cs
jo
push
sbb
jne
jge
add
mov
std
repnz
add
rol
lock
das
mov
dec
and
push
and
mov
and
adc
clc
and
stos
sub
ljmp
mov
xchg
daa
stos
das
lret
and
dec
shrb
dec
add
icebp
stos
jne
pop
cwtl
mov
push
push
jge
test
inc
les
ret
sbb
int3
jl
aaa
mov
popf
cmpsl
insl
mov
and
adc
mov
xor
jb
mov
repnz
dec
rorl
imul
and
pop
dec
or
cld
cmp
xor
lea
jp
les
dec
sub
and
and
mov
lods
je
scas
sub
mov
repnz
sbb
dec
push
dec
adc
mov
jo
std
mov
mov
mov
icebp
mov
xor
int3
xor
aaa
insb
xor
jno
mov
push
jle
xor
lds
aad
sbb
mov
cld
jb,pn
add
sahf
mov
mov
movsb
stos
jmp
ljmp
mov
insl
out
out
ficompl
gs
mov
mov
es
sbb
jg
insb
sub
data16
or
jno
std
stos
push
stc
ret
ret
out
mov
pop
mov
push
fstl
repnz
xor
jae
lods
xor
pop
push
or
outsl
stc
pop
aas
inc
outsb
xor
ret
out
popa
dec
jg
test
push
out
jne
adc
int3
mov
aas
or
sub
mov
pop
dec
das
jne
xchg
fldt
daa
pop
rcrl
mov
push
jnp
lds
das
pop
ja
fisubs
pop
leave
notl
jl
aaa
cmc
sbb
cmp
rclb
and
dec
in
xor
jne
inc
cmpsl
cmp
adc
in
int
xchg
test
fistl
lds
mov
leave
and
mov
rcll
les
mov
jbe
jae
xor
xchg
pushf
lods
mov
lret
inc
mov
pop
xchg
jne
cltd
or
push
mov
push
sbb
jb
or
cld
sub
adc
add
mov
dec
or
decb
insl
in
lock
sbb
gs
dec
mov
jp
scas
xor
insl
pushf
test
sti
push
sbb
stc
nop
mov
outsl
hlt
mov
insl
xor
or
adc
test
and
add
xor
jge
cmp
cmpsl
enter
gs
dec
mov
jno
sbb
jl
js
ret
sub
mov
and
mov
sub
fidivl
mov
dec
adc
ljmp
pop
xchg
aad
rol
sub
push
stc
push
add
std
xor
gs
dec
pop
push
sarb
test
add
inc
mov
and
push
adc
test
add
jo
cmp
popa
add
cmp
mov
ljmp
and
and
sub
lock
jb
hlt
loopne
sbb
mov
stos
lret
and
pop
mov
push
jb
gs
push
adc
les
js
mov
mov
mov
mov
mov
sbb
ret
mov
pop
mov
mov
add
hlt
lret
pop
dec
and
add
ss
leave
or
push
mov
inc
pop
jl
sarl
pop
ret
xor
mov
push
loope
xchg
in
push
incl
shl
pop
cwtl
mov
aam
test
das
shrb
xlat
pop
xchg
pop
push
dec
jg
jl
out
cltd
mov
push
aad
clc
mov
das
outsl
ffree
fadd
lret
mov
add
jmp
jo
ss
or
dec
clc
jae
mov
lret
loopne
lret
sub
dec
mov
lock
pushf
lea
dec
lea
mov
jae
loope
int3
fcmove
mov
xor
or
mov
aas
in
fidivs
stc
inc
ret
lods
icebp
pop
mov
mov
mov
adc
vgf2p8affineqb
mov
mov
insl
and
testl
pop
cmp
psubw
std
pop
notl
add
mov
jae
mov
and
cmpb
cs
jno
pop
push
in
cld
outsb
mov
push
negb
push
mov
imul
loope
cmp
daa
mov
stos
pop
lret
mov
icebp
hlt
mov
and
mov
jbe,pn
sbb
in
dec
jg
outsl
adc
inc
sti
mov
pop
cmp
cltd
mov
sarl
stc
test
out
fwait
les
xor
sbb
jo
xor
dec
das
mov
test
adcl
or
cmovne
fidivs
repnz
iret
jae
in
scas
mov
fistpl
in
filds
lret
jae
jae
jae
cs
mov
mov
in
push
jecxz
xchg
sub
pop
daa
sub
pop
lret
jg
jl
jae
inc
mov
mov
pop
jae
jae
jae
lahf
lahf
mov
mov
lods
imul
pop
cmp
out
sub
mov
mov
cltd
int3
mov
xor
mov
xor
sti
addb
lods
mov
enter
or
mov
jg
jle
fldt
fdiv
mov
leave
add
mov
push
xor
and
pop
rorb
jg
jl
jno
mov
jl
aaa
adc
inc
stos
xor
fistl
test
xor
and
mov
mov
dec
test
pop
gs
mov
cmp
jb
fisttpll
mov
jae
jae
jae
jne,pn
sbb
push
push
and
cmc
shrl
add
repnz
jecxz
cltd
stc
pusha
add
push
jle
jns
insb
xor
outsl
mov
and
push
mov
add
ret
jae
lret
pop
dec
dec
jl
push
test
aas
inc
insl
ret
cs
scas
repz
scas
idiv
icebp
mov
mov
js
jnp
test
pop
outsb
pushf
insl
cmpsl
dec
xchg
iret
pop
add
mov
mov
dec
jae
jae
jae
lcall
out
hlt
enter
test
std
pop
aaa
jmp
dec
call
daa
pop
jl
mov
push
mov
and
inc
mov
xor
lret
loopne
cs
mov
mov
and
adc
sti
and
sbb
push
sahf
push
gs
outsl
dec
pop
push
dec
jns
aas
ret
xchg
xor
xlat
sbb
fnsave
outsl
and
add
mov
mov
jge
mov
mov
adc
popf
jae
outsb
mov
fwait
jecxz
dec
stc
mov
or
push
cmc
push
pop
jg
in
and
daa
adc
mov
mov
scas
sbb
out
popf
xor
jb
mov
repnz
xor
fstl
sti
or
add
loopne
mov
call
mov
imul
jl
xchg
inc
std
cmpsl
pop
mov
ss
test
lea
dec
xchg
inc
adc
or
push
sub
jle
sti
xor
pop
repnz
adc
inc
mov
lcall
add
xor
leave
insl
sbb
cld
jb
shlb
popf
stos
jne
dec
mov
dec
dec
push
push
jge
addb
add
sbb
pop
stc
and
or
cli
shr
sahf
mov
mov
sbb
jg
cmp
sub
inc
in
pushf
add
mov
std
jo
mov
or
push
bound
push
roll
insb
mov
shlb
pop
sub
js
push
mov
push
into
push
or
sub
xor
cmp
lret
mov
insb
xor
push
fimull
in
dec
push
les
fdivl
std
pusha
idivl
cmp
divb
outsl
mov
call
push
push
add
lock
insb
cmp
out
subb
jle
cmp
mov
repz
sub
rcrb
repnz
push
jl
aaa
inc
std
inc
mov
popf
jb
ss
dec
subl
pop
xchg
movsb
push
imul
scas
repz
std
mov
rcrb
mov
adc
jp
test
loopne
push
or
and
sub
movsl
mov
jne
int3
pushf
out
sahf
pop
lds
jle
xor
and
adc
clc
dec
ret
push
mov
and
ds
mov
cwtl
pop
mov
cmp
mov
inc
jb
mov
repnz
xor
testb
rclb
jmp
idiv
xor
in
enter
std
imul
rorb
mov
cltd
pushf
dec
ret
adc
or
popa
nop
leave
imul
mov
sub
les
adc
sub
sub
dec
shl
cld
lods
scas
xor
jbe
adc
jbe
and
mov
scas
pop
mov
pusha
and
push
cs
out
frstor
mov
inc
adc
adc
mov
cs
jo
sbb
fnstenv
xchg
sub
sbb
inc
jge
add
mov
repz
mov
xchg
adc
mov
outsb
pushf
dec
xchg
xchg
jge
ds
mov
add
mov
sub
pop
jbe
fisubs
or
insl
mov
inc
pop
pop
sti
xor
add
add
pushf
pop
cmp
cmp
mov
xor
fstpl
hlt
mov
ret
jmp
vshufps
add
out
jmp
jne
push
enter
jae
cmp
aad
add
repz
pop
negb
in
mov
outsb
jo
mov
fldl
add
inc
mov
mov
repz
fisubrs
int3
jne
xchg
jge
test
add
mull
mov
test
pop
std
adc
inc
cli
cmp
jno
dec
roll
movsl
jbe
scas
xchg
dec
mov
jl
mov
inc
pop
mov
adc
sti
adc
shr
pop
lock
cmpsl
mov
repnz
mov
ret
pop
dec
pop
sti
mov
test
adc
sarb
sub
mov
fisttpll
jns
repz
sbb
pop
xor
dec
notl
stc
sti
mov
icebp
test
fwait
jb
mov
repnz
hlt
mov
mov
lods
stos
xchg
mov
cs
bound
inc
add
add
jne
pushf
cwtl
mov
dec
js
test
jnp
xor
rcrb
and
rolb
add
cs
popf
mull
ret
lods
stos
outsb
lock
pop
ljmp
cs
std
inc
xchg
sbb
xor
jne
mov
aam
cli
lahf
mov
lret
movsl
mov
lods
inc
jge
cs
sbb
pop
mov
or
aam
test
scas
mov
mov
stc
sub
pop
stc
and
adc
shrl
push
push
adc
aas
ret
sub
or
mov
mov
adc
enter
mov
xor
mov
mov
sub
inc
xor
out
cltd
mov
syscall
adc
inc
jbe
lcall
scas
js
lods
out
loope
aam
iret
sar
scas
xor
imul
xchg
dec
mov
cmp
mov
mov
dec
and
faddl
mov
sub
push
jae
cs
push
sbb
jecxz
out
inc
aam
test
mov
scas
mov
ret
mov
add
fistpll
xor
xor
add
cmpsl
test
and
mov
mov
mov
jl
js
test
pop
mov
sbb
jg
jle
shrl
xchg
add
mov
jb
pop
mov
repnz
xor
ja
insl
cmp
jne
xchg
cmpsl
pop
int
add
out
repnz
cwtl
adc
push
pop
jnp
les
pop
jno
pop
dec
mov
cmp
jae
faddp
fld
int3
mov
mov
mov
cmpsl
scas
jbe
sub
dec
add
inc
daa
xor
ss
sarl
pop
lret
mov
mov
in
shlb
pop
xchg
js
inc
insb
mov
and
adc
xor
scas
das
sub
sahf
adc
xchg
std
mov
jno
or
sbb
cmp
ret
pop
xor
std
mov
jb
filds
jecxz
sub
mov
fwait
xchg
inc
push
popa
mov
or
std
mov
cwtl
mov
and
scas
int3
xor
inc
lret
aaa
or
rorl
lock
mov
cs
orb
xchg
xor
mov
and
lock
xor
xchg
mov
or
es
aaa
mov
sub
add
sub
sub
hlt
and
xchg
inc
jle
test
add
hlt
sbb
sbb
stos
icebp
sbb
cmp
mov
and
mov
repnz
lret
cmpb
xlat
loope
ljmp
or
in
mov
cld
xchg
ja
mov
sti
das
jb
pop
pusha
or
add
iret
mov
push
mov
xor
rcrb
adc
adc
pushf
mov
testl
mov
push
fdivrl
js
dec
aas
jp
xchg
sbb
icebp
jno
xor
hlt
jl
xchg
divl
push
icebp
add
cmpsl
xor
mov
mov
js
mov
jecxz
clc
cmp
xor
mov
sub
pop
icebp
lock
mov
mov
push
xchg
sbb
sub
pop
mov
iret
addr16
outsb
or
test
dec
mov
mov
aaa
imul
add
xchg
lods
pop
adc
andb
pop
cs
jecxz
mov
jae
cmpsl
mov
repnz
xor
leave
lea
out
sub
stc
mov
cmp
stos
ss
fimuls
popa
insl
out
jo
mov
rcll
mov
jecxz
lock
leave
jb
mov
xor
lcall
ja
dec
mov
push
sti
fidivs
std
out
cmpsl
mov
scas
add
or
and
outsb
scas
lods
and
icebp
jb
xor
xor
loop
shrb
sub
jne
popf
and
sub
mov
cwtl
sbb
adc
movsb
lods
ret
jmp
outsl
or
and
dec
leave
rol
ret
out
pop
ss
or
adc
daa
inc
dec
sbb
les
rcrl
adc
addps
mov
dec
repnz
and
cmp
add
xor
and
outsl
cmp
outsl
mov
sbb
mov
sub
dec
xor
sub
hlt
lds
ljmp
lock
sbb
mov
loop
into
and
sahf
lods
pop
xor
mov
mov
fnsave
insb
dec
xchg
adc
in
xchg
xchg
jne
lods
mov
fsubrs
dec
sbb
push
aaa
mov
lahf
rorb
mov
sbb
jae
sbb
sarl
js
or
mov
sub
xchg
call
pop
cld
sub
aaa
xchg
sub
ret
push
insb
ret
xchg
push
xchg
mov
mov
dec
xchg
cmp
mov
push
jmp
nop
xchg
inc
or
das
push
or
insl
push
lock
jne
pushf
je
cmp
push
xor
mov
dec
adc
and
ret
ret
mov
les
cmp
cld
cmp
fld
pop
mov
sub
loope
mov
shlb
sbb
mov
inc
imul
movsb
xor
sub
stos
lret
inc
imul
jno
xor
cmp
dec
lds
sarb
mov
jae
repnz
mov
aas
mov
test
push
ret
xor
mulb
push
xchg
sahf
mov
or
daa
xor
jb
ss
fwait
mov
lods
dec
xchg
adc
jb
cmp
push
xchg
jle
fdiv
lods
out
and
icebp
pop
test
test
sbb
mov
mov
and
xor
mov
popa
scas
in
aam
adc
js
sub
outsb
lds
lods
rol
dec
lds
iret
mov
xchg
xchg
ljmp
mov
xor
movsb
adc
fidivs
pusha
fwait
test
mov
mov
dec
sub
in
mov
jo
inc
test
mov
lahf
scas
xor
sub
mov
mov
push
aad
imul
movsb
stos
xchg
leave
and
cmp
stos
insl
pop
into
pushf
adc
jo
hlt
fsubr
mov
add
jae
jae
hlt
mov
sbb
ret
mov
ret
out
jo
aad
xchg
and
mov
movaps
xchg
and
mov
cmpsb
xor
mov
jecxz
jl
sbb
ret
xor
int3
rorl
rol
push
sarl
lods
mov
xor
mov
mov
xchg
pushf
cltd
and
adc
mov
ret
sbb
mov
sub
popf
xchg
es
or
mov
xor
out
jl
pop
mov
xchg
loope
xchg
mov
std
lret
mov
insl
cmp
in
es
dec
add
cmpl
xor
xor
jl
mov
ret
dec
xchg
jne
pop
cmc
in
lcall
xor
jl
rcrb
nop
xchg
pop
lahf
sub
lea
mov
xor
enter
mov
push
jle
push
adc
and
stos
sbb
and
mov
xchg
outsl
pop
jl
js
divb
insl
cwtl
pop
movsb
push
xchg
xor
cmp
fwait
icebp
gs
add
hlt
out
movsb
popf
xchg
icebp
inc
fimuls
test
out
pusha
test
das
mov
lods
dec
scas
dec
ret
outsl
and
mov
mov
rcrl
sahf
add
rcrl
outsb
adc
cmp
mov
aas
mov
and
pop
mov
adcb
lods
ret
xchg
xchg
mov
mov
sub
mov
mov
faddl
jecxz
call
insb
adc
repnz
mov
adc
and
sbb
imul
loop
fists
mov
cltd
jb
jne
add
dec
xchg
jmp
mov
icebp
sahf
std
or
lret
sub
lret
mov
lcall
lods
mov
mov
hlt
scas
mov
pop
sbb
or
mov
cwtl
ret
lcall
int
mov
pop
dec
movups
mov
sub
xchg
cmpxchg
mov
popf
jge
or
mov
bnd
push
mov
js
call
scas
lods
jo
cmpsl
lds
shrb
ret
les
adc
add
cmpsb
xor
mov
arpl
sbb
das
adc
xor
jae
hlt
mov
sub
cs
mov
mov
ja
lods
ss
mov
adc
mov
pop
mov
mov
dec
ret
dec
pop
insl
aaa
repnz
or
mov
shl
mov
out
jl
call
or
sub
dec
rol
inc
add
dec
in
mov
jne
mov
jecxz
xor
mov
repz
out
xchg
es
pushf
nop
mov
mov
mov
test
sahf
jmp
mov
xor
aas
mov
xchg
xchg
cltd
idivb
ret
les
lock
lds
lcall
stos
mov
pushf
daa
sbb
leave
mov
xchg
adc
pusha
cs
dec
dec
loope
mulb
dec
mov
push
sub
js
xor
hlt
icebp
jno
imul
jecxz
lcall
frstor
mov
jg
jle
mov
cld
jb
mov
test
xor
scas
std
mov
mov
fwait
ret
mov
pusha
dec
mov
inc
dec
cmpsb
ss
mov
xchg
cmpsl
push
ret
rol
ret
cmp
daa
xor
inc
dec
lcall
mov
sub
lds
sarl
hlt
das
mov
movsb
mull
sbb
imul
inc
daa
mov
sbb
jno
mov
jne
hlt
sti
inc
call
sti
cmpsb
scas
jae
leave
mov
sbb
ja
mov
xchg
cmp
xchg
dec
mov
mov
daa
out
ret
nop
and
js
sbb
xchg
scas
mov
movsl
sub
movsb
sti
cs
add
push
in
aaa
xchg
movsl
hlt
test
jg
in
cmp
xchg
sbb
insl
icebp
push
mov
xchg
xchg
mov
inc
mov
cmp
jp
mov
in
scas
cmc
mov
xchg
mov
and
adc
das
push
mov
mov
adc
cmp
das
mov
lock
add
cltd
mov
xor
mov
and
mov
aam
rcll
pop
push
xchg
xchg
mov
cmpsb
jmp
mov
mov
inc
xchg
sbb
adc
sti
ret
insl
sbb
les
les
add
add
pop
adc
in
sti
pop
popa
jne
jg
std
pusha
rol
shrl
lods
scas
push
pop
out
lock
add
mov
cltd
push
push
lret
int
mov
mov
or
ljmp
xor
jae
sbb
pop
jle
mov
mov
jae
popf
inc
jae
jae
jae
ja
add
aad
leave
jae
xor
add
and
movsb
aaa
jnp
aas
mov
or
inc
add
outsb
std
cmpsl
mov
dec
xor
mov
repnz
cltd
sti
mov
add
add
add
xchg
xchg
cmpsl
lcall
mov
xor
stos
enter
les
jno
mov
and
sbb
add
std
daa
imull
and
xor
mov
mov
pusha
dec
lods
les
xchg
mov
lea
dec
cltd
fstl
xchg
aas
and
push
outsb
xchg
stc
xchg
test
shlb
add
outsl
std
call
pop
jbe
mov
xor
jae
sahf
and
push
xchg
outsl
sub
nop
cmpsb
xor
mov
pop
imul
mov
ret
mov
add
mov
adc
sub
jl
cmpl
xchg
mov
push
movsb
jne
mov
das
fs
ja
pop
jecxz
xchg
mov
sbb
and
xchg
popf
jae
ja
mov
into
mov
pop
dec
or
ret
adc
dec
lods
imul
imul
dec
cli
dec
mov
mov
sub
outsb
aad
dec
scas
stos
push
je
cmc
xchg
and
jae
sbb
mov
std
sbb
in
cmp
sbb
fsubp
nop
stos
insb
out
hlt
jo
dec
loopne
add
mov
jno
lret
mov
inc
inc
mov
les
shrb
cld
insb
or
scas
xor
lret
mov
sub
mov
repnz
xor
mov
mov
push
xchg
mov
notl
movsl
movsb
movsl
leave
pop
dec
sub
js
adc
jae
inc
mov
mov
pushf
std
int3
sti
cmp
outsb
movsb
idiv
sbb
mov
pop
xor
stos
and
add
mov
ret
orl
daa
rclb
mov
fstpt
outsb
xorb
pop
pmulhw
test
hlt
pushl
lods
fstl
cmp
cwtl
sbb
or
and
shrl
in
mov
popf
pop
ret
leave
nop
or
pushf
lock
adc
mov
xor
sub
les
lds
mov
pop
ret
lods
push
lods
push
scas
jg
outsl
test
test
pop
mov
xor
das
sub
sbb
sub
andb
mov
orb
mov
enter
mov
adc
in
pushf
aad
mov
mov
lods
mov
leave
cmp
aaa
mov
inc
leave
sub
inc
aas
imul
jecxz
jmp
icebp
sub
cmc
jecxz
adc
rdtsc
in
aas
cld
sti
lahf
bound
ret
xor
push
xchg
dec
inc
cmp
mov
shrb
lea
or
sub
dec
lods
inc
in
xchg
in
mov
jns
lock
dec
les
or
mov
mov
daa
std
xchg
mov
or
dec
push
movsb
daa
cmp
inc
push
fdivrp
or
pusha
add
jecxz
cs
cli
and
mov
mov
jo
mov
cmp
inc
mov
inc
pop
mov
mov
mov
mov
xor
jb
fdivl
pop
cs
lcall
scas
sbb
cmp
dec
mov
cmp
push
mov
jb
jmp
imul
cmp
mov
ret
mov
dec
dec
les
jmp
insl
xor
pop
mov
fwait
mov
pop
rorb
lods
les
mov
stos
ret
dec
cmp
jae
hlt
mov
inc
mov
dec
mov
mov
adc
daa
ss
lods
inc
icebp
cmp
lret
or
je
sbb
and
mov
and
ljmp
movsl
and
sub
sub
or
je
daa
ja
hlt
or
cli
jbe
lods
xchg
push
xchg
xchg
jno,pn
stc
loopne
pop
jp
mov
stos
stos
xor
inc
enter
inc
notb
xchg
xchg
movsb
jne
and
mov
mov
adc
mov
xor
lds
divb
test
icebp
mov
and
mov
xor
cmpsb
inc
mov
lahf
or
cmp
dec
scas
cmpsl
mov
mov
es
adc
ret
sti
and
mov
out
icebp
repnz
hlt
lcall
cltd
mov
xor
cs
mov
shll
jl
lret
cmpsl
lods
jo
hlt
sub
xor
adc
cmpsl
mov
sub
outsb
das
sub
ljmp
call
xor
xlat
in
xchg
sbb
inc
ljmp
xchg
cmp
fidivrl
inc
outsl
mov
mov
and
loopne
ret
imul
outsb
sbb
push
mov
sti
cltd
xor
mov
scas
sti
pop
xor
push
push
cmp
xchg
shll
popf
hlt
scas
lods
mov
pop
das
nop
jo
xchg
xchg
mov
daa
lret
sbb
xor
jb
push
cmpsl
hlt
rcr
ret
repnz
push
lods
or
cmpsl
add
in
js
sub
enter
cmpsl
imul
movsb
cmp
mov
int3
nop
xchg
inc
mov
xchg
mov
mov
testb
jecxz
jb
lea
or
pop
pop
push
xchg
mov
cs
mov
sbb
ret
ret
mov
lds
or
xchg
cwtl
mov
cmp
sbb
pop
mov
je
mov
jge
inc
sbb
cmp
add
mov
dec
btc
xchg
imul
les
mov
jb
sarb
mov
cmp
sarl
cwtl
push
xchg
sub
ret
xor
or
mov
jb
hlt
mov
mov
push
pop
jmp
je
cmp
sub
inc
in
mov
sti
mov
lds
sub
fs
mov
xchg
test
or
push
std
or
xchg
pop
mov
inc
inc
mov
cmp
popa
jno
mov
push
xchg
ret
sub
xchg
xor
pop
lds
sbb
shrb
xor
jne
int3
mov
lahf
xchg
pop
fs
outsl
dec
inc
xchg
mov
out
jl
push
xchg
xor
fcmovnbe
lods
xchg
sub
xchg
xchg
xor
mov
pusha
in
mov
and
dec
sbb
sub
popa
in
and
jmp
mov
xor
lds
mov
lods
dec
ret
adc
imulb
enter
lahf
pushf
mov
inc
or
xchg
lods
pop
lock
inc
mov
xchg
lret
mov
lods
stos
cltd
inc
pop
pop
insb
inc
out
sub
lods
js
fnstenv
outsl
enter
mov
lock
mov
shll
cmp
cmpsb
mov
ret
mov
stos
xchg
mov
add
lahf
jne
lods
pushf
mov
lds
mov
lods
push
lods
push
scas
std
cmpsl
lcall
dec
xchg
pop
mov
lds
mov
fildl
std
imul
inc
adc
scas
das
dec
mov
stos
out
inc
mov
inc
aaa
sarb
clc
stos
push
xchg
mov
sub
jp
dec
mov
mov
mov
sti
ret
pop
mov
mov
cwtl
xor
inc
fildl
mov
mov
mov
mov
negb
stos
push
xor
cmp
cmc
jno
xchg
cmpsb
sub
fisttpl
adc
int3
mov
lds
notl
push
mov
xor
xchg
cmpsb
in
xchg
adc
and
xchg
int
sbb
pop
rep
les
add
test
std
adc
imul
mov
sub
sub
mov
popf
rorb
jno
mov
ret
ja
movsb
push
aaa
push
movsl
sahf
shl
jl
mov
in
lods
jle
mov
fmulp
movsl
ljmp
enter
add
std
inc
icebp
jbe
pushf
loope
dec
in
loop
aad
dec
idivb
gs
mov
scas
pop
in
int
scas
adc
hlt
das
fadds
les
sub
or
repnz
mov
repnz
mov
lock
in
and
mov
inc
repnz
cmpsl
mov
scas
ja
das
xchg
lcall
mov
xchg
xchg
in
inc
repnz
cmpsl
xchg
mov
lret
scas
sbb
adc
mov
icebp
xor
mov
ljmp
sbb
push
stos
cwtl
lret
inc
mov
push
xor
mov
das
jo
xor
mov
add
xchg
dec
rolb
sbb
push
popa
push
xchg
jg
outsl
jns
add
or
and
mov
std
mov
mov
cmp
dec
imul
scas
cmp
jo
lret
rorb
neg
jno
xor
xor
xor
and
sti
cmp
mov
and
insl
and
mov
sbb
or
icebp
movsl
xor
jb
hlt
xchg
mov
imul
enter
mov
lds
jae
adc
or
inc
cmpsb
frstor
adc
ret
or
jmp
or
ja
mov
fsubrs
movsl
sti
leave
lahf
mull
sub
repz
rcll
push
movsl
pop
cmpsb
int
fcmovne
mov
cmp
sahf
sub
xchg
das
push
fldl
mov
std
dec
mov
lock
insl
imul
stos
adc
pop
sbbl
adc
or
jns
or
xor
ds
lock
xchg
sbb
inc
fwait
mov
out
jno
or
int3
outsb
mov
mov
rorl
add
sbb
hlt
lahf
dec
cmpsb
mov
std
push
divl
fwait
inc
ljmp
cmp
jb
inc
add
insl
lds
mov
orl
inc
imul
sbb
sahf
sub
dec
lds
fnstsw
in
jmp
jbe
cmp
lret
jle
in
loopne
outsb
or
ret
mov
leave
or
and
mov
lcall
adc
xor
and
mov
scas
push
stc
sub
nop
iret
enter
cmp
sub
jl
inc
mov
pop
vshufpd
mov
cmp
lds
push
cmpsb
outsl
sbb
sub
jl
xchg
mov
cmp
mov
sub
popf
cmp
push
xchg
dec
add
sbb
or
rcrb
pop
dec
inc
mov
dec
mov
inc
add
in
mov
pop
mov
sub
and
in
mov
sub
sub
add
hlt
mov
sub
fldcw
loope
push
dec
test
sub
mov
or
jl
cmp
jg
outsl
and
inc
sbb
sub
sub
imul
pushf
pop
or
cmpsl
sti
mov
sub
shrl
adc
add
shl
lcall
xchg
ret
push
sarl
aas
add
sbb
xor
mov
xor
fisttpll
pop
cltd
mov
jb
mov
cmc
add
fdivrl
and
mov
push
cmp
mov
jae
aas
mov
fchs
mov
aam
jle
or
loop
jo
jecxz
iret
stc
push
mov
movsb
lds
dec
lret
jge
inc
cli
ret
ljmp
mov
mov
std
les
xchg
leave
idiv
test
mov
xor
mov
in
mov
pop
pop
in
daa
cwtl
and
adc
shrl
and
stos
in
jb
lret
stos
inc
mov
cltd
mov
fistl
ss
lcall
sbb
mov
lcall
dec
movsb
lahf
andb
pushf
and
les
test
xor
or
cmp
int
xchg
in
pushf
stc
ror
popf
arpl
cmp
mov
enter
pop
aas
mov
movsb
pop
insb
scas
mov
pop
clc
insl
xor
int3
in
mov
push
jb
sahf
inc
jne
cmp
in
mov
aaa
sbb
cmp
ja
int3
cs
xchg
gs
add
or
stos
scas
aas
jb
mov
div
inc
jmp
pop
xor
cs
into
std
lret
mov
mov
lcall
push
sti
rorb
cmc
jns
xor
das
mov
mov
mov
sbb
je
mov
sub
shll
inc
and
cs
jo
mov
mov
int
mov
sbb
pop
pop
sbb
outsb
movsb
xchg
xchg
jl
adc
ljmp
outsb
cmp
add
pop
xchg
fwait
stos
mov
xor
in
inc
lret
inc
stos
adc
adc
mov
cmp
ss
lahf
and
mov
jl
sub
xchg
sub
jno
mov
nop
pop
ss
movsb
fidivl
loope
xchg
dec
test
add
ret
sub
cwtl
insl
dec
xchg
xor
fdivrl
xchg
cmp
or
scas
push
mov
xor
cmpsl
dec
scas
jo
pop
sub
cmpsl
dec
pop
lods
inc
loope
outsb
xchg
into
lcall
mov
dec
out
xor
loope
and
daa
xchg
or
sub
pop
movsl
jge
inc
jb
fstpt
divb
movsl
mov
int3
and
mov
and
dec
mov
ret
xchg
pushf
mov
or
add
pop
jo
mov
in
push
in
xchg
jno
or
pop
mov
decb
and
mov
ss
mov
xor
xor
ficompl
repnz
fimuls
dec
icebp
xchg
xor
sbb
xor
inc
sbb
or
mov
int
jb
sub
jno
sbb
adc
stos
stos
cmp
sahf
lds
adc
scas
popf
repz
pop
les
jecxz
xor
or
add
sahf
xchg
fstps
jb
ss
fwait
mov
cs
adc
add
push
lahf
std
lret
sti
test
cmpsb
adc
cmp
pop
mov
jbe
cmpsl
sbb
adc
sar
xorb
in
out
mov
sbb
and
fstpl
sbb
std
xchg
mov
lods
lea
push
in
and
mov
negb
cwtl
repz
in
pushf
int
xchg
inc
int
aas
or
sub
pop
push
pop
dec
ret
sub
sahf
das
inc
ja
fstpt
in
cwtl
mov
lcall
pop
sub
pushf
sbb
inc
fwait
adc
sbb
mov
mov
and
push
ss
mov
xor
arpl
aas
xchg
push
xchg
cld
int
and
dec
dec
push
xchg
mov
or
pop
or
addl
mov
dec
fcompl
xor
enter
xchg
mov
scas
push
sti
or
outsw
cmpsl
push
pop
jne
sbb
adc
stc
mov
addr16
push
and
dec
jb
enter
pop
icebp
cmp
lds
daa
ds
mov
dec
xchg
and
data16
jae
mov
sbb
int
jp
mov
daa
jle
mov
and
sub
inc
in
push
adc
jle
cmp
add
fnstsw
sti
roll
mov
and
cmp
dec
add
xchg
add
xor
ret
mov
mov
xor
or
dec
cmp
inc
and
ja
out
repnz
pop
neg
jecxz
and
mov
imul
sub
fwait
push
mov
leave
xchg
or
ljmp
cld
sbb
mov
cmp
cmp
fsubrs
adc
inc
mov
fnstsw
orps
xchg
call
out
in
in
scas
pop
mov
pop
inc
cmp
negb
sub
push
shr
mov
add
jae
sub
and
push
les
inc
or
mov
das
pushf
add
sbb
mov
mov
and
xor
lret
mov
lock
xor
cmp
out
loop
cld
lods
xor
inc
and
cmp
sub
xchg
inc
push
push
dec
sbb
jne
add
add
jb
sbb
aas
ja,pn
lods
xor
xchg
mov
leave
scas
dec
jecxz
xchg
add
cmp
cmp
mov
mov
ret
out
imul
mov
mov
jl
mov
out
int
fldenv
imul
dec
push
mov
pushf
rcl
or
sub
jbe
inc
mov
cltd
mov
or
clc
dec
cmp
ja
les
pop
inc
cs
cwtl
sub
jecxz
pop
mov
or
insl
sbb
push
subl
outsb
outsl
jecxz
lcall
sti
or
outsb
mov
mov
cmc
in
mov
leave
xchg
mov
imul
push
lahf
aaa
and
sub
lea
xchg
mov
push
enter
xchg
add
inc
cmc
shll
mov
pop
jle
and
xchg
mov
xchg
mov
push
ret
jo
hlt
pop
insl
fisttps
inc
ret
mov
lahf
int
xor
aas
ss
mov
mov
mov
jecxz
jecxz
xchg
mov
fwait
leave
jbe
mov
in
and
rolb
inc
aas
ret
hlt
mov
aaa
inc
movsl
cmp
mov
sbb
xchg
imul
inc
dec
in
leave
and
hlt
cmp
xchg
sahf
repz
lret
mov
mov
inc
or
push
jne
inc
mov
xor
cltd
xor
xchg
aas
jne
rcll
insl
mov
or
inc
in
icebp
mov
hlt
lods
das
out
ret
mov
dec
cmpsb
data16
mov
mov
jmp
mov
sahf
adc
pop
outsl
and
jg
jg
mov
sti
mov
stc
mov
xchg
das
sbb
scas
push
fnstsw
outsb
xchg
mov
xor
jae
sbb
inc
xor
jne
shll
ret
pop
push
das
popf
pop
adc
mov
minps
jne
outsb
nop
jo
cmp
sbb
dec
cmp
mov
push
outsb
xchg
inc
lahf
sub
sub
inc
ja
insl
daa
xor
cld
movsb
push
outsl
or
jle
mov
es
cmpsl
ret
mov
jae,pt
outsl
mov
mov
stc
add
xchg
je
pushf
cmc
xor
xchg
fnstenv
and
dec
and
mov
mov
sbb
jg
cmp
mov
sub
cmp
adc
hlt
sub
outsb
stc
hlt
mov
aas
test
mov
sbb
sub
adc
mov
adc
adc
sub
pop
mov
ret
xor
push
mov
daa
stc
mov
dec
mov
xor
xor
rorl
xor
gs
cmpsb
and
cmp
mov
xchg
stos
popa
mov
inc
xchg
add
stos
mov
cmp
or
mov
scas
push
fwait
mov
mov
aas
cltd
sbb
cwtl
outsb
xchg
sub
jl
mov
or
ret
daa
adc
inc
inc
pop
dec
mov
jnp
aas
inc
icebp
jno
xor
hlt
loopne
mov
cs
push
jecxz
sahf
lret
sub
xchg
add
lods
mov
jnp
adc
push
push
fldt
and
and
js
aas
leave
mov
aaa
jne
dec
xchg
mov
dec
inc
hlt
daa
lods
aas
mov
pop
rol
lret
pop
aas
les
pop
hlt
sub
and
fldt
xor
mov
les
ret
sti
scas
push
mov
lock
pop
lcall
cmp
add
movsb
and
enter
pop
lods
outsl
ret
inc
dec
xchg
jmp
adc
xor
mov
push
push
int3
nop
aam
adc
mov
sbb
cmp
mov
cmp
cwtl
dec
ljmp
inc
icebp
daa
divb
das
inc
ja
xchg
cmpsl
lods
rorl
mov
mov
ret
scas
leave
aad
add
test
mov
xor
mov
leave
mov
ss
dec
jg
add
pop
in
xchg
gs
mov
dec
and
push
adc
adc
adcl
jp
mov
or
adc
dec
mov
sub
xchg
in
and
push
sub
mov
int
add
jecxz
add
ret
xchg
push
pop
out
outsl
xor
int
ret
pusha
les
subl
std
xchg
and
xchg
movsl
fiadds
jae
in
insb
mov
mov
push
xchg
and
push
cltd
lahf
jle
push
pop
sub
mov
inc
lret
fidivs
xchg
mov
cmpsb
mov
call
cmp
mov
mov
sub
es
shrl
hlt
mov
xchg
mov
popf
sub
sbb
xchg
mov
movsl
cltd
mov
mov
hlt
rcr
lahf
pushl
les
pop
aaa
xchg
xchg
mov
xchg
ljmp
jecxz
mov
sarl
sub
adc
push
cmp
bound
movsb
leave
popa
insl
mov
mov
lods
mov
shrb
add
jbe
adc
fsubs
mov
xchg
pop
cmp
pop
jecxz
lea
aaa
fstpt
adc
add
lods
xor
pop
lea
outsb
jle
xor
in
mov
rcrl
dec
mov
adc
in
bt
dec
daa
and
mov
inc
sbb
xor
sti
xor
mov
add
or
cmp
xchg
mov
fstpl
and
mov
ret
xor
rorl
add
ret
stos
and
dec
sub
add
out
mov
hlt
inc
jecxz
push
xor
imul
or
filds
imul
mov
push
xchg
stos
jne
mov
xor
jmp
mov
gs
sub
mov
xor
jnp,pn
lods
hlt
mov
sti
sbb
mov
shr
scas
cmpsl
jno
mov
jb
ss
or
sti
jns
movsl
inc
out
mov
outsb
movsl
xor
xchg
popf
aas
or
jne
jmp
and
and
ret
lahf
mov
fwait
adc
mov
cmpsb
push
in
rcrl
mov
mov
xor
cmp
in
or
push
shll
rorb
shr
mov
jae
hlt
clc
jecxz
cli
ss
movb
cltd
mov
stos
hlt
add
dec
or
call
dec
repz
scas
imul
idivb
popa
lods
xor
aas
fdivr
cltd
mov
xor
loop
xchg
sub
adc
mov
adc
pushl
sub
out
cmp
or
ret
les
lods
lods
pusha
mov
divb
add
or
icebp
mov
mov
scas
inc
cmp
das
cmp
mov
inc
mov
pop
lahf
mov
sahf
subb
int
push
fsubrs
sub
adc
dec
cmp
cmp
sbb
sbb
test
or
adc
inc
push
lods
cmp
int3
cmp
inc
sub
sub
imul
sub
cwtl
adc
insb
jae
push
adc
ret
mov
inc
add
std
mov
mov
adc
jne
pop
out
gs
call
add
sbb
out
in
lods
push
outsl
sbb
fdivrl
sbb
xchg
xor
jae
hlt
popf
in
sbb
xchg
mov
cmp
int
mov
adc
inc
aas
popa
lods
xchg
mov
jb
jns
mov
push
movsl
add
jmp
lods
jbe
movsl
and
mov
or
dec
jecxz
enter
pop
jne
add
pusha
mov
icebp
fwait
and
or
pushf
stos
cwtl
sub
xor
test
sar
pop
mov
insb
push
jae
inc
jl
test
pop
repnz
xor
xor
test
icebp
ja
mov
es
mov
icebp
pop
dec
mov
lcall
jbe
or
xor
mov
mov
test
in
ret
lods
mov
mov
in
sti
scas
in
mov
fsubr
adc
lcall
sbb
inc
mov
popf
aaa
leave
sbb
testb
or
icebp
bnd
sbb
mov
data16
inc
lret
xchg
xchg
and
cmp
inc
sbb
cmp
xchg
dec
test
mov
insl
inc
testb
and
popa
jecxz
data16
sarl
cltd
jecxz
inc
shr
sahf
pop
imul
das
and
inc
and
dec
fwait
inc
mov
fisttpl
js
inc
push
loop
xchg
xchg
aaa
xchg
mov
ret
pushl
vmovss
adc
sub
add
mov
outsb
jae
push
sub
incl
mov
xchg
add
dec
lcall
cmp
push
das
mov
enter
push
hlt
cvtpi2ps
ja
scas
popf
sub
xchg
sbb
sub
mov
cs
js
inc
xchg
sub
faddl
pop
mov
inc
loopnew
test
aaa
ret
mov
scas
push
mov
xorb
push
ja
outsl
adc
push
jae
jno
sub
sbb
stos
mov
bnd
cmpsl
pushf
and
and
outsb
mov
in
cltd
jl
popf
mov
mov
insl
fwait
mov
xor
outsl
xor
adc
js
xchg
mov
mov
pop
inc
outsb
stos
and
dec
arpl
mov
fwait
imul
cmp
clc
cwtl
mov
push
out
xor
sbb
mov
fists
nop
dec
lds
dec
and
mov
out
notb
roll
lea
or
mov
mov
vunpckhpd
mov
mov
add
add
add
loope
dec
inc
pop
dec
lcall
shll
int
mov
outsb
lcall
daa
add
aaa
pop
jmp
and
add
lret
cwtl
xor
jne
lods
scas
add
adc
jecxz
cmp
icebp
les
mov
shrl
in
aas
shl
add
fnstenv
lcall
mov
mov
jle
adc
imul
mov
ret
inc
add
sbb
mov
inc
fnsave
int
aad
lock
iret
psrld
push
movsb
sub
inc
outsl
mov
mov
cmp
lret
stc
or
notl
in
subl
jl
cmpsl
les
xchg
and
add
add
mov
unpckhps
icebp
jmp
sarl
out
in
push
push
xchg
and
mov
dec
mov
ljmp
xchg
out
jecxz
dec
in
aas
loop
and
popf
or
cmpsl
stc
add
sbb
js
mov
in
mov
xchg
adc
sbb
push
daa
scas
jno
mov
aad
mov
ffree
xchg
xor
repz
les
cmp
cmp
fstpl
sahf
fstpl
mov
shll
mov
lahf
hlt
jmp
cmp
aam
add
mov
enter
add
adc
int
add
inc
orb
xor
fstp
jne
or
xchg
rol
hlt
cmc
xchg
inc
and
popf
iret
push
cmp
pop
mov
cmc
dec
adc
mov
hlt
mov
insb
xor
das
xchg
inc
and
inc
fisttpll
cmp
jl
clc
add
add
out
cs
icebp
push
fidivrs
in
loopne
es
push
mov
or
ret
lods
fcmovbe
mov
pop
mov
in
pop
in
mov
cltd
and
aas
js
add
jmp
in
xor
int3
aad
in
mov
push
sub
xor
jb
movsl
loopne
and
iret
fdivr
inc
loop
jne
outsl
das
add
ffree
scas
repnz
cli
cmp
out
dec
inc
fidivrl
arpl
mov
cld
mov
mov
mov
stos
std
ret
push
pop
lds
enter
mov
xchg
mov
setae
mov
pop
mov
jae
jae
hlt
int3
cs
rorb
ret
adc
scas
in
xor
mov
fwait
les
xchg
xorb
inc
sub
mov
bound
lahf
ror
and
adc
dec
sbb
imul
fwait
cmpsl
cwtl
daa
push
sub
arpl
mov
mov
les
jae
ja
push
ss
jo
cmc
inc
pop
loope
add
and
add
std
lahf
sub
mov
mov
in
sahf
and
sub
xor
lods
xor
push
cltd
stos
gs
mov
mov
movsb
push
mov
push
daa
xchg
mov
int
fsubs
pushf
dec
mov
stos
cmpsl
jnp
test
int
jae
pusha
mov
outsb
shll
mov
inc
int
leave
imul
or
adc
sbb
lea
rcll
xchg
imul
mov
inc
cmp
cli
add
sbb
add
movb
sub
in
scas
nop
nop
lds
dec
cs
hlt
std
testb
add
mov
adc
xchg
and
mov
mov
js
fiaddl
push
jle
je
popf
push
sahf
push
xchg
jl
js
inc
lcall
hlt
cmpsb
jecxz
mov
mov
int3
mov
adc
jg
jle
sti
sbb
jae
cmc
mov
mov
pushf
sbb
arpl
xchg
les
stos
xor
data16
mov
xchg
mov
inc
daa
mov
sbb
xchg
mov
cmp
scas
fstpl
sbb
xchg
pop
xor
lods
jne
mov
sahf
mov
ficoms
mov
and
mov
aam
xchg
fnsave
aas
hlt
std
cwtl
mov
inc
scas
and
or
leave
imul
mov
cmp
ja
fldt
outsl
aas
nop
jg
std
in
mov
xchg
stc
cwtl
and
lds
mov
push
es
mov
mov
sbb
lods
jl
mov
sahf
and
fimuls
pop
movsl
in
lods
scas
dec
inc
mov
mov
xor
lret
mov
xchg
xchg
add
scas
out
mov
mov
arpl
xchg
xchg
movsb
sub
mov
xor
mov
jecxz
cmpsb
movsb
lods
mov
fidivrs
or
icebp
or
add
or
lods
jbe
mov
cwtl
es
mov
pop
or
and
fstpl
nop
xor
mov
aaa
and
mov
in
mov
fidivrl
dec
xchg
leave
cltd
lahf
jle
aam
xchg
aaa
popf
mov
mov
popf
out
das
ret
inc
xchg
ret
push
inc
scas
adc
mov
movsl
movsl
jne
mov
outsb
lods
jb
add
push
lea
enter
xchg
jl
xchg
adcb
jae
cmp
mov
mov
inc
mov
mov
lds
lods
imul
std
lods
imull
rolb
popf
inc
sahf
jo
cltd
add
inc
push
jne
sti
enter
add
int3
dec
mov
mov
mov
mov
or
fdivl
xchg
fnstcw
pop
movsb
les
or
enter
dec
in
sub
ret
inc
mov
push
shlb
scas
fisttpl
lods
imull
shll
mov
mov
movsl
pop
mov
mov
cmp
hlt
add
aaa
and
enter
mov
xchg
lcall
mov
mov
sub
lods
pop
scas
in
sub
mov
mov
mov
mov
mov
popf
movsb
mov
add
dec
xchg
js
xor
mov
xchg
mov
pop
xchg
adc
mov
std
ret
jecxz
lds
jle
mov
cmpsb
mov
movsb
lahf
mov
test
and
mov
mov
jl
push
popf
or
lcall
leave
inc
lahf
cmp
mov
dec
mov
js
and
imulb
fwait
and
daa
popf
cld
inc
push
xor
leave
push
mov
sub
sub
mov
ja
dec
mov
mov
ret
shll
icebp
das
lods
lcall
test
aam
mov
mov
imul
hlt
dec
and
pushf
mov
inc
hlt
xchg
pop
es
outsb
cmp
mov
sub
and
int
mov
mov
xor
xchg
add
mov
sub
and
aas
xchg
xchg
pop
and
nop
aas
xchg
xchg
lcall
mov
mov
rol
ret
sbb
ret
test
inc
add
mov
jae
jne
lods
mov
xchg
xchg
xchg
ret
xchg
add
lds
jae
idivb
cmovg
jle
mov
sbb
mov
lods
cmc
add
mov
dec
mov
mov
mov
mov
inc
and
popf
mov
mov
mov
lods
imul
stos
mov
rcr
ret
adc
xchg
jae
jne
add
sub
mov
stc
movsb
addr16
dec
popf
mov
mov
mov
wrmsr
hlt
xchg
pop
mov
jbe
cmpsl
icebp
mov
enter
xchg
ret
cwtl
adc
aam
adc
lea
enter
lea
mov
std
movsb
fldt
adc
ror
mov
imul
leave
nop
add
cltd
pop
dec
stos
aam
sahf
js
mov
sbb
mov
enter
mov
movsb
adc
push
mov
and
sub
lcall
les
mov
sub
mov
enter
adc
sahf
sub
mov
cwtl
xor
xchg
movsl
sbb
push
or
mov
lahf
imul
adc
enter
notb
sub
mov
adc
xor
pop
xchg
mov
push
xor
cmp
xchg
setbe
and
test
shlb
lret
xchg
jbe,pn
xchg
stos
movsb
sub
cs
sub
cmpsb
jle
mov
mov
xor
ret
sub
scas
xchg
cmp
adc
xchg
popa
jne
ret
aaa
adc
mov
hlt
mov
dec
mov
test
stos
mov
scas
fisubs
nop
fstl
aaa
mov
xchg
mulb
mov
sbb
cs
stos
in
and
xchg
mov
mov
mov
popf
frstor
leave
mov
lds
xorl
fimuls
mov
fstpl
push
xor
mov
test
js
mov
mov
fwait
xchg
and
outsb
and
les
fnstsw
cltd
mov
mov
xchg
fstl
shll
lcall
fstl
ret
in
push
mov
and
pop
rorl
cmp
sub
inc
xchg
nop
inc
imul
xchg
jmp
lods
scas
test
movsl
fisttpl
movsl
push
ss
inc
pop
ret
lods
inc
push
cmp
cltd
in
cmpsb
loope
out
ss
xchg
mov
mov
xchg
lcall
xchg
adc
pop
mov
mov
imul
mov
sbb
in
mov
mov
mov
and
fwait
outsb
push
movsl
aam
aaa
pop
xchg
add
lods
adc
fisubrl
sbb
subb
xchg
sub
int3
mov
aaa
stos
popf
lahf
sbb
leave
add
lds
mov
sahf
xchg
sahf
mov
imul
mov
xor
inc
mov
nop
aaa
stos
mov
inc
mov
outsb
sahf
cwtl
hlt
cmp
adc
lods
femms
sbb
pop
pop
pushf
enter
xchg
xchg
mov
les
mov
movsb
fxch
cwtl
mov
pushf
inc
lds
cmp
std
das
mov
xor
mov
adc
mov
mov
mov
das
fcoml
ret
imul
mov
jae
hlt
ret
or
lods
scas
movsl
sub
fwait
enter
xchg
in
mov
jecxz
scas
mov
mov
adc
mov
mov
pop
fldenv
movsl
sbb
dec
xor
jecxz
xchg
mov
mulb
sarl
ds
cmp
movsl
mov
sbb
in
leave
xchg
jecxz
ret
movsl
mov
scas
sub
nop
popf
daa
mov
ret
sbb
std
scas
fstpt
jne
int3
inc
leave
inc
in
xor
mov
hlt
cmpsl
jecxz
mov
mov
rcll
lods
cmp
inc
push
or
daa
mov
lds
std
lods
add
cwtl
jecxz
mov
lods
adc
lods
xchg
or
xchg
lods
cltd
mov
popf
rol
enter
daa
popf
mov
int
mov
hlt
mov
cmpsl
mov
movsb
ds
xchg
sub
pop
inc
mov
imul
aaa
xchg
mov
mov
daa
lods
xchg
cmp
xchg
adc
mov
fwait
hlt
mov
lods
test
inc
pushf
xchg
sbb
xchg
xor
mov
mov
xchg
xchg
loope
push
sarl
lahf
outsb
ret
mov
mov
add
adc
push
adc
add
fwait
repnz
pop
in
lds
stos
mov
mov
xchg
mov
sub
xchg
insl
sbb
or
shrl
xor
aas
xchg
std
xchg
mov
sahf
mov
xor
pushl
mov
arpl
cmp
adc
jle
les
fld
xor
stos
jge
jne
mov
mov
mov
pop
popf
popf
mov
cwtl
sbb
mov
ret
loope
jne
nop
stos
adcb
mov
pushf
pushf
lcall
roll
testb
dec
ret
sub
fadds
mov
pop
ret
cmp
mov
mov
or
aaa
xlat
mov
dec
nop
imul
cmp
adc
mov
leave
nop
pusha
mov
movsb
mov
mov
xchg
add
jns
sbb
adc
xchg
sub
out
ret
dec
dec
jae
jne
pop
test
xor
mov
inc
shrb
leave
sbb
enter
adc
lcall
sbb
cltd
sbb
sbb
stos
lea
lcall
mov
movsl
inc
mov
mov
jle
ss
xor
in
mov
mov
xchg
mov
or
dec
popf
sub
and
mov
sbb
popf
jb
mov
enter
xor
ret
pop
sub
hlt
mov
leave
pop
xchg
or
mov
mov
inc
cmpsb
xor
popf
sub
mov
ret
lea
lds
mov
cltd
mov
das
xor
rcrb
outsl
mov
mov
int
mov
lds
inc
mov
lea
lea
xchg
mov
int
sub
daa
test
mov
mov
scas
xchg
sbb
add
dec
and
movsb
sbb
leave
pop
xor
pop
jne
fldenv
mov
or
les
outsb
fldenv
fdivl
fstps
enter
movsb
xor
jne
in
cmpsb
mov
mov
stos
mov
std
mov
movsl
inc
ret
cmp
test
mov
movsb
mov
xchg
stc
lcall
mov
hlt
cltd
out
mov
sub
mov
pop
mov
xchg
int
stc
aas
daa
xchg
or
fstl
cmpsl
fmull
sahf
das
and
and
sbb
ror
inc
cmpsl
leave
sbb
and
or
sub
pusha
inc
push
mov
lahf
ud2
ss
in
mov
mov
cmpsl
cmpsb
cltd
push
pushf
mov
xor
jb
ss
and
fadd
shll
mov
jle
dec
cmp
mov
jle
movsb
mov
mov
cmp
cltd
add
inc
xchg
inc
inc
fdivrl
cmpsl
scas
nop
mov
sbb
push
movsl
mov
mov
dec
ficoms
mov
cltd
movsl
nop
jae
jne
pushf
stos
ficoms
pop
ret
mov
mov
adc
mov
xchg
popf
int
add
or
mov
outsb
and
in
aaa
cs
xchg
pop
mov
mov
mov
xchg
shr
scas
nop
lds
mov
mov
xchg
in
cmpsb
push
and
les
xchg
pop
faddp
mov
popa
jne
cltd
xchg
mov
aas
xchg
jmp
pushf
fisubrs
aas
sahf
cmpl
lea
les
fwait
scas
mov
xor
mov
mov
xchg
aas
int
addl
lcall
mov
popf
mov
jne
jecxz
mov
mov
lods
mov
ret
push
scas
in
ret
shrl
mov
xchg
ret
xchg
mov
push
daa
xchg
jb
inc
adc
movsb
push
lahf
movsl
fidivs
test
mov
popf
mov
jp
mov
pushf
dec
ret
mov
xor
fwait
mov
inc
mov
xchg
add
aas
ret
dec
aas
push
lcall
mov
enter
dec
ret
push
pop
pop
and
daa
lcall
inc
mov
add
mov
mov
daa
cmp
cltd
adc
and
lcall
outsb
shlb
lcall
xchg
add
mov
shrl
movsl
adc
xor
sbb
pushf
lods
xchg
gs
mov
xchg
mov
cltd
ret
xchg
ds
xchg
cmp
mov
jae
cmp
pushf
mov
mov
imul
mov
mov
inc
les
cwtl
mov
ret
mov
mov
and
sahf
cmpsb
mov
mov
mov
scas
sbb
ret
xor
inc
mov
inc
mov
pop
lcall
mov
nop
push
adc
cmpsl
add
jg
jle
xchg
adc
cwtl
les
xchg
mov
pushf
jo
negb
das
mov
in
xor
pop
adc
aam
scas
sub
scas
mov
pop
aaa
xchg
movsl
cmp
cmpsb
in
aaa
adc
fcmovb
mov
mov
push
pushf
jl
cwtl
aas
lcall
mov
mov
ss
mov
or
mov
xchg
mov
mov
xchg
pop
mov
test
imul
cltd
jne
in
pop
fdivs
rolb
cmpsb
fwait
adc
sarb
daa
and
xchg
shrb
ret
mov
cwtl
push
lods
outsl
cmpsb
test
stos
mov
js
adc
push
aas
xchg
in
mov
jo
imulb
mov
fidivs
mov
dec
jae
repz
scas
add
xchg
divb
das
mov
xchg
ficoml
dec
dec
rol
int
xchg
inc
lcall
daa
xchg
xorb
mov
cmpl
aaa
lahf
add
movsb
mov
mov
push
sarl
xchg
mov
enter
push
lods
fisttpll
adc
cltd
mov
xchg
popf
mov
xchg
inc
mov
mov
inc
mov
enter
lods
xor
es
aaa
lea
lea
or
test
lds
push
les
sahf
xchg
mov
push
dec
mov
mov
mov
cwtl
ficoms
ret
and
mov
sbb
or
mov
stos
xchg
xchg
mov
xchg
xor
enter
mov
cmp
sahf
in
mov
aas
xchg
mov
xor
iret
mov
mov
sbb
sahf
fwait
cwtl
je
movsb
mov
sbb
lcall
pop
sub
std
mov
mov
mov
push
stos
loope
xor
pushf
mov
fsubrl
mov
adc
mov
cmpsl
enter
icebp
mov
mov
sub
mov
enter
lcall
sahf
xchg
mov
ljmp
lahf
pop
movsb
xchg
xchg
adc
pop
dec
mov
int
fwait
sub
jno
cmpsl
mov
dec
mov
lcall
mov
mov
outsl
cmp
rolb
jg
mov
sbb
sbb
xchg
mov
leave
adc
mov
xstore-rng
cmpsl
inc
cwtl
frstor
cwtl
fisubl
sbb
mov
mov
and
mov
lcall
cld
sbb
std
cmp
mov
adc
test
lds
add
mov
les
mov
out
xor
pop
fstps
and
aaa
mov
mov
cmp
fistps
cld
mov
mov
movsb
arpl
mov
xchg
ss
xchg
dec
mov
jo
adc
xor
in
sbb
std
popf
repnz
inc
sbb
push
imul
clc
in
sbb
cwtl
cmpsl
jno
cltd
mov
mov
mov
mov
sbb
sbb
dec
scas
or
and
sbb
or
les
aam
mov
sub
setns
mov
inc
popf
mov
insl
dec
mov
pushf
pop
cltd
popf
mov
int
mov
ja
in
lds
sbb
pop
sbb
ficompl
mov
push
mov
seta
sbb
dec
and
xchg
cmp
movsb
mov
cmp
xor
mov
das
push
xchg
sbb
mov
xor
sbb
iret
xchg
push
and
inc
mov
lea
rol
rcrl
in
adc
dec
mov
cltd
jne
sbb
cmpsl
mov
lods
xchg
push
xchg
push
mov
cltd
add
push
enter
cmpsb
pop
mov
adc
icebp
aas
shll
mov
xchg
imul
aas
fwait
inc
int3
xchg
pop
popf
add
inc
pop
pusha
mov
aas
mov
fwait
data16
push
ja
sti
sub
cltd
sahf
sub
shll
mov
imulb
sub
pop
lods
xor
inc
mov
cmp
cs
xor
test
xchg
fwait
xchg
insb
mov
sub
lret
mov
inc
and
mov
sbb
movsl
shlb
and
shr
xchg
loope
negb
pushf
mov
rorb
ss
nop
push
xlat
push
xlat
xchg
push
xlat
adc
pop
adc
cmp
push
leave
lret
mov
ss
mov
sub
sub
mov
and
hlt
stc
mov
sbb
mov
es
shll
sbb
lcall
popf
in
push
cmc
mov
sub
ss
mov
rol
and
sbb
aaa
and
adc
hlt
leave
xlat
and
mov
xor
in
xchg
stos
aaa
test
fstp
mov
mov
into
pop
xor
and
lcall
lahf
mov
js
hlt
cmp
shrb
mov
xor
sub
outsb
test
negb
lods
mov
dec
inc
inc
and
in
or
cmp
cmp
cmp
aaa
add
mov
ja
leave
xchg
aas
xchg
sub
xchg
jne
adc
mov
leave
mov
add
scas
jne
inc
fcmove
xor
stos
ffree
dec
inc
or
and
mov
sub
and
js
hlt
test
jae
xor
or
pop
mov
pop
jae
push
ret
orb
or
and
mov
shlb
xchg
test
fwait
lea
mov
inc
mov
mov
mov
outsl
notb
adc
in
dec
or
xor
std
aad
adc
and
ror
mov
mov
pop
popf
or
sbb
push
and
adc
and
lcall
push
mov
fsubl
mov
hlt
and
lcall
adc
fidivrs
mov
adc
sbb
mov
imul
xor
mov
shrl
and
test
mov
scas
daa
mov
rcll
mov
js
cmpsb
pop
adc
nop
ret
mov
adc
sahf
xor
sbb
inc
fwait
mov
inc
jge
les
inc
mov
sbb
mov
into
xor
mov
mov
ds
mov
shlb
sub
stos
mov
cmp
dec
inc
cmp
aam
mov
mov
add
sbb
mov
shll
sbb
les
hlt
daa
xchg
mov
push
mov
lds
mov
jne
xor
sub
in
sub
cmpsl
ffree
sub
and
dec
stos
loopne
test
cmp
inc
cmp
aaa
cmp
in
mov
inc
cmp
dec
cmp
adc
adc
nop
xlat
nop
testb
xchg
pop
mov
cmp
test
push
aad
arpl
dec
cltd
xchg
cmp
pop
mov
cmp
inc
pop
movsb
push
int
mov
lret
cmp
std
mov
in
adc
adc
fimuls
xchg
xor
dec
das
popl
lock
jo
sahf
adc
mov
adc
inc
aad
push
push
subb
push
push
pop
sub
and
pop
and
leave
xor
mov
sub
dec
mov
sahf
xor
or
mov
scas
mov
adc
sub
pop
mov
shll
xor
lahf
xchg
sbb
movsb
aaa
xchg
mov
sub
sub
sub
data16
lds
pop
hlt
xchg
scas
or
or
inc
mov
and
inc
addb
cmp
mov
xchg
bswap
mov
int
daa
sahf
fiaddl
and
je
movsb
mov
cmpsl
lock
inc
jae
inc
jae
mov
sbb
into
or
into
dec
arpl
inc
ret
mov
scas
scas
scas
push
out
push
cltd
add
inc
adc
popl
adc
pop
xchg
shll
test
pop
inc
test
push
js
mov
add
sarl
rolw
push
cltd
pop
push
ud2
inc
and
mov
mov
mov
mov
fstpl
mov
push
lcallw
sub
aaa
mov
sbb
mov
mov
ja
sub
lea
pop
pop
or
or
leave
movb
mov
sbb
inc
push
out
xchg
jbe
mov
sub
aas
mov
mov
imul
mov
hlt
lahf
lea
mov
lahf
hlt
out
mov
add
movsl
sbb
std
inc
lds
test
int
jbe
scas
jbe
ss
mov
mov
jne
inc
mov
and
inc
fldl
loope
mov
movsl
ret
mov
cmp
test
lods
bound
stc
xchg
mov
cpuid
jmp
nop
pop
inc
dec
pop
in
enter
lahf
rclb
sub
pop
inc
movsb
sbb
movsl
mov
pop
mov
add
test
push
dec
pop
push
inc
pop
andb
leave
cmpsb
movsb
and
std
lds
int
lcall
idivl
lea
mov
daa
sahf
mov
cmp
pushl
xlat
mov
pop
das
aam
ss
sub
inc
ficoml
fimull
fimull
fimull
fdivs
sbb
sub
fsubrs
xor
sub
fsubrs
xor
sub
fdivs
scas
fsubrs
mov
sub
xor
sahf
aaa
mov
mov
lods
xchg
xor
cmpxchg
int
bound
stos
ja
sub
mulb
js
cmp
shlb
push
mov
cmpsl
push
std
and
xchg
cmpsl
sbb
frstor
sbb
pushf
mov
mov
enter
addl
and
test
aam
and
pop
cmpsl
shll
int
inc
lcall
mov
xchg
movsb
cwtl
sbb
mov
sbb
sbb
les
add
inc
inc
add
es
jmp
hlt
xchg
in
stos
ret
ret
fwait
mov
mov
mov
fidivrl
cmpsl
lds
jecxz
mov
mov
fwait
mov
inc
mov
leave
mov
mov
add
sbb
pop
pop
fwait
call
mov
aad
hlt
leave
jecxz
mov
add
cltd
ja
inc
mov
xor
mov
mov
and
inc
jle
mov
and
cmpsl
data16
mov
xor
add
sbbb
jecxz
stos
xor
shlb
push
jae
ss
sbb
push
inc
adc
push
sbb
outsl
and
dec
and
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jl
xor
sub
jl
js
test
xorb
xor
xor
xorb
sub
xor
sbb
sbb
sbb
cmp
mov
mov
cmpsl
adc
sbb
lods
enter
test
imulb
add
cmp
jno
adc
aas
dec
jb
sbb
push
andb
push
sub
jb
sbb
xchg
push
in
mov
icebp
pop
xchg
mov
js
and
mov
sbb
lahf
scas
sub
xor
mov
xchg
scas
push
dec
mov
adc
mov
rcll
rorl
popf
scas
pop
icebp
das
dec
pusha
leave
mov
xor
arpl
aas
jne
cmp
push
daa
sbb
mov
mov
mov
popf
cmpsl
leave
mov
pushf
xchg
in
adc
mov
ja
inc
mov
dec
fcompl
add
sub
pop
lret
dec
jge
dec
hlt
mov
inc
mov
inc
sbb
mov
cmp
les
out
hlt
mov
lods
mov
scas
sub
int3
cwtl
lock
jl
sub
xor
or
mov
les
lds
icebp
jne
xchg
daa
jo
in
loop
insl
ror
scas
mov
scas
pop
fsubl
inc
in
repz
rorl
test
xor
or
inc
ja
sub
jnp
fwait
into
or
repnz
in
dec
inc
inc
pop
mov
ja
int3
adc
adc
lods
jo
enter
pop
out
jbe
outsb
adc
add
mov
ljmp
jae
cs
fadd
inc
sub
arpl
mov
pop
xchg
push
das
cmp
xor
inc
gs
mov
xor
fidivs
xchg
cs
lcall
or
pop
cs
mov
sarb
inc
pop
addr16
test
sub
cltd
cs
idivl
test
xchg
daa
jp
loope
outsb
sub
aam
popf
adc
xchg
mov
icebp
lock
jmp
mov
dec
ljmp
and
cld
or
divb
leave
push
mov
inc
mov
fistl
inc
outsb
mov
shlb
js
pop
mov
mov
mov
daa
cltd
icebp
dec
ret
mov
cmp
jmp
mov
repnz
aad
pop
and
scas
pop
pop
shrb
mov
inc
cmp
and
xor
int
jns
aas
pop
inc
cld
and
shll
sarb
xor
inc
jb
xor
xchg
pop
cmp
stc
lea
mov
test
mov
mov
jno
daa
xor
lret
dec
mov
repz
and
imul
sub
int3
xor
popf
mov
daa
xor
lfs
dec
push
das
lods
mov
sti
mov
mov
icebp
pop
xor
ja
int3
cmp
cmpb
aad
or
fdiv
loopne
cmp
sub
xchg
ljmp
inc
cs
dec
jmp
cmpsb
and
lret
mov
sub
mov
sbb
rcll
jne
lcall
std
or
in
das
mov
jl
icebp
add
and
ret
es
sahf
sub
cmpsl
lret
cltd
cmpsl
or
mov
out
cmp
icebp
das
dec
sahf
xor
ljmp
stos
push
out
xor
jno
xor
xchg
lret
dec
xchg
std
push
add
cmp
stc
pop
and
aas
mov
daa
iret
or
sti
xchg
pop
std
shll
and
movsb
push
popa
push
add
hlt
das
xor
sub
lds
imul
clc
lret
lcall
xchg
sbb
nop
sub
xchg
cwtl
push
scas
jns
out
xor
lcall
call
cs
or
lods
add
push
jno
rcrb
pop
jne
pop
cmp
in
jb
std
push
imull
mov
xchg
mov
lds
fistpl
in
adc
das
mov
jl
mov
and
and
filds
lods
xlat
icebp
test
mov
xor
lcall
hlt
jae
inc
sbb
imul
inc
mov
int3
sbbb
insb
mov
or
ljmp
sbb
in
cmpsl
cmpb
inc
insb
fstpl
inc
and
mov
or
lds
mov
mov
or
into
xchg
negb
scas
push
lret
test
xchg
push
dec
or
mov
sbb
fiaddl
xchg
jno
dec
mov
cltd
push
xor
pop
cmpb
hlt
das
dec
fwait
mov
fsts
daa
test
pop
out
mov
out
mov
adc
lret
inc
xorl
mov
inc
je
rcr
lods
ds
dec
lret
test
inc
in
inc
std
fldt
aaa
jl
icebp
imul
jecxz
xchg
cmp
xchg
adc
leave
mov
cmp
jae
mov
cmpsl
add
mov
das
pop
cmp
add
aad
mov
jno
push
mov
pop
and
lods
or
inc
and
insb
js
jmp
lret
and
xchg
loope
daa
xchg
and
jne
jne
lods
mov
icebp
mov
xor
stos
movsb
lret
jmp
lods
out
xchg
mov
scas
or
adc
sbb
outsl
push
sbb
in
cltd
mov
and
sub
xchg
pop
fcmovne
and
ds
jbe
mov
sbb
add
rol
or
mov
mov
scas
std
stos
mov
sbb
xor
lret
jne
mov
or
sbb
test
lea
sahf
mov
sbb
stos
and
sub
cmp
fwait
sub
push
stc
inc
add
mov
mov
mov
mov
movsb
int
ret
lahf
test
pop
and
movsb
ret
inc
jl
sbb
int3
imul
or
jnp
mov
lods
mov
sbb
sahf
mov
dec
mov
mov
in
lods
negb
xor
mov
xor
adc
inc
std
testb
push
or
adc
jbe
sub
pop
lahf
cltd
cwtl
sbb
xchg
cmp
arpl
subb
lock
push
xor
mov
mov
subb
add
sub
xor
jle
ret
xchg
sbb
rolb
popf
stos
sub
xchg
cs
subl
mov
pop
sbb
imul
xlat
xchg
adc
inc
repnz
adc
int
mov
cli
in
ja
or
xor
jne
and
xor
and
xchg
cwtl
push
les
rolb
cwtl
adc
popf
sub
mov
inc
mov
popa
ss
mov
push
movb
xor
adc
sbb
repz
jae
lods
mov
sub
imul
pop
mov
dec
cs
pop
mov
mov
mov
jns
push
mov
and
fisttpl
mov
push
inc
mov
cltd
movsb
lea
mov
inc
cmp
xor
pop
inc
sub
xor
mov
pusha
roll
mov
sbb
mov
repnz
sub
lcall
push
sbb
cwtl
mov
in
sbb
inc
mov
dec
lock
xchg
daa
pushf
cltd
xchg
cltd
loop
ficomps
jb
jne
insl
mov
rep
repnz
mov
mov
fstpt
xchg
sub
xchg
out
sbb
ret
cmc
das
dec
push
ret
es
and
aaa
lds
xor
xor
jb
repnz
lea
add
ficoms
lods
outsb
das
pop
sti
xor
jp
mov
mov
adc
inc
sbb
pop
icebp
push
mov
xor
xchg
leave
bound
sub
popf
ljmp
popa
sti
adc
int
lahf
sub
fmull
insl
cs
fisttpl
arpl
mov
xchg
mov
push
cli
lcall
mov
outsb
push
cmpsb
sbb
mov
dec
push
in
push
sub
lods
sub
stos
xchg
stos
lods
ja
push
sub
pop
adc
into
mov
dec
pop
sbb
adc
jle
fsubr
inc
pushf
decl
sbb
dec
std
xchg
xor
push
cs
loop
jae
mov
dec
mov
aas
xor
pop
adc
mov
jo
mov
inc
in
les
fistpl
push
xchg
jle
popf
xchg
sbb
dec
enter
mov
in
jecxz
or
scas
cs
lock
rcrb
mov
cwtl
das
ljmp
cmp
ret
mov
lds
xchg
mov
in
nop
add
lahf
cmc
std
adc
test
adc
dec
xchg
adc
das
ficoml
stos
out
lock
lret
cmp
test
add
xor
xor
push
mov
xchg
vrcpss
lods
stc
push
inc
or
movsb
inc
xchg
mov
shrb
call
sbb
dec
jns
insl
fdivs
pop
aad
xor
shlb
mov
push
jns
scas
jb
jnp
test
lock
mov
mov
rcrb
push
pop
and
ret
lock
xchg
push
lret
mov
movsbl
xor
mov
aaa
in
add
out
outsb
lods
jmp
ret
mov
inc
lahf
pop
pop
pop
sbb
mov
sti
push
std
adc
cmp
sub
sti
enter
mov
xchg
and
cmc
mov
sbb
repnz
mov
xor
dec
dec
xchg
sahf
cltd
sbb
in
adc
lahf
and
dec
xchg
xchg
cmp
cltd
enter
adc
cmp
push
ljmp
add
lods
rep
add
mov
subb
jb
mov
or
sub
popl
or
xor
outsb
adc
sti
daa
imul
mov
sahf
dec
test
out
stos
jb
xchg
mov
or
paddusb
sub
jae
and
imul
ss
or
test
inc
mov
jp
and
adc
mov
cmp
pop
popf
jl
ret
std
test
mov
dec
lretw
cmp
ja
jecxz
cmp
inc
loope
mov
and
push
jg
jecxz
pop
dec
or
nop
into
dec
sub
jbe
scas
mov
jg
mov
mov
mov
sbb
jecxz
jne
mov
or
dec
das
into
jne
fdivl
stos
jne
fwait
xor
insl
and
jae
leave
fwait
lret
popf
daa
lods
repz
stos
mov
mov
inc
int3
adc
pop
pop
cmp
dec
movb
outsb
pop
icebp
mov
mov
sub
sahf
pop
mov
sbb
jb
stos
mov
out
comiss
inc
sub
xlat
dec
sbb
mov
adc
cmp
dec
jnp
in
push
cltd
or
dec
repnz
pop
pop
dec
outsb
cwtl
cltd
xor
mov
cwtl
les
das
or
inc
daa
pop
push
repz
xchg
sub
sti
xor
div
stos
mov
ljmp
cli
insl
imul
jbe
push
dec
stos
xor
jo
loop
mov
mov
pop
add
loop
inc
xor
mov
lock
xor
lahf
or
leave
jecxz
insb
and
cmpsl
jnp
ds
jae
cld
mov
leave
adc
push
out
ljmp
mov
xchg
mov
pop
jne
ret
testb
fcomps
mov
mov
repnz
test
cltd
jmp
pop
mov
pop
xor
ss
mov
mov
das
inc
xlat
shr
mov
jo
pushf
mov
inc
sahf
lods
pop
sub
xchg
jno
mov
cmp
out
in
pushf
sbb
xor
xlat
xor
mov
das
cltd
xor
xor
or
jo
push
or
cmpl
mov
cmp
pushf
adc
mov
push
cmp
fcomi
xor
sub
mov
inc
sarb
dec
and
pop
call
mov
inc
and
pop
int
mov
xchg
out
lret
lea
shlb
fwait
mov
lock
mov
mov
xchg
or
cs
adc
ds
stos
sti
out
scas
pop
mov
sub
scas
aas
movb
add
mov
outsb
mov
lock
mov
jecxz
jns
mov
add
es
sub
frstor
xor
xor
movsb
scas
insl
mov
xchg
sub
jo
mov
filds
mov
pushf
sbb
sbb
icebp
addr16
insl
sub
jecxz
xor
sbb
rcr
push
divl
icebp
xor
jb
ja
inc
xchg
imul
insl
mov
push
sbb
cmp
or
jne
pushf
hlt
orb
xchg
stos
icebp
movsl
ss
rorl
je
sbb
data16
dec
mov
mov
xchg
push
mov
repnz
int3
xchg
jb
xor
xchg
cmp
ficompl
and
mull
push
mov
xor
stos
jl
addr16
xor
or
std
sbb
outsb
push
sahf
lahf
and
inc
outsb
or
bound
pop
arpl
and
movsl
lods
cmp
sahf
data16
int
mov
or
outsb
mov
popa
insl
stos
pop
pop
dec
in
adc
pusha
fisubrl
xchg
icebp
add
mov
and
divl
aas
jae
sub
mov
vshufpd
mov
xor
dec
mov
mov
daa
ds
mov
xor
mov
out
sub
sbb
mov
push
mov
jg
outsl
inc
sbb
das
cmp
cmp
or
cmp
and
xchg
xchg
in
push
ficoml
jb
jecxz
mov
xor
mov
mov
fdivl
push
inc
add
data16
pop
mov
icebp
stc
repnz
jge
inc
dec
push
shll
sub
jae
in
push
mov
sub
out
out
das
push
es
jae
cmpsl
jl
stos
mov
jno
lds
jne
sti
mov
cmpsb
enter
mov
or
mov
ret
mov
aas
nopl
rcrb
ds
mov
dec
mov
iret
sbb
pop
daa
js
testb
rcll
mov
or
shll
lret
cmpsb
xor
pushf
inc
ret
mov
lds
xchg
sub
stos
icebp
or
inc
xchg
movsl
popf
fucomi
scas
jecxz
daa
xor
or
mov
mov
sub
sub
mov
dec
push
mov
in
pop
mov
hlt
inc
insl
adc
mov
xchg
xchg
pop
push
xor
mov
or
pusha
adc
mov
inc
push
push
shll
cmpsb
mov
add
add
add
cmpsl
imul
sub
insl
mov
std
data16
mov
clc
push
xchg
mov
ret
mov
outsb
lds
negb
inc
imul
pushf
sub
ret
sarl
lret
les
mov
cmp
ret
mov
popf
insl
cs
rorl
and
sti
inc
divl
les
xor
loopne
sub
fisttpll
rorb
scas
inc
mov
sub
jmp
xchg
enter
mov
cmp
dec
ror
push
dec
push
stc
btr
inc
push
btc
shrd
sbb
mov
add
mov
and
pushf
mov
shl
setb
sub
lea
xchg
lods
jmp
rcll
cwtl
shll
ja
gs
int3
pushf
dec
rcrl
xor
inc
mov
add
mov
das
imul
test
dec
xor
popa
dec
adc
and
insl
cltd
sub
rsqrtps
les
push
mov
sub
leave
test
rorl
jge
lea
movsb
xchg
jle
or
jo
add
repnz
add
inc
fdivrl
sub
fbld
xor
sbb
pop
into
inc
das
mov
xchg
int3
jmp
pop
stos
inc
cld
pushl
lea
je
pusha
lea
jmp
adc
pushf
lea
jnp
push
mov
lea
jae
pusha
pusha
lea
jne
jmp
jmp
mov
shl
into
push
xchg
insl
pushf
lds
cld
fisubrl
mov
addr16
cltd
movsl
and
xorl
cmpsl
jp
lahf
or
shlb
loope
negb
dec
add
sub
test
adc
in
stos
push
inc
xor
out
add
icebp
into
xor
les
mov
in
cltd
nop
es
fwait
lret
fwait
xchg
imul
sub
aas
dec
call
aas
divl
repz
mov
and
xchg
ljmp
sahf
shl
nop
aas
xlat
sahf
cs
jne
jle
lods
push
lcall
fistpl
insl
jg
mov
xor
icebp
mov
imul
cltd
jle
add
and
icebp
ljmp
cwtl
pop
in
popa
add
sub
sar
andb
js
sub
inc
dec
sub
dec
add
arpl
sbbb
xchg
pop
mov
lea
jae
cmp
clc
cmp
add
pusha
pusha
call
mov
sarl
push
sbb
xor
into
cmp
and
adc
iret
sbb
jno
out
daa
cwtl
mov
incl
rcrb
stos
push
push
cmp
sbb
mov
out
jno
mov
dec
lahf
cwtl
push
clc
inc
cmpsb
aam
daa
mov
sbbl
fistpl
ljmp
dec
aad
loop
push
daa
cli
addb
out
cmpsb
insl
gs
orb
divb
mov
or
add
jmp
js
sub
gs
in
sbb
outsl
xchg
jle
out
pop
jne
add
inc
fistpll
es
adc
mov
xchg
sahf
mov
popf
pop
call
mov
adc
int3
jne
adc
notl
xor
mov
into
jle
fcmovnu
daa
jmp
pop
xchg
dec
test
lods
outsb
push
push
fwait
sbb
lret
push
shll
add
jp
sub
out
sub
call
cmpsb
fwait
dec
mov
mov
mov
mov
dec
sub
and
leave
inc
ret
scas
test
cli
and
xor
jg
add
shll
scas
clc
mov
jge
inc
push
ret
sbb
daa
inc
sub
pop
sbb
mov
or
adc
clc
pop
lret
mov
cli
pop
cmp
add
push
inc
stos
movsb
sbb
in
sub
popf
push
ret
cli
mov
cmpsl
add
and
dec
cmp
jne
pop
cwtl
shl
ds
add
cmp
inc
pop
mov
icebp
imul
jle
addb
testb
adc
add
js
in
pushf
shll
or
mov
fistpl
sar
jp
test
add
cmp
ds
cmp
cmp
leave
inc
mov
push
icebp
in
ss
int
mov
push
sbb
les
inc
shlb
lret
mov
jns
and
jb
jns
mov
dec
jmp
in
inc
push
aad
push
loop
aad
ret
out
loope
jae
call
sub
rcl
pop
inc
loop
aas
movsl
in
xchg
lods
je
stos
scas
testb
jnp
and
sahf
sti
lds
lret
sbb
fnstsw
ja
fldenv
pop
mov
jo
je
jg
push
gs
sub
fisttps
mov
cwtl
dec
and
dec
ss
xlat
mov
mov
mov
test
mov
xchg
sub
mov
jle
or
hlt
lcall
mov
iret
clc
dec
iret
xchg
pop
pop
inc
xor
xchg
mov
cltd
mov
movb
call
pusha
push
bt
pushw
popfw
push
call
push
jmp
xchg
or
push
lahf
ja
jo
cmpsb
mov
or
and
outsl
xchg
call
cmp
push
cld
ja
int
push
int3
xlat
outsl
rcr
mov
test
inc
call
repz
out
add
adc
nop
mov
mov
mov
js
dec
sar
daa
in
subl
cltd
adc
xorb
lcall
xchg
ds
xchg
xchg
roll
inc
lahf
xchg
xchg
data16
hlt
mov
call
stc
jnp
push
xor
mov
fs
in
popa
mov
mov
decb
pop
pop
fcmove
dec
mov
mov
pop
imul
outsb
mov
test
aad
xchg
andb
mov
int
xchg
mov
popf
or
mov
les
cmpsb
push
test
aam
lcall
adcb
lock
lret
sbb
imul
mov
movsl
lods
das
mov
pop
das
fcoml
flds
mov
or
ja
enter
xor
pop
mov
inc
mov
stc
sar
mov
lret
mov
xchg
arpl
adc
test
xchg
shl
push
repnz
cmp
jno
out
mov
enter
sbb
and
or
ja
fidivs
mov
inc
stos
pop
dec
mov
mov
repnz
push
mov
and
lret
sbb
clc
call
out
out
push
xor
mov
push
mov
inc
scas
pop
mov
dec
inc
test
xchg
lret
inc
or
leave
cltd
xlat
nop
sbb
pop
push
cmp
cwtl
scas
imul
mov
or
call
mov
mov
mov
pushl
ret
add
xchg
sar
or
inc
je
or
adc
divl
sti
popf
inc
xchg
and
pushf
stos
dec
in
shll
or
jg
push
push
iret
aam
lea
inc
adc
es
adc
inc
and
push
shrb
push
mov
push
xchg
jmp
in
jns
dec
icebp
enter
divb
push
add
sbb
inc
mov
adc
lea
jb
pusha
push
lea
jae
pushf
lea
jne
push
push
stos
pusha
lea
jmp
mov
lea
jne
xadd
mov
cmc
sub
call
call
shll
int3
pop
mov
sub
es
xchg
sbb
pop
mov
dec
int3
dec
adc
testb
sub
out
cmp
xor
repz
push
rcr
ljmp
inc
push
cs
cld
sub
mov
mov
inc
jae
xor
fisttpl
push
xlat
inc
xor
lea
je
call
push
mov
pushf
pushl
ret
pusha
jo
xchg
shl
lods
ds
js
pop
movsb
adc
sarl
mov
xchg
cmp
fldl
pushf
xor
sahf
mov
pop
ljmp
cmp
dec
lret
lds
ja
dec
out
adc
add
push
in
push
fcoml
mov
sbb
jb
addr16
add
pop
jp
fnstcw
add
cli
subl
and
rorb
pop
jne
mov
add
jae
enter
addr16
jmp
sarl
dec
jmp
adc
repnz
shrb
loop
clc
mov
inc
pop
mov
xor
push
cltd
add
scas
ss
sbb
int
gs
sbbl
lea
ret
mov
xor
repz
aam
xchg
mov
addl
sub
jecxz
ss
sarb
mov
cmp
mov
das
bound
lret
jnp
out
cmp
shlb
clc
ja
lods
push
test
xor
push
lret
or
sub
xlat
shl
btr
mov
push
cmpb
call
push
dec
dec
dec
dec
cs
insb
add
test
add
call
enter
rorl
js
icebp
sbb
daa
lds
fldenv
xor
aas
lret
faddp
iret
sub
mov
mov
adc
out
cmc
lahf
add
push
subb
inc
push
xor
ret
jl
sahf
adcb
add
xor
mov
jge
cmp
push
mov
push
pop
mov
lock
cmp
lret
mov
aas
sub
shll
ret
cld
xchg
ja
sub
packssdw
jae
stos
std
aam
dec
or
aam
adc
mov
mov
arpl
fistps
mov
push
mov
mov
mov
xchg
mov
cltd
mov
fidivrs
xchg
shrl
scas
orl
loopne
cmp
es
shlb
sahf
cmp
jle
js
push
push
or
andb
or
adc
bnd
jo
push
std
add
sbb
add
bound
jb
xor
adc
lcall
ds
xchg
sahf
and
sbb
test
in
cmp
roll
loope
pusha
and
add
shrd
sub
setbe
push
movzbw
pop
pop
bswap
xchg
pop
movsbw
xchg
movsbw
pop
movsbw
jmp
pushf
lea
jb
clc
bt
cmp
call
cmp
cmp
rcrb
outsb
shr
int3
pop
and
sub
jno
jne
lea
xor
cmp
sarb
cs
cmpsl
jbe
loop
mov
std
into
xor
gs
pop
sbb
movsb
mov
push
add
xlat
sub
push
ljmp
scas
pop
andb
jnp
and
pop
cmp
adc
sbb
ret
push
xchg
test
clc
mov
sahf
pop
fiadds
adc
movsl
cmp
mov
mov
shrl
sub
push
push
fs
orb
adc
stc
les
lea
subw
cmovbe
loop
cld
jb
cmc
aaa
outsb
cmp
sub
shlb
fcoml
mov
inc
sub
aas
addr16
pop
ret
adc
rcrb
lret
adc
int3
fistps
cmp
cmc
iret
js
stc
pop
stc
inc
jmp
pop
std
lea
dec
shr
dec
faddl
mov
mov
decl
add
pusha
cmp
test
cmp
add
add
call
ja
pop
mov
sarl
sbb
push
jecxz
and
push
nop
push
pop
scas
push
popf
push
out
dec
clc
test
outsl
inc
or
push
andl
pop
push
lods
sub
push
lods
aaa
jne
cmp
mov
pop
dec
adc
adc
or
sub
out
sub
push
lods
jle
adc
mov
jnp
sbb
int
pop
jl
xor
inc
lods
xor
scas
addr16
fimull
ds
lods
shlb
push
xchg
or
pop
out
xchg
movsl
popl
insb
inc
xchg
sub
stc
mov
bt
add
lea
jl
test
cmc
xor
pushf
pushf
test
pusha
shr
mov
movl
pushf
lea
je
pushf
mov
adc
mov
pushf
lea
jmp
dec
xchg
nop
mov
sarl
jo
and
cltd
xchg
mov
and
gs
inc
andb
rorb
inc
test
xchg
sub
xor
idivb
stos
loop
lret
pusha
jge
inc
pop
mov
pmaxub
in
mov
ljmp
add
sbb
add
ror
dec
add
lret
push
xchg
cli
push
jmp
in
push
insl
aaa
bnd
lahf
jo
lods
outsb
mov
sbb
aas
push
sti
sub
push
repz
cmp
cmpsl
ror
test
out
sub
cld
jg
add
or
xor
cmp
scas
mov
mov
test
lcall
aam
inc
sbbl
outsb
bound
subl
dec
inc
mov
jbe
xor
mov
fcom
ficomps
es
shrl
jno
mov
inc
add
sub
pop
mov
cmp
outsb
adc
dec
mov
stos
loope
add
lock
imul
out
test
pop
cs
xor
mov
add
sub
and
jge
and
adc
sti
aad
or
imul
cmp
add
dec
lods
aas
iret
aad
jbe
lret
xor
rcll
jo
or
mov
lcall
pop
adc
test
and
or
scas
mov
andb
push
push
das
inc
lods
lods
jg
aaa
mov
shl
sbb
fists
xor
fadd
int
and
xchg
adc
mov
mov
inc
mov
xchg
in
mov
xor
xchg
cmpb
popa
jg
and
outsb
adc
ds
inc
popa
mov
ss
lock
sbbl
mov
jmp
call
lea
jae
call
push
cmp
call
mov
mov
push
sarb
lds
add
popf
lahf
cmp
in
mov
inc
aam
xor
stc
rorl
pop
cmp
pusha
scas
int
sbb
dec
adc
xor
dec
dec
xor
cs
insb
add
mov
mov
shll
jno
jb
and
mov
pushf
mov
pop
fmuls
xor
inc
int
mov
pop
jmp
adc
repz
mov
push
aam
out
lea
movsl
stos
ffree
or
fwait
mov
and
jae
icebp
stc
sub
rorl
fcmovb
cs
add
cmp
adc
mov
iret
or
push
xchg
push
jp
idivl
in
mov
xchg
int
sub
in
cmp
arpl
and
mov
sbb
lods
push
dec
pushl
neg
test
add
call
lcall
das
int
aad
jb
out
mov
daa
hlt
enter
scas
aaa
dec
pop
lods
push
mov
mov
adc
pop
pop
flds
pop
dec
mov
add
push
pop
adc
outsl
and
and
repz
scas
shlb
movsl
divb
testl
add
or
adc
aam
jge
sub
dec
fldenv
and
cmc
inc
add
jo
sub
fs
enter
out
pop
mov
bswap
punpckldq
pop
movsb
jne
adcb
movsl
jmp
ds
and
cmp
dec
les
sti
and
sub
or
adc
cmp
in
nop
jne
in
cmp
push
mov
mov
inc
mov
cmc
cmp
rol
adc
cmp
pop
fdivs
jg
xor
outsb
shll
mov
jl
add
add
jbe
dec
jne
inc
insb
outsl
jae
add
pusha
int3
mov
rol
jle
jecxz
inc
mov
pushf
test
arpl
adc
das
cmp
insl
or
jl
push
or
loop
hlt
mov
mov
xor
stos
pushf
les
pop
das
ja
int3
add
je
frstor
out
imul
nop
pop
mov
adc
gs
cmpb
lahf
cld
jmp
popa
out
adc
xchg
push
jge
and
cltd
dec
push
sub
decl
mov
mov
ret
or
popa
pop
xor
mov
dec
jg
jp
sbb
loopne
push
in
sub
lds
dec
movsb
fs
pop
stos
xchg
and
sub
icebp
jnp
cwtl
jle
loopne
inc
xor
dec
and
loop
or
icebp
push
shrb
adc
xchg
mov
rorl
ss
xchg
clc
dec
fdivs
scas
mov
jg
sahf
mov
shll
cmpsl
int
xchg
mov
dec
mov
pop
loopne
lahf
neg
in
imul
jns
pop
push
push
cltd
push
bound
jp
pop
sarl
ljmp
mov
outsb
sbb
jl
and
pop
mov
jbe
push
jp
inc
outsb
push
enter
xor
shl
lea
dec
mov
push
mov
pop
xchg
cmpsb
jge
ds
mov
sarb
iret
push
rorb
je
aad
xor
call
mov
pop
push
dec
rolb
jmp
imul
cmp
ja
clc
in
push
int3
and
jl
mov
insb
dec
insl
add
or
sbb
pop
jecxz
shll
rcrl
mov
mov
jns
mov
mov
lret
js
leave
decb
mov
xor
mov
ljmp
and
mov
jb
or
repnz
jecxz
push
pushl
movl
jmp
lea
je
pusha
push
pusha
cmc
add
call
add
add
add
loopne
add
add
and
sub
add
add
add
add
add
add
lock
sub
cld
aaa
sub
clc
aaa
sub
jo
add
push
daa
add
add
add
add
sub
adc
sub
aas
test
test
aas
aas
aas
xor
outsb
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
jne
jae
cs
insb
add
add
das
cmp
or
scas
aaa
xchg
ss
test
mov
jno
shrl
mov
imul
in
cltd
rcll
push
mov
es
addr16
sub
iret
xor
jne
xchg
cmp
mov
mov
out
int
dec
add
insl
xchg
inc
xlat
in
sbb
xchg
mov
adcb
imul
mov
into
sti
subb
add
bt
movzwl
bsr
lea
mov
push
pushf
movb
pushf
add
pushf
pushf
cmc
mov
test
cmc
test
call
jmp
mov
call
shlb
cmp
out
fiaddl
nop
comiss
and
jns
outsl
lahf
and
pop
pop
lock
adc
xchg
xor
jge
xor
xor
push
in
jg
int
and
lret
outsl
xchg
mov
inc
dec
inc
lods
xor
cmp
popf
add
xor
xchg
sub
pop
dec
data16
and
cmpsb
mov
push
and
inc
jl
notb
fwait
adc
add
jns
in
out
lds
imul
mov
sar
mov
clc
mov
jle
xchg
jge
xchg
flds
loop
mov
push
jb
repz
mov
adc
arpl
sbb
ja
mov
sti
cmp
aam
jg
stos
out
add
jbe
sti
fistl
movsl
mov
ljmp
std
push
sub
ja
cltd
fwait
int
adc
push
xor
xor
test
cmp
adc
insb
jp
inc
pop
dec
imul
cli
jmp
sbb
jp
int
inc
pushf
inc
add
lea
stos
add
xchg
xchg
cli
push
dec
mov
cmp
pop
je
push
and
add
test
jl
pop
xchg
cmp
iret
jmp
mov
adc
inc
clc
pop
mov
xchg
add
cmp
je
xchg
rcrb
jmp
mov
ljmp
jb
push
add
mov
sbb
scas
jb
cmp
pop
or
fisubs
mov
test
inc
jge
push
stc
sub
enter
test
sub
mov
cmpsl
jp
test
test
xchg
dec
mov
cmp
aad
out
fidivs
push
test
arpl
add
fsubr
shlb
mov
test
mov
sbb
aad
inc
scas
xlat
loope
and
fistps
mov
std
imul
aas
jno
mov
mov
lahf
fadd
push
stos
aaa
iret
in
int3
sub
xor
jle
insb
and
mov
in
xor
out
out
pop
ljmp
add
push
sbb
pop
pxor
xchg
mov
mov
lods
mov
fsubp
loope
out
mov
es
orl
mov
movsl
sub
adc
cmp
jns
dec
or
int3
push
mov
push
gs
loopne
mov
jbe
sbb
and
sbb
fcomps
rcrb
xchg
sbb
je
mov
sti
lret
mov
xchg
mulb
inc
inc
push
sbb
sbb
rclb
movsb
sub
push
dec
sub
call
arpl
les
add
push
xchg
xlat
push
popf
in
sub
int3
ljmp
sbb
decb
mov
popf
nop
out
fbld
xor
inc
test
pop
mov
hlt
leave
add
addb
aam
and
sub
aas
les
in
jge
push
out
test
int
frstor
add
inc
or
fadds
iret
xchg
and
mov
jl
jmp
and
add
or
clc
add
cli
stc
incl
dec
xor
cs
insb
add
imul
je
outsl
outsb
and
jb
jb
and
je
xchg
rcr
ljmp
jo
out
pop
cmc
out
insb
outsl
add
push
or
xchg
cs
jbe
inc
sbb
shr
push
mov
xor
xorl
add
fbstp
jno
enter
test
mov
adc
push
push
mov
aas
and
stos
xor
push
test
andl
test
js
aaa
shlb
xchg
shr
mov
lea
pushf
jmp
not
mov
pusha
cmp
cmpb
push
lea
jne
bsr
movsbw
xor
clc
mov
inc
dec
bt
adc
add
bt
rcl
mov
test
jmp
mov
shl
jle
and
cld
xorb
mov
and
andl
push
jp
jl
scas
out
push
ss
aaa
sahf
xchg
push
addl
and
fs
call
adc
daa
mov
fwait
jnp
shll
jp
das
scas
or
pop
jecxz
add
loopne
mov
xor
adc
stc
enter
test
or
addr16
inc
inc
xor
adc
mov
lods
js
stc
in
or
mov
fdivs
inc
outsb
aas
xchg
mov
pop
fwait
ljmp
push
sub
mov
mov
cld
add
aad
xchg
jmp
and
outsl
sub
aas
fidivrs
jp
mov
mov
mov
in
mov
adc
push
push
out
fs
mov
and
popf
mov
add
orb
push
push
jge
inc
decl
add
test
mov
call
jle
or
or
ret
divb
out
arpl
xchg
rcrb
cmp
lods
test
mov
mov
cmp
icebp
enter
jle
jge
mov
in
iret
jno
test
xchg
sbb
sti
add
in
scas
bound
shlb
loope
mov
inc
mov
icebp
add
lds
xchg
push
lods
gs
pop
mov
pop
dec
add
gs
mov
bound
aas
and
mov
bound
jmp
cmp
jmp
pusha
xchg
and
movsl
mov
movsb
jge
sbb
lcall
gs
xor
pop
mov
rcll
shr
inc
inc
js
push
and
outsb
mov
stos
xchg
xor
lcall
mov
mov
sub
adc
add
ret
arpl
add
dec
sub
cmp
pop
test
xchg
pop
outsb
push
lds
mov
xor
dec
das
sbb
xor
lcall
mov
movsl
sahf
mov
mov
les
into
ds
fs
mov
je
mov
mov
fsubrs
stc
int3
insb
xchg
in
sbb
fadd
xor
sub
and
cld
insl
cmpsl
dec
xchg
subl
jmp
pop
jmp
push
add
arpl
lea
notb
pusha
mov
lea
jne
clc
sar
mov
cmp
jne
add
push
movzwl
lea
sbb
or
mov
pusha
pusha
add
jmp
call
mov
sbb
rcr
inc
cmp
cs
xchg
les
lahf
ret
popa
push
xor
mov
adc
cli
jae
call
or
jl,pt
rcr
insl
data16
mov
inc
loop
arpl
aaa
clc
mov
xchg
xchg
das
fmul
jo
push
sub
rolb
dec
xchg
lods
ja
mov
sub
std
inc
sbb
mov
jmp
inc
dec
lea
stc
push
dec
cmp
cltd
push
sbb
icebp
jns
inc
jg
invlpg
jne
pop
clc
je
sarl
push
add
jg
in
fst
adc
pop
sub
repz
daa
movsb
mov
jo
out
int3
mov
sub
sbb
lahf
inc
mov
loop
mov
cmp
or
push
dec
daa
inc
push
mov
das
and
clc
shl
pop
popa
insl
pop
cmp
out
jae
inc
sub
cmpl
imul
mov
fiadds
mov
xchg
or
ret
lock
and
rcrl
popf
lret
inc
shr
mov
aas
mov
stos
movsl
mov
fnstcw
xor
xchg
inc
in
adc
mov
rcll
add
dec
dec
call
sub
std
insb
dec
inc
xor
add
mov
or
add
stos
sbb
shll
and
cmp
xchg
cmp
out
icebp
into
leave
loope
movsl
adc
iret
arpl
lds
pop
ds
stos
sbb
cwtl
dec
decl
out
jg
sub
bound
in
jb
test
clc
bt
cmp
pushf
call
pop
sbb
xchg
insb
in
outsl
inc
movsb
sub
pop
gs
cmp
inc
fsub
imul
cwtl
push
sbb
sub
push
adc
dec
xchg
outsl
adc
sahf
roll
dec
push
out
cld
pushf
jnp
dec
std
mov
pop
mov
test
push
gs
rclb
mov
cltd
inc
pop
dec
ret
ja
cmp
mov
in
sbb
leave
pop
scas
call
inc
sub
shll
and
jnp
iret
imull
lock
subl
xchg
jge
loop
mov
fdivr
mov
pushf
int3
insb
push
xor
repz
mov
iret
loop
cmp
hlt
cs
clc
shrl
dec
mov
lahf
or
mov
bound
loopne
xchg
insb
inc
push
fisubl
push
fistpl
js
cltd
cmpsb
fiaddl
inc
xchg
mov
push
cmp
sub
aam
mov
fidivs
sbb
jecxz
pop
mov
in
sbb
add
nop
adc
call
inc
cmova
inc
inc
adc
xor
jae
xor
jle
imul
mov
les
xlat
push
mov
lea
es
cmp
movl
movw
lea
je
jmp
loop
lods
clc
shll
jge
sbb
inc
lea
aad
cmp
bound
adc
pop
shrl
jg
xchg
inc
adc
iret
repz
xorb
xchg
sub
jnp
sbb
mov
mov
mov
in
arpl
push
cmp
test
movsb
fisttps
jecxz
and
les
imul
pop
enter
and
push
cwtl
mov
sahf
cmp
cmp
mov
movsb
in
mov
shrl
xchg
cwtl
xchg
lds
sti
hlt
mov
pop
jno
pop
lret
arpl
dec
mov
clc
cmp
jmp
popf
sahf
sub
imul
add
gs
sbb
into
xrelease
daa
aas
add
fstl
outsb
adc
xorb
cmp
add
adc
test
sub
aas
loope
mov
adcb
pop
addr16
xchg
inc
sbb
dec
jo
adc
mov
jg
inc
call
pusha
lea
call
push
mov
call
pop
and
rcrl
push
das
aaa
rcrl
adc
jns
scas
sbb
cmp
addr16
jmp
pop
lret
sub
sti
push
mul
add
inc
inc
movsb
sbb
sbb
in
and
inc
sahf
insl
stc
in
mov
cmp
shr
ja
fiadds
cmp
orb
xchg
sub
add
add
rcll
sbb
cmp
push
in
xchg
add
cmc
fmuls
mov
jmp
jge
cmp
pusha
int
test
xchg
lahf
out
icebp
enter
cmp
sbb
inc
sub
test
jns
rcll
int3
insb
jae
nop
sbb
jmp
push
mov
mov
adc
inc
mov
xchg
mov
push
sub
pop
in
mov
xor
pop
dec
data16
jge
and
push
cs
inc
enter
xor
pop
lret
adc
fucomp
lret
mov
repnz
adc
pop
std
rcr
push
lock
mov
push
les
lods
jg
lret
push
fadds
test
out
aaa
adc
push
mov
jbe
lods
int3
push
fsubs
inc
mov
push
sbb
cmp
mov
inc
sub
pop
scas
dec
out
cmp
xchg
hlt
or
push
not
ret
call
aas
movsl
dec
inc
jp
cmp
dec
jg
dec
je
push
add
cmpsb
jbe
xchg
mov
inc
xchg
cmpsl
es
inc
fistpll
ljmp
mov
movb
mov
lea
call
pusha
pusha
adc
pushl
jmp
ljmp
pusha
sub
sub
pop
out
adc
fwait
lods
je
or
scas
or
outsl
xor
je
iret
jo
pop
data16
and
cwtl
xor
dec
cmp
hlt
sub
and
loop
dec
es
push
mov
mov
sub
sbb
int3
pop
mov
xchg
inc
and
js
inc
pop
lods
cmc
fisubrl
mov
rcll
add
es
dec
sub
cld
shll
orl
lea
aam
imul
xor
push
sub
mov
sbb
loop
outsl
jb
shr
pop
imull
jecxz
ss
cmpsb
cmp
sub
inc
in
dec
fdivs
push
dec
inc
dec
sub
xchg
repz
jecxz
fildll
xchg
adc
cld
test
pop
mov
push
aaa
add
fstl
shl
mov
sbb
test
sbb
lods
repz
rorl
sub
mov
iret
add
adc
pop
stos
and
scas
jl
movsl
icebp
jbe
cli
add
push
mov
pop
inc
pop
pop
mov
scas
add
xchg
or
cmp
nop
add
subb
xchg
jb
add
cmp
push
mov
fcmovnb
and
mov
xlat
pop
fistps
loope
jne
xchg
clc
bt
cmpb
pushf
mov
jmp
mov
lea
jle
mov
call
lea
js
call
pushf
pushf
pushl
pushf
lea
jmp
mov
pop
repz
rcr
loope
pop
divl
dec
fistps
push
push
addb
pop
push
mov
movsb
test
xchg
lret
xor
icebp
adc
mov
faddp
test
loope
mov
andl
repnz
dec
movsl
and
and
aaa
dec
push
pop
sbb
rcr
cmp
jle
inc
push
lea
dec
pop
jns
ret
popa
clc
and
xchg
or
mov
pop
addr16
fmuls
pop
das
cltd
aad
or
int
adc
xor
mov
cld
popa
pop
mov
jmp
add
loop,pt
jo
jnp
rcrb
rorb
les
and
xlat
sti
std
sub
push
push
sarl
aas
loopne
outsl
jnp
pop
cli
lods
xor
hlt
ss
iret
mov
dec
scas
inc
push
not
pop
outsb
or
adc
lretw
and
and
or
rcr
xchg
pusha
mov
and
mov
mov
cmc
xchg
bswap
mov
push
jmp
stos
mov
cmpsl
jbe
popf
lods
ficompl
lods
jne
xor
stc
jnp
call
mov
jg
mov
sub
jmp
sbb
mov
scas
mov
lods
mov
xor
cmpsl
xchg
push
cmpsl
movl
mov
ret
mov
lock
or
lahf
cmp
mov
stc
pushf
or
fwait
sbb
fwait
pop
sahf
int
daa
mov
test
sub
add
add
loop
lods
mov
sub
or
adc
out
out
pop
mov
push
lods
incl
je
out
test
hlt
mov
sub
icebp
jmp
lods
insl
in
insl
outsb
insl
scas
insl
out
insl
outsl
insl
fisubrl
insl
jmp
in
insl
insl
insl
sub
insb
insl
daa
insl
lods
sub
fsubrl
shrl
enter
mov
xor
loope
outsb
adc
lods
cmp
push
pop
aas
lods
call
and
push
adc
insl
add
ds
add
aas
adc
lds
movsl
adc
jmp
insl
push
sarl
add
inc
cmp
shrl
clc
sub
add
pushf
test
cmc
ret
cmp
rorl
mov
inc
stos
adc
sarb
iret
jo
ds
cmp
fwait
scas
hlt
loopne
movsb
mov
mov
cmpsl
cmp
mov
cmpsl
lcall
test
fistpl
pop
fsubl
mov
sub
addr16
lahf
sub
pop
add
movsb
out
outsl
mov
sbb
cmpsb
in
mov
lods
cld
jg
push
adc
mov
inc
push
rcll
cs
nop
aas
js
cmp
jmp
xchg
inc
mov
xor
mov
add
imul
out
sub
adc
jmp
nop
inc
mov
mov
mov
mov
xchg
int
daa
mov
out
xchg
jp
mov
or
add
lods
sub
les
mov
fcomi
cmpsl
cs
inc
mov
add
in
lods
xchg
cmc
add
popf
test
mov
lret
mov
movsb
sbb
cmc
jmp
loope
pop
mov
mov
mov
ret
pop
mov
mov
jns
enter
mov
pop
pop
int
ljmp
xchg
xchg
leave
cmpsl
jmp
pop
fwait
inc
fnsave
test
cmc
jae
leave
sbb
clc
adc
mov
lods
jmp
jmp
nop
or
pop
shll
lea
mov
add
mov
add
add
jbe
mov
scas
loop
jge
aaa
fildll
imul
shlb
xchg
cwtl
or
mov
nop
mov
push
test
inc
push
cwtl
sbb
sub
jmp
inc
pop
mov
push
mov
ret
adc
xchg
aas
pop
leave
clc
mov
xchg
cwtl
adc
mov
imul
popf
sahf
or
add
test
xor
adc
add
movsl
mov
enter
lea
lods
xor
mov
jp
xchg
xchg
xlat
lods
jbe
lods
cmp
push
pop
rcll
push
in
aas
imul
and
lds
jle
cmp
sbb
mov
mov
push
inc
xor
add
mov
test
mov
test
scas
or
test
jae
mov
cwtl
xor
add
aam
mov
arpl
mov
xchg
pop
and
adc
stos
xchg
push
or
xlat
jmp
mov
mov
mov
inc
add
push
xchg
movsl
lods
add
and
les
sbb
testl
js
sahf
adc
lods
add
xchg
outsl
mov
push
mov
repnz
popa
enter
fdivs
lods
loope
daa
out
lods
add
xor
lods
lods
sub
pop
mov
mov
in
or
popa
lods
push
call
mov
lods
and
aas
ja
push
mov
dec
test
dec
dec
imul
mov
stc
ljmp
pop
lods
or
out
lods
cmp
mov
push
add
mov
test
enter
mov
subb
push
xchg
and
jae
stos
pop
stos
push
stos
jg
ret
push
out
jbe
push
lods
pop
xorl
in
pop
repnz
jno
into
lods
xchg
sub
or
clc
loopne
out
mov
test
sub
dec
push
pop
mov
cs
fwait
lods
fcoms
cmc
cmpsl
xchg
mov
dec
mov
pop
test
and
mov
mov
cmpsl
lahf
stc
movsb
sti
in
push
pop
sub
pop
lods
push
dec
sub
jo
mov
push
lods
pop
dec
sub
adc
lods
sbb
out
xchg
test
cmpl
jo
mov
inc
rclb
mov
add
jmp
jle
lea
enter
fidivrl
aad
cli
aaa
pop
shlb
push
xchg
lea
test
pop
push
dec
adc
pop
imul
in
mov
popa
test
xchg
add
mov
hlt
inc
add
incl
bound
popf
scas
xchg
roll
push
jae
mov
je
mov
adc
outsl
lahf
popf
lods
adc
pushf
lods
ret
fmul
fwait
push
in
xchg
mov
xchg
out
ret
cmc
or
mov
mov
in
mov
pushf
xchg
pop
stos
movsl
in
pop
jo
movsb
lahf
scas
call
xor
or
jecxz
in
mov
in
cs
movsl
mov
outsb
mov
adc
mov
cmpps
adcb
aaa
adc
rorl
xchg
fwait
add
mov
ret
test
adc
or
mov
nop
addb
push
aas
xchg
aam
cmp
mov
lea
ret
jg
idivl
sub
aaa
fildll
xor
xchg
les
jle
push
insb
iret
push
push
adc
mov
mov
cmp
mov
sarl
cltd
mov
cmpsl
xchg
lods
fistpl
sub
xchg
loop
ret
adc
xor
push
rclb
das
out
sahf
clc
jnp
scas
pop
jge
jg
push
sub
fisubrs
mov
xchg
out
rolb
mov
adc
cmp
idiv
push
nop
push
fdivrs
cmpl
popf
sub
aam
les
sbb
mov
jg
cli
inc
xor
lods
test
pop
test
mov
aaa
xchg
rcrl
push
jge
subb
sub
adc
mov
repz
and
sub
sbb
mov
loopne
movsb
addr16
repz
cwtl
test
hlt
movsb
insb
scas
and
cmpsb
jge
lret
test
fcomps
nop
mov
aam
fbstp
cmp
out
cs
decb
test
test
mov
hlt
adc
xor
pusha
das
loope
jb
lahf
repnz
fs
push
jecxz
adc
lea
jecxz
cmpsb
mov
push
lahf
mov
mov
lods
pop
pop
ficomps
jg
lods
cltd
mov
dec
pop
xchg
call
in
sti
xchg
sarb
inc
mov
pop
pushf
icebp
jecxz
xor
sahf
sti
fwait
cmpsl
pop
mov
addr16
mov
pop
add
fbld
inc
pop
std
pop
in
cmp
test
dec
fwait
sahf
lret
mov
aas
mov
mov
mov
mov
xchg
mov
insb
adc
cmp
jge
rcrb
push
mov
xor
push
sbb
sub
cwtl
xchg
inc
push
cmp
cld
mov
mov
xor
rclb
dec
xor
popf
mov
or
fwait
sbb
sub
hlt
pusha
jecxz
cmp
cmp
jne
pushf
in
daa
outsl
scas
xor
cwtl
mov
shl
xchg
jns
sarb
mov
repz
mov
out
sub
mov
cmp
xchg
mov
lcall
stos
lret
pop
in
inc
in
xchg
pop
sub
fwait
test
daa
xor
fcmovnu
sahf
cwtl
pop
ffree
pop
lahf
push
pop
cmpsl
lds
sbb
sub
jl
pop
cmc
xor
sbb
ds
scas
out
cmp
jmp
rorl
pop
xchg
stos
xchg
test
fists
or
pop
jge
stos
fwait
scas
sti
out
adc
jecxz
push
cmp
lds
add
mov
test
cld
popl
aas
cmpsb
xchg
push
or
cwtl
mov
inc
xchg
shll
mov
lods
sub
dec
push
out
cmpsl
and
mov
mov
sub
mov
adc
fdivrs
sbb
lods
ja
and
adc
addr16
sub
mov
jno
or
xchg
lods
stos
sub
jne
test
or
mov
cmp
cmpsl
xor
cltd
mov
cmp
push
mov
jo
test
push
pushf
movsl
scas
cmpsl
scas
xor
jb
call
or
xor
aad
sbb
inc
pop
addr16
out
xor
lcall
mov
push
pop
xor
stos
pop
mov
gs
lcall
mov
loope
mov
xchg
lods
leave
dec
lahf
stos
mov
movsl
lahf
repnz
fs
mov
jbe
add
jp
ret
sbb
test
repnz
mov
push
sbb
jmp
xor
test
imul
fdivl
sbb
insl
mov
and
aaa
movsl
mov
inc
mov
xor
sub
pop
mov
leave
fsts
leave
sti
fcomps
mov
pushf
sti
xchg
ljmp
jp
cmpsb
mov
ret
xor
or
fisttpll
es
mov
divb
push
cmp
push
mov
xchg
pop
inc
out
add
sub
imul
dec
push
sub
xor
xchg
mov
inc
icebp
mov
mov
fldenv
pop
xor
pop
nop
test
movsb
enter
in
sub
lods
mov
xchg
mov
fldcw
lods
and
movsl
xor
pop
xor
sbb
lods
mov
enter
shrl
inc
mov
lods
push
cltd
xor
pop
fisttpl
adc
cmpsl
mov
lods
popf
inc
mov
mov
sbb
outsl
leave
pop
sbb
cmp
mov
pop
stos
pop
in
sbb
pop
out
push
add
je
pushf
xor
sub
insb
cmpsl
mov
lret
mov
jle
sti
xchg
imul
in
int
pop
lods
sbb
das
insb
in
jmp
sub
lea
or
scas
outsl
popa
hlt
xor
jo
in
jbe
mov
dec
lods
test
push
cmp
xchg
stc
or
xor
xchg
sahf
or
sub
mov
insb
mov
popf
lods
pop
mov
sub
mov
popf
lods
pop
xchg
xor
pushf
nop
sub
mov
popf
scas
pop
xchg
xor
pushf
xchg
cs
daa
outsl
mov
sbb
pushf
leave
out
enter
popf
push
pushf
call
mov
popf
imul
mov
sub
xor
movsb
daa
sub
xor
cwtl
daa
xor
xor
daa
xor
mov
jne
scas
xor
les
inc
pushf
mov
int
daa
mov
stos
popf
testb
xor
pushf
test
dec
rcrb
pushf
lods
das
int
daa
jo
out
mov
ret
lock
daa
shlb
and
gs
movsl
in
data16
out
lahf
stos
fistps
pusha
mov
scas
loope
leave
test
insl
stos
scas
sub
outsb
sub
popf
in
sbb
imul
fs
in
mov
data16
dec
jno
lahf
pusha
mov
ljmp
jmp
push
mov
xor
das
ss
scas
jno
scas
jo
ja
inc
mov
in
stos
movsl
gs
and
and
addr16
jmp
ljmp
test
les
jbe
test
sub
mov
rcr
sub
test
dec
movsb
test
in
gs
cmpsl
in
mov
insl
mov
cld
and
sub
sub
xor
imull
mov
mov
sub
out
addr16
sub
jbe
ja
out
dec
jne
xor
outsl
mov
scas
sbb
aam
sub
imull
push
fs
in
jmp
sub
test
sub
xchg
sub
daa
xlat
stos
sub
aad
jmp
sub
test
add
sub
in
xor
mov
mov
je
cmpsl
call
mov
mov
sub
les
lods
add
popf
sub
fldcw
push
lock
mov
sub
pop
mov
ljmp
xor
lock
mov
lods
repz
pop
push
sub
in
sub
sub
stos
add
cmc
cwtl
jmp
out
xchg
mov
jo
pop
test
mov
or
lock
push
sub
xor
ss
jno
mov
aam
ljmp
sub
call
cs
or
repnz
mov
or
je
cmp
mov
sbb
sub
cmpsl
mov
jbe
sub
insl
repz
push
test
aas
test
imul
ss
jno
ljmp
sub
scas
repz
test
sub
repz
pop
mov
sahf
mov
fidivrs
pop
test
cmpsb
mov
movsb
ljmp
aam
enter
cmc
jmp
xlat
cmpsb
add
pop
jnp
repz
sub
cs
cs
push
sub
cwtl
mov
test
fsubrs
out
pop
in
cltd
popf
sub
mov
mov
imul
jmp
cmp
jno
int3
lcall
sbb
sub
and
mov
jecxz
out
xchg
mov
mulb
test
mov
sub
outsl
xor
int3
cmp
testb
gs
mov
movsl
cli
fwait
lret
sub
cmpsb
lods
xchg
sub
cmpsb
pop
mov
hlt
out
es
xchg
sub
mov
pop
mov
call
and
push
xor
ja
add
mov
cs
lret
loope
cmp
and
lea
in
ss
push
mov
iret
sub
cmp
mov
lods
and
das
iret
sub
jmp
rep
lret
test
jnp
push
dec
sub
pop
sub
mov
mov
je
cs
mov
daa
aas
imul
jmp
sub
mov
cmc
les
sub
int
das
sub
or
outsb
repz
add
scas
sub
test
test
push
cmpsb
test
in
das
pop
scas
mov
sub
scas
jmp
and
mov
hlt
ljmp
add
ja,pn
sub
jne
ss
dec
cmp
ljmp
pop
leave
push
cmpsl
sub
ljmp
mov
mov
in
out
lock
sub
mov
sub
repz
mov
sub
scas
test
aas
stos
nop
sub
rorl
mov
sbb
ljmp
sbb
fwait
lcall
aam
cs
sub
movsb
in
mov
aad
mov
ja
out
les
ss
mov
mov
push
xchg
imul
sub
ljmp
sub
sub
push
gs
movsb
iret
pop
or
mov
stos
sub
test
or
add
outsb
mov
leave
hlt
lods
rorb
mov
out
ret
pop
ss
xor
in
in
and
lock
sub
sti
ljmp
test
rorl
adc
stos
lods
push
push
xchg
pushf
out
mov
movsb
imul
rorb
sub
xor
out
mov
shlb
jbe
xor
imul
cmc
jno
sti
cmp
mov
shll
fistpll
cmp
jle
mov
sub
sbb
cmc
ds
cmpsb
lods
jg
cs
jmp
testl
iret
ja
add
out
out
clc
test
adc
sbb
sysenter
mov
mov
enter
int3
pop
jns
cmpsl
out
scas
mov
stc
test
sub
test
daa
imul
jae
repz
ljmp
mulb
lock
jp
cmc
out
sub
test
mov
ret
cli
jo
rep
cmp
sub
push
sub
mov
sub
test
add
inc
call
repz
jmp
add
sahf
scas
xor
sub
test
lds
sub
xchg
loope
sbb
jbe
mov
pop
daa
cmc
xchg
mov
xor
icebp
das
test
sub
xchg
je
orb
sub
ljmp
lods
cwtl
xor
das
das
lock
xchg
lcall
orl
ffreep
enter
inc
add
cmpsl
sbb
pop
lods
je
jmp
andb
aam
movsb
mov
jbe
ja
jne
sbb
pminsw
jno
mov
ret
mov
add
inc
add
repz
sub
push
sub
lret
jo
test
push
sub
mov
call
insb
out
imul
fwait
mov
in
in
mov
jno
push
mov
ja
mov
xor
dec
insl
lret
lods
mov
adc
addr16
lds
scas
hlt
in
lods
mov
sub
sbb
sub
hlt
dec
sbb
shrl
lret
nop
out
in
mov
daa
aam
test
sub
mov
test
sub
sbb
aas
jne
sub
xor
sub
ss
jno
cli
lcall
or
sbb
jmp
into
sub
sub
out
repz
push
lods
stos
mov
jnp
test
je
dec
ljmp
or
push
mov
jbe
into
mov
sub
out
out
xchg
movsl
pop
sub
jne
test
les
scas
cmp
jno
je
aad
lcall
pushl
lret
jbe
cmpsl
scas
jne
lods
mov
stos
sub
dec
cmp
jmp
lret
xor
test
mov
sub
jno
mov
sahf
in
mov
imul
lret
notb
xor
jb
test
repz
ljmp
sub
mov
sub
test
jo
leave
je
in
push
je
add
sub
lcall
and
cmc
jno
divl
pushf
test
sbb
into
xor
jno
jb
pop
test
mov
xor
xor
jae
mov
sub
das
je
sub
fldt
sbb
mov
pop
cmpsl
fdivl
pop
lods
ljmp
mov
sub
lock
pushf
test
mov
lret
sub
xor
scas
push
sub
push
imul
insb
stos
mov
ja
xor
lock
out
mov
scas
mov
sahf
push
mov
sbb
push
leave
insb
mov
outsl
scas
xor
xor
mov
mov
mov
mov
out
jno
push
repz
mov
cmc
in
jbe
movsb
cmpsl
mov
mov
test
cmpsb
sub
fmulp
sub
daa
imul
mov
ja
cmp
out
fs
sub
dec
xchg
xchg
mov
push
pop
or
and
mov
scas
in
jbe
push
lds
movsb
in
or
out
adc
lods
xchg
into
lahf
jmp
pop
lret
insl
jmp
lock
scas
add
imul
out
mov
mov
out
xchg
cmp
in
test
push
sub
ret
lods
mov
mov
imul
xor
das
inc
leave
lea
scas
test
mov
das
cs
scas
cwtl
mov
jno
ror
sbb
and
stos
das
sub
sti
xchg
outsb
xor
aas
and
and
scas
shlb
fwait
or
cmpsb
insb
sub
mov
mov
push
mov
mov
in
lret
imulb
cmpsl
dec
sahf
jmp
repz
push
rcr
lods
xchg
push
mov
shr
jb
adc
xchg
mov
cld
sub
bound
sub
int3
test
adc
dec
fwait
jecxz
push
mov
lcall
stos
mov
dec
test
test
lds
test
jl
cs
mov
cmpsl
xor
sub
inc
cltd
insl
out
test
scas
js
lds
in
and
jo
mov
adc
cmpsl
ja
cmp
pop
and
mov
push
in
dec
vmovdqu
mov
xchg
outsb
jne
mov
xor
insb
stos
inc
stos
scas
shlb
jmp
ja
ljmp
xchg
xlat
cmp
xchg
adc
insl
rep
lock
sbb
cltd
sbb
sub
mov
lods
cltd
mov
lret
rorl
lods
mov
scas
daa
je
cltd
or
mov
mov
mov
insl
lods
ja
out
aad
pop
mov
sub
xchg
pop
es
outsl
mov
sub
in
jmp
stos
lods
push
or
inc
popf
outsb
out
cwtl
ljmp
inc
hlt
inc
mov
sub
fwait
push
xor
xlat
lods
mov
xor
enter
xor
cmpsb
fisttpl
lds
mov
out
sbb
cmp
inc
mov
and
xchg
lea
adc
lods
repz
xor
mov
hlt
jl
push
lret
pop
lret
mov
inc
jecxz
and
lds
jmp
mov
jbe
sub
out
movsl
xor
sub
mov
xchg
hlt
scas
mov
add
push
and
nop
mov
lea
out
sub
scas
lods
leave
cmpsl
cmp
mov
mov
imulb
and
pxor
mov
mov
sbb
movsl
lret
cmp
xchg
movsb
adc
cmpsl
test
inc
mov
jo
adc
test
out
cmp
repz
xchg
inc
lods
stos
in
repz
and
and
imul
inc
scas
mov
fistpl
std
int
push
inc
jp
scas
mov
ljmp
daa
out
out
inc
out
test
cmp
shlb
leave
push
mov
and
mov
pop
sub
daa
mov
aaa
enter
fistpl
xchg
test
mov
sub
jl
mov
mov
lods
repz
aaa
cmpsb
cs
in
stos
out
mov
stos
movsb
cmpsb
sub
imul
cmpsl
mov
sbb
xor
sub
or
mov
in
mov
inc
fldt
xchg
in
mov
cmc
popf
push
xchg
jmp
cmp
and
in
sub
sbb
ret
test
sub
lahf
int
sub
push
mov
mov
cmp
enter
xor
lret
sahf
mov
popf
lods
cwtl
and
es
mov
mov
or
lret
ss
mov
ret
push
jo
mov
lods
mov
sub
scas
ljmp
lea
mov
jbe
lods
and
mov
mov
dec
ss
int
into
movsb
xchg
fdivs
cmp
sub
outsb
cmp
jmp
call
xchg
fmull
shlb
jbe
cmpsb
sub
xor
movsl
jno
mov
lods
fimull
dec
mov
inc
and
sub
sub
outsl
mov
mov
fmul
xchg
mov
xchg
leave
push
adc
adc
pop
into
test
popa
lret
add
sbb
fiaddl
movsb
in
mov
daa
jbe
inc
ret
adc
int3
mov
arpl
xor
enter
lods
xor
mov
das
ds
pop
or
pop
push
mov
sub
jmp
daa
in
test
inc
ret
fstpt
sub
dec
lcall
sbb
push
sbb
sub
test
outsb
dec
mov
sbb
or
ljmp
lret
sbb
cmp
jmp
xor
cmp
daa
jmp
xchg
push
scas
adc
add
inc
insb
jmp
adc
sub
lods
loop
cltd
mov
lret
fisubrs
stos
mov
sub
aaa
pop
aas
hlt
fwait
cmp
leave
das
adc
mov
jo
mov
mov
mov
rcrl
cmpb
jnp
push
or
int
int
sub
rorb
mov
cld
xor
stos
stos
adc
xor
mov
sbb
inc
xchg
xor
inc
sub
and
xor
dec
das
mov
les
outsl
xchg
int
mov
in
les
idivb
mov
pushf
in
lock
cmp
insb
or
adc
lods
jp
lahf
shl
xor
jl
mov
cmpsl
cmp
sub
adc
cwtl
mov
lods
jmp
aad
insl
mov
popf
mov
je
xchg
enter
cmp
push
test
jae
lock
add
inc
lea
mov
mov
popf
pushf
mov
cmp
outsb
jmp
in
scas
into
add
xchg
xchg
or
cmp
mov
sub
popf
mov
dec
out
xchg
pop
mov
ss
movsb
mov
or
ret
xor
scas
push
lret
mov
mov
leave
ds
dec
xchg
mov
dec
and
add
cmp
jecxz
mov
sbb
or
adc
lret
leave
sub
mov
rolb
inc
xor
movsl
insl
or
fidivs
or
pop
loopne
fdivrl
cs
mov
mov
cwtl
dec
cmpsl
mov
adc
push
push
lahf
lcall
dec
and
lret
fwait
mov
mov
cmp
xor
dec
inc
mov
movsb
mov
in
add
dec
mov
mov
shr
xchg
ret
xchg
inc
fisubrs
sub
and
jns
or
push
int
insb
push
leave
lret
cltd
mov
push
pop
adc
sbb
xor
ja
mov
and
call
sbb
mov
imul
jecxz
xchg
xchg
push
cltd
ljmp
fidivrs
inc
cmp
xor
mov
mov
push
mov
xchg
sub
fdivrs
aaa
frstor
out
mov
jo
inc
xchg
ljmp
outsl
mov
mov
xor
divl
out
xchg
inc
outsl
adc
pop
dec
sub
sub
mov
repnz
lock
sbb
xchg
test
xchg
sbb
das
mov
mulb
stos
lods
movsl
mov
mov
in
mov
xor
mov
sub
in
fwait
dec
mov
xor
and
xor
test
cltd
popf
and
mov
and
mov
inc
fisttpl
cmpsb
lds
fisubrs
addr16
or
mov
dec
mov
fdivs
jecxz
test
mov
scas
xchg
mov
sub
xchg
movsl
xchg
adc
or
xchg
mov
and
cmpsl
les
mov
lahf
repz
out
sbb
or
enter
test
cmp
leave
cs
cmpsb
push
xor
mov
ss
mov
enter
adc
cmp
xchg
push
sub
push
rorl
add
sub
push
xor
jmp
push
xchg
mov
ret
xor
jo
mov
out
repz
lret
lcall
mov
shrb
outsb
mov
leave
int
pop
xchg
adc
lods
mov
into
adc
sahf
xchg
fisubs
outsb
adc
push
inc
das
dec
scas
dec
cmp
lret
roll
xor
fdivrl
or
daa
sub
and
and
cs
clc
push
sahf
adc
mov
lods
cs
lret
cmp
adc
push
in
outsl
mov
xchg
inc
fcompp
scas
mov
mov
lret
movsb
pop
dec
or
aad
cmpsl
imul
mov
cli
lods
adc
movzwl
mov
cltd
and
fdivl
ljmp
test
pop
push
out
daa
xchg
mov
enter
and
xor
push
xor
mov
fldenv
lock
daa
or
int3
xchg
cmpsl
and
in
stos
mov
lret
daa
mov
jmp
fcmovnb
repz
cmp
and
mov
xlat
jne
loope
sbb
std
cmp
aad
inc
lods
xor
xchg
mov
test
cmpsb
test
mov
das
pop
xchg
lods
sbb
and
sub
jae
cmp
test
lods
in
cmc
je
mov
sub
sbb
test
mov
out
mov
es
sub
lods
jmp
sahf
ljmp
clc
push
adc
pop
push
pop
add
sub
and
adc
insb
mov
popf
mulb
inc
cld
adc
cmpsl
dec
rorl
test
enter
frstor
das
into
xor
lods
adc
dec
xchg
lea
mov
mov
adc
lret
daa
xlat
push
scas
enter
leave
xchg
popf
je
es
or
xchg
imul
sub
cmpsl
outsb
cmp
lods
mov
mov
hlt
out
aad
xchg
mov
mov
sub
cwtl
sub
xor
jb
push
xor
or
das
sub
push
adc
out
sbb
sub
imul
mov
cmp
sub
mov
pop
dec
or
pop
shrl
inc
jbe
ss
lret
pushf
xchg
or
sub
mov
xchg
in
stos
sub
lcall
mov
adc
movl
leave
sbb
cmp
or
cs
sahf
and
adc
sbb
mov
mov
mov
lock
xchg
mov
xlat
push
aas
inc
int3
inc
jmp
nop
push
stos
push
sbb
das
mov
insb
rdmsr
inc
scas
or
xchg
es
xchg
and
mov
push
mov
leave
in
mulb
sarl
test
in
outsl
xchg
rolb
adc
es
mov
cltd
mov
in
mov
and
mov
test
xor
mov
out
cltd
test
adc
pop
test
in
lahf
jo
ret
rcrl
dec
cltd
mov
mov
or
outsb
fwait
test
movsb
scas
sub
push
lcall
mov
popf
mov
and
cmpsl
mov
sub
test
jmp
xchg
stos
sbb
lods
cmp
and
leave
or
paddsb
call
jno
jbe
mov
sub
push
out
and
ljmp
or
xchg
or
sub
mov
nop
insb
or
xor
sub
leave
xchg
dec
and
lahf
popf
cmp
insl
xchg
imul
add
mov
lea
pop
sub
cs
mov
jmp
mov
jbe
mov
mov
dec
rolb
xchg
scas
adc
mov
ljmp
jmp
or
lcall
popf
fsubrl
mov
xchg
jae
lcall
outsl
xchg
stos
dec
pushf
mov
cltd
adc
cmp
adc
or
xor
leave
call
cltd
sub
jno
sub
out
mov
mov
scas
inc
movsl
scas
mov
inc
call
xor
mov
popf
sub
nop
mov
dec
pop
push
pop
or
shlb
call
cs
cwtl
insl
shlb
pushf
mov
lea
test
mov
adc
lret
int
cmp
adc
or
cmpsb
adc
hlt
test
out
enter
and
mov
enter
outsl
nop
ss
scas
jle
call
pushf
jecxz
scas
mov
adc
sbb
cmp
pushf
or
mov
cmpsl
adc
leave
and
out
outsb
mov
fstpt
std
lret
out
jne
sub
test
mov
xchg
or
movsb
cltd
jbe
flds
cs
add
push
or
xchg
and
aad
int
or
xor
xor
popf
mov
pushf
outsb
iret
pushf
sub
nop
and
stos
fisttpl
lods
movsb
cmp
cs
rcrb
scas
fcmovnb
mov
adc
cmpsb
ljmp
in
in
lcall
ss
mov
mov
leave
xor
lods
ljmp
aam
mov
mov
inc
mov
inc
daa
ds
mov
mov
pop
mov
neg
inc
das
mov
popf
mov
fldcw
sub
pushf
cmc
mov
aaa
inc
push
call
in
enter
mov
mov
jne
js
retw
mov
stos
adc
test
add
cmp
sahf
sbb
mov
outsb
adc
mov
pop
cmp
sub
scas
outsb
dec
les
aaa
cmpsb
add
sub
repz
movsb
xchg
fucomp
adc
inc
in
xchg
lock
mov
sti
mov
clc
ja
lds
pop
hlt
mov
movaps
sbb
lds
cltd
jmp
inc
lcall
sbb
jns
sbb
mov
xchg
decl
clc
cmp
adc
test
shlb
popf
mov
mov
sub
pop
jp,pn
fsubs
les
data16
sbb
movsl
leave
push
fisubrl
fistl
hlt
mov
jns
outsb
mov
adc
imul
dec
inc
lods
sub
push
adc
cmpsb
dec
mov
stos
mov
or
ja
sbb
popf
and
cwtl
mov
jbe
in
mov
mov
lods
adc
ja
sub
xor
lahf
pushf
inc
xchg
leave
cmp
pop
cmp
lock
ss
xchg
into
mov
fcmovnu
cmp
mov
nop
mov
cwtl
jmp
cwtl
xchg
cmpsl
sub
sub
leave
add
hlt
fists
sub
lahf
inc
dec
nop
pop
test
or
ljmp
pop
mov
scas
in
xchg
mov
mov
aaa
je
push
sub
inc
int3
mov
stos
pop
mov
inc
sbb
outsb
ja
mov
sbb
mov
fwait
xor
mov
cmp
lock
lcall
jb
and
out
mov
scas
aam
and
loopne
xchg
lods
mov
xchg
or
shlb
dec
cltd
adc
mov
lret
in
rep
std
hlt
aam
das
and
int
out
xlat
movsb
ja
mov
hlt
mov
lock
dec
inc
ret
lret
fwait
scas
xchg
cmpsb
cmp
jae
mov
lods
ficoms
xchg
cmp
and
or
xchg
lds
lods
sbb
movsl
cs
int3
mov
call
adc
adc
in
mov
rorl
xchg
cmpsb
mov
adc
sahf
mov
dec
and
sbb
pop
insl
xor
mov
mov
imul
repnz
cld
mov
sbb
mov
hlt
cmp
aaa
pop
mov
pop
adc
add
lods
aaa
mov
xchg
pushf
sub
mov
xor
in
ja
lahf
lea
or
mov
movsl
xchg
adc
cwtl
outsb
je
mov
scas
lods
push
lds
das
and
lods
cmpsl
mov
xchg
mov
mov
inc
xchg
repz
sbb
xchg
jo
xor
jecxz
in
xchg
shll
dec
mov
test
xchg
nop
in
lea
daa
stos
dec
or
sub
mov
sti
xor
divl
xlat
cmp
ss
sahf
insb
xchg
and
adc
xor
inc
in
outsb
pop
ds
mov
ljmp
fisubrl
stos
addr16
aaa
shll
sbb
out
cmp
mov
sub
aas
jmp
repnz
out
sub
adc
popf
add
aam
jno
sub
pop
pop
imul
movsb
xor
jg
jmp
ljmp
ja
test
and
xchg
inc
fldt
imul
and
das
lods
cmc
test
adc
lret
sub
in
sub
aad
scas
adc
lock
int3
test
push
pop
jp
lods
out
scas
lcall
in
dec
test
je
aad
mov
cmp
out
inc
frstor
cmp
mov
jg
mov
sub
and
out
pop
out
mov
fldt
stos
sub
fucomp
scas
lods
daa
push
sub
out
adc
leave
xor
in
aad
xor
inc
jne
ljmp
sbb
fnstsw
es
shr
and
repz
repnz
sbb
cmp
into
mov
xchg
scas
shlb
ss
hlt
hlt
lods
test
out
jns
mov
push
scas
aaa
lock
mov
xchg
cmpsl
leave
xchg
shl
das
push
out
lahf
sbb
hlt
cmp
out
cmpsl
mov
je
push
out
push
divb
jge
imul
lds
das
out
dec
enter
xor
sub
sbb
out
jo
repz
sub
scas
jno
mov
sub
fsub
push
sub
daa
mov
lcall
lock
stos
hlt
jno
push
call
xor
hlt
mov
mov
out
push
lea
repz
sub
out
cmp
or
pop
mov
test
mov
gs
jmp
mov
sub
ja
mov
mov
adc
scas
out
pop
push
out
out
or
mov
leave
out
je
mov
sub
or
stos
sbb
xor
fdivl
pushf
cmpsl
sub
push
scas
movsl
mov
sub
fs
sub
pop
iret
scas
insl
sub
jmp
nop
jnp
call
xor
and
pop
sbb
lea
or
add
add
je
mov
sub
scas
adc
stc
cmpsl
out
je
ljmp
adc
outsb
rorl
xchg
ss
push
movsb
test
lea
sub
mov
mov
btr
scas
movsb
jmp
jb
mov
inc
lcall
mov
mov
dec
aam
sub
sub
pop
and
add
out
jbe
lret
repz
out
xor
out
shr
test
test
sbb
pop
shrl
iret
xchg
insl
sub
insb
lea
sbb
jae
sbb
or
out
lret
sub
jbe
cmp
scas
out
jmp
inc
cmc
jl
pop
out
or
out
shr
pop
jmp
fwait
pop
scas
jae
xor
dec
xor
sub
and
out
sbb
mov
test
cmpsl
insb
mov
add
in
cmp
mov
mov
shll
imul
cmp
push
inc
ret
outsl
sub
jecxz
lods
pushf
ss
test
sbb
xchg
xor
sbb
jno
mov
sub
inc
jle
mov
test
cs
pop
pop
mov
lea
stos
stos
repz
lea
sub
sub
popf
or
mov
aaa
sub
in
scas
ja
xor
cmp
shlb
cmc
push
sbb
insl
sub
lds
pop
sub
add
nop
out
xchg
push
cmp
lods
add
adc
jne
mov
lods
or
repz
test
jae
xor
lcall
js
xor
lods
fsubrs
sub
scas
out
fistl
stos
xor
jae
je
cmp
idivb
add
jne
ds
enter
cld
xor
pop
xchg
mov
out
pushf
mov
xchg
pop
call
push
mov
js
mov
int3
mov
xchg
mov
scas
mov
jno
xchg
nop
or
xlat
mov
daa
loop
mov
cmpsl
call
sub
lods
sub
pushf
out
mov
cs
jno
mov
sbb
setl
pop
mov
adc
xchg
xor
sub
lret
adc
adc
cmp
fldcw
mov
gs
and
ljmp
pop
sub
aad
jl
cltd
out
sub
stos
mov
shrb
xor
mov
add
or
mov
ret
movsb
cmc
fnsave
cmp
in
mov
adc
mov
nop
pop
and
xor
sub
lods
mov
and
cmp
fsubrs
mov
xor
mov
repnz
aaa
adc
pushf
mov
cmpsl
cmpsb
inc
dec
mov
mov
out
inc
pop
cmc
mov
inc
imul
cmpsl
cltd
ss
adc
inc
int3
test
sub
mov
mov
aaa
xchg
stos
pop
mov
sub
jbe
cmovns
lods
sahf
lret
cmc
mov
push
stc
cwtl
lods
sub
cli
enter
das
and
or
mov
xor
repz
out
mov
ret
sbb
repz
aaa
movsl
nop
xor
or
dec
daa
je
ret
daa
sub
cwtl
enter
push
popf
pushf
sub
xor
lock
cmp
mov
popf
cmp
es
pop
lods
iret
sub
mov
push
jbe
xchg
mov
movl
dec
aad
das
lock
int3
and
sbb
push
mov
in
cmp
sbb
hlt
pop
mov
out
cmp
mov
cmp
je
ss
in
mov
sub
cmp
popf
jl
pop
repnz
loopne
in
out
jno
jmp
xchg
popf
in
lods
jnp
xor
cmp
xor
xor
add
shlb
mov
lods
loopne
popa
add
lret
add
pop
cmc
loopne
jo
xchg
lods
test
pop
jo
popa
xlat
loope
in
pusha
pushf
fs
pop
daa
mov
pop
movsl
xor
jecxz
pop
in
xor
out
lahf
mov
sahf
pusha
pop
fs
jno
cmp
test
push
lea
mov
iret
push
nop
inc
jg
mov
xchg
icebp
jge
jle
mov
divb
jae,pn
inc
ja
in
scas
ficompl
ret
jmp
iret
push
std
adc
inc
or
ret
xchg
sbb
in
syscall
push
nop
sbb
mov
cmpsl
sarb
xchg
push
mov
daa
scas
sbbb
xor
mov
jmp
xchg
cmp
mov
mov
mov
loop
scas
scas
cmpsl
cwtl
cltd
add
pop
imul
bound
sbb
stos
sub
fistpl
jb
sub
fstpl
call
jp
or
cltd
call
dec
mov
cmp
dec
aam
sbb
mov
pushf
add
jge
sub
int
daa
leave
mov
popf
lea
mov
mov
mov
popf
popf
pop
fwait
xor
mov
test
add
shrl
lds
les
ret
pushf
mov
mov
mov
xor
xchg
daa
xchg
mov
popf
movl
mov
cwtl
mov
popf
mov
mov
scas
ss
shlb
in
mov
nop
daa
xchg
mov
popf
mov
mov
pushf
int
daa
mov
test
lods
xchg
pushf
ret
xchg
stos
push
lods
dec
in
sbb
sbb
pop
popf
popf
pop
fnsave
sbb
fisubs
push
mov
popf
xchg
pop
xlat
xor
pushf
pop
cwtl
int
daa
sbb
mov
es
mov
loopne
sbb
adc
loope
mov
in
filds
pop
xor
mov
popa
mov
popf
loope
and
imul
pop
xor
imul
imul
pop
xor
pop
mov
pushf
in
pop
frstor
outsl
movsl
pop
mov
movsl
in
mov
cmpsl
mov
mov
mov
mov
jno
xor
lock
das
aas
out
mov
int3
repnz
cmp
push
add
lahf
push
push
xchg
pop
push
mov
dec
subl
add
sbb
fmull
scas
loop
scas
inc
icebp
or
pop
xor
mov
jo
das
and
or
pop
pop
repz
cmp
ds
adc
adc
push
repz
popf
mov
fldcw
je
pop
fdivrs
pop
icebp
xlat
stos
xchg
push
pop
pop
je
pop
fidivrs
sbb
push
pop
pop
je
pop
fdivrl
sbb
fucomi
push
xchg
ds
aad
or
pop
mov
in
xchg
sbb
fsubp
out
or
out
sub
imul
mov
shll
push
movsl
fldcw
imul
loope
xor
dec
insl
adc
iret
inc
xor
xor
insl
iret
cmp
xchg
clc
xchg
mov
stc
xlat
stos
mov
mov
push
es
in
mov
fs
xchg
hlt
popa
ret
test
stc
scas
mov
sub
mov
outsl
clc
inc
scas
or
mov
popf
mov
xor
imul
fsub
movsb
pop
dec
add
push
sarb
mov
mov
aaa
push
push
mov
lahf
repnz
pushf
inc
mov
mov
popf
pushf
pop
xorb
pushf
inc
mov
add
pop
shll
daa
inc
mov
popf
add
xchg
xor
pushf
xchg
or
daa
aas
mov
popf
incl
mov
xchg
xchg
daa
inc
xor
mov
pushf
xchg
mov
popf
cwtl
pop
lds
pushf
ret
inc
int
daa
add
nop
popf
les
xchg
xor
daa
add
xor
mov
int
daa
cli
xor
icebp
lods
mov
xor
stc
daa
cmpsb
mov
popf
lcall
test
mov
mov
pop
mov
test
xchg
popf
jg
mov
ds
mov
mov
pop
mov
cmp
std
daa
mov
pop
cmp
xchg
pushf
cld
mov
mov
pushf
rclb
mov
das
out
repz
xor
out
mov
fwait
mov
popf
mov
shlb
test
push
out
xor
adc
xor
lahf
daa
adc
xor
shl
mov
pop
xor
lret
sub
mov
aaa
pop
or
inc
xchg
mov
jb
mov
fdivl
push
inc
push
pop
nop
add
mov
push
aas
test
sti
jle
xchg
mov
jge
cmp
aaa
mov
inc
loope
iret
ret
scas
xchg
aas
xchg
iret
push
adc
add
scas
insb
mov
xor
stos
iret
push
nop
xchg
dec
pop
ret
adc
sub
add
les
rorl
jg
popf
out
push
shlb
je
cmpb
adc
repnz
push
iret
inc
mov
syscall
clc
aaa
popf
jecxz
enter
in
iret
jge
add
and
test
adc
mov
sarb
adc
lcall
ret
cmp
pop
xchg
pop
cs
jmp
std
lds
jl
pop
xchg
mov
js
inc
mov
mov
in
test
mov
cmpsl
mov
sarl
lods
or
popf
cmpsb
leave
rolb
mov
lret
add
xchg
xchg
xchg
cmp
inc
repnz
fwait
mov
mov
adc
mov
push
xchg
inc
test
sbb
xchg
das
xchg
mov
cwtl
inc
orb
mov
test
arpl
cwtl
push
sub
cltd
xchg
inc
cmp
mov
pop
repz
daa
mov
xchg
xchg
xchg
js
mov
xchg
adc
mov
mov
and
je
pushf
mov
mov
xchg
cmpb
xchg
fldenv
inc
mov
or
icebp
in
mov
mov
mov
sbb
mov
pop
mov
xchg
xchg
jne
xchg
nop
inc
cli
and
sbb
cwtl
ljmp
hlt
fwait
ljmp
and
test
sbb
xchg
jle
out
push
adc
cmp
test
popf
push
xchg
aam
mov
pop
mov
xchg
pushf
mov
or
or
mov
mov
mov
xor
pop
xchg
xor
or
dec
dec
mov
rclb
pmulhuw
popf
test
shll
adc
push
sub
scas
inc
push
add
mov
in
mov
int3
xchg
stos
adc
test
jle
mov
rcll
adc
mov
mov
ds
mov
inc
xchg
cmpsb
jnp
lds
xchg
mov
test
mov
add
rcrb
rol
mov
cs
push
pop
cmp
cmp
mov
cmc
push
cmp
popf
cmpsl
xor
popf
cmpsl
pop
lods
mov
mov
int3
les
mov
mov
stos
mov
xor
mov
mov
cmp
mov
mov
popf
enter
enter
out
mov
cld
xchg
mov
rcll
cltd
popf
cmpsl
dec
iret
cmovno
enter
test
push
test
scas
stos
inc
clc
lahf
jg
fsubrl
push
push
mov
fdivrl
pop
adc
stos
mov
cmc
mov
jne
dec
mov
enter
mov
add
stos
mov
xchg
cmp
push
pop
xchg
sub
fs
fwait
or
idiv
std
push
lret
movsb
push
mov
mov
out
stc
mov
add
fwait
lods
pop
fstpl
in
and
mov
pushf
rcll
xlat
hlt
ss
push
scas
outsb
aaa
cwtl
adc
jb
sub
imul
adc
shll
test
subb
scas
xor
subl
jg
jnp
sbb
out
insl
stos
js
xor
push
kaddb
popf
mov
or
inc
fucomi
cmp
pushf
jg
out
cld
xchg
out
dec
insb
rolb
faddp
test
enter
lea
scas
pop
cmp
ret
xchg
aaa
push
dec
je
in
hlt
movsb
ss
fwait
jmp
daa
lcall
xor
sub
mov
mov
in
cmpsb
pushf
movsb
cltd
int
daa
popf
mov
popf
mov
scas
daa
jle
movsl
das
mov
push
push
mov
xchg
movsb
cld
mov
shll
movsl
cmpsl
rclb
sbb
dec
cmpsl
fstpl
int3
les
xor
pushf
stc
mov
mov
sbb
test
rep
mov
mov
loopne
cmc
mov
leave
sub
xchg
les
add
movsb
cmp
lods
in
sbb
cltd
lods
daa
rcr
cmpsl
outsl
xor
lds
out
sub
mov
inc
dec
fwait
sub
push
or
jp
imul
xchg
lods
lods
xchg
push
lods
xor
daa
leave
fwait
xstore-rng
cmpsl
xor
pushf
cmpsl
jns
sbb
mov
pushf
lahf
andl
fld
out
xchg
sub
out
xor
xchg
stc
and
pop
lahf
fwait
movsl
sbb
orl
daa
mov
movsb
scas
mov
mov
push
aaa
mov
lods
imul
cmp
jge
repz
mov
cmpsl
jns
mov
cli
in
lods
mov
cld
xor
stos
mov
mov
fwait
lods
int3
ud1
scas
mov
mov
mov
idivl
mov
cmpsl
mov
scas
pop
aaa
int3
jge
xor
mov
das
fwait
das
mov
push
enter
cmc
adc
fwait
sub
gs
movsl
out
add
dec
fs
movsb
sub
insl
cmp
mov
pop
or
cmc
in
add
xchg
mov
sbb
dec
ss
cmpsb
jne
les
es
xor
int
cmpsl
xchg
fcomps
popf
mov
lds
mov
ficoms
int3
popf
pop
mov
in
or
loope
or
push
pusha
movsl
push
and
or
add
adc
push
mulb
push
push
jge
add
jge
dec
iret
push
ret
icebp
lock
mov
das
cmpsl
xor
mov
cmpsb
arpl
in
ss
fldt
cltd
xchg
sbb
rcr
xchg
push
jb
mov
lea
inc
insb
jge
sbb
mov
insl
push
scas
fsubr
aas
aad
stos
xchg
sahf
fistpl
pop
dec
loopne
cmc
mov
add
push
sbb
and
xchg
rcr
cwtl
pop
jb
imul
frstor
pop
outsl
repz
fwait
je
je
je
je
mov
outsl
jg
or
int3
scas
pop
aas
sbb
aad
outsb
scas
repz
lds
pop
mov
push
or
pop
mov
leave
sbb
adc
pop
sbb
scas
mulps
mov
mov
movsl
mov
jge
call
xchg
sbb
sbb
mov
xchg
push
test
popa
test
jo
sbb
xor
popf
scas
movsl
cmpsl
insl
iret
out
fstl
repnz
pop
fdivr
pop
push
cltd
cwtl
das
cmpsl
jnp
pop
xlat
test
int3
nop
pop
gs
cwtl
jne
sub
stc
ljmp
lods
mov
xor
xchg
lods
je
cwtl
pop
fcompl
out
fcomps
pop
push
lea
xchg
sbb
push
ds
sbb
push
pusha
pop
xchg
mov
dec
cmp
xlat
sbb
outsb
xlat
popf
adc
repz
les
xchg
movb
pop
dec
mov
push
inc
cmpsl
lods
pop
pop
mov
push
push
enter
jae
rcrl
mov
vphadduwq
fistl
adc
call
scas
push
lods
push
daa
ficomps
pop
pop
mov
fcomps
mov
xlat
scas
xlat
pop
inc
stos
loop
int3
enter
mov
adc
xor
test
out
sahf
fidivs
test
stos
cmp
push
cmpsl
xchg
lods
push
mov
lods
out
mov
pushf
lods
mov
mov
pushf
shl
out
les
ss
xor
repz
fcomps
test
imul
mov
lods
sbb
test
fisubrs
pop
lods
je
shrl
sub
jnp
pushf
mov
xchg
mov
xchg
clc
mov
add
xchg
mov
clc
cmpsl
repz
in
js
cmpsl
outsl
movsl
cmpsl
outsl
fdivp
jnp
cwtl
sbb
cmpsl
push
lods
leave
mov
pop
add
in
lods
or
cmpsl
mov
cmp
xchg
dec
lods
mov
mov
int
sbb
lods
mull
cmpsb
mov
inc
jo
cmpsl
mov
xchg
frstor
daa
mov
movsl
push
mov
push
out
test
mov
fmuls
lea
imul
xchg
adcl
lds
lods
pop
mov
je
orl
fcoms
test
int3
rep
mov
jne
rcr
and
xchg
mov
movsb
xor
xchg
addb
xchg
sti
sbbl
lods
pop
fistpl
add
arpl
push
das
lods
out
mov
fmull
cmpsl
cwtl
cmp
sub
jmp
ss
xchg
out
mov
push
shrb
test
lods
fsubrl
jmp
xchg
shrl
pop
mov
xchg
mov
push
inc
jg
xchg
fdivl
inc
adc
movsl
cmc
fistpl
fwait
mov
mov
leave
push
xor
pop
xchg
fsubl
lahf
fcomps
xor
jp
dec
hlt
pop
jnp
xchg
jmp
inc
sub
shrl
mov
dec
mov
lds
test
or
ljmp
leave
and
cld
movsb
pop
aaa
out
out
cltd
pop
out
push
or
in
pop
jge
shll
scas
pop
ffreep
jb
mov
and
test
out
pop
fisubs
inc
dec
imul
cmp
push
jne
inc
out
push
pop
jne
and
mov
mov
or
arpl
out
fldt
mov
pushf
sbb
lds
mov
repnz
stos
jo
sbb
mov
sbb
pop
fsubs
icebp
int3
imul
sbb
fdivl
in
pop
dec
les
int
sbb
outsb
xchg
sub
outsl
scas
hlt
out
pop
xchg
test
shrl
mov
xchg
pop
push
cmp
xlat
insb
lods
bound
test
pop
mov
mov
jnp
sbb
outsb
and
pop
scas
dec
outsb
clc
das
test
lods
or
fstl
test
xor
out
ljmp
jmp
cld
in
out
mov
xor
das
jnp
xchg
sbb
cmpsl
popf
test
cs
nop
pop
in
push
sub
in
pushf
ficomps
add
ret
mov
ds
out
test
arpl
js
add
mov
mov
in
sahf
inc
mov
cwtl
sbb
rcrb
cmp
enter
outsb
movsb
mov
mov
sbb
pop
jae
xchg
test
std
xlat
fstl
cltd
or
pushf
sub
dec
inc
cmp
sbb
clc
fcoml
int
outsl
sub
pop
lods
cmpsl
ret
movsb
test
fcmovnu
ja
adcb
inc
ja
out
shl
cs
mov
testl
sahf
insb
pop
fldenv
mov
jmp
xchg
jle
test
sbb
mov
js
mov
call
fisubrs
std
mov
jns
scas
mov
jno
adc
lds
cmc
push
mov
addr16
test
xchg
or
xchg
fwait
mov
or
ss
xor
inc
sub
mov
shl
xchg
jne
popa
xor
fmul
rcrl
and
xchg
lds
pop
lods
shll
lds
mov
pop
mov
mov
mov
popf
popl
xchg
xor
mov
leave
mov
popf
movl
mov
int
daa
lcall
xor
test
scas
xor
pop
lods
les
mov
mov
popf
mov
pushf
nop
int
daa
xchg
mov
popf
xchg
pop
mov
leave
pushf
enter
daa
lea
xor
cmpsb
daa
movsl
mov
popf
mov
popf
adc
lock
out
daa
scas
pop
mov
pop
xor
imul
pop
lods
jno
xor
das
mov
fstps
test
mov
xor
out
sub
push
subl
cmpsl
sti
inc
fnstcw
movsb
xchg
test
icebp
imulb
xlat
pop
pop
pusha
out
mov
test
sbb
pop
lock
lahf
adc
mov
mov
push
lret
in
pushf
int
daa
fdiv
pop
inc
mov
jmp
xchg
ficomps
mov
adc
sti
popf
rcr
pop
cmp
out
dec
mov
cmc
popf
dec
xchg
sbb
cmp
sbb
nop
lods
pushf
jmp
cwtl
rol
lcall
hlt
mov
lret
hlt
mov
rcl
xchg
nop
cmp
syscall
pop
test
insl
pop
rolb
sub
subl
lods
pop
daa
mov
adc
ret
roll
mov
aad
ret
mov
ret
nop
add
push
jo
outsb
sub
lods
lods
lods
xchg
dec
mov
jmp
imul
daa
sbb
iret
adc
mov
mov
int
test
adc
mov
and
test
in
lahf
dec
and
ficoms
mov
jae
cltd
movsb
jae
test
jae
pop
push
jbe
lea
ja
test
mov
shll
js
cmpsb
in
xor
test
test
in
imull
repnz
sub
shll
test
pusha
movsl
mov
pushf
gs
pop
in
shrb
fs
pop
scas
jle
xor
popf
fbstp
sub
pop
gs
test
push
test
cmpsb
mov
xor
daa
fcomp
jb
test
mov
in
imul
fs
adc
pusha
pop
xor
jecxz
sahf
jo
add
fsubl
pop
pop
std
mov
or
or
mov
jmp
stos
addr16
cli
sbb
mov
daa
mov
in
popf
fdivl
mov
fsubl
jecxz
lahf
xchg
pop
gs
aas
lea
das
mov
repnz
sti
cwtl
popf
pop
faddl
out
repz
imul
faddl
xchg
aas
sub
fstps
ret
pop
fcoml
iret
sub
mov
lock
aas
lahf
dec
mov
cmc
push
sub
andb
add
in
sahf
scas
int3
mov
pop
fstpl
push
mov
pop
xor
adc
lahf
pop
leave
mov
movsb
mov
xchg
arpl
and
pusha
sub
add
and
test
outsb
fiaddl
push
mov
xor
ss
outsl
cmp
fwait
dec
mov
pop
movsl
ret
sub
movsb
enter
cmpsb
add
mov
mov
loopne
xor
xchg
mov
pop
movsb
cmpl
dec
mov
inc
xchg
xor
sub
sbb
cwtl
outsb
or
cmpsb
mov
lahf
push
and
mov
pop
test
pop
loope
outsl
mov
popf
jecxz
add
fmull
xchg
inc
movsb
xorb
cmpsl
loopne
cmpsl
fs
in
addr16
test
cmp
jae
inc
ljmp
inc
shlb
sub
sub
sbb
lods
orl
mov
add
lods
jne
scas
sbb
mov
jae
push
cs
mov
test
push
sub
in
or
and
lea
mov
fucomip
aam
push
mov
sub
dec
mov
int3
jmp
mov
mov
sbb
mov
rcrl
lahf
popf
pop
cmpsl
jl
lret
mov
jmp
inc
stos
fwait
pop
or
mov
push
cltd
lcall
push
das
stos
ss
cmpsl
lods
fs
jns
push
lods
enter
loopne
dec
cmp
cltd
cmc
lahf
add
inc
cmpsb
mov
xor
xchg
daa
popf
mov
popf
mov
mov
mov
test
mov
popf
lods
pop
lods
lahf
ret
shrl
mov
int
daa
mov
mov
pushf
xchg
int
daa
mov
xor
cltd
push
int
pop
movsb
test
lods
mov
in
pushf
out
sub
in
daa
insl
mov
popf
lods
in
pop
sub
cmc
sub
cltd
cmc
cmpsl
test
out
daa
lods
xchg
test
cmpsl
pop
fstpt
mov
or
adc
pop
fldenv
out
mov
lahf
stos
int
lcall
nop
cmc
lret
lods
enter
dec
add
das
popf
pop
mov
sbb
pop
xchg
or
xchg
pop
ds
jns
test
sub
fwait
insb
mov
repz
adc
lods
rcl
mov
fistpl
jl
sti
push
cmp
dec
mov
fwait
or
fcomi
adc
sub
add
lds
call
in
in
cmp
add
mov
das
xchg
js
mov
out
and
lods
sub
mov
cwtl
mov
mov
xorl
out
xor
push
cmpsl
mov
daa
push
fwait
popf
stos
pop
test
loope
roll
and
lds
repz
pop
lods
lods
rcrb
sub
jns
int3
and
iret
out
push
fwait
cli
adc
scas
leave
jmp
jae
movd
lahf
mov
test
mov
aaa
arpl
sbb
mov
lock
outsl
std
aad
or
lds
insb
adc
sub
jbe
sub
je
out
daa
mov
pop
repz
out
popf
xchg
pop
outsl
xor
in
popf
xchg
pop
sub
xchg
pushf
daa
mov
mov
leave
mov
popf
movl
call
mov
pop
out
movsl
pushf
test
cltd
mov
popf
xchg
pop
xor
sahf
pushf
je
int
daa
pushf
mov
inc
and
roll
xchg
fidivs
daa
cmpsl
pushf
or
adc
jle
or
iret
fisttpl
xchg
lea
xchg
in
jmp
test
pop
pop
lods
je
aad
and
mov
push
xchg
jmp
in
and
xor
push
daa
shll
xor
cs
pushf
ss
fisubs
pop
mov
popf
or
or
setl
jns
jmp
inc
xor
lods
xor
xor
pushf
bound
int
daa
adc
cmpsl
sub
xor
icebp
xor
sbb
pop
mov
popf
or
adc
jl
cli
inc
lea
push
stc
std
in
ss
sbb
xor
adc
int
call
daa
xchg
ret
rcrb
mov
cmpsl
stc
mov
push
add
cmpsl
dec
scas
inc
mov
je
aam
mov
mov
fcomp
fdiv
pop
stos
out
ret
jmp
mov
ss
in
es
cmc
enter
pop
fdivl
imul
ficoml
out
cmpsl
jne
xchg
lods
movsb
jmp
mov
pop
cwtl
push
lcall
mov
cs
lds
mov
mov
mov
pop
dec
sub
mov
repz
les
mov
insb
in
insl
daa
mov
sub
mov
xor
fstps
popa
xchg
lahf
pushf
nop
js
aas
or
cmpsl
xlat
ja
in
fidivs
not
xchg
arpl
pop
fwait
and
into
mov
out
shrl
popf
arpl
enter
call
mov
sbb
cltd
xchg
jl
outsl
cmp
dec
leave
sub
jmp
push
mov
outsl
roll
mov
push
ret
mov
or
cld
lret
mov
fiaddl
hlt
add
push
pop
jmp
fisttps
or
outsl
into
cmc
push
or
push
stos
lret
daa
dec
jg
rorl
mov
sbb
imul
mov
adc
int3
data16
into
subl
cli
push
cmp
lret
xchg
adc
stos
and
lret
stos
xor
mov
imul
jmp
push
mov
sbb
fsub
mov
adc
xchg
jmp
out
insl
imul
stos
cltd
sbb
push
mov
jb
outsl
xchg
clts
pop
adc
repnz
dec
mov
or
and
mov
cwtl
aam
insb
jno
testl
hlt
fisubrl
adc
jne
adc
sahf
std
stos
dec
mov
mov
out
mov
jmp
fcomip
sub
in
rol
movsb
jb
jnp
into
mov
daa
dec
add
jl
js
in
inc
cltd
imul
outsl
je
pop
push
xchg
cld
xor
stos
fwait
adc
in
push
in
outsl
shlb
xchg
and
enter
add
add
popa
mov
sahf
pop
stos
add
mov
std
roll
insl
jb
pushf
test
dec
push
ret
cmp
jmp
icebp
sub
jg
ret
mov
cmp
inc
xchg
dec
jb
jecxz
and
and
mov
jns
ja
into
sub
inc
int3
call
dec
aam
icebp
scas
jne
arpl
xchg
rol
xchg
movsb
mov
fdivs
bound
stos
je
popa
dec
addl
repnz
inc
stos
xor
and
out
mov
int
mov
pop
mov
xchg
stos
add
mov
push
lds
mov
or
jno
jmp
xor
stos
aaa
je
das
inc
stos
ffree
sbb
adc
adc
or
movsl
stos
movntq
dec
pushf
fsts
cmpsl
mov
ffree
divb
mov
pop
pop
push
ds
dec
fldcw
loop
lds
stos
or
mov
stos
xchg
dec
xor
mov
sub
loop
stos
lcall
cli
push
subl
stos
ja
jae
or
shr
jno
popf
shrl
leave
frstor
ds
or
or
test
fisubrs
push
pop
test
in
xchg
cmovnp
sti
xchg
in
and
pusha
test
in
sub
adc
test
ljmp
push
sahf
bound
mov
das
and
dec
mov
dec
cmpsl
and
bound
mov
sub
loop
sub
lret
and
lahf
icebp
cltd
mov
ds
sub
idivb
xchg
ret
jbe
cmpsl
dec
lods
add
in
lods
outsl
jl
mov
fbstp
inc
mov
ret
imul
fadd
dec
daa
pop
in
pop
adc
push
sbb
jmp
fsubrs
insl
es
mov
lahf
lods
xchg
inc
fmull
jmp
int3
sub
imul
stos
mov
jecxz
fisttpl
inc
sub
jno
adc
cmpsl
imul
ret
sbb
popf
xchg
repz
pop
rol
outsb
xor
add
mov
in
pop
mov
sbb
jb
mov
xor
add
cmc
movsl
daa
lcall
sub
mov
mov
mov
fs
pop
mov
or
clc
je
ja
or
arpl
or
add
xor
lahf
mov
mov
jo
test
lods
xor
test
sub
add
popf
es
dec
mov
jmp
hlt
icebp
pop
push
movsl
mov
fmuls
movsl
repnz
jmp
in
data16
pop
movsb
inc
cmpsb
or
inc
fistpl
dec
adc
addr16
push
jl
call
pop
gs
fbstp
jno
negl
dec
mov
sbb
cld
fildl
pusha
push
push
into
fidivs
lods
jb
sbb
jbe
lods
pop
out
out
daa
xchg
das
std
pop
mov
jo
lods
and
pop
pop
scas
hlt
or
mov
stos
ret
int3
lret
int
dec
sub
mov
arpl
insl
lods
sub
stos
stos
pushf
call
sub
and
roll
lods
adc
faddl
push
fidivs
xchg
add
jge
xchg
lea
jbe
pop
lods
mov
inc
xor
test
xor
or
push
js
out
fisubs
fstps
dec
push
mov
jmp
fwait
pop
aas
fidivl
inc
lret
or
jg
dec
and
cltd
cmp
lcall
push
add
dec
sub
dec
adc
xchg
out
xor
hlt
lcall
mov
lea
mov
ror
daa
dec
xchg
test
jg
cmpsl
fs
sub
inc
cmp
rorl
mov
push
mov
repnz
mov
sub
icebp
lods
jp
rcrb
cmp
movsb
int3
and
xor
pusha
popf
sbb
ds
push
and
or
mov
ja
scas
jmp
mov
dec
and
jmp
or
cmp
adc
pop
movsl
cmp
mov
push
hlt
das
cmp
push
add
or
lods
jmp
sbb
out
outsb
bt
call
mov
movl
movw
pusha
push
pushf
lea
jmp
push
movl
pushf
pusha
pushl
lea
jmp
clc
ficompl
out
pop
or
or
sub
aas
mov
loopne
cmp
dec
popa
inc
inc
movsb
popf
xchg
imul
mov
mov
and
xchg
out
bound
push
leave
insl
in
ja
ja
dec
or
xchg
es
flds
fldl2t
repnz
jge
jge
mov
ror
and
jns
jg
xchg
mov
xor
test
lahf
mov
mov
xor
lea
je
cmp
cmp
js
add
clc
cmp
jmp
adc
pusha
pushf
movb
lea
jmp
pusha
test
pusha
jmp
add
and
rol
inc
sbb
sub
stos
ret
mov
inc
adc
lock
jle
mov
test
mov
pusha
cmc
fs
sbb
daa
imul
sahf
mov
nop
and
sbb
sub
jno
test
mov
push
mov
jno
cmpsb
lret
outsl
fwait
push
mov
add
xchg
adc
push
sti
sbb
js
cmp
push
add
sbb
ss
and
int
icebp
or
jl
jmp
sub
pop
aad
data16
gs
inc
adc
cs
mov
or
scas
les
xor
push
fbld
jp
xor
mov
jle
mov
shrb
andl
sub
sbb
cmp
sti
fldcw
test
dec
outsb
es
push
jo
mov
xor
mov
jle
xor
arpl
add
jb
xchg
loope
mov
mov
cld
cmc
cli
testl
jb
inc
add
fcomps
push
xchg
or
xchg
sbb
jge
and
jae
arpl
fnstsw
shrb
fs
jae
pushf
movb
lea
jne
pushf
stos
mov
push
lea
jmp
inc
jno
es
rorl
movsl
push
xchg
mov
and
mov
mov
andb
xor
outsl
adc
gs
fs
lds
mov
inc
leave
xchg
sbb
ret
loopne
jge
sbb
mov
sbb
imul
nop
lcall
mov
xlat
or
cmpsb
das
and
add
fcoms
cmp
sub
push
cltd
es
in
or
xor
and
ja
es
sar
or
mov
ret
dec
inc
cmp
push
push
pusha
pushf
push
negl
fiadds
mov
rclb
outsb
and
push
xlat
imul
xchg
sub
mov
mov
pusha
push
dec
outsb
sub
push
push
dec
outsl
adc
mov
sub
xchg
and
test
insb
jg
test
mov
cwtl
rcll
mov
pop
insb
mov
repz
xchg
jmp
pushf
lea
jae
dec
pusha
neg
pushf
test
clc
cmp
add
stc
cmc
ror
call
pusha
call
shld
mov
mov
rcr
cmc
ror
mov
clc
clc
xchg
cmc
lea
movzbw
or
mov
pusha
sub
movb
mov
pushf
rep
call
loopne
cs
sub
fmulp
fsub
cmp
mov
dec
jae
es
mov
outsl
and
inc
inc
push
mov
dec
push
pop
popa
jl
loopne
sbb
mov
jge
mov
mov
inc
enter
loope
notb
std
inc
insb
pop
cmpb
xchg
push
lret
mov
mov
xor
fld1
add
ficompl
incb
jae
stos
inc
adc
jl
shll
movd
and
xchg
fsubl
push
pop
xchg
cmp
adc
cmc
repz
fsubl
pop
cmp
ret
pop
lods
aam
cmpsl
lds
scas
and
shll
mov
push
cltd
cmp
test
orb
mov
push
xchg
out
fsubrs
add
lods
loop
xchg
lds
loop
loopne
dec
out
int
fldcw
fs
popa
pop
cmp
dec
push
mov
add
and
pop
je
xchg
mov
aad
dec
jmp
call
pushl
inc
not
setae
jmp
lea
jae
call
sbb
and
rcr
adcl
int3
arpl
out
inc
xor
lock
pop
or
add
das
aam
lods
aad
cmc
sbb
ret
cmpsb
sbb
fcoms
into
jle
jbe
outsl
cmpsb
inc
pusha
pushf
lea
jae
jmp
and
xchg
cs
mov
push
notb
push
adc
enter
pop
addr16
push
mov
inc
aad
sub
cs
adc
lods
nop
inc
mov
inc
push
iret
add
cmpxchg
sarb
mov
insb
aaa
test
xchg
hlt
std
pop
pop
lds
addr16
cmp
daa
and
push
std
ret
xchg
cmp
std
mov
sbb
out
cwtl
rcl
add
push
inc
xchg
cmp
push
sbb
or
and
das
adc
cmp
jg
mov
call
or
adc
js
loop
mov
inc
lcall
pop
and
lods
rcll
subb
stos
or
mov
inc
popf
push
push
push
push
stc
adc
das
ds
inc
add
das
mov
inc
movsl
xchg
pop
outsl
loopne
cltd
sbb
andb
xor
sub
inc
inc
xchg
jmp
mov
mov
inc
pop
pop
testl
and
push
push
sbb
push
xchg
ja
lods
cmp
push
jg
sub
or
or
jmp
xchg
dec
in
mov
xchg
dec
stos
and
push
mov
das
sub
sub
lds
sar
push
test
add
call
mov
les
jmp
xor
push
and
xchg
adc
jbe
ret
inc
cltd
dec
ss
cmp
clc
mov
sahf
mov
scas
xor
sub
mov
rclb
scas
pop
popf
inc
mov
jecxz
ret
cmp
idivl
sbb
mov
hlt
fsubl
in
or
and
jge
cmp
cli
clc
cmp
in
add
cmc
push
pushf
xor
mov
movb
movw
lea
call
test
clc
cmp
jmp
and
shll
push
mov
add
insl
jns
clc
out
pop
mov
pop
ja
mov
or
or
repnz
pop
pushl
jae
adc
xchg
mov
dec
cmp
arpl
push
loop
sub
or
mov
leave
mov
push
sub
jne
call
call
lea
jne
pusha
xor
adc
sbb
mov
sbb
shl
setbe
add
ror
shl
setnp
mov
test
jmp
clc
sub
test
call
repnz
pusha
mov
jmp
movl
pushf
jmp
dec
shl
shrd
push
movzbw
mov
inc
shrd
sub
lahf
rol
clc
cmp
push
sbb
push
or
push
dec
bsf
rcr
push
aad
mov
test
call
fwait
outsb
cli
sbb
rol
add
mov
or
cmpl
add
cld
adc
ret
and
mov
push
mov
adc
roll
stos
dec
in
call
loop
or
rorl
and
or
int3
test
jl
mov
aam
and
sbb
push
sub
push
xchg
mov
mov
pop
mov
les
mov
lds
and
loopne
emms
cmp
leave
add
jecxz
xor
not
testl
hlt
faddl
stc
fldenv
push
nop
data16
add
sbb
das
nop
iret
push
pusha
into
out
push
leave
lret
pushf
inc
or
sti
or
pop
out
lret
jle
and
dec
push
cmpsl
adc
cmp
mov
cld
push
in
int3
loope
mov
aam
stos
int3
push
xchg
pop
jnp
mov
fs
fistpl
rcrb
lea
loop
sub
cmp
ror
add
mov
pusha
jmp
mov
rcrl
lock
loopne
fldenv
push
mov
jge
push
pop
mov
xchg
pop
es
push
push
and
mov
addr16
jle
pop
imul
cmpsb
sub
in
sarl
xor
ss
mov
jo
les
or
cmc
in
push
inc
jg
stc
negb
jle
ljmp
repnz
mov
cmpsb
sti
repz
mov
fsubrl
lret
subb
andnps
cmc
sub
and
push
rcrl
outsb
out
adc
mov
movsb
mov
mov
cmp
in
jns
mov
fwait
sub
xor
xor
gs
fcmovbe
in
or
mov
add
mov
aas
movsb
loop
push
push
xor
in
adc
ret
jecxz
fs
sub
or
je
mov
push
nop
mov
adc
cmp
pusha
jb
js
mov
sti
mov
or
add
lret
cmp
pop
sbb
das
xchg
sub
xor
int3
test
out
rcrb
mov
jbe
insl
jmp
xchg
fisttpll
cs
fmuls
in
rcll
inc
cmc
xorl
xorl
pop
fs
lret
fists
pop
cwtl
sbb
add
arpl
inc
out
int3
lret
jb
jecxz
mov
sbb
call
cmp
in
ds
leave
arpl
leave
xor
and
push
mov
cmpsl
mov
shr
jg
sar
nop
aaa
mov
in
test
shl
shrb
inc
adc
fldt
push
push
mov
add
pushf
lea
jmp
pushf
call
mov
shl
cmp
ljmp
idivb
adc
orb
popf
loope
ret
sub
dec
jo
mov
jmp
sbb
mov
jno
inc
xor
pop
cld
fisttpl
push
adc
jno
mov
fists
cmp
xchg
jl
cmc
in
push
mov
jp
orb
push
and
in
pop
push
jmp
adc
jbe
movsl
mov
daa
add
popa
mov
lret
sub
inc
stos
mov
scas
push
and
inc
lret
and
imul
rcr
cmp
jb
dec
cwtl
pusha
jns
out
mov
push
lret
push
jmp
lret
in
iret
jo
jmp
mov
xor
sub
inc
or
stos
inc
es
fwait
call
push
mov
dec
stos
pop
lds
gs
add
ds
sbb
mov
mov
dec
sbb
arpl
inc
cmp
mov
scas
mov
ja
out
ja
out
jbe
inc
movsb
addr16
jae
cmp
or
shrl
push
dec
xor
push
je
pop
inc
sbb
andl
hlt
loope
mov
ja
pop
push
rcl
outsb
jecxz
ret
sbb
gs
jnp
sbb
pop
lods
jno
push
add
xchg
les
sub
push
or
jg
dec
mov
out
lock
add
add
dec
push
xlat
push
add
pop
cld
cmpsb
ja
xchg
pushf
cli
jb
mov
jo
push
add
jecxz
mov
test
adc
rcl
xor
pop
xor
pop
fcomip
dec
pop
mov
daa
jno
pusha
xor
push
sti
xchg
enter
sbb
in
movb
mov
push
lock
mov
call
aad
mov
scas
fwait
mov
mov
es
inc
push
mov
into
sahf
and
pop
rcll
imul
pop
cli
xor
lahf
jmp
mov
rcll
pop
dec
icebp
flds
addr16
int
push
pop
inc
and
mov
loop
fdivrs
out
ja
int
fucomi
outsb
adc
or
lods
mov
lahf
adc
icebp
mov
mov
cltd
or
sbb
orl
jne
mov
or
fwait
cmp
pop
xchg
pop
stos
or
mov
inc
xchg
outsl
aas
jge
je
jmp
inc
pop
call
loop
loopne
out
test
adc
rcll
ds
into
dec
jge
inc
xorl
rcrl
add
js
sbb
jge
push
push
sub
sbb
push
fldl
xchg
out
mov
popf
xchg
adc
mov
and
sahf
push
and
ror
dec
dec
fwait
inc
inc
adc
push
push
mov
arpl
mov
adc
aad
or
mov
int
mov
inc
addr16
push
ficomps
cwtl
sahf
rcl
pop
adc
rcll
inc
mov
adc
mov
add
push
test
fisttpl
push
jp
scas
xchg
push
cwtl
lock
or
call
mov
pop
xchg
cltd
jp
in
sbbb
mov
out
lcall
jno
ss
shlb
sub
pop
pop
sbb
or
jmp
xor
mov
lods
xchg
adc
int
push
scas
dec
lds
jecxz
sub
adc
pop
xchg
add
jp
adc
leave
mov
lea
call
push
pushf
lea
jb
pushf
movw
movb
pushl
ret
stos
mov
adc
shll
mov
test
push
int
ja
jge
xchg
push
movsb
in
int
xor
push
jp
pop
jmp
out
inc
aam
mov
call
pop
inc
inc
clc
cwtl
imul
xchg
cmp
dec
or
addr16
repnz
sahf
out
ss
cld
mov
test
mov
mov
rolb
push
sbb
int
hlt
out
and
cld
jb
mov
cmpsb
nop
scas
scas
ret
and
movsl
mov
enter
divb
and
cmp
mov
mov
movb
inc
pushf
adc
mov
push
pushl
ret
dec
mov
pop
lret
je
movsl
or
jecxz
sbb
insl
inc
ret
cmp
lret
mov
jne
mov
xlat
adc
xchg
or
stos
inc
loopne
xlat
les
ljmp
dec
sub
je
dec
mov
fldenv
xchg
cmp
push
mov
push
fdivs
and
sbb
xchg
and
sbb
repz
test
fs
sarl
inc
lock
or
pop
rolb
lcall
addr16
add
bound
push
mov
sbb
js
push
sub
push
subb
cmp
pop
leave
pop
mov
add
ficomps
xor
inc
pop
xor
ljmp
mov
xor
dec
cs
out
outsl
movsl
lea
shl
mov
adc
mov
inc
pop
shll
out
inc
mov
in
insb
adc
fdivrl
jb
psubd
movsb
jmp
xor
cwtl
data16
nop
push
movsb
les
loop
jno
push
fwait
cmpb
ds
pop
jne
pop
rorb
or
cmp
xchg
sbb
sub
mov
adc
jno
imul
xlat
lcall
jp
int
rcrb
push
jne
and
jmp
lock
iret
in
pop
aad
dec
aas
push
adcl
pusha
into
mov
add
fidivrl
xor
or
sub
jne
pushf
bt
repnz
jmp
pushl
lea
je
daa
movzbw
lahf
sub
daa
setns
not
mov
btr
rcr
movsbw
mov
add
sub
dec
ror
shr
shr
dec
setbe
mov
clc
or
pushf
pushl
call
test
push
cmp
jmp
dec
and
xor
loop
sub
nop
pusha
xor
or
imul
xchg
loope
xor
add
mov
iret
push
cmp
test
or
repnz
push
mov
mov
pushf
mov
lock
dec
lds
adc
sbb
xchg
jmp
and
xchg
stos
stos
mov
leave
loopne
xchg
std
and
pop
pop
pop
into
movsl
repz
xor
test
push
jmp
daa
nop
and
rcll
mov
sbb
mov
xchg
lret
and
sbb
mov
stos
fsub
pop
rcll
xor
leave
int3
dec
or
out
fs
cld
inc
pop
mov
jbe
and
xor
add
insl
lret
mov
and
sbb
mov
addl
jecxz
movsb
lret
add
insb
aas
push
fwait
or
sub
xchg
imul
mov
push
lds
jb
lock
popf
ja
add
incb
shlb
and
cmp
mov
idivl
std
ljmp
inc
xlat
jno
push
push
inc
mov
out
lahf
xorb
xlat
dec
sbb
bound
inc
pop
movsl
add
lock
jmp
sub
xlat
out
in
fadd
in
cmpb
dec
adc
popa
dec
sbb
inc
loopne
sahf
cmc
xchg
rcll
data16
sti
and
mov
push
loopne
add
mov
shrb
sub
inc
mov
stos
inc
lcall
inc
fs
popa
push
xchg
xor
ss
xchg
lahf
fmuls
cmp
cmc
fdivs
fisubl
adc
stos
ret
nop
addr16
mov
mov
icebp
pop
add
push
inc
adc
jbe
cmp
shlb
repnz
cmp
sahf
sbb
in
mov
jmp
hlt
dec
and
fnstsw
scas
xchg
jns
icebp
xor
inc
jne,pt
jae
nop
sub
orb
sub
xchg
jb
and
add
xchg
cltd
xor
adc
mov
jl
push
lret
dec
sbb
cwtl
out
cli
int
xlat
shr
mov
jae
fdivrs
pop
mov
aad
cmp
or
or
bnd
mov
sbb
xchg
jno
rcr
cmp
mov
inc
dec
in
orl
jo
mov
xlat
dec
or
shll
jp
std
or
sub
mov
out
movsl
cmp
std
aad
xor
xor
lcall
mov
jo
lret
pop
xor
gs
inc
inc
fistps
jl
mov
xchg
xor
inc
sub
fs
in
inc
dec
sbb
imulb
push
cmp
dec
sub
or
cld
mov
into
push
and
std
fnstcw
push
push
cmpsb
test
pushf
mov
ja
inc
insl
aaa
js
xchg
or
inc
or
shrl
stc
cmp
lahf
clc
nop
push
jbe
out
cmp
loopne
jne
std
roll
dec
cs
cmp
movsb
ds
ficoml
js
mov
popa
dec
mov
push
xor
add
add
jb
jne
dec
in
xchg
jmp
jle
sub
xor
test
lock
sbb
mov
int3
rcll
je
xor
mov
mov
outsl
or
shll
out
fbstp
mov
lods
lret
imul
jno
cmpsb
push
lcall
hlt
jae
fadds
fmull
jmp
add
mov
and
mov
inc
movsl
insl
push
test
or
push
pop
pop
inc
in
jl
sub
ja
sbb
test
fisubl
sbbl
movsl
test
pop
insl
mov
aad
add
fdivp
lods
and
mov
cmp
aaa
out
fs
jne
lahf
movb
mov
pusha
mov
cwtl
lea
pusha
call
lea
je
bsr
add
jmp
dec
into
loopne
shl
lcall
push
pop
pcmpgtd
outsl
pop
mov
jae
test
mov
pop
pop
ja
inc
xchg
negl
sbb
mov
fidivl
sub
adc
xchg
dec
inc
xorb
scas
jno
push
mov
mov
sub
movsl
pinsrw
stos
fists
dec
and
xlat
sub
cs
mov
lret
sub
pop
pushw
jmp
outsb
mov
rorl
dec
lock
or
jbe
rcr
sbb
jmp
jae
push
mov
lcall
pop
fcomp
scas
in
rol
mov
rorb
aad
movsb
rcrb
popa
daa
jmp
in
mov
aam
repz
dec
adc
data16
sub
das
mov
lods
cmpsb
and
aaa
clc
push
add
rclb
mov
xor
sub
xchg
jmp
movsl
xchg
gs
mov
insb
sub
rcr
mov
les
scas
outsb
hlt
jecxz
push
mov
mov
dec
aam
outsb
setg
cmp
cmp
int3
xor
dec
dec
sub
iret
nop
pop
mov
mov
push
hlt
sub
mul
repnz
movsl
push
je
add
push
pusha
mov
or
push
pop
adc
cmp
scas
stos
mov
lock
add
cmovne
cli
enter
sub
or
fwait
and
or
sti
inc
or
imul
push
add
mov
aad
rcr
cs
xlat
xchg
xor
jmp
push
jo
fisubrs
aas
test
jbe
in
or
push
cmp
shll
fldenv
cs
dec
daa
movsb
inc
push
mov
push
cmpl
addb
push
push
push
push
lcall
cmp
push
pop
sub
fstpt
shrl
leave
push
inc
cmp
shlb
mov
lods
repz
ficoml
and
gs
adc
mov
rcll
dec
push
dec
das
mov
sub
mov
jg
js
inc
push
jo
dec
imul
push
jno
addr16
adc
xor
and
and
rcrb
out
enter
ret
dec
mov
shrl
inc
outsb
xchg
rolb
nop
sub
jge
push
stos
insl
enter
addr16
imul
push
mov
test
stos
fs
gs
push
or
in
mov
push
test
rorl
sbb
or
imul
xchg
out
loopne
dec
mov
inc
pop
xchg
pop
scas
rcll
and
enter
mov
neg
rcl
rcl
and
sbb
add
ror
bt
ror
add
add
ror
neg
sbb
xor
push
jmp
pushf
pushf
lea
jne
pusha
pushf
call
das
jge
push
rcll
rolb
dec
ret
mov
repnz
push
repz
outsb
mov
pop
das
pop
push
push
add
int
out
push
xlat
sbbl
adc
in
cmp
out
rcll
imul
std
mov
sbb
push
js
shrb
pop
xchg
in
xchg
lcall
cmp
xchg
loopne
or
dec
jo
mov
movsl
inc
mov
and
cld
inc
jge
aas
mov
roll
fmuls
jle
lds
mov
and
pop
jp
jno
mov
shrb
lods
aam
sbb
jecxz
stos
pop
andb
xchg
mov
pop
shld
push
push
jmp
mov
push
nop
xor
dec
jecxz
sub
xchg
frstpm(287
repz
in
je
loopne
shrl
int3
pop
or
call
arpl
aad
in
cmpsb
fildll
add
push
rcrl
lods
into
or
mov
xchg
scas
nopl
outsb
jb
aam
stos
test
cwtl
jecxz
in
bound
in
mov
data16
pop
pop
out
lock
rolb
out
jae
xchg
popf
movsb
xor
sbb
aaa
movsl
cmp
ror
movsl
lret
inc
scas
push
cmpsb
test
pop
sbb
shrb
xchg
jge
dec
pop
aad
and
cld
test
lods
add
aam
jl
jmp
lods
fdivs
lock
aad
sti
or
test
jp
scas
out
loope
cltd
push
xor
inc
mov
add
cltd
mov
es
push
inc
xlat
sbb
dec
cmp
into
jmp
adc
daa
loope
sbb
or
rcll
fwait
orl
and
aam
pop
rol
sarb
testb
sbb
push
mov
cmc
mov
jo
push
jae
inc
sub
jae
xchg
adc
imul
popa
imul
xchg
nop
popa
inc
repnz
jns
mov
jmp
lahf
sti
lret
dec
aaa
push
negb
jecxz
jns
cmp
lock
cmpsb
jg
popa
jmp
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
rcrl
jnp
sbb
ficoml
push
in
aam
mov
leave
dec
push
in
jp
and
cmc
loope
leave
jne
in
or
sbb
push
je
scas
mov
add
mov
adc
jmp
fcmovne
ret
sub
sahf
cwtl
mov
xor
or
cmp
out
dec
mov
xchg
mov
cmp
in
in
add
setl
iret
call
sbb
int
pushf
insb
xorl
adc
mov
in
mov
aad
lahf
ja
add
shrl
mov
add
fisubs
fcompl
mov
ret
push
push
jne
aam
adc
ss
ret
add
aad
jns
or
lret
jbe
repnz
inc
scas
jno
in
or
xchg
cwtl
hlt
xor
jle
mov
repnz
insl
lods
push
fcomip
fst
shlb
ss
push
cli
addr16
mov
add
in
aaa
cmpsb
sti
pop
int
dec
lret
addl
cmp
pop
mov
into
push
push
mov
adc
repz
mov
arpl
cs
xchg
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
je
pushf
pusha
jmp
xchg
xor
cmp
out
cmpsl
inc
sar
pop
mov
data16
push
mov
out
xor
testl
mov
flds
js
cld
push
and
das
ds
icebp
sbb
xchg
stos
fisubrl
call
xor
js
ljmp
nop
adc
sub
scas
fnstcw
cmpl
dec
or
inc
and
push
test
jg
std
xchg
or
stos
pushf
movl
movb
push
lea
jmp
jmp
dec
ds
add
rorl
cmpsl
sahf
adc
bound
mov
sbb
sub
push
gs
mov
xchg
lret
test
jno
bound
int3
loop
cmp
loopne
ds
push
out
cli
leave
orb
push
sub
call
jns
or
pop
push
aas
imul
mov
sub
cmpsl
out
xchg
and
jbe
bound
jecxz
add
roll
pop
bound
dec
inc
js
mov
dec
jno
rcrb
sarb
mov
repnz
mov
and
ret
lahf
or
dec
call
popf
ficomps
adc
mov
ret
es
push
mov
jp
push
mov
mov
fcmovnbe
push
es
jmp
pop
sub
pop
idivl
fidivl
mov
and
dec
sub
scas
mov
jns
xor
popa
mov
rcll
adc
les
fdivrs
push
jmp
sbb
out
cmp
xor
add
aas
ja
lcall
mov
dec
mov
sub
out
fstpt
adc
loopne
jecxz
sti
stos
xor
and
xchg
cltd
push
stos
pop
mull
pop
int
out
mov
sbb
test
mov
push
test
xlat
jae
jl
lea
les
pusha
adc
leave
bound
stos
icebp
or
dec
lcall
mov
movsb
stos
xchg
xchg
dec
fucomip
mov
mov
push
pop
cmc
inc
js
pop
enter
lods
and
imul
fisubs
lods
adc
fisubl
fisttps
and
mov
cmpsb
mov
bound
dec
addr16
ja
mov
dec
sti
and
mov
xor
push
insl
sbb
imul
inc
fcomip
in
adc
sti
jbe
test
sbb
dec
cld
push
xchg
jno
mov
iret
cltd
jge
push
push
cwtl
int3
jb
je
les
shrb
rcrb
stc
lock
outsl
ror
mov
pop
repnz
pushf
xchg
jae
adc
inc
cmp
cltd
out
xor
es
jecxz
mov
mov
pushf
mov
mov
movb
movb
pushf
pushl
ret
mov
testb
shl
rcrb
mov
sbb
mov
dec
int3
push
repnz
imul
xor
and
xchg
pop
std
push
sbb
xchg
sti
ljmp
cltd
movsb
ret
cmp
jnp
scas
fcmovnbe
sbbb
xorl
add
adc
jmp
out
jmp
sbbl
fwait
mull
nop
add
ficoml
lods
adc
fcoms
rclb
jne
fsubl
movl
loopne
inc
mov
pushf
call
sub
cmp
insb
and
mov
cmpl
aas
xor
addb
gs
mov
test
rol
fimuls
adc
lods
nop
push
push
sub
sbb
jbe
xchg
outsb
aad
or
addr16
cmp
jl
jmp
adc
bound
test
xchg
jmp
and
negl
imul
stc
clc
test
push
call
negl
shrl
or
cmp
inc
xor
fildl
lret
push
cli
mov
lock
lret
negl
sub
mov
insb
test
icebp
xchg
dec
pop
imul
mov
loop
push
pop
imul
inc
filds
or
fwait
stos
ljmp
fcompl
ret
pop
ficoml
loope
mov
and
iret
out
popa
push
mov
pop
hlt
or
scas
stc
mov
jmp
xchg
add
lcall
sbb
mov
push
jae
adc
in
cmp
mov
cmp
fstpl
mov
mov
inc
scas
fstps
pop
sbb
sub
xchg
leave
loop
xchg
dec
sbb
notl
mov
and
adc
dec
xchg
lret
stos
mov
std
jo
fstpt
dec
in
dec
xor
out
mov
sub
cld
lds
in
repnz
push
dec
aam
xchg
xchg
push
xchg
jb
jnp
adc
dec
mov
mov
into
loopne
shll
ja
dec
mov
in
mov
sbb
js
outsl
out
int
push
mov
scas
and
add
mov
inc
xlat
add
repnz
les
addr16
in
loopne
mov
das
test
bound
popf
jns
loope,pn
inc
xor
lods
push
jnp
mov
pop
and
out
sbb
mov
sbb
adc
or
cmp
aaa
mov
arpl
xchg
mov
dec
mov
lea
mov
mov
repnz
fiadds
cli
movzbw
mov
clc
jmp
in
and
push
mov
outsl
pop
and
aam
cmpsl
ljmp
push
leave
test
mov
cmc
inc
cmp
adc
jb
mov
sahf
mov
incb
test
aam
push
xchg
push
sub
xchg
mov
out
mov
adc
out
mov
and
jecxz
push
add
push
pusha
mov
dec
jle
jl
mov
pop
movb
lret
xor
push
and
jnp
rcll
shl
movsl
push
mov
in
cmc
clc
adc
mov
scas
mov
cld
jecxz
mov
aam
in
outsl
mov
xor
aam
mov
lods
cmp
cmp
jne
mov
pusha
clc
pop
loop,pt
add
in
cmc
ret
adc
imul
sub
push
icebp
mov
cld
push
and
push
push
fwait
fwait
pop
loop,pt
push
cmp
jae
dec
or
es
out
jae
mov
es
aad
aas
add
pop
cltd
repz
stos
adc
cwtl
xchg
adc
dec
sub
aas
movsl
iret
in
cmp
sbb
lods
test
cld
inc
mov
inc
xchg
ja
pop
inc
mov
cmp
cltd
fwait
mov
mov
mov
and
dec
pop
add
fsub
jmp
add
jge
into
xchg
xchg
sahf
aam
outsl
mov
jmp
mov
incb
dec
aad
jmp
or
pop
mov
xor
mov
call
shll
jne
push
add
cmp
cli
lret
push
sbb
leave
cli
cli
adc
pop
jbe
repz
jbe
jo
and
les
jb
hlt
ror
ljmp
mov
call
test
loopne
shll
xchg
lods
hlt
arpl
pop
nop
jmp
mov
cmp
xchg
mov
test
mov
add
test
xchg
sbb
mov
data16
mov
inc
push
push
or
inc
inc
and
add
movsb
inc
adc
push
out
lahf
dec
imul
out
xchg
sub
mov
testb
cmpsb
stos
out
stos
fidivrl
and
jb
call
lea
jae
dec
mov
or
adc
dec
mov
neg
mov
pushf
call
sub
pop
jns
shl
call
loope
test
into
fs
les
fldenv
insl
inc
jl
test
sbb
mov
dec
lret
inc
dec
xchg
push
push
inc
mov
out
test
and
fwait
movsl
lea
scas
icebp
dec
out
or
mov
pop
ljmp
repz
jns
dec
jno
xor
sbbl
sub
push
mov
sbb
dec
insb
jns
shll
xchg
decb
xchg
sub
pop
dec
sub
jecxz
sahf
js
or
xor
push
pop
leave
aas
test
das
cltd
rol
mov
xor
insb
dec
out
cmp
call
mov
sbb
jae
mov
negb
mov
pushf
mov
pop
fstl
xchg
out
stos
cmpsb
aam
shlb
vxorps
mov
movsl
nop
fldl
xor
xchg
push
fs
movsb
ret
xchg
stc
ror
sub
sbb
js
sarl
inc
je
sub
ljmp
out
nop
cli
xchg
xchg
xorps
inc
mull
cltd
and
jmp
sbb
ljmp
sub
fnstenv
xchg
or
jmp
add
dec
sub
lahf
shll
js
dec
jge
add
sub
jne
mov
test
add
jno
mov
xor
loopne
js
rcll
and
imul
cmp
out
fimuls
lds
inc
pop
stos
xchg
les
mov
in
mov
xchg
call
scas
mov
frstor
subl
xor
je
xor
std
jge
xchg
dec
shlb
or
and
push
sbb
mov
insl
mov
fwait
pop
dec
cltd
pusha
imul
shll
test
xor
push
mov
or
jmp
add
sub
add
add
pop
jp
add
mov
pop
in
pop
repnz
pop
cli
arpl
shl
shlb
add
aam
sbb
inc
fldl
mov
test
pop
test
mov
out
scas
pop
mov
or
cmc
mov
dec
mov
repnz
cs
pop
mov
out
daa
popf
in
lds
add
leave
dec
pop
test
mov
sub
sub
lods
pushf
loope
jp
jnp
sbb
lahf
fisubs
aas
les
pop
gs
and
jg
decl
test
jmp
ss
shll
xchg
int
aad
stos
orl
pop
flds
pushf
lcall
push
sub
xchg
push
pop
movsl
xor
test
and
mov
insl
xor
xor
xchg
mov
das
lock
and
xchg
insl
mov
mov
mov
mov
or
xor
mov
test
xor
inc
mov
push
pop
pusha
lea
jne
call
stc
call
mov
pop
jle
rcll
out
dec
pop
xchg
data16
cmpsl
cmp
cmp
imull
dec
ret
jecxz
jecxz
push
mov
dec
bound
mov
dec
shlb
and
bound
decl
popf
xor
in
cmpb
xorb
xchg
sbb
xor
lret
push
push
mov
mov
xlat
cmpsl
add
add
xor
inc
movsl
jnp
clc
negb
js
xchg
insl
cs
cmp
pop
mov
and
int3
in
mov
cmpsb
xchg
mov
sub
mov
jge
shl
push
xchg
or
sub
loop
inc
push
xor
outsb
xchg
out
leave
dec
addr16
ljmp
setl
sub
adc
lods
inc
cmp
pop
sub
scas
mov
and
sbb
xchg
repnz
ret
pusha
push
fadds
in
sub
pop
or
icebp
mov
push
fldl
jne
inc
mov
pop
gs
inc
imul
push
gs
shrl
mov
adc
ret
sub
fdivrl
aad
mov
and
inc
movsl
mov
jae
and
mov
repz
rorb
xchg
xchg
subb
addl
test
mov
pop
jge
js
add
shll
cmp
nop
cmp
mov
jl
shll
mov
xlat
cmp
cli
pop
popa
push
rcll
pop
cmp
xlat
dec
sahf
in
xchg
xchg
push
or
int3
sub
test
inc
testl
xchg
movsl
xor
mov
ret
push
insb
mov
xchg
push
lock
cs
mov
faddp
mov
cli
outsl
aam
xchg
sbb
fcoml
jnp
inc
mov
ljmp
popf
cli
sbb
adc
sub
scas
imul
stos
push
lock
out
outsl
popa
pop
faddp
int3
add
cmc
xor
pusha
add
loope
jmp
jg
jp
xor
pusha
jae
aam
push
dec
into
test
andl
add
mov
pop
push
lea
jae
setp
setne
mov
pushf
dec
inc
call
pop
cs
loopnew
fs
movsl
cs
je
es
xchg
and
jo
aas
out
lahf
sub
xor
pop
fistpl
cltd
jb
pop
dec
pop
xchg
sahf
fstpl
mov
lret
pop
scas
pop
push
mov
or
mov
pop
or
lds
pushf
cwtl
fnstenv
mov
jne
movsb
mov
sub
mov
test
mov
loopne
xor
pop
int3
pop
popf
pop
cmc
pop
icebp
lock
xchg
pop
fstpl
jo
ljmp
mov
mov
mov
gs
out
fs
mov
mov
xor
ret
movsb
add
sub
ss
xor
mov
push
lcall
rcrl
test
lret
sbb
pop
shr
or
xor
lods
int
mov
lret
sbbl
sahf
lods
fsubs
lods
jecxz
enter
shll
lods
shl
test
xlat
cld
sti
cmpsb
or
imul
and
and
arpl
mov
lahf
daa
mov
das
sub
in
shll
arpl
ret
jae
insb
test
nop
movsl
ret
nop
repz
mov
ret
lods
mov
jne
jae
lods
xor
imul
test
insl
mov
xor
sub
mov
add
jmp
cmc
jmp
lods
mov
xor
daa
outsb
mov
popf
jb
jo
lods
insb
out
xlat
cmpsb
std
in
mov
add
pop
jmp
ret
lods
mov
repz
mov
lods
pop
mov
sbb
fsubrl
mov
ret
test
mov
xor
ret
mov
scas
out
jmp
pushf
ret
xchg
test
stos
int
daa
cmpsl
dec
mov
jmp
inc
insl
lods
cwtl
arpl
sub
sub
pushf
inc
ds
cs
insb
imul
repz
sarl
xor
sub
fwait
sarl
ret
jl
jge
popf
jg
aas
jmp
movsl
frstor
mov
lods
fwait
rorl
fwait
mov
repz
cmc
repz
icebp
int3
jle
lea
mov
jb
pop
nop
mov
insl
pushf
mov
in
jmp
fisttpll
xlat
std
rep
negb
dec
test
lea
adc
das
lods
jmp
fmull
insl
sub
mov
test
xchg
stc
insl
sub
jmp
lods
mov
mov
xchg
lods
sbb
lahf
int3
in
mov
fwait
cld
cltd
jmp
dec
push
insb
xchg
fwait
add
insb
cmpsl
mov
fwait
adcl
scas
pushf
lahf
pusha
mov
scas
inc
jb
cmpsl
fwait
or
cmpsl
ja
call
out
or
lods
mov
mov
dec
lods
pop
mov
repnz
xor
sbb
mov
cmpsl
push
bound
push
lret
rcr
fwait
jmp
cli
dec
adc
lods
adc
dec
lods
adc
pop
jmp
mov
data16
popf
mov
out
sub
push
mov
jmp
dec
popa
jae
test
mov
dec
jo
lods
mov
and
push
mov
push
sti
sub
xchg
cmp
fisubrs
mov
popa
mov
xchg
add
test
ljmp
sbb
xchg
xchg
xlat
test
shrb
and
mov
fwait
pop
popf
pop
pushf
adc
scas
iret
mov
bound
outsb
bound
outsb
mov
pop
test
popf
sbb
mov
sub
scas
ret
popa
aam
push
jecxz
cltd
xchg
out
scas
mov
jl
sub
shlb
popf
add
scas
cmp
sbb
rcrl
imul
and
mov
jle
sbb
movsl
popf
pop
cmc
cltd
jns
lret
jae
cmp
rorl
sub
add
subl
int3
popf
pop
repnz
cmp
scas
sbb
add
cltd
out
repz
mov
enter
sbb
test
lahf
mov
pop
cmp
shrl
mov
or
subl
mov
popf
shlb
adc
dec
fisttpll
push
leave
lods
xor
outsb
sub
shrb
popf
mov
outsl
mov
js
mov
in
lahf
pop
and
fwait
mov
arpl
popfw
stc
adc
popf
jle
mov
mov
popf
enter
mov
popf
lret
pop
daa
sbb
mov
jl
sbb
and
push
adc
popa
jmp
nop
cs
and
insl
mov
divl
insb
xchg
push
dec
add
insl
sub
dec
insl
aaa
scas
sub
aad
arpl
enter
mov
bound
insl
arpl
xor
or
cs
push
mov
xchg
push
insl
gs
addl
mov
insl
outsl
push
lods
insl
pop
jns
mov
movsl
fmuls
or
mov
das
mov
mov
jno
fisttpll
cs
inc
daa
out
mov
push
mov
insl
dec
or
push
sbb
mull
or
in
xor
imul
adc
into
insl
cld
cmpsl
or
addr16
rep
loope
jno
sbb
sbb
jle
outsl
adcb
ljmp
movsb
mov
scas
outsl
dec
leave
sub
enter
lock
or
cmpsb
fsubs
mov
push
testl
aas
outsb
inc
lods
mov
inc
add
nop
lret
mov
int
lahf
jne
les
movsl
jmp
insl
sub
loope
outsb
insl
std
adc
sub
lcall
fiadds
insl
push
lods
sub
lods
sbb
mov
jne
out
repnz
cmp
jmp
jne
orl
xlat
mov
imulb
jp,pt
inc
mov
in
mov
cmp
pop
mov
sbb
xchg
xchg
out
outsb
jmp
inc
scas
push
jbe
jmp
mov
les
mov
pop
mov
outsl
mov
jp
mov
icebp
test
add
loope
into
xor
add
lahf
mov
mov
xlat
repnz
cs
and
insl
xor
pop
in
ss
add
movsb
mov
fldt
test
ret
mov
sub
jecxz
gs
fsubrs
pop
sahf
out
lcall
ret
es
sub
xchg
je
push
dec
mov
jne
repz
xor
push
sbb
mov
lods
daa
fmul
pushf
loopne
pop
in
enter
pushf
xor
fcmovne
lea
das
rcrb
insl
fs
pop
movsl
mov
lea
repz
sub
pop
lods
test
fistps
jbe
sub
mov
faddl
movsb
push
mov
out
pop
sti
movsl
sti
in
and
fsts
and
mov
stos
call
add
cwtl
test
sahf
in
hlt
sahf
shll
sub
mov
sub
or
psllq
mov
out
pop
fbld
pop
sub
cmp
in
pop
mov
pop
jmp
mov
scas
ficomps
fwait
and
gs
lea
mov
lahf
loopne
sub
pushf
lods
mov
mov
ss
pop
pop
bt
pop
aam
xchg
mov
insl
mov
insl
adc
xor
and
fstenv
mov
add
inc
xor
stos
xchg
rolb
mov
pop
in
sub
sub
mov
xlat
in
scas
mov
jmp
movsl
dec
lods
push
shrd
mov
stos
sbb
mov
lahf
setg
push
cs
movsb
mov
xor
movsl
mov
popf
xor
call
lea
mov
sub
and
mov
fcoml
lods
ret
xlat
xor
call
les
pop
sub
xor
inc
test
pop
in
mov
pop
cwtl
aas
mov
cmp
pop
sub
mov
lods
sub
jmp
mov
xchg
mov
pop
sub
popf
mov
movsb
mov
test
mov
or
insb
pop
lods
pop
jo
fldcw
lods
arpl
mov
sahf
insb
movsb
inc
xchg
lods
stos
mov
out
push
lods
sahf
mov
out
lods
mov
test
icebp
stos
sub
int
lods
aas
lods
push
mov
cmpsl
adc
lahf
inc
movsl
je
pop
test
fldcw
push
dec
scas
mov
mov
pop
inc
sbb
push
dec
cld
or
mov
dec
xor
lahf
lods
jl
pop
and
arpl
pop
cli
cld
sbb
jp
pop
mov
xor
gs
rcrb
pop
ret
leave
pop
ret
hlt
movsl
dec
fcomps
cmpsb
or
imul
lods
dec
in
push
xor
sahf
aad
ljmp
lret
cmpsb
cmpsb
add
stos
inc
inc
mov
pushf
lods
mov
movsb
ds
loopne,pn
fidivrs
shrl
sub
pop
ficomps
lods
xchg
mov
mov
sub
cmp
mov
cmpsb
or
xor
mov
pop
lods
loopne
pusha
sbb
out
aad
lahf
sti
movsb
icebp
mov
mov
mov
ljmp
outsb
outsb
mov
in
pop
popf
mov
addb
pop
je
cmp
sbbb
in
pop
xchg
and
gs
sahf
add
mov
dec
and
in
lea
mov
xchg
push
pop
lcall
mov
movsb
xchg
xor
scas
or
int3
mov
dec
pop
mov
mov
fld
out
int
scas
inc
in
lret
dec
pop
fucomp
lds
mov
cmpsl
repz
lods
mov
sub
and
mov
mov
jns
and
pop
imul
in
fstpl
dec
test
das
mov
insb
dec
rcrb
xchg
sahf
mov
xchg
cltd
pop
fnstenv
in
pop
cmp
inc
aad
push
or
mov
mov
jle
dec
lods
mov
mov
pop
out
sub
pop
fdivl
lea
mov
cmp
sbb
lods
popa
cmpsl
into
jle
xor
es
in
sbb
clc
sbb
xor
imul
cmpsl
mov
xor
dec
pushf
ds
pop
ljmp
lahf
test
popf
fsubs
sub
lcall
sbb
mov
int
add
pop
or
andb
les
xchg
inc
xor
jmp
pop
arpl
xor
std
xchg
sbb
mov
cmpsl
jno
dec
inc
mov
cmc
sarl
rorl
dec
das
imul
lods
andb
incb
out
fld
movsl
movl
cmpsl
insb
push
and
loop
cmp
mov
jnp
push
sbb
lods
mov
mov
lea
ret
int
hlt
and
mov
jg
and
daa
mov
mov
mov
ds
call
add
mov
mov
outsb
popf
mov
ds
outsb
inc
aam
cmpsl
adc
mov
push
xor
and
dec
xor
jle
push
xchg
cmp
iret
mov
das
and
jne
xchg
xorb
nop
mov
or
insb
mov
repz
fs
pushf
leave
stos
scas
addl
or
add
pop
xchg
fidivs
in
negb
and
mov
xchg
xlat
aaa
mov
outsb
ds
mov
test
gs
in
cmc
icebp
xchg
xchg
pop
sub
pop
mov
leave
fidivl
cmp
mov
stos
mov
repz
in
adc
push
lods
mov
cmpsb
les
mov
mov
or
dec
push
or
sub
mov
mov
inc
stos
in
cmpsb
in
jo
pushf
out
gs
adcl
loopne
xchg
sbb
nop
sub
outsl
lods
loop
pushf
movsb
jbe
dec
mov
int
std
cmpsb
or
imul
stc
jbe
sbb
add
ss
pop
xor
mov
pop
inc
rorb
in
dec
jp
in
inc
mov
lret
ret
ss
sub
mov
mov
insb
lcall
inc
enter
mov
leave
inc
push
cmpsb
bswap
sub
stos
inc
and
dec
int
fisubl
pop
test
daa
pop
ficoms
enter
movsb
xchg
mov
fnstsw
and
inc
xchg
loop
push
inc
lcall
and
aas
stos
loope
scas
orb
lds
or
xor
inc
jne
push
std
nop
mov
cmp
cmc
xchg
scas
ret
in
movsl
or
gs
cmpsl
and
jle
mov
jg
aas
aas
ljmp
out
push
scas
pop
inc
xlat
jmp
or
pop
addr16
subl
insb
andb
in
fs
or
movsb
repz
cld
pop
and
es
out
clc
cmpsb
mov
scas
int3
xlat
test
jp
xchg
sub
xchg
into
add
xchg
or
mov
add
pushf
cmp
push
jmp
movsl
out
fxtract
into
fsubl
mov
lcall
mov
mov
imul
sub
mov
sub
xor
repz
mov
ds
in
test
sub
mov
xchg
mov
or
cwtl
in
mov
push
insb
loopne
and
int
in
mov
fnsave
cmpsb
dec
fwait
inc
imul
xchg
hlt
aas
hlt
mov
test
lds
leave
mov
xor
movsb
dec
and
test
roll
fldl
lods
cmpsl
lods
dec
lods
sub
pop
xchg
or
mov
and
push
mov
jmp
inc
fisubs
sub
nop
xor
movsl
add
xor
movsl
cmp
sbb
popa
das
and
or
lret
int
sbb
sbb
aam
mov
cs
fwait
pusha
paddq
mov
dec
inc
jmp
xor
mov
xchg
and
mov
lcall
mov
stos
xor
or
xlat
shll
pop
daa
sbb
mov
data16
fistl
popf
adc
jge
test
or
enter
mov
add
cmpsl
outsl
nop
insb
mov
aam
mov
and
mov
fwait
in
movl
fildll
pop
lods
or
iret
test
or
mov
xchg
and
inc
cld
mov
in
jne
jmp
mov
or
mov
leave
mov
mov
pop
sahf
sub
mov
int
dec
enter
inc
stc
and
cwtl
xchg
sub
cmpsb
xor
stos
and
dec
mov
sti
add
leave
adc
xchg
fwait
lahf
add
cmp
add
sub
scas
cmp
orb
sti
sub
pop
int
jg
mov
and
cmp
pop
adc
test
scas
xchg
or
imul
sub
leave
movsl
inc
repz
xlat
test
enter
pop
imul
stos
mov
cmc
aas
and
das
add
xlat
imul
mov
mov
xchg
imul
daa
dec
stos
daa
cmp
daa
fists
push
sub
xor
ret
shlb
cmpsl
dec
mov
sahf
in
cld
adc
pop
and
cltd
mov
loopne
sub
into
sub
in
cmp
mov
xor
inc
inc
xchg
lret
mov
lods
nop
cmp
leave
out
mov
adc
cwtl
into
mov
test
cmp
lcall
fstl
movsl
mov
pop
cltd
mov
mov
and
adc
add
dec
mov
jle
adc
cwtl
mov
frstor
xchg
and
int
notb
cld
cs
mov
shll
sbb
add
lcall
das
sub
mov
and
dec
xchg
test
mov
cwtl
pop
outsl
scas
mov
push
push
cli
hlt
dec
dec
in
or
ja
test
or
out
sbb
pushf
xor
mov
or
cwtl
sahf
in
xchg
or
mov
lock
and
das
mov
jp
mov
shrb
lds
sbb
add
mov
mov
in
sbb
and
mov
mov
and
mov
movsl
xor
sub
mov
loop
fdivs
jmp
or
sub
sub
sbb
insb
jecxz
mov
cs
add
sub
hlt
scas
mov
mov
lds
mov
movsl
cmp
jmp
mov
fdivr
pushl
lods
popa
rcr
push
adc
cmp
les
xchg
arpl
addr16
fdivs
repz
pop
or
mov
scas
sbb
mov
xchg
pop
loopne
enter
inc
pop
icebp
stos
or
cmpsb
mov
gs
mov
cltd
int
scas
dec
cs
xchg
pusha
mov
xchg
pop
mov
mov
mov
in
cmp
inc
pop
add
jb
js
ds
xchg
jge
push
mov
inc
unpcklps
and
sub
lret
mov
ror
sbb
mov
adcb
stc
pop
mov
ljmp
or
insl
sub
push
aad
loope
scas
jae
and
or
inc
sub
addr16
dec
jmp
jle
mov
pusha
and
pushf
push
push
aad
shll
add
dec
mov
cltd
sub
or
cmp
cmpsb
sbbl
outsb
lods
push
cmp
jmp
pushf
lea
jne
pusha
pushfw
popw
inc
mov
push
pushl
dec
clc
test
call
jb
push
addr16
rcll
hlt
fmull
mov
repz
mov
jg
dec
jle
push
add
outsl
nop
or
push
jne
jb
fiadds
pop
cmpsb
out
test
sbb
xchg
repnz
in
pop
cmp
out
xlat
mov
lcall
leave
xlat
or
outsl
jg
shlb
arpl
rol
aad
and
push
xlat
orb
cmp
mov
popa
out
xor
lcall
pop
jmp
add
mov
cmp
lods
imul
jmp
scas
xor
sub
push
mov
call
bound
pop
pop
push
lock
dec
jp
push
aas
inc
jo
shrb
roll
shr
les
scas
lcall
mov
test
jbe
int3
cmc
jbe
xchg
lock
jbe
jge
sub
icebp
add
mov
mov
xor
icebp
or
xor
in
data16
shl
aas
adc
jl
cltd
cmp
mov
iret
cld
cli
cmp
mull
adc
jg
outsl
jb
or
rorl
adc
push
sahf
das
xor
sbb
mov
cmp
pop
sti
std
test
inc
pop
adc
or
jo
cmpsl
aaa
mov
jmp
lret
pusha
mov
out
into
test
mov
adc
add
pop
and
pusha
jmp
pushf
lea
jae
call
mov
pusha
movl
pushf
push
lea
jmp
jmp
push
add
clc
stc
stc
cmc
ror
add
jge
bt
test
pusha
add
pushf
mov
pusha
jmp
pushf
pushf
pusha
dec
test
cmp
push
shl
call
clc
clc
add
pushf
cmp
pushf
test
call
pushf
jmp
pusha
push
pushl
lea
jae
stc
inc
stc
mov
shl
bsr
mov
cmp
call
mov
rcr
dec
pop
out
ds
in
cmp
ljmp
mov
sbb
repnz
in
dec
pop
adc
push
repz
adc
insb
jmp
inc
xchg
repnz
bound
adc
push
movsl
mov
xchg
sub
jecxz
dec
adc
jge
ficompl
pop
sub
jecxz
or
rcrb
and
call
sub
push
push
xor
out
aas
pusha
push
lock
inc
incb
shll
xchg
adc
mov
push
call
mov
mov
lds
cli
push
cmp
aad
xchg
ljmp
or
ss
xor
cmp
or
and
insl
decb
repz
cmpsl
das
mov
lods
fsubrp
or
addl
ror
jns
cmp
imul
leave
addr16
mov
sub
jecxz
stos
adc
sub
loopne
cmp
movsl
or
mov
aad
subl
or
fs
call
cmc
push
clc
cmp
pusha
pusha
pushf
lea
jae
call
in
jbe
shll
push
into
sbb
jb
lock
pop
adc
mov
push
inc
xor
cmc
push
sarl
pop
inc
in
or
movlps
data16
adc
aaa
shll
add
lcall
inc
and
mov
cmpsl
cwtl
xchg
daa
inc
int3
sub
das
shrb
pop
lcall
jmp
sbb
mov
bound
add
add
add
add
shlb
add
add
dec
and
add
add
outsb
sub
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
addb
add
add
add
sub
idivl
sub
int
sub
xchg
icebp
sub
add
add
add
add
neg
test
cmp
clc
call
sbb
shrl
cmp
in
scas
jg
int
mov
pop
and
push
flds
pop
jg
jl
xor
mov
pushf
dec
mov
jmp
iret
nop
and
fistps
insl
insl
push
adc
mov
cmp
pop
jbe
orb
inc
add
cwtl
adc
std
pop
js
mov
xchg
jl
ret
popa
inc
fidivrl
out
lods
push
pusha
push
lea
jno
je
bt
test
clc
cmp
pushf
jmp
stos
sahf
mov
rcll
aaa
nop
adc
insl
test
mov
pop
adc
outsl
rcrl
mov
test
jp
mov
mov
and
rcrl
pop
or
lcall
pop
lret
in
pop
mov
out
frstor
cvtpi2ps
fsubl
outsb
mov
add
in
popf
xchg
test
ffreep
cld
xchg
cli
xor
jmp
dec
jle
mov
lret
sbb
xor
sahf
aas
mov
lret
in
and
int
add
mov
fs
cmp
adc
in
divb
sti
sub
lea
jbe
lods
popa
inc
popl
pop
dec
lret
pop
mov
test
inc
inc
sub
lods
xor
insl
fcmovu
and
inc
push
lcall
cmp
xchg
push
and
cmpsl
lds
lret
add
icebp
iret
and
out
ja
inc
pop
stos
lcall
ds
stc
pushl
cld
gs
rcrl
mov
cmp
enter
cmp
test
movsl
adc
scas
test
mov
inc
test
mov
xchg
pop
mov
loopne
scas
loop
or
in
and
push
inc
push
mov
sub
mov
out
fstl
adcl
data16
jbe
nop
jne
sbb
fdivl
sub
mov
jns
push
jg
cli
jp
in
mov
testb
outsb
pop
rorl
out
pop
jg
push
sahf
lea
fildll
jl
lds
dec
inc
and
arpl
jbe
shrb
rcll
push
aas
incl
xor
jbe
stos
arpl
adc
arpl
push
fsub
repnz
stos
je
das
jbe
or
call
push
les
dec
mov
mov
mov
xor
sub
ja
imul
mov
dec
dec
dec
inc
inc
push
push
xor
cs
insb
add
add
fs
imul
add
rorl
lret
rcll
or
adc
subl
cmp
jp
inc
dec
jo
pop
dec
shrl
sbbb
or
loopne
inc
cmp
mov
packssdw
sub
orb
sub
jns
sub
leave
or
ljmp
mov
or
adc
imul
jp
dec
mov
js
sahf
jl
arpl
fstps
addr16
xor
add
xor
mov
mov
sbb
das
mov
add
dec
rorl
int
enter
cmp
push
xchg
ret
fdivl
mov
movsl
xor
mov
test
pusha
dec
pop
mov
adc
push
out
pop
ljmp
arpl
cmc
pop
std
mov
fcmovu
jle
dec
ret
sti
mov
jbe
fs
mov
enter
fs
je
push
bt
clc
or
push
jmp
pusha
lea
call
call
pushl
pushf
lea
call
jmp
adc
cwtl
pop
shll
mov
cmpb
mov
cmpsl
sbb
pop
enter
lcall
lea
aam
movaps
sbb
or
sbb
cld
adc
lcall
sub
and
pusha
pop
sahf
jp
repnz
sub
shr
repz
in
jg
aaa
out
insl
stos
icebp
jmp
ljmp
sub
xor
adc
ret
in
mov
loop
cwtl
repz
inc
mov
rcrl
lods
add
ss
dec
add
out
dec
jmp
insb
scas
scas
push
pop
scas
push
imulb
jle
jmp
out
cmp
jle
fisttps
sub
xchg
clc
clc
shl
add
neg
sub
movsbl
cmp
bts
cmp
add
test
add
mov
neg
mov
cmp
repnz
jmp
pusha
mov
jmp
neg
neg
mov
xchg
jmp
call
pushf
mov
lea
jae
cmc
pushf
cmp
bt
sub
lea
jge
push
pusha
movb
lea
call
push
call
movl
call
mov
repnz
ror
cmp
inc
xchg
pusha
mov
lret
cmp
sbb
sbb
scas
mov
xchg
addb
jmp
stos
push
push
test
dec
jo
push
pushf
pop
or
pop
outsl
fwait
pusha
adc
jnp
xchg
push
pop
lods
mov
pop
ret
add
push
add
jb
aas
test
sahf
or
push
adcl
out
mov
cld
int3
test
ljmp
out
ds
push
test
rolb
mov
fistpll
pop
std
std
xchg
xchg
and
inc
inc
jnp
loope
lret
lret
daa
rcrw
jmp
xor
mov
lods
std
jge
imul
mov
push
les
jmp
sub
test
inc
std
xchg
shl
ds
inc
inc
push
push
cmpsb
aam
adc
mov
mov
push
enter
roll
insb
aad
shrl
push
sti
rorl
mov
push
shrb
mov
jmp
cs
mov
push
lods
add
pop
cld
mov
ret
sbb
popa
sti
test
mov
fmul
jp
mov
stc
mov
jnp
aad
push
push
sub
sub
dec
pusha
mov
dec
test
mov
roll
js
sbb
sbb
inc
lds
jns
sub
push
aas
xlat
pop
adc
lods
pop
shll
push
adc
shrb
sti
out
jp
inc
mov
sub
jmp
outsl
xchg
stc
subl
fnstcw
inc
pop
insb
jmp
repz
mov
mov
or
aam
jns
or
sub
mov
mov
clc
repnz
pcmpeqb
ret
cmp
adc
mov
push
push
call
cmpsb
sub
pusha
or
mov
or
dec
roll
xchg
xor
dec
xor
sarl
xchg
popf
add
fwait
ljmp
clc
sahf
and
xchg
cmpsl
insl
mov
add
push
rcll
or
mov
sti
or
sub
scas
inc
xor
xorb
inc
mov
mov
xor
std
or
pop
imul
fisubrs
stos
stos
ret
test
dec
cmp
pusha
lock
loop
mov
test
fistpll
mov
mov
jae
sbb
insl
jbe,pt
and
jg
shll
test
push
test
in
mov
mov
out
and
push
xchg
inc
jnp
incb
rcll
lret
test
cmp
add
mov
inc
lock
into
in
pop
cmp
test
and
cmp
push
adc
jge
je
sbb
enter
subb
cmp
add
bnd
sbbb
xor
jmp
xchg
rorl
pop
push
sbb
sbb
inc
jns
mov
mov
push
bound
sub
and
in
xchg
push
shll
loope
mov
dec
xlat
ja,pt
xchg
mov
rcrl
sahf
imul
shll
ljmp
rorb
std
xor
add
js
xchg
loopne
scas
lock
into
sbb
pop
rolb
dec
mov
jno
jns
out
dec
testl
mov
movsl
sbb
mov
xchg
sub
aam
out
mov
lret
xor
loopne
cs
and
in
in
mov
call
xchg
push
adc
rcll
pop
fisttpll
imul
and
add
mov
in
out
adc
xchg
pusha
mov
jbe
lea
das
repnz
mov
xchg
pop
xchg
and
stos
jns
lods
dec
fistpll
push
sbb
cmpsb
inc
les
ret
adc
fcoml
sahf
out
add
push
leave
xchg
pop
mov
insb
dec
mull
mov
cmp
cmpsl
or
add
popf
adc
dec
outsl
mov
xor
inc
mov
testl
mov
js
bt
sub
stc
push
cmp
pushf
lea
jae
pusha
push
pusha
push
lea
jmp
jmp
test
mov
fs
jns
jo
push
addr16
cmp
into
loop
pop
pushf
mov
xlat
adc
pop
dec
mov
fisubrs
das
sbbl
inc
movb
or
sbb
int
jnp
inc
leave
loope
lea
fcompl
lret
or
das
roll
pop
dec
into
loop
popa
test
jb
push
call
enter
pop
lret
mov
lcall
repnz
daa
mov
rorl
fwait
call
inc
push
inc
push
dec
xor
cs
insb
add
mov
fldlg2
pop
xor
add
sarl
jg
iret
mov
dec
popa
imul
or
pop
xchg
sub
xchg
adc
insb
popf
xor
fwait
in
xor
fsubl
add
je
cs
iret
ror
mov
test
inc
push
jns
outsl
jg
out
fadds
xchg
sti
stos
mov
loop
and
popa
add
adc
push
arpl
push
shll
mov
and
loope
mov
ljmp
mov
jle
inc
mov
jp
enter
or
aas
jge
sub
jne
push
lret
dec
mov
out
int3
jns
mov
and
idivb
mov
das
dec
add
cltd
cmpsb
jge
mov
mov
sub
sahf
mov
outsb
xor
stc
es
mov
and
or
jge
mov
lods
jg
lret
inc
jg
std
inc
xchg
scas
xchg
fnsave
dec
or
inc
and
les
jbe
je
add
fs
jne
push
stos
pusha
movb
pusha
push
lea
jmp
pop
enter
rcr
and
xor
cmp
adc
sti
xchg
out
pop
sbb
cltd
or
andl
mov
inc
jae
cmpb
lods
and
mov
cmp
aad
test
xchg
nop
pusha
inc
inc
jmp
mov
les
daa
in
mov
xchg
sbb
rolb
mov
out
out
jne
xor
jne
test
cmp
xor
cs
aad
xchg
xor
inc
jns
hlt
call
add
or
cmpsb
adc
jb
call
repnz
mov
loope
xchg
aam
loop
addr16
or
enter
into
mov
mov
cltd
sub
add
rcrl
pop
cmp
das
out
adc
int3
add
movsl
push
shrl
rcr
loopne
cmpsl
pop
xchg
outsb
xor
lods
ret
xchg
pop
jp
mov
cmp
decl
sbb
call
push
mov
xchg
stc
les
gs
mov
push
lahf
insl
or
fdivrl
aas
mov
or
mov
lret
sbb
cmp
mov
xor
daa
add
shl
dec
in
aaa
push
xor
push
jmp
lods
pusha
push
push
mov
insb
jo
inc
test
jp
jns
scas
jno
sbb
push
dec
add
push
gs
jo
outsb
dec
gs
js
add
roll
and
shr
sar
xchg
movzbl
test
jmp
or
insb
out
jge
shll
add
cmc
shr
mov
shr
lods
call
scas
dec
adc
push
pop
fwait
test
divl
sbb
div
insl
xchg
sub
push
arpl
pop
das
push
pop
aas
sahf
or
add
div
push
or
outsl
inc
rol
add
xchg
stos
aas
pop
shl
push
push
push
cmpsl
shrb
fiadds
or
inc
pop
sub
ds
push
shll
loopne
fsubl
orl
mov
sub
mov
fimull
test
adc
sbb
cmc
push
ljmp
push
ret
neg
xor
xchg
and
sub
fiadds
out
repnz
outsl
sbb
pop
pop
add
in
test
hlt
int3
negb
out
outsb
daa
iret
mov
cmp
dec
dec
rcll
sbb
sar
imul
cmp
mov
nop
sahf
dec
mov
lcall
inc
jecxz
pop
inc
rcll
in
dec
lds
cs
je
mov
or
add
outsl
dec
or
leave
incl
or
mov
add
shll
imul
out
push
mov
and
out
enter
xchg
push
in
and
or
aas
pop
aaa
xchg
je
pop
es
fdivrl
mov
jmp
jo
hlt
dec
sar
mov
sub
jb
loope
push
and
xchg
cwtd
push
imul
sbb
test
in
pusha
pushf
fs
pop
mov
std
or
aam
andb
push
and
bnd
add
stos
scas
inc
popf
pop
inc
jmp
mov
stos
popa
dec
add
sub
sbb
popf
loope,pt
cld
mov
mov
jno
into
and
jbe
cltd
jno
fmuls
sub
inc
dec
sub
mov
or
xchg
rcrb
cwtl
mov
adc
icebp
arpl
xchg
aas
push
cli
loop
xchg
lea
jae
pusha
test
jmp
sub
dec
shll
xchg
iret
mov
cmp
dec
sub
mov
out
dec
movsb
and
push
pop
ret
inc
jmp
and
outsl
stos
negb
lds
test
adc
xchg
iret
fcoms
mov
testb
and
pop
shll
stos
or
data16
ljmp
sub
rcll
sahf
or
add
imul
jae
xchg
adc
rcll
leave
cmp
dec
dec
xor
imul
lds
mov
mov
jb
add
pop
repz
add
mov
jmp
mov
add
hlt
mov
sbb
das
sbb
sub
in
mov
jno
pop
mov
or
mov
sub
xor
sti
pop
scas
push
mov
cmp
dec
add
xor
add
xchg
stc
jmp
dec
mov
pusha
lea
jbe
pusha
pushf
lea
call
push
lea
ja
pusha
lea
jae
stc
cmc
cmp
test
xor
jmp
dec
mov
pusha
call
sub
dec
roll
mov
sub
outsb
int3
sbb
sbb
push
bound
pusha
dec
dec
stos
or
stc
pop
jl
aas
das
cmp
pop
fwait
jo
push
adc
arpl
mov
sub
sub
loopne
movsb
scas
inc
andb
mov
jp
mov
adc
addr16
dec
pop
sub
cli
insb
into
xor
mov
sub
sbb
pop
mov
les
out
add
jns
mov
dec
mov
shll
sub
test
jne
dec
shl
mov
cwtl
out
lods
mov
add
popf
cmp
lret
sbb
pop
add
cld
add
clc
repnz
mov
mov
mov
xlat
insb
in
jge
mov
inc
mov
stc
hlt
or
and
jmp
and
sbb
xchg
add
jns
push
push
mov
movsb
dec
andb
mov
movsl
inc
jl
rcrl
out
in
mov
adc
js
add
lods
and
sbb
cwtl
mov
test
dec
mov
push
fisttpl
add
imul
dec
fbstp
adcl
inc
inc
sahf
mov
push
or
popa
mov
push
push
jge
loop
cwtl
andl
push
std
add
sub
push
mov
sub
sahf
out
faddl
xchg
je
mov
stos
outsl
sbb
dec
sub
movb
lea
call
pushf
pushf
jmp
outsb
popa
fmuls
ror
adc
nop/reserved
jb
mov
ja
cmp
flds
mov
aam
ret
xchg
loopne
loopne
ficoms
repz
jge
hlt
cld
je
icebp
aam
dec
sbb
mov
sahf
test
push
pop
mov
mov
sbb
rep
popa
jmp
push
iret
pop
ljmp
test
rcll
iret
mov
dec
and
mov
jne
call
lret
fbstp
cmp
dec
popl
mov
inc
jl
sbb
inc
mov
popf
inc
lock
pusha
or
inc
xchg
push
das
or
lahf
or
push
mov
idivb
mov
xchg
jl
test
stc
sub
pop
incl
push
sarb
fisttpll
scas
sbb
pop
add
pushl
lea
jmp
adc
rorl
fstpt
jecxz
lret
xlat
inc
sub
sub
adc
or
pusha
cmpsb
push
call
inc
rcll
dec
dec
repz
rclb
subb
leave
xor
cmpsl
adc
mov
test
out
icebp
mov
fwait
sti
add
cmp
dec
cmp
iret
fdivrs
in
test
fnstsw
outsb
dec
push
psrlw
adc
pusha
decl
jecxz
mov
outsl
cmp
jge
js
mov
dec
rcrl
jge
movsl
cmpsb
outsl
pcmpgtw
pop
mov
and
push
adcb
sbb
lret
decb
push
push
subl
sub
adc
loop
dec
sbb
add
dec
jecxz
test
pushf
mov
sbb
cmp
fisttps
fldenv
add
mov
mov
adc
mov
in
jno
cmpsl
xchg
sub
xor
cmp
cmc
xor
rclb
jo
out
cmp
xchg
dec
rcrl
cmp
pusha
enter
and
cmp
mov
dec
push
or
push
add
xchg
pop
mov
movsb
push
pop
fldt
mov
xchg
inc
add
scas
data16
stc
mov
cs
movsl
adcb
dec
cmp
or
mov
adc
lea
or
jnp
mov
daa
sbb
push
fcmovne
ret
pop
cmpsl
or
dec
rcll
push
insl
es
test
jbe
xchg
ja
dec
lock
out
lods
dec
sbb
sbb
xchg
fs
aaa
ja
adcb
sbb
xchg
lods
push
xchg
jmp
lea
test
into
bound
in
dec
push
jecxz
push
cmp
and
mov
int
mov
je
xchg
pop
lahf
insl
mov
es
mov
dec
dec
popa
jg
xchg
stos
jp
mov
pop
push
jns
insl
cli
dec
sbbb
push
icebp
flds
mov
adc
jp
and
dec
shrl
stc
bound
fincstp
xchg
lret
adc
pusha
xchg
sub
imul
mov
insl
sbb
stos
cwtl
mov
test
outsb
mov
daa
shrl
adc
sub
push
pop
and
push
imul
sbb
pop
mov
lret
cmp
cmp
testl
jbe
mov
inc
in
icebp
icebp
xor
add
cwtl
repz
mov
push
dec
cmp
jge
lea
dec
push
fwait
add
or
pop
pop
arpl
les
xor
jne
enter
xor
outsb
aam
mov
scas
in
ds
mov
cwtl
push
fists
or
push
dec
loopne
push
and
lea
jne
btr
clc
movzbw
xor
shl
and
aas
not
mov
shr
jmp
dec
dec
flds
rcrl
dec
sbb
dec
cmp
push
push
test
stos
int3
ficoms
cmpb
in
iret
inc
ret
inc
mov
sub
pop
and
outsl
stos
mov
lret
adc
loop,pn
mov
push
aas
jmp
psrld
cltd
movsl
inc
aas
or
js
and
fdivrl
daa
mov
cwtl
xlat
push
cmp
inc
sar
jne
mov
gs
push
cmpsl
jp
je
or
movsb
fs
add
add
into
je
inc
roll
push
mov
jo
mov
or
cmpsl
adc
mov
lods
mov
incl
and
mov
out
dec
inc
pop
xor
call
mov
fwait
xor
roll
lahf
dec
push
xorl
mov
mov
push
sub
or
fstpt
out
add
push
sub
xor
xor
cwtl
pop
mov
shrb
jb
jecxz
pop
stc
subl
xchg
negb
push
fimuls
lea
jne
pusha
push
movb
not
mov
pop
lahf
lea
mov
pusha
movl
call
lcall
stc
lcall
pop
aaa
lods
cmp
adc
sub
addr16
das
xchg
mov
leave
push
xchg
imul
mov
cld
adc
push
out
fwait
and
xor
rcrb
sbb
clc
sti
push
orl
jmp
fimuls
sbb
test
or
inc
add
out
test
mov
cmpsl
cmp
xor
mov
jle
das
add
mov
les
jecxz
aaa
insb
mov
xor
sub
xor
jmp
cmp
jbe
jecxz
repnz
sbb
xor
out
test
clc
clc
cmp
pusha
lea
ja
stc
push
pusha
pushf
imul
clc
add
pushf
movl
mov
lea
jmp
jmp
stos
inc
shll
cmp
xor
xor
xchg
inc
inc
mov
pop
fidivrl
sbb
jle
int3
cmp
shll
dec
fs
push
pop
xorb
pop
sbb
sub
leave
ss
sbb
cwtl
mov
test
pop
pop
push
xor
out
inc
dec
lock
inc
cmp
aam
xchg
adc
clc
mov
and
outsb
pop
movsb
dec
or
clc
lea
cld
sbb
shll
fwait
bound
cmp
xorl
iret
mov
cmpsb
inc
cmp
xchg
fs
popf
mov
es
sub
arpl
add
push
stc
popf
jge
dec
rclb
ret
xchg
or
cmc
adc
sub
dec
ljmp
test
sub
das
adc
call
pusha
lea
call
pushf
pushf
lea
jmp
xchg
int3
pop
inc
rorl
test
insb
imul
add
les
add
popf
add
add
pop
and
sub
push
push
fnstcw
negb
insl
mov
push
pushf
sbbb
jecxz
cli
adc
sub
outsl
cmp
lods
push
add
adc
inc
mov
cmp
xchg
xchg
xor
ja
or
lcall
and
inc
jmp
push
jge
inc
in
clc
pop
js
daa
push
push
xor
xor
fs
insb
add
mov
sarl
mov
decl
daa
iret
xchg
pop
stos
bound
cmpsl
xchg
mov
cs
mov
call
sbbb
je
add
cmpsl
xchg
push
insl
popf
lods
ss
loope
mov
xor
sbb
enter
xlat
pop
cli
mov
add
xchg
mov
and
cmp
scas
jo
cli
enter
mov
mov
xchg
shlb
iret
test
cli
xchg
and
push
call
xor
aam
lock
inc
inc
rcrl
das
daa
mov
or
ror
pop
ret
jecxz
push
iret
mov
cmc
or
loope
xchg
add
pop
loop
pop
jno
iret
aam
and
shll
pop
jbe
out
inc
nop
sub
adc
and
leave
ja
sbb
sarl
jne
dec
out
dec
jo
shlb
cmp
test
mov
js
in
add
mov
push
push
dec
stc
ror
clc
stc
add
cmp
test
stc
jmp
pushf
test
pusha
call
inc
rcll
sarl
popa
out
int
add
scas
push
dec
add
mov
pop
sub
push
rcll
cmp
pop
push
jo
mov
sbb
test
push
inc
sbb
es
pop
ds
pop
mov
lock
adc
xchg
xor
add
fucomp
xchg
jmp
jb
pop
gs
mov
ss
sarl
mov
cmp
xchg
mov
cmp
adcl
sub
lcall
popf
std
div
je
out
andl
jmp
inc
cld
testb
dec
xchg
das
xchg
mov
les
pusha
daa
push
repnz
lods
xorb
aaa
xor
lods
add
ds
imul
xchg
out
sbb
imul
out
std
mov
jl
or
fisubrs
clc
pop
sub
out
mov
clc
sub
call
lea
call
pusha
pusha
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
or
int
jbe
pop
gs
jmp
or
fisubl
cmpsl
test
sbb
aaa
fmull
rcll
inc
sub
fnsave
xorb
daa
sarl
insb
movsl
add
call
inc
mov
fcmovnbe
js
imul
pop
push
mov
add
push
cmp
lret
lods
cwtl
into
loopne
and
push
inc
cwtl
and
int
pop
cmpsb
cmpsb
iret
outsb
mull
mov
pop
faddp
hlt
test
cmp
in
call
inc
or
inc
rcr
arpl
or
jb
add
sub
pop
jbe
mov
pop
mov
iret
movsl
push
rcll
sbb
jge
mov
jecxz
jecxz
popa
inc
fs
adc
adc
out
push
aam
lods
mov
cmpsl
andb
xor
add
mov
adc
xchg
mov
pop
jns
fbstp
int3
add
adc
fnstcw
cld
int3
pushf
lea
ja
pusha
mov
pusha
dec
inc
pushf
dec
lea
jo
setbe
inc
not
xchg
push
mov
sar
stc
shl
test
mov
cmp
push
pushf
bt
xchg
rol
add
mov
call
inc
bt
xchg
shl
cmp
das
mov
bt
rol
mov
pushf
xchg
bswap
cmp
sub
mov
pusha
mov
bt
sub
pusha
rep
pushf
mov
movzbw
mov
movb
lea
jmp
mov
rcrl
jle
imulb
hlt
cld
sub
cltd
add
adc
sbb
movsl
cmp
jl
bound
aas
addr16
test
push
das
lret
jl
jne
add
call
fdivrp
pop
cmp
jg
imul
subb
aam
sahf
mov
and
shll
sbb
test
test
ret
mov
adc
hlt
mov
push
adc
loop
pop
xor
inc
xor
stos
sbb
rclb
dec
or
sbb
stc
lret
or
sbb
bound
call
cld
mov
sbb
das
dec
push
jecxz
es
in
loop
sbb
mov
stc
pop
xchg
int3
sub
addr16
pushf
push
sub
hlt
push
fdivs
mov
push
inc
ret
xlat
ljmp
in
pushl
lcall
push
fnstenv
cmp
lods
lret
jp
inc
cmp
and
imul
test
iret
add
std
pop
pop
rorb
gs
mov
outsb
scas
xor
cmp
fisubrl
cwtl
out
push
xchg
xchg
icebp
mov
mov
outsl
push
test
iret
imul
std
test
jns
push
xchg
lret
jge
mov
mov
pop
add
mov
in
cmp
and
pusha
cmp
xor
cli
out
ljmp
orb
jnp
clc
push
in
or
popa
jno
stc
pop
ficomps
rcll
and
int
call
pushl
jmp
xchg
cmpsl
lret
mov
jae
dec
sbb
test
xor
pop
test
sub
movsl
jae
push
ja
rclb
sbb
aam
dec
cltd
push
ret
adc
push
add
in
mov
loopne
out
bound
insb
xchg
aas
pavgb
cmpsb
cmp
ror
mov
dec
adc
jge
jne
push
into
cmp
cld
into
pop
sbb
out
jbe,pn
sbb
mov
pop
push
pop
cli
push
push
mov
faddl
add
je
outsl
fs
gs
imul
add
in
xchg
mov
add
pushl
pop
cmpsl
scas
push
adc
push
in
mov
or
and
mov
xchg
dec
into
and
ret
mov
mov
and
rclb
sbb
cmpsl
in
data16
aaa
xor
ret
pop
out
into
cwtl
mov
xor
pop
xor
mov
push
arpl
sbb
dec
out
jg
mov
shll
lea
mov
sub
jb
push
xchg
and
and
mov
cmpsl
std
insl
aaa
pusha
jbe
addr16
ss
mov
out
in
jmp
dec
push
lods
or
pusha
pushf
xor
pop
lods
leave
jle
sub
or
jnp
inc
test
sbb
test
int3
sbb
jne
and
das
jb
jo
in
fbld
push
fs
lret
dec
fsub
test
cmp
sbb
les
cmp
cmp
lds
cmp
jo
rcll
loopne
or
adc
mov
add
jo
mov
add
ret
xchg
ljmp
repz
inc
jne
inc
in
into
pop
pop
xchg
xchg
loop
pusha
mov
out
adc
test
dec
xchg
pop
dec
ja
outsl
dec
cmp
repz
subl
sub
pop
mov
mov
inc
fcomip
cmpsb
fcoml
test
add
addl
ja
lret
lcall
xor
fisttpll
popa
sbb
pushf
in
dec
mov
ds
call
cmp
dec
mov
in
sub
lock
jecxz
out
mov
fsubl
push
lret
repnz
sub
loope
rolb
lds
enter
leave
lods
adc
pusha
cmp
icebp
xor
stc
loope
cwtl
addr16
out
xor
hlt
mov
daa
mov
mov
cmovs
ja
mov
enter
jp
divb
pop
scas
mov
mov
jnp
mov
je
aam
mov
add
mov
roll
dec
jmp
lret
xchg
fidivl
in
test
sahf
test
adc
adc
adc
jae
mov
out
dec
vmread
fsubrl
int3
cli
add
mov
adc
push
add
mov
pop
push
push
push
dec
bt
jmp
xchg
scas
ret
mov
ret
or
outsb
xchg
int3
pop
lods
nop
add
sbb
xchg
push
adc
xchg
sub
outsb
mov
into
jmp
push
sub
cs
cmc
and
mov
cmp
xor
scas
pusha
mov
arpl
lret
dec
inc
pop
imul
add
jmp
mov
out
dec
dec
sbb
jae
xor
shrl
sbb
push
adcl
mov
push
xor
push
mov
in
pop
in
gs
mov
cmp
mov
cltd
es
mov
dec
lret
jmp
sub
mov
add
loopne,pn
lods
in
push
push
xor
hlt
adc
jno
cmp
sbb
sti
add
mov
popa
loope
push
imul
fbstp
push
into
inc
add
or
adc
pusha
into
stos
insb
jp
mov
pop
xchg
xor
int3
push
mov
js
cmp
rorb
push
insl
pop
add
or
adc
add
pushf
cmp
pushl
jmp
cli
sub
call
adc
negl
fcompl
inc
sbb
mov
jne
fisubrs
aad
scas
mov
rclb
dec
push
lock
jp
jp
cltd
fsub
cmpsl
cmp
inc
and
push
dec
iret
jecxz
outsb
xor
xlat
out
inc
mov
test
or
pop
mov
sub
inc
stc
aad
xchg
int
adc
mov
into
or
adc
ret
rclb
dec
daa
xchg
lea
jae
cmc
pushf
sub
pusha
jmp
dec
test
mov
ja
in
inc
outsl
addr16
xchg
pop
mov
sbb
cmp
xchg
cmp
xorb
mov
repnz
mov
push
daa
rcrl
mov
nop
shrl
dec
mov
lret
jge,pt
inc
call
cwtl
sub
push
inc
decb
sbb
pop
imul
mov
add
inc
mov
sub
sub
das
add
mov
or
xor
test
and
call
sub
pop
dec
or
dec
mov
and
add
aaa
test
stc
or
in
push
jle
jo
lcall
imul
mov
adc
lods
xor
ret
sbb
js
cmp
push
pop
inc
fstpl
mov
data16
arpl
push
mov
xor
cmpl
xchg
pusha
add
cmpsb
mov
cwtl
fsts
inc
push
shlb
sbb
stos
mov
fstl
mov
dec
fdivs
mov
rclb
call
dec
movsb
enter
out
aad
daa
jne
test
inc
mov
and
lret
inc
cltd
mov
lods
cltd
push
or
mov
xlat
lret
cmpsl
cltd
insb
dec
mov
aam
ljmp
push
insl
shlb
mov
push
loopne
popf
adc
and
cld
dec
add
xlat
iret
lock
pop
scas
mov
push
jmp
int3
fstpt
fs
je
pusha
push
push
push
lea
jmp
cmc
cmc
clc
cmp
pushf
lea
je
cmc
call
cmp
pushf
pusha
lea
ja
jmp
imul
xor
out
out
insl
aad
repz
adc
sbb
lahf
jnp
sbbl
lods
mov
addr16
int3
imul
stos
je
lock
mov
lock
xchg
pusha
lret
inc
and
insl
dec
add
icebp
mov
add
push
jge,pt
add
cmc
repnz
mov
fs
shll
inc
insl
inc
mov
adcl
js
mov
cmc
push
std
fdivrp
or
icebp
inc
jns
sub
fdivs
dec
int3
and
jae
test
xchg
xchg
popf
fwait
testl
sbb
add
pusha
xor
push
mov
ret
jecxz
cld
jno
pop
scas
cwtl
dec
mov
popa
mov
outsl
shll
fdivl
les
testb
movsl
negb
out
adc
leave
rcl
xchg
adc
lock
fldcw
movsb
popa
fidivrl
mov
dec
mov
roll
ds
sub
mov
lret
arpl
sbb
fwait
jmp
adc
xor
push
and
mov
cmp
rcrl
outsl
lret
outsb
cli
cmpsl
in
mov
or
lods
fidivs
xor
dec
mov
scas
sbb
mov
test
jle
repnz
js
inc
push
jmp
xor
lcall
sub
push
pushf
mov
lea
jne
dec
mov
ror
sub
sar
mov
cmp
sub
push
cmp
pushf
pushf
pushl
popl
call
push
rcrl
aad
test
negb
sbb
inc
mov
pushf
xor
fdivr
loop
sub
adc
jecxz
popf
loop
shrl
mov
outsl
sub
cltd
outsb
jnp
fsts
add
sub
inc
adc
fisttpl
hlt
push
in
push
push
dec
stos
outsb
stc
out
xchg
dec
roll
lds
or
xchg
fucomi
insb
mov
push
mov
pusha
ret
mov
loopne
aaa
pusha
dec
cmp
xchg
insw
mov
outsb
push
in
repnz
cwtl
mov
shll
push
imul
sbb
insb
and
pop
inc
push
sub
sbb
pop
jl
mov
pusha
mov
lods
lret
push
outsl
jbe
sub
xor
and
cmp
fstpt
outsl
fwait
movsl
and
mov
xchg
insl
jge
fbld
aam
push
nop
lods
xchg
dec
clc
push
adc
mov
mov
jge
dec
inc
mov
fs
ja
push
inc
jmp
cmp
and
mov
fistps
std
xor
mov
cmp
mov
scas
rclb
jo
arpl
xlat
fimull
jo
xor
and
decb
btc
xchg
lods
mov
and
push
sub
cmpsb
bound
pop
push
testb
xor
ss
mov
mov
lock
lds
xor
push
mov
push
mov
outsb
push
lahf
movl
add
cmp
fistpl
not
pushl
test
bt
cmc
mov
jmp
dec
int
mov
shl
imul
jnp
stos
hlt
in
jl
dec
fwait
lods
cmp
add
mov
pop
lds
cmp
cltd
pushf
xor
inc
pop
add
inc
daa
faddl
push
xchg
xchg
jmp
jmp
push
xchg
pop
out
ss
push
xor
and
push
fmull
sub
mov
in
insb
and
adcl
iret
mov
adc
or
in
cld
gs
into
mov
rol
dec
pop
and
mov
pop
pusha
mov
bound
adc
add
sub
sbb
ret
or
cmc
ror
addr16
aad
sbb
mov
jge
and
test
pushf
sbb
mov
inc
shll
jns
xor
xor
aas
test
sbb
sarl
js
std
cld
pop
stc
gs
test
push
pop
pop
pop
or
shl
and
inc
outsl
shlb
push
mov
lods
or
mov
cld
and
push
mov
rcll
daa
into
lds
movsb
push
push
fstpl
stos
jo
outsb
mov
push
cmp
lds
lret
cmp
cmp
std
pop
push
jg
test
cmp
stc
jno
int3
movsl
push
test
xchg
jne
aaa
jp
sbb
or
cmpsb
call
hlt
pushf
mov
call
inc
std
and
xor
inc
mov
incl
shll
mov
adc
sub
pushf
add
nop
fiadds
ja
sbb
mov
popa
push
or
cwtl
pop
bound
rclb
jle
and
xchg
push
jne
or
test
ljmp
sahf
fwait
pop
das
out
lea
inc
or
out
mov
repz
cld
inc
pop
arpl
jp
push
repnz
mov
mov
cli
jecxz
icebp
loope
les
adc
xlat
inc
cmp
mov
or
cli
sbb
dec
popf
push
mov
lea
or
adc
sub
inc
pusha
cltd
push
xor
cld
loope
jg
sub
mov
icebp
lahf
xchg
subl
push
mov
out
push
mov
clc
sarl
jnp
pop
or
clc
jo
mov
cltd
lods
shll
fldcw
xor
mov
roll
pop
subl
scas
movsb
or
adc
outsl
mov
mov
dec
clc
fdivs
push
scas
out
pop
cld
inc
flds
stc
in
test
inc
and
xlat
dec
stos
push
leave
mov
imul
jecxz
or
inc
or
sbb
clc
lods
scas
dec
fdivr
imul
es
pop
out
dec
insl
sarb
mov
sub
fildl
shr
jmp
sbb
jb
jns
mov
outsl
dec
dec
data16
inc
bound
loop
mov
aad
mov
icebp
cmpsl
ss
cmpsl
lock
shrb
mov
stos
fdivrs
movb
movl
pushf
mov
movzbl
call
inc
leave
cmc
stos
call
clc
test
push
or
pop
cmp
inc
adc
or
adc
mov
jp
cmp
dec
scas
inc
sub
push
push
and
into
loope
inc
insl
mov
rol
or
insb
stos
add
jae
movsl
addr16
jmp
jge
jmp
js
stos
lock
adc
or
add
shlb
or
sub
inc
lcall
xlat
mov
and
pushf
repnz
adc
mov
xchg
call
lock
ljmp
cli
dec
sar
or
jae
push
jg
iret
push
dec
mov
repnz
sub
mov
gs
lock
push
cmp
adc
xchg
xchg
enter
mov
jp
scas
mov
scas
and
lds
and
xorb
xchg
sub
je
sbb
dec
mov
jle
cs
test
lock
jl
mov
jecxz
rclb
xor
out
cmp
mov
lock
adc
shl
call
loop
mov
and
clc
aad
add
sub
inc
mov
jg
outsl
jne
xorl
testb
pop
iret
push
ud0
insb
xchg
xchg
lcall
xlat
out
lds
pop
jne
mov
sub
jo
in
inc
or
fwait
outsl
pop
or
add
push
sti
mov
jmp
jg
sub
jb
int3
sbb
les
inc
xor
sarl
addr16
adc
adc
push
fs
call
imul
add
int3
push
arpl
les
nop
cmp
loop
mov
inc
jns
cmp
pxor
mov
adc
push
repnz
out
jno
pop
aaa
mov
scas
rol
pop
push
add
gs
fwait
jg
inc
ds
jecxz
inc
arpl
jp
iret
sub
cmp
stc
cld
xchg
mov
shr
pop
popa
outsb
adc
mov
imul
mov
mov
sahf
push
outsb
adc
and
call
inc
pop
lret
sbb
test
jno
inc
sub
or
popa
outsb
adc
and
xor
aad
xchg
scas
in
mov
shr
sbb
fs
mov
xorb
lods
xchg
scas
cld
jmp
int
cmp
inc
test
lods
mov
popf
adc
mov
xor
in
sbbl
les
inc
jns
sub
sti
sti
pop
jp
lods
xor
fcoml
cmpsb
fiadds
mov
in
test
stc
dec
mov
leave
fsts
xor
inc
in
div
pushf
jb
sbb
xchg
stos
inc
adc
jg
clc
imul
xor
or
nop
aad
shrl
ret
out
shrl
cvtps2pd
aam
into
cs
jne
ror
xor
enter
push
cmp
frstor
mov
rcr
jmp
adc
clc
dec
or
nop
xor
jb
pushf
lds
adc
outsl
cmpsb
xor
hlt
mov
pushf
out
cmp
fistps
xor
neg
cmp
test
call
mov
test
neg
shl
sete
mov
cmp
test
mov
adc
or
xor
mov
pusha
cmp
clc
cmp
sub
call
push
lea
call
jmp
xor
mov
call
mov
xchg
xchg
dec
mov
or
sti
push
adc
cwtl
in
jp
adc
pop
rclb
cmc
fmull
inc
jbe
mov
loope
add
andl
in
inc
xchg
rorb
inc
imul
cltd
sbb
imul
sbb
sbb
loop
push
mov
xchg
cmp
inc
inc
lret
dec
aad
adcb
dec
and
movw
movsbl
movb
pusha
setp
mov
pop
lahf
cwtl
cwtl
lea
movw
pusha
movb
push
movl
jmp
pusha
lea
jae
cmp
push
cmp
pusha
push
pushf
lea
jae
call
xor
scas
call
ja
mov
inc
mov
pop
popa
ret
push
dec
cli
scas
cmc
jp
hlt
lcall
adc
or
xlat
lds
or
cmpsl
xor
sahf
adc
stos
push
add
dec
xlat
in
scas
or
sbb
imul
gs
cmp
mov
xchg
insl
das
push
inc
call
and
sahf
dec
push
imulb
mov
sahf
sbb
sub
mov
in
xchg
aaa
jge
or
push
push
mov
pop
xchg
ljmp
mov
adc
adc
fstps
adc
xchg
jne
inc
loop
js
fidivl
rclb
xchg
and
enter
sti
and
stos
lea
mov
cwtl
sbb
shll
push
mov
pushf
dec
sub
xchg
sub
sbb
and
cmp
mov
leave
mov
imul
pop
pop
ror
xor
sub
sub
cmp
ret
ja
lods
inc
cmpsb
push
dec
call
pushf
lea
jae
clc
cmp
call
call
add
je
shlb
inc
cld
arpl
xchg
mov
jnp
sbb
mov
mov
popa
mov
fmuls
and
insb
jge
fyl2xp1
fcmovu
xor
pop
and
cmc
sbb
sbb
aas
les
sbb
xchg
loope
mov
je
incb
insb
or
xchg
ret
mov
xlat
repnz
mov
scas
inc
loop
pop
das
mov
mov
xchg
faddl
mov
repz
xchg
push
cltd
mov
push
popf
or
pop
xchg
aad
ja
push
xchg
push
or
shll
icebp
aaa
cmpsb
lods
sbb
mov
out
mov
adc
in
les
les
pop
lret
push
mov
bound
enter
cmp
xor
sub
mov
pop
dec
bound
hlt
enter
scas
scas
xor
shrl
out
adc
inc
sub
hlt
das
pop
iret
mov
int
scas
cs
in
jb
cwtl
imul
les
pusha
jmp
mov
jmp
sub
cwtl
lods
call
pop
fs
adc
repz
clc
jb
scas
push
aam
cmp
out
sahf
or
jmp
jnp
shl
adc
push
test
or
inc
mov
outsb
inc
xchg
inc
cmp
xchg
sti
pop
inc
fdivs
mov
in
iret
ss
js
sub
movb
dec
sbb
int3
mov
xchg
nop
imul
sbb
js
scas
mov
sahf
adc
lcall
cs
aam
mov
lret
cmp
icebp
test
xor
movsl
enter
imul
xor
cmc
test
repnz
push
jmp
adc
add
movsl
push
lods
hlt
jnp
inc
daa
pop
pusha
push
aad
jne
or
addr16
or
shlb
ljmp
movups
imul
push
add
shll
jmp
mov
cmp
ljmp
es
cmc
and
addr16
jae
imul
sbb
fldenv
or
shrl
push
js
psubusb
clc
nop
or
inc
fldl
rcrb
aas
fsubr
movsl
outsl
xchg
add
stos
mov
lea
jmp
pusha
inc
call
mov
sahf
mov
dec
jecxz
repnz
gs
sub
ljmp
out
pop
push
call
repz
sbb
adc
in
xor
pop
mov
adcb
push
jmp
gs
clc
or
mov
loopne
add
mov
ja
int
inc
add
or
xchg
xlat
mov
into
fsubp
cmp
xor
into
fstpt
in
scas
dec
pusha
outsl
out
jne
jecxz
mov
faddl
or
out
adc
dec
mov
out
iret
push
lds
add
adc
lret
out
rorl
fcompp
jp
into
sub
xor
xchg
ss
sar
pop
or
movaps
std
outsl
xor
pop
sbb
arpl
mov
sub
add
ja
sub
lods
into
cld
fldenv
jo
pop
pop
cmpsl
aad
jecxz
rcl
push
dec
movsl
shlb
inc
jg
add
outsl
daa
aas
jne
hlt
jne
scas
mov
lret
aaa
imul
pop
adc
and
lea
je
push
jmp
jmp
stc
test
cmc
add
call
lret
mov
aaa
insl
adc
xchg
int
dec
sbb
rolb
jns,pn
mov
add
es
ret
fiaddl
mov
push
testl
adc
int
fmulp
shlb
mov
xor
mov
lds
jl
xchg
jae
pop
jl
lock
mul
imul
mov
xor
add
leave
mov
das
push
ret
dec
xor
jl
fisubl
sub
jns
notb
das
push
mov
jns
push
stc
mov
xchg
or
out
pop
pop
fldl
shl
and
sub
cmp
mov
mov
adc
sbb
sbb
mov
mov
aam
les
iret
pop
insb
or
push
js
mov
incl
mov
sub
inc
in
jno
std
mov
mov
call
jb
lds
or
ljmp
arpl
jl
sbb
cwtl
loope
je
xor
lods
mov
or
addr16
rcrl
loop,pn
dec
inc
push
sbb
test
jb
add
and
mov
push
and
pop
std
std
adcb
dec
xchg
mov
out
jge
outsl
inc
pushf
mov
pop
cwtl
ss
stos
lahf
lods
sub
mov
and
aam
push
iret
add
out
sub
dec
xchg
es
test
jge
and
push
add
push
inc
mulb
in
xchg
push
es
hlt
xor
test
fmuls
repnz
ror
fcoml
roll
imul
call
in
out
xchg
push
xchg
stos
cmp
lcall
pop
data16
test
imul
or
pushw
mov
ds
movsb
xor
xchg
xor
popl
xchg
adc
pop
push
js
push
mov
dec
jbe
mov
xchg
xor
jg
jg
hlt
out
and
jb
int
jge
dec
cs
and
or
shll
fidivs
popf
sub
sbb
sbb
dec
jle
cmpsl
call
xor
cmp
imul
into
mov
inc
or
ret
inc
cmc
test
adc
jb
aaa
xchg
ss
add
push
push
cs
lret
stos
mov
sahf
out
dec
jbe
inc
sbb
shl
or
testl
das
fs
insl
enter
sbb
jl
popa
test
xchg
cli
shll
loop,pt
sbb
dec
lods
adc
cwtl
mov
push
dec
adc
sub
cs
pop
cmpsb
mov
xor
cmc
lea
jl
cmp
pusha
pushw
popfw
movb
pusha
inc
mov
adc
lea
push
jmp
jmp
and
mull
jns
pop
setle
in
les
jae
ret
jp
and
and
inc
cli
add
cltd
sbb
rcrl
aam
adc
orl
dec
cltd
push
sbb
jno
push
sbb
jmp
data16
xor
mov
pop
sti
push
mov
push
jno
inc
std
ljmp
sti
aas
xor
in
sarl
cwtl
push
cmp
dec
mov
mov
jbe
xchg
scas
lea
out
lret
jmp
lahf
xchg
cmp
xor
cmpsb
call
xor
out
xchg
aad
es
jb
jg
or
dec
ss
or
mov
je
add
rclb
fsub
add
add
xchg
sub
dec
xor
cmp
orl
adc
xlat
fdiv
push
es
insl
in
add
lcall
aad
ljmp
xchg
in
ss
sti
nop
ja
sbb
jp
xor
repnz
pop
inc
add
mov
jb
bound
inc
mov
push
cld
nop
pop
add
rcr
lds
adc
stos
or
aaa
stc
je
movsb
sub
imul
jnp
or
jecxz
jge
and
adc
sbb
out
fistl
xor
pop
jbe
mov
lret
cmp
lcall
lods
leave
ret
and
push
outsl
push
sub
shlb
cltd
dec
jle
inc
or
xorb
fldl
xchg
iret
or
mov
or
jnp
mov
aas
insl
mov
stos
jge
xchg
and
xlat
push
movsl
call
inc
xor
cmp
aas
mov
je,pn
add
jnp
cli
xchg
jl
outsb
pop
in
mov
push
sbb
rcrl
lea
xchg
sbb
sahf
jl
hlt
xlat
mov
imul
push
iret
cmpl
mov
ss
fwait
xchg
shlb
cmp
jns
inc
and
leave
cltd
out
xor
mov
adc
mov
xchg
ret
mov
xchg
jge
movl
jmp
adc
pushf
pushl
ret
mov
call
push
pushf
jmp
jmp
xchg
andb
sbb
add
fistpll
pop
jle
fistpl
cs
pusha
test
mov
add
mov
sbb
jne
dec
in
clc
cmpsl
xchg
jp
xchg
repnz
in
inc
test
mov
add
push
xchg
adc
xchg
adc
inc
adc
sti
pop
cmpb
jmp
lret
les
jo
or
mov
dec
sub
mov
pop
mov
jge
push
loope
pop
mov
gs
movsb
call
cmpsb
push
lret
dec
fcomps
fisttps
stos
repnz
xor
xlat
add
popf
popf
add
cld
adc
lcall
out
stc
jecxz
cltd
inc
push
push
mov
out
out
int
dec
mov
pop
in
cmpb
jb
jmp
js
mov
in
jno
adc
push
clc
mov
cmp
popa
jnp
les
push
jbe
rcrl
dec
inc
jge
adc
cmp
push
ljmp
sbb
mov
cwtl
lahf
xchg
mov
and
inc
pxor
rolb
sbb
or
mov
mov
inc
std
enter
jo
cmpxchg
mov
in
inc
or
jb
add
test
ja
imul
jp
cmc
cltd
sahf
enter
mov
pop
mov
or
in
je
jns
sti
rcl
cld
lahf
pop
hlt
test
into
loopne
call
mov
mov
ficomps
pop
jp
pushf
xchg
mov
fistpl
adc
daa
insb
adc
cmp
mov
into
cmp
jmp
jne
and
test
sub
add
jge
jne
les
mov
aad
push
push
jb
stos
lcall
aad
mov
adc
xor
xchg
pushf
inc
add
shlb
adc
xchg
adcb
shll
icebp
rorb
les
push
ds
fs
imul
popf
lods
cmp
mov
cmp
lcall
andb
nop
fs
aad
sbb
test
lods
aad
adc
ss
int
arpl
sbb
jo
or
sub
or
xchg
stos
mov
lret
sahf
scas
hlt
subl
adcl
and
and
add
lret
out
push
mov
test
push
test
add
les
cwtl
mov
fmulp
popa
push
lds
clc
xor
mov
sbb
and
pop
jmp
xorb
pusha
mov
xchg
movsbw
pushf
mov
pushf
pushf
movw
jmp
pushf
cmp
je
imul
ja
mov
adc
cmpsb
xchg
stos
add
add
movsl
mov
leave
mov
daa
sbb
xor
cmpsl
jns
or
repz
popa
jl
cwtl
popf
daa
pop
push
stc
sbb
cmc
or
aaa
mov
cmp
lret
push
insb
add
jl
add
fbld
inc
pop
js
pushf
jb
adc
je
inc
cmp
jl
nop
sbb
lods
mov
mov
stos
cmp
bound
pop
mov
rol
dec
andl
pusha
movl
pushf
push
pushf
mov
movb
movw
pushf
pushl
ret
dec
int3
pop
cwtl
call
dec
loop
cmp
nop
mov
leave
pop
ficoms
lds
sbb
push
add
decl
jnp
mov
xor
call
xchg
sbb
push
divl
imul
xor
mov
or
sbb
mov
in
pop
adc
cwtl
ficompl
jecxz
test
cmpsl
es
fmul
inc
ljmp
xchg
addr16
add
arpl
in
movsb
inc
je
ret
jg
inc
add
roll
fidivl
cmp
inc
cmp
add
addr16
mov
movsb
jo
shl
call
jbe
repz
adc
pop
and
sub
mov
es
jbe
mov
lods
push
dec
fnstenv
pop
repz
fwait
repz
je
insb
sbb
stos
push
inc
addr16
ret
jb
ret
clc
rcrl
pop
pop
jmp
mov
sbbb
hlt
cld
mov
jnp
mov
in
scas
sahf
aam
and
gs
test
mov
outsl
scas
sbb
and
loope
dec
adc
push
pop
xor
in
adc
sub
xor
push
clc
lock
mov
add
pop
or
jae
adc
dec
xor
xchg
loopne
push
outsl
jg
test
sbb
bound
pop
iret
pop
test
sub
jmp
pushl
mov
pusha
movl
call
mov
mov
pushl
ret
jmp
rcrl
js
jbe
add
mov
sbb
or
cwtl
inc
add
bound
scas
int
add
jnp
or
scas
push
loope
repz
pop
dec
add
mov
das
cmp
xchg
fldcw
add
adc
or
push
adc
add
pop
shlb
add
lret
icebp
jmp
push
pop
js
pop
test
pop
in
lcall
adc
jne
or
pop
jecxz
and
inc
or
out
xor
sahf
call
mov
mov
out
dec
dec
xchg
mov
add
enter
inc
lret
push
xor
jmp
xchg
pop
add
xor
loope
jecxz
push
enter
test
adc
lret
sti
ljmp
faddp
and
rorb
jbe
dec
push
int3
xor
jns
mov
jne
cmc
cmpsl
jbe
mov
nop
push
pop
adc
fucomp
scas
mov
andb
inc
or
mov
out
sub
sub
test
call
movsb
adc
call
std
ret
shrl
inc
ret
int
cmp
mov
xchg
cmp
insl
iret
das
cmp
ja
lock
push
in
mov
rclb
sti
add
das
scas
mov
call
sub
cmp
dec
or
jge
scas
inc
mov
xor
sub
fcmovbe
subl
pop
cmp
ja
and
cwtl
cmp
ret
sbb
mov
fstl
enter
test
sbb
xchg
and
lods
les
rolb
mov
call
mov
mov
out
das
std
pop
xchg
std
les
jo
aaa
add
or
push
call
mov
stos
inc
and
in
rcl
ljmp
or
and
jae
mov
adc
lods
or
stos
inc
fucomp
cs
mov
adc
jp
int
add
rorb
mov
jns
push
cmc
ss
loop
mov
cwtl
clc
mov
xchg
popa
dec
loop
and
jb
ret
adc
inc
js
jmp
cmpl
sub
and
inc
and
mov
jb
jge
adc
inc
lock
shll
mov
mov
mov
loop
nop
sub
push
xor
or
out
push
push
jno
sbb
fwait
in
dec
jecxz,pn
jns
sbb
aas
push
mov
nopl
jp
fmull
pop
test
inc
incl
lock
xor
aas
and
fcos
mov
incl
sahf
xlat
or
std
enterw
mov
jp
xchg
mov
dec
inc
sub
jb
addr16
mov
pop
jl
jno
and
mov
pushf
lea
jmp
lea
call
jmp
pushl
popl
clc
cmp
movw
call
push
push
bound
mov
jns
xor
dec
jno
inc
cmp
dec
dec
push
cmp
fsubl
les
cmp
cs
mov
loopne
cwtl
idivb
lret
cmp
loop
fidivl
sti
push
jg
mov
cmp
mov
daa
push
rorl
mov
and
andl
dec
xor
repz
das
enter
and
cltd
xor
decl
int
test
jle
ja
int3
loopne
sbb
xchg
dec
xlat
jmp
push
inc
in
lea
ljmp
push
or
call
cmp
enter
std
sub
push
gs
fmull
jb
inc
and
shl
cmp
clc
push
jmp
cmp
fidivs
xchg
hlt
movl
fwait
jbe
cmp
mov
add
dec
in
enter
lret
lds
ljmp
loopne
fwait
cld
js
mov
dec
dec
jns
dec
push
adc
aam
or
jo
rcl
cwtl
cmp
repnz
cs
jmp
add
inc
imul
rclb
mov
adc
cld
push
mov
push
fildl
jl
push
cmp
sahf
mov
sub
push
fnstcw
bound
call
scas
scas
enter
ret
sub
pop
xchg
sbb
push
in
mov
push
push
xchg
movsb
adc
pop
push
mov
andb
loop
rclb
clc
inc
movsl
inc
lods
mov
out
arpl
out
dec
dec
nop
out
push
push
cmp
add
lea
add
pop
hlt
adc
xchg
inc
xchg
call
inc
mov
stc
mov
and
push
mov
pop
addr16
mov
dec
in
cld
mov
cmp
aas
adc
cmp
cmc
fmuls
test
sti
cmp
jp
mov
xlat
fimull
ficoms
sbb
sub
jecxz
gs
pusha
push
fistps
mov
pop
pop
in
mov
ficompl
cld
cmpsb
mov
cld
jl
dec
push
push
sub
or
aam
push
mov
orb
icebp
mov
and
jno
call
not
sub
jbe
mov
cmc
bt
call
loope
stos
xchg
call
jo
andl
fldcw
in
syscall
pop
rep
bound
cs
mov
jmp
rclb
xor
call
push
mov
inc
daa
push
or
xrelease
jecxz
mov
mov
jmp
add
ret
movsl
sub
stos
fxch
lods
mov
jno
rorb
pop
fmulp
xchg
les
aas
nop
inc
js
outsl
mov
shrd
stc
shrl
daa
xlat
push
shrb
push
mov
push
std
and
jmp
fwait
xor
test
inc
sarl
fwait
js
lea
ret
test
pushf
pop
pop
out
dec
fs
sti
push
sub
jmp
cmp
iret
or
push
sahf
in
out
out
shr
add
ret
bound
push
in
int
add
clc
pop
or
cmp
sarl
pop
addr16
ret
push
pusha
lea
call
jmp
sub
mov
call
mov
add
test
xchg
fdivrs
jg
jae
sti
xchg
les
inc
push
mov
cmpsb
xchg
mov
dec
lret
movsb
iret
imul
fs
xchg
cmp
pop
js
lock
clc
sbb
push
mov
push
lret
pop
cltd
adc
popa
out
scas
fidivl
je
pop
lret
in
push
jns
sub
test
and
call
icebp
xchg
ret
fsts
mov
push
dec
out
ja
pop
rorl
das
xchg
jbe
dec
js
push
nop
movsb
test
test
jmp
addl
into
lea
aas
pop
sub
ja
repnz
stos
mov
fistpll
cmp
dec
pop
movsl
clc
in
mov
test
cmp
andl
xor
push
cmpsb
stc
inc
xor
cmp
in
cmpl
or
push
pop
popa
push
outsl
mov
imull
or
sahf
cmc
jle
adc
xchg
roll
ja
mov
xchg
sub
fs
jmp
mov
pushf
movl
push
lea
ja
pushf
lea
jb
stc
bt
cmp
pusha
cmpb
call
xor
enter
cmpsl
jp
mov
scas
daa
daa
ja
xor
sti
push
push
cmp
imul
fadd
lds
movsb
scas
cmp
dec
push
push
push
jnp
popf
jae
popa
xor
imul
mov
test
mov
mov
xor
xchg
jmp
sbb
push
mov
das
pop
or
hlt
adc
jne
ja
enter
xchg
out
mov
fwait
sub
xchg
mov
adc
pushl
pushf
lea
jmp
lea
je
pushf
pushf
lea
jmp
jmp
movl
pushf
pusha
movw
lea
jmp
call
ss
call
testl
add
xchg
lahf
adc
mov
js
pop
push
in
dec
and
incb
fmull
jns
sbb
push
into
sub
pusha
add
adcb
jmp
aam
jo
dec
sarb
push
and
dec
sahf
and
inc
ljmp
jne
jl
clc
jg
insl
stos
jle
cmp
repz
and
in
dec
jns
pop
add
fstps
and
popa
sub
pop
arpl
xchg
pop
shl
ficompl
hlt
and
bound
pop
pop
imulb
jmp
xchg
cwtl
xor
dec
arpl
outsl
test
lret
dec
sbb
xor
nop
lea
shl
inc
cli
in
leave
jle
push
mov
sti
jo
stc
ljmp
mov
and
push
xchg
rorw
dec
push
jnp
out
cwtl
lods
xchg
int3
cmp
xchg
pop
clc
xor
das
cmpsl
roll
ja
and
lahf
lods
adc
aad
xchg
fistpll
clc
mov
pop
xchg
add
jg
jl
scas
sbb
mov
dec
lods
pop
and
shr
dec
sbb
and
sbb
les
shr
xor
xchg
rorb
call
adc
ljmp
test
cmp
ljmp
sbb
test
mov
sahf
dec
xchg
jmp
fldenv
loop
mull
fists
inc
movsb
mov
sbb
adc
lcall
push
out
mov
aaa
dec
xchg
fdivrp
mov
push
dec
ret
lahf
inc
in
nop
std
hlt
xchg
insb
loope
shlb
and
orl
mov
clc
lcall
das
xchg
mov
pop
cmp
sbb
mov
push
push
sub
xlat
and
mov
mov
and
mov
mov
scas
daa
mov
test
into
std
outsl
adc
cmc
bound
mov
jecxz
and
push
ljmp
jge
lods
or
mov
cmp
movb
lea
je
stc
sub
cmp
cmc
call
cltd
into
pop
mov
rorl
insb
sbb
mov
mov
cmpsb
lahf
and
hlt
insb
lock
cmpsl
xchg
leave
mov
imul
sub
dec
stos
rcrl
jns
movsl
pop
filds
lds
add
dec
lret
stc
out
repnz
mov
push
sub
mov
cltd
lods
jnp
cld
xchg
sub
in
lock
mov
mov
aam
push
sbb
pop
and
ljmp
es
loopne
pop
in
push
fs
je
les
aaa
push
outsl
cmpsl
sbb
xchg
xchg
call
dec
sub
call
loope
push
out
scas
les
mov
xchg
scas
cmp
popf
stos
loopne
pop
and
ficomps
pop
push
xchg
nop
push
into
test
xchg
fisttpl
roll
cmc
mov
mov
fs
je
sub
mov
mov
movb
lea
jmp
call
inc
inc
inc
inc
rol
setg
inc
inc
xchg
aad
and
ror
pop
mov
stc
mov
call
xlat
xorl
fbstp
dec
popa
mov
call
jmp
xor
es
cmp
jg
aaa
sub
jecxz,pn
insb
xchg
lahf
negl
andl
movsl
int3
mov
es
jbe
add
sbb
lods
aaa
or
and
push
rol
inc
mov
add
adc
test
mov
shl
pop
fldt
clc
xchg
out
test
int3
sahf
lock
cld
iret
push
push
push
pop
data16
scas
jl
xor
ja
cmc
out
dec
jecxz
nop
cld
jbe
and
mov
mov
cmp
seto
insl
adc
loopne
imul
cmpsl
cld
hlt
sbb
pop
sub
or
pop
and
cld
das
push
jo
in
inc
or
icebp
xor
mov
fsts
cmpl
ds
out
jbe
add
iret
and
imul
fidivrl
xor
inc
push
adc
xchg
pop
fcmovbe
inc
adc
ss
das
addr16
or
cmp
rcrl
fs
call
sahf
jno
cmp
dec
ficoml
jo
es
adc
mov
xor
repz
pop
aad
in
jecxz
pop
mov
jmp
sbb
iret
es
or
cltd
pop
insb
popf
bound
adc
xor
and
adc
mov
incb
sahf
in
cmpl
jnp
cwtl
jb
mov
in
push
mov
xchg
loopne
in
add
xor
cmp
pop
pop
push
int
mov
rclb
cltd
aaa
loop
mov
xor
cs
mov
mov
scas
xchg
inc
jle
andb
punpcklbw
mov
pusha
cmc
cmpb
pushf
lea
jne
btc
aam
xor
dec
shl
and
shl
mov
shl
push
dec
add
pushf
mov
push
movl
push
bt
test
call
adc
pusha
push
lea
jae
pushf
jmp
adc
call
bound
popf
sub
dec
js
fs
clc
add
or
arpl
out
pop
insb
ficoml
in
scas
test
or
jp
or
fcmovne
mov
jle
fmulp
add
clc
pop
icebp
jne
inc
stos
pop
push
test
inc
dec
sarl
mov
push
sub
ret
movsb
xchg
ds
pop
ljmp
add
out
or
data16
stos
mov
clc
pop
int3
xchg
lret
movsl
movsl
cld
mov
cmp
test
dec
dec
push
push
dec
dec
dec
cs
push
push
add
shl
divl
out
repz
cmp
rcll
xchg
jbe
es
addl
mov
loop
incl
sub
mov
sbb
cmp
lock
imull
aam
je
sbb
cli
or
das
outsl
fimuls
aam
and
clc
sbb
in
sahf
lods
mov
aam
bswap
setg
mov
bt
cmpb
push
call
test
adc
ficompl
push
mov
jae
push
cmp
cmp
pusha
sbb
fsubrl
sbb
or
sub
movsbl
cmp
stos
xchg
push
sub
ljmp
cmpsb
inc
add
sbb
pop
les
cli
inc
inc
xacquire
jmp
daa
dec
sub
aam
jg
xchg
push
mov
out
mov
mov
hlt
cmp
push
jne
push
mov
mov
lods
xor
mov
sub
inc
out
mov
dec
push
insl
stos
sahf
mov
push
inc
dec
aas
mov
lods
stos
jg
xchg
pop
imul
cltd
pop
roll
insl
shlb
push
dec
aam
outsl
jbe
mov
outsb
stos
sbb
jo
cmp
aaa
stos
popa
ds
and
cmp
repz
or
stos
jmp
xchg
cmp
and
je
push
xlat
cvtdq2ps
es
lds
cld
mov
test
inc
mov
repz
sbb
xchg
push
stos
clc
popf
in
sbb
cmp
cs
out
in
into
stos
xlat
mov
cmp
stos
das
mov
sub
mov
lock
stos
leave
mul
cmc
and
clc
inc
stos
lods
add
fstps
sbb
aad
dec
pop
mov
in
sbb
cmpsl
sahf
orb
dec
loopne
stos
mov
xor
xor
rorb
cmpsb
sub
andl
ret
xchg
ret
stos
or
aaa
pop
add
mov
arpl
stos
mov
dec
xchg
push
stos
cmp
mov
and
outsb
lods
stos
mov
pop
xchg
cmp
mov
mov
dec
cs
jbe
jecxz
sbb
in
ret
repz
mov
sub
inc
push
outsl
stos
sar
lods
mov
add
stos
pop
add
xchg
mov
and
jg
aad
or
lods
lret
mov
fnstsw
stos
out
mov
pop
jb
sbb
jns
ljmp
xorb
cmp
aam
repnz
inc
stos
mov
in
inc
stos
ret
cmpsl
mov
xchg
test
mov
arpl
leave
cwtl
stos
insl
sbb
jge
into
inc
stos
sbb
in
xchg
dec
xchg
stos
in
inc
push
sbb
cwtl
clc
pop
int
push
xor
add
stos
cltd
dec
mov
ljmp
cli
movsb
ffreep
mov
add
aad
or
dec
jb
aaa
mulb
mov
inc
insb
insb
call
inc
mov
sub
xor
scas
sbb
lods
stos
add
add
nop
xor
in
inc
rclb
outsb
stos
mov
mov
inc
or
sbb
aas
or
sub
stos
adc
negl
push
loopne
dec
jp
cmp
outsl
cmp
fnsave
adc
int
je
pop
clc
sub
movsl
adc
push
push
les
cmp
add
xchg
push
pop
sbbl
pop
xchg
loop
stos
xor
jge
aad
push
popf
insb
test
mov
and
stc
mov
insb
push
outsl
push
icebp
iret
loop
mov
lcall
jne
mov
insb
stc
sbb
push
outsl
outsl
push
push
popa
scas
rorl
jp
test
and
sub
or
rcrl
push
insb
scas
sub
movsb
stos
outsl
pop
fiadds
dec
xchg
js
test
cmpsl
out
and
int
daa
psllq
pop
stos
jge
imul
xor
insb
push
adc
jg
push
xchg
ss
inc
sub
enter
stos
inc
or
shrl
into
jo
daa
jns
ret
and
aas
adc
lods
stos
sahf
in
cmp
outsl
out
stc
incb
dec
shl
push
pusha
sub
cld
xchg
stos
adc
and
outsb
lcall
test
inc
and
stos
mov
fwait
ss
cmc
sbb
xor
sbb
stos
push
enter
sub
stc
pop
jp
inc
mov
mov
in
adc
adc
enter
mov
jns
icebp
sub
subb
mov
hlt
jbe
mov
push
arpl
push
and
loope
sub
mov
dec
repz
sub
dec
mov
pop
scas
sub
cmpsb
ljmp
dec
mov
jmp
add
stos
rorb
int3
sti
outsb
pop
stos
fidivl
pusha
xor
insl
je
imul
or
stos
leave
sbb
pop
pushw
scas
xchg
sbb
xor
mov
mov
mov
cs
cltd
mov
mov
addr16
inc
mov
jno
fs
xor
pop
push
lcall
xchg
addr16
xor
xchg
mov
adc
ret
fwait
dec
pop
loop
jge
movsb
add
dec
out
mov
cmp
ljmp
jno
dec
sti
mov
push
sub
insb
repnz
insl
adc
insb
jmp
xchg
scas
out
in
imul
stos
fstpt
xchg
stos
data16
mov
stos
adc
xor
add
pop
cmp
inc
flds
mov
mov
and
xchg
in
stos
and
cli
call
jmp
mov
push
mov
pop
stos
xlat
mov
jg
mov
push
fdiv
ret
lds
stos
fs
insl
cmpsb
dec
in
movsb
stos
or
stos
out
mov
lret
in
sub
add
xchg
pop
inc
sub
mov
mov
test
and
pusha
stos
dec
pop
test
dec
jo
ds
or
add
aad
add
mov
mov
in
mov
and
enter
mov
dec
xchg
jmp
imul
aas
mov
sbb
pop
stos
std
mov
dec
xchg
mov
xor
insl
repnz
pusha
push
adc
dec
push
sub
cmp
cmpsb
stos
stos
xlat
mov
icebp
mov
stos
js
out
mov
xchg
mov
test
xchg
cmp
mov
roll
das
mov
stos
daa
xchg
add
stos
push
xchg
cmpsb
movsl
popf
xchg
push
jge
stos
test
fwait
or
out
mov
sar
inc
adc
jp
nop
loopne
jmp
mov
jo
mov
mov
push
pop
leave
ret
ljmp
push
xchg
dec
test
fcmovnbe
mov
cs
xor
insb
in
jmp
call
lods
or
mov
sub
mov
outsb
jmp
or
movsb
pusha
mov
cmpsl
out
sbb
fwait
popf
lods
mov
lret
into
daa
push
mov
popf
movl
mov
int
daa
dec
mov
popf
leave
pop
or
dec
pushf
dec
mov
lret
mov
popf
xchg
pop
shll
adc
adc
push
popf
xchg
pop
aad
adc
daa
push
mov
popf
popl
iret
xor
pushf
push
nop
int
daa
adc
xor
pushf
push
xchg
int
daa
adc
xor
pushf
jl
int
daa
cmp
jge
mov
pushf
jle
int
daa
ds
popf
mov
divl
aaa
pushf
mov
inc
xor
scas
popf
out
pop
xor
mov
int
daa
jne
mov
sbb
cwtl
xor
daa
or
xor
subb
imul
sub
icebp
daa
fdivl
xor
ds
cmp
sahf
xor
mov
popf
in
pop
xor
mov
mov
popf
add
xchg
mov
repnz
popf
in
and
int3
pushf
dec
aam
xchg
daa
cmp
cmp
fwait
push
stos
int
daa
sbb
xor
sti
daa
cmp
stc
popf
in
pop
out
xor
pop
imul
ss
pop
cmp
jo
in
xchg
pop
popf
in
sahf
pop
fistl
jne
or
xor
jge
pop
lahf
add
sbb
aas
fldt
jecxz
jns
pop
fldt
popa
pop
xlat
and
mov
jno
and
loope
pop
xchg
mov
jge
fsubp
mov
in
loope
lds
movsb
cs
movsl
jecxz
outsl
sahf
loop
mov
sub
inc
pop
in
mov
lcall
cmpsb
add
loope
sbb
dec
cmpsb
and
fsubs
jl
and
orb
movsl
xor
fildl
add
xchg
and
mov
jecxz
and
sub
jne
ljmp
jae
cmp
adc
fimuls
xor
out
fs
adcb
jecxz
cmpsb
mov
movsl
daa
movsb
into
sub
sub
not
pop
daa
sbb
mov
pop
lock
cmc
insb
push
mov
sbb
daa
inc
ljmp
movsb
or
int3
scas
pop
and
sbb
das
pop
xor
pop
pusha
je
and
and
pop
cmpsl
idivl
faddl
pop
jmp
in
jmp
pop
mov
push
gs
pop
xor
xchg
cmp
jecxz
push
loope
rcrb
lahf
fbstp
in
cmp
dec
inc
mov
push
leave
ret
xchg
cmpsl
adc
hlt
in
test
sub
in
shlb
enter
jne
xchg
pop
rolb
loop
pop
adc
dec
mov
out
loopne
xor
and
mov
ds
xchg
fwait
inc
and
push
push
ret
inc
out
testl
cltd
adc
frstor
es
fnsave
fbld
and
cmp
mov
mov
push
outsl
and
out
bound
nop
jo
sbb
mov
pop
fsubs
out
push
mov
daa
xlat
pop
sbb
cmp
push
mov
mov
in
fisubrl
bound
popf
rcl
aad
popa
negb
outsb
xchg
je
out
pop
jno
add
push
js
cmp
sbb
repnz
pop
enter
addl
leave
cmpsl
mov
xor
jmp
pop
hlt
cmpsl
in
out
adc
lods
fxam
pop
fucomi
stc
out
cmc
inc
ret
in
mov
movsl
dec
cmpsl
jne
mov
sbb
insb
movsl
popf
sbb
aas
adc
push
push
rcrl
int3
mov
jbe
insl
loope
mov
add
mov
imul
adc
mov
lods
outsl
je
mov
bound
addr16
xor
outsb
cwtl
ret
ljmp
cwtl
cmpsl
mov
shll
mov
mov
std
lock
xchg
xor
mov
rolb
fs
in
das
lock
jg
push
adc
mov
cmp
std
push
inc
mov
and
lods
mov
ret
pop
insl
mov
push
repz
out
pop
rep
cltd
jo
mov
xchg
les
fwait
iret
xor
sbb
mov
std
jnp
pop
fcomi
loop
mov
mov
or
icebp
mov
mov
adc
fs
loope
fidivl
fsubr
push
jo
pop
rcrl
pushf
mov
insb
lock
sbb
xor
dec
icebp
mov
xchg
sub
fistpl
mov
jo
scas
call
stc
jns
lea
inc
rcll
mov
mov
sahf
out
lock
inc
mov
jo
shll
pop
andb
and
sbb
push
lock
pushf
test
push
icebp
inc
stos
loop
mov
ret
inc
xor
fwait
out
das
lret
aaa
mov
jno
icebp
lret
mov
out
jp
sub
mov
adc
fsubrs
out
insl
sbb
jne
and
cmp
and
xchg
mov
scas
and
out
out
sub
test
adc
jl
aam
cmp
mov
pushf
inc
ja
jecxz
mov
mov
push
cmpsb
les
sbb
jmp
mov
movsb
xchg
pop
add
ret
mov
lahf
dec
pop
sub
inc
mov
pop
ret
mov
out
leave
dec
fisttpll
push
gs
add
jmp
call
push
aam
lods
aas
in
xorl
and
xchg
add
mov
sub
ljmp
xor
hlt
sub
jo
cmpsb
mov
aam
mov
dec
out
out
cmp
fwait
scas
sbb
xor
pop
mov
and
fnsave
cli
int
lahf
insl
mov
fucomip
sbb
ljmp
mov
jmp
cld
aam
jns
fstpl
pop
jmp
daa
xor
fnsave
cmp
xchg
inc
lods
adc
stc
in
push
outsl
xchg
sbb
xchg
nop
push
cmp
popa
xchg
pop
mov
add
xor
filds
outsb
mov
xchg
lds
test
add
lcall
mov
mov
xchg
les
and
xchg
cld
aas
ss
test
cmc
rorl
xchg
cmp
mov
mov
aas
stos
fsubl
dec
dec
popa
movsb
inc
jle
aas
add
jb
add
test
sub
xchg
pop
shrl
lods
mov
ret
cmp
add
xor
iret
inc
mov
aad
sahf
jecxz
in
fisubrs
xchg
dec
loopne
subl
les
pop
nop
lds
jbe
dec
fs
nop
mov
aam
sbb
mov
xchg
xorb
and
pop
xor
jmp
in
data16
pushl
dec
add
mov
adc
in
lock
jns
adc
fwait
stos
addr16
add
fldl
add
pop
in
and
xchg
inc
sbb
test
and
fcompl
jecxz
fiadds
pop
mov
lods
sbb
add
add
sti
sub
popf
loope
in
push
rcrl
es
sarb
test
mov
js
cwtl
in
ljmp
popf
lods
cmpsl
mov
fsub
fwait
jo
repz
cmpsl
in
xchg
fnsave
mov
xchg
out
cmc
sub
mov
mov
pop
loopne
mov
fcompl
outsb
adc
mov
pop
jbe
scas
mov
push
sub
sub
jg
cld
add
cmpl
shl
xor
and
pop
arpl
xor
jmp
dec
sub
mov
popf
pushf
sub
mov
mov
arpl
pusha
cmpl
fisubl
mov
ret
xchg
lea
fimull
clc
xchg
mov
lahf
mov
sbb
xchg
ret
pop
loope
jo
cmp
push
xor
test
mov
mov
sub
insl
sbb
push
sub
sbb
je
add
movsl
lock
pop
arpl
jb
dec
shlb
cmpsb
popa
jecxz
in
les
pop
mov
es
and
sbb
jmp
sbb
or
mov
scas
lods
fildl
imul
aas
and
scas
xor
out
xor
mov
insb
in
dec
pop
sbb
cmp
in
mov
cltd
mov
fwait
pop
nop
repz
std
ja
arpl
in
das
dec
inc
or
mov
int
dec
mov
cmp
push
xchg
std
rcll
rclb
outsl
cmpl
sub
fnstsw
xor
leave
es
jns
stos
nop
adcb
push
xchg
mov
cmpb
rolb
sahf
inc
add
fisttpl
push
xchg
dec
aas
jns
xor
dec
das
enter
insb
enter
rcll
sub
mov
mov
push
adc
sbb
nop
icebp
fwait
dec
stos
jle
xchg
les
inc
div
adc
mov
sbb
jno
icebp
fisttpl
pop
popf
push
pop
xchg
xlat
stos
pop
pop
cwtl
fcomps
pop
cltd
sbb
cld
mov
or
lea
fdivl
sub
adc
repz
xor
jbe
lock
icebp
dec
addr16
test
mov
cmp
insl
mov
jle
xchg
clc
nop
aas
jg
cmp
fistpl
das
sub
push
stos
mov
cmp
mov
mov
popa
mov
push
push
mov
xor
aaa
popf
outsl
sarl
xor
lods
xor
icebp
lods
sahf
loope
pop
add
icebp
dec
shll
daa
mov
lods
mov
je
out
jle
lods
xchg
pop
dec
call
pop
mov
out
imul
pop
hlt
or
cltd
cmpsl
aaa
imull
mov
push
push
stos
clc
inc
mov
adc
out
sub
ds
or
xchg
nop
loopne
fsubrs
sub
in
sarb
cmc
scas
sbb
aaa
cmpsl
jmp
mov
fwait
in
leave
sbb
scas
mov
mov
call
jmp
lods
enter
inc
mov
mov
xlat
lods
lcall
sub
imul
repz
shll
push
lods
push
ret
sub
lods
inc
int
and
subb
ljmp
roll
xor
test
jo
and
mov
movsb
imul
dec
mov
add
ljmp
aad
jno
in
mov
ja
cmc
hlt
xchg
lret
repz
int
push
popf
inc
icebp
ja
std
icebp
das
sahf
xor
xor
repz
cwtl
mov
stos
xchg
enter
xor
scas
incl
lds
and
pop
or
inc
mov
scas
xchg
fisubrs
mov
mov
xor
pushf
push
sbb
cmp
mov
test
je
les
das
add
fistps
les
aas
fcompl
lock
pop
mov
aaa
pop
lods
pop
mov
out
inc
pop
imul
sub
shr
lods
leave
mov
adc
imul
loop
add
push
lods
push
int
movsl
xchg
fistpl
mov
jg
sub
xchg
stos
loopne
inc
xor
mov
cmpsl
push
and
cmp
xor
lods
mov
push
test
xchg
mov
mov
pop
loopne
stos
arpl
push
mov
rcrb
jecxz
loope
jo
fidivs
jbe
mov
jmp
stos
loopne
jmp
ja
repnz
lods
mov
out
or
inc
mov
aam
cmpl
inc
jmp
int
xchg
movsl
mov
xchg
shlb
lea
dec
stos
add
sub
or
mov
das
or
dec
dec
int3
leave
mov
lods
sbb
movsl
xlat
or
bound
xchg
mov
xchg
pop
les
push
fsubrl
mov
adc
pop
or
test
cmpsb
in
sub
divb
rcrl
jo
xor
xor
or
shll
loop
addr16
lods
xchg
mov
test
sarl
mov
xchg
fildl
or
mov
mov
inc
cld
lods
dec
lods
das
xchg
xchg
mov
jmp
rcll
enter
mov
leave
mov
xchg
xchg
in
mov
lds
lret
movsl
in
fnstcw
sbb
jp
mov
test
int
or
cmp
cmp
mov
das
aas
xchg
testl
fwait
loope
xchg
cmpsl
mov
pop
les
or
xor
mov
popf
les
gs
int3
lds
add
jge
xchg
add
ljmp
and
flds
lods
push
mov
orb
fnstsw
mov
lahf
inc
pop
sbb
test
push
test
lcall
loope
jmp
in
add
fisttpll
fs
cmp
xchg
rorb
loopne
mov
lret
push
mov
jle
fildl
xchg
fwait
enter
fnstenv
mov
mov
sbb
clc
loope
nop
outsb
mov
cmpsl
mov
mov
sbb
mov
and
lods
push
mov
imul
mov
out
nop
mov
adc
cmp
fstpt
cmp
mov
lds
lods
in
test
mov
rcrl
add
mov
scas
mov
int3
hlt
inc
and
leave
mov
mov
cmc
mov
lcall
dec
push
lea
lods
add
or
mov
xor
sub
mov
sarl
or
mov
lds
and
inc
test
fisttpl
mov
out
xor
stos
subl
lods
cmp
rorl
aam
mov
xchg
sub
in
push
mov
lcall
test
ds
fldcw
fidivrs
hlt
adc
lcall
xlat
lcall
leave
sahf
sbb
inc
sarl
cmp
int
or
mov
scas
aad
jno
icebp
nop
mov
pop
test
les
sub
lock
ret
ds
xchg
xchg
aaa
add
lea
inc
pop
xchg
cmp
sub
std
mov
dec
stos
add
ret
mov
mov
adc
fwait
leave
dec
aad
cmp
cwtl
call
xchg
test
rorl
mov
mov
mov
push
aad
adc
les
mov
cmpsb
sarl
or
lcall
lahf
scas
in
movsl
sbb
pop
lds
lock
stos
loopne
push
lods
xchg
clc
cmp
lea
in
and
sahf
std
jp
lods
xor
xor
mov
popa
inc
mov
xchg
data16
pushf
into
or
sti
loop
pop
js
mov
cmpsl
cmc
test
shr
clc
mov
push
jno
pop
inc
movsb
in
xchg
scas
jmp
push
mov
sbb
out
stos
roll
sub
cwtl
inc
jne
rol
xor
enter
lods
pop
ret
mov
xchg
xlat
mov
testb
ret
data16
mov
movsb
into
mov
mov
or
rcrb
inc
and
or
xor
xchg
pop
stos
cwtl
jle
cwtl
hlt
enter
lcall
push
xorb
lods
and
xchg
movsl
mov
scas
ja
daa
mov
cmpsb
xchg
mov
mov
fwait
or
jno
cmp
mov
and
les
sahf
dec
scas
aaa
outsb
pushf
sub
les
add
mov
ret
or
adc
lds
imul
rorb
std
cwtl
das
inc
add
das
inc
std
inc
pop
lds
lods
mov
add
fstl
mov
dec
jecxz
and
ret
pop
sbb
je
mov
lods
hlt
xor
mov
in
sub
imul
and
or
mov
lahf
les
stos
and
mov
outsb
xchg
adc
lds
test
lods
aas
mov
mov
sub
in
cwtl
mov
hlt
mov
ret
test
movlhps
cli
cmpsb
lods
inc
add
mov
shll
or
fwait
insl
push
aad
push
repz
lcall
mov
sbb
ret
push
lret
cld
cwtl
sarl
xchg
scas
aad
daa
stos
and
mov
add
stos
daa
test
mov
std
mov
mov
stos
xor
into
cwtl
call
enter
cmp
mov
lds
push
or
aas
jmp
aad
lahf
xchg
dec
stos
js
mov
icebp
rclb
call
in
mov
mov
sub
pop
aam
mov
sahf
sbb
cmp
mov
movsb
jge
cld
mov
fwait
iret
mov
mov
jle
pshufw
rcrb
sbb
pop
add
jge
mov
fadds
test
fnstsw
ljmp
mov
and
daa
mov
stos
adc
shld
push
test
sahf
lahf
cwtl
loope
adc
mov
mov
mov
cmpsb
sar
xchg
fnstsw
mov
mov
hlt
xlat
mov
sahf
hlt
cltd
outsl
aas
sub
stos
pushf
cmc
xor
pop
mov
stos
xor
inc
inc
popf
stos
push
iret
mov
fstps
xchg
jae
movsb
mov
xor
daa
lahf
pop
sarb
adc
lds
bound
lods
xchg
shll
mov
movsb
mov
lds
mov
orb
ss
lods
std
repnz
movsb
sub
inc
hlt
int
mov
lcall
push
ret
mov
push
jbe
mov
shrl
rorb
sub
lea
mov
into
mov
aas
xor
inc
inc
cmc
movsb
shl
dec
shll
cmp
cmp
mov
xor
lahf
or
jl
movsb
in
xchg
imul
sbb
mov
add
sub
inc
cwtl
in
mov
inc
adcb
inc
mov
movsl
loope
mov
in
stos
cmpsb
mov
xchg
add
mov
mov
push
push
adc
repnz
in
cltd
xchg
std
mov
sbb
popf
pop
push
jno
rcl
lea
sbb
popf
fnstsw
imul
scas
or
aam
pushf
ret
daa
or
movsl
xor
mov
xchg
popa
in
add
inc
pop
inc
shlb
mov
cmp
sarb
mov
and
cltd
cmp
mov
add
rcrb
les
rorb
push
pop
mov
add
pop
mov
mov
jne
lea
push
test
movsb
mov
cwtl
push
xchg
std
mov
scas
push
cmp
or
jge
jne
rolb
jmp
xor
fsub
leave
fimuls
ss
mov
and
test
nop
loopne
dec
xchg
mov
insl
enter
fsubrs
stos
xchg
sub
lds
sbb
stos
lahf
sarl
mov
mov
int
ljmp
rep
pop
cltd
push
cld
mov
test
call
stos
inc
lea
loope
mov
sub
add
push
daa
inc
pop
cmp
jmp
cmc
stos
xchg
lds
stos
cwtl
jne
lahf
leave
ret
mov
sbb
scas
sbb
inc
lods
xor
stos
loop
in
mov
lcall
movsl
movsl
lods
sbb
mov
lahf
popf
mov
cmp
fmul
mov
cld
mov
enter
aam
lods
ljmp
xor
inc
inc
pushf
cmc
cwtl
adc
push
imul
inc
mov
daa
not
mov
mov
nop
setae
nop
jne
daa
lea
cwtl
xchg
inc
pop
jae
std
je
shrb
rorb
mov
mov
pop
mov
dec
data16
inc
ret
cli
jg
outsb
add
mov
xor
lcall
aas
btc
rcrb
stos
sbb
into
ret
pop
test
data16
mov
lret
test
inc
hlt
ret
in
mov
jbe
jbe
test
lock
scas
pop
ret
adc
int
rorl
rcrb
lahf
aas
mov
leave
iret
enter
stos
mov
adcb
data16
mov
aad
fbstp
push
nop
enter
jns
imul
fists
mov
jmp
mov
mov
stos
xchg
inc
ror
cmpsb
sarl
mulb
mov
rcr
mov
xchg
sbb
cwtl
or
inc
movzbl
push
mov
shll
lods
push
int3
mov
cwtl
xchg
cltd
xchg
add
sarl
and
lahf
jmp
test
int3
xchg
mov
scas
dec
add
xchg
fucomp
stos
mov
cltd
dec
cwtl
popf
dec
stos
int
jp
sub
aas
stos
fnstenv
adc
in
add
pushf
xchg
or
ret
cwtl
dec
lods
jne
mov
fisubrs
mov
xchg
ss
lahf
add
xor
and
mov
lods
test
mov
inc
xchg
add
ljmp
notl
or
scas
sbb
les
mov
hlt
pop
testb
mov
xlat
movsl
pop
mov
sbb
idivb
pushf
mov
dec
mov
test
fisttpl
push
das
int
imul
movsl
pushf
ret
fs
cli
std
and
xlat
test
mov
idivl
ret
stos
push
outsb
lea
stos
cmp
pusha
xchg
or
shrb
fildll
mov
jno
and
lods
ja
mov
clc
push
jmp
add
xchg
mov
push
sub
inc
orb
mov
xchg
mulb
sub
enter
stos
xor
pushf
in
int
outsb
inc
cmp
lahf
jo
push
push
mov
add
mov
test
out
cmc
fistpl
shll
stos
loop
test
lahf
pop
cmp
fnstsw
cmpsb
movsb
mov
sbb
mov
cmp
stos
data16
mov
xlat
stos
arpl
sbb
mov
sbbb
testb
rcrb
test
mov
call
les
fisubrs
icebp
ret
aam
ja
xchg
inc
and
mov
mov
fsubrl
pop
into
mov
stos
inc
ja
ja
lahf
ja
mov
sbb
bswap
pop
iret
xchg
and
lds
inc
mov
ret
mov
adc
xchg
mov
xchg
rcl
test
nop
xchg
mov
les
jmp
ret
movsb
pop
cltd
add
push
jne
fildll
shrl
adc
or
cmpsb
or
aam
pushf
or
call
and
lds
fadds
fdivs
mov
dec
adc
stos
fiaddl
lods
adc
aaa
enter
xchg
pop
jmp
inc
aas
adc
bound
daa
inc
lds
adc
ret
aas
lahf
mov
mov
loope
hlt
mov
adc
add
andl
test
push
int3
leave
dec
add
and
stos
popa
dec
mov
ja
pop
decl
setno
add
inc
sub
mov
mov
dec
inc
mov
xor
stos
push
dec
sub
std
cmpsb
ja
mov
int
and
jmp
stos
andl
mov
mov
mov
sahf
aam
cmpsl
inc
aad
jo
frstor
stos
inc
xchg
imul
xchg
xlat
mov
xor
rol
xor
mov
pop
mov
rcrl
rclb
mov
popa
mov
mov
push
daa
popf
xchg
mov
ret
mov
or
inc
mov
aas
jle
mov
dec
push
push
stos
push
sbb
pushf
push
push
aad
in
inc
aas
xchg
mov
hlt
les
mov
movb
mov
xchg
ret
push
or
addl
inc
mov
pop
jne
lcall
sbb
shlb
cwtl
inc
mov
rorb
inc
mov
ror
inc
int
xchg
mov
popf
push
pop
cwtl
mov
stos
adcl
push
int3
xchg
rcrl
pop
lcall
ffree
mov
inc
ffree
dec
stos
sbb
sub
pop
and
xchg
xchg
ja
cmp
cmp
sahf
ret
lcall
pop
adc
int
sahf
lds
inc
leave
mov
push
pop
mov
stos
int3
add
jl
xor
mov
pop
rorb
stos
push
pop
xor
dec
mov
push
mov
cmp
and
lcall
push
movsb
jle
mov
int
jb
mov
xchg
lret
lcall
or
adc
xchg
push
inc
scas
loope
xchg
mov
lds
push
xor
xor
cwtl
test
cmp
adc
sub
in
inc
mov
dec
stos
inc
mov
mov
loop
dec
mov
ja
cmp
mov
ret
popl
push
sarb
sub
push
add
int
pop
das
mov
mov
cmp
stos
xchg
ja
mov
xchg
test
xchg
adc
pop
inc
fwait
and
testb
or
mov
mov
xchg
lods
push
rcrl
push
add
in
inc
mov
popa
jmp
rcrl
aaa
jb
inc
push
xchg
mov
mov
test
mov
test
js
xchg
rcl
mov
add
orb
ret
and
enter
mov
rcl
scas
mov
mov
popf
stos
xchg
ja
mov
shl
int
mov
aam
hlt
test
mov
jo
cli
rolb
jae
xchg
jne
inc
lods
pop
lcall
ret
test
push
sub
nop
in
stos
pop
daa
test
js
sub
rcrb
inc
dec
loop
xchg
aas
cmp
ret
and
mov
inc
adc
cmc
aad
lds
fwait
in
movsb
inc
jns
pushf
fsubr
lret
negb
stos
inc
pop
stos
clc
cmp
lea
es
stos
cmpsl
inc
popf
daa
inc
in
mov
pop
xchg
adc
gs
cmp
inc
add
cwtl
push
ret
xor
xchg
pop
push
xchg
mov
std
enter
push
sahf
div
inc
lods
std
clc
call
xor
xchg
in
inc
and
into
xbegin
popa
ret
lret
push
and
fiaddl
cli
sahf
rcr
cmpsb
inc
cwtl
mov
test
mov
mov
add
mov
cmpsb
adc
mov
or
clc
rcll
mov
lcall
movsl
mov
and
pushf
xor
mov
mov
inc
cltd
push
xor
lahf
xlat
mov
pop
es
lods
lock
mov
enter
mov
lcall
cmp
pop
or
jno
mov
lcall
and
stos
add
nop
push
cmp
ja
xor
ret
cmpsl
and
lods
or
inc
das
shl
jns
mov
nop
jecxz
mov
pop
mov
pop
popl
imul
dec
daa
enter
fidivl
das
ja
dec
sbb
mov
adc
rolb
test
sbb
add
lods
movsl
add
cmp
xor
stc
nop
mov
nop
shll
test
xchg
mov
mov
int
and
mov
cmp
add
jle
lods
incl
int
int3
iret
adc
dec
sbbl
cmp
ja
mov
add
shlb
jle
or
xchg
lods
mov
lcall
mov
aas
push
push
std
scas
data16
les
movsb
xor
xchg
nop
aad
xchg
ret
aad
mov
cld
mov
xchg
bound
push
jbe
movb
xchg
pop
sbb
xchg
lea
cmp
mov
sbb
inc
mov
icebp
xchg
ja
mov
popf
stos
push
add
and
cmp
xchg
dec
xchg
scas
xchg
mov
les
sahf
data16
ret
mov
lcall
daa
scas
movnti
jo
sbb
scas
dec
mov
movsb
pop
pop
fsubrl
fcomps
ret
cmpl
faddp
dec
jg
and
mov
and
lahf
inc
xchg
mov
add
mov
and
dec
mov
fwait
ja
push
sbb
cwtl
pop
ret
mov
dec
stos
lea
ret
lds
dec
mov
stos
xchg
enter
hlt
and
pop
out
gs
loopne
addb
inc
xor
stos
add
cmp
mov
sbb
jecxz
stos
jo
adc
jbe
mov
enter
mov
dec
stos
xchg
mov
bound
in
lods
out
mov
push
aad
in
push
cltd
cwtl
xor
daa
inc
jge
ret
popa
movzbl
stos
xchg
loopne
test
arpl
xchg
inc
mov
xchg
fucomip
push
fstps
icebp
lret
in
add
les
addr16
aas
imul
or
xchg
sbb
push
hlt
cld
push
mov
inc
mov
push
sbb
movl
mov
test
xor
hlt
pop
add
loopne
mov
iret
ret
cltd
stos
fisubl
pushf
ss
mov
add
movsb
pop
imul
mov
std
movsb
and
lahf
inc
mov
stos
push
aad
popf
bound
lds
stos
mov
lods
cmp
adc
incl
stos
add
push
inc
stos
ja
sbb
leave
imul
cmp
inc
mov
stos
loope
jbe
mov
dec
mov
stos
ret
sub
rclb
jg
stc
stos
arpl
cmc
mov
cmpsb
fisttpl
clc
std
and
mov
scas
dec
ffreep
ja
mov
cld
stos
call
xchg
les
aas
mov
xchg
stos
push
sarl
mov
dec
mov
ret
pop
adc
popl
jbe
and
adc
inc
push
mov
mov
in
xchg
and
mov
pusha
mov
mov
cltd
mov
mov
out
jno
lahf
xchg
cwtl
push
adc
lret
cwtl
decl
hlt
fdiv
mov
ja
test
xchg
jg
leave
xchg
hlt
jns
stos
xor
mov
fadds
push
adc
mov
inc
ss
rolb
push
les
loopne
inc
xchg
movsb
mov
push
shrd
inc
int
and
add
pop
std
jns
sbb
shll
pop
sarb
cmpb
pop
add
enter
push
rclb
xor
mov
pop
inc
icebp
mov
stos
push
nop
push
adc
fnstsw
nop
sub
movsl
rclb
lods
mov
cmc
inc
or
xor
add
fisttps
add
jbe
scas
jle
add
jg
add
adcl
and
mov
adc
enter
mov
pop
movsb
test
or
adc
movl
mov
xor
popa
sbb
and
test
cmp
sub
lods
lods
inc
push
shrb
lcall
in
mov
jmp
rolb
stc
inc
cmp
sbb
int
inc
addr16
jne
setbe
pushf
pushf
cwtl
inc
dec
push
and
inc
jns
jp
pop
pusha
out
das
inc
lds
mov
push
and
hlt
cltd
je
pushf
fistl
imul
xchg
aam
mov
mov
popa
lds
jb
mov
rclb
sbb
lea
add
popf
mov
mov
mov
mov
cmpsl
jo
xchg
pop
lods
clc
cli
daa
mov
test
xchg
lds
cld
xor
das
rol
mov
pop
fimuls
xor
orl
and
lods
mov
mov
test
add
lds
jb
movsb
inc
xor
mov
add
add
cltd
lret
pop
cmpsl
mov
test
push
push
stos
sbb
das
mov
jb
mov
les
leave
ja
xor
mov
add
fnsave
out
arpl
mov
lods
js
mov
mov
test
enter
rcll
add
dec
inc
scas
iret
sbb
movsb
pushf
lcall
leave
push
mov
push
aad
dec
inc
cmp
test
mov
fcompl
sbb
xchg
int
mov
inc
jns
mov
lret
roll
std
mov
mov
xor
xor
hlt
pop
ret
add
mov
aam
std
popa
cmpsb
jne
js
mov
inc
mov
push
cltd
mov
jne
dec
mov
jmp
dec
mov
lea
shlb
adc
hlt
xor
lds
out
mov
movsb
shrl
pop
inc
imul
repz
out
xchg
mov
inc
cli
mov
cwtl
into
xchg
es
mov
popf
jbe
mov
push
mov
add
add
lahf
ficoml
clc
mov
hlt
xchg
jbe
ss
ret
jg
aas
sub
cltd
mov
lcall
mov
mov
jne
or
cli
imul
divl
leave
push
out
mov
pop
orb
mov
test
out
push
xor
lods
in
push
lods
ja
stos
mov
cmp
xchg
dec
stc
xchg
mov
mov
aam
movsb
or
movsl
xchg
rorb
jge
dec
fdivrs
lahf
sbb
xchg
inc
enter
jge
out
push
sbb
mov
mov
add
pushf
mov
fisubrl
mov
outsb
les
lds
sbb
movsb
stos
pop
or
xchg
ror
inc
jae
aaa
push
ret
jne
shrb
cmc
jl
hlt
adc
push
adc
xchg
aas
int
jb
xchg
js
into
mov
dec
rcrl
mov
movsb
shl
and
jo
pop
mov
test
cmp
mov
lds
mov
adc
int
push
mov
je
mov
cmc
push
and
cmp
inc
cmp
mov
xchg
push
inc
stos
pusha
pushf
rorl
xchg
mov
rclb
popa
and
cmp
mov
mov
ret
sbb
push
sbb
lret
mov
inc
xchg
aad
std
movsb
ss
hlt
add
cmc
jnp
mov
push
xchg
add
mov
mov
or
push
or
movb
cwtl
sahf
lds
mov
cmp
inc
inc
pop
cld
mov
stos
mov
fnstsw
mov
inc
mov
mov
std
test
ret
add
push
push
mov
in
nop
mov
pop
and
inc
mov
les
leave
loope
mov
push
testl
shrl
mov
jmp
ss
lret
mov
movsl
shrl
inc
test
leave
stc
xor
ret
xchg
xlat
mov
lods
jnp
mov
rolb
lahf
or
movsb
arpl
rorl
add
jbe
rorb
fimull
cmp
xchg
mov
pop
shl
jg
lea
les
xor
mov
mov
fsubrl
push
clc
cmc
mov
call
inc
scas
sbb
sarb
pop
mov
xchg
mov
mov
aaa
imulb
and
mov
and
cmpsl
pop
enter
add
mov
and
pop
pop
add
jne
mov
leave
sbb
mov
dec
inc
enter
xchg
or
ret
sub
add
mov
inc
push
test
xchg
mov
test
mov
add
cltd
add
dec
fistpll
test
mov
lods
hlt
lds
cli
adc
in
cltd
stc
mov
iret
push
and
mov
mov
fcompl
cltd
es
mov
pop
dec
movsb
sarb
adc
mov
mov
iret
mov
and
push
aaa
imul
xchg
ja
arpl
pushf
ja
movsl
mov
hlt
mov
jle
lds
popf
imul
pushf
inc
in
ret
sahf
mov
lods
loopne
mov
mov
dec
cli
les
push
cltd
sbb
rcrb
mov
test
out
jb
rclb
mov
test
xchg
negb
xor
adc
scas
xor
xchg
ds
cmp
push
movsb
mov
push
pop
scas
lods
test
call
lret
adc
sbb
aad
movsl
test
in
int
xor
popf
pop
push
xor
xor
cwtl
imul
stos
arpl
shr
mov
lock
scas
jb
mov
fcoml
enter
inc
les
movsl
mov
push
lods
push
stos
pop
call
rclb
mov
cmpl
sbb
scas
repz
xchg
pop
imul
ja
ljmp
stos
xchg
xchg
mov
shll
nop
adc
lcall
shrl
stos
xlat
in
es
stos
addl
mov
xorb
xor
or
bound
jns
es
in
jb
cmp
cmp
push
outsb
and
jnp
mov
mov
sbb
cmpsl
imul
jne
mov
testb
orl
sbb
mov
ljmp
xchg
in
xor
into
inc
add
mov
sbb
ret
popf
rorb
xchg
mov
ret
pop
test
inc
pop
mov
shll
cmp
mov
test
lods
not
cwtl
rclb
bound
or
mov
incl
imul
xlat
xchg
test
sbb
sbb
fld
cli
idivb
lds
xchg
inc
movsb
add
mov
stos
and
xor
jbe
clc
in
mov
test
ja
jb
jmp
adc
sbb
scas
jbe
test
mov
nop
add
mov
add
xchg
xchg
mov
mov
add
hlt
mov
mov
inc
int
imul
lret
mov
mov
add
inc
sarb
pop
test
daa
adcb
stos
push
std
decl
mov
repz
inc
mov
aad
repz
adc
scas
imul
ja
pandn
enter
shll
mov
imul
les
ficompl
sbb
adc
adcb
inc
mov
mov
add
cltd
pop
addr16
mov
and
xchg
xchg
inc
jo
addb
mov
cmp
popf
lods
hlt
pop
je
adcb
out
inc
clc
or
aaa
adc
movsl
inc
dec
mov
mov
rclb
push
mov
in
xor
mov
push
xchg
push
sbbl
push
sub
cs
les
lea
cmpsb
adc
arpl
mov
jbe
ror
jns
fwait
pop
jnp
pushf
dec
xchg
sub
stos
fldl
push
ret
jecxz
inc
sbb
lcall
cltd
int
inc
push
pop
daa
ret
addl
sub
pushf
ds
in
idivb
xchg
scas
mov
jae
mov
cmp
mov
mov
sahf
mov
push
jo
cmpsb
ja
rcr
dec
mov
ja
mov
cwtl
mov
mov
jg
inc
movsb
mov
mov
mov
arpl
lds
adc
xor
mov
les
stc
ret
xor
das
adc
xchg
clc
les
ret
aad
mov
inc
xchg
fcmovu
xchg
addr16
orb
xchg
xchg
inc
mov
iret
mov
push
sub
in
shrl
jns
pop
push
push
repz
or
inc
int
push
hlt
xchg
cmp
leave
sahf
push
mov
adc
rcr
stos
in
ret
ja
mov
mov
fwait
jns
jbe
mov
xchg
mov
inc
and
pop
pop
cmc
pop
lods
mov
pop
aam
leave
hlt
inc
mov
add
hlt
pop
enter
enter
xchg
lahf
test
pushf
add
addr16
push
mov
mov
stos
push
push
cmpsb
xor
mov
pop
inc
nop
hlt
jns
scas
and
xor
xchg
xchg
jle
jnp
stos
hlt
push
arpl
mov
cmp
jmp
xchg
inc
hlt
cltd
and
add
lcall
or
arpl
mov
hlt
push
adcb
stos
sub
lods
jo
inc
xlat
std
in
sub
ret
sbb
inc
xor
stos
add
pop
hlt
jb
rclb
test
pop
or
sbb
orb
inc
lahf
leave
mov
lods
aam
mov
je
rolb
rclb
jnp
lods
bsf
cmpsb
sahf
xchg
mov
lahf
fcoms
cmpsb
mov
mov
nop
push
dec
lahf
dec
lds
mov
iret
inc
sahf
into
jns
imul
mov
out
mov
loope
lea
mov
daa
mov
pop
add
loopne
or
nop
enter
push
mov
mov
xchg
mov
lea
dec
mov
sub
dec
jmp
loop
daa
test
mov
cmp
outsb
add
popa
and
sbb
jg
movaps
jne
gs
mov
xchg
inc
in
mov
jbe
mov
xchg
popf
lds
test
cwtl
mov
roll
sbb
mov
add
mov
xor
sahf
inc
daa
mov
lahf
inc
mov
lcall
adc
test
test
int
xor
loope
outsb
add
xlat
pop
mov
repz
imul
fists
fstpl
push
mov
aad
sbb
mov
cmp
decl
and
aad
hlt
sbb
in
xchg
xchg
scas
xchg
mov
mov
imul
fdivs
aam
adc
jbe
sarl
imul
in
loop
mov
jg
loope
pop
fwait
inc
lahf
mov
mov
pop
mov
lcall
out
add
or
enter
mov
mov
mov
shrd
add
inc
add
mov
aas
test
stc
mov
loopne
mov
loope
and
sbb
mov
mov
push
add
test
nop
pop
mov
mov
fidivl
in
addb
ljmp
aaa
call
cmp
stc
scas
jo
sbb
ret
roll
cmpsl
mov
adcl
sti
rolb
mov
cld
mov
mov
mov
mov
sarl
sub
leave
hlt
lea
ret
hlt
inc
mov
xchg
stc
jo
adc
test
mov
jmp
jae
mov
popa
push
test
xchg
movsb
ja
popf
mov
adc
sahf
fs
mov
push
mov
mov
adc
mov
les
adcb
mov
inc
push
push
movsl
push
cld
popl
mov
mov
rorl
mov
push
fistpll
cli
repz
cwtl
add
sbb
gs
xchg
dec
cmp
ja
aas
xor
cwtl
mov
les
cltd
aam
lcall
cwtl
cmpsl
inc
movb
test
pop
ret
inc
jae
add
mov
sahf
movsb
jnp
mov
inc
sbb
sarb
pause
popa
push
clc
sub
mov
jne
movb
mov
incb
sarl
cmp
inc
lret
rcrb
sub
dec
lods
pop
mov
mov
dec
ljmp
out
jbe
and
lds
dec
ret
add
mov
scas
dec
mov
adc
lret
arpl
sbb
loope
sbb
pushf
mov
mov
pushf
inc
test
pop
sub
cmp
xor
pop
mov
into
mov
mov
incl
pop
xchg
push
ror
inc
mov
bound
push
cwtl
fisttpl
inc
aas
xchg
int
push
adcb
fwait
ja
and
inc
cli
mov
or
mov
sbb
enter
stc
lcall
xchg
lds
lods
dec
inc
movsl
movsb
lds
mov
inc
das
xchg
sahf
fcmove
mov
jbe
mov
inc
aaa
xchg
repz
ljmp
arpl
sbb
nop
ret
fidivl
daa
imul
inc
mov
mov
fimull
xor
mov
add
aad
cli
aas
loop
mov
cwtl
mov
mov
aaa
lret
hlt
stc
xchg
movsb
sbb
dec
adc
mov
mov
pop
pop
mov
das
mov
loop
leave
pop
lret
jne
movsb
fwait
and
pop
mov
scas
sbb
mov
mov
push
xor
and
popf
mov
ss
sahf
fildl
test
mov
insl
sbb
jp
js
cmpsl
inc
sub
add
fcmovu
mov
and
hlt
fcomps
nop
lret
inc
call
cmp
add
pop
rorl
xchg
mov
imul
xchg
lahf
mov
jae
cmpsl
jle
cmpsb
mov
add
mov
lds
pop
add
pop
inc
pop
test
mov
test
int
pop
stc
scas
pop
push
add
mov
cmp
add
lods
mov
pop
out
or
dec
mov
addr16
fldenv
int
and
popa
imul
scas
dec
push
and
out
scas
and
inc
xchg
mov
xchg
ret
cltd
mov
cmpsb
add
mov
jbe
mov
mov
or
or
mov
lcall
fsubs
or
lahf
ja
leave
xchg
cltd
or
mov
cmp
xchg
ss
mov
mov
push
imul
sbb
stos
std
jno
movsb
mov
push
daa
add
rcrl
pop
sub
ljmp
mov
aas
add
sub
pop
mov
int
rol
sbb
out
xchg
inc
mov
push
or
ret
testb
pop
aaa
xchg
bound
pop
push
popf
pop
push
mov
popf
mov
cltd
sbb
rcl
sub
lcall
daa
mov
mov
das
sahf
movsl
hlt
push
push
mov
sarb
push
sbb
mov
pop
add
mov
faddp
mov
mov
and
mov
das
ret
mov
push
mov
pop
xlat
mov
shlb
fisubl
movsl
sbb
movsl
in
shlb
lcall
xchg
push
sbb
je
push
sub
mov
les
mov
lahf
movsb
data16
push
scas
xchg
adc
mov
adc
loopne
cwtl
push
mov
ja
nop
or
movsb
sbb
sbb
inc
cmc
add
mov
inc
int3
inc
mov
int3
mov
fcomp
xchg
push
jg
call
mov
xchg
mov
add
mov
movsl
cmpsb
dec
sub
mov
fildll
adc
lahf
hlt
inc
out
add
mov
xchg
mov
mov
ljmp
loopne
ret
inc
roll
adc
cmp
add
and
in
ret
nop
sbb
shll
test
add
daa
mov
or
pop
mov
mov
cmpsl
push
adc
inc
mov
add
mov
std
mov
cld
mov
mov
nop
int3
mov
mov
ja
nop
les
fldenv
lret
push
mov
jne
mov
pushf
jnp
cmpsb
cli
jg
push
sti
xorb
rorl
inc
sbb
xchg
dec
and
les
pushf
roll
fdiv
mov
ret
mov
cltd
cmc
mov
sbb
mov
lods
mov
dec
mov
push
les
dec
imul
hlt
mov
es
lds
add
sbb
test
adc
cwtl
add
mov
push
imul
mov
in
mov
jno
inc
pop
xor
mov
rcrl
adc
push
fmuls
mov
inc
sbb
rclb
add
hlt
sbb
daa
shrl
sbb
jns
loopne
lds
test
jl
mov
push
aaa
cwtl
xchg
fbld
add
pop
push
adc
xchg
push
mov
inc
les
xchg
sbb
add
pop
and
mov
add
mov
mov
mov
add
div
mov
mov
inc
pop
rclb
stc
inc
iret
loop
mov
movsb
fildll
jae
mov
lds
push
les
mov
push
pop
inc
repz
sar
add
mov
mov
inc
jmp
mov
xchg
jp
mov
loop
push
mov
inc
xor
mov
and
jae
lods
imul
mov
lret
ja
stos
addl
int
icebp
lods
dec
add
mov
add
mov
lds
pop
and
mov
ja
pop
mov
inc
adc
js
or
xchg
ja
xchg
orb
inc
xchg
mov
movsb
psubw
lds
mov
or
sbb
popa
xlat
mov
ret
adc
sbb
sahf
xor
mov
cmc
add
nop
sbb
mov
and
ja
xchg
pop
mov
push
mov
xchg
mov
dec
inc
repz
add
sahf
movsb
xor
push
lret
inc
movsb
cmc
jecxz
xchg
movsb
mov
mov
mov
add
mov
scas
lods
mov
popf
daa
lods
mov
cmp
nop
ja
ss
and
cmpl
scas
popa
in
sub
jne
out
loopne
rcrb
mov
xchg
cli
xor
mov
sarb
mov
pop
inc
push
cmpsb
divb
sbb
mov
fwait
popa
aas
push
xchg
rcrb
mov
push
push
push
pop
cld
fwait
inc
pushf
pop
mov
push
pop
or
mov
cmpsb
fstpl
cltd
aad
fnstsw
rcl
adc
jne
pop
mov
add
aaa
fiaddl
aas
mov
int
std
mov
test
mov
mov
mov
decl
nop
jne
xchg
lods
mov
xor
mov
clc
mov
aam
fimuls
jae
mov
xchg
and
mov
xchg
mov
dec
xchg
or
xor
ja
mov
pop
mov
inc
enter
mov
test
rorb
stc
fcompl
lret
add
mov
add
bound
mov
push
arpl
mov
sub
and
mov
cmpsl
push
mov
in
iret
pop
xchg
aam
or
fisubrs
xchg
rcr
push
xor
ret
push
add
arpl
sbb
adc
stc
mov
push
mov
push
mov
mov
push
adcb
jle
outsb
mov
sbb
shrb
xlat
mov
mov
mov
int
clc
std
jb
movsl
mull
fnstenv
aaa
popa
cmpsl
lea
xchg
mov
push
pop
ret
xchg
pushf
push
inc
les
adc
cmp
leave
mov
push
pushf
add
roll
in
jns
cltd
or
mov
or
sbb
sbb
lods
add
in
pop
leave
push
lds
mov
mov
cmp
out
stos
jbe
test
or
lea
clc
outsb
mov
xchg
cltd
ret
cwtl
pop
lods
sbb
jmp
das
cmp
lret
mov
xchg
lods
scas
jne
rclb
daa
add
mov
inc
adc
push
pop
xchg
mov
enter
mov
mov
shll
mov
pushf
dec
mov
imul
imul
sahf
idivb
mov
test
add
mov
inc
mov
xchg
mov
or
pushf
ret
mulb
cmpsl
pop
lret
mov
aad
lods
stos
fsubs
das
xchg
jae
xlat
movsl
xor
lods
inc
pop
sbb
hlt
mov
fdivl
xor
xchg
sub
xor
pusha
mov
popa
sbb
pop
jno
mov
xchg
fistpl
pop
xchg
mov
xchg
inc
mov
fdivrs
mov
sbb
sbb
push
test
jne
movsb
movsb
shlb
in
add
ja
lcall
mov
sarb
leave
rclb
mov
cmc
stos
mov
push
push
cwtl
and
retw
stos
imul
mov
sub
popa
cwtl
mov
clc
xchg
push
mov
xchg
inc
jmp
xchg
sti
add
jne
cmp
arpl
insb
xchg
adc
sub
fwait
pop
pop
mov
sub
mov
add
sbb
add
and
hlt
pop
xor
xlat
mov
mov
test
cld
imul
and
lods
jno
movl
lret
stos
mov
out
je
add
in
addb
decb
xchg
adc
aas
cltd
push
mov
scas
mov
pop
pusha
scas
dec
inc
xor
inc
sbb
repz
inc
int
mov
nop
mov
mov
xchg
leave
sbb
stos
xchg
inc
sbb
jns
mov
xchg
inc
mov
push
mov
lods
sbb
lcall
mov
rclw
cmpl
aas
lods
hlt
inc
and
lds
push
xchg
pop
mov
jnp
fistpll
xorl
testb
stos
pop
shrb
pop
or
xchg
xor
aas
push
cmp
pushf
mov
test
pop
mov
mov
lods
pop
lds
jns
mov
cli
popf
xor
cld
aaa
adc
and
data16
loope
lahf
mov
mov
inc
add
popf
pushf
test
sbb
aaa
push
jmp
or
mov
int
inc
aad
push
enter
subb
push
mov
in
inc
mov
inc
mov
sbb
mov
testl
test
ficoml
fcmovnb
sar
stos
jne
xlat
mov
jecxz
jne
movsb
sti
push
push
mov
fimull
push
mov
pop
inc
inc
cwtl
aaa
push
xor
pop
or
lahf
in
aas
mov
sbb
or
stos
rol
and
and
add
xchg
mov
mov
mov
repz
hlt
mov
stos
inc
hlt
cmp
mov
pushf
or
mov
std
movsb
push
fwait
mov
roll
inc
mov
inc
hlt
ljmp
sbbb
jp
aam
mov
aad
fdivr
nop
mov
push
in
pop
popa
in
xchg
add
mov
fildl
xchg
and
addr16
movsl
xor
push
push
push
sbb
stos
or
mov
lea
mov
stos
ret
aam
mov
ret
jne
lcall
cwtl
xchg
ret
fcomp
pushf
xlat
inc
addr16
mov
xor
shll
sarl
xchg
loopne
mov
inc
int
and
daa
test
lods
dec
sbb
lret
sbb
adc
dec
inc
or
pop
iret
mov
adc
adcl
mov
sahf
xchg
pop
rolb
enter
add
lret
adc
pop
add
test
fwait
pop
shlb
lock
pop
rclb
xchg
mov
xchg
stos
mov
movsl
inc
enter
xor
push
push
cmpb
rclb
popf
lods
sbb
mov
sbb
nop
inc
sbb
roll
adc
inc
mov
cltd
inc
inc
movsb
loope
mov
aad
add
xchg
arpl
ror
mov
mov
push
pop
inc
xor
xor
aam
mov
jno
adc
xchg
mov
mov
scas
movsl
cmc
add
xchg
xchg
sub
in
sahf
loope
cmpsb
testb
cli
movsl
pop
stos
xchg
adc
xchg
xor
rol
inc
fmuls
push
mov
lods
dec
lds
xchg
call
inc
test
mov
stos
addl
repz
clc
in
mov
xchg
shll
ret
fwait
sahf
aas
sbb
ja
aad
mov
jle
nop
popf
fldt
aas
inc
fs
lcall
mov
mov
fistpll
rolb
stos
inc
sbb
mov
pop
ret
push
sub
adc
xor
pushf
pop
mov
orb
stos
inc
lret
arpl
sbb
add
popa
sbb
lods
cmc
ret
stos
clc
dec
mov
out
vpackuswb
mov
mov
mov
stos
push
mov
sahf
adc
pop
adc
hlt
sarb
mov
btr
push
xchg
popf
lock
sbb
inc
movsb
in
nop
and
lds
mov
loope
es
popl
mov
lods
push
shrl
mov
mov
mov
xchg
sbb
mov
cmc
mov
aad
stos
inc
mov
ret
les
pop
data16
sahf
cmpl
xchg
cmp
out
mov
xor
test
pop
push
shlb
aas
movsb
push
ss
mov
orl
cmc
stos
popa
sahf
lds
std
fstps
jle
movsl
adc
mov
movsl
data16
xchg
test
fcmovu
mov
in
sbb
dec
arpl
es
pop
mov
cmpsb
mov
lock
push
lea
cltd
mov
fisttps
scas
sbb
mov
cmp
xchg
pop
cmp
outsl
mov
test
pushl
xor
leave
pushf
rorb
imul
cmp
mov
aam
stos
aad
test
mov
inc
dec
mov
ja
cwtl
pop
lret
or
lret
jnp
cwtl
ss
add
test
mov
mov
stos
push
add
sbb
mov
orb
mov
aad
orb
adc
je
adc
nop
into
test
scas
pop
stos
xchg
jmp
mov
xchg
lods
in
xchg
fucomip
stos
mov
jmp
mov
xor
xor
stos
adc
pushf
rorb
add
and
and
hlt
pop
es
or
jne
push
fsubr
sahf
in
inc
jnp
mov
ret
inc
mov
cmpl
aad
add
mov
add
xor
sahf
cwtl
inc
leave
dec
lret
push
jmp
pop
andb
scas
xor
add
int
and
mov
aaa
lods
inc
sub
mov
push
movb
mov
dec
fst
mov
pushf
int
mov
daa
mov
mov
mov
test
mov
push
mov
imul
sbb
rcrb
ja
movsb
push
inc
xchg
mov
aad
adc
mov
dec
lahf
pop
pop
stos
iret
stos
xor
scas
push
xor
lock
mov
pop
stos
sbb
xor
andl
leave
ret
pop
mov
das
add
pop
xor
cmpsb
inc
int
add
in
sbb
pop
adc
mov
pushf
sub
shlb
cmp
inc
pop
aaa
push
pop
test
mov
loopne
lahf
outsb
call
xor
pop
pop
cmpsb
xchg
movsl
pop
rcll
aam
lret
jp
movsb
xor
cwtl
and
pop
inc
mov
fbld
pop
shll
daa
mov
push
or
or
xchg
xchg
shrl
mov
cmp
fsts
aas
std
iret
cmp
test
pushf
ja
fwait
shl
xchg
fdivrs
push
les
mov
xchg
stos
lea
jne
mov
mov
jnp
leave
cmp
cmp
sbb
sbb
and
fwait
lcall
push
mov
xor
addb
subb
cmpsb
cmpsl
inc
lret
in
xchg
mov
xor
or
dec
mov
or
lock
cmp
cmp
sarl
imull
cltd
int
popa
rclb
ror
mov
sub
in
mov
push
mov
popa
outsb
mov
dec
mov
xchg
fidivl
mov
sub
cltd
jne
in
pop
bound
mov
push
arpl
xchg
add
daa
mov
nop
adc
cmpsl
int3
fists
adc
push
jae
movb
push
popf
shrl
jae
ja
ficoml
mov
mov
push
or
jnp
mov
mov
dec
xchg
inc
sahf
xchg
adcl
inc
inc
not
sbb
mov
rclb
push
or
in
xor
mov
out
repnz
mov
lds
sti
lds
xchg
push
icebp
lret
fwait
les
mov
pop
inc
pushf
fldl
xchg
jle
fsubs
or
sbb
adc
inc
hlt
test
movsl
push
orl
stos
in
test
mov
call
mov
mov
cmpsl
js
ret
inc
aas
mov
lds
inc
mov
aaa
loopne
stos
or
xlat
cmp
mov
iret
mov
cmpsb
pop
inc
xchg
sbb
test
sbb
int
and
loopne
dec
mov
ret
and
ja
enter
cld
adcb
push
push
mov
adc
mov
add
xchg
dec
xchg
ja
or
movsb
mov
roll
enter
mov
sar
aas
cwtl
pop
xchg
arpl
add
mov
push
inc
pushl
jmp
shlb
std
cmpsb
push
mov
mov
push
add
nop
stc
inc
iret
cwtl
sub
adc
enter
rcrb
je
sbb
cmp
ja
mov
loope
jae
lcall
xor
int
cmp
mov
stc
xor
add
lds
pop
test
hlt
add
cmpsl
mov
pushf
pop
add
mov
test
movzwl
addr16
test
int3
mov
addr16
inc
pop
mov
xchg
sbb
cltd
movsb
mov
shll
sub
shll
adc
mov
notb
leave
inc
in
jae
popf
inc
dec
mov
decl
cld
cltd
push
xor
inc
mov
dec
xchg
cld
ja
xchg
outsb
mov
xchg
scas
inc
adc
mov
or
mov
add
lods
pop
mov
push
inc
mov
sahf
mov
test
add
sarw
jne
lahf
clc
aad
aad
cli
out
fldcw
mov
push
and
mov
mov
or
imul
cwtl
aad
mov
int
in
leave
adc
mov
and
dec
mov
mov
xchg
int
arpl
mov
mov
mov
pop
sbb
push
lods
aaa
add
inc
mov
hlt
add
mov
xchg
stos
cwtl
dec
mov
loop
xchg
cmp
inc
lods
mov
lods
or
or
sbb
inc
push
push
pushl
orb
mov
bound
xchg
mov
movsl
push
adc
idivl
inc
push
inc
fidivrl
fldl
sbb
popf
or
stc
mov
mov
in
les
pop
hlt
lds
sbb
dec
mov
sub
lds
lea
mov
stos
cli
je
mov
inc
inc
shlb
nop
arpl
lds
sub
push
dec
lcall
jbe
xchg
jnp
adc
movsb
movsb
mov
clc
push
popf
in
test
popf
xor
rclb
cwtl
mov
mov
add
pop
pushf
hlt
xchg
dec
mov
mov
or
lcall
ja
xchg
mov
stos
popf
mov
and
popf
and
fstps
jle
fidivrl
fwait
cwtl
push
mov
rol
pop
add
in
mov
shll
add
cmpb
cmp
inc
stos
jns
xchg
ficomps
mov
mov
push
aam
jnp,pt
xchg
push
sarl
mov
lea
xchg
jne
movsl
jne
mov
dec
add
mov
popf
ja
mov
test
loopne
stos
int3
jo
pop
imul
xor
push
hlt
mov
dec
xchg
pop
xchg
mov
lds
pop
add
add
fnstenv
xchg
mov
mov
add
lahf
mov
decl
iret
mov
loop
sahf
pop
les
stos
sarb
pop
jnp
test
std
loop
mov
cli
dec
ret
rcl
xchg
mov
lock
mov
pop
cwtl
add
sbb
ja
movsb
adc
jbe
mov
popa
and
lock
aam
jns
fwait
sbb
in
lods
adc
adcl
adc
ja
cld
mov
in
xchg
pop
or
cwtl
ret
add
fsub
mov
inc
jl
jmp
mov
cmpsl
mov
inc
arpl
adc
lcall
cwtl
dec
rcll
or
movsb
xchg
mov
movsl
dec
xor
mov
cmpl
ret
inc
jbe
mov
inc
js
mov
inc
xchg
std
xchg
andb
xchg
jnp
mov
cwtl
mov
mov
leave
mov
or
jl
cmc
xchg
inc
scas
add
nop
pop
mov
mov
xchg
jns
lods
xor
xchg
pop
lds
pop
pushf
movsb
flds
mov
test
adc
ja
xchg
nop
movl
or
stos
shlb
stos
fcomip
jb
lds
mov
xor
lods
std
sbbb
inc
add
add
pop
xor
rcll
dec
pop
and
fldl
adc
js
xchg
mov
lcall
lea
into
mov
add
les
stos
das
leave
lds
fimull
and
mov
push
or
add
loopne
pop
popf
xchg
mov
ret
mov
shrl
mov
jns
xor
mov
lcall
pop
sarl
sbb
adc
daa
mov
mov
idivb
mov
mov
sub
xchg
sbb
rorb
inc
inc
daa
stos
ud1
lea
mov
rclb
xchg
xchg
jbe
adc
sbb
xchg
lods
jns
mov
xchg
push
sbb
lahf
rclb
xchg
mov
cltd
mov
enter
adc
nop
jbe
xchg
push
or
adc
ja
ret
sbb
lds
adc
jle
jmp
pushf
and
xlat
stos
clc
jne
cltd
push
sahf
movsl
sbb
std
mov
or
lcall
jne
movsb
mov
inc
lcall
hlt
cwtl
stos
mulb
scas
fcomps
test
cmpsb
movsb
pop
test
xchg
aas
mov
iret
pushf
xor
mov
sub
mov
inc
les
adcb
popf
pop
subl
pop
add
mov
push
and
cmp
mov
pushf
pop
inc
xchg
ja
push
loopne
rcll
sbb
js
pop
mov
es
pop
jbe
ja
stc
shl
mov
inc
jmp
mov
jb
xchg
rolb
cmpsl
cmp
shlb
repz
fistl
scas
mov
mov
add
test
shr
scas
sbb
fisubrl
scas
daa
lahf
pop
or
dec
lods
dec
xchg
leave
mov
fsubrl
jno
jbe
sbb
sub
loope
cmc
mov
push
subb
pusha
xchg
arpl
rclb
adc
push
xchg
mov
mov
adc
cmp
mov
aaa
push
jne
ds
mov
mov
mov
dec
xor
jge
jg
icebp
nop
aad
adcl
aad
cmp
cmp
mov
add
jmp
cmp
mov
sub
std
inc
ret
ret
shrl
sarl
or
lods
lahf
sbb
and
je
mov
lahf
cmp
lods
dec
jecxz
or
scas
lods
mov
or
scas
lea
scas
mov
mov
scas
movl
lret
fwait
paddsb
mov
pop
fistps
shrl
js
nop
aas
incb
jl
sub
out
fcoms
pop
lds
add
stos
mov
mov
mov
cmp
aaa
notl
ret
push
ds
jle
sub
push
mov
test
mov
sbb
mov
fdivl
or
shlb
popa
add
out
cmpsl
mov
test
scas
push
stos
adc
mull
iret
shlb
pop
jno
xchg
orb
jns
xchg
adc
push
xchg
xchg
cmpsl
xchg
insl
roll
xchg
cld
mov
faddl
inc
jmp
lods
mov
in
dec
lock
lods
scas
sub
mov
lods
fidivrl
lahf
cmpsl
push
mov
cmp
jbe
fsubl
push
sub
cld
jecxz
in
jl
insb
test
jecxz
fsubrp
mov
mov
outsb
add
xchg
daa
subb
arpl
fstpl
sbb
or
sbb
inc
xchg
xor
adc
cmp
mov
sarb
and
add
mov
cmp
lahf
xchg
mov
mov
xlat
cmc
das
pusha
mov
mov
movsl
jge
mov
mov
mov
push
mov
int3
or
aaa
add
rol
jg
out
ds
out
nop
and
xor
add
and
aaa
shld
lock
push
jb
sub
xor
mov
shl
mov
iret
cld
pushf
mov
das
fs
mov
push
push
das
mov
repnz
push
sub
shlb
and
and
rcl
pop
clc
cmp
outsl
roll
sar
or
int
or
jo
xor
sbb
xchg
mov
cmc
mov
sub
cld
add
les
ljmp
int3
xchg
lahf
insb
pushf
push
sbb
in
or
fcompl
and
cmpsl
out
cmpsl
push
int
aad
xlat
or
adc
cmp
outsl
rolb
fwait
stos
hlt
aaa
mov
or
in
rcll
idivb
pop
mov
mov
test
ljmp
jmp
loopne
mov
and
sub
loop
jle
sbb
lods
fmulp
lods
xchg
dec
lods
mov
lods
jge
lods
pop
or
push
into
lods
dec
lods
out
pop
lods
and
lods
shrl
mov
stc
mov
les
add
mov
cmp
in
lahf
scas
lret
fsubs
js
sub
lods
in
lods
icebp
lods
out
cmpsl
jo
xor
inc
lods
lret
dec
out
in
sub
xor
scas
lods
and
lods
jnp
lods
sbb
adc
cmpsl
out
ljmp
stc
jns
cmpl
or
movsl
addr16
mov
mov
mov
xchg
mov
jg
hlt
lahf
inc
rep
insl
iret
push
cmp
rolb
xor
movsb
addr16
pusha
mov
in
jo
aas
pushf
push
in
leave
loop
inc
add
pop
xor
xor
popa
sub
ss
gs
fs
es
jecxz
dec
sub
and
arpl
pop
loopne
mov
xor
shll
inc
and
pop
loopne
imul
jno
sub
fwait
inc
cmpsb
cmpsl
mov
mov
ja
repnz
in
jecxz
insb
mov
ljmp
lock
lcall
jns
insl
popl
mov
mov
nop
ss
sbb
sub
cwtl
nop
cmp
push
mov
jg
imull
push
imull
lods
mov
daa
sub
inc
jl
pusha
adc
scas
xchg
or
dec
mov
push
sub
push
jge
pop
cld
xchg
mov
sub
jae
ret
push
aad
sahf
lods
aaa
cs
rcll
cmp
mov
outsl
pop
jns
lsl
mov
inc
push
rclb
shll
sub
cmpl
rcll
mov
cmp
sub
inc
mov
es
mov
cmp
add
cmp
adc
xlat
add
lods
das
mov
std
xlat
cmp
iret
jg
sbb
pop
out
rclb
inc
mov
xchg
jp
sbb
int3
icebp
push
adc
aaa
jb
jle
sbb
sbb
pop
lods
adc
sub
xchg
roll
js
mov
test
sub
sbb
push
adc
dec
sbb
icebp
pop
xchg
adc
aaa
sbb
mov
repz
mov
repnz
scas
mov
sarb
jnp
mov
mov
std
inc
xchg
mov
mov
xchg
adc
sbb
add
mov
jnp
mov
mov
sub
sarl
mov
xchg
in
jns
bound
cli
scas
sti
rcrb
mov
test
mov
xchg
mov
push
adc
mov
add
je
push
repnz
jge
leave
cmp
rcrl
xor
mov
iret
mov
stc
stc
jmp
sar
mov
push
les
mov
mov
sarb
adc
rcl
add
mov
enter
je
imul
cmp
xchg
adc
daa
mov
cld
hlt
cli
mov
mov
xchg
cmpsb
jecxz
mov
ljmp
pop
jb
es
push
scas
mov
mov
cmpsb
jo
in
xor
fcomp
icebp
sti
int3
adc
mov
push
fwait
rcrb
out
dec
mov
dec
movsb
sub
es
loopne
inc
loope
adc
pop
dec
es
add
sbb
hlt
mov
test
push
cmpsb
loopne
out
daa
movsb
in
dec
and
ret
adc
xor
imull
es
push
mov
cmc
jle
pushf
push
mov
ljmp
mov
insb
push
test
repnz
ss
and
xor
cs
pop
sub
xor
push
pop
cmp
xchg
jecxz
sahf
inc
and
shl
sbb
xor
fisttpll
loop
inc
lret
and
pop
mov
out
pop
xchg
pop
addr16
sbb
xor
fsubrl
arpl
or
gs
inc
frstor
mov
fstpl
out
es
movsb
cmp
pop
dec
shll
pop
sbb
out
adc
xor
icebp
scas
mov
pop
add
sbb
shrb
out
cli
faddl
cwtl
inc
sahf
test
pusha
stos
jo
lock
icebp
insb
fistpl
pop
pushf
fcompl
dec
lock
loopne
xchg
mov
pop
cmp
mov
int
pop
in
sub
xor
dec
aas
jns
adc
or
push
daa
cmpsb
stos
shrl
jecxz
shl
and
mov
mov
pop
adc
out
dec
popa
push
jo
rcrl
mov
loop
mov
mov
inc
cmp
int
filds
fistpl
popf
sti
in
movsb
cmpsb
pop
ss
or
arpl
in
sahf
pop
fistl
sub
out
sbb
dec
fsubp
xor
cmpsb
mov
addb
out
pop
insl
sub
xchg
fisubs
cmp
loope
pop
push
imul
scas
popa
movsb
lock
loopne
sub
sbb
and
addr16
movsb
or
fidivrs
ret
ficomps
mov
lahf
jecxz
mov
imull
inc
and
mov
movsl
xor
or
mov
aaa
pushf
clc
lret
outsb
fstl
fsts
jbe
mov
out
dec
mov
fucomi
fs
pop
inc
jle
fstpt
movsl
enter
js
xchg
inc
push
scas
cmp
pop
or
int3
push
xor
mov
int
and
pushf
cmpsb
repnz
fldt
gs
out
data16
lahf
fisubrs
sbb
das
pop
xor
lcall
rcrl
enter
icebp
push
xchg
push
and
pushf
inc
notb
jo
gs
jg
lahf
pop
shll
fildll
sbb
sbb
das
inc
inc
call
pusha
movsl
cmpsl
cli
out
sub
hlt
in
test
sub
rclb
xchg
out
xor
xchg
loop
dec
cmc
mov
in
test
cltd
lahf
out
sbb
and
push
lods
and
push
pop
enterw
inc
and
loope
pop
lock
jno
das
fcomp
inc
hlt
cmp
jl
mov
push
mov
mov
and
jecxz
and
fistpl
pop
mov
movsl
xor
mov
mov
out
push
mov
shlb
inc
xor
mov
push
popf
pop
xchg
pop
push
cmc
push
das
jne
add
sbb
mov
mov
bnd
into
in
sub
test
cmp
stos
jbe
sub
pusha
gs
sub
mov
popf
jae
repz
mov
and
mov
mov
pop
mov
popf
fiaddl
sbb
sbb
icebp
mov
sbb
movsb
sarl
xor
pushf
jb
int
daa
jo
mov
scas
pop
je
mov
hlt
xor
repz
lods
mov
popf
sub
jmp
lea
add
xor
pushf
mov
inc
mov
popf
inc
pop
jp
lahf
mov
jecxz
mov
fbstp
xor
fsubl
sbb
pop
popf
popf
pop
fnsave
sbb
fisubs
push
mov
popf
xchg
pop
xlat
xor
pushf
pop
cwtl
int
daa
sbb
xor
pushf
pop
lcall
popf
mov
fs
movsb
mov
popf
and
xor
mov
int
daa
xor
xor
pushf
das
test
daa
mov
mov
hlt
pop
call
scas
int
daa
cs
popf
cmpsl
shll
add
add
inc
mov
lcall
pushf
insb
lods
int
imul
fldl
test
xchg
xor
aas
daa
cmp
xor
jge
int
daa
cmp
pop
xor
pushf
jg
int
daa
aaa
mov
popf
mov
pushf
jns
int
daa
cmp
xor
pushf
jnp
int
daa
inc
mov
popf
les
sti
cmpsl
push
sbb
or
imul
jmp
push
jle
cmp
into
sub
packssdw
and
sub
xorl
lods
pop
xor
imul
out
xor
mov
xor
mov
test
sub
std
in
mov
scas
mov
out
mov
das
mov
jo
add
fwait
mov
movsb
lock
lods
aad
lods
fbstp
jmp
in
in
inc
jb
cmp
pop
xor
xor
fcmovne
in
mov
sbb
pushf
mov
fdivl
popf
pushf
cmp
fstl
pop
mov
sahf
jp
mov
dec
jp
mov
pop
and
scas
xlat
lods
sbbl
fsubr
imul
in
or
xchg
cltd
lods
scas
mov
pop
insb
ret
xchg
lcall
cmpsl
in
xchg
pop
cmpsl
mov
cmpsl
in
dec
and
movsb
xor
sbb
inc
adc
das
cmpsb
in
in
adc
xor
es
lahf
test
mov
mov
mov
in
iret
and
mov
sub
lret
xchg
iret
jmp
mov
xlat
in
shll
jmp
arpl
sbb
mov
mov
dec
and
in
lcall
in
fimuls
rcrb
add
mov
lods
xor
sub
add
fwait
dec
imul
mov
adc
and
enter
fwait
dec
push
fwait
dec
push
fwait
mov
or
fwait
dec
sbb
add
loope
cmpsl
mov
cmpsl
ja
cmpsl
jb
lahf
fwait
push
mov
lods
fst
lods
outsb
adc
push
lods
xlat
xchg
out
push
leave
push
lods
and
cmc
out
cmpsl
push
iret
cmpsl
lret
xcrypt-ctr
cmpsl
pop
push
cmpsl
call
aad
mov
xchg
pushf
push
dec
fwait
rcll
sub
cmp
lods
jge
pop
dec
sub
lods
push
out
sbb
je
or
lds
notb
fsubrl
movsb
sub
pop
imul
call
fisttps
mov
scas
sbb
jmp
mov
fwait
in
leave
sbb
scas
mov
mov
call
jmp
lods
hlt
add
mov
inc
loop
lcall
adc
add
not
daa
cltd
mov
popf
and
andb
out
movsl
in
movsb
hlt
sbb
mov
mov
int
ficoml
test
imull
lret
lods
ret
adc
rorl
or
push
mov
ret
inc
std
lret
xor
xlat
pop
jno
mov
mov
aam
push
mov
repz
les
xchg
cmp
fs
mov
cli
inc
pop
in
fwait
and
pushf
ret
add
dec
mov
mov
popf
decl
add
por
mov
and
add
ljmp
inc
or
cmp
push
or
or
gs
pushf
sbb
xchg
imul
mov
push
mov
jl
aad
stc
es
andb
sti
adc
daa
jnp
shlb
imul
stos
rolb
jl
decl
imul
mov
cmpb
mov
orb
mov
lods
das
addb
sub
and
loope
pop
pop
inc
mov
stc
mov
inc
fnstenv
rcll
push
pop
lods
shrl
inc
xchg
dec
mov
ror
cmc
enter
inc
in
addl
sbb
movsl
jecxz
push
ret
mov
lods
ficoml
jp
mov
xchg
sbb
andb
add
push
mov
dec
inc
popa
mov
cmc
push
or
enter
ror
and
jp
mov
lods
jg
imul
xchg
mov
das
inc
iret
xchg
sub
sbb
mov
add
mov
adc
cwtl
cmp
filds
stos
popa
add
lcall
sub
push
jg
test
jbe
ret
and
mov
xchg
inc
mov
dec
das
mov
pop
cmp
xlat
xchg
clc
adc
mov
adc
rcll
aad
sbb
hlt
jmp
pushf
fistpll
cmpsb
les
mov
hlt
pop
or
mov
cld
movsb
sahf
or
mov
cmp
pop
add
xorb
add
xchg
das
sbbb
or
pushf
mov
ror
fwait
pop
faddp
leave
push
daa
ret
rorl
push
rorb
shll
pusha
sarl
push
xchg
std
add
mov
stc
aad
push
sbb
fbstp
ja
iret
mov
jle
push
lods
add
fdivr
shl
and
test
scas
xor
mov
inc
push
xlat
xchg
push
lret
adcb
popa
mov
sbb
fcmovb
xchg
loop
inc
pop
and
xchg
xchg
jecxz
enter
xor
test
idiv
enter
ss
popa
push
sbb
pushf
incl
push
rorb
cltd
sbbb
sub
cld
scas
inc
movsb
ror
dec
lcall
pushf
xlat
shlb
stos
lcall
xchg
aad
adc
lods
rcrl
push
orb
rorl
inc
stc
mov
pop
inc
lods
inc
cwtl
cwtl
mov
stos
inc
sbb
xchg
sbb
dec
lahf
nop
lods
imul
xor
xchg
arpl
ret
lods
mov
inc
shrl
dec
sahf
cmp
mov
xchg
rolb
jnp
adc
xchg
pop
retw
stos
ja
faddp
add
mov
mov
mov
movsl
cli
int
int
test
sbb
push
hlt
pusha
stos
cmp
ret
mov
outsl
nop
cmovo
mov
and
cltd
inc
mov
testb
loope
adc
mov
mov
popf
mov
add
movsl
test
stos
clc
aam
ret
mov
enter
leave
or
xchg
ret
fmull
cmpsb
test
aaa
test
mov
jns
mov
ret
cltd
add
xchg
ret
mov
inc
addr16
jnp
jge
add
mov
sub
jp
aad
imul
movl
shufps
faddp
nop
ret
ret
in
cmpsb
and
nop
gs
inc
sbb
dec
ret
xor
iret
setno
mov
cltd
ret
xchg
cmp
cmpsb
stos
push
loop
jg
ja
shrb
push
adc
ret
xchg
cmp
out
xchg
loop
xorb
shl
loope
outsb
push
fwait
lods
jecxz
inc
inc
subb
dec
or
shlb
std
adc
les
add
ret
mov
call
push
mov
movsl
inc
inc
imul
pop
roll
xorl
or
xchg
roll
xchg
xorl
mov
test
mov
lods
test
cmp
push
lcall
push
loop
mov
mov
das
lods
cmpb
lahf
and
adc
test
andb
stos
jnp
adc
jle
leave
lcall
imul
sar
inc
and
cwtl
outsl
push
push
inc
add
adc
cmp
and
mov
scas
int
jge
inc
hlt
andb
mov
add
leave
in
mov
das
stos
xorl
rclb
xchg
scas
nop
inc
sub
lcall
cmp
xchg
stos
loopne
fdivs
test
lods
aas
adc
jle
mov
or
scas
inc
cmp
xchg
stos
inc
add
inc
jp
movsl
inc
movsb
pop
add
pop
lods
cmp
xchg
sbb
ja
push
xchg
shlb
mov
ret
loop
jle
aas
add
lret
add
push
mov
push
add
mov
or
cmp
mov
in
testl
cli
jne
and
push
mov
xor
andb
stos
pop
pop
movsb
je
loope
daa
data16
mov
mov
sbbl
lcall
push
dec
nop
fdivs
int
push
jno
roll
sarb
sbb
cwtl
adcl
inc
sbb
int
lcall
mov
pop
mov
inc
adc
dec
mov
jecxz
cli
dec
mov
lods
clc
dec
movsb
lods
inc
je
loope
daa
or
xchg
sbb
add
mov
xlat
mov
bound
xchg
in
lods
and
mov
or
mov
rclb
mov
popa
shr
xchg
pop
jb
scas
lret
xor
xchg
stos
popa
lahf
andb
lahf
scas
dec
mov
btr
fwait
pop
xchg
scas
push
jnp
add
fists
testl
sbb
lods
jns
pop
imul
mov
mov
popf
ret
dec
xlat
negl
dec
mov
xor
lahf
adc
sahf
adc
lods
popa
imul
gs
fistl
pop
or
lds
cld
xchg
aas
mov
bound
pop
fldcw
nop
push
xor
pushf
aam
pop
ret
inc
cmc
mov
aaa
subl
ret
mov
xchg
ret
lcall
add
popa
xchg
andb
xor
gs
movsb
pop
inc
dec
lods
cmp
pop
pop
shlb
mov
ret
mov
mov
loopne
ret
xor
sti
lret
ja
leave
addr16
mov
adc
roll
gs
loop
lds
xchg
inc
into
icebp
jae
mov
lcall
add
ret
dec
mov
fsts
std
dec
fldcw
ret
push
and
sub
roll
pop
hlt
fists
mov
mov
cld
xlat
xchg
scas
xchg
addr16
aaa
jmp
adc
mov
mov
cltd
les
cmpsl
mov
enter
xchg
cld
mov
mov
push
addr16
add
jmp
dec
data16
lods
push
mov
mov
bnd
xchg
sub
cmp
push
cwtl
push
jbe
mov
xor
andb
lods
pop
mov
mov
pop
stos
adc
sbb
jae
int
lret
add
pop
mov
loop
jl
xchg
stos
pop
cmp
mov
pop
cmp
lods
push
mov
inc
inc
add
mov
and
xchg
loopne
xor
xchg
mov
movsl
xor
les
aad
aaa
sahf
mov
mov
sbb
jecxz
sarl
jns
outsb
ret
lahf
sbb
mov
les
aas
test
sbb
mov
les
mov
sbb
imul
or
xlat
mov
mov
adc
lods
cmp
fsubrs
push
xor
adc
pop
test
inc
mov
jne
or
mov
mov
xor
stos
pop
and
mov
jnp
jg
mov
pop
jg
lahf
dec
mov
stos
ret
adc
adc
pop
cmp
test
xchg
in
inc
pop
add
dec
std
lea
addr16
push
lret
scas
ret
enter
adcl
mov
ret
inc
pushf
sbb
sub
add
daa
and
jne
xchg
lret
mov
stos
push
repz
stos
inc
hlt
pop
sahf
mov
imul
jp
xchg
xchg
pushf
in
leavew
mov
ljmp
fidivl
and
test
outsb
push
jb
mov
mov
fistpll
lds
lods
xchg
test
inc
fimull
mov
push
ljmp
es
inc
arpl
sbb
ud1
cmpsb
mov
mov
pop
mov
ret
mov
cmpsl
ret
mov
pop
jae
xor
push
xor
stos
pop
add
cmp
test
arpl
mov
dec
or
xchg
cmp
pop
mov
cmpsb
adc
rcr
mov
mov
loop
jle
xor
ret
pop
pop
jp
mov
push
xchg
mov
or
fisubrl
ret
xor
xchg
and
fsts
enter
mov
sbb
xor
ljmp
xchg
loope
jmp
into
inc
arpl
flds
aaa
popa
jno
aam
cmpsb
inc
mov
pusha
mov
cmpsl
hlt
fcmovbe
mov
pushl
mov
mov
inc
std
add
mov
xor
lock
fld
aam
ret
push
mov
xor
add
mov
andb
jbe
stos
xchg
fmuls
js
mov
pop
jmp
lea
push
push
lds
inc
inc
cltd
adc
loope
mov
xchg
fldcw
push
js
mov
ret
movsl
mov
sbbb
lcall
add
movb
mov
pop
rcrb
cmp
push
jbe
les
mov
pop
adc
sarb
je
mov
pop
in
ret
mov
aam
cmpsb
das
andb
mov
mov
in
push
xor
cmp
mov
movsb
stos
push
roll
inc
lods
or
ss
mov
pusha
aaa
scas
sbb
les
inc
cwtl
shll
lea
lods
push
add
cwtl
testb
aam
mov
inc
stc
mov
mov
or
push
cmp
push
xchg
sbbb
xchg
nop
push
xor
lahf
bound
lea
scas
xlat
jae
leave
sbb
sbb
test
sbb
lds
and
xchg
or
iret
mov
jbe
mov
mov
sub
sbb
fadds
jae
dec
pop
cli
jbe
jle
js
daa
add
and
pop
lods
sbb
cltd
and
in
arpl
xlat
in
inc
jns
cltd
aas
push
fisttps
inc
inc
dec
repnz
cmp
cmpsl
and
ret
aas
sahf
pop
cwtl
ret
loope
xor
mov
shl
lcall
inc
cld
ret
ret
adc
shll
xor
xchg
jb
cltd
fsub
stos
loop
aad
xchg
add
aaa
mov
mov
push
mov
in
aad
mov
aas
mov
jnp
cmp
rorl
xchg
mov
push
rcr
lea
stos
aas
inc
fmuls
fsubrs
mov
mov
aad
idivb
sahf
cwtl
pop
add
mov
dec
test
ffreep
lcall
mov
stos
dec
loope
mov
push
cmp
push
jb
enter
and
cwtl
mov
sahf
pushf
notl
mov
jbe
mov
sbb
lods
pop
fsub
add
xchg
inc
enter
gs
ret
enter
ret
add
bound
js
nop
and
lcall
insb
dec
addl
in
mov
ds
mov
ret
inc
xchg
fdivrs
repz
cmpsl
out
xor
sbb
enter
leave
pop
fprem1
sbb
loopne
scas
fidivl
mov
ret
jg
in
inc
lods
inc
inc
adc
inc
dec
lods
sub
inc
icebp
and
in
mov
xchg
xlat
lods
andb
test
mov
jp
jnp
mov
fisttpll
in
and
jecxz
fistps
xchg
mov
xorl
pop
mov
jmp
ret
aad
idivb
mov
add
and
pop
dec
rcrl
and
push
jl
inc
jbe
nop
inc
inc
mov
dec
sarl
pop
ret
push
dec
sbb
jbe
roll
loop
mov
jle
mov
add
les
lods
inc
es
inc
jae
mov
popaw
std
ret
pop
xor
add
adc
subl
in
adc
out
xchg
add
loop
add
aad
xchg
dec
mov
mov
adc
test
adc
les
jo
mov
jecxz
add
daa
cltd
mov
push
mov
lcall
in
andb
clc
pop
cltd
mov
loopne
lods
imul
sub
add
fwait
sbb
inc
push
jle
sbb
enter
movsb
jle
repnz
pop
dec
inc
sahf
lds
lods
mov
pop
cmp
sbb
loopne
xchg
int3
and
popl
sarb
test
inc
mov
clc
cmp
xchg
mov
mov
dec
xchg
int
xlat
leave
push
cwtl
mov
dec
sar
inc
call
xchg
add
mov
lods
adcl
dec
lahf
lret
clc
sub
inc
dec
stc
lea
push
xchg
xchg
and
ret
insl
mov
leave
xchg
ljmp
test
arpl
les
cwtl
and
add
dec
mov
jne
imul
inc
jl
mov
xor
dec
scas
fadds
lret
and
addr16
mov
ret
iret
push
mov
pop
movsb
ja
mov
or
movsl
fiaddl
lcall
in
cwtl
arpl
fstps
test
pop
out
mov
xor
popf
cmp
mov
lcall
mov
test
sbbb
mov
push
pop
lcall
or
lcall
fisttps
push
std
or
cmp
lea
clc
rol
aam
in
mov
cmpsb
mov
pop
push
add
cmpsl
sbb
push
pop
les
push
mov
cbtw
test
pop
movsl
mov
call
add
sbbb
dec
mov
mov
daa
inc
add
inc
xlat
inc
cmpsb
arpl
xchg
mov
mov
fisubrl
push
mov
cli
data16
rclb
inc
adc
or
stos
pop
imul
pop
jno
negl
leavew
pop
mov
push
xor
pop
xchg
test
add
rcll
cld
andb
jg
aad
pop
cmp
jle
or
lods
cld
addl
dec
dec
lods
jle
divl
mov
jle
sarb
mov
cmp
mov
rol
jns
mov
add
mov
xchg
sbbb
or
xchg
les
jne
test
popa
xor
xchg
fmuls
mov
lods
mov
std
popa
ja
mov
mov
push
shl
mov
inc
fsts
mov
xor
inc
andb
push
cmp
test
jle
aam
add
pop
jg
cmpsl
cmp
mov
add
enter
lods
ficoml
lahf
fcompl
lods
shlb
jne
shll
mov
ret
push
mov
mov
jnp
xchg
lcall
cmpsl
out
cmpsb
adc
test
stos
popa
and
xchg
mov
push
dec
lds
and
sbb
flds
pop
dec
adc
ja
mov
adc
inc
mov
adc
enter
movb
sbb
test
inc
cmp
mov
aad
cmp
push
xchg
outsb
orb
xchg
aas
pop
jp
cwtl
loop
or
dec
mov
imul
aas
sti
shlb
mov
mov
in
dec
lret
sbb
or
mov
push
jne
inc
pop
push
lods
test
push
xorb
adc
or
ret
push
test
js
cwtl
pop
xchg
movl
inc
pop
sarb
popf
clc
jne
lods
mov
xor
std
and
movsl
sbbb
adc
add
ret
jle
hlt
xor
ffree
test
sti
aas
les
inc
jae
jle
loope
and
mov
cwtl
les
scas
and
cld
mov
sarb
cmp
inc
arpl
mov
pop
mov
mov
aam
mov
ja
int
sbb
lods
test
mov
mov
inc
dec
mov
shll
xchg
hlt
jecxz
stos
lcall
lods
fidivrl
pop
jb
inc
rcrl
add
movsb
nop
cmp
mov
lcall
add
ret
mov
inc
dec
pop
pop
lahf
mov
xchg
push
cltd
mov
mov
dec
mov
orl
inc
pop
enter
push
bound
adc
test
mov
lcall
les
push
cmpsb
fistpll
js
dec
mov
dec
mov
xchg
addb
mov
aad
rol
shlb
mov
vsqrtps
mov
lods
sbb
mov
les
ret
inc
rorb
clc
jg
mov
hlt
shlb
shl
test
in
mov
arpl
and
inc
pop
pop
stos
mov
mov
add
mov
cli
bound
mov
cmpsl
psubb
mov
mov
mov
xchg
mov
dec
scas
inc
ror
mov
mov
enter
jp
ret
mov
inc
mov
adc
sarb
adc
mov
lods
pop
pop
mov
jae
enter
arpl
or
imul
and
xchg
mov
mov
or
rolb
test
testb
orl
aas
pop
push
aad
pop
lods
cmp
shll
mov
fmuls
lods
xchg
ret
inc
xchg
andb
mov
sbb
xchg
ret
dec
mov
mov
mov
add
mov
cmp
xchg
shrb
enter
mov
ret
adc
mov
fsubs
ss
cltd
sbb
cwtl
mov
mov
jnp
aam
xlat
mov
pop
movsl
fwait
push
cltd
enter
xchg
mov
mov
jae
pop
or
movzwl
sub
push
popf
iret
inc
mov
mov
xchg
xchg
jns
ret
xor
cmc
ret
dec
jp
decl
xor
fwait
xor
clc
cmpsl
mov
ret
cwtl
add
xor
mov
nop
mov
std
mov
mov
mov
cli
or
dec
lods
jg
clc
stc
mov
push
mov
addr16
scas
mov
out
jecxz
aam
mov
mov
adc
and
xchg
jg
jbe
pop
jnp
dec
xchg
mov
mov
pop
cltd
roll
mov
mov
jns
stos
cld
rorb
cltd
mov
test
cmpsb
push
sbb
cwtl
daa
fmul
xchg
pop
push
test
push
ret
or
cltd
filds
mov
xchg
stos
dec
xchg
cwtl
test
mov
pop
jns
mov
movsb
fs
adc
enter
nop
add
pop
test
dec
mov
pop
push
in
xchg
add
ret
pop
in
orb
add
mov
mov
movsb
xchg
mov
test
fsts
das
inc
in
add
pop
aaa
mov
and
loopne
jnp
mov
mov
or
mov
adc
inc
mov
and
xlat
mov
in
popa
xor
popa
js
jns
pop
std
cli
shrb
mov
stos
fincstp
stos
adc
lods
pushf
pusha
popf
les
pop
fdivl
and
dec
xchg
adc
lcall
fisubl
aaa
insb
xchg
adc
sub
fwait
popa
ficompl
in
pushf
int
fisubrs
inc
push
leave
lcall
inc
or
ret
inc
jo
inc
inc
dec
mov
nop
jo
fistl
xlat
push
mov
and
loope
int
push
or
jle
cwtl
gs
std
inc
movsl
and
in
gs
movd
ja
mov
paddsb
xchg
mov
in
mov
mov
popa
pop
inc
xor
int3
add
jg
lds
xchg
notl
push
push
and
sub
pop
push
vpunpckldq
xor
ret
lahf
push
mov
mov
xlat
fisubs
dec
jns
push
cmp
cmc
lahf
inc
lods
fiaddl
dec
lret
subb
shr
arpl
add
add
enter
iret
movl
aas
loopne
popf
sbb
mov
xor
sbb
or
mov
add
daa
cltd
inc
inc
sahf
roll
xorb
adc
xchg
mov
mov
lret
cmp
movsl
pop
aad
cmp
xchg
leave
adc
push
mov
loopne
mov
es
pop
push
leave
push
lcall
sbbb
mov
outsl
mov
test
inc
call
data16
rclb
mov
add
mov
sbb
add
and
enter
iret
scas
pop
and
testb
mov
xchg
ja
dec
mov
ret
add
pop
imul
jnp
jae
mov
xor
scas
adc
andb
stos
ja
call
and
pop
stos
add
outsl
mov
ja
scas
pop
inc
aaa
mull
addr16
cmpsb
add
mov
test
in
add
loop
add
add
sbb
popl
push
clc
cmp
movsl
inc
sbb
add
out
loope
outsl
mov
shlb
mov
movsb
std
cmp
test
xor
rcrb
arpl
enter
cmpsb
lds
sahf
fists
xchg
push
xor
xchg
sbbb
cwtl
xchg
inc
xchg
movb
es
test
hlt
pop
out
in
test
inc
and
nop
lea
nop
cwtl
hlt
or
xchg
mov
xor
add
shlb
scas
push
xor
adcl
jnp
enter
pop
inc
jle
mov
arpl
sbb
mov
mov
es
xchg
ljmp
mov
xchg
sbbb
lds
stos
repz
mov
loope
cwtl
inc
idivb
lods
ja
movb
mov
mov
jg
dec
add
lods
mov
sti
dec
enter
ret
scas
ret
lahf
xchg
inc
mov
and
orb
out
mov
push
mov
lds
js
pushf
repz
add
mov
xchg
lods
loopne
fdivrs
sbb
cmp
mov
sarl
mov
pop
adc
roll
movsb
pop
xchg
jns
mov
outsb
mov
inc
push
mov
xchg
invd
or
hlt
ficompl
pop
fbld
jge
add
leave
arpl
pop
mov
ret
cwtl
mov
lret
dec
inc
pop
imul
lods
mov
dec
pop
stos
lahf
andb
loopne
inc
xchg
sbb
stos
pusha
rclb
hlt
xlat
jg
mov
pop
imul
loopne
rcrl
jg
fistl
xchg
jae
ret
daa
ret
mov
stos
xchg
and
add
push
mov
add
les
dec
ret
sbb
lods
add
cmpsl
cmp
orb
fldcw
xchg
xchg
xchg
int3
andb
cmpsw
movsb
orb
cmpsb
test
push
inc
jle
xchg
ret
adc
ret
stos
ret
lds
mov
loop
mov
gs
test
rcl
xchg
ret
adc
push
ja
xor
popl
mov
pop
jnp
scas
dec
fldenv
or
cli
lock
pop
xchg
mov
dec
xlat
hlt
add
test
and
in
enter
mov
add
lea
jno
sbb
in
ficoms
dec
cwtl
mov
xchg
dec
lods
outsb
ret
ret
xchg
mov
and
pushf
xchg
xchg
mov
mov
test
add
iret
jbe
cmpsb
hlt
movsl
add
adc
mov
aaa
jbe
ja
ljmp
les
mov
test
pop
ret
pop
xchg
lret
pop
inc
jp
int
call
xchg
aas
idivl
jl
or
mov
inc
pop
xor
add
mov
dec
aad
dec
gs
test
lret
pop
xchg
add
cld
aas
mov
addps
mov
orb
xchg
fmuls
mov
pop
enter
scas
xor
sbbb
or
ds
xchg
lods
push
mov
ja
inc
das
xchg
popa
aas
mov
lods
cli
add
adc
mov
mov
inc
add
pop
out
xchg
push
ss
lods
call
imul
ret
lods
jmp
in
and
andb
xchg
std
add
and
lds
nop
mov
popf
rolb
mov
movsb
inc
fisttpl
ret
xchg
inc
repz
inc
aaa
in
inc
cmp
inc
cld
or
and
inc
mov
dec
xchg
nop
xchg
ret
xchg
pusha
inc
mov
scas
xlat
pop
jae
xchg
clc
mov
mov
push
call
add
jbe
lods
negl
inc
in
loop
leave
jns
xchg
push
movswl
push
cmp
lcall
mov
rcrb
aas
movsb
pop
imul
in
inc
jbe
mov
mov
ret
mov
ret
mov
ret
fstps
jns
std
ficompl
inc
clc
in
mov
gs
rclb
mov
mov
xchg
sahf
add
scas
xchg
scas
dec
pop
inc
adc
adc
xchg
cmp
pop
mov
pusha
iret
mov
xchg
inc
mov
add
mov
mov
inc
mov
ret
mov
mov
loop
mov
pushf
jnp
fldenv
test
lea
sbb
xchg
ret
mov
nop
push
jbe
adc
or
inc
mov
ret
scas
aas
sbb
mov
subl
pop
or
xchg
pusha
mov
stos
rcll
stc
fnstcw
ficompl
in
dec
mov
enter
mov
jle
sbb
fidivs
movsl
mov
clc
pusha
xchg
ret
scas
lret
cmp
mov
movb
adc
sbb
mov
popf
hlt
pop
mov
fiaddl
mov
loop
xchg
adc
mov
movsl
xchg
ret
es
aam
pop
xlat
mov
out
xchg
pushf
add
inc
jmp
xor
mov
pop
mov
fsubl
lea
jle
decb
inc
jge
mov
aam
xchg
stos
scas
inc
jl
rclb
push
xchg
mov
add
leave
incl
orb
rorb
mov
ret
rolb
cwtl
inc
add
mov
inc
std
push
lods
inc
pop
test
les
xchg
scas
popa
jnp
xor
push
cmpl
and
dec
addb
xchg
mov
cmpsb
add
dec
fwait
cld
ret
mov
aad
jnp
mov
xchg
mov
mov
xchg
imul
movl
sbb
lods
inc
xlat
push
out
addb
mov
or
pop
lea
incl
loop
push
mov
add
les
ret
mov
xchg
mov
jnp
pop
mov
arpl
cmp
aam
jns
cwtl
ret
dec
les
mov
aaa
cmc
xchg
es
sahf
scas
sbb
imul
mov
addr16
push
dec
stos
arpl
setle
jne
clc
stc
adc
push
xor
fisttpll
arpl
mov
cli
les
into
andl
scas
inc
enter
cmp
mov
addb
mov
mov
mov
jmp
lock
rcll
xchg
sarb
loop
push
mov
mov
fisttpll
sbb
mov
add
or
mov
adc
push
leave
jl
add
cmpsl
xor
subb
aas
pop
dec
mov
lods
cmp
into
pushf
add
loop
lret
enter
lcall
dec
idivb
lods
pop
ror
push
mov
test
xor
push
xorl
sbb
lods
push
clc
cli
push
mov
and
mov
sbb
jle
lret
adc
inc
lahf
aaa
xchg
test
inc
mov
and
or
popf
fistpll
adc
dec
xchg
shlb
ret
jge
pop
pop
scas
notb
aas
xor
dec
pop
mov
cwtl
mov
cwtl
loopne
inc
xchg
clc
pop
test
cmpl
mov
int
movsb
repnz
sahf
mov
mov
mov
mov
sbb
cld
scas
add
and
add
xor
out
fbld
dec
lods
inc
push
loop
add
pusha
inc
cmp
inc
mov
mov
inc
inc
sbb
testl
xchg
pop
out
test
test
sbb
cmp
movsb
fmul
repz
ja
popf
dec
pop
jb
shlb
mov
cmp
xchg
cli
xor
in
adc
xchg
add
ret
rorl
xchg
les
mov
enter
scas
ja
in
movsl
and
leave
loop
scas
inc
lods
lret
mov
inc
loopne
mov
and
in
mov
aad
cld
mov
cmc
mov
scas
pop
mov
sarb
cld
xchg
hlt
in
mov
movsb
mov
push
add
arpl
fwait
cmp
cwtl
xorb
cld
jle
cmpsl
fcomp
lcall
xor
pusha
scas
add
mov
and
mov
cltd
and
pop
mov
mov
scas
xor
mov
ret
scas
aas
loopne
sub
add
ret
mov
push
inc
cmp
ss
lods
jnp
mov
sbb
mov
add
pop
mov
mov
adc
ret
mov
out
stos
pop
jno
xor
pop
inc
sahf
push
add
ds
lret
add
push
mov
lcall
out
pusha
push
lods
jns
xchg
and
ljmp
pop
fs
scas
lock
mov
ds
aaa
push
xchg
ret
mov
mulb
ss
pusha
loopne
daa
es
aas
jge
bnd
sub
insb
iret
inc
jge
out
into
je
lods
xor
test
jmp
add
sti
mov
push
lock
dec
add
cmp
xlat
lret
jmp
insl
lods
and
pop
jmp
pop
jmp
nop
fs
jo
cltd
xchg
xchg
fnstenv
insl
jle
mov
mov
stos
dec
mull
mov
sbb
pushf
mov
lds
adc
cmp
jns
xchg
adc
iret
not
adcb
iret
clc
inc
js
aaa
movnti
adc
cmp
ljmp
jl
mov
inc
sarl
sbb
cmc
das
scas
jmp
xchg
hlt
outsl
out
mov
fs
aas
in
imul
in
cmp
iret
ds
test
dec
adc
pop
push
push
adc
pushf
jo
push
push
out
mov
and
aaa
rolb
xchg
daa
movsb
imul
lds
sub
lock
daa
fstps
mov
outsb
movsb
mov
or
inc
call
pop
xchg
and
jle
xchg
les
inc
imull
out
sub
mov
pop
sub
out
imul
mov
cmp
aas
and
div
mov
mov
sub
sti
rcl
adc
xor
pushf
jge
adc
push
push
sbb
xchg
lods
mov
jmp
mov
call
out
ds
mov
pop
and
and
insl
imul
adc
push
xlat
mov
out
aad
mov
jmp
fucomip
cmpsl
push
xchg
xchg
stos
adc
aas
mov
pop
or
lods
jecxz
adc
fsubr
dec
in
outsb
je
mov
aam
aas
mov
adc
xor
mov
pop
and
rclb
and
inc
outsb
mov
int
scas
push
jne
in
cltd
pop
xchg
addr16
push
ds
mov
mov
shlb
xlat
jbe
mov
test
xor
mov
dec
xor
dec
mov
addr16
ret
notb
test
inc
mov
cmp
ss
pop
mov
sub
scas
xchg
xchg
test
mov
add
test
jle
cmpsl
mov
in
jb
je
test
sbb
pusha
or
xor
imul
mov
xchg
and
adc
xchg
sub
ljmp
jo
xchg
cmp
int
adc
fcompl
sbb
xor
pop
repz
sub
arpl
inc
add
pop
cld
out
push
loop
fstpt
push
sub
mov
movl
pop
xor
out
mov
int
pop
out
jnp
mov
mov
mov
push
mov
lods
cmp
mov
iret
mov
lahf
into
lahf
jno
pop
mov
jae
repz
mov
adc
dec
cli
mov
adc
push
mov
sub
push
mov
out
rolb
imul
ja
test
inc
sbb
xor
pop
pushf
mov
out
sub
fidivl
mov
test
adc
adc
jno
ds
pushf
popf
cmpsl
push
jne
jecxz
loopne
lahf
mov
aas
mov
jne
inc
and
stos
or
sub
or
mov
fmull
sub
in
popa
test
cmp
lods
rol
cmp
or
sti
nop
mov
and
icebp
fidivl
int
mov
inc
mov
insb
mov
into
hlt
cmpsl
jno
and
and
scas
movsb
sahf
mov
movsl
dec
cmc
in
in
inc
rcll
jns
cld
mov
in
or
or
movsl
testl
cmpsl
hlt
in
xor
mov
inc
sbb
js
jge
outsb
mov
in
das
and
sub
xchg
dec
pop
or
fdivs
aad
cmp
in
in
fsubrs
test
jmp
in
in
out
ss
test
roll
js
cmp
adc
insl
std
jg
cmp
jnp
imul
subl
andb
mov
inc
std
jecxz
das
mov
adc
mov
push
outsl
xchg
inc
jns
mov
mov
mov
mov
ret
lock
scas
divb
js
lahf
bound
js
dec
cwtl
sub
ljmp
shr
sarb
jecxz
xchg
sub
mov
inc
loopne
mov
pop
jle
push
sahf
pop
shrb
push
adc
cmp
in
jg,pt
push
push
add
nop
mov
fldt
sbb
subb
xor
lods
ffreep
pop
fimuls
mov
inc
or
aaa
lods
xor
lea
pop
add
mov
cmp
les
fwait
std
call
jb
jno
xchg
or
gs
add
ja
xchg
lcall
mov
mov
mov
sbb
adc
pushf
jae
shll
push
iret
int
icebp
add
pop
addb
rorb
jb
add
mov
xor
jmp
iret
xor
xor
sbb
dec
xchg
adc
xchg
repz
jnp
jno
jmp
daa
fwait
mov
jb
ss
in
xor
aad
insb
pop
add
mov
and
shlb
inc
aaa
popf
mov
mov
cwtl
loop
movsb
and
mov
xchg
inc
xor
sbb
sbb
mov
xchg
xchg
fnsave
orl
ss
pop
cmpsl
movsb
pushf
in
fcompl
out
xor
mov
mov
fldl
fistpl
xor
out
movsb
inc
in
add
shll
loopne
lea
sub
jmp
jb
loopne
and
lods
out
mov
int
daa
scas
or
in
fwait
daa
insb
test
jmp
hlt
or
push
xchg
stos
pop
pop
sbb
popf
jo
ret
in
sub
xchg
xchg
sub
jmp
add
aad
pop
jg
pop
iret
hlt
and
xor
leave
pop
xlat
jns
outsl
xchg
mov
pop
rcrb
arpl
repnz
mov
lret
nop
jle
lea
sti
ret
xchg
clc
movsl
ds
xchg
in
dec
pop
fmulp
push
cmc
icebp
sarl
rolb
outsl
sbb
aaa
push
cmp
lret
aaa
sbb
jecxz
adc
cmpsl
test
mov
daa
popf
mov
or
rorb
lea
cmp
shlb
inc
adc
jae
and
mov
mov
and
jns
test
sbb
jbe
jp
jge
mov
js
mov
pop
inc
cmp
roll
stos
pushf
ds
int
outsl
rcll
inc
call
push
daa
push
push
shll
jno
xchg
fstpl
mov
push
aas
mov
or
pop
cmpsl
xor
mov
and
fsubs
inc
je
xchg
lock
out
xor
sbb
adc
mov
jb
fists
mov
add
pop
jo
aam
lods
mov
mov
in
mov
les
mov
int
sub
xchg
pop
data16
sbb
add
cs
xor
jbe
sub
jle
cld
movntps
lahf
iret
les
push
push
xchg
xchg
cmp
aam
stos
jmp
repz
sub
lock
xchg
sbb
mov
movsl
repz
mov
sbb
scas
pop
in
popf
int
daa
sbb
pop
fidivs
push
pushf
pop
xchg
int
daa
pop
mov
popf
cwtl
pop
fdivs
movsb
cltd
in
fstps
lcall
mov
pushf
movsb
int
daa
and
gs
pop
dec
lcall
lods
js
jecxz
sarb
out
push
mov
mov
test
imul
arpl
xchg
pop
outsl
inc
jmp
mov
int3
movsb
out
xchg
add
pop
xchg
cmp
jbe
pop
cmpsl
mov
cmc
icebp
cmpsl
outsl
shrl
sub
adc
repz
pop
sub
mov
cmp
xor
popf
es
pop
push
jbe
ret
notl
ds
out
adc
jns
cmp
outsl
aas
mov
sbb
lds
sbb
lods
cmp
mov
rcll
rcll
popf
fmuls
lea
inc
ss
call
nop
lock
push
scas
inc
mov
mov
jle
jl
jnp
das
dec
out
adc
jns
std
jle
adc
sbb
lds
sbb
adc
lea
cmp
inc
notl
mov
jbe
mov
dec
out
adc
mov
jns
xchg
mov
cmpsl
jno
mov
cmpsl
push
sti
mov
adc
mov
lods
push
cmp
clc
cmpsl
icebp
inc
cmpsl
jno
or
shll
dec
push
ljmp
pop
lea
mov
jge
push
xchg
ja
pop
das
inc
mul
inc
mov
mov
loopne
jmp
scas
mov
and
and
pushf
out
mov
into
mov
xor
and
xchg
push
scas
inc
lcall
rolb
jo
out
mov
push
jbe
test
mov
inc
repz
loop
dec
or
xchg
pop
data16
rcll
into
cli
lods
js
pop
jle
and
xchg
mov
cli
lods
pop
jle
and
xchg
mov
cli
outsb
clc
or
xchg
sarl
out
adc
dec
and
icebp
dec
out
adc
dec
and
xchg
ret
scas
stc
cli
lods
jno
pop
jle
and
xchg
pushf
out
mov
into
mov
xchg
int3
mov
xchg
pushf
das
mov
into
mov
inc
int3
mov
xchg
push
scas
add
sub
mov
sub
xor
push
out
lret
sub
das
xchg
jg
cmp
rclb
pushf
je
xchg
push
cmp
jnp
popa
sbb
out
push
cwtl
aad
je
test
jmp
aas
jle
aaa
cmp
das
dec
mov
ret
jns
adc
enter
mov
adc
jae
fldl
or
mov
daa
push
inc
push
adc
cmpb
push
mov
test
cmp
xchg
jl
push
cmp
adc
cmp
sbb
test
pushl
mov
mov
adc
cli
test
das
mov
adc
imul
jne
jo
mov
rcll
cmp
jle
mov
sub
add
rolb
cs
mov
jnp
test
mov
adc
xchg
mov
cld
ljmp
pop
outsl
rclb
test
lea
or
mul
aad
aas
fldt
or
pop
test
jmp
adc
sub
repnz
jns
xor
mov
mov
jmp
jno
jg
jle
addl
std
push
inc
cmp
sti
scas
ret
adc
xchg
push
sub
out
das
loopne
or
xor
mov
mov
icebp
xor
push
lock
insb
in
ucomiss
jne
add
xchg
push
mov
lahf
sbb
xchg
ret
xchg
push
enter
insb
jle
or
pop
lock
xor
ss
lahf
fsubs
mov
fdivs
es
sub
out
sbb
ret
push
cmp
je
jmp
mov
ret
add
jno
out
or
sahf
or
sbb
out
dec
pushf
lods
das
push
pop
jo
mov
lock
enter
lock
mov
xor
mov
je
arpl
inc
push
xor
jne
ljmp
call
js
imull
shlb
cmp
sbb
push
cli
pop
push
xor
sbb
lcall
std
xchg
repz
cs
ss
repnz
mov
ss
cmpsb
aas
push
sub
pop
dec
insb
loop
mov
in
xchg
jae
jne
mov
out
sbb
insb
mov
sarl
mov
cmp
pop
int
stos
je
jge
xchg
call
push
cmc
cmpl
jne
inc
and
adc
xchg
adc
out
js
push
jbe
add
lock
in
xchg
cmp
xchg
sub
dec
loop
add
call
iret
mov
xor
jbe
sbbl
dec
lds
das
inc
inc
or
iret
daa
xchg
hlt
fisttpl
incb
test
enter
jmp
in
inc
repz
ds
cmp
sub
iret
add
push
mov
xor
sub
dec
divl
movsb
shr
rcrl
sbb
lahf
lea
xor
pushf
fistps
mov
pop
pop
cwtl
inc
jnp
out
adc
lcall
cs
sbb
or
inc
sub
jmp
inc
bound
pop
jle
out
scas
jecxz
notl
aas
das
out
lcall
add
imul
scas
cmp
inc
cmpsb
std
sub
mov
mov
adc
sbb
hlt
sub
call
test
mov
adc
cmc
dec
jbe
das
out
imul
mov
push
push
cwtl
sbb
jbe
daa
div
frstors
les
neg
mov
ret
fwait
mov
aaa
addr16
sbb
cmp
cli
pop
xor
outsl
clc
cmpsl
lods
push
out
insl
push
das
lods
xchg
mov
push
subb
cltd
lods
lods
push
enter
lods
cmp
xor
and
jo
pusha
fsubrl
push
int3
mov
push
add
xchg
cs
pop
xchg
arpl
mov
jmp
mov
push
push
das
inc
out
out
shll
cltd
pop
fdivs
imul
adc
ret
cmp
mov
mov
xorl
inc
pushf
daa
jg
cmp
jge
out
test
push
jno
inc
sbb
popa
outsb
hlt
sub
cmpsl
jb
sbb
xlat
sub
in
shll
cmc
fistl
ss
jmp
mov
lea
jbe
testb
das
mov
jmp
jo
pop
fiadds
test
adc
mov
xlat
jmp
mov
inc
popf
out
adc
popf
call
xor
shl
xor
incl
mov
lock
leave
cmp
lock
pop
pop
je
clc
cmpsl
pop
adc
lahf
inc
lea
enter
incl
test
push
bound
outsl
loope
dec
push
xchg
rcl
add
in
inc
xor
inc
daa
xorl
jecxz
jmp
sub
lds
cmpb
daa
add
stc
adc
rcll
mov
stc
pop
xor
cmc
cmc
add
push
fs
rcr
sbb
jnp
int
daa
dec
jae
icebp
push
nop
dec
in
xor
jl
mov
pop
lods
push
jge
mov
fstps
hlt
jne
jecxz
adc
popf
scas
mov
add
je
out
pop
sahf
je
pop
frstor
mov
mov
and
mov
ficoms
xor
jmp
pop
push
ljmp
cli
or
mov
mov
loopne
lock
int
jmp
xchg
pusha
arpl
scas
je
rcr
scas
cmpsl
xchg
and
push
lods
jle
js
push
dec
sbbl
out
pop
push
aam
mov
dec
out
adc
jbe
out
test
pop
add
push
jge
jmp
imul
sbb
sub
in
sbb
jo
jge
cmc
lods
jge,pn
cltd
jnp
sbb
ret
repz
sbb
adc
cwtl
dec
idivl
cmp
cmp
fidivs
arpl
mov
shll
push
lods
or
mov
mov
icebp
loop
sub
ret
xor
ficompl
dec
out
lods
cmc
popa
sub
mov
into
clc
hlt
ror
out
popa
mov
sbb
pop
dec
cs
mov
cmp
icebp
inc
lahf
jno
repz
cmpsl
iret
xchg
jno
or
push
std
pop
out
fucomip
repz
fstpl
inc
xchg
rcrl
fildll
je,pn
loopne
mov
fldcw
adc
stos
pop
xchg
repz
out
xor
outsl
pop
push
sbb
out
mov
repz
cmp
inc
call
inc
outsl
aas
mov
sbb
xchg
fistpll
add
lock
inc
ds
outsl
sbb
orl
pop
das
lea
clc
std
ficomps
inc
lret
mov
mov
mov
int
jno
lcall
xchg
cmp
mov
jbe
scas
fisubrl
bound
sbb
cmc
mov
rcr
add
cld
ja
fdivrl
call
adc
popf
adc
ljmp
sbb
lret
sbb
jl
iret
add
rorl
mov
sub
mov
jns
roll
cmp
mov
lods
mov
adc
xchg
movsb
add
xchg
rcll
clc
lea
loop
cmpsl
or
adcl
fiaddl
push
idiv
add
cmp
sub
in
xlat
lock
jl
cmp
clc
add
sarl
inc
sbb
sub
jbe
jle
sbb
mov
mov
into
fsub
jl
jae
inc
lods
ds
iret
call
out
jge
cmp
cmp
jge
outsl
adc
adc
jge
mov
cld
out
dec
imul
jbe
cld
pop
cmpsl
sbb
lds
push
cmp
dec
andl
xrelease
mov
pop
lods
cmp
sub
pmaddwd
out
in
in
and
fcompl
xchg
sbb
xor
repz
sub
jecxz
lock
in
lds
add
pop
xor
pushf
inc
xchg
mov
popf
cmp
jl
mov
jge
mov
pop
jle
mov
jg
mov
negl
mov
jns
mov
pop
jp
mov
jnp
ret
mov
popf
inc
pop
test
xchg
mov
and
icebp
in
xor
jb
les
int
daa
jbe
mov
mov
hlt
xor
pushf
sub
out
mov
popf
outsl
dec
cmpsl
cmc
movsb
jmp
aas
sbbl
mov
xchg
pop
jmp
adc
mov
daa
fisubrl
test
cmc
add
out
sub
pop
fisttpl
sbb
xchg
mov
rcl
xor
add
das
xor
add
push
fidivl
lock
xchg
mov
push
ja
push
cmp
xchg
aaa
mov
ljmp
sub
push
mov
scas
int
stc
inc
orl
pop
fstpt
and
jp
movb
mov
mov
scas
cmp
mov
test
push
nop
ds
xor
cmpsb
sub
adcb
sbb
lods
push
adcb
push
outsb
jmp
mov
mov
sti
std
lods
fwait
inc
sbb
dec
fisubrs
jae
scas
mov
stos
mov
xchg
pushf
sub
mov
add
cmc
xlat
stos
ds
mov
lcall
mov
lods
mov
xchg
pop
test
push
push
mov
dec
mov
cwtl
xlat
cmp
jnp
lods
mov
pop
loop
lret
push
out
mov
mov
int
daa
xor
lods
cmpsb
mov
scas
fs
add
xchg
lea
xchg
mov
xchg
shll
mov
aas
insb
pop
lea
lea
out
popf
insb
add
mov
pop
mov
jmp
rclb
xchg
test
mov
sub
mov
mov
test
dec
lods
mov
xor
cmpsl
mov
loop
lahf
push
mov
test
sbb
xchg
into
scas
mov
scas
mov
lahf
ficoms
xchg
in
lods
pop
stc
mov
out
addl
adc
or
call
leave
or
out
icebp
cmp
testb
xor
jp
jmp
out
je
jmp
ljmp
mov
mov
and
ljmp
in
mov
imul
mov
fwait
adc
xchg
mov
into
mov
mov
jle
mov
add
jb
shll
scas
mov
mov
and
xchg
add
pushf
imul
testl
add
inc
stos
push
mov
cmpsw
call
adc
mov
mov
xchg
cwtl
mov
fwait
fwait
xchg
push
test
xchg
xchg
outsb
mov
imul
fcompl
inc
in
xchg
mov
test
pop
mov
mov
xor
ret
out
or
lahf
inc
jae
or
mov
call
mov
jne
mov
aas
incl
test
scas
pop
insb
aas
cmpsl
mov
mov
mov
xor
inc
sub
aas
push
rorl
imul
scas
aas
push
stos
daa
xor
jmp
mov
mov
mov
or
decl
pop
lods
addr16
jb
cmpsl
mov
add
dec
xchg
xchg
xchg
pop
inc
test
inc
out
repz
in
insb
rcrl
or
fucomp
fldt
xor
xchg
outsb
mov
scas
shrl
mov
fwait
cmpsl
lahf
jmp
xor
cmc
cmpsl
xchg
mov
xchg
sbb
sbb
mov
mov
mov
je
ljmp
pop
pop
mov
cmpsl
repz
push
lea
mov
ljmp
fistpll
add
das
xor
jo
stos
hlt
pop
cmpsl
cmp
insb
loope
mov
pop
xchg
leave
pop
lods
cld
cmpsl
xlat
xor
je
inc
lods
pop
mov
pop
lods
mov
add
xlat
imul
sahf
dec
cmp
jecxz
out
lea
fstl
cltd
shll
insb
rol
mov
add
je
add
xchg
sbb
sbb
test
pop
rol
sbb
add
pusha
mov
adc
aam
and
push
sbb
stos
ret
mov
ret
sbb
fwait
movsb
scas
repz
pop
test
mov
mov
pop
insb
pop
mov
sub
xchg
into
pop
xchg
movsl
iret
pop
sbb
ret
inc
mov
cs
mov
mov
jae
cmpsl
pusha
and
scas
call
pusha
jg
lea
fwait
loopne
aam
cld
loopne
leave
cmpsl
shll
and
mov
push
test
xchg
mov
xchg
popa
fs
les
leave
and
loope
ljmp
mov
loope
ret
loope
lahf
and
fwait
mov
loope
lods
cmp
mov
pop
cmc
pusha
ret
mull
mov
and
sub
lcall
insl
test
dec
lea
rcrl
aas
insb
cltd
mov
pop
lods
inc
xor
cmpsl
or
jle
loope
lea
lods
data16
lods
sbb
lods
into
bound
popf
repz
fnstsw
mov
test
mov
lcall
pop
jg
fisubrs
mov
lods
push
dec
scas
adc
orl
lods
mov
scas
std
test
repz
dec
lods
mov
pop
pushf
jns
pop
cmpsb
cwtl
test
loop
mov
jecxz
mov
xchg
add
repz
sub
lahf
sub
cmp
sbb
daa
ret
or
pushf
mov
pop
cmp
shll
lea
decl
or
xchg
out
ret
mov
dec
jp
pop
xchg
mov
leave
orb
mov
or
mov
mov
mov
stos
cmpsl
lahf
cmp
push
test
and
call
inc
jbe
xchg
test
xchg
lahf
cmc
outsb
insb
mov
mov
mov
insb
push
mov
popf
arpl
mov
pop
inc
movsl
sub
mov
in
xchg
sti
daa
lods
lea
mov
mov
pushf
add
jne
fistl
hlt
mov
lods
mov
jo
test
cmp
repz
lcall
pop
lods
and
in
pop
mov
or
in
mov
add
das
mov
repz
imul
imul
xlat
jl
out
aaa
dec
movsb
lret
lods
testb
fwait
shll
mov
iret
lea
push
lds
mov
mov
pop
sarb
dec
call
pop
imull
xchg
dec
leave
lods
scas
out
push
int
insl
cli
jmp
outsl
xchg
inc
outsl
jmp
add
scas
xchg
lods
shll
cs
or
cltd
cmp
and
pushf
sub
popf
das
xor
stos
mov
pop
insb
cmpsl
mov
fisttps
mov
imul
mov
sub
xor
fldt
push
xor
or
xor
fmull
std
jmp
scas
in
mov
add
jns
mov
movsb
pushf
pushf
or
xchg
xor
lahf
je
lods
sbb
mov
xchg
lahf
imul
lods
ljmp
sub
imul
lea
cli
mov
les
lea
int
push
ja
lahf
mov
lods
mov
jo
mov
mov
vpminsw
sub
sbb
lahf
and
xchg
mov
mov
or
xchg
sarl
scas
bound
push
pop
bound
jb
lods
ret
and
js
arpl
movsl
out
pop
ds
int
push
stos
iret
jmp
mov
jbe
lods
test
test
lods
mov
repz
add
mov
das
xchg
dec
enter
lods
xor
fbld
mov
fcompl
lods
scas
lret
lods
loop
mov
xchg
sbb
ret
mov
sbb
pop
lods
out
mov
adc
shl
sbb
ret
leave
mov
rcll
jae
inc
mov
fwait
popf
into
pop
jge
cmp
insb
mov
xchg
mov
mov
sub
add
lds
lret
add
mov
in
sbb
subb
mov
lret
loope
mov
add
add
arpl
int3
cmp
push
push
xor
pop
ret
ja
in
gs
pop
lods
xchg
in
push
xchg
xchg
scas
movsl
in
dec
and
scas
mov
in
test
test
in
ljmp
xchg
mov
mov
lods
popf
sbb
test
scas
push
out
nop
xchg
stos
lods
cmc
lods
push
ficomps
insb
mov
dec
push
mov
cltd
mov
mov
fstpt
pop
mov
xchg
decb
loop
ret
call
cltd
repnz
mov
pop
out
leave
fwait
aaa
dec
xchg
lods
add
leave
adc
fwait
mov
mov
in
iret
push
xchg
mov
js
scas
add
dec
mov
xchg
ljmp
cltd
aaa
in
int3
jp
mov
inc
push
leave
jnp
clc
xchg
mov
and
mov
jge
mov
mov
mov
jnp
dec
cmp
add
pop
cs
xchg
je
dec
xchg
inc
mov
lods
ja
mov
sub
test
pop
jecxz
int3
les
jne
fldt
scas
sbb
pushf
aaa
icebp
pop
test
scas
mov
seta
xchg
fmuls
repnz
pop
lods
lods
out
xor
cmpsl
mov
test
fwait
dec
pop
popf
mov
sbb
les
aas
cltd
ss
mov
ss
mov
popf
les
pop
mov
icebp
test
mov
daa
xor
call
outsl
xchg
scas
je
sub
cmpsl
mov
mov
cltd
dec
or
stos
jge
insl
mov
int3
mov
mov
fwait
xchg
inc
mov
add
jecxz
lret
test
mov
mov
ret
lret
push
cmp
jno
ds
iret
icebp
sub
mov
or
sarl
mov
jne
ret
sti
subl
fs
mov
push
pop
sub
and
xchg
mov
sub
mov
xor
enter
xor
lcall
xchg
mov
fwait
dec
cld
ret
mov
pop
dec
xchg
cmc
outsb
mov
test
cmc
fwait
test
lahf
aas
sub
lods
scas
out
repnz
sbb
push
stos
bswap
in
fadd
inc
mov
mov
in
fld
mov
sub
and
mov
sbb
xor
pop
sub
test
push
mov
cmpb
cwtl
lods
push
ja
out
xchg
out
jmp
mov
xchg
pop
sbb
iret
std
mov
xchg
pop
sub
and
sub
cltd
cltd
in
dec
mov
scas
dec
fists
lds
lahf
fmuls
je
fsubs
fwait
aas
aad
and
mov
sub
jecxz
gs
cmp
lahf
and
xchg
scas
mov
out
cmpsl
fwait
mov
test
push
popf
adc
pop
stos
mov
addr16
sbb
mov
mov
xchg
dec
mov
inc
or
xor
inc
repz
loop
repz
loop
lods
mov
loop
mov
fwait
inc
xchg
push
mov
lods
daa
jmp
cmpsl
mov
int
sahf
leave
movsb
test
pop
daa
jne
cmpsb
mov
xor
fdiv
and
in
xor
push
test
lea
inc
call
movsb
jbe
ret
mov
in
icebp
pop
das
xor
mov
scas
push
inc
cmp
hlt
int
daa
jo
xor
mulb
jne
mov
int
daa
xor
repz
aad
pushf
sub
test
popf
xor
repz
jo
insb
add
in
add
lret
mov
xor
ret
pop
mov
mov
call
cld
cltd
dec
pop
sbb
cmpsl
push
xor
pusha
and
outsb
scas
xor
test
out
and
daa
out
cwtl
mov
stos
and
adc
adc
cmpsl
or
jno
ret
out
mov
mov
push
daa
xor
in
pushf
xchg
jp
lahf
cmpsb
cmpsl
mov
jnp
jmp
jecxz
iret
xchg
out
inc
ret
cmp
push
test
mov
and
jb
push
mov
jmp
mov
bound
xlat
add
ficoml
pop
cmp
xchg
imull
mov
jl
subb
subl
sahf
xchg
mov
pusha
dec
pop
push
arpl
mov
stos
mov
js
xchg
stos
xchg
mov
mov
pop
push
addr16
pop
stos
lods
mov
mov
stos
outsb
jle
subb
subl
stos
dec
pop
push
bound
push
popa
stos
mov
test
mov
jp
test
stos
xchg
movsl
leave
cltd
xchg
movsb
enter
dec
pop
push
mov
sub
das
aas
cs
jmp
out
out
repnz
push
push
adc
stos
lret
fcmovne
loop
xor
aaa
ss
sub
stos
repz
div
push
ljmp
push
or
stos
shl
pop
xlat
out
fisubrl
sub
xor
in
std
icebp
add
cld
lock
or
adc
stos
int
shl
int3
loopne
xor
inc
sub
stos
cmc
add
call
dec
sbb
dec
sbb
aam
or
lahf
jmp
mov
mov
loopne
jne
sbb
imul
test
int
mov
lods
pop
fbld
or
sub
das
lods
mov
test
mov
mov
in
das
lods
xchg
icebp
nop
stos
push
pop
xchg
scas
test
or
xchg
das
lods
mov
and
pop
mov
repz
loopne
cmc
rorl
mov
sub
mov
scas
scas
test
fwait
jo
lret
lods
daa
add
mov
mov
push
sub
jne
das
lods
mov
pushf
cltd
mov
lret
xchg
out
mov
in
jmp
scas
cmc
repz
xchg
popf
mov
dec
enter
xchg
lds
scas
test
int
pop
mov
std
cmp
popf
movsb
push
sahf
mov
aam
pop
mov
cmpsl
mov
mov
or
in
rcrl
mov
mov
negb
lods
popf
out
movsl
adc
outsl
shlb
fwait
pop
jbe
mov
xor
adc
test
mov
popf
and
mov
repz
nop
cmc
mov
in
add
mov
jbe
mov
iret
mov
cs
adc
pop
mov
add
mov
rclb
leave
mov
mov
lods
sbb
mov
stos
adc
fldl
fcompl
loope
test
mov
sahf
xchg
mov
pushf
add
pop
xchg
loop
pop
lea
and
cmc
sub
test
jle
sub
mov
mov
lahf
xchg
mov
jne
repz
sbb
pop
cwtl
mov
or
lds
jb
cmc
enter
cmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
stos
pop
xchg
cli
mov
cmpsl
test
scas
pushf
inc
mov
lods
or
loope
scas
lods
sbb
or
stos
mov
xchg
pop
mov
stos
mov
mov
inc
mov
cmc
xchg
mov
xchg
aas
ret
mov
mov
out
mov
iret
mov
cmpsb
pop
and
in
cmc
adc
test
movl
enter
mov
mov
cmp
imulb
lods
lea
int3
cmpsl
test
mov
mov
push
movl
aaa
mov
movsl
aaa
mov
movsl
aaa
mov
movsl
mov
mov
mov
lea
add
mov
test
fistpll
ret
repz
rcrb
sub
repz
les
mov
loope
mov
movsl
mov
mov
movsb
cmc
mov
mov
sahf
lods
rcll
enter
lea
lahf
ret
pop
dec
rcl
cs
pushf
dec
mov
int3
cmpsl
lea
test
int
mov
mov
cmpsl
mov
je
xchg
enter
lea
xlat
dec
cs
mov
mov
fwait
add
mov
xchg
push
pop
add
pop
ret
popl
mov
xchg
push
pop
inc
mov
xchg
add
mov
xchg
push
sbb
pop
push
mov
lock
adc
xor
or
mov
test
jmp
xchg
or
jne
out
mov
mov
adc
xorl
mov
iret
lret
lahf
cltd
test
xchg
movsb
or
shll
fwait
mov
int3
test
mov
sahf
test
push
mov
fwait
les
mov
push
pop
aas
std
mov
test
pop
in
lock
sbb
mov
dec
xchg
mov
mov
test
mov
add
cmp
test
hlt
outsl
xchg
shrl
test
repz
pushf
aam
insl
mov
mov
rcrl
pop
pop
rcl
mov
pop
mov
pop
mov
inc
in
fwait
das
dec
inc
lods
cmc
push
test
add
mov
les
mov
pushf
fstpl
ret
fcmovne
lods
ja
movsb
mov
sub
cmpsl
inc
mov
icebp
inc
scas
sub
cmpsb
mov
mov
test
cmpsl
sub
lea
mov
xor
fnsave
nop
jno
scas
cmp
mov
mov
mov
popf
mov
mov
enter
sete
clc
outsl
sbb
cmc
jne
in
das
test
sub
repz
and
leave
or
ss
test
test
sub
les
out
jbe
test
xchg
loop
movsb
xchg
pop
mov
in
enter
imul
mov
inc
aad
cmp
je
mov
adc
lret
test
jbe,pn
mov
push
jle
out
push
int
pop
test
mov
mov
stos
repz
or
mov
mov
lods
movsl
pop
lret
sub
lea
pop
je
cwtl
ds
sahf
icebp
jg
mov
pop
pushf
mov
out
nop
or
mov
repz
mov
cmpsl
stos
adc
stos
xchg
mov
dec
lods
rcr
mov
inc
les
xlat
dec
stos
lods
lret
mov
repz
mov
mov
xchg
adc
enter
lea
fists
enter
adc
pushf
imull
outsb
repz
movsb
divb
sub
mov
xchg
mov
sub
mov
dec
xor
mov
mov
and
mov
mov
lahf
xchg
mov
movsl
sahf
test
or
sub
push
mov
cmc
lcall
sub
mov
fwait
ja
mov
pop
fisttpl
repz
pop
mov
int3
cmpsl
pushf
inc
test
lods
xlat
sbb
out
sahf
mov
repz
mov
cmpsl
mov
mov
sub
adc
stos
sbb
lea
fisttps
mov
inc
mov
subb
xor
xlat
lcall
cwtl
and
xchg
test
insb
fistps
loope
out
repz
fsubr
mov
mov
mov
daa
jmp
lods
xchg
xor
mov
mov
rsm
test
inc
mov
das
test
add
mov
pushf
scas
mov
push
mov
outsb
loop
or
ret
jmp
int3
or
test
repz
mov
jo
jno
inc
lods
test
mov
xchg
jno
test
je
mov
lea
add
or
das
push
movsl
jbe
test
scas
inc
mov
mov
lret
mov
pushf
xchg
mov
aam
cmpsl
adc
enter
movsb
imul
mov
int3
aas
add
test
ret
inc
test
add
dec
mov
test
inc
mov
cmpsl
movsl
adc
enter
test
inc
test
cltd
test
inc
lea
int3
cmpsl
addb
mov
subb
out
sub
int3
pushf
mov
add
mov
dec
mov
test
cmpsl
sub
lods
mov
pop
lods
cmpsl
adc
sbb
test
xchg
repz
pushf
push
mov
int3
cmpsl
inc
inc
mov
pop
add
mov
mov
push
xor
xor
xchg
test
add
inc
iret
test
je,pn
or
xchg
stos
cmp
add
shrl
or
pop
cmp
xlat
mov
mov
mov
lahf
icebp
jp
xchg
je
jp
mov
cwtl
jp
sahf
test
mov
mov
mov
repz
mov
pop
mov
mov
mov
test
cmp
stos
stos
mov
test
lds
repz
test
scas
stos
mov
cld
mov
test
dec
ret
mov
test
mov
cmp
mov
out
sub
mov
int3
cmpsl
lds
icebp
mov
mov
mov
int3
repz
xchg
pop
mov
sub
cmc
outsb
test
xchg
mov
mov
xchg
aam
repz
sub
cmpsl
stc
mov
sub
xchg
nop
movsb
mov
fcmovne
rol
mov
scas
ljmp
enter
mov
test
mov
mov
mov
mov
repz
mov
lods
test
mov
mov
mov
pop
lods
cmp
lods
repz
int3
jb
les
icebp
test
mov
mov
int3
cmpsl
scas
inc
mov
test
cmp
scas
dec
cmpsl
cmpsb
push
popf
fists
test
cmp
xchg
icebp
test
sbb
lcall
out
ds
mov
sahf
icebp
cmp
enter
lea
pop
test
jnp
cmpsb
mov
mov
jp
enter
jnp
xor
mov
mov
mov
jp
out
test
pop
mov
jp
mov
add
dec
stc
gs
lods
fcoml
repz
jp
enter
stc
gs
pop
xchg
mov
stc
jo
mov
test
pop
xor
stos
das
mov
push
test
icebp
cmp
test
scas
stos
pop
scas
xor
je
cli
mov
mov
popf
mov
sbb
daa
hlt
adc
outsb
repz
adc
les
mov
hlt
mov
sub
repz
sub
out
mov
out
test
fs
das
repz
fsubl
test
lods
xchg
mov
aam
cmpsl
xchg
adc
icebp
out
sub
test
add
xchg
repz
fadd
mov
mov
cmpsl
add
test
inc
lea
movsl
pushf
push
mov
int3
test
mov
cltd
test
add
cs
pushf
cli
mov
int3
cmpsl
mov
stc
lea
lea
repz
mov
cmpsl
loopne
cmpsl
test
and
mov
pushf
in
rcrl
and
fdivrl
mov
lds
sub
mov
push
mov
pushl
mov
scas
out
aam
das
xlat
aas
mov
pop
push
test
xlat
or
sbb
test
xlat
add
mov
fsts
xchg
mov
int3
xchg
adc
enter
cmp
movsb
xchg
mov
dec
cmpsl
mov
mov
sbb
int
stos
mov
in
cld
mov
scas
push
test
mov
pop
jecxz
cltd
xlat
and
repz
faddl
test
mov
lahf
out
lret
pusha
cmc
int3
lods
iret
mov
xchg
xchg
daa
out
lret
test
sub
ret
mov
pusha
mov
and
rcrl
pop
mov
mov
mov
test
cmp
sahf
inc
mov
and
mov
jns
insb
daa
mov
mov
xchg
mov
test
lods
mov
leave
int3
xchg
cmp
mov
mov
test
test
mov
daa
push
shll
push
or
hlt
int3
cmpsb
pop
test
xor
inc
fimull
movsb
test
dec
fstps
cwtl
mov
int3
sahf
vmptrld
xchg
mov
repz
enter
sub
test
mov
out
xor
out
outsb
jbe
xchg
test
dec
sub
scas
mov
jbe
test
ret
adc
repz
sub
adc
movsl
mov
pop
mov
cmc
stos
xchg
in
pop
test
shll
test
xchg
fxrstor
pop
mov
xchg
inc
aad
js
mov
and
add
push
sub
test
xchg
add
and
repz
les
lahf
aam
movsl
stos
aam
pop
mov
sub
xchg
das
mov
sub
test
adc
push
enter
repz
add
out
mov
xchg
sahf
test
lret
mov
or
test
test
test
scas
xchg
test
xchg
mov
iret
rcrb
lea
mov
sub
mov
push
fistpll
mov
int3
xchg
adc
sbb
outsb
repz
movsb
lea
mov
int3
test
mov
outsl
je
aas
aas
sahf
test
aas
lea
mov
push
xchg
dec
iret
cwtl
mov
mov
sbb
dec
cmc
mov
out
stos
or
mov
addr16
scas
icebp
outsl
mov
lods
xlat
cmpsb
cs
rcrl
int3
pop
out
ret
xchg
test
es
mov
int3
cmpsl
addr16
xchg
daa
pop
jb
mov
mov
pop
jbe
stos
pop
test
xchg
dec
dec
movsl
lds
adc
les
dec
fs
mov
jbe
lea
mov
mov
pop
adc
sahf
jbe
mov
mov
sub
or
dec
cmc
jbe
xchg
xchg
or
mov
pop
mov
lds
je
test
jge
push
sbb
mov
lods
mov
mov
stos
dec
inc
shrl
shl
cmpsl
ret
lea
dec
iret
sub
mov
dec
mov
call
xchg
lret
in
shll
push
in
scas
scas
push
mov
inc
adc
sub
sti
lods
pop
mov
jmp
outsb
lahf
mov
jecxz
push
out
mov
lds
xor
aaa
in
lods
leave
xor
test
pop
push
addr16
loopne
inc
popa
pop
insl
in
fsubl
in
mov
fisubrs
in
cltd
loope
xor
lods
dec
scas
je
aas
shll
aad
lods
in
or
insl
inc
rep
inc
xor
xor
mov
xchg
mov
cmpsb
in
ret
mov
lcall
fucomip
push
lods
clc
shlb
jne
inc
fwait
repz
in
or
popf
js
scas
mov
les
lahf
in
loope
pushf
enter
or
outsl
mov
int3
jl
jnp
sub
jmp
inc
daa
jle
mov
mov
int
daa
or
mov
mov
fwait
cwtl
lahf
insb
pop
movsb
in
and
je
mov
jbe
xlat
lahf
clc
mov
push
jbe
mov
daa
pop
gs
les
jecxz
stos
mov
movsl
dec
mov
sbb
mov
lea
mov
push
xchg
dec
fwait
mov
loopne
xchg
lods
jbe
ftst
sahf
xchg
lds
test
mov
scas
sbb
stos
cwtl
dec
popf
aam
xchg
mov
in
pushf
xchg
test
mov
pop
push
movsb
addr16
popa
cmc
cmc
mov
in
aam
int
clc
stos
lea
xchg
xchg
xor
xchg
clc
dec
mov
pop
fs
cmp
pop
in
loopnew
lods
mov
inc
insb
jg
stc
aaa
adc
insb
jo
in
repnz
sbb
mov
lods
adc
inc
cmpsl
sbb
xor
cmp
fwait
lea
mov
xchg
in
mov
jae
fdivl
jecxz
pop
mov
cmpl
inc
lahf
mov
pushf
imul
add
outsl
jg
repz
pop
mov
je
dec
out
xor
aas
jo
mov
sbb
add
popf
stc
daa
mov
or
bound
aad
insb
mov
shll
in
scas
addr16
jp
mov
popf
xor
stos
out
loope
popf
lods
pop
scas
mov
mov
loope
idiv
or
imull
jbe
xor
jmp
cmp
lcall
loope
lods
repnz
xchg
fcoml
lea
add
sbb
adc
sbb
rcll
or
sbb
popf
in
and
mov
jecxz
pusha
sub
and
jno
mov
ds
int
test
fnsave
aam
lods
mov
movsb
iret
mov
outsl
xor
inc
push
push
or
movsb
fwait
rep
aaa
mov
fcoml
jo
and
mov
xor
das
dec
les
push
mov
pop
movsb
es
mov
cmpsl
cltd
addr16
lods
lds
fcmovne
jb
lods
adc
mov
cmpsl
scas
lret
sbb
mov
test
adc
movsb
sub
cmp
dec
pop
scas
cmpsl
fldenv
pop
sub
test
scas
xchg
ljmp
imul
pop
pop
mov
out
aas
ja
dec
arpl
sub
xor
mov
lret
decb
jmp
mov
and
ret
push
rclb
cmc
das
jo
adc
pusha
scas
negb
xor
jne
mov
inc
jecxz
out
daa
div
out
xor
sbb
fsubs
jp
push
mov
out
mov
in
ficoms
pop
fisttpll
and
fldt
insl
loopne
pushf
mov
pop
loope
movsl
push
in
out
shl
addl
in
pop
loope
rcrl
pop
sub
fisubs
leave
cmp
pop
fcoml
push
dec
lea
xchg
jge
es
cmpsb
pop
pushf
sub
gs
inc
dec
or
mov
dec
mov
mov
ficomps
adc
scas
push
mov
addr16
movsb
sub
int3
cmc
test
ret
mov
insb
and
adc
fnsave
hlt
cmpsl
jg
mov
jae
pop
fsubrp
test
push
les
lods
add
dec
stos
push
xor
mov
fwait
add
loope
pop
add
enter
jmp
iret
out
xor
lahf
insb
mov
jne
mov
cmpsl
aam
cmc
rcrl
and
sbb
mov
mov
sbb
mov
push
mov
pop
mov
or
xchg
mov
sbb
loop
mov
rcrb
xchg
cmp
ljmp
in
sbb
int3
lahf
mov
push
aas
leave
xchg
mov
inc
les
rorb
daa
data16
xchg
mov
arpl
mov
xchg
mov
movsl
testl
or
dec
outsb
mov
addr16
mov
popf
int
mov
clc
sbb
aas
repnz
ja
aam
dec
push
cmp
xchg
imul
push
jmp
insb
jmp
insb
repz
hlt
lods
jl
es
inc
sub
shr
mov
popf
jle
mov
insl
movsl
repz
sub
mov
cwtl
sbb
inc
scas
jns
cli
subl
out
xchg
or
shr
mov
mov
aad
xor
cmpsl
out
cmp
mov
inc
sub
pop
in
gs
arpl
out
add
push
xor
push
mov
mov
mov
test
fcmovnu
lahf
adc
sub
divb
fwait
xchg
sbb
and
insb
adcb
dec
jge
mov
and
mov
nop
cli
jb
jecxz
mul
lcall
scas
scas
xchg
in
out
test
insl
pop
lds
call
add
jns
stos
xchg
jo
test
and
mov
int
jge
xor
mov
mov
aam
pop
push
push
cmc
mov
mov
jmp
mov
and
or
pop
mov
cmp
cmp
testb
mov
pop
lahf
push
xor
add
push
xor
ljmp
sarl
insl
jg
adc
xor
sbb
jns
clc
or
xchg
mov
sub
add
dec
mov
adc
popf
outsb
mov
xchg
inc
cmp
xchg
shrb
xlat
mov
movsl
in
fldenv
scas
leave
loope
int
jno
push
mov
lea
jecxz
movsb
shl
pop
mov
push
jns
xchg
sub
shrl
and
pop
mov
stos
add
mov
pop
xchg
pop
seta
outsl
sub
cmpsl
inc
popf
and
push
fldt
ja
ret
cmc
cwtl
dec
test
xchg
mov
imul
testl
rcll
mov
scas
mov
or
test
lret
scas
mov
mov
lods
and
mov
mov
dec
pop
jecxz
xor
xor
pop
xor
adc
popf
iret
or
in
out
adc
test
lods
lea
push
in
mov
fisubrs
lods
xchg
mov
sub
pop
mov
rcl
xor
inc
xchg
add
out
scas
dec
int
js
cmpsb
or
pop
xlat
dec
pop
pushf
pop
lcall
movsb
mov
mov
jo
mov
dec
int3
push
mov
iret
out
and
or
mov
fsubp
lahf
xchg
jbe
cwtl
outsb
imull
std
jp
ss
jne
cltd
ljmp
in
cld
lods
hlt
sub
test
mov
enter
lods
test
repz
lods
loope
call
push
icebp
lods
lock
xchg
xor
push
mov
mov
outsl
mov
arpl
sub
mov
pop
adc
adc
inc
cmc
jo
mov
cwtl
push
outsb
cld
mov
xor
xchg
stos
adc
test
mov
ret
pushf
clc
ja
fwait
shll
xchg
mov
loope
pop
and
mov
sbb
sub
or
nop
stos
fstpl
xchg
test
xchg
daa
stos
mov
das
stos
aas
in
add
cltd
pop
mov
gs
mov
sbb
enter
mov
cmpsl
add
sbb
pop
jns
sbb
cwtl
bound
mov
test
stc
pop
xor
xchg
push
cmpsl
mov
loope
pusha
and
popa
mov
movsb
sub
mov
mov
inc
ror
out
dec
mov
mov
sbb
mov
mov
mov
mov
dec
fldenv
fs
hlt
out
gs
xchg
jne
mov
mov
push
cld
popf
xor
scas
movsb
insb
mov
fimuls
out
in
loope
jl
ja
imulb
xchg
test
lods
fistpl
and
and
scas
popf
pop
mov
shrl
loopne
test
sbb
sbb
out
cmpsl
es
fcmovnbe
lahf
ret
xlat
insl
add
outsl
sbb
and
loopne
in
mov
push
sbb
lods
mov
sahf
lods
popf
pushf
das
lea
xchg
popf
mov
ret
pop
pushf
sbb
adc
pusha
das
test
pop
push
pop
inc
out
test
loopne
dec
rol
out
pop
loopne
lods
xchg
lea
mov
mov
mov
mov
test
mov
mov
jo
jmp
pop
xor
xchg
sbb
add
and
fiadds
inc
pop
add
fwait
mov
jle
mov
addb
rcr
xchg
mov
out
cmc
enter
pop
pop
outsl
mov
scas
das
mov
daa
divb
cmpsb
pop
inc
aam
xchg
mov
xchg
popa
in
stos
in
inc
lods
and
int
into
shlb
movsl
scas
pusha
lahf
jecxz
popf
and
in
cmpsl
popa
in
icebp
je
sbb
inc
movsb
data16
lock
lahf
test
xchg
push
nop
pushf
movsl
sub
inc
jnp
nop
pop
das
mov
dec
mov
mov
cmpsl
insl
cli
sbb
roll
movsb
dec
jo
movsb
inc
lds
pop
mov
mov
push
sbb
sub
jno
out
mov
loope
fcompl
scas
aas
push
test
push
shld
push
out
pushf
pop
out
jmp
or
cmp
sbb
repz
scas
fistps
xchg
inc
xor
jo
out
mov
into
data16
loopne
cmc
pusha
fsubl
and
cmp
arpl
dec
shrb
mov
mov
out
mov
add
pushf
push
mov
jbe
ficoms
lret
adc
pusha
xchg
sub
fsubrl
repz
xchg
clc
ja
add
push
fcoml
data16
popa
jg
ret
mov
fstpt
inc
in
adc
or
pusha
out
sqrtps
pop
bound
rcrl
icebp
pop
push
push
sahf
test
mov
jae
arpl
lock
outsl
std
xor
arpl
push
out
mov
jbe
arpl
sub
loope
in
fsubr
or
mov
stos
imul
in
dec
and
int3
cmc
cmpsb
movsb
mov
jae
notb
lock
fs
fisubl
xor
cmpsl
fistps
add
adc
dec
cmpsl
fcompl
mov
pop
pop
mov
movsl
or
pusha
sbb
adc
scas
lods
push
test
mov
ret
sbbb
cmpsb
mov
sbbb
stc
dec
out
ss
jl
mov
mov
mov
mov
cld
mov
or
ficoms
test
jge
mov
cmc
mov
xchg
mov
sub
jo
jmp
into
insb
cmpsl
add
mov
in
fdiv
push
mov
mov
cltd
insl
lods
in
jno
sbbl
les
insb
daa
lahf
inc
mov
out
mov
cmp
add
dec
add
loopne
cmpsb
mov
cmc
push
mov
add
and
mov
leave
add
scas
lea
mov
in
mov
daa
jmp
mov
sbb
mov
sbb
mov
movsb
sub
iret
mov
sbb
aam
int
cwtl
sbb
in
andl
loopne
xchg
test
pop
andb
ficomps
iret
in
and
in
imul
jae
sti
xor
push
cs
aaa
lods
scas
out
xor
out
je
push
fcomi
fwait
or
cmpsl
pushf
pop
out
mov
les
mov
insl
push
push
cmpsl
push
imulb
push
mov
movsl
cmpsl
xor
mov
jne
pminsw
lahf
scas
dec
in
fcomp
test
jmp
mov
ret
insb
xchg
shrl
mov
cld
lea
cmpsl
add
cltd
test
push
cltd
sbb
loop
sahf
mov
test
aas
dec
ret
sub
pushf
sub
mov
xor
pop
add
nop
test
pushf
mov
test
push
xchg
and
fisttpl
xchg
ljmp
lahf
test
mov
inc
xchg
xchg
xchg
pushf
pop
mov
add
push
pop
test
cs
cwtl
test
xchg
xchg
and
mov
mov
mov
xchg
mov
mov
cmc
jae
cmc
shll
xor
lds
pop
xchg
lds
cltd
loop
pushf
movsl
dec
test
movsl
ret
inc
adc
test
mov
add
ret
xchg
movsl
pushf
test
test
fwait
xchg
and
jmp
lahf
scas
jmp
mov
add
pusha
test
int3
leave
adc
pop
mov
btc
les
dec
test
std
dec
fwait
lods
cmpsl
cltd
mov
mov
pop
in
test
sub
fwait
sahf
mov
mov
jp
popf
popl
gs
test
mov
lods
insb
dec
mov
pop
test
rcrl
cltd
fwait
sahf
lahf
adc
pop
mov
aaa
dec
mov
pushf
mov
xchg
fwait
shrl
lea
pushf
pop
mov
mov
cmpsl
and
xchg
lods
lcall
mov
xchg
int3
loope
imul
test
jbe
test
scas
dec
test
jb
repz
sbb
mov
cmc
lea
and
shl
sub
jge
outsb
sub
lds
pushf
mov
test
lret
xchg
xchg
movsl
dec
xchg
pushf
pop
mov
lods
test
sahf
out
in
int3
inc
xchg
fbld
in
call
mov
cmp
cwtl
mov
movsl
inc
test
insl
aas
in
pushf
fwait
and
movsl
xchg
mov
pushf
pop
test
mov
stc
xchg
push
mov
in
pushf
ret
jo
popf
les
push
lods
scas
pop
xchg
push
ror
lods
adc
in
jae
imul
test
test
xchg
xchg
and
xchg
sub
in
pushf
mov
test
lret
rcll
cmc
mov
inc
lds
mov
pop
push
lods
call
sahf
test
mov
cltd
xor
mov
mov
cmc
lds
cmpsl
sbb
sahf
mov
cltd
shld
les
or
mov
mov
pop
lds
shll
mov
outsb
pushf
cmc
mov
enter
mov
mov
lea
popf
rcrl
cmpsb
mov
cltd
mov
and
fwait
rcrl
popf
xchg
pop
leavew
jbe
mov
pop
stos
popf
sahf
test
popf
lcall
xchg
xchg
xchg
pushf
pop
leave
test
fwait
xchg
stc
mov
mov
test
cltd
mov
xor
pop
scas
aas
out
mov
cltd
lcall
mov
xchg
cmp
pushf
enter
xchg
and
aas
mov
sahf
test
push
xchg
lods
cs
pushf
call
gs
mov
nop
sub
mov
gs
mov
mov
cmc
mov
dec
fwait
jne
fwait
shrl
lods
cmpsl
outsl
aas
in
cwtl
scas
jo
mov
out
lods
mov
mov
mov
rcll
pop
xchg
fwait
pushf
mov
sbb
mov
loope
mov
test
cmp
lret
mov
imul
add
jno
mov
cltd
mov
inc
mov
mov
lods
out
je
pop
lods
xor
fwait
mov
or
cmpsl
jns
mov
fwait
cltd
mov
mov
jbe
sub
sbb
mov
mov
mov
xchg
adc
mov
mov
jno
mov
mov
cltd
pop
jmp
lahf
pop
mov
mov
sub
je
loopne
mov
xchg
jmp
ret
mov
pop
scas
aas
cmpl
and
mov
cltd
fmul
insb
cwtl
xchg
cld
xchg
xchg
mov
fstcw
fwait
in
mov
mov
sub
lods
test
cmc
cmpsl
shll
jbe
jmp
jae
lods
popf
ficoms
xchg
xchg
xchg
lahf
adc
pushf
outsb
mov
mov
iret
push
pop
push
cmc
test
test
pushf
inc
in
jmp
push
xchg
out
xchg
mov
mov
test
jnp
loope
outsl
je
loope
outsl
je
loope
stos
insb
int
test
scas
mov
sbb
cltd
add
xchg
dec
pop
mov
add
es
cmc
scas
pushf
lahf
addr16
pop
mov
insb
pop
xchg
xchg
fwait
or
xchg
cld
dec
stos
sbb
setg
mov
pop
leave
jb
sbb
xor
lods
cmc
imull
mov
shrl
mov
imul
hlt
mov
out
iret
stos
mov
scas
addb
lds
lods
pop
mov
sub
jge
dec
out
xchg
pusha
inc
xlat
test
push
mov
dec
popf
mov
stos
fwait
sbb
mov
lds
shrl
cs
fs
mov
push
stos
lret
fwait
ret
mov
lahf
test
lods
mov
dec
movsl
sbb
aas
icebp
scas
daa
mov
mov
das
lods
cmp
ds
je
enter
sub
lods
insl
enter
test
enter
sub
fwait
sahf
scas
popf
push
pushf
jmp
into
add
das
mov
mov
addr16
mov
mov
xor
mov
sbb
aad
enter
push
mov
cmp
mov
mov
adc
inc
cld
lea
xor
lods
push
cltd
inc
stos
shlb
xchg
mov
push
jle
stos
mov
stos
into
cld
pusha
ret
leave
mov
pop
push
cmpsl
cmc
adc
lahf
mov
int3
mov
stos
cmpsl
jns
inc
mov
mov
movsb
mov
lods
xor
pop
movsl
mov
ljmp
adc
pop
lahf
cmc
mov
mov
dec
popf
popl
rcrb
mov
aas
lds
mov
in
push
lods
rcrb
scas
sbb
test
sub
ljmp
xchg
lods
in
pop
cmpsl
sub
lea
ret
mov
sbb
mov
outsl
out
mov
mov
out
mov
pop
mov
sbb
movsl
je
imul
test
mov
xchg
xchg
scas
mov
fs
lods
enter
mov
xchg
mov
jmp
cmp
xor
insb
outsb
mov
cmp
mov
fld
pop
je
mov
lea
jg
jg
repz
mov
fwait
sbb
xchg
inc
sahf
lea
push
mov
ffreep
sbb
dec
das
popf
dec
icebp
rcrl
je
loope
stos
mov
add
sub
mov
je
lods
mov
repz
adc
pushf
jae
int
daa
insl
mov
popf
lods
pop
mov
lahf
cmp
xor
xchg
insb
call
lods
std
jne
lods
je
cld
mov
mov
ret
xchg
lods
mov
lods
inc
mov
movsl
sbb
mov
insl
mov
addr16
pop
mov
movsl
pop
pushl
cmc
xlat
cmpsl
enter
jecxz
in
mov
pop
mov
mov
popf
lahf
mov
int3
cmp
stos
je
mov
lods
mov
daa
mov
fwait
lods
jp
pop
inc
ret
xor
pushf
insb
ret
pop
imul
dec
outsl
test
dec
imul
mov
fwait
das
mov
mov
movsl
mov
lods
pushf
test
dec
mov
das
lods
lea
xchg
out
mov
xchg
jp
scas
sbb
jle
leave
cmp
pop
xchg
mov
popf
dec
test
movsb
ss
popf
mov
sbb
fcomps
fs
out
mov
das
xchg
lea
mov
rcrl
push
icebp
rcrb
pop
js
xor
lods
inc
dec
mov
xor
pushf
outsb
insl
test
or
mov
mov
mov
cmp
jne
mov
popf
xchg
xchg
dec
pop
lahf
xchg
mov
ret
push
test
mov
jg
gs
cmp
cmc
add
fwait
popf
or
dec
mov
mov
bt
movsl
test
ror
stos
mov
mov
mov
fwait
xchg
or
les
addr16
ret
mov
lods
cmc
mov
cld
mov
mov
mov
scas
mov
lods
scas
sbbl
jbe
mov
xchg
stos
cltd
aam
pop
xchg
lahf
or
mov
loope
push
pop
push
xchg
cwtl
cmc
cmp
pop
repz
icebp
lds
lods
sub
ss
jge
dec
iret
mov
inc
xlat
xchg
or
lea
lea
lea
out
scas
int
daa
or
xor
andb
mov
popf
cmp
daa
xor
pushf
push
lods
outsb
lods
call
pushf
stos
imul
mov
jmp
pushf
cwtl
push
and
stos
mov
popf
ljmp
imul
test
stos
adc
in
mov
inc
stos
sbb
mov
daa
xchg
jno
mov
ret
xchg
mov
mov
das
mov
push
mov
and
fs
fs
mov
adc
fs
lds
out
jmp
mov
mov
fs
fs
mov
fs
mov
xchg
mov
out
daa
in
mov
pop
cmp
into
std
sub
int
xchg
addr16
mov
mov
repz
pop
lods
test
sub
mov
clc
cmpxchg
or
or
push
insb
cmpsl
les
stos
sbb
add
data16
mov
mov
mov
aas
ss
cld
mov
mov
mov
das
cltd
xchg
jbe
xchg
jmp
je
loope
pop
mov
xchg
bound
outsl
stos
sbb
aas
mov
sbb
aas
fwait
icebp
insb
out
ja
mov
scas
cmpsl
xchg
mov
pop
ja
lahf
cmp
add
mov
lea
xchg
stos
cltd
sbb
inc
sahf
mov
test
lods
jg
jns
stos
sbb
xlat
shlb
jecxz
mov
aad
xchg
stos
fdivrl
mov
add
test
cmp
aad
test
xchg
stos
test
out
jbe
out
jo
mov
mov
lahf
scas
loope
lahf
cld
outsb
lods
or
xchg
xchg
scas
into
cmp
lcall
xchg
jns
lahf
out
scas
shrb
inc
sub
jne
mov
sbb
imul
xchg
out
push
out
movsl
sbb
les
test
int
int
sahf
xchg
outsb
int
push
pop
xchg
pop
jl
mull
insb
hlt
jnp
lods
push
or
daa
test
jg
out
repz
out
das
xchg
fwait
sbb
cmc
xchg
lods
pop
cltd
mov
pop
mov
popf
movsb
mov
lea
or
aad
nop
stos
push
adc
mov
lock
test
jo
cmp
jge
int
cltd
mov
stc
stos
mov
fisubs
scas
xchg
mov
xchg
mov
ret
xchg
xchg
dec
lea
mov
scas
mov
pop
lds
scas
cltd
ljmp
scas
iret
mov
pop
stc
mov
test
movsb
stos
addr16
mov
lds
push
lock
mov
sub
mov
or
lock
scas
mov
adc
mov
mov
mov
pop
mov
insl
mov
pop
movsl
hlt
mov
lahf
imull
popa
lods
cmp
push
mov
xchg
je
xor
call
test
dec
iret
mov
jmp
or
mov
js
cmp
stos
je
cltd
cmpsl
sub
stos
pop
lock
scas
mov
fists
mov
jbe
sub
sbb
pop
push
popf
cmc
adc
imul
pop
xchg
xorb
out
stos
stos
sbb
inc
scas
dec
mov
mov
xchg
sub
push
lahf
loope
push
mov
jmp
xchg
cltd
cmpsl
xchg
sbb
lea
pop
or
jno
mov
jg
daa
and
lds
ror
fldcw
stos
into
mov
mov
fwait
adc
fcompl
cltd
jmp
or
lahf
cmc
leave
mov
lods
xor
popf
push
mov
add
das
lods
test
inc
stos
add
je
mov
xor
cmpsl
cmpsl
jmp
setae
mov
jb
scas
int3
mov
and
stos
je
jb
movsl
xchg
xchg
int3
loope
imul
inc
mov
icebp
mov
mov
mov
rol
jb
xchg
xchg
sub
jge
and
jmp
mov
jmp
mov
mov
leave
mov
mov
lea
mov
pop
lods
test
leave
test
repnz
xchg
cmp
lea
xchg
xchg
pop
sub
stos
sub
mov
xchg
lods
jbe
enter
mov
std
mov
ret
mov
cmp
jno
repz
popf
addr16
lahf
addr16
leave
addr16
pop
lods
xor
das
cltd
add
lea
cmpsl
mov
xor
sub
inc
mov
out
popf
inc
imul
lea
outsb
lods
pop
movsl
jo
jae
mov
mov
rclb
mov
mov
sub
mov
je
jge
int
or
jne
mov
pop
mov
mov
mov
mov
mov
mov
push
jo
mov
out
jmp
dec
ret
insl
iret
dec
daa
iret
dec
ret
mov
repz
popf
xor
xor
je
fnsave
pop
popf
xor
and
mov
mov
cmc
mov
popf
xor
pushf
shll
mov
popf
ss
cmp
ja
scas
int
daa
out
mov
cwtl
xchg
mov
je
sub
mov
inc
mov
push
pushl
mov
sbb
repnz
pop
sbb
fstps
gs
loopne
mov
sbb
pop
sbb
dec
sbb
sbb
push
sbb
std
sbb
jns
mov
sbb
sbbb
imul
dec
ljmp
out
pop
cmpsl
mov
sub
lea
lea
lea
lea
int
stos
pop
lock
enter
xchg
jno
mov
movsb
mov
pop
xchg
xorb
sbb
test
push
stos
pop
scas
xchg
fwait
aam
pop
mov
lea
xchg
xchg
dec
pop
mov
add
jno
repz
mov
popf
std
sbb
stos
sub
push
fwait
ljmp
scas
enter
xor
lahf
jge
lea
lea
dec
out
cltd
mov
adc
inc
out
xchg
inc
out
jl
out
ds
out
stc
inc
out
les
xchg
inc
inc
scas
in
xor
or
popf
pop
out
or
movsl
pop
pop
or
lea
or
xchg
jge
or
mov
mov
je
xor
xchg
idivb
test
stos
sub
cmpsl
out
sbb
cmpsl
sbb
mov
push
mov
popf
scas
movsb
scas
pop
mov
ret
addr16
lahf
adc
movsl
les
mov
lret
jmp
int
daa
iret
icebp
xchg
sahf
test
aaa
fwait
cmc
cli
ret
inc
mov
jno
mov
sub
int
mov
mov
xor
setnp
btc
mov
push
mov
repnz
xchg
popa
mov
xchg
xchg
mov
xchg
pop
cmpsl
cmc
ret
lods
enter
leave
jno
je
sub
scas
fnstenv
loope
ljmp
mov
push
ret
jo
or
subb
in
lods
xchg
mov
scas
and
xchg
mov
ret
adc
pop
xchg
jbe
xchg
adc
sub
mov
jae
movsl
lea
or
into
cld
xchg
mov
cltd
into
les
mov
xchg
push
sbb
cmp
jne
sbb
lods
xor
in
movsb
cltd
shll
mov
ret
pop
aam
stos
divps
mov
mov
mov
jmp
xor
cmc
jne
mov
or
mov
rcll
jne
mov
lods
jbe
leave
les
inc
xchg
lahf
out
sahf
dec
xchg
cmpsl
xchg
scas
int3
mov
push
mov
into
ret
jbe
ret
sbb
je
or
ja
xchg
or
ret
mov
inc
idivl
mov
sbb
call
lods
popa
push
mov
sub
sbb
mov
mov
xor
or
mov
lods
in
mov
test
cmpsl
cltd
fstl
mov
fwait
cmpsl
ja
aad
bound
xchg
lods
popf
push
mov
stos
je
fnstenv
mov
cmpsl
mov
out
xchg
scas
push
fsubrl
add
push
xchg
xchg
scas
pop
pop
cltd
cmp
lahf
cltd
mov
repz
xchg
xchg
dec
pop
mov
mov
pop
mov
mov
cmc
test
mov
stos
les
je
pop
cltd
jg
push
jnp
stos
mov
mov
mov
lods
je
xlat
ffreep
lcall
cmc
shll
cmpsl
xor
imul
sbb
aas
xchg
icebp
insb
daa
mov
pop
lahf
fwait
lods
mov
mov
xchg
mov
scas
addr16
pop
sub
jmp
dec
ror
jb
lcall
mov
scas
sub
push
lods
insb
icebp
outsb
daa
sub
fisubrl
mov
xchg
stos
xor
sub
pop
jno
int
jbe
stos
fistps
inc
imul
cld
ljmp
mov
xchg
aam
movsb
lahf
ja
xchg
jne
fldenv
lahf
ret
pop
dec
out
lods
xchg
dec
xor
enter
into
cld
pusha
leave
leave
mov
mov
iret
leave
push
cmpsl
push
mov
lds
cmp
mov
jo
push
repz
test
lahf
repnz
ljmp
pushl
mov
mov
mov
std
mov
mov
mov
dec
test
sbb
mov
fmulp
dec
xor
push
stos
pop
mov
fwait
aam
pop
lea
into
add
pop
lea
mov
lcall
inc
sbb
ret
movsl
in
mov
xchg
scas
es
ss
stos
mov
pusha
int
push
fwait
xchg
scas
mov
pop
lods
cmc
sbb
mov
scas
ljmp
les
mov
je
fld
pop
cltd
je
and
out
sbb
cmp
mov
jbe
daa
mov
lods
insb
mov
popf
lods
enter
mov
mov
je
pop
mov
lahf
cmp
je
pop
test
sub
lcall
ds
je
loope
outsl
je
loope
outsl
je
loope
outsl
je
loope
outsl
je
loope
je
or
ret
sub
lods
cmc
shrl
jmp
xchg
xchg
mov
out
or
test
cltd
mov
das
cltd
cwtl
dec
scas
sbb
aas
icebp
mov
xchg
loope
stos
xchg
dec
pop
mov
mov
out
xchg
lods
sbb
mov
pop
lea
pop
pop
mov
fcoms
scas
ljmp
xchg
addr16
popf
fwait
stc
movsl
sbb
mov
mov
sbb
mov
jmp
mov
popf
add
lcall
lcall
lahf
mov
les
cmc
mov
mov
test
aas
fwait
jno
mov
ret
aas
jno
sarb
jno
lods
jo
ret
push
stos
mov
scas
repnz
jno
pushf
aas
cltd
jno
cltd
aas
mov
cmpsb
aas
xchg
jno
mov
mov
pop
enter
pop
jg
cmp
sbb
lahf
xchg
jo
dec
xchg
mov
pop
sahf
jge
int
mov
xchg
mov
test
mov
lods
xlat
stos
movsl
movsl
movsb
ret
jae
add
jbe
cltd
movsb
mov
mov
mov
xchg
sbb
pop
lods
gs
out
xchg
mov
mov
xchg
inc
pop
mov
xchg
mov
mov
jecxz
cmpsl
pop
mov
mov
fs
jae
xchg
jecxz
mov
out
xchg
scas
push
pushf
insb
xchg
mov
pushf
xchg
scas
mov
fidivs
stos
sub
lods
and
sub
scas
dec
scas
jnp
lods
or
mov
or
cmc
lea
repz
mov
lds
mov
fwait
mov
mov
mov
jno
test
insb
pop
xchg
mov
in
scas
scas
das
lods
mov
mov
dec
mov
movsb
into
mov
mov
jbe
mov
mov
enter
jno
xchg
mov
xchg
jno
xchg
mov
mov
jno
mov
cmpsl
dec
dec
cmpsl
cmp
hlt
mov
sub
test
cld
xchg
stos
les
je
pop
mov
jmp
mov
lea
mov
xchg
cmp
xchg
xchg
repz
add
scas
cmc
mov
movsb
mov
lds
roll
jno
mov
repz
mov
lea
sahf
pop
sub
movsb
test
scas
cmpsb
push
pop
lds
les
xor
fwait
lret
sbb
inc
mov
mov
stos
popf
mov
fstl
repz
les
mov
bound
in
mov
mov
imul
lea
mov
mov
repz
mov
mov
repz
cwtl
xchg
mov
xor
sbb
aas
mov
sub
xor
jle
mov
and
stos
sbb
mov
stos
rorb
je
popf
mov
ffree
stos
xchg
data16
ret
lods
icebp
cltd
xlat
xchg
push
stos
icebp
mov
int
push
add
mov
jbe
cltd
xchg
jbe
mov
mov
sub
xchg
cmpsb
mov
cmpsb
iret
xchg
lahf
xor
push
out
xchg
movsl
push
pop
pusha
mov
mov
in
mov
cmpsl
enter
mov
xchg
les
push
jo
jae
rolb
mov
cmp
cmp
rcr
jl
stos
mov
push
inc
inc
pop
insl
sub
and
mov
xor
mov
imull
mulb
stos
or
jo
inc
insl
stos
adc
cmpsl
stos
push
nop
push
test
loopne
pop
xchg
bound
repnz
push
add
sub
out
sahf
pop
mov
pop
fidivl
xchg
fistpll
push
sbb
cmpsb
es
ret
lea
outsl
fistpl
insl
mov
xchg
xchg
das
imul
outsl
out
and
sti
lahf
addr16
xchg
mov
mov
stos
push
pushf
sahf
in
aam
clc
stos
mov
fiadds
xchg
sbb
popf
stos
and
adc
jne
test
scas
mov
outsl
out
nop
mov
sub
arpl
fistps
fstpt
in
inc
xor
pushf
adc
inc
out
mov
out
mov
dec
test
jnp
dec
cmpsl
movsb
adc
pop
and
mov
ss
stos
mov
popf
lods
mov
xlat
int3
lret
mov
push
pushf
mov
int
daa
sub
mov
pushf
xchg
xchg
int
daa
mov
pop
sahf
xor
pushf
das
mov
ds
std
cs
in
mov
dec
pushf
cmp
xchg
popf
leave
pop
mov
or
sahf
mov
popf
ss
xor
sub
scas
shll
xor
and
idivl
add
pushf
test
sahf
mov
popf
and
mov
mov
pop
mov
xchg
cmp
sub
movsb
mov
nop
in
ds
xchg
dec
lods
dec
or
jmp
pushf
in
pushf
mov
int
out
or
popf
adc
adc
lea
xor
xor
mov
mov
popf
mov
push
xor
pushf
cmpsb
sbb
push
daa
fwait
mov
popf
xor
sub
scas
add
inc
lea
int
cmp
setge
dec
arpl
mov
popf
sbb
pushf
scas
rcrb
mov
sbb
das
mov
popf
test
lods
push
and
xor
mov
or
pop
mov
popf
sbb
xor
pushf
sub
in
cmp
popf
or
push
xor
sbb
mov
mov
lods
into
shll
aaa
pushf
cmp
int
daa
dec
mov
popf
and
movsl
xor
sub
xor
lods
inc
popf
lds
cmp
cmp
mov
or
mov
xor
sub
inc
and
ret
mov
sbb
dec
lret
mov
sub
std
mov
jmp
daa
out
cmpsl
mov
psraw
mov
test
inc
jae
inc
mov
cmp
sahf
pop
sbb
movsl
pushf
and
mov
popf
lds
shll
mov
popf
in
lcall
and
icebp
sub
pushf
adc
cmpsb
xor
sbb
mov
cs
lods
lea
out
xor
movsb
test
mov
xor
ds
or
mov
mov
popf
and
movsl
xor
pushf
sbb
mov
pushf
inc
and
mov
adc
int
daa
dec
mov
popf
mov
pushf
sahf
mov
mov
sub
lds
mov
adc
adc
popf
or
mov
sbb
xor
xor
test
lods
shll
mov
xchg
mov
popf
mov
and
and
pop
fwait
int
daa
stos
mov
pushf
inc
bound
lods
inc
push
scas
mov
sub
in
mov
das
pushf
xor
mov
popf
leave
pop
xchg
xor
inc
out
into
sub
mov
popf
mov
pop
xor
pushf
es
enter
adc
and
add
int
daa
and
xor
mov
outsb
xor
loopne
mov
out
and
out
in
cmp
mov
xor
pushf
sbb
int
cmpsl
add
std
hlt
out
leave
sub
or
pushf
pop
dec
in
mov
xchg
in
mov
insb
int
daa
scas
mov
popf
out
jmp
aam
fdivs
mov
in
enter
or
lods
mov
adc
sbb
inc
jecxz
cmp
popf
sahf
pop
fistl
cmp
xchg
lods
jmp
aam
dec
das
mov
in
popf
jmp
lahf
adc
in
or
dec
rorb
fsubrl
jmp
jbe
jge
stos
es
in
scas
stc
push
enter
stos
or
jl
ss
lret
mov
mov
pop
das
dec
pop
ret
or
fistl
stos
iret
adc
mov
inc
stos
negb
outsb
fcompl
test
pop
fldcw
out
fs
rolb
movsb
dec
mov
mov
and
cltd
stos
push
fisttpll
dec
scas
test
stos
scas
dec
cmp
xor
mov
jp
mov
fsubrl
stos
test
dec
arpl
insb
or
test
sahf
mov
in
cmp
test
lret
aas
insl
insl
add
stc
xchg
or
cmp
xchg
loope
and
rolb
arpl
dec
or
leave
aam
imul
or
pop
arpl
add
add
mov
dec
sub
mov
lock
loope
stos
les
mov
sub
pop
mov
cs
adc
mov
inc
cmp
mov
pop
mov
inc
pushf
mov
pop
insb
jmp
or
rol
testb
mov
popf
imul
xor
fmull
movsl
movsl
stos
gs
mov
dec
outsb
insl
aam
out
mov
insl
cltd
mov
fsubrl
mov
shlb
push
fdiv
pop
adc
jmp
cld
pushf
add
mov
adc
je
or
outsb
int
dec
ucomiss
cmp
mov
jbe
stos
inc
insl
xor
push
fdivrs
scas
jnp
mov
mov
adc
push
rcrb
push
or
xor
neg
syscall
pop
aas
repnz
jmp
insb
xchg
andb
fnstsw
inc
mov
int3
into
xor
dec
adc
stc
lret
inc
jle
lds
arpl
add
xor
popf
pop
mov
xchg
in
shl
xchg
scas
jmp
pop
add
stc
mov
sahf
notl
outsl
cli
inc
fisubrs
stos
adc
push
mov
jns
sub
mov
fs
enter
dec
imull
jg
mov
dec
jb
out
push
test
jmp
jge
ljmp
stos
pop
add
cmp
push
test
push
stos
add
and
cmc
repz
adc
push
cmp
cmpsb
jo
sahf
stos
or
mov
sub
add
inc
fisubrl
repz
lock
test
pop
mov
push
xor
dec
push
mov
pushf
mov
dec
adc
std
inc
jp
sub
imul
arpl
and
add
mov
xor
stos
fsubs
xchg
cltd
pop
dec
stos
pusha
mov
rep
es
lods
and
out
test
push
loop
dec
lret
pop
stos
hlt
sub
push
mov
test
xchg
dec
popf
cwtl
subl
insb
or
push
and
cmp
ja
xorl
out
mov
lds
fstps
movsb
dec
push
cmp
lahf
mov
stos
mov
nop
push
xor
icebp
xor
fists
les
mov
in
add
sbb
xchg
and
add
mov
das
in
stos
loopne
cld
and
or
pop
lret
mov
or
xchg
mov
out
imul
ret
insb
ret
add
and
mov
dec
xchg
and
repnz
inc
fisubs
sahf
lods
mov
push
ret
imul
mov
mov
aad
and
ret
dec
stos
lock
out
rcl
xchg
jle
js
push
add
inc
test
inc
stos
faddl
mov
sub
mov
lods
sub
mov
push
add
imulb
mov
icebp
cli
out
mov
arpl
shlb
stos
movsl
sbb
stos
jecxz
aad
mov
enter
stos
mov
inc
std
jo
adc
sub
mov
stos
outsb
mov
int3
push
stos
outsl
shl
pop
jl
stos
in
data16
cs
fnstsw
int
mov
lods
rorl
fwait
xchg
xchg
ja
xlat
test
pop
lods
xor
adc
fisttps
sbb
or
push
repz
mov
jnp
mov
aaa
jb
mov
pop
push
inc
xor
jb
stos
pop
je
mov
fnstenv
pop
xor
and
pop
stos
jnp
cwtl
add
test
pushf
in
cmp
jno
jmp
adc
pop
movsb
cmp
stos
adc
scas
lock
faddl
lods
sub
in
pop
lods
dec
xchg
mov
stos
adc
xorl
arpl
xchg
scas
dec
subl
ret
f2xm1
cmp
fcomps
insb
mov
aaa
sbb
mov
add
fwait
cmp
stc
adc
lahf
push
fldt
mov
xor
sub
or
movsb
cmp
pop
lock
int
adc
mov
in
inc
in
cmpsl
inc
stos
mov
fidivs
icebp
stos
fldl
clc
stos
loope
andl
cmp
pop
mov
fs
xor
sti
imul
lds
insb
pop
dec
inc
test
sbb
loope
push
xor
std
lcall
sub
mov
push
fwait
repz
scas
push
xchg
mov
addl
inc
adc
sub
and
cmpb
loope
and
insl
jne
call
jle
mov
mov
add
pusha
sub
test
stos
xchg
adc
in
stos
lods
sar
sbb
mov
fwait
movsl
scas
leave
pop
jmp
iret
lods
mov
lock
mov
jg
inc
gs
adc
xlat
and
pop
sub
dec
mov
mov
or
scas
push
stos
cmp
flds
shll
sub
mov
mov
rorl
cld
stos
orb
cs
jns
fsts
mov
out
jne
xchg
cmp
sbb
lea
mov
mov
mov
stos
cmpsb
ljmp
lods
xchg
shr
arpl
std
imul
pop
ds
jl
bound
loop
mov
jmp
outsb
dec
js
sub
stos
ds
stos
cmp
daa
fmul
dec
push
aam
mov
adc
or
pushl
rol
mov
mov
shrl
pop
mov
and
xchg
mov
stos
movsb
jb
aaa
xchg
scas
add
add
mov
ljmp
cmp
mov
jmp
sbb
mov
mov
scas
dec
cmc
sbbb
stos
push
movsb
pop
in
outsb
test
in
jbe
dec
lds
fcoms
mov
mov
insb
stos
and
dec
add
mov
xchg
shrl
jo
mov
stos
fisttpl
aas
ror
pop
dec
subps
stos
stos
push
inc
fs
aam
and
pushf
stos
sub
xchg
fdivs
ffree
into
inc
leave
pop
mov
aaa
sahf
sub
mov
push
enter
xchg
outsl
mov
jg
xor
mov
sbb
in
mov
xchg
push
push
stos
push
mov
pop
mov
pop
push
lods
cmpsb
push
popa
and
nop
add
or
dec
std
fs
jne
push
movsl
dec
lret
or
mov
pop
ljmp
sbb
inc
imul
lea
fistpl
scas
push
fidivl
popf
mov
lods
in
xchg
adc
lahf
or
stos
sti
mull
push
push
xor
sub
dec
enter
pop
adc
stos
mov
rorl
dec
mov
rorb
mov
push
cltd
in
add
rorb
js
sbb
inc
mov
out
call
icebp
mov
insl
cs
pop
out
stc
mov
xchg
movsb
stos
lea
mov
pop
or
or
jmp
int
je
shr
lods
pop
jge
into
movsb
mov
stos
mov
movsl
sbb
xchg
fimull
inc
push
lods
loopne
sarl
and
or
mov
lahf
scas
dec
cmp
add
insb
outsl
dec
mov
das
lahf
cli
adc
jl
sub
icebp
cmpsl
jmp
scas
shll
push
stos
jg
jno
cmp
or
and
out
pop
mov
mov
or
jmp
adc
mov
bound
or
mov
sub
leave
or
bound
daa
out
mov
jl
lahf
cltd
stos
stc
popf
pusha
xchg
dec
cmp
mov
mov
mov
sbb
scas
lret
sbb
and
repz
and
aas
lea
sub
dec
mov
stos
jmp
pop
bound
xchg
sub
out
mov
stos
nop
cmp
cmp
movsb
pushf
mov
mov
in
addr16
or
pop
mov
fsubl
mov
int3
icebp
enter
fdivrs
das
pop
stos
pushf
leave
loop
jnp
sbb
mov
sub
inc
imul
ret
mov
jbe
nop
in
mov
mov
cmp
icebp
xor
insl
cmpb
test
loopne
lea
mov
lahf
sub
xor
mov
insb
mov
stos
mov
dec
xchg
in
sbb
pop
stos
xor
mov
inc
sbb
dec
mov
push
cmp
stos
out
xchg
test
aas
out
stos
and
mov
lds
mov
mov
dec
fisubs
push
aaa
push
fwait
cs
lock
mov
stos
mov
stos
jmp
int3
jl
sub
scas
fsubrl
add
xor
popf
arpl
adc
pop
xchg
xor
rorl
xchg
ret
stos
orl
add
mov
insl
pop
xchg
sbb
stos
mov
sbb
inc
inc
ficoms
shlb
mov
iret
sbb
test
js
orb
rclb
push
imul
pop
mov
sub
idivl
sub
stos
fdivs
adc
mov
fildl
hlt
push
lds
stc
imul
jge
sub
int3
stos
test
insb
sbb
gs
out
mov
or
xchg
scas
lahf
stos
sub
add
mov
adc
out
or
test
mov
sub
ljmp
stos
jmp
jne
sbb
addr16
imul
fwait
mov
sub
mov
in
js
outsb
iret
icebp
fwait
mov
imull
aad
jns
dec
lret
and
lret
mov
push
cmc
and
scas
push
fisubl
xchg
mov
fwait
xchg
nop
jae
cmp
stos
cmp
inc
ja
mov
pushf
inc
fwait
add
stos
test
in
mov
add
scas
stos
packsswb
stos
inc
loope
push
mov
lea
pop
stos
pop
test
les
ret
bts
or
sbb
lea
aas
stos
ljmp
pop
xor
dec
xchg
mov
sahf
pop
inc
stos
jo
out
sub
mov
insl
xchg
push
mov
pop
scas
inc
scas
add
jno
imul
jnp
jge
jb
mov
ret
mov
or
sub
ss
cs
mov
push
shrb
jecxz
sub
xor
pop
sbb
fimull
fistps
addr16
mov
cwtl
aas
pop
mov
cmc
loope
and
aam
jl
sti
stos
ret
dec
in
xchg
and
ret
adc
push
jge
stos
sub
and
and
jmp
pop
adc
mov
imul
faddp
insb
mov
ret
mov
js
push
or
add
insl
movsb
dec
iret
into
mov
push
push
stos
xor
shrl
mov
stos
aad
mov
jg
in
repz
outsb
in
pop
ret
stos
jmp
movsl
cld
jmp
jecxz
add
sti
mov
stos
mov
out
inc
lret
push
in
insl
inc
xchg
loope
lret
lock
mov
shll
sti
outsl
cltd
mov
mov
mov
mov
and
fdivp
push
add
xchg
stos
imul
std
fistpl
filds
pop
rcrb
mov
cmp
push
mov
jl
jmp
mov
pop
in
sub
imul
rcl
sti
aas
insl
mov
push
stos
lods
xchg
dec
int
dec
nopl
nop
stos
inc
jo
cmp
stc
inc
lahf
subl
sbb
leave
jae
xchg
lret
lock
cmp
stos
loope
aas
sub
sbb
stc
ret
lret
lea
test
mov
lahf
jb
jmp
add
lock
pop
add
insl
cmpl
fs
sti
adc
stos
dec
xchg
adc
dec
imul
lcall
setg
outsl
lcall
movsb
sti
repnz
in
insb
pop
push
adc
mov
mov
pop
sti
test
shll
sub
push
inc
inc
adc
mov
fxch
dec
dec
and
mov
mov
pop
rcl
jecxz
stos
nop
push
scas
mov
mov
cli
jmp
xor
int3
dec
mov
cld
lods
push
or
xchg
pop
xchg
push
jae
mov
stc
gs
js
sbb
jne
mov
or
popf
fisttpll
cld
ret
icebp
mov
mov
sbb
inc
sbb
dec
insb
push
testb
jae
xor
xor
fwait
movsl
cmp
insb
mov
jbe
adc
mov
mov
icebp
ja
inc
std
mov
pop
xchg
mov
lea
adc
xor
and
stos
cmc
sub
adc
sti
fiaddl
mov
jge
stos
lcall
sahf
stos
push
ja
mov
sub
add
sub
jne
shlb
pop
test
add
cs
adc
aaa
xchg
fsubrl
insl
adc
psubusw
outsb
outsl
icebp
rorb
idivl
mov
dec
push
jnp
insb
lcall
sahf
mov
jnp
cltd
stos
pop
add
mov
loop
xchg
rol
das
push
enter
stos
cmpsb
sub
add
sub
out
push
inc
pusha
movsb
stos
in
fidivs
stos
sub
and
cmp
insb
in
outsb
pop
push
lahf
stos
pop
and
cltd
popf
xor
add
jmp
mov
mov
inc
mov
out
jmp
jecxz
pushf
sbb
inc
test
add
lea
shrl
cli
pop
xchg
push
adc
movsl
jmp
inc
fwait
cs
jecxz
dec
ret
out
or
rcrb
shl
js
add
xchg
fsubp
in
insb
bound
jne
fwait
sbb
mov
mov
mov
mov
or
adc
fcmove
insl
lret
jmp
gs
mov
xchg
mov
into
jmp
int3
ficoms
jne
xchg
es
mov
lret
out
or
ret
push
lods
nop
testl
or
cmp
pop
ljmp
mov
dec
ss
cmp
data16
cmp
popf
xlat
rcrl
lea
cmp
sub
pusha
inc
or
loope
repnz
cmp
insl
scas
insb
loopne
rolb
movsb
mov
lahf
mov
inc
dec
mov
popf
dec
enter
dec
gs
inc
jle
mov
out
push
call
jno
stos
sbb
inc
sbb
out
push
adc
cs
mov
pop
and
jmp
ss
gs
lahf
repz
icebp
fs
gs
or
test
push
out
incl
xchg
mov
cld
adc
das
mov
ss
adc
and
add
inc
fsubr
out
sbb
loope
je
cltd
int
mov
lret
mov
lods
cs
popf
xchg
mov
xchg
pop
bound
adc
pop
aam
call
dec
insb
inc
jg
frstor
xchg
ljmp
js
mov
adc
push
outsl
idiv
push
add
sub
in
pushf
mov
stos
in
pop
stc
shl
lcall
stos
pusha
xlat
outsl
fstpt
xchg
mov
daa
test
imul
jge
or
push
push
stos
lock
or
fsts
dec
jmp
mov
mov
mov
out
jns
orl
mov
sbb
ret
ljmp
add
and
pushl
pusha
push
mov
outsl
and
sub
adc
pop
aam
or
cwtl
mov
mov
fsubl
scas
mov
mov
push
lcall
addb
call
insl
inc
jae
leave
jmp
adc
pop
inc
fildl
xchg
mov
les
or
stos
scas
push
jmp
add
pop
fstpl
int
fcompl
in
ror
les
fwait
sub
pop
inc
mov
fwait
lods
pop
movsb
or
shrb
sahf
mov
in
cmp
ljmp
stos
fistpll
or
pop
loope
lahf
lcall
mov
xchg
jmp
es
or
fnstcw
stos
int
mov
inc
sub
imulb
mov
loopne
bound
xchg
popa
ret
xchg
loopne
insl
gs
mov
lret
lock
stos
es
sub
popf
jne
in
lods
pop
add
cmp
in
subl
jo
mov
shlb
mov
ljmp
ss
or
add
mov
jne
mov
sub
pop
cli
mov
add
stos
push
fstl
push
jge
mov
push
stos
outsl
sbb
inc
mov
lods
and
mov
xor
insb
jae
or
jns
and
out
lahf
cmc
je
xlat
pop
push
inc
scas
in
enter
sub
enter
fisttps
pop
inc
inc
popf
cltd
cmpsl
sub
push
pop
mov
sub
pushf
std
test
jmp
mov
iret
mov
in
sub
loop
test
stc
in
cmp
push
inc
fmull
ja
por
cmc
imul
jne
dec
adc
outsl
sub
fsubr
je
jp
lds
push
stos
adc
pop
andl
jmp
xchg
xor
ds
add
testb
mov
outsb
dec
test
mov
cmp
dec
dec
fisubs
cs
xlat
mov
sbb
out
aad
subb
sub
ret
and
xor
iret
stos
std
push
xor
stos
imul
mov
scas
or
test
popa
mov
pop
insl
ret
sub
adcl
ljmp
xchg
outsb
push
adc
fisubrl
push
sbb
xchg
and
dec
inc
insl
and
subb
mov
adc
fadds
rcrb
fldcw
mov
fbld
jnp
insl
cltd
jp
cmpsb
repz
adc
xor
and
lods
shrb
pushf
das
scas
cli
stos
test
movsl
out
mov
test
mov
push
sbb
dec
test
xor
jnp
add
push
mov
adc
mov
and
sti
push
inc
mov
add
fidivrl
int
out
pop
bound
add
cmpsl
ffree
cmpsb
add
jno
mov
sub
adc
mov
stos
movsb
dec
pop
das
jmp
mov
sub
int
mov
mov
xor
lahf
repnz
jno
sahf
popa
mov
inc
mov
cli
stos
sub
in
lahf
stos
cmp
dec
push
cs
mov
scas
daa
lcall
cmp
imul
andb
mov
hlt
xchg
pop
scas
stos
mov
subl
sub
and
mov
pop
ds
sti
iret
jb
ds
jmp
cmpl
aaa
stc
adc
test
scas
mov
stos
roll
es
xor
fnstsw
adc
ss
dec
int
mov
lea
repnz
imul
dec
fidivl
mov
stos
std
aad
mov
inc
mov
xchg
stos
mov
adc
imul
stos
in
rorb
sbb
pushf
sub
iret
out
mov
pop
cld
jno
or
push
dec
addr16
cmp
lahf
mov
pop
xchg
scas
test
stos
clc
sti
test
call
imul
add
or
mov
fidivrl
cmp
mov
sbb
lock
xchg
sbbb
mov
push
lret
pop
lods
inc
push
stos
or
cmp
into
cmpsl
lahf
sbb
loope
push
divl
je
cmp
or
sti
sub
repnz
push
dec
fldcw
stos
mov
add
test
stos
mov
mov
outsb
gs
test
mov
stos
roll
mov
cmp
sub
sbb
lods
test
adc
mov
jbe
lcallw
das
xchg
stos
or
pop
aam
rcrb
mov
or
cs
push
hlt
stos
dec
xchg
jg
dec
mov
xchg
cmp
mov
clc
xlat
repz
std
pop
cs
sahf
popa
add
cwtl
in
xchg
imul
out
jbe
push
xchg
lahf
or
mov
and
ror
insb
inc
sub
xchg
stos
nop
or
clc
push
arpl
push
mov
out
add
test
movsb
add
mov
stos
add
in
outsl
orb
sub
xchg
subl
stos
push
inc
out
adc
pop
xchg
sbb
ret
push
sbb
outsb
mov
icebp
pop
fildll
cmp
dec
sbb
fildl
into
in
out
mov
andl
fdivl
pop
xlat
mov
repnz
cmpsl
stos
sbb
pop
and
icebp
pop
flds
stos
loop
or
mov
push
or
cmp
or
jg
es
subl
sub
das
inc
mov
mov
out
lcall
insb
mov
pop
add
cmp
mov
ficoml
ret
nop
add
mov
inc
xchg
imul
js
andb
bnd
dec
test
sbb
add
fbld
sahf
mov
lock
in
mov
fisubrl
mov
shl
loop
dec
xchg
ss
mov
inc
pop
sub
jo
scas
jns
mov
inc
xchg
notb
in
stos
pop
mov
nop
das
mov
and
shrb
sahf
inc
fldt
push
mov
es
mov
popa
stos
mov
and
xchg
stos
imul
mov
mov
shrl
cltd
adc
add
mov
xor
jmp
enter
cmp
imul
cmp
push
xor
adc
insl
je
dec
push
std
fwait
xor
fistl
mov
lret
or
pop
or
stos
mov
pop
mov
mov
mov
stos
or
out
sub
mov
icebp
mov
lcall
movsb
sub
sub
int
fwait
jg
jmp
mov
mov
mov
into
sub
lret
mov
sub
mov
cmp
out
xchg
jae
data16
insb
mov
jmp
test
adc
or
add
xor
cmpsb
or
ret
loope
jne
mov
inc
push
jns
out
icebp
push
sub
stos
int
pop
jl
cmovne
lahf
enter
pusha
sub
test
aad
xchg
aas
add
jb
add
ret
xchg
and
cmp
mov
jecxz
push
stos
cmpsl
jle
fcomps
pop
in
clc
sbb
mov
in
inc
jge
testb
stos
stos
jmp
sti
stos
dec
dec
cmpsl
xlat
fwait
cmp
jnp
stc
mov
jne
ss
loope
cmp
and
pop
dec
ds
jne,pn
xorb
push
repz
stos
stc
jns
pop
scas
xor
mov
lock
iret
and
cld
mov
mov
push
sub
lcall
mov
pop
stos
push
push
je
xchg
push
jb
test
push
lret
stos
outsl
xchg
sbb
cmpl
inc
out
pop
sub
stos
mov
jno
fadds
jae
jecxz
xor
add
and
ja
faddp
cltd
inc
cmp
pop
mov
cltd
mov
jb
xchg
fsubrs
cmp
push
decb
push
fwait
add
popa
xchg
loope
nop
test
jmp
stos
fldenv
xchg
pushf
mov
mov
shll
lret
lret
mov
stos
test
push
fwait
daa
mov
aad
mov
loop
test
add
inc
popa
divb
fmuls
push
xchg
mov
and
mov
pop
shlb
xchg
inc
mov
fmuls
clc
ds
ds
ret
aam
xchg
pop
cltd
icebp
ret
shrl
mov
cmp
ja
push
push
into
cltd
dec
xchg
xchg
loop
sbb
mov
lds
inc
mov
add
stos
or
pop
fistps
jno
mov
std
aam
mov
out
loopne
in
and
lret
nop
rcrl
mov
les
ljmp
push
insb
dec
jmp
mov
fidivrl
mov
sub
out
pop
fwait
es
cli
inc
inc
stos
mov
scas
insl
xchg
sub
enter
jge
stos
mov
dec
neg
mov
data16
xor
movsl
mov
scas
int
popf
cs
sbb
ljmp
jae
andl
xchg
sti
cld
shrl
in
hlt
movsb
aam
insb
pushf
aam
inc
daa
lahf
mov
hlt
inc
mov
cmpsl
loope
dec
popf
je
xor
std
xor
daa
and
push
and
nop
xchg
pop
xchg
fidivs
ljmp
mov
fists
add
jbe
xor
ljmp
ljmp
dec
mov
pop
iret
mov
xor
mov
aas
sti
cld
rcrl
es
inc
jnp
push
rcr
mov
or
dec
ljmp
push
xorb
icebp
adc
dec
ret
aaa
mov
mov
push
cmc
repnz
add
cld
jo
mov
aam
pop
push
mov
out
mov
dec
shrl
mov
movsb
outsl
xchg
pop
frstor
scas
pop
popa
fmull
sti
cld
shll
add
pop
add
cmp
and
add
les
icebp
mov
imul
xor
sbb
insl
addb
mov
sbb
or
xchg
mov
in
add
test
dec
das
dec
ljmp
or
ss
lcall
pusha
fstps
stos
aaa
icebp
add
jae
cmp
dec
lret
fdiv
xor
imul
cltd
clc
jns
sub
bnd
and
lods
pop
pop
lea
jne
push
pusha
lea
jge
call
push
pushf
pusha
mov
lea
jmp
jmp
std
cli
cld
rcr
in
test
dec
pop
xchg
sti
insl
xor
test
sub
lcall
ds
in
jnp
sub
push
and
addr16
or
dec
roll
test
nop
mov
sub
mov
test
or
imul
shl
cltd
adc
mov
adc
jnp
adc
clc
cmp
pushl
mov
lea
ja
call
call
sub
pushf
sub
stc
setg
rcl
rol
sub
add
bts
mov
sbb
rol
mov
rcl
test
mov
push
call
jge
idiv
cld
shl
mov
xchg
mov
vpcomd
shll
insl
mov
imul
pop
repz
dec
add
xor
and
shld
cmp
xchg
aam
addb
xor
rolb
jmp
repz
icebp
icebp
mov
push
cltd
nop
dec
xchg
xor
mov
mov
adc
add
jmp
lods
je
incl
add
pop
jp
add
sub
inc
loopne
add
jp
add
cld
sub
dec
loopne
add
jp
add
sub
push
loopne
add
jp
add
sub
pop
loopne
add
jp
add
sub
pusha
loopne
add
sub
lds
add
sub
dec
jp
add
jmp
add
sub
push
jp
add
loopne
add
sub
in
leave
sbb
and
add
sub
xchg
sub
mov
sub
outsl
jp
add
loopne
add
sub
fdivl
sub
jg
sub
arpl
add
roll
data16
ret
jns
sbb
arpl
cs
sti
movl
xchg
pop
and
push
mov
push
mov
push
shll
and
repnz
sub
fidivrl
lret
and
cmpsl
fnstsw
add
add
cmovne
and
mov
sbb
jno
push
aam
sub
cli
sbb
pop
inc
test
pop
lock
mov
lret
mov
or
cwtl
rclb
mov
and
call
push
jmp
pop
jo
cld
roll
les
mov
sub
outsb
mov
cwtl
pop
xchg
xlat
mov
add
add
mov
scas
movq
les
lcall
adc
fcmovne
sub
test
push
pop
fildl
add
daa
inc
jne
mov
mov
xor
sbb
out
pop
ss
popa
rcl
test
add
jbe
push
jge
test
mov
cmp
roll
stos
fcmovu
orb
add
jmp
cmp
add
mov
cwtl
fsubr
roll
incb
imul
repnz
inc
clc
mov
lcall
fists
in
jge
and
and
inc
and
std
fsubrs
inc
adc
lds
jp
rcll
bound
in
mov
mov
cld
shll
lret
mov
cmp
popa
mov
mov
adc
mov
lcall
mov
xor
aad
xor
popa
and
mov
mov
cmp
xlat
imul
les
test
push
adc
js
mov
je
pop
mov
jb
sarl
mov
lods
cmp
and
loopne
fsubs
jmp
inc
add
getsec
mov
pusha
push
shrl
aam
lea
adc
shll
inc
or
mov
fs
add
pop
sbb
push
or
stos
popf
fdivrs
mov
sbb
cmp
xor
jp
arpl
inc
arpl
int3
sbb
ljmp
push
add
out
sbb
adc
insl
xchg
mov
clc
fistl
add
cs
scas
push
outsb
adc
stos
bound
scas
faddl
es
in
movl
jne
push
jmp
rolb
leave
rol
adc
loopne
mov
adc
lret
and
cmp
pop
mov
jno
aad
adc
sbb
mov
jno
push
pop
fistl
push
mov
pop
iret
lea
jmp
sti
mov
mov
ja
push
xchg
push
rorb
shrb
mov
lret
jp
loop
les
mov
sti
in
xor
inc
mov
fcoml
inc
cmp
sbb
mov
int3
or
or
adc
bound
lds
leave
and
pushf
inc
dec
insb
jecxz
and
cli
pop
repz
pusha
repnz
or
not
lea
pusha
not
cwtl
pusha
mov
jmp
loop
pop
cld
cld
rcrl
jns
cmp
imul
push
leave
xrelease
xorl
in
mov
imul
push
nop
inc
adc
dec
cwtl
and
cwtl
and
in
fildll
je
or
pop
lret
or
adc
inc
movsl
xor
push
decb
pop
push
es
outsb
sahf
test
call
mov
mov
mov
adc
and
adc
mov
out
inc
cmp
pop
out
mov
loop
pusha
cld
gs
lahf
loopne
push
cmpsl
push
mov
sub
insb
pop
dec
rcll
jmp
inc
lahf
and
lock
cmp
sti
decl
push
stos
cmp
aaa
in
test
push
dec
pop
sbb
movsb
jg
repz
addr16
fwait
rolb
dec
shl
jecxz
mov
sub
stos
andl
sub
cmpsl
mov
addr16
divb
fcompl
jmp
ljmp
cmp
jne
jne
xchg
lds
inc
movsb
ret
clc
or
xchg
jbe
xchg
dec
ja
sub
mov
lcall
sbb
pop
jecxz
inc
lods
testb
jl
in
jp
movsb
or
call
adc
pushf
sub
aam
popa
xor
insb
xchg
mov
sbb
arpl
call
nop
and
jbe
xor
fimull
pop
bswap
bswap
mov
push
push
push
pushf
lea
jmp
pusha
cmp
lea
jg
pusha
mov
pusha
lea
ja
push
inc
inc
call
cmc
loope
repnz
rcll
out
out
mov
mov
lock
mov
ds
inc
sbb
mov
jl
and
mov
cld
fnsave
das
insl
leave
sbb
adc
adc
enter
cmp
cwtl
add
and
sti
and
rcrl
jns
es
add
cld
andb
jae
or
xchg
push
xor
cmpsl
popf
or
cld
push
jp
gs
dec
sahf
push
and
and
cmpsb
pop
sbb
cmp
or
es
jmp
push
pushf
pushf
call
sub
mov
cld
shll
mov
jmp
loopne
mov
in
add
rcl
dec
cmpsb
push
les
xchg
xchg
mov
jecxz
push
mov
iret
push
mov
adc
ljmp
mov
lret
shll
lret
mov
pop
stos
stos
cmp
pop
in
movsl
aaa
insl
jg
shll
mov
jno
mov
mov
lcall
cmp
stc
xor
mov
and
and
std
mov
mov
push
scas
ljmp
push
add
repz
cmp
xchg
xrelease
jg
xchg
add
sub
mov
dec
inc
mov
mov
outsl
in
lds
dec
lahf
imul
rcll
adc
xor
sub
cltd
in
xor
fmull
jg
jge
pop
data16
es
sbb
mov
lds
imul
dec
scas
aas
imul
out
cmp
sub
jnp
add
popf
xchg
push
negl
push
push
enter
jnp
lods
inc
aas
test
jb
iret
dec
sbb
out
xorl
outsb
mov
sti
push
push
popa
mov
mov
imul
dec
imul
mov
lret
out
insb
inc
out
out
rol
lock
push
sbb
dec
sub
inc
xchg
pop
bound
push
jle
xor
adc
negl
mov
ret
xlat
xor
es
lock
jns
add
fwait
add
sbb
adc
mov
aad
imul
cmc
add
enter
in
jp
iret
push
mov
xor
push
mov
push
xor
shrl
lahf
xor
adc
and
cld
shrl
sub
or
jl
push
xor
out
cmpsl
xor
rcl
mov
ljmp
cmp
fisubrs
jmp
push
clc
cltd
mov
xchg
jp
sahf
les
out
jbe
ss
aaa
mov
mov
fwait
push
push
inc
sbb
and
mov
pop
mov
sub
push
cmp
ret
and
dec
faddl
ljmp
mov
idiv
rcrl
sub
ret
out
sub
shll
arpl
xchg
or
stos
stc
ja
setg
dec
push
inc
lods
sbb
imull
adc
adc
and
xchg
jmp
outsl
rolb
sub
adc
jg
das
call
scas
cld
pop
inc
lods
in
mov
pop
test
mov
sbb
fidivl
xchg
call
cmpsb
movsb
test
lret
mov
adc
jle
test
test
fldt
mov
stc
adc
je
pop
xor
int
leave
dec
mov
mov
pop
insb
sub
xchg
inc
test
fcomp
add
or
or
gs
ret
and
xchg
xchg
jg
push
subb
sub
popf
sbb
loopne
inc
testl
and
or
je
pop
pop
test
xor
rcrl
ds
into
jp
leave
push
jae
mul
fdivl
add
cli
lahf
fsubr
pop
mov
es
sbb
lods
pop
mov
enter
fs
jb
push
bt
test
cmpb
push
lea
jne
xor
stc
shr
mov
pusha
pushf
add
cmp
movzwl
movzbw
shld
sar
mov
cmc
clc
pushf
clc
add
cmp
pushf
call
adc
cld
rcrl
cwtl
mov
into
xchg
es
cmpsb
add
push
dec
dec
push
jnp
aad
enter
rcrb
test
sbb
test
xchg
push
ret
lea
addr16
sti
sbbb
lea
mov
imul
fcoms
das
into
icebp
push
cmc
insl
lret
rolb
push
cld
and
mov
aas
fisttps
sahf
add
fldt
ret
and
pop
push
int
int
push
push
and
lretw
call
and
lea
call
clc
cmc
jae
test
sub
pushf
jmp
jmp
shll
push
cmc
cld
rcrl
pop
mov
in
xchg
aad
in
xchg
dec
sbb
rcrl
aam
push
push
xor
out
fnstcw
out
push
loopne
adc
inc
add
xor
fldcw
pop
mov
xchg
push
inc
jle
hlt
ja
fstps
jo
bound
pushf
cld
flds
pop
test
enter
add
std
jp
stc
or
in
repz
test
adc
cmp
jne
cmc
cli
andl
inc
incl
lods
mov
imul
cli
fs
pop
inc
mov
pusha
add
jg
test
inc
subb
mov
popa
push
les
lcall
mov
cld
pop
daa
jmp
dec
adc
mov
shl
jp
fisttpll
sti
rcr
jle
pusha
xchg
lret
or
xchg
lods
and
jns
jg
mov
lds
push
stc
mov
sti
jle
cmp
clc
pushf
add
jmp
pushf
mov
lea
not
jmp
pusha
cmp
jmp
sbb
push
hlt
cld
shrl
jg
push
les
mov
mov
pop
pop
out
pusha
pop
lock
repz
rcll
jge
stos
mov
jno
mov
and
jecxz
jnp
dec
jns
in
mov
faddl
xor
fistl
fs
mov
shr
pop
jp
jp
fcoms
lea
pop
in
mov
add
fs
jae
call
sahf
pop
jmp
rcr
nop
push
inc
lods
lea
icebp
cwtl
mov
mov
dec
stos
mov
mov
les
in
jbe
loope
stos
sub
inc
and
mov
sbb
ret
rcrl
jnp
in
and
xchg
sub
adc
jl
lock
ss
rcl
gs
pop
push
or
and
add
neg
mov
and
and
ret
in
pop
aad
cld
sbb
int
dec
dec
xchg
mov
mov
mov
jmp
out
mov
pusha
pop
out
push
lods
cmp
lods
fimuls
into
rcl
lea
pusha
cmp
cmp
sub
push
cmp
call
sbb
pop
ljmp
imulb
mov
adc
push
cli
inc
sbb
stos
ffree
mov
loope
pop
and
mov
jmp
loope
cmp
mov
xchg
mov
or
jns
pop
jne
mov
add
xchg
add
mov
jp
cltd
push
mov
jae
lods
xor
dec
in
cs
rcll
fstpl
jle
pop
loopne
push
lahf
adc
sub
pop
sub
and
and
stc
insl
dec
xchg
negl
ljmp
mov
jl
cli
add
and
dec
fcompl
jno
xchg
arpl
mov
fisttpl
fdivl
add
mov
jg
in
orl
jle
call
jmp
imulb
sbb
xlat
xchg
in
xor
sub
or
sahf
jno
xor
pop
test
das
add
cmpsl
jp
xlat
inc
lock
fwait
sbbb
add
popa
insb
inc
jb
add
and
cld
shl
cmc
test
sub
pop
jno
add
test
xchg
sub
or
shll
dec
int
pop
xor
jmp
adc
pop
lods
cwtl
mov
fisubs
out
stc
test
sub
sub
clc
dec
pop
into
add
out
aaa
mov
stos
orl
iret
iret
cs
movl
shl
mov
les
insb
push
jmp
ja
add
fstpl
or
pusha
test
test
popf
out
je
aad
mov
mov
pop
pop
xchg
mov
xchg
fdivl
jle
add
or
lahf
test
pop
out
lret
mov
es
ret
enter
into
mov
or
adc
test
loope
bound
jns
mov
ret
adc
pusha
xchg
inc
scas
shrb
push
dec
sub
rcrl
das
pushl
or
mov
aaa
push
sub
daa
mov
xor
aas
mov
pop
xor
and
jmp
out
inc
je
imulb
inc
addr16
out
icebp
cli
fisubl
add
aad
cwtl
cltd
jmp
push
jp
repnz
fld1
scas
insl
imul
imul
mov
xor
jbe
push
out
or
nop
pushf
call
pop
into
mov
pop
sub
fwait
sub
aaa
dec
dec
adc
mov
dec
stc
outsb
call
jns
pushf
inc
addr16
push
arpl
mov
mov
cmp
aam
ljmp
adc
sbb
xchg
into
addr16
mov
das
fimull
mov
mov
mov
jnp,pt
mov
arpl
ret
les
mov
pop
jg
adc
mov
fwait
bound
js
and
inc
ja
lods
xchg
sub
xor
std
les
loope
enter
cld
shrl
nop
cmpsl
push
sbb
pusha
cmp
or
or
jb
cmpsl
test
pusha
inc
mov
add
mov
xchg
aas
or
jnp
cmc
jne
or
adc
adc
inc
enter
sub
add
cmp
mov
imull
push
sbb
movsl
xchg
pop
int3
sub
fiadds
movsb
insb
pop
mov
push
push
push
dec
mov
outsl
out
push
gs
cld
sarl
outsb
outsb
inc
popf
add
fdivrs
xchg
mov
cli
lods
cltd
sahf
addl
xchg
fsubrs
rorb
xlat
mov
pop
sbbl
xor
adc
aad
loope
ja
push
and
pop
dec
out
stc
dec
xchg
dec
dec
mov
mov
scas
neg
sarl
insl
rclb
inc
cmc
sbb
add
mov
sbb
negl
lods
xchg
cmpsb
cmp
pop
pop
cmp
or
push
jae
mov
push
shlb
sub
ja
iret
in
movsb
ss
addr16
pop
push
jmp
mov
shl
jbe
iret
push
jp
vcvtsi2sdl
mov
sar
push
call
xchg
cmp
adc
loopne
jns
lret
mov
call
dec
mov
dec
call
cmc
gs
ljmp
lret
sub
cmp
sbb
lock
iret
enter
jl
incb
js
sbb
shll
mov
js
mov
das
or
sti
dec
and
fs
add
adc
cmpl
xchg
fsubr
cld
ror
mov
or
mov
mov
dec
cmpsl
push
in
mov
push
or
cmp
call
stos
jno
out
dec
sbb
out
pop
mov
sahf
inc
ret
jns
lds
add
sbb
push
sub
mov
mov
repz
xlat
bound
sub
in
jns
jb
shrl
ffreep
push
fldenv
hlt
cmp
in
cld
rcll
xchg
js
test
mov
xchg
dec
xor
jns
sbb
push
fucomip
cmp
loope
mov
mov
mov
shl
add
dec
add
xchg
inc
lods
test
out
jle
fnstcw
jno
jmp
and
sahf
lods
inc
mov
loopne
mov
and
stc
orl
mov
inc
sti
pop
mov
lahf
mov
pop
in
cld
sarl
aas
movsbl
dec
insb
pop
xchg
mov
add
add
inc
inc
inc
xorb
cmc
lea
pop
push
fistps
loopne
jbe
push
jmp
cltd
or
shll
loope
mov
mov
negb
movsb
xchg
push
mov
ret
scas
cmpl
push
lock
jmp
leave
adc
mov
fisubrl
push
call
out
test
int3
sub
adc
ja
dec
adc
pop
add
push
icebp
xchg
and
lahf
mov
xchg
repnz
out
nop
xchg
sub
or
jl
lahf
fstpt
jb
lret
daa
dec
out
mov
lock
or
mov
push
adc
fistpll
loop
enter
cmpsl
mov
pop
or
out
lret
cmc
std
pop
add
sbb
adc
or
adc
jecxz
rcll
mov
and
enter
xorb
scas
dec
sbb
icebp
add
fwait
shlb
pushf
pop
iret
jle
push
dec
push
out
add
lcall
pop
leave
pop
mov
cmpsb
stos
inc
lahf
cld
icebp
cld
shlb
mov
inc
sbb
test
xchg
xchg
les
jns
aaa
out
mov
adc
dec
cltd
cmp
insb
je
ret
jp
leave
xchg
loop
jns
cmpl
xlat
fs
cwtl
into
and
cld
roll
xchg
stos
rorl
incb
loop
scas
stc
cld
cmp
sub
orl
mov
sbb
ss
pop
imul
and
mov
insl
push
repnz
daa
sbb
ja
sub
loopne
adc
out
dec
jbe
push
aam
int3
stc
fcoml
sub
frstor
cmp
out
rcr
or
and
mov
addr16
push
dec
sahf
cld
gs
jp
imul
add
int3
fs
ret
into
add
enter
into
dec
fdivrp
xor
call
clc
mov
test
cmc
stc
stc
test
movb
jmp
je
dec
loop
roll
fildll
lods
jmp
pop
push
adc
inc
dec
xor
addr16
call
push
aam
push
lahf
jge
mov
or
rolb
adc
lods
or
lret
cmp
lds
decl
xlat
push
dec
and
hlt
mov
ficomps
sbb
dec
mov
xor
clc
les
lea
popf
pop
mov
mov
loop
out
xor
inc
loop
shll
out
adc
bound
pop
data16
mov
dec
mov
les
inc
lahf
push
and
mov
xor
jo
test
xor
mov
fcompl
inc
adc
pop
fwait
cmpsl
movsl
adc
jp
in
iret
test
lods
filds
repnz
push
sub
jge
fidivrl
in
hlt
pop
adc
sbb
inc
out
ror
mov
loop
clc
add
mov
adc
cmp
and
inc
lock
jp,pn
mov
fbld
add
std
decl
movsbl
pop
bswap
jmp
imul
push
loope
shll
pushf
or
aaa
aas
inc
pop
cmc
fwait
imull
dec
in
pushf
adc
xchg
xor
push
scas
ja
out
stos
mov
jg
inc
sbb
in
mov
jle
scas
push
lock
std
xchg
sbb
add
cmp
push
insb
jge
repz
cmp
cmpsl
fnstcw
adc
jo
in
test
pusha
mov
sub
pop
in
loope
cltd
iret
mov
mov
cmp
push
aas
rorb
mov
push
cmpsb
cmp
jg
mov
loopne
sarl
sbbb
xchg
pop
mov
dec
dec
divb
dec
jp
test
ret
je
pop
loop
lahf
mov
imul
mov
mov
test
mov
pop
outsb
mov
les
pop
or
ret
push
pushf
jae
cmp
gs
add
mov
add
aad
out
mov
stos
sbb
loopne
rcll
fildll
jns
xchg
xchg
std
outsl
inc
in
add
dec
stc
es
test
setge
add
mov
icebp
add
inc
adc
je
mov
jecxz
or
xchg
or
sbb
int3
cmp
lock
sub
fsubrs
xor
mov
jmp
dec
ljmp
pop
shlb
mov
and
movw
movl
pushl
ret
sub
mov
jmp
inc
mov
lock
aad
mov
mov
lret
mov
mov
hlt
inc
sub
add
push
xor
test
jmp
mov
mov
lret
xor
lahf
mov
cmpl
inc
xor
into
mov
imul
scas
xor
cltd
add
ds
call
push
and
pop
fisttpl
pop
push
pop
lahf
push
or
fwait
add
jp
fldl2t
dec
jp
imul
mov
lret
dec
test
mov
jl
xchg
jo
xor
mov
iret
std
das
sbb
outsb
jle
repz
negb
push
test
outsl
int
nop
and
xor
jle
and
sbbl
mov
xchg
or
jb
adc
xchg
enter
cltd
push
sub
mov
cmp
popa
mov
andb
lret
mov
lds
movsl
shlb
push
jae
push
jmp
pop
ficompl
dec
sbb
scas
mov
repnz
sub
xor
cwtl
push
jle
push
dec
aam
xchg
jae
pop
sub
xchg
enter
xor
nop
pop
xchg
daa
mov
pusha
mov
arpl
push
insb
lret
jle
lods
pop
sahf
ds
test
push
popf
js
or
fildl
test
fadd
rcll
outsb
mov
inc
sub
fwait
adc
pop
and
es
xchg
pop
fdivl
xchg
icebp
movsb
pop
ds
leave
sbb
test
jnp
pop
lret
es
ds
adc
xorb
pushf
adc
lods
mov
jbe
sub
arpl
out
jp
xor
jae
xchg
mov
jno
loope
xchg
inc
mov
fs
jl
pushf
lahf
int
mov
jl
pop
cmp
leave
loop
or
hlt
aad
jle,pn
xchg
and
stos
mov
xchg
pop
mov
xchg
jno
aad
fldl
ss
rcrb
push
xchg
sub
adc
ljmp
fdivr
fdivrl
ds
xchg
sbb
jp
loopne
sbb
lds
push
xchg
jb
and
test
inc
mov
popl
xchg
lds
jb
rcll
lret
adc
out
xchg
out
adc
leave
je
dec
or
nop
xor
or
cwtl
daa
cli
inc
xchg
dec
in
xor
xor
mov
pop
int
bnd
xor
inc
and
add
fcoml
das
rclb
in
inc
aad
xchg
jo
mov
mul
repz
sub
and
lahf
inc
rorl
mov
jl
inc
test
data16
mov
inc
lds
inc
fidivs
bound
push
ja
jbe
pop
dec
or
fmuls
pop
cs
mov
pushf
adc
ja
push
aaa
fbstp
gs
mov
cmp
enter
cmp
mov
mov
leave
fcompl
in
lret
popf
xchg
add
cs
inc
xchg
pop
stos
push
push
xor
les
int3
sbb
andb
outsb
push
xchg
ds
shl
push
mov
aas
aaa
xchg
mov
add
repz
push
sbb
ljmp
data16
fadd
out
mov
outsl
cmp
ret
mov
in
mov
stc
loop
xchg
aad
roll
dec
loope
mov
push
icebp
push
call
cmp
sbb
adc
inc
mov
mov
cmc
sbbl
icebp
mov
mov
jo
xchg
filds
mov
pop
xchg
in
filds
dec
cmp
in
pushl
js
mov
loope
insl
ss
sbb
pop
or
dec
sub
xchg
push
pop
aaa
sub
mov
out
sbb
ret
dec
sub
dec
adc
into
fwait
imul
or
fs
lret
cli
fistl
aad
sub
in
int
imull
add
mov
fisubrl
gs
inc
loope
test
inc
in
in
ljmp
loopne
lret
iret
ljmp
sub
fisttps
or
and
aas
mov
sub
mov
xor
rcr
mov
xor
outsb
push
push
lcall
add
inc
mov
imul
rolb
imul
int
pop
out
xor
adc
fnstsw
push
sbb
xor
into
cltd
jl
nop
movsl
xchg
xchg
xchg
insl
mov
mov
mov
mov
fcomps
js
sbb
mov
stos
lods
enter
sbb
das
adc
dec
int3
scas
nop
adc
jmp
inc
es
out
js
lret
or
lds
pop
mov
out
pop
xor
lods
enter
and
cmp
xchg
jae
mov
lods
mov
dec
mov
imul
jmp
dec
and
in
xor
fwait
testb
jmp
cwtl
mov
push
lcall
push
xor
les
fwait
mov
push
push
pop
rclb
jb
adc
jns
leave
cmpsb
mov
mov
popf
add
je
xor
cmc
adc
dec
sub
repnz
inc
dec
or
jne
push
xchg
divb
cmp
call
xchg
mov
xchg
sub
sub
adc
xor
pop
mov
and
pushf
mov
xchg
mulb
mov
outsb
out
pop
xchg
arpl
inc
jnp
cmpsl
repz
aam
test
add
bound
leave
loop
adc
lock
pop
cmc
shrd
jl
clflush
daa
or
bnd
and
inc
xlat
ficoms
push
outsl
mov
mov
pop
out
inc
leave
add
jecxz
jns
xlat
ficoms
push
or
mov
inc
inc
and
icebp
scas
andb
out
lcall
inc
js
imul
daa
data16
dec
jg
into
mov
push
push
clc
mov
or
cs
outsb
imul
movsb
movsb
loope
in
into
mov
in
into
mov
and
jbe
sbb
add
orl
mov
adc
dec
add
cmp
and
and
jmp
dec
test
ret
xchg
or
sub
xor
adc
sbb
cmp
pop
add
test
xor
testb
jbe
shrl
loop
not
fs
popf
les
bound
rorl
lds
jae
aaa
lcall
outsb
mov
int3
movsl
test
stc
movl
loop
outsl
data16
jb
ret
lret
in
add
xchg
lcall
stos
insb
pop
sbb
xor
loop
addb
jnp
rolb
mov
xchg
push
push
mov
pop
into
inc
mov
and
cs
cmpsl
inc
in
or
mov
scas
ja
sub
mov
aas
and
mov
xchg
adc
sub
sbb
fs
fnsave
jnp
push
pop
shl
push
inc
mov
sbb
push
inc
jge
aas
fdivrs
inc
xchg
jp
mov
add
fstpl
mov
sbb
xchg
lret
cld
mov
out
mov
bnd
xchg
jae
cld
adc
cmc
adcb
out
addr16
arpl
aaa
jle
xchg
shlb
jecxz
into
mov
repz
ret
sub
jb
les
xchg
cwtl
cmp
cld
jl
xor
popf
jmp
cmpsb
lods
pop
pop
insl
mov
jge
jp
mov
ret
jmp
xor
addr16
add
xchg
neg
xchg
sti
ret
movsb
xorl
push
jno
sub
sub
cs
adc
cli
rcll
imul
sbb
test
decb
out
or
push
xchg
testb
add
xorb
inc
mov
hlt
cmpsb
add
popf
ds
pop
lcall
pop
scas
lods
inc
shll
jnp
sub
aas
mov
lds
cmpsb
daa
xchg
sbb
gs
outsl
add
dec
shll
fsubs
mov
add
test
jg
add
push
mov
jp
sub
push
dec
cwtl
fwait
mov
xor
pop
cmp
stc
push
add
dec
xor
pop
push
fldl
mov
jmp
adc
pop
sbb
mov
sbb
icebp
loope
jb
pop
fs
and
mov
mov
dec
cs
mov
movsl
mov
inc
iret
dec
dec
fldenv
adc
jg
shll
lret
lock
jle
xchg
rorb
add
push
sub
ja
sarb
inc
loop
rclb
mov
inc
sti
jge
push
add
dec
fidivrl
das
js
xchg
fwait
loop
pop
lahf
cmp
dec
push
imul
test
push
shrd
rcl
sub
xlat
mov
cltd
testl
pusha
jnp
push
sti
sub
mov
aam
sub
ds
popa
outsb
popa
fnstenv
movsw
sub
shlb
push
xchg
ss
push
sub
std
movsb
xor
pusha
adc
mov
push
mov
mov
or
mov
adc
cmpsl
ret
into
arpl
xor
cmpsl
xor
inc
sub
popf
shlb
inc
mov
enter
cli
notb
inc
test
jns
xchg
ds
repz
je
cmpsl
xchg
push
and
fstl
popa
repnz
push
aam
xor
and
push
mov
xorl
fsubs
rcrb
push
or
pop
rol
nop
xchg
lcall
stos
dec
shll
jae
sbb
shll
cwtl
mov
or
sbb
pop
mov
pop
shrw
int
mov
cld
pop
lea
pushl
or
cmp
fs
inc
add
inc
sub
aad
ljmp
mull
jb
sub
fstpt
stos
mov
jbe
adc
in
das
rol
dec
and
mov
ret
jbe
enter
xchg
sub
fnstcw
pop
pop
adc
xlat
jmp
ds
fsub
in
mov
mov
loope
in
mov
into
leave
adc
sub
out
push
fwait
imul
mov
xchg
sub
out
dec
cmpl
mov
mov
mov
je
xchg
adc
pop
push
mov
leave
jb
repnz
pop
adc
mov
cmp
sub
ss
aam
pusha
cmp
ss
out
push
movsb
jl
add
adc
fdivrs
pushf
popf
bnd
movsb
dec
sbb
inc
ficompl
mov
mov
aad
cmp
lahf
in
sbb
scas
pop
outsl
sbb
xor
dec
lea
insl
scas
pop
mov
cld
cli
xchg
ret
push
push
test
lods
add
xchg
jno
add
adc
cmc
lods
xchg
ja
cltd
ret
sub
and
sbb
out
inc
lds
int
mov
inc
cmc
mov
mov
cmp
out
dec
dec
in
imul
sub
push
sahf
xor
ficompl
out
sti
push
rcl
mov
inc
dec
sbb
mov
addr16
xchg
and
mov
repnz
mov
clc
call
push
adc
and
lahf
and
dec
js
and
or
or
mov
push
mov
ret
loopne
icebp
pop
leave
dec
xor
fwait
jl
arpl
adc
push
divb
push
out
cltd
in
insl
mov
adc
jbe
xchg
push
add
insb
xchg
gs
sbb
adc
test
push
pop
out
xor
aas
xchg
mov
jo
arpl
add
xchg
data16
pop
add
mov
push
into
int3
adc
arpl
push
out
outsl
jb
insb
mov
xchg
test
xlat
mov
cmp
lret
xchg
pop
mov
jnp
jae
mov
xor
test
pop
mov
sub
out
and
out
jg
xlat
lds
lahf
jecxz
in
sub
ljmp
cmp
cmc
sbb
enter
lock
cmpl
stos
jbe
leave
nop
jo
push
push
xchg
cli
enter
sub
repnz
pop
dec
push
out
call
dec
stos
ficompl
push
xchg
jp
inc
sbb
ljmp
xchg
adc
iret
pop
xchg
xchg
repnz
mov
xchg
jne
adc
dec
or
mov
sub
sahf
push
cmp
pop
mulb
fldt
jl
jp
and
cmpsl
or
jnp
cmpsl
add
or
push
xchg
sbb
inc
add
push
xor
jno
push
cmp
and
stos
loopne
mov
mov
in
rol
mov
jle
pushf
xor
in
out
adc
fistpl
aad
lret
js
rolb
call
orb
push
push
dec
and
in
jae
xor
fcomps
xchg
mov
mov
fwait
dec
jb
sub
sbb
inc
mov
dec
jns
popa
or
test
inc
adc
xchg
pop
mov
lcall
sahf
jae
push
mov
adc
pop
fcmovnu
in
sub
ficomps
lods
jmp
adc
fsubr
adc
pop
leave
push
sbb
add
repz
add
pop
mov
cmp
fisttps
lret
jns
test
addr16
ret
rcll
int
out
fcmovu
push
cmp
pop
enter
mov
inc
push
and
icebp
or
cmp
push
jg
lret
jae
icebp
rolb
mov
sub
mov
push
cmp
lea
mov
cld
mov
mov
dec
lahf
imul
insl
into
lock
sbb
sub
mov
cmpsb
aas
push
sub
lock
shll
nop
mov
pop
inc
jb
sbb
mov
and
sbb
hlt
fcmovnbe
jmp
cmc
lar
mov
xchg
lahf
not
out
scas
cmp
mov
push
mov
inc
sbb
mov
cmp
add
cmpsb
loop
push
pusha
shl
push
xchg
orb
xchg
pop
in
idiv
dec
xor
or
clc
dec
dec
sub
xchg
lds
test
out
xor
test
fcomps
push
adc
sahf
ja
daa
xchg
pop
cmc
or
mov
push
sbb
imulb
mov
mov
addr16
pop
dec
mov
lret
xchg
ret
mov
cmpsb
inc
sti
test
ja
add
cmp
pop
pop
test
jg
ret
and
mov
insl
sub
and
pop
inc
andl
js
ret
push
sbb
rcrb
jno
mov
add
fdivrl
jge
in
hlt
and
lods
repz
add
js
sub
push
mov
cwtl
out
fistl
and
leave
test
shrl
add
je
jno
out
push
push
jmp
xor
inc
pop
xchg
xchg
leave
mov
out
mov
and
jns
inc
inc
pop
push
cmp
xchg
test
add
pop
nop
sub
xchg
adc
std
dec
cs
cmp
push
or
lahf
pop
test
into
xor
mov
int
or
pop
mov
out
lcall
out
stos
push
lret
mov
daa
test
popf
and
decl
add
ret
clc
pop
shlb
imul
test
and
xor
push
repnz
inc
xor
lret
jp
nop
sbb
sub
mov
jge
icebp
mov
inc
mov
inc
popf
mov
mov
insl
sub
mov
mov
push
pop
inc
call
mov
std
lret
add
add
and
fisttps
repnz
pop
mov
idiv
imul
negb
mov
add
xchg
cmp
hlt
fildll
pop
xor
lahf
cmp
rorl
dec
add
push
add
arpl
inc
pop
nop
jmp
and
pop
mov
sahf
test
mov
rorb
cwtl
cmp
xchg
sar
insb
outsl
xchg
inc
lods
adc
mov
lret
pop
sub
add
orl
ret
push
add
pop
cmp
push
je
in
mov
nop
andl
scas
pop
sbb
lods
lcall
outsb
jle
or
mov
sbbl
dec
fistl
adc
repz
mov
andb
push
test
dec
sub
shr
lret
push
fucomi
pop
enter
cmp
mov
sub
popa
cmp
push
sbb
mov
mov
imul
aas
dec
mov
clc
out
pushf
cld
lret
and
scas
dec
outsl
jmp
jb
sub
js
ficoml
clc
sbb
call
cmpsl
and
cmp
mov
jbe
outsl
adcl
jo
stos
jmp
insl
lret
lret
lods
jge
xchg
cmpsb
andb
mov
filds
push
in
aam
fs
mov
je
into
push
inc
push
cmc
ffree
sub
adc
jecxz
sbb
pushf
xorb
jmp
jb
xchg
xchg
mov
jl
jp
or
shrb
push
sbb
add
das
ss
aam
fdivrl
shll
addb
add
sbb
add
fs
dec
inc
pop
roll
xchg
mov
jb
push
jl
pop
adc
sub
mov
jne
xor
sub
cwtl
pop
popw
mov
cmp
bswap
mov
jle
adc
sarb
scas
inc
cs
mov
pushf
insb
add
les
mov
pop
pop
ja
adc
insl
out
or
mov
mov
and
int3
popa
mov
enter
push
push
xor
dec
or
outsb
sbb
sbb
and
push
outsb
adc
fadd
aam
std
jp
mov
jecxz
xchg
in
mov
fcomps
rcll
icebp
jo
sbb
mov
mov
aas
xorl
jns
out
rol
mov
cmc
fldl
or
enter
mov
and
jne
xchg
adc
rorl
dec
jl
cld
push
loop
in
sub
push
clc
pusha
ret
rcrl
pop
cmp
dec
push
jge
push
add
fcom
inc
dec
leave
test
bnd
push
jle
scas
mov
xor
mov
cld
cmp
push
add
aad
and
add
cmp
test
mov
dec
das
xor
lsl
mov
pop
icebp
jecxz
outsl
jle
je
and
jae
or
and
mov
scas
into
and
enter
dec
pop
in
xchg
rorb
jns
imul
stos
xlat
mov
mov
shlb
imul
mov
mov
test
sub
stos
mov
stos
mov
seta
enter
and
dec
xor
jb
xorl
cmp
sbb
xor
insl
cli
lods
pop
sbb
mov
imul
insl
das
pushf
cmc
pop
xlat
idivl
mov
mov
mov
xchg
enter
push
in
insb
pusha
inc
test
mov
in
loop
and
sub
addb
pop
sti
inc
push
push
subb
pop
push
pop
jmp
shrl
xchg
inc
roll
out
jl
out
xchg
loop
cs
cmp
adc
je
das
jns
scas
dec
sub
stos
xchg
pop
mov
lcall
inc
cli
shll
sbbl
dec
add
test
mov
cwtl
scas
jo
cmp
enter
pop
stc
leave
sub
cmc
push
mov
push
out
es
ret
shlb
test
cmpsb
lcall
cmp
bnd
jbe
dec
mov
bound
les
sbb
movsb
inc
les
add
mov
fidivs
and
or
dec
sbb
jge
ficompl
orl
iret
into
push
outsl
in
insb
int3
iret
ljmp
fstpt
mov
inc
shrl
jmp
ljmp
push
push
cmp
xchg
repz
rcll
dec
mov
std
and
xchg
dec
push
sub
cwtl
pop
cmp
xor
xchg
jae
fs
outsl
cld
or
mov
lea
rolb
ret
dec
xchg
mov
fs
cmpsb
xor
dec
or
adc
mov
imull
lcall
in
or
dec
sub
add
ds
push
add
jg
add
sub
dec
sub
xchg
push
loopne
mov
fdivr
cmp
sbb
mov
sub
mov
inc
test
inc
icebp
pop
hlt
cmp
sti
mov
out
leave
cwtl
or
sub
call
rolb
mov
push
shlb
push
bnd
pushf
push
clc
aad
jae
arpl
outsb
inc
out
push
sbb
jae
ds
test
push
cwtl
mov
jle
dec
adc
testb
dec
xchg
lcall
out
daa
xor
mov
fnstsw
dec
xor
inc
inc
int
loope
lds
push
bound
mov
mov
fimuls
into
dec
sbb
sti
mov
popf
loopne
pop
sbb
cmpsl
cmpsl
cmpsb
mov
and
jno
xor
sub
mov
push
rorl
fistpll
mov
xchg
cmp
xchg
pop
enter
mov
adc
jmp
loopne
loop
insb
cvtps2pd
jb
sbb
xor
mov
and
add
sbbb
or
fidivrs
add
dec
cld
xor
jmp
nop
sub
jo
mov
in
enter
hlt
jmp
pop
mov
movsb
negb
clc
ret
mov
imul
insb
insl
fs
dec
mov
push
add
jo
jb
clc
adc
int
js
and
mov
pop
out
xor
dec
jno
cmp
jp
insb
fwait
jle
cmp
jns
jno
das
mov
adc
mulb
jbe
xchg
fwait
outsb
jbe
sbb
xchg
orl
add
insb
inc
fsubl
dec
cmp
push
shrb
pop
sbb
rcl
imul
cmp
xor
pop
jae
mov
fwait
sub
clc
mov
ja
cmp
mull
int3
jmp
stc
in
xor
rorl
cmc
test
mov
adc
xorb
cld
rorl
push
xchg
xcrypt-ofb
cmpsl
scas
decl
xchg
jmp
cmp
idiv
pop
pop
xor
shl
leave
push
push
lahf
xor
das
rol
scas
ss
aad
test
xchg
pop
adc
inc
dec
jmp
mov
imul
and
inc
jbe
sub
jnp
aad
or
inc
lahf
push
into
fiaddl
inc
cs
in
pushl
adc
rorb
mov
dec
lds
movsl
dec
in
iret
lods
loop
push
ds
mov
mov
arpl
cli
sbb
lahf
cmc
xchg
inc
sahf
in
lcall
sbb
sbb
or
data16
jb
sub
mov
xchg
sub
repnz
or
dec
out
mov
and
and
or
sarb
cli
mov
xchg
adc
insb
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
int3
cld
roll
sti
sbbl
adc
scas
add
jp
mov
dec
sbb
jne
aad
add
fwait
add
sbb
or
jbe
jae
mov
push
adc
mov
test
jp
cmp
and
loopne
sarb
scas
and
push
xor
mov
mov
sub
jae
lcall
arpl
int3
cld
rcrl
jg
push
push
cmpsl
pop
cmp
mov
out
es
cld
out
push
test
sbb
rcll
xor
and
int
shll
arpl
mov
sub
push
pusha
loop
mov
push
cmp
mov
mov
and
mov
push
cmp
gs
xor
jns
scas
out
iret
scas
addr16
adc
push
popa
test
imul
idiv
sub
jg
cld
shll
mov
ss
pop
cltd
shrb
inc
nop
cli
jnp
sub
hlt
pop
aaa
sbb
xor
inc
clc
nop
lcall
pop
bound
shll
pop
mov
mov
out
popf
jl
sub
sti
push
mov
pop
sub
ss
popa
in
inc
add
mov
pop
xchg
orl
lahf
xor
fdiv
daa
popa
jecxz
clc
testl
stc
fidivs
dec
add
cmp
mov
adc
fbstp
jge
mov
in
lcall
adc
pushf
pushf
lea
jmp
call
sarl
cli
mov
mov
push
cmpl
xchg
sub
jmp
xchg
push
add
inc
test
add
fisubl
enter
jp
pop
adc
pop
fdivrl
hlt
jmp
sbb
inc
in
xchg
mov
iret
int3
sub
push
bound
pop
dec
imul
loope
push
loopne
ficoms
sbb
mov
cmc
negb
jg
pop
ret
dec
loope
and
test
mov
dec
je
pop
aaa
or
fsub
inc
ja
inc
jns
sub
andl
shll
dec
outsb
pop
mov
dec
out
dec
dec
inc
aad
test
std
test
repnz
sbb
call
mov
es
sbb
sti
fildl
loopne
in
lret
test
imul
in
popa
cmp
repz
fucomp
outsb
push
leave
mov
mov
mov
test
ret
xchg
mov
sub
push
cmp
iret
idivl
xor
jno
imul
ficoml
ror
mov
mov
push
mov
sub
add
add
add
add
add
shlb
add
add
dec
and
add
add
outsb
sub
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
addb
add
add
add
sub
idivl
sub
int
sub
xchg
icebp
sub
add
add
out
mov
sar
mov
cld
jl
hlt
rclb
dec
loope
cmp
repnz
add
lds
jecxz
iret
scas
push
in
int3
jno
sbb
sbb
mov
icebp
shlb
push
mov
and
mov
adc
repz
pop
sbb
jg
jne
shr
inc
js
mov
xchg
or
mov
std
ffree
inc
cmp
out
mov
mov
insb
sar
popa
mov
push
or
cmpl
and
insl
shrl
sub
in
pop
jno
imul
push
jnp
test
std
sahf
addl
fldl
lds
jnp
negb
cmp
mov
sbb
add
inc
inc
stos
enter
shlb
push
inc
loop
cmpsl
fistpll
jmp
push
hlt
push
jo
jle
test
sub
cmp
movzbw
add
or
sar
btr
mov
shr
mov
pusha
cmp
push
test
repnz
pushf
mov
lea
jne
lea
movsbw
movsbw
movb
movsbl
lahf
lea
movsbw
push
bswap
lea
pushf
call
movb
mov
movb
pushl
pushf
pushf
pushl
ret
pushf
pushf
jmp
pushf
mov
mov
call
xorl
and
cmp
xchg
jmp
loopne
push
ficomps
and
push
dec
push
sbb
repz
and
adc
inc
shl
bound
adc
pushf
outsb
lcall
jmp
adc
paddw
in
out
insb
repnz
mov
lret
ljmp
xor
xchg
sbb
loop
test
js
lea
dec
test
fwait
xchg
mov
sbb
subb
fnstenv
js
push
mov
lock
hlt
mov
add
mov
call
cmp
lea
jno
movzbw
mov
lea
movzbw
pusha
call
adc
rorl
sarl
push
xchg
daa
ja
jae
and
lock
je
es
inc
inc
mov
popf
xchg
fcomp
outsl
jb
jnp
xchg
adc
dec
push
sub
jge
cwtl
mov
mov
push
insl
adc
mov
and
adc
arpl
je
xor
ljmp
lret
cmp
xor
mov
pushl
pushf
jmp
mov
cs
cld
shll
nop
inc
cmpsl
pushl
sbb
add
jne
fistpll
ljmp
ds
repnz
or
fcompl
push
pop
mov
mov
mov
sbb
lods
nop
stos
push
jecxz
inc
sbb
movsb
mov
lret
lock
pop
jno
cli
xchg
xchg
pop
jle
sbb
sbb
inc
imul
iret
jecxz
cld
shl
push
sar
movsb
jecxz
sub
sbb
mov
popf
and
cmp
add
jl
mov
cmp
in
jl
xchg
mov
repz
mov
xlat
xlat
or
lret
fcompl
jns
aas
push
fistpl
sbb
xchg
rcl
xor
xor
push
fcmove
mov
ljmp
jmp
mov
mov
sbbb
and
and
rorb
adc
cmp
pop
inc
push
in
pusha
dec
cmp
cmp
shl
pushf
setbe
jmp
xchg
repnz
enter
ret
shrl
mov
or
push
call
dec
mov
adc
jle
xchg
mov
add
jmp
mov
dec
pusha
xchg
jns
nop
testl
xchg
enter
aaa
loope
mov
mov
xchg
mov
mov
aam
mov
mov
outsl
outsl
pop
popa
inc
sbb
addr16
push
sub
push
cmp
cld
rorl
ret
pop
lcall
imul
inc
pop
adc
popa
and
aam
sar
imul
adc
rcrb
fbld
xchg
cmp
fsub
sahf
in
rol
std
jle
add
mov
fwait
jecxz
jg
inc
scas
xor
call
out
sahf
mov
jp
add
adc
ficoms
cmp
movsb
je
jmp
and
stc
cltd
inc
cmp
jecxz
test
into
shll
pop
mov
mov
mov
out
push
and
test
fstl
push
sub
or
sub
jno
jns
hlt
pop
sbb
icebp
sbb
pop
push
dec
mov
das
mov
mov
dec
insb
gs
outsb
imul
imul
cld
shll
pop
popf
insb
add
enter
dec
and
mov
sti
insl
daa
pop
bound
xor
and
je
mov
xchg
clc
sahf
dec
rcll
push
cmp
rcl
cmpl
lock
data16
or
fisubrl
aam
aas
xchg
adc
adc
test
leave
ds
jno
shrl
sub
jo
sbb
test
jp
jae
sub
lea
jae
stc
clc
sub
pushf
push
push
lea
call
push
lea
jae
cmp
xor
jmp
call
rcll
cmc
lea
in
les
aas
xor
stc
fcmovnu
lds
pop
rcll
out
shrb
leave
cs
dec
sbb
push
xchg
mov
dec
add
lods
or
mov
inc
jle
jle
adc
jle
fisubl
out
jne
sbb
push
inc
ss
jbe
addr16
movsl
aad
jnp
inc
cmpsb
cmp
sbb
mov
bound
cmp
rcll
scas
jle
xor
lret
or
jb
mov
mov
mov
or
adc
inc
xor
xchg
js
push
jp
mov
pop
mov
fildl
push
xor
leave
mov
lea
and
scas
and
roll
mov
push
adc
fisttpl
daa
leave
jns
jmp
mov
adc
movsl
pop
or
mov
mov
push
xchg
imul
xchg
lret
repz
jmp
cmp
shrl
mov
push
hlt
fs
jge
xor
in
ffree
pop
daa
mov
in
arpl
sbb
push
lea
push
add
add
sub
mov
je
push
fcomi
sub
stos
repz
out
jge
insl
cld
dec
cs
cli
lcall
ljmp
call
ss
es
test
clc
test
mov
jp
cwtl
fldenv
pop
and
jnp
mov
cmpsl
ss
mov
cmp
les
sub
mov
or
inc
and
out
xor
cwtl
inc
push
subb
sbbb
inc
adc
les
cmp
sar
add
jo
mov
fcomp
loope
xchg
aas
inc
and
mov
pushl
sarb
notl
sbb
in
jmp
add
jbe
lret
int
pop
add
push
adc
mov
in
enter
xor
sub
or
sbb
push
mov
mov
mov
adc
or
lret
sbb
jns
sahf
jb
aam
dec
mov
adc
les
mov
lahf
into
out
and
mov
or
insl
sahf
mov
jbe
les
subb
call
push
mov
jl
mov
inc
jbe
adcb
repnz
imul
xlat
rorl
je
aam
jmp
int3
add
xchg
and
shr
idivl
shr
jg
ljmp
subl
inc
scas
call
adc
fldt
mov
loop
fwait
mov
mov
cmp
mov
das
mov
dec
dec
shlb
xor
inc
or
lret
jecxz
fcmovnbe
cltd
testb
imul
push
aaa
jl
xchg
pushf
mov
ret
stc
and
ret
cmp
clc
inc
cmp
rcll
enter
or
pop
mov
aad
inc
add
mov
cmp
clc
addr16
xor
bound
xor
in
dec
insl
stos
repz
mov
xchg
jg
fstp
inc
mov
adc
pop
cmpsb
mov
xchg
sti
mov
cltd
add
xchg
mov
ja
das
mov
adc
adc
js
ja
add
mov
xor
hlt
inc
xor
fs
pushf
pushf
jmp
aam
into
aas
cld
shrl
mov
xchg
mov
cwtl
aad
testl
lds
int
loope
add
faddl
xchg
or
mov
jmp
push
lock
jo
jge
push
notb
and
jae
mov
mov
xor
dec
push
jg
subl
jne
xchg
outsb
cmc
clc
push
sbb
and
add
push
ljmp
xchg
bound
orl
fdivp
lea
or
cmpsl
inc
dec
pop
pushw
sub
addr16
shrl
or
push
popf
ss
lods
in
and
hlt
lcall
out
pop
xchg
int3
and
mulb
inc
cwtl
dec
nop
mov
stos
loop
mov
scas
mov
jbe
mov
jno
test
push
mov
js
ds
shl
mov
and
sbb
je
popf
sub
lret
insl
jno
mov
not
rep
andl
adc
lfs
or
lret
shll
mov
or
adc
sti
lods
out
pop
cmp
ja
in
fs
fs
pop
outsb
jno
ss
adc
fisttpll
mov
inc
adc
add
xor
or
mov
das
push
mov
sub
mov
out
aad
xchg
dec
inc
lods
xchg
pop
fmuls
push
cmp
cs
add
aad
cld
shrl
jmp
lret
cltd
mov
adc
mov
ds
mov
test
test
cwtl
stos
jmp
lret
sbb
push
rorl
or
loopne,pt
loop
jg
push
mov
mov
dec
pusha
xor
and
mov
xchg
fstpl
cmpsl
sbb
movsl
sub
sbb
cld
rcl
outsb
notb
dec
dec
std
movsl
sbb
lea
pop
push
call
rcll
sub
dec
sbb
or
ret
inc
daa
push
cmp
icebp
add
imul
pop
pusha
add
mov
jmp
ret
dec
dec
repz
fcmovnbe
jg
mov
fisubl
int
sub
data16
popf
lods
mov
shl
fstps
test
pop
and
iret
xchg
pushl
lea
jae
jmp
xorb
cld
rcll
push
out
int3
fidivrl
adc
sub
pop
lcall
mov
aam
fldl
pop
cmp
cltd
jnp
insb
inc
inc
xor
lea
mov
pop
add
dec
ret
pusha
into
sub
or
fisubrl
ret
push
fists
jne
cmp
int
mov
jne
mov
xchg
mov
and
or
pushf
stos
pop
movsl
lock
icebp
enter
push
push
inc
mov
flds
ja
cmp
and
jecxz
jns
mov
js
add
cld
rorl
std
cmp
push
fistl
add
fistps
cmp
fsubs
icebp
fidivrl
jo
jno
and
xchg
test
fwait
push
adc
sub
xorb
pop
in
shlb
clc
int3
sub
mov
inc
test
xor
mov
sub
or
dec
cmp
mov
repz
pusha
cmpsl
imul
mov
xlat
gs
lret
sub
xchg
ljmp
push
lea
jne
push
call
jle
sbb
cld
sar
lods
insl
je
xor
test
jno
shrl
fwait
bound
or
loopne
rcrl
cmc
sbb
and
sbb
mov
dec
push
bound
sub
cltd
enter
xchg
pushf
sub
cmpsl
or
cmp
repnz
jo
sar
xchg
cld
mov
pushf
cld
setno
out
xlat
xor
lret
gs
shll
notb
jns
lcall
pop
jl
imul
lea
lcall
push
fisubrl
push
pop
xor
cmc
repnz
xchg
shll
or
cmpsl
and
xchg
push
mov
mov
cmpb
jmp
jl
pop
inc
inc
scas
movsb
jo
orb
leave
mov
adc
cmp
push
lcall
sub
inc
and
frstor
mov
and
ja
clc
cmc
imul
pushf
add
movb
pushl
lea
jmp
push
ror
clc
add
jmp
adc
xor
shl
pop
rorl
dec
xlat
insl
out
into
cmp
jmp
xor
mov
jmp
adc
sti
push
push
mov
rcll
inc
add
sub
ret
lods
push
inc
iret
fldenv
add
mov
and
mov
sub
xchg
mov
out
in
mov
push
sbb
stc
aad
dec
pusha
lcall
jmp
hlt
push
les
pop
adc
cmc
addr16
push
negb
into
or
in
test
mov
and
mov
mov
cld
sarl
imul
mov
cwtl
add
dec
jp
ljmp
outsb
fwait
jecxz
fs
pop
xor
outsb
lret
popa
fdivrp
cli
repnz
and
loopne
mov
cmp
lret
les
imul
in
loopne
bswap
dec
adc
popf
mov
test
push
aaa
loop
adc
push
inc
cmpsl
rcl
in
mov
fs
lock
mov
dec
inc
jbe
arpl
cmp
adc
mov
mov
cld
sbb
and
mov
mulb
loop
ret
jae
pop
push
ljmp
loope
adc
sub
jecxz
add
xchg
jne
cmc
jle
push
sbb
jg
add
pushw
and
mov
jae
pop
cmp
gs
jle
enter
ljmp
sub
leave
add
jmp
xchg
sbb
inc
iret
ret
shll
addb
xchg
dec
or
or
inc
sbb
xor
add
test
aad
stc
rcrb
xor
fisubs
push
test
dec
push
sahf
test
cmc
fcoml
and
dec
fwait
pop
sub
xor
out
sbb
shll
push
testl
stc
xlat
insl
pop
push
cmp
ja
je
xor
xchg
sbb
repnz
mov
jecxz
mov
xor
roll
daa
pop
movl
ret
xor
jae
stos
lock
pushf
jecxz
neg
lahf
shr
sbb
push
mov
fldl
dec
adc
int
out
mov
pop
cmp
cld
aam
jb
inc
and
xchg
idivl
lods
sub
xlat
or
push
inc
fists
pushf
enter
or
adc
or
stc
cmp
inc
inc
push
test
push
xchg
ret
mov
or
insb
cmpsl
jns
xchg
int3
cmp
add
dec
pop
idiv
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
jmp
addl
mov
inc
aam
pop
dec
rcll
addb
jge
sahf
ret
jns
mov
lahf
je
ss
out
cmp
cmp
cltd
or
loope
testb
loopne
out
shrl
inc
scas
stos
cs
leave
mov
ds
psubsb
cmp
inc
gs
add
std
mov
xlat
pop
and
dec
imul
loopne
sbb
jnp
cs
inc
add
xchg
and
mov
bsr
cmp
add
shl
clc
pushf
shld
mov
pushl
pushf
add
cmc
push
cmc
clc
mov
and
adc
pop
cmc
mov
bt
pusha
cmp
movw
pushf
jmp
lea
ja
jle
add
neg
rol
sub
cmc
add
add
sub
btc
mov
inc
cmc
mov
bt
cmc
call
mov
jmp
lea
jae
cmp
stc
bt
cmp
jae
pushf
push
pushf
lea
jae
push
cmc
stc
push
cmp
pusha
lea
ja
dec
inc
inc
push
pusha
inc
sub
or
cmc
cmc
pushf
xchg
sub
not
rol
test
xchg
mov
push
cmp
ror
mov
sub
bt
push
bsr
cmp
lea
mov
test
call
jmp
cmp
push
jmp
insl
mov
xor
mov
add
fs
rclb
mov
cltd
sub
or
in
les
stos
xor
imul
or
push
cmp
pop
mov
push
jb
xchg
insb
jmp
int3
ficompl
imul
roll
push
enter
add
std
pop
addr16
nop
lcall
les
mov
jnp
jne
push
loopne
rorl
adc
and
mov
bound
sbb
ffree
inc
rol
add
adc
xor
mov
sbb
sarb
lahf
xchg
shll
inc
nop
fwait
cltd
fistpll
movsb
ljmp
sub
mov
test
sbb
movsl
sbb
jnp
cmc
into
inc
add
and
les
fisubrl
mov
adc
and
push
xchg
bound
sub
outsl
ffreep
push
cld
lcall
repnz
sub
jge
adc
and
loopne
cld
ror
lcall
xor
jmp
mov
xchg
adc
cmp
mov
lret
mov
and
xchg
mov
sbb
pushf
mov
push
mov
pop
insb
or
pop
jg
cmc
adc
clc
fisubs
ja
jp
mov
cmpsl
ja
stos
mov
fiaddl
in
mov
loope
loopne
div
xchg
outsl
xor
adc
sbb
rcll
std
pop
test
jno
test
or
enter
pushf
dec
jmp
push
xor
outsb
stos
lds
cmp
jnp
mov
xchg
in
jnp
jo
jns
out
aad
scas
incb
add
mov
imul
enter
push
shl
xor
sarl
xchg
gs
mov
rcl
pop
aad
mov
and
dec
int3
je
inc
aas
xchg
jbe
test
out
out
dec
cltd
jmp
or
rcl
sbb
rolb
ljmp
push
and
or
xor
lds
push
pop
outsb
sub
shll
cwtl
mov
sahf
xchg
sbb
subb
xchg
mov
pop
insl
add
je
lods
mov
pop
or
dec
and
push
aad
and
movsb
sahf
int
int
sub
test
add
pop
test
add
jg
gs
dec
test
movsb
pushf
adc
call
push
ss
xchg
mov
dec
shrl
dec
pop
pop
movsl
loop
sti
lcall
imul
push
clc
mov
fistl
dec
cmp
outsl
iret
push
dec
xor
andl
je
sub
push
pushf
push
lea
jmp
inc
stos
int3
sub
rcll
dec
subl
xchg
xor
add
cltd
sahf
jb
hlt
jo
xchg
rorl
outsb
loope
mov
or
pop
aam
icebp
cmc
jns
adc
call
jg
sbb
mov
in
fidivs
add
dec
enter
in
ds
jle
jno
add
or
xchg
sbb
pop
cmpl
sbb
ss
jae
push
inc
or
imulb
test
pop
mov
or
lcall
pop
xchg
jp
bound
sbb
sub
roll
inc
mov
push
jo
shrl
nop
pop
lret
es
loopne
nop
and
roll
test
and
pop
or
idivb
dec
cli
xchg
jae
cld
mov
dec
lcall
adc
mov
out
aad
sbb
out
jno
pop
jl
sti
xor
icebp
add
jns
push
icebp
fwait
dec
jmp
cmp
pop
lods
movsl
inc
fidivl
jnp
std
pushl
imul
cld
shrl
insl
sub
or
pop
jmp
nop
gs
daa
pushf
and
inc
je
cli
xchg
sub
int3
fstpl
loop
aas
mov
jmp
sub
imul
jb
xchg
arpl
neg
xor
xor
adc
fsubs
and
or
mov
xchg
movsl
dec
test
stc
mov
jge
dec
loopne
pop
in
adc
outsl
push
loope
xor
inc
xor
cld
rorl
scas
lds
mov
xchg
das
push
dec
loop
aad
sbb
std
push
sbb
shr
pop
jns
movsb
loopne
xchg
inc
mov
fists
mov
arpl
jge
icebp
push
jge
dec
sbb
out
sbb
mov
adc
mov
pop
out
incl
aas
mov
pop
xchg
ds
pop
and
or
or
dec
push
xor
shrl
imul
shrb
lea
mov
dec
shrb
nop
fists
lods
pop
xchg
cmp
fdivs
out
inc
addr16
lahf
or
dec
cmp
test
mov
mov
and
push
jl
dec
pop
sbb
test
out
lods
or
pusha
aad
fisubl
fisubrl
lret
dec
stos
enter
lea
nop
jg
mov
pushf
adcb
gs
xchg
jbe
mov
pop
filds
sbb
inc
xchg
add
jnp
std
call
pushf
pusha
movl
mov
jmp
pusha
jmp
cmp
movb
movb
mov
lea
jae
pusha
bt
call
jmp
add
shrb
rol
cmp
mov
insb
hlt
insl
or
or
xchg
mov
mov
mov
and
popa
mov
mov
jle
add
jne
mov
jnp
add
sbb
cmp
jb
int
mov
dec
jo
mov
push
mov
xor
outsl
mov
aam
rol
in
int
cmc
add
jmp
xchg
setne
mov
sete
push
jmp
cmp
call
test
bt
sub
push
movw
pushf
inc
lea
call
rcrl
das
cld
shl
inc
or
jge
mov
in
imul
test
push
test
call
daa
testb
mov
arpl
inc
dec
xchg
sbb
les
cwtl
hlt
or
notb
clc
cmp
dec
push
movsb
xchg
out
cmpsl
push
ss
add
mov
mov
aam
sub
shlb
pop
mov
and
repnz
nop
pop
loopne
or
clc
std
repz
jnp
mov
movsb
test
and
push
aaa
fwait
add
xchg
test
and
sbb
or
test
and
or
add
int3
orb
push
add
cmp
test
and
jp
inc
add
addb
xchg
mov
sbb
cld
inc
dec
popa
add
cmpsl
test
jae
mov
addb
add
gs
xor
movsb
test
and
mov
add
mov
aas
and
jbe
imul
pop
aam
pop
inc
lods
loop
icebp
dec
test
and
sbb
imul
pop
test
dec
and
add
das
and
jmp
js
adc
xchg
test
outsb
dec
lea
push
and
mov
ret
add
xor
test
and
loop
ret
cmp
stos
jmp
stos
test
and
inc
aad
add
stos
test
mov
sarl
push
jp
divb
loop
test
and
cwtl
xor
movsb
test
and
jp
add
test
and
push
pop
cld
add
popl
insl
adc
loope
mov
mov
stos
test
and
push
popa
popl
mov
stos
test
and
mov
stos
add
pushf
stos
test
and
sbb
add
aam
test
and
cmp
add
pushf
stos
test
insl
mov
jecxz
mov
movsb
test
and
add
add
aam
add
aaa
movsb
test
and
xchg
roll
insl
stos
test
dec
notl
add
js
add
cmp
test
and
dec
jge
add
int3
test
and
movsl
movsb
addl
sbb
and
es
sahf
add
sbb
pop
aas
add
sbb
test
and
mov
xor
and
repnz
ret
scas
stos
test
and
lret
add
xor
roll
cltd
popl
xor
add
lea
orb
add
dec
xchg
test
and
sub
mov
jno
movsb
test
and
or
test
imull
nop
add
addl
loopne
popa
dec
stos
test
and
test
add
andb
fnstenv
fs
jae
bt
push
xor
push
mov
lea
call
push
lea
jae
setnp
push
setl
mov
call
xchg
push
pusha
jmp
jmp
bsr
push
inc
mov
inc
and
bsf
rcl
push
shl
test
push
xor
not
bts
btc
push
push
mov
stc
setb
cmc
push
jmp
jl
mov
cld
sarl
sar
mov
mov
mov
andb
push
mov
add
jae
rclb
daa
jle
cmp
sbb
xchg
jno
pop
mov
stos
leave
aas
cwtl
pushf
aam
cmpsb
sbb
imul
icebp
icebp
lock
call
mov
jecxz
je
aam
icebp
push
xor
ljmp
xchg
data16
pop
sub
inc
jbe
sub
and
adc
and
imul
call
push
enter
rcr
insb
lret
push
call
mov
mov
aad
insb
stos
jbe
xchg
jl
adc
jg
in
outsl
dec
out
lods
mov
loope
outsb
fldcw
aaa
test
faddl
ret
ss
fldcw
test
repnz
repz
mov
and
into
cmp
daa
inc
mov
mov
es
js
sbb
or
sbb
add
hlt
das
pop
mov
push
inc
sub
or
enter
repz
dec
cmp
xor
mov
adc
jge
or
ret
sbb
sbb
mov
or
mov
rep
movzbw
pushf
bswap
mov
pushf
push
lea
jmp
pusha
pusha
lea
call
push
pushf
lea
jne
jae
push
mov
call
push
lea
jne
jmp
psrlw
and
sarl
push
js
mov
adc
pop
add
test
mov
cmp
mov
jno
loope
push
mov
jl
mov
mov
jl
cmp
adc
sub
rep
inc
aam
daa
insb
pop
mov
add
lds
add
cld
shll
mov
pop
aas
sub
push
loop
mov
inc
aam
movsl
pop
mov
fldl2t
jo
ds
mov
je
fadd
lahf
or
fwait
xchg
daa
movsb
mov
xlat
jp
int
mov
add
fdivr
les
movsb
lret
xor
aad
ret
fs
jnp
or
stc
ret
pop
sbb
mov
sub
rcr
out
pusha
mov
insb
bound
mov
movsb
jnp
clc
and
pop
jmp
mov
cmp
mov
mov
sub
add
test
dec
call
cmp
test
mov
jmp
fisubrl
scas
repnz
xchg
mov
push
fs
lret
dec
fisubs
out
push
dec
in
push
out
sbb
jnp
sub
dec
call
lods
aam
push
add
lea
mov
aas
inc
stos
pushf
popa
xchg
gs
into
sbb
shrb
pop
in
mov
mov
imul
ljmp
and
and
roll
fwait
inc
dec
addl
xorl
or
pop
push
repz
adc
push
mov
out
stc
aaa
fs
rol
pop
jbe
mov
inc
dec
sub
mov
xchg
mov
sbb
xchg
pop
je
aaa
push
adc
insl
push
outsl
mov
jecxz
cs
dec
xchg
jge
in
pop
mov
pushf
add
in
in
loop
or
add
rclb
cld
shrl
flds
loope
clc
push
pop
jo
mov
insb
mov
mov
lock
jbe
cmp
fiaddl
out
rol
in
jae
mov
insl
mov
hlt
frstpm(287
push
push
imul
fnsave
mull
out
ljmp
in
out
ss
arpl
cmp
mov
repz
add
xchg
pop
or
cmp
sub
pop
imul
pop
fisubrl
jno
or
mov
out
fdivs
sarl
cmp
seta
jo
jnp
jb
adc
xor
mov
lcall
or
pop
pop
loop
xlat
je
cs
leave
jge
dec
lods
movsl
ss
ret
lods
cld
aaa
repnz
cmp
sub
outsl
jns
aam
clc
pop
adc
test
cmp
test
lret
mov
inc
mov
mov
sarb
fnstenv
and
and
jno
jmp
movsb
in
dec
arpl
cld
rcll
or
adc
iret
movsl
pop
cmc
fwait
jns
in
mov
imul
shr
rcrb
scas
out
outsl
popa
add
dec
cmc
loopne
ret
xchg
mov
mov
test
movsb
imul
fdivrs
inc
aaa
repz
ror
test
push
out
repz
aad
mov
push
sti
fwait
mov
lods
adc
adc
cld
shl
xor
mov
and
pop
jnp
push
test
sub
xor
shlb
xchg
lret
jmp
mov
push
dec
sti
cmc
add
add
sbb
or
push
mov
adc
mov
imul
aaa
xchg
jbe
rcrl
cmp
stos
lods
xchg
cmp
mov
mov
inc
cmp
ja
xchg
adc
sbb
dec
jmp
xor
mov
inc
push
mov
xor
pop
lahf
ret
cmp
movsb
xor
lcall
loopne
jecxz
ss
scas
iret
dec
jae
push
gs
xor
icebp
shlb
imulb
pop
or
and
iret
mov
and
popf
insl
or
push
push
mov
stc
cmp
push
dec
pop
xchg
imul
ljmp
and
push
mov
adc
aad
ja
xchg
mov
cld
push
std
push
push
out
std
jo
ja
les
pop
sbb
xchg
shrb
jle
sbb
iret
mov
add
or
xor
enter
sbb
mov
mov
fidivs
jmp
dec
dec
inc
lds
jnp
push
mov
add
cli
scas
mov
or
call
movsl
into
aam
test
sub
fcomip
pop
mov
test
and
insl
and
shll
jbe
insb
popf
pop
out
sub
icebp
fs
xor
cmpsb
test
xor
push
mov
jno
inc
cld
lcall
scas
cwtl
gs
mov
mov
je
popf
outsb
mov
mov
xor
push
gs
addl
outsb
cs
outsb
mov
lahf
pop
sbbl
rorb
in
mov
imul
test
leave
and
sarl
jmp
and
pop
and
inc
cli
dec
xor
dec
cld
sbb
or
scas
push
jecxz
aad
fdivs
dec
xlat
jbe
pop
fs
push
pop
or
cmpsl
movsl
addl
jnp
cwtl
fldt
into
rorb
cmp
cmp
mov
call
popf
jno
cli
sbb
sti
loopne
xor
mov
adc
inc
mov
test
xor
xor
ljmp
push
inc
push
xor
cs
insb
add
jmp
sbb
roll
dec
jle
lods
xchg
fs
mov
test
sbb
mov
test
popf
pop
out
mov
inc
jae
dec
jae
daa
lcall
imul
mov
inc
jbe
push
lods
stos
cli
fmul
add
mov
add
es
and
mov
imul
lods
mov
cs
mov
cwtl
push
fsubrl
fs
jae
dec
jmp
push
shl
sbb
shl
push
mov
inc
adc
hlt
fimuls
loop
leave
mov
repnz
mov
imul
jg
lcall
jae
mov
inc
outsb
les
inc
repz
pop
clc
inc
ljmp
dec
outsb
pusha
sti
inc
outsl
or
in
pop
jns
negl
out
push
push
jl
push
movq
fldl
shll
dec
into
arpl
sub
insb
frstor
dec
xchg
jb
pop
jge
sahf
psadbw
imul
jo
cmp
and
dec
pop
pop
cmp
jo
pop
test
mov
sbb
sub
dec
int3
or
mov
mov
mov
ljmp
sbb
loopne
mov
xchg
add
pop
inc
fstpl
xor
rolb
ljmp
mov
lods
test
ss
ss
jns
sbb
jae
loop
loope
hlt
jae
mov
dec
jg
or
flds
ljmp
inc
in
jg
jbe
jno
mov
inc
jge
lea
or
nop
pushf
and
inc
xor
or
adc
movsl
inc
xor
lret
mov
push
mov
out
data16
pop
imulb
pop
pop
pop
in
insb
adc
in
dec
xchg
mov
movsl
and
cmp
insb
dec
enter
mov
or
push
push
mov
add
jno
scas
jge
or
mov
push
pop
test
cmp
inc
stc
inc
fdivrl
mov
cltd
xchg
repz
icebp
inc
inc
mov
sti
jo
popf
popf
mov
sbb
jmp
mov
mov
test
loopne
xor
stos
mov
std
aad
gs
cmp
dec
xchg
popf
test
or
mov
and
popf
out
and
stos
pushf
pushf
lea
jmp
lods
pushf
push
call
call
lea
call
pushf
adc
jmp
call
mov
push
jmp
lea
jg
ror
stc
neg
call
xor
xadd
pushf
sbb
mov
cmp
jmp
call
pushf
mov
jmp
aad
clc
mov
cmp
mov
cmp
pusha
bt
clc
add
pusha
call
push
pusha
inc
push
push
not
jmp
xchg
push
or
mov
rcl
and
sub
neg
ror
xor
pop
bswap
movsbw
rcl
ror
or
mov
shl
or
mov
pusha
movb
call
pusha
movzbl
clc
call
call
movsbw
mov
and
rcl
mov
sbb
sub
xor
pushf
movzbw
inc
not
inc
inc
not
test
shrd
add
not
shrd
test
pushf
xor
sub
mov
pusha
jmp
call
pushf
call
sub
bt
push
cmp
xor
clc
clc
add
pushf
mov
cmp
sub
stc
jmp
pusha
sub
pusha
push
pushf
push
lea
jmp
sub
jmp
pushf
popl
shrd
lea
xchg
btr
pushl
adc
mov
push
shr
mov
stc
neg
not
xor
jmp
bswap
pushf
popl
pop
sar
push
rol
bt
mov
bsf
pushl
push
test
movl
js
cmp
mov
call
pushl
popl
mov
pushf
pusha
lea
jmp
not
movsbw
push
pusha
mov
lea
ja
pushf
pusha
pusha
lea
cpuid
stc
pusha
sub
push
call
lea
bswap
mov
not
bswap
push
jmp
bt
mov
jmp
jmp
jmp
and
mov
shl
mov
call
movb
pushf
pushf
pushf
popl
mov
pushf
jmp
jmp
jmp
sub
push
lea
jmp
pushl
mov
pushf
pushf
popl
pushf
pushl
popl
pushf
pushf
pushl
pushl
lea
jmp
lea
jne
movzbw
mov
stc
pusha
cmc
push
and
stc
cmp
mov
lea
jne
pushf
xorb
lea
pop
bswap
pop
pushf
pushf
mov
mov
lea
jmp
movzbw
push
jmp
pushl
popl
movb
mov
mov
movb
lea
jmp
push
call
pushf
cmc
push
pushl
ror
stc
neg
pushf
jmp
shl
inc
bswap
bsr
rdtsc
pusha
sub
pusha
pushf
mov
jmp
pushf
popl
sbb
btr
bswap
xchg
not
shl
pushl
popl
bswap
movl
rcl
rcl
mov
push
neg
ror
movzbw
bswap
shrd
xor
clc
rcl
movsbw
not
ror
rcr
xor
lea
jmp
clc
movl
sub
lea
jg
pushf
movb
mov
pushf
movb
lea
jmp
add
jmp
push
push
pushf
xchg
push
pusha
mov
movsbw
mov
call
clc
cmc
sub
pushl
mov
movb
lea
jmp
xor
lea
pushf
test
jmp
movzbw
mov
bswap
mov
mov
pushl
movsbw
pushf
pushf
popl
shl
xchg
shr
jmp
push
mov
mov
mov
jmp
not
mov
movsbw
lea
lea
jg
lea
push
jmp
shld
xorb
pusha
bswap
not
bswap
mov
pushf
lea
jmp
pushf
call
push
call
pushf
mov
jmp
pusha
jmp
mov
movb
pushf
pushf
lea
jmp
add
add
lea
mov
bswap
push
movsbw
mov
jmp
mov
lea
pushf
jmp
xor
movb
inc
jmp
mov
mov
pusha
jmp
clc
bsr
call
sub
bt
test
mov
stc
sub
pushf
pushf
mov
inc
call
cmc
pushf
xor
bt
pushf
test
sub
call
push
pushf
mov
mov
lea
jmp
cmc
call
shld
mov
movzbw
rcl
btr
neg
stc
jmp
pushf
mov
pushf
pushf
lea
jmp
mov
lea
pushf
call
jmp
stc
bt
btc
mov
cmp
rol
mov
push
sub
bt
shr
jmp
jmp
pushf
mov
pushf
pushf
push
pusha
lea
jmp
movsbw
push
mov
bswap
movsbw
mov
mov
mov
pusha
not
mov
movw
not
pop
push
pushf
popl
bsr
shld
or
mov
shl
or
pop
pushl
popl
pushl
movl
rcr
bsr
mov
rcr
sub
neg
xor
and
neg
xor
movzbw
ror
sar
lea
bt
stc
sub
pushf
pushf
push
pushf
lea
jmp
mov
jmp
push
mov
jmp
movsbw
mov
call
pushl
and
pushf
mov
push
pushf
pushf
popl
call
sub
bt
cmp
bt
shl
call
pusha
lea
jns
push
pusha
call
mov
pushl
mov
jmp
lea
jle
push
pushl
lea
pushl
movb
mov
mov
pusha
lea
jmp
lea
xchg
jmp
cmp
cmc
sub
push
pushf
pusha
mov
lea
jmp
pop
pushf
rcr
add
inc
push
shl
pusha
pushl
popl
shl
movzbw
movl
sar
test
lea
rcr
mov
cmc
xor
sbb
neg
stc
xor
btr
ror
inc
shld
clc
lea
mov
jmp
adc
bswap
shl
neg
mov
test
add
push
pushf
pusha
push
lea
jmp
mov
movb
call
clc
neg
pusha
dec
push
test
sub
call
mov
pusha
jmp
pusha
push
lea
cpuid
push
clc
sub
cmp
pushf
cmc
cmpl
call
pushf
call
call
mov
movzbw
pushf
neg
and
push
bswap
sbb
shl
pushl
test
shl
push
sar
mov
dec
stc
neg
rol
bswap
xor
btc
btr
ror
inc
stc
mov
jmp
neg
add
bts
ror
jmp
lea
pushf
sets
inc
bswap
stc
rol
dec
setp
mov
pop
dec
bts
sar
cmc
and
and
shl
push
stc
mov
movl
call
xchg
not
call
bts
rol
bswap
mov
pushf
sub
pushf
pushf
mov
lea
jmp
mov
mov
lea
jmp
test
bt
mov
sub
jmp
push
pushl
popl
push
mov
add
stc
test
cmp
pushl
popf
movw
pusha
push
lea
jmp
aas
shr
mov
rcl
stc
stc
mov
call
cmp
or
pusha
call
movzbw
pushf
popl
btr
rcl
xchg
btr
not
dec
pushl
popl
shl
rol
xadd
movl
test
shl
adc
bt
mov
shl
not
pushf
sub
neg
clc
shl
xor
rcl
ror
neg
lea
test
call
mov
mov
mov
lea
jmp
pushl
popl
push
lea
jmp
push
cmp
clc
sub
call
push
push
pushf
pushf
popl
lea
jle
pusha
push
pusha
pushl
popl
movb
pushf
pushl
movb
lea
jmp
test
shrd
mov
rol
adc
shl
mov
push
cmc
not
movl
cmc
pushf
mov
not
pusha
cmc
sub
call
pusha
ror
dec
jmp
sub
jmp
pusha
movl
mov
jmp
pusha
cbtw
pusha
clc
cwtl
jmp
mov
mov
lea
jo
push
movsbw
pushf
mov
movzbw
jmp
pusha
mov
inc
sub
neg
movb
lea
dec
rcr
sub
xor
movzbl
pushf
test
movb
mov
cmp
clc
clc
or
call
mov
mov
movb
push
lea
jmp
mov
pushl
pushf
movw
movsbw
mov
movl
pushf
pushf
popl
shl
not
dec
shl
mov
neg
rcl
rol
adc
pushl
popl
inc
movl
cmc
rol
mov
bswap
cmp
mov
neg
xchg
shr
push
xor
pop
ror
shrd
mov
cmp
call
cld
cld
cld
push
pusha
pusha
rep
clc
mov
rcl
mov
bt
bt
pushf
bt
pushl
popf
movb
movw
mov
lea
jmp
pushf
mov
pusha
lea
jmp
stc
sub
pusha
lea
jmp
pushl
popl
pushf
lea
jmp
pushl
mov
pusha
pushl
pushl
lea
jmp
btc
mov
stc
and
pusha
lea
jbe
clc
cmp
pushf
pusha
pusha
lea
jne
movzbl
xorb
bswap
movsbw
setle
call
pusha
pushl
popl
pushf
pushf
mov
lea
jmp
mov
push
pushf
lea
jmp
pusha
pushl
popl
push
push
push
lea
jmp
not
cmp
stc
not
jmp
clc
xor
jae
clc
clc
clc
sub
jmp
pushl
jmp
pushf
pusha
movb
call
pop
not
push
call
mov
pushf
pushf
popl
jmp
ja
setnp
push
movzbw
inc
lea
not
rol
bsr
push
lea
add
shrd
bts
sub
das
xadd
lea
pushl
and
shrd
btc
sub
push
lea
mov
movsbw
call
dec
call
xchg
movsbl
movsbl
lea
mov
movzbw
pushf
movzbw
mov
movsbw
movsbw
push
movzbw
mov
lea
pusha
mov
not
mov
lea
ja
bswap
push
lea
mov
pusha
bswap
movw
pushf
popl
jmp
add
test
call
pushf
pushl
popl
mov
mov
pushl
mov
lea
jmp
bsr
xor
btr
bts
mov
bt
bts
mov
sub
ror
rcr
call
pushf
sub
push
ror
stc
clc
cmc
add
test
pushf
cmc
push
xor
test
sub
movb
call
test
shld
pushf
jmp
lea
mov
jmp
pusha
pushf
pushf
mov
mov
mov
bswap
mov
lea
pushf
pushl
mov
mov
movsbw
movsbw
pushl
mov
not
jmp
add
push
mov
movb
pushf
push
pushl
ret
cmc
sub
pushf
test
cbtw
bt
call
pushl
mov
pushl
lea
jmp
mov
pushl
popl
pushf
pusha
lea
jmp
movsbw
mov
pusha
mov
not
pushf
pushf
popl
xor
not
bt
xchg
inc
pushl
popl
bswap
shr
cmp
movl
sub
pushf
adc
mov
shl
inc
sbb
neg
dec
xor
jmp
pusha
jmp
mov
pusha
movw
bt
and
cmc
test
bt
cmp
call
call
push
mov
movsbw
mov
pop
movsbw
mov
movzbl
pop
pushf
popl
pusha
xchg
dec
stc
inc
pushl
popl
rol
movl
btc
shrd
sar
mov
mov
ror
neg
pusha
sbb
xor
bts
ror
jmp
xor
lea
pushl
test
stc
clc
sub
pusha
pushf
pusha
lea
jmp
not
pusha
mov
lea
jb
push
pushf
pushf
mov
movl
movb
pusha
lea
jmp
mov
pushf
pushf
mov
pushf
lea
movzbw
not
mov
pushf
lea
pop
pushf
mov
call
call
xorb
pop
not
pop
pusha
lea
jmp
jmp
jmp
mov
sar
mov
shrd
mov
test
add
jmp
mov
jmp
push
mov
mov
lea
jmp
call
bswap
pushf
shrd
shr
lea
pushf
mov
neg
pushl
pusha
bsf
adc
sbb
movl
movzbw
btr
xchg
rcl
mov
jmp
pop
pop
call
neg
lea
call
pushl
mov
pushl
pushf
lea
jmp
ror
bt
rcl
mov
lea
jmp
jmp
cmp
clc
mov
lea
shld
bsr
mov
pushf
add
pushf
call
xor
movsbw
rcr
sub
cmc
bswap
xor
and
xor
add
inc
shl
call
and
pop
movl
add
bt
sbb
shl
mov
neg
rcr
neg
neg
bt
and
xor
mov
bswap
ror
sub
jg
ror
lea
mov
cmp
sub
pusha
pushf
push
pushl
lea
jmp
stc
cmp
push
jmp
movl
sar
shr
xchg
mov
inc
btr
neg
not
btc
btc
rol
xor
rcr
pushl
btc
pop
ror
adc
call
call
pusha
mov
not
mov
movzbw
pushf
popl
lea
btc
mov
jmp
push
movw
mov
push
movzbw
jmp
mov
pushf
mov
inc
mov
pushf
mov
movb
lea
jmp
mov
bswap
push
push
bswap
mov
push
mov
mov
push
bswap
pushf
jmp
neg
lea
movw
sub
pushf
lea
jmp
mov
pop
mov
movw
movsbw
bswap
not
mov
lea
pushl
pop
call
mov
sub
pop
mov
sub
test
sub
cmpps
scas
fsubrs
adc
mov
adc
enter
lods
sub
xchg
sub
push
mov
adc
mov
sub
mov
sub
mov
sub
mov
sub
xor
sub
mov
sub
sub
sub
jnp
sub
add
sub
xchg
cmpsb
sub
xchg
cmpsb
sub
xor
sub
add
sub
jns
sub
xor
sub
xor
sub
xor
sub
xor
sub
in
aam
adc
sub
mov
sub
loopne
sub
in
sub
mov
sub
jmp
mov
adc
xlat
sub
pop
mov
sub
cld
iret
sub
adc
sub
mov
sub
jecxz
sub
mov
les
adc
mov
sub
mov
sub
arpl
sub
ret
adc
mov
sub
xchg
cmpsb
sub
shrb
adc
leave
sub
loopne
sub
test
sub
mov
sub
sahf
test
adc
shrl
jmp
movsl
sub
xchg
sub
shrb
adc
sub
scas
mov
sub
mov
sub
mov
sub
mov
sub
jmp
test
adc
movsl
sub
shrb
adc
into
sub
cmc
mov
sub
pop
xlat
sub
mov
sub
xorl
xor
sub
xor
sub
xor
sub
xor
sub
sarl
adc
mov
adc
shrl
adc
sub
mov
sub
shrb
adc
test
sub
cmp
sub
jmp
mov
sub
mov
sub
fbstp
sub
arpl
sub
jecxz
sub
arpl
sub
adc
sub
sub
sub
in
sub
cld
iret
sub
cmp
sub
xchg
test
adc
mov
adc
into
sub
mov
sub
test
sub
ret
adc
sub
lods
sub
stos
xlat
sub
cli
lods
sub
scas
fsubrs
adc
shrl
xor
sub
mov
sub
mov
sub
mov
sub
mov
sub
arpl
sub
in
sub
xchg
cmpsb
sub
test
sub
cld
iret
sub
adc
sub
in
aam
adc
sub
or
enter
sub
xor
sub
xor
sub
xor
sub
xor
sub
stos
xlat
sub
mov
sub
scas
fsubrs
adc
int
adc
test
sub
ret
adc
sub
in
sub
pop
xlat
sub
xor
sub
xor
sub
cmp
sub
sub
sub
in
sub
add
sub
xor
sub
pop
xlat
sub
jnp
sub
in
sub
cli
lods
sub
or
test
adc
into
sub
fbstp
sub
xchg
sub
pop
mov
sub
in
sub
xchg
sub
scas
fsubrs
adc
movsl
sub
push
mov
adc
ret
cld
iret
sub
xchg
cmpsb
sub
xchg
test
adc
test
sub
mov
sub
mov
sub
mov
sub
mov
sub
in
aam
adc
lods
sub
push
test
adc
mov
sub
scas
mov
sub
sub
mov
sub
fbstp
sub
xor
sub
xor
sub
xor
sub
lret
adc
shrb
adc
sub
xor
sub
or
ret
xor
sub
pop
mov
sub
jnp
sub
arpl
sub
adc
sub
stos
xlat
sub
xorl
jns
sub
scas
mov
sub
jns
sub
ret
adc
mov
sub
mov
sub
scas
fsubrs
adc
shrl
adc
mov
dec
sar
mov
call
pushf
popl
rcl
xor
xchg
stc
xadd
cmp
pushl
popl
add
mov
call
pushf
popl
shld
shld
mov
cmc
cmc
pushl
popl
pushf
pushf
not
movl
xchg
sar
mov
bsr
not
movsbw
movsbw
neg
bts
shld
cmc
mov
xor
call
mov
call
jmp
pusha
movb
mov
mov
push
pushl
lea
jmp
and
test
pushl
test
push
cmp
neg
pusha
mov
cmc
neg
lea
neg
lea
xor
lea
bt
not
ror
or
bts
bt
lea
clc
sub
push
pushf
push
lea
jmp
pusha
sub
movb
mov
movw
pushf
push
mov
lea
jmp
call
jmp
mov
pushf
movw
pushf
not
mov
pop
mov
call
bswap
inc
lahf
mov
xor
mov
rcr
sbb
mov
bt
call
add
aaa
neg
cmp
movzww
cmp
pusha
pusha
add
test
cmp
add
pushf
bt
bt
clc
rol
cmp
add
movb
sub
jg
stc
stc
xor
pushf
cmp
push
cmp
add
clc
stc
cmp
stc
cwtl
jmp
rol
jmp
sub
pushf
call
movsbw
bswap
mov
pop
movsbw
call
pushl
mov
mov
jmp
add
cmp
shrd
movb
jmp
call
jmp
pushf
cmp
xor
pusha
xchg
pushf
mov
movl
call
mov
jmp
test
clc
pushf
jmp
pusha
mov
jmp
add
pushf
pushf
movw
mov
pushl
mov
pushf
movw
lea
jmp
call
jmp
aad
pusha
rcl
push
mov
cmp
push
jmp
cmc
call
pushf
call
push
mov
pushl
movl
movl
lea
jmp
lea
not
mov
pop
movsbl
jmp
pushf
popl
shl
inc
mov
rcr
pushl
popl
pop
clc
movl
shl
rcr
mov
lea
and
neg
bts
clc
ror
xor
pushf
clc
pop
push
ror
pushf
lea
cmc
sub
pusha
lea
jmp
mov
mov
jmp
pusha
ror
jmp
neg
pushf
xor
pop
pushf
ror
pusha
shr
lea
clc
call
push
mov
call
jmp
stc
add
jnp
push
sub
jmp
inc
push
aas
notl
push
mov
pushl
pusha
sub
clc
stc
and
pushf
lea
ja
pushf
pushf
popl
call
jmp
bt
neg
pusha
dec
stc
call
mov
push
movzbw
pushf
movsbw
mov
movsbl
mov
pusha
movsbw
mov
pushf
mov
not
mov
not
lea
je
lea
push
call
lea
test
cmc
jmp
pushf
lea
jo
dec
bt
sub
cmc
jo
test
cbtw
cmp
jmp
jmp
bts
btc
lea
mov
stc
sub
pushf
pushf
lea
jmp
mov
sub
movb
pushf
push
sub
test
movb
sub
jmp
stc
test
sub
pusha
lea
jmp
dec
clc
cmp
sub
test
clc
cbtw
bt
clc
cwtl
test
mov
call
rcl
add
xor
btr
ror
inc
movsbw
bswap
lea
pushf
jmp
pusha
xchg
pop
pusha
movzbw
pushl
mov
call
neg
neg
lea
bswap
neg
xor
lea
ror
jmp
movb
mov
push
pushf
movl
pusha
lea
jmp
rcr
lea
bt
stc
call
push
jmp
jmp
mov
call
pop
mov
call
bt
call
mov
pushf
pusha
pushf
jmp
mov
lea
call
call
call
rol
push
xor
cmc
jmp
shld
neg
sub
shr
shld
test
xor
movzbw
pushf
ror
rcl
or
btc
sub
movsbl
pushf
setne
lea
movzbl
bswap
not
mov
push
pushf
push
push
inc
test
pushf
stc
jmp
not
pusha
mov
adc
jmp
jmp
and
pushl
jmp
mov
pushf
push
mov
movb
mov
movw
lea
jmp
jmp
mov
mov
movsbl
pusha
mov
call
sbb
movzbl
push
cmp
xor
call
cmp
stc
sub
pusha
call
sub
pusha
pusha
push
push
lea
jmp
movzbw
aam
cmc
movzbw
mov
pushf
pushf
test
bt
sub
cmp
add
movw
call
pusha
pushf
push
pushf
popl
jmp
not
lea
pop
mov
pushf
pusha
mov
jmp
add
pusha
jmp
push
pushf
call
pushf
pusha
xchg
pusha
pushf
mov
movsbw
movw
not
movsbw
mov
pop
jmp
stc
sub
setne
mov
sbb
add
rcl
sub
bsr
rcl
mov
cmc
shl
stc
pushf
call
mov
mov
not
mov
movsbw
pushf
pop
mov
jmp
lea
cld
mov
movzbl
not
mov
jmp
add
pusha
call
mov
push
lea
jmp
daa
mov
call
mov
lea
mov
pop
pushf
lea
not
mov
pop
push
movzbw
movsbw
mov
push
mov
lea
bswap
pushf
popl
call
rcr
shld
sub
mov
ror
mov
push
pusha
movb
sub
stc
shr
pusha
jmp
bsf
lea
cmp
cmc
movb
sub
pushf
pushf
pusha
mov
lea
jmp
pushf
pushf
mov
pushl
popl
pushf
push
mov
lea
jmp
movzbw
mov
movsbw
pushl
jmp
jmp
lea
mov
mov
push
mov
pushf
pop
mov
call
pushl
popl
stc
bsr
movl
not
movsbw
xchg
rcr
mov
xor
not
shrd
sub
neg
call
pushf
pushf
popl
call
mov
call
movw
decl
mov
pushf
lea
jne
push
mov
pusha
mov
pushf
movw
lea
jmp
bsf
call
mov
call
sar
rcr
pushf
mov
push
mov
mov
cmp
push
sub
clc
jmp
cltd
mov
movzbl
mov
jmp
push
call
push
jmp
call
pushf
popl
lea
jl
pusha
pushf
pushl
popl
push
push
push
pushf
lea
jmp
mov
call
movzbw
setne
pop
movzbw
movsbl
mov
setp
pop
movsbw
movsbw
pop
movzbw
jmp
sub
pusha
lea
jmp
pushf
pushl
pop
not
mov
pushf
mov
mov
not
not
not
push
pusha
mov
movsbw
jmp
cwtl
mov
clc
stc
pushf
stc
add
jmp
divl
call
push
lea
jle
pushf
pusha
mov
mov
not
pushf
mov
pop
pusha
mov
jmp
cmc
mov
sub
pushf
movb
movb
lea
jmp
bt
sub
push
mov
pushf
lea
jmp
push
sar
sar
bsf
pusha
mov
sub
not
rol
dec
neg
shrd
btr
ror
xor
pushf
movsbw
ror
dec
bts
lea
jmp
push
sub
pushf
lea
jb
push
pusha
mov
pushf
lea
jmp
and
push
rol
mov
pusha
test
mov
push
pushf
call
jmp
pop
std
bswap
sar
rcl
pop
cwtl
cld
pop
mov
popf
jmp
push
mov
pushf
push
movw
pushl
ret
jmp
call
neg
rcr
mov
call
jmp
xor
pushf
clc
stc
add
stc
cwtl
call
xor
push
ror
pushf
add
neg
call
btr
adc
cmc
movl
sbb
xor
bswap
mov
rcr
jmp
pushf
xchg
pushf
jmp
pusha
mov
lea
call
push
push
pushf
pushf
popl
mov
jmp
pushf
popl
jmp
mov
movl
call
lea
ja
pusha
pushf
popl
jmp
lea
push
push
call
test
add
movl
pushf
stc
cmc
ror
push
jmp
call
mov
pushf
mov
pushf
pushl
mov
lea
jmp
jmp
jmp
cmp
push
mov
lea
jo
sub
push
push
push
pushf
lea
jmp
lea
jne
inc
jmp
mov
pushf
pushf
call
pushf
movzbw
mov
movw
pushf
pushl
ret
test
cmp
inc
rcr
mov
cmp
jmp
mov
not
pushf
popl
clc
push
rcr
jmp
movzbl
pushf
popl
adc
test
inc
bt
push
clc
pushl
neg
xor
stc
push
pusha
bts
pusha
rcr
mov
lea
bt
bsr
stc
neg
pushl
bts
push
rcr
xor
bts
movzbw
ror
bswap
stc
sar
lea
clc
call
ror
pushf
call
bswap
bswap
movzbw
mov
movsbw
call
mov
push
sub
push
pusha
push
lea
jmp
mov
not
movsbw
movzbl
mov
mov
bswap
movzbl
jmp
ror
test
pushl
call
mov
pusha
push
mov
mov
push
pushf
mov
call
add
movb
mov
pushf
pushf
pusha
lea
jmp
call
pushf
popl
test
cmp
mov
ror
clc
pushl
shl
test
inc
push
sar
bt
xadd
bsf
mov
stc
stc
inc
rol
neg
shld
or
xor
bt
rol
stc
ror
pushf
lea
test
pushf
call
movsbw
lahf
jmp
jmp
stc
cmp
sub
push
pusha
pushf
lea
jmp
clc
mov
cwtl
call
pusha
mov
mov
movzbw
pushf
pusha
pushl
pushf
popl
shr
neg
xchg
bswap
or
xadd
bt
pushl
popl
rcr
lea
movl
xchg
or
mov
stc
shrd
bts
neg
sbb
rcr
xor
movzbw
pushf
bts
ror
movzbl
bts
shl
lea
jmp
xchg
mov
movzbw
dec
pushf
inc
dec
not
sub
shr
jmp
movw
pusha
mov
push
mov
mov
pushf
lea
jmp
movsbw
sar
xchg
bts
xadd
pushl
popl
call
sub
push
pushf
lea
jmp
not
bswap
lea
mov
lea
call
pushf
popl
rcr
push
bsf
pushl
btc
sar
clc
push
bsr
mov
not
shrd
clc
neg
inc
lea
or
xor
stc
jmp
mov
pushf
push
mov
lea
jmp
clc
bt
stc
push
sub
jmp
cmp
add
pusha
pushf
push
lea
jmp
jmp
pushf
popl
push
mov
pushl
popl
pushf
pushf
movb
lea
jmp
mov
jmp
bt
add
pushl
jmp
mov
jmp
movsbl
mov
movzbw
push
call
pushl
jmp
pushf
pushf
pushl
popl
pusha
lea
jmp
pushl
popl
rol
movl
rcr
bswap
cmp
mov
xor
clc
ror
neg
jmp
mov
pushf
push
lea
jmp
cmp
clc
sub
stc
ror
bt
push
cmp
add
mov
clc
xor
call
pushf
pushl
popl
pushf
pusha
push
lea
jmp
cwtl
stc
cmp
sub
pusha
pusha
pushl
call
pusha
push
pushf
movb
mov
not
mov
mov
pop
mov
mov
call
sub
pusha
movw
lea
jmp
pusha
movl
pushf
xchg
movzbw
push
movsbw
lea
mov
jmp
pushf
mov
pop
lea
call
pushf
pushf
mov
mov
lea
js
pusha
mov
jmp
bt
cmp
cmpl
call
mov
pushf
lea
jmp
pusha
lea
jne
call
bt
cmp
shr
pusha
pushf
pushl
mov
call
mov
mov
mov
pushf
mov
lea
jmp
cmp
mov
test
jmp
pushl
pushf
popl
bswap
cld
movzbw
mov
xchg
mov
mov
lea
call
mov
pusha
pushl
lea
jmp
lea
seto
mov
seto
shr
cmp
shl
add
seto
mov
call
mov
mov
mov
pusha
pushl
call
lea
call
pushf
popl
pusha
pusha
mov
pushl
popl
pushf
push
push
movb
lea
jmp
call
bswap
pushf
mov
movsbw
call
movw
mov
push
movsbw
not
call
cmc
pushf
sub
pusha
pushf
lea
jmp
movsbw
movw
mov
jmp
mov
jge
pushf
pushl
push
pushf
popl
jmp
pushf
shr
jmp
clc
jmp
rol
cmc
shld
aaa
mov
movsbl
pusha
lea
not
mov
pushl
add
pusha
call
mov
push
movb
pushf
movb
lea
jmp
mov
call
jmp
mov
push
lea
jg
pusha
mov
push
pushf
popl
call
sbb
bts
mov
sbb
pushl
popl
rol
mov
movl
push
shrd
bt
xadd
mov
shl
movw
shrd
jmp
pusha
mov
pushf
call
jmp
pushf
mov
push
mov
pushf
call
pushl
popl
pusha
push
lea
jmp
movzbl
rcr
ror
call
bswap
mov
mov
jmp
mov
mov
pusha
lea
jmp
pushf
sub
pushf
lea
jmp
jmp
pushf
jmp
pushf
popl
movsbl
movsbw
pushf
pop
xchg
test
pushl
popl
bt
adc
or
movl
bts
xor
bswap
and
mov
shl
neg
neg
dec
xor
mov
ror
shl
or
lea
movb
sub
push
lea
jmp
pusha
bswap
mov
jmp
cmp
sub
push
movb
push
pushf
lea
jmp
call
pushf
call
call
lea
push
call
push
sub
pusha
jmp
lea
jno
mov
pushf
pushf
popl
call
push
jmp
call
pushf
popl
pushf
pushl
popl
pusha
lea
jmp
pushf
pusha
movw
mov
jmp
push
lea
jmp
movsbw
mov
mov
pushl
lea
jns
movzbl
push
not
push
not
jmp
sub
pushf
pusha
push
pushf
lea
jmp
jmp
lea
jp
push
pusha
bswap
movzbw
jmp
jmp
cmc
test
add
pusha
mov
jmp
lea
bswap
bswap
mov
mov
call
and
neg
shl
pushf
bswap
xor
rcr
clc
ror
ror
bsf
rcr
pop
pushl
lea
bt
push
movb
sub
pushf
pusha
pushf
lea
jmp
bts
call
pushf
mov
jmp
call
call
lea
push
pusha
mov
pushf
pushl
pushf
lea
jmp
bt
add
cmp
add
jmp
pushf
jmp
neg
movzbw
movsbl
ror
rcr
xor
ror
ror
inc
jmp
movw
pop
mov
push
pop
jmp
xor
movsbw
rcr
bt
ror
shr
movsbl
movsbw
cmp
lea
clc
bt
stc
sub
push
pusha
push
push
lea
jmp
not
mov
shl
xor
call
shrd
clc
mov
pushf
sub
push
movw
cmc
pushf
add
cmc
bt
clc
add
cmc
jmp
pushf
stc
sub
pushf
lea
jne
push
mov
pusha
pusha
movb
lea
jmp
push
pusha
pusha
mov
pushf
lea
jmp
rol
not
mov
jbe
bt
xor
pusha
stc
call
jmp
jp
pusha
push
pusha
pushl
popl
movb
lea
jmp
pushf
popl
adc
xchg
or
shl
pushl
pushl
popl
xor
jmp
pusha
pusha
mov
not
bswap
movzbw
mov
lea
movsbw
push
mov
movsbl
pushf
pushf
mov
not
not
pushl
push
mov
pushf
pushf
movzbw
mov
call
jmp
lea
bsr
test
pushf
btc
sub
movsbw
shrd
bsr
dec
mov
shrd
mov
rcr
shr
add
jmp
add
test
xor
stc
cmp
stc
mov
stc
jmp
bswap
mov
movsbw
push
jmp
lea
call
pushf
not
mov
push
push
lea
lea
jnp
push
call
jmp
mov
cmp
test
clc
sub
pusha
lea
jne
jmp
mov
movsbl
pusha
movsbw
lea
mov
lea
jbe
mov
push
movsbw
push
lea
pushf
not
shl
rcl
push
cmp
pushl
sar
test
add
jmp
aad
bsf
mov
mov
cmp
add
push
pushf
pushf
pushf
popl
call
call
add
setl
jmp
call
and
mov
bt
stc
sub
push
shl
pusha
mov
push
pushf
popl
jmp
mov
movw
movzbw
pushf
mov
movzbw
mov
movzbw
pushf
popl
bsf
xchg
bswap
pushl
popl
xchg
not
movl
bsf
push
test
shl
mov
add
test
neg
rcl
xor
not
rol
clc
movw
ror
jmp
pushl
popl
movw
lea
jmp
pushf
mov
mov
call
movb
pushl
popl
push
movb
pushf
lea
jmp
pushl
popl
pushf
push
movb
movw
lea
jmp
call
lea
jne
inc
call
movb
mov
lea
je
stc
cmc
pushf
bt
xor
bt
xchg
pushf
clc
call
lea
jne
popl
push
push
lea
jmp
call
mov
mov
mov
movb
push
lea
jmp
add
mov
btc
neg
mov
call
mov
movw
clc
jmp
mov
push
lea
mov
movzbl
mov
jmp
sub
stc
shl
call
lea
movb
mov
pushf
push
pushf
lea
jmp
btc
lea
test
cmp
jmp
mov
lea
je
pusha
movl
mov
pusha
pushl
pushf
lea
jmp
pushl
popl
movsbw
lea
rol
sar
movl
jmp
pusha
rdtsc
or
mov
bswap
bsr
mov
setle
add
and
ror
mov
pushl
mov
pushf
cmp
add
call
pushf
pushl
inc
pusha
rol
not
dec
setno
stc
sar
and
xor
cmc
jmp
stc
and
not
mov
cmc
pushf
cmc
clc
sub
mov
test
jmp
push
mov
mov
movb
pushl
mov
pushf
lea
jne
call
clc
btr
lea
ror
bsr
bswap
lea
cmp
bt
pushl
sub
push
movb
push
lea
jmp
call
pushl
popl
pushl
push
mov
lea
jmp
mov
mov
pushf
movb
pushf
lea
jmp
clc
mov
jmp
sub
push
pushf
pushl
push
lea
jmp
mov
not
jo
mov
push
push
pushl
pusha
mov
pushf
bswap
pushf
popl
or
xor
xchg
call
dec
movsbw
mov
shl
dec
mov
call
call
bt
ror
cmc
cmc
add
je
stc
stc
xor
cmp
sub
jmp
