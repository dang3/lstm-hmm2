add
fsubs
push
sub
mov
push
and
aaa
and
popa
dec
test
enter
xor
outsl
nop
pop
sahf
sub
enter
movsl
mov
movsl
pop
xchg
scas
popf
cmp
daa
add
repnz
test
mov
mov
jg
popa
dec
xchg
mov
sub
push
insl
fnstcw
int
inc
push
dec
dec
pusha
mov
mov
cltd
pop
iret
subb
sbb
movsbl
xchg
add
jmp
loop
inc
fisubrl
cltd
dec
sub
jns
test
imul
stc
xor
sub
arpl
and
and
adc
jns
jge
lds
fidivrs
lock
add
mov
sbb
xchg
xor
bound
pushf
addr16
push
rep
dec
aaa
dec
add
and
scas
jne
cmp
jle
push
rorb
jle
sbb
jecxz
and
dec
cltd
pop
jnp
jg
and
in
and
scas
or
pop
test
mov
pop
popa
push
xchg
cli
xor
and
stc
in
lods
lcall
jns
push
mov
add
dec
xchg
mov
or
mov
mov
sahf
imul
lcall
mov
shl
rorb
sbb
pusha
imul
scas
add
movsl
lcall
dec
sbbl
dec
scas
pop
imul
mov
and
pop
shlb
push
xchg
mov
lahf
push
adc
nop
mov
inc
int3
in
std
adc
jl
push
and
adc
add
lock
xor
lret
sub
cld
bnd
aam
mov
stc
movsl
popa
aaa
mov
andl
sub
pop
or
ljmp
xor
out
pushf
pushf
leave
dec
pop
inc
mov
dec
and
movsl
mov
adc
xchg
mov
cwtl
sub
loop
icebp
or
pop
cmp
popf
adc
mov
and
lret
adc
dec
cltd
mov
fcom
jae
data16
scas
dec
xchg
cmp
loopne
test
repz
in
lahf
loope
pop
xor
push
mov
jno
jle
push
flds
inc
xlat
jo,pt
dec
mov
rcrl
outsb
push
test
mov
push
mov
sub
and
cwtl
in
movsl
out
cmpsl
jg
xchg
cmp
add
je
mov
fwait
xchg
shr
lods
cmp
push
dec
mov
fdivs
xor
mov
pusha
or
lret
ficoml
mov
loopne
movsb
orb
fadds
xlat
rol
xlat
adc
iret
sahf
pop
outsl
or
pop
out
sti
sbb
imul
push
xchg
arpl
orl
jp
adc
mov
xor
dec
and
push
clc
pop
dec
cmp
or
lret
adc
adc
push
sub
add
mov
arpl
jbe
inc
jno
cmp
aam
pop
fisubrl
xchg
xor
or
and
mov
jmp
cmp
inc
enter
add
in
mov
xor
loope
ret
stos
sub
sub
jp
pop
fbld
loope
mov
std
cli
aas
sub
mov
movsl
fwait
jge
pop
cmpsb
arpl
lret
fistps
sti
xor
enter
sbbb
jmp
hlt
loop
into
xlat
jb
xor
arpl
or
inc
dec
push
mov
pop
out
pop
cmp
insb
pushf
jo
inc
add
sbb
jecxz
push
mov
nop
pushf
fwait
sub
dec
cld
inc
inc
sub
cmpb
xchg
adc
lock
popf
xchg
popf
sbb
lret
xor
add
sub
or
leave
jp
push
add
clc
adc
mov
scas
adc
mov
negl
ret
in
push
or
out
insl
ljmp
mov
and
sub
inc
cwtl
repz
fistpll
aam
mov
push
pop
aam
inc
sub
add
popa
ror
lea
xchg
outsb
lahf
fadd
andl
std
xchg
loopne
mov
lahf
in
insl
incl
lods
push
mov
mov
xor
cmp
and
sbb
pop
not
jmp
sbb
int3
cli
pop
jo
cltd
divl
pop
mov
xchg
and
movsl
icebp
mov
mov
push
push
fiadds
dec
mov
inc
add
pop
test
lds
and
xchg
loopne
jg
adc
mov
addr16
mov
cmp
fcoml
dec
mov
add
cmp
call
andl
jecxz
xchg
into
lcall
pop
movsl
xchg
mov
lods
out
or
jns
pop
pop
push
imul
dec
pop
rcr
nop
iret
sarl
insl
es
and
jp
cmpsb
jo
jbe
cld
rorl
ja
movsl
rol
mov
mov
adc
or
pop
insl
pop
xlat
ss
int
sbb
jl
pop
and
sbb
aad
in
sbb
sub
fcomps
sbb
enter
jbe
xor
jmp
mov
les
or
mov
out
fcoms
sub
add
cmp
sub
cmp
in
es
push
fisubs
dec
outsb
push
pop
lret
lret
xchg
or
ds
in
mov
into
xor
dec
mov
cmp
sub
int3
xchg
leave
pushf
leave
cmpsl
shrb
or
sub
test
or
or
iret
les
es
hlt
xor
pop
push
repnz
add
js
mov
into
orb
xchg
inc
pop
enter
dec
imul
adc
mov
sbb
mov
push
mov
add
cltd
xchg
inc
sbb
sub
sbb
jns
push
leave
and
lret
fwait
mov
mov
xchg
in
sub
xchg
push
lea
popa
scas
and
sub
ret
out
xor
mulb
add
das
push
mov
jp
inc
fidivl
mov
cmpsl
out
dec
push
dec
sub
cs
insb
mov
adc
mov
mov
push
ds
xchg
ret
push
dec
and
repnz
cmp
loop
cld
pop
xlat
lds
shlb
dec
add
movsb
mov
pop
aad
es
inc
xchg
inc
xchg
bound
movsl
cmc
mov
adc
lock
jecxz
xor
inc
sub
inc
xor
insl
lods
dec
jbe
fucom
fsubs
xchg
dec
ja
jle
cmpsl
and
mov
insl
mov
sbb
dec
je
cmp
push
push
mov
shlb
cmp
fs
xor
fadds
cmp
pop
cmpsl
fimuls
xchg
xor
or
ss
sbb
jg
fs
pop
shll
incl
adc
inc
rorl
mov
int3
jmp
das
or
stos
pop
cmpsb
jo
std
test
push
jp
es
add
inc
xchg
pop
cmc
mov
fdivs
insb
push
pop
repz
out
adc
fwait
jmp
and
jns
movsl
mov
mov
xchg
push
cmpsb
push
and
or
add
xchg
insb
fidivrl
sbb
sbbl
mov
ficoml
mov
mov
das
dec
xchg
loopne
mov
and
push
and
sub
mov
cmp
dec
rcl
mov
jmp
insl
rcr
subl
fildll
mov
jb
scas
push
lock
pop
inc
push
imul
cmp
jecxz
adc
inc
lahf
push
jns
mov
add
inc
lahf
xchg
stos
aas
lods
negb
pusha
adcl
sub
jmp
test
pop
and
jp
lock
lds
repnz
cs
arpl
jne
adc
adc
xlat
popf
mov
mov
lods
stos
scas
stc
fwait
sub
xchg
test
cmc
mov
jle
jnp
mov
mov
or
inc
sbb
cmpl
out
pusha
popf
fstps
xchg
jno
test
push
mov
in
cld
fisubrl
xchg
clc
aad
in
inc
je
push
dec
cmp
mov
mov
xchg
push
or
sbb
in
inc
ret
push
push
ror
fistl
jecxz
fisttpll
test
nop
sub
push
push
jnp
and
jb
pop
adc
push
jno
jns
push
dec
push
ja
pop
mov
sub
push
cwtl
jbe
mov
shll
mov
ret
push
movb
xchg
shll
cmc
movb
test
mov
adc
xchg
ret
push
ret
je
sbb
cli
pop
fnsave
push
cmp
or
xor
mov
pop
bound
flds
addr16
mov
sub
std
dec
in
repz
inc
cli
cmp
xchg
dec
movsb
aam
clc
es
mov
setbe
cs
push
iret
pop
lea
sarb
inc
or
bound
pushf
mov
cmp
addl
lds
pushf
repz
lahf
dec
mov
sub
adc
inc
clc
sub
nop
test
ds
ljmp
push
je
push
sti
leave
mov
jge
inc
icebp
leave
cmp
jp
fstl
push
test
and
push
fdivrl
outsb
mov
outsb
and
clc
aam
mov
mov
pop
add
push
or
js
or
mov
pop
mov
cs
mov
xchg
stos
das
xlat
push
jae
and
loopne
ret
jns
xor
mov
inc
scas
push
cltd
out
pop
cs
js
mov
jbe
out
sbb
xchg
push
xchg
sbb
push
inc
aam
scas
mov
jl
cmpsb
scas
mov
lock
ljmp
insb
mov
imulb
stc
negb
jecxz
sbb
dec
das
xchg
cltd
test
int3
mov
xor
sub
lret
insb
shlb
mov
js
andl
push
mov
ljmp
popa
push
mov
nop
repnz
and
psubusw
ret
mov
jle
jge,pt
xor
fstpt
pop
in
cmp
jae
push
mov
xor
mov
mov
scas
push
in
fstpt
inc
xchg
vpunpckhwd
fsubrl
inc
and
xor
sub
push
sub
lock
inc
scas
adc
cs
mov
inc
mulb
gs
outsb
mov
into
pop
mov
inc
das
mov
xchg
ljmp
add
loopne
popa
jg
push
xlat
addr16
cmp
add
ljmp
mov
adc
sahf
mov
cmp
ret
jmp
sub
and
pushf
clc
mov
mov
call
mov
out
lods
pop
or
dec
movsl
lods
mov
cmp
icebp
push
stos
arpl
loope
mov
mov
test
dec
inc
fs
jp
pop
shll
sub
xor
mov
adc
mov
pop
push
sub
sub
clc
es
fistpl
cmp
aaa
testb
xor
add
sbb
in
xor
sub
mov
pop
ret
and
jl
jecxz
xor
je
stc
shl
inc
sbb
ret
sub
dec
mov
inc
pop
popf
movsb
adc
cli
push
xchg
in
push
jbe
push
cmp
pop
xchg
repnz
xchg
push
cltd
mov
aas
in
add
sti
and
test
scas
das
cmovno
sar
xor
adc
jnp
fildll
inc
mov
les
in
ds
adc
jo
or
rcr
xor
in
pop
inc
in
addr16
cltd
sbb
mov
popa
xlat
repnz
mov
jno
mov
and
jecxz
inc
xchg
scas
mov
sbb
sarl
xchg
aad
cmpsb
cmpsb
dec
jle
pusha
inc
inc
or
gs
mov
push
jns
pop
sub
xor
shrb
lahf
push
jmp
jmp
sbb
xchg
sbbl
fcompl
mov
jo
out
aad
ja
cmp
sub
cwtl
and
or
call
movl
filds
cltd
mov
dec
das
push
mov
test
and
es
mov
dec
mov
pusha
js
jo
push
cld
lods
push
ja
sbb
mov
cld
adc
xor
test
lret
repz
pop
or
mov
mov
lods
nopl
or
inc
mov
mov
pop
pop
pop
mov
xchg
notb
aad
adc
sub
inc
and
pop
pushf
int3
mov
cld
pop
mov
sub
jae
fdivp
add
push
push
in
mov
mov
loope
pop
fsubl
sbb
push
loope
xchg
xlat
sub
movsl
rcll
add
or
out
cmp
pop
shrb
jmp
adc
mov
mov
dec
sbb
inc
cmp
call
xor
xchg
push
add
dec
push
scas
push
lods
ja
fstps
push
js
lock
sub
add
fs
scas
fdiv
push
mov
jmp
push
ja
clc
outsb
mov
push
aam
imul
seto
call
lret
call
push
adc
lods
aaa
mov
dec
popa
das
add
test
dec
cmp
shl
xchg
jle
push
or
xchg
mov
jecxz
add
sbb
arpl
mov
jae
push
dec
pop
cs
ret
pushf
stos
out
jle
in
iret
js
lcall
lods
imul
xchg
mov
mov
arpl
pop
mov
popf
outsl
and
es
add
xchg
data16
lods
or
pop
or
fcmovb
and
orb
outsb
sbb
iret
jmp
pop
jg
push
push
mov
or
xchg
mov
outsl
pop
hlt
mov
or
mov
pop
lcall
dec
push
cltd
xorl
sbbb
adc
cmc
mov
scas
push
adc
lahf
aam
movl
adc
adc
add
push
cmp
in
testl
arpl
gs
xchg
jl
mov
xor
in
pop
xchg
cmp
inc
inc
push
dec
stos
cmp
sbb
sub
xor
shl
mov
push
jmp
imul
jbe
getsec
in
shlb
sub
jae
mov
pushf
xchg
shr
shlb
or
daa
rorb
lock
or
mov
fdivrl
pop
cld
pop
xchg
push
test
mov
stos
das
or
push
push
xchg
xchg
mov
jmp
and
int3
insl
loopne
xchg
ds
fldenv
rcr
mov
inc
fsubrs
in
or
sar
nop
jge
call
sub
add
mov
dec
sbbw
inc
sbb
xchg
sub
cmp
mov
mov
jnp
arpl
sahf
cmp
imul
adc
mov
rcrb
mov
push
ss
das
lock
mov
dec
dec
mov
or
or
fistl
mov
lahf
mov
rcr
gs
push
xchg
mov
inc
in
or
test
add
push
mov
push
insl
xor
adc
in
mov
adc
jbe
loopne,pn
add
add
test
sub
jle
insb
lods
mov
lret
adc
push
mov
xchg
loope
jno
fdivl
add
out
pushf
xor
out
xchg
fs
inc
jno
sbb
arpl
das
push
inc
repz
ds
jle
jmp
adc
and
and
push
sbb
cld
fs
insl
sub
pop
out
xchg
add
mov
xchg
add
add
mov
push
push
sub
jb
shrl
hlt
cwtl
stos
popf
sbb
adc
je
dec
stos
dec
sbbl
data16
insl
clc
lahf
sbb
inc
cli
in
hlt
fnstsw
jmp
test
lods
jne
xor
in
scas
xor
jl
mov
dec
pop
xor
pop
push
mov
aam
std
jp
jo
xor
mov
js
out
and
or
cmp
push
insb
jmp
arpl
dec
test
dec
pop
int3
mov
xchg
mov
push
cs
stos
lods
hlt
mov
jbe
pusha
mov
pushl
and
into
pop
cmp
mov
pop
xchg
pop
dec
sub
shlb
xchg
push
dec
jo
mov
dec
inc
pop
mov
packssdw
loope
fsts
leavew
xlat
xchg
sub
jo
cmp
add
mov
dec
dec
into
mov
mov
std
push
pand
pop
aaa
and
and
inc
push
push
push
std
push
inc
push
jb
insl
xor
lret
jbe
in
pop
xor
aaa
mov
adc
mov
adc
xchg
dec
shrl
adc
int3
and
and
mov
push
xchg
arpl
xchg
in
or
mov
sub
in
pop
enter
rorl
cmc
movsl
mov
dec
insb
scas
xchg
cmpsl
cmp
push
xchg
loop
cmp
in
mov
out
outsb
pop
push
mov
sub
outsb
into
pushf
sbb
in
rolb
jge
mov
dec
mov
mov
cmpsb
cmp
out
jae
dec
sub
add
sub
jmp
insl
jp
jg
mov
inc
jno
inc
or
pop
push
lret
xlat
test
sti
nopl
repnz
xlat
data16
xchg
outsb
jmp
add
test
cmpsb
jns
loopne
or
iret
push
and
rcll
cli
hlt
out
rcrl
and
inc
loope
adc
pushf
lock
rorl
fnstsw
nop
inc
inc
jae
jnp
fstps
call
in
push
les
and
scas
scas
cmp
scas
and
ja
gs
dec
dec
lock
add
push
mov
mov
movntq
out
pusha
sarl
call
sbb
inc
jns
popf
cmp
mov
and
pop
loop
push
js
and
and
push
pop
ret
lret
repz
and
stc
je
adc
mov
jb
cmp
lods
push
repnz
jne
pop
ret
jle
push
lahf
lahf
dec
jge
orl
xor
and
mov
xchg
ret
sahf
into
push
out
inc
mov
or
arpl
repz
or
inc
js
popf
mov
scas
sbb
jge
repnz
aaa
in
xchg
loopne
aad
sbb
jle
inc
push
mov
cmp
negl
adc
lods
addr16
sub
pop
lea
daa
xlat
push
mov
rcrl
cwtl
adc
js
faddl
jg
push
enter
adc
and
push
jo
and
push
pop
and
ss
pop
and
aas
incb
cmp
aam
pop
imul
cld
shll
sub
test
mov
push
fisttps
roll
jmp
test
les
adc
jp
add
out
ret
imulb
jo
lods
rep
or
out
into
js
mov
roll
push
jnp
inc
xor
hlt
pusha
popa
test
je
inc
data16
sub
js
sbb
aad
mull
sub
int3
fistps
ljmp
scas
mov
daa
jbe
sbb
mov
sti
sbb
jbe
lea
cwtl
push
push
dec
repz
daa
fistpll
loopne
cmpsl
inc
push
add
jo
cwtl
bound
mov
sbb
inc
sub
fisubrl
or
fwait
loopne
jns
sub
dec
ss
js
pop
pop
stc
fistl
xchg
cs
iret
cltd
aas
negl
cmc
icebp
and
in
iret
rol
imul
push
out
mov
xchg
nop
mov
mov
jbe
std
jns
sub
in
mov
pop
jno
into
jl
loopne
popf
out
orb
dec
mov
call
xor
pushf
stc
xchg
in
cmpsl
xor
ret
insb
jns
aaa
jnp
cmp
rcr
push
movsl
push
cs
ds
shlb
push
sbbl
pusha
sarb
dec
int
dec
sbb
sbb
cmp
sbbl
addr16
lcall
mov
cvtpi2ps
lahf
push
out
push
rolb
xchg
das
cwtl
dec
pop
xchg
cmp
and
cs
adc
cmp
lds
shrb
clc
jmp
std
out
arpl
lods
sub
int3
loop
pop
rcl
outsl
cs
pop
xchg
inc
mov
out
ret
push
pop
cmpsl
cmp
leave
mov
divb
test
lret
stos
jge
sahf
inc
sbb
cmpsl
loopne
jno
fldt
pop
jl
fs
pop
jne
inc
rcr
mov
and
dec
push
fisubrs
pop
fsubp
out
add
mov
mov
inc
imulb
inc
push
inc
roll
jmp
cli
jne
ds
jno
out
movsb
mov
loope
adc
adc
mov
iret
arpl
popf
push
sahf
dec
in
adc
sub
mov
shll
add
mov
stos
mov
shll
and
xor
push
cmpb
ret
movsl
inc
pop
imul
in
testb
pop
mov
pop
sbb
movsb
cltd
fstp
nop
lcall
addr16
cmp
icebp
xor
nop
out
push
xchg
testl
pusha
inc
cwtl
lahf
es
pop
fs
mov
or
les
add
push
sub
cmpsb
subl
and
pop
sbb
push
iret
je
lds
push
pop
mov
lds
xchg
in
mov
add
jns
jmp
idivb
repz
cmp
inc
and
outsl
in
test
pop
ss
dec
lods
jecxz
xchg
push
or
cmp
std
add
int
movsb
push
cmp
into
mov
ficomps
into
push
mov
fmull
jmp
jmp
inc
sbb
xor
jae
iret
sbb
mov
pop
mov
sub
sbb
xor
pop
cmp
cmp
das
ret
add
int3
adc
cmpsl
xchg
pop
cmpsb
cmp
scas
std
sbbb
shlb
std
add
cmp
push
es
leave
xchg
ss
mov
movsb
adc
inc
imul
pop
repz
lcall
mov
or
jmp
xchg
pop
xor
outsl
jp
and
pop
sub
rcll
jecxz
in
xor
int3
outsl
dec
pop
jmp
inc
fdiv
xchg
in
mov
lcall
es
or
push
jle
negl
jle
dec
call
push
fiaddl
adc
dec
jg
or
das
int3
cltd
xchg
sbb
add
inc
nop
lcall
insl
xchg
stos
jge
cmp
and
repnz
jnp
je
mov
fwait
xor
lret
pop
int3
push
icebp
push
cmp
and
xchg
dec
in
out
stos
test
push
mov
mov
pop
dec
mov
dec
and
pop
fwait
scas
jbe
sub
jne
icebp
test
push
pop
test
inc
jb
aam
cltd
and
out
push
mov
xor
mov
test
or
lea
inc
adc
sbb
sub
fnstsw
push
sub
xor
clc
xchg
jge
jp
jmp
fwait
cmpl
test
pop
push
xor
xor
mov
fadd
jnp
xchg
ds
sar
adc
xor
xor
dec
or
sahf
daa
xor
loope
int
cmpsl
sahf
ja
aad
cmp
and
mov
ret
mov
pop
jp
data16
loopne
ljmp
js
fldt
mov
int
sbb
mov
rcl
xchg
hlt
mov
adc
or
daa
add
movsb
clc
push
jp
push
pop
inc
sub
addr16
out
inc
xchg
sarb
add
or
cmp
into
xchg
inc
push
fildll
xchg
jo
xchg
and
lahf
push
adc
or
rolb
int
lods
mov
xchg
je
ja
xchg
sbb
fcompl
into
sbb
out
in
pop
mov
bound
pop
scas
fcmovbe
sub
dec
jmp
data16
mov
fdivp
xchg
mov
inc
and
mov
icebp
jno
pop
fwait
mov
mov
and
outsl
jp
or
xchg
adc
sahf
push
xchg
xchg
mov
repz
in
and
imul
xchg
clc
xor
stos
les
cltd
or
pop
push
leave
ds
in
or
jmp
jo
test
sar
jbe
xchg
cs
andb
insl
rcrl
in
mov
pop
out
and
loop
movsb
jle
nop
fcomi
mov
mov
lea
cmp
xor
repz
jb
mov
shlb
or
or
pop
mov
insb
sub
leave
sbb
jmp
mov
orl
adc
cmpsl
jg
mov
push
and
pushf
sbb
xchg
xchg
adc
in
sarb
imul
rcll
mov
and
cmpsl
shll
loop
pop
sub
pusha
pop
sahf
sub
or
popa
popf
in
add
xor
idivl
and
je
pop
cld
ljmp
fstpt
repnz
add
xchg
loopne
inc
xor
dec
inc
mov
sbb
add
xor
scas
imul
xchg
enter
mov
pushf
fs
int3
pusha
movsb
sbb
in
mov
inc
mov
dec
in
inc
xor
add
jg
addr16
out
sub
hlt
das
pop
cwtl
adc
mov
scas
roll
jne
jae
add
cwtl
push
mov
scas
mov
pop
or
cmp
jne
xchg
scas
das
in
sub
jae
in
shrb
mov
lock
decb
nop
jbe
pushf
jne
dec
fcoms
mov
jge
lahf
add
mov
jge
fldcw
insl
mov
jno
sbb
loopne
fdivr
in
sub
push
cld
sub
add
out
jno
pop
mov
into
push
scas
iret
inc
pop
shll
inc
std
je
cmp
push
test
push
lret
lds
ret
inc
dec
jnp
pop
sbb
test
jmp
idiv
mov
into
fstps
pop
and
dec
sbb
or
dec
lahf
add
aad
out
mov
in
enter
dec
xor
jmp
aad
cmp
dec
cli
add
push
xlat
ror
shlb
push
subl
pop
add
nop
rolb
cmc
sti
int3
lods
out
fidivrl
cwtl
lret
xor
lods
push
insb
mov
sarl
jne
repz
xchg
int
insl
jecxz
xchg
dec
cmp
or
jns
mov
or
pop
mov
pop
inc
mov
sti
push
mov
scas
dec
dec
lods
das
cli
xchg
push
rcll
shlb
push
push
mov
mov
test
enter
cmp
std
popa
xorl
jne
inc
les
mov
xorb
lret
dec
mov
and
mov
inc
sahf
stos
push
inc
aam
push
out
dec
out
mov
and
jnp
and
sbb
inc
mov
sbbl
int
add
rorb
and
ljmp
add
mov
stos
faddl
gs
cltd
jns
xor
inc
lea
aad
movsl
pop
or
jp
jecxz
cli
pop
int
pop
lods
dec
int3
daa
jne
xchg
adc
jnp
movsl
je
add
insb
out
aas
jne
and
cmpsl
icebp
xchg
fdivrl
mov
shrl
add
mov
call
xor
lret
push
cmpsl
out
cmp
ss
sub
sub
rcr
and
dec
inc
inc
mov
cli
mov
jmp
xchg
cmp
push
fwait
arpl
testl
mov
sbb
jno
fiadds
out
orl
push
add
cli
or
shlb
shrl
push
lret
ds
fbstp
push
cmp
in
and
and
cmc
ljmp
jge
ljmp
jb
jecxz
in
popf
lret
xchg
jecxz
in
jmp
and
movsb
movsb
jbe
aad
fldenv
lcall
mov
dec
movsb
lods
pop
shrb
xchg
inc
loopne
sahf
xchg
inc
call
sar
stos
add
xchg
into
add
loop
push
push
rcll
arpl
mov
inc
leave
push
cmpsl
movsb
cmp
add
out
in
sbbl
nop
testb
insl
sbb
xchg
imul
add
mov
push
sbbb
sarl
inc
ds
jnp
fdivs
out
les
jge
jns
jg
jne
popf
scas
out
es
jbe
lea
sub
jnp
mov
sub
and
fiadds
add
punpckhwd
xchg
inc
sub
lock
fsub
icebp
add
or
xlat
xor
enter
xor
mov
lret
and
je
test
ljmp
adc
ja
bound
mov
adc
test
js
xchg
sub
mov
jmp
or
shrb
in
sub
stos
out
jae
mov
daa
loope
push
mov
bound
inc
out
xchg
ficomps
dec
clc
push
enter
jno
mov
and
jae
dec
push
sbb
push
int
xchg
xchg
sbb
push
arpl
in
fisubl
fadd
push
sbb
jg
ss
das
pop
inc
push
mov
inc
pusha
repz
lret
or
aad
dec
pop
int3
psadbw
scas
pop
out
cld
flds
xor
aaa
pop
and
add
sbb
lock
movsl
imul
jno
pop
mov
mov
loop
or
pop
sub
andb
jmp
test
movsb
inc
mov
adc
add
xchg
mov
notl
lret
mov
mov
add
xor
pop
lods
pop
in
jle
pop
gs
mov
rcl
inc
hlt
loop
repz
dec
movsb
repz
adc
int
xor
lods
ss
mov
and
cs
pop
jae
hlt
mov
test
jbe
movsb
push
cmp
lods
sub
mov
dec
or
pushl
std
xchg
jle
xchg
pushf
incb
bound
loopne
clc
out
sub
adc
push
rclb
and
jne
xor
scas
cmc
es
clc
mov
xor
sbb
aas
mov
jmp
pop
pop
and
mov
sub
sbbb
mov
cwtl
aam
cmp
jp
or
mov
into
dec
shrl
jae
rolb
and
insl
daa
mov
idivl
roll
dec
xchg
xchg
cwtl
pushl
mov
push
inc
data16
or
sbb
push
inc
in
and
cwtl
jmp
iret
push
xchg
push
mov
leave
dec
outsl
pop
add
pop
out
jae
xor
call
aaa
aaa
add
sbb
out
xchg
jne
aaa
movsb
stos
sbb
enter
dec
insb
fadds
ljmp
hlt
and
cmp
xor
cmp
loopne
scas
jle
pop
insl
mov
les
sahf
and
decb
dec
das
adc
pop
mov
lds
sub
pop
and
stc
xchg
sbb
sub
push
out
mov
cmpsl
icebp
mov
add
call
add
jb
pop
cmp
dec
mov
mov
xor
xrstors
sub
testb
mov
popa
leave
loopne
lret
fldl
jnp
imulb
fildl
out
and
test
hlt
mov
lds
js
and
cmp
or
jnp
es
adc
sarb
roll
xchg
pop
in
or
imulb
sub
dec
mov
jecxz
dec
insl
xor
push
jp
scas
pop
pop
sti
jne
lahf
fs
cmc
mov
jae
sbb
inc
insl
aam
dec
es
repnz
stos
outsl
fcom
inc
pop
push
fldenv
push
pop
xor
call
test
inc
insl
subl
lret
push
adc
lea
div
es
test
sti
jae
subb
leave
inc
lahf
sbb
cmp
pop
or
pop
cmpsl
lahf
pop
cmc
loope
aas
mov
xor
jmp
and
or
xor
xchg
xchg
or
sarb
jle
data16
xchg
xchg
mov
dec
ffreep
pop
adc
mov
jno
xor
push
es
adc
hlt
inc
add
mov
cwtl
unpckhps
lods
and
js
dec
xor
test
sahf
jbe
lea
push
aad
mov
cmp
cmp
in
sub
sub
mov
xor
push
mov
mov
adc
nop
pop
mov
in
rol
out
push
nop
test
adc
aas
dec
add
fwait
or
mov
mov
push
insb
enter
js
xorl
inc
or
cld
xor
cmp
dec
add
xchg
ret
fcompp
adc
adc
or
rorb
cltd
ret
sti
sbb
inc
push
add
jmp
push
js
sbb
outsb
scas
cmp
aas
aam
rcll
call
scas
hlt
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
clc
add
add
add
or
add
or
add
and
add
data16
add
push
stc
add
rorb
pop
dec
add
inc
push
add
hlt
inc
add
clc
inc
add
in
add
adc
add
rorb
xchg
inc
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
stc
add
stos
stc
add
mov
add
ret
stc
add
aam
add
add
jmp
add
idiv
add
add
add
or
add
inc
imul
imul
popa
bound
push
popa
jbe
add
pop
inc
jb
push
inc
gs
popa
push
insl
jo
inc
gs
popa
push
imul
jae
dec
popa
imul
push
addr16
imul
outsb
add
imul
add
outsl
addr16
pop
push
outsb
fs
dec
