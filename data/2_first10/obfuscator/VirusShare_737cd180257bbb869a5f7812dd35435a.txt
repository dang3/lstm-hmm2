repz
cmp
pop
es
ret
pop
loopne
scas
mov
jmp
fcoms
lea
mov
jg
movsb
xchg
dec
pop
ret
xchg
xchg
jmp
stc
test
popf
bound
aaa
dec
fidivl
insl
out
jmp
cmpb
ror
test
and
inc
lods
cmp
outsl
push
in
and
push
inc
mov
inc
insb
adc
jns
ds
call
push
mov
pop
iret
js
jb
pop
xchg
inc
cmpsl
sub
cwtl
or
lock
push
imul
sub
and
shlb
clc
mov
scas
sahf
gs
push
popl
adcb
shl
sarl
jmp
jmp
push
xchg
lret
int3
shlb
inc
in
shll
add
aaa
mov
fdivs
push
push
aaa
and
add
pop
push
dec
insl
pop
loopne
popa
jae
stos
push
cld
mov
pop
es
push
orb
rcll
fnstsw
in
mov
jl
add
addr16
push
sub
clc
pushf
repz
or
fstpl
ja
jnp
xchg
ja
sbb
ret
imul
leave
lahf
pop
cmp
cmp
movsbl
cwtl
jmp
mov
call
push
jecxz
cmp
and
adc
and
fwait
and
push
cmp
es
fwait
sti
clc
pushf
in
push
stos
jo
fs
nop
cmp
push
mov
sub
and
int3
or
std
or
ss
sahf
scas
adc
das
push
cmp
push
mov
xchg
sub
leave
lahf
dec
pop
sti
xor
mov
cmp
jmp
pushf
pushf
lea
jne
bt
xor
movsbw
or
shl
mov
xor
rol
jmp
mov
push
mov
jmp
pushf
lea
jne
bsr
neg
mov
cmp
jmp
pushf
pusha
movl
pusha
call
lea
ja
rcr
sub
lea
lea
add
xor
sbb
sar
mov
push
setge
inc
cmc
mov
clc
bt
pushf
repnz
jmp
jmp
lea
jae
pushf
lea
ja
movzbw
call
pusha
lea
je
rcl
sbb
xchg
adc
mov
jmp
push
pusha
seta
lea
call
movzbw
mov
setge
mov
pusha
mov
pusha
mov
pushl
jmp
clc
ror
mov
jmp
lea
jae
pusha
stc
jmp
lea
pushf
lea
lea
pusha
lea
movzwl
movzbw
not
jmp
bt
call
pushl
movl
movw
movl
pushf
lea
jmp
push
pushl
movb
jmp
jb
jg
push
cmpb
pushf
push
jmp
pushl
jmp
lea
jne
cmc
mov
cmc
call
test
pusha
bsf
mov
shld
not
pop
xadd
lea
daa
pusha
cmp
sub
neg
aam
sbb
lea
push
mov
test
push
cmc
push
aad
push
cmp
mov
stc
cmc
cmp
cmp
test
pushf
call
lea
je
movsbw
pusha
mov
jmp
lahf
pusha
mov
pusha
movb
lea
jmp
pushf
movl
push
movl
mov
mov
pushf
movb
lea
jmp
inc
jmp
pop
cs
cmp
repz
sub
cmp
fisubrl
clc
xlat
test
adc
shrb
jns
or
cmovg
xor
rcl
sub
mov
sub
pusha
out
push
jne
inc
mov
or
mov
jl
sbb
not
cli
xor
mov
sub
ja
sbb
xlat
rolb
inc
pop
ss
test
cmp
add
out
je
lods
cld
inc
fprem
leave
lcall
mov
and
js
mov
mov
nop
mov
xor
mov
jge
jne,pn
loope
xorb
pop
jae
mov
testb
push
mov
pop
movsl
push
ret
and
in
adc
xchg
xorb
xor
mov
lods
stc
sub
call
aaa
adc
mov
rolb
pusha
or
mov
mov
push
dec
adc
mov
add
arpl
sbb
mov
mov
sarb
mov
xorb
sbb
mov
sti
dec
or
sbb
or
cmpl
loop
mov
push
call
mov
xorb
jne
test
xorb
adc
mov
addb
call
loop
mov
lods
stc
sub
jo
mov
and
inc
lock
xorb
repz
movsl
into
inc
sbb
jne
nop
xor
cli
call
bound
mov
sbb
inc
or
mov
push
xorb
cmp
mov
mov
mov
vmwrite
mov
lods
stc
cs
int3
jne
mov
jge
inc
mov
jb
mov
and
jo
jmp
mov
mov
xchg
mov
and
jb
mov
repnz
ret
test
jae
adc
dec
mov
mov
lods
push
jnp
xor
mov
xorb
repz
orb
cmp
xchg
bound
ficomps
repz
xchg
add
mov
inc
jae
lea
ja
movsbw
bswap
not
pop
bswap
not
pop
not
call
add
add
clc
shl
pusha
shr
xchg
stc
das
add
lea
daa
bts
neg
sub
bsr
call
ss
mov
shll
add
jae
dec
xor
mov
sub
cld
adc
mov
fbld
mov
mov
in
leave
pop
cmpsl
pusha
jp
xchg
xchg
imul
cld
inc
nop
jmp
pusha
sub
popa
icebp
xchg
xchg
xlat
xchg
pop
cltd
outsl
ret
mov
push
inc
scas
mov
jns
jns
or
add
pusha
loop
jnp
push
hlt
add
clc
leave
cltd
cltd
mov
call
jmp
inc
jmp
add
inc
gs
outsl
fs
gs
imul
add
sub
call
jecxz
jl
sub
cmp
loope
cmp
mov
gs
pop
inc
aaa
loope
cmp
rcr
pushf
enter
sbb
dec
xor
and
inc
pop
mov
loope
cmpsl
bound
jge
daa
test
js
or
addr16
loope
jg
add
pop
mov
mov
mov
add
fldt
in
adc
xchg
mov
imul
sbb
mov
icebp
fdivrl
repz
movsbl
mov
movsbw
mov
movsbw
lea
mov
pushf
call
adc
mov
bt
jl
and
js
test
pusha
add
sub
jae
stc
push
cmc
add
pusha
pusha
pushf
pushl
dec
movb
call
or
sbb
sbb
push
sahf
mov
sbb
or
adc
loopne
and
sbb
add
ss
imul
pop
loope
pop
fldt
inc
clc
xchg
cs
dec
out
cmpb
mov
dec
cmp
sub
icebp
cmp
leave
xchg
rcr
add
xchg
stc
push
jmp
add
dec
outsl
popa
fs
imul
add
adc
movl
call
xor
lea
pushf
mov
lea
mov
pop
movsbw
lea
jge
xchg
pop
jmp
inc
movl
adc
lea
pusha
pusha
pushl
ret
pushl
movl
pusha
mov
lea
jmp
mov
rcr
inc
cmp
mov
stc
repnz
jmp
movl
mov
push
pushf
lea
jmp
cmp
pushf
call
dec
and
xor
jo
lods
adc
repz
xchg
jge
out
sbb
cs
es
int3
jl
mov
mov
lock
ss
insb
dec
cmpl
adc
jns
clc
leave
xchg
sar
and
shl
add
pushl
ror
call
shld
mov
push
clc
bt
cmpb
pushl
call
call
lea
jne
movsbl
setae
seto
xor
lea
aam
mov
cmp
cmp
add
not
clc
mov
clc
bt
push
test
call
movl
jmp
stos
push
mov
lea
jmp
movb
cmp
pusha
pusha
lea
jae
rol
bswap
bts
mov
shr
mov
stc
shr
mov
clc
jno
sub
cmp
call
ror
jmp
mov
not
sub
movzbl
bswap
movsbw
lea
pusha
lea
jmp
push
pushf
movl
jmp
lea
ja
movsbw
pop
mov
pusha
bswap
jmp
lea
jae
bt
bts
test
xor
mov
bswap
sub
shrd
mov
test
mov
push
bt
clc
call
push
movb
mov
imul
mov
jmp
add
sahf
mov
push
add
sub
popf
imul
mov
aaa
stc
es
jle
mov
cld
push
dec
popa
ret
imul
sub
or
pop
sbbb
push
pop
or
rolb
fucomi
psrlq
stos
mulb
inc
inc
pop
ss
sbb
push
add
or
jmp
fwait
pop
cmpsb
aad
rcr
mov
shlb
leave
xchg
pop
push
mov
sar
enter
add
rolb
sbb
rcr
mov
push
bt
test
jmp
lea
jb
pushf
cmp
call
lea
jb
cmc
pushf
test
cmp
jmp
jmp
clc
stc
test
add
jmp
call
mov
lea
pop
pushf
pushl
ret
mov
mov
jmp
js
aam
inc
sbb
rclb
movsb
idivb
pop
mov
sub
xor
loop
pop
pop
out
cli
dec
rcr
pop
ret
sar
pop
sbb
mov
pop
imul
push
bound
enter
mov
loopne
lcall
or
inc
call
shld
and
sub
or
pusha
lea
stc
push
sub
cmc
pushf
push
mov
pushl
popl
clc
cmc
cmp
jmp
jmp
movl
call
lods
lock
ljmp
aaa
add
es
ret
shr
test
movsb
xchg
add
bswap
mov
xor
addr16
inc
fistps
xchg
sub
mov
xchg
add
stos
iret
xor
cli
fs
aad
in
jae
enter
pop
in
sub
xchg
fldt
add
pop
mov
adc
jo
inc
scas
nop
in
or
bound
pop
notb
ret
mov
and
sub
test
xor
fidivrs
lods
cmp
fcomip
out
imul
cmp
xchg
push
addb
mov
inc
jae
hlt
cwtl
scas
mov
nop
ja
mov
lahf
mov
xorl
les
and
push
int3
nop
adc
rol
stos
push
mov
lcall
dec
pop
xchg
daa
insl
xchg
jmp
ficoms
enter
and
mov
movsbw
movsbw
pop
push
pushl
ret
fsubp
xor
mov
adc
inc
cmpsl
pop
push
rorl
jp
addr16
adc
or
es
inc
icebp
jle
jp
push
cmp
cmp
mov
hlt
inc
out
fsubrl
pop
xlat
jb
sub
outsb
mov
jne
insb
sti
orl
sbb
xlat
ret
insb
sti
cmp
leave
xchg
pop
jno
lea
jb
pusha
test
call
call
mov
pusha
push
movb
lea
jmp
pushl
jmp
cmp
jmp
call
cmp
lods
adc
adc
subl
cs
test
imul
sub
pop
adc
or
or
inc
in
add
pop
test
mov
xchg
shl
lea
jne
sets
not
cwtl
movb
push
mov
bswap
lea
call
pusha
lea
jne
not
jmp
call
lea
je
test
sub
stc
push
cmp
cmp
pusha
lea
ja
push
pushf
mov
lea
jmp
not
push
mov
mov
lea
pusha
movl
jmp
pushf
lea
jb
push
cmp
cmc
call
lea
ja
pushf
movl
lea
jmp
lea
jne
pusha
bswap
shl
mov
cmp
or
jmp
jb
pushf
add
pusha
lea
jne
pusha
not
not
pushfw
popw
shl
adc
mov
cmp
bt
test
sub
clc
xor
cmc
pusha
pushf
push
ror
bt
add
movb
ror
pushl
call
inc
inc
inc
inc
sar
xchg
aam
mov
xor
sar
pusha
cmp
mov
add
call
jmp
jmp
cmp
stc
cmp
jmp
push
add
jge
sub
pusha
pusha
pushf
lea
call
push
jmp
xchg
jns
add
add
add
add
push
outsl
adc
add
call
sbb
jecxz
adc
adc
adc
add
add
inc
xchg
loopne
dec
inc
add
jnp
sbb
sub
in
xor
fprem
test
xor
movsl
or
pop
mov
rolb
pop
mov
pop
addb
add
cli
daa
or
mov
test
or
inc
cli
aad
movsb
gs
pop
jg
pop
sbb
adc
lret
jl
sub
inc
leave
adc
mov
or
adc
pop
cmpsb
pop
ss
cmp
lahf
push
push
cmp
pop
mov
cmpsl
xor
dec
incb
or
xor
mov
mov
pop
addr16
pop
addr16
and
sub
jae
int3
mov
add
jmp
fsub
xchg
xor
lods
push
inc
xchg
pop
pop
arpl
gs
in
mov
std
jmp
inc
testb
jae
mov
mov
mov
jno
sub
add
leave
mov
and
xor
or
pushl
ret
xchg
pusha
pushl
popl
movzbw
mov
jmp
pushf
movl
pushf
pushf
pusha
movb
lea
jmp
pusha
movw
lea
je
movzbl
mov
call
cld
mov
sub
inc
ljmp
lods
aaa
mov
cmpsb
ret
cltd
adc
sub
mov
mov
pop
addr16
mov
repz
in
mov
sub
cmp
loopne
add
rorb
xchg
fimull
in
mov
loope
fsubrp
pop
mov
push
pop
ljmp
shlb
in
pop
insb
sarl
rorl
xchg
ss
repz
push
in
sub
sbb
add
loopne
loop
fistps
mov
sub
out
mov
xor
addr16
push
jo
push
pop
data16
sti
call
mov
aaa
andl
das
mov
add
sbb
push
adc
in
jo
aas
inc
hlt
out
iret
inc
and
pop
fnstsw
inc
mov
aaa
lds
adc
xchg
jb
les
addb
roll
out
push
incl
data16
xorb
fldcw
aas
loop
push
sub
in
sbb
es
setl
mov
add
dec
scas
loop
or
cmp
insb
aad
mov
leave
mov
push
cmc
jmp
movw
mov
lea
pushf
push
push
push
mov
pushf
lods
pushl
bt
jmp
movl
push
pusha
push
mov
pushf
movl
pushl
pushl
ret
and
std
js
push
adc
cld
enter
das
cmp
push
fistpll
sbb
clc
leave
insl
jb
sub
jle
test
inc
xchg
jnp
lcall
scas
rolb
jp
and
jmp
adc
ss
insb
subl
xor
sub
jg
inc
test
outsl
sti
sti
sbb
mov
inc
cli
loopne
fwait
por
mov
fucomi
cmp
ss
xlat
fwait
leave
lods
lahf
adc
dec
lea
imul
push
push
clc
leave
mov
and
jae
pusha
pushf
call
pushl
jmp
pushf
jmp
pusha
pusha
lea
call
stc
add
clc
push
movzwl
bsr
pushl
add
mov
bt
stc
call
mov
push
push
lea
jne
push
pop
lea
lea
mov
pusha
pusha
mov
lea
jmp
dec
mov
fwait
data16
sub
xchg
fxch
inc
fiadds
xchg
add
xor
dec
push
les
ss
mov
cmp
out
mov
mov
mov
outsb
ds
daa
cmp
leave
mov
ret
mov
mov
mov
xor
call
xchg
or
inc
and
pop
cmp
push
cmp
xorl
adc
mov
mov
ret
mov
gs
mov
mov
std
fnstsw
xchg
aas
jno
hlt
push
rolb
dec
jg
cmp
sbb
clc
leave
mov
inc
lea
stc
cmp
bt
sub
stc
pushl
popl
jmp
mov
lea
jne
bswap
rol
sbb
mov
cmp
add
call
aas
lahf
bts
rol
mov
push
shl
pushf
call
lea
jne
and
inc
sub
add
mov
add
or
ror
sub
bts
shl
movzbl
shl
mov
bt
call
cmp
cmc
inc
sbbl
inc
lret
inc
dec
mov
xor
pusha
scas
std
aas
or
pop
aas
adc
mov
sarl
pop
iret
lahf
arpl
jb
ljmp
sahf
jp
cmpsb
lock
adc
push
clc
leave
mov
add
rol
movl
pushf
dec
stc
jmp
test
pushf
cmpb
movb
pushf
lea
jne
bsr
mov
stc
call
mov
push
movb
movb
pushl
ret
lea
sub
mov
cmp
btr
shld
bt
add
pushf
btr
xchg
mov
test
neg
shl
add
not
and
shl
movl
clc
mov
mov
clc
pushf
cmp
jmp
test
bt
xor
test
clc
bt
pushf
not
pushl
stc
sub
mov
clc
clc
clc
mov
mov
add
call
dec
pushf
cmp
shr
movl
mov
lea
je
push
call
or
imul
jae
in
outsl
pop
xor
jae
jnp
mov
lods
jae
rcrb
pusha
inc
out
xchg
jne
popf
sbb
mov
je
hlt
aaa
pop
insb
cmpsb
xor
push
arpl
ror
add
enter
jns
push
mov
addl
pop
or
xor
push
pushf
out
clc
leave
xchg
stc
std
repnz
pushf
lea
jne
setge
movb
push
movzbl
lea
mov
movsbw
jmp
jmp
and
jmp
stc
cmp
push
mov
mov
lea
je
jmp
inc
lea
jle
pusha
inc
pushf
push
push
lea
jmp
test
bt
pusha
cmp
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
dec
in
or
stc
pusha
cmp
pushf
lea
jae
pushf
pushf
call
movl
pusha
call
fxch
jb
push
cs
aas
jp
in
sbb
mov
data16
xor
push
pusha
inc
je
push
fs
mov
push
xchg
movsl
dec
or
lahf
mov
jns
xchg
jmp
and
dec
push
hlt
xor
out
loop
and
or
fcomp
fidivrs
sub
in
xor
testl
sub
bound
pop
imul
jl
clc
leave
xchg
and
xchg
movzbw
movl
movsbl
cwtl
sets
lea
push
call
cmp
pusha
jmp
push
lea
je
stc
sub
call
push
mov
mov
setno
inc
not
mov
lea
call
push
push
call
pushf
pusha
pushl
call
jmp
inc
int3
mov
xchg
push
mov
xor
lds
jmp
out
pop
push
lea
pop
mov
test
les
and
sbb
rcrb
and
lea
pop
cmp
jmp
mov
sbb
mov
lods
ja
or
sti
aas
iret
std
insb
sbb
xlat
dec
xchg
ss
sub
in
negb
pushf
scas
mov
pop
sub
pop
xchg
stc
in
lcall
fs
jb
push
pushl
ret
pushl
clc
add
pushl
pusha
pushf
lea
jmp
push
call
mov
movb
mov
jmp
mov
lea
ja
jmp
and
sbb
push
mov
andb
test
mov
es
mov
jmp
outsb
pop
dec
fwait
cmp
fstpl
adc
and
das
sbb
hlt
inc
or
jnp
das
sbb
cltd
pop
add
sub
scas
shll
adc
shll
sbb
arpl
jno
push
inc
mov
outsb
icebp
and
mov
aaa
inc
into
hlt
rcrb
jecxz
push
xor
adc
jne
loopne
popf
xchg
dec
sbb
pop
sbb
or
jae
shrb
and
mov
shll
mov
insb
sub
push
pop
adcl
push
repnz
arpl
loope
int
sbb
jle
dec
scas
and
mov
xor
hlt
push
cmp
fisubrl
sbb
mov
jbe
mov
es
xor
int3
jmp
rolb
adc
dec
rcrb
and
push
js
and
ds
add
sbb
subl
lcall
adc
es
fsubl
adc
dec
and
pop
iret
add
jae
sti
xor
jmp
jle
add
pop
xchg
pop
pop
adc
call
push
xor
add
sahf
popf
and
ds
pop
pop
movsb
push
mov
rcll
dec
add
pop
push
mov
or
cmp
js
shl
adc
mov
insl
out
jae
idivb
daa
pushf
mov
adc
repz
mulb
inc
idivl
cmp
aaa
jmp
mov
out
dec
adc
shlb
push
jns
xorb
outsb
adc
jl
mov
mov
scas
pop
add
cwtl
sahf
std
pop
dec
mov
push
sbb
repnz
rcrb
xchg
icebp
hlt
sbb
cmp
sbb
pop
jns
std
leave
mov
pop
iret
hlt
out
pop
cmp
mov
inc
fisubs
into
sahf
xlat
and
mov
hlt
cmp
jnp
xchg
pop
jo
test
xchg
clc
mov
jae
inc
shlb
int3
out
stos
test
repz
xor
jnp
mov
aad
test
cmc
icebp
rcr
and
fs
popf
push
adc
xor
loopne
adc
sbb
cmc
nop
push
push
dec
and
push
or
hlt
inc
ret
jae
adc
push
dec
iret
fisubl
and
push
ja
jle
leave
sbb
lret
adc
bswap
loopne,pn
pushf
jb
sahf
fistpll
repz
int3
cmp
mov
jge
clc
mov
stc
cmpsl
popf
sbb
mov
cwtl
mov
outsb
enter
jecxz
xlat
mov
push
popa
aas
dec
lcall
inc
jmp
pop
popa
sbb
xor
jmp
mov
in
shrl
iret
jl
push
push
add
sbb
add
data16
xchg
mov
int3
jle
rclb
addb
dec
cwtl
lods
sbb
pop
fs
cmc
cmpsl
push
pusha
mov
push
fisttpll
inc
and
xchg
mov
adc
xor
js
or
test
lods
mov
sbb
or
fisubl
rol
and
js
mov
add
imulb
and
adc
inc
inc
popf
sub
icebp
rcrb
or
insl
dec
mov
out
jmp
outsb
sbb
xorl
daa
jnp
add
scas
jmp
xchg
pusha
rcrb
adc
lock
xor
repz
adc
sbb
pop
cwtl
xchg
in
lret
js
or
push
xor
aaa
and
aam
sbb
mov
and
hlt
or
jge
inc
sbb
and
jnp
sbb
mov
sti
call
and
lds
dec
test
cmp
mov
jns
jae
aaa
mov
and
jne
xor
es
mov
adc
rorl
leave
icebp
sbb
jns
xchg
hlt
jecxz
or
dec
adc
mov
push
pop
or
adc
adc
push
and
popa
loop
rorl
adc
scas
cld
push
sbb
xchg
mov
push
mov
sbb
xchg
fdivl
dec
sbb
xchg
fucomi
outsb
and
inc
sub
mov
out
mov
std
nop
pop
cli
xchg
and
out
mov
xlat
rclb
es
adc
mov
mov
popf
stos
cli
in
cmp
pop
sbb
cmp
sub
call
lock
or
cld
stos
jle
das
pop
inc
call
mov
xor
push
subb
test
sarl
jp
pushf
ja
xchg
hlt
xor
fnsave
clc
cmp
sbb
lahf
push
xlat
or
adc
fsubs
or
cli
and
or
add
lcall
fwait
sbb
add
push
inc
ljmp
mov
into
sbb
xchg
add
jo
pop
repz
xchg
cld
aam
mov
bound
mov
std
aad
cwtl
xor
sbb
pop
mov
loop
iret
pop
push
sarb
mov
and
push
xchg
ret
fdivr
pop
sbb
movl
sbb
cltd
add
mov
or
dec
icebp
notl
lcall
fwait
inc
mov
icebp
push
push
test
mov
mov
dec
inc
pushf
sahf
pop
mov
adc
sahf
mov
jnp
scas
pusha
add
lods
stos
leave
jo
xchg
loopne
cld
leave
test
test
loope
push
shll
call
aas
scas
dec
jmp
xlat
or
clc
dec
cmp
mov
add
das
sbbb
scas
pop
test
push
daa
sbb
sub
sub
mov
shr
rolb
pop
xchg
or
xor
mov
jno
mov
push
cmpsb
and
mov
loopne
out
fadds
xor
or
aaa
scas
or
and
andb
pusha
dec
jmp
stc
push
repz
jp
jo
aad
adc
nop
sbb
mov
inc
push
shl
fdivp
xchg
out
repnz
out
xchg
loope
sahf
mov
and
adc
adc
xchg
mov
hlt
subb
fidivrs
adc
in
sahf
sbb
mov
test
adc
dec
insl
jge
fwait
leave
adc
enter
daa
mov
neg
sub
or
mov
mov
jle
sbb
sbb
pop
xor
inc
fcmovnu
adc
xor
clc
inc
or
jle
mov
push
ret
mov
ret
pop
rorb
fdivs
aas
sbb
jecxz
out
shlb
int
sub
or
ja
test
rclb
cwtl
mov
adc
hlt
leave
notl
xchg
add
mov
in
add
out
xor
fcompl
icebp
lock
stc
dec
jle,pn
icebp
mull
adc
rcl
iret
push
shl
sbb
adc
rorb
shlb
push
cmp
push
jae
sub
xchg
pushf
push
scas
or
push
je
adc
xor
roll
decb
sbb
add
push
cmp
out
scas
div
outsl
pop
adc
das
mov
inc
addr16
popf
jbe
sbb
and
mov
ds
sbb
rorb
push
push
cld
or
dec
nop
ret
mov
mov
xchg
and
push
jo
mov
hlt
test
les
pushf
and
dec
adc
adc
jmp
sbb
xchg
sbb
adc
cmp
lock
outsl
mov
inc
and
dec
out
in
cltd
mov
push
pop
aaa
mov
push
and
add
clc
fistps
cmp
adc
push
jno
sti
push
push
mov
and
jg
or
add
sahf
push
sub
jno
cld
jnp
movsb
iret
pop
loope
andl
jp
stos
std
sbb
cmc
mov
iret
xor
gs
repz
adc
dec
jno
rorl
inc
test
push
push
mov
addb
bound
call
aad
pop
push
push
adc
adc
in
jo
adc
cltd
pop
jp
dec
add
mov
mov
enter
dec
add
cmp
sahf
mov
mov
pop
xor
fbld
sahf
jge
shrl
add
dec
hlt
mov
jno
aas
mov
fnsave
ret
out
dec
mov
movsl
push
dec
icebp
and
outsb
mov
and
sahf
fldt
fsts
mov
jo
cmpsl
cwtl
stos
jp
mov
mov
dec
call
lods
lret
adc
dec
xor
and
pushf
in
or
adc
jle
insb
pop
hlt
int3
popf
jmp
pop
cmp
fld
inc
xchg
and
sbb
cmpsl
enter
inc
verw
add
ss
and
test
or
mov
repz
stos
adc
mov
sahf
gs
adc
lea
in
movsl
xchg
sahf
daa
lcall
cmp
lret
out
gs
mov
mov
add
sub
out
mov
add
adc
int3
je
outsl
jl
out
xor
mov
movl
dec
xchg
mov
fildll
lods
rcrl
outsl
mov
mov
je
cmp
sti
fldenv
aaa
add
inc
jge
ret
pushf
aaa
dec
test
xchg
jp
mov
rcrb
repz
and
ret
fdivs
incl
adc
gs
fucomi
pop
mov
add
sahf
hlt
sbb
jmp
std
pop
mov
lret
out
mov
sbb
mov
adc
push
jae
jno
dec
jne
dec
sub
filds
push
cmp
push
popa
adc
sbb
jnp
js
jnp
mov
repz
mov
scas
xor
pop
fstpt
mov
and
adc
fwait
hlt
mov
pop
xchg
xchg
push
cmpsb
imul
outsl
enter
cmpsb
pop
adc
dec
ss
leave
iret
sti
ffree
xchg
push
jb
sbb
sbb
icebp
adc
jecxz
xor
shlb
hlt
out
scas
scas
dec
push
leave
or
jno
and
rcll
addr16
sub
inc
and
pusha
push
dec
push
dec
cmp
mov
outsl
adc
cmpsl
fwait
in
inc
ljmp
test
enter
push
into
arpl
iret
cli
leave
sti
mov
scas
xchg
repnz
push
and
mov
jl
out
test
scas
icebp
sahf
hlt
push
out
xor
mov
leave
adc
xchg
inc
sahf
rclb
xor
sbb
sub
adc
out
sbb
mov
mov
and
test
push
enter
out
jno
fnsave
or
std
inc
enter
movsl
pushf
xor
xor
sbb
stos
pop
outsl
fsave
xchg
mov
push
cmc
jle
into
sbb
je
push
pop
rorl
sub
push
cmp
xlat
lahf
aad
sahf
adc
add
sbb
std
ja
adc
xchg
and
and
mov
icebp
sbb
mov
adc
int
lcall
adc
testl
xchg
jmp
pop
sub
scas
popf
ret
in
and
sbb
and
test
pop
leave
xchg
jne
pop
and
lret
push
test
push
mov
mov
jno
mov
cmpsb
mov
pop
xchg
mov
adc
mov
movsl
shr
js
xor
movsl
push
fnstenv
ja
movb
dec
xchg
iret
add
jmp
push
mov
loop
push
clc
dec
add
and
jae
jno
std
inc
mov
fsubl
subb
scas
lods
or
jmp
inc
out
ja
hlt
jle
cmp
and
xchg
les
jmp
or
std
clc
jbe
pop
sbb
add
adc
sahf
add
insb
fstl
xchg
call
inc
or
sub
or
arpl
push
and
je
mov
mov
movsl
sahf
ljmp
sbb
and
mov
out
and
adc
test
fsubs
repnz
lock
sub
xor
call
mov
ffreep
jnp
pop
adc
sbb
xor
push
dec
scas
aam
loope
mov
loope
pushf
loopne
lods
fdivrs
push
shrl
push
sub
dec
shl
push
pop
and
and
hlt
cli
jae
cmpsl
lods
ja
and
sbb
adc
mov
out
or
push
aam
xor
push
pop
cmpsl
lods
and
icebp
sbb
and
outsl
cmp
stos
lret
pop
push
pushf
xchg
sub
mov
cli
ja
scas
push
shlb
test
jl
inc
or
jmp
call
adc
test
jmp
or
pusha
jo
sahf
xchg
cmpsl
inc
std
movsl
popf
xor
aam
sti
cmp
pop
ss
cmc
movsb
repnz
cs
sbb
xchg
fdivs
sbb
xor
popf
aaa
and
mov
inc
lock
pop
cs
adc
movsl
push
lahf
xor
pushf
sahf
dec
movsl
add
mov
sbb
xorb
pushf
xlat
imul
dec
pop
inc
ljmp
out
mov
fwait
in
adc
scas
mov
aas
out
sbb
das
adc
sbb
je
movl
and
cltd
jmp
pop
mov
inc
lahf
xor
sbb
call
out
adc
and
add
jne
in
or
pusha
pop
inc
in
gs
mov
sbb
push
mov
int3
dec
add
adc
xchg
dec
test
and
scas
push
and
sbb
or
not
xchg
pop
sbb
pop
inc
cmpl
jno
mov
cmp
pop
mov
adc
sbb
stc
das
imul
test
or
inc
scas
push
lret
sbb
scas
fldl
cs
enter
xchg
popf
jge
pop
lock
sbb
imul
push
xorl
adc
mov
add
mov
push
mov
push
jl
lcall
divb
pop
gs
and
repnz
dec
aas
xlat
imul
pop
loope
sbb
loop
lods
adc
xchg
jp
mov
or
loope
and
mov
mov
lds
icebp
push
or
aaa
out
push
and
jns
arpl
pop
push
lea
mov
pop
subl
xchg
cwtl
adc
sti
or
mov
jmp
push
popf
cli
xlat
mov
or
pop
lret
std
pop
adc
or
clc
adc
call
pop
stc
cwtl
add
xchg
or
fcomi
xor
and
mov
or
pop
pop
dec
mov
sbb
sub
sahf
fwait
jmp
andps
pusha
data16
mov
test
cmp
movsb
clc
or
and
orb
sub
cmc
sbb
lcall
gs
pop
jp
cltd
mov
rcrl
imul
jmp
or
pushf
enter
and
lret
repnz
jge
sarl
ja
push
mov
xlat
rcll
sbb
xor
pushf
mov
dec
stos
sub
inc
das
inc
xor
int
adc
mov
fildll
in
mov
insl
frstor
jecxz
lock
or
mov
mov
and
sbb
or
and
in
adc
push
mov
icebp
fldenv
rclb
push
and
add
mov
sub
sti
das
lret
les
rcr
and
xchg
inc
sub
sbb
sub
dec
mov
and
inc
ljmp
inc
idivb
fsubl
ss
xchg
rclb
sahf
push
scas
aas
xchg
push
enter
sbb
dec
push
xchg
adc
or
xchg
mov
into
gs
push
dec
in
repnz
lret
cmpsl
push
inc
ss
and
pop
dec
lahf
movsb
lock
inc
imul
jl
test
push
lea
xor
adc
jg
inc
xor
lods
inc
adc
jne
pushf
xor
shll
lods
out
jmp
fstpl
pop
dec
jmp
mov
cwtl
adc
and
iret
call
pushf
insl
mov
or
shlb
pop
ror
dec
fidivrl
sbbb
add
xchg
sbb
cmpsb
mov
push
and
and
mov
int3
push
mov
jno
ret
push
or
adc
shrb
xchg
mov
lret
shl
cmp
or
push
pop
loop
jnp
inc
mov
jb
movsl
std
pop
pop
add
ds
aad
fwait
jp
mov
fcomi
fists
cmp
sbb
dec
adc
mov
outsl
rclb
inc
adc
insb
dec
out
test
pop
mov
pop
cltd
aaa
push
jle
imul
in
xchg
mov
cmp
xlat
adc
mov
pop
out
fwait
leave
push
mov
and
adc
mov
add
xchg
pushf
pop
push
std
loope
push
cmp
or
xor
dec
js
jp
mov
add
sub
and
push
adc
cmp
lea
dec
mov
lods
aaa
int3
lcall
test
fwait
adc
aam
gs
pop
dec
mov
rorb
push
das
adc
or
icebp
xor
andl
pusha
loopne
cmp
xor
das
mull
cmp
out
js
dec
push
jo
pop
in
push
adc
orl
jge
in
ljmp
shll
sbb
jecxz
pop
sub
les
xchg
push
jno
cmc
icebp
fwait
imul
inc
repz
loopne
and
ret
push
jp
cld
add
lahf
push
into
fs
stc
mov
scas
adc
fstps
sub
sbb
lahf
sub
sahf
or
mov
mov
das
aam
push
je
or
xor
subb
mov
popa
or
inc
and
xor
sti
sbb
clc
add
adc
or
aad
hlt
jne
push
cmpsl
mov
in
bound
cmp
inc
rorl
and
gs
das
and
bound
xchg
mov
fmuls
ret
fisttps
mov
adc
loop
xlat
inc
jmp
mov
fstps
push
dec
mov
es
or
icebp
aas
lret
arpl
xchg
call
sbb
pop
test
int3
and
stc
iret
cwtl
xchg
lcall
in
stos
add
icebp
dec
push
mov
dec
aad
or
lods
arpl
es
hlt
xor
mov
jcxz
and
nop
add
adc
push
fs
loope
testl
int
insl
jle
adc
and
adc
clc
sbb
das
hlt
push
adc
xchg
test
ds
cli
in
inc
pop
dec
mov
adc
mov
mov
jecxz
fwait
out
fisttpll
push
icebp
fbld
loope
aam
popa
mov
das
xor
push
addl
mov
mov
inc
and
out
cli
out
andl
fmuls
or
icebp
aas
orl
and
push
hlt
fdivp
mov
insb
clc
push
mov
out
cmp
push
and
push
inc
out
cld
jle
in
adc
add
xchg
inc
xchg
sbb
nop
stos
mov
fistpll
jo
es
pop
imul
dec
sbb
jle
mov
divl
jae
test
push
pop
mov
push
addr16
lods
or
icebp
mov
push
cs
mov
add
sub
int3
jae
add
xor
push
lret
faddl
sbb
mov
sbb
ss
movsb
cwtl
hlt
rolb
pop
lcall
outsl
cmpsl
cmpsl
adc
jmp
mov
and
repnz
outsl
outsl
lea
push
das
jne
mov
or
in
fcomp
imull
hlt
mov
inc
mov
cld
mov
push
divb
push
dec
sti
in
mov
movsb
fstl
rcl
lcall
cli
sbb
addr16
es
xchg
fisubrl
call
inc
dec
pop
test
jbe
push
divl
inc
lods
sbb
mov
lock
das
lods
push
addr16
out
jmp
push
and
push
mov
or
and
push
cmp
out
jg
sahf
mov
push
lods
imul
adc
mov
rcl
add
inc
push
mov
adc
jo
adc
dec
mov
aad
das
leave
test
mov
insl
sbb
xchg
rorl
jns
lret
mov
inc
pop
icebp
lock
dec
sbb
pop
adcb
push
push
orl
and
outsb
adc
rcl
pop
inc
mov
pop
inc
nop
and
xor
push
adc
mulps
mov
push
and
frstpm(287
push
mov
aaa
or
arpl
pop
sbb
leave
roll
fdivp
f2xm1
push
pop
dec
scas
rcr
jge
inc
cwtl
and
sbb
and
movsl
dec
or
mov
repnz
xchg
push
xor
jns
sti
sbb
jae
inc
mov
push
adc
arpl
lahf
push
test
lea
pop
hlt
jl
sub
data16
mov
sahf
stos
cmpsl
xchg
cs
in
out
push
mov
inc
sahf
sahf
cld
inc
iret
pusha
sti
fcomip
adc
loopne
sbb
and
into
repz
jae
in
or
fimuls
cmp
in
add
repnz
aad
shlb
mov
orb
sub
push
sub
cs
rcrb
roll
push
mov
fmuls
jbe
aas
scas
xor
inc
mov
lea
xor
or
pop
das
sbbb
ljmp
fadds
mov
or
sti
pop
push
leave
pop
xor
mov
dec
insl
shr
scas
add
js
jg
in
les
adc
imul
fnsave
test
fwait
mov
mov
xor
dec
lea
adc
lods
loope
das
cld
xchg
or
in
jb
push
or
push
fbld
mov
test
lea
and
cmp
sbb
mov
lods
lahf
inc
pop
pop
dec
xlat
loopne
jns
movsb
jmp
cmp
fdivs
pop
pop
xchg
in
leave
jge
cltd
sub
mov
mov
dec
add
fstl
aaa
repz
and
ficompl
adc
xor
xor
mov
cmp
popa
adc
mov
std
fmuls
shlb
push
dec
ret
mov
and
pop
pushf
xchg
andb
mov
mov
pop
mov
add
scas
bound
add
jmp
sbb
pop
mov
sub
cld
je
push
hlt
jmp
lcall
push
dec
mov
imul
jbe
jae
or
cwtl
and
cmp
sbb
cli
add
adc
xchg
mov
push
loopne
pop
pop
cmp
mov
fwait
add
push
dec
mov
in
inc
aad
dec
enter
shll
mov
jbe
jle
movsl
adc
cmp
insb
dec
sub
rorl
negl
mov
stos
mov
fwait
inc
das
das
das
pushl
out
das
popa
rorb
sub
mov
and
sbb
dec
dec
popa
add
sbb
sub
lds
adc
cs
push
and
and
mov
jbe
sbb
mov
les
jl
xor
dec
and
xor
pop
fistps
push
xor
mov
sbb
icebp
jmp
aad
out
in
adc
xor
out
add
pop
addr16
mov
and
mov
movsl
cs
inc
popf
in
ss
mov
xchg
xchg
cwtl
mov
add
cs
scas
js
lea
clc
cmc
xor
jmp
adc
adc
out
mov
mov
sub
add
scas
dec
dec
mov
and
and
pop
xor
push
push
ja
mov
mov
and
add
cs
and
out
pushf
and
lods
call
or
xchg
and
push
jns
sbb
das
cs
pop
fisttpl
cmp
push
lea
scas
movsl
flds
mov
fldenv
test
mov
out
mov
fidivl
movsb
push
xchg
negl
jo
xchg
xlat
scas
fdivl
xchg
lahf
sbb
cltd
sbb
clc
mov
or
mov
sbb
push
adc
mov
and
pop
out
lahf
pusha
push
imul
and
adc
or
fmull
xchg
mov
pushf
int
stos
xchg
fsts
scas
or
xchg
mov
or
sbb
push
sbb
mov
sub
cwtl
rcrl
cmp
cmp
aaa
jmp
je
push
in
dec
es
adc
jmp
mov
sbb
ficoms
cmp
push
enter
push
lea
push
add
xor
pop
or
push
aaa
jo
or
shrb
adc
sbb
mov
jl,pn
jo
cmp
mov
cltd
dec
hlt
rcrl
mov
aaa
mov
dec
mov
gs
cmp
pop
xor
rclb
push
mov
xor
sbb
or
out
dec
fucomip
scas
inc
aas
sbb
xor
out
shlb
aaa
test
mov
lahf
int3
sbb
lahf
or
push
and
sbb
xchg
and
jb
xlat
pusha
das
jmp
adc
ret
rol
xchg
dec
rclb
ret
adc
jbe
loop
xchg
scas
adc
or
cmpb
sbb
push
shlb
jne
outsb
and
loop
and
cmp
mov
sti
and
jo
inc
ficompl
leave
xlat
data16
mov
out
dec
hlt
xchg
scas
jecxz
cli
jb
daa
mov
repz
pop
mov
mov
pusha
mov
inc
xor
sahf
pop
pop
jns
mov
adc
pop
dec
test
cld
push
mov
arpl
mov
push
ja
fstps
shll
or
mov
mov
or
insb
or
adc
xor
dec
shl
pop
add
mov
addr16
mov
xor
test
adc
inc
cltd
orb
jb
aaa
hlt
ret
test
popf
dec
movsl
insl
or
cmpb
mov
popf
outsb
aaa
mov
push
sub
imul
dec
clc
or
mov
mov
arpl
pop
jmp
and
push
negl
jl
mov
popf
sbb
fnsave
push
repnz
mov
push
cwtl
decl
or
das
sbb
cmp
mov
testl
addr16
mov
in
sbb
gs
movsl
adc
jae
push
hlt
loope
fs
push
push
out
das
pop
sti
inc
pop
push
mov
xchg
inc
cmp
cmp
in
sarb
sub
rcrb
and
outsb
sub
fs
xlat
and
cld
push
jg
push
call
adc
mov
pop
or
xor
and
notl
ffreep
fcomps
mov
rcll
cmp
lds
into
jmp
push
je
daa
adc
jle
test
aam
loope
hlt
iret
xchg
add
mov
xor
lock
mov
cmc
push
jmp
fsubl
sub
rcrl
jnp
scas
sbb
push
orb
and
push
repnz
pop
pop
in
lcall
push
xor
sbb
jmp
pop
mov
pop
mov
loop
jne
fs
shlb
es
add
lcall
xor
mov
mov
xor
or
fucomip
or
into
inc
lcall
xor
mov
cltd
out
cltd
add
adc
xor
mov
jno
aas
adcb
rorl
mov
push
aam
out
adc
movsl
stos
pop
inc
push
imul
pop
faddl
jae
arpl
loop
insb
jo
lcall
xchg
lahf
mov
xchg
iret
notl
sti
icebp
icebp
mov
mov
xchg
pusha
cmc
cmp
cltd
popa
pop
sahf
push
frstor
inc
add
int
bound
icebp
fwait
nop
ja
xchg
inc
out
hlt
movsl
or
pop
test
sub
test
and
repz
imul
ds
inc
xchg
mov
movsl
adc
dec
mov
mov
cmpsb
mov
cs
pop
inc
jge
push
int
or
test
call
fmuls
xchg
movsl
inc
mov
negl
xor
scas
lahf
cmp
outsb
lea
out
aad
mov
pop
lahf
adc
xchg
mov
push
fnstcw
ss
ret
stc
or
aad
dec
or
adc
repz
jae
mov
and
shl
and
fisttpl
data16
mov
arpl
add
cmp
testl
es
cmp
inc
leave
popa
rol
xchg
xchg
rcll
and
aad
xlat
mov
and
popf
bnd
jo
sbb
push
add
sbb
adc
cmpsl
hlt
fwait
push
aam
and
xlat
pop
notb
jmp
jno
push
popf
or
add
jae
call
aaa
ja
xchg
xor
pop
and
xor
push
mov
pop
jno
xchg
push
adc
add
adc
and
dec
out
inc
aad
sbb
and
ja
scas
aam
add
pop
enter
jg
jne
dec
addl
jbe
and
sbb
xor
fs
jge
sub
and
loope
or
ja
fsubp
push
cltd
movsl
rcrl
fisttpll
add
fnstcw
add
xor
pop
sahf
fs
adc
adc
cmp
cmpsl
xchg
or
jle
stos
scas
repnz
imul
movsb
adc
inc
push
movsb
iret
hlt
pop
mov
lahf
in
inc
sbbl
out
adc
xlat
fcoml
aam
cwtl
test
mov
pop
popf
movsb
mov
xchg
mov
sbb
addr16
jg
jbe
jg
divb
int
popa
mov
cmp
sub
mov
push
out
bswap
mov
adcl
push
pop
jnp
mov
mov
fcomp
mov
jecxz
mov
sub
sub
mov
in
sti
add
mov
out
hlt
stc
inc
pushf
and
shlb
inc
mov
fists
das
push
sbb
cmp
jns
popf
fcompl
add
out
and
out
mov
mov
mov
mov
lret
mov
hlt
adc
adc
orl
sbb
jmp
lahf
sub
or
aaa
pop
decl
sahf
cmp
cmpsb
adc
fsubs
std
adc
cmp
add
push
movsl
sbb
dec
and
lock
sbb
faddl
xor
stc
mov
out
std
cmc
cmp
addl
out
sti
add
and
pop
and
mov
repnz
cli
xchg
adc
pop
daa
aam
out
hlt
jp
ret
mov
push
sub
mov
adcl
or
outsl
adc
or
mov
shrl
and
or
adc
inc
ljmp
outsl
and
lods
ficoml
les
pop
add
jp
lret
aad
jnp
adc
mov
adc
les
loop
nop
adc
fmull
cltd
enter
push
jno
cld
lret
dec
je
sub
and
lock
pop
lcall
add
adc
add
xchg
pop
iret
pusha
sub
mov
out
out
pop
cmpsl
cmc
adc
pop
sub
sub
dec
push
jmp
add
adc
pop
not
cmp
jge
pop
or
mulb
popl
hlt
xor
adc
aad
pop
jecxz
pop
arpl
in
in
or
out
iret
mov
das
out
dec
mov
xchg
in
pop
sti
xor
sbb
xchg
leave
jg
pop
push
mov
loop
mov
stos
jb
sbb
add
push
repnz
movsb
sbb
sub
mov
add
jbe
inc
mov
shlb
negb
push
dec
in
add
jns
jno
int3
fildl
mov
shrl
push
pushf
and
lods
enter
xor
jmp
popf
sbb
or
mov
push
pop
stos
je
mov
sbb
pushf
loope
leave
pop
arpl
pop
sub
dec
aam
add
adc
mov
xor
aam
flds
jne
cmp
ja
inc
lods
mov
leave
inc
add
and
mov
mov
pop
lea
or
jb
into
jp
into
or
pop
jmp
mov
xor
push
inc
lods
xor
shrl
mov
adc
int
adc
or
and
fcompl
adc
push
cmp
lock
add
das
fnsave
je
jmp
jmp
jno
push
xchg
test
out
je
add
xchg
negb
jno
popa
in
popl
nop
outsb
incb
lahf
jmp
icebp
and
movb
push
mov
jl
mov
cmp
sbb
in
stc
push
adcl
jno
hlt
xor
imul
imul
push
add
cltd
and
outsl
sbb
hlt
xor
mov
mov
sub
arpl
add
pop
or
jle
and
add
xchg
mov
push
adc
out
fcomip
ret
sbb
add
mov
mov
incl
mov
sbb
aaa
mull
imul
data16
popf
ljmp
jno
xor
and
fstpl
hlt
adc
icebp
ljmp
loope
adc
push
dec
xchg
adc
imul
loope
pop
icebp
lea
push
jns
stc
xor
and
inc
push
jge
jmp
ljmp
pop
push
xor
push
sbbb
xor
das
push
stc
sbb
mov
cs
int
dec
cmpsb
mov
imul
jae
pop
add
cs
xor
out
mov
outsb
sbb
cwtl
nop
mov
and
and
adc
int
cwtl
push
xor
nop
adc
jg
scas
cmp
std
and
or
das
mov
mov
xor
into
inc
xor
push
cs
mov
mov
xor
nop
adc
mov
call
sbb
adc
mov
or
das
mov
jmp
loope
jmp
sub
cwtl
out
and
mov
lcall
jns
shlb
xlat
push
pop
or
nop
fistps
xor
fcomps
mov
xchg
jecxz
mov
or
and
xchg
mov
std
xor
movsb
lock
xchg
cltd
or
scas
and
das
ficomps
lret
or
xchg
add
icebp
test
pop
cs
and
push
sbb
add
movsl
or
or
loopne,pn
and
push
push
scas
andl
mov
and
push
rorl
jno
dec
and
or
xchg
loopne
and
lock
sbb
or
and
xor
adc
xor
pop
xor
pop
cs
sbb
das
imul
mov
adc
pushf
in
inc
xor
test
loopne
and
mov
pop
cs
xchg
or
lea
out
adc
adc
and
or
xchg
mov
mov
sbb
xchg
lahf
sbb
pop
mov
out
pop
xor
push
sbb
xor
jge
jl
addr16
adc
adc
hlt
cmp
push
dec
mov
dec
in
sti
ja
push
and
repz
and
into
pushl
and
or
inc
jle
rorl
in
fisubs
inc
nop
sarl
xchg
push
lret
inc
sahf
bnd
xchg
mov
insl
xor
pop
xchg
es
sub
push
test
repz
cmpsl
iret
cmp
fstpl
cmp
pop
or
dec
sbb
lahf
adc
xor
push
sbb
cmc
jl
iret
lods
or
inc
mov
xchg
adc
dec
mov
outsl
cmpsl
and
out
lods
es
aas
xor
cmpb
ffreep
rcrl
loopne
daa
lock
xchg
jnp
xor
stos
mov
lods
stc
pop
daa
sbb
add
mov
insb
adc
or
stc
pop
sub
mov
dec
sub
jge
mov
icebp
lret
pop
bound
movsl
call
add
xor
inc
insb
jb
daa
or
sbb
hlt
sti
inc
adc
jne
mov
outsl
fwait
mov
popf
pushf
mov
mov
movsb
add
enter
push
mov
ds
or
scas
and
push
lcall
inc
inc
in
add
sbb
sub
xchg
ja
faddl
inc
mov
mov
je
scas
call
mov
or
sub
and
xchg
sbb
cmpsb
loope
lea
xchg
sub
cmpsl
inc
stc
lock
inc
adc
clc
sbb
pop
adc
fadds
or
xchg
jge
loopne
cmp
or
mov
fs
dec
loope
and
mov
ss
cmp
ja
add
xlat
iret
mov
inc
ror
mov
lcall
and
mov
adc
push
adc
pushf
aad
popf
idiv
test
fs
sub
mov
leave
xchg
insl
clc
push
mov
int3
cli
es
bnd
jle
dec
mov
pushf
cmp
outsb
jae
mov
insb
cltd
repz
mov
push
xchg
xlat
out
adc
stc
sbb
fsubs
icebp
pushf
lcall
push
loop
inc
hlt
lahf
test
lcall
ret
mov
test
or
push
hlt
pop
add
mov
rcrb
repz
jo
pusha
sti
xchg
adc
xchg
stc
shll
adc
xchg
ja
inc
xchg
or
push
jmp
add
mov
fsubl
dec
jge
push
shrb
iret
adc
xchg
aaa
enter
scas
orl
cmpsl
push
cli
aad
imul
inc
out
and
mov
inc
enter
fmuls
xchg
jb
sbb
jae
fsubl
mov
les
xchg
mov
and
in
sub
xchg
mov
inc
stc
jno
enter
loopne
or
popa
sub
div
xchg
iret
ljmp
cwtl
jne
xor
mov
vpaddsb
mov
lods
out
push
xlat
mov
pop
inc
push
mov
loope
adc
xchg
dec
jge
pop
divb
out
xchg
and
jns
test
dec
cld
imul
pusha
aam
std
popa
push
xchg
push
xchg
data16
mov
xor
xchg
pop
inc
mov
sbb
push
push
jnp
sub
inc
adc
and
out
cltd
repnz
sti
and
jbe
push
into
stos
sub
mov
cmp
call
bound
enter
dec
aas
sub
xchg
aad
aaa
mov
mov
hlt
pop
daa
sbb
ljmp
pusha
or
cld
mov
fs
sti
mov
xchg
push
xchg
in
jmp
adc
add
lahf
hlt
stc
cltd
pop
push
mov
mov
mov
out
cmp
sbb
insl
idivb
sub
scas
test
add
jmp
cwtl
sub
inc
bound
jno
data16
sahf
insl
inc
or
sbb
and
loopne
lahf
inc
fdiv
push
pop
das
popf
cmpsb
xchg
hlt
aad
out
in
rcl
adc
aad
cmp
push
divl
xor
mov
mov
popa
pop
and
call
fwait
rcll
leave
xor
aad
dec
or
popa
scas
repnz
je
push
xchg
lcall
in
push
imul
fsubrl
dec
mov
pop
push
dec
nop
pop
xor
mov
mov
mov
sbb
mov
adc
je
and
push
lret
xchg
dec
daa
xlat
rolb
imul
cld
out
fdivrp
fs
lret
mov
hlt
adc
jp
push
pop
dec
imul
mov
insb
push
outsl
add
lcall
int
gs
jl
pop
xchg
lods
jg
leave
jl
imul
jle
or
mov
xchg
outsl
scas
or
xchg
inc
push
push
xchg
pop
add
inc
outsl
call
jbe
mov
test
fsts
mov
pop
mov
jns
mov
stos
inc
fisttpl
and
mov
mov
sub
fwait
mov
hlt
lods
jmp
fnstenv
xor
icebp
add
sbbb
lods
mov
and
out
not
cmp
jmp
ss
adc
xor
iret
sub
addr16
cmp
fisttpll
roll
pop
pushf
fldcw
inc
mov
test
test
lea
and
xor
adc
fistpll
std
ja
push
sahf
fsubrl
int
cmp
data16
fwait
cmp
adc
xlat
adc
repz
out
xchg
mov
push
adc
fucomi
xor
or
mov
aam
in
fidivl
sbb
sahf
fnstsw
pop
movsl
sub
sub
ja
icebp
and
sbb
dec
push
mov
es
jge
stc
popf
xlat
xchg
rcrb
jbe
adc
les
sbb
adc
and
mov
mov
das
lods
movsb
test
ss
push
andl
and
lods
scas
pop
cmc
lahf
lret
pop
adc
jno
int
cmpb
push
pushf
inc
push
clc
cld
loopne
jno
xchg
imul
test
addr16
cltd
xchg
arpl
je
shl
fists
out
adc
xchg
insl
mov
lahf
push
pop
mov
adc
mulb
pop
imul
mov
sti
lcall
and
fstl
inc
push
push
sub
mov
sbb
add
addr16
xchg
ss
xchg
sahf
mov
jmp
fsubrs
pop
idiv
fdivs
and
mov
adc
mov
js
sar
xchg
sbb
pop
fisubl
pop
xchg
and
enter
ret
jb
leave
popa
scas
jbe
push
or
fbld
jle
jo
fwait
notl
mov
mov
adc
or
or
and
mov
adc
dec
xlat
test
inc
adc
xor
xchg
jmp
aas
xchg
mov
inc
push
fdivrs
adc
push
sub
int
adc
mov
sbb
loope
push
dec
les
inc
mov
xchg
gs
adc
add
adc
push
adc
or
xchg
mov
adc
pop
and
jmp
and
cmp
int
out
xchg
mov
rcll
cmpsb
ficoml
adc
jb
mov
loop
xor
out
or
add
add
fsubrp
mov
leave
inc
xor
and
inc
push
sub
or
cmp
fists
fistl
cmp
subb
jne
adc
sub
adc
mov
jge
adc
hlt
or
iret
and
xchg
mov
lret
insl
das
scas
mov
cmp
pop
jp
or
push
xor
jo
sbb
fwait
dec
outsl
mov
or
xor
scas
imul
jae
add
jbe
ljmp
inc
push
push
jecxz
bound
repnz
and
lods
xchg
xchg
adc
adc
hlt
adc
ja
bound
xlat
push
icebp
pop
sbb
mov
push
cmc
adc
or
push
sbb
and
out
add
mov
push
cmc
lcall
shll
dec
rcll
cs
mov
cs
fstpt
mov
push
or
insl
pop
sbb
and
or
mov
mov
ror
xchg
cwtl
mov
add
sar
fstpl
rclb
fiadds
mov
mov
adc
add
cmp
dec
adc
mov
dec
sar
jb
cmpsl
je,pt
mov
mov
nop
lods
data16
dec
sub
jb
pop
push
mov
jae
adc
sbb
and
dec
dec
hlt
ja
lret
cmp
add
or
mov
add
jmp
adc
jge
or
cs
lcall
das
arpl
hlt
popf
lfs
adc
push
sti
insb
xchg
inc
ss
fst
and
imul
adc
test
int3
sbb
jno
ss
adc
mov
mov
cmp
roll
and
pop
push
inc
in
cmpsl
xchg
adc
sbb
jecxz
pop
popf
mov
repnz
cli
jno
enter
mov
enter
jb
rcll
aam
add
divl
sbb
push
iret
sbb
dec
inc
ds
jmp
aaa
sbb
popa
cmp
mov
gs
mov
bnd
pop
mov
sti
mov
adc
cmpsl
push
into
sbb
mov
sahf
mov
fisubs
adc
jbe
imul
sbb
sbbl
jae
test
adc
cmpsl
mov
xchg
and
push
mov
aad
icebp
and
or
jmp
das
and
rol
xchg
andb
jge
add
add
lret
aad
imul
dec
pop
xchg
xchg
dec
pop
adc
push
lea
lock
adc
jmp
shrl
mov
and
xchg
lods
rcll
and
or
mov
mov
jl
push
and
mov
pushf
mov
repz
aad
inc
iret
jns
test
movl
into
dec
pushf
mov
mov
jae
sub
pop
adc
adc
ss
or
push
inc
mov
mov
or
stc
xchg
icebp
mov
repz
mov
jno
cmp
mul
cs
inc
cmc
mov
adc
sbb
cs
push
mov
fcom
les
loop
insl
cwtl
fstpt
sbb
inc
jl
or
jns
das
sub
mov
sbb
pop
xlat
xor
jmp
jns
jo
add
rolb
rclb
int
adc
or
scas
xchg
fstp
test
movb
aas
popa
fildl
and
push
add
mov
fsubrp
cwtl
ja
mov
out
and
out
adc
imul
ss
mov
xchg
or
dec
adc
daa
and
hlt
dec
ja
cmpsb
adc
jne
lods
dec
or
push
rcr
into
push
sub
push
out
xor
lock
stc
push
out
jns
mov
ljmp
add
fisttpll
hlt
jb
push
std
jp
nop
pushf
mov
lcall
xchg
push
aas
inc
inc
stos
shll
pop
mov
push
dec
shll
push
or
sbb
into
imul
fsts
sbb
inc
sbb
in
jle
push
out
loope
aam
adc
iret
lds
or
mov
test
mov
or
sbb
shll
shlb
inc
call
mov
call
sub
out
jmp
ja
adc
sbb
xchg
sub
shl
and
hlt
loope
mov
mov
fs
add
mov
xchg
loopne
jmp
ds
inc
adc
jb
jo
imul
pop
mov
xchg
and
inc
dec
pop
lret
call
sbb
inc
mov
cltd
test
leave
lods
shl
adc
cmp
outsl
leave
cmpsl
movb
sub
and
leave
jo
call
and
sahf
jg
xchg
and
jae
cmc
sub
adc
stos
fcomi
aad
xchg
idiv
movsl
nop
pushf
adcb
out
mov
ror
mov
xchg
test
mov
dec
inc
pusha
shrl
nop
mov
popa
pop
clc
sbb
push
xchg
aaa
and
pop
test
jb
test
cs
mov
jae
push
adc
xor
rolb
inc
mov
loop
cs
push
jne
lods
imul
shlb
out
shlb
out
std
enter
int
cwtl
adc
nop
or
divps
out
icebp
push
push
xchg
icebp
stos
aam
repz
jmp
ja
jo
cmp
jge
out
sahf
fldcw
loop
pop
test
adc
or
call
xchg
adc
mov
push
mov
mov
inc
movsb
adc
dec
or
pop
xor
xor
ja
aam
push
das
sti
scas
sbb
orl
lods
rcrb
fwait
mov
mov
sbb
sbb
neg
xor
icebp
scas
mov
fbld
cs
icebp
lock
push
adc
mov
pop
das
ficompl
lahf
pextrw
push
in
jne
cmc
in
or
insl
mov
cltd
push
mov
repnz
sahf
and
std
movsb
xchg
roll
das
sbb
lea
mov
adc
mov
pushf
adc
pop
pop
pop
xorb
xchg
sbb
das
cltd
fwait
or
sbb
or
scas
and
pop
or
pushf
push
inc
sbb
scas
or
mov
push
jno
je
and
lret
popf
or
mov
pushf
sbb
or
xchg
fdivp
std
pop
pop
rorl
mov
or
arpl
xchg
loopne
mov
xchg
stc
or
das
repnz
fisttpl
jp
sbb
sbb
mov
xchg
in
popa
xchg
out
adc
cltd
inc
cmpsl
cld
dec
fisubrs
fsubs
add
fistpl
adc
fcompl
and
sbb
push
mov
lea
pop
movsb
mov
and
ficomps
out
xchg
xor
xchg
mov
adc
adc
and
mov
fwait
pop
mov
xor
das
cld
jne
fwait
or
and
push
pop
pop
pop
scas
and
or
mov
pop
popf
mov
sbb
mov
mov
inc
arpl
mov
lret
out
das
ss
push
or
adc
sbb
cmp
pop
adc
shrb
loope
mov
repz
scas
div
stos
xchg
xlat
jge
std
xor
das
seto
in
dec
add
mov
movl
mov
dec
xor
adc
lahf
leave
sbb
xchg
and
imul
mov
adc
xor
xchg
scas
insl
sub
addr16
sbb
sub
adc
mov
js
in
jmp
mov
cs
ja
sbb
sbb
mov
ljmp
mov
and
sbb
or
mov
fistl
push
sbb
inc
xchg
lret
push
std
cs
push
mov
cmpxchg
cld
cmp
das
mov
pop
test
xor
sub
imul
icebp
negb
in
sbb
scas
dec
mov
mov
add
fwait
push
jp
and
mov
fwait
or
adc
and
mov
sbb
out
mov
xchg
popf
cmpsb
or
cmp
mov
out
bswap
out
jp
in
jbe
sbb
sbb
sbb
sbb
pop
sub
mov
imul
sahf
jns
or
mov
rolb
push
xor
xor
lock
in
lods
xchg
fwait
adc
popf
popl
pushf
in
lea
jns
lcall
mov
mov
sahf
cltd
fisubrs
stos
sahf
movsb
lcall
pop
lcall
int3
or
pop
sbb
and
stc
xchg
adc
lods
sbb
popf
lcall
fwait
adc
lahf
scas
sbb
sub
adc
pop
nop
push
xchg
cltd
jnp
fwait
sbb
xchg
movsl
mov
adc
and
sbb
mov
lcall
sub
mov
loope
test
push
idivl
out
dec
inc
fstpl
dec
cmp
xor
or
dec
idivb
xor
mov
xchg
and
call
and
dec
rol
add
pop
add
rorl
xor
mov
mov
hlt
dec
lds
ljmp
sub
sbb
xchg
lcall
xor
popa
dec
push
sti
push
ja
xor
out
sbbl
push
lods
xor
int
add
xor
inc
popf
push
adc
or
sahf
and
sbbb
lock
jne
mov
mov
test
aaa
dec
sub
mov
xchg
or
js
clc
lahf
and
and
jae
jecxz
sub
sbb
push
mov
outsl
dec
adc
aam
test
inc
shlb
arpl
push
dec
aaa
sbb
outsb
popa
repz
jb
mov
jmp
push
adc
outsl
jge
mov
shr
nop
aam
dec
pop
xor
and
fwait
push
jbe
adc
rclb
and
sbb
cmp
push
adc
pop
hlt
adc
and
xchg
xlat
inc
jns
xor
add
and
movsb
out
or
in
popf
dec
push
inc
sbb
mov
adc
adc
mov
aam
repnz
cmc
and
aas
mov
sub
jo
inc
pop
xor
pop
push
int3
adc
adc
pop
fwait
lea
adc
insl
sub
push
bsr
jae
stc
shll
dec
push
cmp
sbb
adc
cmp
adc
and
mov
ljmp
test
mov
mov
adc
repnz
das
mov
xchg
int3
movsl
nop
or
jg
stc
aam
fiaddl
mov
hlt
in
dec
mov
popf
mov
xor
cwtl
and
cmp
add
adc
hlt
dec
mov
das
je
sahf
jge
idivb
adc
adc
xchg
xchg
sub
sbb
das
push
xchg
and
cmp
daa
sbb
sbb
mov
in
push
sbb
pushf
push
popa
pop
push
leave
dec
sahf
adcb
mov
or
adc
cmp
fcompl
jmp
mov
stos
sbb
sbb
and
or
cmp
xlat
int
hlt
testl
lahf
loop
aam
lret
scas
jmp
aas
ds
dec
or
and
mov
jno
push
sahf
inc
pushf
fstps
pop
lea
push
mov
addr16
dec
gs
out
adc
ljmp
or
and
das
hlt
dec
mov
push
jg
dec
adc
add
mov
dec
loop
mull
scas
push
adcl
push
jne
jnp
jge
sbb
and
xchg
in
sub
push
xchg
push
icebp
fistps
cmp
jbe
jnp
orl
xor
rcr
outsb
mov
out
es
dec
jbe
jo
lods
push
xor
inc
cmp
jb
divb
mov
add
and
and
mov
rolb
dec
loop
push
mull
add
scas
mov
dec
sub
mov
mov
orl
and
xor
and
fstpt
cltd
loopne
sbb
fidivrs
inc
das
shrl
inc
test
aaa
imul
push
imull
mov
xorb
push
das
mov
xor
mov
dec
in
rorb
arpl
fmuls
inc
add
sahf
cmp
iret
call
adc
test
inc
xlat
inc
xor
jo
mov
inc
and
je
dec
xorb
or
outsl
adc
jns
repz
adc
ror
aaa
popa
ja
loope
lods
pop
adc
and
and
stos
mov
cld
push
adc
sbb
ds
cli
adc
jno
jae
mov
pop
shrb
aam
push
jno
dec
addr16
clc
cmp
hlt
sar
fistpll
cmp
jg
stos
adc
sbb
sbb
xor
sub
xor
aam
mov
jle
xchg
sbb
pop
fst
mov
cmpsb
mov
cmpsb
mov
and
xor
add
or
fidivs
jae
sbb
sar
push
mov
jns
pop
rcll
push
shrb
or
shll
mov
push
or
push
sbb
mov
sbb
cli
and
jbe
jae
ret
fcoms
mov
ja
rcrb
sub
mov
add
stos
mov
es
fstpt
stos
cmp
xchg
pusha
popf
xchg
pop
lret
and
std
sbb
add
scas
xchg
push
push
leave
push
scas
xor
lods
jge
push
pop
rclb
repnz
mov
jno
fcompl
popf
cld
test
aaa
hlt
arpl
xchg
fcomp
mov
lods
push
inc
loopne
cmp
int
mov
mov
movsl
pop
sahf
pop
lret
xorps
mov
hlt
xlat
lock
iret
ja
inc
inc
lods
mul
and
int
out
mov
push
lahf
mov
fcmovne
and
pop
pushw
push
stc
add
inc
imul
in
fisubs
jnp
call
pop
add
inc
sbb
lret
hlt
sbb
sbb
and
fwait
jp
xchg
jge
push
andl
adc
lcall
and
jno
or
xlat
xchg
in
cmp
inc
dec
fmuls
lea
push
mov
push
clc
lret
mov
xor
mov
pop
mov
xchg
ss
and
xchg
hlt
or
mov
cmc
mov
add
hlt
daa
inc
add
xchg
mov
cmp
cmc
in
insb
loopne
mov
mov
lahf
dec
in
pop
popa
test
sub
add
mov
mov
fnsave
divl
adc
clc
addb
shrl
sub
inc
or
inc
test
pop
mov
out
push
shll
sbb
xchg
fistpl
cld
out
jle
push
dec
pushf
or
push
adc
cmp
inc
adc
popf
pop
dec
in
sub
movsb
xchg
and
rcll
sbb
xchg
iret
add
gs
das
outsb
pushf
testl
mov
cwtl
and
jno
pop
int3
cmp
jb
icebp
ficoml
popaw
push
imul
popf
pusha
jmp
and
adc
jp
test
inc
rorb
scas
mov
aas
negl
jge
add
and
in
mov
fstl
and
mov
out
fxtract
sub
je
std
in
mov
fldt
sbb
fwait
cs
movsl
lahf
and
cmpb
mov
mov
fbld
xor
add
or
lahf
sbb
fistl
sbb
mov
add
push
loope
cmc
xor
out
adc
adc
adc
jmp
push
imul
stos
jge
aas
pop
push
xchg
mov
add
out
lock
sub
cwtl
pop
mov
and
gs
mov
icebp
call
scas
pop
jae
or
loopne
leave
stos
xchg
rolb
push
jecxz
aad
shl
xchg
ffree
iret
push
mov
adc
and
stos
adc
in
mov
xchg
lock
or
leave
cwtl
add
jae
aam
lret
sbb
lret
xchg
xchg
arpl
sub
mov
lds
popf
sahf
scas
int3
push
adcb
pushf
es
cmp
testb
pop
cmpsb
push
add
dec
mov
jge
push
hlt
cmpsl
cmp
mov
stos
in
imul
out
movsb
xchg
imul
inc
sti
push
xchg
jne
add
cmp
push
loope
and
negw
fdiv
push
pop
sbb
ret
xchg
mov
shl
scas
sbb
and
movsb
mov
ljmp
pop
cmc
adc
xchg
and
stos
scas
ja
fmul
rcll
pop
int
popa
or
roll
jnp
in
scas
adc
nop
cmc
push
popa
adc
pop
and
jae
cltd
loop
xchg
push
sbbb
jge
jmp
outsl
cmpsl
xor
popf
mov
test
sbb
daa
mov
push
and
adc
push
jmp
xchg
adc
cmp
aas
jo
mov
pop
adc
push
adc
mov
pop
dec
and
sbb
sub
jnp
xlat
pushf
xchg
xchg
dec
push
push
imul
mov
mov
sub
stc
and
jge
adc
or
cmp
sbb
shl
add
adc
hlt
add
repnz
xor
cmp
popf
adc
push
pusha
sahf
fsts
sub
jge
add
inc
clc
xchg
dec
pop
pop
imul
jne
imul
es
dec
sbb
in
stos
jge
stc
out
rol
inc
aaa
add
loope
adcl
jne
jnp
loop
in
mov
inc
lods
jnp
ret
cmp
aam
inc
mov
jmp
push
mov
pop
fdivrl
adc
lock
inc
inc
mov
stos
push
fcmovnu
mov
pusha
push
adc
adc
pop
pop
sub
push
mov
jp
shll
ja
push
repnz
rorb
cli
pop
push
push
xor
sbb
push
dec
or
and
push
cltd
xor
push
les
dec
push
sbb
adc
cltd
js
sahf
shlb
sbb
pop
xor
and
movsl
mull
jge
sub
mov
call
rdtsc
push
and
dec
je
sahf
mov
jle
and
sbb
popa
cli
shl
loop
outsl
adc
lods
out
push
shll
or
cmc
mov
test
or
bound
mov
out
in
repz
aaa
jecxz
sbb
xor
add
pop
enter
jmp
out
adc
xor
adc
test
jmp
out
adc
pushf
pop
cmp
xchg
mov
mov
shl
rcll
adc
aam
push
insl
mov
sbb
ret
or
push
push
inc
bnd
and
outsl
jge
movsl
push
push
add
dec
movsl
insb
or
out
std
int
push
addr16
and
out
xor
mov
cmp
roll
loop
or
inc
push
mov
and
dec
test
push
inc
outsl
lea
leave
sbb
lcall
daa
sahf
mov
call
inc
inc
call
xchg
and
sbb
jo
lds
jbe
cwtl
rcrl
mov
cmp
sbb
cltd
add
cmp
ja
clc
cwtl
stos
rcll
incb
pop
into
aas
mull
pop
mov
pop
adc
shrb
arpl
push
jno
and
les
push
cli
test
call
xchg
ja
ficompl
mov
lods
sub
sbb
hlt
jge
bound
ret
and
xor
fsubrs
and
mov
repnz
inc
es
pusha
hlt
cwtl
dec
xlat
mov
pushf
fcoms
stos
hlt
mov
adc
ret
pop
sbb
and
inc
aas
push
adc
fists
and
sbb
cs
jg
cs
mov
sub
or
sbb
cs
cwtl
jmp
sbb
sbb
push
shll
push
nop
or
and
jmp
das
pop
sbb
mov
xchg
mov
jp
and
int
in
cltd
add
or
mov
mov
pop
sbb
in
mov
mov
fiadds
add
das
sbb
lea
sar
mov
push
lahf
and
test
and
testl
scas
shll
xor
xchg
std
or
push
mov
sbb
xchg
stc
and
or
scas
push
sbb
clc
xchg
adc
loop
sbb
cltd
std
xchg
pop
sbb
icebp
push
popa
push
and
inc
cld
sbb
xchg
cld
lcall
xor
pushf
std
sahf
cld
mov
loope
jno
sub
xchg
popf
mov
xchg
sbb
xlat
xor
out
or
mov
mov
xor
icebp
or
mov
and
mov
sbb
mov
xchg
icebp
das
xor
push
pop
push
mov
xor
in
xlat
and
das
popf
xchg
out
pop
jge
pop
xor
cltd
js
das
xlat
and
out
scas
pop
mov
mov
or
xor
pop
sbb
flds
xlat
mov
fsubs
pop
fisttps
adc
xchg
pop
mov
std
adc
push
or
sbb
adc
push
push
or
xor
out
mov
or
scas
mov
push
out
pop
xor
adc
xchg
clc
das
adc
jns
xor
lods
jg
adc
sbb
ret
enter
out
repz
outsb
leave
popf
and
ret
fisubrl
cmp
fnstenv
inc
gs
xchg
loope
hlt
push
cmp
ljmp
cltd
dec
push
xor
std
sub
arpl
add
lods
xor
jno
adc
out
mov
xchg
add
scas
and
ret
inc
sub
cmpsb
gs
jae
movsb
inc
sahf
adc
pop
or
lea
jns
pop
mov
xor
sub
mov
sbb
jno
adc
fstpl
repnz
hlt
lods
pop
lret
mov
cmp
cmp
stos
int
jle
test
mov
dec
add
sarl
add
movsl
mov
in
dec
adc
les
jbe
enter
bound
xorb
push
pop
shrb
outsb
ja
sub
adc
sarb
aad
dec
repnz
cmc
iret
mov
pop
call
push
cmpsl
jae
sbb
push
pop
cltd
push
icebp
repnz
loopne
scas
int3
mov
jb
jle
pop
mov
xchg
sti
jmp
je
pop
jns
add
xlat
loop
rorb
stc
pop
icebp
pop
sti
sbb
mov
xchg
outsb
js
je
cli
jne
imul
sbb
fisubrl
sbb
push
cmp
fimuls
push
jle
push
mov
out
imul
add
xlat
call
das
push
shrb
stc
arpl
insl
pop
push
xor
mov
outsl
lcall
cli
jge
adc
or
icebp
sbb
xchg
jge
push
es
sub
lret
leave
xchg
std
insl
sbb
mov
gs
push
mov
cmpsl
icebp
icebp
sbb
dec
or
dec
push
xor
clc
push
mov
repnz
and
dec
fwait
xchg
sub
aas
hlt
cmp
fidivl
and
inc
cmp
clc
nop
bound
cwtl
out
cs
mov
jcxz
scas
bnd
cmp
xchg
std
mov
test
sub
subl
in
sti
fwait
inc
aad
push
dec
mov
xorl
push
shll
imul
cmc
stc
rcr
es
cltd
loop
popa
adc
ss
call
xor
mov
imul
ja
mov
mov
add
ljmp
mov
mov
add
mov
sbb
jg
adc
cmp
mov
dec
hlt
pop
xchg
jecxz
inc
js
mov
std
icebp
stos
jge
mov
sbb
sub
add
aaa
pop
call
lea
pop
adc
ficoml
clc
jg
gs
rcrb
arpl
sub
rclb
sub
or
add
mov
outsb
aas
icebp
push
pop
push
mov
add
xchg
cmc
mov
mov
mov
adc
adc
cmp
sti
sub
icebp
sub
mov
and
fidivrs
decl
and
adc
repnz
outsb
and
jae
inc
mov
adc
int
test
push
nop
push
out
inc
clc
mov
cmp
jns
sub
int
rol
mov
inc
sti
jno
ss
sbb
mov
enter
and
aas
repz
hlt
pushf
sub
fsub
js
xor
mov
adc
pop
outsb
and
hlt
mov
sub
mov
pusha
jo
fstpt
pop
rcrb
enter
xchg
jae
testb
pop
xor
dec
inc
repnz
adc
push
mov
lret
adc
inc
mov
in
pop
xlat
mov
call
jno
xchg
fists
adc
sub
push
mov
popf
xchg
and
adc
sbb
test
in
fisubs
jle
imul
fwait
or
sub
mov
lods
push
icebp
sub
mov
insb
addb
movsb
cmp
in
shrb
inc
pop
lock
out
jp
cmp
xor
shlb
out
adc
inc
sti
xchg
in
or
xchg
cmp
sbb
insl
les
or
xchg
mov
orb
push
dec
pop
xchg
pmuludq
test
xchg
stos
and
mov
or
fisttps
adc
stos
or
xchg
jle
add
lea
xchg
das
in
leave
inc
push
adc
push
adc
orl
ja
and
pop
enter
jbe
adc
int
repz
leave
in
fstp
dec
fwait
subb
and
cs
mov
aaa
imul
test
cld
pop
jecxz
dec
repz
mov
repnz
or
call
push
lret
dec
inc
mov
mov
and
sbb
das
insb
or
mov
stos
or
icebp
sub
pusha
jbe
fcmovb
sbb
or
ljmp
fsubrp
mov
aas
cmp
jae
dec
fcmovnbe
lods
std
push
sbb
add
hlt
fnstcw
adc
outsb
outsl
shl
mov
jl
sbb
aaa
pop
xchg
movsb
xor
or
dec
mov
aas
mov
movsb
xor
fwait
scas
jno
std
subb
pushf
outsw
sbb
movsb
out
push
or
out
pop
push
sub
cs
aad
inc
repz
mov
out
cmpb
jmp
outsb
add
ret
hlt
push
pop
xchg
lods
jne
dec
mov
lea
adc
fsts
mov
mov
mov
push
or
push
test
pop
pop
les
ja
mov
loop
movsl
jbe
test
xlat
cmp
ficoms
dec
mov
ret
or
adc
cmp
or
and
je
std
out
mov
adc
xchg
mov
sbb
and
mov
and
in
notb
xchg
loopne
aas
lods
lods
jae
xchg
add
push
out
shll
xor
adc
mov
mov
test
jg
adc
jl
pop
aam
jo
aaa
mov
repnz
andl
pop
pop
flds
xor
lret
shl
sub
icebp
and
leave
xchg
jl
shlb
mov
mov
out
push
in
cltd
aaa
mov
fidivs
aaa
jns
aas
lea
je
cwtl
sbb
jge
insb
adc
das
push
mov
mov
sbb
fs
leave
pop
icebp
adc
repnz
push
push
fdivrl
pop
adc
cmp
xchg
mov
mov
xchg
pop
cmc
pop
hlt
pop
iret
sbb
cld
jo
jmp
nop
xor
and
mov
xor
ret
arpl
mov
mov
imul
and
ret
es
push
sbb
or
movsl
sahf
cmpsl
test
xchg
icebp
push
pop
mov
pop
pop
aad
cmp
push
cmp
mov
repz
adc
adc
pop
aaa
adc
out
insb
repz
sbb
sbb
ds
mov
push
pop
in
or
adc
clc
ret
push
push
jne
mov
lret
xchg
adc
pop
inc
cmp
push
xchg
mov
xchg
test
jg
lcall
inc
cmpsb
lock
push
cmp
push
lods
mov
jg
mov
shl
and
pop
sbb
jge
fisttps
adc
test
adc
or
cmpsl
lock
daa
push
fists
and
mov
and
scas
sub
repnz
pop
add
lock
int3
push
fs
ret
mov
outsl
jo
daa
hlt
popf
fdiv
and
addr16
inc
or
cmpl
test
jle
out
mov
icebp
pop
hlt
cmp
xor
fs
add
mov
xor
sbb
and
pop
dec
aaa
adc
mov
out
fstl
push
out
sbb
sbb
mov
mov
cmp
leave
sarb
or
and
mov
cmp
lea
cwtl
pop
add
leave
pop
stos
mov
adc
jbe
stos
and
xor
lret
mov
mov
xor
mov
xor
clc
xchg
hlt
xor
aad
out
movsl
int
xor
dec
jno
sub
aaa
jb
and
pushf
das
mov
fistl
ljmp
mov
test
divb
negb
push
stos
data16
data16
add
xchg
pushf
lods
pop
push
cmpsl
xor
adc
cmp
lea
mov
xchg
cmp
push
sub
loopne
mov
pop
xchg
fisubrl
push
fldt
jl
mov
mov
adc
hlt
jnp
or
test
cmp
orl
dec
dec
je
xchg
mov
movsl
sbb
jo
and
dec
stos
test
dec
rcrb
lahf
jo
gs
out
mov
ret
cmovbe
xchg
stos
xchg
xor
out
repnz
pop
icebp
ja
popa
sbb
daa
and
fld
mov
aaa
lret
cmpsb
movsl
xchg
pop
sarb
les
add
sub
mov
and
xchg
or
pop
mov
mov
dec
xchg
out
lock
jg
lods
sti
push
push
rcrb
push
pop
add
mov
inc
ds
xchg
jnp
jae
xlat
loope
sub
loop
clc
adc
cmp
cmpsl
mov
mov
aad
out
adc
jle
adc
outsb
ja
pop
inc
aas
or
stc
test
push
leave
xor
aad
mov
mov
hlt
xchg
jle
mov
mov
stos
sub
hlt
xor
fucom
pushf
movsl
push
rcll
and
or
pop
sbb
mov
lea
loope
and
jne
cmpsl
cltd
adc
cmp
jmp
gs
scas
push
add
xchg
push
lods
add
sbb
dec
insb
cmp
imul
daa
iret
or
in
stc
aad
mov
gs
mov
and
int3
mov
shlb
orb
call
in
mov
cmp
inc
sarb
xchg
xchg
mov
pop
mov
push
pushf
sub
push
sti
and
in
jno
cltd
repnz
xchg
inc
jnp
cmp
jnp
jnp
dec
cmp
fcoml
adc
sub
mov
jmp
aas
cmp
add
lahf
cwtl
pop
adc
sub
nop
repz
imul
or
cmpsb
and
cwtl
scas
add
cltd
push
pusha
push
mov
aaa
lds
adc
dec
cwtl
xor
fisttps
hlt
xchg
shl
cmp
push
and
outsl
add
rclb
inc
cli
or
aaa
jmp
fsts
out
add
in
sub
sbb
adc
fs
inc
nop
push
fwait
int
pop
cld
das
sbb
mov
imul
pop
push
js
lcall
cli
subl
pop
push
inc
shr
mov
mov
sbb
int
ds
fisubs
out
inc
xchg
sbb
and
fwait
cwtl
shll
dec
pop
cs
dec
rolb
inc
and
sti
add
add
mov
popa
and
lahf
mov
push
cmp
sarb
lods
sahf
cmc
jne
cmp
jae
cmp
insb
cltd
in
push
pop
fsubl
out
hlt
push
add
or
or
jmp
shlb
in
jbe
aas
out
xchg
mov
lea
xchg
jge
stos
push
xchg
ret
xchg
mov
pop
repz
and
fildll
xchg
repz
push
cmp
jle
gs
push
pop
pop
std
enter
shrb
je
inc
sbb
daa
loope
test
cmp
push
xlat
pop
shrl
pop
out
hlt
stos
mov
scas
mov
enter
fists
movsl
cli
int3
test
sbb
pushf
icebp
mul
push
out
hlt
adc
in
pop
addl
and
mov
repnz
mov
mov
jmp
xlat
xor
push
jge
std
cmp
sbb
jle
push
jae
adc
add
adc
scas
push
fwait
out
mov
cmp
cmp
cmc
push
sub
fimull
mov
aam
and
pusha
mov
mov
pop
jmp
push
xchg
adc
cmp
in
xor
dec
movsb
jns
in
movsb
stos
aam
fwait
outsl
repnz
cmp
cld
fmulp
je
insb
dec
js
mov
fldcw
xchg
addr16
das
pop
mov
push
hlt
mov
aas
lret
pop
inc
cmp
rcll
pop
pop
inc
sahf
outsl
lods
in
scas
in
aam
mov
mov
add
cs
jo
dec
enter
adc
ja
jns
xchg
mov
sbb
and
add
fimuls
adc
xchg
iret
add
pop
call
les
movsl
and
outsb
dec
and
sar
sbb
hlt
push
out
add
or
jp
xchg
fcoms
sbb
add
cmp
xchg
or
and
mov
pusha
or
fst
jmp
les
loop
xchg
mov
and
mov
aam
ljmp
jge
mov
idivl
sbb
mov
inc
mov
int
gs
adc
mov
xor
mov
cmp
and
loope
add
and
mull
sahf
jmp
and
icebp
sbb
jae
xchg
sub
dec
mov
add
dec
adc
pop
or
and
rcl
pop
sub
inc
data16
fisttpl
data16
sahf
int3
xorl
and
punpcklbw
cwtl
pop
loop
lods
or
mov
imul
insl
adc
jg
jp
dec
xor
aam
mov
push
and
sub
or
or
iret
fisttps
sub
mov
push
mov
hlt
rcrb
and
repnz
adc
xor
icebp
and
adc
addl
mov
int
push
pop
jmp
aam
ja
sahf
xchg
or
sub
test
cwtl
mov
stos
stc
dec
out
outsb
mov
add
mov
pop
dec
push
cmp
mov
sub
mov
gs
in
inc
mov
mov
pop
mov
jl
lret
stc
hlt
sbb
mov
sahf
pushf
and
mov
sub
out
aam
into
push
pop
das
pop
mov
adc
or
push
mov
push
test
pop
stc
adc
add
imul
add
or
fbstp
sbb
xchg
adc
cltd
mov
pop
loope
addr16
adc
int3
cltd
dec
or
movsb
adc
pop
xchg
repz
hlt
push
imul
mov
popa
and
ss
sub
fcoms
cli
mov
mov
fmuls
imul
subb
or
js
pop
push
cmp
xor
xchg
mov
scas
idivl
dec
lahf
stos
xor
mov
xor
jecxz
inc
aaa
mov
fiaddl
stc
fidivrl
or
mov
scas
inc
adc
jl
push
sub
lea
js
lock
je
es
aaa
mov
xor
mov
rol
loopne
xor
and
int
fnstcw
sbb
outsl
pop
icebp
mov
and
int3
imul
xchg
cmp
pop
add
or
dec
mov
jnp
cmp
mov
and
insl
pop
mov
test
jmp
xor
jecxz
cwtl
call
xor
push
xor
and
fiadds
je
pushf
iret
sub
lods
das
pop
xor
xor
jg
xchg
jge
call
scas
scas
scas
popa
jmp
xor
jg
dec
add
xchg
xor
jne
xchg
mov
icebp
leave
repnz
cmp
mov
xchg
pop
adc
and
or
pop
lods
dec
leave
xor
jbe
ljmp
xchg
ja
repz
aaa
fisttps
add
mov
mov
mov
push
icebp
and
add
xchg
loope
sbb
push
shl
adc
fbstp
adc
or
fisttpll
in
dec
leave
jae
sbb
sub
das
adc
test
jge
push
sbb
adc
mov
imul
fwait
movsl
cmp
add
sbb
cmp
inc
popf
push
dec
and
iret
and
pushf
sbb
mov
mov
mov
fld
mov
dec
xchg
adc
xchg
jg
data16
sar
xchg
inc
jl
mov
sbb
popf
sbb
dec
and
addb
adc
xchg
and
repnz
cmp
mov
stos
js
mov
fwait
jg
cli
std
push
sbb
push
sahf
bound
pop
dec
mov
jp
xchg
in
je
xchg
mov
dec
cmpsl
jb
addr16
mov
sbb
popf
mov
repnz
xchg
cmc
adcl
iret
cmpsl
xchg
push
js
mov
rcl
lret
loope
scas
push
mov
sbb
addr16
xlat
enter
xor
insb
subl
push
add
inc
ja
rcrb
ds
out
push
bnd
ficomps
adc
adc
and
aaa
add
stc
in
jecxz
popa
leave
ss
aas
or
push
gs
and
pop
jae
movsl
add
inc
xlat
ret
dec
sbb
xchg
and
test
in
or
lret
inc
clc
xchg
lds
inc
jb
xchg
adc
icebp
adc
mov
pop
cmp
shlb
sbb
imul
clc
fcompl
sarl
or
jle
and
mov
sbb
push
add
call
cmp
es
stc
mov
out
enter
lock
fildl
in
pop
int3
cwtl
sahf
popf
shlb
fstl
mov
fsubrs
sub
outsl
aas
cwtl
mov
push
adc
pop
inc
lahf
pop
dec
and
sbb
push
push
arpl
repz
add
fwait
push
jne
popf
inc
adc
fisttps
dec
pop
repnz
jne
mov
xchg
mov
pop
lods
mov
jb
repnz
fwait
mov
stos
shl
pop
pop
jnp
imul
inc
jl
push
or
iret
xchg
pop
mov
dec
and
push
fsubrs
pushf
loop
bound
je
adc
cs
fstpl
dec
jmp
fcoms
std
test
pusha
aas
gs
mov
sub
fcomps
fnsave
mov
cmp
jmp
fidivrs
in
jb
rcrl
adc
sub
sbb
outsl
hlt
or
nop
adc
int3
add
popf
adc
subb
and
dec
mov
outsl
lret
lea
mov
cs
and
jae
fsubrs
dec
mov
xor
lods
addr16
xchg
scas
stos
shrl
adc
xchg
std
mov
cmp
sub
ret
imul
hlt
out
outsl
pop
push
mov
dec
xor
pop
inc
or
mov
loope
repz
push
xorl
sbb
and
loope,pn
adc
jl
rorl
push
and
cmp
cmp
adc
lret
scas
stos
mov
push
pop
or
xchg
pusha
scas
pop
dec
dec
xor
loope
cmp
inc
xor
inc
or
cmp
sti
pushw
mov
mov
mov
fnstsw
sbb
hlt
lahf
orl
mov
test
roll
pop
push
cmp
xchg
fists
enter
call
cmpsl
fdiv
int3
xor
popf
mov
shlb
sbb
pop
adc
call
jg
cmp
lods
jae
addr16
stc
xor
sub
mov
adc
lds
je
xorl
scas
cmpsl
leave
ja
push
lods
call
xchg
fwait
jb
leave
push
cmpsl
inc
pop
mov
or
mov
mov
in
pop
mov
and
ret
scas
jb
fcmovbe
dec
and
cmp
cld
mov
add
or
pop
dec
pop
negl
xor
xor
aad
jb
pop
xchg
test
into
push
pushf
push
imul
or
pop
or
cs
jae
sub
push
inc
cmp
test
push
adc
push
fcomp
sbb
xchg
or
and
outsl
fsubp
add
inc
mov
mov
jae
mov
lret
or
test
shlb
jmp
adc
imulb
fsubs
fsts
cmp
pop
and
xor
je
pop
and
and
test
icebp
and
add
sub
mov
lock
jle
dec
sub
xchg
push
adc
or
icebp
add
dec
dec
inc
lea
mov
mov
xchg
test
popf
cli
jae
inc
cmp
shlb
adc
iret
mov
xor
jns
xchg
mov
lea
outsb
add
jle
clc
xor
mov
mov
cmp
push
not
jb
lock
adc
cmp
call
cmova
aam
cmpsl
cmpsb
or
cmp
xchg
jo
into
cmp
lock
mov
sub
jl
and
iret
imul
outsl
push
repnz
pop
fbstp
jae
cmpsb
shlb
push
icebp
mov
repnz
popf
xlat
ds
bound
inc
and
mov
pop
sahf
enter
adcl
das
adc
test
leave
pop
adc
fs
or
imul
icebp
aam
scas
mov
push
test
out
mov
mov
jae
ret
cmp
push
pop
lret
xor
jle
add
test
shll
shr
cld
or
sub
xor
adc
sti
push
repnz
mov
fsubp
sbb
and
adc
bound
cs
mov
rorb
insl
jno
mov
stos
sbb
sub
repnz
xchg
out
inc
xor
imull
adc
inc
mov
or
jge
in
fwait
xor
and
sub
jecxz
adc
mov
iret
ss
dec
mov
mov
mov
inc
xor
mov
xor
push
jo
sahf
pop
or
sti
sbb
add
insl
rcrb
sbb
adc
xchg
imul
mov
aaa
xor
popf
inc
enter
jb
sahf
jg
jnp
cmp
mov
sub
adc
cmp
rcr
lds
adc
sti
fsubrs
popf
cmp
outsl
xor
inc
xchg
xor
loopne
and
testb
adc
xor
sti
lock
cs
add
cmpsb
push
outsb
cld
xchg
pop
inc
loopne
stc
xchg
cmpps
adc
lahf
jae
push
inc
mov
rep
push
jge
xchg
inc
les
xor
faddl
sbb
and
or
arpl
push
sub
andl
fdivrs
jmp
mov
push
xchg
add
inc
loopne
out
or
mov
sbb
shlb
lret
lock
bound
clc
dec
xchg
dec
es
push
aaa
adc
mov
andb
add
sbb
cs
adc
clc
adc
sbb
cwtl
popa
scas
jb
lods
outsl
dec
test
push
incb
push
dec
or
test
es
lds
test
subl
stos
inc
testl
push
mov
pop
jns
jae
fwait
mov
xor
pop
call
jae
outsb
repnz
lcall
sbb
mov
in
push
sub
test
add
pop
sub
mov
icebp
cmp
sub
inc
cmp
imul
data16
xchg
lods
push
push
inc
iret
mov
mov
fdivs
enter
push
and
es
int3
lea
xor
cmp
mov
add
mov
jp
adc
fcoml
push
jae
pop
sbb
mov
mov
xchg
inc
inc
mov
adc
xor
sub
and
in
jmp
jp
inc
fwait
inc
les
arpl
in
test
jecxz
push
add
cmpsb
xchg
jbe
cmc
icebp
aaa
and
movsl
or
dec
repz
mov
mov
adc
sahf
repnz
inc
stos
in
adc
mov
mov
jp
xchg
and
and
adc
sub
iret
mov
xor
js
push
xchg
push
movups
enter
fwait
sub
sti
lds
jnp
add
and
adc
push
mov
add
and
pop
testb
xor
mov
add
movsl
out
shlb
pop
mov
aaa
mov
das
jge
or
test
or
lcall
xchg
sbb
cmp
adc
sbb
sub
cmp
adc
adc
pop
and
xchg
sbb
lea
pop
xor
xor
jae
mov
and
add
mov
push
adc
or
mov
mov
mov
rol
cs
and
mov
or
cmp
push
enter
mov
out
cmp
mov
sbb
movl
push
out
adc
xor
pop
fs
cmc
sahf
or
call
imul
sti
cmp
mov
sub
jae
divl
repnz
push
popa
cltd
repnz
adc
shl
rcll
sub
sbb
xchg
rclb
or
clc
add
in
mov
adc
cmpsl
sbb
mov
xor
shl
fwait
or
jg
xchg
test
xchg
fisubrs
jle
loope
xchg
adc
or
pop
gs
push
hlt
pop
adc
icebp
and
icebp
mov
dec
ja
mov
push
jl
mov
xchg
in
fs
shrl
mov
ret
jg
rclb
inc
aam
sahf
xchg
repnz
mov
xchg
dec
mov
adc
int3
es
push
adc
xor
cli
and
ljmp
shrl
push
mov
sbb
adc
in
and
bound
mov
or
jb
xchg
pop
sti
mov
adc
movb
lcall
out
mov
stc
cmc
rclb
xchg
fbld
in
add
mov
rcl
data16
in
arpl
xchg
or
leave
mov
add
xchg
push
sub
popa
mov
aam
movsl
ds
xchg
scas
cwtl
inc
out
mov
mov
div
adcl
pop
sbb
icebp
sub
push
repnz
adc
cmpsb
shl
leave
cmp
and
fwait
adc
or
sub
std
js
stc
lcall
xchg
mov
pushf
data16
es
fwait
sbb
cltd
sub
xorb
push
das
and
add
sbb
adc
jae
jl
and
dec
shlb
data16
adc
pop
cmp
lret
mov
scas
mov
mov
xor
rcr
fsubr
iret
sti
or
jge
xchg
imul
ret
pop
cld
sti
ljmp
inc
sbb
cmp
xchg
jae
sub
pop
lds
inc
and
movsb
test
pop
popf
hlt
mov
mov
call
or
je
mov
jle,pt
lcall
rorl
bound
nop
adc
jp
idivb
fdivr
dec
lds
inc
rclb
cmp
sahf
adc
dec
popa
adc
shrb
iret
hlt
out
dec
or
and
fidivl
mov
loope
mov
mov
hlt
out
lcall
jecxz
frstor
xchg
xor
push
xchg
pushl
mov
add
shrb
fs
inc
jne
aaa
inc
in
and
mov
outsl
add
filds
jg
psraw
stc
cmpsb
nop
xchg
inc
push
fidivs
cmp
fs
sbb
mov
pop
xor
cmp
dec
out
xchg
shll
sbb
xchg
stc
push
add
pushl
ret
scas
dec
mov
pop
sub
ja
lods
pop
sbb
mov
push
pop
adc
mov
mov
add
shlb
lea
xor
push
sti
jp
popa
lods
movsl
fsubs
dec
add
xor
mov
mov
sbb
fildll
subb
adc
pop
and
cmc
subl
jmp
fcoms
rorl
sbb
xchg
scas
pop
dec
dec
sbb
mov
cmp
in
dec
cli
lcall
repz
hlt
call
cltd
pusha
incb
push
outsl
cwtl
out
sahf
jle
pop
fistl
fcmovnb
aam
and
loope
stos
mov
fwait
subb
add
adc
enter
mov
and
repnz
dec
pop
rcrb
imul
popa
add
leave
jbe
lods
jae
mov
pop
pushf
mov
ss
or
cmc
fnstenv
pop
sbbb
dec
push
sbb
add
add
enter
mov
lret
fcomps
add
xor
aam
sbb
add
jb
fwait
jb
inc
fcoml
out
sbb
xchg
pop
hlt
sub
scas
mov
jge
pop
loop
push
sahf
stos
js
and
adc
or
push
sbb
jmp
and
lds
pop
and
sbb
sbb
pushf
in
or
mov
das
cmpsb
and
scas
mov
add
sbb
xchg
and
xor
or
mov
jp
cs
mov
mov
or
or
inc
negb
popl
movsl
outsb
adc
cld
xchg
mov
or
clc
cs
xchg
ret
inc
lods
and
repnz
cwtl
and
xchg
xchg
loopne
lret
in
and
sbb
fmull
push
mov
or
sbb
adc
adc
rorl
call
xor
pushl
xor
test
in
xor
pop
sbb
aam
sbb
int
rcrb
negl
aad
or
jno
xor
negl
test
xor
push
sbb
and
or
in
int
int3
mov
fistps
sbb
sbb
adc
ficomps
and
mov
out
scas
mov
lahf
adc
sbb
addr16
lcall
das
int3
mov
mov
fcompl
xchg
mov
xchg
mov
sbbb
lcall
sbb
popf
popf
lods
xchg
in
adc
or
and
inc
dec
add
movsb
sbb
xchg
int
mov
adc
jmp
addr16
sbb
jns
mov
pop
sbb
pop
or
push
mov
test
movsl
das
cwtl
and
loopne
cwtl
mov
adc
ficompl
fmull
in
in
mov
sbb
lcall
or
int
int3
sbb
mov
or
push
mov
jns
mov
lea
push
or
cltd
popf
sbb
cwtl
and
sbb
sbb
rolb
xchg
jbe
adc
sarb
sarl
dec
jmp
mov
mov
sbb
fdivr
push
fldcw
or
hlt
outsb
mov
scas
xor
xor
and
mov
sahf
jae
mov
or
sbb
loop
sbb
pop
pop
stos
loop
cmp
push
adc
leave
dec
and
and
push
jg
or
in
mov
int
cwtl
loope
cs
and
lods
pop
fdivrs
xchg
mov
sti
lahf
cmp
jecxz
and
daa
pop
sbb
jne
xchg
adc
inc
xor
xchg
sbb
out
mov
hlt
push
outsl
loope
inc
call
aaa
sub
outsb
push
les
loope
std
aas
aaa
sbb
jl
adc
push
xor
jle
testb
and
mov
adc
adc
aam
out
insl
push
mov
jae
outsl
mov
cmpb
mov
movsb
lea
push
fdivp
out
mov
repz
sahf
cs
inc
add
add
mov
loopne
push
adc
or
out
repz
out
aaa
cwtl
in
repnz
or
mov
xchg
stos
cld
mov
xchg
jl
dec
fadds
xchg
loop
sar
push
xchg
or
imul
push
mov
call
imul
pushf
in
bnd
insl
in
stos
dec
ds
mov
adc
sahf
mov
push
lds
or
rcrl
sbb
adc
jmp
cs
mov
push
adc
xchg
inc
mov
int3
iret
sahf
adc
and
ja
add
or
jbe
and
shrb
lea
sbb
movsb
cmp
mov
rorl
inc
mov
fisubl
pop
mov
and
cmpsb
loop
and
dec
cltd
icebp
ret
flds
in
addr16
or
and
out
sbb
fnstsw
cli
jnp
cmp
mov
outsl
lcall
xchg
push
and
insl
ja
cmp
mov
dec
out
insl
xchg
call
mov
das
push
testl
pop
into
jmp
repnz
nop
push
xchg
call
mov
outsl
and
scas
adc
pop
clc
pop
or
retw
jb
shr
inc
and
icebp
sbb
adc
pop
arpl
and
jmp
adc
and
sub
sahf
mov
dec
jns
arpl
outsb
or
movl
andl
sub
pop
ljmp
pop
push
mov
xchg
test
and
jmp
notl
les
pushf
repz
in
and
push
mov
pop
outsb
cmpsl
sbb
shrl
push
icebp
xchg
jae
or
es
xchg
out
repnz
add
xor
sbbb
lock
add
push
clc
hlt
dec
or
jl
loope
scas
hlt
xchg
in
xchg
push
and
xchg
sti
iret
ja
adc
xchg
adc
mov
sbb
mov
lods
adc
or
test
pop
cld
mov
out
or
in
mov
adc
mov
inc
push
rorb
sbb
inc
adc
addl
jp
imul
mov
and
int
int3
hlt
sbb
mov
xchg
adc
xchg
repz
lret
add
push
lcall
dec
out
mov
pop
jmp
push
jmp
test
or
pmullw
push
jmp
mov
xchg
adc
mov
aad
push
shrb
fstps
adc
enter
icebp
ror
imul
adc
jb
mov
lret
and
pop
lcall
xor
subb
aaa
cs
mov
add
jno
xchg
mov
push
xchg
lock
push
jno
lret
adc
popa
adc
adc
pop
add
ficomps
push
clc
sub
xchg
mov
cmp
sub
fldt
sub
cmpsb
mov
mov
jge
lods
lods
mov
jb
or
inc
adc
push
imul
shr
pop
and
jne
rclb
xchg
pop
mull
iret
cli
dec
pop
mov
into
jmp
sub
mov
pop
shrb
fsts
mov
or
mov
rcrb
jmp
fcmovnu
mov
xchg
push
jg
lahf
gs
test
outsl
imul
xor
daa
popa
or
lock
adc
orb
cmc
add
xor
and
sahf
ja
mov
js
loopne
bound
in
rorb
dec
push
xchg
push
mov
adc
test
dec
inc
dec
adc
jbe
pop
cltd
movsl
adc
jge
fistps
ret
les
xchg
mov
and
in
dec
push
arpl
xlat
or
adc
js
xchg
outsl
sahf
or
loope
out
mov
xlat
pop
mov
mov
les
lods
mov
adc
cmpsl
loope
xchg
repnz
mov
or
movsl
subl
aam
scas
in
stos
lock
cmpl
or
xor
in
outsl
xor
shll
inc
clc
xchg
fsubrs
clc
xchg
cli
mov
call
ja
cmc
xchg
hlt
sub
xor
mov
jle
insb
sub
dec
loope
add
pop
or
sbb
rcrb
push
mov
adc
dec
test
adc
jge
pop
pop
and
hlt
cmp
faddl
push
sahf
and
or
call
and
xchg
mov
out
and
push
or
or
and
lods
pusha
cli
jo
pop
sbb
mov
sahf
add
sub
shlb
sub
and
int3
inc
mov
cmc
dec
fsubs
adc
pop
push
or
and
insl
and
cmp
push
scas
sbbb
scas
insl
jb
test
dec
adc
loope
add
fisubrs
push
iret
or
repz
xchg
add
or
pop
es
enter
dec
push
push
add
xchg
imul
shl
loop
fisubs
add
mov
jae
lahf
test
sbb
or
cs
subb
xlat
insl
addr16
pop
and
push
xor
fwait
pushf
or
dec
sbbb
arpl
fdivl
jge
cs
jecxz
out
popa
aam
repz
push
or
out
ds
shrl
subb
inc
imul
aas
hlt
repz
dec
adc
dec
aad
rcl
rorl
pop
fstps
test
push
std
mov
and
in
add
fsubs
call
push
enter
sbb
sarb
leave
lret
inc
leave
mov
adc
mov
enter
xor
sahf
repnz
xchg
mov
hlt
push
mov
sub
jb
sar
hlt
adc
stos
or
mov
xor
push
cmp
shlb
cmp
popa
and
add
in
xchg
fsubrl
je
cmpl
insb
and
mov
jns
xchg
cli
not
shrl
xor
sarb
lds
clc
xchg
lcall
sbb
rcl
hlt
push
insl
pusha
adc
and
lock
test
es
xlat
sbb
repz
jg
push
clc
aaa
pushf
push
sahf
xor
cld
arpl
mov
push
sbb
and
mov
and
mov
add
cmp
or
pop
cmp
xchg
cmp
adc
adc
push
shll
jle
pop
dec
iret
icebp
xchg
sub
dec
fucomip
adc
inc
xlat
sbb
int
add
or
stos
out
jecxz
and
adc
into
shlb
xor
cwtl
or
dec
sbb
mov
xchg
jno
xchg
das
and
lods
add
pop
dec
sub
jge
pop
or
in
test
clc
dec
fstl
aad
fistps
ljmp
cmc
sbbl
dec
ja
hlt
push
cmpsl
pop
out
bswap
repz
push
stc
dec
ja
sbb
push
xor
dec
adc
add
cmc
sub
pop
xor
and
lods
aaa
mov
cmp
cld
pop
out
mov
hlt
sbb
push
add
jb
shl
mov
inc
mov
adc
mov
add
sbb
iret
hlt
mov
pop
pop
rep
push
and
mov
xchg
bound
cltd
hlt
xor
xor
stos
popf
ds
mov
icebp
adc
push
or
and
je
cmp
fcoms
hlt
rcl
imulb
and
or
xchg
inc
ja
rorl
aad
and
jp
sbb
frstor
call
repz
mov
adc
xor
adc
jne
sbb
push
stos
jae
jecxz
mov
sbb
mov
mov
ret
sbb
cwtl
idivl
aad
fisttpll
adc
push
addl
jne
nop
adc
inc
mov
and
iret
aam
adc
clc
sbb
aas
mov
mov
mov
ret
fsts
scas
out
popa
add
cltd
inc
addr16
adc
mov
popf
aaa
mul
in
sub
rcll
out
jl
icebp
and
push
push
mov
mov
fmull
jl
les
add
sbb
and
loope
jbe
or
lret
inc
loop
and
cs
xor
pop
arpl
pop
push
sub
push
iret
xor
xchg
fbstp
movsb
adc
sub
xorl
call
xchg
xor
sbb
or
push
lahf
rclb
insb
xor
sub
adc
push
stos
test
mov
sbb
cltd
cmp
sub
xor
adc
jl
out
mov
push
fcmovnbe
idivb
mov
cmp
xor
push
lea
and
and
lahf
mov
mov
clc
sbb
cmpsl
adc
mov
test
mov
mov
adc
rcr
and
jl
or
pop
add
push
mov
subl
es
fiadds
jl
out
sbb
adc
jp
mov
pushl
or
push
jae
mov
inc
push
xor
adc
outsb
les
inc
jge
out
faddl
insb
hlt
cmp
mov
sub
sbb
in
cs
pop
repz
cmp
jle
or
daa
add
add
mov
and
jl
sbbl
adc
dec
mov
and
setno
push
adc
mov
scas
mov
loope
jae
ljmp
out
and
sbb
popf
cld
lcall
dec
push
lods
adc
dec
popa
sub
das
dec
aad
pop
and
shrb
stc
test
push
sub
jle
movsb
sub
mov
xor
dec
loop
push
aam
test
xchg
jge
lret
push
scas
mov
and
xchg
aas
and
mov
xchg
mov
pop
mov
and
out
adc
out
mov
adc
jge
pop
xchg
mov
jle
mov
adc
adc
mov
data16
pop
lea
mov
dec
adc
jb
jnp
rclb
sbb
test
mov
pop
clc
or
loope
cli
call
xchg
es
jge
cmp
pop
movsb
fldcw
loop
outsl
fadds
scas
mov
xchg
es
imul
xchg
bnd
cli
inc
and
repnz
dec
cmpsb
mov
sbb
fwait
add
scas
pop
xchg
add
ss
fistps
in
bound
and
cs
inc
mov
cld
xor
xor
mov
fldl
sbb
and
cli
cmpsl
nop
push
inc
rolb
sub
mov
push
sbb
adc
jl
aas
out
into
imul
xlat
adc
pushf
add
push
mov
jbe
fs
adc
aaa
lret
mov
mov
ss
fwait
pop
pop
sbb
dec
mov
and
lahf
pop
xor
push
dec
insl
loopne
fucomi
ds
xlat
mov
cmp
inc
std
xor
adc
xchg
mov
mov
xor
adc
jno
adc
sub
sti
push
xchg
stos
mov
roll
jo
cmpsl
in
mov
sahf
jmp
lock
pop
sbbb
dec
rcl
test
cmpsb
pop
jmp
repnz
adc
in
arpl
push
pusha
mov
scas
cmp
push
sti
add
and
xorl
push
pop
repnz
cmp
out
cld
in
jle
mov
imulb
jne
fwait
or
jno
or
push
xchg
out
mov
gs
sub
aam
add
ja
data16
dec
repnz
inc
or
aad
mov
add
xor
mov
jmp
xchg
neg
cmp
stc
bound
push
xchg
sbb
test
mov
mov
push
xor
jns
pop
and
cmp
jmp
hlt
decl
iret
jnp
mov
xchg
dec
add
add
dec
sub
mov
rcrl
push
lahf
es
cs
sub
pushf
xchg
and
sub
arpl
leave
dec
arpl
insl
push
or
xchg
dec
and
scas
add
repz
lods
fisubl
into
mov
mov
and
cltd
cli
xor
cmp
fsubp
inc
movl
mov
or
clc
repnz
mov
adc
and
lods
push
jae
cmp
mov
out
xor
test
push
stos
aam
sub
jp
bound
lret
xchg
out
mov
call
mov
ret
rol
jo
push
dec
ds
dec
nop
xor
dec
push
icebp
shll
ret
sbb
mov
imul
adc
cli
mov
into
scas
xchg
jno
loop
adcl
fs
out
push
std
push
sbb
sbb
xor
mov
call
aas
cltd
jle
ljmp
jae
jne
scas
in
mov
iret
and
sub
add
ss
adc
push
aaa
into
xorl
fildll
fdivrs
or
popa
stos
test
lods
pop
adc
jmp
popa
and
adc
dec
icebp
adc
loope
dec
pop
jle
test
or
adc
call
push
hlt
jno
xchg
jno
sub
and
icebp
push
sub
adc
pop
movsl
dec
mov
addr16
iret
jns
lds
int
dec
xchg
sub
je
cmp
and
test
int3
mov
adcb
es
lea
push
jp
sti
out
mov
add
les
xlat
arpl
cwtl
inc
rolb
gs
xlat
push
push
ljmp
adc
mov
and
inc
flds
sbb
hlt
cmp
out
mov
leave
mov
or
popa
add
mov
outsl
xchg
dec
mov
rcl
fwait
push
pop
and
inc
pop
xchg
mov
push
push
xchg
jmp
xor
jle
call
les
hlt
xor
flds
dec
pop
movsl
dec
pop
push
push
cltd
xchg
and
sub
push
mov
push
cmp
call
imul
add
or
into
adcl
dec
sub
mov
mov
outsl
mov
in
jmp
pop
adc
xor
jmp
leave
pop
pusha
and
sub
adc
mov
rcl
jnp
insl
cltd
call
je
in
dec
mov
push
add
push
in
xor
cmp
mov
ja
xchg
mov
dec
xchg
and
hlt
lods
rolb
jp
fsubp
add
pop
mov
sbb
hlt
fwait
jo
test
or
inc
sbb
cwtl
pop
sub
cmp
xchg
xchg
or
push
shlb
loop
mov
cwtl
iret
or
add
mov
fwait
loop
scas
fsubr
call
pop
ss
adc
xor
pop
ret
aas
cld
cld
in
mov
je
fwait
adc
lea
and
mov
jne
pop
pop
push
pop
jle
inc
and
jns
sbb
inc
mov
adc
cmpsl
or
and
out
xchg
sbb
outsb
cltd
adc
dec
outsl
clc
loop
xchg
cmp
icebp
int
in
test
fcmovu
es
lret
imul
outsl
push
push
into
fnstsw
jle
add
mov
fbstp
mov
pop
jle
mov
leave
mov
sbb
mov
mov
call
or
adc
scas
adc
xchg
jecxz
cmp
xor
sub
dec
jns
sarl
leave
movsl
loop
jae
adc
filds
jecxz
rcrb
jno
jo
jb
and
jle
mov
mov
icebp
push
rolb
dec
jae
test
out
push
das
add
pop
cmp
cmp
add
mov
mov
jno
xchg
mov
and
push
inc
xchg
fcomip
sub
mov
sbb
push
xchg
test
test
std
or
xor
popf
ljmp
push
addl
cmp
adc
push
dec
icebp
jecxz
iret
inc
aam
adc
inc
jmp
adc
add
adc
jbe
mov
ret
leave
sub
and
sbb
or
jg
clc
test
test
mov
push
inc
pop
aaa
or
cwtl
hlt
fidivrs
add
and
leave
cmp
adc
inc
ret
jge
push
jle
add
imul
cs
pop
push
jp
fisttpll
popf
pop
mov
cmpsb
subl
stc
jbe
or
push
mov
sbb
in
add
stos
sbb
dec
sub
bound
add
xor
mov
dec
and
shll
test
xor
jns
rclb
xorl
pop
jle
mov
outsb
mov
xchg
cmp
hlt
inc
int
in
cmp
ja
push
mov
cmp
imull
in
into
imull
mov
cltd
repnz
lods
xor
push
jge
jne
repz
or
cmp
scas
sbb
add
push
mov
jno
mov
out
call
cmp
push
push
adc
pop
xorl
in
rcl
jle
das
clc
inc
fisttpll
jge
fwait
leave
cmp
jnp
sbb
js
std
add
lahf
bnd
outsb
clc
decl
mov
sbb
repnz
out
push
int
out
shll
mov
ror
aam
adc
lret
mov
and
scas
hlt
mov
aam
in
pop
icebp
push
call
int3
pop
out
hlt
xchg
jmp
or
adc
test
and
mov
dec
mov
sbb
das
adc
add
out
sbb
fsubrs
xor
xchg
int
mov
push
in
mov
xor
rolb
cmp
mov
fstpt
stos
mov
fwait
adcb
dec
adc
pop
inc
inc
mov
cmp
rcrb
mov
push
out
mov
fidivrs
iret
lea
inc
cmp
jmp
sbb
jle
push
inc
sub
adc
jno
xchg
adc
dec
and
loop
rcl
mov
gs
daa
and
lds
test
aad
popf
adc
ss
jge
aam
cs
cwtl
and
sub
movsl
push
push
push
xchg
xchg
leave
imul
int
push
adc
iret
adc
ljmp
pop
pop
cmp
cltd
mov
mov
sub
mov
sbb
cmp
hlt
pop
sbb
scas
or
and
jg
jne
sbb
in
pop
inc
jg
xor
stos
ja
and
jg
xor
cmpsl
fdivl
pop
rcrb
hlt
jbe
adc
push
jbe
cmp
in
stos
pop
or
pop
loopne
test
sub
shlb
sahf
div
mov
outsl
gs
push
or
jmp
jb
cmovnp
push
sbb
repnz
aad
mov
mov
scas
jno
test
icebp
in
sub
pop
pop
hlt
ret
sarb
add
adc
mov
inc
fcmovnbe
iret
push
aam
lock
xchg
ror
sbb
ret
mov
cmp
and
push
push
jne
sarl
xor
addr16
inc
adc
stos
mov
popf
mov
xor
inc
xchg
cmp
out
subl
pop
lcall
insb
xchg
push
mov
or
out
adc
shlb
and
stos
mov
mov
or
mov
add
pop
fs
jmp
dec
push
aad
cmp
cmc
movaps
gs
push
jg
dec
insb
inc
mov
xor
arpl
pop
pop
mov
loope
and
or
sbb
subb
adc
jae
lea
and
mov
and
jae
push
outsl
mov
push
push
jl
lea
ljmp
mov
jae
xchg
negl
cmp
ljmp
out
jb
loope
out
outsb
sti
mov
movb
pusha
mov
push
mov
mov
aam
sbb
push
lea
cmp
and
cmp
mov
fsubs
lret
xor
insb
or
stos
push
sub
bound
add
imul
and
xchg
push
mov
fisubrs
adc
and
cmpsb
dec
xlat
stos
call
in
and
mov
cwtl
ja
lcall
or
mov
xchg
sub
cs
jmp
pop
ljmp
out
dec
inc
ret
and
stos
cmpb
inc
push
adc
jmp
xorl
adc
in
mov
xchg
dec
pop
and
adc
sbb
scas
jae
or
sbb
add
sbb
mov
mov
cmp
stc
cmp
sub
clc
jo
movb
insl
outsb
sbbl
or
cltd
shll
hlt
push
sub
push
pop
in
push
or
notb
pop
dec
jns
inc
lret
aad
jne
mov
sbb
mov
mov
rcr
hlt
lcall
xor
dec
sub
hlt
fidivrs
sahf
and
jp
dec
fbld
in
push
sub
repz
push
dec
adcb
push
xchg
xchg
inc
dec
jmp
sub
stos
dec
cltd
jnp
pop
mov
xchg
sub
pop
adc
ds
ds
push
push
out
mov
dec
fisubs
pop
dec
shrl
push
insb
xchg
cmp
int
scas
push
push
scas
cltd
rorb
adc
sub
pop
pop
pop
push
mov
into
pusha
fisubrs
dec
out
popa
and
xchg
stos
jae
push
xor
lret
mov
push
jle
scas
fsts
and
es
imul
pushf
test
cmpsl
sub
loopne
addr16
test
sub
xor
sub
xor
loopne
aas
arpl
add
fstps
jno
aaa
cmp
add
or
jbe
idivl
adc
cmp
dec
test
jge
push
push
xchg
xlat
sub
adc
cmp
loopne
adc
push
or
xchg
xchg
out
fimuls
add
jne
imul
push
push
pusha
imul
in
mov
jecxz
cwtl
and
or
sahf
repnz
inc
inc
in
push
icebp
push
test
add
loop
lock
sub
adc
cmp
jp
out
movlhps
daa
je
sbb
mov
scas
add
mov
cmp
pusha
scas
les
mov
mov
jae
fmuls
dec
sbb
sbb
and
inc
add
push
lahf
sbb
jmp
mov
pop
cmc
jge
es
movsl
stos
les
addb
xacquire
xor
push
mov
jge
mov
in
roll
stos
fmuls
pop
hlt
cmc
push
ret
pop
subl
inc
add
mov
lea
ret
jge
and
clc
jl
pop
adc
push
ljmpw
pop
addl
scas
adc
push
cwtl
into
stos
push
es
push
lock
lea
loope
pushf
jnp
sti
adcl
fs
jb
and
scas
rorb
stos
es
fisubl
stc
or
stc
xchg
adc
jmp
out
popw
pusha
int3
xlat
cmc
mov
test
bound
sar
cli
xchg
add
push
repnz
mov
clc
pop
ds
popf
aas
movsb
lret
lcall
mov
sahf
push
cltd
and
push
adc
in
or
cmp
add
mov
mov
jae
outsl
lahf
and
or
sbb
mov
add
adc
xchg
xchg
jae
xchg
fnstenv
cmp
dec
nop
daa
inc
in
fs
test
ret
or
mov
ljmp
or
mov
push
dec
aam
and
out
nop
test
call
push
inc
negb
sub
fcmove
dec
sbb
cmp
xchg
outsb
rcll
nop
shrb
pop
xchg
and
push
rol
aam
subb
loopne
fists
pop
and
orb
fwait
mov
pop
and
mov
ds
xchg
and
or
pushf
mov
daa
and
addr16
repnz
adc
cmp
add
outsb
mov
mov
or
jno
enter
mov
dec
adc
xor
xor
and
popa
or
fucomi
mov
mov
xchg
or
mov
and
adc
cld
push
js,pn
inc
add
and
and
pop
sahf
or
addb
test
push
insb
call
ja
mov
jno
jmp
inc
inc
mov
jne
shll
and
jmp
jb
mov
leave
and
mov
insb
xor
xchg
testb
adc
adcb
insl
pushf
mov
out
pop
or
pop
xchg
fld
and
jg
cwtl
sti
and
jge
and
mov
push
adc
dec
dec
sub
in
data16
cmp
adc
xchg
or
cld
sbb
fwait
jbe
mov
jns
push
adc
ftst
lods
inc
lcall
xor
sti
pop
inc
das
sbb
and
ds
xchg
pop
adc
mov
xor
mov
mov
xchg
adc
movsl
jg
jmp
mov
aam
shlb
sahf
mov
call
pop
jle
jae
sahf
into
clc
inc
push
adc
or
dec
and
sbb
sahf
cmc
fcom
xorl
add
cmp
ss
adc
shrl
mov
icebp
gs
stos
push
xor
xorl
dec
out
addr16
std
add
lcall
gs
cmpsl
add
sbb
bswap
das
ds
mov
mov
outsl
adc
mov
cmp
popa
sbb
adc
jle
imul
shl
enter
rcr
sub
outsb
fwait
jge
fcmovnu
inc
mov
movsb
cmp
jge
dec
dec
push
imul
mov
xor
dec
mov
in
jge
dec
sbb
lret
jo
stc
js
subl
push
pop
adc
sub
add
jge
insb
sbb
mov
push
mov
xor
and
imul
sarb
mov
int
adc
mov
cvtps2pi
jbe
mov
and
inc
dec
in
jae
sahf
notl
cwtl
test
fcomp
adc
dec
jns
daa
pop
mov
cwtl
lods
push
bound
movsl
sbb
inc
fisttpll
push
call
push
or
jge
or
repz
pop
mov
mov
in
or
xor
pop
xor
add
push
neg
stos
cmp
cmc
xor
fdivrs
loop
xchg
xchg
or
and
daa
add
out
sub
and
xchg
mov
mov
mov
or
dec
or
xor
outsb
mov
adc
repnz
popf
lds
inc
mov
add
xchg
mov
add
sti
xor
fnstsw
repz
dec
inc
test
and
pop
sbb
btl
mov
cwtl
mov
adc
aad
fstpt
and
fdivrl
push
xor
movl
sbb
data16
adc
inc
jmp
xor
icebp
adc
andl
rclb
add
std
ja
test
mov
adc
pop
pusha
or
out
cmpsl
pop
xchg
sar
xlat
and
leave
mov
out
push
dec
out
aam
mov
mov
es
popa
movsl
jne
shll
rcr
scas
adc
pop
cmp
fldl
outsb
push
cltd
xlat
and
iret
into
cmp
xchg
lods
rol
push
sub
pop
popf
xor
cmc
cmp
addl
lock
ss
add
and
jbe
or
inc
push
push
mov
jmp
sbb
pusha
aas
push
add
icebp
push
loope
dec
aas
and
lods
jle
int
sub
movsl
pop
xchg
adc
push
push
xchg
dec
mov
mov
ret
pop
inc
outsl
pop
leave
jle
out
hlt
xchg
mov
and
inc
jae
jno
or
sub
mov
mov
push
mov
in
or
repz
inc
hlt
and
popl
push
mov
cmp
mov
xor
mov
push
pop
insl
jae
jns
adc
xor
shll
inc
lret
fisttpl
mov
xchg
lahf
fiadds
fwait
pushf
xor
sti
pop
hlt
or
adc
and
lahf
arpl
push
adc
mov
dec
sub
test
and
pop
push
push
loope
insl
lds
aas
sbb
push
or
mov
in
sbb
mov
xchg
sbb
jg
imul
icebp
mov
mov
inc
out
aas
xchg
and
mov
rol
test
iret
das
lods
push
push
test
std
push
mov
movsb
sti
and
outsb
adc
sbbb
stos
cmp
cmp
or
scas
cld
xchg
mul
fisttps
shrb
dec
jecxz
notl
enter
xchg
testb
sti
jns
inc
mov
ja
cs
inc
push
addr16
pop
addb
push
push
iret
stos
pop
stc
xor
inc
shl
hlt
iret
mov
icebp
push
sub
push
sbb
push
imul
push
pop
mov
inc
push
ja
or
adc
lret
cmc
int3
mov
cwtl
jge
data16
leave
pop
adc
add
and
aas
mov
jl
push
sbb
mov
enter
push
mov
aad
mov
lock
adc
sub
test
cmpsb
inc
gs
mov
and
das
mov
and
ljmp
outsb
in
or
and
iret
inc
loope
daa
or
adc
jmp
lds
icebp
sbb
pusha
jp
iret
popf
sub
out
hlt
push
lcall
and
js
cmpsb
into
rcrl
sub
leave
and
push
jge
lock
movsb
mov
lea
mov
out
imul
dec
repnz
movsl
popf
sbb
outsl
rorl
or
mov
test
and
cmp
or
cmc
pop
ret
mov
dec
les
mov
fnstenv
das
imul
pop
adc
inc
push
or
int3
mov
or
add
and
push
fists
pop
loope
mov
addr16
pop
addr16
mov
jge
aad
mov
adc
mov
xchg
call
pusha
or
jo
fstl
cltd
mov
xchg
mov
add
shlb
and
enter
mov
inc
std
pop
mov
outsb
xlat
mul
cmp
fwait
push
lock
aam
inc
loopne
xchg
dec
pop
es
xchg
ror
mov
mov
mov
push
out
gs
mov
lret
sub
das
out
and
and
sbb
or
sarl
cmpsb
and
xchg
jnp
xor
xchg
aas
push
mov
rorb
loopne
mov
clc
cmp
stos
outsl
mov
xchg
cwtl
xor
pop
mov
into
pop
xor
test
add
icebp
ja
inc
push
push
leave
jae
movsb
dec
shll
adc
mov
hlt
and
mov
repnz
jp
sti
pop
sub
push
and
dec
fbstp
mov
inc
sub
mov
sahf
adc
mov
sub
leave
and
xorb
cmc
add
insl
xchg
add
sbb
outsb
xchg
mov
inc
and
push
mov
mov
dec
jmp
and
jge
xor
mov
cltd
sub
or
sahf
out
xchg
jnp
push
out
mov
push
ror
xor
out
pop
and
xor
or
les
int
lss
sbb
jecxz
xor
sbb
xchg
imul
stc
and
xchg
xlat
lret
xchg
add
sbb
ss
cltd
pop
cltd
cmp
cmp
ja
push
add
loop
sub
pop
mov
adc
or
inc
nop
shrb
push
jb
pop
in
addl
jge
and
cmp
ja
dec
cmp
and
mov
mov
cmp
push
mov
in
jns
hlt
add
and
mov
in
push
mov
ljmp
mov
adc
mov
mov
pop
push
push
xor
pop
int3
lea
hlt
int3
add
inc
adc
xchg
or
sbbl
jmp
adc
push
clc
inc
push
xor
pop
adc
out
adc
sbb
and
cmp
negl
sbb
das
repnz
and
repz
lods
ja
test
inc
movsb
ret
stos
movsl
shlb
insl
fxch
adc
add
test
out
cmp
cmc
mov
outsb
repnz
sub
pusha
pop
loope
adc
mov
jb
scas
dec
sub
cmp
pop
pop
cld
xor
xor
pop
fs
or
fidivs
push
and
mov
jmp
push
cmc
jecxz
xchg
imul
xchg
mov
out
outsb
out
or
pop
rorb
jge
xchg
and
js
ret
sbbb
loopne
lret
jmp
or
xchg
movsb
and
js
lret
jnp
sarb
xor
mov
push
idivl
cmp
call
cmc
pop
mov
out
int
jb
out
sub
mov
pop
pop
add
sbb
sub
mov
aaa
sbb
imul
xor
inc
jno
popa
mov
lret
and
icebp
xorb
mov
into
sbb
push
int
scas
push
sbb
enter
inc
push
pop
add
hlt
mov
jne
lds
inc
adcl
popf
insl
sahf
mov
mov
adc
ror
pop
jl
int3
pop
xchg
in
inc
aaa
and
mov
out
add
sub
add
push
cltd
push
ds
test
out
andl
mov
mov
in
mov
mov
cmp
and
negl
out
pop
adc
pushf
push
cmp
imul
pop
outsb
dec
ds
lret
repnz
popa
mov
lret
adc
loop
jae
or
and
je
sbb
mov
dec
iret
movsb
adc
sar
mov
hlt
mov
or
adc
dec
sbb
push
inc
gs
add
enter
andb
jle
imulb
lods
mov
add
sbb
xor
icebp
pushf
or
xchg
xchg
rcrl
out
sahf
rcll
mov
adc
cmp
jne
and
ret
int
sub
add
bound
dec
cs
fists
shll
adc
data16
sbb
dec
add
jbe
fstpl
dec
add
add
fwait
mov
push
dec
push
dec
in
test
jno
mov
dec
or
call
int
fldenv
jmp
xchg
ds
mov
pop
loop
mov
adc
and
push
and
out
loope
xchg
dec
fnstenv
sub
mov
adcl
jbe
mov
xchg
jg
ret
aad
fcom
xor
pop
adc
adc
fiadds
mov
pop
shr
and
shlb
out
sbb
add
sbb
cmp
jbe
sub
lods
jg
out
hlt
shld
repz
sbb
dec
xchg
mov
add
xchg
mov
add
adc
loopne
movsb
sub
subl
les
sbb
dec
sbb
push
jle
mov
lcall
pop
out
push
add
loopne
jbe
mov
filds
test
insb
jmp
stos
out
dec
aad
adc
cwtl
add
inc
jns
adc
sbb
push
cltd
shll
mov
or
and
mov
fbld
fidivs
jnp
cs
sbb
jecxz
bound
adc
je
aas
cmpsb
js
adc
dec
lock
xor
enter
sbb
notl
mov
rcrl
mov
sub
dec
aam
add
fisubrs
cltd
mov
adc
xor
or
xor
sub
data16
xor
pop
arpl
mov
das
push
pop
fwait
mov
cwtl
mov
mov
sti
mov
hlt
mov
js
jae
xor
test
out
lcall
sbb
mov
mov
sar
jmp
leave
mov
sub
dec
adc
ja
sub
or
jne
pop
inc
mov
stc
xchg
repnz
cmp
arpl
and
dec
add
cmpsb
cmp
adc
es
test
xlat
aas
dec
ljmp
mov
icebp
mov
or
add
mov
adc
sbbb
unpcklps
pusha
aaa
xchg
aaa
jmp
and
ficompl
lods
mov
cmpsb
or
jae
adc
int3
xchg
pusha
jae
test
lds
push
cltd
lahf
aad
jl
in
adc
push
subb
add
sbb
test
push
outsl
adc
sbb
imul
add
jmp
negl
fbstp
outsb
dec
push
aam
hlt
into
mov
pop
add
jle
popa
xor
xchg
and
pushw
xchg
inc
fisttps
mov
push
loopne
push
and
imul
dec
outsb
rcll
jno
inc
adc
xchg
add
incl
dec
xchg
jl
mov
mov
sahf
and
push
adc
push
jge
adc
mov
add
sub
dec
rcll
dec
mov
shll
cmp
adc
xor
dec
aas
pop
mov
jmp
lods
inc
cmp
dec
xor
adc
xchg
sbb
mov
and
mov
and
dec
adc
jle
sti
iret
fwait
shrl
push
jno
ret
mov
imul
je
mov
lahf
outsb
sbb
popa
and
or
sbb
aas
arpl
mov
mov
aad
je
lods
pop
ja
push
sahf
xchg
mov
push
add
repz
stos
popl
xchg
xchg
rol
aam
cmp
xchg
lcall
mov
and
sub
jle
sbb
popa
ja
in
stc
pop
and
or
insl
xchg
push
xchg
mov
xor
cmp
add
and
or
enter
push
jecxz
jge
lock
call
aaa
rcrb
xchg
sbb
outsb
and
and
stos
adc
xchg
mov
inc
into
les
sbb
xorl
shrb
mov
fwait
out
mov
negl
lods
dec
repnz
pop
and
jmp
lea
pop
rcrb
rcll
into
hlt
jbe
imul
xchg
cmp
ljmp
and
negl
adc
mov
sub
leave
cmp
adc
sub
stos
rorb
sbb
frstor
xor
movsl
xchg
test
shl
sahf
and
sub
and
mov
iret
fwait
scas
mov
imul
xchg
sbb
inc
div
jge
insb
xchg
add
push
push
dec
fldt
push
out
hlt
scas
out
adcl
jae
adc
cltd
mov
out
hlt
inc
cwtl
icebp
std
outsl
leave
jno
in
inc
or
mov
cmp
fisubrl
push
inc
repnz
inc
and
leave
es
loope
mov
or
adc
mov
xchg
dec
mov
orb
xchg
popf
inc
movsl
sahf
xor
push
cmp
in
adc
mov
outsl
cs
dec
cs
mov
cmp
shrb
fs
fdivl
bound
hlt
xchg
sti
and
inc
popa
pop
sub
cld
mov
cmpsl
mov
push
aaa
sar
pop
cmpsb
insb
fildl
add
push
xchg
lret
mov
xor
sbb
pop
push
adc
cmp
ret
and
jmp
and
aad
negl
hlt
push
push
mov
sbb
fnstsw
xchg
jno
add
loope
hlt
jecxz
in
mov
xor
pop
jecxz
call
outsl
aaa
in
mov
fisubrl
loopne
icebp
and
sbb
and
add
js
iret
or
repnz
stos
adc
ret
mov
adc
adc
mov
adc
jno
cmp
ret
adc
insb
adc
mov
push
sbb
sbb
xchg
xor
adc
push
loope
mov
bound
jne
add
shr
mov
mov
pop
sub
xchg
lods
and
adc
mov
adc
in
movsl
mov
pop
mov
cltd
das
insb
add
jmp
mov
xchg
cs
adcl
sbb
cltd
aad
mov
mov
out
sbb
or
rorb
push
roll
and
aam
inc
out
je
das
shlb
jge
lcall
sub
xchg
and
ficoml
adc
fistpll
sbb
out
mov
and
cmp
loop
in
mov
dec
das
sub
lds
and
sbbl
sub
fidivrs
jae
push
or
dec
sub
add
clc
repz
fsubrp
pop
call
mov
mov
imul
hlt
jg
lahf
push
jmp
pop
mov
gs
mov
push
cld
data16
jle
push
aam
adc
xchg
xor
xorb
cmp
pop
and
loope
push
aam
mov
leave
stc
sahf
xchg
jmp
ja
jae
adc
or
push
pusha
cld
test
mov
and
jmp
push
pop
push
jge
push
fmul
add
adc
add
cltd
sub
mov
sbb
daa
inc
push
adc
xchg
xchg
adc
push
cltd
inc
add
popf
push
hlt
jge
es
fdivr
cs
rcll
xor
imul
hlt
xor
rclb
daa
in
push
sub
dec
jae
cmp
ja
clc
and
icebp
pop
dec
fbld
inc
sub
leave
xor
sub
mov
int
add
outsl
adc
pop
cltd
dec
mov
push
ja
xor
shr
or
rolb
test
fwait
xor
repnz
xchg
jg
pusha
sbb
adc
int
sbb
jae
out
cmp
aad
mov
dec
cmc
mov
shll
out
mov
aas
inc
adc
pop
mov
rol
cmp
pop
outsl
or
iret
fdivl
les
inc
movsl
rcrl
mov
cmp
clc
mov
mov
bnd
adc
jae
aaa
inc
ljmp
dec
imul
pop
mov
out
mov
sbb
mov
adc
push
push
fadds
lret
push
or
xchg
xlat
negb
add
add
outsb
mov
sub
jmp
add
lods
cmp
push
mov
flds
mov
inc
add
mov
les
adc
mov
lcall
scas
scas
and
cmp
pop
out
icebp
adc
sti
jg
mov
jge
leave
sbb
aas
sbb
sbb
cli
adc
repnz
push
ret
lcall
mov
ja
mov
inc
lahf
inc
inc
out
pop
je
call
cmp
xchg
add
mov
and
fildl
sbb
rep
sbb
icebp
xchg
adc
sar
mov
sbb
jle
stos
sub
scas
roll
dec
or
adc
fwait
or
push
sahf
mov
insb
pop
sahf
mov
push
mov
push
orl
ds
stos
mov
mov
fsubr
pop
adc
out
scas
sub
inc
adc
xchg
sub
es
fs
and
sub
or
mov
lcall
int3
adc
idiv
or
sub
stos
fildll
rcrl
xor
adc
cmc
jmp
adc
outsb
es
and
push
inc
jp
in
xchg
clc
push
imul
leave
sbb
cmp
int
push
inc
jnp
arpl
mov
push
mov
mov
jno
pop
sbbl
jb
sbb
sub
lret
cmc
mov
and
iret
fnstenv
scas
mov
fstpt
mov
daa
or
mov
push
jl
pop
shl
inc
cs
lahf
pop
cwtl
lret
sub
push
cmc
sbb
adcb
mov
hlt
sbb
sahf
sti
dec
mov
ds
out
dec
xor
pop
movsb
dec
sub
mov
xorl
mov
imul
adc
jge
xlat
add
pop
jle
mov
repz
popa
out
repnz
pop
xor
pop
lcall
je
cmp
mov
sbb
cmp
xor
jmp
or
xchg
and
ja
test
hlt
and
mov
dec
mov
xchg
add
dec
cmpb
xchg
jne
fwait
lods
sbb
jae
xchg
jle
inc
clc
jae
xor
or
loope
hlt
mov
lock
cmc
add
loope
push
dec
jne
adc
call
call
jo
rcll
push
jl
aad
sbb
push
xchg
jecxz
mov
jmp
popa
imul
rcr
sti
movsb
pop
data16
lret
and
mov
mov
ret
push
dec
dec
xorb
scas
adc
jne
pop
xor
dec
mov
add
sbb
mov
repnz
lock
fnstsw
lods
cmpb
or
mov
dec
aas
aam
xor
jne
or
jl
adc
loopne
or
jbe
stc
cmp
push
jno
notb
jp
aaa
adc
aam
sub
popf
sti
mov
xchg
or
add
sub
jno
nop
iret
clc
jne
and
bound
jbe
jnp
ret
lods
push
leave
xor
mov
adc
sub
mov
stos
add
pusha
lods
mov
addr16
popa
adc
dec
xor
dec
mov
mov
hlt
xor
popf
push
inc
sbb
adc
addr16
and
sub
mov
hlt
cli
mov
pop
ds
mov
push
std
push
jmp
jnp
fildl
jne
cld
push
and
fs
push
inc
sbb
stos
or
mov
aad
push
les
sahf
lea
mov
dec
mov
push
int
xchg
sbb
jns
leave
or
fs
push
cmp
pusha
bound
in
std
es
arpl
cmp
cltd
jno
push
push
push
jmp
mov
in
imul
movl
fidivs
mov
push
or
jmp
jae
pop
push
in
jo
push
bound
mov
lods
fucomip
mov
jge
push
push
pop
jns
aaa
cmp
test
lods
insl
clc
cltd
cmp
roll
inc
movntps
out
rcl
fimull
adc
ret
fwait
cmp
jb
aaa
shll
dec
loope
in
or
mov
call
test
or
sbb
testl
rorb
pop
rclb
push
push
jns
pop
call
adc
jmp
cmp
sub
dec
mov
push
jmp
inc
push
adc
sub
clc
test
jle
adc
imul
aaa
or
scas
sub
in
pop
and
adc
sbb
fnstenv
loope
or
pop
jle
call
push
das
mov
fs
lock
cli
dec
mov
pop
and
das
push
sbb
sub
cwtl
in
mov
scas
rcr
call
sbb
mov
dec
xchg
mov
adc
cltd
jle
imul
cwtl
shll
jge
test
es
icebp
mov
test
and
jae
ja
out
test
jg
jle
sub
mov
sahf
push
adc
cmp
loope
mov
adc
xchg
fists
sbb
xor
jno
xor
cmp
push
inc
insb
xor
shrl
adc
es
cmpl
cmc
pop
or
out
cmp
sub
int
xchg
test
jbe
or
dec
leave
mov
mov
xor
movd
ljmp
lods
stos
fnstcw
or
pop
das
push
int
adc
and
lods
xchg
jle
ja
cmp
hlt
mov
stc
ficoml
gs
repz
notl
pop
sbb
or
scas
mov
and
add
sarb
mov
scas
add
inc
rolb
jecxz
outsl
inc
hlt
mov
cmpl
ret
and
mov
adc
std
adcb
add
mov
pushf
fistpl
pop
stc
sub
push
mov
std
xchg
jg
faddl
lds
sbb
icebp
scas
mov
in
or
or
cmpsl
fdivs
sub
xchg
sbb
out
icebp
sbb
sub
jl
adc
insl
xlat
adc
insb
je
dec
rorl
js
mov
jb
push
pop
xor
jmp
mov
in
das
dec
loop
and
loopne
adc
xchg
adc
xor
add
xor
jb
adc
sub
repz
mov
adc
lahf
cwtl
jp
push
cmp
inc
in
jp
adc
loop
sbb
mov
stos
fistl
icebp
jae
adc
mov
cmc
add
repz
test
and
and
xlat
lea
xchg
sub
incl
pop
sbb
test
pop
jae
jno
mov
and
clc
mov
pop
mov
adc
movsl
mov
dec
mov
jecxz
frstor
adc
add
xor
and
mov
aam
dec
repnz
mov
lea
pop
add
inc
jmp
rolb
lret
out
inc
out
insl
sbb
and
push
and
adc
sti
sub
or
fstpt
xor
movsb
adc
adc
cmp
outsl
push
std
add
push
dec
add
rolb
cltd
cmp
cmpsl
adc
xchg
repz
mov
add
xchg
push
adc
push
jnp
cmp
adc
dec
sub
jae
mov
notl
mov
ret
dec
sbb
cmp
fabs
xchg
mov
repnz
and
mov
cmpsb
pop
std
jae
adc
cmp
and
mov
or
lds
mov
aaa
test
out
popa
sbb
mov
mov
add
xchg
push
gs
aas
adc
sahf
and
jne
push
sti
call
scas
adc
sbb
fmul
inc
subl
sbb
inc
mov
repnz
mov
lock
push
loop
fildll
dec
pop
pop
mov
push
rcll
fucomi
ja
nop
movsl
sbb
and
jb
adc
cltd
insb
xlat
sbb
shll
pop
mov
insl
add
xchg
hlt
stos
shll
mov
jne
pop
inc
cld
fcmovnbe
sbb
aam
loope
sahf
xchg
xorb
jmp
and
mov
subl
dec
pop
and
sub
data16
xchg
shlb
jmp
push
icebp
mov
mov
in
fwait
enter
pop
or
pop
pop
popf
loope
mov
inc
test
out
aaa
and
lcall
clc
xlat
push
add
sub
lret
repnz
fstps
sahf
stc
lcall
mov
cmpsb
imulb
pop
and
mov
push
push
bound
lea
out
dec
push
jg
mov
pop
and
in
pop
stos
aam
outsl
ss
and
lock
jmp
lods
outsl
insl
stos
push
mov
and
hlt
jg
and
and
xor
mov
pop
adc
nop
mov
hlt
repnz
mov
push
xchg
or
not
rcl
test
ror
out
out
cmpsb
and
repnz
mov
jb
fldl
imul
out
or
pop
cmpsb
adc
xchg
aas
imul
cmc
pop
xchg
lea
mov
and
stc
ret
or
inc
ror
push
and
addr16
inc
lods
mov
aaa
aam
ss
adc
sbb
jns
dec
leave
xchg
xchg
and
sub
push
in
add
adc
sarl
push
mov
outsb
hlt
xor
xchg
adc
xchg
aaa
cli
imul
ja
push
cmpsb
ljmp
and
movsl
xchg
iret
lret
jne
ja
aam
cld
das
negl
jmp
popa
mov
stos
out
push
out
loope
rcl
lret
leave
adc
fldenv
adc
lret
and
fs
xor
jno
push
jmp
jle
mov
cmp
cmpsl
add
cmpb
mov
and
mov
lret
sub
and
jmp
leave
pusha
xchg
sbb
dec
fsubrl
pop
xor
push
call
mov
sbb
repz
out
mov
aas
dec
adc
fdiv
fisubrl
loope
bound
and
xor
push
or
mov
fistpll
ds
mov
jg
loope
rolb
push
clc
mov
or
cmpsl
insl
daa
inc
pop
jne
inc
or
or
jno
add
call
fdivrl
dec
fmulp
add
loop
mov
int
imul
pusha
int3
cmpl
and
adc
insl
push
push
push
cmp
cmp
fistpll
ret
les
jbe
sub
jbe,pn
mov
jecxz
push
pop
mov
or
jmp
jle
into
xor
push
push
jae
mov
test
ja
mov
adc
push
push
aad
mov
xchg
push
ret
test
mov
repnz
lcall
mov
ret
cs
xlat
cmp
sbb
mov
out
out
gs
repz
jo
push
ja
out
add
stc
mov
xchg
popa
adc
mov
inc
out
outsl
testl
sbb
sub
cmp
call
in
mov
js
sti
adcl
or
xor
addl
lcall
in
xchg
loop
push
xlat
sub
movsl
sub
dec
mov
leave
xor
dec
jno
hlt
adc
and
stc
jp
cmc
sti
sbb
pop
adc
ss
cmp
sarb
push
hlt
cli
leave
jbe
loope
enter
push
mov
outsl
xor
and
xchg
repz
sub
mov
pop
or
sbb
xchg
mov
jne
dec
adc
xchg
leave
and
jle
pop
add
inc
and
outsb
ja
bnd
adc
arpl
and
ret
cmp
sub
icebp
cmp
cmpsb
and
fisttps
ja
ret
sub
jge
mov
jb
in
and
dec
xor
and
test
cli
or
mov
push
cmpsb
repz
scas
insl
insb
mov
inc
mov
sahf
mov
sub
pop
inc
jmp
push
scas
js
mov
ret
loop
jnp
cmc
sti
xor
adc
popa
fistpl
push
adc
je
sbb
xchg
and
fisttpll
insb
ja
xor
jmp
nop
lcall
insb
or
ficomps
push
pop
lock
cmp
adc
mov
push
pop
or
adc
test
sub
leave
subb
scas
xchg
sbb
aad
inc
add
and
mov
cli
insl
xor
cltd
inc
lcall
ret
fwait
cmp
pusha
mov
pushf
sahf
mov
lahf
lock
lret
daa
and
or
shl
scas
pop
add
nop
mov
jb
int3
push
fcoms
xor
addr16
add
and
xor
push
sub
sub
jge
adc
std
jmp
popf
shlb
subl
addr16
xchg
inc
add
test
repz
out
ret
stos
pushf
add
mov
jnp
xor
sbb
mov
push
adc
dec
mov
bound
jb,pn
sar
shrl
mov
aam
enter
or
cld
aad
mov
cld
stos
xchg
and
push
jo
and
jno
cmc
pop
push
sahf
push
shl
hlt
sub
jecxz
or
inc
hlt
sbbb
lret
je
js
mov
and
mov
das
adc
decl
and
lret
orb
lods
dec
pop
mov
hlt
inc
div
jae
pushf
test
and
add
aam
push
cmp
fistps
divl
ret
das
sub
jl
iret
shll
bound
adc
sarl
jg
push
cmpsl
stc
lods
push
mov
loop
test
xor
and
mov
sbb
fidivl
sub
jo
aaa
pop
insl
jg
mov
pop
mov
dec
adc
jo
test
jecxz
out
xchg
and
or
xchg
call
push
hlt
out
lcall
push
xlat
mov
ja
clc
pop
scas
jl
inc
xchg
fstps
push
dec
sbb
gs
jne
cmp
adc
sahf
fdiv
pushf
fidivrs
mov
stc
pusha
adc
mov
sub
pop
shlb
in
leave
or
jg
xor
imul
ja
imull
in
sub
and
mov
mov
push
ss
pop
test
push
push
xchg
lcall
xchg
shll
jle
cmp
shll
stos
enter
add
sti
cmp
out
sti
aaa
es
sub
leave
and
dec
cmp
popf
xchg
sub
push
mov
sbb
pop
rcll
cmpsb
mov
mov
jge
fimuls
lcall
mov
repz
push
popf
scas
ja
adc
insb
aam
push
movl
sbb
adc
pop
xchg
inc
sub
push
jmp
les
call
cltd
dec
shlb
aam
int3
insl
mov
inc
aam
jbe
cwtl
pop
lcall
mov
adc
jno
je
ret
repnz
sub
lods
pop
cmp
ss
mov
push
jbe
fiaddl
cwtl
inc
mov
mov
addr16
or
xor
mov
push
insb
or
dec
sahf
aad
fstl
rcrb
mov
push
sar
pushf
fs
push
jbe
mov
mov
or
jnp
je
fs
mov
aas
dec
xchg
repz
scas
cmpsl
adc
shr
ret
and
imul
mov
data16
push
test
sbb
out
cs
or
mov
xchg
int
loopne
or
fsubr
call
adc
xchg
sbb
sub
scas
sarl
out
push
mov
lods
scas
xchg
sbb
test
fisttps
scas
pusha
cmp
lcall
test
sub
scas
push
cmp
push
fbstp
shlb
sbb
inc
cmp
xlat
shlb
cld
push
jg
xchg
pop
push
add
fdivs
sahf
aas
test
scas
cld
mov
fmuls
pop
cmpsb
pop
mov
or
pop
dec
pop
sub
push
popa
outsb
test
inc
repnz
push
repnz
mov
fwait
dec
insb
push
adc
or
inc
call
scas
aad
cmpsl
push
ja
out
xor
subb
cwtl
je
jge
and
jle
mov
cmp
jg
scas
sub
in
mov
jl
roll
aad
andb
push
dec
pop
mov
test
adc
sbb
mov
dec
stos
shlb
xor
outsl
loopne
rcl
icebp
jge
bound
cmp
cs
mov
jl
cs
sbb
sub
and
notb
adc
hlt
sti
jo
xlat
filds
push
jge
mov
fcmovnu
inc
push
push
ficoms
jmp
lmsw
scas
dec
sbb
cmc
dec
pop
adc
into
adc
mov
adc
jmp
adc
xor
dec
xchg
popf
cld
xor
mov
sbb
mov
cwtl
test
shrl
popf
adc
adc
test
shrb
aam
mov
cld
rcrl
leave
pushf
or
inc
mov
addr16
sbb
push
repnz
jle
shll
hlt
add
jmp
mov
xchg
adc
or
mov
cmpsb
xchg
ja
or
iret
mov
hlt
fwait
pop
dec
out
stc
sbb
push
bound
mov
mov
fnstcw
mov
inc
scas
and
mov
out
ret
and
out
cltd
mov
sub
sahf
xor
add
adc
add
mov
and
jae
loope
sahf
ds
pop
sub
mov
rcrl
cmpsl
push
fwait
mov
push
adc
and
nop
arpl
inc
cmp
scas
call
pop
pop
repnz
push
fdivrs
hlt
int3
or
pop
ljmp
adc
jl
jb
sbb
dec
xorl
enter
bound
sbb
repnz
aam
push
loope
and
call
mov
xchg
lcall
and
jmp
addr16
popa
adc
popf
inc
and
cmpsl
push
push
jb
ret
mov
mov
div
mov
in
sub
pop
fwait
push
addb
xor
int3
jne,pn
sbb
adc
inc
and
and
cmp
cmp
push
inc
test
jno
sbb
jg
jp
jbe
aas
outsl
cltd
hlt
addr16
mov
adc
adc
adc
fsts
pop
and
icebp
jae
lods
fsubs
cmpsb
cmpsl
icebp
mov
add
push
and
aaa
int
xor
xchg
in
add
mov
inc
and
jl
pop
das
lahf
xchg
nop
adc
jae
push
add
sbb
in
mov
cmp
out
aad
push
inc
pop
cltd
xchg
mov
mov
ss
gs
rclb
hlt
mov
shl
lock
fists
test
xchg
minps
mov
jmp
mov
nop
std
inc
iret
bound
jp
mov
inc
add
mov
ds
int
iret
push
dec
iret
out
mov
ja
cmpsl
add
sbb
repnz
mov
dec
dec
jns
cmp
fcomip
mov
jge
mov
adc
xchg
aad
mov
inc
jne
shrl
lods
adc
sbb
xchg
dec
stc
and
mov
clc
mov
add
out
and
mov
sub
lcall
pop
cmpsl
cmp
dec
sbb
and
pop
pop
popf
push
icebp
mov
and
xchg
adc
cmpsb
mov
out
lds
and
ljmp
lock
mov
loopne
mov
sub
push
pushf
dec
sub
sbb
call
add
int3
xchg
nop
jg
dec
data16
inc
sbb
loope
fidivrs
stc
mov
out
dec
mov
push
dec
out
and
inc
push
or
mov
push
stos
mov
or
out
push
leave
outsl
mov
pop
imul
and
nop
rclb
mov
xor
sbb
fidivrl
adc
jge
loop
pop
jl
inc
pand
ret
pop
push
ficoms
cwtl
adc
adc
pop
rorb
sbb
sbb
inc
out
roll
aam
das
push
imul
nop
adc
jnp
add
push
cmp
xlat
sbb
mov
loopne
cmp
inc
outsb
push
dec
aas
fucomp
adc
inc
out
aas
mov
in
and
or
popa
adc
or
lods
push
ss
cmpsb
lret
arpl
outsl
out
stos
fldt
or
fiaddl
scas
mov
addr16
and
add
sub
fnstenv
fidivrs
aas
push
mov
xchg
sub
mov
cltd
xor
and
movsl
add
es
test
mov
pop
sub
add
sahf
arpl
mov
fsubrs
fwait
test
mov
popa
push
stos
jb
mov
adc
mov
sbb
inc
xor
sub
addr16
mov
popa
daa
leave
mov
push
cmp
mov
jae
jp
push
fsubr
sti
ss
rclb
repz
sub
and
loop
or
fistl
pop
xchg
mov
cmp
jmp
adc
std
into
mov
sbb
or
adc
mov
cs
fwait
repnz
std
adc
push
adc
mov
lock
sti
sbb
std
nop
adc
and
and
add
jnp
sbb
or
ds
mov
insl
fdivrl
rcrl
and
sbb
mov
sbb
sbb
xchg
stos
cld
mov
mov
adc
fwait
sbb
add
pushf
or
sarl
inc
and
das
cli
rcrb
lahf
pop
mov
pop
jne
mov
or
in
lcall
pop
aam
int3
scas
or
mov
idivb
xor
mov
fwait
das
lds
or
xor
xor
scas
xor
cltd
sbb
push
adc
and
das
adc
dec
xchg
sbb
xadd
xor
xchg
xor
mov
sbb
inc
adc
pop
adc
in
sbb
int
fbstp
shlb
add
xchg
in
pop
mov
cmp
addb
pop
push
out
mov
negl
and
js
lods
or
or
jge
mov
popf
stc
push
pop
lahf
and
or
decl
popa
adc
call
xlat
adc
jns
cwtl
xchg
sbb
addr16
xlat
xchg
out
clc
or
lahf
push
pop
cwtl
and
xchg
and
fmull
rclb
clc
lcall
jns
mov
cltd
and
pop
int3
pop
loopne
jge
mov
jno
or
xchg
pop
cwtl
xchg
out
sbb
sbb
fimuls
out
mov
mov
and
out
int
decb
mov
and
subl
loopne
fcomps
outsb
sbb
add
push
push
test
cltd
cmc
sub
fxtract
imul
pop
inc
jne
sbbl
ja
cmp
js
mov
sbb
aaa
in
pop
rorl
insl
sub
cmp
xchg
or
xchg
xor
xchg
hlt
jns
loope
xchg
pop
fisttps
shlb
lahf
jp
and
sub
dec
enter
mov
inc
sbb
or
das
xchg
sbbl
adc
add
rcrb
push
arpl
xchg
jle
test
jae
das
pop
hlt
in
mov
and
icebp
push
xor
pop
add
iret
pushf
sub
xlat
inc
fdivl
sbb
gs
xchg
rolb
into
out
pushf
push
and
sti
jmp
jge
mov
mov
cwtl
sub
mov
jg
sbb
adc
push
dec
int
and
insb
mov
movsl
jo
add
xlat
sub
xchg
unpcklps
add
aas
iret
hlt
fcmovne
sub
mov
and
shrl
dec
and
adc
sbb
adc
cmp
test
cltd
adc
imul
sbb
repnz
push
adc
jp
mov
imull
xchg
cmpl
icebp
push
cmpsl
and
ljmp
push
fadds
int3
sbb
aas
inc
push
and
stos
add
adc
adc
jle
call
scas
inc
sub
jl
mov
mov
jle
inc
mov
mov
inc
push
mov
je
fidivs
sbbl
push
in
push
lock
arpl
and
pop
es
in
jnp
or
shl
cli
jmp
test
movsl
xchg
push
push
xchg
pop
repnz
jmp
mov
fnstsw
jns
adc
insb
in
out
pusha
pop
hlt
add
push
fistl
ja
mov
mov
mov
notl
and
pop
imul
pop
inc
jb
push
popf
jns
outsl
cmp
es
cmp
push
dec
dec
mov
aas
pop
push
adc
sub
rclb
daa
adc
fwait
lds
cmp
hlt
push
mov
xor
movsl
adc
js
jbe
sahf
sbbb
push
cli
pop
jae
inc
xchg
int3
jns
aam
int3
popf
lret
dec
mov
fdivrs
jne
and
adc
adc
sbb
mov
or
xor
cmp
es
js
ljmp
mov
fisttps
adc
negl
dec
inc
in
adc
sbb
data16
push
xchg
shrb
icebp
idivb
adc
js
mov
adc
mov
adc
popa
inc
loope
imul
jmp
insl
jbe
push
adc
pushf
clc
jp
pop
or
jns
popa
xchg
mov
adc
sbb
movb
adc
lods
push
mov
sbb
sub
stos
xor
inc
xlat
cmpsl
pop
dec
add
inc
scas
dec
xchg
cltd
sbb
leave
adc
mov
in
adc
nopl
ljmp
rcr
xlat
mov
mov
popa
in
add
mov
popf
pop
add
iret
xor
adc
adc
mov
cs
or
sahf
js
fcoms
fsubrl
rolb
test
mov
jne
int3
fcomi
icebp
cmpl
or
or
or
test
sbbb
mov
jmp
leave
fs
adc
dec
cmp
cltd
pop
sub
mov
dec
dec
ja
aam
xor
enter
pop
pushf
stos
and
dec
cmp
jno
xor
sti
cmpsl
adc
xor
les
xor
and
push
inc
ljmp
bound
fucomip
xor
sub
out
cmpsl
xor
test
sub
xchg
mov
int
xchg
and
orb
xchg
fidivrl
mov
adcb
push
mov
jb
femms
arpl
sub
outsb
cmpb
cmp
and
adc
cmpsb
mov
ja
cmp
or
xor
aaa
aad
mov
test
ja
adc
cmp
push
or
or
or
shlb
jnp
dec
shll
aas
cmp
or
out
in
adc
mov
pushf
xchg
xor
mov
adc
xchg
and
outsl
mov
das
hlt
xlat
sbb
sbb
nop
inc
repnz
sbb
aas
mov
sbb
fcoml
nop
push
mov
jo
test
mov
mov
shll
outsl
sbb
push
sahf
and
lods
jle
push
and
iret
mov
push
or
pop
repz
dec
das
dec
pop
push
add
adc
shll
sbb
pop
xchg
or
pop
out
pop
mov
mov
test
and
xlat
inc
push
mull
loop
out
and
mov
fdivrl
inc
inc
leave
xor
mov
lods
aad
dec
ds
push
sahf
sbb
lcall
imul
dec
mov
or
jge
sbb
loopne
lods
mov
jge
push
stos
push
sub
test
add
mov
adc
jg,pn
cwtl
outsb
fsubl
pop
inc
pusha
pushl
repz
push
push
std
adc
sub
rcll
jge
xchg
sub
les
shrb
adc
dec
hlt
mulb
xchg
mov
jbe
leave
adc
test
ss
fwait
sahf
popa
les
push
ja
jo
mov
aaa
jg
cwtl
mov
test
out
pop
xor
pop
scas
scas
push
jbe
fists
fsts
icebp
sbb
mov
vcvtpd2psx
jns
inc
mov
ficompl
pop
dec
and
ret
loop
icebp
dec
push
sub
scas
scas
or
sub
or
sbb
xchg
cmp
lock
decb
shll
and
xor
mov
sub
pop
repnz
in
sub
adc
pop
cmpsl
mov
mov
xor
sahf
xchg
icebp
or
cwtl
loop
out
cmp
js
mull
insl
jae
jp
fcoms
rorl
ret
sti
aas
mov
das
mov
cltd
jl
jle
adc
icebp
mov
jg
push
mov
jmp
arpl
insl
sbbb
hlt
jno
rorb
add
jmp
xchg
xchg
or
cmp
add
and
jns
cli
popa
cmpb
mov
clc
sahf
loop
push
xorb
iret
fsubr
mov
scas
push
mov
xchg
and
sbb
stos
je
loop
inc
mov
mov
pop
adc
testb
js
jp
xchg
call
lea
leave
push
jmp
and
rclb
mov
cli
push
fdivrs
scas
mov
cmp
lods
and
jg
mov
lods
ret
mov
in
jo
loop
pop
xor
insl
xchg
inc
andl
loop
shrb
jb
cmp
sub
hlt
pop
mov
iret
jne
sarb
sti
in
dec
xchg
mov
pusha
add
xorb
in
mov
xchg
imul
mov
pop
js
push
sub
jmp
xchg
and
cmpb
test
std
mov
adc
adc
ss
ss
and
xor
cwtl
insl
sbb
add
les
gs
aas
pop
add
pop
jle
sti
cs
jae
push
mov
mov
lahf
add
mov
jb
adc
dec
aaa
stos
push
das
cmp
sbb
mov
fwait
inc
add
pop
push
arpl
xor
inc
sbb
das
imul
adc
jnp
jno
stos
popf
ja
lods
loop
cld
pop
sbb
insb
cmp
mov
rcrl
movsl
dec
iret
out
lods
push
adc
jno
pop
jle
push
ret
mov
cmp
pop
xor
xor
addr16
sub
or
add
jg
ds
into
push
inc
mov
mov
std
les
movsl
pop
sub
repz
or
inc
sbb
rcll
insb
dec
fstpt
push
xchg
mov
int3
lret
int3
mov
imul
sti
movl
push
in
rorl
inc
out
dec
and
push
mov
mov
mov
fisttpll
push
pop
mov
subb
test
hlt
jge
faddl
in
ja
jae
cld
out
mov
cmp
dec
mov
dec
dec
mov
sahf
js
stos
data16
pop
out
jmp
jmp
mov
pusha
xchg
fwait
push
cmpl
inc
sbb
popa
adc
sbb
data16
pop
stc
scas
hlt
ds
pushf
inc
mov
fs
aas
dec
xlat
and
inc
xchg
sbb
dec
mov
cmp
sahf
jns
mov
orl
jns
out
or
icebp
push
ja
dec
and
sbb
lahf
inc
push
mov
scas
rcll
push
xchg
push
and
mov
dec
jno
dec
inc
out
mov
out
outsl
adc
mov
push
and
repnz
aam
jl,pn
push
sub
fadd
jge
adc
shrb
push
lods
jb
push
dec
xchg
or
adc
push
dec
cmp
adc
pop
and
xorb
adc
stc
icebp
inc
sti
enter
and
jp
scas
xchg
xchg
add
pusha
fstp
xchg
and
mov
sahf
inc
scas
lods
xchg
leave
jae
adc
mov
clc
or
jo
inc
outsl
popf
or
sahf
je
cmp
scas
dec
hlt
js
inc
jmp
lahf
sbb
repnz
ret
jns
or
jle
xchg
test
hlt
addl
jae
jb
arpl
push
inc
repnz
lcall
sbb
adc
cmc
jge
add
hlt
in
mov
outsl
xor
repz
in
mov
pop
adc
cmpsl
pop
pop
pop
add
cli
imul
jle
mov
jno
adc
pop
dec
xchg
stos
xchg
cmp
jne
sbb
rcrb
mov
mov
sbb
aam
mov
movsb
pop
mov
dec
lahf
aaa
repz
aas
pop
in
cmpl
mov
xor
dec
jg
gs
sahf
adc
rcr
jae
out
ds
jb
inc
push
sbb
stos
out
cmpsl
and
xchg
xchg
pop
push
push
cld
mov
sub
mov
in
mov
sbb
add
hlt
and
leave
in
pop
fdivrl
pop
decb
sbb
and
stos
sbb
stos
mov
adc
mov
xchg
dec
pop
push
cmp
jge
pop
xor
push
stos
es
cmp
xor
push
in
xor
stc
xor
add
cmp
push
sti
pop
add
fimuls
ds
jmp
push
add
hlt
ror
xchg
fstpl
push
sub
jnp
fisttpl
jg
mov
rcll
sbb
inc
dec
stos
jbe
xor
scas
inc
inc
dec
cmpsl
in
dec
push
dec
jno,pt
hlt
sub
jecxz
push
repnz
pop
push
movb
or
inc
loope
fisttps
ficomps
imul
inc
push
and
sbb
scas
sbb
push
inc
jecxz
xchg
out
jl
mov
movsl
nop
pop
loopne
fs
mov
pop
push
mov
sbb
fcoms
repnz
cwtl
pusha
pop
or
rclb
das
mov
cmp
jg
insb
and
xor
add
and
and
or
dec
ja
shlb
test
cltd
cmc
xlat
ja
ljmp
daa
sbb
push
push
adc
mov
pop
pop
adc
scas
jae
mov
adc
mov
mov
inc
mov
sti
test
das
jne
cwtl
jmp
add
sbb
push
out
jge
idiv
call
sarb
xchg
rcll
adc
movb
movl
adc
les
or
orb
jne
mov
inc
add
sub
mov
xchg
lret
mov
inc
jecxz
xchg
sbb
das
and
dec
inc
sbb
scas
int3
cltd
or
adc
and
ss
and
loop
adc
not
movsl
pop
dec
push
dec
loopne
push
sti
or
ljmp
test
icebp
sbb
iret
je
rorb
mov
pop
in
mov
aaa
lahf
sub
jb
xchg
mov
jmp
les
sbb
or
mov
aad
loope
dec
ja
xchg
pop
jl
rol
xlat
push
inc
nop
cmp
cmc
out
xor
sbb
inc
in
pop
and
jmp
fildll
stos
inc
fidivl
dec
xor
test
scas
pushf
push
test
xchg
and
pop
mov
and
sahf
cmc
leave
push
xchg
cmp
fwait
and
jbe
xchg
adc
rcrb
dec
cs
stos
mov
mov
jge
cltd
jne
and
sbb
mov
int3
cmp
jbe
fwait
cmp
cmc
pop
push
jmp
lock
mov
xchg
hlt
fwait
jbe
sbb
repnz
jmp
add
test
loope
cmp
popf
push
mov
xchg
inc
xorb
push
mov
cmpl
pop
pushf
mov
push
loopne
xor
add
into
lea
and
jp
add
hlt
fidivrs
pop
xchg
shll
out
or
or
and
jle
xor
push
inc
push
int3
in
adc
push
push
mov
or
hlt
and
mov
es
mov
pushf
jae
bound
dec
push
or
pop
sahf
push
fidivrs
push
stos
sbb
movsl
mov
pushf
clc
jmp
ss
sbb
shl
subl
into
xchg
lahf
and
push
fwait
sbb
ja
rcl
popf
outsb
stos
loope
shlb
repz
outsl
cltd
mov
in
hlt
lea
outsl
and
xlat
push
adc
fwait
inc
cld
daa
pop
dec
lods
sub
and
cmp
and
dec
jb
mov
adc
je
push
and
sub
mov
sub
add
es
add
jp
push
sbb
jg
xor
jbe
dec
cmp
mov
aam
xor
movsl
and
out
pop
mov
fcmovbe
push
mov
mov
xor
xchg
xchg
sahf
and
adc
inc
xchg
mov
sbb
les
jne
xchg
bnd
xchg
sti
mov
mov
pop
add
mov
mov
adc
xor
rorl
push
test
cmp
or
sbb
xor
in
jb
test
mov
daa
mov
xor
jae
adc
xchg
pop
int3
fsubrs
jns
lods
repnz
xchg
sahf
or
add
xor
pop
and
test
inc
jmp
sub
cltd
pop
es
and
shll
pop
sub
sbb
pushf
std
mov
mov
sbb
stc
push
pop
fildll
or
test
sbb
sub
adc
cs
or
mov
cmc
imul
adc
mov
push
jp
rcrl
leave
out
pop
cmpsl
iret
sbb
mov
and
in
rolb
push
mov
push
mov
mov
imul
fs
cmp
addb
inc
or
and
xor
lock
pop
adc
rorl
sub
das
into
push
sub
xchg
pushf
or
loopne
xchg
sub
xor
push
insl
out
cmp
sub
adc
inc
adcl
ficoml
int3
push
pusha
and
adc
pop
and
and
pop
jmp
shlb
jge
sahf
jmp
sarl
rcrb
cld
roll
push
pusha
movsl
push
pop
mov
cmp
pop
jo
adc
dec
sub
popf
adc
lret
out
pop
stc
inc
and
and
mov
xor
or
in
movsb
pop
movsl
push
mov
into
push
ss
nop
xchg
shlb
popa
dec
mov
mov
enter
xchg
outsl
sub
sahf
xchg
dec
fdivrs
movsb
lods
add
xchg
frstor
idiv
shrb
hlt
scas
sahf
pop
or
mov
ja
rclb
lret
mov
mov
adc
sbb
lock
or
push
shll
xor
sub
and
movsl
adc
cs
clc
jno
jbe
mov
cld
push
sbb
sbb
aaa
and
in
sbb
xor
or
and
and
in
sbb
push
in
fwait
or
shrl
sbb
iret
mov
lahf
or
outsl
popa
sbb
mov
lods
sbb
or
int3
sbb
les
and
sbb
add
mov
and
pop
lods
bound
xor
movsb
xchg
and
lds
sbb
mov
mov
and
mov
cwtl
xchg
sbb
and
mov
sbb
lret
in
lahf
ss
xor
mov
testl
or
std
or
xor
mov
outsl
push
add
das
in
jnp
mov
sbb
lahf
mov
movsl
jns
cltd
and
xchg
cmc
loopne
fistl
mov
lcall
mov
and
sbb
popf
xor
sbb
add
adc
int3
and
scas
int3
mov
pop
xchg
adc
ja
pop
das
in
mov
lea
loopne
mov
and
mov
int
dec
pop
loopne
lret
sbb
fcoml
int3
mov
fdivs
pop
mov
std
and
cld
mov
or
or
add
mov
scas
fistps
rcrb
or
and
mov
adc
sbb
xchg
push
or
fldl
fists
sbb
mov
pop
and
and
push
lea
or
or
sti
sbb
fisubl
or
sbb
mov
adc
xchg
mov
sbb
scas
clc
sbb
fwait
or
jl
in
add
or
out
or
xchg
subb
jle
or
add
aam
jbe
push
fnstsw
pop
sbb
fadds
pusha
pop
arpl
sahf
incl
aaa
xchg
dec
cmp
ss
and
pop
fbld
loop
sub
mov
das
outsb
roll
test
ja
movsl
add
sbb
adc
adc
test
jl
test
cmp
sbb
repnz
in
jecxz
dec
icebp
repnz
data16
xchg
inc
push
or
in
cmp
adc
add
sti
scas
mov
pop
fdivrs
xchg
sub
fstpl
push
and
out
es
xor
fcomps
xor
xor
sbb
hlt
fcompl
or
pushf
push
and
or
sahf
mov
repnz
cmpsl
inc
adc
adc
dec
inc
pop
mov
mov
inc
pop
mov
or
xor
pop
push
cmpb
pop
out
sbb
hlt
sub
es
jecxz
dec
bound
push
repz
out
repz
jg
xlat
xchg
xchg
inc
sbb
jae
leave
jl
mov
push
cmpsl
push
out
pop
ljmp
mov
pop
xchg
iret
int3
mov
inc
dec
mov
fmuls
pop
push
sbb
or
jbe
dec
shlb
mov
icebp
or
push
adc
xchg
xchg
hlt
ja
loopne
fndisi(8087
inc
inc
lods
sbb
stos
dec
jl
push
out
or
aaa
and
scas
push
lret
je
dec
shrl
inc
cmpsl
outsl
inc
push
adc
xor
in
es
xchg
or
inc
push
lock
inc
stos
pushl
imul
rep
mov
mov
scas
or
arpl
jb
cwtl
cltd
and
pop
mov
cmp
sbb
pop
mov
aam
adcl
repnz
sbb
xorl
jnp
sbb
pop
rcr
jo
das
jo
gs
add
rolb
jae,pn
dec
rep
loop
or
outsl
adc
scas
sarl
mull
in
enter
insl
adc
aas
int
in
pop
movsl
sbb
push
and
imul
fsubr
adc
adc
decl
fimull
fdivs
aam
lcall
mov
and
scas
or
jno
inc
sbbb
test
enter
cld
inc
pop
and
hlt
pushf
out
or
in
in
mov
adc
insb
rdtsc
cmpsl
subb
jno
scas
xor
cmp
mov
lret
int3
popf
pop
int3
jne
mov
and
dec
mov
cwtl
pop
sbb
push
cs
insl
insl
data16
cwtl
fsubrs
adc
mov
sbb
mov
sub
xchg
mov
push
adc
pop
sahf
sbb
adc
daa
pop
pop
shll
pushf
aam
aas
lret
push
repnz
jg
lret
add
mov
fs
mov
and
inc
aas
adc
cmpsl
rolb
push
xor
xlat
call
pop
xlat
and
ja
fldt
repz
jg
or
orl
push
ret
push
xor
xchg
adc
mov
out
mov
mov
cmc
sbb
inc
dec
insl
jo
in
jo
shlb
aad
sub
insl
rclb
or
sahf
or
dec
and
push
jae
fcmovnu
push
negl
sbb
xchg
push
shr
mov
adc
mov
pop
mov
loope
push
sub
clc
ror
enter
sti
or
sbb
in
fldt
outsb
mov
mov
enter
push
dec
adc
mov
push
pop
pop
xchg
stc
mov
and
dec
popf
out
in
xor
jle
push
fdivrl
adc
mov
stc
cmpsb
aam
out
ret
jg
fucomi
inc
jnp
repnz
mov
xchg
insb
adc
mov
or
inc
je
push
int
aas
icebp
pushf
and
lret
repz
cmp
ss
movq
inc
pop
adc
stos
aaa
daa
ljmp
arpl
pop
divl
xchg
shrb
lock
add
pop
add
in
fnsave
ds
and
mov
sti
mov
sti
fdivrl
in
push
cltd
testb
aam
xor
xchg
lock
cltd
andb
dec
push
decl
mov
xchg
insb
adc
icebp
and
mov
es
lcall
ss
insl
jbe
and
or
or
fmul
daa
add
sub
push
or
adc
cwtl
ja
pop
push
into
push
hlt
stos
sub
js
sub
mov
mov
in
pop
mov
ss
mov
insl
dec
jo
dec
out
mov
stc
mov
push
mov
or
jo
xchg
sbb
xorb
xchg
mov
negl
jne
xor
sbb
cltd
popa
sbb
mov
adc
lret
adc
xorb
push
das
sbb
and
pop
in
jmp
add
popf
jge
xor
and
or
mov
sub
pop
mov
mov
jg
scas
sti
negb
pop
fiadds
mov
push
into
mov
sbb
scas
fildll
imul
and
hlt
adc
mov
jl
push
push
pop
lods
or
outsb
popf
mov
ss
std
lods
sbb
and
std
xchg
sbb
push
notl
adc
in
mov
iret
pop
xchg
mov
scas
xchg
fistps
cld
mov
push
sbb
test
xor
lcall
xor
mov
movsb
mov
popa
in
mov
hlt
mov
mov
sbbl
xchg
cltd
and
das
sbb
jns
mov
cmp
mov
cld
or
sbb
sbb
or
xchg
push
movsb
testb
adc
sbb
out
xchg
ficomps
lret
popf
adc
sub
jns
fwait
adc
pop
adc
lcall
mov
inc
loopne
mov
fsubrs
lcall
dec
cs
fists
pushl
ja
lahf
iret
mov
fwait
jge
push
sbb
sysret
mov
mov
mull
notb
mov
xor
or
xchg
push
pop
mov
pusha
xchg
sbb
or
sbb
xor
sbb
and
add
fs
xchg
divl
mov
cmp
rcll
imul
leave
roll
mov
fidivl
inc
aaa
or
cmp
adc
push
mov
pop
adc
xor
cmp
jbe
pop
imul
push
out
inc
ret
fcmovnu
add
arpl
jp
fmuls
sub
sbb
sub
sahf
loop
lds
xor
sbb
orl
add
push
or
adc
hlt
jae
adc
data16
add
xchg
mov
jb
lahf
jge
mov
mov
sbb
imul
jle
push
mov
mov
outsl
in
and
cmp
stos
test
inc
xor
mov
xchg
jo
and
icebp
and
mov
add
repnz
sbb
lods
out
cmp
fwait
out
mov
push
jl
loope
jecxz
mov
and
js
cltd
xchg
loope
es
adc
push
sub
scas
hlt
or
or
hlt
cmpsb
xor
and
cmp
adc
and
shl
push
fucomi
add
and
cmpl
popa
push
cwtl
mov
push
insl
aas
push
mov
cmp
ficomps
push
scas
xchg
xor
mull
mov
and
jno
push
fsubl
push
xchg
jge
sahf
sbbl
adc
mov
mov
pop
cmc
inc
cmp
or
mov
mov
sub
stc
push
jmp
mov
or
adc
repnz
jg
cmp
xor
lds
jmp
ficoml
adc
je
into
inc
outsb
into
je
and
push
sub
push
mov
or
xor
push
push
adc
mov
fwait
ret
pusha
add
jge
cmp
and
pop
pop
subl
jno
mov
sbb
push
mov
iret
sbb
out
dec
test
lret
pop
scas
adc
mov
das
add
jge
xchg
test
xor
dec
or
inc
lock
adc
leave
sub
in
sub
add
jmp
lret
jbe
mov
icebp
hlt
add
shrb
movb
nop
hlt
outsb
stos
iret
inc
stos
xor
mov
jno
add
sbb
cmp
and
and
pop
icebp
fnsave
hlt
push
sub
sbb
in
pop
xchg
sbb
adc
jg
mov
pop
xlat
push
fsubl
jge
mov
sbb
repnz
xchg
push
adc
mov
jl
dec
lods
sub
pop
dec
orl
xor
aam
xchg
pop
in
fwait
jns
std
inc
outsl
xchg
and
jle
adc
movsb
fucomp
adc
shr
xor
insl
aam
sbb
cli
das
push
repnz
int3
lahf
jbe
push
mov
inc
add
mov
stc
and
push
mov
adc
mov
popf
jl
sbb
push
sub
insb
imul
jle
sarb
mov
ja
push
leave
int3
or
lret
scas
call
add
mov
shll
jl
mov
lock
pop
dec
inc
cwtl
call
sbb
adcl
das
dec
adc
mov
fs
das
fldenv
push
and
dec
cmp
push
leave
mov
mov
leave
in
cmp
push
dec
push
dec
aam
shll
int3
in
dec
jb
outsl
pop
add
es
ja
sub
loopne
dec
mov
push
ds
out
dec
adc
test
push
out
adc
mov
sahf
mov
lret
jne
leave
mov
sub
add
imul
aam
jp
cli
xchg
and
icebp
dec
push
mov
xchg
or
adc
ret
sbb
loop
push
adc
adc
xchg
mov
hlt
fldcw
jne
adc
movsb
mov
and
mov
ret
mov
scas
push
pusha
aam
cmp
xor
mov
sbb
inc
mov
fwait
bound
sahf
filds
cmpsb
push
mov
add
xorb
lods
insb
mov
pushf
mov
xchg
outsb
dec
inc
mov
test
mov
out
cwtl
hlt
xor
jo
ds
lods
stos
stos
div
bound
dec
add
adc
mov
push
sub
rcll
pop
ja
ret
jmp
and
push
imul
lret
fnstcw
sbb
rcll
xchg
pop
xchg
adc
jp
sbbb
mov
cs
xor
mov
and
mov
movsb
pushf
imul
push
and
mov
push
shr
mov
movsb
mov
xchg
xor
sbb
call
scas
and
pop
xchg
or
inc
xchg
push
mov
stc
shlb
out
adc
push
sbb
jle
push
fcoml
into
xchg
das
cmp
mov
icebp
fdivrs
into
stc
inc
adc
movsl
shrb
cmpsl
jmp
jo
adc
and
xchg
and
lods
std
cmpsb
mov
mov
xor
and
and
pop
pop
or
sub
hlt
mov
fimuls
pop
mov
jmp
insb
loop
out
movl
scas
bound
jle
mov
imul
fmuls
hlt
shll
xchg
mov
es
clc
xchg
sarl
hlt
xor
dec
mov
adc
add
and
fadds
fidivrs
fisubrs
into
sbb
and
xchg
xchg
cwtl
cmc
mov
dec
out
jo
adc
je
mov
or
push
test
out
push
or
insl
push
push
setbe
xchg
cmpl
in
pop
loop
jle
sub
push
xchg
push
data16
and
sub
and
mov
add
xchg
pop
push
sub
and
scas
cmpsl
cmp
inc
xchg
mov
js
push
pop
icebp
jge
movsb
cmp
pop
inc
cmc
jle
pop
mov
in
cmp
jle
inc
mov
loopne
sub
cltd
xchg
add
sub
imul
sti
test
ret
or
lock
mov
xor
jo
push
loope
hlt
jae
xor
clc
dec
lcall
add
and
push
int
repz
stos
movb
enter
inc
xor
sbb
or
fdivrs
xchg
movsb
mov
adc
mov
jo
dec
push
ret
bound
hlt
stos
in
inc
lcall
in
add
orb
lret
out
hlt
xor
out
xchg
mov
push
jecxz
fisttpll
sahf
bound
xchg
mov
cmp
into
push
pop
mov
mov
sub
incl
dec
xchg
iret
fistpll
mov
stos
and
adc
mov
inc
sub
push
shlb
loop
insb
inc
jbe
mov
and
idivb
or
add
test
out
icebp
ss
dec
lds
call
lcall
push
or
or
dec
mov
sub
fs
lock
icebp
sub
loopne
inc
sar
mov
pop
int
outsl
push
dec
sbb
jg
jmp
stc
sub
popf
loope
call
and
scas
sbb
or
stos
add
sti
cmp
push
and
sar
in
movsb
adc
sbb
jb
xor
rcll
leave
mov
bound
out
push
add
mov
push
xchg
jnp
cmpl
das
mov
mov
pop
dec
outsl
lret
push
xor
xchg
xor
jnp
addr16
push
arpl
jl
hlt
add
push
popf
jl
lret
jbe
jmp
and
sbb
aas
inc
pop
push
movl
xchg
or
xchg
leave
loope
push
jp
cltd
xchg
das
popa
pushf
pop
adc
and
jge
sarl
shll
test
leave
adc
jno
or
xchg
adc
dec
fisubs
icebp
movswl
sbb
sub
test
cmp
and
outsb
enter
dec
sbb
xor
int3
and
outsl
adc
and
sbb
push
adc
lahf
fists
sarb
mov
add
out
pop
inc
xlat
hlt
adc
mov
jae
vaddsubps
es
lods
push
and
pushf
in
jle
xchg
lea
push
and
lahf
in
scas
jae
je
arpl
push
mov
scas
push
lds
inc
or
pop
lret
sbb
add
leave
xlat
sbb
mov
and
cmp
push
adc
and
lret
cli
arpl
movsb
scas
xchg
and
setno
imul
push
inc
mov
lret
jmp
cli
mov
jae
adc
repnz
inc
or
sub
jle
fimuls
inc
idivl
popa
loope
call
int3
cmp
out
mov
mov
mov
push
xlat
cld
lds
js
cmp
push
xor
shrl
or
push
dec
adc
xchg
pop
pop
xchg
push
outsl
gs
addr16
ja
scas
orb
cmp
and
and
leave
stos
fs
push
jbe
scas
jle
bound
mov
scas
shll
xchg
pop
fidivl
sti
stc
adc
gs
jae
cli
inc
ja
fwait
jne
cld
fwait
in
das
inc
or
ljmp
iret
sbb
sub
mov
add
adc
pop
adc
sbbb
adc
adc
sbb
adc
jle
arpl
loopne
stos
dec
rcll
mov
mov
xchg
inc
cmc
add
xchg
cmp
adc
lods
pop
sti
jmp
ja
inc
xor
push
mov
in
dec
pusha
jae
scas
test
adc
dec
fcomp
push
mov
bnd
or
ljmp
mov
xor
or
mov
movsl
mov
cld
mov
push
push
sub
xchg
jno
mov
jno
jl
testl
cwtl
pop
xor
lock
popf
pop
jmp
sub
jae
test
inc
ds
das
movsl
sbb
xor
mov
out
fildll
adc
mov
sbb
out
jmp
push
dec
sbb
sbb
divl
sbb
xchg
jno
shlb
sbb
add
test
push
int
mov
subb
movsb
adc
mov
fdivrp
cmp
mov
jge
push
inc
jmp
sbb
movsl
les
out
mov
push
pop
ss
insb
jbe
leave
fsubrs
push
mov
int3
sbb
jg
or
xchg
ret
das
repz
jge
add
scas
cmc
ret
ret
push
lea
cmp
mov
and
and
jl
jge
adc
or
cwtl
mov
or
adc
arpl
aaa
push
jnp
sahf
jg
stc
adc
clc
aaa
hlt
mov
mov
xchg
jae
mov
stos
icebp
and
mov
xchg
pop
sti
mov
adc
inc
imul
jbe
negl
mov
xchg
pop
cmp
mov
sbb
and
pop
call
adc
daa
jae
cmc
hlt
popf
dec
in
nop
adc
fldcw
pusha
loope
sub
push
das
loope
dec
and
mov
test
adc
ljmp
imul
push
inc
xchg
pop
or
mov
mov
push
pusha
jp
xchg
or
mov
loop
xor
daa
cmp
sbb
xlat
cwtl
xorb
push
jne
jge
xchg
iret
in
aas
inc
call
push
jmp
push
enter
push
fadds
andb
and
jmp
mov
idiv
sub
sbb
pop
lcall
lret
and
or
sbb
es
mov
sahf
das
pop
sub
push
xor
sbb
push
push
xchg
mov
xchg
mov
add
mov
push
jle
mov
inc
adc
data16
or
lret
mov
xor
cmp
loop
cmp
lret
jae
subb
hlt
imul
es
adc
call
and
fcomps
jae,pn
xor
jl
scas
daa
les
mov
push
test
emms
hlt
test
iret
leave
loope
dec
adc
or
dec
mov
add
xor
sub
mov
shlb
inc
lds
test
and
add
sbb
stos
popfw
aas
add
sbb
push
or
rclb
adc
mov
sub
out
les
les
icebp
pop
mov
hlt
inc
cmp
jae
cmp
andl
cmp
inc
aaa
jge
test
cltd
cltd
xchg
sti
pop
in
movsl
loop
or
shll
jae
repnz
cmp
cmp
into
iret
addr16
xchg
ds
test
push
rep
aas
xchg
mov
das
leave
sbbl
xlat
sub
inc
and
outsb
xchg
mov
addr16
sub
or
cmpl
mov
js
bound
pop
push
jle
cmpsb
hlt
adc
fisubrs
les
sub
fs
movsl
pop
adc
rcl
dec
mov
movsb
dec
mov
and
aam
jo
inc
and
push
clc
and
out
lock
pop
push
jns
adc
sub
mov
sub
addr16
jl
add
mov
jge
shrb
popf
mov
dec
add
sbb
xor
rclb
ljmp
outsl
aad
pop
lods
cwtl
shl
ret
loop
and
lea
aas
xchg
stos
out
hlt
movsl
xchg
fisttpl
movsl
out
xor
hlt
mov
mov
dec
push
jmp
sbbl
mov
mov
outsl
mov
stos
lret
xchg
add
mov
cwtl
hlt
pop
jo
adcb
clc
push
adcl
ss
sbb
imul
fists
adc
in
inc
push
cld
sbb
test
sub
sti
addl
rcll
mov
mov
int3
hlt
push
push
cwtl
iret
repnz
loop
xchg
xchg
jmp
pop
fiadds
arpl
cmpsb
jae
xacquire
xchg
pushf
sub
xor
lds
or
stos
xlat
jmp
cld
xchg
mov
lods
into
adc
cmp
aas
push
popf
test
xor
ss
or
pusha
popf
adc
mov
fsubrs
or
jl
lock
ret
imul
adc
push
and
push
pushf
and
out
jmp
addr16
jne
iret
xlat
or
cmp
jns
add
dec
adc
clc
aaa
dec
cli
adc
mov
in
or
mov
mov
jae
dec
addb
rol
outsb
jb
shlb
pop
xchg
ret
adc
jns
lods
mov
mov
cmc
outsl
movsl
std
hlt
jge
sti
mov
adc
adc
xlat
rorl
mov
sbb
jne
inc
cmc
and
inc
pusha
and
jge
lods
hlt
mov
dec
fldenv
lret
les
sbb
adc
push
sub
inc
inc
add
cwtl
hlt
rol
xlat
mov
mov
cmp
xor
jle
movsb
push
jns
fs
in
shl
pop
fs
mov
hlt
jno
stos
divb
sub
fstpt
jge
aaa
push
mov
subl
push
adc
jge
cmpsl
addr16
in
ds
jno
push
hlt
mov
add
mov
das
dec
pop
test
leave
popf
sub
xchg
mov
adc
jns
push
cwtl
mov
mov
pop
mov
popf
loop
lret
mov
and
add
cmp
fisubs
clc
inc
inc
andl
inc
push
out
mov
jno
outsb
das
sbb
cmpl
mov
stos
or
xor
iret
adc
mov
jbe
inc
out
adc
adc
ret
xor
adc
enter
push
adc
push
das
repz
enter
and
cmpsl
mov
lahf
rorb
les
dec
mov
stos
outsb
cwtl
add
rcrl
jge
xlat
or
or
repz
lahf
cmpb
push
and
add
cltd
push
lret
bound
mov
outsb
push
mov
jl
push
or
push
stos
or
test
es
bnd
xchg
adc
repnz
hlt
pop
call
shlb
jle
push
mov
repnz
jno
mov
push
mov
scas
lods
clc
ds
movsl
and
sbb
push
loope
leave
pop
mov
subl
and
push
mov
ds
or
jae
adc
addr16
scas
push
push
rorb
mov
sahf
dec
push
dec
sub
gs
xchg
push
add
in
sbb
adc
sbb
xchg
xlat
lods
mov
adc
dec
sub
adc
adc
ffreep
mov
mov
fildll
aaa
push
mov
ss
and
dec
lret
test
adc
cmp
push
cs
mov
fdivl
jns
inc
mov
icebp
adc
cmp
aaa
lret
jae
mov
in
addr16
sbb
mov
scas
out
lahf
dec
mov
dec
clc
fcomp
out
incl
xchg
iret
mov
ror
push
lods
mov
mov
in
insl
mov
shlb
sbb
adc
test
imulb
mov
sti
jl
adc
xorb
push
push
das
xor
stos
mov
or
cmp
sub
xor
push
cmp
or
clc
je
xchg
stos
test
adc
in
or
and
das
sub
xor
dec
gs
adc
inc
sbb
cmc
in
outsb
movsl
pop
aam
jne
bound
out
xchg
pop
mov
loop
movsl
repnz
and
mov
faddl
cmp
adc
in
das
inc
and
outsl
movsl
inc
pop
mov
and
pop
jl
int3
mov
adc
mov
pop
and
jg
xchg
push
xor
push
and
hlt
jmp
out
lock
add
insl
adc
aam
xor
fwait
clc
ds
lods
in
mov
dec
lret
call
push
lds
pop
mov
mov
jge
cmpsl
jae
cmp
mov
rorb
fabs
shll
sbb
test
push
sub
stos
lods
pop
daa
inc
insl
ja
jne
sub
mov
orb
mov
gs
mov
mov
mov
pop
or
add
and
icebp
add
hlt
int
push
mov
mov
rclb
adc
notb
test
in
pop
push
loope
pop
mov
xchg
pop
int
jge
repz
outsl
fwait
sbb
jl
std
adc
loope
adc
add
addr16
mov
xor
xchg
movsl
rcr
inc
stos
roll
jnp
mov
pop
mov
les
leave
loope
adc
sti
lcall
das
inc
cmpsl
hlt
clc
cmp
adc
jl
rcrl
xor
xchg
in
rolb
sbb
into
inc
pushf
adc
sti
xchg
out
rclb
mov
cmp
push
xor
and
jl
mov
sahf
jno
xchg
push
mov
roll
jmp
jge
repz
mov
xchg
dec
adc
or
dec
shl
push
sbb
movsb
stc
fisubrl
jge
jns
out
jb
cmp
popa
mov
cltd
test
xchg
hlt
adc
out
adc
lea
dec
dec
repnz
jge
jp
adc
mov
and
leave
lock
je
add
call
icebp
inc
xor
mov
ret
add
fdivs
mov
adc
xor
outsl
push
nop
lea
adc
ja
cmp
sbb
sbbb
mov
addr16
mov
inc
sbb
xchg
out
push
sub
xlat
xchg
enter
mov
push
mov
push
mov
fidivl
es
xchg
test
pusha
jno
xchg
out
rcrb
inc
inc
call
mov
into
push
hlt
and
push
cli
or
pushf
les
mov
in
mov
mov
push
stos
inc
test
daa
sub
pop
iret
xchg
push
push
outsb
or
jno
ss
mov
sub
cs
sub
mov
pop
hlt
mul
dec
cltd
push
sbb
inc
jl
insl
movsl
movsb
cmp
int
xchg
notl
mov
add
mov
cmpsl
mov
and
or
clc
jno
cwtl
les
xor
sub
sbbb
aad
popf
daa
push
popa
adc
stos
rcl
fildll
aad
push
inc
nop
dec
cmpl
push
das
cwtl
hlt
fwait
mov
pop
dec
mov
popa
add
imul
shlb
call
call
adc
mov
pop
enter
cltd
pop
int3
or
cli
xchg
hlt
push
pop
notb
aam
adc
push
or
xlat
aad
test
or
add
inc
cld
dec
jle
rol
adc
push
addr16
idivl
rolb
mov
outsl
rcrl
imul
int3
pop
cmp
push
icebp
sbb
or
sub
push
cmpsb
rcr
mov
hlt
mov
pop
jge
push
pop
inc
in
mov
sub
dec
and
pop
mov
in
in
cli
icebp
adc
arpl
fdivs
cmpsl
mov
pop
sbb
icebp
fsubs
mov
push
xchg
adc
xchg
int3
clc
push
sbbb
ljmp
icebp
jmp
andb
cmp
stos
or
cmpsl
filds
mov
push
sbb
sub
xchg
and
cmpsb
idiv
aas
xchg
dec
adc
jge
and
jge
aaa
sub
out
mov
mov
cmp
stos
and
and
pushf
mov
cld
lods
jl
mov
sub
mov
xchg
xor
shll
jg
push
dec
imull
add
scas
bound
mov
in
mov
xchg
add
cs
xor
arpl
inc
adc
fimull
push
jl
in
mov
shrb
mov
jg
repz
push
cmp
sbb
xchg
notl
cs
enter
push
add
sarl
sbb
jae
push
aas
addr16
icebp
mov
hlt
pop
adc
in
es
adc
mov
inc
sub
movsl
cltd
adc
push
inc
mov
inc
in
fs
jns
jmp
mov
push
lds
xor
and
inc
lcall
ret
inc
push
jae
lds
xor
pop
cwtl
jmp
aam
les
clc
addr16
mov
and
cli
repz
or
je
sub
mov
sub
cmp
xor
push
mov
hlt
mov
jb
fcmovb
mov
jg
push
sahf
sub
out
inc
or
dec
sarb
jecxz
push
popa
lods
add
out
or
sbb
ret
aaa
ror
inc
inc
repz
mov
and
repnz
adc
xchg
push
loopne
dec
out
add
mov
xchg
jge
jmp
stos
out
scas
inc
dec
xchg
call
test
xlat
push
sub
cmp
in
pop
and
mov
pop
cmp
push
pop
lods
shlb
bnd
mov
jle
mul
mov
cmpsl
xchg
sub
cli
pop
sub
or
cmp
es
ret
jno
fcomip
mov
test
int
xor
xchg
adc
dec
push
sub
pushf
push
adc
mov
adc
pop
xchg
cli
xchg
pop
ret
notl
shlw
add
inc
insb
int
mov
ds
cmp
popf
mov
lret
pop
pop
adc
push
ja
jmp
stc
addr16
xchg
dec
jge
push
push
mov
xor
mov
cmpsl
mov
sbb
lock
or
sub
test
cmp
imul
aad
or
sub
int3
bound
leave
dec
test
mov
std
pop
mov
popf
cmp
cmp
sahf
push
pop
add
mov
or
cmp
cmp
scas
cs
push
sbb
bound
xchg
leave
mov
jge
push
jo
or
mov
loope
mov
adc
dec
xchg
mov
adc
repnz
scas
jbe
jnp
or
push
test
lods
lret
mov
and
cmp
mov
sbb
imul
enter
idivb
add
cwtl
nop
frstor
stos
cmp
aaa
xchg
inc
mov
shlb
sub
sahf
sbbb
sbb
out
aaa
mov
mov
xor
xlat
test
pop
dec
xchg
jg
adc
cld
xchg
dec
stc
inc
test
mov
ret
jl
das
sbb
test
scas
scas
notb
aam
stos
icebp
cli
shll
fistl
pusha
pushf
ljmp
jae
and
sub
mov
popf
movsl
das
jg
mov
dec
clc
mov
cld
sub
gs
cs
fdivs
mov
jg
pop
fists
inc
sbb
sti
dec
imul
push
xlat
mov
rcrb
enter
and
dec
mov
je
cwtl
dec
or
dec
xchg
int
adc
sbb
fildll
repz
lcall
pop
xchg
sbb
dec
movsb
inc
pop
mov
stos
lods
xchg
mov
jl
xchg
movsl
and
sbb
or
js
cwtl
negb
out
add
pop
ret
out
insl
sbb
gs
or
sub
add
movsb
sbbl
decb
rorb
cmp
mov
mov
and
mov
mov
jno
mov
ret
add
in
xchg
inc
test
test
inc
fistps
or
fisubl
sub
icebp
mov
shlb
in
adc
pop
popf
lret
xor
cmp
push
andl
and
xchg
xorl
mov
leave
std
pop
and
inc
hlt
add
xlat
addr16
fmulp
mov
aas
add
adc
xor
out
add
arpl
and
pop
sub
xchg
rol
popf
ret
addr16
je
jle
fcomps
gs
xor
jbe
xchg
sbb
jns
lret
cmp
sub
push
fxch
fdiv
xchg
jp
cmp
push
shr
hlt
pop
mov
mov
or
bnd
sub
push
adc
pop
or
sub
xor
fwait
sbb
mov
out
popf
pop
imul
sub
sub
dec
lea
sub
xor
lds
add
pop
adc
xchg
ljmp
ja
out
pop
stos
push
rcr
in
lret
lahf
xchg
leave
hlt
cmp
repnz
dec
enter
test
push
ret
andl
pop
movsl
cmc
aam
iret
loope
sub
insl
mov
push
shrd
cmpsb
push
leave
mov
sbb
dec
ret
xchg
fnstenvs
push
pop
xor
shrl
pop
cmp
iret
or
mov
xchg
scas
push
gs
push
jmp
mov
or
stos
sarb
jbe
push
nop
hlt
jmp
mov
mov
cmc
ret
mov
and
icebp
sbb
and
jae
lahf
shl
ds
xchg
icebp
pop
and
aad
mov
cltd
sbb
es
fsubs
pop
negl
add
orl
pop
push
insl
mov
mov
call
sbb
mov
ret
in
scas
ds
xlat
sarl
cmpsl
popf
mov
mov
mov
adc
and
xchg
mov
xlat
and
je,pn
mov
stos
mov
out
jecxz
out
sbb
mulb
daa
mov
jo
addr16
sbb
fwait
push
and
xchg
sbb
adc
mov
jg
adc
xlat
push
fucomp
call
sbb
enter
jmp
stc
adc
jb
pop
cmp
ljmp
das
push
jnp
mov
pop
rcrb
gs
les
sahf
inc
pusha
bound
push
inc
jle
pop
xchg
mov
and
xchg
push
jae
fwait
mov
mov
jb
or
icebp
jge
rol
ja
out
inc
std
pop
push
mov
in
out
cmpsl
adc
cmp
cmp
add
int
jbe
sbb
mov
sbb
aaa
push
or
adc
dec
sahf
loope
jbe
fsubr
loop
fwait
cmc
mov
mov
adc
pop
and
fimuls
add
and
jb
jbe
push
xchg
fildll
xor
adc
pop
cmp
je
sbb
pusha
push
icebp
mov
add
cld
mov
cld
or
lea
adc
movb
add
mov
arpl
adc
and
push
insl
shlb
and
sub
pop
stos
ret
int3
sahf
inc
mov
inc
je
cmpsl
mov
push
cld
cmp
pop
mov
sbb
fimuls
mov
das
push
and
and
xchg
sub
push
mov
xchg
adc
cmp
and
inc
dec
out
inc
call
pop
add
sub
cwtl
sub
xchg
xchg
loope
addb
rorb
mov
repnz
sti
cmp
mov
adc
jg,pn
clc
aad
pop
jae
ret
pop
cmp
icebp
mov
sbb
sub
add
lahf
adc
test
icebp
testb
xor
jge
mov
cmpsb
pop
shrd
sbb
testb
jecxz
fidivrl
mov
clc
mov
sub
decb
sbb
mov
ja
sbb
mov
xchg
push
rcrb
jb
mov
add
aad
movsl
push
adc
pop
jns
popa
adc
pop
test
mov
jb
pop
adc
jns
iret
jmp
pop
repnz
mov
jae
test
icebp
xchg
and
rcrb
inc
xlat
or
xchg
dec
lret
ljmp
pushf
je
mov
fbstp
repnz
adc
push
in
stos
sub
clc
xor
aad
mov
xor
aaa
mov
pop
push
xor
sahf
jmp
mov
jecxz
adc
adc
or
mov
push
mov
xor
mov
mov
es
mov
mov
xorl
dec
push
data16
push
ret
call
or
sbb
cld
arpl
out
push
xor
rcrl
testb
adc
sub
movsb
jg
ffree
adc
and
xchg
repnz
mov
scas
pushf
repz
pop
and
test
pop
das
cmp
lods
jns,pt
xor
out
loop
cmp
std
xorb
les
int
mov
rcrb
clc
jle
xchg
insb
mov
and
cmp
lods
mov
and
arpl
out
adc
jns
lock
leave
cmp
inc
inc
icebp
sbb
stos
cmp
hlt
xchg
into
out
xchg
dec
je
mov
mov
push
cmpsl
in
mov
mov
push
push
jae
pop
dec
cli
movsb
push
jmp
xor
repnz
mov
xor
push
mov
cwtl
xchg
pop
test
inc
or
adc
inc
cs
pop
cmpsb
lods
lret
repnz
int3
or
aam
xor
popf
sbb
adc
pop
unpcklps
xchg
lods
imul
sub
negb
inc
or
mov
adc
or
idivl
leave
adc
jno
inc
repnz
iret
push
or
ret
sbb
push
hlt
mov
mov
pushf
cmp
pop
cmp
pushf
dec
pop
insb
xchg
inc
gs
outsl
int
pop
inc
jle
or
and
mov
orl
repnz
adc
and
adc
repz
inc
mov
push
cmp
dec
mov
push
sbb
sbb
out
cmp
icebp
cmpsb
add
inc
jp
lret
pop
or
insl
adc
push
addr16
mov
insb
xor
dec
cmp
das
and
subl
jmp
lahf
pop
in
clc
adc
inc
mov
hlt
sub
sbb
xor
pop
mov
movsl
imul
adc
adc
pushf
cmp
push
xchg
mov
lret
das
icebp
cmpsl
and
sub
sbb
adc
shll
in
test
xchg
lahf
cmp
shl
and
dec
mov
xor
lock
push
icebp
adc
cmp
sti
in
xchg
mov
gs
in
and
into
mov
adc
and
cmpsl
mov
push
and
test
add
pop
rcll
hlt
sahf
fstp
rolb
test
push
mov
clc
aas
push
outsl
in
push
leave
adc
imul
mov
jae
jmp
aad
std
cmp
in
or
sbbb
test
jae
mov
sahf
adc
dec
call
hlt
sbb
outsl
pop
and
ret
push
mov
adc
cmp
notl
push
shlb
mov
cmp
add
test
shll
pop
add
shll
xchg
push
sub
inc
test
test
enter
sub
cmp
out
sbb
sahf
sbb
jge
push
mov
sub
lcall
imul
rclb
lods
fs
mov
xor
pushf
and
pusha
sbb
aas
cmp
pop
push
mov
popa
dec
std
sub
push
xor
mov
add
rol
push
push
pop
jbe
pop
out
dec
xchg
addr16
adc
and
or
pop
xor
or
push
movl
push
scas
aas
xchg
add
inc
iret
cmpsb
rclb
xor
xchg
shlb
rol
mov
dec
lcall
rclb
out
shrl
popa
subl
stos
enter
imulb
cs
mov
dec
mov
and
push
push
das
jmp
jbe
sub
xchg
or
loopne
mov
jae
xchg
out
add
cmc
mov
outsl
inc
xchg
and
adc
mov
push
xorl
xchg
int
repz
adc
adc
js
cltd
cs
test
xor
mov
cs
add
sbb
scas
jae
dec
enter
sbb
in
out
add
and
inc
cmp
fnstenv
sbb
aaa
push
inc
push
and
jl
inc
adc
dec
mov
cli
imul
insl
pop
mov
xchg
roll
push
scas
pop
sbb
mov
pop
fwait
jge
mov
icebp
cmp
fsub
mov
test
xchg
or
or
cmp
leave
aad
jbe
out
sbb
lahf
ret
ficoms
mov
xlat
andl
jns
mov
mov
mov
push
pushf
clc
dec
es
fldenv
mov
push
pop
inc
xchg
cmpsl
jae
clc
inc
scas
xlat
enter
dec
sbb
iret
iret
sub
leave
arpl
inc
xchg
sarl
testb
xchg
rolb
push
adc
sub
mov
fildll
in
leave
pop
iret
cli
mov
cltd
sub
adc
or
add
adc
lds
lcall
push
jp
cmp
rorl
cltd
hlt
cmp
out
push
pop
dec
adc
ja
xchg
shlb
jb
xchg
xchg
mov
testl
pop
cmp
int3
sti
test
add
adc
mov
and
adc
out
xchg
test
jb
loope
hlt
pop
clc
fcompl
mov
aad
test
pop
dec
test
xchg
loope
push
and
aam
jle
mov
fcmovnu
loopne
add
inc
xor
test
jl
loop
outsl
push
sub
sbb
fldenv
xchg
pushf
in
mov
cltd
aam
movsb
lods
std
adc
fmul
inc
aaa
fbstp
data16
scas
mov
xor
mov
dec
fcmovnbe
pop
jae
xchg
adc
adc
adc
and
mov
jge
sarb
gs
out
pusha
fstl
fwait
cmpsb
adc
in
or
fwait
out
aas
decl
and
push
and
add
dec
cs
fidivl
push
inc
dec
idiv
aad
adc
insl
cwtl
xchg
pop
inc
loop
and
adc
addr16
sub
push
mov
call
fimuls
cmpsl
popa
jmp
cmp
mov
lcall
xchg
int3
sbb
push
nop
repz
ljmp
and
pop
jbe
aam
mov
icebp
jle
in
shr
rcrb
mov
mov
xor
and
icebp
ja
aas
test
imul
pushf
nop
xchg
pop
clc
sbb
adc
popa
push
add
add
and
fistpl
mov
cmp
out
push
shr
int
ret
mov
insl
xor
out
or
sti
stc
pop
mov
adc
das
jecxz
cmp
dec
cmpsl
je
sub
lea
stc
pop
pop
fmuls
enter
pop
adc
sub
subb
mov
or
xchg
sbb
jnp
inc
push
fimuls
push
fisubrl
pop
in
rorb
ss
in
pop
pop
leave
jl
xor
cmp
dec
lock
stos
sbb
lock
fwait
subl
mov
jo
add
mov
xor
jbe
lahf
scas
pop
sub
rorb
andb
hlt
cmp
aaa
cld
mov
std
xchg
sbb
inc
jmp
add
in
lods
out
lods
iret
or
fsubrs
loope
and
stos
sbb
adc
sub
js
loop
push
xor
cli
mov
or
rclb
mov
ss
sbb
jae
or
jmp
out
out
jne
shl
out
sub
fistps
xchg
jle
xchg
or
cmpsl
mov
pop
adc
mov
dec
jmp
fs
xor
or
sahf
jg
adc
leave
int
lock
mov
mul
add
into
jae
out
dec
mov
cwtl
stos
pop
mov
and
mov
jo
mov
adc
or
push
jl
test
adc
mov
into
sub
xchg
clc
icebp
bound
hlt
mov
dec
lret
push
ret
sarl
cmp
cld
cmc
push
cmp
xor
pop
jl
fbld
ficoml
in
out
jne
hlt
lock
push
hlt
scas
jnp
mov
mov
adc
iret
movsb
sub
je
sub
or
adc
push
cmp
insb
out
xchg
hlt
and
int
pop
jg
pop
test
lods
xor
pop
mov
or
rcrl
call
adc
sub
cmp
add
dec
outsl
mov
les
rolb
hlt
xor
ja
push
pop
mov
bnd
les
inc
aas
dec
call
mov
icebp
lcall
jecxz
xchg
dec
hlt
push
xchg
mov
xchg
scas
jno
and
jl
leave
pop
outsb
sbb
pop
push
adc
in
add
test
aam
push
imul
aas
outsb
cli
cmp
jge
adc
jne
outsl
cld
mov
xor
out
lcall
sbb
xchg
xor
in
sbb
leave
aaa
mov
sahf
pop
fstps
mov
sbb
add
lret
add
sti
push
dec
jmp
and
jg
addr16
xor
sti
xchg
aaa
pop
cmp
roll
or
xor
and
mov
or
mov
loope
sub
xchg
cmp
lcall
or
mov
jno
adc
xchg
pushf
push
inc
sbb
push
push
test
mov
sub
push
insl
mov
push
mov
adc
adc
xchg
or
insb
fists
mov
cmpsl
cmp
das
sub
sbbb
adc
dec
insb
and
or
inc
hlt
jg
cmp
xchg
adc
inc
aad
push
addl
and
idiv
xchg
scas
ja
cmpsl
or
stc
popa
xor
sti
xor
inc
rcl
loope
dec
jns
xchg
lcall
daa
insl
test
popa
es
xchg
push
imul
je
pop
es
xor
outsl
clc
xor
arpl
push
rclb
inc
mov
cwtl
sub
xchg
icebp
or
pop
int
jge
jo
cs
or
addl
push
out
shlb
hlt
stc
sub
mov
out
and
fwait
aam
hlt
push
xchg
add
ror
popa
test
clc
or
sub
sar
adc
rorb
pushf
test
dec
ret
jl
stos
sbb
sub
xor
popl
push
push
je
push
xchg
cltd
rolb
inc
mov
xchg
mov
jg
pushf
addr16
or
add
movsb
repz
push
shll
mov
push
repnz
or
and
mov
inc
outsb
dec
gs
pop
insb
add
call
pop
mov
aam
jecxz
jnp
das
sbb
mov
test
ficoml
pop
inc
movsb
dec
mov
push
push
mov
xchg
xchg
imull
xor
sahf
push
int
sub
arpl
mov
sub
jnp
xor
adc
in
and
popf
sub
xchg
sub
rorb
leave
shll
inc
adc
pop
lock
sarb
scas
fisubl
lret
dec
ffreep
dec
mov
cmpsl
ret
and
push
jns
xor
adc
cwtl
pop
lret
pop
negl
mulb
imul
mov
js
repz
jecxz,pt
movsb
cmp
sub
jg
cmp
xchg
shl
fildll
call
jmp
and
fadds
mov
push
inc
rcrl
lock
bound
arpl
sbb
push
out
adc
dec
or
and
dec
push
jbe
cs
int
shlb
xchg
inc
and
mov
fidivrl
mov
lret
lcall
inc
movsl
push
dec
mull
push
mov
mov
leave
shrl
xor
adc
mov
jb
jns
add
sbb
mov
aaa
lea
cmp
and
stc
rclb
test
aas
jns
mov
pop
adc
add
stos
incb
ljmp
cmp
add
icebp
mov
mov
sub
pop
push
lea
test
jae
dec
push
cmp
xchg
xchg
mov
fnstcw
xlat
hlt
cmp
sub
add
insl
inc
sub
adc
xlat
das
push
hlt
maxps
adc
rolb
repz
sbb
push
adc
rolb
cmpsl
enter
mov
inc
lds
dec
aas
dec
jle
sbb
jmp
dec
mov
xor
rclb
push
scas
mov
and
out
jae
jge
mov
movsl
pop
mov
iret
inc
xor
je
aam
rcrl
rorb
scas
shll
jnp
xor
cmp
cs
jge
pop
push
ret
adc
and
shlb
mov
pushw
push
addr16
ret
inc
sarb
adc
xor
mov
rclb
push
cwtl
mov
cmpsl
sub
jg
push
add
and
sbb
enter
cmp
jae
popa
adc
aam
and
cmp
xchg
test
xchg
into
or
scas
jl
xacquire
mov
add
or
xchg
test
mov
sti
xchg
fsubl
mov
adc
into
sbb
outsl
inc
cld
out
dec
mov
jge
in
in
repz
mov
push
int3
sahf
faddl
imul
jle
in
jne
shrl
push
sbb
jge
out
inc
push
mov
hlt
or
add
push
dec
out
popf
xchg
xor
cld
andb
jbe
jb
cwtl
or
leave
pusha
or
and
or
mov
inc
hlt
aam
leave
outsb
adc
pop
inc
shll
daa
movsl
aaa
jle
jmp
lahf
movsl
es
adc
sbb
int
fs
add
and
or
push
lds
and
inc
mov
fdivs
addr16
sti
push
sbb
imul
icebp
dec
sbb
sahf
cmpb
cwtl
pushf
pop
mov
push
inc
out
push
push
or
mov
and
call
or
fcompl
pop
adc
das
lods
lahf
dec
mov
fnsave
std
jae
stos
cmp
icebp
jle
push
and
sub
jl
add
cmc
sbb
repnz
cmp
stc
pop
icebp
adc
push
inc
and
hlt
adc
sub
push
mov
out
cld
dec
push
cmpsb
or
sbb
sub
inc
xchg
or
dec
lahf
pop
fstl
inc
inc
mov
mov
add
adc
in
insb
out
stos
pop
sbb
mov
hlt
ja
and
and
in
inc
ljmp
mov
inc
or
and
iret
adc
sub
es
fldl
jge
mov
xchg
in
or
jge
jae
cmpl
cmpsb
fisubs
out
push
pop
popa
or
lods
arpl
dec
notl
test
sub
shrb
cmc
testl
loop
jo
adc
push
cmc
sbb
out
mov
repnz
xchg
loope
hlt
mov
les
icebp
cmpsb
insb
adc
push
lahf
mov
notl
xor
lcall
popf
or
mov
clc
fldenv
pop
cld
sbb
cmp
in
in
adc
stc
div
mov
cltd
jl
sbb
int
cmp
fxtract
dec
adc
test
and
sub
jae
pop
in
aas
pop
cwtl
adc
inc
sahf
int3
sub
test
das
push
lret
outsb
scas
pop
in
lret
fcompl
adc
fs
pop
cmp
lods
in
sbb
scas
and
aaa
cltd
mov
pop
and
adc
push
sahf
mov
ds
or
frstpm(287
sti
mov
ja
rcrb
ja
ficoms
cmp
lahf
enter
loope
and
and
bound
ja
in
push
aas
add
jle
cmp
ret
shr
sub
sbb
iret
jno
out
sub
sbb
mov
rclb
adc
adc
xchg
cmp
jge
or
out
hlt
sub
lret
lods
mov
jg
jnp
push
imul
sbb
sbb
xchg
sahf
and
cld
lea
push
jg
adc
leave
push
xor
out
jmp
or
ljmp
or
mov
xor
pop
xlat
add
and
cmp
arpl
imul
sub
sub
lret
xor
pop
xor
rcrb
popa
hlt
repnz
leave
pop
adc
pop
inc
or
jle
and
adc
jp
lock
cmpsl
rorb
fnstenv
repz
icebp
and
cmp
mov
stos
call
addr16
iret
lods
add
push
push
add
dec
add
xor
ds
movb
es
add
push
fs
adc
adc
pop
pop
scas
add
sub
jecxz
mov
mov
frstor
jmp
sub
sbb
out
mov
hlt
ljmp
xlat
dec
testl
push
rorb
cmc
xor
cmp
cmp
lret
sbb
sbbl
jo
insl
hlt
je
insl
call
adc
mov
add
pop
add
setle
jmp
lods
adc
jl
lcall
adcb
or
adc
sbb
add
call
notl
out
ret
notb
shl
and
cs
aaa
inc
gs
jl
fiaddl
test
mov
pop
sub
in
outsl
pop
adc
sub
jne
sbb
outsl
sbb
sub
inc
sti
pop
adc
popf
add
add
and
add
mov
jecxz
push
fs
xor
fmull
adc
push
lock
mov
push
jnp
rcr
hlt
push
movsl
adc
mov
div
pop
add
shll
mov
sbb
and
or
xchg
rcrb
shl
int
loope
int
das
xchg
aad
xchg
xor
es
lock
das
mov
das
notb
xor
daa
fwait
jo
and
jae
adc
pop
outsl
imul
into
out
iret
xsavec
cmpsb
or
push
push
mov
xchg
xor
iret
xchg
mov
iret
das
stos
mov
aas
push
cltd
sahf
mov
push
xchg
lock
xor
ret
jmp
xlat
enter
dec
aad
cmp
lret
inc
push
test
popa
xor
push
cmpsl
mov
pop
dec
iret
scas
dec
pop
xor
jno
lcall
sbb
andb
or
pop
add
mov
sbb
pop
cmp
sub
xchg
sub
hlt
cmp
push
xor
xchg
daa
out
sub
adc
data16
push
les
std
mov
push
cmpsb
dec
xchg
aad
cs
mov
fistps
aas
sbbb
ja
adc
sub
out
xchg
inc
bound
sti
or
and
inc
sub
pop
cmp
pop
jle
xchg
lcall
push
sbb
sahf
xchg
lcall
adc
add
mov
or
adcb
lcall
imulb
aam
dec
imul
daa
mov
ret
adc
jmp
cltd
mov
lahf
jge
jne
ja
insb
fsts
addr16
xor
inc
loope
sbb
push
cmp
out
outsl
insl
fs
icebp
and
frstpm(287
push
popa
pop
cmp
sbb
xchg
cmc
cmp
bound
cmp
insl
flds
xor
push
inc
mov
dec
das
loopne
adc
repnz
inc
push
sbb
xchg
sub
jne
lock
and
in
andb
in
cmpl
xorb
xor
sahf
hlt
mov
mov
pop
bound
mov
repnz
xor
popf
scas
jl
adc
repz
rorl
push
push
add
imul
mov
adc
notb
sub
ja
mov
out
data16
dec
and
stos
iret
shlb
rcrl
adc
cmp
pop
shlb
cmp
mov
push
push
mov
mov
adc
xchg
sub
cmp
mov
and
daa
and
xchg
mov
mov
add
stc
sub
adc
inc
scas
sarl
rclb
mov
push
int
jl
xchg
push
fstps
jle
fisubs
lret
clc
shll
adc
test
loope
inc
xchg
jl
push
jo
icebp
lret
mov
fnstenv
mov
dec
cmp
xchg
negb
in
aam
icebp
loop
shl
xchg
jbe
mov
adc
add
aaa
clc
push
adc
mov
adc
push
push
adcl
out
int
notb
rol
out
push
and
arpl
jg
and
hlt
movsl
fnstcw
mov
push
and
and
loop
sarb
cmp
inc
sbb
icebp
or
sbb
push
psubsw
and
into
and
cmpsb
adc
mov
sbb
inc
ds
mov
jge
and
mov
test
nop
mov
push
out
xchg
adc
cltd
sub
cmp
xchg
dec
mov
mov
and
jae
mov
mov
push
int
jbe
mov
inc
xchg
push
xor
pop
and
jecxz
nop
adc
fcompl
je
and
dec
out
and
sbb
cs
cmp
pop
test
xchg
hlt
cwtl
ret
loopne
and
dec
sarb
dec
and
adc
lret
or
push
rol
pushf
or
adc
xchg
push
mov
jl
push
movsb
fists
push
and
inc
ret
pop
adc
lcall
xorb
and
out
incl
dec
test
cld
add
aam
cmp
push
repz
cli
dec
jmp
ret
aam
sub
ds
adc
jae
icebp
and
iret
push
cltd
aaa
or
cmp
adc
inc
test
jb
fdivl
loopne
lock
push
mov
pop
inc
adc
hlt
sub
in
ja
pop
test
in
push
xchg
mov
dec
les
ja
xor
xchg
aaa
pushf
and
dec
clc
imull
xchg
lret
mov
mov
pop
pop
jne
and
aas
outsl
push
jnp
sub
sti
push
jp
sbbb
hlt
and
pop
cli
push
dec
and
lcall
jge
out
xor
hlt
icebp
imul
out
xchg
sub
push
fnstsw
call
outsl
hlt
or
adc
inc
fimuls
pop
rorb
insl
jae
mov
hlt
cld
mov
push
inc
pop
insb
add
inc
mov
aas
sub
clc
cli
dec
jbe
addl
adc
sub
mov
sbb
push
movl
jno
sub
repnz
mov
scas
fcompl
out
popf
push
imul
inc
into
mov
sbb
jle
add
add
out
adc
mov
aas
xor
pusha
jmp
sbb
push
clc
subps
nop
adc
sub
adc
fs
icebp
sahf
and
fbstp
loope
or
cmpsl
mov
xchg
rol
mull
adc
push
pop
and
adc
in
push
in
jge
int
dec
adc
push
xchg
pmullw
mov
popa
push
leave
out
push
decl
pop
xchg
adc
inc
je
aad
push
jp
sub
lods
ss
inc
push
movl
mov
addr16
and
pop
or
stc
lods
scas
sbb
push
jle
jae
pop
pop
sbb
test
jne
hlt
or
push
push
cld
adc
jo
jmp
cmpsl
pop
xchg
aam
notb
ss
and
or
hlt
movsl
jge
inc
roll
shrb
std
out
mov
add
push
imul
leave
popa
sahf
jae
in
sub
jl
xchg
sbb
adc
lods
popf
je
outsb
mov
in
add
or
or
shrb
xchg
xchg
aaa
xor
mov
inc
and
push
push
lock
sti
mov
cltd
pop
sbb
mov
sbb
clc
insb
pop
sub
add
scas
lds
xchg
adc
sbb
mov
in
xchg
xchg
mov
mov
decl
sub
jno
int
cmp
xchg
sbb
or
and
and
andl
insl
jb
jp
stos
mov
push
mov
in
add
push
push
and
sub
gs
and
hlt
jns
or
push
imul
sbb
addr16
loope
adc
xchg
push
jge
jge
mov
repz
pop
pop
jge
insb
arpl
repz
mov
adc
jge
sbb
dec
push
or
mov
movsl
inc
jl
push
int
inc
cwtl
dec
xchg
inc
mov
cwtl
xchg
xor
pop
mov
push
lcall
jbe
imull
loopne
andb
jbe
sub
fldlg2
hlt
inc
loope
mov
dec
out
push
dec
xchg
xlat
enter
add
int
xchg
das
xchg
adc
cwtl
lods
in
movsl
adc
outsl
pshufw
sbb
xchg
mov
stc
mov
sbb
adc
addr16
jl
inc
ror
and
rclb
ret
hlt
push
sub
adc
test
mov
jge
gs
call
test
leave
jmp
sbb
insl
jge
xchg
icebp
lock
ds
push
dec
add
and
push
int3
push
movsl
inc
das
mov
lods
mov
pop
push
hlt
mov
jnp
std
jg
aaa
fidivl
push
or
std
fldt
adc
lahf
mov
inc
insl
aad
dec
push
testl
push
pop
aas
inc
divl
mov
dec
test
out
lock
sub
fisubl
ljmp
clc
popa
xor
movups
push
mov
sub
ficomps
fistpl
aaa
lcall
in
jmp
inc
mov
inc
xor
movsb
xor
sbb
sbb
jg
cmp
mov
add
adc
popa
shrl
rcll
jne
dec
inc
mov
outsb
test
out
stos
and
mov
mov
add
xor
sbb
arpl
add
test
push
mov
ficoms
es
sbb
sbb
jnp
clc
bound
lahf
sbb
cli
xor
adc
lahf
cmp
adc
sbb
mov
hlt
lret
les
adc
jo
ja
sub
fisubs
and
push
loop
and
mov
stos
jne
mov
pop
hlt
lea
fsubl
lds
dec
mov
add
jmp
mov
sbb
mov
xchg
fists
scas
leave
shr
aam
sub
adc
clc
std
or
iret
mov
jmp
mov
and
sub
aam
cmp
jge
xor
pop
push
adc
or
aad
jno
xor
and
inc
sub
adc
and
cmp
lahf
push
mov
inc
cmpsl
mov
and
push
leave
xor
addr16
mov
jge
clc
mov
push
push
add
icebp
and
push
push
inc
xor
push
neg
mov
orb
je
jo
xor
popa
pushf
jl
popf
push
adc
xor
or
into
pop
hlt
sbb
or
popf
sub
mov
icebp
test
push
subl
jb
rclb
sub
xor
outsb
and
aad
mov
xchg
push
mov
mov
push
ret
adc
mov
loop
shll
mov
xor
mov
les
cs
aas
lods
xor
sub
mov
cs
or
sbb
popa
arpl
adc
iret
adc
cmc
sbb
loope
mov
inc
sub
add
nop
movsl
pop
xor
out
hlt
xchg
in
cmp
jae
test
mov
adc
cld
cmc
and
xor
loope
cmp
add
xchg
sbb
adc
popa
jmp
and
jno
cmp
cs
ret
adc
mov
mov
mov
inc
pop
fs
or
dec
jns
dec
adc
push
jns
inc
adc
filds
xor
jb
mov
das
cmp
jl
aad
mov
hlt
addl
jae
xor
inc
jg
add
lods
xchg
scas
push
rclb
std
cmpsb
adc
jae
mov
dec
mov
add
jbe
das
xchg
enter
jl
ja
fs
xor
shrl
lcall
push
dec
xchg
sbb
pop
popa
mov
pop
fistpl
rcrb
or
icebp
fwait
add
test
dec
xlat
sbb
push
adc
insl
enter
test
jge
add
out
jne
xlat
mull
aad
in
adc
pop
das
and
push
dec
lods
daa
cmp
or
enter
sbb
inc
mov
mov
fbstp
lock
std
push
inc
aas
xor
fstl
int3
fdivp
fcmove
je
adc
lcall
roll
mov
sbb
scas
adc
push
inc
movsb
mov
jge
cmp
add
adc
xor
add
mov
in
xor
mov
sbb
mov
inc
push
and
test
inc
rcl
fwait
jno
lret
add
xchg
inc
mov
push
in
jecxz
jge
sahf
or
cmp
mov
out
sub
mov
push
or
sbb
cmp
popf
cmpsl
test
lcall
bound
rep
fistps
pop
lea
adc
xchg
dec
fldl
adc
pop
sub
cmp
jge
out
mov
push
push
ror
mov
pop
xchg
es
xlat
push
push
jbe
loop
push
inc
gs
sbb
mov
pop
out
fsts
cld
out
cs
std
leave
aas
dec
jle
and
insl
icebp
sti
or
cltd
sub
cmp
arpl
jmp
xchg
and
xchg
mov
mov
rclb
dec
adc
inc
cmp
mov
xchg
cs
sbb
iret
iret
pusha
mov
mov
add
xchg
jecxz
lcall
test
pop
jns
add
lret
mov
xchg
jbe
lock
inc
adc
outsl
cmpsb
repz
ja
repnz
cmp
es
les
cmp
or
and
mov
xchg
xor
pop
add
out
and
aad
lcall
ficomps
sahf
and
rorb
das
mov
jge
adc
xor
hlt
xchg
push
fsubrl
pushf
dec
add
out
push
roll
xlat
ds
pop
xchg
outsb
jg
mov
mov
push
pop
sbb
lods
jne
push
cmpsl
jne
std
int
push
inc
pop
or
jmp
sarb
dec
lods
mov
push
add
and
inc
dec
int
mov
or
or
push
imul
pop
add
and
pop
enter
lcall
dec
inc
jne
xor
pop
lock
rol
pop
pop
fdivl
lahf
gs
pop
out
sbb
sub
pop
mov
xor
psubd
push
aas
cmpsl
ret
adc
rol
cltd
jge
sub
dec
in
sbb
jae
into
jmp
lret
sbb
adc
xchg
lea
lods
pop
aas
decl
gs
pop
fisubl
inc
jno
lds
or
int
in
push
fcomps
mov
adc
das
add
xor
fs
add
dec
mov
testb
or
adc
mov
sub
ret
cwtl
rcl
or
dec
xor
or
dec
insl
das
and
jbe
mov
jge
xor
dec
sbb
scas
push
mov
iret
add
mov
jg
push
ljmp
pop
push
aam
sub
movl
xchg
lret
adc
mov
inc
pop
adc
test
cmpsb
adc
sar
mov
lds
das
sysexit
sbb
xchg
pop
pop
dec
jge
cld
hlt
enter
push
push
icebp
cmpl
xchg
dec
mov
adc
cs
xor
dec
xlat
xor
and
adc
mov
push
cmp
push
mov
and
mov
pusha
push
pop
pop
std
test
fs
jbe
iret
enter
or
inc
and
pop
or
loope
repnz
inc
clc
xchg
out
fsubs
add
or
xchg
push
rcll
insb
push
jecxz
pop
movsl
push
pop
sahf
jae
push
adcl
sbb
das
dec
mov
pop
call
cs
mov
xor
int
aaa
sarl
addr16
stc
ss
adc
sub
movsb
mov
test
call
test
add
cmp
lds
sbb
sbb
mov
sub
loopne
push
mov
hlt
pop
and
mov
xchg
push
mov
mov
pusha
lahf
add
dec
lods
mov
iret
stos
sub
cmp
mul
pop
cs
out
pushf
mov
leave
imull
cmp
pusha
imul
dec
dec
or
mov
sub
ds
sarb
sbb
stos
inc
or
and
aam
mov
dec
cmp
and
cltd
push
dec
loopne
inc
adc
jae
adc
mov
mov
push
sub
adc
icebp
inc
xchg
cld
outsb
cs
adc
mov
sbb
push
add
jg
lods
pop
cmp
loopne
mov
xchg
lods
jmp
push
mov
call
ficoml
mov
cmp
insb
test
int3
xor
outsl
or
loop
sub
mov
push
add
pusha
sbb
jb
sbb
or
push
sbbb
hlt
jl
xor
xorl
lret
jae
jle
dec
cwtl
xchg
xlat
andb
stc
inc
sub
aad
dec
insb
inc
mov
mov
jge
jne
jmp
leave
and
push
push
ds
jg
mov
mov
imul
add
aam
jg
sbb
add
pop
jecxz
xor
adc
push
aad
pushf
sub
xchg
xor
pop
icebp
mov
xchg
push
dec
sbbb
ja
and
and
add
push
push
subl
push
xchg
adc
sahf
stc
jle
daa
sbb
xlat
movsb
mov
pop
rolb
and
hlt
test
cmp
xchg
jmp
bnd
jae
mov
xchg
mov
shlb
add
ds
loopne
in
jbe
rcrl
mov
sahf
sub
cltd
sbb
xchg
cmpsb
mov
sbb
cmc
lock
cmpsb
aaa
xor
push
xor
cli
or
adc
inc
xor
and
hlt
cs
sti
mov
loopne,pt
sahf
ja
je
mov
mov
xlat
out
lds
shll
pushf
mov
xchg
and
sbb
xchg
stc
jle
hlt
fadd
or
int
push
mov
adc
xor
popa
adc
sbb
outsb
call
bnd
fmuls
jbe
outsb
push
jne
dec
fwait
add
sbb
adc
adc
das
mov
mov
std
or
push
add
xchg
int
and
jle
and
sahf
jle
fisubs
repz
into
ficoml
add
mov
add
inc
loope
jbe
adc
push
sbb
movsb
clc
sbb
pop
div
pusha
movsb
lock
mov
and
cs
repnz
pop
stos
or
lods
mov
popf
mov
test
push
loope
xor
movsl
push
pop
inc
into
or
test
mov
xchg
inc
sub
repz
enter
orps
mov
ds
mov
cmp
xlat
je
cli
xor
push
add
push
jecxz
and
xchg
fwait
scas
dec
lds
js
cmc
negl
imul
and
aam
adc
push
loope
insl
aad
jb
fdivl
lods
fldcw
add
rorw
mov
test
cwtl
data16
jns
push
fimull
cltd
mov
stos
push
xor
and
test
sub
pop
mov
pop
clc
xor
xor
xchg
scas
mov
push
xchg
cmp
insl
mov
das
imul
fdivrl
pop
cmp
adc
mov
into
jb
pushl
inc
js
mov
add
jg
mov
pop
inc
inc
add
adc
xor
cltd
dec
stos
lret
inc
mov
add
inc
adc
fwait
inc
cmp
sahf
loope
rcl
shrl
push
test
aad
adc
jecxz
lcall
in
push
sahf
adc
adc
mov
sbb
jns
ss
add
hlt
iret
inc
sbb
sbb
adc
xchg
push
dec
popf
lahf
lret
sbb
cmpsb
cwtl
xlat
xchg
sub
or
in
cmp
out
lods
mov
orb
add
ds
mov
mov
gs
xor
divl
cmpsb
sbb
add
std
test
or
and
std
mov
cmp
mov
or
les
xor
add
pop
mov
or
popa
or
mov
test
lea
xor
loope
cli
mov
mov
bound
rclb
xchg
mov
mov
mov
mov
push
xlat
jg
orl
adc
rcr
sbb
cmp
sbb
rclb
add
xlat
add
pop
fsubp
mov
into
mov
sti
cwtl
inc
aad
xor
es
mov
les
int3
imul
sub
into
clc
push
mov
stos
jns
xor
inc
dec
jb
ds
pusha
and
arpl
fidivs
gs
or
sbb
xor
int
or
xchg
cs
adc
xor
cld
or
adcb
loope
pop
xchg
push
mov
adc
jg
mov
cmpb
pop
mov
or
dec
out
aaa
dec
jmp
sbb
inc
mov
xchg
jnp
lret
dec
or
jno
mov
cmp
add
or
rcrb
stos
cs
pop
inc
imul
sbb
or
xor
repz
cld
push
push
rcrl
mov
adc
mov
icebp
xchg
cmp
mov
nop
push
jmp
pop
dec
push
call
lea
or
and
icebp
jae
out
je
jb
ljmp
mov
push
pop
mov
icebp
xchg
xchg
jb
cltd
push
sahf
aaa
in
lcall
shl
xor
cld
adc
xchg
mov
ja
mov
sti
jo
aas
mov
in
mov
or
ja
in
fiadds
xchg
addr16
adc
jecxz
xor
jnp
and
loope
mov
sbb
cs
mov
and
xor
jmp
stc
mov
mov
popf
push
push
push
mov
add
fsubr
sub
orb
loope
movsb
loope
xchg
call
xchg
and
adc
int
sub
out
movsl
mov
fnstenv
cld
mov
lahf
inc
adc
imull
xchg
loop
clc
mov
dec
sbb
inc
mov
xchg
sbb
mov
dec
push
xchg
jg
stos
jne
ja
orb
dec
mov
or
pusha
xchg
inc
push
and
cmp
cmp
xor
test
xor
lretw
jge
lods
pop
and
sbb
iret
rolb
add
mov
mov
or
sub
add
mov
hlt
cmp
xchg
cwtl
cmp
lds
or
fisubrs
inc
and
xor
adc
mov
nop
test
in
enter
mov
add
int3
pop
and
out
mov
xchg
xorl
mov
scas
fwait
sub
mov
int3
mov
fbld
mov
jmp
cmp
lea
mov
scas
aas
xor
test
shr
cmp
test
pop
sbb
sbb
ret
pop
and
sub
addr16
adc
mov
xchg
mov
mov
push
mov
lock
dec
fmul
jo
rclb
std
mov
pop
aad
sbb
orb
dec
add
or
cmp
jno
xchg
ljmp
mov
movsb
sbb
adc
call
test
fcom
push
cwtl
sbb
aad
push
jnp
and
jp
or
loop
jle
mov
cmp
out
aam
xchg
insb
xor
lods
cmpsb
pop
rcr
scas
in
mov
in
test
and
cmp
adc
aam
ficoms
mov
sub
or
cmp
out
lds
scas
and
shl
adc
inc
mov
xchg
addr16
insl
adc
push
sbb
or
int
jg
into
out
cwtl
stos
leave
inc
jge
out
dec
dec
mov
mov
add
emms
neg
pop
out
cmpsl
mov
push
movsl
subb
outsb
std
or
xor
or
lcall
dec
daa
sbb
cmp
das
xchg
adc
lret
and
dec
pop
adc
into
inc
push
pop
das
dec
iret
sti
stos
add
xor
insl
push
pop
les
jo
arpl
inc
jb
stc
fsubs
in
adc
shlb
movsl
imul
clc
fcmove
add
stos
add
mov
or
adc
add
add
lcall
call
fcmovb
mov
adc
js
jae
jne
enter
cld
jns
jmp
or
outsb
test
and
std
data16
cwtl
xor
repz
je
sahf
sbb
push
adc
pop
adc
jns
decl
stos
mov
or
xlat
cmpl
jle
ja
xor
das
lods
jbe
stos
mov
xor
adc
sub
call
add
nop
sti
dec
adc
mov
mov
mov
js
jb
dec
or
push
adc
mov
dec
das
jecxz
or
inc
out
and
test
push
and
xor
add
je
sahf
das
pop
inc
xor
int
fstl
pop
pop
xchg
xchg
jo
test
jo
enter
dec
or
xchg
push
mov
dec
out
jmp
js
mov
lret
push
cmp
push
ja
and
jg
jmp
dec
adc
sahf
bound
idivl
mov
dec
pop
les
sbb
push
and
ja
or
mov
mov
loopne
adc
pushf
icebp
inc
hlt
mov
and
fmul
sub
clc
popf
cs
lret
pop
inc
idiv
xchg
js
dec
xlat
ja
dec
insl
cmc
mov
lea
mov
movsb
rorl
sub
arpl
jge
andl
and
xchg
inc
clc
in
xchg
jecxz
adc
or
push
dec
xlat
cmp
call
and
loope
pop
push
or
fnsave
int3
push
jle
inc
lock
dec
lret
sbb
xchg
mov
mov
jne
push
cmp
loopne
loop
js
dec
mov
mov
roll
pop
pop
push
sub
or
lret
push
sub
mov
sti
insl
jb
xchg
dec
adc
jl
adc
jmp
pop
fs
mov
jmp
cmpl
movsb
and
aam
outsl
mov
mov
into
stc
or
dec
and
fadds
nop
mov
mov
inc
fdivl
mov
lret
mov
jecxz
aad
fcoms
sub
cmpsl
push
in
pop
lahf
ffree
fdivrl
loop
cwtl
mov
adc
and
lret
inc
outsl
loope
sbb
xor
test
mov
hlt
jmp
sarl
repnz
mov
popf
iret
mov
ret
push
or
add
jne
push
add
mov
push
addr16
std
hlt
mov
xlat
repnz
cltd
push
in
gs
xchg
out
add
popa
and
push
sbb
push
fsubp
cmc
jbe
cmpl
dec
out
xchg
cmp
add
mov
jns
adc
rcrb
mov
out
mov
adc
cs
adc
sub
arpl
xchg
cli
and
lods
addr16
stc
add
pop
adc
or
adc
xchg
sub
cmp
fs
sbb
sbb
xorb
or
sbb
and
icebp
lods
cmpb
add
cmp
sbb
push
out
xchg
lods
and
mov
mov
cmp
divl
add
xor
or
xlat
jmp
fwait
std
adc
dec
mov
pop
fcoml
xlat
adc
into
hlt
test
ljmp
xor
pop
push
stc
or
cmp
mov
es
add
fistps
sub
lods
pop
add
pop
sbb
jg
xchg
clc
in
loope
out
shlb
lahf
cwtl
shlb
pusha
mov
ljmp
push
fwait
xor
pop
pop
test
mov
jb
mov
call
daa
nop
out
lahf
xchg
cmc
fbld
loop
jmp
jg
pusha
xchg
or
pop
repnz
cwtl
aam
and
insl
inc
sti
ljmp
and
loope
fildll
int
fcom
dec
adc
mov
cmp
xchg
sub
fnstsw
add
fcom
mov
add
fs
stos
adc
jmp
test
and
cmpsl
sub
or
jl
cmp
cmp
loopne
mov
repz
xchg
pop
mov
mov
fbld
divps
push
push
or
das
hlt
cmp
xchg
aas
mov
aas
hlt
in
sbb
mov
imul
sbb
adc
cmp
jmp
addr16
dec
dec
sti
pop
dec
push
cmpsl
rcrb
enter
push
push
dec
jo
lret
mov
or
fdivrs
in
gs
lock
sbb
jle
pop
jo
sub
iret
mov
mov
xor
loop
hlt
jge
cltd
aad
jg
pop
inc
repz
pop
dec
cltd
pop
ss
cs
pop
pop
adc
imul
lea
mov
inc
and
sbb
cltd
mov
repnz
and
mov
xlat
popa
adc
push
pop
and
push
cmpsl
push
jae
shlb
push
mov
lcall
cltd
mov
test
loopne
xchg
fisubrl
sti
and
sbb
and
in
push
xchg
xchg
test
inc
insl
sbb
and
xchg
add
mov
jecxz
jl
push
add
push
inc
lods
js
or
scas
jae
das
ret
sarb
sahf
mov
cmp
xor
adc
xor
lea
xchg
call
sti
in
icebp
push
testb
jns
sub
cmp
add
nop
jle
push
test
jno
sbb
lcall
lea
xchg
mov
push
hlt
cmp
out
loope
arpl
sahf
mov
and
repnz
pop
fwait
adc
hlt
cmp
cmpsl
cwtl
push
sbb
fiaddl
mov
jmp
fnstsw
and
sbbl
fiadds
mov
mov
stos
push
or
pop
hlt
pop
fiadds
sbb
cmp
jmp
fsubrs
mov
shlb
push
movsl
insb
mov
pop
jmp
adc
dec
and
fldcw
addr16
aaa
out
mov
pop
cmc
loop
cmc
inc
stos
outsl
cmp
mov
or
outsl
dec
fldl
or
push
sub
pop
imull
rcrl
inc
mov
mov
xor
je
push
adc
test
and
imul
cmc
mov
adc
or
mov
or
sub
iret
in
mov
mov
es
sbb
sbb
xchg
adc
divb
out
and
hlt
stos
or
xor
and
mov
dec
dec
arpl
jns
aam
xchg
and
mov
xor
enter
xchg
out
xor
or
mov
dec
cli
in
sub
outsl
dec
repnz
subb
hlt
cmp
xor
and
adcb
bound
sbb
mov
cmpsb
ficoms
jb
jns
mov
cmpsl
and
xchg
xor
dec
aaa
jecxz
lcall
add
or
ds
sbb
je
jp
sub
add
inc
sub
lret
and
movsb
add
mov
pop
fmulp
push
or
fisttps
push
cmp
mov
aaa
xchg
outsl
cmp
adc
jmp
xchg
jno
mov
es
jb
xor
xchg
bound
test
add
loop
sub
add
push
cld
mov
push
shll
pushf
hlt
xlat
mov
mov
and
outsl
outsl
cmp
call
xlat
clc
fdivl
or
xchg
cmp
test
bound
inc
lea
daa
push
bound
arpl
sub
lds
fdivrl
clc
cmpsb
out
and
inc
repnz
out
push
mov
add
hlt
pop
xor
mov
bound
add
nop
push
scas
fiaddl
inc
lods
or
inc
fld
mov
pop
test
sub
add
push
dec
jge
or
das
aam
jmp
fwait
aaa
xchg
cmp
adc
push
mov
hlt
xchg
inc
icebp
and
xor
sub
xchg
test
mov
mov
pop
addr16
loope
jmp
cmpl
popf
and
jno
push
stos
jmp
fsqrt
push
rcll
rcrl
sbb
or
subb
pop
lret
sbb
mov
push
adcl
mov
adc
mov
dec
dec
insl
push
lods
dec
nop
out
dec
mov
jmp
jl
cmp
adc
out
in
aad
and
mov
out
out
clc
ret
sbb
xor
xchg
rorl
mov
arpl
sub
mov
in
xchg
movb
mov
in
ja
cwtl
and
dec
cmp
pop
mov
cwtl
jl
aam
ljmp
sbb
dec
add
imull
gs
sbb
dec
xor
mov
clc
push
inc
jbe
icebp
pushf
sbbl
fucomi
es
mov
aas
add
dec
cmp
rclb
call
and
xchg
lock
lea
in
in
push
push
jo
loop
mov
int
adc
adc
pop
test
inc
outsl
rorb
js
mov
cltd
ds
call
ds
xchg
xor
mov
les
xchg
std
jle
ljmp
ja
ss
mov
rclb
fwait
jb
repnz
xchg
iret
hlt
daa
iret
mov
aam
adc
mov
movsl
cld
push
daa
imul
enter
lea
out
fisubs
fistpll
mov
jge
inc
add
data16
addb
outsb
dec
lea
jo
xchg
sbb
notw
pop
jp
scas
add
mov
xor
bound
jg
inc
stos
inc
jg
mov
and
sbb
cmp
repnz
push
movsl
push
pop
inc
jbe
insb
xchg
dec
test
jae
jno
movsl
jge
adc
in
add
mov
test
cltd
call
and
mov
cs
sahf
cmp
adc
add
pop
dec
dec
out
shrl
dec
mov
inc
sahf
lods
jne
addr16
push
xor
rorl
in
jmp
cmpsl
dec
adc
xchg
inc
lcall
ja
popf
mov
jae
sbb
sbb
lcall
adc
int3
mov
xor
fdivl
jb
xorl
repz
add
icebp
daa
pop
in
popa
adc
and
cs
test
sbb
and
repz
ret
dec
in
je
adc
adc
cwtl
jg
fidivl
es
ljmp
in
js
add
xchg
ret
push
sti
ljmp
lea
xor
push
xchg
jl
mov
xchg
loopne
jl
test
int3
mov
sbb
insb
sbb
rep
xchg
hlt
inc
fisubrs
mov
sub
push
jae
addr16
or
hlt
or
jae
jl
mov
loopne
push
outsb
pushf
jge
xchg
add
inc
cmp
pop
pop
xlat
dec
mov
cmp
pop
mov
fcoml
ljmp
xchg
jb
xor
and
mov
xchg
aad
daa
push
jmp
stc
leave
mov
and
xor
repz
jle
mov
or
out
xchg
sbb
jae
in
jmp
ret
add
push
dec
out
add
loopne
or
and
adc
arpl
xchg
jae
adc
jmp
xchg
les
pop
mov
xor
maskmovq
testl
imul
loop
clc
fs
icebp
sbb
inc
nop
sub
pop
test
fidivl
stc
out
cli
mov
ficoms
mov
adc
mov
mov
sub
fdivs
or
jecxz
cmp
pop
cmp
les
sahf
roll
cltd
addb
jbe
mov
sbb
out
or
dec
std
enter
sub
add
jno
sbb
cmp
shl
aaa
cmp
lods
in
sbb
add
iret
gs
adc
or
xor
aas
and
sbb
lcall
or
cs
jp
sub
push
sbb
mov
inc
in
pushf
adcb
lds
jnp
mov
pop
les
bound
pop
add
cmp
sbb
jmp
mov
mov
out
fbld
icebp
mov
xchg
aaa
push
xchg
add
add
repz
cmp
mov
dec
xchg
hlt
mov
aas
and
push
cmp
xor
shll
clc
push
sub
jle
adc
inc
outsl
sub
jl
repnz
push
aam
push
jne
movsl
mov
adcl
adc
into
fcmovnu
push
dec
stos
flds
cwtl
aam
push
out
jle
xor
lret
rclb
enter
scas
jp
pop
mov
and
push
jp
add
xchg
sub
mov
mov
int
les
or
lret
and
test
pop
daa
adc
loop
mov
sbb
in
dec
adc
pop
adc
stos
test
cmpsl
mov
jle
scas
jl
loop
out
mov
call
dec
out
jp
jl
add
hlt
decb
orb
or
test
jbe
cwtl
aaa
pushl
pop
or
xchg
insb
mov
adc
mov
and
push
mov
and
repnz
or
mov
mov
jae
mov
lcall
sub
int
adcl
and
in
dec
test
pop
sub
les
mov
out
jge
xor
add
xchg
mov
clc
cmp
xchg
adc
lcall
lret
bound
sbb
cli
enter
sub
repnz
pop
xor
add
imul
mov
insl
aam
pop
and
cld
sbb
lret
push
dec
lcall
pop
pop
fdivrs
inc
loope
adc
bound
loopne
inc
fistpll
adc
mulb
xchg
xlat
xor
adc
data16
sbb
insl
xchg
xchg
mov
filds
xchg
js
and
cwtl
xchg
mov
clc
icebp
cld
push
repz
adc
ds
inc
jo
sbb
adc
dec
mov
jmp
adc
dec
fwait
ja
xchg
and
daa
sbb
fs
fwait
jle
lahf
call
lods
pusha
jb
pop
cmpsl
add
pop
fdiv
jb
push
mov
xchg
xchg
and
loope
das
ficompl
mov
fmull
jno
xor
mov
das
cmpsb
in
cs
clc
ljmp
pop
rcrb
popf
out
lea
sti
mov
pop
enter
mov
das
les
popf
sbb
sbb
int3
loopne
jge
and
pop
jmp
outsl
inc
je,pn
enter
das
das
in
fstpt
arpl
in
sti
icebp
int
fbld
lret
or
shll
cltd
sti
dec
test
xor
dec
sbb
scas
lea
push
loop
stc
or
xchg
in
add
out
movsl
xchg
mov
sbb
adc
adc
aas
clc
lcall
and
fwait
and
aas
enter
and
xor
cs
int
xchg
mov
scas
fldenv
pop
and
fildll
decl
jns
cltd
scas
jge
xchg
and
adc
scas
cwtl
jno
sbb
sbb
mov
mov
jmp
sbb
xchg
stc
or
das
cmp
cs
pop
dec
stc
adc
sbb
loope
out
sbb
xor
lods
das
fsts
adc
std
or
std
nop
or
sahf
stc
das
cltd
sahf
add
sbb
or
and
lea
jg
jns
mov
jge
bt
ficomps
out
sbb
mov
lea
push
lahf
mov
lods
int3
scas
jns
sbb
das
mov
divl
xchg
and
adc
sahf
jge
imul
addr16
mov
stos
xor
das
xchg
and
sbb
sbb
sub
xchg
fmuls
decb
xchg
sbb
fstps
sbb
mov
mov
sbb
and
and
or
add
mov
imul
adc
sahf
pop
lea
daa
xor
jbe
stos
push
call
mov
popf
arpl
pop
or
mov
imul
mov
mov
in
out
inc
sbb
jp
vmovmskpd
outsl
mov
xchg
adc
cmc
push
lret
add
mov
dec
xchg
add
bound
stc
adc
sub
push
test
inc
push
push
push
pop
xchg
and
ja
repz
sbb
adc
mov
adc
das
xor
popf
jno
dec
adc
hlt
mov
notl
stos
cmp
jmp
mov
mov
sarb
int3
inc
and
sbb
inc
xchg
rorl
mov
xor
arpl
add
dec
sbb
lock
xor
adc
aaa
scas
sub
adc
adc
push
sbb
and
iret
loope
rcrb
and
int3
movsl
adc
cmp
xor
mov
push
cwtl
add
hlt
mov
xchg
push
cli
pop
rorl
aaa
pop
xor
aad
pop
loopne
iret
push
lea
imul
test
adc
mov
pop
xlat
adc
pop
inc
hlt
mov
ljmp
and
jmp
divl
pop
and
iret
jle
sbb
mov
dec
filds
dec
push
mov
xor
and
roll
pop
clc
ja
xchg
cmp
and
dec
scas
lock
loopne
sahf
adc
nop
cltd
pop
sbbl
jle
out
paddq
fs
imul
push
pop
dec
xor
cli
mov
mov
jo
sub
push
addr16
dec
inc
shrl
xchg
adc
adc
inc
adc
jae,pt
mov
daa
and
pop
sub
roll
aam
shlb
mov
leave
dec
aaa
mov
and
and
iret
adc
mov
sub
xlat
sahf
xchg
or
xor
out
clc
gs
xchg
mov
mov
mov
push
divl
dec
fmull
or
notl
dec
mov
adc
lock
stc
out
adc
xchg
dec
shl
push
cmp
in
xchg
nop
inc
add
mov
or
in
mov
test
mov
cwtl
sub
std
jae
sbb
adc
dec
jmp
in
fildl
and
pmaddwd
xchg
jg
jno
lcall
xchg
fmuls
les
dec
mov
xchg
fists
adc
lahf
jle
push
sbb
jp
icebp
mov
imul
jb
arpl
and
dec
lcall
fcomps
dec
loope
sbb
ror
mov
mov
inc
adc
adc
lods
mov
shlb
enter
xor
inc
rcrl
or
adcb
add
add
lret
lcall
sub
pop
xchg
es
mov
pop
pusha
adc
nop
sbb
loopne
mov
rcr
pop
jne
inc
ja
lods
ds
mov
pop
iret
shr
fxtract
out
add
mov
out
mov
and
cmpsb
sbb
adc
jo
out
testl
cmp
and
xchg
icebp
pop
aam
outsl
xor
adc
jmp
sub
push
loope
hlt
mov
stos
mov
mov
and
xlat
bt
mov
mov
dec
jge
mov
mov
dec
xchg
or
fistpll
push
loopne
ret
mov
popa
cmpsl
mov
cmpsb
jecxz
jns
cmc
pop
inc
sbb
pop
aas
in
dec
mov
inc
cmpsb
movsl
repnz
loope
js
jno
sub
pop
jmp
cmp
add
rorb
mov
xchg
cmc
xor
rol
and
xchg
sbbb
je
add
xchg
sbb
mov
das
lock
xchg
int3
into
icebp
es
mov
xor
xchg
inc
jp
mov
xor
aaa
decl
sbb
iret
fbstp
lcall
iret
jmp
pop
mov
mov
mov
call
sbb
sbb
push
pop
hlt
icebp
mov
mov
xlat
adc
icebp
and
insl
ljmp
fstps
xlat
nop
lret
jb
fadds
je
icebp
mov
xchg
lds
mov
jno
in
adc
insl
int
or
sbb
adc
pop
out
add
mov
xor
pop
not
in
and
lahf
adc
outsb
xchg
xor
cwtl
mov
jp
test
cmpsb
mov
enter
rorb
push
movsb
out
jbe
fwait
mov
pop
fstpl
fimull
and
sbb
scas
push
push
fs
int
or
loope
bound
test
cmp
pop
hlt
xchg
test
nop
push
lods
pop
mov
add
int
cmp
aad
inc
shlb
hlt
and
dec
test
ljmp
pop
out
sbb
mov
scas
and
dec
xchg
shr
mov
addr16
sbb
push
pop
adc
push
mov
adc
adc
popf
pop
test
mov
sub
xor
sub
xchg
ljmp
or
ret
mov
sbb
mov
adcl
in
push
and
adc
jecxz
das
pop
scas
cltd
dec
sbb
inc
jns
dec
insl
xchg
divb
or
outsb
imul
icebp
int3
hlt
stos
outsl
negl
pop
leave
sbb
insl
cmp
pop
out
sub
and
jns
data16
mov
mov
call
fwait
jne
lahf
icebp
mov
mov
lods
xchg
xchg
daa
mov
xlat
test
inc
js
jmp
xor
pushf
push
pusha
xor
aaa
push
pop
icebp
dec
push
inc
adc
xor
pop
ja
std
cmp
loope
enter
ljmp
xchg
cli
icebp
jg
mov
mov
inc
dec
and
scas
fisubrl
xchg
push
repz
loopne
out
jle
leave
and
les
cmpsb
dec
nop
pop
mov
and
fbstp
sbb
mov
ljmp
out
cwtl
ja
repnz
das
add
or
stc
push
hlt
mov
jb
mov
fbstp
jle
popa
mov
lock
testb
pop
jle
jns
sub
mov
fcoms
std
cs
hlt
lret
mov
jle
lea
pop
mov
sub
bound
and
adc
pop
adc
les
arpl
xchg
hlt
add
les
mov
adc
sub
push
sbb
repz
mov
cmp
sub
or
and
mov
push
cli
pop
pop
inc
pop
mov
test
outsb
mov
outsl
hlt
repz
fstpt
xor
add
dec
jo
sub
rolb
repnz
push
jmp
shll
repnz
mov
or
das
xor
mov
jmp
cs
mov
xor
jle
cmp
mov
sbb
mov
nop
pop
sbb
mov
xor
add
cs
negb
mov
das
xchg
cmpsb
mov
out
adc
mov
xchg
fadds
out
inc
nop
rcrb
les
xlat
cmp
outsl
xor
sub
add
test
push
xchg
mov
jmp
jl
jbe
jmp
icebp
aaa
mov
lea
cmpsl
or
mov
sahf
xchg
and
je
push
or
inc
nop
cmp
int3
leave
mov
cmp
mov
popf
hlt
fsubr
adcl
and
or
xchg
aaa
test
sbb
lods
hlt
clc
sbb
xchg
mov
lahf
fwait
inc
imul
adc
test
pop
jnp
mov
mov
out
jns
jp
dec
or
add
aaa
xor
rol
fbstp
movsl
cmp
out
popa
and
mov
notl
mov
adc
cmp
pop
push
xchg
or
cld
data16
call
out
pop
clc
mov
push
pop
sbb
xorl
cld
and
pop
mov
fcoms
pop
loope
sbb
insb
xor
mov
mov
icebp
pop
scas
push
adc
mov
xchg
mov
jge
rorl
ja
mov
mov
adc
push
rorb
fdivs
mov
fisubrs
arpl
fstps
push
xchg
cmp
or
cmp
push
mov
bound
push
cmp
vmwrite
pushf
mov
in
insl
aas
sbb
rcr
and
leave
loopne
add
out
js
shl
cltd
pop
push
pop
sbb
and
clc
or
outsb
cli
mov
addr16
in
scas
cmpsl
sub
mov
movsb
out
icebp
cmpsb
cmp
andnps
pop
loopne
mov
mov
mov
sub
adc
andb
xchg
stos
int
push
sarb
testb
pop
add
pop
xchg
aad
jne
iret
pop
push
and
loope
adc
cmp
push
push
sbb
jnp
jo
sbb
jecxz
mov
pushl
dec
or
and
std
xchg
stos
ja
and
jl
das
mov
pop
mov
push
pop
mov
push
or
shll
bound
and
pushf
test
sbb
hlt
je
dec
fistpll
sbb
pop
lods
push
and
cmc
fistpl
mov
inc
mov
inc
hlt
inc
aas
push
pop
adcb
add
arpl
adc
inc
in
iret
imul
in
loopne
iret
scas
repnz
fstp
in
insb
aad
bswap
push
dec
mov
movzbl
ss
push
xchg
xor
idiv
call
scas
mov
ss
sti
mov
inc
int3
sub
mov
jno
cmp
and
das
cli
hlt
lock
and
push
sub
in
das
xchg
jo
jge
jl
sbb
mov
scas
leave
scas
cltd
std
daa
pop
mov
test
or
mov
push
popa
scas
cmp
das
sbb
sbb
outsb
sbb
xchg
add
scas
inc
dec
loop
sahf
mov
shll
push
xor
mov
and
inc
dec
hlt
negb
clc
xor
add
in
add
shrl
xor
nop
jbe
add
and
and
loopne
pusha
or
cltd
fsubrs
cmc
push
iret
shll
push
mov
cs
adc
sub
fwait
jbe
fs
sub
adc
loopne
enter
push
mov
sbb
or
adc
stc
roll
cmp
xor
vhaddps
in
ret
test
out
push
std
int3
jnp
pushf
or
and
scas
push
dec
ret
movsl
loop
xor
rclb
mov
icebp
pop
push
sbb
jne
push
xchg
decb
fwait
std
mov
mov
jo,pt
dec
iret
lods
adc
ss
adc
lret
and
fistpl
ss
int
dec
aam
mov
das
mov
shl
jnp
or
movsl
cmp
loope
xchg
cwtl
sahf
mov
in
and
mov
rcrl
pop
pushf
inc
icebp
or
sar
in
jecxz
hlt
sbb
mov
addb
sub
cltd
and
mov
lea
xor
mov
out
adc
add
and
scas
mov
cmp
in
adc
outsb
mov
loope
pop
push
pop
pushf
les
pop
mov
vxorps
adc
or
insb
loop
add
lock
cmp
je
adc
mov
stos
adc
inc
mov
es
ja
jb
push
addr16
push
dec
call
mov
and
dec
or
or
inc
sbb
lea
loopne
pop
adc
loop
xor
orb
cld
and
jge
sbb
gs
js
cmpsb
push
aas
and
xchg
lock
std
hlt
and
add
sbb
aaa
inc
add
add
std
push
adc
data16
scas
shrl
fadds
fisttps
lahf
scas
push
pop
ret
adc
hlt
cmp
repz
leave
and
xchg
sbb
fsts
mov
adc
das
ja
adc
fistl
andb
push
inc
stos
mov
sbb
int
push
rcll
and
inc
mov
inc
insl
xchg
icebp
hlt
dec
ja
xchg
add
xor
out
jge,pn
push
clc
sahf
stos
daa
mov
cmp
psrld
sbb
imul
mov
or
adc
pop
loop
cmovns
push
xchg
xor
pop
jge
idiv
test
sub
jmp
mov
cmp
sahf
hlt
js
xchg
dec
push
jmp
xor
fbld
push
pop
icebp
sub
inc
add
rorb
inc
add
ror
out
test
iret
cld
loopne
pop
xchg
sbb
mov
push
cwtl
push
inc
pusha
scas
sbb
jl
inc
rcr
sbb
fcomp
scas
arpl
scas
jp
mov
ds
mov
pop
mov
mov
divb
cmp
jp
mov
add
pushf
and
push
out
out
and
lcall
xor
std
cmp
mov
jge
lock
in
gs
or
fadds
scas
pop
cltd
js
repz
mov
and
sarl
mov
push
sbb
scas
mov
or
fnstenv
iret
out
xlat
js
adc
adc
into
fcomi
nop
lods
cmp
movsl
sub
sahf
xor
add
xchg
in
rcrl
int3
je
push
adc
jl
scas
enter
and
mov
sub
xor
dec
adc
xchg
or
fdivp
punpckhbw
in
xchg
mov
sbb
lock
push
fistpll
fnstcw
outsb
fucomi
adc
in
mov
cmp
pop
mov
ret
push
mov
cltd
stc
cmp
imul
sahf
or
xlat
mov
sub
xor
jge
aad
sub
sbb
push
lock
or
or
ret
das
rorl
mov
arpl
outsl
sbb
jle
in
fstpl
enter
aaa
dec
mov
mov
and
aad
xchg
mov
mov
xor
pop
dec
mov
push
jae
daa
mov
int
roll
shlb
push
adc
jno
xchg
jne
lea
leave
and
stos
jmp
jmp
xchg
xchg
jp
je
shll
in
aaa
scas
xchg
mov
inc
int
pop
mov
shr
sbb
jbe
sbb
enter
cltd
xor
sbb
lret
mov
add
dec
sahf
rcl
dec
dec
jnp
jne
push
cltd
lahf
outsb
sbbb
popf
sub
cltd
or
shlb
popl
or
mov
ficoms
int
movsb
xlat
xor
xor
fisttps
jmp
or
mov
loop
insb
and
mov
loop
ds
jae
test
lods
in
imul
mov
leave
pop
sbb
iret
mov
inc
icebp
outsl
leave
mov
mov
xor
push
int3
mov
sbb
and
push
xchg
xor
jecxz
jge,pn
leave
or
lock
sti
or
sub
cmc
inc
jnp
lock
fisubl
and
mov
and
je
push
test
sbb
mov
stos
mov
or
mov
lods
test
pop
rcll
xchg
adc
dec
mov
jl
push
lcall
dec
jbe
add
add
and
and
loope
adc
aam
push
sbb
add
pop
lahf
cmp
add
xor
sub
lds
mov
out
pop
repz
nop
mov
adc
and
lret
cli
arpl
dec
xchg
push
insl
int3
cltd
push
movsb
pop
pop
lock
push
getsec
subb
or
xchg
sub
jno
mov
int
sti
stc
push
and
push
js
jmp
pop
jecxz
and
cmp
adc
or
hlt
cltd
call
adc
pop
xor
mov
stc
into
and
xor
and
add
insb
nop
cs
in
outsl
dec
gs
mov
aad
and
dec
sahf
insb
jmp
das
and
aas
adcb
xlat
sbb
adc
outsb
push
leave
xchg
aaa
inc
cmc
add
shll
jne
test
fisubrl
lea
shl
scas
hlt
out
adc
aas
mov
mov
jp
imul
fwait
pop
cwtl
outsb
jbe
mov
push
out
mov
out
int
xor
out
adc
imul
fwait
pop
adc
mov
shrl
mov
pop
inc
imul
shll
push
out
cmp
movsl
add
xor
mov
gs
sbb
sub
xchg
lods
aam
xor
inc
push
and
mov
repz
pop
fcmovu
inc
stos
sbb
mov
in
xchg
and
aad
fldl
inc
sbb
das
sbbb
and
cltd
ljmp
sub
adc
push
pop
test
loopne
mov
adc
and
dec
or
sbb
mov
cmpl
xlat
xchg
les
mov
pushf
pop
mov
dec
std
add
mov
fcoms
hlt
data16
loop
sbb
test
out
cmpsb
cmpb
mov
jl
inc
cmpsl
jb
sbb
sbb
push
sarl
out
shl
dec
stos
and
repnz
pop
push
pop
mov
jmp
push
mov
sub
add
dec
cmp
adc
xor
add
inc
lahf
popf
out
jg
sbb
pushf
out
xor
fwait
ja
dec
js
icebp
push
sbb
sbb
pop
enter
add
push
and
or
add
lds
mov
andl
inc
and
cmp
sub
fcmovu
jnp
mov
mov
cmp
lods
sbb
jle
xor
outsb
cmp
dec
push
push
add
xchg
das
xchg
xor
shlb
scas
ljmp
xchg
and
stos
dec
stc
loope
mov
les
mov
pop
das
fisubs
mov
clc
dec
sbb
jb
push
mov
cmp
mov
popf
push
jg
dec
or
lds
sub
orps
lcall
loope
push
mov
lahf
in
mov
or
jb
stos
and
xlat
lods
adc
sbb
out
jae
cwtl
std
inc
ja
jno
cmp
fcomps
rolb
or
adc
stc
into
and
ja
pop
push
mov
xor
jg
std
xchg
shl
cmp
adc
daa
and
data16
lahf
nop
shl
xchg
xchg
pushf
and
in
adc
mov
push
sub
cwtl
scas
test
xlat
cwtl
or
xchg
pop
in
test
lret
inc
jne
icebp
and
dec
jno
data16
sbb
xchg
nop
pop
popa
cmpsb
xchg
mov
cmp
ja
xchg
jl
xlat
aaa
ffreep
cwtl
fdivrs
sbb
and
xor
stos
mov
test
push
cmp
ss
cmpsb
mov
mov
in
mov
cld
outsl
cltd
xor
stc
shl
jne
sub
fsubrl
pop
je
sarl
daa
imul
fisubs
icebp
orl
jnp,pn
xor
in
hlt
js
movsb
hlt
cmp
imul
adc
mov
inc
push
mov
pop
mov
mov
hlt
insl
push
imul
sahf
jbe
mov
pop
movsl
lds
dec
and
in
adc
mov
jo
stc
test
lds
arpl
out
add
movsl
repnz
aam
add
sahf
iret
push
sub
cld
cltd
sbb
sti
jne
hlt
jg
mov
mov
and
negl
jp
xchg
test
call
sub
sbb
jecxz
mov
mov
adc
fstps
xor
lret
jo
sub
out
das
pop
jo
pop
in
int
icebp
pop
cmpsb
leave
pop
andb
jb
aaa
cwtl
xchg
loope
and
inc
sahf
mov
hlt
mov
out
push
fbld
popa
out
scas
mov
and
sbb
fildll
mov
jp
lret
pop
rolb
rcr
mov
les
aas
dec
jbe
data16
add
loop
lret
sub
dec
xchg
divl
xlat
sub
jb
mov
sbb
jl
fstl
in
xchg
out
sub
sbb
pop
outsl
pop
mov
mov
xor
dec
aam
icebp
sub
adc
movsl
mov
sbb
xchg
and
imulb
aam
outsl
outsl
and
addr16
mov
push
cmpsl
lret
int
lcall
cmp
pusha
cmp
adc
fs
je
xchg
fbstp
stc
push
inc
stc
lea
mov
xor
xchg
pop
cltd
cmp
clc
xor
and
cltd
or
push
or
xor
pop
pop
adc
sbb
sbb
adc
movsl
push
xchg
idivl
adc
jne
dec
mov
sub
popf
mov
xor
mov
loopne
mov
pop
fsts
adc
outsl
push
sti
inc
adc
push
sbbl
mov
shrl
das
call
ljmp
and
popf
hlt
lret
negb
xchg
stos
jmp
mov
mov
outsl
fwait
pushf
dec
stos
jno
sub
ds
mov
ljmp
cld
rclb
lret
push
sbb
cld
mov
or
leave
and
adc
jb
pusha
dec
filds
jbe
ret
sbb
jmp
inc
in
sahf
sub
xor
xor
stc
pop
jnp
loopne
sbb
jb
add
jne
add
pop
cmp
xor
imul
pop
xor
test
test
sarl
adc
scas
pop
dec
and
lds
lret
push
adc
es
fbstp
in
mov
das
bound
mov
jle
add
sub
hlt
das
sub
das
insl
cmp
xor
loope
sbb
xor
mov
jge
and
jno
inc
mov
std
in
cmp
rcrl
mov
mov
data16
xchg
xchg
xchg
xor
dec
in
jmp
js
lock
cs
stc
xchg
and
leave
sarl
clc
sub
fcompl
cmp
cmp
lcall
adc
xor
xlat
push
call
pop
cs
popa
cmp
push
xchg
push
shll
arpl
fistps
adc
rorb
scas
and
fistps
adc
mov
fbld
mov
loop
pop
and
xor
stc
das
shll
inc
dec
sti
sbb
xlat
xor
xchg
cs
jns
popf
int
xchg
data16
fcomp
inc
roll
add
pop
mov
shll
lahf
mov
mov
pop
mov
add
and
sbb
mov
sub
movsb
fimull
sbb
mov
xor
mov
pop
sbb
mov
push
sub
fcoms
sbb
adc
pop
xor
mov
jmp
rorl
xchg
pop
outsl
xchg
test
xorl
mov
and
int
or
cmp
enter
fstpl
xor
fadds
insb
das
sbb
sub
xor
xor
addb
jne
push
pop
js
fs
xchg
aad
pushf
sbb
aas
pop
push
aaa
mov
add
outsb
lcall
push
pop
xor
cltd
jg
arpl
sbb
adc
lcall
pop
pop
push
sbb
cmpl
adc
push
out
or
out
xor
cmp
xchg
andb
lahf
and
inc
popf
std
xchg
mov
fbld
xor
sbb
outsl
sub
or
out
aam
xchg
sti
popf
mov
and
jne
adc
inc
dec
xor
push
mov
xchg
xchg
dec
mov
jecxz
gs
push
nop
sbb
sbb
aaa
sbb
xchg
pop
mov
icebp
xchg
sbb
popf
cmc
mov
ja
xor
fisttpll
pop
pop
push
sbb
jb
in
das
push
lret
rcll
push
aad
sbb
xor
js
mov
in
and
xchg
cmp
xor
stos
jmp
bound
sub
xchg
xor
fldl
gs
jo
xor
xor
push
mov
pop
pop
cli
add
xor
out
jp
aad
cld
xor
repz
outsb
imul
sbb
mov
mov
jo
xor
icebp
cli
scas
test
mov
lock
int
pop
sbb
cmpsb
xor
xchg
dec
xor
mov
out
inc
mov
mov
xlat
xor
or
bound
dec
cmp
sahf
movsl
stc
adc
or
sti
push
inc
repnz
xor
and
pop
mov
sbb
dec
push
shr
ret
ficoml
xor
in
movsl
adc
or
out
ljmp
xor
jp
fs
jbe
shll
jnp
jecxz
mov
pop
pusha
clc
xor
jne
xor
jp
cmp
pop
ret
sub
mov
dec
shll
clc
jle
dec
xor
or
sub
cmp
subb
and
hlt
xlat
mov
aaa
mov
jge
jns
jmp
shlb
loop
jae
mov
fistl
dec
and
push
push
adc
adc
sub
jno
adc
xor
out
jbe
outsb
cmc
mov
aaa
add
xor
inc
ret
iret
movsb
jo
push
or
and
aad
add
cmc
push
stos
sbb
dec
fcoml
js
push
jle
inc
cmpsb
cmp
ljmp
stos
es
xor
out
mov
mov
cli
fs
test
stc
fsubs
jmp
mov
inc
add
xor
xchg
pop
mov
xor
jp
out
out
or
xor
fbstp
xor
loope
mov
push
push
and
push
daa
xchg
hlt
dec
push
jp
and
xor
fwait
mov
stc
ret
sub
adc
adcl
mov
inc
jmp
iret
sub
jns
mov
daa
das
lds
or
xor
js
fadds
xor
hlt
xchg
lds
pop
out
das
mov
inc
cld
adc
dec
pop
mov
test
xchg
mov
and
mov
jae
jle
push
adc
adc
mov
dec
xor
out
js
aad
cld
cmpb
adc
outsb
sbb
add
loop
cwtl
cmpsb
sub
and
pop
xor
icebp
mov
push
xchg
ljmp
jg
jns
cmpsb
cld
xchg
stos
xor
xor
into
cmp
add
xor
repnz
jg
mov
jge
in
or
pusha
cmp
jmp
or
adc
fdivs
inc
sbb
mov
insl
ljmp
ds
and
mov
popf
add
outsl
sub
clc
icebp
xchg
jl
pop
rolb
mov
adc
dec
cmpb
out
xor
mov
xorb
cmp
push
imul
mov
lea
pop
push
scas
movsl
and
fdivs
cmp
push
adc
vpsubsw
out
and
xor
fstpt
lock
fs
aam
and
mov
and
pop
mov
dec
push
push
dec
xchg
jnp
call
loopne
adc
dec
sub
scas
push
insb
inc
imull
xor
outsb
outsl
add
roll
lock
or
fsts
jle
sbb
in
xchg
aam
sbb
popf
xor
lods
jle
fistps
xchg
mov
lcall
es
xor
pop
insl
xchg
jo
push
mov
js
addr16
push
jne
stc
xor
push
loopne
cwtl
sub
jbe
or
xlat
push
shrl
es
sbb
shrl
xor
repz
pop
pop
adc
mov
mov
fidivl
loopne
inc
push
outsl
lret
cmp
icebp
pop
sbb
and
jge
xor
mov
mov
adc
pushl
mov
mov
xchg
xchg
scas
adc
jl
mov
hlt
adc
int
and
das
movsl
jns
fstl
sub
adcb
jge
popf
ss
in
pop
fs
orl
rclb
jno
cwtl
and
xor
mov
add
inc
push
jmp
test
out
mov
push
and
sbb
cmp
dec
cmp
cwtl
ret
pop
lcall
push
pop
pop
adc
xor
jmp
or
popf
icebp
inc
lods
xor
xor
and
jns
adc
enter
inc
sub
jb
cmpsl
inc
add
negl
xchg
and
xor
and
je
sub
mov
xor
xor
mov
jecxz
mov
xor
xor
inc
cmp
roll
mov
fistpl
stos
jecxz
iret
lods
sub
mov
loopne
and
inc
stc
or
fnsave
idivl
mov
dec
and
sbb
and
mov
push
icebp
rorl
pop
fdivrs
xor
add
lds
xlat
jns
in
xchg
jo
ret
cmpsl
ficoms
popf
imul
push
xor
idivl
push
push
pop
jl
mov
int
xor
jb
push
iret
xor
nop
inc
out
les
popf
push
sub
out
adc
jmp
iret
or
cmc
icebp
xor
mov
clc
sub
iret
inc
pop
mov
xchg
aaa
es
jg
push
adc
repz
enter
ret
das
push
sbb
fnstenv
lea
bound
stc
sarl
and
sub
loopne
ljmp
out
adc
push
push
adc
mov
je
popf
loop
xchg
sub
scas
outsb
xor
inc
sarb
jns
loope
add
xchg
or
xor
xlat
sbb
adc
mov
out
adc
push
bound
and
dec
dec
xor
inc
stos
scas
add
push
out
fstl
push
in
out
mov
mov
jle
xor
sub
cmp
pop
sub
jmp
xor
ja
subl
adc
push
sbb
jge
shll
leave
int3
add
xor
and
mov
jp
repz
outsb
add
and
arpl
orl
jecxz,pn
xchg
cld
fwait
and
aad
popf
lds
out
shll
int3
sub
jecxz
stc
sub
sub
aaa
push
dec
adc
clc
lods
push
and
in
push
popf
std
insl
out
xor
jne
nop
inc
add
sbbl
ljmp
ret
cmc
jg
push
xor
sub
ljmp
pop
inc
loope
popf
jae
into
cmpsl
adc
test
int3
xlat
mov
andb
iret
sub
and
cmp
sub
sbb
icebp
popf
push
xor
sbb
rcl
daa
fidivs
icebp
xor
pop
cs
xor
std
in
cmp
pop
hlt
push
lds
adc
adc
xchg
add
loopne
add
je
sbb
xor
shrb
fsubp
push
mov
or
pop
aad
dec
int
pop
jp
mov
cld
jbe
jmp
jle
or
ss
add
jg
clc
out
adc
push
mov
cwtl
adc
or
xchg
bnd
xor
cmpsb
pop
outsl
pop
mov
pop
lock
cmp
mov
push
lock
cld
mov
cmp
and
stc
xor
iret
outsb
and
inc
movups
shlb
adc
cmp
pop
xor
outsl
cmp
and
sbb
mov
fbstp
xor
js
inc
push
sub
add
xlat
fiaddl
xor
sbb
lret
sbb
sbb
sbb
sbb
ficomps
sub
jmp
mov
stos
push
popf
xor
mov
sub
xor
out
out
shll
fdivrs
mov
nopl
xor
adc
jle
fdivs
inc
jmp
mov
sbb
inc
mov
shll
int3
sbb
cmp
in
lcall
lds
adc
sbb
cmp
lods
imul
movsb
cmp
jo
cmp
fiaddl
lcall
call
cli
ss
pop
test
adc
sbb
cli
fidivrl
sbb
mov
or
cli
lcall
mov
movsb
movsl
sbb
sbb
fildl
xchg
sbb
inc
lcall
add
push
rcrb
cmp
sti
pop
and
fstpl
fistpl
cli
sbb
jne
repz
int
jecxz
scas
lret
popa
mov
pop
cmp
fwait
movsb
sbb
mov
inc
cmp
pop
insl
or
test
jbe
cli
sti
addb
mov
sub
adc
repnz
and
cli
pop
fisubrl
lcall
sub
xchg
adc
icebp
pushf
std
cmp
cmp
add
or
jecxz
xor
fwait
lcall
out
or
xor
jp
pop
or
push
pop
fstpl
fistpl
cmp
mov
jnp
ds
push
cmp
cmp
push
lcall
or
and
sti
scas
push
fwait
add
xchg
adc
jnp
sbb
sahf
sbb
ud2
ror
dec
pop
pop
fcmovne
sarl
int3
pop
imul
lcall
sbb
fs
mov
fistpl
loop
mov
mov
xchg
mov
andl
adc
sti
or
push
idivl
pop
mov
push
jnp
add
sbb
add
mov
sbb
out
mov
dec
cmp
sbb
push
fiaddl
lcall
mov
sti
push
lock
cli
fcmovbe
pop
add
lock
lahf
iret
or
cmp
or
mov
fidivl
fiaddl
call
iret
sti
sbb
sti
xchg
fstpt
jnp
pop
cmp
xchg
inc
cwtl
cli
cmp
mov
sbb
icebp
out
and
or
xor
jecxz
hlt
jnp
pop
dec
cmp
sub
push
or
pushf
jp
ss
movsb
add
jmp
or
jecxz
scas
nop
fcmovnu
jle
push
mov
push
in
jnp
popf
loop
adc
cli
daa
xchg
rcrl
adc
pop
mov
push
iret
mov
cli
fwait
push
jo
jnp
sbb
xchg
aad
xor
cli
xchg
pop
loopne
lock
push
push
sbb
leave
sti
adc
and
sbb
jecxz
cli
add
jns
jp
mov
or
lahf
lea
xchg
jo
add
rol
ret
mov
cmpsb
cli
std
ret
adc
xchg
out
or
sbb
or
push
adc
fistpl
popf
insl
inc
sbb
rolb
cmp
cmp
cmp
mov
dec
sbb
cli
sarl
mov
fisubl
fcmovnb
mov
push
lods
cmp
dec
xlat
rcll
mov
xchg
lret
vmovlpd
mov
xlat
xchg
out
fidivl
xchg
fsqrt
sti
aaa
ficoml
fisttpl
mov
testb
adc
xchg
aaa
jo
pop
pop
in
clc
jae
lahf
or
jecxz
popf
cld
ficoml
movsl
mov
pop
dec
push
mov
cmp
jns
fsts
mov
xchg
outsl
pop
jecxz
pop
jb
sbb
sbb
jecxz
cli
sti
add
inc
mov
pop
cli
stos
jo
mov
xor
pop
adc
ficompl
push
or
lcall
push
inc
xchg
cltd
or
mov
push
lock
shl
inc
mov
inc
push
test
rcl
xadd
neg
push
bt
btr
neg
push
call
stos
fwait
ret
jg
push
movsb
dec
xor
push
push
add
push
int
xchg
dec
int3
das
dec
sahf
mov
jg
aad
dec
mov
sub
cmp
ret
mov
shlb
sub
cmp
lahf
test
and
js
mov
aaa
js
orb
loop
ret
mov
popa
loop
mov
and
mov
xor
pop
mov
insb
xor
arpl
sub
sbb
mov
inc
pop
inc
loope
mov
imul
lds
add
pop
aam
jno
iret
sbb
adc
dec
pop
jl
iret
and
and
jp
ljmp
or
int
arpl
adc
xor
push
addr16
mov
cmp
xchg
pop
sub
clc
iret
and
fbld
out
and
add
outsb
or
pop
xor
movsb
ret
movsb
xchg
test
xor
aad
repz
cmp
clc
iret
and
and
or
add
not
pushl
push
lea
call
movl
pusha
movl
movb
mov
pushf
push
lea
jmp
or
pusha
lea
je
lea
call
lea
jae
movsbw
test
pushf
mov
shld
rcr
mov
cmc
shr
mov
call
mov
movb
movw
mov
movb
pushl
ret
pop
call
movw
jmp
push
pushl
pushf
lea
jne
lea
movsbw
mov
call
pushf
movb
pushl
popl
mov
pushl
pushl
ret
mov
mov
pushf
lea
jmp
jmp
mov
lock
push
mov
dec
iret
jp
scas
clc
fildll
mov
jne
pop
outsb
jns
mov
arpl
inc
adc
jle
pop
sbb
aad
jno
stos
cmp
aas
lds
leave
lret
sbb
leave
outsl
xchg
clc
xchg
xchg
aam
mov
pop
mov
push
sub
lods
jno
lcall
push
sbbb
clc
inc
into
movsb
dec
pop
jle
mov
dec
outsb
mov
or
adc
inc
sarb
iret
and
pop
sahf
jns
hlt
roll
and
xor
movsl
or
mov
sbb
loopne
leave
lahf
add
mov
cmpsb
jae
out
pop
pop
shlb
clc
xchg
ret
lods
pop
stc
pop
sti
daa
loopne
fmull
xchg
inc
and
pop
out
rorb
xchg
arpl
sub
clc
iret
and
sbb
je
add
add
jmp
lea
jae
je
pushf
jmp
push
sbb
inc
mov
or
cmp
jo
push
jo
sub
inc
jbe
aas
push
add
lods
adc
shr
mov
repz
rclb
addr16
pop
cs
out
push
cltd
mov
cmp
pop
cmpsb
repnz
mov
shl
cmpb
dec
or
sbb
adc
mov
inc
dec
cltd
and
clc
xor
cmp
shlb
add
test
add
adc
pmaddwd
int3
shrl
add
pop
push
add
pop
push
fucomip
stos
inc
cld
pusha
jp
push
and
xor
cmp
jecxz
aas
into
popf
leave
jns
shll
pop
xor
daa
mov
xchg
and
out
imul
xchg
enter
mov
sar
iret
push
ror
jae
push
movw
dec
pushf
mov
movb
lea
call
cmc
jmp
add
inc
js
je
jb
arpl
jae
call
pop
sub
add
push
sbb
outsl
mov
or
addr16
inc
mov
clc
leave
xchg
arpl
push
sbb
into
push
pop
mov
xor
xchg
xor
arpl
sbb
outsl
pop
ljmp
push
sub
addb
insb
sbb
arpl
xchg
push
or
pop
lret
fsubr
gs
in
cmovb
loop
ss
xlat
orb
push
fildll
mov
out
pop
stos
fldenv
lret
mov
xor
lret
add
jns
jb
ss
mov
inc
xor
iret
pop
and
fmulp
jl
stos
sahf
inc
rcll
test
fisttpll
sbb
pop
xor
mov
lods
sbb
sarl
mov
stos
sbb
ror
jle
clc
iret
pop
out
sbb
ret
sub
mov
adc
jecxz
cmp
rclb
sahf
ret
jmp
es
mov
out
cs
add
mov
aaa
mov
bnd
out
xchg
loopne
cmp
rol
into
mov
sub
ficomps
mov
push
in
or
mov
stos
arpl
aad
and
cwtl
dec
cld
mov
rcr
cmp
adc
sbb
movsb
idivb
out
mov
dec
mov
jge
fstp
movsl
xlat
call
cmpsl
in
fldt
xor
xlat
and
xor
pop
mov
and
and
enter
scas
clc
iret
sbb
sub
ljmp
das
mulb
pop
xor
out
adc
imul
pop
pop
pop
scas
mov
jl
push
sbb
iret
sbb
nop
dec
mov
mov
fcompl
bound
push
mov
jmp
enter
cmp
push
clc
iret
sbb
inc
and
add
add
mov
lea
bswap
lea
jmp
jmp
pushf
pushl
jmp
rcl
bts
mov
stc
test
push
cmc
cmpb
call
sub
cmp
cmp
pushl
call
jmp
xchg
out
stc
stos
mov
jnp
or
rorb
ds
sbb
add
push
lcall
push
pop
lret
push
decl
adc
cmp
pop
xor
add
xchg
arpl
push
notl
js
mov
std
in
cmp
clc
iret
sbb
dec
and
mov
mov
push
mov
pushf
movl
pusha
pushf
pushl
ret
cmc
cmc
cmp
pushf
movsbw
lea
lahf
push
mov
call
pusha
and
addr16
mov
imul
stos
mov
xor
xor
dec
rol
cs
enter
pop
jb
mov
add
out
mov
pop
inc
jmp
xchg
repnz
adc
cmp
cmp
fwait
cmpsl
ds
or
mov
mov
xor
sub
pop
and
hlt
adc
loopne
pop
adc
cld
int3
in
cli
daa
xor
out
clc
iret
sbb
and
lea
call
call
pusha
jmp
cmp
clc
stc
or
je
jne
sbb
rcr
mov
sar
mov
jmp
lea
ja
cmc
add
push
push
or
movl
jmp
cmc
cmp
xor
clc
test
push
push
repnz
pushf
lea
jne
rcr
call
xor
dec
idiv
aam
stos
lcall
ljmp
icebp
std
or
mov
fstp
xor
mov
and
insl
aaa
push
xor
xor
push
iret
sbb
data16
fs
call
push
adc
jmp
mov
dec
sbb
add
xor
nop
push
stos
jns
loopne
mov
mov
add
xor
fildll
les
shlb
clc
xchg
xchg
pop
push
aas
addl
xor
into
pop
dec
sbb
fildll
sahf
clc
iret
sbb
adc
fs
jne
push
mov
pushf
lea
jge
push
push
jmp
mov
setae
mov
pusha
push
mov
pushf
pushf
mov
pushl
mov
pusha
pushf
pushl
ret
std
int3
push
popa
inc
lcall
inc
or
mov
or
jbe
hlt
in
push
adc
lret
mov
mov
shr
repz
dec
mov
xor
fildll
imul
and
ficompl
xchg
lds
xchg
int3
out
or
je
push
adc
and
popf
fwait
dec
comiss
sbb
dec
gs
push
loop
add
xchg
jbe
cld
insb
loop
enter
stos
sub
inc
or
sbb
mov
sub
add
mov
jns
and
mov
dec
cld
jb
push
sti
and
push
inc
jbe
ds
jns
pop
dec
hlt
dec
ja
jne
cmp
loope
jnp
push
mov
aas
popf
cmpsb
lret
or
fdivrs
sbb
mov
push
dec
in
adc
cmp
jg
sbb
mov
dec
hlt
sbb
dec
bound
sub
xor
jmp
outsb
inc
in
adc
lea
test
arpl
sbb
adc
xchg
ss
call
jnp
insb
xchg
and
loope
mov
jge
xor
pusha
push
pusha
shrl
cli
dec
inc
loopne
xor
loope
andl
add
dec
push
jp
ds
inc
dec
loope
and
cmpsb
mov
or
sar
rorl
sbbl
dec
jb
xor
es
mov
cli
mov
stos
aam
jo
stos
jnp
mov
shrl
lahf
mov
pop
push
sub
and
iret
push
stos
out
jmp
push
push
lea
jbe
sub
shl
adc
xadd
sub
ror
mov
btr
mov
shrd
add
bswap
shr
bts
mov
push
neg
add
pushf
bswap
mov
mov
pusha
jmp
add
movb
not
cmp
pushl
xor
jmp
pusha
movl
jmp
clc
pusha
sub
call
mov
pushf
pushl
ret
cwtl
movzbl
lea
pushf
pushf
pushf
movl
jmp
jmp
sub
or
btr
mov
clc
push
stc
jmp
mov
jmp
pusha
lea
jae
push
not
call
jle
sbb
mov
sahf
mov
push
fildl
cltd
shr
push
cmp
xchg
daa
push
mov
in
jns
jbe
inc
pop
les
and
xchg
lds
rorb
stos
and
gs
stos
sbb
clc
iret
pop
in
out
ficoml
ret
sub
std
dec
repnz
pop
js
ja
pop
scas
clc
pushf
lock
dec
push
and
popf
int3
jae
sarb
aas
out
jp
mov
iret
pop
cmpsl
dec
and
inc
mov
mov
call
jl
xor
jno
pop
jl
cmp
lods
popa
loope
xor
dec
sbb
aad
les
lods
loope
xchg
testl
stos
mov
setae
nop
loopne
popf
imul
clc
iret
pop
mov
cmp
jmp
pusha
movl
pusha
call
push
not
mov
pushf
mov
not
pusha
xchg
setl
mov
jmp
sub
pusha
movb
pushl
popl
pushf
clc
cmc
cmp
pushf
lea
ja
xor
rol
sub
and
mov
add
xor
mov
add
mov
jmp
call
jne
mov
jnp
hlt
rcrl
or
push
loopne
xchg
cli
inc
out
stc
movsb
sub
add
imul
pop
data16
push
jnp
outsl
ds
jle
push
push
js
push
dec
adc
int
int3
cwtl
in
clc
iret
adc
mov
push
mov
mov
pushf
push
pushl
pushl
ret
fsubs
mul
adc
dec
xchg
fiadds
cmp
loopne
mov
pop
xor
mov
stos
cmp
jbe
cmc
clc
xchg
and
jp
lcall
or
insb
aaa
cmpsb
aad
mov
imul
sub
iret
adc
inc
clc
movw
call
cmpb
jmp
call
and
xor
je
dec
repnz
movq
sub
and
sub
addb
ja
std
popf
xchg
push
sub
or
mov
and
rolb
call
xor
jae
ss
xor
pop
sub
sub
inc
fildll
xchg
xorb
mov
mov
mov
lcall
into
nop
repnz
icebp
inc
stos
adc
call
cmp
fsubr
clc
test
sub
outsb
cmp
dec
adc
xlat
and
fcmovu
dec
mov
ror
jmp
iret
adc
pusha
lea
jae
jmp
in
sbb
repz
popa
or
push
xor
dec
mov
inc
aam
scas
mov
mov
jmp
in
fwait
sti
andl
jp
enter
sub
iret
adc
movb
lea
jns
je
pushf
cmp
movb
call
jmp
fimuls
icebp
sbb
subb
cmpsl
into
xchg
mov
movsl
adc
aas
mov
pop
xor
and
dec
ja
jo
pop
rolb
clc
xchg
mov
cld
inc
push
outsb
mov
xorb
jno
stos
push
and
clc
iret
adc
out
hlt
call
movw
add
cmc
mov
test
add
ja
cmp
test
pushf
mov
lea
je
call
call
cmp
push
sub
call
test
pushf
sub
push
cmp
push
pusha
mov
call
lea
jae
cmc
cmp
call
movl
pushf
pushl
popl
push
pushl
ret
movl
pushf
lea
jmp
call
or
shrb
in
add
xchg
push
sub
mulb
adc
mov
fisubrs
negb
cmp
arpl
cs
test
mov
xchg
xchg
lds
mov
inc
lds
pop
nop
jb
inc
sub
mov
push
ret
notl
out
je
inc
insb
push
pop
pusha
xlat
pop
or
pop
xor
xchg
jl
test
push
xorb
fs
xchg
pop
xor
jno
cmpl
pop
in
cmp
gs
clc
iret
adc
cmp
fs
je
jp
push
pushf
sub
call
movb
movb
push
mov
pushf
mov
pushl
pushl
ret
push
lea
ja
pushf
call
mov
test
jne
incl
xor
arpl
popf
or
daa
hlt
adc
js
jno
xchg
mov
in
lods
aam
cs
pop
ljmp
rolb
push
push
pop
push
cmpsb
cmp
jp
test
xor
out
sbb
mov
into
ficompl
xor
xchg
fsts
es
xchg
sahf
insl
cmp
fs
add
clc
iret
adc
in
lock
std
std
xchg
mov
int
jp
lahf
add
into
scas
lods
outsl
sbbl
lret
rclb
jge
stc
in
push
mov
add
out
daa
adc
test
sub
rolb
xchg
sbb
inc
cmpsb
xchg
xchg
push
push
cmpsb
xor
cld
add
sbb
adc
enter
fisttpl
xor
mov
pushf
movsbw
pusha
not
mov
pushl
push
pushl
ret
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pushf
lea
jne
test
ror
mov
push
cmp
push
lea
ja
movzbl
bswap
pop
call
push
lea
jne
call
sete
add
shl
sbb
mov
test
jmp
lods
lock
cli
scas
fs
jl
mov
inc
xor
repnz
and
inc
push
fstps
es
leave
jb
push
into
cmpsb
sbb
mov
push
ds
jae
insb
psubq
jecxz
add
mov
and
out
rorl
sub
push
jge
lahf
sahf
pop
repnz
sarb
mov
fisttps
mov
mov
xor
inc
aad
enter
add
mov
sar
loop
testb
inc
out
and
and
pusha
mov
dec
add
cmp
out
imul
cmp
fists
adcl
mov
ss
mov
jecxz
idivl
test
ja
js
sub
in
scas
mov
adc
adc
add
sahf
adc
arpl
nop
adc
lods
pop
dec
mov
aas
es
ficoms
dec
jmp
movl
mov
pusha
pushf
lea
jmp
call
cmp
adcb
pop
jb
and
adc
and
push
inc
shll
cmp
cmp
cmpb
ficoml
jns
arpl
aad
addr16
add
push
shrb
out
cmp
pop
aas
fistpll
jo
outsb
mov
aas
and
popf
push
fidivrs
xchg
pop
or
lea
int3
mov
les
inc
dec
pop
aas
jbe
fldcw
ss
js
pop
mov
fstps
dec
push
push
add
lcall
inc
cmpsl
inc
cmpl
pop
jmp
lods
mov
js
add
mov
add
fs
jne
bswap
rcl
mov
test
pushf
cmp
jmp
cmp
pusha
lea
jne
pushf
pusha
pusha
pushl
inc
jmp
lea
jae
add
shll
pusha
insb
repz
adc
in
mov
clc
les
sub
dec
cmp
mov
mov
dec
and
in
mov
cmpsl
add
and
pop
cmp
xor
mov
sti
pmullw
push
aas
dec
xchg
pop
imul
loope
sub
push
cmp
and
push
and
and
movsb
or
mov
roll
mov
imul
sti
rol
pop
fs
jecxz
sbb
fcoml
cld
loope
mov
loopne
pop
dec
hlt
mov
or
roll
repz
and
push
cmp
push
lock
leave
aad
xchg
adcl
insb
mov
dec
outsl
mov
stos
loop
or
ds
cmpsb
pop
xor
loope
into
mov
sbb
lcall
lods
jbe
clc
iret
or
incl
sub
fdivr
pop
pop
cmp
xchg
mov
out
or
movsb
stos
push
add
jo
push
pop
xor
shll
ljmp
xchg
stos
pop
xor
sub
push
inc
es
movl
call
pushl
mov
push
movw
push
pushl
ret
push
call
lea
je
call
in
popf
daa
push
cmpsb
inc
inc
xor
push
mov
fidivrs
shlb
nop
stc
popa
jle
and
or
push
dec
repz
cmp
insb
lds
pushf
sbb
cmpsb
test
sbb
int
outsb
mov
adc
movsl
mov
stc
loopne
and
dec
xor
clc
dec
das
in
xchg
leave
scas
push
jmp
clc
das
mov
xchg
lahf
pop
sub
lret
mov
cld
pop
xor
arpl
fcompl
inc
or
test
sar
iret
or
sbb
ljmp
addr16
xchg
pop
xor
pop
sub
mov
pop
adc
jl
push
cmc
add
movsl
out
aad
call
aaa
mov
inc
inc
fcompp
push
gs
lea
push
sub
push
pop
xor
inc
sbb
xchg
fbstp
iret
or
mov
add
into
bswap
movzwl
movzbw
lea
bswap
lea
movzbl
mov
movb
jmp
setb
pusha
lea
pusha
pushf
mov
movl
call
repnz
pushl
movw
lea
jne
pusha
bt
sub
mov
btc
sub
bsr
lea
pusha
sub
push
pushf
pushl
popl
push
test
test
cmp
mov
push
call
call
push
setl
not
pushl
lods
pushf
bt
sub
stc
pushf
stc
push
xor
pusha
ror
stc
pushf
pushf
mov
add
call
lea
jne
adc
rcr
rcr
bts
mov
xor
pushf
movzbw
add
sub
add
cmc
lea
rcr
lea
clc
pushf
sub
cmp
pusha
pushl
popl
clc
cmp
call
and
loope
sbb
inc
sub
or
frstor
cmp
loopne
mov
pushf
mov
loop
pop
cs
orl
pop
rorb
xchg
mov
add
or
das
sbb
rorb
daa
push
movsl
adc
sub
iret
or
test
rclb
dec
xchg
pop
out
cmp
jo
arpl
cmp
js
and
mov
and
clc
ljmp
cwtl
movsb
xor
fdivrs
shlb
inc
aaa
scas
call
mov
dec
push
push
sti
shrb
push
add
push
adc
or
iret
xor
jge
jo
insl
jp
scas
sbb
cmp
or
mov
jg
sub
lcall
sbb
sbb
fimull
std
out
adc
add
scas
inc
ljmp
jge
clc
iret
or
idiv
dec
pushf
jmp
dec
in
es
adc
cmp
inc
int
jmp
inc
mov
arpl
inc
lods
nop
out
fwait
ds
dec
mov
xor
clc
iret
or
and
test
aaa
xlat
adc
xor
cmpsl
daa
mov
fwait
and
je
negl
hlt
incl
xor
loop
or
outsb
cmp
cld
cli
add
jbe
xorb
jmp
cmp
mov
mov
mov
adc
xchg
push
lret
loope
leave
fadds
jo
imul
jo
ffree
orl
push
cmp
dec
mov
fldt
rorl
int
jns
pop
jle
xchg
jmp
aad
pop
inc
push
mov
pusha
dec
fisttpl
or
xor
addb
leave
push
cli
test
seto
shlb
or
add
add
push
add
push
add
rclb
pushf
ja
add
mov
add
movl
call
lea
ja
test
sub
btr
inc
clc
add
pushf
btr
push
pop
mov
ror
or
mov
push
cmp
test
cmc
repnz
pushf
lea
jne
movzbw
movb
lea
pushf
lea
bswap
mov
call
movb
pusha
rep
pushf
not
mov
movb
pushf
pushl
lea
jmp
lea
lahf
lea
jp
call
jmp
stc
pushf
cmc
jmp
call
clc
test
add
pushf
push
call
jmp
cmc
test
push
jmp
mov
pusha
pusha
lea
jmp
xchg
push
gs
adc
sbb
dec
cwtl
pusha
jmp
pop
jmp
subb
pop
jmp
cld
push
pop
test
sub
aas
inc
sub
fs
lods
dec
lods
testb
jmp
xorb
clc
add
sarb
dec
mov
in
movsb
cmp
dec
pop
cmc
loop
enter
iret
out
rcrl
mov
mov
mov
dec
xchg
rcrb
adc
int3
or
in
sub
sbb
loope
add
sub
add
xchg
mov
adc
jl
lahf
cli
lcall
add
pushf
mov
or
mov
mov
popa
push
pop
sub
mov
xor
push
xchg
sbb
scas
in
xchg
ljmp
mov
clc
iret
pop
js
leave
add
movb
lea
jmp
shl
mov
lea
jo
setp
lods
cmp
sub
clc
xor
stc
ror
jmp
add
dec
gs
inc
popa
insb
insb
inc
outsb
imul
pop
and
dec
push
mov
mov
mov
lea
jne
bsf
mov
pushf
cmp
movb
cmp
cmp
push
call
movb
add
cmc
mov
push
test
test
push
test
push
push
lea
je
jmp
mov
pop
pushf
pusha
push
push
pushl
ret
jmp
call
rcrb
je
add
adcl
jmp
ss
push
xor
outsl
clc
shl
xchg
std
dec
xor
xchg
pop
pop
cmpsb
mov
mov
mov
loopne
aaa
push
sub
pop
xor
pop
aas
sbb
scas
outsl
cmp
xchg
popf
mov
mov
sub
scas
mov
xor
fbld
lods
lcall
jnp
pop
notl
pop
xor
shll
rcll
inc
mov
cmpsb
sbb
push
out
xor
stos
repnz
lea
call
jmp
mov
mov
mov
faddl
mov
push
in
addl
sbb
in
fmulp
jno
inc
and
add
rorb
jle
cltd
adc
add
roll
mov
dec
jnp
mov
mov
hlt
sbb
jo
mov
mov
sahf
lret
adc
scas
jnp
roll
mov
push
push
rolb
jmp
add
lods
xor
enter
or
inc
rcl
adc
adc
push
xor
push
mov
dec
xchg
and
ja
adc
dec
add
pop
stc
add
push
cmpsl
pop
xor
or
dec
sti
fistpl
mov
cmp
xchg
out
mov
loop
xor
xchg
mov
jnp
push
je
xchg
and
mov
loop
data16
mov
pop
xor
xchg
inc
inc
xchg
mov
lods
xchg
xchg
push
fwait
pop
sub
fld
repnz
lock
xlat
or
iret
add
cmp
call
aam
push
cmpsl
sbb
in
adc
popa
test
jl
cmc
xorl
loop
or
call
leave
mov
pusha
or
xor
sbb
adcl
fwait
jnp
or
sub
mov
mov
jecxz
insb
mov
xlat
push
call
sub
sub
fs
mov
or
pop
je
add
pop
adc
jns
jae
bound
std
stos
fbld
push
fildl
inc
pop
mov
enter
clc
iret
add
xchg
lahf
pushf
jmp
jmp
pushf
movl
pusha
mov
call
call
jmp
jmp
test
shrl
scas
pop
mov
push
fwait
daa
das
cwtl
add
or
jns
stos
pop
add
inc
push
mov
leave
mov
lods
fcmovnb
stos
cld
mov
fmull
outsl
xor
cmp
xor
inc
mov
sub
adc
mov
arpl
mov
xor
xor
cld
dec
push
sti
cmp
dec
iret
mov
sub
clc
iret
add
and
ja
not
inc
push
not
inc
mov
inc
inc
bt
setne
xchg
cwtl
mov
xor
ror
test
mov
jmp
lock
repz
addr16
lea
jmp
pushf
mov
repnz
addr16
jge
xchg
mov
mov
insb
mov
adc
cli
cli
inc
and
mov
mov
fs
adc
lret
push
cmp
sbb
mov
flds
mov
shlb
hlt
movsl
or
arpl
xchg
mov
out
lock
fnstcw
or
push
push
xor
xor
sub
cmc
pop
out
test
lret
bound
ja
dec
ja
inc
or
enter
mov
fnstcw
outsb
mov
fbstp
xchg
aas
int
mov
pop
int
or
in
or
int3
adcb
xlat
cwtl
cmp
xchg
fwait
pop
mov
out
inc
and
sbb
iret
test
or
inc
push
push
popf
sub
xchg
scas
add
dec
cwtl
cmp
mov
hlt
or
and
push
stos
cltd
fs
js
sbb
pop
mov
xor
inc
data16
test
int3
addr16
push
mov
js
mov
aad
sub
fmuls
sar
xor
stos
outsl
mov
mov
mov
ucomiss
nop
xor
add
push
es
xchg
fisubl
push
es
and
mov
popf
dec
or
or
pop
xor
inc
int
into
nop
out
xchg
mov
fsubs
jne
arpl
iret
add
pusha
cmp
pushf
call
call
cmc
pushw
popfw
jmp
bt
mov
xor
call
push
jmp
mov
mov
cmc
shl
jmp
pushl
lea
jne
adc
sub
bsr
mov
not
add
pushf
stc
pushf
pushf
mov
push
pusha
mov
cmp
test
call
mov
subl
jbe
add
cmp
in
clc
jecxz
clc
sbb
shrl
pop
pop
icebp
nop
push
dec
call
xor
dec
xchg
and
nop
mov
mov
ror
add
mov
aas
outsl
or
rcll
cmp
inc
fisttpll
movsb
test
cmp
std
sti
into
sbb
pop
mov
lret
andb
stos
lcall
mov
in
lds
dec
inc
fiadds
xchg
mov
popf
dec
data16
and
dec
and
dec
repnz
mov
dec
in
imul
add
scas
imulb
push
jmp
decl
push
mov
mov
sub
xchg
stos
fsub
outsl
xchg
mov
pop
mov
fwait
in
shlb
lret
and
movb
lret
movsl
iret
call
add
out
inc
pop
mov
fsubrs
mov
lret
movsl
cmp
xchg
mov
xchg
sub
shlb
jae
sar
sub
int3
stos
cmp
sub
and
xchg
in
fadds
xchg
mov
xor
xchg
cli
int3
stos
fdivp
jle
stos
fcomip
roll
and
test
push
sub
inc
hlt
sub
dec
lret
clc
iret
dec
frstor
stos
jle
and
int3
xor
vcvtps2dq
xor
and
int
out
and
sbb
xor
pop
lea
lds
push
pop
bound
jmp
les
clc
iret
decl
fs
ja
pushf
lea
jmp
mov
or
dec
cmp
push
xchg
xlat
subb
test
out
adcl
and
in
pop
gs
imul
es
imul
push
sbb
sub
sbb
inc
bnd
mov
jp
sub
iret
ljmp
in
or
pop
test
mov
mov
xor
mov
push
inc
xchg
jecxz
rcl
xor
lcall
lret
adc
aaa
pop
dec
das
cmp
cmp
addr16
or
push
je
add
fimull
xor
cmp
add
scas
sub
pusha
insb
loopne
aaa
jbe
adc
andl
add
lea
scas
mov
jecxz
cld
pop
movsb
xchg
insw
mov
xor
cmp
orb
add
das
sahf
cmpsb
jo
xor
movsl
sub
dec
das
cmp
into
push
add
testb
mov
cmp
daa
or
and
mov
stos
aas
sub
xchg
pop
stos
adc
cmp
jne
jnp
push
fildll
pop
bound
add
cld
aaa
pop
jle
mov
pushf
mov
pushf
jmp
dec
call
fildll
movsl
cmp
popf
into
mov
mov
pop
aas
inc
xchg
ret
xorl
push
mov
pop
mov
pushf
and
in
test
or
clc
sarb
jg
xchg
adc
mov
xchg
cmpl
xor
in
jl
aad
dec
mov
inc
pop
or
pop
push
test
es
fimuls
adc
ret
cmp
lahf
mov
mov
sahf
pop
push
mov
loope
movsl
add
lahf
stos
pop
aaa
add
es
sarl
cltd
movsb
xchg
sahf
lods
in
clc
iret
std
scas
jecxz
movl
jmp
pusha
mov
call
mov
mov
pop
movzbw
movl
setl
not
bswap
lea
jmp
add
pusha
pushf
lea
jne
seto
pushfw
shl
rcl
rcr
mov
clc
sub
stc
call
mov
not
bswap
not
mov
pushf
mov
movzbw
jmp
pushf
pushl
popl
pushf
pushf
pushl
ret
sbb
sbb
stos
push
imul
and
push
aaa
repnz
adc
xchg
sbb
fs
pusha
cmp
cmc
inc
dec
popa
and
or
ds
or
push
shll
in
jecxz
cmpsb
jnp
and
fwait
mov
negl
cmp
push
sub
mov
xchg
jg
mov
cli
negl
mov
aad
xchg
fildl
movsl
out
stos
daa
je
idiv
push
adc
and
or
pop
xor
nop
icebp
fcomi
push
nop
push
popa
dec
xlat
bound
mov
xor
push
movl
movw
pushl
pusha
lea
jmp
lods
imul
ds
push
xchg
sbb
dec
push
pusha
scas
mov
shl
in
shl
jle
xor
mov
outsb
sub
cmpsb
mov
pop
add
pop
andb
int3
in
cwtl
stos
pop
aas
or
mov
bts
push
xlat
jmp
lock
outsl
mov
mov
sub
inc
mov
or
out
inc
jb
xor
mov
shll
fimuls
dec
push
in
sbb
ret
clc
iret
sti
or
push
shr
aam
cmp
stos
jbe
imul
mov
ret
mov
mov
out
push
mov
pop
pusha
lcall
mov
ljmp
push
pop
aas
aaa
jno
adc
pop
push
aaa
in
roll
repnz
push
sub
jo
lret
push
pop
int3
int3
pop
xchg
xor
pop
pop
lret
mov
xor
lods
ja
sti
jle
sti
dec
dec
clc
iret
sti
dec
xchg
add
cmp
ltr
jns
icebp
mov
test
or
mov
fidivrs
imul
push
pop
mov
xor
in
jbe
pop
jnp
mov
aam
shll
aas
and
subl
mov
cmp
fisttps
out
add
add
xor
dec
and
jne
xor
xor
inc
stos
pop
vpunpcklwd
fimull
aam
clc
iret
clc
or
jmp
pushf
mov
not
jmp
repnz
pusha
jmp
push
pushf
jmp
movw
lea
jne
xor
rcl
xchg
mov
test
and
sub
lea
btc
sbb
mov
jmp
pushl
push
lea
jne
cwtl
setb
movsbw
movb
push
pop
push
jmp
adc
jmp
imul
gs
xor
cs
insb
add
xchg
sub
bt
imul
cmc
cmp
add
pusha
lea
jmp
bt
or
push
lea
je
setl
mov
not
pushf
pusha
movsbw
lea
pushf
xchg
lahf
setle
pop
pusha
pushl
popl
not
mov
movsbw
pop
pushf
movl
setno
setne
bswap
jmp
push
lea
ja
jmp
pushf
pushf
lea
ja
pusha
lea
jmp
xlat
sbb
pop
sahf
xchg
scas
sbb
aaa
stc
push
jns
test
jno
xchg
sbb
mov
xor
add
mov
adc
add
and
or
icebp
adc
fidivrs
fucom
int3
adc
push
bound
rcr
mov
andb
shl
inc
loopne
inc
pop
inc
sti
mov
and
and
pop
or
loopne
pop
ficomps
jg
fistl
fs
add
and
loopne
sahf
lods
or
aad
cs
add
and
jbe
add
in
dec
lret
stos
mov
loop
inc
sbb
shll
and
sti
lret
imul
out
loopne
fs
arpl
rcrl
sahf
dec
sub
ljmp
and
pop
std
cs
gs
add
pop
lods
lods
lret
mov
push
or
fildll
loope
inc
fcomip
pop
jne
add
add
cmp
in
adcb
cmpb
in
lods
or
and
add
inc
test
outsb
in
mov
inc
fistps
pop
popa
loope
rol
arpl
add
sahf
shll
sarb
xor
icebp
mov
and
lret
ret
fs
cli
fldenv
sub
sbbb
and
and
in
aaa
inc
push
sub
adc
loope
push
add
add
imul
outsl
insl
and
mov
and
xor
add
pop
cmpsb
fists
outsl
xchg
mov
mov
mov
and
outsl
insl
scas
lods
or
and
push
mov
jbe
movsl
push
int3
adc
or
mov
aam
mull
rcrb
push
pop
add
enter
int3
outsl
int
stos
outsl
xchg
popa
das
inc
jle
xor
and
jb
mov
mov
bound
test
cltd
ficoms
jle
sub
inc
cltd
outsl
and
xchg
mov
dec
push
movsl
and
mov
or
in
popa
and
xlat
mov
pop
popf
cltd
inc
popa
mov
cltd
pop
nop
mov
pop
insl
inc
sar
and
push
sub
or
outsl
xor
loop
test
cltd
aaa
les
mov
sub
push
push
or
in
outsl
int
add
inc
mov
popa
cmp
pop
int
fincstp
lret
pop
icebp
arpl
stc
outsl
inc
cs
stc
cmp
sub
loop
movsl
xchg
xchg
ficomps
sbb
fucomp
pop
or
lea
adc
stos
sti
pushf
scas
push
test
pop
fisubrs
cltd
stos
lods
in
dec
cltd
sti
clc
pop
outsl
pop
cltd
in
insb
sbb
pop
lock
pop
popf
cltd
xlat
or
ljmp
lods
std
pop
and
lock
or
stos
movsl
cltd
outsl
xor
movsb
arpl
in
fsubrl
or
mov
or
xchg
shrb
add
adc
outsl
cwtl
stc
insl
sbb
andb
fstpl
push
adc
fcompl
xor
inc
add
loope
in
add
inc
add
mov
mov
push
push
push
push
div
sbb
cld
pop
lods
scas
pop
pop
test
popf
cltd
leave
add
jl
fstpl
mul
add
xchg
pop
cltd
in
subb
je
mov
and
or
fisttps
insl
push
stos
push
mov
ret
push
and
or
add
add
outsl
outsl
in
and
repz
xchg
arpl
add
out
sbb
mov
popf
js
sar
frstor
mov
and
test
outsl
mov
fcomp
clc
mov
sbb
movsb
in
sahf
ja
test
dec
lret
push
pushf
aaa
testl
aaa
out
lods
mov
shrb
in
mov
stos
fistps
cltd
push
adc
dec
in
shll
dec
popf
adcb
test
pop
rcl
test
mov
push
mov
ficomps
outsl
pop
fsubs
cld
test
push
ret
test
cld
outsl
or
adc
scas
add
or
inc
test
gs
lahf
shll
lahf
test
lret
fldcw
bswap
popa
xchg
packssdw
mov
test
test
mov
mov
rcrl
pop
fmulp
lea
test
mov
std
rorl
mov
push
mov
push
cmpsl
adc
arpl
test
insl
out
shll
fstpt
pop
rcrl
jne
test
movsb
inc
pushf
add
or
sbb
in
scas
xlat
aad
adc
sahf
pop
fimuls
mov
cltd
mov
ss
jbe
xlat
sbb
lahf
add
sti
ficompl
mov
mov
dec
jns
add
arpl
inc
sbb
imul
mov
outsl
ffreep
loope
dec
shlb
lahf
rcl
stc
stos
test
rol
sub
add
push
cli
ljmp
xlat
fisttpl
test
scas
sbb
loope
sub
jne
outsl
call
pop
in
and
bound
scas
rcrl
scas
sar
jecxz
aad
test
cmpb
cmovno
mov
rcr
pop
decb
mov
arpl
push
imul
vmwrite
fstps
outsl
lea
add
fcomip
test
dec
out
fcomps
call
ljmp
arpl
sti
cmpsl
sbb
xchg
mov
test
outsl
int
rolb
shr
mov
stos
test
movsb
inc
add
imul
add
movsl
aaa
or
jbe
out
inc
fisttpll
scas
mov
sbb
or
mov
std
movsl
cltd
and
or
aaa
lds
insl
flds
testl
fisttps
cltd
and
gs
test
inc
add
filds
add
aad
out
test
jne
shl
fbld
push
insb
repz
roll
outsb
mov
or
div
dec
inc
clc
cld
or
pushf
sahf
or
loop
xlat
xorl
ja
shl
out
or
jmp
in
loope
stos
push
or
fldl
and
mov
movsb
ljmp
mov
fists
dec
outsl
sbb
cmp
imul
jg
stos
adc
add
fsub
or
xchg
inc
mov
and
jno
adc
in
cmp
jno
rol
cs
rcrl
fstpl
rcr
sahf
jno
mov
add
pushf
jge
lret
outsl
out
test
sub
outsl
push
aaa
iret
jae
fnstenv
pop
outsl
out
orb
add
fcomps
gs
stc
add
sbb
shll
pop
shl
push
movsl
inc
shll
mov
shlb
test
add
inc
rorl
jge
icebp
test
xorb
add
xchg
sbb
rorl
sbb
lcall
fidivrs
mov
movsb
in
adc
rcrl
jno
orb
jge
shll
lahf
test
cmp
jno
push
mov
int
notb
add
rcrl
mov
mov
stos
fwait
xchg
jg
fsubrs
sar
movsb
and
and
hlt
shrb
or
xadd
cld
outsl
loop
sub
addr16
add
and
test
stc
rol
test
lahf
test
and
lcall
in
out
les
leave
mov
or
aaa
push
xlat
test
fwait
int3
pop
enter
pop
enter
popa
sahf
out
call
lahf
rcrl
mov
mov
test
arpl
push
fldenv
push
adc
rolw
lea
clc
or
push
int
push
test
pop
mov
dec
repnz
in
mov
mov
jno
and
testl
insl
sub
jno
loopne
sub
popa
jmp
jnp
dec
test
clc
mov
mov
lahf
fiadds
sub
outsl
or
inc
jmp
cli
mov
sbb
ret
rcrl
mov
adc
lea
xchg
or
fwait
lock
shll
orl
add
sarl
addl
sti
mov
pop
arpl
jae
push
sti
mov
out
rcrl
dec
in
fildl
sub
in
mov
loope
mov
sbb
fistl
pop
mov
shll
pusha
adc
sti
jns
mov
icebp
lock
push
jle
and
add
mov
jb
js
and
and
add
and
lea
and
addl
cmp
pop
xor
sbb
cwtl
lock
and
rol
sbb
incb
sub
mov
andl
add
cmp
inc
movsl
test
lock
cltd
rorl
lret
in
xchg
mov
pop
xchg
pop
fsubrl
xor
aaa
fstpl
xor
pop
addr16
mov
pop
adc
xlat
add
and
sbb
sbb
xchg
xchg
push
testb
scas
adc
mov
dec
mov
cmp
sbb
fcomi
jno
ficomps
adc
mov
das
sbb
fstps
and
mov
setp
sbb
mov
fnstsw
or
ss
fildll
scas
inc
mov
lcall
xchg
mov
mov
fisttpl
outsb
mov
jecxz
fldpi
out
ret
xchg
sbb
scas
insb
idivb
repz
cmp
mov
aaa
sbb
or
mov
xchg
xchg
sahf
psllw
cwtl
pop
mul
and
inc
mov
jmp
sbb
flds
add
test
mov
popf
and
push
aaa
rorb
adc
fistps
sbb
rorl
iret
in
mov
aaa
jno
adc
mov
inc
pop
dec
and
fmull
cmp
rclb
xor
push
pop
or
pusha
pop
and
xor
add
sbb
dec
sbb
btr
inc
notl
movsb
sbb
mov
inc
and
in
addb
in
test
push
mov
dec
pop
mov
mov
in
and
cmpl
scas
popa
xor
jmp
mov
scas
popa
iret
xlat
adc
test
ret
into
or
lock
fcoml
mov
pop
lret
push
mov
push
mov
mov
dec
fcoms
push
dec
mov
mov
xchg
lahf
jnp
sbb
mov
mov
fwait
pop
mov
sub
cltd
scas
cs
rol
add
movsb
pop
filds
cltd
cli
stc
xchg
repnz
push
mov
sbb
or
enter
daa
sti
mov
scas
dec
xchg
sbb
pop
orl
and
test
jp
insb
mov
dec
mov
push
cmpsb
xchg
xor
je
mov
cmc
lahf
test
jp
inc
add
add
jnp
int3
push
int
mov
lods
cli
rcll
loope
fcomps
fistpll
out
mov
das
dec
xchg
rorl
add
mov
xlat
add
xor
js
mov
pusha
sbb
in
and
xor
fistps
popf
inc
mov
sti
xchg
rclb
xchg
cmp
sbb
fld
sbb
ja
xchg
and
adc
jns
mov
or
push
xchg
and
xorl
and
jno
sahf
cmpb
sbb
mov
addl
fst
shr
mov
adc
std
or
call
pop
xchg
jg
add
push
xchg
testl
std
aad
inc
adc
cmp
and
dec
adcl
and
sahf
mov
scas
and
add
test
mov
sub
adc
push
inc
shrb
or
shrb
pop
cmp
or
sbb
dec
pop
cmp
leave
jge
cmp
in
icebp
movsl
sbb
shlb
mov
cwtl
shrl
jae
fstps
fwait
jle
jmp
push
subb
lahf
jnp
mov
lret
inc
in
pop
mov
cmp
in
rol
or
test
inc
sub
jae
out
sbb
sbb
mov
and
popa
test
push
or
xchg
pop
sbb
loopne
dec
xchg
jg
mov
lea
sbbl
pushf
pop
and
sbb
je
adc
xlat
js
test
sbb
xchg
add
notl
add
add
inc
loope
aam
lahf
mov
cld
test
xor
cmpl
and
pop
aas
daa
cmpsb
push
lea
fcomps
mov
mov
sbb
xlat
loopne
scas
sub
sbb
std
jo
fisttpll
data16
loopne
cmp
cmp
movsb
or
or
stos
pop
mov
repz
adc
pop
movsl
push
mov
movsl
cmp
fsubp
rcrb
popf
repz
lds
test
ljmp
or
iret
popa
cmp
dec
xlat
pop
and
outsb
scas
or
add
xchg
scas
jnp
ffree
xlat
movsb
fsubl
ljmp
fdivrs
cmp
sarb
pop
js
push
mov
adc
and
rol
fadds
inc
cmpsb
arpl
in
xchg
pop
dec
push
scas
mov
es
adc
and
add
int3
dec
xchg
mov
outsl
adcl
xor
mov
popf
mov
and
add
stc
and
mov
and
mov
push
dec
aad
sbbl
pop
cmp
das
adc
test
xchg
xchg
in
jmp
cmc
and
adc
sbb
inc
jnp
cld
xor
popf
lock
scas
das
lods
das
fsubs
xchg
cltd
jbe
mov
mov
nop
xchg
cmpb
add
fsts
sbb
movsb
hlt
fdivl
mov
dec
scas
mov
lahf
clc
lods
or
push
notl
mov
out
mov
cs
enter
pop
or
xchg
mov
ss
mov
das
cmp
sub
xor
and
popa
adc
xchg
inc
and
stos
pushf
decl
mov
jmp
and
dec
addl
xchg
mov
inc
mov
sti
cld
popl
inc
jge
sti
testl
mov
jae
jecxz
mov
xor
or
out
mov
enter
jb
xchg
mov
faddl
jle
pop
jg
pop
mov
movsl
pusha
ljmp
cmp
or
rcl
xchg
mov
cmpsb
mov
jbe
mov
ja
xchg
jns
adc
aaa
xlat
std
or
push
pop
mov
aaa
aas
cld
adc
in
iret
shrl
scas
fnsave
inc
cltd
pop
mov
popl
sti
sub
push
adc
xor
ret
ficomps
or
out
cltd
xor
mov
jbe
inc
loopne
or
shll
filds
sbb
shlb
sahf
aaa
xor
rorb
jl
cmpl
pusha
cmp
and
movsl
rcrl
fsubrs
push
icebp
aam
jl
push
dec
mov
jl
std
sahf
inc
loope
jmp
outsl
cmpsl
lock
bound
xlat
std
jl
jnp
maskmovq
popl
xlat
scas
movsl
pop
push
and
fwait
and
adc
cmp
xchg
xchg
jge
lret
shrb
adc
scas
xor
or
inc
lods
pop
test
insl
stos
scas
xor
or
cmp
in
lret
addr16
fadd
aam
clc
sbb
mov
mov
stc
sbb
icebp
mov
sbb
push
rorb
daa
lret
cmp
add
cltd
mov
out
frstor
jmp
mov
jo
ret
add
jno
mov
cmp
js
fbld
xchg
push
adc
push
dec
dec
dec
test
pop
jp
into
notl
popf
sbb
loope
or
sbbl
das
jmp
and
fsubs
test
sbb
aas
cmp
mov
xchg
adc
nop
pusha
adc
jge
mov
or
and
in
xchg
in
adc
dec
scas
sarb
or
add
je
repz
hlt
gs
andb
mov
push
scas
mov
aam
jns
js
push
cmp
aaa
dec
mov
div
ja
fcoml
xchg
add
imul
sahf
xor
push
in
icebp
sti
das
leave
cmp
cld
and
jns
push
adc
xchg
mov
dec
fsubs
fidivs
stc
scas
lds
sbb
add
sti
pop
and
aam
jmp
ja
call
in
outsl
and
icebp
jmp
jno
scas
sub
mov
pop
mov
sub
subl
add
in
jne
mov
jo
sub
inc
mov
fcomps
daa
orl
stos
cmp
dec
xor
scas
cli
adc
cltd
scas
jmp
insl
rol
in
pop
mov
mov
add
in
gs
adc
test
and
fucom
inc
loope
mov
pusha
loopne
xor
loop
xor
jae
repz
scas
xchg
inc
jo
les
out
xchg
stos
mov
repz
roll
hlt
je
das
sbb
jae
xchg
mov
js
loopne
jno
subb
pop
push
int3
push
push
and
shrb
pop
mov
aaa
xchg
pop
sbb
pop
adc
das
leave
test
xor
mov
hlt
ficoml
dec
mov
aaa
mov
scas
rclb
mov
out
leave
xlat
test
rclb
xchg
inc
into
adc
adc
lea
add
aaa
adc
cmp
mov
dec
mov
addr16
pop
jno
sub
loopne
es
test
cmp
push
sub
scas
sbb
ret
pop
pop
mov
std
scas
sub
mov
lahf
pop
hlt
js
pop
mov
push
adcl
mov
or
push
push
hlt
push
sti
imul
test
shl
movsl
mov
das
pop
sbb
icebp
push
and
xchg
loop
andb
mov
jg
mov
adcb
sub
push
adc
xor
cwtl
fwait
mov
ja
add
inc
loopne
sbb
stc
test
loop
sub
push
std
sub
cs
dec
xchg
sbb
mov
sbb
gs
jle
imul
sbb
div
das
mov
fists
fcoml
lods
mov
adc
test
jge
jae
aas
fadd
inc
xor
mov
xor
stc
adc
sbb
icebp
sub
mov
and
add
dec
mov
adc
mov
jbe
mov
inc
xor
mov
mov
lds
out
cltd
js
fisttpl
lret
into
out
pop
xor
cmc
mov
cli
mov
cmp
ret
out
cmp
sbb
in
subl
add
adc
std
sbb
loopne
mov
out
sbb
jbe
inc
fisttpll
mov
dec
adcl
or
push
cltd
leave
mov
pop
and
and
xchg
push
mov
and
adc
in
lock
xchg
jo
jmp
inc
cmc
cmp
jno
mov
jmp
xchg
ljmp
popf
ds
mov
cwtl
jmp
xlat
dec
icebp
mov
sti
or
mov
and
push
pusha
jge
xchg
mov
sub
mov
int
add
das
pop
push
jge
add
xchg
push
sbb
scas
pop
or
cmp
jno
sbb
loope
mulb
cmpsl
cmpsl
fwait
mov
xchg
dec
fnstenv
dec
dec
xchg
clc
mov
jno
jp
ss
sbb
ds
outsl
and
aas
iret
adc
mov
inc
add
lret
inc
out
stos
aam
inc
sahf
scas
dec
das
pop
mov
push
movsb
repnz
pop
loope
push
ja
shrb
mov
mov
stc
fbld
mov
cmc
inc
mov
or
xadd
mov
fistpl
leave
jno
shrb
pop
out
test
inc
in
and
xlat
jb
popf
sub
add
xchg
scas
mov
mov
iret
xchg
mov
sbb
int
int
and
sbb
lock
mov
xchg
scas
fsubrl
xchg
or
push
sub
jno
andl
mov
cmp
push
lods
loope
jo
int
push
jmp
jnp
hlt
sbb
cmp
sub
outsb
cmp
pop
into
faddl
daa
xchg
sbb
xchg
adc
in
pushf
jp
inc
rorb
shr
hlt
or
mov
mov
call
sbb
jp
pop
bound
or
xor
shl
adc
pop
negl
pop
scas
ret
mov
xchg
jnp
rcl
loopne
mov
or
xor
sub
mov
outsl
je
mov
neg
cmp
sbb
out
dec
popf
adc
insl
sub
es
add
push
mov
xchg
xor
popf
inc
rcrl
stc
pop
and
push
repnz
sbb
mov
jecxz
sbb
jnp
int3
in
pop
and
adc
cmpsl
in
inc
add
mov
scas
roll
leave
icebp
push
add
mov
mov
and
xchg
xor
fstl
pop
dec
jge
jecxz
loope
xchg
xchg
xchg
pop
mov
fwait
sbb
pop
or
sub
out
add
fldl
jmp
popa
jp
stc
xor
andl
mov
lock
jno
xor
adc
jge
movsl
adc
push
loop
dec
sbb
in
hlt
lret
loope
popf
inc
movsl
cmpsl
mov
das
adc
xchg
call
fidivrl
add
sbb
pop
lods
sbb
nop
scas
jno
das
jp
and
fmull
pushf
and
push
jge
jl,pn
sbb
sahf
out
inc
xchg
sbb
in
xor
call
das
adcl
call
xchg
out
sbb
out
adc
sbb
jg
scas
outsb
cmp
push
into
sbb
mov
rolb
subb
call
xor
stc
std
ljmp
scas
sarl
lods
rorb
clc
push
mov
dec
cmc
pop
pushf
fists
enter
lcall
lcall
sbb
cwtl
subb
lods
aam
and
xor
mov
mov
ds
in
adc
cmp
jg
mov
jle
std
imul
push
mov
sbb
notl
xchg
mov
mov
mov
sti
insb
mov
push
or
cmpb
int3
in
mov
xchg
mov
clc
xchg
out
xchg
add
cwtl
jg
lcall
insb
in
pop
fcmovnbe
xchg
jns
insb
mov
orb
pop
jl
mov
in
push
pop
pushf
icebp
adc
std
dec
xlat
push
mov
mov
xor
cmp
rorl
jbe
adc
hlt
lret
fisubs
mov
cmp
bnd
repz
je
cmovae
popf
nop
push
mov
out
xchg
cmp
mov
into
or
xor
test
ljmp
ds
cmpsb
cld
pop
xchg
mov
adc
sub
rcrl
loope
xchg
notb
and
hlt
sbb
jl
sbb
scas
push
add
push
or
fwait
push
mov
mov
jns
adc
in
lds
pop
in
ds
ljmp
add
mov
in
push
push
test
push
bound
mov
shr
cmp
or
repnz
in
push
or
and
ror
adc
push
push
rol
xor
xchg
out
outsb
push
cli
xchg
cmp
icebp
mov
psrad
out
dec
inc
cmc
je
je
cmp
and
fbld
stc
add
movsb
lret
in
mov
popf
out
adc
add
repnz
out
iret
rorb
pop
arpl
xor
jno
pop
mov
or
lock
push
sub
push
cmp
scas
sbbb
cwtl
cmp
fnsave
dec
cmp
sbb
sbb
in
jmp
shrl
add
fstpt
jns
ss
lcall
repnz
insb
or
fwait
popa
insl
mov
cmp
sarl
in
adc
outsb
mov
cmpsb
mov
gs
jno
adc
xor
mov
lcall
pushf
push
inc
leave
cmp
in
out
cmp
sub
mov
jge
and
test
rcll
fbstp
out
loopne
jne
pop
jge
sub
daa
xchg
icebp
and
sahf
aaa
fisubrl
cmp
jg
push
mov
stos
out
dec
or
mov
inc
int
push
adc
mov
xor
sbb
sbb
mov
xor
fnsave
cmp
pop
insb
out
pop
out
js
mov
aad
adc
xchg
outsb
adc
push
mov
push
mov
sub
hlt
ljmp
cmp
icebp
nop
shrb
mov
push
sar
leave
hlt
inc
fsubl
addl
in
rolb
add
jo
jns
cld
sti
or
sub
pop
fdivl
and
xor
adc
arpl
cmc
popf
sub
pop
cmp
cmp
mov
add
into
mov
scas
out
das
loope
lods
stc
call
ss
or
adc
or
in
push
and
or
cwtl
fists
push
sbb
loopne
idivb
and
pop
xchg
and
cmpsl
mov
push
ss
xchg
notl
or
or
out
std
xor
icebp
icebp
std
in
and
cs
fadds
lahf
adc
out
and
leave
mov
and
cltd
cwtl
lahf
dec
out
adc
sbb
out
sahf
out
int
idivl
dec
xchg
sbb
mull
push
push
mov
cs
xor
fstl
in
and
cmpsl
cmpl
mov
jg
ss
pop
adc
andb
push
icebp
pop
inc
lret
cli
adc
mov
roll
stc
iret
sbbb
rcll
bnd
cli
popa
mov
fwait
or
repz
pop
das
shlb
mov
add
inc
adc
add
and
push
icebp
adc
sbb
ljmp
rorl
clc
and
dec
jnp
push
inc
adc
mov
mov
jge
sbb
adc
into
mov
insb
dec
pop
fld
loop
jno
and
mov
pop
fwait
scas
in
jno
cs
scas
shl
insb
add
or
sub
push
imul
hlt
adc
and
sbb
lock
movsb
xor
cmp
loopne
imul
adcl
out
xchg
in
adc
scas
adc
js
add
push
xchg
imull
movsb
fildll
imul
ret
scas
xor
cmp
sahf
mov
jge
das
sbb
nop
shl
mov
daa
mov
xor
pop
xor
das
inc
xor
sbb
pop
outsl
inc
shll
insb
ja
outsb
add
lret
dec
test
divl
scas
xchg
cltd
hlt
pop
push
cmp
mov
call
mov
data16
adc
cmp
je
dec
and
int
lcall
jmp
xor
ljmp
add
test
ds
cmp
sbb
xchg
outsb
movsl
mov
mov
pushf
mov
jmp
cs
pop
fldt
adc
dec
arpl
cli
push
push
mov
scas
cmpsl
orl
cltd
pop
fsubs
insl
mov
popa
and
cld
out
lret
iret
cli
mov
nop
or
iret
mov
test
adc
cmp
scas
scas
lods
xlat
in
mov
fdivs
mov
enter
xchg
fistpl
aas
pop
popa
call
jge
out
sbb
jb
jbe
mov
repz
popa
mov
shr
mov
shll
xorb
xchg
stos
jg
shr
dec
rol
sbb
imul
fstl
movsl
inc
notl
clc
sbb
push
jno
jge
aad
mov
pop
add
lock
je
fisubl
cs
jno
xor
imul
icebp
or
inc
test
cld
dec
add
sbb
js
mov
popf
add
outsl
pop
mov
cs
mov
call
jmp
fmul
outsb
call
xchg
adc
inc
lods
mov
ljmp
movsb
out
xlat
testl
pop
push
cmp
adc
stc
dec
pop
fnstenv
movsb
jp
mov
and
add
push
adc
lea
sbb
and
xor
sbbb
sbbl
orb
sbbl
sbbl
mov
into
or
outsb
scas
in
xchg
push
jno
mov
add
mov
push
ss
bound
outsb
ds
and
nopl
sbb
mov
jo
mov
cmp
inc
sbb
enter
xchg
popf
adc
gs
cmp
jo
pop
jno
cmp
dec
in
dec
add
cs
test
movsb
mov
sub
sub
mov
and
call
and
rorl
jno
popf
jno,pn
or
mov
sbb
int
cmpsl
jl
call
shll
test
mov
fwait
shlb
mov
mov
and
push
mov
dec
add
mov
and
rorb
icebp
or
cmp
fildl
mulb
adc
cmpsb
jle
stos
rclb
mov
insl
mov
cmp
xchg
gs
sbb
orb
push
cmp
out
fcmovnb
imul
adc
mov
stos
jno
adc
add
mov
xchg
inc
sbb
xchg
push
sub
jne
not
iret
ds
scas
loopne
mov
insl
push
hlt
andl
aaa
jae
mov
repnz
mov
xchg
orl
mov
adc
pop
fisttpl
push
or
push
xlat
add
fcoms
lret
pop
out
adc
cmp
push
or
sbb
jns
mov
xchg
repnz
cltd
adcl
pusha
nop
adc
lret
out
cmp
shr
xchg
mov
icebp
ror
setge
out
pop
out
repnz
pop
cli
popf
mov
push
jge
inc
or
call
loope
loopne
add
adc
and
pop
mov
pop
fnstenv
xchg
jle
mov
cld
loopne
leave
pushf
sbb
std
inc
xor
jno
insb
notb
mov
sub
adc
in
jne
mov
adc
test
inc
and
and
roll
pop
arpl
or
mov
and
arpl
inc
out
xchg
mov
int3
pop
push
xor
mov
daa
aaa
mov
pop
icebp
sbb
hlt
mov
rcrb
fnstsw
add
icebp
and
add
shlb
test
and
ds
mov
push
cmpb
iret
mov
xor
sar
add
enter
pop
mov
cmp
imul
lret
pop
fdivr
adc
int
push
pop
testl
popa
clc
mov
sbb
inc
stc
xchg
lds
fadds
and
xchg
and
mov
sbb
hlt
cli
or
imul
and
lcall
adc
mov
and
mov
mov
pop
data16
xor
push
and
das
imul
pop
cmp
jbe
pop
jo
leave
fbld
mov
loop
mov
mov
imul
adc
jmp
icebp
insb
mov
cmc
jl
xor
hlt
js
mov
dec
inc
adc
or
and
sbb
mov
push
adc
scas
cwtl
das
fists
sub
add
add
leave
sbb
pop
daa
adc
in
push
idivb
adc
or
jge
orb
xor
std
popf
sbb
or
add
lock
test
repnz
xchg
ljmp
das
loopne
sbb
das
jmp
mov
sbb
in
add
ficoml
xchg
fadd
jno
rorb
imul
fsubl
lahf
das
xchg
add
xor
mov
xchg
cld
pop
and
sbb
fsts
or
in
imul
mov
popa
mov
loopne
ja
cld
fcoml
popa
hlt
jnp
pushf
rclb
push
xchg
dec
cmp
in
pop
adc
mov
decb
jle
rcll
and
in
adc
or
out
div
dec
cmp
aad
mov
adc
test
insl
mov
pop
inc
mov
jno
mov
stc
sbb
or
push
and
add
mov
sarb
mov
push
cmp
out
mov
mov
add
push
push
scas
xor
loope
dec
mov
les
jg
movq
jmp
in
mov
cli
out
aaa
mov
jmp
orl
xchg
test
sbb
notb
jno
rolb
jp
mov
bound
shrb
dec
jbe
push
push
and
iret
loopne
sub
inc
mov
or
cld
or
jns
ds
mov
mov
xor
and
xchg
out
push
mov
lahf
ficomps
call
fwait
pushf
fdivrs
sbb
mov
jnp
pop
sbb
incl
mov
outsl
add
jnp
subl
mov
fcmovb
adc
xlat
push
sbb
das
or
push
mov
lahf
add
add
push
aaa
sub
fcmovu
or
popf
mov
ret
iret
dec
xchg
cmp
scas
pop
dec
ret
pop
sub
xchg
pop
das
out
gs
xchg
loopne
mov
add
sbb
pop
movsl
pop
sbb
mov
imul
cmpl
cs
out
add
leave
mov
test
mov
out
call
outsl
scas
icebp
mov
mov
mov
rdmsr
push
sbb
movl
rol
adc
into
xchg
add
out
ror
pop
xor
add
into
push
shrb
test
imul
xchg
xchg
sarb
jno
cmp
xlat
pop
ret
mov
jns
sbb
jecxz
stc
push
or
mov
pop
mov
pop
jns
mov
mov
jb
shrb
add
dec
outsb
and
sbb
imul
adc
sbb
jno
mov
dec
iret
xchg
mov
mov
ret
jmp
inc
add
das
mov
xor
or
jecxz
jmp
std
popa
fisttps
cltd
fucomi
add
pop
lods
push
jl
cs
nop
sub
jne
rcrb
pusha
mov
pop
clc
push
loope
orl
xor
xchg
xor
sub
sbbb
xor
mov
loop
xchg
adc
jae
jp
idiv
daa
xor
mov
sub
and
sbb
xlat
pop
fstps
push
mov
and
sbb
sub
dec
adc
in
adc
stc
movsl
push
iret
pop
xor
adc
mov
sbb
in
and
add
adc
test
sbb
pop
push
cmp
scas
pop
add
enter
aaa
pop
loopne
enter
ljmp
sbb
std
mov
adc
outsl
in
shrl
test
add
loopne
and
pop
out
mov
mov
loopne
hlt
cmc
adc
pop
xchg
insb
pop
aaa
xor
ss
and
xor
sbb
out
sbb
jge
les
and
jle
dec
mov
pop
fisttps
fidivl
fsts
in
dec
dec
push
fnstsw
aad
xor
lods
and
add
xchg
xorb
mov
dec
sbb
jo
outsb
lock
sbb
jge
fistpl
sbb
fisubl
sbb
jmp
mov
mov
adc
xchg
dec
pop
jp
cmp
mov
dec
ret
dec
cld
rcll
shrb
adc
pop
adc
cli
cmp
cli
xorb
xchg
lcall
mov
std
mov
jle
mov
lahf
sbb
roll
mov
jecxz
dec
leave
cli
pop
jp
mov
scas
roll
test
mov
stc
test
mov
xchg
push
xchg
mull
int
leave
mov
subl
lcall
and
xchg
ret
loopne
push
mov
adc
imulb
xor
cld
jno
xor
fstpt
jo
mov
pop
mov
jnp
stc
imul
mov
add
pop
xchg
in
push
jg
nop
test
or
dec
jae
mov
or
aaa
pushf
sahf
fwait
out
add
jge
repnz
pop
and
or
dec
xor
mov
fisttps
jno
xchg
inc
sbb
inc
lret
pop
repz
mov
sbb
scas
repnz
mov
rolb
dec
enter
sti
addb
out
jg
ss
jmp
mov
push
int
sbb
mov
jecxz
dec
pop
adc
sub
pop
cmp
push
adc
dec
mov
inc
insl
and
fmuls
inc
movsb
inc
push
dec
lahf
adc
push
cld
xchg
mov
rol
sbb
pop
imull
in
adcl
out
out
sbb
out
jno
sub
clc
imul
xchg
mov
xlat
mov
jp
popa
cmp
or
push
pop
imul
aas
and
negl
mov
mov
fbstp
xor
out
flds
sub
fs
push
out
dec
jnp
xchg
in
xchg
pop
jmp
pop
push
fwait
test
adc
fmul
fimull
mov
gs
cmp
cs
rcrl
out
into
jno
adc
pop
inc
negb
mov
out
adc
pop
add
push
sub
sbb
sbb
mov
dec
enter
jecxz
push
push
or
flds
mov
sbb
jp
adc
xchg
pop
mov
or
in
jb
mov
push
mov
hlt
xchg
lcall
inc
setge
dec
jge
xchg
adc
push
cld
xorb
push
xlat
cwtl
adc
outsl
dec
mov
jp
aaa
int
loope
xor
and
js
imul
mov
fstps
jne
sarl
pop
imul
sahf
gs
jecxz
jno
fldcw
xorl
hlt
aad
xchg
notb
out
push
pop
andl
fstl
adc
jno
jb
data16
sub
rcr
jo
sti
mov
mov
mov
push
sahf
adc
test
push
dec
mov
insl
jbe
pop
nop
mov
and
jne
add
pop
mov
pop
add
iret
hlt
outsl
sbb
jl
orb
jmp
loop
lock
shrl
das
adc
test
pop
sbb
sub
xchg
gs
jno
mov
lcall
mov
das
call
cmpl
mov
cmp
nop
add
mov
nop
inc
fstl
mov
xchg
orl
fsts
adc
adc
and
cld
lock
addr16
roll
dec
push
mov
push
icebp
outsl
pushf
push
inc
inc
arpl
adc
mov
xorb
out
and
mov
adc
outsl
or
ror
arpl
cs
xchg
jo
int3
mov
movsl
cmpsb
xchg
cmp
inc
mov
in
adc
adc
ud1
pop
pop
daa
sbb
dec
mov
sbb
ret
mov
lds
ljmp
lea
pop
and
cmpl
mov
fcmove
shr
scas
mov
addb
les
pop
data16
adc
data16
stc
mov
insb
xchg
mov
fcmovnb
dec
inc
loope
sbb
hlt
shrb
outsb
jns
xor
push
loope
jnp
fs
push
mov
fwait
jno
inc
adc
out
std
mov
das
movsl
cmp
jno
push
inc
bound
xchg
stos
fdivr
xor
inc
cld
jl
mov
push
sbb
push
ror
mov
xor
sbb
ret
ds
adc
xchg
hlt
test
push
sti
pop
sbbl
ror
mov
adc
push
mov
sbb
mov
mov
sbb
sbb
mov
push
fdivl
xchg
outsl
call
fisttpll
cmp
sti
loop
outsl
cmp
lock
push
dec
mov
cs
add
sub
mov
mov
mov
mov
jl
xchg
mov
in
cmp
mov
or
fadd
push
mov
aas
sbb
mov
cmc
sbb
xchg
pop
nop
sbb
andb
inc
jno
fstpt
cmc
inc
mov
loopne
pop
and
cmpsb
aad
adc
and
rolb
mov
inc
or
mov
push
std
push
pop
std
clc
pop
add
sbb
test
pop
mov
mov
mov
and
out
movsl
adc
outsb
in
test
push
mov
sahf
mov
insb
jns
imul
jle
dec
inc
pushf
dec
cmp
divl
mov
adc
aaa
xor
fnstsw
adc
fdivl
std
das
cld
mov
adcl
jg
mov
cltd
xor
pushf
dec
leave
inc
adc
xchg
add
cmp
insl
dec
inc
and
or
mov
dec
sbb
sahf
mov
rcll
mov
cwtl
adc
test
jns
outsl
addr16
in
mov
mov
mov
pop
adc
or
add
cmpsb
outsl
lahf
jo
add
adcl
dec
dec
cld
lret
mov
ss
aaa
loop
cwtl
sbb
jnp
mov
jle
nop
mov
sar
xchg
adc
hlt
jbe
in
cmp
fldcw
push
xchg
aas
xchg
movsl
lahf
jl
bound
lcall
adc
fwait
aam
xchg
das
rclb
scas
pop
pop
push
mov
sysret
and
mov
jg
test
xlat
and
ret
subl
shrb
adc
lock
nop
push
mov
sbb
ret
ds
or
popf
cmpsl
xor
cmp
pop
rorb
xor
push
adcl
inc
xchg
lret
out
add
or
bound
fwait
mov
inc
daa
add
mov
hlt
mov
rcll
idivl
jnp
jmp
sub
jp
adc
leave
clc
movsb
mov
xor
fnsave
arpl
cmp
leave
hlt
das
jno
in
pop
in
dec
or
cmpl
icebp
and
pop
add
jle
cmp
lods
jge
aaa
sbb
stc
sbb
pop
loopne
int3
push
add
inc
adc
push
jge
in
inc
scas
fdivl
shr
add
dec
cmp
pop
xchg
scas
rcrb
aam
xor
sbb
jg
sub
jo
inc
daa
pushf
repnz
mov
call
ret
xchg
aas
scas
jmp
jno
add
inc
fstpt
adc
sbb
clc
daa
sahf
pop
pop
lret
out
adc
aad
fldcw
scas
xor
xorl
int
jmp
or
fmulp
nop
dec
add
loope
cld
ljmp
dec
add
rcrl
out
add
fsubs
cwtl
in
shrb
add
cmpl
mov
adc
aam
adc
sbb
in
sti
test
imul
mov
and
add
test
inc
cmp
pop
icebp
mov
mov
push
loopne
test
xchg
fidivs
pop
aas
notl
mov
push
aam
hlt
aaa
cltd
add
pop
in
sbb
sub
insb
xlat
jl
mov
orb
adcl
lahf
and
cmp
add
fidivrl
lahf
popf
adc
lahf
or
push
pop
sti
pusha
xchg
cmp
push
cld
add
dec
mov
adc
adc
shrl
mov
push
loopne
mov
ja
pushf
sub
pop
outsl
pushf
sbb
aaa
les
adcl
cld
not
or
dec
out
xchg
into
inc
scas
data16
stc
repz
jp
mov
pusha
sub
push
ss
or
mov
imul
pop
addl
ret
mov
movsl
pushf
ror
clc
push
mov
cs
pop
in
mov
jl
sbb
fwait
popa
es
push
jmp
add
arpl
mov
and
lock
pand
jg
clc
ret
and
cld
mov
mov
in
mov
jmp
jecxz
enter
mov
repnz
adc
sbb
jg
fucom
and
daa
adc
jp
pop
hlt
adc
push
mov
add
jmp
std
mov
sub
out
pop
hlt
push
cmc
mov
and
cltd
jns
or
pop
or
adcb
mov
sarb
sub
mov
in
lcall
sbb
cs
sti
mov
inc
test
inc
xchg
std
ss
das
in
xor
mov
js
jmp
insl
cs
and
int
mov
dec
pop
mov
mov
add
das
fldcw
das
fs
inc
xor
inc
xchg
dec
movsl
push
or
data16
pop
std
inc
xor
push
outsb
outsb
xor
outsl
or
xor
insl
enter
in
cli
pop
mov
push
cmp
clc
fstpt
and
and
fs
andl
loop
add
sbb
dec
sbb
adc
xchg
pushl
lahf
or
orl
mov
mov
dec
hlt
insl
sbb
lcall
jns
push
sub
add
jae
pop
jl
add
mov
pop
test
sbb
rorl
mov
jmp
add
lcall
cmpsl
jg
and
and
and
iret
lock
es
pop
std
cmp
fistpll
mov
adc
mov
mov
dec
lea
push
stos
mov
push
leave
enter
sbb
cmp
cmpl
loopne
lock
push
push
push
mov
lea
rorb
adc
ja
pop
jae
xchg
mov
mov
push
sub
repz
aaa
adc
jg
pop
in
sarb
or
adc
and
shrb
jl
outsl
pop
out
add
xchg
int3
outsb
adc
test
cmp
adc
lock
mov
dec
xchg
rorb
dec
cltd
sbb
mov
adc
stc
imulb
aas
aam
inc
mov
in
in
xchg
aas
mov
mov
push
out
inc
jb
test
pusha
bswap
cmp
mov
xorb
std
adc
adc
dec
sbb
xchg
mov
jmp
and
adc
call
pusha
and
push
dec
cwtl
pop
sti
mov
cmc
push
sbb
cld
outsl
into
pop
adc
rcl
mov
jo
sbb
fidivrs
cmc
scas
les
mov
push
inc
xor
sub
pop
add
pop
or
mov
out
dec
test
je
call
mov
adc
ret
mov
push
fiadds
and
rcr
adc
icebp
sbbl
mov
xchg
pop
mov
pushf
daa
or
shrl
addr16
mov
mov
or
sub
xchg
mov
ss
insb
sbb
ret
inc
gs
inc
push
xchg
test
call
pusha
jnp
pop
lea
xchg
and
cmp
add
out
scas
icebp
xchg
hlt
mov
sti
fs
divl
push
mov
or
lret
scas
and
cmp
dec
aaa
inc
inc
mov
xchg
dec
popf
jge
jns
xchg
out
shr
sbb
push
or
inc
out
and
ja
je
xchg
rcrb
cli
ja
dec
rcpps
fidivrs
and
scas
daa
sbb
xchg
push
pop
cmp
aas
adc
je
addr16
mov
mov
adc
test
cwtl
in
fsubrl
sbb
push
clc
mov
jns
rcll
cmp
jmp
mov
cmp
push
mov
in
sbb
add
mov
in
sbb
and
dec
xchg
fstp
shl
and
out
sar
loope
jno
pop
test
cmp
mov
movsb
sub
jne
arpl
clc
xchg
hlt
inc
inc
ret
or
xchg
or
mov
mov
and
and
popf
cld
push
into
popf
pop
and
std
fldenv
lock
push
test
push
mov
sbb
nop
out
adc
mov
sbb
mov
hlt
imul
cmp
nop
xchg
stos
xchg
lods
outsl
clc
lret
jno
pop
xchg
adc
add
bound
xor
mov
dec
cmpsl
add
std
push
or
xchg
shrb
dec
test
mov
and
ja
in
adc
out
cld
mov
push
and
outsl
ret
pop
add
out
ljmp
cmp
loope
inc
mov
push
movsl
push
adc
mov
mov
lret
sbbl
pop
daa
pusha
cmp
add
mov
lock
mov
pop
xor
outsl
shll
push
test
fdivrl
mov
out
cs
cmp
imul
and
andb
imul
cmpsl
sbb
sti
fistps
mov
pop
outsl
out
mov
popf
and
mov
xchg
push
mov
test
sbb
pop
fstpt
lcall
cs
mov
sbb
xchg
leave
xchg
jp
test
xsha256
cmpsb
adc
pusha
sarb
cmp
or
add
lret
add
adc
mov
lret
das
xchg
pop
mov
mov
mov
pop
scas
and
or
or
and
in
ror
cmp
ljmp
sbb
pop
in
sbb
icebp
sub
add
nop
mov
es
pushf
lock
mov
movsl
rolb
cld
imul
mov
adc
std
mov
iret
popa
sbb
adc
jbe
fwait
dec
enter
icebp
xlat
out
mov
jnp
movsb
or
cmp
push
leave
sahf
add
lods
cwtl
gs
add
mov
fistl
fwait
add
add
out
sub
and
push
xchg
fcoml
popf
in
lea
mov
pop
xchg
cli
jne
mov
cwtl
lcall
aas
sub
inc
mov
pop
mov
sbb
int
push
les
pop
mov
adc
das
fsts
or
cltd
xchg
fldl
test
clc
nop
cmp
or
out
bound
jns
xlat
pop
lods
jne
outsl
sbb
shl
mov
scas
fxch
das
add
mov
mov
sub
xchg
mov
fcomip
repnz
xchg
sub
loopne
mov
xchg
lahf
pop
aas
enter
xlat
jbe
ficoms
xlat
adc
not
fcomps
inc
in
fcomps
push
enter
pushf
cli
cmc
sub
lahf
das
imull
xchg
cli
mov
std
push
aaa
sub
xchg
fisubrs
outsl
je
and
push
sbb
in
sbb
adc
push
jb
or
xor
mov
sbb
adc
and
or
cld
and
in
test
mov
int
out
out
mov
sbb
frstor
bound
mov
adc
icebp
out
mov
mov
and
jne
mov
mov
jo
jo
call
mov
xchg
jmp
push
pop
and
adc
jge
add
push
in
push
ret
push
std
js
xchg
shlb
clc
incb
clc
sbb
es
popf
sbb
cwtl
jnp
scas
mov
pop
std
ffree
mov
xlat
xchg
popa
sbb
adc
mov
push
jb
outsl
jg
shrl
leave
xor
daa
mov
jge
idivl
mov
gs
push
xor
dec
mov
out
int
packuswb
inc
outsl
jle
imul
inc
add
xlat
in
sub
cmp
and
xchg
shld
aas
aam
adc
push
mov
and
mov
push
js
fnstcw
inc
mov
pop
in
ja
pushf
pop
outsl
js
cmp
pop
push
cli
lahf
adcl
jo
pop
push
je
outsl
in
loope
mov
and
lods
dec
or
hlt
and
fldcw
mov
sub
cmp
test
add
mov
adc
adc
xor
xchg
jb
xchg
or
mov
aam
xchg
adc
stc
lahf
adc
bound
cwtl
jl
pop
mov
scas
adc
das
fisttps
fiaddl
push
in
sub
sbb
js
jno
leave
test
out
add
jno
ja
jno
cwtl
push
out
and
movsl
jns
stos
jae
sbb
cltd
xchg
out
adc
test
shlb
addr16
adc
cmp
popf
shl
andb
lds
pop
out
mov
mov
and
sahf
cld
test
jno
mov
in
ljmp
stc
cmp
adc
ljmp
pop
push
adc
sub
jge
fs
shrb
shll
jae
mov
fdiv
sti
jge
rcrb
movsl
cmp
orb
and
mov
rcrb
popf
aaa
pop
sub
aas
loope
xchg
pop
mull
idivl
mov
rcll
ja
sub
adc
mov
bnd
rorl
cmp
fldl
add
pop
cmp
lods
std
dec
adc
and
mov
outsb
sbb
adc
mov
pop
in
jge
test
sbb
pushf
cmc
jno
adc
jmp
fistpl
mov
and
loop
and
movb
gs
pop
mov
pop
fidivs
shlb
in
in
jns
and
push
inc
icebp
pop
add
repnz
push
jmp
cwtl
arpl
pop
mov
sbb
dec
fisttpll
nop
xor
imul
dec
fsubr
clc
orb
cld
xor
fmull
xchg
xor
mov
sbb
push
dec
pop
add
in
lds
jns
xor
aam
pop
std
cmp
int3
cmp
bound
sti
jno
hlt
jo
dec
pop
lahf
mov
fmuls
xchg
mov
pop
aaa
loope
xchg
adcb
mov
leave
fmuls
mov
add
mov
jnp
mov
xchg
cs
mov
roll
mov
or
int
xlat
mov
ret
fcomp
add
fldenv
dec
jmp
mov
push
in
pop
inc
mov
or
xchg
rcll
push
mov
call
lods
movsl
gs
and
gs
pop
sub
jp
stos
fsubr
or
mov
aad
bound
xchg
mov
fistps
lods
or
mov
adc
xor
icebp
push
lods
stc
push
mov
sbb
adc
and
rcrb
xchg
pop
or
xchg
sub
cli
cmp
scas
sbb
push
pop
roll
mov
jmp
scas
lock
outsl
pop
cmp
xor
xor
scas
xchg
push
sbbl
add
js
xor
jns
xchg
adc
je
sbb
add
add
test
icebp
in
pop
jmp
jl
call
sbb
les
mov
adc
cltd
lcall
setg
hlt
jns
pop
cmc
daa
adc
pop
mov
or
or
aaa
pop
aam
ret
push
xchg
push
pop
out
sub
push
jecxz
cltd
pop
pop
xor
cwtl
insb
fisttps
sub
into
insl
mov
lods
inc
movsl
aas
push
icebp
jbe
fstps
shlb
mov
in
inc
mov
or
dec
jp
cltd
mov
mov
std
rorl
and
xchg
lahf
mov
pop
out
pop
es
scas
mov
push
push
jae
push
or
and
add
push
dec
adc
shrl
fsts
pop
shrl
push
xchg
in
lahf
xchg
loope
cmp
push
push
mov
push
les
rcl
mov
or
ret
xor
out
aas
in
cmpsb
in
xor
cmp
pop
cmpsb
sbb
sub
mov
hlt
aam
adc
leave
fstpl
inc
in
les
in
sub
or
cs
pop
or
jno
shl
icebp
mov
call
push
movsl
test
pop
fucomi
cmp
xor
mov
pop
bound
aaa
push
adc
pop
in
mov
jp
das
mov
sbb
das
mov
scas
flds
mul
xor
jp
cltd
popa
sbb
cltd
push
loopne
pusha
popa
xor
xor
cld
mov
jne
imul
les
pop
sbb
mov
and
test
out
adc
lret
and
mov
mov
pop
outsb
adc
mov
sub
sbb
lods
loope
orl
pop
lods
mov
mov
xchg
push
adc
sar
mov
mov
leave
sub
push
mov
mov
out
popf
mov
cmp
imul
test
jp
mov
add
lea
xor
dec
mov
or
inc
loopne
sahf
pushf
ja
outsl
add
inc
les
jecxz
mov
aas
dec
hlt
jnp
push
and
jecxz
xor
jecxz
rcll
and
jp
adc
xor
pop
pop
rcr
adc
push
das
popa
enter
push
hlt
enter
lods
stos
lock
aam
test
mov
cmpsl
or
add
push
adc
jge
icebp
xchg
mov
bound
loope
adc
mov
mov
sub
xor
push
dec
repz
sbb
push
adcl
cmp
fidivrs
pusha
subl
pop
xor
push
leave
out
sahf
lea
mov
or
outsb
lcall
outsb
jp
mov
and
or
cs
adc
nop
push
inc
mov
adc
mov
sbb
jae
fsub
mov
mov
shl
dec
and
ror
sbb
in
xchg
pop
xchg
sub
and
inc
and
loopne
fdivl
sbb
subb
jl
jle
fidivl
mov
adc
push
pop
adcb
subl
jo
outsb
xchg
sbb
cli
jnp
xchg
mov
fwait
jmp
cli
outsb
andb
sub
ror
je
inc
iret
mov
and
mul
scas
lock
popf
int3
mov
pop
dec
iret
xchg
mov
mov
dec
pop
xlat
xor
into
push
pop
sahf
jge
mov
dec
sbb
jl
scas
mov
in
roll
fcmovne
pop
int3
dec
pushf
jmp
orb
jmp
mov
push
out
jns
and
or
adc
xchg
add
fadds
mov
cwtl
in
lock
sarl
push
test
ljmp
xlat
mov
bt
jo
push
dec
mov
js
jne
in
shrl
mov
sub
shlb
mov
shll
ret
lret
add
shll
push
aaa
emms
add
jb
sbb
hlt
imul
push
ja
adc
test
imul
cltd
mov
mov
push
jmp
mov
scas
outsb
adc
mov
adc
fisttpll
out
sub
lcall
movsl
lods
roll
inc
movsl
iret
icebp
fnsave
add
into
das
lret
mov
and
inc
ds
sbb
sbb
jp
test
pop
test
roll
and
mov
mov
lret
pushl
nop
and
sti
adc
xchg
and
popl
and
out
js
mov
ret
and
jg
pop
xor
mov
pushf
xor
xchg
adc
sub
adcb
mov
scas
jmp
push
clc
dec
or
inc
mov
pop
rorb
leave
lock
and
jns
pusha
mov
mov
test
int3
pop
jnp
sbb
adc
ret
es
cmp
cmp
out
or
mov
jge
test
insl
out
into
ss
add
or
test
and
ret
jno
inc
nop
adc
jns
dec
fwait
icebp
adc
mov
mov
cltd
mov
mov
or
ss
push
nop
lfs
pop
in
test
adc
mov
in
mov
dec
ror
scas
fnstcw
notb
push
adc
fisubrs
mov
icebp
mov
mov
ss
stc
popf
or
js
jb
test
push
xor
icebp
iret
lods
fisttpll
mov
push
daa
dec
aaa
daa
jnp
outsb
sub
inc
push
jb
pop
sahf
add
shll
js
jp
loopne
test
mov
xchg
pop
popf
push
jecxz
adc
mov
out
and
in
cmp
xlat
mov
jmp
mov
std
std
push
lods
stos
fcoml
cltd
sbb
jmp
dec
ljmp
lds
adc
adc
insb
mov
hlt
pop
adc
mov
repnz
jo
iret
fnstsw
sbb
jo
mov
iret
push
adc
sar
xor
adc
icebp
mov
movsl
or
jge
iret
add
mov
jno
or
mov
jmp
cltd
sub
les
rolb
fbld
out
dec
or
arpl
lock
sbb
xchg
lcall
mov
jmp
jo
xlat
scas
adcl
popa
out
hlt
out
cmp
sbb
mov
adc
jmp
fwait
pop
adc
shl
adc
mov
out
push
sbbl
or
adc
cmp
xchg
mov
in
in
inc
fwait
mov
inc
pop
cmp
and
add
out
mov
movsb
pop
inc
sbb
adc
pop
mov
jge
add
jp
sbb
dec
in
sub
cltd
imul
add
push
shr
hlt
movsl
adc
das
xchg
subl
mov
imul
mov
fdivr
inc
xlat
cs
bound
cmp
sub
dec
pop
lret
scas
jp
mov
mov
rcrl
cmpsb
push
jne
iret
xor
pop
cmp
and
push
push
and
sbb
loopne
repz
xchg
cmc
xor
aad
lock
sbb
cmp
push
pop
mov
mov
add
shlb
sbb
leave
daa
gs
mov
imul
jmp
aaa
jecxz
pop
stos
mov
xor
enter
popa
cmp
div
push
cmp
dec
add
dec
imul
in
scas
and
cmp
sub
subb
push
and
stos
loope
add
orb
fwait
push
out
and
inc
testb
mov
fisubrl
scas
jge
xchg
nop
insb
push
adc
sbb
imul
xchg
pop
mov
cltd
jle
lret
hlt
mov
inc
roll
btl
mov
xchg
mov
push
pop
push
adc
mov
iret
adc
sbb
mov
add
adc
shlb
pop
fidivs
jl
mov
add
iret
sbb
mov
aaa
lods
jmp
icebp
cli
push
xor
push
pop
test
jo
xchg
fstp
js
add
push
mov
or
movsb
cs
mov
or
es
andl
leave
mov
test
aad
jmp
lcall
push
xchg
xor
ss
adc
shrl
and
cltd
icebp
jge
mov
xlat
mov
scas
popf
pop
fstl
aas
sbb
shlb
loopne
out
fisubl
mov
jmp
xor
enter
xor
das
jecxz
inc
nop
out
inc
jno
shr
scas
mov
popa
push
outsl
jecxz
nop
cs
fdivrl
mov
popf
ja
xorb
das
mov
cld
and
mov
lock
xor
cmp
in
mov
mov
mov
push
loopne
mov
shlb
cmp
js
sbb
inc
pop
xor
xchg
add
mov
lock
mov
leave
int3
test
shl
rorl
icebp
sbb
out
adc
mov
ss
sbb
dec
dec
divb
je
popf
aaa
mov
lret
xchg
pop
cli
inc
fiaddl
mov
in
cmc
xor
popa
and
xor
sub
xchg
std
adc
shrl
push
cmpb
xchg
inc
frstor
mov
das
sbb
cmp
cld
mov
pop
jne
sbb
xorl
sbb
cmpsb
ret
or
ficompl
mov
loopne
mov
mov
pop
xchg
pop
mov
test
lahf
pop
jg
and
mov
scas
dec
mov
mov
fnstcw
lods
xchg
and
out
inc
push
sbb
mov
dec
stc
test
mov
test
mov
test
cmp
jmp
add
adc
xlat
or
out
xchg
leave
inc
jne
add
stc
add
cmp
adc
or
mov
lcall
xchg
sbbl
mov
dec
scas
leave
leave
rorb
js
sbb
scas
sti
mov
mov
jno
and
or
xor
adcl
fisubl
pop
mov
lcall
test
mov
in
and
xchg
rorb
xchg
in
cmc
xor
hlt
call
mov
mov
dec
push
cmp
mov
push
fistps
lock
pop
out
pop
adc
xor
mov
inc
outsl
mov
dec
jge
scas
jecxz
gs
repnz
jp
push
or
insl
int3
loopne
arpl
aam
cmc
pop
and
pop
jbe
orb
cltd
xchg
sbb
lods
ss
jp
mov
adc
int
jmp
out
mov
imul
xor
cmpsl
popa
std
or
arpl
sbb
mov
mov
sub
lock
inc
call
into
mov
cltd
lahf
mov
clc
mov
fldl
mov
sub
je
out
enter
shrb
add
mov
mov
hlt
scas
xlat
data16
mov
scas
xchg
cmpsb
pop
sub
mov
rcrb
mov
stos
les
ja
pop
scas
push
divb
mov
adc
pop
xchg
and
push
xchg
bound
nop
mov
jb
addl
shrb
shl
adc
inc
mov
out
jg
add
test
or
jle
pop
cmp
inc
mov
mov
in
or
inc
jno
xor
mov
mov
pop
pop
scas
mov
add
in
and
mull
push
push
fisubrl
shlb
push
mov
mov
lock
dec
sub
jo
scas
or
das
sbb
sub
andb
dec
sbbl
cmp
mov
aaa
xor
push
mov
fisttpll
lea
mov
add
sbb
mov
loopne
push
aaa
dec
je
nopl
rcrl
xor
mov
sarl
jmp
pop
nop
sbb
and
or
mov
xchg
addl
and
or
inc
data16
xchg
clc
mov
xchg
adc
xlat
dec
cmpsb
cmpsb
mov
or
aaa
cmp
les
nop
cld
cltd
std
or
sub
movsl
popf
and
idivl
inc
xor
jo
cwtl
jno
mov
loopne
xchg
mov
mov
aam
jmp
mov
cmp
xor
adc
lea
pop
mov
mov
loopne
jg
xchg
andb
pop
sbb
inc
mov
jo
push
mov
rcl
frstor
and
stc
mov
dec
mov
push
paddsb
shrb
cwtl
push
in
xchg
scas
and
and
movsb
arpl
dec
rolb
pop
sbb
dec
shrb
test
int
les
cmpl
pop
xchg
in
out
push
pop
dec
test
adc
addr16
adc
cmp
push
pop
inc
mov
xchg
popa
mov
rcrb
test
mov
xchg
add
ljmp
rorb
push
popa
vpmacsdqh
jns
lcall
or
cmpsb
pop
stc
xchg
fimull
mov
pop
hlt
mov
mov
aaa
dec
jge
outsl
cmp
and
mov
sub
les
movsl
sbbl
call
sub
jecxz
xor
adc
jb
ja
cs
jmp
cmc
push
pop
scas
call
sbbb
mov
mov
mov
lods
ret
ret
and
iret
adc
popa
mov
and
rorl
jo
call
pop
negb
sbbb
dec
mov
mov
mov
xchg
leave
inc
call
sub
mov
loopne
push
in
jno
sar
mov
sarl
jle
cmp
arpl
repz
sbb
hlt
iret
adc
out
loope
jecxz
shrb
mov
push
test
shrl
mov
adc
xor
sar
stc
push
sbb
aad
jg
out
adc
es
sub
stos
cwtl
rorl
jmp
fwait
addr16
push
cmc
add
push
sbb
xor
repz
out
sub
mov
stos
mov
int3
ret
out
or
jnp
xchg
mov
or
test
mov
loopne
mov
js
mov
xor
sub
arpl
inc
and
adc
mov
aaa
sbb
and
sbb
xchg
scas
push
adcl
movsl
pop
and
insl
shll
pop
mov
ret
divb
mov
and
and
pop
mov
enter
mov
pop
push
and
outsl
jp
outsl
addr16
and
fs
hlt
xchg
in
jecxz
out
dec
outsb
sub
lods
das
mov
popa
and
adc
inc
xchg
sub
test
mov
mov
sbb
adc
adcb
mov
aaa
in
push
hlt
push
leave
out
call
in
or
das
push
dec
jmp
in
sub
ljmp
push
es
cltd
icebp
fstpl
int
jl
cmp
icebp
lock
mov
push
out
jmp
insl
in
in
fdivs
out
adc
mov
sbb
out
mov
jb
push
lods
testb
mov
sub
mov
adc
inc
jp
push
stos
and
sbb
sub
scas
or
dec
mov
mov
dec
pop
jp
mov
fcmovnu
mov
pop
and
xlat
pop
loopne,pn
push
ret
or
scas
mov
sbb
mov
sub
insl
or
xor
iret
insb
pushf
fimuls
mov
orb
mov
push
stc
push
jbe
lock
adc
dec
ret
cwtl
pop
cltd
cmp
pop
icebp
mov
in
add
roll
adc
fwait
ja
gs
ror
mov
inc
add
mov
and
fld
sub
test
push
jb
jns
in
mov
jnp
cmp
mov
inc
fbstp
ja
js
xor
and
addb
ret
cld
rcl
mov
xlat
imul
and
mov
inc
inc
std
inc
outsb
addl
insl
in
dec
mov
out
idivl
shlb
sbb
add
arpl
call
into
pop
outsb
jns
sub
out
or
push
jae
outsl
and
sbb
add
pop
adc
shll
adc
lods
dec
dec
ljmp
fisttpl
mov
leave
push
sbb
out
nop
adc
mov
stos
pop
and
jne
pusha
fdivr
std
fcoml
and
mov
pop
adc
adc
orl
in
loopne
imul
fs
or
or
into
fstpl
pop
or
inc
mov
push
pop
sub
xlat
push
add
pop
mov
and
push
insl
jns
in
mov
rolb
cwtl
in
mov
sub
inc
es
xchg
in
pop
clc
mov
clc
std
aaa
es
mov
sbbb
or
pop
cs
mov
mov
mov
pop
mov
mov
xchg
sbb
add
ljmp
out
inc
sub
rorb
push
jg
test
add
shl
adc
pop
test
je
rorb
adc
aaa
adc
cltd
inc
lahf
fstps
cli
sbb
adc
mov
mov
inc
mov
call
subb
lahf
fists
sub
ror
sub
rcr
mov
jno
cli
xchg
sbb
jg
stos
mov
sbb
mov
rcrl
pop
psubusw
cmp
popf
push
and
add
cmpl
add
fiaddl
popf
cmc
loop
mov
icebp
mov
cmp
popa
gs
divb
mov
mov
jl
pop
scas
sbb
xchg
jg
adc
cs
movsl
inc
mov
dec
jecxz
leave
sarl
arpl
stc
dec
sub
mov
mov
loop
ljmp
in
jno
adc
jno
scas
push
sbbl
adc
mov
xchg
adc
push
cmc
cmp
pop
loope
fdivl
dec
sarb
out
mov
or
test
in
frstor
xchg
jge
in
ja
in
jp
popa
hlt
test
mov
inc
push
outsb
jns
xor
mov
mov
aaa
push
xchg
add
scas
out
fld
sub
mov
mov
cli
sbb
arpl
adc
out
adc
fwait
cltd
loopne
popf
inc
inc
pop
jle
fwait
popa
inc
paddw
add
addl
clc
repnz
add
imul
sahf
in
sti
cli
shlb
or
adc
fildl
or
and
lret
and
pmulhuw
ja
push
out
pop
or
mov
shlb
sbb
jne
push
sbb
xor
adc
push
int
movsl
sti
or
or
xor
out
cmp
xchg
jge
xchg
xchg
popf
jo
hlt
pop
cmpsb
pusha
aam
push
shr
adcl
movsl
scas
jns
cmp
push
xchg
jecxz
lds
popa
stos
divb
mov
mov
mov
inc
in
outsl
movl
push
jae
xor
pop
adc
das
das
mov
jge
out
dec
mov
adc
push
lea
repnz
jecxz
jg
lret
xchg
inc
xor
jne
icebp
loope
push
inc
mov
hlt
pushf
and
rcl
or
lods
xor
mov
dec
popf
jg
pusha
adc
sub
outsb
icebp
shl
jecxz
lret
or
das
adcl
xchg
sbb
xor
rcrb
out
loope
push
adc
mov
jmp
out
dec
dec
lock
mov
pushf
jbe
or
dec
pushf
pop
lea
stc
sub
jp
cltd
mov
adc
decl
fisttpll
cltd
or
add
cmp
pop
xchg
add
decb
adc
sbb
xchg
mov
call
sbb
xchg
mov
cmp
adc
fwait
test
das
adc
inc
stc
sbbb
int
mov
push
mov
out
ja
cs
cmp
sti
pop
mov
mov
mov
xchg
repz
pop
out
xor
cmp
sbb
repnz
mov
mov
mov
adc
ss
pop
xor
lret
mov
enter
dec
ja
addb
sbb
mov
mov
popf
stos
mov
xchg
lods
fistl
adc
call
xlat
movsb
scas
pop
decb
cs
sbb
scas
mov
pushl
sbb
mov
mov
ljmp
mov
or
mov
inc
scas
mov
jge
lods
das
faddp
or
iret
cmp
inc
in
jecxz
dec
mov
mov
in
and
inc
adc
mov
dec
loop
mov
scas
add
imul
nop
and
lock
mov
push
outsl
inc
in
sbb
and
stos
outsb
mov
out
lret
jge
cmp
cmp
popa
and
mull
add
stos
xchg
mov
and
jmp
jmp
pop
ljmp
xor
and
fsubr
xchg
addr16
adc
std
adc
jle
sub
ret
xor
mov
and
adc
mov
stc
add
cwtl
bound
aad
into
hlt
popf
daa
sbb
and
sbb
dec
dec
mov
gs
sbb
sarb
xchg
faddl
mov
and
inc
pop
sbb
or
shlb
pushf
lret
cltd
jecxz
sbb
pop
or
adc
or
out
jg
sbb
xchg
mov
push
dec
xchg
cltd
rolb
mov
sbb
icebp
leave
loope
inc
aaa
aaa
in
adc
adc
fcoms
mov
pop
sub
adc
aas
sahf
xchg
mov
mov
and
mov
fldl
call
lds
mov
imull
and
test
push
adc
mov
repz
pop
inc
lods
jge
fidivrl
inc
xadd
shlb
mov
pop
rclb
mov
stos
in
mov
out
pushl
outsb
das
jne
xlat
sahf
in
sub
out
or
pop
leave
sub
mov
mov
pop
cmovl
jmp
incb
cmp
arpl
in
inc
mov
adc
xor
cmpsl
push
adc
or
jo
nop
xor
mov
in
pop
cs
cltd
sbbb
adc
push
mov
loopne
nop
jae
jno
push
add
test
inc
aad
movsl
out
leave
mov
aaa
pop
je
adc
icebp
cli
jno
jo
jns
ss
outsl
jecxz
sub
popf
push
add
add
into
push
out
fimull
mov
stc
test
imull
ja
dec
icebp
testb
mov
jle
test
sub
scas
and
stc
jno
dec
mov
or
loop
vaddpd
mov
cwtl
mov
lds
popf
or
out
xchg
adc
push
sub
push
test
fbstp
dec
sub
sbb
sbb
pop
mov
js
mov
int3
shr
xchg
xchg
inc
pushf
fistpl
pop
test
pop
adc
jnp
pop
in
out
out
mov
and
clc
mov
loopne
jl
arpl
pushf
inc
xchg
pop
pop
cmpsl
push
mov
aas
push
pop
es
mov
xchg
dec
enter
add
cwtl
jg
mov
dec
mov
mov
mov
adc
jle
test
cli
push
scas
push
jmp
push
or
inc
mov
iret
loopne
sarb
and
cmp
xor
add
jecxz
sbb
lcall
hlt
test
cs
xchg
xchg
fildl
jne
dec
jne
sbb
popa
adcl
arpl
scas
xchg
sbb
add
push
sbb
data16
shr
dec
das
decl
nop
aaa
sub
sbb
adc
sbb
jle
out
mul
inc
pop
cmp
cltd
hlt
pop
nop
sti
scas
xchg
subb
hlt
rorb
nop
push
and
mov
mov
jne
mov
aad
and
dec
clc
enter
mov
xlat
xchg
pop
or
out
mov
inc
lea
rorl
popf
mov
loopne
push
and
fimull
cmp
sarl
icebp
lea
sub
xchg
or
shl
lods
push
hlt
and
xor
xchg
or
test
iret
sbb
hlt
sbb
lahf
fucomip
and
mov
push
psllw
fsubrs
jle
out
bound
sub
aam
addl
cmp
ficoms
insb
pop
clc
fwait
and
adc
push
cmp
out
mov
inc
cmc
mov
pop
lods
outsb
roll
jecxz
adc
adc
jbe
fnstsw
mov
xchg
cld
pusha
inc
add
xchg
sbb
inc
xlat
inc
mov
inc
imul
mov
xchg
addr16
fmulp
mov
sbb
out
mov
or
pop
jg
jge
fisubs
cmpl
out
push
mov
fwait
jo
int3
movsb
mov
popf
mov
adc
pop
jno
fnstsw
shl
in
mov
push
out
icebp
adc
cli
sbb
aam
jb
xchg
xlat
sahf
imul
push
in
fistpl
xchg
jbe
call
fnstsw
push
adc
sub
test
shrl
testb
jns
pop
loope
cli
and
pop
lods
fwait
stc
jg
in
pop
sub
and
jge
lret
sbb
xchg
pop
test
or
std
mov
fdiv
rcll
adc
cmc
fwait
cmpsl
mov
push
xlat
outsl
xchg
aaa
cs
mov
call
pop
gs
cs
rorl
xchg
mov
aam
push
stc
pop
cmp
add
xchg
pop
jmp
add
mov
adc
mov
xor
pop
push
jo
mov
ret
test
subb
ja
popf
push
xchg
mov
or
dec
push
leave
xor
jmp
shll
shl
rcl
mov
sbb
stos
push
enter
xor
ror
mov
cwtl
icebp
lods
daa
or
xchg
or
mov
mov
push
fcoms
imul
mov
dec
fdivl
push
loope
lcall
inc
nop
xlat
xor
sbb
aam
arpl
jbe
mov
xchg
in
lods
inc
inc
mov
mov
mov
add
push
mov
cmpsl
cld
pop
adc
ds
into
mov
add
cmpsl
xchg
push
xor
mov
mov
push
pop
jg
mov
out
cmpb
fidivrs
sti
or
mov
pop
or
mov
and
push
mov
mov
cld
adcb
xor
out
divb
jle
mov
xor
nop
add
loopne
and
ficoml
aam
jns
jge
xorb
aaa
or
imul
stos
cs
cld
jge
das
aaa
fstps
or
std
lret
lahf
mov
fs
leave
jno
cltd
sbb
mov
mov
in
mov
out
lahf
push
in
mov
test
clc
call
jmp
mov
or
mov
dec
inc
popf
sbb
adc
xor
push
xor
cmp
lods
push
sbb
mov
and
xor
mov
lods
out
enter
out
test
out
iret
fs
jecxz
test
jge
repnz
fistl
iret
mov
xchg
imul
sbb
fnstcw
sub
aam
fnstsw
and
xor
xchg
js
aad
add
lods
data16
xor
push
inc
or
mov
fwait
nop
fwait
enter
sub
xlat
aaa
inc
and
jp
and
xchg
cmp
imul
stc
loop
imul
add
jecxz
cmp
pop
dec
pop
decb
mov
out
inc
arpl
push
shll
adc
pop
bound
scas
xchg
lds
arpl
dec
xor
sbb
push
imul
movsl
popf
or
xchg
test
das
mov
jo
popa
sbb
jno
lock
fadds
mov
shl
out
jmp
xchg
adc
addb
push
add
fnstcw
jmp
or
rolb
push
movsl
xor
cmp
sar
rcrl
loope
and
xchg
push
fildl
das
rdpmc
pop
sbb
push
pop
loop
fwait
and
lock
xchg
and
clc
subl
jne
nop
jge
pop
sub
mov
lret
arpl
loope
aas
movsl
pop
cltd
sub
and
pop
mov
mov
and
xchg
and
aam
pop
std
inc
sbb
mov
dec
fcoms
jne
subl
dec
jmp
push
lret
xchg
rcll
mov
inc
cmp
pusha
ja
pop
push
test
shl
mov
mov
pushf
cmp
in
mov
xchg
inc
cmc
inc
jno
imulb
rolb
adc
repnz
out
frstor
add
std
pop
minps
cmp
jmp
pop
stos
xchg
xor
movsb
jle
lods
adc
add
outsb
pushl
dec
adc
divb
insl
jbe
je
cmp
dec
mov
cmp
sti
sbb
ret
xor
scas
mov
das
ja
sbb
mov
mov
add
xchg
aaa
pop
fstl
iret
add
dec
icebp
scas
push
pop
and
leave
jp
mov
shrb
dec
jp
mov
cltd
lret
jp
clc
lea
cltd
adc
aaa
adc
push
adc
lcall
push
push
mov
addr16
test
pop
cltd
mov
popf
int3
inc
jmp
pop
jp
shll
mov
pop
aam
fisttpl
sub
mov
push
and
mov
jo
negl
sbb
je
xchg
out
inc
add
add
rorl
loop
sbb
mov
repz
mov
and
xabort
jno
jle
mov
ljmp
sub
xor
cli
push
aaa
dec
xor
loope
outsl
mov
add
lret
pop
outsb
sbb
popf
sar
adc
xchg
aad
js
pushf
dec
pushf
adc
xchg
mov
shll
cmc
adc
in
clc
pop
iret
mov
stc
mov
xchg
pop
cmpsl
push
cwtl
movsb
arpl
nop
inc
sub
mov
sub
adc
lcall
mov
es
scas
add
xor
xor
mov
sub
aaa
ret
fcmove
adc
scas
jns
mov
stos
js
push
jge
push
and
pop
cmp
leave
outsl
mov
inc
push
mov
fcoml
adc
mov
mov
pop
stc
daa
cmp
add
push
cli
sbb
jbe
cli
or
jo
sub
cmp
sbb
out
mov
pop
or
out
mulb
adc
call
cmp
cmp
add
fucomi
inc
xchg
dec
sti
adc
rcr
icebp
dec
xchg
xchg
lahf
cwtl
mov
push
daa
cld
mov
mov
mov
push
push
addl
and
std
shlb
scas
mov
sbb
movsb
fadds
aaa
push
in
ret
cld
into
adc
pop
popf
loop
popf
cmp
push
shlb
scas
sbb
fisubs
adc
aaa
push
pop
push
fimuls
std
jle
mov
mov
ficomps
xor
mov
mov
in
mov
adc
mov
cltd
mov
mov
cmp
call
add
xor
js
sbb
adc
push
fstpt
mov
inc
pop
pop
in
mov
inc
ret
das
clc
icebp
adc
jge
iret
lods
aaa
adc
sbb
mov
cmp
bound
imul
sub
movl
dec
rcrl
aam
jnp
jp
lds
shrb
adc
mov
xchg
iret
mov
in
mov
lock
fdivp
push
iret
dec
xchg
jnp
xor
fistl
inc
xor
outsl
adc
mov
loopne
dec
int3
dec
cmp
mov
popa
scas
mov
les
xor
rclb
rol
out
pop
dec
push
orb
outsl
xchg
mov
dec
shr
mov
sahf
ss
mov
cmc
pop
mov
das
xchg
jae
popa
fnsave
xorl
hlt
int
mov
push
jecxz
ret
mov
xchg
sbbl
repz
in
pop
imul
mov
jb
ljmp
hlt
aas
sub
mov
imul
add
cmp
in
push
mov
dec
or
mov
shrb
out
inc
outsl
mov
outsl
xchg
aam
je
push
adc
xchg
cmc
push
fcompl
loopne
mov
fcoml
loope
cltd
sbb
and
pop
add
jns
and
push
loop
jle
jnp
xor
add
cvtps2pi
mov
insl
dec
mov
sub
ljmp
inc
and
adc
cld
push
sub
movsl
xchg
jno
and
push
sbbb
rcrb
sbb
stc
cmp
sbb
int
adc
jmp
in
insb
clc
xchg
xchg
repnz
cli
int
push
clc
add
mov
scas
cmp
xchg
adc
lret
sbb
shlb
push
mov
ja
mov
rorl
push
adc
and
mov
sti
adcb
loop
fstpt
popf
pop
adc
lods
fwait
xchg
hlt
mov
adc
or
and
push
mov
sbb
mwait
dec
addr16
ret
mov
insb
xchg
mov
pop
in
shrl
or
add
jbe
pop
dec
jmp
dec
cltd
xor
aaa
adc
jb
aaa
call
and
outsl
imul
out
subb
sub
dec
es
sbb
sbbl
cli
subl
dec
pop
cmp
test
leave
je
cmp
push
dec
aaa
mov
sub
jno
les
shrl
loopne
popf
icebp
cmpsb
fildl
mov
sbb
and
sub
dec
xchg
push
dec
jl
icebp
add
out
enter
xor
filds
aaa
mov
insl
out
test
pavgw
inc
sti
sbbl
rclb
xchg
jle
add
les
pushf
pop
stos
inc
add
movsb
push
popf
iret
sbb
or
cmp
fwait
shr
sbb
jle
push
test
inc
notl
popf
jns
lcall
xchg
out
sarb
xchg
stc
mov
push
icebp
dec
push
popa
fnstenv
ficoms
adc
inc
cld
rol
push
or
and
lock
push
inc
nop
aaa
adc
pop
and
outsl
loopne
fwait
mov
test
pop
mov
push
dec
sbb
push
cmp
shl
mov
cld
test
das
insl
adc
addl
lret
add
mov
into
aas
pop
lret
mov
xchg
xor
pop
imul
xchg
neg
fs
popf
add
push
mov
ja
jae
xchg
lds
push
mov
addr16
divb
xlat
adc
cli
cmp
or
stos
nop
shr
cli
imul
sbb
sbb
push
inc
ja
dec
cs
cmp
scas
pop
sar
sbb
adc
daa
into
icebp
lods
sbb
cld
push
push
pop
mov
mov
cmp
rcll
sbb
mov
icebp
and
sbb
or
adc
mov
or
jge
jmp
and
add
xchg
or
icebp
cld
in
push
pop
add
imul
in
and
repnz
pop
hlt
and
loopne
lea
fwait
scas
add
shl
je
mov
dec
inc
cwtl
sub
popa
addb
cmp
dec
enter
or
sbb
fcomps
and
insl
lods
scas
in
pop
sbb
cli
sarb
fbstp
jno
out
stc
and
scas
dec
adc
das
dec
adc
iret
lret
stos
push
sbb
repz
pushf
scas
mov
mov
or
xchg
push
mov
mov
scas
loope,pn
ljmp
xchg
cmpsl
lret
das
cltd
or
outsb
test
pop
cmc
add
outsl
inc
out
or
nop
mov
push
mov
ds
push
or
sbb
sbb
inc
dec
outsb
push
cmpsb
xlat
outsb
adc
adc
push
cmpsl
std
or
repnz
push
decl
adc
adc
dec
cwtl
test
mov
lcall
leave
mov
jbe
sbb
ja
inc
and
push
cmp
jmp
lcall
ljmp
mov
test
mov
jmp
imul
mov
mov
clc
sarb
jnp
fdivs
ss
mov
imul
pop
js
outsl
sbb
pop
test
sbb
movsb
out
and
pushf
push
cli
int
subl
lret
xlat
xor
sbb
dec
mov
notb
adc
sbb
and
out
out
xchg
popf
adc
sbb
scas
cltd
out
push
andb
add
incb
mov
jae
daa
push
adc
adc
cmp
das
ds
add
stos
repz
std
jle
insb
add
mov
orl
adc
cmp
mov
push
pop
adc
outsl
aam
stos
in
subl
xlat
adcb
xchg
bound
xchg
int3
mov
mov
adc
std
lahf
mov
lock
and
pop
in
lcall
into
popa
sbb
add
sti
pop
mov
jp
pop
dec
pop
clc
jo
inc
push
mov
insb
push
adc
inc
call
xchg
sbb
add
divl
cmc
mov
and
jg
icebp
scas
mov
inc
fnstsw
and
cwtl
push
ret
cmp
dec
mov
call
cmp
push
nop
adc
sbb
cmp
jbe
cmp
or
cmp
in
add
je
adc
jae
pop
pop
shll
pop
push
or
mov
mov
adc
pop
rorl
cmp
es
adc
adc
das
cmp
mov
hlt
ret
jl
inc
movd
push
inc
or
pop
and
inc
pop
loop
in
pop
cli
fstl
and
daa
arpl
mov
rorb
cmpl
data16
fwait
pop
dec
das
test
loope
addr16
out
repz
xor
mov
sbbb
or
pop
pop
jns
ss
and
and
imul
flds
pop
mov
ss
loope
int
cmpxchg
push
dec
sub
fcompl
or
out
inc
xor
mov
sbbl
test
mov
loope
lret
jg
nop
sbb
mov
test
sbb
jns
cmp
pop
jo
insl
lods
jb
add
pop
mov
mov
lods
in
insl
xchg
pop
add
xor
sub
push
into
inc
rcll
gs
or
movsl
inc
jne
repz
hlt
cli
pop
clc
ficoml
add
jnp
popf
je
or
xchg
sbb
hlt
fcompl
push
jno
jns
stos
sub
cs
ficoms
jno
ret
imul
xchg
add
out
adc
scas
fnstsw
and
in
cmc
cwtl
sti
in
xchg
outsl
ja
cmp
adc
and
cld
stos
dec
jnp
pop
sub
mov
sub
adc
adc
mov
cmp
inc
in
lcall
movsl
and
mov
push
in
adcl
fwait
push
test
popf
cmp
arpl
in
sub
into
jo
in
jp
adc
repnz
icebp
hlt
mov
outsl
daa
aad
lods
lcall
inc
push
or
sbb
mov
mov
adc
aaa
lahf
sbb
mov
jnp
push
test
jge
das
push
rclb
repz
fsts
in
and
xorb
inc
and
ret
das
pushf
mov
xor
gs
adc
jg
neg
adc
sbb
jb
mov
adc
into
rorl
jecxz
shlb
shr
adc
cmp
enter
fwait
sbb
mov
nop
mov
add
stc
mov
and
cld
sbb
mov
sbb
pop
push
adc
xchg
data16
xchg
std
pop
add
in
add
dec
push
dec
xchg
test
sbb
jge
imul
mov
in
outsl
xchg
inc
test
and
push
sbb
out
sbb
lea
aad
push
scas
mov
ljmp
mov
icebp
outsb
dec
push
dec
bswap
sar
inc
sub
mov
and
sbb
mov
mov
jge
xchg
and
xchg
shll
and
int
mov
pop
idiv
pushf
mov
dec
fnsetpm(287
xchg
aam
addb
mov
lret
add
fwait
jb
pop
or
out
in
out
sub
lcall
std
pop
push
mov
scas
jge
dec
cmp
das
ret
adc
cmp
loop
outsb
adc
mov
loopne
cmp
xor
cmp
cmp
int
inc
cltd
out
loope
add
inc
mov
mov
fninit
inc
inc
sub
data16
fs
sbb
ret
sbb
jb
and
jg
lock
insl
andl
outsl
ret
jl
nop
aam
mov
cltd
pushw
or
test
jge
popf
andl
iret
icebp
shlb
mov
sbb
push
popa
mov
adc
cmpsl
dec
fwait
jns
loop
sub
push
jns
scas
pop
pop
sub
adc
clc
rcrl
add
arpl
sub
adc
mov
repnz
sub
inc
inc
imulb
scas
dec
inc
xor
sbb
inc
xor
xor
mov
lods
adc
sbb
xlat
xchg
pop
mov
bound
inc
out
call
push
jo
pop
lret
inc
or
jge
fwait
mulb
xchg
fldenv
loopne
cmp
mov
fs
mov
adcl
rcrl
push
notl
push
push
jmp
lods
pop
mull
cltd
adc
cltd
inc
push
mov
andl
outsl
push
mov
mov
sarb
cwtl
popa
cmp
lret
cltd
xor
adc
push
sub
cmp
cmpsl
int
pushf
add
in
push
xchg
mov
dec
inc
xchg
shlb
adc
mov
add
lcall
jmp
xor
dec
dec
lea
outsl
sarl
cmp
cld
push
pop
add
repz
mov
adc
push
insl
gs
sbb
add
xchg
mov
mov
sahf
mov
repnz
push
xchg
lock
or
cmp
dec
sti
xchg
sbb
scas
movsl
push
pop
sub
mov
mov
xchg
inc
xchg
cli
fldl
push
arpl
rsqrtps
pop
mov
adc
lea
jno
std
xchg
adc
xchg
push
movsl
loope
ja
dec
mov
imul
cmp
cmp
pop
in
adc
scas
repz
inc
lock
pop
mov
or
scas
pop
pop
popf
out
ret
xchg
cmpsb
sarl
push
and
mov
mov
call
mov
xchg
xchg
mov
addr16
adcb
leave
es
aaa
xchg
jne
inc
into
out
test
stos
movsb
jb
dec
sbb
andl
mov
push
sub
xchg
out
or
popf
cmp
mov
pop
xchg
mov
mov
cmpb
sar
xor
mov
mov
mov
xchg
loopne
scas
mov
subl
test
iret
mov
sub
les
add
fidivrs
mov
add
sub
fdivs
lea
or
gs
scas
jge,pt
add
sbb
sbb
shlb
addb
ror
jne
movsl
das
jge
test
push
nop
jo
mov
push
fwait
mov
imul
sarl
adc
mov
pop
mov
xor
and
shll
mov
and
or
divl
mov
xor
adc
aad
dec
stos
lods
or
pop
xlat
xchg
notl
sbb
popf
push
std
mov
arpl
sbb
mov
rcll
mov
fldcw
jnp
dec
add
cs
mov
jl
sbb
push
rorb
loop
or
ret
mov
mov
jbe
shlb
jecxz
cmp
xor
push
or
adc
stos
pop
in
mov
or
lods
data16
outsb
mov
push
mov
inc
outsb
scas
das
aaa
adc
icebp
xor
out
sbb
mov
jge
in
movsb
sub
pop
fmul
mov
xchg
divl
pop
loop
mov
pop
sbb
cmc
adc
dec
add
add
or
xchg
jb
shlb
jo
das
fisubl
and
jle
iret
add
repnz
adc
out
ret
in
mov
hlt
pop
pop
mov
dec
cmp
cmc
sub
or
pop
xlat
xor
andps
sbb
mov
mov
push
mov
scas
ret
and
in
push
out
inc
faddl
adcb
mov
adc
jbe
je
push
xchg
pop
test
dec
fnsave
ret
stos
inc
movsb
dec
jge
push
xchg
and
cs
cmpb
popa
mov
xchg
adc
inc
inc
dec
push
js
icebp
sub
ja
repnz
enter
int
enter
mov
push
and
sbb
mov
or
dec
clc
mov
std
xchg
pop
xor
cmp
adc
and
scas
sbb
inc
dec
rclb
xor
push
fdivr
dec
shl
daa
dec
and
mov
dec
jecxz
repz
stc
les
xor
push
scas
mov
and
cmpsl
adcl
jb
pop
xchg
mov
rcr
and
in
and
rcrl
jp
sarb
pop
ljmp
push
push
cs
mov
cmc
pushf
jb
sub
adc
xchg
cmp
notb
sbb
nop
ljmp
cmp
mov
testb
and
rcll
add
mov
jle
mov
popf
iret
adc
jmp
out
push
das
mov
dec
scas
lret
ja
in
push
push
jb
xchg
inc
inc
loopne
in
and
fimuls
jnp
cmp
cs
add
adc
hlt
gs
fincstp
xchg
xor
int
or
std
pop
scas
adc
sbb
dec
inc
adc
jns
int3
fdivs
lret
cmpb
jmp
jbe
mov
popf
adc
jns
push
scas
and
sbb
mov
pusha
aad
xorl
xor
bound
jg
rcl
push
push
ds
insl
xor
orl
fsubr
movsb
add
push
es
cmp
popa
mov
xlat
xchg
out
jge
xor
shll
lods
lret
es
jle
aad
xchg
lret
outsb
mov
gs
fdivrl
sar
xor
and
out
add
mov
rolb
cltd
jo
push
mov
push
pushf
sbb
stc
mov
mov
loop
xlat
iret
movsb
je
mov
and
fistpl
add
adc
and
lock
mov
cwtl
aad
mov
scas
adc
adcb
mov
lock
out
pop
lock
adc
adc
mov
pop
bound
mov
leave
add
inc
frstpm(287
ret
pop
mov
and
movsb
xchg
inc
inc
sarb
push
push
push
jno
cwtl
adcb
repz
scas
outsl
cmp
jae
popa
and
and
adc
call
int
mov
pusha
xchg
and
fidivrs
mov
cwtl
jmp
mov
lret
and
mov
hlt
pop
sti
pop
adc
ss
dec
jl
stc
push
cmp
xchg
out
outsb
dec
rcrl
xchg
and
fiadds
adc
in
mov
es
inc
mov
jns
cmpb
jbe
scas
sub
dec
xor
ljmp
mov
adc
xchg
mov
mov
js
or
imul
dec
mov
add
das
loope
inc
fimuls
sbb
or
filds
cld
xchg
xor
aad
cltd
clc
or
mov
call
add
sub
add
adc
ds
mov
jo
or
and
jae
sbb
iret
call
add
push
or
adc
movsl
dec
and
scas
push
xorl
sti
sti
popf
mov
sbb
push
add
roll
mov
sbb
xchg
pop
loope
dec
movsb
jl
add
mov
cld
mov
pop
xchg
xchg
jmp
mov
test
xchg
mov
cltd
nop
ja
outsb
aad
add
mov
xor
outsl
dec
mov
into
jmp
cwtl
outsl
sbb
dec
outsl
pushl
shll
dec
faddl
sub
xchg
repnz
outsl
pop
scas
xor
add
add
hlt
cmp
jmp
sbb
icebp
push
adcl
xchg
add
fnstsw
frstor
data16
aad
adc
std
mov
ja
sbb
dec
adcb
ror
adc
rcl
mov
adc
pop
jge
dec
pop
jmp
jp
lea
pop
or
add
out
iret
jb,pn
jns
test
inc
xlat
sub
xor
repz
pop
push
pop
mov
xchg
out
pop
xchg
mov
in
xor
hlt
add
clc
add
test
push
iret
in
hlt
jns
movsb
pop
outsl
mov
aad
nop
das
xor
repz
cs
repz
std
dec
mov
mov
add
sbb
cs
sbb
adc
loop
filds
das
mov
mov
into
call
lea
mov
fnstenv
xchg
add
cmpsb
mov
repz
add
imul
and
aad
inc
inc
xchg
icebp
stos
push
xchg
mov
rol
and
js
cld
sub
jbe
lahf
push
adcl
sbb
enter
inc
into
cmpsb
push
test
pushf
and
pop
and
pop
aas
outsl
aaa
mov
add
out
inc
out
xorl
fldenv
sbb
pop
mov
sub
clc
mov
adcb
popf
loopne
adc
add
or
outsl
and
popf
cwtl
outsb
adc
add
out
sub
std
mov
push
or
lds
adc
mov
inc
outsb
das
cmp
in
stos
and
mov
xorl
aaa
es
sub
stc
add
stos
outsb
sbb
mov
jmp
hlt
jp
das
sbb
mov
adc
sbb
jg
cmp
jne
mov
lea
pop
mov
xchg
xchg
push
and
int3
sub
scas
mov
sbb
cs
loopne
lret
std
jl
pusha
lds
inc
adc
mov
adc
cli
jnp
clc
xor
xor
inc
bound
sti
jno
pop
xchg
mov
xchg
cmp
cmpsl
sbb
mov
push
jle
mov
mul
rcll
jmp
mov
insl
aaa
and
xchg
xchg
call
jno
dec
loopne
mov
or
xor
notl
pop
jb
stc
lcall
pop
mov
add
jno
pushf
rol
mov
adc
leave
mov
fnstenv
xchg
fimull
push
pop
pop
lcall
fucomi
xchg
pop
pop
lahf
sbb
pop
pop
xchg
adc
cvtpi2ps
sbb
dec
pusha
mov
fs
lods
div
jno
mov
clc
pop
lcall
sbb
add
pop
mov
out
test
pop
repz
mov
push
cmp
clc
outsl
and
insl
jecxz
xchg
adc
add
cmc
in
jp
mov
mov
sub
pusha
mov
fisttpll
xchg
clc
sbb
test
dec
push
shr
xchg
scas
push
cmp
xorl
adc
cmpsl
arpl
mov
lea
inc
sete
fcmovnu
sbb
sbb
push
insb
popa
popf
mov
cmp
add
fisubrl
push
frstor
dec
fnstenv
add
or
inc
iret
popf
adc
xor
cwtl
scas
cmp
mov
mov
adc
adc
popf
jl
fldcw
mov
mov
imul
mov
aas
lea
cltd
mov
mov
leave
xor
rol
cld
sbb
jge
js
out
inc
sub
sahf
sahf
jno
sub
cmp
bound
adc
sub
outsl
adc
jns
pop
jo
sub
sub
pusha
mov
loope
lret
pop
clc
jl
leave
jl
stc
xchg
xlat
lahf
mov
fisttpll
loopne
mov
add
cld
push
sbb
or
push
add
or
xor
add
cs
scas
push
in
pop
lods
leave
daa
adc
out
xor
cli
std
fiadds
mov
notb
sti
cmp
es
in
add
xchg
divl
loopne
mov
or
inc
push
hlt
lds
andb
int3
adc
outsl
in
scas
jge
pop
int3
data16
outsl
stos
test
adc
dec
jg
mov
imul
inc
push
xchg
jecxz
mov
mov
cld
mov
sub
pop
clc
and
push
xor
dec
xor
into
push
mov
xchg
cmpsb
xchg
sub
mov
fwait
and
sub
std
fimuls
fisttps
addb
call
mov
aad
lds
mov
pusha
andb
xchg
fldl
sbb
imul
hlt
daa
mov
push
repnz
xor
movl
xchg
movb
jnp
rcrb
movsb
stos
push
or
mov
cs
push
cmp
mov
subl
int
fimuls
or
adc
push
add
ss
jg
scas
iret
lret
rcrl
mov
dec
in
repz
xor
rclb
mov
push
ja
mov
dec
enter
mov
ss
pushl
cmp
addr16
mov
adc
mov
rcr
add
dec
jns
rep
lcall
dec
sub
xchg
outsl
arpl
adc
nop
fcoms
scas
mov
aam
mov
jno
adc
cmc
cmpsl
das
lock
out
xor
arpl
sub
das
mov
icebp
out
shrl
shll
pop
or
push
dec
and
popf
cmc
mov
sbb
cmpsb
popa
and
test
fwait
das
test
xor
sbb
lods
add
sbb
outsl
mov
or
in
xor
cmc
pop
mov
adc
popa
in
and
push
push
cmc
and
and
push
popa
and
pop
lcall
sbb
mov
mov
std
cli
rorl
divl
push
outsl
imul
fnsave
fabs
std
pop
das
push
or
clts
mov
mov
das
leave
or
jl
push
jbe
jg
cmpb
mov
mov
fisubrl
xchg
out
pop
inc
call
push
out
sbb
into
jns
bound
mov
jecxz
push
pop
mov
popf
and
shld
cmp
nop
in
mov
add
and
shll
add
mov
out
push
scas
mov
adc
lcall
out
mov
sub
xor
and
sub
rorb
test
mov
adcb
dec
adc
enter
cwtl
icebp
lock
pop
xchg
leave
and
lods
mov
mov
inc
mov
sti
xchg
pop
loopne
into
sbb
out
push
shr
pushf
push
call
iret
out
mov
out
pop
xchg
inc
lret
mov
out
outsb
pusha
sub
int
and
enter
cmpsl
clc
shl
jb
add
push
loopne
xorl
outsb
loopne
push
push
push
xor
push
fnstcw
and
xor
push
scas
push
in
and
and
mov
sub
sbb
pop
adc
mov
cwtl
and
leave
aas
add
adc
jne
pop
mov
dec
sar
jmp
icebp
repz
pop
mov
mov
mov
pop
fdiv
add
mov
into
stc
out
shl
xor
and
mov
lcall
xchg
sbb
jno
sarb
dec
and
cwtl
icebp
mov
inc
inc
xor
pop
push
xchg
add
mov
repz
out
cmp
dec
mov
pop
add
add
aad
or
sar
inc
sub
cs
mov
bswap
mov
andb
iret
std
out
shrb
adc
clc
icebp
adc
loopne
sahf
jae
scas
jg
cltd
pop
push
add
xchg
adc
int3
push
imul
mov
sbb
cmp
pop
div
loopne
js
jl
gs
adc
test
into
nop
popf
or
dec
mov
outsb
orb
bound
jge
ljmp
ja
or
jge
ss
lcall
pop
fidivrs
rcll
icebp
cmp
jmp
dec
xchg
outsl
ret
sarl
mov
mov
sbb
jmp
sbb
xlat
sbb
cwtl
and
loopne
popf
lcall
fnstenv
iret
das
insb
fs
and
sbb
ss
pop
cmp
jmp
inc
dec
scas
lea
push
dec
test
mov
cwtl
push
popf
sbb
mov
hlt
sbb
cmp
xchg
inc
movsl
rcrl
mov
push
imul
push
mov
mov
cmp
jge
adc
loop
cmp
scas
sbb
sbb
adc
mov
jbe
push
sub
push
shl
add
out
mov
shl
out
or
sub
leave
adc
scas
icebp
stc
jmp
jecxz
inc
ficoms
mov
pop
mov
pop
mov
int
jle
fbld
xchg
dec
mov
sub
stc
ja
lcall
mov
sbb
mov
jmp
push
cs
popf
sbb
leave
insl
lahf
mov
xchg
movsl
xchg
fcoms
faddl
xlat
or
jb
mov
popf
push
test
stos
push
movsl
outsl
dec
shrl
adc
mov
cmpb
inc
push
adc
mov
push
sbb
insl
and
cltd
aaa
fldl
inc
push
lret
xchg
arpl
repnz
mov
or
inc
dec
xchg
and
sub
lods
aad
ds
mov
or
loopne
out
sbb
jo
enter
cmc
push
rclb
inc
lods
out
cmp
fsubs
orb
add
push
jo
mov
mov
imul
inc
or
cmpsl
mov
inc
push
add
adc
mov
mov
mov
cwtl
out
fldt
pop
xchg
jns
lcall
jo
loop
push
jge
xchg
xchg
pop
xlat
notl
add
mov
fnstsw
pop
fists
cli
icebp
pop
mov
xchg
ror
ja
popf
push
mov
adc
mov
and
fldcw
nop
fstps
dec
mov
add
mov
push
inc
push
imul
sbb
adc
adc
out
loopne
sbb
cmc
cli
adc
repnz
fs
not
outsb
mov
dec
jno
jg
in
inc
lods
div
cmp
lahf
jno
loope
and
xchg
sbb
das
sbb
jns
or
mov
mov
mov
out
es
sub
mov
mov
xchg
shlb
les
hlt
roll
mov
int3
lret
dec
and
and
test
add
cmc
repz
gs
pop
adc
dec
shlb
mov
jno
nop
inc
sbb
xchg
mov
insl
push
jg
aas
add
adc
pop
loope
cmp
test
pop
test
cmc
sub
into
pop
xchg
pusha
or
jno
loope
pop
adc
pop
mov
dec
jae
bound
int3
lcall
xor
jo
pop
lret
sub
inc
in
inc
jns
out
push
movl
mov
push
int3
mov
pop
cmpsb
jecxz
jecxz
inc
aaa
pop
add
loopne
testb
push
pop
pop
lret
cmp
pop
mov
mov
mov
iret
mov
incb
add
outsb
pop
cs
movsl
cli
bound
jg
sbb
mov
pop
test
xorb
ret
push
aas
popa
push
nop
mov
es
xchg
sarl
test
in
pop
jle
mov
rcrl
cltd
fimull
call
mov
dec
stos
cmp
mov
cwtl
lods
push
push
or
rclb
negl
sti
repz
mov
sub
xor
xchg
scas
xchg
inc
das
or
cmc
movsl
mov
mov
inc
mov
mov
mov
xchg
and
xchg
out
mov
jg
cmp
lcall
leave
repz
xchg
mov
out
push
je
int
inc
add
mov
mov
sub
sbb
aad
cmc
cs
aad
ds
add
rclb
test
in
mov
shr
mov
outsb
pop
cltd
mov
adc
cltd
or
add
scas
push
enter
aad
xor
or
sbb
lcall
mov
pop
xor
mov
iret
mov
push
push
adc
dec
bound
prefetch
xchg
push
xchg
fstl
movsl
cltd
movsb
mov
popf
aas
mov
mov
or
nop
or
or
sbb
or
mov
inc
icebp
push
dec
adc
in
cltd
nop
adc
and
mov
push
mov
rorb
inc
in
jp
lahf
adc
jmp
add
icebp
aad
xchg
pop
jl
cmpsb
push
sbb
and
nop
int3
push
jbe
fwait
int
lock
xlat
pop
cld
push
negl
sbb
push
addr16
mov
mov
or
sbb
testl
mov
leave
mov
jecxz
rcr
lahf
dec
xchg
add
aam
jl
dec
fildl
jbe
cltd
add
leave
push
xor
in
dec
lods
sbb
notb
pop
mov
aaa
test
xchg
mov
std
loopne
pop
aad
imul
xchg
leave
fistl
es
pusha
mov
jge
and
das
mov
jne
nop
xor
subl
fdivrl
cmp
add
cmpl
mov
std
push
push
andl
sar
adc
fdivrl
jnp
loop
scas
jl
popa
addb
sub
lods
cmp
fcmovu
or
xchg
mov
or
ss
pusha
leave
scas
and
mov
decl
adc
cli
mov
cmp
or
push
hlt
push
into
testb
pusha
insb
add
test
adc
mov
in
clc
jno
es
sbb
js
mov
mov
push
jbe
push
lock
scas
in
or
or
adc
ja
sbb
adc
loop,pn
sahf
mov
mov
xor
xchg
cltd
loope
mov
in
lock
scas
in
xchg
lds
xchg
sbb
add
adc
mov
fxch
mov
jle
mov
in
push
int
ja
jmp
inc
cmpsl
mov
outsl
inc
add
mov
enter
notb
add
add
xchg
int3
int
or
rcrb
in
pop
xor
notb
sub
notb
mov
sub
dec
andb
and
imul
mov
jl
pop
lret
push
pushf
adc
dec
cwtl
call
adc
sarb
xchg
cmp
xchg
dec
sbb
nop
addl
addr16
fs
add
cs
lods
push
iret
test
test
adc
ret
inc
aas
sti
dec
xchg
mov
add
push
sbb
aas
mov
jb
clc
lock
adc
notl
js
sub
testb
popf
mov
shll
mov
repnz
fcmovbe
inc
add
std
inc
pop
sub
sbb
icebp
inc
push
inc
packuswb
pop
andb
mov
shll
call
xor
dec
fcomps
xchg
or
mov
cmp
xor
mov
icebp
push
push
dec
xchg
aaa
rolb
rorb
xchg
out
outsl
sarl
dec
xor
jecxz
xor
shr
pop
mov
mov
pop
xor
mov
mov
popf
pop
in
adc
scas
lahf
adc
sub
lock
sub
loopne
sbb
fdivl
js
dec
push
les
push
push
mov
ja
jmp
xchg
js
adc
dec
scas
lea
pop
inc
mov
hlt
inc
cmp
mov
jmp
push
and
mov
nop
xchg
xchg
ret
outsl
rcll
push
adc
mov
int
sbb
add
cmp
mov
pop
loope
adc
adc
sub
aaa
ret
and
push
daa
adc
cwtl
out
mov
xor
xchg
iret
subb
mov
push
rorl
cmpsb
pushf
add
gs
push
inc
cmp
insb
cwtl
ds
mov
xchg
pop
mov
divl
mov
adc
pop
adc
mov
or
out
and
pop
mov
adc
insl
clc
cld
inc
mov
jge
popf
mov
pop
adc
clc
ja
jo
mov
mov
fldcw
adc
scas
pop
std
mov
xor
jmp
div
int3
dec
fidivrs
lahf
mov
sbb
je
xchg
add
punpckhwd
sub
jg
sbb
xchg
sub
cmp
stc
cmpl
movsl
xor
or
inc
out
enter
sbb
mov
stos
jecxz
movsl
adc
xchg
adc
push
testl
imul
jmp
xchg
repnz
aaa
jmp
inc
out
loope
sub
in
adc
outsl
xor
shl
sub
ss
daa
mov
mov
add
arpl
call
jge
mov
mov
andb
push
mov
mov
lods
jl
xchg
and
push
xor
repz
xor
fcompl
popl
mov
out
mov
and
push
and
pop
xor
sub
or
xor
xchg
mov
nop
popa
xor
mov
add
mov
and
movsl
or
cmp
push
cltd
or
lock
loop
adc
xchg
ret
push
fcom
mov
xchg
loope
mov
rcll
aad
int
push
pop
loopne
rcll
jno
sub
stos
sbb
adc
mov
or
xor
mov
inc
jl
daa
icebp
pop
subb
lea
jno
stc
and
inc
push
and
jmp
xorl
mov
call
lret
inc
repz
imul
jae
adc
movsb
sbb
add
mov
cli
pop
sbb
and
inc
test
out
xor
pop
sbb
sbb
mov
mov
loopne
fimull
mov
adcl
icebp
lock
and
cld
push
loope
out
or
outsl
mov
loop
adc
dec
push
insl
mov
adc
lock
stos
js
repnz
mov
lods
xchg
lea
shrb
into
inc
orb
in
push
mov
adc
xchg
push
adc
jb
sbb
or
repz
sub
xchg
mov
bswap
imul
jge
mov
xchg
rcll
jmp
sbb
inc
sub
push
sbb
add
mov
xchg
fistl
iret
or
hlt
std
mov
lock
mov
xchg
sub
push
adc
adc
das
arpl
mov
movsb
and
jl
scas
notrack
fidivl
adc
test
loopne
pushf
out
roll
mov
jno
dec
roll
add
inc
sbb
bound
rcrl
std
pop
std
xor
cli
jns
aam
es
jo
iret
cs
fistps
jns
loope,pn
rcll
outsl
leave
dec
es
mov
and
fwait
jg
xchg
adc
xchg
mov
mov
mov
pop
icebp
sub
adc
sarb
aas
adc
out
shll
push
iret
sbb
pop
xor
movsl
mov
push
dec
cmc
xchg
ror
std
in
fisubrl
and
pop
push
and
push
adc
sbb
or
pop
notl
sub
insb
outsb
cvtps2pi
sub
test
jae
xchg
push
xchg
xchg
jae
pop
sbb
aaa
in
or
add
mov
sbb
inc
jb
adc
test
add
fidivl
testb
push
outsl
mov
iret
aaa
sbb
adc
int
iret
mov
into
shrl
call
adc
or
mov
mov
xchg
cmp
pop
adc
fs
xchg
fwait
lret
pop
sbb
repnz
cmp
cmp
mov
xchg
jmp
mov
or
roll
jno
loop
cs
xorl
sbb
je
dec
cmp
or
xchg
sbb
das
cltd
roll
mov
rcrb
jmp
scas
js,pt
das
push
sbb
push
sub
movl
dec
jb
in
mov
jno
sbbl
bnd
jns
ret
rorb
mov
cld
lahf
push
daa
popf
scas
adc
xor
xor
pop
iret
and
test
popf
int
loop
sbb
loopne
and
sbb
cwtl
sbb
test
push
push
or
lea
loope
inc
inc
es
cwtl
or
push
call
mov
and
nop
hlt
fstpt
call
rorb
mov
cs
dec
std
pop
add
and
pop
xor
mov
jbe
out
adc
cmp
cmp
addl
add
cmp
clc
nop
mov
lods
sti
xorl
fscale
das
mov
mov
sahf
or
sbbl
inc
xor
jp
pop
xchg
aaa
test
jae
dec
scas
xor
js
aaa
mov
and
push
push
sub
add
fcmovne
adc
clc
cltd
gs
stc
sbb
cli
arpl
shrl
xchg
mov
ljmp
and
pop
fwait
scas
add
int
mov
mov
sti
xchg
sahf
push
xchg
cmp
bnd
xchg
lock
mov
and
sbb
int
jmp
fidivrl
test
or
or
sbb
lods
jbe
push
in
sbb
sub
ret
pusha
aam
int3
imul
jg
adcl
sbb
pop
mov
into
outsl
out
mov
mov
test
pop
mov
lock
cmpsl
mov
push
popf
add
push
movsl
clc
jmp
not
subb
jnp
fstps
cmpsl
xor
add
lret
jecxz
test
arpl
js
xchg
mov
cmp
lock
pop
out
dec
les
repnz
inc
call
push
fisubrl
push
sbb
xchg
xor
pop
adc
ss
push
outsb
jl
xchg
fwait
xchg
fisubrl
fwait
testl
leave
add
arpl
das
and
mov
fsubp
repz
dec
rorl
fiaddl
add
push
ret
addb
mov
rcll
outsl
mov
mov
out
adc
mov
enter
negb
hlt
sbbb
loope
fldl2e
ja
xchg
mov
shlb
out
andl
xchg
dec
pop
xchg
inc
and
sbb
pusha
jmp
pop
jecxz
push
xchg
fs
js
or
xlat
jecxz
pop
jmp
lods
clc
or
mov
pop
push
test
mov
loopne
stos
mov
enter
mov
jecxz
outsl
mov
dec
out
insl
stos
sub
jmp
push
inc
dec
lahf
xchg
int
adc
sbbb
call
jg
je
scas
div
hlt
sbb
sub
outsb
mov
cmp
cli
lock
sahf
jmp
jl
mov
lock
push
cmp
icebp
repnz
neg
dec
pop
inc
loope
mov
les
int
jge
push
cs
mov
fstps
stc
or
test
sbb
gs
ja
cs
cmp
xor
add
jle
stc
mov
or
xchg
in
imul
sbb
and
pop
dec
mov
lcall
mov
lret
adc
fs
and
shlb
mov
and
movsl
push
int3
sbb
callw
jo
inc
cs
adc
jns
xchg
test
push
adc
std
xchg
call
adc
dec
pushf
bnd
ds
inc
loop
dec
pop
test
ljmp
call
or
xor
out
jmp
cmc
mov
sub
push
inc
in
test
mov
pop
add
decl
xchg
pop
stos
sbb
repz
cmpsb
xchg
push
aaa
outsl
push
lods
mov
dec
stos
xchg
push
push
jl
shll
sbb
int
nop
aad
pusha
jno
rcll
mov
pushf
sbb
mov
outsl
sub
push
aam
mov
popf
outsb
divb
jmp
rorb
jo
cmp
inc
inc
std
insb
jge
sbb
imul
flds
mov
jle
adc
cmpb
cmp
aad
andl
rorw
mov
leave
fistpll
inc
fidivl
insl
cmp
inc
mov
or
dec
adc
out
loopne
test
xor
dec
call
in
mulb
cs
ds
push
mov
mov
jnp
nop
pop
jl
ret
cli
mov
pop
sti
adcl
aas
leave
xchg
es
dec
pop
mov
std
xchg
out
das
lods
jp
add
sbb
jno
mov
or
orl
sarl
push
aam
popa
lods
out
sbb
out
pop
add
sbb
xor
xor
jmp
mov
push
movsl
ds
popf
dec
out
sub
lahf
cltd
jo
xchg
call
pop
cmpsl
mov
pop
jns
ss
icebp
sub
repnz
aad
push
js
push
ss
daa
jb
sbb
jl
arpl
sbb
out
jmp
cmpsl
add
add
xor
subl
shlb
in
ljmp
lcall
mov
xor
sbbb
out
mov
mov
and
rclb
lcall
add
inc
stos
rcrl
cwtl
out
cwtl
mov
pop
xchg
nop
jl
sbb
push
fcoms
inc
jmp
pushf
nop
fstl
adc
lcall
mov
test
dec
call
mov
cmp
adc
fcmovb
shl
lret
mov
in
scas
mov
sbb
aad
scas
pushf
das
cmp
push
fcompl
fstl
mov
and
movsl
cs
scas
pusha
pop
das
mov
scas
js
push
es
lock
inc
loop
loop
mov
sbb
lock
out
pop
cmpsl
aam
inc
leave
dec
ss
cmc
cmp
adc
test
hlt
iret
mov
jl
call
push
push
xchg
adc
mov
jp
shlb
dec
add
pushf
test
inc
mov
test
cmpsb
adc
adc
into
mov
test
push
rcrl
lock
cmc
push
add
loope
jno
adc
iret
add
gs
shrb
call
adc
mov
fbstp
jmp
adc
adc
scas
hlt
insl
xor
fiaddl
pop
in
rcll
jg
std
roll
adc
icebp
sarb
mov
loop
jmp
shll
dec
fwait
out
scas
addr16
sbb
jns
add
adc
dec
in
sahf
idivb
push
adc
push
jb
lds
aad
out
movl
repz
loop
fs
idivb
push
push
and
adc
mov
and
into
rcl
add
fdivs
inc
jecxz
addr16
mov
aas
cmc
jnp
cltd
pop
pop
cmp
dec
jecxz
stc
mov
push
int
push
addl
mov
js
or
mov
or
std
in
mov
nop
in
testb
lods
rclb
xchg
xlat
push
xchg
outsl
mov
out
fcomps
jp
inc
mov
bsf
pop
fistpll
insl
inc
mov
int3
out
lods
outsb
pop
clc
push
pop
in
popf
xchg
ja
aaa
adc
lea
sbb
xor
inc
int
xchg
jle
stos
mov
js
jg
push
int3
pop
shlb
pop
push
pop
sub
push
adc
stc
es
mov
scas
jmp
sbb
mov
jg
mull
out
add
cld
dec
in
or
mov
iret
dec
psraw
shll
sbb
xlat
lods
data16
int
cltd
and
xor
add
in
repz
jns
mov
cld
dec
pop
shrl
cmp
sti
shlb
add
lock
mov
pop
ss
aad
stc
xor
add
push
negb
ficompl
mov
push
mov
or
js
lahf
mov
stos
dec
int
jmp
xchg
jo
fcomi
mov
add
roll
fmuls
popf
inc
aad
lahf
mov
mov
jge
shl
cmp
mov
dec
xchg
xchg
sub
adc
pop
mov
cld
push
andb
jge
call
ror
sub
adc
xchg
jbe
shl
imul
loope
divb
leave
popf
sbb
push
inc
insb
pop
cltd
dec
pop
xor
jmp
cmp
pop
xchg
adc
mov
sbb
mov
fldenv
xchg
xor
pop
dec
shll
and
cs
test
pop
lret
mov
out
mov
mov
jno
das
lea
add
mov
mov
or
jno
pop
pop
ret
add
mov
icebp
lcall
xor
aaa
test
rcrl
fnstenv
stc
repnz
jbe
sbb
inc
lods
jae
and
and
hlt
sti
mov
pop
adc
mov
in
stos
popf
push
ficoml
mov
mov
sub
adc
mov
push
xor
test
mov
mov
popa
push
out
inc
std
ja
xchg
sbb
imul
mov
shll
insb
lcall
popf
cmc
test
adc
sub
dec
lds
fstps
pop
test
sbb
in
mov
add
fwait
popa
xlat
mov
mov
or
scas
mov
cli
ds
sbb
push
popf
ret
lock
mov
push
or
mov
mov
jbe
sub
hlt
and
jle
lea
pop
adc
js
push
mov
addr16
fnop
ljmp
adcb
scas
shll
shll
pop
push
mov
fsubs
out
mov
imul
inc
sbb
add
sarl
outsl
push
testb
data16
cmpsb
inc
push
sbb
or
repnz
sti
lcall
stos
ja
lods
bound
aas
sbb
mov
aam
inc
dec
push
add
add
add
pop
mov
and
cli
push
sub
outsb
mov
cmp
push
popa
in
jns
mov
in
add
jo
sub
jo
dec
dec
std
dec
pushw
notl
les
lret
pop
add
pop
scas
imul
mov
pop
ljmp
rorb
push
into
repz
jle
cld
inc
mov
jns
ss
dec
xchg
sbbb
dec
int
pushf
wrmsr
pop
mov
mov
add
push
xor
push
ror
pop
scas
or
sbb
jp
jg
fstpl
popf
or
ljmp
or
leave
inc
jne
adc
and
xchg
scas
mov
lcall
pushf
mov
mov
cmpb
xchg
xchg
enter
scas
mov
push
test
dec
or
gs
jecxz
pushf
mov
cmp
jle
lcall
mov
mov
aas
movsl
xchg
ret
dec
jl
lret
mov
enter
pop
pop
mov
popf
pop
gs
gs
push
pop
sar
out
sbb
and
jb
fnstenv
add
dec
pop
ss
inc
nop
mov
hlt
jo
cmp
test
or
fnstenv
jns
mov
inc
cli
sub
xchg
das
lock
dec
hlt
mov
sbb
mov
cli
ret
mov
out
sub
or
fistpl
imul
or
pop
xchg
inc
xchg
dec
roll
or
xlat
sbbb
xchg
popa
mov
inc
rclb
imul
jno
loop
sub
sbbb
fsts
std
mov
and
or
mov
inc
test
pop
push
outsl
sbb
or
incl
leave
icebp
or
cmp
dec
and
xchg
test
jmp
rcll
rclb
mov
xor
push
aas
push
sbb
in
ds
adcl
xchg
mov
mov
push
loope
push
mov
stos
dec
or
xchg
jmp
xor
adc
adc
pop
inc
lock
xor
cmp
outsl
mov
in
xchg
or
inc
test
inc
mov
jl
xlat
push
in
mov
fwait
inc
stos
inc
push
inc
inc
hlt
in
inc
scas
scas
push
fs
mov
jo
jae
jo
xor
or
lahf
and
pop
jecxz
and
add
xlat
int3
inc
dec
jl
mov
pop
sub
fdivrs
loope
mov
shlb
pop
mov
dec
mov
mov
jmp
outsb
popf
push
andl
sbb
fnsave
mov
lahf
sbb
adc
xchg
rcll
ja
pop
jmp
aas
lahf
jns
lahf
inc
push
inc
test
repnz
lret
cmp
movmskps
iret
adc
sarb
aam
push
jno
lock
sahf
lahf
test
icebp
adc
jno
push
pop
adcb
mov
lock
popf
sub
das
pop
rcr
sti
cltd
or
xchg
scas
dec
adc
push
push
pop
scas
push
adc
addb
fnstcw
pop
loope
mov
clc
sbb
dec
jns
pop
mov
out
sbb
cltd
inc
add
out
out
mov
cmpsb
ss
rcrl
js
dec
sbb
icebp
jl
mov
mov
repnz
cmp
adc
cmp
inc
mov
xchg
bound
nop
mov
sbb
pop
push
rol
adc
push
cli
mov
inc
hlt
outsb
imul
dec
xchg
rorl
mov
dec
mov
mov
mov
jae
mov
roll
iret
add
cld
or
add
mov
sbb
pushf
rcrb
pop
orb
in
jne
icebp
mov
test
sbb
das
add
sbb
lret
imul
hlt
add
adc
enter
add
das
js
jge
mov
cwtl
rclb
jp
test
adc
jmp
loopne
sub
or
cld
fnstenv
cmpsb
idivl
xchg
inc
push
loope
aad
push
sub
jne
dec
pop
nop
or
add
jbe
fnsave
outsl
xchg
shrb
shll
sbbb
xlat
mov
idivl
xor
mov
adc
xor
popa
sbb
mov
aam
jmp
adc
aam
sarl
add
or
add
mov
lock
push
repnz
and
rorl
decl
push
das
jg
aad
das
pop
sbb
adcl
xor
mov
das
adc
xchg
unpckhps
popa
inc
or
std
sbb
rcll
and
mov
sti
int
loope
or
mov
shrl
or
lret
xchg
or
nop
adc
lahf
mov
mov
push
mov
push
sub
fisttpl
and
mov
mov
jmp
std
pop
pop
jno
lahf
cltd
push
or
sahf
push
bound
or
fisttpll
xor
pusha
add
lahf
sbb
xor
cmpsl
popa
and
push
sahf
out
fldl
rorl
pop
mov
lcall
leave
xor
sbb
xchg
js
iret
xchg
dec
popf
ret
mov
push
jge
adc
popf
mov
lret
fildl
ja
out
mov
repz
scas
loop
cmp
sbb
daa
or
popf
jnp
call
adc
das
shll
mov
shlb
cmp
shll
stos
sbb
or
xchg
call
mov
mov
out
xor
insl
test
and
data16
dec
sbb
push
aad
jo
call
pusha
xchg
flds
add
and
push
aad
fstpl
mov
sbb
jnp
xchg
movsl
adc
mov
loope
cli
loopne
arpl
rcl
orb
addr16
aad
add
sbb
dec
mov
into
out
test
out
dec
cli
lret
loope
adc
xchg
jb
outsb
std
orl
jae
out
jo
stc
adc
pop
jns,pn
nop
pop
mov
nop
mov
sahf
das
subb
das
js
xor
mov
andb
sbb
js
popf
adc
iret
mov
xchg
sbbb
out
mov
or
fcomps
mov
mov
add
push
xchg
jmp
popa
incl
leave
aam
mov
leave
push
jns
mov
decl
aad
pop
cmp
cltd
or
subb
shl
int
scas
aam
pop
repnz
jmp
lea
adc
orl
movsl
cmpsb
fistl
jg
scas
loope
and
or
icebp
mov
pop
pop
ds
or
dec
fnstcw
adc
icebp
sbb
fcomip
push
addr16
aam
xor
adc
add
push
das
add
and
xor
xchg
xchg
popa
fwait
out
adc
sarl
adc
fwait
iret
cld
mov
xchg
popf
addl
and
xor
push
dec
dec
add
sbb
popa
pop
add
and
stc
enter
adc
or
lret
imul
or
mov
stc
repz
cmpxchg
nop
mov
or
pop
pop
push
add
adc
aad
add
push
aas
fildl
pop
mov
and
xor
add
cmpsl
push
call
jle
cmp
and
or
mov
mov
popa
popf
sarl
call
int3
ss
jae
dec
rolb
sarl
xor
out
adc
push
mov
sub
sbb
loopne
or
stc
xchg
mov
and
rcrl
ret
test
or
sub
push
rcr
push
cwtl
and
mov
outsb
and
leave
dec
cltd
adc
cs
or
popa
mov
push
notl
mov
add
lods
jmp
ja
sbb
leave
push
jo
and
nop
adcb
sbb
int
pusha
xor
das
inc
ds
xor
jo
or
add
xor
add
xor
xor
test
aad
mov
clc
cmp
or
dec
adc
adc
or
nop
in
xchg
fidivl
icebp
mov
and
call
and
rorb
mov
insb
scas
push
push
sbb
pop
xchg
pusha
leave
rcl
ja
inc
test
ficoms
fstps
xor
fcmovnu
sub
loope
push
mov
ror
fwait
lods
icebp
cmp
inc
std
and
mov
adc
out
mov
ror
dec
or
and
push
nop
fnstsw
inc
xchg
sbb
xchg
jae
dec
lcall
stos
ret
pop
movsb
dec
fucomp
in
in
enter
jns
cmc
icebp
icebp
sbb
xlat
jno
repz
lods
add
dec
cltd
pop
scas
mov
mov
inc
dec
loop
cmp
sbb
rclb
icebp
pop
lods
cmp
das
hlt
repnz
andl
adc
jns
popf
xchg
popf
inc
mov
and
pop
leave
shll
xlat
mov
ljmp
mov
out
orl
xchg
pop
jmp
mov
outsl
mov
repnz
js
rorb
mov
xchg
and
outsl
xor
movsb
mov
push
dec
cmp
and
mov
cltd
lret
push
in
push
xor
mov
pop
dec
jp
and
jp
and
inc
int3
mov
rorb
fsubl
sbb
sbb
ljmp
and
mov
mov
jl
ds
out
pop
jns
scas
pop
lahf
js
pop
out
jb
testl
lcall
mov
adc
jb
fsubrs
mul
stos
notb
sbb
mov
xor
out
andl
outsl
andl
shlb
flds
inc
mov
mov
shr
inc
lock
std
inc
push
dec
sbb
hlt
dec
fimull
mov
pause
fs
fdiv
out
cltd
int3
adc
lods
lret
icebp
and
pop
sbb
push
adc
pop
dec
add
jmp
mov
jno
in
push
cmp
das
fstl
mov
or
enter
lcall
xchg
leave
lret
mov
dec
mov
inc
or
fiaddl
mov
jge
lea
mov
movsl
outsb
pop
jmp
les
and
cli
jbe
mov
testb
mov
ficompl
test
push
ja
subb
ret
mov
arpl
xor
adc
ss
jl
sbb
pop
loop
pop
pop
add
mov
add
and
add
jbe
decb
fwait
psubusw
pushf
loopne
int
cld
jb
cmp
cltd
daa
repnz
in
sarb
int
arpl
jg
and
mov
sub
add
bound
jp
notl
aad
jnp
xlat
adc
jbe
mov
addr16
sarl
xor
mov
sbb
dec
aas
fmull
push
mov
in
mov
es
enter
sbbl
pusha
imul
in
and
adc
adc
in
cmpps
xchg
das
loop
push
notl
sbb
xchg
in
lea
and
in
jge
sbb
jl
sub
rorb
unpcklps
dec
test
scas
adc
lret
fwait
xchg
sbb
xchg
out
jecxz
and
fdivrp
or
or
push
push
adc
out
mov
inc
fst
sbb
sbb
call
frstor
and
popf
or
dec
inc
fstl
ss
add
out
sbb
and
ficomps
out
inc
popf
adc
lcall
push
cltd
in
add
out
fistps
mov
cltd
aad
add
das
stc
icebp
popf
popf
fwait
sbb
push
frstor
mov
dec
popf
or
enter
adc
fstps
fwait
enter
in
rcrl
sbb
fmull
and
in
mov
cs
lods
sbb
call
adc
jnp
icebp
cld
fbld
and
push
scas
ret
adc
pop
jl
int
xor
sti
pop
cwtl
jns
pop
rcrl
mov
sbb
sbb
sub
sbb
xor
out
sarl
jno
shrl
shl
push
mov
jns
xchg
std
jnp
std
mov
cld
sbb
or
sbb
sbb
adc
and
vpxor
and
dec
or
lcall
push
xor
lds
test
outsb
add
mov
or
nop
cwtl
mov
rcr
pop
rcrl
test
pop
movsb
ret
outsb
push
xor
push
sub
cmp
stc
jmp
inc
mov
add
pop
dec
outsb
sbb
nop
lock
fistl
xor
mov
adc
adc
movsl
mov
mov
pop
lcall
pop
inc
rcrl
outsb
mov
mov
shll
adc
lock
rdtsc
out
iret
scas
outsl
dec
cs
xor
into
scas
mov
sbb
popf
jge
cmp
mov
sbb
xor
mov
sbb
xor
mov
sbb
popf
fnstcw
sbb
fdivrs
cmp
not
mov
xchg
ja
aaa
push
not
mov
xchg
or
in
xor
gs
and
in
les
jecxz
ret
mov
loop
ret
xorl
add
mov
sub
aad
jnp
icebp
xchg
shufps
pop
clc
and
sbb
mov
aaa
sbb
je
sar
and
xchg
xor
inc
jno
adc
jecxz
imul
test
loope
add
cwtl
cmp
push
pop
and
pop
cmp
add
cmp
in
pop
out
stc
xlat
pop
sbb
out
mov
fs
add
lea
and
ret
ret
out
fdivr
mov
xorb
inc
pop
adc
sbb
and
pop
mov
in
add
insb
mov
mov
pop
mov
popf
sbb
push
cmp
outsb
movsb
push
jnp
test
lods
push
xor
sub
dec
int3
popf
jg
dec
decl
sbb
sbb
js
and
test
mov
mov
je
cmp
cmc
movsl
and
push
inc
repnz
arpl
out
mov
loopw
scas
lock
sbb
test
inc
std
call
mov
pop
inc
clc
push
pop
aaa
or
les
dec
shrl
mov
mov
test
lahf
or
sbb
pop
sbb
ret
jecxz
cld
sub
xchg
push
or
pop
jg
xchg
mov
mov
push
pop
fstpl
loopne
adc
xchg
inc
dec
test
lock
and
xchg
cmp
insb
add
push
sbb
sti
shrb
clc
test
xlat
xchg
and
out
imul
or
mov
jecxz
pop
jg
pop
add
fistpl
mov
xor
rclb
mov
fstpt
xchg
inc
in
aad
shrb
aaa
mov
xor
xchg
adcl
add
and
enter
mov
and
lret
cmp
push
sbb
and
test
mov
xchg
xor
std
inc
inc
adc
pushf
lret
sbb
mov
mov
test
xchg
and
or
push
sbb
xchg
cmp
or
mov
jae
pop
add
xor
xlat
fidivl
call
jae
xchg
in
out
pop
xor
push
add
mov
int
aad
addb
and
xchg
pushf
lcall
insb
mov
jae
lock
ret
push
xchg
fcmovnu
gs
imul
mov
jnp
mov
or
mov
push
mov
scas
mov
cwtl
arpl
sbb
push
lcall
mov
inc
push
pop
out
mov
std
lahf
xchg
pop
cmp
adc
aaa
sbb
xchg
mov
push
fldenv
insl
icebp
pop
adc
mov
div
rclb
icebp
inc
movsl
and
int
lahf
icebp
adcl
icebp
and
inc
icebp
jecxz
icebp
enter
repnz
scas
cli
jo
outsb
mov
adc
sbb
icebp
icebp
push
out
out
xor
div
jge
movsl
dec
xor
and
loopne
mov
pop
fistpll
aas
push
fidivrs
sub
lea
dec
sub
in
int3
lods
mov
sub
jmp
stos
mov
dec
sub
ljmp
sub
jmp
xor
or
enter
xor
pop
out
cmpsl
xchg
inc
es
out
cmpsb
xchg
inc
xor
xchg
jne
push
xor
hlt
aam
xchg
je
push
xor
repz
xor
repnz
dec
jg
xlat
mov
repz
mov
and
xor
adc
xchg
jbe
sbb
test
icebp
movsl
setl
add
shll
daa
mov
stc
adc
sub
jecxz
cmp
push
add
mov
and
stc
and
push
add
das
fdiv
movsb
cltd
jmp
test
stc
xor
jecxz
movsb
inc
js
mov
and
pop
test
enter
outsb
fmuls
and
xor
add
cltd
sbb
fwait
sbb
movsl
push
xchg
and
pop
ret
scas
sub
test
mov
xchg
xlat
xor
js
pavgb
mov
das
sbb
stc
sbb
popf
scas
sbb
mov
cmp
push
call
ret
sbb
in
pushf
outsl
clc
test
fwait
stc
pop
push
scas
cwtl
lret
outsb
adc
adc
or
jecxz
int3
scas
out
das
iret
cmp
or
inc
mov
cmpsb
and
movsl
ja
jns
mov
cwtl
cmpsl
lahf
and
loope
add
pop
sbb
pop
lods
sbb
int3
adc
int3
push
int3
outsl
int3
mov
cltd
push
mov
jo
xchg
popf
jo
mov
mov
adc
xchg
jp
ret
push
and
les
pop
pop
adc
fsub
mov
sbb
sbb
or
movsb
or
pop
cwtl
and
leave
push
negb
jg
movsl
mov
gs
jno
movsl
jl
out
jno
sbb
sbb
out
test
push
fldenv
and
or
in
xchg
xlat
aas
loop
mov
das
fldenv
movsb
inc
ret
std
js
add
in
icebp
jmp
jmp
clc
cltd
mov
jle
add
pop
adc
mov
test
or
pop
das
lods
and
cmp
clc
clc
ret
cmpsb
retw
sbb
pop
push
sbb
idivb
sahf
pop
sbb
pop
mov
outsb
clc
scas
pop
mov
cs
or
push
adc
rorl
in
lcall
jmp
int3
or
pop
jmp
pop
das
sahf
lods
stc
pop
push
int3
inc
pop
fildl
inc
stos
les
adc
ficoms
sahf
mov
push
xor
xlat
iret
and
adc
in
lds
enter
mov
jne
or
push
das
scas
popf
fisttpll
cmp
popa
sarb
popl
sbb
add
outsb
std
mov
jg
and
pop
fdiv
inc
push
in
mov
pop
push
and
pop
xlat
jbe
loopne
mov
push
mov
das
adc
xchg
pop
mov
or
mov
test
adc
sbb
and
mov
or
hlt
inc
and
cmp
and
mov
cmp
xor
or
pop
cmp
movsb
jmp
and
js
adc
sbb
and
popf
cld
lret
test
in
sbb
and
push
sub
bound
mov
adc
aaa
xor
mov
mov
sbb
cmp
fidivrl
aas
or
aad
scas
push
jp
fwait
std
hlt
ret
int3
xor
cmp
pop
in
mov
test
adc
adc
push
loop
aaa
add
pop
mov
xchg
inc
js
sbb
add
pusha
pop
test
or
aaa
and
mov
push
subb
ret
repz
add
mov
imul
les
mov
std
mov
pusha
cmp
pop
movsl
push
leave
aaa
pop
fbld
push
mov
pop
cmp
adc
and
fs
lahf
les
sbb
jns
outsl
outsl
icebp
mov
xchg
into
outsl
mov
test
mov
jecxz
outsb
xor
xchg
outsl
scas
jne
push
pop
cwtl
pop
lods
pushf
and
sub
pop
pop
mov
mov
dec
jl
and
pop
cmp
aad
mov
mov
clc
sbb
popa
mov
or
bound
and
mov
jno
in
gs
scas
xor
cwtl
pop
arpl
cs
xchg
mov
push
push
adc
data16
movsb
ljmp
in
movsl
sti
sbb
push
xchg
fildl
and
ljmp
jge
rol
repnz
inc
inc
rclb
mov
sub
in
icebp
sbb
arpl
mov
push
outsl
add
mov
repnz
xor
out
popf
outsb
sbb
stc
movsl
sub
sbb
scas
outsb
fldt
sub
mov
out
or
std
clc
stos
outsl
test
int
sbb
xchg
sbb
mov
inc
adc
cmp
dec
enter
dec
stc
adc
adc
les
pop
shrb
sub
sbb
xchg
pop
or
and
scas
jmp
sub
jge
pop
scas
or
es
jmp
pop
xchg
test
ret
pop
xor
es
ficompl
pop
or
jmp
cmp
add
xchg
in
cmp
fistpl
or
movups
rcrb
repnz
std
stos
hlt
and
in
gs
fcmovne
and
xlat
mov
pop
out
lret
sbb
gs
cmp
mov
cmpsb
leave
push
jmp
ficomps
out
xchg
rcrl
and
cld
xchg
xchg
fcom
jne
pop
scas
xlat
lahf
push
add
jbe
sbb
ljmp
dec
pop
cld
jg
in
imul
pop
lds
shlb
pop
flds
push
adc
jge
repz
cmp
xor
xchg
sub
push
adc
jge
icebp
test
leave
gs
cmc
orb
lahf
in
mov
aad
jno
orb
fstpt
mov
mov
adc
mov
add
loope
or
sub
inc
cmp
shll
dec
pop
lcall
loopne
add
push
pop
out
pushf
jecxz,pn
xchg
push
add
adc
into
sbb
push
add
loopne
jbe
ja
sbbl
push
pop
loopne
jnp
aaa
insb
jae
dec
jmp
sub
lcall
cs
pop
sbb
adc
adc
mov
dec
xor
adc
lock
pop
rcl
outsl
ficomps
push
das
scas
pxor
fidivs
jnp
das
stc
scas
mov
cld
xlat
cs
mov
enter
neg
mov
out
sbb
jg
mov
jno
test
jecxz
add
xor
cwtl
sbb
sbb
lcall
aaa
in
pop
cld
lea
ljmp
sub
es
cs
mov
fwait
xchg
sbb
xor
dec
stos
loop
dec
out
sbb
push
mov
adc
dec
gs
adc
sbb
lock
sbb
or
pusha
cmp
cmpsb
sbbl
sbb
push
push
sbb
movsw
das
les
pusha
mov
push
nop
inc
mov
dec
shlb
jecxz
mov
clc
jnp
mov
sbb
mov
lea
shll
std
loopne,pn
xor
sbb
sub
sbb
mov
lods
xlat
in
lgdtl
sbb
test
sbb
stc
xchg
dec
mov
out
shll
leave
mov
or
test
pop
or
and
adc
adc
ficoml
mov
mov
inc
jns
das
inc
xlat
mov
pop
push
fcomps
and
std
sti
xor
sbb
pop
add
stc
xor
xchg
repnz
insl
mov
xor
cld
and
movups
lock
sbb
mov
cltd
decl
cmp
cs
mov
fucomp
cltd
pushf
into
and
mov
cmp
sbb
push
popf
std
cltd
jge,pn
frstor
and
add
push
popf
loop
sbb
xchg
fstpl
push
or
icebp
mov
mov
rcrb
call
sbb
scas
rclb
fistl
mov
or
mov
or
out
or
fisttpll
and
and
fistpl
and
xchg
fstpl
sbb
pushf
popf
sbb
adc
mov
cwtl
push
cmp
adc
popf
adc
add
jo
sbb
cmp
adc
inc
sbb
or
pop
cltd
sbb
inc
jle
mov
mov
push
mov
fwait
mov
sbb
xchg
sbb
pop
out
test
mov
sbb
incl
pop
cltd
mov
popf
cmp
js
movsb
push
sbbl
ret
scas
adcl
lea
rcrb
rcl
mov
cwtl
add
add
out
sbb
or
and
xchg
and
xor
or
test
xchg
out
sbb
das
pop
push
outsl
or
push
adc
fwait
xor
outsb
je
dec
sub
cmpsl
pop
or
and
adc
jbe
jb
jne
pusha
cmp
mov
shll
pop
es
jo
cmpb
sub
repnz
out
inc
sub
lcall
inc
and
and
mov
cmp
mov
add
xor
cmp
pusha
inc
bnd
xor
push
arpl
mov
sar
cmp
add
dec
push
das
dec
int3
adc
imul
or
daa
xor
mov
pushl
dec
rorl
nop
adc
mov
cli
add
arpl
sbb
fsts
mov
xorb
imul
dec
pop
dec
adc
xor
cmp
and
jge
add
cmpsb
xor
jg
mov
sub
orb
and
mov
icebp
xlat
and
mov
and
mov
sbb
lock
and
movsl
mov
aas
fs
shll
cmpsl
pushf
test
push
aad
dec
sub
repz
push
jo
mov
imul
dec
add
sub
mov
mov
jne
lahf
cmp
inc
xor
leave
jb
dec
add
mov
cmc
js
push
dec
lahf
jg
call
mov
scas
cmp
sub
inc
inc
lret
jns
insb
outsb
jmp
dec
adc
xchg
mov
loop
xor
jmp
cmp
stos
inc
xor
push
cmp
jno
jno
orl
sarl
orb
pop
pop
data16
pop
mov
dec
incl
jp
rcr
push
loop
lds
sti
or
sbb
cmp
or
jb
xor
into
jmp
push
mov
dec
shll
dec
mov
dec
incb
mov
mov
pop
xor
dec
inc
dec
or
insl
and
xor
imul
and
cvttps2pi
sub
lds
xchg
xor
cmp
inc
xor
mov
or
xorb
xor
aaa
xor
lcall
push
mov
inc
sub
andb
mov
mov
dec
push
insb
inc
leave
and
cltd
jne
dec
and
adc
cs
int
ret
das
cwtl
adc
sub
psllw
sbb
xlat
mov
sbb
inc
pop
cs
adc
lcall
or
and
ficoml
and
fstpt
data16
mov
jno
arpl
fstpl
adc
push
sub
andl
test
or
sbb
ret
jle
sbbl
addl
add
insb
jge
les
sbb
cmp
mov
inc
sub
mov
sbb
stc
dec
inc
xchg
inc
int
xor
addl
mov
mov
in
push
lcall
cmp
bound
mov
std
xlat
scas
pop
sub
cltd
mov
roll
fwait
adc
das
mov
jo
sbb
jnp
sbb
mov
xchg
inc
mov
int
or
dec
inc
mov
rcr
mov
movntq
out
cmc
add
and
add
inc
repnz
repnz
mov
arpl
scas
loope
cmpb
mov
push
push
jnp
cmp
nop
call
aas
cmc
int
mov
push
cmp
out
mov
loope
test
xor
shrl
orb
sub
sbb
mov
inc
aas
inc
shr
xchg
fcmovu
call
adc
mov
mov
mov
das
cmc
scas
hlt
cs
repnz
repnz
repnz
fwait
repnz
lcall
repnz
repnz
repnz
repnz
repnz
adc
loop
add
xor
repnz
repnz
repnz
repnz
repz
adc
scas
lock
inc
mov
cmp
add
add
mov
xor
divb
xchg
sbb
ret
out
push
test
jecxz
push
jne
add
mov
add
fwait
lock
call
push
adc
mov
and
shlb
scas
fnstcw
inc
jle
mov
mov
icebp
sbb
jle
mov
outsb
outsb
jge
pushf
cmp
sub
push
sub
inc
sub
mov
sub
enter
adc
cli
dec
cmp
jb
call
mov
popf
mov
add
mov
cmp
cmp
sub
or
inc
rcrl
ss
fs
sub
pop
sub
out
out
jb
mov
test
adc
insb
cwtl
loopne
push
dec
sub
test
clc
add
sub
call
xchg
stc
mov
mov
or
mov
nop
fwait
ljmp
xchg
or
adc
jo
std
mov
inc
pop
pop
cli
jp
fidivl
sbb
cmpsl
jnp
cmp
fwait
sti
cli
ficompl
sbb
aaa
mov
mov
mov
mov
adc
fstpt
xchg
jg
dec
xchg
xor
cmp
mov
add
je
sbb
sarl
imul
push
scas
sbb
xlat
jle
mov
or
inc
cmp
cld
cmp
pop
inc
push
jle
mov
or
shlb
movntps
clc
js
inc
ret
mov
mov
mov
mov
mov
mov
mov
adc
adc
or
adc
mov
xchg
in
movsb
or
xchg
ficoms
out
push
xchg
mov
jp
popf
xlat
sarb
pop
dec
xchg
pop
jo
shll
test
mov
cmp
sbb
bnd
bnd
int
int3
repnz
sub
push
mov
enter
out
inc
repnz
repnz
mov
aaa
clc
cmp
jl
scas
sbb
pop
outsb
out
sub
fwait
sub
sub
subl
sub
or
mov
pop
cmp
jecxz
bound
imul
out
mov
mov
loope
int
in
repnz
fdivrl
pop
out
cmc
test
inc
shl
sub
fwait
loope
xchg
lods
xchg
imul
pop
cli
fwait
mov
lcall
cli
jnp
mov
ficomps
ss
dec
jo
pop
into
xor
and
xchg
movsl
fists
mov
int
pop
stos
ss
ss
cli
mov
andb
imul
sub
adc
call
and
xchg
mov
xchg
mov
xchg
inc
xchg
jg
mov
lret
mov
mov
inc
jae
jb
hlt
shl
repnz
lret
std
arpl
push
lods
push
jmp
adc
scas
into
pop
cld
jle
mov
pop
imulb
sub
push
or
mov
add
sbb
xchg
and
sti
js
and
xor
xchg
push
adc
xchg
int3
adc
xchg
mov
jnp
jo
pop
cmp
cwtl
pusha
aaa
daa
fs
mov
cmp
lods
stos
or
test
jmp
sub
mov
loope
in
add
call
movsb
xchg
scas
xchg
sbb
cmp
int
pusha
xchg
daa
jbe
inc
cmp
call
cmc
lock
call
repnz
clc
enter
fwait
in
cmpb
pop
lret
ss
jno
push
aaa
jo
outsb
daa
mov
inc
loope
mov
enter
pop
jo
rcrb
cli
cmp
test
jg
jo
clc
pop
xchg
loope
lcall
adc
xor
pop
mov
jl
mov
add
and
int
repnz
pop
xchg
lahf
xchg
inc
xchg
xchg
xchg
adc
xchg
xchg
adc
loope
out
mov
cmc
mov
repnz
rorb
jbe
mov
mov
push
popf
hlt
sbb
pushf
mov
icebp
pop
and
mov
jo
sti
cli
pop
jmp
push
mov
out
fldt
pusha
mov
fwait
mov
add
xor
iret
int
pop
arpl
jle
xor
or
movsl
fisubrl
cli
jp
fidivrl
or
les
bound
bound
lret
bound
bound
bound
mov
push
bound
pop
sarb
pop
dec
sbb
pop
stc
xchg
push
sbb
or
lds
mov
repnz
repnz
frstor
cli
fisttpl
fidivl
pop
rol
fs
lods
test
scas
pop
pushf
xchg
cmp
xchg
adc
cmp
and
pop
ljmp
sbb
popf
mov
mov
mov
cmp
inc
xchg
xchg
cli
fimull
xchg
cli
call
jp
popf
divb
loopne
push
loopne
and
or
call
add
insl
out
fwait
pop
jo
adc
xchg
mov
leave
xchg
aad
push
push
mov
daa
fwait
xchg
das
sub
cmp
mov
in
inc
jnp
call
adc
rcrb
call
push
sbb
cmp
jecxz
loopne
jg
leave
xchg
call
lahf
dec
out
rcrl
sahf
pop
loopne
dec
aam
iret
cli
outsb
jle
mov
pop
out
xor
popa
mov
pop
loop
jbe
pop
ss
jae
lock
stc
jge
push
and
inc
aas
sub
sub
lods
mov
adc
arpl
cmp
mov
sbb
xchg
mov
icebp
cli
loopne
sarl
or
fistps
clc
fisttpll
test
lods
cmp
insb
cmpb
shrb
mov
cmc
or
scas
jge
cmp
mov
pop
outsb
in
test
adc
movsl
pop
scas
hlt
int3
imul
pop
mov
jo
cs
adc
arpl
stc
loop
js
xchg
pop
andb
mov
mov
loopne
shr
jle
mov
sbb
subl
loope
xchg
add
je
iret
jge
icebp
dec
xor
sbb
and
sbb
fidivl
loop
sti
push
fimull
scas
lcall
ret
pushl
push
ss
ss
pushf
mov
clc
and
cmc
lock
movsl
pop
add
xchg
or
mov
jl
fwait
cmp
sbb
sub
imul
repnz
scas
mov
xlat
pop
jbe
jecxz
add
ds
or
inc
mov
sub
jne
mov
rorb
scas
pop
push
jle
iret
mov
sbb
call
xor
cmc
cs
div
mov
js
cmp
pop
or
and
jecxz
mov
push
ret
jp
hlt
pop
and
mov
repz
fists
in
bound
lods
lret
imul
sub
push
and
imul
les
pop
cmp
sbb
cli
pushf
and
and
loop
mov
or
ss
adc
jne
sbb
in
outsl
scas
adc
mov
mov
pop
into
fwait
psubd
fimull
cmp
out
out
xchg
sbb
xchg
call
popf
fcoml
sub
sub
sub
xor
xor
xor
xor
push
xchg
mov
adc
jecxz
push
mov
xor
mov
ss
ficompl
push
sbb
sti
xchg
jle
mov
fwait
pop
ljmp
xchg
mov
lock
icebp
fisubl
sub
sub
xor
cmc
xor
sbb
fwait
cmc
outsl
xchg
cmc
and
mov
repnz
call
fldenv
mov
dec
xor
sbb
sbb
or
mov
mov
xor
outsl
outsb
and
xchg
xor
pop
adc
and
adc
fwait
or
rorb
stc
lahf
sbb
lcall
dec
pop
or
cmp
mov
mov
mov
rorl
bound
bound
mov
mov
leave
scas
stos
popf
leave
pushf
test
cltd
bound
movsl
push
dec
mov
hlt
xchg
mov
inc
push
inc
sahf
sub
sub
rcrl
or
mov
lret
or
mov
pop
xacquire
out
xchg
shll
rcll
mov
mov
dec
mov
dec
outsb
fisubrl
sbb
sub
fwait
imul
xchg
mov
jae
xchg
and
movsb
mov
shll
ss
or
push
mov
js
add
mov
xor
sbb
scas
in
sub
mov
stos
jae
icebp
jb
jl
add
jl
sarl
scas
inc
pop
jns
sbb
mov
aam
mov
fwait
popa
jns
fstpl
dec
mov
pop
int3
in
arpl
cs
or
mov
push
jmp
mov
cs
test
sbb
sbb
outsb
or
rcl
mov
mov
and
jae
int
xchg
nop
lods
enter
push
xchg
sub
aad
adc
stos
shr
adc
lret
cmp
stos
ficompl
xchg
icebp
sub
scas
mov
sbb
xchg
push
jle
adc
movsb
loop
cs
dec
xor
sub
mov
arpl
icebp
mov
xlat
inc
pop
pop
dec
or
ret
pop
mov
push
sub
add
xchg
repz
cmp
add
and
insl
scas
bound
shlb
movsb
pop
roll
mov
adc
jl
add
pop
in
lcall
jp
mov
arpl
pop
inc
mov
das
leave
cmc
test
scas
jnp
and
mov
cld
and
inc
icebp
mov
fiaddl
xchg
xlat
bnd
jl
jns
or
pop
sub
repz
aad
sbb
lock
add
fmuls
and
into
ret
scas
out
sub
jge
aaa
adc
clc
movsl
insl
sbb
sub
pop
sbb
xchg
ljmp
sub
mov
scas
sbb
lcall
pop
sub
inc
repnz
xlat
mulb
aas
jl
stc
repnz
frstor
fstpl
mov
ret
push
fbstp
jp
jns
clc
scas
mov
sarl
fldenv
jae
ltr
pop
std
hlt
shll
std
fnstenv
lret
or
arpl
ret
xlat
loop
inc
mov
movsb
sbb
movsl
dec
shlb
push
cld
mov
roll
mov
ret
negl
lcall
fnstenv
and
and
fwait
ret
sti
sti
sbb
pop
dec
cmp
jge
cmp
fstps
movsl
sbb
pop
dec
xor
das
pop
sbb
mov
cli
add
fwait
xor
mov
cmp
inc
push
hlt
jge
cmc
cli
sbb
sub
sub
pop
clc
xchg
stc
sub
inc
jnp
or
or
lahf
or
cli
leave
sbb
shlb
push
sahf
stc
pusha
lods
cmpsl
mov
sti
sbb
std
cmp
stc
movsl
xlat
dec
xor
in
sbb
outsb
test
fstpt
pop
jnp
inc
das
std
std
insb
add
fisubs
jl
bound
mov
xorb
in
xlat
outsb
sub
mov
fstl
nop
sbb
sbb
rclb
out
int3
addr16
popf
and
pop
pop
out
xchg
test
sbb
fwait
hlt
push
and
xor
pop
sbb
sbb
add
mov
fwait
pop
fwait
rcr
or
or
jno
and
fisubrl
mov
mov
push
addb
filds
inc
scas
and
add
ret
xchg
cli
shr
push
iret
js
lea
fistpl
pop
adc
jns
push
add
mov
lret
jmp
mov
cmp
into
cltd
lods
or
cmp
movsl
notl
mov
pop
sub
sbb
pop
int3
fnstcw
mov
adc
movsb
add
pop
loop
fbld
arpl
bound
cmp
cmp
xorb
fstpt
jge
cwtl
inc
adc
cmp
stc
inc
jle
jge
sbb
xchg
mov
or
pop
gs
and
adc
or
mov
js
and
adc
sub
fwait
xlat
scas
in
pop
pusha
stc
movsb
lahf
mov
mov
dec
inc
pop
dec
std
sub
xchg
leave
and
cmpb
push
je
jge
xchg
aam
jl
add
pop
push
ja
aaa
cmp
jnp
or
clc
jno
cmp
jp
xlat
lds
mov
and
jl
les
insl
sbb
cs
fistl
fs
stos
in
fnstsw
sbb
sbb
lret
pop
push
xor
and
sbb
xchg
es
gs
sbb
inc
and
cmc
cmp
fsts
les
lret
test
ret
lahf
scas
jnp
fs
subl
mov
sbb
cld
iret
pop
in
out
cmc
outsb
or
pop
stc
add
not
sbbl
pop
mov
gs
pop
pop
jns
or
and
inc
lcall
lret
or
enter
push
sub
notb
xor
int
in
pop
lods
sbb
mov
pop
sbb
cwtl
add
pop
sbb
mov
scas
sbb
incb
insl
cmp
sahf
jecxz
pop
scas
inc
cmp
pop
pop
jp
pop
or
fdivrl
mov
sub
xchg
jecxz
adc
nop
movsl
test
mov
bound
sarb
and
push
jl
fcmovu
sbb
sbb
das
push
icebp
mov
fcoms
fimull
cmp
and
push
fwait
jl,pn
fmull
lcall
sbb
cs
arpl
arpl
pop
negb
into
loop
fldl
aaa
mov
ja
mov
fnsetpm(287
pop
mov
xor
flds
cmp
push
xlat
sub
and
ficomps
cmp
movsb
pushf
stos
das
hlt
jo
loope
arpl
inc
popf
cs
dec
add
fldl
imul
mov
sbb
mov
jo
jl
scas
dec
inc
orl
sti
and
dec
imul
add
scas
sbb
mov
aas
ficoml
pop
inc
popf
inc
cld
mov
xchg
ret
inc
jb
pop
icebp
pusha
push
pop
loop
sti
out
sbb
sti
mov
insl
mov
sti
aam
xchg
fnsave
cltd
xor
sub
sub
es
lahf
arpl
les
sbb
cmpsl
add
mov
test
push
icebp
jns
push
dec
adc
push
and
out
push
adc
xchg
adc
jge
sbb
and
lds
lcall
lcall
jnp
lcall
fisubl
push
jo
arpl
inc
dec
sti
sbb
bound
mov
cli
pop
pop
fsubrs
in
jbe
dec
pop
mov
outsl
movsb
sbb
fisttps
scas
or
imul
das
fisubrl
jns
lock
jns
movsb
pusha
dec
in
sbb
stos
pop
xor
lock
aas
cmp
dec
subb
xchg
jge
cmpsl
bound
pop
or
mov
sbb
sbb
push
fisubrl
fwait
outsb
in
jnp
sbb
outsb
out
imul
lcall
mov
inc
mov
js
and
and
cmp
idivl
xor
gs
sarl
sbb
gs
test
movsl
iret
mov
testb
pop
fldt
cmp
test
cld
pop
imul
dec
fwait
pop
inc
mov
fucomip
inc
pop
fisttps
pop
icebp
jns
jmp
sbb
xor
outsb
push
mov
mov
in
add
movsb
mov
int
mov
add
outsb
fidivl
insb
cs
sub
pop
imul
xchg
xor
lret
cmp
xor
dec
insl
rclb
mov
add
xor
inc
pop
insb
mov
adc
fdivrs
jg
std
outsb
aad
pop
cli
jg
test
dec
inc
lcall
mov
sbb
mov
fwait
mov
or
pop
fcmovu
fstpt
daa
data16
fldcw
and
jne
cmp
sbb
mov
pushf
cmp
jnp
test
pop
add
in
scas
lcall
ja
scas
adcb
add
in
fsubl
loop
lea
insl
sub
loop
sahf
and
sbb
jns
pop
jl
mov
xchg
add
cmp
jno
stc
xor
sbb
fdivrs
inc
sbb
repnz
sbb
fdivl
das
call
ljmp
das
loopne
sti
mov
std
sbb
rclb
arpl
fisubl
clc
clc
cmp
jbe
fldl
sbb
push
mov
mov
mov
jl
cmp
pop
jg
pushf
jno
fistpl
and
test
mov
xchg
fstpl
pop
xchg
jbe
rcl
test
fwait
pop
sub
inc
addr16
cmp
add
push
mov
fisubs
divb
dec
pop
insl
fldcw
jle
dec
mov
test
frstor
xor
arpl
scas
test
fs
pop
test
je
rclb
or
ret
addl
mov
lock
fwait
std
insl
outsb
add
lcall
hlt
fcompl
mov
xchg
pop
lret
cmp
gs
sbb
xchg
cwtl
mov
sbb
mov
aaa
and
pop
addl
movsb
sbb
movsl
add
adc
into
stos
clc
pushf
in
xchg
xchg
xlat
push
enter
cmp
cltd
js
into
insl
cmp
movsl
xchg
jge
jecxz
stos
cltd
sbb
scas
hlt
pop
std
fimuls
dec
pop
jp
lds
inc
fmuls
cmp
mov
sbb
push
loope
jnp
sbb
test
pop
fxch
xchg
les
sbb
and
mov
xrelease
cmp
fildll
add
push
js
inc
loope
ljmp
mov
sbb
into
andl
xchg
in
pop
lds
rcll
sbbl
ljmp
jnp
pop
xor
cli
sbb
adc
call
sub
mov
dec
test
orb
cmp
fwait
jnp,pn
push
sti
loopne
lods
outsb
fistpll
out
dec
xchg
test
pop
cmp
fs
inc
daa
mov
fnstsw
int3
bndldx
xchg
std
xchg
jbe
rorb
cld
or
out
jnp
jle
das
shr
pusha
jno
mov
inc
popf
xchg
mov
imulb
pop
pop
or
xchg
ds
stc
les
imul
jecxz
test
jo
pop
inc
enter
mov
loopne
jecxz
lock
push
add
add
xchg
sbb
hlt
jecxz
jp
and
inc
stc
ret
faddl
xchg
shrb
sbb
mov
pop
aam
xor
das
in
dec
cmp
das
and
fsub
sbb
enter
imul
add
cld
sub
fcoms
pop
jecxz
fwait
mov
xor
mov
pop
in
stos
inc
adc
je
dec
stc
jle
shrl
scas
fs
leave
out
jbe
icebp
dec
cmp
push
sub
inc
and
fwait
sub
inc
daa
out
jnp
mov
fdivl
jb
insl
xchg
in
inc
cmp
cld
cli
sbb
repnz
fwait
jle
in
jl
jbe
jno
shl
pop
inc
movsl
xor
dec
xchg
mov
mov
daa
push
xchg
mov
dec
or
subl
pop
test
aam
mov
jnp
push
mov
repz
insb
push
rol
mov
fstpt
xchg
fwait
inc
movsl
pop
fs
fwait
aad
dec
cmp
xchg
jecxz
cmp
clc
mov
negl
push
mov
in
jg
insl
movsl
in
rol
sahf
inc
jae
mov
nop
sbb
mov
insl
aas
mov
sub
popa
dec
out
mov
cmp
ret
cli
dec
mov
push
mov
outsb
xor
mov
dec
cmp
jbe
fcmovu
inc
pusha
dec
fadds
jno
call
notb
in
add
xchg
testb
inc
int3
sbb
cmp
data16
cld
in
jb
imul
pop
adc
mov
and
sub
cmp
push
push
rorb
jnp
dec
jp
xor
or
jno
jp
and
mov
es
sbb
pop
push
in
push
sbb
dec
aas
jne
hlt
dec
or
sub
lea
in
add
cwtl
arpl
fucomip
pop
into
mov
ret
push
sbb
test
push
jnp
pusha
push
dec
sbb
pop
add
pop
sub
sbb
mov
cmpsl
dec
pop
pushl
xor
push
pusha
mov
insl
push
popa
jecxz
fcompl
jae
arpl
dec
xlat
bound
hlt
inc
dec
adc
xchg
dec
cmp
dec
in
aas
pop
jecxz
enter
aas
pop
mov
push
push
aaa
fidivs
or
fldlg2
xchg
in
loop
sub
jecxz
cmpsb
mov
pop
jae
mov
lcall
call
scas
add
jle
mov
fdivs
mov
push
mov
xor
xchg
push
sub
push
ljmp
std
pop
dec
cmp
mov
sbb
cmp
push
imul
cld
leave
notl
add
shlb
std
in
insb
out
mov
rep
xchg
push
jl
push
shlb
pop
push
pop
xchg
xchg
mov
mov
jecxz
mov
sbb
adc
jne
cmp
and
mov
cmp
jge
cmp
fldcw
xchg
stc
inc
fsubs
in
pop
sbb
push
bound
and
jle
pusha
or
dec
loope
jbe
sub
clc
mov
dec
fnstenv
mov
jne
insl
mov
repnz
clc
push
insb
aas
cmp
push
fnstsw
in
fbstp
das
inc
icebp
fwait
push
popa
cmp
lahf
xchg
xchg
inc
jle
push
jae
dec
lea
mov
lea
mov
faddl
push
test
incb
insb
inc
or
cmpsl
loope
pushf
cmc
sbb
insl
jle
addr16
test
rolb
call
jnp
jnp
lea
bound
sub
lahf
mov
xchg
clc
cli
je
negl
cmp
mov
cmp
xchg
cli
inc
movsl
cli
adc
lods
mov
or
jb
dec
fsubrp
mul
bound
sub
in
pop
mov
jle
mov
cmp
mov
mov
js
mov
int3
inc
adc
jle
or
adc
cmp
push
mov
fidivrl
dec
or
insb
gs
arpl
mov
cmpsl
repz
and
in
hlt
outsl
sbb
jb
dec
dec
mov
mov
sub
call
and
inc
stos
push
add
insl
jg
push
sub
pop
push
fidivl
xor
das
ftst
push
sbb
cld
dec
add
clc
push
cmc
mov
das
xor
mov
lods
inc
pop
pusha
inc
pusha
cs
popf
int
repnz
data16
pop
iret
fwait
and
cmp
jnp
jle
gs
insl
jno
into
clc
aad
push
aas
mov
aad
fucomip
ret
jae
sarl
push
stc
mov
mov
stc
add
xchg
add
stos
stos
dec
mov
pop
insl
and
sbb
jnp
add
sbb
dec
fbstp
insb
push
mov
aas
jnp
push
dec
loop
adc
fidivrl
aad
pusha
sbb
test
pop
jle
js
fwait
push
xchg
loop
cmp
mov
inc
mov
les
inc
or
jne
adc
lods
sbb
clc
repz
jne
hlt
bound
jg
mov
cmpsl
jle
jmp
js
jge
jle
lahf
xor
pop
add
push
inc
mov
push
inc
hlt
push
out
sbb
mov
jnp
mov
scas
jge
arpl
xlat
mov
dec
jb
inc
cli
hlt
inc
add
push
fwait
inc
pop
xor
jne
jge
rcr
mov
loop
sbb
pop
arpl
add
fs
test
add
mov
cltd
mov
lock
insl
xor
push
inc
cmp
add
push
out
in
and
sbb
ss
lcall
xlat
inc
sbb
or
pop
mov
and
xor
cs
gs
rcrb
clc
psubusw
outsl
push
icebp
push
pop
xlat
sbb
sbb
ret
fwait
lds
imull
and
pop
ja
mov
mov
xor
sbb
push
cli
adcl
cwtl
mov
add
mov
loop
mul
rcrl
mov
pop
xlat
sbb
jo
loop
stos
sahf
lods
cmp
icebp
and
in
dec
sahf
push
pop
test
mov
iret
in
popf
sbb
into
pop
and
or
cltd
int
cli
adc
repnz
in
jo
sti
mov
mov
add
inc
pop
cmp
in
cltd
inc
jno
sbb
mov
clc
xchg
sbb
outsb
fnstcw
xor
inc
jnp
lds
inc
aaa
jno
fs
std
fdivrs
cli
or
adc
testb
mov
sbb
push
or
add
in
les
cs
loop
or
xchg
outsb
mov
mov
cmp
les
jns
scas
and
or
mov
push
cli
xor
pop
jns
cmp
scas
sti
cltd
dec
gs
mov
mov
movsl
push
das
mov
ficoml
cmp
aaa
inc
sti
in
pop
js
sahf
cwtl
test
or
fcmovu
mov
movsl
xor
add
xor
xchg
andl
fwait
push
pop
jno
ja
fcomps
push
jo
sbb
and
add
les
sbb
stc
pop
mov
aaa
mov
ret
sub
xchg
mov
or
sbb
loop
outsb
sbb
push
mov
cmp
add
ja
movsb
pop
pop
inc
stos
push
xor
fs
jge
pop
sbb
jns
and
add
or
test
movsl
mov
xchg
clc
ss
ja
pop
sbb
sbb
jp
push
lds
mul
adc
pop
push
or
or
inc
pop
add
out
xchg
sbb
out
lock
clc
sbb
xor
cmp
lea
and
add
ror
sbb
push
jnp
in
sub
aaa
jns
xchg
fs
popf
xor
fadds
pop
pop
pop
outsb
cmp
aaa
xchg
dec
arpl
and
inc
mov
and
pop
movsl
xorl
mov
sbb
loope
fstpt
mov
sub
xor
and
js
mov
icebp
jecxz
fcmovne
pop
sahf
push
inc
negb
xor
or
sbbb
mov
push
mov
and
insl
and
inc
dec
adc
movsl
sbb
or
movsl
fstpt
add
clc
sti
pop
mov
in
aas
fstps
stc
add
inc
fbld
pop
stc
mov
mov
in
rorl
lret
mov
les
mov
enter
scas
aaa
loop
xchg
cli
adc
clc
sbb
pop
rol
in
fadds
fs
test
sbb
lcall
aaa
leave
or
sub
push
push
outsl
gs
xor
xlat
add
push
adc
aam
pop
lods
cwtl
testl
clc
sbb
stc
add
pop
outsb
fstps
add
pop
adc
arpl
movsb
test
and
jg
inc
loop
pusha
stos
sbb
push
push
push
push
iret
fldenv
stc
adc
test
into
xor
lds
out
stc
sbb
and
add
mov
loop
mov
arpl
mov
add
testb
and
aam
push
push
mov
fdivrs
mov
cltd
test
xor
cli
jo
cmp
mov
js
in
xlat
add
push
push
les
sub
xchg
sbb
fcmovnu
clc
mov
and
pop
sbb
mov
shrl
adcl
lods
lret
lds
in
and
and
in
mov
movsl
and
and
sbb
pop
ret
cwtl
ret
cltd
in
push
add
mov
test
in
sbb
add
jbe
push
test
cli
mov
arpl
js
push
loop
add
xor
rcll
push
inc
es
mov
inc
push
lock
es
loop
out
in
fldenv
andl
or
in
jp
sbb
ljmp
add
fnstcw
es
xchg
in
push
and
js
cmpsb
pushf
add
sbb
mov
mov
pop
pop
sbb
mov
add
push
mov
jecxz
cmp
js
add
fsubs
ja
leave
mov
test
inc
dec
xlat
cmp
ja
sbb
aam
mov
inc
pop
adc
jns
fsts
add
fcmovnbe
cmp
mov
xor
or
out
and
ja
pusha
scas
xor
inc
clc
push
test
movsl
add
mov
sbb
jns
dec
dec
cmp
ficompl
inc
bound
mov
movsl
sub
mov
cwtl
cli
push
dec
rcrl
aaa
enter
fxch
negl
or
mov
int3
and
cmpsb
mov
cli
push
fldt
gs
iret
ret
shll
lds
xor
ja
testl
sbbl
xlat
in
cmp
push
add
pop
jp
cltd
dec
lds
pop
inc
mov
test
fninit
inc
sub
clc
pop
testl
icebp
cli
xlat
cmp
and
xchg
mov
xchg
pop
add
or
jp
loop
jnp
sti
fildl
lds
inc
pop
lahf
rcll
and
xor
and
stc
mov
call
in
adc
add
jecxz
mov
test
ret
sbb
out
sbb
cli
jecxz
xchg
add
ljmp
mov
fisubs
lcall
pop
inc
mov
push
loopne
jnp
lds
add
ret
add
add
dec
sbb
in
aaa
in
xchg
add
rcrb
jnp
ja
adc
leave
aam
sbb
dec
cltd
or
in
sbb
rcrl
test
mov
mov
fs
inc
push
insl
jo
lds
test
pop
mov
js
cwtl
push
sbb
and
sbbl
outsl
fstps
inc
jp
fs
lds
xlat
movsb
mov
popa
hlt
pop
or
xchg
fs
pop
adc
pop
fwait
mov
mov
push
xchg
divl
test
cwtl
fidivrl
in
inc
andl
cmpsl
mov
add
push
ret
fs
push
lret
push
aaa
scas
test
arpl
pop
faddl
bound
xchg
clc
or
pop
into
pop
fadds
stc
sbb
pushf
fs
inc
rclb
addl
add
negl
add
loop
jb
mov
out
cmp
idivb
inc
cmp
mov
in
mov
mov
sbb
lds
lcall
testl
sbb
pop
xchg
icebp
and
sbb
test
stc
xor
add
xchg
sbb
fildl
inc
xchg
mov
movsl
mov
jl
sub
fs
cmp
jmp
fwait
cwtl
xchg
nop
and
mov
mov
inc
inc
ret
aam
jb
jmp
push
pop
icebp
sbb
or
cwtl
clc
icebp
ret
pop
sbb
and
cli
js
testl
cmp
jb
fidivrl
clc
xchg
mov
lret
pop
push
test
sbb
add
adc
fcomi
fsub
mov
arpl
push
xchg
add
cli
adc
orl
mov
and
mov
fwait
out
in
test
lock
pushf
vmovaps
bound
inc
inc
push
inc
and
imull
push
mov
hlt
insb
fidivl
and
xchg
negb
mull
fistps
cmpsb
movsb
repnz
and
fs
xchg
pop
sbb
inc
or
push
jno
cmpsl
sti
mov
sbb
xchg
adcl
js
gs
jl
sub
movsl
push
pushf
mov
fcmovnbe
sahf
clc
and
cmpsl
push
mov
test
adc
mov
adc
icebp
movsb
add
fwait
add
test
cltd
add
mov
fstpt
in
pop
sub
push
xor
cmp
inc
mov
xchg
adc
and
lret
add
cmp
xchg
cli
xchg
mul
ret
pop
jl
les
push
adc
fwait
rcll
add
movsl
mov
jecxz
dec
cmp
push
pusha
xchg
sbb
shl
mov
insl
add
les
inc
inc
cmc
sub
sti
loop
mov
stc
in
aaa
stos
xchg
imul
loope
and
ret
loop
lret
inc
rolb
js
test
insb
test
cmpsl
filds
mov
inc
mov
pop
nop
ds
or
aad
push
fadds
pushf
rcrl
dec
imulb
pop
sub
fstl
fdivr
stc
and
mov
lret
mov
cmp
sbb
mov
clc
sahf
mov
mov
pop
loop
js
movsb
sbb
mov
pop
inc
stc
sbb
ja
push
inc
idiv
xchg
fmuls
out
test
je
xor
stos
mov
addr16
aaa
and
add
out
rcrb
sti
lds
dec
popf
in
lahf
or
je
cli
mov
jns
xchg
pushf
adc
cmp
movsl
pop
inc
jnp
ds
cltd
inc
push
aas
les
jbe
rcll
je
loopne
pop
sti
mov
lret
xchg
and
sahf
divb
sbb
pop
mov
mov
fildl
fs
and
loop
inc
sub
mov
mov
lcall
adcl
cwtl
inc
movsl
mulb
leave
fdivrs
sbb
or
negl
cwtl
repz
mov
cmp
dec
inc
push
pop
cmpb
jns
lahf
cltd
imul
cmp
nop
cmp
xor
add
sbb
add
add
add
push
sub
push
movsl
mulb
mov
pop
xchg
das
arpl
mov
test
add
mov
mov
lds
push
sahf
jecxz
cmp
sbb
fwait
gs
pop
and
test
sub
ja
testb
add
test
in
inc
cmpl
lds
sbb
cwtl
loop
cli
and
cmp
in
xchg
idivb
sahf
xlat
sbb
adc
fwait
mov
fsts
sbb
ja
lds
xchg
icebp
mov
in
add
test
inc
xchg
xor
scas
xlat
inc
dec
sbb
add
dec
push
jns
ja
pop
into
inc
negl
cmp
lds
push
cltd
sar
idivl
call
scas
pop
test
gs
xor
add
arpl
xor
inc
idivb
icebp
pop
aaa
fs
xlat
sbb
pop
sbb
pop
scas
cmp
add
stos
fistpl
lahf
mov
aaa
movsb
mov
mov
jp
sbb
pop
ja
sbb
loop
pushf
mov
mov
and
or
jle
jo
pop
xchg
xor
add
xchg
scas
push
add
adc
adc
clc
testb
cltd
add
movsl
pop
lea
mov
notl
test
movsl
mov
pop
and
mov
dec
outsl
cmp
adc
aaa
cmpl
cmp
or
cmp
mov
sbb
pop
sbb
jo
mov
pop
sbb
add
movsl
add
pop
or
xchg
xlat
out
movsb
mov
imul
sub
cmp
xor
stc
cmp
les
jnp
sbb
movsb
fildl
xlat
pop
or
lcall
add
mov
pop
mulb
pushf
cltd
loope
cwtl
cmp
aad
or
mov
loop
jecxz
jnp
ret
xchg
lahf
rep
cmp
fwait
jns
in
fmuls
push
ret
adc
idivl
pop
sti
adc
mulb
lret
push
sbb
mov
mov
pop
in
push
xchg
arpl
in
pop
stc
test
sbb
inc
or
sbb
in
jecxz
add
arpl
add
cld
add
in
mov
jecxz
xor
arpl
mov
aam
inc
fdivr
push
subl
std
mov
ja
jp
sub
add
sbb
push
or
mov
xchg
jg
in
sub
and
cwtl
add
sub
sbb
out
js
xchg
mov
jnp
faddl
pop
cmp
scas
movsb
dec
test
xchg
stc
xchg
add
sbb
cmp
movsl
ret
test
jge
js
xchg
add
or
arpl
jge
cli
jo
hlt
pop
mov
mov
cmp
mov
std
in
sbb
jp
loop
push
adc
push
iret
add
out
mov
ja
mov
stc
insb
inc
dec
cmpsl
inc
adcl
push
pop
mov
push
jecxz
add
lea
mov
push
sarb
movsl
xor
pop
inc
clc
fnstsw
sbb
js
adc
mov
push
mov
pushl
fdivrs
push
sbb
ret
xchg
rolb
fwait
pop
mov
mov
pop
mov
popf
out
mov
add
aad
add
mov
cli
or
sti
popf
and
add
test
out
fstps
sbb
fsubs
lret
add
sbb
cmp
jo
cmp
push
mov
mov
in
and
mov
idivb
pop
and
stc
cmp
push
sbb
cwtl
movsl
loop
xor
loop
mov
repz
and
add
movsl
adc
sar
shrl
test
dec
inc
orl
or
lds
cmp
cmc
in
andl
imul
stc
adcb
out
cmp
test
iret
and
jle
in
adc
inc
push
add
push
fsubs
pop
adc
stos
iret
test
sahf
addl
in
pop
clc
aam
pop
inc
clc
sbbl
je
fdivrs
xchg
in
scas
flds
in
cmp
adc
pusha
int3
xchg
jb
push
icebp
fistpl
in
in
sbb
ret
negl
ja
pop
push
xchg
movsl
in
and
add
imul
cmp
test
sbb
lret
test
leave
push
les
inc
sbb
dec
add
aaa
xor
mov
push
loop
push
add
fwait
push
mov
sbb
mov
fiaddl
push
xchg
push
pop
aaa
aas
jp
cwtl
test
int3
sahf
out
mov
scas
fadds
js
stc
cmp
jecxz
arpl
mov
and
inc
fadd
xlat
jnp
ficomps
clc
dec
movsl
xor
cltd
imul
test
stc
push
loop
adc
movsl
add
cmp
xchg
movsb
mov
adc
push
pushf
mov
outsb
add
icebp
js
inc
pop
push
dec
mov
pop
mov
push
jecxz
bound
cmp
test
in
movsl
std
lods
sti
pop
rcll
cwtl
xchg
sub
mov
adc
test
not
repz
out
daa
add
outsb
inc
push
ja
bound
add
adc
or
sub
aas
and
and
and
cwtl
push
cmp
cmp
and
xlat
pop
pop
arpl
popf
aaa
sti
jl
hlt
pop
xchg
stc
mov
jnp
add
sahf
idiv
pop
push
adc
je
ljmp
in
sbb
inc
gs
mov
mov
xlat
jne
sti
stc
mov
rclb
shrl
jnp
and
fs
cmp
enter
js
fnstcw
mov
or
inc
mov
jmp
mov
in
mov
inc
mov
lds
cmp
add
arpl
ja
pop
dec
aam
adc
notl
fs
loop
lock
inc
sub
xor
or
pop
shll
xchg
pop
loop
cmp
add
jno
ret
sbb
ret
in
test
iret
inc
xlat
sbb
cmp
shlb
gs
xlat
push
vmovhps
xor
inc
and
mov
testb
js
int3
push
cli
jecxz
mov
jnp
push
xchg
sbb
mov
pop
mov
seta
pop
ret
arpl
mov
pop
aad
in
rclb
push
stc
mov
and
xor
mov
sbb
sbb
sbb
out
cmp
fcomps
cli
ljmp
fstps
outsl
push
sbb
add
pushf
adc
add
cmp
ja
mov
sbbl
ret
mov
icebp
loope
negl
cwtl
leave
arpl
cmc
jmp
popf
and
roll
fsubs
sti
fstps
gs
inc
add
cli
sbb
add
fstpt
mov
add
sbb
sahf
roll
xlat
les
sti
outsl
icebp
inc
test
aaa
mov
adc
cmp
movsb
mov
add
rcrl
and
pop
iret
fistpl
and
add
cli
loope
jecxz
jmp
and
push
add
sti
ret
test
mov
fstpt
movsb
and
sbb
pop
jecxz
cli
push
or
stc
cmp
mov
mov
sbbl
adc
notb
mov
lcall
pop
sbb
pop
out
jne
cwtl
fnstcw
popf
and
sbb
mov
fs
push
icebp
pusha
pop
out
sti
pop
rol
js
stc
gs
in
mov
aad
inc
les
in
pop
or
xchg
cli
mov
roll
push
pop
pop
adc
add
cmp
sti
mov
stc
cltd
les
fsubl
dec
je
cmc
test
push
cmp
mov
aad
push
add
and
movsb
aaa
enter
inc
int
or
gs
pop
sbb
sti
or
xchg
sub
inc
add
jbe
cmp
pop
xchg
sub
test
js
sbb
inc
les
and
xlat
loope
cltd
test
pop
jnp
cmp
sub
xchg
pop
add
loop
adc
jno
fs
sbb
add
inc
pushf
pop
pop
sub
cmp
cmp
dec
ja
std
mov
xor
inc
or
mov
pop
pop
mov
in
pop
ret
xor
or
sbb
jecxz
fdiv
rol
pop
cmp
xchg
inc
mov
sbb
add
pop
addl
push
cmp
jne
push
lds
mov
inc
je
mov
insl
sti
jmp
or
ficompl
sbb
ja
std
je
or
popf
xchg
cwtl
sbb
fldt
mov
mov
jnp
sub
mov
mov
test
cmp
jle
pop
and
ret
or
sahf
fmull
sub
xchg
negb
pushf
mov
sub
and
cmp
fs
mov
mov
jns
add
test
mov
push
mov
aaa
or
inc
fs
jle
sbb
push
and
pop
adc
and
jns
hlt
sbb
rcrb
cwtl
sub
cmpsl
adc
fsubr
mov
mov
dec
cltd
xor
and
inc
sbb
push
flds
xchg
push
push
and
loop
jo
test
jmp
cli
dec
stc
daa
xor
jecxz
pop
test
pop
les
rol
repnz
mov
notb
inc
pop
sbb
sbb
mov
add
sbbl
and
ja
aaa
pop
gs
push
cltd
idivb
mov
aaa
pop
or
xchg
popf
fprem
into
pop
mov
ret
mov
test
jp
das
add
xchg
pushf
lds
test
push
xor
jecxz
jae
push
in
movsl
sub
sbb
pop
mov
clc
mov
mov
lods
adc
lds
mov
call
cmp
imul
push
aaa
loop
dec
fldcw
push
cmc
mov
in
jnp
add
adc
bound
mov
test
sbb
andl
jns
cltd
rol
sbb
pop
in
pop
pop
jo
and
inc
jns
sbb
mov
frstor
sub
and
mov
jne
insl
loope
or
pusha
test
sbb
leave
and
cwtl
in
movsl
out
push
lds
pushf
and
cmp
dec
mov
mov
fs
inc
mov
cli
ret
aad
cli
testl
xchg
add
imul
test
push
or
in
add
int
mov
scas
testl
xor
pop
test
jecxz
in
or
shrl
ret
icebp
pop
cmp
push
lahf
sbb
hlt
inc
and
pop
dec
push
movsl
sahf
in
gs
and
xchg
aaa
push
int
or
and
mov
fwait
add
fdivs
xor
or
push
sbb
pop
test
and
pop
xor
gs
push
mov
test
sbb
pop
mov
pop
push
mov
test
fstps
shll
les
notb
sar
push
scas
push
stos
xchg
movsl
sbb
aad
and
test
push
cmp
fstpl
outsl
push
mov
jns
mov
add
xor
xchg
sbb
gs
dec
jbe
pop
xchg
popf
or
cltd
clc
and
jnp
and
lcall
insl
push
mov
add
pop
scas
les
cmp
stc
push
mov
jnp
jl
xorl
inc
js
add
sbb
cwtl
sti
shlb
inc
ficompl
jb
add
and
js
jge
cmp
mov
cmp
jbe
in
icebp
fdivrs
in
add
sti
xchg
repz
sti
cmp
into
xor
sbb
inc
pop
mov
andl
xchg
fwait
jne
xchg
icebp
bound
repz
and
clc
sbb
jb
in
movl
and
inc
add
and
fmul
shlb
or
jmp
outsl
loop
pusha
cmp
int
inc
test
pop
push
mov
divl
xor
cmp
sbb
add
or
jns
cwtl
cmp
loop
arpl
test
pop
xor
cmp
mov
lret
loop
inc
sbb
dec
gs
in
and
cli
push
repz
iret
mov
and
mov
rclb
cli
mov
outsb
add
push
jo
or
fs
in
stc
movsb
idiv
and
in
js
jnp
je
sbb
xlat
test
cmp
inc
or
movsl
clc
jg
mov
loopne
pusha
pop
mov
inc
fistpl
pusha
cmp
and
les
add
div
shl
pop
push
movsb
and
out
in
sbb
inc
pop
out
and
aam
into
sbb
pop
ret
movsl
nop
pop
lahf
pop
dec
outsb
add
sti
inc
or
jl
adc
cmp
fnop
call
mov
jo
cwtl
cmp
pop
mov
imul
int
jecxz
or
mov
lahf
jo
or
pop
and
add
and
cwtl
mov
xchg
pop
ret
xchg
jle
xchg
sub
aam
dec
adc
adc
test
out
scas
pop
fistl
iret
in
arpl
inc
test
mov
mov
ret
or
add
add
lds
fincstp
and
cwtl
xchg
out
jns
leave
loop
push
mov
js
and
gs
sahf
ficompl
movsb
flds
xlat
fwait
sbb
dec
les
dec
mov
and
push
or
sub
or
jno
xchg
xlat
loope
jle
mul
or
outsl
fwait
sti
daa
hlt
fs
adc
stc
mov
mov
ret
inc
sahf
mov
ja
sti
and
js
in
stc
adc
test
dec
sbb
lds
cmp
aaa
pop
push
or
jnp
fildl
sbb
add
iret
les
mov
add
jge
mov
pop
sahf
cmp
clc
arpl
loop
pop
pop
and
push
pop
add
sbb
or
sbb
mov
ss
mov
mov
dec
aas
pop
pop
and
js
xchg
stc
dec
adc
ja
jns
jecxz
pop
cwtl
mov
cmp
and
cli
jl
outsb
fwait
xlat
jb
mov
into
test
fbld
xlat
pop
and
and
cli
and
sbb
and
inc
pop
push
pop
ja
xlat
rcrb
sub
je
notw
mov
int3
adc
xor
mov
sahf
ja
pop
mov
int
lcall
fidivrs
sbb
arpl
and
and
and
and
and
fwait
loopne
push
and
xor
fsts
inc
lds
les
adc
add
sbb
ret
sti
cwtl
jge
scas
add
aaa
cltd
xlat
pop
arpl
add
shlb
inc
adc
pop
mov
js
fistpl
xlat
stc
sub
aaa
adc
pop
fwait
fs
in
dec
or
pop
mov
inc
xor
rcrb
inc
jl
push
fwait
pop
jecxz
xchg
add
mov
pop
pop
in
outsl
mov
icebp
jns
aaa
jecxz
sahf
in
movsb
hlt
sbb
jo
jns
lds
cmp
add
cli
in
outsl
fs
iret
arpl
cmp
fadd
notb
imul
cwtl
sbbb
test
jecxz
xchg
mov
pushf
iret
pop
push
leave
push
daa
pop
sub
push
mov
adc
call
push
test
insl
roll
cmp
jecxz
cmp
and
push
cltd
add
push
push
lods
dec
mov
or
sbb
jnp
test
das
das
imul
test
into
mov
adc
mov
inc
or
test
shlb
dec
lret
fcmovu
js
cmc
loopne
cmp
sub
les
pop
lods
dec
jle
addl
sbb
inc
cwtl
movsb
add
scas
arpl
mov
mov
pop
xor
push
jae
xchg
mov
fsubl
inc
add
pop
std
sarl
out
sbb
add
dec
xor
xchg
sub
cmp
fstpt
test
popf
fdivs
or
ljmp
jl
sub
in
jns
cmp
pushf
cmp
adc
fwait
mov
loopne
and
jo
jnp
addl
in
insb
sbb
pop
movsl
icebp
aaa
and
pop
jns
lds
lods
mov
push
inc
xlat
mov
sbb
and
push
repnz
and
les
jns
jnp
aaa
mov
leave
pop
push
mov
movsl
jns
and
fistps
xchg
loopne
mov
sahf
inc
inc
sbb
mulb
add
or
push
inc
sbb
adc
test
notb
pop
in
sbb
pop
popf
cli
mov
sti
sbb
pop
xchg
dec
test
outsb
cmp
pop
mov
jmp
sbb
cltd
inc
adc
cmp
sbb
cwtl
scas
sarb
jecxz
adc
pop
mov
cwtl
push
mov
icebp
addl
sbbb
loop
cwtl
sbb
test
xlat
mov
fs
arpl
cmp
push
adc
adc
pushf
mov
ret
and
jnp
xchg
cli
mov
push
scas
inc
add
repz
sbb
out
sbb
jo
loop
fcom
sub
jmp
in
popf
out
push
aaa
and
jl
push
sbb
clc
pop
rcr
lds
testb
test
adc
sbb
stc
in
adc
xlat
xchg
inc
sbb
shlb
sub
clc
in
push
mov
mov
cwtl
mull
jns
mov
sahf
js
fsts
mov
inc
cli
push
rclb
in
mov
or
ret
test
mov
imul
and
add
cmp
inc
cmp
pop
jnp
inc
adc
mov
movsb
ja
xchg
sub
and
das
inc
sbbb
cmpb
adc
inc
cmp
and
inc
aad
and
cmp
add
push
xchg
mov
dec
fistpl
add
xlat
sbb
fs
popf
mov
sahf
jne
push
out
mov
movsl
into
fstpt
xor
push
outsl
std
mov
test
dec
push
pop
hlt
loopne
inc
cmp
mov
mov
push
inc
in
iret
sbb
add
arpl
pop
mov
lds
xchg
adc
sbb
adc
push
mov
and
pop
loop
in
out
stc
xchg
mov
adc
lds
adc
dec
mov
fs
fmul
in
loope
fldenv
in
inc
stc
cmp
cltd
push
pop
cmp
clc
add
push
and
mov
fistpl
adcl
ds
lds
cwtl
aam
mov
in
mov
xchg
clc
ret
cmpsl
sarb
mov
xchg
inc
dec
add
cmp
test
rorl
add
ret
cmp
lds
rorb
or
icebp
jno
jnp
fsqrt
push
lea
mov
sbb
icebp
cmp
test
sbb
aaa
cli
sti
inc
dec
add
sbb
xor
scas
sti
call
les
out
fdivrs
dec
push
jbe
jle
stos
dec
cwtl
mov
pop
adc
fwait
inc
test
sahf
mov
xchg
js
add
add
sub
adc
std
ljmp
mov
outsb
sbb
inc
lea
inc
sub
aam
stos
dec
scas
outsb
jns
mov
iret
add
cmc
jecxz
movsb
in
mov
out
pop
mov
push
pop
sbb
fistpl
mov
mov
sbb
sbb
in
jnp
inc
test
jo
inc
int
add
add
insl
jecxz
sarb
sti
in
and
in
pop
bound
in
inc
outsl
pop
lds
inc
in
mov
push
or
lds
sbb
sti
add
movsb
neg
pop
push
and
cli
loope
mov
mov
add
fwait
in
ja
inc
imul
not
mov
push
xchg
testb
movsl
sub
pop
popa
jae
repz
cmp
rorb
loope
cwtl
jns
mov
out
and
in
ss
test
cmp
mov
cmp
idivb
cltd
imul
sbb
cmp
mov
cmp
mul
movsb
rcl
fbld
dec
ds
xchg
aas
test
xlat
push
pop
lea
xchg
add
push
cmp
mov
fwait
xchg
enter
or
mov
pop
shr
sbb
mov
negb
xlat
jb
add
sbb
sahf
jo
inc
xchg
jg
mov
les
outsl
add
outsb
sbb
and
loopne
scas
add
sbb
add
mov
lds
sti
xchg
test
jecxz
js
loop
xchg
fwait
movsb
mov
ret
fs
ja
clc
push
inc
add
jno
cwtl
loopne
pop
xchg
add
mov
sbbl
cwtl
sbb
outsb
and
repz
mov
pop
xor
sbb
outsl
pop
gs
sbb
pop
and
lcall
fwait
push
leave
cli
push
outsb
adc
sbb
sti
gs
dec
sub
fwait
sbb
outsb
cwtl
or
cmp
sub
outsl
pop
es
test
mov
clc
inc
stc
add
cli
fs
movsb
cmp
pusha
lods
xchg
inc
stc
xchg
jnp
jns
mov
mov
mov
incl
sub
cmp
xchg
fadd
push
adc
and
cmp
cmpsb
cmp
outsl
cltd
scas
mov
dec
into
add
xchg
mov
or
sahf
push
in
add
fwait
loop
add
push
xor
or
cli
xorl
cmp
loop
add
scas
pop
test
popf
cmp
inc
xchg
js
sbb
mov
bound
lcall
mov
xlat
sbb
jno
jnp
and
sahf
dec
cltd
fldenv
jns
add
aam
aad
leave
jecxz
jg
fs
jno
and
xlat
dec
and
aaa
push
loop
cmp
xlat
rol
cli
movsb
test
sbb
mov
jns
fsts
rcrl
jecxz
push
xor
jmp
fs
int
mov
and
cwtl
and
cli
xchg
inc
jp
sbb
add
aam
xchg
loop
fs
repz
ja
and
and
cmp
icebp
xchg
test
jnp
lds
pop
sti
ja
loop
or
cmp
aam
clc
mov
lea
sbb
bound
push
inc
mov
xchg
push
aam
popf
loop
sbb
push
mov
pop
adc
inc
xor
mov
and
and
loopne
cmpsl
sbb
mov
jge
adc
fwait
jo
sahf
sbb
push
inc
push
jmp
adc
stc
pop
in
ss
mov
stos
jns
pop
mov
les
arpl
mov
sbb
fs
call
xchg
gs
mov
push
jns
jo
loop
test
cwtl
mov
in
dec
jecxz
xor
sahf
add
push
mov
pop
adc
cwtl
fcomps
adc
in
and
popf
arpl
in
loop
mov
pop
sbb
movsl
add
pop
in
xchg
test
and
push
ret
cld
pop
call
sbb
mov
ja
cmp
pop
cmpxchg
and
xor
movsl
cmpl
cmp
mov
and
jnp
pop
cltd
cmp
mov
mov
and
push
cmp
push
insl
push
sbb
fs
inc
imul
pop
add
inc
fcmovnu
cltd
fsubrs
jmp
jb
std
xlat
test
mov
cmp
inc
mov
fucomi
xchg
test
xlat
sbb
ret
lds
aas
cmp
test
sahf
sti
sbb
movsb
jmp
sbb
add
xchg
movsb
movsl
iret
push
fdiv
call
push
mov
pop
cmpl
mov
fs
fldenv
dec
sub
cmp
subl
fcmovnu
ja
and
pop
sub
sbb
lds
fs
push
pushf
mov
adc
mov
outsl
in
cs
fdivrp
clc
fadds
inc
push
sbbb
add
test
inc
ja
cmp
jmp
test
jns
lcall
outsb
adc
cltd
inc
add
leave
mov
add
adc
sbbl
fcomps
add
sbb
xchg
in
mov
push
pop
in
movsb
add
cmpl
cwtl
testb
sahf
cli
hlt
and
les
push
cmp
adc
pushf
add
mov
jbe
dec
cmp
mov
les
sub
pop
mov
test
pushf
cmp
jbe
es
xchg
test
mov
add
cmp
not
jae
insl
add
movsb
add
ficomps
push
pusha
roll
adc
movsl
push
aaa
rcrl
inc
aaa
stc
cmp
das
in
mov
inc
notb
xchg
ret
test
imul
and
icebp
fnstcw
add
push
pusha
pop
leave
popf
dec
nop
test
push
inc
cmp
testl
std
push
xor
mov
pop
sbb
xlat
sbb
arpl
or
mov
cltd
mov
shll
add
out
cmp
in
xor
jns
cltd
mov
fnstcw
add
les
lock
out
inc
cli
in
lret
cmp
rcrl
mov
not
nop
and
cwtl
mov
mul
xchg
mov
xor
arpl
push
pop
ss
jae
sahf
jnp
movsl
clc
pop
mov
fwait
sbb
adc
push
push
dec
fwait
lea
mov
js
lods
sub
sbb
jle
jge
lcall
xchg
in
xchg
and
fistl
inc
fwait
dec
je
movsl
std
xchg
and
clc
mov
xor
jnp
mov
movsl
xor
movsb
fsqrt
fs
add
dec
scas
add
test
xchg
push
bound
or
inc
xchg
daa
ret
pusha
and
xor
mov
pop
das
cmpsb
mov
repnz
fdivrs
in
sahf
push
sbb
pop
push
adc
aam
hlt
pop
adc
out
aas
and
les
lret
popf
clc
test
jnp
fistpl
ret
pop
in
mov
icebp
fcoms
stc
and
ja
ret
inc
xchg
repnz
movsl
add
ja
or
js
sbb
xor
stc
cltd
jns
push
dec
enter
cmpl
mov
sub
sar
mov
cli
lret
in
lds
dec
and
xchg
movsb
std
pop
js
pop
icebp
push
add
pop
ss
jb
sbb
jecxz
ja
gs
negl
movsl
xchg
popf
inc
and
push
in
xchg
and
sbb
dec
ret
mov
sti
mov
adc
lods
adc
sub
jo
std
cmp
cmp
pop
cmp
add
in
imul
in
pop
rcrl
or
sbb
ja
outsl
mov
or
dec
les
sbb
popf
or
xchg
jo
jns
fwait
es
pop
sbb
mov
mov
mov
nop
pop
mulb
cltd
push
in
add
mov
js
icebp
aam
iret
pop
push
and
mov
jecxz
cltd
mov
adc
pop
push
xor
fidivl
cwtl
xorb
inc
test
arpl
aaa
outsb
inc
and
lock
mov
fwait
jle
mov
gs
sar
clc
add
inc
sbb
rcrl
pop
icebp
mov
in
test
enter
and
cwtl
jae
or
and
mov
and
mov
pop
mov
js
rcl
cmp
or
outsb
ret
in
pusha
mov
aaa
negb
gs
fisubs
loop
mov
out
subb
mov
pushf
cmp
ds
sbb
adcb
and
fcoms
cli
mov
sbb
xor
cltd
movsl
dec
fidivrl
outsb
fs
pop
adc
jno
mov
fcompl
cltd
std
sbb
pop
fwait
mov
cli
mov
sbb
lahf
cli
xchg
mov
dec
cmp
repnz
lock
lea
add
push
jnp
and
sbb
out
add
cmp
jecxz
mov
mov
fidivl
icebp
loope
gs
mov
nop
or
pop
cli
test
mov
pop
gs
pop
sti
cmpsl
cwtl
or
les
inc
pop
pop
mov
andb
aas
iret
adc
loop
xor
mulb
fmuls
inc
mov
push
jmp
or
lods
aam
xchg
jae
mov
rolb
fwait
push
and
sbb
js
loopne
inc
fwait
lea
int3
fyl2xp1
lds
sti
call
sbbl
clc
xlat
add
sti
cwtl
aaa
lds
mov
inc
shl
fbld
push
cmpl
add
and
push
jl
stc
jl
cltd
loopne
dec
aaa
test
out
popa
sbb
test
or
cmpb
cmp
js
add
mov
arpl
fadds
int
or
pop
cmp
add
sbb
jo
and
inc
fcomps
lods
and
imul
cmp
mov
scas
push
ret
add
jecxz
stos
pop
and
or
xor
add
in
jae
clc
cltd
fcoml
jne
push
xlat
repz
gs
sbb
cmp
fsubs
xchg
mov
popa
popf
aam
push
xrelease
or
scas
jns
sub
sub
lret
xor
inc
pop
or
stos
push
xchg
adc
adc
leave
push
stc
sbb
sahf
jo
mov
adc
cmp
mov
sbb
and
js
dec
or
add
popf
test
jnp
mov
and
and
sbb
es
or
cmp
scas
ret
mov
push
push
aas
jmp
jae
lds
jecxz
sbb
add
add
xchg
aaa
jo
sti
loop
inc
outsb
insb
fs
mov
sbb
and
add
push
bound
iret
pop
push
jl
and
or
aaa
mov
adc
movsl
xchg
pop
lret
cwtl
mov
xor
and
xor
add
addl
fs
cli
stc
enter
idivb
xchg
sbb
or
pop
sbb
loopne
sub
pop
xchg
popf
je
push
sahf
popf
xchg
push
rcrb
xchg
cli
loop
inc
jecxz
and
pop
jl
inc
test
mov
or
mov
pop
mov
cmp
push
add
js
mov
mov
mov
jecxz
and
mov
push
xchg
jge
push
sbb
mov
cli
sbb
jns
jnp
insb
lods
jnp
ret
add
inc
mov
add
push
xorb
xchg
leave
lahf
fs
test
cwtl
add
scas
cmp
add
mov
push
repnz
stc
xchg
inc
inc
test
and
and
icebp
cwtl
out
and
add
cmp
mov
mov
in
and
test
jns
xor
fsubs
cli
xlat
inc
cltd
xchg
daa
out
cmp
cmp
test
icebp
fld
cwtl
fdiv
lds
mov
mov
in
aaa
in
inc
stc
andl
add
out
inc
fstpt
fwait
lods
sbb
test
add
inc
sbb
inc
push
aaa
sti
lret
ja
mov
mov
adc
iret
subb
pop
sub
add
lea
jns
sti
pop
sbb
lcall
inc
push
outsb
sub
push
cmp
sbb
add
clc
icebp
cwtl
test
ja
popl
sti
mov
jns
cld
lods
add
lds
loop
mov
test
loop
mov
jnp
cltd
js
ja
mov
xchg
sbbl
push
int
lock
xor
idiv
inc
pop
jp
aaa
jl
sbb
mov
mov
cmp
pop
mov
test
and
cmp
push
popa
pop
js
adc
cmp
add
cmpsb
pusha
fldt
mov
mov
jnp
mov
pop
add
aaa
adc
sbb
insl
xlat
cmpsl
out
shll
mov
repz
arpl
ret
pop
pop
sbb
and
cwtl
andl
or
arpl
sbb
loop
cli
xchg
cmp
pop
test
in
cmp
and
or
pop
je
cmp
rol
push
ret
jecxz
or
cmp
test
inc
push
clc
mov
xchg
in
ja
mov
push
inc
xor
mov
cmp
into
jecxz
cli
adc
pop
push
stc
push
sbbl
xchg
mov
xor
cltd
sub
sbb
sahf
mov
sbb
out
imul
add
sbb
pop
mov
jo
add
icebp
test
sti
in
fld
xchg
sbb
in
and
xor
jmp
inc
xor
fsts
loop
and
call
test
in
adc
in
pop
jle
movsl
dec
scas
movsb
inc
jg
gs
scas
mov
pushf
pop
popf
in
pop
pop
sahf
xchg
pop
loop
loope
jecxz
xlat
insl
adc
in
cmpsb
in
dec
les
sarb
stc
fcomps
push
dec
jno
clc
ret
inc
movsb
icebp
leave
sahf
xor
lds
xor
nop
lret
fstpt
shlb
loop
test
fidivrl
fwait
cli
mov
fs
cmp
lock
pop
cltd
pop
or
ret
pop
pop
mov
and
pushf
testb
pushf
fcomps
and
movsb
adc
cwtl
jae
and
xlat
fcomi
adc
stc
inc
pop
mov
std
inc
lret
fdivr
or
pop
imul
and
ja
adc
push
cmp
cmp
shrl
loope
stc
push
call
xchg
and
or
js
inc
fstps
adc
add
adc
cmpsl
and
clc
mov
icebp
and
div
mov
adc
cmp
js
xchg
and
addb
pushf
fld
dec
jp
pop
stos
adc
mov
push
jp
sbb
pop
cltd
cwtl
fwait
mov
ret
jo
movsl
arpl
sahf
cmp
aaa
pop
or
jno
and
adc
test
pop
mov
xchg
cwtl
sbb
inc
add
cmp
lea
push
sbb
sar
mov
sub
cltd
push
sub
in
mov
jnp
sbb
imul
inc
sbbl
cmp
xchg
mov
dec
rclb
inc
pushf
sbb
adc
mov
test
outsl
sti
fmuls
mov
sbb
cwtl
and
xlat
push
cmp
ret
clc
sbb
dec
mov
js
sahf
cmp
pop
cmpsl
cwtl
cltd
push
add
pop
movsl
cmp
inc
outsl
in
pop
cwtl
fstpt
idiv
insb
sbb
or
and
sahf
xchg
mov
test
jmp
sti
xchg
movsb
add
xlat
je
stc
cmpsb
rcr
add
push
pop
mov
out
xchg
cmc
mov
lds
popf
sbb
pop
add
adc
pop
icebp
cmp
mov
xchg
sbb
cmp
clc
mov
cmp
add
jnp
pop
stc
in
fisubl
or
jns
fldcw
mov
xor
inc
dec
jp
cmp
mov
and
fcmovu
and
pop
sbb
clc
sbb
std
xchg
xchg
add
test
push
lret
lds
jo
rolb
fs
jle
inc
and
dec
dec
cmc
je
jp
scas
mov
adc
inc
push
cmp
mov
lea
sbb
and
or
sbb
pop
or
pop
fldenv
mov
gs
inc
pop
decb
test
lret
adcl
sbb
inc
leave
movsl
leave
fucomi
sbb
sbb
lock
push
and
pop
andl
or
sbb
ret
hlt
adc
pop
add
bound
stos
cmpsl
lret
cmp
loop
dec
add
jo
or
xlat
lahf
pop
sbb
pushf
fwait
and
out
mov
inc
sbb
cmp
cwtl
arpl
pop
jl
ja
movsb
cmp
cmp
cmp
mov
pop
clc
pop
jle
add
cmp
mov
cmp
sahf
add
js
in
jne
mov
stos
into
ljmp
pop
xchg
xlat
testb
lea
test
pop
lret
sbb
mov
shl
jnp
popa
push
add
gs
lahf
mov
movsb
test
mov
cmp
in
mov
cmpl
mov
dec
js
ja
aaa
push
out
ljmp
pop
pop
fdivrs
hlt
mov
fnstcw
push
jb
and
test
pop
pop
loope
in
and
xchg
pop
testl
movsb
cwtl
jl
or
clc
fwait
inc
outsl
fincstp
push
rcrl
xchg
ret
push
cmp
bound
rclb
clc
ja
iret
push
mov
gs
stc
xlat
adc
movsl
inc
test
popf
fnstcw
lock
jnp
test
mov
loop
stc
mov
jns
jecxz
cwtl
sub
stos
pushf
jnp
inc
popf
mov
cmp
cli
pop
xchg
add
xor
ja
test
out
fistps
iret
test
mov
inc
rcrl
push
push
dec
inc
sbb
xchg
and
fwait
and
and
in
lahf
test
stc
jge
add
or
adc
jle
adc
cwtl
cmpsl
iret
mov
add
rcll
lret
add
xor
movsl
pop
fwait
pop
movsb
pop
cmp
cltd
out
fisubl
sub
stos
add
lcall
inc
mov
adc
push
data16
pop
sahf
inc
lds
sbb
and
negb
jnp
xlat
in
pop
mov
mov
loope
jnp
cmp
dec
add
sbb
clc
movsb
mov
divl
mov
mov
sbbl
push
popa
stc
dec
add
inc
xlat
icebp
clc
and
fsts
or
push
or
sti
cmp
push
xlat
push
cmp
push
cli
pop
sbb
adc
mov
mov
or
sbb
out
sbb
or
add
enter
loop
popf
movsb
and
adc
xchg
fldl
fwait
add
adc
cmp
pop
cwtl
mov
mov
ja
xor
pop
push
idivl
jmp
mov
or
stc
andb
rolb
inc
sbb
inc
mov
add
in
inc
inc
adc
fwait
loopne
mov
inc
mov
add
add
mov
in
fdivrs
adc
add
sbb
nop
sar
sub
fnstcw
fwait
inc
fbstp
mov
and
and
jl
jo
add
shll
cmp
mov
inc
inc
movsb
push
jo
push
add
pop
icebp
mov
shll
mov
push
sbb
jecxz
sti
cli
ret
cmp
cmp
sub
repnz
inc
fucomip
and
and
pop
mov
xor
cmp
pop
jecxz
les
pop
into
popf
sbbl
test
and
jecxz
rcll
clc
jb
sbb
cmpl
xor
test
xor
jge
aaa
pop
jns
cltd
pop
gs
mov
gs
cli
jge
sti
mov
imul
in
mulb
xchg
out
xlat
or
add
mov
add
cwtl
ja
push
in
js
lret
inc
mov
aaa
and
mov
xorb
and
and
movsb
bound
add
sbb
cmp
or
sbb
cmp
xlat
fcomps
or
add
and
jmp
jg
sti
das
mov
stc
xchg
jns
aad
stc
sub
loope
mov
mov
cltd
and
mov
inc
bound
sbb
fcoms
pop
sbb
add
cmp
fwait
mov
cltd
jns
in
sbb
xor
shrl
arpl
lret
pop
sbb
pop
push
sbb
and
pop
cltd
add
mov
push
lret
ret
push
fiaddl
add
cmp
push
cli
pop
and
cwtl
jecxz
adc
in
push
jns
add
mov
mov
push
dec
sub
pop
ja
adc
jecxz
mov
and
xor
jne
repz
shl
cmpl
mov
test
fs
out
aad
jmp
loope
test
arpl
fstps
and
inc
push
sbb
mov
jmp
ret
aaa
and
scas
ja
add
in
out
stc
aaa
in
out
adc
and
enter
sbb
cmpb
pop
pop
sbb
movsb
xchg
sbb
cmp
les
jnp
or
xchg
stc
mov
adc
cltd
dec
movsl
lds
cmp
xchg
mov
rolb
shl
mov
push
adc
movsl
sbb
inc
jp
fs
mov
stc
pop
aas
xchg
repz
repz
push
add
in
sub
jecxz
sti
gs
adc
xchg
push
test
jp
and
mov
xchg
jnp
and
clc
cmp
inc
push
lret
fwait
ret
test
and
pop
mov
jbe
sbb
push
push
mov
add
decb
sti
inc
popf
movsb
cmp
pushf
push
adc
mov
mov
gs
ret
sbbl
mov
pop
lock
and
jge
pop
xchg
xor
inc
outsb
fwait
and
add
pop
push
inc
fcomps
dec
pop
outsl
js
stos
and
mov
test
mov
push
les
mov
push
and
cld
mov
stc
ret
add
shrl
cmpl
mov
shlb
xor
cmp
cwtl
mov
sub
loop
int3
mov
std
mov
icebp
mov
adc
add
stc
shlb
pop
out
pop
inc
mov
xor
cmp
clc
fs
pop
ds
aaa
fsubs
test
push
int
xchg
push
jle
inc
cltd
mov
add
pop
or
fnclex
cmp
xor
sbb
sti
add
mov
hlt
sarl
movsl
in
loope
fadds
inc
jns
divl
jae
push
pop
mov
adc
xchg
outsb
pop
movsb
sbb
andb
mov
and
fistpl
sub
sarb
jmp
cmp
adc
xor
pop
cltd
cmp
sub
cs
inc
cwtl
clc
fwait
notb
cmp
mov
bnd
push
cmp
sbb
xchg
scas
adcl
adc
les
fcomp
js
xchg
leave
outsb
xchg
mov
outsb
sbb
ss
cmp
and
ret
fs
aam
and
jns
mov
and
mov
hlt
inc
and
cmp
mov
iret
andl
xchg
lcall
mov
ss
adc
mov
sub
jb
imul
inc
add
fs
pop
idivb
aaa
cmp
inc
pop
mov
pop
xchg
fnsave
fdivs
fs
push
jl
loop
and
cltd
cli
xlat
add
sbb
and
mov
icebp
popf
mov
sbb
cld
testl
movsb
xchg
pushf
jo
add
inc
leave
add
cmp
pop
mov
push
and
insb
cmp
pop
push
aad
and
sbb
stc
negl
xor
and
jo
in
or
loope
movsl
testl
pop
or
mov
outsb
adc
notl
cld
push
mov
cltd
jecxz
cli
arpl
add
scas
push
testb
xor
test
gs
in
mov
sbb
cmp
test
movsl
xchg
loop
mov
mov
mov
pop
pop
inc
nop
mov
pop
inc
push
gs
cmp
pop
mov
lods
mov
mov
in
mulb
fnstcw
gs
add
add
jecxz
imul
fwait
dec
or
inc
int
mov
or
movsl
loop
xor
fadd
mov
pop
dec
outsb
ret
adc
adc
test
mov
in
enter
jb
imulb
mov
add
imul
data16
std
inc
lds
adc
xlat
xchg
sbb
icebp
movsl
fs
fstps
loopne
pop
push
sti
movsb
pop
in
into
add
adc
and
mov
arpl
aam
fcomps
jne
out
push
jo
dec
mov
outsl
jns
rolb
lds
mov
out
sub
xchg
in
jmp
std
test
pop
push
call
cmp
aad
add
popf
daa
out
cli
push
fs
cmp
cli
test
clc
inc
in
cmp
movsl
push
leave
loopne
and
inc
fs
lret
in
jbe
fs
arpl
sar
cltd
push
clc
inc
cli
sbb
test
push
xchg
iret
mov
add
add
sti
idivb
pop
jb
pop
inc
pop
aaa
lods
jo
mov
jl
sub
aaa
pop
sti
fildl
xchg
pop
lret
mov
mov
repnz
inc
adc
arpl
cmp
and
pop
sar
cmp
in
sbb
or
pushf
add
test
add
or
xchg
gs
arpl
insl
shlb
mov
mov
pop
in
or
pop
inc
cwtl
mov
iret
mov
mov
gs
add
cmpsb
xor
jns
mov
stc
sbb
mov
leave
xor
sub
add
sbb
outsl
stc
fmuls
mov
mov
xor
sbb
mull
mov
mov
jnp
and
sti
sbb
pop
push
add
iret
clc
movsb
gs
call
and
arpl
pop
cwtl
popf
in
jp,pt
fdivrs
xor
cmp
pop
ja
daa
imul
pop
gs
fs
adc
pop
movsl
pushf
and
lods
sbb
sbb
loope
aaa
adcl
xchg
in
int
pop
lds
xchg
test
movsb
mov
jns
xchg
fstps
xor
negl
cli
xor
cmp
ret
test
aaa
mulb
push
inc
mov
ficoms
jecxz
mov
inc
xlat
xor
loopne
sbb
and
pop
ja
jo
ret
lds
idivl
jle
adc
pop
xor
inc
jmp
push
arpl
cmp
cwtl
movsb
ds
mov
xchg
pop
lcall
test
movsl
frstor
movsl
icebp
mov
in
rolb
movsb
loop
mov
cmp
dec
mov
mov
add
int3
std
orl
rcll
mov
pop
cmp
or
dec
mov
jecxz
movsl
and
cmp
add
mov
loop
negb
jae
pop
inc
outsl
and
push
cmp
xor
dec
arpl
out
cwtl
iret
imul
jecxz
es
fstpt
mov
ja
and
push
jnp
les
mov
rolb
negb
andl
xor
fwait
movsl
inc
clc
mov
add
loop
push
adc
out
dec
lock
push
dec
pop
outsl
movq
mov
movsb
sub
flds
scas
xlat
dec
inc
lahf
mov
movsl
mov
jns
add
loopne
loope
cmp
and
dec
xor
lock
mov
and
notl
sub
and
xlat
mov
mov
stc
int
xor
mov
inc
cmp
fidivl
shll
xchg
lcall
js
or
in
mov
or
add
lock
cs
pop
add
loopne
xchg
add
and
fsts
sub
xchg
sarb
stos
adc
cmp
sahf
dec
popf
adc
inc
xlat
cwtl
ja
jns
stc
xor
xchg
mov
xlat
and
and
fs
gs
in
sbb
mov
push
repz
adc
or
sbb
add
jnp
inc
adc
jns
sbb
xchg
dec
jle
leave
idivb
roll
js
add
sbb
ret
adc
out
test
fcoms
test
adc
push
fstpt
and
pusha
pop
cmp
xchg
pop
add
sar
pavgw
sbb
ret
jnp
adc
inc
shll
xchg
add
clc
and
mov
cmp
lds
mov
fxam
and
in
aaa
addl
iret
testl
pop
jmp
lcall
imul
push
pushf
cmp
test
daa
ret
rcr
cli
test
in
mov
addb
movsl
call
sbb
mov
mov
xchg
cs
lds
fistpl
push
leave
mov
and
stc
js
popa
fwait
call
ret
sbb
mov
and
jo
movsb
add
cli
cmp
ljmp
push
or
sub
xchg
mov
cltd
add
mov
sar
jns
movsl
cmp
add
outsb
sbb
and
pop
add
sbb
ret
repnz
jecxz
les
sbb
mov
add
loop
pop
jmp
andl
movsb
jnp
cld
cltd
jecxz
push
adc
and
aaa
sbb
mov
test
rcll
roll
sub
lret
js
mov
and
clc
push
cwtl
fwait
push
out
sti
ret
cwtl
movsl
inc
and
cmp
test
inc
adc
jnp
xor
xor
negl
fnstcw
cld
loop
push
mov
sub
les
cmp
xor
xlat
jns
cltd
pop
xor
cmp
dec
int3
sbb
cli
sbbl
js
out
mov
push
mov
add
xchg
sti
sbb
mov
ds
out
pop
flds
cltd
lea
inc
shlb
clc
mov
adc
push
gs
pop
adcl
sbb
mov
xchg
into
in
jecxz
lods
cmp
pop
fucom
sbb
mov
gs
negb
jno
gs
xlat
add
and
flds
addl
add
cwtl
pop
push
bound
adc
mov
sub
pop
test
adcl
mov
xlat
add
sti
fnstcw
mov
mov
testb
sub
sub
fwait
cmp
pop
loop
mov
and
mov
movl
cmp
stc
arpl
mov
fstps
arpl
pop
test
aaa
xchg
and
aaa
add
mov
push
dec
ss
add
or
jg
push
push
inc
fsubs
xchg
jns
jecxz
sbb
sahf
inc
pushf
mov
fldt
mov
xchg
xlat
fs
push
or
sub
mov
mov
cwtl
std
jmp
sbb
inc
xchg
les
test
sti
mov
mov
scas
mov
pop
mov
in
sahf
or
sbb
in
mov
add
mov
add
loope
les
pop
popa
jb
add
add
das
fldcw
add
inc
in
fwait
in
mov
lds
push
dec
pop
jecxz
roll
mov
pop
sbb
pushf
jg
scas
in
shl
jne
iret
dec
shlb
loope
jns
dec
popa
jmp
out
fsts
idivl
add
and
arpl
mov
lahf
jecxz
sbb
mov
ret
sub
mov
cmp
mov
jo
jnp
cmp
sbb
leave
and
mov
jnp
aaa
sti
cmp
jl
push
ret
data16
cwtl
repz
cmc
mov
clc
pop
xlat
and
or
lods
loop
pop
ret
out
cmp
push
inc
rcrl
stc
xlat
or
scas
and
in
add
sbb
test
xor
or
adc
and
or
jecxz
or
int
andb
mov
xchg
mov
cmp
fs
out
mov
mov
inc
add
or
ret
pop
divl
pop
pop
cwtl
xlat
cmp
xchg
push
dec
sbb
mov
ja
pop
in
mov
adc
cli
fwait
push
xor
jb
in
out
andl
mov
add
adc
data16
sahf
push
sti
jl
fsts
push
pop
gs
loopne
cli
mov
pop
inc
or
cltd
sub
adc
pop
and
cltd
push
in
test
test
lock
cmp
test
adc
xchg
jns
pop
sub
sbbl
or
sbb
iret
adc
movsb
cmp
js
test
fiadds
in
xor
sti
cltd
fwait
and
arpl
mov
lds
inc
jg
xchg
jns
add
fistps
mov
fwait
sub
cmp
outsb
pop
and
mov
cltd
aas
mov
cwtl
outsl
movsb
pop
arpl
rol
sbb
adc
mov
movsb
and
adc
xorl
and
or
inc
add
xor
xor
movsl
mov
addb
les
sbb
mov
pushf
push
mov
pushf
mov
cli
pop
sbb
notb
mov
mov
xchg
and
cli
mov
xor
jecxz
jo
idiv
mov
ret
icebp
lahf
movsb
aaa
mov
xchg
or
ja
cmp
loop
adc
loope
loope
pop
fxch
jmp
mov
fdivrs
xchg
cmp
repz
call
pushf
pop
in
adc
xorl
cwtl
in
mov
and
shll
fdivs
cmpl
xor
stc
data16
mov
pusha
fcomps
jo
sbb
push
sbb
iret
mov
ficomps
sbb
cmp
out
and
and
loop
out
cmp
data16
pop
sbb
xor
and
and
sbb
lods
mov
lcall
jg
rolb
adc
push
les
adc
lcall
mov
jecxz
addr16
enter
xchg
cmp
xlat
add
jmp
mov
mov
test
dec
sbbl
add
outsl
aaa
xchg
xchg
add
sub
int
xlat
call
idivl
and
stc
xchg
pop
dec
adcl
adc
adc
inc
jg
jp
cltd
mov
pop
test
push
push
cmp
iret
lock
les
push
and
fsincos
and
inc
lds
jns
jne
sbb
pop
push
movsl
or
push
aam
mov
cli
rcll
aad
aad
inc
pop
out
das
mov
add
xchg
sti
clc
pop
jo
loop
push
cmp
adc
xor
sub
push
pop
or
inc
mov
fwait
sbb
ss
mov
xchg
xchg
movsl
adc
repz
test
test
xor
mov
aaa
cli
xchg
sbb
mov
mov
out
pop
pop
sbb
add
ja
pushf
test
inc
cmp
cmp
icebp
and
jns
clc
inc
roll
sti
add
pop
sbb
pop
sbb
sbb
cwtl
test
cli
pop
outsb
jnp
lea
dec
test
out
lds
mov
cmp
mov
add
es
mov
out
outsb
or
or
sbb
push
mov
cmp
icebp
sbb
fprem
push
jo
stos
sbb
and
or
pop
add
setp
xor
or
inc
jnp
loope
aaa
pop
push
sbb
add
mov
scas
fcom
loop
fs
jg
xor
dec
and
mul
aam
add
cmpsb
mov
inc
cmp
sub
vpsubusw
cli
cmpl
adc
sbb
ja
pop
gs
fbld
push
fwait
dec
cmp
xchg
shrb
adc
add
push
idivb
inc
mov
mov
or
insl
lock
cmp
cmp
mov
inc
jnp
fst
add
inc
sahf
pop
cmp
sbb
in
cmp
testl
pop
popf
mov
pop
ja
ror
arpl
mov
xchg
lds
inc
movsb
pop
sub
push
leave
shlb
xchg
pop
cmp
adc
xorl
inc
push
lods
add
fsubs
ficomps
mov
jecxz
xchg
test
inc
and
and
outsl
js
aaa
scas
movsb
es
adc
sbb
add
in
and
fld
cmp
rcrb
jp
sbb
mull
add
mov
xchg
aad
test
cmp
testl
scas
cli
pop
add
pop
sbb
outsb
aaa
loopne
xchg
popf
dec
xchg
jnp
stc
push
pop
lds
sbb
inc
jns
jne
cs
dec
cmp
xchg
or
ja
in
out
aas
pop
fstl
sbb
pop
and
lahf
add
pop
iret
add
imul
push
fs
or
notl
fcomps
or
sbb
add
push
js
loop
scas
and
lcall
nop
cmpl
popf
testl
and
arpl
add
push
stc
xlat
inc
ja
mov
movsl
gs
inc
mov
add
push
mov
adc
call
inc
lcall
xchg
gs
push
ja
aam
test
iret
aaa
cmp
pop
mov
scas
cld
aaa
pop
cwtl
jo
xlat
jns
cmp
flds
icebp
sbb
push
mov
sti
pop
mov
stc
movsb
fiaddl
xchg
sbb
pop
ret
and
test
xor
std
insb
sbb
cmp
rcr
jnp
mov
movsb
mov
lret
repz
push
and
mulb
push
sbb
lock
jns
notl
jbe
jnp
mov
and
js
push
jge
pop
stc
es
loope
jecxz
xchg
js
push
aam
push
mov
pop
fstpt
in
sbb
mov
adc
mov
jns
loope
fld
pop
hlt
add
sbb
jle
stc
xor
popf
sti
mov
call
out
and
push
jns
pop
in
dec
add
or
xchg
push
dec
mov
cltd
adc
rcrl
gs
pop
jb
adc
cmp
and
sarl
cmp
push
dec
mov
xor
add
lret
mov
pop
push
cmp
cmpsl
sahf
loope
clc
fldz
and
movsb
mov
dec
push
adc
movsl
es
sbb
add
pop
ja
pusha
jns
cmp
dec
hlt
add
imul
jl
and
cmp
lret
fwait
jnp
jno
aaa
jecxz
pop
dec
fldl
push
sbb
cwtl
jecxz
pushf
sbb
sbb
mov
inc
sbbl
push
and
mov
rcrl
leave
mov
shrl
sub
mov
das
stc
cwtl
stos
test
dec
xchg
pop
test
lods
aaa
clc
arpl
push
jno
divb
push
mov
loop
cmp
test
mov
pusha
fcoms
cwtl
lds
jecxz
mov
inc
jnp
cmp
sbb
jecxz
ja
or
add
ja
fs
sbb
and
pop
inc
cmp
sbb
pop
ret
adc
cmp
xchg
cmpl
clc
scas
cmpsb
xchg
cwtl
jnp
aad
outsl
cmp
cmp
push
cmc
les
mov
cld
pusha
push
pop
push
inc
pop
cltd
hlt
inc
push
sbb
sbb
popf
aad
sbb
cmp
aad
ret
incb
cli
pop
inc
cli
ret
fwait
xchg
shl
test
adc
adc
stc
cmp
data16
shrl
sar
cmp
xchg
add
insl
test
push
pop
call
popf
lds
inc
cmp
subl
int
lds
or
cmp
and
or
lods
or
inc
pop
or
cmp
adc
cmp
lods
lcall
out
stc
dec
das
inc
and
add
adc
push
pop
and
arpl
pop
dec
sbb
xlat
addl
pop
or
and
mov
xchg
arpl
inc
or
cwtl
out
pop
and
xlat
out
sarb
push
test
bound
xchg
sti
jae
lret
adc
cli
aaa
out
pop
pop
lds
mov
ret
ja
push
pop
push
arpl
fs
dec
lcall
dec
adc
movsb
jnp
inc
xlat
fwait
push
xchg
sbb
movsl
ret
out
add
aaa
ret
and
negb
mov
fistps
push
lods
int
adc
shlb
mov
or
and
and
jle
pop
pushf
outsl
jo
test
xchg
pusha
pop
stc
xchg
dec
notl
les
clc
movsw
add
loope
inc
dec
fnsave
cmp
testl
mov
mov
and
cli
add
and
test
sbb
jae
dec
repnz
enter
ds
sbb
stos
sbb
adc
jge
xchg
inc
sbb
sub
in
les
cltd
out
mov
in
lds
cmp
xor
fistpl
pop
shll
lret
and
mov
cwtl
sti
shl
int3
xlat
aad
or
add
inc
pop
sbb
cli
pop
lcall
pop
test
jecxz
jnp
add
sbb
ret
jle
loop
mov
shll
lock
imul
inc
inc
aaa
xchg
mov
call
push
xor
popf
add
jge
lds
xchg
jns
stos
fsts
js
push
xlat
add
cmp
clc
shl
add
stc
ret
push
nop
movsb
ja
sti
dec
cmp
aaa
mov
xchg
leave
or
and
push
icebp
push
pop
clc
pop
sbb
cmp
mov
and
sbb
push
cmp
popf
cmp
xor
or
inc
into
fs
add
pop
js
mov
jnp
sarl
push
dec
fsubs
mov
daa
sti
push
sbb
shl
and
idiv
lds
pop
jecxz
in
cmp
sub
loope
or
fdivrs
in
sbb
push
aaa
mov
sub
aad
aad
add
add
jecxz
sub
inc
mov
push
test
push
xor
adc
pop
cmp
pushf
pop
scas
cmp
xlat
cwtl
adc
sbb
xor
jnp
fcoms
pop
gs
push
mov
sbbl
movsl
fsubrs
in
rcrb
stc
jns
testl
inc
mov
lret
pop
pop
mov
dec
aaa
sbb
inc
and
loop
pop
repz
and
outsb
mov
pop
ret
push
ret
sub
dec
into
insl
mov
xchg
sahf
xchg
cmp
js
or
test
pop
test
jp
rcr
xlat
push
fcoms
clc
fwait
xor
sbb
fs
cltd
pushf
mov
out
scas
roll
add
xchg
icebp
sarb
inc
movsb
test
repnz
cli
push
ret
sti
jnp
mov
cltd
pop
fsts
loope
and
aad
aaa
stc
sbb
std
rclb
iret
inc
mov
in
arpl
clc
mov
or
and
jle
icebp
ret
pop
sti
mov
jns
jnp
sbb
adc
jmp
mov
pop
cwtl
fcomps
jns
cmp
dec
add
fld
cmp
mov
cmp
mov
sbb
sbb
jnp
cmp
add
popf
sahf
mov
xchg
mov
mov
mov
jnp
jmp
je
dec
fldenv
adc
and
inc
mov
fnstenv
pop
int3
test
cwtl
mov
mov
xchg
sbb
lods
mov
in
or
mov
sub
lahf
cmp
add
and
data16
pop
shlb
rolb
xchg
add
mov
inc
add
ficoml
xchg
cmp
cs
pop
inc
repz
or
fisttps
mov
cmp
add
or
repnz
inc
test
mov
fwait
sbb
pop
mov
mov
movsb
sbb
xlat
pop
insb
sub
jmp
push
in
std
cmp
add
imul
ja
iret
cmp
dec
leave
xor
sbb
int
loop
sbb
sbb
mov
and
pop
stos
cmp
je
clc
sti
push
mov
adc
cmp
aad
sbb
push
enter
mov
in
push
xor
sbb
mov
xchg
mov
jns
sbb
sti
stc
sub
clc
cmpb
adc
sti
pop
mov
les
sbb
cli
and
gs
lds
and
pushf
neg
pushf
ss
push
testb
repnz
mov
stc
and
pop
dec
mov
sti
lcall
push
inc
jnp
shl
push
lods
bound
sbb
inc
outsb
gs
out
js
push
dec
add
test
lds
sbb
inc
sahf
stc
xchg
jecxz
sti
pop
sahf
sahf
movsl
mov
scas
xchg
fnstcw
mov
and
cli
pop
inc
not
cli
in
adc
cwtl
nop
pop
fcomi
mov
adc
xchg
divb
mull
mov
sti
mov
sahf
adc
nop
xor
mov
in
rcr
icebp
test
push
mov
std
and
fs
adc
jns
push
sarb
inc
and
in
push
fxch
and
popf
das
clc
and
flds
and
loop
aaa
notb
or
test
ja
test
cmp
cmp
lcall
mov
movsb
and
sub
fldenv
add
lock
scas
aaa
adc
insl
add
repz
mov
mov
fwait
cmp
dec
sub
fcomps
lds
xor
sahf
sahf
arpl
jp
aaa
cmp
push
lods
sbb
in
jns
fldt
inc
mov
and
arpl
cmp
fiaddl
cwtl
xor
xchg
mov
push
mov
jnp
lds
bound
pop
inc
xor
push
jne
mov
add
sahf
scas
imul
push
xor
add
xchg
sbb
cmp
pop
add
add
jbe
mov
xlat
xchg
popf
in
dec
add
cwtl
jecxz
jmp
adc
sbb
sbb
fists
mov
es
int3
cli
clc
lock
sbb
clc
in
je
xchg
and
pop
jmp
adc
xchg
pop
arpl
sar
adcl
add
enter
adc
and
imul
mov
in
adc
divb
pop
push
jns
adc
jnp
mov
mov
or
sbb
mov
pop
xchg
xchg
sbb
sti
jle
mov
inc
sbb
mov
mov
test
push
mulb
ja
inc
inc
adc
inc
jmp
fs
or
add
mov
pop
push
pop
cwtl
add
repz
fadds
inc
add
lods
rcl
add
and
test
cli
outsl
mov
inc
les
mov
aad
inc
mov
push
and
enter
negb
and
lods
pop
xchg
call
adc
sbb
inc
sbb
push
push
push
push
adc
sub
xor
add
out
cltd
add
jo
mov
cmp
push
add
sbb
leave
leave
mov
jmp
lea
and
arpl
inc
xor
cmp
fwait
gs
pop
aad
mov
ror
mov
pop
out
cmp
out
add
rcrl
mov
sbb
add
and
add
sbb
xchg
mov
sbb
fwait
cli
test
fildl
sti
push
rcll
or
adc
mov
xchg
in
stos
clc
sbb
pop
icebp
mulb
divl
out
in
pop
or
mov
test
clc
lock
xorl
in
inc
xlat
mov
cwtl
lods
jmp
adc
fs
rcr
mov
pop
test
js
stc
or
pop
stc
ret
in
test
cwtl
add
in
add
fldenv
loop
icebp
mov
cwtl
cmc
scas
aaa
sbb
add
fcoms
sti
cmc
outsl
add
and
sbb
jnp
mov
inc
cmp
pop
xor
jecxz
push
jmp
pop
test
loop
sbb
push
cwtl
push
pushfw
ja
adc
gs
fs
sbb
mov
arpl
sbb
sub
cmp
aaa
pop
mov
and
js
add
rdmsr
fdiv
insl
sbb
xorl
aaa
and
add
divl
add
push
inc
mov
xlat
or
mov
cli
and
pop
pop
mov
cmp
mov
clc
loopne
test
xlat
push
and
subl
test
lds
aad
xlat
add
outsb
mov
cltd
dec
mov
xchg
or
stc
push
add
rcll
arpl
loope
mov
and
in
jae
cmp
imul
or
cli
fcomps
jecxz
movsl
cli
das
xchg
dec
mov
gs
aaa
movsl
idivl
mov
pusha
jb
sti
jb
xchg
cwtl
add
adc
xchg
cmp
pop
xchg
aaa
movsb
or
xor
inc
shl
jnp
dec
cwtl
mov
lock
stos
add
push
subl
cmp
test
fcomip
adc
mov
sahf
jno
ja
xchg
aam
in
jne
roll
add
jecxz
loop
aaa
sbb
pop
inc
lret
scas
gs
xor
jecxz
xlat
les
xchg
mov
stc
ljmp
movsl
sbb
js
push
out
push
mov
hlt
rorl
idivb
push
cmp
aam
push
mov
repz
ja
cwtl
movsb
cmp
fnstcw
push
in
aad
mov
cmp
inc
push
not
mov
adc
sbb
lds
in
or
lret
cmp
jo
mov
icebp
cs
and
and
sbb
cli
cmp
add
mov
dec
call
notb
cmp
jmp
jae
inc
leave
vmovapd
add
sti
and
push
and
cmp
cwtl
push
dec
movsl
jnp
add
enter
mov
mov
push
add
shlb
jecxz
xchg
lcall
in
fwait
inc
lds
xor
inc
adc
pop
add
push
ljmp
mov
jmp
cmp
sbbb
dec
pushf
sub
adc
mov
push
and
cwtl
cmp
ret
in
add
mov
loop
add
aam
push
in
pop
sti
das
mov
adc
mov
lret
xchg
scas
gs
lds
jge
inc
mov
notb
lods
sbb
push
sbb
fucomi
js
push
scas
out
pushf
aaa
and
mov
clc
arpl
mov
movsl
mov
cmp
fst
and
mov
jns
add
imull
test
gs
les
xchg
add
stc
sti
daa
inc
andl
stc
call
or
xchg
inc
inc
jecxz
push
negb
ficompl
in
xor
add
test
dec
arpl
test
cmp
mov
add
inc
mov
movsb
sahf
or
cmp
fwait
push
cwtl
js
mov
lds
outsl
sbb
xchg
arpl
cmp
loop
xor
and
mov
sub
fcoms
sbb
into
scas
mov
fwait
dec
sub
dec
and
adc
jg
add
rcl
jns
inc
leave
mov
add
fwait
cmp
dec
add
and
and
gs
jecxz
sbb
mov
mov
push
cltd
sbb
aaa
sbb
push
sahf
pop
inc
sbb
stos
iret
loop
mov
jecxz
and
jge
mov
sbb
xchg
lds
push
cltd
or
or
in
jnp
fistl
add
sbb
mov
sbb
inc
clc
roll
inc
cmp
push
stc
jecxz
cwtl
jns
sarl
fldt
jns
loope
sbb
push
or
fs
int3
inc
pusha
mov
and
daa
cmp
movsb
ret
fwait
out
mov
stos
xor
add
cltd
pop
xchg
cmp
jo
test
cwtl
add
mov
sahf
or
cltd
mov
pop
jns
push
mov
pop
sbb
lcall
nop
iret
mov
xor
arpl
pop
inc
dec
mov
sbb
pop
in
aaa
idivb
adcb
test
pop
cmp
cli
mulb
add
push
in
jecxz
sbb
jle
push
sti
jmp
push
fmuls
in
and
inc
in
arpl
sub
cltd
jne
sbb
test
xlat
fdivrs
xor
pop
xchg
notb
and
aaa
nop
into
push
dec
jns
in
jb
das
or
js
inc
pop
cli
add
and
fnstcw
push
push
xor
jecxz
sub
cs
sahf
and
fwait
lds
or
int
pop
ja
test
sti
cli
mov
add
call
movsl
sahf
mov
pop
add
pop
or
xchg
xchg
imul
outsb
add
in
or
lds
jmp
test
dec
jnp
add
sbb
mov
and
xchg
adc
inc
adc
test
add
pop
xchg
ret
sbb
pop
sub
push
jecxz
sbb
movsl
push
and
jae
rorl
xor
inc
adcl
shl
popf
cmp
pushf
inc
scas
fwait
fs
fidivl
pop
stc
int
sbb
loop
push
cmp
test
add
enter
fstps
insl
cwtl
push
sti
mulb
loop
mov
dec
mov
js
out
mov
and
mov
push
in
iret
inc
add
bound
mov
pop
outsb
add
movsl
ret
xchg
mov
shl
jle
dec
sbb
sub
sbb
fwait
aam
cmp
ror
in
adc
notl
sub
jnp
notb
add
sbb
mov
movsl
push
add
fs
mov
js
loop
sahf
testl
out
pop
lds
out
in
and
shrw
icebp
add
inc
adc
imulb
jecxz
imul
inc
xlat
fcomip
in
dec
test
test
movsl
add
jo
push
test
jp
enter
mov
sti
sbb
and
dec
test
clc
push
mov
cltd
xchg
out
mov
inc
clc
data16
daa
in
adc
push
pop
push
push
push
mov
scas
mov
clc
lock
cmp
mov
filds
push
movsl
cmp
jns
into
shrl
cmp
mov
gs
fiadds
sbb
cmp
idivl
dec
pop
loope
add
inc
ja
test
rcl
adc
stos
jmp
test
pop
movsb
call
mov
clc
sbb
out
rolb
mov
jo
ret
imul
xchg
movsl
push
aaa
iret
mov
scas
ja
ret
cmc
test
les
fldcw
add
pop
inc
or
lret
sbb
stc
adc
add
stc
mov
jns
test
adc
flds
sbb
sub
cli
js
adc
int
xor
out
leave
push
mov
lret
rcll
ja
cli
pop
or
mov
jle
test
scas
inc
or
cmp
fsubl
shrb
or
pop
add
xlat
push
pop
adc
dec
pusha
sub
mov
fistl
add
pop
jecxz
sbb
fstps
div
jecxz
mov
pop
aad
pop
mov
test
gs
ja
push
mov
dec
lds
jno
pop
jl
and
push
ret
cli
movsb
inc
cmp
outsb
pop
mov
ja
subl
stos
xchg
out
inc
in
xchg
test
cwtl
xlat
in
or
cmp
leave
outsb
xchg
inc
jp
xorl
dec
lods
lods
sub
jmp
sti
popa
xor
cmp
testl
adc
test
mov
fdivs
mov
iret
inc
xor
jnp
jns
es
add
sub
dec
and
dec
cmp
sbb
mulb
repz
cli
sbbl
cmpb
in
jns
in
test
inc
xchg
and
add
cmp
fnstenv
fwait
repz
ret
mov
loope
test
outsb
loopne
push
mov
sbb
and
outsl
imul
sbb
cli
vpinsrw
add
and
mov
mov
mov
fwait
add
xor
xor
mov
sbb
ret
pop
loop
jns
xchg
mov
outsl
inc
xor
and
add
ja
and
pop
loope
fucomi
in
push
leave
addl
pop
flds
pop
inc
sbb
or
aaa
cmp
aam
movsl
pop
enter
sbb
ja
jo
mov
mov
iret
jnp
call
cwtl
add
popf
push
movsl
inc
arpl
pop
pusha
sbb
cmp
sti
xchg
hlt
push
insb
push
in
andl
mov
adc
test
and
pop
stc
add
push
out
sbb
cmp
add
lock
out
cwtl
outsl
aaa
out
inc
xchg
add
adc
aas
icebp
icebp
sbb
inc
mov
mov
xchg
rol
sbb
fs
inc
pop
mov
jl
ja
popa
jmp
add
mov
or
in
sahf
sub
and
inc
nop
sbb
data16
xchg
push
and
or
icebp
cmp
insl
jns
test
mov
fldl
outsl
pop
jo
movsb
stc
fwait
sbb
mov
outsb
xchg
cmp
cmp
mov
ficoml
jecxz
sbb
sarl
xor
mov
adc
sbb
mov
fcmovnb
divb
fwait
daa
fnstcw
xchg
movsl
jno
or
xchg
popf
lcall
int
inc
test
lret
cmpsb
mov
mov
sub
enter
gs
mov
cmp
jb
cmc
inc
or
or
pop
xchg
movsb
scas
push
out
dec
cltd
and
dec
push
sbb
pop
sbb
fs
js
mov
mov
sti
jb
push
loop
fwait
xlat
add
loop
inc
or
adc
cmp
lcall
arpl
aaa
sbb
loop
push
adc
push
notl
push
sbb
outsl
add
fldt
inc
inc
popa
dec
les
xlat
movsl
jns
ret
ret
sbb
test
inc
inc
xchg
mov
mov
jecxz
jae
pop
iret
in
cmp
inc
cwtl
cmp
mov
or
in
mov
nop
fisubl
ret
adc
cwtl
pop
iret
cltd
in
add
stc
mov
sahf
scas
aaa
test
xor
int
fistpll
and
adc
dec
pop
inc
mov
aaa
jecxz
push
lds
adc
js
fcomps
lods
notl
sbb
nop
test
sbb
jnp
cmpl
and
push
push
push
sbb
mov
pop
mov
and
icebp
clc
and
fnstcw
aaa
stc
flds
xchg
or
arpl
jo
sbb
adc
xlat
cmp
xor
pushf
sti
lds
cltd
stos
sbb
mov
loop
jecxz
sti
bound
cwtl
pop
shll
movsb
xorb
mov
or
gs
cmp
aad
cmp
in
loop
dec
cli
cmc
sbb
jle
push
push
add
or
cli
jecxz
or
xchg
pop
sbb
jb
pusha
sbb
enter
les
mov
popf
push
and
filds
jmp
negl
imul
jae
xlat
sti
enter
cli
ja
adc
xor
add
push
fbld
xchg
and
js
inc
shll
fldenv
sub
push
inc
in
icebp
jns
pop
enter
jle
cmp
inc
push
sbb
pusha
push
cwtl
sub
add
sub
cmpsb
adc
xchg
mov
out
xlat
test
test
push
inc
inc
ret
xchg
adc
pop
bound
add
pop
and
jl
inc
or
dec
pushf
add
clc
sbb
jg
js
out
pop
inc
call
sub
int
add
ja
push
in
add
xchg
push
jmp
jnp
cmp
ficoml
mov
sbb
and
inc
loopne
jno
mov
cmp
ficoms
mov
add
stc
sub
fs
xor
mov
mov
pop
fdiv
inc
sbb
fcoml
inc
fs
sbb
test
mov
clc
mov
inc
and
in
sbb
pop
inc
adc
xor
and
xchg
inc
and
jle
out
push
mov
idivl
mov
and
jnp
add
fcmovu
pop
outsb
adc
outsb
popf
dec
iret
fwait
cmc
cmp
adc
movsl
js
jns
sbb
cltd
dec
repnz
pop
outsb
sbbl
fstps
dec
inc
outsb
jns
mov
xlat
add
and
addr16
cmp
gs
addl
add
adc
pop
cmp
xor
movsb
mov
mov
mov
inc
cmp
mov
add
cmc
dec
adc
cli
mov
in
xchg
add
stos
sbb
xchg
add
sbb
movsl
push
add
and
sub
outsb
js
inc
stc
pop
add
movsl
jnp
loope
lds
xchg
fcmovnu
xchg
and
and
aaa
add
imulb
pop
ja
mov
in
jns
sub
fistl
sbb
pop
gs
mov
fsts
pop
cmp
mov
xchg
mov
push
test
arpl
push
mov
test
in
loop
sbb
sub
mov
adc
cwtl
scas
fxam
pop
add
and
push
pusha
jns
xor
pop
imul
sbb
mov
pop
jbe
lds
jno
or
sti
fwait
jno
loop
pop
sbb
add
or
jecxz
aaa
fwait
sbb
mov
shl
testb
add
leave
js
adc
add
leave
cmp
push
rcrl
sbb
pusha
stos
pop
shlb
xchg
pop
pop
fsubl
adc
ret
or
xor
inc
fisttpl
idiv
push
cmp
pushf
idivb
push
add
dec
or
and
mov
sbb
fwait
mov
pop
clc
cmpsb
add
mov
clc
or
js
inc
sub
push
ja
xchg
pop
subl
clc
lahf
lods
fcmovne
mov
fdivl
xchg
pushf
pop
inc
std
aam
mov
in
add
in
leave
data16
mov
adc
pop
movsb
je
shll
dec
popf
xor
adc
push
ficoml
in
push
mov
sbb
push
call
outsl
and
mov
fnstenv
addr16
adc
daa
push
movsl
imull
dec
sbb
sub
inc
push
mov
in
ret
negb
mov
sbb
enter
xlat
mov
pop
mov
clc
jne
jns
xchg
xchg
ja
insl
cmp
test
inc
cli
loop
aaa
and
aas
cwtl
cmp
cmp
xchg
popa
sbb
pop
leave
mov
mov
cmc
and
cli
aas
or
gs
lds
out
loop
push
pop
bound
divl
pop
cwtl
add
jle
fisubrs
push
lods
ror
or
cmp
outsb
mov
push
cmp
leave
sbb
and
ljmp
fistps
ja
push
fnstsw
jle
pop
cld
cltd
jns
rcrl
or
cltd
in
lds
loop
testl
mov
cld
mov
in
xchg
fwait
ja
mov
add
cmp
mulb
vxorps
fildl
iret
fists
ds
ret
jns
jae
test
es
xchg
add
pop
mov
push
js
sbb
cmp
dec
iret
fs
arpl
xchg
or
fwait
inc
sub
jns
add
inc
pop
negl
cmp
add
jnp
xchg
add
frstors
ss
sbb
divb
fs
and
and
and
sbb
movsl
pop
mov
mov
fldcw
dec
xor
cmp
mov
push
ret
pop
push
jne
xor
mov
loop
std
push
clc
lock
cmp
mov
gs
sarb
aaa
frstor
mov
jo
cmp
adc
test
fstps
mov
cmp
dec
mov
pop
flds
mov
inc
mov
xor
sbb
inc
jns
dec
cmp
push
les
aam
jb
add
stc
fsubp
add
mov
jge
push
mov
dec
mov
mov
adcb
in
inc
mov
jmp
and
cmp
out
aaa
inc
mov
sti
push
aaa
push
mov
dec
in
or
add
cmp
loop
test
into
into
jecxz
sahf
or
sbb
push
outsl
ret
mov
cmp
outsb
pop
mov
sbb
inc
cmp
loop
inc
js
sbb
add
pop
mov
andl
mov
clc
les
xor
sbb
stc
mov
mov
in
or
cmp
xchg
dec
gs
imul
push
cltd
sub
cwtl
sbb
scas
pop
fs
es
test
sbb
inc
mov
sbb
xchg
ret
add
adc
inc
aas
rcrl
rcl
mov
sbb
loop
in
fsts
add
jnp
and
mov
stos
cmp
cli
je
push
add
adc
rcl
adc
add
add
scas
xor
adc
mov
adc
js
jns
lods
flds
inc
add
gs
sbb
fcomps
cli
push
gs
aaa
aam
fwait
ret
ds
out
add
movsb
das
or
sbb
or
negl
std
in
mov
or
and
jge
aaa
in
roll
fldcw
arpl
pop
jns
addl
jmp
stc
ljmp
mov
mov
xor
ja
aam
add
loopne
xorl
mov
jle
jge
or
in
movsl
aaa
add
or
cltd
pop
cmp
loope
mov
ja
fs
add
pop
jge
fisttpl
mov
lds
in
int
stc
adc
sbb
and
sti
mov
xchg
mov
or
push
lcall
not
add
adc
movsb
sub
aam
outsl
in
cmpsl
sbb
pop
fbld
fs
add
sbb
lahf
jecxz
adc
sti
movsb
sbb
iret
cmp
jecxz
mov
dec
mov
cmc
pop
pop
sti
cwtl
movsb
jnp
mov
inc
push
xchg
and
or
orb
jne
mov
in
sbb
addl
pop
int
jbe
mov
xor
mov
icebp
pop
movsb
js
pop
add
fdiv
inc
push
dec
mov
jecxz
les
push
aaa
push
fmuls
cmp
jecxz
mov
mov
fldenv
jmp
flds
mov
or
mov
cmp
cwtl
pop
or
loop
add
push
mov
insl
sbb
add
and
and
cltd
js
rcrl
cmp
lds
push
cli
jecxz
mov
cmp
arpl
movsl
xchg
pop
add
adc
fsts
mov
add
and
sti
inc
test
mov
divl
adc
and
add
xchg
fwait
cmp
icebp
in
sbb
cmc
push
fdivrs
shll
cmp
ret
mov
loop
iret
xlat
mov
scas
aam
and
and
sbbl
pop
sbb
js
incl
xchg
scas
inc
inc
add
ja
jp
mov
test
iret
sti
or
inc
add
lea
and
fs
in
inc
sbb
cmp
push
pop
adc
jp
inc
cmp
fld
cmpl
in
lds
jns
mov
and
pushf
imulb
mov
and
std
push
repnz
pop
adc
sahf
fwait
or
flds
mov
adc
jns
dec
push
shlb
in
inc
add
and
movsl
adc
xchg
movsl
dec
inc
xchg
pop
jecxz
adc
ja
test
movsb
dec
rcrl
addr16
add
and
jbe
test
fs
cmp
loop
cld
mov
xor
daa
call
test
lahf
sti
mov
fsts
out
and
sbb
and
cs
cltd
popf
mov
cmp
mov
mov
xchg
dec
add
and
pop
pop
or
sbb
arpl
iret
ja
sbb
cmp
inc
cltd
gs
aad
sbb
scas
push
jns
and
aam
gs
fwait
cltd
fs
mull
dec
movsl
data16
mov
sbbb
or
es
lcall
jnp
les
sbb
mov
inc
leave
cmpsb
jmp
fsubr
out
xlat
dec
adc
flds
stc
mov
jae
daa
sti
lea
stc
fcoms
jecxz
mov
sbb
dec
mov
and
inc
jns
mov
in
push
loop
pop
sahf
fdivrs
scas
adc
cwtl
mov
testl
lds
add
arpl
push
push
gs
cmp
in
rol
pop
pop
push
minps
pop
adc
pop
jmp
les
adc
ja
jns
push
cs
dec
in
jle
inc
jge
pop
inc
jo
stc
sbb
cmp
in
add
ds
cltd
mov
push
jo
mov
push
flds
and
and
add
sbb
fisubrl
mov
xlat
mov
test
fsubs
sahf
pop
inc
loop
gs
jecxz
movsb
add
stc
out
sbb
fwait
lods
pop
cltd
and
add
mov
loop
jo
test
dec
scas
movsl
mov
inc
lcall
js
fcomps
imul
test
clc
add
ja
dec
sti
repz
adc
push
call
cmp
test
movsb
dec
pop
sti
out
push
movsl
clc
mov
ljmp
ret
and
jecxz
aaa
call
mov
or
sbb
pop
mov
or
pop
dec
iret
jnp
dec
xchg
loopne
adc
ss
movsl
inc
pop
push
pop
inc
mov
cli
mov
imul
jecxz
push
push
std
js
sbb
stc
ret
ja
add
mov
pop
xlat
add
mov
into
add
mov
pop
mov
adc
jns
dec
inc
inc
stc
pop
add
mov
xor
idivb
cli
cli
sbb
sbb
adc
sti
lds
push
lods
orl
loop
leave
add
cmp
pop
push
iret
andl
icebp
xchg
mov
icebp
arpl
aad
or
cltd
mov
jecxz
cwtl
sbb
pop
pop
adc
popf
arpl
push
out
and
ret
inc
in
dec
sarl
popf
or
mov
pop
cmp
mov
out
mov
push
insb
mov
mov
rclb
test
popf
mov
movsl
mov
arpl
pop
ja
adc
sti
stos
push
ret
pop
cmp
test
pushf
out
fnstcw
mov
add
pop
adc
xlat
fimuls
xchg
fcom
jp
pop
pop
pop
ret
mov
adc
enter
adc
add
fs
add
arpl
cmp
jecxz
sbb
and
or
xchg
pop
out
call
out
cmp
add
sbb
cmp
sub
fistl
arpl
xchg
stc
fisttpl
arpl
mov
in
xchg
push
fstps
ret
or
jnp
pop
lock
testb
jp
xlat
lret
pop
inc
loope
push
jmp
mov
fdivs
pop
push
jle
movsb
aas
and
pop
test
mov
xor
mov
pop
je
add
or
in
mov
xlat
push
push
push
mov
loope
negl
dec
les
fcoms
adc
xchg
cmp
and
mov
bound
sbb
ja
and
and
pop
mov
jne
gs
xchg
mov
adc
ja
pop
call
sub
or
shlb
das
xchg
ds
ja
les
pusha
cli
and
cmp
hlt
mov
in
jo
add
mov
je
sbb
xchg
fs
js
fwait
imul
dec
clc
aam
dec
les
pop
dec
sbb
cwtl
or
jg
xor
sbb
sbb
cltd
test
divl
mov
fsubrs
cmp
dec
sbb
jp
lds
and
sbb
movsl
fwait
add
negl
push
cwtl
mov
pop
push
cmp
fistpl
xchg
xchg
cmp
icebp
sbb
inc
in
add
loopne
push
fstl
sahf
sbb
pop
add
add
sub
dec
out
cmc
mov
scas
sti
lret
cwtl
push
outsl
addl
popf
push
les
jno
xchg
pop
pop
fldcw
add
das
pop
xchg
inc
fstpt
push
mov
sub
testb
les
or
cmp
push
stc
leave
mov
movsl
and
jns
adc
in
mov
sti
mov
add
pop
adc
fsts
jmp
add
and
adc
mov
mov
js
aam
and
dec
mov
aas
lods
mov
insl
sbb
das
jp
out
and
push
add
arpl
push
mov
sbb
push
jnp
movsl
inc
jne
add
jns
jns
sbb
lods
dec
or
xchg
addl
mull
pop
data16
sbb
test
sahf
add
mov
bound
js
rorb
xchg
xorb
cmp
clc
negl
cltd
mov
test
mov
lock
nop
cltd
and
mov
loope
push
push
inc
sbb
dec
mov
add
fcomps
cmpsb
sti
mov
test
in
aad
push
test
and
rolb
movsl
outsl
fnop
push
mov
mov
pop
cwtl
jnp
pop
push
and
fdivr
mov
or
mov
pop
sub
sahf
cltd
jmp
fs
les
xchg
add
hlt
adc
jecxz
add
cltd
fistpl
or
push
push
popf
outsl
fdivs
add
or
jnp
pop
xchg
xor
cwtl
mov
sbb
add
arpl
pop
cmpsb
cmp
and
jl
ja
mov
sub
jmp
pop
fwait
cmp
jno
inc
movsl
sti
testb
in
xor
jecxz
pop
sbb
outsb
mov
adc
pop
movsl
pop
out
fdivs
stos
out
cli
mov
bound
mov
enter
dec
xorb
xchg
fsub
insb
fwait
leave
jo
fiadds
loopne
push
sbb
idiv
arpl
and
xchg
cwtl
mov
jnp
outsl
notl
add
jge
pop
add
fistpl
movl
and
fnstcw
test
cmc
sbbl
mov
gs
mov
push
add
cmp
mov
arpl
push
cmp
arpl
clc
fs
ret
cltd
adc
cmp
fisubrl
mov
xchg
and
or
sub
sub
clc
fnclex
arpl
jecxz
dec
add
and
push
mov
xor
data16
inc
cmp
out
ds
mov
mov
jle
dec
cli
adc
push
or
cltd
jb
jo
leave
add
mov
mov
cwtl
imul
mov
jmp
scas
in
pop
mov
pop
dec
sahf
fs
js
or
mov
mov
mov
sbb
sub
pop
repnz
sub
mov
arpl
cli
xor
pop
adc
mov
lret
cli
dec
aaa
aaa
icebp
add
inc
cli
and
sahf
and
jmp
add
push
ret
cmp
or
dec
and
jecxz
sbb
jecxz
sbb
out
inc
jmp
cld
loope
jmp
je
mov
inc
push
mov
add
cltd
cmp
sbb
fbstp
mov
jnp
pop
and
frstpm(287
cli
pop
mov
lret
inc
mov
xor
movsb
std
push
js
push
add
and
xchg
fadds
add
cmp
fwait
add
adc
mov
mov
adc
ret
xchg
js
dec
clc
cwtl
int3
xor
sbb
pop
ret
cli
ret
inc
je
in
iret
cli
aam
scas
pop
mov
movsb
rolb
push
and
popf
adc
inc
in
sbb
jns
dec
jmp
mov
cwtl
fs
sbb
sti
mov
mov
dec
cli
fisttpl
test
ja
cli
cwtl
mov
or
leave
out
bound
cli
sbb
and
test
outsb
flds
mov
negb
mov
sar
loope
roll
mov
out
jo
cmp
and
testl
sbb
sbb
and
push
cmp
out
xorl
addl
mov
mov
cmp
xor
aaa
pop
movsl
and
fsts
imull
js
mov
mulps
sbb
push
mov
jns
loop
cmc
insb
cmp
les
pop
lahf
in
xor
cmpsb
jb
pop
inc
arpl
out
jbe
sbb
stc
push
cmp
push
push
and
loop
mov
addr16
sub
dec
mov
jo
cmp
or
jecxz
pop
xlat
sbb
mov
aad
add
fsub
sbb
clc
push
rcll
aaa
sub
mov
rol
add
fadds
shlb
mov
outsl
lret
shlb
rcrl
pop
and
mov
mov
adc
ja
negl
insl
inc
mov
jne
sbb
and
add
cwtl
gs
add
bound
cli
ret
inc
test
dec
ja
push
pop
jecxz
ds
loop
pop
inc
mov
lods
ss
js
gs
add
ja
rcrb
inc
sbb
jge
mov
fisubl
xchg
fsubrs
mov
jecxz
push
adc
mov
xor
cmp
fs
sbb
inc
loop
arpl
pop
pop
fdivs
push
sti
cmp
aas
movsl
fbld
mov
fcmovnu
sbb
xchg
loop
hlt
std
adc
sbb
es
adc
test
outsb
fwait
jg
sar
cli
mov
add
cmp
movsb
test
fs
dec
jo
pop
leave
ret
push
add
rcrl
mov
cmp
pushf
push
and
movsb
testl
mov
jle
sbb
sbb
lds
xor
push
ja
mov
inc
jnp
dec
cs
out
and
in
sbb
and
add
leave
dec
fdivrl
xor
movsl
and
sbb
add
jo
inc
pop
scas
mov
mov
icebp
mov
fcmovnbe
in
mov
fstps
pop
rclb
mov
shlb
add
add
shll
mov
cmp
adc
cltd
sbb
sti
mov
sahf
aaa
pop
cmpsb
rolb
movsl
xchg
clc
xlat
or
jns
ss
jnp
les
mov
arpl
adc
pop
mov
dec
mov
mov
das
cltd
mov
dec
jne
jns
add
dec
lret
vmovapd
es
fs
scas
mov
adc
xorl
cmp
loope
cmp
and
sbb
cmp
xchg
xchg
out
inc
push
mov
xchg
fwait
push
sti
js
sbb
test
mov
and
xchg
add
cmp
push
jecxz
inc
stc
xchg
mov
sbb
sbb
and
jno
jne
push
arpl
out
inc
mov
xchg
mov
push
inc
sarl
adc
add
arpl
inc
fstps
out
movsl
sbb
mov
bound
xchg
adc
mov
idiv
xchg
jnp
ret
and
ret
movsb
push
test
shlb
std
mov
std
nop
cmpsl
jecxz
adc
cmp
pop
test
ret
dec
sub
inc
notb
gs
js
push
std
fwait
dec
lea
and
stc
lret
xor
rcrl
rolb
sar
push
test
lock
xorl
fisubl
lret
fwait
push
xchg
ds
into
dec
xchg
dec
in
sarb
add
adc
insb
fldenv
and
mov
cmc
fwait
aaa
clc
pop
mov
mov
leave
vpaddusb
cmp
rcrb
and
add
and
testb
nop
sbb
mov
repz
push
ret
out
inc
mull
push
mov
negb
xor
int3
movsl
and
xor
inc
aam
mov
out
ja
inc
dec
push
inc
jae
add
scas
push
cltd
outsl
fldenv
rcll
add
xor
jns
out
std
pop
pop
outsl
or
fnsave
add
push
inc
pop
cmp
jb
xchg
dec
adc
fistpl
or
adc
jg
bound
aaa
and
push
push
jnp
add
ja
add
int
xchg
pushf
or
dec
and
out
cli
mov
add
jecxz
fsubs
jle
pop
xorl
js
xlat
sbbl
sbb
pop
sti
add
sbb
cwtl
mov
add
sub
adc
aas
add
addr16
or
sti
jge
add
in
jmp
arpl
insl
clc
jnp
popf
push
dec
je
fistl
add
pushf
ja
rorl
adc
sbb
xor
repz
lds
cmp
fstps
mov
inc
and
les
jnp
adc
repz
pop
jnp
mov
flds
shl
or
pop
mov
out
repnz
xchg
cmp
cmc
testl
xor
sahf
outsl
xchg
pusha
add
fists
mov
cltd
adcl
lcall
cltd
mov
int3
mov
lcall
jmp
mov
mov
outsl
mov
lds
cmp
cmp
jecxz
cld
in
mov
sbb
cli
or
inc
sub
adc
sbb
cmpsb
fldt
js
flds
popl
add
fwait
std
aas
add
mov
mov
cmp
negb
add
inc
in
outsb
scas
inc
fwait
test
xor
pop
cmp
jmp
fyl2xp1
out
or
jbe
fcomip
inc
jns
jecxz
add
pop
xor
jbe
xchg
push
movsb
mov
pushf
jecxz
ss
cltd
fs
xchg
mov
push
das
shlb
push
cli
sbb
ljmp
lea
fdivr
inc
mov
push
mov
cmp
stos
int3
stc
cmc
push
pop
sbb
dec
cmp
nop
xchg
test
out
gs
pop
push
and
js,pn
clc
adc
sahf
xchg
sub
rclb
and
jecxz
mov
les
sbb
sbb
cwtl
loop
xchg
sbb
push
cwtl
or
sahf
fldt
inc
outsl
ficoms
push
mov
cli
push
sbbb
cwtl
jmp
sti
mov
scas
idivl
into
adc
cwtl
pop
les
xlat
xor
adc
pop
mov
sbb
test
cmp
pusha
jae
jae
xor
pop
pop
arpl
jae
mov
cs
push
push
cli
stc
fs
pop
les
stc
aad
xor
cmc
push
xchg
push
aad
adc
push
push
or
add
movsl
call
loope
leave
pop
and
push
stos
rolb
and
dec
and
xlat
or
arpl
out
push
data16
repz
and
cmp
adc
xchg
inc
sti
sub
fdivs
pop
cwtl
cmc
ret
jns
jnp
mov
mov
or
lret
inc
cmp
sbb
in
mov
daa
sbb
imul
fwait
inc
in
cmc
cmp
sbb
sbb
mov
sahf
pop
push
test
mov
add
lahf
scas
and
pop
mov
and
loope
fldt
sbb
out
mov
enter
icebp
lock
jmp
sbb
popf
pop
inc
push
js
push
scas
xor
movsb
outsl
cli
inc
cltd
mov
scas
fwait
adc
icebp
rolb
jno
sbb
les
stos
mov
stos
mov
and
add
pop
mov
pop
add
adc
js
add
sti
mov
into
sbb
push
inc
xchg
in
sbb
js
jnp
cltd
jns
xor
sbb
loope
loop
test
and
pop
cmp
mull
pop
mov
les
inc
jmp
negl
xchg
fs
jmp
push
xor
add
mov
xchg
icebp
movsl
add
xorl
movl
push
test
pop
rcrb
cmpl
mov
aas
cmp
cmp
mov
arpl
iret
fs
lds
sahf
cltd
xchg
mov
sbb
inc
mov
cmp
cmp
dec
sbb
mov
pop
mov
push
mov
sti
mov
mov
adc
cmp
icebp
in
sbb
aad
jmp
or
xchg
or
pop
rolb
lods
movsb
adc
jns
add
xchg
and
insl
filds
cmp
jno
mov
clc
les
pop
test
mov
mov
add
jecxz
out
loope
les
and
fwait
add
js
gs
cmp
inc
lds
fcmovnu
icebp
sbb
cmp
in
aam
push
jecxz
jl
popf
pop
xchg
add
fs
fwait
pop
push
leave
mov
ret
inc
fwait
lods
sub
sbb
and
cmc
jo
pop
mov
mov
push
les
cwtl
mov
cmp
scas
lret
pop
pop
movsl
jp
fildl
add
cmp
and
sub
push
xchg
jecxz
pop
movsl
dec
pop
clc
xlat
out
popf
jo
push
das
cmc
in
xor
add
inc
cmp
movsb
sub
xchg
cltd
mov
shlb
inc
push
cmp
pop
or
mov
add
lods
mul
cwtl
inc
add
fmull
ja
push
aaa
clc
add
test
push
pop
sbb
movsb
mov
xlat
pop
aaa
hlt
add
inc
push
add
jnp
sbb
cmp
std
dec
sti
xor
pop
mov
pushf
adc
in
and
mov
scas
add
sbbl
adc
jns
sbb
jb
lds
and
cmp
mov
pushf
jecxz
popf
cmpl
mov
and
inc
pop
lods
cmp
or
ret
js
jecxz
push
cwtl
testb
cltd
push
push
ss
sti
and
and
xchg
xor
testb
or
add
dec
add
push
sahf
loope
jmp
ficompl
cmc
ret
pop
dec
lret
movsl
xor
stc
inc
pop
cli
add
sbbl
jmp
cmp
mov
pushf
jns
dec
sbb
sbb
aad
xor
out
idivl
sti
xor
add
push
add
add
xor
and
cltd
movsl
fcmovnb
icebp
sbb
jnp
inc
mov
cmp
mov
das
and
repnz
cli
or
outsl
jnp
pop
iret
outsb
rorb
push
es
mov
nop
sbb
cltd
aaa
and
mov
aad
jae
mov
loop
inc
and
shl
not
std
or
lock
push
and
or
aam
jle
push
jo
cmp
sti
cmp
pop
xor
push
icebp
jns
fdivrs
pop
test
xchg
inc
fidivl
popf
push
adc
cmp
pop
pop
loope
and
xorl
and
ljmp
out
arpl
cs
dec
cmp
loopne
jle
pop
cmp
mov
pop
pop
loope
loop
idivl
mov
sahf
pop
sti
push
repnz
sub
pop
xor
add
fistl
mov
xlat
std
pop
dec
or
inc
mov
push
stc
add
fwait
lods
or
adc
pop
bound
test
push
sbb
roll
mov
jno
inc
sahf
mov
rolb
and
sbb
mov
fwait
loopne
mov
aaa
and
xchg
in
pop
mov
movsl
out
dec
mov
sti
adc
jecxz
push
xor
add
inc
jl
xchg
rcrl
fcomp
cltd
push
cmp
popf
ficompl
xchg
dec
aaa
or
push
or
mov
push
mov
lock
test
dec
shrb
jae
mov
stc
pop
repz
and
pop
pop
sti
les
rcl
cltd
sahf
xchg
icebp
xchg
fs
mov
xor
or
mov
in
leave
sbb
sbb
cli
loop
hlt
ret
and
xor
mov
mov
add
notb
pop
inc
or
lods
push
pop
mov
out
movsb
cmp
mov
sbb
leave
hlt
sti
and
fsubs
add
xor
mov
fyl2xp1
jns
mov
cmp
test
mov
ret
mov
in
fsubs
ficoms
sbb
or
and
cmp
push
roll
mov
cmp
pop
gs
ss
sahf
sbb
pop
fdivr
pop
sbb
and
jecxz
xor
xchg
ficoml
mov
xchg
jp
pop
dec
push
aam
mov
sbb
lret
lahf
sarb
adc
fdivrl
xor
cmp
ss
sub
jb
add
and
and
pop
sub
les
cwtl
andl
add
adc
and
pop
inc
mov
into
fs
jecxz
enter
inc
mov
pop
insb
pop
aad
shrl
stc
mov
imul
fcompl
mov
cli
or
in
xchg
testb
adc
outsl
inc
xchg
or
dec
les
push
or
fwait
sahf
inc
mov
add
and
add
data16
scas
inc
or
xlat
dec
loop
pushf
jecxz
fcoml
loop
or
mov
add
test
xchg
jb
jb
mov
mov
mov
pop
sbb
sbb
push
xlat
sbb
scas
mov
aaa
sbb
in
inc
or
xchg
pop
push
les
push
cmp
into
inc
jecxz
sbb
icebp
int3
mov
cwtl
sub
xchg
pop
lods
sub
push
scas
push
fisubs
sahf
inc
in
and
flds
push
dec
add
fdivr
push
inc
fwait
and
cmp
push
stc
sbb
xchg
pop
aaa
add
xor
ja
clc
push
xlat
sarl
inc
in
fldcw
data16
iret
cmp
test
mov
mov
sbb
ficompl
and
inc
les
sarl
add
ret
push
sbb
jge
and
inc
pop
mov
fcmovnu
cmpsb
stc
leave
cmc
and
xchg
mov
rolb
cltd
pop
xorl
clc
push
mov
push
and
sub
scas
shl
ja
mov
cwtl
add
ret
sub
or
popf
cli
push
sbb
ljmp
add
jmp
lcall
outsl
jnp
orl
les
es
clc
out
stc
sti
adc
push
test
inc
push
xchg
jnp
inc
and
sbb
sbb
or
add
cmp
jbe
bound
lea
in
cli
push
in
arpl
cmpl
xchg
xor
cli
enter
push
add
mov
pop
movsl
xor
icebp
pop
aaa
push
add
std
add
sub
ljmp
add
and
clc
sbbl
xchg
popf
add
jnp
mov
mov
mov
test
adc
inc
dec
xchg
insl
divl
icebp
stc
lret
inc
and
cmc
xor
aaa
jecxz
mov
dec
cwtl
jnp
cmp
or
push
cmp
xchg
mov
rolb
fisttps
mov
inc
pop
jle
adc
or
cltd
xchg
sbb
movsb
inc
lds
stc
pop
sub
add
push
lret
jnp
push
fadds
push
pop
cltd
in
arpl
or
mov
sbb
stos
sbb
jmp
js
test
cmp
sbb
gs
mov
sti
insb
adc
sbb
jmp
imul
negl
push
or
out
loop
and
add
mov
addl
push
testl
and
movsl
or
xlat
neg
bound
leave
int
cli
push
pop
and
ret
cwtl
xchg
scas
and
jmp
cmp
in
movsl
add
fisubl
jns
xchg
mov
adc
cmp
cmp
std
jb
testb
stos
aam
add
lods
add
and
mov
add
pop
or
fistpl
clc
fistpl
xchg
std
mov
push
cmc
pop
xlat
ret
mov
add
inc
adc
sbb
adc
add
cs
arpl
xchg
fstps
rorl
mov
push
sbb
xchg
mov
mov
add
fnstenv
sbb
cltd
dec
push
sbb
jne
cmp
aas
mov
pop
xlat
or
push
lock
sbb
pop
clc
fmuls
and
xor
les
leave
jecxz
aam
mov
add
adc
xor
mov
sbb
sahf
repnz
enter
popf
sbb
scas
arpl
popa
sbb
imul
clc
sbb
sbb
outsb
jecxz
hlt
aad
inc
fwait
test
and
rolb
push
add
loope
aaa
mov
movsl
gs
adc
mov
jns
fstl
adc
cwtl
pop
leave
adc
inc
mov
jne
push
jecxz
jns
add
xor
insl
add
les
imul
fs
aam
fxam
data16
inc
lahf
or
enter
andb
lahf
push
pop
int
pop
loope
fwait
sbb
mov
jo
inc
ljmp
test
enter
add
mull
add
iret
push
jo
pop
ret
or
sarb
test
sti
inc
push
shll
gs
or
xor
pushf
pop
fwait
push
cwtl
lcall
jecxz
adc
testb
lahf
jecxz
les
pop
frstor
jnp
test
mov
mov
popa
push
ret
scas
bound
fildl
push
sti
idivb
mov
and
arpl
test
add
xchg
mov
mov
sbb
popf
ret
ja
cmp
mov
push
fbld
xchg
enter
cmp
stos
scas
jb
out
cli
fs
pop
gs
cmc
js
movsb
xchg
fisttpl
jbe
mov
xchg
add
fcomps
push
loop
inc
aam
mov
in
mov
ret
sahf
stc
test
cwtl
aaa
mov
ja
mov
sbb
pop
pop
cmp
push
xchg
sbb
imul
in
ds
arpl
movsl
sbb
or
mov
aaa
and
popa
and
sbb
repnz
js
inc
in
cli
fs
adc
fwait
test
pop
push
jnp
mov
add
rcrl
popf
pushf
scas
fcoms
outsb
lock
das
loop
and
outsl
sahf
in
cmp
inc
jecxz
mov
xchg
cmp
daa
inc
aas
dec
add
pop
and
cltd
adc
pop
andl
mov
out
and
mov
fcmovnb
xor
adc
jns
movsb
inc
xchg
cli
adcl
addr16
in
jbe
jl
inc
and
aad
inc
pop
mov
test
scas
jns
dec
inc
inc
scas
adc
int
mov
das
inc
pop
fdiv
dec
ret
xor
sti
shll
test
sti
pop
jae
cmpsl
out
pop
lret
push
pop
mov
jbe
mov
sahf
aam
xor
sbb
sub
push
mov
cmp
push
mov
pop
or
pop
in
push
mov
sub
sbb
cltd
sbb
sahf
lcall
dec
cmp
loop
divl
mov
mov
stos
das
ljmp
jmp
mov
fisttpll
and
xor
testl
pop
adc
in
rcrb
lds
sahf
sbb
jns
inc
in
jge
ja
pop
lds
mov
jno
clc
cltd
inc
xchg
xlat
daa
mov
dec
ja
idiv
sti
adc
pop
inc
shll
jo
clc
fstpt
mov
inc
jo
mov
gs
adc
fadds
add
xchg
pop
and
push
cmp
sbb
repz
push
out
push
jns
aam
aam
popf
jge
divl
jbe
movsl
clc
xchg
popf
and
and
inc
jmp
xchg
xchg
cmp
movsl
es
inc
adc
ljmp
orb
push
icebp
cmp
add
mov
arpl
mov
fstpt
push
sar
push
stc
sub
pop
sbb
mov
popf
adc
fistl
sbb
out
fldenv
dec
std
fiaddl
sub
mov
sti
pop
jns
aam
mov
cmp
xchg
cmp
jns
push
mov
pop
sub
mov
loop
das
cmpsb
sahf
jmp
fcoms
aad
xorl
pop
dec
adc
mov
xchg
loop
jb
adc
popf
cwtl
or
cmp
jbe
pop
pushf
clc
test
sbb
in
ja
jae
sti
jnp
fwait
jns
and
movsb
mov
inc
mov
movsl
negb
jl
and
cmp
in
cmpsl
and
or
sbb
test
fs
insb
out
fiadds
aas
les
repnz
sbbl
pop
xlat
xchg
sub
mov
cwtl
ss
inc
or
sub
jb
inc
mov
repz
or
add
stc
les
imul
push
cmp
pusha
gs
das
out
push
psubb
mov
int3
and
test
and
sub
jbe
xor
jo
mulb
lcall
arpl
and
mov
pop
cmp
xor
adc
cltd
movsl
stc
sub
sub
loope
xlat
in
aas
add
cmp
fs
es
and
daa
out
mov
pusha
xlat
cmp
mov
xor
mov
push
mov
jl
inc
stc
mov
fnstsw
scas
push
adc
fldenv
fwait
add
inc
push
cmp
add
out
pushf
dec
stc
stos
cmc
in
fistpl
rcr
sbb
ret
and
xchg
xor
movsl
inc
add
fidivrs
adcl
cmp
cwtl
lcall
cmp
filds
adc
idivb
and
add
loop
sti
ret
push
mov
or
dec
clc
fcoms
cmp
add
pop
movsb
xlat
fsubrs
pop
test
xor
rorb
mov
cwtl
add
cld
les
in
mov
sti
es
arpl
or
popf
js
mov
push
rcrb
jg
out
fs
in
sbb
test
out
add
iret
cmc
nop
mov
fisttpl
xchg
add
movsb
bound
mov
clc
sbb
fwait
std
and
push
cwtl
jge
xchg
add
stos
dec
test
push
inc
addl
push
fs
loopne
iret
stc
cmp
lcall
into
xlat
push
xor
push
and
push
adc
pop
or
mov
dec
aad
cmpsl
fwait
adc
mov
pop
out
add
je
inc
mov
gs
sbb
movsl
xlat
xor
pop
fisubs
mov
push
clc
test
sub
xchg
sahf
scas
ret
scas
out
sbb
inc
stc
fadd
mov
xchg
fadd
sub
gs
dec
fisubl
lahf
or
loope
sahf
scas
mov
cmp
sub
cltd
lds
mov
fdivr
std
std
jb
movsl
icebp
add
fdiv
dec
xchg
insl
cmp
sbb
sbb
sub
jle
mov
call
xchg
test
lret
movsb
and
mov
inc
dec
mov
cwtl
arpl
in
dec
je
scas
cmp
movsl
mov
in
lcall
enter
sbb
gs
js
sub
lea
add
jp
ja
cmp
and
loop
sbb
sub
and
out
das
push
sahf
out
xchg
movsl
inc
fldl2e
cld
arpl
mov
out
xchg
xlat
mov
and
ss
sbb
jl
lret
jmp
js
cltd
push
stc
mov
incl
fwait
sub
mov
std
mov
mov
jmp
loop
cmp
sahf
insl
xor
inc
fldcw
xor
int3
xchg
in
jle
fsubrs
aas
movhps
xchg
sti
mov
lea
mov
mov
enter
or
pop
in
mov
jge
adc
mov
pop
xchg
inc
jge
dec
adc
mov
shlb
lcall
ss
push
xchg
mov
mov
fcoms
xchg
shl
sahf
push
xchg
sub
insl
mov
mov
cltd
xor
arpl
mov
aaa
add
and
cltd
inc
jecxz
push
arpl
jle
scas
cmp
out
sbbl
push
xchg
mov
add
js
andl
xchg
clc
popf
sti
jecxz
rol
xchg
in
cmp
fcoms
push
addl
cmp
jns
aas
adc
push
push
push
fs
adc
scas
push
test
xlat
int3
ret
lret
test
mov
in
xchg
aad
push
popa
add
add
mov
pop
pop
fwait
sarb
sbb
negl
lock
les
jl
fsts
add
cmp
mov
and
jns
aas
xlat
pop
fnstcw
movsl
push
idiv
pop
push
sbb
les
push
jnp
test
xchg
pop
iret
mov
push
scas
add
xor
aaa
ret
movsb
inc
in
pusha
mov
sbb
cltd
sub
sbb
fcom
push
pushf
shlb
jno
test
hlt
cmp
pop
roll
jnp
clc
sub
cmp
lcall
cmp
jo
sbb
aad
sti
jns
adc
mov
scas
movsb
vcvtsi2ss
mov
clc
and
mov
jno
mov
inc
bound
adc
imul
pop
insl
jo
stc
mulb
push
xor
vaddpd
mov
push
ja
push
pop
mov
jecxz
leave
sbbb
add
and
sub
pop
arpl
in
xchg
add
or
in
cltd
xor
js
pop
clc
ret
mov
loopne
mov
inc
rcrl
add
les
xchg
and
fistpl
in
cld
cmp
inc
jb
adc
pop
clc
mov
fildl
push
ja
test
and
inc
sahf
jnp
mov
and
and
hlt
adc
ja
and
iret
inc
into
scas
fst
fptan
inc
xor
xor
push
push
or
movsl
idivl
and
xchg
enter
jecxz
jmp
pop
mov
and
mull
cwtl
pop
mov
outsl
aam
xchg
sbb
pop
das
jnp
add
mov
icebp
rol
arpl
mov
add
loope
fsubrs
repz
push
xor
sahf
inc
js
jl
mulb
adc
and
mov
in
adc
inc
mulb
mov
xchg
sbb
and
arpl
add
popa
nop
das
and
in
push
in
jae
cli
and
pusha
stc
pop
cmp
ret
mov
mulb
mov
pushf
popf
fists
stos
fwait
test
lds
and
add
lea
sbb
sbb
xlat
inc
xchg
jp
push
push
mov
fscale
out
mov
adc
pop
shl
jnp
push
sub
push
add
loope
cli
notl
adc
and
movsl
arpl
mov
daa
mov
xlat
rorb
test
jb
jecxz
inc
inc
cwtl
sbb
pusha
clc
or
sbb
pop
arpl
movsl
addr16
pop
or
inc
dec
out
fstl
add
mov
adc
gs
adc
bound
dec
inc
in
sbb
mov
test
sbb
movsl
xchg
xlat
dec
push
or
cmpl
fdivr
add
add
icebp
dec
loop
or
jecxz
inc
or
les
inc
orl
inc
push
cmp
test
push
jno
mov
and
pop
adc
rolb
cmc
sub
sahf
dec
fdivrl
les
and
mov
add
scas
and
push
add
jecxz
add
cmp
arpl
and
push
lds
pop
and
push
sbb
push
sub
jecxz
add
inc
jecxz
pop
and
add
sbb
push
outsl
mov
xchg
add
stc
jmp
sti
in
sarl
movsl
cli
push
cs
sti
cmpsb
pop
sbb
sub
sbb
cmp
inc
lods
jnp
sti
add
jge
clc
bound
adc
sbb
lods
sarb
pop
add
push
hlt
add
jo
mov
fsub
or
push
test
or
push
test
and
and
aam
idiv
adc
inc
andl
or
cmp
pop
jecxz
lret
test
icebp
cmp
movsl
in
add
and
ret
dec
clc
mov
pop
sbb
movsl
xchg
mov
add
push
mov
test
sarl
mull
sbb
inc
mov
push
pop
sbb
test
cli
in
iret
inc
cltd
adc
lock
adc
adc
xchg
lods
jp
cmp
adc
dec
inc
or
inc
xchg
loop
scas
add
sub
ja
or
arpl
jmp
les
jo
ret
mov
shlb
test
into
pop
inc
js
cmp
movsl
jecxz
sbb
sahf
pop
dec
and
add
xchg
sti
cltd
ja
cmp
imul
mov
xchg
xchg
negb
inc
sbb
movsl
fdivrs
xchg
pop
cltd
push
inc
dec
mov
fnstenv
cmp
add
sbb
add
mov
mov
repz
les
lcall
mov
out
daa
fs
fsts
pop
fmuls
cmpsb
cli
mov
sbb
mov
or
imul
and
test
cmp
in
pop
mov
test
shll
leave
fs
pop
pushf
roll
cwtl
imul
pusha
leave
ss
ja
mov
ja
sbb
push
mov
jbe
mov
push
jmp
push
fincstp
fldcw
add
nop
inc
popa
inc
clc
int
call
aas
stc
movsl
testb
ja
test
inc
in
out
mov
add
mov
sarl
int
fldcw
adc
data16
push
push
cmpsl
cs
xor
sbb
popf
in
jecxz
testb
shr
pushf
outsl
pop
out
jbe
dec
out
cmp
or
ficoml
aaa
add
pop
and
sbb
lds
sub
and
push
push
sbb
inc
adc
fmuls
push
lds
mov
into
pop
xor
pop
push
aas
push
and
ja
cmp
dec
sbb
cli
loop
pop
inc
clc
push
inc
in
xchg
push
sti
sahf
sbb
add
push
imull
sub
in
pop
xchg
divb
adc
or
or
clc
push
das
pushf
sbb
push
leave
add
mov
daa
xchg
outsl
fdivrs
arpl
imul
mov
and
or
leave
les
fdivrs
cli
loop
insl
gs
jp
mov
push
std
jl
lds
mov
dec
mov
xchg
loopne
arpl
and
adc
xlat
add
fsubrl
popf
mov
add
int
orb
push
js
stos
iret
xchg
icebp
int
pop
stc
leave
xchg
aad
imul
repnz
mov
test
inc
add
hlt
pop
fcmovnu
mov
pop
sbb
cmp
xor
lret
xchg
cmc
lds
stos
xchg
in
bound
lret
dec
and
mov
cltd
fwait
test
pop
frstor
pop
cmp
lds
sbbl
pop
mov
pop
mov
imul
add
cmp
leave
xchg
push
fst
cwtl
cmp
add
sarb
andl
rcl
lcall
jecxz
xlat
or
in
push
xchg
test
fstl
stc
dec
xor
sahf
xchg
scas
stc
adc
sbb
push
addl
mov
jne
repz
ret
pop
adc
add
sbb
mov
mov
fmull
and
sbb
arpl
scas
mov
mov
add
sub
cmpsl
push
xchg
adc
mov
and
push
dec
sti
ds
mov
mov
adc
mov
sti
test
pop
adc
add
sbb
add
cmp
cmp
arpl
pop
inc
push
cmp
pop
pop
pop
popf
sub
icebp
dec
js
inc
jmp
rol
leave
fstl
sbb
ja
pop
or
cli
les
cwtl
sbb
cmp
xchg
push
xor
and
mov
int
inc
lret
jp
cmp
sbb
inc
inc
stc
daa
add
ja
pop
sbb
popl
lods
loopne
jp
cmp
jo
test
sbb
es
shrl
pop
jp
test
jecxz
mov
push
xlat
mov
push
ss
sahf
lds
stc
ja
jnp
or
clc
inc
outsb
pop
cltd
sbb
outsl
cmp
std
inc
bnd
jmp
clc
lds
shrl
cli
fcomp
dec
divl
mov
pop
in
in
bound
nop
and
jbe
pop
cmp
out
in
pop
dec
leave
loope
adcb
or
sub
ja
inc
pop
mov
push
add
lds
negl
push
jecxz
xlat
xchg
sbbl
or
test
in
pop
mov
xchg
pop
pop
sub
dec
push
and
filds
push
sahf
xchg
push
fdiv
jmp
mov
or
dec
fwait
mov
jb
in
fwait
mov
pop
mov
mov
les
mov
cmp
add
xlat
xchg
std
cld
inc
mov
push
jmp
cli
test
cmp
mov
in
add
es
sbb
cwtl
insl
jecxz
movsl
cmc
lods
push
call
add
aaa
xchg
cli
in
les
stc
sbb
mov
jmp
pop
mov
or
addr16
sahf
ret
push
lods
pop
fs
call
and
add
fadds
pushf
cmp
mov
js
vcvtps2dq
add
inc
clc
imul
jno
stc
les
mov
loop
xchg
jnp
fistpl
pop
pop
cltd
int
in
xchg
clc
ret
arpl
shr
mov
ret
mov
sarb
cmp
jns
dec
faddl
jmp
adc
adc
stc
pop
mov
pop
sbb
or
sbb
inc
xchg
xor
sahf
xchg
stc
cli
push
pop
fwait
xchg
fstps
sti
jnp
or
pop
cwtl
cmp
notl
mov
aas
push
js
loope
jmp
stc
push
gs
or
test
xor
inc
jge
xor
fs
jecxz
nop
mull
aaa
xchg
xor
test
pop
movsb
popf
sbb
popf
in
adc
mov
cmp
shrl
jp
mov
daa
sbb
neg
inc
inc
rcll
add
aaa
loop
fistpl
mov
or
jne
rol
stos
sbb
push
scas
iret
outsl
pop
and
xchg
pop
xchg
add
cwtl
add
and
inc
arpl
jmp
sahf
or
add
cmp
mov
or
fsubrp
mov
inc
arpl
mov
aaa
add
loope
mov
xchg
or
pop
sahf
popa
fmuls
orl
mov
in
dec
xor
jne
arpl
loopne
fldenv
add
js
loop
testl
or
sbb
pop
shr
test
outsb
push
addl
mov
test
xchg
pop
inc
pop
add
outsl
loop
cmp
xor
cmp
cmp
push
cli
pop
cmpl
sarl
pop
outsl
js
push
movsb
sub
std
in
inc
jnp
add
aaa
sbb
ja
fmull
rcrl
push
arpl
lcall
sbb
pop
hlt
int
sbb
adc
leave
inc
fwait
sbb
fld
dec
fs
loop
push
xor
mov
jge
and
and
xchg
xlat
sub
mov
mov
mov
stos
iret
cli
ret
notb
push
mov
shll
add
xlat
sbb
inc
popa
cwtl
push
fisttpl
jg
jp
iret
mov
mov
push
mov
and
sti
and
in
jnp
iret
outsl
aaa
out
jne
icebp
les
movsb
xor
stc
and
fstps
in
movsl
jecxz
sti
insl
mov
lcall
ret
stc
mov
jge
std
decb
faddl
jmp
mov
ret
lret
gs
pop
addr16
mov
repz
inc
fs
mov
insl
pop
inc
lds
sbb
dec
aam
inc
outsl
fnstcw
ja
xchg
inc
sbb
pop
fs
adc
js
jg
popf
or
xchg
pop
div
aam
sbb
ja
add
clc
and
or
and
cmp
dec
xor
lds
cmpl
sbb
push
adc
lea
call
gs
sbb
xchg
fisttpll
inc
sbb
movsb
mov
push
push
xchg
or
inc
je
icebp
pop
xor
divl
lcall
mov
sbb
fs
add
mov
add
sub
scas
fs
imul
iret
mov
push
sbb
cmp
in
in
pop
test
lds
orl
in
or
xlat
pop
add
push
dec
sbb
test
xor
leave
xchg
clc
cmc
adc
push
aad
adc
icebp
cmp
add
push
dec
or
mov
fisubrs
xchg
xchg
scas
cmp
pop
mov
push
push
dec
push
arpl
mov
add
movsl
cmp
adc
es
push
test
mov
inc
and
cltd
in
mov
aaa
fcomps
popf
mov
jns
test
add
add
addr16
cmp
cli
sub
insb
test
or
adc
lcall
push
andl
pop
push
and
das
iret
cmp
mov
mov
fadd
aam
dec
push
mov
jnp
shll
outsb
movsl
xchg
popf
jno
push
mov
mov
and
shlb
mov
sbb
and
sbb
aas
mov
mov
mov
pop
pushf
aas
nop
scas
sahf
pop
jg
mov
inc
sbb
cmp
pushf
dec
popf
test
dec
mov
add
xor
push
add
loop
add
fldenv
call
inc
push
push
int3
sahf
cmpsl
aas
pop
and
sbb
out
cmp
mov
pop
insl
xchg
push
loopne
les
mov
cmpl
adc
bound
inc
cmp
push
inc
inc
push
insb
ret
test
cmp
jl
fdiv
xchg
cwtl
xchg
mov
mov
in
add
mov
lods
xchg
pop
mov
lds
sbb
and
cmp
and
gs
aaa
sbbl
pop
mov
int3
icebp
sbb
inc
pop
xor
movsl
clc
fdiv
cmp
cmp
out
daa
xchg
ficomps
ret
aaa
inc
add
cmp
and
movsl
fwait
inc
or
jnp
pop
add
dec
and
adc
test
add
xor
lcall
mov
out
js
fiadds
jecxz
addb
test
jecxz
or
inc
jle
sti
adc
movsw
repnz
aaa
mov
or
and
mov
aaa
cli
repz
sbbb
cmp
cmp
jg
xchg
cmp
jnp
push
xchg
dec
lds
mov
out
cmp
cli
xchg
outsl
sub
jbe
pop
in
mov
sub
sbb
sbb
add
les
push
dec
jo
in
push
add
push
inc
ret
jecxz
mov
xchg
test
jnp
stc
aas
add
fwait
sbb
daa
mov
and
movsb
rcrb
mov
mov
fldt
cs
inc
ret
push
or
loop
sti
sbb
mov
cwtl
cmp
and
loope
ret
test
sti
pusha
pop
add
mov
adc
cmp
add
and
divl
add
aad
cmp
iret
fwait
jp
jge
in
lahf
in
sbb
out
and
je
imul
dec
add
fadds
repnz
lds
add
push
sub
push
shl
or
adc
out
outsb
or
fadd
fwait
inc
fistpl
xlat
rcrl
sbb
leave
popf
fld
fcmovbe
push
dec
sahf
adcb
push
jne
stc
fistps
js
inc
mov
in
xchg
sbbl
cmp
push
mov
ja
push
clc
in
movsl
aaa
rcr
add
lcall
arpl
jns
cltd
cwtl
inc
aaa
add
inc
movsb
std
leave
lahf
cwtl
jns
pushf
sbb
sbb
jb
inc
inc
inc
call
ror
outsl
popa
xor
fcomps
dec
out
aad
testl
loop
es
and
add
les
rolb
cli
xor
out
mov
idiv
xlat
rcr
add
pusha
in
dec
stos
cmp
les
add
inc
add
addb
adc
lods
push
lret
pop
pop
push
lods
stc
pushf
andb
testl
sbb
divl
ja
sbb
rorl
in
add
test
cs
xlat
mov
in
in
cmp
sahf
or
mul
in
lods
jne
les
push
fdiv
sbb
ret
push
and
jnp
push
inc
cwtl
mov
cmp
pop
sbb
add
fsubrs
fsubs
jbe
sub
cmp
cltd
fwait
mov
push
outsl
js
adc
push
fld
mov
fstpl
sbb
mov
add
sarb
xor
and
add
jnp
mov
fs
add
inc
sbb
pop
cwtl
ljmp
roll
pop
and
add
inc
ret
lret
jno
push
sarl
fyl2xp1
imul
adc
sbbl
lret
rolb
xor
xlat
std
scas
push
push
scas
test
cmp
inc
iret
cmp
in
or
stos
ror
and
int3
jmp
jge
insb
cmc
lds
mov
out
sahf
stos
imul
mov
addl
call
mov
cli
out
lea
mov
leave
arpl
mov
jnp
fwait
shr
lret
arpl
and
cwtl
pop
movsl
dec
mov
xor
or
inc
fwait
sahf
ret
ret
sbb
mov
cmp
pusha
inc
call
inc
outsl
add
inc
mov
out
adc
pop
xlat
cmp
hlt
lcall
add
xor
sahf
cmp
sarl
rcll
test
std
xchg
fldenv
inc
movb
pop
push
dec
xchg
adc
outsb
lock
or
xchg
ficomps
movsl
test
fldl
cmc
stc
fcoms
mov
aaa
sahf
or
jp
cwtl
and
dec
or
imul
mov
cmp
cmp
ja
sbb
mov
addr16
add
lock
fwait
call
movsl
add
fsub
cli
cmp
fistpl
leave
mov
pop
dec
lods
subb
sub
mov
sarb
clc
mov
and
cmpsb
sub
push
xchg
jl
push
daa
adc
cmp
jnp
adcl
add
add
mov
ret
sti
mov
and
xorl
mov
fs
cld
shrb
or
pop
mov
mov
inc
clc
test
push
add
cmp
test
inc
cmp
cwtl
popf
mov
pop
or
fs
mov
push
cmp
stc
loop
add
jnp
cltd
rcl
aaa
rol
cmp
test
pop
mov
inc
add
js
jns
inc
sbb
add
fcmovb
cltd
les
xchg
dec
xlat
scas
sbb
xchg
adc
add
add
sbb
sti
fdivrs
mov
repz
std
lea
movsl
jns
cmp
cmp
cmp
es
les
lret
cli
jle
fldenv
cmp
pop
mov
fmull
in
push
fbld
loope
xchg
jnp
divl
int3
sbbl
arpl
lds
adc
cwtl
in
scas
aaa
fs
push
push
rcl
add
in
arpl
jge
xchg
pop
push
addl
mov
mov
lcall
jmp
sahf
dec
sbb
push
lea
pop
dec
addb
ja
mov
mov
test
aaa
mov
int
push
mov
and
lea
sub
les
jno,pt
add
pop
mov
jle
cli
ret
mov
and
and
sbb
add
add
jnp
filds
mov
negl
adc
add
xchg
divb
das
in
cwtl
push
jp
sub
je
mov
jns
in
push
shlb
push
mov
mov
mov
fildl
cwtl
jo
cli
sti
add
pop
gs
mov
dec
xchg
add
inc
ftst
pop
inc
movsb
ficompl
inc
lds
idiv
aaa
cwtl
and
shl
mov
aam
pop
adc
add
aad
sti
mov
lods
in
add
sub
cmp
mov
insl
jno
aaa
movsl
das
add
fdivr
mov
sbb
inc
push
mov
icebp
cmp
movsb
sbbl
sbb
inc
fnstcw
aaa
xlat
adc
push
mov
icebp
ret
in
mov
push
dec
mov
aad
and
cli
mov
fisttpl
or
mov
xchg
in
mov
movsl
ret
mov
cmp
test
fldenv
fs
cmp
mov
and
cmpl
mov
sti
add
sbb
sub
dec
fs
cmp
push
js
cltd
rclb
mov
addl
sbb
lds
sub
add
test
popf
fsubs
add
in
fs
jne
xchg
sti
add
jns
iret
movsl
out
arpl
inc
jae
and
sub
pop
test
add
cli
add
mov
movsl
hlt
push
clc
in
popf
xor
movsb
push
push
cmp
fistl
or
cwtl
jns
jno
fwait
in
sahf
jo
cmp
inc
test
cli
test
inc
mov
cmp
out
lds
outsb
insl
add
and
cmp
cmp
mov
jecxz
lahf
sbb
js
jns
mov
push
insb
and
pop
flds
out
mov
je
adc
adc
xorl
and
inc
ss
dec
sahf
ret
gs
xchg
push
and
sbb
jnp
fstps
fs
inc
push
lock
cmp
clc
test
lds
adc
jno
fs
cmp
sbb
mov
mov
cmp
jnp
or
cli
scas
in
mov
testl
test
add
out
clc
add
inc
pop
push
sub
lds
scas
add
int
or
push
je
inc
add
movsl
pop
shl
adc
push
stos
cmpsl
push
mov
mov
add
in
mov
mov
stc
xchg
fs
sarb
xchg
sub
dec
sub
icebp
fcompl
cmpb
or
pushf
sbb
js
negb
call
mov
and
leave
pop
fld
and
testl
lds
xor
jnp
push
push
andl
inc
mov
pop
and
in
arpl
je
lret
gs
add
loop
aam
sbb
mull
movsl
mov
sbb
sbb
push
xor
pop
mov
pop
std
movsb
sbb
testl
inc
fwait
loop
fldenv
jecxz
lret
shrb
test
mov
mov
notb
cmp
fstps
ret
cli
mov
push
push
scas
add
push
adc
cmp
test
xchg
push
cltd
jmp
ret
fstps
mov
sbb
clc
inc
inc
outsl
xchg
dec
orl
out
jbe
ffreep
cli
mov
nop
cmp
jns
icebp
and
lds
stc
push
movsb
bound
outsb
add
mov
cwtl
push
mov
sahf
out
mov
jmp
sbb
mov
jge
cmp
mov
test
into
fidivl
imul
and
ret
xchg
sbb
jl
loopne
insb
scas
mov
xchg
test
bound
fdivrl
xor
in
add
out
pop
cmc
and
std
xchg
mov
add
cmp
push
subl
mov
adc
arpl
shrl
sbb
pop
inc
sbb
inc
popa
dec
sahf
pushf
cmp
sbb
mov
loop
ret
add
cltd
adc
sbb
sub
and
loop
mov
mov
sbb
mov
xchg
fcmovnb
add
push
adc
sub
push
sbb
xchg
pop
jecxz
adc
jp
adc
std
jle
add
jmp
xchg
jns
in
cmp
icebp
fnstcw
inc
ret
jmp
add
jns
sbb
gs
push
loope
push
mov
sbb
inc
lock
and
cmp
adc
pop
adc
popf
pop
inc
sbb
push
not
sbb
stc
pop
iret
xchg
sbb
test
test
or
cs
xchg
sarb
push
lahf
sbb
sbb
clc
pop
mov
shrl
sarb
sti
and
sbbb
lret
add
fldt
sar
test
rcrl
mov
sbb
fsubrs
negl
cli
in
xor
fcoml
mov
mov
jo
in
mov
gs
in
rclb
nop
adc
aad
jnp
and
sub
andb
in
repz
mov
pop
mov
fcomp
je
pusha
cs
fistpl
sti
movsl
lods
xor
addr16
sbb
sbb
cld
fdivs
or
iret
pop
add
mov
cmp
cmpl
cltd
pushf
cmp
or
fadds
aaa
gs
adc
sub
xchg
clc
shlb
sbb
and
adc
xchg
fwait
roll
cmp
xchg
and
mov
mov
cmp
mov
inc
mov
movsl
sbb
adc
sbb
cwtl
push
add
jbe
lds
and
mov
xlat
loop
bound
les
div
bound
mov
jb
jmp
sahf
rcrl
stc
or
addl
push
repz
jae
and
ja
js
push
jo
ret
pop
jo
fsubrs
lds
or
cli
sbb
sbb
push
aam
inc
inc
xchg
popf
mov
push
mov
scas
xlat
movl
xchg
addl
adc
sbb
push
cwtl
add
and
movsl
lret
jae
mov
adc
leave
mov
add
and
xlat
movsb
in
in
movsb
mov
in
pop
movsb
aaa
clc
mov
sahf
add
add
in
nop
mov
into
inc
rol
mov
sahf
mov
fistps
outsb
pop
pop
adc
cmp
lea
sbb
iret
jl
les
xchg
arpl
arpl
pop
and
mov
sbb
jns
sbb
add
inc
sahf
pop
into
add
inc
mov
jne
jbe
fs
gs
xor
xchg
pop
xor
movsl
push
mov
and
loop
iret
cmpl
aaa
jns
mov
ja
test
mov
out
sahf
fs
popf
mov
fildl
stos
loope
push
cwtl
aaa
and
ja
inc
sbb
sbb
js
comiss
ja
inc
jecxz
add
sbb
jns
add
rcrb
xor
icebp
aaa
out
sahf
flds
pop
cwtl
xor
inc
sub
mov
insl
stc
adc
mov
push
pop
lock
mov
ftst
int3
add
movsb
repz
movsb
iret
push
cmp
inc
xchg
cmpsb
add
fidivrs
lock
mov
cmc
mulb
cmp
add
fldcw
or
mov
sbb
loop
cwtl
push
and
cmc
stc
movsl
add
sahf
fdivs
jmp
shl
mov
cwtl
sti
in
dec
pop
testb
xor
fildl
movsl
push
outsb
xchg
dec
repnz
jl
inc
inc
pop
mov
add
mov
leave
xor
adc
loope
cli
sbb
pop
push
punpckldq
arpl
add
cwtl
jnp
mov
jmp
sbb
stc
inc
sahf
push
jnp
scas
fstps
ficoms
gs
test
add
jnp
mov
divl
les
fisubl
mov
ret
cltd
fsubrs
sbb
inc
iret
pop
movsl
sub
loopne
inc
test
adc
stc
fdivrs
mov
add
pop
add
cmp
out
bound
mov
fildl
or
in
sbb
sbb
sub
shrl
mov
popa
sbb
dec
cltd
sti
scas
and
outsl
and
mov
and
jecxz
cmp
lock
in
jl
adc
add
add
inc
cmp
shl
inc
icebp
sub
movsl
stc
notb
fs
push
push
jo
pop
idivb
push
test
stc
iret
out
stc
enter
lods
pop
fs
and
and
mov
inc
movsb
in
into
aaa
or
pop
and
lds
in
loope
cmp
xor
sbb
negb
dec
sbb
out
negl
das
cwtl
mov
inc
cmp
insb
mov
pusha
jnp
js
add
push
mov
fwait
xchg
and
push
in
mov
aad
stc
sbb
or
and
jge
in
mov
stc
pop
push
popa
cmp
mov
aad
ds
sbbl
and
stc
dec
fs
mov
fwait
outsl
aaa
aam
cmp
fwait
ret
jns
push
and
lods
jo
pop
test
xchg
test
add
mov
sub
push
add
add
xchg
jnp
adc
lock
ss
pop
or
pop
fwait
loop
jnp
cmp
or
mov
push
and
xor
movsl
xlat
and
add
push
loop
in
stos
sti
and
idivl
in
stc
into
ret
inc
pop
cmp
xchg
int
js
scas
pushf
gs
sbb
out
fwait
in
adc
scas
push
inc
sub
stc
push
dec
inc
jecxz
xchg
jns
rcll
cli
inc
mov
adc
push
fiadds
fildl
fmul
jl
popf
imul
cltd
inc
icebp
filds
cli
sub
and
or
in
jg
std
jo
xchg
mov
clc
enter
out
fcoms
pop
cmp
std
push
sbb
loop
mov
shl
lds
stos
and
fninit
push
jae
mov
cmp
sti
inc
mov
arpl
ss
sahf
shlb
and
sub
jg
rcl
sti
sub
orl
outsb
fstpt
mull
out
dec
iret
lods
outsb
cs
mov
pop
cmp
sbb
arpl
or
cmpl
push
fwait
cwtl
mov
inc
int
lret
fiadds
jnp
jne
and
out
ljmp
or
adc
gs
push
push
test
add
outsb
aaa
addb
mov
les
or
or
fld1
pop
jmp
mov
sahf
cmp
cli
stc
and
aaa
cmp
arpl
mov
call
test
mov
testl
test
inc
lock
icebp
sbb
outsb
mov
dec
sbb
mov
pop
fs
outsb
loope
popa
mov
dec
pop
push
inc
sbb
and
inc
xchg
pop
add
mov
jne
and
xchg
ja
testb
mov
fstpt
jnp
mov
fnstcw
inc
push
xchg
sti
movsb
mov
hlt
std
xchg
shrb
and
sbb
mov
movsb
std
stos
sti
sbb
lods
cli
int
xor
movsb
aad
lcall
add
add
stc
dec
movsl
imul
jae
xchg
cwtl
shrl
fbstp
imul
cmp
sbb
pop
sub
mov
std
xchg
enter
ret
pop
lea
cwtl
push
xchg
icebp
test
out
repz
mov
es
inc
jns
adc
pop
aaa
arpl
ret
inc
push
and
jo
sub
cmp
xchg
xor
icebp
pop
addl
pop
inc
push
cmp
sbb
out
inc
pop
out
mov
sbb
jb
std
fmull
inc
xchg
push
sbb
cmp
pop
mov
adc
lret
adc
loop
adc
movsb
inc
or
add
cli
pop
popf
stc
ret
out
mov
lcall
fdivr
in
jae
pop
stc
sbb
in
mov
cwtl
cwtl
js
push
movl
cmp
add
mov
cltd
mov
xchg
mov
gs
jge
stc
leave
jecxz
out
lods
mov
mov
xlat
ja
dec
dec
movsl
loopne
and
loop
into
jge
and
xlat
testl
xor
out
ljmp
pushf
sbb
mov
gs
sbb
inc
sub
jecxz
adc
jne
sbb
icebp
mov
ret
rol
xchg
negl
mov
movsb
sahf
cli
pop
movsl
rcrl
insb
lods
stc
sbb
in
mov
loop
mov
ljmp
push
jl
push
jle
movsl
cmp
pop
test
mov
sub
mov
push
ret
int
add
add
or
jecxz
push
xor
add
aaa
push
cmp
cli
mov
or
test
fs
ja
lods
loop
xor
push
rolb
pop
sub
call
sub
iret
push
aaa
sbb
inc
fwait
idivb
inc
fs
cmp
fsubrs
cltd
jns
fs
les
scas
hlt
movsb
cli
fcomps
cmp
mov
fsts
xchg
sbb
cmp
mov
and
cltd
xchg
fdivr
in
and
sub
popf
jmp
lods
lds
cltd
loope
mov
sbb
or
pop
ja
fnstcw
sbb
jb
cs
lahf
iret
add
push
in
into
adc
ret
fistpl
cwtl
fld
add
and
repz
rol
dec
mov
push
or
jnp
add
inc
sti
jae
or
mov
sub
jne
jl
outsl
sahf
outsb
pop
or
in
push
cmp
sahf
adc
mov
xchg
mov
cmp
sbb
or
add
sbb
sub
negb
and
stc
or
loop
add
push
add
mov
icebp
in
test
mov
pop
mov
sub
cmp
mov
ror
pop
leave
dec
sbb
popf
add
das
aaa
pop
fmuls
out
jl
and
xchg
bound
mov
fstpt
sbb
and
test
clc
push
adcl
xor
test
inc
dec
mov
outsb
cmp
pushf
outsl
test
lret
out
and
movsb
sub
lret
mov
in
mov
sbb
je
aam
loope
sbb
mov
push
jbe
mov
inc
push
cmp
sbb
push
mov
pusha
mov
jnp
ret
out
inc
ja
bound
test
sbb
mov
and
mov
out
push
xor
push
mov
movsb
mov
adc
cmp
lods
jg
and
ds
push
cmp
js
ds
stc
sti
push
xorl
cmc
xchg
push
pop
cmp
cmpl
pop
stc
dec
cmp
fldenv
pop
pop
js
arpl
negb
cwtl
and
jnp
dec
addl
push
xor
jle
loop
fwait
or
xchg
icebp
xchg
jns
mov
pop
jno
rol
add
pop
loope
fs
push
in
inc
call
notl
enter
movsl
add
cmp
sahf
shl
inc
cmp
sbb
movl
cmc
sub
std
lock
cmp
cmpsb
push
loop
aas
cmp
jo
ret
and
jnp
add
mov
inc
arpl
fnstsw
sbb
jns
adc
js
add
inc
pop
icebp
xor
fs
and
pop
and
xor
loop
sti
sbb
cmp
cmp
jo
stos
jo
in
push
sbb
jmp
not
pop
pop
loopne
inc
mov
pop
gs
nopl
in
div
adc
push
cmp
add
dec
inc
js
mov
stc
cwtl
lahf
out
in
xlat
flds
adc
xchg
movsl
in
add
clc
icebp
push
add
sbb
sbb
fcomps
pop
mov
add
jmp
scas
ret
pop
les
popf
nop
pop
cmpsb
roll
movsb
in
mov
mov
and
jns
jecxz
push
imul
sbb
xchg
cmp
cmp
xchg
or
jmp
and
inc
jns
ret
inc
cmpsb
pop
jae
and
add
xor
pop
and
cwtl
cmp
mov
clc
stc
mov
and
dec
mov
arpl
stos
fdiv
out
lcall
aaa
jge
lock
and
cld
jnp
lahf
inc
mov
mov
jecxz
cmp
fistpl
pop
xchg
add
not
adc
mov
js
adc
pushf
movsl
jecxz
subl
push
sahf
icebp
loope
fwait
cmc
fs
or
and
mov
addl
pop
jbe
xor
xchg
add
dec
gs
pop
inc
in
jmp
imul
sahf
js
fmull
push
repz
in
sti
aaa
jle
ja
std
mov
arpl
mov
sbb
in
or
mov
push
lock
movsl
mov
mov
test
pop
mov
mov
adc
dec
add
jnp
sbb
add
mov
sti
push
lret
mov
mov
cmp
in
push
adc
adc
imul
cmp
jmp
add
cmp
pop
pop
clc
mov
sbb
in
adcl
out
movsl
push
pop
add
cmp
in
xchg
lock
fsubr
push
fldl2e
mov
sub
mov
and
push
and
pop
or
scas
dec
cmp
fldenv
and
jnp
inc
mulb
cwtl
movsb
dec
pop
add
jmp
sbb
rolb
js
cwtl
stc
ja
mov
les
mov
mov
in
fcomps
sbb
les
test
mov
inc
cmp
or
loop
jecxz
cmpsl
outsb
cmp
cltd
fildl
cmp
test
mov
adc
loop
addb
icebp
clc
lds
sbb
push
jnp
cmp
lods
movsl
stc
enter
addr16
add
or
mov
dec
cmp
mov
xchg
in
lds
and
xchg
push
cltd
adc
mov
jmp
xchg
js
shl
mov
testb
pop
mov
inc
js
mov
inc
rcr
ja
mov
les
pop
sti
xchg
mov
sbb
mov
push
cmp
sahf
jge
inc
sbb
dec
mov
psubw
scas
xor
xor
mov
sahf
xchg
fstpt
xchg
movsb
int3
cmp
scas
sbb
clc
mov
add
sub
hlt
push
mov
push
mov
xchg
lret
xchg
and
sbb
jge
out
and
cmp
xor
adc
aas
adc
jmp
cli
add
sbb
cmc
enter
cs
cmc
inc
mov
push
addr16
faddl
fdivr
sti
arpl
movsb
aam
lds
fildl
xlat
movsl
out
and
jnp
inc
inc
in
rcrb
rcll
les
dec
or
in
dec
cltd
pop
jle
lds
mov
in
bound
fiaddl
movsl
push
mov
xchg
nop
jns
movsb
neg
push
jecxz
inc
mov
inc
out
pushf
movsb
test
lret
or
leave
mov
or
cli
pushf
cltd
sbb
pop
rcrb
and
idiv
dec
push
pusha
lods
xchg
mov
rcl
icebp
js
xlat
loopne
loope
cmp
sahf
dec
lret
mov
and
add
mov
xor
sti
cmp
mov
mov
pop
mov
and
cmp
arpl
push
pop
mov
or
and
add
sahf
and
xor
mov
outsl
aad
mov
out
push
out
imul
mov
and
pop
adc
pop
push
ds
dec
pop
dec
sbb
in
push
sbb
or
es
mov
les
cmp
inc
movsb
push
and
imul
aaa
in
and
rcrl
pop
push
addw
xorl
fmuls
lahf
jecxz
push
rclb
push
adcl
sbb
cmp
mov
js
push
cmp
roll
jo
jmp
bound
dec
das
imulb
jo
pop
push
test
pop
cmpb
lret
add
sub
sbb
les
mov
js
fwait
addb
xchg
cltd
jo
loop
idivl
aaa
adc
sbb
push
test
leave
cltd
jo
les
add
jecxz
push
outsb
fiaddl
jle
ja
pop
sti
pop
sbbl
in
add
or
and
scas
movsl
inc
imul
mov
clc
inc
sub
arpl
jl
das
cmp
test
movsl
and
push
jae
sub
xorl
cmp
fs
movsb
loop
add
add
fwait
add
dec
gs
jecxz
adc
mov
push
popf
and
ret
and
xlat
lcall
xchg
sub
or
fadds
dec
pop
js
jns
movsl
fcmovnbe
in
xor
add
or
loop
mov
or
add
imul
sti
sbb
or
inc
pop
push
lds
mov
adc
pop
cmp
mov
pop
cmc
add
and
scas
imul
adc
lds
and
lods
test
lds
xchg
pop
jns
inc
xchg
ljmp
sti
add
mov
idiv
jmp
les
xchg
or
xchg
outsb
test
jnp
cli
loop
pop
mov
movsl
push
inc
mov
mov
sti
shll
int3
pop
testl
shll
outsb
or
pop
ret
les
xchg
in
xchg
repnz
aam
outsb
inc
and
or
loop
push
push
push
cwtl
or
les
and
inc
in
mov
jo
xchg
cmp
sarl
ret
jb
popa
lea
mov
dec
adcl
inc
pop
out
sar
pop
stc
popf
add
jae
cwtl
xchg
mov
mul
pop
pop
inc
aaa
sbb
outsl
inc
movsl
outsl
cmp
loop
fsts
mov
aam
popf
jne
adc
mov
add
xor
and
cltd
sbb
mov
inc
icebp
add
or
jnp
pop
add
adc
sub
ja
aaa
push
flds
and
inc
ljmp
mov
inc
popf
add
not
nop
andl
leave
add
inc
push
fucomi
stc
inc
sarb
jns
adc
fildl
adc
sti
push
or
pop
pop
mov
mov
cmpl
inc
and
pop
sbb
aad
outsb
scas
lea
icebp
test
ret
mov
fildl
xor
mov
and
out
dec
mov
sub
inc
lahf
or
push
pop
sbb
sbb
in
adc
fwait
inc
cmp
rcl
or
shl
pop
fsts
adc
mov
test
adc
loopne
movsb
sub
inc
daa
sub
cmp
inc
adc
add
sbb
push
pop
xchg
and
and
sbb
adc
xor
inc
xlat
lods
aad
push
adc
popf
pop
dec
out
fidivl
or
fdiv
fsincos
xlat
jns
xchg
stc
in
dec
testl
sub
pop
pop
sbb
fwait
lahf
mov
sbb
push
sbb
incb
pushf
in
mov
js
xchg
lcall
sub
les
ja
xor
rcll
idivb
enter
loopne
pop
test
sbb
not
and
fwait
push
sahf
rorl
and
dec
xlat
jbe
or
push
push
inc
inc
fsubrs
idiv
scas
pop
push
inc
jmp
push
or
cltd
sti
mov
jo
add
sub
add
fstps
pop
push
gs
arpl
scas
push
sub
es
pop
adc
cmp
inc
jno
test
cmp
xchg
sub
fdivs
js
xor
xchg
pop
push
ds
das
jns
outsl
xchg
nop
sbbb
cmp
push
out
xchg
xlat
and
xchg
rcll
jecxz
divl
mov
and
fadd
jo
cmp
push
sbb
and
mov
and
pop
sbb
clc
add
fwait
cltd
bound
sti
xchg
mov
push
mov
adc
add
xchg
pop
js
outsl
js
fimuls
mov
stc
push
add
sbb
jb
lds
jmp
js
test
or
add
pop
mov
mov
arpl
shl
xor
rorb
push
mov
push
movsl
pop
icebp
inc
in
add
xor
js
sarl
sub
add
add
jne
mov
mov
test
filds
gs
add
and
lock
rol
loop
lcall
in
xchg
ret
mov
jecxz
add
xchg
push
sti
stc
pop
mov
test
mov
xchg
in
xchg
stos
out
aaa
adc
cmp
add
jecxz
mov
fwait
stc
daa
cmp
loop
jns
outsl
aam
dec
les
xlat
and
sbb
int
cmp
push
imul
aaa
xorl
bound
add
add
int3
sarl
ret
subl
scas
scas
ja
movsb
rolb
insb
jmp
lods
stc
or
jecxz
or
cmc
fadds
sub
jnp
pop
mov
pop
arpl
loop
and
and
jl
fwait
cltd
xchg
add
xchg
cmp
daa
insl
sbb
aas
in
push
pop
in
xor
in
das
fdivrp
fdivr
mov
mov
cmpsl
cs
cwtl
std
pop
test
dec
fcmovne
test
fwait
mov
cli
and
add
fsts
aaa
adcl
sub
dec
iret
fcomi
repnz
sahf
xlat
loope
jbe
adc
outsb
movsl
imul
xchg
mov
test
stos
aaa
sbb
inc
or
imul
in
sbb
push
leave
movsl
cwtl
test
cli
push
add
pop
mov
or
inc
xlat
mov
mov
or
adc
js
adc
push
iret
push
jnp
add
dec
mov
jl
sbb
jnp
aaa
add
addl
aad
and
xchg
add
cmp
or
mov
lret
loop
in
les
xchg
push
js
inc
mov
sub
imull
das
mov
sbb
mov
push
push
and
xchg
sbb
pop
fwait
add
cli
inc
cmpsl
cmp
cmp
or
pop
outsl
loop
xor
and
inc
mov
xor
pop
fs
jne
jnp
lcall
mov
test
cmp
and
sahf
xchg
mov
sbb
add
and
in
icebp
and
push
push
inc
stc
jp
sub
leave
jae
jmp
jns
and
leave
jp
mov
jge
mov
cmp
fcomps
arpl
jecxz
xchg
popf
aad
flds
subb
cmp
xor
rcr
ret
movsl
ret
in
pop
mov
push
in
push
cmp
lret
push
push
jecxz
inc
xor
jnp
pop
mov
cmp
adc
rclb
jo
ljmp
mov
xchg
repz
cmp
inc
xchg
in
add
inc
out
mov
push
adc
pop
aas
or
sub
mov
add
fimull
and
xchg
add
inc
jp
dec
pop
mov
inc
xorl
fldenv
add
mov
push
xor
push
test
sub
loop
and
cltd
mov
imul
loop
add
pop
dec
fcomps
xor
adc
addl
sbb
adc
push
nop
cmp
movsb
mov
fwait
rcrl
sub
cmp
mov
sbb
adc
xchg
jnp
cmp
insb
pop
notl
ljmp
mov
lods
adc
addl
les
ret
adc
sbb
imulb
icebp
cmpsb
sbb
ja
mov
je
sti
mov
pop
jl
add
xchg
fistpl
add
pushf
mov
test
js
into
out
pop
in
push
cmp
mov
cmp
cmp
sar
lret
sbb
add
cmp
mov
int3
push
inc
pop
les
sbb
enter
jl
mov
add
xchg
movsl
add
dec
in
sbbl
mov
fwait
mov
cmc
add
sbb
and
stos
or
fsts
sub
sub
test
xchg
ja
xchg
jg
cwtl
push
push
lods
shrl
cmp
add
fsubs
and
les
mov
inc
sti
cmpsl
sbb
pop
ljmp
setnp
mov
sbb
inc
mov
bound
mov
add
pop
sbb
and
inc
sbb
loop
mov
jg
dec
push
jno
jns
andl
push
ja
loope
test
ja
push
ret
loop
std
mov
or
push
add
inc
bound
push
stos
cmp
mov
in
das
popf
test
into
jb
gs
aad
or
pop
jns
scas
lret
mov
xchg
push
add
inc
fwait
and
add
cmp
shrl
movsl
inc
push
imul
xchg
ja
dec
inc
pop
jns
mov
rcll
jg
mov
fwait
adc
pop
js
lock
lahf
xchg
movsb
mov
sbb
loop
shl
inc
and
cmp
in
sbb
aaa
jle
arpl
pop
push
cwtl
mov
dec
sbb
fwait
inc
lds
push
push
or
jnp
mov
mov
pop
loop
cmpsl
sahf
xor
shlb
outsb
add
xlat
les
rol
das
stc
push
xchg
movsb
xchg
scas
add
imul
pop
movsb
and
pusha
lods
fs
jo
jecxz
out
sti
dec
mov
lds
push
mov
mov
sbb
ds
mov
pop
xlat
jge
and
cmp
stc
push
inc
sti
xchg
or
mov
test
adc
fstps
pop
test
sbb
jbe
push
popf
les
lcall
neg
sbb
pushf
pop
stc
ficomps
test
and
loop
mov
sarl
repnz
addl
hlt
js
jo
fdivs
and
jmp
fdecstp
mov
icebp
jecxz
stc
push
test
and
dec
adc
sbb
scas
add
push
sti
add
mov
loop
mull
enter
pushf
or
test
fndisi(8087
pushf
jle
icebp
and
gs
and
mov
sbb
lods
stos
sahf
inc
fldl
mov
inc
aam
scas
cmp
arpl
jo
pop
xchg
push
aas
or
lahf
mov
jo
jecxz
xor
push
out
mov
add
jge
jbe
jecxz
lock
imul
ret
aaa
outsb
in
dec
pop
and
fwait
idiv
and
add
movl
call
clc
dec
sahf
lahf
push
mov
inc
push
enter
lods
sbb
mov
and
sub
das
add
jns
iret
mov
test
sbb
outsl
and
inc
sub
xchg
pop
clc
push
jbe
push
ja
push
mov
inc
jae
bound
jns
pop
movsl
jns
xor
fcoms
cmp
fs
push
dec
mov
jecxz
push
movsb
cmc
out
in
or
mov
sub
dec
outsl
dec
outsl
mov
xor
cmp
push
sti
xchg
pop
adcl
sub
inc
xchg
jns
xor
arpl
xchg
popa
popf
xchg
mov
jb
in
mov
loope
xlat
mov
cmp
aaa
add
push
outsl
mov
add
dec
in
adc
bound
scas
and
sbb
cmpb
cwtl
cmpsb
sbb
xchg
outsl
vpsubd
adc
pop
inc
ret
and
xlat
pop
shlb
add
add
cmp
rcrl
add
fwait
rol
shlb
in
les
jnp
jp
sti
or
mul
or
stc
cmp
icebp
push
js
jnp
sbb
fs
je
xor
jecxz
dec
sbb
fidivl
push
dec
adc
out
lds
stos
mov
out
inc
sbb
push
sbb
aad
fdiv
pop
les
xor
mov
adc
fstps
push
outsl
in
gs
flds
inc
add
and
arpl
and
fwait
js
bound
iret
cltd
stos
cmp
jns
dec
or
js
push
test
jb
add
test
cwtl
pop
mov
or
leave
cmp
rclb
fiaddl
je
xor
inc
cwtl
xchg
cmp
cs
xchg
cmpsl
mov
and
adc
inc
movsb
mov
sbb
add
pop
mov
inc
sbb
out
inc
rep
and
xchg
ss
inc
cmp
outsb
shl
push
push
push
jnp
pop
and
push
sbb
jp
mov
adc
in
sbb
das
sub
loop
jl
stc
cmp
and
shrb
mov
ljmp
sub
push
pop
in
lds
movsl
fwait
jb
jbe
stos
icebp
mov
pop
and
mov
pop
in
pop
or
add
outsl
data16
sbb
aaa
mov
cmc
loop
add
sbb
jo
push
adc
in
imul
or
pop
fdivrs
add
push
fadds
jb
xchg
gs
movsb
xchg
in
or
add
rcrb
pop
pushf
pop
adc
inc
jle
aaa
sti
repz
mov
pop
aam
fs
nop
push
lahf
sbb
mov
and
mov
fstps
jno
pop
loop
sbb
sti
jae
mov
cltd
xlat
mov
mov
cmp
mov
sahf
pop
jns
push
movsb
inc
into
jae
xlat
les
lcall
addr16
cmp
fs
sbb
xchg
lds
xor
js
mov
and
sbb
jns
xor
jo
cmpsl
inc
test
jns
notb
iret
cmp
xchg
leave
out
insb
xor
mov
add
mov
sbb
inc
das
jns
scas
lods
push
faddl
aaa
fisubl
iret
and
out
dec
xor
jecxz
ret
xchg
inc
or
sbb
cwtl
inc
loopne
hlt
std
out
mov
test
push
leave
or
mov
ss
in
adcl
sbb
or
les
gs
test
mov
jns
mov
add
sbb
test
ret
std
add
mov
jb
xor
stc
add
push
aad
shrl
pop
lcall
inc
pop
fistpl
sbb
mov
cmp
cltd
xchg
icebp
movsl
add
pop
mov
jmp
lahf
lds
adc
in
cmp
add
mov
out
sub
fildl
in
pop
sbb
sbb
rcll
add
jo
dec
pop
in
and
mov
jl
shll
outsl
movsb
and
sbb
mov
jb
xor
pop
les
test
test
mov
mov
stc
in
pop
fistpl
cli
inc
cmp
lods
add
mov
and
fcmovu
sbb
sbb
xlat
or
cltd
dec
out
call
out
push
mov
in
jns
push
push
or
mov
sbb
pop
push
mov
dec
test
xchg
into
mov
cmp
jecxz
mov
pop
lods
scas
or
cwtl
gs
icebp
popf
push
fdivrl
and
dec
fildl
add
adcl
mov
fcmovnb
test
in
in
addr16
cwtl
lret
int
push
mov
js
orl
test
sbbl
jb
pop
mov
fdivrs
xlat
jae
into
inc
mov
in
testb
xor
fcmovnbe
cmp
cli
pop
jnp
mov
or
addl
xor
fs
mov
cmp
jbe
fisubrl
lds
cli
das
cmp
popf
add
jo
pop
fucomip
jns
mov
icebp
adc
mov
push
inc
push
int
sarb
lods
icebp
mov
and
fldenv
aam
xacquire
push
fwait
xchg
jns
shll
inc
pop
jge
adc
dec
insb
dec
jmp
jge
mov
cwtl
popf
pop
inc
mov
sti
fildl
cmc
lret
in
and
cmpsb
insb
aam
and
xor
rcrl
or
jecxz
xchg
lcall
push
xchg
sahf
movsl
xor
daa
jne
ret
int3
and
stc
cmp
fldenv
adc
inc
fwait
repz
cltd
pop
mov
out
fidivs
in
ret
rorl
cwtl
mov
jmp
and
stc
xchg
pop
test
sbb
mov
jp
inc
cwtl
mov
jmp
add
cwtl
mov
add
cli
movsl
pop
or
add
push
mov
push
sub
or
cmp
fsts
les
jb
loop
push
push
dec
mov
repnz
jno
loop
mov
cltd
js
pop
cwtl
pop
ljmp
mov
out
fwait
adc
in
movsb
aaa
mov
pop
ljmp
pop
rcll
pop
cmp
adc
push
das
xlat
xchg
hlt
adc
cmp
mov
ss
insl
les
dec
add
lds
xchg
divl
xlat
xchg
imul
arpl
mov
push
std
jns
mov
adc
xor
loop
jg
in
adc
mulb
in
push
and
int
sbb
inc
mov
pop
push
lea
adc
loope
jns
aad
mov
in
daa
mov
sub
xor
and
negl
fildl
xor
add
clc
push
mov
mov
jg
call
fmuls
xchg
test
fildl
push
out
adc
pop
inc
loopne
adc
js
mov
adc
mov
loop
fdivr
add
xor
add
out
adc
cmpsl
movsl
xchg
inc
and
xchg
or
mov
xchg
bound
sti
jecxz
stc
mov
lahf
cwtl
cmp
and
add
pop
cltd
hlt
mov
ret
cs
popf
xchg
add
cltd
adc
sbb
iret
cmp
and
and
mov
xor
cmpsl
push
pop
jno
inc
popf
shlb
sarb
mov
or
or
pop
push
fdivs
lds
pop
aaa
fnstsw
pop
push
add
push
insl
pop
sbb
mov
sbb
push
loop
pop
sarb
push
icebp
clc
cwtl
and
mov
sbb
mov
push
clc
test
stos
stc
add
test
xor
mov
or
xchg
fistpl
fwait
movsb
mov
add
push
fcom
push
jp
stc
jle
mov
sub
in
jbe
xchg
xlat
sahf
es
add
sub
and
pop
aaa
fwait
in
sub
mov
adc
mov
pop
adc
and
aas
rclb
or
xor
sbb
push
sub
popa
pop
jecxz
jno
test
not
mov
je
add
icebp
inc
pop
add
test
dec
js
push
cli
dec
mov
push
fsubs
ficoms
ja
loopne
loop
cmp
and
movsb
shrb
mov
cmp
xlat
push
pop
leave
cli
mov
loope
fldcw
aaa
xchg
jmp
or
mov
and
das
out
loop
ret
inc
push
jle
xchg
and
add
inc
xor
adc
add
sbb
add
xchg
fstl
sbb
pop
fildl
mov
pop
mov
outsl
sbb
roll
aaa
les
pop
out
cwtl
scas
pushf
pop
jo
test
sahf
mov
cs
fs
cmp
add
testl
add
add
ja
popf
push
inc
sub
mul
or
lcall
sbb
pop
cltd
stc
ret
pop
lret
dec
or
jg
test
loope
cli
pop
jb
int
shl
mov
mov
inc
cmp
mov
loop
outsl
movsb
ja
in
lds
and
sbb
xchg
dec
fcoms
add
aaa
add
lock
dec
jns
sahf
sbb
mov
cltd
cmp
mov
pop
dec
inc
outsl
stc
and
inc
cwtl
das
not
add
sti
aaa
adc
sbb
pop
test
mov
shrb
add
sbb
and
sub
lds
addl
js
ss
ja
and
adc
outsb
mov
idivb
mov
add
pop
push
fsub
mov
pop
outsl
pop
mov
sbb
cmp
int3
sbb
in
cltd
icebp
cmpsb
jecxz
add
adc
sbb
mov
pushf
inc
jnp
pop
addr16
or
inc
add
and
aas
push
push
stos
jmp
stc
dec
jnp
cmp
out
ss
mov
mov
and
sarb
jmp
mov
jge
clc
sbb
roll
adc
sahf
mov
test
pop
pop
fwait
or
inc
movsb
sbb
or
movsb
clc
xchg
mov
js
jns
scas
cmp
pop
in
imul
test
leave
push
cmp
and
mov
mov
test
and
pop
icebp
ret
movsb
test
cltd
inc
cmp
bound
add
in
sbb
sbb
push
inc
cli
sbb
iret
les
dec
mov
xchg
test
in
fsts
fildl
out
jecxz
add
aad
and
sbb
sbb
or
inc
movb
sar
js
jnp
pop
jg
sbb
stc
ds
and
mov
out
ret
je
add
repz
lds
ret
dec
pop
clc
push
sar
fwait
subl
test
pop
ficoms
xchg
pop
mov
lret
dec
enter
rcrb
outsb
fcom
xchg
icebp
add
cwtl
fwait
cmc
or
sbb
scas
sbb
sub
cmp
xchg
and
dec
scas
lods
mov
cwtl
test
movsb
cmp
push
cmp
mov
repz
add
ret
shll
pusha
cmpb
add
js
sbb
mov
cmc
jmp
sbb
scas
push
aas
push
call
icebp
sti
ja
fidivrl
add
mov
mov
and
test
jmp
loop
sahf
sarl
sbb
lods
leave
test
mov
mov
mul
xor
rorl
fwait
clc
icebp
fcomps
jno
and
add
xlat
cwtl
add
popf
adcl
and
mov
fdiv
jnp
movsb
mov
outsl
jmp
fs
sbb
orl
cwtl
xchg
adc
mov
test
out
test
cmp
movsb
add
hlt
cltd
pop
xchg
pop
fstps
lds
push
ret
frstor
hlt
and
and
andl
loope
clc
mov
mov
popa
push
ret
fcos
xlat
fistpl
sbb
lcall
aaa
or
bnd
sbb
pop
lds
fwait
popf
lds
iret
cmp
or
repnz
test
mov
mov
pop
lds
mov
mov
popa
cwtl
movsb
ficomps
jmp
sbb
push
add
adc
add
inc
sub
dec
std
push
adc
arpl
mov
movsl
and
pop
xchg
mov
insl
and
mov
dec
inc
jg
loop
pop
cltd
jmp
repz
and
pop
add
xor
cmp
adc
cltd
sbb
test
in
mov
arpl
xchg
jns
pop
sarl
or
ficoms
sub
ds
pop
lock
add
lds
pop
rolb
stc
sbb
jnp
push
pop
mov
add
aaa
cltd
repz
add
pushf
xlat
jo
mov
clc
clc
sbbl
adc
inc
xchg
outsb
orl
ret
add
fldenv
dec
mov
popf
gs
cmp
jno
and
add
xchg
and
cmp
loop
inc
push
idivl
jo
flds
aam
cld
dec
outsb
bound
cli
sub
xor
push
sbb
lds
hlt
sarl
sub
test
add
fcmovnb
xchg
and
jp
je
xor
faddp
add
fyl2xp1
arpl
test
stos
cltd
push
xchg
mov
rcrb
or
pop
ret
cmp
fnclex
aaa
shl
std
cmp
mov
mov
xor
outsl
pop
int3
mov
jb
mov
add
and
xchg
xchg
aaa
add
cmp
scas
mov
jl
and
test
mov
icebp
rcl
and
mov
sub
xchg
or
push
cmp
cltd
mul
jnp
adcl
fsts
xchg
jo
in
fwait
cmc
les
aas
adc
mov
push
sbb
dec
and
ret
push
mov
inc
sbb
movsl
sub
jg
rcrb
enter
ja
aaa
int3
popa
xchg
cli
pushf
push
loope
add
pop
pop
gs
add
popa
xchg
idivl
lahf
inc
inc
aaa
pop
mov
cmp
in
das
ficoml
xchg
arpl
cmpsl
adc
loop
in
popa
movsl
in
stc
sbb
sbb
in
cltd
sub
mov
pop
and
mov
cli
hlt
mov
xchg
pop
sbbl
arpl
push
add
movsb
in
inc
hlt
cmp
push
mov
movsl
pop
inc
jecxz
xchg
cmp
pop
and
imul
cmp
cli
pop
cwtl
add
inc
rol
popa
lock
xor
dec
jle,pt
xchg
mul
and
pop
fdivrs
sbb
les
pop
test
js
push
pushf
or
rcrb
ret
xchg
cs
cwtl
jg
mov
insl
leave
xchg
mov
idiv
push
inc
jecxz
pop
jne
mov
pushf
xchg
pushf
mov
jns
icebp
mov
imul
fdivs
xchg
leave
sahf
fxam
leave
in
data16
xchg
ljmp
loope
add
cmp
cmp
in
adc
ja
in
sahf
jns
aad
add
sub
mov
addl
pop
mov
pop
mov
lock
sbb
test
mov
test
les
xor
int3
push
fwait
mov
iret
shll
cli
test
inc
fsincos
std
sbb
inc
in
clc
pop
jecxz
xor
lods
mov
arpl
aaa
movsl
mov
cmp
cli
jecxz
pop
mov
fisubrl
aad
and
sti
idiv
inc
daa
and
out
dec
iret
out
and
roll
ljmp
add
aaa
fisubs
shl
in
add
test
push
movsl
inc
sbb
sbb
movsl
cwtl
sub
gs
jae
sti
lods
sbb
fistl
and
pusha
push
sub
sbbl
popa
les
sbb
mov
xchg
sbb
cmp
movsl
dec
daa
outsl
notl
inc
fs
mov
xchg
lds
lret
ret
loop
in
xchg
sbb
fidivrl
push
push
jge
xlat
inc
repz
outsl
int
test
lock
cwtl
sbb
mov
test
dec
js
or
push
jecxz
inc
lret
sahf
shll
pop
pop
adc
rcll
cmp
arpl
adc
pop
ret
sbb
push
popf
push
in
adc
mov
test
notb
or
cmpsb
adc
cli
sbb
inc
gs
sbbl
adc
sbb
je
xor
pushf
jns
adc
fldenv
xchg
jg
adc
fstpt
lret
xor
ds
fcoms
cli
pop
shl
pop
fistpl
loope
pop
mov
jecxz
or
and
jecxz
mov
mov
loope
notb
mov
cmc
roll
lds
dec
insb
pushf
push
scas
add
shll
and
stc
push
adc
mov
jnp
sbb
sbb
and
push
cmp
lods
pop
sub
jecxz
in
xchg
jle
pop
jae
push
mov
push
pop
pop
inc
mov
cmp
and
cmp
in
aas
xchg
add
mov
cmp
pop
and
pop
icebp
push
movsl
js
xchg
out
mov
cmp
pusha
in
push
push
sbb
inc
cli
lds
int3
mov
aad
cwtl
xchg
inc
jg
lods
sbb
aas
popa
and
xchg
add
sbbl
stos
adc
add
push
or
and
andl
and
inc
cmp
xchg
in
movsb
test
aaa
mov
and
stc
xchg
sbb
dec
rorb
sbb
movsb
pop
or
push
add
lds
cwtl
xchg
cmp
ficoms
in
xor
cmp
push
fcmovnu
mov
in
pop
and
sub
call
and
pop
cmp
inc
sbb
syscall
mov
loop
and
pop
and
scas
fistpl
push
movsb
testl
or
dec
cmpl
aad
jmp
sahf
jno
add
loop
scas
cli
lds
adc
aam
add
shl
mov
push
xlat
sti
push
jns
mov
add
cmpsb
xor
repnz
add
pop
and
movsb
push
jecxz
and
mov
fildl
idivb
mov
adc
inc
arpl
adc
xor
fadd
idivl
lods
pop
stc
cltd
push
adc
xor
and
inc
arpl
mov
or
push
sub
jns
clc
out
cltd
cmc
and
fwait
sbb
or
test
mov
iret
mov
add
sahf
frstor
sbb
mov
pop
pop
jl
cs
stc
sub
fiaddl
push
pop
inc
mov
movsl
push
push
push
sbb
mov
outsl
arpl
test
xchg
pop
cli
std
mov
lea
xchg
pop
add
fs
js
out
fwait
jmp
sbb
jg
enter
arpl
fldenv
stc
inc
stc
push
in
push
push
scas
or
adc
bound
or
stos
shrb
xchg
aad
test
jns
sub
fstpt
ljmp
push
ds
cli
jecxz
divb
sbb
in
jl
pop
in
out
add
test
mov
jecxz
adc
sti
add
cwtl
add
xlat
bound
add
pop
and
add
fs
adc
cmp
jecxz
adc
and
cmp
sti
inc
bound
cltd
cs
xchg
bound
fwait
cwtl
mov
cmp
in
or
sbb
mov
pop
js
xor
mov
js
cmp
stc
nop
add
push
jecxz
push
cmp
and
fmuls
pop
mov
sub
ffree
cli
mov
inc
or
cwtl
push
jnp
push
iret
cli
negl
clc
pop
gs
push
test
js
sbb
aaa
jne
mov
imul
push
mov
push
cwtl
inc
mov
sti
inc
pop
xchg
sti
push
cwtl
jecxz
gs
adc
cwtl
div
or
loop
xor
stc
aad
pop
dec
lea
add
xor
add
mov
into
add
sbb
fidivs
push
add
in
or
cmp
sbb
cmp
push
xlat
cmp
loope
js
inc
adc
jle
cwtl
lock
mov
aas
xchg
and
mov
jb
add
and
iret
jnp
not
scas
cmp
pop
xchg
push
push
and
clc
sub
sub
mov
enter
xor
cmp
movsl
imul
or
mov
inc
ljmp
mov
jecxz
fildll
test
icebp
mov
lds
test
add
in
jb
cltd
aad
ja
pop
sti
adc
add
sbb
and
push
loop
lds
jecxz
hlt
fldenv
addr16
scas
xor
xlat
stc
mov
jnp
add
fdiv
sub
xchg
add
cmp
std
in
push
aad
leave
ds
in
test
rcrb
in
xchg
dec
movsb
les
out
leave
movsb
xchg
pushf
outsb
fsubr
test
dec
inc
fwait
insb
enter
pop
push
mov
mov
cli
cmp
mov
mov
and
mov
push
jnp
fwait
sahf
mov
clc
jo
and
shll
or
iret
add
std
and
push
outsl
scas
inc
cmp
dec
popf
add
pop
jnp
js
sub
cmp
mov
inc
mov
sbb
and
sbb
movsl
jnp
mov
xchg
mov
inc
xor
iret
loop
mov
sbb
pop
fwait
jmp
and
rcll
xlat
mov
mov
xchg
mov
test
sbb
jnp
cmpl
pusha
push
mov
inc
in
icebp
and
test
xor
mov
adc
inc
movl
je
shlb
ret
sti
ret
inc
dec
repnz
sbb
clc
rcrb
fwait
push
add
lret
jo
arpl
lods
cmp
pop
add
and
fcoms
arpl
jp
mul
das
mov
loope
ja
mov
std
dec
imull
lds
test
jae
pop
xchg
scas
sbb
mov
xchg
jns
aad
cmp
and
call
out
arpl
sbb
and
xchg
test
neg
hlt
jns
adc
ret
adc
mov
sub
sbbb
xlat
sbb
push
push
adc
cli
negb
arpl
push
les
xor
push
pop
sbb
cli
xchg
push
mov
push
loop
cmp
xchg
or
sbb
mov
insl
in
and
push
rcr
into
aaa
lock
pop
jecxz
push
cmp
bound
cltd
dec
sahf
cwtl
ret
xchg
stc
inc
sbb
push
sbb
push
dec
mov
push
les
rcll
ret
loop
movsl
mull
jg
ret
cmp
xchg
mov
lock
js
enter
fstpt
leave
ljmp
sbb
push
js
xchg
addl
pop
movsb
repz
and
cmc
inc
ja
inc
adc
pop
mov
into
jns
inc
add
mov
adc
aad
in
leave
mov
into
mov
sahf
xor
ljmp
jl
insb
sahf
mov
lahf
cmp
shl
pop
xchg
ja
insl
mov
popa
adc
sti
cli
shrb
repnz
or
clc
jge
pop
add
sbb
clc
jge
sahf
pop
int3
mov
and
sbb
pop
cli
js
or
sub
sbb
rolb
push
jns
dec
outsl
xor
lret
pushf
sbb
rcl
mov
jne
movsl
pop
sbb
les
pop
sbb
mov
mov
push
push
fisttpl
push
lret
lea
mov
mov
fwait
sbb
jecxz
rclb
push
scas
or
fiaddl
xchg
cmp
dec
ss
mov
repnz
test
jns
lcall
add
adc
cmp
out
or
leave
fwait
arpl
mov
scas
lds
fstps
outsb
fildl
insl
mov
push
in
and
pop
sbb
movsb
push
push
lock
xchg
mov
jge
in
mov
mov
sbb
negb
jns
cmp
fsts
cld
sub
mov
cmp
push
jg
lahf
loop
in
jno
sahf
sub
xor
xchg
sbb
or
sub
or
pop
dec
ficomps
cmpb
or
dec
shl
sahf
or
cld
dec
xchg
xchg
hlt
dec
sahf
pop
xor
and
inc
test
cmp
pop
xchg
pop
arpl
sti
fmuls
mov
and
sub
inc
push
stos
pop
rclb
xchg
loopne
dec
sahf
imul
mov
xchg
sub
cmp
imul
stos
jno
mov
lret
cli
xchg
add
mov
add
test
jnp
push
jge
lahf
test
mov
arpl
and
jne
push
fnstcw
push
imul
sti
mov
cmp
ret
aam
or
fildl
aam
hlt
push
pop
or
dec
shrl
mulb
sahf
xlat
cmp
cmc
pop
iret
xor
xorl
mov
clc
sub
sub
mov
pop
fs
mov
sub
cmp
notb
movsl
in
and
dec
inc
loop
pop
inc
mov
arpl
adc
sti
jecxz
hlt
les
out
fcmovnb
dec
inc
lods
push
and
iret
sbb
add
out
xchg
jecxz
cli
add
and
and
push
xor
fildl
mov
jb
aaa
sbb
mov
mov
cwtl
pop
clc
push
mov
pop
jp
sti
popa
and
aas
in
xor
mov
adc
les
lcall
insl
jno
sbb
cmp
mov
fmull
fs
jne
test
add
ret
movsl
loop
xlat
iret
adc
xchg
xchg
divb
ja
mov
xchg
test
rol
add
aaa
xchg
mov
inc
push
cltd
add
sbb
icebp
jno
mov
sarb
inc
clc
jae
aas
and
jns
mov
stos
out
jae
sbb
movsl
and
leave
jp
sbb
ja
jge
lds
pop
fwait
cmp
aam
movsl
cmp
cltd
aaa
cli
aad
test
inc
dec
cltd
nop
add
and
inc
mov
iret
xchg
in
and
cmp
lock
ss
mov
das
push
idivb
mov
xlat
int
mul
pusha
arpl
cmp
and
and
addl
pop
int
call
pop
test
mov
sbb
mov
inc
adcl
test
cmp
mov
push
es
mov
scas
and
inc
adc
cmp
xor
test
divl
mov
and
adcl
or
aas
and
movsl
pop
loop
into
out
test
sbb
aaa
mov
mov
cmp
ficompl
mov
or
adc
cmp
fsubs
xlat
iret
ret
fs
jp,pt
cmp
clc
pop
inc
xchg
jns
push
add
pop
bound
jnp
ja
test
and
sbb
test
sti
inc
pusha
fsub
or
sbbb
popa
xchg
aaa
sub
dec
inc
add
push
mov
mov
adc
lret
mov
mov
sarb
fwait
inc
sbb
fmuls
jns
push
xchg
aam
mov
fsts
repz
ljmp
fistpl
push
mov
in
aam
stc
jmp
cmp
loop
imul
or
push
and
mov
stc
dec
into
push
aad
aas
inc
loope
movsb
add
mov
sti
mov
cmp
push
out
flds
and
fnstcw
mov
jnp
stos
movsb
cmp
add
mov
jmp
xchg
fcoms
and
lds
cwtl
mov
or
movsl
filds
sti
add
sbb
and
pop
cmp
add
and
sub
inc
into
lea
add
in
pop
mov
xor
xchg
imul
scas
cwtl
andl
or
rol
sbb
cli
and
mov
jmp
test
add
push
sub
and
shl
outsb
add
adc
fcmovnb
nop
pop
addl
push
sahf
xchg
sbb
pop
inc
sub
test
dec
ret
sti
xchg
xchg
add
pop
les
or
inc
sbb
or
cli
push
fildl
sbb
loop
add
test
imul
sbb
mov
loopne
lds
dec
push
mov
push
es
in
shl
add
js
inc
out
jns
fidivrl
inc
jne
lds
call
sbb
sbb
add
jbe
ja
or
cmp
testb
and
ret
int
add
notl
daa
clc
add
push
inc
xchg
btcl
loope
and
fmuls
fwait
pop
test
idivl
mov
leave
dec
inc
loopne
mov
gs
out
gs
cmp
fwait
addr16
push
inc
lock
push
inc
cs
mov
in
fstpt
or
pushf
in
xchg
popf
daa
adc
pop
xchg
sbb
jns
test
xchg
xabort
push
in
pop
mov
sbb
sbb
test
loop
ds
jnp
imul
pop
or
cmp
test
in
push
les
pop
push
cmp
cltd
or
mov
cli
test
jl
arpl
cli
push
imul
and
lds
mov
notl
mov
xor
imul
jecxz
pop
jb
sti
ret
pop
fs
xor
inc
cmp
sub
inc
sub
pop
in
dec
add
clc
cmc
add
dec
sub
xchg
mov
xlat
sarb
das
adc
jno
xchg
sbb
add
sahf
icebp
pop
add
add
pop
pop
inc
add
and
repnz
pop
inc
fiaddl
movsb
xorl
test
mov
add
pop
ret
clc
cwtl
fstps
push
or
rclb
sbb
cwtl
movsl
call
mov
sbb
cmp
outsl
inc
and
inc
adc
pushf
inc
testl
les
loop
negb
pop
stc
clc
inc
add
jmp
popf
xchg
or
jns
xor
pusha
cmp
outsb
inc
pop
imull
incb
clc
mov
xlat
pop
xor
sbb
repnz
add
jnp
pop
aad
hlt
cli
movsl
addl
clc
sub
scas
and
mov
aaa
pop
inc
sti
xor
jns
or
rol
jp
mov
stc
hlt
and
fwait
dec
and
mov
mov
sub
mov
mov
mov
outsl
jnp
inc
icebp
test
xchg
add
aam
push
scas
mov
xor
jnp
push
pop
add
cmp
pop
fwait
pop
xchg
in
rcrl
mov
xchg
fldcw
jb
je
ficompl
lret
nop
arpl
negl
mov
or
adc
test
adc
pop
push
sbbl
iret
pop
cwtl
repz
xchg
sbb
ss
out
xor
sbb
push
cmp
cmp
dec
fistl
pop
sub
popf
mov
mov
mov
fdivr
sbb
and
mov
jns
pop
sbb
aaa
js
sti
fistl
fs
sahf
repz
mov
add
xchg
jecxz
popl
stc
imul
cs
pop
das
les
jnp
adc
add
in
xlat
cltd
push
add
mov
add
or
sahf
inc
xchg
sbb
inc
mov
fadds
ja
mov
jnp
push
jae
jle
push
dec
outsl
test
sbb
ja
mov
jnp
cmp
xlat
iret
cmp
pop
xchg
movsl
pop
sub
les
mov
sub
sti
pop
pop
ljmp
add
sbb
pushf
cmp
xor
add
jnp
mov
pop
ja
aaa
iret
stc
sbb
push
jne
movsb
sti
dec
js
pushf
jecxz
push
cmp
add
mov
xlat
faddl
push
movsl
mov
lret
xchg
jno
pop
adc
les
inc
xor
jl
cwtl
jmp
movsl
das
dec
or
mov
sti
mov
gs
negb
push
mov
push
fwait
jle
dec
iret
fadds
icebp
push
cmp
leave
dec
jo
inc
arpl
sahf
sbb
pop
fs
mov
ja
fcmovnu
xor
cmp
push
adc
cmp
ja
and
cmp
fisttps
mov
cmp
pop
inc
iret
fidivl
mov
push
lret
iret
js
stc
dec
fldenv
ja
pop
imul
or
dec
arpl
cltd
inc
sbb
popf
push
add
adc
mov
mov
ret
adc
adc
in
sub
mov
and
or
and
jo
ret
ds
and
jecxz
pop
call
in
fwait
xchg
bound
pop
fcomps
xor
add
in
mov
sarb
and
push
int
pop
xlat
adc
pop
and
cmp
notl
add
jecxz
or
fistpl
jecxz
xchg
inc
mov
add
sbb
popf
arpl
cli
pushf
dec
sbb
dec
mov
sub
add
mov
faddl
push
cli
loop
or
rcrb
pop
mov
psubusb
xchg
enter
xor
mov
cmp
cmp
js
lods
and
sbb
gs
add
and
clc
mov
lds
divl
shll
mov
jecxz
xlat
xor
mov
out
test
push
dec
mov
pushf
push
js
out
pop
fdivs
xchg
add
fwait
cmpl
sub
lds
stc
loope
les
lds
pop
loop
fdivl
aas
sbb
xchg
idivl
dec
sbb
ja
mov
adc
pop
or
in
jecxz
loop
rolb
add
outsb
aad
cmp
stc
fdiv
fwait
add
arpl
cmp
push
add
add
and
mov
negb
pop
jge
fisubrl
inc
sahf
inc
imul
lret
mov
pop
sbb
sbb
orl
jle
dec
aad
imul
mov
add
jle
shrb
loop
inc
test
or
repnz
push
sbb
push
pop
adc
and
addl
fstps
cmp
inc
mov
int3
popf
jp
or
fs
inc
sbb
mov
loope
xchg
arpl
jo
adc
les
xchg
pop
iret
outsl
mov
pop
stc
sub
rol
in
cmp
inc
pop
movsl
dec
jle
xchg
clc
cltd
jg
mov
cmp
mov
daa
and
lds
add
sbb
jo
fadds
les
mov
sbb
pushf
xlat
push
add
imulb
and
cmp
cmpb
xchg
fwait
and
cltd
xchg
jo
aaa
jb
cli
xorl
or
in
sti
lds
int3
aaa
mov
mov
outsl
inc
test
push
fs
cmp
add
pop
or
lds
adc
jns
icebp
fs
push
inc
repnz
fiadds
sbb
pop
ja
lret
icebp
les
aaa
cmc
stc
cmp
fwait
cwtl
dec
sti
mov
add
cmp
and
inc
sti
arpl
popf
mov
sbb
and
test
rcrl
pop
sbb
push
jae
jbe
xchg
or
xor
inc
in
jge
jnp
cmp
mov
testb
inc
dec
push
jmp
repz
dec
pop
dec
add
add
pop
cmp
lea
jg
loope
jne
add
test
shll
ja
push
lds
test
xchg
clc
inc
adc
cmpl
inc
add
jle
add
js
jp
inc
mov
mov
add
lds
adc
insl
movsb
in
nop
mov
and
mov
push
sub
sbb
gs
push
daa
repnz
fildl
push
inc
mov
dec
outsb
pop
shl
and
mov
test
mov
dec
test
add
repz
cmc
fadds
inc
push
sub
jl
or
jnp
cltd
insl
in
loope
cmp
jl
cmp
out
negb
aaa
testb
and
sbb
push
mov
cmp
ret
shl
mov
test
test
pop
jmp
dec
jmp
fsts
jnp
les
imul
ja
daa
adcl
jae
call
outsb
and
and
xchg
adc
in
xlat
clc
add
add
leave
xchg
pop
or
arpl
rol
pop
inc
jne
cmp
fcom
ret
ret
pop
flds
mov
ficoms
push
test
and
mov
xchg
and
xlat
sbb
pop
in
sbb
sbb
jl
lds
ss
sub
outsb
push
mov
popa
stos
notb
dec
sbb
pop
in
jnp
sbb
fdivrs
cltd
and
add
and
xchg
adc
addb
mov
pop
stc
stos
arpl
jbe
fimull
test
inc
negl
push
push
add
fsubs
cmp
pop
push
out
shll
pop
sti
sbb
ret
sti
outsb
rclb
push
mov
or
data16
push
sbb
sbb
jne
clc
jo
adc
loop
cltd
mov
xchg
aaa
nop
dec
sahf
cmpsl
mov
xchg
cmp
adc
jno
jecxz
add
xchg
loope
mov
add
cmp
cmp
cwtl
inc
and
sub
push
pop
and
stc
gs
cwtl
jecxz
and
fadds
cwtl
and
outsb
add
or
mov
add
or
and
das
xchg
adc
inc
jnp
mov
pop
scas
fsubrl
add
dec
ror
loop
xchg
or
push
cmp
cltd
pushf
aaa
pop
sbb
js
jg
sbb
push
add
fidivrs
ss
and
jo
clc
jnp
loope
mov
cli
jmp
lahf
sbb
adc
mov
aaa
les
mov
subl
fsubrs
lds
outsl
gs
sub
test
and
mov
test
imul
aaa
aad
ja
fsub
mov
loop
icebp
jmp
ret
hlt
cltd
popf
pop
leave
jno
and
ficomps
push
mulb
push
in
sub
mov
jge
test
fcmovbe
sarl
in
and
xlat
rcll
mov
pushf
loope
or
pop
cmp
push
xchg
fcmovnbe
js
or
ret
shl
push
sti
mov
mov
in
nop
movsb
push
repnz
jnp
mov
cmpsb
push
cmp
adc
cwtl
add
mov
and
sti
in
mov
aad
add
push
inc
inc
clc
pushf
call
adc
jg
jl
mov
inc
sbbl
ret
push
xchg
cmp
cmp
sub
lods
outsb
pop
sub
daa
adc
stos
jl
movsb
sub
pop
fcoms
cwtl
jb
lret
mov
neg
call
fs
push
mov
sub
xchg
lds
or
outsb
ja
movsb
ret
push
les
movsb
adc
in
add
mov
es
sbb
lds
ret
and
jnp
add
inc
mov
xlat
sbb
cmp
jle
push
and
leave
js
cwtl
sbb
xchg
jo
dec
fadd
push
movsl
in
movsl
shl
aas
cli
inc
pop
cli
pop
mov
scas
hlt
add
loop
int
dec
cltd
or
jns
mov
mov
sbb
add
fwait
xor
stos
pop
mov
ds
fs
jecxz
loop
and
sub
xchg
lret
sbb
out
jns
cmp
jb
jb
fnstcw
inc
inc
nop
mov
sahf
mov
sub
test
or
js
mov
cmp
pop
and
jmp
scas
inc
jle
pop
fwait
outsl
ret
jno
addl
mov
add
fsub
xor
push
xor
inc
xchg
fadds
fcoms
pop
icebp
sbb
jb
lds
or
int3
aaa
in
sbb
and
add
dec
and
and
sbb
and
andb
dec
sahf
inc
movsl
les
lret
push
cli
or
adcl
pop
cwtl
test
sub
sbb
ss
testb
pop
jnp
adc
xchg
movsl
push
push
sub
stos
inc
mov
ss
xchg
nop
sbb
idivb
sti
pop
inc
loopnew
or
push
sarl
and
mov
pop
mov
out
pop
mov
pop
cmp
pop
scas
mov
and
pop
fs
into
cltd
or
jns
ja
sbb
push
dec
or
inc
cwtl
clc
in
test
sahf
push
push
jle
add
sbb
xchg
test
and
pop
cmp
mov
aas
push
js
outsb
and
sahf
dec
xchg
inc
push
ret
push
sahf
scas
in
into
push
ficomps
xchg
push
push
sahf
insl
loop
inc
push
jnp
fsub
cli
push
in
sahf
loop
std
push
push
jo
in
loop
sbb
cwtl
sahf
xlat
dec
call
sahf
test
mov
mov
sahf
xlat
jbe
push
fwait
sahf
enter
push
dec
sahf
xlat
aaa
sbb
sahf
jecxz
sub
push
dec
sahf
fdivl
adc
jnp
enter
push
sahf
ljmp
mov
sahf
jne
bound
ja
pop
cmp
rcr
jnp
jae
loopew
testl
rcl
flds
stos
adc
mov
int
movsb
push
inc
mov
add
jmp
fs
lret
bound
xchg
cli
bound
iret
pop
add
push
outsl
xchg
xchg
adc
mov
push
clc
in
pop
ds
xor
push
cltd
addr16
shll
clc
insl
push
mov
push
mov
ljmp
mov
push
sti
movsl
cmp
ja
cmp
or
jo
stc
not
test
and
sub
xchg
mov
push
inc
pop
pop
fmuls
mov
bound
dec
cmp
loop
arpl
fstpt
negb
cmp
xchg
mov
fdivp
xor
sahf
daa
jnp
xor
jns
pop
cltd
adc
push
scas
ret
faddl
je
mov
jecxz
scas
and
outsb
sbb
scas
aaa
test
fdivrl
addl
roll
sub
inc
sbbl
stc
clc
fdivrs
jno
out
mov
iret
jecxz
xchg
adc
in
sbb
arpl
cmp
pop
cmp
cwtl
in
inc
add
mov
rclb
icebp
mov
xor
ja
lea
jp
sbb
insl
imul
movsb
jnp
xchg
cmp
cmp
fwait
inc
stc
into
fsub
adc
sti
jb
mov
div
jns
and
mov
stc
ja
cli
js
pop
insl
sti
push
arpl
pop
mull
in
inc
aas
mov
sbb
jnp
inc
bound
xchg
test
jmp
sbb
push
pop
or
cltd
pop
sti
loop
lds
or
sbb
add
jb
std
aad
xor
xchg
cmp
dec
mov
xchg
inc
ret
in
push
sbb
sub
sahf
js
pop
push
clc
xchg
mov
mov
and
dec
out
test
adc
inc
sarl
fdecstp
add
pop
inc
out
pop
mov
sbb
xchg
fucomi
inc
scas
jo
push
fdivr
movsl
and
mov
add
sbb
stc
hlt
mov
jecxz
sarb
mov
pusha
pop
xor
cli
xchg
outsb
cmp
rclb
xchg
arpl
pop
pop
pop
movsb
cmp
sti
cmp
push
stc
sbb
fstps
mov
jge
push
add
add
mov
pop
mov
movsb
pop
arpl
stc
out
fwait
sbb
and
test
push
ret
mov
jno
push
loop
fstps
mov
pop
shll
cltd
addr16
xchg
mov
das
js
mov
inc
aaa
cmpl
sahf
mov
cmc
call
add
in
les
in
arpl
adc
mov
add
lcall
add
mul
mov
and
mov
scas
push
aas
cwtl
cltd
push
movsl
aad
or
cmp
stc
add
popf
cwtl
lahf
test
nop
mov
scas
and
pop
test
jns
inc
clc
gs
insl
frstor
push
inc
jno
xchg
pop
rcrb
pop
sbb
mov
add
push
pusha
fstpl
sbb
aam
sbb
movups
push
mov
mov
add
inc
xchg
ret
pop
les
fstps
addl
test
pop
fnstcw
jnp
shl
cmp
outsl
inc
ficompl
jnp
mov
push
inc
xor
push
es
out
stos
outsb
leave
fsubrp
repz
ss
jbe
cli
adc
fldenv
xchg
lock
xchg
xchg
jnp
movsl
neg
jecxz
cmp
push
inc
out
pushf
push
cmp
aaa
add
sar
inc
mov
or
mov
inc
xchg
fiadds
icebp
pop
cmp
mov
fwait
dec
and
in
in
popf
gs
movsb
icebp
jnp
add
ds
sarb
fnclex
mov
fwait
mov
xchg
inc
add
call
call
imul
mov
aad
das
adc
gs
cltd
sti
ljmp
pop
filds
ss
fwait
xor
pop
inc
mov
adc
popa
orl
mov
fldt
in
movsl
ds
movsl
scas
sbb
cmp
loope
jmp
loop
and
sub
mov
sbb
aas
mov
push
pop
jmp
fs
xor
mov
in
mov
mov
cmp
std
sbb
lds
adc
mov
cmc
movsl
sbb
mov
es
test
jo
cmp
aaa
mov
add
jns
sbbl
movsl
and
outsl
xchg
or
jl
or
sbb
or
or
pushf
jmp
cli
mov
adc
in
int
adc
test
icebp
cmpsb
pop
inc
pop
jmp
push
int
in
sbb
int
icebp
xchg
sbb
clc
lret
stc
mov
fdivrl
shl
adcl
test
mov
pop
adc
fwait
test
mov
push
loopne
and
sbb
or
push
sub
xchg
ds
add
or
xlat
or
aaa
push
xchg
ds
push
test
add
lds
ret
mov
mov
test
adc
pop
mull
mov
lea
jns
xchg
mov
push
xor
std
mov
bound
loopne
and
test
add
sbb
sbb
cmpsb
je
mov
push
mov
and
lcall
xchg
loop
mov
cli
popf
clc
mov
push
sbb
pop
fistpl
xor
sbb
pop
out
fnstcw
call
negb
xchg
adc
cmp
add
cli
xor
or
sbb
push
in
inc
sbbl
push
gs
negb
mov
sti
sub
pop
fidivrl
pushf
adc
xchg
les
enter
lahf
push
insb
movsl
sbb
xchg
cmp
fbstp
inc
sbb
xor
mov
pop
stc
fisttpl
js
cli
mov
icebp
outsl
inc
mov
mov
cmp
inc
lds
inc
sub
mov
fs
sbb
aaa
mov
sti
sbb
outsb
mul
pop
mov
add
cmp
sbb
lods
inc
and
xchg
push
cmpsl
iret
and
outsb
or
popf
xchg
and
mov
jmp
jecxz
sbb
add
mov
in
mov
xchg
aaa
mov
cmp
movsl
sub
mov
push
and
in
fadds
push
add
and
sti
negb
add
jns
fidivrl
adc
inc
cli
push
cmpsl
xorl
mov
js
add
andb
mov
mov
in
push
add
clc
sbb
les
xchg
dec
inc
ret
push
adc
js
push
sbb
stc
gs
xchg
fs
loop
mov
fcmovne
mov
jmp
lds
push
add
mulb
outsl
push
xor
gs
hlt
cmp
jns
ja
sub
fwait
arpl
mov
jp
sbb
ds
cmc
xchg
pop
or
dec
fwait
add
scas
test
mov
arpl
push
in
leave
jmp
xchg
mov
and
xchg
inc
roll
pop
sbb
add
test
js
cltd
xorl
ret
push
cmp
fldenv
adc
jnp
mov
and
stos
jecxz
test
lds
push
aaa
add
mov
xchg
sbb
loop
add
fwait
sbb
sbbb
mov
outsl
movmskps
loop
sahf
je
lods
cli
xchg
sbb
aaa
arpl
inc
std
in
xchg
xchg
push
fsubl
addr16
test
pop
cltd
pop
dec
ret
and
sbb
ja
add
pop
push
push
push
cli
inc
hlt
push
les
xchg
jo
stc
dec
dec
scas
pop
xchg
xchg
jnp
and
es
adcl
cwtl
mul
in
push
or
test
lret
jl
test
cmp
fldcw
in
cli
mov
adc
and
jp
outsl
jnp
xchg
cs
mov
sahf
loop
fsubs
xor
negb
cmp
sti
js
mov
pop
sbb
ret
jnp
xchg
sub
dec
sahf
mov
cmp
gs
insb
cli
std
xorl
in
mov
sbb
xor
xchg
sti
xchg
sti
cmp
gs
sbb
mov
adc
inc
rcll
add
push
lds
xor
ret
jb
sbb
cwtl
pop
mov
int
mov
cwtl
mov
push
mov
andl
inc
fcmovne
pop
lret
mov
out
jle
lea
jmp
and
and
sbb
and
cmp
push
adc
ret
les
testb
stc
int
leave
lcall
in
aaa
sbb
cltd
mov
jmp
inc
movsl
inc
bts
pop
inc
test
outsb
jp
arpl
test
sbb
and
cmp
pop
loope
xorl
cmp
push
pop
pop
mov
add
adcl
aas
stc
pop
and
pushf
adc
or
fistps
jns
arpl
inc
xchg
push
popf
jno
leave
xchg
les
and
pop
mov
loop
inc
or
add
sbb
mov
xor
cmp
dec
daa
js
ret
mov
xchg
jb
mov
xlat
call
leave
aad
mov
fwait
and
xlat
mov
adcl
pop
inc
arpl
mov
aas
inc
lock
arpl
cmp
push
adc
pop
adc
in
jle
push
push
add
jl
cmpsb
in
sahf
add
push
stc
xchg
cltd
sbb
dec
in
lret
sbb
adc
sub
pop
icebp
add
xlat
mov
jle
xchg
outsl
cli
jns
lret
cmp
testb
add
orl
xlat
mov
add
cli
mov
mov
cwtl
bound
mov
ret
movsl
mov
fstps
inc
push
jnp
pop
int
cwtl
das
jmp
pop
sbb
and
bound
xchg
test
and
scas
jmp
lret
gs
in
pop
sub
addl
adc
push
mov
pop
and
adc
cmp
outsl
test
rorb
cmp
mov
fdivp
cli
jmp
adc
or
hlt
sbbb
or
mov
cmp
inc
aam
out
xchg
cwtl
add
out
and
inc
pop
pop
fldcw
cwtl
test
sbb
cltd
mov
cwtl
push
jl
add
imull
pop
clc
add
pop
mov
inc
mov
sahf
sti
push
xchg
test
pusha
inc
loop
adc
xor
jae
das
add
sbb
je
add
jbe
in
lds
pop
xor
test
xchg
mov
push
and
xchg
addr16
and
fstl
add
and
pop
mov
inc
sbb
inc
loopne
icebp
ss
aaa
jle
mov
add
push
dec
sub
scas
mov
cwtl
pop
mov
pop
cli
fwait
push
dec
mov
jb
mov
and
cli
cmp
jae
cmp
cmc
imul
rcll
push
out
adc
inc
movsb
in
pop
inc
jmp
pop
push
clc
pushf
cmp
cmp
add
pop
loope
sbb
or
fwait
cmp
pop
cwtl
jp
or
add
les
mov
pop
loop
pop
mov
scas
lds
push
lcall
mov
mov
mov
pop
in
pop
xor
sub
incl
sbb
xchg
ja
cmp
hlt
push
fists
pop
and
jmp
daa
lds
outsl
pop
scas
mov
ss
lret
sbb
shlb
adc
mov
shl
or
sub
and
leave
jb
jmp
add
pop
cmp
mov
xor
pop
jmp
out
mov
mov
cwtl
stc
gs
loop
ret
lcall
lock
loope
inc
loop
divb
jmp
jne
and
cli
fwait
ja
lcall
dec
int
xlat
pop
in
fldenv
inc
jnp
or
and
and
mov
arpl
cli
sbb
rcll
dec
mov
idivl
in
cmp
xchg
in
push
fincstp
ficomps
mov
cwtl
fcomp
sbb
lock
jecxz
xor
mov
sahf
ja
std
in
std
cmpb
mov
xchg
ret
mov
add
sti
cli
push
sbb
sbbb
hlt
xlat
add
pop
fistpl
or
mov
leave
stc
inc
or
xchg
negb
int
test
dec
jne
jmp
mov
adc
and
mov
adc
xchg
test
cmp
notb
ror
xor
test
clc
int3
cwtl
adcl
xor
or
idivl
clc
and
mov
sub
cmc
inc
std
popf
pushf
jge
rorl
movsb
lea
inc
xor
add
pop
cmp
inc
xor
lret
arpl
sub
inc
xchg
jns
outsl
clc
add
fstps
inc
sbb
shrl
fcoms
cmp
fisttps
push
or
push
gs
inc
ret
pop
mov
test
mov
add
aaa
iret
sbb
push
add
cli
cmp
iret
ret
mov
loop
sbb
cmp
push
xchg
xchg
jnp
js
mov
jecxz
push
es
fidivrs
add
xchg
cwtl
push
rcr
lds
push
scas
inc
in
cmpsl
pop
dec
insb
push
mov
in
xlat
jo
sbb
adc
call
movsl
sub
fcomi
cltd
cmc
inc
fdivrs
push
cmp
ja
sub
sbb
iret
ret
mov
jge
sbb
push
or
cmp
add
bound
push
inc
adc
fistpl
xchg
das
cwtl
dec
adc
mov
loop
fwait
sbb
cwtl
fcmovnu
outsl
push
cmp
pop
push
add
imull
mov
pop
bound
jb
ljmp
sti
ja
pushf
push
sub
and
scas
lds
mov
cwtl
test
neg
test
in
cmp
pop
fwait
xchg
aaa
mov
jae
add
sbb
mov
and
sub
jne
adc
push
movsl
fwait
stos
xor
add
pop
les
xchg
pop
push
and
xchg
inc
mov
test
or
outsl
mov
push
fsts
sbb
and
or
pop
pop
js
dec
pop
xor
pop
divb
cwtl
mov
arpl
add
dec
mov
leave
cmp
add
inc
sbb
push
rcl
xchg
in
jnp
sub
ret
cmp
xchg
xlat
sbb
movsl
mov
gs
add
add
aam
push
sbb
and
inc
push
jae
and
sub
add
or
adc
push
test
xlat
add
fnstenv
sub
sub
inc
jp
push
or
or
cli
cmp
sub
mov
mov
pop
jo
pop
jns
jbe
jnp
adc
ss
mov
aaa
aad
fnstcw
add
cmc
pop
sti
add
subb
mov
push
fdiv
jnp
lods
mov
and
pop
arpl
mov
pop
mov
cmp
sar
mov
push
aas
shl
fs
dec
rcl
in
test
fbstp
sbb
sbb
xchg
sbb
add
fwait
mov
jno
test
pop
and
mov
ret
repz
sbb
xchg
add
shlb
ficoml
pop
sti
push
testl
mov
pop
xchg
sbb
adc
addr16
clc
push
adc
pushf
sbb
fadds
add
orl
sub
ja
dec
and
adc
mov
cwtl
jnp
fs
ja
sahf
pop
fcomp
xor
add
mov
sbb
and
mov
push
in
clc
cli
rorl
fwait
mov
ret
popf
cmpl
outsl
lds
rcr
sbb
in
add
sub
dec
adc
push
insb
pop
jmp
enter
add
out
jecxz
in
cltd
fsubr
rcrb
jbe
dec
push
push
ja
pop
jo
jecxz
push
mov
lods
rcrl
mov
cmp
pop
aad
mov
arpl
arpl
ljmp
hlt
cmp
fwait
inc
je
movsl
mov
or
mov
or
sarl
jecxz
inc
aaa
xor
and
jnp
sbb
pop
push
ret
xchg
add
mov
outsl
icebp
sbb
jne
cmp
inc
xlat
scas
mov
ret
mov
rcrb
rolb
or
mov
add
rclb
pop
mov
or
pushf
push
mov
add
fldenv
lea
popf
jo
and
les
flds
dec
cmc
aaa
push
and
sub
or
dec
jle
cld
gs
cmpl
and
out
movsb
jnp
ret
add
add
les
pop
lds
cmp
fdivrs
xchg
ja
or
push
inc
les
stc
push
pop
pop
shll
push
loop
and
outsb
pop
loop
movsb
sahf
pop
sub
jns
pop
dec
inc
fs
rcll
sti
ficoms
loop
push
inc
fcoms
outsl
sbb
and
and
cmp
push
adc
fs
inc
mov
cli
push
ret
push
fisttpl
in
loop
jecxz
pop
mov
pop
mov
and
and
idivb
push
cli
sarl
ja
movsb
outsl
jo
loop
and
add
cmp
ret
fcomps
lds
std
cwtl
test
pop
arpl
jecxz
insl
test
and
dec
int3
sub
adc
push
fsts
ret
adc
lds
pop
cmp
loopne
fistpl
ljmp
pop
xchg
and
inc
fwait
dec
in
mov
mov
iret
push
add
adc
mov
push
and
or
jns
test
pop
ds
adcl
les
aaa
sbb
push
add
mov
add
js
mov
fwait
and
cmp
and
inc
test
ja
fs
pop
gs
fstps
in
clc
adc
clc
push
movsb
pop
jecxz
add
in
in
xchg
cwtl
push
push
sbbl
arpl
jl
push
mov
mov
jb
or
aad
jbe
jnp
sbb
idiv
xchg
pop
pop
push
mov
jns
les
orb
popf
arpl
adc
popa
ret
mov
test
push
add
cwtl
mov
sbb
pop
mov
sub
push
inc
pop
xlat
lea
jecxz
xor
or
cwtl
or
mov
cmc
xchg
mov
push
lret
push
pop
loope
hlt
pop
loop
mov
mov
push
and
dec
mov
jb
xchg
fcompl
pushf
lds
push
sub
push
pop
test
arpl
pop
fwait
stc
xlat
inc
test
push
cltd
mov
mov
xor
add
sub
pop
or
mov
adc
add
pop
loope
les
sbb
mov
lcall
add
pop
dec
xchg
add
push
addl
es
shlb
cli
test
repnz
clc
cmp
add
cmpsb
sahf
or
outsb
add
cmp
shlb
cmp
pop
add
jle
out
mov
outsl
cmp
sub
adc
pop
add
inc
jecxz
cwtl
cmp
push
ficomps
daa
push
les
loope
push
pop
ja
inc
sbb
cli
js
cwtl
sbb
jecxz,pt
popf
mov
push
jns
and
sahf
outsl
aaa
sbb
jo
stc
test
nop
outsb
iret
sar
addl
lds
outsl
leave
inc
cltd
clc
shlb
fstpt
add
add
aam
ret
add
ret
pop
mov
shlb
cmp
xor
enter
flds
shlb
mov
add
fxam
cmp
xorb
cmp
mov
jle
xchg
push
fwait
inc
movsb
loop
inc
push
and
pop
lret
sbb
sbb
test
and
adc
xlat
ja
les
inc
add
fwait
mov
xchg
add
mov
or
les
adc
adc
mov
into
cmp
outsb
xor
mov
mov
mov
enter
cmpl
adc
cwtl
and
sti
dec
add
test
sarb
data16
cmp
adc
fcmove
add
in
or
idiv
dec
inc
xchg
cmp
pop
imul
int
lds
in
stc
pop
and
jb
scas
in
insb
or
in
push
ja
xchg
push
loop
inc
pop
arpl
out
in
loopne
xchg
clc
fst
pop
push
inc
testl
mov
fimuls
int3
push
loope
ret
xor
inc
stc
pop
jp
cmp
js
in
pop
jo
inc
mov
popf
sbb
scas
push
stc
les
je
testb
xchg
lods
popf
and
and
fwait
add
cmp
push
sbb
jo
add
scas
popa
mov
xlat
in
and
jnp
fadds
mov
sbb
push
dec
bound
mov
mov
shl
int3
fs
sbb
or
add
pop
pop
mov
cmp
popf
mov
sbb
cwtl
mov
add
mov
and
mov
leave
enter
jnp
mov
vpmaddwd
or
mov
mov
test
or
ljmp
add
cwtl
repz
cmp
jge
fwait
cmpl
lds
adc
mov
xor
iret
sti
xchg
mov
cmp
cmpsb
mov
cmp
pop
rcll
aaa
data16
lahf
and
loopne
cmp
ret
imul
outsl
sbb
add
ds
in
cli
jecxz
cmp
sub
sti
sbb
ja
pop
jns
gs
sbb
add
fwait
adc
push
mov
dec
xchg
rolb
arpl
inc
loop
clc
jbe
test
and
adc
dec
inc
testb
cmpb
jnp
push
ret
xor
add
mov
push
cltd
push
div
add
cmp
xor
fldenv
cmp
es
pushf
inc
cmp
aas
fs
fsts
sbb
jl
mov
adc
test
xchg
inc
les
or
orl
lret
lds
sub
mov
xorl
sbb
notl
in
mov
gs
pop
jns
add
inc
cmp
pop
jle
jno
cltd
push
outsl
or
push
stc
lds
fists
cmp
lahf
cmp
xchg
in
push
pop
ret
cmpl
xor
cltd
add
mov
inc
and
idiv
imulb
loopne
rolb
nop
cmp
or
mov
scas
sbb
xchg
xchg
icebp
cmp
stc
cmp
jne
ja
std
daa
dec
leave
mov
cmp
mov
mov
inc
pop
sahf
sbb
jns
movsb
dec
cmc
xor
fcomps
stos
in
pop
mov
iret
sahf
iret
sub
out
pop
xor
sbb
std
fmuls
fistl
mov
add
sahf
and
scas
inc
and
mov
mov
mov
movsl
loope
sbb
adc
sbb
mov
mov
push
push
xchg
hlt
icebp
flds
cmp
sti
push
pop
xor
lock
movsl
mov
mov
mov
inc
xchg
pop
pop
fs
mov
fdivs
sbb
jge
outsb
popa
fisubs
pop
ret
sbb
out
adc
outsl
movsl
xor
xchg
cmp
les
loop
pop
push
pop
rolb
lea
mov
lea
jp
test
mov
push
bound
fstps
icebp
inc
lea
inc
sub
pop
jo
push
adc
jns
ljmp
mov
mov
cli
jmp
mov
xor
cmp
inc
movsb
inc
addr16
outsb
pop
test
add
add
inc
cwtl
mov
add
sahf
ret
pop
bound
cltd
sbb
mov
pop
aam
push
xlat
sbb
inc
ret
xchg
mov
rcrl
fnstcw
pop
movsl
pop
mov
mov
push
and
add
fisubrl
inc
mov
jb
xchg
inc
pop
push
sbb
cmp
adc
push
lcall
das
aam
fidivrl
movsb
mov
xor
les
lods
mov
cmp
mov
testl
mov
lods
bound
add
fwait
ss
cmp
pop
mov
mov
sbb
in
test
cmp
or
sbb
inc
push
imulb
xor
fcomps
pushf
inc
jp
test
fnstenv
nop
pop
lds
cmp
stos
pop
std
or
clc
fldenv
outsb
xlat
pop
xor
stos
mov
sbb
aaa
cltd
out
push
pop
hlt
mov
scas
pop
call
lds
push
cmp
iret
cmp
test
fwait
iret
inc
sarb
mov
mov
icebp
in
jb
mul
xor
shlb
enter
int3
mov
jns
je
push
fsubs
aam
or
popf
pushf
add
jae
repnz
mov
in
jno
push
xor
jecxz
pop
outsl
jne
or
xchg
jp
xchg
fsts
mov
sahf
pop
cli
xor
insb
xlat
or
xor
push
negb
and
xchg
clc
dec
neg
xor
inc
and
cmpsl
mov
jnp
xlat
inc
jecxz
add
mov
push
cltd
test
and
clc
xor
add
xchg
fidivrl
les
pop
pop
cmp
inc
sbb
adc
inc
fwait
negl
stc
jle
fistps
out
mov
hlt
cmp
add
jno
pop
loop
sahf
icebp
idivl
pop
and
cli
jae
and
jecxz
and
mov
dec
loop
cmp
mov
outsb
movsl
inc
jmp
ret
pop
bound
lret
cmp
cmp
outsb
xchg
pop
push
lcall
fdivrs
jns
sbb
mov
clc
sahf
icebp
and
push
fdivr
add
pop
andb
loop
les
cmp
movsl
pop
fwait
sbb
sbb
popf
inc
in
scas
fistpl
mov
inc
mov
gs
push
fcomps
rcrb
push
test
nop
and
cmp
pop
sahf
mulb
add
int
scas
clc
fstps
repnz
cmp
and
dec
scas
arpl
inc
push
outsb
cmp
test
or
cwtl
loop
fwait
jnp
xchg
in
pushf
cli
add
out
in
xor
xchg
sub
jecxz
mov
fld1
add
fldt
or
push
sbb
cli
test
fwait
cmp
in
iret
stc
cmc
std
add
stos
ficompl
rcrl
pop
in
pop
gs
and
in
mov
and
sbb
in
int
movsl
pop
mov
add
gs
mov
mov
sbbl
pop
inc
xor
les
pop
add
mov
bound
rorb
test
dec
bound
aaa
adc
sub
xor
negb
les
xor
pop
subb
and
subl
arpl
jns
aad
es
in
lret
rorl
repz
push
stos
push
fucom
or
gs
cltd
fisubs
or
add
fnstcw
stc
adc
icebp
mov
fs
test
pop
add
in
add
outsl
mov
js
popf
and
ret
icebp
cwtl
fadd
iret
jns
stc
in
mov
xor
out
iret
cmp
jnp
jmp
aas
adc
adc
fs
and
jecxz,pn
inc
scas
cmp
pop
jmp
loop
sub
rcl
or
ja
cli
jns
pushf
sbb
add
sbb
inc
cmp
pop
movsl
fsts
ja
call
in
fnstenv
or
sbb
imul
mov
in
sbb
andb
add
pop
loope
loop
add
pop
mov
aaa
mov
sbb
fisubs
sub
fidivs
push
inc
cmpsb
pop
and
cmp
rolb
jnp
or
pop
data16
push
fimull
cltd
push
fadds
loop
notb
push
cmp
pop
test
popa
loope
loope
xlat
mov
sahf
sbb
lcall
xchg
mov
stc
cltd
test
or
fstpt
add
xchg
push
push
mov
cli
pop
mull
xchg
inc
sbb
adc
adc
loopne
test
adc
jmp
push
jge
sarb
rcll
mov
cmp
adc
fisubl
jb
cmp
and
cltd
enter
mov
lret
cmp
and
movsl
test
movsb
sbb
and
cli
arpl
rcrl
xchg
dec
mov
icebp
sbb
sti
in
add
cmp
xchg
sbb
cs
lds
mov
fisubs
push
pop
jmp
mov
call
inc
pop
repz
clc
push
inc
aas
cmp
int3
test
cmp
and
movsb
add
mov
ljmp
and
cli
lret
push
push
mov
xchg
es
out
cmc
mov
rcr
movsb
sti
and
adc
jecxz
in
mov
add
js
leave
pushl
push
mov
sbb
sbb
and
cli
cltd
cwtl
mov
fs
nop
and
and
or
divl
cmp
stos
lcall
xor
cmp
cmp
cmp
push
adc
mov
and
iret
fnstcw
jmp
jmp
repnz
push
jae
fistpl
mov
ljmp
mov
lahf
sbb
and
ret
cltd
dec
cltd
popf
sahf
mov
lret
xor
and
adc
xlat
mov
insl
out
rolb
pop
movsl
inc
sbb
cmp
outsb
test
or
test
and
aam
addl
mov
loop
scas
fdivs
les
icebp
idiv
loop
rolb
icebp
test
mov
outsb
xor
mov
adc
cmp
sti
sbb
mov
cmpsl
fnstcw
mov
jp
les
sbb
push
imul
ficomps
arpl
imul
adc
add
mov
sub
sti
inc
in
mov
or
jo
jecxz
clc
movsb
mov
popf
add
add
or
dec
push
mov
cmp
loope
cli
mov
inc
mov
popa
adc
cmp
popf
add
flds
loope
ja
test
add
call
fisttpl
sbb
in
loop
add
adc
xchg
mov
fsts
inc
int
in
ja
clc
movsb
add
mov
cltd
push
imul
push
sti
test
push
add
xchg
aad
push
pop
ret
and
cmpsl
shrl
outsl
or
inc
cltd
xlat
sbb
shlb
mov
icebp
je
lds
mov
push
mov
and
neg
imul
lods
movsl
fsubs
push
push
pop
lret
adc
cmp
jns
pop
cwtl
inc
repz
mov
imul
cli
mov
pop
push
inc
test
pop
mov
in
cli
gs
loope
es
jnp
mov
in
mov
lret
sbb
add
in
push
push
mov
inc
loop
mov
mov
cmc
icebp
mov
rcrl
scas
pop
cmp
shlb
jns
add
fwait
testl
pop
js
add
and
inc
push
cltd
push
cli
outsb
cmp
jp
xchg
sbb
and
cmp
jecxz
fnstcw
xchg
js
xchg
cltd
pop
sbb
repz
push
cmp
mov
cwtl
push
inc
cmp
into
push
or
cwtl
cmp
in
lods
iret
xchg
fsub
jbe
adc
popf
pop
add
rorl
or
loop
push
push
sbb
fwait
mov
andl
push
loope
clc
in
in
or
inc
aaa
push
pop
xchg
movsl
jge
pusha
fs
xor
pop
and
mov
xor
stc
mov
lret
mov
add
inc
mov
jns
sarl
mov
rcrb
or
cli
pop
push
in
jecxz
arpl
leave
dec
fcomp
aaa
jae
test
sbb
mov
arpl
je
fwait
inc
push
cmp
fistl
xlat
xchg
cltd
pop
loop
mov
lods
jo
loop
cwtl
jmp
loop
cmp
stos
sahf
sub
mov
fxch
notb
inc
add
sub
mov
cltd
jge
cli
sbb
xlat
cmp
adcl
arpl
xor
push
add
shrl
mov
decb
xchg
sbb
mov
lds
fcmovbe
inc
lret
ja
mov
lds
inc
mov
mov
mov
mov
popf
jnp
rcl
sti
adc
fildl
sbb
add
imul
stc
outsb
call
fs
imul
mov
push
pop
or
add
sub
xchg
mov
add
jnp
out
arpl
shlb
cltd
cmp
sbb
push
sbb
mov
adc
cmc
pop
mov
mov
les
cmp
arpl
mov
sbbl
push
or
dec
divb
loope
aaa
xorl
cmp
test
fnstcw
ret
and
outsl
mov
cwtl
or
inc
shlb
inc
push
push
aam
or
cli
add
cwtl
mov
adc
daa
adc
dec
das
push
jae
add
sbb
mov
mov
stos
and
add
in
popa
jnp
scas
mov
pop
icebp
mov
inc
adc
out
or
jns
add
cmp
out
or
idivl
dec
sub
mov
cmc
add
add
out
push
sahf
and
js
mov
ja
xor
add
sbb
and
test
les
in
shlb
pop
pop
in
cmp
mov
jecxz
out
add
xor
ja
add
cmp
jo
clc
pop
jno
mov
sbb
mov
fstps
lret
nop
mov
pop
and
add
in
xor
and
add
cmp
cwtl
mov
lret
in
cmp
mov
inc
jb
cli
mov
push
inc
jo
jnp
in
or
icebp
pop
inc
test
sbb
shll
stc
cltd
sbb
cmp
jecxz
and
sbb
sbb
and
sbb
clc
dec
xor
fistpl
cmp
aam
ret
xor
roll
arpl
push
in
pop
or
xchg
jmp
mov
clc
cmp
jns
jnp
adc
inc
xlat
sbb
js
mov
pop
int
mov
push
mov
push
orl
cwtl
adc
add
and
fwait
cltd
and
mov
push
fs
into
dec
pop
les
in
jae
sbb
mov
outsl
push
xlat
mov
cltd
push
les
popf
mov
add
test
fisubl
sti
and
or
sbb
pop
inc
cmp
mov
or
cwtl
add
xchg
js
jecxz
add
add
adc
ja
aaa
loope
mov
daa
jmp
hlt
pop
xchg
ret
mov
in
xor
add
repnz
mov
cli
xlat
mov
negb
orl
inc
and
sbb
testb
repz
lock
int3
push
loop
mov
xchg
popa
clc
sbb
pop
and
cmp
inc
xor
push
pop
and
inc
js
pop
pop
fcoms
jp
mull
fwait
mov
xchg
push
xorl
aaa
mov
xlat
jecxz
mov
jno
fiaddl
jns
repnz
jge
rolb
xchg
popf
inc
aaa
ss
cmpsl
pop
rclb
pop
pop
xchg
movsl
cwtl
in
adc
mov
lret
xchg
in
xchg
mov
aaa
add
enter
dec
ret
inc
cld
xor
stc
jns
sti
movsl
or
mov
fistpll
divl
pop
and
xor
sbb
mov
or
and
lret
in
pop
aad
test
cli
cltd
arpl
sbb
add
add
and
pop
fadds
insl
sti
js
sbb
xlat
fwait
inc
fdiv
jmp
outsl
xor
cmp
pop
cli
mov
add
mov
cmp
stc
roll
div
movsl
and
cmp
sbb
aaa
aad
push
ss
xor
sbb
rcr
fmuls
jo
std
cmp
sbb
ja
cmp
or
or
cmp
inc
or
xor
ss
sbb
adcl
ret
push
inc
adc
movsl
and
xor
js
and
sbb
and
mov
pop
and
pop
js
jno
cli
sbb
jg
or
mov
mov
mov
mov
add
fsts
and
jo
pop
pusha
sbb
fsubs
mov
fldcw
sub
jecxz
jmp
sti
inc
cmp
movsb
rcrl
cld
push
push
mov
arpl
test
fdivrl
test
and
adc
sti
jmp
xchg
lds
icebp
xlat
movsb
fstpt
push
loope
das
rclb
xchg
negl
pop
lods
sbb
sub
pop
les
fwait
stc
idivb
xchg
adc
inc
adc
sahf
dec
out
or
imulb
cwtl
mov
add
in
enter
cmp
mov
inc
jo
xchg
push
sti
icebp
add
nop
fld
and
push
cmp
xor
cmp
and
lods
sbb
stc
gs
movsb
std
rcrl
repz
mov
aaa
in
and
rcr
mov
lcall
stos
sub
daa
or
xlat
shl
aaa
cmp
in
push
sbb
cmp
jb
sahf
or
sti
mov
xchg
or
sbb
fstps
pop
adc
sbb
cmpb
movsb
sti
pop
lods
int
xor
fistpl
inc
push
mov
sbb
xchg
movsl
call
test
mov
add
pop
or
jnp
loop
or
movsb
ret
lahf
xchg
and
fldcw
test
aaa
arpl
mov
inc
iret
mov
popf
les
and
mov
mov
lret
mov
outsb
pop
out
je
jno
movsl
test
sbb
and
js
fistpl
test
sub
cmp
mov
cli
inc
mov
mov
fldenv
stos
fwait
adc
clc
xor
cltd
add
or
sti
lret
sbb
push
test
pop
mov
movsl
cltd
outsl
cmp
iret
pushf
outsl
daa
cmp
test
addl
push
sub
pop
js
push
outsl
mov
dec
mov
aaa
adc
jnp
push
arpl
sar
jae
in
icebp
push
subl
jae
and
iret
dec
cmp
jg
xchg
aaa
mov
and
inc
icebp
pop
icebp
add
and
aad
sbb
arpl
mov
add
jb
cmpl
cmp
mov
sbbl
cmp
mov
clc
and
cmc
adc
add
adc
or
jo
mov
pop
adc
or
iret
add
or
arpl
fildl
cmp
sbb
insb
gs
mov
loop
inc
pushf
jne
rorl
sti
divb
cmp
jl
jecxz
or
xchg
jns
adc
fs
mov
xor
dec
mov
icebp
sbb
cltd
pop
jnp
test
mov
adc
inc
call
adc
addl
nop
add
cmp
sti
and
add
or
cmp
dec
pushf
mov
test
popa
roll
and
mov
arpl
push
push
cwtl
sbb
cmp
in
pop
jecxz
nop
pop
arpl
pop
in
xchg
xchg
fdivs
mov
jnp
rcrb
js
sub
sarb
mov
xor
gs
movsb
sbb
in
or
cli
scas
inc
and
sub
aas
cli
mov
add
jecxz
outsb
out
and
jnp
push
cli
js
hlt
inc
jb
aad
pop
xchg
icebp
cmp
jnp
add
movsl
add
lahf
adc
sbb
out
sbb
int3
adc
lds
lcall
cmpb
add
push
rclb
cli
loopne
mov
out
arpl
mov
adc
cmp
xchg
push
add
cwtl
in
bound
cli
arpl
hlt
cmp
mov
fs
add
adc
inc
lock
jp
mov
pop
les
rcr
ret
js
imul
add
and
cmpsl
pushf
lods
mov
push
mov
xchg
sahf
mov
push
sbb
add
mov
fistpl
lods
aad
hlt
xor
jecxz
jnp
xchg
fcomi
stc
jg
sub
add
std
pusha
imul
loop
fnstcw
inc
mov
cmpsb
out
xchg
lret
fwait
in
inc
loop
cmp
out
pushf
xchg
xor
cwtl
xchg
mov
adc
jecxz
adc
pop
xlat
cwtl
xchg
stc
xchg
inc
mov
push
push
xorl
pop
adcl
push
inc
shll
sbb
ret
and
cli
jns
pop
and
icebp
cmp
pop
sbb
jge
cwtl
imul
jge
cmp
inc
push
sbb
rcll
das
mov
fisubs
shr
add
xchg
out
pop
add
ret
sahf
mov
sti
rol
pop
xchg
fldl
ret
pushf
add
mov
inc
or
scas
pop
jl
inc
mov
iret
push
jns
sbb
js
mov
add
aas
and
xchg
mov
fs
jmp
inc
pushf
mov
push
sti
fldl
fwait
mov
insl
outsl
sbb
fs
test
fistpl
ret
inc
sbb
and
mov
call
xor
fnstcw
and
popf
or
pop
mov
jno
cltd
movsl
sahf
push
mov
loop
stc
fistl
fcmovne
cmp
fisubs
adc
jnp
sbb
fcomps
sbb
in
subl
adc
cmpl
xchg
mov
cmp
lds
add
pop
mov
loop
jnp
cltd
mov
iret
mov
aaa
outsl
xchg
mov
xlat
cmp
inc
stos
stc
pop
in
pop
sub
js
jge
cltd
sbb
dec
push
jle
add
fnstcw
and
sbb
in
aaa
inc
adc
sub
loop
ja
mov
imul
jmp
or
cwtl
pop
pop
xchg
mul
out
sub
adc
push
sbb
popa
fstps
inc
outsb
and
xorl
push
mov
test
fsubs
sti
cmp
push
jle
inc
jecxz
push
sbb
pop
add
arpl
sub
in
adc
test
pop
inc
add
jnp
mov
sbb
pop
loop
cltd
lods
pop
mov
adc
outsl
mov
xlat
les
pop
xchg
pop
ficompl
inc
adc
and
test
inc
adc
cmp
rcrl
add
jb
cmp
scas
enter
in
xchg
js
push
adcb
hlt
out
pop
aam
inc
aaa
sbb
xor
les
jns
jb
inc
adc
fmuls
fs
in
sbb
cmp
outsl
not
js
add
ret
mov
cwtl
rclb
pop
sub
push
cmp
aaa
test
push
or
imul
add
adc
add
pop
movsb
dec
loop
mov
loop
or
cmp
xor
pop
test
pop
jns
andl
pop
inc
and
cmp
jnp
mov
sbbl
inc
sbb
arpl
inc
pop
mov
jl
inc
inc
test
lret
arpl
push
adc
shl
test
fwait
and
cmc
cmp
jnp
pop
les
lods
mov
cmp
adc
mov
xchg
fidivrl
xchg
popf
cmp
aaa
inc
sub
sbb
lret
nop
mov
mov
mov
jl
cmc
pop
les
jle
adc
cmpsb
cmp
mov
in
sbb
xchg
nopl
pop
add
sahf
fcoms
dec
pop
mov
push
jo
push
mov
ja
add
jecxz
fisttpl
mov
jo
sbb
and
and
iret
in
ja
mov
test
sbb
imul
sahf
jle
outsb
xchg
loop
add
mov
gs
ret
addl
mov
mov
pushf
sti
pop
idivb
cli
and
cltd
je
xchg
cmp
aaa
cmp
add
adc
inc
jp
mov
sbbl
and
cwtl
into
xor
movsb
add
out
ret
xchg
imul
cmp
lods
test
inc
test
jle
ffreep
clc
repz
push
hlt
pop
fs
aaa
mov
inc
sub
sbb
xchg
testb
add
mov
jns
sbb
pop
loop
ret
push
inc
add
dec
pop
rorb
push
xlat
mov
xchg
lds
cmpl
dec
int3
aam
outsb
ss
add
add
rorl
pop
dec
add
fdiv
in
in
inc
testb
dec
leave
mov
movsb
das
and
sub
mov
icebp
mov
sub
mov
inc
push
movsl
inc
inc
shl
int3
ja
pop
cmp
xchg
jne
inc
cmp
les
orl
lcall
pop
lds
sti
mov
push
mov
outsl
inc
sbb
jb
out
es
clc
and
jo
push
out
and
add
jns
jg
inc
mov
sub
lcall
add
xlat
gs
cmp
ja
test
sbb
rolb
jg
and
pop
xchg
mov
mov
xchg
test
sbb
testl
ja
mov
fldenv
or
pop
fs
mov
and
pop
and
sarb
ror
arpl
or
xchg
icebp
test
fcomps
push
dec
mov
test
pop
jne
cmp
mov
adc
lods
aas
xor
pop
or
push
loop
loop
xlat
mov
add
add
push
add
fldenv
add
fisttpl
and
fsubr
js
cwtl
jo
fwait
in
xor
mov
cmp
cltd
cmpl
aaa
and
cli
clc
repz
sbb
arpl
add
fsubrs
or
pop
cmp
jnp
push
fsubrs
mov
gs
mov
lret
in
mov
add
add
xchg
add
adc
lock
mov
jnp
xor
mov
sub
cmp
fnstcw
mov
mov
xlat
fcmovnbe
loop
adc
xchg
add
push
popf
and
push
jecxz
ljmp
pop
movsl
clc
fstpl
cmp
fisttps
add
mulb
stc
and
add
pop
push
pop
xor
jecxz
test
sbb
jnp
idivl
xchg
cmp
lahf
popa
sar
push
mov
xchg
outsl
add
cmp
negb
test
test
mov
inc
mov
pop
add
lea
dec
sbb
mov
add
mov
mov
test
dec
adc
pop
push
notl
jecxz
xchg
add
and
fdivs
outsl
mov
sbb
and
jnp
notl
jge
mov
fdivs
xlat
jecxz
aad
jmp
lods
aam
add
pop
xchg
or
popf
in
leave
add
test
fcomps
test
add
xlat
enter
add
push
scas
inc
out
dec
stc
out
jge
aad
adc
cmp
cltd
outsb
jecxz
pop
mov
dec
jecxz
mov
and
clc
loop
adc
sbbl
stc
jmp
xchg
ficoms
negl
jmp
jnp
and
xchg
mov
in
inc
stc
xor
sbb
mov
cmp
ret
repz
bound
inc
cmp
ss
jnp
rclb
push
add
adc
xor
clc
mov
sbb
cwtl
and
pop
cmpsb
in
mov
imul
mov
mov
fwait
ja
dec
xor
pop
idiv
pop
sub
cmc
stc
mov
push
cltd
shlb
arpl
pop
pusha
les
lds
aaa
push
add
sti
sbb
test
fwait
iret
ret
loop
mov
inc
and
jle
mov
cmp
call
pop
sti
or
fldcw
negl
popf
sbb
mov
outsb
mov
test
mov
mov
iret
arpl
jl
mov
fwait
and
les
pop
insl
scas
push
pop
jp
inc
or
inc
mov
mov
int3
and
ja
add
cmp
pop
movsl
and
fistl
add
rclb
cli
or
mov
mov
repz
outsl
stos
repz
mov
and
inc
cwtl
push
dec
movsb
add
push
pop
cwtl
and
cltd
mov
pop
jnp
fcomps
fdivrs
movsl
adc
lcall
popa
lds
xlat
fcoms
sti
and
jmp
out
outsl
adc
and
cld
jnp
xchg
call
and
shll
xor
mov
loop
sbb
in
pop
pop
mov
push
dec
ret
jge
cltd
xchg
push
sarb
push
ja
subb
xchg
mov
std
pop
add
inc
aad
dec
push
push
cmpsb
and
push
xchg
and
jmp
xchg
pop
push
es
movsb
sbb
mov
cwtl
mov
pop
xchg
xlat
pop
and
pop
pusha
dec
outsl
mov
mov
and
outsb
adc
in
push
pop
pusha
clc
add
add
pop
and
fs
and
mov
sub
fsubs
leave
fwait
mov
sbb
movsb
test
in
loopne
dec
pop
mov
or
mov
sbb
in
jns
sbb
mov
push
cltd
clc
leave
mov
frstor
jns
and
push
and
in
sti
clc
cli
mov
inc
jle
pop
cwtl
cmp
jecxz
and
cmp
push
cmp
popa
and
testl
pop
jp
or
mov
xchg
nop
xlat
fwait
mov
pop
popf
and
jae
and
sbb
icebp
stc
push
popa
fisubrl
jo,pn
pop
clc
mov
shll
adc
pop
inc
loop
inc
mov
movb
and
cli
in
and
and
inc
mov
mov
rcl
das
movsl
dec
aad
stc
jnp
cli
xchg
sbb
icebp
cli
adc
cmp
dec
sahf
jge
push
cltd
in
call
jecxz
fs
shl
adc
add
cmp
sbb
and
mov
add
fwait
sbb
dec
jl
ds
data16
lcall
dec
push
jo
cmp
sbb
outsl
add
inc
adc
out
ja
mov
add
mov
data16
xchg
test
mov
ljmp
cmp
iret
jecxz
gs
mov
push
test
and
push
dec
ret
js
and
add
add
mov
xchg
xor
cwtl
mov
sti
cmp
cmp
lds
add
add
push
stc
mov
bound
jecxz
fcompl
sbb
mov
cwtl
outsb
gs
mov
adc
ja
mov
push
mov
push
ds
inc
sub
ljmp
or
cli
flds
ja
and
in
cwtl
add
andl
inc
mov
sub
pop
gs
ret
popf
js
arpl
mov
add
and
pop
movsl
in
inc
addl
jecxz
aaa
arpl
insb
icebp
stos
out
insb
cmp
push
aas
push
jae
clc
jecxz
enter
and
dec
test
shlb
jecxz
in
push
mov
sbb
sbb
data16
dec
dec
sub
movsl
cmp
cmp
rclb
add
frstor
add
fs
notb
pop
mov
ret
cmp
fnstenv
push
xor
pushf
sbb
ss
fistpl
js
xlat
out
pusha
mulb
jecxz
shlb
mov
adcb
pop
sbb
push
pop
adc
cmp
mov
sbb
jae
bound
gs
cmp
insl
adc
aaa
mov
jne
fwait
xchg
movsl
dec
pop
mov
push
or
int
push
lcall
or
fs
loop
aam
lods
mov
in
or
inc
push
sti
popf
fs
cli
cmp
in
std
xor
insl
sbb
and
sti
push
add
lock
pop
jo
dec
cmp
and
inc
movsb
and
imul
jo
mov
loop
or
jns
sub
cmp
mov
fistps
mov
pop
lcall
notb
insb
stc
lock
int
and
sti
popf
cltd
push
mov
xchg
cmp
idivl
outsl
test
push
inc
clc
ret
xchg
imul
mov
cli
mov
mov
add
gs
sub
cli
les
jecxz
mov
push
push
push
mov
aaa
fsubs
inc
and
add
loop
jmp
test
testb
sarl
test
ja
push
lods
gs
in
mov
adc
outsl
loope
pushf
int
cli
lods
int
pushf
mov
and
xchg
cwtl
and
arpl
out
pop
out
xlat
adc
jecxz
js
add
stc
cwtl
fs
jecxz
sub
xor
sbb
pop
cli
pushf
ret
test
cs
cmp
arpl
and
sbb
add
clc
testb
sbb
popa
inc
cmp
outsl
andl
ja
pusha
jge
outsl
fstl
adc
pop
xchg
push
out
pop
rcrb
xchg
sar
sahf
arpl
jae
sarl
mov
int
les
and
inc
in
in
lret
push
jle
jns
dec
shll
add
in
fcomp
sub
pop
vcvtsd2ss
movsb
adcl
stc
stc
or
sub
sahf
cli
jnp
mov
and
adc
jns
xor
lock
cmp
xchg
scas
scas
stc
cmp
lea
xchg
test
jle
xchg
fsubs
loope
notl
and
pop
ret
sub
dec
sbb
test
add
jne
lds
xchg
loope
pop
and
mov
dec
jno
add
jge
shrb
pop
cmp
fists
dec
jnp
les
inc
repnz
out
dec
push
and
fcoml
pop
adcb
ficoml
daa
jg
sub
push
in
mov
inc
jae
icebp
dec
add
js
xor
add
subl
fstps
lock
cmp
fiaddl
sbb
out
pop
jno
add
loop
or
pop
cmp
add
mul
js
cwtl
mov
push
jns
cmp
dec
loope
movsb
inc
add
mov
xlat
test
and
pop
leave
cltd
ret
mov
cmp
mov
gs
nop
lret
adc
jns
sbbb
cwtl
aas
push
test
adc
cwtl
inc
mov
scas
pushf
inc
not
pushf
jns
sbb
inc
push
sub
sbb
sbb
xlat
jge
pop
adc
cmc
push
jnp
and
pop
or
shlb
push
push
movsl
pop
call
clc
sbb
or
mov
inc
dec
mov
cltd
loop
mov
ja
testl
dec
push
ret
and
test
inc
xchg
test
into
fwait
xor
pop
stc
ret
and
cwtl
fcoms
and
cli
xor
mov
push
fcomps
cs
lret
fsubl
sub
jae
dec
sub
in
rorl
jb
pop
xchg
lcall
xchg
lds
xchg
jbe
add
sbb
mulb
dec
xor
add
sbb
add
fcmovnb
add
stos
mov
and
mov
out
jge
push
jmp
test
in
out
xchg
ret
push
out
notb
sbb
mov
in
jmp
imul
push
pop
inc
cmp
sbb
sbb
cmp
xor
lret
sub
and
ss
jnp
push
fs
pop
shlb
mov
pop
aad
mov
mov
loop
in
gs
sub
pusha
rcll
mov
iret
and
and
lret
fs
mov
xchg
mov
xlat
mov
sbb
adc
ja
stos
adc
mov
in
xor
add
sbb
adc
add
sarb
and
stos
adc
mov
in
fwait
outsb
dec
cwtl
test
push
cmp
lret
push
mov
add
test
lds
cmp
adc
push
mov
fwait
and
sub
loop
push
sbb
ja
inc
sbb
subl
gs
push
inc
inc
enter
js
xchg
jecxz
loope
sbb
pop
mov
outsb
push
cli
and
mov
jecxz
mov
add
ja
push
cmp
rcl
cmp
mov
fxch
popf
les
sbb
cwtl
lods
lds
fstcw
sbb
jo
jecxz
mov
stc
rol
cltd
jg
es
xchg
cmp
push
xchg
inc
cmp
push
mov
adc
mov
cmp
cmp
add
fs
ja
lock
loop
add
in
sbb
outsl
pop
sbb
clc
dec
dec
mov
xchg
insl
pop
mov
mov
inc
jns
lcall
insl
mov
idivl
adc
push
es
inc
pop
jp
clc
fadds
xor
outsl
add
sub
insb
dec
sahf
addl
cli
out
sti
out
iret
push
arpl
insl
mov
and
fs
arpl
cltd
in
movsl
in
mov
fcoms
cmp
sbb
iret
js
add
push
xor
ja
fwait
js
or
fcom
mov
cmp
cli
adc
add
jae
xor
mov
pop
fcoms
je
xlat
aaa
in
mov
pop
gs
lahf
jecxz
cmc
sarb
xchg
mov
test
add
cmp
repz
jae
in
add
add
cmp
movq
fs
xor
ret
fdivrs
mov
or
pop
cmp
and
or
mov
xchg
jnp
test
push
cmp
in
jmp
jle
jnp
sahf
dec
fsubs
test
inc
dec
call
push
push
push
in
and
aam
sub
mov
or
fsts
pushf
inc
jnp
pop
cmovg
pop
cld
dec
push
mulb
mov
push
fmul
adc
aaa
pop
add
pop
test
int
js
and
and
je
cmp
in
ljmp
lret
jecxz
outsl
cmp
out
ljmp
pop
add
sbb
fwait
addl
notb
sbb
or
loope
add
or
in
ret
aam
les
mov
mov
jecxz
cwtl
inc
rol
pop
mov
lds
inc
gs
add
and
movsb
cmp
pushf
ja
stos
push
dec
push
fsubrs
lcall
cmp
mov
dec
ret
in
jecxz
pop
repnz
arpl
lahf
and
xchg
sbb
mov
sahf
inc
jne
in
sti
add
jb
lret
mov
test
movsl
cltd
cmp
and
in
mov
inc
jo
sbb
sbb
inc
mov
mov
iret
daa
adc
outsl
cltd
mov
push
xor
xchg
mov
mov
xlat
ss
or
push
cli
pop
movl
jecxz
gs
movl
adc
push
arpl
mulb
insl
cmp
adc
or
cltd
pop
or
mov
aad
jno
jg
out
mov
jnp
cmp
push
test
push
hlt
pop
or
sahf
aaa
daa
cld
loop
sbb
pop
jecxz
sub
ja
lds
mov
push
mov
lods
sbb
mov
arpl
rcr
sbb
jecxz
nop
out
sbb
out
fs
pop
sbb
add
fsubs
mov
jl
fildl
adc
sbb
and
shrb
push
out
xor
iret
pop
js
or
clc
arpl
push
loop
movl
add
mov
jl
xchg
inc
xlat
out
cmpsb
add
test
sub
lahf
gs
sbb
in
ljmp
dec
fsubl
inc
xlat
in
sbb
loopne
cmp
mov
mov
jb
inc
and
pop
mov
add
adcl
mov
cld
aam
scas
pop
or
out
xchg
and
sbb
repnz
loope
icebp
xchg
mov
arpl
and
jl
add
inc
adc
jnp
sahf
cmp
leave
pop
leave
test
pop
lret
jnp
lods
loop
and
fstps
andb
pop
cmc
je
out
cltd
mov
sahf
ret
les
fldpi
and
jg
mov
scas
mov
test
mov
mov
adc
stc
add
mov
sub
pusha
fwait
outsl
pop
lea
push
ret
mov
dec
adc
add
loop
ss
xchg
dec
sti
pop
cwtl
mov
jecxz
mov
in
add
mov
popf
sbbl
leave
and
mov
rcll
fstps
inc
xorb
sbb
test
and
gs
xchg
push
or
loope
test
adc
lds
and
push
push
cli
xor
mov
xchg
movsb
add
push
jmp
xchg
push
pop
adcl
lock
or
ret
cs
push
pop
xlat
outsb
pop
and
add
add
cmp
push
jno
idivl
sahf
pop
sahf
xchg
test
clc
pop
mov
sbb
cmp
repnz
mov
fistpll
sub
cmp
jnp
outsl
pop
and
movsb
add
in
push
jmp
mov
sub
aaa
jnp
cmpsl
xchg
and
sub
push
int3
or
push
pop
add
nop
sbb
icebp
cmp
int3
jnp
popa
add
pop
jns
push
xchg
movsl
sbb
xor
movsl
in
sbb
mov
jnp
flds
add
fisubrs
xlat
mov
xchg
idivl
dec
xchg
push
pop
cmp
cmp
xchg
inc
sbb
and
pushf
insb
xor
mov
jecxz
fidivrl
arpl
ja
leave
fcoms
fildl
stc
in
adc
in
and
jecxz
jne
and
sti
adc
cmp
sbb
test
iret
cwtl
ret
xchg
cmp
cltd
sti
loop
pop
mov
mov
repz
cwtl
xchg
sbbl
clc
or
add
cmp
xlat
sbb
jl
push
push
jle
cltd
outsb
cmp
dec
ret
pop
cs
in
pop
mov
mov
daa
xchg
scas
adc
pop
ja
sub
mov
jmp
sti
movsl
mov
sbb
outsb
pop
push
sbb
ja
xchg
inc
and
fsts
insl
add
pop
aas
mov
and
cmp
fistl
jbe
xlat
inc
test
mov
arpl
mov
pop
lock
in
sbb
negl
mov
gs
pop
inc
sub
mov
push
mov
sbb
push
js,pn
pop
or
gs
push
lahf
fistpl
ja
inc
cwtl
in
popf
mov
icebp
cmc
fistl
mov
fidivl
add
popf
mov
mov
mov
gs
push
jno
push
leave
xor
cs
stc
add
sbb
arpl
cld
mov
daa
lcall
add
mov
cli
movsb
rcl
push
scas
cmp
cmp
loop
in
push
xor
shlb
imul
cli
pop
adcb
in
loop
les
insb
jae
les
adc
or
jns
xchg
ja
test
and
enter
fwait
sbb
dec
xlat
sbb
cwtl
stc
push
add
mov
mov
movsb
pushf
enter
fisttpl
xor
push
and
divl
mov
imul
jecxz
xchg
sub
xor
add
mov
movsb
aas
mov
fistl
xchg
push
fadds
mov
test
lahf
lods
rorl
inc
aad
xchg
inc
push
pop
jle
jbe
adc
movsl
notl
mov
jno
inc
fs
outsl
cwtl
out
pop
adc
mov
mov
adc
xchg
cmp
inc
adc
loop
test
and
add
ja
adc
cmpsl
jmp
mov
ret
push
jle
cltd
js
sbb
cmp
cli
mov
lret
pop
adc
jmp
jbe
xchg
imul
fldt
loope
fwait
or
cmc
add
and
loop
rol
add
cwtl
pop
sbbb
sbb
mov
inc
lret
in
movsb
xor
inc
cli
sarl
out
push
mov
xor
cmp
aam
sub
sarl
movsb
jmp
arpl
and
xchg
and
rorb
mov
push
lea
and
xchg
adc
dec
outsb
daa
mov
pop
cwtl
outsl
cmp
or
js
add
xchg
loopne
in
outsl
test
das
insl
sbb
pop
xchg
adc
in
sbb
gs
std
mov
mov
jecxz
cmp
test
ljmp
mov
leave
mov
out
sti
sbb
mov
mov
movsl
sbb
in
rcrl
pop
adc
cmp
sbb
xchg
out
gs
cmp
in
pop
jo
jns
and
push
sbb
pop
cltd
xchg
sbb
lock
mov
xchg
rol
js
and
and
pop
xchg
cltd
shlb
mov
movsl
cmpl
int
or
jno
cmp
push
adc
iret
fs
out
cwtl
pop
flds
xor
push
add
xlat
andl
mov
cmp
mov
add
js
pop
repz
mov
push
jns
jecxz
xlat
push
cmp
test
and
inc
andl
or
fsubrs
or
jecxz
dec
popa
icebp
test
jnp
jle
jb
cmp
stc
add
cwtl
in
inc
xchg
mov
cwtl
fwait
jbe
imull
sbb
movsb
sahf
out
jns
aaa
test
js
pop
jae
mov
mov
movsl
flds
mov
push
out
pop
mov
pop
adc
shll
sti
enter
mov
jnp
jo
ja
jecxz
add
insb
in
test
mulps
push
imul
imul
rolb
icebp
mov
jno
arpl
push
inc
js
mov
jecxz
fbld
arpl
fdivs
stc
out
data16
and
xchg
adc
mov
cli
push
mov
sbb
xor
jnp
cltd
xchg
cli
pop
cmp
mov
test
sbb
mov
imul
cmp
inc
sbb
mov
inc
cmp
cmp
mov
sahf
inc
loop
fwait
les
shl
movsl
sti
xor
mov
xchg
mov
lds
and
pop
aas
jnp
inc
xchg
lea
in
inc
mov
xor
mov
push
lea
jmp
and
xlat
add
xchg
mov
mov
mov
pop
pop
fcomps
sti
inc
sbb
cmp
xlat
rol
clc
adc
and
cmp
movsl
sub
pop
and
in
push
add
sbb
jecxz
testl
add
stc
mov
lahf
push
add
flds
lds
dec
sub
pop
or
aam
push
sahf
add
adc
or
fistps
fldenv
xchg
mulb
add
cmp
pop
inc
das
ret
mov
xchg
push
neg
xchg
lcall
gs
adc
dec
mov
fcoms
xchg
pop
cmc
or
cmp
mov
jecxz
jnp
in
shll
test
mov
stc
addb
or
mov
xchg
cltd
inc
cli
stc
lret
mulb
jecxz
div
push
sti
addl
and
adc
in
mov
xchg
fildl
jecxz
test
and
cmc
add
iret
popf
mov
pop
cwtl
in
outsl
loop
int3
loope
jns
push
fadd
mov
cmp
movsl
jl
stc
adc
pop
addl
cwtl
mull
mov
xor
jns
adc
fistpl
xor
ficompl
stc
xor
mov
pop
test
lods
sahf
aad
pop
pop
rcrl
addl
ret
leave
imul
pop
ja
das
rcrb
movsb
test
and
cwtl
jg
fucomi
lcall
sub
test
arpl
cmp
idivl
sarb
xchg
imul
add
rcrb
add
rolb
and
clc
mov
jmp
and
fcoms
mov
les
addl
dec
test
cmp
outsl
xor
in
mov
adc
sbb
jecxz
add
inc
jns
notb
xchg
idiv
cmp
xlat
int3
push
adc
aaa
rcl
js
inc
in
test
mov
lock
mov
and
or
dec
cmp
outsl
icebp
shrl
mov
sbb
das
mov
push
in
les
repz
cmp
pop
ret
bound
sbb
mov
aad
push
push
pop
cwtl
repz
xlat
in
arpl
mov
shl
loop
add
test
lods
sub
push
fs
out
inc
arpl
out
cwtl
cmp
mov
das
cli
popf
mov
loop
outsl
inc
aaa
iret
cwtl
push
movsb
fldlg2
add
pop
stc
and
adc
jecxz,pt
aad
add
sti
push
mov
adcl
xlat
xchg
cmp
orl
push
ret
js
add
fnstenv
xchg
pop
mov
pop
jmp
add
and
repz
sbb
cmp
dec
add
and
aaa
push
les
xor
push
mov
movsb
clc
das
ja
call
dec
and
inc
iret
ljmp
sub
mov
jnp
test
shlb
add
pop
data16
cmp
dec
sbb
icebp
push
mov
push
push
sbb
add
push
mov
fcmovb
shl
cmp
mov
test
lds
jge
cwtl
roll
sbb
dec
cmp
movsb
aaa
xlat
adc
gs
inc
cmp
mov
dec
xchg
xchg
jl
addl
push
push
arpl
enter
sbb
sub
xor
test
movsl
mov
sbb
xor
repnz
sti
in
movsb
cmpsl
push
mov
cmp
cmc
adc
test
ss
pop
les
movsl
mov
push
outsl
loop
xorl
and
flds
mov
adc
jns
push
lcall
repnz
loop
and
add
ljmp
iret
ret
out
cmp
push
and
mov
fwait
arpl
icebp
clc
fnstcw
add
and
push
mov
gs
mov
adc
sbb
clc
aas
cmp
fwait
cmp
fistl
rcrb
cmp
mov
dec
lcall
cmp
cli
push
lods
out
andl
push
aaa
mov
mulb
adc
cltd
inc
inc
les
and
notl
mov
sahf
mov
add
pusha
and
pop
movsb
in
lahf
rcr
push
push
jnp
or
fwait
bound
jno
fs
jg
add
aam
clc
les
push
mov
cmpsl
pop
mov
sti
jb
pop
arpl
jo
mov
cs
sahf
sub
pop
mov
push
insl
push
cld
mov
movsl
push
cltd
in
mov
cmp
pop
popf
xlat
pop
pop
mov
add
jecxz
fcom
cmpsl
push
xor
pushf
ja
fs
stc
xchg
dec
bound
sbb
fwait
in
pop
sbb
mov
mov
cmp
aas
js
outsb
cmp
fwait
push
xor
mov
les
xchg
xor
pop
push
xchg
adc
pop
loopne
cmp
sbb
dec
jns
das
xlat
inc
mov
movsl
movsb
and
mov
push
cmp
inc
xor
inc
or
sbb
pop
loop
in
push
cwtl
in
inc
xchg
jmp
call
sbb
mov
test
rcrb
jecxz
test
rcl
mov
xchg
or
jb
sub
cmp
aaa
lds
daa
movsb
mov
sub
cltd
and
push
in
gs
stc
outsl
ret
ss
pop
inc
popa
inc
cli
arpl
cmp
cmp
pop
fnclex
jle
add
sahf
movsb
push
pop
dec
insb
inc
dec
mov
in
push
sbb
je
sahf
mov
sahf
jo
xchg
push
clc
idiv
in
mov
pop
sbb
and
cltd
scas
aaa
ret
fs
inc
arpl
int
mov
cwtl
ljmp
add
cmp
notb
push
movsl
test
adc
mov
or
add
ds
xorl
test
xlat
mov
and
pop
adc
gs
inc
sbb
push
rcrl
jecxz
cmp
ret
sbb
push
cwtl
jp
jbe
cwtl
test
stc
mov
add
in
sbb
cwtl
repz
xchg
dec
xor
cmp
ss
repz
out
js
mov
gs
inc
mov
jg
jp
imul
or
sti
out
int
sbb
ret
cmc
and
sbb
movsl
sbb
push
lods
xchg
or
test
mov
push
xchg
or
xchg
inc
cmp
xchg
sbb
xor
fwait
or
xlat
adc
test
or
mov
iret
cltd
les
clc
push
movsb
cmp
jmp
jo
pop
sbb
fdivrs
in
dec
mov
mov
dec
pusha
inc
aad
push
mulb
adc
fsubrs
sbb
test
and
aas
in
loope
push
fs
pop
cmp
idiv
test
push
shr
out
sbb
sti
lea
sbb
pop
or
or
push
push
mov
push
lret
pop
cli
fldlg2
mov
mov
movsl
mov
bound
or
mov
dec
sub
mov
fldenv
iret
movsb
xchg
pop
movsb
fs
test
xchg
dec
cmpl
ret
mov
mov
adc
pop
fdivrs
inc
in
lret
xor
lds
negb
cli
in
xchg
pop
sbb
aas
xchg
jge
and
aas
mov
add
inc
xchg
xchg
fs
xor
and
push
push
sub
jnp
or
sbb
cmpl
popf
idivl
add
clc
fsts
pop
andb
cwtl
mov
iret
ror
dec
xchg
pop
das
and
std
push
add
pop
in
mov
inc
push
movsl
adc
cli
aas
mov
gs
xlat
jp
aam
pusha
rolb
lock
push
push
mov
mov
mov
push
sbb
aam
fwait
in
aas
sbb
pop
insb
add
and
sbb
mov
xchg
leave
inc
mov
dec
and
adc
mov
inc
neg
test
neg
movsb
pop
xchg
ret
sbb
adcl
or
cmp
or
outsb
cltd
sbb
add
je
out
mov
repz
pop
test
add
mov
arpl
mov
inc
cmp
cltd
sbb
and
add
aam
jb
or
ja
stc
pop
cmp
push
mov
or
gs
xchg
add
lds
or
sbb
bound
push
in
push
insl
outsl
mov
andl
jmp
stos
pop
cwtl
cltd
xchg
and
inc
jmp
inc
fidivl
test
cmp
loop
fisubl
pop
insl
aaa
pop
mov
popf
pop
xchg
adc
cwtl
sbb
cli
loop
jecxz
cli
clc
mov
stc
mov
xchg
out
cmp
negl
and
adc
idivl
fnstcw
dec
mov
test
cmpsb
or
xchg
movsl
jle
call
push
and
mov
mov
lahf
pop
mov
imul
movsb
cmp
notb
sbb
sub
jae
in
and
inc
inc
andl
push
jb
pop
fiaddl
push
ret
inc
addl
push
pop
jb
scas
add
cmp
push
or
xor
js
rcrl
not
clc
mov
jecxz
inc
out
or
mov
cmp
in
mov
js
or
and
sahf
xchg
arpl
int3
xlat
mulb
rclb
insb
mov
cmp
cmc
lock
cmp
testl
movsl
add
jnp
popf
aaa
cmp
sti
mov
inc
in
or
aaa
xlat
jge
add
push
iret
cwtl
into
lds
cltd
stc
scas
mov
pop
sbb
push
sbb
aaa
scas
shll
sbb
outsl
inc
cmp
xchg
xor
aaa
mov
or
and
int
cwtl
xchg
in
add
pop
fmuls
push
imul
cmp
leave
mov
mov
add
mov
filds
adc
les
test
pop
push
cwtl
and
cmp
std
cwtl
push
loop
jge
cmp
mov
dec
stc
cmp
cld
cwtl
call
mov
mov
jne
add
push
cmp
cwtl
cmp
pop
lret
fdivrl
lahf
iret
in
adc
and
jae
sbb
enter
idivl
fs
fcmovnb
jns
push
ret
cmp
xorl
aam
out
mov
sbb
mov
mov
or
or
in
inc
push
roll
cmp
cmpsb
rolb
data16
outsl
sti
fsubrs
iret
sbb
loop
sbb
test
dec
ljmp
popf
lret
aaa
test
sbbl
or
and
test
aad
cmp
and
int
mov
cltd
sub
push
fdivs
mov
mov
jle
mov
push
test
cmp
fldenv
adc
ret
mov
xor
xor
pop
pop
rcrb
and
fcomps
mov
loop
cmp
loop
pop
mov
or
fstpl
flds
ret
cli
addr16
movsl
clc
dec
push
mov
pop
sti
jno
into
and
jno
decl
and
leave
mov
js
jmp
loope
xchg
push
add
jmp
sub
in
inc
ror
add
enter
or
lds
jnp
clc
add
lds
or
sbb
inc
and
movsb
and
pop
imul
sarl
sub
rcll
in
cld
mov
push
inc
pushf
cmp
push
xlat
sbb
or
loop
jnp
mov
test
lods
xchg
jne
and
js
rcll
xchg
negl
mov
inc
jmp
jecxz
ffreep
lds
add
call
dec
and
push
cmc
and
testl
xlat
xchg
inc
sbb
mulb
dec
jns
and
adcl
add
dec
mov
add
adc
mov
addr16
xor
xorps
jle
arpl
lcall
cli
and
xchg
mov
sti
add
aaa
rcll
movsb
in
call
mov
push
cwtl
pop
fdivrs
outsl
mov
and
xchg
ficoml
cltd
mov
add
sti
mov
pop
fwait
movsb
iret
aam
lea
loop
xchg
pop
subb
pop
cli
xchg
pop
mull
push
iret
cltd
out
mov
cmpsl
cmp
divl
lahf
mov
test
and
xchg
inc
sbbl
xchg
cmp
adc
mov
sbb
popf
push
pushf
mov
push
and
add
scas
mov
out
test
or
cmp
mov
aam
lea
dec
xchg
sbb
jnp
adc
mov
xchg
push
xchg
push
outsl
cli
add
mov
arpl
mov
and
ja
inc
and
aam
cmp
jp
and
xchg
pop
sbb
push
add
xlat
jb
lret
add
fadds
sarb
sub
std
xchg
loopne
stc
aam
jnp
fs
jle
scas
xor
lret
test
pop
inc
and
or
and
xchg
flds
loop
mov
add
in
mov
outsb
cli
add
cmp
adc
loope
lret
add
subl
push
pop
movsb
adc
sub
and
cltd
shrl
fwait
cli
sub
pop
sbb
or
pop
xchg
pop
ss
cltd
notb
sarl
and
dec
sub
stc
shr
daa
ds
cwtl
add
cmp
movb
out
fisttpl
add
shll
xor
inc
add
clc
cmc
subl
inc
add
add
mov
negl
in
test
in
in
push
fs
inc
or
test
pop
idiv
shlb
movsl
mov
aaa
clc
or
arpl
xor
push
fcomi
or
xchg
clc
testb
or
add
cwtl
notb
stc
push
dec
mov
push
push
in
in
sti
popf
and
or
lds
lcall
and
push
jnp
ret
mov
leave
cli
sbb
lds
xchg
jecxz
sbb
cmp
test
adc
pop
loop
movsl
cmp
jo
xchg
outsb
out
add
jo
in
test
xor
and
add
repz
or
adc
jno
push
movsl
gs
xlat
fistpl
lcall
xor
xchg
movsl
arpl
sarb
jl
lds
xchg
addr16
sti
fstpt
pop
lcall
movsb
jecxz
mov
inc
jae
pop
fcompl
rol
pop
pop
mov
jo
add
fcoms
adc
pop
and
xor
rol
xlat
stc
test
xchg
cltd
ret
fcoms
dec
xchg
mov
movsl
insl
iret
sti
push
xchg
mov
cli
das
out
sub
add
inc
lret
jge
repz
in
sbb
mov
xchg
push
pushf
fnstcw
pop
adc
and
js
test
pop
sarb
mov
and
sbb
cmp
pop
mov
sbb
cmp
add
cmpsl
lock
cmp
stc
leave
in
arpl
and
and
fwait
aas
cmp
push
outsl
ja
push
mull
flds
sub
cmp
sbb
pop
xor
pop
stc
ja
lds
xchg
int
xchg
cli
mov
stos
pushf
clc
jo
fwait
imul
pop
mov
sub
or
inc
out
lds
push
repz
sbb
dec
pushf
adc
fs
cwtl
pop
mov
std
adc
pop
xor
test
push
add
push
fstps
mov
adc
mov
in
xorl
mov
pop
jge
xchg
psubd
aaa
stc
sub
cmp
icebp
push
mov
test
shrb
or
cwtl
or
clc
rcll
outsl
add
jmp
fisttpl
inc
sahf
dec
mov
mov
fadds
inc
add
pop
sbb
mov
sub
add
rorb
test
fistl
arpl
ss
lods
fildl
and
pop
cmp
adc
clc
js
add
insb
add
enter
sarb
pop
inc
rolb
das
dec
jnp
push
inc
and
lea
push
inc
push
movsb
or
jb
lods
push
data16
dec
ret
xchg
cmpl
icebp
mov
or
dec
push
divl
inc
sbb
sahf
cmpsl
sbb
adc
ss
mov
push
push
clc
in
in
inc
arpl
fistpl
mov
mov
sbb
mov
cmp
outsl
jp
icebp
addr16
inc
ja
stos
jo
ficoms
aad
sub
movsl
add
inc
iret
notb
adc
notl
addl
mov
add
fldt
into
sub
jo
dec
cli
xor
dec
push
push
mov
mov
adc
clc
and
jns
mov
xor
cmp
cmp
jns
outsl
mov
mov
mov
mov
adc
xchg
cmp
add
loop
pop
fwait
cmp
std
std
sbb
fldenv
push
gs
jns
adc
fdivrs
ds
movsl
cltd
pop
xor
loop
cwtl
jnp
inc
out
push
pop
cmp
mov
cmp
mov
rcl
mov
fwait
ja
fldcw
negl
sar
and
pop
add
xor
adc
mov
cmc
sub
mov
jbe
and
push
and
cwtl
adc
jecxz
mov
add
mov
movsb
ja
xlat
dec
pop
mov
fldcw
push
push
shll
fcompl
and
inc
add
flds
loop
test
and
pop
fs
call
and
scas
aaa
and
and
adc
cmp
cmp
arpl
add
aaa
and
xchg
test
and
stos
ret
ja
stc
pop
xchg
negl
fadds
inc
aaa
mov
sbb
pop
mov
idivl
mov
cmp
les
xor
in
jecxz
js
cwtl
in
lock
push
xchg
add
cmp
mov
fstps
insb
inc
sub
test
divb
arpl
sub
fists
in
mov
cld
fbld
xor
sbb
adcb
mov
xchg
add
inc
fs
and
sahf
fdivrp
rcrb
and
jo
inc
jle
cmp
cwtl
cmp
xchg
lahf
cwtl
addr16
push
lods
mov
jns
sti
fistps
repz
lods
lock
pop
stos
push
in
loop
imul
jne
add
sbb
cmp
mov
add
notl
inc
inc
cmp
inc
or
mov
mov
jecxz
push
sbb
push
fists
fistps
enter
pop
xor
jae
icebp
ficomps
aad
loope
cmp
mov
dec
add
add
add
cwtl
cmp
or
mov
ja
les
repz
xchg
or
add
add
and
cmp
fildl
sarb
push
dec
dec
adc
fldlg2
jecxz
std
cltd
mov
or
fs
and
outsl
push
cmp
cmp
pop
push
sahf
ret
push
push
out
in
and
add
fdivrs
fbld
dec
cli
shlb
cmp
xchg
clc
xor
movsb
andl
inc
xchg
outsl
cmp
mov
and
add
jecxz
pushf
clc
inc
in
xchg
movsl
sbb
test
sti
push
fstps
movsb
and
pop
test
sti
jns
inc
xchg
inc
adc
cmp
or
aaa
pop
outsb
cmp
enter
push
push
fistpl
mov
ret
xlat
mov
loope
cmp
cmc
mov
push
jns
add
dec
cli
cmp
and
das
xor
mov
inc
sbb
cwtl
cwtl
jne
cmp
mov
hlt
add
mov
mov
sub
mov
xorb
pop
loop
gs
sub
jnp
or
aaa
push
push
or
or
add
sbb
cmp
cmp
jnp
push
repz
loope
sti
addr16
add
mov
and
and
fistl
xchg
jle
pop
fsubrs
cmp
cmp
push
mov
and
cmp
or
sbb
cli
testl
cmp
sti
ret
jnp
fidivl
shl
pop
bound
movsl
in
inc
push
les
addl
mul
lret
mov
xchg
lds
push
push
sbb
inc
jle
push
neg
iret
sbb
jns
inc
ds
mov
adc
ret
rcr
jmp
mov
sahf
push
sbb
cmp
gs
arpl
xchg
jg
clc
sahf
jns
inc
es
rcrb
popa
cltd
aaa
inc
fiaddl
scas
sbb
mov
and
cmp
or
pop
add
in
jns
inc
pop
in
push
push
dec
cwtl
fxch
add
sahf
mov
cli
push
sbb
xchg
cmc
cmp
stos
xorl
loop
mov
movsb
cmpl
xlat
sbb
mov
shll
fildl
outsb
in
stc
movsl
adc
pop
pop
jp
aaa
push
pop
jge
bound
cltd
and
cwtl
sti
sbb
jmp
cmpsl
xor
test
fxtract
movsl
sbb
sti
mov
push
popf
inc
rcl
inc
adc
jae
cltd
mov
outsb
in
cmp
inc
movsb
in
push
testb
jle
pop
aaa
adc
mov
push
adc
cwtl
xlat
iret
mov
xchg
addl
xchg
cld
sarl
negl
loop
inc
aam
add
rorl
add
inc
sbb
push
pop
sbbl
in
jl
add
xor
gs
js
jns
push
imulb
and
repz
sahf
stc
pop
test
shl
sarl
push
test
and
fistl
inc
and
test
push
push
stc
jns
mov
fsubrs
add
mov
in
loop
pop
in
jmp
inc
sahf
mov
mov
ja
xchg
cs
arpl
popf
fwait
les
ja
xchg
mov
iret
cmp
arpl
pop
shlb
inc
sub
mov
in
rclb
fadds
or
push
popf
in
dec
mov
pop
test
aam
add
aad
sbb
sbb
clc
mov
loopne
sub
jmp
ret
and
adc
mov
loop
mov
sbb
notb
adc
inc
add
roll
fildl
pusha
and
push
outsl
fldcw
imul
movl
mov
out
inc
add
lea
ljmp
gs
and
movsl
cmpsl
jle
hlt
cmp
sti
xchg
push
popf
out
jnp
xchg
out
pop
sbb
fdivs
in
sub
push
jae
testb
aam
mov
sti
stos
outsl
pop
xor
inc
pop
in
arpl
pop
jnp
movsb
mov
lock
xor
fstpt
loopne
inc
out
and
pop
ret
gs
cmp
pop
mov
mov
pushf
add
sarb
in
jg
inc
in
dec
iret
cmp
mov
xor
add
sbbb
add
sti
shrb
push
mov
cmp
sarb
adc
xchg
mov
ret
cmp
mov
outsb
and
xchg
mov
mov
sub
xchg
cmp
mov
cmpl
nop
sbb
cmpsl
ja
add
cmpl
test
arpl
daa
out
and
adc
fwait
ret
xlat
xor
sbb
pop
sarb
mov
cmpsl
inc
pop
pop
add
gs
jg
or
sti
movsl
mov
mov
in
pop
test
test
sbb
mulb
sbbl
jg
cmp
xor
imul
inc
shl
shll
sbb
xlat
mov
popa
pop
mov
out
arpl
push
cltd
cmpl
test
mov
inc
stc
std
mov
pop
xorl
fistl
pop
and
jecxz
fdivr
lods
imul
loopne
lds
loope
xlat
mov
sbb
cmp
mov
clc
inc
push
push
test
pop
iret
sbb
je
ret
inc
xchg
inc
and
and
mov
mov
outsl
adc
ja
mov
imul
movsb
pop
arpl
push
sbb
add
xor
push
adc
pop
cmc
stc
or
movsl
and
pop
cli
js
testl
orl
sbb
shl
mulb
cmp
out
cmp
adc
scas
mov
xchg
clc
out
jnp
xlat
outsl
or
sbb
sub
stc
aad
push
in
inc
pop
mov
or
mov
gs
nop
cli
in
fldt
and
inc
mov
adc
xchg
jo
lods
sub
xchg
mov
std
orl
or
cltd
push
rcrb
cmpsb
cmp
cltd
mov
sahf
add
loop
mov
adc
inc
and
call
sub
pop
repnz
sti
aam
in
add
jnp
cltd
enter
fnsetpm(287
cwtl
sub
push
insb
xchg
je
lret
cmp
inc
sti
leave
and
lods
test
sahf
xor
sub
and
sbb
loop
xchg
aaa
adc
nop
fimuls
icebp
push
jnp
stc
push
jns
or
test
les
test
xor
jbe
stos
sbb
mov
sub
sbb
cli
fwait
fs
lret
jnp
pop
gs
push
cmp
outsl
jne
pop
ja
add
mov
cmp
in
and
notl
arpl
mov
push
ja
movsl
mov
sti
arpl
adc
aas
jmp
mov
sbb
or
mov
jle
clc
add
cmc
les
insb
inc
mov
sub
fistpl
pop
push
stc
push
xlat
movsw
pop
xor
and
adc
sti
pop
mov
sbb
movsb
xchg
sbb
inc
movsl
xchg
inc
mov
lcall
and
ja
cwtl
add
sub
inc
xchg
call
mov
add
ja
push
add
xchg
je
and
sbb
dec
cwtl
scas
pop
mov
adc
push
add
or
lods
adc
inc
fdivr
dec
lea
outsl
clc
outsl
lahf
xor
fs
ja
xorl
icebp
fldenv
xchg
js
pop
popa
fwait
iret
or
sbb
mov
rcrb
arpl
lahf
or
inc
push
mov
sbb
shl
inc
cmp
and
or
arpl
leave
jbe
in
mov
mov
sahf
enter
das
in
sahf
test
mov
adcl
in
sub
jl
dec
sub
inc
outsb
mov
gs
cmpl
rcrb
lods
sbb
imul
arpl
inc
push
xchg
and
test
or
cmp
cltd
imul
addr16
inc
pop
xor
sahf
out
loop
in
aad
mov
pop
pop
pop
adc
mov
cmp
sub
ja
fsubs
add
movsl
sbb
nop
pop
fistps
xor
imul
pop
mov
and
cmp
mov
and
sbb
repz
xchg
pop
or
fistl
movsl
in
and
notl
cltd
sbb
loop
inc
fwait
loop
inc
jl
cmp
outsl
sbb
mov
mov
lock
cmp
cmp
push
loope
and
stos
fdivrs
mov
js
les
sub
inc
test
adc
jmp
add
les
gs
xchg
ja
jecxz
jecxz
adc
repnz
insl
test
mov
jmp
stos
push
sub
cmc
imul
daa
pop
js
or
das
in
inc
test
jns
add
jnp
xchg
mov
loop
test
sti
mov
lock
mov
xor
imull
xchg
add
mov
sbb
adc
repnz
and
push
les
sti
mov
and
mov
pop
cltd
mov
jb
or
inc
xchg
cmp
adc
iret
xlat
jnp
xchg
dec
pop
sti
mov
sub
push
mov
ss
or
mov
cli
cmp
adc
cli
sub
push
jno
pop
mov
jmp
push
mov
aaa
test
lods
xchg
adcb
inc
les
pushf
lcall
pop
xchg
std
cmpb
rcrb
cmp
test
fiaddl
cwtl
cs
add
je
dec
push
adc
pop
lods
call
lret
jns
jecxz
push
and
adc
imul
cltd
push
sub
xchg
dec
pop
insl
push
fisttpl
inc
sahf
test
pusha
out
cmp
cmc
inc
pop
mov
xchg
imul
fsts
and
rclb
inc
arpl
or
test
jecxz
inc
or
aaa
xchg
sti
cmp
movsb
pop
mov
loope
loop
test
mov
xchg
add
mov
outsb
sbb
aaa
add
scas
add
ja
outsb
test
loop
jnp
aaa
jb
fildl
fxtract
gs
xchg
mov
mov
mov
mov
fiadds
cmp
xchg
subl
mov
das
mov
adc
pop
sbb
in
sbb
dec
outsb
adc
movsl
xchg
repnz
sbb
jo
ds
sbb
inc
push
or
mov
mov
fs
test
pop
clc
fcomps
lds
and
shll
movsl
add
daa
cltd
aaa
inc
pop
jecxz
cmp
mov
aaa
or
aam
pop
mov
stc
and
cltd
and
test
inc
addl
and
cmp
in
and
insl
mov
sub
outsl
arpl
push
mov
cmp
jnp
lds
jmp
mov
sub
inc
sub
cmp
enter
aas
in
aad
jl
cli
inc
xor
mov
movsb
or
or
loop
sbb
clc
aaa
jnp
fwait
xchg
inc
sub
adc
pop
pop
cltd
notb
xlat
jns
movsb
cwtl
gs
inc
outsl
inc
cmc
dec
icebp
or
stc
mov
idivl
adc
mov
cmp
inc
in
and
out
pusha
stc
test
lret
scas
lock
push
movsl
dec
sahf
sub
lret
std
cmp
decl
cmpsb
push
sahf
lret
in
inc
add
sti
je
sbb
push
fdivr
jbe
adc
fscale
cmp
rol
andl
enter
sub
push
mov
adc
ja
fistpl
loopne
cwtl
ret
jle
and
inc
cmc
add
xlat
test
mov
sub
jno
jecxz
sti
pop
cltd
jmp
fcomip
push
daa
push
clc
dec
lods
fcomps
jmp
int
jmp
jmp
sahf
int3
lcall
leave
xchg
loop
push
test
movsb
pusha
sub
sbb
shlb
mov
shlb
pop
cwtl
les
ret
movsb
add
cltd
or
xchg
notl
ja
fstps
push
cmp
sub
dec
xor
out
das
gs
fnstenv
or
sbb
sbb
pop
and
fsubrl
lods
mov
xchg
and
in
cmp
pop
les
lret
mov
test
mov
and
ja
or
mov
stos
sub
insb
push
into
in
aas
inc
adc
jnp
jecxz
jp
fstps
xchg
push
and
neg
inc
out
mov
fsubp
imul
loop
and
inc
pop
mov
test
cmpb
inc
mov
xchg
fs
push
inc
lea
enter
cmc
jmp
sbb
push
pop
testb
insl
push
jnp
imul
sbb
clc
mov
aas
mov
and
sbb
pop
icebp
pop
pop
jae
into
aas
aad
mov
aas
cmp
and
clc
sti
mov
test
sbb
pop
imulb
pop
std
push
movsbl
sti
inc
pushf
inc
and
fdivl
sbb
sahf
mov
or
inc
ja
xchg
divl
sbb
dec
sbb
cltd
adc
inc
xor
cli
pop
mov
pop
xchg
jns
call
push
cmp
and
mov
inc
push
leave
outsb
add
sahf
lahf
in
shll
test
fisubrl
pop
or
dec
xchg
pusha
aas
sub
in
movsb
aas
pop
inc
stos
iret
movsl
das
xchg
fistpl
bound
mov
pop
adc
aam
push
pop
call
mov
fstpl
sahf
jg
mov
dec
mov
push
sbb
sbb
fwait
sbb
sbb
sub
sbb
int
sbb
test
push
lcall
pop
xor
in
inc
jmp
mov
adc
xlat
stos
and
mov
sahf
pop
leave
ret
js
fmuls
pop
ret
sbb
and
pop
mov
adc
add
sarb
leave
ss
rcl
pop
jle
iret
movsl
in
scas
or
in
jge
push
rcr
sahf
loop
adc
pop
push
pop
icebp
aas
lea
push
cmp
js
mov
add
dec
mov
and
and
push
bound
pop
sahf
movsb
xlat
push
in
or
ret
xchg
jle
mov
jge
outsl
mov
dec
pushf
cmpl
inc
in
enter
and
lds
cwtl
inc
add
aas
insl
clc
pushf
inc
leave
pop
xor
pop
cli
push
mov
push
mov
js
sahf
push
decb
popf
jp
inc
lea
popf
push
sub
jle
dec
cs
cmpsl
fcomps
mov
jnp
jge
mov
test
cwtl
fdiv
fcomp
xchg
mov
ss
aam
cmpsl
fcomps
push
insl
sahf
scas
xor
jecxz
pop
jno
inc
cwtl
xchg
mov
andl
lods
add
push
push
cmp
sbb
pop
test
je
movsb
out
inc
loopne
cmp
cwtl
sti
mov
iret
xchg
rclb
jnp
cmpxchg
jge
adc
in
mov
and
aas
inc
push
hlt
addr16
mov
cmp
pop
pop
std
jecxz
iret
add
lret
sbbl
and
dec
push
pop
movsb
mov
mov
sbb
fistpll
mov
dec
push
scas
loopne
test
adc
push
inc
ret
sbb
adc
mov
push
push
cmp
pop
es
xchg
mov
xchg
iret
cli
les
int
aaa
repz
jg
ljmp
testb
arpl
push
movsl
movsb
xlat
mov
movl
cmp
fs
idivb
adc
orb
arpl
xor
aas
loop
test
xchg
xchg
mov
scas
movsl
and
repz
mov
xchg
clc
sub
in
ret
push
mov
fistpl
clc
inc
pusha
dec
in
and
or
push
stos
fcmovnu
scas
sub
push
test
andl
gs
ret
jnp
add
pusha
imul
push
in
xor
sbb
pop
pop
adc
mov
pop
jecxz
shll
adc
inc
iret
jno
xlat
and
cld
mov
pop
cli
xchg
dec
inc
jns
repz
sbb
jecxz
pop
scas
and
movsl
sub
lds
pop
ja
push
leave
mov
pop
pop
add
cmp
sub
cmp
das
mov
and
mov
sbb
fnstenv
int
lahf
jbe
jo
clc
pop
add
idiv
mov
mov
test
mov
into
lds
insl
mov
cs
aad
adc
cmovno
les
lahf
cltd
adc
not
adc
dec
xchg
adc
cmp
push
mov
mov
mov
fistps
cli
mov
cmp
in
push
test
sbb
push
fnstcw
sub
or
test
in
arpl
pop
add
les
adc
ret
push
xor
fsts
inc
pop
cwtl
sbb
inc
hlt
mov
mov
mov
sbb
fdiv
adc
cltd
stc
insb
mov
movsl
and
and
push
in
mov
rcrl
sbb
outsl
add
popa
add
adc
push
xchg
sbb
inc
fs
js
fistpll
cwtl
jns
push
clc
inc
add
cmp
gs
test
mov
adc
adc
mov
push
pop
jecxz
testb
movsb
push
and
movsl
in
std
pop
js
cltd
jp
cltd
loop
xchg
lods
bound
sub
inc
add
jmp
and
and
mov
ss
pop
add
int3
push
mov
icebp
bound
inc
loop
cli
lds
les
inc
sub
cmp
mov
out
xchg
movsl
sti
pop
mov
inc
mov
in
lea
loop
lds
mov
cmp
jmp
inc
aaa
xchg
cmpb
jmp
lret
mov
add
cltd
mov
sub
test
inc
jmp
inc
jns
jecxz
inc
cmp
add
mov
cli
mov
xchg
mov
call
cmp
mov
push
nop
popa
dec
dec
cmc
jne
jle
ret
lahf
and
adc
or
mov
cli
jl
add
add
movsl
and
lahf
dec
dec
sbb
pusha
sbb
cli
adc
and
cmp
xchg
inc
mov
push
jns
clc
cwtl
inc
pop
inc
popf
notl
stos
jmp
loope
lds
adc
mov
or
pop
jecxz
xor
cltd
mov
stc
xchg
call
cmp
aas
fisubl
sbb
xchg
inc
scas
cmp
inc
mov
mov
jbe
push
divl
sub
test
lret
aaa
xlat
xchg
lea
pop
lds
cmp
inc
jmp
push
xchg
and
push
mov
scas
sbb
incb
or
add
cmp
sbb
movsb
mov
inc
sub
cltd
sti
push
adc
add
aad
jns
mov
mov
cmp
jecxz
xchg
cli
sbb
add
cmp
outsl
jl
sbb
fildl
sbb
mov
outsb
sbb
loop
mul
notb
adc
test
daa
mov
movsl
lret
jb
sbb
jns
das
aaa
xor
cmp
xchg
js
inc
and
sti
fwait
xchg
shll
mov
fdivrs
scas
aam
push
iret
and
cmp
aam
int3
mov
mov
mov
pop
xchg
jno
xlat
cltd
nop
cltd
xlat
push
pusha
lret
add
popa
rcrl
inc
fstps
fdivr
add
pop
mov
lahf
add
and
shld
push
pop
pop
mov
xor
cltd
les
divb
mov
nop
sbb
je
bound
inc
inc
xchg
leave
jns
ja
or
cli
cmp
and
cmp
mov
add
push
push
rcrl
and
or
arpl
mov
mov
inc
pusha
cmp
pop
and
xlat
mov
sbb
and
ret
inc
cltd
pop
inc
sbb
and
push
mov
mov
js
and
cwtl
flds
push
jns
jp
sub
fs
ljmp
cmp
sbb
cmp
lds
scas
negl
add
test
ljmp
jnp
adc
fwait
inc
test
cmp
js
mov
stos
push
test
ret
add
movsb
xor
push
jecxz
push
jae
pop
loop
dec
test
iret
iret
cmpsb
scas
pop
outsl
sbb
adc
js
repnz
test
aad
in
xorl
cltd
sbb
xchg
pusha
fsubs
pop
add
mov
and
arpl
sub
xchg
les
inc
jo
fistpll
add
or
or
pop
and
cwtl
and
in
movsl
sbb
mov
xchg
dec
push
or
or
ja,pt
in
fidivl
movsl
cmp
pop
add
arpl
cmp
adc
loope
mov
aas
aas
mov
and
mov
jecxz
sbb
hlt
std
jp
incl
xchg
test
pop
ret
inc
cmp
aad
push
movsb
je
int
aad
popf
mov
add
shrl
outsl
sbb
pop
push
and
ret
daa
clc
inc
mov
arpl
push
imul
adc
iret
in
test
cltd
insl
cltd
pop
dec
jle
rclb
les
inc
clc
js
addl
into
icebp
test
sbb
int3
movsb
sbbl
pop
incb
fsubr
pop
aaa
mov
sub
mov
test
stos
mov
div
jecxz
movsl
push
ret
jle
mov
fildl
cmp
fldenv
cmp
clc
or
ss
stc
mov
mov
adc
iret
pop
push
or
sbb
stc
imul
xchg
jns
inc
jle
adc
add
inc
loop
pop
cltd
fcoms
inc
shll
fwait
imul
out
push
int3
mov
ret
inc
movsl
xchg
ss
add
mov
xchg
cmp
pop
les
dec
hlt
stc
cmc
js
lret
addl
scas
movsl
pop
ja
sbb
inc
stc
test
fsubl
push
fstl
hlt
fildl
lds
inc
and
test
imul
inc
inc
push
xchg
push
cmp
mov
fs
cwtl
jnp
push
mov
jns
or
cmp
add
leave
jnp
inc
add
and
mov
add
and
in
sbb
pop
mov
sbb
shlb
mul
pop
test
test
add
ja
sbb
imul
cmp
addl
xor
jne
ret
pop
mov
js
jp
sub
mov
arpl
push
loop
repz
pop
add
xlat
stc
iret
je
mov
cli
xor
and
js
pop
cs
fisubs
adc
clc
mov
cwtl
pop
mov
add
sti
mov
js
in
push
fsqrt
push
arpl
outsb
sbb
insl
movsb
xchg
cmp
pop
mov
add
iret
inc
mov
hlt
xor
pop
pop
push
stc
rcl
in
fs
adc
push
addb
dec
and
arpl
mov
jo
jnp
iret
in
out
rclb
adcb
pop
aaa
sar
outsb
add
xor
mov
cli
push
aad
cmp
cmp
cmpl
arpl
dec
add
and
adc
mov
fwait
addl
cltd
aas
stos
icebp
rcr
mul
jp
into
mov
adc
jae
inc
cmp
sbb
fstpt
gs
in
mov
mov
lahf
mov
loop
sbb
dec
adc
add
pop
rcr
movsl
sbb
ret
sub
fdivrs
and
add
out
mov
jge
dec
push
lds
cwtl
lods
pop
add
sbb
scas
sbb
clc
xor
outsl
pop
outsl
pop
mov
cmp
mov
add
lock
xor
pushf
lds
fs
arpl
in
pop
inc
and
fdivl
add
cmp
arpl
sbb
cltd
mov
sub
inc
dec
pusha
cwtl
cmp
adc
fwait
mov
dec
add
jnp
ret
cwtl
add
dec
fs
cltd
aas
add
les
push
in
and
cmpsl
cmp
arpl
xor
add
test
add
sub
pusha
cmp
sbb
push
or
repnz
insl
scas
push
sbb
sbb
je
mov
add
fistpll
xchg
les
jecxz
pop
push
test
iret
xchg
mov
mov
sbb
fcoml
pop
dec
mov
imul
mov
and
sbb
push
lock
sbb
jp
or
mov
sahf
sbb
divb
push
cmp
xchg
ljmp
jl
pop
xchg
add
imul
in
mov
jmp
in
push
loopne
xchg
push
sub
stc
push
rcrl
aad
rolb
inc
and
add
push
in
xlat
fwait
test
mov
out
cwtl
xchg
jmp
jb
pop
ss
mov
loop
lods
subl
xchg
push
icebp
and
inc
sbb
int
fistpl
xlat
aas
xchg
ja
bound
jnp
sahf
mov
push
jecxz
sbb
sub
out
xchg
cli
jnp
hlt
sbb
xchg
js
mov
mov
cmp
mov
mov
loope
ja
repz
mov
in
push
xlat
stc
aas
jns
scas
sti
push
or
sahf
inc
popf
cmp
pop
add
cwtl
mulb
sbb
sub
gs
out
push
jnp
icebp
movsl
pop
cmp
xor
leave
ret
ja
sbb
outsb
lds
inc
inc
mov
and
and
inc
cmpb
cmp
cmc
add
fmull
add
mov
jnp
sbb
cwtl
vpsrld
fld
inc
add
data16
aas
int
fwait
stc
insl
gs
cwtl
aam
mov
clc
and
pop
and
dec
xor
std
jne
popa
sahf
mov
test
add
clc
pop
mov
in
ror
jg
test
jecxz
imul
jns
rorb
lock
in
pop
incl
cltd
in
fwait
sub
cli
xchg
push
sarb
fdivrl
add
fyl2x
and
inc
cwtl
arpl
lret
mov
mov
js
sbb
push
jp
fadds
in
cwtl
adc
cli
cmp
or
sarl
push
loop
sbb
jnp
xchg
fwait
pushf
add
and
cmc
pop
dec
sahf
xor
cli
and
sbb
fidivrl
inc
pop
push
mov
add
fisubl
mov
push
mov
inc
add
enter
mov
das
jle
testl
leave
xchg
xchg
rcll
inc
pop
adc
jecxz
push
mov
and
push
lret
cmp
loop
sbb
push
cmp
clc
mov
and
sub
in
fxam
add
and
sbb
popf
fidivrl
sbb
out
inc
test
cmp
xchg
add
mov
mov
js
or
push
addr16
jns
icebp
mov
jmp
and
sbb
xor
cli
xor
add
xor
xor
ds
inc
mov
sbb
popf
mov
fisubl
les
adc
popf
cmp
ss
jo
shll
and
loope
jnp
in
sbb
lea
es
pop
and
sbb
pop
sbb
rol
aaa
in
or
push
add
and
in
adc
sti
ja
icebp
sbb
sub
repz
cmpsb
scas
jle
pop
and
push
mov
in
js
cli
mov
inc
test
clc
arpl
ja
jecxz
enter
inc
fisttps
push
fildl
cmc
stc
js
xor
sarb
loop
mov
orb
jge
and
fwait
sbb
dec
fcmovbe
aaa
pushf
fadd
pop
mov
xchg
jge
fnstenv
repz
xchg
jecxz
pushf
rcll
add
aaa
inc
fnstsw
inc
fwait
hlt
cwtl
sbb
adc
mov
adc
mov
mov
dec
sahf
and
pop
push
jns
xor
fldt
cmpb
popf
inc
pop
out
mov
mull
inc
adc
fld
dec
push
dec
mov
idiv
sbb
mov
mov
pop
cmc
xor
sti
ffreep
or
movsb
out
mov
add
mov
cwtl
mov
cmp
mov
cmp
aam
mov
add
and
sahf
jns
incl
loope
xlat
stc
pop
cmp
add
pusha
push
in
cmp
sbb
lds
sub
inc
and
leave
sarb
jo
dec
mov
repz
movsl
fsubs
clc
pop
dec
sarl
lret
jmpw
and
and
push
movsb
lcall
shll
pop
jmp
and
fstl
cltd
lcall
lahf
mov
push
inc
mov
ret
pop
push
xor
sbb
add
jecxz
aam
jo
fstps
adc
out
jge
flds
insb
jno
jecxz
cli
movsb
loop
aaa
test
shr
js
sbb
cmpl
adc
testl
sbb
adc
xlat
lcall
aaa
xor
inc
ftst
sbbl
je
cltd
stc
jecxz
dec
xchg
and
jns
fcomp
pop
fldl
adc
add
xchg
add
xchg
fisttpl
xor
adc
movsl
and
add
or
mov
xchg
fdivrs
inc
sub
pop
mov
push
arpl
sub
mov
xchg
ret
jnp
jmp
cmp
popa
stc
push
xlat
push
and
iret
mov
push
cmc
scas
movsl
shlb
pop
mov
rol
cmp
ss
pop
outsb
xchg
inc
push
mov
mulb
jbe
stc
pop
jns
and
sbb
mov
cltd
sbb
stc
add
sbb
pop
push
pushf
test
jl
repz
fistpl
xchg
leave
adc
push
jg
push
int
xor
pop
ret
movsl
sbb
xor
flds
clc
jnp
mov
gs
mov
lret
sbb
and
arpl
xor
add
pop
add
arpl
cmp
sbb
outsl
vlddqu
xor
sub
adc
or
mov
movsl
flds
push
aaa
inc
ja
jmp
jecxz
inc
fwait
dec
fldenv
pop
mov
inc
pop
movsb
inc
cmp
notl
lcall
and
cmp
cmp
das
and
jecxz
fs
orl
ja
std
and
inc
and
mov
fwait
pop
jg
sbb
inc
and
test
loop
idivl
mov
sub
jmp
add
push
test
ret
jg
cmpl
data16
pop
into
pop
mov
sub
push
gs
or
sbb
add
mull
ret
or
push
sbb
cmc
add
fsts
mov
jns,pt
je
sbb
out
fs
dec
mov
or
mulb
adc
jo
pop
idivb
es
fldt
xchg
push
cmp
sarl
pop
pop
rol
mov
jg
les
dec
fxam
inc
mov
jge
cltd
pushf
mov
pop
lock
adc
jnp
fadds
xchg
jge
sbb
rcrb
gs
mov
xchg
movsb
fsubrs
call
les
inc
xchg
push
sbb
ss
add
cmp
cmp
pop
or
and
and
in
or
push
sahf
ret
popa
xchg
jns
rolb
inc
add
xor
jmp
xchg
fs
aaa
movsl
fwait
adc
fsts
inc
cli
in
add
and
aas
inc
mov
xchg
adcb
insl
scas
or
push
mov
jge
mov
movsl
mov
adc
sbb
ret
or
outsl
sbb
pop
fsts
pop
fistl
add
add
adc
loope
and
pop
cmp
adcl
cli
jnp
mov
lds
ffree
sub
clc
mov
sbb
add
in
test
fsubs
hlt
jecxz
xor
cli
pop
in
xor
cmpsl
bound
cmp
stos
inc
out
and
pop
xchg
shl
or
rcrb
jecxz
xchg
cmc
gs
inc
sub
mov
add
mov
and
cwtl
test
movsb
cltd
mov
das
out
outsl
cmp
cli
loop
push
mov
mov
into
adc
add
inc
sbb
cmp
mov
aaa
jnp
mov
fistl
ss
pop
xchg
jnp
push
aaa
loop
cld
adc
sahf
or
xchg
and
cmp
pop
add
push
clc
cmp
jmp
fwait
enter
xor
les
ret
xchg
test
cwtl
popf
stc
push
push
adc
inc
or
dec
push
push
cmp
std
mov
mov
das
fisubl
inc
imul
sahf
out
repz
mov
xlat
xchg
inc
fstpt
push
pusha
in
jo
and
rcrb
push
jne
fs
and
cmp
imul
popf
lds
lcall
movsb
xor
fs
add
arpl
filds
or
fildl
hlt
insb
and
movsl
pop
fwait
and
cmp
pop
mov
mov
cmp
inc
pop
aad
loope
loop
mov
lret
jmp
and
fistpl
js
sahf
push
mov
cmpl
adc
inc
ja
popf
mov
sbb
icebp
iret
test
mov
dec
aaa
and
pushf
popf
sbb
cmp
xchg
movsb
clc
pop
mov
ss
or
and
push
inc
ret
scas
xor
sub
adc
stc
add
sbb
jg
lret
pop
les
imul
cmp
inc
arpl
cwtl
sti
push
mov
add
mov
push
das
pop
imul
mov
cmp
pop
add
mov
adc
addr16
bound
add
in
movsb
xchg
cli
xor
mov
pushf
sbb
xor
mov
in
ficomps
cwtl
fs
inc
fnstcw
fwait
and
pop
push
xchg
imul
cltd
xchg
loop
mov
fmul
rcl
ja
sbb
cltd
inc
mov
add
jnp
mov
inc
test
or
lds
sub
inc
jnp
push
sub
jmp
clc
add
xchg
xchg
and
fwait
mov
in
and
popf
movsl
sbb
add
fidivl
push
pop
scas
in
add
adc
cmp
sbb
mov
jmp
sbb
lds
stos
pop
loop
push
jno
fmuls
add
add
dec
push
lds
loop
movsl
jb
jecxz
loope
in
sbb
sbb
pop
rcr
add
pop
aaa
or
inc
iret
add
cmp
mov
test
sbbl
push
ja
mov
in
nop
sbb
repnz
stos
cmp
adc
add
adc
sbb
in
mov
fwait
outsb
test
mov
jp
or
pop
scas
push
mov
inc
fimuls
in
idivb
loop
ret
cwtl
test
sbb
jns
inc
mov
lds
inc
sbb
cltd
cmp
adc
inc
inc
pop
shlb
xor
insb
sub
xlat
dec
cltd
divl
mov
sub
inc
ficompl
nop
lret
popf
fistpl
int
dec
jo
pop
add
adc
push
movsl
push
xlat
push
adc
inc
sbb
leave
cwtl
mov
in
pop
notl
stc
arpl
sbb
enter
adc
sbb
jbe
mov
add
bound
stos
inc
pop
mov
cmp
or
xchg
pop
mull
push
outsb
mov
pop
pop
push
imul
mov
jne
in
xchg
std
mov
adc
mov
repnz
cwtl
aaa
mov
cltd
lcall
cli
cmp
dec
xor
in
test
movsb
sbb
call
sub
fildl
in
sub
push
mov
push
and
dec
add
in
shl
sti
and
mov
fldcw
imul
dec
outsb
in
pop
lea
dec
les
adc
cltd
xchg
mov
lock
testb
jns
add
movsb
fcoms
mov
repz
xchg
rorl
ja
mov
xchg
sbb
xor
adc
pop
mov
inc
arpl
cmp
mov
xchg
lahf
add
aam
and
pop
cwtl
fstpt
push
jns
mov
cwtl
inc
adc
aaa
adc
push
cmp
add
cli
fadd
add
pop
lea
arpl
and
xorl
xlat
hlt
inc
cmp
xor
and
lods
lret
enter
rcrb
push
cli
movsl
in
sub
imul
xlat
arpl
arpl
pop
jns
xor
popf
xlat
clc
sbbl
loope
pop
movsb
dec
test
mov
ret
ja
sarl
jo
js
push
sahf
movsb
pop
adc
xlat
fwait
adc
and
add
lds
and
mov
sbb
icebp
cmp
mov
jmp
xchg
les
lds
aad
cmp
add
pop
jle
cwtl
add
sbb
jns
pop
mov
xlat
mov
cltd
sub
push
xor
sbb
fsubs
gs
pop
jae
sbb
cwtl
adc
adcl
pop
xchg
arpl
mov
scas
sarb
rcrb
imul
inc
push
aad
mov
cltd
outsl
popf
in
xchg
add
arpl
les
negl
and
sbb
xchg
mov
cltd
sti
and
mov
sbb
jae
sahf
sbb
push
aam
ja
loop
cltd
fwait
dec
or
and
lcall
jae
rorb
xchg
pop
push
pop
outsb
lea
pop
mov
outsl
mov
pop
cmp
xorl
jge
or
pushf
add
mov
xor
mov
add
pop
mov
sbb
int3
push
test
sbb
test
out
sar
push
ja
or
sbb
push
sbb
add
pusha
sbb
notb
test
jns
jae
xchg
loop
or
sti
xor
push
pop
mov
ret
sbb
pop
test
inc
adc
mov
mov
adc
sar
insl
inc
push
sbb
inc
adc
scas
ja
push
push
push
cwtl
nop
push
cltd
add
cmpsl
and
add
and
ret
in
add
loop
cmp
dec
dec
shrb
push
loope
sbb
scas
arpl
dec
pop
mov
cmpl
imul
inc
add
js
xchg
cltd
enter
add
jns
or
jl
aad
sbb
aaa
jo
push
std
ret
add
mov
or
sbb
pusha
adcl
and
sbb
add
mov
inc
pop
dec
ret
in
jmp
fmull
jno
not
pop
or
outsb
sbb
mov
adc
iret
sahf
js
iret
cmp
pop
push
and
and
or
aaa
push
mov
xchg
sbb
mov
cmp
or
in
cwtl
arpl
fnstcw
dec
add
ret
pop
sti
mov
pushf
adc
cltd
test
jb
dec
sahf
xchg
mov
mov
popa
or
push
gs
cmp
cmp
pop
les
ret
sbb
mov
imul
inc
jb
or
push
or
sbb
pop
add
mov
jns
push
add
inc
push
xchg
jg
testl
mov
mov
push
jo
fdivrs
loope
negb
jns
fstps
inc
xchg
fs
xlat
jnp
sub
subl
sbb
sti
bound
xlat
push
mov
fstpt
arpl
aaa
sbb
cwtl
add
fwait
jns
inc
outsb
gs
jecxz
add
loop
push
mov
xlat
push
mov
cmp
ss
sub
add
addr16
das
mov
sbbb
adc
pop
cmp
xor
lea
inc
jns
loope
push
movsb
inc
fldcw
and
inc
cmp
fmuls
popw
pop
pop
cmp
aam
mov
mov
cmp
loop
clc
pop
cmpb
mov
pop
mov
adc
dec
aaa
in
loope
cli
ret
loope
stc
neg
xor
fs
sbb
out
jecxz
pop
sbb
inc
js
pop
bound
push
ret
fsts
sbb
adc
jo
jnp
es
push
inc
cmp
cld
icebp
aaa
ret
cwtl
mov
pusha
xor
jmp
sbb
pop
and
push
fsubs
xor
add
in
and
mov
imulb
inc
movsb
pop
cli
pusha
pop
pop
test
fldt
mov
inc
fwait
dec
fnstenv
movsb
in
mov
lods
stc
jecxz
fwait
popf
in
hlt
pop
push
int
pushf
test
xchg
cmp
sbb
gs
stc
shl
loop
xlat
mov
test
bound
cmp
mov
and
sar
sarb
and
sbb
idivb
imul
dec
and
and
inc
push
in
cli
mov
xchg
sbb
sub
aam
sbb
inc
mov
cwtl
hlt
pushf
and
inc
jb
lret
test
pop
push
add
sahf
clc
js
inc
out
inc
push
data16
and
cmp
pop
ret
cmp
mov
test
mov
notl
sbb
xchg
aaa
in
fptan
add
mov
sbb
test
add
imul
sbb
lods
jge
sub
or
loopne
cltd
icebp
jecxz
mulb
mov
fwait
sbb
push
negb
aam
les
push
arpl
cmp
scas
push
mov
sbb
pop
sbb
movsl
add
test
sbb
fisubs
mov
xlat
pop
or
cwtl
js
fwait
inc
xchg
inc
out
sbb
ret
sbb
add
in
movsl
dec
cmp
add
jmp
fcoml
pop
fwait
pushf
xchg
fdivrs
lds
push
mov
popf
cmp
jge
pop
mov
mov
adc
daa
or
fwait
fwait
cmp
loope
add
lret
ret
fs
and
test
ja
adc
sahf
xor
loope
add
cmp
mull
xchg
loop
or
xor
or
notb
push
sbb
pushf
in
sub
mov
loop
lcall
dec
in
or
cli
push
pop
mov
sbb
add
jp
addr16
mov
mov
out
mov
adc
and
push
pop
inc
push
add
and
mov
xchg
and
cwtl
fnsave
loopne
loopne
dec
mov
pop
movsb
add
js
adc
mov
adc
into
pop
and
popf
push
test
stc
jns
and
jnp
aaa
fs
in
add
rol
ret
mov
pop
xchg
mov
out
push
stc
lock
sar
pop
xor
std
ret
push
mov
jmp
pop
push
les
add
mov
inc
xlat
push
sbb
cmp
cmp
movsb
ja
stc
fxam
fs
imul
pop
andl
push
shl
je
sbb
adc
cmp
adc
jnp
add
push
les
push
mul
jo
ficompl
xchg
int3
push
fwait
mov
dec
outsl
push
scas
hlt
mov
add
adc
add
fldcw
pop
out
adc
test
sbb
xchg
sarb
outsl
test
push
adc
and
mov
add
arpl
mov
sahf
outsl
sbb
sahf
repz
sar
xor
cwtl
sarl
adc
fdivrl
and
aad
or
mov
out
inc
neg
scas
aam
mov
into
add
xor
jns
cwtl
ret
inc
mov
xor
mov
iret
mov
mov
xchg
test
mov
xor
pop
add
shll
fwait
pop
adc
sbb
adc
movsl
and
inc
sbb
std
sub
dec
mov
inc
lds
or
movsl
nop
test
and
aad
cmp
push
pop
pop
aaa
lock
mov
add
or
loop
jo
movsb
scas
ret
in
xchg
and
sub
negb
lahf
add
mov
sti
fists
ds
xchg
fmuls
sbb
icebp
jp
cmp
add
popf
xchg
sbb
cli
add
test
or
ret
pop
pop
mov
arpl
pop
cmp
sbb
addl
cld
roll
jmp
jns
and
add
mov
lds
es
mov
or
fadds
or
les
movsb
or
push
cmp
push
in
push
inc
insl
movsb
mov
jo
push
lods
mov
cmp
xchg
arpl
fld
cmp
leave
lods
sbb
adc
push
push
test
loop
push
jnp
leave
sbb
cmp
sbb
icebp
xchg
ja
lds
xlat
sbb
int
addr16
mov
cmp
test
push
iret
add
xchg
arpl
xchg
push
pop
sub
cli
jmp
xchg
or
ret
les
pop
or
lods
push
mov
outsl
dec
adc
add
scas
sbb
jecxz
sbb
mov
sbbl
arpl
lret
push
jp
movsl
aaa
cli
sahf
jecxz
mov
cmp
inc
sbb
in
pop
xchg
or
jl
xchg
xchg
adc
rorb
shlb
xchg
cmp
jns
cmp
ja
adc
push
and
adc
lea
fistpll
mov
imul
pop
loop
inc
add
push
inc
ja
idivl
and
js
jns
cltd
pop
sbb
shlb
cltd
xlat
loopw
inc
add
xchg
cmpsb
scas
pop
fldt
and
xor
push
add
pop
pop
jl
jecxz
rcl
repz
in
jo
shll
sbbl
jp
aas
aaa
int
out
in
adc
gs
inc
fs
mov
mov
ja
lcall
and
mull
divb
aas
cmp
inc
sbb
fs
inc
jnp
mov
sub
cltd
mov
dec
ja
adc
cltd
aad
push
fstl
add
xchg
fwait
shl
cli
cmp
fwait
popf
and
popf
fs
dec
xlat
mov
inc
stc
sub
lods
les
adc
out
icebp
loop
jnp
adc
xchg
sti
push
lcall
mov
test
loop
or
out
inc
mov
sub
mov
or
inc
fildl
in
push
xor
add
xchg
cltd
mov
stc
push
ret
xlat
inc
fcmovne
and
and
mov
mov
sbb
xlat
int3
jno
lcall
cmp
lcall
cmp
arpl
out
clc
loope
cltd
xchg
and
pop
add
data16
and
cwtl
loop
rorb
cmp
mov
rclb
ret
ja
sahf
sti
mov
push
ds
push
rol
movsb
adc
dec
jecxz
sbb
les
mov
add
dec
fwait
adc
mov
jo
test
out
sbb
ret
in
pop
cmp
loop
mov
negl
add
mov
in
shrb
and
push
pop
jns
jg
outsl
leave
push
add
les
add
clc
mov
sbb
inc
push
test
pop
or
in
push
jns
sahf
daa
mov
negb
or
push
pop
add
cmp
cmp
mov
out
pop
icebp
popl
cmp
pusha
leave
aaa
mul
aaa
fcoms
adc
xorl
fsubrl
shrb
and
movsl
cmp
sbb
pusha
jg
lcall
jns
add
add
push
jns
cmp
mov
imul
dec
mov
mov
fcmovb
adc
sbb
add
mov
cmp
idiv
sub
xchg
testb
push
xchg
aaa
cwtl
push
sbb
cmp
xor
ja
dec
outsl
sbb
xlat
icebp
inc
stc
clc
push
and
xchg
xlat
sbb
mov
imul
lahf
movsl
or
in
loop
ja
imul
sbb
inc
mov
aaa
pop
cmp
add
dec
add
and
leave
inc
adc
cmp
sbb
or
mov
adc
add
sbb
dec
popf
push
rol
inc
pop
iret
or
test
shlb
xchg
ror
pusha
popf
ja
and
pop
js
arpl
add
inc
test
aaa
pop
cmp
movsb
rcr
adc
addl
mov
clc
std
jno
or
in
stc
aaa
and
inc
inc
add
out
lds
cltd
ss
dec
ret
jecxz
das
cmp
fwait
pop
pop
addr16
loop
std
mov
mov
cmp
idiv
add
stc
in
push
mov
xchg
stc
xchg
and
testb
fwait
aaa
inc
sbb
push
aad
mov
and
inc
lds
dec
push
shlb
lea
push
test
std
hlt
pop
inc
aas
in
sti
les
aam
jns
xchg
xchg
clc
pop
push
inc
adc
cmp
mov
inc
add
xor
xlat
push
and
mov
daa
mov
mov
test
mov
and
cwtl
inc
movsl
jle
stos
cmp
imul
lods
mov
dec
dec
test
mov
lcall
jb
stos
mov
add
aam
cmp
cs
movsb
adc
sub
stos
movsl
sahf
fs
jecxz
adc
and
and
or
jg
outsl
xchg
loop
rcr
bound
jecxz
and
jnp
sub
cli
test
cmp
lods
xchg
mov
and
repz
fcmovnb
push
push
xchg
lcall
repz
mov
pop
daa
pop
int3
jecxz
xchg
ja
lahf
jo
sti
movsw
lcall
js
int3
push
mov
pop
jnp
sbb
cmp
and
jnp
cwtl
xchg
jecxz
pop
sub
adc
cmp
sti
sahf
arpl
inc
movsl
jecxz
sbb
fs
das
and
xchg
and
sahf
popf
js
dec
out
cmp
scas
je
sbb
jo
not
jnp
loope
xchg
test
adc
out
fstps
xchg
mov
inc
mov
js
cltd
fildl
mov
jecxz
push
inc
and
fcom
add
pop
add
sbb
imul
test
or
jno
cwtl
and
pop
sbb
sbb
push
cwtl
call
xor
inc
pop
fwait
cltd
pushf
fdivs
xor
gs
sti
stos
inc
sahf
jns
shl
fcomp
mov
adc
inc
scas
xor
push
adc
and
push
mov
mov
inc
xchg
mov
cmc
lock
or
xchg
fwait
aad
and
xchg
clc
pop
inc
mov
push
cmc
jmp
cmp
jo
inc
ret
push
xor
add
adc
mov
ja
mov
cli
and
js
sbb
loop
pop
add
rcrb
adc
jne
mov
sub
in
add
push
and
js
pop
adc
fs
popf
test
inc
jl
mov
inc
int
in
add
lock
fwait
inc
mov
push
shll
enter
in
lds
xor
inc
mov
jnp
dec
movsb
mov
xchg
fisttpl
mov
les
adc
and
push
fcomps
add
adc
inc
mov
pop
jecxz
fdivrs
outsb
add
lcall
pushf
mov
jecxz
testb
rolb
and
mov
in
and
testl
in
add
aas
sbbl
pop
sti
jns
cmp
clc
inc
xchg
jle
pop
pushf
or
ret
inc
and
in
fisttpl
inc
out
mov
inc
cmp
clc
mov
mov
push
sahf
out
xchg
and
cmp
add
push
fldt
push
ja
xchg
sbb
pop
push
popa
cwtl
test
test
push
mul
repnz
scas
sbb
mov
sti
imul
mov
inc
mov
outsb
cmp
fnstenv
arpl
repnz
lret
std
mov
push
lods
push
cmp
and
cmc
and
or
repnz
rcrl
fbld
idivl
dec
add
sti
jnp
popa
push
mov
lds
aas
pop
lret
adc
stc
push
mov
lds
push
test
in
and
icebp
mov
int3
or
and
mov
sbb
dec
add
in
jno
pushf
pop
sahf
lds
test
add
sti
mov
or
push
cwtl
movsb
dec
ja
xchg
dec
jno
mov
aam
test
in
push
js
cltd
cmp
aaa
sbb
and
mov
push
push
add
dec
and
mov
ljmp
mov
sarb
mov
jle
mov
add
or
mov
negb
or
enter
sbb
push
add
and
out
jl
xor
jns
cmp
movsb
sti
pusha
adc
mov
test
push
jnp
and
movsb
add
xchg
push
jnp
pop
mov
sub
lods
movsb
pop
ja
or
test
pop
fimuls
push
in
scas
inc
sub
pop
pop
mov
idiv
and
and
cli
and
lret
or
push
ljmp
repz
dec
dec
push
or
xchg
inc
pop
inc
pushf
pop
inc
movsl
xchg
pop
movsl
test
inc
add
adc
sti
sbb
add
test
xor
add
fwait
jo
clc
sub
xorb
and
xor
lret
push
loop
pop
adcl
mov
lcall
cmp
loop
les
push
sbb
stc
aam
adc
notl
cmpsl
cmp
xchg
sub
stos
subl
push
inc
cmp
mov
jb
fmull
jle
and
cmp
ljmp
jns
sub
jnp
cmp
in
fs
lods
test
cmpsb
ficompl
lds
cmp
enter
shrl
add
inc
pop
and
mov
pop
cli
adc
and
test
sti
ja
aad
test
push
mov
outsl
ret
mov
test
jmp
sbb
push
sbb
in
ffree
arpl
push
pop
mov
add
clc
loope
in
mov
out
lock
shlb
leave
adc
and
dec
movsl
mov
test
movsb
mov
mov
stc
cmpl
cmp
sub
rolb
and
cmp
and
inc
add
sbb
jle
sbbb
popf
cmp
adc
pushf
stos
out
sbb
mov
add
or
pop
flds
pushf
add
xor
stos
movsb
mov
insb
mov
movsl
les
cmp
test
pop
stc
push
outsb
mov
jns
add
fists
in
or
adcl
aaa
or
and
pop
cmp
push
popa
outsl
push
push
lods
pop
call
inc
js
mov
jbe
into
cmp
xlat
sti
clc
xchg
cmpsl
cli
aaa
popa
mov
xchg
pop
mov
in
in
dec
pop
sahf
sti
fildl
insb
sbb
mov
sub
stos
inc
jbe
mov
outsl
gs
ljmp
cmp
or
mov
add
add
and
push
inc
movb
add
roll
mul
push
adc
inc
xchg
test
nop
or
mov
stc
inc
aaa
in
sti
or
cmpsl
jo
sbb
inc
add
cwtl
arpl
cwtl
add
test
inc
push
fstps
jb
rcl
add
fs
test
sub
pop
mov
loopne
ja
and
sbb
sub
mov
or
divl
mov
sbb
loop
into
imul
pop
jecxz
xlat
popf
fldt
fsts
mov
cltd
fwait
stc
cmp
arpl
sub
add
add
mov
and
xchg
loopne
sbb
jb
ret
jnp
add
cmpl
pop
pop
sti
and
mov
mov
js
xor
rcl
jecxz
push
andl
sbb
inc
testl
sbb
cmp
lret
jo
lds
sbb
sub
movsl
outsl
js
or
inc
push
push
mov
pop
insl
cwtl
push
push
ret
cmp
ja
mov
int
add
pop
fldenv
add
or
arpl
dec
add
add
lods
loope
xchg
leave
pop
and
or
cmp
aaa
xlat
sahf
ja
sbb
inc
rol
push
movsb
ret
popf
mov
inc
push
cmpl
mull
adc
sbb
adc
and
outsb
cli
xlat
sti
mov
jns
sarl
or
sbb
je
xchg
inc
jnp
ret
sahf
shll
push
ja
push
loop
fisubrs
rol
inc
rorl
les
pop
int
leave
test
adc
add
jnp,pn
sti
aad
ja
clc
in
and
push
ret
int
enter
cmpl
push
pop
or
js
fcmovb
mov
mov
pushf
inc
sarb
call
loop
pop
and
not
or
cmp
xlat
mov
les
mov
loope
mov
test
loope
and
push
mul
clc
fsubrs
jg
out
cmpsb
iret
xchg
inc
mov
fwait
pop
inc
adc
mov
test
fstps
addb
lock
adc
pop
mov
sub
int3
in
mov
in
push
inc
cltd
test
sub
sbb
in
arpl
push
ret
push
insb
aad
cwtl
rcrb
xchg
and
inc
add
ret
mov
push
fsts
jae
xor
inc
add
arpl
repnz
int
or
and
gs
pop
fs
inc
xchg
push
inc
push
jnp
aad
out
aaa
shlb
cmp
loop
mov
pop
idivb
cmpsl
fwait
dec
mov
subl
flds
nop
add
sbb
push
mov
cmp
aaa
fstpt
sub
xchg
sub
add
iret
mov
test
mov
or
in
ret
or
scas
test
dec
sbb
jae
fwait
sbb
inc
cwtl
sti
push
mov
pop
or
jae
xor
fs
mov
cmp
bndldx
xchg
and
jmp
add
mov
sahf
mov
shrl
jnp
int3
jb
sbb
jns
js
add
add
push
add
add
movsl
mulb
les
dec
jnp
ret
xchg
and
cwtl
xchg
mov
jecxz
test
inc
std
cltd
add
popa
sbb
push
add
js
xchg
je
xchg
add
inc
xchg
mov
push
jae
xchg
dec
arpl
or
sbb
and
ror
and
in
shr
cmp
nop
inc
test
and
pop
mov
ret
adc
notl
sahf
jns
pop
jnp
mov
iret
clc
in
mov
cwtl
js
into
call
stc
lds
jns
inc
sarl
mov
fwait
lods
sbb
test
inc
and
xchg
mov
add
or
adcb
sahf
pop
jecxz
repz
sbb
sbb
sbb
lock
mov
arpl
test
cmpb
sti
sbb
mov
pop
sbb
sbb
rcrb
clc
push
ss
add
arpl
ss
pop
cmp
loopne
loope
mov
les
adc
xchg
inc
cli
sbb
mov
pushf
movsl
mov
popf
xlat
push
iret
add
jb
push
and
into
mov
mov
add
xchg
mov
and
and
cmp
testl
push
fnstenv
fldenv
sbb
dec
xor
out
inc
loope
sbb
dec
adc
pop
cwtl
mov
movsl
mov
in
push
gs
and
jae
leave
jnp
sbb
mov
cmp
pop
or
imul
ret
loope
fildl
mov
pop
addl
and
sti
push
mov
rclb
xchg
pop
test
or
pop
sbb
es
mov
cmp
sbb
jae
aaa
or
pop
pop
adc
loop
inc
dec
pop
jp
aaa
testl
nop
lds
inc
mov
xlat
movsl
pop
aaa
cmp
pop
loop
dec
popf
push
shl
inc
adc
lds
les
push
pusha
sbb
lods
cli
movsb
cmp
dec
sahf
xchg
dec
movsl
out
add
rol
xchg
cmp
inc
pop
daa
mov
outsl
mov
xor
outsl
sbb
or
jecxz
mov
mull
dec
cmp
pushf
adc
loop
in
fmuls
pop
adc
fstl
andl
shll
jl
movsb
xchg
mov
fdivs
or
mov
outsl
add
mov
push
ret
int3
push
sar
les
cmp
dec
stc
gs
clc
adc
fdivrs
lds
roll
in
out
sbb
cmp
sbb
orl
shrb
add
fxch
loope
pop
divb
sub
in
lahf
leave
das
ljmp
add
pop
pusha
inc
inc
lcall
not
cmp
aad
and
test
inc
and
cli
movsl
push
xchg
pop
sbb
add
sbb
and
mov
and
xchg
pop
es
xlat
sbb
movsb
call
mov
pop
and
xor
sbb
push
cwtl
fwait
sti
pop
mov
iret
in
xchg
mov
lods
add
jle
mov
sub
mov
cmp
cmp
mov
sti
sub
fbld
int
push
imul
push
mov
sti
imul
cwtl
mov
xorl
test
push
sbb
leave
mov
jo
sbb
fmulp
leave
out
jns
cmp
loope
mov
ret
popf
sbb
repz
and
pop
cmpsl
testl
addr16
mov
into
sbb
pop
mov
sub
movsb
and
imul
inc
xor
lock
call
mov
push
divb
iret
pop
scas
mov
pop
sahf
ret
push
lds
mov
rcl
in
add
insl
sbb
scas
aad
rcr
cwtl
push
mov
mov
and
neg
xor
cmc
xor
and
xchg
sbb
lret
push
sbb
cmp
inc
adc
cmpsb
flds
and
pop
loope
inc
mov
fsubrs
pop
inc
arpl
aaa
jl
testl
pop
ja
mov
sarl
jmp
lods
inc
pop
jo
les
or
and
xor
add
stc
sbb
xlat
jg
xchg
hlt
mov
sub
jp
in
mov
lret
cmp
test
sbb
cli
stc
pop
adc
ja
lds
push
or
icebp
fwait
cmp
cltd
inc
add
cmp
sub
sbb
aaa
orl
jnp
pop
add
arpl
pop
notb
popf
out
out
cmp
stos
cmp
test
cmp
mov
imul
in
in
mov
daa
test
fwait
push
dec
test
push
pop
fistl
and
sbb
aas
stc
and
mov
dec
js
or
cltd
inc
add
fistpll
loopne
into
iret
adc
arpl
divb
push
jg
jb
pushf
cwtl
js
add
pop
test
sbb
inc
rcl
lds
lock
xchg
jo
arpl
pop
cmp
and
outsb
xchg
add
add
or
notb
cwtl
mov
xlat
fcoms
movsb
jnp
sub
fwait
xchg
les
negb
cmp
xchg
and
mov
mov
aaa
and
cmpsb
pop
sbb
push
mov
dec
enter
mov
and
lds
lods
outsb
and
and
add
xchg
pop
mov
jb
pop
loope
inc
stc
ret
loopnew
insl
lcall
add
notl
ret
xchg
cltd
mov
stc
stc
or
mov
and
adc
adc
jnp
pop
pop
or
and
sbb
push
andl
pop
add
push
jae
inc
mov
loop
cmp
sbb
cwtl
idivl
cmp
push
hlt
mov
xor
mov
mov
sub
outsl
dec
jmp
iret
mov
and
clc
xchg
aaa
adc
jb
jns
jg
inc
jnp
fs
sahf
cmc
add
movsb
cli
sbb
arpl
mov
negb
stc
fnstcw
roll
pop
inc
inc
in
mov
xlat
add
mov
dec
mov
pop
mov
mov
lods
mov
mov
out
loop
add
add
push
lcall
pop
pop
mov
fidivrs
icebp
xchg
cmp
jecxz
in
xchg
mov
jno
aaa
mov
cli
shlb
pop
cltd
mov
and
and
jg
push
jb
sti
mov
fstpt
push
cmpsl
mov
adc
outsl
clc
stos
scas
inc
push
pop
push
imul
aas
sbb
divl
mov
push
add
xchg
pop
pop
mov
loop
jns
and
pop
sti
aas
js
scas
aas
call
dec
push
ja
cmp
mov
add
mov
adc
push
add
pop
mov
ret
xchg
mov
pop
les
lcall
jecxz
jp
pop
mov
fdiv
sbb
mov
adc
xor
les
push
imul
daa
jmp
push
xchg
push
inc
mov
inc
pop
out
js
inc
in
xchg
pop
mov
cltd
mov
ficompl
dec
dec
xchg
mov
inc
arpl
pop
scas
pop
aam
lods
lcall
ror
outsb
inc
int
aad
in
lods
adc
loopnew
cld
push
gs
sbb
mov
das
in
fwait
and
pop
xchg
int
jns
inc
cwtl
sahf
sbb
and
jb
push
push
adcb
push
idivl
jo
jnp
add
in
xchg
cwtl
or
aaa
stc
repnz
cmc
arpl
push
mov
jns
cmp
adc
and
repnz
push
and
sbb
inc
js
pop
cli
in
sbb
adc
and
push
icebp
mov
fistpl
jmp
sbb
sbb
adc
test
repz
push
aaa
icebp
add
pop
xor
sbb
bound
xchg
jecxz
outsl
mov
fld
in
ja
pop
or
inc
cmp
xchg
xor
sbb
inc
jg
call
imul
ljmp
fadds
mov
mov
inc
sbb
lea
add
mov
cwtl
mov
inc
mov
jecxz
cmp
cmc
push
fsubrl
aad
jnp
in
adcb
or
sbb
dec
sub
in
lock
jnp
icebp
fwait
cltd
ja
icebp
test
xchg
xlat
and
xchg
scas
ljmp
push
cwtl
cwtl
push
flds
add
sbbl
int
push
stos
cmp
adc
out
cli
mov
daa
fldcw
or
push
imul
sti
pop
pushfw
jo
jecxz
and
gs
xchg
push
sti
test
add
add
add
mov
dec
jb
cmp
in
les
inc
sbb
popf
mov
mov
lcall
xchg
push
and
js
fsts
mov
mov
repnz
and
mov
mov
xor
int3
pop
mov
inc
or
pop
movsb
add
cmp
call
xor
add
stc
xchg
push
lahf
sbb
mov
jns
mov
orb
clc
icebp
inc
fnsetpm(287
add
xor
and
or
add
inc
add
and
jecxz
sti
adc
scas
inc
test
pop
aaa
pop
mov
dec
xchg
das
add
sahf
xchg
aaa
fdivrs
xchg
mov
negb
stc
add
jecxz
jmp
stos
sti
push
sbb
cmp
xor
xchg
sbb
loop
ret
fdivs
les
push
and
sarb
push
outsb
push
ret
mull
jo
arpl
sahf
jnp
shl
test
cmpsl
jmp
insb
aaa
mov
inc
repz
cwtl
gs
dec
or
push
mov
add
mov
sbb
cmp
mov
iret
jnp
rorl
mov
jo
jnp
gs
mov
bound
push
or
cmp
loopne
fs
pop
pushf
xchg
adc
cmp
popf
add
ret
pop
cwtl
aam
shlb
iret
adcl
test
pop
add
cld
cwtl
fistps
inc
rclb
js
xor
sti
inc
jae
and
mov
sbb
es
stc
cmp
rcrl
fs
imul
pop
gs
jle
cmc
pop
pop
jl
ret
lds
aaa
in
and
loop
sbb
stc
addr16
sbb
int3
in
xchg
movsl
fists
pop
or
xlat
cwtl
repnz
call
addr16
in
adc
std
add
test
add
xchg
std
outsb
sbb
or
aaa
pop
idivb
xchg
xchg
fdivrs
shll
fistpl
xor
sbbb
pop
mov
pop
in
cli
push
pop
ja
jnp
sub
ret
jecxz
les
lods
fisttpl
xchg
xchg
and
mov
adc
cmp
xchg
in
pop
shrb
outsl
clc
test
add
fdivrs
rorb
cmp
adc
pop
sbb
icebp
ret
pop
cli
sbb
stos
loopne
mov
lcall
and
push
repnz
fstps
inc
pusha
cltd
jge
divl
loop
and
gs
imul
data16
xlat
clc
cmp
cmp
mov
add
xchg
mov
jno
loop
loope
and
jnp
test
pop
outsb
cltd
data16
xlat
push
in
and
pop
xchg
push
add
and
pop
loop
cli
push
push
pop
sub
add
add
mov
cmp
push
cs
pusha
cmp
popf
div
enter
incb
xchg
xor
pop
scas
mov
cmp
add
shrb
mov
add
movsb
test
pop
or
test
stc
xor
jns
fdivrs
push
cwtl
ds
adc
sbb
stc
cmpsl
pop
repz
loop
mov
inc
adc
pop
sbb
pop
fsubs
pop
aaa
outsb
sbb
loop
jnp
sahf
mov
fs
scas
fwait
sbb
push
sarl
mulb
lods
adc
call
mov
loope
pop
xchg
fldenv
xchg
sub
mov
les
jecxz
arpl
inc
dec
fsubs
sub
movsb
fs
and
jns
and
or
in
aaa
loop
loope
push
movsl
das
cmp
pop
pop
push
jecxz
push
nop
jge
and
fstps
add
shrb
data16
cmp
xchg
lods
dec
in
scas
mov
push
lret
test
pop
ret
mov
cli
cmp
add
scas
sbb
sarl
cli
icebp
ret
inc
ja
push
fxam
pop
jo
xor
iret
sbb
fdivr
pop
and
leave
or
jmp
pop
dec
test
outsl
jno
mov
lea
pavgw
outsl
clc
xchg
fistps
and
pop
sbb
int
add
and
mov
gs
js
arpl
mov
adc
cmp
adc
es
xchg
shll
or
cmp
imul
fimuls
add
add
gs
loopne
jno
pop
sbb
inc
dec
adc
imul
or
hlt
aas
in
and
inc
add
rcrb
sub
inc
jecxz
jns
iret
rolb
rcrb
jg
pop
mov
leave
pop
inc
lods
sahf
sbb
xor
in
adc
push
dec
push
scas
iret
movsb
aaa
pop
outsb
lret
mov
lea
sti
and
push
add
fldenv
cmp
jno
adcl
imul
mov
ja
inc
stc
push
and
mov
lock
pop
fs
push
rcll
fs
jns
adc
out
cmp
testb
notb
shlb
xorl
imul
pop
aad
pusha
inc
jle
and
pop
loope
sbb
lds
or
lcall
in
and
pop
ret
gs
fmul
jne
fs
clc
aas
stc
adc
mov
test
fwait
sbb
loop
dec
loop
movsb
test
in
mov
xor
ret
jns
xchg
sti
es
pop
scas
cwtl
fistpll
imul
aad
lds
ja
fs
cwtl
xchg
xor
and
mov
lds
out
sbb
pop
xor
pusha
in
sti
iret
pop
test
jns
cmp
in
outsl
mov
jb
imul
arpl
mov
fsts
and
movsl
sbb
fistpl
mov
cmp
cmc
daa
xchg
andl
pop
add
jmp
cmp
add
fimull
cmp
imul
mov
pushf
movsl
jmp
mov
mov
lods
ja
sbb
mov
bound
mov
cltd
pop
jb
pop
and
add
rolb
out
clc
xchg
jl
mov
leave
mov
mov
inc
fwait
xchg
add
int3
mov
fwait
adc
mov
pop
adc
stc
and
std
xor
mov
loope
arpl
pop
and
xor
popf
les
clc
mov
mov
add
adc
cli
cltd
adc
xor
les
push
adc
aam
dec
pop
arpl
jnp
adc
and
push
cltd
add
add
mov
les
stc
loop
sahf
mov
pop
es
bound
arpl
adc
movsl
ja
sbb
pusha
scas
jp
ret
adcl
popf
fldt
mov
add
and
sbb
mov
ret
sbb
popf
cmp
sti
sbb
stc
dec
push
mov
mov
and
call
dec
fwait
cmp
call
cmpsl
out
add
ja
test
test
and
negb
sarl
mov
push
cmp
repz
dec
cmc
movsw
and
je
mov
and
sbb
mov
cmp
jnp
jmp
or
add
push
aaa
dec
test
movb
jmp
out
and
popf
and
outsl
fsubrs
xchg
cmp
cmp
dec
test
or
mul
add
loopne
fistl
fdivs
cmp
negl
push
ficoms
divl
mov
push
ja
pop
or
pop
sbb
fisubl
jnp
ret
add
push
leave
or
in
ja
mov
and
nop
add
cmp
dec
in
push
and
jnp
rorb
or
cltd
mov
push
xchg
mov
outsl
movsl
push
mov
xchg
leave
icebp
add
loope
sbb
mov
lock
loopne
and
mov
notb
out
cwtl
push
fwait
test
das
inc
mov
push
imul
scas
fwait
jp
in
push
add
pushf
pop
and
aas
iret
add
cld
outsl
out
push
mov
adc
out
xchg
fstpt
mov
test
fdivrs
add
push
add
js
cwtl
cltd
jb
sbb
and
sbb
movsl
imul
sbb
jne
iret
ret
inc
movsb
or
ret
aam
mov
mov
inc
test
rcrb
idivb
push
mov
pop
inc
sarb
shll
push
flds
mov
imul
inc
cld
popf
jo
cwtl
lds
sbbl
stc
jg
mov
lret
sbb
adc
idivl
sahf
fwait
pop
cmc
and
sbb
cmp
lds
scas
inc
int
push
movsl
out
outsl
shrl
cmp
xor
repnz
mov
pop
jns
iret
add
xchg
arpl
jb
jns
mov
mov
movsl
mov
inc
inc
dec
dec
or
dec
gs
scas
insl
or
add
pop
xlat
add
sbb
sbb
mov
pop
scas
mov
inc
notb
lds
es
repz
xchg
and
push
xchg
stc
scas
cwtl
xlat
aad
or
cmp
mov
xchg
sub
mov
and
movsl
shlb
inc
fs
jp
movsb
push
std
sti
jb
jecxz
adc
add
flds
mov
sti
or
and
fs
jecxz
dec
push
pop
les
add
es
ret
aas
pop
inc
fstpt
jecxz
fs
loop
imul
mov
inc
leave
ret
testl
stc
gs
outsl
iret
pop
push
setno
aaa
sti
jmp
pusha
xlat
sbb
jno
inc
xchg
pop
cmp
in
sahf
test
or
insl
pop
mov
fstpt
in
arpl
adc
pop
testl
enter
mov
std
pushl
test
fadds
fistl
mov
sub
cmc
movsb
cwtl
test
jl
push
fistps
push
out
pop
ret
aam
xchg
inc
movsl
and
ja
adc
fistl
fcoms
test
dec
jo
cli
jb
js
gs
sub
shlb
cwtl
aaa
cmp
add
lds
jmp
insl
add
movb
and
inc
cltd
inc
testl
push
ret
arpl
pop
rclb
jne
xchg
and
xchg
cmp
sbb
jne
movsb
clc
or
xor
fcom
lds
sbb
add
imul
clc
sub
sbb
lcall
xor
sbb
inc
les
sti
dec
inc
adc
aad
ja
xchg
mov
gs
jo,pn
fs
cmp
aam
xchg
jnp
or
and
mov
adc
mov
pop
clc
add
in
in
shlb
bound
mov
ret
bound
scas
cmp
add
dec
call
std
fidivl
and
rcll
jmp
sub
jns
in
cmp
pop
pop
mov
clc
cltd
inc
aaa
fsubrs
inc
sub
cli
and
mov
pop
fwait
ss
lahf
mov
out
push
inc
sbb
mov
pop
stc
pop
inc
pop
push
sub
inc
xchg
sbb
mov
popf
pop
xlat
lds
adc
and
xchg
lock
xchg
iret
mov
cli
and
sbbl
rcrl
stc
cwtl
jns
sti
test
add
pop
enter
cltd
pop
sti
movsb
js
cmp
jp
lea
inc
iret
ja
addl
ja
shl
push
ja
les
outsl
and
pop
cmp
lea
arpl
cltd
fchs
cwtl
data16
and
sbb
aaa
js
in
and
fildl
lahf
ja
xchg
add
scas
cltd
xchg
ljmp
sbb
mov
mov
sahf
sbb
push
pusha
les
push
loop
push
and
in
xor
clc
cmp
or
push
add
movsl
in
mov
out
sbb
and
ffreep
inc
sbb
das
rcr
mov
jmp
ja
dec
xchg
push
inc
inc
testl
push
out
js
add
xchg
dec
add
loopne
repz
xlat
dec
das
adc
pusha
arpl
mov
mov
dec
push
loop
test
mov
jns
adc
fdivrs
add
shl
sbb
lds
test
adc
mov
cwtl
pop
xchg
in
mov
pop
inc
iret
aaa
ja
adc
lahf
loope
in
stc
popa
xchg
lret
cmp
cmpsl
js
outsb
testb
arpl
bnd
mov
add
cmc
adc
lret
andl
add
or
pop
jle
mov
scas
jecxz
inc
lea
cmp
and
inc
add
fxam
rcr
inc
ret
aaa
jecxz
or
add
sti
inc
lds
sbb
cltd
movsb
out
add
mov
ja
and
fcoms
pop
or
fsts
mov
and
test
das
lahf
aam
pop
outsb
add
icebp
aam
cwtl
adc
jns
mov
flds
and
sbb
sti
jo
xchg
ja
dec
xchg
lret
add
mov
mov
inc
ror
cmp
fs
adc
clc
cli
imul
loopne
imul
mov
rorl
inc
add
adc
push
scas
push
in
xlat
loop
shlb
loope
enter
fcmovnb
iret
clc
aaa
in
push
push
cmp
mov
or
xorl
arpl
cmp
mov
ss
movsl
push
cs
loope
cmp
mov
sbb
sbb
adc
mov
iret
and
gs
lds
inc
cmp
adc
cwtl
outsl
test
cmc
adc
xor
lcall
push
out
cmp
sbb
mov
sti
insl
popf
popa
inc
or
int
mov
add
lods
mov
add
pop
mov
fmul
inc
sbb
adc
adc
mov
imul
in
ret
or
cltd
cmp
mov
fsubrs
push
ss
shll
pop
ftst
inc
lahf
xchg
sub
mov
rorb
sbb
mov
or
jg
or
in
fistpll
fldenv
cmp
lea
cmp
test
mov
cmpsb
push
pop
sbb
testb
adc
ja
and
dec
clc
inc
out
sbb
repz
adc
ret
insl
push
inc
leave
adc
pop
test
dec
push
popf
test
add
xlat
bound
inc
xchg
mov
popa
enter
outsl
jmp
pusha
adc
sbbb
add
cmp
test
mov
inc
and
sahf
mov
add
in
xchg
divl
cli
inc
push
outsb
pop
andb
xor
fs
pop
sbb
les
pusha
or
inc
push
cmp
xchg
cmp
divl
popf
sti
mov
inc
push
pop
testb
xchg
ret
or
iret
sub
and
ds
movsb
inc
jnp
mul
cwtl
test
xor
push
cli
dec
mov
add
push
pop
rcl
movsl
mov
lds
mov
notb
pop
fnstenv
push
in
pop
cmp
loop
imul
bound
push
jle
mov
or
dec
xor
sbb
push
test
ret
scas
add
and
in
fs
cs
pop
lret
mov
mov
pusha
cmp
add
int3
fnstcw
lahf
add
xchg
cwtl
fwait
pop
notb
or
adc
push
cmp
inc
jns
ja
mov
inc
aaa
xlat
sbb
daa
cmp
testb
fnstcw
leave
in
push
pop
orl
mov
mov
sub
arpl
fistl
fcom
arpl
or
mov
xor
jecxz
pop
push
pop
sbb
jmp
or
cmp
cmp
jecxz
adc
mov
add
push
scas
cmp
and
sbb
js
mov
and
in
jns
movsb
xchg
xor
dec
mov
sti
sbb
cli
xchg
inc
or
cltd
push
inc
popf
mov
cltd
jecxz
andl
inc
test
sub
cmp
xchg
push
pop
mov
push
rolb
add
sbb
cltd
idiv
pop
arpl
gs
inc
xrelease
push
pop
cmp
cli
pushf
aam
add
xchg
jns
inc
ret
mov
push
ret
aad
jmp
ja
and
popf
fistl
sbb
aam
adc
xchg
mov
add
adc
gs
mov
add
negl
xchg
pusha
pop
dec
lcall
lods
inc
and
mov
adc
lods
pop
mov
outsl
sbb
in
and
sbb
inc
cwtl
iret
cli
cwtl
mov
dec
js
pop
pop
stc
out
sahf
pop
in
inc
push
and
sbb
add
inc
jnp
push
iret
outsb
les
test
ss
shll
add
addb
adc
fnstenv
and
push
xchg
int
jno
out
dec
cmp
sbb
popf
popa
ja
jns
add
dec
stc
pop
and
xor
test
inc
inc
mov
push
push
pop
jnp
mov
jmp
in
cltd
push
enter
xchg
cld
arpl
pop
and
mov
clc
and
mov
cmp
fwait
xchg
pop
lea
push
mov
adcl
or
sti
sub
lret
and
sbb
ficompl
add
inc
fld
inc
icebp
mov
test
sbb
cmp
movsb
mov
and
hlt
xor
fs
and
fcoms
fcmovnb
ret
xchg
fdivrs
sti
subl
xchg
mov
mov
loop
and
xchg
aad
push
cmp
xchg
push
les
inc
adc
roll
stos
pop
push
and
movsb
cmp
in
aam
and
jle
xchg
xchg
push
xor
add
sbb
lods
mov
test
in
xor
cmc
cmp
cld
das
cwtl
sarb
sqrtps
movsl
inc
mov
fs
loop
jnp
or
push
bound
mov
clc
cmc
mov
out
cmp
fnstenv
add
push
adc
aaa
pop
and
push
sub
cmp
aas
ss
clc
sub
mov
and
sbb
push
icebp
pop
rolb
loope
insb
movsb
cmp
adc
fmuls
fdivs
outsb
in
pop
sbb
cmp
mov
movsl
test
push
out
ret
sti
lods
sti
or
sbb
clc
ret
hlt
sbb
pop
and
cwtl
fs
add
adc
loop
in
leave
pop
stc
leave
pop
sti
add
lcall
xchg
sbb
loop
cmp
jecxz
jno
adc
sbb
shlb
jecxz
rolb
loop
fildl
cmp
add
jnp
cmp
and
push
js
add
mulb
ss
dec
sbb
mov
or
fisttps
loop
pop
push
lds
jmp
imul
jnp
add
movsb
add
daa
leave
addl
add
jno
iret
in
movsb
sbbb
mov
and
and
mov
arpl
in
jne
int
ja
out
cltd
push
addr16
arpl
add
adc
mov
sub
inc
or
dec
dec
call
loop
test
cmp
sti
enter
jae
in
test
mov
fstps
jns
call
sbb
sbb
outsb
repz
adc
fnstenv
rcrb
in
rolb
adc
mov
in
js
std
fwait
std
xor
not
cmp
jecxz
mov
and
inc
js
movsl
mov
pop
pop
sbb
push
jo
inc
mov
cmp
in
addl
xlat
sub
fimull
pop
push
testl
cmp
and
fistps
jae
or
mov
fstps
pop
fisttpll
cmp
mov
roll
pop
in
cmp
out
ret
and
test
dec
aaa
gs
xchg
xchg
add
mov
shrb
jnp
mul
push
es
mov
stos
push
lahf
mov
push
sar
movsb
mov
push
push
iret
test
gs
pushf
jns
pop
mov
stc
rorb
adc
or
pop
clc
inc
cli
mov
push
cltd
xchg
mov
scas
jns
in
fsts
or
jne
cmp
sti
stc
sahf
imul
mov
cmp
add
push
cltd
mov
clc
and
js
hlt
pop
popf
div
out
sub
cmp
cmp
mov
movsb
push
imul
test
mov
cmp
loop
stc
or
sbb
inc
arpl
mov
xchg
cmp
or
sub
jnp
adc
add
icebp
stc
cwtl
cltd
mov
xor
and
popa
hlt
fs
test
pop
or
and
and
mov
sbb
mov
sbb
pusha
xorl
call
test
or
testb
outsb
add
sbb
les
cmpsl
cmc
movsb
lds
mov
cwtl
and
pop
lock
push
cmp
push
popf
sbb
aaa
loop
jnp
xor
mov
flds
pushf
cmp
outsb
stc
jecxz
inc
pop
cmp
inc
mov
fcmovnbe
xor
mov
arpl
add
leave
inc
sbb
xor
stc
imul
dec
movsb
in
cli
push
sbbl
loop
cwtl
testl
cltd
jns
pop
add
add
movsl
add
scas
lds
in
cmp
cmpsl
cmp
inc
inc
fsubrs
adcb
sbb
mov
push
js
jecxz
push
dec
stc
insb
sbb
jns
fsubs
and
outsb
bound
scas
movsl
mulb
arpl
sbb
mov
mov
clc
mov
xchg
inc
lret
dec
mul
pop
pop
fs
test
fldl
out
les
mov
sbb
inc
iret
add
adc
mov
pop
test
add
cmp
xlat
dec
push
sbb
jnp
test
jns
inc
test
ja
loope
idivb
movsl
std
fs
les
mov
cli
push
dec
js
notl
and
inc
xor
sub
inc
mov
sbb
lds
mov
les
clc
jo
loop
pop
dec
xlat
mov
cwtl
xor
pop
and
push
iret
stc
in
rol
mov
mov
lock
dec
adc
add
jo
jb
or
push
fwait
sbb
push
dec
sahf
and
stos
adc
fadds
shll
mov
push
test
xorl
cmp
or
mov
negb
cltd
pop
arpl
movsb
xchg
sbb
icebp
push
cli
add
jecxz
mov
add
pop
les
adcl
sti
ds
mov
stos
mov
jge
sbb
dec
stos
push
clc
sti
cmp
cmp
flds
inc
sbb
fs
sbb
movsb
jg
adc
std
stc
cltd
mov
fldenv
test
push
push
xor
sub
in
loop
pop
push
and
test
inc
sbb
pop
out
stc
sbb
adc
dec
inc
movsb
push
jns
cmp
xchg
mov
jmp
push
adc
inc
fcomps
dec
push
out
cmc
lahf
sbb
and
test
movsb
sbb
xchg
cli
add
or
pop
in
lcall
mov
test
mov
fs
test
lods
xchg
roll
fwait
sub
leave
push
and
cmc
loopne
lcall
mov
inc
jecxz
ljmp
fdivrs
test
movsl
cmp
add
int
mov
ret
xchg
cmp
outsb
and
cmp
int
sbb
dec
cltd
sbb
and
pop
dec
testb
add
mov
xor
sbb
loop
sbb
shrb
jnp
mull
rcrl
ljmp
ret
in
icebp
out
sbb
mov
loopne
out
pop
cmp
ljmp
cli
jo
ds
push
movsb
leave
in
xlat
add
test
dec
and
cmp
movsl
or
cwtl
cmp
pop
pop
add
jge
push
or
cmp
push
mov
inc
or
xchg
int
popa
push
jns
cmp
xor
icebp
add
stc
in
stc
jbe
mov
outsl
push
mov
cwtl
jbe
sbb
sahf
pop
xor
xchg
sbb
cmp
jns
add
call
lock
icebp
inc
notl
flds
mov
imul
ja
and
iret
movsl
xchg
and
xchg
js
lds
cmp
push
and
pop
push
dec
cmp
dec
mov
out
sbb
push
mov
xorl
mov
flds
adcb
mov
adc
rclb
or
mov
xor
call
fs
pushf
pop
and
jp
pop
sahf
mov
arpl
adc
gs
in
jnp
and
and
jmp
sbb
xlat
in
stos
mov
adc
push
mov
ret
div
pop
ja
aam
push
mov
iretw
daa
mov
xchg
and
xchg
cli
add
aad
dec
mov
in
test
pop
loop
gs
negl
icebp
cmp
add
imull
rcrl
in
and
add
adc
xlat
cmp
pusha
pop
cltd
sbb
cmp
add
out
in
pop
adc
cmp
sub
test
jo
scas
lds
shrl
test
push
cmc
sub
or
imul
popf
ja
fwait
add
lahf
jge
pop
sbb
leave
or
sub
int3
add
notb
rolb
js
fistpll
add
sti
xlat
inc
in
nop
cmpl
mov
ljmp
pop
or
scas
jo
fcom
add
add
outsl
adc
inc
lcall
pop
add
xor
inc
mulb
test
clc
and
iret
stos
xchg
lcall
pop
sbb
es
das
cli
sub
mov
mov
xchg
add
pushf
cwtl
mov
cmp
in
out
ret
arpl
cmp
mov
sbb
cmp
ret
xchg
in
adc
mov
stc
mov
and
pop
mov
sti
pop
mov
mov
mov
sbb
jge
sarl
add
mov
aad
and
cmp
xchg
pop
pop
jp
jecxz
testl
aaa
pop
aaa
push
jns
pop
sbb
pop
ljmp
clc
sti
divb
popa
inc
xchg
sub
xchg
lcall
ja
and
mov
in
sbb
or
arpl
or
outsb
cli
ja
stc
adcl
insb
push
divl
sbb
cwtl
fdivrs
cmp
mov
adc
and
repnz
in
pushf
inc
jno
or
pop
sahf
fs
xor
jecxz
mov
pushf
jne
icebp
fcmovnb
inc
clc
sbb
jg
fsubr
and
push
xlat
xchg
rcll
push
jb
mov
in
jmp
mov
add
in
inc
lods
mulb
orb
aaa
pop
sahf
cli
pop
lds
aad
and
arpl
icebp
sbb
stc
or
pop
mov
add
mov
jbe
out
sarb
loopne
pop
pop
aam
jns
push
or
add
shll
pop
inc
push
mov
test
fistpl
and
sahf
sbb
popf
pop
sbb
cmp
sahf
stc
pop
clc
fstpt
adc
fadds
test
scas
test
fstpt
or
pop
stc
test
movsl
xchg
jmp
dec
test
or
adc
sub
je
add
push
adc
mov
cmp
add
push
xchg
inc
push
push
pop
xlat
and
or
add
pop
cwtl
mov
aaa
cmp
push
pop
insb
jle
sbb
sbb
pop
jnp
pop
shrl
push
jle
ja
popa
mov
or
pop
icebp
cmp
cltd
cli
cmp
popa
pop
xor
ficoml
incb
add
push
and
or
jmp
adc
arpl
cmp
inc
sbb
mov
test
rcrl
cmpsb
out
in
sbb
pusha
and
xchg
mov
hlt
cwtl
xchg
addr16
pop
push
sbb
inc
clc
inc
scas
mov
sahf
div
mov
dec
inc
xchg
or
cli
imul
icebp
negb
fwait
int3
aam
cmp
xor
ja
push
cmp
mov
mull
outsl
fdivs
leave
mov
addb
xor
fstpt
gs
sbb
in
ret
fmuls
pop
fwait
int3
out
inc
pop
inc
push
outsl
add
mul
cmp
mov
sbb
push
sbb
pop
movsl
push
sbb
notb
in
loope
inc
lds
enter
inc
push
out
xchg
pop
mov
xor
and
fdivs
inc
fs
adc
and
test
and
push
push
stc
dec
mov
fcmovnb
inc
pop
leave
outsl
mov
orl
pop
test
pop
sbb
icebp
xchg
test
cmp
ja
or
mov
fdivrs
loop
leave
shll
sub
or
jl
stc
adc
jns
lods
clc
addb
adc
mov
cltd
sbb
pop
shll
fwait
stc
jno
in
loope
les
adc
clc
inc
adc
lret
pop
andl
xor
and
addl
or
and
mov
add
add
arpl
sbb
pop
sarb
clc
cmp
mov
lcall
inc
fistpl
sbb
pop
inc
mov
or
in
push
cmp
cli
push
mov
add
fcomps
lock
addr16
cli
les
movsl
xor
cmp
pop
inc
mov
stos
dec
rcrb
pop
popf
lock
push
nop
sti
cmp
pop
shl
mov
xchg
push
mov
shlb
or
cmp
push
inc
push
jmp
jg
out
lds
das
add
imul
inc
pop
or
push
jecxz
arpl
in
orl
sbb
or
pop
out
mov
pop
test
sahf
shll
sbb
leave
cmp
ss
push
and
fwait
adc
push
and
ja
cmp
in
aaa
cltd
les
xlat
sbb
sti
je
add
pushf
js
ljmp
cmp
std
fstpl
ret
test
sarl
arpl
sbb
repnz
jnp
xchg
cmp
in
sbb
daa
pusha
cmp
xor
mov
or
outsl
mov
in
bnd
popa
movsl
out
inc
and
mov
fcomps
call
mov
inc
pop
bound
or
gs
mov
movb
bound
push
orl
cltd
arpl
hlt
sarl
outsl
popf
xor
sti
mov
sbb
push
mov
and
xchg
cmp
add
mov
aaa
xchg
cs
cmp
leave
sbb
imul
inc
fistpll
inc
sbb
and
sti
or
cltd
movsl
cwtl
jge
rolb
mov
cmp
jmp
icebp
pushf
inc
sti
mov
stc
notl
movsl
cmp
loopne
pusha
adc
cwtl
push
hlt
imul
pop
cmp
add
or
sbb
js
and
lock
loope
cmp
sbb
add
and
cmpsl
je
jecxz
cwtl
call
cmpl
cmp
hlt
push
sbb
movsb
fs
adc
xor
fadd
movsb
cmp
adc
push
scas
popa
push
gs
ret
mov
mov
xchg
cmp
mov
hlt
push
push
sbb
movsb
inc
lds
popf
test
sbb
in
jno
cltd
pop
xor
test
and
in
imul
movsl
stc
cmp
ja
cmp
ja
mov
mov
sbb
inc
xchg
and
aas
pop
pop
pop
arpl
fnstsw
xchg
leave
mov
in
or
cmp
jo
push
stc
add
jb
movsl
movsb
out
lods
add
add
push
imul
inc
mov
xchg
add
or
or
imul
negb
fstpl
push
mov
jmp
push
imul
clc
in
pop
testl
pop
mov
gs
popf
push
dec
sbb
fwait
inc
lret
inc
mov
imul
add
dec
jmp
and
movsb
xor
sahf
iret
pop
aaa
cwtl
int3
adc
dec
int
stc
xchg
movsb
repnz
and
outsl
test
add
pop
or
int
and
inc
loop
push
shrl
inc
jnp
cmp
bound
jp
cwtl
and
in
cli
jbe
rorl
arpl
add
and
adc
stos
aaa
movsb
movsl
mov
inc
xlat
dec
dec
mov
mov
cli
mov
gs
push
cmp
add
inc
inc
loopne
pop
mov
fwait
rcrb
mov
mov
inc
test
mov
fwait
cmp
sahf
mov
jmp
add
imul
rcrl
cmp
scas
mov
pop
movsb
and
out
repnz
xchg
iret
stos
dec
rorb
sbb
loop
jge
mov
sti
and
pop
add
icebp
loope
lds
bound
sbb
pop
and
aam
lret
dec
mov
fs
js
mov
xchg
mov
arpl
push
add
mov
pop
stc
dec
inc
jne
lcall
pop
dec
mov
cmp
inc
sbb
push
jg
sbb
js
aaa
and
inc
movsl
jno
movsl
gs
addb
mov
test
lods
inc
xchg
movsb
add
adc
cmp
cltd
push
aaa
testb
mov
add
ret
pop
fdivrs
pop
sahf
or
push
loop
negb
dec
addr16
icebp
xchg
cmp
int
mov
sti
inc
and
add
mov
push
fnstenv
push
jecxz
pop
push
jae
sbb
fmul
ds
cmp
and
scas
test
addl
cwtl
push
bound
pop
jne
cmp
jmp
rorl
sub
fdivrs
sbb
push
fstps
testb
les
fmuls
std
movsl
mov
clc
testb
inc
int
sarb
scas
test
gs
adc
mov
dec
inc
and
inc
sti
aaa
cmp
push
test
cli
sbb
mov
lds
jmp
push
fnstcw
pop
adc
xchg
inc
pop
cmpsb
int3
ret
add
adc
jns
sti
cmp
packsswb
aad
push
jns
cmp
inc
cmp
fwait
or
fcomps
les
push
loope
push
push
xchg
push
add
clc
movsl
stc
add
add
lock
fildl
mov
jge
fmuls
loope
xlat
and
notb
jo
jns
inc
adc
and
xchg
ja
out
push
dec
clc
in
jno
ss
inc
aaa
mov
jecxz
aad
mov
sbb
imul
imul
pop
inc
neg
cmp
add
add
enter
cmp
pop
and
mov
cmp
repz
loop
sbb
add
cmp
mov
lds
mov
jecxz
mov
jecxz
js
test
cltd
sbb
pop
cltd
fcoms
fs
movsb
dec
inc
ss
movsl
push
popf
jbe
push
cmc
mov
mov
stos
jge
aad
mov
mov
movsb
gs
mov
cmp
cmp
add
sbb
nop
lcall
aaa
fsubr
movsl
xorl
jmp
in
je
dec
cmp
clc
fcomps
test
pop
lock
jge
mov
cltd
scas
adc
dec
push
in
les
lock
out
add
inc
pop
and
inc
icebp
fucom
in
xor
jmp
dec
cmp
mov
adc
inc
xchg
cmp
fsubrp
adc
test
nop
mov
mov
pop
pop
mov
xchg
cmp
aam
pusha
adc
sti
mov
in
mov
cmp
mov
push
loopne
jecxz
mov
and
xchg
sbb
stc
push
divl
icebp
lret
fildl
jns
gs
and
and
aam
xchg
cli
cltd
arpl
add
inc
jp
sbb
leave
loope
bound
fcmovu
sti
sub
fiaddl
cmp
movsl
call
lods
ds
js
cmp
mov
movsb
cwtl
aaa
cmp
leave
pop
cmp
mov
pop
inc
mov
pop
test
add
sub
jne
std
cmp
aaa
mov
je
mov
mov
pop
fwait
add
mov
cmp
adc
pushf
ljmp
cmp
in
ds
cltd
cmp
out
pop
fildl
imul
xor
add
jecxz
sahf
adc
cmp
pop
fstps
pushf
sbb
je
push
cwtl
mov
out
pop
rorb
jno
jns
movsb
dec
fs
cwtl
repnz
sbb
mov
sbb
sub
cmp
testl
cltd
add
mov
push
roll
scas
pop
inc
les
movsl
push
mov
bound
cmp
ret
adc
dec
adc
xchg
pop
gs
subl
and
push
outsb
xchg
push
pop
inc
aaa
lcall
imul
fmull
dec
shrl
lds
aaa
movsl
lock
pop
jmp
mov
fnsave
mov
jmp
xor
mov
ficompl
push
test
cmp
sahf
jns
cwtl
ret
loopne
sub
and
xchg
in
js
lods
add
add
rclb
addl
jecxz
jo
cmp
sti
push
push
mov
mov
jns
add
or
fwait
jmp
aaa
jb
call
lcall
xchg
mov
jns
fwait
mull
int
sbb
sbb
xchg
and
jbe
mov
push
ds
loopne
mov
and
push
roll
ret
jecxz
xchg
adc
mov
popf
clc
and
and
mov
add
int3
iret
out
inc
add
stos
mov
outsb
mov
jnp
scas
xchg
push
inc
jns
xchg
cmp
loop
fs
mov
repz
mov
negb
arpl
jecxz
push
cltd
or
fs
or
inc
js
popf
inc
or
loop
mov
and
mov
mul
fsubrs
shlb
add
push
stos
sbb
imul
bound
add
sbb
add
popf
stos
jp
add
testb
in
sahf
mov
jbe
sti
cli
add
inc
add
mul
ret
xchg
fstpt
adc
mov
aaa
popa
adc
or
cmp
js
les
imul
faddp
or
and
int
xchg
lahf
xchg
mov
cmc
pop
icebp
ljmp
mov
cltd
and
dec
arpl
jnp
call
push
cmpsb
jns
jecxz
rcrb
adc
pop
push
push
or
push
neg
push
ja
push
jp
fwait
outsb
repz
notb
and
into
xor
call
and
and
fcomps
pop
push
cmc
jg
sti
xchg
jecxz
and
add
cltd
xchg
or
xor
test
push
popf
and
testb
xchg
or
xor
mov
mov
imul
rolb
or
adc
fwait
test
js
sbb
sbbl
mov
sbb
outsl
adc
sar
dec
dec
iret
push
clc
ja
and
xchg
inc
jae
das
int3
sar
pop
sarl
gs
sub
stc
jle
and
xchg
mov
xchg
jnp
mov
fcoms
inc
add
and
sbb
lds
and
test
jo
inc
les
imul
icebp
xchg
ja
adc
dec
mov
add
pop
cwtl
sbb
popf
inc
clc
repnz
mov
and
arpl
negb
sti
ja
and
jecxz
pop
pop
inc
movsb
js
cmp
push
lock
cwtl
push
idivb
lea
in
jmp
xchg
push
push
ja
mov
pop
leave
js
in
mov
mov
cli
add
mov
dec
ja
add
mov
push
mov
push
pop
test
or
in
or
fsubrs
jo
arpl
xlat
add
data16
inc
sti
fwait
xchg
sub
in
popa
ret
scas
push
sbbl
lods
out
cwtl
jno
arpl
sahf
and
mov
mov
cmc
fsubp
and
arpl
add
sbb
add
inc
cmp
add
jmp
testb
adc
movsb
add
mov
call
icebp
ja
in
scas
add
xchg
inc
sbb
test
jns
jnp
je
push
xchg
lds
mov
mov
aaa
push
nop
test
js
sbb
sub
sbb
adc
call
mov
shl
cmp
addl
flds
mov
and
or
xlat
and
lds
or
push
push
out
mov
fldenv
or
cmp
sti
pop
cmp
popa
cli
add
cmp
nop
stos
movsb
mov
mov
push
cmc
mov
mov
fyl2xp1
arpl
xlat
loop
int3
push
in
leave
mov
out
aaa
push
xchg
cmpl
jecxz
cmp
clc
adc
mov
gs
pop
movsl
mov
jl
fcoms
sbb
movsb
mov
fiaddl
add
test
cli
out
sti
adc
outsl
fst
out
gs
cmpsb
push
sbb
cwtl
mov
ja
lds
pop
inc
or
mov
pop
pop
fwait
cmp
fsubs
repz
pop
test
xchg
add
stc
loop
in
int3
test
scas
dec
fisttpll
inc
jo
movsl
fdivrs
sahf
or
pushf
neg
cmp
sbb
mov
movsb
xchg
movsl
lea
dec
iret
fs
xor
cmp
jmp
jns
ret
mov
and
repnz
xchg
cltd
sti
cli
mov
scas
mov
pop
push
pop
scas
push
mov
add
mov
dec
call
scas
lds
mov
and
pop
sbb
mov
outsb
lds
dec
mov
fs
cmp
dec
pop
xor
fistpl
pushf
xchg
lds
dec
mov
and
movsb
lods
adc
movsb
imul
or
add
or
aas
adc
inc
insl
jns
dec
out
ror
sbb
push
push
pop
fsubrl
js
ficoml
shlb
mov
xchg
mov
add
out
sbb
add
cmp
in
mov
rorb
xor
cwtl
aas
push
inc
mov
push
mov
and
cmp
and
je
xor
out
movsb
mov
push
mov
pop
fwait
mov
cltd
mov
test
in
mov
and
or
js
mov
cmp
jnp
push
in
mov
add
lahf
andl
repnz
fwait
stos
mov
or
fistpll
hlt
pop
pop
mov
mov
sbb
mov
pop
rcll
add
adc
add
sub
lahf
ret
jnp
stc
test
popa
and
jo
movsb
cmp
stos
scas
xchg
pop
sbb
adc
mov
scas
loop
push
cmp
fcmovnu
adc
stc
xchg
pop
mov
and
pusha
lcall
and
sbb
inc
xor
add
pop
dec
sbb
mov
movsl
fnstenv
jmp
jnp
pop
loop
out
pop
add
std
adc
je
mulb
xchg
lock
mov
mov
in
pop
sub
sbb
add
mull
sbb
inc
jns
movsb
orl
fnstcw
xor
push
in
mov
fdivr
shrl
xlat
pop
sahf
scas
and
mov
movsl
cmp
pop
jns
jno
mov
aas
push
test
insl
adc
aaa
notb
scas
inc
negl
not
mov
push
mov
xchg
sbb
and
out
not
icebp
movsb
lds
test
popa
jo
jnp
and
and
mov
sbb
jp
sbb
in
test
jnp
pop
mov
push
cmp
out
lods
push
aad
in
inc
jae
into
fldt
call
ficoml
icebp
sbb
add
in
in
sbb
jge
push
or
jecxz
add
or
add
cmp
ss
in
das
sub
mov
fldln2
cmp
adc
mov
cmp
les
adc
push
adc
fcmovnbe
sbb
lods
sbb
stc
xchg
cltd
stc
shlb
movsb
in
test
mov
fldt
inc
cmpl
lret
jecxz
push
inc
xor
addr16
gs
sub
inc
popa
testb
pop
or
test
xchg
and
test
push
cwtl
sbb
outsb
mov
inc
into
pop
icebp
xchg
inc
aam
sbb
pop
mov
fstps
pop
sub
sbb
sbb
pop
pop
fildl
mov
loope
mov
mov
sbb
pop
pop
in
dec
mov
inc
add
add
mov
leave
movsl
inc
loop
cmp
movsb
leave
dec
xchg
mov
inc
addl
lcall
jns
bound
dec
inc
divl
jge
cli
mov
test
cmp
mov
lds
cwtl
inc
dec
outsl
and
mov
add
sarl
jns
testl
fcomip
or
rcrb
add
cmp
clc
sbb
cmp
dec
add
dec
icebp
jmp
jg
mov
and
pop
test
push
fstpl
inc
xchg
loop
pop
pop
xchg
pop
sar
lds
cmp
scas
add
divl
add
sub
inc
in
js
hlt
js
scas
mov
aam
jbe
and
xor
test
push
sbb
in
in
pop
fwait
iret
adc
mov
and
stos
repz
imul
cmpsb
sub
scas
loope
push
orb
push
mov
pop
xchg
xchg
and
pop
dec
xorl
add
fistpl
push
dec
mov
cwtl
lds
lock
int
scas
or
in
loope
clc
xlat
and
xchg
mov
sbb
inc
gs
push
pop
fcmovnbe
ja
out
sub
pop
and
jns
fisttpl
sbb
movsb
fimull
fidivs
push
in
jge
pop
and
js
adc
fincstp
aaa
icebp
dec
movsb
inc
xor
lods
xor
mov
sbb
xchg
idivl
sbb
mov
xchg
sahf
sbb
or
rorl
scas
push
and
out
ss
jns
int
clc
sub
push
mov
pop
fildll
in
ja
cwtl
fwait
imul
cmp
insl
add
scas
js
fcmovnbe
divl
fwait
inc
mov
add
cli
add
mov
test
sub
lods
into
push
mov
movsb
and
cmp
out
fstl
add
mov
and
cmp
add
loopne
out
mov
pushf
sub
sbb
or
pop
add
aaa
add
aam
addl
sbb
mov
jecxz
mov
pop
in
lods
insb
mov
xor
cwtl
pop
sbb
std
mov
stc
xor
and
out
pop
sbb
push
sbbl
xor
mov
add
mov
xchg
jecxz
xchg
push
and
mull
les
push
pop
cwtl
cmp
aaa
iret
xchg
not
cmp
push
pop
sbb
jg
inc
repnz
loop
or
inc
xchg
cmp
cmp
mov
into
add
les
sbb
jo
stc
sti
jns
fldcw
popa
xchg
lahf
or
sub
cwtl
scas
pop
mov
stc
lods
push
and
mov
push
mov
clc
dec
in
aaa
adc
push
movsb
sub
imul
jns
int3
jnp
fwait
mov
or
adc
pop
push
pop
ja
test
adc
add
cmp
push
inc
or
imul
cwtl
add
notb
test
mov
testl
mov
aaa
in
pop
inc
mov
imul
hlt
cltd
inc
sbb
cmp
cmp
mov
add
addl
mov
mov
lods
jmp
sbb
gs
push
mov
fcmovnbe
lret
jp
sbb
in
sahf
fwait
out
mov
inc
sti
add
scas
icebp
or
pop
xlat
jns
ret
pusha
je
fwait
sbb
pop
pop
gs
fcomps
test
mov
add
cmp
cwtl
aaa
rorl
cmp
cwtl
add
inc
adc
shlb
mov
movsl
test
add
mov
jecxz
cltd
push
push
cwtl
stc
nop
mov
sti
les
jmp
push
xchg
in
jp
cwtl
ja
in
jns
stc
stc
mov
rclb
aas
dec
mov
push
pop
ret
arpl
dec
jp
stc
jecxz
test
pop
mov
clc
xchg
mov
mov
or
add
test
pop
ss
in
jle
enter
mov
adc
sbb
inc
jbe
cltd
loop
fistpll
jp
mov
add
fisubrl
mov
lock
add
pop
and
sbb
xlat
jnp
and
jg
add
out
cli
mov
push
cmp
pop
push
or
push
and
inc
pop
or
stc
xchg
pop
pop
fdiv
aam
cmp
fimuls
insl
fldenv
cmp
pop
movsl
fldenv
negl
jge
jp
push
jle
bound
jb
fnsave
xor
jne
out
fidivrl
and
stos
adc
inc
cmp
pop
mov
ret
pop
rcrb
scas
inc
jnp
je
sbb
push
xchg
push
pop
push
mull
sti
xchg
mov
fs
add
jns
mov
cmp
inc
mov
dec
sarb
mov
lret
cmpl
mov
in
mov
mov
arpl
js
or
push
pop
test
es
vpunpcklqdq
aaa
test
orb
movsb
mov
inc
fcomps
or
jns
je
push
ja
cmp
outsl
outsl
mov
repz
sti
fcmovnb
sub
pop
push
insl
cmp
loope
cmp
add
jmp
mov
push
ret
adc
loopne
fistl
jnp
mov
sbb
and
cmp
fildl
push
cmpsb
adc
dec
pop
pop
in
pushf
jl
adc
sbb
sbb
add
inc
cwtl
jecxz
push
mov
dec
les
mov
jmp
cwtl
add
sbb
arpl
mov
in
and
sbb
inc
add
dec
and
or
test
jno
inc
pop
lret
ja
test
adcl
cmp
movsl
in
sbb
pop
dec
and
pop
mov
push
mov
test
cmp
leave
pop
loop
aad
fldl2t
shlb
test
add
jnp
mov
leave
xor
inc
push
jns
add
mov
mulb
outsb
clc
inc
jae,pt
mov
sbb
and
ret
fdivrs
or
in
pop
inc
sbb
fwait
adc
arpl
jmp
pop
adc
jae
std
mov
push
in
aaa
out
loope
cmp
and
push
pop
add
in
fistl
pop
mov
and
add
jmp
xor
cltd
loop
adc
cli
sbb
jns
xchg
cmp
add
ja
clc
pop
js
adc
into
sarb
adc
scas
les
xor
fnstenv
mov
sbb
icebp
aaa
test
stc
add
arpl
shr
mov
fidivrs
les
sahf
push
fwait
xor
mov
sbb
notl
loope
js
aaa
cltd
aad
sbb
fwait
cmp
popf
testl
aas
jecxz
dec
inc
mov
scas
das
jge
fadds
mov
cwtl
inc
jno
fcomi
ficompl
inc
in
adc
sbb
lahf
mov
and
mov
icebp
xlat
mov
pushf
push
add
movsb
out
push
cmp
aad
sbb
test
pusha
scas
sbb
sbb
add
mov
lds
sti
cltd
adc
fisubs
js
push
xchg
cli
inc
fwait
or
pop
idivl
cmp
add
cmp
xchg
sbb
nop
test
sub
lock
mov
jae
cld
orl
iret
andl
cmp
test
push
adc
push
outsl
ljmp
les
jne
stos
sahf
cmp
sbb
arpl
jo
loope
cmp
xor
inc
xlat
div
jg
loopne
insl
or
cwtl
test
pusha
sbb
add
xlat
fsub
in
mov
ret
push
popf
inc
movsb
sub
test
push
xchg
adc
lcall
inc
rolb
mov
pop
repz
cwtl
and
arpl
mov
xlat
xchg
fwait
mov
aad
es
fs
gs
or
aaa
mov
xor
mov
jg
dec
cmpsl
adc
mov
xchg
fistpl
pop
dec
cmc
add
test
icebp
mov
sub
hlt
push
push
and
mov
sbb
dec
jle
pop
cli
mov
movsb
add
movsl
les
inc
jns
dec
adc
push
add
push
sti
cltd
sub
shlb
sbb
sbb
fs
cmpsl
icebp
sahf
inc
pop
aad
add
fs
or
movsl
shlb
lds
xchg
mov
and
mov
or
aaa
mov
mov
pop
sub
and
nop
jae
push
aad
mov
lods
jmp
fwait
sbb
iret
sti
add
mov
jbe
add
push
and
mull
in
not
pop
add
lcall
add
mov
sbb
adc
adc
jb
jmp
jmp
in
enter
xor
mov
mov
les
mov
cmp
les
test
shr
clc
xchg
stos
in
xchg
mov
push
pop
loop
scas
ret
cmp
cwtl
cli
cmp
imul
insl
cmp
jecxz
mov
add
add
jo
push
or
and
adc
negb
aaa
ret
cmp
push
and
add
mov
loop
leave
lahf
mov
dec
pop
int3
icebp
jns
flds
daa
jge
inc
fldenv
aas
cmp
out
mov
vpsubd
call
pop
fwait
add
add
pop
push
out
xlat
fldenv
xor
int
or
mov
hlt
and
mov
clc
aaa
pop
and
in
mov
call
pop
xlat
outsb
push
test
mov
pop
arpl
cmp
push
xor
add
pop
fnstcw
aaa
xchg
cmpl
add
dec
das
sub
scas
add
or
inc
sbb
sti
jnp
fcmovnbe
xor
inc
mov
pop
and
mov
pop
add
adc
mov
fsubr
dec
bound
sbb
jg
xchg
cmpsb
lcall
dec
in
sbbl
xchg
shrb
notl
and
pop
jns
xchg
sahf
shll
fld
lock
xchg
xor
in
into
pop
adc
loop
pop
or
cmp
div
ja
xchg
sbb
add
loop
cld
pop
adc
sbb
arpl
test
mov
cs
adc
hlt
test
in
lds
and
mov
mov
ja
lret
sbb
push
jns
sbb
enter
pop
fs
jle
pop
into
fadd
push
push
mov
sti
push
cmp
icebp
shlb
pop
jp
or
push
inc
cmpsb
icebp
mov
aaa
cmp
mov
gs
in
or
push
loop
add
or
neg
inc
and
mov
les
inc
test
and
mov
int
inc
js
pop
push
cmp
mov
pop
fs
shlb
and
movsl
clc
mov
sbb
mov
sti
fstps
add
and
ret
xchg
stc
lahf
ficompl
cmp
cs
in
sbb
pop
rorl
add
iret
pusha
dec
mov
and
or
inc
mov
inc
in
cmp
mov
cwtl
test
ret
adc
mov
in
in
cwtl
inc
adc
inc
or
cli
mov
xchg
cwtl
sbb
mul
mov
pop
arpl
adcl
stos
mov
cli
lds
sti
test
aam
es
or
aaa
sub
outsb
jne
ret
mov
mov
cwtl
insb
cmp
add
jo
pop
mov
fbstp
mov
mov
push
xchg
into
fstpt
aad
add
mull
cltd
sbb
sub
jne
lds
scas
hlt
sbb
and
or
dec
xchg
cmp
les
sarb
adc
pop
divl
cltd
pop
mov
and
shlb
cmc
fisubrl
sbb
mov
and
xchg
inc
loopne
out
xchg
movsb
cmp
sub
lret
movsl
cmpsl
in
mov
mov
cmp
cmp
dec
sbb
jecxz
daa
mov
xor
imul
cmp
test
cmc
inc
les
add
inc
or
sti
cwtl
lds
iret
pop
xchg
iret
popf
roll
inc
movsl
xor
stc
xor
cwtl
std
std
sar
jmp
outsl
ret
pop
inc
jo
and
sbb
add
jne
dec
pop
fsubs
iret
clc
jo
fld
adc
sbb
addr16
addr16
adc
test
mov
adc
add
push
mov
add
aad
sarb
inc
push
push
sub
popa
and
lods
sub
sbb
cmp
sahf
and
idivl
ret
mov
adc
inc
xchg
sub
clc
add
sbb
in
aaa
push
ss
push
test
mov
cmpb
or
jns
lods
movsb
or
adc
cmp
repz
and
mov
fwait
jns
pop
arpl
lea
inc
jne
subl
sub
or
xchg
add
not
ja
mov
mov
js
mov
mov
outsl
add
int
add
mov
ror
sbb
mov
mov
out
lds
bound
sub
lods
dec
xchg
adc
xchg
cmp
or
aas
or
mull
push
lea
and
add
or
xlat
and
rcr
cmp
ret
pop
mov
add
or
rcl
ds
push
loope
fs
push
dec
js
test
adcl
cs
add
inc
and
shrb
loop
fsubs
imul
add
movb
xchg
movl
mov
jecxz
adc
fldt
lds
arpl
rorl
adc
inc
cmp
and
sbb
mov
sbb
or
xorl
mov
jg
out
loop
cwtl
xchg
jne
shll
scas
clc
and
pop
cmp
jg
mov
add
icebp
cmp
mov
and
iret
dec
xchg
sub
cli
mov
movsb
pop
mov
mov
stc
inc
stc
in
and
jns
loope
push
sbb
fnstcw
fdivrs
and
sbb
xchg
push
sbb
mov
aad
movsb
inc
and
shll
mov
cwtl
ja
cmp
adc
clc
jecxz
stc
les
inc
mov
push
inc
aam
fadds
xchg
sbb
inc
xchg
jecxz
push
ja
xorl
test
lahf
xchg
int
xchg
dec
testl
mov
sti
insb
and
jge
mov
movsb
cmp
cmp
call
movsb
mov
cwtl
stc
adcl
mov
fwait
mov
cwtl
push
sbb
dec
in
adcl
mull
fwait
xchg
inc
xor
pop
dec
and
jecxz
dec
sti
jbe
aad
push
test
in
sbb
inc
sub
fstpl
ss
mov
jne
and
dec
daa
bound
pop
lods
add
pop
pop
cmp
mov
pop
gs
jle
loop
lds
hlt
icebp
stc
and
mov
push
pop
sbb
adc
js
ja
cmp
pop
inc
add
enter
fwait
loop
ret
out
in
adc
and
pop
nop/reserved
pop
add
cmp
mov
xor
mov
lods
out
pop
dec
adc
test
repnz
mov
sbb
adc
xor
xchg
fstpt
cmc
ljmp
push
inc
popf
push
inc
adc
mov
and
mov
xchg
sub
jo
addb
stc
add
imul
pop
cltd
leave
jp
and
movsl
push
cmpsb
mov
cli
into
popf
imul
cwtl
mov
jge
fs
movsb
inc
aaa
add
in
cs
js
add
mov
loope
fwait
or
mov
pop
sbb
adc
inc
mov
pop
ret
cltd
and
push
adc
aaa
push
sbb
cmp
test
push
adcl
scas
js
out
and
mov
inc
in
inc
cld
xchg
hlt
cmp
cltd
cli
jbe
pop
mov
fwait
mov
cmp
testb
add
mov
sbb
and
add
call
add
push
es
addr16
add
xchg
cmp
push
test
loopne
stc
jmp
lcall
hlt
jo
inc
jnp
sti
add
inc
push
add
in
add
cltd
sbb
mov
notb
fwait
sti
in
push
inc
or
inc
pop
lea
pop
jnp
inc
cli
add
inc
pop
cmp
push
mov
stc
aam
mov
jns
pop
pushf
ret
jp
xchg
addl
xor
fwait
mov
jns
jno
clc
sti
rcll
mul
jo
add
add
pop
dec
dec
xchg
scas
arpl
jecxz
not
sbb
mov
call
shrl
mov
mull
clc
ret
sbb
test
sti
arpl
and
fdivs
mov
jecxz
inc
or
or
add
xchg
add
cli
inc
pop
inc
mov
movsl
sbb
fcomps
fwait
leave
cmc
jmp
mov
adc
outsl
ret
fnstcw
inc
pop
and
push
cmp
cli
add
push
fcmovnb
jo
and
arpl
add
cmp
cwtl
xchg
jne
div
loop
jb
sbb
movsl
cwtl
idivb
ja
stos
enter
mov
jnp
inc
mov
pusha
push
mov
jle
repz
mov
lds
outsb
mov
mov
and
es
stos
mov
fstpt
sbb
inc
test
push
pop
sbb
scas
or
inc
mov
ss
mov
jae
add
mov
or
mull
es
mov
fwait
add
in
test
movb
fldenv
ja
mov
add
and
dec
sbb
ds
jecxz
ja
xchg
in
add
in
add
mov
arpl
and
add
jmp
add
push
imul
xchg
pop
ss
mov
ljmp
pop
shr
and
xor
clc
mov
fldenv
scas
sbb
outsl
loop
pop
xchg
test
clc
sbb
repnz
call
sbb
mov
adc
jne
cmp
xchg
or
xor
adc
xchg
dec
ret
test
pop
mov
push
dec
les
cwtl
cmp
cltd
arpl
sbb
and
mov
ror
inc
iret
shlb
in
dec
xor
or
xchg
fstps
sbb
outsl
repz
and
clc
adc
imul
sub
xchg
outsl
push
cwtl
orl
jne
or
movsb
push
cmp
cmp
les
mov
sbb
mov
test
imull
leave
lcall
cltd
mov
mov
es
sub
notl
xchg
fs
inc
or
sub
sub
pop
push
adc
sar
fwait
push
xchg
cmc
sbb
add
lds
add
sbb
dec
fldenv
sbb
xchg
cmp
pop
add
and
iret
dec
rclb
shrl
inc
stc
pop
pop
push
pop
pushf
xlat
and
dec
pop
dec
outsb
stos
addb
xchg
inc
fstpt
sub
loop
mov
js
pop
daa
lcall
outsb
fdivl
jmp
ja
or
jns
inc
shll
adc
add
cmp
inc
push
xlat
cmp
bound
mov
cmp
sub
pop
add
idivl
sbb
inc
xor
pop
dec
ret
cmpl
inc
xchg
mov
es
call
cmp
or
pop
aad
divl
adc
push
ss
sub
stc
pop
fs
mov
mov
mov
xchg
sbb
jl
and
xlat
pop
mov
scas
jae
push
sbb
inc
inc
ja
movsl
inc
mov
movb
ret
loope
and
sub
out
arpl
sub
cmp
in
adc
je
mov
test
lea
dec
test
inc
push
pop
inc
mov
ret
imulb
adc
dec
cmp
jnp
arpl
movsb
mov
cmp
bound
xor
adc
mov
sbb
sbb
push
pop
neg
adc
stc
out
movsl
cmp
iret
adc
push
jecxz,pt
test
ds
pop
xchg
or
cwtl
cmp
outsb
fsub
xchg
mov
xchg
add
sbb
or
inc
loop
cltd
sub
jg
mov
mov
ds
xor
lock
cwtl
and
dec
jnp
mov
sbb
pop
enter
bound
outsl
mov
mov
adc
aad
add
xchg
loope
jns
stc
add
and
fstps
in
jge
sub
cmpsl
jo
xlat
shll
iret
pop
fwait
sbb
pop
les
std
adc
imul
arpl
repnz
adc
pop
ds
push
sbb
or
cmp
cmp
jecxz
pop
mov
mov
daa
in
push
xchg
movlhps
sbb
pop
iret
inc
mov
and
push
jns
arpl
mov
movsb
subl
mov
jmp
stos
movsl
repz
pop
pop
outsb
add
in
mov
fiadds
push
jo
cmp
aaa
mov
fiadds
scas
test
pushf
loop
jno
arpl
fsubs
fwait
test
push
push
or
inc
pop
add
xacquire
push
cmp
gs
pop
cltd
xchg
pop
dec
test
jo
fadds
mov
xlat
std
dec
pop
jnp
pop
mov
test
mov
ja
jo
jns
roll
imul
loope
cwtl
in
cmp
gs
popf
test
xchg
mov
loopne
mov
push
sbb
xchg
mov
mov
dec
pop
in
adcb
xor
cmp
aad
leave
movsb
jmp
sbbl
pop
in
frstor
pop
cltd
xchg
sub
test
repnz
inc
sbb
mov
add
or
pop
jg
outsl
sub
iret
mov
out
loope
pop
arpl
sbb
sbb
cwtl
jge
and
sub
cmp
fadd
inc
pop
or
sbb
cmp
jle
jecxz
or
mov
movsl
aam
or
xchg
add
push
cmp
out
add
pop
aaa
arpl
push
or
repz
sbb
xchg
sbb
inc
mov
cmp
and
lcall
dec
pop
mov
xchg
testl
push
mov
iret
in
movsl
mov
lds
push
pop
sbb
cwtl
mov
and
in
sbb
leave
dec
mov
cmp
cmpl
jae
call
mov
in
mov
pushf
js
and
mov
loope
add
and
push
push
push
or
mov
add
xor
xchg
or
sti
add
pop
sub
mov
movsb
cwtl
addl
sub
mov
sbb
hlt
add
sbb
fwait
imul
stos
adcb
out
andl
dec
icebp
mov
mov
test
adc
sbb
cmp
cwtl
mov
pop
push
notb
jno
add
xchg
mov
add
fistpll
daa
fwait
negl
sub
mov
cli
inc
les
fwait
vunpckhps
notl
and
add
mov
imul
mov
imul
mov
and
and
sti
xor
aaa
aas
jl
xchg
and
cmp
pop
jl
sbb
pop
pushf
inc
sbb
pop
fstpl
xchg
fs
jns
sub
and
ds
fnstcw
rcll
out
inc
cli
clc
fs
and
popa
mov
enter
jo
push
rdmsr
add
pop
mov
iret
add
jbe
add
out
inc
addr16
icebp
sbb
jnp
ljmp
fbld
aaa
cmpl
fsubs
lcall
test
int3
mov
test
pop
ds
dec
fcmovbe
add
lock
fwait
loop
xchg
sub
mov
inc
sbb
pop
mov
int3
sbb
xchg
inc
cmp
adc
mov
fwait
or
testb
negl
das
cmp
xor
add
cmp
stc
test
xchg
mov
cli
aaa
dec
cmp
mov
cltd
xor
mov
test
inc
mov
testb
loope
fwait
aaa
ja
sbb
or
ret
in
and
inc
bound
in
rclb
adc
cli
les
cmpsb
xor
fcomps
daa
test
pop
mov
cmp
push
xchg
test
flds
das
pop
push
cli
mov
push
sti
push
cli
pop
inc
xchg
rolb
mov
imul
xlat
mov
cli
pop
inc
jecxz
sbb
loope
lret
push
fwait
add
add
pushl
inc
jns
jo
mov
mov
je
mov
cmp
js
cs
mov
cmp
movsb
jmp
cmp
les
adc
and
sbb
out
sub
xor
xchg
cli
movsl
mov
mov
gs
pop
pop
dec
js
test
mov
fwait
in
clc
aam
adc
xchg
sub
dec
and
cmp
adc
xchg
pop
mov
int
idivb
sbb
push
or
push
fnstenv
jae
jg
movsb
push
js
cmp
adc
or
cmp
nop
push
mov
add
xor
rolb
ja
sbb
push
sbb
loop
inc
push
inc
les
test
fdivrl
imul
mov
mov
test
nop
testl
test
imul
sbb
aaa
dec
cltd
xchg
cmp
sub
mov
and
cltd
jmp
mov
shlb
mov
mov
js
stos
ficoms
inc
lds
test
add
popa
add
sarl
ja
jg
shl
mov
aad
icebp
gs
add
aam
repnz
xchg
cltd
cmp
ja
in
jnp
push
shlb
cmc
sbb
bound
adc
push
stc
sbb
cmp
push
adc
jecxz
fs
jns
add
jb
lahf
add
pop
pop
mov
jmp
fsub
bound
push
clc
pop
cmp
jl
movsb
mov
in
ja
mov
pop
push
fs
aas
or
xlat
mov
add
mov
adc
pop
mov
lock
mov
fs
notl
or
cmp
outsb
cmp
cmpl
in
ss
xchg
test
loope
arpl
sub
nop
xor
scas
sbb
scas
mov
ljmp
arpl
add
loop
mov
mov
sbb
add
adc
rcrl
repnz
jnp
push
mov
fldcw
roll
add
int
in
and
flds
in
stc
sub
sbb
pop
in
xchg
push
lock
sti
adcb
and
push
loope
and
or
fsubs
fstpl
andl
insb
fisttps
mov
cwtl
and
shl
cwtl
pop
xchg
ds
popa
cmp
and
add
leave
lcall
sti
pop
jns
nop
xlat
orl
xchg
sub
decb
movsl
cmpsl
adc
data16
jp
mov
lds
cmpsl
jns
push
aam
mov
fisttpl
and
negb
pop
fs
testl
stc
push
cmc
pop
pop
arpl
xor
movsl
and
cmp
repnz
leave
mov
push
aam
xor
or
xchg
cmpsb
outsl
sahf
ret
movsb
push
xor
sbb
mov
sub
mov
testl
in
mov
cmp
testl
cmp
fldenv
fnclex
adc
test
movsl
fiaddl
sbb
arpl
outsb
jl
inc
lock
cwtl
pop
sbb
mov
dec
enter
mov
out
sbb
push
cltd
stc
sbb
out
mov
mov
sbb
je
inc
gs
movsl
cmc
sub
mov
push
mov
xchg
test
inc
pop
ds
clc
add
and
sarb
add
dec
divl
sub
aaa
mov
sahf
lret
sbb
dec
jo
inc
icebp
pop
push
fadd
loope
pop
xor
add
xchg
fs
aas
inc
and
xchg
repz
cwtl
push
popf
aaa
test
insl
jno
xchg
xchg
inc
xchg
and
out
xor
and
or
mov
arpl
stc
push
and
cltd
lds
sbb
sbb
scas
add
push
push
push
cli
sbb
inc
adc
ja
ficoms
idivb
fadds
jns
call
dec
jge
add
and
add
push
add
push
bound
jecxz
cmp
mov
or
fwait
testb
adc
fdivr
or
les
adc
push
mov
add
push
cwtl
jns
cwtl
cmpsb
outsl
and
bound
sub
icebp
loope
mov
std
inc
and
or
cwtl
mov
flds
sbb
mov
cmp
sbb
sti
testb
cltd
stc
cmc
sbb
call
add
outsb
mov
adc
in
sbbl
clc
push
std
pop
cmp
inc
loope
in
jmp
or
test
inc
sbb
fldt
inc
sti
pop
pop
push
aad
pop
das
movsb
stos
sbb
and
jecxz
jge
add
pushf
mov
in
mov
frstor
ret
cmp
push
cmp
jnp
cmp
mov
mov
or
ds
and
and
cli
pop
push
inc
rcrb
pop
mov
xchg
mov
adc
loopne
pop
push
movsb
cwtl
flds
mov
fs
pop
jo
mul
fnstcw
stos
lea
dec
cmp
jb
add
push
jo
cltd
jp
and
cmc
adc
lds
push
divl
xchg
dec
or
cwtl
mov
cmp
cwtl
gs
push
add
xchg
jns
lcall
cwtl
add
sbb
xor
imul
out
sahf
arpl
movsl
and
xchg
mov
repnz
les
mov
sahf
pop
inc
mov
cmp
scas
dec
in
cli
pop
mov
inc
inc
ret
repnz
inc
popf
repnz
std
scas
js
in
mov
shlb
push
mov
cmpsl
pop
in
mov
roll
cmpsb
cmp
out
xor
movsb
test
mov
jnp
add
mov
cwtl
movsl
dec
ret
loop
outsl
inc
cmp
push
icebp
fcoms
and
xor
loop
test
push
pop
pop
rcrb
or
cwtl
mov
mov
jb
or
dec
ret
arpl
xchg
mov
loope
cwtl
fs
push
jecxz
xlat
inc
lds
adc
cmp
and
ret
pop
push
mov
fnstsw
jns
xchg
add
push
imul
push
pop
mov
or
test
jecxz
pop
push
imulb
aas
and
fwait
insl
enter
jnp
and
adc
test
ret
xor
movsb
and
mov
mov
xor
xor
jle
jno
mov
xor
mov
mov
sbb
and
in
sbb
jnp
cmp
jg
cwtl
sbb
loop
ficompl
sub
mov
lea
stc
scas
add
addl
pop
inc
sbb
jecxz
fistpll
pop
sbb
imulb
rcrb
xor
mov
xlat
flds
and
bound
add
mov
fwait
push
add
out
adc
fs
cmp
push
pop
sbbb
mov
fwait
cmp
add
pop
add
fcomps
or
push
adc
cmc
ss
scas
pop
in
pop
testl
ret
inc
add
jle
mov
clc
arpl
cltd
adcl
je
add
mov
jbe
mov
mov
and
cmpl
clc
ja
adc
pop
scas
jnp
add
lds
gs
outsl
mov
sbb
sub
stos
xchg
fabs
repnz
ret
jmp
in
pop
ds
pop
loope
mov
pop
test
cmp
js
jae
jne
mov
ret
jmp
xchg
movsb
jb
push
mov
testl
pop
clc
xor
loop
int
mov
arpl
or
mov
lea
jmp
inc
jnp
inc
xlat
mov
xor
fstpl
fs
or
fmull
mov
cwtl
add
push
xchg
cmp
and
lcall
push
jnp
outsl
mov
add
inc
mov
jecxz
xchg
fs
mov
cmp
out
in
sbb
cwtl
test
stc
sub
push
sub
scas
cltd
loopne
sbb
sub
xor
pop
mov
sub
jg
jmp
dec
mov
cmp
push
cmp
and
arpl
jnp
mov
mov
adc
xchg
push
jns
mov
pushf
sbb
fstpt
gs
pop
mov
and
mov
lock
inc
jno
jns
or
in
addl
inc
in
loop
pop
xchg
aaa
pop
out
xlat
aas
mov
push
popa
arpl
imul
cmp
pop
bound
xchg
sbb
fwait
adc
addb
js
add
jnp
or
aam
aam
mov
cmp
xchg
add
loop
pop
mov
sbb
or
out
fwait
mov
lds
stc
ds
lret
out
pop
push
frstor
adc
test
les
sti
fs
movsl
arpl
or
cmp
sahf
sub
js
mov
jecxz
lcall
xor
std
add
icebp
dec
adc
negb
pop
sbb
sbb
mov
sub
push
arpl
mov
sbb
out
push
gs
mov
cmpsb
fsubrs
inc
dec
sub
test
add
arpl
jge
dec
sbb
mov
in
push
push
bound
adc
or
movsb
xchg
add
cltd
pop
in
negb
fstpt
and
sbb
mov
or
pop
loope
mov
inc
sbb
shl
negb
movsb
jnp
or
sbb
sub
inc
sti
in
pop
mov
or
fstps
pop
nop
mov
fdivrs
cmp
pop
mov
jp
loop
test
cli
add
mov
loopne
pop
xchg
jecxz
mov
aaa
lds
decb
add
jae
and
cmp
cmp
loope
movsb
mov
arpl
pushf
xor
ret
loop
push
jb
mov
cwtl
xchg
mov
rorl
sbb
loop
sbbl
add
iret
flds
call
ror
repnz
leave
sbb
or
out
and
pop
push
jmp
push
xchg
mov
pop
sahf
or
pop
iret
jns
ret
xchg
notl
add
sub
adc
xchg
xchg
pushf
push
cmp
test
scas
movsl
arpl
imul
mov
xchg
scas
mov
loop
es
mov
xchg
mov
outsb
les
push
out
jns
and
andb
cmp
or
add
and
push
in
mov
out
jmp
xchg
inc
outsl
add
dec
mov
xchg
cwtl
pop
sbb
jne
or
or
cli
stc
push
cmpsb
jecxz
and
add
inc
shl
ja
fsincos
testl
adc
xchg
sbb
lds
ud1
push
cmpsb
pop
ds
push
mov
xlat
adc
insl
fldl
sub
pop
and
or
pushf
cli
fdivr
sbb
pop
sbb
jle
fwait
and
pop
cmp
rolb
jo
inc
movsb
add
ja
sarl
and
jnp
or
lds
inc
jge
xor
jecxz
jae
pop
lea
stos
mov
sarb
add
inc
or
pop
jns
pop
pop
test
add
cltd
pop
insl
and
pop
neg
adc
xor
cmp
cs
add
mov
cmp
js
xchg
dec
mov
mov
push
adc
aaa
add
inc
mov
popf
push
clc
loopne
ja
push
xor
pusha
cs
cli
je,pt
ss
adc
sbb
sti
les
aam
cwtl
pop
fs
fwait
dec
pop
aam
and
in
push
fwait
and
pop
mov
cmp
bound
clc
pop
adc
mov
sti
mov
xchg
and
sahf
fs
add
cmp
enter
inc
outsb
sbb
sub
mov
in
cwtl
adc
shrb
push
pop
in
test
pop
add
jo
jecxz
sbb
scas
sbb
arpl
xchg
add
ret
js
inc
stos
mov
fwait
mov
pop
inc
push
sub
mov
cwtl
mov
lods
mov
jno
test
cltd
jmp
pop
rcll
jb
dec
gs
and
cwtl
loop
clc
xchg
jge
mov
fdivr
sahf
cmp
aaa
cmp
fwait
cmp
mov
cmp
ret
inc
jmp
sti
xor
and
aam
mov
jne
push
js
sbb
testl
sub
cmp
and
xor
sahf
movsl
cmp
sbb
sbb
mov
xchg
outsb
inc
pop
repz
in
call
aaa
pop
negl
fcoms
dec
sbb
stc
fcoms
sbb
sbb
push
in
aam
pop
or
cwtl
stc
mov
shlb
inc
or
les
in
mov
inc
aaa
pop
xchg
push
cmp
cwtl
cli
shll
loopne
dec
jnp
pushf
jl
cmp
subl
mov
push
push
mov
add
mov
bound
or
cmp
enter
arpl
in
inc
add
xchg
inc
xor
cli
mov
leave
fs
sbb
mov
lds
add
shlb
mov
insl
cli
test
fisubl
out
and
insl
add
test
mov
movsl
mov
aad
sbb
or
mov
push
pop
in
add
movsl
loopne,pt
icebp
jp
in
outsb
fucomi
js
fincstp
pop
imul
add
cmpsl
inc
push
cmpsb
enter
andl
dec
jo
mov
sti
pop
fbld
mov
out
ja
sbb
inc
cmp
mov
pop
ds
jns
fwait
mov
fs
data16
pop
fstl
sbb
aaa
add
aad
fcoml
arpl
mov
in
fs
fs
adc
pop
fcomps
sbb
sbb
adc
and
inc
jp
ja
pop
cmp
inc
xchg
push
outsl
push
add
adc
jnp
push
xchg
lret
jecxz
jg
push
jmp
inc
pop
stc
and
inc
movsb
add
clc
sbb
cmp
push
push
mov
or
adc
ds
cwtl
cmp
push
pop
shl
ret
xchg
dec
popf
cmp
sbb
sbb
hlt
dec
adc
mov
loop
pop
sbb
jnp
adc
fs
inc
adc
add
test
lods
fs
add
and
fldenv
jmp
adc
lds
push
loop
je
sbb
jecxz
mov
cmp
loope
fistpl
dec
in
cwtl
pop
pop
out
sbb
call
mov
add
add
push
inc
push
cmp
push
test
sub
popf
sbb
adc
outsb
mov
push
in
jns
cmp
aad
or
mov
in
xorl
and
movsb
mov
inc
cmp
cltd
and
scas
cmp
mov
mov
sbb
stos
jecxz
sahf
jne
add
cli
sbb
movsl
cmp
fadd
inc
mov
mov
mov
fldenv
fldcw
and
mov
sbb
movsb
mov
pop
dec
mov
iret
dec
adc
ret
clc
sbb
add
push
cmp
add
xchg
cmp
orl
sbb
in
xlat
fnstcw
and
lret
in
lahf
ret
push
pop
gs
pop
jbe
mov
mov
in
and
arpl
mov
repz
je
mov
inc
mov
loope
mov
fs
mov
movsl
mov
push
leave
or
jecxz
xchg
rorl
in
fs
gs
ja
mov
ds
in
cmp
cwtl
jecxz
jecxz
push
imul
les
stc
mov
sbb
xor
adc
jo
gs
push
fistpl
add
mov
xor
out
cld
dec
jmp
sbb
inc
add
jns
js
adc
imul
inc
stc
add
cmc
movsl
sbb
and
fcom
pop
jnp
fwait
out
add
outsb
or
cmp
mov
fdivr
add
mov
test
add
lret
add
cli
xchg
mov
add
push
les
jl
negl
es
cs
jns
sbb
iret
aad
out
loop
stc
shrb
pop
imul
arpl
lds
push
cmp
mov
and
dec
nop
das
pop
xchg
xchg
adc
inc
mov
sahf
cmp
and
cmp
inc
or
mov
add
ret
jle
and
outsl
mov
jae
adc
jmp
pop
clc
mov
aaa
xlat
add
cli
sbb
inc
lea
or
cmp
xchg
and
push
pop
and
stc
xor
and
mov
push
push
clc
cmp
add
push
sbb
or
fs
inc
adc
mov
test
iret
loop
out
mov
mov
mov
jb
movsl
gs
mov
push
push
push
scas
loope
jge
lods
iret
fwait
jns
adc
fidivs
imulb
scas
outsb
sub
pop
pushf
test
cmp
sbb
inc
jnp
inc
divl
leave
push
mov
mov
inc
jnp
sbb
clc
sub
vmovdqa
jge
test
mov
flds
pop
xchg
xor
push
inc
push
mov
sbb
test
pop
cmp
and
push
inc
test
add
cmp
lcall
stc
jnp
push
leave
cmp
bound
ja
fs
data16
in
cmp
sbb
inc
out
and
mov
push
into
gs
push
cltd
pop
cmp
add
pop
xor
mov
inc
filds
cmc
jecxz
xchg
call
test
add
jns
sarb
cmp
sub
pop
aad
pop
push
pop
dec
iret
arpl
sti
ja
stc
imul
or
mov
mov
pop
and
sbb
test
mov
aam
subl
pop
ss
sbb
mov
add
pop
jle
mov
testl
fadds
ret
push
cmp
adc
and
dec
xchg
inc
cmp
leave
inc
mov
xchg
push
cmp
cmp
sti
cmp
cltd
data16
mov
leave
ror
and
aad
jae
cmpsb
je
cli
and
mov
xrelease
lds
or
movsb
sbb
lret
xor
cli
mov
fsubrs
jno
push
movsb
and
dec
pusha
daa
hlt
mov
js
add
mov
inc
cmc
sbb
popa
inc
ss
fisubl
test
and
arpl
mov
cwtl
pop
lret
scas
icebp
out
jp
inc
and
clc
aaa
test
inc
fwait
adc
pop
in
lds
arpl
cmp
inc
outsl
sbb
aaa
cs
fldenv
fldl
sti
sub
lahf
pop
xor
push
test
stc
sbb
negl
lods
push
xor
inc
inc
inc
negl
or
cwtl
iret
push
cmp
jecxz
ds
xlat
loope
jns
and
mov
cmp
mov
clc
scas
movsl
xchg
lcall
cmp
adc
and
in
mov
mov
and
push
and
sbb
test
mov
mov
sahf
xchg
cwtl
jno
push
not
mov
popf
or
cmp
ficompl
xchg
divl
cli
cmp
add
xchg
aad
clc
stc
test
fsts
push
mov
sarb
push
mov
push
and
or
imul
adc
mov
mov
cli
add
aaa
sbb
xchg
scas
and
lret
or
mov
movsb
mov
jns
clc
and
iret
test
adc
push
adc
sarl
cmp
mov
cltd
or
ja
push
add
ret
or
xchg
cmp
test
scas
fs
add
pop
mov
jbe
push
mov
push
inc
iret
push
fdiv
add
mov
xchg
pop
shr
sbb
arpl
adc
pop
aaa
sbb
popf
jg
pop
jb
push
push
adc
pop
xchg
stc
jp
xlat
sub
mov
cltd
imul
inc
in
add
xlat
outsl
imul
sbb
pop
mov
mov
int
adc
mov
add
fdecstp
pop
fcmovne
cmp
fistpl
mov
out
xchg
cmp
and
jg
cmp
lahf
ja
mov
rclb
cltd
shlb
test
push
add
jo
cmp
rcrl
popa
add
xor
movsb
arpl
lds
jecxz
idivl
mov
or
and
roll
add
add
cmp
adcl
in
testb
mov
rorl
pop
add
pop
lds
outsl
xchg
push
inc
fsubrs
and
xor
adc
dec
xchg
arpl
push
cli
inc
scas
xchg
xchg
adc
xchg
insb
jecxz
incl
add
test
cmp
icebp
idivl
inc
jle
lret
sbb
or
loop
nop
push
dec
dec
arpl
subb
into
pop
leave
mov
adc
lret
add
push
sbb
sbb
ret
clc
xchg
pop
scas
jno
aaa
inc
icebp
mov
mov
shl
pusha
roll
jmp
mov
aaa
call
aam
or
mov
push
mov
add
push
pop
cltd
imul
jl
stc
sbb
add
leave
add
adc
test
push
jae
cwtl
add
add
fldt
and
push
sbb
adc
movsl
fldenv
xlat
sbb
les
pop
mov
mov
jno
fadd
aad
stos
out
in
add
ds
mov
or
fistps
adc
mov
mov
push
jmp
in
loope
sbb
add
in
push
pop
inc
repnz
in
aad
stc
mov
add
sbb
mov
pop
lea
popa
stc
xchg
clc
flds
jge
add
add
bound
cmp
sbb
lock
add
mov
arpl
test
push
push
jg
ret
adc
cmp
loop
or
sub
and
fadd
inc
push
adc
js
xchg
sub
iret
movsb
pop
sbb
stc
ja
add
cli
ret
pop
in
imul
pop
jecxz
test
add
int3
xor
aaa
movsb
cmp
push
jl
repz
adc
push
das
add
mov
fadds
or
cwtl
pop
mov
adc
or
scas
push
sbb
add
popf
and
stos
cmp
cmp
pop
cmp
add
pop
add
mov
xor
add
movsl
xor
sub
sti
or
mov
cltd
jnp
repnz
int
mov
mov
ja
rcll
test
movsb
sbb
add
xor
in
ljmp
inc
aad
fcomp
in
in
add
jo
jle
in
mov
jg
lods
jns
push
cmc
idivb
pop
ss
dec
dec
and
add
cmp
adc
sbb
inc
sbb
and
xor
sti
add
fs
jnp
or
pop
les
popf
or
into
arpl
and
cli
mov
sub
and
mov
out
loope
pop
sbb
sub
icebp
add
rclb
push
jb
jle
call
dec
popf
cmp
cmp
add
mov
fs
and
pushf
sbbl
jl
add
int3
jl
stos
jo
pop
jbe
test
inc
and
stc
jns
mulb
add
add
rcrl
fsub
clc
xor
mov
lret
es
stc
in
mov
jl
fs
mov
mov
sub
dec
pop
and
pushf
add
aas
or
scas
or
xlat
test
outsb
adc
and
cmp
lahf
add
pop
xchg
call
int3
mov
stc
and
stc
out
in
stc
add
xchg
jge
cmp
cltd
xchg
movsl
dec
mov
iret
jae
adc
add
mulb
jmp
inc
cmp
adc
int3
mov
mov
test
sub
pop
xor
and
cmp
sbb
test
and
mov
cmc
sbb
add
xchg
leave
fists
movsb
or
push
mov
or
push
push
ja
test
jns
adc
jecxz
jnp
mov
push
pop
scas
inc
stc
or
push
sbb
cli
add
add
ror
mov
and
xlat
test
movsl
in
inc
sti
or
mov
sbb
inc
add
rcrb
lret
mull
popf
popa
ja
mov
movsb
push
cmpl
iret
cmp
push
jecxz
mov
or
mov
mul
arpl
cltd
and
cmp
cmp
mov
mov
push
xchg
sbbl
out
iret
mov
inc
sbb
mov
movsl
xor
dec
adc
in
xchg
mov
and
fldenv
clc
or
out
mov
xchg
mov
jne
scas
out
orl
inc
mov
lcall
mov
sub
cmpsl
or
andl
clc
add
adc
or
pop
adc
adcl
icebp
daa
fistpl
xor
and
lds
bound
push
xchg
shl
test
ja
add
sahf
jle
out
push
mov
jns
sbb
cmp
or
dec
push
gs
fwait
les
movsl
rcll
inc
mov
iret
in
xchg
fcoml
js
jnp
sti
push
sar
sbb
or
cmp
cmp
fstpt
movsb
rorl
xor
jl
push
pop
imull
or
or
mov
enter
in
lock
imul
test
jns
sbb
or
fldenv
inc
xor
std
inc
shr
or
and
cmc
sbb
add
add
fs
pop
dec
mov
push
out
sbb
cwtl
pushf
cmp
in
mov
and
add
insl
sbb
add
cmp
sbb
mov
adc
add
jecxz
sbb
push
pop
movsl
xchg
pop
out
aaa
shrb
iret
sbb
cmp
sbb
inc
int3
xchg
pusha
push
and
jecxz
sbb
subl
jae
aaa
rclb
adc
xchg
loope
gs
and
pop
add
push
xchg
jecxz
ret
pop
mov
arpl
int
orl
in
pop
dec
ja
rcrb
push
mov
movsb
dec
adc
push
cli
adc
int3
pop
pop
shlb
sub
mov
jnp
mov
sahf
push
shl
gs
jge
cmp
inc
cmc
iret
popf
loopne
pop
and
test
pop
push
test
cmp
mov
les
sbb
iret
movsl
add
loop
pop
xchg
mov
mov
in
push
xor
adc
icebp
loop
movsb
cmp
movl
add
in
ret
in
ret
xchg
sbb
dec
inc
iret
sbb
fs
add
pop
pop
xchg
sbb
arpl
shrl
mov
sbb
mov
cmp
lods
add
add
cltd
lods
and
stc
push
or
fwait
popf
in
pop
popf
cmp
lcall
inc
shrl
sbb
and
add
mov
ret
mov
out
dec
xor
out
mov
adc
sbb
sbbb
pusha
mov
and
lds
xlat
inc
xchg
pop
sbb
inc
insl
mov
fwait
mov
imul
push
adc
cmp
call
sub
mov
js
shr
sbb
les
mov
fistpl
xchg
and
test
mov
push
jl
mov
enter
lock
lcall
pop
test
or
out
loop
iret
sub
gs
mov
shl
and
cli
push
add
test
fisttpl
loopne
loop
fwait
inc
xlat
mov
pop
sbb
or
nop
dec
fwait
outsb
sbb
lods
in
or
test
test
cwtl
or
ja
sbb
popf
div
sbb
pop
btr
fadds
mov
into
cmp
pop
andl
cli
fimull
sbb
mov
or
xchg
cmc
lds
les
fwait
mov
cmp
or
sbb
enter
or
add
aad
sub
shll
xchg
pop
push
pop
movsl
jne
fldenv
push
and
push
fiaddl
mov
mov
mov
sub
scas
pop
push
ja
pop
ret
cli
xchg
aaa
leave
rol
adc
outsb
push
stos
test
xchg
iret
inc
fs
cmp
xchg
mov
ds
mov
jnp
sbb
test
inc
shrl
cltd
sbb
mov
gs
jp
int
in
or
test
push
sbb
inc
loopne
vpor
fistpl
sbb
cmp
lret
add
sub
pop
adc
cltd
xor
loop
add
scas
ljmp
imul
sbb
ret
pop
loop
cltd
pop
test
aam
cmp
stc
dec
ss
test
add
and
test
fcomi
ds
aam
fwait
add
cmc
enter
sub
or
lds
out
arpl
and
mov
test
fwait
popf
test
mov
jmp
mull
sub
fwait
mov
rorl
sti
gs
add
mov
pop
mul
out
adc
pop
ret
add
sbb
inc
jp
pop
sahf
jnp
insl
sbb
sub
inc
pop
inc
adc
cmp
fnstcw
ret
sti
nopl
aaa
xor
sbb
add
dec
xor
lret
dec
ja
sbb
aad
aaa
and
out
cmp
fstps
inc
mov
cmp
int
or
sbb
stc
mov
sub
loop
int3
add
adc
sbb
add
dec
add
ret
test
jecxz
rolb
add
popf
std
adc
add
leave
div
jge
ret
mov
ja
loop
pop
jnp
je
cmc
sbb
out
cmp
mov
pop
jmp
cmpsb
adc
cwtl
and
sbb
pop
mov
jecxz
cmp
jbe
mov
out
and
cmpsl
out
fcomps
sbb
sbb
or
add
fwait
xor
push
fists
inc
xor
push
popf
sub
sahf
dec
arpl
iret
fldt
dec
mov
iret
aaa
mull
pop
fxch
xchg
mov
add
test
clc
jl
ret
push
jbe
js
cli
lret
inc
sbb
and
adc
ja
inc
push
cltd
aad
lds
test
inc
lret
jnp
inc
cwtl
push
jle
scas
xchg
push
pop
stc
sub
or
ja
aam
cmc
cld
push
aam
dec
inc
test
les
loop
clc
adcl
lea
in
mov
test
cmp
fidivrs
lahf
push
sbb
xlat
mov
jns
lods
iret
fcoms
fcom
sti
idivl
pop
sahf
and
jecxz
push
xchg
and
adcl
sbb
cmp
leave
push
jbe
xlat
adc
cmp
sub
in
sbb
cltd
arpl
sub
rcr
cmp
cmp
stos
out
pop
out
out
cmp
mov
inc
cmp
in
push
jecxz
aam
push
or
andl
or
inc
add
pusha
ret
inc
nop
mov
sbb
or
push
mov
test
test
cltd
xor
inc
push
fnstenv
fnstenv
icebp
sahf
korb
ja
inc
mov
push
xchg
push
fadds
fstpt
ja
fimull
mov
adc
ret
aaa
mov
jo
test
jns
idiv
cmc
sti
jbe
mov
cmp
add
lcall
and
xchg
pop
pop
cmp
cmpsb
xlat
mov
or
scas
mov
and
add
ja
loop
push
repnz
test
fdiv
sbb
aad
jmp
pop
and
sub
push
and
mov
jmp
jb
dec
out
in
scas
mov
push
pop
inc
movsl
outsl
xorl
fsts
and
cmp
cmpsb
pop
in
mov
scas
mov
call
push
movsb
fcom
pop
repz
mov
aam
int
and
push
mov
les
mov
xchg
cmp
adcl
xlat
popf
movsl
jnp
sub
mov
sarb
mov
icebp
sub
lds
cmpsl
adc
mov
cmp
jnp
pop
add
stos
sbb
jb
sbb
gs
scas
fdivl
notb
mull
add
sbb
inc
fdecstp
dec
sub
test
jecxz
fwait
mov
fs
push
out
movsl
mov
mov
fwait
xlat
pushf
fistps
filds
repnz
xor
lds
cli
gs
or
in
out
pop
les
xor
loopne
idiv
mov
ficompl
orl
out
cwtl
sti
mov
xor
lcall
pop
push
dec
mov
adc
push
mov
mov
iret
cli
cmpl
mov
pushf
fs
sahf
sbb
and
jle
stc
out
pop
pop
xchg
sahf
test
rclb
lds
mov
les
xor
or
dec
mov
or
mov
xor
jecxz
and
pop
pop
data16
and
adc
loope
add
scas
and
dec
dec
hlt
add
andb
xchg
pop
add
jnp
sbb
repnz
cli
test
cmc
sbb
repz
inc
adc
push
cltd
outsb
mov
mov
add
push
iret
clc
sbb
inc
in
sti
add
cli
mov
loope
add
popa
in
icebp
xor
subl
les
xchg
push
lock
testl
outsb
aas
and
fs
add
cmp
mov
mov
adc
dec
les
cmp
lds
jp
jnp
testl
jecxz
in
add
fsubs
movsl
push
jns
mov
ds
js
shlb
push
xchg
lahf
sbb
sahf
fildl
fwait
cwtl
or
sub
movsl
clc
adc
mov
std
std
in
and
sub
pop
inc
mov
jle
inc
movsb
mov
test
mov
cmpb
mulb
gs
arpl
mov
add
pusha
cmp
push
push
inc
dec
imul
inc
fwait
gs
sbb
mul
push
sbbl
mov
cli
cltd
push
pop
leave
jbe
xchg
movsb
adc
rorl
xchg
lds
nop
mov
in
pop
add
fwait
jmp
into
mov
xchg
inc
fmuls
push
mov
inc
ret
pop
int
fdivr
push
push
movsl
add
xlat
mov
mov
mov
cwtl
mov
cwtl
adcl
imul
addr16
cwtl
rorb
push
nop
dec
xchg
fstps
aas
fs
xchg
jp
sbb
sub
jge
test
or
clc
fistl
stos
ror
adc
mov
sub
data16
js
int
cli
fwait
jnp
scas
adc
inc
and
mov
movsl
xchg
push
adc
push
popa
and
sahf
dec
pop
movsb
inc
dec
push
out
aaa
callw
ficompl
mov
ds
pop
or
in
outsb
cld
mov
fldenv
jnp
xor
mov
outsb
and
jnp
xor
adc
sbb
inc
mov
iret
mov
xchg
inc
cmpl
add
pop
lret
pop
imul
notl
jo
hlt
flds
rcrb
add
mov
adc
mov
fcoml
add
ds
jecxz
testb
add
int
jnp
lret
pop
aaa
inc
jmp
xlat
add
lds
adc
adc
push
sub
cmp
les
cwtl
cwtl
cmp
fadds
sbb
pop
add
pop
scas
cltd
pop
mov
jns
imul
stos
ja
jp
xlat
fdiv
mov
lods
and
je
inc
adc
adc
cli
dec
les
mov
add
pop
stc
mov
lds
pop
clc
in
dec
fsubs
nop
and
pop
push
add
ftst
cld
sahf
subl
xor
jecxz
inc
mov
push
cmp
inc
cmp
dec
dec
imull
popf
cld
pop
add
add
add
inc
pushf
flds
bound
jb
rcrl
cmp
mov
inc
pop
or
or
cmc
xchg
jnp,pn
out
mov
pop
pop
repz
xchg
add
fs
aaa
sbb
inc
xlat
lcall
insb
add
outsl
sbb
sub
xchg
fsub
jae
jae
in
jle
sahf
arpl
add
clc
movsl
movl
aaa
js
movsb
arpl
dec
fnstcw
inc
mov
inc
in
mov
out
idivl
and
lods
test
sub
adc
les
pop
inc
daa
xchg
sub
movsl
out
lahf
push
enter
and
pop
movsb
sbb
mov
add
fs
fadds
test
ja
inc
jmp
fwait
loop
mov
fwait
andl
in
pop
test
inc
sbb
sti
ffreep
add
pop
ja
or
cmc
cmp
insl
lahf
mov
push
sub
shlb
arpl
jmp
test
jecxz
jnp
repnz
leave
inc
lds
mov
in
dec
push
xlat
xchg
mull
mov
push
loop
adc
sti
ja
loope
and
leave
lock
std
mov
lds
jnp
sbb
stc
loope
movsb
sbb
sbb
inc
pop
mov
movsl
or
cwtl
arpl
jnp
push
aad
add
xlat
add
pop
cmp
test
mov
and
sti
inc
movsl
in
test
xor
imul
jp
mov
add
movsl
cli
xchg
dec
test
out
adc
testb
lds
and
pop
ret
mov
sub
adc
jecxz
stc
sbb
mov
fcmovnbe
mov
test
inc
mov
push
addl
and
fcmovnu
loop
mov
int
xor
fistpl
xchg
loop
inc
xor
adc
sti
xchg
cmpsb
jns
int3
pushf
pop
push
loop
arpl
js
xchg
loop
test
data16
push
mov
ja
push
push
sahf
dec
or
jecxz
adc
mov
jae
sar
cmp
cmp
push
mov
ret
std
or
movb
arpl
pop
add
sbb
pop
xor
xchg
xchg
jecxz
push
mov
cmp
push
cwtl
inc
in
xlat
jecxz
fucomi
or
add
add
and
jp
ja
aaa
in
inc
fs
sti
fwait
es
in
test
dec
sahf
fs
push
shll
test
sbb
outsl
cmp
pop
xchg
pushf
cwtl
mov
arpl
icebp
cmp
movsb
sbb
insb
push
sub
inc
pop
pop
adc
in
mov
inc
sti
adc
xchg
add
dec
xchg
fs
stos
shl
cli
sbb
test
movsb
xlat
push
adc
cs
in
in
mov
stc
lods
sbb
mov
fdivrs
dec
lcall
js
in
sahf
std
mov
loope
cmp
push
add
clc
jne
add
inc
js
cmpsl
jl
aad
and
pop
inc
sbb
in
xchg
jl
arpl
xchg
cmp
pop
pop
das
ret
adc
and
and
pop
add
sbb
add
es
push
and
cwtl
xchg
clc
test
sahf
fwait
in
and
arpl
push
stos
movsl
sti
sub
lahf
imul
xchg
mov
xchg
and
cmp
enter
jae
movsb
inc
jge
cwtl
shlb
and
ja
addl
sub
lds
pusha
mov
fwait
aaa
arpl
and
movsb
sarl
and
mov
test
cli
testb
adc
sbbb
sub
xchg
cmp
outsb
movsl
jp
arpl
push
rclb
ss
and
cmpl
mov
add
mov
loop
hlt
dec
fmuls
cmpsl
andb
scas
icebp
sub
stos
pop
aaa
or
fildll
out
sahf
sbb
push
mov
loope
ret
addr16
iret
mov
sti
arpl
mov
jecxz
cs
fdivrs
xor
movsl
cmp
cmp
mov
mov
test
mov
mov
pop
cmp
imul
jecxz
test
mov
popa
adc
and
inc
mov
jp
hlt
mov
add
movsl
out
loopne
aad
mov
sti
xor
js
add
nop
mov
pop
or
fincstp
pop
mov
ja
mov
mov
or
aaa
pop
pop
bound
xlat
adc
mov
movsl
cltd
aas
dec
xchg
sbb
iret
mov
push
push
add
push
insb
es
sahf
fbld
test
jnp
stc
cli
jns
mov
inc
outsb
jae
adc
sbb
add
in
sbb
andb
sbb
and
fcmovu
add
insb
pop
mov
js
xchg
es
nop
repnz
xchg
fwait
xchg
orl
dec
aad
fistl
and
jle
stc
mov
movd
xchg
add
xor
inc
lahf
and
push
xlat
mov
mov
ja
push
add
rorb
aam
push
add
sub
cltd
ret
scas
and
cmp
neg
xchg
frndint
rcll
pusha
xchg
loope
jno
inc
lods
or
jecxz
in
incb
pop
jnp
dec
in
sub
lods
adcl
add
dec
mov
cwtl
orl
fisubs
outsb
dec
sub
ds
ret
inc
repnz
dec
jmp
fs
mov
mov
ja
cli
dec
jecxz
mul
push
xor
divl
mov
lea
cwtl
xchg
fdiv
sbb
data16
lds
sbb
stc
scas
pop
popf
lods
inc
in
int3
jae
xor
xchg
std
jae
mov
jno
push
mulb
pop
xchg
imul
addr16
popa
cmp
aam
and
in
popf
jg
aas
scas
mov
dec
sahf
hlt
cmp
pop
je
fcomps
jg
shl
sahf
push
xor
insl
movsl
pop
add
fistps
stc
imul
aas
daa
pop
lcall
jmp
negl
sub
aam
les
adc
test
ficomps
add
out
pop
mov
je
fs
dec
dec
int
xor
mov
insb
xchg
and
xchg
pop
rol
cli
adcb
mov
in
sbb
add
mov
mov
sahf
jp
call
mov
cmp
lahf
ficomps
iret
mov
in
mov
sahf
jp
stc
cmp
pop
js
mov
test
dec
loope
fimull
xchg
shlb
push
arpl
pushl
mov
in
sahf
pop
jp
movsb
stos
cwtl
xchg
lea
repz
js
inc
aas
stc
and
xchg
dec
xchg
mov
lea
cli
sbb
in
lea
mov
mov
imul
sbb
int3
xlat
push
les
xchg
sahf
ss
push
cltd
hlt
dec
sahf
jbe
cltd
sahf
sub
add
cmp
cltd
sbbb
lahf
push
ja
cltd
xchg
sahf
mov
int
cmc
inc
jnp
mov
push
ljmp
pop
lds
xlat
arpl
rol
in
popl
mov
stos
push
pop
cltd
icebp
cwtl
test
lahf
leave
rcrl
add
sub
pop
fldenv
mov
pop
neg
lcall
lcall
fs
fildl
in
clc
add
inc
or
push
mov
inc
push
mov
adcl
sti
push
add
movsb
in
jnp
mov
arpl
push
push
xor
inc
sbb
gs
dec
pop
movsl
arpl
or
jg
incb
mov
xchg
js
inc
add
mov
lock
add
fcomps
mov
popf
xlat
cmp
and
pop
in
test
sub
and
mov
cmp
dec
shlb
arpl
or
loop
and
inc
xchg
into
fistps
fisttpl
popf
sbb
arpl
cmpsb
cli
cmc
add
idivl
cmp
jnp
push
in
mov
jno
test
loop
xchg
cltd
test
gs
negl
addr16
sti
adcl
scas
fistl
iret
pop
mov
inc
movsb
notb
pop
cmpsb
aas
fs
cli
add
ret
fcom
push
movsb
add
pop
add
xchg
in
cmp
or
xchg
pop
sbb
pop
cwtl
pop
mov
sahf
orl
mov
inc
push
icebp
pop
fwait
clc
lret
enter
sti
mov
sbb
push
lds
pop
jle
push
push
pop
and
fnstcw
sbbl
add
and
subb
jecxz
aas
fwait
pop
mov
outsb
arpl
add
jb
mov
test
andps
aad
in
addr16
inc
sbb
mov
lods
mov
dec
out
aam
ja
push
dec
sbb
test
and
data16
mov
movsb
and
add
mov
mov
push
sahf
movsl
jo
mov
stc
cltd
inc
inc
inc
popf
test
nop
push
mov
adc
pop
js
push
mov
mov
push
sbb
dec
daa
lock
pop
je
push
aaa
mov
pop
js
push
cmpb
push
or
add
pop
in
int
in
push
mov
jbe
xchg
shl
test
out
insb
xchg
xchg
gs
sahf
popa
or
scas
mov
gs
insl
movsl
or
sbb
pop
sub
test
xlat
cmpsl
jns
mov
jbe
loopne
dec
pop
ja
pusha
std
inc
cmp
and
cmp
iret
push
jmp
popf
mov
imul
in
jns
js
mov
pushf
mov
push
cs
ret
out
dec
idivb
jo
clc
cli
or
leave
cmpsl
stos
inc
mov
or
lock
imul
pushf
clc
cmp
lea
sahf
mov
and
pop
cltd
in
inc
pop
testl
add
sbb
sahf
cwtl
add
in
cli
mov
inc
mov
pop
popf
ss
and
mov
xchg
jnp
mov
loop
sub
test
cltd
add
rol
movsl
pop
mull
sbb
add
cltd
aaa
push
jmp
cmc
jecxz
mov
pop
fnstenv
in
addb
fs
jns
add
sbb
pop
inc
in
mov
test
jb
adc
mov
int3
test
fdivrs
repnz
mov
sti
jecxz
mov
push
and
add
adc
fcoms
in
pop
out
icebp
xchg
roll
jecxz
daa
pop
push
mov
js
fstps
xlat
popa
sub
leave
jecxz
mov
test
cli
test
pushf
stc
lcall
fldenv
int
pop
cmp
mov
mov
movsb
add
push
push
outsl
add
push
add
and
ja
xlat
pusha
jns
and
test
push
pop
arpl
adc
sarb
scas
add
out
pop
fs
add
les
movsl
fistl
loopne
ljmp
js
sbb
and
inc
les
fwait
inc
clc
jmp
xor
inc
pop
xchg
push
mov
mov
movsb
lds
testl
mov
les
pop
popf
pop
xchg
outsl
neg
mov
pop
clc
loop
push
pop
pop
mov
int3
pop
sti
adc
fidivl
fsubr
and
in
jge
les
add
adc
enter
mov
inc
push
rcr
and
mov
pop
idivl
push
mov
or
fwait
test
test
nop
sbb
mov
leave
pop
aaa
stc
fs
or
jae
inc
jnp
in
xchg
jo
and
push
pop
and
fdivrs
pop
cmp
xchg
mov
loop
adc
xor
xchg
inc
testl
adc
cmp
sbb
adc
lds
in
gs
mov
movsb
pop
cwtl
jecxz
pop
push
add
arpl
in
clc
les
shll
or
mov
scas
mov
mov
mov
xchg
nop
in
into
lret
cmp
add
jle
sbb
mov
ja
mov
mov
arpl
adcb
sbb
rcrl
add
pop
in
xchg
rcrl
cltd
cli
popa
xor
shll
arpl
jne
xor
add
ds
push
cmp
xlat
push
push
int
clc
fstps
popf
cltd
add
mov
test
push
aaa
sbb
outsb
mov
mov
fcoms
cmp
lock
jns
inc
mov
mov
push
inc
pushf
pushf
pop
mov
test
jnp
addb
mov
mov
ret
pop
in
insb
outsb
cmp
loope
or
xorl
aas
mov
adc
mov
mov
sub
scas
in
xor
cmp
inc
gs
cmpsb
mov
js
xor
add
cmp
movsb
test
mov
sub
stc
in
outsb
add
loop
push
add
xchg
sbb
aam
lods
insb
insb
loope
fs
cltd
or
mov
adc
fnstcw
rcrl
mov
imul
mov
pop
add
fld
fcmovb
imul
cmp
xchg
inc
inc
cmp
cwtl
ficoml
stc
aad
repz
popf
pop
fsubrs
sahf
xlat
div
lret
cmp
sahf
cmp
ret
jecxz
notl
pop
add
and
cwtl
adcl
movsb
gs
imul
outsl
fildl
inc
clc
or
inc
lds
push
and
cmpsl
pop
pop
push
add
push
adc
cli
out
inc
jnp
test
sbb
in
and
insl
jns
rcll
setbe
push
aas
cmc
and
cmp
inc
les
xor
fdivs
xchg
sbb
push
mov
cmp
clc
xchg
and
add
push
mov
push
mov
jns
rcrb
fs
loopne
repz
lds
mulb
fwait
stc
mov
sub
inc
arpl
sbb
jmp
mov
sbb
and
nop
cmp
inc
cmp
inc
dec
test
addl
cltd
sahf
push
insb
sbb
mov
xchg
sbb
add
cmp
clc
movsb
push
sbb
cmp
add
sti
scas
ja
subl
and
sarl
imulb
gs
jecxz
ret
cmp
sti
sub
sub
repz
mov
and
ja
and
mov
mov
inc
and
xchg
fwait
xchg
sti
outsl
ret
pop
add
sub
mov
aad
mov
popa
xchg
mov
cmp
in
pop
or
fcmovnb
add
popa
iret
mov
cmp
adc
sti
pop
jmp
and
xorl
cwtl
in
cwtl
xor
int3
stc
xchg
inc
sbb
mov
push
pop
cmp
xchg
mov
mov
stc
and
or
stos
push
or
stos
lea
add
shll
pop
cli
clc
movsl
shll
subl
pop
mov
fstp
adc
add
push
adc
loop
mov
arpl
aad
add
rcll
subl
cmp
cmp
mov
inc
add
xor
mov
mov
add
and
push
lds
idivb
push
jmp
sarb
inc
and
mov
push
xchg
push
push
inc
push
idivb
js
jns
push
lcall
jo
and
pop
fistpl
call
jmp
jns
cli
inc
lods
sar
and
mov
mov
mov
and
jnp
xor
sbb
ret
cwtl
mov
test
loop
movsb
mov
loope
stc
pop
jnp
rcl
push
xor
add
push
mov
add
mulb
inc
push
fnstcw
mov
cmp
fwait
sbb
sbb
jns
test
push
aam
push
inc
sti
cwtl
pop
add
jbe
aas
idivl
fstps
pop
ja
adc
cwtl
mov
xchg
mov
enter
out
orl
in
inc
inc
xchg
jl
pop
adc
mov
cmp
sbb
pop
lahf
inc
and
fnstcw
mov
pop
or
sbb
fwait
sar
sbb
mov
cwtl
arpl
fxch
mov
outsb
and
mov
jecxz
and
push
test
inc
mov
in
sti
popf
sbb
pop
mov
jns
xor
arpl
pop
cmp
in
cmp
lcall
xchg
bound
pushf
gs
bound
jb
icebp
fildl
enter
mov
fwait
and
aaa
add
adc
cwtl
leave
mov
test
mov
lods
inc
mov
or
out
mov
push
cs
cltd
mov
or
fisubs
scas
fldenv
lcall
push
inc
arpl
jle
and
and
ja
cwtl
cmp
fwait
cli
mov
xlat
push
cmp
inc
fnstcw
or
movsl
add
mov
dec
int
aam
arpl
fistl
jnp
stos
add
cmp
cmp
mov
sahf
movsl
add
test
add
pop
outsb
cwtl
lcall
icebp
outsl
jns
adc
adc
jge
pop
fisubrs
mov
xlat
mov
enter
mov
cld
xlat
inc
mov
push
cltd
fxch
leave
mov
int
ljmp
pop
cwtl
cmpsb
mov
popa
cmp
out
sbb
les
xor
jg
pop
ret
and
pop
cmp
loopne
in
stos
xchg
inc
aaa
dec
in
push
mov
mov
cmp
lods
jo
lret
enter
pop
sbb
fcom
loopne
repz
jl
pop
inc
cmp
adcl
cli
cwtl
ret
sbbb
aam
dec
sbb
out
movsb
fnstenv
pop
stc
sahf
ret
jns
in
and
cltd
fdivrs
fldenv
mov
pop
cmp
mov
stos
out
sub
xchg
ret
or
pop
mov
movsb
cwtl
scas
iret
pop
sbb
pshufw
sbb
pop
adc
sti
les
insb
add
or
cli
jo
mov
dec
jo
pop
cmp
sbb
mov
mov
dec
xor
test
fisubrs
jnp
adc
xor
pop
jecxz
add
inc
ss
push
mov
mov
mov
int3
imul
popf
ss
les
das
subb
xor
pop
and
cmp
mov
flds
into
and
jnp
push
add
lret
cmp
cli
pop
in
jo
jnp
fstps
or
mov
movswl
mov
push
xor
inc
test
pop
test
and
push
mov
cmp
add
aad
div
mov
hlt
sti
push
sti
xor
ja
push
cmp
pop
inc
popf
mov
add
sbb
clc
aaa
pusha
mov
sarb
icebp
sarb
and
and
test
add
mov
out
push
lds
and
jg
sub
adcl
pop
jns
movsb
lcall
push
jae
add
bound
das
sbb
arpl
in
lcall
jecxz
dec
lock
lcall
imul
sti
or
sbb
stc
insl
inc
test
loop
xlat
movsl
cmp
cmp
cld
jnp
pop
js
pop
out
cmp
ja
xchg
cmp
inc
lret
sti
and
add
adc
in
xchg
push
test
cmpl
adc
les
mov
pop
mov
and
xchg
gs
pop
cs
test
aas
int3
out
lea
jae
iret
mov
jp
push
pop
sbb
shlb
sub
sub
mov
xchg
or
push
jns
clc
stc
loope
fwait
in
and
cmp
ret
add
ret
cwtl
or
sbb
bound
sbb
test
inc
ja
fldcw
or
iret
cltd
or
pop
inc
mov
fwait
shrb
and
imul
mov
inc
test
jns
cwtl
cmpl
je
sub
push
js
add
pop
push
loop
pop
arpl
jns
sti
cwtl
sahf
inc
jo
test
pop
leave
out
lds
outsb
adc
mov
sti
popf
push
movsl
repnz
ja
movsb
fwait
or
div
call
or
cmp
xchg
jns
adc
adc
negb
stos
and
inc
sahf
rolb
cmp
mov
les
xchg
lds
stc
cmc
sbb
xchg
add
mov
jnp
std
and
call
xchg
pop
fs
cwtl
ja
testb
and
cwtl
in
cltd
mov
clc
es
cli
shlb
sbb
fs
xchg
arpl
push
and
xchg
arpl
jmp
fstps
lcall
cwtl
add
sbb
push
jmp
fldenv
xor
add
test
inc
aam
pop
adcl
mov
fldenv
sti
jo
cld
jns
sbb
mov
xchg
cmp
lock
gs
mov
pop
sbb
bound
xor
jnp
xchg
cmp
jle
and
cmp
stc
scas
dec
push
jnp
mov
cwtl
push
pop
lahf
js
outsb
and
sub
mulb
pusha
push
scas
mov
out
sbb
stc
movsb
and
inc
ja
cmp
sub
fwait
add
and
test
jne
test
in
fimull
js
pusha
cmp
ss
das
push
imul
sahf
cmp
es
loop
inc
iret
cmp
enter
xorl
pop
add
cmp
mov
and
push
stos
add
into
cltd
adcl
js
loop
push
mov
mov
mov
neg
cmp
mov
jbe
les
and
loop
arpl
pushf
pop
mov
addr16
and
loop
in
push
inc
std
xor
add
mov
ret
jns
cmp
inc
adc
xchg
pop
inc
sbb
gs
or
iret
shlb
push
add
aaa
pop
pop
fxam
jnp
pop
clc
testl
xor
addl
leave
cmc
lods
dec
add
push
in
out
pop
pop
fldz
pop
mov
out
mov
in
pop
adc
pop
outsb
and
inc
mov
in
push
lods
jecxz
in
fwait
sub
in
jbe
and
mov
inc
mov
add
loope
movsb
stc
cmp
in
mov
mov
dec
xor
dec
sbb
test
cmpsl
sbb
jae
repz
in
insl
xor
aaa
out
sbb
add
mov
loopne
inc
mul
xor
push
test
cmp
scas
je
add
in
add
mov
out
cltd
pop
push
insb
jnp
sbb
xchg
test
dec
lcall
outsb
sti
cli
rolb
shl
cs
scas
lds
cwtl
fildl
push
das
sti
arpl
stc
lods
nop
mov
mov
sti
arpl
pop
adc
push
adc
adc
and
add
sarb
inc
mov
stc
lock
push
cli
sbb
icebp
cmp
push
stc
xchg
mov
arpl
cmp
in
js
movsb
stc
imulb
xor
insl
test
push
pop
xlat
jecxz
pop
inc
sbb
lock
add
xor
clc
or
pop
ljmp
pop
cli
jns
imull
cmp
pop
aaa
rcl
sbb
sbb
mov
mov
push
int3
jmp
sbbl
pop
mov
icebp
add
movsb
in
ja
sti
and
jle
mov
inc
fnstcw
sbb
pop
xchg
movsl
add
pop
stc
xor
sahf
rcll
xlat
ja
xlat
xchg
or
fwait
movsb
scas
mov
push
sbb
add
cmc
sarb
and
movsl
push
push
repz
neg
xchg
sbb
scas
xchg
testl
xchg
cmp
hlt
pusha
cmpsb
pop
sbb
les
out
pop
repnz
inc
add
sbb
movsl
in
loopne
inc
or
cli
clc
push
out
push
pop
int3
sbb
mov
or
fcoms
stc
lcall
sbbl
push
pop
adc
pop
nop
lock
in
ret
and
aad
adc
out
inc
sub
sbb
pop
and
sbb
imul
pop
loop
add
xchg
add
fldenv
fnstenv
fistpl
lds
sbb
push
lds
into
call
push
test
les
arpl
clc
add
pop
fs
or
stc
sub
xchg
popf
scas
push
mov
loope
mov
push
xchg
test
jnp
and
dec
sbb
adc
cltd
push
iret
fistl
pop
push
jb
xchg
ror
shrl
test
mov
sub
movsb
sbb
pop
inc
jns
into
movsb
idivb
sahf
cmp
cmp
movsl
out
push
test
cmp
mov
adc
jnp
sbb
and
stos
sbb
inc
push
maxps
in
icebp
cltd
cmp
stc
xor
addl
sub
lds
and
ret
movsl
jecxz
inc
inc
movsl
push
fdivr
push
add
cmp
ds
pop
roll
push
ficoml
aad
and
arpl
divb
jecxz
xchg
xchg
cmp
adc
gs
test
fistpl
inc
clc
sahf
fnstcw
dec
sub
cli
xor
xchg
add
xchg
mov
adc
or
jecxz
or
cmpsl
jb
ficoml
sub
ficompl
sub
mov
inc
mov
sbb
idivb
shll
cwtl
dec
cmpl
adc
cwtl
sub
sbb
sbb
in
and
int
cmp
push
aam
andl
pop
pop
pop
les
xor
movsl
movsl
add
jg
cmc
out
dec
es
movsl
push
inc
dec
loopne
ja
xor
ja
mov
mov
addl
pop
out
and
aas
push
mov
mov
in
and
and
pop
jae
js
sbb
pop
jecxz
pop
leave
and
in
jb
ret
inc
xlat
add
sbb
xlat
icebp
jns
mul
test
pop
cltd
stc
push
in
and
jecxz
cmp
jns
enter
cmp
cmp
and
ss
or
clc
and
inc
xchg
fcmovnb
adcl
rcrl
stos
shll
and
sti
fadds
sbb
movsl
popa
sub
add
aad
mov
xchg
adc
xchg
pop
cwtl
mov
outsb
adc
jnp
jecxz
inc
push
mov
add
arpl
or
lods
adc
pop
fsubs
push
ja
xchg
push
inc
or
mov
fs
in
mov
jecxz
sub
add
shl
mov
and
add
fdivrs
xchg
sbb
cltd
ds
push
pop
inc
or
sbb
sti
mov
sbb
jl
cwtl
adc
testl
testb
push
add
filds
pop
movsb
and
pop
xchg
cwtl
movsl
mov
cmp
aam
shl
mov
pop
fs
das
xchg
mov
mov
jae
mov
outsl
cwtl
fdivrs
xchg
and
lds
dec
pop
cwtl
jmp
push
out
stos
mov
mov
stos
sti
daa
add
sbbb
mov
arpl
push
cmp
xor
test
idivb
mov
push
dec
movsl
movsb
jl
sar
pop
sbb
push
icebp
jmp
add
movsb
ds
xor
or
cwtl
rcrl
fdivrs
mov
nop
sbb
lea
xor
js
cmp
and
lds
aaa
xchg
stc
pop
add
jno
mov
shr
iret
arpl
outsb
or
xlat
fsubr
jp
add
jae
ja
aaa
add
push
stc
jle
lcall
pop
push
inc
int
cwtl
int
sbb
mov
mov
mov
testl
pop
xchg
cmp
out
movsb
scas
arpl
push
mov
and
jp
js
js
test
mov
in
push
in
dec
pop
sbb
jns
sbb
fs
sbb
cwtl
push
int
aaa
in
aas
clc
add
mov
int
ret
jecxz
push
mov
pop
mull
jl
pop
pop
in
popf
out
jnp
popf
nop
fsts
push
push
in
sti
mov
push
leave
addb
xchg
push
les
push
sti
cmp
fwait
sbb
sbb
iret
adc
jb
cwtl
leave
cltd
xor
xlat
cmp
fwait
sbb
int
js
popf
and
add
stos
iret
xor
arpl
lret
push
mov
movsb
push
jle
stos
cmp
push
cltd
push
fwait
inc
in
int
ja
sub
test
mov
insb
sub
jo
cmp
dec
pop
es
add
gs
sahf
hlt
and
inc
fstps
push
cwtl
sbb
in
lock
lret
cli
sarl
insb
push
mov
pop
inc
out
pop
push
movsb
fsubr
inc
std
arpl
add
movb
pop
jns
pop
fisttpll
and
mov
xlat
clc
adc
ja
in
out
out
int
add
ja
sub
ja
repnz
push
movsb
mov
in
lahf
call
mov
fcmovu
sahf
mov
in
cwtl
call
js
push
lock
lods
dec
mov
repnz
inc
or
clc
pushf
fadds
mov
pop
pop
daa
mov
jno
add
mov
mov
neg
sbb
aad
rcr
pop
fdivrs
add
cmpl
stos
jl
enter
add
inc
lcall
sbb
xlat
dec
push
iret
push
outsl
lcall
sahf
mulb
push
pusha
push
push
fstps
cmp
mov
aaa
cli
lret
pop
push
mov
cmp
leave
and
mov
ret
bound
xlat
fs
cmp
mov
and
jmp
push
jnp
mov
sahf
fistpl
sub
pop
mulb
arpl
and
dec
rorl
mov
or
js
pop
mov
dec
add
adc
push
sub
rcrl
mov
push
or
add
and
push
xchg
es
lea
jb
adc
adc
ret
movsb
test
inc
pop
or
xor
loop
push
jecxz
lahf
in
inc
out
jmp
cmp
mov
jecxz
dec
fstpt
stc
leave
inc
daa
xor
pop
or
int
mov
xor
test
xlat
in
sar
movsb
movsl
gs
mov
jne,pt
xlat
outsl
imul
add
pop
pushf
inc
add
inc
add
cli
fbstp
fidivrs
movsb
adc
mov
test
dec
and
fsubrl
gs
int3
and
clc
sti
mov
sbb
ja
mov
push
sbb
cmpl
test
sub
adc
cltd
and
adc
mov
inc
pop
mov
mov
jp
movsb
add
fistl
xchg
push
sub
sbb
repnz
pop
out
push
sbb
fstp
add
subb
push
jae
jmp
repz
adc
js
jne
or
mov
sahf
mov
pop
fsts
cmp
mov
adc
mov
and
inc
int3
mov
outsb
cld
insb
inc
push
push
push
add
and
fwait
sahf
aaa
ja
outsl
icebp
cmpsl
ret
sbb
test
sti
dec
ret
mov
aam
inc
sarb
xchg
sti
fwait
jnp
loopne
je
adc
ja
loop
test
arpl
stc
jmp
adc
add
cli
movsl
mov
in
jmp
inc
sbb
inc
adcl
mul
cmp
lods
out
stc
cwtl
fwait
scas
cmp
add
xchg
push
xchg
inc
aas
and
pop
rcll
xchg
cmp
sbb
out
pop
lock
adc
cmp
pop
out
jnp
ss
cmp
daa
stc
mov
fsts
mov
xlat
pop
testl
lods
aad
jecxz
test
sahf
enter
mov
pop
adc
sbb
sti
and
xchg
sub
test
add
cmpsl
fwait
sar
leave
lahf
jmp
ret
cmp
inc
mov
lcall
adc
mov
or
cmp
cmp
ret
aaa
movsb
cli
or
sahf
pop
insl
outsb
mov
xor
jo
push
mov
mov
aas
mov
lods
cmp
cltd
mov
mov
imul
out
sub
mov
add
pop
adc
lret
adc
adc
mov
pop
lds
cmp
sbb
sbb
movsl
cmpl
push
scas
icebp
popa
aas
insl
pop
sub
mov
jecxz
loop
adc
jnp
mov
sub
icebp
jns
movsb
cmp
les
into
inc
cmp
lds
add
fdivrs
fs
mov
jmp
js
fs
and
dec
inc
jmp
sar
jmp
push
jo
and
cmp
ja
mov
add
call
das
fwait
sahf
pop
xchg
ret
les
xor
lds
cli
cmp
sbb
sahf
dec
mov
mov
add
add
sahf
cmp
inc
pop
add
xchg
js
xchg
scas
sahf
mov
pop
push
ss
mov
mov
xchg
stc
cmp
icebp
push
mov
arpl
push
mov
cmp
or
push
cltd
lds
push
scas
scas
bound
hlt
in
push
rorl
adcl
arpl
xor
cli
out
fs
cmc
xchg
mov
jmp
inc
push
fidivrs
repnz
mov
xchg
cs
pop
push
iret
into
jo
mov
sub
fnstsw
in
fwait
push
subl
mov
sbbl
out
mov
sti
stc
aad
fisubrl
scas
je
dec
mov
push
dec
push
lret
fsubr
clc
stos
add
cmp
inc
or
push
lahf
pop
test
mov
gs
stc
ret
pop
sbb
push
test
cmp
outsb
test
jae
fdivp
pop
out
pop
pop
outsl
scas
arpl
jne
dec
loop
in
pop
fcmovu
xchg
jp
push
pusha
cmc
loop
cmp
data16
dec
addr16
sbb
aam
sub
std
fwait
cltd
arpl
in
pop
sahf
pop
ljmp
sbb
mov
jp
sbb
jmp
test
arpl
push
sahf
inc
xchg
add
mov
jecxz
inc
loop
cmp
xchg
mov
gs
push
arpl
les
ret
cwtl
lahf
add
lds
fnstcw
outsl
lret
xchg
fidivrl
pop
in
add
sahf
and
rcrl
pop
cwtl
andl
add
mov
jmp
fdivp
cwtl
dec
orl
loopne
dec
sahf
insl
fs
or
hlt
outsb
fwait
add
jg
mov
dec
lcall
sbb
outsl
cli
fwait
inc
pop
in
add
or
pop
arpl
in
push
or
cltd
movsl
add
mov
inc
hlt
clc
xchg
bnd
andl
cmp
js
dec
rorb
or
pop
rorl
inc
idiv
inc
mov
arpl
adc
jb
fwait
ss
repz
mov
js
pop
jb
push
popa
cltd
sbb
cmp
std
xchg
sbb
data16
push
jg
insl
hlt
xor
and
iret
aad
mov
push
lock
mov
xchg
ja
leave
mov
fwait
sub
sbb
lods
mov
cmc
jne
hlt
ret
ret
arpl
sbb
setge
movsl
mov
and
loop
fstps
sbb
inc
aaa
add
sbb
clc
nop
cmp
dec
sbb
dec
out
push
inc
in
aaa
imul
mov
pop
jp
ja
add
arpl
mov
gs
and
sti
jge
sbb
out
inc
test
mov
ret
xor
sbb
aaa
mov
cmp
movsl
and
arpl
gs
jecxz
pop
pop
fstps
js
adc
xchg
xlat
aad
pop
mov
pop
and
adc
cmp
loop
pop
cmc
mov
outsb
fmuls
jle
arpl
push
jnp
in
add
sti
pop
push
scas
pop
xlat
adc
mov
cltd
mov
sahf
test
mov
and
loope
sbb
mov
outsl
pop
and
xlat
or
aaa
xchg
fwait
lds
jo
add
and
push
jecxz
and
sti
mov
xchg
cwtl
js
push
jno
mov
add
add
inc
test
divl
fnstcw
xor
cmp
cmp
add
cmc
xor
add
inc
sti
jge
mov
daa
sbb
dec
nop
movsb
sbb
cmp
push
add
cmp
xorb
in
fsubrl
mov
das
lret
lret
cmp
cmp
outsb
imul
fadds
sbbl
mov
push
gs
jg
les
cmp
jb
icebp
add
andb
pushf
pop
lahf
inc
jno
ret
fwait
out
pushf
jnp
sbb
push
testl
ja
pop
stc
cli
xchg
xchg
push
and
in
xlat
adc
adc
cmp
sar
mov
loope
mov
push
push
cmp
cmp
and
dec
movsl
jnp
push
ja
cmp
jg
jne
mov
xor
sub
push
sbb
jnp
mov
test
jmp
clc
gs
inc
and
add
fbld
adc
cmp
arpl
pop
sarl
sub
pop
fistpl
xor
les
and
xchg
or
shl
mov
mov
dec
inc
clc
xchg
xchg
in
sub
arpl
shlb
pushf
sarl
inc
fistpl
sbb
push
in
sbb
sti
shl
fs
push
div
push
mov
add
add
push
sbb
mov
in
subl
mov
inc
outsb
lds
mov
add
in
adc
mov
fsubs
xchg
test
rcrl
nop
mul
and
or
shl
gs
les
push
cs
testb
xor
adcb
cli
mov
pushf
pusha
icebp
cmpl
pop
sbb
sbb
shlb
xor
push
mulb
jns
fs
into
pop
push
push
into
arpl
jb
lcall
or
push
xor
cmp
out
sti
stc
xchg
cmp
pop
cwtl
lds
push
and
adc
add
jecxz
fcmovnb
cmp
or
lea
sub
aam
pop
jecxz
pop
xorb
clc
jecxz
add
pop
sbb
push
test
sahf
add
pop
loope
arpl
iret
mov
popf
movsb
pop
lcall
mov
iret
in
jecxz
mov
push
mov
pop
fadds
push
cmp
xchg
inc
xlat
cli
fldcw
fwait
enter
sub
jmp
sahf
sbb
mov
sbb
notl
xor
mov
push
jb
scas
inc
mov
mov
and
pop
dec
xor
fstps
add
in
pop
cmp
push
leave
sbb
jmp
jns
lods
inc
mov
add
movsb
mov
jg
les
inc
jnp
aam
xchg
in
xchg
test
xchg
movsb
rolb
out
cmp
inc
mov
mov
movsb
and
fildl
mov
xchg
and
fninit
inc
cmp
in
adcl
cmc
clc
push
and
xchg
sbb
xchg
and
and
and
aas
adc
test
out
add
adc
sbb
push
jecxz
in
mov
cmp
mov
scas
fsubs
inc
sti
push
in
mov
jg
add
push
hlt
daa
and
neg
mov
jo
sbb
pushf
cmp
fwait
add
jecxz
cmp
fnstenv
rcll
test
jecxz
and
inc
std
aam
out
push
or
pop
mov
fcomps
fs
xlat
xchg
mov
dec
cmp
xlat
cwtl
xor
sbb
pop
mov
sahf
js
dec
sti
sarl
negb
cmp
in
out
adc
mov
inc
icebp
xchg
sbb
mov
les
xlat
stc
cmp
inc
xchg
ljmp
mov
movsb
sbb
pop
cmp
xor
in
add
jae
xlat
andl
and
and
lds
sbb
inc
dec
rol
inc
mov
mov
lods
repz
adc
movsl
sti
add
repnz
arpl
cmp
test
idivb
mov
out
adc
xor
inc
jecxz
and
stc
push
and
push
or
jecxz
rcll
aad
in
test
cmpl
adc
push
sar
ret
mov
push
jns
and
inc
jge
fnstcw
sbb
sub
movsl
xlat
test
not
pop
or
add
add
push
sbbl
mov
mov
dec
scas
negl
js
movsl
fadd
adcl
xlat
jecxz
sbb
arpl
pop
jb
and
push
pop
in
lods
fs
fbld
sbb
lock
inc
scas
inc
repz
les
and
pop
mov
add
stc
movsl
pop
sbb
cmp
sbb
in
arpl
fdivr
gs
loop
sbb
and
xadd
push
orb
pop
sbb
test
movsl
push
bound
cmp
dec
sbb
mov
divl
lret
sub
add
lret
in
mov
xchg
imulb
test
mov
repz
pop
push
loop
iret
dec
or
jbe
pop
arpl
clc
mov
imul
pop
push
cmp
gs
mov
cmp
mov
cs
sahf
cmp
pop
fwait
shl
pop
stos
rol
inc
das
ljmp
push
aam
push
adc
icebp
arpl
mov
imul
lret
pop
mov
inc
sbb
imul
inc
and
mov
sbb
mov
cmp
dec
or
ja
sbb
rorl
rep
and
add
aaa
iret
lods
jo
arpl
jg
in
stc
mul
mov
sbb
dec
sbb
out
sti
adc
add
pop
clc
jnp
adc
les
mov
jne
jecxz
outsl
sbb
cmp
in
jns
std
inc
sti
out
and
xchg
les
mov
pop
jo
xchg
push
lods
xchg
push
jns
xchg
movsw
pop
or
ja
push
cmpsl
and
sbb
fninit
pop
mov
xor
addr16
cmp
xchg
sbb
test
outsl
sbb
scas
jg
popf
pop
pop
iret
sbb
fdivrs
jge
add
arpl
fwait
and
movsl
test
xchg
les
push
mov
loop
add
fbstp
inc
stos
jcxz
push
mov
jp
mul
push
call
push
xlat
pop
lret
out
adc
ja
sbb
cwtl
xchg
rcrb
in
add
and
adc
and
js
cli
add
ret
cltd
push
add
inc
pop
pop
pop
pop
jns
push
cmc
fwait
roll
push
cmp
and
lods
outsl
arpl
scas
test
sar
cwtl
jno
in
and
fsubl
imul
jg
inc
ds
and
pop
shrb
fstps
push
jns
adc
add
push
add
push
jo
loop
push
mov
and
js
jle
sbb
sbb
data16
cmp
clc
inc
cltd
adc
les
inc
gs
jo
add
mov
adc
push
mov
xchg
sub
inc
pushf
out
pop
pushf
cmp
xor
xchg
sub
sahf
outsl
add
cmpsl
and
fistps
test
pop
stos
inc
imul
fcmovne
aaa
cwtl
andl
shl
add
mov
clc
sub
test
mov
in
sub
jns
fwait
ja
test
gs
hlt
add
ret
test
jp
push
mov
xchg
cmp
mov
xchg
scas
sbb
inc
icebp
mov
and
aad
push
mov
cwtl
mov
sbb
cltd
addl
sti
xor
mov
inc
mov
and
clc
dec
sbb
cmp
cmp
es
sbb
fwait
test
inc
lds
cmp
jle
clc
in
adc
push
xlat
mov
adcl
rol
inc
xor
push
fsub
inc
jg
in
ret
mov
fldcw
rorl
enter
mov
mov
or
pop
iret
push
scas
jmp
js
hlt
cmp
lret
loop
sbb
mov
push
jno
jecxz
call
mov
jge
add
or
or
sbb
sbb
sub
clc
and
cli
mov
sti
mov
arpl
movsb
fdivs
adcl
jmp
sti
movsl
in
inc
mulb
xorl
sub
add
out
sbb
mov
test
js
shl
jmp
fwait
mov
adc
fistps
mov
push
xchg
lcall
insb
adc
add
jmp
pop
fsubs
pop
cmp
aas
sti
sahf
sbb
jns
xor
idivl
cltd
push
inc
addl
ret
mov
jo
cmp
mov
arpl
jo
mov
add
add
pop
mov
sbb
push
adc
sbb
push
pop
fistpl
pop
and
cwtl
shll
jg
jns
mov
test
xchg
push
sbb
sbb
jbe
in
ja
push
addr16
fprem
aaa
inc
sbb
sbb
outsb
inc
cmp
cwtl
fldenvs
fsub
and
push
fldenv
pop
fnsave
or
lock
aas
in
inc
sub
les
jne
inc
movsb
inc
test
and
aaa
out
jo
xchg
push
gs
aas
push
cmp
add
push
xchg
test
call
clc
fdivrs
dec
or
cmp
mov
int3
fsubrl
cmp
cmpl
movsl
or
out
fldt
adcl
and
cwtl
sbb
fisubl
je
add
pusha
jmp
cltd
jnp
cmc
in
pop
jnp
pop
sarb
out
cmp
mov
mov
lds
cmp
int3
adc
inc
lret
adc
xor
adc
mov
lock
stc
cltd
pop
jmp
sbb
xor
jns
push
jnp
sbb
sub
add
and
mov
out
mov
fwait
xchg
jecxz
adc
mov
loop
or
pop
dec
mov
push
movsb
call
sbb
sti
pop
add
aad
add
lahf
dec
mov
add
loope
lds
cmp
test
add
mov
push
and
cld
pop
cmp
ficomps
roll
shrb
adc
mov
clc
push
lds
test
lods
mov
push
or
add
and
push
add
in
insl
xchg
loop
fs
or
pop
and
add
insl
cmp
out
ss
mov
mov
lds
fstps
outsb
xchg
xchg
cmp
jge
pop
test
idiv
movsl
jmp
pop
mov
aaa
outsl
lds
push
hlt
mov
jmp
bound
fstps
pop
add
or
jns
setg
pop
sbb
bound
jo
cmpl
aaa
push
sbb
lds
and
sarb
in
out
test
cli
xor
jl
mov
mov
scas
pushf
sahf
and
and
arpl
jns
fwait
aaa
mov
shl
mov
cmp
leave
iret
mov
jae
sti
adc
or
fisttpl
push
cmp
or
and
jns
lock
mov
cmp
mov
fdivrs
push
mov
cmp
adc
push
in
out
jns
shlb
fmul
inc
push
jns
lea
out
jle
add
sarl
sbb
fstl
pop
cli
pop
add
mov
cld
cld
pop
pop
sbbb
popf
out
cmp
or
loop
fwait
les
roll
movsb
mov
bound
dec
mov
fnstenv
gs
mov
jg
mov
add
gs
jns
stc
and
jg
pop
add
dec
pop
adc
and
pop
mov
dec
jl
sahf
cwtl
add
push
sub
iret
cmp
xchg
xchg
gs
cmp
orl
add
inc
and
and
and
jecxz
repnz
inc
or
dec
or
nop
cmp
shl
xchg
pushf
cmpsb
adc
fstpt
arpl
mov
fdivs
pop
das
mov
js
in
or
push
sub
imul
xlat
push
sbb
cwtl
mov
cmp
add
add
add
jmp
xchg
xor
lods
jne
cli
cwtl
and
arpl
cmc
mov
lret
pop
sarb
mov
sub
loop
mov
mov
mov
dec
or
pop
adc
mov
and
mov
cmp
pop
inc
outsl
adc
add
js
scas
mov
inc
loop
lea
add
add
test
mov
xchg
fwait
js
mov
cltd
mov
pop
and
fwait
mov
push
cmp
sbb
ja
movsl
rcrb
push
xlat
adc
add
sbb
pop
ja
fsts
xor
pop
xchg
and
xchg
lds
int
sbb
vpcmpgtw
add
and
stc
adc
fistpl
leave
jae
ds
std
test
inc
cmpsb
xor
in
add
xchg
or
out
sbb
add
adc
pop
add
ror
xchg
cmpsl
cltd
test
clc
push
or
cmp
movsl
xchg
ret
adc
sbb
add
pop
les
scas
clc
fistpl
shl
cwtl
mov
sbb
fildl
test
sahf
pop
sub
ljmp
hlt
lods
sahf
fsts
cli
pop
lods
sbb
pop
push
sbb
dec
add
loop
outsb
push
negl
sarl
add
in
test
imul
fimuls
inc
or
add
xchg
add
xchg
cwtl
or
test
fcoms
in
and
ret
pushf
in
mov
fwait
aaa
mov
negb
leave
push
and
or
cmp
fwait
or
push
stos
mov
or
cltd
icebp
mov
cli
loop
mov
sbb
fstps
scas
aaa
pop
arpl
ja
popf
mov
pop
movsb
jecxz
cmp
mov
imul
pop
sub
ret
add
in
fadds
fs
push
sbb
in
lds
addr16
pop
ret
xor
bound
sar
js
fdivrs
adc
or
and
mov
mov
cli
stc
inc
sub
mov
sti
repnz
xlat
cmpl
mov
loop
cltd
jno
cli
popf
and
xorl
and
cwtl
pop
pop
mov
mov
cmp
add
addl
jecxz
add
xchg
jl
fs
sbb
add
xor
push
les
pop
sbb
scas
loope
mov
push
cwtl
sti
imul
movsb
sbb
ret
adc
sbb
fdiv
inc
dec
out
divb
sarb
pop
cwtl
adc
test
fs
and
sti
in
push
jecxz
dec
push
pop
leave
mov
aad
or
fs
movsb
or
inc
ret
adc
and
negl
cmp
rclb
jecxz
inc
cltd
out
pop
shlb
mov
pop
cmp
pop
jecxz
inc
cmpsb
pop
mov
arpl
jno
push
xlat
or
mov
aaa
jbe
in
shrl
add
cmp
pop
sbb
xchg
aad
jecxz
sbb
xchg
in
popf
sti
cmpb
shl
pusha
mov
ss
push
nop
fs
inc
xchg
imul
mov
or
clc
pop
std
push
mull
pop
mov
pop
sub
lds
jecxz
or
xor
sbb
and
test
mov
test
pop
cltd
inc
mov
mov
mov
sbb
xchg
mov
cltd
loop
add
add
xchg
movsl
les
xor
sti
lds
lret
aaa
aam
call
inc
fsubrl
shl
shll
and
push
test
fwait
add
outsl
and
xchg
jo
ret
jne
shl
mov
loopne
jne
testb
and
jnp
lods
iret
lahf
mov
rolb
mov
sahf
out
add
cmc
inc
stc
rorl
mov
rclb
sbb
cmp
push
pushf
gs
aam
push
mov
or
hlt
push
add
jnp
adc
mov
xchg
fwait
loop
mov
mov
into
in
mov
mov
and
jb
sbb
mov
ret
sbb
push
ds
push
or
clc
add
sbb
sti
sbb
outsb
aaa
ja
add
jb
leave
cli
pop
mov
lret
xchg
loopne
push
dec
pop
sbb
test
mov
addl
gs
push
jnp
ds
fpatan
mov
sbb
cmp
sbb
xchg
test
daa
and
jo
lds
cli
sahf
mov
stc
xchg
fildl
add
in
adc
rcr
negl
test
icebp
les
cmp
xchg
inc
in
push
cltd
inc
add
inc
pop
fcoms
mov
sbb
les
jo
sahf
inc
out
lret
inc
enter
mov
shrb
and
les
mov
and
stc
inc
ret
xor
xor
push
cltd
in
pop
bound
or
pop
ss
arpl
fcomps
movsl
add
sti
pushf
je
fwait
test
mov
xlat
movsl
and
mov
xor
push
push
shll
sbb
add
pop
mov
nop
add
rcl
fsts
cbtw
push
js
push
mov
sbb
bound
aas
push
jl
mov
rclb
add
in
xlat
push
mov
sub
and
scas
jns
flds
call
mov
mull
or
ja
sbb
out
mulb
outsl
push
sbb
xchg
pop
mov
mov
xchg
insl
add
fst
arpl
in
call
mov
mov
or
pop
cltd
insb
nop
pop
and
xor
cwtl
add
stc
xlat
in
movb
inc
mov
incb
and
jne
test
cs
clc
push
inc
xlat
add
xchg
test
leave
loop
movsb
in
add
js
sbb
add
jo
jnp
fldenv
and
cmp
sbb
sbb
or
sbb
mov
add
add
data16
mov
pop
icebp
test
sbb
mov
ja
sub
mov
fcomps
stc
pop
and
pop
sarb
jmp
or
inc
fistpl
inc
or
fs
and
loop
push
ficompl
bound
rcl
fistpl
mulb
or
mov
mov
test
in
clc
and
ss
add
sahf
and
sbb
jecxz
insb
and
repz
aaa
int
pop
push
pop
cmp
cmpsb
sbb
cwtl
sbb
xchg
add
mov
adc
pop
jnp
icebp
inc
sbb
aaa
aad
push
nop
mov
stc
mov
test
jnp
cmp
mov
lds
fbld
mov
add
xchg
or
idivl
not
inc
inc
or
movsb
cmpsl
xor
cmpl
add
notb
mov
cmp
and
sar
popa
arpl
sub
add
mov
add
loop
mov
add
sarb
insl
jecxz
xor
sbb
add
or
mov
mov
cmp
mov
fildll
outsb
iret
aaa
iret
shrb
test
mov
clc
les
outsl
and
dec
mov
mov
idivb
fs
fnstenv
inc
sbb
gs
fbstp
test
and
push
aaa
push
das
xchg
les
sarb
fdivrs
jecxz
fisubl
xor
divl
test
andl
ljmp
xchg
mov
outsl
pop
sub
imul
and
fsub
popf
inc
aad
jmp
test
xchg
sbb
sbb
mov
add
mov
test
pop
in
and
sbb
sbb
sarl
fnstenv
mov
sti
sbb
iret
fwait
add
icebp
pop
mov
daa
outsl
sti
add
push
push
sti
push
and
std
cs
sbb
add
xchg
inc
pop
andb
sbb
dec
jnp
or
cwtl
add
mov
xchg
sarb
pushf
mov
jl
int
arpl
outsb
in
cmp
rclb
loope
push
or
pop
or
sbbb
cs
mov
in
sbb
or
mov
movsl
inc
movsb
fwait
adc
ret
out
inc
pop
in
xor
or
jnp
js
arpl
fstpt
add
stc
push
jnp
add
xchg
repnz
ret
cmp
fwait
jns
dec
xchg
xor
into
xchg
sbb
lock
pop
in
sbb
in
iret
mov
mov
or
dec
and
addr16
dec
cmp
andl
jecxz
xlat
xchg
and
and
test
movsl
cmp
mov
pop
adcl
cmp
sbb
add
cli
sbb
sub
dec
cmp
jmp
popf
jns
jno
and
and
dec
loope
lds
mov
cs
clc
jecxz
fcmovnb
xor
sbb
sbb
mov
sbb
shll
js
pop
inc
mov
xchg
pop
fwait
leave
loope
and
sbb
and
pop
mov
ret
lcall
fcmovnbe
adc
push
sbb
xchg
ja
xchg
ja
aam
je
mov
jnp
movsl
push
popf
ss
loop
sbb
orb
cmp
inc
xchg
push
xchg
add
mov
pushf
dec
lret
icebp
sub
test
rolb
sahf
cmpsl
scas
movsb
sub
into
push
push
sub
adcl
or
xchg
les
mov
clc
ret
int
add
inc
push
into
jae
iret
lods
mov
sub
add
jg
test
jge
push
push
in
in
aam
fstpl
int3
xlat
rcr
lcall
xchg
pop
loopne
js
fbstp
bound
and
repz
sti
fs
mov
arpl
or
add
and
test
mov
mov
pop
add
mov
cmp
jecxz
inc
insb
mov
mov
shlb
hlt
pop
cli
sbb
gs
push
cltd
outsb
jns
mov
scas
cmp
mov
add
adc
pop
negl
add
iret
add
pop
lock
cwtl
xorb
pop
push
mov
call
xchg
mov
sahf
cli
rolb
pushf
scas
incb
mov
pop
sbb
mov
les
mov
les
xchg
fwait
pop
scas
fadds
lret
popf
clc
test
insl
xchg
add
fwait
cmp
neg
sub
fldt
pop
mov
adc
xchg
add
xchg
fwait
ret
leave
xchg
xchg
pop
mov
push
fdivrs
push
jp
pop
mov
pop
sbb
fidivrl
adc
lds
pop
xor
and
push
xchg
pop
sbb
std
cltd
mov
mov
push
mov
test
sbb
arpl
loop
aaa
rolb
rorl
mov
push
ret
xchg
fistpl
lds
push
pop
orl
gs
sbb
or
sub
icebp
sub
pop
notb
sti
idiv
jo
test
les
rcrl
pop
insl
xchg
test
sbb
xor
sbb
xchg
mov
pop
sarb
pop
inc
xorb
pop
stc
mov
sti
add
movsl
test
or
gs
mov
add
sbb
sbb
iret
dec
push
scas
xor
inc
pop
aaa
and
push
js
inc
and
inc
test
mull
in
sub
pop
clc
js
push
xor
inc
arpl
gs
addl
jp,pt
mov
mov
pop
test
cli
imul
les
ret
test
xchg
les
xchg
mov
pop
mov
jo
cli
arpl
fs
jge
add
ja
add
mov
notb
cmp
notl
fcmovnb
js
and
mov
add
fnstcw
into
xor
push
cmp
mov
out
push
sti
fistpll
fstpt
jmp
jmp
cltd
mov
mov
movsl
jecxz
cli
movsb
fildl
test
sbb
bound
mov
pop
xchg
add
leave
jo
loopne
add
call
outsl
mov
pop
mov
mov
adc
int3
ret
and
and
clc
je
mov
bound
pop
test
pop
push
cmp
jo
ds
aas
push
pop
outsl
sbb
lock
cltd
and
jne
in
loope
aaa
cmp
add
negb
push
xchg
xchg
cmp
mov
inc
loope
pop
add
pop
add
cmp
and
add
inc
daa
cwtl
sahf
pop
sbb
add
ja
pop
outsl
cltd
out
jnp
notl
icebp
mov
incb
and
inc
or
and
mov
pop
and
jnp
leave
andl
or
sbb
inc
cmp
inc
mov
sbb
mov
jle
loop
fs
mov
xchg
pop
or
dec
arpl
int3
in
icebp
fwait
inc
xchg
mov
push
pop
pop
inc
mov
or
add
lods
or
negb
inc
inc
fadds
xor
add
cmp
cmp
jle
pop
ret
adc
daa
sbb
testb
push
dec
stc
cmp
cli
adc
sarl
and
ja
jnp
push
fadds
sub
push
sti
pusha
movsl
pop
xchg
mov
and
jecxz
pop
ja
lea
push
rcrl
push
mov
cld
and
add
adc
repnz
add
xchg
sbb
sbb
cmp
mov
adc
mov
adc
inc
repnz
bound
jnp
sbb
call
and
and
mov
push
pop
sti
lcall
sub
mov
cwtl
mov
cmp
arpl
mov
lods
mov
jge
test
movsl
movsl
sti
push
cmp
inc
sti
xchg
mov
fdivrs
aaa
fs
pop
xor
in
and
add
cmp
in
pop
test
push
and
add
inc
popf
cmp
jo
clc
sub
movsb
mov
push
in
cmp
stc
ret
mov
das
cmp
pop
lret
mov
fwait
test
xchg
push
pop
in
cmp
xchg
in
adc
jns
cmc
mov
fcomps
rcrl
jb
sti
push
shlb
jno
in
jnp
mov
inc
div
add
fdivrl
cmp
mov
fidivrl
push
xchg
sbb
jnp
pop
icebp
icebp
xor
ljmp
orl
lock
mov
inc
cmp
adc
fs
sti
arpl
fbld
jle
xchg
sarl
test
sbb
inc
pop
and
push
inc
mov
test
fidivs
pushf
jne
loop
pop
fs
xchg
aaa
cmp
out
jae
ja
in
xor
jnp
in
icebp
fnstcw
add
pop
or
testl
out
sbb
fisttps
sub
sarb
test
mov
xor
cmp
movsb
adc
pop
test
push
into
cltd
pop
filds
and
fcomps
xor
in
ret
inc
or
jecxz
lahf
jecxz
popf
fwait
test
popf
push
loope
ret
cmp
xchg
fdivs
push
inc
pusha
add
loope
movsb
adcl
mov
testb
in
jnp
jmp
mov
xchg
dec
outsl
test
dec
lret
push
add
xchg
jp
in
shlb
push
inc
jae
and
fwait
cmp
mov
mov
sti
addr16
fidivrs
clc
cmp
adc
sbb
ja
and
inc
and
inc
mov
dec
xchg
fs
stc
clc
fchs
out
js
loop
lcall
push
jns
ret
out
cmp
xchg
jecxz
fsts
push
cmp
loop
xchg
fwait
aaa
daa
fwait
fs
add
xchg
shll
rcrb
sahf
clc
jg
movb
inc
fwait
push
jns
mov
fs
sbb
cmp
das
adc
cli
aaa
sbb
cmp
ss
mov
andl
and
mov
arpl
inc
mov
out
lods
out
insl
scas
shlb
pop
gs
andl
jnp
das
xchg
and
mov
dec
in
ret
sbb
cmp
mov
test
push
sahf
xchg
or
lods
mov
cs
and
mov
arpl
aam
sbb
and
ds
jo
negb
sbb
jbe
xchg
fdivrs
cwtl
mov
in
adc
movsb
mov
arpl
clc
icebp
cltd
push
out
mov
cmp
lea
mov
push
inc
lret
hlt
add
mov
clc
out
mulb
addr16
pop
and
leave
cmp
lods
test
stc
xchg
cmc
sti
jns
jb
pop
xchg
repz
fwait
push
sbb
jecxz
movsl
enter
loop
adc
mov
cmp
lock
popf
cli
in
test
sar
ljmp
arpl
fldenv
pop
inc
sbb
in
xlat
notb
cltd
add
jno,pt
sbb
stc
popf
cwtl
orb
add
dec
xchg
sbb
jo
jns
inc
adc
cmp
mov
jmp
stc
movsb
mov
push
jns
repz
fs
lret
sbb
mov
add
stos
pop
xor
cmp
fistpl
jnp
out
test
add
sbb
jp
cmp
adc
xchg
aaa
lock
adcl
or
movsl
fwait
jmp
and
sti
fisubl
test
fildl
mull
inc
cmp
ret
aas
in
pusha
in
and
pop
cltd
les
sahf
xchg
push
test
cmp
mov
nop
cmp
icebp
fidivl
aaa
sbb
imul
push
add
jecxz
push
pop
cmp
lea
cmp
cmc
fcomp
rcrb
cltd
push
adc
sbb
adc
cwtl
popa
enter
jge
cmp
jns
cs
mov
jno
cwtl
cli
add
push
cmp
testl
adc
shlb
jge
pop
sbb
shll
or
add
in
add
in
add
aas
push
adcl
push
and
ds
and
lahf
adc
in
cs
fadds
ss
cmp
mov
sub
sbb
cwtl
pop
bnd
clc
iret
cmp
addr16
add
sbb
std
mov
jmp
mov
ficompl
or
push
xchg
jmp
scas
ss
pop
mov
cmp
scas
jmp
in
pop
jmp
pop
sbb
mov
push
and
iret
outsl
inc
or
pop
clc
ficomps
aas
pop
into
jg
mov
adc
fildl
pop
add
push
jne
add
sbb
xlat
bound
in
mov
fisubl
mov
mov
out
leave
outsl
mov
lods
pushf
sbb
add
mov
mov
sub
ds
fcomps
les
jns
sarl
mov
adc
adc
std
sbb
fistpl
arpl
push
add
pop
vmovdqu
mov
icebp
dec
xchg
out
pop
mov
inc
jnp
mov
mull
test
insb
test
mov
adc
push
imul
mov
and
ret
les
arpl
insb
and
jg
imul
popf
ja
mov
mov
add
push
popf
pop
repnz
clc
mov
icebp
jge
xchg
outsb
inc
pop
sub
jecxz
adc
add
les
out
mov
idiv
or
add
sbb
ja
add
and
sub
inc
mov
push
and
and
and
fcmovnbe
inc
mov
outsb
sahf
movsb
cwtl
xchg
fsubs
mov
xchg
sti
cli
add
testl
sbb
and
fcomps
cltd
mov
sbb
push
out
fstpt
add
mov
mov
push
pop
loopne
xchg
or
cmp
fidivrs
lds
or
sti
pop
add
js
ljmp
jns
pop
movsb
xchg
push
cli
inc
pop
inc
bound
push
add
pop
cmp
aad
aas
mov
loope
add
push
movsb
pop
or
sbb
inc
or
jge
mov
icebp
and
pop
test
jp
clc
stc
repz
cmp
jns
add
jecxz
test
sti
cmp
in
dec
add
push
add
mull
popf
popa
and
mov
add
sbb
pop
stc
test
xchg
sub
cmp
and
ss
fiaddl
mov
aad
fsubrl
roll
mov
idivb
add
pop
xlat
ret
push
inc
icebp
les
push
pop
sahf
mov
rclb
lds
push
in
pop
and
enter
inc
mov
dec
mov
arpl
jecxz
add
pop
addl
jge
jecxz
xchg
mov
fdiv
pop
pushf
pop
ss
cmpsl
sahf
dec
rcll
jge
arpl
rcr
xlat
test
iret
fwait
pop
add
xchg
mov
pop
add
push
adcl
xchg
mov
cmp
int
pop
or
cwtl
in
jns
in
clc
adc
xlat
js
adc
push
flds
lds
jo
push
int
arpl
cmp
sub
mov
inc
inc
pop
and
cmp
sub
cltd
cmp
mov
test
add
pushf
sub
mov
jae
aam
scas
lret
pop
aas
test
dec
arpl
and
add
not
ja
inc
push
push
mov
lods
js
iret
add
pop
repz
jmp
iret
in
gs
jge
xchg
fwait
add
jnp
rcl
mov
inc
cmp
and
in
adc
jne
and
inc
cwtl
inc
fsts
pop
lcall
ret
fdivrs
jnp
mov
movmskps
loop
inc
outsl
scas
xor
cmp
xchg
imul
sbb
cmp
pop
fwait
test
lds
pop
in
jo
mov
jle
out
xlat
shll
inc
adc
add
sti
fs
pushf
and
mov
cmpl
adc
adc
pop
movsb
int3
pop
test
in
jl
sti
xchg
jg
push
mov
push
jnp
rolb
and
loope
fistl
dec
bound
add
inc
pop
add
fdiv
fwait
push
idiv
add
rorl
jge
rcr
mov
dec
adcl
in
test
sbb
js
sbb
sahf
cltd
or
ja
outsl
movsl
pop
mov
inc
leave
imul
sbb
popf
push
adc
test
pop
mov
push
orl
repnz
mov
sub
outsl
mov
outsl
imulb
insb
xor
xchg
add
mov
pop
jbe
and
xor
cmp
orw
imul
je
scas
subl
or
cmp
xchg
out
or
mov
icebp
and
lds
or
or
mov
test
pop
mov
push
cmp
jbe
and
add
add
lret
add
mov
lock
js
iret
test
adc
xor
repz
ftst
popf
lahf
out
and
push
in
sbb
mov
xchg
dec
ds
and
sbb
cmp
fld
sbb
add
lods
lods
stos
sarl
xchg
divl
rcll
sbb
fadd
xchg
mov
mov
sbb
movsl
fs
loopne
ds
cmp
dec
clc
inc
fwait
jl
adcl
sbb
std
jns
and
push
stc
mov
sbb
sbb
push
je
push
cli
pushf
pop
clc
outsl
mov
add
pop
nop
or
xchg
scas
pop
into
pop
ljmp
adc
sub
ret
sbbl
push
movsl
icebp
inc
aaa
fnstcw
cltd
adc
popf
mov
add
insl
xchg
mov
xchg
mov
ds
arpl
outsb
clc
add
repnz
mov
arpl
and
clc
inc
mov
cld
ret
pop
push
sbb
push
pushf
cwtl
aaa
test
cmp
les
scas
test
add
out
mov
movsb
sbb
cmp
mov
xchg
pop
test
pop
cmp
or
and
ret
lret
mov
jecxz
sbb
dec
or
push
inc
push
test
aad
inc
test
nop
outsb
mov
div
dec
jnp
test
and
sub
dec
push
cmc
dec
idiv
daa
inc
insb
cmp
lock
mov
pop
jnp
cmpl
scas
movsb
js
ficoml
xlat
inc
cmc
cmp
mov
lea
popa
push
mov
shl
cmp
fdivrs
jbe
inc
inc
cmpsl
pop
cmp
shlb
inc
stc
cwtl
fcomps
or
lds
in
test
stos
dec
sahf
add
int
enter
or
add
test
test
test
xchg
mov
pop
cwtl
js
sub
popf
shrl
cmp
push
xor
out
push
int
mov
lock
stc
sarl
and
jns
sub
fisttpl
outsl
adc
jecxz
and
cmp
add
arpl
xchg
jno
cmp
inc
fldenv
test
iret
movsl
clc
sbb
sub
mov
mov
in
add
rcrl
and
inc
mov
enter
out
mov
dec
mov
or
pop
add
ret
push
xor
sbb
xor
iret
shrb
in
sbb
fs
mov
test
loopne
cmp
pop
sbbb
sbb
inc
inc
sbb
add
inc
add
pop
jp
adc
add
cmp
pop
loopne
push
stc
and
add
sub
dec
loopne
aaa
dec
push
sbb
cwtl
cltd
mov
leave
jno
int3
fstps
inc
jo
fisttpl
sarb
xlat
lret
movsl
add
fdiv
ficompl
shll
jns
sub
inc
pop
and
stc
pop
adc
adc
mov
scas
clc
fwait
mov
pop
mov
xchg
dec
outsl
test
jge
pushf
mov
shlb
mov
pop
adc
fcomps
notb
push
and
push
cwtl
pop
stos
sbbb
cli
ja
lds
push
stc
xlat
mov
cwtl
fyl2x
jns
negl
and
decl
or
fwait
in
inc
test
push
lds
imul
sub
fs
and
int3
sbb
cli
pop
jg
mov
push
add
cmp
xorl
xchg
cltd
push
clc
push
gs
jbe
push
pop
cmp
ja
loop
dec
outsl
xchg
xchg
jle
fisubs
pop
inc
nop
fwait
jnp
les
aaa
daa
scas
add
bound
jecxz
je
arpl
cmp
push
outsl
pop
mov
pushf
cmp
inc
fwait
add
sub
sbbl
adc
icebp
fildl
or
mov
xchg
xlat
sbb
sbb
and
xor
fistpll
or
or
cmp
negl
in
pop
fcompl
and
push
fildl
inc
fxch
and
stc
in
adc
mov
in
lods
jg
sahf
loope
add
xchg
or
into
sbb
movsl
xchg
fwait
dec
lock
rcrl
outsl
cli
and
hlt
lds
clc
dec
and
sar
cmp
mov
arpl
and
cltd
fcmovne
cmpsl
sahf
cmp
rcr
test
pop
cmp
xor
add
movsb
fwait
hlt
cltd
mov
push
fsubrs
mov
sub
nopl
adc
xchg
cmp
pop
imul
adc
jecxz
cmp
bound
pop
in
adc
sub
mov
shr
cltd
mov
sahf
leave
cli
cmp
fs
iret
cmpl
cmp
notl
jo
and
les
pop
mulb
mov
in
mov
sti
push
iret
push
testb
mov
or
mov
cmp
leave
or
sbb
cwtl
test
ret
cwtl
and
repnz
movsl
xchg
movsl
negl
push
adc
add
shll
jp
cmp
mov
inc
lret
loope
push
pop
notl
sub
add
notb
mov
xchg
test
ret
jo
cmpl
cmpsb
adc
jmp
stos
cli
in
push
ds
fnstcw
cltd
push
mov
sbb
mov
movsl
leave
mov
cmc
stos
mov
cltd
sbb
mov
dec
ret
pop
stc
outsb
inc
mov
gs
inc
movsl
jecxz
leave
push
es
lods
es
loopne
lcall
adc
sbb
jae
mov
dec
cmpl
std
cwtl
dec
ficoml
fwait
enter
pop
in
and
fistpl
inc
outsl
pop
jns
inc
stos
dec
mov
adc
pop
daa
ja
inc
movsb
shlb
xchg
mov
nop
xlat
jns
pop
or
cltd
hlt
sbb
out
xor
popa
xor
push
js
mov
mov
lcall
outsb
imul
xchg
inc
rcl
add
iret
jno
test
ljmp
inc
mov
pop
int
mov
jo
sbb
add
push
or
mov
popf
test
pop
lock
add
mov
push
push
xchg
mov
pusha
ss
jns
in
cli
xchg
pop
clc
add
idivl
and
cwtl
jns
das
jg
pop
test
cli
sbbb
cmp
push
inc
inc
mov
out
cmp
mov
mov
mov
sbb
xor
push
fmull
movsb
mov
shr
aaa
adc
xchg
test
cmp
nop
iret
aaa
sahf
dec
aaa
adcl
lods
out
and
das
je
adc
xchg
cli
adc
mov
fnstcw
and
test
sahf
and
lods
xchg
cmp
lret
sbb
nop
sarb
xchg
in
xor
and
push
sbb
add
std
mov
adcl
jnp
dec
add
pop
insl
fcoms
pop
shrb
pop
xor
add
push
and
xchg
adc
push
mov
sbb
jmp
dec
add
push
xchg
adc
testb
in
jge
mov
xchg
and
sbb
or
jnp
in
cmpb
add
add
subl
adc
inc
push
pusha
cli
pop
cmc
sti
sbb
push
arpl
cmp
cmpsl
sbb
sahf
out
pushf
aaa
mov
add
or
and
add
push
fwait
mov
push
push
pop
sub
lds
sbb
and
add
fsts
pop
inc
pop
fnstenv
aam
or
arpl
pop
xchg
push
xchg
sbb
loop
aaa
inc
fisttpl
cmpsb
idivl
cmp
popf
ret
fsubr
sti
scas
sbbl
mov
push
rcll
lea
dec
pop
mov
jo
arpl
scas
mov
pop
xor
push
inc
mov
clc
cmp
in
or
test
andl
cli
loop
in
jmp
and
push
gs
inc
fildl
inc
mov
mov
jnp
inc
js
test
sbb
push
popf
sbb
enter
pop
inc
ret
jmp
andl
mov
je
adc
inc
lds
shrb
xor
and
fs
lds
sub
sti
mov
sahf
clc
mov
lds
jle
mov
std
cwtl
fs
addl
gs
rcrb
in
sbb
mov
add
adc
cmc
testb
mov
rorb
hlt
cmp
xchg
xor
add
aaa
movsb
call
and
repnz
adc
clc
fstps
arpl
inc
and
sbb
xchg
fcmovnbe
push
in
adc
fnstenv
les
das
mov
clc
xchg
and
scas
popf
lahf
out
or
push
add
adc
arpl
inc
jo
jns
rcrb
inc
loope
movsl
test
mov
xchg
mov
push
inc
fmuls
repz
add
ja
rorb
gs
sbb
test
loopne
xchg
pop
aas
in
jnp
cmp
outsb
mov
out
lret
icebp
jge
ja
test
aad
or
fdiv
lcall
push
iret
jnp
in
loop
pop
mov
clc
adc
movsb
fwait
mov
in
fs
movsl
sti
aas
and
sub
sbb
cltd
stc
or
push
addr16
mov
neg
xor
sbb
cwtl
fwait
xchg
cmc
test
jmp
mov
pushf
test
daa
jle
dec
frstors
shl
cmp
jecxz
es
and
dec
cltd
arpl
les
leave
sbb
mov
push
inc
sbb
sbb
fisttpl
enter
fucomp
pop
mov
jl
mov
pop
fs
adc
inc
mov
xchg
pop
cmp
lock
rolb
cli
leave
lock
push
cmp
or
or
jno
xlat
cmp
loop
push
cmp
fnstcw
xchg
push
lea
xlat
xor
clc
jle
repz
aad
popa
dec
push
test
push
ret
or
adc
inc
sbb
cmp
mov
loopne
xorb
roll
mov
pop
cmp
inc
neg
stc
les
ja
and
mov
adc
js
pop
pop
mov
aaa
pop
pop
les
es
push
xor
push
fldl
adc
jbe
xchg
sbb
fcmovnbe
popa
sbbl
pop
push
mov
xlat
fcmovnu
jne
cmp
fistpll
aaa
je
andl
mov
cwtl
xchg
sbb
mov
sbb
test
test
and
pop
mov
stc
pop
mov
orl
loop
lret
icebp
sbb
rep
ja
sbb
fsubrs
inc
cs
scas
cltd
or
or
std
mov
test
jnp
cmp
cmc
add
pop
and
pushf
add
fadds
sub
rcrl
mov
cmp
lea
inc
cmc
sub
jmp
std
fimuls
aam
jnp
sub
xor
arpl
mov
cwtl
mov
out
add
arpl
fs
fcomps
pusha
scas
sahf
pop
movsl
adc
sbb
adc
in
pop
cltd
cmpsb
shlb
jp
push
lea
sbb
push
add
movsl
and
pop
mov
mov
and
cwtl
pop
enter
loopne
jae
mov
add
pop
mov
cmp
add
mov
sarl
jmp
scas
subl
pop
sub
in
loopne
inc
sarl
and
pop
cmpl
sub
push
dec
jb
cmp
and
sbb
pop
xlat
xchg
cmp
mov
sbb
mov
lds
sub
fwait
adc
arpl
in
cwtl
int
xor
movsb
push
aaa
inc
rcl
std
jnp
sbb
mov
std
mov
fs
sbb
faddl
fdivl
and
cmc
arpl
inc
stc
jmp
mov
aad
lds
jns
and
pop
jo
in
xchg
fisttpl
and
arpl
aaa
and
push
inc
mov
add
adc
add
add
out
push
cmp
test
cmp
movsl
in
lds
xchg
adc
fdivr
push
cmpsl
shl
mov
imul
fcmovb
lods
dec
adc
negb
add
ja
jne
leave
cmc
mov
jecxz
movsb
sbb
jo
in
inc
in
cmp
push
add
mov
or
movsb
add
or
test
int
clc
hlt
shr
mov
sti
sub
repz
lcall
ja
scas
pushf
and
cmp
add
mov
fistpll
jne
stc
sbb
aad
push
push
jl
adc
cltd
xchg
mov
and
fs
cwtl
sti
dec
pop
pop
and
fs
into
dec
stc
icebp
sti
and
cmpl
test
movsb
cmp
add
les
negl
popf
inc
js
std
nop
repz
sbbl
cli
fldenv
std
mov
test
push
movsb
roll
les
inc
sbb
pop
xlat
xlat
and
inc
popf
inc
cmp
sub
jl
push
das
rcr
les
or
xchg
sub
lret
push
int
jmp
sbb
push
cmp
loope
cwtl
jo
scas
mov
ja
xchg
ljmp
out
out
and
fs
cwtl
clc
movsl
and
pop
rcrl
xor
cmp
push
roll
loop
mov
sarb
and
add
pusha
loope
mov
test
test
jge
sbb
pop
imul
push
test
mov
sub
lret
xchg
in
aaa
and
cs
pop
sbb
stc
cmp
test
push
and
mov
cmpsb
in
xchg
pushf
imul
cs
and
mov
mov
jg
testb
or
add
imul
mov
xchg
outsl
cmp
out
ret
jns
adc
cwtl
or
mov
std
scas
push
mov
js
xchg
pop
fisttpl
aad
mov
cmp
cs
xor
mov
cmp
push
std
inc
adc
adc
arpl
ret
subl
mov
mov
arpl
ja
inc
mov
jl
adc
and
mov
fsubrl
pop
push
dec
adc
jns
xchg
je
lcall
dec
jnp
insb
fwait
add
add
loop
in
pop
or
test
push
and
fwait
insl
cmp
leave
pop
push
pusha
dec
inc
pop
or
xor
pop
inc
xchg
inc
fs
add
push
mov
sbb
das
mov
pop
cltd
mov
pop
in
clc
cmp
fsts
andl
mov
cmp
cmc
mov
mov
pop
pop
add
daa
and
nop
lret
and
clc
arpl
cmp
mov
add
sub
pop
insl
mov
clc
icebp
aaa
in
cli
jbe
push
and
test
fadds
sbb
xchg
ret
push
add
and
les
fadd
pop
add
ds
and
jnp
jno
in
leave
sahf
movsl
mov
dec
push
das
cmp
ret
mov
inc
adc
lds
cwtl
jns
fwait
test
les
lods
or
movsl
jl
movsb
in
loope
jecxz
push
ret
out
xorb
idivb
mov
out
notl
scas
push
cmp
cltd
testb
ja
jnp
sbb
dec
leave
sbb
cmpsl
mov
fs
push
inc
pop
add
sti
push
hlt
in
in
rcrb
inc
adcl
js
add
sahf
add
inc
dec
jg
out
sbb
mov
stc
push
and
fcmove
jne
and
popa
ja
jno
in
mov
sub
test
adc
test
scas
mov
fwait
jo
cmp
gs
jne
test
mov
cmp
mov
arpl
loope
pusha
pushf
int
adc
xchg
aad
sbb
arpl
call
mov
add
jne
testb
js
lds
test
add
test
fsubl
aad
leave
imul
mov
es
xlat
cmp
inc
fmuls
adc
popa
cmp
insb
shll
stc
jmp
sub
push
add
cmp
jnp
cmpl
inc
sarb
aad
shl
pop
inc
adc
arpl
sbb
mov
and
sti
call
andl
loop
and
lcall
xor
push
sbb
lods
sub
xorl
lahf
pop
fstpl
or
test
loop
push
mov
pop
add
jg
ds
pop
inc
pop
hlt
sub
in
xchg
xchg
pop
cmp
or
push
test
pop
or
mov
int3
pop
sub
jne
push
fdivp
loop
mov
ljmp
insl
scas
cwtl
cltd
mull
les
stc
push
sbbl
pop
imul
rcrl
pop
mov
mov
cmp
inc
pop
cmpsb
icebp
and
push
mov
and
cmp
push
pop
repz
movsl
or
jge
jb
lods
std
stos
push
xchg
ja
add
scas
cmp
add
negb
jmp
in
bound
push
and
dec
rcll
popf
pop
lods
adc
sbb
arpl
xchg
out
mov
mov
inc
sbb
test
inc
sub
into
dec
adc
movsl
jecxz
mov
jnp
loop
and
pop
pop
in
and
cli
sbb
fisubl
popf
fs
out
pop
iret
xor
aas
mov
mov
test
pop
mov
out
mov
jbe
xchg
in
dec
jae
or
add
inc
popa
cmpsl
jecxz
inc
loop
jecxz
mov
mov
das
jne
popf
test
pop
jno
and
popf
lds
and
xchg
sbb
push
mov
lret
mov
jne
xchg
les
inc
mov
test
arpl
js
fucomp
mov
filds
mov
adc
cmp
test
insb
sbb
and
inc
cltd
add
mov
mov
push
mov
pusha
sbb
fistl
scas
lret
aas
test
mov
mov
cmp
cmp
mov
adc
stc
and
xor
jns
fildl
mov
add
jns
sbb
fwait
jp
cmp
mov
mov
mov
arpl
js
jns
add
add
cwtl
fsubs
clc
mov
add
jle
xlat
push
scas
adc
les
mov
jne
pop
adcl
pusha
mov
xchg
adc
loopne
add
mov
lret
jecxz
xchg
es
out
jg
or
pop
fsub
lea
gs
gs
loope
and
cwtl
test
test
lea
pop
jp
cmpsb
aam
mov
xchg
filds
adc
ret
stc
sahf
inc
sbb
push
mov
imul
icebp
stc
cmp
sbb
cmp
xchg
imul
sbb
outsl
cmp
or
mov
aaa
adcl
shll
data16
mov
add
lds
sbb
cmp
push
push
lret
ret
inc
stc
inc
sbb
inc
mov
jnp
inc
and
add
ret
loop
adc
pop
out
pop
xor
and
mov
inc
sbb
sti
lahf
cmp
cmpsb
call
popa
cmpl
fst
and
inc
mov
notl
cli
sbb
mov
test
add
pop
xor
pop
sbb
adc
and
rcll
fwait
clc
in
pop
pop
cmp
stos
cwtl
add
push
cmpsb
mov
add
add
lock
and
repnz
inc
gs
lds
and
inc
inc
xchg
psubd
call
in
jl
fsts
jo
or
js
xchg
imul
ss
fsubrl
or
in
mov
out
or
rclb
mov
fistpl
and
cwtl
aaa
dec
or
popf
les
inc
pop
mov
sub
xchg
inc
sub
movsb
push
dec
pop
jecxz
ret
adc
push
mov
rol
xchg
in
das
pop
pop
out
mov
rclb
and
push
jne
jns,pt
mov
sbb
push
sbb
fmuls
jns
xchg
cmp
test
pushf
inc
lret
or
jge
xchg
inc
inc
clc
push
or
inc
adc
jae
daa
imull
jbe
outsl
rclb
pop
jecxz
les
js
adc
pop
test
loope
cltd
aaa
fdivr
addr16
cmp
ret
js
inc
aaa
mov
loopne
jge
xor
insl
mov
sbb
push
mov
push
add
ja
test
xchg
xchg
xlat
dec
scas
out
movsb
cmp
push
icebp
xchg
testb
pop
daa
pushf
lds
sbb
popa
dec
inc
aam
xor
repnz
or
fadds
adc
jns
mov
cltd
test
std
mov
js
push
fwait
mov
stc
and
pop
push
cwtl
xchg
insb
ret
or
test
fiaddl
add
and
pop
gs
jb
ds
mull
cmp
jp
ret
and
sbb
and
hlt
xchg
push
fdivs
inc
lds
sti
pop
and
add
cmp
aad
in
loopne
add
mov
jecxz
push
fnstenv
jg
pushf
loope
jmp
mov
sahf
in
pop
aaa
pop
sub
mov
arpl
and
test
rclb
add
xchg
jg
imul
fisttps
and
ljmp
mov
pop
pop
loope
pop
xchg
pop
in
aam
cmp
pusha
jno
mov
frstor
fnstcw
mov
out
fildl
inc
icebp
jae
add
lds
xchg
cld
add
sub
cld
push
lret
adc
movsl
mov
jecxz
inc
mov
push
js
loop
imul
sti
fdivl
jnp
xorb
sbb
dec
movsb
adc
and
outsl
sbb
shl
and
enter
into
push
inc
push
icebp
pop
sbb
testl
sbb
cwtl
mov
fwait
sbb
cmpl
jb
mov
inc
ret
in
jb
sbb
sti
pop
mov
ret
outsl
mov
sbb
or
sbb
fnclex
pop
inc
lahf
ljmp
cmpsb
jae
xor
icebp
cwtl
cmp
testl
xlat
push
add
add
mov
mov
ret
stos
icebp
stos
movsl
and
fsts
cs
ficoms
inc
js
negl
in
pushf
jecxz
outsl
ja
cmp
sbb
inc
andl
push
outsb
and
add
jle
lret
and
push
mov
sarl
cltd
push
dec
jnp
xchg
push
aaa
test
bound
jnp
outsl
les
add
jge
sbb
or
pop
push
cmp
loop
inc
movsl
into
popf
int3
fwait
shrl
push
adc
rclb
dec
and
lds
mov
test
mov
xchg
mov
into
adcl
xchg
mov
push
xlat
in
mov
lds
in
cmp
imul
sub
cmpsl
repz
xchg
xchg
dec
enter
cld
sbb
jecxz
jp
pop
mov
mov
or
ja
and
sub
adc
sub
ret
adc
vpackuswb
add
pop
loop
pusha
ds
cmp
rclb
xor
jo
ret
dec
inc
pop
in
scas
pop
in
pop
outsb
jns
loope
add
or
test
notl
in
add
mov
das
inc
dec
fs
adc
cwtl
sbb
adc
sarl
xlat
push
inc
clc
shlb
rclb
idiv
loop
dec
push
xchg
ja
xchg
pop
pop
jb
sbb
mov
bound
push
in
push
movsb
mov
jnp
sub
mov
add
repnz
push
xchg
fucomi
lock
pop
xlat
fbld
xor
or
loop
jl
mov
jle
stos
cli
insl
adcl
repz
fs
test
rclb
enter
sbb
hlt
dec
adc
push
push
js
push
fmuls
stos
mov
ja
cmp
lret
push
cmp
jnp
jns
ret
mull
push
adc
ret
clc
push
xchg
cwtl
ljmp
inc
jge
test
mov
xchg
mov
mov
xchg
jbe
std
mov
mov
mov
js
mov
sti
aaa
sbb
daa
cmp
fcoml
mov
pop
cmp
cltd
jns
lret
loope
orl
loopne
insw
gs
pop
sub
fxch
arpl
fs
inc
push
jbe
jns
div
xchg
cmp
in
mov
icebp
mov
adc
notb
cmp
mov
jae
lret
pushf
cwtl
in
lcall
xchg
fdivrs
fwait
jge
cmp
inc
push
mov
pop
insb
or
push
adc
sbb
loope
add
in
add
iret
cli
and
cmp
fwait
aaa
insb
push
push
jno
pop
mov
jecxz
and
jo
inc
insl
lds
iret
mov
xor
jno
mov
jecxz
sti
or
sahf
mov
loope
mov
rcll
mov
pop
adc
xchg
or
cmp
jae
push
mov
mov
push
pushf
mov
imul
out
sbb
das
mov
clc
jg
sub
sahf
jo
stc
in
add
mov
lret
and
insl
mov
stc
cmp
aaa
inc
enter
xchg
sbb
xchg
sub
mov
neg
pop
sahf
inc
xchg
mov
xchg
xchg
ds
ficomps
xchg
xchg
repnz
sahf
in
adc
sahf
inc
mov
outsb
jbe
pop
mov
mov
dec
ficomps
inc
sub
ret
in
inc
adc
in
dec
sahf
xchg
arpl
popa
inc
stos
fidivrl
push
inc
int3
mov
and
add
and
aaa
cmc
into
push
addr16
add
outsb
sbb
mov
mov
js
push
pop
xchg
movsl
push
arpl
scas
not
pop
inc
inc
aaa
and
cmp
mov
test
inc
jnp
jns
daa
xchg
les
pop
jl
cli
pop
push
pop
gs
cwtl
adc
pop
add
inc
idivl
test
adcl
in
repnz
sahf
or
ficoml
ja
push
push
sbb
and
testl
inc
dec
sbb
imul
sbb
and
add
divl
add
jecxz
and
rcr
sahf
andb
sbb
mov
sahf
out
dec
cmp
push
cltd
clc
xchg
fsubs
jns
mov
test
rcrl
in
add
js
mov
fucomi
pop
dec
adc
sbb
mov
mov
sbbl
mov
mov
roll
sbb
push
enter
sar
flds
sbb
int3
fists
in
dec
popf
mov
sbb
mov
cwtl
cmp
xchg
sti
das
inc
lds
mov
rcrl
adcb
and
mov
sbb
inc
dec
and
mov
mov
dec
add
pop
mulb
js
add
in
mov
das
cltd
xor
push
imul
inc
adc
rolb
stc
cmp
subb
ret
test
inc
popa
adc
pop
mov
and
ss
cmp
call
inc
push
imul
pop
adc
cmp
push
roll
notb
mov
mov
and
sti
cmp
imul
fwait
mov
rcrb
popf
stc
call
mov
das
clc
call
mov
jmp
add
popa
lods
pop
in
mov
adcl
mov
aad
mov
movsl
jnp
adc
ficompl
adc
sti
sbb
cli
push
movsb
and
sbbl
xchg
int3
aam
jns
sub
cmp
data16
sbb
in
insl
mov
sbb
cltd
and
test
test
std
and
fistpl
jp
aaa
or
mov
sti
add
flds
mov
jg
jnp
popf
dec
rcr
push
cmp
sbb
ja
pop
cmp
loop
in
sub
ss
lds
sub
cmc
inc
jns
mov
imulb
mov
and
inc
dec
lret
insb
xchg
and
jb
stos
mov
or
test
movsb
pop
idiv
lahf
push
clc
add
rcr
cmp
inc
inc
test
not
test
pop
push
xor
mov
cmp
or
cmp
adc
mov
inc
lea
add
aaa
data16
outsb
mov
sahf
inc
mov
inc
jns
outsl
fsubl
out
add
fisubrl
jmp
push
int3
jnp
jno
fnstsw
push
cmc
jecxz
sub
cmp
jnp
xor
out
rcll
mov
add
or
pop
movsl
cltd
popf
loop
xchg
sbb
pop
push
cwtl
sbb
or
ret
mov
mov
test
cs
loope
test
adc
and
gs
sbb
cmpsb
ja
aas
out
out
and
mov
jge
and
cli
pop
cmp
add
movsl
mov
andl
pop
icebp
mov
test
enter
fs
add
push
add
mov
fld
pop
pop
or
jb
push
mov
movsb
xchg
jb
xlat
ror
and
popa
inc
xchg
pop
mov
jne
push
and
add
mov
testl
mov
test
push
filds
lods
andl
sarl
cmc
mov
cltd
lret
xchg
push
faddl
sbb
mov
and
and
jecxz
and
clc
andl
aaa
push
inc
sbb
push
xchg
popa
mov
ds
push
rcrb
cmp
loop
and
adc
mul
adc
add
sti
jl
cmpsb
jp
sbb
sahf
cwtl
push
adc
test
push
add
ja
push
push
in
loop
mov
sbb
les
out
popa
jno
jns
push
arpl
or
daa
fidivrl
aam
imul
cmp
push
sahf
gs
jnp
scas
lret
sarb
pop
fsubs
lods
js
test
sbb
xlat
adc
push
pop
icebp
fs
fadds
xchg
gs
dec
shll
ja
or
xor
lds
pop
fwait
in
jns
ret
jae
sahf
in
sbb
and
add
push
roll
xchg
sbb
and
lods
cmc
data16
or
sbb
gs
pushf
mov
pusha
add
les
xlat
outsb
or
test
ret
jle
sbb
adc
movsb
inc
fwait
pop
xchg
dec
pop
sbb
iret
adc
out
adc
les
test
push
movsb
mov
insl
fs
shlb
int
cwtl
movsl
add
pop
sbb
adc
sub
and
lock
and
push
jge
in
mov
sbb
fwait
or
jmp
sbb
out
jns
ror
cmp
sbb
cmp
or
pop
bound
mov
in
mov
and
cltd
dec
outsl
or
sbb
test
inc
jo
sti
fwait
in
push
les
lds
mov
pop
test
dec
jmp
les
clc
mov
mov
sti
jns
stc
add
jge
in
xor
lds
add
sub
pop
sub
mov
out
mov
je
push
pushf
add
cmp
clc
cmp
pop
sbb
pop
popf
add
sbb
mov
in
jge
add
ret
add
inc
cwtl
loop
clc
leave
mull
add
pop
cmp
mov
fcompl
pop
test
jnp
movsb
scas
and
shll
das
movsl
dec
dec
jmp
rcrl
push
inc
inc
arpl
dec
cmpsb
ljmp
or
loope
fwait
out
xchg
std
adc
in
xor
cmp
dec
cmp
mov
pop
jmp
cmp
fldt
outsl
out
inc
icebp
jne
and
pop
sbbl
inc
add
jne
nop
inc
dec
cmp
pop
jne
sbb
test
loop
in
mov
cmp
mov
aad
movsl
fisttpl
xchg
sub
les
add
add
jnp
inc
in
jl
test
rcl
mov
fadds
jecxz
cmp
mov
movsl
inc
jae
inc
adc
test
mov
cmp
push
iret
movsl
pop
cmpl
sbb
cmp
cli
xchg
fnstsw
int3
mov
divl
cmp
ret
push
sahf
inc
and
call
test
xchg
js
pop
pop
fwait
sbb
mov
popf
and
leave
mov
sar
add
jns
mov
ret
cli
in
test
scas
test
lock
mov
push
push
in
out
clc
mov
dec
out
bnd
lods
rorb
mov
lods
in
int
int
inc
adc
sbb
add
repnz
jno
pusha
mov
ja
or
insl
mov
cmp
call
fistpl
fcoms
fldenv
push
inc
mov
sub
pop
in
sahf
lods
cmpsl
mov
jbe
adc
mov
arpl
jecxz
out
mov
daa
cli
ret
mov
mov
rcrb
adc
jns
daa
fdivrs
sbb
inc
xchg
iret
scas
cmp
fbld
mov
jmp
add
fucomip
in
mov
add
inc
xchg
mov
sub
sbb
inc
and
js
imul
popf
jge
sti
jle
and
pop
arpl
sti
cwtl
scas
addl
vpmulhw
nop
mov
mov
adc
sbbl
fldenv
and
fistpl
cltd
mov
rol
mov
and
push
pop
cmp
roll
bound
pop
ja
pop
test
jle
xor
loope
sbb
sbbl
cwtl
idivl
and
ds
es
inc
push
pop
clc
and
and
sbb
xchg
sti
pop
push
loop
xor
mov
sbbl
cmp
push
in
mov
fldenv
in
inc
mov
and
test
xor
sbb
repnz
gs
test
out
sbb
loope
cmp
hlt
xchg
out
and
fisttpl
scas
fistpl
cmp
gs
add
push
ss
xlat
mulb
sbb
test
mov
adc
add
mov
cli
ret
in
aas
nop
lcall
loopne
pop
push
push
xorl
fwait
shlb
pop
andb
push
pusha
adc
push
mov
loop
repnz
std
cmp
shll
cmp
add
shr
xor
leave
movsl
jno
jnp
jb
sbb
push
jmp
in
pop
inc
idivb
xlat
fwait
add
imulb
into
sub
ds
xchg
mov
adc
cmp
and
fwait
mov
cli
inc
xchg
add
mov
and
push
lret
sti
push
mov
movsl
cmp
gs
sbb
push
fcmovne
inc
and
les
mov
lock
jnp
sbb
cmp
xlat
sbb
pop
loopne
pop
js
adc
cmp
cltd
ret
out
pop
and
mov
and
cld
les
sub
push
inc
lahf
or
xchg
sbb
sahf
mov
ds
and
stc
jecxz
test
pop
ret
inc
arpl
aaa
xlat
cmp
fwait
pop
pop
push
ret
in
cwtl
sbb
mov
test
mov
adc
arpl
adc
aad
fcmovu
mov
or
stc
es
jecxz
movsl
cwtl
mov
pop
pushf
cld
adc
cltd
gs
hlt
hlt
pop
adc
or
arpl
mov
mov
int
rorb
mov
dec
test
push
add
lods
sub
dec
or
in
orb
add
fcomps
and
jne
and
and
xlat
gs
fs
add
dec
rcl
loop
inc
and
sahf
push
sbb
lea
ret
pop
add
jb
lcall
aad
jnp
jae
sbb
lds
dec
fdivrl
gs
pop
jge
sbb
or
sub
sahf
ja
cmpsb
icebp
mov
xor
jecxz
sub
cld
pusha
jns
mov
mov
sub
loope
stc
add
and
divl
sub
ja
in
gs
and
cmp
in
aaa
fbstp
push
imulb
sti
inc
ss
sbb
mov
or
xchg
lods
sbb
test
sahf
adc
xchg
cwtl
xor
pop
jle
fstps
sbb
xchg
mov
inc
cmpsb
and
loope
lock
test
int3
sti
leave
mov
adc
jge
iret
test
jle
mov
sti
in
orl
aaa
mov
daa
push
sub
fs
mov
cmp
inc
jbe
mov
stc
xchg
lcall
dec
cmp
js
lcall
icebp
adc
and
fsts
push
je
xlat
lahf
push
rcr
arpl
jecxz
inc
xor
dec
mov
or
fwait
movsb
cld
xchg
in
sahf
jle
fildl
jae
push
pop
mov
jecxz
or
cltd
push
add
aam
inc
or
xlat
cltd
aas
aad
lcall
in
loop
test
repnz
mov
sti
popf
mov
add
aam
lret
ds
add
test
jecxz
data16
jo
clc
testl
dec
jecxz
xchg
mov
pop
es
lret
call
loopne
lahf
sbb
or
clc
mov
pop
test
mov
pop
dec
sahf
aad
out
lret
out
in
test
jp
xor
fdivr
stc
mov
sbb
sti
shlb
loope
fcomps
cmp
mov
mov
scas
fbld
aam
pop
mov
push
sarb
mov
and
aaa
push
cmpsl
mov
xchg
push
pop
cltd
fcmovnbe
and
mov
pop
fcomps
mov
js
pop
pop
je
test
xlat
xchg
sub
jmp
inc
mov
std
dec
lds
in
icebp
call
dec
inc
push
pop
in
sbb
add
and
fs
jge
adc
push
gs
add
sbb
mov
pop
jl
mov
xchg
in
fs
sbb
or
pop
ja
prefetchnta
add
sub
jecxz
inc
mov
and
xchg
jns
ret
fs
xlat
scas
add
push
sarb
fwait
adc
addr16
test
mov
add
js
ds
and
xchg
add
rorb
ja
sub
lock
jle
cmp
xchg
sbb
cltd
push
push
jecxz
sar
sbb
jne
push
pop
rolb
and
sbb
les
inc
loop
mov
loope
pop
mov
adc
imul
push
cli
sub
jnp
add
xchg
and
jl
mov
push
cmp
inc
sbb
add
pop
mov
and
daa
push
mov
int3
mov
xchg
test
gs
cmp
xchg
lds
sbb
sbb
jno
lds
outsb
in
and
xlat
sbb
ja
push
cmp
push
stc
dec
test
adc
and
aaa
mov
icebp
fs
add
fcmovnb
or
and
popf
and
fdivs
inc
addb
loopne
adc
xchg
lret
loope
cmp
cltd
movl
inc
push
pop
sbb
push
inc
sahf
cmp
test
and
jae
clc
mov
fs
aad
lds
scas
cmp
and
or
and
xchg
pop
rcrl
push
push
cltd
test
arpl
add
mov
add
mov
xor
cmp
mov
imulb
xchg
jg
add
xor
arpl
ja
mov
addr16
add
mov
and
aaa
ja
mov
mov
and
in
jnp
arpl
fidivrs
repz
mov
mov
add
popf
push
push
ja
pop
movsb
xchg
and
jl
cwtl
sbb
inc
mov
or
adc
and
cmp
clc
inc
pushf
popf
sbb
test
sti
jns
negb
stc
xchg
cltd
imul
les
and
or
mov
push
out
inc
cmp
and
push
inc
pop
pop
inc
cli
loope
flds
jnp
stc
pop
cmp
fadds
es
xor
mov
les
imulb
adc
lea
pop
cmp
mov
push
dec
adc
cmp
push
jg
sti
fdivrs
mov
aas
pop
sete
inc
add
push
cmp
add
and
pop
jmp
clc
pop
add
jmp
out
sub
jns
loop
out
arpl
out
leave
jo
ret
push
and
test
aas
sahf
cltd
mov
ljmp
xorl
insl
jecxz
movsb
pop
mov
or
neg
jo
negb
inc
add
mov
fstsw
add
mov
add
movsb
cmp
pusha
add
popf
fwait
sahf
or
div
pop
fdivrs
sub
add
rcr
imul
push
inc
fsubs
add
cmp
sar
push
fistl
sub
and
mov
loope
test
test
out
cmpsl
or
fwait
pop
or
pop
cmc
mov
and
sahf
mov
cmp
sti
cmp
push
pop
ss
ja
outsl
inc
aaa
jo
pop
sub
and
adc
xchg
jo
sub
sbb
js
xchg
les
mov
in
adc
xchg
ja
xlat
cli
cwtl
movsl
pop
loop
mov
fcomi
sub
xchg
inc
pop
in
inc
inc
mov
lds
stos
mov
stc
xchg
mov
arpl
adc
sbb
mov
xor
les
popa
icebp
clc
test
add
fs
push
repz
sbb
pop
sahf
sti
push
cmp
pop
out
fcmovnu
and
testl
outsb
pop
pop
inc
pushf
xchg
insb
sbb
clc
fs
in
arpl
fdiv
add
fldenv
push
xor
mov
je
jbe
stos
not
loope
jns
cmc
adc
and
cwtl
jb
sbb
leave
bound
pop
xor
sbb
not
jnp
cmp
or
lahf
push
push
imul
outsl
cmp
mov
mov
jecxz
inc
push
xor
dec
mov
divb
sbb
xlat
adc
pop
negb
inc
push
xchg
repnz
jnp
sar
jecxz
ret
push
pop
mov
inc
xorl
repz
loop
add
jge
xchg
inc
add
push
xlat
sbb
add
pop
int
jnp
in
adc
pop
lock
xchg
mov
sbb
sub
pop
sub
cmp
scas
std
xchg
fsubrs
adc
movsl
test
andb
add
fildl
jne
fwait
xchg
flds
adc
mov
in
ljmp
clc
leave
imul
test
sbb
push
fdivs
push
xchg
cmp
lds
push
cmp
test
cmpl
inc
cmp
add
mov
pushf
cmpsl
jne
nop
fcomi
lds
ror
pushf
mov
inc
cli
sarb
movsl
add
push
mov
stc
lret
mov
jo
aaa
mov
mov
jo
mov
and
xchg
sbb
adc
sbb
ret
pop
xchg
xchg
stos
sbb
and
ss
fstps
inc
pushf
add
cmp
and
sbb
arpl
cltd
ja
sbb
pop
mov
fs
je
xlat
and
push
in
lcall
pop
adc
sbb
and
fcmovnu
pop
or
pop
pop
ss
pop
xchg
incl
push
xlat
xchg
sarb
cwtl
rcrl
jmp
mov
pop
gs
push
test
lods
jno
aaa
mov
xchg
push
inc
push
cmp
xchg
outsb
fnsetpm(287
clc
jp
cmp
jnp
mov
jmp
int
loop
inc
dec
push
icebp
xor
in
add
xor
or
fcomps
mov
ja
cwtl
push
fsubs
push
fxch
stc
loope
sbb
mov
loop
pop
stc
xchg
adc
mov
add
or
cltd
arpl
cmp
inc
popa
cmp
add
fistps
mov
ja
sub
xor
cli
push
test
lds
popf
sbb
and
pop
cltd
mov
or
gs
cmp
xor
rolb
jle
sub
sub
xchg
cmp
aam
in
push
push
adc
and
movsl
xchg
or
lcall
sub
cltd
aad
jb
arpl
repz
inc
adc
mov
js
cli
movsl
in
and
sbb
popf
testl
divl
or
sbb
mov
push
sahf
push
cmp
add
vpand
hlt
mov
fwait
movsl
and
pop
fsubrs
jo
cli
clc
fsubs
iret
cwtl
aaa
mov
loop
pop
mov
mov
scas
jl
cmp
cmp
neg
roll
sbb
aaa
out
cltd
inc
movsl
sbb
push
sbb
outsb
stc
mov
gs
sbb
inc
pop
mov
stc
pop
fs
addr16
or
clc
mov
sub
in
or
into
sbb
cltd
inc
sbb
mov
add
adc
sbb
jae
fsts
lds
add
sti
jns
push
in
adc
lds
movsb
in
cmpsl
cmp
push
xor
cli
xchg
sbb
mov
push
mov
dec
sti
adc
jecxz
gs
cmp
xor
in
add
and
mov
jns
mov
add
push
push
rorl
mov
adc
sub
or
sbb
fcmovbe
test
push
mov
fnstcw
adc
sbb
clc
and
fidivrs
aaa
pop
cmc
or
cmp
js
mov
sbb
pop
stc
fs
push
rol
flds
fsubl
test
cmpsb
arpl
mov
scas
pop
mov
ss
push
and
call
in
stc
sbb
dec
fldl
push
inc
std
jns
cmpl
inc
gs
arpl
and
loop
add
adc
or
mov
mov
das
jb
les
rcl
xchg
cmp
pop
divb
pop
test
sti
cmc
fidivrs
inc
mov
cmp
mov
push
xchg
xchg
cmp
jo
add
cltd
pop
lcall
int3
add
clc
fdivr
ret
sbb
sbb
fcomps
xchg
adc
in
aam
jp
add
testb
mov
adc
lret
clc
mov
repz
mov
sub
inc
pop
sub
fcomi
and
scas
stc
mov
dec
cmp
add
xlat
sbb
mov
stos
mov
mov
pusha
or
movsb
xchg
push
push
jnp
fwait
xchg
fcmovu
jecxz
andl
sbb
test
jne
imul
fsubr
cs
dec
xchg
addb
fistpl
mov
mull
and
fninit
aad
arpl
sbb
mov
push
iret
gs
pop
in
movsl
cwtl
mull
pop
js
jecxz
outsl
imul
or
push
daa
cwtl
cmp
shll
in
and
and
mov
movsb
pop
xlat
lds
add
les
or
fld
add
mov
inc
inc
inc
rcrl
fxam
add
push
xchg
sbb
mov
pop
in
js
aad
in
sbb
cmc
sbb
lds
pop
sbb
xchg
ds
mov
adc
addr16
lret
iret
add
push
mov
ret
or
jae
mov
add
and
mov
mov
arpl
mov
mov
pop
jae
dec
pop
mov
sbb
cmp
loop
cli
mov
mov
sbb
adc
aaa
add
sbb
inc
jae
push
dec
arpl
mov
add
push
xor
cwtl
lahf
or
cwtl
cmp
add
jns
push
ds
cli
cmp
inc
hlt
xchg
pop
in
sti
ror
push
into
in
cmp
lds
sbb
in
negb
mov
les
imul
pop
and
loop
cmp
sbb
test
ret
mov
ja
stc
in
sbb
daa
movsb
sub
mov
jnp
adc
pop
mov
jnp
and
jecxz
jns
lods
jge
inc
pushf
aaa
loope
pop
add
es
scas
fistpll
xchg
aaa
lcall
lret
dec
cwtl
inc
mov
inc
andl
inc
jo
and
xor
loop
inc
fnstcw
sti
and
fldcw
gs
dec
push
pop
imul
cmp
add
add
fistl
ss
xor
mov
ja
movsl
jmp
pop
fisubrl
cmp
mov
lret
arpl
loope
inc
xchg
fdivrp
push
outsl
pop
cmp
sbb
fwait
in
add
cmc
xor
movsb
mov
cmp
aam
mov
sbb
pop
or
pop
in
flds
int3
dec
cmp
pop
repnz
movsl
pop
mov
movsb
xchg
ja
pop
imul
add
or
int
leave
nop
loope
add
add
and
sbb
stos
xor
inc
cli
mov
decl
cmp
mov
mov
movsb
xlat
mov
and
inc
ret
inc
stos
imul
push
xchg
jle
sbb
adcb
dec
inc
add
mov
jo
in
cmp
and
sahf
fadds
push
clc
pushf
cltd
mov
add
adc
cmp
add
add
inc
daa
arpl
add
outsl
adc
f2xm1
divl
sbb
add
or
in
add
adc
xchg
rcll
fwait
pop
sbb
shlb
mov
loop
jnp
adc
push
es
imul
addr16
movsb
xchg
mov
adc
xchg
fs
add
cli
add
and
add
scas
xchg
testl
mov
mov
arpl
add
jecxz
mov
rclb
mov
dec
xor
scas
pop
mov
divb
ja
cmp
push
mov
pop
clc
and
cwtl
and
fwait
in
pusha
xchg
sub
sti
jno
sbb
xor
lcall
xchg
inc
sti
rorb
add
subl
adc
in
and
leave
mov
add
scas
push
add
mov
add
rcrl
pop
mov
sbb
loop
mov
or
push
je
stc
add
cmpsl
aaa
add
adc
mov
jmp
jns
ja
movsb
add
add
scas
mov
sub
push
pushf
add
clc
aaa
jecxz
cmc
push
movsl
and
cmp
mov
or
mov
loope
push
mov
loopne
sbb
jbe
inc
fnstcw
ret
dec
push
js
jae
add
or
cwtl
movsb
and
cmpl
jnp
sbb
sarl
daa
pop
push
push
add
mov
sbb
cmp
pop
pushf
aaa
and
xchg
xlat
mov
adc
push
cmp
data16
imul
fdivr
imul
mov
fwait
jp
aaa
fs
jge
sbb
dec
pop
in
lcall
xorl
push
in
icebp
daa
aaa
rcr
stc
pop
rcrb
lods
pop
movsb
jecxz
shl
mov
test
idivb
andl
aas
pop
cltd
jno
and
and
pop
jnp
push
push
js
and
and
fiadds
mov
cltd
outsb
adc
movsl
and
test
jb
repnz
ja
xchg
aaa
test
pop
inc
loop
push
idivl
movsl
jmp
adc
xchg
pop
lods
xor
pop
push
push
inc
sbb
popf
pop
out
pop
push
roll
movsl
mov
lret
xlat
mov
in
into
sti
adc
pop
outsb
add
iret
add
inc
xor
jo
cmpsl
or
cltd
test
jo
fstpl
fcomi
loopne
jo
gs
cwtl
jnp
loope
add
cmp
out
leave
sbb
adc
inc
inc
push
pop
sub
pop
divb
mulb
inc
cmp
add
xchg
shl
testb
and
lds
in
sbb
pop
sbb
into
pop
ja
push
je
and
pop
lcall
roll
cli
movsb
add
xchg
jno
mov
adc
les
jb
outsl
ss
rcrl
pop
iret
arpl
mov
cwtl
or
fistpll
add
repnz
cltd
mov
fadds
leave
push
adc
push
pop
xchg
loop
gs
bound
pop
and
cmp
mov
popf
test
xchg
imul
mov
mov
out
stc
jecxz
shrl
outsl
cmp
test
xlat
in
or
adcb
movsl
jmp
arpl
jge
add
cmp
sub
xchg
shll
fistpl
arpl
popf
xlat
lds
add
dec
fadd
in
rcr
les
pusha
pop
dec
inc
xchg
pop
fwait
cli
add
add
mov
fcomps
fs
outsb
int3
test
pushf
ja
leave
fcompp
clc
cmp
cmc
cmp
and
inc
push
sbb
icebp
pop
inc
fs
mov
int3
in
add
jg
cmp
out
inc
iretw
mov
pop
scas
jmp
add
cmp
pusha
movsl
pop
mov
adc
pop
and
sbb
cmp
push
cmpl
mov
rorl
sub
mov
dec
cmp
js
adc
adcl
cli
adc
sbb
jae
sbb
test
push
and
xchg
jno
in
sbb
sbb
xchg
add
in
push
flds
clc
and
jb
push
add
fistl
in
sbb
test
push
shl
inc
in
lds
arpl
mov
mov
adc
sbb
pop
adc
popf
fstps
inc
mov
and
movsb
test
addl
pop
sbb
aas
outsb
cmp
dec
gs
stc
xlat
mov
and
in
mov
jnp
stos
mov
adc
mov
testl
and
test
ret
movsl
sbb
pushf
sahf
sti
movsl
outsb
and
pop
iret
xchg
xchg
cmp
pop
outsl
test
jnp
push
mov
leave
xchg
cltd
stc
enter
loop
outsl
push
fincstp
fsubrs
lds
push
in
push
sbb
call
test
cmp
ret
inc
shl
inc
jo
repnz
sbb
cli
les
adc
add
cmp
xchg
in
pop
dec
shl
loop
jns
scas
and
push
cmp
cli
add
add
mov
jns
xchg
mov
rclb
test
cmp
inc
jnp
test
arpl
inc
sti
sahf
aas
or
mull
mov
sub
mov
out
and
cmpsb
out
jecxz
call
cmp
cmp
add
sbb
loope
cwtl
mov
push
xor
addl
clc
sti
in
sbb
divl
cmp
jae
sbb
and
adc
pop
pop
and
clc
movsb
jae
in
xchg
popf
js
or
pop
xchg
mov
aaa
dec
pop
sbbl
add
mov
sbb
cmp
jge
arpl
in
and
movsl
loop
and
lds
cmp
and
jno
cwtl
inc
fs
mov
mov
in
xchg
cmpsl
sub
ret
iret
in
lds
movsl
xchg
xchg
fsts
test
aaa
bound
rorb
fnstcw
ja
out
xor
inc
pop
pop
or
inc
or
sub
jge
push
outsl
push
or
lds
mov
fdivs
movsb
mov
mov
cli
cmp
stc
jb
lods
or
jbe
xor
cmp
sti
jp
add
pop
test
stos
cmp
inc
cltd
mov
mov
sti
inc
push
sbb
push
dec
insb
or
imul
stc
push
pop
sbb
test
and
je
cmp
in
cmp
sbb
std
or
pop
dec
ja
das
pop
pop
popf
movsl
pushf
jno
mov
lods
jecxz
mov
xor
jecxz
test
lcall
jns
sbb
lods
stos
mov
es
icebp
fdivrl
in
mov
and
pop
xor
test
bound
mov
fldenv
dec
cmp
aaa
and
aam
jnp
cltd
mov
mov
push
push
sbb
pop
dec
sbb
movsl
sarb
mov
scas
fwait
push
arpl
pop
mov
mov
mov
mov
and
add
cmp
xlat
sti
xor
xchg
push
sbb
fidivrl
inc
pop
sbb
xchg
and
inc
cld
fdivs
daa
pop
outsb
fistpl
inc
in
cmp
add
pop
pop
dec
loope
movsb
mov
mov
lahf
loope
aaa
call
loopne
jmp
fwait
pop
in
sbb
aad
xchg
cltd
bound
hlt
add
xlat
and
adc
fmuls
das
jl
icebp
xchg
aaa
idivb
aad
add
inc
js
and
add
outsl
cmp
mov
stos
add
fimull
xchg
test
push
ficomps
xchg
xchg
jnp
sub
cmp
adc
push
je
gs
pusha
or
mov
ja
add
jnp
mov
cltd
mov
mov
stc
inc
les
cmp
add
in
movsb
sbb
mov
pushf
aam
test
or
popf
jecxz
adc
or
popf
xlat
adc
js
fwait
jns
cli
xchg
mov
flds
sbb
arpl
mov
sti
inc
adc
scas
cmp
xchg
xchg
sbb
jnp
ja
pop
loop
out
arpl
subl
mov
fsts
sbb
add
in
ja
rorb
cltd
sbb
pop
lods
ret
mov
icebp
jnp
inc
iret
movsl
push
xchg
mov
and
clc
stc
xchg
inc
enter
lds
stc
mov
rcr
push
cmp
daa
pop
movsl
sub
xchg
iret
xchg
jecxz
or
pop
or
pop
rol
push
loop
pop
fnstcw
fwait
mov
stc
xchg
cmp
or
or
mov
int
daa
push
mov
mov
cmpsb
and
sbb
pop
add
mov
inc
and
testb
add
push
fwait
loopne
cmp
add
pop
pushf
pop
sti
iret
mov
rcrb
or
hlt
lret
popf
add
cmp
push
mov
js
shl
ret
test
inc
fcoml
test
adc
pop
fwait
push
pushf
ficoml
mov
xchg
add
inc
and
jecxz
xor
lcall
arpl
adc
cmp
call
ja
cwtl
push
sub
cmp
lds
cld
push
pushf
mov
pop
popf
cld
sbb
xor
loopne
dec
arpl
pop
mov
xchg
sbb
add
test
mov
cmp
and
inc
jnp
repnz
ret
sbb
enter
cmpl
add
sahf
cmp
jo
lds
add
adc
ja
shrb
jp
fs
xor
mov
mov
fstpt
and
pop
inc
movsl
arpl
mov
mov
aam
ds
dec
cmp
sbb
loopne
in
mov
jge
adc
mov
in
pop
lcall
cwtl
add
inc
cwtl
test
js
enter
sti
xor
in
inc
cmp
sbb
sub
pop
adc
in
xlat
jno
push
sahf
push
test
sbb
xchg
cmp
cwtl
imul
cmp
and
arpl
mov
ljmp
in
mov
cmp
sahf
adc
test
mov
ret
xchg
cmp
aaa
adc
rcll
testl
jns,pt
aad
and
jnp
xor
notl
mov
cwtl
es
xchg
lret
mov
mulb
xchg
out
mov
les
js
jbe
mov
xlat
test
dec
xlat
pop
jb
pop
out
mov
jnp
lcall
add
adc
inc
out
in
inc
push
xchg
mov
and
fstps
xchg
fs
or
jo
les
push
jo
stc
add
push
test
push
push
xchg
in
gs
and
addl
pop
fldcw
xor
mov
cmp
mov
sbb
clc
adc
shlb
and
adc
xchg
shlb
xchg
and
dec
sbb
popf
pop
out
add
rolb
fsincos
mov
inc
xchg
test
aaa
jns
pop
xor
pop
and
pop
test
add
std
pop
mov
cltd
cmp
mov
or
lcall
ljmp
push
push
in
jmp
arpl
and
xchg
sti
xchg
test
mov
adc
add
popf
ja
sbb
mov
cmp
gs
sbb
jns
cwtl
sbb
pop
icebp
add
xchg
mov
push
mov
push
clc
xlat
mov
fld
push
mov
pop
jecxz
mov
fcomps
xchg
negb
adc
pop
pop
mov
jno
sti
fcmove
pop
lret
mov
fadd
or
bound
loop
iret
stc
gs
push
inc
mov
into
add
mov
lret
bound
ss
fcoms
into
cltd
jnp
pop
xor
jecxz
cmp
mov
mov
pop
jl
jecxz
cmp
lea
jno
test
loop
scas
sti
inc
add
sbb
fistpll
and
cs
jns
in
pusha
ret
rclb
ja
mov
add
sbb
sti
lock
movsl
xlat
enter
xorb
and
sahf
push
ss
jl
ret
testl
push
push
iret
push
mov
adc
sbb
lea
lret
movsl
aaa
popf
add
inc
sbb
cwtl
inc
lds
inc
aas
iret
cli
inc
inc
mov
gs
iret
pop
fsts
adc
push
gs
cmp
cmp
jnp
pop
hlt
orl
sbb
scas
xchg
adcl
cltd
leave
pop
pop
loope,pn
rclb
mov
and
aaa
pop
add
push
rcr
mov
repnz
and
repz
aam
in
rcrb
and
out
and
icebp
outsl
cmp
arpl
daa
add
inc
mov
pop
inc
scas
mov
cli
xchg
scas
mov
sbb
pop
test
lock
jecxz
sbb
jle
fildl
and
push
pop
push
lds
leave
xchg
stc
frstor
mov
clc
pop
add
xlat
out
arpl
pop
lahf
sarl
cmp
and
not
fadd
adc
inc
add
imull
push
add
sbb
fwait
add
xchg
mov
mov
mov
pop
sbb
scas
cli
repz
mov
cmp
jnp
lcall
test
inc
aaa
aad
fstps
adc
jnp
loopne
mov
inc
or
add
jnp
adc
enter
push
or
pop
hlt
push
cltd
sti
and
movsl
test
imul
jnp
inc
icebp
push
sti
push
adc
movsl
mov
mov
fsub
mov
je
inc
and
push
sbb
lods
bound
push
xchg
inc
xchg
mov
pop
or
out
ret
lds
int3
rcll
mov
or
push
mov
testl
sbb
pop
cmp
cwtl
sbb
idiv
xchg
cmp
insb
lea
or
les
pop
pop
mov
cwtl
dec
je
mov
loopne
inc
iret
notb
in
cmp
mov
and
call
jecxz
and
sbb
adc
sahf
push
loope
sbb
mov
jecxz
arpl
les
pop
shl
pop
push
test
mov
cli
mov
pop
sbb
and
addl
aas
pop
xchg
lcall
fists
iret
sub
bound
dec
inc
mov
bound
dec
xchg
inc
loope
cwtl
outsl
cld
shll
mov
xchg
xchg
jnp
add
sti
sbb
mov
xor
fwait
ja
mov
mov
xlat
push
or
aaa
pop
push
inc
push
cmp
movsb
inc
shll
ret
xchg
adcb
mov
imul
sub
jno
pushl
pop
in
mov
test
cmp
add
sbb
idivb
pop
addl
neg
inc
cmp
mov
inc
ja
pop
mov
bound
pop
sbb
push
cmp
add
add
mov
test
sbb
js
pop
pop
push
inc
outsl
pushf
rcrb
sub
fstpl
sbb
adc
sbb
or
fnsetpm(287
aaa
jecxz
rcl
in
sahf
loop
push
push
in
loope
addl
jecxz
mov
js
inc
sbb
and
push
xchg
scas
clc
in
clc
cmp
pushf
sarl
pop
mov
arpl
and
inc
sbb
mov
in
cltd
and
cmp
aas
sbb
pusha
mov
push
dec
mov
rcrb
mov
cmp
push
mov
loop
dec
cltd
arpl
int3
pop
pop
lds
xchg
push
idivb
cwtl
clc
pop
and
fildl
pop
sub
out
fwait
xor
sti
idivl
jg
out
and
pop
push
test
in
xchg
cmp
sti
xor
flds
mov
push
lea
add
inc
test
movsb
adc
adc
jnp
cmp
inc
inc
mov
push
dec
inc
sub
rolb
mov
std
mov
mov
add
aaa
in
lret
test
mov
jb
sub
dec
mov
pop
cli
push
cltd
mov
cmp
std
cld
jae
dec
aaa
and
cmp
push
add
lods
xor
and
clc
dec
addr16
dec
sbb
sbb
les
lahf
jns
lret
add
sti
and
cmc
mov
aaa
jno
negl
and
push
stc
add
pop
add
mov
or
fdecstp
les
mov
dec
mov
icebp
add
xor
movsb
add
adc
inc
and
mov
mov
inc
add
inc
pop
dec
in
fwait
add
inc
idivb
pop
xchg
push
sbb
fwait
test
mov
mov
gs
stc
sbb
cli
fcom
stc
sub
jmp
cmp
bound
addr16
imul
mov
lds
or
pop
loop
jo
test
cmp
bound
pushf
gs
movsl
cmp
and
shl
test
inc
inc
repz
add
add
mov
pop
mov
js
stc
mov
popa
loope
leave
fwait
leave
pop
xor
loop
jb
dec
inc
dec
inc
or
test
lods
xchg
rolb
sti
jecxz
rcll
inc
xchg
add
cli
or
sar
and
sbb
stc
or
add
movsb
adc
pop
push
outsb
mov
clc
cmp
icebp
sub
fcomps
jnp
jecxz
inc
in
jmp
imul
dec
mov
mov
jno
in
ja
mov
cmpsb
loop
mov
jmp
cwtl
cmp
cmp
mov
mov
mov
aaa
fsts
dec
pop
mov
out
push
cmp
push
dec
aas
mov
add
clc
testl
dec
lds
dec
in
nop
sti
and
xchg
cmp
add
xor
shl
sbb
daa
pop
shl
in
rcrb
icebp
pop
add
adc
idivb
sbb
xor
and
icebp
ja
cli
sbb
xchg
pusha
push
divl
jmp
stc
or
xchg
sub
xchg
sbb
push
or
cmpl
push
movsl
inc
adc
mov
mov
push
in
push
xor
neg
adcl
sbb
pop
inc
xor
cmc
dec
add
or
stc
clc
xchg
jns
divb
xchg
lea
fs
inc
inc
in
pop
xchg
movsl
xchg
pop
sbb
adc
adcl
aam
adc
jge
push
and
xchg
and
xor
add
and
mov
inc
testl
pop
cli
sub
inc
xor
sbb
xchg
pop
and
dec
pop
insl
fsts
cmp
cmp
cmp
sbb
dec
mov
pop
push
add
cmp
fsqrt
inc
add
fwait
xor
mov
push
sbb
ds
fistpl
gs
xchg
mov
xor
inc
cmp
mov
sub
mov
mov
jo
movsl
pop
dec
mov
in
fcomi
pop
mov
das
pop
movsl
xchg
jecxz
adc
mov
lods
lea
in
test
mov
mov
ss
icebp
push
fld
stc
jmp
aad
xor
jb
sbb
repz
add
add
mov
aad
inc
fsubrs
mov
cwtl
pop
cmp
and
gs
lock
mov
inc
pop
lds
cmp
rclb
leave
push
inc
call
sbb
push
imul
adc
xchg
push
sbb
lret
mov
aam
xchg
push
gs
push
ja
fistpl
and
xchg
stc
mov
pop
and
cmp
fistpll
gs
pushf
inc
xlat
cwtl
lcall
arpl
fs
scas
push
enter
sbb
cmp
fwait
or
mul
or
adc
std
mov
flds
sti
pop
mov
mov
jecxz
and
repz
push
leave
dec
and
pop
lds
out
mov
rorb
jns
pop
aaa
mov
cmp
vmovupd
cmc
mov
pop
dec
imul
adcl
iret
mov
cmpsl
xor
mov
mov
jmp
imul
arpl
push
cmp
sahf
push
ja
add
xlat
std
out
pop
xchg
inc
dec
in
iret
sbb
sahf
push
iret
xchg
or
ret
push
and
sub
or
sbb
clc
or
pop
dec
jg
lcall
jns
sbb
jne
sub
add
loop
aam
push
jecxz
lret
leave
fwait
add
movsb
loop
imul
jmp
add
fcomps
jp
cmp
pushf
and
xchg
mov
inc
pop
in
fistpll
adc
sub
rcl
and
pop
adc
ret
loop
or
cli
subl
clc
icebp
fadds
leave
jmp
in
aas
cmp
xchg
stc
mov
mov
gs
test
vmwrite
nop
cmc
adc
stc
add
cwtl
push
ja
xchg
cmp
into
fwait
les
sahf
mov
push
push
pop
test
fcom
cwtl
lds
js
ret
pop
mull
pop
jne
xchg
jns
aad
fadds
jle
mov
sbb
fldt
push
mov
test
pop
jno
pop
or
ret
cmp
pop
mov
movsl
aaa
inc
mov
xorl
pop
aad
sbb
and
in
and
add
jne
icebp
iret
jnp
inc
call
mov
ret
stc
ds
and
pop
add
movl
push
mov
mov
ret
mov
pop
add
loopne
in
jp
cmpsb
mov
fisubl
fcomps
fnstcw
cwtl
cmp
jae
mov
andl
test
notb
ret
pop
pop
fisubs
jb
sbb
dec
mov
daa
and
add
bound
cmp
jns
add
je
push
xchg
and
sbb
jle
js
xorl
push
movsb
ret
pop
bound
push
loope
ja
test
in
fcom
in
loope
arpl
mov
loop
push
les
sub
inc
sbb
push
cmp
aad
xchg
mov
leave
push
sbb
stc
sbb
sahf
arpl
push
xchg
cwtl
cmp
mov
shll
cwtl
jno
ds
xchg
js
sahf
dec
es
mov
sahf
loop
in
xorl
add
or
movsl
mov
xor
jns
push
sbb
jnp
xchg
lds
aaa
lds
lcall
pop
or
mov
loopne
in
addr16
jecxz
dec
mov
out
xchg
add
and
sub
jp
push
movsb
and
clc
mov
cmp
shrl
sbb
movsb
or
mov
mov
cmp
cwtl
fwait
test
fsubs
push
js
lock
xchg
idivb
inc
js
push
popa
jbe
int
leave
in
andb
pop
jns
mov
xor
adc
cmp
add
and
adc
push
arpl
clc
jecxz
or
inc
bound
daa
ds
pop
cwtl
out
pop
daa
in
outsl
pop
popf
test
arpl
jo
cmp
lahf
loope
in
loopne
add
cmpsb
xchg
lods
or
icebp
mov
in
fnstenv
cwtl
push
mov
mov
mov
xor
rclb
int
and
jecxz
cmp
data16
or
repz
fisubrs
cmp
cwtl
dec
push
adc
cmp
adc
shr
xor
test
negl
mov
add
bound
pop
fwait
cmp
scas
pop
dec
mov
cltd
stos
imul
ret
sub
js
sbb
xor
stos
outsl
mov
ja
pop
mov
in
sbbl
jnp
add
push
cltd
add
dec
push
cmp
in
fwait
mov
cwtl
sbb
pop
cmp
fprem1
cmpl
je
and
mov
pop
jecxz
clc
add
sbb
sbb
rclb
push
pop
jo
xchg
out
iret
aam
cmp
mov
dec
mov
cltd
pop
inc
cli
add
sti
adc
inc
cmp
les
lcall
loop
mov
in
push
pop
dec
or
ja
sbb
mov
movsl
sbb
dec
out
test
sbb
mov
mov
daa
test
mov
scas
sbb
sbb
jmp
jmp
sahf
mov
out
fbld
fistl
push
sbb
dec
imul
mov
sbb
mov
leave
mov
cmc
mov
test
lret
pop
in
leave
in
fnstenv
sbb
cmp
xchg
mov
pop
or
imul
movsl
shlb
scas
movsb
inc
pusha
in
rolb
arpl
test
cli
pop
push
orl
jl
cli
lock
push
cltd
stc
ret
sub
dec
outsl
mov
mov
add
cmp
dec
jnp
or
cmp
pop
mov
and
add
in
fcom
mov
and
test
shll
xlat
ret
imul
in
cmpsb
pop
cmp
xchg
gs
jno
pop
mov
mov
mov
in
and
les
in
stc
mov
orl
lds
ret
add
cmp
outsl
xchg
dec
jb
and
sti
mov
stc
pop
cwtl
fisttpll
cmp
pop
les
add
or
aaa
sarb
and
cmp
iret
add
mov
ret
in
push
mov
push
and
pop
add
in
aad
dec
inc
in
pop
mov
pop
movsb
add
pop
fmull
pop
cmp
add
les
call
movsb
data16
pop
mov
icebp
cmc
ja
cmp
pop
test
adc
imul
adc
push
movsl
inc
cli
mov
mov
int3
stc
imull
outsl
sbb
in
scas
addl
xchg
cmp
mov
and
test
inc
sti
dec
add
stc
cwtl
add
jecxz
adc
les
push
fs
mov
stc
fistpl
fwait
pop
inc
sub
fs
cmp
int
fs
imul
dec
std
xchg
pop
scas
mov
jecxz
jnp
loope
add
mov
xchg
pop
inc
movsl
mulb
add
shlb
dec
push
jns
cmp
clc
cmp
pushf
adc
outsb
fwait
jnp
adc
mov
jecxz
es
mov
scas
ret
sub
vpsrad
sbb
inc
sub
cmp
movsl
dec
ret
repz
out
fsin
sbb
sub
hlt
ret
pop
mov
insb
lock
lods
mov
and
cwtl
mov
inc
pop
inc
aas
jnp
inc
movsl
cmpsl
xor
ss
sub
cmc
out
leave
gs
inc
lahf
jl
int
add
mov
xor
and
cwtl
xlat
mov
call
fldt
mov
or
or
aas
xor
fsubs
movsb
fwait
cltd
lock
movsl
les
sbb
or
add
push
movsl
sbb
inc
in
repnz
dec
ja
daa
xor
clc
lea
mov
add
sbb
mov
movsl
and
pop
pop
testl
inc
jae
xlat
inc
inc
adc
call
loopne
loop
pop
ja
push
add
push
mov
and
out
out
pop
gs
or
test
aaa
xchg
mov
cli
cwtl
push
popf
cwtl
xor
mov
ss
push
int
push
in
arpl
push
in
les
idiv
and
mov
sbb
xlat
ret
add
es
mov
stc
cmpsb
push
sbb
js
add
cmp
or
cwtl
sti
mov
jge
jo
clc
ret
loope
sbb
loop
mov
mov
gs
add
ja
movsl
mov
or
push
loop
and
mov
adcl
addb
xor
dec
adc
adc
and
sarl
sbb
cwtl
addl
ret
cmp
and
ds
pop
jnp
mov
out
mov
mov
or
sub
dec
cmp
in
jns
add
and
and
or
rcr
fwait
arpl
and
inc
and
andl
or
cmp
mov
arpl
mov
inc
call
pop
ficomps
push
outsb
arpl
popf
mov
push
jae
cmpsb
ds
pop
aas
cmp
jg
cmc
fadds
mov
mov
fwait
adcl
jecxz
rorl
movsl
push
sahf
sbb
int3
les
out
lea
xor
fcomp
aaa
or
sti
push
adc
in
aad
adc
mov
and
notb
sti
inc
test
mov
cmc
xchg
and
or
ds
jle
loop
sahf
sahf
and
cmp
or
pop
loope
fnclex
push
sbb
sbb
les
stos
fsts
lock
xchg
outsl
mov
sbb
cwtl
les
fcom
negl
scas
sarb
add
test
and
int
xor
sahf
xlat
adc
mov
cli
pop
aaa
popf
mov
std
iret
cmp
outsl
mov
stc
loopne
cmp
xchg
cltd
jnp
movsl
rol
push
add
pop
and
cmp
in
test
adc
sbb
xlat
mov
aam
cmp
add
sbb
nop
push
mov
arpl
out
xlat
adc
add
inc
xchg
data16
adc
jecxz
pop
fwait
test
and
inc
fucomip
js
add
xchg
int3
outsl
lock
add
imul
mov
and
mov
xchg
ret
shl
sub
mov
sbb
mov
pop
and
pop
mov
insl
sub
fsubs
dec
jecxz
js
push
ja
outsb
cmc
dec
inc
sbb
icebp
xchg
ret
movsl
pop
jecxz
jno
js
icebp
pop
inc
or
add
mov
mov
stc
jno
clc
push
xor
sub
and
lea
iret
mov
sbb
cltd
mov
clc
in
pusha
jns
loop
mov
stos
shrl
mov
add
out
fmull
mov
add
not
repnz
add
repz
imul
stc
flds
mov
ret
testb
xlat
pop
cwtl
and
sbb
pop
cmpsb
dec
stc
cmpsl
test
add
or
test
xor
sub
mov
clc
mov
sahf
fdivrl
les
lds
shrb
mov
pop
repnz
std
rolb
lds
mov
adc
fstps
jns
sti
fists
cwtl
add
and
lds
adcl
loop
cmp
ret
or
cwtl
jns
pop
push
negl
mov
mov
sub
imul
jmp
push
sti
sbb
add
sbb
test
jno
dec
mov
lds
cmp
fs
cmp
mov
add
sbb
dec
orl
or
popf
add
fwait
mov
test
ja
cmp
iret
add
xlat
fwait
loope
mov
imulb
and
leave
mov
xchg
test
in
add
inc
fmuls
or
pop
dec
mov
ljmp
fwait
ret
and
cmp
push
loop
mov
enter
loop
and
add
mov
shl
sti
add
sub
rcl
clc
shrl
js
xor
bound
ljmp
xchg
stc
out
fwait
rcrl
dec
test
add
pop
scas
adc
mov
shrb
adc
lds
add
mov
pop
mov
hlt
push
test
pop
push
xlat
cmp
and
mov
inc
sahf
and
lds
mov
cmp
test
pop
andl
gs
movsb
outsl
or
dec
push
or
stc
push
std
mov
lods
add
mov
aaa
lea
sbb
and
fwait
dec
repz
add
mov
cmp
push
mov
xchg
leave
push
ret
sbb
mov
inc
mov
fnstcw
dec
mov
and
shl
dec
mov
dec
cmp
xchg
mov
inc
iret
and
cmp
inc
outsl
lock
push
andl
mov
inc
repz
addr16
push
mov
fwait
stc
aad
vpshuflw
jle
push
ret
cwtl
jecxz
jge
mull
sbb
mov
rorl
fwait
out
leave
add
into
push
sub
das
jp
ja
lds
mov
cmp
add
mov
or
pop
and
push
cmp
cmp
push
mov
outsl
jns
inc
push
mov
jo
push
ret
inc
xchg
testb
das
cmp
cli
or
inc
mov
js
xchg
cltd
and
add
in
xlat
movsl
pop
stc
sbb
sbb
jns
cmp
inc
sub
stc
add
sbb
mov
fnstenv
adcl
fnstcw
adc
lock
lds
test
loop
in
sbb
daa
adc
sbb
dec
mov
jl
jns
js
push
addr16
cmpsb
mov
push
dec
stc
push
fsubrl
lret
test
cli
inc
jecxz
xchg
and
adc
cmc
jnp
ja
pusha
jle
arpl
es
fbld
lds
dec
add
fs
sbb
cmp
and
sub
pop
leave
pop
mov
mov
push
outsb
inc
stc
sbb
jns
push
loop
pop
fmulp
fldenv
repnz
std
mov
int
scas
arpl
daa
add
inc
push
scas
pop
sbb
mov
fstps
sub
test
pop
mov
xchg
lds
inc
ja
xor
in
cmp
mov
fildl
pop
sbb
fldcw
ficompl
push
xchg
pop
add
loop
popa
sbb
mov
jbe
jns
xor
push
in
cmp
xor
cmp
aaa
or
cltd
cmp
out
ja
jnp
movsb
xor
dec
rcrl
lds
cltd
test
and
sti
add
adc
scas
xchg
sbb
mov
test
pushf
mov
test
dec
icebp
sub
add
das
xchg
mov
movsl
push
pop
loop
sbb
pop
test
les
outsb
dec
insl
sbb
jg
cmpl
push
std
in
in
mov
std
dec
mov
jmp
and
test
hlt
popa
lods
inc
and
fdivs
pop
and
mov
mov
jecxz
push
scas
outsb
pop
outsb
sti
cmp
es
mov
cmp
sbb
xlat
adc
or
xchg
add
fadds
or
jnp
add
stc
jecxz
icebp
ret
and
add
pop
lds
lods
mov
ret
sub
ja
sbbl
inc
stos
scas
jl
pop
mov
sbb
dec
cltd
xchg
ret
add
jmp
aaa
js
sahf
ret
cmpl
inc
fildl
sub
mov
in
adc
xlat
adc
sub
movsb
inc
mov
mov
sbb
cmp
jbe
or
sarl
and
mov
cmp
test
lds
and
sbb
jmp
in
mov
out
movsl
scas
mov
mov
les
fwait
test
jecxz
scas
js
pop
and
dec
imull
fucomi
scas
mov
je
sbb
mov
les
xchg
shll
or
lods
jne
sti
stc
imul
inc
icebp
push
push
push
xchg
dec
cwtl
xor
or
xchg
lds
scas
bound
adc
shll
xlat
add
ret
xchg
mov
cmpb
stc
pop
mov
testb
xchg
clc
aaa
jle
inc
mov
ret
push
loop
outsb
in
movsl
sarl
flds
mov
push
enter
pushf
shr
lea
xchg
ret
test
test
call
popa
and
in
sti
jb
mov
jecxz
test
out
daa
imul
ds
lds
cli
xor
pop
arpl
cwtl
xchg
adc
test
loopne
sbb
inc
mov
add
in
test
and
clc
add
mov
ja
and
xlat
sbbl
sub
imul
and
add
adc
in
adc
sbb
cmp
inc
movsb
imul
in
iret
lcall
inc
adc
add
movl
cwtl
cmp
negl
lds
add
xor
aaa
xchg
js
xchg
push
dec
jae
pop
sub
popf
ficompl
mov
test
sbb
fisttpl
push
aaa
mov
and
in
jmp
test
pop
pop
push
rol
ret
int
jne
sbbl
cmp
out
fimull
xchg
or
mov
jl,pn
adc
sbb
cmp
shrb
js
mov
movsl
sbb
fninit
test
in
loope
in
add
mov
arpl
ljmp
pushf
xchg
sbbl
ret
negb
inc
clc
rcll
jle
call
mov
std
sbb
add
ret
or
jo
jecxz
cmpl
out
dec
sahf
jb
sub
sub
aaa
mov
addr16
ja
ficompl
and
out
pop
push
inc
mov
adc
negb
movsl
add
push
pushl
les
or
or
add
xchg
inc
int
mov
push
sub
inc
sbb
bnd
sbb
fldcw
jmp
fmull
cmp
mov
sti
fistpll
push
cltd
and
lea
in
xor
inc
mov
xchg
push
cmp
mov
sub
xor
inc
lds
popf
or
loop
sbb
and
cmp
lds
rcl
out
scas
negb
addl
mov
test
sarb
aam
lea
fadds
mov
fprem1
in
sbb
mov
js
xchg
push
push
fstps
movsb
xchg
fnstenv
mov
inc
mov
pop
mov
push
adc
inc
xchg
sub
andl
fs
pop
les
rcr
push
enter
and
add
cmp
push
loop
add
inc
in
jmp
mov
pop
lahf
sbb
rorb
push
fwait
leave
adc
testb
clc
test
addl
fsubrs
sti
adc
xchg
std
or
inc
movsb
cmp
test
sahf
adc
fs
add
fadd
cmp
outsl
inc
lock
push
scas
add
adc
les
push
dec
push
negl
inc
clc
fwait
mov
mov
mov
arpl
jecxz
pop
add
js
mov
aaa
mov
cltd
rcr
inc
and
kmovb
aaa
insl
adc
dec
outsl
cmp
mov
dec
in
popa
hlt
negl
sub
inc
dec
sbb
jecxz
sub
gs
push
arpl
in
add
test
xchg
pop
pop
ss
push
jecxz
gs
pop
adc
cwtl
fdiv
jnp
std
std
dec
mov
jle
hlt
mov
test
mov
mov
cmp
cmp
or
movsb
insl
icebp
add
test
ds
cmp
sub
repz
jecxz
sti
aam
or
fdiv
cs
mov
stos
fstpt
scas
lods
gs
ja
outsb
cltd
inc
or
sbb
dec
rcl
sub
stos
mov
dec
and
divl
push
test
movsl
add
mov
add
mull
add
sbb
flds
mov
pop
fisubrl
push
cmp
and
dec
sbb
cwtl
push
mov
pop
xlat
shlb
or
pushf
aaa
pop
xchg
pop
push
jl
shll
jecxz
icebp
jns
daa
inc
pop
push
lret
test
inc
inc
iret
sbb
pop
mov
cmpsb
mov
fiaddl
ret
push
idiv
loop
scas
push
ljmp
xchg
push
enter
pop
mov
cmp
pushf
lret
jno
loop
mov
and
add
or
mov
cmp
inc
flds
test
cltd
jmp
daa
aaa
stc
mov
pop
pop
push
jns
out
js
mov
sbb
lds
add
inc
push
xlat
mov
cmp
sbb
stc
mov
mov
cltd
loop
and
jnp
or
arpl
call
pop
loop
iret
fwait
pop
scas
xchg
repz
mov
mov
lds
fadds
fwait
divl
iret
jle
xor
cmp
sbb
jle
movsl
lds
cli
and
inc
inc
sbb
fs
pop
sti
inc
and
mov
in
pop
fisttpl
or
stc
sbb
pop
adc
and
faddl
gs
pop
xchg
hlt
push
pop
scas
cmc
loope
mov
cmc
pop
ficomps
pop
gs
leave
and
repnz
pop
divb
les
push
mov
inc
cmp
mov
jne
pop
sbb
loope
inc
add
mov
adc
sbb
arpl
idivl
or
push
pop
lcall
xor
in
sbb
cwtl
add
out
mov
inc
ja
and
jmp
inc
aas
aam
add
outsl
mov
sub
lock
js
aam
arpl
xor
scas
push
addb
rcl
pop
data16
js
push
add
lret
cwtl
iret
jo
ds
shlb
mov
sbb
cli
test
cmc
cmpsb
mov
icebp
xchg
clc
aaa
inc
cli
sbb
xlat
fcmovnbe
push
test
iret
sbb
notl
dec
sahf
fdivrs
sub
and
out
in
mul
mov
fdivrs
sbb
xchg
les
lods
xchg
das
cltd
and
loopne
cli
icebp
jl
add
outsl
sbb
pop
repnz
add
sbb
mov
jmp
fwait
fwait
cltd
sti
sahf
mov
sub
adc
andl
dec
cmp
sbb
or
pop
test
popf
insl
mov
pop
mov
lds
add
pop
cltd
ja
pop
adc
cli
idivl
fldl
jb
jmp
push
dec
fsts
xlat
cmp
dec
mov
jecxz
mov
pop
test
push
in
add
sti
fisttpll
imul
push
lock
jmp
std
bswap
sbb
xchg
add
sbbl
loopne
jns
inc
push
stc
aad
or
xchg
cmp
lock
and
adc
loop
psubq
pop
sbb
push
sbb
mulb
pop
push
mov
andl
fnstsw
sub
xchg
fwait
mov
movsl
les
xor
mov
jecxz
sahf
add
iret
mov
mov
add
imul
rcr
sub
xchg
cli
mov
icebp
mov
test
xorl
sbb
pop
or
cli
push
sti
cltd
fwait
push
stc
flds
xlat
xor
stc
movsl
sbb
ljmp
in
inc
adc
sbb
dec
stc
sbbb
or
fwait
sbb
arpl
cmp
xchg
cmp
add
test
dec
mov
mov
push
adc
and
div
adc
xor
inc
or
mov
or
add
adc
std
push
fwait
adc
add
or
cmp
ja
cli
and
popa
cmp
cwtl
movsl
inc
cmp
in
fldenv
iret
mov
jecxz
jns
cmp
ja
jp
pop
gs
jae
or
push
sub
jle
jecxz
fmuls
gs
push
xor
out
mov
test
mov
fadd
lea
pop
insl
fnstenv
ret
cmc
and
add
sub
adc
aas
scas
int3
or
inc
leave
mov
mov
arpl
movsl
frstor
xchg
ret
test
cmp
and
mov
push
sbb
icebp
ret
sbb
push
mov
imul
adc
stc
xchg
and
sbb
fsts
orb
inc
xlat
das
mov
and
sbb
xor
adc
push
stc
push
dec
cli
mov
cmp
outsb
ja
mov
cli
mov
sbb
jnp
inc
pushf
fstpt
outsl
loop
cmp
lret
outsb
inc
sub
xchg
mov
pop
fisttps
adc
fcomps
lds
sbb
xchg
sti
or
or
sbb
sbb
sbb
push
cwtl
or
xor
arpl
in
rcll
cmp
cmp
and
cwtl
sbb
icebp
xor
fsts
leave
jl
add
lds
lcall
les
sarb
xor
movsl
js
jno
cmp
test
scas
fwait
cmp
sahf
fildl
sub
ja
das
ss
cltd
pop
mov
push
out
push
sbb
inc
ss
insb
pop
push
enter
aam
in
cwtl
sbb
dec
cmp
mov
loope
sbb
sbb
int3
add
lock
xlat
and
fwait
xor
in
xchg
test
push
fldenv
jae
dec
movsl
xchg
pop
mov
fcomps
movsb
xor
inc
hlt
inc
in
mov
push
pop
and
xchg
mov
mov
adc
or
cmp
dec
cwtl
mov
movsl
aaa
and
test
sbb
decb
and
pop
fwait
sti
fstps
std
add
cmp
jnp
fadds
dec
stos
adc
cmp
cmpsl
mov
add
fwait
or
pop
popf
es
popa
mov
movsl
jnp
add
sahf
fsts
test
pop
pop
in
arpl
adc
fwait
sbb
lret
push
imul
clc
sti
and
pop
pop
xchg
mov
sbb
out
pushf
mov
enter
aad
loope
cli
notl
out
in
sub
jo
cld
in
xorl
pop
outsl
xor
add
ret
jg
push
out
les
mov
in
vpsubd
rcll
sbb
or
cmp
lret
mov
push
cli
jb
rorb
pop
adc
jmp
mov
leave
sub
mov
and
push
aam
fisttps
cmp
pop
or
mov
mov
push
jmp
into
test
add
fs
mov
addl
inc
iret
adc
mov
or
mov
js
add
xor
scas
sbb
sbb
popf
and
scas
fs
ficompl
and
jg
xchg
add
test
cmp
lahf
loope
push
iret
inc
iret
jg
test
cmp
sbb
jnp
pop
add
mov
sbb
addr16
add
xor
mov
inc
cwtl
and
push
pop
xchg
mov
scas
pop
sbb
test
clc
arpl
cmp
jne
cmp
sbb
aad
lea
or
add
push
sbb
push
ret
movsb
adcl
add
sbb
sbb
adc
inc
call
inc
arpl
adcb
fs
jp
mov
test
sbb
mov
add
mov
arpl
aas
sti
push
ja
mov
leave
pop
push
in
pop
les
movsl
pop
cltd
push
pop
clc
jnp
mov
mull
ret
shl
push
imul
adc
adc
movsl
push
cmp
pop
or
movsb
cmp
cwtl
rcrl
in
outsb
sbb
add
shl
mov
test
inc
orb
adc
mov
lret
rcrl
and
mov
pop
lcall
jnp
test
pusha
fadds
sar
inc
jae
mov
xor
in
fdivr
adc
inc
sbb
pop
xlat
cwtl
test
adc
push
dec
stc
sarl
mov
pop
dec
pop
inc
mov
jns
cmc
in
add
add
testb
bound
sahf
mov
repnz
test
cmp
mov
dec
add
mov
in
xor
adc
and
and
idiv
or
sub
xlat
xchg
xlat
xchg
push
inc
fwait
add
lcall
neg
sbb
inc
adc
outsb
clc
jns
sbb
dec
addl
add
push
pop
dec
test
push
mov
std
fs
pop
mov
mov
pop
inc
fs
mov
mulb
mov
mov
xorl
push
test
lds
inc
cmp
ss
fwait
outsb
test
pop
mov
and
loop
test
pop
push
cwtl
pop
push
and
sahf
fs
push
cli
or
icebp
inc
cwtl
add
adc
fistps
ret
inc
jge
and
andl
sti
adc
cli
inc
cmp
mov
rcrb
jo
filds
and
lcall
pop
fistl
inc
test
popf
inc
cwtl
sbb
bound
jns
movsb
cs
fs
imul
int3
repnz
and
dec
xlat
mov
jp
or
push
mov
pop
add
push
lods
and
push
movsl
mov
in
aaa
jg
into
cmp
arpl
cmpsl
stc
or
fsubs
mov
loope
fildl
hlt
xor
add
subl
cli
cltd
mov
cwtl
aaa
jo
dec
jecxz
fdivrs
aam
lahf
pusha
rcrl
test
enter
outsl
mov
shlb
aaa
scas
call
or
fld
negb
add
cmp
mov
mov
xor
and
or
in
test
or
push
rolb
rclb
add
adc
inc
sti
lret
fnsetpm(287
mov
sbb
popa
icebp
sbb
js
ret
cmc
jecxz
out
mov
scas
rorb
sti
sbb
mov
aaa
mov
movsl
in
in
sbb
push
in
cltd
addl
mov
jb
cli
xchg
out
jmp
push
cwtl
iret
mov
sbb
xchg
fildl
fistps
in
cmp
pop
xchg
jnp
cmp
mov
sbb
les
pop
sbb
insb
adc
test
cmp
in
and
lods
add
cmc
or
add
dec
push
lret
pop
shl
and
pop
fwait
pop
cmc
jo
sarl
inc
mov
mull
outsb
and
fldenv
xchg
xlat
adc
jmp
orl
jb
repz
sbb
xchg
mov
andl
sub
sbb
and
jecxz
cmp
jnp
outsl
mov
lds
js
jmp
and
movsb
and
mov
leave
cltd
pop
adc
push
iret
ljmp
mov
cmp
mov
push
xchg
push
jecxz
lret
pop
cli
gs
add
mov
jnp
sub
mov
cmc
mov
push
fsubs
cmp
xor
imul
add
inc
in
aam
mov
pop
mov
pop
add
pop
sahf
les
adc
mov
add
or
jecxz
ret
and
sub
out
sbb
testb
arpl
adc
cmp
mov
add
xchg
std
dec
sbb
loop
mov
mov
rcll
and
add
pop
add
ret
aad
sbb
bound
iret
test
and
lds
add
loop
sbb
loope
or
pop
jp
and
gs
add
sti
outsl
inc
scas
andb
mov
xchg
and
dec
rcrb
cwtl
movsb
fs
in
or
arpl
test
dec
rcrb
and
negl
stc
mov
hlt
push
sbb
in
repz
jb
xchg
add
lods
mov
arpl
arpl
scas
int
aaa
jmp
cmp
jnp
popf
inc
gs
adc
and
mov
out
add
cwtl
add
stc
hlt
test
sahf
fwait
rol
pop
mov
aam
aad
cmpl
adc
inc
mov
jmp
mov
insl
cmpsb
jg
lea
shlb
push
push
push
movsl
push
mull
xor
clc
test
jbe
iret
bound
mov
xchg
push
sbb
loop
loopne
mov
test
add
fcmovnb
add
in
lods
and
pop
mov
fcmovnbe
mov
adc
xlat
jae
push
xchg
pop
sbbb
sbb
lcall
push
movsb
jle
movsl
or
cwtl
pop
icebp
jns
test
fwait
leave
in
add
dec
push
cltd
adc
pop
sbb
cwtl
js
outsb
inc
aaa
mov
inc
add
and
inc
jg
movsl
and
test
mov
jno
pop
cmp
add
mov
inc
sbb
negl
or
pusha
rcl
cltd
inc
mov
sahf
mov
sub
or
cmp
lea
cwtl
into
sbb
cwtl
push
mov
pop
cmc
mov
cltd
xor
push
and
call
ret
push
pop
sti
pop
add
idivb
pop
jg
fdivl
cmp
inc
and
mov
andl
sbb
cmp
xchg
mull
fs
aas
outsl
stc
lds
js
xchg
leave
and
mov
dec
mov
add
inc
xchg
js
add
mov
cmc
divl
ret
mov
add
and
aas
push
pop
push
testb
pop
and
outsl
pop
sarb
inc
add
mov
mov
sbbl
cmp
in
andl
rclb
inc
sbb
arpl
rcr
fistpl
movsb
mov
mov
push
mov
cmp
fdivrl
sbb
jmp
or
and
pop
or
pop
mov
mov
inc
int3
out
fistl
sahf
loop
test
jecxz
sti
test
sub
fdivrs
faddp
jge
loop
push
cli
sbb
das
mov
sub
fcoml
imul
call
add
and
testl
aaa
add
ret
outsb
fcomps
inc
and
sahf
outsl
gs
out
pop
pop
test
jnp
cmc
in
inc
sbb
negb
mov
cmp
in
push
ficoml
ds
push
pop
push
lret
pop
fildl
test
ja
cli
js
xchg
push
notl
push
dec
dec
test
pop
inc
testb
cli
add
push
pop
lods
and
out
add
mov
mov
fs
push
mov
jp
fmuls
repnz
loop
into
popf
sub
out
pop
in
mov
jnp
ja
int
ret
jl
testl
mov
and
scas
and
stc
test
cmpsl
xchg
jmp
jp
lcall
sti
cltd
cli
lods
scas
mov
sbb
sbb
sti
jne
push
mov
movsl
not
xchg
pushf
loop
pop
jmp
cmp
cmpsb
inc
addl
ljmp
sti
xchg
sahf
add
clc
ret
fcomps
ret
sbb
cwtl
movsl
dec
mov
shlb
cmp
scas
fistpll
adc
mov
mov
scas
push
fs
xchg
cwtl
pop
movsb
lret
add
aaa
lock
lds
movsl
or
or
inc
and
outsb
out
negb
clc
js
jle
add
mov
mov
in
cmp
lret
xchg
push
xchg
in
sbb
pop
and
cmp
inc
adc
jae
inc
and
inc
push
movsb
or
or
or
add
stc
pop
movsl
push
arpl
add
stc
lods
test
pop
and
ret
cli
popf
xor
movsb
in
movsl
repnz
arpl
dec
sti
inc
push
aad
add
inc
mov
icebp
mov
and
movsb
cmp
sub
fnstenv
cwtl
aad
lods
inc
nop
add
dec
aad
add
push
mov
sub
lds
cmp
fwait
xchg
and
repnz
pop
dec
add
xchg
push
fimull
test
fbld
out
jge
inc
in
and
jns
test
pop
inc
out
in
pop
loope
aaa
adc
fwait
add
mov
fwait
sbb
or
fdivrs
ret
xor
xor
inc
xchg
in
outsl
movsb
loop
cmp
mov
cltd
lock
iret
add
mov
xchg
add
adc
cmp
sti
push
push
pop
cmpl
shl
add
pop
cli
cmp
orb
pop
test
stos
mov
test
push
xchg
fcmove
inc
jecxz
scas
in
push
xchg
and
arpl
loop
pop
sti
dec
and
add
cmp
add
mov
bound
sub
imulb
cmc
sub
in
jno
xor
inc
sti
pop
add
popf
mov
xchg
in
or
arpl
add
in
fldt
xor
push
das
addl
sahf
sti
adc
cmpsb
jg
mov
cmp
and
inc
jecxz
movsb
pusha
fs
jmp
mov
iret
mov
clc
mov
cwtl
loope
gs
jns
xchg
test
push
and
xlat
jnp
or
push
and
gs
arpl
jecxz
add
and
pushf
adcl
pop
sub
sti
or
jecxz
inc
les
or
mov
fwait
cwtl
sbb
adc
xchg
push
stc
mov
adc
rolb
pop
aam
and
fidivrl
outsb
pop
ret
test
pop
cltd
cmp
enter
sbb
inc
aaa
xor
inc
ja
pop
gs
xchg
xchg
pop
out
mov
xchg
push
stos
out
add
nop
adc
push
std
xchg
add
inc
in
pop
pusha
sahf
cwtl
mov
and
js
push
arpl
jae
out
jnp
stc
imul
mov
inc
adc
cmp
pop
inc
pop
cwtl
sbb
negl
mov
jecxz
xor
push
rclb
je
in
jle
cli
ds
lcall
fwait
hlt
and
mov
inc
mov
outsb
jnp
bound
fstps
add
clc
adc
or
das
cmp
nop
push
sti
xchg
cmp
add
push
mov
jl,pt
ds
inc
inc
mov
loop
mov
enter
ja
cmp
test
clc
adc
xchg
cltd
mov
inc
cmp
scas
int
arpl
iret
out
daa
sbb
cmp
sbb
xchg
cmp
mov
inc
xlat
push
or
dec
and
clc
pop
popa
adcl
js
ja
add
cmpsl
repnz
inc
or
mov
cli
add
ret
les
notl
inc
js
stc
aaa
std
cmp
mov
lds
inc
and
gs
xchg
push
pop
in
add
pop
ret
push
mov
lcall
push
clc
mov
leave
and
enter
cli
add
in
jne,pn
scas
inc
push
mov
jae
enter
in
loope
add
or
mov
add
push
push
gs
movsb
xchg
je
loop
popa
cmc
in
lret
adc
pop
push
fcoml
push
mov
ja
add
push
cwtl
mov
movsb
scas
fcomps
and
inc
or
popf
mov
pop
movsl
and
out
inc
cmp
shr
pop
in
push
and
flds
cmp
idivl
sbb
sbb
pop
jg
mov
pop
push
insb
aaa
inc
fadds
mov
test
aas
clc
adc
test
pop
mov
pop
movsb
cltd
movsl
loop
cwtl
xchg
fnstcw
in
addb
mov
jle
adc
sahf
xor
push
into
outsb
add
and
add
repz
aad
push
and
sbbb
call
js
add
add
pop
mov
arpl
lds
shl
jecxz
pop
push
add
push
xchg
arpl
push
mov
fisttps
mov
adc
test
jecxz
addr16
out
push
js
jge
fldenv
and
adc
negb
mov
in
inc
xchg
cmpsl
stos
add
loop
add
jns
js
xor
ret
pop
leave
pop
inc
add
push
pusha
fiadds
inc
stc
sub
addl
dec
les
and
shlb
xchg
inc
sti
imul
push
adc
jnp
jle
pop
outsb
lcall
in
sbb
fistps
nop
test
or
js
jnp
icebp
out
mov
movsl
add
and
adc
ret
mov
pop
dec
dec
ror
aaa
and
ds
scas
cmp
data16
sti
xor
int
leave
xor
clc
xchg
aam
aam
and
sbb
pop
cwtl
pop
pop
cmpb
or
mov
pop
pop
or
lods
adc
cltd
mov
sub
loope
loope
add
mov
jnp
scas
mov
and
sbb
cmp
and
dec
fsubr
les
in
roll
cmp
push
xchg
inc
sahf
icebp
sub
orb
xchg
pop
rclb
sbb
cli
sbb
fldenv
mov
and
sti
clc
adc
loope
mov
fs
jle
jecxz
pop
enter
and
dec
je
jns
push
cmp
cmp
fs
movsb
sahf
not
in
sbb
push
divl
pop
ds
xorl
ret
mov
fwait
pop
clc
gs
test
jns
aaa
sub
ret
pop
mov
sbb
sbb
push
clc
arpl
add
fcmovnbe
outsl
mov
arpl
mov
fs
or
push
das
push
push
add
cli
sti
enter
popa
add
inc
aam
mov
push
sbb
fildl
fldcw
cmp
sbb
mov
lods
mov
dec
out
inc
fldt
cmp
mov
sahf
inc
cmp
fstl
push
popf
pushf
or
sbb
jno
inc
jno
movsb
js
scas
mov
arpl
add
mov
or
push
cltd
dec
ret
into
test
sar
pop
stc
ret
mov
fisubl
sbb
xlat
pusha
push
jo
ja
pop
sbb
push
mov
pop
adc
testl
and
inc
mov
mov
sarb
xchg
in
mov
rorb
push
xor
mov
sub
and
js
sbb
ret
cwtl
in
insb
pushf
pop
sbb
jno
mov
stc
or
xchg
in
sbb
mov
mov
cwtl
and
inc
ljmp
mov
or
cmp
inc
ret
sti
aaa
jae
inc
inc
int3
jecxz
les
push
aam
jl
bound
ss
cmp
lock
andl
test
adcl
pop
lds
in
outsl
arpl
test
and
rep
and
je
adc
jns
cmp
mov
push
cmp
test
ja
add
or
add
outsb
pop
stc
adc
pop
imul
jl
adc
sbb
dec
push
adc
pop
push
ret
push
push
sbb
adc
xchg
mov
jecxz
push
pop
in
out
xor
sbb
mov
pop
nop
mov
mov
sbb
fwait
cmp
test
nop
cwtl
push
ja
add
or
bound
fcomp
add
dec
aam
xchg
xlat
aaa
mov
add
movsl
sti
mov
mov
jl
mov
dec
cmp
test
sbb
pop
inc
jb
push
sbb
sti
xchg
jae
inc
aas
daa
out
cmp
adc
test
iret
inc
sti
adc
fnsetpm(287
sbb
mov
addl
pop
mov
mulb
flds
push
inc
push
sub
movsl
pop
outsl
xchg
adc
lds
hlt
mov
adc
movsl
ret
les
jns
inc
ja
mov
gs
adc
cwtl
fistpl
jae
adc
adc
fcomps
cmp
js
sar
push
jno
and
cli
and
loop
lds
addl
add
pop
push
sub
adc
dec
aaa
sti
rclb
fcmovnbe
gs
sbb
jge
mov
test
cwtl
xchg
jnp
sti
test
ret
push
dec
jno
mov
pop
pop
lds
jo
cwtl
xacquire
mov
cmp
add
shlb
cmp
rolb
and
push
movsl
jl
inc
and
outsl
or
add
jecxz
mov
cmc
pop
call
or
sbb
push
sti
mov
add
addl
pop
sbb
push
test
lds
xor
ja
push
jns
or
fcmovnb
sti
xor
pop
push
dec
add
fwait
loop
sub
sbb
in
int
jbe
popa
arpl
andl
adc
and
fwait
or
or
rcrb
inc
xchg
arpl
cwtl
push
cmc
lds
pop
hlt
leave
xor
mov
and
scas
cmp
cmpsl
les
das
xor
mov
sti
aaa
adc
popa
insl
in
sti
inc
push
sahf
inc
arpl
imul
push
test
cmc
sti
and
mov
jmp
mov
add
mov
outsl
dec
push
sar
mov
push
adc
cmp
stc
cmpsl
mov
popa
addr16
inc
pop
mov
inc
sarb
or
or
imul
test
cld
adc
notl
xchg
or
pop
popa
jle
dec
xchg
test
test
push
push
dec
inc
cmp
out
test
or
xlat
cmp
and
pop
jecxz
push
arpl
fnclex
sub
xchg
mov
std
ja
out
mov
testb
xlat
add
ficomps
push
stc
xchg
sbb
mov
sbb
push
popf
add
push
dec
ret
dec
xchg
mov
andb
and
loop
stc
ret
hlt
testb
roll
fwait
xlat
push
xchg
mov
out
in
popf
fistpl
jo
jnp
adc
and
adc
int
leave
xor
adc
das
cwtl
xor
and
sub
in
add
fwait
adc
movsl
sub
cmc
stc
add
pop
push
lcall
insl
push
jecxz
cli
cli
add
inc
push
in
test
leave
sbb
test
clc
add
inc
xchg
adc
cmp
pop
shrl
stc
xor
add
mov
pop
sbb
pop
ja
aaa
add
mov
adc
xchg
and
push
rolb
push
aas
cwtl
xchg
movsb
sarl
pop
adc
popa
idivl
fnstcw
ljmp
xchg
push
jl
shl
add
pop
outsb
sbb
mov
cmp
jnp
stc
mov
mov
inc
stc
fcomps
jo
loop
mov
fcomp
cmp
idiv
xor
enter
fistl
push
int
mov
mov
fsubs
dec
jle
jb
pushf
sbb
rolb
inc
negl
arpl
cli
lock
sbb
push
fs
push
jns
fwait
mov
mov
movsb
pop
sub
je
and
test
pop
inc
cmp
fwait
sub
cli
mov
repnz
test
pop
lea
sbb
repnz
lods
in
ret
or
notb
mov
flds
sub
mov
mov
rorb
and
inc
shl
cmp
clc
les
adc
sbbb
push
pop
jecxz
push
sbb
outsb
inc
and
adc
push
push
and
fnstcw
dec
mov
fs
xlat
or
add
adc
cmp
and
lds
mov
fs
or
mov
sbb
dec
push
sahf
adc
mov
or
inc
test
loop
cwtl
fcomps
test
pop
arpl
test
outsl
xchg
sbb
fsubp
add
pop
testl
into
jae
scas
dec
sbb
insl
inc
test
aam
inc
or
jmp
hlt
push
dec
or
add
xchg
or
mov
test
cli
insl
xlat
jns
testl
std
xlat
pop
jmp
mov
ss
add
mov
in
adc
fidivl
stos
mov
aam
pop
mov
pop
push
jns
mov
xchg
mov
add
push
pop
sarb
mov
dec
fstps
pushf
insl
pushf
push
mov
ja
inc
or
movsb
cli
xchg
or
xchg
add
inc
cmp
add
sahf
in
data16
inc
adc
or
aad
inc
pusha
leave
ret
sub
pop
jns
add
adc
stc
pushf
sti
pop
add
negl
cltd
loop
cmp
jl
mov
mov
or
fwait
mov
das
dec
cmp
adc
sbb
fwait
repnz
jo
rcr
fcmovnu
push
push
sti
mov
cwtl
mov
sub
ret
mov
xchg
inc
cmp
cwtl
arpl
nop
mov
sbb
dec
ret
push
xor
pop
add
add
add
xchg
mov
popf
push
pop
jo
movsl
imul
dec
aaa
in
and
insl
icebp
inc
ret
test
mov
mov
enter
pop
out
pop
and
mov
js
add
and
aaa
fadd
and
sbb
or
pushf
xchg
gs
cltd
addr16
dec
xorl
jmp
pop
jae
mov
adc
jge
lock
cmpb
push
fs
xchg
ror
pop
movsb
xchg
int
leave
movsb
mov
fldcw
cmp
add
in
pusha
adc
push
jecxz
aas
in
arpl
or
mov
icebp
fisubrl
iret
jp
lret
push
inc
outsb
fsts
cmp
xlat
out
xchg
cmp
ja
adc
leave
mov
push
dec
outsb
mov
mov
and
dec
test
and
or
and
mov
inc
push
pop
and
cmp
movsb
movsb
and
xor
cmp
xchg
xchg
pop
mov
mov
pop
inc
adc
fidivl
movsb
push
push
xchg
out
xchg
push
call
inc
bound
or
or
mov
mov
sbb
pop
cwtl
push
test
aaa
or
lds
push
push
ret
and
enter
add
xchg
cmp
mov
fistpl
lock
movsb
mov
dec
in
inc
add
mov
cli
add
outsl
int3
adc
add
insb
push
add
stc
ds
inc
and
clc
gs
sbb
xchg
fs
in
fnstenv
adc
sahf
sbb
addr16
lret
xor
ja
push
mov
dec
xchg
jecxz
push
push
dec
push
movsb
xor
testl
push
pop
mov
pop
cmp
test
inc
push
mov
add
movsb
add
and
icebp
mov
clc
add
pop
sub
aas
test
add
push
sbb
pop
in
sti
lret
jecxz
pop
enter
ret
add
mov
inc
mov
xor
out
and
mov
clc
dec
icebp
stc
pop
sbb
cmp
pop
ret
add
or
pop
icebp
mov
mull
clc
mov
mov
jg
shll
pop
std
orb
and
ljmp
xor
add
inc
mov
mov
inc
and
stos
outsl
xchg
outsl
in
rcl
roll
mov
cmp
stos
gs
les
adc
push
ss
sbb
jmp
repz
inc
adc
iret
movsb
js
into
add
cmp
sbb
das
aam
adc
and
push
cwtl
sbb
sahf
push
jecxz
fwait
mov
in
fldenv
add
xchg
cmpsl
mov
mov
fstps
test
movsl
stc
or
push
cmp
inc
stos
inc
mov
mov
je
ficompl
mov
mov
clc
fwait
sub
cmp
xchg
cld
sti
add
shrl
loope
jo
cmp
pmulhuw
push
imulb
and
out
add
movsl
cmc
push
push
xchg
jecxz
sahf
adc
sbb
js
pop
xchg
or
cwtl
cmp
and
or
inc
pop
pop
push
shll
arpl
adc
cli
cmp
arpl
jno
cmp
inc
in
sbb
jns
fistpl
sti
les
pop
outsb
jno
xchg
add
mov
pop
std
out
jmp
rclb
rcrl
cmp
arpl
sbb
inc
and
js
cmc
jo
mov
pop
notl
add
and
mov
ss
xor
sbb
cmp
xchg
lods
sahf
sub
adcb
pop
sbb
xchg
js
ftst
pop
dec
dec
add
add
and
orl
sbb
pop
out
outsl
jmp
adc
ret
in
jo
push
mov
dec
arpl
add
cmp
imul
jnp
fmuls
mov
or
hlt
lcall
popf
mov
mov
iret
aaa
iret
push
iret
jnp
insb
sub
movsl
xchg
arpl
jecxz
pop
mov
out
sbb
cmp
inc
pop
scas
fbld
or
jns
cli
jns
jmp
and
movsb
repz
sbb
cmp
setp
fsubs
add
icebp
and
xchg
mov
in
loop
in
xor
fisttpl
stos
test
clc
xchg
mov
or
sbb
mov
push
and
lcall
fsubs
movsb
cmp
cmp
cmp
mov
fistpl
mov
ds
jnp
inc
lds
mov
xchg
push
leave
adc
fldcw
enter
and
movl
and
cmp
notb
pop
pop
stc
fwait
cmp
sbb
mov
xor
push
cmp
shlb
sbb
dec
push
testb
sahf
in
add
sbb
fwait
sbb
push
jg
mov
jns
xchg
idivb
fistpll
cmp
sbb
jmp
std
aad
add
cltd
ret
push
mov
pop
dec
add
jo
adc
push
pushf
mov
iret
jno
pushf
ja
mov
push
mov
jbe
xor
mov
jo
inc
mov
insb
inc
sarl
aas
rorl
mov
jp
mov
mov
mov
fwait
and
movsb
adc
or
test
inc
pop
mov
jno
cmp
xchg
sbb
pop
fsts
cli
dec
add
insl
mov
push
and
inc
arpl
in
pushf
cltd
pop
mov
add
jmp
stos
int3
loope
add
and
std
jecxz
popf
lcall
or
sbbl
push
adc
push
cmp
fucomi
ret
pop
pushf
jb
push
xchg
xchg
add
push
inc
cmpsl
cltd
cmp
jbe
adc
pop
ret
jne
loope
cmp
in
pop
cmp
inc
jae
mov
movsb
inc
js
xlat
jecxz
push
in
sub
arpl
push
inc
add
vpsubusw
in
push
ret
cwtl
cmp
adc
fs
xchg
inc
pop
sbb
push
pop
mov
stc
orl
gs
aas
lods
ss
and
or
xchg
cmp
sbb
loop
stc
in
pop
insb
push
fistps
cmp
inc
adc
gs
cwtl
pop
in
add
and
pop
pushf
clc
push
sbb
sbb
jmp
fcomps
ret
imul
jecxz
ja
mov
fsubrs
cwtl
sti
adc
and
test
mov
aaa
popa
add
sahf
or
inc
js
mov
pop
jle
push
cmpl
lds
pop
out
out
sbb
dec
iret
or
test
mov
adc
cmp
sbb
fildl
cvtps2pd
and
call
ljmp
sbb
xor
and
push
mov
xor
add
insl
mov
xlat
cmp
cltd
add
lods
inc
gs
cmpsl
push
or
fldl
mov
inc
mov
sahf
js
fcoms
pop
jne
sbb
aaa
pop
or
outsl
ret
flds
fldenv
and
aas
dec
stos
outsb
addr16
push
pop
negb
std
into
sbb
add
cmp
loope
stc
cltd
sbb
jo
xchg
in
mov
in
fwait
pop
movsl
xchg
pop
push
pusha
cmp
jns
aam
negl
popf
jle
stos
sti
iret
cmp
mov
pop
mov
pop
daa
jle
mov
jo
icebp
inc
ja
aaa
stc
mov
dec
sub
inc
fidivrl
push
je
rcrl
pop
pop
arpl
mov
jle
in
cwtl
xor
loop
xchg
js
clc
jo
negl
lds
nop
jl
push
cmp
add
movsl
inc
mov
cwtl
outsl
jecxz
fldcw
add
stos
inc
pop
iret
mov
inc
stos
mov
sub
cltd
fld
insb
mov
shl
jno
pop
sbb
mov
out
ja
and
fwait
add
pop
inc
or
stc
mov
addr16
sbb
mov
lds
add
sbb
inc
inc
sub
and
and
push
push
popa
and
inc
test
dec
stos
xchg
jb
idivl
sbb
cmp
sbb
add
rcrl
xchg
jns
dec
gs
or
xor
cmp
in
out
fistpl
in
jmp
xlat
inc
xchg
popa
mov
leave
xlat
in
push
and
les
mov
jmp
or
test
arpl
out
and
enter
mov
add
mov
cltd
xchg
pop
pop
cwtl
xchg
sbb
fcomps
inc
jnp
xchg
mov
loop
jle
clc
fcmovnbe
ret
stc
push
cwtl
sub
ja
mov
out
xchg
or
xlat
ja
lods
out
fs
ja
jecxz
fbstp
sbb
test
sub
jns
xchg
adc
mov
push
adc
cmp
dec
cmp
outsl
add
pop
add
and
loop
mov
and
pop
stos
or
xchg
jecxz
dec
mov
adc
gs
sub
ret
pop
cmp
xchg
xchg
push
xchg
push
fldt
test
add
int
call
push
adc
add
ss
js
jo
in
fldt
stc
or
movsl
in
arpl
scas
mov
push
leave
and
and
sahf
xor
lods
adc
pop
mov
sbb
add
cmc
xchg
sub
xchg
inc
push
roll
add
mov
fcoms
xchg
popf
sbb
cmp
inc
clc
mov
and
pop
mov
test
loope
test
jne
les
cmp
mov
pop
cmp
jo
sbb
adc
pop
adc
inc
cwtl
cli
and
or
out
in
mov
cltd
xchg
mov
or
movsb
and
fistpl
mov
outsl
dec
xchg
insl
and
xor
les
dec
inc
scas
sub
pop
cwtl
pop
jl
mov
and
cmp
jns
pop
pop
push
mov
scas
and
xor
cwtl
add
mov
inc
mov
lock
aad
in
sbb
cmp
in
xor
sbb
cwtl
inc
fistps
mov
push
and
xchg
push
adc
jecxz
pop
mov
cltd
in
popf
les
outsl
dec
cli
cmp
jp
or
add
sbb
in
loop
pop
out
lock
cwtl
stos
scas
jecxz
mov
mov
jo
and
movsl
sbb
sbb
and
bound
pop
in
fsubrs
and
mov
test
test
xor
xchg
cli
aad
sbb
mov
sub
add
sbb
idivb
mov
mov
stos
inc
inc
bound
in
adc
mov
push
adc
movsl
pop
and
lds
fldcw
in
xchg
inc
cli
xor
mov
push
test
inc
push
add
rcrl
pop
add
cltd
push
fwait
sbbb
dec
pop
pop
ljmp
in
pop
scas
mov
add
fs
aad
sbb
push
push
add
popf
mov
inc
ss
xlat
lret
stc
add
xchg
test
push
mov
rorl
xchg
inc
or
fsts
cmp
add
out
cmp
sbb
lds
jnp
push
sbb
add
add
mov
call
sbb
mov
data16
adc
inc
mov
out
cmp
dec
das
mov
mov
mov
cmovle
fildll
sbb
js
daa
divb
sti
pop
sbb
and
xor
dec
out
add
iret
aam
leave
pop
add
arpl
dec
test
mov
popf
test
pop
add
iret
push
and
and
sbb
cmp
or
test
arpl
fnop
dec
add
jb
out
lea
mov
inc
mov
mov
push
add
and
mov
sahf
loop
fisttpl
out
fdivrs
pop
mulb
aas
ret
outsl
sbb
ds
mov
repz
stc
jmp
ss
aas
and
pop
pop
imul
push
cwtl
lock
lds
sbb
movsl
icebp
cs
xchg
cmp
movsb
fs
inc
mov
inc
cltd
fwait
jns
push
or
mov
cmp
push
cltd
xchg
stos
mov
and
dec
orl
mov
mov
shll
int3
push
jo
sub
ffree
mov
push
xor
inc
es
fiaddl
cmp
cld
mov
or
and
aas
add
movsl
mull
and
xor
xchg
inc
push
insl
ret
dec
int
addr16
flds
call
pop
add
xchg
js
add
sub
add
inc
jecxz
cltd
pop
jo
clc
add
aaa
pop
xor
xor
mov
push
les
xchg
and
gs
xor
ss
cmp
fwait
jns
pop
sahf
cmp
sti
fmuls
sbb
mov
jnp
or
push
aaa
and
cmp
cltd
adc
or
jmp
mov
ret
sbb
pop
xor
pop
lret
mov
push
stos
popf
sbb
andl
mov
inc
pop
push
adc
jnp
cmp
sub
rolb
loop
roll
fnstcw
cwtl
push
scas
push
ret
fstpt
and
cmpl
mov
or
mov
inc
cmp
movsl
clc
mov
roll
movsl
les
adcl
iret
in
mov
add
mov
arpl
insl
shrl
stc
cmp
sbb
cmp
add
fdivrs
outsl
cld
jo
cli
jecxz
popa
jns
xchg
repnz
in
dec
cmp
sub
cmp
jnp
cltd
arpl
outsl
inc
ret
mov
gs
ja
mov
movsl
sbb
cmp
pop
dec
aad
pop
cltd
jae
jo
outsb
rcrb
pop
stc
add
test
inc
dec
or
adc
xor
cmp
fcoms
addr16
stc
sti
test
aad
push
mov
dec
stos
mov
jmp
cmp
adc
outsl
jmp
xchg
sbb
fdivrs
cmpl
add
insl
insl
mov
mul
andl
repnz
jmp
gs
fnstcw
stc
adc
sbb
dec
testb
in
xchg
fildl
xor
fs
cwtl
inc
cmp
mov
adc
push
sbb
out
sbb
mov
jecxz
aam
dec
adc
fwait
pop
testb
sbb
mov
arpl
arpl
adc
pop
sti
xchg
xchg
mov
adc
add
xor
movsl
or
popf
sbb
movsb
pop
add
fwait
imul
pop
inc
inc
orl
dec
loope
jnp
dec
or
fnstcw
pop
movsb
stos
clc
jle
cmp
testb
lret
pusha
mov
push
xor
mov
add
xchg
or
mov
pop
in
adc
cmp
sti
mov
test
stc
rolb
aad
push
push
inc
xlat
push
cmc
outsl
and
test
mov
mov
sub
or
jo
add
ja
cmp
sbb
xchg
add
lods
ds
ret
cwtl
lret
pop
inc
push
testb
inc
dec
add
in
aaa
ror
add
add
sbb
inc
pop
ret
xchg
lea
push
or
jg
xlat
and
aad
lds
cmpsl
mov
sbb
nop
push
movsb
ret
sarb
icebp
sahf
test
jnp
insl
pushf
cmpsb
cmp
je
mov
push
popf
and
lcall
mov
stc
fwait
xchg
pusha
es
xchg
xchg
dec
cwtl
cld
cltd
sbb
in
mov
adc
xlat
xor
mov
sbb
pop
mov
out
data16
gs
mov
cli
scas
push
and
in
push
pop
dec
cli
mov
inc
pop
pop
xlat
adc
sbb
xor
addr16
shrl
pop
mov
mov
push
cmpb
pop
fwait
aam
sub
scas
push
inc
sbb
add
inc
inc
cmpsl
fwait
xchg
dec
pushf
pop
add
popf
mov
inc
stc
repz
cli
sbb
pop
in
push
or
xor
mov
sbb
sbb
inc
cmp
xchg
or
cmp
je
popa
jno
lods
dec
or
pop
inc
outsl
cli
adc
shrb
mov
addl
js
loop
shll
and
sti
ds
fwait
add
mov
adc
fsub
push
sbb
aaa
stc
test
popf
add
out
in
mov
pusha
xchg
cmp
lds
cwtl
aaa
mov
pop
fwait
push
rorl
sbbl
push
pop
sahf
inc
ljmp
movsl
and
push
fwait
mov
adc
stc
sbb
xchg
test
add
leave
pop
neg
jg
pushf
lret
pop
leave
inc
ror
add
push
movsb
and
mov
pop
movsl
vmovddup
or
mov
pop
cmp
add
push
inc
sub
test
pop
pop
ds
test
add
push
cli
xchg
pushf
lcall
jp
and
push
cmp
pop
and
fcmovnb
mov
aaa
push
sbb
sub
clc
gs
ja
loopne
xchg
add
movsb
sti
cmp
orl
push
cli
pop
pop
jg
mov
push
dec
and
mov
inc
mov
add
lcall
jle
pop
cmp
push
or
or
idiv
pop
xchg
andl
adc
pop
sbb
mov
fs
xorl
add
sbb
cmp
and
pop
scas
pop
mov
push
in
movsb
pop
stos
shl
mov
fistpll
loop
adc
pop
inc
add
mov
lds
dec
cmp
div
mov
push
xor
add
add
cmp
in
push
cmp
lahf
push
cmp
mov
cmp
push
jl
push
test
test
mov
dec
jg
fs
and
xchg
xchg
xchg
pop
and
mov
popf
sti
inc
mov
out
sti
stos
outsb
loop
inc
pop
out
add
mov
fcomi
sti
mov
outsb
push
cmp
cwtl
sbb
idivb
aas
mov
push
push
inc
pop
stos
stos
mov
loop
mov
sbb
popf
pop
jmp
sarb
repz
add
inc
mov
notb
mov
push
pop
loop
push
fstps
add
mov
push
popf
in
cltd
fldcw
mov
push
lods
jno
sbb
push
or
pop
or
aad
and
aaa
push
scas
sbb
cmp
sub
dec
inc
push
loop
and
add
addl
mov
lds
adc
and
or
fcomps
xchg
xlat
inc
cmp
lods
inc
xchg
test
push
int3
mov
int3
and
loop
or
push
outsb
ss
sub
xchg
jnp
mov
int
sbb
pushl
cmp
test
adc
pop
das
cmp
je
lods
and
aam
pop
and
sbbl
adc
add
fsubl
xchg
and
mull
add
adc
pop
push
inc
xchg
ja
sar
pop
cmp
or
cmp
test
jnp
movsb
xchg
test
add
idiv
cltd
push
and
push
popa
pop
and
gs
push
icebp
testl
into
mov
lcall
pop
cmpsl
sahf
in
add
outsb
push
js
push
cmp
adc
inc
cltd
pushf
cmp
or
xlat
cwtl
popa
push
cmp
pop
test
divb
pop
pop
pop
add
push
lds
addl
mov
and
push
jne
test
inc
pushf
add
cmp
cmp
in
inc
imul
mov
add
xchg
scas
popf
adc
dec
les
dec
add
test
in
mov
outsb
fcoms
pop
clc
test
or
jnp
pop
aaa
idiv
stc
jb
adc
add
fwait
sahf
cmc
fldenv
fcoml
xchg
mov
inc
loope
fwait
sbb
cld
xor
cltd
test
arpl
push
popf
add
popf
pop
outsl
and
call
scas
ja
ret
xchg
jae
cltd
call
mov
mov
dec
out
loope
and
loop
int3
push
xchg
jae,pt
add
and
adc
and
pop
test
cltd
xchg
arpl
pop
andb
clc
pop
lods
fmuls
mov
jae
gs
or
cltd
or
jge
testb
mov
xor
fs
and
xbegin
add
mov
in
cmp
jns
into
stc
push
test
jne
push
sbb
aaa
mov
in
in
pop
sti
fs
and
cli
pop
pop
mov
sti
aam
pop
mov
ja
cwtl
in
sti
in
out
inc
dec
rol
mov
sbb
in
in
aaa
loope
and
dec
sbb
notb
inc
adc
addl
hlt
mov
jle
rolb
imul
pop
mul
or
fnstenv
icebp
or
pop
sti
ja
mov
scas
add
pop
add
sbb
fstpt
fstpl
repnz
jns
cmp
add
movsb
pop
and
pop
mov
cwtl
or
adc
push
jnp
mov
lock
cli
mov
lahf
sbb
or
lock
pop
mov
push
cld
mov
sahf
mov
ret
add
insl
cmp
add
inc
mov
sub
and
fwait
pop
mov
mov
inc
inc
pushf
push
sbb
or
movsb
clc
and
stc
add
mov
ret
sbb
inc
pop
jl
jo
stos
shlb
pop
andl
arpl
cli
outsl
fld
pop
int3
rcll
fdivrs
adc
movsl
cmp
add
xor
cmp
pop
fwait
outsl
ja
test
jnp
in
and
ret
and
xlat
mov
int
negb
aaa
sbb
ret
mov
aad
push
movsb
idiv
xlat
mov
add
jle
mov
push
cmp
adc
scas
xchg
pop
and
iret
inc
or
cld
popa
das
jnp
sbb
pop
cmp
mov
fcomps
cld
es
add
inc
gs
fwait
loop
or
scas
test
xchg
hlt
mov
mov
outsb
stc
and
test
cwtl
ljmp
xchg
push
js
outsl
xchg
mov
and
mov
test
mov
xchg
push
sbb
pop
adcl
mov
std
test
cmp
test
stos
and
add
jne
pushf
sbb
cmp
mov
jnp
in
inc
rcr
adc
and
cmpsl
pushf
movsl
mov
cwtl
pop
adc
and
cltd
jecxz
pop
sbb
outsl
ret
scas
xor
adc
push
and
arpl
sti
sbb
inc
mov
add
fs
loope
pop
leave
cmp
and
xchg
jae
leave
ljmp
icebp
jns
movsl
ret
pop
loope
add
push
sbb
pop
les
inc
push
stos
or
pop
and
add
sbb
jecxz
cmpb
aad
or
inc
pop
movsb
inc
sbb
mov
pushf
mov
cwtl
orl
or
adc
cli
sub
mov
outsl
mov
add
sbbb
in
lea
mov
or
ds
pop
jnp
ss
je
and
pop
out
ds
cld
sbb
mov
test
flds
sbb
mov
negl
push
ss
and
pop
pop
mov
sbb
testl
sub
cmp
adc
sbb
test
and
pushf
outsl
and
std
movsl
mov
add
dec
sahf
mov
ficompl
push
cwtl
testl
in
add
add
imul
or
inc
enter
outsb
cltd
test
cmp
add
clc
mov
xlat
fs
insb
mov
cltd
mov
cmp
leave
and
inc
sub
ret
cli
repnz
dec
add
jns
cmp
pop
adc
add
pop
pop
inc
insl
mov
cmp
pop
fwait
scas
mov
adc
and
sbb
lds
cmp
fdivrs
add
mov
mov
roll
clc
sbb
add
shll
pop
mov
mov
push
or
cltd
les
adc
xor
mov
outsb
mov
push
mov
fdivrs
xchg
add
sub
add
add
clc
loop
or
outsb
pop
rolb
sarb
loopne
fldenv
leave
mov
fsubrl
rorl
inc
cmp
mov
imul
push
pop
mov
sti
int
inc
xchg
jecxz
icebp
cmpsb
test
adc
inc
push
add
pop
rcrl
js
test
lea
lods
adc
dec
xor
cli
sbb
fcomps
pop
add
dec
out
fwait
mov
testb
lds
pop
xor
and
or
mov
cmp
add
and
sub
cmp
add
leave
mov
les
sbb
pop
xor
and
mov
pusha
pop
test
push
ja
sub
sbb
les
pop
or
imul
int
add
roll
std
or
mov
mov
sbb
jge
cmp
lcall
mov
cli
and
fisttpl
jns
sbb
clc
add
jb
sbb
jno
cmp
ja
lods
notb
inc
add
xor
inc
xor
add
in
cmp
add
sbb
pop
movsb
fwait
dec
pop
cltd
jns
pop
or
xlat
jne
testb
in
out
pop
jmp
jnp
or
inc
mov
loop
outsl
add
sub
fwait
popf
loope
subl
jecxz
je
lock
notb
fwait
dec
mov
aad
cmp
cmp
inc
mov
aam
ljmp
mov
stos
rorb
shlb
cmp
mov
fmuls
pop
xlat
mov
testl
sub
rcl
and
shl
pop
sbb
mov
sti
pop
lret
xchg
fildl
imul
les
or
sahf
test
add
inc
inc
xlat
andl
ret
cmp
in
arpl
fadds
in
adc
sbb
pop
cmp
mov
push
and
in
cltd
sbb
and
mov
cs
cli
sahf
sbbl
fcoms
icebp
pop
add
notb
outsl
sti
push
out
movsl
icebp
xor
adc
jl
cmp
in
out
sbb
jle
xorl
repz
icebp
pushl
jb
cmp
xchg
pop
cltd
imul
push
loop
add
cmp
add
in
movsl
mov
les
adc
flds
outsl
fdivr
lds
xchg
cmpsl
pop
imul
stc
fnstcw
call
imul
adc
and
mov
les
add
and
inc
or
cli
sbb
or
clc
jnp
dec
scas
stos
pushf
mov
cmp
add
fsubrs
inc
test
arpl
mov
aaa
xor
mov
or
mov
pop
sbb
in
or
push
xchg
sbb
fidivrs
xchg
movsl
fwait
mov
jo
clc
cmp
sti
sbb
div
mov
mov
js
fs
dec
xchg
pop
int3
push
adc
outsl
outsl
psrld
xlat
ja
mov
aaa
mov
inc
adc
add
loope
sbb
outsl
add
and
test
adc
lds
mov
inc
fsub
xchg
mov
stc
loope
adc
adc
xlat
xchg
mov
cmp
cmp
ljmp
ret
arpl
int
popa
mov
push
sub
pop
scas
sbb
xor
in
push
and
inc
pop
pop
out
ret
or
and
and
mov
jno
xlat
gs
mov
insb
mov
test
out
mov
ja
sbb
pop
lds
cwtl
out
data16
stc
mov
fdivrs
inc
gs
mov
jns
dec
loope
pushf
cwtl
iret
inc
icebp
in
in
mov
mov
cltd
fildll
adc
adc
pop
xchg
xorl
add
jmp
jecxz
and
fmulp
cmp
insl
icebp
out
test
sahf
das
pop
popf
cli
cli
sbb
and
jns
lods
clc
and
pop
lret
pop
movsb
test
daa
imul
fstpt
jns
add
cmp
adc
test
les
icebp
fwait
cwtl
jnp
gs
repz
cmc
mov
xchg
fisubs
add
mov
push
mov
cmp
lea
lds
push
xchg
xchg
movsb
push
cmpsb
mov
mov
and
push
sbb
rcll
adcl
push
scas
jb
fchs
shrl
imul
fldt
mov
push
fstps
shl
adc
xor
add
fldt
and
push
jecxz
pop
test
xor
cwtl
adc
add
fwait
pop
leave
in
movl
push
cmpsl
fcomi
les
cmp
and
inc
jl
movsl
jmp
sbbl
xlat
push
add
and
lods
outsl
and
sub
and
cmp
movsl
xchg
js
popa
or
ret
jge
mov
sbb
fcom
jnp
in
arpl
and
sbb
pop
and
popf
xor
xlat
cwtl
add
cwtl
je
push
xchg
add
rcl
imulb
scas
or
xlat
push
movsb
add
sbb
sub
jle
and
fildl
test
stc
aad
rcrb
add
jecxz
lret
in
shl
movsb
inc
pop
inc
imul
rolb
xchg
dec
pop
int3
adcl
cmpl
cwtd
aam
stc
mov
and
sub
or
das
add
aaa
out
in
dec
adc
inc
and
xlat
movsl
sbb
mov
jmp
or
test
shlb
push
ret
jns
bound
sbb
aad
stc
lret
sbb
test
and
add
xchg
aaa
js
adc
movsl
pop
loop
sbb
fwait
test
mov
arpl
add
mov
push
and
les
pop
push
cmp
aaa
jns
push
stos
shr
pop
cltd
inc
sahf
out
es
stc
fs
leave
add
sub
jnp
sbb
aaa
add
fadds
or
pop
cli
mov
out
and
mov
push
ja
cmp
movsl
fnstcw
adc
and
adc
in
cmp
sti
addb
fldenv
addl
jnp
sbb
dec
push
int3
pop
testb
pop
mov
pop
jns
lahf
aas
xchg
movsb
push
jmp
add
loop
cmp
jecxz
adc
jae
push
cmp
xchg
sahf
push
and
repnz
inc
sub
dec
inc
and
sbb
cmp
pop
cwtl
flds
frstor
pop
js
sub
and
movsb
popf
push
pusha
dec
fcoms
cltd
xlat
xchg
add
dec
pusha
cmp
lret
pop
push
icebp
bound
and
mov
adc
inc
movsl
filds
cmp
ror
in
lea
dec
jp
pop
inc
jb
imul
xorl
add
push
sbb
mov
cli
in
dec
aad
adc
dec
pop
cmp
nop
pop
and
lea
ss
mov
cwtl
std
adc
jno
dec
idivl
stc
mov
enter
lods
and
mov
sti
mov
xor
stc
xchg
mov
cmc
mov
std
out
arpl
mov
fwait
push
rcr
dec
sbb
jg
cmp
add
sahf
inc
add
aaa
pop
and
sti
fldenv
ja
das
jns
jb
cmc
idiv
sbb
jnp
mov
shl
cmp
out
out
add
lret
mov
imul
xchg
aaa
es
mov
adc
pop
cltd
stc
or
into
jno
pusha
jno
inc
and
fstps
cli
popa
inc
cmp
lds
cmc
push
and
loopne
mov
cmp
arpl
mov
inc
or
in
test
rolb
add
mov
or
lds
cmp
lds
mov
pop
inc
sbb
pusha
icebp
hlt
andl
inc
sbb
ret
sbb
add
lcall
adc
push
aaa
fwait
mov
ja
in
cwtl
push
inc
ja
int3
sbb
cmp
flds
cltd
subl
test
pop
or
cmp
test
stos
push
sahf
leave
xchg
add
and
pusha
adc
push
xchg
les
inc
fistps
or
pusha
gs
mov
pop
cwtl
dec
xchg
sbb
jecxz
lcall
push
push
fcmovnb
push
ret
xor
xchg
mov
outsb
mov
cmp
push
inc
outsl
cmpsb
adc
xchg
clc
nop
add
and
outsl
cmp
cmpsl
xchg
repnz
loop
sarb
pop
lock
adc
addl
dec
inc
push
jecxz
fnstcw
cmp
cmp
push
test
fsincos
cmp
movsl
pop
add
xor
add
in
adc
add
leave
sbb
in
mov
xchg
mov
sahf
ss
add
lds
push
in
inc
sbb
js
pop
lds
push
lea
fsubs
jae
push
pop
xchg
lcall
sbbl
and
fildl
push
inc
iret
pusha
push
outsl
xchg
lock
dec
test
loope
and
scas
xchg
movsl
pop
mov
dec
sti
scas
js
aad
push
cli
pop
xor
lds
out
push
je
test
outsb
and
je
pop
sahf
dec
xor
insl
or
pop
or
lods
cmp
mov
xor
pop
sbb
fs
xchg
in
out
sbb
ret
cmp
sbb
fs
cmp
add
mov
test
arpl
mov
push
inc
pop
mov
mov
outsl
mov
sbb
loop
push
xlat
push
mov
mov
loope
inc
movsl
scas
jle
lret
movsl
mov
jo
cmp
cmp
mov
xchg
leave
cmp
pop
fisubrl
cltd
stos
loop
mov
mov
or
xlat
xchg
mov
outsb
pop
movsl
mov
stc
jnp
cmp
movsb
mov
sbb
jmp
fstpl
lcall
out
push
fildl
rolb
icebp
sbb
push
fsts
js
clc
icebp
rcll
xor
sbb
add
lds
push
sbb
movsl
rcrb
hlt
sahf
inc
add
xor
inc
mov
shll
les
fnstcw
jg
sub
push
lods
sbb
jnp
ja
movsb
and
negb
arpl
cmp
sbbl
cmc
sbb
cltd
js
xlat
mov
cli
mov
mov
push
repnz
add
or
negl
movsl
jnp
icebp
xchg
jns
or
in
arpl
add
add
fs
fwait
lds
leave
sub
pop
in
mov
ja
gs
sbb
add
ss
mov
pop
sbb
jg
test
jp
mov
in
gs
add
lcall
adc
cltd
cli
fs
jecxz
xchg
jo
movsl
mov
pop
xlat
adc
push
cwtl
add
and
adc
sbb
and
jns
cmp
push
inc
das
dec
out
mov
mov
sbb
bound
iret
sbb
sbb
test
mov
sbb
and
lds
sub
and
clc
popf
movsb
pop
gs
pop
mov
adc
stc
xor
xor
gs
push
loopne
xchg
dec
negl
dec
rorb
push
sti
pop
and
pop
xor
or
xchg
mov
mov
jecxz
clc
cmp
test
cmp
sahf
movsb
mov
or
fwait
sti
idivb
sub
pop
movsb
jns
inc
push
call
mov
jno
test
xchg
lods
mov
add
xchg
mov
adc
or
fmuls
cwtl
imul
arpl
mov
js
jns
xlat
sub
jecxz
and
mov
gs
mov
mov
push
ficomps
mov
xor
pop
test
sbb
add
sbb
sub
mov
mov
out
xchg
push
cs
inc
sub
aad
cmc
adc
xchg
jns
popf
clc
cmpb
cltd
inc
add
mov
fcomps
sbb
xchg
mov
ret
repnz
push
test
jp
add
and
pop
pop
leave
mov
adc
rcrl
pop
cmp
add
insb
lock
pop
pop
outsl
cli
xchg
mov
jnp
sbb
neg
cmpsl
adc
mov
movsl
cmp
or
cli
and
adc
sbb
cmp
fisttpl
enter
insl
pop
xlat
icebp
adc
push
cmp
inc
and
add
out
in
jb
and
iret
pop
arpl
iret
jle
jo
push
cmpsl
cmp
xlat
and
add
push
in
lea
or
fsubs
fldenv
xchg
mov
loop
pusha
add
pop
sti
add
jmp
leave
rcrl
mov
sarb
dec
inc
fwait
jne
push
fstpl
push
idivl
lds
and
jns
inc
cmp
and
fildll
pop
imul
and
pop
test
fistpl
sub
add
fstpl
inc
lds
jmp
fstpl
aad
push
pop
popf
jno
fistpl
loope
add
icebp
cmp
sbb
pop
iret
xorb
int
cwtl
mov
adc
sub
in
arpl
mov
flds
push
push
ret
mov
int
es
xor
test
int
ds
movsb
adc
fwait
sti
mov
inc
mov
inc
push
bound
flds
cmp
inc
push
sbb
fsubr
sub
push
inc
inc
iret
push
adc
xor
flds
sbb
iret
adc
mov
pop
sub
out
mov
sti
push
cmp
icebp
sbb
mov
cwtl
adc
imul
pop
fs
add
sahf
sbb
lret
arpl
mov
movsl
cmp
loop
sarb
test
sbb
aad
and
cli
mov
test
into
shlb
lahf
scas
and
inc
popf
loop
add
or
xchg
test
inc
or
fdivrl
add
idivb
in
cwtl
jns
ret
and
pop
cmp
movsb
imul
push
ficompl
shlb
jecxz
ds
mov
cmp
sbbl
fmuls
fiadds
or
xchg
jge
pusha
test
push
add
mov
mov
sbb
jns
ja
cwtl
test
test
fadd
rcll
cli
xor
inc
add
push
sbb
add
ja
cmp
and
fnstcw
leave
sahf
ret
gs
cmp
loopne
es
inc
movsb
fwait
clc
sub
cmpsb
popf
call
add
test
or
lret
add
mov
adc
jecxz
push
ljmp
sti
adc
cmc
ret
jns
inc
mov
sahf
xchg
lds
ret
inc
sti
add
clc
mov
mov
dec
movsb
ja
push
jecxz
cmp
push
mov
cwtl
and
jp
js
scas
ja
push
gs
in
xchg
xor
adc
iret
fcoms
mov
cmpl
push
imul
jl
out
test
subb
pop
sbb
and
or
mov
push
clc
cwtl
jnp
xor
fs
mov
mov
add
lods
js
jmp
pop
or
mov
pop
sub
outsl
add
mov
pop
pop
jmp
aam
mov
into
rorl
adc
addl
jb
add
cmp
clc
pop
mov
adc
fnstcw
mov
cltd
inc
mov
cltd
fs
test
sahf
pop
or
mov
mov
and
dec
xrelease
adc
cmp
shlb
mov
je
mov
inc
movsb
lret
rol
scas
mov
and
pop
fidivl
inc
icebp
add
div
jle
std
arpl
cli
pop
popf
pop
jecxz
sub
std
mov
xor
xor
adc
mov
mov
ror
xchg
fs
stc
mov
loope
pop
mov
scas
add
xchg
cmp
cmc
xor
gs
and
mov
sub
pop
sbb
sbb
test
pop
xchg
or
clc
adc
and
pop
jnp
or
aas
stc
stos
in
aad
add
inc
adc
mov
pop
adc
push
fs
sbb
js
xchg
add
xlat
test
add
jns
cli
sub
jo
idivl
mov
pop
cmc
or
push
inc
mov
test
aaa
mov
inc
pushf
push
or
mov
pop
inc
leave
cmp
addr16
movsl
sub
ret
ja
add
add
scas
and
sarl
jns
pop
cli
sub
mov
pop
add
es
and
pop
sub
notl
loop
push
fpatan
jae
nop
inc
push
mov
loopne
sti
push
sbb
xchg
gs
cmp
loop
cmp
and
cmc
out
pop
loop
cmp
inc
push
mov
popf
sti
lret
outsl
add
int3
and
jnp
negl
mov
cmp
test
fwait
fs
cmpsl
shll
sbb
dec
jae
pop
dec
jnp
xchg
and
js
pop
push
sbb
inc
xlat
push
mov
mov
pop
sbb
cmp
imul
fstps
into
cmp
insl
jmp
js
idivl
cmpsb
std
fsubrl
mov
push
or
pop
cmp
or
and
mov
push
cltd
fcomps
std
enter
add
sbb
jecxz
push
ja
and
loop
or
imul
add
pop
sarl
add
add
and
or
pop
xlat
xor
add
mov
sbbl
push
aas
loop
add
push
pop
movsb
xchg
js
jb
jp,pt
push
loop
mov
add
movsb
push
ja
cmp
popa
daa
shll
push
loop
jecxz
arpl
fadds
add
sub
mov
cmp
leave
mov
and
loope
sbb
cltd
aam
and
jp
cmp
cs
xor
ja
cmp
jle
pop
lds
aad
pusha
pop
fwait
out
add
jmp
pop
out
pop
cmp
add
fcomps
push
sbb
outsb
lds
inc
cmpl
addr16
inc
inc
push
sbb
out
cmp
les
sub
sbb
mov
fisubs
and
andl
xor
add
cwtl
sahf
popa
out
inc
mov
gs
jns
pop
xchg
push
dec
bound
push
inc
iret
fwait
mov
test
cmc
mov
mov
test
mov
jp
or
adc
mov
ret
mov
cli
sub
add
fstps
jns
insl
lret
mul
leave
negl
push
je
jp
or
lea
add
mov
ret
and
lds
out
fdivrs
mov
mov
adc
adc
test
cmp
adc
jns
pop
xchg
mull
cmp
xchg
xor
mull
sbb
ret
adc
sti
xor
stos
push
imul
int
adc
sbb
xor
sbb
inc
mov
cwtl
or
cltd
arpl
movsl
mov
dec
jo
push
pushf
pop
sbb
and
push
movsb
mov
popf
jnp
out
iret
fs
imul
inc
insb
push
xlat
add
std
js
cmp
repz
loop
pop
loope
sti
sub
mov
mov
push
xchg
outsb
test
xchg
outsl
arpl
adc
xorl
ljmp
sbb
or
jmp
sbb
add
popa
test
lds
in
stc
inc
sbb
imul
sbb
rolb
sub
icebp
xchg
or
or
imul
fadds
inc
push
fcomi
insb
fdivp
mov
in
xchg
and
mov
repz
adc
inc
pop
pop
jl
push
lds
into
xlat
pop
shl
out
lahf
sahf
and
pop
sbb
adc
in
stc
outsb
enter
pushf
inc
or
and
mov
stos
loope
mov
xchg
out
clc
pop
mov
pushf
flds
out
not
lahf
cmp
dec
add
jns
aam
push
xchg
fdivrs
mov
ret
fs
je
aam
add
loope
inc
adc
and
cwtl
jecxz
fs
fwait
add
icebp
push
movsb
fnstcw
pop
test
inc
adc
xchg
adcl
loope
fs
sbb
xchg
sbb
lds
adc
ret
pop
xchg
ja
push
pop
jnp
popa
icebp
add
mov
in
int
cwtl
fsubs
dec
mov
push
notl
inc
and
pop
sbb
pop
sub
in
insl
mov
and
mov
mov
or
test
clc
pop
push
test
ret
cltd
inc
aad
jle
out
xchg
add
in
pop
add
xor
lds
mov
arpl
sti
push
clc
adc
inc
jle
inc
add
sbb
push
add
mov
data16
mov
lahf
sahf
inc
sub
test
je
xor
add
test
nop
jge
jecxz
ficoms
push
cmp
pushf
jns
ss
fcoms
mov
arpl
pop
inc
inc
sub
xchg
and
mov
mov
pop
lds
and
or
ja
inc
cmp
xor
xlat
sti
arpl
jecxz
nop
push
jnp
dec
outsl
mov
shrb
pop
sbb
enter
mov
or
add
stc
cmp
cwtl
inc
sahf
test
ficoml
jl
mov
push
add
cmp
mov
aad
subl
sbb
cmp
movsb
mov
inc
jg
jge
jne
cmp
jae
dec
push
das
mov
fistps
push
cmp
sbbl
xchg
jge
lea
mov
test
in
mov
xchg
inc
les
pop
cmp
xchg
inc
mov
jecxz
in
loope
add
ficoms
mov
stos
pop
xor
bound
int3
and
les
and
sbb
and
or
and
mov
inc
jnp
in
pop
lcall
jp
adc
sbb
push
cli
in
int
ret
dec
addl
lret
gs
push
js
and
cli
xchg
adc
xchg
negb
loop
or
pop
out
xchg
rorb
iret
xor
mull
sbb
mov
sbb
rorb
xor
sahf
mov
mov
mov
mov
mov
sti
inc
push
lahf
xchg
dec
add
or
inc
inc
pop
out
jg
push
aas
cmp
xor
aaa
mov
std
and
ret
mov
jmp
sbb
jo
or
sahf
pop
cmp
lods
mov
fbstp
shlb
and
sbbl
and
fldenv
lcall
pop
loop
dec
js
adc
clc
cltd
imul
add
push
mov
sbb
gs
clc
xchg
pop
cltd
add
xchg
sbb
movsb
idivb
movsl
loop
movsb
cwtl
and
movsl
adc
sbb
mov
decl
orb
cmp
pop
push
xchg
clc
in
test
dec
sub
cmp
sbb
das
movsb
ja
pop
mov
in
or
lds
pop
sub
mov
xlat
and
xchg
cmp
cli
cmp
inc
loop
js
leave
movsb
adc
cwtl
sti
mov
add
and
xlat
cmp
outsl
cli
pop
add
pop
test
leave
mov
cld
xor
cli
push
negb
inc
aaa
xchg
fsubrs
notb
test
lret
bnd
sti
repz
sbb
xchg
add
or
aam
jmp
and
xlat
sbb
mov
xchg
mov
cmp
sbb
mov
and
inc
mov
lds
aad
idiv
dec
xchg
scas
inc
loop
pop
test
mov
jns
mov
or
arpl
ja
sbb
in
push
sbb
adc
xchg
pop
loopne
add
inc
shl
fs
test
fcoms
and
in
xor
notb
leave
or
sbb
mov
add
sti
pop
add
das
fnstenv
mov
dec
or
ret
add
push
mov
and
outsb
fs
f2xm1
add
dec
jo
sbb
xor
pop
fs
xlat
lds
aaa
sbb
inc
cmp
pop
ja
popf
les
push
xlat
movsb
push
sbb
cmc
jne
test
jne
cltd
push
or
jecxz
sub
cwtl
xor
cmp
scas
movb
mov
adc
fs
mov
fstpt
sbb
and
mov
sub
lcall
and
aaa
cmp
xchg
inc
pusha
pop
jge
notl
in
jnp
jmp
shll
flds
in
dec
inc
adc
jecxz
testl
in
aad
pop
and
push
mov
stc
add
mov
xchg
in
push
outsl
dec
xor
and
pop
notl
mov
add
pop
add
test
lds
xchg
mov
pop
popf
fwait
pop
lcall
mov
rcrl
sti
leave
cmp
fcmovnbe
adc
pop
sbb
push
and
push
mov
ss
mov
ret
aas
push
or
iret
daa
jb
push
xchg
mov
xor
push
fs
cwtl
sbb
dec
add
aam
fisubrs
push
cmp
lds
aam
les
cmc
or
ficoml
pop
pop
aam
mov
pop
inc
js
cmp
rcrb
movsb
xchg
add
push
or
inc
inc
inc
es
xchg
inc
cmp
lret
jno
jecxz
rcll
xor
add
fwait
aaa
bound
mov
cmp
cli
stc
lret
xchg
xor
mov
lods
pop
and
les
add
xlat
add
jecxz
xchg
mov
inc
cwtl
xchg
jnp
xchg
lcall
ret
mov
mov
dec
xchg
xlat
in
shll
insl
cmp
gs
scas
ja
mov
cmp
mov
add
mov
mov
mov
mov
xchg
add
cwtl
adc
mov
pop
dec
rcrb
pop
aaa
inc
mov
jns
jnp
aad
lds
cmp
adc
loop
cmp
add
fildll
repz
cmp
xchg
sbb
hlt
pusha
fildll
icebp
outsl
ja
and
lods
cltd
add
mov
add
fcomi
fldcw
stc
arpl
mov
jecxz
inc
xor
or
mov
push
fcmovnu
sti
les
cmc
pop
sti
or
out
pop
popf
xchg
stc
jle
inc
mov
cli
pop
cmpl
or
or
pop
cwtl
sti
cwtl
xchg
and
push
outsb
mov
test
jno
push
arpl
fcomps
and
aad
stc
int3
gs
push
je
xlat
daa
out
add
in
sub
mov
pop
sbb
fsts
call
icebp
xlat
mov
in
imul
cmp
andl
jb
mov
fldcw
xor
push
sti
or
inc
mov
mov
scas
mov
cwtl
ficompl
adc
lds
cmp
fdivrs
xchg
stc
pop
inc
and
outsl
push
adc
mov
or
and
movsb
mov
push
jnp
add
or
cwtl
andl
ficompl
xlat
pop
cmp
in
adc
jg
pop
push
add
push
lret
and
lea
negb
mov
mov
push
sahf
enter
stos
inc
fdivs
push
pop
gs
sahf
pushf
and
xchg
fwait
in
mov
xlat
in
mov
xchg
add
cwtl
cltd
push
adc
cld
imull
rcrb
inc
vmread
ja
loopne
sahf
mov
and
jmp
outsl
mov
or
pop
arpl
jp
add
clc
and
cmp
fsts
add
sbb
lcall
xchg
in
in
fldenv
cmp
sbbl
jp
jecxz
and
aaa
arpl
les
cwtl
cltd
mov
mul
loope
cmp
cmp
jmp
arpl
roll
dec
xlat
sbb
mov
or
inc
fs
jecxz
push
xlat
mov
adc
cmp
pop
jnp
mov
out
add
iret
iret
add
icebp
outsb
xlat
outsb
cmp
fstpt
fwait
and
sbb
jo
inc
gs
outsl
push
cmp
fistps
ret
pop
xchg
test
mov
pop
jecxz
mov
int3
sti
sahf
rcrl
inc
in
mov
mov
jle
lea
sbb
xor
and
movsb
pop
je
pop
mov
mov
jnp
add
and
sti
fisubl
inc
imul
out
sbb
aas
loop
in
out
mov
int3
mov
xor
lods
adcl
xor
sbbb
shr
outsl
gs
test
push
and
add
dec
ss
clc
push
outsl
cmp
outsl
jge
pop
dec
jp
adc
lret
pushf
cltd
fistps
movsb
ror
adc
mov
mov
or
and
cmp
scas
push
in
lock
jns
ja
gs
jns
mull
clc
push
cmpsb
sub
add
xor
cli
pop
test
rcrl
movsb
and
jecxz
or
fs
imul
jb
sbb
mov
adc
mov
cli
pop
push
stc
js
add
jmp
and
add
push
and
fs
out
test
adc
push
iret
testl
add
push
push
mov
out
addl
inc
cmp
add
add
and
sbb
xchg
sti
mov
call
and
push
loope
add
mov
int3
mov
cmp
data16
test
lret
cmp
cmp
add
xor
sbb
ja
jns
and
xor
sub
repnz
movsl
or
adcl
aad
xor
sahf
shll
xor
loop
pop
divl
fmull
jecxz
push
or
pop
add
sbb
out
fstps
sub
push
pop
inc
clc
sti
mov
fcoms
insl
stc
and
or
mov
test
shrb
gs
inc
loop
xor
push
fistps
icebp
movsl
xlat
arpl
xorl
push
push
test
mov
ret
cmp
jo
inc
in
cltd
andl
int3
jbe
inc
cmp
popf
aaa
mov
std
test
mov
gs
test
mov
jp
mov
sahf
push
push
in
xchg
andl
loop
arpl
push
mov
push
sub
insl
fistl
pop
or
dec
xchg
or
testl
dec
loope
fdivrs
mov
cmp
lock
mov
adc
xlat
mov
sti
or
test
inc
movsl
jecxz
bound
add
sti
cmpsl
sti
fstpl
mov
loop
movl
sbb
push
cli
loope
xchg
xlat
mov
mov
pop
stc
inc
adc
push
inc
jae
jmp
mov
arpl
rcr
xchg
fcomps
push
cmp
inc
cmp
cltd
sti
sbb
or
in
mov
jnp
imul
add
loopne
mov
stc
xchg
lds
push
lea
inc
adc
loope
aaa
pop
mov
fldt
cltd
cmp
and
les
add
je
in
fldenv
sbb
movsl
dec
cmp
cmp
test
cli
pop
mov
arpl
and
jle
stc
fwait
ss
push
fs
cmp
cmp
or
pop
mov
movsb
adc
hlt
or
dec
xchg
aaa
inc
ret
cmp
xchg
mov
pop
mov
and
inc
pop
sbb
testb
andl
clc
dec
sbb
push
sub
add
jnp
leave
push
sbb
cld
sti
pop
inc
sbb
jno
mov
push
xchg
pop
sbb
cwtl
int
addr16
push
add
lods
inc
mov
pop
out
push
mov
outsb
fdivrs
mov
jmp
sbb
pop
sti
daa
iret
cltd
dec
sbb
mov
and
ret
sub
sub
and
push
mov
or
test
jnp
lds
mov
jl
add
xlat
and
xor
jno
loop
rcrb
iret
xchg
mov
das
cltd
ret
pop
out
pop
aas
push
add
sub
jno
mov
negb
clc
js
pop
push
test
mulb
lahf
arpl
sahf
and
arpl
in
sahf
and
sahf
and
aad
data16
in
ja
mov
adc
inc
mov
cmc
int3
sbb
int
fwait
in
cmp
jecxz
add
adc
mov
les
xchg
ss
imul
mov
jecxz
jmp
pop
shlb
push
cli
cmp
outsb
sti
mov
xchg
xchg
mov
inc
mov
jo
mov
aaa
lods
icebp
dec
pop
arpl
cmp
fldenv
testl
and
hlt
push
or
pop
cmp
and
mov
jns
add
dec
es
roll
push
xor
cmc
and
add
push
js
ret
leave
mov
sbb
cltd
jae
push
sbb
xlat
fildl
mov
pop
sbb
orl
movsb
movl
aam
add
sbb
cli
push
sbb
mov
popf
jae
xor
movsl
ss
add
mov
sbbl
inc
jns
xchg
push
stc
add
js
test
and
add
cmp
adc
sub
scas
mov
jae
cltd
shrb
lcall
jecxz
pop
lret
jno
ret
lds
sbbb
jle
inc
cmpsl
js,pn
add
push
pop
fadds
lock
or
cmp
push
mov
pop
fbld
jne
aam
sar
xor
add
fistl
in
add
je
loope
cmp
fwait
or
inc
in
add
fldenv
pop
mov
ds
add
or
js
or
sbb
and
sbb
pop
adc
out
fcoms
sti
sbb
mov
dec
push
mov
cmp
sbb
xchg
test
stc
mov
sbb
test
pop
movsb
xchg
outsb
push
cltd
loop
inc
or
sbb
push
jecxz
lret
icebp
data16
neg
aaa
iret
xchg
push
lds
loop
xor
out
je
mov
fldcw
popf
in
movsb
arpl
push
divl
push
cmp
aaa
rolb
adc
mov
sub
inc
out
clc
aam
mov
jmp
loop
sbb
lds
push
push
jnp
mov
mov
mov
add
pop
cmp
pop
mulb
xorl
and
lcall
cmp
movsl
jmp
ja
fldl
movsl
and
xchg
jnp
sbb
std
movsb
testb
idivl
or
imul
or
inc
push
add
mov
xchg
fwait
pop
cmp
jg
aad
add
lds
or
mov
adc
inc
mov
ja
cltd
out
fadd
inc
rorl
pop
pop
stc
repnz
clc
fsubl
dec
out
push
test
cmp
pop
mov
pop
adc
adc
cltd
jecxz
pop
mov
dec
cmp
adc
mov
cmp
inc
sub
lds
xlat
add
sbb
xchg
sub
fsts
clc
testb
jnp
xchg
gs
push
and
hlt
mov
and
jns
das
or
mov
fidivrs
pop
xchg
fcomps
pop
xchg
loope
clc
dec
cli
sbb
subl
pop
push
dec
jnp
and
loop
inc
clc
ja
shr
popf
cltd
pop
gs
prefetcht2
sbb
fldz
fwait
pop
fcomps
pop
aaa
mov
int3
add
insl
fildl
out
jns
les
aam
cltd
push
icebp
jo
cmpl
jge
and
mov
jg
push
sub
adcl
and
sbb
movsb
pop
jmp
jg
xor
rolb
out
adc
mov
icebp
outsb
add
test
mov
mov
cli
out
arpl
push
fistps
xchg
and
movsb
inc
int
in
lahf
cmp
pop
cwtl
jns
stc
xlat
pop
mov
sbb
mov
jecxz
out
jns
jb
xor
pop
xchg
fdivrs
cmp
dec
int
jmp
pop
and
mov
mov
jg
inc
jbe
pusha
js
push
xor
dec
cltd
neg
lahf
scas
cmp
arpl
cmp
xchg
xchg
js
cmp
sbb
or
inc
notb
cltd
aam
cwtl
ss
stc
inc
movsl
inc
xor
mov
add
fcoml
inc
lods
call
cwtl
push
jge
daa
test
ja
mov
push
xchg
push
sbbb
and
mov
iret
fnstenv
aad
aaa
and
in
xchg
and
movsb
cmp
xchg
bound
fwait
lds
dec
ljmp
pop
movsb
jnp
divl
pop
shlb
adc
icebp
mov
inc
cmp
idiv
fcoml
outsb
xlat
outsl
fadd
cmp
sarl
divb
xchg
cmp
and
add
lock
popf
dec
jge
xor
cmp
add
mov
inc
pop
push
test
mov
xorl
cwtl
adc
iret
idiv
mov
outsl
pop
jo
mov
and
loop
or
cmp
or
push
loope
add
stc
icebp
pop
and
pop
and
aaa
mull
sbb
add
xor
test
lds
jle
mov
sub
mov
inc
jae
or
les
scas
mov
jae
and
fbld
xor
fsub
add
push
cmc
jecxz
mov
sub
or
mov
mov
inc
out
shr
fsubrl
repnz
fadds
div
jecxz
mov
sbb
mov
insb
addb
js
adc
xchg
jno
leave
dec
not
sub
push
inc
xchg
cmp
mov
int
add
loop
cmpsl
and
pusha
and
movsl
fwait
shll
leave
xlat
or
sbbl
pop
or
push
call
into
cmc
jo
adc
sbb
dec
pop
mov
cmp
push
sbb
inc
sbb
and
shlb
inc
test
leave
arpl
lock
push
lea
sahf
repz
adc
xchg
dec
iret
inc
scas
idivl
sbb
xor
or
mov
push
add
rcrb
mov
pop
mov
and
inc
fwait
loop
fs
rcr
cmp
mov
les
jnp
pop
ljmp
test
ja
xchg
cli
add
mov
mov
cmp
inc
imul
add
mov
or
out
jge
fdivrs
fld
and
cwtl
filds
adc
test
popf
pushf
cs
sti
cmc
push
std
cmp
push
out
xchg
sarb
pop
arpl
and
mov
int3
cmp
xor
push
mov
and
cli
test
sub
in
jnp
xchg
test
sti
dec
mov
dec
cli
sbb
out
js
add
or
jecxz
or
mov
pusha
aaa
cltd
mov
adc
add
int
addl
sbb
in
sbb
icebp
and
and
fs
sbb
xor
sbb
push
jecxz
or
setb
inc
mov
negl
test
jnp
in
mov
mov
je
jae
adc
sbb
mov
xlat
stc
jle
ret
test
xchg
mov
xchg
and
xor
adc
xlat
mov
sbb
xchg
in
in
adc
neg
adc
mul
and
inc
cmp
popf
inc
fcmovbe
sarl
sub
cmpsl
add
sti
mov
push
test
fwait
jnp
sbb
pop
movsb
sbbb
lret
cmp
loop
ja
sbb
ds
sbb
mov
add
adc
jl
sbbb
push
xchg
mov
arpl
stc
sbb
mov
jnp
ficoml
das
pop
stc
aaa
mov
fcomip
inc
and
xchg
pop
cli
pop
pop
outsl
mov
xchg
stos
pop
loop
pop
and
push
test
in
test
ja
rcrl
sbbl
xchg
pop
stc
mov
xorl
mov
fisubl
sub
mov
xchg
or
popf
sbb
cli
or
not
test
enter
loop
icebp
rol
pop
adc
loopne
movsl
jg
pop
pop
add
xor
or
shll
push
andl
into
sub
mov
and
ret
fs
mov
push
mov
cmp
call
add
mov
stos
stc
test
inc
cli
fmuls
push
cmp
ja
xchg
jb
and
mov
inc
fwait
cwtl
and
aad
and
jle
pop
dec
fcompl
jecxz
sbb
push
stc
loop
jge
cmp
out
pushw
pusha
inc
add
in
and
cwtl
push
test
push
mov
lea
scas
jecxz
push
pushf
sbb
sti
sbb
mov
repz
in
mov
add
inc
or
stos
mov
mov
inc
mov
mov
stc
test
fcmovnu
pop
and
adc
push
ret
jno
cmp
in
test
jmp
sbb
add
popf
rcr
out
mov
out
sbb
fwait
cwtl
jecxz
push
cli
cltd
xor
mov
add
cmp
ljmp
rorb
data16
sbb
aas
out
xchg
ljmp
stos
inc
and
les
xchg
mov
negl
mov
in
push
xor
mov
inc
push
icebp
movsl
mov
arpl
or
cmp
cmp
mov
mov
xlat
clc
cmp
xor
test
sub
push
call
cmp
adc
nop
cli
fcoml
ret
fnstcw
and
jecxz
idivb
sbb
mov
inc
add
xchg
jge
cltd
push
mov
mov
addb
pop
dec
rcr
xlat
movsl
test
sahf
mov
xor
jnp
lds
sahf
inc
sbb
loop
adc
cmc
pop
sbb
add
and
idivl
mov
xor
shlb
push
and
rclb
rcrb
fsubs
outsl
ja
cli
push
and
dec
push
ds
xchg
pop
cltd
mull
cmp
stc
les
xchg
in
aaa
fs
xchg
mov
imul
jns
mov
testb
arpl
mov
cmp
ja
popf
inc
test
cwtl
inc
hlt
rcrl
lods
lds
adc
sbb
xchg
sub
aam
and
xchg
cwtl
adc
fstpt
dec
mov
cwtl
aaa
sbb
sti
xchg
jp
pop
pushf
cmp
xor
fidivs
mov
cli
xchg
lock
gs
cmp
iret
add
movsb
fstps
and
adc
repz
notb
out
shlb
aam
or
int
mov
sbb
loop
jecxz
push
in
lds
pop
clc
inc
mov
test
pop
dec
notl
add
mov
mov
and
mov
or
adc
xchg
mov
negl
fwait
sbb
mov
scas
out
nop
cmp
aas
xchg
sti
cli
pop
fs
mov
mov
mov
pop
test
in
cmp
and
test
sbb
xor
icebp
sub
pop
jns
mov
out
inc
icebp
test
call
xchg
cltd
dec
shlb
jnp
pop
inc
iret
jnp
inc
sbb
mov
mov
fidivrs
add
andb
mov
fwait
xor
xchg
jae
lret
movsb
sbb
fistl
sbb
jnp
add
adc
movsl
pop
ficompl
mov
push
nop
add
sti
cltd
jno
pop
jnp
fs
adc
arpl
add
scas
sahf
leave
shl
fwait
js
cmpsb
inc
pushf
pop
dec
ds
stc
das
inc
dec
mov
fsts
out
sbb
lds
movsb
mov
loope
cwtl
inc
lock
lret
cmp
das
or
ret
cli
mov
cmp
jno
mov
ljmp
iret
pop
dec
cmp
adc
push
fwait
xor
testb
mov
cmp
pop
sbb
add
cmp
mov
cmp
lahf
adcl
lahf
sbb
or
hlt
and
pop
dec
mov
jnp
cmp
mov
daa
jo
sub
test
mov
push
js
lahf
popa
idivb
int
imul
sbb
and
cmp
cli
mov
and
jge
xor
inc
test
add
lds
push
loop
push
and
sbb
cs
ret
cmp
and
js
pop
adc
sbb
xchg
sbb
inc
add
pop
adcb
pop
ss
pop
sbb
clc
testb
inc
sbb
add
fnstcw
fsubs
das
lcall
cwtl
ja
dec
or
or
mov
cmc
repnz
cld
jl
add
mov
ljmp
cmp
cwtl
xchg
mov
icebp
mov
pop
testb
pop
ret
sbb
or
sbb
testl
cmp
les
das
or
dec
pop
pushf
test
or
aaa
out
mov
inc
jnp
and
fisttps
or
xchg
pop
mov
fwait
cmp
xchg
or
ds
test
loop
or
pop
jle
jns
arpl
xlat
lods
das
ret
pushf
stc
test
fmuls
hlt
xor
and
test
jle
movsl
pushf
dec
clc
pusha
sub
cmp
rcr
cmp
popf
mov
not
and
mov
lods
inc
ret
lds
popf
sbb
out
shl
mov
fsubs
aaa
fs
sub
fidivrs
in
int
idivl
fstp
sahf
pop
fmuls
fadds
in
les
sbb
lcall
loop
test
sub
mov
dec
inc
fnsave
xlat
pop
and
addl
adc
fdivrs
cltd
sti
cmp
mov
mov
xchg
mov
popf
outsb
mov
cmpsl
sbb
icebp
cli
add
pusha
push
inc
jo
inc
cmp
cld
jns
xor
lds
hlt
adc
cmp
arpl
push
mov
add
add
jbe
xchg
shlb
subl
push
sub
test
xchg
clc
mov
mov
push
mov
pop
das
sbb
arpl
add
test
lds
mov
and
pop
in
mov
leave
leave
notl
add
xor
jb
inc
pop
mov
fsub
mov
push
fnstcw
pop
sti
stos
mov
int3
mov
xlat
or
add
cmc
xlat
cmpsl
jl
cwtl
xchg
mov
cmp
add
xchg
arpl
pop
jne
and
pop
cmp
rolb
jo
sbb
xchg
cmp
pop
fwait
and
or
and
inc
test
stc
in
add
adc
sti
pop
mov
pop
fldt
xor
mov
arpl
fadds
cmp
loopne
add
inc
cmp
xchg
push
sbb
insl
sarb
dec
fwait
outsl
lahf
shrl
xlat
sbb
mov
push
in
jl
sbb
fwait
nop
mov
and
cmp
inc
jmp
add
cli
pop
cmp
cltd
push
arpl
push
push
mov
mov
push
lret
ret
and
mov
sub
sbb
and
in
cli
sbb
icebp
arpl
fsts
or
add
inc
jmp
subl
int
sti
mov
xchg
fs
inc
inc
and
cltd
fcmovnb
pop
inc
sbb
cwtl
dec
mov
sti
push
std
cmp
fldenv
pushf
xlat
sti
lea
pop
push
push
loopne
push
test
in
xor
loopne
stc
push
add
inc
std
add
dec
or
add
cli
clc
enter
jo
arpl
test
push
in
dec
inc
mov
xchg
mov
mov
js
push
sbb
and
cmp
add
mov
nop
scas
mov
mov
sbb
add
push
addr16
in
push
fwait
inc
call
pop
cli
lret
inc
sbb
xorl
dec
and
test
and
daa
sbb
mov
fs
xor
fs
inc
sub
test
in
les
fildl
mov
test
pop
and
mov
jns
shrb
jae
cltd
and
inc
push
xlat
sub
mov
sbb
mov
fstps
xor
jge
sbb
xchg
ret
or
xlat
sti
scas
pop
adc
andb
int3
loope
test
and
icebp
jns
arpl
cmp
aaa
nop
mov
cmp
test
test
neg
push
dec
cmp
cltd
jnp
jns
shrb
cmp
out
movsl
leave
insl
sbb
or
out
lds
jno
and
mov
cmp
inc
mov
roll
xchg
int3
mov
fnstenv
xchg
mov
mov
inc
add
mov
push
add
fistpl
clc
add
sbb
xchg
stc
aad
sbb
mov
push
ja
int
sbb
pop
mov
add
fwait
add
movsl
xlat
pop
test
in
mov
mov
jnp
mov
mov
and
xor
fadds
push
cmp
int
add
xor
test
jns
fsubs
les
and
mov
jg
sbb
ja
and
aaa
push
jl
shll
xchg
rclb
xchg
testl
jecxz
pop
sub
sbb
xchg
sbbl
push
jo
add
fisubs
inc
xor
push
mov
fnstsw
sub
push
mov
aaa
popa
lret
and
dec
leave
rcl
and
push
mov
mov
push
clc
subl
inc
dec
and
mov
cmc
das
pop
xor
fs
gs
or
push
sbb
jns
xor
or
fwait
cmp
or
scas
iret
movsb
add
mov
lds
mov
faddl
in
mov
loope
jns
jmp
mov
repz
and
sbb
mov
mov
dec
hlt
lcall
inc
sbb
mov
xor
sub
shll
cmp
inc
adc
sti
and
cmp
es
mov
in
lods
mov
sbb
sub
push
xlat
clc
jo
xor
jo
ret
fildl
pop
pop
cmp
lods
in
mov
and
inc
fdivr
adc
sbb
out
sbb
xor
add
stc
cmp
sbb
test
adc
mov
popa
mov
push
push
inc
negb
pop
fsubrs
mov
ret
fistl
fwait
pop
adcl
mov
jae
std
adc
xchg
out
xlat
pop
jae
adc
mov
or
cltd
sar
stc
and
fcoml
inc
xor
fsqrt
mov
push
imul
pop
add
cmp
les
ja
test
loop
jbe
fwait
adc
es
cltd
es
sub
movsb
add
shlb
xor
sub
mov
sbb
andl
gs
leave
cltd
leave
nop
dec
and
jns
mov
lret
rcl
mul
fadds
cltd
in
in
cs
pop
or
add
ss
pop
adc
ja
jnp
std
fdivs
rol
mov
push
mov
nop
adc
xlat
jno
xchg
scas
push
inc
pop
arpl
movsb
sub
push
mov
or
cltd
add
mov
sub
or
js
cmp
xchg
or
out
ja
mov
xlat
and
pop
idiv
push
and
pop
popa
inc
adc
add
cmp
push
dec
inc
in
jge
jae
gs
movaps
xor
sbb
mov
pop
js
pop
lds
xchg
stc
push
pop
cmpsb
cwtl
test
adc
cmp
mov
mov
xor
pop
in
lcall
jecxz
jl
xchg
push
iret
inc
xor
in
stc
jns
mov
cmp
js
negl
and
xlat
or
and
and
in
jmp
cmp
fs
jg
cmpl
popa
jnp
test
and
jecxz
fsub
jb
mov
sub
outsl
mov
xlat
shl
inc
stc
mov
dec
insb
cmp
stc
ret
daa
call
add
cli
sbb
cwtl
clc
inc
or
push
push
mov
xlat
cmp
pop
mov
sbb
and
mov
or
and
scas
sbb
jl
jle
je
jge
mov
push
add
xorl
jecxz
mov
insl
fmuls
ret
rcr
js
stc
mov
loopne
test
sbb
idivb
mov
adc
je
sub
mov
sti
add
mov
lds
in
and
adc
add
outsb
sarb
or
enter
mov
mov
aaa
mov
push
mov
repz
sarb
test
mov
and
push
mov
mov
pop
fsubs
mov
and
cli
gs
ret
cltd
push
mov
mov
pop
mov
mov
stc
aas
mov
xlat
xor
cli
movsl
cmp
pop
sbb
ret
lret
ds
mov
jno
outsb
ret
ljmp
dec
lods
shll
cmp
gs
arpl
push
test
push
imul
clc
popf
loop
aam
sbb
cltd
fnstcw
jo
pop
neg
lds
mov
mov
mov
arpl
out
add
aam
dec
sarb
add
arpl
push
adc
movsb
add
jmp
mov
scas
and
and
inc
sub
movsb
xlat
push
add
fcmovnb
loop
add
stc
pop
jns
mov
pop
cltd
xor
iret
add
test
push
adc
jecxz
xor
notl
sbb
adc
and
sti
sbb
psubb
add
xlat
and
inc
mov
cmp
cmp
dec
in
mov
lods
sahf
je
jmp
add
mov
popa
aas
stc
daa
mov
sbb
nop
xchg
mov
andl
mov
adc
jnp
pop
xchg
cwtl
lahf
iret
fdivr
xor
add
aaa
xlat
push
lds
fistpl
and
or
inc
fs
addl
pop
pop
jb
pop
inc
mov
mov
add
rcl
aaa
push
and
scas
aaa
add
pop
mov
fstps
mov
xorb
add
data16
mov
sahf
dec
je
orb
xchg
jns
scas
cwtl
add
test
inc
pop
add
das
in
pop
pop
inc
cli
cli
testl
fadd
add
xlat
or
sbb
test
and
out
xchg
jns
cmp
adc
push
inc
aaa
sub
rolb
inc
add
push
cmp
and
pop
cmpl
push
xchg
es
push
movsl
xchg
testl
mov
cmp
add
stc
add
cwtl
out
sbbl
inc
add
fildl
idivb
push
stc
cltd
inc
fldenv
mov
sbb
add
sub
cmp
and
call
les
pop
jo
lds
ret
movsb
clc
jnp
int
loop
xchg
gs
lods
cwtl
add
outsb
sbb
test
jmp
pop
push
mov
and
in
sahf
mov
js
fistpl
mov
push
call
cmp
push
pop
add
pop
fistpl
test
movsb
mov
mov
aad
jle
xor
shlb
xchg
and
lock
arpl
cltd
scas
jns
mov
or
and
sar
sbb
adc
not
adc
jmp
xchg
les
sbb
and
push
not
mov
in
sahf
add
and
fistps
jecxz
add
pop
and
les
fwait
mov
arpl
push
es
mov
clc
arpl
inc
dec
loope
xchg
ja
stos
fstpt
sti
loop
fsubp
cli
and
fcoms
gs
xchg
cmp
or
test
arpl
and
add
pop
and
jecxz
fistl
jg
jae
push
cmp
cmp
mov
mov
fistl
clc
pop
icebp
and
and
flds
dec
push
popf
testl
stos
sahf
cmp
jns
frstpm(287
test
push
lds
push
pop
or
cmp
and
aaa
cltd
push
inc
imul
mov
add
xchg
stos
pushf
sub
aaa
pushf
inc
sbb
or
stos
mov
loopne
movsl
sbb
mov
jecxz
and
aad
mov
cmp
data16
jne
shl
ja
adc
xchg
push
and
in
ja
and
rorb
xchg
sub
jmp
push
test
stc
jae
sti
lcall
pop
ret
inc
jb
cwtl
xor
fsts
clc
shll
push
pop
pop
pop
push
lcall
aaa
sbb
dec
mov
push
push
cwtl
stc
xor
mov
repz
sbb
mov
mov
sub
ficomps
add
or
cli
mov
insb
fcoms
pop
mov
pop
out
and
sti
cmp
repnz
sbb
cli
push
flds
and
leave
cmp
pop
lds
xchg
lcall
xchg
lods
out
rorb
xor
jnp
sbb
out
xlat
push
js
iret
sahf
mov
add
call
cwtl
xlat
push
cmp
xchg
in
xchg
test
sub
test
xchg
or
push
and
mov
adc
test
push
jo
xlat
inc
sub
sbb
insl
out
std
cmpl
cmp
jae
dec
jmp
outsl
sbb
push
jae
ret
std
outsb
mov
jge
in
in
inc
insb
cwtl
sub
xchg
lcall
jl
pop
cmp
pop
add
and
nop
xor
jno
aam
in
xor
xchg
lds
cmpb
inc
xchg
lret
pop
and
mov
add
dec
test
cmpsl
iret
jecxz
mov
cmpsb
adcb
rcrb
shll
mov
clc
and
pushf
push
adc
andl
fs
inc
and
jns
iret
add
test
pop
mov
mov
push
inc
sbb
inc
fwait
cltd
add
push
xor
test
xlat
jl
add
loope
add
aad
call
mov
loope
xchg
xchg
fmuls
cmp
mov
mov
inc
pop
or
push
push
and
sahf
mov
or
xor
add
add
sbb
jns
clc
movsb
jge
push
pushf
mov
les
hlt
rorl
add
inc
inc
cmp
ret
cmpsl
mov
jmp
roll
mov
movsb
push
mov
mov
fiaddl
loop
cwtl
mov
outsb
add
in
test
in
and
fcomps
cmc
push
dec
or
pop
sti
jno
sbb
fwait
aaa
loope
sbb
cmp
pop
pushf
out
iret
ja
mov
loop
stc
xchg
cmp
fld1
add
sbb
pop
dec
jns
xchg
add
jnp
inc
sbb
in
adc
jns
mov
icebp
call
xlat
sbb
xor
cmp
jnp
jecxz
inc
mov
jmp
or
aam
xor
xor
and
sbb
pop
adc
movsb
les
in
dec
aaa
arpl
sbb
mov
fmuls
fwait
or
jge
movsb
inc
push
cmp
testb
pop
sti
push
mov
subl
clc
scas
cwtl
push
fnstenv
jno
pop
fs
push
add
mov
loope
sbb
aam
shlb
inc
jo,pn
add
stc
inc
xlat
adc
mov
xchg
cmpsl
xchg
mov
push
sbb
enter
sbb
jecxz
inc
xchg
sbb
pop
test
fwait
pop
divb
movsl
gs
pop
nop
cmp
lret
jl
fstl
add
inc
ja
and
jl
insl
sahf
pop
cs
loope
mov
sbb
nop
ja
dec
lcall
movl
mov
movsb
fistps
sub
pop
out
inc
and
ret
leave
sbb
and
sti
inc
xor
aam
inc
push
mov
test
xor
fdivrs
pop
sbb
imull
add
clc
cwtl
add
push
mov
mov
inc
fwait
sbb
cmp
stos
loope
add
sbb
pop
and
xor
pop
das
out
mov
cltd
jge
and
roll
push
pop
adc
xor
fstpt
or
ret
mov
jne
popa
dec
dec
ss
sarb
fldenv
push
mov
inc
mov
stos
add
jo
and
and
xchg
mov
push
loop
add
in
lds
std
movsl
sbb
out
xchg
and
and
pop
xchg
cmp
addr16
aam
mov
mov
arpl
cmpsb
inc
pop
or
xor
insl
in
pusha
cltd
fwait
sbb
inc
pop
fisttps
iret
adc
adc
subl
and
ror
fcoms
pop
mov
sbb
inc
flds
mov
icebp
fstpt
aaa
les
jno
cmp
cmp
or
in
or
addr16
mov
ja
push
cmc
ljmp
inc
outsb
sbb
es
out
insl
out
cwtl
dec
cltd
or
sti
sub
pop
push
cmp
xlat
pop
cltd
mov
pop
mov
mov
pop
push
mov
aaa
sbb
mov
cmp
xchg
mov
clc
push
jecxz
sbb
jnp
in
mov
ret
sbb
pop
mov
mov
stc
adc
inc
mov
add
bnd
std
sbb
pop
or
andb
call
and
in
shll
sbb
cmp
scas
xchg
mov
pushf
je
cmp
popf
push
dec
out
gs
adc
or
sbb
adc
push
xchg
jno
and
xlat
loop
cwtl
fcmovnbe
mov
div
adc
shrl
inc
fidivrs
pop
and
aaa
mov
and
and
ja
cli
fadds
stc
add
negl
fs
pop
js
pop
aaa
lds
add
scas
and
push
sbb
sbb
cwtl
ficomps
push
and
jns
and
add
dec
clc
cmp
inc
cld
push
addl
jo
jnp
lds
out
xlat
add
adc
cmp
sbb
pop
stc
adc
and
cwtl
arpl
or
pop
daa
mov
inc
pushf
mov
sbb
add
pop
xor
cli
push
jecxz
mov
sbb
add
sbb
fstps
ret
pop
cwtl
in
cmp
sub
ret
jns
xorl
add
test
sbb
bound
dec
fwait
outsl
cltd
jnp
add
cmp
outsl
xchg
jo
add
fdivrs
pop
mov
scas
jnp
jns
pop
lock
push
into
stc
xchg
daa
insl
pop
push
xchg
sbb
mov
aaa
cmp
sbb
cwtl
pop
pop
sbb
not
inc
dec
cmp
adc
jmp
jle
dec
jo
fisttpl
mov
sub
movsl
daa
test
ror
sbb
cwtl
and
push
or
cmp
lds
jmp
cltd
adc
mov
or
test
in
adc
dec
in
adc
or
idivb
pop
jecxz
jp
pop
and
testb
mov
push
adcl
imul
test
xor
pop
ret
clc
mov
fwait
jnp
ja
mov
out
push
scas
mov
outsl
sbb
pop
test
and
mov
cmc
push
push
and
add
int3
jle
leave
dec
and
inc
cli
les
and
pop
inc
test
and
sub
adc
adcb
push
test
cmp
aaa
push
add
sub
fwait
iret
ja
xchg
and
jbe
in
imul
lret
jns
jp
add
frstor
in
inc
mov
mov
pusha
aam
pop
cmp
mov
and
jb
sahf
test
fcompl
and
pop
cli
int
xor
add
sbb
cmp
xor
pop
xchg
pop
and
cmpsb
and
es
push
dec
adc
jecxz
fwait
pusha
or
movsl
mov
pop
cmc
xor
hlt
xor
add
lcall
and
xchg
add
lcall
ret
fwait
and
pop
sahf
push
or
movsb
mov
lods
lds
sti
xlat
popf
cli
mov
adc
arpl
push
icebp
mov
add
shll
int3
outsl
call
inc
ss
xchg
push
fwait
inc
jge
in
xlat
aam
cmp
push
add
insb
out
add
outsb
clc
gs
sub
or
and
push
xchg
push
ret
mov
inc
arpl
lret
adcl
and
add
push
fwait
clc
gs
out
and
jns
pop
push
lret
adc
les
rcrl
and
cs
mov
sub
ret
mov
adc
add
inc
repnz
or
sbb
mov
or
jbe
cmpsl
fldt
mov
shll
rcrl
aad
addl
sbb
and
dec
mov
push
jg
adc
pop
icebp
and
insl
pop
sahf
push
mov
loope
in
mov
orb
popf
push
pushf
dec
sbb
push
and
push
movsl
cmp
arpl
popf
in
cli
add
cmp
stc
sbb
adc
arpl
jmp
movsb
cmpl
xchg
mov
icebp
imul
inc
pop
xchg
test
mov
loopne
dec
cmp
pop
sbb
shrb
mov
fs
mov
jmp
inc
mov
jg
fcomps
sbb
sahf
fstps
iret
xchg
clc
scas
xor
add
xor
xlat
pop
mov
sub
or
mov
cmp
pop
in
push
test
shlb
aad
test
ret
in
insl
test
movsl
dec
mov
sahf
lret
int
test
push
loop
and
pop
xchg
jb
mov
mov
insl
and
jnp
or
in
rcr
xor
or
mov
mov
cmp
or
pusha
jbe
fadds
fcomp
xchg
cmc
loop
popa
mov
mov
pop
push
sbb
fwait
pop
and
fs
out
fwait
jmp
fstps
loopne
sbb
mov
repz
addl
fildl
stc
mov
pop
xchg
pop
cld
xlat
call
cwtl
neg
mov
add
cmp
int
int3
aam
xchg
clc
negl
repz
outsb
ret
pop
cmp
or
cmp
pop
sub
addr16
mov
jne
sbb
stos
or
pop
cmp
pop
imul
and
fisubl
cmp
xchg
add
pop
clc
ja
add
dec
add
pop
movsb
pop
xor
sbb
inc
jecxz
cli
adc
outsb
fwait
and
and
xchg
add
inc
sbb
pop
inc
mov
imul
sbb
and
push
or
into
mov
xor
pop
ret
and
jnp
jb
jecxz
jo
mov
sbb
dec
mov
and
pop
inc
mov
arpl
popf
and
pop
xchg
add
jmp
cmp
ja
sti
cmp
add
not
fldenv
push
inc
jo
mov
les
or
ljmp
loopne
add
test
jecxz
and
inc
imulb
or
cmp
movsb
push
aas
outsl
sub
pop
pop
jecxz
push
test
pop
cli
add
popa
pop
sti
lahf
fdivs
stc
fwait
xor
test
pop
xchg
les
mov
cltd
pop
and
xchg
ret
shll
add
mov
jns
xchg
cmp
ret
pop
jl
cmp
add
pop
clc
cmpl
and
mov
mov
mov
sbb
mov
divb
and
movsl
sbb
pop
xlat
into
clc
cmp
pusha
ret
jnp
int3
cli
add
sbb
fdivs
dec
mov
add
xchg
add
or
xor
loop
jp
aaa
xor
mov
clc
push
mov
in
popf
movsb
fldcw
mov
cmp
jns
cltd
jmp
pop
mov
jmp
add
jge
jnp
push
mov
jns
mov
xchg
mov
cs
push
push
lcall
jns
xor
and
sbb
lds
push
pop
or
test
movsl
push
pop
push
aaa
xchg
loop
in
xor
fs
arpl
cmp
push
cmp
push
adc
cmp
dec
clc
testb
icebp
sti
xchg
ja
cwtl
inc
inc
mov
pop
cmp
jns
cmp
mov
sti
in
pop
xchg
add
fisubl
cwtl
mov
lods
mov
out
xor
jns
add
mov
negl
pop
lds
aaa
aaa
rcrl
and
inc
fdivrs
out
movsb
daa
dec
jecxz
mov
dec
dec
lods
fxch
sbb
cwtl
push
js
aaa
xchg
out
ja
or
pop
in
pop
mov
lock
in
sbb
adc
test
adc
outsb
sbb
inc
loop
and
and
clc
pop
in
mov
das
stc
mov
cltd
shl
fwait
mov
pop
shl
add
and
mov
push
cli
dec
and
movsl
xchg
cmp
stc
test
jns
add
inc
in
inc
in
mov
test
or
fadds
cmp
add
fs
xor
hlt
jnp
or
add
jne
and
sub
mov
int3
add
nop
push
popf
ja
fdivs
orl
cmp
adc
dec
notl
faddl
mov
pop
sahf
push
in
pop
mov
adc
ja
sbb
cmpsl
mov
inc
xor
pop
and
xchg
arpl
shl
push
add
imul
movsl
sbb
test
hlt
pop
ficompl
xor
mov
nop
cmpsl
mov
xchg
sub
add
jnp
add
lcall
arpl
movsl
ret
mov
or
add
notb
sub
in
ja
mov
out
nop
out
mov
mov
cmp
sbb
fstps
mov
in
fistps
movsl
call
xor
gs
pop
fisttpll
jne
mov
add
arpl
movl
mov
xor
cli
push
sbb
cmp
xor
or
clc
push
push
adc
mov
jl
pop
inc
lret
xchg
and
lds
and
mov
leave
ja
arpl
add
and
sahf
aam
shlb
lods
outsb
dec
or
fnstcw
dec
pop
lds
pop
push
mov
add
decl
push
pop
mov
cltd
movsb
inc
gs
lods
loopne
push
out
xorl
add
jnp
push
cwtl
in
pop
add
jbe
fbstp
rcrl
ljmp
fs
outsl
testb
into
nop
cltd
pop
les
jno
pop
popf
lds
mov
mov
addb
jle
cld
mov
cwtl
push
xchg
cmp
jg
dec
enter
adc
dec
adc
and
mov
mov
cwtl
xchg
fwait
sbb
mov
testl
je
sbb
shrl
stc
xlat
pop
xchg
aad
and
cltd
test
add
mul
pop
sahf
push
sar
in
add
mov
xor
and
ja
pop
push
jb
and
lock
imul
mov
shlb
inc
fwait
cmp
xor
cmp
std
scas
jb
sbb
scas
inc
inc
add
js
xlat
or
push
pop
mov
aaa
mov
pushf
sbb
ficoml
or
add
cmp
jecxz
adc
mov
iret
cli
int3
scas
out
jo
movsl
loop
jnp
mov
cmp
mov
subl
add
mov
push
pop
jecxz
mov
cwtl
fcomps
or
lret
mov
clc
cwtl
mov
mull
fwait
inc
es
rcl
cmp
mov
pop
dec
dec
inc
rorb
rolb
iret
mov
or
lahf
mov
xlat
cmp
divb
lahf
test
rorb
aaa
mov
cli
pop
ret
enter
add
ret
test
add
xlat
add
scas
pop
les
sbb
pop
sub
lock
stc
arpl
sahf
adc
and
andl
mov
add
and
sbb
imul
push
mov
ficoml
add
cmp
or
sti
push
imul
adc
in
enter
jnp
xor
jb
add
mov
jo
testb
xchg
inc
popf
or
cli
iret
mov
fwait
push
test
mov
fs
mov
xchg
dec
gs
push
push
fdivr
mov
sahf
stc
xor
cltd
ja
movsb
aaa
and
gs
xor
fs
jecxz
mov
sub
xchg
in
jp
sti
push
xchg
cli
or
cmp
sub
jge
pop
rorl
jnp
push
lret
test
les
dec
cmp
and
testl
popa
clc
fisttpl
into
int
fnstcw
inc
sti
push
add
js
inc
inc
arpl
push
fadds
arpl
add
imul
icebp
fstps
fldcw
test
movsb
out
in
rdtsc
cs
sti
sbb
add
hlt
pop
data16
dec
and
adcl
mul
cmp
loop
sbb
add
push
out
mov
cmp
sbb
sbb
and
mov
cmp
pop
add
test
andl
clc
add
arpl
sahf
sahf
inc
xchg
imulb
mov
imul
pushf
mov
lock
sahf
jp
out
addb
outsl
mov
js
jns
es
ja
jge
pop
cwtl
sti
inc
lds
movsb
xchg
pop
in
mov
sbb
mov
loopne
sbb
mov
xor
sbb
or
pop
lods
shll
mov
stc
pop
sti
cmpl
adc
repnz
xchg
xchg
mov
out
js
add
add
sahf
mov
push
outsl
push
movsb
iret
out
iret
cmp
and
and
push
sbb
fsubr
xor
in
fistpl
push
xchg
leave
inc
mull
pop
xlat
push
iret
jbe
cmp
cmp
clc
lods
push
and
mov
fistpll
rolb
int3
or
add
sbb
pop
or
pop
out
pushf
add
daa
into
inc
adc
jecxz
vdivss
outsb
ja
push
dec
pushf
cmp
fsubr
aaa
out
or
imul
jne
adc
adc
icebp
cld
mov
sub
fdiv
arpl
mov
jmp
and
inc
or
xor
add
jecxz
adc
cmp
in
leave
lock
mov
push
and
test
andl
aaa
pop
pop
inc
cltd
test
int3
jp
xor
or
xor
jecxz
mov
int3
negb
mov
gs
movsb
fsub
xchg
fldcw
xlat
sbb
insb
test
push
fldenv
stc
stc
pop
cltd
mov
cs
jns
stc
mul
or
push
arpl
in
inc
scas
test
lcall
dec
dec
cmp
push
movsb
sbb
pop
xlat
pop
ja
push
sbb
push
adcb
mov
pop
jle
cwtl
ret
push
pop
ja
xchg
movsl
jns
mov
mov
mov
and
jnp
test
or
cmp
and
cmpsl
sbb
int
shrb
nop
jne
stc
cwtl
fld
clc
loop
and
test
sahf
imulb
add
dec
jo
lcall
into
movsb
lods
and
out
clc
mov
mov
mov
sub
popa
gs
mov
xchg
test
pop
sbb
fs
fistps
push
lea
out
clc
stc
push
in
sub
orb
jle
sbb
clc
mov
sbb
pop
and
es
pop
clc
push
pusha
jne
inc
stc
mov
or
rcr
inc
fists
test
mov
scas
pop
in
mov
cmp
fistps
push
mov
clc
sbb
call
add
movsl
lea
xor
fisttps
sahf
out
enter
cmp
xchg
fisttps
clc
adc
clc
fwait
mov
pop
jecxz
arpl
or
mov
pop
clc
pop
stc
pop
inc
mov
mov
lcall
aaa
add
inc
xor
cli
cmpl
push
add
jecxz
pop
cmp
idivl
sub
inc
push
cltd
sahf
and
cmp
inc
sbb
sti
aam
xor
mov
mov
xchg
sbb
rcll
sbb
subb
mov
jge
jne
add
sti
fcomps
add
pop
add
cmp
xlat
repz
in
lds
pop
jnp
inc
inc
cmp
xchg
out
test
cmc
fld
jle
inc
dec
push
xchg
xchg
ret
mov
xlat
fcomi
or
and
cltd
cmp
rolb
ss
push
fsts
mov
adc
loopne
cwtl
push
lds
andl
adc
popf
fcom
pushf
insl
sbb
inc
dec
push
sarl
sbb
mov
in
add
inc
sub
test
pop
int
and
les
dec
dec
jmp
sbb
movsb
test
fs
cmp
js
mov
cmpb
test
jg
xlat
jecxz
push
add
in
or
and
in
movsl
clc
stos
test
pop
or
push
rolb
and
mov
movsl
xchg
orl
sbb
mov
sti
mov
arpl
jge
inc
xchg
jmp
jb
xchg
dec
push
add
xchg
fwait
stc
loope
cwtl
fstpt
xchg
loop
rcr
mov
lds
les
aaa
lock
mov
cmp
test
jge
mov
loop
fwait
pop
rcrb
mov
ret
jae
jo
cwtl
mov
jge
sti
arpl
gs
mov
pop
lahf
aad
jp
test
adc
jge
push
mov
mov
pop
jns
pop
and
ret
and
mov
js
cmpsl
pop
sti
or
out
add
xor
movsl
mov
cmpsl
xchg
cmp
mov
jo
frstpm(287
cltd
dec
lea
aam
mov
out
fdivrl
xor
aas
or
mov
js
push
mov
jle
sbb
in
adc
adc
and
nop
push
pop
sub
mov
movsl
mov
mov
cli
inc
fdiv
pop
out
jg
mov
dec
mov
popf
fcom
iret
or
xchg
cmc
roll
in
jl
ja
imul
pop
testl
jns
ret
cmp
xchg
js
and
in
leave
incl
in
fwait
adc
sti
cmp
mov
xchg
xorl
ret
add
mov
and
addl
add
pop
pop
sbbl
andl
xor
mov
add
add
cmp
add
and
or
add
jnp
sbb
ret
mov
cltd
ja
out
cmp
mov
lds
cmpsl
or
outsl
jns
pop
shlb
das
mull
inc
int
and
hlt
out
jnp
out
arpl
xchg
fnstcw
add
lret
mov
and
and
loop
sti
adc
pop
cltd
in
sbbl
xlat
aaa
and
mov
std
callw
mov
inc
cmp
xchg
sub
movsb
imul
inc
cltd
decb
cmp
cmp
adc
mov
icebp
dec
add
mov
cmp
xchg
lret
icebp
push
add
xchg
add
push
icebp
add
cltd
xor
out
ficomps
jl
or
push
inc
push
add
mov
cmpsl
jecxz
stc
les
cli
fmul
push
and
and
pop
rcr
roll
lock
pop
fs
lcall
or
stos
xlat
sbb
int3
mov
sbb
insl
ja
aas
and
and
mov
pop
aaa
gs
dec
sub
in
mov
add
pop
sbb
sti
sub
push
xor
mov
fcomps
rclb
es
dec
pop
mov
xchg
mov
sbb
mov
inc
stc
test
cs
outsl
push
jecxz
insl
add
jg
or
movsb
cli
mov
and
xchg
loopne
js
mov
ret
cltd
fsub
or
out
pop
fwait
nop
lods
jecxz
xor
lds
inc
aaa
popf
mov
test
cmpsl
aam
xorl
popa
js
or
push
sub
jecxz
popf
jecxz
aad
inc
cmp
rol
push
arpl
popf
sbb
movsl
dec
add
pop
mov
mov
sbb
sahf
add
adc
cwtl
test
cmp
divl
push
out
adc
push
dec
fcmovne
lods
jo
test
mulb
add
aad
jo
lret
jecxz
std
mov
jl
xor
ret
mov
test
xchg
jmp
aad
adc
pop
mov
inc
rol
mov
mov
out
or
add
pop
push
ja
jge
cs
jnp
inc
movsl
pop
push
jns
cmp
fwait
aas
stc
pop
loop
mov
pushf
cmp
enter
les
push
mov
cwtl
xchg
rorl
push
stos
push
xchg
cmp
pop
in
pop
les
into
inc
mov
js
and
xchg
mov
mov
xor
cli
dec
or
out
xchg
adc
push
cwtl
mov
and
xlat
mov
cwtl
mov
test
xor
jmp
lret
cmp
out
mov
sti
inc
stc
loop
andl
and
inc
in
add
stc
jmp
les
xchg
sbb
mov
sbb
sub
push
loope
add
jo
push
and
sbb
and
test
fidivs
pop
cwtl
cmp
and
in
xchg
cmp
pop
jns
cs
ret
pop
sbb
lods
jb
mov
sbb
pop
ja
push
lock
mov
sub
sbb
add
andl
imul
es
adc
and
test
sub
ja
push
xchg
mov
fwait
add
or
loop
arpl
aaa
adc
popf
sti
js
leave
mov
jo
fnstcw
jge
fildl
add
add
pop
adc
jnp
lock
test
jne
idivb
cltd
mov
in
fs
hlt
adc
scas
push
pop
pop
and
and
pop
add
pop
outsl
ret
les
mov
movsb
push
sbb
std
leave
pop
xchg
adc
leave
xor
jmp
ds
add
ror
cmp
push
sbb
ja
leave
pop
aad
add
inc
stc
movsb
jecxz
lret
les
mov
fmuls
iret
cmp
xchg
add
mov
hlt
add
ss
lret
ds
jb
pop
out
movsl
push
mov
enter
stc
fwait
sahf
cmp
jmp
xchg
gs
dec
in
pop
mov
mov
arpl
adc
adc
scas
movsb
in
idivb
cmp
add
fisubs
in
add
xchg
not
sti
and
inc
ret
xor
and
jb
mov
sbbl
fs
fldcw
ja
aaa
icebp
les
inc
fldcw
gs
shlb
icebp
cltd
jnp
cmp
jne
inc
sbb
hlt
cmp
pop
stc
loope
fstps
movsb
mov
sbb
daa
xchg
sbb
jae
push
or
test
loopne
jns
or
repz
push
sbb
sti
arpl
fnstenv
mull
sbb
jge
mov
fsubs
and
inc
clc
div
adc
and
jp
sbb
jns
xchg
ret
or
fwait
push
cli
mov
pop
or
pop
mov
sahf
inc
cmp
pop
sub
fwait
mov
outsl
sbb
mov
and
pop
in
cwtl
rclb
cmp
iret
orl
xor
inc
mov
inc
dec
pop
daa
adc
jecxz
clc
les
adc
movsb
and
pop
inc
fcompl
dec
pushf
addr16
arpl
jno
ret
add
mov
cmp
clc
addl
cmpb
cmp
lea
jge
add
in
jnp
push
xchg
pop
adc
mov
scas
les
push
pop
adc
fwait
arpl
out
or
aaa
sbb
and
negl
add
popf
dec
shl
gs
push
stos
popf
adcl
push
pop
fs
xchg
fcmovnb
and
in
mov
repnz
ret
sbb
jnp
cmp
sti
xor
sbb
shlb
fcom
ret
mov
arpl
dec
add
adc
xchg
pop
mov
cltd
jnp
cmpsb
mov
push
outsl
imul
mov
movsl
sub
and
stc
push
jmp
pop
or
cli
and
sti
pop
jae
and
pop
xor
jp
adc
sbbl
xchg
ret
and
adcl
pop
icebp
xchg
fildl
mov
sbb
clc
add
xchg
fsts
pop
add
sub
out
add
or
pop
mov
dec
test
cmp
in
cmp
push
not
rol
xchg
mov
sbb
mov
cltd
in
arpl
pop
or
mov
mov
popf
pop
mov
add
inc
cli
rcrb
icebp
inc
and
sbb
push
pop
bound
jne
sbb
mov
cmp
xor
js
mov
outsl
mov
scas
sbb
test
and
cwtl
arpl
scas
movsl
stc
mov
mov
cltd
in
imul
fcmovnbe
insb
mov
add
rorl
add
cmp
ja
sbb
xlat
iret
aaa
mov
sti
and
adcl
mov
sub
pushf
testb
mov
and
cmp
mov
add
sbb
shl
pop
sbb
fidivrs
mov
mov
jmp
add
and
movsb
orl
bound
push
add
loop
push
fcomps
aaa
out
xchg
movsl
cwtl
adc
ja
add
js
cli
push
push
testb
in
sub
sti
sbb
xchg
fcomps
cwtl
sahf
sub
jge
in
sbb
cmp
xchg
pop
fstps
gs
sbb
jecxz
repz
mov
mov
mov
pop
cmp
push
out
mov
jns
shl
data16
aaa
mov
push
jle
cmp
scas
vunpcklpd
mov
ds
mov
pop
sahf
sub
movsl
js
or
scas
add
inc
test
inc
jb
add
pop
idivb
and
lcall
add
xchg
pop
mov
push
in
div
add
lock
pop
pop
test
pop
int3
cmp
mov
movsl
jle
cmp
popa
adc
and
imul
sbb
cmp
cmp
call
mov
xchg
inc
cwtl
imul
js
cmpb
xchg
clc
mov
pop
stc
jl
jns
mov
imulb
aad
stc
mov
jp
les
sbb
xchg
mov
jp
movsl
or
xchg
push
dec
int
stc
sbb
fwait
mov
add
push
cmp
pop
movsb
aad
stc
cmpsl
les
push
movsl
mov
js
add
sti
pushf
xor
jecxz
fcmovnbe
xlat
jecxz
push
cwtl
xlat
outsb
mul
lea
scas
stc
in
scas
gs
pop
outsl
clc
pop
cmp
jb
push
int
orl
ret
xlat
test
and
ja
sub
cs
cwtl
ret
adcl
ja
sbb
add
fcoms
leave
or
sti
or
aam
sbb
push
add
adc
push
adc
stc
jns
push
jae
rcl
std
push
inc
jge
and
adc
repz
mov
dec
loop
mov
pcmpeqb
sub
dec
iret
dec
or
pushf
inc
fs
cwtl
cmc
mov
in
and
ret
fcoms
cmp
or
and
add
add
add
shr
sbb
fcoml
js
std
jne
fisttpl
push
jnp
xlat
in
mov
xor
pop
fwait
fs
pop
mov
jecxz
and
inc
or
xchg
loop
sbb
loope
cwtl
mov
gs
and
and
js
jnp
ja
xchg
std
shlb
inc
add
add
dec
idivb
mov
mov
mov
shlb
xor
add
test
xor
jns
leave
movsl
cmp
loop
sbb
xchg
fs
jge
add
icebp
xchg
inc
push
icebp
js
clc
mov
pop
jecxz
push
iret
xchg
mov
sahf
and
std
add
mov
cmpsb
adc
sbb
and
cmp
in
jb
mov
push
pop
ret
popf
jmp
dec
cmp
xchg
mov
ja
mov
lret
add
mov
in
add
mov
or
data16
aad
and
aas
adc
testb
fdivrs
in
xchg
mov
adc
fadds
add
cmp
imul
pop
or
push
js
dec
push
fcmovb
jecxz
test
mov
cmp
and
pop
ret
in
and
ja
and
pop
adc
cmp
xchg
inc
push
sbb
outsl
js
xlat
sbb
inc
or
int
add
jns
movl
jno
aaa
push
xchg
loop
lcall
mov
andl
arpl
jns
add
jecxz
push
add
movsb
xor
les
fldenv
and
cli
xchg
jge
fstps
add
call
js
push
jge
mov
daa
or
pop
pushf
dec
mov
outsb
cmp
xor
push
sbb
and
dec
cmp
loop
jmp
xchg
and
mov
mov
sbb
or
movsb
xchg
outsb
js
iret
and
fld
inc
scas
fstps
and
cmp
sbb
aas
fcomps
add
iret
fildl
out
das
push
and
push
subb
cmp
jns
and
loop
int3
hlt
or
inc
pop
test
lds
cmp
mov
iret
movsb
test
test
cli
and
jno
pop
out
dec
cmc
sbb
shrb
loop
leave
mov
arpl
cmp
and
rol
xlat
adc
loope
movsb
push
jbe
lahf
lds
sahf
sarl
adc
popf
ret
add
pushf
mov
and
sbb
aaa
jnp
shl
pop
loop
sub
lock
push
aad
adcl
shrb
and
in
mov
movsl
fwait
scas
pop
push
sub
dec
push
mov
sbb
testl
ja
pop
push
cltd
aaa
cwtl
add
adc
inc
gs
mov
outsb
insb
mov
and
mov
lcall
movl
shll
or
cltd
fldenv
dec
test
rcr
mov
cmp
mov
add
mov
arpl
out
push
and
jbe
mov
jb
pop
loope
sbb
cli
lea
ss
inc
rcr
cwtl
adc
sbb
cmp
in
out
inc
cltd
cvtdq2ps
cli
movsl
add
sahf
xchg
loop
jbe
pop
stos
lret
pop
test
jl
repz
testb
xchg
frstor
inc
mov
dec
add
add
jmp
sbb
or
test
jecxz
bound
ljmp
add
add
xor
pop
loop
push
add
pop
movsl
cmp
add
ds
push
inc
sbb
inc
sub
jnp
mov
mov
mov
lret
mov
rcl
subl
lock
aam
mov
sub
sarb
or
or
mov
cmp
cltd
add
test
in
jb
movsb
sub
fs
sbb
stc
in
pop
lds
inc
test
adc
in
sbb
add
push
movsl
mov
ja
xchg
movsl
ret
ds
lret
and
test
pushf
in
lcall
jl
push
inc
fcompl
or
push
add
pop
sbb
add
cltd
pop
mov
sbb
mov
movsl
lds
jns
iret
add
or
cmp
mov
inc
sbb
mov
lds
sbb
lock
add
jo
shll
loop
mov
xchg
cwtl
pop
iret
xlat
les
xchg
scas
fs
sbb
push
dec
mov
mov
sbb
cmp
add
jbe
movsb
pop
fxch
movsl
loopne
mov
enter
cwtl
jecxz
pop
mov
cmp
stos
cwtl
push
arpl
outsb
sub
and
mulb
arpl
mov
push
test
mov
adcl
mov
fistl
cwtl
push
movsl
push
push
sbb
int3
in
popf
aas
jl
or
aam
push
into
sbb
pop
push
test
aam
in
adc
lods
outsl
mov
test
test
xchg
cmpsl
test
push
sub
mov
and
in
sbb
mov
aaa
mov
sub
in
add
adc
pop
test
dec
mov
jbe
sub
lods
rcll
inc
sbb
mov
cwtl
clc
add
outsb
mov
cmp
xchg
pop
stc
pop
mov
jle
negb
sbbb
fiaddl
push
mov
pop
test
inc
jnp
add
add
or
xchg
and
add
fs
outsb
aaa
push
pop
xchg
adc
pop
sarl
sub
inc
sub
sbb
sub
xlat
andb
repz
adc
pusha
add
jns
fcoms
lea
stc
jge
sub
sub
fdivrs
neg
mov
pop
and
xor
cltd
in
adc
jnp
sub
test
cmp
sbb
fs
push
pop
and
or
jns
jnp
xchg
loope
add
sbb
ret
pop
sbb
cmp
fcomps
mov
inc
in
enter
outsl
inc
pop
mov
add
add
pop
mov
sti
mov
jl
pop
pop
add
adc
push
loop
pop
mov
dec
fdivs
or
or
mov
rcl
add
and
mov
testb
in
cmp
cmp
xchg
jnp
add
fadds
std
sub
ret
daa
xor
and
and
scas
stc
icebp
push
sti
xor
movsb
sbb
xchg
jmp
jns
or
jl
inc
add
pop
fs
push
cwtl
push
inc
pop
adc
cmp
xchg
mov
or
add
xchg
cmp
out
mov
sbb
sarl
neg
cmp
and
cmp
movsb
add
adc
in
and
jo
negb
arpl
fwait
push
test
in
mov
movsl
add
pop
sub
add
outsl
adc
jecxz
jns
xchg
inc
cmp
mov
or
inc
inc
pusha
adc
add
cmp
outsb
pop
sub
clc
inc
rcl
loope
cwtl
and
in
rclb
pop
push
cmp
inc
add
test
es
fdivs
pop
orb
mov
lods
mov
into
fsubs
mov
add
or
mov
ret
push
mov
mov
push
push
xchg
fwait
sbb
repnz
ja
cwtl
imul
std
push
mov
loopne
iret
in
mov
out
inc
jle
fisttps
cmp
cwtl
mov
xchg
push
stc
mov
sahf
cmp
inc
push
xlat
jp
fwait
adc
and
add
lahf
add
aam
fs
out
add
fwait
and
stc
mul
fcom
repz
push
cmp
mov
in
enter
and
ret
lea
sbb
cld
mov
and
test
mov
jne
mov
test
and
push
xchg
adc
pop
sbb
cwtl
or
add
std
les
sbb
jne
aam
insl
inc
pop
lahf
pop
shrb
pop
rorb
inc
out
add
mov
xchg
hlt
cmp
pop
testl
stc
push
in
clc
fldt
cltd
inc
data16
sbb
jo
add
pop
inc
jge
lea
and
push
mul
out
aad
or
pop
push
imul
mov
shll
adc
add
dec
inc
filds
gs
mov
loope
cmp
les
mov
mov
xchg
pop
imul
ret
sti
mov
in
cmpsl
push
dec
cmp
push
mov
cwtl
or
ret
adc
je
bound
es
inc
in
data16
cmpsl
fistpl
pop
mov
cmp
mov
push
pop
sub
xchg
push
clc
test
cltd
inc
and
and
inc
aam
cmp
pusha
pop
add
xchg
or
cmp
mov
hlt
mov
sbb
push
mov
mov
pop
inc
add
push
or
adc
push
adc
adc
adc
push
rolw
push
pop
add
pop
sbb
cli
flds
orl
and
js
and
adc
sbb
mov
test
fwait
outsb
add
and
mov
lds
andl
sub
jmp
test
or
sub
add
and
and
sbb
pop
gs
push
loope
cwtl
pusha
or
pop
fdivrs
rcrl
push
xchg
loop
push
jecxz
pop
sti
pop
cwtl
xor
aaa
jg
pop
mov
xchg
aam
push
test
mov
pop
add
test
add
and
jecxz
mov
cmp
and
sbb
and
cltd
les
icebp
fdivrs
cmpsb
arpl
repnz
sub
movsl
add
test
mov
sbbl
fwait
sti
test
outsb
cmp
and
cmp
jns
mov
jns
das
add
outsl
add
cwtl
pop
inc
or
cwtl
mov
cmp
and
push
in
test
test
xchg
sub
sahf
and
cmc
iret
lds
loop
push
inc
push
ds
int
sbb
and
pop
xchg
int
add
stc
cwtl
and
and
aaa
mov
stos
mov
imul
lcall
out
movsb
mov
xchg
mov
jo
test
pop
adc
or
add
pop
sbb
fs
negl
iret
pushf
fdivrs
mov
aas
shll
leave
push
mov
sbb
and
int
ficomps
push
pop
adc
xlat
inc
xchg
xor
rcrb
ror
sarl
icebp
pop
movsl
arpl
cmc
mov
or
mov
sbb
push
cmp
out
or
adc
fldenv
clc
cmp
mov
inc
adc
adc
mov
arpl
icebp
push
mov
inc
movsb
mov
jns
aaa
add
rcll
xchg
cmp
dec
xor
sbb
inc
jecxz
sti
add
nop
sbb
and
mov
leave
out
push
jns
aaa
in
sahf
testb
test
sti
call
movsl
in
xchg
xor
outsl
or
andl
dec
cltd
jns
xchg
testb
inc
pop
mov
rcrb
pop
addl
test
fistpll
outsl
test
fcoml
mov
mov
je
mov
adc
repnz
dec
mov
mov
push
leave
jae
mov
out
cli
arpl
push
cwtl
lock
push
loop
adc
testl
sarl
stc
jg
je
or
arpl
push
sti
mov
push
xchg
mov
les
fisttpl
xlat
lret
scas
push
popf
xor
push
cltd
mov
rclb
xlat
dec
sbb
icebp
ja
add
mov
pop
ret
sub
and
mov
les
rol
and
clc
orl
out
je
call
push
jb
mov
cli
add
inc
mov
mov
js
inc
xchg
add
movsl
add
fs
aam
mov
test
add
popa
pop
mov
rcrl
sbb
xor
and
cwtl
in
icebp
cwtl
and
int3
sbbl
sbb
notl
pop
sbb
sbb
pop
or
cmp
jle
mov
cmp
dec
jmp
inc
mov
filds
lock
jl
es
mov
aas
jecxz
sbb
les
test
fcmovnu
xchg
cmp
or
repnz
mov
imull
dec
outsl
inc
adc
pop
mov
xchg
fcmovne
mov
aaa
fdivrl
adc
bound
orl
fsubs
es
mov
add
pop
ja
loop
repz
push
in
mov
push
idivb
jnp
aad
int
or
cwtl
push
les
ret
sbb
mov
orl
fwait
sbb
pop
pop
pop
out
arpl
mov
enter
arpl
mov
and
mov
and
bnd
cltd
fsub
ja
mov
int3
adc
mov
or
pop
push
add
imul
inc
imul
xchg
sbb
mov
sbb
cmp
loopne
xchg
test
xchg
push
gs
mov
sahf
sbb
push
push
pop
xchg
mov
arpl
cmpsb
push
mov
jbe
push
cwtl
cs
cmp
cmp
lods
jl
fwait
pop
jg
mov
out
repnz
movsb
add
inc
or
mov
sti
cmpsl
notb
jp
gs
arpl
mov
mov
add
cwtl
imul
mov
mov
testb
cli
out
push
jnp
in
rcrl
stos
lahf
in
or
ja
xchg
jg
insb
js
cmpsl
add
cwtl
out
ret
cltd
jmp
mov
shll
push
outsl
testl
repz
mov
clc
imul
inc
jmp
add
test
popf
je
sub
cmp
xchg
xchg
or
and
and
dec
mov
pusha
aam
aaa
shrl
stc
jnp
pop
fsubs
and
shlb
sti
aas
add
add
gs
mov
test
add
subl
pop
push
sti
cs
add
sub
dec
sbb
arpl
inc
add
addr16
pop
sbb
cmp
icebp
push
add
adcl
sub
pop
movsb
testl
mov
add
sbb
dec
and
in
aas
or
sub
insl
les
fucomip
jl
cmp
xor
aam
popa
sub
or
hlt
repz
or
cmp
jo
push
add
or
std
adc
cmc
lcall
mov
ds
ja
xor
xchg
inc
ja
adcl
test
jns
and
mov
sahf
mov
iret
jns
int3
xor
js
mov
dec
ja
and
mov
xchg
dec
out
iret
push
daa
jo
push
jp
cmp
or
xchg
xor
xor
mov
bound
mov
pop
mov
aam
outsl
in
cmp
das
std
in
mov
cmc
dec
inc
sbb
mov
sbbl
test
adc
les
lcall
in
test
sbb
movsl
arpl
jl
clc
inc
xchg
fdivs
add
fcmovnbe
push
adc
sbb
cmp
cltd
add
mov
jecxz
mov
outsl
and
adcl
and
ret
cmp
andl
cli
jmp
js
add
push
ror
cltd
movsl
or
lock
inc
pop
test
lret
cmp
loop
fucomi
or
pop
push
sbb
ss
gs
mov
icebp
sbb
scas
jns
cmp
pop
arpl
imulb
or
stc
in
neg
test
lock
xorl
add
dec
pop
jmp
or
jae
mov
jns
clc
mov
ret
adc
in
sub
mov
inc
xchg
or
cltd
jecxz
pop
shrl
jnp
sti
xchg
xchg
or
push
loope
in
adc
push
and
or
inc
pop
std
loope
add
pop
and
cli
push
ss
push
and
movsl
push
mov
lcall
pop
and
testb
mov
xchg
sbb
aaa
push
adc
add
xchg
fsubr
pop
ret
lret
scas
xlat
movsl
dec
sbb
pop
push
stc
add
adc
xlat
pop
mov
adc
jecxz
pop
cltd
ret
loop
dec
mov
pushf
and
push
and
in
cmp
pop
adc
popa
mov
push
lds
stos
mov
cmp
scas
fsubrs
ja
mov
inc
flds
mov
clc
sbb
js
fcmovu
sbb
adc
mov
stc
in
inc
leave
mov
rorl
push
fdivrs
icebp
pop
ja
add
and
mov
gs
xor
mov
testl
xor
or
sbb
adc
cli
cmp
imull
std
call
push
ret
xchg
fmuls
and
lret
xor
fwait
iret
adc
or
lds
rcll
testb
sub
lds
ss
cwtl
mov
cltd
stc
mov
test
and
fldz
sbbb
adcl
dec
and
cmpl
add
fistpl
cwtl
cmp
xor
test
movsb
jns
shrb
orl
inc
xchg
outsl
mov
add
jno
movsb
js
add
mov
in
sbb
movsb
mov
cmpsb
iret
js
mov
mov
and
inc
add
fcmovnb
dec
or
push
pusha
sbb
js
cmp
pop
adc
mov
and
test
call
inc
xor
icebp
fstps
sbb
dec
fdivr
stc
sbbl
mov
aam
mov
xor
fprem
sbb
jp
lret
xor
je
es
leave
ljmp
push
js
fldl
pop
jmp
std
test
add
stc
in
ret
add
imul
clc
cltd
cmp
loop
mov
popf
icebp
js
iret
and
shlb
aaa
sub
cwtl
or
dec
xchg
inc
cmp
cltd
popf
fcoms
pop
cmp
add
sbb
cmp
out
and
and
xchg
fs
test
lods
sbb
add
arpl
jns
mov
jecxz
sbb
or
outsl
sbb
out
ja
icebp
stc
arpl
mov
mov
cmp
aam
adc
mov
testb
or
cwtl
add
lcall
or
movsb
pop
aam
or
ficompl
pop
pop
loop
jno
lods
jb
in
loop
jmp
mov
pop
fldenv
mov
jo
push
sbb
ds
pop
jae
mov
pushf
std
lcall
sbb
add
xchg
mov
sahf
movsl
aas
jns
call
les
cwtl
or
sbb
jb
outsl
mov
cmpsl
cmc
in
out
pop
sbb
ja
mov
pusha
pop
ss
negb
push
mov
xchg
cmpsb
jno
inc
cmp
lcall
mov
imul
out
mov
iret
mov
insb
adc
cmp
or
xchg
inc
aad
jmp
xchg
fiaddl
popf
push
push
fldt
inc
inc
add
push
lds
sti
test
and
lods
mov
aaa
or
mov
pop
xlat
adc
test
arpl
jl
sti
cmp
and
pop
add
icebp
jl
and
add
mov
fwait
std
adc
cmp
icebp
add
bndstx
pop
adc
cs
lods
insb
shl
lds
shrl
sahf
push
mov
cmp
pop
push
aas
mov
shl
cmp
enter
testb
arpl
cwtl
adcl
mov
dec
add
sub
pop
fistl
and
fld
add
push
movsl
push
popa
ret
inc
movsb
adc
js
subl
cmp
shlb
pushf
cltd
xlat
loope
mov
add
scas
mov
or
gs
test
push
fimuls
aam
cwtl
xlat
aad
es
cmp
lret
div
inc
jl
cmp
inc
add
jne
cmp
ljmp
leave
or
pop
mov
inc
jbe
mov
and
sbb
shrl
sbb
adc
mull
cmpsl
leave
cwtl
les
and
add
mov
mov
inc
inc
pop
cmp
sahf
movsb
mov
sar
adc
ja
adc
neg
aad
inc
mov
notl
mov
cli
or
lds
add
js
arpl
push
xchg
fnstenv
shll
sbb
lds
xlat
ret
jecxz
xchg
add
mov
movsb
mov
cwtl
in
jl
cmp
ret
fs
fdiv
cmc
mov
and
aaa
cmpsb
inc
movl
imul
out
mov
sub
es
dec
mov
ja
fs
stc
testl
cmp
mov
test
fwait
movsb
mov
and
vpsubsw
cmp
cmp
pop
je
inc
in
fistl
fwait
jecxz
dec
pop
rcrl
js
ret
lret
test
add
push
ja
lock
cmp
imul
inc
push
shll
and
sbb
sub
ficoml
roll
sub
pop
pop
add
sub
inc
jb
ds
js
scas
out
mov
or
add
pop
pop
pop
pop
pop
inc
mov
mov
sbb
mov
out
add
das
pop
push
repnz
pop
push
js
add
test
xchg
xchg
sbb
arpl
pop
and
inc
loope
clc
cli
mov
std
cmpsb
pop
mov
pop
out
lods
popa
shl
add
insl
push
in
in
xlat
sub
notl
mov
call
test
jnp
out
push
movsl
sbb
add
stc
int
cmp
cmp
and
in
add
movsl
adc
mov
in
inc
loope
fsqrt
aaa
push
or
pop
jmp
mov
je
sbb
inc
sbb
pop
xchg
push
sbb
mov
mov
out
fs
mov
dec
gs
xor
imul
test
sub
fs
mov
imul
lods
imul
movsl
sub
ja
imull
mov
pop
jnp
sbb
stc
and
sbb
repnz
out
outsb
leave
insl
dec
push
int3
imul
and
sti
outsl
cmp
mov
push
ss
mov
add
imul
add
test
divb
jns
or
scas
jnp
adc
mov
push
pop
cmpb
push
and
divb
scas
cltd
pop
fsts
mov
data16
cmpb
sti
imul
jl
lret
rolb
fistpl
cmp
fists
fwait
js
clc
pop
mov
pop
loop
pushf
cli
les
gs
mov
testb
push
add
ja
movsb
cmp
iret
ds
notb
outsl
mov
sbb
pop
or
loop
cmp
xchg
int3
and
and
xchg
pop
add
cs
outsl
sub
pop
testb
push
ja
pop
in
stc
lods
sbb
push
dec
mov
idivl
jecxz
pusha
out
push
cli
jmp
xchg
pop
ret
dec
fwait
add
sub
jb
adc
ds
cs
or
or
test
sti
jmp
inc
div
loop
sub
cltd
add
mov
xor
jnp
mov
pop
sbb
rolb
cmp
pop
pop
aas
add
in
jecxz
aas
push
sbb
or
jp
push
sbb
lret
aam
and
and
cltd
pop
mov
test
push
mov
adc
test
adc
ljmp
push
pop
add
push
ss
insb
mov
mov
cwtl
xchg
popf
orl
jnp
sbb
push
mov
sbb
jno
cmp
fs
movsb
mov
sahf
add
mov
aaa
pop
mov
push
xor
inc
xlat
sti
jnp
push
movsb
pop
jns
cwtl
push
loope
in
push
adc
pop
cmp
cwtl
xor
mov
xlat
push
cli
and
add
arpl
test
add
and
or
inc
jmp
mov
andb
daa
in
outsl
add
sbb
cmp
or
daa
repz
push
mov
cmp
ja
and
and
jp
jnp
cltd
xchg
push
sti
inc
arpl
jo
insb
jecxz
sar
fsub
mov
pop
cmp
ss
sub
jnp
pop
out
mov
jecxz
cwtl
fsts
cmpsl
jge
push
sbb
cmpsl
gs
cmp
add
shll
pop
pop
or
fidivrl
ljmp
pop
xlat
add
cmp
mov
and
xor
outsb
inc
push
xchg
pushf
xor
mov
xchg
test
mov
fldt
xor
mov
pop
pop
sbb
push
out
movsl
jge
les
sbb
inc
push
pop
in
into
adc
loop
xor
outsb
jne
aam
bound
jne
sbb
loop
lds
cwtl
int3
sbb
lret
cli
jecxz
icebp
push
fstpt
ja
inc
sbbl
mov
push
jmp
lret
mov
push
in
adc
sbb
mov
out
or
call
xchg
in
inc
and
cwtl
jnp
mov
les
cld
ja
lea
int
push
inc
sub
inc
xor
cmp
fs
sbb
push
test
jl
xlat
mov
int
xor
lock
stos
jns
js
test
inc
negl
fstps
pusha
push
mov
adc
sbb
and
aaa
in
inc
cwtl
test
add
fwait
stc
sti
mov
ss
cli
push
movsb
mov
js
stc
leave
pop
notb
cmp
sbb
and
add
aaa
fcomps
jne
icebp
gs
jecxz
fldcw
repz
in
xchg
stc
mov
mov
das
or
cwtl
test
mov
jnp
xchg
adc
shrb
fcoms
xlat
add
mov
mov
mov
add
push
dec
in
mov
inc
aad
fistps
adc
arpl
mov
mov
test
sub
and
lds
pop
dec
mov
xchg
repz
mov
aaa
movsl
cmp
mov
test
vpshufb
int3
outsl
clc
scas
or
popf
cmp
lds
sub
iret
fadds
or
add
arpl
iret
and
xlat
cmp
mov
mov
inc
movsl
js
and
ret
in
aas
adc
sub
adc
sbb
or
push
xchg
int
inc
inc
shlw
fdivr
int
inc
out
movsl
or
adc
clc
jecxz
sbbb
adc
loop
jnp
push
sbb
xchg
cmp
xchg
inc
dec
cmp
ret
or
lds
or
cwtl
pop
add
sbb
adc
movsb
repz
pop
mov
or
sbbl
in
mov
sub
dec
sbb
icebp
enter
leave
in
mov
cmp
pop
clc
xchg
les
fscale
in
leave
xchg
andl
movsl
mov
push
xchg
mov
pushf
mov
xchg
pop
movsb
or
mov
clc
and
cli
sti
in
add
loope
add
or
pop
stc
in
pushf
xchg
mov
aaa
sahf
movsl
xchg
notl
inc
pop
testl
int
aam
popf
and
mov
add
lret
addr16
inc
mov
aaa
mov
jecxz
adcb
orl
add
fistl
ja
fs
in
cmp
dec
cwtl
jno
or
cwtl
jecxz
ret
pop
jns
xchg
sarl
int
leave
test
ja
or
loop
fwait
cmp
nop
pop
ret
mov
and
cwtl
jbe
or
adc
mov
rcl
mov
loopne
pop
idiv
and
stc
pop
les
push
movsb
xorl
jmp
xchg
outsl
inc
mov
cli
sbb
jle
sbb
cmp
cmp
pop
dec
out
clc
and
push
nop
iret
arpl
das
sahf
rcrb
imul
pop
shll
cltd
ret
mov
push
add
push
movsl
xchg
aaa
rcl
iret
fsubs
shrb
push
outsl
divl
and
cmp
jns
add
int3
arpl
jbe
arpl
dec
rolb
sbb
fcmove
pop
xchg
adc
outsb
and
sbb
outsb
cmp
ja
stos
push
or
js
fwait
push
and
pop
mov
sbb
out
add
inc
shlb
cmp
adc
pop
ja
pop
or
in
pop
test
inc
adc
aaa
add
andl
ljmp
sbb
sbb
movsb
inc
sbb
in
int
inc
xchg
lret
add
lods
sbb
mov
repnz
mov
sbbl
sbb
shll
loop
cwtl
fdivs
scas
fcomps
test
adc
idivl
insb
mov
and
les
sbb
and
aad
cmp
and
sbb
jne
or
push
in
pop
in
inc
push
sbb
add
test
js
insb
sahf
xchg
inc
mov
pop
sbb
in
movsl
inc
dec
lods
mov
mov
push
jge
inc
adc
cmp
inc
jno
mov
and
dec
aas
adc
enter
push
or
or
sbb
jo
sti
add
add
add
cmp
mov
jno
je,pn
repz
sbb
adc
pop
popf
fwait
mov
in
out
clc
push
movsb
and
popa
jns
daa
sahf
cwtl
adc
xchg
popf
add
mov
scas
sti
test
sbb
cld
mov
adc
mov
cmp
mov
cmp
or
test
or
gs
lds
push
jmp
sbbb
sub
bound
push
fstps
cmp
or
les
cmp
xlat
cwtl
or
jnp
ja
push
cwtl
and
add
nop
in
lret
fs
sub
mov
and
xor
sbb
in
and
sbb
and
jnp
push
mov
push
xchg
fs
or
and
aas
cltd
gs
js
mov
mov
leave
cmp
sbb
and
push
add
aad
leave
xchg
lds
arpl
mov
inc
lret
pop
in
repnz
mov
xchg
dec
mov
ja
loop
aad
inc
jae
sub
test
in
leave
lea
stos
aaa
jecxz
mov
divb
fnstenv
add
hlt
ret
mov
or
loop
sbb
sbb
fnstenv
mov
pushf
cwtl
jmp
jnp
mov
add
jp
loop
adc
cmp
jp
sahf
cmc
je
rcr
sbb
add
js
adc
mov
adc
arpl
cmp
in
cmp
cltd
les
ret
jb
add
ja
push
cs
and
fcmovbe
inc
push
sbb
scas
lret
pop
inc
aam
loopne
testl
lock
fsts
arpl
nop
sbb
je
sbb
cs
loop
cmp
clc
mov
fcomi
add
loop
xchg
outsb
push
imull
adc
xchg
push
push
adc
enter
xchg
inc
pop
mov
outsb
mov
stos
mov
mov
jle
popa
xchg
mov
test
repz
cltd
cwtl
sbb
cmp
push
fistpl
js
movsb
leave
push
cmpl
lcall
cmp
ficompl
loope
test
notl
sub
test
adc
cli
and
loopne
jg
divl
in
mov
mov
sbb
adc
ret
adc
fsts
inc
push
outsl
and
push
xchg
inc
out
mov
pop
push
mov
dec
inc
adc
lret
push
aad
push
add
mov
js
inc
jnp
movsl
pop
inc
sbb
shlb
push
mov
push
in
jmp
ret
jg
or
push
arpl
test
cltd
repz
push
sbb
pop
sbb
rol
sti
rclb
loope
add
and
inc
jle
inc
inc
inc
and
pop
ret
add
or
inc
adc
jns
xlat
fpatan
cli
and
xchg
adc
in
int
mov
or
add
arpl
loope
mov
lea
inc
fs
sub
mov
adc
mov
pop
std
leave
pop
iret
mov
mov
loop
mov
and
divb
sbb
mov
mov
dec
sahf
sub
sub
jns
mov
dec
arpl
mov
shl
mov
leave
dec
ret
test
js
mov
dec
and
cmc
push
mov
inc
jns
push
int
cmpsl
mov
test
rolb
inc
and
les
in
inc
popf
lds
push
mov
daa
or
inc
gs
mov
and
ja
out
fdiv
ds
mov
add
fidivrl
push
push
fmull
xor
aaa
jnp
clc
add
xor
sub
push
loop
les
idivl
inc
stc
data16
movsl
mov
push
fs
test
sbb
rcr
cmp
jns
rorb
aaa
inc
cmpsl
and
dec
push
fnstcw
icebp
mov
and
lds
fwait
jecxz
add
xor
dec
xchg
sbb
mov
sti
sahf
dec
cmp
mov
ret
xchg
pop
inc
adc
in
mov
mov
xor
push
mov
ljmp
push
movsl
mov
fisubl
mov
test
jne
outsl
inc
mov
clc
in
or
push
cwtl
mulb
mov
pop
sti
mov
fisttps
lods
dec
in
mov
in
pop
arpl
adc
ret
jle
add
movsl
mov
mov
sub
rol
sbb
arpl
cmp
adc
and
dec
outsb
push
outsb
mov
mov
outsl
mov
testl
push
mov
sub
dec
clc
into
aad
adc
adc
icebp
movsl
cmp
push
pop
cmp
ss
push
test
into
aas
push
mov
add
out
jmp
movsb
lahf
nop
ja
clc
push
sbb
push
and
test
mov
xchg
push
mov
xchg
mov
inc
lahf
jns
movsl
add
pop
imul
sbb
mov
mov
jnp
cmpl
sbb
mov
arpl
ret
add
loop
pushf
icebp
popf
add
mov
mov
gs
pop
mov
cmp
add
pop
and
dec
in
divb
repz
cwtl
fdivrl
out
cmpl
mov
rcrb
cli
in
sbb
rorb
cmp
pop
testl
lds
cmp
push
sbb
pop
push
in
and
fildl
imul
and
shll
cmp
movsl
push
fs
dec
mov
add
push
notl
inc
filds
les
cmp
cwtl
lds
mov
push
xor
push
sbb
push
mul
fwait
ret
mov
ss
pop
shll
inc
push
jnp
lret
inc
add
push
cwtl
std
adc
mulb
jbe
mov
sbb
push
mov
iret
mov
inc
call
test
ret
mov
add
fwait
clc
cmp
movsl
dec
push
mov
stc
and
out
fldcw
stos
push
add
xchg
in
push
push
cmp
dec
jl
flds
stc
inc
mov
nop
sub
mov
fisttps
mov
test
pusha
push
outsb
push
jecxz
popf
adcl
xchg
sbb
mov
xchg
icebp
inc
sbb
sub
push
js
xlat
in
adc
cli
adc
push
je
pop
pop
sbb
dec
shll
mov
mov
pop
cwtl
icebp
mov
stc
xor
in
pop
leave
adc
stc
outsl
sti
xchg
push
fs
push
idivl
test
jnp
out
xor
ss
xchg
pushf
jnp
mov
push
pusha
and
and
cmp
adc
cwtl
xlat
gs
mov
scas
mov
xor
imul
movsb
int3
aam
adc
sbbl
fidivrl
or
pop
aaa
rclb
cmp
lds
dec
iret
jno
addl
imul
mov
sbb
inc
and
and
fnstcw
stc
push
mov
cltd
and
xchg
cwtl
ja
fs
out
int
dec
fisttps
clc
and
mov
push
ja
mov
or
fcom
add
stc
mov
int
xchg
cmp
aaa
xchg
movsb
mov
cmpsb
mov
xor
aaa
fsub
or
lcall
jns
jno
std
jae
ja
sub
aad
add
xchg
pop
frstpm(287
scas
loop
pop
movsl
push
cld
dec
testl
sub
cmc
data16
es
cmc
and
add
pop
popf
stc
mov
push
aas
add
in
cwtl
push
jns
clc
pop
test
test
lds
cmp
sbb
leave
repnz
mov
adc
push
xchg
cwtl
cli
jnp
mov
jns
add
lds
push
add
jae
and
fildl
push
stc
mov
nop
sbb
mov
outsl
fldenv
aaa
adc
push
movsb
cwtl
imul
fsts
loop
pop
mov
outsb
negl
mov
sbb
adc
add
inc
add
mov
push
cli
cld
add
mov
movsb
sub
mov
sbb
jmp
xchg
mov
lea
loop
mov
lea
and
test
fsubs
push
pop
arpl
and
stos
in
lods
mov
movsl
fnstcw
imul
in
sahf
cltd
enter
sahf
pop
cltd
aaa
fsts
inc
cltd
arpl
push
in
add
sbb
mov
inc
in
mov
shl
rolb
mov
mov
lds
add
fistps
sub
pop
mov
test
sbb
xor
or
mov
cmp
mov
mov
push
ret
dec
jbe
lahf
pop
jo
fnstcw
fadds
push
mov
and
sarl
pop
jns
cmp
shlb
push
dec
pusha
mov
mov
mov
jecxz
push
cmc
jecxz
and
outsl
stc
cmp
out
ficoms
add
fwait
sbb
pushf
je
mov
arpl
dec
scas
les
lods
cmp
sahf
notl
into
inc
fisttpl
repnz
add
push
sub
fs
xor
and
pop
xchg
aam
cmpl
mov
mov
pop
or
jnp
out
clc
rcl
pushf
movsl
sarb
xlat
stc
pop
mov
sbb
out
fninit
fldcw
fsubs
sbb
mov
fstps
mov
fnsave
sbb
test
test
and
jbe
jae
mov
jmp
adc
mov
jge
cmp
mov
popf
mov
test
and
sbb
xchg
cmp
in
sub
outsl
fwait
and
movsl
je
mov
mov
and
jmp
loop
clc
mov
pop
push
shll
enter
ss
cltd
sbb
add
sahf
daa
dec
cmp
mov
sahf
jbe
jecxz
jle
sti
inc
cmp
xchg
and
pop
hlt
sbb
inc
sbb
inc
int
add
xchg
adc
sar
fadd
pop
loope
fldenv
or
mov
in
inc
jl
leave
lods
popf
insb
inc
and
inc
leave
call
leave
xor
xlat
out
mov
ret
jb
sahf
dec
test
inc
int3
sbb
int3
pop
or
mov
add
pop
inc
inc
pop
mov
fsubs
sahf
movl
sub
push
sahf
jg
add
mov
jmp
inc
lret
jecxz
and
repnz
xchg
in
subb
and
dec
xchg
add
mov
sbb
cld
fadd
cmp
fnstcw
lret
inc
cmp
in
pop
sub
pop
adcl
fildll
add
cmc
loope
sub
pop
or
aaa
add
dec
iret
popa
jp
sahf
sub
and
add
sbb
xlat
mov
rol
dec
jle
sbb
mov
mov
lea
ficomps
xchg
sahf
in
outsb
rclb
andl
mov
in
push
ja
rclb
mov
push
xchg
inc
shlb
mov
movsl
dec
and
pop
cltd
js
inc
mov
cmp
mov
jge
fsubrs
insb
mov
aas
sbb
or
add
cmp
sub
adc
out
inc
cltd
pop
lahf
popf
aas
mov
fs
mov
in
or
rcll
fstps
fcoml
movsb
js
out
aad
cltd
add
adc
jbe
insl
lods
adc
sti
add
ret
lret
mov
popa
mov
push
rcll
das
js
sahf
addb
or
sbb
cmp
fisttpl
pop
gs
and
mov
fs
sti
cmp
lret
mov
xlat
mov
sub
pusha
mov
push
cwtl
pop
in
mov
inc
aaa
je
icebp
ljmp
sbb
xor
aam
push
cli
and
sbb
aas
pop
or
cltd
push
sti
and
cmp
cmp
pop
xor
ret
jne
pop
stc
notb
and
cmp
fnstenv
inc
xchg
cmpsl
dec
xor
cli
and
xlat
sbb
inc
shlb
rcrl
test
lret
sbb
sbb
fldenv
cmp
nop
push
push
sti
mov
cmp
in
scas
pop
ret
sub
loope
inc
sbb
test
imul
adc
xlat
mov
cmpb
popf
inc
add
cli
js
pusha
xchg
add
mov
std
jecxz
stc
push
push
xchg
fbld
add
fidivrl
adc
out
mov
sbb
sub
or
adc
and
fisubrl
repnz
aaa
inc
xchg
push
adc
sub
test
stc
xrelease
jb
dec
lds
sbb
rolb
cmp
in
cmp
aaa
sub
jbe
fs
pusha
das
out
fstl
daa
pop
sahf
negb
addl
mov
fyl2xp1
cmc
or
lahf
cmp
jns
gs
push
aaa
fwait
test
leave
outsb
lds
pop
sub
test
cltd
and
xchg
sbb
and
push
dec
jecxz
test
clc
hlt
add
mov
fidivl
imulb
cltd
cwtl
loop
add
ds
les
xor
stc
test
inc
imulb
push
jg
or
sub
sahf
adc
adc
aam
pop
mov
iret
inc
outsb
xchg
mov
mov
lahf
push
scas
cmpsl
sbbl
test
pop
mov
xchg
and
cwtl
add
add
jnp
aam
sbb
cmp
adc
iret
gs
fwait
mov
and
add
sub
popf
push
iret
sbb
jl
aaa
push
jecxz
testb
adc
xor
int
aaa
fnstcw
inc
pop
xchg
sbb
add
or
or
mov
add
mov
push
mov
mov
add
xor
add
pop
cmp
inc
mov
roll
cmp
or
ret
scas
cli
fadds
insl
icebp
and
xor
or
sbbl
negb
cmp
jle
outsl
mov
andb
leave
adcb
xor
mov
pop
mov
mov
cmp
fwait
inc
push
inc
xchg
jge
jno
stc
js
cwtl
flds
mov
stos
adc
cwtl
inc
and
add
clc
and
pop
jb
js
sub
insl
jle
dec
adc
icebp
sbb
jmp
imul
pusha
cmp
adc
mov
sti
loop
xchg
outsl
sbb
add
fistl
xchg
daa
call
arpl
dec
xchg
sti
movsl
fsts
adc
inc
in
test
xchg
andb
lock
nop
test
add
pop
add
addr16
test
push
pop
inc
push
xor
sti
or
pop
clc
pop
sbb
rorb
add
negb
or
sbb
divl
js
mov
enter
and
ja
xchg
ret
test
in
pop
cmp
push
jnp
mov
and
lds
or
test
cli
sti
push
cmpl
add
push
ja
imul
fs
test
mov
push
add
mov
adc
neg
push
arpl
out
enter
mov
cli
inc
clc
sub
add
ret
cmp
dec
push
js
push
fadd
mov
addb
loop
popf
bound
icebp
jns
add
mov
mov
cmp
push
fmuls
test
test
mov
dec
in
nop
cmp
je
and
cmp
cltd
inc
push
add
adc
dec
push
xor
add
mov
testb
push
stc
sti
fs
rolb
cmp
dec
mov
jg
or
les
in
notb
pop
xlat
lret
pop
cmp
pop
push
dec
sub
adc
ret
xchg
fistpl
sbb
pop
mov
inc
mov
pop
lds
cmp
les
movsl
fiaddl
xchg
xor
pop
arpl
fwait
mov
jns
push
rclb
mov
mov
mov
mov
xchg
in
testl
fs
or
nop
mul
sti
in
aam
jmp
bound
mov
adc
movsl
fwait
xchg
lahf
sbb
jo
mov
mov
test
cwtl
movsl
daa
mov
fs
and
mov
aaa
dec
shlb
adc
cmp
js
jecxz
pushf
mov
mov
fcomps
mov
jecxz
jmp
cmp
lea
lea
into
in
jge
sub
adc
cmp
out
push
pop
fnstcw
sti
add
xchg
mov
rcll
arpl
inc
mov
add
push
push
icebp
xlat
jnp
movsb
mov
pop
add
pop
or
fs
sub
shlb
sarl
and
jg
pop
negl
cltd
aas
or
sbb
mov
add
mov
cli
and
iret
fildl
sbb
loop
fwait
xor
mov
mov
arpl
movsl
and
jo
mov
loop
and
push
cwtl
inc
jge
rorb
pop
xlat
jg
loopne
push
push
mov
arpl
sbb
pop
je
add
pop
hlt
add
movsl
or
lds
fldcw
add
lods
pop
cltd
pop
popf
sbb
js
sbb
lods
sar
inc
loope
mov
ret
mov
les
cmp
and
es
or
jns
pushf
xchg
loop
mov
and
arpl
cmp
sbb
ja
or
sub
stc
addr16
inc
pop
adc
jns
push
adc
and
add
pushf
cwtl
xchg
pop
sbb
push
mov
test
mov
add
sbb
roll
inc
mov
sbbl
jnp
fstpt
sbb
sbb
test
add
fldlg2
fnstenv
add
mov
inc
and
push
mov
cmp
add
insb
inc
arpl
jecxz
pop
jle
sbb
sbb
lea
pop
frstpm(287
xchg
fbld
and
fcomps
jo
cli
add
cmp
in
mov
adc
or
sbb
mov
and
jmp
sub
adc
movsb
xlat
fs
hlt
stc
es
and
fs
add
ret
js,pn
movsb
sbb
push
pushf
dec
mov
jns
jmp
out
pop
sbb
xor
xchg
add
push
aad
sbb
ret
in
or
push
fsqrt
mov
mov
mov
inc
add
fwait
cwtl
dec
jae
int
mov
enter
jnp
mov
and
cmp
push
ds
pop
mov
mov
xchg
addb
movsb
outsb
jns
sbb
push
mov
dec
aam
pop
adc
lcall
call
fisubrl
pop
test
pop
push
inc
cmpl
pusha
fdivs
sub
dec
sti
cmp
lahf
rcrb
push
scas
movsl
add
clc
sub
sar
stos
cmp
stc
cli
push
fnclex
push
fsubrs
and
lds
add
pop
leave
in
xchg
cli
xor
inc
lds
js
outsl
int
jno
adcl
cmp
aam
sbb
roll
mov
hlt
cli
inc
ficomps
cmp
add
js
mov
dec
xchg
inc
in
and
or
ficoms
dec
out
sbb
add
negb
imul
sbb
sub
dec
xor
fstps
fcomps
cltd
imul
mov
arpl
js
clc
fdivrs
add
addr16
inc
mov
and
mov
and
popa
shl
fnstcw
jae
or
movsb
push
jecxz
in
dec
shll
cltd
pop
imul
mov
xchg
xorl
inc
cmp
mov
popf
dec
ret
iret
leave
mov
sbb
xlat
mov
dec
sub
movsb
mov
out
mov
cli
mov
addl
pop
mov
or
mov
sbbb
outsl
rcl
clc
shll
notl
fstpl
out
mov
or
sub
cld
mov
outsb
ja
cmp
xchg
mov
arpl
xchg
and
sbbb
xchg
outsl
inc
lret
dec
xchg
jo
pop
in
mov
pop
sub
mov
bnd
or
add
insb
popf
mov
xor
ret
ja
and
jnp
fwait
js
outsl
mov
xchg
popf
movsl
clc
sbb
pop
pop
dec
jp
ret
js
in
leave
pop
jo
movsb
push
jle
inc
ret
fcomps
inc
aaa
or
mov
push
cmp
leave
dec
mov
pop
ja
adc
mov
rcr
popa
inc
xchg
mov
std
pop
xchg
test
sbb
loop
mov
and
icebp
int
mov
mov
pop
in
or
flds
sbb
loop
mov
jae
daa
add
out
xchg
sbb
cwtl
inc
mov
cmpsl
clc
call
dec
in
addr16
stos
jns
xchg
outsb
inc
out
sahf
xchg
inc
shlb
les
add
add
fistl
mov
icebp
clc
test
and
popf
push
mov
dec
mov
push
add
cmp
ds
ret
push
jmp
pop
add
adc
or
dec
jp
pop
push
insb
outsl
loop
pop
cmp
cwtl
addr16
mov
cmp
sbb
inc
pop
jmp
into
enter
cmp
lock
mov
pop
pop
icebp
sar
mov
gs
pop
mov
inc
je
sbb
sbb
mov
and
test
les
add
and
pop
add
imul
sbb
iret
fnstcw
stc
xlat
add
or
push
movsl
push
cmp
scas
mov
test
cli
push
sbb
dec
aam
aaa
sbb
xlat
or
pop
cmp
jecxz
pop
mov
add
fs
mov
aam
movsb
xor
add
scas
sbb
xchg
xchg
xchg
lret
icebp
or
and
not
ds
inc
push
outsl
xor
fistpl
and
mov
mov
cli
or
iret
push
mov
add
inc
inc
int3
test
movsb
xor
test
push
flds
mov
loop
sbb
pop
cs
enter
icebp
mov
gs
push
sbb
cmc
icebp
sbb
mov
arpl
jl
les
pop
data16
clc
aaa
sub
fstps
add
leave
lret
xchg
hlt
aam
jmp
mov
dec
les
cmp
movsl
and
out
add
adc
cmp
js
mov
xchg
fs
int
mov
movsb
outsl
mov
in
cmp
adc
pop
mov
in
aaa
mov
push
lret
inc
add
mov
and
jnp
jge
mov
cmp
dec
outsb
xor
pop
pop
push
outsl
divb
les
test
ret
jg
add
icebp
mov
lds
pop
fwait
cmp
icebp
xor
lahf
bound
leave
and
loopne
bound
scas
popa
push
pop
movsl
pop
clc
mov
xchg
mov
sbb
cmpsl
mov
mov
mov
adc
cmp
faddl
imul
xor
push
lds
test
rcrl
not
jecxz
sbb
add
dec
push
mov
addl
or
in
imul
std
lsl
arpl
cmpl
jecxz
mov
mov
aad
stc
pop
fldt
mov
pop
pop
hlt
xchg
push
cmp
inc
stos
test
fincstp
mov
clc
add
cmp
inc
outsb
fisubs
cli
pop
add
pop
scas
aas
stc
sub
lds
test
stos
pop
aaa
in
mov
mov
in
rcrl
sub
movb
cwtl
add
test
jp
arpl
or
pop
sbb
insl
xlat
in
adcl
pop
mov
das
or
pop
jmp
jns
pushf
sahf
clc
bound
fldenv
ret
jnp
cmp
sbb
mul
dec
sbb
aaa
test
xchg
or
movsl
sti
jnp
ret
or
mov
out
fldcw
add
cltd
and
dec
popa
pop
fwait
sahf
push
pop
aas
push
xor
notb
ret
cmp
daa
scas
xor
negl
dec
outsb
mov
pushf
xchg
and
or
mov
cmpsb
cmp
pop
pop
pop
sbb
and
sub
sbb
addl
cmp
inc
xchg
mov
xchg
dec
pop
and
pop
adc
mov
in
cwtl
cmp
xor
test
mov
stos
mov
mov
cmp
arpl
cmp
jns
add
adc
inc
xchg
cmp
jnp
loop
js
push
jo
sub
imul
cmpsl
jnp
lret
scas
pop
cltd
pop
sbb
rolb
sbb
inc
mov
arpl
jns
mov
mov
fwait
ja
pop
sub
add
pop
sbb
xchg
imul
pop
pop
mov
push
bnd
or
jg
fwait
inc
pop
sbb
mov
adc
or
out
inc
cmc
or
repz
ljmp
loop
cmp
xchg
jecxz
mov
jecxz
adc
cmp
push
xchg
cltd
lds
imul
push
mov
lods
daa
repz
or
inc
inc
pop
in
stc
cmp
mov
arpl
and
sbb
mov
or
pop
jge
cmpl
arpl
push
in
idivb
repnz
mov
and
mov
push
and
fistpl
adc
add
add
rcl
div
sti
std
pop
push
adcl
imul
push
cmpb
cmp
bound
out
loope
ret
ja
mov
movsb
adcl
pusha
fnstcw
enter
xchg
sbb
cmp
push
ja
sub
pop
sub
lahf
pop
dec
test
mov
les
inc
test
js
add
cmpsb
sbb
push
or
shr
mov
addb
adc
lock
pusha
mov
fcomi
cmpl
test
xchg
lret
movsb
movsl
push
cs
pop
cwtl
jecxz
adc
pop
das
xchg
cmp
fcmovnu
add
add
inc
movsl
and
sub
popa
in
sub
mov
and
ja
test
int
mov
fcomps
sub
lds
pop
xor
movl
jnp
cwtl
inc
stos
sbb
cmp
push
pushf
mov
jns
flds
leave
and
push
xlat
jo
sti
dec
rolb
and
mov
add
lret
jne
push
test
cmp
adcl
in
pop
lcall
gs
cmp
les
xchg
add
mov
bound
jns
outsl
repnz
mov
pop
fwait
mov
mov
jecxz
jnp
dec
gs
scas
and
mov
mov
and
inc
mov
mull
and
clc
xlat
or
mov
fldcw
xor
jbe
push
mov
cmp
sbb
arpl
dec
add
or
loop
add
cltd
pop
cmp
and
mull
icebp
inc
or
in
add
rep
ret
faddl
arpl
lods
sti
pop
inc
pop
mov
ret
jecxz
sbb
clc
mull
stc
jae
cmp
sarb
in
sbb
gs
mov
ja
mov
cmp
and
mov
push
cmp
popf
testb
in
mov
jecxz
sbb
xchg
cs
les
adc
add
mov
xchg
cmp
loop
in
movsl
les
lea
jecxz
pop
xor
fsubs
aaa
xchg
mov
and
jle
into
ja
jp
in
and
sbb
cmp
dec
mov
mov
pop
pop
pop
lods
lret
sbb
or
jge,pn
sbb
cmp
push
cwtl
pop
push
sti
xchg
mov
mov
pusha
jmp
addl
xor
pop
sbb
out
in
dec
adc
sbb
cmpl
add
fcomps
mov
push
cmp
outsl
add
stc
push
enter
sbb
std
cli
inc
cli
cwtl
mov
sti
ret
or
xchg
mov
test
not
ds
mov
sub
fucom
in
xchg
lcall
and
push
js
and
stc
dec
xchg
push
addr16
jecxz
fcmovne
and
aaa
or
add
and
add
cmp
cld
fldenv
inc
or
pop
in
sahf
aaa
popf
mov
push
inc
inc
fs
lea
shll
cltd
flds
push
dec
lods
ret
jb
inc
cmp
inc
movsl
mov
arpl
xor
push
negl
jecxz
jns
bound
or
jne
sti
push
and
test
scas
in
aaa
pop
cmp
dec
jle
push
aam
pop
cli
and
pop
push
dec
sbb
sub
mov
add
pop
mov
fwait
sub
jecxz
mov
cmp
push
xor
int
arpl
xlat
icebp
fs
fldenv
in
sbb
add
mov
add
addl
test
pop
jnp
or
or
or
cmp
mov
negl
mov
push
mov
mov
push
and
or
pop
std
push
sbb
sarl
outsl
test
adc
cmp
js
andl
xchg
lcall
mov
insb
push
scas
and
push
push
mov
cmp
add
or
inc
fcomip
adc
mov
cltd
push
sbbl
or
xlat
xor
lahf
sahf
and
rcll
leave
adc
insl
fstpl
push
or
int
xchg
enter
or
arpl
and
pop
js
dec
cmp
ljmp
iret
pop
outsl
add
or
add
push
ret
and
sbb
popa
add
jne
cmp
or
xlat
add
call
roll
test
pop
pop
mov
mov
daa
sahf
and
cmp
in
movsb
movsb
pusha
out
in
cli
mov
pop
popf
jge
inc
icebp
lcall
icebp
nop
add
sub
and
arpl
pop
ds
push
push
rcl
lret
les
xlat
cmp
xorl
cmp
mov
out
adc
sarb
pushf
fsubs
cmp
sbb
sbb
and
dec
aaa
jecxz
ja
fcoml
notb
add
cmp
xor
jle
inc
out
add
mov
cs
movsl
add
xor
fdivrs
xchg
gs
push
das
cwtl
xor
aam
movsb
jb
popf
mov
and
xchg
inc
fsub
cmc
gs
mov
push
andl
push
inc
push
int
pop
and
mov
add
divl
add
mov
aaa
and
pop
inc
mov
or
and
in
jo
test
push
imulb
jns
inc
or
sbb
fdivp
mov
shrb
sarl
mov
xlat
push
shl
aaa
arpl
rcr
xor
adc
cld
mov
push
or
xchg
and
mov
ret
iret
mov
sub
mov
sub
mov
sbb
stc
call
stc
and
adc
jg
push
push
stc
loope
sbb
js
xchg
fs
into
push
push
cmp
adc
iret
xlat
jnp
mov
dec
js
and
and
sbb
test
cmp
mov
cwtl
aaa
rcll
test
adc
aaa
test
mov
dec
aaa
lock
cwtl
aaa
js
scas
testb
mov
and
sbb
sbb
xor
dec
sub
out
mov
rcll
js
cmp
arpl
popf
sbb
stc
cmp
pop
adcl
adc
outsb
js
stc
dec
test
lahf
and
cmp
ret
popf
jecxz
pop
cli
lcall
adc
inc
cmp
pop
loope
mov
add
negl
scas
cmp
and
mov
mov
pushf
push
mov
sbb
inc
pop
ds
insb
jae
cmp
std
mov
push
fwait
mov
rcr
in
icebp
movsb
movsl
inc
test
jbe
mov
mov
mov
add
movsb
and
sub
lds
loope
mov
fmuls
push
inc
jnp
incb
sti
pop
mov
ficomps
dec
cmp
push
scas
fcompl
movsl
mulb
inc
mov
clc
inc
jecxz
cmp
loope
les
or
mov
cmp
mov
in
aaa
or
arpl
pop
cmp
ret
adc
sub
mov
repz
in
cwtl
testl
xchg
xlat
jge
mov
pop
or
cwtl
cmp
sub
adc
and
add
pop
arpl
xchg
sbb
cmp
sbbl
cmp
mov
daa
xor
pop
add
fistpl
sbb
cs
sahf
int
rorb
lea
mov
pop
mov
stc
imul
not
outsl
aaa
cmp
xchg
add
clc
sbb
out
cltd
fldenv
ja
push
cli
aad
mov
pop
dec
test
dec
roll
xor
push
outsl
cmp
clc
addr16
or
lea
push
cmpsl
test
sub
push
insl
inc
xchg
test
cmp
push
mov
pop
outsb
in
in
push
cwtl
xlat
adc
and
fcoms
iret
in
push
inc
cltd
jmp
inc
fldenv
push
xlat
jne
add
mov
fdiv
cmp
lds
mov
inc
test
imul
push
xchg
and
out
mov
loope
mov
outsl
mov
fs
fwait
cmp
xchg
and
cmp
push
cmp
lods
push
gs
xor
xchg
jge
mov
mov
inc
pop
jnp
add
aam
lcall
nop
xchg
jecxz
pop
outsl
push
stos
icebp
outsl
cwtl
cmp
in
and
iret
dec
cmp
sbb
add
shrb
outsl
pusha
call
xorl
outsb
test
mov
xchg
jb
and
sbb
or
and
and
loop
fs
call
cwtl
es
sahf
imul
stos
decb
inc
mov
pop
ss
mov
aaa
fimull
daa
sahf
and
sbb
add
fnstcw
cwtl
pop
or
dec
ss
mov
in
out
std
cmc
ds
cmpsb
pop
int
iret
ljmp
xlat
adc
movsl
andl
bound
jg
sub
pop
add
cmp
js
into
pop
cmpsl
in
inc
xchg
pop
mov
mov
repnz
lods
fisttps
ja
cmp
add
cltd
push
add
mov
jmp
mov
movsb
test
add
ret
adc
sbb
cmp
add
cltd
mov
out
mov
push
cmpsl
adc
inc
add
sbb
mov
and
cmc
push
inc
sahf
clc
sti
push
gs
fisttpl
jecxz
add
pop
pop
cli
add
mov
jge
add
jo
push
push
mov
insl
stos
iret
or
jmp
jns
xor
in
rolb
pop
mov
fucomip
push
and
adc
mov
sub
mov
add
scas
pop
cmp
fs
pop
mov
or
jg
add
fdivr
sti
xchg
jns
cmp
cmc
mov
negl
enter
mov
notb
in
roll
sti
adc
xlat
arpl
mov
fbld
in
ja
in
push
dec
add
push
sub
testb
ret
adc
out
push
orl
int
or
out
movsb
aas
movsb
cwtl
mov
inc
mov
enter
mov
popf
cli
push
jp
idivl
shrl
xchg
movsb
mov
adc
lret
incb
ljmp
cmc
dec
mov
cli
test
jns
int3
shrl
adc
cmp
ret
and
scas
rol
jp
arpl
sbb
pop
pushf
jno
sti
test
lock
cli
sub
jle
inc
push
lcall
ret
out
idivl
loop
cmp
sahf
xor
in
sbb
cmp
xchg
push
les
gs
cmp
sti
xor
movsb
inc
inc
xchg
pop
iret
loop
loopne
push
iret
push
mov
push
fcomp
mov
cltd
adc
lds
cmp
xchg
push
movsl
add
imul
sbb
js
rcrb
mov
pop
sub
mov
sbbl
add
fcmovnb
sbb
cmp
repz
xchg
sbb
rclb
xlat
daa
clc
mov
stc
fildl
sbb
cmp
lds
lds
adcl
fcoms
stc
loop
fwait
pop
cmp
xor
ljmp
push
arpl
pop
pop
int
mov
push
fldcw
cmpsb
movsl
sub
push
dec
loop
xchg
add
fildll
stos
clc
cmp
xchg
addr16
imul
sub
adcl
loope
mulb
subl
push
outsb
pop
cltd
call
pop
aad
insb
adc
xchg
xlat
negb
lea
mov
movsl
in
adc
and
arpl
stc
ja
inc
mov
sbb
push
in
cmp
dec
mov
arpl
pop
sbb
scas
mov
or
xchg
ja
mov
loop
negl
adc
sub
lock
mov
testl
add
js
xchg
mov
stc
test
daa
je
push
jb
sbb
pop
pop
sti
push
pop
mov
cmp
test
and
cwtl
outsb
jnp
movsb
inc
and
cmp
adc
outsl
pop
push
pop
iret
mov
inc
push
or
pushf
dec
int3
mov
ret
cmp
sbb
ds
and
add
cltd
xchg
test
sbb
mov
mov
pop
test
push
pop
aam
sbb
sbb
cmpsl
insb
out
aaa
xor
inc
test
test
outsl
vmovaps
sub
mov
xchg
ret
mov
cmp
shll
add
xchg
and
sbb
add
movsl
out
pop
inc
and
out
inc
popf
add
movsl
clc
mov
cltd
data16
adc
mov
sahf
mov
shr
notl
ret
xor
mov
fsts
inc
std
arpl
stc
fcomps
push
scas
or
inc
fstpt
cwtl
call
cld
fdivl
inc
cmp
sub
push
pushf
sbb
mov
ret
icebp
sbb
movsl
jnp
clc
movsb
cmp
icebp
faddp
add
sub
aaa
lds
xchg
xchg
gs
cwtl
and
cli
cmp
dec
cltd
sub
and
sti
adc
fsub
test
cmp
jecxz
mov
or
les
arpl
js
clc
cmp
sti
sub
push
inc
xlat
iret
jp
pop
sarl
stc
dec
cltd
fwait
add
mov
add
dec
add
fs
pop
mov
inc
and
pop
mov
arpl
push
and
cmp
inc
lret
add
and
enter
mov
mov
mov
aas
scas
stc
lahf
jp
jne
sbb
push
lods
adc
popf
inc
cmp
mov
scas
sbb
jo
jnp
daa
arpl
cmp
adc
mov
inc
sbb
xchg
sbbl
cltd
xor
test
push
mov
jle
rcrb
sti
adc
push
jp
mov
sbb
and
cs
ja
add
xor
pop
arpl
pusha
aam
pop
enter
push
cmp
in
std
push
ja
ds
sbb
cmp
add
mulb
fs
adc
push
cwtl
out
subl
mov
repz
add
js
and
and
sahf
int
sbb
jecxz
mov
cmpb
cltd
loop
cmp
ret
inc
aad
push
pushl
mov
jge
adc
gs
xchg
and
cmp
xor
movsb
pop
cmp
cltd
xchg
in
neg
and
outsl
ss
lcall
mov
or
ss
add
ret
gs
sti
pop
fisttps
test
cwtl
add
fwait
inc
mov
sti
in
shrb
int
xchg
and
sbb
push
test
fdivs
sahf
push
jb
pop
movsl
and
jmp
stos
sbb
aad
js
adc
aaa
fs
cmp
jb
iret
mov
sub
movsb
sbb
xchg
cwtl
testl
jb
ljmp
outsl
aaa
scas
je
adc
inc
adc
sbb
fcomp
jnp
push
insl
cwtl
iret
mov
push
icebp
xchg
lds
in
dec
in
lds
ds
or
les
sti
fldlg2
sbb
or
pop
inc
and
mov
loop
aaa
adc
pop
jecxz
roll
stc
call
popf
mov
imul
fisubl
mov
fwait
notb
dec
push
and
cmp
push
sbb
xchg
add
cwtl
push
mov
sti
enter
ret
dec
dec
pushf
jmp
enter
sbb
vpsubusb
lret
jnp
sahf
xchg
aaa
inc
cmp
xlat
inc
call
clc
push
push
mov
orl
sahf
aam
int
or
fcmovu
dec
xor
and
fnstcw
pop
fiaddl
push
add
js
lds
clc
shl
sbb
or
loop
sbb
xor
sbb
pop
cmp
cmp
iret
cmp
sti
imul
add
outsl
sahf
push
repnz
xor
out
sahf
sti
dec
jo
popf
cmpb
rcrb
aad
cmp
sbb
daa
push
shll
or
pusha
loope
inc
add
jecxz
mov
adcl
sbb
pop
adc
loope
pop
test
inc
mov
data16
cli
add
and
pop
fldcw
addb
mov
sbb
inc
jecxz
mov
test
cmp
sbb
shl
or
in
pop
pop
les
sbb
dec
lret
push
ljmp
sub
jno
cltd
sbb
rcrb
push
sbb
or
fadds
lock
js
and
sti
cmp
pop
xor
mov
inc
push
mov
movsb
cmp
popa
and
mov
sbb
push
sub
fistl
mov
mov
and
shl
push
je
out
adc
cmc
jmp
fs
sub
fsubrs
outsb
fs
in
add
add
xor
push
lods
jg
add
movsl
push
stc
jne
sbb
xchg
sub
sti
mov
xor
xor
sub
lods
add
call
jge
ficomps
outsb
fnstenv
ret
pop
cmp
dec
cmp
jmp
in
mov
sti
out
sbb
fs
push
sbb
cwtl
bound
dec
and
in
arpl
xchg
mov
fs
jg
leave
rcrb
pop
jl
les
popf
not
out
inc
outsl
xchg
shrb
push
rcr
cmp
pop
and
lods
out
sarl
out
dec
iret
adc
ja
sbb
sbb
jecxz
add
push
add
leave
inc
ds
andl
pop
mov
icebp
fistl
cmp
dec
add
ret
bound
stos
sbbl
outsb
cmp
movsl
neg
sbb
in
pop
jno
push
sbb
sbb
jecxz
or
pop
adc
xchg
stc
loop
dec
imulb
repnz
dec
inc
gs
push
xchg
inc
lds
pop
bound
jo
movsb
mov
mov
icebp
jecxz
ja
movsl
dec
movsl
pop
push
je
aad
and
mov
push
sbbl
and
cmp
cli
pop
stos
sbb
push
pop
fistl
sahf
cltd
jmp
mov
jnp
jmp
addl
and
fwait
push
aad
mov
cwtl
add
inc
pop
add
repz
lret
ja
jb
xlat
sbb
test
jb
push
cmp
add
adc
negb
add
inc
cwtl
movsl
loope
add
xchg
out
out
pop
mov
cli
inc
pop
int
and
leave
pusha
inc
jg
cmpsl
rolb
mov
and
stc
cmp
mov
or
cmp
outsl
add
ret
leave
sahf
fistpl
stc
aad
and
aaa
inc
mov
mov
dec
test
ret
mov
xchg
jo
add
inc
jno
test
mov
mov
mov
add
test
sbb
test
ja
ljmp
inc
mov
jecxz
js
inc
test
sbb
ja
lock
sbb
pop
mov
and
icebp
adc
sti
fs
inc
ja
push
dec
leave
clc
jnp
xor
xlat
mov
cltd
cmp
add
fwait
sbb
orl
push
or
xchg
adc
in
add
xor
js
jns
pop
pop
clc
mov
stc
or
mov
pop
sbb
cwtl
mov
cmp
pop
fnstenv
aad
jae
jnp
ror
inc
jo
mov
push
ljmp
and
add
dec
xchg
popf
jb
out
push
ds
scas
adc
gs
movsb
xorl
loop
mov
adc
cli
inc
rcl
inc
cmp
mov
sti
not
xlat
sub
stos
mov
stc
jecxz
inc
sbb
and
xchg
sbb
js
xchg
into
lock
cmpsl
popf
cmp
sti
inc
cmpsb
mov
mov
outsl
loop
arpl
lahf
fcom
mov
adc
xchg
cltd
pop
add
aad
roll
and
push
ja
inc
cmp
push
lods
mov
les
arpl
imul
adc
jb
jl
xor
pop
and
pop
push
sbb
xchg
jne
int
xor
fcompl
pop
aam
xor
je
mov
cmp
push
xor
push
aad
pop
fs
jecxz
dec
sbb
and
jns
dec
or
mov
dec
push
cli
jnp
mov
js
hlt
in
orb
loop
sahf
xlat
fbstp
mov
jns
and
or
clc
inc
xlat
fadds
add
add
pushf
popf
mov
inc
push
movsb
mov
adc
loop
shrl
add
jns
inc
mov
xor
dec
hlt
xchg
sbb
ja
leave
dec
cwtl
leave
fwait
test
cmp
push
clc
xchg
pop
jae
jb
icebp
add
das
xchg
in
add
in
fcoms
clc
imulb
daa
repnz
icebp
jns
mov
call
cli
pop
sbb
pop
inc
and
in
jmp
mov
or
dec
cli
dec
fldenv
ja
pop
pop
fwait
ds
js
inc
ret
mov
jl
icebp
and
stc
cs
or
sbb
push
mov
mov
cwtl
jb
xchg
mov
adc
push
sar
or
or
sub
lods
mov
and
add
add
jns
mov
cmp
mov
mov
push
xchg
clc
out
cli
adc
aaa
push
xlat
ss
mov
cmp
cwtl
clc
push
cmp
add
ret
pop
pop
jecxz
test
push
cmp
or
shll
fiaddl
movsb
add
xor
mov
add
cmpl
cwtl
pop
out
xchg
and
dec
push
mov
or
jae
lods
in
or
adc
andb
js
fldenv
je
mov
cmp
cli
push
adc
cltd
loop
xchg
int
xor
lret
jne
cli
outsl
sub
andl
push
iret
in
rcr
cmp
ljmp
jmp
loopne
fs
xchg
mull
push
inc
jl
and
and
jns
jne
mov
sub
mov
sbb
pop
xchg
or
test
mov
pop
lds
stos
imul
adc
dec
ret
or
mov
cwtl
or
imul
add
and
mov
shlb
lds
pop
add
test
dec
jne
mov
in
aas
movsl
sub
mov
pop
and
and
push
pop
mov
lahf
xor
ss
les
popf
cli
pushf
lret
lahf
test
ds
dec
pushf
push
icebp
pop
mov
sbb
push
sahf
data16
ret
shrb
push
xchg
aaa
mov
jns
cmp
in
fwait
mov
leave
sbb
inc
movsl
jecxz
and
mov
fwait
mov
loop
pop
mov
adc
jnp
mov
push
scas
pop
popl
push
push
rclb
movsb
add
rcrb
mov
push
rcr
push
test
sub
xchg
hlt
jecxz
bound
pop
clc
imul
pop
sti
js
sub
dec
and
mov
repz
cld
push
popf
cmp
or
cmp
sbb
aaa
add
rolb
pop
cmpsl
sahf
ljmp
sahf
xchg
sub
pop
je
mov
subl
mov
add
pop
jns
xchg
and
lds
and
in
jo
mov
clc
loope
js
and
loope
fs
add
mov
and
mov
pop
push
sahf
push
add
movsb
push
in
xor
in
fcomps
and
cmpsl
imul
jb
dec
jecxz
movsl
in
cmp
test
xor
xchg
push
cmp
mov
ss
outsb
adc
jns
not
or
sbb
dec
push
aaa
insl
lods
gs
andl
sarl
int3
mov
mov
inc
shlb
push
test
inc
divb
mov
in
push
xlat
roll
sbb
and
pop
and
mov
stc
cmpsb
rcrb
imul
pop
in
in
pop
xchg
xchg
outsb
movsl
cmp
notl
loop
pop
insl
sub
pop
pop
add
mov
shll
mov
and
les
xchg
movsl
loope
sbb
push
es
rcrl
push
push
imul
icebp
jne
inc
jecxz
adc
inc
inc
orl
loop
mov
mov
jns
mov
js
std
cli
and
ja
xchg
lds
mov
sbb
sbb
adc
pop
fwait
aaa
rcrl
arpl
int
jae
loop
movsb
pop
pop
sbb
idivl
scas
test
cmp
mov
outsl
add
fwait
mov
sbbb
and
pop
cmpl
lahf
pop
sub
fcoml
pushf
fdiv
jge
cmc
xchg
cmp
sub
sbb
mov
cwtl
add
mov
gs
arpl
push
mov
inc
and
push
or
ja
mov
stc
adc
add
push
and
and
fwait
pop
or
fcomi
mov
scas
xchg
outsl
xorl
sbb
push
xlat
sub
push
ftst
imul
pop
push
movsb
add
or
cmp
add
loopne
mov
cli
pop
cmp
jns
dec
js
je
fisttpll
add
push
fcomps
movsb
gs
outsl
push
es
inc
push
adc
push
adc
xor
test
sbb
ret
movsl
aam
push
loop
xlat
pop
cmp
mov
rclb
mov
cmc
fdivs
push
enter
arpl
adc
testl
test
test
in
xor
cmp
sbb
sbb
mov
adcl
in
mov
lock
fcomps
pop
in
sbb
mov
pop
mov
jle
mov
test
leave
inc
pop
fld
cmp
push
sbb
push
xor
lahf
imul
lret
fwait
cmpb
inc
idivb
mov
pop
xchg
or
mov
js
jl
sub
xlat
lret
sti
bound
pop
sub
imul
hlt
pop
in
leave
inc
testl
cmp
sbbl
dec
inc
in
jne
outsl
cmp
xor
pop
sbb
add
mov
cltd
push
and
mov
cmp
mov
pop
fwait
stos
xor
add
cwtl
loop
scas
aas
dec
dec
or
aas
push
daa
sub
or
add
or
inc
xchg
arpl
lret
pop
pop
lods
cmp
arpl
scas
push
out
mov
adc
xchg
mov
mov
ret
push
push
stos
sub
inc
push
add
and
aaa
push
fwait
ja
mov
sbbl
add
aad
jmp
ja
and
jecxz
scas
pop
movsb
and
fwait
mov
add
pop
les
cmp
adc
insb
adc
testl
cli
loop
jecxz
sbb
std
push
pop
in
and
rcl
in
jns
movsb
push
test
push
fsts
mulb
jge
sbb
cmp
sbb
mov
inc
sti
sbb
cmp
xlat
sbb
test
xchg
pop
mov
in
mov
xchg
push
arpl
pop
mov
or
dec
inc
push
sbb
pop
dec
mov
mov
orl
imull
jle
mov
xchg
add
movsl
icebp
sbb
sbb
stc
mov
add
pop
xchg
pop
add
cwtl
pop
das
imul
aam
cmp
scas
ljmp
and
les
jnp
aam
push
daa
add
pop
clc
sbb
push
mov
and
cmp
jecxz
push
in
and
jle
push
mov
xlat
cltd
scas
mov
roll
xor
mov
mov
jnp
fisttps
out
mov
idiv
sbb
push
xor
fsubs
and
lds
xor
jbe
aaa
jns
and
push
mov
inc
mov
xchg
mov
xlat
ret
cmp
scas
aaa
aaa
mov
add
das
pushf
imul
or
mov
mov
push
adc
and
rol
inc
arpl
mov
lock
cli
pop
ljmp
movsb
movsl
adc
in
jns
rolb
and
lock
dec
clc
jmp
cmp
pushf
sahf
inc
inc
js
mov
sahf
xchg
mov
aas
pop
pop
jl
and
jl
pop
jnp
jo
sub
scas
repnz
pop
stc
mov
sbb
add
in
je
cli
jno
and
jecxz
pop
mov
in
test
cmp
lea
fwait
arpl
clc
pop
mov
dec
dec
jns
mov
popa
scas
or
push
icebp
and
cmp
fcomp
adc
jnp
push
in
cli
jns
les
sbb
xchg
or
cmp
jge
loop
xor
daa
xchg
cmp
cmp
std
repz
lds
test
shlb
mov
inc
mov
jg
test
out
jne
arpl
movsl
add
and
add
jg
leave
divl
aas
popf
fwait
sahf
test
movsb
jbe
lea
dec
nop
add
push
lock
addl
pusha
ja
sub
in
mov
adc
pop
xchg
sbb
pop
movsl
sahf
xchg
rcl
push
xor
dec
pop
inc
pop
jo
sub
jnp
loop
cli
in
icebp
pop
stc
fs
add
pop
push
arpl
add
sub
inc
repnz
or
sbb
aam
iret
fsts
jno
jo
arpl
push
pop
enter
movsl
cmp
inc
mov
sub
push
cmp
mov
add
add
push
es
iret
fwait
xchg
in
jge
adc
adc
inc
fdivrs
push
add
cmp
and
mull
adc
lret
cmp
xor
jns
cmp
out
mov
inc
sub
aam
push
and
add
xchg
jge
sub
ret
add
push
in
mov
inc
clc
cwtl
mov
mov
pop
push
and
clc
push
mov
jge
es
jns
loopne
rcll
add
and
jle
inc
push
and
xchg
pop
inc
or
cmp
inc
movsb
cbtw
add
movsl
std
into
and
cwtl
mov
inc
jl
ja
fdivrs
fisubs
cwtl
mov
xchg
dec
xor
sti
cmp
jnp
push
mov
fwait
mov
in
iret
xchg
loop
out
mov
jp
test
pusha
aaa
les
pop
dec
mov
inc
arpl
push
ret
cltd
fnstcw
xor
add
inc
jbe
dec
sub
xor
xorl
jns
addl
out
jmp
call
repnz
das
xchg
test
cld
push
imul
add
sbb
mov
jne
adc
dec
cmp
test
add
inc
lcall
std
xorl
inc
push
add
or
mov
cwtl
pop
ret
inc
cmpsl
outsb
lds
js
fs
fmul
mov
lods
lea
dec
cld
mov
add
cld
adc
negb
xchg
cmp
in
out
and
test
fsubrs
cmp
add
sti
push
cwtl
mov
sbb
push
arpl
add
add
xchg
inc
pop
pop
adc
inc
mov
add
movsb
adc
mov
cmp
push
xchg
sbb
cmp
mov
mov
xor
push
sahf
fistl
shll
pusha
and
inc
sarl
sub
je
clc
popa
push
sahf
sub
jg
pop
shrl
sub
ds
mov
sahf
push
add
cmp
push
cmp
testb
insl
lcall
loop
cmpsb
popf
loope
mov
aaa
fsubrs
ret
adcl
cwtl
cmp
repz
inc
sub
mov
movsl
mov
clc
push
pop
push
jl
cwtl
mov
xchg
cmp
test
out
pop
in
pusha
cli
pushf
mov
nop
ja
sbb
pop
push
insb
pop
lea
mov
add
xchg
inc
push
cs
fldcw
mov
sub
mov
cmp
les
push
or
aaa
inc
mov
cwtl
cwtl
jg
in
mov
sub
jno
xor
mov
add
inc
out
imul
movsl
dec
add
shlb
fildl
sarl
adc
push
mov
add
and
cli
test
stos
repz
std
repnz
sub
js
negl
shll
jecxz
pop
mov
add
cmp
adc
cmp
sub
fldt
mov
push
mov
adc
iret
sbb
adcl
jge
mov
aaa
es
push
jnp
fwait
cmp
sbb
sti
add
test
ror
cli
arpl
jns
mov
test
outsb
loopne
cwtl
adc
sarl
ja
nop
dec
fmuls
shr
lds
cmpsb
push
imul
leave
fdivrs
lea
inc
sbb
and
dec
pop
push
cltd
idiv
aaa
add
xor
mov
aaa
cmp
push
les
sub
adc
fcoms
les
inc
int
add
int3
cwtl
stc
fildll
gs
lea
pop
shlb
clc
test
movsl
pop
test
lea
loop
pop
add
aaa
mov
add
mov
not
mov
inc
adc
insl
inc
xchg
cli
sbb
cmc
jmp
cmc
cmpsl
mov
fs
popa
xor
push
inc
sub
xchg
push
lcall
cmp
jb
or
xlat
arpl
jnp
jg
xchg
aas
sar
pop
lea
mov
out
or
pop
ret
adc
loope
mov
cld
int
inc
fs
sub
mov
cwtl
dec
cltd
movsb
add
call
and
fcomi
jecxz
mov
xor
or
movsl
lds
mov
jnp
mov
cmp
adc
jg,pn
add
std
add
arpl
adc
es
movsb
testb
pop
dec
sahf
test
jns
or
sbbl
push
jnp
inc
and
pop
fs
lods
pop
xchg
lea
cltd
add
pop
clc
push
fwait
gs
int
jns
and
lea
cmp
adc
les
adc
add
ret
pop
mov
jle
and
sbb
arpl
xchg
jnp
loope
and
pusha
adc
pop
add
adc
clc
bound
lcall
jecxz
movsl
cmp
out
mov
ret
in
dec
lds
pusha
dec
pop
sbb
addr16
scas
clc
movsb
mov
add
sti
cmp
adc
fcomps
push
adc
in
sbbb
xchg
fs
movsl
pop
sub
push
imul
les
ja
cmp
inc
lret
jecxz
lds
jo
add
icebp
xor
cmp
bound
jne
test
push
cwtl
or
xlat
sub
pop
mov
aaa
mov
sbb
or
loop
pop
cmp
jnp
inc
mov
pop
in
nop
js
push
sbb
pop
cmp
xchg
cmpsb
ss
pop
mov
iret
fnstcw
mov
js
push
ja
shlb
stc
jecxz
mov
push
cli
mov
fildl
lods
add
jecxz
xchg
sbb
or
arpl
xlat
sbb
jnp
pop
xchg
xchg
lds
outsb
dec
enter
push
addl
enter
adc
mov
fprem
jb
lahf
push
out
pushf
xlat
cli
adc
dec
out
cmp
daa
and
xchg
add
mov
push
icebp
cmp
js
push
add
mov
ds
std
add
dec
ret
lock
sbb
sbb
negb
mov
and
inc
xchg
mov
lret
mov
les
xchg
fdivrs
pop
sbb
xor
mov
and
loop
cmp
xchg
sbb
cmc
sbb
push
aaa
aad
pushf
mov
cwtl
int3
xchg
negl
dec
cltd
sub
adc
pop
pop
dec
cmp
fmuls
dec
out
mov
and
push
movsl
sub
push
shlb
shrb
and
sub
sub
mov
push
gs
push
xchg
fcomps
cmp
fisubrl
pop
push
fwait
inc
fistl
dec
sbb
in
leave
xchg
sbb
std
scas
popf
lods
clc
pop
pop
jnp
shlb
inc
test
add
xchg
imul
out
jecxz
jns
in
jmp
test
fstl
cmp
flds
sti
movsb
xchg
loopne
fs
mov
cli
push
ja
mov
mov
mov
in
inc
ret
xor
mov
mov
mov
lea
flds
fcmovnbe
loop
loope
rolb
fstpl
and
movsl
or
inc
mov
in
jo
sbb
adc
fstps
cmp
in
clc
lahf
sbbl
jno
insb
sahf
arpl
pop
jno
fwait
sahf
dec
aad
stos
jno
aas
sahf
fwait
roll
jecxz
pop
mov
pop
add
adc
ficoms
mull
xchg
and
stc
shl
cltd
lds
cmp
ret
dec
xchg
mov
addb
sahf
lds
je
mov
sbb
sub
xlat
mov
mov
push
inc
and
push
cwtl
cmp
fildl
movsb
dec
mov
sbb
or
and
xlat
and
mov
gs
repnz
test
jns
cli
imul
push
and
sbb
pop
xchg
movsb
sub
push
repz
mov
mov
xchg
les
inc
mov
and
xchg
shl
mov
clc
mov
sbb
jno
xlat
and
pop
add
mov
or
cmpsl
les
ljmp
inc
jl
fstpl
or
stos
dec
cwtl
add
mov
icebp
mov
inc
ret
or
cmp
jns
xor
mov
lea
outsl
pop
push
xchg
scas
iret
mov
jnp
mov
sbb
push
cmp
adc
repnz
mov
mov
jmp
aad
fnstcw
xor
pop
ss
xchg
movsl
dec
js
ret
sahf
std
aaa
sbb
in
xchg
mov
ljmp
test
test
push
lds
mov
dec
ss
mov
ret
or
loop
sub
sbb
push
gs
add
push
xchg
in
lret
icebp
outsb
movsl
sbb
add
arpl
and
inc
push
outsl
mov
pop
xchg
inc
dec
cwtl
sub
jecxz
mov
shll
xor
add
push
test
aaa
push
das
fcomi
cwtl
pop
or
sarb
mov
in
aad
icebp
lea
clc
lds
xlat
cwtl
in
inc
aas
movsb
cltd
cmp
add
arpl
and
xor
mov
push
push
and
xchg
mov
test
jae
pushf
cmp
shll
mov
js
dec
popf
xlat
add
roll
lods
jae
in
jecxz
xchg
repz
cmpsb
or
xchg
cmp
sbb
test
je
mov
adc
adc
mov
addr16
ja
iret
cmp
cmp
pop
pop
aad
shrb
fwait
sbb
jo
add
inc
mov
xchg
pop
arpl
ret
jb
inc
es
add
and
jnp
std
rolb
mov
xlat
icebp
mov
pop
cmp
push
mov
mov
cmp
dec
popf
xchg
xor
mov
jmp
push
stc
adc
push
push
inc
rcrb
mov
cli
mov
pop
or
fs
cmp
xor
mov
sub
or
mov
imul
ret
add
xor
inc
pusha
jne
fdivs
in
inc
arpl
sub
adc
sub
sbb
sbb
outsl
mov
adc
scas
sbb
clc
jnp
dec
dec
neg
inc
les
and
in
fistl
mov
fwait
sbb
sar
lds
addr16
aad
push
inc
push
rcrb
mov
push
cmp
pop
or
inc
push
mov
fiadds
lret
repz
push
popa
xor
sbb
sbb
cmp
push
jnp
xorl
rcll
divb
fwait
xchg
xchg
sub
push
popl
int
ja
aaa
jecxz
add
arpl
pop
popa
vhsubpd
aaa
adc
jns
icebp
pop
add
and
cltd
cmp
add
in
clc
and
aaa
and
ficoms
sti
inc
mov
hlt
mov
fcoms
or
xchg
sbb
movsl
push
sbb
scas
js
fisttpl
cwtl
sti
loope
repz
mov
test
jns
cltd
movsb
shl
or
adc
fs
leave
popa
push
repz
adc
push
in
xchg
jg
sub
sahf
mov
cmpsl
cltd
scas
loop
mov
lds
mov
xchg
mov
fdivr
cmp
dec
cmpl
outsb
cli
and
test
add
mov
xchg
divb
jl
pop
and
arpl
and
fwait
sahf
mov
mov
mov
idiv
mov
push
jnp
sub
jns
popf
cmp
xchg
pop
push
pusha
rcrl
cli
push
fadds
and
cltd
cmp
scas
ficompl
cli
add
addr16
jns
dec
fxch
movq
add
adc
sub
call
cmpsl
xor
mov
clc
in
cmpsl
aaa
std
inc
sti
sti
aad
lock
and
test
mov
ret
sub
inc
pop
add
push
add
icebp
dec
and
pop
test
outsl
and
rcl
adc
inc
xor
cwtl
andl
jge
jge
cltd
mov
inc
sub
in
loopne
pop
mov
ss
pop
fcmovnu
adc
pop
sbb
ss
in
aad
mov
mov
div
dec
add
jo
xlat
sar
add
pop
stc
mov
arpl
cmp
lock
fwait
mov
xchg
push
mov
mull
repz
jnp
bound
jmp
and
ret
push
imul
scas
mov
mov
xchg
or
adc
sahf
imull
in
loop
les
and
pop
popa
xor
cwtl
testb
daa
fmuls
flds
xchg
arpl
pushf
pop
lds
and
adc
cwtl
jb
test
movsl
int
add
aaa
addl
aam
ret
pop
js
cli
xchg
and
add
cs
pop
fdivrs
pop
xchg
xlat
lret
in
add
gs
mov
dec
sub
lahf
scas
sbb
clc
push
pop
jns
outsl
loop
mov
and
cmp
cmp
test
jnp
shr
cmp
jp
dec
clc
in
jmp
inc
repz
arpl
cmp
scas
add
adc
pop
adc
iret
mulb
pop
mov
add
test
inc
jb
loopne
sub
fildl
mul
loope
test
adc
leave
and
jle
mul
orl
cmp
and
xchg
pop
ss
cmpl
rol
mov
or
movsl
add
call
xchg
cmp
ret
loopne
and
pusha
popa
mov
and
mov
push
xchg
sbb
pop
sbb
lods
mov
add
jns
xlat
in
sbb
xchg
outsb
lret
test
addr16
pop
in
jo
mov
mov
andl
mov
stc
sub
leave
cmp
or
mov
xchg
movsb
movsb
cltd
push
sahf
in
cmp
insb
shl
fs
sti
jns
out
sbb
mov
dec
mov
xor
cmp
les
mov
cli
rorb
and
pop
test
and
cmp
push
jmp
push
inc
sahf
cmpsl
cltd
xor
mov
sub
sub
movsl
add
jnp
and
or
leave
push
jb
push
push
jecxz
lret
add
lock
lds
add
ja
jnp
cmp
ficompl
js
add
icebp
add
and
cmpb
push
inc
out
arpl
add
xlat
test
shll
movsb
ret
lcall
inc
mov
or
icebp
in
addl
add
insb
xor
add
sub
and
mov
or
cwtl
push
pop
jnp
adc
or
ret
in
xchg
jb
xchg
in
or
mov
js
xchg
stc
xorl
pop
mov
ficompl
mov
mov
je
or
clc
fisubs
fwait
vucomisd
jno
ret
sbb
pop
mov
push
push
push
sbb
dec
cwtl
lahf
pop
in
pop
ljmp
sbb
movsb
jb
dec
mov
aaa
in
and
les
popf
pop
out
cmp
fs
cmc
gs
pop
jb
push
or
lock
cmp
adc
sub
in
and
pop
jb
mov
mov
les
sub
repz
mov
adc
clc
cmp
xchg
and
ret
dec
and
ja
lds
or
or
xchg
stc
or
int
in
mov
mov
push
cli
mov
add
cwtl
loop,pt
jno
mov
shlb
js
xchg
ljmp
xchg
cmp
mov
sarb
int3
inc
jmp
and
jp
adcb
jae
push
mov
ja
test
xlat
mov
xchg
lock
mov
add
cli
clc
and
rcrb
mov
push
xchg
popf
sarb
sub
push
cmp
jns
in
les
jmp
mov
jns
icebp
xchg
mov
xchg
mov
arpl
and
sbb
jb
call
xor
adc
adc
adc
clc
add
sbb
sti
add
call
movsl
pop
fisttpl
cltd
cltd
jns
inc
mov
stc
data16
cltd
mov
xchg
outsb
inc
pop
mov
daa
sti
xor
insb
and
in
sbb
push
pop
sbb
sbb
mov
mov
mov
iret
push
clc
xchg
shlb
and
dec
mov
cmp
push
push
or
outsl
add
push
xchg
mov
pop
sub
dec
clc
mov
push
jbe
pop
ret
jo
fnstenv
out
adc
sbb
js
cltd
mov
and
lds
xchg
mov
rorl
xor
or
dec
lods
popf
xchg
adc
aaa
add
and
lods
sbb
inc
sbb
cmp
sbb
repz
cltd
inc
sahf
je
adc
or
inc
shrb
jmp
rcrl
mov
cwtl
notl
xor
xlat
dec
push
out
and
pop
xorl
pushf
lcall
pop
or
lea
clc
jae
fdivrl
mov
add
cmp
pop
rcl
movsl
vaddsubps
or
and
es
add
subb
adc
sti
pop
jns
std
movb
sbb
push
outsb
adc
lds
push
lock
scas
andl
movsb
cmp
xchg
out
insl
inc
pop
mov
add
test
scas
mov
cli
idivl
or
pop
xor
mov
ret
jge
cmp
or
sub
add
pop
dec
popf
cmp
adc
sbb
loop
lock
pushf
xchg
iret
and
lea
mov
jns
xchg
test
ja
or
xchg
cwtl
cmp
jns
add
lcall
jnp
popa
aaa
rcrb
inc
push
mov
movsb
negb
add
push
xor
outsl
xchg
mov
in
xor
xor
rorb
rcr
ret
in
lock
je
sbb
insb
fwait
add
jnp
jecxz
mov
cmp
repnz
or
and
sti
imul
icebp
jmp
ja
pop
loope
pop
inc
or
pop
sbb
xchg
fs
jmp
pushf
cmp
sbbl
movsb
fs
jl
mov
mov
js
std
sbb
mov
loopne
push
adc
sbb
ret
cltd
idiv
pushf
add
out
add
outsl
out
cld
jns
adc
sahf
dec
dec
out
scas
stos
mov
jg
mov
leave
inc
jle
jnp
je
fistpll
repnz
cwtl
lret
clc
pop
in
sarb
mov
dec
fstpt
mov
pop
inc
clc
fld
dec
stc
mov
sbb
cmp
adc
pop
mov
inc
pop
cmp
lds
add
loopne
mov
mov
adc
push
ffreep
push
jae
dec
cmpsl
sbb
test
jle
subl
pop
cmpsl
mov
aaa
cmp
jo
pop
rolb
and
loop
int3
mov
loope
pop
ja
cmp
and
test
dec
outsl
dec
jae
mov
xlat
test
clc
pop
mov
popf
scas
aas
sti
or
fdivr
and
cltd
mov
test
aam
jl
xlat
xchg
rolb
and
mov
mov
loop
sahf
mov
sahf
jecxz
push
sahf
sub
xlat
dec
loop
sahf
loop
pop
loop
lea
push
pop
loop
sahf
and
mov
and
xlat
pop
push
je
jl
outsb
mov
and
xchg
inc
mov
mov
sahf
push
sbb
xchg
addr16
jecxz
push
sahf
sub
xlat
dec
loop
sahf
loopne
hlt
push
loop
sahf
and
sbb
push
pop
loop
sahf
mov
out
jns
add
mov
loope
xchg
inc
sbb
sahf
in
fdivr
arpl
or
cwtl
push
divb
jns
push
dec
sbb
mov
cmp
cmp
ret
sahf
dec
rcrb
testb
ret
xor
cmp
and
xlat
or
testl
add
je
push
out
mov
addl
jb
and
xor
jnp
in
outsl
add
mov
jns
repz
pop
and
loop
xlat
ss
mov
lahf
test
loope
cmp
fnstcw
or
jns
cltd
sbb
mov
sar
cmp
sbb
add
xchg
arpl
sbb
jle
cld
pop
mov
adc
clc
adc
cltd
ret
bound
gs
mov
adc
in
or
jo
fistl
jl
push
pop
ljmp
movsl
add
add
cltd
push
jl
es
pop
aas
cmpsb
and
sahf
add
mov
xor
xchg
andl
fbstp
rcl
fcmovu
sub
fsubl
popf
out
pop
push
repnz
dec
xchg
push
popf
pop
hlt
pop
negl
cltd
or
push
fsts
mov
dec
stc
mov
in
lds
fisttpl
mov
push
mov
mov
jno
sbb
xor
lret
mov
pop
sbb
mov
pop
lea
fwait
push
out
dec
pop
push
icebp
jp
push
or
in
gs
fwait
call
sbb
cwtl
insb
test
jo
addr16
xchg
mov
jns
in
mov
push
xlat
sahf
popf
push
ja
mov
lahf
mov
xchg
fcomi
push
inc
add
sbb
mov
mov
mov
pop
popf
orl
xchg
enter
aad
sahf
lock
notl
lock
jae
pop
sbb
je
ret
dec
sahf
mov
mov
push
add
pop
sti
loope
cmp
xchg
call
push
mov
push
adc
push
sub
fwait
push
and
pop
ficomps
popf
cmp
cmp
ret
add
or
lods
sahf
orl
push
push
in
ljmp
sahf
dec
push
ljmp
jp
pop
shl
push
dec
lahf
js
rclb
arpl
jecxz
jae
pop
inc
es
cmp
mov
ficomps
pusha
cltd
pop
pop
data16
test
cmp
push
fwait
push
pop
push
or
negl
cmp
cmp
mov
sub
subl
aaa
mov
push
fstps
add
xor
incl
add
lds
mov
mov
movsl
inc
push
add
sbb
jo
inc
or
and
lret
mov
shrb
or
addr16
cmp
push
jno
mov
mov
rolb
add
and
or
in
cmp
daa
sarb
ret
xor
stc
gs
ljmp
lcall
fiaddl
cltd
sbb
jecxz
xor
test
jo
jl
add
sub
filds
mov
fcomip
test
arpl
paddq
in
cmc
sbb
out
mov
or
mov
in
jge
ds
sti
pop
and
pop
fstl
fistpl
and
cltd
push
fstps
pop
lock
cmp
fnstsw
gs
cli
sub
nop
add
lcall
cmpsb
lcall
scas
mov
cmp
sbb
mov
mov
rol
jbe
nop
inc
and
mov
jp
out
std
sti
neg
lock
jnp
pop
pop
mov
andl
cli
xlat
scas
lret
fistpl
mov
jnp
pop
test
scas
std
cmp
sbb
call
sbb
pop
mov
mov
pop
push
xlat
cmp
lret
sbb
mov
sbb
fistl
rorb
fwait
push
fnstcw
pop
dec
pop
cmp
test
enter
fsincos
rcr
dec
pop
mov
jnp
pop
adcl
rcrl
jg
pop
sti
mov
adcl
pop
add
shrb
sbb
mov
jnp
xchg
add
shrb
sbb
fstpt
or
fstps
sbb
inc
mov
sbb
in
or
js
fists
mov
pop
add
test
mov
lret
fcmovbe
sti
negb
aad
negb
add
pushf
fwait
andl
negl
negl
ret
pop
cltd
xchg
int3
icebp
negl
cli
xchg
icebp
int
mov
mov
std
cli
shlb
cmp
sbb
push
pop
push
dec
stos
cli
mul
cmpsl
lea
fs
mull
and
mull
mull
mull
or
icebp
notl
fstpt
outsb
out
fcomps
sti
jle
das
jnp
sbb
insb
sbb
mov
sahf
nop
test
in
out
ljmp
fdivl
lock
in
insl
loopne
mov
in
fistl
lea
xchg
test
mov
ljmp
pop
mov
xchg
test
mov
ljmp
sbb
inc
sbb
lds
pop
xchg
sbb
sbb
sbb
addr16
lea
lret
cmp
pop
xor
sti
fsincos
sar
jns
xchg
sti
mov
in
dec
jl
xor
dec
fmul
out
pop
clc
lret
shll
test
enter
mov
clc
aas
push
lea
das
sti
int3
xchg
mov
jns
jbe
shll
sbb
or
arpl
scas
jg
iret
sbb
pop
sbb
push
hlt
fcmovnu
jb
dec
mov
sbb
out
sbb
add
inc
enter
testl
push
sbb
mov
fmulp
lret
adc
rorb
sbb
sti
rorb
sti
push
fsincos
sar
dec
pop
sti
mov
xorb
sti
push
daa
push
jl
lcall
mov
insl
cmpsb
mov
cmpsb
mov
jecxz
loope
xor
pop
lret
cmp
fnstsw
adc
pop
rorb
jnp
fnstcw
sbb
jnp
jnp
cltd
add
rcr
push
sbb
or
xchg
movsl
dec
lret
pop
imul
outsl
les
jp
stos
sub
je
loopne
fimuls
flds
mov
cwtl
frstpm(287
mov
ljmp
push
mov
movsl
jnp
and
lret
dec
adc
and
test
pusha
ja
jne
loop
adc
popa
popf
loopne
or
xlat
js
or
inc
cltd
cwtl
js
sbb
roll
lret
loope
sbb
jbe
sti
pop
loopne
imul
ljmp
pop
aaa
aam
lret
int
imull
mov
int
xchg
jecxz
out
sti
enter
sbb
arpl
scas
ret
jo
scas
test
or
scas
cmp
pop
and
fs
loopne
pop
and
sub
sub
loop
bndstx
arpl
jno
add
bound
jecxz
and
movsl
ja
sbb
jae
xchg
inc
shll
push
adc
rclb
mov
testl
cli
fnstsw
clc
pop
xlat
gs
jge
cmp
push
pop
jno
mov
inc
lcall
mov
sbb
call
sbb
push
std
fiaddl
pop
test
cltd
xchg
inc
jge
jb
fstps
push
cltd
pop
pop
div
mov
loop
insl
sbb
call
mov
repz
cmp
arpl
or
xor
and
cld
aaa
mov
clc
add
sti
cwtl
movsb
mov
out
push
lock
mov
pop
pop
xchg
enter
mov
std
pop
sbb
and
xor
aam
push
aas
fldcw
mov
jo
loopne
jmp
loope
pusha
and
idiv
sbb
shlb
dec
sbb
lcall
pop
xchg
sbb
std
dec
cli
clc
mov
sbb
mov
mov
sbb
movsb
xlat
and
xchg
xor
shlb
loopne
push
fdivs
cmpsl
fs
lcall
pop
in
in
js
xchg
pop
inc
fcomp
sbb
adc
mov
bound
mov
sbb
push
xlat
and
fcomps
fwait
push
shlb
sbb
xlat
out
sub
mov
cmpl
cmp
ja
or
jge
test
cmp
cli
pop
out
mov
pop
dec
sbb
imulb
mov
cmp
pop
xchg
xchg
cmpsl
adc
dec
hlt
dec
xlat
popf
fiaddl
ljmp
sbb
loopne
arpl
imul
mull
fidivrs
cli
pop
xchg
icebp
cmp
pop
and
lcall
fisttpll
sbb
ja
inc
orl
jns
jle
xor
adc
jp
fisttps
call
popf
fucomi
sbb
add
cwtl
test
test
and
sbb
pop
cmp
mov
or
sbb
fisubrs
cmp
out
std
jnp
sti
cmp
cld
out
loope
inc
and
pop
xchg
sbb
clc
cwtl
or
jg
lcall
cltd
fucomi
cwtl
dec
mov
inc
popf
dec
push
mov
movsb
add
stos
int
ja
fildll
sbb
jno
dec
inc
pop
jg
mov
inc
test
nop
sbb
push
inc
adc
cmp
cmpl
cmc
lahf
jbe
ja
rorb
pop
mov
adcb
jmp
int3
fdivrl
sub
fwait
lods
lea
inc
mov
pop
cltd
in
lea
mov
sbb
idiv
sbb
adc
fisttpl
cwtl
jmp
lods
inc
mov
movsl
or
stos
pop
fwait
movsb
mov
ret
fwait
pop
pushf
pop
test
inc
sbb
fwait
xchg
loopne
push
mov
push
xlat
and
or
stos
clc
int
xor
movsb
and
xchg
and
int
mov
mov
outsl
or
xor
test
dec
insl
pop
out
sti
fwait
das
lea
mov
sub
inc
das
inc
push
test
inc
pop
sbb
cli
cld
jecxz
cld
movsb
adc
push
int3
call
mov
mov
xchg
lea
sbb
xchg
ds
pop
adc
add
cwtl
clc
sbb
pop
dec
or
xchg
mov
mov
popf
cltd
cmp
lret
ret
lahf
pop
call
fs
pop
sub
rcrl
sbb
mov
xchg
inc
int3
fstps
jnp
jg
sahf
pop
pop
sub
jle
or
loopne
not
out
pop
repnz
adc
int
jns
or
call
frstor
and
icebp
insb
ret
mov
or
or
stos
adc
xchg
push
pop
pop
and
fistpll
mov
fcompl
pop
mov
enter
outsl
dec
and
sbb
sbb
pop
movsl
sbb
xor
sub
ret
into
sbb
jge
jge
inc
push
dec
mov
or
sti
cltd
shll
lds
neg
mov
push
pop
into
pop
aas
lahf
mov
mov
scas
scas
fisubrl
sbb
pop
fs
fsub
test
pop
mov
mov
pop
or
shlb
test
add
fcmovb
push
lea
cld
pushf
pop
insl
out
das
fwait
dec
icebp
fwait
xchg
ljmp
adc
cmp
mov
fiaddl
out
lret
popa
bound
mov
and
mov
mov
and
pop
add
scas
lock
ror
pop
jne
sbb
gs
int3
pop
adc
mov
sbb
mov
andl
les
xchg
ja
lcall
ja
movsb
jmp
xor
outsl
outsl
and
loope
mov
mov
push
icebp
pop
arpl
mov
mov
sub
jne
std
lcall
and
or
dec
lock
xchg
mov
imul
add
cli
into
out
adc
lcall
negl
and
push
add
xchg
mov
int3
popf
mulb
sbb
loope
popf
cmp
sbb
xchg
xchg
mov
lahf
sbb
xchg
mov
xchg
jecxz
fnstsw
sbb
in
and
stc
addl
enter
not
mov
sbb
sub
lcall
in
xchg
pop
fidivrl
lret
xlat
and
fstps
ljmp
sub
xchg
lea
call
aas
shrb
clc
mull
adc
ja
xchg
fs
call
dec
inc
xchg
daa
adc
std
sbb
fisubrs
dec
fsubr
cs
jns
inc
enter
cli
cmpb
mov
ficoml
stos
xchg
inc
test
jo
and
push
jecxz
pop
movsl
pushf
dec
pop
inc
mov
scas
xchg
fiaddl
xchg
std
faddl
fstps
popa
mov
insb
xor
in
dec
cmpsb
push
clc
adc
sbb
pop
sbb
cltd
out
inc
mov
push
cmp
xchg
adc
sbb
and
push
and
mov
les
or
xchg
add
in
das
mov
xchg
movsl
pop
cmp
outsl
dec
mov
fwait
cmp
scas
dec
mov
movsl
xchg
sbb
xor
les
mov
fiaddl
mov
lret
inc
bound
popf
popa
push
push
xchg
popa
push
cmp
jns,pn
rol
cmp
lea
in
jg,pt
mov
mov
or
fwait
shl
loop
xchg
mov
hlt
lahf
or
fstpl
jecxz
pop
add
push
in
pop
mov
inc
sbb
das
jg
and
loop
xlat
out
clc
fildl
icebp
inc
cmp
repz
sbb
loopne
loop
sarb
dec
loop
pop
pop
pop
xchg
mov
pop
jmp
enter
or
and
dec
das
test
sbb
push
loop
dec
jl
mov
scas
lret
inc
fs
push
imul
pop
icebp
xchg
ds
jg
idivb
loop
sbb
and
popf
addr16
cmp
jo
adcb
mov
lea
test
jnp
mov
pusha
sbb
and
cmp
or
pusha
mov
shl
lret
push
jo
and
cmp
cld
adc
lret
testb
arpl
mov
insb
or
cli
ljmp
pusha
mov
enter
mov
test
pop
mov
lret
mov
or
in
lret
ficoml
adcb
lahf
lahf
stos
jno
push
dec
js
fsts
jne
xchg
movsb
dec
sarl
and
test
jo
lret
out
pushf
movsb
xchg
xor
popf
jnp
push
and
cmp
and
or
sbb
and
mov
int
add
pop
jo
xchg
sbbl
mov
adc
aas
fisttpl
test
mov
mov
xor
lea
scas
xlat
aas
out
xor
pop
sbb
or
sbb
dec
aad
sub
shlb
inc
aad
fwait
int3
shl
pop
pop
sbb
mov
or
sub
and
mov
in
xor
enter
out
cld
cmp
aad
and
pop
dec
sub
icebp
int
xorb
aam
xchg
hlt
xchg
jmp
and
xchg
pop
cmpb
fbld
int3
pop
cld
or
sbb
bound
pop
pop
jl
inc
jne
test
pushw
pop
js,pn
push
pop
xchg
sbb
mov
mov
adc
sbb
arpl
cmp
add
fstps
andb
xchg
inc
sbbl
sbb
sti
popa
je
lock
mov
andb
cmpsb
xor
sbb
jnp
lcall
pop
mov
test
fildll
mov
cmp
pop
in
repnz
lcall
dec
pop
popa
and
ficompl
fucomi
lcall
cmp
cltd
and
imull
adc
pop
xor
scas
ficoml
cmp
mov
mov
pop
pop
cmpsb
arpl
out
call
sbbb
mov
outsl
je
cli
jo
pop
adc
pop
sub
test
lahf
push
dec
cmpsb
inc
dec
push
mov
sbb
dec
xchg
mov
pop
adc
bound
in
pushf
mov
fwait
xchg
hlt
xchg
icebp
xlat
inc
add
push
hlt
lods
sarl
cmp
push
sbb
dec
fs
push
dec
in
sbb
pop
hlt
std
out
and
add
adc
pop
rol
mov
xor
pop
cli
xchg
cmp
fstpl
imul
pop
imul
push
rcrl
sahf
imul
pop
xchg
mov
jg
xchg
fsubs
pop
mov
bound
pop
pop
push
sbb
or
dec
pop
rorb
enter
mov
jns
sbb
rcrl
jle
pop
lret
cwtl
fwait
push
lret
cmp
int3
jnp
movsl
loopne
push
movsb
jnp
dec
or
sub
mov
mov
sub
fisubl
mov
movsb
test
mov
or
push
mov
jecxz
lcall
inc
jne
aas
sti
jecxz
fisttpl
jmp
outsl
sti
stos
popa
mov
cmp
cmpb
mov
xchg
fucom
repz
bound
xchg
sbb
mov
mov
dec
lret
push
sahf
dec
idiv
inc
mov
mov
arpl
xlat
sbb
mov
pop
fistl
test
mov
xabort
or
xchg
add
gs
pop
dec
adc
mov
and
mov
pop
dec
mov
add
and
mov
lea
popa
fcompl
adc
pop
adc
in
jnp
dec
mov
out
popf
fwait
jecxz
icebp
addl
xchg
jne
adc
lea
mov
fistpll
es
test
cld
cmp
fneni(8087
dec
jge
stos
sbb
daa
pop
arpl
xor
iret
pop
jl
test
cmp
clc
loope
rcrl
das
mov
movsl
sbb
xlat
movsb
fiadds
ret
sub
jne
mov
mov
xchg
out
mov
inc
lcall
cli
pusha
lock
and
xchg
aas
gs
imul
jo
in
or
cmp
mov
pop
xchg
insl
and
mov
pop
lock
gs
popf
push
jl
push
int3
dec
stos
or
add
loopne
sbb
leave
shr
mov
movsl
cli
xchg
xchg
int
jae
push
pop
in
bound
adc
je
insl
leave
push
mul
mov
and
sbb
std
push
int3
lret
enter
mov
add
cs
xchg
ds
fs
sbb
mov
cli
push
cs
popa
sub
sbb
jl
outsb
aaa
jge,pt
pop
repz
add
sub
or
adc
pop
sbb
xchg
data16
sbb
mov
loop
and
inc
jne
test
xchg
jecxz
pop
and
enter
repz
mov
and
pop
insl
xchg
or
fsub
insb
pop
enter
mov
jge
sub
mov
jg
or
pop
adc
push
sahf
mov
pop
fists
pop
xlat
out
pushf
mov
lcall
lea
insb
scas
push
jns
sbb
mov
and
aas
mov
sahf
shll
sbb
pop
adc
xlat
xchg
dec
lcall
fisubl
xchg
mov
call
fneni(8087
arpl
push
lcall
cs
dec
aas
outsl
dec
int
fbld
mov
outsb
aas
notl
or
fcmove
mov
adc
mov
ret
lret
shll
mov
fdivr
fisubrl
sbb
pop
dec
sti
adc
bound
ret
jne
sbb
or
lea
fcmove
lcall
and
ljmp
push
enter
xchg
xlat
inc
movsl
jo
orb
xor
add
ret
jo
loope
xchg
dec
or
cld
push
scas
adc
mov
fs
jnp
mov
mov
and
lcall
and
xchg
jbe
xchg
push
data16
scas
mov
stc
pop
mov
lret
inc
pushf
cmp
mov
data16
mov
sbb
xor
adc
stos
sbb
sbb
test
pop
xor
cltd
pop
mov
or
push
mov
pop
pusha
js
mov
pop
in
xlat
inc
insl
xchg
fstpl
add
loop
pop
fstl
inc
mov
call
and
dec
loope
inc
push
push
outsb
ret
push
lea
fs
xchg
std
xchg
sti
cltd
faddl
rcrb
mov
shrb
sub
mov
xchg
xor
jg
and
push
jg
jecxz
mov
fwait
mov
lret
mov
mov
je
sahf
data16
sub
lret
fwait
sub
sub
shl
push
or
or
inc
out
push
fimuls
fdivrl
push
mov
adc
arpl
loop
outsl
out
or
mov
pusha
xchg
call
mov
lods
xlat
mov
sbb
addr16
sbb
sub
add
sub
pop
sub
mov
pop
repnz
pop
xchg
int
leave
pop
mov
cld
xchg
movsb
fsub
out
test
scas
fildl
dec
je
push
test
sarl
inc
rcll
cmpsb
adc
jg,pt
aaa
test
mov
xor
mov
add
ja
and
loopne
jnp
xchg
lcall
iret
add
pop
insl
jb
out
cmp
inc
insl
sahf
pop
dec
popa
mov
mov
das
fs
pop
mov
fidivrl
or
int3
adc
jge
add
pusha
pushf
jle
movsb
mov
jns
sub
mov
pop
fistps
fwait
arpl
pop
sbb
subb
or
aad
lret
sbb
xchg
mov
pop
ret
subb
dec
fwait
mov
scas
pushf
jp
push
pop
aad
xchg
or
and
mov
push
fdivl
push
pop
jmp
mov
adc
ss
jle
lahf
movsb
jmp
cli
inc
dec
xchg
mov
jge
loop
and
setbe
lret
lret
mov
mov
jo
add
fwait
mov
xor
faddl
mov
mov
aad
xchg
test
sahf
or
dec
out
fdivs
loop
mov
mov
inc
std
pop
add
xchg
in
pop
and
sahf
and
xchg
fisubl
out
push
mov
and
pop
pop
aad
fnstcw
mov
insb
div
lea
orl
inc
aas
inc
adc
adc
movsb
mov
fwait
lret
sbb
sub
jl
sahf
pop
adcl
fs
ja
and
inc
js
xlat
clc
stc
xchg
out
cmc
xchg
ret
pop
sahf
or
outsl
in
icebp
out
mov
jecxz
push
fsts
or
dec
xchg
icebp
shlb
mov
fnstsw
je
fxch
sbb
into
xchg
filds
jg
sbb
adc
stos
dec
xor
bt
ror
jmp
mov
mov
jle
or
sub
js
sub
in
ja
dec
jo
in
mov
clc
nop
add
pop
clc
out
cmp
lret
jmp
es
or
sbbl
pop
outsl
dec
xor
xor
pushf
ret
addr16
mov
jno
movsb
adc
mul
mov
pop
outsl
ret
pop
ds
lds
xchg
mov
push
pop
aas
stc
add
ss
xorl
pop
rcrl
pop
cmpsb
icebp
pop
insl
fdivrs
int
pushf
lea
je
adc
or
bt
add
add
test
shl
mov
push
add
clc
cmc
jmp
lea
je
pusha
pusha
pushl
mov
movb
call
test
pusha
clc
cmp
sub
mov
cmc
cmp
mov
pusha
call
and
sbb
sub
cld
movsb
dec
pop
xchg
cmp
jb
in
pop
push
shlb
add
inc
cs
pop
cmp
or
mov
clc
lcall
sub
xchg
and
mov
dec
jbe
mov
sub
call
rolb
out
xchg
push
mov
mov
mov
std
scas
pusha
and
inc
jae
sbb
addr16
mov
mov
sbb
dec
jns
sbb
lret
out
pop
push
push
add
xorb
jbe
push
xor
xor
and
sbb
add
xor
mov
sbb
adcb
rolb
mov
mov
add
imul
sub
push
mov
and
aad
and
xor
cs
ret
loope
jp
add
lret
xchg
push
in
jae
int3
aam
enter
in
es
xlat
test
cmp
mov
mov
call
push
test
xchg
adc
cltd
and
push
xlat
sahf
aad
ja
loope
pushf
or
repz
pop
aas
sti
pushf
je
loop
scas
jmp
adc
xchg
aam
mov
call
rolb
mov
int3
mov
adc
pop
mov
sti
push
xchg
fcmovb
shrl
xor
and
push
push
orl
jg
rolb
lea
jl
mov
jae
es
sbb
xor
push
insb
lods
lahf
sub
nop
mov
negb
jns
add
adc
scas
sahf
leave
mov
shll
dec
sub
aas
sti
cmpsb
cli
pop
mov
cmp
setns
sub
rolb
subb
push
jmp
cmpsl
xchg
rcl
mov
fld
dec
xor
push
cld
imul
int
mov
clc
rolb
cmpl
cltd
daa
mov
push
xchg
ret
hlt
pop
hlt
loope
pop
movsb
lock
and
or
mov
cmp
das
mov
xchg
clc
sbb
cmc
add
orb
in
pop
aas
cli
aaa
cltd
cli
fs
pushl
add
lea
xlat
ljmp
fdivr
rolb
pushf
push
jmp
flds
aas
cli
dec
sbb
pushl
add
mov
ror
sub
pop
inc
clc
rolb
sub
or
jmp
cmc
fdiv
hlt
mov
hlt
lea
je
in
mov
outsl
inc
in
stos
inc
xchg
loop
imul
cmp
fisubrs
add
inc
rclb
mov
testb
or
sbb
add
aas
cli
lods
subps
mov
sbb
test
clc
rolb
add
bt
call
repnz
movb
jmp
ss
mov
pusha
sarb
pop
out
push
orl
sub
test
and
sarl
ja
and
xchg
insb
xor
and
inc
mov
sub
xor
mov
scas
sbb
fcmovb
cmp
jo
std
jge
lds
shlb
stc
inc
cmpsl
clc
rolb
sti
popf
or
inc
push
bound
stc
aad
test
fldenv
mov
mov
das
pushf
int3
loopne
dec
cmp
scas
scas
pop
aas
cmp
cmp
stos
repz
iret
mov
sbb
lcall
repnz
or
sub
xor
push
sbb
jge
rolb
setae
inc
and
xchg
sti
call
leave
js
lock
or
sbb
orb
test
decb
jl
hlt
mov
out
adc
clc
xchg
stc
and
in
dec
iret
and
jae
mov
je
jl
xchg
aad
xchg
pop
aas
cld
lds
and
mov
das
adc
xchg
jo
into
jp
aad
scas
popa
clc
rolb
addb
mov
dec
neg
lea
movsbw
bsf
mov
cmp
test
cmp
mov
add
stc
mov
mov
call
pushf
movl
mov
movl
push
lea
jmp
jne
sarl
js
pop
or
movsl
push
xchg
sbb
xchg
flds
jge
push
addl
jb
push
jne
jle
mov
mov
fistpl
addl
adc
lea
andl
scas
mov
ror
aaa
pop
lods
jo
clc
addr16
sbbb
jae
sub
das
jae
out
ja
push
push
or
in
pop
sti
clc
rolb
lea
lcall
add
pusha
call
out
orl
sbb
fld
lret
mov
xchg
jg
sub
out
xchg
je
xchg
mov
dec
mov
les
stos
shll
in
or
xor
add
or
cmp
insl
and
xor
je
hlt
push
mov
fistpll
sub
or
addr16
cs
add
mov
xchg
dec
je
xchg
in
pop
sub
xchg
shl
aas
lcall
dec
stos
xorl
in
adcl
sbb
clc
rolb
sub
enter
pop
jae
add
aad
add
jbe
dec
repz
and
jge
cmp
xchg
clc
lcall
mov
scas
mov
cmp
pop
add
mov
xchg
or
pop
and
gs
pop
sbbb
push
ffreep
mov
icebp
xor
adc
fadds
cwtl
int3
ljmp
mov
pop
mov
push
int3
mov
push
add
pop
or
cmc
xor
or
imul
jmp
pop
dec
out
insl
lods
dec
xchg
mov
clc
rolb
sub
pusha
call
call
int3
popf
call
mov
push
sahf
pop
insb
cmc
xor
sub
inc
stos
xor
push
mov
cmp
mov
sub
pop
popw
cmp
add
cmp
je
mov
insl
dec
jmp
pop
mov
add
ljmp
enter
add
sub
adc
add
inc
and
pop
aam
and
jmp
lea
jne
jmp
iret
pop
add
sub
cs
subl
cli
push
divb
mov
fistl
sbb
test
js
cltd
movb
in
ret
clc
rorb
dec
mov
adc
int3
stos
das
mov
cwtl
lea
lcall
scas
cmp
inc
aaa
jmp
dec
cli
lcall
in
pop
push
mov
jmp
cmpsl
adc
lcall
clc
aas
add
les
into
ret
adc
lcall
sar
icebp
push
mov
mov
gs
and
adc
aas
add
xchg
pop
push
sbbb
push
popf
mov
sar
and
inc
rolb
int
arpl
pop
int
leave
pop
stc
sar
add
xor
fisubrs
hlt
mov
mov
fwait
and
stc
jbe
out
pop
out
data16
imul
pop
aas
add
loope
or
dec
dec
out
dec
push
cli
push
sbb
jp
sar
arpl
sub
clc
repnz
push
call
sub
inc
out
das
stos
or
or
push
test
cli
and
hlt
inc
dec
sbb
lcall
sub
jne
jno
xor
xor
ret
sub
mov
cli
lcall
or
dec
push
testl
add
xlat
bound
fildll
sub
push
movsb
in
or
jbe
cmp
jle
push
sbb
mov
sbb
pop
aas
add
cmp
mov
jo
xor
push
and
pop
dec
lods
clc
sar
and
fs
ja
pusha
cmc
imul
mov
add
pushl
pusha
lea
jmp
dec
push
pushf
jmp
movb
lea
jne
sar
mov
rcr
neg
clc
sub
push
not
lea
test
clc
sub
bt
stc
stc
pushl
popl
clc
cmp
pusha
call
jmp
push
pusha
lea
jne
xor
stc
xor
shrd
bts
mov
and
call
cmp
add
call
call
xchg
lea
movsbw
movzwl
movsbl
jmp
pushf
mov
mov
call
movl
push
jmp
imul
loopne
pop
lcall
push
pop
movsb
int3
xchg
mov
mov
adc
int
push
ljmp
push
cld
mov
mov
shlb
icebp
test
pop
xor
push
bound
orl
aas
add
jp
arpl
mov
sbbl
mov
rcr
scas
pushf
enter
std
loope
lock
lret
repnz
orl
aad
lret
or
and
lcall
enter
fs
pop
les
pop
xchg
dec
out
loopne
lret
call
in
pop
cs
xchg
dec
xchg
jo
scas
out
add
push
rcrb
sub
or
cmp
xchg
lods
sub
adc
test
add
cmp
cltd
inc
nop
sbb
fisubrs
push
mov
mov
out
lahf
sub
std
dec
addb
jmp
push
lea
jae
jmp
lea
pusha
pop
mov
jmp
call
dec
out
add
subb
and
xchg
sahf
test
sbb
jne
add
test
jno
mov
xchg
xchg
sbb
loop
andl
hlt
add
leave
xchg
leave
mov
inc
xor
xor
push
das
mov
pop
loope
xor
mov
pop
enter
push
pop
jb
stos
cmp
loopne
pop
dec
sbb
lret
call
mov
jmp
add
dec
outsl
arpl
inc
jb
add
pop
std
std
xchg
jo
test
jb
sub
ror
dec
daa
pusha
adc
pop
mov
push
addb
sbb
inc
mov
jge
and
pop
push
lret
add
in
shrl
adc
test
xchg
inc
loope
jp
add
in
xchg
push
imulb
int3
sbb
dec
ror
jmp
pop
fadds
jmp
push
lea
ja
sar
sub
jmp
call
pushl
dec
jmp
lea
ja
call
bt
cmp
call
mov
mov
lea
jmp
pushf
movw
mov
lea
call
push
sub
mov
jmp
push
mov
pushf
mov
push
pushf
lea
jmp
inc
inc
inc
not
setle
call
cli
jmp
mov
repnz
lret
adc
mov
jnp
outsb
sbb
jl
xlat
aaa
leave
jne
and
jb
jnp
and
ss
jp
mov
addr16
pop
cmp
xlat
push
mov
andl
mov
sbbl
inc
hlt
insl
or
mov
xchg
jmp
xor
and
sahf
stos
cwtl
sub
stos
dec
sub
in
xchg
sbb
inc
inc
je
mov
or
fldl
dec
xlat
and
sub
repz
outsl
outsb
or
lcall
jno
jb
inc
xchg
sahf
test
pusha
roll
cli
and
popa
lods
mov
jnp
pop
aas
pop
pop
call
sti
dec
mov
push
pop
adc
test
arpl
sar
xor
adc
rol
add
test
push
lea
je
clc
call
pusha
cmp
movb
lea
jb
jmp
bt
or
call
movl
push
pushl
mov
lea
jmp
call
pushf
jmp
mov
pusha
clc
cmp
push
movb
jmp
leave
mov
mov
adc
inc
push
push
and
mov
notb
xchg
imul
or
stos
sub
out
cmp
test
push
lods
testl
in
jne
push
sub
les
xlat
mov
mov
pop
or
inc
iret
sbb
jbe
out
mov
aas
push
sub
push
stos
loopne
je
aad
cmp
test
lret
sar
cmp
xor
negb
scas
pop
jno
test
pop
rcrl
mov
xor
fucomip
bnd
pop
cmp
adc
daa
ja
nop
fcomps
clc
sahf
sub
enter
int3
andl
push
ret
outsl
sbb
push
out
jle
sti
xor
xor
sar
fwait
pop
cmpb
lea
jge
pushf
movb
lea
jne
xor
stc
mov
bt
push
add
push
movzwl
test
neg
or
mov
jmp
pushf
lea
call
pusha
jmp
pushf
pushl
popl
pushf
movl
pushl
ret
xchg
loopne
xchg
push
add
adcb
push
stc
add
xchg
orl
leave
iret
push
pop
jnp
jne
push
jb
pop
js
stc
adcl
or
iret
xchg
xorb
adc
xor
or
call
mov
shlb
clc
xor
bound
xor
inc
lret
insb
sub
insb
sbb
jae
add
flds
inc
insb
fldcw
add
dec
int3
and
ficomps
pop
sub
add
inc
or
sub
dec
rcrl
mov
movsl
ja
pop
inc
or
pop
aas
or
inc
test
adc
sbb
imul
push
cmp
test
sub
cmp
lea
mov
loop
aas
or
sbb
mov
out
cmc
clc
shl
outsl
lahf
push
sti
addr16
and
xor
cli
movsl
insl
decl
jmp
rclb
push
mov
jno
les
and
push
gs
xchg
push
call
sbb
data16
dec
xchg
mov
sbb
cmp
dec
xchg
pop
push
xchg
hlt
pop
fld
mov
cmp
pushf
sub
stc
inc
pop
cmp
insb
stc
add
xchg
dec
clc
sbb
ds
xchg
jne
mov
jo
js
repz
or
xor
insl
mov
ficompl
cltd
ret
fwait
dec
mov
or
std
testb
or
xor
push
int
push
push
pop
std
mov
pop
xchg
shr
jp
shl
adc
xchg
xchg
popf
add
sti
dec
repnz
fs
inc
outsb
xor
and
clc
rcrb
adc
jo
aam
mov
popf
pop
mov
sti
and
and
or
call
mov
pop
aas
cmpsb
xchg
sub
sbb
cmpsb
xchg
mov
imul
mov
jmp
sub
aam
daa
xor
stos
rcrb
xchg
mov
xchg
add
pop
add
and
push
jge
jno
push
pop
es
mov
ret
aad
sbb
testl
push
inc
out
stc
inc
jae
mov
test
ret
cli
xor
add
mov
icebp
sub
push
mov
in
push
aad
pop
iret
pop
dec
dec
stc
and
mov
pop
sub
movsb
adc
into
jp
rcll
mov
stos
mov
out
mov
mov
dec
cli
stos
clc
shl
sbb
or
mov
movsl
je
or
cld
stos
fadds
aas
or
in
jle
out
gs
std
mov
les
enter
rcrb
clc
shl
arpl
mov
lahf
in
ja
sbb
popa
fisttpl
mov
xor
loopne
pop
call
pop
aas
or
or
pushl
hlt
ljmp
ret
dec
aas
dec
lahf
clc
shl
push
pushf
lea
je
pusha
mov
jmp
not
pushf
lea
mov
pushf
call
lea
jne
call
call
pusha
mov
lea
jno
mov
not
push
pop
pop
pusha
pusha
pushl
pushf
pushl
ret
jmp
loopne
xlat
and
add
sub
pushf
cmpsb
rcrl
mov
pop
xor
sbb
jecxz
int
cmp
jle
hlt
pop
ljmp
loop
sbb
mov
les
call
cmc
sbb
iret
scas
jge
xchg
in
mov
out
mov
xor
xor
adc
lahf
fwait
hlt
add
mov
push
pop
pop
rolb
lret
lods
or
imul
ret
lds
dec
jbe
in
cmp
inc
mov
or
fiaddl
pop
imul
shll
shl
push
xchg
cmp
push
jmp
nop
incl
movsl
push
sbb
xchg
shll
jne
dec
jno
add
testl
call
xchg
shrb
fildl
jno
out
xchg
sbb
std
inc
or
xchg
addr16
jne
sbb
or
popa
pop
test
decl
sub
add
movsl
loopne
lock
inc
stc
ljmp
stos
cmp
sbb
pop
test
jne
pop
add
daa
jbe
adc
dec
mov
push
and
adc
mov
xorl
rcr
ljmp
mov
shl
pop
rolb
mov
ror
bt
mov
pusha
call
lea
jb
pushf
inc
movb
pusha
push
pushl
lea
jmp
lret
mov
jmp
sbb
mov
mov
jne
and
jno
or
jl
lds
xchg
jle
mov
in
fs
clc
mov
mov
jmp
cld
int
stos
je
push
popl
fwait
inc
sub
test
cmpb
sub
adc
cs
mov
aam
and
loop
cltd
jp
lock
sbb
xchg
add
jo
mov
dec
push
add
clc
shl
hlt
fildl
ds
bt
xchg
btr
mov
pushf
pushf
call
mov
movsbw
pusha
mov
call
call
push
jmp
push
xor
call
lea
jae
push
pushf
cmp
test
cmp
pushf
push
mov
lea
ja
dec
inc
inc
jmp
shll
inc
outsb
pop
mov
mov
or
xchg
in
dec
add
cmp
mov
imul
mov
lahf
decb
cmc
inc
xor
rcrb
pop
lret
xchg
es
clc
shl
addr16
popa
adc
jmp
sbb
movsb
xor
dec
pop
aas
setp
jb
lret
decb
cmc
sbb
dec
pop
jnp
jl
cmc
outsl
xlat
inc
mov
shl
mov
lock
imul
pushf
jmp
arpl
add
out
or
push
jnp
mov
aas
push
leave
and
pop
sti
xor
push
enter
push
popa
in
fmull
cli
test
push
jns
clc
repnz
jmp
pusha
pusha
pushf
dec
call
mov
pushf
push
pushl
pushl
ret
bt
bt
or
pushf
lea
je
clc
cmp
pushf
push
pusha
pushf
pushl
ret
bt
imul
jmp
lea
ja
push
lea
jmp
popf
leave
xor
jmp
xchg
lahf
imul
popa
sarl
paddusw
pop
or
mov
add
mov
aas
push
fsubp
or
jb
xor
in
inc
mov
fs
xor
clc
shl
xor
add
test
push
stc
call
call
pusha
cmp
pushl
popl
pushl
bt
pushf
cmp
pushl
push
jmp
sbb
movb
cmc
adcl
out
jnp
mov
repz
lret
mov
in
test
dec
addb
mov
push
jns
jns
mov
xor
mov
pop
xor
sub
movsl
xor
fdivl
sub
or
divb
dec
lea
lds
and
xlat
cli
call
arpl
or
adc
clc
shr
scas
xchg
js
xor
rclb
inc
cmpsl
nop
cmp
out
mov
inc
sarl
sbb
daa
cmp
push
inc
mov
pushf
mul
ret
xchg
loope
mov
xor
pop
stos
xchg
sti
mov
add
fildll
pop
aad
jp,pn
mov
scas
dec
clc
shr
lea
mov
cmp
cmpb
push
push
push
lea
jne
seta
movsbl
neg
xor
adc
add
mov
ror
sar
add
call
pushl
popl
pushf
pushl
ret
setnp
cmc
mov
jmp
cmp
pushf
lea
ja
pusha
sar
add
lea
cmc
mov
dec
mov
pusha
mov
cmp
jmp
mov
jmp
in
mov
xor
insb
aaa
mov
jo
mov
xchg
int
cmp
shll
insl
or
ljmp
pop
cmp
adc
mov
hlt
loope
pop
sbb
pushf
jbe
mov
inc
mov
or
mov
push
shll
adc
repz
inc
dec
movb
mov
mov
adc
fs
jb
jo
push
cmp
cmp
pushf
lea
jae
and
sets
cmc
mov
bswap
jmp
pushf
stc
pushf
jmp
test
test
bt
sub
bt
jmp
setne
cwtl
pusha
call
jg
arpl
stos
push
scas
jns
in
xlat
bound
sub
sbb
pop
dec
mull
aaa
pop
mov
ret
sub
iret
sarb
inc
dec
xchg
pop
in
movsl
or
aas
inc
push
mov
outsl
push
imul
mov
sbb
jae
bt
cmp
call
stc
or
call
push
mov
jmp
push
rep
call
lcall
mov
les
mov
lock
lea
jae
bsr
lea
inc
pushf
mov
movzbw
bsr
mov
shl
mov
cmp
jmp
xchg
mov
pusha
pushf
mov
pop
pushf
lahf
lea
jmp
call
add
scas
lahf
sbb
add
add
add
add
add
add
mov
sbb
mov
add
add
xchg
xchg
sbb
lock
sarl
addl
repnz
stos
fsubrl
add
notb
clc
jns
or
adc
dec
add
sub
mov
inc
push
xor
mov
iret
adc
aaa
fcomps
ja
and
or
orl
push
adc
inc
sti
out
ficoms
xchg
dec
pop
ret
pushf
mov
pop
popf
outsb
ficompl
mov
inc
test
aad
adc
adc
lods
out
daa
into
or
push
mov
inc
sbb
outsb
stc
call
aas
loop
dec
pop
fldenv
out
mov
dec
or
testl
xchg
test
icebp
out
out
jne
stc
cltd
adc
dec
js
enter
es
cmp
cmp
outsb
mov
jo
xchg
or
mov
fcmovnbe
inc
cmp
shll
js
push
shl
aam
cmp
adc
jno
mov
xor
xorl
ret
mov
leave
cltd
jae
fs
mov
jbe
in
enter
sub
pop
adc
and
pop
pushf
dec
adc
xor
ret
jae
mov
inc
jecxz
gs
in
iret
dec
fs
cmp
aaa
icebp
push
iret
call
es
popa
test
test
test
pop
aam
adc
mov
pop
push
call
mov
or
mov
in
xor
mov
daa
jmp
popf
mov
stos
rcrl
sub
cmc
aad
dec
mov
jns
cmp
jae
push
xorb
adcl
xchg
mov
ja
adc
inc
and
push
and
cmpsl
enter
cltd
cmp
ss
mov
lods
xor
push
iret
jo
xchg
push
imul
mov
shrl
outsl
adc
call
mov
dec
adc
arpl
fstps
xchg
mov
fwait
popf
lods
push
cmpl
inc
call
push
outsl
popa
xor
adc
cmp
fbld
jbe
mov
jge
and
mov
push
mov
insl
int3
popa
pop
and
push
inc
sahf
mov
pop
mov
inc
fwait
push
pop
test
rcr
sub
cmc
aas
push
pop
fidivl
loope
and
cld
das
jns
cs
dec
mov
push
out
cwtl
or
in
subl
test
mov
pop
test
push
xchg
scas
pop
xchg
outsl
xor
and
sub
dec
lds
pop
mov
ljmp
xchg
fimull
mov
movsl
mov
call
xor
ljmp
push
mov
sahf
mov
pushf
in
pushf
xchg
xor
sub
std
inc
fsts
loopne
cmp
ret
xchg
jge
ljmp
daa
pop
cmpsb
out
idivl
pop
jmp
inc
cld
jl
inc
ds
sahf
add
inc
push
enter
insb
pushf
shrb
loop
push
fwait
and
cmp
mov
and
adc
in
popf
xchg
mov
out
pop
xor
pop
cmp
sub
ljmp
and
rcll
repnz
xlat
xchg
add
mov
shl
mov
lods
mov
adc
mov
aad
push
fiadds
in
orl
xchg
jp
in
and
xor
std
jmp
mov
imul
dec
pop
push
xchg
and
push
cmpsb
cmp
fists
arpl
fdivp
aaa
pop
clc
adc
or
inc
cmp
push
xchg
inc
sbb
lods
adc
cwtl
push
adc
jbe
mov
adc
jecxz
xlat
sub
or
push
mov
push
call
sti
lcall
mov
adc
jg
xchg
lock
subb
or
cld
fstl
pop
outsb
xchg
cwtl
movsl
nop
cwtl
rcr
cmp
in
shrb
jo
sbb
insb
repnz
sbb
imul
xchg
inc
arpl
sub
stos
and
or
into
jae
cwtl
sub
and
stos
jne
call
loope
cld
or
pop
pop
adc
cwtl
push
iret
push
pop
xor
call
xor
or
lret
testb
ja
dec
shlb
xor
push
insb
test
in
cli
xor
xlat
cmp
lret
xor
cmp
jl
cmpsl
subl
test
dec
ljmp
jge
scas
dec
das
cmpl
ss
sub
je
pop
add
pusha
dec
negb
ret
daa
test
test
js
xor
inc
push
je
pop
mov
mov
outsb
inc
ja
push
or
call
jmp
lea
mov
nop
push
cmpsl
push
out
pop
xlat
std
add
popa
adc
push
inc
repz
mov
pusha
fwait
xor
add
mov
outsb
mov
mov
mov
jmp
test
out
hlt
hlt
movsl
lcall
pop
inc
sahf
inc
fisttpl
and
addr16
lds
orl
inc
lahf
xor
sti
mov
push
or
xor
outsb
sub
arpl
mov
mov
cmpsb
fsubr
call
lods
rcr
add
es
mov
pop
imul
fmuls
sub
scas
mov
scas
jbe
or
movsb
jbe
stc
push
popa
testb
popa
pushf
mov
std
outsl
push
imul
popa
xchg
mov
out
lahf
adc
mov
pop
ja
data16
inc
ja,pt
mov
repz
push
mov
sbb
popf
inc
mov
xchg
ja
es
scas
inc
rolb
addl
xlat
rol
and
imul
jle
xchg
test
ret
dec
repz
in
jg
sbb
mov
pop
pusha
sub
or
es
and
sub
cmpsl
xlat
xor
fsts
mov
add
shr
sub
cmp
xor
push
push
fdivrp
test
rcl
inc
sbb
rolb
mov
mov
inc
adc
andps
fwait
sarl
sbb
or
push
and
xchg
and
mulb
clc
jbe
out
pop
fistps
outsl
jns
test
or
lods
or
test
lock
aam
pop
outsb
inc
mov
push
push
rcl
loopne
lcall
xchg
test
inc
mov
test
inc
xor
jns
jo
or
cmp
ret
pushf
mov
pop
cs
pop
js
jle
jnp
xor
cwtl
add
or
icebp
mov
ret
xlat
mov
call
xor
mov
inc
fidivrs
xlat
das
sub
push
repz
push
xor
cmp
inc
lods
lcall
loope
xlat
mov
mov
jg
jne
shll
dec
repz
addr16
pop
inc
sub
add
movsb
fldcw
or
push
cmp
test
sub
stos
daa
mov
movsl
jne
lea
daa
jno
adc
adc
mov
sahf
sbb
xor
pop
data16
jns
mov
mov
pop
xchg
dec
ja
inc
and
inc
mov
clc
cmp
loop
adc
test
or
add
push
and
xchg
mov
stos
pop
cmp
inc
jmp
jo
dec
inc
and
or
ljmp
sbb
xchg
enter
imul
and
adc
mov
mov
fcompl
adc
ret
push
aam
xor
lds
into
cmp
xor
xchg
dec
push
inc
fiadds
sub
test
pop
arpl
loope
movsb
push
movsb
inc
xchg
pushf
push
cmp
lahf
pop
sbb
andb
add
stc
and
movsb
xchg
ror
enter
popf
test
cmp
pop
jne
lock
push
aas
fcomi
aam
dec
out
or
shlb
in
or
dec
sbb
sbb
sbb
or
dec
and
add
shrl
push
adc
out
and
fs
pop
pop
cmpsl
fadd
insl
jle
xchg
jnp
lea
lcall
out
cmp
mov
jg
cmpl
pushf
int3
push
das
imull
cbtw
push
push
xorl
mov
inc
mov
cmp
sti
or
xor
out
negl
mov
shrb
cmp
cmp
psubusw
mov
scas
arpl
sub
je
clc
enter
movsl
lcall
test
adc
or
sbb
in
fistpll
cmpsb
cmp
xor
hlt
mov
test
jmp
jge
test
mov
hlt
mov
sbb
push
movsl
dec
xchg
inc
xlat
call
ss
inc
aam
and
test
int3
xor
jle
sbb
ret
mov
sbb
sub
mov
jge
test
and
fisttpll
jae
xor
mov
push
xor
adc
xchg
and
fcoms
push
sub
in
fldt
fidivl
xor
push
sbb
push
inc
xchg
mov
fsubl
lahf
filds
push
jbe
in
jp
arpl
sub
fstps
and
out
xchg
mov
jno
push
jne
sbb
daa
adc
imul
cmp
sbb
or
nop
fstl
pop
jb
std
sbb
daa
leave
fldcw
pop
jno
pushf
mov
in
xor
out
stc
fs
push
xchg
pop
ds
sub
push
inc
dec
lods
cmp
roll
jnp
inc
sub
fwait
push
and
fisttpll
jbe
xor
ja
lock
lock
cwtl
imul
add
cltd
mov
cwtl
cmpsb
push
stc
sub
cmp
push
fmuls
jge
xchg
mov
pop
mov
mov
cmc
mov
mov
mov
mov
dec
loopne
push
lea
inc
adc
ja
cmpsl
jne
xor
and
xlat
out
cmpsl
aad
shlb
and
jecxz
out
adc
fiaddl
fstp
mov
jge
adc
jns
neg
ds
xchg
nop
and
cmc
inc
into
or
jne
mov
xor
insb
loop
xor
sub
je
cmp
and
mov
adc
int
dec
push
sahf
mov
pop
popf
inc
xchg
and
outsl
xchg
stc
or
negl
js
pop
sub
iret
pop
and
sbb
add
inc
stos
or
pop
repz
cmc
pop
movsb
adcl
sub
mov
push
sbb
inc
and
inc
jno
aas
shl
xchg
jns
jbe
sub
sub
mov
fidivrs
inc
es
add
add
add
out
call
fs
je
cmc
stc
call
pusha
lea
jae
push
lea
jne
call
xlat
xchg
movsb
cli
and
push
mov
outsb
jne
dec
aam
loope
dec
clc
rcr
movsb
pop
jb
jle
pop
pop
add
lret
jns
mov
dec
inc
mov
add
lret
jno
inc
in
aas
and
popa
cli
scas
cld
cld
jge
mov
stc
out
aas
adc
lods
add
push
lock
mov
lods
loope
push
xor
add
cmp
dec
or
aas
and
cmc
pop
fadds
into
into
push
sti
enter
add
rcr
in
pushf
bt
stc
add
pushl
push
lea
jmp
lds
pushf
ljmp
push
lahf
es
lcall
loop
sti
mov
clc
rcr
jecxz
in
lods
sub
push
lret
cmp
cwtl
movsb
xchg
frstor
inc
mov
sahf
jb
insb
ss
pop
aas
and
dec
add
mov
ljmp
loope
mov
push
pop
movsl
mov
xor
imul
jmp
insb
lea
sub
setbe
xchg
pop
sub
inc
enter
jb
gs
arpl
fildll
das
mov
lahf
pop
aas
and
or
int
nop
push
pop
mov
cmp
fists
xorb
jmp
xor
aas
and
aad
mov
mov
sarl
jb
dec
push
sub
out
mov
rcr
lds
pop
dec
xor
aas
scas
cltd
addr16
add
loope
cmpsb
xor
jne
push
inc
dec
cli
dec
clc
rcr
jnp
insb
mov
idiv
movsl
pop
xor
pushf
push
xchg
stc
push
inc
and
pop
aas
and
ss
push
mov
add
xchg
pop
xchg
rcr
pop
les
mov
xchg
cmpsb
xchg
loop
mov
pop
mov
pusha
es
icebp
xchg
fwait
daa
roll
shl
inc
clc
rcr
jl
adc
jmp
lock
lds
ja
call
mov
pop
cmp
add
rcrl
fstp
xor
sub
movsl
or
sbb
cmpsb
jg
jle
les
pop
ljmp
stos
sbb
icebp
push
rcl
cmpsb
mov
mov
push
xor
idivl
pushl
test
dec
mov
sbb
dec
cmp
push
mov
sahf
mov
std
sbbl
and
ja
jmp
xor
out
cmp
dec
push
loope
cmp
jbe
inc
sti
call
sbb
push
sub
xor
sbb
data16
push
pop
gs
insb
in
mov
jb
ja
adc
stos
mov
pop
aas
and
int3
push
in
cs
out
js
xchg
lds
sub
test
mov
rcr
rcll
xor
pushf
bswap
movb
movzbw
mov
pusha
lahf
cwtl
call
cmp
jmp
imul
aas
pushf
movl
inc
lea
push
call
ds
sbb
test
push
pop
adc
dec
adc
ret
mov
push
and
inc
xbegin
xor
adc
stos
js
subb
or
adc
xor
clc
pop
enter
xchg
pop
xor
xor
addb
dec
pop
jb
shl
push
pop
add
xchg
into
pop
lret
mov
jbe
inc
sbb
call
push
xchg
shl
or
push
popa
insl
sti
dec
in
pop
aas
and
mov
mull
lock
mov
cmp
pandn
cli
pop
clc
rcr
push
xlat
pusha
lea
jne
bt
das
push
sub
and
pushf
btr
bsr
mov
sub
test
mov
call
lea
jb
call
lea
ja
pusha
call
xchg
lea
mov
lea
jae
lea
pop
push
bswap
bswap
movsbw
mov
pushf
pushl
ret
call
push
lea
jb
test
pushf
cmp
jmp
add
dec
gs
popa
addr16
outsl
js
add
or
call
idivl
setb
push
xor
dec
mov
xchg
lcall
inc
ds
mov
aam
ret
ret
mov
push
lretw
cmc
cmp
ret
ss
in
xor
push
dec
pushf
decl
cmpsb
adc
cli
push
dec
enter
pop
fnstenv
push
sbb
xor
outsl
repz
movsb
push
enter
ret
sub
cli
in
add
and
sti
fisubrl
pop
mov
sbb
stos
or
dec
pop
jb
xchg
inc
xor
lret
push
mov
lds
cvttps2pi
add
ret
outsb
push
cmp
mov
push
arpl
mov
push
in
andb
pushf
mov
cmp
aad
jae
pop
aas
and
pop
pop
fs
xchg
adc
jp
outsb
cli
je
decb
scas
pop
ljmp
imul
pop
das
aad
orl
pop
aas
and
in
out
cmp
xchg
xchg
adc
mov
test
adc
ss
fisttpl
gs
xchg
clc
outsb
imull
and
sti
add
fwait
push
sub
push
sbb
pop
push
cmp
mov
jnp
push
jo
sbb
fmul
push
iret
sub
fdivrs
lret
jo
pushf
xor
add
add
inc
pop
cltd
mov
sub
aad
mov
push
push
clc
jb
sub
cmpb
icebp
ds
popf
or
pop
aas
daa
xchg
shl
xorl
cwtl
or
mov
lods
cmp
push
test
rcr
push
popf
jp
adcb
movsl
shl
xor
andb
fldenv
roll
loopne
lods
outsb
cmp
push
pop
xor
xchg
ss
mov
cmp
rclb
clc
xchg
cmpsb
js
sub
dec
sbb
cmp
xchg
inc
xor
insb
cmp
push
inc
out
sbb
clc
rcr
iret
mov
push
adc
and
icebp
sbb
psadbw
insb
jp
jo
xlat
mov
test
test
repnz
cld
mov
sub
add
rcrb
orb
mov
les
es
mov
sti
jo
bound
pop
push
pop
or
clc
rcr
add
inc
add
jmp
pop
in
jp
aas
es
fiaddl
iret
je
enter
test
stos
adc
dec
clc
rcr
mov
mov
ret
hlt
cmp
cli
adc
subl
fsubrp
das
flds
arpl
psllq
xor
xor
push
clc
rcr
cmpsl
mov
stos
cmp
insb
sub
sub
lcall
and
pop
push
clc
mov
cmp
push
sbb
mov
pop
leavew
neg
sahf
and
lods
mov
jg
gs
xchg
mov
pop
or
push
mov
rcr
pop
sbb
mov
pushf
pushl
movl
pushl
ret
call
movl
movsbw
lea
call
jmp
pushl
pushf
movl
pusha
movb
pushf
lea
jmp
jmp
call
pushf
call
movb
lea
je
lea
setg
movzbw
not
lea
pushf
mov
movzwl
movsbw
push
not
lea
pushf
mov
pusha
pushl
lea
call
jmp
cmovo
rcll
movsl
stc
adcb
dec
rcrl
xor
loopne
sbb
loopne
xchg
arpl
cmp
xor
xchg
cmp
cmp
sarb
clc
xchg
mov
pop
or
jl
xchg
in
aas
stos
js
push
arpl
mov
push
jg
jne
gs
xor
fs
insb
add
push
cmp
dec
fnstsw
iret
push
and
idivb
aaa
movsb
adc
popa
jle
repz
pop
aas
adc
push
and
lahf
pop
iret
sahf
out
clc
lcall
repnz
ljmp
inc
mov
outsb
sbb
ja
xchg
pop
int
cmpsl
cmpsl
clc
rcl
add
popf
dec
adc
sbb
aam
lock
jmp
popf
add
adc
or
sub
lcall
int3
test
mov
xlat
jmp
aas
ds
icebp
pushl
int3
jb
mov
mov
mov
pop
mov
jp
shl
int
test
jno
sub
add
xchg
or
mov
jl
mov
jo
jecxz
xor
xor
mov
cmc
cmp
sub
jmp
leave
push
mov
scas
imul
adc
test
sbb
adc
xor
shl
out
jle
cmp
mov
mov
call
xor
add
push
inc
into
fld
xchg
sahf
or
cmpsl
jbe
dec
sahf
or
lds
iret
popa
jns
mov
cmp
insl
push
add
shlb
xor
add
dec
loopne
xchg
push
lret
sar
add
cltd
int3
jp
pop
pop
push
repz
ficompl
outsl
adcl
inc
iret
jp
xchg
in
push
jl
aas
sub
fisubl
jmp
int
dec
mul
rolb
mov
fcmovbe
fisubl
add
ds
sbb
sbb
xchg
and
xor
daa
mov
test
ss
inc
nop
int3
xchg
nop
clc
xchg
cmp
jmp
jmp
daa
push
pop
call
out
fcmovb
jbe
push
mov
repnz
shl
inc
iret
pop
cmp
add
xchg
jl
dec
adc
test
clc
repz
clc
rcl
pop
jnp
pop
ja
jp
sub
and
mov
push
adc
cltd
pop
pushf
or
cmp
xlat
and
pop
aas
sub
mov
jecxz
ds
aaa
pop
aad
aas
sub
xorl
mov
and
lcall
loope
inc
out
mov
sti
mov
call
adc
mov
pop
lret
push
add
popa
fimuls
mov
in
fsubr
aad
aaa
and
push
cld
jecxz
fdivrl
ret
xor
sahf
and
cmp
pop
adc
add
push
cmovg
inc
or
bswap
stos
pop
xor
in
in
insl
mov
and
mov
movsl
xchg
lods
jbe
xchg
shrl
aad
pop
jmp
mov
rcl
xor
or
je
push
ret
sbb
sahf
mov
sub
mov
sub
dec
lcall
inc
stos
jne
jno
jno
sbb
lahf
mov
leave
dec
xchg
adc
cmpb
pop
mov
imul
xchg
pop
test
mov
inc
mov
shr
pop
sub
bound
xchg
mov
pop
pusha
sub
lcall
imul
aas
sub
hlt
xorl
push
adc
lods
push
sub
xor
dec
clc
rcl
add
add
pushf
movl
jmp
cld
in
adc
xchg
add
xor
icebp
mov
inc
scas
ja
sub
push
inc
das
cld
int
clc
xchg
dec
push
js
inc
push
jp
pop
es
es
mov
hlt
rcll
in
and
adc
icebp
filds
xchg
xchg
mov
in
mov
mov
popa
sti
mov
mov
adc
sub
popf
mov
dec
sbb
adc
dec
mov
call
jecxz
sub
mov
jns
jbe
jno
mov
rcll
cmp
add
pusha
call
ret
xchg
pop
cmpsl
mov
or
decl
pop
out
push
rorl
pop
lods
cmp
out
clc
xchg
mov
imul
imul
fiadds
and
adc
aas
and
int3
sbb
mov
dec
sti
lods
flds
aas
sub
xchg
mov
repz
pop
mov
popa
sub
or
clc
rcl
into
xor
cmpb
push
pushf
lea
jne
mov
clc
xor
rol
cmp
mov
dec
rcr
add
sub
rcl
mov
cmp
cmp
test
push
mov
pushf
lea
je
call
pushf
push
mov
pusha
not
jmp
bt
bswap
ror
mov
pushf
test
push
sub
jmp
lea
jne
call
push
jmp
pushf
movb
pushf
lea
jne
jmp
and
pop
test
outsl
scas
xlat
mov
sarl
daa
test
vmwrite
pushf
xchg
jmp
jb
jg
lock
xlat
imul
mov
les
jne
icebp
push
mov
cmp
movsl
xor
repz
sub
into
inc
dec
pop
lods
jmp
cmp
addr16
jecxz
pop
cwtl
push
xchg
jb
loop
dec
push
push
sub
repz
mov
lret
xchg
out
adcl
nop
fmulp
xor
or
shll
cld
stos
ljmp
pop
sub
rcl
push
divb
rol
mov
notb
aas
cs
dec
adc
xor
cmpsl
mov
sbb
mov
mov
mov
repnz
popa
int3
mul
ljmp
sub
dec
xlat
daa
loopne
stos
inc
das
xchg
xor
xor
sbb
and
or
rclb
xchg
mov
xchg
dec
std
add
mov
xchg
outsb
pop
or
cmc
jecxz
cld
test
add
mov
jle
mov
lahf
shlb
mov
bt
pushf
cmc
not
call
or
movb
movw
mov
pusha
lea
je
shr
xor
shrd
rcr
neg
mov
aas
push
mov
shld
xor
shr
sub
btr
mov
pusha
or
pusha
push
pushl
lea
je
movzbw
neg
add
sar
shl
add
sub
inc
pusha
mov
bts
shr
inc
sets
mov
ror
add
clc
sbb
sbb
bts
add
lea
not
mov
cmp
stc
clc
shr
push
jmp
pusha
add
pushf
dec
pushf
pushl
lea
jne
pusha
bsr
btc
movb
mov
bt
pushf
bt
cmc
cmp
pushf
call
aas
nop
push
movsl
xchg
sbb
mov
iret
sbb
mov
jecxz
fsubp
xor
dec
imul
aas
pop
fildll
setns
iret
lcall
xor
fbld
mov
ds
cld
stos
ss
xor
into
push
or
lahf
mov
scas
mov
outsb
mov
mov
jae
les
mov
mov
mov
mov
mov
lret
mov
mov
mov
mov
jae
mov
lret
rclb
add
inc
out
test
add
sbb
hlt
pushf
pushl
pusha
lea
jmp
sbb
push
fnstsw
pop
and
mov
xor
lret
mov
rcrl
mov
mov
je
mov
cmp
ja
test
jecxz
pop
inc
stos
fisubs
cmp
insl
or
or
mov
orl
sub
outsl
es
stos
popf
jb
iret
mov
pop
adc
subb
adc
popa
shll
xchg
rcrl
clc
ror
sbb
in
add
jmp
mov
pushl
popl
push
mov
mov
pushl
ret
movl
not
pushl
pushl
pushf
lea
push
jmp
btc
mov
neg
rcr
mov
btr
rcl
xchg
mov
bt
mov
not
cmp
bt
xor
mov
jmp
pushf
pushl
movl
pushf
push
lea
jo
push
movl
pushf
movw
push
pushf
lea
jmp
pushf
pushf
lea
je
pushf
pusha
mov
pushf
lea
jmp
sbb
out
ss
or
fbld
sbb
mov
addr16
ret
das
sahf
jmp
fwait
hlt
pop
lods
mov
aad
mov
andb
and
inc
sub
adc
pop
dec
in
pop
es
popa
fs
call
sub
fstpl
sbb
bound
ud0
call
push
adc
call
call
jmp
lea
pop
sbb
sub
xchg
adcl
dec
sahf
imul
notl
push
xchg
push
call
ret
lods
popf
jecxz
sbbl
ds
mov
imul
out
repz
cltd
pop
test
sub
mov
cmp
ljmp
mov
inc
push
jmp
ds
pushf
rolb
sub
loope
mov
in
mov
mov
gs
cmp
jmp
pop
sar
add
aas
lea
cld
push
push
popf
cld
add
xor
in
leave
test
push
shlb
scas
pop
jge
push
std
sbb
sbb
test
cmp
int
nop
mov
dec
aad
arpl
popa
sub
push
sub
test
sub
stos
inc
data16
sub
lods
and
fstpl
push
pop
icebp
adc
pop
in
pop
mov
shl
test
jmp
cmpsl
xchg
pop
ss
movsb
repnz
add
mov
lds
in
js
xor
mov
cmp
xor
dec
lock
mov
loopne
fimull
push
enter
sbb
int3
dec
xor
das
or
mov
jg
fsubr
bnd
gs
repnz
addl
xor
push
rcrb
incb
pop
out
negb
mov
inc
cmc
cmpsb
jl
lods
clc
mov
jne
scas
and
jne
sub
mov
cmp
lock
clc
insb
rorl
fwait
pop
add
cld
fstpl
push
popf
inc
lret
lods
mov
iret
lds
jae
into
into
insl
lds
repz
aaa
out
lret
mov
lea
sbbl
adc
xchg
jl
mov
add
cwtl
push
sub
cli
scas
popa
cwtl
sub
ja
push
jo
popa
lret
mov
scas
idivb
imul
fdivrl
dec
mulb
sbb
scas
or
enter
fs
mov
pop
jo
add
jae
shll
xor
pushf
loopne
shl
mov
insl
pushf
and
jne
dec
adc
loope
outsb
loop
mov
cmp
orl
jne
jno
pop
or
push
mov
test
sbb
cmp
iret
push
sub
jb
and
add
hlt
mov
dec
into
jae
push
lahf
hlt
out
and
mov
push
sldt
xchg
stos
andnps
jo
xchg
addr16
jmp
adcl
cmp
jmp
xchg
movsb
repnz
sarb
mov
dec
inc
hlt
test
mov
test
adcl
jg
fnstsw
addr16
jns
fistl
hlt
addr16
adc
shll
pop
pushf
push
mov
leave
sbb
test
fdivr
inc
sub
loopne
xor
pop
jge
sbb
fdivs
insl
adc
sub
pushf
pop
in
xchg
push
mov
push
jp
mov
jns
leave
xchg
mov
lods
fmul
jns
outsb
repnz
lea
cld
fisttpl
movsb
jl
sbbb
cmc
iret
cld
mov
push
xor
leave
imul
adc
imul
push
xor
or
shrb
pop
fstpl
mov
jp
lock
sbb
pusha
sbb
rol
inc
lret
shl
call
mov
inc
cwtl
dec
les
insl
repnz
movsb
inc
pop
adc
mov
inc
push
cmpl
cwtl
and
add
adc
adc
dec
addr16
lock
inc
enter
test
push
and
inc
roll
shl
iret
int3
and
rcl
lods
leave
pop
movl
or
lods
lcall
pop
lret
sbb
dec
cs
mov
pop
in
stos
je
dec
inc
mov
cmpl
xchg
pop
mov
movsb
loope
insb
rcrb
stos
lods
push
sbb
ret
adc
fwait
jp
int3
and
pop
xlat
repnz
lahf
mov
shlb
mov
sub
cwtl
inc
popf
and
dec
fistps
insb
and
mov
test
insb
cmp
lods
ja
mov
xor
add
pop
aam
push
inc
add
xchg
call
jb
sbb
adc
cld
mov
into
sbb
daa
fldt
aad
out
loopne
scas
xor
push
movsb
xlat
aas
xchg
dec
daa
in
pop
mov
or
cmpsb
push
pop
repnz
jl
into
movsb
sbb
lods
dec
stc
lods
xchg
mov
pop
addr16
test
mov
pop
mov
imul
xor
adc
imul
inc
xor
arpl
iret
mov
cmp
sub
push
bound
lods
mov
xchg
fmul
pushf
push
or
fs
fcoml
js
loopne
fadd
pop
dec
lcall
ret
aas
stos
sbb
push
stc
cmpsl
movb
xlat
sbb
fimull
out
inc
and
add
jo
jae
inc
movsl
lret
iret
xor
jp
lcall
mov
dec
pusha
adc
aas
addr16
lds
notb
cmp
and
in
dec
aam
mov
and
jae
lret
sbb
ja
popa
cmp
cmp
cmc
loop
pop
call
or
mov
idivb
repz
call
call
loopne
sbb
sbb
add
xchg
loope
xchg
inc
ljmp
pop
loopne
jae
mov
mov
popa
movsb
jmp
mov
cmp
lcall
and
les
jnp
mul
push
cmp
sbb
cmc
xorl
enter
call
add
sbb
mull
insl
adc
inc
pop
add
add
xor
pop
cmp
dec
push
icebp
lret
xchg
pop
pop
lret
in
push
clc
sahf
adc
lret
andb
push
repz
cmp
or
testb
jl
xchg
add
pop
jmp
fucomi
ss
add
int
mov
dec
xor
or
xchg
clc
shl
sarl
add
or
movsb
dec
or
nop
sbb
je
js,pn
mov
sbb
sub
xor
pop
aas
or
test
pop
cmp
jmp
sub
pop
mov
test
mov
inc
push
sarl
pop
wrmsr
icebp
cmc
sub
and
add
mov
cmp
mov
fwait
inc
inc
nop
subl
pop
data16
nop
cmp
rol
adc
loop
add
pushf
call
or
out
and
stos
insb
pop
ret
pusha
or
into
xchg
bound
mov
xor
sub
aas
pusha
jp
xchg
pop
mov
in
ffree
clc
lcall
mov
not
fs
sub
mov
repz
into
pop
dec
push
inc
mov
or
les
and
jne
not
cwtl
bswap
bswap
movb
cwtl
movsbw
push
setg
pushf
pushf
lahf
lea
call
xchg
cwtl
not
call
pushl
lea
jae
setle
mov
and
call
mov
sbb
xchg
fadd
lods
mov
sub
fstpl
daa
dec
outsb
mov
push
out
rcl
inc
push
cmpsl
fildll
clc
xchg
sub
aad
push
jl
andb
mov
cld
enter
mov
clc
rol
sahf
test
xor
add
pusha
clc
pusha
bt
cmp
jmp
lea
jae
call
push
or
call
pusha
jmp
mov
jmp
sbb
aas
adc
sub
fildll
loopne
outsl
cmpsb
hlt
ss
popl
cmp
adc
nop
lret
jecxz
sahf
gs
pushf
jecxz
mov
stos
call
and
dec
cwtl
arpl
jl
lcall
rol
psrld
les
scas
pop
push
rcr
push
push
cmp
int
loope
xor
fsubr
mulb
loopne
jns
xchg
push
add
cmp
fildll
adc
dec
pop
lret
xchg
or
sahf
jae
shrl
xchg
push
cmp
cmp
dec
jns
sbb
sbb
clc
rol
out
inc
adc
sahf
out
xchg
loope
xchg
sbb
or
fs
lahf
in
call
and
push
clc
lcall
test
pop
bound
add
testb
jne
out
xchg
fs
dec
push
mov
pop
aas
cmp
out
add
mov
or
push
cmc
add
ret
imul
mov
add
mov
call
pushf
movl
call
movl
pushf
movb
lea
jmp
ror
mov
inc
push
mov
dec
pushf
pushf
not
stos
mov
mov
lea
call
test
cmp
and
iret
xchg
pop
call
sbb
enter
and
jnp
mov
aas
pop
or
popf
imul
cmp
push
pop
iret
mov
data16
lcall
sbb
mov
push
pop
in
fadds
jge
cmp
inc
clc
rol
jl
pop
pushl
popl
mov
setl
movsbw
mov
mov
bswap
jmp
ret
es
int3
sbb
repnz
gs
orb
push
jmp
nop
fucom
xor
mov
roll
jae
cmp
add
jnp
iret
incb
dec
clc
lcall
out
lahf
inc
fwait
data16
out
fwait
imul
gs
ret
jo
rol
push
pop
clc
test
stc
clc
add
cmp
cmc
cmp
add
push
call
and
cmp
dec
xchg
cmp
dec
push
popa
test
stc
inc
div
aam
repz
lret
adc
cmc
aaa
ss
shrb
imul
xlat
push
movsl
movsb
add
popa
into
pop
test
enter
pushf
mov
test
mov
and
inc
bound
sub
das
mov
lret
cmp
mov
sahf
aas
cmp
push
je
ja
stc
mov
xchg
mov
push
inc
loopne
icebp
sahf
test
arpl
push
and
inc
mov
cs
jnp
ja
aas
aas
jecxz
mov
arpl
popf
test
cmpb
xor
das
pop
dec
mov
dec
rcrb
xchg
rorb
push
movb
pushl
pushl
movl
jmp
add
push
dec
mov
into
negb
lods
pop
pop
insb
cli
out
inc
mov
push
mov
pop
gs
fcomip
stc
inc
push
lcall
xor
and
sti
dec
jbe
shll
rol
jne
movl
pushf
mov
lea
jmp
out
cmpsb
rcrb
inc
int3
adc
mov
addr16
negl
inc
adc
stos
pop
push
xor
pop
sbb
pop
aas
cmp
pop
dec
xorl
xor
sbb
pop
daa
hlt
push
clc
rol
mov
dec
adc
add
add
push
lea
jae
push
lea
jmp
add
add
fcomps
add
stc
adc
and
adc
cmp
sbb
fsubrl
adc
inc
fcomps
add
xchg
add
jo
stc
inc
inc
and
popa
iret
pop
add
mov
push
pusha
pusha
sub
cmc
bt
cmp
mov
lea
ja
pusha
lea
jmp
push
out
fisubrl
cltd
pop
outsb
pop
mov
push
cli
jne
mov
loopne
outsl
out
sbb
and
aas
sbb
and
nop
out
and
lcall
sbb
cld
rorb
dec
fadd
icebp
jge
aaa
test
mov
xchg
rorb
pusha
push
pushf
movl
pushf
pushf
call
adc
pusha
push
pushf
lea
jmp
mov
dec
fbld
cmc
cmp
ss
or
and
lahf
leave
icebp
jp
in
sbb
in
outsl
inc
aas
dec
xchg
mov
pop
rcrb
xor
inc
es
mov
jp
sbb
pop
and
sarb
call
js
nop
push
push
push
sbb
enter
mov
popf
lret
iret
iret
jbe
sub
sbb
lods
pop
push
lods
mov
clc
sarb
and
jne
adc
bsr
rol
mov
shl
sub
bts
neg
call
jno
enter
push
dec
daa
jo
js
in
push
and
pop
and
nop
or
stos
out
aad
xchg
xchg
in
ficomps
cwtl
movsl
iret
jge
ss
lcall
jg
popa
pusha
inc
mov
cmpsb
lock
adc
cmpsb
sbbl
sbb
dec
fs
sbb
or
cwtl
and
or
cmp
cmp
add
adc
aaa
bound
out
jne
fs
dec
lea
or
hlt
loopne
mov
aas
inc
pop
imul
xorl
jnp
fldenv
mov
push
push
clc
sarb
push
inc
pop
add
and
sbb
maskmovq
negl
mov
int3
std
clc
fisubs
aas
sbb
adc
pop
sarl
ficoml
adc
jb
pop
pop
adc
pop
mov
and
sbb
mov
movd
cmc
mov
out
mov
inc
jns
test
add
xor
mov
mov
popf
mov
pusha
sub
flds
arpl
bound
popa
pushf
cmp
fsubrp
push
jl
mov
hlt
in
rorb
aas
inc
shr
xor
inc
call
mov
jg
ds
pop
lret
mov
movl
movb
pushl
pushf
lea
jmp
jmp
push
orl
fimull
push
sahf
inc
rcr
movzwl
sub
lods
or
xchg
leave
xlat
pop
or
push
hlt
adc
pop
or
jae
repz
outsb
mov
ss
aam
xor
stos
fld
movl
or
rcrb
imul
loopne
cld
xchg
adc
cld
adc
int
mov
or
jmp
push
pop
aas
inc
lods
mov
aad
and
addl
repz
mov
mov
mov
decb
xor
enter
dec
sbb
inc
sbb
les
and
xchg
jno
xlat
adc
and
sarb
sbb
mov
xchg
sahf
push
aas
inc
jge
outsb
insl
gs
or
insb
adc
aad
cwtl
rcrl
loope
clc
sarb
or
jecxz
adc
bts
shr
mov
adc
or
add
shr
mov
push
pushf
repnz
movl
pusha
call
bt
jmp
js
push
inc
cmpb
cli
or
or
fildll
pop
data16
pusha
mov
test
das
adc
push
add
clc
sahf
push
push
push
mov
jnp
xchg
cwtl
mov
xor
xor
pop
popa
icebp
fwait
push
jp
sub
sub
es
and
lcall
mov
push
sub
imul
test
sub
sarb
jmp
iret
rcr
cmpsb
sar
fs
aad
sub
pushf
outsb
inc
pop
aas
cs
ja
push
scas
xor
aam
cmp
push
les
rclb
je
lea
pop
add
mov
andl
pop
aas
inc
xchg
fwait
mov
loope
xor
jne
cmp
mov
sub
cs
mov
dec
mov
mov
cli
jmp
jl
arpl
jmp
movw
pushf
movl
jmp
int
inc
adc
push
test
sbb
jbe
or
pop
ret
sub
aas
jmp
test
sbb
cmp
push
add
pusha
pop
aas
inc
xchg
jae
imul
rcr
inc
rcl
mov
movd
test
rcll
mov
in
inc
mov
and
pushl
popl
movb
pushl
ret
mov
call
fisttpl
xchg
add
add
push
xchg
fwait
es
inc
sub
shrb
daa
and
shl
stos
lea
lcall
mov
lock
mov
les
cwtl
mov
stc
mov
add
mov
adc
mov
mov
sub
fs
js
pop
add
sub
ret
mov
xor
mov
lahf
or
xchg
aas
inc
roll
pop
cmp
hlt
cwtl
fstps
loopne
sbb
repnz
xor
mov
sub
fwait
inc
outsb
testb
xchg
lcall
jg
mov
mov
pop
push
shlb
add
adc
sub
pop
aam
jno
pop
aas
inc
inc
mov
aam
dec
test
add
cmp
sarb
pop
jmp
jmp
dec
mov
aas
inc
dec
clc
js
aam
loop
fstpl
add
fmulp
adc
add
push
mov
decl
inc
xor
ret
mov
xor
cli
cmp
and
push
fisubrs
jmp
movsl
cmp
add
xlat
inc
xchg
pop
dec
mov
jae
roll
aas
inc
jg
jg
int
sbb
testb
clc
sarb
or
add
andb
cmp
cmpb
push
jmp
cmp
popf
mov
insb
dec
pop
ret
ljmp
je
dec
iret
lcall
ljmp
adc
adc
add
cmpsl
cmpsl
adc
in
ret
adc
test
fadd
xchg
imul
popf
cld
add
in
stc
shlb
dec
aad
mov
out
pop
decl
in
popf
cmpsb
add
loop
mov
mov
stos
clc
sarb
adc
enter
sar
inc
dec
incl
pop
or
out
clc
shlb
loop
imul
sbb
sub
sbb
in
mov
pop
aas
dec
jbe
mov
push
sbb
pop
jl
push
pop
divb
mov
jecxz
fnstenv
pop
shr
jae
xchg
dec
jae
add
out
add
fwait
xchg
xchg
pusha
insb
cld
dec
pop
aaa
pop
aas
dec
daa
pop
mov
jbe
jne
pop
pop
adc
and
cmpsb
clc
shlb
inc
and
call
ror
sar
bts
mov
bsr
pushf
bsf
bswap
add
sbb
bts
clc
movl
clc
mov
lea
test
cmp
call
cmp
shr
bt
push
and
bsr
xor
sub
mov
mov
push
sbb
push
bt
push
adc
cmp
sub
push
not
bsr
btc
shl
push
movsbw
adc
jmp
call
xchg
subl
cltd
scas
push
mov
scas
cltd
inc
cs
loop
push
xchg
mov
insl
loopne
fsin
int3
out
das
pop
xor
jg
cmp
pop
jne
xchg
sarl
cmp
je
fnstenv
scas
dec
push
and
adc
dec
lcall
jmp
push
fisttpll
push
in
es
cmp
in
push
out
mov
or
push
arpl
pop
test
add
std
push
test
ljmp
mov
xchg
es
or
inc
fiadds
scas
mov
ss
push
add
xor
push
imul
mulb
daa
xor
dec
dec
jnp
das
scas
out
push
push
rcrl
mov
fnsave
lds
pushf
sbb
jbe
in
lods
cmpsl
xchg
das
dec
movsb
dec
lea
jae
outsb
mov
pop
stos
pop
roll
clc
shlb
es
and
imul
dec
adc
xchg
repz
xchg
out
mov
movsb
add
pop
aas
dec
or
xchg
jae
jp
jecxz
loop
pop
insb
adc
ds
clc
shlb
jg
bt
pushf
xor
add
call
ja
rcrb
jle
inc
push
xlat
lea
inc
in
mov
test
pop
sub
cmp
data16
sub
imul
and
sub
add
insb
inc
xor
out
inc
lcall
mov
or
orl
add
hlt
cli
inc
aaa
xor
clc
lods
cmp
inc
pop
pop
inc
stos
mov
add
repz
mov
sub
je
cli
dec
cmp
lods
sti
lret
mov
sbb
repz
xchg
fcoms
pop
mov
js
jle
cmc
inc
test
lods
fisttpll
pop
movb
dec
ret
jmp
cmp
orb
test
clc
shlb
and
jne
push
lea
call
push
pushf
movb
pushf
lea
jmp
jmp
str
jb
pusha
mov
movl
jmp
pushf
pusha
jmp
jmp
lea
jbe
rcl
xadd
sub
shrd
sub
btc
sar
mov
bswap
movsbw
mov
test
call
pop
sub
pop
mov
inc
and
jp
jmp
mov
add
cld
clc
lret
ljmp
das
aaa
clc
pop
fcomi
shl
in
les
adc
in
mov
xor
dec
sbb
ds
xor
arpl
pop
push
scas
mov
push
daa
out
adc
rcrl
sbb
xchg
pusha
scas
pop
jmp
in
pop
aas
dec
insl
cltd
fwait
or
xorl
and
mov
test
shlb
add
stc
jmp
xchg
mov
jg
scas
or
jno
in
idivb
push
push
sub
lret
add
or
aas
sbb
popa
scas
stos
mov
or
iret
jmp
outsb
jns
loope
mov
cmp
jnp
dec
sbb
push
ret
sub
pusha
mov
movsl
cmpsb
test
add
cmp
and
adc
mov
cmp
lods
lret
call
add
and
xchg
jnp
repnz
inc
bnd
fmul
mov
sbb
add
shl
rcl
clc
shr
mov
bswap
mov
rcr
movsbl
btc
add
call
pushf
movl
pusha
mov
pushl
movl
pushl
push
pushf
lea
jmp
mov
movl
call
rol
mov
not
mov
movsbw
bsr
mov
test
jmp
aam
sarb
loope
stos
lret
xor
and
xor
adc
sbb
mov
aas
outsb
mov
out
sbb
jecxz
pop
clc
lcall
lahf
push
aaa
leave
ja
sub
rcrb
cmpsl
aam
jb
lods
pop
mov
xchg
ds
shlb
and
jne
bsf
cmp
xor
push
call
movl
pushl
pusha
pushl
movb
lea
jmp
sbb
add
mov
jl
out
pop
sub
ljmp
mov
xor
int3
push
or
nop
push
aam
pop
dec
lcall
es
ds
test
xor
ret
cmp
inc
inc
inc
jno
mov
inc
bnd
ret
daa
add
pusha
imul
cwtl
sbb
cld
and
push
sbb
js
mov
incb
jmp
test
outsl
push
sbb
pop
ds
mov
mov
cld
jbe
loope
insb
jno
adc
xlat
inc
scas
mov
test
aas
dec
pop
out
xor
pop
das
pop
adc
pop
push
fwait
dec
xchg
and
or
cmpsl
push
les
mov
adc
addl
xchg
loope
jmp
mov
mov
sbb
sub
test
cmc
cmp
pushf
call
movl
lea
jge
pushl
pushf
pushl
ret
jmp
movzbw
pusha
lea
movw
mov
jmp
jmp
jmp
call
sub
test
pushl
popl
cmp
test
cmp
pushf
lea
ja
not
test
sub
cmp
push
bts
sub
add
shr
call
aaa
mov
cmp
shl
pusha
pushf
pusha
lea
je
pusha
call
push
lea
ja
lea
setnp
pop
pusha
pusha
mov
mov
jmp
mov
jae
incl
or
adc
and
adc
inc
sub
les
clc
xchg
arpl
gs
or
in
push
xor
jo
inc
sar
outsl
dec
push
mov
enter
pop
push
pop
pop
cmp
push
cmpb
dec
fcmovb
int
stos
push
out
es
insb
mov
xlat
cmp
sbb
mov
sub
sub
mov
es
aas
push
sbb
mov
enter
lea
movsl
lock
lea
clc
shrb
push
inc
not
mov
inc
pushf
setp
setne
sets
mov
pusha
pushf
lea
call
jmp
pushf
dec
call
shrd
or
neg
mov
cmp
call
pushf
movb
pusha
stos
mov
pushf
mov
mov
lea
jmp
lea
bswap
pop
push
setae
mov
pushl
call
sahf
out
mov
fs
outsl
pushf
sub
jl
xor
add
pusha
leave
adc
mov
mov
loop
sub
mov
out
in
or
adc
xor
pusha
fwait
incl
xchg
jno
sbb
icebp
dec
push
adc
pop
add
cmp
loop
dec
rcrl
pop
and
sbbl
xor
jno
call
jmp
inc
mov
push
sarl
jp
and
jg
inc
call
popa
add
loope
jp
mov
jo
cmp
loop
les
pop
shlb
clc
arpl
mov
mov
cmp
jbe
leave
mov
mov
mov
mov
nop
aas
jle
stos
cld
jp
cmp
out
cli
arpl
repz
je
xor
push
push
jmp
in
pop
cmpsl
sub
push
push
loope
clc
out
xchg
neg
call
aaa
mov
xchg
repz
cmp
xchg
inc
sub
adc
sub
inc
test
sbb
mov
sub
outsb
jl
mov
add
adc
movsl
out
mov
sbb
pushf
adc
cmp
dec
scas
add
inc
and
pop
pop
test
xlat
mov
stc
inc
xor
lock
xor
in
xchg
sar
and
mov
test
push
or
les
push
dec
xchg
xchg
or
out
jmp
stos
cli
sub
lods
jne
dec
inc
pusha
pushl
pushf
push
lea
jmp
pushf
movl
jmp
or
add
cltd
mov
jge
push
lcall
scas
cs
les
pushl
mul
cmp
sub
faddl
cmp
pop
movsb
lds
or
xchg
pminsw
mov
sahf
add
pop
cmp
clc
add
sbb
pop
xchg
lahf
fstpt
scas
les
insl
in
sarb
mov
xor
xor
xor
jbe
adc
rcr
mov
cld
aam
mov
das
pushf
dec
jns
mov
adc
aam
sub
ds
movsb
mov
ret
mov
int
push
mov
cmp
fldenv
xchg
push
mov
clc
shrb
daa
stc
jmp
xlat
pop
leave
stos
add
inc
out
fadds
rcrb
mov
sub
fidivl
aas
ds
push
popf
mov
jo
or
mov
pop
pop
and
push
stos
push
adc
cli
rol
cmpsl
cmp
loopne
jb
adc
lea
pop
and
dec
xchg
mov
ss
push
and
test
orb
test
inc
daa
sbb
push
pop
nop
subb
cwtl
cs
ficomps
sub
mov
dec
xchg
mov
out
xchg
sahf
pop
out
lcall
arpl
push
or
in
sub
push
daa
clc
jl
aad
aam
jo
sarl
arpl
mov
movsb
xor
aas
ds
cld
inc
rcr
pop
aaa
add
sbb
loope
xchg
ret
add
test
sub
stos
adc
bound
sbb
add
and
mov
fldl
pushf
clc
ret
cmp
pop
cmp
adc
lds
add
and
loop
xchg
xchg
test
mov
sti
call
shrb
outsl
push
bound
out
mov
mov
push
dec
cs
stc
cmp
addb
cmp
leave
cmc
xor
push
and
scas
stc
loopne
sbb
cmp
pop
sar
stos
sar
loopne
aam
out
es
push
cmp
xor
add
repz
lods
mov
out
test
push
add
push
cmp
orl
mov
out
pop
adc
add
dec
adc
jnp
imul
mov
insl
test
xor
jge
mov
mov
je
mov
je
ja
sbbl
adc
sti
jb
mov
dec
lcall
cmp
aas
push
gs
cwtl
aaa
xorl
add
or
sar
shrb
bswap
mov
not
pop
push
push
lea
jmp
add
neg
cmc
mov
cmc
bt
test
jmp
movb
lea
jne
call
movl
pushl
jmp
and
cwtl
and
sbb
test
sbb
into
bound
inc
sbb
loopne
jg
add
mov
mov
xlat
fsubr
pop
lret
sbbb
scas
xchg
sarb
js
xor
mov
sub
mov
mov
test
lock
addl
xchg
arpl
pop
ljmp
add
int3
into
cmp
xor
mov
loop
cld
adc
mov
test
push
jge
pop
xor
loope
andl
jmp
stos
rolb
adc
mov
insl
in
or
daa
int3
sbb
xchg
jns
mov
mov
pop
sbb
clc
shrb
movsl
xor
sub
cli
ret
add
aam
sarl
pop
dec
pushf
in
add
pop
fs
inc
xchg
lahf
imul
xchg
pop
push
fsubl
loopne
xor
arpl
and
mov
icebp
xor
movsb
add
jne
scas
dec
fadd
jmp
add
in
dec
pop
mov
test
adc
fwait
in
arpl
aam
mov
loop
iret
jbe
xor
repnz
jp
jb
cmpsb
jbe
push
pop
lods
sbb
ja
and
mov
sub
sbb
fisubs
outsb
mov
clc
shrb
call
xor
addb
push
cld
shrl
adc
pop
scas
aaa
mov
add
faddl
lahf
leave
or
push
jae
mov
jb
aad
xchg
pop
in
pop
aad
iret
rclb
aaa
scas
sahf
jae
sub
add
hlt
cltd
sub
inc
push
push
cmp
push
pop
cs
rolb
icebp
imul
mov
into
lods
out
insl
dec
add
pop
jae
ret
sub
sub
sti
outsl
mov
pop
daa
test
decl
cmpsb
pop
dec
dec
btr
shl
mov
cmc
call
pusha
pusha
lea
je
test
call
call
xchg
jns
add
add
add
add
push
outsl
adc
add
call
sbb
jecxz
adc
adc
adc
add
lds
and
mov
in
ss
adc
jns
mov
es
stc
movsl
mov
fildll
clc
stos
xor
scas
sbb
mov
outsb
loop
add
mov
dec
outsb
std
es
incb
push
sbb
jo
inc
enter
cmovge
shr
push
push
popf
test
xchg
in
test
imul
loope
pop
inc
ss
add
mov
das
pop
or
pop
mov
ljmp
out
pop
mov
and
sbb
clc
shlb
lods
rol
clc
sub
dec
ror
pushf
xor
cmc
jmp
call
push
lea
ja
pusha
movw
pusha
lea
jmp
sbb
sarl
movsl
mov
mov
mov
rol
cmpb
cmp
clc
xchg
leave
pop
ljmp
adc
jl
and
arpl
fisttpl
aas
pop
lret
std
cli
cmpsl
push
jno
push
dec
pop
lods
cmp
addr16
shlb
inc
shl
xchg
test
shr
lea
dec
mov
bt
not
shl
neg
mov
jmp
enter
or
pop
and
seta
lods
sarl
xchg
pop
add
in
popf
pop
mov
xchg
fwait
inc
jmp
into
sub
imul
mov
xlat
pop
mov
adc
mov
xchg
cmp
mov
or
pop
jns
cmc
aas
int3
sbb
fiadds
or
pop
das
rolb
fs
je
ret
les
fstl
mov
sub
sub
or
bound
mov
or
jge
push
ljmp
mov
popf
jo
faddl
mov
pop
out
ret
mov
sahf
pop
aas
pop
movsb
pusha
push
lock
test
lret
inc
pop
sbb
daa
aaa
mov
shlb
push
add
pusha
mov
seta
mov
call
movzbl
not
mov
jmp
jmp
lea
dec
mov
movsbw
btr
daa
ror
push
and
push
adc
stc
add
sub
jg
pushf
setno
lea
pusha
pusha
jmp
movb
bswap
cwtl
lea
js
lea
push
jmp
lea
je
pushf
push
mov
push
mov
pusha
movl
cwtl
movzbw
lea
pushf
mov
pushf
push
movl
jmp
push
pushl
lea
je
clc
cmp
call
mov
xchg
loop
pop
aas
ljmp
loop
xchg
add
sahf
inc
inc
mov
mov
and
cwtl
pop
jge
clc
and
sahf
or
xor
mov
bnd
pushf
lea
call
push
push
movb
lea
jae
inc
push
call
call
pusha
call
bt
call
pushf
movl
lea
jbe
js
mov
rcl
bswap
rcl
add
jmp
sbb
push
pop
xor
stos
insl
xchg
addl
jns
into
cmp
inc
addl
int3
faddp
jb
aas
popa
dec
bnd
sub
inc
pop
iret
in
add
clc
lcall
jae
aam
aaa
mov
jbe
fwait
dec
aad
into
sbb
cwtl
mov
mov
shlb
xchg
popf
lldt
mov
mov
or
fiadds
mov
iret
popa
js
pop
out
test
insb
ja
mov
xchg
std
stos
mov
pop
clc
pop
bound
mov
pop
xor
xor
je
xchg
js
notl
xchg
insl
mov
ss
sbbl
mov
jecxz
pop
pop
aas
pop
sub
jns
cmp
adc
in
pop
jae
int
sbb
mov
repnz
jmp
dec
sti
dec
push
fs
aas
pop
xchg
and
aam
dec
aam
push
repnz
cmc
orb
sub
pop
push
mov
jecxz
cs
fs
jle
jnp
jns
xor
lcall
es
dec
xor
jecxz
pop
and
hlt
ret
add
shlb
sbb
in
push
lea
mov
pushf
movb
movb
mov
pushl
ret
push
lods
test
pushf
test
sub
pusha
mov
xor
push
jmp
and
les
cmp
test
fadds
jno
mov
cmp
sub
pop
add
cmp
gs
loopne
ret
or
frstor
mov
fmuls
and
and
mov
pushf
or
clc
shlb
lcall
add
pusha
call
shld
mov
stc
clc
call
lret
popf
out
push
mov
insb
adc
dec
scas
pop
mov
xchg
cmp
nop
cmp
xchg
imulb
add
idivb
jge
xlat
pop
int3
cmp
dec
push
xchg
jnp
or
mov
or
call
das
sub
pop
es
mov
lret
enter
jne
cs
loopne
aad
nop
pop
addl
xchg
shr
gs
clc
es
mov
mov
xor
movl
pusha
push
mov
lea
jmp
mov
movl
pushf
lea
jmp
push
mov
movzbw
push
movzbw
mov
not
lea
call
call
vmovq
inc
ljmp
setp
push
loopne
aam
bound
into
pop
xor
adc
and
faddl
mov
xchg
gs
fwait
lret
lahf
push
add
sarb
loope
sahf
lcall
jle
in
das
push
ds
or
repnz
andl
sbb
mov
outsb
dec
mov
mov
dec
inc
jne
mov
fildl
add
rorl
shlb
pushl
pushf
movl
call
sti
jmp
xor
popa
dec
mov
lcall
rorb
in
sbb
aaa
and
inc
pop
daa
stos
int3
fprem
lcall
loope
mov
jecxz
int
subl
push
inc
mov
aas
pop
xor
mov
mov
loop
xorl
push
mov
ljmp
repz
xor
pop
ret
add
dec
xchg
popf
mov
sahf
inc
cltd
lock
mov
out
xchg
gs
shll
movb
lret
rol
aam
add
or
mov
adc
pop
and
shrl
xlat
and
sahf
andb
pop
adc
adc
shll
subb
pop
push
push
adc
test
jno
and
jns
sbb
fwait
icebp
adc
xor
scas
push
inc
jns
push
mov
cmp
fwait
aad
sub
gs
lods
ss
sti
aas
xlat
add
sahf
sub
shll
out
inc
pop
xor
cld
jns
adc
cmp
pop
hlt
scas
xchg
enter
pop
push
push
xor
fcmovne
scas
adc
scas
jne
mov
aam
fidivs
push
movsb
mov
in
jb
shl
sbb
add
cmpsb
sbb
sti
mov
mov
pop
jae
dec
add
or
sbb
aas
sti
popf
dec
pop
psraw
adc
xlat
repz
cs
mov
jge
das
sbb
rcrb
add
fisubl
xor
popa
pop
mov
inc
pop
mov
mov
mov
mov
mov
add
lea
mov
xor
mov
repz
mov
sbb
dec
into
push
stc
fcomip
push
je
lahf
stos
mov
sbb
dec
pop
ss
outsl
mov
pop
imul
aaa
pop
push
inc
and
loope
push
xchg
pop
add
rorb
jg
fisttpl
dec
pop
jne
leave
dec
mov
xor
inc
sub
and
movsb
out
pop
adc
cmc
mov
call
dec
scas
xor
clc
jg
int
mov
sbb
jmp
sbb
ret
adc
xchg
stc
jno
nop
lea
outsl
push
fnstcw
std
adc
arpl
pop
lds
ret
pop
movsl
movsb
fwait
scas
sbb
mov
pusha
lock
mov
xor
and
cs
xchg
addr16
js
or
aad
ud2
pop
sbb
sahf
add
and
add
add
div
dec
lret
push
sti
pop
das
and
sbb
scas
dec
mov
or
or
rorl
movsb
iret
rcr
sbb
fisttpll
pushf
std
or
scas
in
xor
push
xchg
mov
daa
sti
scas
and
mov
push
xor
mov
mov
nop
sti
das
pushf
adc
sub
mov
gs
or
nop
ljmp
out
mov
fcmovu
mov
or
mov
mov
das
push
push
scas
cs
leave
pop
popf
cwtl
or
or
pop
popl
lea
push
mov
xchg
jae
cltd
and
add
mov
xchg
fstl
and
push
mov
adc
out
sbb
xchg
add
mov
adcb
add
shll
ret
add
mov
push
clc
out
xchg
shrb
lcall
fnsave
mov
rorl
lret
data16
xchg
jge
cltd
and
mov
xchg
cmpsl
xor
mov
inc
dec
setae
sbb
movsb
gs
sbb
fwait
jle
adc
and
sbb
push
outsb
inc
fimuls
add
test
mov
outsl
sbb
repnz
test
lret
sahf
in
mov
das
pushf
jmp
cltd
das
outsl
lods
out
and
lcall
push
popf
adc
setbe
and
inc
lret
adc
sti
mulb
sbb
lea
movsl
push
mov
cld
mov
and
cld
fwait
test
pop
clc
mov
mov
sahf
sbb
or
mov
mov
fwait
ja
xchg
push
push
push
in
mov
push
or
dec
decb
or
and
nop
sbb
xor
inc
ror
mov
out
fistps
inc
lcall
mov
dec
mov
cmp
and
cltd
leave
pop
mov
lahf
adc
mov
push
out
cmp
and
xchg
mov
mov
sub
mov
sbb
outsb
xchg
das
daa
fwait
cli
and
and
adc
das
in
out
scas
in
popf
ljmp
mov
and
mov
and
add
fimull
jmp
and
and
arpl
decl
pushf
adc
xchg
test
adc
add
mov
xchg
cs
mov
les
mov
pop
stc
pop
sti
or
lea
scas
mov
movsb
mov
mov
sysret
push
orl
pop
add
mov
sbb
movsb
pop
fistps
or
scas
repz
scas
or
add
mov
daa
lock
pop
mov
add
out
pop
popf
adc
nop
cld
jbe
adc
movsb
pop
rcrl
inc
out
sbb
fs
pushf
lds
xor
mov
call
dec
push
ret
push
fstl
jmp
mov
mov
cmp
adc
cs
or
sbb
movsb
xorb
xchg
xchg
cmp
add
cltd
pop
and
into
mov
mov
push
sbb
pop
or
push
pop
and
adc
or
pop
int
xchg
jl
movhlps
xor
or
mov
or
pop
pushf
xchg
mov
and
xchg
in
pushf
outsl
repnz
aad
mov
xchg
dec
xor
mov
jge
sbb
gs
push
and
xchg
scas
in
add
sbb
adc
sbb
sar
into
jmp
xor
std
or
movsl
push
cld
xchg
push
and
lahf
xchg
std
sbb
sub
cpuid
sbb
cltd
lea
adc
push
sbb
movsb
outsb
xor
and
fsubl
mov
mov
cmc
pop
icebp
jo
in
add
jo
cwtl
sub
and
into
seto
std
adc
xchg
fistpl
mov
adc
pop
xchg
jle
xchg
popf
and
and
iret
mov
pop
mov
sahf
cltd
sti
xor
popf
inc
and
cwtl
into
xor
and
and
lock
xor
xor
cli
pop
and
jno
pop
xlat
and
filds
repnz
lret
mov
pushf
scas
scas
std
sbb
and
scas
std
sbb
leave
or
scas
std
scas
adc
and
std
mov
scas
std
mov
scas
std
or
and
std
pop
xlat
or
cld
lahf
xchg
jno
das
xchg
dec
das
mov
das
sbb
adc
mov
mov
sbb
xor
pushf
cltd
sbb
das
mov
and
sti
movsl
pop
adc
frstor
or
or
mov
xor
adc
adc
adc
mov
dec
mov
iret
xchg
jo
mov
sbb
mov
and
and
jo
and
and
mov
xor
inc
fucomp
pusha
mov
ljmp
test
mov
cmp
pop
sbb
rcrl
pop
mov
adc
pop
sbb
mov
cltd
cld
icebp
or
das
or
xor
cwtl
negb
aad
xchg
mov
mov
pop
cmp
pop
cltd
nopl
sbb
adc
and
sahf
add
out
xchg
das
inc
jl
sbb
pop
adc
mov
out
mov
insl
stos
mov
aad
mov
popf
push
adc
pop
xchg
or
adc
pop
out
ficoml
nop
or
pop
or
test
fwait
pop
push
sbb
or
mov
xchg
push
xor
in
mov
sbb
mov
cli
in
rclb
lods
mov
xchg
xchg
or
outsl
sbb
jns
xor
das
scas
std
pushf
nopl
ret
sbb
std
das
outsb
cltd
mov
fbstp
adc
fcomps
xchg
xchg
sub
and
sbb
xchg
and
sti
sbb
and
cmpsl
rorl
mov
sbb
or
pop
and
and
mov
movsb
dec
popf
pop
lods
lret
sbb
outsl
xor
jo
xor
cwtl
mov
ficomps
adc
pop
sahf
pop
push
mov
gs
stos
adc
xchg
push
cltd
add
xlat
xchg
rorb
out
mov
outsl
or
or
or
loope
and
cld
cmp
scas
aad
outsl
dec
xor
rcrb
mov
xor
mov
sbb
cmp
pop
xchg
cwtl
inc
xor
mov
scas
sbb
mov
or
push
out
jno
lcall
xor
and
sbb
cwtl
and
xchg
and
cmpsl
setle
sbb
xchg
sti
or
clts
out
mov
pop
mov
movsl
mov
mov
dec
mov
and
push
cli
das
scas
or
mov
pop
test
xor
imul
mov
push
xlat
ucomiss
in
mov
pusha
ret
jo
jo
jo
push
pop
test
mov
inc
jmp
les
std
test
add
fs
loop
sti
xchg
push
fisubs
fs
adc
adc
lret
movsl
cmp
xchg
xor
lea
popf
outsl
xchg
xor
rcrb
and
pop
jmp
xchg
push
sbb
mov
mov
mov
fdivrs
scas
cmpsb
or
fwait
cmpsb
lods
fwait
push
cwtl
popf
das
jmp
fsubs
and
mov
dec
cs
lret
and
push
lds
xchg
or
add
incl
push
fwait
adc
pop
sub
add
and
mov
cltd
mov
inc
clc
cwtl
lea
shld
adc
jmp
jg
adc
mov
ficoml
notb
push
push
mov
or
cltd
mov
mov
push
fcomps
mov
push
xchg
cltd
sbb
jo
cs
push
xor
movsb
cs
fwait
mov
adc
cltd
mov
and
or
pop
sbb
fdivs
mov
lret
pop
mov
or
lret
lock
lcall
mov
shrl
mov
add
int
pusha
mov
in
fidivl
and
or
lods
mov
call
add
mov
xor
and
mov
rcll
mov
mov
lahf
and
or
cmp
and
pop
iret
repnz
pop
pushf
adc
movsl
addr16
and
mov
push
cmp
or
push
and
mov
clc
mov
jb
xor
mov
cmp
fs
idivl
jnp
add
popf
cmp
mov
xchg
xchg
stos
sbb
sbb
lcall
movsl
sbb
mov
mov
pop
mulb
push
pop
popf
mov
pop
repnz
ficompl
mov
cltd
dec
negl
mov
aam
mov
testb
cli
xchg
bndldx
or
mov
lret
stc
adc
mov
pop
adc
scas
insb
xchg
repz
out
and
fwait
add
mov
or
mov
mov
mov
push
movsb
push
dec
jae
mov
push
scas
rclb
into
iret
sarl
sbb
jo
xchg
xor
sbb
push
scas
xchg
fwait
cmpsl
pop
pop
xchg
imul
hlt
xor
adc
adc
mov
adc
adc
ror
sbb
xchg
cmc
and
and
cs
jo
stos
cs
lahf
scas
adc
inc
xor
ret
and
and
and
call
sub
or
mov
popf
adc
jns
in
xchg
shl
and
sbb
icebp
mov
jno
push
ljmp
pop
or
xchg
aas
sbb
cltd
and
pusha
scas
mov
pushf
pop
mov
xlat
xchg
dec
xor
and
or
gs
repnz
das
sbb
mov
gs
add
adc
xchg
inc
cs
pop
mov
pop
sar
xchg
psllq
adc
mov
add
lret
push
scas
movsb
decb
and
out
mov
xchg
imul
adc
popl
mov
push
push
mov
inc
xchg
adc
xchg
stc
or
sbb
and
insb
and
mov
jns
pop
cwtl
cltd
xchg
wrmsr
lahf
mov
scas
adc
js
cli
les
hlt
fs
adc
mov
and
xchg
xchg
adc
cmp
cmp
xchg
or
mov
cltd
jno
and
cmp
mov
das
mov
cmp
xor
loopne
cwtl
mov
xor
xchg
pop
xchg
push
pop
cmp
in
lret
enter
sbb
mov
mov
out
cmp
xchg
aas
scas
pop
pop
push
cmp
pop
insl
fstps
ljmp
stc
imul
stc
push
mov
xchg
sbb
jmp
xor
and
fs
push
iret
scas
mov
adc
add
xor
lds
pop
movsb
mov
and
stc
lods
nop
adc
inc
imul
fcmovne
ficoml
loope,pn
mov
pop
xor
fwait
scas
addl
cltd
mov
xor
fwait
scas
icebp
xchg
cld
xchg
pop
pop
lock
mov
push
pop
dec
push
xor
cmp
xchg
js
adc
dec
adc
mov
cs
mov
pop
and
push
cld
and
or
jno
inc
xor
fstps
int
pop
xor
mov
and
test
xor
aad
mov
mov
cli
addl
pop
inc
inc
nop
xor
lds
inc
std
pop
mov
mov
fisttpll
fldt
mov
jnp
adc
adc
or
dec
adc
scas
insb
lock
xchg
fbstp
jmp
mov
and
cs
pop
cmp
adc
or
sbbl
sub
into
fldcw
push
mov
inc
adc
out
lahf
sbb
fisttpll
sbb
push
and
inc
push
sbb
setl
and
mov
sub
sbb
cs
push
fadds
scas
add
pop
rclb
out
jecxz
lret
ljmp
xor
sbb
add
push
jnp
call
test
add
mov
mov
movsb
stos
lahf
and
movsb
cs
pop
lcall
in
fwait
mov
cwtl
movsb
out
in
pop
iret
fidivrl
icebp
sbb
mov
mov
lds
jbe
stc
xchg
cmp
mov
adc
and
popf
outsb
push
cmp
pushf
arpl
push
xchg
sar
mov
or
or
data16
std
lock
scas
std
sbb
push
pusha
movsl
mov
pop
add
mov
xor
jnp
movsl
push
xor
xchg
outsb
mov
push
popf
popf
mov
inc
xchg
cmp
jg
movsb
lea
add
das
mov
cltd
scas
mov
cld
mov
popf
repz
and
mov
fcomps
mov
xchg
or
pop
aam
fisubs
xchg
xchg
push
or
jge
mov
pop
add
movsb
add
lcall
sbb
popf
in
sbb
mov
pop
clc
mov
orl
enter
push
xchg
insl
lods
mov
and
mov
and
pushf
lock
gs
and
sbb
movsl
sbb
sbb
xchg
jmp
sbb
sbb
sbb
sbb
sub
testl
fwait
sbb
adc
xchg
movlps
dec
adc
cwtl
popf
push
fcoms
or
adc
das
mov
testl
lea
frstor
mov
mov
cld
movsb
aam
xchg
mov
adc
push
stos
jl
pop
mov
push
xchg
gs
add
clc
add
enter
lahf
cmp
sbb
sbb
sbb
sbb
stc
cli
std
jp
das
push
aad
push
cmpsb
xor
xchg
xor
pop
mov
mov
mov
pop
or
inc
fwait
cld
sbb
aam
js
scas
sbb
cmc
push
aad
jns
mov
scas
insl
mov
lods
mov
mov
mov
adc
pop
movsl
sub
pop
cli
rcrl
sbb
push
and
mov
scas
cltd
inc
icebp
das
and
adc
decl
pop
sbb
or
pop
out
adc
fnsave
scas
cltd
pushf
movsl
add
cltd
cs
xor
jmp
frstor
cltd
push
or
mov
mov
xchg
cmp
setge
adc
cltd
xchg
xor
lcall
adc
xchg
xchg
pop
mov
pop
fcomps
jno
ficompl
xchg
add
xor
xor
cmp
in
pop
popf
sbb
pop
sbb
mov
xchg
xor
out
sti
ucomiss
mov
mov
jno
into
decl
sbb
mov
sbb
add
rcrl
imull
push
pop
cli
das
and
std
sbb
jle
sbb
cld
mov
in
mov
std
ror
sbb
scas
std
scas
das
leave
xor
scas
std
and
xchg
pop
sbb
jge
xchg
mov
sbb
icebp
sbb
icebp
sbb
je
das
xchg
cmc
mov
jo
mov
jo
mov
cmc
scas
iret
jo
mov
sbb
fistpl
sbb
jo
cs
mov
pusha
sbb
cli
sbb
mov
pushf
adc
mov
scas
pop
icebp
fstp
mov
and
popf
sbb
lcall
pop
push
xchg
mov
jge
push
movsb
adc
push
std
mov
cmp
pop
and
fwait
or
sbb
and
add
and
or
dec
push
jle
popf
adc
in
sti
mov
pushf
test
mov
nop/reserved
in
fcmovu
adc
xchg
out
push
inc
mov
iret
mov
mov
sbb
xchg
mov
cltd
pop
in
in
lcall
add
sti
xchg
jbe
sbb
sbb
add
push
cmp
xchg
mov
pop
sbb
cs
pop
xchg
pop
pop
mov
ja
lahf
sti
mov
push
mov
inc
push
movsb
aas
in
notb
scas
push
pop
and
xchg
out
or
jmp
mov
mov
mov
ja
gs
adc
sbb
and
xor
xchg
or
scas
or
movsl
add
lcall
mov
rcrb
cltd
push
and
xchg
mov
mov
repz
xchg
jno
mov
push
sbb
sbb
push
xor
imul
mov
mov
mov
ja
das
xor
sbb
sarb
mov
mov
scas
mov
mov
mov
adc
jne
cld
mov
sti
push
pop
sarl
scas
std
popf
pop
dec
adc
add
jo
div
sbb
mov
cltd
add
mov
mov
mov
add
lcall
add
mov
jg
mov
dec
and
rcrl
pop
ret
push
insb
scas
xor
adc
dec
pop
pop
push
fwait
pop
iret
push
or
dec
pop
test
mulb
adc
cld
or
mov
and
jbe
pop
fistps
pop
sbb
pushf
dec
and
sbb
push
gs
cmp
mov
movsl
jmp
sbb
mov
cli
sbb
adc
and
mov
lcall
cwtl
or
and
mov
or
mov
or
xchg
adc
mov
hlt
adc
prefetcht1
xchg
add
sbb
cltd
mov
add
pop
das
repnz
adc
movsl
mov
popf
or
fisttpll
cltd
push
adc
adc
xor
icebp
cs
popf
sbb
lcall
and
mov
sbb
cltd
pop
adc
mov
mov
cs
movsb
xchg
or
enter
pushf
pop
cs
xchg
cltd
negl
les
jmp
clc
ret
xor
movsb
in
and
adc
fstpl
or
xchg
sbb
add
dec
adc
pop
fstl
sbb
fwait
jge
inc
pop
pop
pop
jl,pn
pop
ret
movsl
das
or
das
mov
cs
dec
xor
and
xor
jnp
and
pop
loop
fwait
jno
mov
fsincos
or
mov
and
add
icebp
cwtl
dec
icebp
push
mov
test
pop
add
sbb
out
mov
dec
sbb
push
jns
rolb
jl
mov
sbb
mov
sbb
fnstenv
adc
fcomps
or
jnp
and
mov
xchg
xorl
lahf
cs
cwtl
cmp
jge
and
and
dec
and
mov
and
mov
faddl
enter
fldenv
movsb
scas
int3
sbbb
or
inc
fdivrl
xor
scas
and
adc
jns
dec
push
adc
cmp
mov
pop
mov
xchg
das
and
push
js
mov
adc
dec
cs
mov
shll
mov
adc
mov
inc
aas
and
cmp
pop
cs
xor
or
mov
mov
nop
dec
xchg
add
and
mov
and
out
lea
clc
jge
ja
pushf
sahf
and
nop
push
sbb
and
xor
and
and
cs
xchg
and
mov
sbb
mov
sbb
scas
shrl
mov
mov
mov
dec
rcll
push
lea
iret
mov
aad
or
test
dec
adc
sbb
sbb
movsb
lahf
or
fwait
cmc
sti
pop
and
adc
repz
and
sbb
mov
and
push
cs
or
adc
notl
cs
push
fsubrs
aam
or
jle
xchg
xchg
adc
cld
xchg
and
mov
clc
andl
adc
mov
clc
cli
pop
xchg
shr
push
mov
or
sub
orl
add
std
cwtl
mov
adc
xchg
scas
add
mov
add
dec
shll
sbb
mov
pushf
sqrtps
das
lock
xor
cwtl
xor
or
cmp
mov
cltd
pop
lea
mov
jns
ret
scas
mov
out
mov
mov
sbb
inc
mov
or
out
and
adc
adc
fwait
add
adc
bound
sbb
int
sbb
nop
xor
pop
xor
adc
dec
movsb
lret
lcall
xchg
lcall
push
sbb
shrb
pop
cwtl
push
cs
inc
mov
enter
xchg
negl
dec
pushf
pop
jno
add
js
xchg
mov
enter
pop
xchg
fistl
xchg
outsb
mov
mov
mov
cmp
jecxz
cmc
mov
lock
adc
or
mov
mov
cmp
into
or
cmp
mov
add
xchg
pop
mov
sahf
popf
adc
lcall
and
and
and
or
and
pop
fsts
sub
adc
dec
adc
and
push
cld
sbb
adc
or
lock
and
jecxz
fdivl
in
popf
outsl
fsts
or
xlat
enter
or
pusha
sbb
sbb
loop
or
std
pop
mov
mov
xchg
or
jge
fdiv
xchg
outsl
popf
jmp
mov
scas
pushf
or
imul
stos
mov
lahf
mov
and
cwtl
cwtl
xchg
adc
and
movsb
mov
mov
movsl
sbb
fwait
sbb
shld
adc
scas
lods
sti
mov
ja
jmp
mov
and
setle
or
xchg
adc
inc
pop
pop
push
jmp
decb
push
in
cwtl
adc
or
sti
sbb
sbb
cld
gs
adc
push
test
mov
iret
push
mov
lea
and
or
mov
std
xchg
in
scas
adc
sub
scas
clc
dec
jne
fwait
cs
push
and
scas
xlat
lahf
xchg
fisubrl
cmp
xchg
in
or
xchg
das
fdivr
mov
or
adc
sbb
movsb
adc
out
mov
xchg
divl
pushl
scas
fstpl
lcall
mov
fisttpll
cltd
xchg
and
pushf
popf
sbb
xchg
jmp
frstor
or
mov
sbb
add
sbb
decl
xchg
add
iret
scas
mov
fstl
push
out
mov
dec
notl
cltd
sbb
popf
or
fstl
sbb
cwtl
out
and
mov
sbb
adc
cltd
xchg
xor
dec
scas
add
fwait
popf
cltd
sbb
call
and
lahf
out
or
mov
pop
call
das
movsb
repnz
sbb
cltd
call
push
frstor
and
popf
mov
xchg
adc
adc
sbb
lcall
jmp
mov
or
push
popf
adc
adc
mov
comiss
sbb
fwait
sbb
xchg
out
and
lcall
or
mov
adc
and
popf
cltd
sbb
add
sbb
lcall
pop
add
pop
test
push
pop
pusha
sbb
adc
xor
mov
and
loopne
das
or
sbb
fwait
movsl
or
out
mov
sbb
negb
sbb
lods
sbb
pushf
and
imul
subb
lods
pop
out
fildll
push
adc
lret
aad
mov
mov
mov
mov
mov
and
inc
outsb
das
cmc
sub
push
and
out
ret
sub
sbb
mov
imul
frstor
mov
jne
mov
fstps
mov
mov
and
icebp
inc
outsl
adc
mov
and
sti
and
aaa
icebp
stc
xchg
and
movsb
or
cmp
push
and
aaa
das
and
dec
and
adc
icebp
mov
and
jl
rcr
mov
xlat
jb
xchg
xchg
das
cmp
repz
xor
xor
push
fwait
rcrb
or
xchg
shlb
add
xlat
psrlw
push
clc
sbb
das
adc
pop
rcrl
or
repz
bound
adc
or
bound
out
mov
mov
pop
adc
test
les
and
iret
xor
or
scas
cs
popl
jno
adc
sbb
fbld
cmp
sbb
or
xchg
or
std
xchg
xchg
lcall
lcall
adc
or
outsb
cmp
sbb
cltd
std
lock
pop
mov
or
push
pop
movsb
push
mov
cmp
out
push
mov
sbb
mov
or
movsl
clc
lahf
mov
sbb
pusha
mov
mov
cmp
xchg
pop
jno
mov
in
add
jno
sbb
pusha
mov
and
roll
fsts
mov
adc
mov
inc
popf
ret
sbb
negb
scas
lret
and
scas
lahf
movsb
sbb
pop
push
mov
scas
std
or
sbb
sbb
push
subl
scas
jmp
or
push
mov
xchg
std
and
scas
scas
or
mov
mov
adc
cmp
in
mov
sbb
jl
pushf
dec
inc
mov
xor
enter
jno
sbb
lcall
leave
pop
orl
adc
stc
aam
pushf
xor
adc
mov
sbb
and
sbb
rcll
shll
sbb
or
cmp
and
jb
lcall
push
mov
inc
push
xor
scas
dec
mov
lods
movsb
out
lea
mov
sbb
sbb
sbb
pop
std
sti
cwtl
push
aam
sbb
movsl
adc
popf
mov
fisttpll
mov
or
cld
mov
fwait
test
int
mov
stc
scas
jle
push
adc
aas
pop
or
fstpl
daa
emms
dec
mov
adc
mov
popf
dec
cs
mov
sbb
xor
setnp
lcall
sub
decb
adc
mov
mov
mov
jge
and
push
xchg
popf
sbb
fwait
mov
int
fnstsw
lea
inc
sbb
mov
lcall
adc
repnz
mov
aam
sti
sbb
movsb
popf
push
jl
add
fistpl
stc
mov
mov
mov
and
cld
cwtl
mov
incl
mov
adc
sub
push
sbb
or
sbb
pop
mov
and
and
movsb
or
pop
popa
scas
cwtl
sbb
mov
jno
les
sbb
mov
jmp
out
xor
test
mov
xor
adc
sbb
push
out
mov
push
ret
jae
xor
sbb
scas
ucomiss
mov
or
adc
dec
das
jmp
scas
std
push
and
std
inc
call
pop
and
lds
std
gs
adc
push
movsl
cmp
ljmp
cmpsb
add
psrlw
sbb
pushl
inc
rolb
mov
iret
mov
sbb
out
loopne
dec
cmc
push
xchg
cs
sbb
test
cwtl
sbb
arpl
scas
addr16
cmp
mov
sbb
ljmp
out
jne
push
scas
repz
jge
clc
outsl
cmp
repz
mov
clc
push
cmp
das
movsl
ds
loope
lahf
dec
subb
cld
sbb
or
xorl
out
pop
call
std
sbb
push
andb
les
push
sarl
orl
fcomp
das
out
cmp
or
cld
mov
xor
mov
jno
dec
xchg
inc
lcall
cltd
mov
pop
add
adc
dec
push
icebp
xor
imul
xchg
pop
popa
int
xchg
in
xor
clc
xor
cmp
cmc
jge
cmp
leave
dec
aaa
sbb
jnp
dec
cli
test
jno
dec
push
mov
call
aam
jno
dec
and
outsb
push
fidivrl
leave
pop
xor
adc
adc
out
in
popf
or
sub
jo
sbb
adc
decl
fucomp
cltd
iret
xchg
mov
mov
adc
fistl
jl
enter
sti
xchg
movsl
int
scas
fnstcw
mov
icebp
mov
ja
loopne
stc
clc
js
fidivrl
cwtl
pop
mov
nop
push
inc
test
mov
pop
pop
xor
push
push
jo
inc
adc
xor
pop
cmp
lahf
adc
mov
adc
mov
popf
adc
adc
mov
push
jo
xchg
adc
rol
adc
jb
das
incl
in
and
sbb
aas
das
imul
push
insb
mov
sbb
sbb
add
adc
pop
mov
xor
and
into
push
or
fsts
fwait
adc
sub
jmp
fistpl
ja
outsl
inc
cmp
invd
inc
mov
adc
lea
adc
icebp
xchg
mov
push
mov
in
inc
jns
fsts
cltd
inc
cli
xchg
fwait
push
xlat
jecxz
vcvtps2dq
scas
cltd
cltd
pop
sahf
push
stc
cmc
enter
sbb
imul
mov
mov
test
push
in
fisttpl
jns
jmp
div
sbb
cs
sbb
loopne
push
push
adc
xchg
jle
out
cld
das
xor
leave
push
je
push
or
lock
adc
mov
fdiv
xor
mov
sbb
pushf
push
inc
and
outsl
std
hlt
and
lcall
mov
dec
and
pop
movsl
popf
arpl
add
sub
out
stos
xchg
rcr
mov
pop
cltd
lods
mov
pop
sqrtps
aas
insl
sub
add
xchg
mov
add
pushl
lea
push
sahf
and
adc
jns
push
lahf
loopne
jb
out
scas
rolb
xor
sbb
add
movsb
clc
jecxz
push
xor
cmp
mov
adc
mov
adc
jns
cltd
xor
mov
js,pn
cltd
sbb
sbb
xchg
jp
pop
jmp
adcl
adcb
cltd
movsb
inc
sub
jno
inc
and
pushf
mov
mov
jge
mov
lcall
das
lods
call
clc
mov
mov
push
leave
cli
sbb
sar
scas
xor
xchg
xor
in
xor
andl
jne
aaa
ret
notl
ss
and
fmull
cmc
ja
and
cvttps2pi
xor
ljmp
xor
dec
imulb
das
cli
jl
pop
xlat
inc
outsb
push
xchg
sbb
fucomi
dec
mov
mov
push
mov
aad
gs
jae
jecxz
scas
fistpl
cli
dec
push
sbb
fwait
call
mov
cs
adc
scas
or
jp
add
lcall
iret
dec
or
jbe
pop
sbb
dec
sbb
lea
in
rorl
call
add
xchg
sti
pop
lahf
seto
cmpsl
sub
das
xchg
setg
add
sbb
scas
mov
adc
movsl
cmp
movsl
sbb
sbb
push
fstl
icebp
and
roll
mov
mov
pop
call
and
shl
jno
sbb
popf
mov
ficomps
rclb
xor
hlt
add
mov
fimull
push
dec
adc
scas
dec
push
movsl
mov
fisttpl
pop
mov
stc
and
or
cs
push
xor
xchg
pop
and
or
and
xchg
mov
xchg
ja
mov
rorb
sbb
sbb
pop
imul
sbb
mov
nop/reserved
xchg
adc
lock
and
sbb
xchg
adc
lcall
xor
mov
test
pushf
in
shrb
pop
test
jg
mov
and
arpl
mov
stos
movsl
or
lahf
xchg
iret
or
xor
mov
jmp
mov
imull
push
iret
sahf
call
push
jg
lahf
mov
sub
push
nop
mov
mov
mov
push
rep
jle
and
sti
or
inc
fwait
iret
xchg
inc
or
enter
leave
test
mov
popf
xchg
and
sbb
cs
std
mov
push
sbb
mov
popf
inc
sbb
incl
mov
lea
add
xchg
xchg
xchg
insl
and
jp
leave
popf
in
movsl
rcrb
and
xor
add
in
in
scas
xchg
inc
adc
mov
and
mov
pop
scas
scas
les
adc
sbb
xchg
mov
lcall
and
lret
adc
mov
dec
mov
or
or
clc
xchg
scas
aad
push
inc
lcall
sbbl
or
or
notb
push
sbb
mov
and
pushf
movsb
push
inc
jp
ret
and
sbb
sbb
push
mov
lds
sub
movsb
and
scas
jle
mov
movsl
mov
fstl
out
cltd
mov
test
sbb
outsb
stc
push
jl
dec
jns
sub
movsb
inc
or
sbb
or
cltd
xor
xchg
and
loopne
jp
cmpsl
das
or
inc
or
or
adc
push
andl
out
or
and
dec
adc
mov
das
mov
push
mov
lock
and
cltd
mov
add
mov
mov
inc
out
test
lods
movsb
andl
call
adc
cs
scas
std
adc
scas
cs
mov
nop
mov
mov
loope
inc
sub
sbb
add
mov
cmp
mov
or
xor
xchg
and
push
xor
jecxz
fwait
pop
movsl
mov
mov
pushf
xchg
icebp
popa
add
add
and
sbb
mov
sbb
cmp
mov
sbb
mov
or
xchg
std
scas
pop
and
adc
lret
pop
jg
in
adc
or
inc
push
mov
adc
and
inc
popf
sbb
movsl
lret
and
add
insb
and
xor
ljmp
mov
adc
aad
cmpl
lahf
movsl
mov
and
repnz
xchg
mov
scas
imul
scas
imul
scas
sahf
fidivrl
scas
mull
addr16
mov
enter
xchg
lret
xor
into
negb
mov
leave
das
popf
aas
sti
rorb
sbb
scas
xchg
xor
rcrl
sbb
mov
fldt
shlb
xor
int3
imul
cli
or
sbb
les
sbb
cli
das
xchg
ds
xchg
cwtl
std
std
stc
and
pop
jge,pn
std
add
adc
jns
jmp
and
pop
push
gs
push
mov
lcall
cld
enter
comiss
xor
push
addr16
fcompl
ret
or
adc
cltd
cwtl
sbb
inc
lret
clc
clc
and
cs
sbb
fwait
add
vcomiss
xor
xchg
and
cmc
pop
xchg
push
adc
test
push
pop
xchg
nop
cmp
xchg
and
mov
mov
sub
call
or
add
popf
out
mov
push
xor
jecxz
mov
and
icebp
and
enter
aas
xchg
xor
xchg
add
pop
test
loope
das
push
call
popf
mov
sbb
imul
pop
xchg
loope
sbb
popf
cltd
iret
mov
mov
sbb
pop
shll
enter
test
inc
wrmsr
test
mov
mov
scas
or
mov
xchg
adc
mov
popa
das
mov
aas
orl
cmpsl
xor
mov
push
cmp
cmp
rcr
adc
das
ret
jg
mov
push
aaa
sbb
cwtl
scas
mov
bound
push
lea
xchg
bound
and
mov
lea
mov
bound
scas
xchg
add
xchg
mov
mov
xchg
cld
movsb
and
iret
or
sahf
add
leave
sbb
cmp
or
mov
das
mov
xchg
out
movsl
pop
sbb
fnstcw
int3
inc
scas
loopne
enter
cld
sbb
mov
lcall
lock
sarb
scas
jns
loopne,pt
das
push
jns
mov
scas
pop
fdivs
adc
and
test
rcll
sub
mov
pop
cld
bswap
das
pop
nop
push
mov
xchg
adc
lods
pop
rorl
adc
adc
into
sub
or
mov
adc
or
mov
push
sti
mov
and
mov
cltd
mov
das
xchg
es
xor
add
dec
cs
pop
push
add
add
xchg
add
repnz
push
push
adc
sbb
cltd
pop
push
and
cwtl
incb
push
movsb
cmp
xchg
push
cmp
negb
mull
mov
cmp
ds
cs
adc
fstl
xchg
dec
xor
xor
lea
and
or
add
aas
mov
movsl
adc
repz
adc
sbb
pushf
cmp
cs
cli
xchg
adc
sbb
xchg
popf
movsb
sbb
mov
sbb
pop
jne
sbb
gs
adc
mov
hlt
outsl
sti
divl
pop
jp
sbb
cs
sbb
or
inc
xor
lock
das
scas
shll
sbb
sub
mov
movsb
pop
shll
les
xchg
scas
jb
std
out
xor
mov
adc
adc
adc
outsb
std
das
subb
icebp
aad
subb
mov
sbb
mov
lahf
xorb
and
movlps
test
jl
aas
or
movsl
pusha
leave
mov
scas
inc
iret
std
push
mov
add
stos
mov
imull
cmp
call
and
sbb
sti
xchg
prefetchw
mov
pop
inc
cmp
lahf
push
mov
or
negl
inc
xchg
cld
or
or
seta
sahf
cmp
push
cltd
and
dec
sbb
or
negl
dec
add
aam
sahf
mov
cli
les
enter
pop
cmp
push
lret
das
aaa
cli
cs
cmp
adc
sbb
cmp
push
mov
fbld
cld
mov
adc
gs
std
cmp
add
rcrb
and
test
xchg
adc
adc
popf
add
push
adc
pop
dec
enter
aaa
mov
scas
sahf
adcl
mov
mov
or
pop
jns
bound
movsl
movsl
stos
popf
sbb
js
xchg
adc
xchg
and
xchg
fisttps
jbe
mov
sub
and
push
lds
mov
insl
pushf
notb
insl
and
mov
or
dec
and
adc
mov
add
push
pop
psubusw
loopne
scas
leave
xchg
and
fldenv
pop
mov
dec
pop
inc
enter
mov
cli
or
scas
mov
mov
scas
xsaves
enter
rcrl
mov
adc
or
pop
aam
mov
pusha
icebp
mov
pop
rcrl
mov
sbb
mov
fsubr
push
and
sbb
pop
pop
rclb
and
xor
outsl
cltd
push
or
xchg
cmp
lods
movsb
popf
xchg
pop
pop
xchg
pushf
lret
scas
mov
cltd
inc
mov
jg
sub
sbb
movsl
jmp
xchg
sbb
popf
adc
jbe
xchg
pop
xchg
xlat
dec
fs
pop
xor
in
mov
jle
andl
out
xor
out
and
dec
pushf
xor
adc
out
jns
shl
sbb
pop
cwtl
out
xchg
cmp
xchg
test
mov
xchg
mov
inc
xor
jb
test
or
push
pop
mov
mov
sbb
sbb
mov
inc
mov
out
mov
nop
sbb
adc
pop
pushf
dec
mov
dec
and
cmpsb
movsb
std
icebp
aad
fdivp
and
sbb
or
faddp
sub
cmp
push
lcall
push
ja
movsb
jnp
push
and
sbb
test
push
movsb
ret
inc
pop
movsb
and
das
aas
inc
movsb
das
scas
repz
scas
cmp
scas
mov
and
mov
cmpsb
movsb
mov
lcall
and
xchg
cli
cs
push
pop
sahf
pop
and
push
out
pop
sahf
repnz
adc
mov
pushf
jle
jge
shl
mov
sub
adc
sbb
cmp
adc
adc
push
adc
mov
and
nop
aad
pop
sti
popf
out
nop
ljmp
fwait
pop
leave
movsl
cmc
xchg
pop
xchg
pop
and
push
mov
pop
sbb
mov
sbb
fbld
inc
or
cs
out
inc
or
lock
sub
cli
pop
jns,pn
push
and
dec
aad
sub
dec
cld
mov
mov
sbb
rcrb
or
sbb
or
adc
or
pop
sti
push
adc
or
pop
fcomps
and
and
push
movsb
cs
in
insl
adc
adc
adc
iret
push
or
xchg
xor
push
int
adc
into
and
inc
and
push
or
add
inc
mov
rcll
add
xor
mov
push
fnstsw
inc
out
ret
popf
inc
sbb
cmc
jl
mov
enter
xchg
adc
xchg
insl
cwtl
lds
pop
fsubrs
cmp
and
lock
movsl
mov
lea
mov
movsl
push
fsubs
pop
and
fcompl
and
fsts
aas
sub
leave
adc
add
movsb
inc
mov
mov
lahf
or
mov
mov
push
cwtl
aam
pushf
inc
pop
xchg
mov
mov
mov
lea
or
lahf
xchg
ds
mov
mov
dec
movsl
xlat
xchg
scas
lret
cltd
sbb
jge
lods
inc
scas
inc
pop
cltd
decb
in
mov
xchg
lahf
insl
xchg
mov
and
mov
insl
movsl
xchg
fimuls
xor
sbb
and
insl
inc
imul
and
sahf
jl
mov
clc
sbb
xchg
push
jge
pop
jne
in
mov
xchg
int
jg
jle
in
test
fidivrl
and
xchg
in
mov
jg
insl
fsts
jne
in
jns
jg
jge
jno
cwtl
xchg
cmp
push
mov
adc
jle
lcall
cld
xor
lcall
inc
xor
rcrl
insl
leave
or
and
cmp
xchg
leave
sbb
xchg
sbb
outsl
cmovp
mov
in
mov
mov
mov
lods
adc
fsubrs
pop
pop
adc
cltd
stc
sub
mov
sbb
mov
loopne
jg
xor
clc
out
lret
pushf
adc
sub
mov
outsl
je
mov
or
and
das
adc
pushf
sub
movsl
fwait
ljmp
sbb
inc
push
repnz
sbb
lods
xchg
pop
pop
mov
xchg
xchg
das
aad
and
mov
pop
adc
and
sbb
mov
mov
push
or
lcall
mov
das
adc
or
xor
xchg
mov
push
xor
adc
and
and
adc
push
xchg
sbb
lahf
adc
cwtl
les
aaa
lahf
or
mov
xchg
fists
dec
orb
cwtl
scas
push
std
movsl
mov
mov
movsb
add
cltd
jp
xchg
pop
movsl
xor
mov
decb
push
adc
xchg
clc
push
adc
sbb
sub
sbb
adc
in
xchg
cmp
sbb
xor
cld
je
adc
mov
mov
in
xchg
sub
or
fildl
psubb
adc
in
xor
cs
iret
or
xor
add
and
dec
mov
shlb
iret
xchg
xor
dec
mov
jmp
scas
outsb
jge
sub
ljmp
lcall
sbb
scas
adc
adc
mov
mov
cld
lcall
inc
inc
xor
or
dec
sbb
jne
sub
movsb
fmuls
stos
xchg
out
xchg
adc
xchg
aas
jmp
jo
das
pop
or
jo
mov
jmp
movsl
aaa
scas
movsl
jle
popf
mov
movsl
jmp
xchg
lret
push
xor
mov
jmp
cltd
lret
mov
or
pop
mov
dec
xchg
iret
repz
iret
popa
idivl
sahf
cmp
fwait
das
push
lret
in
mov
dec
and
sbb
mov
push
stos
cs
call
mov
lcall
push
std
je
aad
outsb
mov
adc
push
outsb
mov
sbb
mov
movsl
popf
hlt
mov
mov
xor
and
pop
pop
pop
jno
xchg
imul
sbb
jno
dec
cmp
mov
and
outsl
mov
mov
popf
push
sbb
imul
mov
sub
mov
mov
aad
cs
pop
xchg
xchg
and
pop
pop
repz
mov
pop
movsl
lock
popf
mov
adc
lahf
mov
pop
cld
mov
jge
and
sub
xchg
jge
jne
sahf
and
inc
and
pushf
mov
mov
or
sbb
scas
popl
xchg
or
mov
mov
lcall
xor
push
inc
sti
or
mov
pop
enter
pop
mov
pop
movsl
das
lcall
cltd
or
lret
jge
cmc
out
test
rorb
popf
movsl
nop
xchg
pop
pusha
mov
in
inc
mov
mov
mov
add
stos
call
sub
cmpsb
cltd
xor
movsb
mov
out
mov
inc
sbb
incl
lods
cltd
sub
fstl
mov
sbb
mov
movsl
or
in
enter
sbb
xchg
mov
jg
lea
fsts
aad
aas
cwtl
testb
enter
adc
and
pop
adc
mov
mov
and
push
dec
loopne
and
movsl
movsl
mov
push
movsl
stos
loopne
or
adc
cld
pop
cwtl
inc
cld
xchg
stos
scas
cltd
das
out
adc
pop
adc
and
movsb
push
enter
loopne
mov
inc
cltd
adc
sahf
movsl
loopne
lods
scas
xchg
mov
xchg
mov
movsb
jg
enter
jne
mov
std
addr16
adc
mov
lcall
xchg
aaa
push
mov
push
clc
cwtl
sahf
popf
and
and
jge
jp
imul
aas
cwtl
push
sbb
loopne
xchg
sbb
movsl
or
pop
dec
iret
and
aad
jg
lahf
xchg
xchg
push
or
shrb
sub
dec
or
std
push
jns
imul
or
scas
mov
mov
mov
xorl
lock
mov
lret
mov
push
mov
or
imul
xchg
or
fcoms
flds
xlat
cmp
shrb
xchg
shlb
in
sbb
sub
pop
mov
cmpl
outsl
or
push
ja
xor
leave
cwtl
dec
mov
in
push
into
cs
lock
cmp
outsl
mov
pop
adc
icebp
adc
mov
sbb
xchg
cmp
xchg
imul
jle
pop
xor
or
cmc
scas
mov
cs
add
push
setg
xor
and
loopne
mov
out
mov
pop
mov
mov
sbb
aad
iret
sbb
mov
and
fisttpl
and
xchg
aas
xor
or
and
mov
mov
jg
fldcw
repz
mov
std
mov
into
mov
xor
scas
push
mov
aas
mov
inc
sbb
adc
xor
xchg
jmp
add
pop
pop
sti
mov
mov
xor
sbb
jnp
and
cwtl
jmp
adc
insl
sbb
xchg
das
scas
xchg
and
mov
mov
fistl
adc
xchg
cltd
leave
sbb
roll
or
and
or
cld
movsb
sbb
sbb
into
xor
mov
cmc
jo
sbb
mov
sbb
mov
mov
cs
adc
movsl
jmp
add
or
sti
xchg
xchg
xchg
outsl
movsl
call
lods
xchg
pushf
adc
das
rcr
adc
adc
sbb
sbb
cs
and
and
xchg
and
mov
cltd
or
pusha
mov
add
pop
adc
jmp
or
push
cmc
xchg
outsb
fildl
add
mov
mov
xor
sbb
push
dec
pop
das
inc
mov
and
mov
sti
xchg
mov
cs
pop
mov
sbb
daa
and
adc
mov
ds
cwtd
push
icebp
insb
adc
push
repz
mov
prefetchwt1
sahf
sbb
loopne
mov
mov
mov
inc
mov
fs
std
js
ljmp
lock
lds
stc
and
addr16
idivl
pop
sbb
and
cltd
jnp
pop
andl
movsb
popa
pop
or
test
xor
cmp
push
mov
add
lods
gs
test
jg
add
sbb
aaa
xchg
jecxz
fstpt
mov
repz
movsb
loopne
push
outsb
pop
xlat
or
loop
jo
movsb
add
test
xchg
andl
popl
mov
ret
lcall
pushf
mov
lahf
cmp
jnp
out
and
loop
cmp
mov
xor
ret
mov
adc
lret
mov
jo
movsl
andb
pop
and
jl
push
xor
cmp
jb
or
fisttpl
imulb
lock
stos
push
and
fs
lret
clc
inc
adc
sbb
xor
xor
push
repnz
add
loope
jecxz
inc
pusha
stc
loop
mov
mov
pop
adc
jmp
mov
mov
pop
xor
rolb
add
mov
pop
cltd
cmp
mov
mov
push
fwait
jo
lds
mov
lods
out
in
mov
adc
pop
pop
inc
into
stos
fmull
mov
cmpsb
xor
addl
push
cmpsb
jo
xchg
cmp
lods
enter
jbe
in
jbe
movsb
or
and
push
dec
mov
mov
sbb
mov
int3
lock
xchg
andb
fcoml
sbb
test
or
jp
xchg
rclb
sbb
mov
sahf
pop
cwtl
jecxz
ret
adc
inc
lock
push
popf
test
sbb
sbb
lds
mov
inc
movsl
lods
inc
xchg
adc
cli
sbb
rcrb
cmp
rclb
cltd
adc
imul
orb
mov
je
lahf
jg
mov
mov
mov
les
cmpsb
test
sbb
sti
lock
sbb
in
adc
fistpl
mov
leave
adc
pop
cltd
ret
in
pop
popf
out
sbb
ret
cs
faddl
pop
adc
push
cmp
mov
sub
and
fiaddl
inc
std
fucom
lea
cmc
inc
out
pushl
sbb
cwtl
pop
xchg
add
or
fsubrp
and
lods
fsubs
adc
jecxz
push
xor
xor
sbb
xchg
sbb
jmp
push
test
mov
mov
stc
pop
cmpsb
sbb
cmp
mov
adc
adcb
mov
dec
adc
imul
push
adc
mov
sbb
xor
rclb
scas
xor
sahf
lret
aad
out
or
outsb
out
mov
lea
xchg
mov
pop
icebp
pop
add
pop
pop
sbb
and
mov
fisttpl
imul
lods
jnp
stc
mov
pop
push
fwait
movsb
cltd
sbb
or
xor
repnz
into
xor
or
pop
test
mov
xlat
xchg
pushf
pop
mov
mov
xor
mov
add
sbb
loop,pt
xlat
jo
sbb
jns
and
popl
add
push
or
std
or
mov
faddl
orl
or
add
pop
or
push
popa
nop
add
or
sti
pop
out
std
push
leave
das
push
xorl
fistps
clc
insl
mov
out
jo
movsl
push
out
mov
js
or
decl
jo
mov
adc
sbb
fdiv
lea
mov
nop
mov
or
mov
add
sbb
jle
lcall
sub
dec
lcall
std
mov
and
cwtl
mov
mov
jno
mov
adc
and
cs
inc
jbe
addl
scas
daa
cs
sub
das
pushf
cmc
sbb
gs
orb
xor
inc
pop
inc
mov
mov
cwtl
xchg
sbb
pop
js
movsb
lods
cwtl
iret
pop
inc
stc
in
mov
sbb
mov
sbb
pop
frstor
adc
add
mov
jmp
fisubl
outsb
jbe
inc
rcrl
add
xlat
push
mov
movsl
inc
dec
xchg
cmpsb
cwtl
adcb
out
std
and
mov
movq
insl
xor
sbb
mov
and
ret
mov
cld
lcall
out
and
out
jo
or
fstpl
push
xor
mov
into
push
sbb
push
movsl
lea
ds
mov
enter
xlat
ret
xchg
mov
push
scas
mov
sahf
jne
movsl
cmp
add
subb
cmc
sbb
jne
cmp
decl
mov
push
mov
cli
xchg
das
mov
or
xchg
fxch
iret
mov
mov
fwait
mov
xchg
xchg
or
dec
add
add
pop
clc
mov
js
pop
xchg
setl
jo
sbb
pop
push
push
xchg
and
push
out
std
adc
and
mov
test
lahf
mov
xchg
out
std
xchg
mov
or
mov
or
int
scas
pop
sbb
xor
movsb
inc
in
fucomip
add
jle
test
pop
xchg
sub
pop
jns
sbb
rolb
mov
cwtl
das
xor
shrl
scas
cmp
shl
mov
cli
mov
dec
sbb
xchg
mov
mov
xchg
stc
jg
xchg
sbb
cltd
sbb
cwtl
inc
sahf
sbb
mov
mov
das
das
sar
sbb
pop
test
inc
adc
mov
mov
mov
jo
add
inc
pushf
fisubrs
addb
scas
orl
fsubl
test
das
loopne
das
xchg
push
adc
mov
xchg
pop
xchg
cld
xchg
jecxz
pop
nop
inc
cs
and
xor
lcall
adc
das
sbb
and
add
jge
into
push
sbb
pushf
cwtl
movsl
xchg
adc
pop
fs
xchg
mov
mov
sub
xor
sbb
arpl
je
sbb
cmovs
mov
popf
mov
popf
in
mov
std
lcall
das
enter
inc
decb
shll
pop
xor
lods
inc
push
mov
arpl
pop
das
in
xlat
sbb
shll
ja
mov
push
xor
and
pop
hlt
in
and
scas
xchg
pusha
sub
sbb
and
dec
xor
in
push
stc
cmp
xor
lods
pop
js
add
mov
cmpsb
jmp
pop
and
cli
push
xchg
and
add
clc
aas
ret
movsb
push
mov
in
lea
int3
bound
not
push
or
and
sbb
mov
push
adc
mov
xchg
das
cwtl
xor
add
sbb
loope
gs
scas
sbb
and
mov
pushf
sbb
jo
dec
or
adc
scas
std
mov
cs
mov
shlb
popf
xchg
jge
xor
out
icebp
or
sbb
adc
outsb
outsl
test
into
xchg
push
jns
pop
int3
out
cmp
dec
iret
adc
mov
xor
fstl
xchg
inc
scas
loopne
push
cltd
inc
or
orl
pop
mov
cmp
and
movsl
adc
into
cltd
cs
lods
push
scas
and
adc
mov
sbb
cs
xor
nop
cmc
cwtl
mov
push
sbb
fisttpl
mov
icebp
or
shl
or
iret
pop
je
sbb
pop
nop
mov
or
or
push
sbb
and
add
sbb
jne
adc
iret
inc
lahf
and
sahf
sub
sub
and
and
cs
mov
mov
mov
adc
cmc
cmp
inc
icebp
ret
mulb
stc
sarl
inc
fmuls
fiaddl
pushf
sbb
pop
adc
les
adc
xchg
pop
mov
jb
out
popf
fbstp
xchg
mov
fs
xchg
sub
mov
loope
jb
mov
movsb
xchg
divl
lds
loope
xchg
or
inc
and
gs
aaa
push
dec
cmp
sbbl
loope
movsl
cltd
xor
in
ret
push
xchg
or
test
pop
mov
cwtl
and
repz
xchg
lret
sbb
stc
hlt
fildl
inc
jecxz
add
xabort
pop
ja
mov
outsb
xor
sahf
popf
mov
lcall
jno
jg
rclb
xchg
pushf
pushf
adc
shlb
mov
inc
mov
fisubrl
sbb
icebp
or
shl
inc
push
and
or
das
jle
pop
add
push
mov
aaa
xchg
and
cmp
mov
cli
test
lock
sbb
add
fldl
and
mov
push
sbb
xchg
pop
sub
lock
popa
outsl
in
sub
push
dec
outsl
fildl
dec
sbb
xchg
fs
push
mov
mov
jge
xchg
dec
add
mov
std
mov
cwtl
mov
pop
pop
das
cwtl
rcr
divl
xchg
sti
mov
shll
fisttpl
pop
pop
pop
outsl
mov
or
push
xchg
xchg
cltd
lcall
fcomp
cltd
popf
gs
scas
mov
fwait
mov
and
dec
ja
icebp
paddusw
out
xchg
fstps
mov
push
or
push
lcall
clc
jmp
fs
mov
or
ja
mov
sbb
in
adc
push
sbb
subb
cmc
sbb
and
hlt
cli
lret
lahf
lret
mov
sbb
pop
cwtl
arpl
sbb
or
jo
or
adc
cli
hlt
cmp
sbb
std
push
mov
sbb
hlt
and
iret
iret
rorl
aad
test
xchg
mov
pop
adc
sahf
adc
sbb
stos
scas
fadd
pop
jnp
and
push
movsl
cmp
mov
gs
out
dec
icebp
fcompl
xor
xchg
idivb
mov
decb
in
inc
psrad
leave
sub
sbb
out
call
movsl
fwait
pop
icebp
cmc
enter
aaa
xor
pop
and
mov
cs
shrb
aam
push
sbb
sbbl
xor
addb
mov
js
or
popa
cmp
mov
push
lock
pop
mov
bound
popf
shlb
test
test
xchg
mov
imulb
mov
sbb
loopne
cmc
call
or
mov
mov
add
leave
rclb
aas
mov
test
mov
or
dec
fistpl
jo
scas
sbb
fstpl
fstpl
cli
cltd
sub
sbb
dec
aas
rolb
dec
pop
and
testl
cmp
xor
cld
xor
add
cmp
les
sbb
dec
fimuls
pop
sub
xchg
out
sar
cmc
jge
in
push
imul
pop
xor
imul
mov
sti
or
adc
popf
cmp
idivl
gs
mov
sub
insl
mov
mov
cltd
popf
xchg
xor
movsl
jge
cmp
divl
sbb
outsl
popa
pop
and
push
pop
add
fcmovb
out
or
cli
sbb
mov
sbbl
fidivs
clc
cmp
mov
shll
lock
xchg
cs
nop
negb
cmpsb
inc
mov
ds
lahf
add
sub
fcmovu
ret
sbb
cmp
cwtl
adc
fisttps
cs
movsl
inc
test
pushf
inc
pop
and
xchg
cmpsl
sbb
aam
jl
mov
jecxz
xlat
jno
movsb
push
add
or
or
imul
and
movsb
and
push
pop
and
int
push
mov
sahf
cmp
pop
sbb
popf
dec
pop
adc
ja
and
sbb
add
pop
stos
pop
lahf
jle
lock
in
pop
sbb
pop
push
icebp
lds
popf
pushf
pop
or
fcoml
mov
inc
pop
add
jo,pn
sbb
in
in
mov
and
loopne
pop
loop
cwtl
sahf
mov
pushf
popf
pop
fcoml
xlat
lahf
pop
lcall
and
xlat
js
flds
lock
jecxz
xchg
mov
lret
out
mov
jecxz
std
arpl
cltd
icebp
movsb
inc
mov
movsl
sbb
cmp
cmp
push
adc
nop
pop
std
xor
pop
xchg
sbb
cltd
jg
mov
jge
mov
sbb
mov
loope
mov
and
add
cmpsb
and
stc
fwait
sub
fistl
lcall
fcompl
lea
not
sbb
mov
lea
fyl2x
xor
movsb
negb
int
mov
pusha
xor
lock
popfw
lock
fxch
stc
sbb
pop
cld
sub
pop
iret
cs
inc
mov
cltd
mov
pusha
mov
adc
lods
mov
lock
or
cmp
fildll
dec
mov
repz
pop
shrl
inc
test
in
push
sbb
adc
pop
add
in
movsb
adc
inc
inc
push
adc
mov
add
jbe
pop
test
aaa
out
repnz
std
or
pop
leave
push
xlat
sbb
les
push
and
mov
enter
pop
iret
and
ljmp
loope
adc
icebp
mov
sbb
adc
adc
dec
xchg
cmp
xchg
popf
test
inc
pop
scas
cltd
outsl
movsl
in
aam
and
pushf
outsb
mov
xchg
jge
fdivl
outsl
push
jae
hlt
xor
pop
mov
data16
les
add
sarl
shrd
push
loope
cwtl
push
hlt
adc
in
xchg
pop
sbb
dec
or
xlat
ja
add
xor
sbb
std
movsl
movsb
adc
mov
xor
movsb
adc
test
jle
cmc
xchg
clc
dec
pushf
dec
pop
movsb
add
pop
pop
lds
mov
lcall
mov
fwait
mov
sbb
dec
lea
or
jae
xchg
scas
aas
sbb
popf
cmp
std
pop
sti
mov
aad
sahf
adc
push
cli
not
cwtl
and
push
pop
jle
notl
pop
mov
ret
das
pushf
icebp
cmp
jae
pushf
pop
call
das
sbb
xlat
pop
sbb
push
push
pop
fnstcw
insl
and
jno
jb
inc
test
bound
pop
loopne
pop
cmp
out
cmpsl
enter
mov
sbb
loopne
pop
or
sti
add
popf
mov
bound
fs
xchg
xchg
lret
icebp
jge
ret
pop
sti
inc
int3
mov
fidivl
cwtl
outsl
cwtl
das
sbb
pop
rcrb
and
pop
xor
push
and
inc
dec
gs
sbb
cmp
stc
fisttps
pushf
adc
ficompl
pushf
sub
dec
lcall
lahf
pushf
and
adc
icebp
xchg
pop
in
scas
pushf
fsubl
or
cmp
dec
jg
xlat
out
pop
fsts
sbb
cltd
das
xlat
sbb
sbb
jmp
in
sbb
jno
popf
out
or
repnz
rcrb
mov
imul
fisttpll
mov
enter
and
xchg
movsl
xchg
add
xchg
test
fcompl
fndisi(8087
dec
fsts
jecxz
or
mov
icebp
in
ret
dec
mov
mov
xchg
jg
and
or
movsb
aam
addr16
xchg
inc
fsubrl
ss
and
sub
pop
cld
or
or
xchg
sbb
int
sbb
jns
adc
int3
mov
and
xlat
pop
add
pop
das
mov
xchg
sbb
mov
fcmovnbe
push
test
pop
push
out
push
xchg
pop
mov
loop
loopne
jae
mov
push
pop
rcrb
outsb
cmpsl
mov
fistpll
mov
cmp
xchg
or
out
popf
enter
stc
and
sbb
pop
add
and
rolb
js
fwait
mov
out
adc
xchg
cs
dec
mov
push
xchg
sarl
sahf
dec
sbb
and
mov
xchg
pushf
push
cmp
loopne
pop
xor
dec
loope
dec
cltd
cwtl
pop
pusha
pop
mov
rorb
cmp
cwtl
arpl
and
mov
sbb
stos
test
ret
test
arpl
movsb
xchg
mov
and
lock
ret
push
lods
jge
in
push
lea
mov
lods
dec
imul
movsl
pop
test
add
and
repnz
frstor
xchg
lods
mov
je
fsts
adc
lea
add
or
push
jg
and
or
inc
mov
shlb
cltd
cmp
mov
hlt
xchg
xor
cmp
sub
or
pop
jo
cwtl
xor
add
jns
adc
add
inc
clc
and
and
xor
sets
mov
popf
in
jmp
mov
scas
cmp
call
orl
xchg
imul
pushf
xor
or
shl
jns
fisubl
pop
xchg
les
adc
adc
or
pop
stos
loopne
sub
and
lock
jmp
push
cltd
rorl
mov
imul
gs
xchg
pop
xor
xlat
pop
scas
cwtl
inc
mov
test
movsl
cpuid
adc
adc
mov
arpl
inc
lahf
aad
mov
cwtl
xchg
int3
inc
pop
mov
push
pop
jae
mov
incb
cmp
sbb
cs
adc
pop
add
mov
scas
cltd
popf
sbb
rclb
add
cwtl
add
insl
sbb
push
cli
pusha
lea
cli
mov
jns
and
aam
xor
dec
cmp
test
js
mov
cli
arpl
stos
and
jo
repz
stc
or
mov
sahf
fldt
mov
and
pop
mov
je
sbb
dec
or
popl
scas
or
loop
ret
mov
xchg
mov
mov
xor
mov
pop
fisubl
mov
xchg
fimuls
outsb
jge
xor
xor
je
test
xor
cmp
mov
xor
add
cli
mov
mov
dec
mov
sub
xchg
imul
rclb
test
inc
fcompl
xchg
lret
mov
xchg
ss
js
and
mov
insl
cmp
lahf
cmp
ret
jnp
push
sti
cmp
leave
pop
fwait
cltd
nop
pop
mov
dec
scas
cmc
fldenv
loope
lahf
test
add
in
cs
mov
pusha
push
sbb
daa
push
push
xchg
and
shlb
cmp
jo
pop
push
sarl
neg
xor
cltd
pushf
jle
cmp
stos
icebp
lods
mov
addr16
or
or
xor
lret
mov
cwtl
add
mov
mov
xor
jle
jae
nop
icebp
or
mov
dec
or
lret
mov
jb
adc
sub
int3
mov
mov
mov
cmpsl
pop
pop
xor
adc
pop
mov
sbb
imul
and
pop
out
push
clc
pop
or
out
mov
dec
pop
xor
jne
add
data16
ret
mulb
movsb
xor
mov
xchg
mov
sub
inc
lahf
in
das
cltd
movsl
test
imul
mov
hlt
mov
hlt
into
sbb
jo
or
and
jg
adc
js
pop
pop
and
jg
cmp
mov
pop
repnz
cmp
fcompl
sbb
pop
xchg
or
xchg
mov
xchg
cmp
pop
in
lea
jl
lcall
mov
jge
add
mov
adc
cld
mov
mov
xchg
adc
dec
int3
cld
sbb
rclb
and
addl
mov
arpl
xlat
andl
pop
cltd
mov
mov
and
sbb
jge
push
pop
scas
mov
xor
mov
add
outsl
adc
inc
mov
rcll
push
sbb
push
mov
sbb
inc
push
fidivrs
mov
or
and
das
int
pop
shll
and
jl
shll
adc
les
push
and
data16
movsl
dec
adcl
or
adc
test
sbb
jmp
scas
gs
les
mov
mov
and
std
dec
mov
xor
xlat
int
pop
push
std
leave
andl
std
not
leave
jns
scas
ja
and
mov
mov
inc
pop
fwait
sarl
mov
cli
mov
fs
in
rcr
addr16
test
sbb
gs
mov
cmpsl
ficoms
out
or
cld
add
xchg
icebp
scas
aas
rcl
jns
xor
mov
testl
mov
fwait
xor
and
add
xor
and
out
sbb
xchg
lea
jo
nop
imulb
pop
mov
xchg
sbb
and
mov
xchg
das
jg
pop
or
aas
add
addl
test
and
pop
mov
outsb
pop
shll
fistps
jmp
stc
pop
add
pop
push
rclb
add
mov
add
icebp
sbb
das
in
mov
out
and
mul
scas
fwait
xchg
sbb
leave
cli
jecxz
testl
out
into
xlat
fs
scas
fstps
das
shl
testb
lock
pop
outsl
pop
jo
or
sbb
andl
xchg
and
fs
mov
lahf
mov
arpl
in
aaa
sbb
fwait
mov
notb
loopne
stc
scas
adc
xlat
imulb
cld
repz
xchg
sbb
out
scas
popa
cmp
mov
mov
sbb
int3
loopne
scas
adc
leave
push
scas
push
pushf
mov
lock
das
leave
fs
fldcw
scas
das
pop
cltd
cld
sub
ror
scas
lods
pusha
mov
xor
repz
sub
icebp
sub
aad
sahf
mov
das
xchg
push
sbb
sub
out
xor
lahf
jge
stc
loope
xor
inc
adc
xor
imul
mov
test
jmp
fdivl
mov
xchg
jnp
adc
mov
fwait
pop
push
sbb
iret
cwtl
loopne
pushf
jno
xchg
sbb
js
cwtl
in
sti
scas
mov
data16
cmp
cld
cli
lcall
sti
sahf
inc
cld
xchg
jne
pushf
mov
dec
adc
sub
or
xor
fistpl
inc
fcmove
in
fldt
das
push
imul
aas
xor
mov
sbb
cmc
nop
loope
sbb
sbb
and
push
iret
push
lcall
cltd
pop
inc
add
mov
cmp
xchg
sbb
ss
mov
pushf
popf
mov
sbb
or
mov
lea
and
jne
lcall
scas
cmp
enter
rorl
sbb
icebp
pop
lds
add
push
jge
mov
movsb
nop
test
and
jecxz
push
sbbl
add
loop
cwtl
movsl
fcos
cltd
adc
mov
nop
fdivrs
push
cwtl
fdivp
pop
jmpw
jmp
mov
push
adc
mov
insl
xor
fwait
icebp
mov
push
aad
adc
les
sub
cld
pushf
lock
imul
call
add
xchg
and
rcrb
push
jmp
scas
cltd
jo
fsubl
and
or
mov
mov
scas
xchg
outsl
test
jg
xor
jne
movsl
mov
inc
lds
outsb
scas
adc
xlat
stmxcsr
jne
int3
mov
pusha
jno
and
pop
jl
fwait
movsl
andb
scas
or
xchg
sbbb
dec
or
push
xchg
mov
jo
cld
cs
sbb
mov
xchg
sbb
and
sbb
jno
dec
cmp
pop
test
mov
aad
mov
sbb
das
insl
lods
sbb
jne
jne
sub
and
dec
scas
xchg
cmp
sub
pop
and
in
mov
scas
xchg
insl
fwait
mov
jg
arpl
pop
mull
pop
inc
dec
cmpsb
fsubrl
xlat
rcrl
int
addb
outsb
pushf
out
pop
pop
in
lock
popf
or
and
push
popf
pop
inc
cwtl
xlat
cmp
or
mov
cs
push
xchg
roll
ds
pop
jle
or
mov
jo
pop
icebp
mov
bound
fdivr
mov
pop
or
fwait
pop
das
enter
jne
fcomps
sbb
lcall
mov
push
cmpsl
insb
sbb
out
inc
leave
cmp
aas
shrb
fisttpll
cmp
and
sar
pop
loopne
jp
adc
mov
cltd
push
pop
das
or
out
mov
shll
std
fwait
inc
movsb
std
cli
sub
dec
xor
lock
jle
in
hlt
xchg
mov
inc
clc
fcmovnu
je
sbb
int
cs
and
xlat
jmp
cwtl
jmp
xchg
jl
pop
or
insb
gs
xchg
xlat
fwait
sbb
cmp
das
lret
mov
das
hlt
in
adc
add
mov
movsb
das
jns
pop
cmp
and
xchg
mov
xchg
cmp
sbb
icebp
insb
xlat
ret
cli
inc
add
and
and
mov
mov
xchg
scas
stc
enter
jne
jns
jnp
xchg
cli
decb
and
and
or
ljmp
aaa
jo
mov
shll
adc
shl
pushf
mov
repnz
mov
dec
mov
enter
mov
das
and
inc
psllw
aad
andb
fcmovne
jl
repnz
into
mov
mov
int
out
outsl
scas
out
sub
movsl
mov
adc
popa
xor
jno
testb
jg,pn
cs
js
in
xlat
fists
adc
cmp
nop
ret
sbb
sbb
mov
push
fs
jno
popa
xor
or
inc
fnstcw
ret
fwait
or
cs
les
sbb
jae
sbb
fwait
and
jle
scas
scas
out
xlat
lcall
fisttpll
mov
sbb
jg
mov
and
outsb
imulb
outsl
push
jg
and
cwtl
and
mov
cli
pop
test
mov
aad
dec
out
inc
test
sbb
xor
inc
fsubl
mov
fsubrs
cmp
or
out
dec
ljmp
popf
add
inc
sbb
stc
mov
mov
add
sbb
les
and
fnsave
pop
pop
fstps
icebp
ret
pop
std
stc
cld
test
out
jno
mov
loopne
es
imul
sahf
pusha
enter
mov
xlat
inc
in
sbb
loope
add
loope
and
insl
xchg
cld
lcall
sbb
inc
cwtl
popa
pop
mov
and
and
sahf
adc
dec
sbb
cltd
jg
fs
test
add
pop
xchg
or
pusha
mov
jecxz
setl
fmull
stc
and
add
push
outsl
and
push
stc
aad
or
fsubr
cwtl
invd
or
xchg
push
push
mov
sub
push
pop
test
rcrb
aaa
cmp
sbb
data16
dec
push
or
adc
das
cmc
or
test
pusha
xchg
les
aam
sbb
repnz
and
mov
scas
scas
sub
notb
shlb
xlat
sti
pushf
mov
mov
fstl
scas
jg
lods
sbb
out
jp
lock
popf
jno
test
mov
mov
mov
lock
adc
inc
sbb
fcmovb
cltd
dec
cmc
add
push
aas
scas
pop
push
aaa
mov
pop
ljmp
out
not
cwtl
sbb
js
aam
out
sbb
push
pop
fdivrp
push
xor
xchg
mov
pop
popa
jbe
dec
enter
mov
xchg
xchg
push
pop
sbb
mov
mov
shll
out
xlat
and
mov
and
loopne
and
pop
dec
mov
std
sbb
ficompl
jo
xchg
sub
sbb
icebp
out
and
cmp
mov
insl
sbb
inc
scas
sub
fcompl
fldenv
mov
mov
fistpll
sbb
xlat
or
or
cmc
cmpsb
push
xor
es
and
notl
or
xor
adc
xor
xchg
popa
push
inc
mov
idivb
xchg
subb
inc
bound
sub
cwtl
and
and
scas
xchg
shrb
or
xor
mov
fwait
testb
cmp
in
rolb
or
cmp
pop
cld
negl
icebp
daa
les
jmp
lock
mov
adc
xchg
xlat
push
add
sbb
add
mov
mov
jle
jno
cs
push
mov
sti
loope
xchg
jmp
movsb
fwait
dec
mov
or
sti
cs
popa
push
sbb
sbb
dec
or
jo
mov
les
jno
and
pop
divb
testl
xor
sbb
ret
push
scas
sbb
lahf
scas
lock
movsb
not
das
flds
push
aas
inc
and
test
push
rcrl
sbb
shl
sbb
shll
in
or
inc
pop
jg
jo
adc
lock
out
setl
fwait
repz
aas
fcomps
das
xlat
aas
or
adc
movsl
sbbb
or
fstps
out
shlb
mov
mov
mov
scas
xor
jno
mov
std
in
jb
es
mov
popf
sbb
popa
icebp
push
testb
cmp
push
js
xchg
scas
out
add
cmp
sbb
fisubl
xor
push
ds
pop
gs
lock
bound
mov
test
sbb
and
and
mov
sbb
rcll
outsb
lcall
pop
cltd
enter
add
insb
fisttps
outsb
scas
fnstenv
in
sbb
popf
jge
movsl
jnp
pop
adc
push
bound
cld
testb
divl
insl
sbb
pop
cmpsl
jno
pop
les
insl
negl
xchg
cmc
sbb
push
pushf
cmp
lahf
cs
cmc
enter
add
stc
pop
adc
jp
fsubs
and
sahf
xchg
loope
or
pushf
insb
push
jecxz
das
add
inc
jmp
insl
and
sbb
pop
mov
push
xchg
jne
lea
sbb
repz
mov
das
jmp
fnsave
aad
out
ja
scas
or
push
pusha
icebp
insb
ret
mov
mov
rolb
or
and
and
mov
and
and
fsubl
xchg
lods
fwait
mov
sub
inc
push
out
jge
cltd
adc
sbb
fwait
int3
xchg
mov
fwait
sbb
pop
fwait
and
push
das
mov
add
mov
or
jbe
lock
mov
mov
xchg
sbb
push
scas
adc
sbb
push
icebp
lds
movsb
or
lods
rcrl
xchg
decl
sbb
push
mov
or
mov
pop
scas
and
adc
push
push
sbb
int
mov
int3
popa
loope
sbb
xchg
xchg
pop
inc
dec
and
or
pop
mov
and
aas
mov
sahf
incb
movsl
mov
iret
lock
lock
pop
mov
sbb
pop
fyl2x
inc
inc
xchg
lret
bound
lcall
and
and
dec
pop
adc
sbb
mov
pop
inc
push
ficomps
pushf
add
ret
xor
adc
mov
ret
lret
rcll
orb
rcll
push
xchg
lahf
sub
int3
cs
xchg
pop
enter
inc
push
test
mov
sti
and
das
test
les
loopne
leave
lock
or
outsl
aas
xor
and
leave
mov
pop
cmp
push
push
int
fnstenv
and
and
loop
test
cltd
sbb
ret
push
mov
push
scas
lea
xchg
adc
fsubs
in
sahf
cltd
and
pop
mov
hlt
aas
mov
pop
sahf
shll
insl
mov
xlat
fabs
scas
and
rcll
ja
add
fstpl
mov
inc
mov
and
push
xchg
out
insb
xchg
jo
ds
into
test
push
fnstenv
pop
int
lcall
or
in
xchg
pop
and
or
test
push
arpl
mov
adc
movsb
lahf
adc
push
push
and
fildll
fists
int3
mov
sbb
add
movsl
mov
inc
mov
inc
hlt
xchg
and
ja
ljmp
mov
fcmovu
mov
fisubl
sbb
lds
cmpsl
sbb
movsl
lea
ja
and
sbb
add
imulb
sbb
xchg
mov
and
jmp
push
stos
push
and
aas
pop
mov
xchg
sub
rclb
sub
lock
cmp
rclb
mov
out
pop
cmpsl
push
pushf
das
fs
xchg
push
and
sub
pop
ss
pushf
shlb
ss
pushf
mov
pop
bound
pop
loopne
out
pop
inc
xchg
int
mov
mov
mulb
std
push
and
repz
xchg
sbb
and
imul
push
shlb
aaa
xchg
mov
dec
pop
mov
add
pop
repz
sbb
loope
lret
scas
out
pop
and
pop
jg
adc
mov
jge
cmc
adc
das
out
popf
jge
cmc
dec
ret
mov
and
and
jo
lret
mov
add
push
mov
inc
xchg
idivl
push
popf
in
xchg
movsl
out
fmull
mov
sub
add
inc
xchg
xlat
shrb
mov
mov
sbb
in
push
mov
das
movsb
jl
lods
loop
movsl
adc
testl
jl
movsb
loop
adc
in
push
push
mov
and
cli
cmpsb
push
mov
in
or
aaa
pop
mov
loope
ret
push
or
lcall
add
add
test
xchg
fcmovbe
mov
lret
pop
scas
fyl2x
out
lahf
fcmovnu
or
jecxz
lahf
adc
out
and
sbb
lcall
and
pop
xor
pusha
insb
pop
sahf
lret
leave
enter
cwtl
jo
int
add
scas
enter
pop
xlat
mov
mov
mov
call
inc
popf
fdivs
test
movsb
fwait
scas
xchg
mov
shl
dec
fidivl
mov
sbb
lea
add
sbb
add
les
jecxz
insl
sahf
mov
and
cmpsb
pop
sbb
push
sbb
jns
inc
mov
rolb
pop
popf
loopne
scas
and
cmp
cwtl
cmpl
mov
fwait
xchg
fwait
mov
scas
xchg
test
dec
test
jg
xchg
add
pop
clc
aad
sbbb
popf
lds
fwait
std
ret
hlt
mov
xchg
cmpsl
stos
stc
out
ljmp
fcompl
jl
cltd
pop
jb
loopne
cld
aaa
das
insl
out
mov
loopne
cld
sbb
jl
mov
xchg
pop
cltd
and
fwait
pop
jns
icebp
xchg
add
cltd
clc
fiaddl
and
sbb
push
lods
jo
movsb
leavew
inc
rclb
adc
pop
dec
sbb
inc
push
mov
sbb
dec
cs
mov
rorb
fnsave
loopne
pop
xchg
lahf
sbb
subb
and
mov
xchg
loopne,pn
cwtl
sub
icebp
pop
test
push
dec
fs
lret
adc
push
mov
push
pop
push
insl
inc
subb
adc
dec
pop
xchg
ss
je
fisttpl
jae
xor
xlat
arpl
fstps
loopne
sbb
cltd
repz
jecxz
pop
jo
jne
insb
insb
test
inc
push
cmp
or
or
and
enter
out
mov
push
sbb
es
and
xchg
adc
and
pop
mov
jno
rcrl
aas
jecxz
jle
mov
and
popf
cmpsl
insb
sbb
sbb
pop
xchg
pop
push
push
xchg
test
cs
pop
bound
mov
cs
or
movsb
inc
scas
push
xchg
frstor
pop
in
outsl
sub
popa
xlat
rcrb
lods
adc
mov
jne
mov
jp
mov
xchg
mov
jmp
and
in
scas
sbb
inc
dec
xor
jecxz
pop
lcall
rcll
mov
push
mov
sbb
cmp
andb
lcall
dec
pop
sbb
mov
cmp
cmp
or
scas
cld
not
movsb
adc
mov
test
add
jo
inc
mov
stos
movsb
loope
cmp
mov
cmp
xlat
pop
pop
sbb
jns
pop
sbb
cmp
push
andb
ds
push
sbb
mov
push
sti
cmc
xchg
das
inc
push
adc
adc
and
in
xor
ret
xchg
xor
and
push
leave
insl
and
das
jg
adc
das
xchg
frstor
testl
sbb
pop
mov
jle
push
and
mov
stos
jle
fidivs
xlat
icebp
cs
icebp
iret
les
inc
out
outsl
push
scas
enter
sbb
mov
pop
mov
mov
bound
push
call
pop
xchg
les
xchg
pop
inc
sub
pop
sbb
pop
add
fwait
or
xchg
aad
pop
add
and
adc
loope
sbb
xchg
mov
mov
in
cltd
fisttps
inc
stos
pop
dec
movsl
shrl
pop
inc
nop
and
popf
adc
dec
pop
mov
pop
push
scas
ja
xchg
icebp
sbb
insl
xlat
sbb
sbb
fists
sub
sti
outsb
push
mov
push
gs
movsb
clc
movsl
and
pop
adc
cmp
xchg
ret
sti
jp
sti
and
iret
xchg
bound
add
movsl
negb
into
fstp
pop
mov
pusha
gs
push
popf
test
fcomps
mov
push
lods
fwait
pop
fidivl
pop
and
inc
popf
cmp
scas
dec
push
loopne
cmp
pop
sbbb
sbb
test
movsl
dec
pusha
inc
imul
enter
test
ja
loop
mov
cltd
outsb
sbb
scas
pop
fidivrs
fiadds
mov
xchg
cli
or
test
clc
push
movsl
push
lock
add
dec
jae
pop
fsubl
fst
movsl
mov
inc
enter
fistpl
icebp
fistpl
and
ja
jecxz
out
xchg
xchg
movsb
popf
push
test
cmp
mov
jmp
lret
mull
add
jmp
lock
scas
mov
and
mov
out
sbb
fwait
pop
fwait
lahf
dec
jecxz
js
sbb
aad
popf
ret
or
js
mov
and
pushf
and
add
outsl
dec
mov
lock
jne
mov
jne
dec
xor
mov
rol
pop
push
imul
push
ror
fucom
movsb
mov
iret
pop
mov
leave
test
shlb
ds
mov
and
adc
add
in
daa
push
sbb
shrl
pop
mov
adc
ja
pop
mov
pop
or
cs
daa
orb
mov
ret
or
cs
shlb
stc
js
push
and
mov
test
scas
adc
mov
sbb
pushl
and
iret
cli
in
xor
decl
sbb
clc
loop
adc
fcoml
std
push
xchg
sbb
push
lcall
add
sbb
lret
std
lea
loope
mov
mov
sbbb
pop
xchg
ret
jge
lea
loopne
shll
cmp
xor
movsb
add
cld
stc
shrl
cmp
sbb
pop
shl
mov
mov
and
push
sbb
pushl
iret
pop
mov
mov
and
sbb
sbb
cmp
mov
sbb
or
frstor
stc
or
or
sbb
push
adc
filds
or
mov
popf
in
xor
mov
or
out
push
push
scas
cs
sbb
sti
js
push
jns
add
fimull
sbb
ret
and
das
pop
push
pop
adcb
fstpt
fidivrs
cmp
dec
adc
fcoml
cwtl
sti
ret
and
enter
das
iret
sbb
jl
cmp
mov
or
mov
lcall
push
and
jl
xor
leave
out
xor
xchg
scas
or
push
cmp
jbe
ret
stc
mov
shlb
sub
scas
lret
jmp
loopne
sahf
mov
mov
or
gs
nop
add
scas
movsb
mov
sti
sbb
mov
and
sbb
insl
sbb
into
jp
and
sbb
mov
call
scas
inc
sbb
and
jbe
and
pusha
mov
cld
mov
cmp
roll
flds
stos
pop
and
icebp
xorl
adcb
lahf
or
xchg
popf
lret
cmp
pushf
rcll
pop
inc
and
sbb
mov
insb
or
and
lods
push
fstps
or
iret
cmp
pop
addb
sti
adc
mov
or
cmp
sbb
jno
adc
cmp
adc
in
and
sbb
and
mov
lcall
popf
jle
scas
ss
or
loop
inc
push
outsb
add
es
leave
icebp
cwtl
loope
fcmove
sbb
jns
leave
and
jmp
mov
cmp
sbb
and
nop
das
scas
loope
push
scas
fcoml
pushf
mov
mov
mov
pop
fstpt
or
ficoms
mov
stc
and
add
mov
add
pop
das
fsubrl
mov
push
rorb
clc
mov
sbb
adc
mov
sbbl
pop
xlat
and
lods
jb
sbb
out
sti
shll
cld
popa
xchg
sbb
andl
and
iret
cltd
or
lret
mov
out
aaa
jmp
pop
inc
sti
lahf
imul
nop
fadd
xor
aad
mov
scas
arpl
and
xor
loopne
sbb
inc
adc
and
iret
inc
cmp
mov
test
jecxz
adc
adc
int3
outsb
dec
xor
mov
jbe
mov
test
sahf
das
mov
sbb
dec
push
jmp
pop
push
das
sub
pop
fs
pop
and
or
ret
in
call
adc
test
cmp
in
rorb
jp
mov
push
ja
sub
jge
sbb
inc
xchg
inc
mov
jb
cmp
push
dec
rclb
sub
pushf
xchg
cmp
mov
push
pop
stc
push
jp
and
and
pop
or
xorb
xor
cli
outsl
js
push
adc
xchg
mov
in
sub
and
sub
xor
pop
mov
sbb
inc
sub
lods
test
adc
and
pop
push
ja
pop
add
fwait
cmpsl
jmp
shrl
mov
fidivl
stos
xor
hlt
sbb
mov
push
lahf
lock
xor
or
inc
mov
bound
es
jno
jbe
ret
push
cmpsb
jle
pop
mov
in
xor
xor
mov
andl
mov
loopne
mov
and
in
mov
inc
test
ljmp
sub
dec
rclb
push
mov
mov
gs
sbb
in
fwait
pop
jmp
aad
pop
push
and
xor
and
jecxz
adc
test
push
adc
andb
jae
out
push
cs
sbb
add
adc
test
shl
cmp
stc
aam
mov
adc
aaa
or
pusha
cltd
dec
xchg
xchg
cmp
and
mov
sbb
shlb
mov
cli
add
push
sub
rep
call
jo
in
rdpmc
iret
xor
mov
test
sbb
dec
shll
dec
cmc
push
cmp
sub
lods
xor
sub
mov
add
loop
dec
mov
inc
jl
mov
push
divps
repnz
xchg
test
pop
enter
mov
xor
bnd
es
xchg
sbb
aam
or
scas
mov
xchg
add
mov
and
add
cli
pop
cltd
xchg
mov
sbb
adc
push
cld
cmp
sbb
clc
outsl
xor
mov
cltd
bound
xchg
sbb
inc
or
bnd
mov
int3
cli
bound
or
insl
in
lret
pop
sbb
sbb
push
inc
ret
ss
mov
aad
mov
cli
mov
data16
icebp
xor
shl
and
popf
sbb
inc
add
mov
or
adc
or
repnz
xor
add
in
aad
inc
cmc
push
lcall
rcrb
iret
negl
inc
inc
push
out
scas
xchg
mov
dec
mov
sbb
adc
bound
popf
xchg
mov
sbb
cmp
roll
fisubrl
fdivs
sti
outsb
movups
leave
imul
xor
test
insl
jno
and
xor
jl
sahf
pop
mov
call
cmp
fcmovnbe
das
into
push
lods
lahf
and
sub
and
pusha
out
lock
enter
jno
push
cld
fisttpll
jnp
push
add
push
pop
in
push
or
inc
movsl
dec
mov
lods
inc
leave
sbb
sarb
lret
pushf
and
and
mov
xchg
lock
lods
cld
xchg
sbb
stos
stc
push
xor
scas
cmp
mov
pop
je
and
and
jno
ficompl
out
inc
lds
cs
stos
adc
sbb
and
dec
inc
xor
scas
js
bound
scas
rcll
mov
out
push
rcll
jg
inc
adc
inc
insb
push
mov
xchg
and
mov
dec
or
scas
dec
rcr
jge
subb
aam
push
xor
dec
xor
and
cmpsb
jae
pop
and
xor
orb
popa
sbb
out
cli
sbb
mov
adc
nop
mov
enter
dec
mov
es
adc
sbb
hlt
fbstp
mov
and
loope
lea
fiaddl
mov
push
adc
int3
dec
add
test
xchg
cli
lock
mov
inc
shlb
loopne
jecxz
cli
movsl
adc
fwait
psllw
std
xor
in
lea
fs
popa
adc
sarb
aad
lcall
adc
mov
sbb
cs
adcb
lcall
cmp
repz
repz
mov
pop
mov
cli
ljmp
and
sbb
jno
orb
mov
jle
insb
mov
mov
mov
mov
std
sbb
icebp
cmp
mov
not
test
xchg
enter
pop
ljmp
add
clc
into
cmp
outsl
cmp
mov
pop
and
adc
minps
mov
data16
shll
icebp
fwait
push
test
scas
ror
or
mov
scas
xor
iret
and
mull
das
insb
push
out
or
pop
xor
das
cmpsl
xchg
fdivr
adc
movl
das
mov
mov
pop
in
fisubrl
inc
lods
adc
aad
push
clc
mov
adc
ss
adc
adc
xchg
mov
sbb
sbb
push
lcall
adc
lahf
dec
xorl
lea
shll
xchg
cwtl
dec
nop
adc
adc
jns
mov
pop
mov
mov
mov
andb
imul
push
jg
iret
mov
fcom
leave
iret
cmp
add
repz
inc
sub
or
test
mov
popa
fnstcw
popf
mov
outsl
sbb
dec
addl
mov
clc
push
cs
adc
inc
scas
mov
iret
inc
leave
mov
xor
mov
fscale
fnsave
pop
into
int
fwait
mov
nop
in
mov
popf
out
clc
mov
dec
leave
and
fnstsw
loopne
popf
and
sbb
icebp
push
jb
or
stos
mov
sub
fwait
or
and
fstpt
movsl
jo
push
ljmp
sub
lcall
push
xor
nop
cmc
arpl
mov
sbbb
xchg
inc
mov
pop
lea
pusha
pop
sbb
lcall
out
outsb
xor
push
lret
push
cmpsl
dec
daa
stc
sub
mov
fadds
and
xchg
pushf
xor
push
xor
adc
leave
stos
push
fstp
inc
mov
mov
mov
out
scas
sbb
daa
mov
psubq
fnstcw
cmp
fcomip
mov
stos
mov
call
xlat
sub
and
sbb
das
test
jge
sbb
sbb
mov
xor
add
sub
mov
jne
scas
nop
cld
mov
fsts
cltd
mov
xor
xchg
or
ljmp
mov
das
xchg
and
sbb
psubusw
or
wrmsr
push
or
ret
pop
and
movsb
fwait
jns
das
and
cltd
and
lahf
and
xchg
outsb
andl
mov
shll
push
dec
add
cwtl
sarb
clc
clc
push
out
fbstp
or
push
adc
xor
pop
divl
subb
mov
out
bnd
adc
loopne
popa
cltd
cmp
mov
movsb
repz
imul
bsr
lock
lret
xchg
jg
jl
and
das
or
add
pusha
enter
shlb
add
xor
sti
mov
sbb
mov
stos
dec
movsl
mov
insb
push
inc
xor
ds
in
dec
loopne
shl
ds
adc
insb
push
adc
and
int3
mov
adc
icebp
push
mov
mov
int3
enter
insl
outsl
roll
pcmpeqw
xor
and
adc
pushf
test
icebp
mov
xor
xchg
aam
push
int
das
adc
push
xorl
mov
add
aaa
fidivrs
cld
and
push
fs
xor
cs
rcll
and
push
sub
testb
aas
mov
cmp
push
push
jbe
and
fnsave
xor
mov
xchg
and
add
push
addr16
jns
xchg
and
add
cwtl
add
outsb
mov
das
out
lahf
dec
xorl
mov
mov
sub
pop
fsts
jmp
out
add
movsb
scas
xor
jecxz
out
and
in
icebp
xchg
hlt
ret
mov
push
cwtl
xchg
loopne
sbb
and
shr
xor
inc
dec
cmovae
add
pop
movsl
fcoms
outsb
out
adc
jmp
sbb
cld
fwait
xchg
jnp
jnp
jg
les
cli
movsl
mov
call
jle
or
xchg
fbstp
push
mov
gs
addl
adc
cld
call
out
sub
xchg
fs
out
test
inc
inc
fcmovu
mov
pop
and
data16
mov
add
mov
adc
push
mov
lock
dec
frstor
mov
dec
push
or
clc
xchg
add
icebp
nop
lea
mov
and
sarl
xchg
xor
adc
mov
push
dec
jno
mov
xchg
inc
shr
ret
mov
jo
das
xor
je
scas
mov
cs
scas
icebp
mov
pop
dec
add
xor
adc
add
adc
gs
nop
and
mov
out
wrmsr
jns
rcll
jno
push
push
cmp
jg
and
icebp
or
jno
sbb
adc
dec
mov
push
sub
lret
mov
xor
adc
xor
testl
in
xor
xlat
out
popf
mov
loop
and
push
out
jge
xor
jnp
cmp
sbb
fidivrl
outsl
sbb
fdivs
cmpsl
ja
aaa
push
divb
lds
add
in
xor
loop
xor
add
fbstp
mov
push
fidivs
int
lea
sub
in
xor
lret
stos
mov
sub
xor
lret
mov
sub
or
enter
addr16
xor
push
out
cmc
aad
xchg
xor
xor
hlt
aam
shll
mov
jae
xor
repnz
adc
out
cmp
or
or
push
mov
std
and
cltd
xor
stc
notl
das
add
xor
icebp
adc
xchg
out
inc
popf
fwait
cmc
jge
lea
repz
mov
push
mov
pop
inc
ja
push
or
ss
adc
cli
xor
jbe
imul
pop
jnp
stos
or
adc
lods
jp
aas
cld
jp
dec
xor
adc
sbb
aad
dec
enter
or
mov
or
repz
orb
cmp
cltd
shlb
fisubs
inc
mov
addr16
movsb
xor
stos
cmp
test
pop
in
loope
addr16
stc
mov
xor
and
jno
push
cld
and
adc
into
or
adc
push
add
or
or
inc
sbb
daa
stos
pop
sbb
inc
push
xor
and
loopne
insl
stos
fsubs
add
dec
adc
xor
pop
scas
hlt
push
das
icebp
mov
imul
xor
mov
mov
nop
insl
ljmp
les
sbb
je
repz
xor
gs
mov
sahf
ljmp
xor
cmp
mov
xlat
imul
mov
ret
and
sbb
mov
or
adc
or
jo
push
lock
cmp
sub
add
test
sbb
ret
test
and
add
push
cmp
mov
and
add
xor
fsts
sbbb
fwait
jb
testl
inc
andb
repnz
imul
sarl
aad
flds
stc
out
cmc
xor
pop
pop
and
inc
leave
pop
loop
pop
mov
lods
mov
insb
cmpsb
xor
jo
test
outsb
push
push
or
pop
xor
mov
in
fldl
jno
mov
xor
push
loopw
dec
insb
xor
jbe
js
push
repz
xorl
sbb
loop
xor
mov
jp
insb
mov
push
movsl
int3
arpl
xor
ret
or
les
je
xor
jg
and
jmp
mov
pusha
jle
aas
inc
pop
xor
imul
add
outsl
sbb
mov
arpl
jl
xor
pop
jecxz
nop
and
popa
jg
sbb
das
jle
jne
mov
cmp
xor
ret
xor
sbb
pop
xor
dec
pop
sbb
mov
enter
daa
ss
xor
cmpsb
mov
rcrl
jp,pt
jle
add
test
xor
or
mov
xor
lea
lods
push
test
mov
push
and
lcall
mov
inc
mov
adc
lods
xchg
das
xor
dec
fwait
push
popf
dec
inc
xor
push
movsl
xor
clc
or
pop
xor
popa
les
mov
mov
cmp
iret
test
rcll
adc
in
clc
jl
push
mov
das
sbb
stc
scas
and
fwait
std
xchg
push
repnz
xchg
lods
or
dec
sbb
cwtl
adc
xchg
cmc
adc
xor
sub
xor
cmpsl
mov
mov
sti
lcall
mov
mov
icebp
sti
jne
jecxz
xor
jno
xchg
repnz
imul
push
rorb
mov
xor
xchg
push
cmc
xor
mov
pop
push
jmp
fisubrs
push
stos
iret
jge
xor
push
lea
jmp
lds
pop
popf
xor
add
insl
or
inc
or
or
int
stos
sub
rcrb
xchg
push
mov
add
adc
sbb
lds
ds
xorl
pop
adc
pop
int3
add
xor
push
push
cmpsb
aam
dec
inc
nop
jl
jae
jp
scas
imul
adc
fdivrp
and
sbb
mov
mov
repz
pop
pop
cmc
jne
imul
into
daa
push
xor
mov
and
push
add
test
pop
stos
mov
adc
dec
mov
test
adc
xchg
ja
cmp
les
xchg
jnp
inc
push
and
out
mov
xchg
push
add
dec
push
pop
mov
int
scas
jecxz
xor
test
lea
repnz
push
leave
inc
xor
test
adc
mov
adc
shll
imul
and
add
loope
adc
jns
divb
xor
mov
xchg
push
add
rcl
sub
sub
push
or
xor
jmp
cmp
aad
inc
mov
lea
sub
stc
adc
or
mov
out
stos
pushf
xchg
adc
bound
pop
nop
xor
mov
ss
adc
and
fs
repnz
movd
xchg
jns
fdivr
pushf
pop
lea
aaa
jle
fidivrs
imul
xor
adc
es
cmpsb
mov
xor
xchg
in
outsl
xor
push
adc
fnstcw
popa
inc
or
cwtl
push
leave
movsw
arpl
xchg
sub
sub
cmp
xor
pusha
test
repz
mov
xor
addr16
es
push
fwait
out
jnp
fiadds
mul
adc
hlt
inc
call
jl
jmp
mov
pushf
xor
sub
out
push
xor
cmpsl
bound
xor
fcoms
add
mov
and
adc
pop
mov
mov
cmp
in
clc
push
push
xchg
lds
cmc
mov
mov
movsl
leave
or
xor
daa
popa
fwait
push
adc
test
jns
and
pop
dec
sub
shl
scas
das
cltd
pop
jb
xor
fcom
jne
aas
dec
daa
sbb
adc
shl
and
lcall
imul
int3
xor
jbe
and
add
mov
cmp
xor
aad
push
jmp
das
pusha
pop
or
cli
pop
sahf
pop
or
les
into
jmp
ds
sbb
nop
xor
sub
jae
inc
mov
push
push
jl
cmp
dec
insl
mov
cmc
scas
cmpsl
fmull
jle
push
push
sbb
lahf
mov
fcomi
movsb
insb
xor
xchg
sub
aam
sub
lock
outsl
stos
mov
cmp
cld
imull
pop
cltd
pop
or
lea
adc
icebp
push
mov
sub
push
jno
mov
mov
dec
fwait
cmp
push
mov
adc
xor
imul
cmp
fadd
popf
xor
xor
mov
sub
in
in
jge
dec
lea
korw
xor
jmp
xlat
out
or
mov
hlt
or
outsb
insl
test
dec
call
sbb
loopne
cwtl
mov
test
mov
ss
out
xchg
and
icebp
arpl
cmp
scas
dec
dec
mov
or
rclb
ds
push
mov
pop
sbb
xchg
sbb
rolb
scas
xchg
popa
adc
lods
mov
cmc
sbb
push
and
lock
lret
adc
sbb
inc
xchg
push
popa
loope
subb
push
xor
out
dec
jl
fs
pop
and
push
mov
das
xor
mov
add
adc
jno
dec
jle
inc
mov
adc
scas
mov
rcll
inc
hlt
jo
outsl
and
cli
dec
xlat
cmp
lods
jge
push
xchg
in
lock
sbb
pusha
mov
adc
bound
jns
xor
xchg
rcrl
in
mov
xchg
mov
xor
mov
shr
and
fstp
mov
mov
xchg
sub
or
lock
out
lahf
fstpt
test
sub
jecxz
cmp
sti
mov
shlb
movsl
sbb
subb
das
mov
or
mov
bound
pop
int
pop
jb
mov
cltd
nop
test
psrld
push
pushf
lock
xchg
or
std
in
pop
fsubrl
cmpsb
xchg
mov
scas
pop
push
xor
movsl
sbb
push
pop
dec
xor
das
xor
movsl
pop
sbb
subb
das
scas
lock
fmull
sbb
adc
and
adcb
mov
sbb
adcw
mov
enter
or
add
imulb
dec
test
pop
std
fwait
xchg
sbb
jp
outsl
outsb
std
js
outsl
mov
add
and
xchg
out
idivb
js,pn
out
neg
scas
mov
cltd
mov
cli
inc
out
out
cmp
std
out
xor
push
movsl
sbb
into
inc
mov
pop
xchg
add
cmp
scas
add
std
pop
mov
xchg
sbb
jnp
outsb
rorb
outsb
fsts
lock
fwait
jo
cmp
cmp
int
divb
adc
or
test
xor
lods
stos
out
push
iret
mov
aad
mov
mov
scas
mov
jno
mov
imul
cmc
xchg
cmp
inc
push
adc
lock
daa
roll
xchg
sarl
lds
xor
bound
jb
sub
jae
xor
or
jp
xchg
pop
xor
mov
adc
jle
js
inc
icebp
xchg
sbb
pop
movl
mov
dec
fbld
push
ret
add
push
xor
sbb
sarl
div
inc
mov
movsl
dec
pop
xor
xchg
cltd
fidivs
cmp
sarb
ljmp
stos
xor
clc
cwtl
or
cmp
test
xchg
xor
jb
push
popf
xchg
xor
repz
mov
push
aad
out
pop
cmp
mov
or
push
gs
dec
iret
test
data16
dec
inc
loop
outsl
int
sahf
xor
mov
push
xor
inc
in
push
sub
push
xor
in
imul
jnp
and
xor
loope
add
lret
xor
dec
xor
or
pop
mov
sahf
add
fiadds
push
cmp
imul
cmp
push
dec
adc
adc
push
popf
sbb
xor
lahf
clc
pushf
xor
lods
sub
jns
scas
test
stc
mov
addr16
pop
cmpsb
mov
pop
je
mov
jmp
pop
mov
test
cwtl
imul
jns
jl
pop
sub
mov
sub
icebp
mov
xchg
outsb
dec
or
outsl
sub
mov
xor
rcl
adc
mov
cwtl
lcall
fbstp
scas
lea
addr16
push
sbb
mov
or
jmp
pop
xor
mov
or
xorb
pop
mov
add
xor
mov
enter
icebp
mov
sbb
sub
lods
dec
pop
mov
jp
rclb
xor
std
xchg
in
adc
loop
xchg
push
cwtl
and
cmp
into
mov
fnsave
or
lea
mov
adc
xchg
push
div
lea
inc
mov
jno
add
sbb
xor
fists
and
jl
mov
or
xchg
leave
shrb
push
sahf
test
sub
sbb
sbb
cmc
ffreep
push
cltd
sbb
lahf
push
ret
mov
scas
int
push
push
fldl
rcrl
mov
xor
dec
inc
adc
push
sets
jg
lock
fbstp
clc
imul
sub
or
xchg
add
push
push
xchg
daa
pop
cs
call
divb
and
inc
lahf
das
cmp
jae
mov
mov
xchg
dec
xor
test
pop
jmp
je
xor
jb
cld
xchg
jge
out
cmp
adc
jecxz
sbb
mov
inc
stos
ret
adc
bound
and
xlat
pop
pushf
and
repz
mov
mov
js
sub
adc
sub
cmp
mov
cmp
mov
jb
adc
fmull
adc
inc
ss
std
ja
adc
in
lcall
inc
ror
inc
insl
int
ror
mov
call
dec
inc
ret
mov
xchg
out
and
adc
test
repz
xor
out
xor
insl
push
popa
fcomps
jnp
lods
pop
mov
fdivrs
fildll
pushf
fdivs
adc
pushf
xor
rorb
jp
pop
xchg
pusha
outsl
scas
mov
xchg
mov
dec
xchg
shl
and
ret
mov
xor
out
shl
icebp
pop
jl
or
sarl
and
jbe
pop
jge
out
pop
adc
jns
sar
or
ja
fcmovu
jno
xchg
inc
cmpsl
xchg
scas
or
fcmovne
inc
das
sti
sbb
pop
int
mov
jmp
popa
mov
xchg
std
int
mov
movsl
mov
cld
mov
scas
faddl
std
sahf
mov
jl
sub
inc
lret
xchg
cmp
fistpll
int3
inc
mov
cmp
sar
sbb
fisubrl
add
add
int
mov
orpd
push
mov
inc
je
pop
jge
push
movsl
sti
jns
ror
test
fcompl
dec
push
jmp
lods
mov
lret
rcl
pop
jno
shll
cld
cltd
adc
mov
cmp
pop
test
aaa
mov
inc
popf
inc
sbb
xchg
pop
mov
lods
sub
lahf
fcmovnbe
jge
adc
or
mov
pop
paddw
out
inc
pop
pop
sub
xchg
repnz
and
sbb
add
mov
lahf
push
push
rorb
popf
adc
ret
bound
mov
xchg
daa
xor
addr16
fcmovnu
orps
sahf
adc
sbb
and
ss
add
xchg
adc
and
les
inc
mov
fimuls
out
aaa
jne
add
push
pop
lods
fmuls
mov
sahf
jo
fwait
and
mov
pop
fcoms
pop
xor
popf
and
adc
stos
int3
mov
out
xchg
xchg
add
inc
ret
arpl
es
cli
xor
xor
leave
pop
push
mov
jecxz
out
dec
adc
outsl
cld
rclb
xor
pusha
frstor
and
jno
jle
pop
jno
push
adc
scas
sub
push
mov
xchg
pop
std
xchg
std
pushf
ljmp
fsubl
xorl
lret
push
into
mov
mov
insb
cmpsl
adc
sbb
fs
inc
dec
fistpl
jecxz
cmpsl
enter
lret
fstpt
aad
test
mov
data16
and
imul
pop
pop
adc
inc
in
xor
jp
push
inc
xchg
adc
add
std
fnsave
dec
rorl
lock
sub
add
and
lock
or
pop
and
shlb
cmp
adc
adc
je
out
inc
pop
cmpsb
imul
mov
adc
xchg
adc
dec
mov
daa
ss
mov
sub
pop
imul
mov
cmp
mov
inc
das
das
mov
inc
das
inc
add
sbb
adc
jmp
mov
test
rcrl
gs
xor
call
adc
test
roll
fucom
daa
in
int
and
xor
cmp
fdivrp
ds
jae
std
adc
out
pop
xchg
inc
sarl
dec
sti
xor
movsl
jns
jno
dec
mov
adc
jg
and
jnp
add
stc
cmp
aad
cmc
outsl
xor
shr
cmc
pop
jno
jp
and
subl
and
leave
dec
jno
mov
aaa
mov
mov
xchg
popf
mov
mov
mov
and
cmp
jno
nop
and
shll
mov
fnstcw
mov
adc
pop
jno
test
and
into
bound
jl
sub
arpl
je
jno
add
out
in
sub
and
loopne
adc
cmp
lret
cmpsl
lea
cmc
dec
in
and
dec
inc
cmp
clc
push
and
xor
out
jo
popf
sbb
and
sub
in
outsl
xor
int
sti
mov
rolb
enter
xor
dec
push
imul
outsl
xor
movsl
hlt
mov
sbbl
push
lret
int3
cld
and
test
xor
shr
xchg
aad
es
fwait
push
dec
and
xor
and
push
idivb
imul
in
outsl
mov
pop
push
mov
test
jl
repnz
push
pop
lock
nop
mov
adc
adc
arpl
std
mov
jae
fstpl
loopne
add
rcl
mov
or
cmpsb
cmp
xchg
and
outsl
cli
int3
mov
insb
dec
mov
outsl
xor
out
sbb
mov
mov
cmovbe
add
pop
push
adc
mov
das
call
mov
jge
popa
lret
pushw
and
xor
mov
sub
mov
outsb
sbb
dec
aaa
xchg
std
dec
outsl
psrad
mov
mov
sbb
cmp
jno
sbb
pop
mov
cs
cli
std
lods
sbb
das
sbb
xchg
jle
add
lcall
cmp
lret
sbb
es
mov
jg
pop
es
sbb
inc
cmp
push
mov
jo
xchg
dec
addr16
jo
movb
inc
scas
lea
cmpsb
sti
cltd
rcrb
inc
or
int3
push
or
sub
pop
mov
popa
cmpsl
xchg
insl
and
or
cwtl
je
shl
jle
or
fs
mov
xchg
xor
mov
sbb
mov
jnp
imul
jo
rclb
xor
loope
call
cmp
lods
aaa
sete
and
stos
call
repz
inc
or
cmpsl
fstpl
cmp
and
not
adc
and
repz
daa
add
popf
dec
imul
xor
xchg
icebp
jp
movlhps
adc
lret
daa
pushw
and
xor
lock
fs
daa
mov
push
fmull
push
fwait
mov
std
xlat
clc
jbe
mov
leave
lods
daa
std
xchg
test
pop
xchg
dec
fcomp
pop
call
adc
std
adc
or
inc
shll
jl
into
sbb
fists
and
fdivs
daa
leave
pop
cmc
out
std
das
clc
ja
lret
mov
std
out
data16
test
push
jno
subb
das
out
dec
add
dec
sub
jecxz
outsb
cmc
push
xor
fstl
arpl
jae
stos
push
arpl
and
jno
divb
cmpsl
stos
push
rol
jbe
mov
icebp
std
es
mov
mov
aas
aad
jmp
adc
xor
lods
cmpsb
aam
fildll
or
pop
mov
mov
stos
xor
sti
fcmovne
push
movsl
clc
popf
push
mov
sbb
xchg
lahf
xor
cmp
mov
aad
popf
push
lret
inc
das
or
fisubrl
mov
nop
insb
or
ret
xor
cmp
jl
clc
aad
pop
lea
xor
mov
repz
adc
test
mov
test
and
mov
rclb
jl
xor
pop
mov
push
or
push
in
sub
and
gs
jbe
outsb
mov
and
jge
sub
lods
mov
inc
arpl
inc
lea
sbb
mov
mov
dec
push
and
repnz
or
dec
dec
sbb
jnp
mov
push
js
sub
addl
shll
in
arpl
or
pop
fnstsw
sbb
or
out
xor
scas
dec
jmp
pop
xchg
mov
xor
and
pop
adc
pop
xor
dec
pop
scas
mov
mov
out
shlb
enter
cltd
push
inc
and
xor
adcb
xor
scas
push
or
lahf
dec
push
sbb
inc
cld
aas
pop
cmpsl
xchg
mov
xor
and
outsl
cmc
dec
xor
fs
jmp
sbb
pushf
cld
sub
rcll
push
push
dec
ljmp
andl
hlt
fists
inc
jge
sahf
lcall
xor
repz
mov
xchg
sbb
dec
repnz
aam
out
jle
imul
subl
xor
mov
fnstenv
cmpsb
sbb
xchg
xor
movsb
inc
mov
bound
scas
loope
mov
inc
lcall
xchg
mov
pop
mov
jle
adc
test
aad
inc
push
xor
mov
xor
push
pushf
pop
test
mov
push
mov
xchg
mov
repz
lahf
jnp
cwtl
add
sub
lock
add
push
inc
dec
push
jmp
pop
mov
mov
dec
imulb
inc
outsl
xor
psrlq
aaa
push
out
mov
add
sbb
jnp
push
jo
stc
inc
lcall
cmp
xor
jo
jbe
add
stos
push
xor
lods
lock
insb
sbb
les
and
add
pop
adc
ficoms
test
lods
xchg
pop
sti
dec
xor
adc
fidivrl
outsb
add
xchg
xor
jae
xor
mov
ficomps
pop
dec
add
lret
add
stc
test
imul
sbbb
jmp
mov
test
adc
mov
jl
lret
xor
daa
and
xor
iret
dec
popa
xchg
or
cmp
lds
gs
cmpsl
in
dec
adc
and
mov
or
cli
cmc
ds
hlt
aaa
jp
xor
mov
pop
inc
jl
cld
pop
orl
sbb
or
rorb
mov
test
xchg
inc
sbb
movsb
insl
shl
mov
stos
push
xor
adc
xchg
xor
fwait
inc
cmpsl
xor
loopne
mov
ja
cltd
xlat
pop
push
jp
pop
cs
jecxz
lock
push
mov
sub
sub
xor
jo
xor
aas
jne
in
out
icebp
pop
push
jnp
sbb
aad
fistps
mov
push
sbb
seto
push
neg
cli
fdivl
cmpsb
xchg
jo
sbbl
out
or
jo
cmp
call
nop
outsb
inc
popf
lret
and
inc
shlb
adc
popf
lret
push
lea
sahf
xor
lea
jge
mov
cvtpi2ps
pop
mov
xor
and
std
jge
test
sbb
xor
pop
mov
das
mov
xor
mov
add
out
bound
mov
cmp
repnz
mov
shlb
mov
xor
cli
stos
mov
pop
mov
push
lock
pop
nop
aad
push
and
sub
shrl
test
stc
dec
xchg
jmp
inc
jbe
pop
jno,pt
push
dec
jo
adc
xchg
outsb
stc
sbb
xchg
xchg
mov
mov
int
fnsave
mov
sub
inc
lcall
cmp
xor
inc
xchg
movsb
or
std
lcall
push
push
xchg
xchg
mov
scas
push
xchg
xchg
and
into
test
xchg
inc
loope
push
sbb
ficoms
subl
shll
imul
fnsave
push
and
inc
mov
jae
orl
int3
mov
inc
push
mov
sub
mov
jge
mov
jae
in
sub
shl
ds
rorl
cvttps2pi
xchg
scas
adc
and
fldt
mov
inc
imul
inc
xchg
inc
pop
or
scas
cmp
inc
sub
test
pop
xor
cltd
sbb
inc
push
cmp
std
mov
std
inc
cmp
cmp
sbb
inc
sti
cli
fwait
and
ds
push
mov
popf
ljmp
xchg
test
xchg
frstor
cs
out
xchg
push
mov
push
pop
mov
xor
lods
pop
ds
fists
ss
sbb
lcall
sbb
stos
cmp
ret
xor
jnp
in
jne
dec
and
cmp
adc
stos
cltd
add
add
mov
push
mov
fimuls
ja
jp
jo
cmp
mov
popa
lcall
lahf
sbb
in
lock
push
adc
cltd
adc
cmp
lret
icebp
shrb
sbb
fdiv
or
je
mov
cmp
clc
mov
push
mov
and
ret
sub
adc
xor
cmp
lcall
rclb
pop
and
mov
imul
and
xor
xor
push
mov
and
mov
daa
out
xchg
sbb
jnp
xor
das
adc
pop
test
adc
call
shlb
or
adc
and
xor
shrb
jo
cmp
aaa
bound
jo
xchg
out
mov
mov
mov
out
pop
adc
into
xor
push
inc
pushf
push
xchg
mov
sbb
in
je
repz
lds
mov
dec
fdivp
mov
cli
aaa
loopne
add
push
fisttps
ret
pop
cld
cmc
sbb
lret
xor
mov
or
imul
sub
inc
mov
mov
addl
es
mov
imul
mov
je
push
into
mov
cmpsb
xchg
xchg
or
xor
sub
push
shll
xchg
inc
adc
outsb
std
xor
int3
cmp
jo
inc
fsubrs
movsb
add
fwait
loop
out
out
mov
sbb
lea
mov
mov
push
push
into
push
adc
jle
push
xchg
push
aam
dec
and
in
dec
sbb
push
push
mov
ret
mov
dec
add
mov
xor
lea
mov
loope
stos
repz
pop
inc
mov
xor
mov
mov
xor
mov
push
jle
imul
stos
or
nop
addr16
jo
and
pop
dec
out
jns
aad
nop
cmp
mov
rclb
jno
mov
xor
test
mov
addr16
dec
push
or
stos
fstps
test
push
xchg
sbb
xchg
cs
in
pop
push
fs
or
and
or
mov
int
mov
xchg
in
xor
add
outsl
sub
call
xor
xchg
mov
xor
push
xchg
inc
mov
jp
mov
cmc
adc
push
cmpsl
ja
call
inc
add
jmp
push
push
mov
popf
adc
sbb
inc
mov
ds
mov
cmp
inc
xor
and
add
dec
clc
mov
push
and
pop
les
call
out
lods
cmpsl
or
cli
sub
xchg
adc
sub
fwait
jp
ss
mov
inc
cwtl
bound
xor
push
xchg
push
adc
add
or
push
mov
jo
scas
cmp
inc
in
xor
pop
outsl
mov
lret
xor
rorl
xchg
sub
loopne
or
jecxz
xor
or
cmp
xlat
sti
scas
and
mov
ror
loopne
sbb
sahf
xchg
cmc
loop
dec
dec
xlat
stos
cmp
mov
sbb
loope
loop
sub
iret
mov
adc
mov
aaa
xchg
jno
push
ret
push
jp
clc
vrsqrtss
xor
adc
sbb
or
sahf
sbb
mov
js
push
inc
notl
pushf
outsb
pop
jbe
stc
push
pop
xor
push
sub
jb
addl
pop
outsb
inc
push
sbb
or
jnp
jmp
lcall
bound
push
push
mov
pop
pushl
subl
cmc
test
lret
add
mov
push
inc
pop
jne
inc
xor
mov
ja
mov
decl
adc
xor
xor
das
mov
lret
adc
mov
and
mov
xor
sub
cmp
in
shll
popa
jnp
push
inc
ficompl
xor
xchg
inc
jb
push
or
inc
add
push
or
and
xor
mov
xor
ss
inc
mov
inc
fstl
fwait
insb
popa
add
xor
xor
mov
and
pop
adc
ss
mov
in
adc
ret
lcall
xorl
push
cmp
xor
dec
push
hlt
aad
mov
add
jp
cmp
mov
xor
pop
repz
cmpsl
xor
jo
lds
cmc
push
inc
push
test
and
sarl
mov
sub
mov
sbb
xor
adc
push
ret
jae
popf
xor
sub
lea
mov
clc
lret
mov
jne
enter
dec
mov
mov
addl
or
and
adc
je,pt
lea
and
pop
sbb
nop
rcll
insb
pushf
je
daa
sbb
push
xor
das
inc
mov
fildll
iret
lea
rcrl
and
dec
sub
repz
jle
inc
js
mov
xor
dec
inc
nop
in
xor
outsb
mov
scas
aas
shr
mov
test
enter
lds
popf
inc
arpl
jno
sub
addb
loop
mov
icebp
pop
mov
imul
xchg
mov
aad
mov
in
sbb
pop
cwtl
mov
mov
lea
inc
mov
sub
or
loope
xor
std
jb
lods
adc
loopne
xor
hlt
push
aam
aas
fdivl
inc
or
in
cs
push
cmpl
add
xlat
daa
mov
cmc
shlb
xchg
ror
jmp
sub
cmpsl
xchg
push
cmp
sbbb
in
cwtl
mov
popf
xor
sbb
dec
xor
xor
out
icebp
insl
dec
call
rcll
aas
mov
aam
fs
xor
movsl
push
test
cmp
jnp
sub
in
stos
das
test
gs
push
fadds
repnz
out
mov
sub
cmp
jns
sbb
mov
ds
sub
adc
xor
jmp
out
cmp
and
ds
mov
mov
fdivs
in
pop
repz
jae
sahf
jnp
cmp
ror
sbb
sub
add
jae
shlb
sub
xor
sbb
jl
push
aad
jno
decl
imul
push
negb
or
xor
mov
loop
xor
inc
jno
aam
inc
dec
test
push
mov
add
jp
ljmp
les
fsubp
test
jns
xchg
outsl
jb
push
fdivl
adc
add
cmpl
not
rdtsc
and
inc
mov
or
mov
jbe
jle
dec
sbb
lret
push
mov
icebp
cltd
cmp
in
mov
bound
sbb
pop
and
outsl
xor
lods
clc
add
sbb
and
pop
mov
xor
lock
xor
adc
push
in
movsb
loop
xor
add
mov
sbb
push
pop
daa
imull
lcall
or
in
xorb
xor
inc
dec
xchg
outsl
mov
lods
fs
push
dec
cmpsl
sub
and
xor
out
xor
sub
stos
xor
inc
js
scas
mov
cmc
andl
push
flds
or
pop
push
xchg
js
xchg
ds
repz
cmp
jp
hlt
push
out
addr16
xor
dec
mulb
mov
adc
cmpb
or
lea
mov
pushl
leave
rolb
mov
popf
push
xchg
repz
push
ret
or
mov
out
mov
pop
xor
jnp
jecxz
mov
mov
jbe
aaa
fidivs
aas
push
lahf
sbb
cmp
xchg
xor
les
stos
nop
jp
xor
inc
mov
xor
cmp
xor
jae
inc
outsb
push
jp
mov
adc
ficoms
xor
test
xor
sbb
imul
jno
or
stos
xor
sub
in
and
push
pop
xchg
mov
pop
xor
mov
push
ljmp
test
push
loopne
popf
xor
push
or
cmp
pop
adc
lret
mov
lea
xor
pop
ljmp
cmp
es
insb
mov
sub
pop
sub
xor
out
fisttpll
mov
and
pop
add
dec
mov
add
cmp
adc
mov
cwtl
mov
test
xor
out
ret
cmp
jae
inc
iret
mov
stc
lock
loop
xor
leave
mov
mov
and
lcall
in
xor
mov
sub
es
or
dec
mov
ljmp
add
fistps
dec
xchg
mov
push
cmc
xor
outsb
scas
adc
sub
adc
xor
inc
mov
stos
loope
jo
adc
sbb
pop
adc
inc
enter
jb
in
popfw
push
xlat
js
jmp
xor
dec
xchg
xor
stos
mov
xor
pop
or
sub
xor
into
je
mov
xchg
xor
lret
xor
cmp
cmp
sbb
mov
xor
adcb
sub
lods
dec
mov
xor
es
shrl
and
hlt
xchg
and
shll
cmp
cld
dec
xor
popf
mov
fadd
xor
ds
adc
push
xor
mov
xor
cmp
popf
loop
xor
pop
push
ret
scas
add
pushl
repnz
clc
jmp
cli
xchg
adc
xchg
xchg
mov
mov
repz
or
shrl
or
outsb
jmp
dec
xchg
push
sub
insb
push
icebp
mov
fdivrp
dec
push
cmp
sbb
lcall
pop
pop
xor
ret
xor
test
mov
clc
jge
out
stos
ljmp
pop
test
cwtl
xchg
inc
mov
ss
sub
adc
push
xor
fsts
xor
aad
inc
xor
push
add
add
xor
movsb
inc
adc
pop
sbb
dec
cs
ljmp
icebp
bound
xchg
pop
dec
adc
in
mov
popa
sub
lret
inc
mov
fiaddl
xor
add
mov
iret
jb
push
aas
and
movsl
sbb
sti
jns
mov
adc
cmp
nop
mov
into
sarl
mov
das
loope
jp
xor
repz
adc
fldenv
pop
lods
ret
adc
push
xor
xor
rclb
push
pushf
jl
push
sbb
fdivl
cmp
call
push
and
addl
cmc
mov
jns
push
inc
or
mov
xor
int
jl
lods
cmp
adc
ljmp
xor
iret
lcall
cmp
mov
pop
insl
repz
or
movsl
mov
mov
xor
mov
push
imul
notb
mov
xor
movsl
mov
and
arpl
ljmp
repz
outsb
mov
add
ret
push
xor
es
rclb
rcrl
jge
xor
stos
mov
adc
mov
mov
and
cmpl
jnp
ds
push
push
popa
xchg
ja
push
or
test
in
xor
cmp
icebp
mov
mov
pop
data16
xor
mov
imul
mov
addl
pop
pop
cmp
mov
push
ss
ret
adc
les
out
cmp
ss
push
dec
xchg
cli
xor
xor
test
pop
push
mov
shrb
imul
sbb
js
stos
lods
xchg
out
jo
jmp
xlat
adc
call
add
xor
adc
jge
push
test
push
rol
inc
xor
in
scas
xor
hlt
stos
lcall
nop
sbb
push
jnp
aas
push
inc
push
fwait
insb
mov
lcall
and
jbe
pop
and
xor
adc
mov
sbb
jmp
add
dec
out
xor
jae
push
cmp
mov
xor
loope
sahf
push
bound
in
xor
xor
mov
movsb
xor
leave
xor
std
pop
jbe
mov
sti
fisttps
xor
xor
adc
std
push
fiaddl
sbb
mov
or
ss
xor
popl
ret
das
xor
data16
fisttpl
cltd
cmpsb
push
mov
cmp
cmp
xchg
shll
lods
xchg
and
mov
mov
loop
dec
rclb
ror
pushl
fsub
in
push
jo
repz
rcll
psrlw
jl
orl
fdivs
mov
dec
lret
mov
push
mov
sub
sbb
pop
add
push
dec
push
addb
ret
dec
xor
mov
std
and
fwait
push
out
jl
jle
xor
repnz
lret
lods
aam
das
xchg
lcall
out
xor
and
aaa
arpl
test
dec
mov
mov
cmp
or
stos
and
pop
ljmp
push
mov
fwait
stos
push
cmp
cmp
xor
cmp
cs
mov
and
add
adc
faddl
xchg
mov
pusha
push
xchg
jbe
rcl
dec
ds
jb
or
xor
sub
push
pop
push
cmpsl
cmp
les
cmc
jb
dec
xchg
movb
push
mov
jl
jb
lret
fstpt
js
push
outsb
into
sti
fdivs
out
mov
cmp
push
sub
push
fisubl
stos
imul
dec
ljmp
les
pop
imul
pop
shrl
test
mov
jmp
mov
dec
jns
mov
add
mov
mov
repnz
ljmp
mov
outsb
shrl
cmc
insb
push
xor
or
pop
sbb
cmp
decb
xor
cmp
jl
xchg
mov
pop
gs
data16
or
cmp
mov
lock
add
aad
dec
mov
rol
xchg
call
jo
mov
jmp
cltd
push
or
int
push
or
push
lahf
jb
imul
mov
mov
clc
fwait
xor
hlt
xor
out
outsb
in
mov
popa
jne
pop
push
inc
push
xchg
lret
add
out
jo
push
xor
dec
xor
ds
xor
and
and
mov
mov
fwait
xor
push
jecxz
in
hlt
aas
xor
out
mov
test
hlt
mov
rcrl
inc
outsl
dec
sub
adc
cmp
push
jb
out
add
aaa
loope
cmpsb
jnp
jbe
push
xor
aam
jne
mov
ja
jecxz
pushf
inc
std
scas
adc
out
xchg
and
adc
push
cmc
addb
sbb
ja
outsl
jnp,pt
lods
outsl
jb
dec
adc
lea
and
test
popa
mov
dec
mov
or
clc
xchg
xor
or
adc
jae
aam
sbb
ljmp
mov
dec
push
stos
out
loope
and
mov
sub
xor
pushw
stos
ss
push
adc
or
shl
sub
and
jo
jo
int3
out
sbb
lahf
xchg
aas
das
cmp
inc
mov
pushl
mov
lret
jns
test
icebp
mov
stc
dec
jp
pop
adc
mov
xor
or
ret
out
xor
mov
xchg
in
pop
mov
jl
les
sti
or
pop
int
subl
sbb
xor
aam
bound
pushf
inc
sbb
mov
xor
stos
repz
jnp
fs
jl
xchg
mov
cmpsb
add
fistps
std
ret
gs
xor
pop
test
cltd
loop
leave
mov
cmpsb
inc
or
imul
push
jno
mov
push
movsb
jmp
mov
out
je
test
xor
xor
clc
out
mov
imul
and
xchg
icebp
jg
inc
push
cmpsl
stos
and
sarl
xor
xchg
xor
inc
shll
inc
imul
and
push
sbb
xor
insl
dec
sub
dec
sbbb
roll
inc
adc
out
subb
push
xor
xor
int3
jl
sti
daa
inc
iret
mov
popl
and
ss
addr16
aas
sbb
mov
mov
push
pushf
pop
subl
mov
sub
ret
jecxz
lcall
push
test
lock
out
xlat
fstpl
jb
jle
fcmovne
aaa
repz
das
push
inc
add
ds
fcoml
std
mov
aaa
sbb
and
push
adc
shr
iret
out
mov
mov
fcoms
or
inc
shrb
pop
mov
lret
xchg
in
xchg
out
pop
pop
mov
iret
sub
lock
mov
outsl
pop
jg
fwait
jnp
pop
mov
fists
test
lods
adc
push
sti
rolb
orl
dec
iret
mov
sbb
loop
or
adc
out
or
xor
mov
sub
xor
or
add
xor
mov
jb
sub
jg
fsubl
dec
pop
rcrb
pop
adc
xor
dec
sbb
in
sbb
xchg
pop
lret
adc
int
jns
cld
cmc
rcrl
cs
mov
pop
aam
or
and
fmull
negb
pop
xchg
lcall
jo
mov
mov
adc
push
mov
mov
aas
inc
scas
xor
adc
inc
and
sub
jnp
jmp
out
jecxz
push
daa
cmp
rolb
xchg
sbb
popl
notl
fs
lds
test
daa
leave
xchg
pop
adc
iret
mov
loope
ja
xor
int3
mov
cmp
mov
int
addr16
in
test
addr16
mov
in
mov
cmp
mov
mov
sbb
sbb
sub
es
jg
xor
cs
push
sub
dec
mov
fdivrs
dec
imull
dec
xchg
fiaddl
lock
mov
mov
push
fcomps
adc
adc
add
mov
sbb
bound
arpl
neg
ss
nop
xor
cmpl
sbb
aaa
sbbb
sub
mov
lea
sbb
sub
scas
mov
pushf
sub
sbb
inc
dec
pop
mov
std
mov
pop
mov
jg
test
outsl
insb
outsl
xor
and
out
shlb
adc
test
xor
sub
adc
iret
in
popf
out
mov
add
rcl
out
ljmp
adc
orb
in
pop
or
dec
es
mov
mov
int3
cmp
mov
aam
cmp
mov
sbb
xor
stos
ljmp
rolb
or
pop
movups
sbb
lds
fisubl
enter
or
je
add
dec
cs
jo
iret
inc
rep
mov
outsl
mov
jns
shlb
movups
movl
mov
pushf
addb
in
aaa
ja
outsl
mov
xor
fstl
jo
cmp
popf
fdiv
lock
ret
xchg
leave
xchg
daa
push
cmc
push
std
sbb
es
rcll
and
push
fstp
push
outsb
adc
mov
fldl
lods
lret
mov
leave
mov
sbb
jno
test
pop
imull
sti
pusha
fildl
jl
out
pop
adc
xor
repnz
mov
xchg
cpuid
xor
fldcw
cmp
push
xor
add
cmp
xchg
xor
fildll
fs
lret
shrl
and
xor
adc
pop
inc
sub
inc
loop
loope
dec
je
cmp
ja
aam
push
sub
pop
leave
lcall
sub
fs
xchg
fwait
mov
sbb
mov
xorl
pop
std
pop
jo
mov
mov
or
mov
push
das
push
shll
lock
cmp
pusha
push
adc
add
leave
into
xchg
loop
fimuls
xchg
adc
popa
cltd
sbb
jg
jns
cmp
leave
xlat
xchg
jne
jl
divb
cld
mov
imul
pop
mov
adcb
divl
jge,pt
fstps
xchg
adc
dec
add
js
das
jno
jno
mov
sub
mov
mov
lret
scas
inc
mov
cld
pop
cltd
push
pop
jge
inc
pop
xlat
das
pop
and
pushf
xchg
mov
pop
jp
aad
ja
cld
test
sbb
rolb
rcrb
bound
mov
mov
push
sub
fcoml
ret
pop
lret
aad
ljmp
sub
mov
sub
pop
and
or
in
pop
lods
mov
xchg
loope
sbb
das
mov
mov
dec
out
dec
push
cmc
mull
adc
subb
mov
push
test
stos
push
or
mov
mov
or
sbb
rcrb
lds
push
cltd
std
and
cmc
and
push
lea
adc
stos
pop
in
or
inc
or
enter
push
dec
sahf
or
adc
das
xchg
in
pop
fstpl
cltd
mov
pushf
sbb
cmc
int
mov
imul
pop
xchg
pop
sub
sbb
sbb
and
push
and
lock
mov
cmp
hlt
mov
call
pop
in
cmpsl
sbb
and
hlt
mov
ret
jb
xor
lods
lret
stos
lea
icebp
cmp
int3
cmp
loopne
cld
and
std
cmp
stos
xchg
in
fidivs
lret
stos
push
jo
int3
call
add
std
inc
pop
ja
mov
popf
jmp
xchg
xlat
nop
out
lret
imul
pushf
scas
xchg
rorl
xor
mov
das
insl
or
push
push
nop
lfence
sbb
cmpsb
mov
sub
adc
ljmp
inc
pop
imul
dec
lock
push
or
sub
std
jbe
into
add
inc
out
mov
sbb
dec
imul
add
leave
mov
pop
out
sub
in
aaa
out
mov
add
sbb
scas
mov
xchg
stc
shll
je
add
mov
sti
scas
pop
in
aam
in
mov
sbb
pusha
sbb
mov
fisubrl
inc
mov
jg
dec
pop
push
add
leave
mov
aad
fisttps
push
cmc
and
nopl
pop
jbe
inc
cwtl
or
mov
imul
xor
push
jbe
push
add
ja
unpcklps
and
cmp
lods
pop
adc
iret
cld
je
mov
pop
xor
and
inc
insb
lods
push
or
imul
outsb
jl
dec
xor
aam
loopne
xchg
inc
xlat
jecxz
xor
mov
mov
add
adc
pop
mov
mov
xchg
or
jb
sub
jno
push
push
cmp
jecxz
imul
imul
rorb
xor
add
xchg
push
test
sub
testb
or
push
out
push
xchg
jle
outsl
pop
lods
data16
xor
inc
sbb
inc
pop
or
sbb
ljmp
adc
scas
cmpsb
jmp
aaa
out
je
xor
lods
and
mov
fisttps
jne
sar
xor
add
icebp
push
push
and
lahf
pop
stos
aad
xchg
leave
add
xor
into
push
adc
lods
ss
mov
mov
shlb
add
inc
loope
or
push
jno
mov
pop
xchg
cwtl
outsb
push
sub
sbb
jo
pop
xor
test
and
mov
hlt
pop
dec
sarb
in
jbe
scas
add
int
rorl
ret
sub
incl
pop
loope
mov
push
xor
lods
pop
mov
sub
add
test
test
pusha
sub
inc
repz
sti
jp
das
xor
jmp
xor
xchg
sti
xor
or
mov
or
push
loope,pt
mov
adc
cmp
lock
pop
scas
xchg
xchg
inc
fcomi
fwait
popf
and
xor
inc
in
push
fists
jno
enter
adc
jb
jge
sub
and
sbb
jecxz
xchg
outsb
repnz
or
and
mov
and
xor
int3
test
cmpl
fwait
js
dec
inc
mov
xor
adc
jnp
adc
sbb
mov
adc
hlt
repz
mov
shrb
push
std
jne
cltd
mov
add
sahf
js
dec
outsb
in
data16
cmp
pop
stc
outsb
push
mov
push
pop
dec
xchg
sbb
fucomi
lods
and
aaa
mov
sbb
jge
mov
lahf
cmpsb
mov
sbb
jecxz
sbb
cmp
shlb
sbb
punpcklwd
adc
lock
pushf
cmp
pop
icebp
repnz
xor
jae
mov
mov
popf
ss
dec
test
sbb
cmc
ucomiss
fstp
cmp
mov
cmp
jl
scas
lret
fst
push
xor
and
cltd
jge
cmp
sub
cmp
and
inc
sub
push
scas
out
cli
push
inc
mov
push
xchg
adc
out
push
call
push
repnz
pop
popf
out
or
mov
sub
fnstsw
test
lds
cmp
mov
adc
pop
mov
iret
icebp
and
out
int3
dec
xchg
shr
icebp
fucomi
mov
dec
xchg
pop
xchg
pop
sbb
cmc
xor
xlat
test
sahf
std
jecxz
fwait
insl
push
pop
loope
push
sbb
pop
lds
inc
ja
mov
inc
movnti
push
dec
lods
ret
das
adc
cmc
lret
outsb
push
mov
into
fnstenv
mov
sub
ror
cmp
test
xor
mov
xchg
ret
cmp
bound
test
jns
cmpsl
cs
addl
mov
sub
ljmp
push
and
and
pushf
inc
addl
scas
in
and
sbb
test
shr
or
sbb
xor
mov
insb
enter
xchg
sbb
ret
pop
pop
adc
popa
and
lods
loop
mov
and
jp
push
icebp
jg
icebp
aaa
out
pop
mov
cmpsb
mov
popw
sarb
cltd
xchg
and
xchg
mov
fsubl
icebp
jae
xor
jnp
test
leave
push
xor
aad
mov
and
cmp
sub
sbb
out
sbb
mov
adc
dec
sub
dec
xor
in
xor
xor
fidivl
loope
inc
adc
sti
push
xor
or
mov
xlat
cmpsb
pop
xor
insb
jo
out
adc
push
es
cmp
mov
push
inc
inc
mov
or
sub
lea
imul
outsb
xor
add
or
test
xor
dec
aam
sbb
jb
jmp
call
lds
ret
es
inc
xchg
jo
push
adc
mov
in
pop
das
mov
pop
jbe
nop
fdivrs
push
or
hlt
test
sbb
sti
out
pushf
xchg
out
sub
and
adcl
xor
jnp
sub
daa
int3
cltd
and
mov
clc
lds
arpl
pop
cmp
stos
push
adc
xchg
adc
pop
xor
sbb
cmc
mov
dec
push
and
ret
in
mov
pop
popl
xchg
ret
pop
outsb
data16
sub
jp
bound
cmp
or
jno
movsl
repnz
das
xor
mov
push
push
adc
mov
ss
rcll
jmp
cmp
scas
subb
sub
mov
adc
add
outsl
xor
dec
cmc
dec
lret
xor
fildl
mov
push
pop
sahf
push
int3
shlb
pop
jbe
jnp
data16
test
stos
jp
xor
push
ss
sbb
push
insb
push
int
lahf
popa
mov
into
add
xchg
cmp
sbb
mov
rep
pop
dec
stc
inc
adc
jp
mov
xor
sbb
cmp
and
test
push
cmc
dec
shll
inc
popf
adc
jns
xor
ret
xlat
inc
cwtl
mov
aad
xor
call
fidivs
sub
sti
xor
int
fistps
enter
xchg
xchg
adc
mov
cmc
xor
mov
hlt
sbb
pop
and
mov
test
pop
sub
mov
xor
dec
or
and
adc
lds
cld
addr16
add
inc
ret
and
jmp
aad
dec
in
clc
xor
ret
cmp
js
sbb
fistps
mov
pop
lret
ljmp
mov
test
fstl
out
mov
pop
xor
cmc
sarb
push
insl
movsl
and
sbb
inc
fildl
cli
shr
iret
cmp
xor
enter
push
cmp
and
jbe
imul
je
add
aam
xor
sub
push
mov
lcall
dec
divb
inc
dec
andb
ss
aam
push
xchg
push
outsb
rclb
insl
adc
cltd
int
xor
into
lea
fxch
lcall
xor
push
and
shll
ljmp
lahf
pushf
insb
xchg
jb
push
dec
xor
bound
loopne
sub
xchg
inc
sbb
lock
stc
sub
xlat
shl
mov
jne
push
in
shlb
icebp
cmc
rorl
mov
xchg
or
jae
scas
mov
aad
imul
jo
push
pop
insb
sbb
dec
xor
arpl
inc
inc
adc
mov
cmc
add
mov
enter
push
aaa
xor
cmp
shrb
add
sbb
std
xor
xchg
loope
aad
lock
in
test
shll
pop
add
push
add
pmaxsw
mov
hlt
and
xor
xchg
adc
or
or
out
loop
xor
push
imul
into
insb
in
and
adc
icebp
push
mov
call
sub
xchg
adc
inc
pop
lcall
jns
push
cld
outsb
sub
in
xchg
push
test
mov
pop
xchg
shrl
sub
push
addr16
ja
add
out
or
fists
sub
xor
mov
es
mov
xor
jnp
xor
pop
jge
and
clc
xor
cwtl
push
jns
shlb
mov
popf
stc
ja
or
push
adc
aad
xchg
xor
loop
xor
mov
call
xor
push
add
xchg
pop
or
pop
ret
push
sbb
and
mov
testl
cmp
jae
push
stos
aad
dec
movsl
xchg
inc
fisttpll
adc
jns
xor
sbb
mov
aas
xchg
sahf
xchg
cmp
insb
xor
inc
mov
pusha
xor
repz
or
cmp
ljmp
add
in
push
rol
add
inc
xor
stc
sub
and
mov
pop
arpl
adc
aaa
mov
out
jo
out
bound
dec
xor
je
sbbl
jnp
sbb
divb
adc
loope
lds
jnp
mov
mov
sub
mov
dec
cmp
divb
and
xchg
xor
mov
loop
mov
cmpsb
mov
dec
fdivrp
lcall
jge
and
pop
stos
or
in
push
lock
or
xor
mov
stos
push
into
mov
sub
fisttps
aad
idivb
xor
sub
push
jnp
or
pop
xor
pusha
test
adc
xor
mov
dec
push
loop
dec
sub
ds
xor
ret
inc
adc
sti
xorl
cmpsb
clc
jp
leave
arpl
mov
sub
jge
lds
xor
dec
ficomps
mov
cmpb
xor
int
hlt
outsl
sub
fcmovbe
out
adc
and
mov
xor
movsl
popf
xor
lods
outsb
jno
jb
mov
fsts
jbe
and
movsl
xor
xchg
push
std
aaa
mov
push
dec
xor
cmpsl
call
test
xor
add
adcl
adc
shll
add
mov
mov
int3
inc
jmp
adc
inc
add
or
jbe
pop
mov
sbb
push
mov
sbb
adc
push
jge
inc
and
and
adc
cmp
hlt
xor
jne
xor
roll
shll
xor
in
and
xor
jp
sbb
imul
incl
add
dec
xor
pop
loope
push
push
mov
movb
push
mov
pop
loope
xchg
lcall
jecxz
imul
xor
sub
mov
divb
js
jmp
lods
outsl
mov
mov
mov
or
jl
or
mov
fsubr
andb
les
mov
cmp
iret
xchg
xor
mov
outsb
xchg
sub
cmpsl
sbb
xor
shlb
xor
push
fdivp
add
insb
sub
mov
xor
mov
cmp
cmpsl
test
sub
or
and
cmp
mov
arpl
repz
mov
popa
ds
jo
out
adc
xor
xor
int
sbb
testl
sbb
cwtl
icebp
loopne
pop
in
ljmp
push
pusha
decl
icebp
fidivrl
mov
mov
stos
jp
shlb
dec
divb
jnp
xor
cltd
aam
and
ss
aas
inc
add
imul
mov
mov
lea
jle
mov
jbe
xlat
sbb
dec
out
xor
mov
sub
adc
mov
pop
jecxz
pusha
mov
jno
out
icebp
adc
mov
test
add
inc
aad
scas
sub
adc
adc
jno
imul
lcall
mov
or
lods
mov
outsl
sbb
shlb
aad
jl
fstpt
cmpsl
xchg
jo
jo
call
out
pop
add
or
dec
push
adc
cltd
cli
test
out
push
mov
inc
pop
outsl
push
push
cmp
sub
mov
xchg
cmp
imul
in
scas
pop
pop
xor
pop
dec
int
pop
jb
stos
aad
scas
pop
popf
xor
fldcw
das
add
or
add
shrb
dec
leave
push
pop
xchg
xor
jmp
pushf
or
add
mov
enter
push
mov
mov
pop
jmp
jno
cmp
xor
mov
push
dec
es
mov
push
adc
xor
insl
mov
stos
andb
ret
cmp
leave
out
mov
cld
lods
and
das
jb
inc
in
xchg
jno
and
pop
in
adc
mov
or
repz
pop
mov
inc
add
dec
lods
std
pushf
mov
mov
fwait
cld
das
add
dec
das
xchg
daa
or
dec
movsb
movsl
sbb
fs
adc
adc
or
or
cmp
dec
mov
mov
mov
pop
shlb
pop
mov
mov
inc
scas
xor
lods
xlat
pop
sub
fisubrl
jnp
loope
dec
ds
std
movsl
sbb
fdiv
fdivs
mov
in
int3
mov
jno
dec
mov
outsb
sbbl
insl
in
fmul
and
stos
adc
dec
xor
sti
jno
mov
das
pop
inc
popf
out
mov
out
scas
rolb
pop
add
popa
adc
mov
push
enter
and
rclb
cli
xchg
adc
xor
fwait
cmpsb
xchg
out
fldenv
ja
sahf
jae
sbb
mov
lock
or
mov
icebp
xor
dec
mov
aam
adc
cwtl
stos
xchg
or
pusha
adc
jg
in
xor
mov
ja
sbb
es
mov
lahf
jo
dec
into
and
test
jp
mov
jge
sub
jns
sub
pop
subl
mov
pop
fimull
fidivs
imul
data16
add
xor
mov
popa
inc
lcall
xor
cmp
rorb
and
dec
mov
rcll
mov
mov
pop
cmpsl
enter
xor
mov
js
sub
into
and
adc
leave
cmpps
xor
or
ror
aaa
jo
push
jae
and
pop
xor
popf
pop
fcomip
cmpsb
xchg
add
lret
cmp
addl
jns
xor
mov
adc
push
cmp
xchg
sbb
jno
inc
inc
adc
push
xor
inc
sub
lahf
jle
sbb
mov
dec
mov
pop
push
out
xor
mov
mov
shll
sub
leave
mov
adc
and
pop
incb
stc
in
clc
jo
in
lahf
jo
shrl
adc
xor
fistpl
lea
xor
pop
mov
repz
adc
mov
scas
push
mov
es
inc
rclb
popf
pop
inc
sbb
mov
jl
gs
xor
fiadds
mov
shlb
rcr
mov
inc
cmp
fiaddl
ja
lods
aam
nop
dec
ljmp
pop
jp
addl
int
push
sbb
push
lea
lods
fidivrs
xor
pop
aaa
shll
std
xor
mov
sub
aam
push
ficomps
inc
das
addb
xor
ret
inc
add
loopne
pop
js
xchg
xor
cmp
popa
adc
insl
and
ljmp
pop
shlb
inc
sbbl
jg
popf
fimull
out
xor
mov
mov
push
jno
ret
inc
mov
mov
or
or
xchg
mov
je
adc
xor
iret
sub
push
and
jb
xor
dec
xchg
and
xchg
inc
add
xor
in
popf
and
cmp
adc
pop
fiadds
sub
xor
dec
cmp
sub
inc
inc
xor
push
fcoms
test
in
ret
add
lods
xor
adc
fmulp
into
pushl
stos
xchg
push
movsl
arpl
inc
ret
xor
mov
pusha
fldenv
cwtl
xor
and
movl
cmp
repz
ret
xchg
icebp
add
cld
xchg
dec
in
lret
shll
mov
mov
xor
insb
mov
cwtl
xchg
sub
test
test
jb
adc
sbb
daa
andb
icebp
js
xor
cmpsl
mov
mov
adcl
xor
cmp
jno
xchg
adc
push
inc
pushf
mov
mov
cwtl
push
adcb
xchg
and
loopne
inc
cmp
and
dec
jle
dec
stos
xor
push
xor
mov
mov
mov
push
shlb
xchg
aas
xchg
mov
and
xchg
jnp
mov
adc
xor
fcmove
out
sub
pop
xor
jno
stos
or
nop
xor
ljmp
mov
xor
and
arpl
jb
mov
out
shll
xor
mov
es
aad
out
jl
mov
adc
iret
push
mov
xlat
fs
mov
fcoms
lahf
jb
aas
in
call
push
lret
outsb
mov
adc
inc
xchg
ret
jge
push
push
xor
jae
cwtl
shl
jns
xor
cld
mov
fwait
bswap
test
rcll
dec
push
push
pop
lods
stos
mov
in
jge
daa
mov
push
mov
popa
and
xor
fcomi
cltd
mov
imulb
les
scas
rorb
out
xor
ffreep
adc
or
or
mov
std
mov
dec
and
imul
xchg
push
mov
adc
les
xchg
ficoml
test
sbb
aaa
sub
lea
fisttps
int
inc
hlt
outsl
fldl
out
ss
xor
aad
je
in
xor
and
xor
clc
or
mov
and
out
xchg
and
pop
arpl
fmuls
sarl
enter
sbb
xor
or
loopne
xor
aam
xchg
sti
xchg
mov
add
mov
into
cli
in
andl
pop
cld
sub
mov
shrl
filds
or
inc
dec
repz
jmp
add
sub
loope
data16
test
mov
decl
jns
aaa
rcl
dec
xchg
jmp
xchg
inc
sbb
dec
push
mov
in
sub
push
xchg
jnp
xchg
jecxz
sub
adc
xchg
sbb
xor
aad
rorl
and
mov
xchg
add
xchg
imul
gs
sarl
xchg
aas
test
and
mov
cmp
dec
mov
cmc
inc
xor
lea
xor
push
ljmp
je
aam
dec
push
push
mov
and
xor
movsl
daa
fistl
xor
jmp
shll
shll
xlat
es
and
shll
or
cmc
xor
add
les
shl
nop
mov
xchg
fmul
mov
push
rcr
rcl
pop
push
idiv
sbb
mov
add
sub
or
xor
sbb
loop
mov
sbb
mov
aam
or
dec
jecxz
xor
shrl
lret
test
pop
pusha
pop
sbb
outsb
leave
scas
mov
daa
sarl
xlat
aaa
jl
mov
mov
daa
mov
push
mov
push
dec
dec
sub
pop
mov
std
inc
sbb
jns
frstor
bound
out
adc
xor
xchg
stc
call
mov
sub
push
mov
xor
xor
sub
into
xor
xchg
push
jno
test
push
jg
dec
jno
dec
adc
aaa
and
mov
dec
dec
movsl
sbb
into
xor
dec
stc
pusha
xor
pop
jmp
xchg
mov
pop
daa
xchg
cmpsl
test
mov
std
icebp
in
dec
inc
push
das
sti
subb
cmp
invd
sbb
rcr
dec
scas
pop
cmp
in
mov
cmc
pop
imul
pop
jb
add
loopne
mov
sahf
push
xor
stos
mov
ljmp
or
idivl
sub
lock
cmp
std
or
pop
in
sub
sub
test
andb
stos
mov
mov
test
shrb
lret
test
xor
xor
enter
stos
push
rcll
pop
cmp
das
lret
mov
add
fistl
das
and
popa
mov
push
test
movsl
fldt
lahf
cmp
cli
cmpsl
sub
adc
sbb
push
popa
cmp
dec
stos
sbb
sbb
sahf
lock
sti
sbb
in
add
cmp
aad
pop
dec
push
xchg
pop
jmp
sbb
and
mov
pop
movsb
dec
cli
inc
daa
mov
cmpsl
or
pop
push
jge
push
sahf
xlat
stos
cmp
jnp
xor
jnp
mov
fwait
movsb
sub
sub
mov
dec
sbb
push
dec
loop
ljmp
push
push
inc
and
mov
or
lods
wrmsr
sub
and
add
sbbb
lock
sub
popa
fistpl
adc
inc
sub
icebp
sub
lds
test
lret
std
pop
jb
mov
pop
mov
adc
js
iret
inc
add
dec
add
push
xor
cmp
jg
mov
mov
add
push
jge
inc
lret
mov
std
cmp
stc
jo
push
aaa
shlb
xor
insl
cmp
shrl
add
stos
jl
mov
cltd
movsl
cld
and
lods
stos
inc
movl
rorl
aas
jns,pt
adc
fnstenv
mov
xor
pusha
in
add
push
xchg
and
leave
fmull
sbb
adc
mov
jo
push
addr16
fxch
fbstp
subb
movsl
lods
add
pop
cltd
idivl
movsb
stc
or
rcrb
cmp
cmp
dec
mov
adc
sbb
mov
test
jo
jle
add
pop
xor
divb
test
aaa
dec
aas
cld
scas
jo
aam
and
push
cmp
inc
jecxz
ficompl
sbb
lar
popf
adc
ds
push
and
dec
out
inc
pop
negl
adc
in
movsl
sbb
rclb
out
mov
enter
mov
pop
ror
push
movsl
and
xchg
jle
ss
lock
jecxz
hlt
jge
enter
xlat
cmc
out
mov
or
sub
bound
insb
pop
dec
insl
inc
scas
dec
pop
xor
mov
push
mov
jb
or
lret
mov
bound
and
and
sbb
jmp
scas
into
ljmp
xchg
ds
and
daa
dec
dec
or
push
arpl
adc
push
out
ror
pop
sbb
aas
imul
int
push
sbb
pusha
rcll
shll
xchg
mov
std
or
mov
ljmp
cltd
rolb
push
pminsw
mov
dec
xor
mov
mov
test
movsl
lea
or
xor
loop
rcrb
out
subb
mov
mov
popf
fmull
test
movsb
adc
fsubl
cmp
sahf
or
mov
jge
fldenv
push
cmpsb
xchg
adc
cs
out
dec
sti
insb
mov
mov
daa
in
orl
mov
fs
inc
push
cmpsl
mov
fnstenv
cld
mov
cwtl
xchg
adc
mov
xor
cld
or
cld
jg
inc
mov
mov
seto
jecxz
enter
jo
mov
lret
lock
iret
jae
fdivr
add
cltd
push
add
push
or
jle
or
fcomps
cld
das
and
loopne
sbb
dec
mov
inc
inc
pop
mov
and
adc
and
sbb
movsl
shl
mov
dec
iret
mov
mov
jo
test
daa
das
mov
and
mov
add
dec
les
fcomps
xor
hlt
push
out
jno
sbb
sahf
sbb
jmp
inc
adc
idivb
lock
out
add
and
mov
int3
xchg
scas
or
pop
push
in
movl
repz
imul
or
mov
into
popf
cmp
and
dec
jno
xor
sbb
fidivrl
lods
push
fidivs
fcomi
xchg
inc
xchg
call
and
dec
sbb
adc
lds
lock
adc
icebp
mov
jbe
ret
scas
rcll
inc
shll
push
mov
dec
mov
push
imul
sahf
mov
inc
mov
mov
idiv
cmp
orb
push
sub
mov
out
cmp
dec
xor
sar
xlat
shrl
pop
jb
sub
nop
cmp
scas
repz
push
into
bound
sbb
mov
das
es
nop
into
bound
pop
fmull
mov
xchg
std
push
xor
outsl
scas
jno
mov
xor
push
ss
setno
fstps
mov
f2xm1
mov
psrlq
xor
cmp
push
lcall
push
sub
pop
sbb
test
addr16
rcll
xchg
cmp
mov
push
adc
aaa
mov
test
cmpxchg8b
leave
push
scas
outsl
cmc
hlt
sahf
aad
mov
fcomip
cld
or
cmc
xor
cmc
mov
push
je
outsl
les
mov
xchg
push
sbb
subb
js
repz
inc
dec
dec
xor
test
xchg
jge
pop
and
mov
add
std
pop
cltd
das
test
das
dec
jno
fnstcw
shlb
mov
inc
decl
sub
outsl
xor
arpl
xor
movsl
cmp
subb
das
push
lock
mov
stc
int
pop
jb
dec
mov
pop
sub
adc
jnp
push
mov
cmp
fs
addb
stos
jl
shll
dec
lahf
fadds
mov
lahf
cmc
pop
movsb
xor
arpl
sarl
mov
dec
adc
mov
xchg
shll
movsl
xchg
pop
add
add
std
jno
jno
movsl
dec
mov
inc
das
push
xchg
push
mov
fdiv
popf
out
shlb
negb
gs
mov
into
sahf
ljmp
std
scas
xor
mov
mov
add
lds
outsb
shlb
adc
in
cmp
cmp
sahf
adc
add
add
std
and
std
fwait
sbb
inc
add
into
das
xchg
sbb
movsb
mov
push
xchg
outsl
idivb
cld
pop
push
std
push
and
jbe
int
pop
lock
adc
or
pop
popf
mov
lahf
aaa
fnstcw
jge
std
push
and
mov
int
adc
bound
inc
shrd
out
nop
xchg
bound
lret
xchg
daa
or
xchg
sbb
lcall
fcomi
out
mov
mov
xchg
pop
fs
push
sub
bound
scas
jb
sbb
jge
mov
xor
mov
pop
lock
into
bound
mov
mov
cmp
cmpxchg
lods
sarl
jl
pop
jl
and
bound
jg
and
jno
jb
mov
cltd
push
test
out
and
and
icebp
cmpsb
adc
adc
mov
mov
test
jo
cmp
cmp
ds
cmp
into
bound
sbb
clc
fildl
adc
aam
scas
dec
std
fistpll
lds
jae
vpavgw
notb
push
inc
push
sbb
lcall
cmp
add
xor
fs
xor
enter
mov
mov
pop
jne
cld
aam
dec
cli
and
shlb
bound
in
mov
test
movsb
xchg
xchg
arpl
pop
and
mov
shrl
iret
xlat
lret
dec
pop
add
push
push
and
js
enter
in
movsl
xor
popa
cmp
pop
push
jg
pop
mov
xchg
xchg
scas
lret
mov
push
out
pop
mov
jno,pn
push
dec
out
shrb
push
insl
divl
scas
insb
in
decl
lock
jb
scas
xor
sub
dec
sbb
pop
jb
pop
shll
sub
mov
cmc
popf
clc
mov
imul
xor
daa
inc
inc
testl
dec
mov
bound
jno
stos
xor
cld
sbb
shr
cmpsb
call
cmpsl
mov
inc
movsl
cmp
movsl
inc
jns
out
popf
and
test
pop
scas
dec
xor
aad
mov
mov
xlat
mov
pop
jb
dec
pop
fnop
jmp
or
std
rcrb
jnp
push
sub
sbb
pop
pop
mov
jb
jl
push
int3
lock
subl
dec
jns
int
rcll
aas
subl
or
sbb
popf
notb
sub
push
mov
subl
and
jnp
push
sub
out
adc
lds
xor
lock
into
stc
in
jnp
xchg
out
jno
rcll
mov
mov
and
mov
cmpsl
in
add
xor
xor
iret
or
or
sbb
mov
pop
sti
aad
pop
xor
cmpsl
shl
jmp
scas
das
movsl
lahf
les
fisttpl
sub
out
xchg
and
and
fwait
das
pop
shll
call
cmp
lahf
jne
sub
sbb
push
dec
cmp
or
inc
mov
std
jno
cmp
push
jl
sbb
jno
xor
pop
jnp
adc
stc
pushl
es
or
xor
dec
ficoms
cmp
adc
pop
pushf
into
in
pop
jle
xor
dec
sbb
xchg
fs
pop
xlat
rolb
nop
and
aam
push
pop
and
lea
adc
adc
std
pop
push
inc
mov
fnstcw
setge
dec
jns
movsl
mov
push
push
xchg
pop
dec
dec
incb
mov
pop
fsincos
imul
mov
out
fwait
xlat
clc
idiv
adc
jle
cs
push
lods
in
ja
ja
out
popf
idivl
mov
sub
and
das
into
outsl
cmp
xchg
int3
xor
jo
int3
out
int3
sbb
in
inc
and
push
pop
clc
sbb
sub
outsb
push
iret
fcomp
dec
cmp
das
mov
pushf
inc
lea
cmp
mov
jmp
xor
xlat
dec
fprem
or
int
test
pop
cmp
aaa
fmull
int3
dec
or
dec
or
in
push
pushf
aaa
adc
fldenv
fcompl
xlat
pushf
int3
aam
fmulp
rcll
sbb
mov
ja
push
jg
in
mov
lret
aaa
jge
fidivl
mov
int3
mov
cs
mov
into
outsl
movd
cmp
dec
repnz
divb
hlt
sbb
js
or
out
mov
clc
rcll
xchg
addr16
emms
dec
ja
ja
pushf
shrl
aas
xchg
daa
ja
jg
dec
clc
inc
push
mov
xchg
ja
mov
bound
pop
push
cmp
push
inc
shll
xchg
mov
mov
mov
pop
aas
sbb
mov
pshufw
mov
out
divb
emms
dec
mov
pop
mov
mov
mov
fldt
push
dec
mov
push
lcall
roll
dec
mov
cmp
enter
leave
ja
cmp
cmp
mov
pushf
mov
push
xor
inc
adc
pop
mov
fsts
nop
js
sbb
add
test
add
cltd
fmul
cwtl
lcall
add
fsts
in
sub
xor
ss
test
xchg
fcmovnb
fdivrl
fsts
xor
repnz
or
sbb
adc
jl
push
jp
lcall
jno
xchg
and
mov
inc
das
xchg
xor
rep
push
nop
jo
mov
dec
dec
cli
pop
push
push
rcr
adc
jno
arpl
push
mov
scas
mov
sbb
movsl
icebp
cli
dec
outsb
mov
sbb
mov
xor
xchg
mov
inc
inc
xor
mov
lock
outsb
add
xchg
fildl
iret
adc
sti
popf
pop
or
cmc
xchg
js
xchg
sbb
lcall
inc
fmuls
push
and
xchg
int3
cld
loope
xor
sahf
outsl
iret
cmp
and
xor
cmpb
dec
mov
and
mov
xor
cmp
lcall
push
push
lcall
jns
fsubl
inc
lret
jno
xor
add
jecxz
out
xchg
lcall
sbb
sub
pusha
cwtl
fnstenv
repnz
fimuls
pop
inc
sbb
movsb
loop
mov
idivl
orl
out
daa
xchg
in
dec
aad
sbb
fadds
sbb
out
arpl
sbb
jns
or
and
fstpl
cmp
std
jnp
icebp
jne
aad
add
and
adc
xchg
xor
cli
inc
xor
and
jbe
ds
mov
push
dec
cmp
inc
sbb
in
mov
dec
mov
mov
icebp
stos
adc
adc
mov
and
nop
pop
xor
inc
imul
jo
cmp
addr16
and
test
cmp
inc
fwait
adc
out
aas
lret
pop
jge
test
mov
outsb
xor
sbb
jp
dec
xchg
rclb
xchg
test
andl
fsubs
and
or
sbb
and
mov
jns
xor
test
mov
outsb
mov
in
jne
mov
pop
in
cs
clc
call
je
mov
fbstp
push
cmp
pusha
xlat
or
lock
fimull
push
inc
mov
adc
fwait
jo
or
and
icebp
adc
sbb
icebp
and
addl
push
mov
das
adc
mov
xchg
stc
dec
push
jno
dec
out
xlat
test
mov
dec
add
enter
jno
mov
jecxz
add
mov
sbb
lcall
mov
les
fstl
lcall
xlat
shlb
cmp
mov
jmp
popa
rol
inc
and
in
or
or
idivb
jno
in
fwait
mov
jmp
add
pushl
fwait
and
mov
pop
mov
ror
pop
and
leave
xchg
frstor
repz
lods
lock
xor
mov
es
push
jl
mov
xchg
sub
mov
cli
adc
xlat
cmc
in
xor
fsubl
sbb
movsl
xchg
xor
repnz
xor
mov
mov
adc
ds
xor
ficoms
xor
pop
nop
adc
jl
or
mov
test
mov
cld
addl
ja
xor
lods
lea
jp
sbb
movsb
xchg
mov
hlt
and
adc
xor
test
ja
orb
out
cmp
mov
fsubrs
cmp
and
imulb
int
pop
mov
movsb
push
xchg
xor
arpl
pop
jmp
mov
add
outsb
movsb
mov
dec
sub
sub
xor
adc
cmc
sub
jo
fisubrs
ret
xchg
push
out
inc
jmp
fadds
mov
cmpsb
xor
mov
paddd
icebp
push
push
push
test
sbb
and
sbb
cmpsl
lcall
scas
xchg
push
insb
addl
mov
inc
fcompl
xor
nop
mov
outsb
jo
adc
fiadds
mov
and
fbld
leave
xor
shrb
test
shl
out
push
xor
xchg
or
xor
popa
push
mov
pop
aas
mov
and
scas
mov
adc
jno
in
or
jae
into
mov
mov
push
pop
xor
jmp
sbb
cmp
cmp
pop
fstpt
jp
rcrb
mov
dec
jo
fnsave
loope
sub
dec
adc
pop
in
std
mov
shrl
sbb
or
mov
xor
adc
call
add
sbb
aaa
shrl
sub
dec
mulb
or
in
cmp
xor
out
mov
add
dec
daa
xor
xchg
cmp
dec
adc
dec
adc
mov
xchg
loope
jae
push
aas
and
mov
scas
roll
mov
imul
xlat
sbb
xor
mov
fwait
or
adc
adc
dec
out
in
ficoml
add
pop
sub
cmpsb
and
lds
inc
je
fmull
mov
fldt
adc
push
pop
xchg
std
subb
xchg
shl
adc
inc
aad
shrl
dec
out
pop
enter
mov
and
mov
pop
outsl
aad
push
xor
inc
push
and
scas
es
push
xchg
roll
xchg
mov
mov
push
inc
imul
stos
xchg
fldl
jg
je
jecxz
xor
in
mov
xor
jo
push
lea
fwait
scas
idivl
leave
lock
or
lods
aad
jge
popf
ljmp
mov
and
ljmp
adc
xor
adc
mov
inc
aad
mov
shrb
jnp
dec
mov
test
xchg
andb
clc
inc
jl
push
adc
sbb
dec
and
out
add
jmp
jl
clc
xchg
fwait
adc
adc
xorb
lock
add
aas
fistps
mov
aam
lret
fisttpl
dec
pop
xchg
jo
xor
inc
mov
push
mov
cmp
xor
lret
xor
ljmp
xor
lcall
lcall
and
adc
daa
mov
sub
shll
pusha
push
aad
pop
shrl
mov
cmp
push
xor
mov
into
fsubrs
pop
lret
mov
mov
std
add
xor
mov
ficompl
jg
pop
or
inc
xor
repz
mov
adc
mov
pop
insl
inc
mov
push
leave
cld
mov
add
and
xor
xor
and
sbb
pop
je
std
jae
inc
xorb
testb
aam
pop
leave
loop
push
jle
int3
in
outsb
xor
inc
popf
loopne
into
stc
scas
push
fildll
xor
in
adc
int
cmp
repz
std
pop
sub
xor
les
stos
dec
or
xor
xor
inc
fidivrl
sub
mov
mov
cwtl
jp
iret
sub
sub
inc
mov
jle
xchg
pop
adc
pusha
and
dec
mov
ret
adc
mov
insl
cmp
push
lcall
mov
mov
push
inc
xor
jae
jno
popf
lret
pcmpeqw
scas
dec
xor
sbb
fcmovbe
inc
mov
inc
repz
out
imulb
pop
adc
aad
pop
sub
add
sbb
push
xchg
inc
mov
popf
mov
adc
gs
xor
dec
inc
dec
jb
push
jge
ret
cmp
popa
pop
or
push
xor
sub
ja
popf
adc
sbb
adc
dec
cmpsb
movsl
ret
sub
cmc
ss
or
push
xor
inc
adc
lcall
ds
or
inc
inc
cmpsb
inc
add
ret
or
adc
add
jg
out
daa
push
pop
scas
dec
dec
push
dec
jp
test
mov
inc
jmp
mov
pop
mov
outsb
xor
mov
shr
ret
pushf
clc
xor
push
test
adc
aam
sarl
outsb
adc
mov
pop
mov
mull
jo
or
xchg
xchg
and
push
aad
cli
mov
jo
inc
into
shll
jns
and
adc
mov
data16
or
repnz
aam
mov
mov
sbb
jno
mov
dec
xor
add
push
jmp
push
fdiv
mov
popf
imul
sti
lods
adc
xchg
mov
push
mov
push
sub
imulb
outsb
push
scas
cld
jge
imul
dec
push
pop
push
pop
jge
cmp
sub
ja
cmp
insb
mov
lods
je
sub
out
add
mov
xlat
into
int
cmp
and
jmp
mov
mov
bound
pop
inc
sti
inc
loope
push
dec
aaa
cmp
test
mov
xchg
ret
ja
es
pop
sub
rcr
adc
scas
in
rorb
mov
imul
je
cltd
ret
inc
jg
enter
insb
or
dec
xor
xor
mov
cmpsb
jae
mov
add
in
sti
sub
push
addr16
mov
jl
xchg
jo
xor
jo
adc
bound
mov
rcl
rcll
cmc
femms
shlb
adc
xchg
sub
shlb
or
and
pop
je,pn
stos
aam
add
sub
mov
push
adc
int3
or
mov
jge
or
outsl
in
mov
xor
adc
fstpl
enter
out
adc
mov
fimull
enter
aaa
shrl
mov
cs
push
enter
ljmp
shlb
out
shlb
js
das
or
pop
ljmp
daa
sub
adc
inc
or
pop
mov
add
sti
std
xor
imul
sbb
add
push
popf
into
sbb
imul
je
fcomi
scas
out
mov
mov
dec
dec
sbb
push
mov
jo
adc
hlt
popf
inc
sbb
rsqrtps
lret
cli
xchg
das
xchg
outsl
cmpsl
fprem1
rclb
stc
or
sarl
mov
insb
cltd
and
int
aad
xchg
lds
in
dec
push
cmp
pushf
sub
shll
sbb
test
and
imul
test
das
rcl
in
pop
sbb
sbb
loopnew
lods
pop
stc
fsubs
pop
pop
xchg
icebp
sbb
loope
test
push
dec
sbb
nop
popf
cld
fistpl
nop
ja
jb
clc
andb
fildll
ss
push
fistps
fstpt
inc
adc
add
lahf
addr16
mov
jo
dec
dec
xchg
pop
add
mov
test
decl
setp
scas
subb
or
adc
xorb
add
xor
adc
pop
roll
nop
fsubs
xor
fprem1
andb
jno
xor
mov
pop
jb
push
stos
mov
cltd
popf
and
sub
sub
cmp
mov
jo
dec
ss
xor
repz
sti
add
addr16
aad
mov
add
adc
nop
mov
mov
mov
mov
pop
mov
ds
fiadds
lahf
sub
push
fldcw
cltd
pop
add
mov
fsincos
mov
lret
stos
xor
cmpsb
cltd
push
pop
lods
cmpsl
scas
das
sub
mov
add
stos
fisttpl
mov
in
movsb
leave
cwtl
mov
rcrb
mov
push
mov
push
iret
std
fs
mov
int3
cmp
lock
jecxz
sahf
fwait
and
pop
enter
push
cmp
inc
in
xor
mov
lahf
imul
jle
cmpsl
jmp
scas
dec
mov
scas
jle
das
int
or
in
mov
jbe
push
leave
or
pop
and
dec
fcoms
imull
jmp
mov
test
enter
pop
jae
negl
or
rorl
dec
sub
fwait
or
fwait
pop
in
mov
and
cli
xchg
ljmp
sbb
and
xchg
lds
or
push
add
notl
out
xchg
and
mov
rcrb
popl
fst
xchg
xchg
cli
roll
push
rdmsr
dec
xor
ficompl
out
cmpsb
xchg
rorl
rcll
out
push
shlb
mov
dec
jns
stos
adc
jae
add
or
xchg
adc
adc
mov
call
lahf
ds
and
pop
addr16
ret
ds
idiv
das
inc
lahf
dec
add
sub
sub
inc
imul
jb
mov
mov
push
enter
sbb
or
jmp
es
sub
dec
mov
fmull
clc
xor
lods
fsubl
jno
sub
outsb
add
int
popa
inc
or
leave
mov
jg
adc
testb
add
xchg
out
fxtract
and
push
cmp
lea
fcoml
sbb
rclb
xchg
jo
arpl
add
pop
ret
je
pop
das
xor
pop
xchg
lret
popf
fnsave
mov
cmp
inc
xlat
sarb
sbb
fnsave
or
sar
decl
aaa
std
icebp
xor
xor
sbb
pop
push
jnp
icebp
xchg
sub
pop
clc
jge
sbb
mov
fidivrl
pushf
mov
lret
sub
jns
shrb
scas
das
jp
push
pop
mov
lods
jmp
and
sbb
push
sahf
das
push
loope
shrl
out
loope
cltd
push
xchg
rep
cmp
cmp
enter
or
pushf
adc
adc
mov
loop
push
enter
dec
adc
xor
mov
fcoml
pop
cmpsb
std
cmp
mov
sub
rclb
push
addr16
adcb
push
mov
out
movsb
pop
mov
lods
mov
inc
inc
mov
xchg
xor
and
enter
push
loope
rolw
filds
sbb
arpl
push
stc
xor
add
pop
imul
adc
push
std
repz
and
insb
repz
adc
push
mov
sbb
jmp
xchg
jo
hlt
aad
xchg
les
xor
inc
in
xor
xor
inc
fsubrl
xor
jmp
fnsave
and
cmp
adc
enter
hlt
call
xchg
lret
roll
mov
mov
adc
fisttpl
pop
es
out
xchg
add
sbb
jmp
sahf
cmp
mov
lods
push
out
inc
das
fwait
mov
inc
fisubs
push
and
pushf
mov
mov
dec
fistl
xchg
push
dec
mov
add
or
jo
pop
mov
sub
xchg
sub
sub
inc
mov
cmpsl
pop
xor
test
adc
es
cmp
lods
test
adc
xor
out
jg
sbb
xor
mov
push
fldl
inc
in
inc
mov
and
les
out
int
insl
insb
addr16
mov
xor
aaa
test
aam
out
cli
fiaddl
xor
es
cmpsl
adc
xlat
xor
mov
aaa
push
push
ds
rcrb
popa
sub
mov
pop
clc
dec
mov
xor
inc
adc
js
inc
je
adc
add
push
ficomps
ss
test
push
pop
xor
test
pop
outsb
into
push
jg
and
mov
sahf
js
inc
lahf
jmp
jns
add
ss
lret
adc
shl
push
jl
mov
or
mov
xor
subb
repz
fisubl
mov
mov
dec
push
shll
jbe
lcall
cmc
sub
in
xor
pop
pop
cmpl
cmp
sbb
xchg
sub
xor
add
add
dec
out
xor
mov
jp
rcrl
jnp
mov
mov
sbb
cmpsb
fwait
adc
xor
mov
jle
pop
movsb
out
jo
and
and
int
shll
fstpt
jnp
fisubl
jl
outsl
sub
push
cltd
xor
fisttpll
xor
shrl
xor
mov
lock
out
jmp
lock
adc
movsl
mov
icebp
fsubrs
push
pmaddwd
jge
ret
ret
nopl
adc
aam
pop
hlt
sahf
ret
sub
out
movsl
adcl
data16
push
mov
iret
pop
out
cmp
dec
dec
cs
daa
jmp
adc
adc
flds
jno
push
push
jne
outsb
cmpsb
jae
cld
push
adc
jne
mov
mov
inc
adc
mov
repnz
mov
lret
cmpsb
mov
sub
pop
push
jo
dec
inc
sbb
xchg
push
cmpb
lret
dec
in
dec
xor
outsl
push
aaa
dec
sti
xchg
mov
fisttpl
lcall
mov
leave
mov
xchg
and
adc
fwait
out
cli
pushf
xor
mov
inc
lock
fisttps
jmp
mov
aaa
out
insl
xor
rcr
jns
sbbb
stos
sub
xor
lret
xchg
ficompl
cmpb
adcb
xor
daa
dec
or
es
xchg
ret
das
call
fistpl
mov
jo
mov
mov
pop
es
fistpll
or
xor
mov
es
pop
xor
into
gs
test
jno
add
les
mov
pop
or
inc
push
jb
mov
dec
test
adc
xor
pop
hlt
mov
shlb
lods
ror
push
or
je
movsl
dec
pop
dec
adc
test
and
mov
and
lods
sub
test
loope
les
dec
fwait
xchg
push
or
xchg
aam
pop
mov
push
daa
mov
or
mov
push
cltd
sub
xor
xchg
sbb
mov
push
lock
jns
xor
das
cmp
xchg
dec
xor
push
test
push
xor
shlb
xchg
dec
call
push
or
shrl
adc
jmp
mov
jo
insl
vcvttss2si
jae
rol
pushf
sbb
es
xor
cld
inc
dec
xor
pop
outsl
sub
lods
mov
ds
pop
les
rdtsc
movsb
imul
push
cmp
inc
cmp
mov
xor
adc
xor
and
mov
pop
leave
mov
sbb
sub
inc
les
and
and
aas
sbb
adc
addr16
je
imul
inc
xchg
loopne
testl
jns
xor
xor
popf
and
mov
mov
std
pop
mov
inc
icebp
or
inc
jl
jmp
xorb
xor
jmp
loopne
jl
xor
fistpl
inc
pop
popa
jge
mov
pop
aam
inc
xor
pop
mov
xchg
and
and
push
pop
jno
cmp
mov
pop
mov
jno
mov
repz
popa
mov
adc
mov
xchg
rcrb
mov
stos
pop
mov
dec
and
adc
shlb
mov
xchg
ds
cmp
and
push
mov
or
test
mov
xor
jne
stos
ss
daa
lret
xchg
push
or
arpl
pop
cmp
shll
test
lcall
stos
adc
ds
xor
data16
mov
mov
xor
stos
pop
mov
xchg
aad
popf
jg
sub
mov
adc
std
adcb
repz
xchg
into
xor
mov
push
push
sub
add
in
ret
arpl
dec
jo
mov
bound
xchg
pushf
shrl
jg
mov
in
cmpsl
xchg
push
lcall
ss
pop
dec
shlb
shr
bound
pop
lods
movb
and
test
add
xor
inc
adc
inc
adc
adc
mov
scas
mov
test
push
scas
push
sbb
adc
lock
int
or
stos
aam
add
cmpsb
pushf
and
outsl
std
push
adc
mov
cmp
cmp
ja
mov
mov
push
imul
imul
sub
iret
outsb
mulb
and
dec
push
mov
or
dec
movsl
rcrl
push
mov
and
rcl
popa
insl
cmc
xor
leave
out
je
push
push
sarb
loopne
push
sub
and
pop
xor
hlt
cmp
pushf
jecxz
adc
mov
call
xlat
fidivl
lea
ss
cmpsb
push
xor
imul
xor
movb
in
fwait
shll
inc
adc
mov
xor
cmpsl
jnp
in
sar
xor
test
les
pop
sub
in
sub
inc
insb
xor
les
test
xchg
sub
ficoml
cs
repz
pop
clc
shll
lea
xchg
jle
aas
fidivs
lods
outsb
mov
push
xchg
xchg
inc
push
sub
imul
ret
int
xor
aaa
fdivs
dec
divb
sub
or
hlt
call
pop
and
cld
xor
push
push
add
ss
sub
add
popf
test
adc
xor
pop
sub
jge
mov
xor
int
xchg
add
add
lcall
mov
shll
inc
sbb
lds
ret
mov
xor
movl
jno
and
addr16
fs
xor
mov
xchg
jo
mov
xchg
adc
sub
dec
sti
add
push
xorb
mov
and
add
mov
scas
jnp
pop
or
pushf
bound
ljmp
pop
xor
mov
push
rorl
cwtl
inc
sbb
xchg
ret
insb
les
cli
add
mov
push
in
mov
std
outsb
ds
pusha
mov
xchg
aad
out
inc
outsl
dec
pusha
sub
xor
jbe
rorb
mov
push
xorl
push
cltd
imul
sub
rcrb
xor
push
adc
add
adc
cmpsl
dec
add
jb
inc
jge
ds
mov
aas
push
scas
cmpsl
mov
or
jae
je
cmc
stos
xchg
mov
jecxz
lods
push
data16
xchg
xor
mov
call
xchg
stc
fwait
adcb
mov
inc
mov
mov
xor
data16
sub
xor
inc
mov
mov
ljmp
inc
cmp
lds
in
ljmp
mov
sbb
mov
faddl
hlt
xor
daa
popa
jae
jl
jbe
lret
cmpsl
imul
cmp
call
es
enter
mov
xor
fmull
add
dec
insl
xchg
adcl
pop
es
iret
mov
push
cmp
aad
leave
inc
data16
mull
mov
xchg
xor
int3
stos
repnz
pop
insl
out
stos
mov
xor
mov
mov
cmp
jbe
aad
sub
imul
cmp
shr
xor
mov
fsubrs
popa
xor
ror
lods
mov
dec
push
xor
jns
dec
mov
mov
nop
sbb
and
cmc
mov
lret
pop
jp
and
and
push
mov
sub
inc
adc
xor
or
jbe
inc
je
aas
mov
stos
add
or
imul
push
mov
push
aaa
shll
mov
bound
leave
cmp
test
aam
into
adc
inc
add
mov
lods
int
jl
mov
push
jae
adc
ljmp
lds
loope
ret
outsb
gs
sbb
inc
xchg
xor
mov
lcall
dec
fmulp
call
or
push
imul
add
adc
lret
fdivl
cltd
dec
divl
pop
cmp
ds
mov
idivb
cmp
inc
shl
mull
bound
pop
data16
mov
loope
mov
dec
xor
mov
cld
xor
loopne
ret
adc
adc
jl
push
repz
imul
push
xchg
das
cwtl
in
lods
xor
mov
mulb
or
jecxz
sub
push
mov
mov
rorb
cmp
push
dec
xor
jl
rcrb
cmp
cmpsb
xchg
xchg
mov
xchg
cmp
sbb
or
outsl
push
xor
pop
xchg
cmpl
xchg
enter
out
rclb
sbb
cmp
and
inc
jo
push
int
jp
shlb
inc
lods
xchg
jge
stc
aad
jo
and
cmp
sub
jbe
cmp
sub
xor
mov
stos
xor
das
xor
repz
jno
push
xor
adc
push
push
lret
inc
dec
popa
jae
xor
xor
xor
cltd
test
cmp
xor
mov
jo
mov
inc
je
add
inc
rcll
ss
inc
push
fildl
les
xor
popa
jne
dec
sbb
iret
daa
scas
inc
scas
jecxz
sbb
push
add
mov
fsubl
pop
pushf
and
popa
jo
sub
mov
rolb
mov
inc
xor
mov
fimull
jle
mov
pop
fcompl
xor
inc
arpl
mov
je
mov
aas
iret
cmpsb
cs
or
dec
xor
sub
xchg
xor
sub
jnp
orb
nop
pop
sbb
ds
pushf
cli
mov
inc
and
inc
and
mov
add
xor
inc
cmp
xor
ja
out
ds
dec
cmp
mov
cmp
xor
orb
ds
pop
xor
outsl
sahf
sub
pushf
mov
fstl
lock
loop
xor
cmpsb
fsubs
fstpt
xor
clc
repz
in
xor
fisubrl
nop
push
xchg
decb
dec
int
xor
push
pop
jne
and
lcall
popf
xor
jl
scas
cmp
push
lcall
mov
cmp
lret
pop
mov
shll
mov
outsl
lods
mov
lods
rorl
add
pusha
out
or
push
sahf
dec
in
xor
test
out
data16
icebp
in
and
test
xor
inc
and
xchg
test
loope
xor
mov
fmuls
dec
xor
dec
nop
mov
out
cmp
notb
push
adc
cs
mov
add
ss
psrlw
leave
or
lret
cmp
push
adc
add
imul
xor
icebp
cmc
std
pop
xor
mov
add
push
movb
jo
andb
imul
add
xor
outsb
inc
dec
mov
mov
adc
fwait
cmp
xor
dec
jmp
or
gs
push
xor
sub
rolb
cmp
adc
ret
inc
push
mov
push
in
mov
adcl
test
xor
in
cmp
adc
loopne
rcrl
mov
push
sbb
outsl
dec
pop
sbb
and
inc
orl
mov
xchg
into
push
jo
adc
aad
inc
sub
xorb
add
mov
push
ds
rcr
js
jp
push
pop
pop
orb
aam
mov
imul
sti
add
fildll
xor
sub
xor
mov
leave
push
insl
xor
shrl
call
jg
test
or
mov
sbb
add
aam
xor
data16
pushf
jecxz
in
pop
lret
xchg
jnp
xchg
sarl
mov
out
dec
fiadds
popa
cmpsl
push
fbstp
stos
xor
inc
pop
dec
mov
or
outsb
movb
mov
insl
lea
repz
sarb
aas
or
leave
mov
fldl
pop
sub
xor
xchg
or
jo
lret
les
aas
mov
je
xor
das
pop
repz
std
imul
add
test
and
repz
stc
xor
push
inc
cmp
pop
mov
xchg
xor
xchg
popa
sbb
and
mov
cli
xor
movsb
jle
xor
or
mov
xor
stos
pop
jae
jo
les
das
lcall
adc
nop
test
or
out
add
sarl
ss
dec
fs
mov
pop
jge
je
test
sbb
pop
out
xchg
stos
mov
addr16
inc
sbb
mov
jl
testb
xor
insb
push
inc
pushf
jge
gs
add
dec
xor
jmp
clc
cmp
jns
add
xor
xchg
cmp
push
pop
push
pop
mov
push
movsl
inc
imul
daa
imul
lods
in
or
rdtsc
jmp
and
xor
cmp
adcb
mov
push
in
adc
je
in
or
iret
into
mov
xor
out
lds
fisubl
xor
in
ja
test
xchg
xor
jnp
sarl
or
inc
je
sbb
ja
outsb
mov
loop
lods
jo
test
sub
mov
xchg
nop
data16
mov
les
js
lret
fldl
inc
mov
lods
je
and
xor
pop
ss
ret
cmc
sub
shll
push
mov
in
xchg
xor
jl
lods
add
inc
xor
aad
ret
hlt
outsl
push
xor
mov
data16
push
imul
mov
dec
mov
cmpsb
add
leave
aas
repz
bnd
sbb
or
in
repz
cmp
out
aas
inc
dec
xchg
xor
and
sbb
xor
std
pusha
adc
add
idivb
mov
out
arpl
adc
xor
bound
adc
lods
push
pop
mov
dec
shr
daa
icebp
out
sbb
aas
lret
subb
rclb
xor
inc
mov
nop
je
cwtl
mov
shr
jnp
or
cmpsl
rorl
xchg
push
adc
fisubrs
mov
leave
push
bound
hlt
out
xor
notb
xor
cmpsb
mov
sub
pop
int3
iret
repz
arpl
mov
adc
aad
adc
xor
xchg
orl
fcomi
es
arpl
mov
jge
dec
or
sarl
add
lock
movsl
pushf
dec
adc
xor
xor
cmc
subl
mov
or
dec
xor
mov
test
push
in
and
sbb
or
mov
sti
or
out
call
cld
mov
push
mov
cmp
xor
and
cmp
mov
pop
outsl
addr16
mov
inc
aas
rclb
je
jecxz
outsl
lcall
jl
xor
xchg
lret
or
inc
or
push
jle
sbb
sbb
popa
shl
lds
push
push
imul
test
cmp
insb
jmp
xor
out
test
mov
and
es
adc
rorl
stos
pop
test
sub
rclb
inc
mov
mov
dec
pop
push
orl
cmpsl
inc
pop
daa
cmp
mov
adc
sub
mov
xchg
add
jb
test
cmp
adc
and
xor
rcl
inc
lcall
and
mov
iret
cmp
addr16
inc
jb
cmc
push
ljmp
xor
pop
xor
inc
cmpsl
aam
add
push
cli
xor
daa
lcall
pushf
hlt
mov
jns
pop
xchg
cwtl
push
xor
fstps
push
in
dec
rorl
jl
fstl
cmp
sub
adc
int
inc
mov
lcall
pop
jae
push
xor
aad
sub
xchg
fcmovu
scas
xor
in
movsl
pop
lods
inc
dec
push
dec
imul
pop
shll
fcompl
mov
pop
sbb
xor
mov
out
mov
jge
cmp
dec
and
icebp
cmp
outsb
incl
or
inc
test
pop
or
xor
daa
dec
int3
cmp
dec
xor
test
lods
stos
repz
xorl
jnp
cmp
xchg
ds
decl
in
pop
mov
push
cmp
add
or
sbb
icebp
inc
xor
push
push
rdmsr
jecxz
out
jno
inc
jo
repz
lods
inc
mov
and
iret
test
xorb
xchg
jge
pop
push
aam
in
mov
je
sbb
xor
popa
dec
jns
pop
fldenv
and
pop
cli
fst
push
aas
dec
cmp
xor
add
outsl
pop
popa
mov
loope
xchg
push
lcall
inc
inc
sbb
fbld
repnz
shll
xor
nop
mov
adc
shrl
mov
adc
add
stos
ret
pushf
pushl
jns
and
les
adc
lea
mov
sbb
aaa
jecxz
mov
xchg
mov
mov
cmp
mov
popa
enter
notb
adc
clc
jge
fists
inc
inc
nop
divl
aas
ljmp
xor
cmp
outsl
pop
mov
mov
ret
xor
add
jo
lods
fwait
sbb
popf
gs
jo
xor
imul
shl
rcl
mov
dec
repz
daa
adc
insb
and
pop
pop
ss
sub
push
pop
jb
test
stos
push
mov
repz
or
push
add
jno
mov
push
imul
cmp
xor
jns
sahf
aam
inc
add
les
xor
xchg
jns
mov
into
jb
pop
xlat
or
adc
mov
sbb
movsb
mov
dec
adc
and
es
sub
pop
xor
shlb
and
jge
repnz
cmp
aas
xchg
add
fimuls
orl
jle
int3
push
cmp
inc
adc
xor
sbb
inc
mov
xor
rcl
pop
push
mov
xor
js
sarb
xchg
sub
outsl
mov
das
adc
jle
or
popa
ja
jbe
in
sahf
xor
cmp
repz
or
xor
lcall
mov
mov
mov
ficomps
cmp
dec
out
mov
add
sbb
mov
js
xor
shrb
add
inc
jno
cld
jge
push
cmp
pop
push
push
gs
cmpsl
movsl
xor
inc
or
cmp
and
imul
xor
pcmpgtb
sbb
insb
lea
fbstp
call
loopne
hlt
cmpb
lods
mov
xor
xchg
push
xor
sbb
pop
and
or
lret
xchg
in
mov
bound
adc
adc
xor
lretw
neg
das
sti
outsb
lahf
cwtl
cmp
rolb
jmp
push
dec
aas
fidivl
xchg
dec
mov
rclb
stos
mov
adc
leave
mov
fidivl
pop
or
sti
sub
out
jo
adc
mov
sahf
test
and
push
ficoml
xchg
xor
push
pop
mov
andl
fs
cmp
andb
inc
or
mov
pop
addr16
xor
push
iret
shlb
and
clc
scas
jo
sbb
adc
dec
scas
xor
push
fstl
or
sbb
jle
lcall
jno
inc
aam
aas
cmp
xchg
lds
pop
imul
out
sub
sbb
xor
popa
adc
xchg
sub
outsl
addr16
pop
xchg
sbb
adc
xor
orb
leave
mov
mov
pop
punpcklwd
loop
xor
mov
jae
or
pushf
xor
mov
inc
adc
mov
shl
je
sub
pop
mov
add
pop
inc
inc
sahf
iret
pextrw
mov
jb
dec
mov
mov
repnz
push
and
push
or
or
xchg
sub
push
sub
inc
mov
xchg
mov
jl
lods
pop
daa
xor
and
cltd
scas
call
sbb
cmp
mov
aas
and
add
lods
xorb
daa
xor
adc
popf
pop
cmp
insb
pop
adc
mov
xor
dec
mov
or
popa
inc
mov
test
adc
pop
xor
dec
dec
jecxz
add
jo
out
and
das
xor
cmp
jno
subl
dec
dec
jl
cmp
stos
lret
ljmp
pop
lods
and
fwait
add
pop
jecxz
adc
cmc
lea
dec
mov
adc
shl
inc
xchg
mov
ds
sti
scas
adc
push
decb
mov
inc
out
xchg
sub
lods
test
ret
cmp
cmp
mov
cld
adc
sub
adc
fisubrs
xor
popa
lcall
out
in
pop
sub
sub
fmul
xor
xlat
not
mov
data16
and
stc
sbb
add
repz
or
subl
mov
pop
mov
xor
mov
xor
sti
aam
xchg
xchg
fimuls
lods
xor
jbe
cli
xor
xchg
cwtl
cmp
loopne
push
fisubrl
sub
push
and
xor
sbb
out
mov
xor
lret
sub
test
mov
mov
pop
adc
sbb
leave
push
movsb
cld
push
sub
cmp
icebp
push
cmpsb
xor
cmp
insb
outsb
xor
cs
dec
or
pusha
xor
vpmacsww
and
cltd
jl
popf
test
pop
adcb
mov
sub
add
adc
sub
rol
pop
adc
cmp
fs
xchg
stc
xor
sbb
clc
jecxz
or
push
into
pop
mov
xor
out
cli
pop
pushf
mov
xor
xchg
sbb
push
in
repz
xor
fcmovb
je
insb
xchg
std
xor
push
cmp
mov
pop
mov
loopne
lea
xor
cmp
pop
xor
lock
xchg
cltd
loopne
and
pop
push
and
ret
jbe
xor
xchg
cmp
push
sbb
das
xor
and
test
inc
ja
adc
pop
xor
ffreep
mov
jbe
mov
ljmp
dec
xor
int
push
push
subb
adc
test
inc
xor
subb
xor
push
and
xor
call
movsb
mov
push
les
in
xchg
filds
fidivrl
inc
outsb
or
ret
adc
sub
lret
shrl
jl
sbb
test
push
fistps
popf
insb
scas
fiadds
sbb
out
rcrl
and
sub
push
inc
xchg
xor
xor
insl
aam
ss
jmp
adc
scas
push
cs
inc
xor
mov
out
sbb
xor
out
in
arpl
movsb
sub
xchg
and
xor
mov
lea
pop
xor
enter
adc
jb
popf
popa
push
and
push
xor
adc
stc
mov
inc
outsb
pop
push
adc
sub
pop
mov
in
adc
inc
adc
mov
push
dec
sbb
add
enter
imul
mov
mov
xor
pop
jl
sub
fwait
pushf
cmp
les
mov
lcall
add
subl
xor
xchg
xor
rorl
jecxz
out
lcall
lods
dec
cmp
sub
pop
or
push
aam
xor
pop
xchg
pop
insb
xor
xorb
ret
test
cmp
in
in
test
fxch
xor
dec
xorb
mov
insl
jae
inc
je
adcl
or
mov
xchg
cli
je
mov
pop
xchg
pusha
stc
cwtl
mov
pop
ss
adc
mov
push
push
xchg
repz
jo
xchg
sub
mov
les
push
mov
xor
add
mov
or
add
xor
jb
xor
cmp
mov
cmp
scas
xor
mov
sub
sbb
fsubs
or
cmpsb
test
sbb
push
xor
push
and
lret
or
lcall
mov
mov
xchg
and
mov
cmp
xorl
ja
xchg
out
ret
js
and
xchg
xor
lods
sub
enter
sbb
pop
nop
arpl
stos
sub
lods
repnz
das
dec
adc
mov
dec
inc
into
mov
cld
out
lahf
xchg
sahf
dec
outsb
adc
scas
cmc
cmp
es
push
pop
inc
jo
sbb
mov
arpl
pop
xor
xchg
jg
sbb
xor
imul
sbb
das
shll
sbb
sti
pop
push
lea
imul
repz
ret
lret
pushf
jno
and
or
stc
sti
jl
sbb
sti
push
fadds
pusha
lret
stos
loope
or
xlat
test
leave
adc
into
add
xor
pop
cmp
adc
pop
mov
jno
call
inc
mov
mov
rcrl
rcrb
add
and
mov
cmc
pop
out
stos
or
mov
mov
dec
xchg
push
imul
adc
mov
pushf
lahf
mov
fbstp
lret
pushf
adc
adc
sub
call
and
lods
in
call
cltd
pop
or
movsb
into
aas
and
dec
clc
xor
sti
xor
lock
inc
dec
push
adc
jg
inc
jle
cmc
leave
xchg
jnp
cmp
sub
sub
ds
and
mov
fiaddl
fwait
lods
and
sbb
sarb
sbb
test
dec
push
mov
mov
call
mov
add
xchg
lcall
mov
es
and
ja
pop
push
test
out
idivb
dec
jg
incb
mov
pop
cmovg
pop
outsb
mov
stos
mov
and
and
adc
mov
das
or
pop
mov
inc
imul
push
pop
mov
jb
sub
xor
aad
add
xor
orl
mov
or
push
mov
repnz
das
and
jno
fsubr
and
inc
push
sbb
xor
popa
xchg
jns
sub
ret
inc
mov
adc
add
cmpsb
push
push
xor
les
push
and
call
jp
inc
faddl
fbstp
adc
jmp
ja
or
pusha
lret
loopne
sub
pop
pop
cmpsl
xor
dec
xchg
hlt
push
sti
sbb
mov
push
lock
xchg
inc
push
call
ljmp
mov
xchg
stc
scas
sub
adc
add
popa
or
xor
sub
mov
jle
push
mov
add
test
sbb
test
rolb
jns
andb
inc
sub
xor
and
testb
push
repz
fistps
mov
fidivs
out
cs
test
dec
mov
scas
in
jo
xor
jp
cmp
popa
mov
add
mov
pushf
mov
roll
in
mov
xchg
xor
push
in
ffree
fdivrl
push
je
mov
cmc
dec
jg
cmpb
hlt
pop
jge
stc
xor
mov
adc
mov
fiadds
mov
orb
fisttpll
and
xor
pusha
imul
mov
mov
xor
mov
jecxz
push
jg
and
xchg
icebp
mov
ds
pop
dec
mov
sub
pop
notl
cltd
mov
pop
and
cmpsb
out
jg
gs
mov
mov
mov
mov
mov
mov
pop
jne
psrad
mov
loop
std
jg
adc
popf
test
mov
dec
into
mov
insl
push
out
aad
mov
int3
cmp
mov
cmp
icebp
test
loope
gs
mov
mov
sub
mov
add
das
lea
push
sub
adc
lock
cmc
cltd
pop
mov
stos
and
push
and
push
fbstp
fcomip
dec
lcall
xor
xor
push
mov
pop
lock
xor
fs
insl
lret
and
adc
loope
jo
push
jmp
push
xor
mov
add
jae
xor
xchg
sub
and
jl
jmp
mov
jecxz
sbb
mov
and
cmp
scas
movsb
bound
pop
or
push
shrb
xor
jmp
fnsave
mov
mov
rcrl
sub
das
or
xor
in
pop
stos
mov
jp
divb
fstl
jnp
out
dec
mov
push
scas
ss
xor
sbb
sbb
and
jl
jge
adc
mov
pop
or
xor
and
out
daa
adc
orb
xor
ljmp
mov
push
dec
or
andb
movsl
or
shll
inc
daa
ds
and
dec
push
xor
sbb
and
test
mov
mov
in
cmpsl
or
push
or
in
sub
push
insb
mov
mulb
out
inc
fs
out
gs
pushl
orb
sahf
ret
or
and
xor
fdivs
rorb
push
lahf
xor
jecxz
sub
pop
rcrl
add
aam
ret
cltd
sub
jns
xor
xchg
rol
mov
add
and
push
pause
je
imul
test
mov
push
dec
stos
mov
leave
ret
sbb
out
stos
mov
push
adc
imul
popfw
adc
and
les
cmc
ljmp
xor
fnstsw
mov
jbe
xchg
fcomp
in
sarl
addr16
icebp
add
loopne
icebp
inc
inc
inc
cmpsl
pop
rorb
stos
xchg
daa
adc
inc
push
shlb
xor
xor
das
lods
ja
fwait
adc
stos
shrb
sub
cmp
pop
mov
sar
sbb
insl
push
pop
push
mov
and
enter
mov
pop
mov
ja
jmp
lret
lret
shrb
imul
movb
mov
icebp
insb
xchg
and
mov
sub
imul
imull
xchg
push
adc
shlb
dec
aam
pushf
je
xor
mov
cmc
mov
cmpsb
xchg
xchg
sbb
xor
in
dec
adc
cld
sub
nop
sub
inc
mov
sahf
loop
aas
ds
icebp
mov
add
test
cmp
or
in
jge
iret
inc
adc
int
icebp
iret
addl
dec
std
mov
adc
mov
movsl
jns
ror
pop
xchg
aam
xchg
jno
mov
xor
mov
jno
mov
aas
addr16
mov
mov
data16
das
hlt
in
jns
aam
adc
xchg
insl
lods
sti
jns
adc
lret
inc
and
lret
std
sbb
pop
in
pop
and
inc
sbb
or
ss
into
std
cltd
mov
add
xor
inc
xor
bound
and
pop
repz
mov
sbb
cmc
in
rorl
xor
out
out
cmp
jne
and
sbb
int3
icebp
aad
inc
sahf
stc
lcall
outsl
cmpsb
xchg
std
and
out
xchg
sbb
add
pop
mov
lods
icebp
cltd
push
je
into
sbb
add
lea
push
iret
push
dec
dec
pushf
sub
lret
pushf
add
lret
sub
cmpsb
xchg
out
push
push
jge
testb
pop
dec
in
adc
inc
inc
test
pop
sub
push
cmc
mov
xchg
inc
dec
fnstcw
inc
sbb
in
das
lcall
adc
fnstcw
mov
lret
xor
sbb
rcr
inc
les
jmp
or
sub
pop
mov
dec
dec
or
jp
stos
push
daa
cmp
add
test
jmp
into
lea
xchg
and
inc
jp
lcall
adc
mov
shll
mov
sub
mov
mov
cmc
sahf
pop
jge
imul
adc
pusha
push
scas
sbb
xor
iret
sbb
sahf
std
dec
inc
icebp
call
xor
push
insb
outsl
jmp
jmp
or
mov
lret
mov
push
cmp
and
shlb
in
call
popf
adc
ja
inc
xchg
cld
test
mov
jmp
adc
jo
xorb
lret
or
inc
or
xchg
movsb
cmpxchg
sar
or
sub
mov
stos
movsl
leave
cmc
fucomp
sub
mov
std
mov
sbb
jo
dec
into
sub
ja
addr16
cli
out
imul
cmp
enter
test
and
int
pop
mov
cmp
xor
sub
push
jno
pop
rclb
and
negb
subb
and
pop
and
sub
or
xchg
std
pushf
das
mov
orl
xor
shld
sbb
subb
das
and
sub
pop
outsl
xor
dec
aas
nop
sub
call
pop
push
in
mov
fisttpll
jno
rorb
mov
fwait
rolb
jno
adc
lods
sbb
das
scas
inc
mov
xchg
fimull
pop
out
imul
inc
icebp
cltd
xchg
pop
pusha
loope
rcl
aaa
cmp
adc
push
hlt
add
movsl
vmovss
pop
xchg
ds
rcrl
mov
pop
cltd
mov
scas
shrb
ljmp
sbb
ja
mov
loopne
rcr
push
lock
or
push
jmp
outsb
pop
xchg
xchg
lret
xchg
loopne
and
fdivs
cli
pavgb
xor
jecxz
mov
scas
pop
add
mov
leave
femms
mov
add
das
popa
loop
push
out
mov
mov
pop
push
cltd
imul
and
inc
fwait
push
pop
mov
inc
and
dec
fmul
xchg
hlt
cmp
pop
rol
inc
lds
fs
mov
insl
xchg
xor
cmpb
mov
dec
dec
sub
add
enter
das
into
bound
push
imul
ret
adc
and
rorb
lock
testl
jge
das
or
popa
cmp
jecxz
mov
sbb
out
out
popf
fsubr
scas
xor
ja
cltd
scas
test
shl
add
movsl
adc
push
cmpsb
pop
mov
loop
push
dec
test
lcall
push
cs
fistl
sub
sti
cltd
bound
adc
repz
jno
movsl
sbb
cli
adc
ret
cltd
dec
add
adc
jecxz
icebp
cmp
mov
mov
jecxz
pop
and
arpl
cmovbe
imul
add
fisubrl
inc
add
scas
lods
dec
sub
jno
mov
xor
mov
sbb
iret
scas
out
lret
xor
mov
adc
rcr
xor
push
sarb
pop
mov
push
or
fwait
js
sub
and
push
push
push
adc
lret
cltd
mov
push
out
lods
mov
fldcw
jo
or
int3
fwait
mov
les
sbb
mov
pop
sbb
cmp
dec
pop
mov
mov
pop
ja
shll
fcoml
mov
inc
jno
dec
xchg
rcl
mov
mov
popl
add
xor
ss
jno
stos
repnz
xor
das
test
push
pop
mov
xor
fisttpl
outsl
mov
pushf
pop
movsl
mov
adcb
das
movsb
jb
ret
dec
or
imul
adc
arpl
add
dec
xor
mov
pop
cltd
std
adc
push
pmulhuw
test
dec
xor
xchg
in
pop
jo
mov
mov
xchg
push
dec
sub
mov
lcall
sbb
push
into
bound
fs
mov
sbb
sbbb
loope
mov
test
shrl
and
pop
inc
mov
xchg
inc
inc
dec
pop
leave
fcom
jno
cltd
jge
das
aas
cs
outsb
lock
jge
lock
mov
movmskps
mov
imul
jo
cmp
xor
aaa
xchg
cmpsb
arpl
jge
roll
mov
cmp
stc
sbb
mov
sub
adc
scas
loop
test
cld
cmp
and
jmp
js
dec
cmp
mov
dec
bsf
movups
hlt
out
sbb
fdivs
add
cmp
cmpxchg
mov
push
xor
mov
sti
xor
out
pop
std
ljmp
adc
out
inc
jmp
mov
testb
mov
or
out
adc
rorb
dec
movsb
outsl
das
imul
mov
imul
nop
mov
mov
mov
lret
xchg
mov
xor
out
out
scas
scas
repnz
mov
dec
enter
mov
rclb
in
popf
pop
fwait
and
test
xchg
lock
rcr
outsl
sbb
out
xchg
adc
adc
enter
xchg
sbb
dec
sbb
mov
push
popf
cmp
icebp
test
cmc
nop
in
pop
cmpl
in
add
bound
dec
sbb
dec
bound
adcl
sbbl
arpl
or
xchg
rcrb
fisubrs
rorl
ror
jb
aas
into
mov
cltd
mov
add
repz
stos
shrb
ss
adc
mov
daa
lahf
and
out
add
out
pop
cmove
popf
push
loopne
or
gs
xchg
and
jns
jne
sbb
inc
dec
out
cmpsb
inc
int
test
add
xor
jb
lds
jne
adc
leave
mov
sbb
push
dec
push
ret
psllw
push
jno
lock
xor
mov
xchg
xchg
push
fstpt
mov
rorb
leave
cs
inc
das
mov
or
addr16
insb
sbb
inc
ss
ret
mov
sub
nop
outsb
loope,pt
out
aad
lods
pop
fsubl
dec
xchg
add
sub
inc
lock
icebp
pop
mov
adc
jmp
std
xlat
mov
gs
xchg
push
pushf
or
mov
adc
std
mov
sbb
inc
scas
mov
ds
mov
mov
cmc
sub
icebp
popf
adc
rorl
or
subb
xchg
mov
mov
test
fildll
mov
das
leave
adc
jle
mov
mov
cmpsb
jae
add
or
mov
iret
fidivs
inc
cmp
ret
ret
inc
mov
sub
rclb
lock
xchg
cltd
sub
sub
mov
addr16
sbb
dec
mov
and
wbinvd
cmpsl
repnz
xor
testb
jmp
pop
jae
sub
pop
enter
inc
sub
scas
push
pop
pop
sbb
lods
add
outsb
xor
dec
dec
sub
aaa
lea
popa
sbb
int
add
das
push
pop
sbb
xor
mov
xchg
in
lahf
outsb
enter
ljmp
sbb
or
or
int
pop
jb
dec
aad
pusha
cltd
jo
shrb
repnz
push
leave
xchg
icebp
jp
inc
sahf
pop
pop
lahf
sahf
mov
subb
mov
add
into
bound
xor
iret
fildll
mov
decl
ds
pop
pop
dec
int3
jle
daa
adc
inc
ds
lock
add
jo
fcmovnbe
mov
fldt
sbb
aas
inc
out
xchg
xchg
jo
test
pop
das
cmp
movsb
pop
ja
out
in
movsl
xchg
ja
push
movsb
fnstenv
jge
test
jo
adc
and
cmpsl
sub
incb
push
das
and
das
into
roll
aaa
xor
jo
dec
xchg
orl
sbb
jb
shlb
or
adc
pop
fisttpll
push
jbe
in
pop
cli
xor
dec
and
fwait
into
bound
and
xor
addr16
sbb
out
cmpsl
push
mov
subb
and
ja
mov
add
test
icebp
sbb
pop
mov
cmp
rclb
adc
in
out
adc
push
mov
inc
pop
subb
pop
je
push
jg
inc
sahf
sarb
or
mov
xor
popf
sbb
aas
negb
scas
add
cltd
fstpt
push
stos
sub
lea
lret
mov
loope
stos
jno,pn
pop
mov
adc
cmpsl
imul
mov
stos
aaa
xor
sbb
jbe
jge
mov
mov
orps
sbb
push
sbb
or
icebp
dec
mov
adc
in
out
popa
push
icebp
lea
sbb
adc
inc
xchg
push
pop
popf
lahf
pop
jnp
cwtl
stos
stc
jg
lea
inc
shrb
loope
loope
jns
mov
xchg
gs
sbb
sub
shlb
outsl
shrl
add
lcall
mov
bound
fcomi
push
les
scas
pop
daa
mov
push
enter
jns
adc
pop
lock
lock
cmp
adc
pop
sbb
inc
incb
dec
lock
mov
push
dec
pop
nop
cmp
sub
cli
fcomp
cmc
test
pop
pop
loopne
mov
mov
mov
outsb
sar
pop
sahf
sub
cmpsb
xchg
std
popf
adc
sub
push
mov
cmpsb
xchg
mov
adc
scas
pop
jge
or
adc
and
xchg
popf
fstpt
xor
pop
cld
cmp
dec
xor
lcall
jb
sbb
lahf
lcall
shl
sbb
std
mov
je
pop
cmp
or
cmpsb
jae
and
inc
dec
sub
sbb
pop
jo
fcompl
jno
cmpsb
xchg
std
mov
iret
inc
cmp
adc
push
cmpsb
jae
mov
pusha
jecxz
fwait
popf
jo
push
mov
nop
inc
mov
inc
mov
nop
movsb
pop
sti
xchg
add
cltd
sti
jo
jl
xor
std
scas
xor
outsb
push
popf
nop
mov
cmpsb
xchg
std
push
mov
jge,pn
xchg
in
scas
push
inc
mov
std
ss
cmc
loopne
cmp
das
add
movsb
dec
or
xchg
mov
fistl
xchg
add
dec
pop
pop
aad
cli
fst
fwait
out
int3
not
sbb
xlat
in
xchg
xlat
add
xchg
pand
testl
das
pop
fcmovnu
fwait
in
xor
incl
mov
pop
sub
cltd
mov
cmp
lods
int
cmp
fistpl
push
std
sbb
pop
cmp
sti
std
pop
std
cmp
in
std
stc
vmread
xor
push
pop
icebp
cli
sbb
sbb
cld
mov
jbe
div
fisttpll
jnp
cwtl
and
adc
aaa
push
mov
fsts
push
sub
mov
scas
mov
sub
dec
mov
out
dec
lods
mov
xor
jmp
out
out
push
pop
fdivs
dec
jno
add
rorl
rcr
mov
cmp
lods
in
rcrb
inc
jae
mov
pop
daa
cld
mov
adc
jno
push
les
pop
jbe
cmpsb
and
jb
xor
stos
cld
int3
lcall
pandn
and
cmpsl
aas
jno
xlat
sbb
and
ret
minps
test
mov
and
dec
adc
mov
or
fdivl
adc
jmp
xchg
push
subb
push
mov
mov
mov
mov
bound
fildl
in
jge
clc
mov
cmpsb
jae
mov
dec
insb
scas
imul
mov
xchg
stos
dec
sbb
in
xchg
cmp
xor
clc
out
scas
xchg
arpl
mov
stos
add
shr
dec
lods
ret
cmp
aaa
push
inc
js
sbb
aad
std
stc
adc
push
in
xorl
jle
movsb
mov
cmp
lea
mov
cld
xchg
cltd
mov
roll
push
pop
cltd
mov
loope
cld
jns
pop
ljmp
das
pop
push
or
negl
pop
pop
and
sahf
adc
and
push
mov
cmp
pop
cmc
and
loop
out
cmp
pop
or
fisubrl
pop
xchg
xchg
orl
push
scas
mov
pop
mov
out
ja
mov
stc
xlat
xor
imul
std
lods
mov
out
jo
mov
or
cwtl
xor
sbb
mov
rcrl
mov
adc
lock
and
movsl
pushf
or
cmpsb
xchg
mov
push
and
inc
sub
add
pushf
out
mov
sbb
xlat
ds
test
je
lds
aaa
mov
out
lret
std
out
es
iret
stc
sub
dec
or
pushf
sub
add
adc
add
sar
lods
adc
repnz
sti
aam
or
adc
push
push
or
movb
arpl
or
sbb
push
leave
push
jo
sub
jo
xchg
mov
pop
mov
sub
mov
out
add
xor
cmp
dec
xor
popf
ja
mov
inc
xor
in
stos
pop
and
in
inc
and
dec
pop
je
and
out
inc
mov
xlat
push
pop
js
xchg
mov
xor
sub
xor
fcompl
or
cli
fnsave
add
subl
and
in
adc
sbb
aad
cld
pop
xor
shrl
add
fldl
rcll
stos
repz
orl
push
xor
fnstcw
jo
cmp
test
push
or
scas
fsubrl
in
mov
push
xor
mov
inc
mov
loop
test
jno
and
or
cmpsl
in
cmp
in
loopne
adc
inc
test
add
inc
popf
and
mov
or
enter
daa
lods
mov
test
out
push
sub
cmp
pop
test
jns
in
adc
repz
sub
jo
fsubs
sbb
xchg
xor
jo
mov
imul
push
test
jnp
sbb
sbb
decl
mov
mov
or
arpl
shlb
lret
loope
rclb
test
pop
sbb
push
add
and
js
cmp
sub
loope
sti
xor
lock
test
dec
sbb
sbb
pop
sub
push
loopne
stos
inc
mov
cmp
sahf
imul
xor
adc
jecxz
xor
mov
mov
xor
mov
xor
dec
pop
dec
inc
push
dec
sbb
loope
mov
jp
cmp
gs
xor
and
push
sti
cmp
subl
dec
push
cmp
daa
into
add
jns
in
sbb
and
aaa
lods
cmc
insb
xor
adc
sub
jl
xor
xor
pop
andl
jns
jo
mov
jmp
xchg
adc
rcll
aas
cmpsl
jnp
inc
mov
clc
and
or
add
push
das
adc
xor
ljmp
sbb
push
cmp
dec
adc
push
iret
fs
cmp
and
lea
adc
or
inc
enter
cmp
lock
sbb
jnp
cmpl
enter
aam
pop
sbb
adc
insl
inc
pop
rcrb
and
xchg
clc
pop
jbe
insb
lret
cmp
cmp
fnstcw
cwtl
fistps
sub
mov
mov
cmp
adc
mov
mov
xor
push
mov
iret
and
mov
pop
pop
icebp
cmp
adcl
repnz
ret
pop
cs
mov
lds
xchg
push
dec
ror
sub
fnstsw
cmp
loope
xchg
dec
xor
icebp
aad
jp
stos
adc
dec
stos
inc
mov
xchg
outsl
jo
outsb
shlb
jecxz
je
and
push
pop
test
jmp
and
cmp
jns
dec
lret
pop
or
cmpsb
xchg
push
fcoml
fidivl
scas
out
add
cmp
adc
add
xchg
rolb
jne
inc
inc
jl
mov
pop
sub
mov
imul
and
pop
mov
stos
sub
inc
mov
aas
add
daa
jb
jecxz
cvtdq2ps
rcrl
mov
out
dec
jo
subb
int
inc
jl
int
push
mov
xchg
imul
or
test
push
mov
daa
leave
icebp
mov
out
push
jecxz
ficompl
cmp
push
fdivrs
or
je
test
addr16
jns
mov
pop
push
xchg
mov
adc
subl
lds
fimuls
ja
sbb
test
loopne
mov
call
xor
test
paddw
adc
xor
adc
jo
mov
out
pop
adc
sub
jno
adc
mov
mov
mov
cs
cld
fcomps
cld
xlat
idivb
jo
faddl
shlb
xor
divl
cmp
push
lahf
ja
pop
adc
stos
inc
mov
hlt
out
xchg
dec
or
fucomi
fsubr
cmpsb
cmp
setnp
insl
dec
lock
sbb
int
fwait
ja
add
das
adc
cmp
pop
idiv
xchg
pop
sti
add
stos
add
das
xchg
bound
outsb
xor
push
fs
lock
jb
shl
mov
ret
xchg
xchg
adc
mov
xor
mov
add
rcr
pop
enter
push
pusha
and
aad
mov
mov
inc
adc
push
aaa
jb
cmp
stos
adc
cmp
adc
je
or
adc
es
push
sbb
sbb
mov
adc
push
mov
jge
je
or
shll
out
rcr
xchg
fmull
stos
es
jno
in
scas
pop
sbb
inc
cmpsb
dec
ljmp
jno
and
jo
cli
nop
sub
push
push
adc
ss
push
test
prefetchwt1
or
repnz
ja
xchg
adc
add
out
out
or
popf
cmpsb
xchg
rcrb
pop
push
aas
cmp
out
ficoml
lcall
ja
push
push
das
mov
adc
mov
pop
sub
cmpsb
scas
decl
jge
rclb
shl
les
xchg
sbb
adc
std
out
mov
add
xchg
mov
ja
in
clc
and
stos
mov
sbb
jl
insl
imul
roll
push
inc
sbbb
cwtl
das
inc
nop
or
lret
negl
ja
or
aas
and
daa
or
dec
xchg
in
dec
adc
clc
push
sbb
adc
cmp
fistpl
push
mov
iret
mov
adc
cs
mov
mov
xor
and
or
dec
xor
fcomi
jnp
push
inc
or
push
push
mov
push
pop
and
pop
lods
movsl
cli
sub
rorl
jb
lea
and
pop
pop
mov
inc
and
cmp
mov
push
and
outsb
fnstenv
mov
pushf
pop
out
jo
mov
iret
dec
in
jl
sbb
pop
addb
lods
cwtl
sbb
sub
sahf
fsubs
outsb
call
mov
sub
in
test
sarb
into
jb
insl
sub
cltd
bound
push
shrb
jecxz
sbb
ljmp
and
sbb
lds
mov
fisttpll
pop
jb
std
jmp
fsubl
mov
adc
jo
nop
add
jno
aaa
cwtl
jecxz
iret
mov
mov
xchg
call
inc
aam
jns
xchg
jecxz
cmp
int
pop
adc
cmp
add
lcall
in
cmovg
rorl
add
adc
inc
decl
xor
cmp
push
sbb
inc
ss
mov
mov
add
xor
add
inc
ss
and
sti
not
jo
mov
mov
not
push
lock
mov
push
jb
or
inc
mov
pop
rcrb
fnstsw
mov
inc
cmp
data16
xchg
mov
lea
lcall
inc
cltd
fwait
std
fwait
scas
jge
fbstp
pop
jb
add
mov
cld
push
lcall
add
leave
sbb
cmovnp
pop
das
push
sti
adc
out
mov
lcall
cmp
or
sbb
pop
mov
cs
cli
std
cmp
mov
pop
rcl
clc
cmp
jno
xchg
sbb
repz
xchg
mov
scas
cmp
cmc
mov
int
lcall
mov
mov
scas
mov
fpatan
and
mov
std
shll
xor
flds
or
mov
std
dec
mov
ss
or
adc
lcall
das
mov
push
pop
jp
push
mov
fstpt
jbe
das
test
sbb
dec
or
jmp
or
mov
sbb
sti
push
xor
cwtl
push
xchg
cmp
push
sti
mov
cli
mov
mov
std
mov
cmc
jg
sti
and
fldcw
int
test
pop
and
out
and
jo
shr
pop
jle
jge
into
in
mov
fwait
push
add
dec
sub
inc
xor
mov
cmpsb
xchg
jo
mov
adc
cmp
lcall
lret
mov
pusha
cmp
or
into
bound
jl
pop
cwtl
xor
fsubl
mov
lcall
out
les
arpl
mov
mov
add
xchg
mov
mov
pop
jb
cld
pop
jno
sbb
adc
adc
xor
cmp
jb
sub
cmpsb
aad
pop
jb
cli
stc
int
dec
sbb
into
and
cltd
xor
bound
loopne
mov
das
dec
jno
and
cmpsb
jae
jnp
test
mov
sbb
mov
xor
fstpt
js
shrb
fwait
ljmp
das
xchg
pusha
in
adc
lcall
cmpsl
adc
sub
or
in
jnp
imul
cltd
xchg
mov
sti
and
mov
ja
sbb
pop
dec
pop
pop
inc
xchg
or
pushf
mull
push
and
js
out
ja
jmp
lock
and
fstps
cli
adc
adc
mov
xlat
lock
xor
xor
xorb
testl
pushf
pop
loopne
std
jno
jno
xchg
insb
fistl
rorb
xchg
sbb
fstps
mov
aaa
pop
mov
sub
cld
js
mov
fcoms
movsl
cwtl
insb
sbb
dec
sub
mov
or
sub
gs
outsl
aas
aam
add
fstpl
cmp
dec
jecxz
sub
add
ldmxcsr
repnz
mov
xchg
sub
das
push
xor
pop
popf
mov
jno
push
jl
mov
adc
cmp
xor
ds
lcall
cmpl
xor
mov
popf
in
pop
int
dec
ds
mov
cmp
pushf
pop
aad
mov
cmp
sub
jge
lret
adc
popf
mov
cmp
filds
mov
add
mov
insb
or
sahf
jge
outsl
ficoml
and
add
sbb
pop
je
and
cmp
jmp
add
xor
sbb
das
mov
lcall
ja
jno
mov
jo
int
ja
fidivrl
add
jbe
mov
subl
cltd
push
ja
cmpl
ja
push
push
cmp
std
psllq
adc
push
ja
pop
and
ror
jnp
mov
pop
jge
scas
imul
nop
xor
iret
adc
lahf
push
add
cld
fmuls
ret
roll
ret
lcall
adc
push
mov
out
dec
mov
call
and
xor
mov
adc
push
mov
xchg
shll
mov
bound
mov
mov
pusha
das
or
mov
iret
mov
add
xor
pop
adc
movsb
sbb
xchg
mov
cmp
std
rorl
in
std
int3
add
push
fldl
or
out
cltd
popf
mov
fisttps
pushf
aam
subb
in
aam
daa
xor
jno
adc
adc
or
std
push
shll
ftst
and
cmpl
lock
adc
pop
ficomps
mov
sbb
subb
sbb
or
jl
das
adc
call
xchg
mov
int
dec
pop
dec
and
scas
mov
jmp
icebp
into
rcrl
lcall
int3
cmp
cmp
test
mov
jge
loope
out
xchg
lahf
outsb
rol
inc
dec
test
rcll
cmp
pop
push
lahf
mov
mov
int3
fnstsw
mov
scas
lock
cwtl
jle
ljmp
adc
sbb
adc
inc
test
xchg
ret
mov
adc
mov
adc
xchg
adc
and
adc
icebp
mov
daa
xor
shr
adc
jns
xor
push
scas
mov
hlt
jb
or
fisttpl
imulb
lock
cmc
lahf
xor
sbb
jge
add
gs
or
xchg
scas
call
dec
push
std
cld
dec
aaa
xor
sti
jg
lahf
int
adc
push
cs
aaa
inc
int
popf
fstp
cli
mov
sbb
pop
add
mov
sti
lods
mov
popf
sub
and
cmpsl
das
hlt
scas
int
scas
adc
push
inc
jns
add
sahf
scas
js
jl
das
loopne
adc
aas
roll
fidivs
in
cmpsl
mov
mov
in
sbb
movsl
icebp
mov
and
imul
addb
mov
sbb
and
adc
pop
and
mov
and
mov
aaa
add
faddl
scas
fistpl
sti
jbe
sti
push
mov
jno
push
pop
enter
adc
incl
and
dec
movsb
clc
push
push
daa
jno
rorl
xchg
outsb
cli
jb
out
ret
dec
xchg
pop
pop
dec
xchg
xchg
cs
pop
cld
sbb
dec
sbb
pushf
dec
je
std
xchg
mov
adc
ja
pop
icebp
adc
cmpsb
sub
fisubrl
push
push
ret
aam
add
mov
jno
repnz
adc
mov
cmp
daa
sub
scas
xor
adc
push
loop
jns
lcall
lock
repz
loopne
data16
or
aaa
mov
das
subb
das
scas
ret
push
cmp
mov
push
mov
cmp
stc
testl
push
dec
xor
mov
in
xor
push
jge
xor
ret
jnp
xor
lret
rcrl
xchg
movsl
xor
lods
mov
xor
test
stos
mov
mov
pop
cmp
jg
xor
imul
arpl
dec
dec
xor
push
push
cmp
aaa
inc
xor
aas
sub
sub
xor
xor
xchg
mov
jns
lahf
popa
xorl
out
mov
loope
xchg
ss
push
scas
jmp
jmp
popf
in
cmc
rcr
jecxz
xchg
fwait
repz
lea
xchg
push
pop
jnp
jns
lods
dec
xor
pop
mov
lods
loope
cmp
movaps
sbb
sahf
and
ljmp
pop
sub
shll
int
and
test
mov
mov
pop
ss
sub
lods
loop
push
push
fadds
adc
xlat
outsl
cmp
insl
jno
xor
aam
mov
mov
cmpsb
popa
clc
outsb
movsb
gs
cs
and
cmp
lods
xor
sub
jnp
mov
xchg
or
cmp
ljmp
sti
xchg
popf
mov
repnz
mov
mov
xor
pop
adc
gs
xor
inc
pop
movsb
xor
aaa
cmp
insl
pusha
outsb
xor
repnz
push
xor
jae
xor
daa
arpl
outsl
xor
add
mov
rolb
test
xor
in
loop
ds
bound
lret
cmpsl
mov
into
shrl
out
inc
or
pop
js
adc
cli
les
push
je
mov
cmp
insb
xchg
daa
sbb
dec
xchg
xor
and
andl
jae
leave
sub
xor
xchg
dec
add
mov
and
jmp
mov
xor
xlat
sub
xor
fs
test
dec
xorb
pop
jp
or
push
les
aas
clc
test
lcallw
xchg
into
or
sub
imul
lock
jmp
dec
repz
push
jne
call
push
sub
push
sub
push
roll
int3
xchg
in
mov
dec
arpl
cmpsb
add
fcompl
adc
inc
push
push
mov
icebp
es
push
fwait
adc
xchg
insb
mov
lret
xchg
xor
js
cltd
xchg
sbb
or
xor
out
rolb
movl
push
lcall
cmp
outsb
inc
sti
xor
bound
hlt
mov
aam
jmp
push
shll
sub
push
into
xor
mov
jecxz
xor
sub
js
push
out
ds
pop
sub
xor
push
stos
cmp
push
sbb
rcrb
cmp
ss
dec
xor
inc
repz
popa
cmp
push
xorl
add
sub
cmpsl
call
pop
xorb
fsubl
aaa
xor
jl
jecxz
dec
nop
xor
jmp
xchg
lds
daa
xor
cmp
pop
push
scas
pop
fbld
pop
imul
addl
mov
jno
cmp
insb
ljmp
xor
iret
sti
hlt
sbb
mov
mov
xchg
or
outsl
dec
xchg
push
repz
xchg
lea
mov
daa
sub
scas
sub
inc
adc
sar
xchg
push
pop
test
enter
inc
lods
fwait
sbbl
xor
mov
push
pop
lea
loopne
xor
mov
sub
xor
bound
xor
jbe
sub
mov
pop
push
push
out
subl
mov
test
push
dec
sti
jae
inc
mov
push
test
outsb
adc
mov
pop
stos
dec
addb
mov
cmp
mov
adc
inc
push
imul
dec
lods
xchg
adc
rcll
or
shr
cmpsl
xor
nop
pop
leave
test
sub
adc
xor
test
dec
loop
vmovaps
xchg
dec
loope
lret
and
bound
mov
lds
cmp
mov
ret
pop
jp
jp
int3
and
cmp
pop
and
adc
xor
pop
xor
jecxz
loop
outsl
xor
stos
mov
leave
adc
push
push
pusha
out
or
and
mov
jnp
stos
pusha
xor
jecxz
sub
jb
xor
repnz
or
mov
sbb
xor
lods
les
loope
out
movsl
xor
ss
aaa
push
andl
xchg
ljmp
and
xor
or
scas
jnp
jbe
lcall
sbb
mov
hlt
jle
cmp
lret
jo
sbb
dec
loope
imul
push
jle
push
xchg
sub
xchg
push
sub
jp
stc
jo
insl
xor
jbe
jae
scas
fmuls
push
movsb
sbb
push
or
aas
inc
inc
js
or
adc
pop
shrb
adc
push
jb
and
push
stc
xor
out
popf
cmp
sti
gs
xchg
adc
inc
dec
pop
mov
mov
push
shrl
or
adc
inc
ja
xchg
add
sbb
in
sbb
push
fs
xlat
enter
push
fst
mov
mov
xchg
push
pop
lcall
mov
adc
clc
push
xor
mov
lahf
adc
inc
loop
or
lcall
xor
fiaddl
xor
ret
xor
cmp
popl
leave
je
rcrb
xor
fcompl
adc
mov
sub
bound
aam
mov
or
mov
cmp
jmp
test
push
mov
sub
dec
sub
adcl
inc
aad
les
fisttps
aam
add
xchg
xor
jb
mov
inc
adc
cmpsl
mov
cmp
xchg
inc
bound
push
xchg
sbb
stos
scas
mov
movsb
push
jl
scas
dec
addr16
scas
mov
xor
mov
mov
xchg
inc
out
pusha
leave
mov
das
xor
push
push
push
push
xchg
imul
sub
out
sbb
aas
outsl
ret
push
cmpsl
xor
jbe
xchg
dec
in
push
jg
xor
and
jo
xchg
dec
ss
fidivs
ss
je
jb
xor
in
hlt
mov
adc
push
xchg
nop
jb
test
das
sbb
and
movsb
ret
js
dec
push
xor
xor
add
nop
ds
cmp
jne
rcrl
adc
cmpsb
cmp
push
and
pop
lahf
push
xor
push
pop
test
cmp
sub
mov
xor
mov
dec
js
mov
mov
outsb
roll
stc
andl
stos
outsb
cmpsl
lret
loopne
jns
mov
pop
pop
xchg
ja
repnz
iret
or
mov
push
dec
jmp
sbb
aaa
scas
sbbb
inc
pop
push
dec
cmpsb
js
pop
xor
mov
loopne
sub
mov
sti
xor
sbb
stos
dec
pop
xor
aam
popa
jb
lds
xor
mov
fbld
push
test
xchg
cmp
daa
sub
repnz
xchg
xor
pop
leave
cmpsl
jle
inc
xor
cmpsb
mov
es
aaa
push
bound
xor
xchg
int3
loope
jae
jb
and
loop
mov
sub
xchg
fcmovbe
sarl
dec
dec
in
inc
adc
inc
and
inc
xor
cs
loop
sti
mov
movsb
jb
push
mov
cmp
arpl
jg
sub
adc
push
push
lret
sbb
xchg
cmp
mov
xor
rcr
xchg
call
mov
test
pop
xor
jp
pop
je
sub
mov
mov
cwtl
bound
cmp
lods
push
xchg
sub
out
xchg
jle
jb
ja
push
or
roll
or
push
sbb
pop
pop
jb
divl
stos
cmp
jl
xchg
xchg
pushf
xchg
dec
ficomps
inc
mov
mov
sarb
push
notb
xor
xchg
mov
shll
jl
sbb
sbb
arpl
fs
jmp
add
xchg
inc
push
push
mov
scas
aad
push
push
xor
jae
mov
mov
clc
xor
shll
inc
xchg
push
xor
jecxz
jmp
das
xorl
sub
stos
jno
rorl
pop
in
sbb
push
std
and
xor
fs
out
xchg
inc
xlat
or
shll
out
lret
pop
cli
lods
out
adc
insl
pushf
sub
mov
or
inc
mov
fucomi
inc
stc
sbb
shrb
cli
imul
jmp
lret
sub
dec
inc
adcl
push
jo
sub
pop
xor
rcrl
mov
xchg
xchg
xchg
cmp
xor
mov
cmc
jo
test
sub
mov
enter
dec
push
adc
bound
xchg
sub
mov
pop
test
ret
and
stos
ljmp
test
xor
fsubs
xor
add
sub
movsl
into
add
fwait
shl
xor
loop
mov
inc
in
xor
lods
je
push
rcll
sbb
push
cmp
xor
into
jbe
xor
xchg
adc
dec
mov
cmpsl
test
xor
pop
lret
gs
cwtl
orb
mov
mov
ret
or
sub
addr16
or
cmpsl
loop
sub
dec
dec
loopne
xor
daa
pop
fists
xor
inc
mov
mov
sub
sub
push
ss
add
insl
pop
ret
sbb
sub
pop
cltd
xchg
push
lods
push
cmpsb
adc
mov
shlb
mull
adc
xor
mov
in
sbb
adc
les
popf
fwait
icebp
and
jle
cmp
or
inc
push
sarb
jl
and
in
aas
fwait
pop
loop
cmpsl
iret
mov
test
int
push
ss
xor
inc
adc
mull
or
sub
aaa
shll
adc
xor
repz
call
pop
bound
cmp
sub
test
nop
cmp
js
jb
push
fisubl
inc
or
ret
xor
test
or
lcall
lods
or
push
jne
test
sbb
test
add
divb
mov
inc
mov
ljmp
js
stos
lods
icebp
jae
inc
loop
dec
or
jb
push
repnz
xchg
sub
cmp
xor
jns
xor
jge
mov
xor
sub
daa
and
fisubl
pop
cmp
stos
xor
imul
adc
lds
xchg
insb
lods
xor
mov
sbb
hlt
xor
mov
push
xor
cmpsw
test
xor
cltd
mov
xor
outsb
xor
xor
andb
cmp
adc
out
out
sbb
xchg
insb
ret
shll
outsl
rcrb
stc
or
addb
adc
push
sarb
fisubrl
jb
inc
insb
aaa
adc
push
fldt
dec
shl
test
inc
and
push
xor
imul
movsb
push
pushf
insb
mov
loope
and
xor
andl
mov
pop
call
lods
lahf
pop
adc
ss
sub
push
xor
mov
fisubrl
insl
cmpsb
shrl
outsb
push
daa
inc
push
fs
push
cmc
pusha
xchg
pop
insl
hlt
sbb
inc
and
ljmp
scas
push
roll
adc
sarb
push
shll
mov
fs
jo
pop
sbb
outsb
xor
jp
or
daa
adc
addr16
divl
enter
cmp
mov
aam
xchg
push
add
int3
and
adc
adc
push
xor
sti
insb
push
push
icebp
adc
fsts
ret
sbb
je
scas
jae
or
mov
andl
and
or
stos
imulb
xchg
jp
int3
fwait
bound
mov
inc
jbe
movsl
add
xor
into
js
pop
jb
ds
ret
mov
arpl
cmp
js
add
ja
sub
adc
mov
cmp
sub
bound
and
and
jle
cmpsb
dec
dec
xchg
mov
or
int3
test
xor
test
xor
js
xchg
bound
rcll
push
or
xor
and
cmpsb
shlb
mov
push
add
mov
jb
daa
or
sbb
pop
mov
xchg
mov
xor
mov
sbb
inc
jle
push
cs
hlt
sbb
xorb
sub
push
sti
addr16
and
and
dec
push
or
pushf
dec
cmpsb
aam
shlb
daa
dec
xchg
cs
jle
aad
inc
out
adc
adc
and
mov
inc
xor
push
mov
data16
fimull
stos
aas
dec
dec
popa
pop
loopne
cwtl
cltd
arpl
ljmp
push
cmpb
pop
stos
mov
scas
cmp
xchg
pop
add
pusha
cs
bound
and
test
pop
and
lahf
inc
push
or
xor
mov
sti
pushf
ret
xor
push
ss
je
jo
inc
rclb
and
sub
cmp
xchg
cmpsb
xor
out
dec
or
scas
jmp
movsb
or
scas
jb
lret
out
mov
mov
sbb
mov
sti
push
iret
out
shlb
adc
rcrb
adc
push
int3
mov
sub
push
jmp
adc
xor
into
stos
mov
xor
add
push
pop
xchg
ret
cmp
push
adc
mov
adc
aad
aas
pusha
add
pushf
sub
add
xor
mov
sbb
int3
xor
das
sti
xor
fdivp
fdivrs
insl
mov
leave
cmp
push
sarl
test
inc
xor
notb
inc
xchg
sub
inc
test
mov
cmpsl
dec
dec
sti
jo
cmc
mov
sbb
pop
pop
adcb
xchg
stos
xor
mov
test
xchg
xchg
jp
sub
adc
dec
fcoml
sub
outsl
ja
stos
or
pop
push
adc
out
aaa
xor
test
imul
aam
ja
mov
cmpsb
lret
ret
bound
inc
out
sahf
xor
cli
dec
xor
jb
xchg
dec
pop
xlat
jmp
das
jo
and
mov
sbb
inc
jne
aad
xchg
xor
and
jp
pushf
imulb
jmp
stc
inc
mov
scas
repz
mov
movsl
jge
test
insb
popl
sbb
dec
cmpsl
inc
xor
push
data16
sarb
ss
in
jb
xor
push
mov
xchg
les
or
scas
push
xlat
int3
sbb
mov
xor
sub
ret
mov
adcb
jb
cmp
ds
scas
inc
lds
jl
movsb
add
addl
jp
pop
sub
int3
mov
outsb
xchg
jl
ss
adc
sti
mov
mov
push
ja
xchg
nop
andl
hlt
xor
das
push
jecxz
xor
outsl
pop
iret
mov
xor
jecxz
idivb
movsb
dec
ret
cltd
test
sbb
bound
jo
push
cmp
call
int3
rol
insb
test
or
fsubr
dec
daa
mov
lods
cmp
lock
ss
rcll
xor
mov
push
sub
sub
jo
xchg
push
loopne
lret
and
imulb
sbb
mov
jns
shlb
test
inc
pop
int3
push
xor
rclb
sbb
pop
xor
sti
dec
add
jmp
out
call
xor
psrld
fisttps
adc
inc
mov
mov
jmp
ljmp
xor
in
or
dec
addr16
mov
push
and
into
add
outsl
rorl
leave
push
in
and
sbb
jnp
sub
cmpsl
mov
hlt
repz
int3
leave
and
mov
sub
lret
pop
push
adc
mov
pushf
xor
cli
sub
xor
pop
lods
lds
adc
xchg
arpl
aam
loopne
insb
dec
xor
xchg
mov
push
add
jb
leave
sbb
push
sarl
inc
ljmp
dec
test
jp
cmp
sbb
or
inc
xchg
ds
ss
sbbb
in
xor
scas
xor
cmp
mov
jl
mov
jle
xchg
sub
inc
xor
lahf
cmp
cs
cld
orb
xor
xchg
xor
imul
mov
addb
aad
cs
hlt
push
push
or
pop
mov
sar
xchg
ret
mov
or
pop
xor
mov
outsb
iret
lods
sub
cmp
xor
push
or
insb
addr16
adcb
jmp
ret
push
fists
shr
push
repz
out
sti
inc
or
mov
jno
lahf
xchg
shlb
and
rcl
cld
xor
mov
cmp
adc
or
mov
pop
jb
jp
bound
aaa
ret
and
jae
or
ds
loop
mov
add
xlat
xor
dec
divl
or
mov
hlt
out
xchg
sti
repz
or
xor
lds
add
jae
mov
and
ret
lods
xor
sub
stos
push
mov
iret
fiaddl
ds
adc
push
sub
xor
dec
push
mov
dec
fnsave
adc
pop
es
pop
sbb
arpl
push
test
xor
mov
xor
lods
sarb
fistpl
sub
jmp
dec
xor
push
or
out
cmpsb
je
mov
insl
jae
ficomps
inc
xchg
or
pusha
xor
xchg
push
movsb
rolb
xor
xchg
jne
xchg
cmpsb
les
jp
and
xor
cmpsb
adc
jecxz
mov
jbe
ja
push
xor
mov
call
cs
mov
push
outsl
test
inc
cmpsb
ss
jb
je
and
repnz
in
ja
out
pop
popf
fs
roll
mov
sub
inc
fstps
in
push
lahf
or
dec
push
mov
cmp
lcall
aam
mov
fs
cmp
jbe
push
fidivrl
and
sub
daa
add
inc
stos
out
xor
arpl
loop
cmp
push
out
dec
sub
dec
sbb
xor
aaa
jb
cmp
loop
stos
inc
sub
ret
push
popa
jmp
test
loope
xor
xchg
push
xor
mov
rolb
daa
jb
test
push
cmp
fcmovnb
or
xor
mov
adc
push
sub
cmpsl
cmp
adc
lea
iret
adc
jae
cli
adc
fmuls
push
mov
jns
jb
xchg
push
mov
push
mov
xor
push
push
hlt
and
faddl
pop
sbb
movsb
xor
jl
xchg
hlt
leave
mov
das
push
sub
or
popa
xchg
pop
ljmp
xor
shlb
lods
push
cmp
repnz
es
or
inc
js
jmp
jbe
cmp
xor
mov
pop
jle
mov
inc
xorl
mov
inc
cmp
or
xchg
inc
mov
out
aad
mov
push
lds
insb
jae
push
xchg
inc
xor
mov
push
rcrl
sub
pop
dec
int3
enter
cmpsl
jge,pt
cmc
icebp
aaa
orb
push
outsb
cmp
sahf
test
xor
sbb
or
pop
jb
sub
mov
mov
sub
jae
and
shll
xor
loop
rclb
push
cmc
shl
jp
lods
hlt
inc
adc
notb
sub
test
popf
lods
jg
ret
bound
xor
mov
sub
xor
xchg
jmp
xor
repnz
cmp
or
or
lret
xor
add
adc
xor
push
mov
xchg
aad
repnz
add
push
jno
les
xchg
and
shlb
jbe
mov
or
mov
dec
mov
mov
cmp
sbb
add
pop
sbb
cmpb
pop
div
stos
push
add
sti
in
push
test
pop
xor
repnz
dec
ds
loopne
push
jg
xchg
inc
sub
mov
rcpps
out
outsb
pop
je
sti
mov
bound
xor
xor
mov
mov
call
shrl
in
push
push
aas
sub
dec
and
push
fs
mov
or
inc
aam
dec
jmp
cmpsb
push
xchg
test
push
inc
mov
xor
leave
cmp
adc
sub
adc
mov
xor
fcomi
shlb
nop
adc
sbb
stos
ficoms
jne
xchg
xchg
jb
aas
push
mov
popa
adc
mov
imul
das
push
xchg
inc
xor
je
adc
icebp
popf
dec
in
cmp
cltd
aad
dec
imul
xor
mov
popa
pop
xor
sub
xchg
pop
push
stos
push
sub
adc
daa
hlt
inc
jb
scas
inc
ja
mov
dec
xor
sub
cmp
shlb
stos
ret
pop
push
lret
sub
push
inc
mov
push
adc
out
xor
jo
sub
xchg
dec
pop
cmc
push
inc
cli
cli
lret
je
fwait
out
add
sbb
jo
js
jge
adc
das
cmp
scas
psrlw
ret
xor
sbb
and
pop
mov
popa
xor
outsb
das
mov
push
adc
sbb
lea
lock
cltd
jo
mov
inc
sbb
iret
cltd
mov
sbb
movsb
cld
nop
jno
in
out
mov
ficomps
in
jnp
jl
cltd
xchg
adc
and
rcll
mov
frstor
sbb
outsl
pop
mov
sarl
push
mov
shl
mov
fcoml
inc
in
xchg
or
loope
repnz
scas
movsb
lods
out
std
ljmp
andl
in
ds
xlat
lds
sti
sbb
xchg
fiadds
inc
cmp
cwtl
test
sahf
das
test
inc
loop
mov
sbb
ret
cmp
cwtl
push
lahf
adc
xchg
mov
and
pop
push
xchg
jecxz
cld
and
xor
stos
inc
ficompl
add
mov
jnp
mov
andl
fidivrl
jecxz
mov
add
xchg
jl
lock
sbb
inc
sbb
andl
xchg
jns
xchg
adc
out
xor
inc
test
jno
movsb
mov
enter
add
and
sbb
cwtl
sub
movsl
dec
lcall
loop
xor
sbb
out
or
and
gs
cmp
cmp
shl
inc
mov
jbe
jg
inc
inc
pop
int3
fs
adc
faddp
xchg
fdivrp
pop
lock
clc
cmp
mov
ss
sarb
and
cmp
pop
cld
sbb
std
mov
adc
adc
pushf
scas
popa
notb
mov
mov
push
or
adc
divb
jmp
fbld
pusha
shlb
push
and
and
and
gs
mov
and
out
jge
fnstsw
test
std
jno
mov
dec
cmc
shll
aad
sbb
cmp
fs
pop
add
lds
ret
and
sti
and
cmc
add
les
push
pop
push
jp
xor
movsl
out
aaa
jnp
js
push
and
loop
out
pop
pop
xchg
and
ret
les
cli
movsl
cmp
and
test
lds
mov
pop
push
dec
fwait
cmp
push
mov
js
pop
repz
out
enter
jl
sbb
inc
inc
xchg
les
popa
pop
cmp
gs
cltd
pop
js
mov
pop
movsb
and
inc
in
lret
cli
lret
sbb
cli
ret
fs
rol
fs
and
and
add
inc
push
jle
fwait
sbb
cmpsl
aad
or
cltd
test
ret
lods
lahf
mov
sbb
das
andb
out
adc
sbb
fistl
sbb
cmp
sub
test
sub
sbb
pop
add
in
pop
ret
aas
test
out
inc
and
and
xchg
pop
push
or
dec
lock
cmp
sar
sbb
cmpsl
sub
movsb
push
cltd
bound
dec
and
xchg
cmp
pop
mov
jnp
mulb
std
mov
and
lea
mov
sub
cmp
ficompl
add
scas
scas
jecxz
pop
in
fldcw
popa
jb
clc
push
jnp
add
push
mov
cmp
test
outsb
popa
mov
scas
cmp
scas
push
xlat
int
add
orl
pop
dec
pusha
pushf
mov
std
scas
cmp
push
pop
pop
mov
repnz
push
inc
mov
cmpsl
mov
out
mov
jns
cltd
adc
lea
xor
jnp
cli
sub
fmull
movsl
in
xchg
add
inc
xor
mov
cmpl
movsl
loop
insl
ss
pushf
subb
fcomps
mov
enter
js
ss
jp
incl
push
lds
jne
pushf
xchg
out
lds
sub
scas
add
xor
js
adc
andl
or
xlat
inc
fadd
repz
push
mov
test
pop
xchg
add
lock
test
and
and
outsl
xlat
cmp
std
scas
jge
mov
js
out
adc
mov
jl
imul
dec
inc
outsl
sub
jmp
sbb
pop
adc
icebp
scas
pop
sbb
adc
les
push
repz
fstpl
dec
repz
or
jno
nop
mov
shl
inc
jmp
sub
nop
dec
cs
push
inc
icebp
dec
outsl
es
fcomp
cmp
jno
adcl
lock
std
cmp
xor
sti
scas
stc
fstpt
fldcw
popf
mov
add
in
jge
xor
jmp
pop
fwait
jecxz
push
xor
out
cmp
xor
cltd
xchg
ret
jns
sarb
cmp
sbb
xor
lret
leave
xor
shll
test
lods
stos
test
gs
mov
fdivr
ficoml
pop
mov
mov
call
inc
push
aas
xor
bound
inc
push
aas
xor
jge
mov
icebp
jno
push
cmp
out
xor
iret
shlb
adc
add
flds
mov
in
outsl
mov
in
mov
jl
fwait
pop
in
lds
jnp
push
xchg
pop
jns
cmp
mov
ja
adcl
mov
cld
out
lahf
mov
mov
sbb
aaa
sbb
cld
push
les
and
and
or
or
push
adc
cli
clc
divb
add
add
in
ljmp
fcmovu
in
adc
fmulp
lret
aam
sub
and
repnz
es
out
inc
lret
xor
in
sub
mov
add
shll
mov
or
pop
adc
cmp
mov
outsb
bound
push
lahf
xor
repz
je
into
loope
lock
fistpl
lret
insl
mov
in
xchg
in
jbe
aad
jo
mov
and
sbb
sbb
outsl
loop
xor
xor
push
mov
xor
cmp
aam
in
and
imul
mov
push
fistps
add
call
leave
push
aad
sbb
test
mov
mov
outsl
xor
mov
adc
push
rol
or
xor
push
roll
or
test
xchg
cmc
adc
dec
xchg
jle
jns
test
les
xor
stos
cmp
sbb
sbb
push
xor
imul
inc
mov
loop
xor
jl
mov
outsb
cli
inc
cmp
jmp
xorb
daa
pushf
lods
add
or
popa
lcall
and
adc
xor
mov
bound
dec
icebp
jl
rorb
rorl
call
push
inc
push
popa
and
push
cmp
roll
das
inc
repz
div
insl
outsl
cmp
std
in
out
mov
xchg
dec
mov
cmp
jmp
push
fists
pop
dec
push
jmp
and
push
xor
andb
mov
and
dec
xchg
xor
mov
push
mov
mov
xor
lret
fbld
cs
cmp
sub
xor
dec
loopne
nop
adc
pop
sti
push
shll
sbb
xor
out
cs
cmc
adc
jo
xchg
mov
and
jl
fsubr
outsl
sub
or
jb
ret
stos
adc
xor
lods
xor
mov
jg
insl
in
xchg
call
mov
xchg
and
cmp
or
mov
xchg
dec
xor
out
xor
sub
jne
decb
adc
gs
stos
not
xor
lcall
cltd
or
in
sub
lret
cmpsb
jo
arpl
pop
int3
or
pop
xor
mov
ret
cmp
and
stos
adc
jbe
dec
das
out
hlt
popf
and
push
ja
push
dec
rolb
push
test
fbstp
and
std
jnp
adc
mov
shrl
xchg
cmp
sub
nop
mov
pop
lahf
push
psllw
jmp
mov
xor
xchg
loopne
sbb
add
add
fs
adc
xor
outsb
and
mov
pop
mov
call
jecxz
cmc
xor
enter
cmpsl
xchg
jg
negb
sub
insl
add
add
adc
and
add
addr16
mov
jnp
jg
mov
sarb
push
std
xor
in
cmc
sub
xor
popa
pushf
pop
adc
jge
mov
xchg
mov
and
mov
jmp
out
rcll
and
or
push
or
out
jnp
inc
decl
mov
push
and
stc
and
inc
inc
mov
xor
das
int
icebp
cwtl
test
pop
pop
ss
inc
xlat
arpl
fsubrl
daa
outsl
call
cmp
push
je
scas
add
xor
jp
xor
cld
jmp
push
lds
push
ja
push
fistpl
mov
loope
cltd
and
loopne
xorb
cmp
mov
movsb
xor
sbb
xor
lods
push
jbe
stos
add
dec
aam
int3
in
push
xor
fnstcw
stos
dec
lods
jae
xchg
mov
xor
mov
sbb
jle
in
push
je
add
fisubs
xor
dec
sub
xchg
ljmp
sbb
push
push
jg
cmp
inc
sbb
xor
jmp
xchg
test
andl
lcall
xor
daa
sub
xchg
mov
insb
ja
inc
fidivrs
mov
divb
sbb
lea
jnp
xor
popa
insb
shrl
or
add
divl
js
jmp
aad
push
and
pop
bound
out
push
jecxz
adc
xchg
sahf
xor
cmpsb
xchg
es
adc
sbb
xchg
lahf
nop
shll
push
xchg
fs
aas
inc
and
jno
jno
mov
xor
in
xor
je
lods
sbbb
pop
dec
jo
les
sbb
and
and
enter
pop
dec
pop
pop
add
pop
xchg
pop
mov
call
xor
hlt
dec
mov
enter
lahf
cmc
mov
cmp
cwtl
sbb
pushf
pop
popa
imul
adc
lret
std
ss
scas
xor
in
xchg
mov
xor
dec
inc
cmp
mov
test
testl
lret
jecxz
clc
add
hlt
lods
pusha
pop
mov
lods
mov
jne
faddl
loope
pusha
xor
mov
cmp
orl
push
test
xor
xorb
xor
fstps
mov
imul
sub
mov
arpl
xor
js
jge
and
popa
pop
popf
mov
jnp
cmp
mov
aad
push
inc
jl
notl
mov
add
push
mov
mov
movsb
fisubs
pop
mov
mov
pop
shll
inc
insb
cmp
xchg
mov
xor
popf
mov
int
adc
movsb
cmp
mov
pop
push
addr16
testl
idivb
inc
pop
lcall
sbb
jg
js
pushf
jo
enter
add
sbb
xor
sbb
and
je
int
dec
test
inc
shlb
lods
mov
xor
fidivl
or
jo
cmpsb
xchg
push
inc
and
push
aaa
cmp
inc
push
loope
int
and
ja
xchg
inc
jbe
add
rolb
mov
sbb
push
jecxz
adc
inc
in
outsw
adc
push
sub
fimull
push
sub
dec
out
mov
xor
xchg
xor
scas
push
jg
inc
add
cmpsl
xchg
imul
mov
xor
or
pusha
mov
insl
in
sub
pop
icebp
inc
cmpsl
jno
mov
mov
insb
and
cmp
fldt
cmpsl
insl
push
pop
xor
inc
mov
adc
dec
sarl
push
or
outsl
inc
add
jnp
sti
rcr
aas
mov
cmp
outsb
pushl
jle
repz
clc
xor
int3
sbb
inc
and
xchg
jmp
mov
xor
xor
pop
arpl
sbb
fldt
repz
jmp
js
outsb
cmpsb
xlat
imul
pusha
outsl
xor
imul
xchg
add
push
xor
mov
cmp
push
push
daa
inc
push
shll
dec
ret
aas
push
push
jp
in
lods
fwait
dec
inc
loope
sub
xor
pusha
jp
push
mov
xor
sub
push
fdivrl
sbb
push
or
pop
mov
jl
decl
mov
movsl
adc
sbb
shlb
push
add
or
fs
xor
dec
push
hlt
pop
gs
and
xor
mov
les
cld
jecxz
mov
mov
xor
mov
movsw
xlat
pop
add
xor
sbb
pop
adc
xor
and
jle
push
rcrb
aam
test
jnp
push
in
insb
mov
xor
pop
push
lcall
mov
fisubrs
add
mov
arpl
xor
mov
push
xchg
ljmp
aas
inc
stos
push
or
pop
stos
push
push
pop
mov
or
sbb
inc
mov
fs
stc
cwtl
cs
sbb
mov
mov
mov
movsb
repnz
xor
jbe
mov
std
push
and
mov
inc
sti
mov
or
push
ror
cltd
adc
and
in
mov
aaa
jmp
push
inc
fisubrl
push
mov
mov
jno
sub
cmpsl
clc
scas
addl
insl
xor
gs
enter
push
dec
jae
mov
xor
jge
nop
and
repz
jno
xor
pop
sbb
rcll
mov
jo
push
pusha
out
xor
movsl
ja
xor
outsb
sbb
push
push
or
add
xlat
mov
mov
xchg
arpl
jae
out
icebp
call
test
xor
mov
divb
inc
jle
div
in
repz
and
int3
lds
lcall
inc
jecxz
xchg
push
aaa
into
pop
repz
pushf
xchg
out
adc
xor
mov
bound
push
jecxz
xor
ret
pushf
arpl
fistpl
mov
xor
lea
notl
mov
lock
jae
xor
fcmovbe
nop
sarl
mov
hlt
lods
mov
addr16
adc
loop
adc
testb
enter
lds
or
push
shrl
mov
lods
xchg
cmpsl
and
fnstsw
xor
xchg
adc
ret
adc
mov
repnz
inc
sbb
pop
pop
xor
inc
or
jbe
xor
add
pop
pop
test
xor
ss
mov
stc
andb
xchg
dec
push
fdivs
add
jl
out
xor
mov
jecxz
mov
test
inc
outsl
mov
xlat
adc
push
pop
xchg
fisttpl
mov
movsb
xchg
adc
orl
mov
in
or
icebp
mov
lcall
xor
or
fwait
insb
push
adc
lods
andl
hlt
xor
inc
push
ret
xchg
in
xor
out
arpl
or
jne
aad
in
inc
sbb
ss
ja
popf
popl
push
aad
scas
pop
inc
adc
xor
imul
bound
or
cmpsb
adcl
test
xor
push
cmp
cs
xchg
cmp
popa
xor
pop
scas
jo
ret
xor
push
pop
test
xchg
notl
xchg
loope
fdiv
test
mov
gs
aas
adc
pop
and
stc
jbe
fwait
sbb
jne
pop
sbb
les
push
roll
sbb
loopne
push
imul
addr16
adcl
pop
xor
inc
pop
xor
cmc
xor
stos
gs
jae
ja
xlat
pop
inc
lods
jbe
push
mov
mov
xor
push
das
outsb
out
cwtl
and
cld
or
notb
xor
lret
ljmp
pop
mov
jmp
push
mov
push
and
cli
add
xor
and
call
outsb
xchg
cwtl
insb
outsl
test
or
std
sbb
jb
pop
loope
les
jo
mov
ds
xor
cmp
inc
aaa
or
pop
shll
pop
addb
lret
jo
repz
and
mov
cmp
test
xchg
xchg
fiadds
cmp
xchg
push
sbb
incl
sub
fidivl
andb
rcrb
jle
test
in
mov
insb
mov
push
add
adc
test
sub
call
or
pop
or
inc
and
xchg
sub
adc
cmpsb
cmpl
cld
mov
pop
int3
in
xchg
pop
bound
adc
xor
mov
mov
aas
shll
lds
dec
mov
and
arpl
in
inc
jnp
or
repnz
mov
jl
jmp
adc
pop
add
ljmp
sarl
pop
xor
cmpsb
xor
call
imul
sub
xchg
mov
lods
adc
fidivl
ljmp
and
in
cmpsb
lcall
jo
scas
addr16
std
loopne
sub
sbb
lods
lcall
cmp
lds
sub
aam
outsb
mov
sbb
mov
inc
sub
fs
or
xor
and
xchg
popf
xor
cltd
js
divl
insb
xchg
adc
push
sbb
out
aas
int3
cmp
adc
adc
lods
daa
and
rcrb
outsb
ss
xchg
and
inc
in
cmpsl
emms
xor
add
pusha
js
sbbb
xchg
lret
arpl
mov
sbb
outsb
popa
bound
ret
xor
imul
xchg
xor
push
ja
xor
pop
popa
mov
pop
in
dec
es
outsb
xchg
xor
test
jns
xchg
adc
pop
mov
test
in
mov
add
adc
and
sub
ds
jne
mov
imul
psubusb
pop
mov
and
mov
pushl
xlat
scas
sbb
xchg
stos
lret
ret
pop
mov
test
mov
jae
cld
ja
fdivl
loope
out
jno
sbb
jbe
and
push
ds
or
ret
shr
data16
repnz
adc
outsb
loopne
ficomps
push
mov
pushf
jae
xor
fnstsw
xor
xor
das
mov
push
adc
testl
xchg
cmp
andl
std
fmuls
mov
jo
push
mov
bound
inc
into
mov
outsl
push
mov
stos
out
mov
xchg
ja
xchg
xchg
cmpsl
xor
pop
mov
xor
popf
inc
xchg
jbe
add
cmpsl
jno
in
sarl
int
pop
push
xor
jne
divb
pop
push
popa
xor
sbb
xor
cld
adc
xchg
imul
push
sub
mov
xor
xor
xor
push
daa
mov
xchg
lret
mov
push
or
mov
pop
test
popa
push
mov
pop
jl
ljmp
mov
flds
add
xor
lret
mov
cmp
xor
out
adc
cmpsb
jo
pop
xchg
mov
fisubrl
jbe
je
dec
xchg
or
lds
inc
mov
jmp
or
push
fistl
cmp
divl
rcrl
repz
inc
repnz
jbe
dec
pop
dec
mov
scas
test
jg
xchg
int
inc
jle
jo
cmp
sbb
lods
xor
push
push
push
add
fwait
cmc
fbstp
std
xor
fisubl
fs
mov
push
and
jae
mov
insl
call
mov
push
ficoml
outsl
outsb
xchg
ss
sbb
push
push
mov
jge
cmp
sbb
xor
pop
out
test
movsl
mov
cmp
je
out
pusha
push
lods
xor
mov
cwtl
mov
sbb
push
es
les
mov
xor
adc
cmp
sti
and
or
data16
ds
aad
jl
add
add
stos
cmp
jp
cmp
mov
adcl
lds
dec
adc
xor
popa
mov
outsb
rcrb
sbb
sub
jo
ja
rorl
je
cmp
int
adc
xor
pop
xor
sub
popa
mov
repnz
adc
rcll
xor
scas
sub
ret
push
mov
sub
xor
or
lcall
test
jl
ret
xchg
scas
inc
mov
arpl
lock
jg
das
les
xor
jp
inc
stos
bound
lcall
and
xor
pop
xor
xchg
jg
divl
fiaddl
movsl
pusha
pop
add
fistps
dec
xor
ret
mov
hlt
cli
add
clc
jp
int
mov
and
jnp
stc
inc
fs
lds
add
aas
mov
jmp
lds
adc
adc
push
fstps
pop
sarl
in
test
or
je
adc
fmul
add
adc
mov
jnp
hlt
popf
jb
sub
mov
icebp
aam
cmpsl
sar
or
sub
dec
cmc
ds
push
mov
int3
test
sbb
mov
jo
fistl
xchg
xchg
scas
and
xchg
inc
pop
int3
xor
sub
xor
ja
or
dec
jl
test
xor
and
pop
push
icebp
and
adc
sub
je
stos
gs
shlb
and
push
lcall
push
and
sbb
test
xor
cmc
dec
out
and
adc
aaa
fs
inc
xor
mov
repz
sub
icebp
xor
cld
add
xchg
pusha
pusha
xor
mov
nop
rcll
sub
aas
mov
out
push
jmp
ds
out
mov
and
filds
negl
fwait
sub
or
jo
or
fxch
movsl
lods
in
sub
xchg
movsb
cwtl
mov
sub
ljmp
add
mov
cmp
jge
pop
inc
ja
xor
fimull
xor
xor
sti
fimuls
xchg
dec
xor
dec
pusha
cli
sarl
and
bound
xchg
pop
cmp
and
data16
lahf
push
sub
ret
xor
and
push
rorb
and
xor
mov
jb
cld
push
arpl
inc
cmpsb
stc
xor
cmp
jecxz
cmpsl
clc
sbb
xchg
daa
popf
and
xchg
inc
push
lea
xor
mov
xor
add
std
sub
jns
lock
inc
jmp
sti
popf
rolb
aaa
cli
sub
bnd
cmp
mov
or
test
fidivrs
cmp
into
push
bound
xor
adc
cli
fldenv
mov
outsl
popf
add
shr
mov
shrb
lcall
dec
mov
pmulhuw
mov
adc
ljmp
and
mov
xor
inc
addr16
enter
xor
push
out
int3
movsl
add
xor
cmpsl
std
dec
mov
xor
mov
cmp
shrl
push
or
mov
or
std
xchg
bound
push
cmp
or
lock
shlb
mov
jl
mov
int3
push
push
jo
in
mov
and
xor
push
inc
xchg
pop
lret
cmp
and
jl
js
mov
xor
jge
mov
in
jp
jg
repnz
fidivs
xor
dec
sub
mov
mov
inc
lock
adc
js
mov
lcall
or
shlb
aam
jnp
or
rcrb
xor
push
repnz
sub
lods
jnp
imul
inc
insl
les
fdivr
mov
rcll
sub
push
call
lds
stos
xor
sahf
push
int3
mov
xchg
xor
push
rcrb
push
stos
xor
mov
sub
xor
mov
rclb
adc
push
out
sbb
pop
mov
ret
xor
dec
mov
pop
addr16
sub
inc
cmp
lods
jl
mov
js
push
xor
stos
nop
test
cmpsb
shlb
enter
sbb
or
xchg
daa
sbb
xor
es
mov
adc
rcll
and
or
in
push
xor
mov
aas
xor
cmp
xor
outsl
ljmp
addr16
mov
adc
push
push
inc
add
in
mov
shrb
and
fmuls
cmpsb
hlt
jb
outsb
dec
jecxz
mov
inc
stc
mov
shlb
xchg
mov
sbb
sub
or
or
inc
xor
jns
addr16
fnsave
sub
loopne
pop
lahf
mov
sbb
cmp
mov
test
xchg
cli
enter
push
mov
addr16
scas
jae
mov
mov
repz
sbb
int3
pop
or
add
daa
pop
mov
out
pusha
inc
sarl
and
shlb
push
adc
xor
xor
mov
movsb
pop
repnz
std
out
mov
push
adc
jb
mov
cmp
ret
ret
mov
inc
in
mov
icebp
ss
pop
rol
out
adc
inc
adc
movsl
dec
leave
gs
xchg
mov
addl
xchg
in
cli
aaa
or
sbb
dec
rcrl
mov
and
dec
push
icebp
sbb
jg
xor
test
jo
jnp
adc
cmpsl
adc
push
mov
sub
iret
jp
mov
aam
in
sub
pop
pop
das
stos
repnz
add
inc
ror
xchg
sub
mov
js
scas
dec
arpl
adc
inc
popf
xor
enter
jl
adc
pushf
xchg
pop
xchg
push
mov
adc
out
sbb
cmc
jo
arpl
sbb
jb
bound
repz
inc
rcrl
push
xchg
hlt
sbb
mov
adc
lods
xor
lds
xchg
test
ret
inc
lahf
dec
add
and
inc
and
stc
sub
dec
or
or
or
iret
push
popa
cmpsb
mov
pop
mov
inc
jge
and
test
fsave
dec
dec
push
cld
jecxz
imul
mov
cmp
lcall
pop
sti
jns
in
adc
cwtl
or
outsb
mov
ret
push
scas
bnd
mov
enter
sbb
rcl
push
fs
dec
pop
and
add
into
and
pop
xor
loopne
test
jmp
jo
in
lcall
xchg
outsb
jae
xor
andl
xor
mov
popa
xor
push
in
std
mov
imul
ret
mov
push
and
push
aad
fwait
popa
jne
in
pop
or
mov
cmpsl
scas
loop
cli
sarl
jbe
mov
je
and
mov
fsubrl
mov
cmp
adc
popf
pop
xchg
out
xor
or
mov
arpl
inc
lds
dec
adc
ja
or
daa
test
fucomp
adc
loope
cli
or
dec
xor
dec
test
int3
and
jns
imul
and
sub
xlat
mov
fisttpll
movsl
add
js
psrad
jnp
sbb
xor
stos
inc
in
mov
fs
cmp
and
test
add
or
mull
push
mov
arpl
and
dec
xor
divb
mov
pop
mov
pop
push
out
mov
inc
adc
loopne
in
int3
enter
mov
or
sbb
adc
pop
push
lods
ret
outsl
mov
les
jge
ljmp
xor
cmpsb
fdivs
das
and
fistpll
ja
push
stos
ljmp
sbb
sbb
jae
push
test
push
mov
jnp
je
outsl
adc
and
lods
stos
fisubrs
pop
sub
lahf
mov
xchg
loop
or
push
mov
aam
jle
call
in
mov
inc
je
and
adc
aad
mov
imul
and
in
sbb
jo
inc
clc
pushf
xor
xchg
pop
daa
xchg
pop
lcall
test
jle
adc
clc
sbb
xchg
lcall
test
jno
xor
js
add
andl
mov
or
mov
push
cwtl
mov
or
lret
mov
xor
lods
mov
mov
jecxz
dec
push
xor
pop
into
rorb
xor
popa
cmpsl
mov
jg
fcompl
sbb
cmp
mov
cmp
xchg
add
stc
ss
icebp
push
ja
stc
shrb
enter
xor
jae
fimull
loop
mov
cmpsb
mov
mov
addr16
mov
repz
fstpt
frstor
clc
mov
cmp
and
xor
xor
xlat
dec
cmc
inc
inc
pushf
inc
xor
xor
push
cld
xor
jnp
push
adc
push
mov
insl
and
aad
nop
test
outsb
sub
lahf
or
movsb
iret
push
xchg
jle
cmp
fsubrp
test
xor
ds
daa
iret
cltd
pop
xor
out
or
pop
in
sbb
inc
xor
lcall
push
and
push
aas
xor
dec
mov
push
and
rolb
cmpsl
in
sub
loopne
pop
add
xchg
or
andb
adc
xorb
mov
xlat
cmp
adc
mov
and
sub
outsb
loop
clc
daa
or
and
repnz
adc
lods
ficoms
xor
repz
stos
sub
insl
xor
push
movsb
jge
test
and
pop
lods
xchg
sbbb
das
mov
lcall
inc
mov
scas
pop
ljmp
into
adc
cli
push
popf
jb
xor
ljmp
ret
mov
or
cmp
xor
jmp
adc
fiadds
icebp
fwait
adc
nop
or
mov
or
push
repz
xchg
xor
dec
daa
ja
jmp
fcoml
pop
jbe
out
jecxz
mov
jge
stc
pmaddwd
xlat
mov
mov
stos
daa
pushf
and
test
jbe
adc
and
sub
js
sbb
cmpsb
fisubs
dec
pop
mov
mov
addr16
call
xchg
cmp
mov
ljmp
sbb
add
aad
xor
fidivs
xor
stos
dec
scas
addr16
xor
inc
in
dec
push
iret
clc
pop
out
dec
xor
std
incl
sbb
les
adc
scas
and
sub
xor
fs
inc
mov
sbb
rclb
adc
inc
push
inc
or
fs
rcrb
mov
fadds
lea
adc
jb
push
lahf
push
sahf
insb
pop
push
into
dec
xor
lods
sub
lcall
insl
adc
sbb
xor
jb
mov
jbe
fs
shll
cmp
dec
xor
pop
movsb
scas
orl
out
clc
stc
push
adc
subb
xor
bound
ljmp
mov
fwait
stos
aas
std
clc
inc
fists
mov
and
mov
scas
shll
or
push
add
test
imul
nop
or
cmpsb
jbe
fwait
pushf
jl
out
sahf
lmsw
push
and
add
rorb
xor
jg
jb
mulb
clc
sbb
mov
add
cmp
jbe
xor
xchg
mov
shll
out
out
push
xchg
adc
xchg
jo
in
hlt
lcall
adc
lret
push
sbb
dec
xor
fsubs
or
out
mov
sub
stos
cmpsl
test
popa
push
outsb
enter
js
and
jnp
jg
mov
cmp
orb
jecxz
add
sub
xor
jmp
jl
clc
adc
fidivrl
es
dec
cmp
adc
xchg
data16
cmc
shll
outsl
ret
mov
pop
mov
mov
shl
hlt
or
lret
xor
sbb
inc
cmpsb
xor
cmc
rorb
mov
and
movsl
push
pop
push
loopne
or
pushf
lea
rcrb
jns
xor
aam
mov
pop
or
jb
sbbb
xchg
cmc
es
dec
out
and
pop
push
imul
call
xor
mov
xor
in
fwait
pop
loop
xor
stos
lcall
icebp
subl
rcll
or
dec
dec
outsb
lret
inc
ja
cltd
mov
xchg
pushf
xor
cmp
mov
in
push
cmpsb
lds
inc
bound
shl
cmp
aad
pop
sbb
cwtl
or
lret
or
mov
dec
xor
sti
aam
data16
shr
bound
jg
xor
pop
mov
mov
std
cli
leave
je
dec
or
inc
outsl
or
mov
sti
js
xor
xor
pop
mov
test
jmp
xor
add
addr16
cmp
sahf
sbb
pop
nop
push
fnstcw
xor
stos
xor
xor
int3
in
xor
stos
sub
mov
mov
xor
inc
xchg
pop
push
in
xor
addr16
movsl
sbb
adc
xor
or
jno
mov
cli
sub
mov
xor
ficoml
insl
addps
cmp
sub
loopne
sbb
data16
outsl
mov
lds
jecxz
push
popa
jo
in
sbb
xor
add
test
out
xor
ds
lock
rorb
sbb
add
push
xor
shll
sub
xor
xchg
movsb
aaa
pcmpgtd
mov
sub
cmp
loope
loope
stos
or
out
out
cld
adc
mov
push
clc
mov
out
into
xor
cld
pushf
add
lcall
jbe
int3
sbb
push
and
mov
loope
in
cmp
ljmp
pop
xor
dec
popa
mov
lret
nop
stc
bnd
add
xor
mov
cmp
test
push
sbb
cmp
mov
xor
mov
rep
push
fcompl
repnz
ss
fldenv
movsl
mov
push
xor
push
xor
ret
push
mov
leave
cmpsb
sbb
jmp
out
sbb
jo
xlat
imul
ds
fildll
ret
add
jbe
cmpsl
jg
adc
and
lods
xor
jns
adc
loope
xchg
mov
inc
mov
mov
roll
xor
sub
outsl
mov
sub
jp
cmp
cmp
sbb
das
adc
call
repnz
ds
je
cmpsl
mov
shr
mov
xor
pop
fidivrl
sbb
inc
inc
xchg
sub
cmpsb
ss
lcall
or
js
xor
loopne
add
xor
scas
cli
adc
addr16
stos
push
addb
cltd
jge
loop
add
std
sbbb
sub
mov
xor
rcl
mov
push
sbb
mov
inc
les
jnp
adc
ret
cmp
push
pop
mov
push
and
jge
xor
mov
pushl
adc
sarl
inc
leave
fs
in
pusha
fisubrl
mov
int
cmp
push
inc
or
or
icebp
inc
xor
xor
xchg
xor
out
setge
sbb
push
xor
add
sbb
lsl
loopne
adc
xor
sub
repnz
xor
pop
or
xor
add
mov
and
bound
movsb
push
xchg
inc
push
lods
dec
lcall
movsl
out
cmp
xor
xchg
adc
xor
iret
test
mov
movsl
pop
or
dec
dec
cmp
adc
arpl
mov
xor
push
pusha
or
inc
incb
jecxz
scas
adc
jo
push
aam
fstps
xor
insl
push
pop
enter
pop
xor
xor
mov
push
mov
shlb
mov
or
fstpt
xor
bound
mov
jne
js
and
test
mov
sbb
adc
daa
dec
jle
sbb
xor
movsb
and
pop
in
push
adc
and
fcompl
cmpb
sub
sub
mov
mov
xor
or
lock
mov
adc
adc
sub
or
xor
dec
push
insb
push
cmpsl
or
jbe
mov
enter
xchg
and
call
adc
cmp
leave
arpl
xor
dec
ret
xor
mov
loop
mov
enter
mov
push
mov
and
std
add
sbb
mov
dec
adc
jp
xlat
fildll
xor
stos
inc
shll
repz
scas
sub
mov
ds
xor
pop
xor
push
repz
mov
shll
cmp
iret
mov
sti
jge
es
mov
cmp
pop
popa
mov
out
ja
jo
or
cli
and
push
lods
and
xor
add
mov
in
hlt
ret
push
xor
in
daa
out
dec
push
cmp
iret
jnp
fdiv
aad
mov
aaa
sarl
scas
adc
mov
test
adc
sbb
loop
inc
repnz
ror
ficompl
nop
xor
es
xor
loop
arpl
jmp
test
clc
mov
xor
iret
mov
push
and
mov
xchg
rorl
push
cmpl
roll
push
add
in
sahf
js
imul
ds
xor
mov
push
test
xor
test
xor
xchg
add
xchg
mov
test
mov
rcll
lret
mov
mov
cmp
sbb
adc
add
adc
push
fmuls
in
aaa
es
lods
leave
sbb
ss
inc
push
fidivrl
xor
daa
inc
nop
dec
xor
dec
jnp
xchg
mov
pop
and
scas
test
xor
mov
mov
enter
inc
mov
pop
aaa
repz
push
fwait
ja
sbb
nop
mov
inc
mov
movsl
adc
xchg
sub
xor
jbe
xor
jmp
push
adc
push
test
lcall
dec
xchg
adc
rcl
fists
inc
hlt
lods
mov
imul
pop
xorb
popf
add
cmp
ret
outsl
xor
add
dec
xor
mov
mov
and
rcrl
pop
push
inc
fs
mov
mov
inc
outsl
imul
xor
outsb
pop
xor
pop
xchg
pusha
ret
inc
xor
pop
mov
inc
dec
insb
sub
mov
jae
fmul
mov
data16
xchg
sarl
shlb
js
mov
popa
pusha
xor
movq
ficoml
in
xchg
sti
xchg
out
cmpsl
stos
in
inc
push
push
add
loopne
ja
adc
in
xchg
in
pop
xchg
test
sub
fcmove
jno
into
xor
xor
pop
xor
or
mov
das
sbb
cmp
xor
sub
pop
test
leave
adc
xor
adc
dec
dec
adc
lcall
je
int3
lret
push
sub
cs
test
mov
aad
int3
orl
ljmp
lret
mov
les
out
ja
add
sbb
lea
cmp
stos
outsb
jecxz
xor
je
inc
pop
jb
xor
nop
cltd
inc
outsl
shl
loop
xor
int3
jno
add
fisubrl
ljmp
sahf
inc
inc
push
or
pop
pop
push
xor
mov
les
mov
lahf
push
cli
and
sub
mov
jns
fcompl
xor
mov
lds
out
mov
popa
push
stos
test
push
mov
clc
popf
pop
cmp
adc
xor
xchg
aam
mov
xor
imul
add
mov
xor
test
movsl
xorb
scas
cmp
pop
lods
inc
into
mov
jmp
add
mov
hlt
sarb
dec
into
xor
int3
sub
outsb
pop
inc
or
adc
xor
mov
xor
dec
insl
pop
stos
cmpl
xor
lret
mov
xchg
push
jo
hlt
scas
mov
push
cmpsb
fcmovbe
or
popa
idivl
das
lods
pop
mov
xor
imul
jbe
arpl
call
cs
xor
xchg
mov
pop
pop
pop
xor
jg
in
hlt
jmp
movsb
xor
mov
js
dec
push
data16
jp
mov
xchg
add
dec
sub
mov
adc
adc
dec
int3
lds
addr16
rdtsc
fsubrl
mov
lcall
bound
cmpsl
or
movsb
sub
mov
das
repz
mov
neg
sbb
cmp
xchg
push
in
mov
addr16
and
inc
adc
push
jae
gs
adc
scas
stc
in
fmuls
mov
dec
mov
int3
jle
dec
scas
xor
test
jecxz
dec
mov
loop
subl
add
mov
or
xchg
push
mov
adc
stc
repz
addb
sub
and
xor
cli
sahf
xchg
jp
ljmp
out
pop
clc
icebp
aam
aas
push
pop
les
sub
adc
cmp
mov
and
aas
jno
add
lret
pushf
sub
add
insl
shl
fwait
and
pop
push
int3
sub
xor
mov
jne
test
hlt
fs
out
inc
mov
jae
xor
and
xor
pop
fwait
shll
bnd
push
test
push
xor
push
push
pop
movsl
add
loop
dec
scas
iret
cmpsb
es
imul
pop
mov
fstl
xor
ljmp
test
test
xchg
push
cmp
out
fisubl
cmp
push
mov
fbstp
test
lods
daa
and
and
pop
dec
not
in
stos
sub
jo
jge
adc
les
repz
or
sbb
adc
push
pop
jp
jnp
jl
sub
mov
inc
cmp
iret
mov
mov
xorb
adc
outsb
repz
ret
mov
popa
aad
xor
imul
divb
call
push
jne
cmp
mov
scas
mov
or
add
pop
lods
push
jp
popa
orb
inc
cmpsb
enter
jo
mov
jmp
dec
mov
repz
push
pop
xor
push
cmpb
mov
mov
xor
xchg
aam
shlb
push
push
leave
cmp
int
out
mov
ficoml
sarl
mov
into
jecxz
push
cmpsb
ret
scas
fists
sbb
jo
jo
cmp
lds
push
pushaw
mov
add
xchg
imull
mov
imul
mov
jmp
xchg
mov
jecxz
shrl
sub
dec
and
adc
adc
rcll
and
inc
fwait
mov
cmp
xor
sub
addr16
lret
test
in
xor
pop
out
mov
fs
xor
or
jns
xchg
cli
xor
mov
stc
xor
xchg
inc
mov
test
inc
cmpsb
cmp
jge
or
jnp
fstpl
xor
push
jbe
icebp
arpl
repnz
test
push
ret
dec
dec
add
xor
sbb
xor
pop
xchg
lods
in
fwait
sbb
repnz
sub
int
push
xor
je
push
push
pusha
mov
in
movsl
fwait
xchg
sbbb
rorl
es
xor
out
add
xchg
push
cmp
adc
ret
inc
call
mov
mov
xor
cmp
inc
jle
into
ss
inc
shrb
sti
xlat
shll
pop
sbb
divl
lret
and
sbb
int3
push
insl
xor
out
push
arpl
add
sub
dec
adcl
pop
jae
cmp
inc
adc
pop
repz
sbb
pop
jl
adc
add
hlt
repnz
mov
loope
pop
xor
and
xchg
mov
fsubs
sub
xor
roll
mov
mov
jnp
sbb
fsubrp
cli
ds
and
sbb
enter
push
les
mov
dec
mov
mov
xlat
int
out
xor
xor
es
and
les
aam
inc
xchg
xor
push
xor
outsl
xor
ret
mov
out
xchg
xor
lea
popa
push
pushf
adc
std
push
or
sbb
pop
xor
mov
dec
lret
in
nop
inc
inc
cmpsb
lods
add
sub
fisubl
push
mov
jmp
adc
lods
push
mov
ja
and
imul
sub
insb
faddp
inc
enter
push
pop
out
lahf
ja
inc
or
out
add
ss
js
pop
cli
cltd
mov
dec
rol
fdivl
xor
push
inc
sbb
jecxz
aam
xor
sub
pop
mov
or
loop
movsb
addb
cli
pushf
xchg
rcll
hlt
sbb
loop
xor
add
xor
jne
rolb
std
ret
xor
loopne
xor
add
sub
pop
stos
xchg
push
xor
mov
xchg
xor
push
scas
lock
dec
sbb
rcll
mov
insl
mov
aas
filds
fadds
xor
fstpl
xor
inc
sub
adc
add
and
jno
aam
vandnps
mov
jp
xorl
mov
dec
xor
dec
xor
call
xor
dec
jne
pop
add
adc
js
push
xor
mov
int3
rorl
shlb
jae
push
cmp
jne
enter
loop
in
adc
xchg
push
cli
icebp
dec
cmpsl
aaa
add
fidivrs
push
sub
fcmove
scas
hlt
ds
sbb
sub
xchg
xchg
notb
movsl
xor
mov
pop
lret
cld
cmc
pop
scas
inc
lods
or
push
and
xor
mov
inc
mov
pop
sahf
sbb
fisubrs
cmp
movsl
pop
lret
mov
add
push
jmp
or
jo
rcrb
out
loop
and
cld
and
mov
jb
cmp
sbb
cmp
fs
out
pop
xor
cmp
in
or
lahf
jno
mov
je
cmpsl
cmpb
mov
push
jge
shll
rcrb
jns
xor
adc
fimuls
movsl
xor
rolb
cwtl
push
pop
xcrypt-cfb
cmpsl
mov
push
add
ljmp
push
test
xchg
popf
sub
mov
cmpsl
sbb
mov
sbb
adc
mov
lret
or
adc
mov
notl
add
jae
push
pop
imul
xor
cmp
in
mov
sub
push
push
or
outsl
xor
jne
jae
nop
icebp
sahf
and
jmp
scas
mov
adc
or
aas
cmp
lds
aas
adcb
loopne
cld
inc
and
ds
lret
into
outsb
test
cwtl
adc
dec
sahf
push
adc
or
fstpt
lods
shrb
cmp
mov
cld
in
scas
sub
xor
jbe
xor
cmp
adc
dec
xchg
xor
cmpb
or
jp
and
int3
sub
test
adc
cltd
pop
xchg
and
iret
mov
push
cmp
pop
mov
orb
inc
push
xor
roll
insl
pop
hlt
push
adc
imul
stc
pop
bound
aaa
push
mov
nop
ret
pop
loop
push
jno
inc
inc
sbb
fidivs
imul
mov
repz
bound
cmp
pop
xor
mov
push
pop
inc
in
xlat
add
pop
pop
inc
jecxz
insb
mov
lea
js
or
in
cmp
dec
fidivl
xor
xchg
push
push
jge
ljmp
lds
and
stc
inc
xor
xor
arpl
data16
out
stos
in
xor
xchg
das
or
je
jnp
push
ret
sub
push
xor
inc
repz
jmp
lods
or
aaa
cmp
orl
inc
pop
and
mov
sub
pusha
mov
or
dec
es
push
dec
xchg
xchg
xor
in
add
aam
push
and
mov
sbb
ret
lret
rcrb
xchg
xchg
outsl
xor
sub
adc
mov
dec
ds
sbb
push
jb
inc
lret
gs
and
test
mov
jbe
stos
lcall
sti
mov
cs
loop
iret
ficoml
xor
mov
xor
push
jno
push
dec
inc
sub
jne
das
add
mov
cs
sbb
daa
xchg
call
lahf
jmp
mov
cmpsb
ret
outsl
rcll
int3
pop
push
lds
insb
jo
stc
xor
push
es
adc
mov
xor
xor
lods
pop
push
fcmovu
enter
pusha
and
arpl
sti
in
cld
dec
insl
mov
xor
jp
mov
shrl
sub
mov
pop
and
pop
dec
scas
sbb
mov
xor
xor
imul
inc
faddl
jl
or
rcrl
call
cmpl
adc
ja
cltd
mov
jns
and
sub
je
lods
adc
mov
sub
mov
xor
sbb
adc
inc
inc
sbb
mov
mov
xor
push
sub
xchg
mov
sbb
sahf
lods
sbb
sbb
rorb
and
mov
jns
xor
xor
adc
xor
push
test
add
ja
stc
pop
mov
sbb
or
fwait
sarl
push
mov
xorb
lahf
mov
loope
xor
cmpsl
call
and
pop
or
sahf
add
loope
adc
mov
xchg
leave
sbb
xor
jae
sub
jbe
pushf
mov
jecxz
cli
sub
scas
and
sub
mov
push
xor
movsl
cmpsl
in
jp
sub
sub
push
push
sti
push
mov
inc
xor
test
push
int3
sbb
jns
rorb
jae,pt
push
jno
push
test
adc
xor
out
cs
sbb
cmpsb
shlb
outsb
imul
repz
cmpsl
and
and
push
addl
or
mov
in
cmp
dec
test
adc
inc
and
pop
insb
xor
xlat
sub
mov
loopne
xor
out
pop
test
stos
pop
shrl
or
xor
mov
dec
xchg
xor
adc
push
clc
jl
outsl
or
xchg
mov
jle
or
pusha
xor
add
jmp
repz
and
xchg
lret
bound
shrb
test
add
movsb
and
out
mov
lret
pop
push
dec
jle
push
cld
or
ja
divb
or
ljmp
test
push
cmpsb
sbb
shrl
or
insb
push
xor
inc
enter
inc
inc
xor
lahf
push
cli
les
jns
bound
hlt
pop
mov
sbb
xchg
xor
int3
sahf
rcll
aad
pushf
fs
add
mov
inc
jp
addl
inc
xor
in
mov
out
js
ljmp
adc
pop
xor
inc
and
fdivr
imul
fisubs
mov
xor
inc
mov
filds
ljmp
leave
jno
mov
call
adc
cli
inc
add
sbb
jne
cmpsb
adcl
or
dec
xchg
dec
test
and
mov
mov
ficompl
out
xchg
adc
sub
jo
out
stos
std
jecxz
push
dec
sbb
jp
mov
rol
out
inc
add
aam
aad
xor
cmp
cli
test
xor
dec
aam
xor
in
mov
xor
push
dec
dec
int3
lahf
xchg
xor
pop
cmp
aas
addb
mov
scas
jnp
adc
dec
cld
test
int
push
call
dec
xor
mov
push
push
or
sbb
lods
fdivs
loopne
scas
mov
xor
nop
pop
xchg
icebp
xor
and
inc
fsubl
aam
loopne
roll
xor
xlat
imul
imul
add
rclb
inc
cli
cmpsl
les
cmpsb
fldl
sarl
seta
dec
dec
or
mov
mov
add
cli
dec
xchg
rorl
mov
repz
movsb
scas
inc
aam
or
out
mov
iret
aaa
adc
push
icebp
and
jae
xor
sbb
mov
xchg
jno
lahf
daa
xor
sub
insb
xchg
mov
push
or
stos
xor
inc
cli
jnp
jecxz
push
xor
call
push
adcb
sbb
icebp
push
mov
adc
out
mov
xchg
mov
adc
sbb
sub
cwtl
out
inc
cli
bound
jne
mov
insl
inc
xchg
xchg
xchg
cmpl
repz
pop
xor
fwait
cmp
insl
xor
aam
je
fsubrl
push
sbb
push
shrl
pop
sbb
clc
testb
xor
adc
push
pop
je
ljmp
adc
adc
cmpsb
mov
aad
and
push
inc
pop
or
jns
jnp
fwait
push
es
lea
dec
popa
cwtl
xor
shll
test
data16
and
in
pop
rolb
ss
sahf
mov
xor
stos
jle
xor
sti
test
movb
lcall
lock
scas
mov
xor
xor
mov
fidivrl
insb
or
mov
gs
cmp
cwtl
dec
inc
cld
inc
push
fisttps
mov
lods
int3
rorb
jne
lret
xor
xor
or
bound
dec
xor
inc
mov
mov
push
xor
cli
xchg
in
mov
add
xchg
je
aas
test
and
or
pop
mov
xchg
mov
test
or
sahf
pop
push
out
inc
adc
shll
fwait
cmpsb
mov
or
push
cltd
insb
insl
or
mov
fisubs
xor
cmp
fwait
lock
outsb
test
xchg
imul
sub
xor
push
mov
fisubs
lret
and
xchg
rclb
int3
xor
pusha
lods
xor
jne
dec
mov
push
push
or
adc
inc
stos
and
ror
out
imul
sub
lds
test
xchg
push
mov
xor
push
jns
jae
sbb
pop
call
jmp
and
xor
sbb
xor
aad
pop
add
or
xor
lods
arpl
insl
mov
dec
pop
pop
or
or
push
cltd
sub
adc
sarl
loopne
dec
xor
push
ret
lcall
xor
arpl
dec
push
mov
xor
repnz
shll
insb
jnp
mov
sbb
xor
sub
push
push
jecxz
jbe
ds
push
shlb
and
jmp
xchg
ret
out
cltd
xor
mov
roll
push
sbb
test
sbb
shl
test
or
mov
jge
jecxz
pop
scas
add
inc
stc
ficomps
xor
dec
push
xor
imull
add
and
pop
jno
lahf
lret
not
loop
or
cmp
cmp
mov
stos
jecxz
sub
push
enter
outsb
ds
lret
and
je
xor
repnz
and
adc
aam
dec
jecxz
sbb
lds
xchg
cli
jmp
adc
inc
and
hlt
push
cmp
mov
push
cmc
xchg
testl
mov
jmp
push
xchg
mov
and
sub
hlt
add
or
test
test
pop
or
stos
xor
push
mov
test
mov
xor
dec
cmpsl
jns
jo
sbb
in
and
xchg
and
adc
repnz
xor
pop
inc
ljmp
jmp
pop
and
or
fsub
js
sub
repnz
xor
sub
jecxz
jo
xchg
imul
pushf
xchg
pop
gs
pop
aam
ljmp
cld
stos
into
cmp
shlb
imul
cmp
xchg
lea
hlt
xchg
shll
adc
pop
or
cli
scas
or
or
sbb
jg
cmc
xor
jne
or
fcoms
out
clc
or
out
jmp
out
test
xor
or
xor
jecxz
adc
out
pop
lods
nop
les
push
mov
sbb
adc
cmp
lea
testl
sbb
push
loope
addb
jns
imul
sahf
call
push
sub
cmc
fisubl
inc
sub
mov
lret
fadd
sub
daa
and
push
push
mov
jnp
jl
or
and
test
call
adc
add
jp
loopne
xchg
inc
movl
cmpsl
or
pop
adc
jbe
push
or
cmp
incl
leave
int3
popl
mov
and
adc
popf
dec
sub
mov
hlt
sbb
xor
sub
enter
push
xor
insl
arpl
xor
mov
shrl
adc
jge
push
push
scas
mov
add
das
mov
xor
inc
cld
adc
imul
cmp
and
mov
inc
sbb
sub
xchg
aad
or
faddl
ret
lock
pop
jnp
or
in
xchg
mov
out
rcrb
fisubrl
imul
xchg
test
mov
push
dec
or
mov
push
or
add
xchg
mov
inc
cld
std
popa
adc
cmc
mov
sbb
push
je
outsb
or
push
js
xor
mov
out
xor
fsts
adc
sbb
push
imul
xor
pop
jp
stc
add
js
or
pop
jle
xor
xor
jo
mov
int3
lods
out
and
cmp
rorl
inc
cmpsl
inc
xor
add
xor
push
xor
imul
sbb
xchg
xor
jb
jbe
xchg
push
xor
xor
repnz
ret
imul
jp
scas
fisubrl
es
aam
fwait
outsb
sub
xor
insl
jns
xor
mov
dec
pop
cwtl
je
icebp
mov
notl
outsb
pusha
pop
jecxz
xor
loopne
sub
jae
pop
fisubrs
adc
mov
xor
and
nop
mov
xchg
mov
push
hlt
outsb
je
loope
sbb
dec
pop
fcomps
pop
xor
fiaddl
inc
adcl
pop
jo
push
fs
dec
fdivrl
lods
cwtl
test
jae
mov
push
xchg
addb
and
testb
mov
sarl
call
mov
lret
xor
jne
rorl
les
out
mov
xor
or
std
fnstenv
into
fiadds
jbe
icebp
call
daa
lahf
sti
mov
bound
out
adc
dec
es
setne
arpl
cmp
shlb
insl
test
jecxz
andl
int
ds
sbb
lret
xor
test
cld
lahf
xor
cmp
dec
popa
mov
cltd
jp
in
xor
push
push
or
pop
ljmp
in
sub
adc
jae
jns
xor
sub
xor
mov
pop
xchg
push
cmp
mov
sbb
pop
lods
repnz
and
out
xor
inc
aaa
xor
xchg
imul
mov
or
xor
mov
sub
mov
xor
dec
ret
rep
ror
adc
xchg
jmp
clc
fst
and
arpl
scas
pop
sbb
push
cs
pop
sub
shlb
cmp
push
out
jb
inc
or
or
ds
sub
aam
js
dec
stos
call
pushf
xor
xor
jae
inc
inc
xor
adc
addr16
pop
repz
or
aam
fmul
or
test
enter
mov
scas
mov
inc
mov
jl
sbb
or
test
imul
sub
xor
mov
mov
inc
or
inc
lds
mov
mov
fs
mov
xchg
cli
or
mov
cmp
or
xchg
xor
xor
mov
xor
pop
es
repz
lds
cmp
add
enter
or
and
rcrl
ret
repnz
push
mov
les
mov
rcll
icebp
lds
and
and
inc
add
divl
mov
cli
movsl
push
xor
mov
pop
jo
jae
pusha
xor
stos
jnp
mov
jle
lods
pop
test
in
gs
popf
mov
ret
push
sti
fcoms
in
shrl
ja
pop
adc
and
outsb
push
add
and
adc
adc
mov
sbb
rclb
inc
xor
cmp
xchg
mov
mov
xor
push
sbb
adc
xor
rolb
loope
xchg
push
mov
push
repz
rcrl
rcl
sub
subl
jns
mov
lock
lods
jmp
sbb
mov
add
fidivl
nop
adc
xor
push
fwait
lcall
mov
mov
movlps
cmpsl
or
jns
loop
and
xor
arpl
jnp
cmc
xchg
inc
xor
mov
xchg
adc
mov
inc
push
repnz
ret
icebp
push
or
sub
hlt
fidivrs
dec
hlt
dec
shl
fists
cmpsl
in
jl
cs
orb
adc
xchg
ret
ds
xchg
bound
xor
pop
add
pusha
popa
push
ret
stc
aad
ret
and
addb
mov
in
pop
and
aas
mov
rcll
push
xor
rcrb
xor
rol
mov
push
add
hlt
gs
or
aam
xor
mov
inc
lods
fs
imul
sarb
sub
xchg
testb
das
mov
xor
mov
push
in
sub
pushf
mov
sahf
adcb
scas
imul
int3
and
adc
cmp
enter
xor
bound
push
sub
xchg
mov
mov
adc
fcmovbe
xor
or
adc
or
push
and
ss
imul
outsb
mov
hlt
dec
ss
fistps
xchg
cmp
fwait
dec
xor
jbe
mov
call
sub
scas
insl
sub
or
cld
outsl
lret
mov
xlat
adc
xor
leave
mov
xorb
jne
imul
sbb
stos
repnz
mov
je
xor
xchg
xor
lret
and
imul
push
mov
aaa
scas
lock
cli
mov
mov
imul
push
int3
push
fisttps
jbe
or
jmp
push
call
cmp
rorl
adc
mov
jo
jg
and
sbb
xor
pop
movsb
stos
fs
mov
add
sbb
cli
out
add
lds
lret
shll
outsl
dec
out
push
cmpsb
jo
adc
push
sbb
push
add
inc
scas
cmpsl
sub
push
xor
call
es
pop
jns
inc
pop
out
xor
xor
xchg
lods
int3
sub
jge
sub
or
sub
outsl
fsubl
andl
xchg
mov
shll
in
or
pop
add
adc
leave
mov
xchg
xchg
xchg
xor
pop
aas
test
push
push
xor
cmp
xor
dec
movsl
xchg
pop
movsb
mov
jl,pt
and
jnp
out
xor
stos
lods
aad
rolb
xor
ret
movsl
mov
int3
xchg
cmpsb
das
in
dec
mov
and
repz
xor
movsb
lahf
xchg
in
xlat
test
jge
pusha
out
stos
jg
mov
mov
cltd
out
pop
push
xor
call
out
ss
xor
or
inc
xchg
aas
adc
push
jb
and
xor
xor
clc
mov
mov
testb
stos
shlb
or
pop
xchg
xor
adc
into
sub
push
push
shll
and
jno
xchg
dec
aad
inc
pop
sub
orps
mov
push
cmp
movsb
aas
and
int
inc
mov
xor
rclb
ret
idivb
and
mov
pop
and
xor
in
xor
shr
adc
ss
and
inc
push
jecxz
bound
pop
inc
imul
les
xor
mov
and
adc
mov
xor
loop
push
movb
ficoms
mov
and
pop
and
xor
cmpsl
aas
cmp
hlt
xor
cmpsb
dec
jns
push
loopne
cmp
ds
shll
arpl
scas
out
or
mov
xor
sti
jnp
shlb
lds
jbe
fs
adc
jne
inc
inc
adc
xor
movsb
addr16
adc
outsb
cwtl
pop
xor
cs
sub
push
mov
lahf
sub
out
outsl
push
sub
imul
xor
movsb
jb
popa
icebp
je
test
pop
fcompl
fcom
scas
xor
xchg
in
jae
inc
cmpsb
inc
xor
test
sbb
out
sti
xor
mov
jns
push
xor
iret
or
bound
jecxz
xor
pop
push
and
in
out
adc
push
int3
enter
js
dec
cmp
push
sahf
ffreep
aaa
adc
pop
pop
mov
insb
xor
sbb
xor
cmp
test
notb
jne
in
xchg
mov
push
xor
inc
std
cmc
andb
push
push
mov
and
aaa
add
pop
mov
mov
mov
outsl
mov
mov
or
ja
iret
add
addr16
cmpl
xor
rorl
or
nop
push
dec
js
imulb
adc
mov
loopne
mov
push
jnp,pt
xor
sahf
lods
add
jmp
xchg
mov
push
lahf
in
xchg
adc
xorl
push
rcr
cmp
outsb
out
in
adc
lcall
pop
cmpsb
xchg
xor
xchg
loopne
fs
xchg
push
pusha
lods
cmp
fsubrl
cld
or
xchg
scas
xchg
adc
adc
pushf
adc
outsb
icebp
inc
and
cmpsl
ret
ljmp
mov
sahf
fsubrp
in
clc
pop
mov
je
aam
push
repnz
or
nopl
xchg
and
mov
xor
sub
adc
adc
and
mov
mov
jns
cmc
lds
xor
sbb
popf
push
xor
jecxz
test
push
lea
test
push
mov
bound
pop
mov
cmp
aam
cmp
xor
out
push
push
sub
pop
dec
pop
sbb
sbb
xor
mov
arpl
out
xchg
mov
dec
push
iretw
outsb
shlb
lcall
aad
aam
mov
subb
xchg
fdivrs
repz
inc
mov
clc
shll
lods
jl
inc
addl
jp
je
andb
add
and
mov
pop
push
in
adc
adc
imul
test
and
xchg
or
or
fs
xchg
mov
lds
lret
jnp
and
pop
insb
in
mov
imul
cmp
scas
mov
xchg
xchg
jl
xor
cld
xlat
xchg
push
adc
jae
rorl
insb
xor
out
jp
mov
cmc
int
and
out
mov
inc
and
mov
xor
jg
pusha
bound
fs
rcll
mov
imul
cmp
cmp
sub
sbb
inc
cmp
daa
sub
push
mov
inc
push
sbb
pop
pop
xor
shrl
push
mov
push
inc
jb
xor
pop
loop
icebp
outsb
xor
fisubrs
js
fcmovnu
and
push
mov
sbb
pop
shll
inc
xor
adc
xor
or
add
shll
add
pusha
or
mov
icebp
test
adc
jns
mov
sbb
outsb
rcl
and
jmp
stos
mov
pop
push
stc
test
jne
xor
and
mov
xor
fcoms
into
orb
or
mov
pop
xlat
xchg
shld
jecxz
icebp
adc
push
call
sbb
jb
cmpsb
cli
push
daa
xor
movsl
outsl
inc
nop
mov
xor
jns
repnz
or
add
pop
popf
sbb
imul
sub
cli
arpl
ret
adc
stc
fwait
rcrb
mov
add
adc
lock
sub
push
xorb
push
mov
cwtl
xor
sbb
lret
push
stos
cmp
ret
notb
push
xor
mov
xor
add
fwait
adc
push
pop
lcall
xchg
gs
push
jp
jo
ljmp
cmp
cmpsl
mov
push
inc
or
jb
ljmp
mov
push
inc
xor
pusha
rol
dec
leave
xchg
mov
mov
and
sbb
adc
xor
pop
imul
xor
stos
js
pushf
int3
pop
sarl
loope
fs
xor
mov
push
pushf
mov
lods
adc
ds
mov
cmp
fcomps
xor
hlt
inc
stos
sub
add
cmp
lods
jl
sbb
xor
cli
pop
iret
test
adc
cmp
sbb
xor
add
or
push
xor
fcomps
sub
or
fisttpl
loope
or
jae
pop
xor
xor
xor
loope
ret
and
dec
or
sub
lret
fmuls
fsub
xor
loope
push
xchg
cmp
push
push
cmp
sbb
lcall
sarb
fsubrl
mov
push
mov
or
test
or
and
sahf
cmpsb
nop
mov
xor
pop
jae
leave
mov
mov
fidivrl
ja
sub
subl
push
xor
out
inc
mov
mov
fildll
int
loope
cli
jle
sbb
enter
or
xor
out
data16
xor
test
loopne
loop
xor
pusha
aaa
mov
pop
or
xor
mov
rclb
repz
and
and
ffree
orl
xor
mov
add
or
sub
out
xchg
repz
faddl
mov
ret
lea
gs
fwait
enter
push
add
or
sub
cmp
xor
stc
lds
jp
xor
js
add
and
fldcw
icebp
leave
sbb
or
sub
add
pop
pop
lds
push
ja
xchg
xor
or
out
xor
frstor
ss
push
outsl
addr16
cmpsb
pop
sbb
xor
sub
mov
add
xor
popf
es
addl
xor
out
xor
dec
or
and
scas
jb
aam
jecxz
stos
xor
mov
leave
shll
and
add
and
sahf
xor
je
xchg
push
insb
xchg
mov
add
xor
stos
in
test
push
sbb
out
cmp
cmc
xchg
test
cmp
mov
push
sarl
sti
es
or
das
mov
andl
mov
jae
cmp
or
inc
lcall
or
out
mov
fwait
mov
inc
xor
mov
dec
mov
push
fcomi
mov
notb
std
out
add
pop
mov
xchg
cmp
test
leave
and
xor
shrl
iret
push
pop
jne
pop
xor
and
out
cmpb
inc
cmp
mov
mov
mov
sti
cmp
cli
sub
xor
pop
es
mov
ss
sbb
in
faddl
dec
pop
orb
mov
sarl
outsl
xchg
ret
inc
fwait
pop
mov
xor
push
mov
adc
sub
sbb
inc
aad
je
in
rcll
inc
push
mov
roll
jno
movsl
addb
sub
cmp
mov
push
inc
out
dec
xor
fsubs
jo
mov
aas
push
jo
add
jno
sub
mov
mov
mov
icebp
xor
push
rcl
xchg
adc
jmp
pop
jmp
or
mov
outsb
jno
push
sbb
or
hlt
leave
std
xchg
aad
mov
bound
pop
mov
inc
hlt
xor
cmp
mov
dec
mov
jl
shl
xlat
rcll
repz
cmpsb
jb
xor
cmp
sbb
mov
outsb
cltd
cmp
xor
cmpsl
out
or
jle
push
pushf
xor
loop
out
shrb
or
add
push
jns
and
pop
enter
inc
and
imul
imul
pop
sar
xor
jns
add
fbstp
movsb
pop
dec
call
push
xchg
jae
movsl
or
pop
pop
roll
outsb
push
push
mov
pop
in
inc
add
test
xor
sahf
aas
jp
or
xor
in
cmp
test
out
push
inc
scas
xor
pushf
fildll
orb
lahf
mov
xchg
lds
call
fdivrs
xor
pop
aam
aas
enter
lds
xor
out
push
adc
insl
jno
jns
sahf
inc
stc
std
fisttps
shlb
dec
loop
lret
stos
into
xor
imul
or
sub
fs
movsb
int3
push
out
xor
cli
or
fcomip
xchg
xorl
andl
clc
fmuls
mov
mov
xor
pop
mov
rol
les
push
stos
push
add
pop
sarl
mov
cmp
sub
sbb
add
lret
repz
sub
pop
jmp
sarb
es
adc
rcl
psllq
dec
jae
data16
inc
push
pop
arpl
pop
dec
imul
ret
testl
sbb
adc
ror
orb
xchg
cltd
sbb
fsubl
xor
xchg
in
xor
mov
xorl
mov
stos
fstpt
or
fmul
ds
sub
lcall
sarl
sbb
pop
jmp
shlb
fcmovb
mov
or
adc
arpl
push
movsl
test
notl
and
rcrb
jle
inc
nop
cwtl
jecxz
stos
ljmp
and
fsubl
std
or
fs
xor
cli
insb
jo
loop
sub
inc
mov
push
mov
push
sbb
inc
cmp
loope
test
inc
call
jne
mov
mov
push
aad
inc
out
and
sbb
stos
repz
test
dec
xor
sbb
in
fcomip
cwtl
shll
lods
stc
mov
sub
fwait
xor
push
jg
inc
fstpt
insb
xchg
shll
push
jno
push
packuswb
xor
mov
xor
xor
fdivrl
inc
mov
cmpsl
bnd
pop
test
fs
dec
int
push
or
lods
add
rol
aaa
std
rol
cld
cld
mov
test
fadd
or
xor
mov
lret
xchg
stos
in
xor
inc
mov
sbb
popf
xor
mov
pop
jo
daa
bound
call
mov
adc
aam
mov
lea
push
pop
or
jle
xchg
idiv
push
sbb
inc
mov
adc
mov
inc
pop
call
nop
xor
dec
in
mov
mov
inc
out
xchg
fdivrp
subb
outsb
lcall
test
sub
pusha
add
cmp
out
dec
out
mov
xor
cmp
xchg
mov
push
cmc
inc
mov
mov
inc
sbb
cmp
cltd
xor
cmc
jg
xchg
add
outsb
xor
jle
push
sub
or
and
pop
xchg
scas
sbb
jbe
sti
outsb
mov
adc
xlat
add
xchg
cmpsl
add
leave
mov
adc
scas
lahf
adc
push
shl
in
in
xor
push
pop
jg
fninit
mov
pop
outsb
call
or
push
push
xchg
push
mov
jecxz
cmp
mov
xchg
sahf
dec
inc
push
dec
xor
adc
andl
jmp
testb
jno
fldenv
xchg
xor
leave
lods
div
test
loope
cmp
pop
mov
ja
ds
cmc
sbb
aam
rcr
add
mov
mov
into
xchg
bound
mov
aam
adc
sub
cmp
xchg
mov
imul
rcrl
inc
xchg
pop
or
lret
xor
xchg
sub
pop
add
lret
jb
dec
fisubrl
sub
xor
loop
jl
out
pusha
push
xor
sub
or
mov
fidivs
push
es
stos
mov
pop
add
vdivsd
fisttps
cltd
icebp
ret
sub
add
xor
sub
push
xor
lods
shll
or
push
shrb
icebp
add
xorl
cmp
mov
dec
pop
xor
stos
xchg
or
xor
inc
or
cmp
cmpsb
xor
mov
adc
sub
and
lret
and
xor
sub
movsb
in
ja
xor
pop
cwtl
test
mov
jecxz
shll
and
mov
mov
std
xor
fwait
or
mov
ds
xor
mov
xor
xor
xor
lods
gs
cmp
sub
jle
sub
add
pushf
add
mov
adc
xchg
xor
cld
testl
xor
sub
dec
push
pop
xor
dec
stos
ret
out
fimull
mov
mov
push
xor
sti
divb
add
lods
adcb
clc
rcr
test
xchg
int3
xchg
add
lea
jle
pop
out
push
test
int3
orl
xchg
add
adc
insb
mov
inc
mov
repz
sub
aas
pop
fisubl
dec
cmp
inc
mov
dec
into
pop
addr16
xor
jne
cmp
shlb
repz
sti
movsl
in
and
or
lods
je
in
aad
aad
adc
mov
xor
fsubrl
popf
out
or
jbe
scas
cs
push
and
push
cltd
jne
jbe
rolb
sbb
add
jno
aam
inc
pop
popa
out
inc
mov
arpl
mov
xchg
xchg
xor
pop
pop
dec
dec
add
jmp
fucomp
pop
push
mov
popf
loopne
cmc
jl
sub
fdivrs
ret
je
xor
cmp
inc
dec
mov
xor
ljmp
add
adc
pop
adc
sub
imul
xor
adc
bound
jne
int3
shr
mov
cmpb
xchg
or
divb
dec
scas
imul
fucomip
fdivrl
xor
jg
mov
push
jae
aam
xor
push
push
push
mov
ljmp
insb
xchg
imul
cwtl
xchg
push
sbb
inc
xor
out
inc
adc
ret
mov
sub
jg
or
push
loopne
shr
shlb
ret
repz
dec
jo
xor
test
popf
jnp
je
pop
dec
test
out
and
pop
jno
sub
ja
jns
mov
cwtl
jmp
pop
and
dec
add
das
repnz
test
cmp
inc
xor
pop
repz
test
sbb
xor
imul
sbb
inc
mov
xor
dec
adc
mov
xchg
xor
mov
pushf
xor
mov
mov
inc
idiv
pop
jnp
cmpsl
sbb
pop
xor
or
xor
jge
sbb
xor
xor
std
pushw
test
sub
test
xor
mov
xor
sub
and
jnp
dec
shrl
cmpsb
xor
ret
sub
pop
push
xchg
xor
mov
psubd
or
insl
xor
adc
insb
ror
ds
adc
fprem1
or
outsb
loop
pushf
xor
xor
jb
xor
pop
inc
and
dec
xchg
xor
sbb
das
mov
cmp
fiaddl
add
and
jnp
sbb
popf
pushl
mov
or
push
sub
cmpsb
ljmp
pop
mov
shll
pusha
std
ja
fcmovu
jp
push
cmp
dec
ljmp
and
cmp
mov
gs
out
test
scas
shlb
mov
popa
dec
mov
adc
enter
inc
mov
cmpsb
pusha
lret
and
icebp
xor
orl
daa
push
mov
adc
adc
aas
inc
xor
pop
and
xor
repnz
xor
sub
adc
in
mov
icebp
int3
or
mov
or
lock
sti
call
and
out
addr16
xchg
leave
scas
les
pop
add
xor
popa
mov
addl
mov
add
mov
xor
pop
pop
cld
lea
xorl
add
push
test
movsb
sahf
sbb
cmpsl
inc
les
push
sbb
scas
js
xchg
fstpl
dec
rorl
inc
mov
imul
xchg
cmc
xchg
icebp
xchg
ret
cld
adc
pop
or
and
push
imul
outsb
lock
pop
adcb
movsl
aam
xor
push
sub
xor
insl
stos
mov
lea
fidivrl
jns
fldcw
sysret
sub
aaa
cmp
movsl
imul
stc
icebp
adc
push
jns
add
ss
mov
cmp
or
xor
repz
xchg
xor
lret
imul
ret
dec
test
xor
xchg
adc
pop
cmpsb
mov
pop
adc
aaa
sbb
cmpsl
xor
push
ret
mov
add
into
mov
jnp
call
pop
xchg
outsl
xor
ds
ficoms
andb
ljmp
push
jne
adc
xchg
sbb
mov
jno
adc
adc
imul
push
xchg
mov
xor
stc
shll
sub
ret
andl
cmp
cmp
mov
jp
gs
xchg
or
xchg
pushf
inc
std
jne
xor
aam
push
or
cmpsb
cmp
xor
repz
sti
mov
mov
pop
pop
push
fstp
sub
sub
sbb
je
pop
push
sbb
xchg
xor
dec
mov
and
jg
sbb
inc
aam
loope
mov
out
xor
mov
xchg
stos
push
push
xor
ret
fs
push
popf
lods
jns
sti
adc
push
daa
pop
push
imul
xorb
jae
add
xor
es
adc
lret
jp
xlat
xchg
and
ds
cmp
dec
xor
or
sbb
xlat
popa
pop
xchg
loope
xor
test
push
jae
xlat
pop
lcall
cmp
mulb
inc
lret
jmp
imul
sbb
add
aam
cmp
mov
ss
fisttpll
xchg
xor
jno
cmpsb
mov
pushf
je
and
mov
outsb
pop
jbe
pop
cmpsl
fwait
jecxz
pop
sub
mov
clc
xor
and
xor
out
mov
popf
loop
bound
popa
cli
inc
movsl
sarb
into
sahf
psubq
mov
jge
shl
mov
wbinvd
sub
mov
stc
mov
in
push
hlt
adc
mov
mov
test
push
push
mov
jo
or
dec
shlb
mov
sbb
adc
testb
inc
leave
arpl
and
jbe
push
popa
mov
or
and
sbb
cmpsl
jp
push
fs
scas
call
clc
xor
add
add
mov
js
mov
aaa
adcl
out
lods
sub
sbb
test
cmc
cmc
xchg
sub
popa
dec
push
sbb
push
xor
pop
jle
stc
cmp
pop
insl
and
sub
and
lahf
aam
shlb
cmc
xor
mov
xchg
jp
jg
xor
adc
xor
pop
clc
sub
adc
cwtl
aaa
and
test
outsb
xor
xlat
sub
jb
xor
or
nop
fisubrl
jmp
das
push
lods
daa
insl
mov
iret
push
inc
or
sub
push
scas
xor
push
lods
sub
rclb
sub
repz
jb
xor
loope
outsb
popa
pop
mov
xlat
pop
sbb
rcl
mov
jo
cmp
xor
push
loopne
adc
rcrl
jns
sbb
xor
fsubrs
cli
subb
adc
xor
into
push
push
or
xchg
flds
cmp
popa
mov
jno
push
pop
ret
clc
lock
dec
or
icebp
nop
add
cmpsb
scas
xor
mov
add
outsl
cmp
je
shrb
pop
fisubrl
inc
lods
aas
data16
or
push
mov
inc
jge
push
sub
into
outsl
lods
dec
imul
mov
iret
mov
pop
jbe
frstor
lahf
pushf
cmp
cmp
dec
xor
xor
cmp
mov
loopne
pop
sbb
popf
sarl
imul
inc
cwtl
or
dec
push
xor
cmpsb
nop
xor
scas
stc
xor
iret
lods
shlb
mov
pop
jp
inc
mov
push
loope
add
cmc
xor
jle
xor
xor
xchg
aam
xchg
jecxz
sub
imul
cmp
add
inc
xchg
adc
fs
xchg
push
pop
xchg
push
orl
jae
cmp
sub
inc
add
mov
cli
push
test
emms
cltd
xor
pop
loope
jno
xor
mov
ljmp
inc
cmp
lret
xor
imul
adc
sub
adc
dec
xchg
dec
std
cmc
mov
xchg
nop
push
adc
movsl
out
cltd
imull
push
jge
scas
xor
cli
bound
jle
jae
xor
imul
pop
clc
or
mov
cmc
insl
xor
sbb
mov
call
or
js
aad
rolb
pop
mov
ds
sbb
arpl
cmpsb
xor
inc
xor
pop
push
and
fsub
jo
shll
push
mov
aam
mov
clc
push
in
lods
into
mov
fldenv
testl
loopne
sbb
bound
mov
pop
imul
pusha
xchg
sbbb
lds
adc
test
xor
sbb
imul
xchg
sub
mov
jno
imul
scas
push
sub
jb
mov
test
in
stos
and
push
lret
sub
call
add
arpl
xchg
lods
push
ljmp
push
cld
push
mov
addl
adc
or
pop
sbb
mov
jnp
jo
out
in
insb
xor
mov
mov
push
rorb
sub
negl
push
sarl
les
add
xchg
adc
and
sub
add
dec
loope
jns
out
pop
in
inc
adc
ret
imul
adc
add
add
lea
das
test
inc
xchg
mov
insl
cmp
sbb
shll
mov
clc
lds
xor
lret
xor
pop
movl
jmp
cmpb
bound
pop
cmpsb
popa
sub
mov
xor
add
push
xorb
push
popf
leave
cs
xor
xor
adc
into
mov
lock
sarb
fiaddl
xchg
or
xchg
xor
xchg
sub
ret
ljmp
pushf
xor
aam
push
loop
push
scas
pushf
pop
xor
repnz
add
dec
nop
imul
cli
in
sub
mov
jo
add
test
cwtl
add
xor
in
adc
push
fdiv
jne
mov
ja
icebp
ret
stos
imul
popf
iret
jge
xor
adc
jae
mov
xchg
inc
or
xor
jg
mov
bound
aaa
sbb
sub
add
testb
jo
sub
adc
ja
push
and
and
dec
xor
inc
enter
mov
cmp
outsb
sbb
shll
sub
cmp
pop
mov
jns
jmp
mov
icebp
mov
test
jbe
jge
xor
pop
inc
aas
icebp
mov
mov
inc
rclb
loop
scas
cmp
xorl
add
cwtl
je
bound
inc
mov
push
cs
xorl
pusha
and
and
cmp
cmc
hlt
pop
xor
xchg
outsb
adc
mov
push
daa
push
add
jae
adc
jbe
rolb
and
push
cmp
and
pop
fdiv
popf
add
in
mov
imul
xor
pop
out
out
xchg
jp
fcompl
adc
mov
imul
mov
std
add
xor
or
adc
xor
mov
scas
jmp
sbb
rolb
and
xchg
cmpsb
mov
sub
insl
mov
mov
push
testl
xchg
inc
mov
ja
pop
cmp
lods
mov
in
xor
sbb
test
bound
fnsave
cmp
sub
xchg
inc
icebp
out
xor
int3
jp
mov
adc
pop
ret
out
sbb
pop
mov
jnp
scas
xchg
adc
ret
cmp
cmpb
xor
jle
aad
aam
adc
pop
cmp
lock
imul
outsb
mov
push
and
ss
jmp
push
xlat
lret
add
sub
push
pusha
xor
in
push
test
aas
cmp
xor
pop
adc
out
xor
pop
add
pop
lea
popf
mov
jmp
outsb
jmp
sahf
daa
sub
inc
outsb
inc
ficoml
shll
mov
lahf
in
xchg
mov
xor
push
mov
xchg
xor
hlt
roll
xor
inc
fisubl
mov
std
mov
lea
and
fs
push
pusha
int
and
jmp
out
add
mov
pop
mov
xor
cld
lcall
mov
insb
push
sub
movsb
adc
jb
jo
sbb
and
addr16
add
scas
pop
pop
movsl
xchg
fimull
sub
roll
inc
shrl
pop
out
add
xchg
ficompl
push
xor
jecxz
daa
jbe
loop
jae
insl
iret
and
shrl
cmp
jge
and
mov
push
rorb
sbbb
and
dec
push
push
insl
push
dec
in
je
dec
fists
stc
push
pop
cmp
and
loope
cmp
xor
cli
dec
out
adc
xor
imul
cmp
xchg
mov
arpl
mov
adc
xchg
aaa
xchg
lock
mov
ret
arpl
xor
lods
jmp
stos
or
ficoms
sbb
rorl
pop
xchg
test
sbb
int
push
xchg
pop
mov
loope
xchg
movsb
sahf
push
adc
sub
lods
mov
mov
enter
jg
push
inc
sub
xchg
data16
pusha
ror
mov
and
or
cmp
and
js
hlt
push
pushf
xor
xchg
bound
jae
add
xor
xchg
jp
push
cmpsb
mov
mov
sub
stos
inc
test
mov
mov
jb
xor
aaa
sbb
adc
push
cmp
or
xchg
aaa
xor
push
lds
jo
cmpsb
addb
fnstenv
or
scas
hlt
sbb
sbb
xor
out
fwait
aas
das
push
cmpsb
xor
mov
adc
mov
add
mov
loop
jbe
xor
sub
pop
cmp
mov
cmpsb
mov
jnp
sub
jp
pop
cmp
aas
xor
pop
iret
inc
test
sbb
jle
loopne
imul
aam
fldt
add
mov
sub
sub
or
std
push
inc
dec
and
cmp
icebp
inc
xchg
jecxz
clc
scas
and
shl
adc
sub
xor
xchg
sarb
in
jmp
cmp
push
movl
xor
rolb
add
hlt
repz
xchg
scas
in
mov
pop
cltd
insl
icebp
jmp
jp
dec
and
adcb
or
out
jns
scas
gs
and
int3
dec
lods
fimuls
pop
insl
loop
imul
mov
inc
es
cmpl
rcll
xchg
js
xor
push
sbb
repnz
insl
in
cli
mov
xchg
xor
sbb
mov
mov
xor
mov
mov
popa
or
xor
mov
push
push
add
cli
adc
pop
js
cmp
xor
and
push
adc
add
push
enter
sbb
std
fadds
xor
add
and
jnp
add
push
xchg
inc
inc
mov
adc
mov
mov
sub
fcoml
cmp
jg
loopw
inc
out
dec
fmulp
int
and
mov
xchg
clc
push
stos
lods
pusha
adcl
xchg
cltd
subb
adc
adc
mov
cmp
rolb
int3
icebp
fdivp
and
dec
and
mov
int
push
data16
sbb
imull
inc
adc
pop
pop
testl
sub
jp
cli
push
sbb
stos
orb
sahf
bound
fwait
sbb
jp
mov
cld
mov
sarl
lea
cmp
mov
jecxz
sbb
in
push
jp
adc
cmpsl
or
mov
lcall
lret
iret
inc
cmp
std
or
add
xchg
popa
pop
jle
stc
jb
scas
lods
je
sbb
rcr
cmp
xor
lods
or
jb
nop
push
ss
aad
mov
adc
test
dec
push
mov
mov
insl
addl
xor
jmp
fisubl
sbb
push
inc
sbbb
xor
mov
sahf
xor
sahf
xor
push
stos
jne
subl
inc
jl
mov
mov
dec
or
xchg
xchg
cmp
inc
mov
sub
mov
adc
push
popa
sbb
or
call
mov
mov
mov
jns
or
xor
sbb
mov
pop
xor
adc
cmpsl
jb
push
push
xor
scas
ret
and
xor
clc
cmc
int3
push
push
sub
xor
inc
cmp
sbb
cs
add
rcrl
sub
cmpsl
cmp
arpl
in
jae
xchg
adc
add
xor
sub
fildll
jl
mov
push
call
xor
sti
jne
inc
mov
inc
xor
pop
outsl
xchg
mov
cmp
lahf
jo
cmp
icebp
push
out
inc
sbb
sub
into
dec
push
inc
daa
mov
xor
adc
icebp
pop
icebp
loope
adc
xor
scas
sbb
inc
pop
in
add
jge
scas
andb
xorl
popf
mov
jecxz
das
pop
jns
call
xor
icebp
adc
rclb
stos
or
cmpsb
popf
outsb
lock
xor
loop
fs
data16
out
cld
insl
or
xor
fisttpll
sbb
adc
jecxz
xchg
fcoml
pop
cmp
pushf
and
jecxz
jp
inc
fbstp
inc
adc
test
adc
and
mov
pop
andb
dec
sub
fs
jbe
push
pop
fisubrl
test
xor
mov
pop
xor
and
data16
xor
adc
mov
imul
icebp
stos
lahf
inc
and
shrw
loop
test
jge
mov
pop
xchg
xchg
sbb
jns
dec
pop
pop
jecxz
mov
lds
pop
mov
mov
add
les
jl
sub
test
dec
and
stc
popa
ret
fdivs
out
mov
adc
xor
sub
xor
dec
sub
sub
mov
inc
xor
adc
xor
xchg
icebp
mov
xor
ret
inc
xor
push
add
jmp
les
xchg
daa
mov
xor
xor
out
fwait
aad
dec
rcll
lret
call
mov
push
push
add
jne
mov
sti
push
sub
cltd
bound
adc
xor
clc
out
or
fwait
xchg
stc
cmp
inc
jo
shll
mov
pushf
adc
xchg
dec
mov
ds
cmpsb
xchg
cmpb
adc
xor
jbe
jle
hlt
int
scas
pop
ret
int
xor
and
outsb
je
xor
sbb
pop
jl
aam
mov
cmpsl
push
jb
sub
xchg
int
fisubrs
mov
ja
imul
cmp
jno
pop
push
outsb
pop
mov
xchg
push
lods
push
mov
xor
imul
scas
ds
out
push
inc
jmp
add
pop
push
inc
loopne
daa
xchg
xor
sub
push
adc
shrb
loop
inc
xchg
mov
xchg
mov
into
out
pop
mov
mov
xor
addr16
pop
mov
mov
aam
sub
imul
pusha
add
xchg
add
adc
ret
adc
pop
stos
cmpsl
or
and
repz
mov
rcrl
sub
xor
ret
jo
enter
mov
jbe
or
mov
xlat
mov
jle
fisubl
xchg
arpl
push
jmp
iret
stc
push
xor
xchg
mov
outsb
dec
lds
sbb
pop
adc
xchg
add
int3
cmp
outsb
xor
jnp
jne
and
int
lds
fwait
mov
rcrb
mov
jp
jmp
push
icebp
jne
fwait
or
xchg
mov
mov
pusha
push
jmp
adc
xor
push
jmp
xor
adc
mov
push
inc
xor
xor
arpl
push
cmp
mov
push
jp
dec
fdivl
add
hlt
push
insb
scas
addr16
sub
adc
inc
shll
in
or
and
clc
stos
fldt
mov
push
in
xor
ficomps
xchg
xor
das
leave
xchg
fldl
daa
int3
or
sahf
xor
adc
dec
mov
and
jne
jecxz
cmpsb
mov
mov
lds
add
movsb
test
imul
add
add
fsubl
or
dec
xor
cs
inc
out
xchg
lcall
ja
mov
xchg
adcl
test
inc
iret
in
ret
mov
adc
mov
xchg
sahf
aad
jle
jae
shrl
mov
or
clc
sub
mov
dec
test
adc
dec
mov
lret
leave
xor
xchg
lds
ljmp
gs
pop
or
push
inc
lret
pop
mov
clc
rcr
ror
sub
or
jnp
cmp
sub
jecxz
cwtl
push
fstps
xor
cmp
ja
hlt
xchg
out
lock
or
in
mov
adcl
das
mov
lods
pop
fistl
jbe
fisubrs
xor
aas
fistpll
clc
hlt
pushf
fwait
pop
and
mov
call
xor
sub
push
cmovnp
push
xchg
outsl
and
mov
aam
mov
test
or
mov
sub
cmp
cli
pop
loop
push
jmp
pop
pop
jns
lods
or
pop
dec
add
xor
adc
fdivr
mov
add
add
pop
xor
dec
jecxz
mov
dec
insb
jp
faddp
in
ja
cmc
loop
cmp
sub
daa
and
iret
xor
enter
out
pushf
or
inc
xchg
mov
xor
xchg
pop
out
xor
cmp
aam
xor
jne
pop
cmp
sbb
ret
test
mov
fistl
mov
stos
adc
arpl
push
mov
adc
mov
jne
nop
lds
fwait
push
aaa
test
xchg
pop
or
and
cmp
push
pop
xor
aam
sub
add
sahf
test
outsb
enter
inc
xchg
fstpl
rcrb
in
sbb
aam
sbb
push
adc
adc
fisubl
xor
jmp
mov
adc
dec
xor
in
or
lds
lret
cmpsl
xchg
aaa
push
nop
push
dec
push
xchg
push
xor
in
int
dec
cld
fnsave
jns
or
push
adc
iret
mov
or
xor
xchg
lahf
int3
dec
call
xor
add
xchg
lcall
mov
iret
jmp
repz
dec
inc
push
gs
cli
fnstsw
int3
and
sub
nop
movsl
xor
mov
pop
imul
in
sti
xchg
jae
jbe
pop
test
or
loopne
mov
inc
push
jg
mov
or
daa
adc
adc
in
imul
xor
es
ljmp
imul
push
mov
out
xchg
ret
inc
enter
adc
and
add
js
pop
icebp
pop
imul
in
test
pop
add
rclb
xor
cmpsl
jg
jmp
ret
into
pop
mov
pop
mov
pop
xor
xchg
cwtl
xorb
leave
xor
mov
xchg
cmp
notb
out
push
push
int
ret
xchg
fwait
cmp
sub
dec
adc
pop
test
and
repnz
xor
xor
sub
fstp
mov
daa
cmp
das
mov
adc
lock
cmp
loop
push
icebp
or
adc
jg
mov
cmc
xchg
push
out
outsb
out
mov
cltd
adc
int
xchg
mov
cmp
mov
or
stc
ja
push
xchg
xor
or
repnz
or
arpl
xor
aas
data16
jle
mov
je
cmpsl
lret
xor
add
push
jmp
insb
and
jns
xor
dec
into
outsl
sbb
push
xchg
shll
sub
cmp
imul
sarl
std
mov
adc
jp
loopne
iret
xor
push
in
lea
pop
add
mov
out
push
outsl
pop
sbb
popf
push
jno
and
cmp
xor
mov
icebp
movsl
mov
xchg
pop
xor
mov
adc
aad
xor
push
leave
sti
xchg
mov
mov
push
dec
xor
ret
xor
cmp
adc
dec
push
and
mov
loop
xor
pop
jl
jo
cld
xor
stos
popa
icebp
mov
lods
and
xchg
mov
mov
mov
je
or
push
divl
jnp
mov
add
adc
jbe
divb
test
xor
or
stos
pop
int
out
lods
mov
rcrb
inc
test
xor
cmpsb
dec
imulb
fstl
push
add
ss
lea
xor
mov
mov
stc
adc
or
hlt
xor
bound
je
pop
push
cmpsb
cmp
mov
and
push
push
xor
into
xor
push
inc
jbe
mov
nop
out
cmp
outsb
xor
scas
add
xchg
mov
or
lea
add
into
push
shr
adc
imul
movl
es
loope
outsl
repz
push
sti
inc
movl
scas
push
aad
roll
mov
push
daa
cwtl
or
and
or
sub
aam
xor
adc
sub
std
xor
dec
push
and
adc
cmp
or
jae
ret
adc
mov
sub
sbb
cmc
arpl
push
fs
in
fsubp
and
or
outsb
xor
inc
xchg
repnz
mov
shl
xor
or
cs
ss
xchg
nop
dec
adc
lods
push
pop
and
in
jne
dec
push
or
and
add
xchg
fmull
sbb
and
push
repnz
add
xchg
xor
xchg
pusha
imul
shll
xor
or
hlt
test
into
push
push
mov
aad
mov
xor
adc
jecxz
clc
scas
pop
in
fistpl
mov
mov
or
xor
mov
lret
push
aas
inc
shlb
sbb
xor
sbb
mov
dec
sbb
jge
test
shlb
pushf
ss
rclb
icebp
call
push
sahf
aam
pop
push
mov
outsl
pop
jbe
inc
aad
mov
in
dec
jb
lcall
pop
imul
add
push
adc
dec
es
cmc
sub
les
out
pop
shll
xchg
in
movsl
aad
adc
mov
sbb
dec
xchg
cmp
cmpsb
pop
clc
jmp
mov
in
cmp
bound
addb
xor
add
sub
jns
push
js
xchg
ss
dec
in
adc
xor
pushl
fists
daa
xlat
mov
into
sub
mov
push
push
cmpsl
jb
je
adc
loop
sbb
test
mulb
icebp
out
fistpll
push
add
out
repnz
cmpsb
data16
test
cmp
insb
in
push
roll
mov
inc
xor
lea
xor
jg
jno
cmp
xchg
repz
cmpsb
ljmp
jg
fdivl
jns
mov
int3
cmpsl
clc
cmp
adc
testl
xchg
mov
insb
aad
lea
mov
and
cli
cmp
xor
xor
push
mov
xchg
jne
arpl
xor
sub
jns
movsb
push
mov
ret
push
insl
addl
adc
xor
xchg
sbb
xor
pop
mov
push
sbb
adc
and
in
xor
or
adc
inc
cltd
in
and
orl
inc
xchg
in
xor
inc
mov
adc
loop
adc
cmpsb
xor
stc
mov
push
jg
xor
cmp
sub
jb
pop
in
adc
dec
test
adc
add
and
ja
daa
or
xchg
xor
sub
shl
notb
bound
dec
fistps
add
cwtl
jo
xor
push
xor
pushf
xchg
dec
scas
xchg
fdivs
xor
lea
mov
sbb
adc
ror
add
xchg
fistpll
jg
mov
xor
push
sub
adc
jne
ss
xor
mov
imul
shlb
pop
cmp
cmc
movl
jecxz
pop
mov
and
xchg
xor
jns
and
ficompl
jmp
cmpsl
mov
inc
cmp
or
stc
adc
jae
adc
add
xor
fdivs
sub
and
jp
inc
mov
xor
xor
sub
pop
or
leave
fnclex
mov
sub
jb
pop
xor
movsl
jo
adc
xor
inc
adc
sub
sub
faddp
adc
dec
jle
fs
sub
iret
push
sub
repz
push
rcrl
cmpsl
rcrb
loop
jno
test
pop
fiadds
fwait
rclb
inc
pusha
sbb
add
ds
jo
sub
pushf
xor
adc
aam
loop
inc
lods
shlb
test
push
test
or
mov
xor
scas
jbe
in
out
and
mov
int
pop
jl
cs
ficoml
sub
xor
popf
cmp
scas
icebp
inc
enter
sub
cmp
lret
leave
xchg
aas
inc
lock
xor
xchg
pop
and
fists
je
add
and
addr16
sub
hlt
ret
mov
out
xor
divl
jo
dec
sti
xor
out
cld
cmp
in
xor
jl
idivl
lods
xchg
int
or
mov
mov
xchg
push
jg
lret
fstps
and
sub
mov
mov
xor
mov
xchg
jb
adc
out
push
jmp
xor
and
shrb
lcall
dec
inc
sbb
cmp
mov
test
jbe
sbb
pop
jle
rol
adc
mov
iret
in
cltd
xor
loop
jmp
rcr
jo
or
bound
mov
push
jb
xor
call
je
sub
xchg
popf
std
xchg
add
xor
iret
xchg
xchg
xchg
mov
dec
fcmovb
je
xor
mov
pop
cmp
out
test
arpl
xor
fcoml
dec
jmp
xor
mov
xchg
aad
rorl
inc
jo
bound
sub
pop
cli
das
mov
fdivs
add
or
mov
stos
sbb
add
vmovmskps
lods
pop
xchg
inc
ljmp
arpl
outsl
cmp
in
xor
cmp
push
inc
in
sbb
out
lret
loopne
sti
pop
add
xchg
xor
lret
mov
mov
out
xor
xchg
jl
mov
mov
gs
lret
inc
xor
jmp
pop
fs
aam
xor
int3
pushf
repnz
sti
xor
inc
stos
sbb
xor
fdivrp
or
test
mov
mov
xor
jns
xor
lea
int
push
test
ret
shlb
mov
sbb
cmpsl
push
inc
scas
into
es
test
inc
out
iret
test
je
jp
jg
xchg
pop
push
int3
mov
aam
mov
and
xor
xor
cmp
nop
push
mov
ja
add
iret
scas
ret
cli
xor
out
mov
negl
push
jne
or
js
mov
idiv
add
mov
fadds
mov
xor
mov
xchg
cltd
xor
stos
cwtl
out
push
xor
int3
push
xor
loop
xor
adc
jb
or
jle
xor
bound
pop
mov
js
data16
push
daa
out
or
loop
jne
mov
inc
bnd
xor
jle
mov
xor
out
dec
xor
movsb
daa
jno
loope
and
push
lods
xchg
out
lcall
cmp
jo
sbb
xchg
mov
xchg
in
mov
pop
lock
mov
cwtl
aad
push
aam
jp
mov
xor
pusha
sub
test
mov
jecxz
ds
insl
cli
fcomps
and
out
add
dec
push
loopne
sub
and
pop
ja
push
test
sbb
mov
inc
jo
pop
sbb
jns
xchg
scas
test
mov
cwtl
dec
dec
lret
movsl
imulb
imul
xchg
and
roll
and
sub
out
rorl
sub
sbb
dec
jg
add
push
lods
int3
dec
cmpl
rcrb
out
inc
push
addr16
sbb
jge
or
mov
xor
test
clc
pop
ret
es
in
or
mov
xchg
add
imul
cmp
shlb
or
pusha
lods
adc
ret
dec
mov
cld
xor
stc
sbb
int
xor
pop
jecxz
insl
mov
movsl
cmp
sub
xchg
fiadds
push
xor
push
xchg
scas
rorl
lods
xor
hlt
sti
jns
xor
data16
shl
cmp
add
pop
lods
pusha
adc
scas
adc
push
int
sub
adc
pushf
fbld
cmc
das
jns
pop
std
xor
or
addr16
aam
in
jmp
icebp
dec
xor
mov
loop
inc
xchg
hlt
jo
jo
test
lods
fnsave
js
aaa
mov
xor
adc
xor
orl
arpl
in
cwtl
jcxz
push
xchg
out
push
xchg
sarb
xor
mov
inc
scas
sub
cld
inc
xor
addr16
pop
mov
xor
cmp
sti
out
imul
push
cmp
or
outsl
cmp
xor
push
fstp
lock
into
sub
push
test
lea
fisttps
sub
adcb
mov
cmp
cli
sarl
inc
xchg
xor
hlt
pop
sbb
mov
cmp
dec
add
mov
dec
lcall
scas
push
jle
inc
xor
jecxz
or
sub
cmp
popf
mov
adc
xor
jno
ljmp
aam
xor
xchg
dec
adc
fwait
xor
data16
aas
sbb
mov
repz
pop
xor
dec
cltd
dec
mov
insl
sarb
push
dec
iret
lret
push
push
ljmp
stos
pop
adc
scas
lahf
xor
or
lods
stc
sbb
jb
jne
xchg
xor
dec
enter
push
xor
or
mov
sub
inc
xor
pop
jbe
mov
stos
cmp
push
inc
cmp
int3
sbb
scas
xchg
xor
inc
mov
sbb
sub
push
push
cli
mov
loopne
mov
pop
push
jae
loop
cs
in
xor
enter
cmpsl
sub
xor
aaa
pop
push
cli
xchg
out
or
push
lods
mov
sub
or
loope
xor
aam
xchg
xor
push
dec
rorb
mov
adc
add
fdivrp
xchg
pop
xor
pop
repnz
rorl
lods
adc
or
push
pop
xor
lret
jecxz
fdivl
movsb
xor
rorl
mov
xchg
inc
mov
aad
fimull
fbld
idiv
aad
shl
push
inc
mov
sub
testl
pop
loope
insl
mov
pop
sub
clc
xchg
mov
ds
cmp
mov
pusha
lret
or
aaa
jbe
mul
movsb
jo
push
xor
fwait
sbb
pop
xchg
mov
cwtl
loop
sub
mov
fdivl
pop
sti
jo
push
movsb
xchg
sbb
loopne
inc
fdivl
shlb
scas
test
orl
xchg
mov
jno
mov
xor
cmp
xor
mull
xchg
mov
pop
dec
push
fnstsw
rorl
aam
mov
dec
mov
pop
cmp
stc
adc
lock
jnp
mov
or
fistpl
push
sub
mov
mov
xor
std
addl
push
cmp
sub
sub
in
or
cmpsb
jp
xor
mov
add
pop
rolb
push
mov
xchg
push
aas
mov
xor
adc
imul
mov
xor
pusha
insl
popa
int
mov
xor
push
or
xor
dec
pop
mov
sbb
nop
inc
cs
inc
mov
shll
fdivl
test
pop
xchg
imul
mov
push
mov
or
pop
call
addr16
int3
fisubrl
or
leave
xor
ret
mov
mov
jecxz
filds
ja
mov
xchg
mov
xor
xchg
adc
dec
bound
movsb
inc
lcall
add
daa
and
cltd
push
js
outsb
out
push
gs
push
sub
popf
out
pop
and
sbb
cmp
cmp
fs
sbb
pop
push
mov
mov
jb
cmpsb
bound
dec
loop
lcall
cmp
call
xor
mov
adc
pop
insl
sub
add
addr16
jg
adc
outsb
popf
or
push
jp
enter
push
mov
xchg
adc
xor
test
cmp
hlt
mov
push
inc
insb
xor
jne
jg
outsl
fists
into
aam
sbb
hlt
jae
daa
ffreep
push
out
sbb
xchg
shrl
das
int3
pop
or
xor
loop
jp,pt
sub
jmp
pop
lock
insb
call
push
test
lahf
xor
jbe
inc
mov
xor
sbb
adc
cmp
lcall
arpl
aaa
mov
je
mov
xor
xor
pop
mov
xchg
add
fdivs
or
aas
shr
inc
sbb
icebp
lock
adc
popf
xorl
and
xchg
shl
test
scas
lret
sahf
sbb
cmp
xchg
mov
cltd
loopne
mov
fadd
xor
movsl
jbe
pop
fnstenv
xor
sarb
popf
jecxz
or
xchg
daa
xchg
dec
cwtl
or
fs
es
lock
cmp
mov
rolb
sub
outsb
fildl
adc
xchg
or
or
adc
mov
mov
lds
out
sub
mov
cmp
xchg
or
xchg
push
push
push
mov
cmp
or
push
xor
movsl
fcoms
ljmp
es
cli
xor
and
mov
aad
xor
imul
aam
daa
mov
fnstcw
test
rol
jns
orl
inc
popa
xor
inc
push
push
sarb
insb
push
add
je
inc
push
push
sbbl
stc
fisttpll
pop
xor
mov
push
scas
jbe
pop
mov
stos
or
stos
sub
sbb
test
jae
imul
pop
enter
adc
les
cltd
sbb
mov
add
inc
scas
xor
mov
or
pop
rcll
sbb
mov
int
loopne
scas
sub
mov
jbe
pop
ret
ret
inc
adc
out
lods
push
xor
or
rcll
and
or
clc
sbb
ret
in
cmpsl
scas
in
es
aaa
mov
pop
leave
push
push
jnp
sub
pop
adc
xchg
jecxz
std
mov
dec
bound
add
sub
orl
push
ljmp
cmp
mov
test
xorb
dec
cmp
pop
lods
add
addb
movsl
add
jnp
in
mov
jne
bound
imul
xor
ja
xchg
mov
insl
jo
pop
imul
test
je
dec
in
inc
arpl
xor
out
aam
xor
or
stos
jno
sbb
loop
dec
pop
test
mov
mov
imul
cmp
and
xlat
imul
ret
push
sahf
pop
xor
dec
jae
pop
cmp
push
xor
nop
push
mov
jbe
rclb
stos
pop
xor
sbb
dec
add
sub
xor
sbb
repz
xchg
mov
or
aaa
arpl
and
in
insl
xor
push
adc
add
mov
or
xor
xchg
inc
xor
cmp
call
outsb
adc
fwait
xor
pop
in
fiadds
iret
pop
ja
dec
sti
xor
add
pusha
adc
jg
or
in
cmp
mov
adc
mov
mov
fsts
xchg
lods
or
rcll
jge
mov
ret
outsb
jg
out
test
ja
adc
mov
lahf
cmpsb
sbb
mov
outsb
pop
cmp
dec
inc
cmp
imul
test
fisubs
fdivrs
jg
out
push
clc
mov
sbb
cmpsl
scas
icebp
roll
mov
mov
js
or
out
mov
mov
jnp
sahf
sbb
mov
jno
inc
ret
add
push
testb
adc
cld
in
or
xor
fistps
fdivp
or
dec
sbb
mov
cmp
and
or
adc
pop
xchg
push
xor
insl
xchg
out
scas
shll
xor
loopne
push
xor
xchg
cltd
ljmp
push
dec
adc
mov
aam
mov
punpckhwd
daa
sbb
mov
insb
adc
jmp
int
sub
or
fmull
insb
sub
pop
xor
cs
imul
in
xor
fs
inc
mov
mov
jns
enter
mov
sbb
xor
dec
dec
not
pop
fbstp
into
mov
mov
push
aad
imul
adc
dec
dec
fnsave
arpl
xlat
adc
mov
clc
xor
inc
dec
leave
test
loopne
xchg
loope
mov
adc
xchg
sbb
fistps
mov
xor
jl
out
add
mov
push
outsb
in
mov
ja
repz
mov
jp
xor
add
mov
sahf
pop
lods
xchg
push
pop
push
adc
cmp
xchg
fdiv
xor
sahf
sub
xor
lret
inc
xor
or
mov
jne
pop
xor
stos
lret
daa
xor
popa
dec
dec
cli
sti
add
cwtl
cmp
in
mov
jg
js
inc
shll
or
hlt
sti
es
xchg
xor
or
rcll
pushf
test
mov
jecxz
sbb
pop
xchg
adc
xchg
leave
outsl
filds
sbb
and
mov
iret
int3
mov
xor
divb
cmp
mov
cmp
popa
mov
xor
xchg
xor
dec
dec
nop
orl
pop
aad
mul
or
jmp
or
xor
mov
pop
fisubs
fbld
cld
fstl
out
push
jo
in
inc
jmp
xchg
lods
daa
mov
cmp
pushf
mov
cmc
xor
cmpsb
push
mov
pop
pop
fstpl
lcall
mov
dec
or
sbb
mov
daa
adc
cmpsb
mov
xor
push
cmc
lea
push
daa
roll
sbb
adc
xor
mov
and
mov
push
jp
rorb
ds
pop
mov
dec
xor
cmc
mov
movsl
adc
mov
and
sub
clc
aad
ja
imul
cmc
jne
shrl
mov
mov
mov
xchg
inc
rorl
or
cmp
xchg
push
movsb
push
les
stos
xor
pop
pop
lret
sub
inc
mov
dec
rorb
fcoms
cwtl
pop
hlt
enter
addr16
xor
loope
test
imul
cmpsl
dec
mov
mov
or
or
cmp
sub
popa
daa
test
cmp
inc
and
and
fwait
mov
ss
xor
pop
stc
and
mov
xor
cmc
sub
adc
mov
aas
mov
jo
in
rcrb
jl
dec
push
in
lods
stos
xor
mov
pop
sbb
add
xor
or
lret
push
jg
rcrl
mov
ljmp
adc
sbb
adc
lcall
pop
sti
pop
or
push
pop
cmp
adc
inc
xor
rorb
push
or
repz
xchg
or
xor
scas
xor
sub
adc
dec
fmull
jnp
sbbb
ficomps
or
or
sbb
repz
xor
or
mov
sbb
fwait
out
xchg
mov
mov
xchg
mulb
inc
sub
cmpsb
jecxz
push
daa
scas
xor
cmp
sub
jno
xor
dec
or
inc
test
cli
xor
shll
or
icebp
mov
or
aad
sub
inc
push
xor
sti
test
xor
aad
rclb
fwait
sbb
mov
dec
out
pop
out
or
rclb
push
xor
sbbl
mov
and
int
add
cmpb
inc
rorl
sbb
or
jge
mov
mov
push
adc
add
jb
dec
fistpl
pushf
push
in
xchg
push
fldcw
xor
fsubrs
add
xchg
and
lds
push
test
push
mov
outsl
js
fwait
mov
xor
aam
push
xchg
xchg
in
push
inc
xlat
xor
adc
adc
lret
pop
jbe
stos
mov
je
xchg
out
iret
push
push
jnp
adc
xor
in
mov
bound
aad
mov
xor
mov
loop
push
aam
fists
mov
outsb
xor
dec
sub
and
in
divb
fucomip
push
add
pop
mov
xor
push
xchg
lahf
pushf
jne
rol
test
js
insb
push
mov
or
xor
cmp
jle
push
pop
xorl
sbb
push
ret
xor
insb
sub
idivb
ja
loope
lea
jnp
add
hlt
xor
imul
xor
insb
xchg
adc
testl
xor
dec
sub
ja
into
push
ffree
mov
lahf
push
and
aaa
cmp
push
test
push
adc
cmpsl
fsubr
sub
ljmp
rclb
loop
and
lahf
lret
inc
jns
add
pop
and
or
xlat
adc
push
xor
mov
out
scas
jmp
xor
sbb
pop
xor
sub
idivb
xchg
push
scas
sub
rcll
out
or
cmp
test
icebp
iret
push
pop
lock
mov
cmpsb
rorb
sub
sarl
in
popf
inc
push
cltd
jo
mov
and
xor
cld
push
xor
lret
fstl
movsb
or
sub
inc
inc
imul
iret
orl
or
repz
out
push
lahf
xor
xchg
cmpsl
adc
add
mov
and
andl
xchg
adc
add
shlb
imul
stos
or
into
xor
and
pop
sub
or
xor
xchg
pop
outsb
in
in
insl
insb
xor
dec
inc
or
ds
xor
cmpsb
xchg
mov
scas
shlb
cld
sub
fs
xor
add
subb
mov
pop
xor
lods
push
cmp
mov
sub
mov
pusha
lcall
dec
mov
mov
push
xor
xchg
dec
out
xor
int3
push
data16
push
decb
and
lds
cmp
cmp
icebp
xor
or
repnz
mov
xchg
inc
xchg
xor
icebp
mov
jne
das
shll
xlat
xchg
cmp
out
mov
xor
adc
inc
inc
out
shll
sub
xor
rol
mov
mov
jp
xor
fiaddl
jmp
or
sbb
fwait
mov
cmc
sub
mov
xor
gs
movsb
dec
xor
dec
lret
cs
ja
in
mov
mov
ds
xor
jle
push
xor
sbb
icebp
in
fidivrs
call
adc
leavew
cmp
test
mov
fwait
repnz
popf
out
cmpsl
daa
in
adc
hlt
xchg
stos
push
inc
dec
outsb
xor
cltd
pop
sub
jae
xor
mov
cmp
add
dec
loop
sub
jmp
imul
xor
int3
aaa
mov
xlat
sbb
cmp
test
push
mov
aaa
mov
fs
hlt
je
mov
xchg
xor
xor
cmp
imul
les
jl
fs
xor
shrb
aad
xchg
out
jno
out
and
inc
add
enter
sbb
mov
test
push
iret
sub
or
mov
xchg
or
sub
xor
and
int
pop
xor
inc
mov
cmp
mov
mov
xor
sar
sbb
xchg
xor
idiv
aas
into
pusha
mov
cmp
stos
std
jge
mov
adc
adc
sbb
cmp
pop
gs
fimuls
adc
orl
sub
inc
push
push
xlat
and
div
sub
aas
jo
mov
sbb
sub
popa
xor
xchg
cmp
or
push
jb
xchg
aas
pop
push
pop
pop
mov
pushf
dec
inc
icebp
cmp
mov
out
xchg
or
lock
mov
ret
fstpt
sub
nop
and
push
stos
mov
cmc
bound
pop
sar
mov
adc
push
xor
pop
negl
mov
jno
int
xchg
xchg
sub
fidivl
jb
pop
mov
sub
imul
mov
out
bound
xor
cmp
push
inc
jns
push
testb
xor
push
sbb
xor
out
lea
mov
hlt
addr16
cmp
xor
adc
xchg
pop
xor
js
xor
push
or
std
ret
mov
loopne
movsl
rcll
xor
sub
mov
xor
mov
stc
add
mov
pop
les
hlt
pop
test
xor
ret
decb
in
arpl
sti
mov
xor
mov
rorl
in
or
popf
test
pop
test
dec
rcrb
xor
int3
stc
mov
xor
cltd
les
mov
adc
dec
push
mov
das
repz
cmp
push
xor
adc
loopne
pop
or
xchg
mov
xor
xchg
sub
and
in
aad
xor
ljmp
sbb
xchg
in
rcr
xchg
ds
sbb
add
sbb
ljmp
jae
sub
adc
sbb
or
xor
fildl
outsb
cmc
addr16
aam
sbb
orb
sbb
lcall
sub
xor
daa
mov
fidivs
in
jl
loope
movsl
lcall
sbbl
call
aam
sarb
scas
add
sub
pop
or
or
jge
shl
cmp
fucomp
clc
push
mov
movsb
inc
or
xchg
mov
mov
jecxz
push
jnp
int3
loopne
or
insb
mov
jmp
xchg
mov
fsubrl
lea
push
xor
inc
push
gs
int3
cmp
jle
pushf
xor
mov
icebp
stc
imul
arpl
cmp
pop
xor
cmp
imul
dec
cmc
scas
adc
scas
cmp
sti
pushf
sbb
lea
xchg
scas
clc
mov
sbb
stc
in
sbb
xchg
push
stos
mov
cmpsb
sub
pop
push
insl
sbb
add
loope
xchg
jne
shrl
jmp
sbb
je
xor
add
shl
sarb
pop
xor
icebp
xor
sub
jbe
mov
inc
adc
fidivs
push
or
das
lods
ljmp
sub
jg
pop
gs
dec
ds
inc
push
data16
lock
cmpsl
xor
cmpsb
repnz
clc
xor
aaa
mov
pop
stc
cmp
xor
dec
fistpll
mov
test
test
out
stos
or
clc
mov
in
xor
loop
cmc
or
sub
xchg
push
test
adc
xchg
xor
xor
add
lods
xor
sti
cmpsl
mov
push
insb
fwait
cmp
pop
or
icebp
push
mov
movsb
js
pop
mov
add
push
into
addr16
dec
iret
outsl
cmp
mov
in
in
stc
or
xor
mov
ja
bound
rorl
pop
or
orl
sub
scas
and
aam
cwtl
jb
mull
and
rcll
jae
fmul
pop
cmpsl
clc
jp
scas
lods
dec
inc
or
fbstp
in
cmpsl
stc
and
mov
pop
inc
sub
sub
shll
sub
pusha
int3
stos
xor
xor
arpl
and
ret
cmp
xchg
inc
aaa
and
push
iret
gs
add
pop
pop
out
xor
shr
shll
xchg
pop
popf
dec
sbb
and
cli
jecxz
xor
push
pop
es
pop
sbb
and
add
arpl
push
repz
pushw
rcll
cwtl
add
repnz
or
lret
in
bound
mov
fsub
add
adc
xchg
inc
dec
fmull
andb
pop
xor
inc
push
nop
xor
popf
push
movb
outsb
cwtl
or
sbb
decl
push
fiaddl
sbb
ja
bound
mov
sbb
push
je
pop
push
xchg
das
jl
bound
inc
xor
shl
fsubl
ss
pop
leave
xor
or
icebp
inc
popl
mov
xor
add
int
mov
xor
iret
cwtl
shrl
in
shlb
testb
out
xor
adc
loop
data16
andb
mov
sar
sub
inc
inc
mov
mov
imul
adc
repz
lods
leave
gs
in
xchg
add
adc
ficomps
xor
nop
addr16
jmp
ffreep
xor
jae
stos
cltd
pop
arpl
lds
push
divl
test
daa
jae
cli
add
xor
push
neg
mov
shl
mov
sti
clc
xor
adc
lret
xor
jge
fistpll
cli
pop
fwait
add
xor
repnz
dec
fdivr
sub
int
jae
mov
pop
inc
dec
aad
adc
into
cmp
in
cmp
and
rolb
sub
xor
pop
rcr
mov
leave
xlat
xchg
mov
call
fists
jle
pusha
and
pop
or
sbb
popf
cld
aaa
les
js
aas
push
mov
lahf
and
lds
pop
jg
adc
mov
push
xchg
sbb
mov
mov
inc
cld
add
xchg
mov
mov
cmpsb
stos
lldt
leave
test
push
xchg
mov
in
aad
pop
add
mov
int
subl
mov
out
repz
xor
sub
jmp
lock
adc
andb
sarl
jmp
mov
fcoml
xchg
shlb
outsb
out
stos
in
rolb
jo
sbb
insb
mov
das
out
ljmp
rorl
lret
push
mov
mov
cmp
xor
lea
out
mov
push
push
divb
sbb
push
push
shrl
sbb
xchg
cmp
shrb
scas
push
jp
add
call
pop
push
mov
loop
xor
movsl
jae
adc
jnp
jo
pop
decb
xlat
xor
jge
dec
xchg
add
push
hlt
loop
xchg
or
inc
je
movsb
xor
xchg
test
lock
lcall
xor
or
and
loope
test
insl
xor
push
inc
lods
jne
jns
xor
pop
imul
scas
sbb
popf
sbb
cmp
hlt
incl
push
xor
test
xor
and
stos
ret
xor
jmp
test
cmp
dec
jmp
pop
adcb
lea
stos
sub
loopnew
test
clc
aaa
mov
out
lcall
mov
jns
je
and
xor
sbb
xlat
jo
push
inc
sbb
stos
xor
mov
xchg
iret
pusha
mov
dec
test
sbb
mov
mov
repz
mov
pop
xor
movsb
xor
pop
add
lds
mov
and
popa
xor
psubusb
shlb
fisttps
pop
or
fisttpl
out
sub
or
pop
sub
mov
aaa
xor
mov
xor
xor
in
pop
fsubrl
mov
je
outsb
push
cmpsb
push
data16
pop
fsts
scas
jb
and
push
stc
sbb
push
adc
pushf
jae
addr16
sbb
add
inc
ret
push
scas
lock
add
xor
push
or
fistps
inc
pop
mov
jns
loope
and
cmp
ds
scas
xor
sub
cmp
inc
fcoms
jge
lds
xor
fcoml
and
inc
stos
inc
jle
pop
out
xor
outsb
jno
add
testl
sahf
and
inc
ljmp
add
das
pop
int
pushl
test
or
bound
insl
cmp
jle
ret
out
dec
xor
pop
xor
fsubl
jo
push
mov
mov
xor
sub
sub
jle
mov
jno
and
int
xorb
add
xchg
or
loop
push
ret
movsl
sbb
inc
xor
mov
cmp
fwait
xchg
das
clc
pusha
lods
sub
xor
addr16
push
xor
stos
ret
push
fs
push
jae
cmp
adc
push
lcall
xchg
xchg
xchg
push
mov
lret
stc
imul
sbb
bound
sbb
push
or
xor
mov
xor
or
pop
loope
imul
lods
cs
inc
xor
dec
decl
stos
loope
lret
pop
lods
into
xor
arpl
popa
out
lds
int3
aad
lret
mov
cs
lock
repnz
int3
roll
xchg
stc
dec
pop
addr16
into
mov
and
jb
or
test
lods
xchg
mov
push
push
imul
cmpsb
shlb
rorl
mull
data16
dec
cmc
and
je
imul
movsl
mov
pop
popa
and
lods
push
push
jle
sub
or
scas
lock
outsb
jne
jp
xchg
xchg
push
add
pushf
out
dec
xor
cmpsb
add
imul
sbb
jmp
push
scas
mov
cmp
out
movsb
sbb
jo
push
adc
cmpb
ja
and
mov
shlb
or
cmc
and
inc
sbb
lock
repnz
add
xor
mov
inc
in
popf
call
jmp
inc
stos
sub
mov
das
cmp
or
xor
idivb
out
cmp
xor
movsl
cmpsl
push
cmp
lcall
push
test
lahf
ja
rcrb
dec
and
xor
in
lcall
cs
lods
repz
movsl
loopne
outsb
jbe
adc
dec
jp
les
or
inc
dec
notrack
and
ret
bound
popa
ljmp
sub
outsl
mov
jg
or
cmc
int3
cmp
mov
sbb
hlt
xor
push
pop
inc
jbe
xor
xor
movsl
sbb
pop
mov
adc
ja
or
sbb
and
mov
popa
cld
push
xor
inc
stos
sbb
xchg
sub
loop
inc
enter
push
shll
pop
leave
xlat
outsb
aaa
push
loop
ret
push
add
stos
mov
xchg
xor
push
jae
mov
and
out
int3
iret
mov
ret
ss
arpl
or
pop
ja
xorl
sarl
jg
add
movsl
push
ds
stos
xchg
xor
xchg
inc
addb
scas
push
cmpsl
dec
inc
call
sub
xor
stos
cld
orb
adc
dec
jne
xor
jo
popa
imul
cmp
add
nop
mov
and
pop
xlat
sub
xor
mulb
jmp
xchg
dec
cmp
adc
xchg
js
loopne
imul
rcll
cli
dec
lds
dec
sub
shlb
into
clc
shl
outsb
xor
scas
test
nop
jno
pop
lahf
xor
sbb
adc
xor
outsb
xor
mov
jmp
or
push
hlt
or
jo
add
stos
pop
adc
sbb
adc
pop
or
push
sbb
pop
xor
in
lds
xor
sbb
and
pop
adc
push
mov
dec
or
lods
xor
jmp
xor
lds
scas
sub
insb
or
xchg
pushf
aaa
ja
xor
dec
add
jecxz
cwtl
xchg
xor
scas
sbb
les
push
outsl
cmp
popf
decb
sub
hlt
xchg
ficompl
lods
divl
mov
ret
jg
xor
inc
cmp
adc
ret
inc
nop
inc
push
sbb
jb
imul
fidivs
and
cmpsb
in
ljmp
inc
insl
lret
stos
iret
int3
xor
in
scas
testb
cmp
jb
xchg
pushf
or
push
mov
sub
cmp
shll
stos
adcl
test
jns
pop
sahf
lock
inc
xor
jbe
cmpsb
xor
test
call
pop
inc
daa
subl
in
jnp
mov
sbb
jb
dec
mov
rolb
xor
test
int3
in
fisubrl
xchg
xor
adc
js
mov
and
lcall
adc
ljmp
out
in
imul
xchg
jae
jp
and
inc
test
fildl
cmpsb
and
popf
repz
add
pop
lahf
mov
je
or
xor
xchg
sbb
xor
jge
push
push
mov
clc
ret
popf
arpl
xchg
xor
lock
stos
pop
add
cmp
adc
jo
pop
sub
jle
roll
inc
es
pop
xor
dec
mov
xor
cmpsb
sub
int3
mov
outsl
into
jl
sub
jecxz
scas
insb
mov
xor
inc
test
sbbb
daa
in
push
rclb
push
pushf
sbbl
push
sub
jmp
mov
inc
or
and
cmp
fists
push
inc
add
in
pop
jb
arpl
adc
xor
insl
xor
sub
mov
das
imul
mov
jno
rcrb
cmp
ret
xchg
ret
bnd
loop
dec
pop
cmc
movsl
xor
popf
js
nop
xor
mov
jae
jns
jmp
cld
or
rorl
lret
xor
cltd
mov
xchg
mov
in
mov
xchg
lods
push
xor
add
ljmp
outsb
adc
push
xchg
mov
popf
out
jecxz
stos
xchg
push
pop
xchg
mov
pop
sbb
pop
sarl
andl
mov
andl
adc
sub
push
pop
out
cmp
inc
xor
inc
sbb
ja
inc
push
pusha
xor
sbb
rcrb
and
repnz
ds
and
es
xorl
push
test
push
lock
xor
xchg
pusha
xrelease
in
frstpm(287
rolb
adc
push
jecxz
and
lret
dec
mov
repnz
dec
pushf
add
insb
cli
push
jp
add
pop
repnz
push
jb
sub
mov
fisubs
xchg
sbb
pushf
mov
and
popf
xor
pop
push
mov
and
jle
sbbb
fistps
fld
out
xor
shll
push
mov
ret
add
push
fs
lret
mov
ficompl
aad
sbb
jbe
lods
dec
int3
ret
subl
cmp
rcll
movsl
adc
mov
push
adc
lds
pusha
push
xor
cmc
sub
aad
push
jl
stos
repz
adc
lods
int3
jmp
fmulp
enter
jne
pusha
and
sbb
xor
push
loope
loop
je
or
cmp
mov
cwtl
mov
movsl
jno,pt
push
pop
cld
leave
adc
std
xor
aam
mov
stc
pusha
or
push
push
xor
dec
cmpsb
repnz
aas
cltd
xor
sbb
ficompl
mov
jns
mov
popf
jg
sbb
stos
test
jo
push
jle
sbb
into
push
pop
pop
lods
xchg
lock
xlat
xor
imul
xor
inc
in
mov
xor
das
lret
test
xor
outsb
lea
xor
add
ljmp
ds
sub
sbb
mov
xor
vpmovmskb
mov
repz
jnp
dec
subb
cmp
xchg
lcall
mov
push
xchg
call
lods
and
scas
sbb
cmp
js
cmp
mov
repz
shlb
sbb
mov
and
jl
cmc
das
aam
xchg
xchg
cmp
repz
pop
xor
fbld
sub
xchg
cs
inc
fldl
addb
mov
xor
mov
pop
xor
sbb
sbbb
fisubrl
push
and
clc
mov
mov
fimuls
mov
add
insl
orb
aam
bound
add
es
xchg
gs
cs
aas
push
push
mov
sub
push
xor
jp
mov
xor
mov
popf
into
aad
sbb
lock
mov
aaa
orl
push
arpl
aam
mov
xchg
loop
push
mov
cld
dec
xchg
jg
test
add
xor
hlt
push
scas
iret
js
xor
dec
pop
dec
add
xor
lahf
cmc
push
pop
mov
inc
lea
rcll
push
or
and
stos
fstl
std
sub
repnz
mov
or
dec
mov
xchg
xchg
sahf
xor
ret
das
movsb
push
pop
mov
pop
rol
and
shlb
xor
add
imul
pop
cmp
dec
or
sarb
push
mov
sbb
and
add
cmp
pop
mov
rcl
jne
jae
mov
stos
inc
scas
mov
adc
xor
jmp
jbe
ss
loope
fstp
and
pushf
fcoms
int
adc
ret
es
movsb
xor
jae
dec
xor
cmpsb
js
mov
out
push
lds
mov
xchg
push
push
sbb
inc
pop
adc
or
pop
and
data16
sbb
mov
jns
sub
out
sbb
xor
in
shl
pop
adc
xchg
outsb
and
push
lock
imul
sub
aas
and
jbe
iret
sub
dec
inc
xor
and
push
inc
add
adc
or
cmp
xchg
cmp
call
out
and
fdivs
adc
mov
xchg
ds
cmp
ret
inc
test
pop
bound
inc
addr16
or
lds
iret
mov
or
pop
jo
pushf
mov
sbb
xor
ror
jmp
sbb
cwtl
mov
adc
mov
sbb
lahf
push
add
mov
push
and
jbe
push
mov
scas
jle
push
push
fidivs
xor
in
or
dec
pop
push
inc
inc
mov
and
popf
push
xchg
sbb
and
data16
cmp
and
pushl
je
hlt
test
add
pop
call
xor
in
xchg
push
or
cmp
rorl
daa
push
les
repnz
pop
mov
in
loopne
pop
push
dec
lods
mov
mov
xchg
ja
cltd
inc
pop
push
or
cmpb
pushf
rol
mov
push
push
push
pop
jle
or
test
cmp
mov
and
push
xor
lcall
imul
mov
add
add
pop
movsb
je
xor
or
sbb
cmpsb
inc
inc
xchg
push
and
scas
loop
aam
out
mov
jns
fcoml
in
imul
inc
jge
push
lcall
push
pop
xor
mov
enter
scas
push
sub
or
xor
in
fnop
xchg
fidivrl
sbb
xchg
movb
ret
lds
fisttps
je
arpl
movsl
push
sub
add
aaa
inc
test
sbbl
mov
xchg
testl
cwtl
mov
and
flds
ds
pop
mov
arpl
ljmp
xchg
xor
je
stos
pop
push
xor
mov
xchg
xor
cmc
movsl
sub
push
daa
push
dec
sbb
shll
leave
mov
fidivl
jae
out
pop
push
into
loope
insl
fcmovne
push
jo
mov
aam
sbb
cs
push
fcomps
scas
mov
inc
cmp
mov
out
xor
xchg
loopne
data16
incb
or
imul
leave
lea
call
sub
mov
jo
mov
lods
jle
push
daa
jl
and
sub
aaa
arpl
aad
xor
int
xlat
jae
aam
mov
push
repnz
xchg
dec
sub
orl
sti
push
arpl
das
mov
and
subb
sub
cmp
cmp
imul
dec
xor
mov
cmpl
leave
xchg
inc
cwtl
push
shl
movsl
jae
sub
cs
daa
mov
aaa
and
mov
sub
pop
divl
cmp
inc
pop
add
pop
xor
xchg
ljmp
gs
sar
aaa
divl
cmp
int
jae
inc
xchg
jmp
mov
mov
sbb
shrb
ss
inc
scas
sub
or
push
fidivl
mov
rcll
mov
mov
push
cli
movsb
out
ds
cmp
or
scas
jno
cmp
cmpl
mov
xchg
lret
sbb
mov
mov
mov
fwait
movsl
mov
mov
sub
jbe
add
dec
inc
mov
icebp
les
jg
and
popf
lret
outsl
xor
shll
int3
ds
pop
jnp
xchg
aaa
or
xor
out
push
add
jecxz
aas
inc
mov
xchg
xor
movsl
or
sbb
mov
lods
pusha
cld
sub
push
xor
cltd
std
push
insb
mov
push
sbb
xchg
repz
ret
sahf
mov
in
sub
daa
inc
xor
in
sbb
into
iret
int3
jecxz
fwait
dec
rcll
ret
push
repz
notl
or
adc
xor
sbb
ljmp
push
xchg
dec
lret
sub
ja
ds
xor
adc
aaa
and
xchg
out
cs
sbb
fimull
das
mov
sbb
pop
lret
pushf
hlt
cld
leave
lcall
js
icebp
sbb
jo
in
dec
mov
pusha
adc
outsl
xor
adc
movsb
xor
ljmp
mov
and
mov
lds
push
jae
imul
bound
mov
push
popa
and
xor
fldt
fisttpll
sbb
aam
jne
sub
scas
ljmp
dec
cmp
rcrb
add
jmp
sub
mov
sbb
bound
jb
xor
mov
pop
adc
jge
sub
dec
push
loope
sub
clc
and
cmp
mov
movsl
sub
push
xor
call
add
mov
scas
rclb
pop
negl
xor
mov
jg
or
xor
nop
jae
xchg
sbb
addr16
sbb
iret
cmpsb
sbb
test
lahf
push
adc
daa
inc
arpl
inc
pushw
cwtl
insl
xor
dec
bound
mov
adc
push
sbb
inc
cwtl
push
test
ljmp
xor
xlat
movsl
dec
mov
repz
push
sbb
sub
push
icebp
hlt
or
or
add
adc
sub
pushl
ficoml
or
xchg
mov
jl
mov
insb
cmp
or
xor
inc
and
repz
pop
sbb
lds
into
cmp
push
xor
dec
imul
push
sub
pop
negl
in
loop
pushf
adc
cwtl
sbbb
push
scas
out
lret
adc
sbb
or
fstp
int3
or
jne
stos
sub
mov
fsubr
dec
xor
call
fwait
adc
push
ljmp
push
cmc
sbb
cmpsl
loope
leave
sub
fcom
adc
sub
mov
xor
out
jb
dec
xor
and
test
mov
cli
mov
add
in
mov
lds
iret
mov
and
cmp
adc
inc
jo
shr
push
xlat
clc
sub
shl
xchg
aam
out
jo
jae
xor
outsb
jbe
arpl
fbstp
mov
xor
xchg
dec
hlt
xchg
jl
cmp
sub
loop
ds
sub
cmpsb
leave
cmp
nop
xchg
and
jg
push
shrb
lea
xchg
in
sbb
mull
sub
or
sub
lea
sbb
mov
fstps
fcoml
call
xchg
pop
and
loopne
xchg
clc
in
ds
int3
dec
leave
mov
mov
cmpsb
mov
xchg
addr16
loop
xchg
pop
cmpsl
repnz
stos
mov
testl
push
cmpsb
mov
int
enter
pop
pop
xor
add
xchg
adc
ja
cmpb
dec
jne
and
and
arpl
sbb
xor
mov
fisttpll
xchg
mov
aam
adc
gs
inc
pop
or
sub
mov
leave
pop
fwait
push
push
subb
ss
and
add
sub
inc
inc
dec
cmpsl
add
xor
sarl
leave
inc
jne
ficoms
cmc
notb
test
and
jno
xor
adc
mov
js
sbb
sahf
cmp
inc
sbb
and
test
test
sub
cmpsl
mov
outsl
xchg
adc
stos
xor
mov
xor
jg
cmp
fisubrl
or
sub
pop
aad
ds
mov
lret
mov
into
nop
add
sbb
or
das
adc
dec
rclb
and
mov
jg
adc
jge
clgi
popa
jle
xor
std
lret
pop
movsl
inc
or
or
and
xor
popl
push
xchg
mov
and
or
xor
sub
jecxz
aas
test
cwtl
cld
ja
dec
pop
add
in
clc
cmp
popa
lahf
in
xor
xor
outsl
xor
xor
in
sbb
pushf
es
push
xor
rclb
dec
xor
xor
mov
xor
mov
sbb
int3
sbb
pop
jb
imul
test
xchg
fs
addr16
jae
xchg
sbb
dec
push
xor
or
mov
mov
lods
mov
jmp
inc
outsl
and
and
mov
adc
stc
dec
push
mov
ret
xchg
push
inc
sub
push
xor
add
inc
adc
popf
jnp
and
cmp
sarl
jp
cmc
movsl
pop
xor
std
xor
cmp
adc
lret
xchg
sub
jge
rclb
xor
mov
fnstsw
loop
xor
sbb
imul
cmc
aam
xor
sub
jo
popa
or
lcall
sarb
lret
mov
xor
mov
mov
jl
adc
and
pop
and
movsl
ljmp
sub
xchg
dec
push
divb
mov
mov
inc
sbb
mov
xor
arpl
inc
ret
jle
adc
pop
scas
fsub
femms
repnz
push
outsb
mov
mov
mov
movsb
inc
jl
jecxz
push
push
inc
mov
cmpsb
stos
or
jg
sub
or
rdtsc
pop
loopne
mov
xor
sub
jge
cmp
pop
push
inc
cmpsb
sub
inc
outsb
xor
cmp
aas
inc
lods
ljmp
mov
shrl
lret
xor
cmp
jl
test
mov
mov
addl
xor
and
push
shlb
rcll
push
xchg
aaa
push
cmpsl
lcall
pop
mov
cmp
jae
or
jns
cwtl
mov
cmpsl
adc
fadds
xor
sub
xchg
movsl
xor
pop
imul
iret
or
mov
cmp
and
test
clc
lock
xor
popa
cmp
push
push
int
xor
add
inc
cmpsb
repnz
in
in
xor
ficomps
fs
xor
movsl
sub
sbb
rcrl
pop
dec
clc
outsb
or
cmp
scas
daa
pop
push
imul
call
lods
xor
push
insb
xchg
cmpsb
dec
xor
rep
mov
sbb
xor
xchg
fcmovu
in
test
sub
icebp
xchg
push
inc
or
dec
subb
dec
shlb
mov
sbb
pop
jns
adc
adc
push
jl
inc
xor
mov
sbb
mov
xchg
mov
jb
mov
mov
xchg
xor
cmp
xor
jmp
andb
lods
popa
cli
lods
in
mov
mulb
sub
mov
xchg
sub
sub
ljmp
jne
or
lea
call
push
dec
xchg
mov
icebp
aam
in
cmpl
bound
xor
sarl
xor
fcompl
imul
lods
test
push
and
add
loop
test
or
pop
lahf
ret
aam
and
and
outsb
ljmp
lods
jl
cli
data16
xor
mov
inc
pop
js
pop
fbstp
pop
out
ret
jge
xor
push
sub
out
iret
mov
adc
bound
xor
dec
aad
outsb
ret
test
lods
jmp
shll
aam
push
cmp
cmpsb
pop
call
popf
icebp
push
or
insb
mov
or
jb
lods
fisttpll
dec
test
inc
jbe
sahf
sub
mov
jecxz
shrl
or
fs
add
fbld
js
lock
xchg
and
scas
loope
xor
mov
mov
lock
xchg
adc
and
inc
xchg
aam
xor
push
push
mov
out
xor
push
mov
pop
lods
xchg
cwtl
push
mov
das
fdivrl
xchg
addr16
insb
pushf
sub
jb
or
xchg
add
jo
pop
inc
inc
cmp
xor
stos
imul
xor
js
cmp
mov
pop
fidivs
inc
cmp
mov
daa
jmp
repz
push
push
dec
cld
jl
cmc
popa
pop
out
push
fists
in
into
fdiv
xor
mov
mov
cmpsb
mov
insb
sahf
inc
push
sub
push
xchg
sbb
xor
lret
stos
rcrb
std
dec
rorl
mov
adc
or
add
cmpsb
nop
in
sub
xchg
mov
cld
or
mov
dec
loope
lock
inc
jle
xor
cmp
ret
bound
and
add
mov
mov
mov
lahf
pop
stos
xor
jg
fimuls
mov
loop
or
addb
jno
rorb
xchg
xchg
ret
mov
rorl
sbb
push
je
outsb
loope
or
jae
pop
cmp
xor
movsb
pop
jne
insl
mov
cmpsl
mov
imul
neg
rcr
loop
pop
pop
lret
and
jo
out
dec
jl
push
inc
push
cs
mov
aaa
pop
push
lea
bound
adc
sbb
inc
inc
xor
mov
sbb
test
sub
xchg
cli
and
xor
push
lret
cmpsb
push
faddp
insl
ret
iret
stc
mov
xor
fmull
mov
mov
xor
sbb
inc
nop
std
shll
stos
dec
sti
mov
xor
mov
mov
mov
pushf
pop
rcll
push
push
out
ss
imul
jmp
icebp
dec
or
push
sti
mov
test
or
fcom
loope
ja
test
add
xor
mov
lds
pop
xor
and
imul
pop
push
push
push
add
das
pop
xor
push
insl
mov
xor
pop
je
xor
or
jo
sahf
and
test
push
sbb
push
out
xchg
xchg
jecxz
xor
ds
xchg
xchg
mov
pop
xchg
xlat
clc
mov
jo
mov
and
test
xchg
mov
imul
cmp
dec
push
and
test
add
mov
sub
idiv
lock
push
jbe
cmp
lods
and
jae
mov
push
pusha
mov
push
cmp
jae
push
inc
cmp
and
adc
dec
sbb
xorb
out
lea
jmp
sbb
xor
or
jne
mov
pop
push
pop
out
loopne
lods
bound
jecxz
inc
imul
adc
push
adc
or
ja
out
push
lcall
jae
xor
push
fs
pushw
addr16
and
in
subb
and
pusha
andl
xorl
sub
movsl
clc
scas
scas
out
and
mov
ljmp
push
jge
pop
inc
ss
mov
jo
lret
adc
aad
mov
cmp
jne
pop
cmp
mov
xor
fidivrl
repnz
sub
pop
mov
insb
xor
and
adc
or
inc
lea
scas
ret
ret
in
in
int
sub
cs
out
lahf
lock
jl
adc
mov
push
xchg
cld
xor
mov
sub
xor
jmp
adc
sbb
lods
mov
test
xor
inc
push
mov
cmp
fwait
xchg
fs
test
and
int3
or
adc
aas
xchg
test
in
addb
push
adc
pop
data16
xor
icebp
inc
outsl
xor
lock
push
loopne
sub
xor
jae
sub
cmp
add
mov
push
xor
movsl
xlat
push
cmp
cmp
adc
bnd
dec
mov
pushf
xor
jns
mov
shll
xchg
mov
xor
ljmp
xor
sti
test
out
jns
and
push
cmp
icebp
fcoms
enter
push
shrl
js
into
push
sub
push
push
in
idivb
sbb
mov
xor
sahf
xor
xor
inc
add
pop
or
add
dec
aaa
shll
xchg
mov
les
rcr
mov
sahf
xor
and
xchg
xlat
xor
cmp
push
xor
push
faddl
int3
xor
fucompp
mov
cmp
inc
sub
jle
xor
jb
xchg
mov
inc
inc
push
aad
mov
movl
sbb
or
mov
cmp
jbe
call
loop
jne
push
xchg
jns
push
out
mov
aad
jnp
cli
xor
jb
mov
xor
mov
movsb
aas
inc
xor
and
mov
std
pop
mov
xor
js
int
add
sbb
xchg
jle
inc
push
adc
mov
imul
decb
pop
rcrl
js
inc
and
in
es
adc
loopne
jle
xchg
jg
dec
and
es
divb
xchg
and
mov
inc
jae
scas
sub
xor
fs
xor
scas
das
cmp
dec
loop
icebp
sub
je
sbb
and
enter
push
pusha
adc
adc
push
shrl
ljmp
insl
xor
or
aaa
rcll
sub
dec
dec
push
inc
push
xor
pop
outsb
out
xchg
nop
adc
sub
lods
lods
daa
out
pop
inc
xor
pushf
push
call
xchg
popa
inc
cmp
int3
loop
xor
pop
mov
inc
inc
mov
push
aas
jns
mov
push
push
lods
stos
xor
mov
xor
jo
test
jae
inc
xor
add
outsl
out
leave
lea
inc
int3
fisubrl
pusha
xor
in
jecxz
push
lret
loop
xchg
cli
and
js
xor
and
adc
push
mov
cmpsl
xchg
push
push
ror
cmp
adc
jle
xor
push
cmp
push
cwtl
sub
mov
mov
ror
leave
out
lds
push
push
insb
dec
call
push
imul
movsl
enter
or
mov
xor
leave
sbb
push
and
insl
lcall
es
xchg
daa
pop
shll
aam
pusha
les
and
icebp
mov
mov
cmpb
mov
push
repnz
out
xchg
xor
leave
movsl
jecxz
out
xchg
dec
popf
dec
add
xor
shr
mov
mov
adc
adc
and
and
mov
jge
pop
cld
aad
stos
sub
xchg
fbstp
sub
scas
push
dec
je
or
nop
test
rcrb
mov
sbb
lea
mov
dec
enter
sbb
push
popa
dec
out
pushf
push
and
std
lds
xor
and
lret
pushf
rcrl
xor
int
adc
loop
xor
cmp
test
mov
push
sub
addr16
mov
stc
or
xor
mov
in
out
push
mov
or
js
xor
int
push
push
dec
mov
je
cmp
xchg
xor
fidivs
mov
sub
lret
adc
push
out
or
pop
xor
cld
push
inc
adc
shll
lods
pop
push
stos
fldl
jb
and
mov
cltd
popa
test
pop
ljmp
mov
das
inc
fsubs
adc
repnz
rcll
adc
lds
or
outsl
inc
scas
xor
xchg
ret
sub
ret
mov
gs
sbb
cli
push
mov
arpl
repnz
cmp
inc
shll
xor
int3
xor
jo
test
data16
imul
pop
pop
add
loop
test
pop
xchg
fwait
stos
and
sti
push
scas
xchg
mov
sbb
or
icebp
loop
mov
jge
out
and
ds
pop
data16
push
stos
xor
pop
adc
xor
mov
jnp
jo
repz
jne
dec
dec
arpl
cmpsb
lea
int3
xor
mov
inc
mov
scas
and
je
sub
mov
sub
shrb
aam
repnz
jl
mov
add
std
mov
adc
loopne
fcoml
daa
mov
sbb
mov
js
inc
or
xor
std
cmpsb
rclb
movsb
test
aam
xor
adc
sbb
pop
jmp
in
sub
mov
mov
mov
mov
pop
and
xor
loopne
lea
mov
mov
inc
out
addb
lea
subb
or
test
or
outsb
scas
cmp
pop
sbb
lret
inc
pop
xchg
jl,pn
ljmp
and
fdivl
lods
lret
movl
jbe
xchg
and
inc
insb
pop
lods
ror
xor
inc
ret
mov
cmpb
nop
sbb
movsb
mov
push
mov
movsl
xor
push
icebp
xchg
add
shl
add
cmp
push
sarb
subl
xor
stos
and
js
add
arpl
arpl
dec
cmp
and
sbb
mov
xor
imul
xor
sti
stos
mov
scas
mov
mov
bound
cmpsl
mov
cwtl
push
add
and
mov
test
adc
add
stc
in
test
pop
inc
sti
xchg
adc
push
fldcw
jecxz
and
mov
jp
pop
jo
mov
inc
sub
ja
adc
mov
or
cmpsl
or
mov
gs
in
mov
xor
mov
icebp
xor
add
pop
ret
push
outsb
pop
sbb
test
mov
inc
outsl
adc
sub
xorl
pop
push
adc
mov
inc
movsb
jbe
repz
adc
lea
cmp
xor
cmp
jl
xchg
sahf
and
sub
push
outsb
xchg
fwait
xchg
xchg
outsb
aaa
test
insl
sub
sub
rol
and
jmp
negb
adc
add
xor
adc
inc
xor
push
mov
aas
imul
mov
data16
outsl
call
lret
xor
add
push
inc
jl
mov
mov
adc
fisubrs
lods
xor
sbb
cmp
cmp
test
xor
jb
mov
mov
negb
adc
cmp
icebp
push
xor
out
loope
sbb
pop
cli
imul
add
dec
add
ja
dec
xor
mov
push
imulb
sub
adc
lods
repz
sti
mov
movl
sub
cli
mulb
adc
mov
jle
xchg
mov
aam
loope
jnp
adc
imull
inc
jle
adc
xchg
push
adc
adc
add
aam
xchg
xor
test
xchg
mov
xor
lods
aam
inc
inc
push
shlb
mov
loopne
xchg
cld
push
out
loop
ljmp
enter
xchg
xchg
shrl
jns
and
shl
clc
mov
or
mov
addr16
jge
mov
mov
xor
je
test
and
adc
push
and
or
jle
or
dec
mov
mov
addr16
dec
mov
dec
pop
cli
xchg
adc
or
pushf
roll
or
xor
mov
pop
inc
mov
mov
test
adc
ja
ljmp
in
pop
arpl
popf
test
mov
xor
fwait
addr16
sahf
cmp
adcl
xor
sub
hlt
cmpsb
cli
arpl
push
cmp
fsub
cmp
xor
mov
xlat
xor
in
and
xor
popa
mov
sub
sub
sub
push
into
adc
inc
push
sub
imul
lea
cli
popf
shlb
jbe
pop
fwait
mov
dec
jl
or
dec
jnp
and
jg
les
loope
jge
dec
jmp
push
mov
inc
jle
jns
push
fisubrs
mov
cmp
test
movsl
shll
std
rdtsc
push
iret
inc
ss
js
xor
stos
cmp
pusha
push
cmpsb
pop
fiaddl
and
add
adc
movsl
xor
mov
fnsave
xor
lahf
xchg
xor
jecxz
aam
mov
popf
jl
jge
pop
scas
pop
xor
cld
nop
clc
push
push
decl
mov
or
out
call
cmp
push
jg
cmpb
jb
and
test
lcall
mov
inc
mov
sti
sahf
bound
push
or
rcrl
mov
shll
add
out
arpl
scas
push
push
lcall
lds
pop
xchg
jns
mov
ljmp
or
adc
cwtl
jbe
cmp
cld
mov
jae
push
pop
inc
dec
xlat
cmc
jg
je
fildll
xor
sub
xor
dec
add
imul
or
jb
repnz
insb
out
adc
js
pop
ret
arpl
jo
mov
out
addr16
push
jne
jb
mov
push
cld
in
loopne
fcoml
je
lret
mov
and
aam
aas
xor
cmp
cli
cmp
add
dec
mov
or
adc
pusha
out
jbe
xor
rep
cld
xor
aam
mov
xor
mov
subb
inc
mov
cmpb
jne
cwtl
xor
pushf
jl
inc
or
into
add
ficompl
mov
sub
xor
push
jns
and
or
idiv
fildll
shrb
jg
mov
or
ret
sbb
fwait
cmp
xchg
mov
aaa
notl
addr16
xchg
sub
outsb
stc
fcomi
adc
adc
jge
sbb
cmp
cmp
repz
mov
sub
insb
cli
push
xor
inc
fidivrs
popa
push
adc
xor
sbb
insb
pop
or
out
inc
jne
fimull
ret
cli
imul
adc
and
xchg
rcrl
jg
popa
scas
xor
mov
sbb
pop
es
xor
dec
aam
or
xchg
pop
stos
push
xor
mov
int3
and
jle
adc
stos
rorl
and
mov
outsl
mov
pop
out
aam
mov
imul
daa
jp
and
pusha
jg
and
ds
push
ret
add
arpl
subb
sub
cwtl
subb
sub
aad
loope
xor
cmc
xchg
pop
push
roll
xor
push
push
xchg
hlt
jnp
roll
xor
mov
ss
xor
test
mov
outsl
dec
or
or
mov
xor
xor
jbe
lds
xor
in
or
and
jge
repz
xor
fdivrs
scas
or
sub
xlat
inc
xor
sbb
shlb
sbb
jmp
or
xor
sub
in
or
xchg
xor
jg
and
jns
popf
xor
inc
xchg
and
adc
ds
aaa
pop
shll
cwtl
mov
xchg
xchg
or
inc
cmp
movsl
and
mov
fsubl
shlb
xor
icebp
into
mov
xor
andl
jbe
ret
push
inc
xchg
xor
cmpl
mov
test
or
and
scas
cmp
aaa
jae
dec
cmpsb
arpl
testb
stos
xchg
js
enter
outsl
fucomip
out
frstor
or
aas
add
shll
pop
and
sbb
mov
and
test
mov
mov
ja
pop
adc
adc
and
or
es
mov
cmp
sub
xor
inc
mov
sbb
int3
and
pusha
loopne
xor
mov
xchg
lods
cli
inc
push
out
jg
or
mov
xchg
negl
notb
mov
cmpsb
jmp
outsb
xor
iret
xchg
xor
test
xor
push
mov
js
sbb
loope
jne
fmull
sbb
pop
or
imul
xor
test
cs
jnp
cld
and
mov
mov
adc
and
xchg
mov
cmp
loop
jns
inc
insb
or
js
shrl
aas
in
ret
or
mov
push
push
adc
sbb
faddl
mov
dec
pushf
repz
rcll
pop
push
mov
adc
sub
or
jno
xor
push
stc
scas
outsl
xor
leave
add
push
or
movswl
test
sbb
jg
sti
out
lret
mov
ja
jecxz
xor
or
jb
dec
pop
and
and
push
leave
mov
popf
in
jbe
mov
or
jne
xchg
lods
push
pop
push
push
add
dec
jmp
leave
and
mov
stos
inc
mov
lahf
pusha
shl
jns
mov
or
test
xor
xor
lock
jns
xor
cmc
jge
push
lods
xor
cmp
dec
dec
push
stos
movsb
xor
jne
rcrb
xor
xchg
out
loopne
pop
xor
jmp
xchg
iret
in
imul
inc
fnstsw
push
aas
mov
inc
xor
jo
add
into
or
xorb
xor
cltd
adc
xor
fists
movsl
push
pusha
xor
push
dec
or
cmp
fldenv
mov
add
jbe
ss
lcall
inc
into
loope
lods
rdtsc
jb
mov
push
pop
mov
mov
hlt
cmp
out
adc
or
pop
jg
or
imul
and
mov
xchg
mov
test
out
mov
imul
int3
cmp
and
xor
pop
faddl
mov
popf
xor
add
and
cs
ja
leave
scas
jae
mov
lahf
mov
sbb
jb
data16
addr16
scas
insl
dec
pop
jl
xor
pop
mov
push
jbe
sub
shrl
mov
mov
add
test
lret
shll
push
es
or
or
jp
add
shlb
movsl
push
imul
adc
ret
xor
xlat
or
fdivs
jmp
mov
push
or
jl
loope
sub
mov
xor
mov
rdtsc
pop
push
je
xor
fiaddl
ljmp
pusha
cmc
data16
pop
lods
adc
clc
mov
daa
xor
stos
andl
shl
clc
lret
cwtl
push
xor
lcall
cmp
mov
rolb
orl
ret
pop
loope
push
pushf
je
out
xchg
jae
fisttpl
ret
xlat
adc
and
das
push
scas
out
xor
fdivs
or
and
imul
repnz
add
xchg
push
xor
sub
insb
sbb
pop
xor
in
xor
popa
xor
mov
mov
and
pop
sub
xor
js
lds
dec
mov
sub
sbb
fs
int3
movsb
push
mov
adc
je
movl
insb
fs
xor
inc
fwait
jae
xor
pop
fidivl
push
jne
dec
jbe
sbb
mov
cmpl
push
cs
cld
adc
pop
pop
popf
ds
shll
aas
insb
mov
or
xlat
ja
pushf
jecxz
outsl
cmp
xor
popf
fmuls
stc
sbb
xor
or
jae
aam
xchg
int3
jno
adc
pop
jle
push
xor
stos
mov
sahf
lret
fs
xor
ja
and
xor
jnp
fsubrs
sub
lcall
test
mov
mov
or
jo
and
and
adc
inc
or
aad
pop
push
jne
outsl
push
pushf
in
xor
and
pusha
adc
lds
adc
adc
imul
aas
and
push
shl
sti
xor
je
pop
xor
jmp
lods
pop
jnp
das
sbb
pop
sub
pop
jg
xchg
loope
xchg
mov
popf
mov
sbb
mov
sahf
xor
pop
sub
xor
push
shl
xor
xchg
or
and
call
xlat
imul
les
cli
enter
bound
je
cli
xor
loopne
jmp
mov
lret
pop
cmc
sbb
jecxz
add
in
test
mov
insl
repz
fisubs
xor
dec
test
xor
pop
adc
sarl
mov
sub
xor
fcomps
push
and
arpl
ret
push
scas
ret
mov
inc
and
xchg
fidivs
or
loopne
scas
test
sar
adcl
sbb
inc
mov
dec
cmpsb
ljmp
lret
popa
lods
jmp
sub
inc
clc
mov
inc
or
daa
xor
dec
popa
aam
in
fnsave
dec
xor
lahf
sarl
jno
out
loope
xor
xor
mov
pushf
insb
sbb
inc
jecxz
bound
inc
mov
movsl
pop
mov
mov
or
sti
xchg
push
lds
add
xor
mov
popf
pop
pop
push
adc
push
push
and
xchg
add
push
mov
ret
ljmp
or
mov
int
sub
adc
inc
dec
push
lods
xor
sahf
subb
mov
int3
push
sbb
icebp
test
adc
xor
xlat
dec
mov
or
xchg
mov
adc
les
push
xor
pop
mov
jg
dec
sub
xor
aam
cld
sbb
loope
jecxz
pusha
out
lods
xor
mov
sbb
fsts
dec
xor
mov
sub
jl
ss
out
pop
mov
pop
mov
push
lcall
aad
jo
sub
xchg
shlb
icebp
jne
lds
and
mov
and
xchg
xor
xchg
ljmp
inc
inc
out
adc
or
push
js
push
xor
ror
pop
and
cmp
xor
add
nop
pop
pop
outsl
movsb
pop
sahf
cmpsb
inc
add
or
das
sbb
and
mov
lahf
push
movsl
and
cli
or
sbb
fwait
jnp
daa
sub
stos
xchg
cld
sti
add
xor
add
bound
enter
call
mov
and
or
ficomps
xor
dec
dec
xor
cld
push
add
outsb
cmp
xor
adc
stos
or
rclb
xor
sbb
mov
cmp
jo
adc
push
mov
test
aas
inc
jmp
adc
in
stos
add
scas
adc
sub
ja
arpl
mov
in
lahf
loope
or
cltd
daa
mov
loopne
pop
xor
cs
sbb
pushf
lds
and
cmp
xor
hlt
sbb
inc
push
in
mov
sub
mov
pusha
or
xchg
sbb
jno
leave
aaa
xor
xchg
shrl
xchg
jg
mov
or
pop
mov
mov
mov
push
push
sarl
push
cli
pop
jnp
lret
and
in
xor
mov
push
call
or
mov
pop
mov
add
push
aad
xor
push
lret
mov
inc
xor
nop
xor
xor
dec
js
mov
sbb
jne
movsb
mov
out
add
aam
rorb
cmpsb
stos
les
push
adcb
sahf
daa
xchg
push
pop
cli
mov
lcall
add
cmp
push
imul
mov
ja
and
rclb
mov
sub
out
sbb
jae
lcall
inc
mov
jl
mov
clc
push
push
movsl
push
mov
add
jo
je
test
jle
adc
fnstenv
in
push
stos
xchg
stos
xor
mov
enter
outsb
test
cmp
xor
sbb
cli
xchg
mov
iret
insb
xor
fnstsw
inc
mov
push
push
and
std
xchg
test
sub
mov
xor
fs
dec
imul
iret
test
enter
or
mov
adc
xchg
cmc
stos
aas
and
jge
xor
xchg
shll
sbb
or
inc
jae
popa
mov
xor
jnp
shrl
pop
adc
add
mov
xchg
and
out
fdivl
fldcw
sbb
sub
lret
mov
leave
jo
pop
in
push
int
push
stc
dec
sbb
xor
scas
or
rcrl
jae
movsl
jg
xchg
push
push
imul
hlt
and
jnp
neg
push
add
add
imul
xor
jbe
mov
mov
add
cmc
pop
adc
mov
sub
fisttpll
dec
push
rcr
scas
add
gs
or
insl
outsl
fcompl
stos
mov
jle
push
push
push
xor
mov
and
lock
add
cmp
sbb
jle
out
mov
cmp
out
sub
adc
pop
sub
push
mov
push
cmp
xor
insl
cmpsb
or
or
orl
lcall
fdivl
pop
out
jns
movsl
and
js
ret
test
add
pop
and
mov
mov
push
je
push
pop
fistpll
out
pop
or
xor
jg
pop
insl
cmp
jo
cld
fcomps
lods
das
adc
pop
adc
cmpb
fisubl
xor
xor
inc
jb
ljmp
sub
fisubl
and
roll
pop
mov
cld
xor
into
std
mov
adc
pop
popa
int3
addl
push
fnsave
gs
dec
xchg
in
sbb
or
sub
movsl
xlat
insl
xor
leave
and
mov
xchg
sub
repnz
add
nop
sub
or
sahf
adc
fstps
or
inc
mov
scas
sbb
sub
mov
movb
outsb
and
stos
mov
ret
sub
jle
outsl
test
stc
inc
je
insb
stos
and
adc
test
fs
js
or
fimuls
adc
addr16
loope
xor
fs
push
jbe
xor
lret
ret
test
or
xor
jno
dec
lret
adc
jnp
stc
inc
mov
addr16
daa
adc
insb
push
data16
rorl
adc
lret
repz
rcll
icebp
xor
xor
push
pop
and
adc
xor
stos
mov
xor
repnz
jbe
clc
xor
test
arpl
mov
xchg
xchg
sar
mov
cli
mov
fisttpl
out
int3
mov
jae
xor
sbb
sbb
push
and
inc
fstpl
jg
jecxz
int3
jnp
xchg
subb
jp
pop
xchg
dec
shll
jmp
jp
mov
addb
push
jp
xchg
and
add
or
push
and
pop
stos
inc
inc
iret
mov
ss
adc
cmp
stos
xor
or
addr16
mov
test
fcoml
mov
pop
test
push
xor
xor
cmp
add
jge
not
lret
imul
fdivrl
xchg
in
and
mov
aas
ret
mov
into
jns
fwait
pushl
pop
xlat
sbb
icebp
or
iret
xor
or
pop
dec
add
xchg
push
lret
fwait
mov
popf
mov
mov
push
jns
xchg
xor
ss
push
call
cld
jmp
in
or
mov
insb
hlt
mov
frstor
pop
in
or
in
jb
xor
add
sbb
das
test
dec
mov
jle
xchg
ja
cli
loopne
xor
xor
jg
pop
and
jnp
xor
push
fnsave
mov
cld
jne
or
lea
sarb
xchg
xchg
cmp
and
in
jbe
inc
jge
push
in
push
xor
inc
push
xor
adc
mov
sub
out
push
outsl
or
insb
xor
rcl
and
sti
cmova
inc
repz
fdiv
scas
shrl
and
sbb
cltd
out
nop
xchg
test
cmp
xchg
xor
fstps
sub
mov
imul
in
lods
sti
into
mov
movd
jnp
push
in
lea
push
rorb
fstp
push
push
and
xor
pop
push
imul
ret
aas
cli
mov
xchg
test
adc
adc
mov
inc
push
add
jp
in
jb
jns
pop
shlb
ret
dec
xchg
push
movsb
cmp
pop
inc
cmpsb
sbb
adc
mov
xor
fnstenv
outsb
or
xor
out
dec
jo
cmpsb
add
cmp
push
clc
js
inc
sub
stos
in
adc
movl
jae
sbb
cltd
ficomps
dec
cmp
xor
sub
arpl
xchg
sbb
call
pop
je
sbb
xor
in
jne
lock
xor
xor
fs
pop
push
xor
dec
out
cli
push
or
xorl
xor
xor
add
xchg
xchg
repz
sub
mov
or
push
push
push
lds
pop
xor
pop
xchg
aam
ss
addr16
mov
push
sbb
jb
mov
xchg
outsb
pop
xor
out
lcall
add
popa
cmp
shl
lock
not
arpl
xchg
stos
xorb
xorb
push
aas
repnz
jbe
cmp
ss
inc
or
mov
nop
mov
jp
push
adc
dec
xor
fildll
jle
mov
push
push
inc
stos
cmp
das
in
aam
mov
cmp
xor
mov
cli
stos
mov
mov
jo
out
cmp
push
cmp
fwait
xorl
int3
inc
xor
xor
enter
mov
inc
out
xor
je
call
lods
test
mov
xor
sti
pop
stc
mov
xchg
scas
add
pop
cs
fdivs
mov
loopne
mov
pop
movsl
out
ljmp
adc
lret
test
sbb
lds
das
xchg
clc
fstpl
add
xor
scas
add
mov
xor
lods
bound
xor
adc
push
pop
xor
and
loopne
out
cld
xor
push
push
in
sbb
or
xor
fsubr
pop
and
test
add
sub
shll
outsb
gs
push
adc
pop
fidivl
movsb
cmpl
fdivr
ret
nop
push
cmp
scas
xor
lods
xor
clc
mov
ret
mov
cmpsb
and
pop
inc
outsl
xor
xor
mov
xor
in
das
mov
cwtl
int3
and
push
sub
or
and
lcall
xor
dec
stos
dec
and
test
int3
lcall
mulb
test
nop
inc
or
xor
out
stos
ret
bound
xchg
das
dec
cmpsb
mov
sub
push
xor
cmc
aas
jmp
push
xor
ret
ds
loopne
xor
jae
xor
mov
fdivs
lret
add
js
jg
cmp
xchg
push
fdivp
inc
adc
pop
xor
mov
xchg
mov
fstpt
xor
scas
int3
jae
ret
roll
mov
mov
xchg
mov
pushf
adc
mov
int
xor
test
daa
std
rol
lds
sbbb
jbe
imul
jle
stos
jecxz
stos
mov
mov
shlb
adc
out
sbb
xor
jne
and
xor
pushf
scas
adcl
xor
call
push
fsubl
or
rcll
sbb
inc
ret
inc
addb
pop
fistl
popa
xor
push
and
shll
adc
adc
xor
orl
arpl
lock
pop
mov
push
xor
xor
adc
adc
subl
mov
outsb
jbe
pop
pop
push
rcll
inc
adcb
shll
aas
or
xor
iret
jl
xor
sub
xor
adc
lock
xor
ret
lcall
jg
rcrb
push
dec
insl
mov
inc
jbe
pop
xchg
add
jae
xor
xor
adc
xor
mov
call
adc
push
sbb
dec
mov
adc
inc
push
ret
xor
xchg
cmpsl
iret
pop
or
lret
in
push
out
adc
xor
syscall
cltd
sbb
iret
test
jbe
xor
inc
mov
jle
dec
sbb
push
inc
xor
cmc
lods
xor
test
or
lret
in
rol
cli
jp
xor
push
int3
mov
lock
xor
ljmp
jbe
xorb
fistpll
dec
fistl
faddl
mov
jmp
xor
inc
dec
jns
xor
dec
imul
pop
push
or
mov
mov
ja
neg
xor
repz
fsubr
or
pop
pop
jg
inc
xor
cmp
or
and
pushf
cmp
sub
mov
inc
inc
and
sbb
fidivrs
sbb
pop
push
bound
dec
adc
jmp
cmp
addr16
fwait
ss
lret
inc
ljmp
stos
xor
cmpsb
cmp
inc
into
insb
ret
lret
xor
les
cmpsb
push
jne
add
xlat
push
or
fucom
insl
popf
adc
aaa
stos
test
pop
xor
sbb
add
lods
mov
loope
cld
scas
mov
xor
imull
mov
shlb
cmp
mov
fwait
out
hlt
mov
mul
xor
pop
xchg
repz
sub
in
mov
push
and
jb
out
inc
xor
stos
mov
mov
xor
sbb
call
push
xchg
mov
ret
in
mov
leave
jle
or
out
xor
cltd
jmp
clc
mov
lds
aad
sub
das
xlat
dec
push
icebp
xor
outsl
in
or
cli
pusha
mov
mov
mov
lcall
jmp
imul
ffreep
mov
rcll
mov
mov
test
push
pop
aas
xchg
jno
adc
push
hlt
add
xor
xor
xor
and
sub
xor
inc
call
adc
pop
pop
out
and
leave
mov
shrb
pop
cmpsl
test
push
inc
cmp
popa
xchg
out
enter
sbb
pop
pop
js
or
and
lahf
push
xchg
mov
mov
inc
jns
cwtl
outsl
xor
idiv
out
roll
mov
xchg
fdivr
xor
xchg
jae
or
jp
cvtpi2ps
out
xor
mov
xor
loop
test
jbe
cmp
mov
and
add
imull
sub
adc
movsl
and
sbb
scas
shl
addb
ret
inc
addr16
xor
popa
repz
xor
mov
mov
push
cmp
xor
lahf
test
insl
push
pop
fnstenv
bound
xlat
mov
xor
inc
ljmp
arpl
stos
mov
xchg
ja
adc
xchg
inc
and
mov
insl
enter
sarl
mov
xor
in
mov
shll
and
dec
into
xor
loope
rcll
pusha
mov
in
and
jge
jg
fstpt
push
xlat
xor
mov
popa
out
cmp
test
push
mov
cmp
fcmovne
cmp
jnp
and
xlat
insl
ret
mov
add
adc
popa
sbb
das
movsb
xor
push
inc
into
jbe
rol
xor
cmp
mov
inc
lcall
das
xor
xor
and
add
fs
adc
ljmp
dec
sbb
or
cmp
sbb
mov
jae
ret
je
mov
daa
inc
cld
xor
call
xorb
sub
pushf
xor
pop
test
rcrb
xchg
jp
xchg
push
shr
mov
jb
pop
leave
dec
fcomp
sub
adc
ds
mov
cld
bswap
fdivl
daa
pop
hlt
adc
into
mov
stos
mov
cwtl
or
inc
adc
xchg
mov
je
movsl
and
daa
out
push
xchg
mov
int
adcb
or
push
pushf
jp
outsb
aam
mov
mov
dec
jne
xlat
xor
and
push
or
jg
int3
mov
mov
aad
jbe
mov
push
dec
inc
aam
pop
cmc
rcr
mov
or
mov
in
jg
rcrb
pushw
xchg
pop
outsb
xor
jp
mov
aaa
lods
movsl
xor
jecxz
push
inc
icebp
shll
mov
lds
add
mov
aam
mov
out
sub
and
mov
ja
xlat
mov
push
xor
nop
fldenv
push
ret
add
in
scas
or
fistpl
dec
incb
adc
push
adc
xor
pop
aad
xchg
daa
xor
mov
lds
cmp
pop
notb
xor
push
out
and
sahf
mov
xor
cmpsb
push
dec
ret
stos
cmp
movsb
adc
xchg
or
pop
les
inc
xor
nop
inc
dec
sbb
test
xchg
pop
or
lea
sbbl
xchg
jl
roll
xor
outsb
inc
sub
scas
call
ljmp
push
mov
push
jg
and
lret
fs
mov
xchg
add
push
mov
fistl
icebp
in
imul
pop
outsb
pop
inc
adc
roll
iret
jecxz
stc
idiv
and
mov
lahf
repz
sbb
dec
push
fdiv
aam
fldl
xor
pop
in
mov
jo
sub
icebp
jbe
sahf
ljmp
arpl
or
lods
not
sub
or
jno
and
fcmovne
xor
or
push
sarl
cmpsb
push
pop
mov
push
adc
add
push
je
dec
cmpsl
pop
or
fsubl
sbb
scas
test
or
lahf
jp
fs
xor
pop
xchg
rolb
jo
in
dec
or
adc
push
test
aas
sub
pop
inc
sbb
push
loope
fcmovnb
pop
xor
stos
adc
mov
xor
xor
fcompl
fwait
pop
pop
push
jge
sub
and
pop
or
imul
or
and
adc
cld
mov
cmpsb
mov
adc
cltd
arpl
push
int
fdivr
movsl
lock
adc
jo,pt
xchg
imul
enter
xor
daa
jle
inc
or
xor
xchg
aad
xor
push
bound
xor
or
sbb
and
into
mov
push
insb
jne
data16
jp
push
xor
dec
fists
or
lret
cmpsb
loopne
sub
cltd
xor
push
cwtl
pushl
fwait
fs
sbb
subl
xor
dec
scas
sub
xor
sub
test
mov
or
cltd
pop
xor
push
ficompl
xor
dec
push
pop
cmpsb
daa
fs
lods
fsubl
fstl
jae
push
mov
repz
push
rcrl
jge
ss
dec
and
sahf
mov
xor
mov
jo
hlt
out
xchg
ljmp
jecxz
mov
add
cs
hlt
adc
sti
negl
clc
and
stos
aad
mov
mov
xor
dec
dec
outsl
xor
push
mov
imul
xor
lea
loopne
in
fcoms
jbe
xor
or
jp
in
pop
or
scas
loope
jge
jb
adc
aam
push
and
es
cmc
cmp
mov
ret
mov
sbb
xor
jp
mov
xorl
icebp
pop
idivb
jmp
xor
sub
cli
push
dec
fiadds
pushl
sub
adc
ja
aas
jg
cmp
mulb
xor
sbb
mov
hlt
sarb
xchg
adc
int3
mov
test
dec
fldt
dec
xchg
jo
scas
pushf
push
sbb
fsubrs
or
jge
mov
shll
out
xchg
in
pop
xor
xchg
sub
outsl
scas
sub
stos
push
inc
inc
xor
mov
adc
daa
or
cmpsl
mov
call
adc
xorl
pop
leave
mov
xor
xchg
jg
jo
mov
js
or
arpl
inc
cld
shr
xchg
or
leave
push
xor
loopne
ja
sub
insb
xor
cmp
xor
mov
pop
xor
push
imul
and
ja
or
cmp
xchg
jg
xchg
jb
mov
iret
je
dec
xor
mov
xor
cmpsb
lret
adc
sub
push
push
insl
lods
daa
xchg
shlb
test
inc
fs
sbb
sbb
outsl
imul
mov
dec
push
add
jbe
test
cwtl
fs
imul
adc
mov
outsl
pop
dec
pop
add
stos
aaa
xor
dec
addr16
mov
aad
push
inc
adc
cli
nop
or
push
shll
les
fwait
xorb
mov
pop
ja
std
jb
jae
sbb
out
cs
sbb
mov
ret
inc
call
xor
adc
mov
mov
stos
into
inc
jmp
add
pop
pusha
adc
in
dec
pop
xchg
stos
xor
dec
or
scas
jns
pop
push
sbb
out
jno
scas
or
enter
xor
loope
ret
and
pop
jbe
push
sbb
xor
pop
and
sub
push
daa
mov
shrl
xor
inc
xchg
push
or
xchg
movsl
adc
xchg
jecxz
xor
jno
dec
inc
jl
xor
mov
xlat
aaa
lea
popf
add
xor
leave
shrl
les
lock
xchg
adc
sbb
je
test
xor
pop
adc
mov
sbb
pusha
into
stos
adc
mov
fcoml
shll
sarb
cwtl
fsubr
xchg
push
pusha
mov
and
xor
gs
mov
js
mov
xor
roll
mov
outsb
push
loope
repnz
test
roll
cs
xor
jle
mov
pop
push
insb
cmpsb
or
and
cmp
xor
repz
cmc
adc
adc
mov
xchg
jge
jl
xor
sub
outsb
xor
fildll
out
sub
call
mov
jno
fidivs
pop
lcall
or
xor
mov
xor
sub
out
ljmp
in
xchg
mov
shrl
mov
sbb
pop
or
xor
filds
mov
ds
xchg
or
or
adc
in
fstps
push
xchg
daa
stc
xchg
xchg
outsl
mov
inc
push
pop
xor
sbb
aad
xor
jg
or
pop
jo
sarb
adc
lds
and
in
mov
in
xor
pop
xchg
test
lock
cmp
test
xor
pop
call
xchg
xor
pop
scas
fisubl
and
arpl
xor
out
dec
cmp
jge
inc
and
cmpsb
dec
xor
cs
pop
add
mov
out
or
sar
fwait
test
jno,pt
push
xchg
and
bound
je
xchg
fwait
inc
ljmp
xor
je
mov
cmpsl
data16
xlat
cld
and
mov
inc
push
pop
dec
subb
inc
popf
xor
fistpll
ljmp
add
push
pop
mov
xchg
xor
data16
aad
lahf
popf
xor
clc
test
add
jnp
outsl
out
pop
mov
jo
xor
jne
sub
xchg
push
push
dec
les
in
sbb
push
pop
js
icebp
subl
or
inc
xor
mov
or
mov
scas
mov
negl
push
mov
mov
in
sbb
out
xor
mov
push
jno
xor
dec
repz
fisubs
adc
sti
mov
lock
sub
mov
fs
inc
cmp
xchg
repnz
xchg
cmp
adc
xor
subl
xlat
movsl
xor
pop
xchg
jmp
pop
sbb
jg
mov
out
lods
inc
adc
pop
jne
xchg
mov
push
je
jge
and
xchg
mov
cs
aaa
adc
ss
iret
push
inc
adc
sbb
sahf
iret
xchg
adc
xor
notl
fimull
xchg
lahf
xor
loopne
int3
jo
repz
jecxz
add
enter
hlt
shlb
imul
mov
jmp
push
sarb
enter
cmp
jmp
aas
and
lret
dec
push
push
push
xlat
add
mull
xor
icebp
add
pop
add
jo
popa
mov
in
push
dec
jmp
xlat
and
outsb
ja
xorl
aaa
dec
or
sbb
mov
shl
cmpsl
pop
mov
insb
imul
jmp
jo
or
xchg
pop
insl
adc
addr16
sub
xchg
loop
mov
cmp
xor
add
jns
gs
int3
pop
xor
and
and
add
xor
xchg
jle
sarl
and
nop
pushf
pop
cmp
fbld
fnsave
jecxz
sbb
xor
adc
add
and
repz
ss
fsubrs
test
add
inc
and
int3
es
lcall
inc
orl
je
sub
test
or
rcr
push
xchg
xor
xor
push
orl
xchg
push
sub
push
xor
andb
push
pop
fdivs
sbb
inc
jp
sub
movsb
inc
orb
popa
insl
sti
ret
push
arpl
xchg
xor
movsl
int3
dec
inc
jns
mov
stos
testb
popfw
in
ja
adc
pushf
fwait
dec
and
jbe
fisubrs
or
es
mov
pusha
dec
xchg
out
pop
mov
adc
jbe
outsb
mov
xor
dec
sahf
and
sbb
aad
cmpsb
pop
xor
mov
xlat
addr16
hlt
pop
xor
xor
dec
mov
imul
xor
and
sahf
xor
xor
mov
loop
cmpsl
repnz
mov
jns
lahf
push
jbe
mov
and
pusha
sahf
push
or
loop
les
push
dec
xor
jle
xor
pop
test
xor
mov
xor
push
in
xchg
call
xor
jmp
addb
mov
mov
add
or
jns
pop
fcmovne
pusha
mul
sbb
jle
sub
sbb
push
mov
cmp
mov
xor
inc
pop
mov
push
push
movsb
jp
gs
mov
enter
test
bound
imul
xchg
arpl
xor
sbb
incb
cli
xor
pop
daa
in
call
imul
xchg
sub
xor
call
push
outsl
xor
and
adc
negl
xor
roll
cmp
push
cmp
mov
in
mov
movsl
or
stc
fnsave
dec
mov
stos
sbbb
and
add
mov
xor
push
imul
rcl
and
ficoml
sub
jae
cmp
add
cmp
ret
jne
shrl
push
sub
stos
adc
xor
ja
pop
sub
ret
hlt
cmp
mov
in
push
ljmp
push
push
mov
ret
inc
sub
cmpsb
mov
ret
loopne
imul
out
xor
pushf
ret
push
pop
or
xchg
icebp
add
or
add
jp
xchg
decb
lahf
rcll
jns
outsl
icebp
and
pop
out
sti
jne
adc
pusha
xor
xchg
cmp
test
rcll
mov
pop
adc
pop
gs
jmp
sahf
bound
mov
xor
mov
mov
adc
sti
in
xor
inc
out
mov
adc
call
imul
xor
push
ljmp
adc
add
out
shlb
pusha
xchg
jg
mov
jne
imul
enter
xor
gs
pop
movsb
sahf
xor
dec
leave
xor
push
test
adc
xchg
push
mov
adc
lods
fildll
and
gs
xor
mov
movsb
xor
lock
inc
push
jle
push
mov
pop
cs
outsl
jp
jne
lods
and
xchg
jb
aad
push
jl
pop
dec
fwait
mov
insl
push
cmpsb
xor
int3
in
lods
icebp
xor
push
or
push
cmp
adc
push
ret
push
push
lds
movsb
fsts
sub
jg
xor
and
loop
popf
sub
push
cli
lahf
fs
xor
test
or
mov
fsubrs
xor
push
lcall
addr16
and
pop
jecxz
loope
and
xor
dec
data16
and
cmp
add
cmc
shl
js
adc
pop
push
push
mov
sub
xor
in
dec
xor
jae
and
add
out
pusha
jg
pop
mov
adc
daa
rolb
xor
mov
mov
imul
es
xor
cmp
insl
dec
xchg
lock
xor
lret
adc
repz
js
or
jns
push
pop
fisttpl
xor
push
fs
shrb
jecxz
loope
adc
jg
ja
movsl
xor
call
je
xor
test
mov
cli
add
dec
sub
iret
popf
pop
add
bndstx
std
shll
push
inc
movsl
jecxz
pop
fadds
repnz
mov
pop
add
aam
jnp
mov
xor
daa
cltd
cmp
jbe
mov
cmpsb
decb
insb
xor
push
xchg
push
stos
rcll
in
mov
pop
inc
adc
ja
add
add
push
hlt
fidivl
sub
lret
out
xchg
xor
cli
int3
daa
adc
pop
xor
fimuls
inc
push
add
jle
neg
dec
or
mov
ficoml
xor
mov
dec
cmp
call
mov
lods
sub
jbe
cwtl
xor
sbb
sbb
cmp
jle
rcll
ret
xor
dec
sub
xor
cmpsb
stos
mov
les
inc
enter
xor
out
out
mov
cmp
lret
xor
divl
jnp
xchg
ret
adc
lods
lock
mov
dec
xor
jecxz
hlt
sub
mov
popa
repnz
push
or
sbb
jns
cmpsb
jg
inc
push
das
and
scas
lods
and
jae
icebp
popf
pusha
or
mov
aas
xor
in
ljmp
movsl
xchg
les
call
int
sbb
xor
cmp
aad
rcrl
mov
jns
xor
stos
aam
mov
or
jbe
fbld
sahf
mov
fsts
jne
inc
das
add
mov
push
or
sub
not
xor
cltd
xor
shl
and
jae
loop
lods
and
mov
push
pop
jb
jle
cmp
movsb
cmp
arpl
xor
sbb
enter
jns
mov
xor
rclb
leave
fs
mov
adc
push
and
call
movsb
rorl
dec
or
push
lock
xor
sbb
xchg
xchg
mov
xor
loopne
or
notb
ficoms
lahf
pop
outsb
rcl
inc
xor
dec
push
xor
mov
and
sbb
outsl
loope
push
jle
inc
xor
sub
into
mov
bound
and
movsl
xor
adc
test
mov
mov
in
mov
and
stos
mov
sbb
mov
repz
aam
push
lret
inc
add
or
xor
mov
in
ljmp
sub
test
and
fwait
aam
hlt
popf
cli
cld
inc
roll
adc
mov
mov
cmpsb
stos
lcall
out
lea
aad
sbb
jb
mov
nop
xchg
gs
lcall
fcoml
cmp
movsb
push
push
inc
leave
test
mov
mov
jnp
or
push
push
mov
cmp
fldt
jle
sub
mov
pop
ret
mov
outsl
adc
xchg
jnp
cmc
dec
push
push
mov
out
and
outsl
xor
sub
cmp
fiadds
lret
jp
lods
push
mov
xor
pop
in
jge
push
jb
dec
xor
pop
mov
mov
push
out
ja
ret
xchg
lds
test
cs
mov
xlat
fcmovb
jge
or
bound
xor
int
ja
jmp
dec
xor
push
push
mov
loop
jle
xor
imul
outsb
loope
sub
and
xchg
aas
xor
ljmp
xor
or
mov
icebp
rcrl
xchg
pop
pop
add
aaa
pushf
in
push
and
xor
call
ret
inc
xor
xchg
push
xor
xchg
xchg
adc
neg
repz
xor
or
rcll
xor
jle
loop
push
cmp
pushf
andl
insb
mov
out
mov
adc
rcr
add
clc
pop
test
xor
scas
and
push
cmp
or
fldt
add
pop
popa
xorb
into
xchg
int3
dec
or
mov
mov
mov
ret
scas
xor
xchg
mov
adc
sbb
ljmp
push
das
je
test
int3
enter
and
adc
in
sbb
sub
insb
rcll
rorl
test
repz
jo
pop
mov
lcall
lods
ror
lret
inc
shll
inc
or
xchg
xor
mov
xlat
pop
xchg
adc
xchg
insb
popl
jno
iret
pushf
xor
dec
dec
mov
jmp
jnp
inc
inc
and
fdivrs
pop
dec
pop
jmp
pop
pop
je
xor
push
scas
sub
cltd
and
dec
std
and
cld
xor
testl
cmc
xchg
sarl
xor
stos
xor
aaa
or
fidivrl
ret
test
inc
xchg
xor
call
out
push
cmc
or
in
das
popf
cs
adc
mov
and
shlb
cmp
pushf
inc
jge
push
lcall
repnz
sub
inc
xlat
jbe
xor
leave
mov
lds
js
dec
popf
inc
cmp
ds
nop
je
scas
mov
fwait
sub
dec
jmp
cli
mov
nop
xchg
scas
cmpsl
pushf
cwtl
or
fcomps
int
adc
es
lcall
xor
imul
movd
dec
push
sbb
andb
xchg
mov
scas
fwait
das
or
je
add
sbb
adc
sbb
dec
mov
xor
fwait
test
mov
or
cmp
cmp
xor
mov
imul
mov
push
mov
popf
ficoml
sub
xchg
cmp
mov
in
aam
sbb
xor
pushf
jle
pop
pop
movsb
dec
xor
fcmovbe
loop
cmc
leave
mov
inc
xor
mov
push
and
arpl
or
mov
mov
outsl
jnp
mov
cmpb
sbb
push
adc
or
into
xor
and
inc
data16
xor
pop
pop
mov
add
mov
mov
mov
add
outsl
loop
sub
out
roll
adc
push
iret
pop
imul
out
cli
jecxz
sbb
inc
cs
fidivl
div
fsubr
lahf
addr16
inc
xor
sub
mov
or
cmp
mov
push
in
sub
xor
lcall
loop
xchg
sar
out
loope
mov
out
sbb
mov
dec
xor
imul
pop
push
pop
xchg
mov
rcrl
mov
cltd
test
jp
popa
mov
cmp
inc
mov
xchg
dec
mov
xor
inc
enter
xor
inc
test
mov
add
xchg
into
sub
jl
adc
mov
and
push
xchg
out
hlt
xor
push
add
cld
movsl
incb
cmpsb
jecxz
adc
xor
dec
stc
ret
movsb
dec
outsl
sbb
dec
hlt
xor
loopne
rorb
ja
jo
pop
xchg
add
ljmp
rorl
mov
and
jnp
push
cmp
outsl
adc
pop
xor
stos
mov
mov
push
shll
aad
xor
je
sub
push
test
mov
xor
mov
fnstenv
and
addb
push
xchg
sub
sub
jnp
xor
pop
jl
add
dec
xlat
dec
cmp
cmp
mov
outsl
adc
ja
insb
push
cltd
xchg
mov
xor
jmp
fwait
jge
scas
clc
xor
ds
stos
push
and
mov
push
andb
pop
push
push
fdivs
in
push
les
loop
or
fidivs
cld
dec
mov
mov
ja
arpl
jmp
xchg
test
and
addb
jp
adc
out
movsb
jge
int3
sub
cwtl
lea
push
and
xchg
dec
ret
xor
mov
xor
sbb
int
fistl
xchg
stos
adc
notl
xchg
and
aam
push
test
cmpl
dec
sbb
data16
enter
sbb
and
dec
ljmp
rclb
aad
xor
xchg
push
lcall
in
popf
fsubl
out
mov
jnp
sbb
repnz
xor
addr16
mov
mov
mov
mov
and
mov
cmp
cli
xor
or
je
mov
dec
insl
and
xlat
inc
aam
addr16
mov
fistps
scas
adc
xchg
pop
add
ljmp
call
xor
scas
scas
jne
test
sub
repz
dec
cmpsb
xchg
cmp
pop
jecxz
xor
sub
lds
add
mov
jmp
ss
pop
into
cmpsl
arpl
gs
das
movsl
jp
cld
and
push
mov
xchg
fdivs
lock
sub
mov
and
sarb
and
pop
jp
adcb
add
cmc
or
xor
inc
jae
mov
xchg
pop
scas
xlat
fs
adc
int
jecxz
mov
xor
mov
sbb
out
xor
sbb
pop
cmp
mov
push
cld
lock
test
pop
int3
in
jb
push
and
iret
xor
notb
or
subl
jge
xchg
mov
inc
push
mov
cs
sbb
push
iret
xor
lea
fstpt
push
aad
adc
sarb
dec
aaa
sbb
pop
insb
or
push
inc
popf
cmp
loop
mov
rorl
xor
mov
aad
cmp
ret
push
popa
mov
jae
ss
sbbb
out
fs
mov
xor
aaa
xor
mov
es
add
pushf
js
push
or
add
ja
out
dec
mulb
mov
jge
and
cwtl
cmp
inc
mov
jl
lea
push
dec
lret
sbb
inc
and
jbe
jecxz
push
and
stos
or
bound
sbb
iret
aad
call
push
imul
add
dec
xor
inc
push
xchg
insl
push
inc
xor
notl
scas
insb
int
add
and
mov
out
popf
inc
ds
cmp
and
xlat
call
je
daa
xchg
jmp
and
sbbb
inc
sub
push
popa
ss
fdivs
or
sbbl
rorb
or
je
xchg
xor
enter
push
xor
push
stc
rorb
xchg
jp
jno
xlat
mov
sub
xor
inc
jmp
cmp
xor
js
pop
xor
out
es
lds
xchg
test
and
or
loop,pt
xor
cmp
pop
rcll
dec
pop
es
push
sub
add
sub
mov
jl
push
test
clc
call
repz
ds
je
xor
stos
add
adc
or
call
dec
fs
cmpsl
neg
cmp
pop
fimuls
push
xor
insl
enter
mov
mov
xchg
xor
rclb
lods
adc
mov
lds
sbb
xor
in
push
pop
lret
xor
mov
shrb
and
les
daa
decb
ja
icebp
mov
mov
or
or
je
repnz
dec
js
add
jmp
rcrb
or
xor
adc
movsb
and
jbe
jle
sub
xor
inc
jo
xor
or
hlt
push
and
xor
inc
pusha
jne
xchg
js
imul
dec
pop
adc
xor
std
xchg
das
icebp
xor
scas
ljmp
add
aas
lret
fldcw
xor
and
mov
cmp
js
sbb
pop
jbe
xor
xchg
cmc
xor
in
loopne
jle
push
and
xor
aaa
and
fwait
pop
and
sub
popa
xor
push
jle
xor
xor
push
lret
or
xchg
xor
mov
aas
in
inc
lock
outsb
popf
jo
xor
stos
outsb
ret
add
xchg
cmp
jmp
sub
dec
push
xchg
iret
sub
pusha
xor
adc
mov
aam
jg
xor
xor
les
xchg
scas
xor
add
pop
jbe
mov
cmp
bound
and
testb
sbb
adcb
push
jmp
leave
mov
push
aam
sbb
mov
inc
xor
testl
and
out
push
mov
fidivs
xchg
and
je
js
stos
in
dec
mov
dec
xchg
daa
cmp
test
or
stos
xchg
in
add
js
pushf
pusha
int3
mov
inc
int
xor
jp
push
test
or
xor
xor
mov
stos
xchg
xor
mov
dec
xor
xor
xchg
xchg
jg
mov
repz
clc
rorl
das
adc
adc
pop
push
sbb
out
je
imul
adc
ja
inc
fcmovnb
mov
daa
and
fcompl
push
sbb
sub
mov
sti
cmp
mov
jle
js
bound
cmc
pop
mov
push
repz
call
cmp
xor
sub
in
sbb
fldl
or
or
outsb
iret
in
mov
or
imul
dec
into
pop
mov
push
push
mov
push
jne
int3
dec
decb
mov
mov
add
out
outsl
popf
test
xor
jne
jbe
mov
or
push
xor
adc
mov
and
xchg
shll
cmpsb
dec
xchg
and
aam
and
fwait
lods
pop
inc
mov
adc
ljmp
push
inc
mov
dec
divb
xor
pop
and
xor
aaa
jecxz
or
adc
mov
xor
ret
xchg
cli
sti
lcall
out
jns
in
xor
inc
pushf
or
aaa
fdivl
scas
jno
adc
inc
aas
jle
mov
xorb
testb
cmpsl
lock
pop
xor
jnp
mov
mov
sti
mov
loope
add
dec
xor
xor
xor
loope
jecxz
out
and
inc
xchg
les
or
test
or
mov
adc
push
cmpsb
in
popf
xchg
mov
mov
jp
adc
iret
dec
xor
popf
xor
jmp
push
push
cmpsb
xor
jb
jae
sbb
pop
jle
sbb
xor
pop
dec
inc
xor
sub
stos
test
xorl
sub
in
jmp
in
popf
pop
idivl
inc
insl
mov
js
rolb
xchg
adc
dec
bound
xor
push
repnz
dec
out
pop
push
sbb
push
inc
test
add
xorl
mov
adc
out
mov
jle
mov
or
cld
mov
or
xor
nop
pop
fwait
test
push
in
mov
pop
adc
fildl
and
mov
call
pop
xor
cld
in
mov
dec
dec
push
or
or
sbb
les
xchg
movsb
lds
xor
xchg
scas
dec
lods
add
xor
repz
sub
or
mov
stos
push
or
jnp
pop
in
sbb
lcall
adc
mov
xchg
insb
xchg
push
mov
fisubrs
jns
mov
pop
adc
in
fldt
lret
fcoml
adc
mov
popf
divl
jge
orb
sbb
data16
loope
xor
sub
aas
loopne
push
mov
xchg
or
xor
rep
divb
loope
imul
inc
mov
mov
sbb
xchg
roll
outsb
and
rorl
ret
test
out
sbb
xor
mov
ljmp
insl
xor
add
dec
loopne
adc
dec
sbb
mov
push
sbb
test
sub
sti
orl
pop
jo
or
andb
das
xchg
into
mov
jb
ret
arpl
fcomps
sub
xor
test
lods
stos
sbb
lea
cmc
outsl
fwait
inc
mov
iret
fsts
lock
in
xor
dec
jbe
mov
mov
test
in
data16
arpl
xchg
push
mov
imul
das
lret
pusha
orb
ljmp
xchg
mov
xchg
push
subb
pusha
add
xchg
inc
xor
inc
xchg
jl
and
adc
ljmp
dec
mov
or
xchg
ret
lds
addr16
movsb
leave
fstpt
insl
add
test
pushf
push
fildll
mov
rcll
sbb
ret
cmp
outsl
xor
cmpl
sbb
icebp
sti
push
inc
out
call
scas
jnp
loop
ja
xor
adc
mov
cmp
xor
mov
shlb
xor
test
mov
xor
sub
xor
inc
push
pop
inc
xchg
loope
int3
adc
jno
push
sbbl
sub
xchg
stos
mov
xor
xchg
sbb
in
loope
and
pop
push
mov
sub
imul
sbb
jecxz
fsts
pop
dec
mov
cli
shlb
in
or
xor
ja
shll
cwtl
xor
xchg
pop
push
cmp
add
out
int3
lret
mov
clc
fisttps
inc
xor
sarb
int
enter
test
or
out
jno
jg
mov
sbb
mov
jo
call
int3
idivb
jge
mov
pop
sbb
adc
push
ljmp
xlat
mov
mov
gs
xor
movsl
lds
icebp
leave
addr16
dec
sbb
rorb
adc
xor
jae
lcall
xchg
add
pop
rorl
test
xlat
xchg
xor
xchg
or
push
xchg
in
add
sub
loopne
dec
jns
loope
mov
and
clc
xor
idivb
xchg
cmpsb
cli
pushf
mov
mov
loopne
jmp
outsl
xchg
xchg
adc
loop
sbb
push
cmc
pop
jo
les
dec
sub
pop
mov
sbb
jg
pop
aad
ss
lahf
pop
dec
mov
fcomip
xor
loopne
out
aaa
jnp
sub
jno
jae
cs
push
mov
int3
sarl
xor
dec
out
xor
fisttpll
lods
shrb
clc
cmpsb
pcmpeqd
sbbb
sbb
fidivl
jb
sub
mov
dec
mov
xchg
mov
pop
or
jo
pushf
push
movsb
cs
pusha
xchg
and
iret
or
sbb
fdivrp
test
and
mov
loop
mov
mul
push
out
stc
push
cmpsl
xor
icebp
xor
jmp
lcall
sbb
shll
lds
push
mov
jp
sub
in
pop
loope
shlb
push
inc
pop
imul
aas
test
scas
lea
xor
fwait
xor
ret
xor
out
ljmp
xchg
mov
jbe
in
xchg
fidivl
xor
lods
jp
jl
and
test
xchg
icebp
xchg
je
ret
jne
adc
jnp
add
std
mov
cmpsb
arpl
xor
pop
movsl
fstp
pop
inc
pop
jo
bound
cmc
dec
mov
cmc
inc
xchg
adc
icebp
lea
outsb
es
cld
and
or
jmp
jl
imul
push
lea
shrl
cli
pop
movsl
pop
ss
xchg
push
loope
int
jb
mov
hlt
push
xor
ljmp
xor
mov
mov
push
ret
push
imulb
subl
hlt
les
or
stos
out
rorl
insl
push
inc
in
popa
xor
sub
xor
jp
iret
xor
outsl
aam
adc
pop
adc
mov
sub
adc
jl
mov
push
aad
mov
pop
push
loop
jmp
cmp
aam
adc
scas
sub
sub
rcr
dec
mov
lcall
jmp
daa
xor
cmc
mov
and
adc
in
mov
xchg
leave
xor
jge
mov
jle
xor
jnp
icebp
stos
rol
leave
jo
loopne
lea
xchg
icebp
cs
ds
and
adc
andb
imul
inc
adc
jg
fnstsw
sub
cwtl
xchg
adc
fs
cmp
fists
scas
or
int3
xor
push
xor
mov
mov
xor
pop
pusha
sub
inc
out
pop
enter
xchg
add
sub
cmp
inc
sub
or
testl
push
cs
sub
daa
xchg
movswl
cmp
push
inc
cmpsb
jae
pop
and
shl
jmp
iret
push
ret
adc
std
xor
jge
push
jnp
sub
pop
cmpsb
add
mov
xor
sub
imul
xor
push
fimuls
dec
jl
xchg
leave
xchg
push
mov
sbb
out
fldenv
testl
push
adc
jecxz
push
into
test
xchg
sbb
xor
cmp
push
sbbb
xor
adc
test
pushf
mov
enter
ret
and
xchg
xor
lds
xor
stc
or
xor
bnd
jecxz
shll
inc
loop
push
cmc
adc
xlat
pop
and
jg
les
add
push
scas
cltd
inc
hlt
xor
dec
sub
outsl
clc
in
enter
xchg
test
xor
add
aam
adc
push
push
lods
repz
push
cmpsb
fnstenv
jl
out
fidivrs
lock
xchg
outsb
aas
inc
daa
xor
jp
jle
jne
sti
ja
pop
xlat
test
rorb
scas
lock
scas
mov
adc
addr16
xor
mov
data16
rep
rorl
cld
dec
loope
and
insl
test
pushf
mov
xchg
mov
and
ror
jmp
call
in
pop
jne,pn
xor
pop
or
push
adc
jge
xchg
jne
pop
xchg
lock
notb
and
ret
fwait
ret
repz
xor
loopne
mov
xor
adc
cltd
adc
cmpb
insl
lret
mov
iret
mov
sub
or
inc
and
out
push
mov
jne
xchg
push
jp
mov
xchg
in
adc
push
jb
addr16
xchg
cmp
jae
or
jbe
ljmp
insl
out
into
test
mov
outsl
inc
adc
lock
pop
loop
int
jmp
pusha
add
adc
fsubr
dec
cmp
push
nop
fcoms
fs
pop
xor
ficoms
mov
xchg
leave
inc
jns
jmp
cmc
mov
cmp
adc
xor
mov
pop
push
mov
and
inc
les
mov
and
or
inc
dec
mov
pop
xor
mov
push
imul
sbb
repnz
mov
icebp
cmp
pop
jp
inc
add
dec
xor
mov
cmpsb
xor
loopne
and
pop
xchg
fcompl
adc
sarl
xchg
in
pop
push
mov
fistl
and
push
xor
iret
cmpsb
sbb
sub
xchg
adc
push
push
mov
repz
adc
pop
loope
xor
cmp
push
xor
ret
push
xchg
push
jns
inc
dec
push
pusha
or
nop
jo
lea
rolb
or
push
pop
shlb
mov
push
add
mov
ret
aaa
xor
and
xor
jecxz
rdtsc
add
mov
xor
in
cli
adc
test
adc
and
adc
jp
jg
inc
dec
inc
repnz
mov
sub
xor
clc
lret
or
mov
adc
aam
test
inc
lret
mov
insl
sar
xor
ret
fs
out
xchg
xor
jns
clc
divl
fmulp
xor
inc
movsb
dec
adc
ret
ret
xchg
and
sub
push
mov
es
insl
xchg
pop
or
fmull
nop
or
lods
push
pop
sub
es
cli
push
inc
and
popf
pop
mov
mov
lods
stos
loope
aaa
addr16
cmp
jo
jp
sub
push
pop
subl
inc
jb
and
dec
imul
dec
xor
pushl
xchg
push
and
cli
test
inc
je
cmp
iret
movsb
aaa
mov
sbb
sbb
int3
lahf
pop
mov
into
mov
dec
mov
jo
xor
pop
or
add
sti
jl
sbb
xor
lahf
jle
in
scas
pop
fnsave
mov
call
lret
or
adc
movb
stos
xor
adc
xor
fdivrl
sbb
adc
das
test
clc
xor
mov
or
push
cmp
jle
sbb
testb
fnstenv
sbb
pop
xor
dec
xor
sub
or
test
cmp
cmp
xor
scas
loop
add
xor
hlt
popa
pushfw
lea
loopne
shrb
adc
mov
out
xor
jb
cmp
sbb
mov
adc
rol
push
stos
pop
mov
mov
and
pop
cmp
or
add
bnd
xor
roll
push
scas
ret
scas
arpl
rcl
enter
cwtl
rol
adc
loope
out
pop
rcr
hlt
jl
imul
xor
and
xor
or
mov
push
pop
jle
pop
pop
repz
xor
or
push
push
pop
inc
dec
inc
dec
sbb
shlb
pop
clc
mov
mov
or
jge
fcom
lock
xlat
or
pop
push
push
ds
test
insb
push
jle
cmpb
int3
mov
in
and
mov
push
mov
mov
dec
shr
ficoml
push
xor
jae
subl
xor
jecxz
mov
xchg
test
out
outsb
or
sub
sbb
push
and
mov
cli
lods
icebp
pop
pushf
cmp
sbb
xor
enter
popa
mov
sbb
sub
inc
imul
cld
dec
icebp
mov
and
mov
mov
shlb
xchg
dec
xchg
xor
or
sub
ljmp
jecxz
and
outsl
loopne
pop
or
and
mov
test
data16
call
adc
lods
push
mov
adc
xchg
cmp
mov
adc
add
dec
adc
pushf
lret
sbb
jo
push
aas
sub
mov
jge
cmovnp
lcall
jae
inc
xchg
xor
out
adc
xor
stos
movsb
sbb
icebp
lods
repnz
cmpsb
out
shrl
loop
push
inc
pop
cmp
and
imul
xor
cltd
push
sbb
xor
test
data16
ljmp
enter
mov
popa
and
push
adc
xchg
xor
cmp
mov
mov
call
push
adc
lea
jae
sbb
adc
jp
scas
xor
sbb
rcrb
aam
gs
loopne
pop
xor
push
repz
xchg
ljmp
ds
xor
ret
xor
int
push
pop
push
test
xor
cld
xchg
pop
int3
aas
xchg
ficoml
xor
in
inc
sbbl
cwtl
mov
icebp
pop
dec
loope
iret
mull
mov
push
aad
mov
xor
ljmp
sub
repnz
loop
xor
popf
pop
inc
jge
jge
int3
xchg
lcall
pop
call
nop
insb
mov
pop
jecxz
repz
jg
cmpb
nop
mov
adc
bnd
push
push
add
add
sti
sub
push
lret
xor
hlt
adc
xor
filds
lods
jle
jbe
xor
daa
and
pushf
sbb
cmp
call
mov
adc
mov
push
adc
xor
mov
inc
mov
push
ss
cltd
xchg
or
sub
popf
dec
jmp
pop
xor
outsl
inc
inc
repz
mov
lods
mov
pop
cmp
mov
aad
je
sbb
out
xor
mov
pusha
testl
es
in
test
xor
inc
mov
jb
push
faddl
je
pop
nop
sti
mov
sbb
int3
xor
sub
ljmp
and
imul
xchg
or
add
sbb
xor
fwait
pop
pop
push
sbb
or
scas
pop
fidivrl
out
shrl
push
adc
jnp
or
add
jae
cmp
cmp
ja
inc
into
stos
or
xor
inc
ja
mov
sbb
ds
lahf
or
rcrl
loope
cmp
xor
fidivl
mov
adc
int3
into
add
inc
mov
sub
mov
into
dec
fs
sub
jbe
stos
mov
xchg
rorl
aas
jne
xor
cmp
cmpsb
shrb
xor
js
xor
int3
int
cmpsl
leave
fdivs
addr16
movsb
shlb
mov
fisubs
adc
pop
rcll
xchg
xor
sbb
jne
pop
sahf
test
push
add
xchg
xchg
mov
push
add
push
xor
push
mov
mov
cwtl
jne
mov
and
fstpl
push
adc
outsl
loope
mov
outsl
scas
and
xor
out
cwtl
cmp
pop
cmc
arpl
jnp
gs
cmp
jbe
mov
stos
rcrb
test
xor
arpl
add
pop
jle
aam
jo
xor
jg
clc
shlb
mov
xor
jp
cmp
pop
aad
and
and
mov
stos
mov
xchg
mov
push
shrl
stc
es
xor
mov
cmp
mov
imul
mov
mov
xchg
inc
sbbb
int
jns
or
fsubr
jno
jae
lahf
mov
sarl
std
mulb
sbb
insl
push
js
ret
push
mov
xor
xor
pop
lcall
jecxz
xor
bound
jg
es
add
xor
pushf
jmp
push
cmc
xor
or
mov
xchg
mov
push
lret
loop
xchg
test
inc
xor
sub
rcll
stos
xor
mov
or
push
or
movsl
push
std
sbb
xchg
jp
or
cmp
test
lret
fimuls
xchg
sarb
shll
in
or
push
insb
fbstp
sti
fwait
prefetchwt1
jb
into
out
or
ffreep
mov
adc
cli
and
or
mov
push
push
push
je
repnz
inc
cli
xor
les
adc
mov
or
xlat
sub
insl
push
push
ret
xor
cmpsb
popa
pop
xor
movsb
imul
int3
mov
mov
rcl
adc
cmc
fimuls
jmp
inc
loopne
clc
xor
sbb
inc
sub
xor
fs
xor
in
fisttpll
xor
sbbb
or
sbb
adc
out
ret
sbb
mov
inc
mov
fsubrl
in
sbb
inc
adc
pop
jbe
lock
pushf
shll
push
loope
out
aas
lods
xor
movsl
adc
scas
into
cmpsl
sbb
shll
js
add
in
std
ret
int
ja
fstps
ljmp
pop
dec
sbb
stc
andb
mov
daa
ljmp
js
sub
fwait
sub
fistps
xor
fdivl
mov
sub
pop
xor
push
push
mov
add
mov
inc
fstl
daa
xor
jns
xor
movsl
xor
ja
xchg
nop
mov
jns
mov
pop
cmp
aad
and
out
lods
rclb
cmp
loopne
jg
test
mov
sub
fwait
cmp
sub
fsts
add
inc
or
ljmp
push
js
pushf
sub
push
xchg
lret
fldl
lock
xor
ja
push
lahf
in
cmp
push
adc
xor
mov
jg
xor
popf
movsl
orb
add
sub
in
jne
repnz
xor
mov
sub
cmp
shll
pop
mov
mov
xor
aas
inc
xchg
mov
int3
xor
cli
push
mov
jecxz
lcall
xor
and
outsl
aaa
xor
mov
add
push
out
rorl
sub
mov
jns
lahf
loope
inc
ja
gs
adc
fistps
in
pop
cmpsl
sbb
fcom
in
sub
lcall
mov
cli
mov
xchg
dec
je
popf
dec
adc
or
mov
movsl
mov
ja
insb
orl
imul
push
cmp
outsb
sbb
mov
mov
mov
sbb
xor
pop
adc
mulb
mov
jmp
mov
pop
jbe
or
scas
andl
push
pop
jecxz
push
pushf
adc
icebp
outsb
xor
push
cmc
popf
sbb
imul
jne
int
xor
fstpt
add
int3
insl
ja
sbb
in
imul
cmp
pop
and
add
out
jns
xor
fisubl
jo
mov
xlat
or
and
jne
xor
add
test
pusha
out
mov
inc
adc
mov
mov
cmp
and
lahf
mov
xor
scas
mov
mov
sti
js
xor
or
loop
in
popf
rcrl
adc
pop
jbe
cmp
push
xlat
addr16
popf
fs
jmp
add
fimull
xor
mov
and
daa
sub
pushf
or
xor
insb
pop
mov
or
cbtw
mov
divl
scas
testb
aaa
adc
sub
das
or
mov
idivl
push
sub
mov
push
arpl
nop
sub
mov
aam
fs
mov
les
pop
jecxz
dec
xor
cld
leave
sbb
jno
fidivl
mov
xchg
cmpsb
jp
sbb
hlt
dec
adc
in
js
cmp
mov
jp
xor
andps
and
dec
xor
fadds
xor
in
fisttpl
rol
pop
in
jne
or
mov
push
inc
xor
inc
jg
jl
mov
adc
xchg
pusha
cmp
outsl
xor
jecxz
sbb
or
adcl
ljmp
cmc
xchg
xor
push
pop
enter
xchg
or
jge
arpl
test
xchg
in
adc
mov
add
sub
xor
xor
roll
test
mov
adc
stc
loopne
ja
mov
xlat
sub
xchg
inc
loope
mov
xor
pop
mov
out
dec
add
xor
xchg
push
js
mov
daa
xor
lahf
xor
roll
shlb
aaa
jmp
rcll
xor
lods
pop
adc
push
xor
mov
jne
inc
push
mov
fcmovne
xchg
lcall
enter
dec
inc
adc
notb
addr16
aaa
xchg
dec
repnz
pop
out
adc
cmp
push
enter
into
shll
mov
in
add
sub
adc
or
rclb
add
jmp
push
push
cmp
orb
cmpsl
mov
xchg
lcall
notb
xor
pop
adc
xor
pusha
jmp
ficoms
inc
shll
pop
push
mov
mov
mov
out
xchg
stc
pop
mov
adc
out
roll
movsl
jge
or
test
ja
and
aam
or
mov
in
push
pop
lods
mulb
shrb
ss
inc
fstpt
sub
xor
outsb
mov
mov
jb
outsb
mov
add
fsubs
xchg
jl
fsubrs
adc
fidivl
xor
repz
inc
stc
shl
in
cmp
int
enter
out
inc
push
scas
or
pop
inc
popa
jge,pt
lods
push
and
daa
shlb
sub
test
aam
arpl
ret
fcoml
xchg
xor
add
xchg
xor
aaa
subl
add
xchg
cli
xchg
sub
inc
rorl
movsb
out
lea
push
push
add
jle
pushf
js
fcmovnu
in
arpl
and
popf
mov
cltd
cmp
cmc
xchg
loop
and
xor
cmp
lods
je
call
inc
movsb
pop
inc
les
xor
sarb
inc
dec
sbb
jg,pt
enter
sahf
jp
cmp
shrl
jg
cmc
xor
push
pop
ror
dec
mov
or
xchg
subl
push
movsl
mov
jns
mov
mov
rol
xchg
lods
movsb
bound
xor
cli
aas
shll
cmpsl
push
dec
shl
cwtl
repnz
mov
and
imull
jl
adc
lret
int3
cmc
sub
xor
loope
pop
mov
fidivl
cmpsl
je
aaa
mov
xchg
daa
xor
test
hlt
jle
push
push
mov
das
lock
xor
push
and
inc
sti
pop
push
push
jbe
ret
or
xchg
das
in
xor
fstl
imul
mov
nop
scas
cmp
xchg
adc
xor
jmp
outsb
imul
shll
mov
push
dec
daa
adc
shrb
repz
xor
jmp
or
mov
sahf
fnstsw
fwait
or
les
es
cwtl
sub
nop
pushf
pop
je
popf
outsl
or
xor
adc
pop
sbb
hlt
inc
cld
adc
push
aad
outsb
push
sub
int3
shll
xor
or
les
push
cmpsb
cmp
shrl
cmp
fcoml
mov
mov
fistps
sbb
and
or
xor
dec
lret
int
xorb
push
or
jmp
shl
loopne
cmp
push
outsb
fnstcw
fcoms
xor
insb
inc
ljmp
mov
repz
mov
push
mov
cmp
jle
pusha
leave
pop
push
or
add
jg
push
mov
xor
dec
add
xor
dec
mov
mov
pop
cmc
fisttps
std
or
test
popf
pop
daa
adc
arpl
adc
arpl
movups
sbb
fs
int3
lds
cmp
pop
xor
orb
adc
or
and
mov
xchg
inc
xor
aaa
cmp
lcall
test
shll
mov
or
add
cmp
xor
enter
test
mov
mov
cmp
mov
insb
dec
es
pop
xor
push
data16
and
add
stc
faddl
fdivs
or
xchg
sahf
sbb
cmpb
xor
js
xor
lahf
or
out
and
ss
mov
jle
mov
test
or
rep
out
scas
cmpl
movsl
mov
xor
inc
fbstp
nop
jl
fldt
and
jp
les
or
insl
adc
mov
add
add
or
mov
inc
jo
push
xor
xchg
out
inc
or
jl
fsubrp
pop
test
mov
movsb
xor
jle
int3
leave
aad
and
imul
pushf
scas
jae
pop
stos
outsl
sarb
jno
lea
push
std
pusha
push
and
add
stc
xor
mov
pop
mov
mov
xor
aam
sbb
mov
jecxz
xor
lods
ja
rcr
mov
push
push
jo
and
cli
xchg
or
mov
push
fimull
push
fmull
sbb
sbb
adc
dec
and
mov
xchg
cmp
mov
sub
repz
movsl
xchg
pop
push
addr16
scas
dec
push
fs
adc
mov
test
push
jns
xor
pop
inc
mov
loope
pop
addr16
xchg
mov
ss
mov
lock
sbb
and
xor
test
inc
mov
bound
xor
inc
cmp
xor
shlb
imul
cmp
rcll
xchg
sub
xor
ja
lcall
cmp
and
jmp
xbegin
xchg
ret
xor
xor
scas
and
push
out
mov
jecxz
or
and
xorb
add
cmp
sub
stos
sahf
sti
inc
jg
dec
and
add
loope
scas
aaa
fcom
shl
mov
adc
fdecstp
cmp
cmpsl
xchg
popa
cli
mov
shlb
ret
push
bound
dec
nop
xor
push
mov
out
xor
xor
cmpsb
sub
mov
dec
add
loopne
test
pop
cmc
hlt
lods
sbb
xchg
or
lock
lods
lahf
lods
cmpsb
loopne
jecxz
cmp
test
fs
cmp
clc
or
push
mov
jb
xor
mov
dec
xor
mov
pop
data16
and
sti
xchg
xor
insb
lods
enter
push
pop
daa
call
ror
dec
and
aam
incb
xchg
adc
jecxz
stos
cmp
mov
xor
cmpsb
int
xor
fcmovne
jns
cmp
ficoml
inc
loope
and
mov
aas
add
ret
adc
loope
iret
push
fidivl
xchg
outsl
xchg
or
mov
cwtl
xor
ja
popf
lcall
jle
lds
xchg
js
movb
inc
cli
push
xor
or
xor
inc
in
xor
adc
out
mov
je
xchg
popa
sub
in
cmpb
or
cmpsb
cmp
lods
pusha
or
xchg
push
scas
mov
or
test
mov
and
xor
push
xchg
out
aaa
ficoml
jp
jmp
sbb
sarl
push
xor
imul
mov
mov
add
shr
jo
xor
cmpsb
push
add
ss
inc
int
mov
push
mov
adc
test
popf
mov
rorl
adc
and
hlt
xchg
lea
or
mov
sbb
cld
shrl
xor
repnz
push
cli
lds
mov
nop
loopne
jne
xor
dec
and
pop
push
incl
sub
dec
xor
mov
xor
lret
push
xor
push
xchg
cltd
and
push
jle
xchg
je
pop
cmp
cmpsb
pop
in
fisttpl
jno
jp
jmp
xor
test
insl
test
pop
out
push
add
int3
iret
les
aas
ret
xor
inc
out
xor
sbb
xchg
mov
and
insl
mov
jl
or
rcll
xchg
push
aam
fs
xor
loopew
jne
sbb
sub
xor
into
pop
cltd
xor
cld
inc
dec
imul
mov
xor
testb
xchg
out
sbb
push
shl
xchg
je
mov
inc
push
push
xor
subb
push
divb
sub
outsb
push
xor
mov
adc
rdtsc
loope
dec
lret
xchg
test
cmp
cmpsl
fs
mov
dec
and
or
xlat
and
dec
mov
cmpl
push
xor
inc
jmp
rorl
pop
dec
pop
mov
and
push
iret
out
data16
dec
cmp
mov
fidivrs
xor
add
jl
imul
mov
shlb
dec
sti
and
pop
and
xor
insb
rol
scas
mov
icebp
data16
sub
gs
jo
enter
test
test
in
pop
xchg
mov
fsubrp
fistpl
out
test
mov
xor
sub
push
mov
aad
fcomps
xchg
daa
js
jg
pushf
sub
dec
sub
outsb
push
or
xor
add
xor
popa
pushf
movsl
call
test
add
xchg
in
xor
cmp
xchg
fisubrs
xor
aas
push
mov
jecxz
shrb
mov
enter
ss
inc
push
stc
nop
or
in
cmpsb
pop
clc
cli
in
xchg
xor
add
insb
mov
cld
filds
jbe
or
and
cmc
loope
xchg
mov
fisubl
ss
call
xor
push
lret
rclb
aas
jecxz
dec
sbb
lods
and
pop
int3
jne
ror
adc
jle
xor
fistl
and
inc
jmp
je
mov
shl
add
xor
jge
pop
xor
push
decl
cmp
ret
cmp
cmp
mov
xor
in
add
das
adc
inc
sub
cmp
and
inc
mov
mov
lea
xchg
mov
adc
cmc
rcrb
outsb
xchg
fisttpl
testb
inc
mov
jle
adc
or
out
cmp
inc
adc
and
and
xchg
cmpsb
cli
popf
pop
xor
and
adc
dec
add
push
repnz
test
or
xchg
xor
ljmp
xor
cmc
pop
inc
sbb
push
xor
aad
inc
sub
pop
fcmove
add
add
adc
or
icebp
dec
or
dec
in
shr
push
aam
and
xor
and
cmp
push
xor
outsb
xor
adc
xor
sti
ret
jnp
cmc
scas
mov
push
je
fidivrl
test
ljmp
xor
mov
movsb
adc
xchg
jno
cwtl
movsl
and
addb
ret
mov
jle
imul
or
in
loop
xor
pusha
mov
cli
outsb
sub
aam
pop
mov
rdpmc
rcrl
dec
mov
push
push
xor
mov
adc
int3
loope
faddp
sbb
jmp
inc
and
shlb
lds
fs
xor
add
icebp
insl
es
notl
out
xchg
push
cmpsb
sbb
xor
subl
push
xor
mov
imul
add
mov
sti
lahf
xlat
or
out
movsb
xor
aaa
add
jl
scas
cmovns
xchg
dec
xchg
bound
sub
inc
dec
xor
mov
int3
lret
es
popa
lcall
movsl
adc
rorl
pop
cmpsb
xchg
roll
stos
add
push
cld
loopne
dec
mov
and
mov
sarb
adc
leave
push
int3
int
lahf
push
cmp
movsl
xor
adc
mov
mov
or
mov
jp
sbb
roll
push
push
xchg
jg
and
sarl
popf
test
pop
push
adc
in
xor
inc
arpl
mov
sahf
and
mov
imul
and
xor
dec
jae
mov
sbb
mov
mov
mov
xlat
add
pop
in
notl
mov
or
and
insl
jne
test
inc
mov
push
push
jmp
js
enter
and
std
mov
jnp
out
pop
mov
xor
orb
cmpsl
push
push
and
jns
push
pop
nop
sarl
or
inc
jno
pop
js
insb
push
scas
addb
push
push
andl
or
mov
scas
cmc
and
or
jae
mov
xchg
xor
mov
lret
shll
fwait
lods
push
pop
or
rclb
jnp
add
add
dec
jno
mov
xor
mov
mov
lods
pop
add
mov
dec
imul
je
push
test
push
jecxz
push
cld
mov
inc
xchg
mov
jg
pop
and
cmp
stc
pusha
xchg
xor
xchg
add
bound
jo
aas
arpl
lds
add
xchg
sbb
movsl
pop
jo
and
sarl
lock
sub
mov
mov
imul
sub
pop
mov
mov
cmp
pop
pop
lret
ficompl
pop
mov
and
and
mov
jp
push
fnsave
shll
imul
sub
cmp
pusha
stos
cmpsl
xor
sarb
in
test
push
fs
out
or
mov
ljmp
jns
xor
inc
test
and
rorb
dec
loopne
mov
cli
repz
sbb
mov
lea
jo
pop
cmp
sub
add
pop
out
push
xor
pop
filds
pop
loopne
cs
roll
icebp
push
xchg
push
aam
divl
cmp
adc
daa
ss
lret
cmc
cmpsb
fwait
inc
xor
or
stos
jnp
cmpsl
push
xchg
inc
xor
xchg
in
or
xor
jle
lret
jge
dec
push
mov
xor
stos
inc
push
aad
imul
or
sahf
or
adc
pop
in
loopne
aaa
mov
out
or
pop
mov
mov
push
movsb
mov
pop
xor
clc
or
sbb
sbb
mov
or
or
mov
inc
es
mov
les
test
mov
add
pop
shlb
fs
cmp
cld
stc
pop
mov
shll
xchg
jl
loop
scas
je
xor
dec
mov
ss
pop
and
dec
enter
loop
push
jbe
loope
push
jmp
je
cltd
adc
xor
sti
insb
mov
add
jne
negl
adc
nop
mov
jb
gs
std
pop
xor
jne
mov
sbb
xchg
cltd
or
cs
push
repz
pushf
mov
push
addr16
inc
cmpsb
xor
popf
in
add
jge
cwtl
aad
xor
inc
jg
negl
inc
shll
outsb
lods
sarb
xor
or
xor
sub
inc
mov
sbb
fistps
push
movsl
xor
pop
clc
mov
sub
adcl
repnz
push
dec
or
pop
mov
mov
negb
xor
mov
shrb
test
je
dec
daa
inc
stos
sub
sub
xor
popa
sub
jmp
dec
movsl
in
pop
push
push
and
cmp
sbb
into
adc
lret
push
inc
mov
fcompl
xor
mov
push
xor
mov
jp
jne
adc
inc
aas
pop
mov
stos
mov
xor
sub
cli
mov
imul
add
sahf
xor
mov
sbb
cmc
aas
flds
leave
adc
xchg
stc
cwtl
xor
adc
jp
push
xchg
xor
popa
daa
ja
test
insb
add
adc
rorl
mov
push
inc
xor
insb
sub
cmp
adc
xor
push
push
daa
aam
xor
sbb
addr16
mov
and
jno
subb
inc
and
or
xor
pusha
cmp
sub
ss
dec
sub
dec
rorb
jp
pusha
aam
out
test
aaa
icebp
xchg
popf
mov
mov
inc
add
fs
call
daa
andl
bound
shl
cmpsb
js
hlt
stos
or
out
lcall
subb
pop
into
or
and
lcall
sbb
push
lock
xor
dec
add
mov
in
xor
sub
fwait
cs
cld
pop
loopne
xor
lods
and
in
repz
cmp
mov
push
or
test
sub
xchg
jb
lds
push
jmp
and
dec
clc
loope
sbb
push
out
xor
push
inc
fisttps
repz
mov
in
and
inc
sbb
xchg
cmpsb
sbb
mov
mov
mov
test
jecxz
out
jmp
call
mov
xor
aad
cmp
mov
jo
pop
mov
test
push
addr16
xor
scas
or
insl
or
push
inc
ss
out
adc
jns
push
in
xor
je
lds
hlt
test
xchg
fcoms
xchg
mov
test
lea
rolb
pop
xor
sub
pop
insl
lods
shll
jo
sbb
add
xor
js
pop
xor
daa
je
push
mov
lods
adcl
xor
push
outsl
xor
scas
cli
pushf
push
fldt
aas
fwait
jnp
lock
jp
loope
xchg
ret
sbb
xor
jl
shlb
pop
fwait
shrl
mov
icebp
dec
fdivs
add
adc
test
fstps
or
xor
mov
push
fimuls
jl
jmp
out
mov
das
loopne
mov
add
push
in
push
stos
cmc
cmp
imul
sub
push
sub
xchg
mov
xchg
sub
ret
testl
enter
xor
rdpmc
fidivl
iret
xchg
aam
inc
ret
jp
and
dec
int3
cli
rcll
sbbb
add
mov
add
leave
ret
lock
lcall
ja
addl
add
jno
lret
outsb
xor
inc
cmpsb
mov
sub
push
scas
dec
in
inc
inc
lods
jge
inc
iret
and
push
xor
ret
out
notb
imul
jmp
shll
xchg
sbb
adc
sub
or
xor
outsb
fwait
ja
sbb
dec
sahf
jmp
xor
gs
ret
mov
jmp
mov
sub
add
pop
dec
add
notl
inc
in
push
pop
das
ds
fimull
push
dec
adc
mov
mov
xor
mov
xsaves
xor
fsubs
push
icebp
xchg
push
inc
aam
pusha
sbb
movsl
dec
or
jo
into
sbb
aam
push
scas
cmpb
mov
cld
fldt
sbb
xchg
pusha
ret
xor
xchg
mov
cs
out
into
mov
loopne
movsl
dec
or
scas
pop
xor
sbbb
mov
pop
push
fidivrs
mov
inc
enter
and
icebp
aaa
or
xor
je
mov
cld
adc
mov
mov
cmp
xchg
icebp
dec
int3
mov
rol
mov
shll
jp
data16
xor
daa
xor
enter
jecxz
pop
xor
add
loopne
jns
pusha
dec
or
adc
jnp
stc
mov
mov
xor
xor
jno
dec
popa
inc
sbb
aas
lock
adc
xor
mov
cmp
xor
cmp
roll
pushf
or
lods
out
mov
xchg
pushl
shll
cmp
adc
adc
pop
xchg
mov
ret
sub
js
es
adc
cmpsb
mov
jo
nop
lret
addr16
mov
stc
rcrl
xor
lret
pushl
insb
sub
dec
icebp
outsl
mov
push
pop
andl
sti
push
sub
dec
je
daa
pop
adc
sub
push
push
mov
mov
mov
mov
das
outsl
or
lds
xor
sbb
pop
adc
and
bnd
out
jno
xchg
out
sub
pop
push
insb
loop
adc
mov
dec
dec
xor
jne
xor
out
lods
int3
mov
adc
adcb
xchg
ja
or
cmp
fcomip
sarb
push
insb
ficoms
mov
jno
xchg
push
test
lea
xor
pop
jae
je
stos
jb
ret
cmp
add
adc
pop
mov
aaa
loop
xor
push
add
cmp
jecxz
xor
pop
inc
push
jmp
add
mov
in
xor
aas
adc
pusha
mov
xor
call
fcompl
out
xor
mov
xor
scas
mov
xor
and
or
xor
and
lcall
test
jnp
sub
dec
stc
out
xor
xor
mov
fdivs
push
mov
inc
xor
lods
insl
lea
clc
int3
or
xchg
push
and
test
adc
push
insl
sbb
pop
and
pop
stc
xor
sbb
rcll
hlt
push
push
mull
inc
sub
xor
xor
mov
dec
roll
arpl
repz
xchg
mov
bound
iret
jnp
lret
push
pop
pop
adc
jecxz
mov
stos
shr
push
pusha
cmc
pop
scas
adc
add
cmp
adc
cltd
in
push
or
xor
mov
add
outsb
fmuls
in
icebp
cwtl
inc
cmpsb
xchg
mov
push
jo
orl
jnp
xchg
insb
cmp
xlat
sub
xor
enter
add
xchg
leave
and
sarl
cmp
out
fnstcw
sub
xor
jl
or
jg
mov
enter
and
sub
push
aam
pop
jl
mov
iret
cmp
loop
test
adc
pop
fs
dec
xchg
or
aas
xchg
fwait
adc
pop
inc
ret
sarl
loope
inc
daa
pop
push
cmpsb
out
jp
mov
sub
cmp
vcvtps2pd
int
jbe
rol
add
pop
sub
lahf
call
sbb
ret
push
lret
popa
xor
out
sub
xor
aaa
xor
add
pop
enter
jb
mov
mov
jne
mov
or
push
adc
dec
push
psrlq
insl
loop
mov
sbb
xor
jb
in
test
xchg
inc
adc
maskmovq
idivl
adc
dec
in
xor
push
hlt
inc
out
test
pop
mov
xor
lret
icebp
xchg
cltd
add
mov
rcrb
mov
loope
push
sbb
or
inc
aas
xor
repz
dec
xor
sbb
fbstp
aas
jge
xchg
sub
movsb
push
xor
lods
push
mov
xchg
ds
xor
fwait
mov
xor
lea
adc
cmc
xor
es
sub
pop
jmp
int
xor
jp
inc
sub
mov
xor
jl
rcl
or
int3
fmull
xor
push
leave
divl
out
jo
jmp
jne
loope
scas
pop
pop
int
fcoms
popf
mov
and
mov
dec
lcallw
cmp
cmp
xlat
xor
fiadds
mov
xchg
mov
xchg
pop
add
rcl
lock
outsb
jle
xor
sbb
aaa
pop
stos
cld
std
rol
add
mov
pop
jle
xor
adc
fmulp
xchg
test
adc
push
lods
movsl
or
mov
adc
mov
xor
cmpsb
in
ficoml
push
xor
push
lahf
add
xchg
lret
out
or
push
xchg
push
push
xchg
cmp
sbb
jge
cmpsb
ja
lahf
push
lods
fisubl
dec
sub
stos
mov
mov
les
xchg
xchg
iret
test
fsubr
and
js
fistl
xor
lcall
or
repnz
or
jbe
shrb
xor
adc
sahf
dec
enter
sbb
mov
push
ret
movsl
lcall
jb
movsb
push
aad
xor
push
sbb
adc
imul
adc
add
jo
sbb
lret
mov
cmp
pusha
sub
rolb
out
xor
dec
loop
js
stos
xor
xorl
inc
imul
test
adc
outsl
fsubs
add
iret
sti
les
add
cmp
adc
stos
or
jnp
push
fwait
cmp
mov
mov
sub
xor
aas
add
mov
dec
icebp
xor
or
stc
pusha
std
xorb
test
stos
xor
dec
dec
fmuls
out
adc
jo
fildl
jne
and
fs
popa
push
fmul
in
ja
lea
shrb
aam
add
fsubl
xor
fstpl
xor
jge
popa
push
push
inc
push
sbb
fidivl
adc
sbb
and
sub
rcrl
lods
xor
pop
push
xor
cs
mov
pop
mov
mov
pop
mov
jge
les
jne
addr16
sub
xchg
xor
push
mov
pop
or
or
cmp
clc
mov
ret
roll
dec
inc
cmp
xor
aam
rdtsc
sbb
add
push
push
notb
stc
adc
xchg
xchg
pop
sub
cld
mov
and
mov
adc
outsl
loop
js
sub
test
pop
xchg
int
adc
dec
shrl
addb
sti
xchg
pop
shrl
loope
loopne
fwait
jo
test
xor
add
xor
sti
out
jg,pt
call
jge
sub
popf
and
mov
xor
xchg
test
xor
pop
sub
out
push
adc
pushl
repnz
rcl
aaa
mov
mov
xor
push
lods
or
push
mov
xlat
xor
ljmp
mov
mov
xor
fs
push
jns
mov
xor
stc
pop
pop
xor
pop
inc
and
enter
mov
xchg
jb
lds
pop
pusha
push
clc
popf
not
ficoms
cs
add
and
rcll
je
inc
xchg
cmpsb
jp
sub
sbb
cld
push
ficompl
or
xor
mov
inc
pop
mov
fdivl
pop
mov
push
sbb
xor
int3
fnstsw
nop
adcb
mov
jb
xor
mov
popf
pop
or
xor
jp
push
push
shrb
lret
jecxz
pop
repnz
out
adc
jbe
cmpsl
and
jnp
mov
xchg
in
xor
or
rcl
jp
mov
xchg
dec
clc
lds
movsl
paddsb
push
stos
pop
jo
xchg
push
loope
sbb
mov
data16
add
mov
jo
in
or
xchg
mov
fildll
cmc
test
xor
in
into
xor
sub
xchg
imul
nop
xor
inc
sub
das
dec
scas
adc
mov
mov
mov
daa
jp
je
imul
xor
or
movsb
adc
aaa
xor
dec
mov
xor
push
pop
je
inc
xchg
js
cmpsb
add
out
sbb
xchg
xor
xor
les
jecxz
loope
or
scas
dec
out
cmp
or
jo
adc
sarl
pop
mov
pop
movsb
mov
data16
scas
sbb
stc
adc
pop
sub
sbb
icebp
jo
xchg
sbb
scas
adc
xchg
sbb
mov
jg
roll
push
pop
icebp
gs
or
pop
das
adc
ja
rorl
icebp
jno
lock
testl
xor
push
cmpl
das
ss
adc
insb
jl
mov
pop
cmc
into
cmp
dec
das
loop
adc
dec
push
mov
sbb
std
ss
adc
cmp
adc
lret
sbb
lcall
xchg
and
pop
adc
adc
cld
retw
mov
mov
shll
xchg
cwtl
dec
nop
adc
adc
jns
mov
pop
mov
mov
adc
fdivl
lock
movsb
fldt
sbb
xchg
shrb
mov
popa
mov
push
icebp
andb
xchg
out
pop
jo
dec
cmp
jge
popa
push
pop
xlat
or
jne
dec
icebp
ror
push
xchg
inc
add
sbb
icebp
adc
inc
fildl
cltd
dec
lea
adc
cmc
out
ret
popf
das
sar
test
add
movsb
jle
inc
stos
cmp
jbe
pop
das
and
cwtl
fsts
mov
ja
mov
fwait
out
xor
je
shll
sbb
insl
xor
sbb
mov
fimull
pop
mov
imul
push
sahf
in
aad
pop
testb
setns
and
adc
ja
xor
cld
push
mov
xor
and
and
mov
cmc
mov
xchg
mov
xor
negl
andl
emms
inc
adc
mov
adc
movd
or
mov
daa
pop
mov
pop
sbb
sbb
jge
inc
sti
sbb
jmp
push
add
lds
push
inc
inc
fimull
mov
movsb
std
or
orb
mov
mov
imull
lcall
jmp
push
cmp
push
cli
test
das
jne
pmullw
dec
mov
and
jmp
test
outsl
imul
mov
pop
mov
ss
push
push
and
cmp
jge
out
int3
inc
mov
jecxz
and
pop
sbb
daa
sbb
es
test
jo
mov
out
lock
nop
lds
mov
movsl
scas
mov
or
test
push
or
xor
push
jno,pn
inc
adc
adc
fldcw
xchg
test
or
icebp
adc
cs
sbb
ret
cmp
fsubrl
scas
mov
testb
xchg
sbb
sbb
sbb
adc
sub
pop
leave
push
adc
pop
cmpxchg
mov
mov
rcrl
cmp
jno
inc
out
vpshuflw
mov
and
jmp
cltd
sbb
xsavec
outsl
cld
jne
push
dec
or
ret
adcb
mov
cltd
lock
jbe
cmp
das
test
in
and
cmp
das
sarl
mov
das
mov
subb
fildl
das
mov
addb
pop
and
xchg
mov
mull
xor
bswap
inc
pop
pop
mov
xor
shlb
cmp
sbb
scas
adc
mov
or
and
push
leave
iret
inc
xchg
push
jecxz
nopl
adc
inc
stc
sbb
movsl
push
adc
push
cmc
repz
filds
dec
icebp
mov
pop
inc
scas
pushf
shll
pop
pop
xor
mov
lret
hlt
sub
leave
ljmp
xchg
push
pop
jno
or
fstl
jnp
sub
xor
out
xchg
or
addr16
lret
dec
out
stos
xchg
jo
adc
jg
mov
mov
mov
sbb
das
leave
mov
fldcw
daa
sbbl
shr
popa
insb
lcall
and
pop
mov
icebp
cmpsb
push
dec
and
icebp
cmp
jno
cld
cmp
mulb
ss
jno
jae
subl
push
and
pop
test
push
cmp
inc
enter
icebp
movsl
movnti
stos
jb
dec
enter
pop
inc
or
jl
pop
or
xchg
sub
scas
fstpl
clc
in
movb
jno
xor
or
xchg
or
setnp
sbb
lahf
cmp
lcall
cmp
mov
pop
mov
enter
xchg
push
sbb
inc
dec
fldenv
sbb
sti
xor
ret
sbb
sbb
repnz
repz
cmpsl
pop
xchg
xchg
sbbl
pushl
sbb
add
or
fldenv
pop
leave
add
sti
ljmp
adc
sub
mov
fimull
cmp
or
sbb
adcb
push
jnp
push
or
idiv
gs
add
movsl
jg
sbb
sbbl
test
cmpsl
sbb
xlat
mov
dec
ja
sbb
dec
cli
push
mov
nop
int
outsl
faddl
xchg
xor
stos
xchg
std
inc
imul
aad
scas
dec
push
mov
xchg
cmp
push
push
mov
mov
js
or
popf
sbb
jp
out
xor
sbb
popf
aad
fstl
mov
idiv
xor
mov
mov
xor
xchg
pushf
inc
imul
mov
cmc
xchg
pushf
jb
pop
mov
inc
mov
ds
sbb
cmc
std
xor
sbb
and
push
fisttpl
int
fwait
int
jns
das
sti
jmp
inc
je
scas
mov
pop
pusha
into
mov
push
lcall
adcb
out
sbb
pushf
adc
inc
dec
xchg
cltd
rorl
dec
aaa
mov
or
movsl
cs
cmp
cmp
outsb
cmp
lock
pop
jbe
xor
cmc
nop
and
sbb
inc
and
cwtl
std
cwtl
aad
push
jl
push
or
mov
sbb
stos
jl
cmp
xchg
je
movsl
xchg
pushf
je
pop
outsb
and
mov
rcrb
xchg
sbb
mov
rcll
or
out
push
jne
jp
push
xlat
inc
lds
and
mov
xor
mov
adc
dec
in
fdivs
pop
out
cld
dec
std
dec
cmp
push
sub
shll
loop
pop
icebp
out
sarl
xchg
xor
adc
scas
xor
dec
std
cli
ret
loop
sub
das
mov
xor
dec
iret
scas
icebp
push
mov
dec
cs
add
out
cs
popf
repnz
add
adc
gs
nop
and
dec
adc
lahf
jl
sbb
aad
andb
mov
push
das
sbbl
stc
lret
mov
xchg
sysret
mov
iret
testl
in
xor
xlat
out
popf
mov
loop
xor
push
out
jge
cmp
fwait
jnp
cmp
xor
fidivrl
sbb
clc
fdivs
push
icebp
not
lds
jno
ret
mov
out
shll
mov
int
mov
push
out
lret
stos
mov
pxor
test
cmpsl
mov
adc
aad
and
mov
xchg
into
pop
push
pop
daa
mov
push
lret
paddb
sbb
outsl
inc
nop
std
setns
es
stc
icebp
notl
add
fstl
xor
adc
out
inc
popf
fwait
scas
cmc
jge
cmpsb
pop
movb
dec
mov
out
push
call
jae
cmpsb
test
aad
xor
imul
push
sub
cmp
adc
or
mov
dec
orb
dec
push
aad
xchg
test
lods
add
xadd
xor
xor
clc
push
outsl
push
stc
scas
mov
notb
push
in
cmc
shrw
and
push
imul
push
pop
xor
aad
pop
je
xor
ds
xor
and
inc
xor
xchg
pop
push
sbb
xorb
dec
shll
add
pop
aas
cmp
cmp
or
push
or
popf
jno
dec
insb
adc
aaa
cmp
xchg
xor
cmp
in
dec
imul
adc
mov
push
xor
ljmp
mov
in
fcoms
pop
mov
decl
adc
mov
cmc
and
mov
out
repnz
xchg
daa
je
iret
mov
inc
push
mov
pushf
or
jbe
xlat
test
movsl
out
mov
aam
jo
or
sbb
pop
mov
int3
cmpsb
dec
xor
les
into
je
add
inc
mov
dec
dec
and
test
jb
pop
inc
jge
out
adc
push
mov
sbb
fsubrs
jg
xlat
stos
aaa
pop
daa
lcall
repz
xor
inc
jmp
xor
lea
test
mov
imul
incb
repz
mov
jge
mov
sub
xor
cmc
cmp
rclb
dec
or
aaa
cmpsb
lcall
sbb
inc
xor
mov
adc
pop
daa
dec
out
and
cwtl
pop
mov
out
sbb
call
lret
inc
cwtl
std
int3
es
out
fildl
lret
xor
cmp
xchg
cs
and
inc
xchg
ret
ds
in
mov
arpl
xor
push
push
and
jne
cmp
lret
adc
shrl
test
in
push
mov
mov
jmp
stos
xchg
pusha
jmp
test
mov
dec
out
cmc
inc
movsl
shll
dec
ss
and
sub
imul
cmp
xor
jne
pop
xor
test
push
popf
xlat
xor
ljmp
mov
xor
sub
jge
xor
push
out
inc
adc
inc
xchg
cmp
jb
xchg
push
push
mov
push
mov
mov
and
pop
sub
xor
xchg
fdivs
xor
shlb
push
push
adc
sbb
mov
outsl
out
sbb
xlat
pop
cltd
pop
or
lea
ja
and
lcall
in
insb
push
stos
lea
in
xor
fmul
dec
or
dec
icebp
push
lret
ljmp
xchg
lds
movsb
je
push
jno
pop
rol
shlb
nop
adc
inc
outsl
jmp
test
mov
xchg
shll
xor
pop
test
clc
cs
and
fbstp
test
sbb
outsb
sub
xor
ret
inc
repnz
or
and
cli
push
sbbl
push
push
lods
adc
mov
adc
mov
push
fadd
les
int
sbb
pop
aam
out
into
stos
push
das
sbb
or
lock
inc
cmpsb
ficoms
test
dec
out
pop
jle
jno
in
sub
fnstcw
outsl
es
mov
movsl
or
popf
fisttpl
jo
loope
xor
icebp
stos
sub
insl
xchg
jl
sub
inc
pop
cmpsl
mov
insb
ss
mov
xchg
push
mov
mov
inc
adcl
mov
and
mov
bswap
xlat
push
js
adc
icebp
movb
addr16
add
mov
enter
sbb
and
or
adc
cld
sbb
add
mov
int
mov
das
icebp
or
sbb
mov
nop
xor
das
stc
aaa
jnp
jbe
jl
push
or
push
call
fwait
dec
mov
push
adc
out
scas
stos
icebp
mov
sti
and
adc
or
sbb
mov
das
cld
adc
incl
mov
inc
movsl
mov
jns
xchg
cmp
adc
das
adc
test
imul
pop
sbb
xor
or
pop
adc
popf
pop
std
scas
stos
icebp
jl
mov
or
and
movsl
outsb
fnstenv
adc
popf
xchg
sbb
xchg
mov
mov
lock
fstps
int
xchg
sbb
sbb
cli
popf
xchg
push
sbb
arpl
movsb
sarl
int3
push
push
popf
lock
adc
xor
ja
xor
lea
jp
xchg
xlat
jns
lret
mov
pop
mov
aad
xlat
sbb
sub
mov
mov
xor
sarb
loope
and
jno
mov
pop
mov
xchg
dec
lock
pop
sbb
cld
lock
lock
lea
cmp
mov
fwait
cmp
lock
xor
out
and
xchg
rolb
dec
in
cwtl
adc
xchg
lcall
cmpsb
push
scas
jo
pop
pop
and
dec
and
jg
unpckhps
sbb
push
scas
mov
sbb
mov
dec
adc
sbb
mov
out
shrl
loopne
sbb
fstps
cltd
jecxz
imul
repnz
sti
pop
or
das
lcall
and
or
mov
add
xchg
cs
mov
out
push
scas
lahf
ja
or
inc
xchg
and
sti
popf
lock
push
rcrl
pop
mov
lahf
mov
pop
scas
pop
mov
popf
pop
or
popf
or
mov
pmaddwd
mov
fldcw
xchg
ds
xchg
das
dec
scas
jo
mov
mov
mov
mov
pushf
call
sbb
mov
lock
jno
adc
or
lahf
sbb
or
sbb
dec
mov
pop
popf
pop
mov
ljmp
or
into
and
int
loope
loopne
mov
push
inc
rcll
and
mov
push
pop
push
cmpb
pusha
sbb
adcl
pop
inc
xchg
std
mov
sbb
cwtl
add
sbb
js
xor
int
mov
pop
sub
mov
sahf
inc
jg
arpl
adc
or
nop
mov
pop
cmpsl
mov
cmc
out
fdivrs
fstpt
dec
xchg
push
fistpl
inc
ds
std
sbb
test
sbb
in
sbbl
dec
scas
push
mov
xchg
mov
sbb
nop
mov
sti
xor
ret
scas
xchg
or
and
jmp
aad
pop
sbb
aad
mov
pop
movsl
std
test
push
pushl
lock
mov
adc
icebp
testb
dec
xchg
out
int
out
or
movsl
mov
push
or
out
icebp
mov
mov
lahf
push
pop
sti
inc
mov
js
out
jmp
sbb
cwtl
lret
inc
out
sbb
sub
movsl
outsb
in
sarl
and
xor
and
push
nop
push
push
inc
fcoml
mov
fisubl
mov
sbb
mov
mov
ds
sub
mov
xchg
jns
sbb
xchg
push
iret
loopne
sahf
imul
outsl
in
pop
add
cld
or
xchg
cmc
jb
rolb
xchg
scas
xchg
or
int3
sbb
movsl
mov
push
sbb
ficomps
scas
xlat
popf
jo
lock
das
std
jg
jecxz
or
sbb
out
adc
test
dec
mov
outsb
xchg
sbb
cli
lcall
incb
jns
pusha
mov
adc
shll
dec
inc
cmp
mov
push
and
jo
enter
pushf
scas
fisubrl
pop
or
mov
pop
lea
pop
xchg
sub
dec
nop
sbb
mov
repz
xchg
xchg
fcomi
into
rcrb
sbb
mov
js
inc
sbbl
movsb
mov
iret
mov
pushf
sub
add
icebp
popf
movsb
call
xchg
pop
xchg
mov
inc
mov
outsl
fildl
ficomps
mov
and
sub
xchg
pop
cs
mov
adc
outsl
ja
or
pop
arpl
mov
mov
push
movsb
scas
jg
adc
and
sub
int3
das
jmp
lcall
mov
jno
fcmovnbe
mov
scas
sbb
add
popf
outsl
jno
cmp
in
adc
int
movsl
sbb
push
mov
xorb
stos
jle
imulb
fcom
mov
jbe
fwait
scas
fdiv
mov
sbb
in
movsl
std
movsl
outsl
sbb
xchg
adc
push
sub
mov
inc
mov
lcall
or
scas
das
cltd
and
mov
and
pop
cld
dec
or
cmp
pushf
fmulp
sbb
stc
fmull
dec
lock
xorl
cmp
iret
jno
out
roll
add
push
mov
dec
pop
cs
mov
xchg
push
pop
lds
mov
scas
xor
inc
xchg
pop
mov
cbtw
cmp
lods
movsb
mov
sbb
imull
mov
test
popa
or
push
nop
or
mov
in
out
cmp
iret
outsb
and
pushf
das
icebp
xlat
lahf
ja
mov
lahf
jnp
and
test
outsl
mov
out
and
das
andb
fs
dec
in
loop
and
xchg
mov
out
cmp
and
sbb
cs
mov
pushf
mov
push
test
iret
dec
rcrl
sbb
push
lock
lcall
xlat
sbbb
fstpl
pop
mov
sbb
das
movsl
into
ficomps
mov
cltd
inc
daa
lea
imul
cmpsb
jl
scas
in
mov
dec
mov
scas
jno
jae
and
psllw
mov
adc
push
in
testb
scas
dec
push
cs
sahf
popf
xchg
fwait
mov
das
cmp
cmp
movq
das
cmp
in
lahf
idiv
and
fisubl
cltd
mov
and
das
lea
mov
movq
das
lahf
lea
xchg
mov
and
jns
push
cli
stos
cmp
lahf
sbb
aad
outsb
jg
ficompl
fwait
das
sbb
pop
xchg
out
imul
lahf
mov
inc
gs
imul
jae
adc
insl
xchg
popa
out
scas
or
mov
popf
lcall
imul
outsb
cli
mov
clc
aaa
fmuls
fldenv
je
xchg
shll
and
push
xlat
fdivrs
xchg
or
aaa
or
xchg
jnp
add
fwait
int3
shlb
and
adc
push
cli
push
xchg
push
cmp
fnsave
sahf
jne
cmp
sbb
mov
scas
adc
movsl
lock
pop
loop
xchg
pop
mov
icebp
shlb
jg
xchg
lock
sbb
fstl
pop
ljmp
outsb
pop
mov
scas
push
lahf
push
bound
mov
into
xlat
iret
pop
rclb
add
rcll
sbb
dec
dec
mov
popw
fidivrl
inc
out
gs
xor
xchg
dec
or
movsb
xor
mov
pop
mov
sbb
push
jmp
icebp
sub
xor
jmp
movsl
mov
and
or
xchg
insl
js
frstor
and
push
jl
mov
lock
pop
cmp
loope
xlat
int3
in
bound
adc
xor
jns
repnz
bound
testb
jge
adc
sahf
dec
ror
repz
xor
outsb
cltd
xorb
in
sbb
and
aam
mov
dec
fcompl
pop
fsts
cmp
mov
out
movsl
push
add
jb
mov
mov
inc
adc
dec
sbb
cltd
sub
cs
or
sbb
shll
scas
hlt
and
mov
outsl
and
jp
sub
push
cmp
outsl
cltd
jle
adc
idivl
rcr
mov
es
adc
pop
clc
sti
and
sbb
rcrl
mov
push
ljmp
ficompl
cmpsb
mov
lahf
sbb
mov
imul
pop
jno
sbb
pushf
out
scas
xlat
adc
xchg
cmp
mov
popf
sbb
adc
pop
xchg
sti
inc
and
lcall
ror
cmp
ss
pop
fwait
push
push
rcrl
pop
inc
xor
cmpsl
js
sbb
gs
les
xchg
cltd
xor
fmul
pop
push
add
mov
mulb
or
sbb
mov
pop
aas
cltd
or
movsl
inc
adc
mov
pushf
enter
lock
xor
sbb
add
cwtl
lcall
scas
add
jp
adc
iret
pusha
mov
push
mov
pop
fidivl
shlb
sbb
int3
outsb
out
sbb
jge
lods
add
mov
jo
jo
fadd
mov
dec
inc
std
or
push
jg
js
nop
clc
adc
jno
dec
out
scas
pop
scas
jnp
fcmovu
mov
xchg
pushf
clc
cmp
and
jne
xchg
out
iret
xchg
jge
cmp
xchg
jno
lock
jnp
std
push
test
dec
and
fidivl
scas
inc
jl
les
cwtl
jle
aad
jo
les
and
dec
cltd
movsb
xor
xor
ljmp
pop
inc
fwait
inc
and
mov
xor
frstor
frstor
jg
xchg
mov
mov
ficompl
xchg
scas
sub
popa
mov
add
outsb
popa
mov
cmpsl
sbb
pusha
iret
bound
inc
pop
jp
pop
fwait
pop
enter
cmp
xor
push
pop
into
sbb
mov
into
mov
leave
notb
add
movsb
in
mov
scas
and
aad
scas
ja
popa
push
jg
sahf
scas
out
sbb
jne
insb
lahf
add
fistpl
shl
dec
imul
cmp
sbb
sti
cs
das
push
or
push
aad
into
xchg
sub
lcall
lea
popf
mov
xchg
in
ss
mov
xor
mov
call
sbb
fldenv
movsb
cli
sub
idiv
pushf
mov
movsb
les
jo
pushf
not
outsl
xor
push
adc
imul
dec
rcr
jg
mov
jno
push
mov
cld
sbb
pop
scas
add
fcomip
in
jnp
add
xchg
inc
or
inc
imul
mov
jmp
mov
movsl
mov
fnstcw
or
xchg
adc
xchg
cwtl
pop
cmp
or
pop
aas
lock
lods
add
scas
sahf
mov
jp
xchg
push
incb
and
mov
mov
pop
inc
xchg
cltd
rcll
lahf
int
adc
cmp
adc
lods
cmp
aaa
stos
cmpl
adc
scas
push
imul
das
xchg
cmp
mov
std
and
test
nop
push
push
lret
jo
out
movsb
adc
inc
jns
out
mov
das
pop
mov
sbb
mull
les
pop
cs
repz
out
cmc
loop
xchg
icebp
inc
cmp
scas
lods
movsb
cli
or
pop
sbb
ds
dec
sahf
jnp
inc
cs
mov
addr16
sbb
add
xchg
mov
movsl
cld
out
psubusw
jnp
dec
int
mov
cmp
push
lea
and
cmpsb
scas
cwtl
outsb
icebp
cs
out
mov
cmp
dec
push
scas
push
xchg
mov
fisttpl
arpl
pop
pop
jg
lret
clc
jp
push
fsubr
mov
pop
inc
stos
and
and
movsl
movsl
add
xchg
push
and
aas
cs
xchg
pop
ret
mov
sti
adcb
movsl
or
into
push
or
scas
lock
or
scas
mov
call
arpl
movsb
or
adc
out
movsl
pop
hlt
ret
stc
loopne
outsl
add
push
jb
clc
cld
js
clc
aad
icebp
loope
ja
jns
and
push
call
inc
or
pop
subb
das
ret
and
dec
xchg
or
fdiv
cmp
in
xor
imul
fwait
pop
pop
sub
dec
pop
and
pop
pop
outsl
cmp
and
sbb
cmp
mov
sahf
adc
add
jb
mov
xchg
jnp
movsl
cmp
inc
sub
mov
adc
sbb
pop
mov
push
sbb
sbb
mov
dec
pushf
pop
out
and
lcall
sbb
sbb
cmp
movsl
dec
mov
xor
or
mov
mov
adc
pop
mov
sub
les
xchg
push
ss
pop
xchg
scas
jle
or
inc
jo
pop
sub
loopne
and
lss
movsb
out
outsl
jg
call
cwtl
pop
and
frstor
fsubl
in
xchg
icebp
xor
jo
out
push
sahf
pushf
adc
jno
popf
mov
rcrl
xchg
mov
lret
test
mov
scas
push
das
and
cmp
movsl
xchg
fistl
jb
mov
fstpl
and
mov
stc
sbb
cs
aam
add
xchg
imul
and
es
sar
xchg
icebp
movsl
pop
popf
in
mov
or
das
push
loop
cmc
inc
daa
mov
and
stos
cmpb
les
jb
inc
and
scas
stc
and
xor
add
inc
iret
aaa
jne
mov
inc
lcall
neg
out
fst
xorb
add
xchg
aad
movsl
mov
sub
and
cmp
enter
movsl
outsb
lds
pop
call
outsb
movl
cmp
rcr
cmpsl
das
rol
adc
out
adc
cmp
cmp
cld
das
mov
clc
shl
outsl
and
xchg
push
pop
jae
push
xchg
xor
pop
push
inc
lahf
xlat
push
adc
movsb
dec
sbb
aad
aaa
movsb
sbb
xchg
sarb
jmp
data16
cmp
add
xchg
fstl
loope
arpl
push
mov
cmp
jnp
cltd
scas
add
jb
xor
jo
push
push
adc
push
mov
negb
mov
lcall
xchg
repnz
sub
cmp
insl
ret
cmp
xor
and
leave
sbb
lock
jnp
ja
imul
push
scas
cwtl
sbb
adc
ds
jnp
cmp
mov
sub
xchg
shll
mov
jns
fisttpl
mov
jecxz
xchg
clc
fdiv
out
fistps
dec
mov
mov
xchg
sub
int
imul
in
outsb
inc
and
xchg
lods
movsl
sbb
shll
mov
mov
jp,pt
addr16
cmpsb
sub
mov
xacquire
xor
sbb
inc
mov
outsb
loop
lock
mov
pop
mov
das
testl
lcall
into
sbb
xchg
repnz
mov
xlat
xchg
xlat
shl
xchg
xor
xchg
jo
idivb
cltd
xchg
mov
loope
cmp
pop
sbb
out
bound
das
sahf
arpl
lret
add
loop
jb
and
leave
and
pop
mov
add
outsb
negl
lahf
in
lock
fsubrs
sbb
jnp
lahf
and
bound
jno
ds
fwait
xchg
jo
into
sbb
mov
jo
movsb
lahf
pop
testb
or
clc
and
stos
and
xchg
popf
loope
cmp
std
and
stos
mov
ss
iret
mov
stc
out
cmp
or
popf
mov
nop
or
cmp
pusha
pushf
adc
cs
mov
adcl
lret
hlt
mov
sbb
lods
icebp
pop
xor
lock
lret
adcl
add
or
adc
cmp
test
sub
int
ds
pop
clc
scas
and
xchg
mov
lea
stc
mov
rorl
scas
insb
jecxz
loopne
mov
pop
jl
ljmp
pop
cmc
cmp
mov
and
push
bound
les
rolb
fstl
sub
outsl
jo
test
movsl
in
pop
je
test
ss
and
cmp
pop
or
lret
and
jle
sbb
out
sets
lcall
sbb
ljmp
scas
push
dec
outsl
xor
jmp
stos
loop
jmp
xchg
out
movsb
call
outsb
loopne
loop
gs
dec
popa
jge
imul
loope
jb
xlat
cmp
mov
pushf
dec
mov
cmp
or
scas
jbe
or
int
mov
mov
or
mov
sbb
movsb
mov
mov
neg
inc
fwait
shl
fwait
lds
sbb
add
test
push
add
push
insl
mov
out
mov
adc
scas
movsl
adc
repnz
das
add
xchg
lret
test
movsl
dec
jp
jle
jl
add
xchg
cltd
xchg
xor
enter
rorb
xchg
sbb
xchg
aam
or
stc
mov
fcoms
jge
inc
or
movsb
roll
xchg
frstor
bound
push
aaa
shl
pop
mov
out
sbb
mov
and
adc
jne
rolb
imulb
fwait
dec
faddl
sbb
mov
jbe
in
sbb
fiadds
mov
add
fldln2
mov
push
std
jno
xchg
lcall
sub
add
stc
movsl
dec
pop
mov
jl
andl
mov
and
sbb
cmp
sbb
mov
lahf
and
scas
icebp
andb
ret
mov
test
idivl
cmp
cmp
xchg
or
sbb
and
cmp
sbb
adc
sbb
das
or
int3
mov
and
mov
movsl
mov
jno
fsts
popa
dec
push
cmp
in
mov
add
cmp
out
mov
cltd
iret
xchg
loopne
cmp
pop
movsl
fsts
xor
insb
sbb
and
mov
mov
and
into
mov
cvtpi2ps
jnp
sets
aaa
fcmovb
cli
cmp
mov
setb
xor
sbb
xchg
mov
push
dec
arpl
int3
xchg
insb
jge
xlat
out
sbb
out
decb
and
ret
cwtl
rcrl
shl
ror
mov
xor
mov
mov
lods
dec
jge
insl
mov
mov
lds
icebp
out
test
sbb
mov
sbb
fstps
and
jb
fwait
repz
cmp
imull
mov
adc
sub
mov
daa
adc
mov
sbb
xor
mov
mov
add
notb
inc
mov
cmpsl
mov
sbb
clc
cltd
iret
dec
jecxz
pop
cmp
cmp
push
push
jmp
add
sbb
out
mov
jge
mov
jp
es
inc
adc
xor
jle
jmp
push
arpl
push
adc
push
jns
pop
loop
cmp
mov
pushf
sahf
or
std
enter
xor
loop
cltd
in
adc
xor
and
mov
jmp
or
and
repz
loop
inc
mov
movsb
and
mov
or
jb
mov
xor
mov
or
sbb
cmc
push
dec
fnstsw
add
cmp
sbb
mov
cmp
lret
sbb
xchg
lds
int3
fidivl
movups
and
scas
push
in
add
xchg
mov
mov
int3
cmp
sbb
push
cmp
xor
cli
inc
ffree
scas
push
push
outsl
mov
push
lret
incl
fs
decl
or
fbld
pop
lock
cmp
xchg
push
test
incl
jno
in
negb
sbb
xchg
cmp
xchg
es
fidivrl
and
fsubs
scas
mov
mov
orl
into
and
cmp
sub
fstpt
int
push
or
push
and
mov
das
test
pushf
fisubrs
ja
scas
movsb
test
out
ficoml
rclb
mov
int3
popf
sbb
das
cs
and
cmp
cmp
xor
fwait
mov
inc
add
clc
stos
popf
ds
push
shr
fwait
ret
rcrl
dec
mov
popf
inc
outsl
pop
or
jge
jns
cmp
in
cmp
or
int3
rsm
cmp
imul
mov
sbb
inc
push
rolb
push
cs
out
or
xchg
sbb
sbb
arpl
xlat
loopne
fnstcw
mov
mov
out
sti
or
add
outsl
xchg
adc
nop
call
pop
shlb
cltd
imull
mov
lcall
push
lret
sbb
inc
push
fstl
sbb
fildll
add
cmove
lcall
pop
adc
jno
imul
shl
push
dec
insl
lcall
pop
sbb
mov
and
mov
lret
sbb
aas
mov
scas
mov
cmpl
or
push
jmp
mov
fdivrs
fistpll
jg
xchg
inc
stos
das
mov
scas
push
push
fildll
and
jp
mov
fidivs
je
sub
mulb
and
and
and
xor
sahf
inc
insb
aad
push
and
cwtl
jg
insl
pop
testl
test
aam
dec
push
pop
aas
mov
cltd
hlt
fnsave
sbb
cwtl
in
cmc
iret
jg
test
add
sbb
nop
mov
jno
fildll
fisttpl
cltd
sbb
popf
mov
sbb
mov
ss
jge
dec
lea
xor
sbb
sbb
pop
cmp
movsb
and
sahf
push
les
popf
notl
jmp
xor
jmp
fistps
loopne
sti
mov
inc
subl
pop
and
lea
jp
out
mov
lods
sub
jno
and
popa
arpl
xchg
movsl
push
sub
add
cmp
inc
je
cltd
cmp
jns
cwtl
cmpsl
shl
int3
push
mov
mov
fists
jne
aaa
loope
inc
sahf
outsb
sahf
lock
dec
test
mov
sbb
inc
fnsave
add
lock
pop
or
arpl
xlat
ds
adcl
iret
jb
scas
dec
f2xm1
outsb
in
adc
sub
mov
das
mov
out
xchg
lahf
add
fidivl
fdivs
pop
pushf
sbb
into
mov
adc
pop
xor
clc
inc
push
ret
pop
sbb
lcall
jp
inc
sbb
pusha
movsb
jge
les
testb
dec
cltd
popa
push
in
pusha
popa
pop
movsl
in
idivb
xor
xchg
sbb
push
inc
pop
test
js
outsb
xchg
les
push
cmpsl
fmuls
mov
mov
test
jmp
popf
add
push
fwait
add
out
inc
mov
add
sarb
and
xor
xchg
push
mov
xchg
and
fldt
fnsave
fnstsw
loopne
scas
scas
pop
or
repz
mov
jl
outsb
cmp
push
lock
outsl
scas
xlat
push
aas
push
adc
inc
fcomps
sbb
cltd
pop
xchg
lcall
xor
das
push
and
push
aas
movb
rcrb
iret
and
imul
pop
jo
int3
push
das
insb
pushf
movsl
movsl
call
sbb
popa
jae
notb
fs
mov
dec
mov
dec
mov
inc
outsb
jle
icebp
iret
movsl
mov
jge
pop
and
in
cs
insl
xchg
fcom
les
pop
or
xchg
push
test
out
fwait
jmp
sbb
sahf
mov
xor
test
leave
pop
sbb
xchg
sbb
fidivl
jnp
push
mov
cltd
pop
popa
outsb
jb
mov
fiadds
sbb
cltd
pop
pop
push
push
out
jbe
mov
cmp
push
mov
jae
cmp
lods
pop
fcompl
pop
lock
mov
pop
imul
pop
mov
stc
or
xor
dec
mov
aas
movsb
push
es
xchg
fucomip
cmp
sub
popf
out
mov
mov
fimull
das
or
fwait
les
iret
sti
jbe
mov
insb
xor
aad
jge
xchg
pop
cwtl
lods
mov
fisubrl
mov
pop
mov
mov
and
mov
xchg
fscale
je
cwtl
ss
sub
xchg
mov
mov
inc
into
cwtl
xchg
inc
jb
mov
pop
jno
mov
sbb
idivl
push
and
adc
xlat
pushf
mov
jno
lods
push
pop
clc
and
mov
pop
pop
outsb
and
getsec
or
cmpb
popf
push
jecxz
xchg
sub
imul
cmp
int3
dec
lds
inc
sbb
out
rclb
pop
enter
movsb
fdivl
sbb
or
jbe
jle
js
fldl
cwtl
inc
stos
insl
pop
das
fidivl
movsb
pop
cmpsl
cmp
sbb
adc
fdivrs
aas
das
pop
and
test
outsl
lahf
dec
pop
push
pop
add
cmpsb
or
mov
ds
adc
cmc
sbb
inc
shll
pop
fldcw
scas
je
xlat
and
mov
add
movsl
cmc
and
mov
pop
popf
pop
jne
dec
dec
lods
icebp
out
mov
sbb
xchg
movsl
mov
xorl
mov
jle
jae
xor
push
sysenter
in
xor
mov
xor
pop
scas
xchg
mov
sbb
adc
movsl
out
and
adc
loope
pushf
jo
push
and
in
jo
pop
mov
mov
int3
mov
inc
jno
lahf
mov
mov
xchg
mov
mov
mov
pop
pop
sub
push
mov
sbb
sbb
jo
call
je
outsl
mov
and
stos
add
cmp
push
cmp
sbb
pop
dec
movsl
inc
jle
gs
mov
adc
outsb
dec
scas
pop
fmul
outsb
in
mov
setns
sub
gs
ret
sbb
nop
sbb
lods
jne
push
mov
push
popf
xor
sbb
in
lock
adc
imul
imul
xchg
hlt
mov
push
call
cmc
movsl
dec
pop
test
mov
test
or
cmp
and
cltd
ljmp
hlt
ja
fwait
cmp
xchg
mov
jo
stos
xchg
or
cmp
f2xm1
add
xchg
add
mov
mov
mov
cld
lea
mov
in
jns
out
mov
sbb
mov
and
std
fwait
lock
push
sti
outsb
mov
or
ljmp
outsl
jno
sub
imul
test
push
jmp
stc
mov
and
int
mov
out
xchg
inc
dec
jnp
fldl
sbb
sarl
pop
subb
pop
aad
iret
lock
inc
cmp
cmpsb
pop
sbb
and
movsb
out
cmp
xor
cmpsl
clc
fninit
xchg
ficomps
mov
adc
loope
cmpl
sub
rorl
cltd
scas
pop
sbb
sub
or
idiv
mov
aas
fwait
movsb
jns
dec
pop
sbb
movsl
jmp
into
outsl
ss
mov
inc
das
sub
loop
mov
lock
cs
fcoms
inc
ficomps
lahf
test
out
xchg
or
pop
das
cmc
fsubl
dec
jnp
js
mov
dec
add
lahf
add
bound
inc
mov
or
adc
jno
lea
fwait
mov
adc
test
push
subb
sbb
ror
out
or
push
sub
out
pop
push
setno
ss
repnz
arpl
repnz
in
cs
jno
scas
mov
xlat
add
jno
mov
fiadds
pop
loopne,pn
dec
aad
out
insl
notb
loopne
lock
jecxz
xchg
jge
fists
dec
sbb
or
xchg
scas
and
je
jge
push
pop
into
mov
cmp
adc
mov
cmp
sbb
std
push
call
int
mov
sbb
add
mov
mov
cltd
xor
push
mov
popa
out
xchg
stos
mov
push
mov
insb
and
push
or
or
aas
test
sbb
shl
cmp
loopne
outsl
clc
movsl
sbb
push
lcall
pop
mov
das
xchg
push
inc
icebp
mov
mov
movsl
xor
xor
std
adc
sub
push
xor
adc
mov
mov
sub
add
push
mov
mov
inc
cltd
cmp
adc
enter
lock
push
push
mov
add
pop
mov
sbb
loopne
cmp
sbb
cmp
xchg
dec
push
sbb
test
and
adc
or
ss
popf
divl
xchg
xchg
push
mov
mov
mov
push
xor
add
inc
sti
fsubr
ja
cmpxchg
loop
ljmp
cwtl
ljmp
fnstcw
sbb
addl
fsubr
insl
xor
mov
mov
dec
sbb
lcall
cmp
fs
sbb
das
push
ds
push
test
mov
lahf
mov
das
fiadds
fstpt
fs
aaa
pop
and
mov
cmp
out
repnz
pop
stos
fldt
arpl
ror
in
ljmp
in
std
jnp
sti
sub
test
mov
lock
push
mov
addr16
xchg
pop
mov
mov
xchg
popf
je
mov
jg
nop
sbb
sub
out
mov
dec
pop
cmp
mov
notb
mov
sub
repnz
loopne
ret
and
mov
cmp
xor
sbb
cmp
pop
sbb
and
jne
orps
data16
fstpl
xlat
xchg
iret
sub
push
fcmovne
adc
mov
jae
adc
cmpsb
adc
xor
es
int3
mov
mov
aad
inc
and
jne
pop
mov
pop
or
out
pop
inc
daa
xor
cli
mov
mov
cwtl
mov
xor
jge
inc
and
inc
outsb
mov
xchg
dec
rcrb
movsl
ds
test
jns
pop
mov
jne
sar
push
xchg
jecxz
xchg
lret
aam
stc
add
or
mov
push
or
wrmsr
js
and
lea
push
or
xchg
inc
iret
xor
mov
jl
cmp
pop
cld
das
sbb
test
xchg
pop
sbb
xchg
ret
lock
sbb
movl
sarl
lahf
out
cmp
out
mov
or
push
lods
push
pop
jecxz
int
repnz
into
mov
mov
dec
inc
jb
pusha
or
inc
pop
mov
movsb
scas
enter
pop
jl
fnsave
xchg
jno
div
fisttps
mov
xchg
cltd
inc
pop
mov
inc
sbbb
std
testl
mov
mov
or
mov
add
mov
movd
jmp
and
and
movsb
aas
pop
inc
push
arpl
cmp
mov
in
pop
pusha
push
sbb
das
jle
lods
lds
scas
lahf
mov
cmc
xor
cltd
shlb
int
cmp
inc
scas
sbb
push
cmp
and
or
push
lret
fdivl
bound
and
pop
insl
lcall
orb
xor
jecxz
bound
xchg
mov
gs
scas
sub
jmp
xchg
mov
add
xor
mov
mov
call
xchg
jle
cmp
inc
cltd
adc
cmp
leave
sub
outsb
xlat
sub
mov
xchg
inc
inc
out
out
int3
sbb
push
aas
sahf
jl
xor
inc
out
dec
enter
cmp
das
xor
jecxz
ljmp
adc
cmp
cli
sub
daa
cltd
xor
mov
fwait
lret
movlps
mov
or
ss
scas
jmp
ret
jns
outsb
ljmp
fldcw
or
lahf
jne
das
mov
xchg
cltd
pop
sbb
and
dec
imull
scas
sbb
pop
sub
into
jl
lods
mov
out
xlat
mov
jp
fwait
cltd
mov
cltd
icebp
scas
jnp
cmp
jns
arpl
jl
add
icebp
jg
jae
push
cmp
cmp
leave
ds
out
inc
unpcklps
das
mov
push
lods
and
lods
movsl
sahf
add
cmp
scas
sbb
or
aas
sbb
and
lcall
iret
pop
leave
fbld
das
jle
cli
dec
sbb
pusha
lods
mov
iret
mull
f2xm1
rorb
mov
movsb
into
nop
das
mov
adc
inc
insb
in
adc
fstl
add
out
adc
push
into
rcll
cli
pop
cmp
pop
jnp
push
jle
inc
aas
lods
or
and
and
jne
rorb
dec
fwait
or
aad
cld
or
cmc
int
sub
shlb
jge
mov
daa
xchg
cld
lret
pop
outsl
das
and
add
fucom
ss
pop
fnstsw
call
push
jb
sbb
mov
popf
or
lods
in
outsl
jecxz
popl
jle
lcall
jne
and
cmp
push
jno
xlat
lock
push
lcall
sbb
push
xchg
or
das
mov
dec
add
test
sbb
enter
out
and
pop
fwait
notb
dec
cmp
jge
stos
add
jge
addr16
mov
cmc
outsb
mov
pusha
mov
mov
inc
pop
fisubrs
cmp
adc
mov
pop
or
popa
lock
jp
jl
rclb
cmc
clc
add
movsl
and
lret
cmp
adc
pop
sbb
out
dec
xlat
sbb
adc
xchg
or
cmp
mov
xchg
sbb
iret
or
lock
inc
cmp
scas
fisttpll
lock
mov
enter
xchg
sbb
shr
xchg
pop
mov
sub
fnstenv
sar
cmp
adc
cli
scas
mov
mov
jne
sar
int
or
push
test
roll
pop
cmp
rcrb
pop
dec
pop
xlat
lret
mov
mov
fsubrs
xchg
test
push
adc
jl
xchg
mov
out
jns
aam
mov
cltd
int
idivb
cmp
jl
lcall
mov
fisttpll
xchg
jns
jecxz
xchg
inc
scas
pop
mov
orl
add
jmp
xchg
mov
pop
jmp
push
cmp
roll
sub
dec
fldl
cwtl
and
mov
dec
addr16
pop
or
jno
mov
or
test
rorl
add
jg
mov
mov
pop
adc
fsubl
out
arpl
or
lock
cs
cmp
and
jle
popa
push
into
fistpll
adc
inc
ret
stc
movsl
and
xchg
movsb
mov
sub
imul
sarl
jb
mov
int
mov
test
popf
das
fisttpll
bswap
out
dec
and
sbb
adc
pop
js
mov
negl
loope
mov
dec
adc
into
mov
movsl
push
mov
or
push
stc
pop
mov
add
movsb
lcall
out
add
and
or
cmp
sarl
add
fdivl
iret
sti
ljmp
cwtl
push
rcr
or
push
into
mov
cltd
scas
jb
sti
shll
call
add
xchg
mov
jl
jne
aas
pandn
jmp
in
xor
mov
fisttpl
adc
pushf
dec
adc
sbb
test
xor
and
push
aad
std
xor
fidivrl
lret
sbb
aad
test
mov
dec
mov
fdivs
mov
rolb
xchg
mov
inc
out
cmpsl
mov
push
sahf
sbb
xor
ret
mov
xor
lock
aas
out
push
nop
mov
outsl
pop
pop
adc
iret
mov
jb
in
loop
fistl
push
fisubrs
ja
adc
shlb
sbb
scas
movsl
outsl
xchg
push
call
and
stos
add
in
and
mov
jo
mov
and
icebp
sub
cld
mov
and
fwait
divb
pop
xchg
xchg
pop
insl
pop
jno
and
cmp
enter
xor
std
adc
mov
xchg
dec
cmp
pushf
xchg
cmpl
adc
jne
mov
push
pop
lods
xor
lret
mov
imul
inc
pop
pop
mov
sub
loopne
and
movsb
push
mov
mov
lds
inc
test
fidivrl
sbb
add
inc
or
pop
or
out
das
inc
sbb
xchg
or
fs
cmpb
xorl
push
dec
je
xchg
cwtl
sub
ljmp
paddusw
gs
je
mov
mov
xor
decl
mov
in
cmp
mov
xor
ret
xchg
adc
popa
mov
sub
das
decb
push
lcall
mov
xlat
fldl
mov
scas
xor
sub
stc
pop
clc
icebp
and
movsb
scas
jmp
sub
xchg
xchg
and
xor
xlat
sbb
jb
cltd
inc
jp
lcall
out
lcall
cltd
push
popf
xor
sbb
je
push
jo
sti
add
lcall
popf
jo
das
cmp
push
pop
xchg
xchg
cs
push
push
into
test
jl
and
fildll
xchg
pop
mov
push
mov
adc
xchg
in
aas
push
insb
hlt
stos
mov
cli
fbstp
xor
js
pop
shl
pushf
and
xchg
movsl
movsb
and
inc
xchg
mov
jp
je
cmp
jl
dec
rcrb
pop
iret
test
inc
aaa
notl
or
jne,pt
pop
dec
fcomip
out
and
addb
das
decb
stc
stc
push
fisubrl
or
cli
sarb
lods
push
sub
and
add
xchg
mov
fistl
in
cwtl
xchg
jb
inc
adc
push
pop
lods
xor
dec
sub
and
mov
sbb
pop
mov
lock
jne
xor
in
pushl
pop
xor
sarb
icebp
jb
jb
insl
inc
pop
int3
and
pop
shl
fisubs
jle
popf
dec
push
cmp
mov
fnstenv
mull
int3
in
into
jl
mov
call
and
mov
mov
sub
cmc
adc
push
movsl
adc
popf
out
pop
into
mov
push
lret
in
add
scas
out
stos
pop
add
sbb
jle
cmpsl
jl
lret
nop
sbb
sbb
add
je
ss
inc
sbb
sbb
outsl
and
push
sti
in
or
pop
rcl
in
cmc
iret
push
sbb
or
dec
xchg
mov
pop
mov
movsl
adc
iret
movsl
sub
shll
aad
add
das
mov
in
mov
cltd
int3
dec
shlb
mov
sub
and
fisttpl
mov
sbb
fwait
imul
ret
sbb
sub
adc
das
dec
sbbl
das
cmp
push
sahf
frstor
xchg
int3
adc
push
cltd
cmp
les
push
mov
adc
jg
addr16
lods
test
sbb
push
fldt
mov
out
mov
push
or
dec
movsb
inc
sarl
cwtl
popf
out
and
rcll
sbb
sbb
pusha
sahf
rclb
orl
or
sub
add
cmp
sbb
push
icebp
xor
xor
mull
push
std
jb
inc
jmp
jno
fld1
outsl
movsb
sbb
cmpsb
cld
sub
in
out
clc
inc
cmc
mov
lahf
out
ret
jb
add
pop
xchg
jnp
rcrl
int
jo
fstpl
insb
xlat
mov
scas
jecxz
or
xchg
mov
xchg
xor
pop
dec
or
sbb
fmul
add
push
xor
cmp
add
outsl
std
mov
xchg
jns
mov
jae
fists
push
inc
lcall
inc
and
sbb
and
sbb
js
sub
inc
xor
sbb
mov
mov
xor
pop
das
sub
pop
dec
in
out
ja
popf
pop
int3
push
fisubrl
pop
je
mov
inc
orb
frstor
adc
mov
lcall
shlb
imul
loopne
mov
adc
subb
cltd
adc
movsb
movsl
movsb
fmull
movsb
cmpsb
icebp
ja
popa
pop
and
orl
mov
xchg
in
adc
mov
outsl
xchg
iret
add
push
lcall
adc
pop
cmp
pusha
mov
add
cli
cltd
adc
sub
mov
mov
pop
outsl
jns
imul
out
pop
fcmovnbe
out
push
lock
fldln2
adc
sub
cmp
xchg
lods
jl
xchg
or
ret
sahf
jecxz
mov
fwait
movsb
imul
mov
pop
pop
pushf
loope
das
pop
xor
jno
loopne
das
adc
scas
sub
mov
jl
out
jb
adc
clc
call
int
ret
cwtl
out
lds
in
fstl
fscale
mov
push
dec
in
mov
mov
jecxz
sahf
add
xchg
jo
pop
push
rcll
xchg
iret
xchg
cltd
or
test
push
sbb
jge
xchg
hlt
jne
jge
ja
in
xor
faddp
lret
mov
hlt
jnp,pt
lods
pop
cmpsb
scas
pop
out
push
xor
xchg
mov
xchg
mov
sbb
jge
adc
mov
sbb
movsb
movsb
adc
cmp
push
inc
mov
adc
sbb
addb
les
jae
roll
sub
sbb
and
and
cwtl
hlt
into
pop
ja
sbb
call
repz
and
scas
xchg
and
sbb
xchg
test
xchg
adc
clc
ja
sbb
movsl
dec
jmp
mov
inc
mov
cmp
inc
je
out
mulb
mov
sub
sub
int
pop
scas
push
aas
pop
stos
mov
add
jae
pop
mov
inc
adc
fwait
xlat
shlb
repnz
jl
fstpt
add
mov
and
jge
std
out
pop
aas
popf
jnp
aaa
in
js
test
jl
mov
or
xchg
movsl
jecxz
cli
and
movsb
sub
adc
xorl
jbe
fcoml
and
into
fsubl
mov
int3
sbb
pushf
sub
and
jl
xchg
outsb
or
comiss
pop
lahf
sbb
cwtl
imul
cltd
lcall
nop
sbb
fwait
mov
adc
pop
xor
stos
outsb
mov
sahf
push
movsb
arpl
pop
sbb
negb
sysret
mov
repz
mov
imul
testb
inc
mov
ja
or
aas
ret
movsl
mov
inc
lahf
xchg
cmpsb
loop
cs
push
pop
jnp
ss
adc
pop
mov
inc
adc
rcr
adc
jge
mov
aad
or
sqrtps
mov
xchg
push
icebp
sar
xor
ja
cmpl
dec
loop
sbb
cwtl
mov
das
adc
ds
out
aam
pop
and
xchg
sti
rep
fs
jle
xchg
add
and
cmp
xchg
rcrb
jp
fstpt
cmp
mov
and
subb
cltd
sbb
int
aaa
fs
in
and
mov
cmp
fiaddl
mov
stc
insb
adc
jb
jl
in
and
shlb
movsl
push
sarl
test
mov
fcmovu
vaddpd
stc
jb
mov
sbb
jmp
mov
cmp
sub
pushf
sahf
xchg
out
xchg
rolb
or
cmp
stos
sbb
xchg
in
inc
jg
mov
mov
and
push
cmc
adc
adc
dec
pop
cmp
mov
enter
or
add
std
loop
in
pop
dec
and
mov
cmp
rep
jg
fdivp
pop
cld
and
stc
xchg
rcrl
inc
dec
jp
in
sub
cmp
lahf
mov
imul
test
adc
lock
les
jg
aam
cltd
outsl
loopne
or
and
sub
clc
pop
loop
fstl
ja
mov
push
rcrl
push
sahf
into
into
movsb
pop
fcompl
xchg
jno
sbb
sub
dec
sbb
pop
sbb
scas
adc
mov
xchg
and
arpl
dec
cs
jge
test
mov
cmp
test
sbb
push
movsb
mull
xchg
adc
mov
enter
stos
push
ficompl
cmp
scas
sub
push
ja
scas
fdivrl
pop
pushf
sbb
jo
pop
pop
int
dec
movsb
sbb
mov
nop
sub
sbb
push
or
pop
cmp
insl
ret
sbb
movsb
cld
into
mov
xchg
jg
lahf
imull
leave
fsts
subb
sbb
push
jg
adc
rclb
ret
mov
ds
in
mov
rorl
xchg
push
mov
leave
out
ja
cmpsl
cmp
movsl
sbb
push
sub
push
das
icebp
int3
sbb
xchg
hlt
out
cltd
outsb
jmp
into
imul
nop
out
mov
dec
movsl
nop
out
mov
mov
mov
mov
rclb
ja
sahf
fstl
sub
stc
cmp
sub
out
ret
imulb
dec
outsb
xor
jg
pop
xchg
iret
jecxz
mov
and
mov
aad
xor
cmp
xor
es
inc
xchg
gs
fwait
xor
sbb
gs
mov
push
jnp
movsl
arpl
sub
dec
adc
mov
cmp
mov
sti
aaa
into
divl
add
das
pop
clc
xchg
cs
cmp
movsl
jle
xchg
mov
cmp
adc
mov
xor
sub
cwtl
std
cmp
jge
lret
mov
cmp
nop
sbb
popa
scas
jl
lods
push
sbb
mov
push
int3
decb
jns
test
push
into
cmp
xchg
hlt
cltd
sbb
popf
cmp
ret
negb
mov
sub
imull
sbb
ret
or
movsl
testl
pushf
adc
cltd
xor
cmpsl
movsl
jno
xlat
xor
scas
pop
cmpsl
and
mov
cltd
jge
mov
cwtl
xchg
icebp
icebp
out
push
xor
mov
pop
das
roll
xchg
std
pop
das
pop
mov
das
push
loopne
fadds
fistpll
jbe
aad
mov
adc
imul
daa
sbb
jl
mov
xchg
cmc
adc
nop
fsubr
shr
push
sbb
mov
les
sbb
mov
lock
mov
and
lret
int
negl
lds
cmp
sbb
pop
loopne
std
jno
and
mov
push
lock
fadds
sbb
push
add
sbb
mov
push
pop
cld
lock
lds
xor
subl
xor
push
lcall
test
scas
lods
rclb
movsl
xlat
and
movsl
fstps
adc
and
push
int
jns
xor
mov
fidivrl
adc
jecxz
xchg
inc
xor
or
and
std
movsl
into
cmp
lock
add
dec
xchg
jp
pop
call
sahf
roll
xchg
xchg
fsubrs
add
lock
mov
rolb
mov
pop
imulb
mov
jge
push
arpl
cmp
int
push
fucom
jecxz
and
xor
mov
dec
sahf
test
sbb
aad
pop
fisubs
mov
xchg
scas
lcall
fstl
popf
fcomps
adc
jae
add
adc
or
insl
push
xchg
fsubrs
lret
gs
cmp
dec
jg
xchg
sbb
outsl
mov
push
adc
and
xchg
nop
movsb
out
js
je
mov
in
pop
fsubrl
sahf
add
cmpl
mov
bound
insb
mov
popf
cmp
mov
inc
pop
sub
sbb
repnz
cmp
je
clc
mov
sbb
je
nop
mov
ljmp
cs
jl
adc
mov
inc
les
pop
call
fs
cmp
pop
adc
sbb
insb
sub
jl
mov
gs
pop
test
xor
pushf
cltd
das
push
pop
sti
or
inc
sbb
scas
cld
fisubrl
sbb
lcall
sbb
sbb
fucomp
hlt
lock
insl
in
out
mov
iret
popf
fwait
adc
jle
or
cmp
cltd
sbb
nop
out
inc
push
and
mov
popf
adc
lret
movsl
test
mov
sbb
mov
push
into
sbb
jge
xchg
and
aam
jecxz
out
movsl
xor
aas
fstpl
sbb
inc
cmp
scas
push
aaa
imull
cmp
data16
jbe
das
sar
mov
je
movsl
jnp
and
lock
mov
xchg
sbb
fcmovnu
mov
lea
gs
cmp
pushf
pop
scas
aam
mov
pushf
jno
push
inc
adc
movsb
call
mov
stc
sti
outsb
les
jb
clc
mov
cmp
sbb
or
test
adc
inc
fwait
enter
and
adc
mov
imulb
jecxz
mov
ret
xchg
sub
fstps
pushf
cli
test
sbb
pop
pop
iret
lahf
xlat
repz
mov
cmp
jmp
outsb
cmp
push
mov
out
mov
jnp
mov
jmp
cwtl
push
sbb
mov
cs
xchg
mov
inc
scas
ficoms
xchg
xor
xchg
cltd
and
mov
mov
mov
push
cld
jno
xchg
xchg
inc
mov
push
push
sbb
popf
and
lret
inc
js
add
push
add
int
pop
les
arpl
and
mov
mulb
imul
das
fsubr
mov
dec
and
sbb
xchg
shll
inc
movsb
cmc
sub
dec
cmp
push
jmp
dec
imul
or
inc
cmc
push
pop
sbbl
xchg
sbb
xchg
cmp
xchg
rolb
xchg
scas
xor
popf
insb
insb
negb
push
adc
xor
jno
cltd
dec
out
das
pop
roll
mov
add
shlb
inc
xchg
mov
dec
xchg
fstl
fnstcw
mov
jbe
adc
mov
jl
arpl
pop
lods
leave
or
mov
xlat
jb
pushf
xchg
lahf
pop
cmp
inc
pushf
orl
mov
adc
and
or
and
mov
xchg
push
out
js
iret
into
xor
prefetchw
or
icebp
in
pop
fld
sbb
cmc
lcall
loopne
or
arpl
or
inc
sbb
add
movsl
add
aad
insb
movsb
loop
sbb
dec
sbbb
shlb
sub
popf
stos
sbbb
and
jp
xor
scas
fwait
jno
add
pop
adc
mov
insb
pop
dec
and
lock
negb
lods
fs
imulb
cmp
mul
scas
cltd
inc
mov
sbb
sub
jmp
xor
mov
mov
mov
fwait
imul
outsl
sbb
push
add
push
icebp
fwait
sti
sbb
aam
loop
imul
cmp
mov
jg
scas
sbb
popa
stc
pushf
dec
pf2iw
adc
stos
sub
lcall
or
dec
xor
add
mov
les
lret
sbb
pop
les
push
xchg
sbb
loop
daa
scas
cmp
repz
std
das
sub
mov
jge,pt
and
cmpsl
test
popf
add
loopew
cmpsl
pop
shll
and
das
rclb
mov
mov
add
and
das
add
loopne
rclb
das
adcb
add
xorl
mov
test
mov
fs
jle
or
pop
das
daa
popf
fisttpl
dec
outsl
in
int
mov
xchg
xlat
adc
jno
push
jg
mov
add
and
xlat
repz
repz
push
lods
pop
xchg
pop
int
sbbl
mov
out
mov
and
les
mov
dec
add
cmp
push
mov
les
cwtl
sbb
jmp
push
cltd
and
das
fwait
or
add
outsb
mov
pop
aad
lock
lahf
outsb
xchg
mov
pop
fcoms
mov
iret
fdiv
sbbb
lret
xchg
jb
or
rcl
rcll
xor
jge
inc
push
ja
movsl
lods
cmp
cmpsb
push
in
fldl
xchg
adc
bound
push
pushf
fnstsw
int
fstpl
icebp
sahf
popf
aas
push
push
fistps
cmp
ret
cmp
adc
scas
lock
jecxz
imul
rcrl
mov
outsb
and
sbb
js
pop
sbb
fadds
mov
outsb
cltd
add
xchg
jge
push
scas
cltd
out
les
xorl
aam
pop
xchg
sbb
xor
mov
jnp
pop
and
cltd
pop
xor
ss
movsb
push
and
mov
sahf
movsb
lea
imul
mov
jb
in
jmp
cltd
inc
lret
rclb
jb
mov
jle
popf
test
mov
lcall
inc
push
mov
mov
xor
out
ljmp
cli
notb
pop
fcomps
mov
mov
inc
imul
std
ficompl
imul
inc
stos
mov
dec
dec
mov
mov
rcr
cmp
xchg
mov
scas
iret
xor
xchg
scas
adc
lret
inc
push
out
mov
jmp
pop
shl
inc
mov
lcall
inc
ja
sbb
inc
push
movsb
ds
imul
movsl
adc
xchg
movsl
and
xchg
fwait
bound
test
loop
mul
ja
pop
idivb
add
jle
dec
jns
or
mov
int3
mov
outsb
pop
int3
movsl
inc
adc
sub
popf
icebp
push
sbb
test
or
lcall
ret
scas
es
cli
stos
out
lock
out
out
insl
xor
sbb
outsb
inc
jle
popa
ret
ret
pop
test
mov
and
lock
mov
push
xchg
lret
xchg
je
xchg
dec
leave
ja
xchg
fs
fdivrl
insb
cmp
mov
arpl
mov
aas
out
xchg
push
icebp
mov
fdivs
mov
xchg
outsb
mov
movsb
shll
int
mov
mov
xchg
mov
mov
scas
dec
bound
add
sub
hlt
scas
fnclex
dec
rcrb
scas
sbb
dec
mov
test
adc
or
lahf
cmp
xchg
les
mov
xchg
in
into
fdivrs
dec
pop
mov
adc
lea
call
cltd
xchg
dec
push
or
movsb
mov
out
push
xchg
dec
add
cmp
ret
sbb
fmul
fwait
aad
mov
popf
add
cwtl
pop
sbb
daa
sarl
push
test
loop
jb
add
add
aaa
out
cltd
and
icebp
sbb
push
mov
hlt
movsl
out
aas
iret
rorb
pop
mov
das
mov
cs
cmp
scas
fcmovu
cmp
mov
sbb
push
push
popf
lahf
dec
xlat
or
dec
mulb
xchg
pop
mov
push
pop
lahf
cmp
dec
mov
sbb
xchg
lods
pop
adc
mov
xor
mov
push
jl
jnp
jl
xchg
jo
jno
scas
jl
aas
add
call
leave
insl
inc
mov
push
pop
lock
adc
jl
adc
fcomps
je
inc
ror
sbb
sbb
inc
xor
loopne
fstpl
roll
mov
popf
dec
sarl
adc
dec
movsb
out
cwtl
jae
aad
sbb
cwtl
jns
push
cmpxchg
pop
pop
cld
xor
inc
add
fisubl
in
lock
cs
adc
in
shlb
outsb
sarb
jb
add
mov
rcll
xchg
mov
xor
rcl
ret
imul
cmp
movsb
cwtl
adc
sbb
lcall
xor
xchg
and
mov
jecxz
mov
xor
mov
jae
jmp
movsl
icebp
push
jb
fnclex
jo
add
pop
lcall
mov
repnz
xor
cmp
push
push
lock
push
dec
ret
call
aas
pop
fwait
aam
cmp
inc
sub
rcrb
clc
nop
pop
mov
int3
cld
aad
loope
mov
aaa
rcrb
sbb
test
xchg
fisubl
fiaddl
dec
mul
xor
pushf
cld
cmp
mov
fidivs
fwait
push
cmp
cld
icebp
cmp
sbb
or
mov
xchg
and
and
cmpsl
xchg
mov
xchg
push
adc
xchg
xor
cs
xor
mov
addr16
and
dec
scas
test
add
xchg
or
dec
and
dec
sbb
sbb
movsb
fcmovu
inc
pop
dec
inc
scas
sbb
in
loop
dec
inc
loope
in
fisttpll
out
outsb
pop
std
sbb
mov
xlat
mov
lret
sbb
scas
outsb
out
movsw
jbe
and
sbb
lcall
pop
mov
sbb
fwait
addl
in
popf
imul
cmpsl
cs
shr
and
add
mov
iret
xchg
lods
dec
adc
mov
adc
loope
movsl
and
sbb
lcall
cmp
out
add
popf
or
out
int3
mov
mov
xor
mov
jbe
xchg
test
mov
jb
mov
mov
adc
je
iret
jecxz
out
inc
sarb
inc
scas
add
fisubrs
jl
xchg
lret
js
sbb
das
sbb
out
std
xchg
xlat
out
dec
lcall
fwait
xor
cltd
and
sbb
sub
out
sbb
and
out
cld
xor
add
and
aaa
pop
shll
shl
xchg
mov
mov
mov
pop
and
mov
insl
inc
std
dec
sbb
cmovge
fsts
lds
sbb
testb
mov
pop
pop
adc
insb
xchg
mov
sub
jb
fbstp
sbb
fdivr
movsb
adc
out
push
fisubs
shlb
sbb
scas
inc
jecxz
xchg
xor
rcrb
push
pop
sti
dec
dec
lock
outsl
ret
fsts
mov
add
mov
icebp
mov
inc
jp
cmp
jecxz
sub
cmp
aaa
mov
cmp
into
jecxz
xchg
sub
inc
mov
mov
daa
add
jns
loope
arpl
mov
xchg
pop
mov
aas
xchg
inc
rcl
pop
testb
cmp
jge
sahf
mov
dec
and
and
mov
outsl
push
pushf
xor
test
adc
and
add
loop
ss
std
mov
and
mov
stos
fstcw
popa
pop
sbb
pop
inc
pop
sti
cmc
setns
cmp
push
or
pop
les
mov
mov
scas
adc
aas
and
aas
dec
cmp
jbe
sbb
scas
arpl
inc
mov
out
sub
icebp
cltd
scas
push
mov
mov
fsubp
sbbb
insb
pusha
cmp
in
addr16
out
loop
cmp
adc
xchg
loop
ffree
jno
xor
pop
pop
dec
aas
xchg
inc
adc
ret
inc
lahf
push
cmp
mov
push
imul
gs
in
pop
fidivrs
fs
outsl
aas
push
and
jae
xchg
mov
adc
xor
mov
rorb
mov
push
fdivrl
fcompl
or
js
dec
ljmp
adc
movsl
inc
int3
lcall
das
mov
or
sbb
mov
mov
incl
jecxz
in
mov
mov
push
and
xor
pushf
mov
lods
cmp
stc
mov
mov
add
fdivs
inc
cmc
movsl
sub
jp
arpl
sub
or
inc
jp
mov
int
mov
mov
mov
pop
gs
cmp
mov
lods
js
adc
sbb
or
loopne
dec
sbb
and
xlat
or
or
cmp
xlat
scas
adc
sbb
movsl
and
and
test
xchg
mov
fcoms
or
xchg
into
std
jno
jecxz
pop
mov
bound
clc
hlt
pop
loopne
xlat
daa
pop
cmc
negl
inc
loopne
add
sub
inc
imul
sbb
in
push
mulb
pop
aaa
int3
fstpl
mov
pop
push
int
jo
lcall
test
insl
xor
in
shll
xor
mov
in
std
nop
pop
add
popa
fstps
int
push
sub
and
movsl
dec
fdivr
out
pop
addr16
popa
fsts
pop
mov
jl
sti
sbbl
xchg
mov
sbb
cmp
mulb
insb
push
or
sbb
cmpsb
rcrb
pushf
mov
pushf
jo
pushf
addl
sbbb
push
aas
push
inc
xchg
ss
adc
mov
out
pop
ja
jo
fisttpll
mov
inc
jno
pop
fcoms
movsb
sub
scas
push
sbb
jp
pushf
daa
and
insb
out
fiaddl
sbb
and
sbb
fdivrl
test
jb
cs
fistl
sbb
mov
sbb
scas
jnp
scas
lahf
xchg
lods
push
pop
pop
push
pop
cmp
inc
push
movsl
cltd
lods
cmc
or
fsubrs
or
loop
cmpsl
or
xchg
push
les
push
cmpsb
mov
je
push
jne
dec
push
cmp
movsb
pushf
xor
in
loopne
ljmp
jb
wrmsr
sbb
das
lock
fldl
test
inc
scas
push
or
fst
cmovge
mov
push
fcom
movsl
mov
push
imul
jle
add
jne
daa
xchg
pop
pop
xor
mov
push
leave
xchg
outsl
lock
sbb
cs
test
scas
arpl
add
push
adc
rclb
sar
into
lcall
dec
inc
inc
stos
bound
lret
lret
das
jmp
sbb
dec
xor
stos
mov
xor
decl
test
fmul
loope
into
outsb
addr16
cmp
cltd
mov
rcrb
inc
std
jge
pop
xor
xchg
ljmp
movsb
inc
push
hlt
fs
mov
out
pop
mov
push
jmp
fadds
xchg
mov
shll
sub
test
loope
aaa
mov
hlt
jbe
fistps
cmp
jno
in
fildll
mov
shlb
pop
inc
daa
fs
push
repz
mov
pop
jl
and
pop
or
clc
repz
cwtl
push
and
cld
xor
fs
cmp
movsl
sub
fucomip
lock
cmp
mov
pop
jge
popf
mulb
cwtl
sbb
cltd
cmp
es
jbe
push
aaa
lret
push
mov
lcall
jmp
inc
lcall
movsl
xor
mov
stos
mov
mov
fwait
lahf
xor
in
pop
pusha
sbb
pop
xchg
lcall
std
in
shlb
xor
hlt
call
pop
mov
mov
dec
cltd
mov
mov
mov
cmp
in
pop
lahf
aas
scas
push
mov
popf
jb
mov
imul
dec
les
push
scas
push
inc
test
ficomps
jbe
movsl
sbb
xor
sbb
mov
adc
and
mov
xor
mov
and
cmp
adc
lcall
rorb
call
cltd
popf
out
movsl
movsl
call
push
inc
lds
cltd
pop
hlt
cmc
and
xchg
or
push
pop
out
adc
aam
mov
cwtl
leave
iret
push
lret
mov
push
push
or
daa
mov
jmp
pop
cld
lock
fimull
daa
fisttpll
adc
jmp
rclb
adc
fnstcw
test
sbb
sub
push
xchg
cmp
add
ss
scas
cmp
cld
fwait
mov
out
push
xlat
adcl
fwait
sbb
or
aam
fwait
mov
and
add
and
sub
and
sub
in
fisttpll
dec
out
xor
push
sbb
sub
in
xchg
sbb
xor
sbb
cwtl
mov
jecxz
jo
or
mov
fstpl
movsl
in
push
and
adc
xchg
cwtl
pop
sbb
mov
shr
imul
sbbl
pop
stc
cwtl
mov
in
repz
fcmovu
inc
loop
push
mov
dec
test
lret
add
gs
and
fbld
movsl
sub
xchg
xchg
cltd
pop
cwtl
loopne
sbb
lret
and
mov
or
sbb
adc
adc
or
and
das
enter
gs
std
mov
mov
mov
mov
out
mov
mov
out
mov
and
mov
and
and
loop
test
mov
fiaddl
inc
pop
das
add
or
inc
cwtl
sub
jo
sbb
mov
cld
pop
xchg
and
mov
lock
cs
push
mov
fistpl
cltd
inc
add
std
clc
or
cmc
fildl
mov
fwait
or
push
mov
xor
adc
or
test
fbstp
mov
fs
das
pop
mov
test
or
jo
pop
movsb
pusha
pop
add
sbb
dec
shll
sbb
pop
and
std
and
push
in
cmp
clc
pop
jp
ret
ret
pop
or
push
leave
sbb
or
and
js
movsl
test
lods
mov
movsb
add
sbb
xchg
mov
adc
aam
call
adc
pop
pop
dec
lea
cmp
outsl
scas
arpl
mov
aas
xchg
sbb
scas
outsb
insb
ficoml
jne
lods
mov
sub
sbb
xor
rclb
ret
cltd
pop
push
loop
das
pop
into
out
and
cltd
loop
pop
and
push
lock
scas
outsb
cmpsb
loop
mov
xor
xchg
mov
xlat
out
bt
cmpsb
and
mov
pop
lods
out
sub
testb
ds
scas
jle
push
cltd
lcall
aaa
testl
mov
jl
sbb
push
push
ror
dec
xchg
adc
mov
add
jne
mov
lcall
xchg
add
mov
jo
push
push
xchg
dec
fistpll
iret
xchg
mov
std
jge
outsb
inc
stc
not
ja
rcrb
mov
inc
push
and
cs
loopne
or
arpl
sub
inc
push
lret
push
xor
sahf
mov
int3
cmp
sub
ds
movsl
pop
das
out
and
and
cs
mov
scas
xchg
xchg
aam
mov
push
sbb
push
xchg
lock
je
cld
and
fistps
jge
lret
por
fs
push
sahf
xlat
and
fwait
movsl
sbb
fwait
orl
mov
out
jge
inc
fmuls
push
cmpl
pop
cs
outsb
and
pushl
jl
mov
bound
xchg
sahf
movsb
cmp
push
sbb
xor
mov
adc
sbb
scas
leave
mov
mov
pop
mov
out
mov
or
and
mov
push
aaa
cwtl
dec
pop
sbb
ljmp
inc
clc
fstl
cmp
xor
sti
mov
sbb
ds
stos
add
ss
adc
daa
and
cs
das
jne
fwait
and
add
push
mov
lahf
outsb
xor
pop
lahf
jge
sbb
jecxz
dec
or
mov
mov
test
insl
add
movsb
pop
lock
and
insb
outsb
and
sub
mov
xor
arpl
push
std
or
lcall
xlat
shll
mov
push
outsb
pushf
std
mov
mov
or
jb
inc
or
adc
pop
insl
jno
adc
or
mov
mov
jg
roll
mov
in
push
mov
push
push
adc
mov
xchg
push
sbb
sub
inc
or
popf
xchg
movsb
xor
dec
aas
stc
push
adc
in
xor
aaa
call
mov
xor
pop
ficompl
or
pop
mov
mov
lahf
adc
push
jmp
push
push
int3
sbb
sbb
aad
lock
xor
xchg
pusha
cli
sbb
addr16
or
adc
lock
movsl
xchg
jmp
adc
dec
ja
cmpsb
push
movsl
and
nop
mov
mov
xlat
iret
lcall
aad
mov
mov
lock
inc
scas
cmp
das
icebp
imul
lock
mov
jmp
lret
pop
aad
adc
xchg
into
dec
push
scas
cmp
push
add
iret
popf
jae
cmc
push
outsb
pusha
sbb
loopne
jo
sbb
testb
in
xor
dec
jne
jo
push
iret
aad
sbb
call
out
mov
bnd
pop
mov
jge
adc
and
xchg
mov
ljmp
ret
mov
cwtl
adc
xchg
outsl
adc
sbb
adc
pop
dec
outsl
inc
cmp
adc
stc
mov
add
add
cltd
xor
or
ja
sbb
xor
cmp
outsb
push
mov
pop
ja
xor
jo
adcb
jae
enter
imul
mov
addr16
hlt
shlb
pop
mov
pop
push
sbb
rcrl
dec
push
iret
rcll
jno
into
nop
add
xchg
mov
xor
nop
call
ja
push
aam
movsl
push
push
les
shlb
adc
cmp
and
inc
insb
jns
das
mov
popf
movsb
inc
and
pop
call
test
fdivl
lahf
fnsave
aaa
mov
add
sarb
push
lret
push
or
les
icebp
mov
aad
cwtl
loopne
mov
sbb
and
sbb
mov
lret
fs
cmp
xchg
push
stc
inc
gs
xchg
dec
call
or
stc
mov
xchg
outsl
cmc
jb
pop
or
inc
cltd
mov
loop
dec
js
shrl
pop
pop
andl
cwtl
xor
pop
fadds
pop
pop
mov
cli
cwtl
jnp
call
test
fs
js
mov
paddb
jne
mov
imull
dec
stos
loopne
outsl
out
mov
jnp
rorb
fidivrs
sbb
push
out
xorb
and
rcll
sarb
cld
push
sbb
inc
aas
and
arpl
std
sbb
mov
das
sub
mov
mov
shl
imul
fucomp
mov
push
jmp
fcmovnbe
fisttpl
test
gs
push
rorl
push
flds
pop
movsl
pop
and
les
loope
fstps
loopne
jge
xor
mov
cmp
ret
dec
and
mov
sbb
pop
popf
lods
cmp
sbb
inc
sub
and
shlb
mov
sti
cltd
mov
adc
movsb
and
imul
mov
add
push
lock
outsl
xorl
xchg
fs
or
pusha
add
mov
mov
mov
cwtl
jg
or
mov
cs
xchg
mov
jae
xchg
inc
lahf
and
scas
fldcw
inc
jbe
pop
fwait
push
gs
cmp
movsl
fdivrs
sbb
sbb
fnsave
mov
nop
and
movsl
dec
sub
pop
mov
mov
mov
xor
cmp
mov
xchg
lret
movsb
pop
push
jge
js
sbb
xor
in
fdivl
pop
das
jge
and
pushf
pop
jno
and
inc
fists
leave
mov
fmul
cld
inc
jo
xchg
aad
das
cmp
bound
das
pushf
and
lar
jno
fstps
pop
push
and
lods
adc
sbb
sbb
ret
cmp
scas
cmc
test
jg
iret
aas
addr16
es
adc
xchg
cld
insl
movsl
std
leave
das
outsb
sbb
call
mov
lock
pop
scas
pop
fisttpl
cmc
nop
add
and
lcall
pushf
jb
lcall
sbb
adc
jo
cmp
xchg
out
sub
outsb
inc
loop
push
sbb
mov
and
cltd
pop
sbb
subl
fnstcw
inc
lcall
mov
cmc
cwtl
inc
fwait
mov
adc
mov
mov
js
add
lock
dec
push
mov
inc
repnz
insb
or
inc
test
mov
mov
jmp
stc
jb
dec
cmp
and
jecxz
scas
arpl
popa
cli
cmpsl
pop
jno
mov
stos
vmwrite
sub
dec
fnstcw
mov
icebp
xchg
xor
xchg
test
xchg
add
sub
test
roll
inc
fs
mov
mov
pop
cmc
pop
and
fwait
lds
lcall
cltd
in
xchg
inc
imul
or
inc
das
cs
sbb
in
loopne
and
xlat
icebp
xchg
or
andb
icebp
cmp
inc
gs
sbb
jbe
xchg
xchg
je
out
icebp
cmp
or
scas
cmp
xor
sub
jle
hlt
int3
dec
icebp
xor
jp
cmp
sahf
pop
cltd
pop
xchg
sub
das
fwait
lret
movsb
pop
outsl
movsb
mov
mov
cmpsb
or
dec
mov
mov
inc
and
movsl
adc
rclb
iret
repnz
mov
clc
cltd
mov
xchg
movsl
rcrl
test
mov
push
fucomp
cmpb
out
cmpsb
leave
cmpsl
sahf
ljmp
cmp
movsl
pop
push
js
hlt
add
ss
sbb
push
bound
pop
cmp
icebp
pop
loopne
popa
jno
adc
aas
imul
adc
xor
enter
pusha
and
std
aam
inc
das
mov
movsl
dec
pop
fldcw
ret
sbb
fldt
scas
mov
into
mov
outsb
and
mov
outsb
cs
mov
arpl
test
adc
mov
insl
sub
push
mov
lahf
pop
mov
dec
rcr
lods
push
pop
mov
and
pop
cmp
mov
icebp
popa
jno
jne
cmp
add
in
cmpb
into
mov
and
jge
sbb
rclb
xor
dec
mov
loope
arpl
movsb
scas
das
insb
pop
movsl
scas
add
dec
or
jle
insb
jp
push
push
sbb
cmp
inc
jl
sbb
aaa
add
call
jns
inc
pop
jb
xchg
jno
jo
stos
cmp
adc
cld
push
push
fs
pop
sbb
add
push
shll
fists
les
das
mov
push
adc
ret
sub
and
pop
ja
cmp
and
repnz
cltd
movsl
cmp
xchg
mov
mov
add
js
jb
and
cmp
lock
jg
sti
nop
rcrb
clc
inc
fdivr
hlt
rcrl
popf
pop
into
jge
add
sbb
xchg
daa
or
outsl
mov
pop
sbb
rolb
outsb
out
pop
cld
cmp
enter
faddp
shl
test
aaa
fisttps
repz
movsb
push
movsl
add
cs
fcomps
sub
cs
adc
xor
into
xchg
xor
push
repnz
push
mov
xor
in
sbb
jle
mov
sbb
cmp
sub
cmpsb
dec
jb
inc
mov
pop
outsl
cld
into
xchg
pushl
adc
inc
sub
jp
sbb
push
add
andl
jmp
outsl
inc
jge
xchg
adc
and
jno
out
xlat
lahf
or
adc
decb
or
sbb
mov
in
sub
and
sub
push
scas
fdivrl
push
push
xchg
adc
mov
xor
sti
xor
rol
jno
sub
ljmp
cmpsl
xor
xor
movsl
lahf
sbb
push
sbb
lret
inc
push
pop
cld
movsb
pushfw
mov
push
cmp
test
lret
pop
fstsw
movsb
in
int3
sbb
mov
or
sbb
push
xchg
movsl
mov
adc
push
repnz
mov
add
xchg
jl
xor
cmp
cmp
xchg
jb
cmp
out
cld
sbb
mov
or
pop
xchg
out
add
pusha
nop
repnz
push
jg
adc
je
pushl
dec
movsb
or
xor
sbb
cwtl
push
push
sub
push
pop
cltd
jl
fst
mov
int
jae
daa
fistpl
ret
sbb
cmpsl
fwait
xchg
movsl
fbld
push
aaa
outsb
cli
aas
int3
mov
mov
fstl
mov
jae
xchg
lret
pop
or
or
mov
jg
sbb
jae,pn
ret
push
dec
cmp
sbb
andl
dec
call
outsl
mov
pop
cwtl
xchg
repz
adc
push
nop
cltd
inc
adc
or
outsl
mov
iret
cs
iret
and
lcall
mov
call
inc
jne
loope
repz
iret
sbb
xchg
das
jecxz
jae
sbbb
mov
mov
jecxz
mov
push
nop
test
scas
mov
cmp
adc
or
mov
negb
mov
lds
fstps
scas
cmp
xchg
jbe
adc
xchg
fsubrl
sbb
push
clc
lcall
nop
add
fldl
mov
sub
das
sbb
bswap
les
push
sti
fld1
sbb
jmp
push
jns
lahf
in
xchg
push
adc
fisttpll
sbb
fsub
xchg
xchg
mov
fcomps
jb
inc
and
shlb
and
sub
cwtl
sub
into
pop
push
mov
sti
mov
cmp
cltd
les
scas
pop
std
or
pop
dec
out
shl
shlb
push
mov
push
fwait
xchg
cmp
and
pushf
int
rcrl
jge,pn
movsl
shlb
test
cmp
sbb
push
scas
std
lock
and
ja
sbb
lahf
scas
popf
les
xorb
fnsave
pop
addl
scas
mov
push
cltd
push
xlat
popf
mov
dec
idivb
mov
cltd
lahf
pop
mov
mov
or
xor
lret
mov
fstpt
fsqrt
xchg
pop
fdiv
mov
mov
mov
fstpt
ja
jae
outsb
mov
into
sbb
aad
push
push
icebp
fdivl
xchg
mov
fbstp
lcall
icebp
inc
jp
jmp
cmp
les
outsb
sub
lock
sbb
add
dec
inc
xlat
icebp
dec
cmp
push
adc
mov
add
jns
inc
mov
push
int3
fwait
inc
sub
popf
jae
dec
push
out
add
pop
int
rol
fs
pushf
scas
aas
push
inc
inc
and
jns
outsl
out
insb
subl
movsl
dec
bound
and
fwait
icebp
push
sub
loopne
fstl
icebp
add
or
xchg
sahf
sbb
push
sub
xchg
imul
jge
fistpl
scas
fstps
mov
lock
cwtl
aaa
out
insl
push
pop
jns
out
or
adc
or
int
std
in
cs
sub
adc
insb
mov
mov
mov
scas
pop
mov
fdivl
push
cmpxchg
outsb
insl
fisubrl
sti
fisubs
mov
pushf
insb
outsb
pop
out
lods
dec
mov
mov
lcall
outsb
fwait
mov
cltd
cld
adc
popa
dec
mov
movsb
mov
sub
pop
and
mov
je
sbb
cmp
scas
add
das
xor
subl
mov
repz
iret
add
pushl
rcl
and
lock
movsl
xor
inc
test
lock
mov
inc
pop
das
ror
outsb
mov
mov
sarl
adc
cwtl
aas
mov
hlt
sub
pop
xchg
out
mov
enter
push
ja
add
adc
adc
jg
cmp
rcll
fdivp
adc
cmp
fdivr
lret
lret
imul
std
scas
xchg
lahf
pop
or
xchg
std
jge
scas
push
icebp
jg
cmp
fdivr
fsub
pop
pop
mov
mov
fisttpll
js
mov
out
nop
aam
or
lret
inc
ficomps
imul
icebp
inc
imul
negl
cmpsl
xchg
fnsave
push
xor
push
jl
push
movsl
iret
mov
jg
outsl
cmp
js
scas
jb
xchg
pop
aaa
and
insb
hlt
rol
fwait
jecxz
adc
adc
pop
sub
aad
push
cmp
jae
and
jge
inc
bound
push
sahf
push
sarb
aam
clc
stc
dec
movsl
movsb
subb
movsl
les
pop
jle
sahf
movsb
outsb
fwait
mov
daa
cltd
lock
push
ja
stc
out
sub
xor
imul
outsl
mov
adc
dec
mov
arpl
daa
cmp
mov
addr16
or
add
adc
icebp
or
jg
dec
leave
inc
mov
pop
cmp
idivb
out
scas
in
jno
lock
xor
add
lock
mov
fistl
jecxz
mov
icebp
orb
sbb
faddl
xor
pop
sbb
inc
or
jnp
stc
cltd
ljmp
sub
into
pop
adc
jno
push
shll
and
ret
ret
cmpb
lret
mov
cwtl
xchg
mov
mov
aas
shlb
mov
sbb
sbb
and
jmp
add
cld
mov
jl
push
sub
in
sub
push
lahf
fprem
jge
mov
add
outsl
fsubs
icebp
movsl
mov
ror
std
cwtl
fwait
outsl
out
stos
pushf
or
and
out
int3
shl
sub
pop
pop
fsubrl
push
jmp
scas
sarl
add
scas
adc
push
mov
pop
mov
sbb
mov
push
fidivrs
push
ss
daa
or
inc
cmp
pop
into
ret
adc
inc
push
mov
sbb
ret
decl
pop
push
ret
popa
imul
repz
adc
dec
adc
dec
inc
fildll
in
das
xlat
push
jbe
mov
adc
das
hlt
cmc
push
das
xchg
frndint
ret
lcall
mov
je
icebp
cld
sbb
add
dec
gs
sahf
pop
jge
orb
xchg
adc
xor
sbb
dec
and
pop
pop
push
fldcw
mov
jno
dec
push
pop
add
loop
xor
lods
out
clc
pop
mov
mov
mov
mov
mov
movsb
mov
pop
leave
das
popf
ja
xor
add
sahf
call
adc
mov
xor
in
test
movsb
mov
adc
xor
call
jb
es
les
fisttps
mov
scas
sub
out
in
jle
ret
leave
mov
mov
adc
leave
sbb
push
push
sub
pop
stos
sbb
xchg
loop
push
in
cmp
scas
lcall
mov
mov
and
push
sub
es
xchg
inc
sbb
popa
and
push
cmp
xlat
cmp
enter
mov
xchg
or
jno
inc
cmp
or
mov
addr16
push
adc
dec
cltd
adc
or
push
mov
xor
push
shll
and
movsb
jb
imul
jb
push
pushf
es
insl
mov
push
dec
mov
push
bound
xchg
ljmp
and
test
data16
pop
out
and
xchg
xor
cmpl
xor
pop
xchg
xor
out
pop
pop
icebp
sub
xchg
lcall
lahf
cmpl
insb
adc
xchg
mov
mov
punpckhwd
lret
or
out
xchg
pusha
pop
aam
mov
hlt
jae
es
adc
jp
pop
mov
sbb
repz
std
mov
mov
and
pusha
mov
iret
inc
fdiv
jnp
pop
jns
nop
sbb
xchg
jmp
sbb
int3
or
les
jl
repnz
movsl
pop
cld
outsb
mov
jmp
test
sbb
xchg
cwtl
jae
pushf
fisubrl
pop
mov
loopne
sar
push
aas
lahf
xchg
adc
jno
lock
stos
xor
test
adcl
jae
mov
mov
sbb
or
scas
movb
out
cmpsb
cld
enter
out
add
subb
in
pop
mov
rcrl
icebp
mov
mov
movsl
mov
dec
popa
add
bswap
icebp
sahf
cmc
loop
cmpsb
adc
jbe
cwtl
clc
dec
or
mov
push
and
movsl
and
cwtl
and
lret
in
jne
insb
mov
xchg
mov
jl
data16
into
outsb
les
xchg
cmp
icebp
xor
or
inc
mov
imul
outsb
pop
sti
mov
fstl
out
ficomps
scas
jecxz
cmpsb
fcom
fldt
in
sbb
fisttpll
ror
cld
sahf
or
fldenv
inc
mov
jne
sbb
or
inc
div
nop
shrl
sbb
ss
shrb
xchg
sub
nop
adc
xlat
push
jp
stc
in
jbe
les
pop
mov
push
movsl
icebp
rclb
cmpl
ds
lods
out
inc
cmp
sbb
fcoms
mov
mov
into
cmp
add
inc
sahf
cltd
cmp
div
shr
jae
test
mov
sbb
pop
and
sbb
pop
xor
xchg
rclb
xchg
mov
rorb
test
frstpm(287
das
adc
add
divl
nop
fisttpl
das
jo
addr16
mov
das
mov
cmp
or
movsl
out
fdivr
out
pop
sti
or
popa
fstps
int
push
inc
lock
outsl
pop
orb
lock
movsl
fdivr
jl
hlt
or
popa
cmc
rcrl
pop
std
dec
idivl
fisubl
popa
fnstcw
cli
push
xchg
lock
movsl
ret
fdivr
clc
pop
loopne
js
fldln2
int
push
or
and
movsl
daa
fdivr
pop
dec
fldenv
inc
repnz
addb
inc
sub
dec
or
mov
subb
sub
stos
dec
lock
xchg
push
fcmovnu
xchg
sti
xor
mov
xorl
fcoml
xchg
mov
mov
mov
xor
mov
fnstsw
fnstenv
push
popa
pop
pop
and
pop
mov
rcl
dec
push
stc
ss
xchg
push
xchg
xchg
icebp
ljmp
test
pop
sbb
lods
jl
divb
xor
rcl
ds
jno
int
and
stc
fs
mov
mov
xor
fs
xor
mov
dec
cmp
cltd
fwait
mov
rcrl
pop
mov
sbb
xor
fyl2x
std
sbb
xor
rcll
sub
jbe
insb
icebp
cltd
sbb
cld
push
add
lret
push
es
xchg
xchg
cmpsl
and
fisubrl
dec
mov
inc
mov
mov
pop
scas
pop
mov
mov
dec
pushl
mov
aas
fldenv
add
addr16
pop
sti
push
or
and
cs
inc
jb,pn
jle
push
insl
pop
mov
xor
into
pop
leave
shll
jecxz
jb
jge
data16
cltd
in
add
cs
test
pop
sbb
loopne
dec
repz
fisttps
int
es
sbb
or
adc
inc
mov
fstpl
and
out
mov
dec
outsb
pusha
mov
and
aaa
das
fcoml
mov
xorl
icebp
jmp
movsb
mov
inc
sbb
and
scas
pushf
stos
int3
sbb
pushf
fwait
andb
sbb
sbb
push
dec
xchg
cmp
or
bound
leave
xchg
adc
pop
and
dec
ja
xchg
pop
cltd
mov
lcall
sbb
sub
std
sbb
and
xor
movsb
ljmp
mov
fwait
mov
test
cmp
adcl
push
add
mov
add
lcall
ss
xchg
cmp
jl
outsb
fdivrl
sbb
inc
dec
adc
pushf
insb
enter
push
cmp
and
inc
or
adc
aas
cmp
bnd
sbb
and
pusha
aaa
and
shll
xor
inc
xchg
xchg
jae
xchg
mov
inc
test
xchg
mov
repnz
out
imull
aaa
out
sub
pop
lods
shl
jge
or
fbstp
cmpsb
idivl
cltd
scas
push
xor
nop
popa
je
sbb
popa
std
jl
fdivrl
icebp
lret
mov
and
outsb
or
sbb
cltd
jno
xchg
popf
xor
cmp
adc
movsl
and
pop
push
mov
mov
std
cwtl
cld
pop
ret
mov
xchg
int
jo
stos
gs
pop
xchg
lods
mov
and
push
popf
outsb
xor
pop
fisttps
int
or
jbe
das
stos
std
push
arpl
add
mov
test
push
popf
inc
jg
and
adc
iret
sbb
test
jge
push
pop
call
jecxz
jne,pt
mov
jge
xor
mov
mov
das
scas
or
cltd
xchg
xchg
fwait
popa
mov
mov
inc
mov
or
movsl
fwait
std
popf
sub
je
movsl
xchg
jecxz
push
movsb
cmp
push
lret
mov
mov
hlt
into
scas
icebp
pop
nop
jno
jb
mov
cmp
add
mov
das
scas
sbb
popa
jecxz
movsb
pop
bound
mov
loope
fld
lcall
in
push
adc
cltd
scas
adc
mov
jmp
sbb
xor
scas
dec
icebp
push
xchg
in
xchg
sub
xchg
pop
into
xchg
das
or
popa
push
mov
paddd
hlt
in
pushf
mov
pushf
mov
adc
mov
jne
cmp
aaa
jmp
pop
iret
lahf
inc
or
adc
sbb
fcomps
fs
lret
mov
stos
dec
cld
mov
dec
hlt
loope
mov
das
in
rcll
mov
lock
rcrb
sahf
jns
mov
sbb
jge
xchg
bound
repnz
in
cltd
cmp
outsb
mov
push
cli
and
std
insl
das
cmp
cmpsb
je
test
and
cltd
stc
cli
xor
push
mov
pop
outsl
pop
scas
and
movb
xor
mov
imulb
push
sbb
cmp
xchg
lret
xor
or
sarb
fimull
xchg
sbb
hlt
and
mov
loop
add
addl
shl
dec
call
icebp
adc
sbb
imul
xchg
push
and
out
daa
es
sbb
mov
ret
xchg
sbbb
xor
jbe
push
jb
or
inc
push
out
ds
arpl
dec
in
mov
sahf
icebp
add
dec
mov
icebp
fmul
lds
movsl
xchg
xor
das
movsl
or
movsl
mov
pop
icebp
mov
inc
xor
jle
movsl
aaa
in
fldt
lock
icebp
into
add
call
in
fisttpl
mov
pop
loop
add
mov
into
shlb
fucomi
imul
mov
jl
mov
jmp
pop
cwtl
cmpsl
push
arpl
ret
and
arpl
fdivrs
into
jecxz
negb
mov
xor
add
dec
imul
dec
mov
fwait
sarb
inc
mov
aam
lahf
mov
or
and
push
sarl
xchg
aaa
sub
dec
fnsave
icebp
fldenv
daa
cltd
mov
xor
jae
ret
mov
scas
cld
cmp
lcall
push
and
call
xchg
push
xchg
mov
push
ja
int3
out
mov
mov
mov
das
inc
jne
ror
mov
cs
mov
fwait
inc
out
mov
fmull
push
std
jl
pop
mov
jg
add
shl
jae
leave
movsb
adc
cmp
aaa
sbb
ret
rcr
aam
cltd
es
adc
adc
xchg
scas
xor
mov
popa
fnstcw
shrb
jno
cmp
loopne
cmpb
sarb
pop
mov
jo
cmc
mov
into
lahf
xor
cmpsl
dec
out
lea
outsb
lock
push
or
add
dec
lea
cmc
dec
movsl
adc
or
adc
mov
sbb
xor
mov
lods
scas
fildll
mov
mov
dec
mov
int
scas
mov
das
inc
test
jnp
pop
sub
and
fiaddl
aad
cmp
cmp
loop
popa
and
fcomp
roll
lret
add
adc
lock
ds
cmp
adc
inc
test
or
dec
repz
rorl
xor
xor
cmp
fmuls
jb
inc
scas
mov
push
xchg
xchg
pusha
leave
add
xchg
adc
jg
fdivl
mov
or
fisubrl
jo,pn
xchg
push
testl
jge
cmp
sahf
lock
or
popa
dec
out
shll
bound
mov
mov
mull
pop
mov
test
sub
mov
push
push
notl
notl
mov
mov
xchg
jge
adc
push
mov
sbb
mov
jns
fs
fcoms
pop
ds
shlb
pop
mov
jb
sbb
sbb
and
push
cli
fiaddl
inc
outsb
push
inc
push
push
jle
mov
push
ficompl
leave
and
ret
and
and
and
or
out
xor
rcrl
adc
das
jae
hlt
push
xchg
aad
push
add
xchg
leave
push
add
ss
stc
push
jno
dec
pop
adc
mov
jmp
scas
pop
add
push
sbb
adc
js
dec
xchg
imul
into
movsb
add
jns
scas
rcrl
mov
inc
inc
cmp
jg
cmc
aas
jle
fsubrl
mov
fnsave
adc
mov
xchg
lock
outsl
add
jne
fs
shll
jnp
xchg
cmp
or
cltd
into
not
ljmp
movsl
jo
lret
xlat
lcall
mov
andl
mov
lock
mov
fucomi
scas
pop
mov
xchg
jns
insb
jae
std
cli
scas
inc
scas
xchg
sahf
adc
in
lock
push
jno
sbb
xor
or
or
and
sbb
sbb
xor
sbb
idivl
dec
mov
jmp
mov
out
mov
mov
mull
jo
lahf
popf
dec
jle
outsb
xchg
jns
add
js
in
sub
cli
and
mov
lret
pop
xor
pop
xchg
mov
push
or
leave
in
scas
xor
test
and
cs
lods
inc
sbb
xchg
in
aam
jns
jae
sub
call
push
outsb
pop
xchg
scas
out
pop
sbb
data16
add
ja
data16
xchg
mov
lea
mov
mov
lea
pop
lahf
jae
pop
fstpt
mov
outsl
test
cmpsb
xchg
pop
and
fcmovb
lahf
test
or
mov
cmp
cmp
or
and
mov
rcrb
pop
lods
xchg
rolb
mov
movsl
ja
push
mov
mov
in
xchg
adcb
lea
dec
movsl
or
mov
jl
mov
nop
sti
mov
out
fistpll
xlat
aaa
scas
fisttps
dec
sbb
push
aam
inc
mov
gs
movsl
fbld
outsl
fdivrl
das
inc
push
in
sbbl
xchg
movsb
stc
jns
inc
inc
outsb
mov
jmp
xchg
jg
mov
mov
mov
jl
add
repnz
sbb
fwait
mov
iret
push
sti
movsb
inc
jno
negl
pop
scas
scas
in
and
cwtl
xchg
cmp
pop
lahf
pop
mov
pop
imul
or
mov
lods
pop
rcrb
leave
out
or
shrb
aam
jg
dec
mov
add
mov
aas
pushf
int
add
mov
mov
pushf
jmp
sbb
xchg
sbb
cld
jno
dec
sbb
repz
pop
das
pop
lcall
cmp
sbb
mov
jb
cltd
add
sbb
add
dec
mov
dec
clc
sbb
push
out
rcrl
in
or
rcrl
dec
pop
xchg
cmp
out
jnp
dec
int
mov
sti
xchg
xchg
sbb
xor
xchg
or
sbb
pop
mov
pop
and
inc
icebp
fdivl
loope
xlat
inc
movsl
mov
push
pop
stos
shlb
and
dec
ss
ret
sbb
mov
sub
ds
cmp
imul
popf
shrl
adc
negb
dec
pop
push
mov
cmp
mov
lret
frstor
popf
lcall
pushf
inc
mov
and
inc
pop
sbb
scas
cltd
xchg
fcoml
xor
sbb
or
mov
ds
nop
fsubrl
and
popf
xor
sbb
scas
sub
in
cld
mov
shll
icebp
xor
test
inc
inc
movsl
sbb
and
cltd
jnp
cld
out
cmp
fs
bound
xlat
fcoml
pop
insb
mov
int3
pop
inc
pop
int3
mov
dec
jg
mov
fisttpl
mov
mov
lock
cmpl
mov
aas
mov
jae
xchg
mov
mov
rorl
scas
push
add
lds
bound
mov
mov
roll
pushf
push
sbb
in
xchg
cmpsl
xlat
and
mov
sbb
shr
dec
lock
out
sbb
dec
cmp
jge
addr16
lea
mov
push
sbb
shrl
popf
shlb
in
sub
cmp
pop
push
movsl
sbb
and
repnz
pop
mov
dec
jg
fldt
aad
iret
pop
popf
sub
push
test
cmp
mov
mov
and
cltd
scas
cmp
xchg
subb
repz
sti
bound
xchg
mov
lret
sbb
lcall
sub
das
negb
mov
or
add
dec
into
xor
outsl
xor
jl,pn
or
aad
rorl
pop
mov
dec
insb
imul
adc
fiaddl
es
mov
addr16
cmp
and
in
into
nop
leave
pop
test
cwtl
ss
stos
outsw
insl
pop
and
dec
ret
out
nop
mov
and
xchg
addr16
sbb
fwait
push
mov
pop
loope
icebp
fwait
jae
sbb
cld
shlb
mov
sbb
dec
cs
bound
and
mov
outsb
fstl
stc
sbb
or
mov
outsb
mov
xchg
push
subl
sbb
cli
hlt
xchg
sub
mov
loopne
iret
cmp
loop
scas
adc
xor
pop
jno
dec
movsl
dec
mov
rcr
fwait
jle
cwtl
test
fsubrs
movsl
fs
aam
xchg
loopne
inc
outsb
pop
sbb
xchg
fprem1
outsb
ficompl
add
lock
mov
mov
das
cmp
adc
jg
fnstenv
jmp
lock
pop
lock
aam
xchg
mov
cs
xlat
and
orb
insb
xchg
jns
xlat
fs
ret
sub
lods
decb
xlat
in
and
popa
lods
mov
xchg
sub
mov
in
daa
out
cmpl
loopne
test
leave
jp
scas
rcr
icebp
dec
add
fucomp
pop
popa
ljmp
insb
pop
pushf
ss
add
mov
rorl
aam
mov
in
mov
add
test
inc
aad
insl
xor
xor
sarb
mov
outsb
movsb
push
fnstsw
pop
jg
jge
xchg
mov
cli
sbb
adc
fsubrs
xchg
xchg
movsb
pop
jae
fnstsw
lret
xchg
jle
jl
je
sbb
cli
sbb
push
into
mov
lret
xchg
shl
xor
movsl
fwait
adc
daa
or
je
xchg
mov
or
dec
pcmpeqb
icebp
push
mov
adc
xor
gs
stos
iret
fsubs
xchg
mov
insl
or
or
inc
mov
dec
inc
sbb
fimull
das
mov
arpl
push
in
out
xchg
inc
and
xor
sarl
ss
repnz
fidivl
std
cwtl
bound
inc
je
lods
aas
std
popl
sub
test
scas
push
jge
das
mov
lcall
xlat
ss
lea
shlb
lods
and
les
imul
popa
outsb
rcll
and
das
and
scas
dec
pop
sub
add
das
subb
mov
add
xchg
inc
leave
test
rol
sbb
jno
je
shl
xor
imul
pop
mov
sub
ret
add
pop
fstpt
test
loopne
out
es
push
and
movsb
push
jae
dec
jbe,pt
add
test
pop
pop
lahf
adc
jl
test
mov
inc
and
outsb
xorl
movsl
fs
mov
sbb
cld
scas
jle
mov
mov
aas
in
std
cld
cmpl
and
mov
in
inc
add
push
scas
pop
push
mov
and
les
jp
jp
xrelease
jl
push
pop
addb
int3
jl
mov
inc
xlat
popa
jl
push
movsl
lret
in
test
in
mov
jl
popa
sbb
popa
xchg
jl
cli
inc
push
std
ja
cs
inc
mov
cli
cmc
jb
adc
jmp
nop
out
sbb
dec
add
pop
das
movsl
sbb
cmp
pop
lea
aas
xchg
pushf
fisttpll
and
cltd
mov
and
adc
rcr
mov
sbb
and
push
psubsb
ds
adc
call
dec
in
cli
xchg
xlat
mov
push
addr16
fstps
pop
aad
scas
dec
pop
scas
call
ds
or
ja
shll
pop
and
pop
mov
mov
xchg
push
mov
xor
sbb
mov
mov
fstps
dec
cltd
mov
in
fidivrs
push
aad
dec
lods
mov
mov
inc
push
lcall
fisttpll
xor
and
icebp
pop
ds
inc
popf
mov
lods
inc
ret
cs
push
fstps
cmp
std
mov
movsl
jo
sub
cli
shlb
cmp
hlt
jb
negl
xchg
jno
adc
fistpl
testl
mov
loop
pop
xchg
sub
outsl
xchg
jg
xor
iret
mov
mov
adc
xchg
xchg
test
dec
sub
xchg
mov
sbb
mov
jae
daa
mov
pop
adc
repnz
sbb
push
negl
mov
fnsave
cmp
std
scas
xchg
adc
mov
push
dec
push
jmp
push
push
mov
scas
xchg
jo
push
int
cltd
xor
imul
lods
xchg
scas
mov
inc
pushf
cmp
push
cs
lret
lahf
out
dec
or
cmp
movsl
fistps
sub
sub
cltd
dec
mov
xchg
mov
dec
mov
roll
xchg
out
jb
imul
test
xchg
clc
shll
stos
cmp
adc
inc
mov
mov
bound
jno
lea
xchg
insl
in
sbb
adc
lcall
pushf
insb
arpl
mov
xchg
fildl
fimull
mov
ds
fdivrl
mov
fcompl
out
pushf
data16
fisubs
pop
fld
pushf
rclb
cmpsl
jno
sbb
pop
mov
fstl
dec
sub
iret
loope
out
jb
popf
sbb
movsl
xor
sbb
out
xchg
mov
fildl
jnp
cmp
mov
pop
cs
pop
fwait
imul
jnp
lods
jmp
stos
adc
xor
out
in
fs
imul
test
xchg
out
imul
push
icebp
add
in
arpl
icebp
and
inc
jns
ret
andl
add
shl
adc
or
subb
jno
mov
cs
pop
and
je
je
mov
push
fisubrs
aad
inc
mov
xchg
and
cltd
cwtl
lcall
push
and
shlb
std
adc
mov
fidivs
hlt
lret
imul
push
ss
cmovg
out
insb
mov
cmpxchg
or
push
cmc
push
les
xchg
sbb
lds
fs
push
cld
xchg
dec
fiadds
inc
sbb
scas
rorb
cmp
or
loope
imul
jns
shrb
int
mov
adc
js
and
das
and
push
shr
xor
add
fsts
sbb
call
lahf
jb
and
pop
pop
das
stos
pop
mov
iret
iret
sub
mov
lock
mov
adc
mov
adc
aad
pop
inc
mov
jmp
icebp
pop
push
mov
stos
das
out
rcll
jle
shll
ljmp
out
push
cmp
das
xchg
stos
cwtl
nop
push
sbb
outsb
lock
popf
and
adc
cmp
subb
movsl
xchg
scas
dec
cmp
arpl
jecxz
pop
pop
xchg
inc
xchg
xor
cs
add
adc
sbb
mov
fdivl
push
jnp
mov
es
sub
mov
ja
adc
dec
cmp
jp
sbb
in
jmp
pop
insb
fcom
shlb
dec
stc
dec
add
cwtl
sbb
cs
arpl
and
aas
lret
cmp
sarl
sbb
xchg
sbb
pop
aam
push
fwait
push
jne
lock
aaa
cmp
pusha
dec
aad
movsb
mov
sti
jecxz
cs
dec
les
push
iret
aad
xor
enter
mov
and
xchg
movb
xorl
pop
xchg
aad
pop
cld
or
sbb
cmp
dec
lahf
cmp
imul
mov
mov
lcall
cmp
mov
fsts
fistps
cwtl
lret
adc
or
ss
mov
ljmp
add
movsb
ret
dec
push
lods
outsb
lahf
mov
pop
outsb
and
test
lods
mov
push
dec
lock
cmc
xchg
xchg
test
jb
dec
xor
and
out
je
fistpl
mov
fcom
insb
xchg
sub
movsl
jg
mov
dec
sbb
scas
pop
pop
fisubl
jne
or
dec
std
das
and
cmp
push
stc
xchg
loope
ss
inc
add
or
sbb
lods
jl
ret
and
std
jb
test
mov
fists
sub
movsl
or
fcomps
pop
xchg
sbb
faddp
pminub
loop
add
std
fsubs
fdivrp
or
ret
sbb
jno
cltd
sub
ficomps
js
jp
testl
pop
mov
ficoms
rcr
dec
mov
movsb
andb
cli
test
iret
addl
pusha
popa
and
test
and
test
movsb
jl
popf
pop
in
or
xor
jge
xor
fldcw
pop
sbb
fcom
mov
movsl
or
jp
orb
das
leave
es
out
stc
iret
push
adcb
mov
popa
and
imul
or
mov
mov
icebp
fstl
in
out
mov
dec
in
jecxz
cmp
pop
pop
jb
mov
mov
inc
pop
out
into
mov
inc
cmp
inc
mov
sbb
imul
xchg
dec
dec
sbb
or
mov
cwtl
popa
test
sub
gs
adc
add
ret
inc
popa
push
into
lret
mov
sarb
inc
and
das
mov
dec
aad
mov
shlb
pop
jo
popf
in
lods
inc
add
fcoms
lods
push
xchg
outsb
inc
je
sbb
punpckhdq
aad
dec
add
and
push
in
scas
xor
add
add
pop
jbe
sub
loop
movsl
aad
lcall
push
xor
mov
cmp
out
inc
lcall
imulb
cld
stos
loopne
xchg
rclb
movsl
adc
adc
scas
das
or
je
fs
mov
cmpsb
fisubrl
in
scas
rolb
in
fsubrs
mov
xor
mov
cld
sub
mov
lock
mov
js
inc
jo
mov
mov
dec
fdiv
fsubl
xchg
push
scas
in
fdivr
mov
xchg
push
mov
lret
outsl
cmp
pop
std
popf
pop
push
aad
adc
jb
and
jge
dec
xor
les
mov
outsb
popf
das
std
cmpsl
stos
lods
fldenv
cwtl
test
lock
jno
test
jb
fldenv
rcll
lods
mov
and
sbb
cmpsl
call
xchg
imul
adc
arpl
lods
addl
fcomps
adc
daa
popf
cs
cmp
mov
sbb
fisubl
mov
es
xchg
cmp
pop
mov
xchg
jg
popf
lcall
mov
daa
xchg
sub
testb
aas
fidivrl
xor
xor
mov
lcall
and
lahf
fadds
dec
scas
sbb
dec
out
add
jne
in
jo
inc
sti
stos
sbb
call
and
mov
and
and
pusha
mov
out
xor
icebp
mov
xor
mov
xor
sahf
mov
jno
and
cmovno
notl
sub
xor
cwtl
mov
mov
repz
fs
and
shlb
xchg
scas
fnsave
sub
jbe
out
sbb
xchg
cmc
and
or
dec
cwtl
push
mov
shlb
jne
stos
xchg
mov
jle
inc
sbb
imul
lcall
and
in
adc
rcrl
push
inc
jmp
mov
sub
add
sti
out
scas
outsb
ror
jb
add
mov
or
out
nop
sar
jbe
push
mov
mov
xchg
add
add
scas
test
xchg
mov
pop
jnp
sbb
push
icebp
push
in
pop
test
loope
sbb
sbb
sbb
cmpsb
jb
jb
push
das
ror
xchg
shlb
out
push
jb
jbe
in
fildl
push
mov
mul
dec
mov
ret
and
pushf
insb
insl
xchg
push
testb
dec
out
into
int
xchg
xchg
jg
js
lods
fldt
xchg
ds
xchg
fldt
mull
popf
clc
or
add
mov
cltd
into
lock
movsl
pushf
jp
or
add
outsb
sarl
out
add
sbb
outsb
mov
cmp
adc
jae
mov
mov
fbstp
adc
xor
adc
repnz
lret
repnz
inc
std
mov
sbb
add
shl
es
pop
or
cltd
sbb
repnz
push
in
js
outsl
sahf
push
lods
push
loope
jae
inc
lods
sarl
mov
sbb
mov
shll
or
sub
js
outsl
adc
pop
and
add
jns
pop
add
push
bound
sbb
lea
mov
xchg
cld
inc
or
xorb
fcomps
or
adc
aam
in
adc
inc
mov
enter
push
loopne
sbb
insl
sbb
fwait
inc
dec
push
jg
push
pop
xchg
sbbl
fwait
outsb
xchg
sub
add
jbe
loopne
mov
in
movsl
icebp
frstor
jl
scas
push
mov
in
cld
jno
rcr
pushf
dec
movsb
push
push
and
jne
les
ljmp
ss
bound
dec
mov
std
mov
fs
pushf
cmc
popf
movsb
movsl
out
jne
out
movsl
aam
gs
popf
jecxz
popf
movsb
adc
stc
cmpb
in
xchg
cmp
cltd
icebp
mov
inc
fcmovnu
pcmpgtd
icebp
sbb
fnstenv
enter
mov
jnp
pop
ret
mov
mov
xchg
push
lea
cmp
mov
cmp
and
inc
out
jge
test
adc
and
add
outsb
inc
rolb
dec
out
rorl
aad
mov
xchg
in
insb
push
cltd
scas
add
outsb
out
xor
jg
inc
cmp
sub
dec
mov
pop
jge
enter
jl
outsb
lret
lahf
movsl
mov
mov
push
loope
add
scas
sbb
aam
ljmp
loop,pn
cmpsl
mov
xchg
mov
ss
loop
add
loop,pn
lods
inc
add
adc
pop
inc
mov
fwait
push
cmc
in
jecxz
xchg
icebp
fdivl
dec
pushf
xchg
pop
les
xchg
aam
clc
jg
fnstcw
aas
mov
rcr
ja
fadds
mov
sti
mov
mov
jbe
inc
mov
fmul
mov
and
xor
cmc
shr
std
icebp
jnp,pn
out
fcoms
push
out
xchg
inc
mov
loope
test
jmp
pop
test
xchg
lods
and
xchg
shll
cmc
and
aaa
ficomps
lret
cltd
aam
lret
insl
mov
divb
cmp
shrb
push
xchg
lret
stos
test
sbb
sbb
loope
int
jbe
mov
inc
repz
xchg
out
lcall
iret
arpl
cs
out
fidivrs
sbb
pop
test
cs
pop
js
jb
pusha
xorb
fnstenv
inc
push
out
pusha
sub
fnstenv
inc
lret
cld
das
mov
inc
lret
or
mov
movsb
mov
add
lahf
pusha
repz
mov
mov
movsl
cmp
xor
mov
jl
or
dec
in
fld
sub
cmp
jecxz
jecxz
or
jecxz
sbb
fcmovnbe
lahf
movsb
push
add
aam
cmc
push
mov
jecxz
and
aas
xchg
cltd
cmp
aam
aaa
and
aaa
in
dec
add
pop
mov
inc
push
mov
cmp
push
negl
loope
sti
mov
cltd
das
pop
in
arpl
inc
daa
ret
jnp
shrl
inc
outsb
std
push
cmp
xchg
mov
mov
xor
loop
adc
xor
andl
stos
push
sarl
add
cmp
pop
or
es
lods
rolb
out
jnp
sub
sbb
iret
lock
imul
jge
jmp
js
outsb
outsb
in
jge
imul
lea
mov
sahf
cmp
sbb
pushf
aad
inc
xchg
and
cmpsb
jnp
push
iret
sbb
aam
mov
sbb
and
xchg
push
rcrb
scas
inc
push
cmp
les
mov
fs
sbb
mov
insl
mov
jp
push
ss
fldenv
loopne
xlat
xchg
sub
fnstsw
push
fdivrl
mov
inc
pop
std
cwtl
sub
mov
insb
frstor
pop
popf
mov
mov
cltd
mov
popf
add
sbb
lods
mov
cmpl
cmp
jl
mov
lcall
cmp
inc
pop
dec
test
pop
cmp
push
les
xchg
ja
inc
mov
mov
cltd
ud2
out
mov
sbb
lea
test
pushf
fcmove
std
add
sahf
push
sbb
dec
fldt
fisubs
lahf
pop
dec
popa
loop
mov
movsb
sbb
inc
push
ss
aaa
mov
stos
movsb
mov
cmc
daa
mov
in
fstpl
cmp
mov
push
pop
pop
mov
pop
jns
jl
movb
sbb
mov
pop
xor
xor
mov
mov
mov
lods
sarb
and
mov
mov
test
pushf
or
inc
sub
push
pop
adc
fdivs
jo
dec
sbb
adc
popf
or
mov
or
lea
mov
and
int3
mov
fsubrs
sahf
xchg
mov
add
adc
mov
outsb
mov
sti
outsl
lock
rclb
clc
das
pop
sub
xor
fdivl
std
sbb
aaa
clc
mov
fldenv
out
dec
dec
std
lret
xchg
shrb
jge
subb
fwait
lcall
lcall
lcall
lcall
dec
into
cld
xor
lds
mov
cwtl
aas
loope
adc
mov
xor
push
fnsave
das
aaa
scas
adc
push
fsubrp
fidivrs
ss
rcl
sub
mov
jns
into
dec
aad
icebp
fldcw
imul
mov
popf
loopne
inc
cmpb
test
push
icebp
sahf
xor
pop
xchg
mov
das
push
or
cmc
leave
into
and
mov
cwtl
push
xor
adc
cmp
inc
push
and
mov
mov
dec
lock
xchg
dec
mov
testb
test
movsl
push
roll
inc
int
mov
scas
jno
jge
scas
jne
outsl
and
loop
adc
sahf
cmpsb
fwait
mov
cmp
sarl
sbbb
mov
sbb
push
fcomps
fstps
xchg
mov
mov
bound
das
fildll
decb
mov
pop
enter
xchg
pop
jns
in
mov
and
xchg
in
push
and
inc
cmp
and
push
cld
push
mov
and
or
movsb
xchg
cld
mov
or
cmpsl
fildl
fdivr
sbb
mov
mov
ret
cwtl
jo
jge
inc
js
lods
push
fnstsw
fnstcw
mov
mov
test
js
push
sub
mov
mov
xor
test
rorb
repz
jno
inc
aam
cs
fidivrl
icebp
pop
sarl
pop
popl
jo
lret
rclb
test
int3
push
repnz
sub
sbb
in
testb
mov
stos
mov
movsl
push
mov
and
fwait
xor
xchg
imull
icebp
outsb
andl
rcl
push
mov
popa
shrl
call
inc
outsb
mov
push
scas
loopne
and
pushf
xor
xchg
dec
stc
imul
jecxz
jnp
pop
xor
scas
or
push
cmpsb
and
or
push
cltd
fwait
pop
std
scas
push
dec
push
std
aad
sar
sti
mov
push
cmpl
and
cmp
mov
sahf
xor
les
movsl
pop
imul
push
sarb
test
std
rcrl
out
sbbl
sub
lock
test
mov
mov
faddl
nop
mov
sub
sbb
ja
dec
jge
pop
movsb
mov
movsb
push
mov
mov
mov
xchg
insl
dec
mov
xor
mov
pop
adc
lahf
in
lahf
inc
mov
loop
dec
fstl
jns
cmp
sbb
adc
push
cmpl
jbe
cmp
in
jae
pop
pop
pop
inc
push
push
cmp
aas
mov
cli
adc
rcr
mov
cmp
and
outsb
push
into
dec
fistpl
loopne
push
daa
adc
ret
jle
xor
js
lock
sti
clc
jb
or
mov
icebp
pop
push
adc
fcomip
in
into
test
imul
add
mov
cltd
sbb
popa
add
stc
push
sarl
in
rcrl
das
pop
fwait
aas
out
mov
mov
sbb
and
lret
sbb
out
int
mov
xchg
dec
adcb
mov
filds
and
out
pop
pop
push
and
cwtl
lret
mov
push
sbb
pop
add
lea
xlat
inc
xchg
ljmp
mov
je
cltd
xchg
clc
movsl
inc
cmpsb
push
xchg
jno
dec
jl
mov
insl
int3
sub
mov
popf
fwait
out
sub
out
jnp
or
adc
icebp
add
fwait
das
jecxz
testl
das
pop
sbb
jae
xchg
scas
and
xchg
jns
pop
xchg
mov
daa
jl
lea
add
popf
xchg
mov
sbb
cs
mov
mov
fsubl
daa
mov
das
push
sti
sub
imul
in
pop
sub
adc
shr
push
in
and
adc
pop
das
cmp
aaa
pop
lea
push
mov
or
jge
push
out
scas
or
das
sub
daa
iret
cmp
mov
adc
or
repz
jbe
in
jb
jns
mov
icebp
sbb
out
ja
mov
scas
outsb
xchg
shll
pop
sbb
mov
lret
outsl
aaa
std
lock
sbb
das
sahf
mov
push
and
call
pop
rcrb
lcall
xlat
xor
js
std
clc
pop
adc
or
hlt
xor
jmp
sbb
mov
lock
xchg
and
inc
bound
jl,pn
pushf
xchg
push
cmp
pushl
pop
sbb
sbb
into
loopne
xor
xchg
bound
into
fnstenv
inc
in
ret
sahf
std
scas
out
rcr
movsl
mov
jae
and
and
or
cmp
pop
xchg
fnsetpm(287
sbb
jbe
std
fiadds
and
out
lock
or
xor
fisttpll
popf
cmp
lea
test
adc
cwtl
movsl
inc
cmp
sub
adc
add
push
pop
cld
rcll
xchg
sbb
add
test
mov
jge
aaa
xor
and
out
cltd
movsl
jbe
mov
pop
push
dec
jp
decl
loop
scas
mov
sti
das
jp
jb
pop
out
scas
sbb
loope
xchg
sbb
imul
pop
push
fs
cmp
sbb
jp
fisttpll
lcall
xchg
jb
xor
clc
push
sbb
cld
mov
dec
loopne
adc
xchg
push
repz
sbb
xor
cmc
mov
cmp
lds
in
pop
xchg
das
in
and
mov
out
cmp
mov
fbstp
push
sbbl
cltd
pop
mov
pushf
push
mov
sbbl
sub
roll
scas
sbb
adc
pop
xchg
mov
icebp
push
dec
jo
rorl
sub
push
aas
mov
scas
movsb
mov
inc
test
les
xchg
aas
or
jae
dec
mov
adc
or
inc
fidivrl
movsb
out
xchg
jne
pop
stc
stos
es
movsb
add
into
inc
test
jmp
out
adc
jae
popa
cmp
xchg
movsl
jge
jne
lret
idivb
mov
es
pop
popf
jle
or
fisubrl
data16
ljmp
das
mov
fst
push
aas
aad
rorb
push
jmp
push
inc
or
stos
adc
das
pop
test
jbe
dec
sbb
rclb
lods
adc
fs
mov
pop
aam
es
lods
and
pushf
sbb
lods
outsb
in
insb
add
fdiv
out
icebp
dec
jb
das
xor
pop
jge
adc
repz
push
mov
repnz
arpl
popa
leave
movsl
fcoml
xchg
xor
inc
cmpb
xchg
and
sub
incl
mov
out
cmp
xlat
xsaves
mov
sbb
mov
test
push
dec
repnz
mov
lock
cwtl
pop
xchg
ret
cwtl
inc
jge
push
mov
jns
mov
cmp
mov
rcl
ljmp
mov
int3
int3
stos
xchg
pusha
or
sbb
shll
pop
inc
pop
push
fwait
inc
movsb
xor
test
push
dec
mov
imul
int3
mov
pop
test
push
xchg
jg
lea
fwait
cltd
std
cmp
add
adc
sub
pop
dec
and
mov
push
xor
les
ret
mov
mov
push
in
icebp
mov
cwtl
imul
repnz
add
sub
cld
xchg
mov
inc
xlat
xor
lcall
push
fistpl
jmp
and
push
sub
mov
add
das
andl
sbb
push
lds
data16
sub
jge
data16
mov
jecxz
jno
out
lcall
cmp
jle
mov
pop
add
test
loope
or
ss
mov
inc
xor
xlat
mov
les
inc
adc
mov
scas
ljmp
xor
je
ss
push
xchg
dec
in
xchg
mov
fidivrl
fcomps
cwtl
ja
pop
arpl
cmp
aas
lods
mov
xor
sbb
mov
scas
fimull
das
movsl
popf
fimull
scas
movsl
sbb
pop
in
nop
mov
ss
and
pop
rcrb
xchg
imul
fwait
and
lahf
pop
rcrb
cmp
push
mov
push
rorb
ret
sub
and
aad
add
fmul
mov
sbb
ljmp
inc
scas
or
and
mov
ds
repnz
mov
leave
inc
ljmp
mov
addb
aam
orl
adc
cmovb
jl
jl
mov
mov
in
icebp
inc
pop
xor
lret
cmp
sbb
jmp
cmp
or
hlt
push
movsl
jle
xchg
je
inc
push
inc
fsubs
xchg
xchg
mov
push
mov
pop
sbb
fwait
das
ret
loopne
jae
dec
or
or
lret
xor
loope
adcl
movsl
xchg
lea
aas
arpl
out
jae
jmp
jo
imulb
clc
std
jp
cwtl
cmp
gs
int
loopne
mov
js
jge
icebp
pop
bswap
leave
mov
mov
sbb
mov
das
pop
and
das
jno
test
div
mov
fsts
jl
cltd
fiadds
xchg
fnsave
mov
sbb
sbb
adc
pop
mov
shll
pop
icebp
jle
fsts
fidivrl
pop
xor
add
or
out
jns
jnp
sub
and
sbb
adc
repz
mov
xchg
negl
mov
sti
cmp
adc
jge
rorl
jbe
push
xor
add
repnz
mov
xchg
add
sbb
xchg
popa
mov
icebp
add
mov
daa
pop
lret
fxam
sbb
lds
movsl
xor
add
jg
ficoms
insl
lcall
jno
std
xor
cmp
inc
pop
sub
jge
rcr
iret
and
jae
pop
scas
flds
mov
insb
add
into
in
das
jl
xchg
outsb
int
iret
cltd
les
mov
sbb
xor
cltd
jo
inc
das
or
cltd
inc
xor
add
xor
sbb
and
inc
push
or
bound
sbb
jo
mov
cld
mov
lcall
pop
arpl
outsl
mov
fcoms
pop
sbb
jno
inc
mov
cwtl
cld
and
pop
add
ja
lret
cmp
std
push
icebp
es
and
fwait
jge
mov
jg
fcomi
rclb
sahf
xchg
mov
test
sbb
xchg
jo
adc
sbb
cmp
mov
pop
lcall
icebp
and
arpl
dec
das
push
push
mov
icebp
and
jne
and
lcall
dec
out
push
mov
cmp
sbb
push
jae
scas
into
add
adc
pop
mov
mov
jae
lret
sarb
and
cmc
add
pop
out
mov
push
arpl
dec
push
je
sarl
xor
sbb
xchg
mov
std
out
adc
adc
xchg
push
add
inc
lahf
mov
and
rcrb
xchg
shll
mov
xchg
inc
mov
jae
mov
pop
or
movsb
mov
xchg
out
mov
aad
jg
xchg
outsb
mov
xor
push
clc
ss
push
jp
xchg
inc
mov
hlt
pop
mov
push
sbb
minps
fmull
cltd
int
mov
sbb
mov
sbb
lcall
mov
xchg
xchg
jb
scas
scas
xchg
dec
rcll
loope
pushf
push
xchg
pop
loope
push
fcompl
sbb
add
jecxz
adc
cltd
es
imul
mov
das
incl
loopne
movb
fbld
mov
scas
lock
mov
adc
xchg
mov
push
mov
das
enter
mov
das
or
stc
int
sub
popa
cmp
cmpsb
dec
mov
dec
push
lret
mov
mov
jb
lock
lcall
dec
cmpsl
push
shll
fcomp
or
or
lock
aad
out
in
ja
pop
fldcw
stos
rcrl
push
pop
subl
add
mov
xchg
pop
add
inc
scas
enter
inc
clc
sbb
jl
mov
adc
lea
push
or
popf
cltd
sbb
lcall
xchg
fstl
mov
xchg
fs
fldt
adc
fsubl
xchg
frstor
cltd
and
add
out
scas
popf
mov
pop
movsl
xor
or
xchg
out
cltd
popf
fwait
ja
fildll
lret
sbb
test
aas
and
andl
mov
mov
lret
subl
cmp
add
mov
scas
fs
fwait
xor
cltd
bnd
or
cmp
test
pop
cmp
aam
repnz
jl
and
daa
sbb
mov
in
jno
xor
loop
mov
inc
push
jb
sbb
incl
push
xchg
sub
js
sbb
pop
xor
movmskps
xchg
les
sbb
add
dec
sbb
loopne
xchg
inc
data16
push
sub
push
inc
scas
cld
stc
icebp
or
adc
inc
mov
mov
xchg
or
loope
xorb
mov
aad
sbb
cwtl
sub
xchg
orl
scas
test
jb
int
dec
das
xchg
mov
scas
andb
js
int3
or
jge
push
and
xor
mov
mov
fwait
pusha
mov
xchg
mov
mov
std
push
mov
cmp
dec
sub
cmc
ds
mov
mov
dec
xchg
fdivrs
icebp
mov
and
adc
adc
call
cwtl
lcall
adc
das
aaa
push
nop
insb
inc
mov
sbb
inc
sbb
cs
add
push
sub
enter
into
cmp
sbb
outsl
aas
xchg
inc
outsb
clc
mov
mov
loopne
cmc
xchg
pop
xchg
mov
jo
push
es
icebp
pop
idiv
cmp
push
das
clc
mov
int
jge
mov
fdivrs
pmaxsw
or
push
dec
adc
orl
lcall
cwtl
or
pop
xlat
pop
fsubrs
mov
shl
jecxz
cld
push
or
sbb
jg
out
pop
cvtdq2ps
lock
dec
mov
insl
ja
leave
and
jne
out
movsl
cltd
lock
xor
mov
imul
sub
lock
xchg
pusha
pop
cli
insb
outsb
in
mov
mov
daa
arpl
push
rorl
jge
add
out
in
dec
adc
fimull
sbb
push
jg
jae
dec
mov
add
xchg
scas
xchg
std
add
insl
cmpb
addr16
jecxz
sbb
shl
addr16
or
rcl
mov
xchg
dec
fistpl
jp
or
jo
xchg
scas
xor
fcoms
rclb
cltd
sub
aaa
in
inc
std
cmpsl
mov
jo
pop
cmp
mov
nop
ja
dec
jnp
subb
jecxz
or
and
lret
fisubrl
xor
jns
fidivl
jne
das
call
sub
pop
movsl
jge
imul
fdivs
jb
call
loop
jbe
push
cmp
das
jae
dec
mov
ror
xchg
out
mov
push
int3
mov
cmpsb
fsubrl
pop
cmp
fstpt
test
pop
lcall
xor
inc
xchg
iret
add
mov
pushf
ficoml
jecxz
xchg
pop
jno
mov
sub
test
enter
dec
insl
jmp
pop
sbb
and
icebp
ds
sub
ljmp
pusha
movsb
xchg
orl
test
fmul
popa
jae
pushf
xchg
cmp
jg
add
rorb
aam
xchg
cmp
gs
xchg
outsb
cmp
icebp
sub
negb
mov
iret
jge
int3
lret
popf
fldln2
fisubl
inc
inc
jbe
mov
xchg
into
cwtl
stos
int
pop
jge
hlt
lods
xchg
loop
inc
lods
push
xchg
and
gs
dec
mov
cld
lock
xor
pop
sub
mov
aam
push
jmp
icebp
outsb
and
dec
cmp
inc
pop
push
and
outsl
jl
rcr
stos
add
cld
jno
insl
inc
sbb
cmc
fistps
mov
mov
xor
push
arpl
jg
das
out
sbb
out
cs
mov
cwtl
shrl
sbb
dec
and
pusha
mov
mov
pusha
scas
stos
int
and
scas
enter
test
or
les
sub
mov
cltd
mov
arpl
push
das
scas
stos
adc
xchg
js
scas
out
cltd
cs
lret
in
xchg
mov
xchg
les
fwait
or
add
outsb
dec
outsl
add
push
ret
pop
cmp
add
xchg
jae
les
lret
xchg
jg
cmp
xor
into
out
int
sbb
mov
and
and
inc
and
xchg
push
sub
sbb
scas
or
sbb
or
or
das
and
rcrb
icebp
sub
xchg
test
sbb
jnp
xchg
lahf
cli
mov
sbb
outsl
and
out
sub
pop
add
movsl
push
sti
shlb
jp
out
jae
fwait
sti
xchg
xchg
out
cmp
sahf
inc
icebp
xchg
cmp
mov
mov
and
fstl
cmp
sub
sbb
push
fstps
inc
lods
repnz
addr16
xchg
and
push
les
enter
adc
inc
mov
cmp
mov
adc
cmp
pop
cmp
adc
shrb
inc
call
push
push
lcall
mov
xchg
sub
or
add
lods
dec
scas
mov
xor
cmpsl
mov
rolb
mov
jl
gs
sarb
fstl
aad
jmp
lcall
js
out
sahf
aad
mov
adc
push
repz
pop
push
ja
mov
inc
rcll
and
fmuls
push
sbb
and
shll
int
or
and
jp
pop
and
test
adc
rcrb
fwait
xchg
pop
sbb
fucom
cwtl
dec
mov
in
out
rclb
das
rcr
add
fs
adc
inc
xchg
notb
pushf
aaa
out
mov
ficompl
lods
insb
hlt
mov
jae
jbe
adc
fistpl
in
scas
jo
fstl
jnp,pn
sbb
push
repnz
push
jo
outsl
push
or
lea
pop
fstps
sub
sub
cs
jno
in
sbb
std
lcall
mov
iret
pop
push
mov
push
cli
mov
dec
loopne
shlb
es
sub
nop
dec
and
addb
adc
ret
les
xorl
adc
cwtl
das
xchg
into
aaa
push
sbb
stos
mov
call
pop
sbb
mov
xchg
psraw
cmc
pop
movsl
sbbl
dec
xchg
or
mov
movsb
movsl
mov
or
push
ret
mov
pop
xchg
xchg
jno
pop
dec
out
scas
or
push
jp
frstor
pop
mov
sub
jecxz
lahf
insl
call
scas
nop
and
iret
icebp
outsl
jae
std
roll
mov
sub
or
mov
sarb
pop
orl
leave
popf
rcrl
adc
iret
ds
loope
in
pop
jae
mov
and
cmp
and
icebp
or
xchg
mov
lea
dec
aad
cld
adc
jg
cmp
daa
ds
movsb
cltd
insb
cmp
scas
iret
xchg
das
mov
scas
js
repz
outsb
sub
dec
jle
scas
pop
pop
mov
cmp
ret
pusha
push
sti
das
cs
pop
les
mov
inc
loopne
sub
testl
or
xchg
imulb
fneni(8087
ja
sbb
jge
mov
xor
mov
mov
mov
push
adcb
das
lods
fisubrs
insb
lahf
fildll
mov
xchg
or
inc
scas
xchg
mov
inc
xorl
lcall
fists
dec
lret
loope
adc
mov
mov
or
mov
inc
js
mov
stos
push
or
add
loopne
outsb
add
push
adc
adc
xlat
das
lods
aad
lahf
cmp
adc
sbb
and
sbb
cmc
cmc
mov
and
aaa
push
rcl
mov
and
inc
es
scas
push
jl
and
cld
lea
mov
xchg
insb
and
pop
push
pop
setge
adc
pop
scas
cld
icebp
pop
fisttpl
pop
mov
mov
shll
mov
sbb
mov
mov
imul
pop
mov
push
iret
loope
or
or
pop
add
sahf
push
arpl
fimull
negl
enter
sbb
je
lock
ljmp
or
hlt
mov
inc
cmc
sbb
sub
scas
add
lods
mov
jo
in
js
jno
jae
xor
pop
push
or
hlt
xchg
jge
push
inc
mov
or
adc
pop
mov
fwait
dec
jnp
xchg
push
jo
shrb
cs
aaa
mov
push
or
outsl
dec
dec
out
or
dec
mov
test
or
adc
mov
push
pop
stc
das
mov
mov
enter
nop
ud2
or
enter
inc
out
stos
ret
leave
pop
stos
mov
in
xchg
out
push
fstl
imul
mov
adc
cmpsb
lea
cwtl
in
in
icebp
cld
insb
adc
mov
sahf
insb
out
scas
mov
sbb
or
arpl
inc
xor
out
cltd
repnz
mov
ss
sub
sbb
inc
mov
sbb
adc
push
fdivs
popf
inc
push
mov
aaa
sub
adc
mov
dec
cli
or
mov
or
push
test
dec
or
jge
movsb
or
sub
jp
sar
xchg
icebp
cwtl
popf
and
sbb
dec
cltd
call
xchg
and
mov
stc
and
cmpsb
cld
jb
into
and
ror
fldt
mov
flds
scas
jnp
out
cltd
inc
scas
cmp
sbb
jecxz
ret
or
lock
xchg
icebp
pop
xchg
fwait
vmovsldup
add
mov
les
mov
test
lahf
out
fwait
cmp
cmp
sbb
mov
mov
mov
test
sbb
jg
xor
and
push
in
xchg
push
in
ss
cmp
adc
bound
insl
xchg
mov
mov
or
ss
add
decl
or
lea
xchg
or
outsl
stc
scas
leave
mov
loopne
or
das
fwait
sbb
dec
aam
mov
loope
nop
mov
mov
xchg
fiaddl
push
fcmovnb
addr16
dec
lcall
rcrb
add
push
leave
push
ljmp
mov
aas
cmp
or
insb
sub
dec
push
jle
push
add
jae
pop
xor
and
scas
scas
jno
inc
mov
cmpsb
fldl
sbb
ss
aaa
popl
sbb
icebp
nop
std
mov
out
test
and
dec
mov
inc
jmp
into
lret
fldcw
cmpsl
mov
dec
sbb
out
cltd
and
xchg
sbb
scas
xchg
insl
stc
sbb
sbb
fsubs
inc
push
aam
in
pop
adc
add
mov
mov
mov
lds
outsb
lock
mov
or
dec
sub
sbb
iret
adc
lret
shlb
mov
mov
subb
adc
clc
or
and
shl
xchg
mov
xor
adc
sub
xchg
lea
das
hlt
mov
push
sbb
lods
movsl
push
out
jno
or
test
or
outsb
fsubl
outsl
fdivs
shrl
jge
jbe
lds
pop
ffreep
bound
add
mov
mov
dec
xor
testl
popf
scas
cmp
push
xchg
push
lret
pushl
mov
xchg
test
lock
xchg
and
mov
cmp
popf
push
mov
xchg
stos
sbbl
cwtl
inc
aas
popf
push
inc
sti
and
pop
jno
cltd
mov
out
adc
int3
nop
dec
push
imul
in
pop
mov
loop
and
mov
ja
nop
cmp
insb
mov
and
and
imul
jl
and
jae
mov
movsb
xlat
xchg
into
outsb
pop
or
inc
addr16
in
and
dec
inc
std
pop
push
icebp
xchg
test
hlt
inc
push
push
or
mov
mov
dec
sbb
aas
scas
cltd
aaa
dec
jbe
data16
imul
leave
cltd
pop
pop
imul
lcall
jp
mov
lahf
cmp
iret
bound
mov
add
mov
loope
cmp
xor
push
es
and
out
rcrl
xchg
pop
icebp
cmp
pop
xchg
sub
popf
pop
sub
shll
mov
ljmp
rorl
filds
in
mov
ljmp
std
adc
mov
sbb
fistpl
dec
dec
pushf
das
scas
lea
movsb
shll
inc
mov
jge
lahf
outsb
fldcw
call
cli
dec
mov
sbb
lock
sub
inc
xchg
mov
fdivl
fcmovnu
lret
scas
and
int3
loopne
jns
xchg
or
divl
es
add
jnp
xchg
outsl
sub
mov
inc
pop
fstl
push
xchg
mov
jo
sbb
outsl
jp
cmp
adcl
mov
fwait
mov
imul
pop
adcl
rcr
scas
xchg
lahf
mov
pop
cs
push
jne
inc
or
sub
pop
aad
xchg
aam
cmpsl
int
aaa
xchg
push
xor
cmp
mov
pop
xor
cltd
in
fwait
int3
movups
cmp
mov
adc
pop
cltd
fildll
push
leave
into
mov
adc
cmp
and
push
decb
mov
xchg
xor
icebp
fcomi
fmuls
add
stos
jnp
lret
pop
push
adc
stc
push
mov
jo
push
movsl
inc
ljmp
or
mov
xchg
sbb
and
icebp
cmpsl
xchg
adc
cmp
cli
aam
in
icebp
repnz
into
and
adc
sbb
sbb
std
cltd
xchg
pop
mov
shll
adc
lcall
xchg
bound
and
das
and
outsb
and
lcall
and
jno
inc
fisubs
out
shlb
sbb
push
inc
mov
bound
xor
inc
shrl
jae
sbb
movsb
add
adc
out
xchg
jo
sub
pop
outsl
push
or
inc
pop
mov
cld
cltd
sbb
xor
mov
lcall
adcl
adc
mov
cmp
scas
iret
cmp
mov
xchg
mov
or
adc
mov
lods
mov
jne
push
push
add
lahf
or
fistpl
and
push
sbb
adc
dec
scas
scas
cmp
pop
jo
int3
rclb
ss
shlb
lcall
fdivs
xchg
sbb
cmp
jg
xor
xchg
or
es
jg
and
jmp
out
xor
subl
xchg
or
pop
or
sub
lock
ss
ret
sbbl
add
xlat
xor
scas
arpl
cmp
add
and
sbb
pop
jle
orb
push
fdiv
pop
pop
rol
mov
add
fildl
outsb
pop
mov
mov
stc
clc
mov
test
pop
inc
imul
aam
mov
xchg
popa
fwait
jp
inc
mov
pop
orb
xchg
popf
addr16
pop
outsb
hlt
cwtl
and
xchg
nop
pop
jg
pushf
push
sbb
sahf
sub
cmp
add
and
pop
sub
sub
mov
add
mov
sub
add
mov
mov
repz
popl
mov
outsl
mov
iret
outsb
mov
mov
xchg
inc
jecxz
repnz
xchg
fcmovu
lock
test
dec
xchg
xor
repnz
jb
insl
out
int
cld
mov
iret
fstps
out
das
sti
fisubrs
mov
scas
outsb
clc
xchg
aam
fisttps
test
jl
leave
dec
add
je
les
jae
sbb
pop
xchg
xchg
ret
xchg
push
jge
inc
xor
mov
dec
or
rcll
xchg
std
rcll
pop
push
dec
cmp
sbb
std
arpl
mov
fistpll
out
jle
mov
xchg
jnp
push
inc
dec
cmp
mov
mov
sub
std
icebp
mov
xchg
push
lods
out
fisttps
xchg
negb
cld
roll
jl
iret
sub
repnz
or
push
test
adc
imulb
leave
shll
lcall
sbb
pushf
add
movsl
cld
jnp
fstpl
fistpll
fidivrl
mov
push
inc
jl
mov
orl
adc
aaa
dec
es
loop,pn
imul
icebp
dec
jge
inc
in
stos
subl
test
popf
sub
sub
lahf
les
insb
or
das
scas
adc
jl
adc
jl
ja
xor
mov
sarb
or
jno
jnp
push
xchg
sub
pop
es
lds
xor
js
adc
sarl
xorw
inc
and
cltd
adc
mov
pop
adc
lea
int
jae
repnz
jl
inc
dec
sub
jl
sahf
cmp
scas
jae
sbb
mov
pop
inc
cmp
outsl
fimull
xor
cmp
fildl
into
loop
js
push
adc
ret
xchg
jge
data16
fisttpll
out
push
popf
jne
mov
int
cwtl
inc
in
mov
push
call
stos
shll
and
in
jns
in
bound
cli
shrl
pop
inc
daa
arpl
inc
out
and
pop
fwait
scas
movsl
mov
fildll
fmull
daa
sahf
xor
sub
xlat
pop
mov
in
loop
mov
adc
inc
mov
fsubrl
lss
push
xlat
mov
inc
jnp
dec
cltd
movsl
test
pop
add
fwait
es
sbb
mov
in
hlt
xchg
bound
popf
loopne
loope
movsb
mov
popf
pop
popa
test
sbb
push
jmp
push
mov
popf
add
fwait
cmp
aam
out
push
sub
dec
pop
scas
dec
mov
stos
testl
mov
adc
dec
int3
push
xor
push
pop
adc
jle
cs
pop
stos
pop
shlb
fwait
jg
pop
pop
xchg
push
fldl
mov
mov
cltd
aad
outsl
mov
mov
jbe
movsb
inc
cs
adc
sub
xor
aaa
stos
inc
xchg
imul
stos
push
or
push
pop
mov
mov
mov
out
lock
bound
jg
sbb
icebp
iret
push
cs
push
fwait
xlat
or
add
cmp
dec
lahf
pushf
dec
int3
shll
fwait
wrmsr
out
adc
pop
scas
sti
and
push
xchg
test
sub
movsb
icebp
xchg
jae
jl
gs
dec
addb
fstpt
incl
sub
pop
pusha
pop
pop
lods
enter
xor
cwtl
mov
pop
or
insl
ror
or
dec
negb
push
sub
cmpsl
sbb
shlb
aas
jb
jmp
cwtl
cmp
inc
or
mov
fs
frstor
mov
add
push
jg
sahf
cld
out
mov
loopne
iret
jge
cmp
mov
int
lahf
orb
outsb
ret
ja
ret
fnsave
xor
mov
rep
icebp
scas
scas
mov
mov
pop
xor
out
test
inc
cwtl
imul
xor
loop
push
cmp
sbb
add
add
cmp
push
lahf
xchg
sub
out
mov
sbb
insl
cltd
filds
movsl
add
stos
xor
stos
mov
cmp
xor
movsl
fwait
push
pushf
mov
push
jae
pusha
push
sbb
fsub
mov
outsl
test
xlat
jb
pushf
dec
ja
outsb
lds
mov
outsb
negb
mov
or
out
dec
inc
fdivrp
xor
jnp
jae
adc
mov
in
ss
add
idivb
fistl
push
inc
and
out
adc
and
sub
imul
out
and
cltd
mov
mov
or
popf
jns
adc
mov
add
sub
dec
jle
scas
leave
sbb
mov
out
lods
sbb
add
outsb
in
sub
rcll
sub
shlb
push
sub
mov
fcompl
rcrl
pop
dec
mov
inc
lahf
mov
mov
inc
mov
arpl
mov
shrb
cwtl
scas
mov
rclb
mov
or
jle
scas
mov
ret
pop
bound
mov
fld
sbb
fistps
inc
mov
sbb
mov
jnp
leave
jge
xchg
xlat
add
ret
sbb
aas
pop
sbb
loope
push
inc
jo
mov
dec
mov
xchg
stos
sub
call
scas
mov
push
insl
mov
sub
dec
mul
lock
scas
sub
movsl
mov
scas
adc
rorl
shll
sub
repnz
mov
arpl
cmp
mov
mov
mov
push
movsl
pop
cwtl
push
jb
mov
movsl
push
lock
xor
push
xchg
movsl
movsl
movsb
movsb
inc
mov
repnz
xchg
lock
xchg
xor
mov
xchg
lock
hlt
dec
mov
mov
jmp
std
mov
mov
out
loopne
mov
shlb
pop
jns
xchg
pop
jnp
adc
and
pop
push
pusha
addb
cmp
lds
ficompl
shl
cmp
pop
scas
dec
sub
scas
ljmp
mov
in
leave
cmp
int3
jl
xlat
mov
xchg
into
push
cli
inc
push
enter
cld
push
mov
int3
pusha
cltd
fcom
adc
les
xchg
stc
dec
push
xor
ja
dec
cwtl
outsl
adc
mov
mov
push
pop
nop
xor
lahf
fxch
xchg
add
xchg
das
push
ret
loope
outsl
movsb
test
cmp
jnp
dec
xchg
add
popa
adc
out
call
scas
sbb
mov
add
push
xchg
mov
das
test
lahf
fisubl
cwtl
sbb
addb
shlb
shll
jbe
repz
jnp
adc
outsb
pop
popa
xor
pushf
ret
mov
shll
add
jae
rcrl
int3
sbb
sbb
mov
dec
test
jle
xlat
inc
insb
mov
les
lods
sbb
sbb
xor
mov
frstor
adc
sub
lcall
aas
mov
mov
out
ss
mov
jb
pop
std
cpuid
pop
fdivl
divl
js
jae
enter
push
fnsetpm(287
or
cmp
adc
jg
sbb
or
std
pushf
jg
dec
test
mov
aam
divl
mov
xchg
cmp
lret
sbb
or
fwait
mov
in
movsb
mov
dec
pop
mov
out
imul
sbb
out
ljmp
mov
mov
lcall
cltd
fst
fs
inc
out
inc
pop
std
xchg
je
repnz
push
je
jmp
les
imul
mov
pushf
push
mov
enter
arpl
add
sbb
stos
ficoml
xchg
stos
fsts
or
pop
xor
pop
movsb
xor
xor
fsts
das
adc
cwtl
movsl
mov
aam
push
into
pushf
dec
nop
xor
lods
test
dec
dec
popf
push
pop
mov
xchg
push
js
wbinvd
sbb
std
xor
mov
pop
lods
mov
in
icebp
mov
xchg
rclb
pop
and
or
adc
jle
sub
and
xchg
pop
adc
sub
xchg
adc
in
fistpl
xor
inc
psllw
or
cld
xchg
sbb
movsb
xchg
sbb
mov
das
out
push
jp
sbb
adc
mov
mov
lods
stos
mov
das
loopne
adc
mov
ror
in
lret
lods
dec
mov
inc
inc
scas
fdiv
movsb
mov
adc
push
enter
iret
pop
xchg
xor
test
add
and
repnz
cwtl
xchg
or
adc
lods
adc
lahf
sbbl
test
mov
mov
jo
std
mov
imul
in
das
jno
add
das
pushw
outsb
pop
stos
jb
or
pusha
ja
dec
shll
pusha
push
loope
addl
insl
dec
js
outsb
mov
sbb
jecxz
xchg
js
pop
mov
in
fwait
sbb
lcall
xchg
adc
pop
mov
lock
rcrb
mov
xor
scas
mov
icebp
dec
test
adc
shrl
nop
lcall
lock
push
xlat
mov
packsswb
fsubr
mov
loop
fcmovnbe
fnstsw
cltd
sahf
jle
mov
xchg
mov
jo
mov
das
jae
pop
sarl
push
pop
cld
push
repz
xchg
ljmp
pop
aas
dec
sbb
mov
jne
icebp
repz
jo
popf
xorl
jne
push
daa
flds
dec
xchg
and
ret
insb
arpl
xchg
xchg
lods
adc
and
pop
and
ficomps
inc
xor
xchg
inc
dec
scas
in
cmp
mov
mov
lahf
jnp
nop
jno
cmpsl
decb
les
int
imul
mov
sbb
xchg
adc
pusha
in
test
iretw
leave
inc
negb
xchg
xor
movsl
mov
push
pop
or
add
sbb
cs
sub
mov
jge
and
mov
arpl
push
rclb
gs
scas
and
arpl
into
xchg
sbb
adc
mov
out
pop
scas
aam
test
jle
push
adc
mov
stos
mov
pop
mov
stos
outsl
add
fmuls
adc
fsubrs
mov
les
sbb
and
lahf
ljmp
adc
and
call
fabs
xchg
outsl
loope
scas
fwait
cld
mov
mov
mov
sub
cmp
fwait
xchg
xor
aam
lcall
sbb
lret
or
rcrb
add
sub
dec
mov
aas
jl
sti
mov
adcl
cvtpi2ps
xor
lahf
in
push
scas
xor
mov
sbb
iret
pop
mov
or
jno
push
xor
rcrb
sub
xor
repnz
mov
cld
aam
sbb
mov
outsb
mov
add
icebp
movsl
popf
xchg
jecxz
mov
sbb
push
push
adc
pop
in
inc
popf
jmp
xchg
jb
das
pop
fsts
sbb
mov
and
and
sub
mov
cld
cmp
mov
addr16
jnp
push
lea
movsl
jno
sahf
in
mov
sti
or
mov
xchg
jp
cmp
fidivs
insl
cmp
or
fstpl
adc
frstor
mov
shrl
mov
test
and
cmp
mov
add
or
idivb
sti
stc
out
mov
sub
jae
je
out
cmp
in
mov
ror
pop
aaa
rorl
jge
movsl
addr16
and
fwait
sarb
das
sub
add
lock
loopne
and
or
movsl
psllw
xor
adc
push
or
pop
xchg
outsb
pop
xchg
jg
adcb
dec
orl
and
cmp
aam
cwtl
xchg
sbb
xchg
jne
or
xchg
adcl
mov
sbb
adc
dec
dec
xchg
aad
sbb
sbb
pop
fdivs
mov
mov
adc
mov
xchg
sub
outsl
movsb
dec
sub
dec
leave
xchg
dec
jb
dec
sub
sbb
push
aam
negb
mov
mov
cmp
test
mov
pop
and
cmc
outsl
push
cmp
pop
xor
mov
orb
call
xchg
adcl
add
dec
sbb
and
and
out
add
push
ja
push
cmp
sbb
movsl
lahf
test
inc
xchg
mov
add
jo
jne
int
jl
mov
je
cmp
pop
repz
loopne
inc
pop
dec
lea
fimull
cltd
pop
sbb
push
test
jg
mov
fimull
icebp
jae
xchg
out
ficomps
jle
and
xchg
icebp
mov
mov
mov
incb
xchg
jecxz
rcl
fcmove
pop
sub
sbb
xor
out
frstor
fsubrl
add
inc
cld
mov
cltd
iret
jg
cli
lods
sbb
stos
int3
pushf
mov
out
mov
leave
lret
out
mov
adc
aaa
xchg
mov
sub
sahf
lret
lret
dec
or
outsl
inc
sbb
lret
dec
fsubrs
and
psrld
dec
jg
sbb
mov
add
push
test
cmpsb
mov
cmp
bound
icebp
mov
cltd
ficoms
call
lcall
sbb
ljmp
cs
mov
xchg
push
xchg
mov
lret
stos
push
loope
das
xchg
and
cmp
xor
adc
movsl
pop
scas
mov
popf
scas
ja
test
inc
xchg
xchg
js
fstl
ret
mov
adc
cltd
rcrl
and
nop
fnstenv
mov
pop
fstpl
add
pusha
dec
outsb
pop
out
mov
loope
mov
scas
fmul
mov
nop
repz
das
adc
rorl
ja
out
mov
or
and
push
mov
wrmsr
into
adc
sbb
or
fsubs
cltd
and
and
push
inc
fstp
popf
fldcw
and
xchg
and
pop
sbb
ja
xchg
popf
inc
xchg
shlb
jecxz
in
aaa
add
fmuls
arpl
out
xor
mov
inc
aad
and
cmp
cmp
mov
loopne
stc
repz
out
mov
push
pop
mov
push
movsb
das
mov
sbb
fstpl
mov
sbb
cmp
scas
into
inc
out
imul
jge
lret
xorl
sahf
sbb
dec
std
cwtl
das
cltd
xchg
adc
push
lock
ja
jns
cmpsb
fdiv
test
mov
sahf
movsb
scas
outsb
testl
pop
mov
ljmp
or
and
and
fldt
stc
nop
pushf
icebp
outsl
pop
mov
mov
inc
adc
dec
cmc
movsb
jbe
fdivl
std
mov
cwtl
xor
mov
cs
jns
clc
adc
imul
sbb
dec
ret
jmp
dec
sarl
inc
mov
adc
cmp
mov
adc
mov
mov
lret
mov
mov
pushf
push
jnp
je
cs
mov
xchg
cmp
andl
das
cmp
ret
test
jbe
or
cmc
fisubrl
sbb
leave
fnstenv
or
lahf
jge
leave
push
dec
sub
or
fmuls
sub
fldz
sbb
ret
fs
push
mov
jp
dec
sbb
rcr
fcompl
mov
xchg
gs
push
pop
outsl
mov
push
call
gs
out
fdivrs
fdiv
or
adcl
sbb
dec
mov
mov
popa
adc
adc
movsb
dec
jns
mov
cwtl
sub
xor
cltd
imul
mov
push
lahf
sbb
or
mov
pop
dec
ds
lahf
push
sub
lcall
aas
sub
ss
ja
jne
add
iret
push
xlat
shlb
pop
cmp
cmpsl
lret
pop
adc
sbb
pop
addr16
cmp
push
push
push
mov
nopl
fmull
icebp
pop
mov
push
fidivrl
mov
xchg
push
jle
test
sbb
and
int
sbb
jecxz
aas
cmp
xlat
fsubrl
cmp
out
dec
sub
scas
mov
mov
adc
fsubrs
add
arpl
jmp
outsl
adc
lret
jno
push
scas
mov
adc
xchg
xlat
scas
imul
mov
mov
adc
inc
mov
jmp
sub
lcall
sbb
sub
lods
popf
lea
idivl
in
jg
mov
add
fisubrl
push
cmp
movsl
sbb
test
aas
loopne
imul
cmpsb
rol
dec
jg
adcl
outsb
push
lret
sub
and
adc
push
in
jge
push
cmc
cmp
lcall
add
lods
mov
stos
test
scas
jg
dec
xlat
sbb
ja
sti
mov
mov
das
sub
sub
add
push
in
js
push
out
sbb
xchg
fldt
fistl
xchg
cli
das
jo
jp
les
scas
mov
sub
in
sub
pop
sub
mov
mov
fldt
pop
sub
or
daa
cmp
xchg
or
dec
cmpsb
mov
inc
cmp
sbb
add
jae
push
mov
cmp
movsl
sbb
lahf
outsb
pop
dec
inc
mov
pop
sti
fs
inc
sbb
mov
push
scas
sti
sti
mov
mov
add
call
inc
sarl
and
movsb
scas
jmp
mov
pop
sti
lea
pop
test
ror
push
pop
cltd
std
movsb
popf
into
je
cld
sbb
insl
mov
hlt
jae
mov
scas
mov
ret
fstl
sbb
fists
pop
or
sub
add
push
fidivrl
cltd
rolb
lods
outsl
les
out
call
mov
cmp
cmpsb
fstp
dec
jne
pop
enter
enter
and
pushf
shr
rcrl
pop
bound
loope
stos
cs
jns
adc
cmp
mov
cwtl
arpl
mov
cltd
mov
popa
pop
sbb
xor
movsl
adc
mov
push
aas
daa
call
setne
adc
arpl
cltd
pop
sub
and
jnp
fwait
les
aad
dec
dec
daa
inc
inc
sbb
popf
fs
mov
xchg
or
scas
adcb
cmp
mov
mov
dec
sbb
sahf
sbb
cmp
mov
sbb
sti
inc
mov
add
xchg
fisttpl
popf
mov
ds
leave
push
cld
inc
bound
push
aaa
mov
loopne
call
mov
in
xor
cld
and
stc
out
xchg
cmpsl
jno
xchg
mov
push
ret
shrl
and
sub
jb
sbb
movsb
sbb
sbb
adc
push
mov
sbb
jns
sub
xchg
xor
adc
mov
outsl
add
scas
iret
adc
cltd
loopne
xlat
sbb
mov
sbb
stos
dec
pop
test
fs
loop
or
movsb
push
cs
and
sub
mulb
jbe
sbb
test
sbb
movsb
aad
mov
sbb
dec
test
lahf
sbb
das
xchg
ljmp
or
cld
dec
scas
fidivs
mov
sub
or
xor
repnz
pop
xor
xchg
xchg
xchg
rclb
sbb
andb
pop
ret
movsl
jp
clc
call
cmp
iret
mov
xlat
sarb
faddl
sub
mov
xchg
loop
pop
jecxz
ljmp
pop
outsb
je
push
sbb
out
mov
movsb
mov
mov
call
or
xorb
mov
insb
fcmove
add
ficomps
fwait
adc
adc
cwtl
add
sbb
push
aad
push
lcall
inc
out
mov
movsb
xchg
sub
sbb
mov
sbb
cli
sarb
jmp
and
nop
lcall
fucom
jle
mov
adc
mov
negl
push
outsl
mov
out
scas
das
int3
in
jo
rcr
mov
sti
pop
add
mov
mov
push
fiadds
dec
lahf
mov
fld
sub
cmp
jecxz
jecxz
or
jecxz
xor
lock
mov
stc
jno
fs
cmp
pop
sub
movsl
jecxz
sub
rcrb
jno
xchg
lret
imul
scas
out
ja
dec
jne
mov
call
mov
pop
sub
fcompl
xorb
sbbl
cmc
mov
inc
in
mov
mov
cmp
pop
das
mov
mov
mov
fdivr
das
ficomps
jg
pop
int3
out
arpl
scas
xchg
adc
sbb
pop
xor
pop
aas
jns
jp
mov
pop
and
fdivrs
outsl
adc
sbb
stc
and
insl
loope
lds
mov
pop
cmpsb
adc
cwtl
aaa
mov
icebp
jno
popf
pop
mov
movsl
adc
data16
enter
movsb
push
sub
jno
scas
xchg
inc
mov
sar
mov
xchg
xchg
loope
pop
fcomps
sub
popa
jne
test
dec
sbb
sub
mov
dec
jge
das
cmp
cs
fmuls
rcrl
and
iret
push
fists
mov
lret
push
ja
xor
repz
push
add
rclb
movsb
xchg
insb
adc
repnz
ss
inc
das
xchg
push
das
cmp
push
jle
push
jne
pop
xor
xchg
and
lret
dec
pop
scas
int3
dec
inc
movsb
out
dec
scas
sahf
scas
cmp
jge
sbb
inc
lds
leave
dec
vshufps
pop
jg
or
sbb
cmc
js
fwait
pusha
shrl
cmp
movsb
mov
arpl
div
iret
outsb
sub
dec
and
pop
dec
xor
and
lock
mov
outsl
mov
iret
ja
mov
and
or
subl
ds
xchg
fcoml
pop
or
dec
cli
sbb
xor
or
adc
rcll
pop
xchg
cmp
push
sbb
mov
fcmovnu
rclb
push
xor
sbb
jno
adc
pop
int3
mov
fdivrs
lretw
idivl
mov
jno
pop
ficompl
xchg
cmp
and
fwait
insb
testl
jb
sti
das
mov
int3
into
add
mov
aas
pop
aaa
push
jbe
cltd
lds
je
cwtl
mov
sahf
inc
push
mov
push
push
inc
push
adc
mov
sub
cmpsb
dec
rcll
pop
pop
leave
fs
test
jae
std
sbbl
xchg
ds
nop
add
cli
mov
jp
adc
push
add
mov
xchg
lock
mov
je
fcomip
adc
dec
aas
or
push
mov
scas
and
pop
cmp
leave
pop
push
mov
fwait
mov
cs
add
mov
leave
xor
lcall
ds
outsb
mov
add
test
push
mov
std
lcall
push
arpl
mov
inc
aam
stos
xor
test
add
cmp
sbb
cmpsl
lods
pop
cmp
dec
insb
or
sub
sub
xor
dec
pop
push
sbb
xchg
popa
fstps
cmp
jmp
push
in
jb
mov
and
mov
scas
in
inc
iret
or
sbb
mov
xchg
sbb
cmpl
cwtl
mov
test
dec
lcallw
sub
lahf
mov
push
shlb
fiadds
push
jns
jmp
mov
scas
cmp
xchg
pop
outsb
pop
pop
iret
sub
mov
jge
adc
cmp
pushf
xor
or
cmp
mov
add
negb
divl
xchg
mov
pusha
or
pop
das
sbb
stc
lcall
fidivrs
push
aad
mov
scas
sub
sti
cmp
rclb
sbb
dec
xor
xchg
cld
cli
jp
jle
fwait
mov
mov
loop
mov
jle
xlat
je
mov
in
jno
scas
fisubl
pop
rcl
sti
pop
out
mov
sahf
loop
fucom
cmp
and
jge
pop
iret
nop
or
dec
movsl
movsl
push
or
pop
or
pop
int3
pop
hlt
sbb
std
dec
xor
mov
sbb
out
or
sub
cs
sbb
xchg
mov
mov
outsl
sbb
ja
out
in
xchg
outsl
movsl
sbb
dec
in
lahf
out
mov
inc
sbb
inc
xchg
pop
xlat
lods
inc
ret
shll
push
popa
add
mov
lahf
fisttpll
addr16
mov
das
fisubl
cltd
dec
mov
jae
ja
out
mov
sahf
out
push
dec
jnp
out
leave
mov
stos
lea
jle
addr16
in
mov
test
daa
mov
das
in
test
int3
or
pushf
mov
lds
cmp
ffreep
inc
pop
lds
and
cld
xor
scas
lds
in
jle
shlb
sbb
pop
mov
xor
mov
incb
sub
daa
bndstx
loope
fsubs
std
lcall
mov
jmp
xchg
cmp
inc
scas
loop
add
cmp
das
push
pop
add
pushf
dec
jno
stos
and
arpl
xchg
movsb
mov
mov
into
fwait
jae
jle
call
inc
movsl
std
hlt
cmp
mov
or
xchg
stc
lcall
push
add
iret
jge
add
icebp
pop
int3
sahf
cmp
dec
aas
movsl
pop
adc
icebp
jge
xchg
icebp
movsl
leave
push
sbb
mov
cmpl
or
fstps
outsl
xor
push
movsb
mov
adc
dec
xchg
adc
mov
xchg
mov
cmp
cltd
adc
dec
test
sbb
push
int3
popa
xor
addr16
fidivl
jno
adc
int
stos
aam
loopne
rcrb
sbb
push
and
jns
push
adc
add
cltd
sbb
sbb
dec
ror
dec
jge
cmpsl
push
push
ret
jecxz
xchg
pop
aas
inc
jns
ja
inc
sbb
outsb
push
cmp
mov
in
adc
and
cmp
loop
int
cmp
into
push
insl
xchg
xchg
xchg
popf
pushf
and
adcl
jle
inc
ljmp
fnstcw
das
and
inc
bound
subb
outsb
out
es
add
ret
aaa
popf
mov
outsl
out
add
jno
mov
jo
cld
adc
rcll
daa
in
icebp
cmp
aad
rorb
xor
and
push
sub
out
shlb
cmpl
xor
xor
ret
sbb
sbb
mov
dec
jno
into
push
addr16
mov
fnstsw
movsl
pop
sbb
stos
loopne
call
cmp
pop
adc
mov
jo
test
cmp
dec
jae
test
dec
sarl
imulb
imulb
divl
scas
loope
rcl
ljmp
rcrl
std
rcl
jbe
rcll
shll
int3
test
out
shll
lods
cmp
add
std
fwait
add
xor
mov
std
lcall
mov
fidivrs
add
and
outsl
mov
and
mov
mov
cwtl
add
cmp
add
xor
subl
cmp
pop
sub
pop
std
push
iret
loope
cmp
into
out
xor
ljmp
cmp
add
mov
std
out
jno
and
sbb
setle
sar
xor
inc
pop
push
inc
push
int3
mov
nop
out
das
scas
push
scas
inc
in
dec
pop
mov
adc
push
das
into
jge
sti
fldcw
out
popa
mov
mov
outsb
add
sbb
je
adc
cmp
xchg
js
cmc
xchg
jmp
popf
jne
sbb
and
adcb
mov
ljmp
ds
fsts
sbb
xchg
and
insl
or
jo
xchg
and
insb
aaa
xchg
mov
and
add
and
add
mov
jecxz
sbb
stos
pop
sahf
outsl
and
enter
sbb
in
mov
sub
adc
xor
inc
bound
xlat
cs
mov
enter
arpl
xor
push
lcall
cmc
lods
push
sbb
cld
and
adc
stos
cmp
out
call
mov
fnstcw
pop
jmp
cs
inc
and
rdpmc
lods
jp
push
mov
dec
xor
xchg
icebp
mov
in
push
mov
cmc
xor
lcall
xchg
mov
pop
and
mov
pop
icebp
or
pop
icebp
inc
inc
lahf
in
mov
pop
out
das
inc
sbb
sub
fildl
fldcw
xchg
in
pushf
icebp
or
sarl
mov
inc
jb
fs
pop
push
push
fildl
jl
loope
in
fildl
cmpsl
sarb
mov
inc
mov
movsb
dec
pop
repz
add
mov
test
outsb
fcomps
xor
xchg
sub
setbe
ret
cs
and
xchg
xor
aad
sbb
das
scas
arpl
pop
insl
and
fdivl
mov
and
mov
cmp
xor
inc
jne
je
in
lret
sbb
push
jno
jns
and
mov
or
test
pop
std
mov
jmp
sti
pop
loope
gs
jno
sub
push
fnstenv
std
repz
mov
jno
sarb
push
add
bound
xchg
or
cmp
sbb
push
mov
jl
outsb
sbb
leave
popa
icebp
mov
popa
outsl
inc
cmp
in
das
lcall
ret
mov
pop
popf
and
movsl
xchg
out
sub
push
aas
subb
xchg
xchg
in
mov
inc
fwait
add
mov
das
xchg
push
dec
push
bound
jne
fdivr
std
mov
cmpsb
hlt
insb
jbe
adc
pop
add
xchg
adc
bound
test
cld
xor
movsl
arpl
pop
in
add
movsb
stos
fldl
out
fisubrl
jb
pop
lret
or
add
rorl
jg
mov
enter
jb
in
jmp
xchg
push
andl
xorb
sbb
or
inc
and
icebp
xchg
rcr
and
imul
mov
mov
mov
mov
ret
cmp
out
adc
fwait
stos
inc
xchg
sahf
add
movsl
les
rolb
lret
jnp
add
test
adc
xlat
aas
ljmp
xchg
insl
inc
mov
out
insl
pop
jg
loope
jg
popa
cmpl
lock
and
mov
fstl
scas
push
das
jge
das
in
or
push
mov
xlat
push
rcll
xrelease
pop
lea
daa
and
insb
lods
mov
int3
xor
jns
pop
pushf
hlt
sbb
lcall
xlat
fs
pop
loope
push
and
ret
cmc
scas
sbb
das
jl
mov
ljmp
xchg
jl
jno
leave
xor
scas
outsb
jg
push
das
mov
sbb
cmp
outsb
sbb
mov
int
aas
lret
and
and
movsl
outsb
cmp
or
push
filds
std
pushf
xchg
pop
push
outsl
andl
push
aaa
or
push
rcll
out
cmp
and
pusha
jle
lcall
outsb
testb
dec
xor
cmc
mov
cmc
mov
scas
pushw
xchg
jmp
push
dec
add
les
and
or
movsb
das
daa
aam
adc
push
push
pop
test
fnstsw
sub
lahf
dec
les
xchg
fisubl
lret
xchg
inc
lods
pop
mov
pop
sbb
lock
cmpsl
ret
cmp
pop
dec
les
inc
jb
fimull
mov
adcl
jecxz
xorl
rorl
adc
out
out
dec
add
out
pop
lock
mov
subl
arpl
cmc
pop
fwait
ret
std
xor
add
lret
adc
ret
addb
adc
ljmp
push
scas
test
out
mov
ret
addl
mov
shrb
icebp
xchg
pop
xchg
mov
sahf
in
out
sub
or
movsl
rorb
sub
sbb
mov
push
mov
mov
sbb
mov
aaa
xchg
mov
std
imul
sahf
jo
inc
das
ficoml
les
push
sbb
lahf
pop
push
pop
pushf
scas
pusha
mov
sub
and
adc
outsl
ret
in
jno
frstor
push
cmpl
xchg
sti
sub
sbb
testb
pop
shrb
inc
aad
xchg
imul
jmp
fdivs
push
enter
or
inc
mov
call
inc
mov
in
mov
xor
lea
int
aas
cli
test
xchg
call
and
sbb
lcall
sti
outsb
push
mov
iret
das
push
popf
lret
mov
add
pop
mov
pop
icebp
out
bswap
rcrb
or
cld
push
adc
test
fnstenv
cld
sub
adc
mov
ret
or
fcoml
scas
in
into
xchg
std
rep
lcall
out
add
inc
inc
pop
xchg
cmp
cwtl
femms
or
imul
or
stos
cmp
sbb
xchg
dec
fcmovne
fstps
movsb
stos
pop
adc
mov
insb
test
pusha
imul
imul
sub
iret
cmpsl
rcrl
mov
shl
stc
dec
pop
sub
sub
pop
scas
and
mull
jno
out
pop
in
cmpsl
mov
aam
shrb
lods
dec
pop
ret
pop
pop
cmp
bndldx
fs
addr16
scas
and
sbb
shrl
pop
push
xchg
or
push
popf
js
out
ds
jmp
pop
cmp
ret
pop
mov
ret
adcl
lock
pushf
lock
mov
into
and
mov
pop
fnstcw
sbb
jp
ljmp
push
or
outsb
jbe
push
cmp
inc
fimull
inc
out
xchg
pop
test
jnp
fbld
in
scas
aaa
mov
std
cmpsl
xchg
psubsb
movsb
out
sub
jg
sub
push
outsb
ja
xchg
int3
enter
sbb
fs
pushf
xor
nopl
stos
xchg
push
xor
roll
and
xchg
jecxz
pushl
fisubrl
xorb
push
adc
cwtl
arpl
hlt
imul
dec
mov
xchg
adc
js
push
xchg
nop
pop
punpckhbw
or
pop
fcompp
add
ficoms
xor
sbb
jns
mov
push
mov
pop
rcr
mov
imul
sahf
or
dec
cmp
fnsave
mov
dec
inc
fld
loop
idivb
and
and
dec
out
and
lock
jle
mov
scas
cwtl
or
mov
enter
pop
pushf
inc
mov
cld
xchg
push
mov
inc
cmp
ds
rcl
test
iret
arpl
test
aam
inc
cld
sti
std
insb
inc
scas
xchg
iret
fwait
sub
sbb
lahf
cmp
or
ja
insl
push
das
cltd
call
inc
push
adc
ds
xchg
jmp
cld
mov
push
sub
lock
repz
jecxz
testb
push
mov
and
shrb
cli
stos
sbb
pop
fcoms
in
sub
and
pop
cmp
cwtl
mov
lret
decl
daa
lahf
push
push
fnstenv
stc
push
push
divb
lds
loopne
ja
inc
pop
insb
inc
lret
sub
pop
pop
cli
push
push
or
push
scas
inc
imull
pop
add
sbb
iret
insl
adc
fmuls
xor
outsl
test
add
outsl
sarl
jbe
adc
cmp
setne
ja
push
insb
mov
sbbl
pop
sbb
pop
and
pop
cwtl
push
repnz
je
fcomp
lcall
jno
sti
push
pop
and
in
xor
push
in
pop
pop
sub
adc
mov
dec
mov
mov
repnz
adc
jmp
inc
pop
inc
xchg
iret
int
int
jne
scas
jmp
push
xlat
cwtl
dec
and
movsl
ljmp
xchg
mov
push
add
push
xor
dec
out
nop
sub
inc
outsl
push
or
pusha
and
mov
dec
das
in
into
fwait
jb
and
pop
jno
pop
sub
movsb
repnz
sbb
outsl
ss
add
jle
mov
push
outsb
in
lahf
cmpsl
cmp
enter
ds
xchg
and
mov
inc
ljmp
sbb
cmp
mov
imul
add
cmc
mov
rorl
lock
mov
icebp
mov
add
push
adc
sbb
mov
jno
sub
es
or
pop
adcl
fiadds
mov
pusha
aas
dec
leave
mov
jbe
sub
add
pop
lds
je
dec
mov
addl
push
dec
xor
mov
push
cwtl
loope
in
push
and
mov
cmp
sbbl
fstpl
in
faddl
jmp
mov
xor
outsl
jmp
add
in
out
test
outsb
xchg
push
shrb
lea
pop
inc
mov
xchg
mov
daa
in
enter
lea
inc
xchg
pushf
xchg
mov
pusha
cmp
ss
shl
pusha
sbb
sub
jp
push
cmpsb
aaa
sub
les
cmp
jecxz
pop
xchg
cmp
cwtl
xor
jo
xchg
pusha
fxch
std
fwait
add
leave
pop
sti
push
mov
dec
test
add
mov
or
and
jnp
test
outsb
jecxz
scas
dec
xchg
mov
dec
ds
mov
pop
xchg
fdecstp
int
dec
xchg
in
pop
and
shl
and
xchg
cld
inc
out
sbb
inc
mov
ds
shrl
add
add
sbb
testl
es
jnp
popa
cld
mov
mov
push
xor
adc
push
mov
ljmp
cmc
xor
pop
lods
mov
xor
aam
scas
fcompl
lret
mov
xor
xchg
movb
adc
popa
pop
mov
movsl
and
lret
and
push
out
lea
cltd
xor
fstpl
pop
cs
popa
ficoml
xchg
push
pop
xchg
lret
xchg
cld
scas
mov
filds
mov
push
imul
add
out
repnz
sarl
lcall
pop
cli
or
jno
clc
pop
imull
out
fimull
adc
lea
jno
outsb
and
adc
xor
jbe
xor
test
jae
iret
sahf
lahf
popa
pop
mov
xor
mov
or
scas
lock
and
movsl
xchg
cmp
sahf
push
pushf
loope
sbb
lea
mov
pop
outsb
lret
pop
xchg
push
rclb
sbb
and
scas
cmp
divb
push
in
test
addr16
cmp
mov
ljmp
xchg
xchg
xchg
sbb
pusha
mov
xchg
fwait
test
adc
pushf
imul
cs
cmc
lock
pop
in
mov
adc
and
fcomp
and
iret
push
arpl
jl
lahf
lret
ret
xchg
fwait
call
xchg
sbb
jmp
mov
and
xchg
sar
nop
add
inc
imul
into
js
xchg
inc
and
dec
outsl
mov
cs
outsl
jge
push
aad
das
and
or
xchg
aas
lods
xchg
out
imul
mov
jb
loopne
sub
dec
loope
dec
imull
daa
les
fwait
icebp
jae
sbb
push
cmp
fstpl
popf
lret
sbb
std
enter
addr16
popf
xchg
xchg
or
aas
push
mov
psubb
adc
jb
lret
sahf
push
movsb
popf
dec
mov
xchg
fldl
fsubs
mov
xchg
test
sbb
jmp
ja
inc
cld
xchg
inc
mov
pop
imul
inc
test
pop
sbb
rcrl
movsl
loope
repnz
mov
movsb
fsub
jae
add
push
push
movsb
sbb
out
pop
mov
roll
cs
mov
sbb
sti
movsb
faddl
and
xor
scas
insb
cmpsl
popf
and
inc
scas
pop
mov
adc
push
xchg
les
test
sub
xchg
jge
xor
xchg
fisttpl
xchg
scas
inc
ss
push
xlat
xchg
movsb
xchg
les
fnstsw
aaa
mov
or
ss
ja
add
push
push
adc
mov
inc
js
pop
mov
xlat
outsl
outsb
scas
addr16
and
das
push
xor
xchg
inc
loopne
sub
insl
mov
dec
xor
adc
push
mov
sbb
jb
mov
aaa
sti
mov
iret
push
add
testb
outsb
pop
mov
or
iret
jp
mov
pop
mov
cmc
fsubs
arpl
mov
mov
test
and
in
jno
das
pop
xchg
insb
sbb
adc
inc
sub
jp
xchg
xchg
push
subl
xchg
shlb
jno
and
xor
jno
addr16
mov
cmpsb
xbegin
in
jno
push
mov
dec
subl
test
std
shl
push
sbb
dec
aad
fwait
out
sub
out
int3
xor
cltd
lret
in
fdiv
fwait
pop
lahf
lds
cmp
jge
cmp
jbe
add
jns
mov
stos
insl
pop
sbb
push
xchg
scas
adc
lret
mov
cwtl
xchg
push
icebp
lcall
dec
roll
das
add
filds
or
sbb
mov
std
jge
scas
sbbb
inc
fsubrl
pop
lock
imul
mov
adc
inc
dec
mov
cli
mov
ficoml
dec
popf
stos
lods
or
xchg
lock
or
shlb
pop
movsl
aas
addr16
daa
xchg
pop
out
cmpsb
fsubs
cwtl
or
xchg
cmp
push
pushf
movsl
arpl
addr16
pushf
jge
xchg
andb
icebp
shll
not
xor
sbb
add
push
les
or
xor
testl
and
imul
mov
outsl
fwait
mov
paddw
outsl
push
jnp
pushf
jno
xorl
pop
push
push
leave
cmp
pop
nop
fsts
sub
ficompl
out
test
fildl
jg
call
mov
jg
or
ljmp
adc
pop
jno
ficomps
pushf
inc
pop
inc
cmpsb
or
sbb
scas
cmp
jge
jno
aaa
repnz
aad
shl
cld
and
and
cs
aaa
std
mov
scas
adc
or
cmp
pusha
mov
das
jb
adc
cmp
and
sbb
inc
pop
add
sarb
imulb
xchg
mov
outsb
dec
mov
sbb
mov
sbb
pop
mov
mov
nop
std
sbb
or
sbb
das
mov
adc
into
and
ja
aad
push
lea
push
sarb
cmp
cmp
mov
jg
sbb
sub
jno
sar
cwtl
mov
mov
popf
cld
push
mov
cmp
insl
adc
mov
fadds
xchg
outsl
inc
mov
add
addr16
xor
scas
pop
shl
es
daa
out
xor
jg
iret
mov
cltd
pop
scas
mov
mov
jmp
push
cmpsl
aas
xchg
add
nop
loop
fidivrl
out
sub
dec
xchg
mov
test
sbb
or
mov
or
fwait
je
xchg
mov
xchg
push
mov
mov
jae
fbld
outsl
push
ss
std
sbb
cld
jo
xchg
pop
cmp
out
cli
jno
stos
cmp
lahf
inc
sarb
pop
movl
dec
cltd
sti
cmpsb
jg
mov
fwait
in
neg
xlat
aaa
pop
cli
sbb
pushf
pop
lea
sbb
push
jl
push
pop
pop
xchg
dec
lret
movsb
xor
ret
outsl
std
sbb
sti
ds
adc
sbb
push
xchg
andb
mov
mov
shrl
mov
cmp
stos
mov
aaa
adc
pop
mov
xchg
cld
into
xchg
xlat
sbb
xchg
aas
mov
mov
push
cs
pop
adc
xchg
cmp
mov
dec
movsb
out
adc
jg
and
pop
sub
fisttpl
iret
cltd
lret
mov
mov
pushf
sahf
outsb
sbb
cli
pop
adc
xor
push
pushf
jno
sub
mov
pop
push
das
jg
es
push
mov
xchg
push
nop
sbb
or
adc
fnstenv
or
sbbl
jo
jo,pn
popa
bound
jle
push
mov
dec
in
mov
mov
outsb
xchg
jo
iret
adc
lods
das
jne
push
or
rep
fwait
pop
cmp
fs
lret
adc
mov
inc
push
test
andb
scas
cltd
fstpl
int
cltd
icebp
js
and
icebp
insb
sahf
and
shrb
icebp
adc
daa
fucom
femms
mov
int3
mov
pop
and
loop
add
ficoms
inc
stc
add
enter
insl
push
cmpb
dec
mov
adc
mov
xor
das
jne
push
xbegin
add
jl
xchg
aaa
mov
arpl
iret
dec
pop
push
sbb
lahf
sub
sbb
lahf
imul
xchg
sub
lods
sbb
add
cli
lds
mov
cmp
roll
xor
xlat
lock
cmpsb
andb
cli
or
sub
add
add
je
int
cli
mov
es
push
fbstp
inc
aaa
repz
pop
fdivs
xchg
lods
sub
scas
shrb
or
mov
je
fisubrs
insl
or
lock
xor
xchg
sub
or
sbb
mov
fsub
dec
rcrb
pop
cwtl
fisttps
popf
pop
lcall
inc
jg
pop
xchg
scas
push
pusha
std
cmp
sbb
test
xor
jg
or
or
out
movsl
fisubl
adc
shlb
std
cli
mov
jp
mov
pop
jno
scas
mov
imul
rcrb
sti
mov
fwait
lock
pushf
int
pusha
mov
sub
xor
cs
inc
aaa
xchg
rcr
mov
out
addr16
stc
mov
imul
xor
mov
cmp
jecxz
push
push
std
and
hlt
inc
dec
push
imul
add
cmpsl
sub
xchg
sub
push
cmp
ja
dec
popf
shl
and
push
lea
xchg
rcrb
imul
adc
xchg
pop
xlat
ja
pushf
push
std
movsl
dec
add
pop
nop
iret
movsb
loop
pop
sbb
add
sbb
add
leave
or
mov
sti
jp
sbb
pop
popf
xchg
cmp
cmp
imul
bound
jg
and
outsb
push
sbbl
scas
sbb
cmpsl
loope
lcall
adc
cld
leave
inc
sub
inc
insb
pop
test
mov
lock
int3
int
cmpsb
int
inc
inc
loopne
mov
pop
xchg
cmp
sbb
jnp
ljmp
cld
scas
sbb
inc
inc
das
mov
cmp
sbb
mov
jp
popf
or
sbb
sbb
cltd
andb
fmull
xchg
mov
das
adc
int3
std
sbb
and
mov
xchg
mov
das
mov
inc
mov
bound
and
xor
pushf
loope
iret
lcall
movsb
mov
stos
mov
lcall
cmp
data16
das
mov
sahf
mov
std
xor
negb
ja
shlb
push
xchg
lock
cmp
and
pop
pop
orl
in
outsb
xchg
or
mov
xor
mov
pop
popf
cmpl
mov
out
fwait
scas
sub
sbb
in
ja
aam
popf
cmp
testl
add
insl
ja
aad
call
sbb
shrl
mov
mov
add
add
fnsave
mov
xchg
lock
jno
cmp
sahf
loopne
sbb
mov
push
jle
scas
mov
add
inc
push
jp
popf
in
dec
inc
sub
adc
ss
sub
mov
ss
jp
mov
mov
dec
stos
dec
xchg
sbb
sbb
cmp
sub
jno
mov
and
loope
mov
scas
mov
adc
cmp
int3
or
outsb
test
dec
adc
mov
mov
movsb
and
imul
imulb
adc
lock
jo
adc
cpuid
fcmovnu
jecxz
ja
pushf
sbb
lods
out
push
xor
sbb
mov
insl
push
rcrl
xchg
iret
push
gs
sub
sbb
outsb
xchg
scas
shr
out
hlt
or
push
fmuls
xchg
es
sub
adc
adc
lret
xchg
mov
out
add
negl
clc
push
jge
jbe
jnp
addb
mov
jg
adc
adc
lahf
jno
cltd
jnp
sub
or
cltd
repz
mov
subb
icebp
adc
mov
bound
pop
dec
sub
mov
std
cwtl
or
int
push
mov
scas
xor
popa
cmp
fldt
bound
pop
test
sbb
fistps
std
nop
pop
hlt
xor
jnp
xchg
sti
dec
pop
shlb
jo
stos
icebp
lcall
aam
les
rcr
repnz
sub
or
xor
rorb
jb
movsl
rolb
sbb
jo
mov
cwtl
dec
mov
jnp
add
rcll
and
addr16
pop
pusha
lcall
popf
push
lcall
xor
jbe
mov
mov
loop
sbb
rcr
int
push
mov
fcmove
test
xchg
lahf
ret
fisttpll
inc
mov
xor
or
lock
jp
subl
mov
lahf
repz
or
pushf
std
cltd
negl
das
sub
cmp
sbb
or
out
and
mov
dec
adc
fldl
scas
shlb
lock
lcall
sbb
stos
pop
std
iret
outsl
pop
insb
movsb
mov
loope
sti
xchg
cmp
add
outsb
xor
in
mov
iret
sti
out
mov
popf
and
jns
ja
ffree
pop
sub
repz
mov
push
jle
jmp
and
or
cmp
fstl
leave
push
and
std
cmp
sti
or
insl
push
lock
fwait
lret
jge
xlat
jbe
pop
scas
leave
sbb
pop
fnstenv
out
pop
std
aas
aaa
pop
or
inc
mov
mov
and
adc
pop
cmc
punpckldq
sbb
xchg
cld
inc
xchg
xor
inc
pop
or
xor
adc
scas
mov
xor
pop
mov
xor
and
inc
out
jmp
imul
xor
pushf
xchg
sbb
out
shrl
pushf
jl
mov
xchg
or
and
lret
mov
mov
cld
stc
push
push
mov
or
mov
mov
int
add
and
loop
call
and
in
jle
std
loope
mov
adc
es
xlat
pusha
pop
ficompl
or
and
stc
sbb
in
xorl
sub
sbb
adc
es
fldcw
mov
shl
or
push
and
std
cmp
loope
out
xchg
push
test
in
out
xor
adc
jl
cwtl
fidivrl
cmp
repnz
sub
inc
das
dec
or
lret
jle
pop
mov
flds
subl
das
icebp
leave
sub
push
loopne
sar
leave
sub
or
fsubs
jg
mov
scas
test
pop
fcos
sbb
enter
fcmovu
pop
clc
lcall
fisttpl
cmpsl
cs
imul
hlt
xor
xor
sub
std
lahf
das
adc
rcll
jmp
arpl
mov
mov
fcmovnbe
cmc
out
dec
sbb
xor
imul
sbbb
pop
and
mov
push
push
leave
mov
int3
sbbb
mov
incl
andl
push
and
mov
jnp
mov
pop
dec
xlat
add
or
mov
push
gs
ffree
pop
adc
lea
pop
call
cld
mov
fcmovu
sbb
or
test
xchg
cmp
mov
inc
shrl
pop
fxch
fisttpl
mov
push
ficompl
add
into
std
lods
push
icebp
xchg
xor
inc
outsl
out
push
clc
repz
sbb
and
sbbb
and
cmp
sbb
xor
mov
arpl
ret
xor
and
in
add
pop
stos
or
cltd
or
xor
rclb
adcb
aam
xchg
fstpt
inc
push
push
and
sub
popf
and
jae
adc
fldcw
pop
pop
jmp
or
rcr
sub
int3
xor
add
xchg
mov
ficompl
or
pushf
or
cmc
dec
rclb
movsl
or
mov
push
mov
inc
das
stos
aad
scas
mov
scas
push
adc
in
and
aad
jo
jo
and
push
jae
xchg
inc
outsl
cmp
and
popa
xor
mov
decb
scas
add
stos
scas
xchg
enter
test
mov
push
stos
mov
pop
mov
out
sub
jae
pop
movsl
popf
sbb
adc
xor
loope
xor
cli
mov
movsl
cmp
or
lcall
mov
movsb
outsl
jae
or
xor
lods
add
jbe
lods
pushf
loopne
jmp
loopne
es
je
enter
loopne
sar
jae
outsl
adc
movsb
outsl
jae
dec
cmp
out
pop
scas
outsl
adc
and
add
jl
outsb
pop
dec
cmc
mov
out
scas
sbb
sbb
movsl
push
lcall
add
xchg
cmp
pop
mov
cmc
add
psrld
fwait
sbb
fwait
das
push
adc
mov
jb
out
inc
push
push
lock
rolb
and
xor
sub
bound
xlat
inc
mov
add
stc
fisttps
call
icebp
xchg
cmp
in
jo
cs
cmc
aas
push
inc
mov
jge
mov
sahf
cmp
stos
push
outsb
or
cs
cmp
lahf
repz
adc
push
jge
fwait
pop
mov
xchg
push
out
xchg
push
xor
jno
xchg
lret
das
movq
jge
ret
cmp
orl
lock
push
cmp
je
sub
add
pop
mov
mov
fwait
jnp
sbb
jno
xchg
js
jae
cmp
jne
lcall
add
hlt
sti
shll
fstpl
or
sbb
nop
xchg
pop
jecxz
dec
push
adc
mov
dec
mov
jns
stc
mov
adc
adc
jl
inc
lret
leave
mov
aaa
or
and
add
jbe
arpl
test
mov
mov
jmp
xchg
mov
fnsave
pop
xor
cmp
in
shrb
sub
sbb
and
jb
sbb
push
jns
lods
scas
adc
dec
into
fcmovnb
and
in
fdivrs
call
mov
cmp
jmp
mov
jl
mov
sbb
cld
xchg
into
sub
sbb
outsb
xchg
dec
mov
shll
mov
sub
mov
pop
jno
cmp
cmovs
adc
nop
pop
andl
xlat
xchg
jb
pop
jno
inc
push
in
adc
adc
mov
int3
outsl
movsb
cltd
pop
mov
and
divl
sbb
cmc
imul
les
pop
push
push
mov
cmp
addl
sbbl
xchg
sub
fwait
mov
lret
mov
pop
int3
sahf
or
adc
xchg
cld
in
jp
mov
cwtl
jle
jne
clc
xchg
cmp
xchg
adc
inc
lcall
scas
outsb
mov
xor
cmp
pop
jno
in
push
cmp
negl
out
inc
xor
lcall
mov
imul
aas
mov
rcr
lods
loope
mov
outsl
xchg
gs
cmpsb
jo
sbb
movsb
sbb
jae
lahf
fidivl
inc
ljmp
push
popa
mov
pusha
push
and
movsl
inc
shrb
shrl
cltd
repnz
movsb
sbb
mov
add
pop
fdivl
nop
mov
negl
int
mov
cli
fwait
push
ljmp
adc
out
enter
cltd
pop
xor
pop
mov
cmp
cmp
dec
add
into
imul
adc
outsb
cld
lds
cmp
imul
push
pop
sarb
sarb
jl
sahf
enter
push
jae
cmp
and
adc
mov
push
icebp
mov
or
jb
fsubrs
or
movsb
mov
jge
mov
xchg
cmp
adc
mov
lea
xchg
dec
in
xchg
inc
testl
jge
mov
pushf
and
outsl
xchg
mov
stos
push
mov
ja
gs
dec
mov
add
jg
or
pushf
adcl
mov
fs
lock
sbb
aaa
sub
mov
cltd
xchg
pop
lock
sbb
mov
xlat
push
xchg
dec
fidivs
outsb
mov
sub
leave
jge
ja
xor
inc
pop
in
xor
xchg
add
add
push
scas
fnstcw
cmp
ud1
pusha
ja
test
outsb
mov
jl
mov
pop
push
dec
repnz
fcomi
cs
adc
push
jp
jno
mov
dec
aam
or
scas
cmc
adc
pop
xchg
mov
xchg
jmp
cmp
jnp
inc
or
popf
lock
rorl
sti
fstps
lea
add
xchg
jae
sbb
jp
int3
cld
insl
jp
cld
mov
mov
and
out
cld
mov
dec
cmp
push
iret
pop
jo
dec
xor
inc
mov
sbb
call
loope
scas
ljmp
adc
stos
scas
and
mov
sbb
cltd
mov
sub
sbb
add
inc
js
out
pop
aad
sub
push
mov
movsl
jne
cli
ret
fwait
pusha
decl
fcomi
bound
sub
and
outsl
scas
shlb
fistps
sbb
mov
lock
outsb
mov
jns
outsl
xor
enter
xchg
das
pop
jp
aaa
int
mov
dec
or
mull
iret
xchg
lock
test
and
lock
and
into
dec
adc
adc
pop
or
jne
push
pop
jno
in
aas
insl
mov
jno
add
mov
rcrb
mov
scas
jge
sub
cs
pushf
sub
arpl
dec
outsb
push
jp
outsb
sub
dec
pop
in
xchg
fcoml
sarb
outsl
out
mov
js
rclb
sub
fadds
test
test
xorl
cmp
sub
fwait
mov
xor
scas
xchg
jge
scas
popa
nop
adc
dec
adc
fstpl
popf
pop
push
bound
mov
outsb
and
mov
data16
and
push
pop
pusha
fisubrs
rcl
orl
ss
xchg
cmp
lret
push
fisubrs
dec
cmpxchg
dec
pop
in
mov
cmp
loopne
loopne
inc
push
inc
inc
rolb
lret
inc
test
mov
lea
rolb
xchg
cs
sti
lcall
mov
pop
test
sarl
test
ret
push
or
xchg
and
pop
jge
xchg
insl
cli
push
in
mov
cmp
dec
test
adc
pop
inc
rcll
outsb
mov
mov
cmpsb
pop
jecxz
mov
lock
dec
mov
cmp
jecxz
mov
dec
sbb
test
cltd
ds
mov
cmp
cmp
rcl
xchg
xor
sub
cli
jge
iret
gs
cmpsb
xor
xchg
cs
ficoml
lcall
mov
leave
cmpsb
adc
pop
cmp
pop
inc
and
cld
adc
mov
or
mov
lea
xchg
xor
push
les
push
outsb
pop
mov
popf
std
mov
outsb
pop
pusha
lock
jnp
push
cs
cmpb
sahf
push
pushf
or
mov
mov
lea
cmp
adc
imul
push
rep
sbb
push
pop
cmp
into
in
fnstcw
pop
and
push
mov
je,pn
fisubrs
jbe
sbb
out
xchg
nop
mov
pop
ljmp
ja
dec
outsb
cs
pop
out
sbb
pop
subb
lret
cltd
add
loopne
repnz
pop
insb
inc
stos
negl
js
pop
repz
stos
pushf
jae
inc
mov
mov
adc
sahf
jecxz
ljmp
je
arpl
cwtl
xlat
mov
repnz
ljmp
jmp
call
aad
roll
push
imul
jns
fdivs
imul
sbb
outsb
or
lahf
mov
mov
les
dec
cmp
sbb
std
push
xchg
sahf
aam
mov
shll
mov
sub
mov
in
add
mov
jecxz
std
dec
aad
jno
inc
push
mov
loopne
mov
std
and
sub
insl
inc
loopne
movsl
pushl
mov
jmp
xchg
push
xor
dec
add
arpl
xchg
mov
mov
lock
ss
xlat
sbb
pop
shl
sbb
iret
insb
cmpsb
addr16
jne
mov
outsl
out
loop
movsb
push
out
out
out
out
dec
fwait
mov
push
add
into
pop
lahf
sbb
push
imul
xor
lcall
jge
pop
or
mov
stc
adc
jno
xchg
xlat
cmp
fdivs
es
mov
xchg
shrb
repz
in
mov
jnp
mov
adc
pop
adc
inc
shrb
outsb
das
sbb
rcrl
add
sub
lcall
lret
fdivrl
and
xor
mov
and
mov
scas
mov
jg
xchg
and
cmp
sbb
popf
xchg
into
lret
xor
sub
jg
out
mov
xlat
test
xchg
movsl
mov
or
cmc
lds
cmp
mov
fnstenv
inc
fstps
adc
cs
dec
xlat
mov
rcl
rolb
iret
inc
adc
or
cmpsl
push
add
lds
fwait
mov
out
sub
or
mov
scas
stos
sbb
sbb
or
add
add
mov
repz
fwait
mov
mov
jmp
xchg
scas
and
mov
ja
mov
sbb
add
mov
popf
movsb
xor
cltd
xchg
inc
and
cwtl
std
sti
setp
sbb
add
jb
out
or
dec
cmp
sar
movsb
jp
and
mov
mov
popf
movsb
xor
pop
cwtl
std
jecxz
lcall
cmp
inc
setb
jns
or
mov
aad
sbb
mov
mov
jns
sahf
mov
popf
mov
inc
and
movsb
std
mov
sbb
and
pushf
icebp
jnp
scas
mov
popf
mov
cmp
mov
js
or
shld
fisttpll
das
test
sahf
xor
sbb
mov
inc
xor
mov
fstpl
das
xchg
and
fldenv
setb
fisubrs
cmp
mov
xor
movsl
sbb
fisttpll
das
ret
and
fdecstp
mov
add
xchg
pusha
repz
cwtl
mov
fstpl
das
mov
sbb
xchg
repnz
cmp
mov
xor
movsl
sbb
fisttpll
das
mov
sbb
mov
movsl
xor
mov
fstpl
das
cwtl
and
flds
push
mov
cmc
jae
nop
sarl
xor
mov
fstpl
das
inc
and
flds
mov
add
lcall
das
mov
rorb
mov
xor
mov
fstpl
das
mull
mov
fstps
cwtl
add
lcall
sti
sbb
loopne
cmpsb
in
test
pop
fdivrl
ds
push
lret
mov
xor
ss
scas
cmp
idivl
jns
scas
push
adc
dec
mov
das
xor
stc
xor
jmp
das
sub
stc
sub
mov
call
mov
sub
mov
inc
mov
add
inc
mov
clc
mov
cmp
push
mov
push
mov
pushf
ss
sti
pushf
cmp
std
pushf
cmp
pop
dec
pop
repz
xor
pop
xor
pop
jmp
iret
sub
in
iret
sub
iret
add
ds
add
mov
xchg
xchg
daa
mov
clc
sahf
ja
or
movsb
int3
mov
xchg
mov
xchg
cli
jb
fiaddl
jp
xchg
repnz
xor
hlt
push
xor
out
es
call
cld
cmp
jl
xor
scas
repz
xor
cmp
and
fdivrs
cmp
lods
mov
mov
or
pop
outsl
stos
lods
loopne
and
sbb
sub
mov
adc
and
pop
cmp
pop
pusha
and
pop
xor
aas
or
sbb
push
stc
xchg
mov
push
pop
divb
out
cmp
clc
jbe
lahf
cmp
adc
jo
int3
ja
adc
icebp
cltd
rol
or
xchg
sbb
mov
adc
scas
shll
lcall
lock
push
fistl
clc
aam
xor
jmp
addb
out
ss
int3
cltd
loope
pop
mov
pop
jmp
in
loope
pop
sbb
pop
fmul
sbb
in
gs
pop
insl
mov
lcall
outsl
pop
cltd
or
and
clc
or
mov
insb
sahf
das
scas
dec
icebp
mov
addr16
mov
and
mov
dec
mov
sbb
mov
ja
xchg
fyl2xp1
cmpsl
push
ret
iret
lods
jle
pop
icebp
out
and
mov
or
mov
mov
ja
adc
dec
mov
pushf
adc
adc
cmp
mov
repnz
or
sarl
mov
repnz
or
imul
inc
dec
or
sarl
mov
repnz
or
mov
rorb
dec
jns
cmp
mov
repnz
or
rcrl
dec
or
sarl
mov
repnz
or
sarl
mov
mov
cmp
mov
repnz
or
sarl
mov
jns
cmp
mov
repnz
or
sarl
mov
repnz
or
xor
repnz
or
sarl
mov
repnz
adc
xchg
xor
jno
cs
das
subb
mov
mov
popf
xchg
mov
add
lea
cvtps2pd
mov
fldenv
or
inc
or
cltd
pusha
repz
fwait
mov
fstpl
mov
scas
inc
sti
cmp
sti
aas
xchg
mov
jge
push
mov
mov
cmp
lea
repz
lahf
mov
frstor
das
in
movsl
xor
sbb
cltd
mov
popf
inc
and
scas
std
cmp
add
xchg
xchg
std
jae
outsb
xchg
mov
sbb
xor
mov
fisttpll
das
add
mov
mov
add
cltd
pusha
repz
fwait
mov
fstpl
das
push
sub
mov
inc
and
xchg
cmp
mov
mov
lahf
das
and
mov
add
cltd
pusha
repz
fwait
mov
fstpl
das
pop
sub
push
sarb
das
rorb
inc
fstpl
mov
add
mov
popf
mov
inc
and
xchg
std
cltd
fisubrl
addb
icebp
mov
popf
scas
xor
cmp
inc
in
xchg
repnz
movsl
sbb
fisttpll
mov
cmp
cmpsl
and
mov
add
xor
mov
fstpl
das
push
sub
fcoms
mov
repz
int
or
mov
pop
mov
cmp
lea
sbb
and
mov
mov
popf
xchg
xor
cltd
cltd
inc
and
fwait
push
aas
popf
pusha
repz
scas
mov
cmp
dec
xchg
xor
int
or
mov
pop
mov
jnp
lea
sbb
and
mov
into
outsb
out
cmp
int
loopne
cmp
std
int
loopne
push
sbb
loope
xor
xor
out
sbb
jmp
sbb
incl
add
leave
adc
adc
adc
adc
adc
adc
add
inc
adc
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
lock
repnz
int
loopne
out
test
adcl
xrelease
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
testl
repz
xchg
cld
adc
xchg
mov
xchg
or
xor
out
es
call
pushf
sub
insb
inc
out
inc
iret
insb
xchg
and
xor
xchg
adc
shlb
cmp
fcoml
fwait
je
sbb
movsb
pushf
or
scas
cmp
les
sti
mov
js
xor
mov
sub
aad
rclb
loopne
nop
movsl
setns
out
fwait
mov
dec
scas
lods
mov
sbb
inc
and
jmp
pop
mov
leave
add
mov
fwait
adc
sub
adc
lahf
or
fwait
add
or
imul
test
xor
pusha
int3
pop
test
outsb
pop
addb
negb
scas
mov
jmp
add
fistps
inc
inc
test
inc
fs
pop
adc
out
cltd
lods
insl
repz
sub
mov
ret
dec
lcall
lret
out
insl
fidivrs
lds
pop
jo
push
jecxz
dec
gs
adc
jge
js
fnstsw
imul
pop
sub
sbb
sbb
inc
sbb
fwait
icebp
mov
pop
pop
or
lahf
fldenv
das
mov
dec
xor
mov
shlb
out
inc
pop
xor
mov
shrb
jge
xchg
cltd
mov
dec
pushf
and
fcomip
sub
xchg
test
dec
mov
adc
jl
addr16
das
or
dec
mov
mov
or
or
mov
pop
mov
jl
scas
addr16
das
movsl
xchg
mov
mov
fstpl
movsl
out
xchg
popf
cltd
sbb
jns
add
aad
jmp
repnz
or
sarl
mov
repnz
mov
jmp
rclb
dec
jns
cmp
mov
repnz
or
rol
lea
repnz
or
sarl
mov
repnz
or
sarl
hlt
dec
and
sarl
mov
repnz
or
sarl
mov
lret
cmp
mov
repnz
or
sarl
mov
repnz
xor
rclb
dec
jns
repz
imul
sbb
imul
sub
push
sbb
cmp
sbb
mov
pop
jno
mov
sti
adc
scas
jo
ret
lock
fadds
testb
call
push
push
cmp
pop
pusha
or
movsb
ror
les
pop
lods
add
int3
mov
mov
lcall
js
push
sub
mov
or
je
rep
sbb
jb
loope
adc
mov
cs
imul
sti
xchg
mov
mov
or
pop
sbb
add
lea
or
fcmovne
sbb
ss
es
cmpl
scas
fsubl
mov
push
and
cltd
lcall
mov
outsb
mov
mulb
push
in
jl
lret
adc
adc
frstor
stc
lds
loopne
cmpl
pop
push
xchg
adc
sbb
push
mov
adc
mov
ficoml
mov
insl
pop
shrl
adc
dec
ja
cmp
cmp
xchg
cmp
push
pusha
fwait
enter
sahf
mov
mov
jmp
jno
lds
adc
aad
jg
shlb
inc
outsb
test
sbb
popf
movsb
je
testl
sbb
pop
or
flds
xlat
pop
dec
mov
mov
dec
mov
adc
xchg
mov
mov
push
and
loopne
jno
xchg
sbb
enter
icebp
fstl
popf
add
scas
sti
aas
cmc
sahf
inc
aam
loopne
mov
sub
add
mov
push
in
repnz
lods
pop
ss
fdivrl
dec
addl
inc
or
push
pop
lret
sahf
dec
and
nop
cld
fwait
xchg
add
mov
les
loopne
fldt
scas
jae
cld
outsb
mov
mov
and
dec
fistpll
es
push
push
arpl
rep
mov
dec
add
jbe
das
mov
sbb
int
and
push
movsb
cwtl
cwtl
pop
xor
pop
imul
cmpsb
or
adc
sub
mov
adc
shlb
aad
cs
cmpb
jmp
mov
scas
aaa
dec
insl
xchg
xor
popa
sub
cs
fwait
push
lcall
cltd
jmp
ret
js
or
inc
add
mov
mov
adc
in
mov
mov
mov
loop
push
xchg
jne
sbb
and
fs
mov
fs
xorb
out
ret
sti
cmc
dec
sub
scas
int
xchg
mov
or
inc
imul
rcrl
out
add
jmp
sarb
mov
divl
adc
xlat
mov
in
inc
shlb
loopne
addl
lea
popf
xchg
jle
jge
lds
cmp
jbe
xchg
fucomi
xchg
cld
sbb
mov
das
enter
daa
sbb
movsb
push
adc
cmp
push
or
in
push
dec
sbb
sbb
cmp
repnz
daa
icebp
pop
lcall
dec
popa
xor
les
and
jo
jae
mov
fldz
and
mov
sbb
pop
cwtl
call
mov
fistpl
loop
cmpsb
in
test
pop
ret
fld
xchg
push
push
mov
cs
push
jl
and
iret
adc
out
and
xchg
lahf
cmp
mov
mov
cmp
loopne
ret
aas
pop
lret
stc
adc
in
sbb
sbb
ret
mov
xchg
mov
and
movsl
adc
fstl
dec
xchg
movsl
mov
cmpsl
sbb
dec
sbb
or
lods
test
shrb
jl
in
jge
movsb
mov
push
mov
jo
ror
xchg
xchg
sub
and
stc
sbb
mov
scas
or
xchg
sbb
std
icebp
dec
sbb
test
int3
addb
xor
std
add
xchg
mov
outsl
movsl
loopne
lods
xchg
mov
cmp
sbb
mov
jle
jb
mov
scas
mov
lcall
sbb
sbb
movsb
sarl
pop
adc
sbb
shll
movsl
push
mov
pop
or
push
and
or
xchg
hlt
movsl
xor
sahf
out
fisubrl
lcall
adc
outsl
cwtl
scas
mov
adc
and
pop
adc
les
loopne
mov
in
lds
pop
daa
mov
fsub
les
jne
scas
lods
add
lock
adc
shll
jg
loope
out
subl
inc
add
xchg
fnstenv
addb
movsl
push
pop
or
sarb
pop
lds
in
add
iret
ret
in
ret
push
lea
sbb
and
imull
push
lcall
sub
ds
out
sbb
mov
pusha
pop
push
push
sub
sbb
and
pop
mov
xor
xlat
sbb
outsl
push
in
fildll
sahf
jecxz
repnz
cmpl
xchg
xchg
icebp
sbb
xchg
fstl
xor
jle
scas
or
outsl
std
mov
sbb
into
dec
jg
or
inc
das
jp
fadds
sbb
mov
inc
mov
addl
call
jle
xchg
in
fnsave
arpl
fbstp
mov
fwait
adc
into
mov
dec
fdivrl
pop
and
mov
mov
adcb
push
jle
sbb
outsb
mov
xor
loop
dec
jge
jge
xchg
pop
ja
stos
ret
mov
adc
sbb
out
loopne
xchg
gs
jge
mov
and
inc
pop
xchg
mov
int
scas
cmc
cmp
into
les
adc
ficoml
fstpt
cmpl
adc
mov
adc
insb
std
popa
jecxz
xor
adc
jecxz
rcll
sbb
xchg
pop
xchg
jl
das
pop
jo
icebp
cmp
or
mov
arpl
rcll
repz
jno
popa
inc
notb
rclb
or
jbe
or
sbb
mov
inc
mov
outsb
movsl
fldcw
lea
jp
lock
aas
inc
mov
pop
mov
inc
es
imul
sti
bound
push
dec
mov
out
pop
fidivrs
sti
stc
icebp
rolb
js
pop
popa
aaa
add
and
stc
cmp
xor
inc
sbb
popf
or
stos
or
mov
cld
mov
loopne
fcomps
in
mov
inc
lock
mov
fisttps
push
add
dec
scas
popf
jp
mov
mov
popf
mov
dec
push
iret
stos
sbb
fdivrl
fisubrs
mov
push
movsl
sbb
movsb
cmp
mov
or
or
add
dec
mov
sbb
shrb
xchg
loope
dec
adc
jmp
frstor
sbb
or
sti
or
shll
adc
mov
fwait
mov
push
jmp
call
and
movsl
mov
das
scas
sbb
js
mov
jge
in
pop
mov
arpl
fnstsw
les
inc
imul
jo
inc
stos
push
pop
mov
repz
dec
lahf
mov
mov
cmp
cmp
mov
call
lcall
lcall
out
mov
sbb
mov
ja
sti
cmp
add
bt
sarl
cltd
cltd
bnd
pop
repz
cs
orl
ja
cmp
cmp
rcl
xor
in
ret
push
sub
outsb
jnp
stos
or
ret
mov
mov
sbb
int3
shrl
sub
int3
shll
arpl
das
fisubrl
jecxz
cmpsb
mov
enter
cmpsl
dec
xchg
adc
sbbl
arpl
xchg
sub
popa
push
jne
std
sub
mov
enter
jbe
push
ret
inc
mov
dec
aad
jno
mov
push
pop
jno
fldl
ljmp
js
fnstsw
je
pop
sbb
push
mov
dec
imul
cmc
testl
xor
mov
stos
stc
dec
rcll
mov
addb
fistps
aam
test
add
insl
frstor
pop
lock
ret
push
cmpsl
stos
inc
push
sahf
push
lea
mov
insb
in
sub
fisttps
or
addr16
pop
loop
sbb
jecxz
xor
loope
adc
cwtl
dec
rclb
stos
adc
aaa
mov
arpl
jb
mov
jo
lcall
adc
pop
pop
sub
iret
scas
repnz
sti
xor
dec
xchg
ss
fcoms
test
repnz
or
push
sbb
js
test
movsb
test
movsl
pop
lods
xchg
push
or
into
mov
nop
fistpl
mov
repnz
lcall
enter
cmp
clc
xchg
std
cmpsl
fiadds
cmp
frstor
push
and
push
xchg
pusha
sbb
insl
or
jl
or
adc
ja
mov
aaa
fwait
dec
test
push
cli
cli
arpl
imulb
mov
mov
lahf
inc
lret
xor
xchg
add
fmuls
push
jmp
icebp
and
aaa
xchg
and
hlt
inc
out
shll
sbb
cmp
imul
in
shrl
xchg
mov
stos
dec
pop
clc
fcomi
pop
xchg
fs
inc
adc
out
mov
pop
mov
fstl
push
add
movsb
cmp
push
mov
orb
fldt
lock
xchg
test
lds
xchg
adc
sbb
xchg
add
rol
or
jno
dec
stos
push
aaa
inc
cwtl
push
dec
fstpl
mov
imull
arpl
mov
mov
fbld
sbbb
or
popf
mov
add
ror
ja
push
and
add
outsb
xchg
imul
inc
dec
sbb
shll
push
add
rorb
js
das
ja
xlat
test
les
dec
xor
jp
pushf
jp
loope
mov
int
cmp
lock
jl
stos
enter
lret
push
xor
add
icebp
jle
jge
xchg
aaa
loope
jbe,pn
adc
cmpb
add
mov
rorl
pop
fstl
jp
mov
mov
xchg
cmp
mov
xorb
pop
or
movsl
call
das
rorl
call
icebp
xor
insb
pop
push
dec
and
ja
lret
pusha
into
lock
movsl
scas
or
ret
sbb
xlat
mov
jb
loop
cwtl
jl
mov
xchg
pusha
iret
mov
and
xor
sub
movsl
sbb
scas
mov
out
push
popa
mov
or
std
mov
mov
push
xor
mov
addr16
sbb
dec
mov
mov
es
popf
mov
cltd
scas
cmp
pop
cmp
addr16
fs
addl
icebp
shrb
mov
popf
je
inc
fnstsw
sarb
dec
add
xchg
pop
mov
jg
sbb
cmp
xchg
outsb
adc
adc
inc
xchg
comiss
adc
subl
ds
sub
in
es
inc
ljmp
sbb
pop
xchg
inc
lods
cmp
shlb
outsb
stos
sbb
daa
divb
dec
addb
jno
loop
std
enter
pusha
shll
movsl
stc
cmp
push
movups
adc
icebp
scas
add
xor
aas
push
out
xor
adc
rclb
or
cld
aas
mov
mov
pop
xor
outsb
std
cmp
in
jbe
dec
daa
push
ret
mov
xor
xor
xor
add
pop
mov
in
or
lock
out
xchg
adc
add
push
mov
lcall
add
mov
lcall
add
pop
inc
xchg
imul
int
jp
inc
xor
inc
xchg
fcompp
mov
jns
out
pop
jmp
addb
lock
jne
mov
js
lock
cltd
inc
in
jg
movsb
mov
scas
pop
sbb
cmp
mov
and
push
fnstcw
cs
mov
xchg
pop
cmpsl
mov
jg
mov
rclb
push
jbe
push
clc
pushf
mov
outsb
lock
cmp
leave
jo
mov
mov
cmp
lea
or
mov
pusha
mov
test
sti
das
aam
sbb
or
cmp
cld
adc
xor
ss
repz
and
mov
out
popf
push
lret
sbb
negl
adc
xchg
fstps
and
repz
mov
sbb
and
push
aad
ss
cltd
icebp
xor
notl
into
or
xchg
pop
iret
xchg
rol
mov
inc
xchg
roll
mov
inc
int
cmp
xchg
cmp
daa
and
popa
cmp
xor
stc
mov
and
int
lcall
into
cs
dec
mov
and
xlat
push
cld
ljmp
aas
push
lods
movsb
cmp
ja
dec
mov
icebp
popf
scas
sbbl
notb
je
ljmp
cmp
sbb
pop
cmc
xchg
mov
push
xchg
or
pop
jge
stc
pop
loopne
mov
push
sub
sbb
aas
xor
std
scas
sub
mov
xchg
notb
lcall
xor
loopne
mov
mov
xchg
cld
dec
ret
fstps
aad
aas
popa
call
dec
movsl
xchg
jno
push
xor
and
sbbb
movsl
push
out
out
stos
adc
dec
and
das
mov
cmp
mov
popf
jp
mov
lock
jne
leave
mov
cmp
sti
pop
rcr
scas
inc
mov
sbb
push
stc
mov
aad
sarb
pushf
hlt
jle
insl
repz
add
jb
scas
xchg
mov
dec
mov
mov
sub
inc
and
lcall
inc
mov
add
xor
or
pop
xor
mov
clc
outsb
pop
pop
nop
std
mov
xchg
fldenv
std
cmp
pop
cld
jo
scas
inc
out
mov
sbb
adc
or
cltd
adc
mov
jae
and
pop
sub
iret
shll
std
xorl
dec
adc
adc
adc
mov
das
popa
adcl
push
adc
pop
fldenv
icebp
test
aas
xchg
xor
adc
repnz
and
das
jno
add
xor
lahf
push
pop
xchg
and
or
cltd
pop
fwait
cmp
and
icebp
lock
shlb
push
sub
add
mov
add
shlb
aad
fsts
orb
nop
iret
jp
data16
pushf
mov
pop
pop
shrl
in
rcll
sbb
and
pop
mov
add
std
fnstenv
stos
out
pop
scas
scas
jne
rcll
movhlps
std
mov
adc
adc
and
jmp
pusha
and
pop
ss
not
shl
test
fbstp
and
mov
lret
rorb
xchg
cmp
mov
rcll
sub
or
das
push
aad
pcmpeqw
std
xor
adc
imul
xchg
jae
pop
fstps
daa
jnp
mov
enter
push
mov
subb
andb
and
mov
pop
lods
or
mov
pop
mov
scas
xor
iret
jno
push
bswap
nop
iret
pop
fwait
mov
cmp
sahf
loopne
jno
add
das
scas
test
and
pop
mov
sub
sbb
push
add
pop
xchg
fnstenv
arpl
push
subb
adc
mov
pop
cmc
push
notb
in
push
jg
and
push
out
xor
sbb
mov
pop
xchg
inc
pusha
adc
push
sub
scas
xchg
or
mov
pop
jae
xor
imull
pop
js
cmp
fsubr
sbb
pop
icebp
mov
std
pop
xor
push
bound
andl
inc
jmp
scas
enter
orl
inc
mov
mov
add
leave
jmp
adc
fsubrs
sahf
push
gs
adc
mov
sub
jge
lret
adc
dec
out
leave
int
mov
xor
icebp
f2xm1
jmp
lock
mov
mov
xlat
sbbb
and
lea
jmp
cmp
dec
or
mov
ret
fisubrs
jp
std
std
add
jp
lods
int
das
cmp
insb
pop
pop
mov
imul
scas
es
dec
pandn
sbb
rorl
jmp
fdivr
sub
cltd
mov
xchg
jae
das
xor
pop
xor
pop
mov
repz
mov
std
or
and
mov
xorl
mov
std
fstps
lods
setb
cli
adc
mov
xchg
inc
lds
clc
xor
adc
mov
jge
outsl
mov
pop
std
std
insb
das
mov
lcall
into
jg
mov
push
nop
sub
stos
mov
mov
jp
sub
sti
sbb
jae
push
das
jp
jb
mov
scas
fldl
or
xor
nop
xchg
aad
aaa
mov
adc
jno
das
cmc
adcl
jmp
aas
insl
mov
lock
lock
ret
mov
lods
in
mov
mov
inc
bswap
scas
hlt
mov
ja
adc
and
mov
jp
addr16
call
rcrb
jb
xor
in
push
jns
rclb
jmp
or
scas
iret
adc
loop
das
jl
int
scas
outsb
popa
pop
xor
outsl
inc
loop
cmp
jle
fxrstor
jbe
lock
jle
call
lret
mov
or
nopl
push
pop
dec
fcmovnbe
lea
xor
aam
mov
push
add
out
mov
gs
inc
ljmp
jno
fidivrs
in
push
jns
cmp
mov
mov
lods
jne
jg
sbb
xchg
xchg
mov
adc
imul
outsl
xor
dec
mov
movsb
subb
pop
xchg
xor
fnstcw
ficompl
cltd
and
xchg
mov
popf
out
dec
push
and
add
jbe
js
idivb
aad
scas
fsubrs
inc
testl
adc
xor
jg
inc
and
enter
fimull
test
sbb
inc
pushf
add
or
push
sarl
sahf
fdiv
or
lock
sbb
and
fidivl
mov
popf
push
outsb
std
and
movsb
mov
mov
add
leave
add
sub
movsl
and
es
pop
cmp
cltd
xchg
pop
popf
fcomi
out
mov
insl
cmp
stos
mov
pop
adc
cmp
das
call
and
jno
sbb
rcl
jb
push
push
jecxz
or
das
movsl
mov
clc
es
iret
xchg
stc
mov
push
inc
mov
popf
fiadds
lods
nop
inc
rcrb
sbb
add
jno
pop
add
clc
lea
dec
fistpl
cmp
imull
das
iret
cld
sbb
lock
sbb
scas
jp
push
mov
pusha
js
hlt
in
js
fsubrs
mov
inc
push
or
cmp
imul
push
outsb
idivb
lahf
add
mov
jns
in
jno
gs
scas
gs
xor
xlat
mov
inc
push
hlt
adc
outsb
into
js
cmp
into
xchg
scas
aas
dec
pop
sub
rcrb
imul
push
xchg
xchg
pop
cmp
out
cmpsl
lods
xor
fldcw
adc
and
sbb
sbb
scas
imul
jns
sbb
sub
push
mov
or
pop
mov
out
fwait
outsb
xor
push
jg
inc
popa
outsl
mov
mov
sbbb
fisubrl
sbb
xor
mov
jnp
hlt
sbb
mov
pop
es
inc
xchg
movsl
fs
rcll
outsl
cmpsb
call
sbb
push
mov
xor
sub
scas
jae
not
inc
mov
xchg
push
lock
jmp
pop
jbe
jno
mov
mov
mov
mov
xor
mov
adc
int3
lret
mov
cmpsb
mov
mov
push
gs
inc
push
push
nop
pop
adcl
mov
pop
nop
lock
imul
pop
cs
std
sbb
xchg
shl
and
aas
into
lods
sbb
fwait
sub
lea
sub
aas
pop
lods
test
or
cwtl
sahf
adc
out
mov
ja
pushf
pop
das
aam
xchg
lods
pusha
scas
push
lods
add
adc
pop
les
push
out
cltd
sbb
pop
scas
cmp
mov
xchg
cltd
sbbl
add
or
lock
jnp
das
mov
iret
jp
inc
out
adc
leave
pop
fsts
movsb
inc
stc
xor
jp
mov
lret
push
popf
fwait
cmp
test
xchg
xchg
lock
pop
orb
and
jg
subb
adcl
xor
adc
push
cli
outsb
sbb
pop
sub
mov
mov
cltd
cltd
fs
adc
movd
std
jns
jb
movsb
mov
push
cltd
sbb
jg
mov
jg
xchg
int
xchg
lcall
fxch
mov
fstpl
scas
xor
fistps
ljmp
add
pop
jecxz
mov
xor
cmpsb
icebp
adc
mov
pusha
xchg
sbb
addb
xchg
inc
jo
dec
imul
stos
push
roll
add
dec
fmul
iret
add
pop
cwtl
sbb
das
in
nop
call
push
cmc
or
testl
or
or
mov
mov
pop
das
stos
pop
mov
sbb
lods
cmp
and
shlb
adc
orl
lea
mov
cli
inc
loopne
xchg
fiaddl
dec
sbb
lods
sbb
incb
sbb
js
ret
xchg
outsb
jno
jecxz
inc
icebp
push
jno
pop
inc
xlat
cmpsl
dec
int
scas
stc
daa
mov
xchg
movsb
jmp
rcl
inc
mov
and
fidivrl
mov
jb
sbb
testl
dec
and
inc
jg
ss
lahf
test
fldcw
in
jecxz
sub
xorl
out
pop
jl
lods
hlt
xchg
xchg
mov
adc
andl
xor
mov
in
mov
das
jno
xor
leave
mov
sbb
jp
pusha
ss
sbb
int
stc
ss
scas
dec
fstpt
pop
aad
push
cmc
addr16
and
dec
aad
mov
stos
lret
mov
or
pusha
mov
fmull
pop
insl
repz
sarb
push
dec
pop
push
xchg
fcoms
jmp
jnp
out
fldcw
pop
repnz
mov
rolb
mov
aaa
cwtl
or
lock
xchg
fnstcw
orl
rclb
mov
testb
sbb
ja
es
xor
pop
dec
scas
cs
cmp
add
add
in
mov
pop
cmp
sub
mov
and
enter
ja
mov
mov
mov
sub
repnz
scas
xchg
or
sbb
cmpb
lock
int3
loopne
mov
and
movsl
mov
jo
rolb
and
push
loop
repz
ja
and
mov
mov
leave
lods
mov
xchg
sub
lret
sbb
test
pop
imull
jmp
mov
and
xor
js
jmp
cli
jnp
cwtl
cmp
popa
mov
push
jmp
jge
pushf
and
or
cmp
or
test
cmpsl
test
jbe
mov
mov
jno
sbb
sbb
adc
loopne
shlb
and
mov
pop
test
jecxz
mov
cli
push
std
inc
pop
jmp
aad
jp
sbb
rclb
jmp
das
scas
cmp
scas
mov
cltd
mov
jg
adc
xlat
cltd
icebp
in
sahf
push
fidivs
push
inc
jnp
pop
xlat
mov
add
mov
cmpxchg
aaa
int3
pop
sahf
sub
sahf
and
pop
dec
outsl
int3
push
add
rolb
xchg
mov
push
cmp
push
xchg
fstl
mov
push
ret
cltd
nop
insl
push
xchg
das
scas
xor
inc
cltd
cli
push
dec
out
jo
dec
inc
incl
push
or
xchg
lahf
cmp
lahf
sub
insl
daa
shll
jmp
lahf
xchg
mov
jl
dec
out
cs
add
adc
xor
mov
pop
jo
pop
inc
bound
xor
pop
lea
mov
mov
out
mov
mov
pop
xor
xchg
out
xor
das
fwait
or
popa
je
and
inc
pop
and
jne
pusha
add
and
cmp
xchg
mov
outsb
xor
cmp
and
add
cmp
mov
mov
mov
bound
xchg
cmp
sbb
and
dec
mov
sahf
iret
ljmp
sub
xor
daa
xchg
out
and
adc
push
lcall
test
push
mov
sub
xor
xchg
movl
xor
fisttpll
sub
jo
mov
xchg
cmpsl
negl
sub
fstps
inc
push
pop
wrmsr
xchg
lcall
scas
popf
sub
movsl
jno
scas
aas
idivl
insb
testl
cld
imul
mov
stos
lret
fstps
jne
jno
adc
sbb
push
ljmp
dec
imul
stos
popf
mov
js
or
xor
icebp
dec
adc
scas
jnp
sbb
mov
mov
cltd
rcrl
icebp
das
adc
cltd
jns
jecxz
mov
iret
xor
dec
pop
jns
xor
shl
scas
mov
shrd
sub
mov
nop
mov
inc
or
push
mov
scas
out
mov
rorl
adc
sarl
leave
adc
pushl
outsl
mov
jge
push
bound
fsub
and
dec
cmp
subl
sbb
xchg
sub
cld
in
adc
push
in
cmpl
shrb
in
and
inc
jns
lods
scas
xchg
hlt
rcrb
dec
jge
pop
cmc
jno
cmp
sbb
sub
ret
fwait
inc
shrb
imul
xchg
mov
xchg
pop
xchg
loopne
adc
sub
movsb
mov
and
fisubrs
xchg
push
jae
ud0
loope
pop
mov
sbb
repnz
jb
ffree
ficomps
cmp
mov
rcrb
test
std
add
lock
pop
scas
scas
xchg
jno
jmp
sbb
sbb
sub
push
lock
scas
lock
xchg
push
xchg
mov
mov
or
cmp
js
das
dec
adc
adc
mov
or
pushf
inc
or
jae
aaa
inc
insb
inc
std
mov
xchg
cmp
pop
adc
push
sbb
dec
and
fdivrl
lds
lcall
les
mov
lahf
sub
invd
xor
inc
xchg
xor
or
jno
jno
movsl
xor
sbb
scas
test
xor
inc
std
mulb
mov
inc
ljmp
fs
mov
push
adc
sub
mov
add
call
int3
cmp
xchg
sbb
aam
pop
jmp
cli
or
mov
cld
mov
jge
jmp
xchg
add
subb
scas
adc
scas
jp
xor
mov
jo
mov
imul
xor
ret
ficompl
cmp
mov
lock
sub
pop
pop
mov
mov
fnop
and
scas
mov
or
fnop
shl
scas
sbb
arpl
inc
xor
jecxz
pushf
adc
sub
and
sub
leave
jle
xor
rcrb
movsb
loop
xlat
mov
je
push
mov
and
test
adc
xchg
sub
mov
sub
pushf
inc
and
and
jmp
data16
pop
cwtl
and
pop
or
pop
jnp
movsl
dec
cmpsl
mov
xor
and
leave
aaa
or
sub
les
adc
das
fmull
xchg
outsb
dec
jo
fdivrs
pop
test
movsl
dec
mov
pushf
push
adc
in
orl
mov
jmp
push
adcl
rcll
mov
aad
and
jb
fnstenv
and
stc
js
lret
es
xlat
mov
movsb
push
rcrl
push
sub
push
cld
das
and
dec
mov
scas
push
jo
push
out
push
cwtl
jl
movsl
mov
cld
mov
out
lahf
push
mov
mov
pop
je
aas
xchg
adc
jo
sahf
ficoms
cmp
mov
jmp
das
or
mov
inc
sbb
scas
loope
adc
scas
es
mov
mov
sbb
lods
fstp
xor
adc
xchg
or
add
repz
subb
jno
ss
adc
or
mov
xchg
adc
mov
shlb
pop
out
scas
fsubrl
push
sub
cwtl
lahf
std
push
movsl
dec
mov
xchg
idiv
mov
or
movb
xchg
iret
pusha
or
dec
fldt
sbb
adc
lods
inc
int3
and
dec
stos
out
xor
jb
xchg
cs
std
mov
mov
mov
mov
mov
mov
mov
mov
jns
shlb
scas
adc
sub
mov
sbbb
popf
cmp
stos
ja
mov
inc
scas
sahf
mov
xor
and
dec
enter
xchg
test
adc
test
rep
int3
jg
jo
adc
out
clc
or
ret
adc
fidivrl
jo
out
xchg
mov
jne
icebp
mov
cmpl
mov
push
dec
mov
xchg
loopne
cltd
xchg
daa
jb
es
pop
adc
pushf
add
mov
cmc
push
push
mov
imul
dec
jno
xchg
das
push
ret
pusha
sbb
pop
or
jno
lahf
cmp
movsb
pop
lahf
sbb
and
cwtl
sbb
sbb
mov
repnz
int
scas
lcall
xchg
push
out
xchg
rclb
fisttps
add
mov
jp
cmp
push
movsl
imul
mov
adc
push
mov
aam
rcll
js
fs
or
xchg
pop
mov
push
mov
mov
shr
mov
push
push
push
fcomps
sbb
add
pop
lahf
sbb
pusha
push
xchg
aas
adc
adc
cs
das
scas
ret
pusha
stc
shrl
push
lahf
in
mov
pop
fstl
lret
push
out
sarl
pop
add
jns
dec
je
iret
sbb
fnsave
aaa
and
and
fcmovnu
mov
xchg
stc
lahf
icebp
lret
xchg
xchg
push
cwtl
pusha
pop
out
outsb
test
lahf
adc
cmp
popf
fsubrs
cmp
clc
mov
mov
and
pop
xorb
sbb
mov
mov
out
shlb
lret
and
das
test
les
outsl
in
mov
and
push
js
lahf
or
push
push
mov
push
xor
incb
cmc
aam
std
pop
movsl
out
out
scas
jbe
jb
les
jbe
xchg
mov
mov
stc
adc
or
es
outsb
addr16
pusha
push
xor
pop
adc
lds
cld
sbb
scas
mov
repnz
add
sbb
adc
int
pop
sub
fs
jp
mov
out
outsb
and
lds
add
dec
addr16
sub
xchg
pop
xlat
dec
dec
lahf
in
xlat
pop
lahf
ja
pushl
add
lock
mov
in
mov
mov
mov
dec
push
lahf
jle
add
jp
xor
and
jb
xor
aad
xor
xor
or
fsubrs
push
int
sahf
bound
adc
sub
adc
cmp
push
lret
jae
or
hlt
mov
out
ss
clc
lock
les
testl
and
mov
dec
test
cs
cltd
xor
cltd
sbb
sbb
cs
fistpl
test
cltd
gs
mov
test
aaa
jecxz
lcall
aam
cmp
mov
jno
neg
pop
pop
xor
and
das
mov
or
enter
xor
ret
push
xchg
fsubl
xor
fcomps
mov
loopne
adc
jl
pop
dec
or
iret
outsl
movsb
or
aas
adc
adc
xor
or
cmp
push
push
xchg
push
cwtl
ret
das
xor
xchg
shl
sbb
or
mov
and
mov
fstpl
sbb
or
out
adc
xor
pushf
jmp
xor
add
add
testb
mov
inc
arpl
inc
xor
jmp
or
orl
dec
ret
mov
mov
ja
push
sbb
not
insl
xchg
push
out
aad
jns
sbb
and
stos
std
or
push
jo
call
pop
xor
mov
cmpl
daa
mov
pop
in
aam
fidivrl
adc
test
pushf
pop
addl
shl
dec
adc
or
mov
xchg
mull
xor
adc
shlb
mov
cmpsl
sbb
xchg
or
ds
das
aaa
and
mov
push
cmp
ficoml
push
mov
daa
repz
jp
push
repz
mov
cli
mov
mov
fnstenv
dec
scas
add
nop
lods
repnz
xor
nop
imul
leave
lea
outsl
ret
pop
jbe
imul
daa
jmp
repz
das
push
xorb
imul
push
cmp
lock
mov
mov
iret
add
out
inc
pushf
fildll
orl
mov
dec
cmp
std
xor
inc
mov
test
jb
inc
inc
fbstp
add
push
add
testb
xchg
psadbw
dec
aaa
pop
jmp
loope
mov
fisttps
in
scas
xlat
idivb
gs
or
mov
mov
icebp
insl
int3
test
sbb
sub
subl
sarl
add
hlt
in
sbb
das
test
or
lock
in
dec
adc
mov
shlb
and
scas
mov
es
sub
fcoml
cwtl
dec
add
add
shrb
pop
mov
push
xor
loopne
fdivrs
adc
fst
nop
add
js
dec
pop
and
cs
adc
fucom
jo
ret
lret
mov
outsl
push
test
adc
sarb
dec
testb
sub
jnp
pop
stc
cmpsl
push
out
movsl
test
scas
into
das
in
test
pushf
pop
sbb
seta
scas
cmpsl
or
sub
das
lea
call
iret
lods
sub
mov
xchg
cmp
fisubrl
jb
cmc
std
icebp
pop
insl
inc
enter
leave
outsl
outsl
mov
push
aas
push
pop
push
mov
adc
dec
arpl
cmc
adc
push
fnstsw
popf
ret
mov
cli
push
dec
scas
fistpll
pop
nop/reserved
sbb
add
sahf
and
jno
push
sarl
pop
fdiv
lahf
push
sbb
add
push
scas
xchg
fimull
das
das
and
mov
mov
pop
lock
aas
pop
xchg
cwtl
jae
test
xchg
mov
popa
cmp
push
or
movsl
xchg
test
cli
ljmp
dec
ljmp
dec
pop
adcb
leave
pop
loopne
lea
or
je
dec
or
push
sbb
fbld
mov
popf
jo
std
xchg
enter
cltd
sub
das
sbb
add
aas
xchg
jb
inc
xchg
paddw
pop
scas
std
mov
adc
jno
filds
and
dec
push
mov
push
add
pop
xlat
std
xlat
pop
mov
mov
xchg
mov
scas
repz
fldt
xchg
push
inc
enter
sbb
inc
fstl
mov
add
les
mov
nop
dec
es
jge
pop
dec
in
into
cmp
mov
cs
scas
fwait
or
xchg
pop
xchg
icebp
mov
dec
ja
out
aam
cmp
loopne
dec
test
cmp
adc
das
adc
les
dec
fs
fwait
adc
sarb
das
pop
insl
enter
adcl
and
inc
lret
mov
xor
push
stos
fucomp
xchg
movsl
lret
add
cmp
lea
cld
into
out
das
orb
xlat
arpl
inc
or
scas
lock
scas
push
mov
out
xor
call
loope
adc
inc
xchg
cmc
add
lcall
xchg
and
sbb
jno
mov
xchg
jae,pn
mov
les
lods
movsl
sahf
dec
push
jecxz
dec
mov
push
out
test
mov
jb
xor
sbb
out
sub
pop
shll
xchg
pop
xor
dec
adc
insb
jae
xor
and
jecxz
fwait
scas
push
jno
dec
ljmp
pop
jb
adc
notl
mov
cwtl
jne
pop
mov
out
dec
div
sbb
sub
inc
cmp
cli
fsubrs
cmp
fwait
test
in
jbe
scas
jecxz
dec
nop
outsl
cmp
jnp
dec
cmc
fdivs
push
bound
lock
shlb
outsb
shll
lock
fucom
xchg
outsb
mov
sbbl
lods
mov
das
imul
adc
sbb
or
popf
clc
psubusb
shll
int3
dec
cmp
add
inc
lcall
mov
lahf
pop
xor
adc
and
sarb
es
scas
jnp
rorb
out
mov
sbb
cld
jl
mov
ljmp
dec
jge
mov
dec
sarl
outsl
test
sbb
adc
in
mov
ljmp
xchg
insl
imul
lret
shrl
mov
fucom
fmull
pop
mov
add
scas
cmc
mov
pop
je
mov
dec
push
aaa
fisubs
or
push
cwtl
add
pushf
je
clc
fcomi
loop
js
mov
imul
or
fptan
and
mov
pop
insb
fcoml
sahf
jge
das
icebp
adc
das
lock
mov
push
ljmp
cmpsl
das
dec
addr16
mov
testl
mov
dec
jnp
lret
scas
cmp
loope
jno
imul
sarl
scas
xchg
outsl
sti
imul
push
into
pop
pop
icebp
jle
imul
or
sbb
scas
mov
outsl
arpl
inc
frstor
std
pop
inc
xchg
jb
jno
adc
push
mov
cwtl
cmp
cltd
and
inc
inc
shll
xor
and
pop
mov
xchg
add
in
or
adc
int3
fistpl
cmp
loope
and
push
ficomps
mov
mov
repz
dec
mov
rcrb
aaa
mov
lods
sub
lret
sbb
iret
scas
cltd
scas
scas
cmp
icebp
jae
adc
cs
mov
cs
adc
pop
jmp
scas
and
shlb
pushf
mov
lret
xor
add
std
stos
das
cmp
jbe
sub
lret
adc
sub
iret
icebp
dec
mov
gs
movsl
cmp
dec
das
icebp
rcrb
leave
push
or
outsl
popa
or
outsl
in
or
outsl
adc
movsb
outsl
jae
or
xor
cmp
sbb
mov
pushf
loopne
jns
or
loopne
mov
call
mov
gs
pushf
pop
test
loopne
adc
out
mov
sub
lret
cs
imul
ss
sub
outsb
sahf
out
mov
xor
mov
shrb
sub
or
inc
scas
cmc
ret
frstor
inc
push
dec
cmpsl
mov
inc
fcmovu
or
in
sub
xchg
pop
push
push
mov
cmp
mov
mov
jle
sbb
push
mov
popf
clc
rorb
mov
std
mov
adc
xor
xlat
mov
std
subb
ja
sub
fisubl
sub
std
inc
das
insl
cmp
dec
scas
add
cld
insl
into
int3
stos
sub
mov
xchg
clc
push
pop
xchg
movsb
ret
mov
pushl
xchg
or
js
das
std
mov
mov
dec
repnz
ficompl
iret
mov
xchg
mov
inc
punpckhwd
aad
imul
int3
sub
lret
lcall
push
xchg
sub
xor
stos
jg
jp
setp
fmul
or
inc
lret
inc
stc
aad
pop
and
cltd
shrl
xor
stos
loop
push
pusha
andl
movsl
aaa
in
dec
je
jmp
loop
jnp
out
popf
pop
push
add
mov
mov
loop
mov
sbb
ds
and
stos
pop
jecxz
mov
mov
das
push
scas
push
cmc
daa
pop
pop
add
pop
push
sti
cmp
add
pop
std
mov
push
fnop
mov
imul
pop
xchg
mov
jge
dec
lea
inc
imul
sub
mov
adc
mov
push
lods
sub
lret
dec
pop
lock
into
xchg
cmp
nop
inc
outsb
xchg
inc
jecxz
aas
and
movsl
lahf
mov
leave
xchg
std
cmp
push
inc
ret
out
mov
das
movl
xor
dec
insb
xchg
add
and
popa
das
test
mov
enter
or
in
push
out
cmovg
sbb
xchg
add
mov
loop
mov
mov
xchg
loopne
cmp
jno
jg
outsl
rclb
inc
push
mov
cmp
add
int3
std
pop
adc
lock
outsb
xchg
mov
outsl
into
out
lock
inc
pop
jecxz
fbld
das
mov
sub
cmp
jns
push
push
in
mov
xchg
fiadds
je
and
es
shr
aaa
jno
pop
and
popf
flds
rorb
pushl
cltd
xor
xor
idiv
jle
movsl
mov
mov
fsubrl
ret
pushf
fs
in
sub
add
dec
cmc
pusha
pushf
test
sub
scas
cmc
ror
aad
mov
jne
scas
fnstenv
sbb
nopl
sub
shlb
mov
xor
fnstsw
ret
lock
mov
mov
in
pop
sbb
in
jnp
ret
inc
push
decl
hlt
outsl
nop
push
mov
mov
add
gs
push
lcall
nop
std
lods
das
repnz
pop
lds
dec
out
xlat
fimull
lds
dec
pop
fisubl
pop
cltd
test
lods
xor
int
pop
imul
imul
and
fwait
in
fldcw
mov
jecxz
xor
adc
mov
cmpsl
mov
mov
gs
hlt
shlb
jns
sbb
std
cmp
ljmp
decl
jg
scas
xor
push
xchg
pop
aam
in
orl
scas
popa
push
lea
lods
sbb
cmc
xchg
loope
xor
in
xor
pop
cltd
fildll
cmp
lret
or
pminub
mul
ja
in
xchg
pop
cs
mov
or
mov
jl
test
sub
or
dec
loop
cli
or
pop
mov
scas
scas
adc
cmp
das
xchg
dec
cmpsb
out
addr16
popf
into
repnz
mov
add
das
repz
das
mov
das
in
rcl
fxrstor
shl
ret
jp,pt
decl
lret
test
adc
cmpsb
movsb
das
sbb
int
aam
push
add
mov
or
xor
hlt
mov
fcmove
cltd
jns
dec
xor
int
pop
daa
mov
and
popf
sbb
mov
inc
push
xchg
pop
lcall
das
adc
pop
sti
inc
jl
std
ss
aad
pop
out
dec
das
das
cwtl
mov
push
imul
ret
add
xor
dec
das
push
cmp
fmul
icebp
jnp
mov
jne
pusha
inc
nop
sbb
hlt
aaa
adc
and
nop
cmp
or
pop
test
rcll
sub
mov
xor
jnp
lret
cs
jg
or
outsl
mull
pop
jnp
cmc
fwait
cmovnp
xor
sbb
and
std
aam
add
inc
fwait
mov
sbb
pop
xchg
mov
adc
out
mov
das
xchg
inc
pop
mov
mov
xor
sbb
cltd
pop
push
xchg
aad
pop
mov
dec
iret
mov
mov
popf
and
xor
mov
js
sub
push
mov
mov
sbb
adc
and
scas
push
mov
popf
or
ficompl
or
cmp
push
inc
fnstsw
and
add
push
pusha
repz
sbb
sbb
cs
pop
movlps
das
cmp
mov
xor
mov
cmp
sar
add
sbb
mov
and
in
push
mov
popf
sbb
inc
cltd
sbb
sub
incl
or
fsts
xchg
mov
jmp
push
js
aad
or
lds
or
movsl
push
dec
scas
repz
and
mov
and
cmp
push
xor
pop
sbb
mov
sbb
pop
ljmp
inc
fnsave
icebp
inc
movlps
das
or
repnz
pushf
sbb
mov
or
sti
nopl
adc
adc
popa
repnz
pushf
sbb
mov
sbb
lds
cs
pop
xchg
sbb
adc
gs
rorb
mov
or
nopl
test
repnz
pop
cld
and
cmp
and
sbb
sbb
sbb
pop
cltd
cs
and
repnz
cmc
jae
nop
sarl
imul
or
nopl
stc
and
mov
fldenv
loope
sbb
mov
cs
inc
cmovae
jp
adc
shlb
nop
push
mov
imul
or
or
xor
sbb
and
xchg
dec
scas
repz
sbb
sbb
sbb
xor
pusha
repz
and
dec
clc
sbb
sbb
cmp
and
or
jecxz
push
mov
popf
and
adc
and
repnz
pusha
repz
sbb
mov
sbb
movsl
cs
and
lcall
cmpsb
lret
fisubs
dec
push
pop
xchg
sub
in
jns
scas
incl
add
scas
add
jns
scas
idivl
idiv
jns
scas
sti
cmp
std
jns
scas
movmskps
adc
stc
cmc
mov
das
out
stc
jmp
sti
push
std
repnz
xor
hlt
std
xor
out
es
call
std
sub
in
std
sub
std
aas
std
add
inc
std
add
inc
std
add
inc
std
idiv
aaa
std
clc
std
cmp
cli
sbb
jb
add
inc
rolb
sarb
sar
shlb
sar
sarb
std
sarb
rorb
rclb
adc
dec
add
add
add
loopne
movsl
pop
daa
pop
jmp
pop
sub
pop
sub
jle,pn
jge
adc
jge
or
and
or
mov
repnz
shl
adc
jb
xchg
push
adc
xchg
or
or
push
adc
xchg
and
sbb
dec
int
dec
pop
add
mov
aam
pop
scas
adc
jno
dec
mov
and
push
ficompl
mov
js
push
xchg
ja
inc
movsb
aam
cwtl
mov
pushf
or
ss
mov
jge
sbb
jge
das
jge
add
loop
movsl
cmpsb
out
nop
mov
into
mov
shlb
nop
testb
aad
pushf
push
inc
mov
out
jbe
mov
push
mov
jp
ds
dec
popf
loope
punpcklbw
mov
xchg
scas
cld
pop
sub
xchg
clc
sub
mov
pop
pop
sub
icebp
inc
iret
jo
xchg
imul
xor
or
out
mov
pop
xchg
aaa
popf
jns
lahf
sbb
pop
xchg
fwait
jnp
mov
pop
pop
arpl
or
cwtl
cld
mov
scas
push
push
loope
xchg
and
mov
loope
mov
mov
sbb
ds
js
xchg
jns
out
adc
add
xorb
xor
loopne
dec
fcoms
flds
sbb
inc
movsb
das
cwtl
in
jl
push
xchg
sub
mov
les
push
mov
jl
iret
inc
dec
enter
push
mov
sbb
pop
mov
xchg
das
test
add
negb
jecxz
test
lea
sbb
jb
icebp
lock
mov
jo
fcom
cltd
mov
sbb
loop
or
pop
adc
mov
pop
jecxz
out
add
push
movsb
and
dec
adc
xchg
movsl
mov
gs
imul
or
jne
js
mov
mov
add
clc
das
test
xor
sub
rclb
and
icebp
adc
push
jb
loop
xchg
scas
add
out
add
jns
dec
popf
xchg
sbb
out
sub
outsb
out
xchg
cmp
pop
aad
int3
movsl
leave
add
xor
int
out
in
xchg
pop
jmp
fcmovnu
pop
fimull
pop
and
jecxz
sbb
fisttpll
jbe
or
pop
out
adc
mov
sbb
jae
scas
enter
jb
mov
dec
adc
or
sbb
push
push
test
xchg
jbe
sbb
mov
adc
and
or
sbb
pop
mov
scas
mov
repnz
lock
jp
mov
mov
sbb
push
or
xor
xchg
nop
fwait
cmp
lea
lds
adc
jnp
pop
loopne
mov
mov
or
lcall
dec
mov
notb
movsl
orb
inc
cmpsb
push
jno
loop
filds
xchg
lea
or
out
pop
xchg
or
inc
lock
int3
lods
and
inc
lcall
scas
shlb
sbb
gs
xchg
mov
and
icebp
lock
sbbl
lea
testb
or
and
push
ret
sbb
mov
push
or
adc
or
or
or
push
and
and
and
push
sbb
lcall
fstpl
xor
adc
dec
or
sarl
mov
repnz
or
sarl
mov
mov
cmp
mov
repnz
or
sarl
mov
jns
cmp
mov
repnz
or
sarl
mov
repnz
or
repnz
repnz
or
sarl
mov
repnz
or
rcrl
rorb
dec
jns
cmp
mov
repnz
or
rcrl
dec
or
sarl
mov
repnz
or
sarl
in
ds
inc
push
call
les
lea
fdiv
sub
xchg
aaa
repnz
pop
das
cmp
repz
push
pop
pop
pop
push
ljmp
das
cmp
pushf
rcrb
pop
scas
jl
sbb
popf
push
sbb
mov
xchg
push
gs
jp
xchg
xchg
xchg
cmp
js
dec
dec
fs
pop
outsl
enter
cwtl
inc
scas
repz
std
aas
mov
aam
stos
into
mov
jl
xor
scas
jg
mov
or
xchg
jnp
call
clc
aaa
xchg
scas
push
sbb
negl
repnz
movsb
add
xor
in
mov
pop
pop
jo
in
sbb
lods
mov
sub
stos
push
ss
arpl
cmp
rcrl
or
test
mov
mov
inc
pop
ja
adc
mov
jno
mov
xor
pop
and
xchg
sarb
mov
nop
mov
leave
xchg
js
cltd
lea
mov
jnp
imul
pop
divl
push
outsb
fldcw
cld
pop
scas
pop
xchg
pop
pop
sbb
outsl
int3
popf
pop
test
shrb
dec
pushl
adc
sub
aas
in
lods
jns
scas
insl
rcr
jp
shl
or
and
mov
out
add
insl
pop
jb
mov
les
mov
icebp
xor
xchg
adcb
add
xor
push
xor
dec
into
out
jmp
jecxz
xchg
xlat
popf
cmp
inc
movsl
es
cli
push
xchg
fwait
jno
jnp
push
dec
cmp
xchg
fisubl
sub
mov
inc
sbb
mov
out
mov
ret
push
sti
clc
jno
mov
fs
in
loop
das
ljmp
lds
int3
add
orl
rcrl
faddp
fs
scas
jmp
pop
pop
outsl
pop
jns
mov
int3
leave
xor
popf
scas
xor
sti
sub
outsl
fidivl
push
mov
jge
adc
mov
in
xchg
icebp
sbb
jns
pushf
mov
sbb
jnp
int
ljmp
cmp
rorl
nop
inc
mov
loop
dec
jne
jae
aad
idivb
mov
adc
adc
and
xchg
out
or
clc
mov
pop
loopne
popf
lret
xchg
sub
xor
dec
mov
jge
lret
push
mov
and
loop
ja
mov
sbb
shlb
pop
loope
daa
sarb
xchg
bsf
das
repnz
shrb
je
sbb
stc
mov
clc
pop
adc
das
testl
add
outsb
adc
cmp
sbb
adc
scas
sbbb
mov
mov
push
add
testb
adc
das
popf
out
lret
ss
inc
cmp
push
cltd
jo
repz
das
pushf
add
cld
popa
mov
pushf
mov
or
insl
pop
jecxz
adc
das
lock
mov
insl
xchg
inc
mov
insl
pop
mov
jecxz
das
rsm
std
das
arpl
push
xchg
jo
hlt
add
js
cltd
mov
shr
scas
dec
dec
push
idivl
pop
push
or
inc
repnz
das
inc
sarb
mov
mov
jo
lcall
dec
pop
scas
lret
jl
das
shrb
pop
cmp
mov
mov
push
orb
jae
jns
insl
imul
shrl
packssdw
psrlq
nop
aaa
das
mov
jo
cmp
inc
aaa
mov
mov
iret
stos
popf
or
movsl
dec
push
xchg
inc
cltd
and
insl
scas
insb
hlt
pop
scas
inc
adc
push
into
mov
and
mov
pushf
sbb
push
sbb
and
jbe
sahf
jg
stos
push
push
jmp
cli
hlt
push
aaa
loopne
xlat
xor
rcrl
icebp
into
std
push
psrlw
cmp
xchg
movsb
mov
cltd
jno
dec
iret
xchg
and
rclb
ret
outsb
fstl
shlb
cmp
mov
ss
nop
and
add
jecxz
push
cmp
decb
or
out
rcll
iret
mov
sbb
movq
sbb
dec
or
std
jae
pop
shll
push
sub
jae
mov
jae
fdivl
cmp
xchg
das
ss
or
mov
js
sbb
movsl
mov
js
iret
add
js
iret
movsl
das
daa
js
iret
inc
js
iret
movsl
sbb
js
iret
pop
and
into
iret
mov
pop
icebp
js
sti
iret
mov
js
iret
pop
dec
js
sti
iret
das
mov
pop
js
sti
iret
sbb
and
mov
sbb
iret
pop
sbb
iret
outsl
fnstcw
iret
lret
mov
out
fnstcw
iret
loope
fnstcw
iret
loope
fnstcw
iret
loope
fnstcw
iret
das
icebp
jae
or
std
jae
mov
jae
lock
jae
jp
jae
or
std
jae
lds
lock
xor
xchg
push
cwtl
dec
incb
mov
xchg
mov
xor
xchg
pop
lret
mov
arpl
test
lret
std
inc
arpl
sbb
add
sbb
mov
pop
jb
pushf
sbb
mov
inc
add
ja
mov
daa
sarb
jl
mov
add
in
es
movsl
test
in
and
or
out
jl
pop
mov
cltd
sbb
call
or
cvtpi2ps
adc
mov
cmp
icebp
pop
cmpsb
and
sbb
cmp
out
rcll
sbb
xchg
cli
cmc
push
fsubs
pop
sub
mov
xchg
or
das
dec
inc
cmp
pop
std
sbb
pop
push
sub
jg
jb
lret
xor
push
push
and
movsl
adc
mov
xor
xchg
push
pop
shr
dec
es
push
lret
mov
icebp
fisttpll
pop
les
movsl
nop
in
mov
mov
std
add
pop
push
or
clc
xchg
adc
push
add
pop
mov
popf
adc
sbb
packssdw
not
push
pop
add
sbb
pop
fsubs
sbbb
sub
add
je
pop
jbe
popf
cmp
sbb
push
or
das
scas
cltd
icebp
mov
push
pop
add
in
push
push
je
add
mov
xor
lret
adc
push
push
jo
mov
push
cmp
xor
addr16
cmp
or
das
scas
jns
mov
std
mov
push
pop
icebp
or
xchg
xchg
push
sbbb
icebp
inc
inc
inc
out
out
add
cwtl
faddl
fsqrt
rorb
mov
clc
out
mov
outsb
add
inc
popf
rcrb
jbe
or
jle
sbb
push
js
xchg
int3
mov
sbb
clc
dec
sbb
out
inc
or
cltd
aam
sbb
sbb
daa
inc
mov
add
lret
lock
and
nop
in
dec
bound
sbb
cmp
shr
add
lret
jno
icebp
xchg
mov
mov
movsl
adc
mov
pop
xchg
pop
or
cmpsb
push
cmp
or
das
mov
icebp
pop
test
mov
cltd
xchg
out
jno
pop
iret
in
add
dec
fdivrl
test
push
or
lods
push
lcall
iret
sbb
dec
mov
or
sbb
iret
in
add
sbb
roll
inc
inc
out
out
add
lret
adc
out
mov
in
cmp
inc
pop
or
cmp
pop
jno
scas
mov
nop
jnp
in
wrmsr
pop
cmp
loope
bound
idivl
fisubrl
out
out
add
lret
adc
jmp
pushf
dec
mov
xchg
cmp
stc
dec
xchg
popl
pop
mov
fidivrs
mov
dec
cmp
pop
jmp
push
jns
pop
fwait
xchg
lock
xchg
jo
das
ds
sbb
cltd
mov
jg
push
xchg
or
mov
in
push
adc
fwait
hlt
inc
and
sbb
nop
fwait
adc
lret
lods
scas
jl
lcall
scas
mov
push
pop
cwtl
repz
or
jne
mov
sbb
jl
xchg
mov
sbbl
sub
push
iret
jl
and
das
out
mov
jg
pop
mov
fsubrs
stos
pop
loope
adc
sub
lock
or
lcall
adc
ss
mov
lea
scas
pushf
mov
push
pushf
mov
std
push
xlat
xchg
push
add
enter
scas
dec
xlat
sub
movlps
loopne
mov
lock
cld
cli
insl
das
neg
ss
lods
dec
in
and
into
or
pop
pop
movsl
cltd
adc
lods
adc
test
insb
xor
jns
rcrl
adc
push
add
mov
pop
pop
scas
sbb
outsb
xchg
jbe
add
pop
aad
in
es
movsb
cmp
xchg
mov
sbb
shl
sbb
jno
sbb
sbb
jnp
clc
cmp
test
icebp
movsl
push
shlb
rcrb
mov
mov
sbb
inc
js
jg
jmp
jns
jge
imull
hlt
std
rcll
jne
xor
imul
fwait
and
aam
aad
sti
je
mov
jne
jo
xchg
dec
fdivrl
data16
int3
xor
push
mov
jo
inc
lcall
mov
lret
pop
orl
fcompl
hlt
das
rcll
sub
je
dec
arpl
into
stos
fcmovnu
test
pop
lcall
xor
negl
push
imul
jo
mov
scas
fwait
dec
testb
leave
cmpsl
jecxz
in
mov
iret
jb
dec
leave
cmp
dec
cmpsb
jge
push
jb
int3
sbb
fstps
xor
mov
mov
icebp
dec
mov
cltd
adc
lock
pop
out
mov
pop
adc
sbb
add
push
push
adc
or
jae
hlt
sub
sub
pop
xor
inc
std
or
cli
jno
mov
pop
mov
mov
adc
mov
mov
pop
fimull
fnsave
mov
mov
push
sbb
call
pop
std
lock
push
add
mov
imull
adc
fwait
cwtl
mov
js
adc
leave
or
and
enter
fcompl
pusha
loopne
jnp
fstl
notl
test
int
pushf
inc
movsb
push
andb
gs
cmp
in
inc
adc
imul
and
sbb
movsb
and
fmuls
xchg
jns
pop
idivl
cmc
xor
movsl
hlt
and
lods
sbb
sbb
sti
and
push
fmulp
icebp
add
jno
lahf
cmp
pop
cmp
inc
fwait
popf
aam
push
cli
movsl
or
dec
fldenv
fcompl
sub
or
lea
lds
cmc
decb
mov
filds
adc
sub
push
mov
out
jbe
lret
jge
add
jge
leave
mov
scas
pop
fidivs
xor
inc
push
das
inc
and
lret
and
fmuls
xchg
jp
push
cli
jge
nop
daa
popa
or
out
es
icebp
sbb
push
call
fwait
cmp
push
inc
push
sbb
js
jne
hlt
int
outsl
stos
pop
mov
insb
nop
or
adc
xchg
imul
or
bound
icebp
xchg
mov
or
test
add
adc
add
pop
ja
scas
sub
adc
lds
push
xchg
insb
pop
mov
test
xor
in
and
sub
cmp
pusha
sbb
das
ljmp
gs
pop
mov
and
out
xchg
dec
sbb
mov
loop
mov
ss
dec
nop
fdivr
cmpl
jmp
outsb
push
mov
add
mov
das
or
adc
mov
jp
cltd
mov
xor
sbb
mov
xchg
jne
mov
jmp
scas
lds
pop
xor
inc
lret
or
cmp
jno
xchg
jb
nop
jl
fucomp
loopne
dec
movsl
cld
ja
pop
mov
setl
or
pushf
xchg
pushf
fcompl
jl
ja
lret
jae
cmp
nop
and
add
out
rcrb
rorl
mov
popf
mov
xchg
fidivl
xor
xchg
sbb
pop
out
push
xchg
pushf
loop
test
fisubrl
pop
stos
outsl
lcall
add
jnp
dec
stos
pop
fstp
insb
imull
repz
icebp
pop
hlt
setge
fwait
xor
int
xlat
dec
ljmp
movl
imul
shll
inc
jo
adc
push
xchg
inc
dec
lock
push
add
mulb
cmpsl
lock
ljmp
adc
outsb
jl
cmovp
xchg
jle
lcall
test
je
movsl
inc
scas
mov
cmp
jmp
outsb
push
mov
leave
mov
add
cmp
ds
icebp
testb
scas
pop
jo
jg
add
push
scas
xchg
popf
mov
icebp
scas
push
in
mov
inc
scas
mov
inc
bound
loop
cmp
lcall
jb
roll
push
cmp
pop
cld
jo
test
jl
jo
or
out
std
push
lcall
jle
xchg
add
hlt
out
add
mov
test
mov
jle
or
and
and
or
jno
push
xor
mov
movsb
sbb
sbb
jmp
outsb
push
mov
dec
mov
rcrb
add
sahf
hlt
adc
icebp
or
cmp
insl
pop
sbb
jno
arpl
sbb
sar
mov
jno
cs
jb
rcrl
pop
rorb
xchg
nop
xor
in
mov
jb
sub
push
cs
jle
movsb
in
add
in
cltd
inc
adc
mov
inc
cmp
ret
sbb
push
push
jmp
and
mov
fstl
cld
jno
sbb
dec
int3
mov
cmp
cmc
fisttpll
movsb
mov
push
pop
cld
rcl
push
mov
fwait
daa
mov
or
dec
mov
pop
pop
js
lahf
sub
daa
shlb
and
sbb
jp
xchg
aam
inc
pop
jecxz
cli
mov
lret
ljmp
mov
mov
jge
adc
scas
pop
add
out
das
and
cs
mov
xlat
jle
fnsave
cmp
pop
and
xchg
std
adcl
or
sub
sbb
xor
push
negb
ds
leave
dec
fisttpl
xchg
cmp
call
lods
lahf
loope
jne
pop
sub
mov
std
lcall
jno
stc
popa
add
mov
in
mov
sbb
fsubrs
jo
mov
icebp
xor
cltd
adc
and
push
js
scas
std
pop
push
xor
sbb
xor
fwait
jns
leave
pop
dec
sub
sbb
sbbl
or
xor
fcoml
or
add
fsubrl
mov
scas
fstps
fs
rclb
sbb
cmpsb
cld
jl
mov
inc
test
mov
or
dec
mov
stc
lret
insb
dec
scas
cwtl
cmp
cli
ljmp
sub
leave
adc
ja
mov
scas
sbb
dec
lret
gs
lahf
ret
sbb
ss
sti
mov
ret
bound
hlt
es
and
insl
test
sub
dec
mov
cmc
adc
inc
das
rcrl
jne
sbb
add
pop
sbb
sbb
jbe
cli
fdiv
sub
das
scas
pop
push
xchg
xchg
sub
lahf
nop
cmpl
sbb
loopne
add
aaa
loop
cmp
dec
sahf
adc
cmp
ficoml
scas
jns
rorb
sub
inc
lock
xchg
outsb
movsl
out
mov
js
lods
pop
sbb
sbb
fdivrl
jo
cwtl
pop
cmp
outsb
stc
dec
mov
sbb
adc
cmp
jl
dec
in
shrl
cmp
shll
std
dec
xchg
push
mov
dec
jge
push
call
jnp
pop
sbb
rolb
and
sahf
std
mov
inc
or
scas
add
int
cmp
adc
and
fidivrl
pop
lock
std
push
xchg
movsl
push
cmp
push
or
pop
ja
mov
pop
jne
push
mov
test
test
inc
mov
aaa
fnstenv
push
xor
xlat
jno
mov
inc
out
adc
push
mov
mov
inc
pop
hlt
adc
bound
in
test
fstps
rolb
cltd
push
mov
push
sarb
scas
jbe
add
sarb
das
jo
lock
xlat
cs
nop
xchg
in
jmp
mov
mov
pusha
aas
jae
add
jecxz
and
cmp
adc
jne
jge
cwtl
cld
lahf
push
je
lahf
in
mov
shlw
scas
mov
cs
outsb
test
in
sahf
movsl
filds
xchg
les
xlat
fmull
cld
jge
dec
xchg
mov
mov
insl
inc
pop
out
push
lock
dec
sub
mov
lret
out
cmp
lret
mov
mov
loope
inc
dec
inc
lahf
data16
inc
out
inc
mov
cmp
pushf
xchg
add
mov
mov
sti
and
rcll
mov
jg
pop
lret
xchg
add
mov
addr16
sbb
sbb
fstpl
sbb
js
xor
sbb
icebp
out
mov
ror
test
sbb
jbe
dec
mov
sarb
and
test
jmp
ret
xchg
or
cmp
and
cmc
pop
mov
xlat
and
in
loopne
sets
jb
jmp
fstps
rorb
sbb
arpl
lods
pop
cmpsl
leave
pop
clc
out
mov
in
or
cmp
mov
sbb
aad
push
popf
lret
lods
enter
fadds
cli
jmp
sbb
mov
in
setb
xchg
cmp
cmp
push
sbb
or
into
cwtl
cs
xor
and
popf
popa
push
js
lret
fisttpll
inc
test
movsl
cltd
mov
clc
cmp
mov
or
and
jmp
movsl
outsb
mov
sub
movsl
pop
xchg
pop
xchg
ljmp
negb
pop
pop
push
sub
xchg
cwtl
scas
mov
jno
sbb
in
scas
dec
mov
outsb
cmpsl
mov
cmp
mov
inc
xchg
cmp
addb
int3
add
out
jb
push
xchg
inc
xlat
and
sbbb
addps
xlat
inc
out
icebp
or
or
cmpsl
push
xor
jno
pop
cs
inc
das
enter
aas
xor
das
outsl
cmp
jno
movsl
push
xchg
das
int
shr
push
mov
mov
cmp
mov
pop
dec
pop
mov
popf
fcomp
inc
test
lret
popf
jge
ja
mov
rcll
push
xchg
cmp
repz
out
lcall
sub
ss
mov
mov
adc
sbb
popf
std
mov
dec
xchg
cwtl
sbb
js
mov
outsl
or
int
cmp
mov
testb
sbb
and
cltd
push
fdivrl
sub
dec
cmp
nop
ss
jl
mov
mov
lea
fcmovne
mov
inc
in
lock
ja
xor
or
mov
add
flds
aas
mov
fsubs
icebp
repnz
mov
adc
mov
inc
sbb
xchg
fmuls
inc
clc
xchg
and
lea
or
add
jo
push
call
fcmovnu
das
gs
push
xchg
jge
push
jg
pop
insb
or
pop
rcll
loope
mov
mov
mov
dec
pop
mov
push
nop
and
cld
jno
push
pop
xchg
les
outsl
popa
dec
lahf
aas
arpl
stc
push
lds
xchg
push
icebp
sbb
sub
sbb
mov
popa
pop
in
stos
jbe
add
sub
ljmp
sbb
and
scas
sbb
das
fdivl
cltd
fdivl
mov
pop
sbb
lret
mov
mov
jmp
xchg
mov
dec
int
scas
insb
inc
fiadds
or
popf
xor
das
push
lret
cwtl
push
ficomps
pop
push
enter
rorb
push
aas
fsubrs
inc
push
jno
test
aam
int
sbb
movsb
xchg
jp
or
jo
sahf
and
or
jp
dec
rcl
mov
les
push
pop
cmp
lds
cltd
repz
mov
fcompl
sbb
fiaddl
dec
in
adc
mov
cli
fmul
pop
pushf
insl
pusha
aad
cli
push
jle
icebp
popl
push
out
subb
je
aad
popl
aad
cmp
xchg
cmpl
jecxz
pop
outsb
push
xor
pushl
std
icebp
xor
mov
mov
ds
movq
das
sbb
jl
scas
jae
inc
pop
fcompl
cs
jno
fcmovbe
push
mov
insl
out
aaa
jno
adc
jg
fwait
sbb
jmp
sahf
iret
push
inc
xor
jp
pop
push
mov
push
mov
cmp
ret
xchg
or
pushf
movsb
pop
and
xor
add
and
or
add
push
mov
into
cmp
xchg
hlt
adcl
mov
popf
mov
xor
popa
pop
cltd
int
fwait
jg
mov
popa
jnp
jo
into
pop
in
cltd
fmull
xchg
jns
sarb
sbb
sbb
icebp
mov
or
int
jno
pop
mov
pop
xchg
out
push
xor
push
rcrb
push
stos
sbb
push
outsl
add
ret
cltd
push
pop
test
jns
mov
push
cmp
cmp
mov
xor
mov
pop
push
cs
lock
shlb
outsb
mov
inc
and
int
cmp
pop
test
jns
insl
repnz
pop
inc
fisubl
xor
pop
or
repnz
imull
shr
push
mov
jae
push
xchg
push
std
ficomps
mov
mov
fistps
ret
jl
lret
jp
fs
das
pop
stc
inc
and
fimull
mov
mov
test
mov
test
sbb
mov
sbb
cwtl
or
fildll
sti
scas
les
lds
mov
xor
push
into
and
cmp
dec
in
jnp
sbb
pusha
lea
mov
mov
mov
imul
mov
cld
and
inc
outsb
ja
fwait
jge
jo
insl
and
lcall
scas
aaa
pusha
xchg
add
dec
scas
add
adc
mov
das
notb
mov
aad
aas
mov
mov
arpl
std
lret
out
call
rcrb
xchg
push
pop
scas
cmp
pop
xlat
in
stc
mov
ss
lret
push
dec
mov
xor
aad
sub
int
jns
rcrb
fsubr
push
cmp
pop
xchg
jno
mov
lcall
mov
sub
mov
sarl
loope
or
insb
repnz
and
outsb
fistps
or
in
pop
mov
adc
pop
add
inc
in
cmp
push
mov
mov
pop
pop
fadd
cmp
pop
pop
add
mov
in
and
clc
outsb
mov
out
mov
adc
cwtl
sbbb
aas
loope
pop
jns
sbb
js
icebp
or
sub
cld
lock
pop
outsb
sub
shrb
jno
and
lcall
xchg
icebp
in
xchg
movsl
cmp
inc
lahf
jbe
or
sub
and
xlat
cmp
xlat
dec
jbe
mov
xchg
sub
pop
arpl
sub
rolb
push
push
push
and
adc
xchg
pop
xor
pop
pop
or
ja
mov
push
xor
cs
stos
enter
movsl
mov
icebp
push
mov
mov
cli
jnp
or
inc
imul
pop
je
rolb
cs
cmp
out
nop
imul
int3
cmp
cltd
mov
pop
mov
xchg
lock
movsl
or
ds
push
popf
jmp
out
mov
pop
out
rclb
xchg
lock
jp
sub
add
cli
imul
lcall
or
xchg
das
fcomi
ret
movsl
pop
jae
push
jnp
jae
loope
jle
shlb
xlat
scas
jae
sarb
xchg
jle
jp
scas
je
or
jae
pop
push
fcompl
repnz
push
pop
sub
sbb
inc
cmp
adc
aaa
out
int
jp
or
sub
fistl
xchg
icebp
enter
scas
rcl
push
cmp
ja
push
pop
xchg
xchg
push
addb
add
lock
pop
das
rcr
xchg
outsb
fcomps
jbe
outsb
mov
leave
dec
enter
jo
scas
push
bound
notb
mov
ds
fisubl
jl
mov
or
mov
push
sbb
cs
scas
lds
xchg
cwtl
mov
cld
sti
mov
pop
sbb
test
dec
cltd
sub
jne
mov
inc
cmp
in
pusha
test
dec
adc
mov
push
shlb
xor
pushf
popa
outsl
cld
cld
jno
mov
mov
pcmpgtw
mov
fidivrs
pop
push
lret
mov
movsb
adc
lds
stos
sub
sbb
sbb
movsb
fstps
ret
mov
or
adc
adc
aaa
add
or
and
cmp
jp
mov
sbb
bound
sub
les
mov
add
and
adc
xor
fstpl
mov
lea
adc
pop
sub
pop
out
inc
and
in
jge
push
insl
inc
andb
mov
xchg
pop
orb
popl
pop
icebp
lret
icebp
cld
push
jns
fdivrs
pop
scas
push
jl
sti
pop
clc
lret
sbb
dec
xchg
and
dec
fstps
and
ljmp
mov
dec
inc
fldenv
hlt
jo
jne
mov
pop
add
outsb
fsts
or
mov
jbe
mov
push
cld
sbb
call
xchg
fcmovnb
push
cmp
test
cmovne
int3
pop
xchg
aam
mov
es
popf
cs
and
adc
out
into
repz
push
adc
andb
or
sub
add
insl
enter
push
jmp
jnp
imul
sub
je
arpl
mov
xor
mov
adc
scas
sbb
pop
inc
repz
bound
lcall
movsl
push
xchg
xchg
stos
push
push
jno
sub
mov
push
and
or
das
and
scas
mov
pop
fwait
sub
movsl
das
mov
inc
cltd
sbb
xchg
sbb
es
mov
aad
test
lock
das
jge
pop
xor
aad
or
or
xchg
and
fbld
push
mov
scas
sbb
sbb
inc
push
inc
cmc
js
leave
popf
adc
mov
and
or
pop
cli
and
and
xchg
sbb
lcall
or
or
xchg
mov
das
or
dec
cmp
shl
inc
nop
sarl
test
pop
xchg
cld
and
repnz
mov
sbb
pop
cmp
xchg
inc
xchg
scas
or
movsl
adc
or
xor
mov
fnstsw
pop
mov
loope
and
pop
std
and
sbb
sbb
test
das
js
leave
mov
push
lea
or
dec
scas
repz
or
mov
sbb
adc
js
aad
and
mov
and
sbb
iret
das
xchg
jle
sarl
sbb
das
jae
xor
jae
popa
repnz
cmp
jae
cmp
xor
mov
cmp
shl
inc
nop
sarl
jp
incl
xor
and
adc
mov
fwait
das
inc
or
cmp
shl
pop
nop
sarl
scas
and
mov
shl
ret
nop
sarl
xor
inc
mov
mov
mov
dec
das
jae
xor
jae
popa
repnz
cmp
jae
xor
jae
popa
repnz
sbb
movsl
sbb
sub
div
adc
jecxz
cmpsb
xlat
pop
neg
aas
mov
push
sub
es
scas
divb
and
cmp
scas
cmp
idivl
adc
push
mov
das
xor
stc
xor
out
es
das
sub
sbb
repz
sbb
sbb
and
sub
jmp
sub
in
std
sub
std
add
ds
add
inc
std
add
std
cmp
sti
mov
cmp
pushf
aaa
pushf
clc
pushf
cmp
loop
cmp
cld
or
or
or
repnz
xor
hlt
push
xor
out
es
call
leave
sub
in
in
in
in
in
add
dec
sbb
scas
adc
mov
pop
and
inc
call
sbb
inc
adc
cmp
or
lods
rorb
push
xor
das
in
add
aam
xchg
jnp
sub
dec
pop
inc
mov
std
ret
add
rorb
jecxz
flds
and
mov
flds
dec
pop
mov
mov
jp
xor
xor
addr16
mov
xor
es
sbb
cmp
popa
lahf
cli
mov
cmp
add
in
pop
jne
mov
jp
les
push
in
push
xor
movsb
and
push
leave
xor
sub
incb
pop
insb
shll
andl
mov
bound
scas
xor
jbe
sub
push
addr16
mov
xor
sarl
jns
icebp
movsl
icebp
ss
cmp
xchg
int
cmp
das
ficoml
mov
or
dec
ja
gs
pop
rep
rorb
add
xor
inc
adc
xor
cltd
out
and
push
pop
scas
and
mov
push
xchg
xor
adc
jno
std
imul
push
fsubr
push
outsb
test
jo
movsb
xchg
mov
xor
or
push
mov
dec
push
out
mov
aam
adc
add
je
fs
sbb
fistl
inc
shl
jp
sti
xchg
cltd
mov
jne
or
negl
mov
jne
xor
cmp
rorb
int
xlat
cmp
cwtl
int
dec
sbb
lcall
dec
mov
js
cmp
sbb
and
mov
aas
fildl
cmpsl
mov
push
pop
jns
jle
aam
cltd
adc
jno
pop
aam
andb
pop
pop
movsl
bound
ja
fld
fiaddl
lods
add
jo
and
jbe
add
fldcw
loop
pop
cwtl
and
push
pop
movsb
fstl
mov
and
fdivr
scas
loope
in
push
and
jl
or
jbe
pop
mov
jecxz
mov
andl
push
setl
mov
and
jle
enter
fstpt
mov
adc
add
jae
sub
inc
xchg
out
xor
lahf
xchg
pushf
int3
sbb
sbb
jge
push
xchg
icebp
sub
and
lods
sbb
loop
das
movsl
jo
inc
xor
mov
iret
xchg
sbb
push
mov
xchg
in
pop
fistps
insb
sbb
nop
clc
pop
insb
cld
mov
fsubrl
pop
pop
sqrtps
adc
inc
out
jno
xchg
inc
mov
jl
out
add
mov
out
cltd
mov
xchg
pop
out
xchg
clc
int
mov
dec
popf
xchg
lds
mov
or
pop
popf
sub
cmpb
xchg
fninit
stc
pop
mov
adc
pop
pop
lahf
xchg
mov
test
and
and
fldt
dec
mov
mov
dec
punpcklbw
sbb
cwtl
insl
and
xchg
lahf
and
mov
sub
lods
es
clc
dec
out
fnstenv
mov
sub
lcall
adc
adc
popf
into
mov
sbbl
pop
scas
mov
pop
addl
push
in
iret
into
mov
pop
cltd
test
jns
push
jmp
std
push
xor
pusha
xchg
rcrb
test
test
sar
sarb
fstpl
fisubs
and
inc
and
xor
pop
pop
mov
cltd
xchg
xchg
mov
outsl
pop
adc
xchg
out
and
jecxz
and
icebp
add
xchg
pop
push
pop
popf
scas
or
adc
xchg
stc
cmpb
cmp
dec
or
das
repz
lret
and
adc
out
or
out
pop
pop
dec
mov
add
adc
dec
xor
cmp
mov
repnz
or
sarl
mov
repnz
or
xchg
mov
repnz
or
sarl
mov
repnz
or
rcrl
dec
or
sarl
mov
repnz
or
sarl
mov
mov
cmp
mov
repnz
or
sarl
mov
jns
cmp
mov
repnz
or
sarl
mov
repnz
or
adc
repnz
or
sarl
mov
repnz
or
rcrl
dec
or
sarl
mov
repnz
or
mov
lea
pop
jae
mov
xchg
fiaddl
sti
pop
cwtl
jg
cmp
cmp
sbb
jnp
sti
scas
stc
cltd
lock
lret
std
daa
lea
inc
mov
sti
sbb
cltd
pop
xchg
lcall
lock
jbe
outsl
mov
divb
sub
inc
movsl
sbb
loop
fidivrl
add
stc
fcmovbe
cmp
popf
loop
and
jmp
lods
das
pop
jnp
sbbl
jns
and
test
dec
shrb
sub
cld
add
xchg
pop
loop
sbb
es
mov
fstps
inc
push
loop
fs
les
int
scas
das
cmpb
jl
push
scas
or
and
movsb
jecxz
push
mov
sub
lods
mov
sbb
scas
adc
andb
sbb
lret
mov
decb
outsl
insb
pop
dec
stc
enter
mov
pop
mov
pop
fwait
leave
cmp
icebp
divl
int
data16
pushf
mov
inc
pop
movsl
outsb
cltd
pusha
pop
loopne
mov
sub
aad
aas
add
ret
shll
mov
std
lcall
mov
std
jp
rorb
mov
clc
std
and
pop
xchg
sbb
xchg
push
xchg
out
mov
cltd
stc
ss
pop
fwait
test
int3
aas
cmp
std
xchg
loop
sbb
loop
mov
cmp
stc
jno
mov
pop
fwait
test
test
push
scas
sub
lods
lahf
in
mov
inc
sarl
inc
int3
pop
and
jns
jno
ljmp
shlb
jnp
loop
mov
jb
test
shlb
cmp
lods
ds
mov
pop
push
repnz
aas
repnz
das
or
inc
lar
cmp
adc
fsub
out
cmp
add
into
cld
xlat
ret
xchg
cwtl
inc
mov
jge
ds
jmp
repnz
ds
cs
js
das
inc
fnstcw
mov
cltd
xchg
jno
sbb
mov
jl
ficomps
mov
xchg
testl
xchg
pusha
sti
rcl
cmp
aaa
les
cltd
mov
mov
pusha
outsl
mov
sbb
xchg
jo
add
push
lock
push
xor
xchg
mov
mov
pop
push
xchg
lcall
ret
shlb
movsl
sbb
aad
jmp
movsb
push
pop
and
rcll
ds
lahf
scas
scas
or
movsl
xchg
xchg
mov
adc
jg
mov
cld
setbe
incl
cs
xorb
aaa
dec
xchg
xchg
or
aam
adc
mov
out
jle
xchg
sub
loope
mov
xchg
scas
shr
scas
jnp
add
scas
and
rorb
mov
mov
sbb
testl
mov
in
repnz
adc
inc
in
jp
jg
cltd
outsb
fiaddl
adc
jo
scas
lea
add
ret
jle
jmp
outsl
shll
fwait
jl
xchg
int
lret
sarl
scas
push
mov
outsl
adc
lods
pop
mov
inc
into
fs
mov
fcmovu
loop
cmp
pop
lahf
fimuls
mov
or
repz
nop
int
jg
fstps
das
outsl
ret
out
outsb
aaa
ficomps
push
out
xor
rolb
push
xor
push
push
test
mov
jno
jge
xchg
testl
jbe
mulb
adc
loopne
idivb
pop
push
lods
mov
jo
mov
xchg
insb
push
dec
int
jnp
call
ja
pop
sbb
cmc
scas
cmp
jmp
pop
testl
sub
xor
sub
xchg
sub
adc
fstpl
jae
mov
testb
mov
push
xor
iret
icebp
popa
bound
popf
and
out
mov
fmulp
mov
or
add
mov
lcall
das
movb
pop
or
jmp
jno
inc
mov
mov
fisubs
cld
add
mov
psllw
cli
mov
mov
mov
inc
ja
cmp
sahf
das
mov
or
or
jo
call
scas
jo
pop
push
je
fbstp
and
call
out
push
test
push
jmp
push
cld
fstl
jae
lock
jno
xchg
fisttps
xchg
mov
lahf
data16
repz
push
cmc
dec
fwait
inc
xchg
rorb
ret
mov
rclb
in
rcr
aaa
shlb
fdivs
mov
or
cpuid
lret
and
or
jo
or
in
scas
pop
popf
and
xchg
cltd
xor
jp
cltd
fadds
adc
sbb
adc
out
xor
mov
mov
jl
sub
or
cmpsb
mov
cltd
and
add
cs
bound
inc
mov
stos
xchg
mov
push
pusha
mov
mov
sbb
flds
or
inc
cltd
xchg
push
call
push
dec
cmp
inc
fwait
sub
out
mov
jnp
inc
movsl
loop
jnp
inc
sbb
inc
xchg
movb
jb
icebp
mov
jnp
cmp
mov
cmpsl
fdivrl
mov
mov
fstpt
cmp
cwtl
jnp
out
cmpsl
fdivrl
test
pop
fistps
lock
outsb
outsb
ret
or
insl
adc
xor
aas
jnp
adc
xchg
shll
add
rcr
mov
insl
jg
push
jmp
inc
jp
xchg
mov
jb
jg
pop
dec
aaa
xchg
adc
sub
sub
mov
pop
sbb
nop
or
or
or
fcoms
jno
mov
push
shr
mov
enter
jg
jno
sbb
mov
mov
xor
add
mov
scas
fists
das
int3
mov
fildl
adc
call
ja
pop
movsl
pop
sbb
outsl
sbb
pop
mov
push
pusha
xor
mov
xor
pop
mov
fwait
testb
fwait
cmp
and
mov
rorl
repnz
xor
mov
hlt
testb
lcall
pusha
sti
and
adc
cmc
sar
jno
lahf
out
pop
popf
negl
xlat
and
mov
push
call
aaa
fnsave
movsl
mov
jmp
fnsave
adc
das
sbb
sti
fistl
sbb
push
cltd
popf
sbb
or
inc
dec
frstor
push
stc
dec
frstor
jp
in
popf
insb
pop
movsl
into
adc
jne
sbb
fucom
cltd
fnstsw
and
xor
jno
sti
push
hlt
out
push
dec
iret
adc
adc
stos
cmp
cwtl
shlb
mov
xor
aad
push
inc
sbb
mov
std
xchg
andb
fldenv
shrl
imul
rolb
js
test
mov
scas
hlt
xor
cmpsl
or
push
dec
leave
xor
lods
push
out
mov
repnz
js
mov
xlat
shll
cli
dec
jno
adc
inc
lcall
dec
loope
cld
mov
ja
xchg
push
mov
insl
push
leave
jo
loop
adc
and
call
pusha
lea
jne
push
pushf
lahf
mov
push
lea
jmp
xchg
inc
push
mov
jb
jb
fcmovb
mov
mov
mov
dec
push
xchg
xor
mov
mov
sbb
stos
lret
fsubs
mov
clc
sahf
push
push
enter
mov
das
and
cld
rcrl
loop
mov
mov
adc
and
cmp
aad
sti
decl
inc
and
jmp
inc
and
jecxz
pusha
adc
mov
movw
lea
call
jmp
pushf
lea
call
jmp
lea
je
jo
clc
pusha
add
pushf
pushl
clc
call
push
push
movl
mov
pushf
mov
mov
lea
jmp
push
in
mov
inc
xor
add
fisttps
sbb
lret
xor
or
sti
fisubrs
and
aaa
and
dec
test
dec
mov
sub
rcll
pop
movsb
out
sub
cmp
mov
fdivrl
push
mov
pop
or
imull
je
xchg
dec
push
or
pmaxub
xchg
pushl
lods
pop
cmp
add
xorl
pusha
jns
mov
stos
ja
in
les
inc
and
inc
lea
jb
pusha
cmc
pusha
cmp
jmp
jne
pusha
pushl
call
sub
mov
test
clc
cmpb
pusha
lea
jne
inc
aam
mov
aam
xor
or
mov
setge
push
test
pushf
add
shr
xor
sub
inc
mov
clc
pushl
jmp
lea
jle
push
pushf
pushf
pusha
mov
lea
jmp
lea
call
pop
sub
out
sbb
movsl
in
cltd
inc
scas
clc
arpl
xchg
fsubp
xchg
shr
fsub
xor
stos
aam
pop
aas
push
cmp
cmp
pop
iret
xchg
loop
clc
lcall
fwait
push
mov
jns
sbb
cs
mov
jae
icebp
popf
push
fs
push
clc
les
neg
cmc
mov
cmp
pusha
stc
xor
bt
repnz
movb
call
call
jmp
inc
mov
stc
cmc
call
cmp
cmp
cmp
call
movl
push
push
movb
lea
jmp
pusha
push
lea
call
pusha
pusha
lea
jae
cmc
clc
sub
pusha
pusha
call
movb
mov
bts
push
mov
movw
stc
cmp
pusha
call
cmp
movb
call
xchg
pushf
jmp
sarb
pop
aas
add
jg
sarl
bound
pop
push
clc
les
push
pop
inc
xor
test
xchg
pop
jmp
add
pop
addl
add
adc
gs
mov
std
ljmp
jecxz
mov
xchg
test
outsb
loop
jp
daa
pop
icebp
mov
ret
inc
addr16
push
xchg
sarb
push
push
inc
pop
cmp
adc
xchg
jbe
testb
lret
rcr
into
outsb
clc
les
test
push
clc
add
ja
or
push
lea
je
clc
pusha
push
cmp
lea
pusha
push
pushl
ret
lahf
mov
les
scas
jae
mov
ror
ret
les
mov
mov
mov
les
mov
mov
mov
mov
mov
lret
mov
mov
mov
mov
jae
mov
lret
rclb
cltd
idiv
cmp
sub
pusha
push
rep
pop
mov
push
lea
jmp
jmp
xor
push
or
push
loope
sub
ds
jp
push
sub
sbb
xchg
xchg
rcll
fimull
int
pop
cld
lods
cmc
es
cltd
stc
mov
pop
outsb
data16
data16
xchg
xchg
sbb
sub
and
js
and
cmp
loope
sbb
mov
fwait
lock
xchg
and
stc
imul
lret
test
test
mov
sub
sub
test
pop
dec
sbb
ja
pop
cmp
loope
mov
subb
xchg
movsl
mov
or
adc
outsb
jp
test
mov
scas
inc
mov
jmp
inc
and
jl
xchg
and
ret
or
decl
and
ja
rol
inc
setno
not
sub
bswap
shl
add
ror
cmc
test
neg
mov
rol
mov
cmp
push
mov
repnz
mov
pushf
call
jmp
decb
scas
adc
cwtl
decl
mov
lret
mov
insl
adc
cmp
push
and
aaa
jecxz
cmc
pop
lret
xchg
xchg
xchg
clc
sahf
addr16
adc
imul
mov
cmp
clc
les
add
push
xchg
popf
dec
popl
das
clc
xor
mov
xchg
pushf
roll
inc
repz
add
pusha
xchg
std
test
mov
or
xchg
les
std
dec
iret
fldenv
jecxz
pop
jg
scas
pop
loope
sbb
lea
pop
cmp
popa
xchg
add
ret
call
fldenv
lret
jecxz
es
lods
jns
pop
or
cmp
pop
push
jg
faddl
clc
les
mov
and
aam
aad
movl
pushl
pushf
lea
jmp
call
pushf
push
lea
jae
or
mov
inc
bts
and
mov
dec
shl
mov
mov
clc
xor
call
mov
bswap
mov
call
cmp
pusha
call
jnp
jbe
add
push
leave
xchg
js
add
mov
push
mov
adc
leave
mov
pop
jp
xchg
cmp
push
iret
adc
int3
jno
mov
sbb
xor
clc
rcrb
sbb
lock
ss
mov
movsl
vcvtsd2ss
push
pop
push
fistpll
lahf
sub
ljmp
sub
push
adc
daa
aaa
xchg
sub
rcr
lret
pop
movb
popl
out
outsb
lea
pop
incb
fwait
or
inc
rcrb
jmp
sbb
push
nop
pop
cmp
out
testb
inc
mov
cmpsb
sub
mov
xor
dec
call
nop
sbb
in
cmc
cmp
ud1
push
stc
sbb
or
enter
cmp
fidivrl
dec
jmp
push
insb
pop
lret
hlt
shr
sahf
add
imul
add
fmull
cli
es
ret
sarl
and
dec
addl
push
cltd
rorl
in
jp
je
mov
out
cmp
daa
jle
icebp
lahf
pop
popa
xchg
pop
outsl
scas
scas
aad
dec
sbb
or
call
popa
nop
mov
sbb
testb
jbe
clc
les
dec
std
call
iret
les
or
push
movb
push
lea
jmp
bsr
mov
or
not
rcr
dec
mov
bt
sub
pushf
repnz
jmp
rcrl
daa
xchg
out
sbb
sarb
push
sbb
pop
cmp
lret
mov
mov
movsb
lock
pop
les
rcr
adc
in
mov
arpl
jb
sub
shlb
or
leave
ja
mov
clc
les
lds
sti
in
sbb
cmp
ljmp
fcmove
call
xor
out
xchg
jae
pop
cmp
pop
fstpl
pop
lret
in
dec
pop
clc
sahf
sbb
out
inc
pop
or
fidivs
js
jae
lret
adc
sub
clc
les
jl
add
call
lea
je
call
test
jmp
bt
cmp
pusha
pushf
mov
jmp
mov
pushf
pushf
pusha
lea
jmp
or
pushf
pushl
lea
jne
inc
shrd
mov
jmp
cmp
cmp
pushf
lea
ja
shl
rol
pusha
sub
btr
dec
sar
add
add
bswap
mov
shl
shr
mov
cmc
bt
repnz
call
push
push
movl
pusha
pusha
push
mov
lea
jmp
pushl
lea
je
mov
pusha
jmp
jp
xchg
pusha
xchg
scas
pop
sub
or
xchg
mov
push
ret
xchg
mov
ret
test
lds
les
mov
cmp
stos
scas
mov
pop
lret
stos
nop
adc
sbb
nopl
cmp
mov
lret
mov
sbb
call
jl
lahf
es
inc
loopne
imul
mov
dec
cmp
cmp
jae
xchg
fimuls
xor
push
mov
clc
les
movsbl
pushf
lea
jle
push
lea
call
call
push
pushf
lea
jne
bsr
mov
or
not
ror
shrd
sub
not
movzbw
jmp
jbe
pusha
lea
jae
call
dec
sbb
repnz
sti
fsubrl
xlat
jle
xor
lds
mov
pop
popa
repz
lock
or
lahf
push
fimull
xchg
loopne
xchg
mov
pop
adc
pop
faddp
xor
pop
push
pusha
add
or
cmc
roll
mov
jmp
mov
push
clc
xchg
dec
mov
lods
fsubrl
nop
fildll
xchg
cmpsb
mov
les
lea
jae
setp
mov
clc
or
cmc
rol
mov
sub
mov
cmc
cmc
cmc
push
sub
movw
pusha
call
pusha
lea
ja
inc
shl
adc
push
sub
clc
bswap
sub
sub
add
clc
or
add
rol
mov
add
mov
cmp
repnz
call
pushl
pushf
mov
pushf
pushf
lea
call
pushf
pusha
mov
pushl
mov
push
movw
lea
jmp
pushf
pusha
lea
je
push
pushf
sub
jmp
cmc
test
and
movb
add
pushf
lea
jmp
pop
gs
das
add
pushf
nop
cmpsb
jo
inc
lea
and
pop
out
sbb
or
jb
and
sti
add
adc
leave
push
lds
ds
addr16
cs
dec
mov
clc
lods
dec
pop
clc
push
push
xchg
movsb
mov
sub
cmpsb
outsb
and
or
outsl
lcall
xor
inc
int3
or
cmp
xor
dec
fwait
stos
cwtl
test
bound
jle
pop
cmp
and
sub
stos
pop
mov
mov
dec
mov
xor
les
div
jmp
mov
cmp
je
adc
pusha
push
call
push
pusha
sub
xorb
dec
nop
js
ljmp
rcr
insl
sti
loopne
aad
xchg
stc
es
pop
cmp
hlt
add
adc
clc
sahf
fcomip
jbe
aad
pop
adc
dec
test
cs
adc
mov
popa
in
pop
out
clc
les
sub
mov
push
rcrb
inc
into
cmp
imul
nop
fwait
and
push
xor
lret
out
pusha
sbb
pop
stos
inc
cwtl
fldenv
mov
pop
xlat
out
dec
cmp
mov
xchg
xchg
and
ljmp
sbb
gs
cld
pushf
ret
jecxz
lods
bound
bound
cmc
cli
cmp
cwtl
mov
shll
jp
cmc
ret
iret
pop
cmp
in
xchg
xorl
mov
addr16
cmp
xor
xchg
mov
cmc
ror
mov
push
call
ja
jno
int
scas
add
inc
popa
insl
pop
and
stc
fs
sahf
dec
jb
pusha
sbb
fchs
xor
shll
or
nop
je
std
jno
pop
lret
sub
aam
in
es
std
mov
xor
pop
addr16
lods
mov
roll
clc
les
fs
je
stc
sub
cmp
cmp
cmp
pusha
call
pusha
cmpb
pushf
call
cmp
pusha
add
mov
movb
mov
lea
jmp
jmp
cli
dec
xor
add
pop
and
adc
sub
pop
jecxz
push
jl
push
mov
repz
mov
jecxz
hlt
rcll
push
lahf
cs
jnp
sarl
stc
fsts
cwtl
fsubrs
mov
icebp
pop
aas
or
lock
repnz
and
cmpsl
not
adc
adc
imul
jl
test
lret
shlb
stos
ja
adc
cmp
push
sub
jg
and
movsl
push
loope
clc
les
add
mov
ljmp
mov
push
and
addl
sar
sub
repz
xlat
test
jp
mov
mov
adc
xor
shrb
push
and
jmp
aas
add
mov
inc
movsb
add
pop
or
cmpsb
mov
push
pop
addr16
jo
cmp
movsl
or
mov
push
rcl
repz
les
ds
cmp
pop
cmp
movsb
gs
jg
sbb
sub
push
fldenv
cwtl
add
addr16
les
or
popf
mov
mov
cld
faddl
cmp
jbe
inc
push
jno
push
xchg
inc
stos
lahf
stos
and
pop
into
sbb
clc
les
test
movzwl
add
sbb
cmp
mov
test
add
clc
pusha
stc
mov
pushf
test
pusha
mov
lea
je
clc
cmp
cmc
add
cmc
stc
cmp
call
call
movzwl
shl
rcl
mov
clc
mov
add
movw
pushf
pushf
test
mov
movb
clc
cmp
test
mov
lea
je
test
pushf
pusha
pusha
add
movb
jmp
mov
xchg
mov
dec
mov
lahf
mov
xchg
daa
jl
sbb
outsl
iret
andb
xor
sbb
lea
xor
mov
int3
or
stc
push
shrl
pop
mov
fwait
cmp
adc
test
fs
mov
mov
sbb
pop
jns
pop
fmul
imul
call
ja
call
jl
int
jecxz
push
mov
mov
inc
scas
cmp
inc
inc
fsubrp
pop
cmp
pop
ret
loop
mov
pop
push
adc
ficoml
out
xorl
das
xchg
orb
cs
xor
pop
movsl
jecxz
mov
dec
loop
pop
stc
std
popf
sbbb
xchg
jg
clc
les
inc
and
cmp
cmp
mov
xchg
or
sub
and
pop
cmp
adc
test
push
repz
sti
or
aad
outsl
jl
clc
les
pushf
call
adc
popf
lds
mov
rcr
push
dec
clc
lds
gs
cmp
in
mov
or
pop
mov
pop
sub
jmp
jg
data16
fstl
add
and
cmp
repnz
inc
cmp
and
in
clc
cmp
xor
mov
xchg
or
ds
pop
enter
pop
lret
jp
daa
clc
les
movl
mov
pusha
pushl
movb
lea
jmp
call
mov
movl
call
lea
ja
push
pusha
pushf
push
lea
jmp
cmp
jbe
sbbl
subb
pop
sub
cmp
mov
rcrb
xor
js
int3
cwtl
testl
hlt
add
lret
mov
push
stc
stc
fucom
inc
shll
mov
jge
js
push
jle
mov
push
clc
les
pop
or
jmp
fcoms
xor
mov
or
lea
ja
jmp
pushf
dec
jmp
in
sbb
outsl
add
shll
cld
xchg
clc
test
dec
or
cwtl
mov
adc
pop
inc
aaa
les
fucomip
sti
xchg
fld
push
xchg
push
call
xchg
xor
sub
andl
mov
pop
cmp
xchg
fs
popa
mov
inc
fistpl
xchg
shlb
push
es
and
sbb
les
lcall
int3
lea
je
cmc
pushf
push
add
stc
cmp
push
pusha
jmp
pusha
call
add
add
mov
push
sbb
dec
jecxz
jnp
mov
daa
das
frstpm(287
outsl
ja
imul
shlb
out
xor
hlt
adc
xchg
add
loopne
xchg
das
ljmp
ret
ss
inc
dec
xchg
xchg
int
push
cltd
adc
jb
int
cmpsb
sbb
aaa
and
mov
dec
mov
mov
mov
xor
lea
xchg
scas
std
mov
lods
push
or
mov
and
rcll
xor
out
loope
mov
popa
xor
cmp
mov
movsb
fcoms
mov
bound
pop
sar
sahf
rcl
lock
bt
pusha
test
or
movw
push
call
movw
call
movl
pushf
movb
pushf
movb
lea
jmp
pusha
movl
lea
jg
push
push
movb
pushf
lea
jmp
jmp
mov
lahf
cwtl
movzbl
lea
pusha
pushl
mov
call
movb
bswap
pushf
mov
lahf
jmp
pushl
lea
ja
jmp
popf
rdtsc
nop
pushf
push
call
cmp
jmp
call
roll
or
pop
cmc
cmp
cmpsl
jbe
in
mulb
dec
mov
je
shrl
add
stc
push
push
ds
or
bound
push
xchg
cltd
rclb
into
aas
add
inc
pop
cmpsl
xchg
mov
adc
xchg
jae
cmp
pop
dec
cmpb
sbb
scas
fucomi
add
add
cs
sbb
int3
jo
dec
sti
daa
cld
push
mov
jae
add
bound
ja
push
mov
ret
sbb
jo
ja
dec
inc
jmp
cmp
pop
mov
mov
mov
push
jnp
push
mov
andb
and
add
cld
ror
jne
or
pop
adc
xor
mov
xor
jnp
in
popw
cmp
add
xchg
mov
and
outsl
cld
lods
std
clc
les
into
pop
or
add
jmp
repnz
and
adc
leave
mov
push
xor
fnstenv
pusha
xchg
fs
jecxz
ss
icebp
xchg
xlat
int
push
inc
rcrb
cmp
std
rcll
xor
dec
sbb
mov
sti
pop
aaa
add
mov
icebp
mov
lock
inc
sub
xor
or
push
pop
cmp
add
xchg
jo
mov
iret
sbb
push
push
pusha
nopl
sbb
les
test
incl
stc
clc
sub
pushf
pusha
stc
repnz
mov
lea
jno
pushf
push
lea
jne
and
rcl
bswap
mov
adc
shld
cmp
shrd
sub
pusha
not
inc
lea
pusha
jmp
cmp
jmp
sti
jle
xor
xchg
sbb
xchg
fucomip
jne
repz
aaa
mov
sbb
cltd
pop
cmp
iret
push
sahf
sahf
shl
call
and
add
insl
sbb
clc
les
cwtl
push
cmc
cmp
push
movb
push
pushl
lea
jb
jmp
call
movb
jmp
push
pusha
movl
lea
jns
push
pushf
movw
pushf
lea
jmp
pushf
pushf
pushl
popl
mov
pushf
movb
push
pushl
ret
test
mov
xchg
xor
rcrb
and
jae
imul
paddw
clc
cld
pushf
add
shll
repz
in
mov
pop
inc
js
scas
rclb
lds
sub
cmp
out
stos
cld
test
push
movl
test
push
inc
push
jo
dec
pop
lret
test
dec
jns
repnz
and
adc
inc
dec
xor
jb
dec
push
loop
add
mov
cs
clc
les
insb
and
pusha
pushf
mov
pushl
ret
jmp
mov
dec
cmp
add
stos
sahf
test
mov
lret
push
jge
int
add
mov
leave
mull
aam
clc
aam
outsb
icebp
adc
mov
dec
xor
jb
call
mov
and
or
pop
jb
ror
sub
pusha
mov
xor
addr16
mov
dec
lret
pop
sub
and
lret
ja
push
loopne
pop
cmp
insb
mov
or
jmp
cs
sbb
cmp
or
push
xorl
shr
mov
gs
das
jle
clc
les
xchg
sbb
mov
mov
in
mov
stos
sarl
enter
movsb
loopne
mul
mov
flds
xor
inc
out
and
insb
mov
pop
les
subb
push
loopne
roll
jge
dec
xchg
ret
mov
adc
inc
clc
les
inc
mov
test
stc
cmpb
push
jmp
cmc
pusha
cmp
sub
lea
jmp
push
cmpsb
mov
cmp
xor
shrl
sub
mov
and
push
mov
and
xchg
add
mov
push
jns
push
pop
or
rorb
push
xchg
xor
push
movsl
add
cwtl
jae
add
addr16
out
inc
jae
outsb
or
sbb
out
push
sub
dec
xchg
mov
fldl
call
xchg
movsb
std
movsb
sub
sti
out
lcall
ja
dec
push
call
movsb
sub
adc
inc
in
in
lea
and
or
test
lret
test
insb
xlat
inc
adc
rcl
cmp
sbb
xchg
iret
sub
movsl
pop
sbb
mov
das
pushf
cmp
mov
test
enter
call
xchg
add
or
popf
ret
pop
sub
out
xchg
fwait
cmc
fdivrs
adc
cmp
and
and
out
jecxz
hlt
sub
add
pop
sub
inc
les
fs
sti
cmp
xchg
stos
out
cmp
sub
movsl
mov
xor
out
mov
ljmp
les
bt
shrd
mov
test
clc
cmpb
call
pushl
popl
mov
pushf
pushf
pushl
ret
xchg
push
dec
test
bt
pushf
call
add
pushf
push
sets
shl
mov
jmp
jmp
push
lea
call
call
jo
sub
lret
sbb
push
test
mov
mov
pop
sbb
mov
lret
arpl
fstpl
jle
cmpsb
mov
cmp
movsb
outsb
cwtl
test
mov
dec
jecxz
fsubrp
shr
sub
pushf
in
subl
pop
sbbb
clc
mov
scas
cmp
pop
pop
cmp
arpl
push
push
lds
push
or
call
mov
mov
xchg
jecxz
sar
cltd
push
lods
pop
movsbw
lea
call
jmp
in
jae
push
jmp
clc
and
cmp
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
movsl
ss
or
sub
sahf
data16
and
cmp
test
lret
jbe
inc
fimuls
negb
enter
push
test
fwait
sub
sub
pop
paddsb
cmp
pop
xor
sbb
jp
into
jg
adc
repz
loope
push
mov
push
and
xchg
xchg
cmp
outsb
adc
sbb
les
negb
insl
daa
or
sub
push
fiaddl
push
mov
mov
lods
std
push
cmpsb
pop
daa
mov
movsb
add
test
mul
push
loope
cmp
push
add
jle
pop
jmp
ss
aas
incl
mov
lcall
inc
fisubrs
les
js
jmp
pop
xchg
arpl
pop
cmp
jle
in
inc
fbstp
pop
ljmp
or
frstor
xchg
frstor
popf
dec
bnd
pop
or
bound
sub
cmp
mov
and
out
push
daa
xchg
lods
xchg
push
jl
xchg
and
les
movl
mov
pushf
pushf
lea
jmp
test
jmp
mov
movzbw
bswap
not
pop
pushf
movw
pushl
ret
mov
pop
movzbw
mov
pushf
pop
pop
sets
lea
pushf
mov
pushf
mov
movzbl
movzbw
movl
call
jmp
mov
mov
push
pushf
call
call
inc
xor
pusha
movb
xchg
pop
mov
cmp
cmc
shl
mov
cmp
mov
pushl
shr
mov
bt
sub
lea
jo
push
mov
rep
pop
bswap
push
call
aad
scas
pop
imul
adcl
adc
leave
sar
ret
sets
adc
clc
ret
mov
cmp
sub
int
mov
addr16
popa
xor
testb
adc
pop
cmp
arpl
mov
jae
mov
std
or
and
stos
mov
loopne
stc
xor
cmp
and
hlt
out
out
aad
sbb
aas
sub
stos
or
cmp
mov
cmp
mov
dec
pop
and
sti
imul
les
and
arpl
push
mov
mov
pushf
pushf
pushl
ret
sti
sub
jg
mov
adc
pusha
push
ss
push
ficomps
sub
in
iret
push
mov
std
add
test
imul
push
jecxz
xchg
clc
in
stos
push
pusha
rorl
push
and
mov
dec
push
inc
loope
inc
pusha
rorl
mov
xchg
mov
pop
xlat
push
daa
pusha
subb
adc
fstps
lods
aad
roll
shl
sub
adc
xlat
or
or
inc
mov
mov
cmp
fs
dec
test
mov
adc
dec
push
mov
push
sbb
inc
stos
fs
mov
xor
push
push
inc
push
add
fcoms
adc
dec
fcoml
mov
push
dec
or
push
push
push
dec
mov
cmc
out
mov
fbstp
push
push
icebp
sub
sbb
inc
add
push
stc
lods
into
mov
popf
push
sbb
sarl
cli
jle
loop
xchg
fildll
cli
mov
repz
repnz
xor
aaa
shll
jnp
ja
xor
cmpsb
fiaddl
les
mov
in
pop
lret
push
cmpsl
xlat
adc
sub
outsl
sbb
xor
fsubrl
inc
pop
in
fs
push
jl
xchg
popa
push
jl
mov
adc
mov
clc
les
lea
je
call
pushf
jmp
pushl
movl
pushf
mov
pushf
pushf
lea
jmp
pushl
popl
pushf
mov
mov
pushf
lea
jmp
push
pushl
mov
mov
jmp
mov
movb
lea
jmp
lea
jne
pusha
push
movb
mov
pushl
movb
lea
jmp
pushl
popl
pushf
lea
jmp
movsbw
aad
btc
mov
stc
cmc
or
mov
test
pushf
bt
sub
bt
test
shl
call
cmc
jmp
pushf
popl
call
not
mov
jmp
jmp
mov
call
jmp
pushf
popl
pushf
pushl
popl
movw
pushf
pusha
lea
jmp
push
pusha
lea
jg
push
jno
pushf
push
mov
pushf
mov
lea
jne
repz
pushf
pusha
push
push
mov
mov
pushf
movb
mov
pushf
mov
movb
lea
jnp
push
mov
call
cmc
mov
push
stc
mov
push
sub
pushf
cmp
shl
pushf
mov
movb
pushf
jmp
movl
pushf
push
pushl
movb
lea
jmp
mov
jmp
mov
movb
pushf
push
pushl
popl
call
movsbw
neg
mov
aaa
mov
clc
bt
cmp
clc
add
jae
push
pushf
popl
pushf
call
call
jmp
mov
movb
movb
movl
mov
call
call
call
cwtl
test
sub
mov
jmp
pusha
mov
call
repz
popl
mov
push
pusha
mov
call
rol
btc
shr
jmp
pusha
sub
clc
jmp
shl
btr
clc
mov
call
test
pushf
btr
mov
bt
add
mov
pushf
pushf
mov
push
pushf
jmp
jmp
mov
movb
pushl
pushl
lea
jmp
repz
popl
mov
call
push
lea
cpuid
call
push
call
push
pusha
lea
je
jmp
mov
mov
jmp
aas
aam
aaa
adc
mov
shr
mov
rol
cmp
dec
test
mov
pusha
clc
add
bt
push
jmp
ror
mov
cmp
cmp
add
pushf
pusha
movb
lea
jmp
bt
test
clc
xor
clc
cmc
pusha
neg
jmp
bswap
ror
jmp
pushf
mov
call
setl
mov
pushl
pushl
mov
mov
push
mov
pushf
lea
jmp
sub
test
sub
mov
push
test
call
mov
mov
movb
mov
jmp
mov
jmp
call
mov
pusha
push
mov
pushf
movb
push
mov
mov
movw
pushf
pushf
repz
popl
pushf
push
pushl
mov
call
shr
mov
bt
mov
stc
push
sub
lea
jle
clc
clc
shl
jmp
pushf
mov
call
call
pushf
pushl
mov
pushf
movb
jmp
shr
mov
rcr
sbb
mov
cmp
push
pushf
sub
clc
cmc
shr
movb
pushf
mov
pusha
pushf
popl
call
sub
or
jmp
and
bswap
mov
jmp
pushf
pushf
popl
call
repz
popl
pushf
mov
pusha
movb
call
pusha
jmp
repz
popl
pushf
mov
lea
jnp
push
call
pusha
mov
pusha
movzbl
pushf
mov
push
mov
cld
cld
pushf
jmp
pushl
jmp
push
mov
call
btr
bsr
mov
neg
pushf
mov
jmp
pushf
mov
jmp
movb
mov
call
mov
jmp
jmp
push
mov
lea
jg
pusha
pusha
pushf
popl
movl
pushf
pushf
pushl
popl
mov
movb
pushf
lea
jmp
mov
mov
call
shl
sbb
shrd
not
mov
rcr
lea
sub
shld
add
neg
dec
and
sub
or
bts
bts
dec
mov
pushf
bt
shl
test
stc
test
shr
cmp
pushl
call
ror
add
adc
mov
clc
cmc
add
bt
ror
pushf
bt
add
bt
movw
stc
jmp
push
xchg
jmp
pushf
jmp
test
call
jmp
jmp
mov
push
mov
pushf
repz
popl
call
call
btc
shl
clc
test
mov
rcr
sar
shl
add
call
jmp
jmp
pushf
jmp
movw
mov
pushf
pushl
push
mov
mov
mov
jmp
call
sub
pushf
push
lea
call
pushf
mov
pushf
lea
jmp
push
movw
mov
call
pushl
call
push
mov
pusha
call
jmp
pushl
pushl
popl
pushf
movl
pushf
pushf
movl
lea
jmp
pushl
pushf
mov
push
mov
jmp
mov
jmp
pusha
pusha
lea
jns
push
push
mov
movl
mov
jmp
movb
mov
mov
mov
pushf
mov
mov
pushl
ret
mov
push
pushf
lea
jmp
pushf
mov
mov
pushf
mov
call
pushf
mov
push
call
bswap
call
call
pusha
mov
movw
jmp
setg
mov
cmc
stc
ror
jmp
mov
pusha
not
setnp
mov
lea
setl
lea
repz
popl
rcl
bsr
sbb
jmp
call
pushl
pushf
mov
pushf
call
pushf
mov
pushf
jmp
pushf
call
rcl
mov
push
movb
sub
jmp
mov
call
stc
call
pusha
mov
pushl
movb
lea
jmp
call
pushf
jmp
dec
mov
cmc
lahf
bt
pop
shl
aam
aas
rol
pop
neg
btc
pop
daa
pop
btc
aam
lahf
movzbw
pop
shl
shl
bsr
btc
pop
shr
bt
mov
popf
xchg
mov
movzbl
pusha
mov
jmp
call
pushf
sub
call
call
pushf
popl
call
pushl
popl
pusha
mov
lea
jmp
pushf
pushl
popl
movw
pushl
pushf
pushl
lea
jmp
jmp
push
divl
jmp
jmp
pushl
pushf
pushl
popl
pushf
movb
lea
jmp
mov
pusha
pushf
mov
pushl
movb
mov
pushf
mov
push
movw
mov
repz
popl
jmp
pushf
mov
pushf
call
mov
call
jmp
cwtl
mov
btr
shl
mov
call
add
cmp
cmp
pushf
pushl
popf
mov
pushl
pushf
pushl
lea
jmp
mov
pushf
call
pushl
movb
mov
movb
pushf
pushl
popl
call
pusha
sub
mov
jmp
movl
pushl
push
pushl
lea
jmp
movzbw
mov
jle
pusha
pushf
pushf
lea
call
sub
jmp
mov
mov
xor
add
pusha
push
mov
mov
mov
pushf
push
push
pushf
lea
jmp
mov
jmp
add
movb
lea
jmp
pushf
mov
jmp
call
mov
pusha
call
movl
pushf
lea
jmp
jmp
mov
push
call
rol
cmp
cmp
sub
clc
sub
jmp
call
pushf
jmp
pushf
pushl
popl
movw
movw
lea
jmp
mov
pushf
mov
lea
jmp
call
pusha
jmp
mov
cmp
bt
bt
sub
pushf
push
movw
pushf
lea
jne
clc
cmc
sub
pusha
jmp
call
push
mov
pushf
push
jmp
pushl
lea
jnp
pushf
mov
lea
jp
push
pusha
pusha
mov
jmp
call
mov
cmc
add
jmp
push
pushl
popl
call
pushf
push
mov
mov
pushf
push
pushl
ret
mov
ror
push
pushf
call
call
cmp
bt
sub
pushl
push
push
mov
movb
lea
jmp
mov
das
shr
shl
mov
shl
test
mov
stc
clc
stc
add
push
pusha
mov
lea
jl
mov
push
pushf
pushf
pusha
lea
jmp
bt
cmp
and
jno
pusha
pushf
pushf
mov
jmp
pushl
popl
pushf
call
pushf
pushf
pushl
popl
push
pushf
movl
pushf
pushf
lea
jmp
jbe
pusha
mov
pushf
pusha
lea
jmp
mov
push
pushf
jmp
call
repz
popl
pushl
mov
mov
call
repz
popl
pushf
pushl
mov
mov
pushf
mov
jmp
pushl
popl
mov
movl
push
pushl
mov
mov
lea
jmp
jmp
jmp
bswap
pusha
call
push
pushl
mov
mov
call
movl
pushl
movl
lea
jmp
call
pusha
movzbl
jmp
mov
jmp
pusha
repz
popl
lea
jo
push
pushf
push
jmp
pushf
mov
jmp
pushf
pushl
popl
pushf
jmp
clc
cmp
push
pushf
lea
jne
jmp
lea
push
pusha
mov
movb
movb
lea
jmp
call
mov
rep
rcl
sar
mov
rcl
shr
mov
jmp
mov
movl
pusha
mov
push
pushl
popl
jmp
pushl
popl
mov
call
pusha
call
mov
mov
movl
push
mov
jmp
mov
movl
jmp
setns
cltd
bswap
setns
mov
lea
setbe
lahf
movsbw
mov
jae
divl
call
mov
pushl
pusha
mov
lea
jmp
jmp
pusha
pusha
movl
mov
pushf
lea
jmp
shrd
mov
lea
push
cmp
mov
lea
ja
bswap
xor
mov
btr
cmp
call
movl
pushf
movb
movw
lea
jmp
mov
pusha
mov
pushf
pushf
lea
jmp
mov
pusha
movw
add
pusha
movb
lea
jmp
call
push
jmp
pushf
jmp
call
jmp
jmp
dec
movb
movl
lea
jmp
mov
pushl
popl
push
call
sub
pusha
pushf
cmp
sub
mov
jmp
jmp
rcl
neg
sub
mov
pusha
movb
pusha
add
pushl
pushf
lea
jmp
lahf
mov
push
rol
mov
pushf
add
mov
mov
pushf
pusha
pushf
push
lea
jmp
pusha
pushf
push
pushf
popl
jmp
cwtl
mov
pusha
mov
call
pushf
mov
push
mov
push
pusha
lea
jmp
mov
pushf
pushf
mov
jmp
call
mov
mov
mov
push
push
movb
jmp
shld
jmp
pushf
mov
push
push
lea
jmp
movl
mov
movw
movb
movl
lea
jmp
lea
je
pushf
pushl
popl
movb
lea
jmp
call
pushf
pushf
mov
call
movw
mov
movb
movb
pushf
push
pushl
popl
call
cmp
call
pushf
popl
mov
movl
pushl
popl
push
push
movl
pushf
lea
jmp
call
jmp
push
pushf
movb
mov
jmp
mov
bt
cmc
pushf
pushf
sub
mov
mov
push
pushf
lea
jmp
pushl
mov
mov
pusha
jmp
mov
push
movb
mov
pushf
mov
mov
mov
call
push
mov
movb
mov
push
pushl
movb
pushl
popl
pushf
movb
movb
movl
pushf
pushf
pushl
pushf
lea
jmp
mov
jmp
pushf
pushf
xchg
pushf
call
movl
push
mov
movw
lea
jmp
movb
pushf
lea
jne
bsf
ror
xorb
lea
movzbw
movsbl
pop
pusha
lea
jmp
jmp
push
mov
pushf
pushf
mov
movb
call
pushf
mov
movb
pushl
pushf
lea
jmp
push
push
mov
call
rdtsc
cmc
or
mov
clc
rcr
test
and
mov
push
stc
not
add
jnp
not
pushf
push
stc
and
mov
movb
mov
call
pusha
pushf
popl
movb
pushl
popl
pushf
push
mov
mov
lea
jmp
pushf
mov
push
movb
mov
pushf
lea
jmp
pushl
mov
pushf
mov
mov
mov
mov
call
call
mov
pushf
jmp
mov
pushl
popl
pusha
jmp
movb
pushf
mov
lea
jle
pushf
pushf
pushf
mov
movb
call
mov
push
lea
jmp
sub
jne
stc
pushf
cmp
call
mov
movb
call
mov
pusha
lea
jmp
pushl
popl
pushf
push
call
mov
dec
mov
jmp
mov
mov
pusha
call
mov
adc
test
shld
test
mov
lea
mov
shl
adc
mov
xor
pushf
shl
bts
pushl
popl
xor
push
mov
btr
movl
lea
or
pushf
rcr
stc
mov
shrd
pushf
add
clc
call
call
lea
jne
lea
mov
call
cmp
test
pushl
jmp
mov
pushf
call
movl
pushf
movb
pushf
mov
push
pushf
pushl
ret
pushf
popl
pushl
call
add
mov
pusha
mov
lea
jmp
push
jmp
mov
pusha
sub
call
movl
movb
pushf
movl
push
lea
jmp
call
add
add
pushf
pushl
push
pushf
popl
jmp
xchg
jmp
movsbw
jmp
movw
mov
call
call
movl
jmp
pusha
movb
pushl
mov
pusha
mov
pushf
mov
push
mov
call
movl
movb
mov
lea
jmp
movzbw
pushf
popl
bswap
pop
push
lea
cld
mov
bswap
call
call
pushf
movl
mov
push
lea
jmp
pusha
mov
pusha
jmp
add
pusha
sub
jmp
pushf
mov
pushl
popl
pushf
push
lea
jmp
and
jmp
mov
push
lea
jmp
jmp
jmp
bt
sub
movw
lea
jne
pusha
pusha
mov
mov
movb
lea
jmp
mov
movb
mov
jmp
push
call
shl
call
jmp
movw
bt
add
jmp
push
pushf
popl
pushf
mov
pushl
popl
pusha
pushl
movb
pushl
lea
jmp
or
or
jmp
add
bt
call
mov
pusha
call
pusha
stc
add
cmc
jmp
btc
rcr
inc
mov
bswap
mov
call
shrd
inc
mov
bt
sub
jmp
clc
inc
push
and
mov
push
clc
mov
pushl
add
jmp
lea
btc
sar
shl
mov
bt
clc
cmp
add
pushf
push
pusha
lea
jmp
mov
jmp
movzbl
clc
mov
mov
add
cmc
stc
cmc
cmc
ror
call
bt
not
not
bswap
call
and
lea
ror
setg
sub
xadd
mov
shr
add
shrd
pushf
mov
dec
shld
not
test
add
add
mov
shld
mov
sar
sub
rcr
xor
bts
ror
setge
shr
not
and
pusha
shld
add
sub
jmp
ror
call
pusha
push
mov
pushf
jmp
or
clc
stc
cmc
xor
pushf
inc
pushf
call
pushf
mov
jmp
and
mov
stc
shl
mov
bt
add
pusha
lea
jmp
pusha
pushf
pushf
mov
push
call
bt
pushf
add
movl
call
repz
popl
pushf
pusha
pushl
mov
pusha
movw
call
pushf
movb
pushf
popl
jmp
and
rdtsc
cmp
pusha
sub
lea
jno
push
pusha
mov
pushl
call
cmc
cmp
sub
call
jmp
pushl
popl
push
movw
lea
jmp
push
and
pusha
pushf
popl
pushf
movb
pushl
popl
mov
lea
jmp
push
cmp
pushl
sub
pushl
mov
pushf
push
pushf
pushf
lea
jmp
mov
push
jmp
cmp
and
pushf
pushf
mov
mov
call
pushl
popl
call
call
xchg
btr
mov
rcr
pushf
sar
mov
pushf
sub
pushf
clc
shr
push
jmp
mov
call
pushf
mov
shr
and
rol
cmc
mov
cmc
cmp
not
bt
call
call
inc
cmc
pusha
mov
cmp
xor
bt
stc
xor
jmp
add
sub
mov
btc
rcl
lea
sar
add
pushf
stc
ror
ror
bt
call
mov
mov
pushf
jmp
jmp
call
call
jmp
pusha
call
rcr
rcr
add
lea
pop
dec
pusha
ror
rcl
add
bt
movzbl
stc
test
pushf
mov
push
clc
cmc
push
or
lea
jle
je
push
call
call
movl
movl
push
movb
movb
movb
lea
jmp
repz
popl
jmp
call
movl
pushf
lea
jne
call
pusha
jmp
movzbl
push
call
call
pushf
bt
movzbl
push
bsf
rol
or
sub
rcl
movsbw
btc
add
cmc
jmp
jmp
jmp
cmp
push
add
call
pushf
jmp
mov
movb
mov
jmp
dec
movzbl
jmp
pusha
jmp
lea
call
mov
push
movw
repz
popl
lea
jno
pushf
push
mov
jmp
pushf
mov
jo
push
mov
mov
call
mov
mov
pushf
jmp
pushf
mov
jmp
mov
push
call
cmc
movb
cld
pushl
popf
mov
mov
lea
jmp
cmc
movb
sub
jmp
mov
pushf
pushl
ret
mov
mov
mov
lea
jmp
push
movb
mov
pusha
mov
pushl
jmp
pushf
call
pushf
jmp
pushf
jmp
pusha
push
jmp
pushf
jmp
mov
jmp
shld
mov
stc
push
sub
stc
call
mov
pushf
push
call
movsbw
not
lea
mov
lea
xchg
bswap
setnp
mov
call
sub
das
aas
mov
dec
movzbw
pushf
mov
shl
sub
mov
push
pusha
clc
stc
add
push
bt
jmp
pusha
pushf
mov
xchg
push
jmp
jmp
jmp
mov
mov
mov
call
push
jmp
call
pushf
mov
mov
call
mov
call
jmp
pusha
pushf
popl
call
mov
jmp
mov
mov
pushf
mov
pusha
lea
jmp
bt
stc
shl
pushf
jmp
push
cmc
call
add
jmp
pushl
movl
movw
pusha
lea
jmp
not
pushf
call
pusha
sub
xor
movsbw
mov
clc
stc
add
push
lea
jmp
add
pushl
mov
mov
mov
lea
jmp
push
pushf
pushl
popl
pushf
pushf
push
mov
lea
jmp
jmp
mov
call
jmp
jmp
mov
pushl
mov
jmp
sub
pushf
jmp
mov
call
mov
pushf
mov
push
call
mov
jmp
call
pushf
call
pushf
pushl
popl
pushf
push
push
push
lea
jmp
lea
ja
push
pushf
lea
jmp
pusha
jmp
xor
sub
xadd
mov
and
jmp
call
lahf
sets
mov
call
pushl
mov
jmp
sub
test
mov
cmc
cmp
xchg
cmc
call
call
call
and
stc
shl
mov
call
add
mov
jmp
push
pusha
add
pushl
movw
lea
jnp
pusha
mov
push
pushl
pushl
movw
lea
jmp
mov
mov
pushl
movb
repz
popl
call
mov
pushf
pushl
pushf
push
lea
jmp
jmp
pushl
popl
movb
mov
pushf
mov
lea
jmp
cmp
neg
clc
test
xor
movb
stc
test
sub
call
call
jmp
mov
pusha
jmp
movl
movb
lea
jmp
pushf
pushl
popl
push
pushl
pusha
lea
jmp
not
movsbw
mov
push
lea
pusha
pushf
mov
pushf
push
pushf
lea
jmp
push
push
mov
pusha
push
lea
jmp
movl
pushf
lea
jmp
jmp
jmp
jmp
cmc
stc
cmp
add
pusha
mov
lea
jmp
add
call
pushl
movb
mov
push
call
cwtl
push
bswap
mov
call
dec
bt
mov
clc
jmp
push
call
test
not
jmp
pushf
jmp
mov
push
pushf
push
pushl
lea
jmp
jmp
shrd
pushl
pushf
push
pushl
mov
lea
je
pusha
pushl
pushl
pushf
popl
jmp
push
jmp
btc
adc
notl
cbtw
sbb
inc
btr
mov
jmp
pushf
mov
mov
jmp
push
call
pusha
call
call
pushf
popl
call
push
movl
pushl
pushf
pushf
lea
jmp
mov
pushf
call
push
pushf
pushl
popl
pushf
mov
jmp
clc
jmp
pushl
add
call
call
test
add
call
call
movb
mov
call
jmp
mov
push
lea
jmp
mov
call
movsl
testl
mov
testl
add
clc
add
testl
fcomps
add
or
add
or
add
or
add
or
add
push
clc
add
push
clc
add
jle
add
testl
clc
ret
testl
mov
clc
add
xor
add
clc
add
clc
add
testl
adc
add
xor
add
push
clc
add
fs
add
loope
add
inc
clc
add
cmpsl
testl
cwtl
xor
add
clc
add
daa
clc
add
mov
add
xor
add
clc
add
cmp
add
xchg
testl
enter
clc
sub
testl
mov
push
clc
add
push
clc
add
clc
add
ret
clc
add
clc
add
testl
add
clc
add
clc
add
push
clc
add
testl
mov
clc
add
clc
add
or
add
or
add
or
add
or
add
push
clc
add
push
clc
add
nop
testl
cwtl
mov
add
inc
clc
add
mov
add
xchg
testl
and
clc
add
inc
clc
add
daa
clc
add
xor
add
mov
add
js
add
clc
add
push
clc
add
push
clc
add
clc
add
sbb
add
mov
testl
cmp
clc
add
mov
testl
adc
testl
nop
inc
clc
add
mov
add
xor
add
testl
rorb
add
pop
clc
add
daa
clc
add
xor
add
clc
add
js
add
mov
add
clc
add
xor
add
or
add
or
add
or
add
or
add
push
clc
add
push
clc
add
cmp
add
mov
clc
add
xchg
testl
mov
clc
add
testl
enter
lock
clc
add
mov
add
push
clc
add
clc
add
stos
clc
add
stos
clc
add
test
add
xchg
add
push
clc
add
push
clc
add
clc
add
mov
clc
add
xchg
testl
sbb
testl
fcomps
add
mov
clc
add
div
add
mov
testl
xor
clc
add
mov
add
loop
add
test
add
and
add
push
clc
add
mov
add
mov
testl
inc
cltd
clc
add
xchg
add
cmp
add
xor
add
clc
add
mov
clc
add
daa
clc
add
or
add
or
add
or
add
or
add
push
clc
add
push
clc
add
div
add
inc
clc
add
pop
clc
add
xchg
testl
add
add
stos
clc
add
push
clc
add
push
clc
add
movsl
testl
sbb
clc
add
mov
testl
nop
imul
sbb
clc
add
cltd
clc
add
sbb
add
sub
testl
adc
clc
add
clc
add
mov
add
mov
add
xchg
testl
add
clc
add
inc
clc
add
ret
testl
cwtl
xchg
testl
and
testl
xor
add
int3
testl
adc
clc
add
clc
add
sbb
add
jmp
movl
jmp
jmp
call
call
pushf
pusha
mov
push
mov
mov
pushf
pushl
movb
pushl
popl
call
pusha
pushl
popl
movb
lea
jmp
pusha
mov
push
call
pushf
pushf
pusha
pushf
popl
push
pushl
popl
pushf
pushf
pushf
lea
jmp
repz
popl
call
push
mov
push
mov
call
pushf
pushf
popl
push
call
cmpl
movb
pusha
mov
push
mov
pushl
mov
mov
call
call
call
movb
pushf
mov
jmp
add
btr
xor
or
xor
bsr
rcr
not
bsf
mov
sub
btc
bt
neg
sub
mov
pusha
clc
clc
bt
add
movb
pushf
pushf
mov
push
lea
jmp
pusha
pushl
popl
push
mov
push
lea
jmp
shl
lea
mov
shl
cmc
bsr
mov
pusha
jmp
pushf
popl
mov
pushf
push
pushf
pushl
popl
pushf
push
movb
pusha
lea
jmp
pushf
pushf
pushl
popl
movb
movl
movl
lea
jmp
pushl
pushl
jmp
lea
jge
pushf
call
mov
movw
pushf
popl
call
pushf
mov
call
pushf
mov
call
add
jg
sub
cmc
jmp
mov
mov
jmp
mov
mov
push
mov
mov
mov
lea
jmp
lea
shl
push
bsr
aam
sub
clc
movsbl
cwtl
dec
lea
cmc
adc
and
movsbw
sub
lea
mov
call
mov
jmp
ror
setle
not
xor
sar
add
test
jmp
call
movb
pushf
mov
pushf
mov
pushl
popl
pushf
movl
push
lea
jmp
rcl
call
clc
not
mov
btc
clc
ror
pushl
shl
xor
test
pushf
clc
and
neg
mov
cmc
pushf
jmp
pushf
pusha
mov
jmp
jmp
repz
popl
movb
pushf
mov
push
mov
movb
mov
push
pushl
mov
mov
pushf
pushl
popl
movb
push
movl
pushf
movb
pushf
lea
jmp
jmp
call
rcl
movzbl
btc
btr
shrd
add
xor
sbb
rcl
shld
xor
movzbw
inc
xor
xor
pushf
xor
jmp
pusha
mov
call
mov
pushl
pushl
popl
jmp
push
mov
mov
pusha
call
jmp
pushf
popl
mov
jmp
call
pusha
call
mov
pusha
pusha
mov
pushf
mov
call
pushl
popl
mov
lea
jmp
sub
bt
bt
add
cmc
xor
pusha
movb
pushl
pushf
not
bt
bt
movl
stc
sub
bt
movb
mov
test
sub
pushf
call
push
movw
pushf
call
rdtsc
cmp
movsbl
shl
mov
sets
mov
stc
push
call
mov
call
mov
cmp
push
xchg
stc
sub
push
cmc
test
sub
cmc
rol
cmp
cmc
cmp
sub
clc
cmp
sub
cmp
stc
pushf
pushf
cwtl
clc
call
dec
rcl
sbb
movzbl
stc
xor
cmc
pusha
clc
xor
jmp
mov
clc
test
pusha
test
sub
pushf
pushl
pushf
call
mov
pushl
push
lea
jmp
call
jmp
push
pushf
pusha
pushl
mov
pushl
pushl
lea
jmp
not
movsbl
jmp
mov
lea
stc
push
mov
stc
add
pushl
push
movw
push
lea
jmp
push
pusha
decl
jmp
pushf
repz
popl
call
jmp
pushf
call
pushl
popl
pusha
pushf
pushf
pushf
lea
jmp
pushf
push
jmp
jmp
jmp
push
pushl
popl
jmp
call
aas
mov
mov
bt
bswap
call
cmc
not
cmc
mov
cmc
push
stc
call
shl
mov
rcl
inc
mov
pusha
bt
push
sub
stc
pushf
cmp
shr
call
jmp
push
pushf
mov
mov
pushf
call
mov
call
movw
push
repz
popl
pushf
call
pusha
mov
pushl
mov
pushl
call
jmp
mov
call
and
mov
mov
movl
pushf
pushl
pushl
pushf
popl
movb
jmp
shl
aam
mov
bt
clc
bt
xchg
jmp
dec
bts
call
mov
push
mov
jmp
movzbw
mov
pusha
movsbw
bts
call
pushf
mov
pushf
call
pusha
pushl
popl
push
jmp
clc
clc
xorb
push
mov
lea
mov
pushl
movb
pushf
mov
lea
jmp
pushl
push
pushl
popl
movw
pushf
pushf
lea
jmp
jmp
push
pushf
mov
pushl
pushf
call
mov
mov
lea
jmp
add
push
cbtw
call
add
jmp
lea
jae
push
pushl
popl
pusha
movb
pushf
mov
lea
jmp
mov
mov
pushf
pushf
popl
push
push
pushf
pushl
popl
pushf
pushf
pushf
lea
jmp
movb
movb
mov
push
pushl
lea
jmp
cmc
mov
movb
cmp
sub
jmp
jmp
call
mov
jmp
call
jmp
