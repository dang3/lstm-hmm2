push
call
ret
ret
sbb
cwtl
inc
cltd
push
mov
shll
push
or
div
jle
mov
cmpl
inc
xchg
addr16
test
add
jp
lret
cs
or
sbb
cld
cli
jl
pop
mov
and
out
gs
les
xchg
mov
lea
inc
adc
adc
mov
push
xchg
mov
mov
movl
std
push
cmp
pusha
addb
mov
stos
adc
pusha
jl
mov
pop
adc
jmp
in
inc
fildll
outsl
out
arpl
in
xor
pop
pusha
cmp
loope
gs
sbbb
jecxz
arpl
mov
icebp
popa
adc
cmp
pop
int
adc
push
orl
fs
sbb
jo
dec
dec
mov
jge
inc
jp
jmp
das
mov
scas
lcall
repz
orl
dec
movsb
xchg
xchg
rclb
inc
push
push
and
mov
rcrl
cmp
in
sub
jl
and
in
sahf
lods
xchg
rcrl
sub
sbb
xor
mov
movsb
jno
pop
fidivrs
add
pop
jmp
jb
pop
and
mov
loop
stc
dec
inc
mov
lahf
add
rcrb
adc
push
fcomi
fbstp
aaa
jmp
push
inc
test
aam
out
clc
mov
jne
pushl
dec
aad
cmp
lcall
sub
mov
cmp
repz
adc
shrb
ljmp
mov
xchg
aad
xchg
push
call
cld
cmp
mov
jbe
icebp
push
inc
cmp
outsl
lea
mov
rolb
mov
mov
iret
aam
pop
leave
das
mov
mov
cltd
ljmp
adc
imul
icebp
xorb
testl
xchg
rcrb
mov
cmpsb
ret
xchg
and
dec
xchg
dec
lcall
test
sub
sbb
mov
lcall
scas
pop
push
dec
push
mov
leave
dec
or
aas
xor
jbe
enter
jns
pop
mov
ret
mov
mov
out
cmp
in
daa
fdivrl
inc
pushl
dec
sub
hlt
cli
mov
add
lret
sub
add
cmp
mov
iret
fiaddl
xor
pop
icebp
movsb
xchg
jns
subb
pop
call
lds
movsb
xchg
adc
insl
lds
xor
mov
jnp
pusha
rcl
xor
aad
aad
fistpl
call
add
xchg
mov
jb
int
adc
xchg
pop
pop
stos
cmpsl
stc
mov
ret
mov
jnp
stos
pop
sbb
jmp
inc
xchg
push
mov
pop
arpl
lds
aam
aaa
cmp
mov
addl
fwait
cltd
mull
in
dec
out
pop
push
aaa
gs
push
movsb
adc
dec
mov
fimull
aad
dec
push
decl
in
ficoms
test
inc
lret
ds
xchg
test
sub
jae
cmp
push
sarb
mov
repnz
mov
cmp
push
ja
push
mov
mov
outsb
sub
mov
push
sbb
call
push
sbb
mov
cwtl
dec
mov
imul
movntps
cmpl
xchg
loope
lods
xchg
add
push
inc
sbb
pop
repnz
and
or
xor
add
stos
jnp
inc
imul
mov
negb
sti
mov
out
incb
mov
push
pop
fsubrs
push
fildll
into
ja
mov
fistpll
push
mov
dec
rol
mov
imul
stc
data16
fnsave
cmp
push
mov
stc
pop
js
mov
add
mov
inc
adc
jo
mov
mov
stc
push
icebp
xchg
fs
loopne
leave
setle
std
dec
dec
inc
cli
in
ret
cmp
mov
cld
mov
jmp
inc
icebp
addr16
int3
in
push
js
loop
je
popl
sub
or
sahf
sahf
xorb
pop
test
sub
loope
inc
and
fwait
rorl
and
xchg
mov
cld
repnz
mov
dec
shlb
mov
adc
imulb
out
sti
fcoml
hlt
cmp
push
xor
mov
outsb
sub
fstpt
lret
and
mulb
ficomps
mov
sahf
pop
mov
pop
insb
push
call
and
ds
mov
rclb
jb
test
jb
lret
in
arpl
jp
xchg
mov
stos
lahf
mov
adc
lret
mov
out
dec
adc
jle
mov
loop
fisubrs
stos
fwait
inc
inc
js
scas
mov
sbb
xor
cmpsl
test
jg
ret
das
js
mov
into
pop
lock
dec
addr16
iret
sbb
cmpsl
sbb
pop
fmull
push
stos
xor
xchg
push
mov
lret
bound
inc
cmpb
jecxz
imul
xchg
or
aam
mov
imul
mov
out
mov
adc
mov
sub
xor
int
mov
jecxz
or
stos
push
pop
mov
je
cmc
call
xchg
je
je
jno
and
add
or
test
lret
sti
cmp
mov
pusha
lods
inc
popf
mov
pop
sub
push
inc
daa
aam
or
jge
add
xchg
aaa
add
pop
fucomp
cltd
mov
dec
sbb
punpckhdq
movsl
or
add
in
aaa
call
cld
xchg
xorb
lock
xchg
xor
out
push
or
xchg
adc
push
cmp
or
es
pop
daa
insl
addr16
imul
ss
popa
xchg
sti
icebp
jl
dec
add
lds
hlt
adc
loope
scas
cmp
js
xor
sub
bound
xor
push
sbb
pop
lea
stos
fsubs
and
in
inc
adc
dec
pop
mov
and
cmp
sub
xchg
rcrl
cmp
add
pop
dec
mov
pusha
loopne
mov
pusha
ret
aas
aaa
add
adc
bound
xor
gs
mov
xchg
lods
dec
stos
cmp
adc
jae
jmp
fwait
jge
jmp
pop
pop
xchg
mov
add
inc
mov
xchg
enter
adcb
pop
mov
ret
lock
dec
ret
lret
push
aas
sbb
push
rcr
lcall
push
cmc
xchg
stos
xor
das
inc
fbstp
repz
dec
and
cmp
sub
shrb
pop
mov
xchg
add
mov
sub
dec
inc
fistps
sarl
dec
sahf
gs
and
jle
sub
adcb
rcr
jle
dec
mov
call
sbb
aam
popa
cmp
fisubl
xchg
fisttpl
jg
inc
call
push
sub
test
pop
sbb
xor
sbb
insb
in
sahf
out
call
push
cmp
aas
mov
fs
and
jno
cmpsl
push
insb
xor
push
jbe
in
xchg
test
jae
shr
xchg
fadds
rcrl
sbb
movsb
icebp
mov
push
std
mov
mov
mov
push
clc
pop
inc
lods
mov
inc
xor
or
fildll
aad
push
sbb
jp
ja
pop
aam
pop
fmuls
and
add
popa
cmp
add
inc
leave
xor
popa
jns
dec
movsb
cmp
flds
fdivp
adc
jns
mov
sbb
scas
scas
std
xor
lcall
inc
adc
jns
sti
popl
popa
inc
js
pop
lods
sti
pop
ret
loope
incl
dec
mov
cmp
jb
pusha
divl
xchg
add
jbe
pop
cltd
xchg
lock
lea
or
sar
lods
insl
and
cmpsb
loop
or
push
sub
push
xor
push
das
lods
sub
dec
jno
out
test
scas
mov
mov
shll
dec
xchg
outsb
pop
mov
scas
or
xchg
fisubl
adc
ficomps
add
inc
xor
sbb
inc
pop
sbb
shll
and
mov
pinsrw
ja
cmp
dec
push
push
mov
push
pop
push
pushf
enter
add
lret
movsl
out
fwait
add
sar
popa
scas
adc
cli
aaa
clc
arpl
and
dec
jle
enter
jmp
ss
inc
mov
push
mov
mov
gs
or
sub
pop
dec
add
sub
jl,pn
dec
movsb
mov
or
iret
aad
sub
or
push
cmpsl
lcall
dec
lcall
pop
test
imul
fstpt
aas
pop
in
mov
popa
jmp
add
jl
inc
jle
push
mov
das
sbb
stos
loop
je
jecxz
xor
jbe
xor
fwait
inc
insb
inc
aas
je
dec
shll
inc
sub
xor
js
icebp
xor
mov
sbb
mov
out
movsb
in
mov
insb
pop
or
jmp
lret
cmp
xor
cmp
mov
fistl
int
repz
inc
pop
bound
hlt
sub
xchg
lods
xchg
dec
push
push
movsl
loop
je
das
fsubl
mov
mov
add
push
xor
shlb
lods
lret
push
cmp
xchg
scas
dec
sub
lea
pushl
pop
sub
pop
xchg
adc
inc
mov
cmpsb
inc
xchg
mov
enter
sldt
mov
aam
dec
leave
and
mov
andb
mov
out
sahf
jb
popf
sbb
cmp
lcall
push
sbb
cmp
or
lock
cmp
xlat
lds
dec
mov
int3
rcrl
or
dec
int3
push
inc
cli
stos
cwtl
loope
lods
push
pusha
adc
sahf
jecxz
or
pop
jge
xchg
adc
jle
sbb
pop
or
push
aad
push
cmp
push
dec
negl
inc
pop
xchg
push
enter
and
push
push
movlps
dec
sub
jmp
xchg
lret
iret
mov
cwtl
or
cmp
bound
pop
cmp
cltd
out
push
inc
and
repz
mov
and
or
cmp
rclb
insb
stc
jbe
cmc
cld
fldenv
sti
mov
movsb
mov
jmp
addr16
and
andb
cmp
es
les
dec
adc
outsb
xchg
adc
in
loopne
and
jnp
sub
dec
add
mov
scas
push
xor
push
jbe
mov
jl
and
jae
xchg
adc
rcrl
push
pop
xor
sbb
dec
mov
fs
stos
mov
shr
mulb
cli
xor
sahf
inc
dec
das
popa
jle
sub
and
pop
pop
into
inc
rorb
test
push
cmpsb
sub
stc
imul
cmp
insl
and
in
rorb
cld
cld
adc
inc
cmp
mov
jno
and
das
mov
imul
mov
rcrl
xor
ret
loop
add
jbe
idivb
mov
shll
cld
loopne
push
popf
push
sub
popa
jo
mov
scas
jne
lret
mov
xor
mov
adc
hlt
push
sub
outsl
in
das
mov
mov
adc
inc
dec
add
jp
sarb
sub
test
inc
mov
std
jo
jle
cmp
cmp
cltd
lcall
inc
loopne
or
rol
fidivrs
xchg
jecxz
push
lret
jne
push
cltd
mov
idivb
inc
mov
out
jb
shll
pop
pop
fistpl
leave
popa
fsubr
loopne
adc
ret
inc
outsb
es
mov
and
cmpb
lds
data16
mov
mov
inc
stc
pop
dec
arpl
pop
mov
mov
adc
mov
shlb
das
jne
cmp
and
loopne
outsb
adc
out
xchg
xchg
into
xor
aaa
imul
clc
popf
fisttpll
sarb
pop
out
bound
mov
in
mov
add
mov
push
fidivrs
das
push
mov
adc
aaa
mov
jno
and
bound
jne
mov
mov
out
jno
inc
jbe
repnz
hlt
or
mov
xor
imul
test
std
xor
mov
ljmp
popf
dec
bound
mov
ljmp
fs
sub
mov
xchg
lea
fxch
jp
shll
jge
jns
in
xchg
mov
fs
and
lock
mov
push
inc
int
mov
mov
subl
imul
out
and
jb
add
lods
ss
lods
cmp
fs
jb
lea
cmpb
jmp
sbb
loope
arpl
jl
scas
push
xchg
add
jmp
sar
inc
jp
xor
jmp
xchg
or
fwait
mov
sub
mov
xor
sub
adc
mov
test
cld
lcall
push
cmc
pop
push
add
ss
leave
jne
shrb
sbb
mov
jno
mov
add
int
push
sub
jae
rcl
pop
popa
push
inc
mov
adc
loope
movsl
lock
fmull
das
and
lret
cmpsb
inc
cli
push
ja
mov
je
xchg
or
mov
inc
or
xchg
dec
js
add
add
cmpb
stc
jecxz
cmp
mov
push
addr16
adc
fucomi
popa
shll
cmpsb
cmp
imul
andb
loop
aam
lods
fildll
pushf
scas
insb
daa
ss
mov
xchg
xchg
dec
hlt
out
mov
mov
fisubl
mov
sti
rcl
popa
fs
xchg
and
jmp
mov
rorb
and
mov
or
lcall
in
repz
gs
push
cli
cmp
jne
jl
pop
pop
sub
adc
mov
and
mov
and
lds
and
mov
lahf
mov
loope
push
inc
push
push
dec
cmp
jg
adc
push
sbb
xor
loop
mov
enter
popa
cmp
psubb
xchg
imul
lods
inc
jae
inc
mov
addb
pop
pop
mov
std
pusha
fmull
jmp
lods
and
clc
xchg
adc
fsubrs
call
int
jecxz
and
xchg
add
les
ret
outsb
mov
jecxz,pt
int3
out
inc
fmulp
imull
sbbb
sti
roll
pop
jl
inc
and
testl
sbb
pop
xchg
test
and
imul
cld
mov
je
repnz
sub
in
adc
cld
inc
adc
imul
gs
stos
dec
xor
xorl
jne
int3
cmpsb
insl
xchg
or
pop
leave
cmc
rolb
jecxz
fld1
imul
pusha
jge
inc
cmpsl
mov
adc
shll
or
and
imul
leave
cmpl
fiadds
movsb
es
push
mov
push
push
lds
push
out
mov
mov
ret
insb
pop
cmc
ljmp
push
in
inc
pop
and
inc
dec
sbb
enter
push
sub
jecxz
in
pop
or
movsb
ds
inc
adc
cli
rolb
ds
jo
inc
and
pop
sbb
dec
mov
leave
scas
xchg
pop
sbb
gs
dec
sbb
outsb
jl
push
push
or
or
imul
imul
out
mov
xchg
iret
sub
and
aas
rol
orb
jns
sahf
ret
xchg
xchg
pop
stos
ja
xchg
pop
inc
inc
add
lahf
sub
fadd
jnp
sbb
push
insb
lcall
jnp
sbb
dec
jbe
sbb
mov
sbb
jmp
test
pop
xchg
dec
scas
daa
imul
or
dec
sub
jnp
std
ret
imul
xor
pop
adc
mov
xchg
loope
daa
jecxz
imul
push
std
adc
popa
adc
mov
inc
inc
sbb
mov
test
lock
ret
push
dec
xor
stc
jl
cmpsl
in
imul
cmpsb
inc
mov
inc
mov
sbb
push
xchg
xor
fstpl
repz
faddl
dec
xor
ret
xchg
pop
sbb
js
not
stos
cld
in
je
lods
mov
xchg
and
movsb
or
jp
xchg
aas
lods
lahf
ljmp
aam
hlt
ss
xor
testb
leave
or
mull
push
or
int3
in
test
xchg
inc
jb
cltd
dec
movsb
push
or
mov
rcr
fstpl
jno
add
inc
aad
dec
shrb
scas
adc
dec
cld
out
aad
xlat
clc
inc
mov
icebp
and
into
ja
shlb
cmp
jno
mov
int3
adc
sti
or
icebp
inc
mov
fs
jmp
xchg
pop
je
dec
popf
nop
pop
mov
ds
mov
popa
insl
cltd
rep
mov
mov
scas
int
ret
or
das
imulb
dec
mov
or
add
pop
pusha
enter
and
outsb
jl
xchg
mov
mov
adc
mov
dec
jle
sub
mov
adc
pop
lods
clc
pop
push
dec
lcall
movsl
cltd
mov
cmp
lret
and
subb
mov
xchg
jo
mov
test
test
shll
or
in
andl
and
int
mov
inc
mov
js
sbb
xlat
outsb
daa
jecxz
stos
sub
jne
mov
or
xchg
leave
int3
sar
cmp
imul
enter
dec
pushf
js
movsb
cmp
stos
mov
cmp
lods
loop
add
inc
and
sub
xchg
nop
rolb
stos
sub
pop
sub
push
test
in
cwtl
push
outsl
push
mov
jne
es
mov
dec
cmovle
ss
sbb
pushf
aas
jmp
sbb
adc
push
adc
sbb
leave
dec
lds
pop
pop
pop
jo
inc
stc
fistl
mov
in
cmpsl
ret
mov
lret
fmull
add
out
ficompl
mov
jo,pn
and
sbb
mov
out
inc
push
notb
in
push
imul
cmp
adcl
sub
pop
mov
inc
in
xchg
imull
call
cmp
add
mov
outsl
add
add
leave
out
cmp
or
xorb
lret
inc
push
pop
pop
loop
inc
push
jne,pn
cmpsb
pop
hlt
mov
jns
popa
jns
xor
fidivrs
dec
pop
mov
popa
lea
mov
push
dec
mov
jnp
imul
fbld
pop
cli
jns
pushf
mov
addr16
lock
xorl
mov
js
cli
mov
jp
adc
pop
fisubrl
popf
or
sub
ja
mov
inc
fisubs
sti
out
cmpsl
out
jnp
inc
lret
sbb
loop
cmp
inc
add
or
in
mov
stos
push
xchg
mov
cmp
mov
cwtl
popf
mov
inc
adc
xchg
insb
stos
mov
neg
or
pop
addr16
lods
fisubl
jne
lods
adc
out
loopnew
sbbb
ret
test
stc
xchg
xchg
pop
jl
nop
lds
and
lret
cmpsb
lret
sub
adc
into
inc
lcall
fsubp
inc
inc
rcl
inc
inc
adc
stc
mov
aam
cmp
clc
jae
mul
popf
adc
shrl
dec
imul
jmp
dec
mov
add
push
sub
add
jp
sbb
fdivrs
js
adc
push
cld
out
shll
into
sub
icebp
mov
gs
xchg
push
push
into
and
std
pop
imul
mov
aad
ss
stc
stos
sbb
add
cmp
outsb
test
pusha
pusha
jmp
or
mov
stos
fildll
andb
das
in
cmpsb
mov
int3
pusha
mov
mov
dec
int3
lods
les
sbb
mov
pop
loopne
mov
dec
pop
js
jnp
xchg
adc
add
js
fsubrp
and
cmp
push
cmc
je
or
enter
add
icebp
call
xchg
mov
cltd
mov
xor
lcall
sbb
sbb
lods
icebp
movb
fldt
lret
xorl
pop
call
inc
xchg
cmpsb
xor
add
add
arpl
push
bnd
negl
andb
test
push
sbb
fsubs
push
mov
ja
mov
clc
addb
and
xor
jns
mov
lret
or
mov
push
xor
imul
jle
pop
cmp
dec
adc
adc
jae
dec
xchg
cmc
xor
pushf
mov
dec
xor
sahf
mov
push
jle
xchg
inc
xchg
cmp
jbe
das
cmc
out
adc
das
in
mov
loope
pushf
fadd
js
mov
add
div
jno
clc
fldl
scas
in
or
pop
ds
roll
xor
mov
sbb
sbb
imul
xor
mov
inc
xor
jmp
mov
xchg
fs
mov
xchg
mov
jge
in
leave
call
xchg
fstps
ror
cmp
and
wrmsr
lahf
mov
sub
int
or
testl
mov
sub
js
and
lods
push
sub
in
mov
fwait
cmc
and
stc
or
stos
jmp
fdivr
jmp
fidivrs
jb
sbb
cli
call
test
mov
cmp
scas
jge
stc
jp
int
pop
pusha
sbb
sarl
mov
mov
adc
pop
hlt
fs
lock
and
addr16
mov
mov
nop
jl
stos
jl
test
test
adc
cwtl
arpl
sub
repz
insb
into
enter
xchg
xor
in
jle
sahf
mov
sub
pop
sub
cmpsl
inc
out
dec
lret
jae
push
lods
sbb
shl
jno
cwtl
and
in
or
sbb
push
dec
icebp
or
pop
pop
sbb
and
mov
jno,pn
xchg
mov
scas
std
push
xchg
mov
adc
add
pop
mov
adc
imul
movsl
into
or
jecxz
xchg
mov
jmp
addb
pop
scas
rcrb
pop
pop
xchg
lret
pushf
or
cmp
jmp
and
pusha
mov
adc
dec
lret
in
ret
add
cmc
ret
movsl
dec
jae
bound
cmc
mov
and
data16
push
iret
sti
cmp
dec
movsb
xor
xor
sub
inc
cmovno
adc
in
mov
movsl
arpl
dec
dec
push
pop
test
stc
lock
inc
jae
push
jecxz
add
push
fsts
call
fsts
sub
into
adc
icebp
repz
cli
xor
xchg
and
clc
fcoml
push
cmp
jbe
inc
dec
push
pop
popf
setg
clc
pusha
dec
adc
dec
cmp
pop
test
inc
pop
cmp
data16
lcall
jp
test
enter
cwtl
int3
outsl
pushl
push
push
negl
inc
ja
xor
or
push
jl
loopne
outsl
fwait
movsl
shrl
add
mov
dec
dec
cli
or
insl
mov
call
das
scas
pop
cltd
jnp
push
fadds
cmpsb
cld
xchg
faddl
xor
cmpunordps
adc
jg
and
pop
and
pop
out
or
dec
mov
enter
inc
ret
adc
lods
je
loopne
mov
fbld
lret
or
push
pop
pop
in
aam
push
repnz
dec
test
ja
imul
jae
sti
xchg
cmp
add
pop
jg
dec
ds
xchg
push
pop
in
adc
popa
cld
xor
jmp
or
lds
ja
cmc
or
int
mov
and
xor
xchg
enter
loope
add
js
movsl
inc
xor
aaa
lcall
xor
mov
jns
in
cmpsb
add
jmp
mov
faddp
push
lock
xchg
lret
mov
pop
xchg
adc
cld
pushf
aam
leave
jmp
inc
cmc
dec
stos
movsb
psubq
mov
mov
inc
cwtl
aas
aaa
test
lret
mov
mov
push
push
stos
dec
cmpsl
lock
int3
sub
in
inc
lock
pop
fcmovu
pop
fstpt
insb
sti
add
flds
loopne
jb
jp
mov
jnp
int
xchg
les
stos
fs
fdivs
adc
mov
nop
push
push
cwtl
test
out
out
fstp
lods
sbb
enter
incb
jp
shrb
pop
and
fdivrs
jne
sbb
push
popl
fnsave
cmc
adc
lds
insb
cmp
jge
mov
xchg
adc
fsubs
dec
xchg
mov
xchg
in
cli
add
std
fwait
je
mov
jge
fdivs
repz
mov
lds
orb
xchg
clc
mov
jg
sub
fldcw
out
xchg
std
mull
imul
test
jg
into
fldt
sbb
pop
or
out
ret
or
adc
aas
imul
xchg
jl
pushf
pop
mov
data16
cld
cmpsb
daa
xchg
int
out
cli
pop
aam
neg
dec
clc
inc
dec
add
daa
sbb
jge
aaa
pop
jmp
jge
aam
stos
in
pusha
lret
fs
pop
inc
hlt
adc
adc
dec
in
sbb
mov
add
dec
cmpsb
cwtl
cmpsb
pushf
dec
daa
and
mov
cli
aas
sbb
cmp
lock
roll
or
pop
shrb
shl
out
sbb
and
mov
pop
scas
shrl
cmp
mov
test
and
lret
push
mov
mov
stos
lock
outsl
adc
adc
pop
mov
sarb
push
pop
popf
sti
xchg
lret
add
adc
iret
mov
ror
or
inc
cwtl
sub
mov
jno
popa
xchg
mov
add
out
push
and
mov
test
scas
fnstsw
pop
int
sbbb
pop
insl
aam
aaa
push
pop
sbb
pusha
dec
flds
data16
pop
or
aad
int3
inc
flds
or
and
mov
rorb
test
movsb
sub
xor
or
rolb
xor
cmp
sarl
sub
add
pusha
add
das
push
das
mov
das
in
loope
enter
jmp
in
jo
add
cs
cli
pop
adc
or
jo
sub
repnz
mov
lret
and
lret
mov
cld
pop
mov
add
xor
pop
push
cmpsl
lret
push
xor
fistpll
mov
aam
rcr
jno
fidivrs
xchg
js
adc
fucom
dec
in
pop
cmpsb
loop
cli
jmp
ja
jmp
dec
sbb
xchg
lret
sbb
lret
ds
add
cli
outsl
ja
repnz
add
sub
pop
mov
or
insb
xchg
lods
lds
mov
or
scas
jmp
mov
out
cwtl
cmp
xor
lret
test
enter
repnz
push
lds
adc
fsubrs
test
jle
lods
fistpll
add
adc
mov
sarw
sar
repnz
push
cs
sub
sbb
pop
jnp
nop
int3
and
mov
scas
jp
out
ret
lcall
adc
adcb
stc
pushf
and
test
cwtl
mov
and
and
xlat
mov
orb
dec
push
or
dec
mov
clc
cwtl
outsl
sbb
sbb
shl
dec
scas
xor
xchg
inc
je
int3
out
mov
test
sub
xchg
add
cmova
dec
lods
jmp
add
or
sbb
pop
pop
test
lea
xchg
cld
xchg
mov
int
sub
jo
push
mov
mov
aam
sub
sbb
xchg
pop
sbb
leave
jecxz
mov
clc
sti
in
lret
add
adc
jle
mov
mov
mov
xor
bound
sub
sbb
push
cli
and
repnz
pop
add
mov
pop
ret
cmp
rcll
pop
test
and
mov
call
adc
and
movsl
add
xchg
mov
andb
pushl
sub
call
cltd
hlt
movsb
cmp
xchg
and
add
mov
call
into
iret
test
mov
adc
adc
imul
push
sub
mov
jmp
add
sti
or
test
push
cmp
cs
clc
push
outsb
scas
mov
fidivrs
cwtl
ss
cmp
xchg
mov
mov
push
mov
cmp
sbb
js
add
addr16
stos
inc
arpl
das
aam
imul
xor
push
out
scas
fwait
leave
cmp
xor
mov
dec
push
mov
xor
mov
cmc
pop
add
dec
cmpb
loope
rorb
xor
nop
adc
test
aaa
jg
mov
cmp
sub
xor
push
cmpsl
cmp
pop
xor
sbb
movb
notb
bound
mov
mov
cmpsb
dec
imul
mov
push
xchg
out
sti
mov
unpckhps
out
call
jb
enter
inc
imul
push
stos
xlat
cmpsl
lock
imul
aad
cmp
push
jl
or
inc
lret
or
ret
and
jg
mov
xor
add
pop
pushf
sub
sub
cmp
xlat
jo
loope
mov
mov
cmp
xor
lret
xchg
mov
mov
outsb
cmp
call
jg
enter
mov
cmp
jnp
popf
mov
xor
inc
aaa
adc
pop
push
mov
fcomi
or
outsb
jbe
inc
cs
mov
mov
jo
leave
xlat
sbb
xor
jge
leave
jo
sub
int3
addr16
stc
pop
fisttpll
push
lock
scas
mov
push
adc
jge
stos
lock
and
xchg
adcb
and
mov
enter
inc
adc
fmuls
inc
repnz
pop
and
jg
xchg
fld
jbe
in
test
pop
xor
divb
xchg
xchg
cld
in
iret
cmpsb
or
popf
mov
test
inc
dec
pop
inc
cmpsb
addl
lea
add
add
inc
pushf
stc
stc
fadd
aad
lret
fldcw
cli
cltd
bound
repnz
pop
add
shrl
adc
mov
jge
das
ficoml
or
dec
nop
inc
ret
out
cmp
push
ja
pop
jecxz
into
cwtl
mov
cmpsb
fs
inc
and
xchg
out
pop
ljmp
into
xchg
addr16
lret
mov
xlat
lock
daa
and
mov
mov
or
lahf
ret
xor
and
jl
ret
mov
scas
pop
mov
push
or
dec
pop
out
loop
pop
das
cmpb
nop
pop
dec
andb
insb
sarb
stc
in
ror
daa
and
and
or
xor
imulb
int3
adc
dec
push
jge
jae
inc
fdivl
scas
adc
mov
xor
pop
cli
testl
push
insb
mov
xchg
fnsave
outsl
mov
push
dec
sarl
xchg
pop
push
js
cmp
in
mov
inc
cmp
insb
and
xchg
cmpsb
mov
pushf
mov
sbb
sahf
inc
in
into
push
inc
xchg
or
sbb
inc
loopne
ss
mov
fisttpl
xchg
stos
loopne
daa
push
loopne
leave
mov
cwtl
jne
cwtl
xchg
or
and
pop
out
lcall
mov
sbb
add
mov
inc
add
lds
fildl
inc
in
movsl
dec
cmp
dec
pop
addr16
jp
insb
mov
inc
adcl
ljmp
inc
cltd
enter
jnp
add
daa
out
fcmovnb
mov
inc
je
rorb
inc
in
fstps
aad
insb
push
xchg
sub
pop
aad
in
fsts
aaa
pop
sbb
sub
pushf
sbb
pop
out
cld
push
xlat
mov
movsb
xor
lock
or
in
popa
scas
shrl
cwtl
xor
arpl
dec
out
xor
mov
mov
jl
adcb
sub
popa
ficoml
adc
cmp
aas
pop
or
sub
inc
divb
jnp
pop
mov
pop
push
cmp
insb
sbb
mov
dec
ljmp
xor
cmp
inc
cmpsl
sub
aaa
mov
ss
xchg
jbe
std
test
jae
jns
lahf
bound
movsl
sbb
pushf
xor
bound
lods
cmp
mov
lods
test
cmp
pop
fld
sub
imul
pushf
xor
movsb
stos
mov
out
ljmp
add
int
push
into
xlat
jmp
jp
mov
cmpsb
test
xchg
and
add
pop
add
les
fstpl
insb
jnp
pop
shrb
loopne
lcall
jmp
sub
fs
scas
or
cmp
xor
movsb
in
cli
cmpsl
xchg
mov
stos
lods
push
pushl
jbe
stos
and
push
push
pop
dec
rorb
jae
divb
int
aam
jecxz
loope
imul
mov
das
pop
mov
xor
ret
in
in
sbb
fisubrs
adc
pop
mov
xlat
lahf
ja
idivb
inc
jb
outsl
scas
jle
xcrypt-ctr
cmpsl
push
mov
call
popa
dec
ss
sbb
movl
insb
pop
cmpsl
int3
or
dec
shl
fiaddl
pushl
jns
into
xor
cmpsl
pop
push
cli
movsb
and
and
adc
inc
adc
and
xchg
mov
dec
shrb
sub
stos
add
jno
sub
sbb
sahf
sbb
in
add
int
dec
xchg
dec
out
loopne
push
out
push
xchg
cmp
pop
pop
in
mov
fs
push
leave
mov
lods
xor
jmp
ja
stos
js
rclb
and
inc
xchg
int
and
in
mov
cwtl
push
adc
mov
inc
push
sbb
fistl
jg
in
dec
mov
loop
jge
xorb
and
or
push
imul
shufps
push
or
dec
dec
sub
pushf
mov
leave
clc
fcomp
lret
in
cwtl
adc
roll
mov
fisubrs
test
cmp
out
ret
movsl
inc
hlt
mov
pop
out
push
aad
xor
push
clc
xor
aam
pop
dec
aad
pop
aas
cmp
push
push
shll
xchg
mov
outsb
xchg
xor
jbe
test
xchg
enter
lea
mov
inc
flds
xchg
into
pop
shll
andl
imul
pop
cwtl
popf
fs
lods
and
out
xor
lahf
outsb
push
fldt
xchg
sti
rorb
mov
sub
pop
fnsave
stos
repnz
cmpsb
test
and
lods
ret
dec
sti
shrl
pop
pop
push
ret
mov
jmp
lahf
push
les
or
push
push
jbe
jnp
xchg
sub
mov
pop
cmpl
in
scas
out
sbbl
shrl
cwtl
xchg
xor
in
cmp
and
dec
sbb
jle
jmp
or
jge
dec
xchg
js
push
adc
xchg
sub
mov
leavew
cmpsl
fldl
test
or
xor
aam
aaa
es
push
and
fimull
loope
mov
mov
xchg
icebp
dec
out
leave
xchg
ljmp
dec
aad
icebp
les
das
sbb
test
mov
xchg
mov
lahf
jnp
push
pop
or
fs
mov
pop
push
bound
mov
pop
dec
mov
ret
mov
bound
aad
or
jnp
addr16
ret
in
xchg
les
subl
in
xor
dec
dec
inc
xor
lods
movsl
loope
push
jae
lods
mov
popf
xchg
imul
or
mov
fisttpl
mov
fwait
es
into
stc
push
enter
sbb
call
repnz
lcall
or
shll
out
andl
mov
repnz
movsl
movsb
jle
sub
sbb
add
and
mulb
ret
neg
jno
lods
or
repz
dec
aad
ss
and
stc
popl
mov
cwtl
imul
sbb
xchg
imul
xchg
jmp
push
dec
xor
mov
xor
add
add
pop
push
cmp
ret
xor
ss
push
mov
sub
xchg
pushf
mov
adc
popa
ret
andl
imul
sub
mov
sahf
push
xor
dec
lahf
dec
clc
xchg
dec
addl
cwtl
push
xchg
in
jb
loop
movsl
jo
sub
bnd
rorl
nop
out
cli
pop
ret
xor
shlb
sub
dec
sbb
sub
cwtl
stc
int
lods
fmull
mov
mov
fdivs
and
push
mov
inc
mov
nop
test
mov
movsl
xor
jbe
out
ret
xlat
bound
loope
cmp
stc
mov
test
leave
push
lret
sub
sbb
jno
outsb
sbb
push
sub
rcr
cli
ffree
jae
out
cmp
mov
jle
into
into
mov
adc
mov
sbb
add
inc
inc
cmp
mull
lds
mov
or
mov
or
mov
and
clc
cmc
mov
push
mov
mov
repnz
xchg
cld
adc
ret
std
sbb
mov
jecxz
call
clc
push
push
out
push
rcrb
push
or
ljmp
mov
lret
jl
pushf
mov
sbb
stos
jo
push
xor
and
rorb
pop
rol
cmpsb
shlb
stos
lret
arpl
ss
push
ret
out
int
inc
or
mov
fadd
pop
cmp
sub
out
dec
jp
sarl
pop
sbb
push
xchg
stos
mov
ror
popa
and
mov
jg
or
pop
repz
mov
cmp
enter
test
arpl
pop
sub
mov
sub
pusha
pop
add
loopne
insb
jns
cmp
or
fwait
mov
push
sub
lcall
fadds
mov
bsr
lcall
or
dec
sub
or
repnz
jg
dec
pop
jnp
mov
mov
ds
fdivrp
inc
aam
lret
and
bound
sub
push
inc
mov
xorl
dec
cmp
pop
hlt
sub
lods
std
stos
xchg
mov
stc
jg
stc
fdivl
jmp
mov
dec
add
stos
cli
adc
fmull
mov
push
inc
jge
add
inc
cmp
clc
sbb
rcr
loop
pushf
fsubrp
mov
inc
mov
std
rcrl
cmp
leave
lcall
lcall
lret
mov
sti
rclb
cmp
pop
shl
shll
cmp
clc
adc
icebp
xor
jecxz
into
dec
into
js
ret
aaa
push
lret
shlb
in
and
pushf
insl
js
xchg
aad
and
mov
and
out
in
movsb
dec
cs
dec
loope
push
cmp
sbb
pop
lret
or
sti
lahf
pop
sbb
mov
jmp
and
cmp
and
adc
mov
and
push
jp
mov
lock
fstps
lods
lods
jns
jnp
lret
nop
push
out
loop
mov
negb
daa
pop
mov
fidivs
cmc
mov
push
lea
lcall
and
or
shll
pop
and
mov
shlb
scas
and
gs
inc
and
in
mov
mov
pop
add
pop
xchg
mov
lret
jo
imul
repnz
xor
ds
mov
fisttpl
adc
divb
lret
bound
jnp
pop
je
sub
inc
outsl
decb
js
mov
or
inc
and
test
push
lret
les
xchg
mov
outsl
ljmp
add
sub
mov
mov
sub
inc
pop
movl
shlb
adcb
subb
sahf
push
testb
outsb
ja
test
ss
ss
and
push
mov
jmp
sbb
jecxz
je
xchg
icebp
bsf
out
fstpt
xchg
fldcw
in
mov
xorb
sar
inc
add
in
test
loop
sbb
sub
fidivrs
loope
test
jg
xchg
push
push
push
adc
jmp
mull
mov
ljmp
fisubl
fmull
jno
mov
out
add
mov
mov
xchg
out
lahf
push
sub
mov
pop
sti
test
addr16
aad
rorb
cli
push
js
mov
adc
push
out
jnp
pop
mov
pop
addb
call
dec
sub
push
sbb
sbb
jnp
aas
icebp
inc
jge
mov
xor
pushf
xchg
jl
pop
aaa
cltd
or
sub
xchg
and
jmp
je
stos
dec
stos
or
repnz
pusha
jmp
pop
test
mov
lcall
cmpsl
jl
and
sub
adc
das
insb
ret
adc
mov
sbb
leave
cmpsb
push
out
sbb
cli
push
int
aad
inc
psignw
add
into
jo
or
dec
adc
xor
jp
bound
sub
jmp
pop
insl
add
insb
scas
dec
push
mov
jmp
insb
inc
add
sbb
inc
push
cmpsb
and
dec
mov
sbb
lgs
sbb
mov
pop
cmp
jbe
jbe
dec
xchg
fisttpl
mov
xchg
adc
or
and
outsl
pop
push
jne
das
int3
sbb
mov
mov
xchg
fs
out
fs
andl
sub
sbb
dec
add
mov
pop
sbb
sub
test
stos
fisubrs
mov
dec
and
faddl
in
incb
push
mov
inc
es
sbb
pushf
sub
out
mov
pop
mov
sbb
fisubl
in
jmp
push
mov
push
mov
cld
cld
test
push
sub
out
mov
test
mov
cmp
fwait
pop
cld
push
frstor
aam
cmp
stc
sub
pop
andl
popa
imul
mov
clc
lret
add
das
ficomps
xchg
in
scas
stos
repz
int
sub
ss
out
movsb
ret
into
into
push
sub
stos
push
pop
cmpsl
add
test
lods
repnz
mov
push
jne
mov
sbb
outsl
mov
filds
dec
sbb
sti
pop
xchg
mov
sbb
fxch
sarl
lock
xor
rcl
inc
inc
insb
cli
mov
or
imul
or
jns
jge
xor
icebp
mov
sub
mov
popa
push
mov
xor
dec
push
call
in
mov
cli
xchg
iret
cmp
sub
popa
stos
mov
inc
adc
xor
add
repnz
jns
jns
pop
xchg
jp
dec
dec
sub
rcr
jo
cmp
jmp
pusha
mov
push
test
adc
push
hlt
or
mov
push
mov
cmp
xor
mov
dec
pop
test
into
jae
or
mov
popa
cli
ss
bound
adc
add
push
fadds
stos
dec
pop
jmp
mov
add
mov
mov
popa
or
or
pop
push
cmpsb
fcmovne
cld
xchg
aam
fnstsw
popl
popf
add
xchg
xorb
repz
mov
cmp
loopne
rcrl
arpl
ret
jbe
sbb
mov
xor
jb
out
adc
jbe
fs
aad
cmp
addr16
adc
sbb
inc
ret
xor
lds
cmpsb
mov
or
insb
jg
xchg
loopne
lea
mov
rolb
xor
xchg
out
popa
or
fdivp
insl
jns
int3
pop
jmp
adc
ss
ja
cwtl
cmc
dec
imul
adc
inc
repnz
xchg
jae
andl
inc
lea
rcrl
lcall
jbe
or
jmp
sub
leave
test
and
pop
popa
xchg
movsl
ret
mov
movsl
cmp
pop
xchg
and
mov
dec
pop
and
xor
xchg
out
add
mov
sub
or
sub
add
int3
mov
push
fst
in
dec
fcoms
pop
fbstp
sub
movsl
call
cmpsb
add
roll
mov
fimull
adc
pop
adc
ja
insb
addb
std
xor
mov
push
dec
xchg
xchg
jge
test
sub
leave
cli
js
pop
mov
in
call
and
push
and
sub
dec
mov
xchg
subl
popf
mov
cmpb
mov
add
sahf
and
or
mov
push
sbb
cmp
cmc
lods
dec
loope
xchg
int
dec
aaa
push
ror
int
ffree
mov
add
mov
dec
or
sbbl
dec
inc
xor
mov
movsb
enter
pop
int
mov
jmp
lahf
inc
or
cmpsl
lahf
adc
aaa
push
je
popf
mov
shlb
lahf
sbb
sub
adc
jno
sbb
push
xchg
insb
mov
aad
inc
inc
mov
hlt
add
fnstcw
cmp
test
adc
inc
loope
shlb
faddl
leave
rorl
mov
sbb
cmp
jge
movsl
sarb
adc
mov
push
outsl
test
fsubr
add
mov
dec
inc
cltd
movsb
aaa
or
mov
xlat
xor
and
jecxz
lods
call
iret
insl
test
jecxz
cmpsb
add
daa
clc
and
jns
pop
sub
aas
outsl
inc
test
xchg
out
stos
lret
stc
jge
xchg
mov
mov
sarl
xor
and
pop
mov
stos
nop
sub
or
enter
jle
out
ret
dec
sub
pusha
mov
les
inc
ret
insb
jmp
jecxz
inc
mov
sub
mov
rcrb
xchg
imul
xor
in
enter
fcoml
scas
imul
mov
xchg
stos
outsb
push
inc
add
aas
insb
fmull
insb
push
ret
xor
mov
adc
mov
mov
std
pop
iret
push
aam
jecxz
add
mov
stos
sub
pop
cld
dec
lea
or
push
inc
add
mov
ljmp
jbe
dec
sub
xchg
iret
fxch
adc
push
xor
in
push
addr16
pop
je
mov
mov
loop
dec
repz
or
iret
iret
bound
call
jns
jmp
xchg
sbb
adc
push
test
test
mov
mov
iret
in
lret
xor
int3
jmp
adc
pop
ja
and
dec
adc
out
loop
push
lock
int
insl
xor
pop
lock
call
mov
fiaddl
pop
loop
out
ja
dec
cmp
mov
and
pop
xor
out
iret
and
idivl
jmp
insl
cmp
mov
vmovntdq
adc
scas
sub
jge
and
scas
rep
xor
and
sub
cmpsl
push
clc
popa
xchg
jle
xchg
cmpsb
inc
dec
call
loopne
sub
imulb
xor
hlt
test
xchg
ret
fnstsw
sbb
stc
add
fmuls
fwait
dec
fadds
stos
mov
jbe
or
push
sub
bound
addb
dec
popa
scas
mov
mov
daa
aaa
out
andb
aaa
mov
mov
sbb
addr16
cld
in
inc
cwtl
fmuls
popf
in
out
add
cs
inc
jo
pushf
pop
add
mov
scas
dec
mov
and
inc
sbb
add
bound
mov
jo
nop
adc
jp
mov
aad
jecxz
test
rolb
push
stos
xchg
and
arpl
adc
jle
lahf
mov
cmpsb
lahf
mov
es
jge
dec
outsl
out
add
and
cmp
cmpsb
cltd
jns
sarl
dec
and
inc
xchg
fiadds
adc
idivl
cmp
cli
cmp
movl
imul
mov
in
push
lds
aas
sub
sbb
cltd
inc
xlat
mov
ja
repz
inc
out
inc
xchg
mov
rcrb
xchg
sbb
sbbb
pop
jmp
inc
and
insl
inc
es
xor
adc
push
xchg
sub
mov
les
add
or
or
push
shll
sub
dec
loope
pushf
jno
add
mov
or
mov
cmc
fs
pop
jno
addl
test
pop
addw
sub
sbb
mov
sti
ret
sbbb
xor
stos
pop
shr
fsubl
outsl
xchg
xorl
inc
ret
shrl
dec
in
inc
and
mov
out
nop
or
jl
adcb
in
dec
call
inc
fwait
icebp
dec
dec
push
or
and
iret
popa
and
jns
pop
fmull
inc
push
loop
adcb
fucomp
gs
fwait
mov
loope
cmc
xchg
lret
jo
aad
sub
or
imul
aad
mov
add
testb
inc
push
imul
out
sahf
int
mov
mov
push
cld
dec
and
fcmovnu
lcall
push
out
jmp
pop
inc
xchg
add
hlt
or
jg
or
cmp
ficomps
mov
adc
xor
xlat
inc
cmc
imul
cmpsl
cmpb
int
dec
or
sub
sbb
mov
adc
mov
cmp
orb
mov
icebp
shrb
and
jmp
bound
int3
or
in
out
inc
clc
scas
inc
andl
add
cmp
sub
cmp
jne
xor
es
adc
xor
pop
es
orl
xchg
movsb
jg
rorb
and
test
clc
pop
or
xchg
sub
push
out
add
sub
cwtl
psllq
inc
out
sbb
xchg
les
xor
adc
dec
pusha
adc
mov
pop
cltd
mov
or
pop
cmpsb
ret
imul
jl
bound
dec
ds
fimuls
pop
jp
iret
mov
es
xlat
in
lea
int
fwait
inc
lret
std
adc
pop
stc
cmp
aam
mov
xor
ret
adc
and
or
js
fucomip
sbb
mov
inc
lcall
jns
out
sahf
push
dec
test
xchg
push
fldcw
inc
inc
jnp
jle
dec
dec
nop
xchg
xchg
push
aas
jle
xor
sbb
add
mov
outsb
call
sub
scas
sbb
pop
pop
and
xchg
xlat
mov
sub
cmpsl
ret
enter
push
sub
stos
divb
pop
push
test
mov
inc
dec
sub
jle
call
xor
xchg
mov
dec
inc
into
xor
imul
sub
stos
or
dec
ja
stos
fldt
adc
roll
out
ljmp
outsl
arpl
faddp
push
bound
pusha
mov
in
or
int3
sbb
pop
sbb
push
push
mov
in
or
daa
jns
sbb
xchg
jl
dec
jmp
jge
add
xor
loop
xchg
roll
in
inc
push
pop
mov
mov
lds
pop
jge
out
incb
mov
cmp
pop
loopne
lahf
leave
and
dec
test
lods
arpl
xor
andl
cmp
dec
jge
decl
fs
cmp
mov
jecxz
dec
cmpsl
mov
and
fildll
push
stos
xchg
pop
add
out
pop
punpckhbw
xlat
or
test
iret
cmpsl
iret
jle
push
and
orl
stc
stc
xchg
push
jbe
mov
jnp
ljmp
dec
ror
lahf
lods
cmp
icebp
push
and
shl
cmp
outsb
and
dec
and
lods
imul
test
mov
fcoms
into
movsl
lods
rcrb
jg
mov
fisttpll
mov
pusha
outsl
in
movb
fsubrs
ror
stos
sub
or
shll
push
dec
dec
sarb
lods
pop
mov
inc
sahf
inc
rcrb
or
push
cs
popf
std
test
and
xor
cwtl
fimull
xchg
and
sbb
lods
sbb
cltd
mov
icebp
xchg
call
jmp
adc
movsl
xor
inc
or
mov
or
mov
movsl
lock
in
das
cmp
jge
xor
adc
sub
and
mov
loop
mov
or
bound
mov
mov
cltd
mov
pop
add
icebp
push
xchg
out
insl
push
sub
imul
cltd
rcrb
mov
jo
imul
add
mov
dec
nop
xchg
adc
call
lret
sbbb
std
and
xchg
lods
adc
in
stos
jae
dec
movsb
fists
and
add
add
adc
push
and
mov
xchg
xchg
scas
cmpsb
pcmpeqb
inc
cltd
xor
add
mov
mov
inc
cmp
pop
xchg
pop
outsl
fisubrl
sti
insl
fsubrl
subl
lods
mov
mov
adc
cmc
and
outsb
sbb
xlat
push
jmp
movsl
ret
test
add
and
fwait
mov
ffree
cli
fwait
roll
mov
push
xorl
loopne
and
mov
mov
das
add
push
or
ss
mov
cmp
pop
xchg
aad
frstor
dec
clc
ljmp
loope,pn
fdivs
and
sub
or
push
push
pop
data16
lods
inc
cmp
test
sbb
push
push
lret
sub
inc
aam
mov
test
mov
mov
mov
sub
lods
jbe
xchg
sbb
ss
push
rclb
add
loop
icebp
xchg
and
mov
loopne
or
ljmp
and
push
loope
mov
push
jecxz
adc
or
adc
lds
adc
cmpb
mov
cmp
inc
pop
arpl
or
mov
stos
mov
sahf
jnp
jg
xor
pop
jae
xor
push
stc
rcll
inc
add
add
mov
sub
push
mov
sbb
adc
rclb
in
and
push
inc
addl
add
imul
shr
adcl
rcr
xor
sbb
sbb
adc
jbe
xor
iret
sarl
sub
xchg
sub
pop
test
outsl
movsl
sub
push
out
mov
cmpsb
sub
aad
lock
xchg
jno
fs
xchg
push
pop
shlb
aad
mov
cmc
mov
pop
mov
test
inc
stc
jge
sub
cmp
xchg
nop
dec
test
push
repnz
dec
add
addb
cwtl
lds
fsub
jp
jge
mov
inc
sub
and
pop
nop
ret
pop
xor
adc
fisubrl
cld
dec
out
jl
bound
lock
and
xchg
pop
aaa
xchg
pop
sbb
ljmp
inc
rcl
sub
cld
jecxz
jp
pop
fstl
data16
push
jb
push
js
sub
inc
pusha
xchg
decl
imul
push
aam
jg
mov
lea
sbb
fidivrs
cwtl
test
lea
push
xlat
lret
fcompl
lds
push
dec
cs
repnz
outsb
ret
test
insb
into
inc
sub
out
xchg
adcb
sti
mov
js
mov
out
rcll
dec
popa
mov
push
inc
test
mov
loopne
mov
scas
lds
mov
mov
pushf
cmp
fldl
xchg
pop
pop
test
push
or
lcall
push
mov
jge
incl
mov
lods
repz
pop
stos
test
xchg
les
adc
sub
fmull
test
cwtl
repz
mov
add
push
push
ret
add
sub
mov
or
call
fistpl
pop
ja
dec
js
decb
adc
adc
out
jae
rcrl
jno
call
incl
xchg
push
jmp
xor
and
inc
outsb
or
jp
imul
cmp
mov
dec
dec
cmc
mov
fmuls
push
out
leave
and
adc
ja
adc
xor
pop
imul
adc
jmp
scas
and
sahf
neg
push
adc
mov
adc
out
ret
jp
lret
or
insb
xchg
xor
leave
sub
mov
xor
sbb
cmp
cltd
jns
inc
subb
xchg
nop
ljmp
sub
lahf
jge
and
cltd
pop
aad
popf
and
rcrl
inc
push
das
adc
shll
pusha
or
cmp
dec
in
jecxz
sbb
push
scas
sbb
cmp
jmp
dec
push
inc
mov
adc
add
inc
dec
xchg
inc
out
daa
daa
push
sbb
lock
jl
jno
das
in
out
xchg
icebp
and
dec
adc
mov
xchg
jp
enter
jp
sub
cli
mov
ja
roll
fnstenv
movsl
dec
fldenv
test
pushf
lret
or
mov
stc
loope
push
scas
xor
xor
inc
pop
xchg
cltd
lret
jns
jg
mov
mov
mov
fnstcw
xorb
mov
lds
pop
pop
movsl
mov
xchg
fistl
popa
jbe
imul
test
pop
xlat
loope
fwait
idiv
push
dec
push
inc
test
je
enter
out
fildl
jnp
xchg
cld
data16
cli
cltd
ds
dec
outsb
jl
sbb
mov
pop
add
hlt
out
mov
sahf
cmp
push
jne
ljmp
das
aas
mov
add
ss
frstor
lahf
popf
dec
out
in
ss
cmpsl
adc
xchg
aad
hlt
sti
mov
adc
orb
gs
clc
cmovbe
or
out
xor
lret
fidivrs
enter
xor
fbld
std
ret
into
or
add
aam
xchg
and
xchg
roll
lock
mov
lods
push
cli
mov
jno
roll
adc
sub
mov
xchg
jle
nop
xchg
gs
rcl
jg
pop
std
jl
inc
rep
push
popa
pop
mov
pop
and
and
cmp
enter
mov
nop
push
enter
adc
push
cwtl
add
cmp
lods
sbb
and
inc
aaa
push
mov
mov
sub
fwait
jo
pop
test
adc
sub
dec
mov
jmp
scas
mov
in
or
xor
add
pop
pop
fwait
mov
adc
xchg
add
movsl
pop
clc
fcmovnu
movzwl
sub
mov
xor
sbb
jl
cmp
sub
dec
inc
test
jae
imul
mov
iret
mov
adc
in
mov
jb
mov
ficomps
pop
jbe
lret
repz
mov
xor
inc
xlat
je
pop
loopnew
pop
fnstsw
out
inc
rcll
cmp
dec
jmp
fs
sub
fwait
dec
jb
out
mov
imul
pusha
pushf
addr16
or
dec
in
xchg
pop
mov
aam
loopne
adc
lods
pusha
pop
lcall
push
cmp
jle
cmpsl
xchg
inc
sbbl
xor
movsb
and
adc
pop
xchg
mov
ret
xor
ret
sbb
mov
daa
xor
cmp
jmp
lods
popf
dec
xor
jecxz
fistps
cmc
sub
out
je
mov
push
pop
scas
ljmp
ljmp
xchg
inc
push
push
mov
mov
lcall
mov
ja
aad
add
test
rcl
jno
push
std
xchg
rcrl
mov
test
dec
sub
xchg
sbb
sub
popf
xlat
ret
mov
inc
push
sbb
and
lahf
jno
ffreep
hlt
and
fbld
jg
stc
sub
and
mov
push
xor
les
enter
pop
sbb
xchg
sti
sbb
dec
sub
test
fmull
ret
jle
mov
jbe
sahf
shlb
cwtl
sub
and
jno
sbb
sub
and
inc
cmp
sub
cld
inc
inc
bound
mov
dec
sbb
mov
dec
aaa
dec
xlat
sbb
test
or
or
rcrb
ds
mov
out
shll
xchg
or
pop
enter
pop
imul
pop
mov
fiadds
adc
push
cmp
mov
int3
mov
add
mov
mov
popa
int
xchg
inc
push
cwtl
adc
notb
xchg
inc
daa
xchg
add
scas
shrb
mov
or
mov
xchg
popa
aaa
pop
adc
jne
jge
push
cld
fs
or
xchg
pop
jnp
outsl
and
dec
adc
add
dec
adc
in
arpl
scas
sbb
sbb
and
testl
test
call
jmp
arpl
xchg
push
sub
adcb
je
aam
ss
repnz
rcll
xchg
adc
fisubs
loope
sbb
aaa
sti
xchg
imul
jno
out
sbb
xchg
pop
pop
enter
jl
fdivrl
mov
adc
fs
loop
pop
notb
test
jmp
cld
mov
rclb
inc
idivl
mov
mov
pop
add
leave
add
lods
lds
or
sbb
fwait
dec
add
and
cltd
mov
into
std
repnz
fidivs
mov
xchg
out
popf
in
imul
fstl
xor
dec
mov
iret
xor
adc
test
xor
lea
add
int
rcrl
inc
cmp
jl
dec
xor
out
imul
push
dec
mov
out
lahf
shlb
xchg
stos
pop
and
test
jo
add
mov
mov
or
and
pop
cmp
cld
ret
xor
mov
jg
mov
fldl
repz
shlb
fldt
out
inc
fiadds
mov
push
or
push
jl
mov
and
lods
push
mov
push
and
mov
test
jl
in
adc
mov
jmp
jb
xor
mov
in
call
das
add
imul
pop
pushf
subb
push
fwait
cmp
dec
mov
mov
lret
and
jl
cmp
lds
aaa
leave
cmp
jae
xor
xlat
add
loope
jo
pusha
pop
es
pop
loopne
mov
pop
iret
sbbl
xchg
arpl
scas
enter
or
pmulhw
int3
add
push
popf
out
mov
jl
and
and
and
mov
inc
mov
or
dec
sub
mov
and
pop
daa
cmpsl
jns
inc
jnp
pop
ret
sbb
mov
mov
test
out
sub
fldl
push
inc
jb
jge
fs
jecxz
call
test
imul
cmpsl
inc
and
xor
cmpsl
push
cmp
sbb
push
fnstcw
cmp
inc
sub
ja
imul
mov
ret
mov
adc
aas
cmp
ret
mov
les
mov
and
movsb
pop
in
incb
popf
addl
pop
xchg
inc
call
cmp
jp
inc
add
out
adc
xchg
or
pop
sar
cltd
jg
adc
xchg
icebp
aad
ljmp
cmpsb
cmpsb
es
sarl
fst
setne
adc
das
mov
jge
dec
ficoms
inc
cmpsb
or
xlat
jno
insb
push
mov
xor
out
xchg
xchg
ljmp
mov
cmp
test
jle
addr16
xlat
gs
mov
jmp
pop
sub
and
arpl
cmpsb
out
movsl
and
pushf
ficoms
fstpl
pop
popa
adc
loope
andl
test
mov
sub
sarl
jge
js
dec
mov
addb
adcb
dec
cmpsb
add
jae
daa
cltd
inc
int3
cmpsl
xor
sarb
sti
dec
inc
mov
test
mov
testl
into
xchg
stos
sarl
pop
mov
mull
jae
pop
imul
mov
stos
enter
xor
fmuls
fidivrl
ja
sub
sahf
xchg
add
push
mov
cld
test
xchg
or
xchg
push
adc
and
or
or
pminub
outsb
cmp
hlt
cmpsb
out
dec
sbb
jae
movsl
cmp
and
fiaddl
scas
jo
call
mov
mov
and
fidivrs
lock
push
cs
mov
push
icebp
add
xchg
cmpl
inc
or
add
sub
mov
cmpl
adc
cs
sarl
mov
sbb
icebp
out
xor
jg
aas
inc
fs
xchg
adc
cmpl
iret
and
jle
test
cmpsl
pusha
hlt
fcmovne
out
imul
arpl
adc
jno
push
and
shll
fistpl
adc
sub
mov
add
mov
push
imul
add
or
cld
cltd
loop
jne
add
aaa
sub
lods
bound
test
xchg
pop
ljmp
jl
inc
in
add
adc
mov
or
in
xchg
addb
sbb
cmp
dec
mov
ret
stos
out
orb
fcomps
fisubl
cltd
add
test
aam
mov
movsl
jg
xlat
fisubl
adc
and
or
repnz
andl
arpl
repz
mov
sarb
jle
ret
and
stos
int3
push
sub
pop
icebp
or
push
lods
int3
fists
push
lahf
out
push
pop
outsb
lea
sub
loop
mov
mov
push
sub
lahf
and
ss
jp
pusha
and
mov
dec
inc
cmpsl
shrb
nop
or
movsb
or
outsl
ret
mov
arpl
lods
fdivl
fdivrl
pop
lcall
push
inc
pop
jle
sti
jae
and
cltd
js
xlat
lahf
add
sub
dec
enter
sbb
popf
add
ja
std
rorl
fbstp
bound
sub
cmp
in
dec
loop
out
cmp
mov
jl
add
mov
mov
sub
je
pop
repnz
movsb
add
je
movsb
pop
jle
jb
mov
pop
mov
xor
mov
or
mov
aad
shl
fists
mov
jge
adc
outsb
shl
lret
adc
xlat
in
jecxz
adc
adc
jecxz
aaa
ret
jmp
sub
arpl
sub
cmp
xor
cmpsb
dec
push
xchg
int3
adc
add
stc
js
insl
or
cltd
or
or
fwait
cmpsl
pop
dec
push
or
mov
jne
iret
and
insl
push
mov
fs
push
andl
cmp
fcmovnu
add
pop
stos
arpl
mov
cltd
jmp
pop
loope
ja
xchg
loopne
mov
lret
push
sub
add
ss
cwtl
aam
out
fwait
and
dec
inc
rclb
lahf
cltd
dec
pop
sub
ret
jl
add
xchg
ja
inc
mov
bound
jns
dec
ljmp
push
mov
mov
das
push
jg
push
mov
and
dec
lahf
aas
and
xchg
loop
popa
jmp
mov
lds
dec
pop
sub
mov
decb
repz
mov
test
add
cmp
cltd
pop
adc
add
int
mov
mov
jbe
lret
test
jo
or
orl
xorl
jge
sub
loopne
pop
pop
or
adc
cmp
xor
mov
into
shll
mov
cmp
fwait
je
xchg
fsubrp
and
jl
and
ljmp
stos
mov
cmp
stc
pop
loope
insl
mov
and
hlt
nop
lock
in
fiaddl
fdivrs
xchg
les
packssdw
mov
inc
loope,pt
dec
xchg
pop
mov
out
popa
int
push
inc
mov
pop
jae
mov
sub
scas
bound
mov
dec
xchg
clc
add
xor
xchg
mov
jnp
inc
imul
fadd
ret
test
stos
ljmp
cmp
scas
call
jnp
mov
mov
adc
leave
sub
ret
insb
shrb
push
mov
adc
cmp
push
jg
stc
inc
xor
and
clc
fildll
cmp
adc
dec
pop
idivb
stos
pop
dec
in
repz
mov
shrl
mov
leave
aad
in
ss
sub
sbbb
stos
fs
cmpsl
xor
test
jo
or
lahf
and
in
jecxz
adc
sbb
jle
jmp
sahf
or
and
mov
gs
shrl
cmp
sti
test
jge
nop
add
pop
das
pop
mov
fcoml
lock
and
sahf
loope
stos
pusha
js
adcb
outsb
imul
sub
movsb
adc
repz
repz
inc
lret
xchg
ljmp
xor
test
sbb
call
jbe
pxor
js
aad
aad
push
xor
es
pop
cli
mov
fwait
call
cmp
pop
adc
enter
mov
repnz
in
aaa
lds
mov
mov
std
jmp
dec
lds
daa
mov
pop
mov
pop
push
out
shlb
xlat
cmp
and
ds
mov
negl
cs
jl
dec
inc
pop
xlat
cmpl
dec
test
ret
and
sbb
push
lret
test
fs
mov
ja
mov
lahf
jno
stos
mov
pop
ret
sub
jmp
jo
mov
out
cmpsb
lahf
mov
es
xor
jnp
mov
inc
dec
hlt
xlat
add
sbb
lret
pop
sbb
mov
leave
jle
popf
bound
sahf
daa
inc
or
sub
andb
pop
jle
dec
dec
outsl
jnp
ds
bound
out
inc
mov
ffreep
stc
xor
insl
adc
xchg
or
pusha
xchg
push
xor
push
int
mov
cmpsl
xor
jae
push
inc
sbb
push
lods
sub
inc
popa
mov
lret
inc
push
jecxz
dec
cmp
popf
pop
int3
dec
mov
ret
std
pop
gs
test
mov
ret
or
push
nop
inc
cs
sbbb
fnsave
add
test
popf
push
and
push
lret
cltd
fs
mov
repz
mov
cmpsb
movsb
clc
inc
xchg
fcoml
scas
repz
stos
fisttpl
mov
mov
pop
iret
dec
aas
loopne
sbb
subb
mov
movsb
mov
inc
jno
mov
push
data16
aad
jo
adc
sbb
cmc
xchg
xor
xchg
bound
fstl
lds
mov
inc
lea
inc
jmp
int3
mov
movl
loopne
xor
dec
std
popa
jg
loope
xchg
cld
jbe
pop
rorl
push
push
adc
push
daa
ret
arpl
lahf
inc
addb
scas
loop
push
mov
add
adc
dec
and
sub
mov
jg
cmp
xlat
cwtl
repz
das
mov
lea
adc
sti
lea
lods
aaa
mov
stc
lret
add
push
shll
mov
pop
push
sub
sbb
fisttps
out
push
cld
xchg
xor
jg
xor
arpl
sub
stos
fwait
mov
sbb
cmpsl
imul
cltd
cld
and
push
xchg
mov
and
inc
les
mov
xor
xchg
cmp
inc
and
and
out
mov
divl
mov
into
sub
icebp
push
clc
cwtl
aas
in
in
lods
cltd
neg
and
dec
dec
mov
dec
ljmp
insl
jne
scas
sub
addr16
out
add
pusha
push
pop
cmp
xor
pushf
lret
and
adc
sbb
outsl
outsb
push
pop
adc
outsl
dec
icebp
or
pop
inc
movsl
xchg
fistpl
shrb
test
pop
xlat
pop
daa
inc
jne
sahf
fcoml
scas
jno
addr16
loopne
fistps
fs
adc
enter
sarl
mov
sub
les
nop
stc
mov
and
incl
dec
mov
bound
jp
aam
dec
push
js
ja
lds
cmpsb
rol
push
or
clc
mov
into
push
loop
lahf
outsb
pop
mov
mov
mov
pop
add
test
mov
dec
mov
andl
push
popl
outsl
stos
dec
call
aas
cmc
aad
or
mov
sbb
and
xchg
movsb
inc
sub
into
pusha
xor
inc
call
in
add
mov
fidivs
adc
jl
inc
push
inc
and
cmp
xchg
mov
ret
add
adc
xchg
jecxz
inc
es
mov
insl
clc
xchg
sbb
push
or
mov
shl
pop
je
lcall
and
xor
inc
test
std
sub
and
xchg
icebp
pop
mov
jp
jle
testb
mov
ljmp
out
xorl
shll
sub
push
addl
adcb
fdivr
xchg
clc
cmp
in
lcall
cmpsb
or
pop
out
sahf
push
xchg
or
cltd
aaa
push
pop
mov
std
xchg
push
fcoml
xor
push
push
dec
dec
sub
pop
fs
fnstcw
sub
in
inc
dec
sbb
jae
sub
lahf
lods
popa
and
daa
jno
inc
adc
jmp
test
lret
es
pop
js
fimull
std
mov
sbb
dec
inc
mov
sbb
mov
sti
std
jmp
je
addr16
into
rclb
movsl
imul
lods
inc
popa
jle
add
jg
lret
in
push
xor
push
into
mov
jnp
pop
insl
pop
push
mov
cmc
aas
sbb
stos
es
sbbl
sbb
mov
lods
insl
pop
cltd
mov
xor
std
popa
pop
push
push
mov
mov
xchg
and
clc
pop
clc
ret
pop
repnz
xchg
mov
jmp
pop
aad
cmpsb
or
and
mov
clc
adcb
clc
jmp
out
sub
pop
in
xor
xchg
mov
bound
cs
or
mov
dec
push
sub
cli
lret
pop
fldt
or
cld
stos
jae
fcomip
mov
jne
imul
mov
dec
pop
add
aam
ds
lret
push
adc
adc
add
nop
icebp
xchg
adc
xchg
jg
xor
push
out
xor
cmp
dec
cld
add
stos
add
stos
jae
mov
jno
insb
pusha
ss
pop
dec
jnp
dec
imull
sti
xor
shrb
adc
in
xchg
ficoml
inc
inc
xor
mov
mov
arpl
mov
add
mov
jbe
add
adc
xchg
lahf
pop
fmul
xchg
jmp
pop
lahf
int
add
loopne
sbb
iret
sub
cmp
pop
pop
or
jle,pt
and
cmpsl
aad
vpsubq
test
sub
cmp
sub
mov
test
jns
lcall
ret
insl
mov
ja
ret
je
in
xchg
or
sbb
test
decb
push
imull
mov
sub
ret
and
jnp
mov
ds
mov
adc
hlt
negb
test
jmp
push
mov
add
dec
shl
mov
and
push
sbb
sub
and
push
dec
xchg
enter
push
in
inc
inc
es
or
cltd
mov
hlt
push
or
shrb
daa
mov
movsl
mov
mov
jne
hlt
add
icebp
xchg
push
or
sub
stos
and
jg
roll
scas
dec
xchg
sbb
fwait
xor
sarl
pushf
cmp
push
cmpsb
jp
and
sbb
enter
cmp
inc
lret
cs
ja
sbb
pop
jne
xor
loop
shlb
push
rolb
push
fstpt
and
xorl
xor
aam
movsb
aam
scas
push
orl
dec
mov
ret
in
mov
dec
arpl
mov
test
cmpsl
xor
fcoml
mov
cmp
cmpsb
dec
inc
pop
mov
sub
je
pop
pop
cmpb
jmp
std
pop
cld
cmp
add
push
inc
loop
scas
call
shrb
push
stc
xchg
ret
mov
test
cmc
pop
pop
enter
inc
cmpsl
outsb
mov
fdivs
paddsw
rcll
adc
sbb
ucomiss
sub
or
xor
mov
and
cld
cmpsb
and
mov
sub
aad
and
sbb
mov
mov
jecxz
pop
ds
add
jo
aaa
les
mov
cwtl
daa
xchg
in
fstps
subl
and
lds
outsl
sbb
mov
mov
push
mov
inc
lahf
jno
repnz
inc
push
inc
faddp
scas
loopne
addr16
movswl
mov
dec
adc
fisubrl
popa
and
mov
cmc
ja
es
sbb
lock
out
or
enter
ret
xlat
pop
daa
lods
test
push
adc
and
insb
stos
lahf
shll
outsb
outsl
mov
add
mov
mov
out
cltd
mov
and
sub
push
addr16
neg
fprem1
add
xchg
out
test
clc
xchg
sahf
loopne
mov
xchg
stos
outsl
orl
xchg
loope
and
push
adc
cltd
ja
dec
rorl
cltd
js
push
sbb
dec
stc
mov
outsl
mov
arpl
push
jge
fstl
mov
ret
movsl
sub
sub
inc
pop
jp
clc
xchg
mov
xchg
cld
int
cmp
std
mov
push
ja
sarl
jne
in
daa
mov
push
pop
jae
ret
shlb
cmp
lret
cltd
or
gs
movsl
dec
sti
shrl
mov
rcr
jno
sbb
pushf
jb
daa
add
jbe
repnz
les
rcll
jnp
ret
xor
adc
jbe
push
mov
stos
cmpsb
or
cmovo
std
lods
enter
sti
int
das
push
inc
mov
sbb
daa
pop
cmpsl
call
js
dec
inc
sub
andl
sub
add
inc
jp
adc
sbb
mov
xor
aas
stos
inc
xchg
sahf
jb
shrl
arpl
pop
imul
sbb
popf
mov
movsb
inc
mov
in
push
sub
cmp
mov
insb
prefetch
stos
inc
insb
idiv
dec
fidivrs
pop
and
fcoms
mov
pop
mov
mov
mov
push
push
jne
jbe
xchg
sub
les
and
pop
sarl
cmc
and
and
data16
adc
mov
adc
inc
or
mov
iret
movsb
sahf
in
mov
sbb
sbb
and
pop
push
inc
mov
mov
push
or
add
jg
je
repz
aad
int
push
mov
cmp
lret
cli
inc
sub
jb
push
out
xor
xchg
pop
mov
lahf
xchg
das
push
std
rolb
xor
sub
rcrl
addb
popa
outsb
sahf
cltd
shl
jb
sahf
mov
mov
mov
test
mov
imul
ljmp
insl
ja
bound
cwtl
insl
and
adc
jnp
fstpt
call
cmp
fucomip
inc
sbb
sbb
leave
add
divps
jg
add
jnp
add
out
outsb
sbb
loop
cwtl
push
mov
dec
pop
bound
out
and
int
sbb
jg
cli
movsb
cmp
out
xor
adc
pop
push
push
dec
jnp
adc
xchg
fnsave
mov
sbb
xlat
ss
std
pop
xlat
mov
adc
adc
push
mov
mov
hlt
test
insl
mov
leave
pop
push
jbe
jne
scas
scas
xchg
popf
lret
jge
mov
jl
jb
clc
or
xor
jge
imul
and
aad
jb
sub
out
inc
adc
or
fstpt
cmp
mov
cmp
add
dec
xor
jmp
aaa
nop
int3
push
loopne
pop
int
scas
or
rcrb
ret
and
xlat
pop
loop
jno
push
dec
sti
rcrl
and
mov
or
popa
gs
aas
test
insl
fidivrl
cmpsb
xchg
jle
push
dec
jns
lods
and
mov
fisttps
or
icebp
incl
push
hlt
jg
jmp
dec
addl
push
sub
adc
sub
sbbl
mov
jle
lahf
lcall
sti
cmc
xchg
shl
std
cwtl
dec
mov
lods
adc
fsubs
jo
sbb
or
inc
popa
cmpsb
xchg
shll
cwtl
pop
subl
out
lret
mov
mov
mov
xlat
ret
lahf
cwtl
adc
xor
mov
mov
inc
data16
mov
and
lahf
aaa
mov
xchg
sub
clc
shll
or
adc
jb
pop
mov
in
sarb
cmc
dec
adc
pushf
cmp
outsb
outsb
pop
jg
lock
pop
jg
in
lods
mov
mov
pop
popf
add
jmp
pop
jge
cltd
cmp
push
mov
fildl
mov
rcrl
js
pop
es
js
and
jmp
and
pop
fmulp
xchg
aam
mov
jmp
sarl
cwtl
adc
pop
inc
popa
stos
bound
cmpsb
jg
pop
mov
stc
insl
sahf
dec
jl
push
xchg
sub
mov
mov
imull
adc
inc
push
repnz
pusha
and
mov
movsb
negb
sub
lcall
sti
push
test
cmpsl
sub
mov
fsubl
std
bound
xor
adc
in
addr16
mov
sahf
test
mov
dec
and
cltd
mov
loopne
mov
pop
lea
adc
mov
or
inc
inc
cwtl
push
hlt
adc
sub
lods
mov
shrl
les
fadds
mov
sbb
dec
bound
push
jl
jmp
jno
outsl
lods
mov
sub
jno
cmp
out
push
cs
negb
pop
out
ds
jl
cmp
mov
push
popf
or
lcall
test
push
mov
mov
aam
outsl
inc
mov
lock
mov
test
dec
jmp
jmp
or
inc
inc
cmp
mov
add
or
cmp
xchg
and
mov
decl
nop
jbe,pn
mov
add
xorl
jo
out
mov
xor
adc
add
scas
and
mov
lea
pop
push
cmc
xor
mov
xor
repz
dec
fidivs
cmp
das
jne
dec
outsb
pushf
aam
jne
test
lret
mov
sub
and
sahf
and
inc
jbe
fidivl
sub
dec
lods
in
mov
push
jg
fmul
or
loope
adc
into
leave
in
cmpsb
push
dec
test
das
fstps
pop
sub
push
dec
adc
adc
jmp
mov
jne
scas
lds
testb
add
rcrb
xor
data16
mov
push
adc
and
xchg
xor
test
roll
rclb
mov
aas
cmpsb
pushf
cwtl
mov
jmp
repnz
testl
cmp
std
xchg
xchg
loopne
stos
sahf
popf
sbb
push
jns
cs
in
inc
pop
int3
xor
xchg
push
cmp
jbe
lcall
loopne
pop
out
inc
mov
fcoms
fs
lret
inc
je
sarb
lahf
push
mov
repnz
cmp
outsb
lahf
cmovg
int3
inc
dec
sbb
xchg
or
adc
cmc
fisubrs
dec
repnz
mov
fldenv
push
xchg
out
cs
iret
icebp
pop
out
push
mov
sbb
xor
cmp
push
pushf
mov
data16
dec
shl
sbb
aas
sub
xchg
loop
mov
leave
cmpsb
mov
pop
push
jecxz
push
jge
out
jno
loope,pn
mov
cwtl
test
movsl
adc
mov
repnz
stc
xor
in
orb
push
loopne
int
enter
ss
jp
add
cmp
shlb
push
ja
aad
pop
aas
jg
test
mov
push
aaa
dec
dec
in
sti
subl
adc
pop
mov
xor
and
data16
out
mov
sbb
aad
mov
lods
dec
inc
insb
out
mov
mov
nop
jnp
idivb
sbb
mov
dec
iret
mov
sarb
xor
stc
stc
inc
push
std
das
popa
fistpl
test
outsb
fbstp
mov
push
dec
mov
xchg
inc
adc
nop
xor
adc
inc
add
jl
push
jns
or
icebp
pop
imul
mov
jle
mov
mov
movsl
sbb
and
push
mov
adc
add
call
jle
xor
ret
lahf
test
cmp
incb
cmpsb
or
cmpl
and
or
dec
pop
dec
and
mov
mov
sbb
mov
loop
push
mov
repnz
lock
jo
ljmp
lret
cs
jecxz
add
sub
nop
cltd
lahf
rol
cmp
mov
jge
js
hlt
addr16
cltd
gs
push
xchg
pop
mov
in
aas
xchg
dec
test
cmp
jne
jl
sahf
dec
lret
lcall
push
ljmp
cmpsl
aaa
lods
pop
inc
insb
push
aas
mov
adc
stos
jbe
pop
cmp
int
mov
xchg
sarb
cmpl
outsb
pop
pop
or
ljmp
dec
lea
mov
test
xlat
daa
add
loop
xchg
jnp
mull
test
cmpsl
clc
and
inc
outsl
fisttpl
push
loop
lret
loope
lds
or
dec
push
jp
fnsave
in
and
out
jne
cltd
sbb
sub
lret
in
fisttps
decl
pmulhuw
xchg
loop
push
sub
addr16
mov
mov
add
dec
adc
pushf
iret
dec
lock
jmp
xor
pop
pop
xorl
pop
fildl
push
adc
mov
push
push
fiadds
push
adc
out
loope
mov
rorb
mov
push
test
mov
add
mov
mov
aam
push
cmp
inc
shlb
js
test
adc
dec
mov
cwtl
repz
jmp
pop
pop
mov
sbb
mov
icebp
fcomp
mov
notl
adc
xor
pop
xor
adc
fs
popf
dec
lds
sbb
cmp
insl
pop
loop
push
scas
cmp
rcrb
jg
pop
test
scas
push
xor
cmp
add
jnp
push
mov
aas
dec
sub
mov
jmp
fstpl
pop
aas
js
test
pushf
cmpsb
cmp
rcrb
pop
dec
inc
push
addr16
popf
adcl
aaa
ret
inc
mov
out
int3
or
stc
shll
inc
push
dec
das
leave
mov
add
xor
fisubrs
sub
daa
dec
sub
cmp
and
jecxz
insb
jb
xorl
ret
sbb
cmp
sub
les
xor
xchg
dec
cltd
in
das
cld
mov
test
popf
inc
mov
pop
or
xchg
add
pop
repz
mov
clc
insl
aaa
dec
xchg
jno
dec
ror
xchg
les
shll
arpl
rcl
cltd
cmpsl
pop
xchg
fmul
cmpsl
and
sbb
push
push
sahf
sbb
popa
sahf
loopne
lea
ss
gs
xorl
sbb
ds
jecxz
cli
inc
shrb
cmp
je
shl
lret
pop
jne
fmulp
call
sub
sub
cli
adc
es
dec
out
ja
inc
lret
mov
pop
loop
pop
shll
movsb
mov
ss
pop
fists
push
push
out
sbb
shll
add
popf
in
xor
jne
pop
and
and
fisubl
mov
sub
push
mov
mov
mov
subb
dec
mov
xchg
and
adc
pmuludq
sti
cmp
bound
movsb
push
loopne
pop
push
ss
xor
pop
cs
mov
cmp
lahf
and
js
in
dec
into
sub
mov
pop
testb
pusha
repz
xchg
add
ds
and
stos
push
mov
pushf
ret
sbb
repnz
stos
or
into
cli
or
stos
mov
mov
aam
out
push
sub
mov
cmc
mov
loope
push
pop
dec
inc
inc
andb
in
cmp
shlb
in
jno
les
push
repz
shlb
push
cld
or
enter
cltd
lock
push
ret
or
out
mov
aaa
sub
sbb
jp
adc
fs
fmull
fs
dec
shll
mov
out
loop
psadbw
dec
xor
and
loopne
jmp
mov
pop
sub
cli
add
jnp
addb
cli
pop
jecxz
mov
daa
mov
pop
push
aaa
mov
mov
xor
mov
fistl
into
and
push
adc
sub
je
dec
push
stos
mov
loop
dec
cmp
mov
jbe
mov
bound
aas
mov
je
and
dec
sub
rcll
fbld
ret
jb
and
xlat
pop
pop
into
xchg
int
bound
jl
dec
fwait
mov
xlat
dec
sbb
push
jmp
cmpsb
jne
adc
sbb
stos
jb
movsb
clc
mov
jge
gs
not
sub
xor
rol
mov
dec
scas
xor
and
sbb
lods
cmp
shll
or
mov
jecxz
dec
sbb
or
cli
pop
daa
pop
popa
decl
push
into
and
inc
and
cmp
inc
push
xchg
jb
mov
mov
call
mov
mov
cmp
lock
call
mov
rcll
out
cltd
mov
jo
cmpsl
push
adc
repnz
pushf
xor
mov
dec
cltd
mov
idivb
or
lret
testl
mov
adc
or
push
sub
sub
pop
cmp
jae
call
jl
add
mov
loope
lods
add
repnz
clc
aad
shr
pop
sbb
mov
lods
add
vphsubwd
jmp
pop
pop
mov
js
imul
push
adc
push
aam
mov
mov
pop
pop
mov
jns
mov
or
cmp
lea
cmp
dec
enter
stos
dec
shll
dec
fadds
inc
imul
and
mov
scas
vprotw
push
jp
inc
aas
jb
or
testl
add
or
or
inc
pop
aaa
dec
imul
bound
adc
mov
mov
std
and
movsb
int3
push
imul
repz
movl
sbb
sub
sbb
popf
out
mov
adc
jecxz
inc
inc
test
pop
mov
int
aam
adc
bound
stos
lds
mov
daa
stc
int3
mov
es
mov
and
xor
sbb
jno
push
jae
pop
mov
jecxz
pop
int3
stc
stc
fwait
push
inc
andl
pusha
scas
jge
pop
sbb
xchg
popf
out
inc
lods
shl
mov
xchg
and
adc
xchg
push
out
or
lret
adc
imul
sbb
into
into
push
dec
int
sub
add
and
int
rclb
mov
je
int
adc
lret
shll
dec
cmp
dec
mov
xor
sub
ret
push
loope
cltd
jecxz
cmc
xchg
cwtl
je
aad
pusha
or
dec
stos
in
cmc
jno
sahf
aad
int
in
aam
xlat
sub
dec
lahf
dec
cmc
xchg
sbb
sub
cltd
mov
dec
jl
xor
lock
clc
cmpsb
mov
inc
aad
lock
leave
stc
or
test
ljmp
push
aas
mov
lret
popf
sub
sbb
call
fs
or
jo
cltd
repnz
out
sub
pop
and
cli
dec
outsb
mov
data16
fldl
pop
cli
xor
mov
mov
and
call
mov
leave
js
mov
sub
rcrb
mov
dec
push
pop
out
lret
aas
vpmulhw
shl
int3
xor
pop
mov
mov
push
mov
in
scas
jl
or
mov
lea
mov
sbb
mov
sbb
into
rcrl
in
mov
xchg
bound
sbb
inc
hlt
sbb
in
lds
ds
repnz
stos
push
imul
enter
dec
bound
mov
push
out
lods
push
into
sub
mov
cltd
je
mov
mov
loopne
push
dec
mov
add
test
push
fs
mov
sbb
movswl
or
mov
aaa
sbb
jp
inc
cmp
arpl
sti
sahf
push
inc
dec
mov
ss
les
dec
or
dec
pop
dec
addr16
add
xchg
cli
jmp
add
ret
fidivs
xchg
aam
lret
sahf
mov
je
push
out
fs
xor
mov
jae
movsl
mov
or
dec
repz
push
leave
or
gs
mov
jp
test
fisubrs
testb
mov
pop
frstor
cmp
testl
mov
ljmp
and
sbb
sahf
lea
imulw
sub
and
aaa
push
mov
adc
dec
dec
fmul
call
mov
mov
and
xchg
lods
mov
pusha
or
sti
pop
xor
in
fidivl
das
or
cmp
das
mov
divl
mov
or
jae
push
jmp
fldl
add
cmpsl
or
pushf
mov
mov
dec
or
negl
pop
lret
or
lea
lahf
pushl
das
push
mov
lahf
test
add
bound
and
aaa
sub
jae
jne
fcmovnb
fldcw
jl
xor
mov
and
outsl
sahf
aad
adc
add
ret
outsl
jle
loop
fwait
mov
push
out
cmpsb
cmp
stos
subb
and
arpl
sbb
pushf
dec
dec
add
ljmp
cmpb
pop
push
xlat
mov
push
add
jl
push
into
push
ficompl
cltd
xchg
fmul
or
mov
rcrb
sub
xor
mov
sub
std
push
jg
dec
pop
cmpb
es
mov
stos
dec
xor
mov
ljmp
jmp
pop
push
jmp
inc
imul
mov
stos
ljmp
mov
lret
cmp
push
push
cmp
pop
dec
or
sub
cltd
jo
xchg
test
in
and
jge
jmp
xchg
jbe
outsl
aam
sub
jne
outsb
jg
aaa
push
push
test
out
loopne
adc
fs
push
push
and
xchg
xchg
repnz
dec
add
shll
jl
sbb
xchg
clc
mov
inc
loopne
insl
pop
hlt
test
es
xlat
push
inc
outsb
ds
cld
sub
es
roll
aaa
lods
push
out
stos
loope
mov
imul
dec
not
inc
popf
mov
cmp
out
mov
stos
in
mov
adc
jbe
push
push
mov
movups
adc
fildl
mov
mov
push
mov
lret
push
cmp
rol
push
mov
mov
dec
mov
xchg
fwait
lret
jne
sarl
jbe
push
pop
add
popl
inc
cmpsl
jbe
jo
filds
vaddsubpd
xchg
lods
add
lods
shl
imulb
sbb
sbb
push
sbb
inc
pop
sbb
out
repnz
sahf
and
insb
pop
ja
inc
cs
jb
stos
or
mov
int
sbb
jnp
lcall
jl
xorb
and
arpl
movsb
pop
jb
ret
sbb
inc
repnz
sbb
fldenv
addr16
jge
cs
lret
es
out
inc
int
adc
dec
lods
push
repnz
sahf
out
cmp
shll
mov
gs
adc
es
cmpsb
dec
fdivrl
mov
add
add
add
mulb
add
mov
inc
into
add
cmp
imul
in
push
iret
push
cmp
es
jns
and
inc
adc
xlat
sub
mov
xlat
sbb
jnp
fs
lds
mov
bound
nop
inc
gs
scas
cs
xchg
test
dec
mov
xchg
cltd
int
and
es
into
cmp
addl
mov
neg
xor
loope
pop
ljmp
pop
mov
jge
jb
cmp
scas
jno
dec
popf
pop
dec
or
pop
jp
pop
xor
cmpl
pop
jo
in
and
cwtl
clc
loope
and
adc
mov
addb
pop
lea
mov
and
mov
out
into
dec
enter
fists
bound
or
and
shl
out
hlt
jle
xchg
imul
inc
xchg
imul
mov
cmp
repnz
pop
rcl
mov
rcrl
adc
push
lcall
push
imul
or
add
cmp
lcall
cwtl
mov
sub
jae
inc
out
in
add
push
inc
movsl
sti
cmp
or
ds
pop
xchg
sub
cmp
sbb
lock
pop
or
mov
daa
jnp
sub
rcrb
dec
sub
or
or
scas
rcll
pop
adc
test
in
outsb
xchg
adc
push
scas
jp
jl
inc
mov
pop
jae
jo
div
dec
mov
push
mov
je
rcll
cmpl
insl
pop
push
or
sub
clc
out
xor
arpl
sbb
or
mov
sub
in
mov
pop
out
mov
add
cli
xor
mov
add
nop
pop
cmc
fcmovnu
xor
or
push
stos
cli
add
dec
divb
int
leave
cmp
pop
sbb
sarb
pop
mov
das
fstps
push
dec
jg
fiadds
enter
insl
fninit
adc
pop
cmc
imul
cmp
push
sbb
fdivl
inc
loope
jb
sub
aad
es
jae
add
mov
mov
fwait
pop
sub
jp
or
push
mov
clc
mov
or
inc
fs
pop
bound
out
add
sub
adcb
xor
push
out
inc
jmp
or
sub
shll
cli
xchg
call
out
ret
das
jo
xchg
mov
jl
jno
mov
sbbb
fwait
mov
jne
rclb
xchg
imul
cli
pop
dec
xchg
outsb
xchg
inc
jnp
outsb
xchg
xchg
push
jnp,pt
mov
imul
hlt
loope
xchg
aaa
mov
pop
sahf
push
leave
leave
and
dec
sti
mov
dec
mov
loopne
pop
mov
push
shl
sti
jo
rcrl
sub
mov
idiv
cmp
dec
cli
pop
and
mov
add
dec
cmp
add
sbb
stos
sbb
sbb
add
sbb
pop
and
leave
ss
fmul
pusha
call
xchg
cmp
pop
jns
xlat
sub
sub
ss
aam
push
leave
adc
ds
jnp
mov
mov
jmp
or
push
mov
pop
scas
dec
push
rorl
ljmp
mov
jg
lret
pop
mov
es
std
jle
call
and
xchg
pop
sub
mov
fnstcw
mov
iret
lret
in
call
pop
lret
xor
and
test
fisttpl
pop
pop
inc
leave
cmp
sbb
repz
jge
mov
inc
cmp
and
cmc
push
lahf
add
add
mov
and
das
iret
push
add
ja
in
fs
push
test
into
and
iret
pop
and
rol
jmp
sub
icebp
fsubrs
sub
push
rorl
xchg
arpl
addr16
push
jmp
add
stos
cwtl
and
add
scas
push
sahf
jae
call
jb
loop
stos
jp
in
testl
das
mov
nop
sbb
sbb
xchg
adc
loop
push
lahf
or
push
ror
pop
sarb
sub
fdivs
inc
sti
test
les
push
repz
jb
xorb
cli
bound
add
jae
sub
aaa
jnp
les
in
dec
or
leave
push
mov
shlb
mov
mov
jo
xchg
data16
add
dec
out
fndisi(8087
sub
or
push
test
mov
push
lods
dec
jo
xchg
push
imul
sub
add
or
ret
or
repz
cltd
fmul
xchg
lcall
ret
jg
repnz
inc
rcrb
inc
push
scas
jbe
jne
iret
cs
daa
pop
fnstcw
mov
out
out
js
scas
mov
std
negl
decb
sarl
xlat
popa
sbb
frstpm(287
lahf
lcall
inc
push
loope
add
cmp
push
fidivrs
das
das
cmc
bound
and
pop
je
leave
xor
add
pop
xor
call
xchg
jle
adc
cmp
shrl
add
jg
xchg
sahf
sub
mov
mov
mov
popf
testb
leave
sbb
xor
sti
adc
lahf
dec
call
xorl
jb
pushf
add
addr16
jle
ss
shrl
out
sbbl
push
cmp
negb
cmp
loopne
aas
insl
sub
addr16
addb
cmp
test
push
movsb
mov
shlb
in
aaa
pop
mov
cltd
lret
aaa
repnz
test
inc
mov
mov
cmp
pushf
js
mov
pop
sub
rcrl
aas
into
in
pushw
and
roll
mov
mov
testb
sti
xchg
in
data16
enter
test
push
or
mov
mov
jmp
in
dec
xchg
nop
or
dec
jbe
adc
inc
inc
pop
mov
pop
popf
push
ss
sub
aad
fsubrp
adc
xor
and
lods
lock
dec
jnp
ljmp
dec
ret
test
out
ss
das
fdivl
stos
les
in
or
and
shrb
mov
int3
mov
stos
dec
adc
das
call
aam
aas
aas
jbe
fcmovnbe
fisubl
push
daa
mov
push
adc
movsl
mov
out
sub
jmp
and
xor
arpl
test
mov
jg
push
loop
or
and
jo
sarb
mov
xor
jbe
adc
jne
cmp
insb
ret
lods
rcrl
dec
std
rcrb
push
lds
push
push
add
arpl
inc
push
cmp
cwtl
test
imul
cmp
fucomip
pop
mov
movsl
cs
cmp
mov
shll
pushf
out
in
mov
jle
cwtl
fcmovnu
aam
mov
xor
and
movsl
xlat
out
xlat
test
je
jecxz
xchg
mov
xchg
mov
imul
sub
cmc
int3
jae
movsl
das
adc
jae
out
data16
inc
int3
int
out
add
mov
dec
xchg
fs
fsubs
in
mov
mov
ds
jbe
mov
sub
or
rcll
and
pop
loopne
pop
cmc
shrl
imul
dec
mov
pop
out
call
sub
xchg
mov
insl
cmp
or
idiv
jno
xchg
mov
fistps
cli
das
xchg
ret
int3
addr16
xorl
xor
lock
pusha
dec
lea
std
enter
mov
out
xchg
xchg
lea
sub
sarb
sbb
mov
iret
sti
and
icebp
outsb
sub
lds
mov
ss
push
or
or
jno
push
xchg
push
sbbl
push
jno
mov
mov
lock
xchg
cmp
and
mov
js
cmpsb
cmp
pop
sbb
lcall
push
js
sbb
sti
adc
arpl
adc
mov
inc
incb
or
inc
cmpb
push
jne
and
and
pop
in
jne
sub
cmpsb
mov
add
stos
js
sbb
cmc
jecxz
outsb
mov
pop
loopne
insb
pop
cltd
xchg
fwait
out
inc
sub
stc
cmp
arpl
orl
or
add
push
pop
cmpsb
sub
jl
mov
imul
dec
stos
iret
pop
mov
jp
in
xchg
pop
jae
xchg
test
mov
inc
dec
cmpsb
ja
test
imul
and
mov
dec
int3
movsb
pop
hlt
sbb
ret
and
ja
sub
popa
mov
lahf
lods
pusha
xor
mov
cmp
and
sbb
mov
in
xchg
call
ffree
stc
inc
push
sbb
andb
fcomp
push
push
adc
inc
lds
aad
ljmp
les
cmp
add
adc
sti
inc
int3
enter
dec
mov
lcall
sti
pop
adc
pop
pop
inc
aas
xor
test
scas
cmp
pop
inc
sbb
sub
in
punpckhwd
add
shll
jbe
push
lret
loop
aaa
sti
shll
rolb
and
loopne
jnp
push
mov
dec
mov
sub
jmp
and
push
pop
fdivs
out
daa
mov
mov
fdivrs
dec
aam
into
call
aas
inc
out
lods
daa
sub
dec
push
pop
mov
lcall
or
fwait
or
jmp
and
loope
xchg
ret
inc
lods
lcall
popf
dec
dec
mov
or
int
sarb
xor
push
adc
ret
sbb
xchg
data16
xchg
mov
push
sahf
pop
cmpsl
lea
lock
jmp
adcb
sbb
jnp
dec
or
icebp
fs
dec
pop
mov
scas
in
sbb
xor
in
sar
push
mov
sarl
push
jmp
sbb
pop
std
popa
insl
jge
jl
scas
out
or
jne
add
cmpl
sbb
and
add
xor
mov
pop
gs
mov
jge
sti
and
xchg
push
or
das
cmp
andps
ja
inc
adc
fsubrp
cltd
jae
mov
pop
sub
int
adc
inc
arpl
inc
dec
aam
lcall
sub
iret
ja
and
push
lret
movsb
je
mov
mov
dec
xor
enter
std
subl
dec
mov
div
sub
mov
fisttpl
jns
addr16
aad
xchg
jbe
xchg
jl
nop
inc
mov
adc
sub
ds
in
sbb
pushf
stos
cli
mov
and
mov
sub
std
xchg
and
lods
sub
add
adc
jb
decb
fwait
bound
lea
push
subl
jne
and
pop
mov
fistps
or
lcall
xchg
lods
mov
adc
mov
and
and
cwtl
dec
nop
xor
mov
jnp
inc
test
mov
adc
test
test
pop
imulb
jmp
jl
mov
cltd
ljmp
call
out
cmp
jmp
pop
pop
mov
fidivl
add
push
outsl
push
mov
ljmp
pushf
mov
mov
mov
rclb
push
and
lds
mov
sbb
shll
pop
mov
rorb
dec
aam
divl
test
pop
aad
fucomp
mov
sub
test
lret
lret
bnd
adcb
insb
cmp
iret
daa
push
pop
in
stos
inc
adc
loop
cmpsl
iret
fistpll
stc
into
xor
in
repz
xor
imul
lret
push
icebp
and
sbb
xchg
cmp
mov
int
and
cmpsb
or
xchg
push
aad
fs
mov
xchg
orb
or
hlt
push
mov
fcomp
xchg
out
movsl
repnz
test
aad
cmp
add
movsb
pop
mov
pop
fs
int3
call
aas
add
dec
pop
xor
mov
stos
xchg
cmpsb
sahf
insb
or
movsl
jecxz
scas
push
mov
dec
jmp
cltd
push
jb
pop
mov
xlat
out
or
ret
jecxz
loopne
sbb
xor
inc
push
jae
and
xchg
int
mov
inc
push
mov
int3
push
inc
fidivrs
mov
rorb
push
mov
pusha
aam
jmp
adc
les
jle
adc
fimull
jb
jne
lods
push
shr
push
movsb
push
xor
ret
cmp
out
mov
mov
ds
pop
and
repnz
cmpsb
subl
add
mov
mov
pop
jge
scas
xchg
dec
or
push
fldt
jno
push
int3
lea
enter
push
cmp
sub
aas
lods
hlt
mov
inc
pop
lds
fwait
sub
mov
inc
orb
pop
jbe
cmove
or
aam
in
sahf
in
and
test
push
mov
adc
mov
or
aaa
adc
bound
pop
insl
cmpb
rolb
add
addr16
in
divb
xor
out
sbb
mov
pop
fdivl
jp
jp
sub
inc
test
push
xor
xor
mov
rcl
or
or
cmpsl
inc
sbb
pop
xor
data16
mov
lods
fsubrl
fildl
xor
mov
adc
cli
dec
mov
sbb
jne
adc
mov
std
jmp
dec
movsl
push
popa
adc
dec
inc
enter
mov
out
ret
cwtl
call
int
pop
xchg
rcrl
pop
push
gs
imul
mov
inc
adc
inc
push
test
insb
sbb
das
popa
lret
xchg
ret
call
gs
push
dec
idivb
mov
add
jmp
movsb
mov
lret
inc
dec
aaa
mov
shrb
adc
insl
movsl
adc
aas
repz
add
iret
test
pop
dec
xchg
insl
inc
mov
jne
push
imul
pop
cli
xchg
popl
stc
cli
lds
cmp
shlb
arpl
stos
stc
fdivs
pop
mov
dec
xor
add
inc
mov
and
inc
xor
jno
xor
push
test
lret
pop
in
cld
in
or
das
call
adc
or
test
in
sub
scas
fwait
and
mov
inc
jbe
inc
xchg
sub
pop
flds
fsubrs
cmp
cmp
out
fwait
fwait
retw
or
hlt
sbb
nop
jge
adc
fistps
and
mov
loop
insb
dec
lods
arpl
mov
or
repnz
and
jnp
mov
sti
mov
sarl
rcll
jb
dec
cmp
xor
clc
loop
jbe
inc
dec
mov
or
ret
cmp
mov
add
mov
xchg
inc
scas
sub
push
fstpt
loopne
xchg
sti
dec
pusha
inc
sub
xor
or
xlat
push
out
mov
fists
dec
adc
enter
iret
mov
data16
xchg
sub
setp
pop
and
mov
mov
daa
sahf
ja
sub
inc
loopne
call
les
pop
mov
fisubl
dec
mov
and
sbb
lock
lcall
je
or
dec
and
subb
mov
aad
sar
jo
mov
mov
loop
adc
inc
lods
jge
add
or
or
sub
push
cmc
mov
inc
push
push
pusha
add
add
adc
out
leave
mov
mov
subb
les
jns
jmp
mov
jns
or
cmp
mov
fwait
jg
xchg
cs
sarb
aam
add
or
movsl
inc
mov
lds
test
dec
pop
imul
or
cltd
push
or
jp
push
or
movl
out
dec
packuswb
movsb
sub
sti
cmp
pop
fcompl
or
fldt
jne
fistl
call
xlat
fcmovu
mov
jge
ret
outsb
and
test
xlat
ljmp
leave
arpl
xor
das
dec
mov
insb
mov
sub
push
pop
push
popa
or
addl
insl
xor
das
dec
mov
mov
adc
push
or
xorl
sub
pop
insb
sbb
mov
loopne
outsl
jno
adc
sbb
fbstp
sahf
lret
mov
cld
jl
fsubrs
sbb
je
icebp
rol
stc
out
fildll
pop
and
sbb
std
cmp
movsb
inc
leave
cmpsb
jle
stc
xor
dec
icebp
ljmp
divl
jg
and
cld
jmp
aad
adcb
dec
mov
inc
pop
test
pop
decb
outsb
pop
dec
lods
movsl
loop
mov
je
sbb
push
or
cmp
adc
inc
jns
shlb
push
test
mov
mov
sbbl
mov
push
rcll
shl
xchg
xchg
ljmp
les
mov
fsubr
push
leave
jo
jmp
addb
sbb
mov
imul
pop
ds
lcall
das
imul
pusha
mov
push
add
ja
cltd
sahf
iret
mov
fisttpl
mov
popa
xchg
leave
jb
pop
je
addr16
fwait
inc
dec
jae
mov
fs
fwait
cwtd
pop
rorb
sbb
sub
jmp
push
jne
hlt
mov
push
adc
push
lret
fidivl
lahf
mov
jmp
push
addr16
lea
fwait
mov
sbb
cmp
sbb
mov
push
stos
std
or
in
lds
scas
test
daa
xchg
xchg
push
cld
cmpsb
jne
xor
bswap
push
movsl
and
jmp
lahf
leave
adc
gs
cmp
test
mov
cli
fsubl
inc
adc
dec
call
jnp
mov
and
mov
mov
jne
inc
mov
hlt
mov
mov
lret
fsubrl
je
mov
das
mull
sti
or
pushf
xchg
xchg
xor
adc
xor
inc
xchg
jo
stos
mov
push
xchg
test
outsl
pop
imul
ficompl
nop
adc
out
mov
add
shl
sub
mov
sbb
inc
dec
xor
js
pusha
test
and
pop
imull
pusha
loope
pop
lahf
fsubrs
jl
shll
dec
jnp
sub
lret
mov
aad
inc
test
dec
cmp
mov
mov
stos
popf
mov
int
cmpsb
flds
push
test
adc
mov
mov
into
adc
loope
sub
nop
xchg
sub
xchg
sub
inc
jecxz
out
lock
test
dec
fisttpll
sub
xchg
jno
cmp
cmc
jle
dec
out
dec
rcrb
jmp
fwait
std
das
pushf
sbb
mov
mov
mov
insl
ficoms
rcr
push
orb
adc
fldt
pop
xor
daa
inc
mov
js
sub
sbb
mov
push
jns
cltd
pop
out
in
jno
lcall
jl
int3
xor
lret
jns
jl
xchg
negb
lahf
mov
bound
lret
jecxz
lds
sarl
rcrl
adc
enter
mov
or
push
sub
adc
outsl
pop
neg
jo
jge
and
jbe
dec
movsb
test
and
xor
aam
mov
jle
sahf
add
imul
add
mov
add
xor
sar
push
xchg
xchg
dec
jg
or
mov
clc
sbb
or
push
rclb
mov
shrl
push
int
cmp
in
add
mov
sub
cmc
insb
adc
lock
rol
cs
push
popa
insb
stos
mov
pop
dec
mov
mov
loopne
jnp
mov
mov
in
mov
add
add
pop
jno
int3
push
mov
aad
clc
loope
js
jb
push
or
xchg
adc
fdivrs
subl
dec
aad
cmpsb
inc
out
lods
ja
stc
incb
cmp
add
jno
jl
inc
pmaddwd
jae
jmp
popf
and
imul
sarb
push
dec
xor
fisubrs
sub
loop
test
jno
repz
push
pop
mov
sbb
jb
inc
lea
mov
insl
xchg
addr16
mov
int
pop
jnp
out
inc
fistl
sbb
fisttps
adc
roll
lcall
ja
pop
adc
lods
xor
jge
pop
push
dec
sbb
adc
dec
mov
jge
sub
insb
sbb
loop
dec
xor
xchg
push
add
cmpsl
fiaddl
sbbb
inc
pop
pop
mov
mov
cli
push
arpl
or
adcb
or
mov
fisttpl
adcl
xor
inc
jl
sub
std
adc
push
mov
enter
mov
adc
adc
mov
sti
js
cmp
jno
xor
dec
sub
pop
push
jg
push
lea
es
jmp
mov
cmpsl
adc
jle
icebp
xchg
jns
bound
mov
icebp
mov
andl
shl
imul
mov
test
push
daa
lret
mov
outsl
xor
xchg
sub
cmpsb
xchg
adc
in
insl
aas
in
and
xor
mov
add
popa
jmp
mov
fwait
xorb
and
xor
test
xchg
scas
xor
test
daa
movsb
sti
pop
loopne
xor
adc
and
das
icebp
fimuls
dec
dec
xchg
in
div
jmp
xchg
adc
mov
jmp
xchg
mov
out
cmp
into
cmp
inc
es
or
je
jmp
mov
push
push
mov
sbb
fcmovne
roll
inc
imul
cmp
lods
sub
inc
jg
loopne
mov
movsb
aas
leave
clc
shrb
ret
lret
dec
push
stc
ljmp
fwait
adc
repnz
and
test
sbb
fidivrl
lret
xor
push
stos
popa
ja
mov
xor
fs
or
sbbl
pop
mov
mov
sahf
inc
and
fs
mov
adc
mov
mov
cmp
iret
inc
pop
push
xor
xchg
add
movsl
into
mov
push
cmp
stos
loop
and
mov
jb
sbb
jecxz
sbb
jo
push
in
jb
mov
call
test
mov
adcb
sti
jns
es
inc
jg
lods
pop
bound
jae
loopne
repnz
push
ljmp
hlt
mov
popa
test
adc
cwtl
call
and
std
inc
cmp
lret
mov
xor
pop
jno
aaa
incl
xor
ljmp
push
ja
ds
outsl
mov
movsb
mov
out
xchg
mov
mov
xchg
dec
jnp
jae
push
pop
mov
fnstenv
xlat
ljmp
xchg
pop
adc
cwtl
jns
mov
and
xor
addr16
in
push
jnp
cmp
clc
cld
mov
mov
xlat
cmp
pop
cli
sub
push
inc
aas
clc
leave
push
cmp
fwait
and
das
sub
test
dec
ficoms
imul
push
and
rcll
xorb
and
and
pop
or
leave
mov
test
lcall
xchg
sbb
mov
push
push
mov
push
inc
push
xorl
sbb
mov
cli
inc
xchg
adcl
mov
sbb
push
outsb
mov
loope
mov
pushf
sbb
jmp
testb
or
sbbb
xor
sub
or
lock
sub
and
icebp
out
sbb
xor
outsb
push
test
mov
mov
add
jmp
lods
adc
dec
xor
std
int
jns
adc
hlt
pushf
in
enter
sbb
shrl
shlb
int
lds
xchg
movsb
test
test
lds
in
ja
xchg
jbe
xlat
inc
int3
inc
icebp
pop
mov
popa
stos
xor
xchg
iret
sbb
into
sub
pop
jge
lret
and
inc
jo
sub
xor
xchg
jno
sub
jbe
inc
mov
imul
jb
push
fistps
jns
divl
imull
es
mov
push
cmpsl
cmp
icebp
popf
paddusw
sbb
push
sbb
xchg
dec
mov
dec
jne
cmpsb
and
gs
cmpsl
push
test
jp
mov
xchg
add
push
push
xor
pop
lahf
mov
in
mov
loop
mov
mov
imul
pop
jne
stos
clc
push
xchg
inc
push
sti
pop
inc
test
pop
sahf
cmp
ds
mov
in
jo
lret
sub
sbb
xor
xor
jmp
cmp
cs
in
dec
ja
inc
adc
out
pop
sti
lret
movsl
gs
xor
ret
mov
jns
add
lods
fwait
inc
rorb
rcll
mov
fwait
nop
lods
loopne
lahf
and
inc
arpl
jle
fwait
cmp
in
sbb
int3
fs
clc
clc
loop
xchg
stos
dec
sub
pop
pushf
add
cltd
sbb
in
jae
dec
stc
out
ss
jo
dec
adc
push
es
mov
inc
sub
sbb
xchg
call
sub
orb
mov
fcoms
add
fiadds
sub
shlb
jnp
arpl
push
push
adc
push
cmp
sarl
push
imul
dec
dec
icebp
adc
icebp
push
jns
jmp
adc
andl
lahf
xchg
xor
adc
mov
shlb
dec
pop
and
ljmp
add
or
out
xchg
pushf
pop
mov
mov
xor
xchg
xor
cmp
lea
ficoml
xchg
xchg
pop
inc
imul
jne
test
jge
test
divb
sub
and
cmc
dec
xchg
cmpb
sbb
mov
or
outsb
xchg
jecxz
add
cwtl
fwait
insb
xorb
out
cmp
jb
adc
add
mov
lret
mov
mov
add
lods
cs
inc
mov
pop
dec
xchg
in
xchg
es
mov
imull
scas
xchg
test
bound
scas
call
outsb
into
loopne
dec
mov
xchg
pop
in
lods
dec
cmpsl
out
repnz
sbb
sbb
rcrb
jne
hlt
imul
pop
mov
cmp
sbb
into
rclb
dec
in
flds
xchg
and
or
cmpsb
cmpsb
je
and
pop
fstl
mov
fsubp
push
jg
jb
popa
test
push
int3
jb
cli
aas
sub
pop
mov
neg
addr16
bound
xor
lahf
in
das
pushf
xorl
roll
lea
popa
out
pushf
or
xor
movsl
out
add
fistps
addr16
mov
adc
mov
and
std
out
addb
into
jbe
mov
push
sub
sbb
add
aam
xor
lock
adc
into
or
leave
and
mov
mov
add
jnp
imull
xchg
pop
add
sarb
mov
fildl
gs
dec
push
cmpsb
xor
mov
xchg
test
xchg
sub
ds
push
rcrb
fsubl
cltd
xor
or
les
popf
mov
mov
cltd
inc
mov
add
shrl
call
jmp
push
and
pop
cltd
outsb
jbe
pop
mov
fnstenv
mov
or
aaa
out
call
sarl
es
fdivl
pop
mov
adc
xchg
and
aaa
in
pop
popf
jo
fucomi
push
ret
insb
inc
inc
mov
cs
and
mov
loope
imul
icebp
out
jns,pn
adc
jne
cwtl
sbb
test
mov
mov
fisubs
dec
push
aad
and
xchg
jp
outsb
inc
push
and
movsb
int3
sbb
scas
aam
jno
jb
mov
mov
sub
addr16
dec
js
push
pop
lock
sahf
movsl
and
fwait
sub
mov
xorb
mov
test
mov
or
cmpsb
jl
dec
jg
test
pop
mov
cld
inc
in
xor
data16
cs
aas
xor
and
xor
ds
and
dec
call
out
cmc
pop
xchg
lcall
dec
xor
ret
sbb
mov
pushw
rcrl
pop
es
icebp
mov
loope
mov
in
dec
stc
adc
pop
pushf
fildll
jnp
in
sub
xor
inc
into
loop
mov
pop
mov
adc
setae
cmp
and
cmpsl
clc
mov
lock
fstpl
test
loope
sbb
fsts
mov
pop
mov
aaa
mov
adc
stos
insl
push
lcall
ret
rcrl
mov
stos
xchg
add
rcl
das
and
loope
add
adc
and
mov
ds
leave
inc
stos
mov
bound
sti
in
xchg
ss
loop
add
jne,pn
pop
bound
pop
pop
ffree
add
adc
clc
mov
xchg
pop
or
out
jg
sub
mov
mov
loopne
lock
or
jne
cmc
push
lret
shr
iret
sub
jns
inc
mulb
insb
repnz
push
sti
repnz
in
js
pusha
push
movsl
pop
or
mov
pop
sti
fidivs
add
mov
lahf
shlb
push
movsl
adcb
out
fisubl
add
dec
or
int
dec
in
jne
xchg
xchg
and
insl
outsl
or
push
mov
lods
pop
fisttpll
nop
pop
pop
rorl
ficoml
and
fcmovne
clc
push
popf
in
mov
adcl
mov
xchg
xchg
sbb
sbb
cli
pop
fptan
out
jno
fwait
loopne
and
lock
jbe
negb
dec
mov
imul
push
sbb
ss
lret
xchg
mov
ffree
insl
lds
or
stos
in
pop
loop
add
cmpsb
js
jecxz
dec
push
jno
lret
sti
add
jnp
ja
push
inc
movsb
inc
cmp
push
lret
rclb
jo
and
shll
int3
push
jg
cmp
not
xor
test
lock
out
cmp
aas
mov
mov
mov
subl
sub
sub
lcall
sub
cmp
xchg
movsb
in
cmp
pop
icebp
push
pop
adc
xor
jo
pop
mov
repnz
mov
mov
sbb
fdivl
xor
add
mov
jbe
xor
andl
and
in
sahf
lock
fdivl
jp
bound
mov
sbb
mov
sub
stos
mov
and
movsb
aaa
fwait
ds
out
nop
dec
xchg
push
cmpsb
dec
lock
test
jns
cmp
inc
push
mov
rcll
ss
jle
add
mov
inc
js
in
dec
sub
or
out
adc
inc
add
insl
xchg
pop
mov
roll
sbb
adc
mov
adc
inc
and
mov
inc
cmp
iret
mov
xchg
lahf
push
test
cmp
pop
cli
jl
js
push
push
xchg
pop
adc
addr16
scas
jae
je
pop
sbb
adc
mov
rorl
jg
or
push
mov
popf
sub
sbb
in
dec
les
pop
push
les
les
in
fildll
push
js
mov
repz
adcl
or
dec
out
loopne
pop
pop
out
mov
sbb
pop
pusha
jmp
jae
mov
call
inc
sbb
out
xor
fists
ja
pop
call
cmp
mov
mov
cwtl
test
sbb
sti
icebp
and
jno
sbb
mov
cmp
es
fidivrl
popf
or
sub
stos
mov
dec
xor
jbe
pop
loopne
fmuls
bound
jo
pop
imul
enter
push
adc
dec
push
lea
xor
ret
add
xchg
dec
inc
and
xor
mov
xor
inc
hlt
test
or
into
push
pop
stos
gs
xchg
pop
jno
lods
pop
addr16
sti
pop
xchg
mov
pop
dec
lods
mov
inc
cmp
sub
insb
push
hlt
push
lods
ljmp
push
lods
leave
pop
xchg
cltd
movsl
fisttpll
jbe
jmp
out
dec
and
fidivs
pop
mov
xchg
mov
adc
jb
es
xor
jge
loopne
pop
cli
and
imul
ficoml
loop
lea
mov
cli
dec
mov
xor
jne
xchg
cmp
add
imul
sbbl
data16
push
inc
int3
push
addr16
or
shlb
jno
pop
push
scas
dec
fiadds
nop
mov
jae
pusha
int3
push
repz
les
push
pop
lret
sti
ret
pop
mov
mov
out
int
sbb
push
repz
jp
and
arpl
into
xor
xor
test
lahf
sbb
cli
mov
sub
lahf
test
shlb
pop
addl
mov
jbe
loope
cmc
inc
inc
mov
mov
add
xor
es
add
in
je
add
in
cmp
test
mov
push
fwait
outsb
repnz
and
popa
dec
mov
outsb
mov
js
pop
mov
addr16
test
or
mov
dec
jns
push
xchg
test
lret
xchg
faddl
jl
shrl
pop
les
fisttpl
or
arpl
sarb
popf
mov
cmc
cmpsb
push
call
out
clc
sar
movsb
arpl
adc
fldl
roll
dec
fdiv
shll
mov
add
xor
cli
leave
sbb
adc
push
hlt
add
pop
and
pushf
push
mov
out
mov
mov
imul
push
aam
lods
sub
mov
xchg
outsb
jg
jo
je
lcall
cli
stos
xchg
lock
adc
push
jne
clc
jge
push
int3
adc
mov
jnp
scas
fs
pop
repz
push
hlt
out
cmc
mov
pop
mov
adc
sub
or
adc
cli
and
add
fwait
inc
arpl
sahf
test
cmp
movsl
loopne
sub
mov
inc
dec
hlt
out
fmuls
fs
repz
mov
push
arpl
lods
push
test
sub
xchg
mov
push
adcb
out
mov
jns
jno
adc
loopne
gs
mov
pop
aam
aaa
xchg
lret
btc
sub
add
xchg
addr16
ds
lods
cmp
loope
sbb
xor
push
cmp
pushf
idivb
leave
lds
out
stos
jmp
pop
aam
fs
xchg
sbb
fcomps
or
adcb
mov
lret
test
leave
cmc
aas
adc
mov
lods
out
mov
sub
scas
push
push
jae
dec
mov
lcall
shll
or
shll
mulb
in
repz
add
fwait
xor
mov
subb
stos
xchg
cmp
negb
mov
mov
jbe
ret
mov
lea
pop
loopne
xlat
mov
cmp
pop
dec
outsl
ljmp
push
mov
les
xchg
pop
and
inc
push
sub
arpl
aas
push
cld
lret
stos
imul
mov
adcb
mov
pop
rorl
icebp
fldcw
jp
test
fistpl
mov
loop
ficoml
jle
rolb
sets
cmpl
dec
push
lock
mov
xor
into
ja
sti
repz
inc
sbb
pop
or
pop
adc
in
hlt
pop
scas
cmp
push
popa
aam
stos
dec
stc
or
inc
in
cld
xchg
fiaddl
arpl
iret
mov
mov
pop
test
lods
flds
mull
push
xor
mov
roll
cwtl
fstpl
inc
sub
out
inc
xor
fdivs
jb
push
out
or
ds
stc
sbb
mov
sub
cld
fsts
scas
mov
or
lret
mov
mov
rcrl
fwait
scas
movsb
pop
lods
mov
mov
jb
es
sbb
in
das
nop
clc
rcr
fdivs
add
ret
cmp
lea
push
orl
mov
and
push
jae
sub
inc
pop
outsl
jne
loop
cmpsb
sub
sti
testl
jle
xor
push
push
or
push
outsb
add
bound
out
jo
and
dec
push
andb
out
adc
add
test
aad
sbb
into
sarl
inc
imul
xchg
lods
ljmp
inc
and
and
add
and
lea
or
add
in
cmp
orl
sbb
lret
xchg
test
mov
rcl
and
add
and
jp
xchg
xchg
adc
xor
mov
sub
and
jne
dec
imul
imul
pop
cmc
sbb
inc
rorl
adc
dec
sbb
mov
fwait
aas
aaa
mov
in
fbstp
repnz
dec
cmpsl
cmp
or
outsb
push
inc
stc
jl
inc
inc
outsl
mov
xor
xchg
pop
ds
les
mov
lds
mov
mov
jb
fstps
mov
push
fucomp
mov
push
mov
sysexit
mov
cld
std
aaa
test
and
loop
cmp
fidivrl
shrb
ret
cli
shld
xchg
enter
hlt
push
push
and
mov
icebp
add
xorl
es
mov
daa
mov
pop
loope
cmp
pop
cmpsl
call
dec
mov
add
ss
inc
int3
mov
sbb
jmp
add
sarb
push
mov
pop
pop
insb
cmp
decl
bound
faddl
or
sahf
das
sub
lcall
mov
fistpl
jl
adc
xchg
ret
push
xlat
dec
sbb
cmp
ljmp
cld
sbb
push
or
faddl
jmp
jb
add
xor
mov
inc
cmp
cmp
jns
hlt
jg
ds
push
or
or
jbe
cmp
mov
mov
mov
pushf
insb
add
rol
loope
sbb
cld
in
and
dec
dec
out
fdivr
cli
or
aad
std
ljmp
mov
cmp
dec
cmc
bound
mov
xor
sahf
push
mov
pop
inc
mov
push
es
je
clc
daa
repnz
cli
fstps
clc
pop
fwait
es
pop
sub
dec
int3
insl
ss
mov
mov
ret
icebp
pushf
fs
fisubrl
repnz
hlt
filds
inc
flds
add
pop
mov
stc
fisttpl
mov
imul
dec
sbb
cmpsb
push
push
adc
mov
sbb
jno
pop
sarb
xchg
push
pop
sbb
clc
sub
and
out
dec
add
je
jnp
inc
out
imul
test
or
aad
sti
shr
jo
cmp
xor
xor
mov
mov
adc
insl
push
xor
aas
les
adcl
xor
mov
pop
sarl
dec
push
idivb
aas
mov
outsb
test
ret
mov
push
insb
pop
pop
enter
push
fidivrs
and
add
pop
mov
fstps
gs
dec
cmp
adc
push
add
repnz
dec
stc
lcall
push
incl
ret
addr16
cli
sub
inc
or
iret
cmp
insl
xchg
lods
repz
mov
loope
lret
or
xchg
ret
pop
sub
sbb
add
lret
adc
push
add
imull
out
lcall
jp
ret
cmpsb
and
fisubrs
pop
ss
mov
shl
jae
into
pushf
dec
jne
adc
clc
adc
mov
add
dec
jg
mov
vphadddq
inc
mov
repz
call
mov
outsl
mov
fprem1
mov
fldl
cli
or
mull
ficomps
test
jg
pusha
pop
adc
push
pusha
xchg
cmpsl
sub
cmp
inc
xor
data16
dec
xor
lret
fwait
jb
lret
jno
cltd
int3
add
mov
loopne
aas
and
inc
je
fisubrl
rorl
mov
pop
pop
repz
and
movb
dec
sub
pop
lahf
call
pop
rorl
or
mov
sbb
jg
repnz
jae
mov
push
dec
leave
int
fwait
mov
in
xor
fnstenv
mov
les
mov
cmpb
daa
xchg
aam
jecxz
cs
and
incb
inc
sbb
test
inc
ret
lea
mov
movsb
inc
ss
or
repz
shrl
adc
pop
add
test
cs
aad
dec
push
arpl
add
ret
xchg
and
insb
mov
incb
leave
fwait
pop
fstps
mov
jb
or
in
icebp
lods
push
pop
mov
int
in
mov
mov
xchg
cli
std
pop
xor
ss
xchg
or
sub
xchg
call
mov
jne
cmpl
add
mov
push
cmpl
push
stos
inc
fwait
jp
lods
dec
mov
fwait
pusha
lods
jnp
lret
dec
inc
mov
outsb
inc
jae
sarb
pop
push
mov
mov
pop
dec
bound
insl
insb
dec
jne
fwait
orl
push
sub
mov
dec
notb
scas
ffree
outsb
push
shlb
xor
jge
aas
rclb
insb
je
aaa
out
sbb
std
notb
cmc
add
lock
cmp
mov
in
inc
add
sbb
rcl
aad
lret
insb
mov
cld
adc
cmp
add
push
into
cmpsl
adc
jae
cmp
cmp
jmp
in
jmp
dec
sub
jl
and
push
or
aas
cmpl
jae
clc
and
lock
rorl
adc
jg
fs
lods
sub
repnz
imul
xchg
sub
popa
fs
pop
aas
mov
pushf
shlb
push
cli
enter
inc
mov
ret
insb
mov
inc
cwtl
lea
push
pop
xchg
mov
mov
jmp
mov
pop
xlat
jno
adc
pop
movsb
adc
adc
cld
insb
shrl
and
or
in
jns
mov
push
sub
xor
std
push
push
pop
mov
pop
inc
or
aaa
cmp
xchg
mov
into
mov
add
mov
loopne
and
inc
jg
push
lds
test
aaa
ds
outsl
push
xorl
fs
loopne
test
push
cmp
inc
in
cmp
dec
xchg
cmp
repnz
jecxz
mov
fnclex
inc
les
aam
inc
xor
mov
arpl
inc
or
pop
sbb
inc
aaa
jbe
inc
adc
fnstcw
and
cmp
rol
adc
push
out
push
inc
adc
sbb
iret
js
xchg
xor
imul
push
outsb
or
jbe
aas
bound
xchg
xchg
xor
enter
xor
rcll
lock
test
cmpsb
daa
ljmp
mov
push
cmpsl
inc
loopne
sub
adc
push
and
mov
mov
push
dec
push
inc
movsl
adc
pop
cmp
xchg
addb
fdivrs
push
decl
fdivs
addr16
dec
aam
fs
xorb
dec
sub
jae
jnp
xchg
gs
incl
aaa
mov
jae
mov
shld
cmp
cltd
fdivrl
lods
ss
nop
aaa
out
push
mov
mov
mov
push
mov
ficomps
in
sub
aad
jp
fnstcw
ljmp
out
not
ret
sub
std
or
ljmp
outsb
rcrl
cmpsl
jbe
xchg
mov
leave
jns
add
repnz
add
jmp
adc
rcrb
mov
outsl
mov
mov
lahf
xor
or
aad
out
or
push
fldl
xor
in
xchg
fimuls
sti
xchg
mov
test
aam
mov
test
push
mov
push
pop
mulb
mov
or
out
cmp
cmpsl
adc
mov
loopne
or
test
and
dec
jge
repz
std
jp
lock
into
popf
scas
pop
movsl
out
lock
loop
loope
into
jecxz
xchg
and
cmpsb
call
xor
ds
dec
je
mov
xchg
mov
loopne
jmp
sub
lds
push
cmp
js
push
push
xor
dec
xor
or
enter
dec
or
pop
mov
adc
mov
xchg
or
pop
adc
scas
inc
add
lcall
lret
ret
xchg
stc
ficompl
xor
mov
scas
mov
movsl
clc
clc
pop
cmpb
mov
dec
je
ljmp
xor
jb
int
movsl
or
pop
mov
cmc
jo
or
ds
mov
mov
sti
in
xor
pop
xchg
sbb
mov
pop
inc
xchg
ds
or
lods
jge
lret
push
mov
inc
sbb
dec
in
adc
loopne,pt
arpl
lcall
adc
lret
xchg
add
daa
iret
shll
xor
push
mov
bound
imul
xchg
or
fadds
adc
jns
loop
cmc
push
shll
adc
sub
popf
push
sub
jb
in
mov
cmp
xchg
pop
mov
mov
xchg
mov
jmp
or
push
pop
cltd
stc
in
push
test
or
and
in
inc
js
repz
stos
mov
rcr
dec
mov
cmp
mov
dec
repz
ret
stc
mov
shrl
or
out
cmp
sbb
repnz
repz
and
fistpll
scas
mov
iret
pop
divl
adc
mov
hlt
bound
aaa
lcall
add
sbb
dec
pcmpgtb
jl
in
inc
push
lea
jecxz
outsb
pop
jne
inc
adc
mov
aaa
mov
out
shrb
out
mov
add
mov
es
push
adc
jge
pop
sub
sub
lds
movsl
sub
std
mov
and
cs
push
mov
and
add
sbb
inc
stc
scas
xchg
mov
mov
xor
and
outsl
lods
xor
ret
sub
ljmp
cmp
clc
mov
mov
jmp
stos
ret
pop
jb
in
push
cmp
adc
add
decb
xchg
cmc
xor
mov
push
rorb
inc
arpl
push
mov
jo
mov
push
icebp
sarb
shl
cmp
scas
mov
decb
test
fdivs
pop
mov
popf
leave
ret
cmpl
insb
or
xor
aas
cmp
and
fidivs
daa
inc
cs
loop
xchg
pop
ljmp
loopne
mov
icebp
movsl
sbb
cwtl
fstps
mov
mov
mov
push
lods
dec
aam
popa
addr16
push
push
sub
iret
popf
lods
sbb
fcomi
stos
jp
shrl
js
cmc
ret
lret
insl
daa
imul
pop
ljmp
sbb
xchg
addb
rcrb
jmp
sbb
add
sbb
ret
fidivs
adc
xchg
movsl
mov
mov
xor
sbb
push
mov
adc
mov
or
inc
push
jb
cmp
insb
fcoms
adc
loopne
jecxz
sub
push
pushw
jg,pt
inc
push
lcall
movsl
jns
cmpb
rcrl
pop
lret
scas
push
cmp
xchg
xchg
and
imul
adc
inc
lea
jmp
xchg
jle
sub
jb
lea
arpl
pop
xchg
addr16
mov
xchg
sahf
stos
inc
test
stc
repz
adc
hlt
mov
test
ret
shl
data16
lret
insb
xchg
jbe
inc
cli
inc
xor
movups
clc
add
or
push
push
and
cmpsb
int
cmc
inc
xchg
pop
pop
jge
sarb
jge
scas
outsb
cmp
xor
pop
push
push
inc
popf
push
movsl
cld
les
out
lods
jp
adc
mov
cmp
pop
inc
cs
pushf
jo
adc
dec
xchg
and
mov
insb
dec
data16
cmp
sbb
stos
inc
outsl
or
pusha
jmp
ret
lods
movsl
fistl
ffree
mov
insb
stc
fidivl
sub
dec
in
dec
jb
xchg
fstps
cmp
cmp
test
xchg
pop
pop
pusha
enter
xor
into
pop
shll
jne
in
mov
sbb
or
adc
xchg
mov
ja
add
xchg
jbe
pop
clc
adc
dec
bound
mov
imul
cli
or
lcall
dec
insl
arpl
mov
mov
ret
scas
xchg
sub
pop
adc
push
or
push
sbb
cmp
pop
xchg
adc
rcr
rolb
xchg
sub
jbe
cwtl
xchg
lret
std
fcomip
insl
scas
cmp
leave
ds
cmp
addr16
pop
mov
push
fimuls
or
mov
cmp
leave
adc
or
outsl
ja
ret
mov
in
ljmp
rcrb
imul
popa
pop
rcrl
mov
scas
or
xlat
xchg
mov
inc
cmp
les
xor
lea
iret
jl
inc
pop
mov
adc
loopne
fistpl
ret
into
adc
mov
xchg
mov
lahf
insb
andl
inc
and
inc
fwait
and
adc
dec
mov
imulb
mov
mov
sub
mov
je
mov
push
jmp
xchg
jg
xchg
jp
inc
push
mov
in
insb
jg
fisubl
push
lcall
hlt
aas
ja
and
jmp
mov
pop
cld
jle
enter
lods
cmp
mov
jmp
loopne
pop
lea
cwtl
xor
lret
aad
sahf
sbb
dec
lcall
xor
jb
xchg
outsb
xor
push
lcall
in
pop
lahf
jecxz
pop
mov
sbb
pop
popf
mov
test
fnstsw
dec
arpl
rclb
pop
shrb
xchg
cmp
stos
adc
sub
mov
xor
xor
repnz
lock
test
adc
jmp
add
outsl
aaa
mov
loop
stos
inc
mov
leave
jno
jo
jl
insb
mov
dec
jl
mov
andb
xchg
sahf
pop
mov
pushf
xor
add
xor
daa
fistl
adc
mov
mov
shll
arpl
inc
mov
icebp
int3
repz
bound
idivl
xchg
add
pop
aaa
bound
mov
or
sub
outsb
inc
in
and
jl
sbb
push
push
inc
pop
cmp
mov
mov
push
adc
pusha
lret
xor
sahf
or
mov
loop
xchg
cld
int3
insl
popf
mov
mov
data16
xchg
pop
lods
jge
loope
mov
cs
test
mov
mov
cwtl
jl
lret
mov
add
xchg
xor
xor
dec
cmp
jmp
std
loope
je
int
out
and
daa
outsb
push
lock
sub
adc
sub
lret
pop
int3
push
adc
jmp
inc
jg
or
mov
xor
fisubrl
lods
mov
push
daa
repnz
mov
cltd
sbb
inc
dec
enter
sbb
dec
cmp
sub
xchg
int3
pop
testb
movb
rorb
shlb
adc
and
push
popf
shl
lock
sbb
shl
xchg
mov
add
jp
add
mov
lret
or
sub
adc
mov
or
push
jo
fimull
mov
into
or
xchg
outsb
add
adcb
scas
ret
test
ljmp
js
xor
pop
out
mov
pop
inc
lock
sub
incb
dec
jb
sub
cmp
xor
dec
add
xchg
xlat
fcompl
rcr
testl
cmp
and
push
mov
arpl
xchg
adc
push
sbb
cmp
push
mov
push
test
outsb
dec
mov
push
push
ss
fstl
dec
pop
mov
movsl
jmp
jl
jo
pop
popl
jp
adc
flds
and
mov
outsb
ret
icebp
mov
cmc
loopne
push
jg
xlat
ret
jecxz
adc
push
inc
mov
sub
inc
out
xor
test
lods
int3
icebp
mov
mov
shrd
push
mov
add
mov
mov
fnsave
rolb
and
and
mov
rorl
nop
ret
mov
cli
push
sbb
jne
dec
xchg
push
mov
mov
mov
jp
mov
add
cmp
in
push
mov
pop
mov
out
xchg
mov
cmpsb
jno
cwtl
mov
mov
mov
icebp
mov
pop
push
dec
jbe
mov
cmp
push
mov
push
imul
repz
push
test
mov
xchg
adc
sbb
cmp
test
idivl
frstor
cmp
dec
sbb
aas
mov
xchg
push
mov
lock
mov
aaa
mov
int
sbb
lea
lds
les
sahf
dec
adc
shlb
fistl
movsb
push
addr16
xor
mov
sbb
repz
cmp
mov
mov
fbstp
outsb
cmp
push
xchg
sbb
testb
test
sub
jge
js
mov
mov
push
dec
adc
push
jp
call
lds
mov
adc
dec
jne,pn
movsl
push
xor
cs
xchg
xor
rcr
mov
dec
xchg
pop
jg
test
fwait
and
and
das
sahf
adc
or
inc
adc
ljmp
dec
mov
test
insb
addb
xor
testl
lods
rclb
xor
jae
and
int
jmp
cld
cs
jbe
adc
cmp
repz
addr16
iret
rcrl
lds
sub
dec
loopne
mov
or
pop
jmp
int
add
js
cmpb
pop
in
sbb
dec
clc
dec
bound
cli
mov
in
pusha
sbb
adc
mov
mov
sub
mov
jl
mov
pop
test
sbb
ljmp
pop
fistpl
jne
int3
cmp
or
xchg
ds
icebp
jae
or
jnp
nop
dec
mov
jle
mov
imul
arpl
stos
jns,pt
sti
cmp
adc
xor
cmp
lret
dec
stc
jg
gs
pop
mov
mov
cli
scas
push
mov
jns
ds
sarb
sbb
lock
cmp
sbb
imul
out
daa
cmp
jno
shll
jmp
lods
call
pop
fisttps
lret
in
xor
pushf
rcrl
mov
lods
out
jns
stos
jmp
or
pop
stc
push
scas
jns
cmp
cmpsl
loope
aaa
idivb
pop
sub
fcomps
orb
push
cmpsl
lea
adc
xchg
pop
andb
movsl
jns
add
xchg
jno
mov
std
jl
xchg
push
jecxz
xchg
mov
outsb
mov
loope
in
addr16
fs
mov
mov
loope
jle
test
rcr
cltd
xor
lahf
in
lock
adc
icebp
jg
loop
jae
mov
xor
lock
mov
nop
lods
and
or
xchg
in
sbb
stos
bound
lahf
mov
cmp
inc
jne
test
jb
dec
xor
mov
mov
mov
rclb
mov
clc
push
inc
out
leave
mov
dec
in
out
mov
xor
in
mov
adc
or
inc
fiaddl
jecxz
pop
loope
test
movsl
sbb
dec
outsb
sbb
push
pop
cmp
adc
popa
int
jge
or
push
push
fdivl
mov
mov
fnstenv
arpl
sbb
and
xchg
sahf
mov
mov
xchg
lods
pop
scas
xchg
cmpsl
mov
fsubs
xchg
ljmp
jp
or
cmp
mov
adc
mov
sarl
mov
fcoml
ret
lods
ret
push
and
jmp
test
xor
and
xchg
mov
lcall
push
mov
mov
gs
fcmovnbe
es
mov
sub
add
clc
push
sub
mov
xchg
rcr
loop
push
mov
xchg
lahf
dec
mov
or
rclb
push
xor
push
sbb
sbb
scas
pop
cmp
daa
add
mov
jbe
and
and
dec
pushf
nop
push
dec
push
aas
cmpsb
lcall
inc
into
data16
mov
mov
and
cmpsb
int3
mov
pop
div
mov
mov
loope
cmp
pusha
mov
cltd
adcl
inc
test
and
pop
push
rcrb
xchg
pop
mov
aas
mov
xchg
in
cmp
shr
xchg
cmp
loope
push
inc
fisubs
pop
out
mov
mov
add
lret
pop
sbb
cmpsl
das
and
inc
sahf
push
jp
in
or
pushf
aad
sbb
repz
cld
dec
push
out
or
pop
clc
sti
out
lret
lods
xor
xor
rorb
inc
sub
mov
inc
sbb
adc
lds
stos
lret
shlb
in
mov
rclb
add
notb
cmp
push
in
enter
out
ja
mov
mov
std
or
fstl
mov
aaa
in
popf
jp
lret
or
push
or
insb
mov
fs
or
test
rolb
nop
loope
cld
xor
pop
mov
mov
push
pop
lcall
mov
or
cmc
pop
xchg
aaa
in
sahf
jg
pop
cmp
adc
or
test
add
test
inc
ss
loop
repz
ljmp
sbb
xor
movsl
addr16
jecxz
sub
ret
lods
add
test
cwtl
pop
xor
rol
lods
mov
loope
sbb
adcb
imul
out
gs
sbb
cmpsb
mov
outsl
jmp
lock
mov
lret
mov
cmc
jne
gs
mov
inc
adc
pusha
enter
cmp
adc
lret
pop
jl
mov
pop
push
jl
punpckldq
mov
stos
in
mov
fdivl
mov
loope
push
jecxz
inc
push
ret
mov
mov
xchg
repnz
lods
repz
push
mov
push
mov
or
int
fadd
pop
std
and
lock
inc
bound
sub
rcr
ficoms
pusha
je
mov
pop
filds
jno
lea
sub
ficompl
lret
movaps
testb
rcrb
mov
mov
jecxz
sub
cld
or
fstpt
inc
adc
fisubrl
xchg
cmp
push
into
mov
xchg
push
in
fbstp
mov
shlb
mov
sbb
add
lock
int
jl
add
outsb
lret
fisubrs
wrmsr
add
dec
insl
enter
xchg
xchg
insl
les
dec
jne
daa
pop
inc
mov
cmpsl
fwait
sub
popa
or
leave
inc
inc
pop
flds
mov
imul
jmp
cmp
movb
das
imul
ljmp
pop
adc
js
xchg
push
test
ljmp
je
push
ss
mov
loop
jmp
inc
lds
inc
adc
pop
lea
rep
jmp
or
sub
pusha
cld
or
popf
test
mov
repnz
shll
stos
movsl
les
sbb
test
inc
sub
lods
lret
test
out
pop
cld
bound
push
aam
jl
dec
daa
or
lret
xchg
insb
or
pop
stos
in
xor
test
push
inc
mov
mov
cmp
adc
out
xor
push
aas
sahf
lret
mov
push
lret
dec
in
aaa
or
jns
flds
push
ficoml
subl
dec
jno
inc
test
xchg
cld
or
lods
ror
movsb
in
dec
adc
mov
out
mov
fisttpl
rol
add
test
mov
jns
addr16
inc
push
mov
xor
mov
ror
cmpsb
dec
cmp
or
push
push
mov
or
ja
mov
and
scas
inc
aaa
sbb
lcall
movl
aam
je
push
and
mov
nop
ja
jl
nop
xor
xchg
ljmp
mov
ds
xchg
cmpsb
loopne
pop
mov
jb
fsubl
ja
cmpsb
lret
sbb
mov
scas
add
jne
push
xchg
cmp
or
fildll
das
inc
xor
clc
movsb
or
adcl
jle
lods
jge
jecxz
sti
pusha
push
push
cmpsl
mov
cs
rclb
fpatan
mov
call
inc
fistl
outsl
mov
push
subl
shl
cmp
je
mov
jmp
push
jne
or
ja
mov
push
lret
fstl
std
std
mov
enter
roll
pop
push
pop
mov
test
loopne
ss
xor
lods
imul
lahf
bound
dec
or
out
sbb
dec
mov
imul
jns
or
and
hlt
sti
adc
mov
dec
test
movl
inc
cltd
mov
popw
or
pop
push
inc
fs
lods
fidivl
mov
cmpsb
mov
ficompl
pop
mov
dec
lods
movsb
xchg
jg
shll
dec
jmp
cwtl
add
inc
sbb
or
add
jecxz
call
dec
and
movsl
das
jo
jbe
mov
jle
inc
xor
sbb
jo
int
sti
pop
xor
aam
enter
inc
idiv
fsubrs
loop
push
sti
push
jp
or
das
js
divl
es
ss
test
rcrl
imul
jle
out
xor
jo
stos
pushf
je
lcall
iret
xlat
fdivl
inc
mov
icebp
inc
inc
push
add
jl
or
loopne
in
jnp
inc
pop
mov
cs
and
es
hlt
adc
stc
push
add
enter
and
fiaddl
pushf
iret
int3
mov
sub
negl
gs
pop
cmpsl
aas
and
dec
jo
loopne
fdivl
aaa
and
int
add
aad
cmp
xorl
ficomps
in
repz
test
or
pop
sbb
pop
pop
and
daa
pop
add
pushf
sbb
mov
data16
dec
pop
jg
xor
ss
mov
pop
test
arpl
pusha
pop
jecxz
mov
addb
outsb
cmc
pop
push
aad
fsubrs
pop
movsb
dec
inc
cmp
into
sbb
testb
add
daa
and
fstpt
and
repnz
into
mov
lods
mov
sub
fisubs
pop
cmp
dec
in
push
lret
xor
out
les
nop
imull
icebp
test
inc
jmp
xchg
in
push
and
in
push
mov
call
xor
dec
cmpsl
js
outsl
movsb
dec
popf
push
mov
push
xchg
dec
push
and
mov
push
lahf
push
dec
gs
sbb
dec
sub
lock
pushf
and
lcall
mov
or
jae
xor
stos
or
into
and
push
repnz
lods
in
jo
lds
push
mov
xchg
out
or
mov
jae
stc
rclb
dec
push
shrl
dec
test
sub
repnz
pop
cmc
inc
mov
mov
pop
stos
daa
and
inc
nop
add
stc
in
add
cld
mov
icebp
ret
ljmp
cmc
sbb
add
inc
mov
fcomps
sub
cmpl
sahf
adc
or
mov
add
xchg
jl
pop
outsb
sub
lods
mov
mov
stos
stos
or
je
jb
negl
xchg
xor
push
pop
cmpsl
loop
inc
add
test
enter
sub
jmp
jl
fxch
test
roll
es
aam
pop
out
insl
ja
or
dec
shll
jle
push
lahf
jle
sub
scas
sbb
jns
cs
xchg
xchg
jns
pop
les
imulb
mov
xchg
test
mov
lock
push
lods
cs
into
mov
add
loop
sarb
cld
adc
dec
jmp
out
test
pop
pop
mov
xor
nop
mov
pusha
xor
hlt
scas
push
jecxz
in
xor
fwait
movsb
fcmovnb
repz
out
test
xchg
ret
push
leave
mov
or
cld
cs
mov
subl
in
push
jns
inc
push
stc
sbb
xchg
jne
add
mov
movsb
cli
in
push
mov
leave
mov
dec
inc
lret
loopne
je
outsl
call
mov
push
addr16
add
aad
cld
stc
roll
dec
mov
ficompl
popl
pop
mov
and
shlb
test
sbb
je
testl
aas
pop
fs
dec
add
lahf
fs
inc
in
and
movsb
cwtl
mov
pop
aaa
mov
jmp
mov
cmp
test
fiadds
xchg
lcall
arpl
push
jl
mov
xorb
fnsave
push
dec
mov
mov
lods
movsb
shrl
xchg
in
push
push
ja
aaa
outsb
les
es
cmc
inc
and
inc
inc
fildll
cmp
daa
mov
xchg
sbb
pop
lahf
aad
inc
or
flds
inc
scas
cmp
jg
bound
test
pop
mov
stos
pop
push
std
imulb
dec
sbb
or
mov
mov
lds
jns
mov
aad
sub
adc
add
ror
in
inc
push
or
and
sub
inc
pushw
cmpsl
or
xchg
push
insb
je
xchg
sbb
xor
cmpl
stc
mov
sti
loopne
mov
addr16
loope
pop
rorl
vunpckhps
or
sbb
or
mov
and
mov
mov
inc
cmp
or
sbb
sub
add
adc
dec
sub
ljmp
test
jg
enter
adc
pop
faddl
sbb
test
test
xchg
xchg
ret
push
fisttpl
push
xor
cmpsl
out
int
pop
movl
cmp
xor
cld
stos
stos
scas
sbb
neg
or
jbe
mov
mov
sti
add
mov
aam
jno
and
dec
insl
cs
xor
and
push
cld
stc
and
mov
and
pop
stc
add
jns
cwtl
adc
loopne
push
add
ljmp
mov
add
push
mov
pop
sub
insl
fiaddl
mov
sti
mov
ja
and
lock
push
push
in
pop
pop
xchg
add
fwait
adc
jae
aad
jg
xor
scas
dec
push
js
push
mov
mov
sarl
int3
sbb
jmp
iret
mov
sbb
add
stos
cmp
aaa
das
ret
out
jno
jmp
aad
mov
sub
xchg
xor
sbb
inc
roll
int3
cmp
push
pop
stos
mov
ret
jl
and
sti
call
sub
push
daa
push
push
mov
mov
xchg
in
arpl
popa
fdivl
rcll
popf
cltd
ja
cmpsl
inc
sbb
mov
cmpsb
push
fcmovu
lcall
xor
jae
xchg
bnd
sbb
dec
stos
cwtl
and
cmpsb
icebp
push
push
jle
clc
jbe
adc
mov
stos
daa
mov
sbb
aaa
pop
push
inc
xor
in
inc
adc
lahf
fsubp
out
add
loop
mov
fistpll
das
stos
push
add
cmc
lret
pop
nop
jbe
sub
fstpl
or
xor
xlat
dec
jge
jg
push
stos
adc
les
enter
or
mov
xchg
mov
sub
push
fldl
mov
cmpb
mov
cmovg
mov
enter
xor
adc
mov
jecxz
test
orl
divl
jae
popl
sub
mov
mov
ja
adc
addb
dec
sbb
test
fs
push
xchg
shrb
call
fbld
cmc
daa
insb
nop
shl
shrb
les
inc
notb
cwtl
cs
jne
jp
imul
stos
aas
jge
push
add
jge
or
mov
mov
mov
mov
cmp
ja
cmpb
icebp
ret
lods
or
add
fmuls
or
loopne
pop
sbb
aaa
inc
jno
mov
mov
and
and
add
repz
leave
pop
les
xor
stc
leave
cmpb
xor
test
outsl
mov
fdecstp
add
push
jo
adc
or
int3
scas
aad
and
xor
stc
or
adc
push
in
cli
mov
aam
mov
jbe
add
cmc
cmp
cmpsl
fs
jnp
movsl
test
outsb
lret
loopne
in
sbbl
ret
sub
out
outsl
out
pop
add
inc
pop
cmp
fdivl
pusha
add
mov
add
pop
ja
pop
jo
movsl
call
xchg
xor
sub
add
sar
inc
push
testb
mov
push
push
ds
outsl
cmpsb
arpl
sub
pushf
in
dec
push
inc
push
repnz
dec
xor
push
sub
clflush
push
mov
cmp
lahf
inc
in
push
movl
jl
add
push
mov
jbe
pop
xchg
sub
xor
stos
sahf
clc
xor
test
es
sub
or
lret
loopne
call
int3
gs
cmp
fidivrl
mov
mov
adc
jno
xor
movb
cmp
xor
and
push
movl
and
mov
adc
lock
jne
das
jne
ljmp
pushf
fwait
mov
imul
jae
jne
cltd
add
fwait
ljmp
fdivs
xchg
inc
and
add
daa
rcpps
lcall
push
pop
stos
call
scas
je
jnp
stc
lret
jb
pop
mov
int3
mov
adc
insb
test
fistl
mov
mov
push
cmp
mov
mov
fdiv
mov
cmp
fidivs
inc
cld
and
ret
stos
pop
test
mov
sbb
in
loope
xor
add
cmpsl
fcomip
sub
add
add
rcrb
scas
inc
dec
push
aas
push
jge
xchg
and
rclb
jb
sti
lock
fldl
dec
cltd
outsb
sbb
pop
lea
pop
sbb
inc
mov
cwtl
mov
dec
mov
pop
jns
xchg
ljmp
aaa
icebp
pop
xchg
aam
cs
hlt
jne
cs
pusha
add
stos
lcall
push
in
mov
jecxz
jp
mov
out
aam
xor
jbe
mov
mov
sbb
push
dec
hlt
insb
mov
in
pop
push
cli
add
test
xchg
pop
cmpsb
xchg
arpl
dec
cmp
push
fistpll
jns
int3
jbe
adc
orl
pop
cmp
sti
pop
pushf
movsl
sub
lods
sub
adc
mov
popa
dec
out
shl
das
mov
cmovns
mov
stos
insl
push
and
xchg
sbb
lods
inc
pop
cmp
cmp
jae
sbb
cmp
int
mov
fcoml
jb
pop
fs
imul
out
in
popf
lds
pop
repz
jne
lods
dec
jne
xchg
or
lds
or
test
xlat
pop
add
mov
mov
rol
mul
das
lea
lea
out
push
loop
shll
mov
sub
mov
xchg
daa
or
mov
sbb
pop
xchg
inc
adc
pop
loopne
inc
out
jne
push
inc
ret
faddl
adc
insl
insl
jbe
data16
mov
pop
stc
dec
cmp
cs
bound
dec
jp
dec
test
and
mov
enter
inc
out
repz
xchg
dec
andb
inc
and
loopne
lea
sub
jg
mov
push
pop
xor
mov
mov
push
sub
ljmp
scas
addr16
aad
jb
cwtl
iret
pushf
cmp
mov
sub
les
pop
shrb
pop
outsb
mov
jle
fnstenv
cli
daa
lock
mov
test
movsl
pushl
xchg
testb
push
sbb
and
aaa
repnz
inc
and
and
sub
out
xchg
mov
inc
and
inc
push
jnp
imul
xor
xchg
aam
inc
mov
pushf
mov
add
and
stc
sub
push
xor
rorb
addb
xor
repz
xor
xchg
insl
pushl
fcoml
popf
or
rcrl
adcb
adc
and
sub
stos
or
addr16
test
test
sub
jo
inc
clc
pop
and
inc
movsb
mov
mov
movsl
push
push
movsb
dec
mov
aas
push
in
cltd
jmp
sbb
mov
inc
mov
push
xlat
insb
cld
stos
add
divb
push
jmp
push
outsl
mov
lock
shlb
add
xor
xchg
in
adc
xor
dec
xchg
mov
lahf
nop
push
xchg
jg
repz
sub
jecxz
adc
mov
fsts
aam
aas
popf
xor
in
lock
pop
shl
adc
or
cli
test
orb
int
and
mov
inc
sar
pusha
xchg
negb
xor
addr16
ret
mov
jp
leave
cmpsl
rcll
mov
repz
mov
jl
push
mov
jge
int
pop
cmc
imul
stos
jl
in
adc
pop
inc
insl
loope
and
ret
inc
jns
fldl
mov
jne
sbb
mov
cmp
dec
out
lcall
fwait
jae
fistpl
xchg
adc
xor
loope
or
adc
mov
mov
and
xor
inc
dec
loop
pop
dec
int
adc
add
lea
notb
incb
dec
add
sub
xor
inc
mov
je
in
hlt
mov
mov
jno
sahf
lea
lcall
aaa
insl
fdivl
mov
and
push
mov
mov
repz
jne
jecxz
or
adcb
repnz
sbb
rorl
jl
sbb
in
cmpsb
dec
jne
lds
fs
and
add
ss
push
mov
pop
mov
xor
mov
push
inc
or
dec
mov
faddp
pop
aaa
or
sbb
xchg
popa
xor
lods
sbb
or
dec
dec
jmp
sub
int
push
cltd
cmpsl
xchg
in
ja
xchg
and
sub
mov
lcall
adc
ret
xor
pop
mov
or
test
pop
nop
les
xlat
cwtl
mov
cmp
jle
rcll
das
in
cmpsl
sbb
test
add
mov
push
xor
sbb
gs
jmp
jg
lods
ss
test
mov
int
lock
xchg
jmp
and
mov
push
sub
and
jbe
outsb
cltd
add
popa
sahf
mov
scas
fisubs
adc
rcrb
jl
jecxz
and
hlt
and
repnz
pushf
and
cmc
xor
loopne
mul
sub
test
push
add
lock
or
add
inc
fisttpl
test
push
lods
push
dec
stos
pushf
scas
push
mov
xor
cmpl
std
push
aas
xorb
xchg
add
lods
pop
lea
popa
addr16
repnz
ret
stos
add
call
and
bnd
mov
push
nop
dec
mov
outsl
inc
mov
out
daa
dec
mov
cld
loopne
jo
pop
mov
mov
gs
icebp
or
cmpsl
mov
mov
ret
dec
or
loope
stos
cwtl
sahf
or
push
shll
xor
cld
fiaddl
xor
jns
fwait
out
cli
lock
push
dec
aaa
dec
push
rorl
xor
mov
mov
dec
or
dec
cmp
sbb
inc
inc
mov
push
pop
shlb
push
pop
xor
add
pop
sahf
data16
sahf
aas
fdivl
out
faddp
dec
pop
adcl
push
ret
inc
ljmp
or
jae
mov
outsl
dec
xchg
gs
test
pop
pop
adc
jecxz
pop
std
push
add
push
stos
and
mov
mov
mov
and
mov
jb
ja
test
pop
rol
jnp
movsb
push
pop
addr16
imulb
popa
ljmp
push
popf
dec
lret
cwtl
lods
inc
shrl
fcom
loope
sbb
rolb
in
or
sub
push
or
and
fnsetpm(287
cltd
repz
jge
mov
sub
stc
push
pop
xchg
outsb
lock
clc
mov
xor
xchg
ret
cli
mov
or
xchg
movsb
and
repnz
jl
lcall
xchg
sbb
pop
jo
mov
mov
dec
dec
pop
fcoml
cmp
ret
imul
gs
sub
xchg
add
pop
jg
andl
test
push
lods
cltd
adc
ss
adc
and
rcrb
test
js
push
mov
pusha
jmp
pop
push
dec
subl
insb
cld
pop
mov
outsb
jns
jne
into
xchg
mov
dec
jo
rolb
sbb
inc
mov
rclb
lret
divl
fiadds
jge
push
leave
cld
jecxz
or
out
mov
xchg
clc
jl
in
in
lods
pop
and
orl
lds
jo
cmc
sub
sbb
mov
cli
and
lods
sbb
test
in
push
xchg
test
push
adc
jae
xchg
mov
or
push
fildll
int3
mov
add
or
push
es
and
subb
or
outsl
mov
dec
jecxz
fcmovu
jns
jg
test
loop
mov
lret
add
frstor
gs
les
mov
fld
cmp
mov
mov
cli
fnclex
push
jno
pop
leave
mov
int
shll
pop
lods
cmp
lcall
pop
test
sbb
adcb
fidivrs
inc
push
stos
and
and
movsb
pop
mov
daa
sbb
scas
jl
out
pushf
pop
xchg
imul
mov
dec
add
fidivrs
bound
jnp
xlat
outsl
out
xchg
jns
sub
pop
sarb
int
enter
jne
shl
push
add
movsb
ret
sahf
addb
mov
mov
lcall
fadds
xor
fisttpll
jg
mov
bound
out
pop
push
sbb
mov
cmpsb
xchg
out
sub
adc
jnp
outsl
jae
mov
mov
daa
mov
sti
fwait
leave
push
xor
or
repz
xchg
dec
addb
inc
jno
orb
aaa
xbegin
sub
cmpsb
push
out
inc
inc
es
xchg
push
enter
ret
jbe
movsl
sbb
jne
add
mov
xor
xchg
nop
xor
adc
jmp
dec
lcall
jp
stos
cwtl
cmp
mov
call
insl
imul
ret
sbb
arpl
or
sti
and
ret
mov
push
inc
sub
jl
sbb
sbb
push
mov
in
iret
scas
pop
das
xor
loop
shrb
sbb
leave
into
lock
mov
jns
cmp
lods
push
mov
fiaddl
mov
outsl
add
test
cmp
sbb
in
fiaddl
cld
lahf
mov
xchg
popa
ret
fwait
mov
inc
inc
add
sub
sbb
loop
xlat
in
dec
cmp
mov
inc
sbb
testb
add
popf
loopne
scas
inc
cmp
mov
out
outsl
movsb
clc
cmp
push
adc
cwtl
adc
jmp
nop
scas
aam
daa
lods
ret
mov
inc
mov
pop
lods
int
cmpsl
movsb
in
pop
imul
jnp
gs
mov
jl
imul
xchg
cmovs
pusha
outsl
xorl
and
xchg
stos
out
daa
pop
push
add
ljmp
cmp
pop
mov
int
cmp
loope
fldcw
loopne
and
test
mov
lcall
cmp
stc
dec
cli
or
test
jl
outsl
in
xchg
cs
sbb
ret
mov
ret
jns
mov
cmp
repz
push
lcall
dec
dec
mov
jae
movsl
jnp
inc
add
ja
xchg
rol
pop
testb
xorb
lcall
insb
test
out
jb
dec
mov
jle
bound
leave
xchg
std
rcrb
jge
inc
fdiv
mov
cwtl
jmp
daa
fcomp
add
inc
cmpsl
lret
roll
sub
push
scas
leave
mov
rolb
xor
xchg
and
daa
or
pop
inc
lcall
rcl
jno
test
jmp
xchg
ret
into
add
call
pop
mov
push
adc
adc
xlat
xlat
lcall
or
pop
pop
dec
in
dec
sbb
mov
xlat
fmuls
jle
add
std
or
sub
shl
sti
adc
inc
daa
cmp
add
mov
mov
inc
mov
cmpsl
inc
cmp
dec
loope
cmp
pop
lock
into
mov
pop
push
lahf
jecxz
dec
lret
loopne
imull
push
cmp
or
cs
clc
sub
aad
popa
xor
fcmovnbe
inc
jg
hlt
sbb
push
xorb
lds
movsl
inc
jnp
dec
aad
stc
addr16
subb
fsubs
andl
pop
dec
ret
roll
jg
xchg
insl
mov
jnp
push
jbe
jae
movsb
movl
sbb
mov
jnp
push
mov
lock
cmpsb
cmp
sbb
pop
mov
test
push
clc
enter
or
jl
insb
addr16
add
inc
outsb
sbb
pop
xchg
mov
inc
in
jo
jno
mov
pop
cwtl
test
inc
in
ds
imul
pop
outsl
lret
mov
mov
dec
or
add
mov
out
sub
repnz
mov
popf
cmpsb
in
or
test
mov
outsb
insb
aam
jbe
test
pusha
jns
int3
sahf
popf
imul
and
ss
mov
mov
pop
push
imul
cmp
cld
pop
loopne
es
adc
xor
aad
jo
test
push
outsl
leave
xchg
and
mov
add
insb
xor
sbb
std
jo
cmc
scas
enter
mov
xor
das
dec
hlt
shlb
jge
add
push
and
out
ret
add
rorb
or
out
xchg
imul
push
imul
xchg
xor
pop
lock
adc
in
movsb
mov
jae
fisubl
jo
or
cmp
dec
rorb
sahf
add
fimull
mov
sbb
or
mov
loop
test
adc
imull
adcb
xchg
bound
mov
les
ss
sub
mov
ret
push
pop
mov
cwtl
arpl
inc
push
pushf
xchg
mov
xor
mov
jae
into
fadds
xchg
mov
lcall
jmp
dec
jecxz
scas
and
inc
fstpl
lods
out
jge
mov
cmp
jg
andl
add
xchg
pop
mov
mov
in
xor
mov
sub
xchg
notl
sub
rcrl
mov
inc
cltd
insb
mov
paddusb
xor
mov
faddl
mul
push
dec
pop
push
adc
jge
xor
pop
and
in
pop
data16
and
fcomps
cmp
xlat
xchg
pop
movl
out
mov
pushf
xchg
mov
in
mov
mov
nop
xchg
mov
jne
in
jecxz
frstor
mov
adc
fdivp
scas
dec
cmp
in
sarb
inc
dec
jbe
adc
les
cltd
sahf
adc
or
loope
pop
cmpl
sti
push
xor
pusha
cmpl
xor
mov
pop
mov
cmp
push
adc
test
jmp
mov
mov
ds
fwait
mov
pop
sahf
je
lock
mov
sub
fnsave
ds
lock
mov
jne
out
mov
hlt
jg
mov
adc
test
mov
shl
cmpsl
aaa
icebp
jecxz
and
out
popf
jo
mov
push
iret
sbb
pop
jp
repnz
out
pop
fmull
sar
pop
outsl
cmp
out
add
out
test
insb
or
mov
adc
xor
testl
loop
shl
lahf
gs
cs
or
sahf
arpl
adc
dec
fisubs
pushf
pop
popa
loop
cld
ljmp
or
mov
stc
mov
sub
pop
jo
aas
push
fstps
inc
sbb
cmp
mov
out
jo
loope
subb
inc
and
pop
sub
lret
adc
icebp
fbld
movsl
push
pop
mov
jp
sbb
adc
pusha
lea
push
jns
and
pop
addr16
jbe
clc
adc
fs
ja
push
sahf
aam
out
push
loopne
and
pop
and
mov
loopne
inc
ljmp
lock
in
push
mov
adc
xor
test
push
jae
in
xlat
xchg
test
push
dec
ljmp
ffreep
clc
inc
dec
ret
pop
adc
int
enter
inc
push
subb
cmp
out
push
inc
xchg
inc
fwait
jo
cld
lods
movsw
xor
dec
and
pusha
and
pop
or
addb
adc
iret
outsb
cmpsb
or
push
jbe
jno
bound
push
sub
lock
negl
add
mov
xchg
imull
movsb
adc
ret
fisubs
mov
nop
mov
fistps
popa
loopne
adc
gs
xlat
cmp
pop
ret
mov
mov
cwtl
scas
jle
sub
pop
cmp
inc
jl
lea
mov
sti
test
sub
push
in
mov
push
xor
sarl
shll
pop
leave
pop
daa
fwait
mov
xor
push
xlat
add
inc
jg
std
sti
add
imul
cltd
addr16
xor
imulb
mov
lods
push
sub
shlb
sbb
dec
push
mov
repz
xchg
je
mov
jnp
pop
pop
fmull
mov
xor
popf
sarl
add
fcoms
imul
xorl
sbb
jg
mov
and
das
mov
inc
out
mov
add
lret
test
fs
aaa
xchg
adc
lds
and
push
push
xlat
je
adc
cmp
mov
mov
sbb
inc
out
pop
incl
mov
cltd
or
movsb
outsb
jg
add
push
dec
scas
popf
jge
pop
insb
cwtl
push
stos
in
adc
insw
in
lcall
aas
int3
dec
fwait
outsl
xchg
xchg
push
aaa
repz
mov
xor
push
sbb
sub
movsb
or
es
sahf
adc
mov
daa
ds
mov
sbb
test
mov
enter
cmp
cltd
cmpsl
lret
movaps
add
mov
out
pop
add
jnp
and
push
lea
data16
sub
xor
dec
cmpsb
sbb
pop
je
pusha
pop
mov
mov
or
lods
push
jp
or
in
sub
fstpl
loope
or
paddd
xlat
xor
dec
and
test
push
xor
inc
out
jne
cmp
sub
out
and
mov
addr16
jp
sbb
pushf
or
icebp
mov
mov
cmc
xorl
pop
lods
xor
xlat
ja,pt
mov
inc
jmp
ljmp
stos
pop
les
sbb
mov
push
cmp
mov
test
fnsave
sbb
fs
mov
push
mov
mov
and
jno
insl
add
test
mov
jno
cmp
fnstenv
mov
pushf
add
fdivrp
dec
inc
popf
leave
mov
loope
call
andb
fidivrs
and
pushf
jae
and
and
mov
cs
xchg
popa
xchg
lea
xor
cmp
fs
mov
pop
mov
andb
cwtl
std
adc
les
sbb
clc
add
pushf
stc
or
pop
into
imul
adc
imulb
cmp
xor
pop
dec
inc
cltd
fimuls
jle
jno
das
or
daa
lods
into
mov
aad
cmpsl
nop
push
pop
mov
ss
xor
inc
arpl
add
ljmp
mov
daa
loopne
sbb
push
mov
enter
xor
jmp
fldt
int
jge
aas
cld
in
xchg
mov
popf
enter
je
inc
pop
xor
ret
fs
push
xchg
lods
cmp
test
sub
inc
dec
mov
std
adc
in
cs
xchg
insb
aas
sub
stos
in
and
cld
adc
add
push
loope
hlt
pop
gs
jecxz
ljmp
push
addr16
imul
in
xchg
dec
mov
mov
imul
into
mov
inc
and
leave
sub
sbb
xchg
push
jb
sub
cltd
mov
scas
inc
dec
cmp
out
scas
mov
or
popa
lret
je
adc
rclb
dec
lods
adcl
dec
lock
jnp
ret
lret
cwtl
sbbb
out
lret
mov
sub
ljmp
mov
nop
inc
sbb
mov
out
add
in
ja
mov
cmp
mov
les
js
sbb
sub
lahf
out
or
rcl
fnstcw
iret
arpl
push
dec
mov
pop
cwtl
rclb
push
stc
mov
cltd
inc
dec
or
leave
pop
pop
dec
xorl
sub
cli
sbb
rcrl
mov
or
ja
xor
push
push
push
lods
fstpt
inc
out
ja
jp
and
or
xor
loopne
addr16
addb
push
xor
jno
add
popf
out
cmp
inc
adc
xor
repnz
mov
lcall
testb
dec
in
enter
jg
and
xchg
adc
pop
daa
xchg
cmp
data16
mov
jno
pop
iret
ja
add
pop
rorl
ja
jmp
test
outsb
mov
xchg
daa
or
mov
arpl
xor
leave
or
mov
add
dec
mov
das
aas
jp
xchg
cmp
sbb
jge
mov
enter
pop
mov
stc
mov
push
cmpsb
sbbl
mov
shll
fadds
arpl
push
or
mov
test
and
fcmovnbe
decb
sbb
xlat
movl
js
fucomi
pushf
rcrl
into
mov
inc
dec
aad
test
xchg
das
lahf
sub
inc
insb
and
lahf
imul
lret
out
lods
fcmovne
or
cmp
adc
pop
mov
test
dec
mov
imul
jno
add
dec
mov
shll
mov
pop
stc
xchg
mov
jo
jmp
scas
lea
adcb
pop
or
movsb
pop
and
xchg
cmp
insb
sub
dec
xor
clc
pop
outsl
inc
xchg
cli
dec
bound
lret
dec
jo
pusha
push
outsb
in
fsub
inc
xchg
sub
divb
mov
rclb
mov
call
jl
lahf
dec
or
in
pop
nop
mov
jg
outsl
mov
ljmp
dec
lods
lret
push
cmpsb
mov
sbb
jnp
or
sbb
pop
push
dec
mov
mov
xchg
cltd
push
mov
xor
sub
sub
push
xor
cmpsb
mov
dec
or
jl
inc
sbb
mov
push
negb
cmpsb
xchg
inc
mov
sub
mov
in
jmp
notb
push
adc
std
int
loop
or
mov
icebp
add
dec
pusha
jnp
mov
mov
das
or
shrb
and
inc
cs
xchg
clc
cmpsl
push
mov
push
lret
or
mov
cmp
rorb
es
pushf
mov
jno
sti
mov
test
xor
pushl
stos
decb
push
sub
xchg
mov
cmp
sbb
int3
xchg
sbb
int
mov
mov
mov
fcoms
pop
mov
in
add
mov
mov
xchg
fdivrs
mov
lds
mov
push
mov
pop
xchg
lds
sbb
clc
arpl
je
xchg
pop
xlat
out
aaa
lea
and
mov
add
das
push
popf
and
push
dec
in
add
jg
xchg
xchg
arpl
sbb
pop
pop
cmp
cmc
mov
pusha
cltd
outsl
ror
sub
repnz
in
fdivs
or
clc
int3
movsb
xlat
and
xchg
fnsave
mov
adc
mov
sub
mov
rolb
cmp
flds
pusha
mov
es
push
push
cmp
push
test
cli
pop
dec
sar
loope
fmuls
inc
sarl
inc
or
mov
fnstsw
xlat
mov
xor
push
mov
inc
and
cli
jne
cli
or
arpl
and
nop
roll
pushf
mov
sub
mov
das
dec
sub
jnp
cwtl
in
push
mov
sbbl
xchg
push
daa
aam
add
insb
dec
arpl
adc
sbb
sub
aad
je
pop
xor
lods
inc
imul
xchg
mov
inc
mov
popa
iret
mov
mov
mov
loope
pop
sbb
push
inc
inc
ss
cmpsl
cwtl
jecxz
mov
jl
xor
into
pop
adc
jae
or
lret
xor
dec
scas
xor
inc
sub
inc
cmpsl
inc
daa
mov
test
in
mov
rorl
mov
pop
or
mov
jg
adc
cltd
pop
ffreep
xchg
ficoml
push
jbe
and
cmp
inc
xor
pop
and
inc
ret
add
inc
adc
pop
sub
scas
adcl
cs
jnp
rcrb
sub
notl
add
lret
pop
xor
mov
xchg
sbbl
test
mov
enter
pop
xchg
fcmovnb
aad
inc
mov
sbb
add
dec
inc
test
sbb
bnd
sbb
jmp
mov
int
ret
in
or
mov
xor
mov
push
pop
enter
outsl
cmp
imul
add
popf
mov
rorb
jmp
aam
imul
enter
jg
jmp
adc
sbb
enter
pop
rcrl
pop
pop
idivb
popa
pop
sub
nop
push
mov
nop
out
mov
cmp
stos
mov
inc
pushf
loope
mov
in
out
out
adc
aad
push
sti
test
pop
dec
xor
xor
lock
out
cmpsb
mov
stc
mov
mov
push
aas
or
adc
stc
cmpsb
or
loop
loope
les
pop
cmp
cmp
ss
nop
jbe
clc
stos
jo
xchg
jo
bound
loope
scas
fsubl
xor
xor
into
jmp
leave
or
inc
sub
push
iret
aad
push
inc
cld
ret
dec
popa
pop
push
addr16
or
jb
or
xchg
xor
pop
loop
lds
xor
imul
jne
cltd
add
or
cmpsl
stos
sub
sbb
push
cmc
loope
mov
call
aam
cmpsl
jnp
mov
or
xchg
inc
aad
add
mov
jg
mov
push
popa
inc
pop
mov
test
pushf
push
adc
mov
jle
xor
lods
inc
out
or
pusha
fcmovne
xchg
mov
lods
shr
jecxz
cmp
nop
mov
xchg
loopne
and
jae
or
dec
sti
add
stc
xor
icebp
cmp
and
lcall
xor
sub
sbb
movsb
sub
xor
push
fs
push
cmp
push
out
jg
add
cmc
inc
adc
aas
icebp
xor
imul
xchg
ds
lock
mov
jl
pop
fs
dec
jmp
mov
push
call
add
xchg
nopl
stos
mov
rclb
xor
cltd
stos
lret
push
rol
aam
jle
pusha
adc
mov
sbb
imul
xchg
lods
arpl
ret
push
cmp
ret
shlb
out
mov
add
test
push
repnz
jl
mov
xor
imul
push
mov
cmp
adc
xchg
pop
lahf
or
mov
fsubrl
repz
stc
cmpsb
nop
sbb
and
push
cmpb
shll
cld
data16
or
cmp
out
fwait
mov
sarl
xlat
fists
sub
xor
ljmp
insl
ss
fcompl
scas
stos
lods
mov
pusha
sbb
stos
cld
outsl
jae
cmp
sub
cs
jne
lret
jp
aad
push
test
hlt
xor
or
cmp
sti
xor
rol
cmp
mov
fistps
lock
push
stc
dec
pop
push
shrl
gs
and
mov
movsl
ds
mov
call
lcall
add
cmp
pop
cmp
xchg
stos
sbb
mov
test
lea
pushf
gs
add
mov
jg
mov
xorl
pop
scas
dec
hlt
in
cmp
xchg
shlb
mov
mov
xor
xorl
lret
mov
outsb
rolb
aam
push
data16
call
movsl
push
arpl
ss
pop
sub
fwait
test
pushf
add
inc
push
or
mov
dec
xchg
mov
xor
outsl
add
xor
outsb
aaa
xlat
add
mov
les
mov
cmp
pop
push
jl
push
sbb
jae
cmp
neg
adc
ss
jno
adc
xor
popf
fsubr
jg
aas
mov
imul
adcb
and
mov
or
xor
jg
mov
fstpl
bound
push
xchg
in
call
sbb
hlt
les
push
insb
or
adc
jae
lods
push
push
int3
test
dec
jne
xchg
ja
mov
xor
popf
cmp
in
mov
fists
daa
int3
add
call
in
mov
jo
test
and
mov
cmp
aas
dec
sbbl
inc
loope
jg
hlt
or
stos
imul
lods
iret
jo
jle
cmpsl
or
lahf
int
jecxz
out
cs
xchg
and
xchg
pop
outsl
jl
mov
cmp
call
mov
pop
xor
mov
push
sub
xchg
mov
jmp
icebp
test
lock
shrl
push
out
data16
das
iret
mov
mov
enter
iret
add
movsl
jae
lds
push
inc
enter
test
stc
stos
xchg
mov
jl
repnz
mov
movntps
jmp
xchg
mov
ja
mov
add
cmp
jle
cmpsl
imul
imul
std
push
stc
mov
jge
push
or
adc
mov
adc
test
xor
inc
sbb
sub
fdivr
pop
jge
mov
std
fimuls
das
mov
push
mov
iret
mov
xor
mov
push
jge
inc
inc
movb
jecxz
mov
jmp
sar
fldenv
xor
out
jnp
shll
test
leave
out
aaa
jecxz
jno
mov
lock
int3
call
jge
jmp
retw
mov
insl
mov
in
in
push
cmp
jns
cmc
xchg
push
in
inc
aas
aam
xor
xchg
cmp
lret
aam
jb
lods
cmp
inc
push
jbe
and
sahf
es
in
sub
aaa
and
ficompl
ljmp
popa
xchg
xchg
lds
rcl
cmpsb
neg
das
in
or
cwtl
mov
ljmp
pop
push
arpl
mov
xchg
filds
movsb
arpl
mov
add
jno
cld
pusha
xchg
decb
or
dec
jno
push
push
xchg
pop
xchg
push
mov
jle
fisubrl
das
sub
cmp
outsl
incb
ffree
inc
xor
jbe
pop
adc
mov
cmp
sub
cltd
stos
xor
push
add
imul
outsl
push
pop
loope
int3
imul
loop
inc
out
bound
and
cld
pop
std
ss
sbb
dec
mov
mov
xor
adc
insl
ret
push
pusha
and
xchg
aas
fadds
adc
sub
in
test
jnp
adc
fstl
outsb
lods
xor
xchg
addr16
add
mov
aaa
cmpsl
notb
popf
call
int
rolb
cli
cvtpi2ps
es
mov
push
xorb
sub
push
shrb
test
jae
push
fiadds
das
pop
inc
add
call
push
fucomp
sahf
sub
out
inc
ss
add
adc
xchg
ja
jecxz
or
and
shll
mov
and
sub
and
adc
cmpl
adc
arpl
jecxz
ret
outsb
testb
cmpsb
movsb
push
xor
jmp
jge
xchg
jne
jecxz
fwait
gs
mov
in
je
daa
fistl
or
data16
mov
inc
ljmp
push
addr16
jmp
aas
xor
cwtl
outsl
adc
cmp
jge
inc
sbb
add
stos
nop
outsb
cmpsl
out
or
enter
insl
test
pop
xchg
out
idivb
xor
pop
pop
push
pop
jg
and
or
add
std
jp
mov
fnstcw
int
in
pop
popf
fidivrl
cmpsb
mov
dec
and
cmp
test
pop
addr16
sbb
cmp
cmp
push
les
fnsave
nop
test
xchg
popa
xor
fwait
mov
pop
pop
dec
into
pop
pop
mov
add
or
jno
push
dec
inc
and
sub
pop
cmpsb
sbb
stc
push
cs
dec
das
and
call
and
fcompl
mov
stos
int3
add
fcmovbe
sub
jnp
push
mov
cmp
repz
adc
xor
and
xchg
inc
pop
cwtl
sahf
lahf
out
ljmp
loopne
sub
fcos
js
mov
repnz
stos
adc
jl
mov
and
xor
popf
cmp
cmc
sbb
insb
dec
outsl
xchg
mov
fsubrp
decb
push
adc
xchg
fnsave
data16
bound
and
or
mov
pop
lcall
fldl
xlat
loop
shll
push
dec
movsb
rorb
adc
in
dec
lcall
gs
and
xchg
ret
adc
pop
lcall
mov
test
jbe
aaa
fsub
ret
stos
mov
int3
and
and
inc
inc
fdivrp
inc
lds
mov
dec
aam
es
je
rorl
sbb
add
adc
jo
mov
inc
jmp
pop
xor
cs
dec
cmp
push
push
xchg
repnz
or
addr16
cmp
push
movsb
mov
mov
mov
mull
xlat
fiadds
movsl
add
in
push
or
stos
rorb
pusha
sti
pop
sub
jbe
cmp
mov
loop
js
mov
pop
xor
xchg
add
mov
bound
mov
or
add
xor
sti
in
outsb
in
dec
ljmp
inc
mov
jp
cmpb
xchg
nop
or
jecxz
sub
fwait
imul
dec
aaa
mov
out
mov
mov
cltd
sbb
int
pop
sub
ficomps
pusha
push
lea
pop
mov
jnp
xchg
das
and
mov
jnp
jbe
push
outsl
scas
aaa
or
leave
loope
dec
xchg
sbb
xchg
mov
jne
lcall
sub
stc
adc
and
cmp
leave
popa
jne
loop
jg
xchg
cs
push
into
sub
and
add
push
insb
ret
and
or
mov
mov
in
lea
dec
je
pushf
jns
movb
adc
fimull
lods
sub
sbb
outsl
or
mov
add
pop
push
scas
push
mov
in
stos
sub
cmp
cmp
inc
lret
int
sub
push
mov
pop
jb
pop
sub
or
int
dec
mov
xor
or
cmp
lahf
xor
push
pop
or
test
ja
stc
sbbl
int
sub
xor
xchg
rcrl
push
clc
in
imul
icebp
lea
shll
pusha
cwtl
adc
jle
jecxz
xchg
sub
sbb
clc
push
aam
xor
sti
mov
scas
jle
jg
push
mov
pusha
cmp
lds
xchg
inc
xor
ret
lock
jle
push
pusha
mov
ror
pop
cmc
add
gs
cmp
sbb
xlat
xchg
inc
in
rol
or
ss
jge
hlt
lock
shrb
lcall
xchg
out
and
hlt
ret
add
lcall
fstp
jbe
inc
mov
cs
jle
movsb
adcb
repnz
in
mov
int3
dec
or
ficoms
fadds
push
popf
jno
lret
and
rcrl
sub
push
cli
outsl
popf
int
movsb
scas
jns
ficoms
in
in
hlt
jge
mov
cwtl
pop
mov
adc
push
add
rcrl
popf
cmp
into
mov
rorb
out
fbld
xchg
and
nop
or
jae
sbb
in
andl
rolb
negb
out
mov
mov
pop
ret
pop
mov
adc
pop
jbe
les
enter
stos
pop
cwtl
cmp
or
lods
out
xchg
popa
inc
ja
loope
lods
jb
jno
scas
xchg
repz
adc
rorl
add
add
mov
mov
xchg
bndldx
das
dec
jae,pt
in
xchg
xchg
cs
adc
sbb
pop
outsb
mov
cmp
iret
inc
sub
mov
sub
sbbb
dec
push
mov
xchg
mov
xor
lret
or
push
mov
shrl
cmp
adc
sbb
mov
push
sahf
ficomps
adcl
dec
push
lret
jmp
jo
pop
fbstp
xor
lods
xor
ret
add
mov
inc
or
sbb
aam
imul
or
ljmp
fistpll
out
sub
in
nop
das
decl
jecxz
cmp
ret
fsubrl
lea
jle
inc
mov
xchg
es
mov
sbb
add
and
out
mov
shll
and
rcl
xchg
inc
enter
jb
xlat
movsl
dec
cmp
addr16
pop
fs
insb
out
mov
or
sbb
jns
lock
and
sbb
xchg
inc
leave
xchg
mov
mov
ss
out
dec
add
jne
cmp
dec
cwtl
or
mov
movsl
adc
mov
push
sbb
mov
shll
lods
pop
inc
sub
je
mov
lock
mov
sub
pop
mov
sbb
add
sbb
mov
xor
pop
mov
pop
ret
push
movsb
adc
jbe
outsb
mov
es
jp
jae
dec
xchg
aad
or
shll
lock
xchg
fimuls
jne
fsubrp
cmc
or
lret
movsl
mov
jge
iret
pop
xchg
jo
dec
test
add
mov
inc
xchg
xor
adc
mov
mov
xor
hlt
or
fucom
sbb
sbb
popa
mov
movsl
outsb
imul
js
pop
inc
pop
dec
adc
jbe
push
loope
inc
xchg
cmpsb
gs
add
cmp
xchg
std
push
loopne
dec
jl
push
cmp
cld
in
dec
jecxz
filds
js
out
dec
dec
dec
sbb
inc
mov
int
push
or
inc
jne
mov
sub
or
movsb
and
mov
popf
dec
push
shl
jge
mov
adc
andl
cmp
pop
mov
fimull
pop
sarl
sub
pop
cwtl
add
movsl
js
movsb
adc
in
dec
std
ljmp
pop
mov
stos
add
sub
jbe
call
pop
lods
inc
lods
pusha
jns
xchg
jb
test
push
push
pop
xor
mov
jo
jnp
mov
ficompl
out
mov
pop
loope
mov
pop
out
cmpsl
and
mov
and
call
mov
and
out
rcr
jmp
outsl
aas
jecxz
fistpll
dec
mov
fwait
rcll
js
xor
xor
pop
sbb
jl
and
out
jmp
inc
pop
and
cld
testb
add
cwtl
enter
mov
in
pop
rolb
pop
inc
outsb
and
stc
push
jno
xor
sub
mov
add
adc
test
sbb
mov
inc
pop
movsb
jnp
xlat
jmp
lret
popa
adc
dec
lods
imul
jmp
sahf
or
orl
je
push
call
or
cmpsl
sti
xchg
jecxz
add
mov
inc
jge
stos
sbb
cmp
xchg
adc
lods
sahf
js
fnsave
adc
jecxz
adc
leave
mov
in
add
out
out
lds
aad
fcmovb
jl
aam
push
neg
inc
ja
xor
test
sahf
call
push
mov
scas
mov
inc
push
mov
mov
or
pop
insl
sub
mov
mov
popa
or
stos
adc
test
outsb
mov
stc
jb
cmp
fistps
sub
hlt
flds
lret
mov
mov
fstpt
dec
jo
xchg
push
sub
in
push
pop
addr16
jmp
ja
test
cs
adc
or
and
in
fimull
mov
je
jns
adc
shr
mov
insb
lea
jmp
lds
loope
jne
fs
in
xor
test
lcall
xchg
mov
fbld
or
jmp
cmp
lods
lds
ljmp
in
in
sbb
pop
mov
test
xor
mov
sbb
aaa
dec
enter
daa
mov
and
xchg
adc
mov
or
adc
dec
jl
jp
pop
inc
cmp
sbb
loopne
lods
or
cmp
jl
xchg
mov
jp
std
cltd
sub
push
out
aaa
stc
cltd
and
adcb
jl
cwtl
out
in
push
push
inc
push
int
jp
stos
push
pushf
mulb
pop
inc
insb
push
push
testb
mov
rcr
push
aam
or
dec
jle
aas
pop
mov
adc
roll
xor
aam
popf
mov
les
imul
jmp
test
cli
sub
sub
loope
dec
aad
dec
add
ret
jmp
mov
insl
dec
mov
adc
mov
push
incb
cli
fwait
repz
mov
jo
jmp
jg
inc
mov
inc
adc
mov
cli
jbe
xor
mov
imul
xor
mov
inc
and
cmpl
sahf
lods
jle
aam
jns
lcall
push
pop
stos
test
push
pop
rclb
sbb
test
leave
in
imul
leave
inc
push
repnz
out
push
sbb
mov
add
or
repz
mov
sub
dec
cli
add
jo
fadd
jp
stc
sub
cmp
pop
add
movsb
movsb
call
imulb
repz
lcall
das
or
xchg
test
mov
lahf
sub
testb
push
mov
sbb
adc
int
js
mov
mov
in
in
pop
clc
out
loope
aam
shl
push
jge
bound
or
xor
popa
xchg
fs
hlt
movsl
xor
xor
mull
push
cmp
test
sub
out
mov
seta
mov
add
push
dec
or
push
mov
imul
test
int
es
xor
pusha
das
pop
adcb
popl
inc
xchg
aam
xor
mov
lods
mov
pop
cmc
xchg
xor
push
pushf
lcall
cmpsb
pusha
movsb
out
faddl
xchg
add
scas
scas
push
movsb
xlat
cmp
jge
sub
cmpsl
in
xchg
mov
jbe
cwtl
sub
js
add
roll
dec
fcoml
insb
jge
mov
pop
sub
push
shll
mov
jmp
sub
stos
out
jb
loope
fistps
mov
pop
sbb
mov
lret
dec
mov
sbb
icebp
sub
push
dec
es
xchg
lret
hlt
iret
lds
pop
sub
test
js
cld
sub
add
dec
sub
add
int
sti
mov
pop
push
out
clc
ret
into
dec
dec
cld
addl
sub
mov
sub
incb
jns
pop
and
jns
xchg
cmp
jge
icebp
lcall
rclb
jne
pop
lods
mov
hlt
mov
in
rclb
sbb
sbb
mov
mov
push
mov
mov
pusha
sbb
sbb
aaa
arpl
imul
imul
push
daa
data16
lret
test
adc
int
add
push
scas
lds
stos
int
and
test
hlt
out
sbb
arpl
cmp
out
push
jmp
pop
fnsave
mov
jae
add
jo
push
cld
xchg
mov
dec
inc
xchg
out
add
out
or
popf
subb
add
mov
xlat
pop
pop
xor
mov
hlt
fs
inc
insb
insb
xchg
xchg
int3
pusha
xor
mov
fisubl
nop
adc
or
aaa
cmp
loop
adc
mov
adc
inc
add
inc
mov
mov
mov
pushw
outsl
sub
jns
test
scas
push
mov
and
fwait
push
sub
insl
arpl
cwtl
jg
cmp
sub
inc
xchg
fbstp
inc
nop
xchg
sub
add
xchg
int3
je
push
jb
movl
xor
shrb
jmp
adcb
addr16
push
add
dec
inc
ret
shll
leave
loop
mov
ror
leave
push
stos
bnd
and
sbb
pop
inc
movsb
xor
mov
repnz
xchg
push
xchg
sbbb
push
push
cmp
xor
je
push
popa
in
mov
lret
push
add
pusha
lock
adc
cltd
pop
pop
popf
xor
mov
out
jg
cli
pop
and
rclb
xchg
fldl
addl
insb
jmp
movsb
push
pop
mov
push
and
aaa
mov
ret
stos
fsts
lahf
xchg
icebp
dec
mov
stc
push
jns
dec
jns
leave
loopne
sbb
adc
add
roll
rcl
in
andnps
int3
je
int3
push
ljmp
pop
aad
xor
aad
repz
xchg
lods
jne
push
push
sbb
pushf
jmp
pop
sbb
gs
jl
or
xor
pop
mov
jge
loope
jmp
cld
xchg
aam
sub
jnp
icebp
fs
sbb
loop
lret
popf
lret
in
xor
push
iret
mov
test
in
push
cmc
cltd
addr16
cld
cld
mov
push
pushf
cmp
jbe
lret
sti
aad
imulb
dec
xchg
jge
add
repnz
pusha
sbb
or
ss
popf
stos
lret
sub
jae
adc
mov
dec
sbb
ljmp
or
mov
xchg
pop
dec
push
lds
sub
cltd
loope
or
pop
xchg
stc
xchg
pushf
or
jge
xor
cld
jbe
cld
dec
icebp
testl
call
data16
mov
xchg
testb
stc
out
arpl
gs
aad
call
mov
jnp
mov
out
pop
clc
cmpsb
sbb
stos
and
xlat
mov
xchg
push
stos
xchg
jne
daa
mov
fimuls
jmp
push
cmp
aam
repz
xchg
aad
aaa
adc
arpl
fcomip
in
push
jns
push
push
insl
dec
je
js
int3
pop
test
and
int3
ret
push
orb
and
xor
fldenv
dec
add
cmpsl
cmp
push
cmpsb
pop
into
pop
pushf
mov
pop
mov
lret
ja
pushf
je
roll
pop
pop
inc
adc
mov
inc
ret
mov
lcall
in
adc
clc
sbb
cs
lea
and
incl
inc
frstor
sub
inc
mov
push
xchg
mov
add
sbb
xor
dec
cmp
lock
xor
adc
mov
shll
notl
and
dec
pusha
mov
pusha
xor
mov
inc
and
clc
out
push
lcall
mov
das
pop
mov
push
stos
mov
push
icebp
ljmp
rep
sbb
sahf
mov
adc
xlat
stc
adcl
ja
inc
xchg
add
fcoms
js
sbb
mov
jmp
in
xchg
mov
add
and
inc
pop
push
push
sub
negl
pop
ret
mov
stos
sahf
shlb
mov
gs
rorb
mov
mov
sbb
outsb
dec
mov
in
mov
aaa
pop
sbb
int
lods
je
pushl
pop
hlt
push
sbbb
adc
subb
sbb
pop
cli
les
js
jo
test
inc
mov
cmpsb
or
in
mov
mov
xlat
pop
mov
daa
inc
mov
jle
jp
mov
cmp
push
js
sbb
imul
xor
jbe
cmp
lock
mov
mov
das
leave
xor
pavgb
mov
fistpll
adc
in
inc
aam
cmp
xor
pop
mov
push
cmc
cwtl
push
sub
iret
add
into
push
cli
test
or
sbb
adc
pop
cmp
and
ja
cmp
pop
push
movsb
scas
jns
fmuls
and
adc
sub
pop
jns
mov
mov
fldt
push
push
mov
mov
adc
or
loope
rorb
mov
sub
mov
pop
push
xor
adc
or
xor
xchg
into
inc
insl
mov
push
mov
stos
add
mov
mov
mov
test
lea
or
in
inc
enter
mov
fsub
jno
xlat
push
std
mov
std
xor
movsl
stos
or
iret
xor
out
cmpsl
out
mov
xchg
mov
cmc
push
shll
inc
shlb
aad
sub
sbb
jae
push
aad
addr16
insl
jle
cmc
and
fwait
daa
mov
mov
push
cmp
xchg
ljmp
dec
jmp
mov
pop
ja
in
jae
ljmp
pop
test
inc
or
rorl
imul
sub
mov
mov
fcoml
lcall
or
inc
mov
pop
mov
sub
mov
dec
fidivrs
jecxz
or
xchg
lods
mov
in
das
faddl
pop
stos
inc
and
inc
lahf
mov
in
sti
add
test
cmpsl
popf
push
xor
sti
mov
ret
imul
mov
test
and
fcomp
nop
js
cmc
sub
or
add
mov
aas
cmp
mov
iret
dec
popa
test
scas
lds
lea
add
add
and
popf
push
nop
mov
inc
cmp
mov
out
jns
jecxz
lds
xor
inc
cld
rorb
or
lock
stos
lahf
insl
ret
insb
insb
leave
cmp
adc
mov
mov
pop
jg
xchg
adc
pop
cmpsb
mov
test
push
cld
mov
or
sbb
pop
imul
addr16
lcall
lods
sbb
leave
icebp
and
jp
fnstcw
dec
pusha
or
add
dec
xchg
bnd
rclb
fsubs
negb
mov
ja
nop
mov
test
outsl
add
cmp
mov
xchg
int3
fcomps
lock
stos
aas
mov
out
clc
jg
jo
and
inc
dec
stos
xchg
icebp
adc
scas
mov
and
push
outsl
popa
mov
push
and
push
addr16
cmp
jbe
in
and
adc
xchg
movsb
lret
jecxz
push
stc
test
in
sub
and
lret
mov
insb
sbb
mov
sub
jl
popa
xlat
xchg
enter
add
inc
or
aad
mov
mov
jnp
mov
xorl
imul
adc
jbe
ja
addr16
mov
add
cmpsl
insl
loopne
push
pop
out
movsl
flds
repnz
les
cmpb
leave
xchg
inc
daa
jle
push
outsb
mov
call
pop
insl
mov
insb
addr16
lock
out
xor
push
mov
xor
pusha
fisubrl
popa
mov
cmp
mov
pop
mov
mov
add
fcoms
adc
jb
fisubs
push
inc
call
cmp
pop
adc
ja
loopne
scas
adc
es
mov
rep
js
loopne
stc
push
mov
inc
adc
fdivl
ss
adc
repnz
ret
nop
or
xor
pop
push
ljmp
scas
pop
inc
movsl
dec
pop
xchg
dec
inc
jne
mov
dec
mov
cld
jno
rcl
insl
leave
sub
jl
in
stc
in
ss
mov
mov
cmp
dec
daa
aad
adc
mov
flds
pop
cmp
xchg
mov
shll
orl
mov
jb
sbb
rcrl
inc
shr
pop
sbb
push
push
sub
sti
das
push
ret
and
pushf
xchg
xor
push
xchg
or
mov
loop
xor
sbb
mov
cmpl
rcrl
or
cld
mov
mov
lock
fldt
sti
das
popf
mov
xchg
scas
test
fldcw
das
dec
sub
fstpl
jb
cmpsl
bound
pop
add
scas
mov
imul
addl
mov
adc
dec
xchg
movsb
mov
jnp
lret
xchg
roll
jnp
movsl
mov
fcomp
xchg
or
inc
sub
cli
bound
fsubrs
cld
aaa
mov
test
push
outsl
xchg
adc
jg
xor
pop
pusha
outsb
pusha
out
pushf
popf
or
cmc
and
mov
xchg
mov
sbb
xor
adc
mov
lds
shlb
jl
incl
dec
mov
pop
sbb
jle
test
ss
mov
and
and
ficomps
lcall
adc
mov
push
xor
test
xchg
pop
into
out
int3
imul
xchg
mov
inc
lds
xchg
cmc
push
adc
div
int3
jnp
outsl
push
fisttps
xchg
fsubl
mov
mov
xorl
xor
dec
popa
push
push
aas
js
xor
bound
sbb
ja
push
cmp
arpl
in
mov
bound
mov
cmp
test
ror
xor
sub
cmp
dec
icebp
jmp
sbb
ret
xchg
inc
mov
xor
cmp
jo
pop
pop
inc
repz
fimuls
outsb
xchg
insl
pop
push
or
shlb
sub
inc
mov
movsb
xchg
idiv
shll
push
aas
mov
dec
ds
mov
stc
jns
lods
jae
dec
jp
sbb
loopne
aam
ret
adc
push
pushf
adc
cmpsb
mov
inc
ds
mov
xchg
jne
outsl
mov
into
andb
enter
jmp
add
adc
mov
jp
imul
pop
adc
lods
aas
hlt
icebp
mov
lods
cmpsl
and
pop
out
inc
mov
movsl
push
add
mov
cmpsl
sbb
iret
sub
add
pop
push
pop
mov
mov
ret
std
mov
adc
jp
xor
and
or
ljmp
lods
aas
push
push
sbb
test
jb
cmc
inc
push
mov
test
fdivrs
jl
in
int
stos
test
mov
dec
movsl
test
insl
or
daa
or
ret
push
adc
mov
pushf
fidivrl
into
movb
repz
sbb
fsubs
repz
mov
sbb
jns
enter
pop
sti
jae
pusha
test
out
dec
lods
cs
fdivr
mov
mov
sbb
or
repz
mov
lret
mov
add
mov
lret
xchg
andb
clc
mov
and
and
inc
out
jge
out
enter
frstor
mov
or
pop
insb
mov
push
ficoms
inc
xchg
iret
dec
fidivrs
fldcw
scas
imul
loop
bound
push
out
sub
xor
jnp
out
and
in
cmp
jle
and
and
xchg
in
push
add
hlt
mov
or
dec
cmpb
std
addl
add
pop
in
icebp
adc
ljmp
xchg
fldenv
push
push
xchg
add
loopne
hlt
mov
lods
fstps
mov
mov
cmp
mov
mov
jae
xor
mov
je
and
aam
or
jae
test
sahf
push
subl
cmp
dec
cmc
inc
cmp
js
js
mov
and
push
xor
imul
imul
mov
jmp
in
cmp
fdiv
push
jle
roll
inc
xchg
inc
pop
lahf
push
pop
loope
xchg
lret
xchg
outsl
jno
inc
std
xchg
xor
sbb
ds
sbb
out
dec
psrlq
jb
aad
xchg
xor
pushf
mov
fwait
cltd
mov
xchg
jbe
dec
imul
inc
mov
mov
fbstp
mov
lahf
sbb
outsl
xchg
cmc
aam
seto
xor
je
sub
and
shll
in
mov
iret
iret
jecxz
mov
xchg
xor
insl
int
mov
or
cld
test
cmp
dec
mov
lock
jge
xchg
lock
jmp
xchg
leave
arpl
loop
push
push
cmpsl
mov
inc
into
push
jb
rcrl
jno
xor
push
and
jmp
scas
mov
adc
pop
jp
mov
xor
sub
bound
les
add
xchg
bound
mov
xchg
or
pminsw
xchg
rolb
outsl
aam
roll
lahf
and
push
in
div
ds
clc
fiaddl
scas
in
jno
cmp
negl
mov
xchg
mov
jno
dec
int
adc
dec
mov
out
bnd
mov
mov
stos
adc
into
repnz
imul
js
loopne
pushf
add
pop
dec
stc
and
fsts
sub
rorb
shrb
mov
mov
pop
sub
rcrl
xchg
xchg
add
cmp
push
cld
fcmovne
in
ss
imull
and
pop
sbb
aas
mov
je
subl
int3
mov
xor
mov
std
out
pop
xchg
mov
arpl
out
out
mov
popa
dec
xchg
pushf
daa
in
repz
daa
test
and
stc
cli
ljmp
in
cmp
inc
push
mov
rolb
outsl
dec
ss
idivl
pop
sub
jle
add
add
jbe
movsl
cmpsb
jbe
mov
pop
fsubrl
dec
push
mov
repnz
pop
lret
adc
mov
or
xchg
cmp
xor
mov
mov
xor
js
je
mov
adc
lret
stos
pop
mov
and
imull
add
cmp
sbb
sbb
jo
pop
xlat
dec
ret
popf
inc
dec
inc
xchg
add
cwtl
or
adc
imul
jp
sahf
jb
adc
outsl
mov
out
dec
pop
mov
fwait
push
fiaddl
sarl
jns
push
adc
out
adc
jle
cld
mov
sbb
lret
mov
sbb
pop
jae
pop
or
mov
int
xlat
insl
outsl
loope
adc
sbb
xchg
jecxz
push
cmp
clc
rorb
pop
xor
mov
shlb
lds
or
int
cmp
push
mov
je
loop
outsl
imul
mov
push
jb
shlb
daa
xlat
jg
ja
fdivp
negb
xchg
push
pop
push
and
mov
es
mov
cli
sti
jae
aad
call
pop
je
push
add
and
shll
or
xor
aam
mov
push
add
ljmp
cmpsl
sub
aas
pop
cmp
pop
mov
adc
ffreep
or
scas
mov
lret
pop
shrl
sbb
mov
push
mov
int
ja
sahf
int
mov
dec
pop
xchg
inc
les
jle
cmc
std
mov
cwtl
adc
adcl
fwait
stos
jnp
sub
ret
xor
loop
les
data16
mov
mov
sub
popf
sub
dec
aas
jno
ljmp
pop
imul
scas
xor
inc
arpl
lock
fnsave
sub
or
jmp
adc
and
mov
scas
xchg
cmp
icebp
sahf
addr16
movb
iret
popa
jns
and
jns
jecxz
stc
pop
add
out
pop
push
pop
or
sub
sahf
out
and
xor
inc
xchg
icebp
add
test
adc
mov
sbb
sub
dec
inc
js
ja
jbe
fistps
cmp
cmp
mov
daa
lds
in
push
lret
lahf
std
xor
in
mov
inc
adc
les
jle
xchg
mov
and
test
pop
adc
xchg
add
jle
repnz
lds
and
sahf
aad
pop
je
mov
sub
cmp
fdivl
and
ret
imul
in
sbb
bound
push
sbb
imul
aas
xchg
inc
sub
ljmp
push
xchg
icebp
fldenv
int
loope
or
cs
inc
aad
push
xchg
jb
mov
dec
fnstsw
mov
and
bnd
lea
enter
push
sub
xor
or
mov
jmp
cmp
ljmp
inc
xor
push
xchg
shrd
in
jns
adc
or
sub
notb
cmp
adc
ror
lcall
ss
cmp
push
pop
into
ljmp
pop
jmp
fisttpl
pop
push
repz
mov
inc
add
push
push
out
mov
sub
imulb
mov
mov
adc
test
sahf
cs
loope
inc
cli
fnstcw
mov
lods
mov
pop
jg
inc
iret
jecxz
xchg
js,pt
lcall
xchg
mov
push
jno
test
push
in
pushf
and
inc
jp
mov
jmp
dec
jnp
mov
in
dec
cld
nop
loop
out
mov
dec
shll
popa
enter
cld
xor
mov
add
fimuls
or
or
xchg
inc
mov
pusha
ss
pop
jnp
push
xchg
jb
inc
dec
ds
inc
repnz
jl
test
fbld
mov
or
push
orl
call
jno
adc
ss
inc
mov
dec
xor
subb
lcall
push
sbb
adc
mov
push
mov
pop
sbb
ficompl
lock
fidivl
and
sbb
pop
out
push
cmpsb
out
jbe
subb
hlt
test
inc
adc
rolb
cmc
cmp
enter
xchg
sub
xor
jg
xor
loopne
int
cwtl
outsl
cmp
shrl
lcall
inc
loopne
mov
xchg
jecxz
add
fs
bound
pop
arpl
pusha
nop
fdiv
test
mov
rcrl
scas
das
jno
imulb
in
mov
push
ja
mov
fdivrl
sub
js
out
rol
and
dec
sbb
movsl
sbb
pop
sbb
push
jno
push
dec
cmp
cli
popa
pop
ds
cld
sbb
add
scas
mov
movsb
shll
or
clc
xchg
int
or
dec
movl
xchg
inc
dec
sub
inc
imul
mov
mov
arpl
in
or
mov
lea
jne
notb
mul
inc
xchg
sbb
or
or
inc
pushw
jbe
dec
call
fisubrs
stos
loop
xor
sub
jg
sub
stos
xor
pop
xchg
cmp
popf
popl
ljmp
fisttps
pusha
popa
lea
loope
xchg
xor
loope
andb
mov
icebp
lcall
jb
daa
push
pop
lods
hlt
and
or
out
adc
or
jne
ret
pop
jle
ljmp
out
inc
xchg
pop
xlat
psubsb
inc
movsl
adc
rcrb
mov
xchg
je
neg
faddl
mov
mov
pop
fwait
stc
in
ret
jo
mov
inc
out
ss
jb
int
mov
dec
cli
out
mov
flds
mov
scas
xor
pusha
cmp
adc
xchg
cmp
pop
dec
adc
mov
gs
mov
mov
cmp
and
shlb
push
dec
push
push
clc
dec
push
xchg
push
pop
fcoms
clc
add
add
in
cmpsb
jg
mov
stc
lcall
xchg
lods
test
bound
inc
mov
mov
or
inc
aad
ret
lods
pusha
mov
js
push
mov
fs
sbb
shl
in
xor
jne
in
xchg
shlb
leave
rcrl
addl
pop
sbb
pop
jb
fistps
jnp
and
lea
movsl
rolb
rcl
cmp
insb
xor
adc
pusha
fdivrl
jg
mov
in
xchg
dec
jae
adc
inc
push
pop
sahf
jmp
fbld
sub
pop
scas
push
movsl
int3
cmp
cld
repnz
mulb
jg
mov
ja
push
daa
xor
rcrb
jnp
cli
xor
jne
mov
sub
orl
cmp
cmp
or
sub
cs
cmpsl
incl
arpl
int3
mov
sub
push
mov
adc
cmp
iret
push
push
lds
movsl
mov
jg
cmpsb
imul
jmp
mov
iret
subl
mov
clc
xor
mov
inc
loope,pt
sbb
jb
mov
fbld
stos
popa
sub
gs
jae
mov
inc
sbb
aas
ret
inc
mov
clc
dec
int
sbbl
lcall
or
push
shr
jne
xor
push
clc
pop
mov
xor
repnz
icebp
jnp
mov
lret
jbe
hlt
ss
stos
xor
add
lods
dec
iret
int
xchg
dec
in
jne
pop
roll
fidivrs
mov
notl
arpl
sar
adc
sub
ss
sub
stos
popf
mov
inc
shrl
ja
add
push
loop
cmc
in
stos
pop
mov
dec
nop
cld
loope
adc
fld1
nop
xor
xchg
sub
jmp
nop
mov
cmp
ficoml
inc
pop
out
mov
in
js
cs
ror
jecxz
dec
mov
push
in
sahf
sbb
pop
sbb
mov
gs
decl
mov
adc
inc
xchg
call
xchg
clc
sbb
lcall
inc
mov
scas
rcr
js
jmp
mov
xor
dec
push
in
out
daa
cmpsl
lret
bound
xchg
shlb
ds
in
xlat
movsl
lock
test
jg
test
push
and
pop
mov
inc
call
cmc
sub
arpl
dec
push
pop
xchg
mov
fwait
das
aas
pop
mov
cmp
mov
incl
sub
xchg
sbb
mov
adc
adc
out
sbb
pop
xor
push
loope
insl
lcall
sbbb
dec
mov
and
fwait
addl
ljmp
cwtl
add
xchg
or
dec
je
push
cmp
ja
or
mov
or
jo,pt
and
iret
fiadds
inc
testl
jl
ror
addb
mov
or
fldl
mov
mov
test
movsl
adc
dec
or
rcrb
jns
cmpsb
sarb
add
dec
imul
mov
xchg
std
pop
inc
flds
dec
push
lods
mov
and
hlt
pop
jae
mov
test
sbb
pop
jnp
imul
into
fsubl
lods
incl
cli
mov
sbb
addl
lret
cltd
loopne
daa
cmp
adc
popa
add
out
lods
stos
mov
aam
dec
add
jne
popf
mov
jecxz
pop
cs
adc
xlat
aas
inc
hlt
lods
aam
sbb
movsl
inc
arpl
loope
sti
and
pop
cmp
push
pop
sbbl
cmp
jmp
mov
xchg
dec
inc
fwait
je
loope
jle
sbb
inc
adc
bound
mov
out
repnz
shrl
mov
xor
fldl
in
jge
add
shrb
adc
adc
mov
int3
test
dec
jp
mov
loope
dec
mov
je
xor
push
sbb
mov
adc
pop
dec
roll
cmpsl
cmc
fistl
in
test
outsl
int
loopne
xchg
xor
add
mov
mov
push
shl
imul
mov
push
dec
popf
ss
cmp
jns
push
pop
xorl
xchg
mov
push
cld
or
adc
pusha
inc
aas
scas
andl
pop
gs
int3
sti
lock
sahf
popa
mov
in
lock
mov
loop
sbb
leave
pop
dec
shll
call
test
add
int
add
xor
call
cmpsb
aam
or
mov
xor
repz
aad
xlat
fwait
adc
insb
stos
idivl
mov
movsl
test
cmc
jecxz
xor
or
clc
jmp
outsl
cmp
lret
sar
cli
mov
push
loopne
popa
and
push
xor
sbb
loope
jne
test
lds
xor
inc
mov
or
jmp
adc
mov
cld
lods
or
lock
add
mov
mov
mov
sub
pop
adc
fidivl
out
sti
push
frstor
add
popf
test
sti
mov
dec
push
mov
or
cs
xor
pop
call
mov
pop
or
cltd
popa
mov
mov
or
xchg
dec
out
jecxz
int3
push
xchg
mov
mov
dec
mov
data16
or
pop
mov
and
pop
inc
mov
bound
xlat
notb
dec
or
mov
pop
push
mov
mov
int
hlt
push
sub
sub
mov
jp
sub
mov
inc
das
int
insl
lds
outsl
fisubrl
lret
xchg
jae
add
xor
cmc
mov
inc
pop
shll
sti
mov
adcb
rolb
push
xor
addb
dec
push
or
xor
movsl
pop
outsl
aad
and
dec
adc
sub
pop
popf
dec
cltd
imul
popf
mov
in
out
ret
adc
add
jno
ljmp
lret
cltd
push
push
xchg
mov
sti
cwtl
in
jnp
jne
push
stos
jge
push
mov
xchg
adc
repz
or
lahf
insb
mov
add
leave
pop
jp
sbb
popf
cs
xor
repz
jecxz
addr16
es
adc
ret
or
call
jg
mov
mov
push
jnp
jnp
stc
stos
cld
dec
sub
popa
sub
lods
jmp
jge
ja
push
and
fsubs
jmp
test
sti
mov
lahf
loope
pop
ror
xchg
aaa
mov
xorl
es
cmpb
scas
cltd
lods
pop
fiaddl
push
ret
dec
repnz
jmp
mov
stos
sarb
add
cld
aad
inc
mulb
cli
in
xor
arpl
inc
cmc
repz
pop
or
cld
push
mov
or
sub
imul
jo
xchg
jne
out
fnsave
sub
int
idivb
cmp
movsl
pusha
jmp
ljmp
outsb
movsl
in
pop
inc
lret
shl
stos
push
inc
xchg
mov
cmpb
arpl
jp
inc
jae
sub
shlb
xchg
out
xlat
push
fstpt
adc
jg
popf
cmc
mov
scas
fistpll
mov
pop
or
cmp
lret
inc
push
ret
stos
fdivr
inc
gs
add
mov
adc
add
xchg
jmp
xchg
movb
push
cmpsl
in
sub
nop
fldenv
jecxz
jmp
mov
lcall
lea
xor
in
enter
mov
jg
aad
lret
insl
stc
inc
shll
std
fwait
pop
int
mov
repnz
xchg
cmp
adc
movsb
aaa
mov
lock
jmp
in
js
mov
sub
out
fiadds
cs
adc
fadd
ljmp
xchg
bnd
sub
inc
repz
mov
repnz
xor
push
pop
adc
push
push
mov
add
sub
shl
leave
or
mov
and
mov
cmp
pop
cmpsl
imul
push
xor
sahf
popf
sbb
sbb
in
shll
jecxz
inc
loop
jns
pop
mov
jl
mov
pusha
sarl
dec
lods
push
push
dec
fwait
xchg
xadd
push
ret
aad
and
fs
xchg
cmp
and
fcoml
fmull
xor
mov
pop
fisubl
cmp
xchg
rcll
ret
adc
mov
mov
ds
xchg
insb
cmpsl
mov
cmp
and
jecxz
xchg
lods
leave
pop
sub
imul
cli
hlt
imul
sahf
mov
call
dec
iret
ljmp
mov
mov
inc
or
pop
mov
jnp
and
out
aas
outsl
dec
cs
dec
out
cmp
rorl
out
xchg
dec
pop
movsb
dec
or
ss
in
mov
pop
sub
or
mov
std
add
cmp
mov
call
and
add
cmpsl
lret
cs
lahf
mov
and
sbb
sub
mov
and
loop
cmp
adc
sarl
es
push
pop
pusha
mov
mov
lea
sbb
xchg
enter
cmpsb
add
cmp
sahf
lfs
dec
scas
clc
xor
test
ja
out
add
loope
jl
sub
cs
cmc
mov
test
inc
pop
xor
sub
mov
cs
push
stc
shrb
mov
mov
imul
push
cmp
inc
sarl
sbb
lahf
jl
cmpsl
in
ret
nop
int
fbstp
sub
mov
cmc
or
ret
and
mov
jo
and
mov
cli
dec
push
and
fimull
dec
out
mov
jp
sbb
out
or
loope
fwait
jno
adc
mov
xor
pop
push
and
outsl
inc
imul
insb
ficomps
xor
or
push
pop
jecxz
mov
push
inc
popa
pop
inc
into
iret
push
mov
fidivs
jmp
pop
gs
xor
cmc
lret
and
adc
pop
mov
xorl
icebp
test
cld
aas
aaa
movsl
lock
push
jo
ss
mov
jbe
int3
add
fninit
push
xchg
cld
push
pop
lret
and
mov
in
cmc
ja
les
js
in
aaa
mov
lahf
xor
imul
add
xchg
cwtl
mov
popf
enter
mov
leave
or
xchg
aad
das
mov
mov
fmuls
push
inc
les
cmpsl
pop
jle
fcoms
push
mov
mov
ret
das
xlat
jmp
mov
mov
xor
push
sub
pop
aad
sbb
push
leave
dec
inc
xor
ffreep
testl
mov
cmp
pop
sbb
jecxz
lahf
or
sbb
fldcw
hlt
pushf
pop
cs
pop
inc
push
pop
xor
mov
fisubl
lcall
das
movsl
xor
mov
fcoms
leave
fwait
repz
pusha
loope
dec
pop
loopne
and
cmp
js
in
rcll
popa
inc
adc
push
dec
jecxz
cmp
or
and
or
pop
mov
sub
mov
outsl
imul
fmul
and
sti
jl
cmp
outsl
and
loope
sub
repnz
andl
pusha
scas
add
shlb
inc
jg
std
sub
pop
sbb
adc
mov
int
jae
inc
pop
stc
inc
sti
test
outsb
fwait
lods
pop
sbb
inc
mov
test
cli
add
out
or
iret
mov
in
loope
sahf
movsb
lret
aas
fst
mov
dec
sbb
push
jns
stos
mov
pushf
xchg
notl
and
sub
scas
addl
and
mov
push
mov
add
lgs
inc
shl
mov
sti
stos
or
jmp
push
mov
pop
pusha
xchg
pxor
divl
rcr
jns
xor
push
jg
jb
pop
lds
outsl
sarl
lret
adc
mov
cmc
adc
xor
clc
icebp
or
mov
push
outsb
push
mov
inc
xchg
dec
pushf
sbb
ficoms
flds
fsubrl
mov
push
xchg
adc
sub
sub
or
xor
jno
ficomps
push
sub
fadds
scas
decb
call
push
outsb
sub
mov
add
lahf
and
mov
repz
and
stos
cmp
mov
lcall
jnp
pop
pop
sti
gs
mov
popa
js
hlt
into
add
loopne
dec
jg
adc
stos
jmp
push
faddl
push
push
jle
or
cmc
movsb
mov
out
stc
pop
push
or
loopne
scas
out
cmp
sbb
test
aad
fs
scas
mov
xchg
loopne
fdivs
and
fiadds
in
dec
push
pop
aaa
add
dec
cmp
mov
fistpll
mov
cltd
ja
cld
dec
push
insb
xchg
in
xchg
jge
push
fxch
xchg
inc
adc
sbb
arpl
inc
int
sub
aad
sub
icebp
lods
dec
mov
pushf
sub
xchg
scas
jne
xlat
popf
sbb
clc
std
sub
je
imul
jo
add
push
bound
adc
sub
cmpsl
mov
adcb
inc
jns
movsl
cmp
lcall
pop
je
sbb
lahf
push
arpl
mov
lea
aad
fsts
and
in
xchg
or
sub
mov
mov
stos
mov
dec
ret
jae
insl
mov
mov
inc
jb
cs
jo
and
pushf
xchg
xor
add
lret
ret
cmpsl
rclb
mov
iret
cmp
inc
in
js
xor
test
adc
adc
test
sbb
gs
out
int3
stos
ja
flds
dec
pop
dec
out
dec
dec
sub
push
jge
adc
outsl
add
mov
test
push
imul
in
mov
push
in
enter
add
fisttps
xor
cmp
or
fdiv
mov
fstps
lods
push
sub
orl
idiv
mov
test
int
test
sub
jno
jns
out
adc
add
jp
jbe
mov
push
xor
movsb
or
mov
sbbl
push
int
lahf
xchg
orl
leave
test
and
pop
test
icebp
in
test
andb
mov
push
jno
mov
decb
sub
pop
pop
fsubl
cmc
push
scas
fnstenv
add
dec
fwait
lock
movsb
or
mov
jno,pn
dec
addr16
std
out
sbb
ret
inc
test
lret
add
mov
scas
jg
or
lcall
or
or
push
nop
xchg
test
push
push
iret
test
adc
pop
mov
sub
cmp
sub
inc
gs
add
xchg
sahf
leave
lahf
cmpsl
push
out
ja
adc
inc
sub
mov
icebp
jl
xor
imul
mov
mov
lcall
add
sub
push
sbb
hlt
cld
and
mov
push
mov
iret
adc
insl
js
ds
iret
enter
cmp
push
lds
cmpsl
xchg
cld
fsubs
icebp
sbb
lret
in
outsb
adc
out
icebp
pop
ficoms
dec
andl
arpl
push
js
loope
mov
xor
mov
jbe
dec
stos
or
adc
inc
ret
enter
push
fidivrs
rclb
adc
dec
adc
jne
jb
sub
and
or
xor
xchg
insl
adc
push
cli
std
xor
mov
mov
xchg
lods
push
pop
mull
mull
scas
and
scas
and
imul
cmpb
and
and
sub
push
mov
mov
mov
push
sahf
outsb
movsb
outsb
call
loopne
std
into
js
cwtl
fsubs
cmp
sub
mov
dec
aad
or
loop
jle
shll
xchg
into
jne
push
fiadds
xchg
js
arpl
pusha
jmp
mov
xlat
push
mov
hlt
mov
sub
cmp
adc
enter
int3
fldt
testl
loope
mov
adc
cmp
jg
fnclex
mov
mov
jb
int3
or
jp
jmp
sub
hlt
push
fwait
cmpsl
pusha
lahf
pop
pop
rorl
int
scas
femms
push
movsb
pop
stc
cmpsb
aad
out
stos
lock
shrb
lock
xchg
in
mov
jo
push
and
fwait
push
fsts
setp
bound
push
sarl
je
ret
jle
mov
mov
ljmp
jae
stos
mov
cld
xchg
mov
mov
xlat
sbb
in
outsl
push
or
mov
inc
dec
sbb
dec
bound
add
div
add
repz
and
inc
adc
dec
imul
mov
xchg
fcom
xchg
sub
sub
testb
lret
xchg
loop
jae
adcl
test
jl
fisttpll
bound
or
fwait
xorl
jns
popf
shl
sahf
out
mov
outsl
pusha
dec
mov
sbb
out
out
lahf
dec
sub
idivb
stos
aam
fdivs
out
std
lods
mov
hlt
loopne
test
loop
inc
dec
in
out
cmp
lahf
out
xchg
cltd
xchg
and
arpl
fsubrs
rorl
and
cmp
xor
mov
repnz
mov
fs
xchg
fcomps
and
pop
or
in
nop
shl
xchg
js
xchg
dec
jb
pop
and
addb
add
mov
ljmp
mov
jmp
sub
cmpsb
ffree
add
mov
ds
sub
outsb
dec
lock
sub
in
add
arpl
loopne
push
inc
inc
xchg
test
lods
cmp
es
fdivrs
and
xchg
pop
jle
mov
in
fnstsw
loope
dec
adc
icebp
aad
mov
pop
push
test
pop
cmc
in
movsl
cmpsb
ljmp
xor
xchg
and
dec
pop
xchg
je
sbbb
pop
mov
mov
addr16
sbbb
sbb
data16
pop
rorl
mov
mov
lock
mov
push
jmp
cmp
cmp
mov
push
xchg
mov
and
xlat
mov
cwtl
mov
or
dec
xchg
push
cmpsb
adc
ret
popf
mov
cmp
xor
in
sub
sbb
bound
push
xorb
in
lds
and
sbbl
jmp
bnd
jo
push
xor
int
repnz
pop
mov
imul
and
int
xor
jae
mov
in
lea
or
clc
stos
into
dec
lret
pop
pop
xor
clc
sub
stos
cmp
and
lahf
jle
fwait
mov
jne
mov
ljmp
or
adc
leave
enter
mov
add
test
out
jb
xchg
jns
imul
mov
fnsave
dec
aad
bnd
lock
out
push
jg
and
dec
xchg
adc
xchg
adc
dec
push
mov
jg
addl
sbb
mov
test
lea
jbe
inc
cmp
cmp
arpl
cli
loope
ja
popa
outsb
mov
sbb
pop
adcl
nop
and
fsubl
mov
lods
in
les
jle
in
pop
mov
pop
push
cwtl
outsl
call
mov
jne
mov
xchg
mov
inc
pusha
sbb
jbe
pop
mov
or
fimull
arpl
in
cmp
inc
or
dec
dec
test
mov
dec
adc
lds
in
dec
out
pushf
cmp
lock
sub
je
mov
fbld
lock
xchg
movsl
jle
inc
push
enter
mov
dec
ret
xor
add
mov
xor
cmpsb
outsl
xchg
and
out
dec
imulb
insb
loope
sbb
cld
les
in
call
jmp
add
jmp
or
cmp
adcl
int3
fs
push
adc
adc
or
popa
push
into
mov
rcl
test
icebp
fwait
xor
stos
scas
sub
and
sbb
sahf
push
or
das
push
sbb
or
jge
inc
movsl
inc
pop
pusha
or
dec
lcall
and
xchg
dec
inc
in
out
das
jb
jnp
imul
xor
jecxz
imul
aaa
pop
mov
dec
out
xchg
mov
ss
adc
repz
jne
dec
loopne
mov
adc
daa
cld
dec
arpl
adc
cwtl
ljmp
jmp
cmp
adc
push
sub
adc
cmc
pop
cmp
pop
adc
push
mov
cltd
scas
out
sahf
jns
mov
shl
mov
out
push
jno
cmp
mov
xor
or
sub
ss
aad
pop
mov
or
shrl
mov
dec
ljmp
fsubs
push
or
cwtl
cmp
inc
jae
push
xor
enter
push
mov
inc
outsb
hlt
stos
cld
inc
cli
jns
adc
sbb
outsb
pusha
mov
lret
pop
xchg
mov
cmp
mov
mov
inc
nop
add
cmp
lret
out
sti
shll
loop
sub
ljmp
sahf
aam
mov
cmpb
enter
xchg
jb
xlat
sub
sarl
dec
adc
or
adc
mov
xor
daa
xchg
fisttpll
cmp
jae
loope
sbb
fstps
xchg
inc
pop
in
xor
inc
insb
dec
rcll
adc
dec
jg
jo
xor
shll
movsb
faddl
push
or
fisubl
mov
lahf
mov
push
mov
testb
sbb
mov
mov
jmp
daa
xchg
sahf
push
insl
jne
push
adc
fldl
mov
mov
scas
sbb
adc
push
and
test
jge
push
mov
push
pop
test
or
sub
xchg
mov
xchg
imul
pop
in
mov
in
sbb
gs
pop
xor
iret
lret
fists
stc
popa
sub
pop
jb
pop
inc
xchg
fsubrp
sub
movsb
cltd
jne
ljmp
and
movsl
push
idivb
xor
cmpsb
sbb
je
rcrl
subl
jl
dec
pop
mov
adc
daa
cmp
icebp
testb
jb
in
mov
push
dec
hlt
dec
sbb
dec
inc
add
clc
jmp
mov
pop
mov
pop
cltd
add
add
addr16
das
dec
sbb
xchg
cltd
or
push
mov
loopne
popf
add
idivl
inc
cmp
cwtl
adc
in
sub
stos
jae
lahf
mov
push
dec
in
scas
sbb
pushf
or
cmp
std
and
add
xor
xor
and
inc
imul
fildll
lds
data16
aad
mov
inc
xchg
fiadds
leave
cli
jns
call
stos
shrb
cmp
lds
mov
je
sbb
faddl
popf
add
adc
pop
fs
jl,pn
test
ret
adc
imul
cmp
movsb
je
pop
cmp
push
or
loopne
mov
mov
andnps
shll
mov
sbb
add
loopne
mov
testb
aad
xchg
jg
leave
imul
sbb
ds
xchg
sub
inc
aam
mov
adc
aad
jl
pop
pop
pop
adc
cmp
mov
mov
dec
sub
mov
jb
dec
xchg
cmp
add
loop
imul
fwait
adc
shr
pusha
enter
mov
jae
out
xor
inc
and
jle
sbb
xor
xchg
sbb
push
pop
testl
pop
stos
cld
sbb
mov
hlt
ds
movsb
push
pop
jb
imul
test
xor
out
mov
mov
test
mov
sub
sti
into
push
clc
pop
loop
dec
mov
mov
les
adc
ss
and
popa
sub
jo
jo
ret
sub
mov
aaa
mov
sbb
das
xor
jns
nop
out
nop
xchg
stc
add
dec
sbb
sub
adc
outsl
xchg
jp
lret
repnz
fstpt
inc
stos
outsb
jae
clc
push
jo
xchg
cwtl
and
fisubl
or
adcl
push
xchg
popf
jne
xor
push
std
inc
ret
add
ds
inc
sarl
nop
dec
jp
sti
idivb
xor
mov
sbb
adc
lret
add
cmp
mov
jbe
sbb
call
movsb
shl
loop
xor
add
and
test
pushf
mov
inc
inc
sub
add
push
test
pop
add
and
jl
sti
into
scas
insl
pop
das
stos
test
adcb
add
jo
rcr
lahf
mov
dec
sbb
out
out
push
jmp
out
rep
sbb
adc
mov
std
leave
sarw
dec
push
imul
push
add
xor
mov
push
mov
cld
sbbb
dec
add
xlat
adc
push
lods
sbb
imul
jg
pop
mov
adc
dec
testl
pop
push
mov
add
in
aaa
nop
jmp
data16
jnp
in
pmulhuw
sub
test
inc
pop
push
notb
inc
pop
cmp
jae
shl
cli
mov
std
pop
xchg
data16
mov
sbb
xchg
lcall
mov
lods
movsl
ljmp
mov
jno
loopne
or
icebp
sbb
mov
mov
das
sbb
das
gs
cmpsl
push
lcall
dec
daa
shrl
jnp
decl
sub
in
sbb
xchg
iret
xchg
rorl
lahf
adc
sahf
and
cmp
sbb
inc
mov
and
and
loope
and
inc
inc
push
repnz
fldt
xlat
adc
push
popa
daa
pop
add
push
and
pop
into
bound
lahf
mov
into
jae
mov
or
aas
scas
pop
int3
and
adc
pop
dec
mov
or
cmp
call
xlat
xor
adc
or
sbb
imul
movsl
sub
repnz
mov
lcall
ret
jne
xchg
in
daa
or
xor
into
aad
test
int
push
sti
mov
xchg
dec
in
pop
xlat
dec
dec
lds
pop
pushf
xor
mov
insl
push
jp
inc
jle
ljmp
cmp
xchg
cmpsb
mov
mov
fwait
cld
scas
jb
rorb
outsl
sti
outsb
outsb
cmpsb
inc
clc
sub
fisttps
sti
or
stos
jmp
inc
mov
insl
insl
pop
add
rorl
and
mov
scas
fadd
pop
pop
inc
jge
js
int
jmp
out
xchg
cmp
das
lret
scas
xchg
mov
cmp
dec
mov
xchg
dec
ljmp
xchg
popl
jnp
mov
stos
dec
pop
out
pop
sub
fcomps
ds
repnz
scas
dec
ljmp
rorl
in
sub
aas
and
jmp
out
jns
xor
pop
loop
pop
test
push
jno
jp
pop
sbb
mov
xchg
jb
aam
jo
test
inc
cs
jno
adc
out
pop
mov
pop
xor
push
mov
sahf
sbb
lea
shrl
addr16
pop
push
mov
retw
jb
jno
xor
adc
inc
pop
loopne
mov
fdivrs
or
mov
sub
inc
xchg
mov
mov
aam
enter
in
mov
pop
lea
inc
es
ljmp
pushf
mov
test
inc
loopne
sti
pusha
mov
addl
cwtl
jge
loop
add
mov
adc
pop
pop
mulb
xchg
out
sarb
inc
aas
jo
arpl
adc
cmp
xchg
fadd
popa
das
push
cmpsb
pop
dec
fistps
push
loopne
sub
iret
lea
and
xchg
ret
jp
ds
movsb
jns
mov
repnz
inc
notl
push
xlat
mov
adc
sti
jle
pop
adc
sbb
cmc
into
popf
dec
mov
cmp
flds
mov
or
xchg
ljmp
and
mov
pop
jp
or
inc
arpl
adc
mov
sbb
movsl
imul
fdivrs
adcl
scas
inc
dec
mov
cmpsb
mov
mov
testl
ss
outsb
push
pop
mov
add
jno
mov
pop
iret
or
fcompl
cmc
arpl
cmp
std
dec
cwtl
je,pt
pop
bound
fdivr
fdivrl
lds
pop
pop
mov
cmc
jl
jb
cmc
stos
nop
mov
clc
ds
xor
xchg
add
aaa
jb
aam
mov
jbe
add
xor
pushf
scas
inc
sti
xor
pusha
push
stos
stc
std
pop
or
lock
outsl
adc
sub
mov
mov
fsubs
xchg
fs
imul
aaa
push
cmpsb
aad
les
sarb
ljmp
xchg
jg
and
xchg
cmpsl
xchg
int3
dec
cmp
jg,pt
push
sbb
sbb
dec
fdivs
dec
xor
sbb
xchg
leave
push
mov
jmp
or
shr
add
or
cli
push
jp
jmp
mov
sti
clc
inc
push
xor
in
jmp
and
and
lods
data16
sub
cwtl
jo
pop
in
add
xor
mov
loop
loope
les
insb
or
mov
repz
fs
and
test
scas
aam
inc
sbbb
cwtl
test
adc
cs
dec
mov
inc
mov
cmp
inc
xchg
stos
jno
cmp
cld
lds
or
or
aad
repz
jno
xchg
mov
out
inc
cmp
xlat
arpl
aad
sbb
popf
cmp
rolb
mov
pop
sbb
inc
jecxz
clc
je
sbb
lcall
loopne
push
push
ja
push
xchg
in
push
add
shl
out
ljmp
push
add
inc
fcoms
mov
mov
mov
shrb
jns
dec
popl
movsl
pushl
push
fwait
enter
jns
test
pop
mov
sub
xor
sbb
mov
pop
arpl
test
incb
into
adc
push
es
stos
das
cli
and
jne
test
adc
dec
lods
hlt
push
insb
push
ret
pop
test
pop
lahf
cs
lods
adc
ja
or
cmp
je
jb
push
mov
push
insb
shl
or
movsl
or
adc
testb
stc
mov
fisubrs
loope
stos
sub
add
in
push
add
sub
jecxz
out
mov
subl
repnz
dec
mov
add
cmp
push
mov
or
mov
push
cmp
out
fnstcw
inc
jae
jp
pop
xchg
mov
adcb
in
sub
jp
data16
xlat
mov
push
pop
int
cmpsb
or
pop
out
jne
jb
fs
pop
ss
stos
sbb
cmp
mov
shr
je,pt
mov
push
pop
aad
or
xor
outsb
push
gs
movsb
mov
mov
sub
bound
xchg
les
push
fwait
sub
je
adc
inc
pop
push
or
js
dec
lea
sbb
adc
int3
bound
out
std
add
push
mov
cmp
inc
into
shrl
daa
out
push
push
inc
xor
imul
in
sti
insl
ljmp
jnp
cmpsb
cmp
push
loopne
aam
mov
cs
outsb
jns
test
xor
inc
sbb
add
cmp
sub
movsb
sbb
cwtl
xchg
fsubp
mov
ret
mov
ja
cld
dec
pop
faddp
pusha
and
icebp
idivb
xchg
jecxz
cmp
es
les
mov
pop
lahf
stc
sbb
jmp
faddl
ja
dec
push
sbb
mov
aas
into
test
pop
pop
icebp
push
in
sub
aaa
cwtl
out
lods
mov
sbb
push
and
gs
mov
andb
xchg
mov
push
in
add
test
hlt
push
lret
out
mov
cmp
ja
and
icebp
cmp
xor
outsb
mov
iret
xor
mov
shrl
sbb
shr
idivl
mov
insl
push
out
scas
or
repz
nop
xchg
or
lock
sbb
orl
mov
int
inc
dec
loop
add
leave
mov
orb
fidivrs
mov
mov
movsb
push
cwtl
pusha
xchg
out
mov
jne
xor
test
cmp
dec
fs
dec
icebp
pop
insl
es
mov
pop
inc
jmp
add
ja
mov
loope
pop
shrb
imul
shr
adc
lock
push
and
repnz
cli
cwtl
enter
jmp
dec
repz
into
pop
es
add
enter
movsb
or
loop
and
adc
adc
call
out
sub
inc
fadds
or
push
cmp
inc
add
outsl
xor
or
rcl
and
xor
aas
clc
inc
cmpsb
push
les
xchg
cwtl
pop
ja
out
outsb
mov
mov
xor
cli
adc
pushf
lock
negb
pop
insb
aas
inc
push
cmp
mov
insl
xor
hlt
sub
inc
stos
dec
dec
sub
out
mov
push
jmp
add
push
lahf
js
stc
lahf
push
xlat
adc
pusha
mov
dec
imul
sbb
ss
inc
jmp
pop
addb
fnstsw
dec
les
out
inc
call
leave
out
pop
test
iret
adc
shll
sub
pop
test
iret
push
pop
les
sbb
lahf
cmp
xor
dec
or
ja
sahf
popa
sbbl
shrb
les
xchg
repz
jmp
aam
xchg
icebp
movsl
adc
ds
mov
mov
dec
mov
dec
stos
jl
cld
mov
push
clc
addl
adc
enter
inc
test
or
xor
dec
sbb
jae
jg
lods
mov
sbb
test
lret
js
and
mov
outsl
pushf
sahf
xchg
clc
fs
loope
rorl
mov
mov
adc
ja
ja
mov
daa
negb
xchg
sti
scas
jle
or
jb
aas
sbb
adc
negl
imul
dec
adc
push
mov
std
mov
push
jge
xchg
mov
mov
dec
stc
stc
sbbb
aaa
cmp
jno
mov
dec
orb
jle
jo
hlt
push
pop
or
xor
sub
ljmp
jne
or
jno
push
jl
imul
addl
pop
in
loopne
aad
je
push
push
test
cs
push
mov
cmp
cltd
cltd
into
mov
stc
es
push
cmpsl
and
mov
xchg
jmp
push
mov
enter
shrb
and
stos
mov
mov
jmp
subl
cmp
mov
ret
jge
push
in
xor
addl
sbb
jo
clc
adc
adc
arpl
xchg
xchg
pushf
sub
in
push
cmpsl
lahf
call
add
ret
in
mov
repz
push
movsb
inc
addr16
mov
dec
xchg
push
jp
and
cmp
xchg
clc
sbb
subb
enter
mov
lahf
sub
lret
clc
sbb
adc
aas
mov
fmulp
shlb
les
add
sbb
rcll
aam
mov
push
fsubrs
shll
sbb
cmpl
pop
fadd
mov
rol
inc
sahf
sub
xorl
or
jo
in
jbe
push
mov
pop
mov
mov
daa
lea
popl
cmc
xchg
mov
out
push
hlt
xor
push
icebp
shl
jle
sbb
jbe
sub
rcrb
push
cld
out
cmp
inc
cmpb
test
out
xchg
xchg
popf
or
pop
mov
sahf
adc
and
jp
cmp
jp
or
push
add
xlat
sbb
cmpsb
into
cmp
fs
repz
jg
outsl
cmpsb
jmp
or
mov
movsb
cmpb
faddl
in
mov
xlat
and
call
addr16
push
or
loop
xchg
mov
adc
jns
xchg
rcrl
shrl
push
sub
push
push
add
ret
pop
ret
repnz
mov
pop
testl
xchg
fldenv
sbb
pushl
mov
or
or
lods
iret
sbb
mov
test
inc
lcall
subb
pop
cltd
jnp
inc
jnp
jno
enter
pop
and
dec
jne
gs
test
les
mov
imul
ret
jl
dec
mov
lds
rorb
arpl
loope
int3
push
movsb
lods
push
sub
mov
xchg
shrl
mov
jnp
cmpl
aam
loop
sahf
sbb
pop
cmpsb
inc
add
push
jb
cwtl
test
repnz
xchg
xchg
push
xor
adc
adc
je
loope
outsb
icebp
rorb
outsb
or
fdiv
push
imul
outsl
call
insb
cmp
dec
adc
testb
aam
js
fimull
mov
sbb
rolb
lods
adcb
cmc
rcr
sbb
ficompl
cmp
xor
jbe
out
popf
enter
and
push
push
into
inc
stos
andb
jae
dec
sbb
mov
xorb
mov
ja
mov
sbb
xchg
sub
xchg
popa
inc
sub
flds
stos
icebp
adc
mov
lock
dec
repz
adc
xor
and
push
pop
inc
pop
stc
xor
pop
lret
and
fucomip
xlat
rorb
test
mov
pop
xorb
sbb
xor
pop
xor
fldl
fadds
add
imul
cmpsl
cmp
repnz
adc
out
rclb
cmp
push
sbb
inc
ret
es
fnstcw
dec
adc
loope
pop
aaa
pop
adc
inc
jno
popa
insb
inc
or
push
adc
lock
sbb
mov
mov
insl
mov
mull
mov
xlat
inc
inc
cmp
adc
rol
sub
aam
aaa
mov
push
shll
jmp
xchg
aas
in
xchg
adc
push
out
dec
cmp
mov
das
xor
clc
stos
push
mov
test
aaa
xchg
mov
out
xor
fnstcw
inc
aas
in
ds
mov
push
test
cmpsb
dec
inc
mov
cmp
push
mov
sbbl
and
call
sub
push
inc
outsl
into
leave
insb
outsb
cmc
in
out
xor
xor
mov
jae
push
icebp
dec
jo
inc
push
pop
in
mov
je
jno
icebp
movsl
mov
or
shl
ljmp
add
jbe
popa
jbe
pop
push
jno
arpl
mov
inc
xor
jg
fst
pusha
lea
hlt
xchg
icebp
cmp
aaa
sbb
fsubs
loop
daa
jp
aam
mov
fiadds
into
dec
xchg
mov
add
aas
push
bnd
sub
pop
adc
and
repnz
mov
test
mov
push
or
dec
mov
data16
mov
cli
ljmp
lds
jge
inc
imul
jmp
fcmovne
daa
pop
mov
dec
inc
jmp
jne
sbb
mov
movsl
xor
xor
and
ret
push
xor
pop
mov
and
dec
ret
repz
mov
xchg
repz
js
cwtl
dec
aad
std
daa
stc
mov
jp
jecxz
pop
loop
addr16
cmp
adc
lods
push
and
xchg
shll
or
mov
push
lods
adc
rcl
pop
sub
sub
call
add
testl
bound
repz
mov
pop
cli
aad
icebp
jp
stos
and
lock
sub
mov
xchg
sbb
xchg
jge
dec
add
xor
pop
out
xor
add
andl
fiaddl
addb
sti
or
push
mov
add
mov
cmp
inc
fbld
sub
push
sub
call
xlat
mov
inc
mov
std
stos
dec
and
mov
rcll
mov
and
out
sti
sbb
lds
in
mov
nop
xchg
scas
je
test
in
mov
jmp
clc
stos
push
fisttpl
loopne
lcall
scas
mov
mov
mov
test
fwait
push
pop
addr16
sbb
xchg
mov
mov
sbb
mov
push
jle
inc
and
std
add
pop
xlat
call
cmp
jecxz
mov
xor
pop
mov
ljmp
sub
pop
fstp
cmp
adc
cmc
scas
push
in
rcrl
jp
mov
or
xchg
adc
popa
lret
add
mov
cmp
push
mov
pusha
lret
and
jg
out
icebp
fcom
loope
js
fists
movsb
das
divl
and
sub
popf
nop
stc
jge
pop
repnz
sar
dec
pop
scas
call
test
clc
dec
cmpsl
dec
xor
into
push
stos
mov
inc
mov
cs
iret
mov
jns
cmc
inc
lods
add
dec
hlt
test
mov
push
sub
aam
mov
pop
push
and
pop
decb
and
inc
pop
jge
into
jmp
pop
pusha
repnz
loop
dec
cwtl
imul
add
gs
les
xchg
scas
shll
pusha
fwait
push
dec
add
mov
loopne
push
pop
xchg
icebp
push
outsb
dec
ds
call
mov
jecxz
std
test
jb,pt
adc
xchg
scas
push
mov
mov
and
fisubrl
fldt
outsb
pop
or
out
dec
push
outsl
sbb
xchg
inc
and
andl
push
push
lcall
pushf
aad
mov
hlt
lea
and
loopne
push
push
push
mul
ret
nop
push
xchg
test
inc
mov
mov
pop
nop
mov
sub
jb
xorb
dec
sti
cmpb
xchg
push
pop
bound
cmpsl
push
and
js
push
add
int
jle
cli
out
cmp
repz
or
pop
in
mov
mov
dec
add
xorb
or
adc
xchg
ret
lea
cmp
pop
cld
dec
pop
lret
test
fbld
lret
into
outsb
repz
mov
jno
cmpb
xor
cmpsb
add
mov
sbb
inc
xor
lret
popa
stos
add
sub
and
daa
jns
mov
fdiv
or
ret
dec
dec
rcll
mov
mov
cmp
add
rorl
sar
push
jg
daa
or
lcall
mov
popf
cld
dec
aaa
jnp
rcll
addr16
xchg
xor
data16
fstps
test
in
movsl
jno
push
enter
repnz
mov
divb
lds
loopne
jnp
aaa
movsl
mov
cs
adc
push
stos
or
mov
js
jge
pushf
cmp
loope
aas
adc
aad
adc
cs
and
out
jmp
scas
in
bound
mov
pop
ret
adc
bound
loop
in
scas
jno
inc
nop
int
cli
out
popa
pop
jecxz
lods
sbb
and
xchg
fdivl
fwait
lods
jge
mov
mov
movsb
dec
jo
sbb
add
mov
and
mov
push
lods
stc
mov
daa
repnz
repz
popa
shrl
ja
iret
sbb
inc
popa
stos
stos
lret
jmp
cmpsl
aam
movsl
pop
or
xor
xor
add
jp
shll
aaa
repz
cmpsb
mov
or
mov
ret
xchg
call
jns
sahf
xchg
push
push
orb
aas
xchg
mov
mov
sbb
xchg
push
fistl
popa
nop
add
adc
xchg
es
lret
mov
pop
outsl
or
sbb
adc
inc
cwtl
and
pop
mov
fidivl
inc
stos
add
inc
pop
insl
mov
push
lods
sbb
lods
jnp
jmp
push
loopne
xchg
pop
mov
addr16
xor
cmp
call
lock
cmp
stos
and
xchg
and
fdivrl
xor
and
jp
sbb
xor
add
sub
fwait
insb
sub
cmp
jns
xor
shll
cmp
jg
xor
in
dec
sbb
jp
jnp
pop
and
cwtl
ret
fmull
mov
pop
jae
aaa
sbbl
aaa
mov
ret
jae
imul
outsl
repz
or
mov
jl
and
iret
mov
inc
pop
lahf
push
dec
fisubs
arpl
and
mov
ret
push
cwtl
cmp
js,pn
xchg
fwait
and
std
clc
bound
shlb
lcall
xlat
xor
shll
jmp
icebp
and
inc
mov
clc
xor
mov
fcompl
xchg
enter
scas
cmp
push
dec
pushw
pop
pop
jnp
dec
ret
loopne
mov
pop
mov
out
pop
or
adc
das
pop
mov
out
pop
rorb
or
out
push
xor
cmp
shlb
mov
cmp
lret
das
sub
enter
aas
adc
pop
mov
push
xchg
lahf
insb
jbe
ljmp
dec
push
inc
outsb
push
and
out
push
push
xchg
mov
or
jl
loopne
aas
mov
testl
mov
sub
pcmpeqw
lcall
pop
and
mov
rcrb
cmp
sarb
sbb
leave
ljmp
jl
mov
neg
aad
ret
lock
sbb
jecxz
bound
add
or
or
cmp
in
sbb
hlt
sub
xor
outsl
dec
lret
inc
insb
jge
sbb
xchg
jb
push
cmc
das
sar
pop
mov
pushf
mov
gs
aaa
cmpsl
inc
mov
shlb
loopne
jecxz
and
scas
cmpsl
fs
nop
push
aas
in
mov
or
je
pop
jae,pt
cmp
dec
mov
adc
jae
orl
imul
addl
lcall
xchg
xchg
cwtl
dec
push
popa
jg
out
cmpsl
imul
aad
cli
pop
push
sbb
adc
xchg
imul
sub
stos
in
mov
daa
sbb
xlat
cmp
imulb
fcomp
orb
cmp
add
mov
sbb
pop
fistpl
test
mov
and
mov
xchg
std
cmp
push
cmp
xor
xchg
aaa
xor
push
cmpxchg
ret
xor
pop
or
aaa
xchg
sub
add
push
mov
cli
loopne
mov
es
mov
push
aaa
or
inc
or
and
insl
lock
push
out
jge
js
mov
fstpt
ret
xor
int3
mov
aaa
sbbl
divl
push
cmc
inc
int3
cs
jp
mov
pop
add
lret
sub
lret
jbe
mov
inc
sbb
dec
or
fcmovne
jp
leave
test
repnz
mov
into
lahf
pop
imul
jmp
fidivrl
leave
push
sbb
leave
cld
dec
mov
jle
jecxz
and
mov
pop
scas
sub
xchg
add
test
or
fsubl
icebp
xor
jl
or
mov
pusha
outsl
xchg
fcmovb
orb
daa
mov
push
mov
sti
pushf
sub
sub
iret
fildll
dec
int
cltd
xchg
mov
add
nop
inc
adc
and
mov
mov
aas
push
scas
xor
fistps
xchg
out
lahf
xchg
ljmp
fcmovb
push
or
push
test
mov
mov
push
pushf
mov
and
jae
mov
inc
jo
call
mov
in
lea
ds
stos
xor
movsb
dec
cmp
in
mov
leave
in
out
push
push
in
xor
xchg
popa
push
sub
in
sub
or
push
push
sbb
pop
or
jbe
push
in
mov
inc
adc
pop
dec
test
insl
mov
dec
test
inc
push
test
xor
or
testb
test
xor
or
and
ss
cmp
movsl
mov
mov
adc
aas
jne
inc
test
ljmp
sub
mov
out
je
inc
pop
mov
scas
jne
mov
xorb
mov
push
aad
mov
or
xor
mov
jnp
cmp
icebp
jmp
mov
aas
jbe
scas
in
test
cmc
popf
xlat
mov
jns
xor
std
jecxz
push
jecxz
push
xor
jnp
sub
mov
ds
pop
sbb
lret
pop
ficoms
jnp
imul
push
xor
mov
arpl
in
jge
cli
sub
and
adc
mov
mov
aam
ds
stos
inc
test
cmovo
adc
cmp
jbe
mov
push
pusha
sbb
pop
xchg
in
sub
add
scas
cmpsb
in
mov
mov
jmp
popf
and
cmp
pop
xchg
xchg
lods
sub
jne
insb
fildl
jle
mov
jae
out
adc
mov
in
in
addr16
aas
xchg
push
sbb
lahf
les
iret
or
inc
imul
mov
sub
and
and
bound
lods
push
cmp
pop
mov
arpl
cmpsl
mov
xchg
xor
into
jge
inc
and
lock
out
in
mov
mov
pop
mov
jle
mov
and
push
push
jae
sbb
pop
dec
shlb
sbb
sbb
dec
lds
js
lahf
mov
shrb
test
add
inc
loope
fldl
inc
out
xchg
inc
cltd
cmc
jmp
pop
ror
add
fsubs
inc
out
xor
inc
sbb
test
ja
dec
loope
pop
cwtl
imul
leave
enter
jo
lret
sub
leave
push
imul
lods
adc
push
outsb
or
sti
xlat
sbb
cmpsb
cmp
loopne
xchg
out
outsl
push
pop
adc
sbb
or
mov
fnstenv
es
ljmp
jns
push
inc
fcmovnu
xchg
mov
mov
fldenv
xor
test
test
mov
loope
sub
das
fmull
lcall
xor
lcall
mov
cmc
int3
add
mov
loope
lret
mov
scas
add
xabort
jae
mov
addl
add
cmp
mov
jmp
repnz
das
inc
xchg
and
xor
push
jle
fdivrl
inc
push
cmp
or
cmc
js
lcall
aaa
dec
fst
jge
sbb
sub
push
xchg
in
ffree
add
dec
icebp
cwtl
test
subb
std
dec
in
fadds
adc
aas
lret
cmpsl
or
stc
rcll
inc
or
sub
popf
sbb
fisubs
sbb
sub
sahf
clc
loopne
dec
leave
ret
xor
and
jl
jnp
and
jmp
inc
into
stc
pop
xchg
addr16
arpl
bound
mov
sbb
and
sarl
movsl
xchg
push
xchg
lret
ficoml
jg
lret
addl
jp
cli
push
mov
orb
adc
xor
cltd
ds
ret
inc
loope
pcmpeqd
daa
data16
mov
test
lret
xchg
sub
mov
mov
push
iret
xor
xchg
mov
xor
mov
jbe
cmp
fstps
and
fwait
jb
mov
jle
sbb
jbe
pop
loope
mov
sbb
lods
cld
push
lods
xor
int
loopne
inc
xchg
loopne
das
cmpsb
dec
in
in
inc
sbb
mov
movsl
pop
inc
pop
and
mov
xor
lret
jg
mov
les
mov
sbb
daa
adc
pop
pushf
and
inc
sti
js
fildl
or
shll
jns
adc
xor
jp
push
mov
pop
subl
repz
mov
mov
xchg
in
outsb
jg
sub
lcall
cwtl
add
adc
push
movsb
pavgb
aas
ds
xchg
mov
or
and
sti
sti
aad
gs
cmp
ja
outsb
dec
in
xchg
rolb
cs
add
notb
lret
fstpl
mov
imul
mov
xor
cwtl
cmp
jb
jge
lods
fwait
inc
imul
cld
testl
cltd
iret
adc
xor
ja
stos
lret
sub
popa
xor
fadd
cmc
mov
cmp
push
iret
dec
jbe
sbb
add
jno
dec
aad
adc
lcall
xchg
ja
test
sbb
jmp
imul
pop
rcrb
add
scas
mov
adc
test
jno
pop
pop
and
in
jecxz
sub
inc
lret
pop
push
out
aam
cld
add
sbb
movsl
popa
fisttpll
movsb
insb
test
and
cmp
ss
cmp
push
add
add
cmpsb
ljmp
insl
jne
icebp
xchg
inc
xor
cmp
mov
xchg
lea
xlat
or
pop
and
ret
xor
and
leave
sub
mov
das
sti
add
push
xchg
into
rcl
or
fmull
pushf
and
stos
test
push
dec
and
lods
dec
xor
lods
int
mov
mov
leave
xor
jle
push
js
sarb
push
in
lea
pop
or
sub
test
dec
add
or
pop
xor
pop
and
push
add
jecxz
test
sar
and
lea
movsl
js
test
cmpsl
xchg
rcrb
psllw
pop
xor
xchg
data16
lock
mov
inc
call
cld
push
push
packssdw
aam
inc
in
andl
xor
jmp
jns
hlt
cwtl
add
shl
aad
mov
repz
loope
dec
je
and
shrl
sbb
inc
inc
jp
test
iret
jle
out
mov
or
xchg
and
ljmp
add
mov
dec
movsb
repnz
scas
push
addr16
pop
fcompl
adc
leave
mov
mov
push
or
mov
mov
xchg
lahf
in
push
push
push
and
mov
xchg
cli
xlat
inc
jne
test
scas
loopne
sbb
notl
mov
or
xchg
fwait
and
mov
lcall
imul
jo
jae
jecxz
inc
add
ret
cmpsl
faddl
lock
arpl
pop
xchg
add
inc
in
out
sub
dec
add
fsts
push
dec
xlat
sbb
in
mov
mov
xchg
add
xor
mov
test
mov
push
aam
dec
icebp
orl
mov
jmp
dec
loop
cmp
jg
cli
jg
mov
add
jmp
dec
and
outsb
andl
jecxz
aas
push
fmuls
sbb
sub
jne
fldt
aaa
jns
mov
push
and
and
mov
hlt
pop
push
bound
outsb
mov
das
sti
enter
inc
mov
lret
test
out
mov
adc
fs
sub
jae
test
pop
lcall
andb
int3
cmp
adc
shrl
fwait
mov
sbb
jge,pn
out
push
aas
sti
inc
js
add
inc
inc
flds
xor
out
mov
adc
mov
rolb
push
cmp
xor
push
jb
aaa
scas
jb
adc
xor
dec
jbe
adc
adc
mov
sbb
push
inc
or
or
pop
aad
test
jns
push
push
out
xchg
cmc
dec
inc
out
add
sbb
push
pop
push
in
mov
push
sbb
lcall
out
sarb
outsb
push
mov
push
pop
sub
sbb
pop
mov
fnsave
sbb
das
lods
cld
or
sbb
test
pop
xchg
or
iret
inc
push
call
jecxz
adc
add
cmp
inc
xchg
mov
sub
testl
addr16
adc
push
add
das
pop
std
cmc
sub
jecxz
sub
pushl
dec
mov
xchg
or
mov
ficoml
int
mov
mov
rcl
push
loopne
or
sub
xchg
in
mov
leave
mov
cltd
pop
lea
ret
sti
nop
push
addl
int3
popf
xchg
arpl
dec
pop
pop
mov
push
sbb
out
and
cmp
scas
push
test
inc
arpl
xor
mov
repz
icebp
je
jns
sbb
ret
repnz
xchg
adc
mov
or
jmp
mov
fnstsw
pop
xchg
add
mov
hlt
inc
mov
jl
sub
mov
dec
das
or
aaa
iret
adc
cli
leave
mov
sub
push
push
or
fcmovnb
sahf
mov
mov
mov
std
sbb
inc
mov
mov
mov
or
dec
or
cltd
test
cmp
jb
sbb
stos
cli
aaa
repnz
test
cmp
lcall
push
pop
pop
xorb
push
inc
mov
xor
iret
mov
mov
jl
adc
cmp
nop
aaa
jo
clc
jle
and
mov
pop
dec
xchg
cld
addr16
push
push
xchg
ret
dec
in
lods
fcompl
loope
mov
lahf
dec
shlb
pop
push
adc
sti
mov
mov
cmpsl
ror
fbstp
pop
pop
aam
or
cld
mov
jle
movsb
mov
mov
pop
loopne
push
adc
xor
jo
inc
mov
test
jle
out
in
pop
addr16
fdivs
arpl
mov
mov
lcall
add
shrb
popa
ret
sbb
fwait
jae
mov
jb
mov
xorb
jecxz
sahf
fcmovnbe
addr16
mov
stos
and
add
scas
negl
push
loopne
fwait
loope
and
jne
cmpsl
sbb
std
mov
in
jae
scas
insb
sub
in
clc
sub
and
ja
stc
lahf
arpl
shll
arpl
aaa
aaa
sub
fwait
repnz
lret
mov
dec
mov
push
ret
sbb
lock
test
andb
stos
test
popf
arpl
cli
dec
sbb
dec
adc
pop
aad
into
ss
jecxz
test
or
pop
dec
dec
pop
fcoml
xchg
addr16
xor
sub
dec
sub
pusha
add
push
shll
pop
fbld
mov
call
mov
xchg
mov
into
out
repnz
shlb
jecxz
adc
jns
daa
pop
aas
test
imul
xchg
mulb
push
mov
shll
xchg
or
mov
imul
mov
hlt
push
mov
or
lock
xchg
in
mov
xchg
hlt
movsb
or
lds
mov
mov
pop
lahf
mov
push
or
sub
push
cli
cmp
out
loope
ss
or
add
mov
mov
cmp
push
inc
repz
imul
dec
sbb
mov
dec
or
daa
push
dec
add
xchg
mov
imul
pop
pop
dec
movsl
rolb
mov
cld
hlt
mov
call
ds
loop
push
call
dec
lds
push
inc
lea
insb
cmp
leave
mov
lret
inc
cmp
pop
lea
push
or
sbb
sub
adc
inc
test
popa
bound
pop
pop
addr16
push
mov
cmp
xor
hlt
repz
push
dec
push
sahf
inc
rol
push
cwtl
nop
call
mov
sub
xchg
mov
push
fmul
insb
mov
push
xor
pop
mov
adc
scas
and
adc
sar
stc
lock
pusha
and
stos
bound
sti
in
push
aas
and
adc
inc
sbb
lds
incb
adc
cvtps2pi
nop
dec
loopne
cld
pop
cmpsb
jg
sbb
xchg
adc
aam
shlb
and
imulb
movl
inc
sub
sbb
xchg
jb
pop
adc
dec
cmp
adc
xchg
push
insl
mov
adc
inc
add
inc
aaa
jnp
fadds
test
sub
jg
iret
mov
add
push
pop
fs
ret
adc
cmp
xchg
mov
add
outsb
cmpsl
gs
fs
fidivrs
adc
into
pop
cli
gs
jg
ja
fnstsw
xor
sbb
add
mov
sub
fcomi
rcr
sub
mov
and
dec
out
cld
movsb
mov
inc
test
outsb
lods
push
mov
and
sub
je
shlb
cmp
push
dec
xchg
jbe
jecxz
xchg
sti
movsb
add
lahf
mov
shl
jno
mov
push
aas
test
fstpt
rcr
rcll
or
pop
push
data16
push
xchg
jp
int3
xor
bound
push
mov
add
pushl
xor
flds
cwtl
mov
push
dec
add
ret
fwait
test
inc
xchg
stc
aaa
divl
cwtl
or
loopew
add
pop
adc
pop
lods
push
jne
icebp
sbb
push
mov
inc
sbb
andb
xchg
fsub
pop
call
rcll
mov
daa
sbb
and
and
push
dec
xor
adc
inc
mov
cli
enter
pop
cmp
popf
cmp
iret
xchg
not
ljmp
sbb
or
pop
xor
pop
jg
push
inc
daa
lods
jns
xor
test
sub
enter
cmc
mov
icebp
call
int3
cs
pop
jno
call
mov
xchg
daa
imul
mov
mov
fimuls
push
jo
mov
jle
fstps
out
inc
enter
in
xor
or
xchg
xchg
mov
inc
dec
pusha
fimuls
mov
mov
mov
leave
adc
cs
dec
rcrl
dec
ja
out
cmp
cwtl
mov
xor
repz
dec
cmpsl
push
jp
in
sarl
mov
xchg
jbe,pn
mov
inc
xlat
sbb
rcll
hlt
addr16
popl
jge
xor
mov
jp
and
mov
imul
push
nop
faddl
nop
adc
loop
xchg
jo
cld
fwait
and
mov
jns
mov
jne
xchg
test
pop
mov
pushl
or
inc
adc
imul
aaa
xor
dec
fwait
lods
popf
sar
mov
mov
push
add
repz
cmpsb
mov
popa
fnstsw
inc
mov
inc
decb
icebp
sbb
mov
mov
in
test
sbb
loop
fwait
cmp
clc
adc
ss
or
mov
rorb
ffreep
sarb
fs
stos
or
ret
imul
mov
fcomps
push
jecxz
cwtl
or
scas
adcb
aam
mov
push
xchg
lods
out
aas
push
or
ss
mov
jno
mov
fisttps
clc
mov
aam
and
and
dec
sti
mov
xchg
mov
sbb
xor
push
jnp
cli
dec
sub
push
mov
pop
lods
jae
bound
lea
icebp
lds
lods
aam
rcpss
test
lcall
mov
cmc
add
mov
out
dec
xchg
adc
icebp
ror
dec
fcmovnb
int
xchg
mov
out
arpl
add
adc
gs
mov
shlb
adc
fildll
pop
orl
imul
dec
rcrb
hlt
mov
add
mov
shll
jno
inc
aaa
xchg
sahf
shll
add
mov
add
or
or
jne
sub
inc
lock
push
cmp
jae
idiv
sbb
dec
stc
jbe
shlb
adc
mov
mov
rcrl
pushf
lea
dec
push
mov
adc
jecxz
das
xor
fdivs
fucomp
jle
out
addr16
lods
test
or
test
sbb
clc
mov
nop
test
aad
sbb
xchg
push
pop
cmc
adc
leave
loopne
lea
cmp
cmc
lods
dec
inc
in
and
jle
xchg
fldcw
sti
sub
daa
imul
shll
loope
mov
or
cmpsb
in
ja
mov
fmuls
ljmp
js
cmp
cmp
adc
imul
push
loope
rclb
push
fldl
pop
or
int
push
sarl
sub
sar
mov
jo
dec
out
fdivs
outsb
aas
in
sbb
out
mov
add
out
ljmp
pop
pushf
mov
lret
clc
fwait
scas
test
in
inc
insl
test
xchg
es
dec
cmp
and
aaa
xchg
out
adc
notl
sbb
adc
rol
jg
cmp
push
mov
shl
popa
mov
adc
and
mov
stc
add
jb
test
mov
lcall
sub
pxor
jne
inc
adc
mov
fnstsw
in
or
mov
push
sahf
cmp
jae
adc
sbbl
pop
sbb
and
jnp
aam
or
cmpsl
or
adc
or
popa
mov
popf
lret
mov
xchg
adc
clc
orl
mov
lret
xchg
shlb
push
imul
jp
sbb
sahf
js
push
aam
sub
dec
jmp
cmpsb
out
out
hlt
jno
lods
mov
out
adc
and
cmp
or
nop
hlt
push
xchg
iret
push
idiv
cmpsb
mov
jg
push
push
inc
mov
divb
pop
lahf
cltd
clc
sub
aaa
int
in
inc
pop
cmp
out
xor
dec
cmp
xchg
xor
mov
ljmp
cmp
mov
push
repz
mov
pop
cmp
ret
je
sbb
cmp
mov
adc
or
sbb
pop
test
inc
in
int
inc
xlat
mov
mov
jle
je
jo
insb
xchg
jne
nop
fimuls
loopne
cli
cmc
and
fucomi
imul
mov
repz
sub
jnp
movsl
xorb
pop
scas
push
rcll
andl
cmpsb
clc
fcom
outsl
xchg
inc
sub
and
xchg
push
std
call
mov
pop
ret
jle
aam
dec
jmp
adc
dec
add
stc
dec
dec
mov
inc
add
imul
pop
cwtl
faddl
pop
mov
js
lea
mov
repnz
or
loopne
fs
adc
ss
loopne
out
addr16
call
jno
xchg
int3
push
inc
add
stos
and
mov
mov
or
pop
aam
cmpsb
ret
sahf
mov
js
clc
xor
loopne
adc
mov
mov
shrb
in
popa
stc
ds
jp
ret
push
into
cmp
and
shlb
test
push
lea
adc
jb
push
js
adc
sbb
mov
pop
mov
shlb
push
xchg
icebp
mov
lcall
fisttpll
xchg
sub
adc
sbb
xchg
stc
sti
cmp
cmpsl
pushf
mov
sbbb
mov
add
mov
xor
xlat
add
rol
fucomp
and
dec
push
mov
and
jecxz
cwtl
lods
stos
lds
sbb
push
inc
xchg
add
xor
cs
push
xchg
repnz
lret
adc
sub
arpl
outsl
andl
test
pusha
aaa
aad
lret
fs
push
negl
xchg
cltd
dec
mov
sbb
in
repz
std
jmp
jns
ficoml
cmp
inc
fsts
cwtl
jns
xor
fists
and
nop
inc
sysenter
push
jno
push
mov
adc
pusha
es
roll
xchg
xor
je
addr16
xchg
mov
iret
cld
out
nop
push
imul
mov
adc
scas
mov
out
hlt
imulb
popa
stc
in
jle
adc
jp
sbb
loop
loope
pop
es
outsb
pop
push
inc
in
and
cld
and
adc
pusha
mov
fiadds
lahf
inc
es
and
push
dec
mov
jl
xchg
pop
mov
dec
push
inc
or
or
das
push
bound
pop
int
sub
sbb
lds
cmp
and
cmp
xor
pop
pop
clc
and
sub
clc
add
es
rcrl
and
sbb
jp
pushf
add
pop
sub
nop
in
in
dec
pop
ffreep
add
mov
fists
cmp
adc
dec
das
jne
pop
xchg
or
andl
adc
iret
and
push
or
lret
lcall
xchg
push
cmp
popf
pop
xchg
inc
or
mov
ret
xorb
push
sbbb
subb
sub
lret
xchg
mov
subb
ljmp
xchg
loopne
push
push
lods
inc
fnstsw
mov
mov
stos
and
or
sarl
aas
or
lahf
sub
xor
push
repz
test
pop
popa
mov
notl
push
lock
jns
mov
adc
mov
jle
dec
rclb
push
jge
nop
add
lods
and
ret
rcrb
scas
lret
cld
jmp
sub
add
jbe
enter
jno
loop
xor
scas
pop
jae
insl
out
dec
ss
or
insb
cli
xor
in
arpl
and
imul
pop
sub
cmc
sbb
clc
pop
scas
in
jg
dec
sub
iret
sarb
mov
cs
jb
addb
mov
lods
icebp
pushf
pop
push
xchg
divb
push
mov
mov
stc
mov
xor
add
dec
jne
add
dec
out
sub
xchg
or
lcall
xor
sbb
sahf
mov
daa
icebp
mov
xchg
in
sbb
adc
sbb
aaa
cmp
aad
or
add
push
xor
js
cmp
and
or
neg
fmulp
mov
adc
push
push
test
jp
xor
aam
mov
imul
jne
std
sbb
dec
push
lret
inc
pushf
ss
test
mov
out
or
std
lods
inc
es
xchg
sub
addr16
dec
pop
es
scas
setle
addl
iret
adc
jb
les
push
pop
xor
int3
iret
cmp
dec
mov
pop
cmp
aad
daa
cmp
bound
js
dec
adc
adc
mov
mov
push
mov
test
add
jp
jnp
push
lahf
pop
lds
dec
inc
jecxz
pop
and
stos
lret
nop
push
outsb
sbb
test
aam
cmpsb
aam
outsb
jno
daa
mov
pop
adc
jmp
sbb
sbb
xchg
and
lods
mov
loop
xor
das
repz
test
mov
pushl
mov
pop
push
mov
fbld
je
mov
pushl
repz
popf
and
mov
je
into
mov
xchg
sbb
fsubr
sub
scas
and
jl
mov
lret
les
mov
sar
inc
jl
out
ret
daa
fwait
repnz
bound
imul
shrb
push
mov
lcall
lcall
shr
dec
pop
xchg
and
dec
jg
lods
frstor
sub
repnz
stc
and
jno
add
jl
adc
clc
pop
jge
and
mov
test
jg
movb
sbb
inc
roll
sbb
lahf
sub
pusha
pop
je
jns
dec
adc
jmp
sar
cmp
and
pop
cld
mov
ret
jns
movsb
outsb
dec
inc
jo
push
cmp
mov
lea
push
xchg
sbbb
rcll
ljmp
jb
ja
lret
sbb
out
push
movsb
jg
in
adc
lret
push
scas
outsl
daa
cmpsl
xchg
stc
and
out
daa
or
bt
pop
and
fbld
xchg
lret
sub
add
int3
dec
scas
pop
rolb
push
ret
rolb
aas
out
add
dec
jae
mov
mov
dec
mov
mov
out
xor
insl
incb
daa
inc
cmp
or
scas
test
int3
imul
inc
cmp
out
lea
xor
cmp
std
cmp
or
mov
mov
imul
test
xchg
xadd
mov
sub
pop
fbstp
shll
or
and
adc
lds
xor
lods
sbb
sub
adc
scas
sub
and
out
mov
pop
jle
push
xchg
es
dec
sub
lods
jmp
sbb
jle
mov
mov
and
pusha
xor
js
sti
xor
pop
or
push
in
testb
dec
mov
mull
stc
mov
add
inc
rorl
add
subb
jg
cltd
sbb
mov
mov
push
lret
movb
int
pop
fcompp
jo
xor
aam
pop
out
mov
shlb
lahf
xchg
mov
adc
lret
in
lahf
stos
pop
lcall
in
outsl
and
outsb
cmc
ficoml
enter
cmp
xchg
jle
out
loope
push
imul
cmc
test
mov
fneni(8087
and
mov
push
or
jnp
inc
scas
push
cld
inc
clc
fisttpll
int
outsl
pop
lods
xchg
lods
sbb
or
andl
lret
loop
ljmp
dec
push
enter
push
adcl
aas
dec
push
lcall
pop
loope
aas
int3
das
cmp
jp
sub
sub
out
add
or
jb
in
adc
imul
cmpb
jp
lret
outsl
out
ret
pop
sub
mov
jg
inc
clc
push
fmulp
pop
dec
jbe
xchg
add
or
push
jnp
cli
movb
test
cli
gs
imul
adc
loopne
adcb
arpl
ror
or
dec
xchg
pop
adc
aam
mov
sbbb
jae
jns
call
rclb
sub
popf
in
xor
dec
push
test
out
leave
or
aas
pop
mov
inc
daa
lea
call
ret
loop
jg
lods
fwait
jns
ret
mov
fwait
xchg
sub
xor
cmp
and
mov
push
aas
sub
jae
stos
inc
mov
push
sar
div
push
ss
add
imul
int
mov
mov
fldenv
push
inc
imul
lods
pop
pop
hlt
fs
pop
mov
mov
test
imull
lods
cmp
pop
add
push
sbb
cld
das
sbb
mov
inc
mov
push
aas
je
leave
aad
sub
lds
lock
add
inc
je
das
pop
mov
lret
sub
out
das
adc
jmp
test
jge
aas
cmp
rol
dec
mov
clc
add
sub
cmpsl
loope
sbb
xchg
and
shlb
pop
outsb
popl
jnp
adc
cmp
push
add
push
shlb
into
xchg
out
sub
out
rcll
cmpsl
xchg
mov
sub
int3
testb
enter
jnp
jg
cmpsl
lcall
mov
mov
adc
repz
stc
or
pusha
cs
mov
pop
enter
sti
or
mov
or
test
mov
pop
push
addr16
dec
jle
mov
jbe
pop
adc
inc
mov
outsb
sbb
cmp
add
and
or
push
daa
jge
arpl
aad
dec
rcrl
scas
addr16
ljmpw
test
sub
cmpsl
pushf
adc
pop
call
pusha
scas
jl
popa
clc
xchg
add
add
cwtl
mov
inc
sti
loopne
imul
or
or
xor
test
pop
insl
jbe
add
jmp
inc
stos
push
or
test
in
sti
sbb
mov
mov
mov
lea
loope
icebp
movsb
pop
and
nop
lret
outsl
xchg
into
ljmp
out
dec
adc
mov
dec
jb
xchg
jmp
popa
stos
test
mov
sbb
cmp
test
sub
mov
push
xchg
shrb
or
pushf
add
xor
push
dec
mov
xor
mov
aas
xchg
pop
movsl
xlat
shll
sub
and
mov
xchg
sub
inc
sub
enter
je
pop
push
sbb
inc
sti
mov
inc
fcompl
xor
add
cld
imulb
inc
xlat
js
popf
xchg
and
mov
or
fdiv
in
adc
xchg
push
push
rcrb
and
xchg
inc
pusha
dec
insb
adc
fcoms
adc
movsb
je
sub
and
push
jno
fcomps
inc
mov
rorb
aaa
dec
pop
addl
xor
xchg
movsb
pop
sub
sbb
lahf
call
rcrl
sub
dec
sti
out
xor
test
xchg
xchg
lods
mov
ret
insl
outsb
mov
cli
push
ljmp
inc
aas
das
incl
repnz
mov
push
sarb
repz
repnz
dec
mov
dec
iret
mov
dec
jl
into
popf
ss
and
jp
or
faddl
lods
popf
mov
cmp
xchg
mov
insb
cmpb
xchg
jbe
add
out
push
ss
add
fildll
adc
dec
test
xor
push
test
mov
sbb
cmp
js
mov
cmpsl
jp
insb
sarb
adc
enter
repz
ljmp
push
mov
inc
es
repnz
out
add
and
cmp
xchg
and
icebp
dec
fwait
fwait
mov
lods
popl
loop
push
mov
loope
int3
xor
stc
add
pusha
dec
sbb
repnz
push
mov
adc
repnz
pop
jle
dec
stos
loope
push
or
imul
add
cltd
out
push
add
sub
gs
or
pop
cmp
pop
add
and
and
push
inc
pop
rcr
pop
xchg
sub
add
bound
cmp
fwait
mov
jp
adc
dec
sbb
push
inc
mov
and
mov
jb
mov
cmpsb
shrl
pop
cmpsl
cli
push
ret
push
in
and
inc
mov
stos
pop
mov
mov
in
jns
push
push
lods
stc
or
cwtl
ficoms
mov
or
xlat
mov
and
leave
in
push
push
and
mov
push
and
pop
mov
add
dec
mov
sbb
xor
fstps
pusha
dec
pop
sub
ljmp
or
scas
add
inc
sub
adc
aad
scas
push
out
test
shl
pop
pop
cltd
add
cli
mov
cmp
mov
jo
push
ret
lock
add
xor
lret
ljmp
push
nop
dec
push
mov
mov
testb
inc
sar
jp
andb
mov
xchg
arpl
push
mov
and
adc
frstor
jmp
dec
mov
arpl
pop
xor
jae
and
xchg
or
test
dec
es
bswap
mov
cmpsl
fwait
jecxz
lcall
pop
loope
or
dec
jnp
jecxz
push
mov
aaa
adc
cmp
inc
push
movsb
push
clc
jnp
dec
pop
xlat
sbb
pop
cmp
in
cmp
jge
or
adc
pop
xor
int
ss
stc
negl
push
test
mov
clc
hlt
add
pop
xchg
cld
mov
mov
xchg
scas
mov
andl
dec
arpl
and
or
inc
les
pop
xor
loop
sbb
mov
mov
mov
cld
or
nop
out
xchg
js
cmp
shrl
lret
mov
mov
pop
or
inc
or
cmp
lods
add
adc
mov
imull
adcl
mov
mov
daa
repnz
arpl
inc
push
mov
mov
dec
cmp
pop
inc
pop
mov
push
adc
jl
cmp
outsb
iret
pop
mov
ficoms
out
lods
fwait
add
xchg
cmc
or
roll
jo
inc
adc
pusha
and
inc
dec
or
push
add
mov
jge
testb
mov
inc
sub
adc
js
cwtl
push
lock
fisubrs
movsl
jle
and
imul
cwtl
add
sbb
xchg
call
fnstsw
stos
sti
adc
ljmp
push
jmp
imulb
xor
add
add
or
cmovno
and
mov
in
repz
in
sti
cli
sbbl
cmp
imul
test
and
sub
lret
dec
jnp
xor
hlt
sbb
mov
xor
in
inc
je
mov
inc
insb
push
jo
push
or
test
pushf
mov
movsl
pop
imul
pop
sub
add
insl
xor
xchg
inc
fldl
adc
sub
mov
mov
hlt
js
jge
addl
in
popa
ret
cmp
xor
pop
sahf
adc
pop
dec
push
cmp
cwtl
cmp
ja
and
mov
ja
rorb
adc
stc
xchg
imul
dec
popa
subb
mov
adc
push
sub
cs
jge
pushl
xcrypt-ctr
cmpsl
popf
pop
mov
lock
repnz
cmpsb
enter
xchg
adc
in
add
ret
outsl
mov
mov
andl
xor
testb
in
or
adc
in
xor
push
nop
cmpb
jp
xchg
mov
lea
mov
dec
movsl
xor
fstpt
cmp
push
sub
lods
xorb
hlt
jnp
add
cmp
xor
imul
jne
mov
sub
call
in
xchg
sbb
sub
aad
pushf
mov
inc
ror
imul
lret
mov
int3
les
xor
sub
or
cs
sbb
mov
mov
or
cmpsb
adc
pop
adc
dec
xchg
inc
add
jl
lock
jmp
adc
pushf
mov
mov
cmp
cmp
test
push
xchg
js
jb
out
lods
ja
mul
lea
loop
shll
dec
in
test
loopne
mov
rol
push
or
jmp
jns
push
xchg
dec
cs
xor
push
mov
insb
mov
xchg
xchg
and
add
xchg
mov
movl
xrelease
aas
pushf
stos
ret
xchg
add
pop
sti
inc
and
addr16
fsubl
in
mov
lods
adc
lar
xor
inc
pop
cs
out
cmp
js
push
lcall
es
shlb
sbb
jb
pop
xchg
out
bswap
add
lods
dec
loope
das
sub
pop
pop
outsl
stc
ror
sti
jo
rcrb
mov
dec
outsb
dec
xchg
mov
cmp
outsl
jge
adc
cmp
fsubl
fistl
xor
loope
mov
stos
bound
loopne
xchg
lahf
fs
mov
or
filds
insl
push
movsl
pop
mov
and
mov
mov
pop
into
bound
loop
xchg
sbb
push
jmp
nop
xchg
orb
mov
jb
ja
push
pop
nop
mov
lcall
cmp
mov
lods
push
xor
aas
pushf
push
fcomps
insl
mov
out
push
out
lds
cmp
lods
or
or
jl
sub
jle
lahf
add
jbe
xlat
adc
out
mov
popf
ds
sahf
lret
push
or
movsb
les
pop
sbb
fldenv
pop
stos
aaa
mov
cmpsb
xor
add
addl
mov
js
jg
inc
sub
test
scas
sub
mov
outsl
sub
sbb
or
pop
fs
push
cmp
addr16
xchg
scas
lcall
jmp
mov
mov
mov
lock
xchg
movsb
lods
scas
cmpsl
push
pop
jp
sub
adc
out
fnstcw
cmp
enter
sub
push
pop
mov
add
lret
xorb
mov
dec
sbb
sub
rcll
popf
sti
add
into
add
sub
sbb
adc
mov
xchg
dec
mov
loope
sti
test
and
jb
mov
popa
sbb
call
jle
sub
es
jp
cld
lret
out
bnd
xchg
add
cmp
test
je
sbb
pusha
out
cmp
or
and
cmp
faddl
push
pop
rcll
dec
sahf
pop
ss
sub
cwtl
mov
inc
repnz
and
xor
lock
lret
xchg
cltd
sub
pop
inc
mov
inc
adc
adcl
sub
nop
dec
iret
adc
jns
push
movsl
cmp
aad
fildl
push
clc
add
pusha
enter
adc
scas
push
mov
pusha
add
jo
fldenv
bts
mov
cmp
fisubrs
ja
xchg
sub
rorb
outsl
fcomi
add
inc
cwtl
pop
and
inc
hlt
jnp
mov
dec
divl
cmp
mov
pop
and
jnp
mov
lfs
orl
jbe
scas
dec
cltd
aaa
int3
dec
shll
shlb
movsl
add
in
mov
rcrb
sahf
push
andb
dec
pusha
xchg
fsubrs
xchg
jl
sbb
mov
jge
mov
test
outsb
jl
mov
ja
mov
pop
push
and
xor
xchg
mov
outsb
or
ds
cmpsl
cmp
xor
in
push
ret
or
mov
dec
stos
jp
sar
nop
fcomps
icebp
dec
lahf
sbb
dec
sub
lods
cmp
ja
movsl
dec
cs
shrl
lods
jle
pop
negl
out
pusha
adc
cmp
mov
das
xchg
cmp
xchg
xor
mov
jle
cmp
inc
cmc
jae
xchg
jo
add
and
or
mov
sti
fs
mov
xor
push
sbb
xchg
pop
negl
cwtl
ret
gs
and
jp
xor
adc
aad
fildll
cmp
fs
imul
insb
jno
cmc
and
shll
xor
xlat
mov
cmc
imul
cmp
push
gs
sbb
mov
xlat
lret
ret
ret
out
clc
cltd
cmpsb
cmp
inc
dec
jno
jmp
nop
pop
aam
push
add
fnsave
out
mov
iret
fildll
adcb
lea
in
movsb
cmp
mov
lcall
lods
cld
ret
popf
repnz
fdivrs
push
lret
cmpsl
in
sub
ljmp
stos
and
faddl
mov
jle
mov
cli
inc
xchg
pop
mov
je
in
push
or
dec
int3
sbb
sbb
in
add
xor
xchg
adc
cwtl
dec
out
aaa
repnz
loopne
cmp
pop
mov
push
dec
repnz
jl
dec
cld
pop
adc
xor
lock
dec
or
out
pop
negl
jne
xor
das
pop
sbb
sbb
fucomi
loopne
cmp
xchg
add
je
lock
mov
ljmp
movsl
pushf
push
sbb
clc
je
mov
sub
lret
mulb
add
and
xchg
mov
leave
andl
pop
roll
sti
insb
lcall
mov
inc
mov
iret
nop
daa
mov
pop
int
and
sub
rclb
into
sbb
push
lret
mov
imul
adc
scas
ret
cwtl
xchg
pop
rolb
cmp
ja
mov
adc
loope
ret
ret
arpl
jg
mov
fisttpll
mov
lahf
pop
in
hlt
xor
xchg
push
bound
pop
mov
mov
negl
bound
add
adc
ja
cmp
mov
pushf
jo
cmpsl
inc
loop
sub
dec
mov
mov
fmull
cmpsb
jae
dec
dec
jo
inc
mov
movsb
cli
mov
shll
push
push
ds
xchg
std
inc
dec
fwait
and
and
mov
pop
mov
inc
loope
cmp
cltd
mov
mov
sbb
add
scas
lahf
nop
test
xor
dec
lret
ds
jo
leave
mov
sbb
test
fistps
in
lods
daa
test
and
add
adc
clc
xchg
test
jo
sub
and
test
aaa
movsl
aaa
mov
ror
loopne
loopne
lret
sub
clc
rcrb
push
xor
fwait
in
fisttpll
dec
xor
jle
push
mov
cmp
dec
ss
or
xor
cmpb
and
andl
ljmp
and
loope
xchg
push
pop
pop
jp
jne
aas
ficompl
dec
fldenv
arpl
inc
or
stc
popa
adc
jle
sub
clc
paddw
inc
and
mov
jmp
dec
sbb
xchg
sarl
nop
ds
cli
cmpb
outsl
xor
inc
or
cmp
arpl
inc
sbb
imul
and
sub
xorl
imulb
out
or
imul
das
addr16
clc
and
in
cmp
aam
inc
or
hlt
nop
xlat
in
call
mov
inc
repnz
mov
loopne
jno
sub
test
scas
pop
pop
pop
lahf
bswap
dec
jle
int
call
and
aad
xor
or
cmpsb
lds
cmp
cs
mov
in
xchg
pop
push
ss
fisubl
leave
fcompl
mov
mov
jno
ret
mov
mov
sub
push
adc
or
std
lret
out
cld
push
adc
sbb
jbe
xor
or
arpl
and
ret
cli
xchg
lret
push
and
stc
pop
ss
cli
sub
rolb
jbe
jno
add
pop
das
xor
fiaddl
cltd
test
dec
fistpl
lcall
mov
cmp
and
dec
gs
dec
xchg
mov
stos
adcl
or
loopne
cs
adc
fldt
jns
insb
scas
out
push
or
popw
std
add
push
jg
add
add
outsb
es
pop
das
ss
cld
popa
jmp
push
cmp
imul
insb
push
pop
pop
ds
push
aas
rol
stc
pop
inc
test
imull
cwtl
pop
inc
cmp
xchg
xor
lret
fisubrl
test
pop
mov
xor
int3
rol
dec
push
pop
pop
pop
xor
lret
and
mov
je
pushw
insl
mov
daa
pop
lahf
push
ret
jp
mov
aas
ljmp
in
ffreep
pop
push
mov
out
mov
adc
jne
mov
clc
shll
mov
xchg
in
shl
ds
and
repz
lret
aaa
inc
cmp
xor
sub
dec
cmp
call
jp
mov
call
dec
mov
xchg
imul
mov
call
jge
in
jp
or
test
or
sub
jp
xchg
fsubrs
cld
test
mov
and
mov
mov
icebp
jecxz
test
in
rorb
xchg
iret
push
or
icebp
icebp
sbb
and
push
jg
adc
outsb
gs
int
cmp
mov
int
sub
pop
or
fs
repnz
fcomi
lds
or
mov
fidivrs
nop
out
adc
imul
adc
sahf
inc
in
scas
add
mov
js
cmpsl
jns
out
mov
pusha
lea
daa
mov
mov
outsb
stos
sbb
or
adc
mov
aam
insl
dec
jmp
push
rclb
mov
outsb
insl
cmp
jge
leave
fwait
test
add
test
and
and
aad
ja
fcmove
ja
mov
es
add
jge
push
fcompl
jnp
add
mov
mov
pusha
jo
jne
mov
pop
mov
leave
or
inc
xchg
cmp
loopne
scas
es
test
mov
sbb
adc
test
pop
repnz
mov
jne
and
rorb
xorps
loope
shll
xchg
inc
or
push
fisttpl
push
add
ret
mov
add
ds
mov
sbb
ficoml
mov
mov
add
bound
paddd
xor
enter
flds
test
call
fldenv
mov
fcompl
jecxz
mov
xchg
in
lods
mov
lea
push
mov
pop
aad
inc
inc
rolb
cmp
pop
xchg
in
sarl
clc
cmc
iret
in
outsb
out
loope
mov
test
loopne
push
inc
jne
sbb
pop
daa
sub
addr16
pop
add
dec
call
cltd
jne
sub
and
pop
dec
adc
sub
lods
xchg
sbb
xchg
sub
add
add
cmp
mov
nop
mov
mov
pop
dec
sbb
mov
jl
movsb
mov
ret
aam
cmp
int3
add
mov
sbb
xor
daa
jb
std
mov
sub
cmp
pop
xchg
out
ljmp
in
jbe
and
add
mov
jns
hlt
pop
inc
push
in
sub
fwait
and
mov
jecxz
repz
loop
in
into
int3
rcrl
mov
dec
push
scas
xor
sti
aaa
dec
jnp
sbb
mov
add
sub
sub
xchg
mov
mov
test
mov
xor
push
lds
out
cwtl
stos
movsb
push
dec
std
mov
mov
mov
ja
mov
inc
mov
inc
mov
add
test
mov
xchg
xchg
xchg
shlb
xchg
fcmovb
rorl
das
lock
push
push
inc
adc
lret
push
push
ret
mov
mov
test
gs
mov
loope
adc
ja
cmpsl
jne
jmp
out
adc
js
fisubrl
daa
int
dec
push
js
push
dec
mov
and
sub
xchg
popf
mov
xor
test
add
aam
mov
sub
jle
aam
sbb
hlt
aas
push
call
test
test
outsb
jne
pop
push
stc
test
scas
faddl
or
leave
es
jno
jg
popf
mov
ja
in
xchg
mov
mov
fbld
dec
fisubrl
xchg
icebp
cld
cmpsb
mov
ret
sub
bound
adc
cmp
pop
out
and
pushf
cltd
add
pop
mov
jo
adc
cmp
mov
push
sbb
xchg
sahf
mov
test
push
dec
or
pop
daa
pop
bound
dec
movsb
lods
sub
cmc
cmpsl
int
popf
cltd
pop
jl
cwtl
sti
int
inc
push
cmp
sub
sub
lcall
lret
lahf
sub
mov
inc
out
les
jno
add
ljmp
sub
shlb
and
inc
in
iret
test
cmpsl
aaa
outsb
mov
mov
inc
mov
mov
cld
sub
pop
fisttpll
push
out
jne
int
push
xor
cmp
int3
mov
daa
test
jb
mov
shrb
stc
or
cmp
dec
push
js
or
and
and
jp
scas
pop
daa
leave
iret
and
in
or
aam
xlat
out
jb
push
mov
push
test
outsl
pop
sub
mov
mov
mov
lret
fdivl
dec
movsb
fimuls
ds
inc
jno
inc
and
xchg
pop
popa
dec
add
addb
jno
stc
stos
ja
sub
mov
test
aaa
movsl
or
sbb
je
dec
cmp
adcb
clc
lahf
loop
mov
lods
xchg
xchg
sub
lods
adc
stos
fsub
jo
sub
in
stos
fs
fidivrs
adc
es
mov
mov
loope
repnz
movsl
popa
negb
mov
pop
test
xchg
sub
add
mulb
pop
test
addb
lret
sub
mov
xchg
les
in
mov
pop
pop
iret
add
loop
or
cltd
je
inc
and
lods
pop
sub
filds
and
mov
xchg
mov
stc
adc
jno
dec
loop
mov
aad
pop
mov
flds
dec
out
xchg
movsl
mov
sbb
fistl
imull
in
mov
xchg
rcr
cld
push
mov
mov
sbb
int3
dec
push
loope
shll
aaa
xchg
stos
shll
add
shll
pop
fnstenv
adc
nop
repz
cmp
rol
push
mov
je
and
push
xchg
repz
add
inc
adc
cmp
sbb
or
adc
push
sbb
inc
stos
fsubrl
or
ljmp
outsb
or
movb
imul
sbb
cwtl
roll
sti
jp
call
cmc
in
lret
rorb
jns
dec
enter
dec
sbb
or
jnp
gs
daa
imul
cltd
jmp
push
mov
aas
mov
cli
mov
push
mov
jno
mov
jns
or
addb
xchg
sarl
add
and
frstor
push
int3
xlat
and
mov
addl
mov
inc
dec
inc
imul
push
fdivrl
xchg
lea
cld
adc
imul
lret
xchg
and
bound
xchg
in
adc
dec
test
pop
pop
xchg
leave
scas
out
dec
mov
cwtl
mov
popa
or
lods
add
xchg
insb
mov
pop
je
je
jecxz
dec
and
mov
inc
lcall
sbb
test
mov
ret
xlat
sub
aaa
es
sahf
andb
and
jns
mov
sub
pop
jns
in
smsw
mov
adc
or
add
dec
or
adc
xchg
aas
pop
jb
and
pop
stos
scas
dec
leave
jg
les
pushf
stos
pop
mov
mov
mov
ss
ret
add
adc
mov
push
mov
or
cmp
scas
inc
mov
xor
in
sarl
call
in
jg
es
or
inc
data16
aas
adc
mov
leave
fstps
aas
sub
lea
std
sbb
mov
popa
fs
push
mov
mov
sbb
mull
aaa
mov
push
shlb
adc
adc
out
jl
mov
stos
out
mov
push
jbe
xor
mov
sbb
subb
dec
mov
dec
shlb
or
insl
adc
fildl
cmp
movsl
mov
mov
push
xchg
ficompl
sbb
mov
ljmp
popa
cmpsl
mov
fidivrs
imul
cmp
and
mov
dec
and
pop
notl
sbb
das
sahf
sbb
mov
icebp
xchg
das
and
push
adc
sub
sub
add
out
xor
add
in
mov
xchg
sbb
icebp
adc
mov
loope
inc
loope
mov
xchg
aad
add
jnp
adc
sub
jae
xchg
call
shrl
xor
inc
aaa
lods
xor
add
lret
int
adc
cmp
addl
call
lock
mov
mov
jmp
pop
mov
or
inc
repnz
lea
push
push
fdivrp
int3
outsl
cltd
mov
sahf
jecxz
aad
repnz
sub
mov
cmp
pop
mov
cld
scas
movsb
pusha
or
xchg
daa
xchg
addr16
ret
sbb
lods
in
test
pusha
sub
cmp
fwait
lock
repz
inc
lret
ficoms
lcall
insl
pop
jg
movl
mov
jg
call
pop
mov
pop
xchg
inc
xor
cwtl
xchg
mov
push
mov
pop
addr16
sub
test
lock
je
dec
mov
jg
jl
push
lret
mov
bnd
push
sub
mov
out
mov
aas
sar
sbb
arpl
cld
jb
mov
mov
lahf
lods
push
addr16
jmp
dec
test
andb
shll
mov
call
mov
jb
clc
gs
sahf
movb
stc
dec
movl
and
lcall
push
aaa
jne
ds
push
jnp
or
adc
in
push
daa
lcall
push
or
cwtl
mov
ret
jb
stos
pop
cmp
insb
adc
sbb
sub
inc
add
notb
std
loop
out
sti
pusha
push
je
xchg
insb
fisubs
jp
lods
aas
dec
leave
xor
inc
sbb
test
mov
or
sub
sahf
out
jecxz
dec
push
add
sub
pop
cmp
int
popa
jecxz
mov
xchg
mov
jle
dec
mov
xor
arpl
xlat
ljmp
and
dec
fiaddl
add
inc
add
popf
lds
add
adc
mov
dec
or
xlat
pop
jae
mov
dec
outsb
mov
jo
and
int3
dec
pop
inc
xchg
int3
mov
push
test
push
adc
ss
movsl
scas
inc
data16
or
scas
or
hlt
sarl
adc
push
add
xchg
or
hlt
loopne
cld
or
scas
lock
aas
mov
rcrl
xchg
dec
and
dec
push
push
sub
and
adc
jnp
sub
in
mov
inc
and
or
mov
xchg
cwtl
sbb
xchg
inc
notb
test
lcall
cmp
mov
xchg
and
jecxz
out
and
popa
fwait
xchg
aam
syscall
out
inc
and
and
push
in
enter
sub
insb
xor
pop
decb
or
sub
cmpsb
sbb
xor
fcomi
lods
pusha
mov
adc
pop
jb
out
mov
andl
jge
and
jl
aad
xchg
stos
insb
push
inc
lea
mov
ljmp
cmc
insb
in
cltd
je
xchg
pop
cmpl
cltd
and
bound
ret
adc
pop
cmp
je
mov
mov
sub
sub
pop
inc
popa
imul
sbb
mov
popf
mov
adc
shlb
or
aad
pop
jbe
and
sub
loopne
xor
sub
ret
lods
aam
lea
cmp
out
scas
jno
mov
call
fdivl
loopne
inc
mov
or
insl
insb
xchg
mov
and
pop
mov
setb
fdivs
mov
dec
mov
dec
mov
cwtl
adc
jne
popf
lea
jno
mov
jmp
dec
sub
and
mov
arpl
les
mov
popf
arpl
mov
out
aam
hlt
add
je
jg
in
and
mov
adcl
xchg
insb
in
add
xor
jg
fwait
jmp
inc
loope
inc
sub
inc
jle
mov
lea
and
push
pop
cli
inc
in
call
ljmp
lea
lock
movsb
fldt
inc
ljmp
inc
push
or
cmc
cmp
out
lret
xchg
outsb
pop
std
mov
ret
inc
sahf
add
cmpsl
test
test
fistpll
adc
pop
clc
hlt
fimull
mov
jbe
sahf
cmp
pop
rcrb
out
pop
cmc
push
cli
pop
mov
jmp
jne
xchg
pop
stos
add
dec
lds
xor
fldl
add
mov
shlb
jge
xchg
mov
add
lods
mov
cli
test
push
rcrb
loop
or
mov
add
mov
dec
icebp
pop
in
lods
mov
and
out
add
cmp
ret
imul
lods
sbb
fidivrl
repz
dec
xchg
cmpsl
addr16
mov
insl
cltd
or
or
jmp
es
mov
push
loop
in
and
bound
inc
out
or
jecxz
das
dec
repz
scas
mov
jge
lds
das
lods
ret
inc
in
push
xor
xor
sbb
mov
xor
sbb
test
mov
stos
jne
jp
add
push
xor
and
and
add
movsb
inc
jno
sbb
mov
je
jb
and
jle
jecxz
repnz
sbb
shrb
insb
mov
push
out
mul
sbb
sbb
cwtl
out
mov
mov
push
add
ds
sub
out
test
fisttpll
fidivs
lds
adc
mov
pop
jo
mov
push
inc
mov
addb
imul
imul
sbb
clc
inc
pop
lcall
hlt
nop
mov
gs
loopne
pop
inc
dec
or
pop
add
insl
lods
imul
xor
insb
ret
xchg
xor
jb
cmp
ljmp
lock
add
aas
int
cmp
mov
push
scas
inc
negb
xor
jp
mov
ljmp
push
enter
mov
leave
mov
scas
add
test
xchg
adc
fbld
mov
in
xor
scas
xchg
lcall
sub
sub
fstl
sub
aaa
xchg
dec
and
inc
xchg
xchg
push
lahf
inc
stc
scas
add
adcl
jl
mov
jns
adc
pop
jnp
ucomiss
xchg
xchg
sarl
inc
mov
and
and
lret
mov
nop
jo
cld
test
test
jbe
xor
pop
jg
mov
and
ret
ret
xlat
cmp
fs
insl
jns
and
sar
add
loop
add
xor
or
fs
cwtl
je
arpl
push
bound
daa
dec
repnz
pop
pop
clc
mov
lea
fcmovbe
outsl
jmp
pop
cmpsl
in
scas
cmp
enter
aaa
inc
or
mov
xor
inc
andb
pushf
dec
ss
sub
clc
lcall
sub
mov
inc
data16
data16
jg
inc
inc
daa
test
xor
es
js
pop
sarb
lods
fdivrl
xchg
mov
mov
mov
or
pop
ret
jno
jae
xor
sub
idivl
or
dec
adc
add
mov
aaa
cmp
mov
outsl
iret
dec
call
adc
mov
test
pop
xor
test
xchg
dec
mov
imul
je
cmp
les
mov
leave
sbb
lods
idivb
push
loope
call
aam
scas
add
cwtl
xchg
xor
jb
inc
inc
je
rol
xchg
add
push
mov
jecxz
jecxz
ja
jae
lahf
aam
dec
ljmp
adc
mov
jecxz
add
pushf
pop
mov
or
ljmp
js
shll
jmp
mov
repz
adc
fstpl
pop
inc
push
push
dec
sbb
es
mov
repnz
out
test
repz
dec
mov
mov
sub
daa
pop
jo
dec
jne
addr16
inc
sarb
inc
mov
sbb
js
sbb
or
and
dec
addr16
push
das
fldcw
scas
push
dec
into
sti
and
loopne
jbe
or
data16
add
adc
shrb
mov
sub
bound
inc
sub
push
sbb
adc
and
mov
rcrl
inc
shll
push
test
cwtl
xlat
push
ret
daa
adc
or
sub
outsl
mov
movsb
sti
loop
dec
je
pop
xchg
mov
jne
jg
or
push
sbb
fwait
add
ss
icebp
or
inc
add
xchg
dec
aaa
and
mov
mov
aam
ret
and
jmp
mov
fmull
mov
fcoms
out
scas
movsl
fmull
jl
and
inc
into
sub
stos
mov
and
xchg
pop
or
xlat
bound
inc
fmul
xor
xchg
add
mov
push
bound
repz
cwtl
mov
out
cmp
sti
testb
or
addr16
xor
cwtl
addr16
push
fcmovnbe
xchg
adc
mov
je
cmp
out
ficomps
test
es
xchg
pop
sarl
sub
xor
dec
fcoml
ret
dec
push
jge
packsswb
mov
repz
mov
ljmp
ja
sub
in
lcall
mov
out
cmp
pusha
pop
ret
cmp
adc
test
decb
pop
pop
jo
xor
push
jl
or
jge
fdiv
mov
daa
out
or
ds
pop
xchg
cltd
pop
jmp
lahf
sub
pop
fs
dec
jmp
push
sub
jmp
mov
jmp
sti
test
loop
rclb
cmp
ja
mov
pop
push
popf
js
sbb
test
stc
dec
push
mov
mov
xchg
sti
in
int
seto
pushf
mov
loopne
xor
dec
mov
mov
jp,pt
stc
outsl
adc
fiaddl
lcall
cmp
pop
popa
outsb
and
add
repz
lea
dec
rolb
mov
fs
ljmp
ljmp
cltd
adc
adc
xchg
loopne
repz
outsl
iret
xchg
add
xchg
mov
mov
daa
add
xchg
xchg
ret
cmp
sbb
inc
adc
and
divb
cmpsl
mov
jl
dec
rcrl
int3
or
aas
addl
cld
movsl
xor
je
xor
jmp
nop
imul
inc
inc
dec
cmpsb
stos
and
shrb
gs
ds
fwait
mov
jne
shrl
and
push
xor
push
fsubrs
scas
push
mov
xchg
and
cmp
mov
imul
xchg
hlt
sbb
cmp
push
mov
jno
std
test
ss
sbb
outsb
pop
adc
lret
nop
arpl
std
mov
mov
lcall
fs
add
jg
and
rolb
mov
lods
stos
add
xor
add
cmpsl
pop
jmp
adc
mov
andl
and
fs
inc
xchg
pop
add
push
sub
imul
fucomip
add
fisttpl
or
pop
mov
sub
outsb
and
pop
cld
scas
iret
test
jl
dec
mov
push
mov
dec
inc
adc
ror
and
daa
add
lods
lahf
xchg
push
leave
pusha
into
sbb
mov
sbb
and
jecxz
aas
pmuludq
xchg
sarb
xchg
stos
pop
cmp
sbb
mov
pop
xor
pop
dec
in
and
iret
xchg
fstps
jns
fnstsw
or
pop
push
int
stc
xlat
scas
roll
lock
and
gs
divb
sbb
and
ret
dec
inc
scas
xchg
and
xlat
les
sbb
push
add
push
movsb
not
xchg
dec
jo
cmp
mov
dec
push
sub
jg
aad
ret
pop
mov
pop
test
popf
cmp
or
into
pop
sub
pushf
xchg
xor
lret
mov
ljmp
lds
pop
mov
dec
scas
jecxz
mov
imul
jp
mov
sbb
lar
nopl
add
xchg
push
loop
cmp
dec
into
cltd
popf
movsl
int3
mov
nop
cs
mov
stos
jle
jg
pop
xor
xchg
fs
mov
outsb
push
xor
sbb
lret
fwait
outsb
pushf
rcll
push
cmp
sbb
xor
jle
pop
push
js
push
iret
test
fdivl
sub
hlt
mov
cmp
sub
xchg
xchg
adc
mov
repnz
xchg
sti
dec
mov
xchg
pop
imul
adc
sbb
xchg
pop
rdtsc
icebp
inc
popa
push
scas
hlt
xor
shl
add
ja
inc
ds
sar
mov
movsl
xchg
or
pop
adc
adc
xchg
lds
loopne
popf
inc
fwait
cli
hlt
xchg
loope
nop
add
imul
imul
test
in
inc
cltd
pop
inc
rcrl
push
mov
das
xor
lods
push
and
pop
jmp
lret
bound
pop
sub
daa
xor
in
sbb
fwait
hlt
lds
mull
lock
bnd
mov
or
insl
jae
int
nop
inc
push
xor
xchg
mov
jbe
jnp
lahf
adc
imul
push
leave
xchg
push
inc
jmp
fidivrl
sub
jb
mov
jae
std
sub
pop
je
shll
xor
cmp
jne
test
add
stc
int
pop
bound
xorl
adc
lret
jno
cmp
loope
adc
adc
ret
popf
clc
in
lcall
xor
out
aas
and
mov
sub
pop
mov
or
outsb
fs
xchg
sub
outsb
outsl
jecxz
out
movl
lcall
push
and
and
ja
sbbl
std
es
out
ret
pop
xor
jo
jb
cmpsb
in
imul
mov
cmp
out
ljmp
out
xorl
mov
push
add
lds
ds
or
repz
xlat
dec
pushf
test
add
adc
lahf
call
cmpsl
lret
xchg
and
les
mov
das
add
and
inc
movsl
pop
scas
inc
mov
dec
xchg
dec
jne
jae
jns
jnp
push
mov
mov
cmpsl
add
fcmovb
pop
inc
add
mov
imul
lods
or
sti
xor
fcmove
nop
jg
xorl
mov
sbb
sbb
or
jae
in
push
dec
mov
sub
stc
dec
ljmp
jmp
repnz
lods
faddl
imul
cmp
mov
or
xor
xchg
push
sarb
sbb
in
fisttpll
fucomi
cli
ret
faddp
pop
ds
mov
jg
pop
in
loope
stos
and
pop
loop
loop
out
sub
shlb
mov
cmpsl
pop
cmp
sub
movsl
bound
mov
out
jne
loope
pop
xor
repz
push
mov
ja
push
dec
repz
pop
mov
aas
imul
ret
or
add
xor
jmp
sbb
cmp
int3
test
push
mov
and
cmp
xor
mov
push
rorl
jns
lods
mov
rcll
mov
pop
pop
or
jno
sub
pop
ja
inc
push
mov
test
icebp
push
cs
jno
scas
jbe
xchg
or
jne,pn
dec
jne
jl
stos
push
out
or
sbbl
push
xchg
and
stos
push
outsl
ja
data16
scas
lret
pop
in
mov
lea
lods
jl
push
fimuls
adc
ss
jo
mov
and
ret
out
cmp
nop
cli
mov
pop
xchg
mov
inc
sub
stos
mov
pop
cli
push
cmc
or
hlt
mov
repnz
or
fisubrl
inc
pop
shlb
push
in
lods
xchg
aam
out
push
mov
ja
fisubl
pop
stos
outsb
sbb
xor
faddl
mov
lock
xor
outsb
shl
je
push
sti
inc
mov
hlt
out
mov
out
cli
add
movsl
xchg
jg
add
data16
repz
or
outsb
shll
and
fstpl
push
sub
in
out
clc
push
xchg
insb
fs
mov
push
jmp
out
out
jo
add
or
nop
aad
je
mov
sbb
sbb
stc
push
aaa
sbb
insb
das
mov
jb
inc
clc
xchg
or
movsl
gs
test
push
cld
inc
adc
sarl
repz
insb
js
sub
push
cmp
addr16
dec
mov
add
pusha
dec
test
ss
add
mov
out
xchg
test
movsb
popa
dec
ss
scas
mov
ljmp
addr16
popa
push
or
or
and
leave
push
push
in
push
mov
and
xchg
xchg
xchg
mov
in
jo
mov
jg
or
insb
pop
fstl
push
xor
pop
inc
popf
or
nop
call
add
jae
mov
dec
jbe
jnp
dec
imul
fisttps
add
and
jbe
mov
inc
ljmp
fistps
adc
int
stc
adc
insl
stos
pop
inc
and
sbb
inc
inc
xor
jge
dec
ret
pop
and
loopne
or
daa
inc
scas
add
in
sti
and
pushf
test
sbb
xchg
mov
sbb
pop
xchg
sub
nop
scas
and
sub
mov
xor
repnz
jecxz
add
stos
dec
add
inc
loopne
sbb
icebp
push
add
jae
gs
addr16
in
jmp
ret
stos
cmp
lods
mov
or
mov
sbb
mov
mov
mov
xchg
iret
adc
xchg
adc
dec
scas
mov
jmp
cmp
xchg
cld
popa
movsb
call
mov
cwtl
iret
stc
into
ret
mov
aad
iret
lret
xor
loope
add
pop
lcall
aas
lcall
jg
mov
jg
mov
pop
or
xchg
out
dec
or
or
loopne
xchg
push
push
les
fwait
jle
outsl
and
minps
int
stos
pop
aaa
jo
push
mov
cmp
inc
out
dec
out
idivb
faddl
test
cmpsl
mov
in
or
xorl
in
mov
pusha
xchg
shll
aam
cmpb
pop
mov
shlb
xor
jno
jmp
es
lea
nop
cmc
mov
xlat
mov
sub
mov
adc
jecxz
mov
cmpsl
jnp
jo
mov
mov
dec
lcall
xor
stc
or
je
and
push
and
es
and
xor
xor
dec
mov
repnz
mov
sbb
xor
call
adc
test
imul
jle
jecxz
bound
jge
mov
add
dec
pop
movsb
mov
or
stc
jp
outsl
push
mov
cmp
andl
lds
cmpsb
and
mov
ret
aad
dec
sbb
in
lret
es
je
add
mov
mov
push
cltd
adc
mov
ja
movsl
push
fldln2
pop
sbb
adc
xor
dec
push
sbb
out
cmc
in
and
aas
sbb
and
jp
mov
add
cld
ss
pop
xor
adc
add
mov
mov
in
inc
xchg
lret
iret
ret
movsb
jb
xlat
pusha
les
sbb
jb
mov
mov
jo
or
adc
popa
fs
push
divb
adc
pop
xchg
rclb
xchg
out
xor
pushf
inc
inc
out
mov
mov
mov
jle
fnstsw
fsubl
repnz
dec
sti
ss
icebp
and
dec
test
pop
lahf
xchg
or
out
push
mov
stos
lock
int
call
push
cmp
test
adcl
jecxz
hlt
rclb
stc
lea
jae
xor
jp
push
xchg
dec
mov
fwait
sbb
daa
bound
ss
or
mov
sub
push
xchg
cld
sbb
cmp
cli
mov
adc
jno
jmp
sbb
inc
rcl
bswap
mov
rorl
in
and
adc
aas
imul
mov
inc
dec
and
or
cmpsb
sbb
cmpsb
out
mov
ret
mov
cwtl
mov
mov
xchg
aam
add
add
loope
sbb
mov
add
call
or
and
xchg
and
cmp
xor
fwait
mov
mov
lahf
or
in
jo
and
rorl
mov
int3
lret
mov
shlb
adc
cmp
cld
or
aas
mov
adcb
sarl
cli
in
add
test
insl
mov
repz
cmp
dec
jb
jle
ret
push
adc
rcl
lcall
aam
inc
and
loopne
adc
mul
and
dec
add
jecxz
cmp
movsb
cmp
cmpsl
jns
jmp
fdivrs
sub
pop
cmpsl
jo
insl
xchg
dec
sub
rolb
sub
test
aaa
outsb
fstpl
adc
or
test
push
or
mov
or
push
mov
mov
pusha
xchg
sub
mov
out
gs
cmpsl
test
or
cltd
add
pop
ja
mov
lahf
shrl
push
pop
sub
jno
scas
insb
scas
mov
push
dec
jno
sti
sbb
aaa
es
sbb
aas
aaa
daa
addr16
cs
lcall
out
sbb
pop
ret
out
stos
mov
jno
mov
std
sbb
lea
hlt
sarb
mul
in
jne
jle
icebp
sub
in
pop
dec
insb
jae
xor
push
stos
mov
in
arpl
mov
stos
jbe
jbe
mov
popf
mov
mov
jnp
sarb
in
push
mov
mov
xor
mov
sub
mov
sbb
leave
je
popa
dec
add
or
dec
lea
pusha
add
aaa
hlt
cmp
loope
lds
fwait
into
add
inc
sub
vprotd
in
insb
bound
pop
das
or
jo
cmpsl
sbb
push
ret
lods
jo
test
lods
dec
sti
stos
stc
xor
pop
lods
test
pusha
jno
ja
add
push
scas
and
push
outsb
insl
xor
and
sarl
jle
fstps
aam
gs
cwtl
mov
scas
push
cmp
adc
lret
jne
cmp
mov
gs
mov
jno
dec
daa
movsb
aam
or
pop
mov
push
ljmp
cmc
xchg
fucomip
mov
jo
mov
mov
fucom
loopne
mov
out
std
sub
push
repz
popa
mov
aas
dec
ja
pop
cmp
add
stos
xorl
adc
sti
mov
adc
andb
lahf
mov
mov
pushf
aas
pop
mov
xor
les
lock
out
sbb
out
aas
add
stc
dec
and
ss
sti
pop
jbe
xchg
dec
pop
imul
lock
mov
and
sbbl
es
test
adcl
shlb
call
popf
cltd
cmp
jb
inc
and
xor
mov
pop
mov
call
pop
lods
dec
xor
mov
in
and
int
sbb
jecxz
sbb
mov
sarl
adc
and
push
outsb
mov
and
and
dec
lea
xlat
xchg
xchg
loop
fistpll
mov
dec
jbe
inc
jb
pop
lret
aam
in
mov
push
xchg
and
push
js
dec
insb
inc
in
cmpsb
fiadds
jmp
jne
out
mov
mov
mov
daa
cmpb
test
jge
push
sbb
xorb
add
and
push
in
mov
xor
cmp
mov
cmpsb
mov
movsb
mov
out
cmp
push
ja
adc
ja
mov
test
jge
mov
adc
xchg
inc
push
insl
xchg
das
out
and
out
push
popa
lock
cmpsb
out
in
pop
push
out
add
push
je
or
lds
pop
mov
call
daa
jmp
lahf
fldl
mov
ret
pop
mov
inc
pop
mov
add
mov
pop
fiaddl
stos
in
or
rcrw
imul
xchg
sti
insl
mov
adc
and
pextrw
popa
and
adc
shl
mov
add
adc
movsl
das
push
mov
dec
movsl
sub
pop
iret
add
loope
std
je
mov
in
iret
lods
fs
sbb
jge
aad
aad
or
sahf
fwait
push
jmp
call
jae
nop
jmp
loopne
mov
xchg
sbb
insl
jnp
sub
sub
bound
adc
push
and
sti
mov
into
sahf
loopne
inc
pusha
mov
mov
xor
push
xor
clc
and
into
rclb
cltd
lcall
popf
flds
outsb
lcall
leave
xchg
jns
and
adc
lea
xor
mov
sub
popa
push
xor
sub
out
xor
pop
jo
xchg
add
mov
loop
lds
es
je
pop
inc
rorl
inc
lret
adc
gs
mov
jle
mov
sbb
outsl
add
sbb
xchg
orb
mov
pop
iret
sub
outsb
insl
cmp
out
lods
fcoml
adcl
inc
repz
fwait
test
xor
mov
mov
fwait
loopne
out
jecxz
rcll
dec
jg
fnstenv
icebp
fcmove
ss
imul
cmp
sub
outsb
les
lea
and
mov
mov
mov
insl
aam
pusha
xchg
or
mov
dec
jo
out
pushf
rclb
sbb
mov
fs
aaa
test
mov
mov
aaa
pusha
test
popa
pop
mov
fistl
aam
rcrl
es
inc
popa
aaa
pop
outsl
sbb
insl
lea
jmp
adcl
xchg
push
and
pop
push
cmc
shlb
lds
sub
pushf
inc
jl
lock
pushf
out
pushf
and
ja
pop
jo
sub
inc
loopne
and
movsb
jge
jns
ds
std
stos
dec
pop
push
pop
mov
or
cli
test
das
jmp
push
enter
pop
sub
loop
out
cmc
push
sti
jae
mov
ja
sbb
out
adc
xchg
jnp
pop
or
sub
push
sub
ret
jbe
sub
lret
test
cmp
or
mov
mov
xchg
lods
fwait
pop
xchg
addl
ret
loop
sbbl
dec
les
sbb
inc
pop
lretw
test
sub
dec
jne
push
out
inc
sub
lods
int
cli
mov
xchg
lods
sbbl
fwait
adc
mov
std
jno
mov
movsb
subb
adc
shrb
inc
sub
mov
pop
xorb
aaa
lret
stc
clc
jnp
lahf
dec
fistl
not
xor
cmp
lahf
xlat
mov
ss
or
addb
in
scas
mov
sbb
filds
or
loopne
lods
sarl
mov
addl
fisttps
sub
fisubrs
add
cmp
pop
mov
sub
jp
sbb
aas
add
mov
or
fwait
cli
push
inc
jmp
mov
mov
rclb
cmp
int
movsl
push
pop
fstpl
sbb
mov
push
mov
mov
fwait
adc
fcom
mov
push
mov
addr16
inc
push
sbb
sub
or
lods
pop
enter
xor
inc
aaa
mov
inc
pop
in
sbb
xor
test
cmp
cmpsb
jnp
xchg
hlt
scas
adc
dec
mov
bound
jo
cmp
jl
add
in
push
sub
push
inc
mov
pop
notb
ret
shl
cmpsl
mov
adc
jg
mov
mov
fisttpl
fidivrl
out
pop
mov
icebp
lret
mov
test
ja
pushf
xchg
addr16
add
pop
and
mov
jl
stos
cli
imul
xor
jp
jo
xchg
and
mov
ret
int3
jno
mov
repnz
insb
add
inc
lods
pop
ss
insb
mov
imul
dec
ljmp
add
int3
pop
in
imul
jmp
push
or
repnz
jge
pop
int
ss
jge
inc
mov
js
dec
jne
mov
or
sbb
rcrb
mulb
cmp
xchg
stos
addl
shll
pusha
loop
and
mov
xor
fcomps
pop
mov
fs
cmp
popf
push
adcl
jl
push
movsb
adc
dec
sar
xor
ret
push
sbb
push
sahf
xchg
lds
and
jmp
testb
notb
sbb
dec
inc
mov
mov
pop
out
lock
xor
jmp
adc
mov
imul
push
xor
pusha
sub
fsubs
movsb
adc
ja
sbbl
mov
sbb
out
js
cmp
adc
rcll
inc
frstor
sub
or
dec
insb
pop
adc
mul
mov
aad
jmp
call
test
sbb
pop
and
mov
sbb
insl
test
arpl
movsb
out
mov
pop
nop
je
frstor
int
push
xchg
cltd
pop
ljmp
sbb
popa
push
ret
js
mov
add
adcl
xchg
mov
cmpsl
pop
push
les
cmp
cmc
into
mov
add
fsts
dec
jmp
lret
call
cmp
mov
icebp
gs
sbb
xor
ffree
dec
push
inc
jmp
imul
int3
inc
jmp
push
pop
sti
jae
popf
xchg
lds
imul
xlat
xor
jl
ret
pop
dec
addr16
scas
or
in
inc
hlt
das
mov
out
int3
shl
adc
cmc
in
lcall
cmp
jno
sbb
pop
pusha
push
insb
push
mov
sahf
sbb
cmp
outsl
iret
dec
xor
pop
out
push
sarb
fsubl
mov
pop
jb
outsb
jmp
sarl
pop
jb
shll
aaa
sahf
jmp
dec
imul
fcoml
xchg
stos
jge
jmp
push
adc
adc
mov
in
fwait
push
pop
cmp
lds
mov
mov
and
js
ret
pushf
je
mov
push
mov
imul
add
in
jns
jp
cmpsl
sbb
xchg
cld
rcl
push
rcrl
mov
sub
jno
in
pop
xor
mov
sbb
rorl
sbb
xchg
das
scas
sbb
mov
lahf
stc
jbe
nop
and
pop
ficompl
fmul
movsl
roll
adc
dec
xchg
and
or
inc
pop
jl
add
sar
shl
inc
mov
sbb
pop
pop
shll
inc
cs
or
sub
subb
into
adc
adc
or
mov
insb
xor
rcll
lock
inc
mov
adc
xlat
mov
sbb
adc
pop
shll
or
adcb
insl
cmp
hlt
add
jge
or
fsubl
pop
dec
repz
adc
cltd
sub
pusha
outsb
sti
push
loopne
add
outsl
insl
mov
or
pop
push
mov
aad
adc
in
rorb
fnstenv
dec
iret
lret
dec
dec
mov
lods
shrl
pop
cmp
sub
imull
in
sbb
ja
movsb
fcoms
insl
mov
pop
data16
push
xor
int3
ds
dec
leave
cmp
out
scas
fs
fistps
adc
rcrl
push
and
sub
aam
movsl
out
dec
out
add
xor
add
pusha
in
mov
dec
data16
movsl
repnz
subl
outsb
xchg
add
scas
out
adc
add
out
dec
arpl
push
dec
fldcw
popa
add
xchg
scas
sub
mov
mov
jle
lds
mov
push
movsb
pop
pop
fchs
enter
or
mov
or
lds
lea
cltd
xor
fimuls
xchg
push
mov
cli
cld
stc
sub
cmc
cmpsl
push
mov
nop
in
mov
das
xchg
loope
cs
mov
call
rolb
aaa
add
stc
jno
popf
ret
and
jle
jmp
in
not
mov
aaa
and
cli
aad
pop
shlb
inc
lret
rorl
push
lds
iret
addr16
push
mov
das
sub
in
pushl
out
mov
loope
mov
inc
mov
insb
ja
push
lretw
nop
cltd
jle
repnz
ljmp
jecxz
xchg
gs
cld
lods
imul
sub
jmp
bnd
jmp
sub
repnz
cmp
jle
mov
mov
pushf
jmp
xchg
jge
mov
shll
mov
in
jmp
xchg
rcll
xor
xchg
mov
ret
jno
push
pop
int3
mov
or
jno
ficomps
lock
mov
sbbb
call
into
mov
sbb
cmpsl
sbb
insb
neg
popf
dec
dec
push
sub
cmpb
addr16
cmp
repnz
lcall
clc
push
xor
inc
in
fbstp
inc
cmpsb
jno
add
jne
mov
push
mov
in
stc
mulb
push
insl
adc
repz
jge
cmp
ficompl
pop
sbbb
sbb
fistps
jb
mov
and
mov
jb
ss
and
notb
stc
gs
jl
in
inc
testl
cmp
int3
add
pushf
sbb
push
xlat
or
data16
dec
int
dec
add
dec
or
stos
ljmp
cmp
sub
in
popf
adc
xor
xor
lcall
jb
dec
pop
jmp
cmp
cmpsl
rorb
mov
idivb
iret
add
addr16
cwtl
mov
in
push
das
jge
fsts
cmp
mov
mov
rcll
mov
push
mov
lds
bound
imul
push
cmp
mov
jmp
push
lods
ss
jp
bound
sbb
bnd
loop
jno
insb
add
jae
pusha
loopne
dec
xor
dec
int
push
mov
inc
xchg
xor
mov
int3
dec
lods
and
lods
outsl
out
add
sbb
stos
fidivrs
in
repnz
or
fwait
sbbl
jp
mov
inc
fldcw
mov
enter
fsubrl
dec
pop
or
in
pop
sbb
or
xor
pop
add
mov
es
push
inc
popa
mov
adcl
jge
jle
mov
loopne
cmp
cmp
mov
pop
or
push
out
jns
cmp
daa
push
mov
aam
les
push
push
daa
scas
aam
push
adc
adc
add
mov
mov
es
test
mov
inc
xor
and
sbb
loopne
imul
cs
jg
dec
leave
xchg
cld
and
pop
test
inc
cmp
inc
out
in
repz
mov
and
andl
lods
sbb
push
pop
in
out
icebp
call
push
inc
cmp
cld
fsubrl
xchg
xor
mov
and
jecxz
nopl
andl
sub
adc
mov
push
mov
loopne
xchg
out
jae
bound
ret
jae
cmp
mov
faddp
dec
xor
stos
inc
sub
ret
adc
cmpsb
xchg
xchg
xchg
xchg
mov
jae
xchg
clc
lret
rolb
mov
dec
push
sub
in
rol
leave
cltd
movsl
test
adc
jl
and
inc
xchg
mov
mov
sub
and
jno
mov
and
mov
adc
repz
cmpsl
push
sub
adc
lods
gs
test
rcrl
shll
imul
sarl
call
lods
jl
insb
sti
sub
jge
pop
aaa
add
jns
jmp
test
cmpsl
popf
std
add
mov
and
jecxz
pop
stc
mov
sub
inc
pushf
test
mov
mov
daa
ss
mov
icebp
dec
stc
inc
mov
jae
xchg
cmp
popf
hlt
out
mov
add
mov
fstpt
loope
sub
dec
pop
cs
lcall
sub
jne
pop
and
aas
cwtl
xor
fdivr
gs
testl
pop
fiaddl
push
dec
push
int3
je
jae
cmpsl
xchg
mov
out
shrl
lret
hlt
or
xchg
sub
mov
test
cmp
arpl
lods
xor
inc
repz
das
and
sub
xor
lods
add
pop
push
int
movl
xlat
out
int
mov
jo
int
int
jge
gs
xor
in
shrb
rcl
jnp
push
push
jmp
dec
mov
xchg
or
fistpll
into
jns
xchg
cmp
mov
out
sarl
call
or
stos
and
addr16
xor
out
repz
sbbl
pop
dec
movsb
cs
inc
flds
sub
jo
xchg
pushl
imul
js
push
js
sub
and
test
in
rcrl
cmp
mov
mov
mov
pop
loopne
test
pop
pusha
mov
sbb
mov
pop
sub
jnp
push
xor
fldl
and
and
cwtl
imul
sbb
ret
mov
in
dec
pop
not
pop
inc
jp
aam
test
adc
xor
mov
sbb
lret
pop
and
dec
outsl
test
sub
pop
adc
add
aaa
imul
aas
int
mov
out
loope
sbbb
sub
insl
into
fcoms
mov
push
js
mov
hlt
orb
mov
cs
into
mov
sbb
es
lret
add
fsubs
pop
mov
pop
in
std
push
fsubl
mov
test
mov
lods
xor
mov
sbb
repz
hlt
jecxz
out
rcrl
inc
ja
xchg
sbb
sub
cmp
aad
adc
jb
ret
out
rcrb
ss
aas
leave
add
fwait
mov
push
paddusb
arpl
nop
test
loop
testb
roll
pop
dec
jnp
scas
lcall
mov
sub
out
clc
pop
add
cli
cli
std
jp
fldt
lds
out
push
lds
enter
push
data16
dec
adc
xor
push
stos
mov
cmp
inc
inc
in
cmp
bound
jl
outsl
sub
fildll
cltd
dec
mov
cmp
int
dec
lret
pop
nop
mov
test
jp
push
iret
jp
arpl
lods
aaa
movsb
popa
fstpl
inc
es
adc
popa
aad
lret
call
test
add
xor
test
pusha
stos
push
imul
loope
jmp
xchg
fwait
jo
jg
ss
xor
sbb
jne
add
stos
jp
adc
add
mov
xchg
mov
xor
insl
fs
adcb
and
xchg
int3
push
shlb
les
mov
jecxz
sub
xchg
xchg
jb
icebp
push
leave
lds
mov
mov
jge
inc
fdivl
mov
jle
add
pop
pop
hlt
das
xchg
stos
ret
sbb
push
repz
leave
add
xchg
roll
mov
faddp
outsl
sub
mov
gs
imul
xor
push
jno
stc
test
jnp
sbb
sar
rcl
jecxz
into
jns
adc
and
rcrl
in
inc
push
arpl
jge
sbb
icebp
or
xchg
and
mov
push
cmp
out
ja
enter
pusha
movsl
or
fisttpl
pop
jo
dec
popfw
sti
fs
add
xor
fcompl
xchg
rcr
hlt
sub
push
mov
cmpsb
cmpsb
push
cs
movsl
xor
out
stos
mov
mov
sbb
adc
xor
mov
mov
lods
stos
dec
inc
clc
std
jns
xchg
and
cmpl
sub
mov
and
sub
fdivl
ja
or
xchg
repnz
mov
xchg
sub
mov
mov
andb
dec
fistpll
cs
mov
pop
xlat
in
xor
jne
xchg
cmp
test
mov
je
sbb
roll
mov
inc
aaa
or
pop
mov
cmpsb
mov
dec
stos
or
rorb
insb
and
dec
loop
std
aam
xor
imul
inc
cmpsb
arpl
aad
jp
js
xor
aas
add
subl
testb
shll
fbld
pop
es
in
sbb
push
cs
repnz
cs
cmpsl
fisttpll
push
outsl
pop
xchg
pop
push
pop
cmp
xchg
cwtl
sub
push
xchg
out
adc
xchg
movl
pop
rorl
jl
adc
in
je
xchg
sub
mov
sbb
xchg
pusha
push
popa
jno
daa
push
cmp
outsl
scas
push
rorb
and
jno
ret
cmpb
stc
arpl
push
push
dec
cld
adc
imul
popa
insl
inc
test
loope
faddl
addr16
ds
inc
mov
pop
sub
push
pop
add
sub
jmp
xchg
inc
push
xchg
mov
jo
sti
lea
push
stos
mov
dec
outsl
in
lock
mov
xor
mov
popa
push
rolb
imul
fwait
aaa
shll
pop
out
call
sahf
fadds
adc
mov
call
cld
fcomip
imul
inc
leave
stos
sti
dec
insl
pusha
push
pop
xchg
ljmp
sub
pop
cli
imul
inc
ret
test
dec
lock
or
cltd
and
push
test
popf
into
jne
dec
pop
in
repnz
insl
dec
and
xor
lahf
xor
inc
push
xchg
ficompl
int3
mulb
mov
clc
sub
mov
mov
cltd
add
mov
push
sub
adc
inc
pushf
adc
add
jp
cbtw
or
xchg
sub
lret
cmp
mov
mov
mov
test
pusha
adc
aas
dec
cs
mov
cmp
lods
sahf
repz
adc
add
mov
sbb
aad
pop
rolb
sbb
mov
outsb
xchg
pop
outsb
rol
adc
leave
fbstp
jne
inc
lcall
and
dec
mov
mov
lret
push
subl
mov
shrl
sti
pop
sbb
sbb
fs
lret
jg
mov
je
mov
add
out
adc
xchg
subb
stos
subl
push
push
mov
repnz
pop
sbb
int
testl
cli
jge
add
jg
mov
adc
lcall
jne
lods
imul
sbb
pop
cli
enter
mov
je
lds
adc
into
popaw
test
ja
jmp
movsb
lret
out
repz
repnz
ret
mov
int
mov
pop
sbb
leave
faddl
das
inc
xor
inc
js
hlt
mov
stos
outsb
adc
lcall
jno
xor
iret
add
dec
imul
mov
rclb
dec
ret
push
inc
fnstsw
xchg
or
test
pop
adc
pushf
fildl
xchg
dec
cmp
push
fstpl
pop
ljmp
leave
in
sub
clc
pushf
or
adc
mov
pop
mov
pop
jge
iret
mov
ret
sbb
imul
int
in
and
cmp
or
cli
and
pop
daa
pop
xorl
lret
shr
pop
sub
add
jae
mov
mov
je
cmc
jnp
cld
in
mov
jae
jb
jne
and
dec
nop
aam
push
cmp
jmp
add
jl
mov
pop
mov
sbb
bound
push
adc
jmp
loop
enter
jge
shlb
dec
cwtl
add
mov
mov
scas
jle
insb
lods
imul
shlb
xor
push
push
or
fildll
mov
cmp
jmp
or
mov
fidivrs
mov
das
jbe
clc
popf
sub
ficomps
stc
cmp
fildl
sbb
push
mov
inc
sbb
inc
dec
mov
jecxz
and
test
dec
popf
and
or
jo
ss
mov
test
pop
jge
icebp
stos
cs
cli
dec
sbb
iret
adc
pop
les
divb
cmpsb
popa
loopne
js,pn
je
pop
push
mov
mov
cmp
scas
fisubrs
mov
xchg
sti
mov
or
sbb
stc
add
add
sbb
cmp
ret
ds
nop
loopne
insl
cwtl
pop
mov
gs
lret
mov
xchg
mov
inc
pop
add
out
jp
sti
aam
imul
and
cmp
bound
cli
dec
push
mov
ja
push
popf
xchg
pop
jo
mov
fildll
inc
xchg
ss
mov
pop
mov
sbb
js
lock
nop
adc
js
dec
jp
mov
std
xor
stos
cld
imulb
inc
fisttps
aad
rcrb
movsb
xchg
push
into
movb
out
push
sbb
cmpsl
adc
xchg
into
mov
push
jo
ficoms
xor
dec
mov
js
insb
je
cs
push
adc
push
add
xor
jle
stos
mov
sub
daa
jne
loopne
adc
xchg
ds
inc
std
fsubrl
adc
cmp
mov
add
mov
jo
cltd
roll
lock
inc
cmp
pushf
mov
push
decl
bound
inc
push
mov
sbb
and
shlb
xlat
inc
sub
fisubs
mov
inc
lods
jbe
stc
push
mov
loope
arpl
pushf
bound
loop
scas
jns
mull
push
pop
sbbl
bound
ret
xchg
add
and
pop
fcmovne
scas
adc
push
pusha
jmp
pop
xchg
fadd
mov
sbb
pop
enter
inc
or
jecxz
incb
inc
jne
addb
push
push
sbb
pop
jne
out
ffreep
pop
inc
rorl
jmp
push
dec
add
jmp
pop
scas
sub
std
fidivrl
ficoms
iret
mov
in
and
addl
mov
xor
fstpl
dec
es
stos
jno
loope
inc
popf
xlat
xchg
mov
xor
xor
popf
fisttps
data16
test
and
scas
xor
sub
cmp
aam
xor
add
and
mov
int
cltd
dec
addr16
sbb
fsubl
xchg
out
sub
clc
xchg
fwait
ror
leave
test
mulb
and
pop
cmp
ja
jo
pop
loop
xlat
enter
mov
cmp
mov
mov
push
stc
jmp
mov
xchg
jg
sub
outsb
push
addr16
ja
sti
lods
and
xor
dec
inc
push
mov
mov
xor
das
int
push
and
data16
jecxz
inc
add
data16
adcb
fs
shlb
outsl
in
insl
xor
xor
imul
stc
sub
test
mov
mov
mov
mov
mov
sub
aad
jecxz
sub
dec
adc
or
ja
cmp
ss
shrl
ljmp
mov
mov
adc
add
sub
vunpckhps
int
mov
inc
cmpsb
and
inc
stos
pop
pop
ja
jge
mov
scas
or
test
fcomi
loope
push
std
in
pop
repnz
mov
das
bswap
pop
cmp
jmp
popa
xchg
xchg
push
jno
loop
mov
or
loopne
inc
mov
fldl
mov
cmp
sbb
je
adc
adc
adc
dec
and
aad
gs
xchg
in
dec
dec
fldenv
add
pushf
arpl
shr
test
bound
rol
int3
jb
das
adc
je
xchg
ljmp
shll
test
dec
xchg
jge
xchg
pop
stos
lahf
lods
fisubl
inc
mov
inc
jbe
mov
mov
push
push
cmp
jb
sub
data16
sti
jae
jp
mov
mov
adc
jecxz
and
stos
push
sti
std
fldenv
movsb
dec
push
xchg
cmpsl
pop
stc
add
pushf
jmp
push
mov
test
mov
push
repz
les
jne
loop
mov
cmp
sbb
and
aam
cs
jb
or
outsl
sti
std
movsl
scas
jp
nop
js
jmp
and
inc
imul
inc
cltd
inc
xchg
pop
or
jge,pn
mov
cmp
inc
loop
xorl
sti
mov
insb
sbb
dec
push
leave
int3
loopne
adc
fiadds
sub
and
inc
add
fwait
push
xor
out
dec
cli
mov
adc
xchg
sub
xor
sub
xorb
jb
addr16
jmp
subl
fistpll
lds
mov
aad
add
nop
incl
sub
cmpsb
je
pop
stos
fstpt
jle
push
outsb
incb
or
test
addb
xor
push
mov
ret
sub
inc
mov
pop
outsl
cmpsb
mov
mov
jae
or
and
jle
xchg
pop
int3
pushf
dec
into
or
addr16
pop
lods
int3
add
jp
bnd
xor
cld
in
and
je
jl
cmpsb
fs
jmp
lods
cmp
enter
loope
pop
or
cli
lods
jo
cmc
fwait
call
inc
cs
testb
hlt
or
jnp
lods
mov
test
jbe
outsb
jbe
inc
adc
push
insl
fildl
addr16
jno
jge
fs
push
mov
loop
psllq
aas
push
arpl
das
or
dec
stos
clc
xor
lock
into
test
mov
sub
cmp
jb
rol
jo
adc
cmpsb
out
shl
movsb
or
and
inc
mov
pusha
pop
xchg
loope
cmp
xchg
and
xchg
ret
rolb
cmp
pop
jns
out
and
dec
mov
xchg
dec
flds
xchg
jns
mov
mov
outsl
pop
ss
inc
add
cmp
dec
shl
gs
push
cld
adc
mov
icebp
aaa
cmp
movsl
into
push
push
popa
addb
cmpsb
push
imul
add
sub
jmp
fcmove
push
dec
dec
dec
xor
xchg
cmpsb
xlat
mov
inc
insl
jne
cmp
adc
ds
jo
ret
push
ret
dec
mov
and
xchg
dec
jg
inc
jbe
adc
ss
push
mov
mov
inc
int
sbb
sub
mov
or
aad
lret
mov
cmpsb
stos
test
inc
jle
loop
cmp
lock
shll
in
and
or
cwtl
sbb
mov
arpl
pop
or
add
addb
or
sarl
clc
repz
fistl
push
fwait
cmp
jl
pusha
outsb
sbb
or
in
ds
movsl
pop
xchg
imul
into
aad
mov
jge
push
sbb
sub
sbb
push
pop
loopne
out
cmp
push
mov
sub
add
mov
jae
xor
loopne
mov
mov
pop
mov
push
rcr
cmp
mov
and
outsb
lcall
shrb
lods
call
cld
popa
mov
mov
icebp
shlb
add
or
mov
jno
ljmp
in
scas
add
inc
inc
mov
movsl
and
int
dec
push
pop
fwait
out
xchg
or
les
push
add
push
sub
pop
dec
mov
sbb
popf
and
lea
lods
int3
mov
mov
scas
adcl
in
test
popl
xchg
into
ret
ret
mov
push
push
pop
cmp
lock
or
push
movsl
repz
test
les
pop
xchg
iret
loope
pop
xchg
push
jl
fwait
jno
pusha
jae
incb
dec
enter
lret
shll
and
test
mov
push
gs
sbb
cmp
rcll
testl
bound
call
icebp
ja
sbb
insl
incb
push
push
clc
in
jbe
jbe
jecxz
and
push
mov
cmpsb
xor
or
jle
push
inc
push
adc
dec
movsl
xor
out
mov
js
cltd
mov
sub
imul
clc
mov
insl
and
mov
cmp
dec
and
mov
add
jb
popf
cli
loope
push
enter
imul
mov
dec
and
and
dec
add
ljmp
cli
sbb
shlb
push
addr16
inc
js
mov
cmpsb
mov
stos
mov
jae
xor
aas
mov
les
mov
out
sahf
call
lods
aad
pop
arpl
pop
lods
enter
jle
mov
add
inc
pop
and
cmovae
pmulhuw
mov
mov
xor
test
dec
inc
mov
mov
mov
je
push
adc
fidivl
repnz
mov
mov
popa
add
cwtl
cmp
mov
outsl
testb
push
subb
adc
leave
mov
and
fisttps
push
repnz
push
aad
jne
lods
pop
lret
jae
shl
add
xchg
shll
das
fcmovne
inc
cmp
cltd
pop
and
insb
and
fmuls
mov
push
fwait
dec
push
sub
jnp
aas
div
loope
jle
outsb
loopne
push
or
lret
or
jge
dec
mov
jnp
cmpsl
xchg
popa
or
and
inc
mov
cli
jge
shll
sub
aad
ds
outsb
sub
xchg
sbb
sub
in
popa
jne
aaa
xchg
inc
rorl
pop
or
push
loope
ds
or
cld
adc
test
lcall
jae
push
pushf
daa
loopne
mov
push
imul
out
or
divps
jb
push
jg
out
in
push
out
cmc
cmpsb
dec
andb
cmc
xchg
push
xor
sbb
lret
pop
mov
mov
sbb
mov
adc
gs
push
lea
inc
sarl
mov
enter
sbb
and
mov
push
outsl
pop
je
cmp
out
pop
into
jb
imul
mov
lcall
add
int
outsl
cmp
cltd
leave
in
mov
scas
inc
aaa
popa
xchg
mov
arpl
lcall
in
cmpsb
mov
cmpsb
cli
xchg
in
in
mov
mov
mov
fwait
add
mov
sbb
sbb
dec
leave
cmp
mov
jne
sbb
enter
push
lods
imul
lahf
and
push
inc
rcl
clc
aad
or
mov
mov
jp
lods
les
pusha
outsl
in
pop
inc
out
and
mov
jl
cmc
mov
das
lock
xchg
mov
sbb
into
cmp
xor
in
gs
add
pop
or
jmp
clc
adcl
stc
add
rorb
xchg
ficoml
push
and
out
rorb
pop
pop
adc
mov
pop
lock
cmp
testl
outsl
int3
xchg
jge
dec
pusha
ret
mov
in
decb
jb
mov
add
mov
push
div
mov
xchg
sahf
ds
orb
lret
test
jl
sbb
movsl
or
xlat
test
pop
mov
loop
mov
sub
fdivrp
ja
mov
outsl
push
cmp
jmp
xchg
dec
pusha
adc
mov
les
xor
or
popf
xor
imul
leave
loopne
out
in
addl
cli
hlt
repnz
jp
add
or
psrlq
ret
mov
psubw
pop
subb
and
and
dec
in
jle
xchg
aaa
push
clc
pop
pop
inc
lahf
cmp
mov
mov
orl
mov
hlt
cs
jbe
sbb
and
cld
inc
stos
sti
inc
or
pushf
cmp
enter
cmp
dec
xchg
stc
mov
mov
push
xchg
shll
scas
jae
lret
rcll
push
push
xlat
or
and
popa
mov
mov
stc
popf
mov
mov
mov
rcl
xor
outsl
add
mov
mov
fcoms
adc
mov
in
pop
xor
enter
xchg
xor
rol
jge
cli
stos
lret
mov
and
in
xor
sub
pop
mov
adc
dec
je
shll
and
cld
test
sti
cs
adc
dec
mov
dec
pusha
fucomi
dec
cmp
fstp
xor
push
dec
dec
sbb
mov
add
add
add
loop
push
and
in
cmpxchg
push
addr16
out
xor
jo
pushf
add
mov
inc
rclb
fs
in
gs
jg
inc
movsb
sub
test
mov
sbb
mov
cmp
in
xor
cmp
dec
scas
push
fbld
hlt
dec
test
jle
pushf
int3
iret
dec
mov
scas
ret
mov
xchg
repnz
int
jge
out
data16
test
sahf
sbb
popl
dec
pop
aam
scas
rcll
push
les
popf
jmp
test
xchg
outsb
pop
and
shrl
jmp
aam
jb
mov
ljmp
into
cmpl
in
pop
inc
scas
inc
loopne
push
loop
mov
mov
rcl
fistps
pop
sti
stos
xlat
jb
imulb
jae
cli
lret
adc
mov
cwtl
cmpsl
rolb
cmp
jno
ss
pop
jp
adc
lods
mov
pop
pop
test
pop
fstps
sub
insb
cs
sar
fdivl
dec
gs
xchg
mov
out
filds
pop
push
xlat
sub
xchg
jge
insl
dec
inc
out
fiaddl
in
stos
testl
mov
add
fs
jge
test
loopne
adc
jle
mov
andb
push
cmp
movsb
or
or
enter
lcall
cmp
and
sahf
stos
in
dec
push
fs
pop
jmp
push
mov
out
sub
les
aad
test
stos
sub
dec
subl
lcall
mov
aas
mov
sub
stc
cmp
mov
fistps
sub
push
inc
loope
cmc
xchg
lds
dec
std
inc
insl
sub
jno
sub
and
xchg
es
and
std
int
add
adc
jnp
sar
sarb
jp
sarb
pop
es
push
dec
inc
or
les
cmp
push
insl
out
iret
loop
dec
jmp
addr16
das
sbb
call
call
jl
inc
add
mov
loop
call
push
jb
hlt
mov
and
out
dec
fwait
das
and
cmp
or
or
inc
jo
nop
sbb
pusha
insb
decl
insl
mov
jae
call
push
fstpl
push
mov
jbe
lods
rol
mov
mov
in
iret
das
nop
in
repz
push
cmp
adc
cs
xchg
dec
stos
mov
xor
sbb
out
xchg
movsl
bound
mov
push
cmp
xchg
xor
push
pop
jle
lret
xlat
and
lahf
repnz
leave
lods
cmp
shrl
outsb
push
pop
call
sbb
xlat
inc
or
dec
xchg
dec
dec
ffreep
into
xchg
mov
pop
pushf
into
inc
and
and
shlb
ja
sbb
cmc
pop
in
lret
mov
enter
jmp
test
or
mov
fdivs
jne
stos
ret
pop
leave
popf
or
sub
lret
cmpsl
lds
fbstp
xor
arpl
sbb
xor
mov
xchg
and
sbb
jmp
aad
mov
push
aaa
xchg
sub
daa
xor
iret
mov
or
and
stos
arpl
push
flds
ret
jl
inc
jg
fiaddl
fldcw
push
nop
push
mov
mov
jle
lahf
pop
mov
add
in
mov
cwtl
pop
call
mov
movsb
xor
dec
int3
je
push
cltd
or
adc
and
ret
lcall
mov
mov
cltd
in
lcall
adcl
xchg
rorl
jg
movsb
scas
sub
xcrypt-ofb
cmpsl
out
outsl
sub
popa
adc
pop
jecxz
aam
out
pop
sub
mov
iret
sbb
inc
mov
sbb
lods
inc
cmp
inc
inc
cmp
xor
es
mov
pop
into
sbb
or
xlat
out
pop
je
add
push
hlt
imul
ljmp
jmp
movsb
stos
andb
addl
lret
repz
lret
fistpll
js
pop
jle
push
jmp
bound
jecxz
leave
pop
call
inc
inc
and
int
cmpsb
push
adc
jne
lods
inc
or
mov
inc
inc
pop
and
sbb
inc
jb
mov
clc
out
lcall
cmc
mov
ret
es
inc
hlt
pop
mov
add
add
lock
xchg
add
mov
lods
adc
mov
sub
imul
sbb
inc
sub
loop
ljmp
jmp
inc
cmp
arpl
andl
add
out
or
test
sub
cmp
sub
loopne
xchg
pop
xchg
in
test
test
sbb
pushl
xor
add
and
popa
ljmp
idiv
xor
lcall
lock
adc
pop
dec
push
in
add
add
xchg
rcrl
jmp
test
lea
add
and
jmp
jbe
orl
cmp
add
repz
sarb
jne
mov
test
in
ja
and
xor
mov
sub
fcoml
inc
sbb
add
xor
mov
pop
push
dec
mov
lahf
sbb
push
cmpsl
ret
push
je
jle
mov
inc
jns
in
inc
cmp
add
inc
sbbl
add
fxch
adc
jnp
rcll
arpl
popa
decl
mov
and
fwait
imul
pop
jns
pushf
inc
sub
jmp
repnz
dec
inc
fldl
cwtl
movsl
lret
mov
dec
mov
ljmp
testb
sahf
je
jae
and
dec
xor
cld
push
push
outsl
repz
sbb
push
or
dec
vpslld
xlat
or
lods
pop
jbe
xor
xchg
sbb
jb
push
adc
push
dec
je
out
aam
cli
arpl
cli
mov
leave
add
or
loope
andb
leave
or
rorl
adc
testb
cwtl
cld
sub
mov
in
inc
scas
mov
fisubl
cli
loopne
push
fcomps
or
insb
fwait
mov
fucomi
and
adc
aaa
mov
repz
aas
push
mov
or
sbb
or
in
mov
rol
jp,pt
rorl
mov
inc
cmpsl
xor
pop
loop
jno
cld
xchg
loopne
dec
mov
dec
sub
scas
or
lods
xchg
popf
dec
lcall
xor
sahf
xor
jnp
dec
pop
pushf
or
fisubrl
rcrb
add
pop
add
std
mov
cmpsb
loopne
rcll
imul
cmpsb
sbb
mov
sub
into
mov
out
ljmp
mov
adc
mov
xorl
xchg
push
dec
outsb
adc
mov
xchg
ljmp
push
clc
stos
jp
inc
aam
das
cmp
or
cli
or
lock
mov
into
cwtl
fwait
cld
mov
xchg
outsb
js
pop
inc
push
rclb
lea
mov
cmpb
shr
jnp
outsb
into
add
xor
mov
mov
cmp
mov
xor
rorl
jge
inc
popf
aas
les
cmp
popf
pop
movsl
and
out
dec
adc
clc
repnz
rcll
cs
stos
fwait
adc
scas
jge
subb
insl
sti
mov
scas
sub
pop
int
in
outsb
cmpsl
pushf
jg
js
notl
aam
mov
mov
test
repnz
mov
cwtl
dec
or
cmp
cmc
xor
rorl
ds
add
sub
sub
mov
inc
inc
mov
or
movsl
enter
jg
mov
subl
inc
ljmp
push
bound
fdivp
mov
int
clc
cs
mov
xchg
xor
insl
incl
xchg
dec
loopne
sub
pop
fadds
lods
fisubs
jb
or
or
pushf
adcb
xor
test
xchg
or
pop
lea
sub
xor
enter
or
aaa
push
in
jmp
push
adc
out
roll
sub
sar
test
int
fdivrl
fsub
sub
js
dec
jnp
mov
mov
mov
push
fiadds
cmpsl
or
mov
fisubs
pusha
mov
and
cld
dec
cmc
mov
sbb
sub
pusha
adc
fisubl
loop
iret
sahf
sbb
movsl
inc
xor
stos
xor
nop
push
xor
cmp
shll
in
dec
add
jg
ljmp
in
out
add
cmp
or
mov
sub
mov
scas
adc
stos
xchg
ret
ds
sti
xchg
push
in
sbb
xor
cmp
dec
and
add
bound
fstp
insl
popf
leave
fnsave
sar
in
sti
pop
push
lods
pop
in
insl
jl
pop
and
mov
cmc
inc
push
nop
clc
jo
lds
and
pop
pop
push
xor
test
jp
inc
push
and
inc
cmp
inc
clc
mov
mov
mov
and
popa
mov
jne
adc
dec
pushl
roll
ret
and
mov
movsl
push
xchg
xor
daa
loop
cmp
or
lret
stc
xor
xor
or
mov
insb
xor
mov
jl
mov
dec
sarb
arpl
std
pop
push
in
dec
outsl
cmc
das
sbb
ja
jg
std
bound
icebp
push
inc
in
mov
aam
test
dec
adc
push
pop
mov
push
bound
out
outsb
xorl
stc
popa
dec
cmc
rcl
push
subb
xchg
loop
jnp
outsb
mov
sbb
cmpsl
test
fcoml
test
fadds
xlat
adc
stc
stos
fistl
fisubl
pop
mov
adc
xor
sub
push
out
jbe
ret
aad
push
adc
pop
add
xor
mov
stos
insl
leave
add
ja
jecxz
sub
fcoml
jmp
aad
cwtl
adc
mov
ljmp
xchg
sbb
dec
mov
push
scas
dec
xchg
push
popa
mov
xor
les
push
push
insb
test
jl
dec
or
or
xchg
inc
cmp
xor
mov
add
shl
adc
mov
cltd
je
add
mov
mov
sbb
push
stos
ja
pop
mov
cmp
dec
mov
in
enter
pop
out
add
es
cwtl
jno
mov
mov
mov
cmp
imul
xchg
clc
mov
or
mov
in
cmpsb
add
pusha
adc
and
push
mov
mov
mov
out
xchg
pop
adc
push
out
add
mov
lods
mov
mov
rclb
iret
dec
pop
in
lods
test
out
sarb
cs
mov
add
sbb
jmp
out
mov
xchg
push
add
cmp
jp
or
rcr
mov
and
cmp
rcrl
fstpl
jns
insb
mov
out
addr16
addl
iret
inc
pop
ds
mov
inc
out
mov
ss
pop
rcll
sbb
lds
sahf
in
pop
dec
or
rcrl
mov
daa
fadds
je
sbb
imul
shll
js
flds
int3
adc
push
sbb
mov
gs
std
jle
xchg
andb
mov
stos
or
mov
push
mov
cmp
aaa
cmp
sarl
cmp
mov
lahf
mov
in
jl
add
outsb
jge
cmc
adc
pop
xchg
pop
mov
adc
jns
dec
sub
jg
push
adc
or
test
pusha
jl
xchg
lea
xchg
cmp
icebp
cmc
mov
outsl
pop
daa
mul
test
jnp
incb
js
ljmp
repz
movb
dec
rcrb
xchg
inc
sbb
mov
add
out
adc
daa
call
ja
dec
repz
jle
ficompl
mov
mov
adc
and
insl
in
inc
movsl
aas
mov
dec
jb,pt
add
jecxz
imul
clc
into
inc
enter
pop
cmp
jne
int
dec
push
fistl
xchg
cmp
push
out
loopne
stc
iret
cltd
cmp
mov
nop
xchg
mov
push
int
sub
scas
daa
mov
pop
stos
scas
mov
sarb
lods
faddl
dec
fnstcw
outsb
mov
jae
mov
xchg
and
mov
mov
lea
ret
push
popf
or
cmp
add
lock
orb
dec
add
lea
sub
push
push
lea
add
repz
sbb
jle
xor
fs
out
mov
popa
int
mov
test
sbb
testl
jae
stos
stos
fmull
cmp
mov
mov
pushf
movsl
mov
mov
rcll
mov
inc
pop
loop
push
call
imul
inc
jo
dec
adc
movsb
xchg
out
stos
adc
ret
dec
pop
es
pop
mov
lea
inc
push
sbb
lock
adc
add
adc
loop
cwtl
mov
jbe
sbb
sbb
aas
scas
sbb
or
test
data16
xchg
lea
ret
adc
popa
aad
inc
mov
cmc
and
and
scas
es
popa
and
pop
mov
es
xchg
test
cld
sbb
mov
mov
sub
sbb
add
push
iret
xchg
in
xchg
iret
pop
rol
mov
mov
adc
pop
loop
mov
sub
push
mov
sbb
lock
imul
enter
add
mov
iret
or
push
sub
das
icebp
ja
mov
pushf
cld
mov
fimuls
mov
mov
push
adc
call
and
push
xchg
loope
jecxz
and
add
cs
inc
cmp
xchg
imul
mov
cmc
aam
les
mov
aaa
jp
inc
orl
outsb
outsb
sub
loope
pop
ja
dec
xchg
push
push
js
mov
sbb
sbb
jge
ljmp
jecxz
pop
dec
jge
les
xchg
mov
out
sbb
add
pusha
cmpsl
xchg
in
stos
inc
add
sub
fbld
adc
jae
insb
cltd
lret
int
lahf
inc
test
roll
jmp
stos
stc
popa
aad
cs
push
push
sti
pop
cmp
dec
out
mov
mov
ss
jmp
fs
outsl
push
lods
out
data16
movsl
sti
psubq
es
cmp
xchg
fwait
inc
popf
adc
and
ret
pop
aam
jae,pn
xor
ret
popf
sbbl
jb,pt
stos
movsb
movsb
adc
jns
outsl
jge
nop
sbb
adc
data16
adc
jo
jo
fcomps
adcb
loopne
add
push
mov
jecxz
fxch
jp
pop
sbb
lock
push
cmp
aaa
mov
push
or
adc
or
js
xchg
push
test
jo
repnz
fidivrs
xor
aas
sbb
dec
daa
sbb
stos
enter
push
cmc
ficoms
mov
movsl
push
in
push
adc
pop
dec
sbb
or
mov
xor
jp
xchg
sarb
mov
jecxz
cmpsb
loopne
sti
sahf
jmp
push
lret
iret
dec
outsl
xlat
mov
mov
inc
stc
adc
test
loopne
sbb
add
lea
jb
jmp
and
test
add
ljmp
movsb
cld
jmp
call
and
pop
lret
stos
sub
jo
cmpsl
mov
xchg
xlat
jge
mov
out
push
add
sub
dec
push
iret
mov
aas
add
addr16
pushf
inc
loopne
jo
fucom
jmp
test
in
and
mov
mov
mov
scas
mov
in
push
loopne
mov
cmpsl
mov
dec
jg
add
add
sub
sub
and
scas
push
lock
repnz
iret
outsl
inc
in
das
mov
fs
xchg
ret
xchg
aam
cmp
sbb
sbbb
add
pop
mov
cmp
shlb
shl
ljmp
push
loope
add
xlat
pop
ss
mov
xlat
shlb
jmp
push
adc
ja
fisttpll
loope
dec
push
mov
sbb
dec
fldenv
fmulp
imul
scas
lds
xchg
inc
push
jne
jbe
xor
and
in
cmp
pop
jae
add
fidivrl
mov
icebp
insb
scas
push
mov
out
lea
imul
dec
cmp
loopne
push
adcl
mov
out
pushf
or
mov
push
bound
rorb
cmp
insl
lods
or
sub
mov
pop
adc
repnz
test
mov
lahf
pushf
push
mov
jnp
btr
mov
mov
ret
mov
pop
and
push
xchg
popa
sbb
out
andb
stos
icebp
push
movsb
cmp
js
inc
lcall
stos
adc
and
mov
ljmp
mov
xor
dec
mull
iret
mov
fidivl
iret
scas
fisubrl
ret
mov
inc
fildll
inc
push
fldl
and
pop
enter
or
adc
push
iret
xor
adc
ret
xchg
mov
cmp
gs
shl
and
loope
test
mov
mov
mov
xchg
jecxz
mov
lods
test
imul
jecxz
sub
subb
inc
iret
xor
push
inc
imul
pop
pop
loopne
cs
pop
data16
sbb
cs
imul
sarb
inc
daa
or
xchg
dec
lret
gs
push
movsb
jb
xor
out
into
add
rorl
fs
insl
mov
jecxz
push
xchg
push
aaa
push
outsb
xchg
xchg
ss
inc
lds
jp
inc
fldcw
push
mov
jge
dec
jmp
fsubrp
mov
aas
das
js
mov
pop
movsb
iret
in
mov
filds
mov
push
push
xchg
sub
leave
ja
out
push
cmp
shlb
fcmovu
dec
in
enter
mov
in
cmp
inc
negb
test
addb
test
ret
mov
sahf
pop
fisubrl
sbb
into
repz
sbb
in
or
arpl
sbb
jg
js
mov
clc
jnp
pop
inc
mov
xor
in
insl
out
xor
js
cwtl
inc
outsl
jns
daa
icebp
jns
std
repz
lahf
jns
xor
mov
out
cmp
xor
xchg
and
mov
adc
cli
dec
or
pop
shl
adc
adc
xor
outsl
cmpsb
stc
outsl
popa
ja
inc
sbb
xor
pop
fs
mov
mov
pop
sub
push
lods
and
and
aam
jns
fdivrs
nop
cmp
mov
fsubs
stos
add
pop
adc
gs
sbb
pop
pop
sub
sub
sub
xlat
push
rorl
js
sbbl
push
dec
out
push
inc
inc
out
insb
cmp
jno
incl
out
sub
imul
xor
mov
movl
rol
insl
insb
sbb
xchg
mov
push
xor
in
dec
xchg
cmp
movsb
jl
sbb
mov
aaa
and
mov
inc
clc
or
adc
test
repnz
xchg
ror
push
cmpsl
inc
aaa
in
inc
in
xorb
int
pop
aam
mov
and
fiadds
mov
ss
sub
inc
dec
clc
pop
cmpsb
and
sub
pop
lcall
pushf
movsl
imul
fcmovnu
ficoml
sub
lea
aas
push
dec
pop
mov
sbbb
stc
scas
lds
scas
dec
js
in
fisubs
nop
xor
ss
cltd
xchg
xor
lods
mov
repz
adc
adc
int
dec
add
adc
or
push
xor
add
push
cmovs
pop
gs
push
dec
mov
jg
fadds
dec
or
xor
aas
lahf
rclb
cmp
loope
mov
fwait
jae
mov
pop
xor
push
sub
dec
arpl
dec
add
or
stc
and
cmp
jns
ret
jnp
mov
out
jne
push
adc
xlat
xor
inc
and
xlat
adcl
mov
cmpsb
mov
in
push
ljmp
xchg
repnz
pop
in
imul
push
inc
lods
jbe
roll
mov
pop
sbb
inc
jmp
pop
or
in
add
lret
imul
sbb
ret
into
sbb
cmp
jle
rorb
xor
in
imulb
mov
pop
imul
arpl
jno
adc
cmp
jnp
hlt
pusha
fisttps
loop
pop
sti
jge
outsl
lret
cwtl
popf
ljmp
and
icebp
int
jle
adc
rclb
mov
xor
mov
pop
loopne
lretw
xchg
lock
leave
aad
insl
test
mov
repz
out
out
test
leave
push
xchg
pop
movsb
psrlw
sti
mov
fidivs
aam
aas
rcrb
and
jecxz
mov
je
testb
mov
rol
sub
std
ret
shr
repz
adc
popa
lgs
mov
lea
mov
loopne
sbbb
inc
ffree
dec
int3
inc
xor
xchg
faddp
xchg
and
fistpll
mov
test
fstps
shrb
pop
in
lods
xchg
jle
std
out
push
jo
jbe
jns
cmc
fld
pop
jl
sbb
pop
fistl
sbb
mov
jge
lods
sbb
aam
ljmp
das
mov
sahf
xor
movsb
test
mov
xchg
xlat
add
inc
mov
out
sub
rclb
mov
pop
aaa
mov
mov
inc
dec
idivb
adc
sub
out
test
stc
sbb
inc
pop
and
add
mov
out
lahf
adc
mov
adc
pusha
or
xor
push
add
out
incl
movsl
out
in
iret
mov
mov
xchg
jl
ss
mov
inc
mov
jb
xchg
int3
outsl
stos
pop
push
cmpsb
out
jae
or
inc
jle
pop
xor
shl
sub
in
imul
in
popf
std
lcall
pop
fwait
mov
xlat
or
jne
or
jg
pop
add
rcr
fsubrs
adc
stos
popl
add
gs
cmp
mov
es
adc
push
and
xchg
call
mov
gs
rcrb
add
daa
jge
or
pushf
out
cmp
adc
push
jne
cld
mov
aad
pop
jle
hlt
push
or
ja
insl
jno
daa
cltd
fisubl
test
pop
push
sub
mov
and
adc
sub
adc
sub
adc
data16
es
movsl
xor
dec
in
adc
xor
mov
out
sbb
pop
imul
fadd
lcall
sub
cld
cmp
pusha
mov
push
shlb
sbbb
mov
mov
popf
rcrb
jge
xor
inc
or
xor
pusha
scas
or
cmpsb
xor
hlt
jecxz
pop
ret
cmp
adc
in
hlt
aam
mov
fists
push
jmp
pop
xchg
call
scas
inc
clc
jge
jecxz
sbb
cmpsb
or
dec
xor
es
movsb
bound
and
rolb
pop
pop
jo
mov
lahf
or
xor
push
xor
loope
pop
nop
jmp
es
nop
mov
ja
cmp
daa
cmpsl
call
subl
add
jns
fs
repz
aam
dec
dec
dec
inc
xor
enter
cmpsl
push
aaa
or
fdivrp
shlb
shrb
sbb
xor
push
ljmp
lcall
mov
mov
adc
pop
movsb
clc
jnp
or
pop
cmpsb
mov
or
mov
aas
out
mov
pop
out
push
xchg
sub
and
sbb
addl
adcb
stc
pushf
rcll
inc
push
and
cmp
andb
push
icebp
mov
push
es
pop
xchg
sbb
mov
xchg
mov
nop
fxch
sbb
ljmp
mov
imulb
cwtl
into
jne
stc
mov
test
jmp
cmp
xlat
filds
testl
and
mov
loopne
push
rcrl
xchg
mov
add
fs
inc
jle
daa
in
aas
pop
push
int3
jno
out
jae
pop
loopne
lock
out
stc
sub
jg
push
hlt
ja
out
and
sub
jg
mov
mov
add
mov
pop
cmpsb
shlb
data16
test
stc
std
in
out
inc
mov
mov
xchg
inc
movsl
out
jg
pop
orb
and
popa
cmp
and
fildl
popa
push
popa
cwtl
sbb
xchg
sub
inc
popf
add
movsl
cld
ficoml
dec
test
lds
jmp
dec
aas
mov
cmp
push
push
cli
mov
pop
sbb
lods
nop
inc
and
sar
mov
es
ret
xor
pushf
sti
sbb
mov
lret
mov
mov
lods
int3
xchg
fwait
cld
dec
sbb
je
xchg
sbb
push
xor
add
daa
xor
mov
cltd
or
sbb
sub
cmp
xor
loopne
add
sub
pop
dec
inc
adc
mov
mov
push
stc
into
rcll
adc
ljmp
cmp
sbb
jnp
jno
sub
jne
lods
and
jge
rcrl
das
inc
pop
xor
push
flds
adc
and
inc
aam
std
xor
outsl
scas
pop
sbb
inc
mov
in
push
push
fstps
lds
mov
sub
or
pop
push
push
cli
pop
lods
xchg
lcall
push
test
orl
dec
xchg
jl
shrl
jb
movsb
clc
mov
das
jno
into
pop
dec
and
mov
ja
pop
jmp
sarl
lret
jo
or
xchg
fisubrl
cwtl
pop
adc
aas
cmpb
xor
hlt
or
pop
inc
pushf
pop
lahf
pop
dec
sub
push
mov
mov
int
lds
and
ja
repz
sub
ljmp
pop
aad
rclb
outsb
mov
outsl
fwait
ja
loopne
xchg
cmc
add
xchg
sub
movsb
and
or
ffreep
sbb
mov
push
stos
hlt
pushf
and
mov
rclb
sbb
ret
mov
aaa
mov
fisubrl
popa
mov
inc
fbstp
test
cs
mov
or
test
inc
bound
dec
and
ljmp
jnp
es
test
rorb
inc
cmp
push
sbb
imul
insb
js
dec
xor
paddb
and
inc
dec
xor
and
pop
or
shrb
sbb
push
xor
je
xor
jl
movsl
sub
pop
sub
repz
or
push
nop
add
sub
sub
sub
cmp
pop
pop
sub
jp
xor
jb
mov
dec
cwtl
movsb
inc
mov
mov
enter
inc
movsl
in
fincstp
add
cs
sbb
dec
std
in
arpl
xor
sbb
data16
pop
xchg
add
out
into
jge
dec
or
imul
xchg
xchg
or
and
mov
pop
mov
scas
loope
push
dec
xorl
std
pop
adc
sarl
ja
sub
or
sbb
dec
jbe
pop
sub
jae
popa
add
jo
sbb
cs
cmp
push
dec
nop
xor
jnp
adc
xchg
lock
mov
adc
xor
dec
sbb
pushf
pop
fwait
add
test
push
leave
sbb
sub
push
and
mov
fildll
ss
cmp
imul
fbstp
leave
outsb
std
sbb
int
scas
sbb
push
lcall
loopne
imul
lods
movsb
xchg
cmp
or
sar
cld
pop
xlat
movsb
stos
push
mov
pop
pop
leave
dec
mov
jno
xor
test
loope
icebp
and
shll
cmpsl
jmp
outsl
lret
jp
xlat
xor
stos
mov
std
jmp
scas
into
add
xchg
mov
cmp
lret
daa
cmp
xchg
ja
ret
cmpsl
daa
ret
popa
lods
push
test
cld
imul
jle
push
gs
pushf
lods
mov
fmull
lcall
fnstsw
pop
jns
add
shrl
cmp
push
das
test
adc
and
dec
adc
cwtl
jp
mov
push
jle
roll
rorl
ficomps
mov
xor
das
scas
iret
mov
push
push
fwait
cmp
xor
mov
aad
and
ds
out
stos
dec
sub
pop
int
call
test
fsubs
or
mov
pushf
jns
out
mov
add
inc
nop
add
stos
mov
daa
pop
adc
sub
negl
lea
cmpsl
adc
mov
insb
mov
fisttpll
inc
leave
fsubr
enter
mov
mov
lcall
xor
in
mov
fmull
add
inc
aad
es
dec
lret
fwait
dec
mov
mov
dec
je,pn
daa
lret
jns
in
int
shrb
mov
sub
addb
sbb
dec
pop
xchg
pop
xor
loope
inc
in
sbb
mov
push
mov
push
push
je
aaa
int3
push
ret
fadds
inc
mov
sub
out
lcall
inc
stos
push
sbb
dec
lret
lcall
fmulp
adc
inc
sar
loope
sub
ss
pop
or
mov
jo
fs
cs
or
imul
mov
jae
xchg
xchg
sub
mov
xor
jo
sbb
cli
test
jp
add
repnz
rcll
mov
repz
adc
dec
adc
es
arpl
jne
xchg
outsb
push
pop
add
mov
or
sbb
stos
repnz
mov
mov
sub
roll
scas
outsb
pushf
dec
outsl
jg
cli
loope
sbb
popf
adc
pushf
cmpsl
mov
push
idivl
sbb
test
jge
ds
cmpb
enter
jae
add
inc
jge
push
sub
sub
lea
sbb
pop
ret
movsl
xor
add
jmp
xlat
mov
sahf
cltd
call
movhps
and
push
iret
inc
cld
movsl
xchg
jge
xor
xchg
test
loop
and
outsb
pop
adc
push
outsb
stos
imul
xchg
imulb
loop
jbe
jl
imul
fmuls
ds
out
xor
or
les
fcmovb
clc
ret
mov
clc
jb
inc
je
add
pop
cmp
stc
enter
xchg
rcll
push
sub
inc
insb
mov
jo
int
jmp
leave
xlat
call
mov
jb
add
dec
pop
sahf
push
repnz
mov
out
fcoml
mov
sbb
pop
fcoml
in
daa
repz
pushf
shll
jle
mov
jl
mov
or
xor
xor
adc
jbe
loope
cwtl
std
sbb
mov
notl
mov
lcall
repz
push
lock
fwait
mov
aas
in
and
push
cmp
adcl
hlt
subb
and
aam
xchg
inc
test
cmp
or
mov
jns
rcl
pop
popa
sbb
xor
repz
insl
sub
scas
add
cld
movsb
std
adc
rcl
lods
sub
mov
jecxz
mov
or
jae
in
imul
xor
test
out
dec
popa
sbb
addl
fldt
sbb
and
xor
aaa
into
or
mov
xchg
xor
aam
mov
fcmovnb
adc
test
insl
das
pop
sub
pop
mov
fcmovnu
cmp
enter
lcall
outsb
fsubr
sbb
jecxz
orb
sahf
mov
mov
jmp
scas
xor
imul
push
sbb
imul
and
leave
fisttps
addb
push
mov
adc
sbb
jbe
subb
sub
jmp
andb
jmp
jg
and
daa
lea
xlat
daa
jnp
lret
sbb
sbb
lea
jne
cltd
add
rcr
scas
test
jns
dec
js
dec
aaa
add
movsb
pushf
xchg
lret
ret
outsl
xor
call
push
cltd
pop
pop
aam
dec
inc
or
imul
repz
aam
or
shll
xor
dec
rorb
aam
pop
inc
jno
pop
xor
sbb
fsubs
cli
add
orb
arpl
adc
pop
mov
mov
aam
out
add
fisttpl
repnz
pop
repnz
cmpsb
mov
ss
push
stc
mov
pop
cmp
mov
lods
mov
jb
xorb
out
inc
jae
movsb
pop
out
mov
push
jo
and
mov
fs
pop
pop
stos
test
sbb
sti
mov
mov
ss
or
push
je
mov
sbb
dec
movb
mov
lcall
cmpsl
add
icebp
mov
mov
popa
repz
cmp
cs
push
data16
lea
push
fiaddl
pop
add
rcrb
mov
aad
mov
fwait
mov
cmp
pop
dec
xor
xorb
adc
jp
dec
lods
in
mov
pop
dec
jmp
bound
scas
mov
enter
leave
cmp
xchg
mov
pusha
dec
cmp
ret
sbb
mov
push
inc
fsubrl
aaa
enter
jle
cmp
dec
dec
rcrb
test
inc
ret
fisttps
adc
mov
xor
jmp
idiv
add
rcrl
insb
mov
sti
mov
mov
inc
cmp
add
fiaddl
pop
jo
adc
jp
cmp
push
lret
aaa
pop
jnp
lcall
sub
int3
inc
jg
jmp
dec
fdiv
lahf
arpl
sbb
mov
dec
mov
out
in
clc
or
rclb
fisubrl
push
lcall
inc
setl
mov
inc
mov
mov
addl
enter
bnd
rorl
js
flds
pop
fwait
mov
mov
mov
in
dec
jns
cld
nop
xchg
mov
adcb
mov
iret
mov
repz
pop
js
mov
gs
sub
cmp
movsl
jl
xor
call
fs
or
xlat
inc
sahf
cs
fldcw
jmp
sbb
lcall
push
xchg
pop
clc
cmpsl
push
xchg
lock
jo
and
mov
or
test
loopne
and
test
std
movsl
dec
push
sub
xor
and
insl
icebp
insb
lcall
mov
movsb
out
sub
push
add
push
enter
push
jbe
or
stc
or
sub
outsb
or
dec
mov
dec
pop
jl
pushf
je
mov
pop
push
in
hlt
movsl
dec
into
scas
pop
test
xor
add
dec
enter
popa
movaps
xlat
adc
ret
ror
xor
fldcw
lock
or
mov
sub
jg
pop
ljmp
movsl
loop
sub
dec
imulb
jecxz
cmpsl
or
lods
cmpsb
pop
mov
adc
cli
stc
adc
pop
jg
inc
cltd
adc
leave
shlb
lock
sbb
fsubr
add
ss
clc
xor
ljmp
roll
sti
xchg
fsts
int
mov
clc
cmp
sahf
lahf
lods
adc
call
inc
push
or
sbb
icebp
es
mov
icebp
or
pop
xchg
cmp
imul
fcoms
cmp
pop
rcr
push
ficomps
cmp
sbb
sbb
lea
sbb
sub
sub
cltd
adc
push
cltd
mov
pop
add
sub
arpl
adc
stos
loopne
insb
mov
jmp
mov
dec
gs
jge
cltd
stos
mov
movsb
in
jmp
inc
jne
in
std
pop
and
inc
pop
adc
push
mov
scas
xchg
test
popf
cmp
jmp
mov
or
push
fdivl
mov
out
fmuls
lea
pop
or
pop
cld
mov
add
sbb
icebp
cmp
pop
out
mov
push
out
adc
cmp
cmpsb
jl
je
cwtl
popa
popa
mov
push
inc
pop
push
test
mov
pop
add
pop
xchg
aam
jg
fcomp
mov
jmp
addl
or
and
mov
adc
std
daa
scas
cmpsb
mov
xor
es
js
jne
cmpsl
adc
into
xor
stc
xchg
orl
cmpsb
mov
adc
lahf
adc
cmp
dec
js
sbb
popf
icebp
add
pop
out
or
test
mov
roll
push
sbb
fistl
repz
cld
pop
fsubrl
mov
repnz
or
jb
inc
call
sbb
int
dec
ret
lods
clc
nop
movsb
insl
jecxz
imul
adc
loop
push
orl
dec
inc
adc
movb
add
lcallw
cld
scas
repz
adc
paddusb
mov
scas
sub
and
adc
arpl
dec
adc
cs
in
je
sub
call
mov
test
mov
mov
xorl
aaa
aad
daa
fnstsw
stos
ljmp
cmp
xchg
in
int3
adc
inc
push
or
sub
xor
int
stos
shr
test
and
mov
push
je
or
je
push
or
dec
xchg
in
sub
sub
mov
pop
es
lods
push
and
int
mov
insb
lret
and
in
insb
and
gs
mov
stos
mov
jmp
or
mov
in
movsb
mov
jae
addb
adc
cs
cmpsb
pop
into
mov
xor
push
xor
aas
xor
xor
mov
ret
rcrb
push
pusha
lcall
repnz
imul
out
sub
mov
mov
fs
movsb
ret
push
cmp
inc
pop
pop
bound
jbe
scas
pop
pop
test
sub
mov
les
outsl
jns
icebp
out
call
clc
inc
fs
and
inc
out
xchg
xor
mov
inc
fisubl
adc
fstpt
mov
mul
mov
aas
stos
push
lea
mov
mov
adc
fwait
mull
push
fcoml
sti
dec
xor
outsb
pop
clc
xchg
inc
xchg
and
push
rolb
push
fildll
mov
push
pop
xchg
inc
adc
sbb
mov
push
mov
add
xor
fcomps
repz
nop
pop
jecxz
lcall
jne
into
popa
ss
and
mov
push
mov
fdivs
or
stc
push
mov
pop
sbb
mov
in
jmp
push
ds
or
repz
in
jp
movd
jge
push
pop
sub
in
aam
mov
pop
add
push
push
sub
or
pop
fst
repz
imul
xor
push
mov
sub
test
decb
dec
ljmp
push
cmpsl
jae
adc
enter
add
jle
add
push
pop
fildl
cmp
stos
repz
std
sub
cmp
mov
mov
lcall
lods
addr16
test
sub
aas
add
aad
insb
cmp
sbb
inc
and
ljmp
and
cmp
int
into
or
mov
loop
sbb
lods
ret
clc
fs
jp
ror
addl
lret
std
push
dec
xchg
sbb
xchg
in
adc
dec
cmpb
clc
and
iret
jecxz
inc
xchg
jno
pop
insl
pop
xor
xor
jmp
cmc
lds
add
xchg
outsb
cmp
lea
jns
cmp
icebp
inc
inc
cld
popf
cmp
jo
lods
dec
jnp
sbb
xor
sbb
fcmovnb
sahf
dec
and
je
mov
xor
xchg
repnz
jg
xor
leave
outsb
mov
outsl
and
and
xchg
xchg
jmp
xor
outsl
ja
adc
push
sarl
pop
cmp
mov
cs
pop
mov
rep
or
mov
out
test
inc
ja
clc
stos
and
je
cltd
sbb
enter
xchg
xor
out
xchg
sbbl
push
loope
mov
cmpsl
sahf
or
xor
aad
jmp
push
dec
xlat
cmp
fwait
out
rcrb
rcrl
test
lcall
mov
push
lea
dec
xchg
jg
pop
shlb
mov
sbb
adc
pop
icebp
shlb
sti
cmp
scas
mov
and
ret
pop
mov
push
inc
js
add
lods
rclb
mov
ffree
mov
pop
into
repnz
jbe
adc
les
in
mov
mov
add
fidivrs
pop
and
out
add
sbb
push
in
stc
lahf
sbb
test
rcrb
out
loope
lcall
sbb
cs
mov
mov
push
and
in
sub
sbb
xchg
pop
inc
add
ljmp
dec
or
jge
mov
mov
adc
xchg
test
das
lret
xchg
cmpsb
push
aad
mov
push
sbb
in
pop
or
out
xchg
iret
jge
jp
cmp
lea
xor
in
in
inc
outsl
lods
and
mov
dec
sarl
push
xchg
push
shl
pop
movsb
and
dec
fwait
bound
sbb
pop
aad
mov
out
pop
es
insb
bswap
jmp
in
pushf
pushf
cmc
add
and
mov
adc
outsb
mov
push
push
adc
cmp
adc
scas
das
cmpsb
dec
push
push
insl
jns
jge
jecxz
addb
idivb
sub
sbb
ja
cmp
adc
outsl
sub
push
sbb
dec
dec
insl
adc
out
movl
mov
sub
cmp
mov
mov
mov
pop
jp
insb
add
scas
mov
in
add
mov
ds
out
mov
int
into
rcrb
cli
dec
insl
pop
adc
int3
bound
sahf
xor
mov
adc
mov
pop
jb
stos
aad
mov
cwtl
mov
xchg
pop
jge
sub
pop
xor
icebp
sbb
inc
sbb
dec
repnz
flds
mov
sbb
mov
xchg
adc
mov
cli
and
inc
mul
inc
es
adc
mov
add
subl
adc
xchg
mov
sbb
test
xlat
test
pop
movl
mov
shlb
cli
leave
aas
stos
mov
adc
or
rcpps
cld
jmp
xchg
lods
jns
lods
out
negb
leave
sbb
cmp
mov
push
int
cwtl
flds
fisttpll
sbb
add
repz
fistps
shll
imul
push
mov
jl
inc
lcall
push
or
movsl
insl
inc
test
and
icebp
aaa
inc
pop
call
cmc
stos
jp
mov
push
cld
dec
inc
inc
test
mov
jl
cli
jne
xchg
mov
loope
xorl
insb
fsubrl
pop
pop
push
gs
cltd
sbb
mov
leave
data16
es
xor
ds
cmp
lods
lcall
rol
dec
pop
push
out
jp
sbb
dec
pop
jbe
les
fs
loopne
push
pop
sub
mov
mov
xchg
push
ret
stos
imul
fiadds
imul
out
mov
inc
jecxz
mov
cltd
or
xor
lods
rcll
fwait
shrb
xlat
cmp
mov
lock
pop
mov
out
pop
xchg
fiaddl
mov
rcrb
mov
push
nop
pop
sahf
mov
test
lcall
xchg
and
xor
test
sub
pop
push
inc
mov
data16
pop
sub
push
jecxz
pop
push
mov
mov
cmp
prefetch
or
adc
adc
push
mov
jns
cmc
cltd
push
std
push
mov
add
stos
jle
sub
xor
xor
push
je
stos
mov
or
iret
jp
xor
arpl
sbb
pop
sahf
mov
mov
push
push
into
addr16
test
mov
shll
jg
dec
pop
ds
loope
and
sub
imul
out
sbb
mov
inc
into
and
cmpl
and
ljmp
and
sub
cmp
dec
add
into
pop
movsl
loope
add
fsts
mov
cs
loope
and
fs
jge
xchg
dec
mov
lods
push
xor
mov
adc
and
jne
ss
cli
scas
push
in
lahf
frstor
cmp
fldenv
jecxz
pop
jle
dec
dec
int
push
outsl
imul
and
mov
cmp
dec
push
xor
push
xchg
sbb
insl
outsl
xchg
lea
test
popf
jecxz
mov
and
sarb
jmp
lock
sbb
subb
xchg
loope
cmpb
nop
test
pop
cmc
jbe
imul
pusha
movsl
movsl
arpl
add
mov
mov
and
lret
into
faddl
hlt
xchg
xor
mov
pop
adc
adc
test
xchg
jg
pop
adc
jae,pn
xchg
or
xchg
test
cmpsl
pop
xchg
dec
cmp
call
loope
inc
add
mov
inc
mov
push
push
fcompl
rolb
hlt
adc
mov
lds
push
das
push
insb
adc
std
mov
pop
xchg
lea
xchg
incb
mov
pop
int
mov
cmp
arpl
xchg
sbb
fistpll
mov
xchg
push
mov
in
int
aaa
data16
out
push
arpl
je
push
inc
ficoml
push
iret
leave
mov
nop
mov
adc
and
cmp
push
insb
or
into
xorl
idivl
and
inc
jmp
push
push
xchg
sti
cmpsl
inc
or
scas
mov
fsubrs
mov
cmp
mov
cmp
adc
rorb
sbb
sub
clc
dec
sbb
ljmp
out
rol
jbe
pushf
cmp
jl
xchg
testb
adc
xor
pop
xor
push
or
mov
shll
jge
enter
lea
cmp
ficomps
xchg
mov
ds
jp
inc
jecxz
je
xchg
inc
out
adc
jo
dec
xchg
xor
jbe
shll
pop
add
jg
pop
fsubl
cmpsb
sarb
decl
xchg
dec
enter
sarl
scas
push
inc
arpl
jp
fldcw
sub
xchg
jge
mov
dec
mov
cmp
insl
call
dec
je
in
push
xchg
jp
jno
jo
insl
mov
xor
fisttpll
jmp
shlb
pop
fwait
and
lret
out
cmpsl
call
adc
mov
adc
sub
mov
mov
mov
loop
cltd
fcmovnu
lods
xchg
mov
and
lds
jo
xchg
repnz
cmp
and
js
pop
test
ja
aad
les
xor
mov
movl
shlb
aad
jmp
jno
imul
sbb
icebp
test
sti
adc
pop
sub
cmpsb
sub
int
incb
adc
xor
dec
and
data16
add
loopne
leave
rcrb
fidivl
scas
mov
cmc
mov
loopne
leave
mov
pop
sub
fs
popf
rcl
stos
push
insb
movsl
imul
mov
push
and
mov
jbe
mov
pop
jbe
adc
repnz
lret
xchg
mov
or
cmp
xchg
shlb
sbb
arpl
mov
ret
push
mov
push
arpl
rcrb
test
or
add
mov
xchg
es
mov
decl
sbbl
orb
xchg
out
xchg
jecxz
jl
xchg
repnz
xchg
insl
xor
sbb
adc
sub
scas
mov
insb
mov
cmp
ret
sub
push
out
outsb
xchg
rcrb
imull
dec
xlat
cmpsl
jg
jbe
stc
mov
jbe
inc
dec
movsl
jp
mov
in
sbb
dec
xchg
xchg
mov
cltd
mov
shll
dec
es
in
cmpl
cmp
int
jp
outsb
lcall
fimull
mov
jmp
loopne
and
es
push
dec
pop
pop
cmpsl
rolb
inc
or
rcrb
lcall
or
cmp
mov
nop
add
mov
dec
data16
dec
cmp
xchg
repnz
test
sub
xor
and
sbb
pop
fisttpl
test
push
popf
je
jns
inc
or
repz
popa
cltd
inc
xchg
pop
cmp
push
push
mov
adc
pusha
push
inc
jmp
in
xor
pusha
cld
stc
jmp
mov
add
push
sub
adcb
lcall
mov
xchg
test
jmp
pop
xor
bound
cmp
test
fstps
mov
imul
dec
and
fisubs
out
inc
movsl
icebp
adc
fstp
mov
test
into
fs
sbb
inc
aam
fstpt
movl
add
movsb
sub
mov
mov
addb
test
popa
xor
mov
faddl
sbb
pop
cmc
nop
xchg
out
pop
popa
push
push
pop
popf
mov
loop
adc
adc
ret
fistpll
gs
ficompl
orl
nop
lret
cmp
jl
cmp
and
out
mov
andl
imul
xor
or
ret
repz
arpl
popf
and
dec
loop
in
pop
mov
adc
mov
inc
outsb
stos
add
lret
je
sahf
aad
popa
mov
aam
adc
hlt
add
ret
cwtl
lahf
push
xchg
xor
or
push
fcmove
jg
aas
sbb
fprem
add
adc
testb
dec
divl
sarl
mov
lcall
cld
adc
es
mov
add
xchg
fistpl
into
lret
add
jb
push
je
out
jnp
cmpsb
out
or
mov
popf
dec
mov
mov
and
cwtl
pushf
lods
ds
pop
sbb
cltd
inc
mov
and
adc
repz
pusha
loopne
push
dec
lea
andl
and
int
adc
imul
mov
js
dec
pop
cltd
imul
in
push
add
push
jl
sub
cmp
add
jno
std
cmp
popf
test
in
mov
adc
adc
pop
cmp
into
cwtl
sbb
mov
test
aas
sbb
lock
mov
cs
stos
fildl
xor
sub
xor
fwait
mov
aad
jo
std
inc
sarb
movsl
nop
mov
pop
mov
xlat
aas
jp
lock
dec
mov
daa
mov
push
out
push
stc
jnp
xlat
shr
sbb
loop
sub
sbb
movsb
outsl
outsl
xchg
sbb
sti
into
push
pop
jl
inc
bnd
push
add
push
lret
stc
add
lods
adc
insl
jns
flds
jbe
push
push
repnz
inc
shrb
int
out
cmc
popa
mov
dec
cld
jno
in
jne
sbb
jg
xchg
jmp
or
daa
shr
stc
mov
int3
aas
bound
and
xor
sub
lds
out
cltd
and
mov
xchg
fstpt
shll
fldl2t
jmp
mov
or
sub
outsb
lcall
inc
gs
fwait
add
dec
pop
scas
addr16
mov
xor
fwait
lahf
fnstsw
insb
mov
push
jo
cmp
flds
ja
sbb
dec
add
hlt
xchg
or
loop
lea
ret
les
pop
shlb
push
cmp
pop
or
movsb
mov
out
push
adc
sbb
mov
je
std
sbb
icebp
sub
sub
mov
cmovs
mov
push
dec
push
data16
out
std
les
cld
jmp
add
pop
mov
push
and
add
int3
pop
inc
push
adc
or
flds
aas
add
ret
outsl
mov
rolb
sub
nop
insl
dec
std
adc
or
in
inc
shl
lcall
loop
inc
jno
push
cmc
fwait
das
sub
aad
sti
cmp
imul
movsb
inc
es
rol
push
lcall
gs
or
xchg
and
inc
mov
mov
popf
and
roll
out
loope
lods
and
movsb
pop
mov
add
outsb
pushf
pop
sbb
je
xor
adc
xor
rorb
movsb
dec
cmp
lret
je
xor
push
inc
insl
hlt
aaa
std
aad
fidivs
xchg
xchg
push
dec
add
inc
jnp
sub
adcl
aas
or
aam
loop
add
mov
js
into
mov
mov
outsb
ret
jns
pop
insl
adc
rclb
mov
adc
or
adc
xchg
jnp
inc
dec
popa
cmpsl
lock
lock
dec
loopne
mov
lods
out
and
test
aas
mov
mov
gs
stos
mov
not
dec
and
rcrb
mov
mov
insb
call
add
fs
aas
cmc
dec
mov
dec
and
ret
jg
cmp
jle
stos
std
jns
loope
out
mov
lea
fdivp
outsl
push
push
and
or
jb
movsl
mov
fcmove
stos
add
xchg
dec
inc
pop
lock
and
fistpl
test
push
scas
nop
push
sbb
decl
mov
pop
into
lret
stos
xor
test
ret
jmp
adc
or
jnp
cmpl
iret
cs
notl
js
pushf
xchg
pop
fiaddl
loope
and
scas
stc
arpl
mov
xorb
pushf
divl
add
jmp
push
mov
inc
sahf
iret
sbb
mov
jb
sub
inc
mov
sarl
test
rcrl
ret
pop
sub
sub
cli
cld
popa
shrb
scas
rolb
push
pusha
sub
ret
addr16
pop
movsb
jae
hlt
sbb
jmp
mov
pop
jge
pop
jno
mov
xor
in
cmp
mov
mov
mov
add
aam
test
aas
dec
out
lods
jl
sub
jmp
jmp
push
movsb
mov
and
lea
sub
lret
dec
push
add
adc
xor
mov
lret
popa
fimull
inc
inc
shrl
adc
sub
cli
mov
pop
insl
sub
add
insb
pop
dec
xchg
sbb
cmp
pop
pushf
call
out
arpl
subb
out
pop
out
pop
pop
cmc
and
popf
mov
sbb
int
lcall
add
jnp
test
inc
xor
ja
mov
add
sahf
mov
ret
xchg
jo
mov
or
xor
out
movsb
out
xor
push
push
mov
jg
jmp
outsl
mov
pop
stc
iret
xor
mov
adc
outsl
pop
jno
test
into
dec
ret
jmp
mov
mov
inc
push
out
fiadds
jecxz,pt
cmpsl
testl
mov
xor
jno
inc
loopne
mov
xchg
or
xchg
lcall
jl
dec
sbb
sbb
mov
inc
and
sub
fs
lea
repnz
outsl
xor
cli
cli
test
ja
ss
ret
dec
dec
rcl
jbe
pop
mov
lds
sbb
jg
inc
lcall
gs
or
jae
xchg
sbb
mov
inc
push
xor
das
xchg
or
mov
lock
lds
push
loop
push
inc
ror
jp
cltd
adc
popa
test
movsl
popl
push
pop
or
or
sahf
inc
fcoml
cmp
out
in
imul
adc
fs
test
lcall
cmpb
pop
xchg
shl
xor
add
aam
vmaxsd
jge
fists
mov
jb
xchg
push
insb
push
loop
mov
iret
and
addl
push
pop
cmp
bound
jle
dec
mov
lods
in
adc
mov
ficoms
outsb
jp
stc
test
int
mov
push
push
bound
sahf
daa
clc
aaa
and
mov
popa
jecxz
or
cmp
test
jne
insb
rorl
push
fisubrl
pop
mov
daa
cmpl
ds
faddp
loop
and
je
cmpsb
push
jmp
mov
test
mov
imul
test
inc
je
mov
jae
arpl
mov
add
push
jp
icebp
test
xor
test
xor
out
jnp
in
outsl
adc
fdivl
xchg
mov
sub
adc
mov
adc
sbb
or
dec
and
out
pop
adc
cwtl
test
hlt
adc
xor
into
push
jno
jl
punpcklwd
es
push
mov
aam
and
lahf
xchg
dec
cmp
popf
ja
cmp
sub
adc
adc
imul
or
pop
cmp
and
ret
test
mov
out
and
mov
dec
cwtl
dec
nop
jecxz
rcrb
das
in
imul
push
aad
sub
ffreep
jg
add
lock
xor
cmp
cwtl
adc
lret
add
or
bound
sbb
xor
idiv
pop
sub
add
jp
xchg
test
insl
imull
jno
in
add
sbb
insl
sbb
mov
out
adc
sti
fcompl
xorl
push
mov
xor
aaa
adc
mov
mov
ja
xchg
icebp
push
mov
mov
adc
insb
jns
inc
mov
sub
push
push
pop
sub
xor
mov
mov
pop
pop
sti
mov
lds
and
in
mov
in
pop
icebp
sahf
test
mov
and
jbe
add
push
repz
pop
mov
mov
sub
cli
pop
and
sub
and
add
jae
jp
push
lret
or
sub
jp
incb
arpl
stos
call
outsl
in
jmp
adc
jo
rol
sub
sbb
cwtl
jge
popa
std
cltd
or
cli
pop
add
sub
cwtl
mov
fisttps
ret
and
testb
fwait
mov
push
dec
and
and
fiadds
xlat
clc
jp
cmpsb
push
fs
pusha
mov
jmp
ljmp
inc
and
in
jecxz
push
aad
xor
dec
pop
sbb
jns
ds
lcall
pmullw
xchg
dec
in
gs
fwait
sbb
sti
jns
sahf
mov
hlt
loop
add
insb
or
jo
jecxz
dec
jnp
std
cmc
xchg
into
jle
sub
xor
dec
lock
sbb
stc
icebp
push
mov
push
hlt
or
das
fdiv
push
aad
sub
sahf
sbb
mov
sub
pop
outsl
test
fnsave
daa
mov
in
cld
xor
cld
mov
loop
out
dec
cmc
lcall
push
jg
mov
bound
ret
test
add
mov
or
mov
push
xor
add
push
call
into
scas
cmpsb
jl
xor
sbb
dec
fists
test
jo
and
or
or
sub
in
sub
push
lock
in
popa
loopne
jmp
popf
mov
sbb
cmp
rol
push
pusha
sar
mov
mov
out
push
and
pop
sbb
dec
cs
into
push
dec
sbb
and
inc
loope
sti
dec
ljmp
fs
add
and
cwtl
mov
mov
into
jns
popa
lods
mov
push
and
mov
arpl
lret
ljmp
sbb
jl
mov
or
rcr
or
push
inc
fwait
andl
es
ret
cmp
icebp
cmp
fsubr
lcall
popf
cltd
pop
lods
int
mov
jle
daa
inc
dec
jg
pop
xchg
arpl
jle
repnz
sbb
or
jne
out
push
imul
push
fcomi
sbb
cmp
sbb
sbb
int3
and
pop
test
cli
jl
roll
imul
add
lret
adc
mov
subb
gs
cwtl
mov
insb
shll
mov
stos
dec
aad
stos
movsb
aas
xchg
pushf
sbb
test
pop
jae
inc
push
cmp
mov
stos
imul
jle
test
adc
inc
xchg
mov
push
pop
int3
sub
and
inc
adc
dec
jge
addb
dec
jae
insl
popa
xor
jae
pop
test
fcom
mov
bound
movb
test
adc
adc
outsl
popa
mov
mov
mov
sub
stc
cmp
cs
dec
or
inc
add
and
les
cmp
add
or
jg
jle
mov
arpl
jb
jns
gs
fyl2x
mov
sbb
push
dec
int3
pop
add
out
orb
dec
or
sarb
fs
add
push
out
and
cltd
push
ja
add
mov
inc
lds
or
push
mov
dec
jmp
mov
mov
and
enter
sub
lret
lret
jmp
aas
mov
dec
sbb
lods
daa
stos
fnsave
int3
test
shrl
mov
xor
sbb
mov
adc
mov
ja
les
inc
int
rcrb
and
mov
jle
mov
out
pop
jnp
int3
add
std
ds
lea
pop
mov
sbb
xor
jae
sti
out
mov
inc
sbb
lret
imul
cmpsb
ds
mov
push
rcl
repz
clc
push
leave
jecxz
fwait
clc
or
jno
jmp
xchg
push
inc
push
dec
pop
lahf
mov
adc
cmp
cmp
add
pushf
push
xor
jb
repz
js
jo
mov
jo
xor
inc
or
push
aaa
std
xlat
hlt
fimull
jb
das
cltd
movsb
jno
mov
or
inc
xchg
cmpl
scas
jno
je
push
fldt
cmp
sub
ret
std
mov
movsb
rorb
mov
call
adc
in
add
iret
shll
or
insl
inc
pop
decb
xchg
mov
sbb
cmpsl
and
aam
jnp
sub
std
push
test
adcl
imul
cmp
jnp
xchg
cld
movsb
adc
jae
add
lock
xor
adc
jmp
popf
xlat
inc
shrb
clc
adc
adc
test
in
add
das
xlat
outsb
fiaddl
cltd
mov
mov
addl
push
sub
pop
lods
aas
mov
xchg
push
addl
jno
jg
dec
lret
push
arpl
clc
push
and
jmp
jo
sub
rolb
std
push
cli
xchg
rol
shll
xchg
xchg
lea
pmaddwd
gs
ss
call
jns
imul
test
mov
popf
mov
les
nop
stc
xchg
les
sahf
mov
pop
jg
dec
in
out
cmp
pop
repz
testb
test
inc
bound
out
adc
data16
sub
call
mov
push
lock
shlb
sub
mov
hlt
sahf
push
int
or
push
lret
inc
jo
mov
jo
aad
imul
lret
adc
push
push
fucompp
maxps
push
pop
push
lods
mov
mov
push
inc
mov
push
xchg
mov
inc
or
js
dec
xorl
enter
sub
push
stos
insl
int
imull
xlat
aaa
into
jb
jmp
jo
bound
mov
and
pushf
test
popa
dec
lods
clc
fdivr
jbe
shl
xchg
dec
int
pop
sti
xor
pop
mov
ret
dec
sarb
jp
mov
or
push
pop
jae
fstps
and
push
push
xchg
fwait
xlat
push
fwait
push
xor
leave
inc
bnd
sub
ss
vunpcklps
cmpsl
movsb
inc
cmp
int
lods
daa
sub
ficoms
push
xor
repnz
cmpsl
jg
mov
stos
mov
dec
xchg
jmp
cmp
dec
popf
lds
cwtl
lods
rcll
xchg
xchg
jo
mov
push
or
push
sbb
ss
mov
movsb
arpl
inc
std
popf
pusha
pop
arpl
xchg
xchg
imul
daa
sbb
les
outsl
jp
or
outsl
xchg
jp
adc
or
pop
inc
mov
add
sbb
xorl
sbb
popf
xchg
jo
mov
cli
cs
sub
cmp
xor
mov
ret
hlt
dec
lea
scas
je
scas
mov
gs
out
shl
sub
jge
out
add
and
add
test
add
and
adc
insb
leave
mov
push
inc
arpl
adc
adc
ja
fnstsw
and
nop
movsb
pop
fisttpll
mov
and
xchg
lahf
push
scas
pop
push
jl
lods
inc
repnz
push
setge
das
xchg
cwtl
imul
out
std
pop
xor
push
lea
or
pop
les
int
mov
add
nop
idivl
mov
lret
dec
push
mov
or
sub
push
int3
fidivs
inc
loopne
int
lods
xchg
pop
sbb
dec
cmpsl
lcall
mov
std
mov
scas
adc
xor
fildl
cmpsb
push
dec
push
push
fbstp
or
int
and
fidivrs
inc
aam
pop
ljmp
or
movsb
out
mov
ret
xor
lret
test
ljmp
dec
call
repz
rcr
and
iret
sarb
jo
iret
repz
xchg
push
pop
cmp
insb
andb
xchg
lret
cmp
subb
add
dec
popa
icebp
fisubrs
xchg
and
mov
push
clc
test
add
adc
insl
xlat
push
push
rorb
push
or
lret
aas
push
adc
mov
inc
sbb
or
sbb
adc
sub
outsb
sub
sbb
fiadds
das
call
cmp
pop
sub
cmp
xchg
scas
pop
jns
repz
xchg
mov
and
add
pusha
jmp
add
testb
sbb
sarb
xor
repz
cmp
sbb
imul
faddl
clc
mov
mov
lock
inc
inc
mov
pop
in
jmp
jp
pushf
or
repnz
fmuls
rcr
sbb
push
out
xor
pop
xchg
test
gs
push
xor
jmp
mov
je
mov
out
adc
push
cmp
cmp
enter
xchg
mov
adc
test
and
mov
add
test
sti
test
es
popa
pop
rol
mov
test
loope
lea
and
jmp
addr16
dec
mul
jl
xor
jl
mov
cmp
add
lock
push
pop
xchg
dec
xchg
stos
orl
add
push
sbbl
ljmp
shll
lcall
in
add
push
sbb
pop
ret
fsubl
or
jo
cmp
mov
cmpb
push
xor
stos
insb
xchg
aam
push
and
imul
xor
dec
lock
adc
mov
pusha
and
xchg
or
xchg
ds
sub
xor
fsubs
notb
mov
mov
ss
sbb
mov
rcrl
push
add
push
popa
jle
cmp
loope
mov
push
jno
mov
popf
lea
addb
inc
inc
out
cmp
outsb
mov
movsb
ljmp
cmp
scas
and
add
leave
imul
mov
mov
gs
out
pop
sahf
ds
into
cmp
push
inc
mov
and
mov
xchg
fucomip
mov
mov
dec
es
cmp
fisttps
jne
xor
imul
lods
jne
mov
jp
inc
lds
dec
pushf
push
xor
mov
dec
stos
push
sub
mov
mov
pop
push
mov
ljmp
xchg
mulps
pop
out
fnstenv
xor
jo
lahf
xchg
ret
ljmp
mov
stc
cmp
in
mov
call
nop
loopne
or
xor
aam
sub
fcoml
arpl
push
rol
imul
mov
je
jecxz
lret
push
std
pushf
rolb
xor
movsb
pavgw
comiss
loope
mov
int3
loop
and
cmp
es
lret
ficompl
mov
pop
test
or
adc
xchg
push
push
push
jle
mov
dec
cmp
xor
sbb
rcll
outsb
cmp
clc
push
pop
cmp
cmp
mov
imul
mov
imul
sub
inc
leave
rorb
adc
fidivs
divl
sbb
push
xor
push
pusha
mov
pop
mov
icebp
sub
push
decl
or
mov
push
add
xor
pusha
add
outsb
mov
cli
lock
push
imul
stos
leave
mov
mov
and
xchg
loopne
fld
jns
loope
cltd
sti
mov
jg
rep
insl
pop
jmp
ds
push
das
rorb
inc
loopne
xchg
jno
xor
mov
xchg
loope
lock
mov
and
out
cmp
mov
add
popf
js
mov
xlat
out
jb
fmulp
in
pop
xchg
sub
notl
or
mov
andl
push
into
push
mov
add
fsubl
ret
fcom
xorl
loopne
jno
dec
cmc
xor
cmp
stos
movsl
lock
sahf
sbb
fisubl
xor
xor
inc
mov
sbb
fucom
bound
pop
mov
xor
adc
lcall
shlb
and
pushf
stos
icebp
jo
inc
int
or
repnz
je
test
xchg
loope
enter
adc
mov
mov
lock
adc
jae
sub
dec
push
stos
mov
jno
cmp
adc
in
inc
inc
stos
daa
push
sbbb
inc
insl
sub
or
imull
xchg
daa
pushf
add
js
add
into
pop
adc
xor
clc
aam
mov
in
lods
dec
scas
in
sub
or
push
sbb
hlt
test
jae,pt
out
mov
icebp
loopne
mov
xchg
mov
pop
ret
mov
std
push
jbe
or
in
lret
pop
push
test
jmp
js
pop
outsb
in
es
testb
sub
push
dec
movsb
sbb
pop
adc
stos
pop
fwait
mov
fdivr
cmp
and
outsl
xchg
mov
adc
fbld
pop
icebp
scas
mov
cltd
mov
fsubl
out
mov
testb
ds
int
adc
lret
sub
sub
push
sbb
dec
xchg
imul
add
mov
test
mov
rcrl
cwtl
sub
pop
in
popl
lcall
out
and
inc
pop
mov
inc
sbb
xchg
add
jl
push
mov
push
popf
inc
or
mov
test
xchg
ficompl
jle
mov
pop
mov
fs
inc
adc
jae
push
fnstcw
mov
ret
adc
pusha
cmp
inc
leave
jno
mov
into
xchg
dec
mov
push
ficoml
cld
into
pop
imul
cld
ror
mov
adc
mov
dec
push
inc
cmpsb
je
fwait
cmp
ret
xchg
ss
pop
pop
cmp
inc
in
adc
pushf
fmull
lock
adc
sti
mov
jae
mov
ret
mov
sbb
pop
mov
test
mov
mov
cmp
in
cmp
enter
into
arpl
fidivrs
mov
rcrb
les
outsl
adc
inc
xor
pop
inc
push
stos
ljmp
pop
test
nop
jns
loopne
addr16
imul
pop
mov
xchg
addr16
add
aad
jno
xchg
sbb
add
pop
and
lods
iret
push
sti
and
jns
scas
out
cmp
scas
fidivs
das
fnsave
ljmp
mov
cmp
cld
stc
daa
jno
sub
mov
clc
repz
add
mov
adc
push
popf
addl
lds
jnp
hlt
mov
or
data16
ret
pushl
adc
sub
mov
repnz
rdrand
test
and
add
fwait
data16
das
jl
pop
sub
xlat
loope
imul
leave
mov
inc
jno
push
dec
decb
dec
cmp
adc
cmp
mov
into
jp
pop
pushf
cmp
in
js
outsl
cmpsl
adc
sub
bound
pop
add
enter
pop
adc
ja
sarl
mov
xor
sub
adcl
icebp
leave
bound
dec
lahf
movsb
jbe
xchg
xchg
push
enter
aam
jae
std
push
sub
lock
cmp
push
jno
pop
clc
pop
lcall
push
gs
enter
adc
enter
in
inc
ret
and
push
inc
call
sbb
mov
negb
les
stc
or
cmp
mov
dec
stc
stc
mov
jne
dec
aad
sub
popa
mov
xchg
mov
out
push
rcrl
test
test
fucomi
imul
test
pop
cmpsb
mov
xchg
xchg
call
sbb
adc
andb
orb
orb
je
adc
sbb
mov
xor
push
push
mov
fidivs
cmp
push
xchg
flds
mov
dec
call
roll
sbb
sbb
push
dec
jbe
cltd
inc
insb
shrl
je
subb
insl
flds
loop
or
leave
inc
add
testl
aaa
or
sahf
cmpsb
loopne
imul
je
lea
jecxz
dec
mov
fimuls
pop
mov
cli
sub
jmp
xor
fisubl
lret
data16
fwait
mov
xor
aaa
adc
cli
dec
mov
sub
dec
out
js
stos
fisubs
out
dec
loope
cltd
fildll
idivl
xchg
xor
or
mov
inc
out
out
cmp
fldl
jle
sub
or
dec
pushf
fs
rolb
cs
pop
jo
mov
mov
scas
sbb
cmp
fdivl
in
mov
sbb
dec
out
sub
add
mov
add
push
mov
push
js
in
or
cmpsb
lods
test
sbb
cmc
and
aaa
ss
adc
sub
sub
dec
rcl
es
jecxz
dec
pusha
out
sahf
lcall
je
sbb
inc
fstl
loop
inc
and
insl
jg
push
cs
mov
pushf
push
pusha
int3
jp
lock
sbb
faddl
scas
or
pop
popf
push
sbb
push
mov
scas
das
insb
xchg
fidivrs
cmpsl
jno
lret
cltd
pop
mov
movsl
aas
repnz
xchg
mov
mov
call
aaa
add
in
stos
clc
in
mov
adcl
mov
adc
sub
out
repnz
lahf
pop
outsl
bound
cli
xor
je
rol
jnp
adc
loop
sub
xchg
insl
nop
lahf
aaa
je
push
sbb
dec
xor
cmp
pop
cli
sbb
sub
sub
mov
add
out
mov
jne
popf
roll
enter
or
mov
mov
mov
sbb
cltd
cld
ljmp
cwtl
cmpsl
xor
loopne
pop
lahf
hlt
xor
popa
ljmp
adc
bound
insb
cmp
pop
out
jnp
mov
enter
mov
xchg
inc
xchg
cld
mov
mov
shll
loop
xchg
pusha
pop
pop
jle
mov
push
mov
inc
sbb
cli
cmpsl
out
lods
mov
mov
lret
cmpsb
lods
pop
xchg
push
push
add
divb
mov
cmpsb
mov
std
cltd
or
nop
ds
mov
stc
push
lods
inc
fldln2
mov
inc
sbb
and
push
test
in
adc
in
sbb
insl
or
hlt
dec
outsl
fnstenv
movsl
insb
cmp
ja
add
int
repnz
decb
decl
jbe
ds
sbb
jl
pop
sbb
mov
lret
pop
dec
push
push
in
and
or
inc
and
mov
sbb
pop
and
mov
mov
clc
xor
mov
sub
neg
dec
in
xchg
sbb
repnz
xchg
push
pop
mov
cmp
imul
and
aas
outsl
loop
adc
fiadds
mov
lret
adc
cmp
sbb
xchg
outsl
push
mov
and
push
sbb
jnp
and
movsb
jmp
sub
lea
sbb
mov
sub
jmp
int
inc
pop
les
stos
roll
or
ror
or
dec
sub
movsb
lds
lcall
push
aaa
mov
fnstenv
ss
incb
xorb
bound
aaa
jb
ja
mov
inc
mov
sub
aad
xlat
pop
into
pop
sbbl
mov
sbb
lock
inc
inc
mov
insl
roll
scas
adc
mov
fisttpll
rcrl
loope
xor
mov
mov
or
xchg
and
fwait
insl
jp
rcrl
addl
lea
jg
mov
push
sub
pop
bound
push
lods
addr16
adc
inc
sub
inc
sbb
ret
ss
fdivrl
dec
mov
push
mov
lods
and
das
xor
push
ret
cltd
pushl
cwtl
push
jl
jnp
call
mov
dec
dec
pop
pop
dec
cmp
and
add
cmp
push
subl
mov
push
sub
cmc
sub
test
loope
add
mov
pop
sahf
jmp
dec
mov
xlat
inc
mov
stc
mov
aam
push
int3
inc
xor
mov
add
mov
test
and
hlt
out
push
push
jl
cmp
jo
out
mov
mov
mov
pushf
jnp
in
push
pop
mov
outsb
in
fwait
xor
in
adc
sti
dec
bnd
lds
leave
cmp
test
and
in
lods
mov
aas
lret
roll
sbbb
cmc
lret
cwtl
pusha
inc
ds
and
jmp
clc
xchg
jnp
mov
push
jge
movsl
ljmp
stos
in
inc
insb
xchg
xor
xor
test
inc
sti
in
filds
push
pop
mov
repnz
mov
mov
push
divl
mov
movsb
hlt
pop
iret
mov
repz
in
inc
sub
lret
mov
mov
push
mov
xlat
test
xchg
push
orl
sarb
jle
add
inc
sti
ljmp
xor
push
sbb
cs
jno
lret
pop
sub
loop
add
lea
push
nop
jns
jmp
into
jle
into
addr16
movsl
ret
test
popf
in
fcomps
xchg
outsl
aaa
sub
fsubrs
sbb
dec
cld
xchg
pushf
into
dec
cmp
es
inc
adc
jo
jno
lock
sbb
push
jno
fbld
add
sar
lcall
add
fidivrl
xchg
push
jmp
mov
pop
xchg
into
lods
lcall
mov
mov
movsb
sub
mov
aad
pushf
mov
cmpsl
aas
jle
es
sbb
addb
pushf
cmp
dec
int
dec
sub
pop
imul
pop
mov
addl
imul
lock
lods
dec
test
add
pop
dec
lret
mov
push
add
aad
fldenv
push
mov
pushf
and
ret
xchg
lret
cmc
jp
rcrb
inc
cmc
out
int3
loop,pt
add
jno
sti
dec
js
ret
and
mov
push
mov
lret
scas
fs
and
push
cmp
cmp
test
je
inc
sbb
sub
leave
or
scas
ret
aad
pop
xor
test
imul
loop
xchg
pop
push
stos
movsl
cld
push
andb
icebp
fbld
adcl
dec
movsb
sub
sbb
mov
shlb
shlb
mov
jp
fstpl
imul
mov
les
out
jns
in
push
stc
aad
sub
jle
imul
push
push
aam
js
xchg
push
push
sbb
insl
mov
stos
pop
push
mov
lcall
push
popf
pop
fdivs
lcall
pop
push
pop
into
subl
push
ret
jns
add
xchg
mov
add
test
outsl
mov
adc
fnstcw
mov
es
push
inc
out
repnz
push
xchg
sub
cmc
aas
sti
cltd
int3
mov
dec
leave
orl
jmp
xchg
test
mov
add
inc
cs
pop
inc
shrl
push
mov
pop
mov
mov
movsl
inc
pop
and
clc
adc
sbb
jl
popf
inc
ljmp
sbb
lods
fcoms
repz
push
sbb
jo
or
mov
test
xchg
outsb
in
mov
push
mov
push
pop
cli
xor
dec
jp
cmp
test
test
call
mov
outsb
bound
pop
pop
lds
mov
mov
mov
into
lea
jg
pop
inc
pop
cmp
lea
sub
dec
jb
push
mov
jnp
lret
pop
jmp
cmp
inc
out
mov
fistps
sbb
arpl
loopne
jmp
fcmovnu
pop
xchg
xchg
and
sub
dec
mov
nop
and
pop
lcall
mov
lcall
mov
ret
leave
dec
xchg
iret
inc
addr16
xchg
sbb
inc
xchg
dec
mov
pushf
int3
sub
cmp
iret
inc
hlt
add
dec
adc
lds
inc
imul
push
inc
pop
xor
hlt
add
shlb
and
jg
sahf
lods
icebp
or
add
shl
popf
ret
scas
mov
sbb
andl
mov
gs
fldcw
int
das
mov
rcll
call
fsubrp
mov
jmp
add
lods
or
scas
dec
jecxz
adc
jnp
add
jl
shll
fldcw
aam
test
xlat
out
sub
push
sahf
fdivp
inc
or
in
push
lods
insl
cli
out
nop
out
or
out
fmul
cmpsb
out
mov
jbe
and
xchg
cmp
test
test
add
js,pn
test
add
dec
push
xlat
mov
pop
in
push
mov
lock
sub
adc
push
fldcw
pop
sbb
fistpl
int3
mov
add
insb
popf
ss
imulb
pop
push
adc
mov
push
xchg
cmp
push
jne
mov
popf
xor
dec
gs
fistps
sub
and
scas
popa
sbb
push
pop
test
fildll
xor
mov
xor
xchg
aas
clc
mov
out
adc
xlat
push
ret
adc
sbb
mov
sub
push
dec
fidivrl
or
loopne
mov
mov
popa
mov
sbb
bswap
jg
sbb
in
add
xchg
shr
mov
popa
and
and
fdivrl
and
dec
jmp
mov
adc
mov
cld
sub
adc
outsl
cmpsb
xchg
in
stos
jb
push
arpl
ror
adc
into
adc
and
or
lcall
ljmp
movsb
cld
sbb
dec
loope
arpl
xor
test
pop
bound
add
lret
cld
jecxz
pop
das
das
orb
sub
aaa
cwtl
sub
ds
or
cmp
and
push
roll
push
add
sub
push
into
mov
out
or
popa
jmp
jne
outsl
or
push
imul
jmp
movsb
sub
or
fildl
pop
adc
es
in
test
mov
lods
das
ja
inc
xchg
pop
fsts
call
sbb
int3
mov
push
rcl
cmp
into
sub
lret
jmp
jb
cli
decb
loop
push
mov
push
scas
adc
aam
mov
movsb
sbb
mov
into
and
push
mov
cwtl
jmp
push
pop
test
cmp
das
out
ja
add
add
lret
loope
and
inc
add
mov
es
xorl
fists
jns
es
pusha
cld
cmpb
xchg
lret
into
xchg
adc
jno
lods
pushf
lds
jmp
movsl
test
pop
jb
mov
and
xor
add
int3
test
sub
cmp
dec
mov
clc
shll
jle
adc
daa
dec
rcrl
cmp
fs
and
xor
enter
xchg
dec
sbb
lcall
int
mov
into
lods
stos
mov
movb
and
jb
cwtl
push
mov
mov
in
mov
popa
lahf
add
in
inc
test
fcoms
inc
add
lret
mov
pop
or
ror
mov
add
ja
pop
inc
sbb
repnz
mov
mov
and
shlb
dec
xchg
movsl
enter
add
add
repz
in
xlat
or
cmp
xor
xor
mov
bound
xchg
popa
add
inc
repnz
es
icebp
xor
and
ret
cwtl
enter
xor
xor
insl
vpunpcklbw
aam
shlb
popa
mov
mov
pop
jg
push
and
roll
inc
cmpsl
xchg
repz
data16
jns
mov
jno
sbb
cmp
loope
mov
push
or
push
push
int3
cmp
loopnew
add
orl
outsb
sub
pop
aaa
imul
jle
push
pusha
popa
mov
nop
lcall
jnp
jmp
repnz
test
out
cmp
cmp
dec
fsubs
popf
or
xor
popf
fcoml
sub
adc
and
xchg
or
mov
push
xor
dec
xor
fs
push
sbb
adcl
push
adc
sbb
jmp
pop
lds
lcall
pop
movb
pushf
aam
repz
out
out
push
xchg
cmp
scas
js
push
mov
jp
test
add
and
mov
ret
in
repz
jb
jno
stos
cmpsb
mov
jg,pt
mov
mov
jp
fwait
jg
outsb
xchg
sub
js
shrb
leave
lret
jae
mov
inc
insb
cmp
mov
lcall
mov
sbb
push
outsl
inc
xchg
sbb
into
xchg
lahf
popl
insl
incb
pop
and
mov
jecxz
push
pop
jl
push
and
sbb
dec
nop
cli
popf
xchg
and
sub
sub
and
fstpt
out
jne
out
sub
mov
pop
loopne
fwait
insb
xor
xchg
pusha
add
fsubs
adc
adc
mov
fcmovb
mov
sub
push
lea
sbb
pushf
stc
or
jg
xchg
int3
jmp
push
adc
fs
pop
jl
repz
push
add
or
outsl
jg
fstpt
lods
test
xchg
stos
int3
aas
scas
out
test
pop
adc
or
sub
inc
xor
mov
fwait
sarl
call
inc
jo,pn
test
out
and
jns
je
cld
push
and
mov
clc
cwtl
or
inc
lret
je
out
and
cmp
fstpt
call
lret
cwtl
ficompl
inc
test
mov
mov
push
push
enter
sub
and
lock
pop
mov
scas
jno
arpl
mov
fisubrl
push
push
shll
clc
mov
cmp
inc
inc
fnstenv
int
in
fwait
add
rol
mov
arpl
add
add
sbb
inc
mov
xor
mov
pop
sbb
mov
mov
test
jno
ss
add
rolb
in
sti
scas
xchg
sub
rorb
jns
ja
sub
jle
mov
jbe
fildl
fsubrs
dec
xchg
adc
les
dec
push
or
loop
pop
mov
xchg
push
in
push
lret
cltd
pop
lock
sub
push
xorb
add
pop
sub
mov
pusha
inc
inc
sub
in
clc
xlat
add
out
mov
cmpsb
push
or
cmp
pop
jo
fldcw
xlat
pop
in
ret
xor
cmp
mov
addr16
and
addr16
cmpsl
cmp
xchg
push
pop
mov
cmc
inc
loopne
scas
out
out
jl
inc
cmpsb
dec
cld
mov
mov
fiaddl
sub
inc
inc
gs
gs
jb
hlt
push
shrb
das
inc
mov
cwtl
xchg
xchg
jbe
stc
popa
jb
pop
int
aas
aad
leave
popa
mov
ret
add
or
stos
sti
mov
add
outsb
sub
mov
jp
clc
inc
sub
pop
jo
mov
mov
pop
aad
adc
jmp
cmp
fistps
inc
xchg
and
rcrl
jecxz
and
push
xor
ds
inc
and
adc
lcall
dec
fiadds
into
jo
inc
stc
ja
push
rorb
movsl
jns
sbb
pop
test
jecxz
mov
iret
inc
lcall
mov
mov
int3
add
add
cs
mov
sub
cld
aad
shrb
imul
je
adc
popa
sbb
pop
add
imul
in
or
repnz
test
das
lcall
jge
lea
xor
dec
shl
mov
es
incl
fcompl
or
fisubs
jb
add
pop
add
or
test
into
fistpll
xchg
rcrl
into
and
jnp
jle
lods
ja
xor
aam
pop
push
mov
imul
test
push
testb
xor
test
lret
movsb
sbb
mov
mov
add
in
xor
mov
dec
xor
xchg
sbb
pop
jp
fs
sbb
add
mov
insl
mov
stos
frstor
mov
push
inc
in
pushf
aaa
lretw
xchg
inc
or
add
call
cmp
xchg
std
xor
or
shrl
test
dec
push
dec
cmpsb
sub
pushf
out
adc
lret
shrb
adc
push
push
inc
rcl
fcoml
stos
lods
or
call
mov
dec
out
out
inc
dec
scas
pop
test
pop
pop
mov
je
lea
xchg
push
enter
cmc
push
fildl
mov
arpl
shll
mov
lahf
loopne
dec
daa
cld
push
jl
pushf
sbb
mov
stos
and
xchg
sub
inc
xchg
or
pop
testb
inc
mov
outsl
inc
pop
scas
and
xchg
into
inc
inc
lret
xchg
xor
add
dec
dec
cmpl
lcall
repnz
mov
rcr
lds
inc
jl
in
xor
push
sahf
or
or
add
dec
stc
int
bnd
ds
or
popa
adc
or
jo
dec
sbb
jmp
pop
into
fs
fistpl
aas
fdiv
fimull
mov
sub
sahf
scas
jg
sbbl
mov
inc
pmulhw
sub
add
sarb
mov
mov
ja
mov
pop
dec
and
sub
adc
xor
mov
sub
lea
out
inc
fisubl
adc
je
cmpsb
sub
roll
mov
dec
mov
inc
xchg
cmp
mov
je
je
sbb
lods
xor
xor
xor
adc
cmc
jecxz
movsb
lahf
js
mov
test
fldenv
out
mov
mov
cmpsb
xor
ret
or
fdiv
movsb
lds
jae
mov
loopne
add
aam
mov
cmp
shll
jmp
xchg
or
movsb
ja
out
lea
sub
shr
mov
pop
daa
clc
push
imul
addr16
int3
and
cltd
stos
cs
lret
lods
mov
stc
mov
xchg
cwtl
pop
outsb
push
pusha
dec
lds
daa
addl
adc
mov
fld
mov
inc
ljmp
addr16
mov
inc
and
mov
push
sbb
push
or
jae
jb
shll
inc
hlt
repz
inc
fmuls
and
and
pop
iret
xchg
out
adc
in
inc
xor
std
sbb
ss
jbe
bound
enter
pusha
out
dec
mov
es
inc
xor
and
or
outsl
outsl
movsl
pop
cmp
dec
push
test
and
pusha
sbb
pop
push
jae
inc
lods
sar
inc
aas
xchg
sub
in
mov
sbb
xchg
dec
outsl
mov
jns
push
jl
inc
xchg
sbb
rorb
push
rol
je
mov
cmpsb
add
stos
mov
pusha
pusha
rcll
push
cmp
fistps
aad
lcall
cmp
xor
loope
fldt
jbe
cwtl
push
add
mov
jl
shl
xor
jge
fdivs
js
cltd
sbb
and
subb
ret
test
cmp
sub
stos
cmp
dec
mov
cmp
xor
jmp
adc
and
bound
jl
insb
daa
mov
jle
pop
pushw
mov
xchg
dec
push
aaa
push
hlt
xchg
out
pop
rcl
jg
clc
mov
jg
jns
mov
test
dec
aaa
repnz
xchg
sbb
das
cwtl
mov
movsl
adc
jne
push
jmp
sbb
or
sbb
test
addr16
rol
mov
adc
or
sub
loope
or
stc
jl
addr16
adc
push
mov
mov
aad
push
loope
lret
add
jmp
imulb
sub
sub
push
mov
dec
aad
jge
inc
pop
out
inc
jb
lock
adc
cltd
mov
push
lahf
ja
imul
repz
xor
push
pop
loopne
inc
dec
pusha
xchg
pop
popa
add
loope
idivb
notb
push
or
or
ja
dec
lret
std
rorb
lret
addr16
or
push
fimull
les
cmp
jae
aad
les
jge
fmuls
sbb
clc
cmpsb
mov
jmp
inc
mov
int3
fwait
sbb
shll
test
mov
xchg
jns
adc
xchg
adc
call
inc
cmpl
cltd
jp
or
mov
cs
outsb
inc
jmp
mov
lea
out
imul
loopne
dec
sbb
pop
add
imul
lock
adc
or
fsubl
mov
mov
xchg
aaa
popa
push
mov
cld
sbb
xchg
xchg
sub
cmp
dec
fildl
cmc
push
fmull
add
jge
add
sbb
outsb
xchg
add
or
mov
pop
cmp
pop
clc
or
xchg
mov
xor
push
aam
mov
jno
or
xchg
adc
addr16
adc
mov
loope
outsl
decl
push
sub
repz
imull
repz
test
rcll
jno
sbbl
add
mov
out
aas
insl
dec
rorl
jne
sub
xchg
push
mov
jle
test
ret
sbbl
xchg
ds
pop
scas
or
xor
data16
ss
xchg
pop
sahf
dec
mov
adc
sub
mov
lcall
push
and
imull
sbb
cmp
add
pop
cmp
mov
jae
pop
jle
sbb
push
inc
hlt
push
or
jb
adc
push
lcall
adc
sbb
dec
sbb
dec
sub
shrl
pop
movsb
fnsave
adc
push
mov
sbb
mov
sbb
lret
aad
outsb
jne
mov
adc
iret
xlat
mov
lea
add
ffree
fsubs
and
push
pop
dec
mov
xor
ss
xchg
or
cmpsl
out
cmp
cwtl
or
out
test
data16
mov
fsts
mov
sahf
cmp
nop
sbbb
push
ja
in
in
sbb
ror
ds
xor
out
pop
cmp
sbb
fwait
cmp
add
js
jmp
loope
jmp
ljmp
pop
adc
cmp
lock
pop
and
leave
sbb
cmp
bswap
ficoml
icebp
inc
mov
ds
cld
shll
cld
scas
sbb
push
jl
jno
jle
rcll
sub
xor
loopne
data16
insl
fcompl
loope
push
sbb
mov
mov
sub
add
sub
mov
inc
mov
out
out
xor
push
out
jle
push
rorb
in
fnstsw
jno
test
pop
add
pop
jmp
pop
or
dec
mov
loop
hlt
adc
fbld
dec
xchg
inc
xor
jle
leave
cmp
jp
jb
aad
jle
sub
dec
notb
xchg
jne
test
mov
fcmovnu
or
insl
dec
push
xor
or
pop
inc
subl
repnz
jne
inc
aas
adc
les
idiv
add
mov
or
xchg
jbe
mov
jmp
mov
push
test
cmp
mov
push
test
bnd
aaa
jmp
jle
sub
mov
jecxz
loope
div
hlt
ljmp
rcrl
test
jns
jp
or
popa
adc
cmc
and
inc
bound
push
fcomps
cmp
pop
addb
mov
arpl
lret
test
bound
xor
repz
xor
mov
ret
sub
addr16
mov
fxch
mov
adc
test
cmp
jmp
push
shll
and
cld
mov
lcall
jl
pop
gs
jmp
push
or
idiv
fidivl
leave
cmpsl
inc
adc
xchg
xor
in
fisttpll
jb
gs
add
aad
rclb
mov
pop
sbb
push
add
jp
lea
subb
or
cs
std
fidivl
fs
adc
mov
dec
inc
in
les
sub
sbb
in
mov
push
xchg
out
mov
jb
xor
xchg
and
mov
mov
ljmp
adc
imul
adc
fwait
mov
cs
incb
push
cs
add
repz
or
fisubrs
mov
loope
mov
push
or
gs
sub
ljmp
inc
push
mov
push
sbb
mov
mov
sahf
nop
push
in
mov
mov
pop
push
xchg
and
xchg
add
cmp
pop
aas
rolb
imul
mov
mov
dec
mov
inc
add
jbe
inc
in
mov
fisubl
ds
ror
mov
push
lds
sahf
shrl
das
sbb
pop
mov
sub
mov
xor
add
sbb
lods
jns
mov
and
loop
jno
or
xor
push
push
inc
xor
jp
mov
js
and
cmp
clc
xor
imul
mov
cmp
test
gs
mov
movsl
mov
sub
pop
dec
cwtl
lret
out
dec
jb
addr16
or
push
repz
std
jne
cmova
xchg
jbe
cmp
nop
or
pop
or
push
mov
fisubl
and
cmpsb
push
pop
xchg
out
stos
xchg
cs
sbb
mov
insl
lock
lret
lcall
and
adc
dec
idivl
adc
daa
test
loopne
cmp
pusha
inc
inc
mov
adc
mov
ds
fldl
push
movsl
or
dec
data16
push
enter
in
scas
or
out
inc
movsb
jno
pop
sbb
sbb
repnz
std
or
enter
sti
shrb
push
cli
lods
mov
int
lds
iret
lock
nop
movsl
pop
dec
daa
jmp
movsb
pusha
gs
add
stos
insl
jge
js
mov
dec
mov
lahf
cld
or
sarl
ljmp
pop
mov
push
loop
xchg
inc
arpl
cmp
or
or
ds
mov
movsb
jp
in
sub
mov
fpatan
xor
and
in
cmp
rol
xor
adc
push
mov
pushf
push
fs
sub
js
inc
sbb
aas
sub
fs
adc
out
xchg
jmp
rol
jbe
dec
mov
rcrb
shl
mov
pop
movsl
sbb
mov
push
movsb
sbb
call
mov
dec
cmpsl
into
adc
cmpsb
xchg
nop
stos
add
dec
hlt
test
jg
sahf
pop
pop
rcrl
xchg
out
and
test
incb
mov
inc
and
sbb
in
mov
cmp
jb
repz
jne
push
call
inc
jecxz
lahf
and
lods
mov
xchg
lds
into
jbe
push
dec
xchg
and
jbe
imul
call
out
mov
negl
push
add
rcr
mov
mov
sub
sub
jmp
xchg
scas
xchg
not
mov
loop
sub
dec
ficoml
loope
sub
cmp
pop
idivl
mov
add
sub
pop
mov
in
lcall
mov
les
pop
insl
out
mov
fwait
stc
sub
insb
and
and
mov
push
shll
call
jnp
ss
mov
jge
jle
cli
rcrl
add
rcrb
push
mov
leave
dec
sub
insl
fidivrs
cmpsb
stos
std
pop
sbb
sti
call
lods
lea
mov
push
xor
mov
jl
sbbl
adc
sbb
movsb
mov
push
jmp
cmp
sub
cmp
test
dec
pop
loopne
adc
pop
call
jle
xchg
and
out
mov
orl
lds
jb
loopne
jbe
cli
popl
dec
sub
lahf
iret
jge
mov
sti
cmp
mov
lret
add
mov
sbb
xor
dec
call
jbe
loop
add
lods
lods
dec
mov
pop
out
xchg
mov
in
lahf
xchg
or
xchg
scas
mov
xor
adc
cmpsb
pop
xchg
stc
aas
sarb
fs
push
xchg
mov
ss
xchg
mov
orl
test
mov
sbb
jne
daa
mov
jp
cli
push
xor
sbb
push
inc
stos
mov
sarl
inc
xchg
adc
in
cmpsb
stos
mov
sub
or
popf
or
and
lret
xchg
sbb
add
fnstcw
or
repz
jg
jnp
pop
insb
or
stos
jae
or
xchg
add
dec
loope
and
adc
cmp
or
outsl
mov
sbb
adc
pop
cmp
dec
mov
cmp
in
fwait
stc
int3
je
add
mov
divl
pop
pop
dec
orl
mov
and
subl
mov
mov
jo
adc
fistpll
sbbb
sbb
shrl
test
sbb
gs
std
push
cmp
jl
andl
mov
fnsave
rcrb
push
or
ljmp
insl
lret
in
sbbb
pop
es
jo
in
aas
aam
leave
pop
jne
movsb
icebp
ss
loope
aas
push
jo
rorb
inc
scas
movsb
hlt
push
mov
pop
xchg
xor
subb
bnd
dec
test
dec
mov
pop
jae
or
ja
or
sbb
xlat
push
imul
pop
std
das
and
xchg
mov
jne
aas
movsl
jbe
loop
pop
rcrb
es
clc
jbe
xlat
pop
pop
push
idivl
aam
pusha
repnz
repz
inc
aam
sbb
mov
push
shl
imul
ds
cltd
cmp
daa
jbe
mov
push
pop
nop
mov
lods
or
ja
int3
and
mov
inc
cmpsl
icebp
sub
in
testb
xchg
adcb
popf
sbb
cmp
sti
test
ljmp
push
popa
gs
and
dec
aad
adc
xchg
scas
or
inc
ss
ljmp
inc
fs
rcl
sbb
cmp
sub
jle
sbb
sbb
jecxz
jg
into
or
popa
xchg
mov
test
xor
or
repnz
imul
pop
ret
es
shll
xor
sub
mov
jg
fstl
sbb
add
es
sub
ja
jnp
enter
popa
sub
add
cmp
arpl
aam
xchg
nop
fcoml
lock
xchg
cmpsb
adcb
jo
dec
xchg
aas
jbe
ret
shlb
jns
cmovbe
pop
sub
rorl
add
inc
test
fldt
and
mov
and
cmp
cmp
cwtl
stos
roll
mov
sbb
push
ficomps
xchg
mov
dec
imul
enter
dec
mov
or
xchg
mov
fmuls
adc
push
in
mul
push
outsl
movsb
in
sbb
mov
xchg
lods
dec
nop
mov
punpckldq
test
pop
or
stos
sub
jne
mov
and
dec
pop
js
cld
inc
les
mov
cmp
enter
xchg
dec
xchg
cmp
inc
sub
addr16
pop
push
mov
fwait
cwtl
push
sahf
fbstp
or
or
outsb
push
lds
pop
add
popa
pop
fwait
push
sub
loop
lock
cmpsl
insb
loope
jbe
adc
popf
xchg
cmp
enter
or
rclb
mov
inc
iret
jle
sub
push
mov
aas
cwtl
jbe
sbb
mov
jne
and
push
dec
hlt
dec
call
cmc
dec
orl
subb
mulb
mov
das
insb
adcl
ficomps
loop
pop
lcall
or
in
or
sub
fwait
les
cmp
pop
jle
xlat
xor
cmpb
mov
jg
or
cmpsl
test
in
loope
inc
push
cmp
std
stc
ljmp
sarl
dec
pusha
jp
cmovo
mov
mov
ljmp
call
or
and
dec
mov
mov
mov
pop
js
mov
ss
mov
jmp
mov
shrb
ficoml
aad
mov
sbb
jns
pop
rcrl
imul
adc
xchg
inc
pop
in
push
pop
outsb
out
xchg
mov
xor
shll
jg
jo
data16
aas
popf
mov
mov
test
mov
push
pusha
loop
xchg
in
into
sbb
sbb
mov
adc
sub
out
cwtl
inc
jns
or
pop
mov
cld
mov
jg
int3
pop
mov
cmp
push
sti
jp
sbb
push
leave
shlb
leave
outsl
inc
fldenv
mov
ja
add
test
sub
jl
stos
pop
stos
fmul
cltd
mov
mov
pushf
sub
xor
jge
and
cmp
mov
movlps
ret
jp
fmuls
xor
push
fildl
hlt
mov
cmp
movsl
dec
jecxz
ret
sub
jg
adc
push
cmc
xor
scas
xchg
in
lds
jle
push
xor
push
in
mov
pop
mov
jg
lret
aaa
jg
call
shrb
ret
cmp
mov
xlat
pop
mov
push
or
shlb
sbb
fldt
scas
mov
and
mov
mov
jbe
inc
dec
fbld
push
xchg
out
dec
mov
mov
jmp
pop
std
data16
mov
in
mov
push
cmp
xor
jp
into
mov
push
fsubr
adc
fdiv
push
and
push
add
cmp
scas
outsl
or
jg
cmp
push
fwait
dec
idiv
xchg
xor
dec
lcall
jo
mov
pop
inc
mov
and
in
ja
pop
test
rcl
lahf
xor
ret
in
mov
mov
daa
mov
popf
dec
push
jp
dec
sub
cmc
addr16
add
xlat
sub
xchg
push
ss
sbb
into
jmp
push
or
sub
pop
das
in
mov
mov
repz
lock
cmp
fstps
jp
add
arpl
push
arpl
and
xchg
outsb
test
ja
xor
add
dec
mov
mov
inc
add
mov
cmp
adc
loopne
out
sub
jmp
mov
adcl
sbb
dec
push
lock
aam
test
iret
sub
mov
and
cld
xor
ficoms
out
adc
jg
mov
sub
sub
loopne
pop
and
nop
scas
ret
push
and
pop
xlat
xor
and
push
stos
out
adc
cmp
jns
ds
cmp
sbb
pop
fwait
mov
rorl
popa
sub
and
sub
cmp
scas
pusha
fsubr
mulb
mov
pop
fdivl
insb
movsb
dec
rclb
rorb
insl
movsl
mov
xchg
gs
loope
fdivr
fwait
sub
pop
rcll
xor
shll
lock
or
sti
mov
jecxz
mov
mov
sub
mov
cmp
mov
in
sbb
call
cmp
mov
mov
push
loopne
xlat
addb
xor
mov
dec
and
pop
push
jns
jne
jmp
into
xchg
pop
sbbb
adc
lret
push
outsl
fisttpl
push
cli
mov
xor
orb
cmp
popa
push
cs
or
ljmp
pushf
mov
mov
pop
mov
cwtl
rcrl
fistpl
fwait
sub
aam
mov
push
add
add
dec
fidivs
adc
popfw
lret
add
sbb
dec
out
dec
in
nop
fstpt
inc
das
ljmp
pop
nop
mov
cmp
mov
lods
sbb
fldenv
aad
adc
bound
mov
inc
jb
mov
sbb
xor
pop
mov
mov
loope
rcr
push
imul
pop
push
nop
xor
inc
in
loop
mov
shr
fdivp
or
lret
es
cmp
mov
sbb
pop
outsb
mov
inc
push
add
xor
dec
and
cltd
sbb
xchg
cmp
inc
fwait
incb
push
sbb
xchg
xchg
test
add
dec
sti
clc
icebp
jmp
rorl
cltd
or
das
imul
js
push
and
push
jle
push
add
out
lea
call
test
mov
sub
in
sbb
iret
test
outsl
sahf
loope
nop
int
xchg
cmp
mov
aad
inc
outsl
sub
aaa
add
or
cmc
test
sub
aaa
loopne
out
add
mov
dec
cmpsl
cmp
cmp
mov
xlat
std
gs
ffreep
jns
lret
inc
ret
adc
and
int3
jae
jb
adc
fidivrs
mov
sarl
jge
int3
into
ret
pop
shlb
add
mov
cld
jno
das
mov
andb
jle
mov
ret
and
orl
daa
add
adc
fldl
fimull
mov
fadds
aas
cmp
mov
xchg
lds
mov
or
xor
fcoml
loop
jg
push
push
xchg
out
sub
vmovaps
ret
popa
les
dec
adc
out
mov
icebp
fldcw
cs
scas
xchg
pushf
cmc
and
jno
mov
pop
xor
inc
loopne
lea
stos
push
push
mov
mov
dec
mov
jecxz
pop
mov
into
dec
imul
xor
dec
aaa
shl
mov
jns
cld
lods
push
aam
loop
push
enter
sub
dec
jle
jp
sub
adc
cltd
push
arpl
or
xor
pop
imul
mov
adc
rclb
jbe
push
jns
or
sbb
jb
push
adc
mov
shrl
sub
or
xchg
sbb
rolb
push
adc
pop
mov
lret
push
push
lret
ja
dec
scas
aas
xor
cltd
out
mov
fldl
add
adc
imul
das
jns
cmp
arpl
roll
fcoml
bound
lret
mov
jae
pop
lret
rcll
inc
dec
dec
push
mov
sub
cmp
xchg
or
jb
mov
rorl
and
es
or
das
lods
sbbb
int3
push
out
clc
gs
push
mov
stos
dec
rorb
inc
adc
jle
insb
stos
popf
fsubl
jnp
pushf
call
cmpsl
dec
dec
or
mov
popa
xchg
jae
insl
sti
movsl
xor
ja
aam
cmpsb
xchg
in
pop
mov
mov
pop
das
cmp
data16
and
outsb
popa
add
insl
iret
lahf
fstpt
lods
cltd
lahf
pop
jmp
fsubrp
pop
fistpll
into
and
cs
jmp
push
es
cltd
sub
dec
cmp
je
cmpb
pop
xor
dec
mov
fstpl
xchg
mov
sub
inc
push
sub
or
ss
push
mov
scas
mov
dec
cltd
loope
add
pop
jo
cld
xor
inc
mov
popl
sub
mov
xor
pop
or
jmp
mov
scas
je
out
aaa
mov
sub
ljmp
shrb
dec
inc
in
or
notl
fnstenv
dec
jo
and
mov
movsl
mov
std
adc
jbe
xor
lcall
fdivp
sub
xchg
or
repz
test
jmp
jnp
xchg
pop
cmp
ret
push
rcr
lret
and
jbe
lret
or
add
pushf
xchg
jge
mov
sub
mov
or
repz
jecxz
cmp
dec
mov
out
cmp
mov
cmp
divb
add
outsb
cltd
mov
cmpsl
std
dec
xor
clc
arpl
enter
xchg
sbb
xchg
cli
sbb
push
push
jge
aam
pusha
pop
fmul
ret
dec
mov
xor
mov
jmp
jecxz
cs
xchg
add
adcl
jo
xor
push
es
lret
add
push
inc
cmp
and
add
add
push
add
movsl
jmp
sub
xchg
xor
inc
jo
ret
scas
jno
mov
test
jns
rcr
sub
inc
sbb
jecxz
daa
aaa
and
pop
mov
xchg
fucom
mov
cmp
and
enter
int3
cs
add
movsb
loope
ffree
psubusb
fldcw
cld
ljmp
pop
lahf
push
pop
rorl
dec
jno
movsb
or
test
cwtl
cmp
dec
lock
fcomps
xchg
fadd
daa
call
mov
mov
iret
adc
lahf
mov
push
das
xchg
fdivl
sbb
mov
lahf
sbb
inc
test
push
arpl
cmp
mov
xor
adc
lgs
dec
hlt
fstps
aam
jg
pop
cmp
out
fistpll
adc
ss
gs
lcall
dec
je
hlt
sub
jp
and
les
dec
inc
loope
add
outsb
idivb
push
mov
jle
leave
addr16
mov
push
mov
scas
and
lods
push
aas
lret
ret
sahf
xchg
lret
pop
negb
in
mov
jno
pop
pop
leave
and
add
pop
mov
inc
loop
shlb
imul
mov
pop
leave
pop
mov
std
testl
aam
cli
addr16
popa
inc
and
test
sub
add
cld
jns
popa
xchg
outsl
push
xor
mov
aam
je
xchg
mov
stos
mul
mov
mov
mov
mov
scas
mov
add
lret
pushf
and
test
fs
adc
ret
inc
xchg
fcompl
cwtl
mov
out
stos
xchg
test
xchg
pop
jno
xor
mov
ret
imul
imul
push
jno
pop
lods
xor
int
aad
xchg
push
lds
test
mov
repnz
roll
xchg
js
jae
imul
enter
fwait
add
lret
je
sbb
sbb
xchg
ds
jecxz
pop
push
mov
out
mov
faddl
popa
loop
jbe
dec
rep
pop
js
stos
fldenv
push
sub
hlt
ret
aam
mov
pop
fstpt
dec
jmp
test
in
out
stos
and
jp
gs
push
arpl
nop
jmp
mov
test
jo
enter
loope
dec
movsb
mov
lea
repz
in
cmp
mov
mov
pushf
add
fsubr
mov
cs
adc
int
aaa
pop
push
sahf
int3
mov
mov
sbb
pusha
cmpsb
jmp
in
cmp
subl
dec
xchg
lahf
popf
outsb
adc
lods
mov
xchg
int
adc
pushf
fstpl
or
lods
inc
push
gs
or
mov
push
cltd
in
cmpsl
call
cmp
jge
mov
les
push
sbb
mov
lret
fcomi
cmp
mov
daa
jnp
jmp
mov
cmp
xchg
inc
xchg
lods
adc
mov
movsb
cli
aam
cltd
sub
lods
ret
jmp
push
mov
aad
xor
jge
xor
inc
fistl
cwtl
test
dec
lods
into
imull
inc
sub
ljmp
repnz
push
inc
push
pusha
loopne
gs
in
mov
push
sarb
test
sub
sub
inc
ror
movsb
inc
xchg
mov
js
mov
xor
hlt
cld
sbb
xlat
inc
or
repz
add
xlat
ja
inc
fs
das
ljmp
push
stc
ret
dec
jle
subb
das
or
lahf
pop
xchg
inc
popa
movsb
je
pop
popa
jo
inc
cmpsl
push
sahf
xchg
push
inc
outsb
xchg
ret
in
mov
jg
or
xor
mov
or
push
pop
jbe
jle
mov
jnp
jecxz
mov
sub
pop
inc
insl
xchg
and
or
mov
mov
pop
lds
sub
mov
and
pop
ret
aas
jnp
mov
lret
out
imul
aas
sti
dec
xchg
push
cmp
inc
arpl
push
xchg
aad
aad
fwait
rorl
dec
pop
nop
inc
mov
or
and
mov
outsb
fwait
outsl
add
shl
popa
cmpb
popa
inc
fnstenv
or
out
push
js
dec
stos
sti
gs
push
add
fidivs
cmp
mov
adc
or
mov
mov
clc
gs
xchg
scas
sti
mov
lock
xchg
fidivrs
or
and
jo
adc
cmpsl
lods
loope
push
inc
jo
ds
cltd
shlb
and
lods
pop
not
stc
aam
clc
inc
pusha
cmp
ret
fistps
adc
mov
test
xor
sbb
mov
scas
icebp
xchg
pop
cmc
call
mov
sub
xchg
fisttps
iret
mov
mov
inc
and
mov
or
or
sub
dec
ljmp
data16
ret
scas
xor
mov
ret
in
cmp
dec
push
aas
out
push
imul
jnp
or
das
fwait
pop
mov
and
mov
or
mov
pop
scas
es
ja
stos
js
sub
mov
mov
fldt
mov
adc
inc
leave
out
fs
shrl
scas
nop
pop
arpl
cmp
adc
jle
loopne
cmpsb
mov
and
push
mov
and
das
insl
das
pop
mov
dec
ja
lret
fisubrl
add
out
and
pushf
push
xor
add
cvttps2pi
cmp
out
sbb
rclb
daa
bound
mov
sbb
lods
xlat
aaa
xor
test
cltd
je
pop
int
movsl
out
adc
push
or
rolb
daa
lcall
lea
and
xchg
mov
add
mov
arpl
or
aas
sub
jbe
mov
sub
iret
cmp
adc
sub
int
cli
int
push
aam
pop
cwtl
mov
jno
sarl
psubw
adc
mov
xchg
cmp
les
ds
jmp
out
addr16
lret
mov
scas
addr16
dec
xchg
arpl
pop
int3
cmc
sbb
jge
xchg
cld
repnz
mov
add
mov
iret
adc
cmp
adc
and
clc
and
pop
push
push
es
or
xchg
jle
inc
jg
jl
popa
outsb
out
xchg
fwait
sbb
int3
dec
test
pop
arpl
arpl
add
pop
xchg
popa
out
dec
clc
mov
inc
mov
lods
lea
mov
mov
adc
cltd
mov
xchg
int
mov
pop
jmp
cmp
fisttps
lret
sahf
or
jle
jg
cmc
cmc
lahf
cli
xor
sub
sub
loop
cmp
push
out
adc
pop
sbb
push
dec
fsubl
rorb
addr16
or
sbb
sbb
lcall
xchg
mov
lahf
leave
test
jb
push
cwtl
add
aaa
outsb
xchg
stc
adc
adc
push
lods
xorl
movsb
mov
repnz
mov
lahf
pop
fxtract
or
mov
lidtl
push
pushf
and
adc
lahf
cmp
int3
ja
js
push
ss
mov
xlat
and
jno
sbb
cmp
add
mov
in
lds
aas
arpl
xlat
xchg
repnz
fstps
adc
add
sbb
pop
xchg
pop
xchg
cmpsb
xor
push
sub
dec
or
test
lods
or
insb
add
rol
sbb
inc
mov
cmpsl
xchg
jnp
pop
in
fsub
inc
xor
mov
cmp
adc
ss
sbb
push
xchg
es
lahf
lcall
cli
je
fmul
and
or
mov
cmp
mov
insb
and
cwtl
xchg
ja
fdivl
adc
testl
cmpsl
cmpsl
insb
sub
pusha
leave
scas
add
or
lods
repz
xor
dec
adc
mov
push
scas
stos
ror
and
fsubs
ljmp
and
arpl
add
jmp
cmp
inc
aaa
enter
int
cmpsb
push
cmc
outsl
mov
xor
jp
inc
or
inc
std
in
jns
dec
cmp
mov
jne
test
sub
xor
mov
pop
pop
push
jmp
inc
lret
jmp
repnz
clc
xlat
or
ljmp
imul
jb
sub
pop
push
test
adc
xchg
ja
outsl
ficoml
adc
cmp
mov
jecxz
jns
mov
loop
xchg
cs
adc
jl
int
mov
pop
xor
orl
fwait
lods
mov
cld
pushf
das
mov
into
cmp
imul
clc
inc
add
test
cmp
stos
dec
cmp
jge
sub
aaa
hlt
pop
jp
jg
jecxz
lret
jg
and
mov
push
jb
jg,pn
mov
push
es
push
sbb
mov
cmp
popf
jo
imul
inc
dec
repz
es
jg
xlat
lds
sbb
in
pop
call
xlat
imul
repnz
sub
inc
div
dec
mov
and
in
jne
pushf
in
pusha
cmpsb
adc
dec
cmp
addb
out
push
and
es
pop
iret
js
cmp
into
mov
xchg
aas
xchg
nop
dec
mov
mov
adc
andl
jnp
and
pop
mov
cwtl
jae
jp
ja
mov
mov
mov
or
stos
fcomps
in
sbb
sahf
sub
xor
push
cmp
divl
jg
cmp
nop
fldl
data16
int3
mov
mov
popf
sbb
sub
test
decl
inc
out
xchg
inc
xchg
idiv
mov
mov
in
inc
sub
clc
dec
jae
leave
ret
lret
int3
sub
ja
dec
rcrl
jl
in
addr16
or
add
push
lea
or
pop
js
adcb
push
push
int
scas
dec
sub
clc
cli
ljmp
aad
stc
es
or
in
out
and
lods
loope
push
std
xchg
mov
sbb
xchg
out
ficoms
sub
arpl
out
xlat
in
ja
pop
rcrb
test
fcomps
pop
mov
xlat
fcoml
adc
aaa
into
inc
scas
cmp
punpckhdq
mov
addr16
xor
jbe
pop
sub
mov
js
inc
or
xor
jne
mov
insl
out
fcmovnbe
xlat
mov
adc
sub
pop
xlat
and
stos
sub
faddl
or
data16
add
icebp
mov
sub
idivb
test
test
sub
or
out
xchg
rclb
bound
in
xchg
mov
xchg
fcomp
mov
orl
stos
das
popf
loop
sub
fcoms
cs
into
cld
jle
test
xchg
dec
lods
out
aad
int3
fsubl
adc
xchg
inc
outsb
jns
mov
ffreep
or
fisttpl
cld
xor
jg
shlb
mov
mov
inc
pop
dec
inc
add
sti
je
ret
imul
js
pop
mov
push
lods
lret
aaa
xor
arpl
and
test
jnp
rcrb
inc
or
push
cmp
dec
cmpsb
jl
sbb
out
cld
mov
cmpsb
dec
jmp
mov
push
sub
mov
xchg
mov
sub
in
xor
sub
movsb
mov
inc
dec
xchg
test
or
in
cmc
loop
daa
out
lods
jmp
out
mov
test
sbb
adc
pop
jge
sti
push
pop
repnz
xchg
add
or
mov
movsl
and
lcall
push
or
outsl
sub
arpl
fwait
and
add
ss
xchg
push
mov
and
sub
faddp
fs
cmpsb
hlt
mov
insb
mov
xchg
adc
cmpsb
data16
xor
inc
mov
jae
icebp
icebp
pop
cli
std
jbe
mov
mov
mov
mov
sub
sub
jne
mov
lcall
jns
sbb
mov
push
jb
fisubl
repnz
pop
cmc
xor
int
shrb
jb
sarl
js
sarl
test
shlb
int3
jbe
mov
mov
push
stc
loop
rcll
xchg
add
mov
dec
addr16
in
fnstenv
fucom
dec
xchg
push
dec
test
adc
sbb
pop
sbb
jbe
mov
jecxz
pop
les
in
aad
cli
stos
push
add
jl
test
sti
push
jge
sbb
int3
insl
add
ret
sbb
or
scas
cltd
cwtl
fistl
add
or
and
pop
aas
pop
sbb
lahf
popa
sbb
imul
xchg
repnz
sbb
out
mov
push
jecxz
imul
push
add
lds
lock
dec
sbb
dec
subb
sub
mov
stos
add
adc
mov
scas
lcall
inc
mov
jbe
js
daa
imul
xor
lods
sub
test
add
bound
jmp
sub
mov
into
mov
push
jle
aaa
and
movsl
push
xchg
push
lds
push
repnz
cmp
fwait
xor
cmp
iret
sub
push
jg
imull
inc
mov
repnz
cld
lock
in
sbb
jo
scas
or
and
xchg
jnp
call
mov
stos
mov
sbb
mov
jae
add
push
ljmp
repnz
xchg
int
out
nop
and
xor
orl
xlat
pop
mov
popa
add
push
pop
fmul
jne
xlat
jge
fidivl
pop
fisttps
frstor
push
mov
inc
xor
push
xchg
push
ficompl
push
notl
jae
test
xor
xchg
hlt
inc
and
fwait
mov
pop
loopne
imul
dec
jg
jmp
xchg
push
xchg
ja
xchg
cmp
jo
cmp
popa
rcrb
mov
mov
sub
psubw
loop
mov
jg
xchg
or
aas
fmuls
fcmovnbe
sti
jecxz
add
in
shll
cmp
stos
incl
jecxz
sub
jle
adc
fimuls
xor
push
xchg
jmp
out
add
adc
imull
push
movsl
roll
test
call
cmp
pop
or
sub
ret
lds
xlat
stos
sti
sub
sub
movsb
adc
sub
repz
test
adc
aaa
or
mov
stos
fs
pop
cmp
jge
les
push
test
in
pusha
and
and
or
mov
mov
stc
dec
lea
or
sbb
pop
push
out
testb
mov
out
ret
cmp
jb
mov
push
loopne
inc
cli
das
mov
daa
push
loopne
xchg
clc
xor
aad
insl
jb
stos
cmp
sbb
or
dec
fmuls
jnp
xchg
pusha
call
jl
fldl
ljmp
adc
adcl
in
outsb
or
scas
pop
adc
jnp
xor
mov
in
mov
push
jmp
or
inc
leave
pop
cld
movsb
add
aas
sbb
repnz
cltd
enter
jns
outsl
lahf
adc
stc
in
mov
dec
lods
pop
and
pop
popa
ret
mov
dec
dec
push
dec
in
mov
fs
xchg
dec
sub
or
jns
lea
fldt
jecxz
cmpsb
addb
push
adcl
mov
jno
pop
popf
cmp
mov
mov
mov
push
scas
push
shlb
sub
push
jl
push
fcoml
pop
adc
pop
inc
insl
inc
movsl
xchg
xlat
and
mov
lcall
sbb
aad
jecxz
sub
lret
sub
xchg
sbb
and
and
jmp
adc
pop
xor
jns
rcr
push
inc
cmpsl
out
push
stos
xor
mov
mov
sub
fcmovnbe
les
ljmp
arpl
add
dec
in
sub
push
cld
mov
fwait
out
inc
outsb
push
loop
adcl
and
in
sarl
add
xchg
adc
lods
ret
adc
cmp
or
sbb
mov
sub
pop
sub
roll
inc
adc
test
jmp
dec
sti
hlt
shrb
les
xorl
sbb
sub
cltd
pop
idivl
adc
in
insl
sbb
jge
mov
inc
lods
push
or
test
int3
popf
dec
jo
sub
dec
rcrl
adc
lahf
cli
or
nop
jg
sbb
imul
dec
jbe
and
or
movlhps
add
mov
sub
sbb
fs
push
or
shlb
lret
imull
dec
lds
iret
sahf
pop
pop
jo
cwtl
ja
int
sbb
mov
mov
jb
or
jecxz
ja
xchg
xchg
mov
mov
negl
fiaddl
pop
shufps
and
fwait
cwtl
pop
mov
sbbb
ds
mov
adc
in
arpl
stos
xchg
adc
xchg
mov
adc
inc
inc
jle
sbb
leave
mull
rcrb
pop
les
jno
cltd
xchg
test
sbb
pushf
sbb
lods
insl
pop
lcall
inc
loop
mov
fdivs
lret
aas
mov
sbb
lds
push
push
out
dec
outsb
adc
jo
dec
add
aad
adc
sub
dec
push
pusha
adc
dec
sub
cmp
fcmovnbe
inc
mov
pop
and
jns
sahf
adc
fildll
jne
outsb
jnp
inc
and
push
mov
cmp
aam
inc
cld
repz
jbe
xorl
in
test
aaa
jecxz
test
insb
jg
hlt
push
xorb
lods
lds
sbb
jne
adc
dec
dec
xlat
dec
cmpsb
out
push
or
adc
lds
jl
mov
mov
and
imul
mov
js
cmc
add
or
or
sti
insl
jns
popa
fnstsw
sbb
call
push
cmp
rol
sbb
dec
pushf
ja
test
sub
das
mov
add
cmp
ret
mov
mov
das
xchg
xorl
stos
sub
hlt
pop
push
test
iret
sub
jo
daa
push
adc
cltd
loope
inc
dec
sbb
in
xor
jmp
mov
pause
mov
and
sbb
repnz
int
mov
push
int3
je
adc
shrl
adc
scas
popf
dec
es
mov
pop
pop
jae
add
jge
xor
mov
sti
mov
xor
push
sub
icebp
sbb
push
rcrl
push
cmp
jns
jp
ja
sbb
movsb
loopne
cltd
insb
mov
pop
mov
jp
cmp
test
or
jae
and
test
push
jae
aas
inc
pop
pop
jp
data16
rcrb
clc
fiadds
aad
scas
mov
jnp
mov
xchg
dec
push
jecxz
xchg
sarb
sbb
sbb
nop
aaa
sti
fdivrp
lret
loope
sbb
xor
xchg
call
lahf
in
es
mov
add
repz
or
dec
mov
cmovge
and
lcall
pop
or
sub
inc
sub
dec
aaa
sti
mov
clc
and
arpl
dec
cwtl
mov
sub
ror
inc
testl
sub
cmpsl
jne
adc
scas
dec
ljmp
mov
loope
lds
fs
imul
xor
loope
cwtl
sbb
rolb
aaa
xchg
xchg
push
mov
push
dec
mov
mov
inc
fs
jle
mov
push
xchg
cld
add
sub
add
dec
sti
mov
icebp
or
in
incl
sbb
mov
cmp
xlat
mov
andb
in
cmpsb
jns
stc
leave
subb
call
or
add
push
mov
enter
popf
or
xchg
cwtl
js
jnp
mov
aas
inc
imul
dec
ret
dec
mov
sub
std
push
invd
xchg
push
and
jp
xor
mov
out
inc
add
cmpsl
popa
lret
cs
setns
adc
movsl
call
and
mov
adc
ffreep
ret
mov
mov
sti
rcr
mov
cmp
pop
cwtl
pop
loopne,pt
imul
gs
add
push
test
cld
jb
daa
ljmp
hlt
inc
sti
mulb
je
imul
push
mov
test
out
stos
cmpsb
and
xchg
std
pop
das
cld
lret
xor
pop
xor
pusha
sahf
lods
out
mov
add
jmp
sbb
pop
in
fadds
dec
and
jns
mov
fmuls
divl
sbb
nop
out
push
adc
push
insl
dec
shlb
pop
mov
ret
xchg
lcall
xchg
shll
add
stc
enter
cwtl
pop
and
mov
in
push
popf
cmp
sahf
out
or
jmp
mov
aas
add
inc
sbb
andb
mov
xor
in
icebp
int3
or
into
jge
clc
jae
xchg
out
sub
orl
loop
pop
imul
mov
jmp
loop
pushf
or
push
pop
push
js
jnp
cwtl
pop
xchg
jns
scas
add
out
xor
ficompl
popa
adc
fdivrl
lret
mov
push
jb
push
mov
fldt
push
mov
pop
bound
add
xchg
jae
mov
push
jbe
lret
or
push
fmull
loop
cltd
jne
adc
out
cmc
je
mov
adc
cs
xor
mov
add
add
mov
pusha
pop
adc
jle
into
daa
pop
push
mov
dec
push
por
test
cs
adc
pushf
in
jns
cmc
jecxz
jns
lock
adc
aam
cmp
jno
stos
mov
jmp
pushf
lret
sub
and
out
scas
add
and
aad
rclb
mov
jmp
aaa
mov
adc
xchg
imul
int
ss
in
or
int3
and
add
lahf
or
cmc
test
fisubrl
aas
xchg
xor
dec
sahf
mov
insl
cmp
call
faddl
test
mov
arpl
xchg
loop
mov
push
and
stos
mov
aaa
nop
pop
arpl
and
shlb
and
mov
sbb
adc
jmp
popa
outsb
pop
xchg
test
push
lret
and
xchg
ljmp
movsb
inc
scas
cltd
pop
inc
loop
cmp
push
pop
test
insb
ss
js
mov
mov
sub
testl
sub
aaa
cmpsb
in
and
movsb
in
inc
repz
dec
out
dec
xlat
jo
inc
mov
pushf
es
adc
mov
loop
mov
xchg
inc
ljmp
aaa
ret
xchg
enter
mov
fistpl
or
das
out
push
jne
imul
sbb
sub
addl
mov
xchg
adc
inc
cmpsl
mov
loope
arpl
dec
je
cmp
cltd
xchg
adc
iret
pop
rclb
in
js
dec
dec
pop
push
dec
scas
cmp
cs
push
fisubl
packuswb
gs
inc
dec
mov
inc
scas
sub
cwtl
jmp
adc
jmp
int
and
xor
mov
pop
scas
hlt
les
lahf
das
inc
into
jo
shlb
sbb
pop
negl
pop
lea
cmc
inc
xor
lahf
or
in
push
arpl
arpl
out
add
xchg
jecxz
ds
add
cmpsb
mov
stc
xor
xor
test
lcall
ja
cli
jg
jne
jae
leave
pop
jge
dec
xor
dec
rcll
rcr
mov
push
mov
insl
cwtl
mov
or
cmp
cltd
outsl
aam
scas
lret
jecxz
out
add
jmp
pushf
xor
push
je
loopne
je
dec
jb
mov
fisttps
cli
or
mov
push
and
mov
dec
xor
jo
es
and
dec
mov
push
mov
pop
dec
mov
xor
push
mov
movsl
aam
stos
icebp
popf
sbb
ljmp
sub
repz
out
ss
xlat
imul
fs
and
cld
mov
test
aam
jo
jmp
xchg
add
xchg
popa
mov
jb
scas
rolb
xchg
pop
movsl
fcmovb
es
and
inc
shlb
mov
pop
movb
lret
icebp
adc
mov
xchg
mov
and
lahf
icebp
in
insb
xchg
aad
outsl
lock
mov
insb
sbb
aaa
xchg
push
mov
loope
out
clc
lea
ret
jle
jne
es
or
sarl
xchg
mul
xchg
sbb
adc
push
fcoms
setp
adc
jle
pop
jl
stos
xchg
shrb
andb
gs
cli
push
jp
les
stos
push
aam
push
cmp
add
scas
and
cltd
jg
not
pop
cld
int3
and
icebp
stos
add
xchg
idiv
sub
jmp
sbb
adc
cmp
cli
xor
mov
loopne
pfcmpeq
and
scas
clc
aad
not
insl
unpckhps
add
gs
mov
sbb
mov
loop
loop
in
push
movsb
jb
fstl
aas
pop
jnp
enter
fs
adc
add
loopne
loope
mov
cmpl
jbe
xchg
pop
cwtl
std
ficomps
sbb
jae
or
mov
lcall
add
pop
in
mov
sbb
cltd
into
aam
out
xchg
or
stos
jl
nop
cltd
fsubs
push
push
das
mov
lcall
mov
imul
add
fbstp
mov
xchg
test
je
jnp
cmp
sbb
loope
out
lock
xor
push
mov
sbb
sahf
sti
js
adc
cmpsb
xor
lret
xor
test
dec
int
clc
jl
js,pn
inc
aaa
pop
push
lcall
rcll
jae
ss
mov
sbb
cmpsl
insl
mov
in
jecxz
ficoml
inc
out
pop
movsl
fdivl
xchg
jmp
fsts
xchg
adc
xor
lds
or
xchg
and
jg
sahf
inc
jge
bound
pop
inc
xchg
adc
jbe
pop
mov
ja
pop
push
cmp
bound
sub
xchg
xchg
jno
or
pop
ja
mov
or
sbb
push
or
pop
push
and
rorl
shl
jnp
ljmp
sbb
mov
sbb
out
in
pop
add
sahf
lock
imul
ljmp
mov
and
add
in
cmc
jnp
mov
in
lret
inc
shrl
and
mov
cmp
icebp
shlb
push
sub
and
or
push
pop
rorw
andl
add
dec
pop
push
or
jg
testb
xchg
mov
mov
out
and
fcomps
inc
mov
sbb
mov
pop
movsl
mov
pop
fnstsw
lock
push
loope
push
push
mov
leave
xchg
decb
inc
iret
mov
fbld
aam
js
add
xor
adc
jb
sub
and
icebp
sti
pop
adc
jge
inc
xchg
fldenv
js
mov
in
push
add
fdivrs
dec
or
jbe
iret
addl
jb
pop
push
sti
movsl
aaa
mov
add
push
sub
cmp
or
mov
out
add
out
iret
mov
es
fists
cltd
iret
ss
and
fstp
mov
xorb
jle
and
mov
loope
jns
push
jno
les
jmp
shrb
arpl
jo
pop
subb
mov
imul
icebp
loop
jle
fdivrl
push
jno
aad
popf
mov
ss
outsb
arpl
inc
mov
pushf
pop
adcb
and
add
adc
mov
scas
ret
imul
js
call
in
push
xor
lret
ss
sub
gs
pop
pop
ljmp
aas
cmpsl
cmp
out
pop
pusha
sub
mov
jnp
cwtl
and
cmp
xor
pop
fwait
imul
add
leave
and
mov
xor
xchg
sarl
jnp
or
cld
xchg
je
or
sub
mov
jmp
stos
cli
cmp
cld
sub
fcoms
mov
jb
sbb
mov
repnz
lods
or
jno
mov
inc
daa
and
and
loopne
or
inc
dec
rolb
movsb
cli
loopne
jl
shlb
mov
sti
cli
fsubs
outsb
or
sub
lods
inc
jl
movsb
and
sbb
mov
sarb
sub
hlt
adc
popf
sub
call
sub
xchg
hlt
xchg
xchg
or
loope
fiadds
adc
and
mov
dec
xchg
in
in
lds
shll
sbb
adc
add
loope
dec
in
push
pushf
push
fisubl
mov
sbb
push
rclb
lods
addr16
mul
addb
sbb
cmp
cli
fnsave
pop
mov
push
cmp
mov
les
xchg
xchg
pusha
in
pushf
movsb
inc
pop
gs
sahf
into
jl
push
sbb
mov
jp
sub
idiv
insb
dec
push
int
push
icebp
pop
lahf
jno
jno
jmp
fsts
and
and
bound
pop
push
pop
stos
je
push
mov
fsubl
fisttpl
or
adc
or
fdivs
push
fcmovbe
mov
in
scas
mov
test
daa
mov
or
int3
adc
stos
cmp
icebp
dec
jo
mov
cmp
pop
jns
mov
int
mov
loope
push
movsb
dec
loop
push
push
lcall
scas
add
mov
hlt
out
adc
add
stos
pop
ja
jae
incb
or
shlb
call
insb
and
push
mov
and
dec
dec
mov
das
int
adc
jbe
push
push
lahf
pop
cmp
popf
cmp
nop
xchg
push
inc
sti
xor
stos
xlat
push
sub
das
ret
sub
jns
mov
fsubrp
add
mov
xlat
packuswb
sbb
fdivrs
mov
mov
and
xchg
adc
pop
and
inc
mov
in
dec
lods
lahf
pop
xlat
pop
xorl
cwtl
push
call
mov
dec
outsl
movsl
mov
shrl
mov
and
lods
pop
imull
out
dec
mov
loope
inc
pop
in
mul
movsb
call
inc
push
xchg
add
aam
orb
in
fwait
aas
aas
mov
inc
and
jae
push
jae
or
arpl
ret
out
test
dec
jnp
cmp
dec
mov
gs
bndmk
shr
daa
movsl
mov
aad
sahf
sub
jmp
inc
lds
xchg
pop
clc
call
xor
xchg
xchg
ds
pop
sahf
xchg
stc
cld
mov
inc
sbb
call
mov
cmpsl
mov
inc
dec
pop
cmp
xchg
test
and
jle
lahf
mov
dec
xor
mov
decb
mov
push
jno
cmp
and
rcrb
mov
ret
fstl
sti
inc
push
xchg
pusha
jne
shll
mov
push
push
jne
dec
js
adc
fstpl
cmp
mov
sbb
pop
dec
inc
out
or
iret
sub
adc
push
xchg
insl
cmc
ss
mov
mov
inc
aaa
cmpsb
sbb
or
shl
push
testl
mov
icebp
fsub
inc
shrb
fidivs
lcall
push
dec
popa
cmpsb
fiadds
dec
push
wbinvd
or
jns
push
fwait
mov
xor
mov
jl
and
dec
icebp
pop
dec
lods
cltd
xchg
sahf
add
mov
cmp
xlat
out
jne
cmp
pop
cltd
dec
scas
add
aaa
mov
std
jo
xlat
roll
and
inc
jns
mov
pushf
ja
int
dec
jl
add
pusha
sti
repnz
pop
mov
cmpsb
fcomi
or
test
cli
push
test
push
adc
cltd
aad
jle
es
jnp
xchg
pop
mov
out
push
jns
push
test
or
sub
and
sti
push
ret
jge
fists
add
xchg
inc
and
loop
cltd
or
adc
or
adc
mov
push
lods
call
verr
xchg
lea
ret
xor
or
fimuls
mov
popf
dec
mov
dec
dec
ret
hlt
cmc
push
mov
mov
dec
je
orl
popa
stc
test
dec
sub
xor
xor
mov
lret
outsb
std
mov
or
sbb
clc
jcxz
divb
sub
cmpsl
xlat
lret
scas
mov
mov
xchg
mov
inc
je
ficomps
fs
test
push
sbb
in
lahf
adcl
shr
rcll
stos
mov
movsb
out
les
and
mov
fldcw
icebp
bound
lds
lods
jge
test
push
xchg
test
sub
push
mov
insb
scas
sbb
jns
pop
mov
cmp
mov
arpl
in
mov
es
ljmp
loop
pop
ret
mov
jge
or
outsb
pop
shlb
xchg
popf
pop
out
sbb
cmp
sbb
imul
xorb
dec
mov
in
and
dec
mov
out
dec
xchg
ret
dec
shll
sub
inc
pop
jecxz
hlt
and
and
or
pop
loope
jo
ret
data16
jnp
shr
inc
pop
lret
xor
sahf
test
sbb
nop
sti
jbe
scas
xor
dec
leave
mov
cld
lret
jmp
cmp
dec
pop
push
mov
lods
adcl
pop
mov
inc
jnp
cmp
gs
and
mov
icebp
mov
pop
fcoms
test
mov
fs
in
cmp
aas
sbb
sub
mov
mull
pusha
test
int3
add
and
or
sbb
stos
cmovae
adc
cltd
adc
jb
enter
lock
mov
push
cld
insl
mov
xchg
gs
adc
cmp
xor
sbbl
or
add
shlb
inc
fwait
cs
sbb
out
fldcw
mov
in
sbb
xor
gs
jae
in
cmpb
je
inc
fs
sbb
frstor
xlat
mov
popa
js
scas
cmc
mov
pop
jnp
mov
or
xlat
lds
ljmp
pusha
xlat
cli
inc
xor
dec
or
mov
cs
hlt
jnp
popf
aam
add
stc
repz
or
ficompl
pop
inc
and
xor
cmp
mov
sub
add
cmp
add
jb
lods
leave
mov
jae
mov
push
or
xor
add
pop
push
adc
out
sti
es
jp
loope
pop
mov
adc
bound
ficomps
or
fucom
push
inc
aas
addl
or
mov
pusha
fnstcw
push
sub
mov
lcall
in
adc
notb
das
out
repnz
or
fnsave
sbb
in
pop
shlb
adc
jge
fisttpl
fldcw
jle
arpl
mov
ud0
xchg
leave
daa
hlt
ret
in
test
gs
pop
or
dec
loopne
push
adc
mov
lahf
arpl
or
adc
pop
lcall
or
cmp
dec
lods
inc
jnp
test
hlt
pop
fcompl
adc
mov
mov
jmp
repnz
leave
les
jno
ja
fnsave
xor
addr16
and
cmp
dec
jle
adc
and
inc
cltd
cmp
push
push
sahf
mov
xchg
cs
hlt
sahf
ds
leave
xor
or
leave
lcall
xor
push
cmp
xor
loop
xchg
cmpsb
insl
inc
jg
into
and
add
inc
hlt
scas
mov
push
cld
mov
adc
loopne
adc
clc
faddp
repnz
sti
adc
int3
sub
insb
dec
aam
out
fldl
inc
jmp
hlt
aam
jb
sbb
inc
aas
data16
mov
or
ss
pusha
dec
cmp
pusha
pop
pop
cmc
jge
or
out
ljmp
fs
add
and
loope
jnp
pusha
addr16
mov
fmul
lea
aaa
out
or
sbbl
sti
and
test
popf
cmpsl
push
movsl
cmpsl
jns
and
cmp
inc
cli
lahf
pop
add
xchg
push
js
in
jns
or
xor
add
mov
shll
pop
push
test
into
loope
stos
mov
lods
shll
icebp
daa
lahf
ja
sbb
xor
lods
jmp
jl
sahf
flds
add
insl
loop
xchg
repnz
dec
in
jp
imul
jp
out
cmpsl
aam
xchg
call
cmpb
nop
loop
mov
xchg
pop
cmp
mov
add
mov
jns
test
aad
push
nop
inc
fisubrl
fs
add
rorl
int3
xchg
mov
mov
add
cmp
mov
sarb
jbe
setne
fstpt
pop
mov
sub
in
dec
dec
mov
sti
push
xchg
lcall
mov
ds
das
cmp
loope
jbe
std
fisubl
shl
inc
into
scas
in
push
sbb
call
cmp
outsl
shrl
mov
js
cmp
or
xorb
mov
fimuls
stos
mov
movsl
pop
stc
sbb
push
orb
in
dec
or
cmp
pusha
xor
dec
inc
dec
pop
repnz
in
in
lods
cmp
xchg
sub
movsl
icebp
cltd
push
jmp
mov
cmp
and
xchg
out
or
xchg
jno
sub
and
push
aas
cmp
push
jle
movsb
or
add
adcl
in
inc
jmp
mov
pop
mov
decl
dec
sub
sub
cld
ficompl
call
xchg
pop
push
push
xor
pop
clc
inc
fistl
sbb
fmul
imul
push
outsl
rcll
icebp
jl
loope
inc
dec
add
xchg
js
pop
pop
imul
inc
mov
das
scas
es
mov
xor
imul
cwtl
mov
pop
mov
cmp
lods
jne
stos
adc
xchg
xchg
xchg
push
jg
sub
push
push
mov
pop
xchg
mov
rcrb
or
push
add
mov
outsb
sub
icebp
sub
outsb
sub
add
push
lods
fisubrs
sbb
mull
or
adc
sub
sub
jge
cmpb
jne
pop
cld
push
inc
cmp
hlt
cmp
mov
xchg
or
test
insb
mov
mov
pop
dec
add
cmp
mov
mov
jle
cwtl
imul
or
inc
xchg
rol
jle
pop
shlb
lds
int3
mov
cmp
sarl
jnp
fbld
fildl
ret
pop
push
imul
out
mov
lock
daa
add
cmp
insl
pop
fmulp
inc
fwait
mov
lea
jno
jecxz
xor
fwait
notl
or
popf
mov
mov
xchg
ja
and
ljmp
and
cmp
mov
std
xchg
mov
in
sub
sub
sub
and
loopne
ss
mov
out
or
add
add
pop
outsb
add
inc
add
dec
enter
les
pop
pop
sub
xor
rcr
xchg
mov
inc
pusha
and
adc
mov
mov
enter
fbstp
in
ss
mov
in
sub
imul
ficoms
dec
shlb
aam
out
xorb
fmull
popa
or
inc
mov
sti
aas
mov
xchg
inc
jp
add
or
xchg
daa
push
jb
lods
jno
jns
sbb
outsl
ret
xchg
mov
push
lock
repz
insb
sbb
mull
mov
or
sti
and
mov
and
mov
and
stc
addb
and
scas
setns
aam
mov
testb
insb
ja
inc
insl
push
cmpsl
add
rolb
xorl
mov
sub
ss
xor
xor
cmc
insl
sarb
cmpsb
lods
pop
xor
repz
mov
or
pop
mov
adc
mov
push
jne
xchg
repz
and
mov
push
jmp
out
pop
movsl
les
scas
loopne
cmp
adc
xchg
push
mov
mov
stos
pop
icebp
xchg
repnz
xchg
inc
sarl
inc
or
in
jo
inc
rcr
add
lret
pop
in
push
ja
and
in
pop
mov
pop
loopne
sub
lea
test
push
xlat
mov
test
lcall
mov
jl
xor
orb
roll
push
jne
cmp
in
insb
jl
nop
aas
aam
sub
push
call
shr
sbb
mov
push
add
rcrl
jmp
xchg
add
or
inc
in
sbb
nop
mov
cli
mov
stos
flds
push
data16
in
or
loopne
lcall
mov
aad
ret
dec
mov
stos
xchg
cwtl
add
cli
psubusb
jae
addb
int3
lock
cmpsb
cmp
mov
xchg
cmpsb
es
mov
xor
adcl
add
js
xor
lds
dec
xchg
mov
lods
jecxz
xor
pusha
int
sbb
mov
les
cmp
push
or
in
mov
cwtl
popf
lock
inc
hlt
xor
mov
xchg
jbe
xor
xchg
lea
mov
dec
xchg
xchg
xor
stc
pop
je,pn
cmp
adc
jno
cli
mov
or
frstor
not
cld
xchg
cmp
nop
adc
push
int3
cmp
and
pop
out
pusha
mov
sti
fisttpll
add
push
out
mov
mov
xchg
daa
dec
mov
mov
cltd
lods
into
and
imull
fisubl
xor
jae
or
push
mov
inc
push
fiaddl
sub
lret
rclb
es
imul
adc
mulb
ljmp
push
mov
inc
add
into
outsb
and
lahf
mov
subl
cmp
cmp
pop
cmpsl
std
and
popf
sti
add
rorl
scas
aaa
jge
cwtl
fnstcw
arpl
lea
fldl
mov
jo
shrb
and
stos
es
scas
jmp
mov
pop
int
jge
es
inc
or
add
ret
push
cmp
pop
jae
adc
enter
sbb
test
xchg
xor
adc
sbb
ja
lret
cmp
gs
outsb
jp
jmp
loop
adc
fisubs
sahf
xor
push
lock
add
daa
mov
adc
push
cmp
adc
sub
into
xchg
fwait
xchg
push
test
inc
ds
ret
mov
xor
inc
cmp
ret
nop
dec
bound
popa
mov
fs
das
xor
add
inc
cmp
cmp
adc
inc
pop
nop
pop
sbb
jl
cmc
lods
mov
jmp
cmpsb
leave
je
mov
cmc
jecxz
ja
test
jbe
xchg
inc
jnp
fdivrp
mov
pushf
jecxz
lcall
les
arpl
jle
fsub
fildl
lahf
mov
pop
or
lahf
jmp
xlat
jmp
dec
sub
adc
sbb
pop
icebp
clc
aas
movsb
cmc
cmp
pushf
mov
jne
xchg
movsl
mov
lahf
mov
outsb
inc
movsl
insl
sub
lcall
ret
sub
jno
mov
pop
insb
pop
or
add
shlb
sbb
sub
and
idiv
pop
cltd
inc
or
shrl
mov
imul
jbe
adc
nop
subb
mov
ljmp
push
lret
adc
bswap
mov
dec
sahf
xchg
sbb
and
sbb
hlt
pop
imul
adc
jmp
popa
pop
xlat
dec
xchg
aaa
mov
hlt
xchg
jo
test
add
lea
lcall
mov
in
repnz
mov
dec
in
cwtl
popa
shll
sbb
pop
mov
or
cs
imul
push
lsl
ss
mov
dec
add
push
stc
iret
and
pop
shld
aam
fisubrl
xor
std
push
jl
adc
rorb
cmpsb
add
cs
rorl
and
idivl
shrl
pusha
int3
shl
stc
out
imul
ret
test
mov
add
rol
inc
dec
mov
adc
loop
or
mov
jle
xor
jno
and
xchg
push
mov
push
test
int
mov
push
sub
dec
mov
xchg
sub
lds
sbb
xor
jge
pop
es
cmp
cmp
push
mov
mov
dec
cmp
jb
xor
or
scas
sub
cmpsb
or
lret
cmp
mov
rcl
arpl
jl
xchg
rorb
pop
pushf
cld
or
in
jmp
inc
loopne
into
sub
mov
or
mov
and
push
lods
mov
dec
jbe
mov
ljmp
mov
mov
popf
sub
push
or
gs
jbe
cld
push
in
push
xor
lods
ficomps
jmp
pop
mov
je
sub
jbe
or
dec
es
mov
out
pop
mov
push
aam
jle
lret
dec
sub
inc
or
dec
ja
adc
pushf
mov
sub
push
repz
iret
sub
sub
lahf
call
and
gs
fstp
fimull
cmp
insb
into
mov
add
push
out
xchg
mov
pop
rcll
outsb
cwtl
ret
xor
shr
int
and
cmp
mov
fcmovnbe
sbb
bound
inc
xchg
movsl
mov
mov
mov
loope
dec
add
subl
sub
mov
pop
scas
fsubrs
pop
push
and
daa
lcall
sub
mov
add
out
mov
dec
shrb
clc
add
rolb
cmpb
add
pop
xchg
xchg
dec
push
sub
cmc
dec
aad
rcll
or
cmp
call
jo
out
loopne
dec
xor
movsl
int
xchg
pop
sub
jae
insl
fwait
movsl
insl
enter
in
xchg
fcoms
in
test
mov
fs
hlt
pop
xor
mov
sti
popa
js
mov
sbb
movsb
pop
xchg
rorl
and
adc
int
ss
std
aaa
repnz
fnsave
dec
push
and
inc
mov
mov
or
mulb
pop
test
sub
mov
bound
fs
movsb
scas
mov
or
stc
icebp
sbb
jbe
ljmp
xor
adc
subb
cmp
insl
adc
adc
outsb
jne
loope
stc
repz
pop
addb
sub
daa
mov
dec
je
jo
xchg
daa
add
cmc
pop
fmul
fsubs
sub
xor
adc
add
sub
add
outsl
out
imul
push
das
and
pop
js
aas
sub
and
repnz
lods
movsb
test
jbe
ret
into
mov
movsb
loope
mov
jnp
xchg
aam
arpl
adc
inc
aam
mov
mov
aam
sbb
std
dec
hlt
aam
xor
aad
sbb
sbb
push
cmp
jle
cmc
xchg
fnstsw
jmp
inc
movsl
lea
push
ljmp
into
add
xor
dec
xchg
adc
dec
and
mov
mov
or
test
lcall
dec
in
repz
sahf
lret
adc
add
xor
in
push
sarb
lea
push
and
sarb
or
and
or
mov
fsubr
popa
cmp
loope
divl
xchg
add
cs
xor
les
stos
pop
fildll
cmp
ja
lcall
in
dec
outsb
shll
fimull
sbb
or
ja
add
cmc
push
or
xor
jle
mov
jmp
pop
mov
and
hlt
mov
popf
movsb
push
xor
data16
xor
jecxz
jp
je
arpl
aaa
mov
out
xor
sbb
dec
push
or
dec
mov
loop
test
js
sbb
test
xchg
call
sbb
iret
es
pop
mov
sub
out
je
xchg
into
cmp
aam
divl
xchg
mov
sbb
jmp
push
jg
mov
mov
andl
push
mov
xchg
jb
adc
mov
xchg
out
cli
xchg
jl
adc
mov
leave
mov
les
ret
aas
add
loopne
push
out
mov
mov
daa
sbb
call
push
xlat
insb
fdivs
test
cmp
push
sbb
lods
sahf
pop
xchg
xor
sti
push
sbb
idivb
add
sub
push
sbb
inc
cmp
out
aaa
xor
xchg
fwait
pop
sub
bound
push
jno
es
or
call
sbb
std
inc
and
movb
aas
mov
pop
aaa
mov
or
orb
pop
fidivrl
mov
loopne
outsl
or
jno
hlt
insl
fwait
sub
xlat
lods
adc
enter
mov
pop
mov
xor
lds
pop
es
enter
lret
mov
mov
imul
lret
cli
scas
ret
ret
jmp
jp
cltd
cmp
push
loop
fdivrs
xchg
pop
jle
xor
pop
dec
mov
fs
lds
pop
ds
pop
mov
dec
and
nop
int3
pop
outsl
xchg
scas
pop
xchg
xchg
cmc
aaa
sbb
cltd
je
mov
mov
mov
call
es
lock
cmp
cmp
je
rcl
dec
xor
imul
clc
mov
roll
insb
jl
xchg
xor
mov
xor
ljmpw
fimuls
sahf
sbb
jne
call
adc
sbb
mov
or
stos
mov
push
adc
pop
or
mov
push
or
adc
call
mov
nop
cli
movsb
xchg
dec
push
pop
push
mov
sub
pop
shrb
dec
sbb
inc
xor
cwtl
jae
and
inc
bound
and
sub
outsl
cs
pop
and
jno
sbb
and
aam
lds
pop
pusha
in
sbb
cmpsb
lahf
aas
inc
popf
pop
jno
ss
lock
mov
mov
push
dec
xchg
clc
inc
out
loop
in
cmp
ret
and
mov
push
push
mov
jb
mov
movsb
or
push
mov
pop
xchg
mov
and
jbe
push
push
mov
test
jno
push
mov
aas
in
rclb
mov
aas
adc
nop
pop
shlb
movsl
mov
add
pop
and
sbb
js
xchg
cmp
dec
jnp
dec
div
loope
out
jp
and
outsl
jnp
mov
loopne
jo
adc
adc
xchg
dec
int
rcll
mov
addl
push
mov
mov
aad
fcomip
push
and
lret
sbb
pop
ror
dec
test
push
cmp
pop
mov
pushf
xchg
xor
les
rcl
dec
sub
cmpsl
sahf
loopne
xchg
inc
mov
cwtl
push
jno
verr
imul
jp
mov
sbb
popf
jne
jne
jnp
push
and
and
sub
add
sti
ja
jle
inc
sub
les
ret
pop
pop
imul
lds
add
mov
xchg
mov
cmpsl
std
xor
inc
lret
and
imul
pop
frstor
jns
lock
mov
or
jae
mov
cltd
dec
inc
pop
repnz
push
ljmp
adcb
mov
inc
pop
ljmp
cmp
sub
popa
clc
iret
sti
hlt
fcomps
jno
mov
jne
fidivs
jle
jne
push
pop
cmp
pop
scas
jle
xchg
mov
fidivrl
dec
das
xchg
nop
pop
cmpsl
cltd
fcmovu
pop
add
cs
repz
nop
jg
sbb
roll
imulb
cs
sbb
mov
cmp
push
mov
arpl
cli
fidivs
add
ljmp
adc
jns
pop
lods
pop
sti
mov
in
cld
lcall
dec
aas
cmpb
outsb
cmp
movsl
fistpll
out
test
jae
and
mov
fildll
ficomps
ja
xchg
mov
mov
mov
mov
xor
imull
cwtl
cmp
pop
push
sar
addr16
gs
add
repnz
icebp
inc
mov
xor
div
movsl
sbb
mov
rcll
mov
jne
ret
push
sbb
mov
sahf
sahf
test
hlt
cmp
push
mov
in
push
mov
out
sub
mov
xchg
sub
aaa
sar
and
popf
or
imul
sar
fistpl
leave
fisubs
ds
push
scas
cmp
cmp
test
or
add
outsb
dec
push
popa
andb
imul
push
pop
mov
dec
int3
leave
mov
dec
push
or
mov
xchg
adc
in
stc
aas
adc
mov
sarl
idivl
sub
sbb
out
decb
sub
mov
xchg
aam
push
inc
imul
adcl
lret
arpl
lock
adc
mov
xchg
xchg
aas
mov
cmp
push
jg
xor
xchg
lret
push
push
insl
sbb
xlat
inc
dec
ret
aad
xchg
xchg
xlat
inc
out
mov
movsl
push
or
jae
adc
xchg
jmp
lea
cmp
inc
in
jns
imul
iret
call
or
push
add
sub
and
pop
adc
jle
sahf
xchg
xchg
adc
sbb
cmc
icebp
ret
push
jecxz
mov
xchg
rcrl
inc
lret
nop
in
andl
jecxz
jle
mul
mov
jge
adc
mov
and
sbb
xchg
nop
sbb
icebp
push
cmpsb
negl
bound
jle
add
mov
notb
or
mov
subl
push
sbb
mov
or
popf
hlt
dec
push
rol
pop
shl
fdivrl
in
in
add
mov
ja
dec
mov
insl
shr
out
mov
int
jae
inc
sub
jno
outsb
out
pop
fs
mov
ror
sar
in
std
xchg
pusha
pop
in
int3
push
lods
pop
mov
shlb
leave
mov
clc
pusha
mov
popa
lret
scas
add
iret
push
pop
in
xor
mov
cld
pop
test
test
fsubl
jp
sub
cltd
fstl
in
insl
adc
cmp
shl
xor
jl
push
in
lock
push
aam
inc
jg
lods
fisubrs
jb
hlt
adc
pop
cwtl
mov
and
shrl
jecxz
je
in
movsl
sbb
mov
xchg
xor
fnsave
push
push
cmc
sbb
mov
push
sbb
sub
mov
loop
arpl
out
int3
or
jp
add
aaa
adc
pop
les
outsl
cmp
pop
sbb
in
ret
or
sbb
mov
mov
jg
cmp
sbb
bound
xchg
insl
fiaddl
pop
inc
mov
xor
xchg
pop
lock
ret
cld
or
jg
adc
xor
jle
sti
into
roll
insl
and
inc
sub
xchg
pop
dec
test
repz
out
mov
mov
mov
movsl
out
and
sbb
mov
pop
inc
jb
cli
es
aas
cmc
add
int3
sub
jno
stc
mov
dec
and
aaa
loope
pop
arpl
fs
xchg
cmp
out
icebp
sarl
add
popf
push
fwait
pushf
add
clc
lods
sbb
mov
pushf
push
divb
call
inc
mov
stos
push
cs
adc
cmpsl
pop
into
imul
lret
sub
or
pop
cmp
in
jmp
dec
xchg
push
lds
xchg
jns
mov
xchg
pop
adc
lcall
pop
mov
movsb
out
stos
outsb
dec
jmp
mov
aam
pusha
enter
and
lea
call
jae
repnz
add
cwtl
scas
fidivrs
rol
xchg
or
test
idivb
ja
int3
mov
div
or
in
andb
lea
shr
add
repz
rep
aas
inc
imul
les
rorb
and
test
dec
insl
or
push
adc
mov
mov
lret
aas
add
pop
mov
es
test
inc
in
dec
jo
lds
push
push
andb
insb
inc
xor
cmp
pop
xchg
mov
enter
popa
sbb
push
xchg
mov
stos
in
mov
test
aam
pop
inc
stc
dec
int3
cmp
mov
loopne
cmpsb
lods
mov
fnsetpm(287
test
rep
into
ja
imul
cmc
cmp
push
shll
and
mov
pop
pop
inc
cmpsl
pop
push
push
rclb
shlb
ds
add
add
adc
sbb
loope
pop
cmp
jmp
fistpl
xor
sub
jmp
mov
stc
inc
stos
dec
lods
xchg
cs
xor
das
xor
jno
cmp
sub
fistpll
lahf
mov
mov
sub
jns
pop
xor
shrb
xchg
lahf
jp
lcall
jne
mov
mov
xchg
data16
repnz
xlat
pop
pop
call
mov
sub
call
daa
std
insl
adc
jno
and
xor
sub
xchg
jnp
inc
adc
clc
dec
ss
sub
mov
fisttps
bound
inc
sbb
cmp
push
cmp
movsb
outsb
lock
in
cmpsl
imulb
jns
aad
xchg
and
inc
imul
lds
addr16
cli
sbb
mov
mov
xor
popa
std
pop
subb
in
outsb
jno
mov
mov
cmp
mov
in
push
cmpsl
insb
adc
test
fisttps
aad
dec
lock
lock
je
cli
xchg
sub
adc
push
nop
mov
out
imul
dec
sbb
push
and
aaa
lahf
sub
mov
arpl
xor
aas
pushf
sub
cmp
stos
les
jb
les
sbbl
and
lahf
lock
xchg
loopne
or
loope
add
jns
icebp
mov
insb
lahf
fmulp
cmp
adc
movsl
sub
jno
repz
adc
les
cmp
inc
lret
jmp
push
pop
jb
loope
leave
dec
pop
dec
ss
daa
enter
out
stos
push
subl
xlat
hlt
sti
pop
push
scas
and
cmp
and
mov
xchg
jns
pushf
cmpb
fidivrs
inc
mov
movsb
add
xchg
push
fwait
mov
and
push
mov
adc
sbb
sub
jle
dec
sar
push
or
roll
cmp
out
pop
jle
scas
bound
xorb
in
pop
idiv
ljmp
lret
sahf
decb
ja
sub
cld
or
out
and
lcall
dec
jae
test
mov
cmp
sub
les
add
sub
sub
cmp
enter
dec
int
pusha
mov
jb
push
dec
mov
out
loope
jno
andl
ljmp
jg
icebp
sub
xchg
out
push
jo
ret
cmc
inc
ljmp
ret
xor
jge
inc
enter
mov
inc
mov
push
leave
les
xor
xor
sub
and
add
outsb
rcll
icebp
dec
mov
outsb
mov
roll
lret
push
add
mov
scas
push
test
adc
repz
adc
inc
jp
and
cli
cs
rdtsc
mov
mov
xchg
repz
ss
sub
out
dec
ljmp
fcmove
jecxz
fnstcw
add
shl
bound
push
in
in
mov
ret
xor
adc
cmp
inc
aad
xchg
in
cvttpd2dq
and
xchg
repnz
ja
push
lea
in
ss
in
sti
xchg
pop
pop
xchg
mov
cmc
pop
hlt
push
js
scas
mov
cmp
cmp
iret
sarb
or
mov
jl
sbb
out
add
outsl
sub
mov
sbb
push
lock
jmp
dec
mov
in
mov
mov
hlt
mov
mov
lods
scas
mov
and
negl
and
popa
inc
psrlw
xchg
dec
jno
inc
mov
scas
dec
and
xor
jae
int
fwait
stc
xchg
sbb
sub
push
das
and
jg
movsl
rcr
inc
lods
inc
fs
mov
je
pop
dec
shlb
test
pop
roll
inc
pusha
pop
aam
mov
xor
sub
pop
mov
popf
sbbl
fstpl
mov
mov
test
dec
es
clc
in
addb
sti
into
add
push
dec
adc
in
sahf
movsl
pop
jl
pushf
xchg
incb
pop
pop
mov
rolb
sub
cmp
jns
jecxz
and
mov
call
cli
fdivrs
test
movsl
out
daa
hlt
cmove
icebp
jae
cwtl
fimuls
cmp
xchg
imul
xor
sbb
xorl
lret
adc
pop
das
push
pop
out
sub
rorb
addb
outsl
in
sbb
mov
sahf
adc
addl
cmp
cwtl
shrl
push
fwait
test
add
int3
test
je
jp
jb
subl
and
push
cmp
std
popf
pop
sbb
sbb
repz
test
add
add
xor
cs
outsb
pop
repnz
pusha
pop
outsb
xchg
fistpll
call
ss
inc
shll
sarl
stos
rcrl
imul
mov
mov
test
push
pop
decl
in
pop
mov
pushf
cmc
lret
push
mov
mov
in
xchg
xchg
dec
subl
xchg
or
xlat
mov
jns
aad
repnz
and
in
les
cmc
cmp
es
arpl
in
ss
fs
or
pop
leave
shlb
call
sbb
sbb
adc
xor
aas
mov
fldt
or
and
jmp
mov
js
xlat
rolb
inc
mov
dec
frstor
daa
fsubrl
inc
lods
fistpl
ret
ljmp
in
loop
xor
pop
pop
arpl
hlt
inc
xchg
and
inc
mov
xchg
call
mov
cld
shl
add
add
pop
les
repnz
push
sbb
cltd
pop
add
lcall
pop
cli
nop
add
dec
mov
push
jae
dec
hlt
inc
jl
gs
fs
jns
gs
insb
and
adc
inc
mov
adc
xchg
fsubr
mov
imul
fmull
dec
pop
push
mov
cmp
lods
xlat
out
movb
push
imul
repz
and
and
push
sbb
js
and
cmp
or
dec
push
or
dec
stos
fwait
cs
bound
xor
jmp
mov
into
out
and
gs
mov
jmp
mov
lock
sub
cmp
jnp
rorb
sub
repz
daa
lods
jecxz
jnp
rcrl
lods
hlt
add
psubq
pop
sti
xor
push
mov
push
in
dec
xchg
xchg
inc
jmp
dec
das
das
xor
mov
js
into
pop
sti
fistps
cmp
ss
jb
jo
lods
cmc
lods
inc
and
xchg
pop
ss
out
flds
fwait
xor
dec
and
adc
popa
shrl
or
fsubrl
das
in
mov
sbb
dec
out
lock
jae
in
pop
pop
pop
les
add
inc
in
inc
ficompl
fldl
lds
push
rcrl
add
jmp
sahf
outsb
jle
jg
mov
bswap
not
pop
fcomps
inc
pop
pushf
shl
pop
xchg
cmpsl
cli
sub
out
fwait
dec
es
filds
test
cltd
push
pop
subl
jo
xchg
dec
and
stc
mov
dec
or
and
xor
lds
sub
outsb
add
push
out
cwtl
mov
leave
lcall
mov
gs
fidivrs
popa
out
xchg
out
inc
adc
lods
pop
imul
enter
pop
fsubrs
and
out
and
lock
pop
ja
mov
sbb
pop
push
repz
outsb
mov
cmpsb
popf
jg
pop
jg
das
movsb
insb
inc
pop
movsb
xchg
push
lcall
mov
jge
insl
adc
adc
je
jle
jp
dec
dec
out
mov
ja
cmp
into
xchg
mov
out
and
push
test
jge
movsb
mov
jno
sub
out
adc
inc
ja
lock
mov
fs
cmp
push
sar
in
pop
jmp
adc
adc
inc
jl
idiv
in
psubq
or
jmp
dec
jns
pop
in
in
mov
ds
sbb
sbb
ret
dec
sub
leave
insb
shl
das
dec
jo
ds
repnz
add
enter
jnp
and
in
pushf
cli
iret
dec
lods
cs
mov
push
inc
les
ds
into
lret
inc
sbb
mov
mov
fwait
loopne
add
lcall
sub
mov
push
mov
outsl
in
les
xchg
rolb
nop
mov
xor
ds
jbe
cli
mov
std
mov
xchg
arpl
dec
repz
loop
adc
adc
lahf
push
adc
sub
and
dec
sbb
jns
jle
xchg
popf
iret
aas
xchg
loope
xor
inc
dec
clc
or
inc
clc
inc
add
mov
dec
jmp
out
xchg
pop
pop
jge
pop
jnp
cmpsb
xchg
lret
lret
lret
test
lea
or
sub
mov
test
push
lret
enter
js
arpl
scas
rcll
push
fbstp
cld
lcall
push
rol
jmp
addr16
sub
sub
lods
xor
push
nop
scas
jmp
pop
insl
shlb
cmp
and
loope
pop
xchg
movsl
fimull
mov
in
cmpb
insl
fdivr
in
or
mov
mov
xor
aad
stos
mov
cmp
daa
addr16
mov
jle
in
bound
mov
roll
sbb
leave
aad
add
fldl
sbb
int3
pop
rorl
cmp
sahf
imul
push
adc
inc
jo
test
aam
popa
or
rorb
jmp
add
insb
inc
jge
add
inc
inc
and
mov
fidivrl
les
call
insb
sub
test
in
adc
cmpsl
es
pop
pop
aas
pop
cmp
mov
push
sub
inc
push
or
mov
push
rorb
push
mov
sbb
scas
mov
cwtl
xchg
gs
xchg
lds
aaa
rorl
js
cmp
sub
mov
jno
jne
dec
lret
lret
lods
xchg
adc
cltd
xchg
sbb
mov
push
mov
aam
cmpsl
pop
rclb
test
inc
xor
jne
cs
pushf
push
fistps
sbbl
push
mov
dec
stos
mov
pop
scas
pop
inc
imulb
xlat
inc
xchg
mov
xor
stos
cmp
test
cmp
sbb
lods
mov
mov
pushf
in
aas
add
dec
fldenv
inc
add
or
sahf
xor
jp
xchg
cmp
pop
xchg
inc
movsl
pop
pop
mov
cmc
in
insl
cli
jmp
cmp
xchg
stos
mov
pop
ss
dec
popa
adc
out
inc
hlt
mov
push
push
jecxz
rcrl
dec
sub
std
pop
and
inc
fsubrs
mov
sbb
mov
and
mov
ja
shlb
lcall
cmp
nop
dec
fcompl
inc
mov
rclb
lock
cld
dec
out
adc
dec
lret
push
jmp
cmp
popf
data16
add
push
test
sub
das
pop
int3
cld
mov
push
enter
stos
nop
sub
mov
rcrl
in
xor
mov
std
xor
cmp
jns
pop
dec
ficomps
int
pop
int3
cli
arpl
cltd
jl
cmp
xchg
fimuls
outsb
push
shll
fsubrp
aad
icebp
addr16
sub
push
add
xchg
xor
es
sbb
jns
test
mov
mov
sbb
or
xor
mov
ficomps
int
pop
cmp
outsb
test
rcrl
hlt
fnsave
cmpsb
mov
sub
or
out
scas
sub
jb
adc
std
dec
push
outsb
cmp
arpl
xchg
not
rolb
mov
insb
data16
in
add
ffreep
xchg
cmp
inc
sahf
stos
adc
mov
push
mov
adc
ljmp
jnp
jp
push
xor
pop
push
pop
fwait
mov
iret
mov
push
movsl
sahf
or
cwtl
mov
push
loope
inc
pop
xchg
iret
mov
stos
sub
pop
and
movsb
dec
mov
xchg
je
loop
inc
mov
pop
push
xorl
push
or
mov
outsl
xchg
push
mov
fiadds
pop
jmp
push
push
pop
in
push
sbb
arpl
mov
std
sub
cmp
div
insl
int3
repz
inc
repnz
xor
mov
rcrb
adc
adc
roll
push
sbb
popf
cwtl
shlb
orl
cmp
dec
mov
scas
subb
das
incl
shlb
push
dec
xchg
xchg
loope
jno
adc
lods
rclb
cmpsb
icebp
popf
pop
insl
sub
sahf
int
pop
ljmp
ja
jne
sbb
sahf
cmpsb
je
pop
mov
adc
cmp
cmp
mov
push
out
inc
inc
push
xor
mov
pusha
push
fmul
lock
add
lret
xlat
ljmp
int3
movsl
icebp
adc
mov
addl
and
jmp
add
dec
xor
jl
std
int3
sub
sahf
mov
pop
hlt
imul
dec
orb
fisttpl
push
outsb
fidivl
mov
dec
push
mov
es
or
pop
arpl
shll
test
mov
push
repnz
test
icebp
inc
cmp
cmp
xchg
jne
adc
fs
pop
mov
mov
outsb
jg
in
test
xor
push
jmp
mov
add
mov
jmp
and
mov
xchg
pop
push
lds
int3
cmc
out
es
jmp
call
fidivrs
jle
jecxz
dec
imul
lret
dec
and
push
jecxz
or
add
dec
mov
int
sbb
sbb
mov
push
data16
call
icebp
push
std
sar
and
jle
sub
sahf
in
mov
out
jmp
stos
filds
and
inc
popf
adc
sub
in
jmp
daa
lods
idivb
pushf
inc
push
pop
cmp
and
iret
cmpb
cmp
add
loop
xchg
adc
orb
icebp
cmpsl
inc
clc
inc
adcl
mov
aas
mov
lahf
or
adc
test
sbb
lea
cmp
sbb
pop
insb
in
mov
sbb
adc
loop
testl
sbb
xor
gs
ret
mov
mov
testl
xor
imull
pusha
idivb
sbb
sbb
dec
xchg
popa
pop
xchg
xchg
push
cmp
je
fwait
xor
inc
mov
jo
stos
cmpsl
adc
and
movsb
loop
hlt
adc
das
in
pop
out
cmp
fisubrs
call
cmpsl
test
mov
sbb
mov
sbb
inc
fucom
je
xor
int
cmp
xor
add
ja
mov
push
jecxz
pop
adc
mov
mov
xor
dec
mov
lods
les
sbb
clc
sbb
data16
mov
lods
call
dec
mov
lock
mov
in
cmpsl
test
dec
and
cmp
and
test
sarl
enter
mov
out
les
aas
mov
mov
sarl
test
push
jmp
adc
or
fcompl
out
inc
mov
add
mov
pop
mov
fists
mov
mov
nop
mov
mov
mov
js
jmp
out
and
mov
inc
enter
inc
rcrb
mov
ss
mov
in
jmp
cwtl
pop
out
rclb
mov
mov
xor
movsl
adc
push
andl
mov
sbb
dec
or
pop
mov
in
test
iret
ss
xchg
xor
pop
mov
loope
push
sti
lcall
pop
sbb
dec
mov
inc
enter
out
jmp
mov
adc
daa
jae
pop
scas
mov
test
adc
clc
or
jmp
pop
aas
sti
cmp
aaa
dec
nop
cmpsb
mov
inc
lock
mov
insl
test
repz
loop
mov
je
dec
lcall
prefetch
pop
fwait
and
adc
out
ret
inc
clc
andl
push
jecxz
outsl
movsb
inc
xor
inc
lock
or
mov
or
adc
mov
lret
pop
sti
adc
jo
cmp
sub
lods
add
pop
imul
xor
sahf
test
pushf
pop
aam
lds
scas
pop
jns
cmp
ja
pop
pop
mov
mov
mov
sbb
cwtl
test
xchg
mov
call
mov
cwtl
jp
into
fwait
sub
jae
jmp
repz
xchg
jmp
mov
int3
std
fs
pop
iret
das
stos
jmp
pushf
inc
jnp
cmpsb
jnp
or
mov
adc
nop
push
push
xchg
ret
sbb
lret
jge
add
sbb
test
in
jae
jge
jo
je
fbstp
mov
xchg
xor
xor
shll
push
jno
pusha
fsub
dec
add
test
pushl
in
add
sti
fwait
stos
xor
and
inc
cmp
cmc
lock
sbbl
mov
stos
leave
pop
jg
jne
jl
fmul
cmc
pop
fdivrl
cmpsb
jp
mov
add
jge
cmp
jl
mulb
ja
shlb
pop
mov
mov
xor
mov
test
es
aaa
dec
std
adc
das
sbb
fimuls
pop
push
jae
push
mov
lretw
push
jl
jg
inc
push
leave
int
push
pop
xor
js
xchg
pop
or
add
enter
adc
test
cmp
pop
fs
mov
pop
and
leave
sbb
repnz
hlt
cmpsl
push
mov
cmc
inc
popf
stos
aad
push
imul
or
fcoms
lahf
xor
inc
ud2
xchg
movsb
push
cs
mov
test
adc
jl
nop
sarl
imul
jle
lret
mov
pop
in
lods
mov
imul
aad
push
cmpsl
mov
inc
jle
test
pop
or
notl
in
jg
mov
push
jl
add
cmp
call
loopne
sub
cmpsl
outsb
pop
test
outsl
lea
inc
pop
lret
pop
inc
mov
mov
pop
mov
arpl
dec
fs
popf
aad
lds
jae
decb
jae
push
mov
lods
or
cmpsl
cmpsl
das
mov
loope
rcl
shll
push
rclb
pushf
insb
sub
in
xchg
mov
dec
and
add
mov
inc
mov
aaa
fwait
jl
mov
fildl
negl
popf
loope
pop
cmp
jg
mov
imull
adc
mov
push
into
sub
js
aaa
movsb
sub
in
gs
rclb
in
mov
lahf
jno
clc
into
movsb
pop
cmp
clc
ss
orl
mov
sub
dec
ficomps
dec
dec
jg
add
pop
enter
sahf
in
cmp
push
roll
rcrb
test
inc
dec
das
test
xor
mov
cmp
dec
cmp
insb
sbb
mov
in
xchg
cmpsb
add
je
pop
pushf
les
dec
ret
in
pop
jp
jne
shrb
and
or
cmp
test
shll
dec
cli
or
pop
mov
add
jl
stos
jg
cltd
mov
fs
pop
cmpsb
rorb
cmp
sbb
lods
cmp
lock
das
jmp
negl
pushf
repz
jle
movb
add
jb
push
xchg
mov
cmpsl
rcr
dec
or
xchg
xchg
cmp
fadds
push
jecxz
cmp
das
aad
dec
xlat
mov
mov
adc
mov
jecxz
dec
fisttps
jne
mov
loop
fsubrs
sbb
popa
pop
test
cmp
push
inc
rolb
movsb
mov
hlt
mov
jns
mov
fs
push
dec
mov
xchg
jno
iret
bound
xchg
roll
in
std
pop
dec
rclb
xor
repz
dec
mov
or
movsl
mov
cmp
aaa
lret
es
les
xor
fsts
sub
pop
out
mov
jl
push
dec
cmp
push
xchg
test
dec
jmp
xchg
xlat
testl
push
lret
not
mov
push
mov
ja
inc
xlat
or
popf
xor
xchg
mov
xchg
mov
mov
cltd
daa
lcall
mov
pop
call
imul
push
call
mov
xchg
mov
test
xchg
add
sub
lock
rcr
inc
sahf
cltd
or
aad
int
inc
cmpsl
jp
adc
loop
xchg
ds
pushf
dec
jmp
mov
jp
mov
lods
stos
out
sbb
js
or
cmpsl
inc
repnz
cltd
gs
jb
cmp
lahf
and
popa
push
xor
test
cmpsb
popf
jno
fdiv
sub
icebp
cld
into
and
cwtl
jns
dec
movsb
stc
jo
lock
inc
inc
adc
mov
inc
fistl
ss
int
push
ljmp
jge
fcmovbe
pop
rorb
mov
lods
lods
arpl
mov
cltd
loope
test
loop
pop
and
cmp
jns
sub
jmp
jmp
pop
fstl
int3
ret
xor
imul
in
xor
loopne
test
jg
aaa
push
sbb
lods
es
outsl
and
xchg
add
or
jbe
or
xchg
js
bound
xorb
pop
sub
popf
add
mov
into
lret
dec
and
jno
and
out
sbb
fldenv
push
cmpsl
out
mov
mov
cmpsl
xchg
sbb
sbb
insb
sets
vpunpckldq
jg
mov
shll
loop
sbb
fadds
inc
ss
out
int
mov
call
xchg
imul
lret
cmp
shll
es
add
jecxz
mov
rcll
push
dec
adc
and
loope
cmp
mov
out
std
sbb
sub
lods
cs
movsl
mov
cmpl
mov
xchg
fwait
in
movsl
test
ja
ret
lret
mov
das
push
push
mov
and
cmpsb
mov
or
shrb
add
mov
cs
in
fwait
fwait
dec
jge
jo
movsl
cmpsl
jmp
lods
jg
lret
jno
imul
je
pop
insl
popf
andb
sbb
xchg
inc
jbe
int3
push
pop
ja
jno
pop
adc
pop
repz
add
jae
push
rorb
jo
dec
xchg
cmp
test
pop
xchg
xchg
lock
inc
fadds
fistpl
mov
rorb
lret
or
mov
sub
mov
push
ret
inc
adc
imul
aaa
insl
jle
jae
into
push
cld
pop
cmp
in
xchg
cmp
rorl
or
mov
jae
cli
loope
xchg
fadds
incl
cmp
xlat
or
test
in
and
jg
lock
ljmp
mov
lea
clc
sub
sub
jg
daa
push
sbb
lock
jno
enter
decl
and
movb
test
lock
fistps
icebp
insl
mov
sbb
ja
mov
mov
fs
icebp
pop
imul
arpl
adc
sbb
arpl
out
dec
sbb
add
jb
cmpl
in
mov
enter
sub
lea
xor
getsec
rcrl
icebp
jecxz
pop
add
mov
cmp
adc
lock
cmpsb
dec
ret
shlb
jmp
jnp
pop
scas
addb
adc
sub
jecxz
iret
clc
lea
adc
aad
es
cmp
inc
lea
notl
imul
imul
insl
pop
call
xor
popa
outsl
icebp
nop
and
shlb
add
pop
in
test
or
cmc
mulb
icebp
mov
push
xchg
fs
dec
mov
call
xor
aaa
stos
xor
push
aad
push
sbb
add
mov
cmc
stc
push
mov
cld
adc
lea
clc
xchg
dec
lds
test
push
in
pop
mov
test
xor
stos
sbb
push
mov
test
out
das
negb
jo
cmp
mov
repz
popa
sbb
mov
stc
in
cmp
out
push
lds
movsb
xor
xchg
push
lock
mov
push
sarl
add
and
mov
cmp
lahf
or
push
fucomp
dec
push
dec
pop
sub
mov
inc
jns
sbb
repz
push
push
sub
dec
mov
icebp
or
xor
fstl
adc
das
into
popf
or
fwait
lret
out
nop
mov
cmpsl
outsl
out
std
ret
jge
pop
or
push
test
jge
pop
mov
loop
jle
xor
or
rcr
mov
pop
xchg
xor
popf
mov
or
idivl
push
test
inc
js
bnd
dec
or
pop
ret
jnp
fildl
in
movsb
pop
in
mov
fimull
mov
pop
shlb
add
sbb
xor
pusha
xor
popa
or
or
adc
inc
imul
ds
mov
insb
sti
xor
lahf
dec
jb
hlt
movsb
enter
push
inc
jbe
lcall
pop
stc
movsb
notb
push
sbb
inc
xlat
clc
imul
cmp
jns
jbe
mov
imul
lret
test
mov
adc
testl
or
mov
push
mov
add
xor
popf
add
ficoms
movsl
sti
sbb
jnp
sub
jecxz,pn
dec
inc
sbb
mov
sub
mov
jb
ret
pushw
lock
or
mov
pop
popf
add
fisttpll
and
int3
jo
popf
jne
jp
movsb
test
adc
or
mov
jle
adc
mov
and
xor
jb
adc
test
adc
popa
call
cmp
shlb
in
xchg
xor
fstpt
daa
cld
mov
xor
lock
inc
pop
jb
test
xlat
pop
cs
push
adc
jno
xchg
and
adc
xor
fwait
cmp
pop
dec
inc
pop
pop
xchg
mov
cmp
pop
jb
ds
dec
inc
mov
xor
loopne
pop
mov
adc
and
xchg
popf
in
sbb
hlt
sbbl
xor
data16
jmp
imul
and
inc
cmp
jge
or
sub
lahf
cld
pop
mov
test
lcall
push
lea
ret
fcompl
push
test
adc
cmp
mov
ds
inc
cmp
mov
xchg
pop
hlt
outsl
adc
mov
adc
dec
sbb
and
dec
ret
test
outsl
cmc
lahf
add
fucomi
movsl
stc
mov
adc
mov
sub
pop
shll
jmp
loopnew
adc
rolb
add
mov
hlt
or
pop
sar
shrb
loop
repz
or
scas
cmpsb
cmpsl
lds
lods
insb
cld
xchg
je
sbb
aad
dec
pushf
mov
ss
mov
xor
loope
mov
and
pushf
out
add
cmp
push
into
inc
sahf
fsubl
inc
dec
daa
jnp
test
xchg
shll
sub
std
scas
mov
push
test
fbstp
mov
sub
cli
es
data16
in
mov
sbb
cmpsl
cli
out
push
push
mov
xchg
xchg
cltd
ja
fdivrl
cld
mov
pop
pop
out
sbb
outsb
es
pop
cld
ret
std
cmpsb
and
or
sbb
mov
xchg
xchg
adc
jp
or
lea
adc
pop
movsb
jmp
rcll
sbb
in
or
xchg
ja
mov
stc
mov
bound
movsb
incl
mov
pop
out
add
lods
pop
in
and
xor
push
cltd
jae
push
lock
push
xor
jno
cld
int
jnp
or
mov
sub
rclb
or
testb
sub
sub
aaa
add
leave
scas
jg
int3
lock
adc
add
test
inc
cmp
sbb
xchg
std
mov
jnp
cmp
jl
xchg
out
jg
loope
inc
lret
mov
push
aaa
push
mov
xchg
test
insl
push
mov
push
or
out
xchg
repnz
mov
push
sub
push
imul
xor
xor
mov
loopne
and
pop
pusha
enter
in
les
lods
sarl
pushf
mov
cwtl
jae
psrad
adc
pushf
pushf
in
cltd
add
sbb
jecxz
add
mov
out
cltd
cmp
mov
push
mov
movsl
gs
cmpsl
inc
mov
cwtl
lea
in
mov
inc
sbb
mov
sbb
adc
push
mov
ret
ja
inc
jbe,pn
and
flds
sub
repz
loope
test
int
or
adc
mov
add
fwait
dec
lret
lea
ss
std
and
xor
int3
js
sysexit
xchg
icebp
dec
jecxz
cmp
sbb
shrb
jmp
jle
lds
mov
xor
cmpsl
jg
adc
xorb
js
dec
pusha
add
xchg
ss
inc
scas
xchg
jp
outsl
add
loope
int
lods
loope
sbb
js
in
jbe
fbld
lock
cmp
andb
dec
xchg
cmp
pop
mov
insl
and
xlat
push
jge
popf
divb
push
scas
add
cmp
mov
data16
sbbb
popf
inc
jg
xlat
xor
lret
mov
pop
mov
test
push
dec
lcall
or
lock
inc
notl
test
in
popf
movsb
int
push
fwait
test
inc
sarl
and
hlt
push
xchg
xor
cmpsl
loope
adc
icebp
movsb
or
push
pop
or
push
push
mov
test
fisubs
mov
stos
daa
sub
jno
mov
rclb
int
sub
shlb
sub
je
xor
into
jp
mov
gs
cmp
pushf
sub
mov
and
push
int
xor
std
cmc
add
xchg
test
rcl
pop
mov
test
and
cli
jge
fwait
dec
and
pusha
sub
xor
or
loope
je
dec
shl
jmp
test
addr16
mov
gs
push
lcall
std
add
popf
xor
data16
push
js
lds
mov
fwait
push
cmp
lea
inc
ret
add
push
sbb
fcmove
adc
iret
enter
sub
loope
cmp
arpl
fcoms
push
push
jb
aas
push
cmp
and
push
cmp
lret
xchg
sbb
rorb
fisttpll
dec
ss
pusha
cmp
int
fimuls
mov
cs
inc
xor
push
push
xchg
aaa
inc
sbb
fldl
stos
pop
fstpl
sub
in
in
repnz
sbb
adc
loopne
adc
dec
mov
mov
inc
aas
je
or
mov
flds
push
push
lea
jno
pushf
sbb
cmpsb
adc
jg
cmpsb
and
clc
rcl
shll
push
sbb
cwtl
lds
sub
xchg
mov
daa
lcall
jmp
jp
adc
mov
inc
outsb
sbb
pop
aam
add
push
sbbb
shrl
sub
mov
shrl
jno
cs
imul
in
ds
movsl
loope
inc
xchg
mov
jl
sbb
cmp
push
lock
cmp
pop
pop
popa
cmpsb
xchg
cmp
stc
push
in
pop
andl
jbe
or
dec
cmovnp
dec
cmp
xor
mov
adc
leave
inc
mov
and
mov
dec
mov
cld
adc
dec
in
xor
push
push
int
lret
in
xchg
push
xor
push
or
hlt
out
stos
icebp
adc
pop
mov
jo
inc
inc
repnz
por
and
push
in
mov
das
popa
in
rorb
fcoml
int3
outsb
dec
xor
push
das
or
jnp
daa
jnp
sbbl
repz
cmpl
rorb
seto
sub
push
mov
cmpsl
push
jl
mov
push
cmpsb
cmp
and
pop
cli
xchg
inc
mov
mov
cmc
or
xchg
lret
sbb
fbstp
push
sbbb
dec
cmp
bound
inc
stc
mov
into
lahf
inc
xchg
sub
pop
ds
out
xchg
push
inc
pop
ja
lds
addb
pushf
sub
adc
xchg
sub
adc
push
idiv
aam
lock
jmp
pop
test
adc
lods
adc
mov
lds
pop
ja
adc
out
std
and
inc
lea
inc
inc
decb
ss
mov
xor
jbe
jmp
add
outsl
sbb
mov
fnstcw
pop
test
out
sbb
stos
insb
mov
out
lahf
cli
inc
scas
jl
inc
scas
sub
mov
mov
enter
add
insl
faddp
sti
shl
sbb
js
mov
movsl
sub
scas
xchg
out
shr
sub
data16
mov
or
pop
testb
lock
sahf
inc
pop
stos
sbb
lods
call
jg
xchg
int
xchg
popf
movsl
fucomip
aaa
faddl
mov
enter
insb
stos
mov
xchg
sub
ret
xor
sub
je
push
jge
xor
pop
dec
cmp
es
aam
push
in
cmp
xor
jmp
and
jno
fcmovne
hlt
lea
outsl
xor
lods
xor
das
pop
mov
inc
mov
into
jge
aam
mov
test
in
pop
jo
push
mov
add
jmp
xchg
sti
ret
std
test
aaa
pop
nop
push
xor
mov
cmpsl
subb
or
cwtl
repz
mov
hlt
cwtl
cltd
lods
cmpsb
ret
out
xor
jo
jbe
pop
out
inc
sahf
jecxz
imul
and
test
adc
jb
dec
inc
xor
mov
lods
inc
test
daa
adc
stos
test
imul
aaa
adc
sti
push
ja
arpl
mov
cltd
xor
loope
int3
in
xlat
lock
pop
mov
or
pop
push
mov
cmpsb
scas
cld
mov
clc
dec
int3
int
imul
pop
sti
adc
sub
sub
pop
pusha
inc
clc
inc
push
lahf
pop
test
inc
lods
pop
mov
lock
xchg
lret
das
data16
es
ja
adc
jbe
fs
pushf
fsubl
sbb
or
adc
push
mov
fcoms
mov
orl
int3
mov
dec
ljmp
pop
fiaddl
xor
pop
mov
shlb
xchg
pop
and
fstps
pop
leave
lret
cmp
sti
sub
sub
ficomps
jl
mov
rclb
lret
pop
and
add
sub
push
adc
mov
filds
mov
mov
lea
mov
into
and
push
xor
aad
daa
push
cmp
jae
mov
cmp
pop
pop
xor
add
push
push
pop
jne
lods
inc
mov
sbb
int
shll
pop
inc
fiadds
push
cmc
icebp
andl
push
xchg
push
jecxz
push
in
jmp
pop
aas
mov
cmp
sbbb
jne
jne
ret
push
mov
roll
cwtl
cwtl
sbb
sbb
push
inc
mov
pop
xchg
push
push
xchg
pop
daa
testl
cmp
xor
xchg
leave
xor
imul
pop
repz
out
push
cmp
and
shlb
add
lahf
lret
adc
xlat
and
mov
xchg
out
lds
stc
dec
lds
pusha
inc
incb
push
jp
dec
pop
ficompl
pop
movsl
jb
mov
leave
and
fsincos
jle
mov
mov
aas
jp
addl
cmp
sub
ss
sbb
adc
mov
pop
xchg
test
aad
cmp
mov
test
and
or
jbe
mov
in
jo
loop
jl
push
rorb
loopne
pop
cltd
in
mov
pop
or
and
xchg
outsb
mov
mov
xchg
test
es
dec
and
mov
xor
stos
adc
pushf
mov
lea
enter
xchg
pop
cmp
jge
out
jle
jnp
ss
fisubrs
popf
or
leave
sub
imul
lods
cmpsl
inc
fwait
ret
movsb
and
pop
mov
ret
rcr
or
and
repnz
frstor
inc
ja
fcmovbe
das
cmp
icebp
xchg
in
ss
sub
jg
dec
shlb
sbb
sub
xchg
loope
sub
dec
push
sub
ljmp
push
ss
std
hlt
icebp
mov
scas
icebp
or
push
jmp
int
push
pop
ds
cli
cld
cmp
int
sbb
xor
xlat
aas
in
mov
inc
ret
xchg
cwtl
cmp
lahf
sbb
pop
push
xchg
out
ss
and
mov
or
outsl
xchg
dec
push
dec
aad
insb
clc
std
push
popf
push
xlat
jp
int
xchg
push
lahf
loopne
cmp
fwait
jl
hlt
movsl
in
cltd
hlt
dec
icebp
cmp
push
push
dec
cmp
test
enter
push
or
inc
lahf
sbb
sub
pop
inc
idivl
test
dec
xchg
jle
lret
fwait
aad
pop
lods
adc
js
aas
push
sbb
gs
xchg
mov
sbb
insl
subl
aam
cmp
lret
adc
jne
lock
sub
imull
mov
sub
inc
sub
xchg
mov
mov
and
addr16
pop
rorb
mov
xchg
cs
bound
sub
aaa
and
call
jnp
jle
mov
int3
mov
mov
aad
adc
jmp
pop
sub
cmp
mov
jl
ds
and
movsb
adc
mov
adc
ret
inc
clc
lock
and
scas
in
adc
xchg
addb
mov
ss
std
test
shrl
or
shlb
xor
out
stos
fstps
jno
loope
ret
outsb
and
push
fidivrs
push
push
aaa
mov
pusha
clc
push
pushf
mov
pop
pushf
les
je
mov
mov
cli
rol
movsl
je
repnz
clc
out
iret
loope
pop
and
and
pop
inc
sbb
repz
fwait
ja
rorl
mov
or
in
sbb
bswap
cmpsb
mov
ret
mov
outsb
xlat
cmc
sbb
mov
jbe
test
fwait
test
cmpsl
sub
xchg
icebp
push
cmpsb
das
xchg
or
jg
mov
push
xchg
lock
dec
xor
popa
pop
adc
sub
xor
jmp
cmc
mov
ficoms
or
cmp
scas
bound
xor
push
std
xlat
adcl
jae
lea
mov
mov
into
push
and
mov
dec
ret
mov
mov
std
xchg
fwait
mov
cmp
cwtl
loopne
mov
sahf
pusha
sbb
inc
decb
xchg
sbb
push
call
iret
pop
xlat
pop
adc
mov
pop
pop
sub
es
adc
fsubl
jle
sbb
xchg
pop
cmp
in
cld
mov
xchg
xchg
insl
int
and
xor
rcr
cmp
aad
filds
sbb
es
sbb
push
or
lods
negb
cmp
push
in
movsb
out
mov
xchg
cmp
pop
push
jle
add
int
cmp
pop
es
cmc
pop
cmpsb
mov
mov
sbb
pop
cmp
sub
das
add
aas
out
add
xchg
adcb
pusha
xchg
jl
add
fs
fwait
inc
sbb
dec
out
mov
ret
sarl
clc
mov
adc
mov
mov
cmpsb
fstpt
and
gs
aam
adc
or
repz
test
jg
cmp
push
jecxz
push
lds
pop
imul
mov
dec
fs
fistl
ja
dec
inc
pop
mov
xchg
lock
into
outsb
cmp
cmc
pop
data16
push
sub
push
fadds
fcomps
imul
xor
ret
mov
push
mov
daa
cmpsl
push
inc
xchg
pop
sbb
push
je
and
add
dec
ret
ficomps
and
mov
and
and
fs
outsl
and
icebp
pop
dec
push
clc
xor
pop
and
adc
insb
popa
outsl
mov
shrl
out
dec
lret
or
mov
push
xchg
pop
mov
lret
pop
ss
shlb
cld
and
jne
loop
aam
test
bound
lret
sub
adc
incl
sub
or
insl
arpl
jg
cmp
jo
jb
pushl
dec
mov
es
ret
cmp
scas
mov
into
orb
adc
divb
fwait
inc
add
adc
insb
loop
loopne
test
cmpsl
int3
out
js
clc
ret
imul
out
jl
aad
in
std
or
bound
mov
push
pop
rcl
das
aaa
xchg
xchg
lods
add
push
repnz
xchg
data16
xchg
xchg
xchg
andb
xor
mov
lock
imul
inc
cmp
mov
or
cmp
jp
hlt
aad
in
or
int3
pop
inc
or
or
push
icebp
movsb
popf
push
add
out
jae
loope
sub
lea
je
inc
xchg
mov
jge,pn
mov
loopne
xor
sti
cli
fxch
cmpsb
mov
cs
lds
or
push
sub
das
cs
ret
xor
pop
das
pop
mov
adc
pushw
ss
int3
imul
dec
xor
shl
sbb
lock
imul
loop
sbb
fiadds
xor
test
leave
je
pop
cmp
pop
jl
jge
in
je
add
mov
mov
or
push
call
cmpsb
iret
rcl
lods
lock
sbb
in
lret
out
arpl
out
jmp
mov
stc
or
mov
int
adc
adc
cmc
cmpsl
push
clc
stos
inc
test
fst
xchg
dec
cmpsl
imul
jnp
lods
hlt
mov
mov
add
out
jp,pt
popa
jo
push
pusha
out
notb
adc
mov
enter
xor
mov
cmp
or
iret
push
loop
out
cmp
xchg
xchg
loopne
sarl
cwtl
addr16
sbb
cmp
pop
testb
shl
push
add
aad
ret
rcrl
xor
js,pn
dec
mov
pop
inc
push
mov
mov
sbb
push
push
adc
int3
lea
xchg
pop
sub
cmpsl
sahf
pop
insb
lea
lods
pop
inc
inc
mov
mov
std
push
repnz
ljmp
cli
mov
addr16
sbb
mov
xchg
jg
out
repnz
repnz
shrl
jl
test
stos
jl
mov
push
repz
mov
jmp
add
add
faddl
xchg
and
pop
xlat
push
mov
lea
lds
cld
aam
push
adc
sub
sbb
push
in
stc
xchg
xchg
sbb
es
nop
push
bound
mov
adc
sub
push
xor
sub
sub
push
fst
jg
int
and
mov
icebp
and
push
adc
push
out
lcall
fimull
inc
arpl
pop
cmpsl
mov
std
xor
mov
add
jp
xchg
push
add
loopne
setnp
fdivs
mov
ds
push
js
or
add
ss
and
jmp
outsb
jge
pextrw
mov
mov
add
insl
into
ss
pushf
fsubrs
inc
mov
loop
cmp
jg
stc
repnz
xor
mov
fldcw
mov
lahf
adc
mov
in
stos
mov
pop
push
aad
pop
popf
cli
in
cld
xchg
rcl
ja
push
lock
mov
fwait
sub
ds
ret
je
adc
popa
pop
loopne
sub
cmp
in
ja
and
and
push
movsl
sbb
out
mov
mov
fcomps
xchg
imul
or
lcall
fcmovnbe
data16
mov
scas
and
xor
xchg
adcl
sub
faddl
xor
mov
mov
mov
pop
xor
je
mov
jmp
into
fildll
dec
xor
adc
lahf
test
fs
pop
ret
xor
sbb
sti
mov
jl
repz
call
leave
dec
es
dec
enter
ret
push
inc
stc
aam
mov
mov
pop
fwait
cli
sub
mov
inc
sbb
and
arpl
mov
sub
adc
call
pop
hlt
aaa
pcmpgtw
xchg
cli
sbb
insb
dec
gs
sbb
int
dec
jp
xchg
mov
pop
movsb
or
push
or
stc
adc
and
sti
imul
loopne
sti
imul
mov
gs
fs
pop
into
outsb
rcll
dec
inc
push
mov
out
icebp
push
cmp
adc
push
sub
pop
jg
sub
mov
cs
mov
sub
insb
mov
in
iret
and
or
mov
icebp
and
pushl
shrb
or
mov
repnz
pop
sbb
fdivs
pushl
lcall
pop
adc
sub
push
daa
xor
mov
call
fiadds
int3
adc
int3
cmp
sub
mov
loop
mov
xchg
xor
and
jns
inc
call
fwait
in
ja
shl
mov
push
lods
aas
xor
jns
mov
push
fdivrs
mov
or
dec
xchg
jg
push
xchg
fstps
push
call
iret
cmpb
jge,pt
mov
and
sti
lock
cmc
test
and
push
insb
mov
jmp
or
mov
cwtl
insb
xchg
ret
rolb
ss
call
add
push
ret
xor
jp
pusha
pop
in
sarb
pusha
icebp
add
add
adc
mov
pop
jge
out
popf
fcoml
daa
sbb
int3
sub
mov
or
push
jle
fdivl
call
jb
jns
and
in
dec
adc
jbe
enter
pop
repz
ss
rorb
fiadds
ret
mov
leave
push
dec
mov
mov
mov
ja
fistl
repnz
cmp
or
sbb
gs
hlt
and
hlt
ficoml
mov
xchg
sbb
mov
loope
jmp
enter
sbb
nop
repnz
xchg
or
jle
out
ja
int
xor
lret
or
add
lods
cmp
mov
sub
rep
sbb
inc
inc
cs
subl
rolb
push
push
push
mov
mov
sub
jbe
xor
sti
rolb
outsl
sub
lcall
hlt
inc
or
pop
gs
xor
movsb
insb
sbb
in
subb
push
cmp
jno
adc
push
jmp
test
xor
adc
adc
dec
imul
andb
xor
in
xchg
pop
cltd
bound
outsb
xchg
jle
daa
data16
dec
cltd
into
push
sbb
lcall
inc
icebp
sbb
nop
outsb
jns
iret
push
jnp
test
test
xchg
arpl
xchg
or
stos
mov
ss
loopne
inc
int
mov
mov
inc
pushl
push
push
mov
movsb
mov
sub
jns
in
gs
pop
cmp
xchg
and
mov
popf
cwtl
test
ror
addb
test
cwtl
pop
outsl
lods
pop
repz
loop
ljmp
sub
gs
mov
mov
sub
xchg
mov
nop
xchg
push
rclb
lret
sbb
insl
jae
test
scas
and
fwait
test
sub
cmp
or
cmp
stos
pop
add
iret
xor
or
adc
ss
xchg
imul
outsb
jb
or
sbb
add
pop
jge
and
mov
shlb
sbb
jmp
adc
mov
fadds
adc
mov
mov
sahf
fdivrs
pusha
in
movsb
push
cmpsl
lods
lret
xor
daa
inc
xor
lds
lods
mov
das
jecxz
or
mov
les
dec
mov
outsl
stos
jmp
pop
xor
dec
testb
ljmp
ss
adc
test
xchg
jns
mov
pop
dec
dec
and
fs
aas
push
and
fcoml
ss
push
lret
and
mov
loop
xor
inc
aas
xchg
mov
and
jmp
pushf
push
or
je
cmp
in
outsb
scas
jmp
inc
cld
insl
ds
rorb
and
mov
cltd
jne
jl
clc
fs
mov
cmp
je
ljmp
mov
fldcw
stos
adc
out
ret
adc
call
pop
inc
xchg
fmull
sbb
add
int3
mov
bound
mov
sti
dec
adc
pop
out
fnsave
dec
flds
call
xor
fldcw
insl
sub
lods
push
xor
mov
int3
lahf
add
loop
push
mov
dec
add
pusha
or
push
call
mov
fwait
popa
lahf
and
xor
add
dec
arpl
inc
xor
cwtl
add
or
shrl
xlat
jl
push
jnp
mov
add
mull
mov
orl
pop
ja
sub
adc
dec
pop
pop
pop
les
fnsave
icebp
and
out
inc
and
cmp
inc
xchg
push
add
loope
je
dec
xor
xchg
jge
and
add
cs
sbb
jecxz
or
xor
add
outsl
in
mov
adc
sub
addr16
push
aad
mov
sbb
ret
xchg
xor
rorl
xlat
imul
ret
push
stos
xor
pop
fildl
mov
xor
mov
xchg
popa
in
cld
jg
inc
mov
push
in
lea
sbb
aas
ljmp
or
xor
insb
fnstsw
xchg
xchg
repz
and
shll
push
movb
add
mov
adc
pop
ljmp
and
push
int3
jb
icebp
push
mov
call
or
outsb
xor
xchg
jns
xor
in
push
aam
into
fisttpll
in
sahf
fs
jg
idiv
adc
inc
xor
push
test
mov
cmp
aaa
out
sub
sahf
andb
icebp
fwait
jle
push
movb
cwtl
xor
xor
sahf
ja
xchg
test
data16
mov
pop
mov
stos
add
lret
enter
mov
and
cmp
scas
pushf
out
into
sub
jp
out
mov
push
adc
xchg
push
sub
sbb
lods
sti
mov
add
mov
je
sbb
adc
mov
sbb
and
xchg
mov
pop
addr16
push
mov
cmpsb
mov
lea
in
cmpsb
mov
shlb
sub
jbe
cmp
pop
loope
cwtl
pop
mov
lret
rep
jle
or
fiadds
mov
push
inc
js
lret
cmpsl
lret
cmp
lcall
dec
dec
xor
adc
insl
je
pop
test
adc
jo
rcr
ja
mov
pop
push
fnsave
mov
cs
addl
cmpsl
scas
sub
pop
xor
mov
mov
das
jo
mov
sbb
mov
loopne
test
sahf
fistps
lea
outsl
mov
mov
add
lods
imul
ljmp
sbb
jbe
nop
pop
lds
cmp
inc
inc
roll
pop
add
xchg
clc
int3
xor
repnz
sub
xchg
imul
jp
je
sti
out
daa
and
sub
int3
stos
cmp
lret
mov
pop
xor
or
push
nop
lea
movsb
sub
mov
pushf
and
mov
xchg
in
xorl
lock
sarb
es
sub
xchg
fiadds
lcall
adc
sub
insl
test
sub
push
fisttpll
mov
and
inc
mov
mov
sub
cmp
mov
lcall
dec
fldenv
xor
push
int
adcb
repz
push
mov
test
pop
pusha
pushf
mov
fsub
jp
sbb
js
cmp
leave
out
test
inc
addr16
int
dec
test
out
shll
cmp
stos
int
cmp
xor
xchg
and
xor
add
add
xchg
aam
jp
dec
xor
dec
push
shll
sbb
jnp
mov
dec
ffree
sbb
adc
sahf
in
and
loopne
rclb
add
add
dec
or
cwtl
mov
ror
popf
adc
ja
std
mov
inc
xchg
jl
mov
xor
dec
ss
xchg
mov
mov
mov
dec
sub
push
out
pop
filds
insl
dec
int
out
cmp
es
cmp
and
pop
scas
or
push
loopne
mov
stos
mov
in
sbb
xorb
mov
sahf
mov
aam
stos
or
jbe
movsb
jle
iret
mov
fsincos
jmp
xlat
shr
pop
push
fidivs
stos
cmpsl
push
test
cmp
pop
in
cmc
mov
popa
and
adc
sub
jmp
ss
mov
xchg
add
enter
sub
sub
imul
int3
loopne
adc
loop
adc
aad
jns
push
mov
mov
jmp
xchg
mov
shrb
mov
jnp
nop
push
mov
pop
lods
dec
pop
psubusb
inc
push
jnp
and
inc
push
frstor
mov
mov
in
gs
add
pop
bound
push
jb
ljmp
mov
insl
movsb
dec
cld
repz
flds
cwtl
inc
xchg
out
mov
mov
test
rcrl
movsl
adc
xlat
sbb
and
test
mov
mov
outsl
repz
aad
test
pushf
add
or
outsb
in
outsb
mov
std
cmpsl
or
data16
int
jg
jge
mov
loopne
test
dec
xor
jmp
out
add
je
sub
mov
dec
dec
lret
dec
mov
inc
out
push
lret
out
mov
cmp
sti
mov
mov
xor
mov
push
scas
and
into
pop
add
or
rclb
add
sti
test
filds
negb
push
imul
xchg
mov
pop
cmp
inc
xchg
xor
mov
add
mov
push
mov
inc
out
pop
jecxz
outsl
jno
push
loope
outsb
dec
lcall
cmp
ret
or
cmp
xchg
jns
xor
lods
xchg
push
dec
cmp
mov
mov
iret
xchg
clc
ljmp
sub
ja
les
jno
addr16
addl
pop
cmp
xor
jae
dec
imul
pop
mov
pop
stos
adc
xchg
push
lock
int
insb
loop
xor
add
repnz
mov
jg
sub
dec
or
inc
int
sbb
pop
cli
xor
xlat
fstpt
sti
stos
push
pusha
and
daa
mov
push
inc
dec
mov
shl
out
inc
jo
test
in
lret
pop
test
mov
mov
sbb
fisubs
out
push
dec
sub
xorl
mov
pop
adc
xchg
in
jle
mov
or
das
push
sbb
insb
jecxz
push
ds
movsb
xchg
mov
pusha
sbb
xchg
inc
cmpl
push
iret
pop
cmpsl
pop
cmpsb
andl
repnz
mov
test
cmp
out
fnsave
test
sub
punpcklwd
or
mov
rcll
add
xor
inc
mov
adc
sub
data16
jns
add
sti
dec
xchg
out
inc
scas
push
cmpsl
push
mov
xor
sbb
movsl
sub
mov
xor
cs
sahf
jge
std
adc
inc
sub
orl
lea
sbb
xchg
shrl
adc
fwait
mov
cld
fisubs
popa
pop
xchg
xlat
add
mov
lahf
pop
push
inc
stc
int3
div
daa
sbb
or
inc
mov
adc
lods
sbb
sub
and
inc
inc
mov
dec
mov
ss
cmpsl
push
pop
or
jbe
dec
or
lret
xchg
cmc
lcall
pop
ss
shlb
imull
mulb
push
mov
sbb
or
adc
cld
or
and
mov
out
xchg
jge
cmp
push
mov
add
jg
les
mov
adcl
push
lods
outsb
gs
fwait
loopne
sbb
sahf
or
mov
cltd
movsb
jbe
loopne
int3
and
mov
cmp
cwtl
popa
or
fwait
dec
icebp
cld
and
pushf
jo
dec
cmp
pop
mov
mov
aas
jge
int
push
push
pop
fsubrl
imulb
add
mov
jl
sahf
sbbb
jge
sub
mul
dec
rdtsc
jo
testl
lahf
fstpl
faddp
mov
sub
popa
xchg
jo
stos
pop
adc
mov
insl
mov
ret
adc
inc
adc
mov
push
mov
xchg
add
mov
sub
clc
inc
mov
repnz
dec
pop
test
sbb
fsubrl
decl
jp
jmp
mov
cmp
out
in
sbb
movsb
and
mov
lret
scas
cmp
jns
mov
xor
popf
and
hlt
xchg
sbb
sbb
out
call
lea
push
add
lcall
popf
sti
mov
in
jae
xchg
pop
xor
inc
and
sarb
cli
mov
out
mov
and
mov
into
dec
sub
jnp
or
stos
sti
stc
dec
sbb
cmp
push
inc
xor
xchg
cmp
pusha
iret
fs
and
pop
imul
fistl
mov
sub
scas
xor
push
shlb
test
inc
cwtl
dec
rcrl
test
xor
ret
pop
cmc
das
xor
out
ja
add
ss
inc
pushf
pop
and
in
rcr
inc
ja
xlat
push
outsb
sbb
push
cld
jne
cmpsb
rclb
fwait
inc
jp
jae
out
add
lahf
loopne
or
scas
mov
fldenv
sbb
jmp
jl
mov
fisubs
adc
mov
fsubl
mov
add
bt
cwtl
mov
aas
dec
and
cs
mov
hlt
cmp
data16
xchg
aad
or
jno
cltd
jnp
stos
jg
testb
into
clc
cmpsb
xor
scas
xchg
std
fwait
loopne
insl
or
push
out
jg
int3
test
push
lods
mov
out
enter
repnz
mov
mov
xlat
mov
pop
xchg
insl
sub
aaa
cmp
pushf
sbb
mov
mov
mov
lea
mov
mov
inc
push
pushw
sub
cmc
popa
xor
popf
mov
xchg
jecxz
out
rclb
test
fnstenv
xchg
test
fucomp
cltd
fmull
loopne
mov
insb
in
mov
js
test
cmp
jae
stos
shll
jp
pusha
add
hlt
testl
shll
adc
shrb
mov
ds
dec
push
xchg
sahf
popa
sarl
popa
push
je
sbb
out
rcrl
pop
fldenv
lahf
jns
out
int
inc
inc
sub
ljmp
push
enter
mov
push
loope
adc
xchg
mov
xchg
stos
push
ffree
dec
lock
jecxz
and
cmp
mov
ljmp
jg
push
popa
pop
fscale
mov
inc
inc
sarl
adc
xor
mov
mov
in
push
mov
and
ret
and
mov
mov
jl
or
jg
mov
fsubr
xlat
enter
jno
ljmp
lcall
mov
cmp
jns
inc
dec
or
cmp
lcall
leave
push
mov
dec
mov
scas
xchg
cmpsb
shll
pop
push
sti
insl
js
jns
mov
sbb
imul
inc
scas
lods
mov
dec
fs
scas
mov
ss
stos
push
daa
movsl
pop
sbb
mov
lret
outsl
nop
daa
pusha
sub
mov
jb
mov
add
test
stc
cltd
sub
pop
popf
jp
add
add
in
xchg
imul
cs
jo
xlat
dec
xor
inc
cld
lods
insl
ret
push
sti
rcrl
push
inc
jge
ret
adc
mov
cmpsl
int3
setae
and
pop
hlt
out
add
shl
jg
cld
or
pushf
mov
lods
push
add
sbb
add
jl
outsl
pop
loope
adc
pop
ret
icebp
call
pushf
stos
pop
sarl
dec
pop
enter
or
cli
es
test
mov
pushf
stc
mov
xchg
in
push
mov
inc
in
jg
in
add
in
sub
sar
jo
jmp
dec
insl
fucompp
mov
push
das
adc
mov
dec
loope
js
jae
arpl
mov
not
les
or
xchg
and
sub
push
ds
das
jns
jne
push
sub
daa
cmpb
jp
int
push
filds
mov
scas
mov
jg
mov
mov
lock
rclb
std
arpl
adc
xchg
popa
pop
fldl
lcall
pusha
pop
sbb
into
mov
sbb
adc
pop
adc
movsl
shll
cmpsb
pop
inc
jb
push
cmpsl
jp
jb
inc
pop
cwtl
mov
out
cmp
lds
add
cs
xchg
mov
xchg
add
mov
daa
sub
enter
mov
arpl
jne
cmp
stos
lahf
das
fwait
pop
fcmove
mov
sbb
jo
cmpsl
shl
mov
out
push
out
jnp
lods
mov
jle
or
mov
pop
js
mov
and
xor
fnstenv
pop
xor
xchg
mov
cmpsb
adc
adc
sarb
shll
push
push
popa
int3
add
lahf
jo
mov
sbb
clc
mov
add
gs
std
push
mov
mov
sar
arpl
int3
out
cmc
mov
ja
cmpsl
pop
nop
sbb
ret
in
repnz
mov
lcall
out
sub
movsl
fisubl
out
out
jne
cmp
imul
in
or
sub
inc
mov
jge
sub
push
mov
sbb
jo
xchg
push
and
push
ljmp
sti
jl
and
xor
or
mov
dec
jle
mov
fdivrl
jg
pushf
out
mov
cltd
push
pop
push
out
fwait
gs
jmp
xor
jns
fistl
dec
pushf
fld
in
cwtl
imul
gs
andl
xlat
add
xor
aad
imul
fistpl
scas
push
mov
mov
mov
ljmp
push
stc
cmp
xorb
sbb
ja
mov
push
xor
adc
xchg
ret
mov
inc
cltd
sbb
loope
xorl
adc
adc
mov
ficoml
sub
sbb
jb
sbbb
mov
enter
pop
xchg
gs
cmp
inc
adc
inc
call
jb
mov
cmp
int3
jb,pt
add
pop
lret
mov
fisubs
nop
sahf
xchg
and
fstl
repnz
or
gs
and
outsl
cs
mov
mov
fwait
add
push
out
cwtl
push
pop
test
popa
sub
scas
ficompl
push
in
in
and
shl
int3
popa
fdivl
dec
pop
call
cld
push
pushf
sbb
lahf
stos
mov
or
pop
in
imul
mov
fsubs
adcl
mov
call
scas
cmpsb
xchg
mov
pop
inc
mov
inc
shl
and
pop
sbb
test
arpl
pop
lods
sbb
int
lods
dec
call
xchg
push
sub
or
imul
ja
mov
mov
pushf
inc
jnp
add
int
in
xor
inc
mov
sarl
push
ljmp
sbb
ljmp
fstps
adc
in
sbb
xor
mov
inc
loopne
hlt
in
xchg
sbbl
ds
jl
jmp
cmp
adc
pop
cltd
and
aad
pop
sub
lret
pop
mov
inc
xchg
loopne
lret
iret
inc
push
mov
andl
add
pusha
jne
xor
enter
hlt
jmp
andl
data16
jno
mov
xchg
and
pop
add
xchg
ss
sbb
stos
pop
outsb
dec
mov
pop
mov
sub
inc
fsubl
or
shrb
lret
scas
xor
sarl
jns
in
add
pop
pop
and
jge
cmp
incl
cmp
xor
dec
fcoms
push
jnp
je
add
pop
in
mov
sar
insl
add
mov
notl
or
loope
les
mov
sub
jbe
js
or
sub
adc
in
stos
lock
insl
std
or
gs
jbe
out
fdivrs
xor
mov
fs
cli
inc
idivl
lock
lods
lds
cmp
cwtl
add
mov
imul
in
into
imul
mov
mov
mov
mov
scas
aam
dec
xor
out
daa
mov
and
sbb
divl
test
inc
lods
sbb
xchg
dec
movsb
and
cmp
push
ret
ljmp
sub
in
scas
sub
or
sub
imul
or
dec
jbe
sarb
xor
inc
sahf
gs
mov
imul
sbb
stos
sub
pop
adc
jle
cmc
sbb
fcomps
mov
je
in
mov
iret
adc
leave
ficomps
dec
adc
xchg
xlat
negl
xor
or
jle
addr16
mov
mov
and
cmc
inc
mov
movsb
bound
cmp
adcl
loop
pop
cs
or
pop
and
aad
jp
aad
add
lock
fadd
push
and
cmp
arpl
xor
dec
loope
int
cmc
adc
insb
enter
sub
lret
out
in
mov
repnz
pop
int3
push
jle
push
mov
xor
pop
bound
loop
push
daa
mov
sbb
pusha
mov
jb
movsb
sbb
mov
add
int3
dec
xchg
sahf
sbb
aas
xor
orb
inc
or
push
sbb
mov
xor
inc
lret
iret
aaa
shrl
pop
push
scas
xchg
das
fnstsw
sub
loop
popa
fnstenv
dec
inc
dec
es
sarb
xchg
mov
jae
pop
jnp
xchg
lds
stc
pop
outsb
inc
mov
int
je
mov
adc
icebp
push
dec
xor
test
cmp
movsb
jne,pn
and
sub
popa
push
aas
sub
mov
jp
mov
ret
jne
push
cltd
ja
fsubl
mov
adc
mov
jle
add
xchg
lcall
xlat
out
nop
mov
push
fsubrl
push
sbbl
push
mov
sbb
mov
push
insb
xchg
out
pcmpgtb
test
je
jecxz
mov
xchg
outsb
mulb
push
xchg
inc
imul
loope
pop
xor
xor
in
out
gs
ret
xor
inc
pop
sti
mov
orb
repnz
xchg
lahf
and
in
js
or
mov
ds
jns
xchg
jbe
sti
pop
cmp
aam
push
adc
or
mov
xchg
out
fs
mov
mov
adc
loope
inc
into
test
data16
or
lds
add
aam
mov
cltd
notb
ret
loop
imul
in
add
cmpl
xor
mov
mov
inc
push
or
sub
in
outsl
mov
jns
rclb
adc
push
push
cmpsl
cltd
addr16
sub
and
adc
mov
mov
jb
les
xor
imul
sarb
mov
pop
jmp
and
inc
push
mov
in
sbb
fmul
aaa
jns
mov
sti
xchg
mov
dec
jae
scas
cs
mov
ja
jnp
movsl
lods
jns
or
in
aas
jo
add
rcrb
shlb
mov
outsb
cmc
xchg
xchg
mov
mov
pop
xorb
movsb
mov
xor
add
xlat
mov
cli
inc
or
in
ss
push
ss
aam
mov
sub
fwait
out
xlat
mov
scas
icebp
cs
in
push
cmp
sbb
lea
adc
notl
iret
scas
stos
push
repnz
dec
or
mov
outsl
and
ret
or
or
out
sub
push
push
mov
jbe
decb
sarb
in
jp
mov
add
insl
jb
bound
and
mov
imul
xchg
adc
mov
fdivr
movsl
repz
imull
cwtl
inc
aam
and
rorb
adc
xor
mov
dec
mov
imul
insb
dec
cmpsl
cwtl
out
or
or
fsubs
test
andb
pop
jno
mov
xchg
cmc
mov
stos
cli
jmp
outsb
outsl
pop
clc
mov
adc
mov
ss
and
mov
cmpsb
call
mov
mov
cmpsb
xor
mov
clc
ret
lock
pop
push
xlat
push
in
xchg
ljmp
or
dec
lcall
mov
hlt
adc
jle
and
and
in
jae
mov
pop
pop
in
push
mov
xchg
aaa
mov
outsb
pop
lock
mov
cmp
push
mov
or
jne
cmp
orb
aad
in
shll
cmp
fldl
orl
cmp
xchg
sbb
sarl
mov
ljmp
add
adc
cmc
cmovge
sahf
adc
push
mov
cltd
mov
xchg
inc
idivb
jno
inc
dec
push
das
and
repz
andb
cmp
mov
mov
push
sub
rorl
loopne
xchg
sbb
neg
dec
sub
mov
jne
mov
inc
das
xchg
in
jle,pt
add
inc
mov
mov
inc
popa
cmp
int
inc
call
push
in
cs
mov
ror
jbe
jb
xor
push
mov
andl
and
jecxz
mov
and
adc
pop
cwtl
lods
xor
adcb
xor
mov
je
push
dec
and
shrl
cmpsl
cwtl
inc
xchg
jge
mov
jl
mov
iret
in
mov
fstl
jmp
pop
call
push
leave
aad
inc
sbb
mov
mov
mov
cld
push
add
adc
scas
cmpsb
or
lea
dec
xchg
fdivrl
es
int
push
dec
enter
inc
lret
sahf
fwait
jb
xchg
and
xchg
fistps
divb
rcrl
pop
mov
int
lea
in
popa
add
adc
ds
mov
iret
aad
das
mov
lea
and
pop
lret
pop
adc
inc
push
cmpsb
imul
popf
push
inc
mov
dec
cmpsb
inc
repnz
inc
outsb
xchg
lret
sub
fs
jmp
es
jo
pushf
cld
push
adc
sub
lods
push
mov
cld
fsubrs
add
subl
out
fsubrs
cmp
outsl
imul
fnop
xchg
sbb
jno
test
sub
lahf
mov
xor
xchg
and
inc
inc
ss
mov
mov
idiv
inc
inc
pop
cli
mov
push
lods
sub
jecxz
aaa
adc
mov
in
sub
fisttpl
dec
loop
lret
inc
xchg
fcoml
inc
stos
fisttpl
lcall
shlb
sbb
mov
int3
ja
sbb
mov
repnz
jl
js
scas
stos
inc
out
js
xor
mov
sbb
std
xor
mov
sbb
in
sub
movsb
inc
xorl
imul
popf
insl
js
mov
inc
jo
pop
lcall
loop
sti
out
push
repz
push
repz
shlb
pop
and
dec
jne
dec
stc
xchg
cmpsb
cmp
insl
divl
out
lock
sub
addl
pop
sub
add
jmp
cs
pop
imul
dec
sbb
gs
or
lret
aad
faddp
pop
or
and
gs
push
repz
ret
arpl
shlb
mov
jp
adc
repnz
es
fsubl
js
mov
mov
ja
jns
fs
in
addr16
mov
xchg
sbb
cmp
and
call
sub
scas
push
pusha
sbb
push
in
outsl
xchg
jns
addb
shrb
dec
jae
outsb
pop
mov
insl
pop
jl
or
ds
adc
fnstcw
xchg
mov
jmp
push
stos
xchg
pop
pushw
jae
add
mov
and
inc
cld
std
push
jmp
mov
out
inc
insb
pop
aam
out
lret
push
add
lret
out
pop
notl
xchg
push
mov
mov
pop
arpl
dec
cmp
fldl
rolb
inc
movsl
xor
xor
mov
jns
push
into
mov
inc
fiaddl
sub
enter
in
sbb
insl
adc
mov
mov
mov
scas
ljmp
movsb
mov
popf
cvtps2pd
jg
loopne
mov
mul
sbb
mov
leave
or
leave
loope
out
mov
test
cmpsl
adc
push
mov
aam
dec
testb
or
iret
sub
aaa
stc
dec
jo
jo
fisubrs
jb
push
mov
cmp
movsb
cmpsl
inc
sbbb
loopne
addr16
sbb
sbbb
mov
and
or
push
mov
cmpsl
mov
mov
leave
jle
add
sahf
orl
std
testl
mov
aas
rcrb
leave
dec
cli
pushaw
stc
jl
and
sub
lret
sub
mov
sbb
gs
mov
out
mov
nop
loopne
mov
int
in
dec
jp
aas
stos
inc
add
push
out
dec
sub
and
adc
jmp
dec
stc
xlat
mov
ret
sahf
lahf
bound
fldt
dec
cmpsb
faddp
sarl
fbstp
mov
leave
sub
dec
jge
adc
fimull
mov
test
in
cltd
xchg
fdivs
arpl
mov
xchg
mov
mov
loope
cli
sub
lock
jg
outsb
test
cmpsl
pop
xorl
push
inc
and
fs
inc
xchg
stos
data16
repz
jns
mov
pop
sbb
jecxz
xor
iret
loope
mov
push
adc
adc
cmp
lds
outsl
xchg
adc
push
xor
aaa
adc
xchg
jge
fdivs
je
aam
out
int3
pop
repnz
sarb
fcomps
out
scas
cmp
in
fdivr
rolb
imul
out
add
jae
jo
dec
inc
inc
int3
das
cmpsl
add
ret
pop
or
repz
orb
sub
pop
shrb
notb
enter
out
jge
data16
addr16
inc
test
inc
aas
dec
pop
insb
repnz
insl
xor
and
in
jbe
push
fincstp
lcall
scas
ss
pushf
aas
push
adc
dec
adc
pushf
ja
std
scas
mov
or
iret
enter
mov
mov
inc
outsl
inc
daa
pop
inc
shrl
pop
adc
repnz
jge
ljmp
int
mov
iret
js
ret
loope
movsl
stos
ljmp
lock
and
inc
cmp
add
fmuls
mov
das
int
adc
and
push
cwtl
push
mov
pop
faddl
push
xor
pop
sub
sarl
lock
mov
or
xchg
in
imul
dec
lcall
sbb
xor
mov
aas
cwtl
cmpb
inc
mov
hlt
jecxz
fiaddl
scas
in
insl
add
inc
dec
lret
sub
sbb
cmpsb
sti
es
jge
test
or
xchg
push
gs
pop
push
inc
test
lcall
pop
cld
mov
test
mov
cwtl
push
mov
add
push
mov
leave
jp
xchg
arpl
mov
nop
or
or
mov
cltd
xor
dec
insb
stos
cmp
cmp
gs
iret
mov
inc
xchg
loop
cltd
bound
loop
mov
lds
ljmp
mov
inc
adc
jo
inc
mov
cmpsb
mov
fwait
movsl
xchg
mov
mov
das
cld
pop
adc
jae
std
fsts
outsl
movsb
cmp
mov
sbb
std
lret
mov
lods
data16
cli
mov
push
xchg
sahf
jb
rorb
aad
iret
icebp
repz
cmpsl
leave
div
enter
push
out
push
stos
mov
jns
pop
enter
xchg
or
jg
ret
inc
out
loopne
das
pop
adc
sbb
in
mov
rcr
jmp
mov
in
out
pop
popf
stos
jge
xor
pusha
mov
adc
daa
adc
mov
test
jmp
xor
mov
mov
psubusw
inc
movsb
sbb
ja
in
adc
pop
push
loopne
jl
pusha
mov
loopnew
stos
inc
pop
repz
and
xchg
pop
push
ljmp
xor
stos
in
addr16
inc
loop
mov
cmp
imul
push
jmp
pop
loop
xchg
pop
pop
jbe
dec
in
pop
scas
movsl
push
js
pop
or
push
shl
add
ja
xor
xchg
inc
push
xchg
push
xchg
sub
nop
cltd
or
mov
mov
lcall
cmpsl
push
popa
jae
lret
dec
sub
xchg
js
push
sti
or
xor
ror
or
pop
xchg
outsb
ljmp
pop
sahf
mov
push
imul
dec
rolb
inc
je
arpl
jge
into
sbb
cmpsl
xchg
mov
mov
xor
push
or
add
mov
mov
test
jle
push
xor
cmp
mov
cmp
push
mov
sbb
dec
sbb
dec
addr16
ss
mov
cmp
mov
push
mov
add
popf
jecxz
jnp
cmpsb
out
mov
cld
pop
rolb
call
lret
int
ljmp
pop
inc
push
mov
mov
mov
sbb
insl
xchg
aas
cmp
clc
ret
push
sbb
imul
and
ret
je
add
and
stos
negl
test
sbbb
mov
cltd
loop
or
mov
daa
ret
test
cmp
shrl
aaa
fadd
scas
mov
push
das
and
and
mov
jp
jl
dec
clc
and
pop
pop
test
pop
mov
ret
and
sti
cmp
jp
test
add
fsubrp
sub
lods
xchg
dec
or
leave
fldenv
mov
inc
lret
loop
scas
push
call
xchg
push
out
mov
sbb
scas
mov
push
ret
cmp
imul
mov
loope
pop
sahf
faddl
pop
push
insb
hlt
repnz
fisttpl
cmp
mov
out
paddb
pushf
or
and
sub
test
push
fidivs
sbb
xorl
xor
lahf
lret
stc
stos
movsb
and
lret
pop
into
hlt
mov
xor
xlat
mov
dec
mov
xchg
iret
mov
sbb
and
add
popa
inc
lods
adcl
rcl
jns
int3
bound
jbe
cmp
pop
adc
into
stc
outsl
add
mov
sub
add
popf
inc
dec
xchg
das
and
dec
pop
mov
mov
imulb
fwait
push
fwait
jmp
sbb
aaa
inc
mov
mov
inc
xor
imul
jnp
jns
adc
xlat
cmc
ret
mov
cwtl
xchg
data16
jns
fcoms
inc
add
testl
sub
add
mov
sti
test
or
pop
lret
push
sub
mov
xchg
lret
sbb
sbb
mov
cld
das
rdmsr
xchg
or
loopne
xchg
fcmovnb
add
jecxz
ds
fistps
xchg
cli
fcmovbe
cmpb
popf
jle
nop
push
lods
dec
push
lds
fst
cs
mov
dec
jns
push
or
dec
out
pop
stos
ss
call
jg
sbb
jno
xchg
xchg
out
lea
bound
cmp
pop
adc
add
rcrl
dec
test
adcb
icebp
cmpsl
xchg
push
icebp
add
popf
mov
inc
adc
adcb
adc
sub
pop
les
fstps
push
mov
mov
mov
jmp
cmpsl
mov
repnz
mov
notb
push
sbb
inc
cltd
dec
or
and
jmp
or
pop
mov
test
sti
cld
and
into
insl
mov
adc
hlt
or
sahf
and
cmp
arpl
add
jo
xchg
fldl
aaa
push
jns
inc
sahf
jae
test
fidivrs
mov
jl
xchg
dec
mov
mov
mov
sub
adc
js
dec
inc
ss
roll
ds
imul
pop
add
dec
ret
in
cmp
mov
sub
sti
cld
ret
test
test
sub
addr16
push
cmp
test
mov
int
jle
aas
add
jl
mov
in
push
sub
loop
popl
stos
xchg
fcmovb
push
xchg
pushf
ja
xchg
sbb
mov
call
inc
jecxz
jg
mov
shrb
adc
mov
das
cmp
adc
fldenv
dec
cmp
adc
idiv
sahf
mov
add
mov
or
or
push
mov
addr16
cmp
cvtps2pd
push
imul
shll
in
cmc
mov
into
mov
enter
sub
pop
adc
pop
xchg
bound
adc
and
cmc
dec
pop
lret
aad
call
pop
cli
or
and
xor
les
sahf
or
mov
cmp
rcr
stc
into
pop
arpl
sbb
ret
adc
cmp
mov
jle
xor
pop
rcrl
out
mov
es
pop
stos
push
lret
add
arpl
push
jmp
cmp
mov
push
loopne
in
mov
test
stos
pop
bound
jbe
out
or
lret
dec
mov
adc
xor
mov
sbb
loope
xor
jle
insb
mov
sub
in
fisubs
mov
stos
je
sbb
sbb
or
enter
or
cmpsl
mov
xor
or
hlt
lahf
std
cmp
jmp
sub
add
dec
jmp
jl
scas
mov
xor
aad
adc
inc
cwtl
push
dec
mov
shll
data16
fists
pushf
stos
gs
sub
scas
mov
push
xchg
dec
in
pop
shlb
jae
sbb
mov
add
push
outsb
pusha
js
cmp
shlb
ds
int
mov
cmp
lahf
test
or
negl
mov
vmovhps
hlt
pop
jb
xor
mov
mov
hlt
aaa
jecxz
bound
jne
xorl
test
push
rcrl
cld
mov
dec
push
mov
add
aaa
push
inc
cmp
push
mov
mov
push
aad
out
insb
pop
int3
add
xlat
sub
pop
insb
shrl
pop
push
pusha
add
mov
adcl
subb
fsubrs
dec
lret
xchg
test
push
test
or
ficoml
add
and
mov
pop
decl
filds
jnp
cs
push
add
cmp
mov
sbb
orl
nop
jns
pop
xchg
repz
cwtl
stos
fsubrs
sub
sti
fistpl
add
cmp
mov
mov
sub
add
pop
xchg
mov
into
dec
outsb
es
mov
pop
imul
push
ret
mov
add
or
inc
dec
xor
lahf
int
dec
arpl
repnz
mov
mov
xchg
sub
addr16
inc
or
sbb
out
insb
imul
cmp
sti
addr16
push
mov
movsb
es
cmc
mov
or
leave
insl
push
sub
mov
jge
gs
shll
push
cmp
rorl
in
mov
and
mov
lret
icebp
adc
mov
ss
hlt
xchg
xchg
fmull
adc
and
dec
scas
faddp
add
xchg
xchg
stc
pushf
pop
cltd
inc
icebp
lcall
cmp
xchg
lods
dec
pop
sub
xchg
mov
inc
xchg
dec
xchg
je
les
int3
mov
sub
cmp
cmc
pushf
add
sahf
add
mov
pop
mov
std
pop
movswl
repnz
adc
popf
lahf
xchg
pop
repz
ss
xor
sub
fcmovne
pop
arpl
or
les
mov
xor
dec
pop
add
jg
lods
ds
xchg
adc
enter
cmc
or
sbb
adc
mov
mov
xchg
cmp
dec
dec
pop
pop
out
sbb
and
enter
mov
xchg
and
pop
mov
aad
mov
jp
cmp
in
dec
push
nop
not
mov
out
mov
pop
fwait
xor
in
shll
movsb
xchg
xor
movsl
pop
jnp
dec
jbe
insb
pop
sub
jne
jno
xor
sbb
ret
pop
je
cli
mov
pop
jno
sbb
lahf
inc
inc
sarl
ja
pop
xor
bound
mov
lods
stc
sbb
cli
movsb
inc
inc
xor
add
lods
scas
mov
mov
daa
inc
xchg
clc
mov
fdivs
or
shlb
add
xchg
cmp
dec
aam
dec
ficomps
outsl
adc
out
dec
stos
repz
add
movsb
lret
cmpl
pop
inc
lea
sbb
push
push
pop
xchg
cltd
pop
xlat
pop
lea
popa
add
jnp
mov
inc
call
outsb
gs
test
add
inc
jno
and
cmp
aaa
pop
test
ljmp
lods
mov
movsl
lea
hlt
lret
jg
jp
xor
test
rol
xchg
xchg
pop
jecxz
adc
sarb
xchg
scas
push
adc
out
testl
cmc
push
add
sarl
or
pop
insl
mov
out
mov
inc
xchg
add
inc
xor
ljmp
xchg
mov
cmp
jp
andb
fildll
push
aas
add
xor
mov
cmp
aaa
loop
stc
testl
call
dec
inc
ret
sbb
pop
clc
xor
out
xor
testb
xchg
sbb
lods
sub
cli
dec
dec
nop
cmp
inc
xor
and
cmp
fldenv
push
xchg
mov
inc
push
push
or
sub
mov
ja
xorl
sub
das
xchg
pop
pmulhuw
or
push
dec
repnz
push
mov
mov
cld
add
xchg
jb
mov
jbe
lds
xchg
testb
scas
or
popf
test
or
aas
sbb
std
aas
fs
xor
adc
cmc
outsb
je
loop
cli
sbb
xor
out
mov
cmc
xchg
pop
imul
jne
test
inc
aam
stos
call
jge
ljmp
pop
insb
dec
pop
outsl
sbb
arpl
jmp
or
push
icebp
leave
faddl
test
das
pushf
cld
incb
mov
mov
xchg
or
cmp
test
nop
push
push
call
or
cmc
mov
xor
insl
mov
jl
or
leave
xorl
jp
lods
xchg
out
test
jo
dec
adc
nop
inc
bound
jae
in
push
mov
lret
cs
jnp
xchg
mov
push
ljmp
pop
pushf
xchg
test
stos
aad
xor
cmp
cmpsb
jecxz
sbb
cltd
pop
faddl
daa
cmpsl
pop
or
cwtl
push
sbb
dec
arpl
xor
lret
xor
xchg
push
cwtl
add
pushf
js
out
sbb
ret
and
add
fstpt
inc
jo
cmp
sbb
add
sti
cli
bound
adc
dec
xor
mov
adc
dec
stc
fwait
xor
pop
push
jno
fadd
fsubrl
call
movsl
sub
xchg
icebp
mov
xlat
js
lock
or
jbe
sbb
loopne
aad
les
push
dec
add
mov
fdivs
in
popl
jb
adc
pusha
leave
xor
mov
push
out
fdivrs
dec
lcall
pop
das
je
pop
cmp
hlt
mov
pop
cmp
push
lods
mov
hlt
je
pop
sub
sbb
pusha
repnz
inc
in
xor
incl
inc
add
lcall
pusha
aas
cmp
mov
sub
arpl
dec
lea
jno
aas
das
jge
fcmovb
in
fildll
sbb
je
sbb
call
insb
addl
pop
pop
and
test
aad
mov
or
inc
out
shr
xlat
ret
inc
cs
ja
xchg
mov
add
xchg
dec
jnp
jnp
cli
push
sbb
test
inc
loopne
rorb
jg
and
dec
rolb
repnz
xchg
cmp
icebp
loopne
inc
stos
xor
lret
sbb
ljmp
out
fs
ret
testl
scas
pushf
sti
xor
repz
mov
jno
sbb
sub
lahf
enter
sbb
fnclex
inc
mov
jns
adc
and
repnz
pop
fcomps
sbb
xchg
out
xchg
rcr
scas
pop
daa
popl
ret
jp
addr16
sbb
mov
cmp
fwait
ja
gs
subb
stos
and
add
stos
push
ss
outsl
xchg
inc
scas
in
jns
cmp
pusha
mull
popl
popf
xor
adc
jbe
push
lcall
aam
jle
pop
cmc
sbb
mov
mov
sbb
pop
cmpsl
inc
out
out
pushf
mov
shlb
add
sbb
pand
push
int
mov
push
fistpll
dec
dec
or
insb
fcmovbe
or
ss
dec
push
push
in
jge
outsl
fidivrl
adc
loop
lock
pop
out
add
dec
gs
push
orl
scas
jg
xorl
mov
push
gs
roll
or
test
in
add
fmuls
or
xor
adcl
push
or
mov
inc
sub
iret
xlat
lret
jb
or
fdivs
stos
shll
std
cli
push
add
inc
push
sbb
mov
pusha
xor
adc
outsl
mov
inc
xor
mov
xor
and
and
push
popa
jl
enter
decb
and
push
mov
cmp
movzwl
dec
push
xchg
xor
or
inc
dec
mov
lock
jl
clc
mov
rolb
pop
lock
push
cmpsb
mov
xchg
cs
icebp
push
lahf
mov
fdivr
mov
fldl
jbe
pop
imul
pusha
lock
leave
cmp
insb
push
rdpmc
sub
xchg
jb
and
repnz
sub
cmpsb
dec
into
add
leave
or
mov
push
push
inc
and
imul
loope
push
xor
add
fimuls
outsl
xchg
fiadds
pushf
sbb
cmpsb
mov
mov
call
clc
loope
test
neg
cmpsb
and
push
inc
push
inc
in
jb
sbb
test
mov
pusha
dec
and
int3
ret
inc
and
arpl
add
cmpsl
push
push
cmp
push
nop
cwtl
add
push
out
sub
mov
inc
sbb
aaa
jecxz
xchg
jg
and
push
add
cld
aad
inc
push
nop
cld
ja
or
int
rcll
out
sbb
xchg
xor
nop
inc
inc
mov
add
cmp
lds
mov
idiv
jp
popf
bound
mov
xor
test
in
mov
or
sbb
notl
repnz
xchg
shrb
test
out
das
mov
outsb
pushf
pop
rorl
addr16
adc
scas
adcb
lods
xchg
leave
ds
jae
scas
cmp
pop
jge
mov
inc
inc
push
pop
cwtl
inc
in
in
dec
jbe
sbb
iret
xchg
add
jbe
add
pop
mov
es
add
add
xor
mov
into
outsb
push
jb
mov
and
outsl
pop
out
aaa
andb
xchg
lods
adc
adc
mov
add
inc
push
fs
lcall
fidivs
adcb
shll
loop
je
cmpsb
push
push
dec
dec
dec
jp
sbb
sbb
mov
repz
lock
adc
jge
xlat
pop
dec
add
in
adc
mov
ljmp
push
daa
xchg
or
sbb
lods
ds
mov
arpl
sti
pusha
or
das
mov
dec
jp
jmp
movsl
sub
jecxz
arpl
or
adc
sti
data16
jecxz
adc
test
sub
scas
repz
mov
stos
lret
stc
stos
movsb
mov
insb
into
pop
rclb
cli
mov
filds
cwtl
xchg
out
inc
push
lahf
pusha
ret
mov
stos
jg
xchg
xor
test
in
scas
add
xor
lods
shlb
outsb
dec
push
push
mov
mov
call
cmp
xchg
jb
jns
dec
mov
dec
jle
adc
stc
test
push
ds
pop
inc
adc
fisubl
pusha
add
out
cmp
sub
inc
aam
mov
add
add
jo
jnp
andb
xor
or
inc
aam
cs
aad
mov
inc
inc
addb
jbe
movsb
movsb
int3
mov
int3
ljmp
push
pop
push
fildl
insl
push
sub
and
pop
ret
mov
pop
lret
mov
mov
ja
lcall
adc
sahf
popa
outsl
mov
dec
dec
sahf
pop
cmp
add
add
pop
cmpb
inc
xorb
jo
adc
ret
ret
data16
icebp
mov
xor
insl
shl
xchg
cmp
lds
shrb
in
push
pop
add
add
xlat
mull
cltd
imul
add
lcall
cmpsb
add
cmpsl
jle
cmp
pop
aas
push
repnz
testb
leave
jae
cmc
add
mov
dec
or
std
add
fcomps
pop
repz
hlt
dec
pushf
dec
and
mov
inc
fldl
repnz
push
add
ret
addr16
add
pop
inc
sbb
fs
insb
pusha
xchg
jl
xchg
sub
jl
loop
pop
je
xchg
pop
push
and
shll
mov
adc
int
or
mov
mov
into
jmp
imul
add
clc
je
loopne
sahf
push
xchg
cmpl
mov
arpl
gs
push
inc
mov
jb
clc
and
in
adc
cwtl
clc
ret
imul
ret
cmpsl
inc
mov
lcall
mov
ret
insl
add
sub
add
lds
push
pop
adc
stos
inc
shrb
or
mov
cmp
jae
leave
mov
es
sub
xor
xor
ljmp
sub
mov
divw
inc
jae
leave
adc
cld
jnp
rcrb
or
xor
and
in
and
fnstsw
cli
and
pop
pop
or
fs
jno
push
scas
jle
dec
stc
mov
arpl
pop
pop
dec
jmp
dec
jns
jmp
inc
insl
push
sbb
movsb
and
mov
dec
cmp
or
mov
aad
sub
pop
pop
and
icebp
pusha
das
rol
pusha
sti
enter
push
and
js
addr16
mov
in
inc
xor
cli
arpl
or
sbb
mov
out
jnp
push
xchg
mov
cmp
in
pop
fwait
xchg
mov
push
out
aaa
sbb
mov
jmp
xor
cmp
mul
xchg
cmp
pop
push
dec
pop
sub
das
std
jl
loope
cs
in
pop
jne
mov
and
loope
pop
or
scas
popf
push
cmp
cmpsb
xchg
pop
or
add
xchg
adc
insl
and
out
jl
jmp
adc
cmp
mov
test
lds
rorl
stc
lods
shlb
adcl
loopne
xor
lds
insb
jg
lock
mov
inc
adc
inc
lock
add
ds
mov
push
sub
jnp
and
mov
sti
jl
pop
jbe
mov
jp
add
adc
inc
jg
or
sub
mov
and
xor
jnp
ss
loope
pop
pop
fsubl
add
ljmp
arpl
mov
sub
or
and
dec
cmp
sbb
add
pop
mov
xchg
push
push
xor
and
fidivrl
lods
lret
jo
or
lret
insb
and
and
iret
pop
lret
mov
fimuls
jae
ds
pop
add
sbb
sub
movsb
mov
loope
fdivrl
gs
ret
xchg
loop
mov
xor
xor
jbe
adc
push
std
push
out
mov
in
in
shll
cmpsl
loope
pop
cs
xorb
mov
pop
or
fwait
xchg
and
enter
movsb
mov
cmp
fwait
out
xor
das
lock
imul
pusha
sub
test
daa
fisubs
jb
popa
push
fsubl
xchg
fcmovnbe
add
and
cmp
push
cltd
mov
icebp
aad
lcall
pusha
or
inc
out
pop
sub
jmp
cmp
inc
mov
dec
dec
jl
or
ret
arpl
push
test
adc
push
test
cmp
lods
loope
ror
lock
cmpsb
popa
adcl
and
add
cld
xchg
fcmovbe
data16
adc
mov
mov
sbb
mov
and
dec
add
or
add
xchg
iret
mov
mov
lahf
xor
jmp
add
push
xorl
nop
test
jbe
orb
ficompl
mov
push
in
iret
adc
stc
or
repz
xor
sub
sahf
cmp
xchg
ljmp
sub
mov
je
push
aam
mov
cltd
fldcw
std
repnz
fs
xchg
mov
fwait
loope
push
lret
jle
stc
cmc
imul
mov
or
sbb
testl
lock
adc
pop
or
cli
cmp
out
xorl
mov
pop
adc
ret
test
push
out
shrb
pop
pushf
mov
fisttps
push
scas
mov
sbbb
mov
jnp
rol
outsl
sbb
ljmp
mov
mov
out
xchg
lahf
xor
cs
push
std
sbb
gs
xor
ljmp
xlat
ss
sbbl
or
mov
cmp
test
xor
pop
mov
stc
jnp
fst
mov
cli
arpl
push
xorb
dec
pop
pop
cltd
jle
xchg
mov
xor
mov
jg
arpl
jmp
sbb
dec
out
adc
pop
inc
add
js
fidivrl
sti
jne
out
andl
sbb
aad
fidivl
mov
or
pop
int3
dec
inc
xchg
jns
or
xor
lcall
mov
in
mov
nop
pop
push
js
in
out
adcb
mov
lods
xor
mov
and
clc
xchg
jae
jmp
mov
cmp
test
int3
jno
and
push
dec
hlt
cwtl
in
mov
mov
out
add
jo
shll
jae
popl
jge
or
cld
mov
xchg
bnd
jl
aaa
roll
fdivrl
or
subl
mov
mov
cs
adc
inc
or
adc
loope
das
mov
in
pop
push
pushf
mov
mov
gs
adc
cltd
push
push
sbb
insl
rcrb
arpl
inc
add
adc
sub
adc
sbb
pushf
imul
push
loopne
mov
jge
lock
int3
std
movb
lret
pop
adc
subb
inc
xchg
jmp
pop
idivl
mov
mov
fucomip
pop
je
mov
test
sbb
aad
aaa
call
nop
or
ret
jg
sbb
pop
movsl
aam
scas
push
outsb
dec
jo
mov
inc
or
call
orl
ss
cltd
pop
push
sbb
repnz
popf
insb
sbb
xor
out
pusha
hlt
nop
jno
inc
jo
cmpsb
aaa
idivl
lds
es
inc
repz
das
or
jns
es
inc
out
add
xchg
ja
mov
mov
into
xchg
xor
push
cld
dec
inc
jne
jmp
push
les
push
ljmp
adcl
dec
push
enter
in
into
xchg
enter
sub
hlt
fucomi
cld
inc
scas
mov
pop
mov
inc
inc
subb
and
add
roll
jbe
dec
mov
mov
stos
cmp
ds
mov
jnp
popa
cmpsb
fsqrt
mov
arpl
sbb
cli
mov
iret
or
jnp
test
testb
cmpsb
ret
mov
and
inc
inc
mov
stc
push
jns
shrl
jnp
call
sti
in
and
icebp
inc
sub
add
inc
cli
push
scas
xchg
xchg
adc
cmp
pusha
ror
daa
sahf
notl
outsb
andl
lea
pop
inc
aam
fisubs
pop
mov
sub
and
jge
pop
mov
jbe
addr16
push
popa
out
ret
imul
mov
aam
in
cmp
test
xchg
sti
or
add
inc
jnp
jne
cmpsl
jecxz
pusha
leave
fcoms
addr16
loopne
scas
push
sub
dec
cmpsl
cmp
dec
repnz
insl
sbb
push
or
stc
push
cmp
jle
mov
es
add
or
sarb
dec
aas
mov
jecxz
fisubrs
jne
xchg
mov
jne
and
jns
cld
mov
scas
mov
imul
stos
repz
and
xor
incb
popf
inc
add
dec
test
or
int
rclb
ss
in
jns
movsb
mov
sahf
xchg
testl
xor
mov
repnz
dec
xchg
xchg
jp
fstl
or
and
ds
gs
mov
push
out
inc
fprem1
jnp
dec
inc
test
jo
loop
in
mov
pop
aas
fwait
adc
jae
ds
mov
mov
xchg
push
add
mov
cltd
cs
loopne
in
xor
lds
repz
scas
call
bound
lds
popf
add
enter
or
xchg
dec
xchg
mov
fmuls
inc
inc
cwtl
iret
mov
cmp
push
lahf
popf
in
stos
mov
out
mov
sahf
out
pop
xchg
sub
push
stc
jnp
testb
repnz
aad
and
push
inc
sbb
mov
ljmp
orb
add
ja
nop
jp
in
mov
cmp
aad
mov
fnstsw
int
bound
out
cs
test
daa
xchg
hlt
pop
bound
adc
xchg
fwait
jbe
or
shlb
xor
fcoml
push
xlat
adc
cmp
mov
addb
push
dec
adc
push
xchg
addr16
push
fistl
dec
and
pop
sar
in
outsl
add
mov
push
in
jmp
sub
xchg
sbb
test
arpl
inc
orb
push
loopne
repz
scas
add
das
jge
mov
jns
sbb
cmpl
std
test
shr
dec
or
jnp
inc
test
push
rcrl
xor
pop
push
in
sbb
fs
xor
jnp
inc
orb
and
addr16
cs
push
cmpsb
cmovo
cmpsl
xchg
lock
mov
xchg
stc
and
adc
dec
movsl
insb
gs
adc
lcall
dec
xor
in
pop
mov
outsb
nop
pushl
ret
or
repz
adc
jl
lahf
pop
dec
insb
mov
shlb
pop
mov
pushf
sub
test
add
inc
and
fnstenv
outsb
jbe
mov
adc
mov
fimull
sub
pop
nop
movsb
push
imul
push
and
insb
js
enter
jmp
and
lods
gs
push
mov
in
clc
popa
es
cmp
outsl
flds
in
push
pop
popl
in
or
mov
lock
mov
push
mov
movsl
mov
insb
xchg
mov
mov
dec
xchg
andb
ja
and
inc
mov
mov
adc
ljmp
dec
adc
push
xchg
mov
sbb
outsl
movsb
in
js
push
ret
push
or
movsl
mov
je
imul
jb
mov
lcall
in
hlt
insb
aaa
loope
fldenv
xor
jbe
xor
adc
loope
or
lods
shlb
dec
fidivrl
repnz
sarb
repnz
jmp
inc
mov
mov
pop
inc
mov
dec
aam
test
adc
mov
pop
xchg
jg
cwtl
js
inc
mov
xchg
xor
mov
inc
in
xor
dec
dec
negl
jne
xchg
shr
inc
add
xlat
notl
lock
jg
jns
jmp
iret
enter
fcmovbe
daa
bound
pop
cmp
sbb
pushf
mov
jnp
inc
les
notb
xor
or
push
mov
push
xchg
outsb
mov
mov
or
xchg
mov
mov
cmpsl
test
faddl
sub
cld
inc
imull
data16
sbb
push
jmp
testb
and
in
sarb
push
xchg
bsr
cmpsb
and
mov
nop
sub
addr16
xchg
and
xor
sub
adc
addr16
int
daa
xchg
push
iret
add
pop
repz
sarl
sub
mov
js
or
lahf
scas
dec
mov
sub
int
add
push
test
jo
cltd
scas
pusha
mov
ficomps
push
cmp
ljmp
push
stc
ret
lret
mov
push
lcall
mov
jge
pop
xchg
cmpsl
loop
das
adc
icebp
clc
jno
xor
adc
and
fldcw
mov
movsl
and
cs
sub
dec
mov
in
dec
insl
cmp
sbb
sub
sub
testb
adc
std
add
push
loope
leave
pop
jo
xor
clc
adc
int
stc
test
mov
xor
movsl
imul
sbb
inc
dec
dec
in
fcmovne
dec
pop
je
mov
and
rorb
in
push
jne
xchg
into
and
int
es
mov
inc
adc
scas
or
test
cmp
add
stos
dec
jg
out
ljmp
int
and
add
fucomi
std
scas
test
out
pushf
mov
dec
arpl
sti
sarl
push
test
mov
jne
outsb
shrl
cmc
and
pushf
in
mov
ret
les
fidivs
adc
fadds
adc
lcall
jae
std
inc
and
hlt
and
add
mov
and
sub
je
fstps
pop
add
sbb
scas
in
sti
mov
mov
hlt
dec
add
movsb
inc
inc
je
pop
shll
lret
xchg
loopne
mov
cli
add
aas
mov
hlt
xchg
lcall
mov
xchg
push
out
lock
inc
and
into
mov
cmc
pop
push
inc
dec
pop
fimuls
pop
insb
je
sub
loope
cmp
push
jno
fwait
mov
mov
enter
test
sbb
add
and
in
inc
cs
xchg
ss
cld
pop
cmp
js
ret
clc
lret
push
add
dec
stos
mov
push
in
sub
jp
jno
mov
jno
or
inc
push
subl
shrb
mov
fwait
xorl
data16
xchg
adc
push
mov
adc
in
iret
xchg
xor
mov
jge
movb
ljmp
cmpsb
in
pop
fidivl
ljmp
mov
and
adc
xor
sbb
in
stos
push
subl
daa
nop
push
push
xchg
adc
xchg
call
inc
xlat
jbe
mov
cmp
sbb
lret
clc
or
pop
mov
into
cmp
inc
aas
and
jnp
daa
arpl
pop
call
scas
mov
arpl
stos
mov
dec
sub
out
jmp
mov
push
pop
das
test
adc
jecxz
mov
fimuls
xchg
les
add
sahf
jge
das
cmpsl
stos
sub
sub
cli
lahf
andl
rorl
fsts
divl
cltd
shl
inc
rorb
or
addb
popf
pop
lock
mov
jns
add
pop
sahf
add
cltd
stos
xchg
xchg
xor
adc
out
adc
pop
popf
daa
dec
jns
repnz
sub
xlat
pop
jb
test
call
insb
das
mov
add
push
jae
aam
lret
loopne
xor
sbb
ss
dec
or
push
lea
mov
fucom
stos
jno
mov
leave
stos
addr16
xor
add
arpl
mov
mov
ss
cmp
lahf
mov
mov
cs
push
push
fwait
dec
xchg
jae
or
sbb
fs
test
push
mov
test
inc
btr
mov
push
out
adc
adc
test
sub
outsl
dec
or
and
iret
mov
sub
sbb
cli
test
cmp
sbb
mov
in
lds
or
and
out
jb
pop
outsl
lcall
out
into
mov
in
xchg
mov
data16
fwait
stos
jbe
push
arpl
sbb
push
sbb
test
xor
jl
mov
icebp
push
push
mov
mov
popa
and
mov
sub
sub
or
adcb
outsb
andl
and
icebp
sbb
ds
jnp
in
jne
std
sub
lock
test
rep
mov
or
dec
mov
leave
scas
sub
inc
lret
or
stos
cmp
lea
jp
leave
lods
loop
sti
ljmp
test
xchg
mov
lret
les
out
add
and
add
push
inc
push
mov
dec
aad
cltd
daa
cli
lcall
mov
push
inc
ficompl
and
scas
add
mov
pop
lds
stc
adc
test
adc
rcr
or
sub
cmpsb
fwait
xor
andb
clc
sti
xor
mov
sti
mov
lahf
movb
xchg
cmp
loope
or
xchg
mov
mov
fisttps
and
in
fdivl
pop
mov
lcall
out
cmp
mov
sub
fdivl
xor
mov
sti
cmp
xor
push
imul
insl
push
inc
pop
xchg
xchg
in
dec
inc
out
ret
fs
xchg
sub
xor
mov
push
cmc
fldl
cli
mov
jnp
js
xor
loopne
jnp
enter
cmp
mov
gs
ds
dec
call
int
stos
sub
sbb
push
mov
jl
sahf
lods
and
jnp
jl
jae
jb
xlat
inc
movsb
addr16
outsl
enter
push
inc
je
scas
sti
mov
loope
jo
insl
shll
test
jecxz
sub
gs
sbb
mov
inc
fcoml
xor
jle
pop
int
or
loop
push
sub
xor
sarb
sar
xlat
addr16
add
int
fwait
mov
and
je
mov
jle
out
adc
xor
sbb
js
icebp
push
add
inc
adc
dec
cmp
test
fs
fbld
loope
xchg
je
mov
mov
test
jb
or
mov
xchg
pop
cmp
dec
in
inc
jg
cmp
and
test
cltd
adc
mov
nop
cltd
in
sub
add
out
in
fsubrp
rcll
sbb
ljmp
inc
cmc
sbb
push
les
jne
js
lret
test
ljmp
sbb
test
lock
cmp
pop
leave
sub
jge
push
daa
sub
enter
ret
xchg
jge
cltd
hlt
je
add
xchg
popf
scas
and
jno
jbe
mov
cmpb
loope
movsl
in
jl
dec
jmp
shll
imul
ljmp
sbb
mov
in
lcall
inc
mov
jno
sbb
adc
aaa
ss
fisubs
dec
aad
lock
aam
and
loopne
or
jae
outsl
int
sti
and
xor
nop
gs
hlt
cmp
out
jle
cmpsb
stc
rol
pop
inc
pcmpgtb
repnz
ljmp
pop
pop
andb
gs
cmp
pop
shll
xlat
sbb
push
jg
mov
lahf
insl
fstpl
jmp
lret
std
cli
lret
push
push
sbb
stos
je
outsb
hlt
daa
int
in
cmp
dec
out
jge
pop
and
mov
aad
and
sub
pop
fidivl
mov
data16
jle
or
cltd
sub
adc
ds
push
jp
aam
test
pop
movsb
fstpt
js
ljmp
push
jge
sbb
xchg
pop
mov
push
cmpsb
cmpb
xchg
dec
pop
pop
sbb
xor
test
mov
sbbb
lret
js
xchg
push
mov
and
xor
push
mov
scas
jns
hlt
cmp
ljmp
inc
popa
fcmovu
or
jp
outsb
sub
gs
lcall
mov
dec
xor
insb
not
xor
in
jnp
repnz
xchg
or
movsl
mov
clc
xchg
ds
jp
inc
dec
or
xchg
test
mov
xor
sbb
add
xchg
pop
sbb
loopne
fildll
iret
adc
cwtl
rorl
push
addr16
cmpsl
add
mov
or
fildl
mov
inc
mov
cmp
mov
mov
and
sbbl
inc
in
pop
mov
mov
inc
dec
lcall
lea
loope
cmpsl
jl
lock
aam
mov
pop
add
into
jb
cwtl
pop
cmp
iret
mov
les
add
test
pop
fmuls
add
iret
adc
pusha
add
cmp
mov
loopne
rorl
lahf
sbb
jl
lods
outsb
outsl
in
mov
popa
lahf
xchg
sub
lahf
add
inc
in
jo
fimull
mov
int3
push
inc
frstor
shrb
cmp
in
mov
clc
cmp
xor
shrl
or
xchg
cmp
push
dec
std
cmpsl
mov
inc
sbb
dec
sbb
idivl
repz
lea
jecxz
lahf
les
push
push
xchg
pushf
pop
push
loope
pop
mov
test
loope
call
dec
mov
xor
icebp
push
pop
mov
mov
mov
xor
movsb
fidivrl
stc
push
adc
icebp
frstor
dec
jnp
mov
jl
cli
adc
sub
cmp
jae
ja
cmp
sbb
stc
jnp
mov
clc
mov
lcall
stc
ds
mov
lods
push
iret
xchg
int3
fidivl
push
jmp
ljmp
add
test
xchg
cld
fistpl
roll
and
cld
jno
add
cmp
aaa
jne
not
rcr
xchg
sbb
popf
ret
jmp
ret
stos
dec
scas
mov
sbb
xor
ds
sub
inc
push
addr16
mov
lods
icebp
mov
ficoml
push
xlat
xorb
fdivrs
cltd
gs
push
push
dec
or
shll
mov
outsl
cmpsb
sti
insb
mov
pop
in
cmp
aam
xchg
and
mov
fistps
pop
jg
push
aad
or
push
and
scas
stos
push
mov
mov
aaa
push
rorl
mov
test
xlat
mov
xor
popa
xor
sbb
push
loopne
sbb
pop
sti
iret
push
pop
pop
adc
cli
scas
jns
cmc
mov
es
pop
and
cmpb
pop
xchg
and
jns
push
les
adc
sbb
ss
jnp
sbb
fidivrl
and
pop
pop
sub
mov
pop
loop
lds
movsl
push
fiaddl
stc
mov
mov
stc
jg
sti
jo
cmp
das
pop
inc
outsb
fistpl
mov
aad
int
add
jnp
movsb
xlat
sbb
mov
shlb
jmp
orl
pop
pop
stc
into
fs
add
add
pop
fwait
dec
imul
cmpsb
popf
cmp
aam
pop
cmp
lock
lock
jmp
xor
add
mov
push
jecxz
call
sbb
frstor
inc
mov
or
insl
sub
mull
xchg
dec
sahf
add
xor
sbb
mov
scas
cmp
inc
movsl
aam
das
inc
ret
sahf
fldenv
inc
roll
into
sub
test
cmc
js
adc
and
bound
popa
enter
jmp
aad
xor
dec
pop
cmp
jge
cwtl
jb
adc
das
or
fwait
loopne
dec
sbb
adc
lock
pop
cmp
lods
push
pop
push
aad
sbb
popf
sbb
repnz
bound
mov
dec
fldl
mov
lock
fsubrs
in
adc
sub
jno
inc
adc
outsl
dec
mov
xchg
lret
mov
adc
fsubrl
inc
xor
dec
inc
sbb
jne
push
push
addb
inc
aam
sub
xor
pop
subb
push
fdivs
imul
add
or
push
inc
pop
movsb
sub
loopne
xchg
adc
pop
dec
cmp
in
push
les
sub
ret
ja
outsl
mov
xchg
xchg
pusha
shlb
cmp
push
sbb
hlt
daa
arpl
pop
aas
xchg
addr16
add
mov
pushf
ja
mov
mov
cmp
mov
jge
scas
movsb
ss
call
ret
sbb
adc
lret
push
loopne
sub
gs
mov
pop
and
sarb
mov
sub
jg
repz
cmp
sub
incb
xchg
mov
add
add
movzwl
jno
stos
lds
mov
dec
addr16
xchg
out
lret
shl
pop
mov
inc
shrb
sub
fnstenv
add
mov
movsb
jbe
mov
out
add
mov
cmp
push
test
lock
push
cmp
arpl
cmp
mov
sarb
insl
clc
in
in
in
shlb
cmp
bound
adc
lods
cmp
shrb
in
xlat
fcoml
pop
lds
mov
xor
clc
add
push
rcrl
jno
push
mov
jne
sbb
imul
into
xchg
test
add
sbb
loopne
inc
and
sub
push
test
mov
jp
xor
push
sbb
imul
daa
add
mov
pop
pushf
movl
stos
inc
xchg
fs
inc
xchg
sbbb
jmp
or
gs
neg
fwait
dec
jl
and
fldenv
fstl
cmp
inc
inc
movsb
je
out
loopew
lcall
std
push
inc
movsl
fsub
pop
andl
xchg
insb
ror
mov
inc
jl
sbb
mov
into
je
mov
pop
imul
test
push
test
and
pop
cs
subl
gs
push
and
test
mov
add
or
xor
movsb
pop
mov
repz
push
mov
lds
pop
jg
or
sub
xchg
fcmovbe
push
xchg
addb
jbe
pop
insb
cmpsb
mov
js
jo
in
or
inc
mov
jbe
mov
fsubl
add
nop
inc
in
rcrl
pushl
add
fcomps
sub
jb
and
jo
xchg
xchg
daa
fnstcw
and
loope
test
fsubl
divl
sbb
repnz
es
or
and
shll
adc
push
sub
nop
jmp
sub
push
or
sub
mov
shr
lods
les
mov
mov
outsl
rorb
push
je
dec
popa
test
rcrb
xor
dec
addr16
push
xor
mov
or
pop
or
jns
xchg
imul
inc
fidivs
movl
dec
lock
cmp
les
mov
pop
popa
inc
popf
sbb
add
sub
cmp
mov
adc
in
sbb
sbb
daa
dec
cmp
lds
jg
ljmp
insl
sahf
popa
dec
negb
popa
or
jmp
and
dec
or
mov
push
std
out
stos
dec
pop
mov
and
jmp
mov
push
cld
jle
cmp
cmp
add
dec
push
imul
inc
popa
mov
outsl
mov
lahf
fisttps
mov
sahf
imul
lods
mov
test
test
sub
sbb
fstp
cmpsl
sub
or
jb
jbe
dec
nop
jo
mov
pusha
xchg
push
sub
inc
xchg
pop
inc
inc
jmp
ds
movl
mov
mov
or
stos
inc
add
jb
ds
and
xor
xlat
imul
cmp
fucomip
imul
daa
shlb
or
sub
dec
into
xchg
pop
outsl
js
fcoms
sub
call
pop
jmp
xor
movsl
popw
cmp
xor
cmp
lret
cmc
cld
popa
xchg
icebp
icebp
and
fldt
lret
and
pusha
mov
filds
pop
scas
cld
pop
stos
sub
mov
aam
lahf
pop
sbb
fistps
push
xor
movsl
out
test
arpl
shlb
jle
jns
in
mov
mov
ds
mov
and
xchg
mov
jbe
ja
je
mov
inc
pop
mov
loope
enter
mov
mov
push
lods
jl
ret
popa
xor
cmc
push
xor
xor
mov
push
sub
ljmp
sub
pop
push
pop
imul
sbb
icebp
int
aam
repnz
push
xchg
test
xor
mov
in
insb
adc
and
sbb
mov
in
push
jno
jae
sbb
xchg
fsts
scas
and
icebp
xchg
or
fs
je
data16
push
push
setnp
dec
jl
push
jns
es
mov
mov
sub
push
push
push
lods
and
fsubs
orb
cmp
or
cmp
scas
pop
hlt
cmp
stc
inc
xor
push
sub
hlt
pop
shl
push
jp
roll
xlat
inc
mov
outsb
cmpsb
call
pop
push
adc
sub
test
test
xor
and
data16
int3
pop
or
cmpsb
or
fstpl
fsubrs
cmp
pusha
iret
xchg
mov
cmp
and
sbb
fidivl
dec
pop
call
ja
xor
pop
push
ret
jmp
lea
test
test
sbb
pushf
imul
push
pop
hlt
in
sub
imul
mov
fcmovu
push
pop
popa
mov
jno
adc
jl
movntps
inc
inc
cltd
cltd
and
and
and
lcall
mov
xor
mov
mov
push
sbb
imul
into
movsl
xor
xlat
lds
ds
jae
mov
or
lahf
aaa
or
or
jp
jmp
iret
pop
push
sti
dec
imul
js
dec
adcb
rorl
inc
movsb
inc
or
cli
cmp
inc
xchg
js
orl
jg
fs
adc
test
out
jbe
mov
cmp
xor
mov
arpl
mov
cmpb
das
sbb
push
lods
and
xor
xor
je
aas
mov
and
adcb
jne
ret
inc
daa
imul
cs
in
leave
push
sub
cwtl
in
xchg
dec
clc
push
jbe
iret
outsl
adc
or
mov
pop
add
adc
cmpsl
sahf
in
insb
ror
aaa
dec
push
inc
dec
ljmp
jo
sahf
push
inc
je
jg
in
push
dec
data16
shll
fisubl
jbe
mov
xchg
or
inc
scas
xchg
xchg
aaa
idivl
pop
and
fistl
sub
repnz
in
test
ss
fbld
mov
pop
outsb
mov
in
aas
jmp
aas
ss
jge
adc
xchg
pusha
sahf
sbb
aad
fwait
dec
mov
mov
outsb
dec
ja
sub
test
add
mov
ja
insb
inc
pusha
aad
int
jmp
or
pop
pop
jno
push
ss
mov
and
outsb
les
fcompl
int
nop
popa
popa
mov
xor
out
mov
mov
mov
dec
fistl
or
enter
inc
push
or
push
into
cli
test
lock
pop
hlt
push
aam
inc
pop
mov
stos
jo
packuswb
dec
addb
push
mov
inc
popl
les
jge
jns
fstpl
mov
cld
mov
iret
dec
sub
je
mov
inc
ljmp
mov
push
mov
adc
mov
and
outsb
mov
cmp
sahf
out
popa
push
add
fdiv
dec
xor
ret
jns
pop
mov
lock
push
push
or
jo
fnop
push
adc
adc
in
je
sub
cmp
mov
mov
sub
sub
cmp
add
ds
xlat
xor
sbb
xchg
pop
ja
mov
sbb
es
mov
les
loope
cmpsb
xor
cmp
and
cs
pop
test
ret
mov
outsl
mov
aad
xchg
loope
cmpsl
rorl
ss
xchg
pop
pop
gs
push
ljmp
and
push
mov
dec
aam
pmulhuw
ret
dec
or
jbe
leave
das
std
mov
loopne
dec
push
or
fisttpl
xor
cltd
ss
ret
movb
pop
pop
notl
int
push
pop
insl
mov
xchg
or
ficomps
and
jae
leave
push
mov
xor
addl
in
ja
mov
mov
int3
les
xchg
pop
dec
push
ljmp
sbb
int3
das
xchg
dec
leave
inc
inc
aad
dec
stos
shlb
add
mov
mov
pop
pop
imul
xchg
sub
mov
mov
xchg
fstl
repz
cltd
inc
pop
test
or
add
lcall
adc
sbb
xor
andps
aam
icebp
outsb
add
jmp
xor
cmp
sub
lret
test
mov
fimull
movsl
insl
mov
sti
sahf
mov
out
add
ds
loope
cs
hlt
into
pop
xchg
inc
mov
iret
fs
mov
mov
loop
cmpsb
and
data16
je
jp
inc
popf
add
sbb
jecxz
pop
in
mov
xchg
repz
call
ss
adc
and
inc
ds
ret
add
rol
mov
push
mov
sbb
loop
mov
pop
xchg
movsl
scas
xlat
js
mov
mov
add
or
mov
xor
cld
dec
insb
test
out
xchg
shlb
frstor
inc
jbe
push
xor
adc
jae
mov
cmpb
mov
adc
sti
jns
les
mov
fldl
push
test
pop
cmp
rcll
xchg
mov
out
movsl
push
add
das
jg
jbe
outsl
stos
imul
and
sbb
aaa
sub
mov
push
dec
int3
mov
cmpsl
xchg
or
mov
dec
mov
inc
mov
mov
push
outsb
sub
and
sub
loop
push
xor
enter
dec
icebp
add
arpl
dec
mov
int
cmp
test
fldl
lret
adc
fldl
orl
lcall
dec
push
mov
jmp
aam
call
push
jmp
pop
scas
les
imul
adc
push
int
imul
in
stc
mov
sbb
lods
dec
xor
lcall
sub
sub
jb
jmp
loop
rcl
push
ret
aas
lret
and
mov
add
arpl
scas
lcall
and
cmpsb
adc
ret
nop
push
rolb
shl
in
jl
inc
pop
jp
xor
inc
sub
pop
pop
pop
addr16
mov
mov
or
dec
scas
push
jae
sub
mov
cmp
cmp
or
sbb
sti
cmp
nop
mov
gs
xchg
pop
mov
lret
or
mov
in
sub
jge
push
scas
pop
clc
cmc
mov
filds
sub
sahf
adc
in
loopne
out
aad
cwtl
pop
jecxz
cmp
jmp
mov
pop
insl
pop
jmp
repnz
test
mov
inc
add
sbb
leave
cld
or
xchg
stos
fs
es
add
mov
mov
movsb
push
mov
fistpll
push
aam
movups
pop
leave
outsb
cwtl
cltd
cmpb
mov
lahf
fs
mov
jnp
push
hlt
cmpsb
pop
sbb
leave
jno
dec
int3
jns
sub
lods
in
clc
pause
aam
test
shl
dec
xchg
sbb
lret
jnp
in
mov
mov
pop
shlb
mov
lcall
inc
fsubrp
lcall
jmp
adc
add
mov
and
adc
or
mov
inc
shlb
pusha
lret
cmp
enter
mov
lret
mov
mov
xlat
and
scas
xchg
or
loopne
je
fwait
mov
push
in
outsl
insl
adc
leave
neg
sbb
cs
loop
fimull
fwait
fwait
push
cli
xchg
sbb
adc
pop
out
jle
rcrl
addr16
inc
pushf
sbb
fildll
inc
xchg
rolb
add
push
je
cmp
xchg
cli
cmp
fcoml
jg
cmp
pushf
adc
mov
out
insb
into
xor
aam
rclb
adc
sub
push
mov
lds
out
mov
insl
sub
mov
cmp
jmp
jmp
push
push
fmul
dec
fsts
fidivl
fbstp
and
mov
sbb
sahf
out
mov
jle
mov
test
stos
lds
mov
rcrl
sahf
addr16
push
mov
rcr
cmc
jecxz
mov
or
mov
int3
adc
inc
cmc
cld
fsubrs
mov
cmpsb
mov
pop
lret
sub
out
loop
or
lock
mov
sub
aad
test
fmull
push
std
mov
test
faddl
out
insl
daa
dec
movsl
pop
lods
lea
aas
or
xor
fcmovb
addl
and
push
in
mov
cmc
fistpll
arpl
decl
xchg
cmp
arpl
pop
rorl
push
jl
rolb
cmpsl
dec
out
adcb
pop
mov
push
mov
loope
sbb
pop
cwtl
scas
pushaw
ss
cli
out
jb
cld
ficompl
into
ss
xchg
icebp
outsb
test
cmp
and
mov
ret
adc
adc
adc
loope
mov
pop
mov
imul
cltd
popf
sub
fwait
jle
filds
sysret
inc
mov
insb
lods
test
movsl
push
mov
mov
jge,pn
adc
orl
sub
cmp
js
add
sbb
add
iret
push
pop
or
adc
clc
in
dec
dec
jecxz
jnp
cld
dec
gs
cs
xchg
stos
lods
fsubp
mov
sub
mov
jae
ljmp
int3
sub
stos
icebp
cmp
jl
and
or
mov
cmp
xchg
mov
mov
dec
mov
xlat
dec
xor
push
pushf
stos
mov
iret
shrl
test
inc
scas
mov
and
inc
icebp
add
mov
and
lret
cli
loop
sti
inc
clc
inc
sahf
or
stos
add
and
dec
pop
push
or
dec
into
int
xabort
push
push
dec
mov
cmp
pop
mov
rorl
lods
test
adc
xchg
sub
inc
int
shlb
lods
sub
mov
add
inc
lods
arpl
adc
xor
jecxz
mov
sub
lods
or
lock
popa
mov
xor
ds
in
xchg
add
pop
or
mov
cmc
mov
xchg
inc
movsl
push
lahf
mov
mov
cmp
fldcw
xchg
or
cmpsl
sbb
xchg
cmp
pop
jo
pushf
mov
pusha
sub
inc
xor
mov
add
inc
ljmp
ret
ret
add
mov
and
ja
add
sbb
ret
inc
jl
cmpl
xchg
adc
stos
es
fwait
xor
add
xor
addr16
ja
in
add
insb
and
aas
test
xchg
daa
repnz
pop
xor
in
xor
dec
sarb
pop
mov
les
addb
mov
out
push
mov
dec
ja
fcomps
mov
cmp
lds
pop
sbb
inc
filds
push
push
xchg
loope
and
lods
loopne
pop
hlt
scas
jge
xor
int
cltd
fisttpll
cmp
xchg
or
pop
fldl
in
out
adc
orb
mov
ret
jmp
mov
cwtl
sub
loope
cmp
fcomps
js
adcb
outsl
ret
sub
pop
xchg
inc
outsb
push
and
pushl
sbb
dec
lea
sub
or
mov
sbb
sub
mov
mov
js
icebp
pop
xor
pusha
jmp
dec
rorl
leave
lods
mov
subb
jne
call
sbb
lds
push
ja
stos
mov
jne,pt
aad
and
dec
and
cli
nop
aam
scas
fst
jp
daa
sub
pop
lea
gs
fs
mov
addr16
xor
mov
jl
jg
inc
inc
ret
mov
not
aaa
sbb
add
push
xchg
divb
aam
rcll
loopne
cwtl
clc
and
clc
shll
leave
shll
sbbl
aad
and
lods
push
jnp
fisttps
int
arpl
jle
shll
and
cld
mov
into
xorl
push
jne
ss
rolb
sub
sbb
out
adc
fxtract
loope
or
ds
andl
roll
xor
loop
sbb
jo
jb
out
inc
xchg
pop
jl
lcall
sub
in
outsl
cmp
mov
mov
enter
insl
int
into
mov
repz
testb
sub
mov
pop
jmp
les
jmp
mov
das
push
outsl
sbb
mov
inc
add
pop
cli
test
add
loope
pop
mov
int3
es
leave
outsb
adc
aaa
ljmp
push
dec
int3
fnstsw
int
cmpsl
addl
neg
dec
lods
jnp
add
aaa
daa
sar
xchg
pop
jne
mov
sbb
ficomps
mov
mov
adc
pop
call
lcall
add
jnp
adc
mov
adc
test
stos
mov
cli
loopne
cltd
ret
xor
add
call
xchg
or
dec
cld
mov
jle
adc
jns
jle
push
cltd
jb
xor
fildl
mov
testl
fwait
adc
int3
adc
mov
pop
push
xchg
pusha
test
mov
adc
xchg
xchg
mov
mov
aaa
mov
and
push
cmc
push
out
out
fdivrl
pop
and
lods
int
xchg
push
repnz
je
mov
dec
fldl2t
cli
mov
lret
fwait
daa
inc
iret
cmp
loopne
int3
mov
cs
push
or
loop
popf
daa
mov
loop
std
inc
fstps
mov
pop
sub
add
arpl
xorps
pop
and
push
or
sarb
xchg
fists
and
rolb
dec
or
lock
cmp
mov
adc
mov
push
ljmp
cmpsl
nop
adc
clc
fxch
gs
std
and
outsl
ljmp
int3
hlt
xor
add
test
shl
fwait
iret
cltd
lds
popf
out
cwtl
cld
mov
add
lea
mov
jnp
lret
popf
jno
mov
fcoml
cmp
dec
fdivp
xor
sub
lods
out
add
mov
iret
call
mov
pop
add
popf
cmp
adc
sahf
call
fcom
test
or
and
lcall
pop
push
xchg
inc
dec
or
scas
push
fdiv
out
dec
addl
xchg
add
xorb
mov
in
mov
fisubrs
push
sbb
pushf
bound
enter
inc
cltd
lcall
shrb
fdivs
pop
repz
push
clc
daa
jae
or
push
repnz
adc
cmpsb
adc
rclb
cmp
xor
push
fnstenv
inc
sub
xchg
mov
and
inc
cmpsl
scas
jmp
adc
clc
iret
cmpsb
jno
xchg
int
cmc
mov
in
sub
call
es
xchg
sbb
pusha
xor
inc
push
sub
pop
mov
jbe
pop
sbb
and
mov
movsb
xor
imul
jle
mov
and
mov
mov
mov
into
push
stos
jecxz
cmp
pop
je
das
adc
jmp
adc
jg
or
repnz
scas
inc
dec
push
xor
lods
aas
add
mov
stos
xor
insb
das
inc
fisttpll
inc
std
push
outsb
popa
push
mov
out
mulb
icebp
int3
or
jb
fisubrs
or
arpl
dec
clc
pop
sub
repz
ja
scas
and
mov
scas
or
inc
and
pop
mov
add
test
test
inc
movsb
pop
cmp
and
sti
and
adc
inc
cmc
test
bswap
imul
je
push
or
xchg
mov
adc
pop
std
daa
xchg
dec
shrb
popf
sbb
push
sbb
push
fists
rcr
mov
lds
mov
cmc
repnz
xlat
jmp
cmp
shl
fisubs
insl
or
or
pop
imul
push
fwait
mov
aas
mov
mov
or
sub
jbe
mov
jecxz
push
or
pop
out
sti
ja
test
fnstsw
movsb
int
push
ds
clc
out
inc
xchg
inc
int3
rorl
cmp
sub
sbb
push
pop
sub
mov
mov
jmp
cmp
fildl
je
cmp
or
or
xor
popa
nop
adc
outsl
jge
push
icebp
pop
mov
add
or
mov
pop
cltd
add
mov
nop
lods
xchg
loope
lcall
cld
mov
enter
stos
rclb
rorb
imul
mov
xchg
outsl
mov
adc
lea
push
out
lock
sub
jmp
aas
mov
icebp
or
push
sub
mov
lret
sarl
mov
test
xor
pop
push
and
xor
inc
inc
je
addl
xor
jae
fadds
inc
addr16
jl
inc
sbb
inc
arpl
dec
arpl
std
sti
pop
mov
jnp
and
scas
xchg
sbb
pushf
mov
test
ds
jb
pop
repz
mov
in
jnp
dec
out
call
jl
lret
leave
ret
push
aam
mov
mov
mov
push
and
jge
mov
push
outsb
jl
insl
das
ds
mov
adc
mov
mov
adc
orl
xor
insl
inc
popf
out
or
or
xor
movb
aas
cld
pop
pop
mov
cmc
rcrb
shr
sub
sbb
mov
mov
adc
nop
or
dec
xchg
or
inc
mov
lock
push
subl
in
test
arpl
test
lods
dec
mov
adc
xlat
fisubrs
push
and
movsb
xchg
push
and
sub
pusha
jnp
gs
mov
cmp
mov
lahf
mov
dec
cmp
cmp
push
mov
dec
mov
cmp
loopne
cmp
xchg
or
stos
push
sub
and
xor
icebp
jge
popa
sub
fwait
mov
fimuls
mov
mov
xor
inc
mov
jl
sbb
add
into
and
push
mov
xor
les
dec
pusha
pop
in
mov
shll
adc
lret
and
sub
pop
cmpsb
or
mov
stc
cmp
cs
out
adc
inc
jne
pop
jl
std
jmp
mov
hlt
add
xchg
daa
inc
dec
repnz
imul
bound
mov
add
push
adc
push
pushf
int3
jp
ret
add
xchg
sub
lret
mov
mov
inc
cmpsl
test
jne
xchg
jns
clc
mov
adc
jmp
std
addr16
mov
or
sahf
out
and
inc
and
sub
mov
cwtl
mov
mov
mov
sti
stc
mov
xchg
popf
insl
xor
movsl
repz
cmpsb
stos
pushf
cli
add
out
lret
fidivl
dec
jl
pop
cwtl
movsl
gs
xchg
fcompl
jp
test
xchg
inc
in
adc
rcrb
sbb
dec
inc
inc
mov
rcrl
xchg
lret
xorb
lock
rcr
int3
and
mov
lahf
xor
fstpt
lahf
std
sbb
leave
inc
das
or
dec
bound
test
dec
jge
cmp
bound
cmp
bswap
push
push
lods
pop
cmpsl
sub
loopne
and
pop
cli
in
mov
fldt
ss
pop
jl
sub
inc
in
push
cmp
in
add
lret
xchg
xchg
stc
or
out
popf
mov
sub
shl
mov
dec
dec
add
or
jo
in
dec
xchg
xor
cld
pusha
sbb
ficomps
adc
jp
test
lret
or
push
rclb
pop
das
add
or
dec
addr16
mov
mov
lds
mov
xor
stc
mov
repnz
inc
loope
mov
bound
cmp
sbb
cmp
jbe
sbb
loopne
jbe
and
das
jno
sub
je
iret
rcr
xchg
cmp
enter
sbb
mov
pusha
cli
pop
jp
gs
xor
push
mov
movsb
cmp
or
cmp
ds
ficomps
pop
popf
xchg
push
cmp
sbb
ret
xchg
sbb
stos
scas
aas
data16
xchg
jg
movsl
dec
or
aad
ret
subl
mov
adc
push
cs
mov
jae
jecxz
insl
pop
repz
dec
xchg
or
data16
mov
loopne
mov
cmc
and
popa
rcrb
cli
ljmp
push
loop
sub
in
mov
mov
mov
lret
pop
xor
xchg
or
and
bound
divb
xchg
lcall
mov
fnstenv
sub
pop
inc
inc
push
pusha
loope
push
outsb
in
cwtl
or
add
sahf
push
movsl
sub
inc
push
aam
fstps
xchg
adcl
mov
sbb
mov
sub
jle
fwait
incl
clc
or
repz
mov
sbb
add
inc
adc
sbb
xor
mulb
movsl
dec
aad
pop
pusha
inc
mov
dec
dec
push
sub
rcll
jp
ljmp
fiadds
mov
adc
push
fldenv
mov
movsb
add
mov
cli
sbb
filds
lods
adc
pop
inc
inc
lock
pop
xchg
test
dec
cmp
test
sub
rcr
dec
mov
push
popf
lea
sbb
adc
nop
daa
dec
je
fxch
mov
sub
ja
adc
mov
or
test
int
dec
movsb
pop
fdivr
xchg
aas
sub
and
or
mov
sub
add
jg
mov
xor
aas
lahf
pop
shlb
pop
mov
shlb
gs
xor
xchg
and
xchg
jle
repz
mov
les
or
pop
push
rol
push
popa
int3
fstpt
aad
or
mov
sbb
mov
add
dec
adc
push
fdivr
movsl
dec
rolb
call
push
data16
cmp
jo
push
outsl
lret
inc
rorb
loopne
out
ret
sub
sub
mov
stos
mov
push
jne
pop
adc
lret
dec
and
or
in
outsl
in
dec
or
pop
pop
je
mov
mov
xchg
mov
lods
mov
cld
iret
add
cld
orl
cmp
and
xchg
inc
bound
push
lret
push
ret
mov
mov
or
popa
mov
idivb
jbe
cmpsl
xchg
rcrb
jne
in
mov
and
push
repnz
pop
loop
mov
pop
std
popa
test
jne
xor
adc
mov
outsl
lret
mov
sub
cmpsl
cs
sbb
insl
add
data16
sbb
adc
mov
incb
mov
sbb
xor
push
addb
jp
cli
jnp
ret
das
es
cli
out
lds
sbb
enter
std
push
sti
push
sbb
xchg
push
test
fsubs
pushf
inc
push
pop
dec
mov
mov
push
stos
add
in
popa
push
xor
mov
nop
push
jo
mov
fidivrs
cmp
dec
xchg
inc
out
xchg
push
and
inc
mov
insl
or
mov
cmpl
pop
ljmp
xor
mov
or
imul
inc
in
cmp
adcl
jb
bound
dec
mov
or
test
movsb
imul
inc
push
and
aam
dec
imul
xchg
std
dec
cltd
xchg
pop
sbb
iret
shll
or
pop
and
clc
adcb
test
xchg
jle
jl
out
adc
push
mov
push
fs
inc
fs
push
mov
push
xlat
shrl
mov
pop
inc
sub
rol
test
add
fxtract
cmp
lea
mov
lods
inc
fimuls
mov
cmc
inc
outsb
mov
dec
popa
sbb
bound
mov
popf
sub
adc
push
mov
ss
or
sti
data16
push
popf
push
mov
and
movsl
push
adc
cs
push
adc
int
and
test
pop
cmp
fcoms
push
and
and
call
fimull
mov
ja
test
jne
xchg
pop
pop
jl
and
jns
push
sub
mov
ret
or
jne
daa
and
inc
cmp
leave
xor
ljmp
add
andb
mov
aam
mov
push
jge
xchg
sub
adc
mov
adc
mov
je
leave
rorl
pushf
xchg
stos
xor
repnz
stc
adc
mov
movsl
in
mov
js
loope
mul
cmc
adc
fistps
fstl
xor
fidivrs
aad
inc
adc
into
dec
mov
xor
das
enter
push
pusha
or
push
lock
data16
scas
arpl
and
jns
jae
and
inc
je
sbb
push
pop
inc
pop
arpl
pop
adc
scas
ret
xchg
es
jle
push
aam
cmpsb
repnz
das
or
stos
jmp
je
mov
xchg
jae
lock
mov
push
insl
scas
inc
pop
insb
stc
sbb
je
dec
jno
push
mov
leave
xchg
mov
ja
pushf
aam
lcall
pop
xlat
adc
cmp
cmp
lock
lahf
mov
mov
pop
fcomps
jp
sub
jno
andl
sub
roll
notb
psrlq
enter
ds
int
and
movsb
mov
inc
dec
cmp
insl
lock
jns
rorl
mov
inc
mov
lea
das
dec
mov
nop
out
jno
cld
fisttps
lods
inc
pop
mov
iret
popa
pop
mov
xchg
sub
dec
jmp
rcrb
mov
shll
sbb
shlb
iret
mov
adc
xlat
jge
cld
dec
jbe
lds
mov
loop
outsb
scas
push
mov
lock
sbb
lods
fdivl
cld
mov
lret
mov
xor
ficoms
fcmovnb
inc
push
push
arpl
inc
push
jbe
into
cmc
push
jb
mov
movsb
push
ljmp
xor
jg
pop
test
mov
ja
push
jb
mov
insl
push
mov
mov
or
xchg
pop
movsb
ljmp
adc
test
mov
mov
ss
jo
inc
clc
fisubl
je
fxch
push
adc
pop
or
test
jg,pt
mov
jnp
aam
mov
push
aad
or
pop
xchg
dec
cmp
std
sti
insb
jle
jl
xchg
ret
sbb
jnp
mov
mov
jno
dec
xchg
jmp
xchg
dec
mov
pusha
lcall
dec
mov
mov
xchg
or
shlb
adc
mov
sub
pop
ret
fnsave
aad
inc
jns,pt
vstmxcsr
and
pushw
push
mov
outsl
mov
or
cmp
aam
loope
mov
and
adc
xchg
iret
or
fsub
aad
insb
mov
jle
cltd
movsbl
mov
loope
sbb
sti
xor
sbb
orb
mov
inc
les
leave
jp
outsb
out
xor
ss
ficomps
lods
jbe
pop
pop
fdivl
rclb
or
sub
leave
lahf
mov
outsl
out
push
add
inc
add
arpl
dec
xor
push
test
stos
add
orb
arpl
push
and
push
mov
pop
ds
push
repnz
xchg
scas
xor
dec
in
arpl
mov
repnz
movsl
int3
imul
loop
lcall
inc
jo
je
std
inc
mov
or
mov
pop
pop
sub
stos
loopne
lds
jecxz
mov
mov
add
fs
je
rcrl
fiaddl
mov
push
jg
adc
xor
cli
fnstcw
xlat
out
je
fisubrs
cmp
mov
pop
lahf
lods
jne
push
mov
nop
ret
cld
adc
xchg
dec
sbb
mov
mov
out
fistpll
inc
iret
jle
cmp
aam
popf
jo
add
ja
mov
aam
cs
pop
or
inc
jge
hlt
clc
cmpsl
adcb
mov
mov
outsl
pop
test
and
mov
pop
inc
push
push
push
out
add
add
lret
mov
add
rcll
cmp
mov
xchg
or
scas
adcl
mov
shl
adc
imul
adc
adc
pop
sbb
call
dec
imul
addr16
jbe
pop
xor
imul
addb
cmp
stc
testl
mov
js
xchg
xchg
jno
cmc
test
pop
xor
loopne
cwtl
sub
pushf
add
movsl
pop
arpl
sub
add
sbb
pusha
imul
orl
xchg
dec
bound
mov
jge
arpl
dec
cmp
fstl
cmp
call
ret
pop
dec
punpckhdq
or
leave
jge
sub
movsb
sbb
xchg
fistpll
mov
and
sbb
inc
je
adc
jp
xchg
fldl
cwtl
les
roll
or
aad
push
cmpsl
and
inc
iret
fnstenv
shrb
sub
negb
xor
mov
xchg
xorb
arpl
pop
mov
fdivs
mov
mov
pop
gs
pop
or
push
icebp
test
ds
mov
jp
sub
nop
adc
ljmp
cmc
dec
in
daa
sbb
jb
pop
push
ret
jg
add
pushf
stos
in
and
inc
mov
jno
inc
mull
lds
inc
fistpl
sti
test
jl
mov
xchg
ljmp
mov
pop
mov
testl
mov
ljmp
mov
sarl
xor
and
inc
fmuls
scas
mov
lcall
push
stos
add
jecxz
js
inc
push
ds
mov
mov
test
xorb
xor
jge
scas
dec
sbb
mov
icebp
and
mov
addr16
xchg
cli
pusha
sti
cmp
mov
pop
mov
nop
sub
pop
xchg
ds
cmp
push
and
sub
setae
icebp
bound
pusha
pusha
jae
fidivrl
jno
xor
fs
cltd
mov
scas
dec
inc
daa
add
in
pusha
sub
repnz
push
loop
in
sbb
add
adc
xchg
je
xchg
inc
inc
sbb
push
arpl
push
test
push
ja
fs
leave
enter
mov
into
testl
movsb
es
rolb
or
imul
and
pop
mov
popa
jmp
cld
mov
and
imul
dec
dec
pop
aad
inc
pop
xor
call
icebp
lods
mov
push
addr16
push
fidivrl
repnz
jecxz
dec
add
push
adc
push
pop
ja
mov
pop
fucomip
push
jae
lods
pop
loopne
andl
adc
jp
loope
cmpsl
fldenv
cs
hlt
and
jecxz
inc
icebp
iret
push
jmp
lcall
inc
andl
xchg
jp
sbb
in
test
mov
sbb
fsubr
sbb
mulb
test
push
test
cld
mov
rcrl
in
mov
hlt
or
adc
test
sub
or
mov
ret
fld
lahf
outsl
mov
rorl
push
mov
outsl
sbb
push
mov
mov
sub
push
daa
lea
fs
ja
mov
cmpsl
add
add
arpl
dec
shrb
jle
into
mov
lret
mov
in
mov
iret
pushf
mov
pop
mov
cmp
or
loop
fistl
imul
pushf
inc
sbb
ret
add
mov
xchg
adc
pop
xchg
xchg
inc
fdivs
push
dec
pop
add
mov
add
nop
ret
push
shlb
or
push
sub
ret
and
push
inc
std
dec
inc
movsl
lods
dec
addb
fs
fdivr
and
cwtl
clc
daa
xor
dec
cmp
fstpl
je
call
ret
jno
loop
mov
int
xchg
xor
inc
pop
mov
movsb
popf
cmp
mov
aam
pop
and
bound
das
clc
ss
mov
add
sub
mov
cmp
dec
or
ljmp
inc
mov
and
dec
ficoms
fs
lret
jne
pusha
ds
sub
xor
pop
dec
adc
sub
mov
mov
dec
push
std
hlt
pop
sbb
and
xor
or
pop
loope
in
cmc
call
mov
mov
fistpl
push
cwtl
pop
add
add
sub
pusha
rcrb
cli
xchg
in
dec
mov
xor
std
lods
mov
or
std
cmp
out
pop
xor
mov
adc
xor
jbe
shlb
pop
jle
ret
stc
das
popfw
enter
jns
mov
ret
insb
pop
dec
bound
iret
mov
fs
les
shrl
push
mov
adc
inc
sub
sbb
ficomps
mov
xor
push
jnp
push
or
jnp
xor
lds
jle
es
outsb
mov
jae
repz
xchg
lahf
dec
jmp
in
icebp
pop
lret
mov
movsl
outsb
movsl
jl
enter
int3
mov
nop
adc
fsts
es
dec
mov
mov
xchg
dec
and
enter
or
subb
mov
inc
sbb
adc
mov
stos
inc
lret
and
xchg
sub
outsb
inc
lret
jecxz
xchg
adc
sub
sbb
mov
aaa
dec
bound
int
enter
lahf
pop
fsubl
test
and
inc
out
jnp
mov
mov
into
xor
sbb
xor
cmp
cmp
insl
test
rcll
mov
lahf
cltd
mov
jns
imul
ficoms
adc
inc
outsb
testb
jl
clc
and
test
dec
jbe
and
dec
orl
mov
lcall
cltd
inc
lds
mov
push
add
stc
hlt
js
adc
mov
cmovle
fdivrl
jp
nop
lods
out
cwtl
and
mov
sti
or
and
and
call
mov
adc
bound
movsl
rol
inc
cmp
xchg
punpckhwd
outsl
xchg
add
cmp
movsb
dec
test
enter
lahf
xchg
xor
jb
mov
aaa
pushl
jae
ffreep
mov
in
movsb
jl
xchg
in
sbb
sbb
dec
jle
cmp
xor
mov
fbld
and
and
pop
out
out
in
or
jne
or
repnz
es
insl
test
popa
outsl
push
mov
aas
cld
mov
sbb
push
movsb
sub
mov
push
divb
nop
orl
call
sub
out
loopne
fdivs
ret
sbb
xchg
dec
out
jns
add
pop
mov
mov
sbb
sub
addr16
inc
mov
push
pop
out
adc
adc
frndint
mov
and
jno
add
popa
cmp
jp
add
les
clc
push
int3
ret
lea
cmp
xchg
hlt
or
loope
subl
fiaddl
xchg
imul
imul
sub
mov
pop
sbb
push
pop
or
movsb
sub
adc
pop
mov
jge
out
or
dec
incl
cld
push
enter
movsl
dec
mov
mov
test
outsb
mov
mov
add
cmp
stos
add
or
cmpsb
movsl
mov
repnz
inc
adc
jae
rclb
loope
imul
sbb
out
adc
outsb
push
icebp
adc
cs
and
cmc
jmp
sahf
mov
mov
mov
lcall
xchg
pop
cmp
pusha
jns
sti
enter
mov
cs
outsl
call
cmp
mov
jle
test
addl
add
inc
mov
cltd
pop
je
and
add
inc
std
or
fstpt
jge
pop
lret
nop
jge
push
mov
mov
xchg
ljmp
inc
aas
je
in
fcomi
inc
std
fcoms
sahf
cld
adc
shll
mov
xchg
imul
iret
mov
test
lret
dec
push
jmp
pop
lret
nop
dec
mov
repz
loop
sub
mov
push
jecxz
popa
je
cmp
movsl
test
nop
jg
jbe
pusha
pop
mov
add
repz
xor
sbb
fidivl
push
mov
pop
or
push
xchg
inc
mov
in
lahf
sub
jns
dec
lret
or
push
jp
xor
cmp
sbb
aad
test
lods
stc
and
loop
ret
imul
adc
or
cltd
call
jb
push
or
into
aam
xchg
push
ret
xor
sub
dec
or
fstl
test
int
cmp
xchg
cmp
outsl
sub
cmpsb
dec
xchg
inc
mov
inc
mov
lods
inc
int
mov
rcr
ficoml
ds
js
aaa
and
mov
jp
test
daa
cmp
rcll
jmp
popf
and
cmc
push
fucomi
xchg
lea
rolb
cmpb
inc
fldenv
fdivl
xchg
lea
fidivs
xchg
dec
mov
mov
cmpsl
jp
fidivrs
xlat
int
rcll
jbe
mov
ftst
fsubs
mov
sub
inc
test
call
fdivrl
pop
scas
push
inc
dec
lea
cld
clc
scas
sbb
pop
or
fstps
in
stc
cmpsl
rolb
mov
xchg
or
xchg
fnstenv
pusha
ljmp
pop
adc
mov
fimuls
jmp
mov
adc
xlat
mov
or
inc
adc
or
gs
arpl
jb
lea
sbb
inc
mov
xchg
xor
pshufw
rol
int
lret
je
xor
ffreep
sub
std
xor
ja
test
sbb
stc
aas
test
sbb
mov
das
int
or
fucomip
arpl
cmovno
fcomip
sbbb
or
das
mov
ds
jns
xchg
push
mov
fstl
add
aaa
jne
sub
shlb
aad
stc
das
out
stos
inc
insb
sub
inc
mov
xchg
lods
out
add
aaa
inc
inc
cmc
test
orl
rclb
dec
int
mov
movsl
and
push
sub
testb
sub
pmaxub
repz
push
sub
sub
vaddpd
daa
xlat
in
dec
lea
sub
mov
test
xor
cltd
std
call
mov
xchg
adc
cltd
jno
mov
jg
clc
xchg
out
in
test
xchg
les
outsb
shrl
fisubs
xor
pop
push
rclb
clc
loopne
mov
into
stos
bound
adc
xchg
pop
sub
scas
ds
inc
movsl
lds
dec
mov
popf
xchg
int3
daa
xor
test
hlt
negb
mov
mov
mov
fidivl
mov
push
out
and
adc
faddl
ret
dec
xchg
rcrb
lds
jno
mov
cld
jno
and
cmp
sbb
fistpll
add
xor
cmp
test
dec
dec
scas
es
imul
out
pop
in
out
in
test
mov
imul
js
push
int3
or
inc
cmc
mov
les
mov
subb
daa
in
addr16
insl
sub
aas
fistps
xlat
xchg
lods
cmp
jbe
mov
lods
add
out
mov
scas
push
mov
add
lds
mov
add
or
outsb
insl
scas
popf
push
test
jp
sub
jno
push
sub
inc
sbb
and
push
or
sbb
or
mov
jne
dec
adc
sub
jno
cltd
xor
mov
shll
arpl
addl
mov
es
in
mov
lea
out
sar
outsb
cmc
lret
scas
adc
inc
cld
pop
push
test
push
adc
popa
xacquire
rcrb
pushf
jo
push
xlat
jmp
or
out
pop
inc
push
xchg
cmc
pop
jg
in
or
fdivrs
out
mov
subb
lods
lods
nop
int
jmp
xchg
pop
mov
sub
sbb
in
xchg
daa
les
sbb
adc
adc
mov
lods
insb
movsl
je
cmp
mov
xor
sbb
mov
out
hlt
popa
mov
or
das
pusha
loop
adc
xor
xor
jno
inc
push
pop
or
test
jl
mov
frstor
dec
pop
jae
fwait
mov
mov
insb
ret
fs
cwtl
adcb
cmpsb
aam
and
sbb
int3
sub
dec
xchg
xchg
xor
jle,pt
cmc
and
xchg
inc
mov
push
testb
mov
cs
add
fldl
std
out
shll
sub
xchg
xor
cltd
sub
mov
mov
pusha
enter
adc
and
adc
mov
sbb
xchg
mov
jno
insb
lock
sbb
jnp
or
mov
leave
xorl
mov
or
in
lret
ret
je
insb
jo
mov
int
inc
aas
dec
mov
lahf
gs
ficoml
jns
jle
or
loop
xlat
in
mov
and
cmp
push
push
fsts
in
fistpl
xchg
imul
jecxz
popa
or
fimuls
and
gs
sbb
jns
mov
aaa
mov
or
inc
and
outsb
push
xchg
pop
or
test
mov
fcompl
or
cmc
arpl
out
insl
popa
jl
sub
test
fucomi
dec
mov
cmpsl
or
push
mov
popf
scas
mov
andb
mov
fcoml
clc
jl
enter
lods
loope
subl
and
sahf
pushf
sbb
iret
cld
and
addr16
pop
inc
add
or
push
xor
fldl
lcall
leave
loop
cmp
xor
sbb
sub
ljmp
fs
call
inc
loope
push
push
jns
call
push
jno
mov
mov
test
mov
repz
push
or
and
add
clc
es
sub
xchg
add
sbb
loope
testl
mov
fwait
pop
movsb
pop
cltd
std
sbb
push
movsl
adc
xor
fisubs
mov
mov
jp
adc
mov
xor
fists
rolb
xor
mov
sti
aas
cmp
dec
clc
ja
pop
cmp
inc
enter
fisubrl
iret
add
int3
pop
std
es
mov
pop
mov
jle
pushf
or
mov
out
cmp
push
mov
js
lods
ret
push
rcrl
test
fistps
data16
loope
and
dec
cmp
aad
in
in
xchg
bound
dec
int
sub
xchg
mov
std
lods
imul
pop
jg
sbbb
xchg
stc
or
aam
cmc
mov
out
pop
fs
inc
pusha
push
push
in
push
push
inc
pop
push
das
mov
jo
leave
dec
dec
xchg
pop
aas
cmp
and
mov
hlt
lret
adc
arpl
dec
dec
adc
sbb
inc
xchg
lahf
mov
push
mov
inc
fs
js
daa
lahf
or
mov
mov
dec
sub
jmp
fs
test
mov
mov
add
xor
roll
popa
mov
repz
xchg
movsl
jge
mov
outsl
push
mov
and
outsb
dec
add
cmpsb
dec
add
out
mov
pop
ja
cmp
cmpsl
push
sbb
aas
fldcw
sti
mov
mov
cmp
mov
into
in
imul
mov
dec
push
mov
in
insb
lea
cld
mov
sbb
clc
xor
repnz
jb
and
clc
or
pop
sub
mov
mov
popw
xor
inc
push
sub
lcall
push
mov
daa
add
inc
sbb
cs
mov
cltd
sahf
lcall
push
test
xor
repnz
out
popa
leave
sti
mov
lahf
rorl
into
add
icebp
mov
mov
inc
bound
pop
sbb
dec
xor
mov
or
push
dec
test
mov
dec
cmp
mov
es
sub
sahf
pushf
sbb
cmc
dec
and
pop
hlt
inc
test
and
int3
add
cmp
jo
push
jle
ds
rcrl
xchg
lock
jmp
jmp
scas
clc
movsl
push
add
push
sbbb
xor
adc
or
xchg
mov
sub
push
aaa
sub
mov
into
in
filds
addr16
cmp
fstl
sub
lods
ljmp
or
jmp
ss
push
int3
mov
roll
stos
mov
in
cmp
out
out
inc
fwait
lcall
sub
in
mov
mov
push
mov
jnp
int
xchg
xor
mov
sbb
xor
stos
cmp
mov
push
inc
out
cmp
jmp
cmc
add
push
mov
mov
test
dec
pop
inc
mov
sbbl
mov
or
jmp
mov
mov
add
adc
pop
fs
adc
jle
jb
ret
push
push
pop
cmp
mov
psadbw
dec
fcoml
imul
lret
inc
testb
sbb
push
stos
jmp
add
mov
aam
add
xchg
stos
pusha
mov
gs
jne
leave
or
stos
dec
popa
and
inc
pop
xchg
sti
mov
int3
icebp
mov
inc
push
xor
jnp
sub
mov
push
jnp
cmp
inc
dec
xor
sahf
xor
xchg
cwtl
jl
pop
and
sbb
inc
inc
dec
mov
mov
out
cmp
test
push
jle
jne
push
sbb
ljmp
sub
fcoms
push
ret
imul
arpl
mov
xor
jmp
pop
adc
dec
dec
pop
jmp
aam
lahf
enter
push
addr16
rorb
mov
cmpsl
adc
mov
pop
mov
sub
cmp
repnz
push
or
int3
add
addr16
out
push
icebp
push
call
jne
dec
in
mov
inc
repnz
sbb
add
stos
ret
lds
scas
push
pop
and
cmp
push
mov
aad
inc
inc
cmp
std
je
imul
jne
pop
fnstcw
lret
xchg
or
lods
cmp
loop
negl
pop
inc
xchg
pop
cltd
cmp
es
jbe
pop
pushf
sbb
popf
in
int3
arpl
call
lods
test
shlb
fiaddl
lret
or
mov
mov
mov
mov
gs
ret
scas
aas
adc
mul
stc
clc
cmp
lods
into
in
jae
sahf
sub
aas
daa
jo
sbb
or
int
mov
mov
sub
mov
ljmp
mov
and
xchg
in
test
dec
out
movsl
pop
mov
aam
loop
push
shll
inc
mov
lods
fsts
fwait
mov
pop
mov
sahf
add
lods
shll
mov
mov
pushf
data16
aad
mov
aas
pusha
pop
pop
and
dec
add
js
aas
and
sbb
out
out
adc
push
lahf
mov
or
xchg
mov
mov
jle
out
loopne
cmp
push
mov
xor
xor
push
push
jo
jg
int3
jg
mov
mov
nop
outsl
out
cmp
xchg
aaa
mov
call
and
pop
mov
adc
daa
dec
and
in
push
mov
fisubrl
xchg
xchg
dec
sbb
mov
or
adc
test
lods
arpl
mov
fiaddl
ss
lret
xchg
mov
shlb
in
in
test
inc
push
cmpsw
mov
fwait
xchg
bswap
jg
cli
movsl
sbb
cld
notb
nop
fs
pop
pushf
fcmovnbe
out
mov
es
loope
cld
adc
xor
cmp
add
dec
pusha
mov
pusha
loop
in
jge
aas
out
mulb
sti
mov
ret
rcl
in
xchg
xor
mov
inc
mov
ret
shrb
int3
imul
repnz
stos
xlat
insl
adcb
or
push
pop
push
loopne
pop
xchg
inc
push
mov
adcl
inc
fsubs
dec
inc
mov
into
sub
icebp
nop
aaa
and
scas
stos
int3
push
cmp
jg
ja
gs
icebp
cwtl
std
cmp
fstps
subl
sub
iret
push
aas
outsb
fwait
push
dec
lods
stos
mov
sub
repz
repnz
insl
mov
mov
lea
and
popf
add
daa
cmp
out
mov
addr16
hlt
cmpsl
or
xchg
cwtl
push
das
mov
push
data16
test
in
fdivrl
aaa
dec
cmp
push
ljmp
cmpsb
lea
push
mov
push
cmpb
into
sub
jp
push
fisubrl
jae
rclb
clc
repnz
rcrb
mov
idivl
outsl
and
mov
or
movsb
arpl
dec
add
push
mov
ret
iret
addr16
mov
sbb
imul
aam
xchg
push
xchg
and
icebp
dec
in
das
into
mov
sub
jns
ds
cmpb
cmp
in
sbb
les
adc
fwait
test
ret
pop
mov
push
or
imul
in
fs
add
lods
lods
add
sarl
pop
cwtl
out
add
es
loop
lretw
xorl
jmp
jns
xor
mov
testl
mov
add
repz
xor
push
movsl
loopne
outsb
test
inc
js
insb
addl
jb
add
fstpt
fnstenv
sub
jle
push
and
mov
cmpb
push
mov
mov
jae
sub
jns
pop
push
xor
or
out
push
insb
adc
sub
and
dec
movsb
dec
mov
adcb
adc
add
cwtl
cmpsl
cmc
dec
pop
daa
aas
sub
aaa
mov
in
push
mov
inc
dec
push
bound
or
xor
inc
xchg
data16
in
enter
pop
inc
sbb
pusha
jecxz
in
mov
lock
jb
mov
mov
mov
arpl
xchg
jnp
mov
scas
loope
std
pop
lods
pop
dec
arpl
in
arpl
stos
push
cmpsl
flds
sbb
pop
lea
jo
mov
or
inc
test
out
xor
out
int3
mov
nop
mov
push
dec
negb
cmpsb
adc
xchg
popf
addr16
cmp
notl
jns
notb
push
sbb
cld
rcrl
imul
std
sahf
mov
jmp
ja
jno
inc
or
outsl
or
pushf
adc
aaa
inc
mov
or
dec
fists
mov
mov
jle
hlt
sbb
jb
js
fdivs
fs
fstl
lfs
push
adc
jle
inc
rclb
neg
lock
sbb
push
rclb
lret
jo
jmp
decb
push
loopne
dec
xor
mov
dec
int3
push
in
movsb
shl
inc
fsubl
adc
inc
repnz
es
push
pop
and
mov
std
or
rolb
cmpsl
jge
stos
push
daa
ss
arpl
add
out
sbb
loop
pop
in
xlat
pushf
popf
push
addr16
sbb
call
push
dec
fidivrl
mov
popf
mov
fdivl
je
jb
adc
mov
js
mov
pop
xor
inc
insb
lods
neg
enter
mov
cmp
push
fmuls
dec
add
xchg
daa
mov
and
pushf
xor
mov
in
jge
push
mov
dec
mov
push
jg
iret
add
rolb
in
and
jmp
jns
bound
cmp
fs
imul
adc
jno
popa
cltd
or
negl
mov
rcrl
fldcw
jmp
lods
xor
inc
mov
mov
lcall
jge
out
mov
cmp
xchg
ret
testb
dec
xchg
addb
push
loop
mov
sbb
push
popa
and
out
pusha
jl
repz
jno
xchg
fnstsw
mov
or
fisubl
dec
notl
jne
lods
mov
and
fwait
scas
dec
adc
or
jb
xlat
mov
ret
xchg
cmp
push
aad
das
inc
cmp
and
xchg
das
jle
ds
xchg
lahf
pusha
jae
sbbb
fisttpl
in
adc
mov
add
out
xor
dec
in
adc
fsubl
pop
int3
out
insb
pop
dec
push
pop
hlt
mov
inc
rep
inc
sbb
xor
in
adc
ret
sbb
std
xchg
iret
sbb
sbb
xor
lods
jg
jb
lock
pop
adc
mov
out
or
xor
push
mov
pop
stos
in
sbb
adc
xchg
stos
fbstp
sbb
adc
jmp
jge
je
pop
or
add
icebp
bndldx
add
loopne
mov
in
int3
mov
inc
inc
ret
push
ss
neg
inc
dec
adc
nop
cmp
mov
sahf
test
scas
mov
add
adc
lods
stos
mov
outsb
test
dec
xchg
lret
stos
push
out
pop
test
or
testl
loop
and
mov
pop
imul
sub
xchg
dec
adc
mov
and
mov
pop
insb
int3
mov
fisttps
stos
addr16
fs
inc
orw
mov
out
dec
scas
mov
mov
jno
mov
xchg
dec
xchg
push
xor
jle
gs
scas
out
into
mov
push
andb
mov
pop
jbe
push
imul
hlt
xchg
add
jmp
add
arpl
sbb
cmpsb
jnp
mov
jge
xchg
aam
dec
mov
cmpb
xchg
or
push
je
addr16
xor
dec
insl
test
add
outsl
push
outsb
mov
and
mov
push
mov
fstpt
xchg
mov
sub
xchg
push
jbe
aad
cmp
mov
clc
jmp
jbe
adc
int
jo
sub
shr
dec
stos
mov
outsl
push
test
and
lods
in
bound
and
pushf
cltd
loopne
sub
cmp
fisttpll
loopne
pop
sub
pop
rorb
pop
mov
sub
or
xchg
cmp
jmp
add
add
and
dec
push
subb
mov
xor
mov
pop
cmp
cmp
mov
shrb
inc
sbb
ret
fcompl
fnstcw
xchg
pushl
loop
fbld
push
dec
test
shll
and
pop
push
jbe
sub
xchg
jge
xor
or
xchg
jmp
and
pop
mov
jae
pop
push
mov
clc
nop
test
push
aad
xor
aaa
jbe
lods
sub
or
imul
mov
jecxz
xor
xchg
mov
or
jb
mov
outsl
pop
jne
dec
sub
xchg
pusha
add
inc
mov
dec
gs
sahf
jecxz
popf
icebp
ss
rcrb
lret
pusha
xor
ja
mov
pop
xchg
ja
fsubs
dec
xor
push
cmc
imul
and
adc
adc
pop
jg
push
clc
jnp
aaa
jno
inc
push
stc
push
inc
subl
ret
loopne
into
loop
mov
lret
insl
mov
mov
hlt
adc
mov
mov
adc
jmp
sbb
adc
cld
leave
outsl
push
mov
aaa
fs
or
push
xchg
inc
cmc
imul
add
sub
mov
sbb
xor
lods
popf
imul
icebp
sbb
adc
pop
mov
jno
loop
aad
push
shlb
xchg
in
mov
outsl
fists
mov
test
cmp
sbb
cmpsb
jne
mov
rolb
add
movsb
fnstcw
shlb
and
mov
fldenv
jne
fmuls
and
add
dec
pop
or
or
and
dec
imul
dec
and
jle
out
mov
pop
xor
and
test
sarb
push
popf
push
lds
sbb
stos
mov
pop
mov
mov
sti
ja
pop
mov
divl
loop
ret
fimull
imul
mov
mov
lret
and
out
fbstp
mov
outsb
test
outsl
xchg
push
outsl
lcall
icebp
push
pop
aad
jecxz
and
stos
xchg
pop
xchg
push
das
insb
mul
sub
xchg
addl
or
mov
movups
mov
mov
fcomps
sub
xchg
sbb
push
js
loop
push
pop
movsb
sub
add
sbb
les
pop
aam
xchg
adc
add
les
popf
es
les
xor
in
das
into
jle
enter
and
or
sti
rolb
push
leave
xor
clc
dec
outsb
pushf
push
mov
mov
push
pop
outsl
inc
xor
push
cmp
pusha
rcrb
and
jae
xchg
test
add
pusha
jp
jmp
xchg
cmp
add
or
test
cmp
pop
or
dec
lods
test
int3
stos
jae
outsl
fdivp
jl
incb
test
sub
jbe
fimull
pop
sub
pop
movsb
add
test
cld
inc
inc
cmp
test
jl
mov
push
ljmp
fstpt
adc
dec
enter
mov
sub
inc
lahf
leave
and
shlb
negl
fistl
mov
pop
aad
xchg
imul
push
or
adc
ljmp
jbe
dec
arpl
fldl
addl
xchg
sbb
push
stos
adc
jbe
mov
shlb
cmp
insb
lods
jle
notb
call
lds
filds
sarl
or
fcmovbe
cltd
cwtl
xchg
cld
std
cmp
add
mov
adc
inc
cmpsl
rclb
lret
das
add
sub
jb
ret
sub
mov
jmp
mov
lcall
pushf
pushf
scas
cmc
jb
int
aaa
cs
movsl
pushf
cmpsb
inc
loop
xorl
dec
push
inc
sbb
rolb
dec
xchg
pop
mov
mov
repz
adc
not
ret
out
sub
lds
scas
lea
test
push
push
pop
jb
mov
frstpm(287
ret
out
negb
and
push
ja
adc
test
fdivrl
inc
ret
aas
xchg
loope
mov
aad
ja
testb
lret
cmp
shlb
dec
mov
push
sub
add
xchg
test
aad
mov
popa
fsts
mov
mov
cs
inc
mov
int3
jns
mov
mov
std
mov
in
push
into
xor
add
dec
nop
shrl
pop
out
add
or
pop
inc
adc
addr16
pop
movsl
movsb
push
or
push
push
fstl
roll
sub
pop
aaa
dec
jo
aaa
jmp
and
fisubs
outsl
xchg
push
mov
stos
push
adc
push
dec
in
mov
ljmp
add
and
popf
pop
adc
daa
adc
dec
std
inc
jp
and
addr16
enter
daa
jnp
adc
out
adc
fimuls
roll
dec
cmpl
cmp
ja
mov
push
inc
jae
sbb
push
es
stos
jp
inc
xchg
cmc
sub
aad
pop
mov
hlt
adc
lcall
dec
lret
xchg
fs
lret
adc
mov
testb
inc
test
mov
xchg
inc
jae
sub
mov
and
dec
gs
push
mov
push
jl
cmc
leave
dec
pop
aas
lcall
sti
jmp
pop
repnz
imul
sahf
mov
and
leave
lea
movsl
mov
jge
jno
loop
cmc
scas
ljmp
ja
mov
addb
lret
sub
mov
out
mov
adc
inc
aaa
fcompl
fs
popf
hlt
push
andl
sbb
push
adc
movb
pusha
ds
jmp
push
xchg
ljmp
out
or
dec
repz
or
lea
lock
xor
std
imul
je
xor
xchg
cld
lock
sub
aaa
les
mov
mov
aaa
lret
rorl
xchg
lods
idivb
push
xchg
mov
add
sbb
outsb
mov
mov
mov
sbb
imul
push
cld
inc
aad
or
xchg
mov
or
jo
fdivrl
repnz
in
imul
aaa
xor
je
mov
add
add
dec
xor
sti
aam
and
or
mov
leave
or
and
in
mov
jb
and
cli
xlat
pusha
dec
mov
sub
aaa
es
dec
out
sarl
das
or
das
jb
mov
shr
call
mov
jne
adc
insl
bound
inc
outsl
cli
pop
mov
sub
loope
cmp
bound
cmpsb
adc
cmp
mov
fs
add
dec
bnd
popa
cld
inc
in
rorl
adc
sbb
aam
orb
lock
cmp
pop
pop
pop
insl
jo
jne
sub
push
scas
aam
dec
cmp
clc
test
sbb
mov
cmpsb
fnsave
adc
mov
movsl
pop
sub
cmp
push
xor
test
push
insl
ljmp
add
lcall
rol
repnz
cmc
sub
icebp
cmp
sub
lock
pop
cs
aas
adc
mov
xchg
jge
push
or
psubusw
mov
jl
push
scas
fisttpl
insl
clc
out
ret
fdivrl
filds
pop
mov
adc
push
jp
shlb
lret
stos
lcall
imul
xchg
subl
inc
mov
test
or
add
inc
insb
cmpsl
jmp
loopne
pcmpeqw
int3
add
mov
ja
repnz
insb
addl
xor
fsubr
inc
pusha
ds
flds
fcoml
or
pop
cld
jp
fnstsw
aad
sahf
xor
test
shl
js
jmp
dec
jge
inc
cmp
enter
xor
xor
add
gs
ljmp
xchg
mov
push
fwait
mov
jne
mov
dec
sub
stos
xchg
negb
call
mov
jp
mov
rorb
das
scas
cmp
mov
push
mov
in
lahf
mov
cmp
cwtl
popa
xchg
push
inc
repz
push
mov
sti
icebp
test
pop
out
insl
iret
sub
cmp
mov
cmpsl
xchg
cmp
dec
and
cltd
scas
pop
dec
cmp
inc
data16
adc
jae
out
mov
bswap
stc
decl
daa
sbb
outsb
dec
cmpsb
out
push
cmpsb
lret
es
nop
aaa
out
divb
pop
dec
add
hlt
outsl
enter
cld
lods
out
mov
rclb
inc
dec
xchg
add
fstps
push
iret
mov
sbb
lea
bnd
push
stos
push
mov
cwtl
push
or
add
dec
pop
fwait
xor
idivb
pop
adc
pushf
bound
jmp
in
lret
icebp
cltd
xchg
prefetcht2
inc
add
or
add
add
push
add
add
add
addb
add
xor
add
pop
add
addb
add
mov
add
add
add
add
add
add
add
adcb
add
push
add
xor
add
push
add
add
add
addb
addb
add
mov
add
enter
or
add
loopne
add
clc
add
orb
add
adc
orb
add
sub
orb
add
add
pop
add
orb
add
jo
add
mov
adcb
add
mov
add
add
add
add
add
adcb
add
call
add
add
add
add
sbb
add
addb
add
add
add
dec
add
add
pusha
add
add
add
add
js
add
nop
add
add
test
add
add
add
addb
add
add
add
add
add
add
add
lock
add
or
add
and
add
add
sbb
or
add
cmp
add
push
push
add
push
push
add
addb
adcb
add
cwtl
push
add
mov
add
enter
push
push
add
loopne
add
clc
push
add
adc
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
or
sbbb
add
add
js
add
nop
or
addb
add
addb
add
jns
add
or
addb
adc
add
add
or
addb
add
lock
adcb
add
or
add
and
add
cmp
add
push
or
sbbb
add
push
jns
add
jns
add
jns
add
jns
add
or
sbbb
add
loopne
add
clc
or
andb
add
adc
add
sub
add
inc
or
addb
add
addb
add
add
jo
add
add
add
add
add
mov
add
add
add
addb
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
or
add
push
add
or
add
push
add
or
add
push
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
add
push
add
or
add
push
add
or
add
push
add
or
add
sldt
add
add
or
add
sldt
add
add
or
add
sldt
add
add
or
add
sldt
add
add
or
add
add
or
add
add
or
add
add
or
add
add
xorb
add
add
add
add
add
mov
add
add
cmp
add
mov
add
fdivrs
add
sub
add
js
pop
add
add
enter
xor
add
sbb
add
push
add
add
add
add
ret
xor
add
pop
ret
pop
add
add
test
pop
add
add
loopne
pop
add
add
sbb
pop
add
add
add
add
enter
sub
add
movb
mov
add
add
add
add
add
add
push
add
add
add
push
add
add
add
in
push
add
add
add
stos
pop
add
add
fsubrs
add
clc
lds
add
add
add
lret
mov
add
add
add
add
add
add
into
pop
add
add
add
add
add
add
add
iret
pop
add
add
add
pop
add
add
lock
pop
add
add
add
add
add
rolb
add
add
add
add
add
into
pop
add
add
sbb
pop
add
add
add
fiaddl
add
add
add
faddl
add
add
add
add
add
pop
add
add
add
fiadds
add
add
add
pop
add
add
add
add
add
add
add
filds
add
add
add
pop
add
add
add
add
add
repz
add
add
add
add
add
in
add
add
add
add
shl
add
add
add
add
add
pop
add
add
add
add
pop
add
add
push
into
pop
add
add
add
pop
add
add
add
lret
and
add
pusha
mov
add
shlb
add
mov
add
sarb
add
roll
adc
add
jo
pop
add
add
add
add
and
add
mov
pop
add
add
push
mov
add
mov
add
add
pop
add
add
nop
les
add
add
loopne
pop
add
add
loopne
push
add
add
mov
add
add
jmp
add
add
add
add
lock
pop
add
add
add
sub
ss
and
sub
cltd
sub
mov
dec
daa
add
mov
pop
sub
sub
addr16
daa
xchg
sub
or
pop
gs
pop
lds
cmovo
std
mov
add
hlt
and
cmpb
dec
xor
mov
mov
sbb
cmp
aad
lods
mov
movsl
pop
movsl
clc
pop
lahf
jno
sub
in
jge
repnz
xor
addr16
mov
xor
shrb
arpl
es
fst
cmp
and
pop
sbb
sub
sub
sbb
inc
mov
sbb
sub
and
mov
int
movsl
sbb
or
cmc
sub
sbb
mov
scas
cmp
cmp
xlat
sub
mov
xor
sahf
lahf
add
sbb
cs
add
rclb
cmpsb
test
xchg
inc
mov
sahf
sahf
push
ficoms
inc
xchg
movsw
push
sub
es
movsl
movsl
sbb
sbb
movsb
lods
in
pop
cltd
cmp
mov
mov
in
fbld
gs
movsl
arpl
jae
mov
lds
xchg
mov
mov
push
pop
mov
xor
mov
push
and
fisubl
stos
jmp
push
cmc
aad
xchg
push
rcll
sub
and
aad
xor
in
movsl
add
and
sbb
sub
add
int
daa
add
and
add
sub
and
aas
ss
inc
and
xchg
outsl
sub
sub
sub
add
shll
movsl
xor
xor
in
movsl
cmp
jo
and
or
movsl
add
or
dec
out
xor
lods
fsubrl
sub
xor
fdivrl
jg
dec
ficoml
xor
mov
pop
pop
test
sbb
mov
push
es
dec
pop
xor
in
and
inc
int
xor
in
sub
out
int
and
je
xchg
sub
rclb
mov
sbb
inc
add
test
outsl
mov
pop
outsl
mov
adc
sub
dec
xor
sub
test
sbb
sub
insl
cmp
fimull
and
daa
dec
or
sub
test
sub
add
es
loopne
or
sub
push
bound
inc
push
popa
pop
mov
jmp
push
xor
mov
arpl
inc
xor
bound
popa
sbbb
push
mov
xchg
faddl
lds
es
or
and
cmpsl
sub
xor
js
sahf
mov
xor
sub
jl
movsl
cmpsb
loopne
arpl
pop
pop
sahf
push
mov
addr16
gs
lcall
xchg
and
std
and
pop
lods
addb
gs
fidivrs
movsl
repz
dec
cmpsb
mov
movsl
shrb
pop
mov
lcall
jne
cmp
andb
rorb
gs
es
cmp
add
sub
sub
sbbl
sbb
out
es
gs
addr16
loope
bound
inc
adc
mov
sbb
xchg
test
sbb
inc
and
je
pop
lock
sub
xchg
xor
jne
gs
or
cmp
pusha
xchg
jg
rorb
cli
pop
into
cmp
ret
fwait
jg
or
sub
xor
and
movsl
xchg
cs
aad
aaa
xor
lret
icebp
lods
and
mov
aaa
mov
dec
sahf
mov
aaa
repnz
test
cmp
pop
adc
into
aas
cmp
xor
shr
negb
sub
sbb
push
add
pop
sub
cmpsb
and
popa
add
dec
or
xor
les
sub
data16
push
cmpsb
push
adc
push
add
push
sbb
or
sbb
es
inc
lds
imul
les
and
insl
or
jne
dec
out
in
push
inc
jae
jne
sub
add
test
xchg
add
test
add
push
fwait
stos
push
mov
mov
testl
les
sbb
gs
arpl
les
inc
pop
adc
mov
sub
daa
push
jbe
jo
pop
add
jecxz
andb
push
push
addb
jge
pop
movsb
data16
pop
xchg
or
cmp
jo
add
or
and
push
mov
cltd
insl
aaa
shlb
int
dec
jno
jl
inc
mov
push
popa
push
and
jbe
push
inc
cmp
outsl
shll
mov
dec
insl
pop
jns
mov
gs
movsl
push
sub
inc
pop
mov
add
pop
adc
push
and
loope
jl
jge
jbe
jg
push
aas
and
push
jne
lahf
sysret
sub
cltd
and
add
add
xchg
add
cmpsl
pop
jne
mov
cs
inc
dec
mov
inc
into
and
adc
push
out
loopne
mov
cmp
ss
push
pop
lods
adc
push
mov
dec
cmpsl
sub
jno
cmp
jbe
cmp
mov
call
add
fnstsw
popa
cmp
ja
mov
mov
or
pop
cld
pop
and
gs
sub
outsb
jg
test
jae
mov
ja
xor
cltd
add
sub
xchg
cwtl
xor
lret
add
mov
js
loope
dec
or
insl
mov
sbb
mov
stc
inc
inc
xchg
cmp
cmp
inc
dec
insb
sub
sub
sub
or
mov
dec
lret
andl
jl
out
push
xor
xor
in
popa
cmp
inc
jae
sbb
jmp
cmp
push
push
in
dec
jne
inc
hlt
sbb
inc
adc
cmc
or
mov
jns
adc
xor
xor
inc
out
add
cmp
dec
mov
adc
mov
stos
test
out
push
lret
mov
icebp
sub
or
inc
mov
mov
adc
aas
or
sbbl
shr
dec
cmp
add
sbb
ljmp
mov
cmp
in
cmp
add
xor
adc
jg
push
loopne
pop
rcrl
or
mov
iret
and
les
data16
pop
es
daa
negl
scas
xor
dec
or
jne
cld
clc
cmp
mov
or
jne,pn
imul
aas
or
cli
adc
in
not
mov
dec
cmp
cmp
or
insl
and
ss
or
fnstenv
sti
adc
jne
xchg
fdivp
mov
stos
xor
out
dec
leave
sub
and
adc
jo
mov
ds
push
inc
sub
cs
pop
mov
or
pop
jae
shll
dec
sets
jl
insb
aad
adc
mov
xor
mov
push
xlat
std
add
stos
inc
push
stos
ret
and
push
push
xchg
xchg
scas
sub
pop
dec
mov
cmp
sub
sub
enter
pop
xlat
mov
dec
and
dec
sbb
sbb
lret
loope
mov
inc
cmp
pop
out
ljmp
fldcw
lahf
std
stc
jle
popf
jecxz
push
jle
xchg
aam
bound
inc
push
xorl
mov
insb
inc
push
mov
add
rcrl
inc
and
ljmp
sub
rcrl
movsl
movsl
fisubs
mov
jl
std
cld
dec
dec
rcll
mov
test
add
jns
mov
and
push
add
fisubl
popf
adcl
adc
mov
sub
adc
clc
or
inc
fbld
adcb
push
and
adc
jmp
push
sbb
xchg
pop
jmp
and
xchg
stos
sbb
push
test
movsl
fucomp
les
aaa
dec
cmp
lods
mov
pop
jmp
fldcw
rorb
adc
pop
pop
sbb
dec
pop
mov
pop
decl
nop
and
mov
mov
push
test
inc
sbb
mov
addr16
mov
out
pop
sbb
ds
ljmp
mov
push
mov
and
xchg
xchg
lret
jl
add
cmp
clc
mov
loop
mov
icebp
out
jle
xchg
loop
fnstenv
dec
out
push
fwait
test
pop
xchg
imul
jae
sub
pop
mov
inc
or
jo
adc
mov
pusha
sbb
sub
loope
add
xor
push
xor
in
mov
lods
addb
or
add
hlt
sub
cmp
loopne
test
or
ja
fstl
cmpsl
sbb
int
push
sub
sub
aas
ret
sarl
stos
psllq
aam
pusha
shlb
ds
cli
dec
inc
add
enter
enter
and
push
les
sahf
insb
lock
cmpsl
stos
and
es
mov
jl
popf
adc
add
rcr
pop
imul
insl
sbb
xchg
decl
dec
dec
mov
push
enter
das
pop
jns
sahf
xchg
das
in
ret
cmpsb
inc
je
dec
lods
and
daa
push
jnp
in
in
mov
repnz
sbb
imul
in
pop
pop
sbb
movsl
repz
cli
cltd
xchg
shl
cmp
adc
push
inc
push
hlt
les
push
mov
addr16
imul
mov
inc
pop
push
and
and
aad
xor
xchg
push
in
shrb
push
imul
jge
push
jge
arpl
push
pushf
jmp
jmp
leave
stc
int
adc
pop
pop
loop
andl
imul
cwtl
mov
cwtl
mulb
cli
push
imul
dec
je
pusha
mov
js
adc
push
dec
or
mov
sub
js
loope
in
insl
arpl
mov
popf
outsl
addl
jl
pop
mov
inc
xchg
pop
loopne
add
pop
mov
or
call
mov
cmpl
xor
rcrl
xor
and
xchg
out
rclb
call
enter
sbb
or
dec
pop
popf
aad
hlt
mov
into
hlt
dec
mov
push
lods
in
es
addl
add
xor
dec
push
cmp
add
or
and
loopne
mov
push
xor
pop
xlat
jae
adc
fmuls
cmp
dec
out
mov
mov
lret
mov
fimull
fiadds
mov
shl
mov
jns
mov
incb
push
push
mov
inc
insl
jge
pop
sub
cmpsl
dec
or
mov
xor
insl
mov
cwtl
dec
jns
jge
sbb
pmaxsw
add
push
jge
cmp
mov
cli
pop
loopne
pop
out
fwait
mov
aam
mov
outsl
jecxz
ljmp
aad
push
mov
cli
decb
or
loopne
daa
xor
iret
mov
xchg
fwait
pop
iret
mov
xor
into
adc
ljmp
stos
rol
mov
nop
pop
dec
mov
fisttpll
addr16
bound
xchg
xchg
cvtps2pi
inc
enter
or
jb
aad
arpl
mov
aaa
out
inc
mov
cmp
jmp
icebp
les
mov
mov
lcall
imul
aaa
movsl
arpl
push
xchg
cmpsl
mov
scas
lret
ss
mov
inc
and
push
xchg
jnp
push
mov
add
and
adc
push
cmp
icebp
mov
sub
mov
xchg
add
and
int3
jno
in
mov
daa
test
scas
dec
sub
fidivs
mov
outsl
jae
test
fmuls
dec
je
je
jl
fbstp
je
stc
in
xchg
icebp
add
mov
ljmp
add
mov
imul
fucomp
mov
jecxz
inc
subl
inc
sarb
adc
fwait
es
pop
test
adc
jb
cs
mov
xchg
or
fldt
inc
call
dec
stos
repz
mov
mov
stos
adc
in
cld
out
icebp
leave
cmp
push
sbb
std
mov
sti
mov
mov
vpunpcklqdq
xor
jns
dec
xor
cmp
mov
dec
popa
cmpsb
and
cmp
add
aam
pop
lret
jae
ja
mov
arpl
test
mov
fsts
in
sbb
adc
int3
jae
mov
pop
aad
ljmp
cmp
inc
bound
test
adc
bound
push
adc
rol
jle
xor
adc
das
mov
jne
sbbl
push
cmp
negb
lock
mov
daa
pop
mov
jbe
sahf
sub
not
or
rdmsr
sub
lock
ret
lock
ds
jl
push
cld
sub
pop
popf
and
loopne
daa
dec
mov
adc
mov
lcall
mov
push
cmc
fs
xor
or
jb
in
movsb
jno
sub
sbb
adc
icebp
aaa
cmp
or
xor
ja
xchg
mov
adc
sbb
dec
fidivl
cs
das
and
subl
aad
fsubrl
int3
adc
fsubrs
addr16
iret
xchg
aam
inc
out
cmp
leave
push
or
cwtl
pop
sbb
cwtl
testl
pop
outsb
daa
cmpl
lret
pop
scas
daa
sub
pop
xchg
imul
or
push
inc
xchg
sahf
test
sbb
movsb
jp
mov
bound
dec
jg
fdiv
pushf
or
jge
and
mov
xor
jg
call
xchg
lds
jb
fs
testb
jne
cmp
pop
arpl
pcmpgtb
pop
rcrb
jnp
mov
inc
mov
popa
jmp
enter
in
sbb
push
mov
fs
mov
pusha
dec
push
inc
inc
lock
rcl
mov
outsb
incb
jo
call
sbb
jbe
jae
jmp
sub
jno
push
movsl
testl
push
lret
ss
fnstsw
pop
inc
pop
aad
sbb
adc
int3
gs
push
ret
jge
and
adc
adc
test
sbb
dec
mov
es
out
add
pop
jmp
jg
fidivl
add
mov
adc
sti
arpl
outsb
test
lret
jo
sub
arpl
mov
fists
outsb
lret
mov
push
mov
bound
scas
stc
cmp
call
xchg
push
hlt
std
pushf
push
push
and
test
repz
xlat
xchg
jge
dec
mov
data16
and
push
mov
cmpsl
fs
mov
js
xchg
dec
inc
inc
mov
jl
sub
lods
loop
mov
daa
outsl
pop
cmp
cltd
mov
stos
bound
sbb
mov
pop
push
lods
call
mov
xchg
pop
clc
gs
pop
sarl
xor
sti
mov
mov
xor
loop
mov
cmp
outsb
xchg
push
dec
ljmp
dec
lret
mov
pop
sarl
std
pop
and
lret
fldcw
jmp
shrl
mov
sbb
mov
mov
scas
sub
add
adc
int
loope
inc
jo
test
test
fidivs
jge
in
add
xchg
aas
nop
adc
dec
les
std
or
aaa
xchg
cwtl
ficoml
pop
mov
push
mov
cmpsl
in
arpl
adc
sbb
add
adc
cmp
pop
sti
mov
es
lret
add
sub
push
jl
cltd
add
pushf
push
cmc
add
dec
leave
bound
repnz
xchg
xor
or
rorb
jnp
mov
push
dec
test
sarl
aad
in
out
xor
ss
cmp
jp
mulb
jnp
cld
insl
inc
pop
xchg
je
sbb
es
ficompl
cmp
inc
in
movsb
inc
sahf
outsb
aaa
fwait
cmpsb
cltd
jl
sti
push
or
movsb
movsl
sbb
roll
clc
in
cmpsl
pop
daa
inc
mov
jp
jnp
test
fcoml
fwait
xor
imul
hlt
cmp
mov
hlt
inc
mov
fwait
ret
cwtl
mov
xor
jno
lcall
pop
push
ret
outsl
aam
insl
mov
jl
dec
mov
aas
lcall
aad
cld
sub
mov
jl
mov
jbe
insb
xchg
into
cmp
out
push
shld
arpl
sbb
clc
icebp
inc
sbb
lret
xchg
aas
xchg
mov
mov
jno
sbb
sbb
sahf
insl
add
sbb
stc
mov
ds
adc
popa
pop
out
cmc
inc
inc
lcall
testl
mov
adc
imul
pop
mov
inc
fcomps
in
and
xor
ss
dec
scas
xchg
push
pop
outsl
sub
add
pop
sub
cmpsl
jp
test
xchg
pop
push
inc
inc
scas
xor
add
repz
popa
xchg
push
sub
addr16
sbb
lcall
inc
add
testl
pop
aas
sub
lds
pop
cmc
in
inc
lahf
inc
ljmp
cli
sti
lods
inc
cwtl
cld
mov
push
jns
and
stos
stc
xchg
ret
inc
fwait
mov
pusha
call
sbb
scas
pop
inc
insl
jg
mov
int3
mov
iret
iret
pop
movsl
fiaddl
jge
aad
mov
aad
ja
ror
mov
mov
shr
xchg
cmp
leave
cmp
loopne
push
xchg
jl
xor
clc
jae
rcr
pop
rolb
cltd
xchg
xchg
call
xor
cmp
sbb
jo
inc
test
leave
addr16
jmp
bnd
mov
loopne
cmp
enter
addr16
adc
fs
fnstenv
ss
nop
sbb
jae
fcomps
inc
stos
mov
cwtl
jmp
adc
enter
sahf
add
and
push
inc
push
into
inc
cwtl
gs
sbb
inc
enter
testb
cld
mov
movsl
sbb
shll
add
movsl
fwait
add
jae
lahf
out
pop
sti
dec
mov
add
jne
dec
mov
je
pop
cli
ja
arpl
outsb
xchg
nop
fiadds
test
rcrl
push
xlat
adc
repnz
lds
in
xchg
rcrl
jno
or
push
test
loope
jecxz
stos
addb
int3
pop
ss
call
or
jmp
sarl
fcmovbe
ret
cmp
in
aam
loope
iret
mov
pop
imul
stc
adc
sub
mov
add
out
and
push
or
jp
in
in
callw
out
xchg
jle
scas
andb
fists
lahf
sbb
faddl
fnstcw
push
lret
pop
adc
mov
sub
cmp
or
cmp
loope
and
push
loope
push
or
andps
inc
pop
pop
xlat
cmp
fsubl
sti
cmpsb
nop
icebp
stos
add
nop
fisttpl
mov
rcll
or
js
xchg
nop
mov
popl
cmp
cmpsl
cld
push
fildll
lcall
and
and
xor
icebp
fs
mov
movsb
and
cmpsl
cli
cmp
dec
inc
xor
pop
mov
adc
inc
mov
fldl2t
push
jo
mov
js
push
adc
push
mov
loope
cmp
add
scas
aad
iret
adc
std
pop
pop
loope
les
dec
mov
jo
adc
mov
or
out
push
outsb
cltd
mov
cld
data16
mov
mov
popf
xor
loope
aad
mov
int3
lret
popa
das
mov
lcall
loopne
dec
xor
insl
aas
sbb
and
xor
loopne
xchg
sbb
outsl
push
xor
xorl
jae
xorb
cltd
lcall
jmp
rcll
pop
clc
xchg
stos
ja
popa
xchg
and
fsubs
es
sbb
adc
mov
add
je
in
push
rorb
movsl
or
pusha
adc
pop
dec
cmp
loopne
sbb
imul
js
mov
rcll
mov
xor
test
int
lea
test
rorb
lea
and
pop
popf
xor
or
xorb
das
mov
sub
aas
mov
fs
mov
push
sub
mov
adc
xchg
jl
dec
xchg
dec
iret
and
lock
cmp
add
sub
mov
cltd
mov
in
sbb
and
add
xor
jns
pop
scas
pop
scas
or
sbb
rcr
and
jnp
in
imul
out
adc
mov
mov
fcompl
add
pushf
add
out
cmpsb
out
lcall
mov
pop
les
bound
jnp
fwait
mov
cmp
mov
push
mov
jo
jmp
sub
imul
xchg
sub
fistps
lret
and
add
aam
pop
mov
or
pushl
xchg
jmp
mov
push
pop
sahf
sbb
rorl
dec
push
sub
iret
jecxz
jbe
lods
push
and
imul
aas
shr
cltd
mov
das
dec
mov
fmulp
out
mov
dec
hlt
fnsave
cmp
fisubrl
adc
jo,pn
or
mov
mov
ficoml
sub
popa
out
mov
imul
ss
call
lcall
incb
lea
cmpsl
imul
mov
in
mov
xchg
cld
pop
enter
addr16
mov
sbb
push
mov
es
jb
dec
push
rol
loop
inc
mov
cmc
dec
lock
inc
lret
cld
sub
inc
push
pop
mov
sub
cs
cmp
jle
adcb
scas
mov
je
and
ds
and
sbb
push
loop
xchg
dec
out
ds
xchg
mov
cld
and
test
fistps
push
xor
lods
nop
xor
leave
sub
sbb
je
pusha
xchg
lods
xchg
xor
test
cmp
cmovg
xchg
pop
add
cmc
orb
fidivs
sbb
pop
xchg
and
mov
add
andl
and
push
js
es
sub
decl
jae
ret
inc
inc
xchg
std
cmp
lea
mov
xor
push
stc
lea
adc
mov
or
rcr
xchg
stos
pop
es
mov
dec
inc
jecxz
adc
mov
in
insb
cmp
adc
pop
sub
and
ljmp
shll
adc
inc
testl
clc
js
sbb
mov
mov
or
loope
sahf
arpl
add
mov
aas
stc
mov
jge
inc
mov
adc
stos
scas
lds
pop
sbb
addr16
stc
ret
mov
das
notl
andl
lods
cltd
lahf
sbb
addb
int
inc
cmp
test
ss
add
mov
in
fdivrl
outsl
int3
ja
int3
orl
sub
adc
mov
mov
sbb
jno
ret
adc
iret
push
movsl
mov
ficompl
xchg
jge
test
clc
xor
aam
sub
add
jmp
fmuls
orl
xchg
and
add
in
movsl
dec
mov
cmp
jns
add
xchg
inc
wbinvd
pop
jo
jg
lea
cmovle
sbb
aaa
xor
cmpsb
nop
ja
js
testl
popl
dec
jo
add
mov
pushf
fwait
sub
stos
in
sub
shrl
pop
test
lds
int3
cmc
mov
js
popf
ljmp
movsl
lcall
or
mov
aaa
mov
shr
adc
pop
mov
and
adc
mov
sti
lahf
je
negb
mov
push
in
or
fcoml
data16
mov
lods
cmc
pop
dec
test
lds
xlat
adc
xchg
lods
push
add
push
loop
adc
mov
sub
xlat
pop
inc
mov
push
aaa
outsb
nop
cmpsl
inc
xchg
divb
psubq
pop
mov
add
cmp
aad
jge
popa
stc
xchg
jb
mov
pop
mov
dec
testl
leave
es
daa
ss
inc
xor
and
sarb
sbb
xlat
and
fsubs
push
repnz
ss
js
scas
push
aaa
xchg
xchg
or
je
mov
and
jge
sbb
push
aad
lock
daa
xlat
es
mov
mov
mov
mov
mov
pop
sbbl
pop
jne
fstl
cmc
popf
jnp
cmc
stc
lret
popf
popf
rcrb
xchg
repz
xor
mov
je
adc
inc
pop
insb
imul
icebp
xlat
sbb
jp
pusha
insl
iret
mov
mov
dec
mov
mov
pop
cltd
gs
iret
pop
enter
mov
sbb
or
adc
sbb
into
rcrl
add
std
dec
push
push
sbb
push
jno
xor
mov
adc
mov
test
mov
jbe
cmp
in
cli
shlb
sub
lods
je
cmovae
insb
mov
or
ret
cmp
pop
adc
sub
cmp
rcll
pop
mov
mov
popa
in
xor
lock
or
dec
and
xor
and
imulb
imul
dec
test
push
xchg
pusha
mov
repnz
cmp
cmp
enter
xorb
and
ljmp
adc
sub
cmp
xor
jmp
pop
mov
push
out
jge
into
test
sahf
push
adc
int3
mov
dec
jmp
pop
jmp
mov
cmpsb
iret
orb
cli
or
jb
les
dec
push
dec
movl
xor
dec
rep
sub
pop
adc
inc
sbbl
adc
push
mov
jb
jb
imul
jl
push
in
mull
cwtl
movsl
jmp
pop
aam
jmp
jnp
mov
or
into
and
popf
push
pop
leave
push
mul
cmpsb
jbe
inc
or
pop
cmc
jecxz
adc
movsb
xchg
mov
mov
testl
xchg
js
test
mov
out
scas
or
into
daa
sbb
loope
jne
adc
in
push
in
scas
pop
ds
mov
rep
dec
xchg
subl
nop
ret
or
clc
rolb
sub
mov
js
mov
adc
or
fistpll
dec
sbb
pop
sub
or
in
inc
data16
call
mov
adc
cmp
adc
shl
jg
inc
adc
ds
jmp
lret
rcrl
mov
bound
divl
xorb
pushf
cmp
dec
clc
pop
aas
sbb
test
cs
or
stc
cmc
inc
push
pop
xor
mov
enter
imul
pop
pop
leave
loop
roll
cmp
testl
js
mov
shlb
stos
fwait
ljmp
and
shll
jnp
call
push
pop
adc
pop
mov
jge
push
stc
dec
cs
sarl
sub
iret
add
add
ficompl
push
dec
adc
mov
daa
inc
ret
fsts
movsb
pop
adc
cmp
lds
mov
mov
ret
dec
pop
mov
aam
aad
ficoml
jbe
xor
repnz
int
nop
push
bound
mov
movsl
test
inc
fsts
in
xchg
test
jne
adc
repz
xor
or
loop
mov
lods
or
inc
outsl
fwait
roll
xor
jo
pop
pop
gs
xor
cmp
xor
lods
xchg
jo
fisttpll
adc
lcall
pop
div
lods
fpatan
out
das
jl
aaa
push
mov
sub
xchg
xchg
add
jnp
das
push
rcrb
push
loop
icebp
and
ds
jge
and
cmp
sub
std
popf
sub
mov
fldt
out
lods
sti
inc
and
xchg
ds
xor
adc
out
mov
xchg
mov
add
dec
or
shll
fcomps
movsb
jnp
fbstp
outsb
sub
outsl
push
lds
mov
pop
hlt
dec
inc
cmp
mov
mov
xor
test
aaa
inc
fidivrl
dec
addr16
das
mov
repnz
mov
mov
jmp
add
sti
mov
jb
cmpsb
sbb
clc
pop
cli
xchg
adc
xor
out
ds
data16
adc
pop
daa
jecxz
xchg
push
push
cmp
addr16
pop
out
jo
push
inc
mov
cld
sbbl
sbb
fldl
roll
sub
mov
lret
mov
push
test
cmp
pop
or
cmp
cli
xchg
scas
and
xorb
lds
add
xchg
mov
inc
mov
xor
add
in
iret
xchg
lds
dec
in
jae
xchg
fdivrl
dec
sub
std
mov
fnstenv
push
add
shlb
mov
je
fdivs
icebp
repz
mov
lea
leave
sub
mov
jo
and
xchg
je
cltd
cmp
scas
loope
dec
cmp
lods
leave
dec
mov
xchg
mov
dec
stos
sub
outsl
mov
cli
jo
push
add
mov
idiv
mov
outsb
add
jp
dec
shrl
adc
std
cmp
test
jnp
mov
stos
lahf
cltd
xchg
xchg
fwait
aad
push
and
jl
sbb
or
addps
cmp
mov
insb
and
mov
stc
xor
xchg
push
cmp
or
or
je
sbb
add
scas
inc
dec
loope
xor
ret
cmpsb
stc
data16
and
pop
popa
hlt
insb
nop
ljmpw
add
js
adc
test
mov
ja
pop
pop
in
add
iret
icebp
pop
enter
mov
cmp
mov
or
dec
xor
mov
inc
adc
scas
push
or
inc
inc
or
test
push
clc
repz
int
push
roll
jns
and
ljmp
adc
notb
sbb
mov
xlat
fptan
icebp
imul
push
or
and
jne
sbb
daa
out
cmpsb
and
sbb
pop
imul
sub
pusha
jle
ret
ficompl
fsubrl
jmp
mov
or
sete
or
jge
jae
int
outsb
mov
cmp
movsb
xor
pop
and
loope
iret
arpl
sbb
mov
bound
sbb
aas
pop
aam
fucom
sub
mov
push
mov
add
jge
mov
sbb
hlt
inc
ss
pushf
inc
test
fwait
jne
into
adc
loope
rcrb
aad
jb
lea
xchg
jl
xor
scas
push
repnz
aaa
loop
push
aas
repnz
lcall
bound
push
add
shl
sti
out
mov
sub
add
push
mov
xor
xor
xor
inc
cld
xchg
jo
push
out
nop
sbbb
pop
fwait
inc
dec
jno
cli
outsb
pop
je
sub
sti
fcmovbe
xchg
pop
xchg
mov
inc
xor
push
jne
cwtl
jp
sub
cld
incb
push
sub
jbe
xor
push
push
loope
dec
add
jp
imul
xchg
xchg
jne
and
sub
jge
divb
push
aaa
je
lcall
loopne
and
sbb
mov
jecxz
jno
xor
test
xor
mov
cmpl
in
add
cli
sar
jmp
jg
aaa
xor
fimuls
sbb
fisttpl
test
loopne
inc
mov
adc
xor
out
mov
xchg
pop
xor
xor
pushf
es
mov
rcl
scas
sahf
jns
push
jo
outsb
mov
pop
sub
jge
pop
sarl
cmp
shlb
cmpsb
fmul
dec
fwait
xlat
sub
dec
mov
cmc
sub
add
imul
andl
pop
mov
xor
xor
fwait
sbb
ret
push
add
sub
mov
shrl
or
push
lret
ret
fdivrs
pop
push
jl
int3
das
pop
xorl
int3
setbe
push
daa
xor
xchg
push
xor
push
dec
cmp
aaa
das
inc
fisubs
fwait
jmp
xchg
fnsave
or
fidivrs
aas
jp
aad
ds
imul
cmp
cmp
jbe
cmp
mov
push
std
cwtl
mov
bound
mov
fidivrl
inc
sbb
pop
mov
and
sbb
dec
loop
test
mov
out
lods
int
add
or
jbe
dec
lock
jno
pop
pop
push
push
fs
push
in
push
in
jne
mov
stos
inc
sbb
pop
les
cli
adc
cs
jge
imul
jecxz
std
js
int3
xchg
or
lock
inc
lods
xchg
push
dec
fisubs
xchg
mov
mov
cmc
test
daa
scas
popa
adc
push
into
add
pop
sub
push
add
mov
mov
sub
outsb
add
jp
fstl
push
inc
fsubl
xor
sub
xchg
arpl
in
ret
jnp
and
add
jb
stos
cmpsb
movsb
testl
ljmp
adc
inc
movsb
shr
push
insl
das
sarl
xor
cmpsb
mov
out
imul
flds
cwtl
rolb
outsl
mov
add
test
movl
push
stos
and
scas
sub
inc
inc
insl
mov
gs
dec
mov
jb
and
subb
jg
inc
ljmp
sbbb
cwtl
loop
jo
mov
aad
xchg
sbb
jg
pop
cmp
imul
jbe
fbstp
adc
or
mov
pop
stos
jb
je
fwait
mov
xchg
pop
fnsave
add
mov
enter
andl
mov
fsubs
mov
inc
add
ss
clc
call
rolb
sti
jnp
mov
aas
jno
jmp
loop
testl
jecxz
inc
sti
pop
mov
lds
inc
fmull
scas
lret
jns
insl
mov
movsb
dec
shll
inc
stc
sub
and
mov
es
jno
std
mov
add
outsb
inc
sti
jge
push
pop
mov
popf
bound
sub
lock
ret
movsl
mov
aaa
pop
int3
shll
sub
sbb
dec
xor
inc
adc
inc
inc
mov
sahf
xchg
mov
cmp
loop
fsubl
lock
test
mov
leave
mov
loop
jns
xor
cmp
push
adc
sbb
xchg
shrl
cs
pop
cmp
push
sub
into
mov
sub
pop
icebp
push
pusha
xchg
sub
xchg
in
pop
aas
fists
lock
push
int
sbb
sbb
add
in
or
in
and
add
or
and
insb
je
dec
inc
mov
test
jmp
inc
jp
stos
aad
inc
push
fcomip
push
loope
loop
lcall
inc
mov
aam
dec
iret
jns
aaa
inc
mov
sbb
pop
jecxz
jbe
pop
clc
mov
push
out
or
jns
es
mov
idiv
inc
in
cmp
stos
sub
mov
loopne
pop
mov
cs
sub
cmp
dec
addr16
lods
cli
cmp
sub
fdivs
pop
inc
or
mov
pop
cmpl
mov
ljmp
push
cmp
fstps
or
cmp
test
fs
bound
xchg
into
mov
sbb
jmp
jbe
xor
repz
adc
inc
iret
frstor
cmp
jl
fmul
jo
xchg
fdivl
into
xchg
clc
and
inc
les
fcmovnbe
dec
dec
cltd
mov
mov
push
leave
lret
aad
adc
shll
and
out
xchg
xchg
aas
mov
imul
mov
xchg
imul
test
sbb
mov
sub
add
inc
bound
std
fcoms
js
orb
jae
sbbl
and
cli
push
push
out
dec
ljmp
out
add
js
pop
cwtl
push
mov
inc
dec
inc
add
push
cmp
fwait
das
pop
push
sbb
xor
dec
push
das
mov
pop
sbb
ja
push
and
test
nop
rcrb
js
in
xor
pop
add
jmp
aad
cmpsb
dec
mov
loopne
mov
add
outsl
mov
aad
or
or
dec
fiaddl
in
orl
daa
jnp
loopne
or
test
enter
sti
outsl
inc
dec
int
inc
push
insb
xor
inc
mov
mov
sub
call
and
test
jmp
out
daa
stos
stos
xchg
shl
mov
lret
rcl
dec
jle
push
pop
test
int
aaa
dec
in
xchg
std
jecxz
pop
or
mov
movsb
lock
icebp
sub
cmpsl
xor
gs
push
out
add
stos
inc
and
js
mov
ficomps
adc
cmp
cld
aas
pop
inc
clc
mov
dec
repnz
ret
stc
jae
jle
out
cltd
pop
sbb
data16
mov
push
push
push
out
arpl
xchg
add
push
lcall
daa
jmp
ja
fwait
mov
call
add
int
add
add
flds
pop
push
jle
aad
sub
notb
xor
inc
pop
repnz
dec
pop
out
jle
loopne
or
call
pusha
or
shlb
xchg
mov
xor
jns
lcall
insl
sahf
cs
lahf
jns
stos
and
cwtl
add
shrb
or
lret
adc
divb
sbb
xchg
xchg
pop
popa
ss
and
imul
inc
cs
int
mov
mov
inc
xorb
sbb
dec
inc
xor
icebp
push
sti
push
jnp
dec
pop
mov
lahf
sub
das
cltd
mov
push
sbb
cld
fmuls
dec
jae
adc
test
test
xchg
add
xor
fucom
inc
jp
movsb
arpl
lret
mov
pop
or
out
mov
cli
mov
pop
shll
fmull
pop
jl
sti
mov
negl
hlt
movsl
addr16
sbb
shrb
cltd
pop
push
pop
jge
mov
lods
pop
mov
aas
fcompl
popa
push
or
inc
inc
fstpt
cmp
ja
push
jb
fistps
push
mov
adc
stc
ja
mov
rolb
mov
push
mov
hlt
dec
inc
push
dec
dec
adc
loop
scas
fwait
js
push
ficoms
adc
cmpsb
sbb
call
outsl
add
mov
and
mov
sbb
or
pop
and
jno
xchg
cmpsl
push
aaa
out
into
dec
mov
cwtl
lods
pop
clc
shll
int3
xchg
jne
outsl
and
test
inc
ret
xchg
inc
rolb
nop
lahf
sbb
and
cli
leave
movsb
insb
inc
inc
scas
into
out
popa
arpl
lock
sub
das
lahf
xchg
ja
jnp
add
cmp
xor
ror
aad
fadd
roll
cmp
pusha
sub
mov
stc
push
mov
mov
inc
aas
rcr
mov
stos
lea
pop
addr16
xchg
pop
jns
call
mov
inc
divb
shlb
push
hlt
mov
mov
mov
sub
sti
mov
imulb
movsl
out
pushf
mov
adc
jnp
sbb
insb
adc
xchg
adc
mov
mov
mov
or
mov
pop
cmpsb
inc
add
enter
cmp
movsb
jb
adc
xor
stos
xchg
sub
xor
pop
lods
jnp
or
mov
xlat
and
xor
mov
rolb
daa
xchg
inc
or
dec
dec
leave
mov
sub
fcomi
iret
cltd
jne
push
xlat
lret
aas
loop
rep
imul
adc
dec
and
ja
jl
cmp
and
loop
sbb
popa
inc
sti
subl
sbbb
push
and
fcomps
fdivrs
fidivs
je,pt
jge
sub
fs
pusha
test
dec
fucom
mov
adc
movsb
cmpb
dec
add
aas
adc
out
dec
aas
das
or
adc
aam
mov
push
test
call
jmp
mov
xor
ljmp
mov
push
ljmp
xchg
aaa
sbb
mov
ret
jno
pop
mov
flds
popa
bound
dec
adc
les
ljmp
mov
xchg
push
subb
loope
jecxz
adc
les
popf
mov
mov
movsl
adc
pusha
inc
sbb
xor
stos
loop
imul
jb
adc
add
arpl
cld
push
cmp
movsl
js
stos
rcll
jg
ss
jmp
mov
mov
push
lock
mov
js
cmp
lods
pop
pop
inc
fdivl
bound
jno
mov
shlb
mov
jle
jle
push
add
in
sub
jbe
iret
or
int
unpckhps
mov
adc
lret
dec
repnz
add
lods
ret
fucom
xchg
enter
cmpsb
in
xor
je
xchg
imul
lds
jge
xchg
dec
push
aaa
mov
and
bound
sub
outsb
adc
cmp
push
xchg
and
mov
add
lds
adc
mov
lret
ret
cmp
xchg
mov
sbb
iret
mov
dec
insb
xor
arpl
sub
out
mov
mov
pop
or
inc
jbe
stos
mov
jge
fs
dec
notb
sbb
cmp
pop
out
lock
jbe
pop
jo
xchg
pushf
mov
add
popf
mov
leave
subl
int
jnp
daa
fistpl
enter
dec
flds
xor
add
jne
les
cmp
dec
aas
in
dec
nop
aaa
or
add
xor
imul
jle
xchg
pop
push
dec
cmp
outsb
cmpsl
cmp
xor
push
stos
ret
in
icebp
sbb
and
addb
movsb
jne
mov
inc
push
enter
cmp
mov
call
pop
inc
push
push
mov
outsb
leave
inc
pop
fs
sahf
xchg
dec
repnz
xor
jp
pop
sbb
xlat
mov
test
sbb
cltd
jns
loopne
add
or
imul
rorb
pop
cwtl
sub
mov
icebp
jg
inc
push
cmp
mov
inc
push
add
in
lds
imul
in
mov
or
sti
repz
cmp
jmp
cmp
mov
jns
xchg
and
adc
ret
cmpsl
add
cmc
les
adc
mov
ficompl
icebp
inc
xchg
cli
lock
cmpsb
xchg
les
lods
cmp
push
pop
cmpsl
inc
sbb
jp
ffree
mov
int
mov
xor
lds
sahf
jb
rcl
lds
sbb
sub
push
or
inc
dec
lods
test
sub
stos
and
pop
out
jno
dec
inc
mov
add
fists
mov
xor
outsl
cli
inc
xchg
dec
or
lods
xchg
jns
jnp
adc
js
mov
lahf
jno,pt
xchg
and
cmc
je
pop
dec
jmp
push
adc
xchg
ror
dec
xlat
push
leave
pusha
scas
mov
out
lcall
jne
add
mov
adc
arpl
inc
iret
adc
xchg
ret
cmp
sahf
daa
dec
lcall
and
imul
push
inc
mov
repnz
mov
ljmp
lahf
popf
cmpsl
mulb
in
fmull
xchg
and
sbb
gs
loop
lret
cmovp
fdivr
sahf
lret
test
pop
lea
dec
sbbl
pop
out
outsb
pop
xor
loop
jle
jnp
fistpl
dec
or
pop
mov
in
dec
cmpsb
mov
js
jge
shrl
outsb
gs
fmulp
call
in
adc
mov
sub
mov
cmpsb
lds
add
mov
push
insl
xchg
rolb
leave
adc
out
dec
add
adc
cmp
pop
scas
xchg
xchg
jo
cmc
scas
xchg
fidivrl
in
imul
inc
sbb
popf
mov
mov
jo
out
lds
cmp
sbb
aaa
fs
ficomps
std
lcall
jmp
aad
cwtl
adc
lock
fiadds
mov
jo
or
int3
imul
ret
loop
outsb
repnz
jb
xchg
xchg
out
cmc
repnz
xor
lock
insb
ja
cmp
inc
xchg
clc
pop
mov
out
push
out
adc
push
sub
into
jmp
enter
inc
xchg
and
push
loopne
scas
sub
xchg
pop
xchg
cltd
cmp
cmc
stos
xchg
cmc
xor
or
cli
sub
sbb
mov
int3
sbb
into
jle
ljmp
mov
decb
jmp
push
scas
rcll
push
inc
add
rol
cmp
mov
jbe
popa
loope
sbb
lret
pop
or
mov
sbb
lock
mov
cmp
push
mov
mov
pop
fsubl
sub
xchg
inc
mov
lret
scas
mov
lock
or
pop
cmc
mov
inc
inc
jns
and
jno
xchg
stc
pushf
movsl
nop
cmp
fmull
ja
sub
mov
pop
cmp
cmpsb
in
std
push
push
xlat
adcb
cltd
xchg
mov
cwtl
aas
push
inc
mov
jmp
test
inc
mov
shll
ljmp
jb
add
sahf
cwtl
sbb
sarb
cmpsl
cli
inc
clc
addr16
imul
mov
xchg
rol
mov
adc
iret
add
ljmp
dec
sbb
jmp
in
test
ljmp
outsl
and
mov
xchg
lret
into
dec
sub
stos
sbb
pusha
leave
inc
xchg
push
xor
pop
and
fs
lret
sbb
out
cmp
and
ja
mov
data16
adc
xchg
cwtl
test
repz
fadds
and
inc
pop
movsl
mov
repz
pop
inc
div
xchg
jae
iret
xchg
mov
pushf
sub
in
or
mov
loopne
jne
rorb
xor
out
fiadds
inc
aas
jno
enter
std
cli
pop
test
iret
or
jae
or
sbb
inc
pop
cmc
xor
push
cmp
js
xlat
cmp
stc
es
fisubrl
lea
mov
mov
vcvtsd2si
lds
and
mov
bound
or
or
dec
pause
jle
fcmovb
jmp
cmp
push
xchg
lds
sbb
mov
pushf
mov
dec
test
lods
in
aad
mov
stc
xchg
js
cs
lret
add
xlat
jmp
dec
xchg
setb
push
into
sub
jl
sbb
xor
adc
cmc
inc
push
inc
add
scas
mov
jnp
and
cmpsl
jge
pop
mov
stc
pop
sbb
xor
add
in
lods
jne
mov
aas
mov
test
cmpsl
outsb
shrl
loopne
push
push
dec
sti
adc
nop
lods
xlat
fstpl
pop
dec
loop
push
adcl
cmc
sub
pop
push
jp
mov
mov
arpl
dec
in
mov
push
pusha
aaa
push
inc
outsb
stos
jge
mov
sub
sub
and
movsl
push
fimuls
xchg
lods
sub
xlat
clc
and
sub
jmp
or
out
dec
mov
add
mov
jae
push
add
adc
or
call
push
and
imul
pop
dec
xchg
dec
popa
aaa
int3
cltd
jbe
sbb
xchg
jae
cli
adc
ret
cmc
adc
adc
sti
fnstcw
stos
push
mov
outsl
xor
jb
cld
ret
ret
arpl
fdivl
or
push
mov
pop
jge
fdivrs
cwtl
lds
repz
inc
adc
sbb
sub
in
pop
and
mov
dec
out
daa
add
xchg
fisubl
jne
cld
int
test
clc
mov
xlat
dec
cs
cmp
repz
jo
fsubs
negb
sub
lea
popf
lods
mov
cmpsl
ss
pop
je
pop
inc
xchg
sbb
fstpt
decl
cmpl
pop
lret
sub
test
jecxz
lret
cmpsb
aas
dec
mov
mov
outsl
stos
push
movsl
xor
xor
sahf
xor
xor
mov
aad
fidivl
xchg
int3
test
push
jbe
push
push
shrl
pushf
daa
lods
das
out
sbbl
daa
mov
jno
cmpsb
sbb
pop
pop
jmp
mov
and
mov
jmp
xor
xor
jmp
dec
ljmp
js
push
jg
inc
and
testl
pop
test
mov
sub
jecxz
hlt
push
in
dec
mov
std
adc
arpl
jecxz
in
dec
jp
imul
jg
out
lods
lea
adc
mov
pop
insb
xchg
cmp
loop
or
clc
xchg
or
xorl
stc
int3
lret
ss
dec
pop
lea
adcb
out
into
sub
mov
xor
rolb
lods
mov
mov
inc
mov
addb
sbb
imul
xchg
clc
mov
into
sbb
dec
cmc
iret
or
or
mov
add
jp
sub
or
rcr
mov
dec
xor
insb
jmp
jnp
adc
inc
loope
xchg
and
in
push
mov
cmpsl
adc
leave
stos
es
lret
loop
jnp
add
lret
dec
jae
imul
cmp
add
jno
mov
rcr
addr16
mov
or
cmp
mov
lea
lret
cltd
inc
cmp
mov
jp
fimull
dec
movsb
xchg
inc
mov
insl
imul
fwait
mov
inc
cmp
loope
dec
enter
lret
les
pop
xor
fmulp
jp
js
cmp
repz
popf
call
movsl
sti
inc
lret
shll
pop
shrb
mov
scas
push
dec
mov
lcall
addl
or
mov
lods
cmp
pop
cltd
dec
ja
in
mov
push
lock
sahf
sbb
fiadds
and
push
test
push
mov
cmp
sbb
mov
xor
sbb
lret
lahf
out
xchg
dec
sbbb
cmp
cmp
js
rol
cmp
and
scas
mov
xor
movsl
xor
cmp
andl
jecxz
push
int
lock
or
inc
cltd
pop
sbb
adc
xchg
xlat
push
shrl
sub
lea
xchg
inc
fimuls
test
mov
aam
sbb
sub
cmc
dec
adc
enter
out
lods
mov
loop
jmp
test
xor
movsl
mov
and
les
or
fiaddl
insl
or
jge
lods
imul
cld
xor
and
mov
xor
push
pop
call
ret
orl
mov
or
or
cltd
and
lahf
test
daa
mov
adc
mov
pop
mov
mov
movsl
jecxz
test
sarb
jo
das
ja
xchg
mov
ret
xchg
sbb
push
sti
clc
cld
jo
nop
stos
lcall
rorl
jne
mov
xor
sub
movsl
xchg
adc
shrb
sbb
jmp
jno
ja,pn
and
scas
sbb
dec
jecxz
pusha
idiv
xchg
cmc
mov
xchg
cmc
rorl
push
movl
xlat
icebp
xchg
inc
movsl
mov
pop
div
repz
xchg
mov
xor
leave
insl
das
int
mov
aad
out
dec
pusha
pop
and
push
xor
mov
and
xchg
mov
shl
mov
xor
cmp
popf
push
imul
push
aaa
push
sub
int
dec
cmc
adc
int
bound
push
mov
shll
icebp
inc
mov
out
clc
jp
sbb
push
jl
daa
jae
mov
pop
in
out
dec
xlat
mov
inc
jmp
decl
stos
bnd
ret
iret
or
mov
push
sub
cmp
test
xchg
in
ss
pop
mov
aas
jno
pop
sti
xor
clc
mov
jecxz
ret
cmp
aad
clc
popa
in
mov
pminsw
dec
lea
or
out
jno
sahf
data16
shrl
xchg
push
sbb
mov
int
sbb
sahf
push
lds
push
aas
mov
push
fidivl
mov
js
jl
mov
push
cmp
add
pop
pusha
adc
or
cvtps2pd
aaa
add
adc
or
or
mov
cwtl
loop
out
insl
add
in
imul
or
jecxz
inc
cmp
insb
pusha
iret
int
sub
rcll
dec
fwait
repz
jmp
ds
lcall
outsb
fwait
cld
or
cmc
add
test
or
mov
and
das
fs
cmc
idivb
cmp
mov
mov
sti
pop
mov
sbb
or
nop
rcl
mov
imul
ss
push
and
pop
mov
push
movsl
insb
mov
insb
sbb
ficompl
add
or
cld
or
mov
insl
test
bound
into
pop
lea
test
mov
adc
or
aam
and
sub
dec
pop
ret
fldcw
or
mov
dec
aad
div
cmp
std
out
inc
mov
push
bsf
xchg
dec
call
cs
or
pop
dec
mov
iret
loopne
jp
dec
loop
jo
imul
cwtl
jle
sbb
or
leave
lds
mov
or
xor
or
xor
mov
cmp
cmpb
adc
add
inc
in
ret
pushl
or
sub
stos
xlat
add
addr16
push
and
xor
jns
inc
clc
add
iret
andl
mov
or
sti
push
mov
push
sti
add
jg
xor
jne
cmp
adc
or
cmpsl
dec
dec
sti
pop
sbb
inc
inc
leave
imul
and
fs
cltd
lds
lea
lods
pop
mov
pop
rcrl
cmp
mov
cmp
pop
inc
dec
mov
lcall
xchg
pop
aad
rcr
xor
stos
xchg
loopne
inc
in
xorl
stos
cmc
lods
lahf
mov
lods
pop
lret
in
xchg
add
lret
mov
ret
add
add
jns
call
out
cmp
pop
inc
fadd
sub
fnstcw
leave
stos
enter
jecxz
stos
in
in
xor
mov
mov
ficoms
jecxz
sbb
jae
jae
movsb
lea
sub
fdivrl
cs
sbb
push
jle
scas
pop
andl
outsb
cmpsl
or
pusha
adc
and
rolb
ljmp
das
sbb
clc
fsqrt
enter
pop
xlat
jle
fucomi
sbb
sbb
pop
fimuls
mov
inc
lahf
js
insl
fwait
bound
mov
testb
fdivr
fldcw
xchg
jg
jae
mov
arpl
push
inc
dec
lods
cmp
std
js
sub
adc
cmp
mov
adc
arpl
or
lods
jnp
pusha
inc
lret
pusha
adc
push
popa
insb
loope
rclb
xorb
push
push
movb
mov
std
pop
cmpb
mov
bound
je
jp
shrl
adc
inc
mov
mov
inc
mov
and
paddq
xor
sbb
out
ds
add
clc
insb
mov
in
scas
xor
dec
xor
mov
ret
xor
inc
mov
int3
xorb
test
out
mov
lock
mov
idivl
ljmp
mov
cmp
mov
rclb
shr
xor
jbe
test
jb
cs
adc
mov
jmp
xchg
and
fisttpll
inc
cmc
dec
jo
gs
mov
dec
lcall
sub
adc
adc
or
test
adc
xchg
lcall
mov
inc
pop
mov
xlat
pop
mov
stos
push
mov
fs
sub
sbb
jg
mov
ja
mov
sti
mov
add
in
xchg
jae
mov
js
pop
push
loop
dec
imul
or
sub
mov
mov
ret
ficoms
or
sub
xor
outsb
popf
in
out
push
stc
clc
inc
js
jno
inc
xor
jmp
fwait
pop
mov
sti
mov
sti
xlat
jno
dec
or
into
lock
movsb
sbb
sbb
call
sbb
xorl
xchg
sub
jl
inc
imulb
insl
mov
or
pop
rol
into
fstpl
pushf
aas
inc
push
jno
cmp
push
or
fsubl
mov
mov
cmpsb
lret
in
push
in
and
xlat
mov
cmp
nop
xchg
jae
adc
cld
mov
xchg
pushf
xlat
fdivrl
cmpsl
mov
in
lods
sbb
subb
jl
sbb
in
cmc
push
push
mov
outsb
add
nop
insb
sub
test
clc
xchg
sahf
incl
loopne
and
mov
push
jae
lea
cwtl
xor
pop
dec
xchg
and
push
mov
outsb
cmp
fiaddl
or
and
mov
imul
lock
gs
out
xlat
mov
cld
pop
inc
push
int
fistps
mov
xchg
out
xor
mov
jecxz
push
out
test
fsts
dec
pop
dec
inc
sti
xchg
pop
and
dec
xchg
push
xor
add
js
mov
sub
loop
cltd
lea
fisubrl
sahf
dec
insl
pop
aam
cmpsl
inc
fmuls
lods
sbb
ja
std
mov
lcall
or
mov
adc
insb
outsl
mov
push
sub
sub
out
inc
lret
lahf
push
sbb
inc
pop
xor
insl
dec
mov
imul
jne
dec
or
push
jno
and
cmp
fimull
xor
into
sahf
iret
push
ljmp
jb
lret
lods
xlat
mov
out
dec
sub
test
push
mov
inc
push
repz
push
call
outsb
test
pop
xchg
push
adc
jle
lods
mov
out
enter
push
cmp
out
xor
pop
or
mov
cmp
clc
dec
insb
mov
push
adc
xor
xorl
into
iret
scas
cltd
cmp
xchg
lods
fists
stos
loopne
loopew
and
subb
icebp
xor
jne
cmp
jnp
lods
aas
bound
cs
shl
dec
cmc
pop
aaa
mov
sbb
sbb
shl
inc
adc
dec
xchg
shrl
jl
sar
and
idivb
cld
pop
scas
xor
push
mov
jl
je
mov
fstpt
pop
lret
int
es
jae
push
mov
loop
xchg
push
andl
add
mov
lds
mov
out
aam
mov
dec
sub
jp
jne
xor
pop
jp
insl
xchg
mov
push
xor
sti
frstor
clc
jno
push
add
imul
out
mov
in
cmp
mov
adc
shrb
sub
mov
push
data16
dec
ljmp
popf
into
mov
or
mov
bound
xchg
cltd
pop
dec
int3
jecxz
lret
aam
test
mov
loope
jb
adc
movaps
scas
jo
xor
and
fistps
mov
mov
stos
and
movsl
jns,pn
inc
into
loope
insb
jg
jno
loope
je
shll
jb
adc
jmp
mov
jo
insb
test
xchg
jno
sub
xchg
call
orb
aas
test
pop
test
adc
ds
sbb
test
ds
pop
lahf
gs
lock
jns
pushf
xchg
lock
cmp
xlat
dec
inc
movsl
inc
icebp
adc
in
pusha
imul
push
xchg
xchg
sbb
out
mov
test
mov
notb
cli
sub
imul
cwtl
jp
out
adc
enter
into
mov
pop
sti
mov
outsl
icebp
push
xchg
and
sbb
inc
out
movsb
je
push
xchg
dec
jns
mov
divb
nop
outsb
ds
jb
xchg
xchg
jmp
jmp
cwtl
cmc
imul
fisttps
xor
xor
popa
aaa
adc
push
hlt
fistpl
fldcw
inc
mov
scas
mul
jbe
sub
pop
add
or
pop
lds
push
arpl
pusha
in
shll
xchg
xchg
and
out
mulb
shlb
loopne
sarl
or
mov
add
push
add
cmp
ret
push
dec
xlat
adc
mov
pop
push
or
cli
add
adc
dec
iret
movsl
jmp
jp
pushl
repz
and
repnz
repnz
jp
popa
push
dec
sbb
dec
push
std
pop
xchg
jl
fdivrl
cs
dec
out
cltd
xor
shrl
nop
sub
mov
and
cs
stos
nop
mov
mov
shr
dec
xchg
xor
stos
sub
xor
movsl
lds
bound
sbb
icebp
jbe
std
movsl
popa
sti
pop
std
movsl
orl
mov
xor
ror
dec
dec
mov
insl
push
mov
sar
leave
cmp
dec
cmp
fwait
push
xor
data16
lcall
mov
xchg
xor
fsubs
jp
xlat
jp
das
and
popf
pop
xchg
fs
and
addl
adc
or
adc
in
inc
mov
push
cli
in
inc
inc
inc
loopne
stc
int
in
push
out
sbb
aaa
imul
pop
xchg
cmc
aas
adc
out
mov
cmp
imul
mov
loope
and
in
hlt
pop
in
mov
jg
dec
xor
rcr
fisttps
jl
movsb
arpl
incl
pusha
js
cmp
jno
sub
movsb
cmp
inc
cmp
std
jo
sub
cmpl
inc
daa
dec
repnz
in
add
fs
movsl
mov
add
dec
dec
lcall
or
push
dec
call
cmpsb
cmpsb
sbb
notb
mov
inc
repz
jge
mov
scas
pop
push
call
pop
jb
scas
jmp
popa
push
pop
incb
adc
add
stos
mov
fdivl
mov
stos
out
mov
mov
adc
cmp
dec
xchg
push
jecxz
popf
jg
or
ss
xor
or
mov
lret
pop
xor
xlat
test
mov
in
add
mov
cwtl
lcall
add
dec
mov
push
jne
cmp
pop
dec
or
daa
xchg
cmp
pop
cs
data16
dec
jle
mov
adc
movsb
hlt
sbb
cmpsl
xchg
inc
outsl
jne
int
outsl
outsl
js
push
cwtl
push
imul
jge
gs
stos
je
int
mov
mov
xchg
lret
inc
dec
es
loope
test
pop
arpl
dec
push
and
push
sub
jg
in
and
scas
sub
lcall
lcall
sbbb
jp
fidivrs
movsl
sahf
add
stos
dec
sti
xor
imul
pop
mov
or
dec
rcll
shrb
test
idiv
and
ret
das
sbb
test
pop
push
jae
cmp
repnz
imul
sbb
insl
push
inc
push
push
jl
adc
jmp
cli
adcl
fbstp
lea
add
daa
mov
sbb
mov
sbb
imul
push
mov
mov
push
push
cmpb
nop
xchg
scas
pop
movsl
adc
pop
sahf
xchg
into
out
arpl
mov
fsts
stos
xchg
mov
jnp
shr
scas
push
cltd
stos
fsubl
bound
sbb
mov
push
repz
sbb
xor
cli
jb
imul
imul
aaa
lods
mov
mov
adc
xor
push
add
leave
jp
inc
pushf
mov
xchg
sbb
iret
push
into
push
mov
jbe
xorb
repz
mov
lret
pop
dec
push
hlt
arpl
inc
outsb
fdivs
lods
insl
lcall
iret
icebp
or
out
pop
sub
stos
pop
mov
out
or
sbb
and
pop
xor
std
jmp
loope
clc
mov
data16
sbb
dec
cmpsb
mov
adc
bound
popf
jl
pop
jg
pop
icebp
or
push
adc
mov
sbb
loopne
mov
mov
fsubrl
cltd
jmp
movsb
push
mov
pop
adcb
pop
stos
push
xchg
adc
cmp
mov
movsb
fs
mov
rol
aas
jns
or
jne
mov
sbb
daa
shlb
test
ret
mov
cmpsb
add
aas
loopne
cmp
xor
sub
pop
loope
rclb
push
inc
pop
xchg
adc
adc
nop
or
clc
push
jl
leave
cmp
pop
in
push
jg
sbb
cmp
gs
insb
in
push
aaa
sub
adc
inc
stos
xor
jecxz
sti
xor
sub
fcmovnbe
test
ljmp
js
cltd
dec
jbe
mov
adc
xchg
jge
nop
push
xor
adc
or
xchg
jecxz
jp
shrl
inc
jne
or
enter
xor
pop
orl
nop
jle
arpl
mov
push
test
cli
lods
rcrb
jb
repz
xchg
test
push
sub
loopne
les
insl
fstl
out
cmp
js
inc
push
inc
and
test
cmpsl
outsl
js
dec
ljmp
shr
ja
repnz
clc
adc
mov
push
cmp
addl
dec
lods
fcomps
mov
ret
repz
cmpsb
insl
cs
dec
stos
fsubrl
ds
test
insl
mov
aam
adc
jmp
sbb
inc
cmp
fildll
ret
xor
mov
add
cmp
xchg
in
lock
xchg
or
mov
bound
push
dec
inc
pop
push
repz
hlt
rolb
cmovb
xor
mov
cltd
and
scas
xchg
fistl
mov
loop
das
mov
mov
stos
lods
rcrb
cwtl
sbbl
aas
xchg
loopne
aam
and
mov
push
push
enter
fsts
ljmp
aas
loopew
jo
xor
adc
xchg
mov
sbbb
push
icebp
push
push
cmp
mov
loop
repnz
xor
sahf
sbb
inc
adc
push
xlat
add
int3
xchg
jl
cmp
push
xchg
xchg
push
iret
loop
fdivr
jmp
cs
popa
loop
stc
into
stos
xor
sub
or
into
fdivrl
loop
leave
inc
sbb
inc
das
out
mov
xor
addl
jmp
adc
nopl
nop
inc
sti
and
push
rcrl
cmpsl
test
xchg
and
mov
jecxz
shlb
in
nop
pop
push
setl
inc
sahf
cmp
scas
fwait
or
mov
inc
and
jle
jb
cmpsl
rcll
mov
out
and
inc
rep
cmp
push
iret
pop
mov
fcomps
lock
daa
inc
sbb
push
out
in
negl
dec
popa
addr16
adc
ret
dec
mov
xchg
das
test
jge
into
fst
sbb
imul
shl
mov
jmp
add
stos
jae
xor
int3
icebp
fnstsw
test
ja
ret
xor
jbe
loope
pop
and
stos
in
sbbb
cmp
xchg
sbb
dec
mov
mov
adcb
jns
jbe
xchg
ss
push
rolb
test
mov
ds
ret
xchg
add
mov
jg
sbb
in
stos
aam
or
xor
jmp
mov
ja
or
bound
ror
sti
and
outsb
sarl
mov
mov
les
inc
inc
sbb
mov
sbb
dec
mov
mov
add
sub
xor
lcall
test
cmp
movsb
sbb
adc
and
cmp
test
or
add
xchg
in
jp
out
jmp
dec
cli
mov
push
hlt
xchg
popf
inc
movsl
jnp
sti
ss
xor
hlt
out
xchg
add
cmp
push
cmpsl
lea
loopw
dec
mull
push
ret
movsb
cmpsl
or
call
pop
mov
pop
pop
xlat
sub
jmp
gs
add
std
scas
xor
sbb
pop
sti
mov
cmp
dec
in
cmp
dec
sbb
sarb
xchg
pop
rorl
pop
mov
sahf
inc
pop
jb
imul
push
xor
rcrl
cld
in
dec
repz
pcmpgtd
and
mov
and
pop
sti
iret
mov
arpl
cli
mov
dec
lcall
nopl
add
enter
push
inc
sub
in
dec
stos
jle
inc
mov
fs
adc
cmp
lods
repnz
or
or
mov
pop
dec
xchg
movsb
lock
mov
dec
stos
mov
dec
hlt
out
push
pop
push
push
add
test
pop
fnop
add
xor
mov
adc
adc
outsb
add
mov
inc
jne
pop
push
jecxz
inc
push
cmp
jmp
imul
ret
nop
arpl
xlat
ja
mov
mov
add
andb
jle
dec
repnz
mov
into
pushf
rorb
lods
push
inc
aaa
loopne
enter
sub
int3
push
mov
xor
cmp
mov
arpl
jmp
dec
fidivrs
addr16
leave
add
jmp
inc
test
popa
mov
popf
insb
push
imul
lods
adc
push
ja
lcall
xor
push
repz
popf
mov
js
mov
sub
mov
mov
movsb
mov
idivb
adc
lret
test
xor
jnp
les
sbb
mov
insl
and
xchg
shr
mov
ljmp
sahf
cmpsb
seto
mov
clc
imul
sub
mov
jnp
into
les
mov
int3
inc
xchg
add
jb
cmp
lcall
xlat
push
push
pop
mov
mov
push
inc
stos
sbb
std
call
lods
xchg
std
sbb
adc
inc
mov
cmp
cs
jg
mov
mov
lds
adc
xchg
mov
fxch
aad
fs
xor
fistl
test
pop
shrb
push
add
rorl
pop
movsb
bound
jge
test
push
lea
pop
in
aas
aad
daa
and
inc
stos
sub
pop
jle
popf
mov
sbb
out
movsl
sbb
dec
mov
in
js
xchg
shl
les
sub
daa
movsl
and
adc
xchg
add
test
mov
mov
orb
push
jmp
popa
movsl
jne
mov
sbb
xchg
adc
inc
jle
jns
jae
mov
xor
out
ret
faddl
sbb
outsl
jmp
movsb
push
xor
mov
mov
sar
or
push
int3
orb
and
jno
xchg
adc
or
mov
stc
test
shlb
loope
sbb
dec
inc
adc
lret
outsl
adc
leave
push
lahf
xchg
jb
mov
mov
pop
lahf
mov
xorb
add
mov
inc
cwtl
inc
cmp
pop
fs
pop
add
inc
jo
fmul
dec
in
xchg
outsb
bswap
mov
mov
fldcw
repnz
jo
pop
push
jnp
pushf
push
sti
mov
dec
movsb
sahf
mov
sbb
xchg
sub
add
or
sbb
inc
into
in
ljmp
sbb
shlb
movsl
mov
jge
push
sub
stc
mov
out
fwait
enter
jecxz
sahf
test
imul
push
pushf
les
je
out
pop
xor
push
js
add
mov
mov
jl
pop
js
jnp
mov
push
jb
push
cltd
xchg
jmp
rcrb
mov
inc
mov
mov
lds
int3
mov
mov
data16
out
loope
push
movsb
rorl
fistpll
fwait
test
daa
pop
lock
sub
in
mov
cmp
aad
jge
jo
mov
sbb
sbbb
xlat
in
addb
xchg
jns
call
and
mov
aas
xchg
loope
cmc
sub
repnz
dec
ds
cmp
cwtl
loop
and
jecxz
xor
in
out
cmp
or
xchg
inc
pop
adc
inc
pusha
pop
sbb
mov
mov
xchg
push
mov
cmp
dec
jbe
rcrb
mov
xor
fwait
dec
les
sbb
cwtl
arpl
je
hlt
jle
lods
mov
stos
ljmp
sub
test
enter
xchg
cmp
mov
push
jne
gs
movsl
es
add
movsl
ficompl
or
jl
mov
cwtl
popa
mov
jg
loop
clc
push
es
jns
outsb
or
loope
push
jecxz
adc
inc
mul
fsts
jge
mov
rorl
mov
dec
negl
fistpl
and
xlat
push
fsts
mov
mov
push
das
pusha
insb
pushf
popf
pop
dec
pop
pop
mov
outsl
jns
or
add
sbb
push
sbb
mov
sub
sub
int
fistpl
xchg
popl
aam
arpl
inc
sub
add
je
xchg
push
test
nop
sbb
mov
sti
rcr
stos
adc
xchg
push
adc
cmp
adc
stc
jns
loope
mov
cmp
push
push
or
and
cmpsb
aam
cwtl
mov
sbb
cwtl
subb
popa
call
and
test
push
dec
mov
cmp
dec
jmp
or
push
mov
mov
jp
jmp
cs
jbe
popa
divb
mov
imul
rcr
xchg
and
cmc
fnsave
rolb
mov
pop
xchg
clc
mov
sub
iret
loope
out
xorl
insb
jns
lret
lea
mov
add
pop
pop
pop
lods
inc
sub
sbb
cli
inc
test
push
jb
mov
pop
push
inc
lcall
loopne
add
dec
es
fisubrs
vmovups
js
mov
xchg
mov
dec
jnp
adc
xchg
push
dec
fists
xchg
in
dec
cltd
pop
leave
fadds
push
data16
and
inc
aam
and
aas
mov
push
lods
lcall
sub
inc
mov
fidivs
adc
sahf
pushf
xor
adc
sub
push
sub
shl
xor
cmp
leave
pop
mov
js
xchg
dec
stos
out
mov
divl
cwtl
push
filds
and
mov
shl
enter
dec
lock
mov
scas
enter
lock
fwait
test
out
gs
imulb
pop
dec
cmp
push
or
push
call
or
cmp
ret
fbstp
cmp
mov
sahf
fsubr
mov
in
lods
ljmp
int3
cmp
and
jns
stc
mov
mov
mov
ds
testb
sub
jae
fcomps
adcl
mov
outsb
xchg
pop
and
sub
dec
clc
popf
xor
ss
sbb
cs
sub
mov
outsb
lea
cmp
push
add
sahf
sbb
sub
inc
mov
lds
fstl
mov
xchg
inc
test
xchg
cli
jecxz
fs
push
cmp
sbb
pop
aaa
adc
mov
xchg
xor
in
adc
pusha
stos
jmp
cmp
pop
cwtl
fwait
sbb
in
lods
pop
std
dec
and
xor
push
cmp
sbb
clc
mov
movsl
aad
clc
sub
out
scas
pusha
aas
inc
call
fidivrs
pop
scas
out
leave
mov
xor
inc
iret
out
dec
outsl
or
or
jo
xor
repnz
scas
jb
je
nop
xchg
jecxz
fsubrs
fs
rorb
lahf
movsb
js
sub
mov
fdivs
icebp
xchg
or
ja
mov
pushf
into
fsts
outsl
inc
cli
scas
shl
sub
xchg
or
shrb
cmp
pop
sbb
lock
addl
shlb
inc
addr16
jmp
imul
jl
movl
rcll
movsb
inc
shr
test
bound
xchg
loop
lret
sti
xor
lock
push
out
ds
ffree
call
dec
inc
insl
loopne
ror
in
test
xchg
in
or
lods
jmp
ds
faddp
clc
push
outsb
loope
fstps
add
dec
rclb
mov
lods
insl
movsl
sub
mov
sbb
push
lock
dec
jnp
inc
jmp
sbb
hlt
in
rolb
sub
shr
mov
xchg
test
push
xor
add
rcrb
adcb
jmp
out
stc
sub
mov
inc
aas
mov
test
js
ss
dec
mov
mov
outsb
cs
popf
adc
xchg
fldl
cmpsb
jo
mulb
xchg
adc
pop
not
out
xor
leave
clc
inc
cli
dec
pop
mov
add
xchg
mov
dec
mov
mov
repz
jmp
cltd
and
imul
cmpsl
ss
dec
sub
fwait
dec
movsb
scas
es
mov
xchg
mov
jns
xchg
push
push
repnz
lock
in
mov
mov
rol
mov
xor
pop
adc
pop
bound
mov
lods
jnp
inc
jl
cli
mov
push
xorb
mov
cmp
mov
frstor
cmp
dec
out
sub
sbbl
movsl
mov
dec
push
jns
xchg
jae
xor
or
push
mov
fdivrs
xchg
popa
mov
xchg
xor
ret
sbb
in
pop
pminub
test
and
testl
mov
mov
adc
loop
xor
push
pop
mov
mov
mov
aaa
push
mov
xchg
sub
shlb
fdivrp
leave
insl
xor
and
movsl
addr16
xor
jno
mov
mov
arpl
bswap
lds
sahf
daa
dec
in
pusha
fdivl
fnstsw
lahf
dec
xchg
sbb
sbb
xchg
pop
mov
pop
inc
push
pop
lret
loopne
fcom
sbb
subl
test
xor
jecxz
ficoml
popa
jb
sbb
pop
pop
push
lds
stos
loopne
lahf
out
adc
dec
test
outsb
add
pop
xchg
mov
jg
pop
sahf
xchg
push
dec
popf
inc
xabort
push
mov
push
add
cmp
shlb
mov
test
test
les
push
cli
sub
or
out
pop
negb
cmp
loope
daa
sbb
dec
xchg
stc
jl
push
pop
movsl
pop
and
cli
dec
and
lds
ja
lret
mov
inc
movsl
dec
fdivr
cmp
cli
test
and
mov
ss
stos
test
pop
add
push
jno
or
and
jo
insl
inc
mov
mov
test
xchg
add
cmpsl
lcall
jp
or
insb
loope
aaa
mov
sub
shlb
adc
cmpsl
rcll
push
mov
and
aaa
pop
adc
push
test
cmc
jae
inc
cld
aad
cmc
inc
mov
pusha
inc
or
cmpsb
mov
aam
add
sahf
and
ds
rorw
jnp
addr16
and
mov
pop
jns
fidivrs
les
imul
jno
fs
jle
test
pop
and
xor
sub
sar
sbb
mov
pop
pop
adcb
and
mov
xor
fstps
pop
mul
out
std
enter
xchg
dec
jns
adc
outsl
sbb
dec
cltd
fs
shlb
push
rcll
notl
cmp
jb
hlt
lods
xchg
ret
repnz
incl
rolb
imul
fwait
stos
insl
xchg
push
outsl
scas
mov
dec
out
or
ja
mov
lods
outsl
mov
mov
sbb
mov
leave
pop
jecxz
sbb
xchg
mov
in
test
pop
loop
mov
pop
or
cmp
xor
mov
jge
js
das
scas
xchg
in
inc
jmp
dec
and
jb
mov
cmpsb
mov
mov
sub
jge
inc
test
jae
mov
lods
loopne
mov
arpl
or
das
int3
adc
xchg
inc
cs
je
ret
pop
movsl
fnsave
addr16
ret
push
xchg
adc
lds
loopne
rcrb
es
outsb
push
dec
jae
popf
lods
jno
inc
sbb
dec
out
fstps
cmp
mov
loopne
and
out
outsl
jmp
xchg
sub
pushf
lea
lea
mov
xchg
test
arpl
mov
inc
inc
push
das
clc
jmp
in
jae
xchg
pop
daa
lock
roll
int
movl
mov
sub
xchg
cltd
or
loope
inc
jg
imul
mov
mov
push
iret
int
test
arpl
dec
jmp
xchg
or
scas
gs
stos
negl
sub
or
lea
fisttps
stc
mov
hlt
add
arpl
mov
inc
hlt
xor
lds
fimuls
int3
dec
mov
cmpsl
lcall
jb
xchg
aam
test
push
xor
stc
mov
lock
xor
mov
std
fxch
mov
mov
push
mov
jae
cwtl
fsubrl
dec
mov
das
adc
stos
adc
stos
call
xor
mov
rcll
lods
paddusw
imul
je
pop
lods
inc
ljmp
inc
sarb
lret
lret
bound
loopne
lds
push
mov
adc
mov
sbb
xchg
mov
mov
insl
das
dec
fistl
call
les
pop
inc
add
sar
ret
aas
sub
loope
imul
adc
jmp
xor
push
sbb
lahf
mov
inc
push
scas
pop
enter
fdivp
icebp
push
dec
popa
jo
inc
lret
push
scas
pop
int3
jnp
nop
pusha
testl
scas
mov
mov
inc
and
movl
push
call
jmp
std
outsb
shrl
inc
mov
pop
popa
filds
rcl
lods
mov
movsl
sbb
std
lret
lret
push
dec
test
jno
mov
cmpsl
shrb
fwait
outsb
adc
std
mull
out
bound
adc
mov
push
mov
into
fstl
inc
jo
out
out
lea
and
scas
xor
jp
cvtps2pi
dec
das
mov
pop
add
jae
clc
stos
imul
adcl
aad
daa
mov
arpl
repz
outsl
or
nop
jae
and
sbb
and
sarb
dec
push
mov
fwait
push
lods
inc
push
adc
add
test
ss
lcall
fcmovu
aas
clc
or
lret
xchg
mov
insb
int
push
and
adc
loope
mov
sbbl
dec
pop
pop
in
and
dec
fwait
adc
test
mov
movsl
sbbl
inc
imul
fbstp
insl
sbb
aaa
jecxz
ja
popa
xchg
push
push
out
pop
mov
mov
jo
cmp
lods
inc
popa
dec
mov
cmpsl
adc
std
sbb
add
mov
cmpsl
sti
sbb
fwait
mov
loopne
rcll
add
imul
jge
cmc
and
ret
stc
xor
loopne
iret
inc
jg
mov
data16
mov
adc
jns
xchg
sbb
js
mov
adc
out
mov
out
jae
lds
xor
cli
scas
xchg
push
lret
xchg
outsb
repz
jmp
call
mov
mov
push
mov
cli
jne
mov
mov
insl
adc
jno
cs
jge
and
hlt
mov
mov
scas
pop
jg
ret
dec
jnp
sub
lret
jbe
push
mov
imul
insb
adc
sbb
sahf
dec
repz
test
cmpb
xchg
repnz
push
adc
sbb
and
mov
xchg
dec
jae
jmp
ja
mov
fldt
jle
fbld
leave
xor
add
into
pushf
pusha
lods
movsb
test
andl
xchg
add
aam
adc
sub
cli
int3
fbld
dec
movups
pop
sub
adc
scas
mov
aaa
gs
jle
xchg
cltd
lock
ss
and
xchg
sarb
mov
or
and
or
andb
lret
jecxz
cmp
pop
inc
pop
adc
mov
test
shl
xchg
jno
ret
cmp
dec
fwait
in
imul
sub
cmp
and
add
nop
out
mov
lcall
push
dec
push
rcrb
jbe
xor
imul
outsl
imull
shlb
out
add
add
insb
xchg
adc
jbe
ds
adc
sbb
in
sbb
cwtl
cmp
data16
dec
popa
lcall
adc
xchg
lea
jge
dec
rcrb
add
mov
inc
nop
add
jg
std
inc
adc
pop
lcall
sahf
sahf
fadds
mov
lods
call
adc
js
lods
mov
sbb
or
sbb
mov
mov
ret
dec
fwait
ret
pusha
scas
js
sbb
hlt
je
out
jb
imul
fldenv
pushf
std
fldcw
ljmp
mov
cmp
jg
mov
cmp
mov
mov
dec
mov
out
or
inc
pop
push
adc
mov
jecxz
ss
movsl
push
test
sub
clc
mov
jmp
repnz
popa
fwait
and
mov
adc
scas
faddp
je
sbb
pop
mov
es
push
lea
push
xor
lods
add
and
jno
sbb
push
lods
xchg
adc
cltd
xor
push
jle
mov
bound
test
xor
push
pop
xchg
loopne
in
es
inc
xchg
adc
in
and
xlat
push
cwtl
xor
adc
call
loopne
lret
sti
enter
adc
cmpsb
sbb
xor
mov
adc
iret
mov
and
jno
scas
scas
inc
add
jle
and
rolb
mov
jo
add
aas
mov
call
xchg
jnp
mov
lds
mov
mov
subl
shl
mov
pop
add
pushf
mov
rcrl
mov
jmp
jno
iret
mov
mov
dec
daa
jnp
cltd
call
pop
sub
test
jns
xlat
rcll
add
outsl
rclb
jecxz
xchg
jbe
xchg
inc
push
sbbb
or
je
pop
pop
mov
sbb
or
push
test
test
pushf
stos
add
sbb
inc
xorl
clc
jae
inc
xlat
xchg
mov
daa
dec
addl
cld
jb
jmp
adc
mov
add
cmp
addb
ret
and
imul
inc
jp
xchg
mov
lds
sub
mov
push
bound
mov
fsub
adc
xchg
sbb
test
mov
pop
jl
pop
push
jp
rcll
sub
clc
lock
imul
cmp
fwait
lods
pop
lods
lcall
faddl
test
mov
mov
repz
adc
mov
aad
popa
inc
out
imul
movsl
push
pop
mov
xorl
push
repnz
fnstsw
repz
subl
xchg
lret
scas
stos
adc
lods
insb
inc
aaa
cwtl
adc
push
dec
lods
mov
jmp
mov
mov
add
outsl
add
and
adc
call
adc
cmpxchg
test
out
and
mov
ret
andb
andb
sub
mov
and
cmpsl
sub
cmp
push
mov
add
jnp
inc
leave
mov
jp
mov
adc
adc
inc
sar
cltd
sbb
xchg
bound
push
sahf
pop
xchg
and
inc
dec
jae
subl
push
mov
xchg
or
mov
lret
add
lods
fistpl
addb
mov
shll
lds
insl
sbb
sti
ficoml
ss
mov
fistl
push
mov
loop
inc
jecxz
mov
jmp
mov
pop
mov
insb
fldl
mov
sbb
add
or
test
pusha
cmp
pop
add
out
ss
xchg
nop
push
dec
std
cwtl
je
div
inc
movsl
loopne
out
pinsrw
cwtl
orl
iret
push
xchg
test
mov
loop
mov
cli
sub
mov
adc
jl
cmpsb
test
xchg
pop
inc
pushf
push
pop
je
jne
and
add
mov
or
lret
aam
or
mov
sbb
xchg
testl
popf
cmpsl
cmp
fld
add
sarb
out
adc
and
stc
cmpsb
ret
inc
gs
ljmp
lcall
xchg
out
mov
hlt
jbe
sub
out
adc
xchg
push
lret
dec
jns
bound
sbb
mov
cld
xor
mov
mov
gs
mov
divb
cs
ret
in
jg
test
sub
pop
dec
or
or
fldt
mov
lahf
mov
pop
or
jecxz
jo
mov
and
mov
mov
fwait
add
and
xchg
sub
inc
add
xchg
outsb
out
jo
lret
push
js
test
lea
mov
dec
in
rclb
mov
xchg
fiaddl
jne
inc
pand
sahf
push
loope
sbb
jae
aaa
xchg
cmp
sbb
add
call
scas
mov
in
sbb
push
and
mov
sahf
js
lret
pop
scas
jl
ret
cmp
das
out
ficoml
mov
pop
cmpsb
call
imul
push
inc
in
cmp
mov
cli
xchg
mov
fwait
insl
mov
push
ds
fisttps
fwait
lahf
mov
ljmp
es
test
xchg
and
and
pop
out
jbe
inc
fistpl
stc
or
adc
mov
out
js
adc
sarl
dec
mov
out
xchg
lods
je
pop
lahf
adc
and
inc
xchg
ret
xor
testb
xor
sub
push
or
and
lea
mov
jmp
jb
pop
sub
fists
lret
scas
cmpsb
push
andb
or
sub
cmp
push
add
adc
mov
stos
xor
imul
cmp
inc
jecxz
xchg
arpl
testb
mov
mov
divl
mov
fiadds
mov
dec
outsl
mov
lret
fistl
cmp
std
xor
mov
je
add
cwtl
dec
xchg
xor
in
xchg
outsb
xor
cltd
rcrl
mov
in
sbb
jae
mov
cltd
rcll
movsl
dec
enter
ljmp
add
and
mov
ficoml
pusha
leave
push
xor
inc
outsb
mov
push
leave
sbb
mov
or
xor
pop
cli
neg
sti
dec
adc
inc
adc
xchg
pop
cmp
inc
and
xor
sub
add
and
jg
das
inc
jne
aaa
inc
or
jne
addb
or
or
inc
mov
jns
out
mov
popa
jae
jg
test
addr16
sbb
lods
mov
adc
jp
mov
push
pop
imul
lods
xor
add
rorb
inc
push
fisttpl
stc
pop
jno
sub
faddp
outsb
fisttps
in
push
adc
lret
mov
inc
dec
mov
mov
inc
movsb
das
add
and
lidtl
mov
cmp
testb
xlat
in
scas
cmpsb
sub
shlb
dec
lds
nop
push
mov
push
cmp
sub
mov
scas
xchg
sbb
cmp
xchg
loopne,pn
ja
xor
sbb
mov
mov
xlat
push
xor
aaa
outsb
cmp
add
das
imul
jecxz
dec
xorl
jge
in
xor
call
ficompl
cltd
cwtl
aad
sub
mov
xchg
lds
inc
js
std
cmp
mov
and
cmp
inc
fcmove
movsb
jge
out
lcall
mov
dec
inc
mov
hlt
enter
mov
enter
push
test
arpl
call
inc
loopne
repz
pop
mov
stos
test
or
mov
adc
xchg
pop
ret
adc
shll
out
add
insb
insl
subb
aam
push
inc
das
repnz
adc
inc
icebp
jae
cmp
sub
jecxz
jns
jo
sbb
adc
out
pop
aam
sbb
imul
icebp
jno
push
ljmp
push
sbb
or
or
adc
xchg
add
leave
loop
push
popa
mov
rolb
insb
out
or
xchg
adc
enter
mov
xorb
mov
sbb
lods
incb
sar
hlt
mov
fcmove
les
fldt
stc
ljmp
pop
popa
sub
xchg
pop
mov
pop
test
scas
or
fstps
mov
cmp
push
les
ja
or
sarl
pop
dec
ds
inc
sub
jg
push
adc
icebp
not
and
cwtl
jbe
dec
das
cmc
or
add
cs
and
fisttpll
ljmp
cmp
sbb
push
not
call
xor
negb
jnp
iret
jne
cmpl
inc
inc
test
negb
jno
test
aas
fisttps
cmp
idivl
stos
or
mov
shll
mov
testl
pop
jb
out
or
daa
pop
push
jo
inc
in
ja
add
push
test
js
jge
sub
jo
jbe
dec
xor
push
mov
jmp
mov
cmp
cmp
xchg
mov
mov
xchg
jns
out
add
jl
lods
mov
cmpsb
jne
jmp
or
push
fadds
mov
in
push
push
je
and
std
or
aam
cltd
arpl
inc
lcall
mov
icebp
mov
mov
dec
sbb
xchg
pop
test
sbb
test
lret
pusha
shl
or
ljmp
push
das
stos
arpl
lea
sub
rcl
cmp
das
sti
push
jp
jg
int3
dec
inc
enter
mov
scas
imul
mov
adc
and
sub
mov
xchg
push
lea
or
and
sbb
xor
sahf
inc
push
bound
out
xchg
iret
bound
stos
outsl
adc
pop
adc
loop
das
and
dec
inc
lods
ja
mov
and
into
enter
pop
mov
aam
dec
mov
mov
scas
dec
jnp
lds
insb
cmp
imul
inc
call
loopne
loope
pop
cmp
rorb
rorb
out
fs
jge
fdivs
sbb
popf
inc
cld
les
int3
mov
pop
in
fsubl
mov
aad
mov
call
pop
and
jmp
leave
dec
mov
scas
cltd
rcrb
fcomps
xor
mov
imul
xchg
add
or
adc
stos
jge
mov
adc
sbb
jno
jo
frstor
jns
cwtl
inc
xor
cmpsl
dec
jge
lret
pop
in
add
lea
mov
fdivp
lods
adc
xchg
dec
fcoml
sub
test
xor
jl
clc
loope
mov
xor
mov
sbb
pusha
push
ljmp
cmp
cltd
and
and
push
push
mov
outsb
or
xchg
pusha
pop
pushf
sbb
cmp
mov
cmpl
cmp
divb
gs
stc
je
dec
mov
sbb
dec
pop
xchg
fcompp
lahf
test
cmp
mov
cmc
xor
sbb
and
push
fsubr
rorl
lods
insb
pop
int
add
mov
mov
je
or
jae
enter
je
cmpsb
push
test
dec
orb
mov
cmp
xchg
xchg
icebp
inc
mov
cmc
dec
testb
lods
loope
mov
jmp
and
xchg
mov
inc
jp
cmpsl
mov
popa
lret
div
out
push
loop
sub
int
add
lea
lret
jle
add
outsb
xchg
dec
jmp
fwait
dec
sahf
fisubl
orb
incb
pop
decl
xchg
out
lahf
outsl
stos
inc
pop
daa
add
add
stos
out
insb
sbb
pop
sub
push
lret
jg
stos
adc
lret
popa
dec
outsb
mov
je
and
mov
push
dec
or
movsb
dec
jecxz
mov
push
sub
clc
aam
loopne
addr16
addl
adc
and
scas
lods
push
mov
jmp
lcall
fsubl
mov
repz
inc
test
adc
call
pusha
fs
outsb
xchg
mov
xor
and
lods
cs
adc
or
jle
and
push
inc
pop
sub
sbb
shrl
aas
sti
jnp
push
ficompl
lea
test
jae
out
fidivrs
fiaddl
fs
es
dec
inc
iret
adc
inc
jne
inc
je
push
lods
xchg
cmp
xlat
xchg
sti
inc
jmp
jb
sahf
xor
push
adc
jae
les
out
push
xchg
fmul
sub
push
mov
mov
ljmp
cld
andb
pusha
mov
outsb
cmpsb
dec
ss
or
shrl
hlt
inc
je
loopne
fiadds
ficompl
cwtl
cmp
dec
stos
sbb
mov
cmp
xchg
jle
fistps
lea
lea
nop
adc
lods
idivb
sub
push
test
scas
xchg
es
inc
fwait
mov
pop
pusha
aas
pop
les
xchg
mov
fiadds
inc
jp
bound
jns
or
outsb
and
xlat
lods
into
cmp
xchg
cmc
insb
jecxz
push
adc
stos
adc
or
sub
mov
mov
mov
or
nop
ljmp
loope
stos
jbe
mov
add
jl
jo
or
roll
in
jne
in
andps
or
jno
jmp
loopne
and
dec
repnz
pusha
jl
cld
and
roll
pop
bswap
test
pop
fistl
andb
xor
push
sahf
sub
bnd
and
jnp
and
fdivl
wrmsr
shlb
add
sub
mov
arpl
sbb
gs
inc
jg
mov
adc
mov
add
mov
js
lds
inc
scas
or
int3
or
fld
ds
and
jo
mov
sbb
scas
add
push
lods
data16
imul
cwtl
pop
in
or
lcall
lret
mov
and
jp
dec
int3
inc
test
inc
inc
sub
or
shlb
fwait
cmp
in
dec
idivl
mov
and
cltd
inc
addl
push
cwtl
mov
mov
mov
mov
or
cmp
xor
pusha
jo
jl
fdivl
fmulp
cvtps2pd
shrb
dec
js
outsl
scas
mov
cmpb
cmc
imul
adc
add
scas
mov
xchg
lea
out
fs
xor
and
push
mov
sarl
sub
dec
mov
inc
and
testb
aad
in
out
pop
test
mov
insl
xchg
aas
repnz
daa
mov
push
hlt
inc
cltd
ret
insl
xor
pop
call
cmp
mov
or
xor
loopne
js
popf
int3
rcrl
out
xchg
mov
scas
push
and
out
xlat
mov
das
push
cs
repnz
arpl
cld
pop
popa
loop
enter
push
mov
add
test
xchg
inc
loope
mov
pop
push
popa
shr
loope
add
adc
push
cld
mov
lret
insl
sbb
and
enter
and
sahf
add
outsb
sub
pop
pusha
inc
not
dec
mov
outsb
mov
mov
out
sub
outsb
xor
mov
inc
dec
sti
out
fbstp
dec
adc
test
das
add
mov
and
cmpb
subb
jns
mov
pop
in
pop
sbb
adcl
cmp
and
shr
sbb
xor
adc
jnp
add
or
mov
jo
inc
xchg
adc
leave
enter
mov
fwait
lock
and
push
in
push
fisubrs
cvttps2pi
outsl
push
sbb
mov
loope
int
jns
rol
cld
pushf
dec
xor
test
hlt
adc
scas
push
out
cmp
enter
adc
sbb
iret
add
sti
sbb
aas
popf
cmpsb
adcl
lea
jnp
sbb
xor
lret
sbb
cltd
std
xchg
pop
test
pop
std
mov
repnz
push
ljmp
and
xchg
daa
mov
scas
and
xor
mov
adc
xor
and
dec
imul
mov
insl
sahf
jb
jle
gs
aas
scas
cmpsb
and
pop
in
int
mov
das
lret
xchg
loop
cmp
and
out
or
lret
inc
xchg
fnstcw
pop
shlb
cld
push
pusha
mov
mul
push
bound
dec
subl
pmaxub
push
add
or
pusha
es
fcomp
dec
fcoml
lret
aas
xlat
call
push
mov
pop
shll
test
and
dec
sbb
sahf
jmp
ljmp
out
loop
mov
jbe
mov
lea
popf
int
xor
mov
int3
rorb
std
jbe
lahf
add
push
pop
adc
xchg
add
sahf
ret
mov
jmp
clc
fmulp
daa
xor
call
push
and
lods
dec
mov
sbb
xchg
leave
addr16
iret
pop
push
xchg
push
sub
lret
filds
mov
pop
push
mov
sarl
mov
outsl
icebp
inc
adc
or
inc
jge
pop
imul
or
je
mov
inc
inc
aaa
or
sub
out
or
lcall
es
mov
shll
jle
lock
dec
ds
inc
xchg
std
sub
add
jb
movsb
loopne
aad
int
push
imul
pop
movsl
pop
sub
adc
cs
inc
mov
mov
loope
cmp
cmp
adc
addr16
xchg
jle
or
loopne
lds
xchg
mov
jp
mov
mov
jmp
push
mov
ja
xchg
hlt
lret
outsl
pop
push
sub
out
jg
pop
outsl
adc
add
add
outsb
sarb
dec
mov
lock
enter
sbb
stos
push
bnd
mov
inc
enter
sbb
add
das
jb
scas
cmpsb
test
dec
data16
pop
sub
daa
pusha
inc
adc
fildll
lret
popa
sahf
push
cmp
cld
add
and
sub
fstpl
mov
inc
out
sub
test
and
in
jae
xchg
loop
jge,pt
test
call
mov
int3
inc
mov
cmp
push
aad
jnp
sbb
fidivrl
insb
loope
sahf
pusha
mov
adc
and
inc
cmp
and
inc
adc
cld
push
cmp
cs
cmp
loop
jns
fucomp
stc
jge
call
mov
jno
pushf
push
enter
adc
inc
nop
inc
add
add
sar
rclb
out
rol
das
mov
jns
inc
sub
enter
adc
mov
movsb
mov
sub
add
sub
push
sahf
jnp
mov
pop
dec
jnp
sbb
in
add
ret
test
inc
andb
mov
push
cmp
sbb
or
adc
jae
insb
into
loopne
mov
xor
adc
inc
jmp
inc
dec
add
sub
outsl
jl
add
ss
mov
repz
and
jnp
mov
cmp
mov
in
jno
scas
mov
mov
aaa
sbb
adc
and
pop
enter
jle
pop
mov
dec
jne
jbe
add
mov
pop
mov
dec
aad
dec
adc
inc
and
xchg
jbe
or
icebp
out
fmuls
mov
lods
jmp
aaa
in
lret
mov
or
dec
push
pop
push
ss
stos
jl
sub
rorl
movsl
mov
and
sbb
outsl
inc
movsb
pop
jo
cltd
ljmp
xor
jp
lret
mov
pop
xor
cmp
xchg
dec
sti
sub
mov
out
insb
add
sbb
push
popa
cmpsl
or
or
cmpsl
pop
inc
loopne
jne
pop
pop
cmp
scas
lea
push
inc
cmp
das
int
cmp
mov
das
cmp
cmpsl
leave
sbb
pop
xchg
fildll
nop
fcomps
push
jg
jb
int
sub
fs
mov
dec
stc
mov
push
je
imul
mov
insb
das
fstps
and
lahf
test
pop
sbb
or
mov
cmpl
addb
push
xlat
dec
stos
pop
dec
and
push
sub
sarb
ret
xchg
dec
test
into
icebp
stc
jl
iret
pusha
mov
xor
not
xchg
ja
mov
mov
mov
jle
mov
rolb
xchg
cmp
mov
jbe
imul
fwait
imul
push
dec
test
insb
dec
stos
clc
mov
divb
sbb
sub
cmp
or
mov
xchg
outsb
push
pusha
inc
pop
test
or
pushf
sub
sub
rolb
test
mov
push
loope
dec
aas
fwait
mov
fnstsw
sbb
sbb
fsubrs
cmp
das
xlat
es
ja
mov
xchg
dec
jbe
adc
jl
imul
lcall
ss
inc
sbb
icebp
loope
cmp
pop
popf
inc
in
pop
lahf
insb
pop
xor
jnp
add
push
cmc
fcmovne
jnp
adc
jmp
pop
cmp
sbb
adc
dec
ss
lds
pop
jg
sub
andb
lods
fcoms
jo
mov
and
sub
iret
pop
fwait
add
sahf
xor
repnz
adc
mov
rcr
dec
pop
mov
arpl
mov
aas
xchg
xor
xchg
arpl
pop
jbe
les
sahf
and
inc
arpl
mov
aaa
rol
cmpb
inc
fcoml
inc
shlb
insl
xchg
sbb
push
xchg
xchg
enter
mov
movsl
ljmp
push
int3
adc
xor
and
das
jo
call
lods
lds
adc
subb
adc
jb
mov
xor
shll
and
imul
push
das
sbb
inc
popa
inc
push
mov
jne
jge
cwtl
push
shlb
push
xor
mov
pop
es
jecxz
jnp
or
pop
sahf
mov
sti
xchg
xchg
sbb
decl
int3
add
inc
ret
lds
loope
addr16
push
and
add
xor
ds
push
das
hlt
pop
arpl
dec
sahf
xor
push
sbb
divb
sahf
lret
xlat
inc
mov
addb
add
movsb
or
fldcw
pop
loope
test
pop
jns
rol
adcl
dec
and
dec
jmp
mov
in
jne
mov
dec
xchg
insl
mov
sub
add
mov
mov
push
jmp
rcr
outsb
sbb
loope
pop
mov
and
clc
lods
sub
loop,pt
mov
popa
xor
or
add
sub
fidivs
movsb
popf
and
pop
xor
stos
sbb
pop
inc
mov
or
jbe
in
pop
jae
stos
mov
dec
dec
nop
mov
dec
sbb
imul
fbstp
mov
enter
xchg
sbb
mov
mov
popa
mov
insl
adc
lret
outsl
mov
dec
pushl
fsubp
push
jb
sbb
dec
repnz
fbstp
add
mov
dec
cmp
jae
addl
les
sub
dec
inc
push
pop
iret
mov
or
outsb
into
mov
inc
sbb
sahf
test
and
aas
daa
ljmp
inc
mov
jae
hlt
cmp
cld
push
loope
popa
mov
mov
and
adc
sbb
dec
ret
and
popf
pop
lcall
jg
aaa
outsl
dec
hlt
and
sbb
jmp
jne
cmp
jg
enter
mov
lock
mov
and
sti
push
shll
mov
outsb
dec
mov
or
sbb
addr16
mov
out
mov
cmpsb
mov
adc
mov
outsl
mov
mov
fimull
xor
mov
and
mov
lods
xchg
ja
mov
pop
adc
push
mov
or
mov
or
sub
pop
gs
adc
add
ja
cmp
out
push
sbb
jns
cmp
jne
js
pop
fstpt
mov
mov
add
xor
cmp
pop
mov
and
xchg
js
jl
mov
scas
inc
subl
or
jge
pop
push
out
shl
les
add
cmpsl
xor
add
push
adc
leave
andl
loop
pop
int
xor
lret
test
dec
aas
pop
lcall
iret
or
lret
scas
sbb
aaa
pusha
ficompl
das
inc
jne
in
xchg
and
push
mov
stc
mov
pop
xchg
scas
rorb
push
xchg
daa
and
idivb
fwait
jecxz
ss
dec
enter
sbb
jge
xlat
or
sub
sub
dec
lcall
dec
dec
ljmp
push
out
cmp
test
lock
pop
xchg
jo
out
sbbw
mov
mov
mov
push
mov
hlt
pop
in
jp
cmp
aaa
fs
xchg
mov
jbe
test
rcrb
lcall
or
lock
cmp
arpl
jmp
cwtl
in
loope
jge
out
out
mov
ret
leave
mov
out
inc
les
out
pop
mov
out
xchg
push
dec
sub
dec
scas
jo
clc
jecxz
xchg
cmp
adc
aam
and
cmc
xchg
lahf
lcall
and
push
pop
imul
movsb
inc
jbe
xchg
dec
pop
mov
pop
inc
aam
xor
xor
aas
sub
in
dec
push
jne
or
repnz
push
das
int3
and
into
rcrl
int3
sub
fiadds
arpl
into
mov
push
jmp
jl
pop
cmpsl
cmp
jge
jno
mov
xor
jp
aas
aas
lods
xor
sbb
adcl
xlat
jae
adc
xchg
sbb
sbb
imul
cwtl
adcl
mov
jl
pushf
mov
or
dec
and
xchg
adcl
lods
mov
cmp
das
insl
sti
jmp
aad
mov
fimuls
sbb
movsl
mov
popa
jb
into
mov
push
test
dec
add
test
insl
push
data16
icebp
inc
loopne
mov
mov
in
jae
mov
adc
add
dec
or
pop
xchg
mov
sub
popa
clc
jmp
imul
out
fnstcw
fildl
pop
cmpsb
adcl
adc
add
sbb
cmc
push
xchg
lcall
jl
inc
loopne
xchg
nop
dec
dec
or
pop
xor
push
push
scas
mov
cmc
cmp
jo
cmp
mov
xor
int
pop
push
mov
loopne
aam
pop
inc
insl
inc
in
aam
cmpsl
jne
scas
out
add
xchg
sub
jnp
roll
fisubrs
mov
rorb
mov
mov
mov
dec
ljmp
mov
pushf
add
sub
test
outsb
stos
mov
bound
cs
jg
out
xchg
mov
push
nop
pusha
cs
fsubrs
lods
arpl
into
fldt
mov
outsl
mov
fcompl
pusha
inc
cmp
clc
divl
test
mov
pop
sub
dec
rcrl
xor
in
stos
inc
ret
loope
andb
pop
out
leave
call
ljmp
xor
icebp
mov
fadds
cltd
jnp
out
addb
add
cmp
sti
push
and
out
and
pushf
cmp
or
fisubrl
mov
adc
dec
inc
addr16
js
shrb
das
xchg
add
xchg
mov
mov
jge
push
add
or
stos
imul
ret
dec
inc
andb
pandn
cmc
negl
inc
cmpsl
fidivl
jle
mov
fistpl
inc
dec
dec
dec
mov
sarl
cmp
xorl
pop
inc
sub
sbb
push
das
std
jnp
dec
cmc
fsubrs
out
cmp
in
fcmovbe
inc
and
and
mov
popa
xlat
xor
jle
ljmp
cmp
jg
pop
dec
dec
sahf
jns
jo
sbb
add
push
sbb
stos
and
cmc
loopne
xor
xchg
pop
mov
stc
jae
push
lcall
pop
sub
add
mov
inc
stc
leave
pop
out
xor
fdivrp
cmp
inc
jmp
int3
pop
aas
mov
pop
mov
loope
sbb
orb
es
and
jle
icebp
enter
orb
push
stos
push
jbe
sahf
push
std
cmp
xchg
jg
hlt
or
push
out
mov
inc
fldl
and
mov
pushf
sub
jle
arpl
pusha
push
ficompl
aad
insb
rcl
in
xor
mov
push
mov
aas
fstps
ret
mov
xchg
xchg
popa
lods
adc
or
or
mov
movsl
push
xchg
mov
sub
adc
sbb
out
shrb
pop
aas
xchg
loope
stos
mov
arpl
sub
jb
rol
stc
movsl
jg
mov
push
lods
ss
rclb
imul
aaa
add
cmp
and
xchg
xchg
cwtl
jbe
ja
dec
enter
mov
jo
hlt
add
scas
je
roll
mov
sbb
mov
sub
repz
sbb
ffreep
hlt
push
idivl
aaa
bound
imul
mov
pop
xchg
or
mov
adc
push
cmp
push
mov
imul
test
inc
ss
dec
push
cmp
jnp
jecxz
sbb
loop
dec
lea
mov
lods
adc
mov
sub
ret
jns
sbb
jns
ret
xchg
std
cmc
mov
incl
out
sar
dec
sub
add
fdivr
sbb
jecxz
aaa
jne
inc
out
push
and
or
and
and
xchg
aad
or
mov
adc
dec
out
xor
mov
push
insl
mov
ds
push
loope
push
or
insb
mov
stos
cmovo
cmp
mov
jns
xchg
clc
bound
jge
nop
xorb
test
mov
push
mov
inc
xor
dec
push
cmp
add
bnd
xchg
lods
pop
push
fdivs
not
roll
addb
xchg
mov
ja
out
js
xor
les
outsl
hlt
and
cwtl
ret
jl
outsl
mov
mov
je
js
mulb
mov
cmp
xchg
aaa
roll
sbb
into
pop
popf
or
cwtl
mov
xchg
js
iret
mov
call
cmp
addr16
and
gs
xchg
in
cmp
nop
das
jae
mov
mov
sbb
das
stc
push
outsl
sub
pusha
and
pop
xor
test
hlt
lods
dec
jo
pop
and
and
adc
std
repnz
in
xchg
imul
mov
les
dec
push
popf
imul
mov
repnz
outsb
lds
scas
incl
in
xor
sbb
shlb
ret
daa
dec
ret
jae
jnp
inc
or
sbbb
push
cwtl
mov
ss
je
xor
mov
pop
js
in
pop
lret
xchg
shll
in
insb
mov
mov
mov
mov
dec
rolb
ret
dec
aas
aad
xchg
sbb
out
loope
xor
xchg
js
or
inc
jle
pop
adc
sbb
xchg
mov
sbb
stos
roll
dec
push
jnp
es
pusha
sbb
cs
aad
cmp
js
in
xor
xlat
mov
push
sub
sub
test
inc
dec
xor
outsl
jne
xorl
es
fs
push
mov
inc
pop
jg
jp
push
flds
imul
and
mov
pushf
ds
push
push
mov
movsb
xor
mov
lahf
inc
divl
mov
and
jle
sbb
loope
ljmp
mov
popa
orl
mov
fdivr
adc
fsts
pop
sbb
js
dec
decb
pop
sbb
adc
in
std
out
es
pop
push
pop
or
mov
push
dec
out
cmp
popa
scas
xchg
popa
mov
loopne
and
jbe
sub
adc
packuswb
int
sub
push
stos
mov
pop
cmp
mov
gs
mov
lret
xchg
mov
cmpsb
lods
and
adc
outsl
lcall
fs
test
stos
imul
mov
aam
lret
pop
mov
test
jnp
mull
ret
mov
loopne
push
aaa
xorl
mov
sub
mov
stos
adc
xor
outsl
loopne
sub
or
sbb
stos
add
mov
inc
mov
int3
sbb
mov
mov
fildll
shrb
ficoml
sub
sbb
dec
adc
outsb
sbb
push
push
adc
and
gs
jl
xchg
sub
andb
xchg
rorb
cwtl
xchg
jbe
inc
lcall
adc
adc
out
and
cs
daa
pusha
dec
push
aam
fbld
jmp
stc
daa
pop
pop
adc
xchg
add
adcb
adc
or
iret
leave
test
jp
bound
lea
out
in
adc
sub
pusha
jmp
jl
and
xchg
in
add
or
gs
std
in
sarl
imul
sub
jb
roll
dec
xor
mov
addr16
stc
xor
cli
cmp
jge
aaa
dec
out
jmp
push
adc
in
call
cli
xchg
mov
mov
or
pop
dec
je
sarb
add
insl
push
push
xlat
push
arpl
inc
xor
and
pop
loop
jmp
inc
mov
jmp
push
loopne
xchg
mov
and
sub
or
mov
stc
out
ss
dec
jo
flds
mov
fucomip
lods
jp
test
stc
out
movsl
sbb
pop
repnz
bound
subl
int3
cmp
pop
int3
mov
sbb
mov
xchg
dec
lret
xchg
adc
adc
jns
ja
sub
pop
inc
push
mov
jae
gs
or
mov
or
cld
imul
gs
in
jp
jbe
adc
stos
push
iret
faddl
fsubr
xchg
mov
adc
pushf
xor
jl
int3
or
mov
dec
movsl
fdivs
pushf
test
lods
jae
mov
in
push
jge
xchg
lret
sahf
arpl
mov
push
cmp
das
mov
sbb
sub
dec
xor
push
fwait
jb
cmp
in
je
push
add
ds
cmpsl
test
fmull
sub
aaa
sbb
fidivs
sub
dec
inc
mulb
cmp
test
mov
mov
dec
cmc
cmpsl
inc
repz
pop
jns
ds
mov
inc
stos
xchg
cld
mov
lret
xor
cmpsl
pop
jns
sbb
lods
aaa
int
pop
push
outsl
pop
cmp
cmc
clc
aam
mov
cli
adc
loope
sbb
lret
sub
jno
repnz
xchg
push
mov
push
icebp
adc
sub
push
mov
dec
add
cmpsl
fs
loope
push
add
pushf
and
cmp
mov
adc
and
das
scas
icebp
loope
rolb
mov
repnz
sti
lods
enter
outsb
xorl
ljmp
arpl
inc
lcall
cmp
test
pop
xor
cld
push
lods
or
or
xchg
mov
sahf
loopne
pusha
inc
or
add
pop
lea
dec
dec
popa
and
inc
lahf
and
sbb
push
xor
js
pop
stos
jne
nop
xor
inc
add
lret
and
sahf
mov
fdivs
adc
mov
loopne
addr16
cmpsl
xor
jbe
lret
add
sahf
xorb
sti
inc
stos
subb
add
mov
mov
cltd
or
push
dec
add
shrb
sub
testb
hlt
enter
sbb
add
rcll
adc
clc
dec
test
jle
aas
pop
fwait
fwait
xor
mull
ret
pop
stos
lea
mov
cmp
xor
loope
mov
or
cmp
pop
arpl
and
adc
movsb
pushf
testl
mov
xorb
mov
jecxz
add
cmpsb
cmp
ss
mov
and
push
notl
xlat
mov
fdivrl
lret
sub
mov
ss
jae
outsl
cmp
sub
jae
in
repnz
mov
sahf
dec
adc
sub
jae
adc
shll
push
jmp
push
mov
jmp
pop
sub
xchg
push
jge
leave
push
mov
hlt
fs
imull
add
inc
sub
mov
adc
mov
mov
cmp
fwait
dec
xor
bound
mov
outsl
and
sub
daa
fsts
pop
add
sub
ds
push
inc
cld
lods
pop
cld
popa
mov
adc
inc
cmp
dec
and
imul
aam
jb
inc
ja
mulb
js
xlat
lret
adc
and
or
ffree
insl
add
shrl
ds
in
sub
add
push
iret
push
int
iret
iret
data16
inc
xchg
xchg
lcall
loope
out
add
outsl
aas
into
xlat
cs
sar
dec
xchg
fadd
aam
inc
mov
movsl
cmpl
test
test
test
lock
and
inc
add
fsubl
int3
pop
addr16
xchg
cmp
xchg
and
out
jo
jl
pushf
aam
std
and
outsl
sbb
lea
test
repnz
ret
sar
cmp
add
inc
fistps
adcb
sub
cld
inc
push
xor
ss
cmpsl
mov
jno
add
inc
push
ret
lahf
push
dec
add
aas
sbb
sub
xchg
jb
hlt
push
xor
mov
shrl
jle
sahf
sub
inc
jg
out
cld
movsl
mov
das
mov
mov
aam
pop
bound
and
mov
test
mov
roll
lock
dec
js
xor
cltd
pop
insb
jbe
lock
pop
rorb
mov
shll
adc
fwait
lahf
pop
stos
push
in
ja
loopne
push
mov
ljmp
imul
lods
sarb
das
cmp
shrl
mov
stos
fisubl
stos
out
out
xchg
insb
push
pushf
mov
fs
out
js
pop
xchg
in
jl
jmp
jo
aam
mov
pushf
mov
mov
mov
cmp
xchg
icebp
es
xchg
jbe
int
ret
push
add
mov
idivl
adc
push
hlt
cld
xchg
mov
push
notl
rcll
fisubrl
ljmp
push
fcmovb
jbe
pop
cmp
mov
push
inc
jb
jl
js
xchg
adcl
lahf
lods
ficoml
xchg
mov
pusha
xchg
ljmp
inc
mov
aam
or
xchg
adc
mov
push
mov
mov
cld
out
xchg
rol
cmpl
push
push
or
scas
mov
cmp
lods
sbb
movsl
fs
fnstenv
push
fnstsw
xchg
pop
pop
pusha
adc
push
js
or
cli
mov
nop
scas
inc
outsl
mov
orl
fcoms
mov
mov
insb
or
adc
jae
stos
mov
sub
out
pop
test
cmpsl
mov
lcall
adc
rcrb
mov
mov
push
sti
inc
xchg
jl
movsl
mov
cmpsl
inc
inc
adc
cmpsl
cmp
mov
shlb
mov
mov
xchg
stc
xor
jp
push
fsubrs
xor
fadds
rorl
xchg
push
in
fidivrs
pop
daa
std
imul
jp
lock
aaa
hlt
nop
inc
aaa
ds
dec
pushf
xor
push
bound
xorb
jmp
xor
fdiv
call
jne
inc
mov
dec
xor
lahf
and
add
or
xor
sub
in
fwait
jb
movsb
push
inc
mov
lahf
inc
jl
inc
aaa
in
pop
cwtl
rcl
sub
or
add
cmp
aad
stos
and
jg
xchg
rcrb
ja
inc
xchg
lahf
ret
fcoml
repnz
add
cmp
imul
int3
int3
mov
into
insl
in
or
pop
push
pusha
or
fcom
aad
aas
in
fists
js
test
psubsw
incb
das
sbb
fildl
mov
mov
scas
or
sub
sub
loopne
cmp
mov
ss
and
sub
add
and
daa
pushf
aas
negb
out
and
nop
sub
sbb
adc
inc
fmul
xchg
popa
stos
int3
sarl
pop
test
sbb
into
or
fisttpll
add
xlat
sub
sti
jae
stos
pushaw
hlt
iret
dec
aaa
loop
fxch
into
and
sbb
lret
add
out
ljmp
out
ljmp
sbb
adc
mov
test
lods
adc
xchg
nop
xchg
jae
cmp
vmovq
out
inc
sbb
ds
loopne
mov
cmc
jno
pop
test
dec
rolb
xor
pop
jo
xchg
jnp
addr16
mov
outsl
jmp
push
jns
jne
lds
aad
lcall
sbb
xlat
mov
mov
or
sub
in
mov
lret
jge
xorl
data16
ss
xor
enter
mov
andl
lock
test
cli
jnp
or
and
push
inc
jb
lock
lahf
mov
mov
jl
cmpsl
jge
mov
scas
sub
addl
or
sti
push
es
dec
cwtl
or
std
cs
add
sub
inc
or
push
aaa
sbb
lods
imul
push
scas
add
out
sbb
sub
lods
adc
push
mov
daa
fstpl
in
mov
add
cltd
fs
scas
fdiv
lret
jmp
jns
jmp
push
cmpsb
mov
test
pop
scas
mov
push
test
add
cmpsl
push
stc
adc
mov
sub
adc
inc
mul
ja
adc
mov
movsb
fs
js
dec
sbb
inc
xor
pop
inc
jno
dec
fwait
loop
sbb
cmp
jnp
popa
ret
cmc
jae,pn
adc
call
je
mov
jecxz
cli
or
adc
mov
repz
lcall
aas
popf
inc
cmc
sub
daa
cs
mov
mov
push
shll
gs
xchg
test
push
sbb
lret
push
or
ret
sti
pop
je
pop
pop
mov
inc
in
cld
sbb
enter
in
mov
push
mov
fs
inc
sub
cli
mov
mov
in
rclb
xchg
or
mov
lcall
cmc
mov
inc
sbb
std
into
jg
mov
outsb
cmp
or
inc
mov
mov
pop
mov
hlt
jnp
adc
jo
shl
sub
sti
mov
cmp
sub
cmp
cltd
repz
ja
adc
fcmovnu
fmull
lds
inc
cmp
push
xor
mov
dec
in
mov
ljmp
or
rol
std
inc
insb
fstl
jecxz
outsb
or
je
cmc
jge
pusha
dec
test
xchg
xchg
xchg
mov
ret
sahf
or
adc
mov
pop
hlt
dec
adc
mov
inc
bound
pop
in
mov
sbb
shrb
cmp
insb
push
inc
repz
mov
mov
popf
pop
xlat
scas
pop
xchg
loop
adc
mov
xchg
xchg
movl
mov
mov
cs
je
jno
pop
push
mov
cmp
inc
nop
and
mov
xor
pushf
jle
mov
lahf
js
xchg
fwait
aaa
mov
add
xchg
fs
call
mov
shl
jge
mov
sub
or
pop
ficoms
push
lds
mov
mov
dec
test
inc
arpl
fdivrs
pusha
sysenter
jb
add
stos
hlt
xchg
fistps
adc
push
xchg
lods
xor
pmullw
cmpsb
or
lahf
dec
fucomi
and
repz
add
lods
negb
push
jp
hlt
add
and
mov
add
pop
clc
stc
adc
jle
mov
pusha
arpl
stos
dec
or
fdivrl
mov
pop
push
xorb
jo
inc
lahf
fdivrs
out
insl
lods
btr
dec
cmc
cltd
dec
loopne
leave
jle
ret
push
imul
fwait
dec
iret
pushf
inc
ror
sbb
xor
imul
pop
arpl
popa
pusha
in
jbe
cmpb
sti
sub
out
in
cmp
xor
sbb
pop
jne
mov
inc
hlt
sub
fwait
sbb
adc
bound
jns
movsb
xor
loop
mov
ja
jmp
call
clc
adc
fs
mov
xchg
pop
int
std
in
and
jno
add
xchg
or
out
sbb
xchg
lret
loopne
push
pop
dec
cmp
or
nop
pop
cltd
dec
loopne
jns
xor
or
ret
add
test
clc
adc
mov
gs
gs
mov
xor
sub
and
lret
dec
mov
add
dec
cmp
movsb
arpl
jns
push
cs
fs
sahf
iret
stos
sbb
xlat
push
lods
sbb
mov
or
shrb
sahf
insl
jns
adc
mov
xlat
mov
int
add
je
testb
lds
and
dec
notl
jbe
ja
jbe
xlat
loop
repnz
inc
loopne
pop
dec
out
es
sahf
xlat
jle
movsb
jp
jns
pushf
lcall
adc
or
mov
jo
push
sahf
call
adc
ds
int
pop
jns
jne
push
pop
pop
ret
pop
push
xor
dec
fcompl
rcll
inc
inc
xor
jmp
cs
sub
sbb
adc
dec
div
cltd
mov
sbbb
repz
insb
jmp
mov
test
ret
inc
inc
shl
mov
jns
xchg
enter
pop
sub
popl
fnstsw
dec
fbld
fisubrs
pop
outsl
cmpsb
mov
inc
callw
cmp
mov
scas
adc
mov
sar
js
jnp
enter
int
std
push
and
mov
stos
das
adc
pop
rcr
push
mov
and
lret
sarb
jb
mov
mov
dec
pop
mov
cmp
inc
pop
mov
sub
lods
rol
sbbl
subl
mull
sbb
pop
enter
enter
shrl
or
aam
cmc
sub
xor
pop
inc
mov
jecxz
inc
and
and
push
addr16
mov
incb
dec
addr16
popf
mov
rorl
les
mov
jno
and
add
test
mov
push
test
mov
out
dec
mov
je
sbb
nop
aad
cltd
inc
xchg
pop
sub
and
jne
popf
push
shl
mov
jbe
sbb
in
cli
mov
aaa
push
shrb
fdivl
inc
and
imul
and
and
in
fs
test
pushf
loop
jb
dec
push
std
jl
addb
lcall
cld
in
inc
call
mov
mov
loope
or
lahf
je
mov
lds
adc
or
sbb
ficoms
dec
out
adc
mov
xor
add
xchg
mov
clc
lea
push
push
mov
jg
jae
repnz
pop
stc
and
outsl
test
jp
scas
mov
and
popf
xor
sahf
jo
test
dec
adc
mov
stos
fiadds
ds
sti
mov
cwtl
mov
ja
movsl
lods
inc
int3
loop
mov
outsb
xchg
or
add
mov
and
daa
in
bound
sbb
fidivrs
aad
cmpl
iret
out
xor
jne
fisubrs
fsubl
add
mov
adc
mov
sbb
mov
add
loope
jno
cld
ss
dec
lock
pop
mov
inc
arpl
dec
pop
jno
fbstp
inc
mov
add
icebp
xchg
or
sub
inc
cmpsl
inc
lods
mov
ret
push
sub
pop
sbb
or
pop
sbb
inc
int
mov
adc
mov
sbb
sbb
inc
outsb
cltd
aas
mov
cwtl
inc
mov
and
mov
pop
cltd
xlat
lods
pop
into
insl
jnp
push
jge
leave
popa
pop
pop
sub
dec
and
or
out
stc
xchg
jge
into
add
push
xor
ds
push
sbb
mov
or
push
cli
data16
xchg
jl
js
std
insl
push
sbb
in
loop
mov
cwtl
jnp
pushf
xchg
mov
push
push
sbb
xor
test
xchg
pop
cmp
cmpsb
pop
leave
cli
int3
aaa
shr
ss
fwait
in
aad
mov
and
das
add
je
dec
mov
push
adc
pop
cmpsl
xor
jnp
pop
add
mov
cmp
fwait
adc
push
es
or
mov
sub
mov
movsb
sub
mov
pushf
lds
xlat
rclb
pop
lods
out
ljmp
push
mov
lcall
rol
mov
cmpsb
jle
xlat
mov
add
mov
mov
icebp
out
das
xor
add
stos
jg
es
es
push
push
insb
xchg
mov
push
xchg
and
and
flds
push
sti
loop
repnz
sar
adc
lret
pop
cmc
dec
rolb
add
lcall
rolb
aaa
mov
in
nop
nop
test
nop
stc
or
ret
outsl
dec
sbb
xchg
rolb
out
jmp
inc
pop
enter
mov
sti
sbb
sbbb
push
in
pop
and
xchg
jp
hlt
ljmp
insb
push
fwait
jns
in
dec
enter
adc
push
subl
leave
push
or
xchg
popa
sbb
sbb
je
popa
push
outsb
popa
data16
jecxz
pop
lcall
inc
and
pop
in
jo
pop
jp
xchg
into
mov
lcall
push
fstpt
lock
pop
adc
ret
out
xor
or
push
ljmp
inc
jnp
sarl
cwtl
subb
adc
and
test
mov
mov
int3
add
imul
or
test
dec
jae
call
ret
push
and
cmp
out
cmp
aas
inc
push
pop
sbb
lcall
sbb
xor
lods
inc
jns
dec
repz
dec
push
dec
fsubr
sbb
mov
hlt
xlat
stc
inc
xor
cwtl
or
es
push
lret
mov
mov
punpckhwd
subb
and
pushf
js
das
cli
fsubl
pop
mov
loopne
insl
stos
mov
and
addr16
mov
mov
aad
mov
jl
or
cmp
or
cmp
jge
adc
dec
mov
adc
xor
xchg
and
aas
inc
mov
int
xor
orl
sti
push
cmpsb
xchg
clc
ja
pop
xor
xchg
jbe
inc
mov
or
int3
cmpsb
jmp
lock
jns
mov
es
mov
xchg
add
fnstsw
sahf
fisubs
ret
push
jae
mov
setge
rol
addr16
sahf
mov
sub
jae
in
addr16
jg
sub
ret
test
cld
rcrl
pusha
lcall
and
mov
lock
repz
flds
cmp
in
divb
scas
popf
push
icebp
jge
mov
in
cmp
nop
cmp
pcmpgtb
mov
pop
ss
cmp
ljmp
sti
pop
scas
pop
mov
sarb
pop
xlat
and
cmpsb
out
sub
std
or
mov
and
out
and
popf
inc
aaa
stos
sbb
xor
nop
insl
movb
pop
add
ja
js
insl
lods
mov
xchg
movsl
xchg
loop
jp
addl
pop
into
in
cmp
jns
xor
sbb
bound
lock
stos
lods
or
mov
adc
lods
adc
push
cmp
outsl
sub
mov
mov
and
shr
dec
mov
xchg
gs
adc
inc
jne
jne
imul
jbe
add
ret
or
adc
push
xchg
pop
push
mov
fcmovb
push
stc
push
jo
fs
ficoms
mov
cmp
push
push
sar
pop
imul
repz
cmpsb
inc
fsubp
xchg
mov
pop
out
dec
mov
inc
lods
inc
adc
ljmp
xchg
jg
mov
sbb
icebp
push
mov
jecxz
mov
clc
icebp
inc
pop
aas
xor
jp
les
jo
jae
adc
rcrb
xlat
cmp
add
test
mov
cmpsb
push
or
outsb
ret
fstps
push
loope
mov
insb
mov
dec
inc
cltd
xchg
mov
rcll
push
inc
sub
jge
mov
push
cmc
jo
add
pushf
stos
xchg
nop
int
sub
xor
lock
out
xchg
fs
loope
xchg
adc
stc
std
lods
std
or
js
push
addb
dec
lea
cmp
lret
ret
push
test
mov
push
cmp
shll
pop
out
ret
or
mov
insl
mov
out
pop
mov
addb
stos
sti
test
popf
push
xchg
lea
repnz
popa
aam
add
lret
push
push
mov
xchg
or
jno
and
cld
test
sbb
inc
out
addr16
das
push
ds
out
cmp
dec
sub
popf
sbb
lock
pusha
xchg
in
cli
shll
ret
mov
xchg
or
es
push
push
rcrl
out
jo
imul
adc
jmp
addl
sbb
loop
and
imul
inc
arpl
push
pop
pop
test
jb
shll
movsl
nop
mov
xchg
mov
mov
jge
mov
int
jecxz
add
or
rcll
sbb
mov
ret
clc
insb
push
dec
scas
rorl
sbb
add
pop
and
pop
add
lock
movsl
in
cmp
mov
enter
not
cltd
decl
jb
cmp
pop
movsb
out
push
int3
jb
pop
add
adc
push
xorb
xchg
push
outsb
pop
test
test
add
test
aaa
xor
sub
data16
fwait
push
mov
mov
cmpsb
jg
fcmovnb
imul
sahf
cmc
pop
repnz
jl
pop
dec
or
mov
cmpsl
out
push
mov
sbb
mov
lret
push
jnp
mov
xchg
cltd
loop
icebp
adc
adc
scas
sub
sub
push
aad
stc
fld
test
inc
pop
cs
std
push
inc
adc
les
cmp
xchg
jmp
sbbb
or
or
and
cmp
or
sahf
or
pop
ja
mov
fdivrs
pop
add
outsl
xor
in
mov
sti
shrb
mov
adc
pop
mov
add
test
or
dec
aam
lods
call
icebp
jbe
cltd
aaa
dec
sub
push
dec
sbb
xchg
das
rclb
call
pop
inc
in
fdecstp
dec
ret
pusha
fsubrs
lods
jl
pop
inc
filds
sbb
popa
mov
or
xchg
int3
cmp
xchg
mov
xchg
sbb
push
dec
mov
clc
mov
outsl
sub
imul
pushf
dec
push
out
loopne
cmp
fs
xchg
sbbb
daa
mov
nop
fsts
jp
cmp
mov
ljmp
aad
and
fsts
adc
xor
cmpsl
or
imul
ret
aam
cld
pop
mov
sub
fimull
leave
add
repz
es
lock
shlb
int3
mov
movsb
push
fistps
push
push
test
repnz
fwait
jns
ret
sahf
push
sub
cli
add
jbe
outsl
pop
pusha
int
xchg
insl
xchg
pop
or
jge
mov
insb
test
ds
jg
movsl
popf
xchg
aad
and
out
ss
mov
out
in
jbe
mov
loopne
xchg
in
jno
ror
imul
cmp
aaa
sbb
cmpsb
repz
sub
loopne
dec
mov
cmpsb
adc
mov
imul
adc
out
mov
push
dec
jb
jl
in
cld
xchg
dec
jbe
test
mov
mov
fsubrs
xchg
shlb
stc
jle
adc
movsl
dec
jne
lret
scas
fidivrs
and
scas
sbb
mov
push
lret
sbb
sti
mov
pop
test
fstps
jg
jg
cld
pop
adc
and
mov
jg
push
ss
jg
orb
inc
jb
call
clc
xchg
cmp
sub
ficompl
int
push
daa
mov
inc
mov
push
pusha
gs
es
or
mov
adc
jb
lret
add
jl
cld
test
cs
shll
in
popa
jbe
aad
sub
and
cmp
push
jb
pop
insl
aas
jmp
add
push
cmp
sti
andb
in
dec
test
fwait
jno
mov
cmpsl
mov
and
aaa
mov
sub
mov
sub
xor
mov
loope
mov
add
hlt
sbb
arpl
loope
add
adc
inc
xchg
faddl
sbb
cmp
cltd
lea
enter
adc
stos
mov
std
clc
pusha
stos
mov
mov
mov
fdivs
outsl
mov
add
call
ret
inc
inc
popa
std
adc
mov
out
nop
sub
add
cmp
in
sub
jb
in
and
pop
inc
sub
cld
fidivrs
fwait
sbb
iret
sarl
adc
testb
mov
inc
mov
dec
inc
jbe
decl
sub
enter
test
xchg
inc
dec
int
mov
test
shl
mov
sbb
notb
aaa
sbb
mov
xor
stos
push
adcb
pushf
add
jecxz
mov
or
scas
xchg
and
dec
dec
adc
mov
or
insb
insb
cwtl
pop
lret
sbb
addl
sbb
sub
ror
xor
ja
loop
in
jecxz,pn
push
push
add
rcl
push
test
inc
adc
push
cmpsl
lods
out
ffree
or
in
mov
pop
mov
scas
inc
ss
nop
outsl
dec
repnz
frstor
xor
sarb
adc
jne
shl
mov
add
jo
lock
call
add
mov
loope
cwtl
enter
xor
cmp
push
mov
popf
xchg
push
add
jns
jmp
fnstcw
push
jns
imull
pop
xchg
mov
test
in
xor
pop
add
xor
jg
sbb
dec
outsl
es
sub
adc
mov
fidivrs
xchg
jbe
push
xor
shlb
out
add
pop
push
cmp
fnsave
sbb
scas
adc
xchg
push
mov
int
sbb
inc
sbb
cmp
mov
xchg
pop
in
sti
ljmp
cmp
jb
lcall
jmp
aas
push
inc
test
or
pop
push
lret
gs
pushf
ss
mov
pop
sbb
je
cmp
cmp
ljmp
faddp
lret
sub
pop
xorl
or
mov
aad
mov
aaa
popf
xchg
jne
mov
cmp
sub
inc
lock
pop
sub
mov
addr16
jl
pop
jecxz
push
stos
scas
mov
test
daa
loope
or
test
ret
rcrb
int3
mov
xor
ret
sahf
fcoms
xchg
in
and
pop
adc
in
je
mov
add
das
pop
inc
in
cli
cmc
repz
stos
sti
ljmp
xor
adc
fmul
ret
gs
pusha
fcoms
sub
ds
pop
mov
aaa
mov
push
test
test
dec
sbb
arpl
in
sarw
jb
dec
addb
loopne
xor
push
mov
imul
mov
shll
mov
adc
cmp
cmp
xchg
xchg
in
xor
cmp
pop
in
icebp
mov
sub
je
or
hlt
mov
cmpsb
ds
lods
jmp
cmp
aam
push
fs
and
je
aam
push
cmp
ds
pop
push
mov
mov
ds
fdivr
cmp
pop
mov
mov
xor
jmp
inc
shrl
repz
jae
data16
dec
xchg
mov
nop
repnz
sbb
cltd
push
jg
cmp
orb
or
in
aam
sub
sahf
dec
aad
pusha
mov
in
call
jnp
enter
js
push
push
jo
lods
call
mov
adc
rorl
sub
push
jp
fcmovnb
jne
sbb
out
jae
sbb
sub
jecxz
add
dec
shrb
or
mov
push
js
inc
hlt
es
sbb
push
pushf
nop
xlat
xchg
mov
push
dec
push
push
addl
mov
les
xchg
dec
push
mov
mov
pop
jge
xor
mov
jo
push
das
mov
jecxz
cmc
in
btr
dec
imul
or
push
jp
mov
jb
dec
test
movsb
in
sbb
fbld
mov
sub
dec
sti
mov
stc
movb
xlat
mul
and
aad
pop
shlb
push
or
repz
mov
rcrb
xchg
dec
sbb
rorb
sahf
scas
loopne
and
call
sbbl
xchg
lahf
push
and
sarl
jae
stos
push
and
jecxz
adc
and
pop
ja
insb
jmp
leave
mov
mov
sbb
push
inc
push
xlat
in
cltd
insb
ljmp
aad
imul
scas
movsl
mov
loopne
xchg
frstor
push
xor
push
inc
xchg
loopne
in
cld
mov
out
dec
in
enter
mov
fst
cmp
jns
fsubrl
aaa
daa
lods
xor
inc
jo
inc
stos
inc
mov
lret
mov
xchg
add
jmp
sbbl
cmpl
inc
push
bound
popa
inc
or
test
in
loope
int3
test
push
sarb
mov
icebp
aad
sti
ret
in
insb
sahf
jle
test
pop
and
stc
dec
and
push
je
imul
lcall
adc
int3
xchg
fimuls
or
jb
or
and
cmp
std
push
lock
hlt
xor
xor
lret
sbb
adc
adc
xor
cmp
les
outsb
arpl
pop
ffreep
push
inc
and
test
inc
push
rorb
frstor
inc
hlt
mov
outsb
aam
cli
movb
or
jns
out
dec
cwtl
jle
jb
push
orl
pop
push
and
cmpsl
sub
je
enter
push
clc
sbb
ds
sti
in
mov
insl
imul
fildll
mov
adc
mov
xchg
jno
cmpl
mov
fstpt
inc
pop
sub
jle
xchg
jb
leave
pop
jbe
iret
les
cmpsl
aaa
out
xchg
out
inc
inc
add
aaa
mov
je
add
cmpsb
jno
das
jb
sbb
movsl
xor
jne
and
pop
ljmp
loop
and
out
push
arpl
clc
filds
dec
leave
or
dec
mov
xchg
xchg
pop
xor
xchg
mov
and
repz
xchg
pop
mov
addps
add
loope
sti
xor
xchg
push
cmpb
ret
test
xchg
stos
push
adcl
mov
xorl
adc
xchg
jae
mov
mov
cmp
or
mov
arpl
fsubrs
add
jge
movsb
int3
outsb
sbb
test
xor
mov
rcll
mov
rclb
inc
sahf
out
xchg
divb
adc
push
jg
push
rol
xchg
and
xor
and
or
fbstp
call
and
out
fwait
adc
sbb
push
test
xchg
popa
sub
dec
out
add
loop
adc
test
adc
mov
pushf
icebp
andb
repz
test
push
outsb
push
mov
xchg
mov
inc
ffree
ljmp
aas
pop
xor
pause
dec
mov
popa
mov
mov
sub
jecxz
dec
loope
pop
sbb
loop
add
nop
push
inc
push
imul
and
outsb
sub
sub
mul
mov
xor
cmpsb
aam
mov
pop
inc
paddusw
pop
repnz
jle
dec
insl
jp
mov
dec
adc
cmp
lods
sbb
mov
pusha
cld
mov
insb
dec
lock
mov
outsl
dec
push
pop
dec
das
pop
bound
cmp
cmp
jmp
pop
cmp
cmp
jbe
xchg
sbb
in
rol
jo
lahf
xchg
cmp
aad
leave
xlat
imul
enter
xlat
cmp
lcall
fisttpl
jae
je
cmpb
cltd
fldl
das
push
or
shlb
xor
mov
filds
repz
movsb
sti
mov
fsubrs
stc
jae
inc
mov
faddl
test
mov
movsb
out
das
je
adc
xlat
aaa
bound
out
and
js
xor
mov
sbb
inc
pop
out
and
xchg
push
add
icebp
shrb
cmp
das
cld
push
ret
test
std
xor
pop
push
icebp
dec
jp
aas
es
xor
sbb
jl
cmpsl
cs
or
sub
test
mov
cld
fstpt
das
push
pop
jo
loope
stos
sub
ss
mov
hlt
cmp
fstpl
lock
scas
arpl
add
sub
cmp
xchg
mov
les
outsb
addr16
mov
aam
and
fiaddl
cld
mov
xchg
adc
outsb
pop
pop
push
popf
test
imul
xor
push
mov
jg
aaa
push
and
stos
imul
cld
sbb
cmp
sub
lods
add
lds
adcb
mov
sbb
jae
sahf
imul
jmp
mov
scas
mov
aaa
inc
jp
rorb
lods
adcb
loopne
mov
dec
cmp
fld
pop
adc
xor
rcl
repnz
inc
inc
bound
mov
imul
daa
mov
outsl
out
add
mov
pop
and
xor
jg
test
sub
inc
in
mov
inc
push
orl
adc
pop
pop
jg
xlat
out
mov
loopne
icebp
push
shll
gs
xchg
cwtl
cld
andb
shll
push
repz
into
dec
test
test
or
pop
xor
rcrb
mov
fnclex
mov
pop
add
shl
cld
mov
adc
mov
inc
dec
inc
or
mov
inc
and
and
cmp
stos
movsb
add
rorl
cld
push
adc
int3
push
or
push
xlat
inc
in
mov
test
pop
add
dec
loopne
push
inc
addr16
mov
sbb
aad
mov
mov
jae
lds
inc
jmp
mov
pusha
lock
pop
cwtl
xlat
ror
jecxz
fcmove
mov
inc
jno
fildl
fwait
icebp
and
leave
pop
cmpl
fmuls
adc
leave
mov
jge
repz
xchg
aam
fcoms
mov
inc
cmc
or
js
adc
sub
pushf
jbe
inc
into
inc
loope
pop
mov
sbb
add
inc
cmpsb
das
adc
xchg
cmp
outsl
aam
and
or
mov
jl
loopne
call
jge
mov
push
pushf
or
push
mov
mov
inc
mov
mov
inc
push
pop
divb
mulb
and
fisubl
dec
scas
sub
pushf
sbb
jp
pop
mov
cmp
sbb
cmp
add
inc
mov
push
shlb
sti
cmc
or
xlat
fwait
xchg
pop
insb
aaa
or
sahf
or
std
aas
dec
cmp
dec
andl
test
lods
push
and
add
push
out
or
icebp
pop
push
ficomps
lahf
sbb
mov
int
call
mov
jne
rorb
jp
sahf
imul
sarb
jge
push
xor
dec
mov
sub
shll
pop
fldcw
es
push
xchg
or
test
call
jmp
cmp
movsl
shrl
push
add
cmpsl
cmp
ret
fstps
pop
aam
loop
push
sub
or
daa
and
mov
sub
out
push
push
xor
and
mov
pop
mov
gs
notb
nop
ss
xchg
es
fisttps
dec
test
aaa
les
aas
mov
std
mov
rcrl
test
lcall
lahf
pop
cmp
pop
cmpsl
clc
mov
mov
push
jns
cwtl
ret
cmc
leave
pop
imulb
loop
daa
jl
lahf
imul
mov
lods
test
add
lock
in
push
imul
mov
cwtl
jae
xor
test
in
mov
ret
or
fwait
xor
inc
pop
scas
fsubr
mov
pop
xchg
jae
adc
xor
cmpsl
call
or
mov
das
cmp
lcall
xor
out
jae
data16
subl
jb
mov
daa
aas
xor
cmp
push
lahf
inc
jnp
pop
mov
ficoml
int3
adc
sbb
adc
pop
popf
loope,pn
sbb
xor
inc
mov
push
arpl
push
cs
add
sarl
jge
xchg
lds
stos
xchg
ret
add
clc
mov
and
pushf
insb
andl
pop
popf
sub
and
push
xchg
fisubs
shlb
sub
mov
clc
loope
cmpsl
and
xor
inc
imul
das
daa
movsl
xor
cmp
icebp
or
std
xchg
push
sti
add
cltd
mov
lret
imul
inc
ds
out
sar
lock
fstps
fldenv
mov
push
and
push
sbb
pop
fxch
ret
sub
inc
inc
xchg
mov
ja
jae
lds
mov
gs
pop
push
es
dec
incb
lea
rorb
in
dec
xchg
sub
or
xor
arpl
pop
cld
jg
mov
pop
aas
inc
sbb
push
sbb
out
add
icebp
ljmpw
sti
enter
sbb
dec
or
jge
scas
shlb
fnsave
scas
lds
cmp
jae
jecxz
push
sbb
pop
mov
sahf
mov
mov
cmpsb
loope
int3
inc
xor
sbb
negb
call
lret
inc
mov
xchg
shr
lret
add
cltd
fwait
int
add
orl
mov
ss
cmp
push
cmp
sbb
sbb
jecxz
xchg
mov
fildl
push
roll
push
pop
rorl
jbe
pop
jno
nop
jbe
fiadds
shlb
loopne
rcl
xchg
xchg
notl
xlat
loopne
and
lcall
push
mov
ficomps
outsb
test
out
sahf
mov
ds
adc
push
adc
mov
xchg
cmp
cmp
aam
das
pop
cli
stc
push
test
mov
lock
jmp
xchg
push
pop
cmp
scas
xchg
ret
aas
and
and
adc
sub
xchg
cmc
sub
pop
ret
je
jb
in
jne
xchg
push
ss
mov
sub
test
jo
mov
or
xlat
cmpsl
xchg
pop
das
fisubrl
clc
cs
ljmp
inc
dec
repnz
add
adc
outsb
ficompl
stos
dec
dec
xor
or
insl
icebp
fs
pusha
lahf
shr
enter
jmp
cmp
mov
adc
xchg
bound
sub
adc
pop
mov
cmp
in
fisubrs
jo
xor
mov
pop
jns
mov
fwait
jnp
add
pop
repnz
jns
cmp
out
add
int
xor
sub
adc
cld
jge
cmc
mov
lock
repnz
fsubr
pop
repnz
cmp
mov
mov
inc
pop
xchg
add
xor
cmp
jg
pop
shr
or
jecxz
sub
jle
sbb
sub
push
ficomps
aaa
sub
jecxz
or
jecxz
fs
push
and
push
test
jecxz
dec
and
adc
loope
push
out
xchg
inc
jecxz
in
add
xchg
mov
mov
bnd
xor
outsb
not
jmp
fnstsw
dec
ja
bswap
sti
add
and
hlt
inc
mov
jno
cmpsb
add
xor
lret
mov
fildll
leave
inc
pop
out
addr16
dec
mov
stos
outsl
xchg
or
xor
mov
insl
out
lock
out
ja
push
fsubrl
insl
and
stc
push
mov
in
push
lea
outsb
fadds
mov
xlat
pusha
ficoml
adc
cmp
bound
lea
aad
xchg
sub
xchg
sahf
mov
jns
xlat
es
imul
dec
or
bound
or
add
fcmovne
cmpb
setge
pop
mov
jno
lock
inc
mov
js
push
add
or
inc
icebp
int3
pop
lcall
xchg
lcall
sbb
add
cwtl
mov
add
mov
adc
in
xchg
mov
mov
lret
dec
fcompl
jle
push
cmp
out
xchg
xchg
sti
mov
enter
nop
cmp
xchg
jecxz
je
scas
and
or
popf
std
mov
sbb
sbb
inc
cmp
out
loope
cmp
repz
adc
lahf
or
lcall
jbe
add
popa
shl
pop
sbb
mov
or
mov
pushf
xlat
jle
jae
stos
pop
inc
ljmp
jmp
shl
int
cmp
or
or
lcall
xchg
inc
aaa
lahf
push
pop
mov
dec
bound
das
clc
movsl
shl
icebp
adc
out
clc
shr
inc
mov
int
inc
sub
or
ror
popf
sbb
push
rcl
jno
mov
sahf
xor
mov
ja
push
xchg
cli
test
mov
outsb
and
in
xchg
pop
xchg
bound
imul
inc
test
fs
lock
xor
mov
mov
sub
or
cltd
pop
fistl
lods
fstp
mov
push
popa
insl
cwtl
mov
jbe
sub
cwtl
xchg
shll
cmp
or
inc
mov
mov
mov
in
popa
ret
aaa
popf
pop
pushf
shl
or
xor
xor
mov
mov
scas
add
leave
push
sub
cli
lea
jl
inc
jno
or
lods
mov
jmp
ljmp
adc
xchg
in
int
test
fidivrs
jns
adc
push
mov
sbb
and
mov
scas
outsb
jmp
dec
push
sbb
mov
xor
sahf
mov
jo
test
inc
orl
jae
movsb
popa
es
sarb
mov
cmp
cmp
pusha
mov
mov
aam
and
cmp
xchg
ficompl
lret
xor
xchg
mov
pop
jnp
pushf
cld
xor
icebp
push
xchg
mov
jne
xchg
inc
push
add
push
dec
test
mov
jle
cs
out
fldcw
test
or
jae
ret
cld
add
dec
and
aam
dec
popa
xor
repz
and
imulb
ljmp
push
es
icebp
or
fnsaves
cmpsb
or
std
mov
test
call
jmp
push
je
fildl
xchg
fnsave
data16
and
xor
dec
lahf
enter
mov
or
call
cli
jae
call
xchg
aad
or
repnz
mov
pop
xchg
sbb
xor
fildll
inc
enter
adcb
jae
mov
adc
add
sbb
jmp
cmp
mov
add
test
sub
jmp
cltd
ret
sti
fsubrs
arpl
jl
je
pop
push
ret
aas
ds
out
loopne
sub
fdivrp
push
rclb
mov
sti
dec
lret
xchg
push
pushf
and
shll
test
xor
xlat
mov
mov
popf
call
cli
sahf
fildll
test
outsl
lock
or
outsb
aad
cmpb
xchg
adc
push
and
gs
dec
xchg
setnp
in
push
mov
icebp
pop
pushl
push
test
dec
xlat
test
mov
imul
jp
aam
adc
scas
mov
push
sahf
cs
mov
scas
cs
out
imulb
or
xchg
inc
sbb
jl
jbe
sahf
mov
fs
xor
inc
xor
movsb
or
imul
cmp
repnz
cmpsl
mov
jae
add
mov
cmp
arpl
mov
inc
mov
xor
push
pop
sbb
sbb
dec
outsl
mov
adc
or
xchg
jp
insl
fstps
cmp
sbb
jecxz
ret
shrl
sbb
repnz
lods
push
ror
xor
insb
push
pop
sbb
outsb
loopne
inc
movsb
testb
insb
jo
sbb
mov
repnz
push
sti
cmp
outsw
push
test
int
jb
mov
add
and
pop
clc
pop
jbe
in
jns
negb
iret
icebp
scas
pop
push
mov
xchg
imul
inc
fwait
int3
aas
lods
shr
mov
pop
jb
shlb
jo
popa
into
xor
int3
inc
jmp
aad
cltd
in
lcall
emms
xchg
clc
jg
test
mov
xor
lret
lock
test
sbb
mov
push
mov
fsts
in
test
loopne
mov
popf
xor
out
sub
adc
jmp
sbb
popf
mov
mov
in
mov
dec
cltd
imul
or
and
xchg
filds
out
xor
aam
pop
popf
mov
lcall
sub
neg
cmp
shl
adc
fs
lods
and
test
sbb
pop
xchg
cwtl
mov
inc
rcrl
mov
hlt
dec
enter
inc
std
dec
out
sbb
xchg
daa
xchg
cmp
push
ds
push
xchg
jno
pop
out
dec
bound
xor
push
jl
loopne
jmp
push
add
mov
pop
pop
daa
xchg
out
enter
xor
pop
pop
sbb
jne
dec
dec
repnz
in
inc
fidivl
popf
je
xor
ror
std
into
bnd
mov
lret
int3
mov
dec
scas
jl
pop
cmpsl
jo
push
adc
cmpsl
sub
and
sbb
mov
xor
insl
ds
push
fisubrs
sahf
ja
fcoml
flds
mov
lahf
arpl
xor
insb
popa
icebp
pop
jns
bound
ret
jg
outsb
fisubrl
add
cmp
mov
dec
inc
les
sbb
aaa
xchg
cmpsl
mov
xchg
cmpsb
adcb
jecxz
popa
add
sti
sub
or
rclb
hlt
addr16
imul
mov
mov
jo
cmpsb
addr16
repz
dec
inc
popf
insl
mov
xor
inc
ds
aaa
mov
push
adc
cmc
ss
inc
or
mov
xor
ret
mov
sub
cmp
pop
leave
push
mov
mov
int
les
sbb
sbb
movsl
jns
stc
inc
aas
stos
cld
daa
dec
mov
fcomps
sbb
std
lcall
lods
mov
mov
rclb
sbb
es
pop
loopne
jne
test
pop
mov
test
xor
movsb
cmp
movsb
mov
test
sti
pop
imul
mov
outsb
jp
mov
lds
xor
xchg
js
outsl
xchg
shrb
jno
pop
and
xor
push
jmp
pop
cltd
or
addr16
inc
pop
xchg
aaa
pushf
cmpsb
jae
mov
dec
dec
mov
cli
and
mov
adc
je
or
mov
aas
mov
dec
mov
xlat
sahf
pop
rclb
popf
lea
mov
out
push
xor
divb
jg
pop
xor
mov
sbb
dec
clc
mov
cmc
in
outsb
mov
jl
mov
out
jg
aam
mov
stos
mov
leave
inc
sbb
or
and
fmull
aaa
jbe
push
stc
push
fcmovnu
sub
js
pop
mov
icebp
xchg
mov
cmc
sbb
xchg
test
push
mov
push
mov
loopne
jp
in
orb
popa
push
add
cmp
inc
insl
xchg
push
sub
push
call
jnp
jge
dec
xor
mov
iret
cs
or
and
dec
sub
enter
jl
daa
xor
mov
jbe
mov
jp
pop
sbb
adc
js
mov
and
mov
shlb
pop
into
sub
addr16
mov
cmp
adc
lods
int
add
pop
mov
push
mov
xor
insl
les
sub
adc
inc
push
dec
dec
aas
pop
pop
hlt
divb
xchg
mov
and
aad
imul
and
jg
jle
sbb
xor
imul
mov
test
and
sbb
les
lret
sbb
jne
std
cmp
imul
mov
outsb
test
stos
sbb
mov
mov
dec
rclb
dec
pop
mov
pop
sub
mov
mov
add
or
xchg
out
shll
inc
xor
cmpsb
popa
test
in
divb
pop
out
test
mov
mov
sbb
stos
fidivs
dec
xchg
add
xor
cmpsl
sti
and
lahf
std
popf
and
sbb
bound
fs
dec
add
orl
jb
fldcw
stc
xchg
pop
adc
xlat
dec
xor
push
mov
stos
ss
sbb
aaa
arpl
loope
mov
bound
xchg
cmp
mov
rclb
lret
in
adc
rclb
cs
sbb
xor
xor
mov
sahf
push
mov
xor
push
or
lahf
hlt
lcall
xlat
in
jl
cmc
push
in
je
sbb
repz
std
sahf
adc
adc
cmp
xlat
ret
aas
cli
xor
xchg
mov
and
cmp
lahf
jb
fsts
mov
jae
xlat
jg
jb
int3
jge
xlat
fidivrl
mul
mov
imul
pop
mov
scas
das
out
cpuid
sbb
pop
movsl
push
shlb
sub
inc
cmc
cs
add
fidivrl
inc
dec
fwait
decb
adc
stc
aaa
cs
mov
mov
adc
xchg
mov
dec
xlat
adc
push
insl
push
sbb
push
stos
cli
push
push
push
mov
push
aad
push
iret
pushf
push
pop
adc
rclb
push
je
cltd
mov
scas
xchg
or
sahf
into
and
in
orl
or
pop
fisttpll
cmp
pop
loop
adc
push
fbstp
jae
jp
sbb
addb
sbb
fsts
mov
lds
lods
push
addl
cmpsl
pop
xchg
mov
add
mov
cli
cwtl
addr16
in
adc
ss
mov
cwtl
stc
fidivrl
test
jp
cmp
cmp
cmp
xor
xor
add
dec
xor
std
mov
rorl
inc
addr16
jae
pushf
in
roll
push
push
arpl
push
xorl
mov
jnp
fildl
scas
push
xchg
xor
ffreep
int3
pop
and
lods
adc
xor
in
sub
mov
fldcw
jnp
in
push
xor
inc
cmp
rorb
mov
cmpsl
stos
clc
cmp
and
sbb
sbb
icebp
int3
lods
push
pop
scas
sub
cmpsb
mov
rcr
cld
inc
lret
in
jb
xor
pop
sub
clc
fstpl
pusha
dec
mov
negb
sbb
mov
loop
scas
xor
and
das
into
popf
pop
push
cwtl
loopne
hlt
arpl
fldenv
push
inc
pop
mov
test
scas
jmp
in
xor
add
or
cld
inc
mov
add
shr
movsb
rcrb
sahf
pop
push
sub
movaps
dec
fadds
lret
js
adc
push
xchg
loopne
repnz
adc
jmp
push
testl
jo
and
pop
enter
jnp
imul
mov
aas
dec
cmp
inc
cmp
xor
jmp
test
in
int3
jbe
mov
jmp
cmp
in
sub
scas
xchg
mov
stos
and
sbb
inc
testl
fdivr
std
sub
in
aad
pop
mov
mov
mov
ss
ja
pop
jge
pop
inc
sbb
and
cmp
imul
jmp
dec
mov
into
jmp
inc
and
negl
sub
inc
aad
pop
adc
std
mov
ds
lea
inc
outsb
dec
cmp
xor
popf
mov
xchg
aaa
les
adc
cmp
int3
push
pop
in
sbb
sub
inc
cmp
cmp
rclb
cmpsl
ljmp
push
ss
insb
adc
into
xchg
arpl
mov
ret
inc
add
aad
sub
xor
mov
in
cmp
icebp
sarb
and
inc
test
dec
push
push
sbb
cmp
ljmp
out
es
or
shll
lcall
sbb
xchg
or
in
mov
sub
inc
mull
jbe
adc
pop
mov
xchg
mov
jge
xchg
and
fidivrs
cmp
sarl
mov
xchg
sti
into
ds
data16
out
or
mov
mov
xchg
sbb
fisubrs
or
xchg
add
das
mov
mov
pop
mov
fidivrs
das
leave
loop
adc
mov
mov
inc
and
cmp
inc
idiv
sarb
push
push
push
or
fists
rclb
ljmp
lahf
sbb
mov
jge
add
push
lahf
insb
sarl
pop
fisttpl
mov
insl
jp
les
jp
hlt
test
ds
push
lcall
sbb
aaa
and
aas
mov
push
shlb
loop
test
mov
out
out
in
fldenv
xchg
bound
mov
xchg
pop
xchg
lds
push
cmp
lods
push
cli
mov
aas
xchg
rcl
and
jno
cmp
or
popa
push
cwtl
call
inc
mov
bound
scas
jge
std
lcall
negb
jno
mov
fsubrp
adc
mov
mov
pop
cmp
jo
and
sbb
add
gs
inc
aaa
push
stc
pushf
lcall
lcall
insl
inc
cwtl
adc
into
or
push
or
push
fistps
add
add
sbb
test
cmpsb
and
out
pop
cmp
movsb
sahf
sub
lea
vmread
ja
lcall
insl
inc
notb
mov
cmpsl
pop
shl
or
cmp
fisttps
jp
mov
push
push
push
dec
stos
int
and
add
sti
adc
mov
add
insl
lods
mov
imul
adc
push
mov
mov
ja
pop
int3
popa
popf
loop
push
jb
sub
movsb
jecxz
jmp
or
mov
adcb
mov
or
xor
jb
in
insb
xor
aaa
push
nop
xchg
dec
aas
stc
push
lods
mov
xchg
test
js
cmp
mov
pop
sbb
cmc
inc
ljmp
and
insl
divl
add
lea
shrl
adc
ss
xchg
js
scas
mov
mov
and
mov
sub
push
test
popa
lret
dec
loop
jns
loope
inc
and
sbb
out
add
sub
push
es
aaa
sub
xchg
push
sub
mov
out
enter
push
ds
sub
stc
sub
and
mov
lret
movsb
movsl
aas
loope
xor
jb
and
clc
adc
mov
and
imul
lods
adc
mov
pop
jb
mov
lret
lahf
lahf
inc
sub
nop
ret
cltd
mov
inc
out
repnz
push
add
mov
clc
fstps
xchg
xor
sub
or
ds
aad
rclb
and
jge
add
gs
push
into
sbb
scas
leave
mov
mov
cltd
shll
repnz
push
pop
pop
mov
std
notl
cmp
lea
scas
mov
iret
cmp
jns
sahf
xlat
adc
rcr
add
mov
shlb
jl
fstpt
xchg
daa
xchg
bound
and
dec
loopne
movsl
pop
inc
int3
adc
arpl
ror
cmpb
or
jo
xchg
jnp
stc
test
adc
jb
push
mov
push
nop
add
pop
adc
lock
mov
cs
inc
dec
mov
cli
lea
cli
xor
inc
in
mov
scas
or
xchg
icebp
dec
xchg
push
xchg
inc
pop
xor
test
and
leave
fdivl
repnz
sub
dec
cld
jg
pop
inc
and
mov
mov
ljmp
push
out
xor
mov
data16
loope
adc
xchg
leave
fsubr
cmpsl
and
sub
dec
icebp
dec
xor
cmp
jecxz
and
sub
jl
repz
fcomps
data16
mov
adcb
enter
in
and
mull
test
push
popf
sbb
ljmp
push
sub
cwtl
jp
cmp
jmp
shll
nop
je
mov
mov
movsb
pop
scas
pop
pushl
cli
pop
leave
adcl
sub
pop
pusha
pop
pop
cli
leave
aas
or
adc
popa
das
pop
ds
lea
inc
sbb
sub
mov
repnz
mov
mov
dec
lahf
in
pop
add
jb
mov
scas
adcb
xchg
test
pop
pop
mov
dec
lds
clc
gs
addl
sub
mov
add
sbb
scas
pop
add
or
stc
popa
rol
mov
addr16
pop
dec
leave
ret
push
hlt
jne
pop
ret
fdivrl
add
xchg
sbb
xchg
jns
xlat
incb
fiadds
sub
call
inc
jl
cmp
leave
arpl
add
das
mov
clc
mov
sbb
paddusw
and
xchg
mov
mov
dec
popf
cmp
adc
roll
add
sub
jno
mov
int
pop
xchg
movsb
or
inc
mov
xchg
aas
xchg
mov
fidivs
sub
push
mov
push
sub
sub
out
in
push
or
jmp
in
sbb
adc
xlat
out
xchg
and
dec
mov
out
cmp
jbe
mov
pop
ljmp
xor
push
cwtl
jo
aas
dec
into
dec
cmp
xorb
sbb
xchg
xchg
enter
mov
out
loope
or
repnz
inc
push
mov
cmp
mov
adc
sarl
sbb
mov
mov
jmp
adc
adc
jns
adc
repnz
xchg
mov
cmpb
jnp
pushf
outsb
imul
pop
test
arpl
divb
sbb
fwait
cmp
mov
jle
cmp
inc
ror
cmp
pop
movsl
mov
add
xchg
fdivrp
daa
movsb
cmpsl
pop
xor
pop
faddl
inc
stos
jle
mov
test
out
push
jl
push
jge
out
js
xchg
or
subb
pop
dec
xchg
mov
pop
int
push
cmp
and
int3
pop
xor
into
pop
in
adc
bound
pop
jg
fwait
cmpsl
les
sbb
adc
xchg
loopne
jecxz
or
mov
xchg
inc
jbe
out
addb
fidivrl
into
arpl
out
jnp
shll
and
je
test
cli
xor
lock
pop
dec
inc
cld
test
inc
fs
lahf
sub
xchg
test
cmc
or
mov
pop
and
sahf
dec
popf
inc
xchg
rcr
arpl
test
cmp
dec
loop
jbe
mov
jae
sub
mov
add
negl
clc
mov
inc
mov
adc
mov
lock
repnz
mov
mov
and
out
mov
add
sub
fisttps
or
push
xchg
adc
mov
idivb
xor
cmp
lahf
mov
idivl
mov
popa
mov
mov
add
cmp
rclb
popa
jno
adc
iret
or
push
popf
mov
mov
addr16
push
aam
lahf
mov
inc
ret
mov
jp
and
pop
int
xor
jecxz
xor
jg
ljmp
mov
mov
repz
sub
je
test
push
pop
pop
push
lock
fisttpl
imul
rcll
cmpsb
into
out
xor
dec
inc
adc
add
xchg
movsb
fcmovne
nop
jae
outsb
mov
sarl
push
mov
jb
ret
adc
dec
push
mov
dec
mov
pop
mov
jge
mov
add
mov
les
cld
dec
cld
mov
ss
insl
push
xor
xor
push
call
xor
xchg
sbb
mov
adc
xchg
xchg
push
and
xchg
pop
pop
add
dec
or
pop
add
adc
inc
mov
pop
rol
sahf
ret
shlb
cmpsl
fdivr
test
int
insb
shlb
push
or
sbb
inc
imul
in
ss
imul
mov
add
add
sbb
push
jge
adc
jno
or
cmp
sbb
mov
cli
xchg
pop
mov
xor
push
or
pusha
lock
dec
adc
movsb
pop
mov
xchg
int
leave
ret
xor
jne
lret
push
scas
enter
jmp
add
cmpsb
lods
mov
sarb
bound
daa
push
mov
lcall
xlat
outsb
mov
int
fcoml
adc
xor
jge
push
in
add
outsb
pop
sub
mov
xor
and
lods
xlat
push
sbb
mov
dec
call
test
sub
or
lock
lods
pusha
outsb
mov
pop
test
ficoml
cmc
je
push
xor
inc
aaa
sbbl
cmpsl
jle
adc
xchg
scas
push
cmp
jl
je
inc
or
daa
ret
cld
inc
dec
mov
jns
pop
cmp
xor
xchg
jecxz
fisttps
inc
popf
inc
ret
outsb
ficompl
ljmp
enter
out
dec
je
cmpsl
jp
fidivl
xorb
gs
dec
stos
decl
stos
insl
xor
fists
mov
push
inc
push
mov
jge
out
adc
sub
les
repz
push
mov
rorl
adc
in
pop
ss
or
pop
mov
stos
push
cwtl
add
adc
push
mov
stos
stos
cli
test
aam
sbb
out
sahf
pop
xorb
shll
or
fcmovb
addb
jns
jp
push
xor
adc
outsl
cli
lret
insb
int3
rolb
movsl
jnp
jns
in
lcall
dec
cmpb
xchg
les
mov
les
jl
mov
pop
xlat
orb
xchg
add
xor
xor
into
push
movsl
aad
fsubs
mov
mov
ds
cmp
push
xchg
mov
mov
jno
dec
loope
sbb
xor
mov
mov
push
lock
imul
sub
pop
inc
push
push
shrb
adc
inc
xor
pop
scas
fsubs
fimuls
in
mov
sbb
mov
jae
push
daa
mov
ret
jl
int
stos
xor
arpl
sub
imulb
cmp
shll
out
js
xchg
into
pop
sbb
mov
jns
cltd
or
push
cmpsb
mov
pop
sbb
pushf
sbb
sbb
dec
in
push
sbb
ss
mov
xor
mov
xor
test
mov
nop
mov
loopne
rolb
ss
add
sub
sbb
mov
pusha
cmp
xchg
jmp
gs
lds
push
cltd
aaa
fcoml
daa
pop
add
mov
add
loopne
sbb
dec
daa
lahf
add
das
push
ja
and
hlt
sahf
mov
xchg
fsubrs
neg
adc
adc
fwait
xchg
sub
inc
pop
sub
test
pop
lock
cmpsb
cld
fadds
aas
and
sbb
dec
hlt
xlat
mov
xor
mov
fwait
mov
inc
movsb
mov
mov
mov
mov
and
testb
jbe
xor
pop
xor
push
subl
out
js
gs
or
es
jge
jno
stos
ss
or
lcall
adcb
push
inc
je
jge
das
mov
iret
jmp
push
xchg
ss
pop
mov
stos
bound
mov
dec
mov
adc
sti
movsb
adc
sbb
or
or
or
ds
or
hlt
cld
lret
int3
mov
jle
jmp
or
imul
xchg
dec
cmc
sti
mov
orb
fisttpll
inc
dec
and
mov
mov
pop
notb
je
push
dec
jnp
lret
mov
mov
fwait
push
lock
mov
mov
mov
paddusw
lret
mov
jb
add
jae
popf
mov
movsb
arpl
or
test
push
jp
cmp
test
mov
push
add
push
jnp
inc
nop
lods
sub
mov
or
pop
repnz
dec
in
sti
or
pop
push
in
insb
push
push
popf
cli
mov
lods
cwtl
inc
mov
sub
push
sbb
lahf
fldt
and
sbb
add
into
icebp
das
clc
pushf
outsl
cmp
into
mov
pop
ja
lret
mov
punpckldq
cmc
sbb
int
or
jns
push
imulb
xchg
dec
pop
ljmp
push
aam
leave
mov
leave
xchg
push
out
mov
test
jecxz
mov
push
or
jecxz
in
xlat
sahf
mov
scas
outsb
pushl
inc
sub
mov
sar
sub
loopne
rclb
push
jl
xchg
lds
pop
ret
mov
or
push
arpl
lock
jecxz
into
fmuls
sbb
xor
lcall
sbb
or
mov
cltd
jae
mov
divb
rcll
and
movsl
add
fst
xchg
inc
xchg
cmp
inc
push
cmpsb
bound
push
lock
lea
loopne
ret
cmp
mov
jecxz
int
mov
test
sub
dec
andb
add
add
push
mov
add
stos
aas
sbb
mov
ret
in
fstl
mov
mov
std
mov
lea
xor
mov
repz
repz
andb
pop
iret
fildll
lods
fcoms
inc
int3
and
test
or
rorl
scas
xor
loopne
ds
xorl
cmp
jbe
jnp
xor
sbb
push
orl
mov
pop
divl
push
inc
mulb
pop
bswap
pop
mov
ja
and
cmp
push
mov
dec
icebp
add
outsb
das
sbb
lods
out
mov
addb
repnz
repz
call
daa
icebp
xor
push
dec
aad
into
sub
mov
cltd
and
loopne
icebp
or
lods
and
es
subl
jo
adc
sbb
test
mov
mov
mov
push
and
cmp
push
roll
push
push
mov
push
ss
mov
and
stos
das
shll
or
dec
xchg
outsb
popf
jo
cltd
or
hlt
iret
inc
xor
mov
fsubr
stos
or
test
mov
out
es
imul
test
nop
or
je
test
mov
lods
xchg
mov
lea
xchg
mov
lret
adc
scas
mov
sub
mov
sub
shll
insb
out
fmuls
bound
fsubs
jl
push
test
pop
imulb
mov
sbb
lret
js
jb
lcall
mov
jp
push
sahf
lcall
gs
ftst
insl
scas
test
cld
or
pop
arpl
mov
inc
xchg
fadd
xchg
bound
cmp
js
jns
jmp
dec
cmp
and
out
addr16
mov
add
xor
out
popa
push
or
cmp
xor
setbe
mov
stos
inc
sub
imul
fldcw
fs
lea
subl
in
xor
dec
int3
ror
pop
je
dec
lahf
mov
out
aaa
jl
mov
je
push
sub
hlt
sbb
pop
xchg
addr16
rolb
in
lret
pop
push
scas
inc
leave
insb
std
sbb
andl
xlat
mov
insb
cli
cmp
mov
sub
movsb
cmp
inc
add
pop
hlt
cmp
xor
repnz
mov
cmc
in
jbe
cltd
push
xchg
jbe
pop
aas
jnp
or
xor
sbb
fnstsw
shlb
loope
cmp
ret
test
inc
test
push
pop
pusha
sbb
ror
fistpll
and
inc
xchg
shr
xor
inc
add
jge
push
scas
rclb
push
add
in
aaa
adc
stos
loop
movsl
sbb
push
mov
mov
and
aaa
roll
aad
xor
inc
add
jmp
cmp
mov
cli
dec
mov
xchg
sub
sub
push
xchg
xlat
mov
outsl
mov
jae
fistl
std
lahf
mov
mov
aad
sbb
xchg
push
sti
mov
cmp
push
mov
xchg
std
test
xchg
stos
arpl
fcmovne
mov
sub
lds
outsb
jge
arpl
pop
mov
dec
jns
stc
cmc
out
push
and
add
mov
mov
adc
jne
jno
jb
jnp
and
add
jae
mov
rorb
imul
int3
pop
in
jo
neg
mov
pop
loopne
mov
in
and
mov
outsl
and
xlat
and
push
stos
mov
mov
dec
mov
and
push
adc
or
sub
imul
mov
out
popa
jns
jnp
push
scas
mov
dec
fsubrl
and
dec
inc
mov
ds
mov
movsl
scas
push
in
out
ret
mov
insb
mov
add
sbb
cmp
sbb
xchg
push
mov
jl
push
xor
dec
or
mov
jo
mov
xchg
aaa
js,pt
mov
add
or
dec
inc
icebp
sub
mov
pop
fs
pop
leave
imul
sbbb
mov
mov
and
xchg
xchg
out
in
push
int3
mov
out
test
cwtl
dec
rolb
out
insb
jo
out
std
mov
mov
cmp
cmp
jle
mov
push
out
bound
xchg
push
dec
data16
dec
pop
ss
jp
mov
xorl
add
cmp
mov
scas
mov
adc
sub
adcl
or
inc
stos
mov
push
or
push
mov
hlt
icebp
mov
not
out
jbe
mov
mov
lret
xchg
cwtl
mov
bswap
dec
outsl
mov
cmp
das
filds
push
sub
ret
std
lcall
lcall
sbb
iret
dec
cwtl
xchg
insb
lods
mov
sbb
pushf
in
es
insl
inc
mov
mov
dec
push
iret
sarl
sbb
scas
add
js
wrmsr
mov
xchg
pop
in
incb
fwait
or
sti
shl
mov
es
push
js
xor
sub
and
cmc
adc
inc
repnz
xchg
mov
sub
mov
pop
test
movb
cmp
stos
rorb
sub
addr16
shl
leave
jecxz
hlt
mov
mov
fcmovnu
test
mov
fbld
lahf
mov
sbbl
jle
imul
lret
add
les
sub
pop
push
sahf
insl
dec
mov
push
inc
cld
adc
xchg
roll
push
cmpsb
adc
hlt
pop
pop
push
and
mov
pop
mov
add
mov
or
and
mov
add
stos
test
jb
movl
ljmp
and
push
or
les
sub
xchg
pop
push
adc
ja
sbb
mov
fisttpl
addr16
clc
cld
fnstsw
dec
cmp
xorb
push
andl
enter
out
push
mov
xlat
aad
mov
cmp
mov
dec
pusha
pop
adc
push
push
leave
push
jmp
add
push
stos
mov
divb
out
add
dec
xchg
cmp
iret
int3
rcr
gs
xor
ret
mov
int
inc
popl
xor
test
cli
dec
push
stos
sbb
fs
scas
dec
ret
sub
xor
push
mov
pop
sahf
cld
test
and
mov
dec
std
mov
movsb
jns
fs
jnp
fldt
push
cmc
loop
sbb
jo
loopne
jno,pn
adc
pop
mov
adc
fcoml
ror
inc
push
xchg
inc
mov
add
cltd
std
loopne
inc
push
clc
repnz
idivb
cli
out
lretw
scas
push
cmpsb
mov
aam
and
xor
insb
sbb
add
dec
push
adc
sub
pop
test
js
and
arpl
repnz
cmp
sbb
aam
lds
mov
cwtl
mov
addr16
lods
addr16
add
addr16
icebp
imul
pop
fidivs
test
xchg
and
lcall
fsubrs
sub
cmp
stos
andb
mov
movsl
repnz
mov
into
dec
cltd
cli
insl
out
ret
cmp
inc
add
lahf
push
inc
iret
es
pop
cmp
out
sbb
adc
add
dec
pop
mov
and
ret
js
adc
aam
push
add
icebp
lods
xchg
out
lods
inc
jns
fnstsw
sub
add
inc
scas
data16
shrb
cmp
jns
dec
sbb
test
fisttpl
fwait
fs
rcll
jmp
push
or
xchg
jmp
push
cmp
sbb
insb
dec
cmp
jnp
fidivs
jo
stc
sub
int3
pop
imul
xchg
and
out
ret
add
adc
or
sbb
enter
in
cmp
fldl
test
push
cltd
adc
pop
test
outsl
fildll
repz
jns
adc
daa
insl
inc
or
scas
cltd
mov
scas
lcall
jb
aam
dec
arpl
data16
add
xor
popa
xor
push
mov
aaa
sbb
movsl
push
xchg
nop
aaa
xchg
push
or
call
ljmp
mov
pusha
out
js
mov
aam
int3
cmp
dec
and
xchg
stos
xor
cwtl
arpl
rcrl
fdivrp
sbb
aam
dec
cmpsb
cld
mov
xor
adc
xor
icebp
aad
push
and
shll
dec
mov
sti
sarl
cld
xor
jp
xchg
iret
sub
ror
push
sahf
icebp
add
in
cli
mov
jl
enter
pop
adc
cmp
xchg
adcl
popa
xlat
mov
mov
cmp
test
js
lcall
sbb
xchg
adc
fs
add
add
enter
add
xor
jecxz
sub
mov
mov
pop
das
lcall
push
mov
aam
cli
or
inc
xchg
sub
or
mov
jns
push
xchg
mov
mov
aaa
jmp
push
xchg
gs
mov
test
les
sub
or
idivb
insb
jae
loopne
imul
and
sbb
xchg
dec
mov
in
popf
add
ret
cmpsl
xchg
cmpl
mov
out
dec
pop
xchg
dec
addr16
sti
movsl
in
dec
neg
subl
fidivrs
scas
dec
push
fisubrl
dec
push
pop
or
lahf
or
sub
xorb
jb
xor
xor
mov
sti
or
rorb
in
dec
sub
test
push
push
dec
sub
sub
cld
mov
icebp
cmpsb
out
lret
ret
or
inc
pusha
fcomps
mov
and
lret
lods
inc
inc
out
fldenv
sbbl
int
or
cs
idivb
jp
xchg
movsl
les
pop
push
ret
aad
rorb
push
fcmovnb
jle
push
dec
push
or
lret
or
jo
sbb
jno
cwtl
and
mov
push
data16
mov
int
inc
cld
mov
ds
xchg
xchg
or
mov
in
inc
out
aad
out
in
hlt
and
test
stc
pop
jp
and
shr
adc
cmp
or
pop
mov
lds
leave
movl
lret
jne
cmc
sar
mov
dec
xor
adc
pop
pop
outsb
xchg
and
add
pushf
ss
out
flds
shlb
int
cs
sub
adc
jnp
fwait
push
add
rorl
xor
les
add
jb
mov
ror
sti
cmpsl
mov
nop
xchg
dec
test
push
out
pusha
mov
leave
test
adc
sti
popf
xchg
cmp
jae
pop
sbb
fisttps
dec
andb
jbe
popa
test
aam
push
push
mov
lret
push
lret
push
jo
add
mov
sbb
leave
call
stos
mov
inc
xor
xchg
fisubrs
stos
pop
mov
jecxz
xchg
xchg
cmpsb
repz
sbb
push
jle
jmp
add
push
sub
inc
dec
mov
add
sbb
pop
mov
cmpsl
lahf
dec
adc
out
aaa
mov
fneni(8087
jp
int3
or
dec
dec
cwtl
and
mov
xchg
jo
mov
loopne
data16
or
sub
outsl
les
jns
sbb
adc
or
jge
pop
push
add
mov
rcr
lds
shlb
dec
fidivl
rcrb
adc
xchg
cltd
int3
insb
push
mov
pusha
mov
xchg
cs
out
adc
adc
xchg
mov
shl
mov
outsl
inc
add
rcrb
scas
mov
and
repz
addl
imul
inc
jns
inc
adc
jne
data16
inc
mov
xor
sub
sbb
cltd
fcompl
push
or
into
lds
pop
decl
cmpsb
xchg
fildl
popa
cmp
repnz
sahf
push
ljmp
jg
cmpb
shrl
cltd
sub
lea
mov
and
hlt
mov
shlb
stos
mov
mov
mov
pop
aad
sub
pop
mov
jecxz
sub
lds
and
lock
push
int3
ss
cmp
stos
mov
dec
sub
cmc
xchg
push
bound
mov
cwtl
push
jbe
pop
imul
add
push
and
jmp
repz
and
mov
repz
addr16
ljmp
mov
mov
ret
movsl
jmp
cmp
pop
jb
sub
aas
in
ds
mull
out
sar
and
xor
sub
insb
pusha
adcl
mov
xor
sbb
gs
into
mulb
mov
mov
gs
outsb
cmp
popf
push
and
sbb
popa
and
push
stos
push
and
hlt
or
inc
dec
and
out
xor
int
and
cmp
cmpsb
in
iret
dec
push
mov
jbe
mov
xchg
movsl
sub
mov
negb
in
dec
mov
popf
lahf
mov
vmptrld
ds
mov
jo
add
jmp
rcll
arpl
xchg
sbb
hlt
adc
mov
add
sbb
test
cltd
adc
inc
jns
fwait
mov
jno
bound
repz
dec
in
xor
dec
ds
lcall
push
imul
call
pop
and
adc
push
jle
pop
outsb
xor
cmp
mov
in
and
cli
jle
ror
fdivl
jne
add
mov
dec
add
mov
mov
dec
jg
xchg
out
pop
popa
jp
cld
cmp
sbb
mulb
add
pop
ljmp
hlt
pop
mov
in
push
orb
test
out
stos
pop
cmpsb
aaa
pop
cmp
rolb
jnp
and
enter
fwait
imul
cmp
flds
and
out
push
adc
cmp
out
lock
mov
and
sub
sarb
test
or
ds
popf
pop
mov
mov
mov
pop
fsubs
cld
mov
mov
lahf
pop
test
inc
sbb
add
xchg
cli
pusha
adc
movsb
imul
dec
mov
std
arpl
cmp
loopne
push
adc
mov
adc
push
mov
mov
mov
jmp
mov
xor
or
xor
dec
fimull
fistpl
xchg
pop
leave
repz
xor
ret
repnz
imul
jl
cmp
sub
out
adc
int
daa
enter
ja
mov
sahf
xchg
int
push
sbb
ja
jb
lea
lock
out
sub
adc
addl
jle
lock
mov
pushf
mov
and
shlb
jno
outsl
cmp
mov
hlt
sub
lods
dec
jbe
fs
sbb
test
std
jg
push
push
mov
xchg
jge
test
cmp
das
jle
sub
xchg
lcall
daa
add
or
lds
bound
add
pop
push
lcall
pop
mov
aad
xchg
jo
xchg
cmp
dec
pop
jg
fsub
mov
loopne
mov
sbb
push
ds
push
push
stos
cmpsb
dec
stos
push
or
xchg
mov
push
mov
aas
dec
push
stc
repz
inc
push
fmul
sbb
jns
outsl
push
sbb
push
sub
arpl
stos
and
adc
push
cmp
push
cmc
lret
mov
fisttpll
mov
lock
add
test
or
sbb
and
lods
mov
arpl
adc
stos
jns
rcrl
into
lock
sbb
xor
outsl
clc
cwtl
test
add
adc
pop
insb
mov
aaa
ret
jecxz
repz
imul
cmp
in
repnz
scas
je
gs
pop
jge
mov
aas
leave
std
pushf
xor
pop
loopne
or
dec
mov
adc
cmp
and
loop
je,pt
and
rorb
fwait
mov
pop
or
fstl
in
xchg
mov
dec
js
dec
in
sbb
mov
lock
loopne
lods
or
jb
imul
sbb
cmp
pusha
hlt
inc
push
out
sbbl
adc
push
pop
out
lock
in
jg
xchg
lock
jecxz
jmp
mov
mov
dec
adc
xchg
out
cmp
xchg
iret
and
ss
mov
ret
pop
repnz
in
lcall
incb
leave
pop
add
ljmp
jbe
sbb
xchg
or
sub
popf
dec
sub
sti
xchg
icebp
rcrl
daa
inc
xchg
call
dec
and
jb
in
jp
shrb
into
nop
in
jmp
sbb
xor
dec
sbbl
insb
sti
pop
mov
mov
inc
pop
mov
dec
loop
popf
test
scas
jp
sahf
pop
sbb
jo
pop
call
cmpl
mov
or
inc
ljmp
push
sub
mov
jae
fldenv
xchg
inc
xor
aas
jbe
lret
aam
int
pop
imul
inc
xchg
dec
jp
mov
mov
sarl
mov
fsub
sahf
cmpsl
mov
pushf
lret
mov
inc
cltd
inc
pop
or
xor
lods
mov
and
lea
push
pop
int
es
insb
fcoml
lret
jne
jmp
xchg
std
test
mov
mov
mov
cltd
sub
mov
mov
mov
mov
jo
stos
shr
jle
pop
pushl
outsb
arpl
mov
pop
dec
outsl
and
flds
icebp
movsl
subb
fyl2x
outsl
add
cli
out
shl
ss
xor
xchg
lret
xchg
loopne
pop
jae
pushf
les
jmp
push
pop
jle
dec
movlhps
sbb
add
mov
push
pop
es
mov
mov
xchg
pop
inc
push
pop
push
jbe
push
movsb
mov
pop
jns
mov
cmp
loop
cmp
cmp
inc
xchg
out
gs
aas
dec
lcall
mov
mov
lea
cmpsl
or
cmp
daa
scas
rorl
mov
shll
js
enter
fisubrs
fwait
mov
call
clc
dec
pop
test
cwtl
jo
imul
leave
int3
fsub
hlt
cmp
loopne
pop
ja
pop
and
jl
pop
mov
mov
rcrl
inc
jle
rolb
pop
mov
mov
inc
insb
jecxz
cmp
fiadds
je
push
out
fisttpl
push
insl
call
mov
mov
inc
fdivrs
jmp
and
sbb
push
mov
pushf
outsb
pop
in
fsubs
xchg
lods
mov
mov
outsb
lock
and
mov
rorb
and
pop
add
outsb
jp
mov
push
cmp
pop
push
sbb
adc
shrb
shlb
ss
sub
sub
and
fbstp
cmc
rcrl
arpl
mov
lods
jecxz
push
in
or
mov
dec
aam
and
test
mov
jge
popf
push
jecxz
sub
shll
sub
sub
xchg
loope
fdivr
mov
loop
ret
lcall
shll
fdivrs
mov
int3
pop
addr16
loopne
xor
pop
divb
cmp
mov
test
jecxz
in
arpl
das
push
jge
sbb
cmpsl
std
aaa
cltd
lret
les
pop
outsl
std
repnz
push
xchg
mov
mov
mov
and
shlb
rclb
popa
push
cmpsb
sti
enter
fstps
inc
mov
cmpsb
push
mov
xor
cwtl
test
xor
sbb
xchg
fwait
dec
lds
lret
rorb
sbb
push
out
js
add
sbb
xor
mov
cmpb
jmp
shlb
pop
imul
push
cmpsb
mov
mov
push
mov
pop
mov
xchg
pushf
insl
xlat
dec
jge
loopne
lahf
hlt
xor
add
sbb
aad
inc
pminub
jnp
cmp
loop
adc
mov
jne
adc
imul
aad
ret
mov
mov
icebp
fsubrs
sahf
push
sub
pushf
stc
adc
xor
insl
out
fwait
jns
les
pop
fisubrs
out
dec
ja
dec
or
push
outsl
add
or
fidivs
jle
push
stc
xchg
jg
cmp
shrb
lds
cwtl
sbb
lret
and
or
loop
out
int3
lahf
xchg
adc
sbb
dec
xchg
popa
xor
mov
xchg
and
cmp
fiaddl
mov
xor
push
mov
sbbb
sti
cmp
jmp
test
in
cmp
aam
fs
test
inc
dec
and
jns
bswap
inc
mov
sahf
scas
push
push
lcall
in
mov
fcmovbe
cmp
in
adc
ss
cmp
inc
sub
xor
adc
lods
repz
push
mov
mov
cmp
push
pop
mov
cld
xchg
sbb
daa
add
jae
mov
popf
push
adc
and
xor
jae
inc
in
sbb
scas
js
cli
in
inc
adc
adc
pop
pop
or
lahf
int
je
movsl
sti
sub
dec
fdivrl
notl
ret
icebp
xchg
mov
int
fdivrs
jbe
dec
jp
pop
mov
sbb
test
mov
dec
fiaddl
js
clc
add
xchg
sahf
add
and
in
pop
and
mov
jl
fiaddl
cli
mov
cmp
cmp
inc
push
mov
mov
mov
push
push
stos
ljmp
sbb
pop
jb
scas
fwait
mov
fdiv
push
cmp
xor
or
jnp
enter
movsb
enter
loope
test
out
mov
jno
jg
mov
icebp
sahf
std
lea
cmp
mov
jbe
stos
push
leave
mov
jp
and
jmp
sub
xor
pop
dec
sub
leave
mov
mov
call
movsb
cmpsb
addr16
int
jp
and
repnz
add
adc
aam
and
jo
dec
push
arpl
data16
jg
mov
rclb
neg
imul
jge
dec
xor
sbb
outsl
xor
int
cmp
mov
andl
nop
cli
xchg
or
xlat
pop
stc
mov
push
inc
push
xchg
mov
fcomps
add
arpl
loopne
out
adc
aaa
pop
fcmovnu
into
gs
pop
inc
in
test
adc
pop
or
pusha
and
jp
jb
push
adc
or
pusha
test
pop
xchg
mov
sbb
inc
rclb
xor
pop
add
xchg
pop
imul
scas
push
out
mov
xchg
push
aaa
mov
pop
es
and
or
jo
in
pop
clc
mov
dec
into
pusha
mov
xchg
pop
pop
stos
into
leave
xor
xchg
out
xchg
ficoml
add
cltd
mov
out
push
xor
mov
daa
jnp
cmp
mov
pop
mov
add
jp
lahf
stc
and
pop
mov
leave
adc
loop
stc
rclb
push
fiaddl
ljmp
data16
add
aam
xchg
shr
iret
vmovupd
xchg
fldt
xor
jb
pop
xor
insb
inc
call
adcl
mov
xchg
add
int
pop
les
sbb
jl
pop
stc
lcall
in
sti
jp
cmp
cmpsl
sahf
xchg
mov
test
pop
rolb
jbe
and
jle
pop
add
cld
sub
aad
jbe
shlb
mov
testl
xor
sub
push
arpl
mov
popf
xor
mov
psubsb
repz
push
xchg
xor
popf
sub
and
pop
cltd
dec
inc
push
arpl
dec
sbb
mov
shl
and
aas
movl
jo
aas
xchg
repz
lret
stos
or
xchg
xchg
mov
pop
gs
mov
jp
jne
sbb
and
push
scas
adc
std
fsubr
jne
js
sahf
push
ja
test
gs
sbb
rcr
std
aad
hlt
frstor
into
notb
xcrypt-ctr
cmpsl
fwait
adc
aad
mov
xchg
inc
scas
dec
dec
popa
cmpsb
lods
and
mov
fistpl
into
xchg
arpl
add
dec
les
dec
mov
mov
fs
cli
and
xor
sub
outsl
lods
test
pop
mov
jne
nop
push
push
out
xchg
pop
xor
icebp
enter
std
push
sub
pushf
sahf
jg
and
dec
lahf
jbe
mov
pop
push
mov
jns
out
add
sbb
cli
jo
lcall
adc
adc
idivl
adc
jmp
icebp
jbe
lret
lret
mov
inc
pushf
leave
stos
pop
stc
dec
pop
ret
jmp
shll
sbb
xchg
rep
ret
adc
fs
sbb
int3
clc
clc
cmpsb
xor
xor
jbe
jp
loope
mov
stos
lahf
pop
ja
shrb
jnp
mov
jns
mov
lret
jp
inc
sub
xchg
loope
bound
or
pusha
sub
mulb
nop
and
repnz
lods
add
and
cmpsl
pop
ret
jae
pop
out
cmp
pop
fdivrl
mov
lock
fbstp
pop
push
push
daa
jns
sub
ds
mov
out
or
lods
outsb
jmp
mov
or
jl
iret
cmpsl
dec
mov
sub
add
fst
pop
js
shlb
call
sbb
inc
add
aad
mov
jl
xchg
cmp
les
movq
into
push
fidivs
scas
dec
sub
xor
pop
in
jnp
xor
xchg
stos
repnz
sbb
nop
icebp
push
pop
addb
std
lea
mov
popl
insl
push
jp
cmpsb
jle
jecxz
repnz
clc
iret
dec
fdivrs
sub
push
add
insb
sti
adc
stos
pop
mov
arpl
xchg
add
mov
cmp
popa
mov
cmp
lret
add
and
pop
popa
add
and
adc
bswap
out
lock
js
dec
sbb
notb
push
hlt
push
je
sbb
in
notl
in
bound
sarl
and
insl
mov
das
lahf
in
and
filds
inc
inc
incb
pop
pop
xchg
fwait
or
pusha
hlt
js
test
mov
and
cmp
lods
add
outsb
push
stos
mov
pop
shlb
mov
iret
stos
rclb
push
push
andl
add
pushf
pop
aaa
jne
test
orb
fidivs
mov
cmp
sbb
test
pop
pop
cmpsb
int3
lds
mov
aam
and
in
xchg
cmp
and
adc
mov
and
popa
aas
ds
add
cs
mov
fwait
xchg
push
sub
imul
aam
imul
cmpb
mov
dec
or
xchg
cli
in
cltd
loop
push
fdivrs
xchg
adc
xchg
xor
add
sub
xchg
pusha
jecxz
sarl
repnz
pop
mov
pop
add
inc
push
test
mov
in
lcall
xor
repnz
iret
jp
fbld
repz
cli
gs
adc
cmp
mov
push
sbbl
stc
sub
mov
dec
or
xlat
sub
jo
sub
es
rcl
inc
jg
mov
and
rolb
popa
xchg
pusha
pop
inc
out
mov
test
popf
rcr
orl
xor
cmpsl
vorps
scas
xor
stos
jl
jle
mov
dec
push
mov
pop
push
addr16
sbb
xor
cmpsb
mov
or
sbb
or
stc
sbb
and
enter
lcall
jns
cmp
dec
test
dec
dec
jge
vpsrld
cmp
and
push
cmpsb
dec
or
inc
push
les
xor
cmp
aaa
cmp
aam
xchg
nop
push
pop
sti
xchg
ret
lea
jne
loopne
mov
enter
aad
sub
xor
mov
push
dec
lds
mov
mov
fcmovu
fmull
fisttps
dec
cmp
inc
jge
jb
dec
jle
insb
cwtl
adc
jge
adc
jg
xor
mov
adc
pop
es
push
sbb
add
and
mov
cmpsl
inc
and
add
cmpsl
pop
filds
adc
inc
cmpsb
xor
aam
dec
fldt
das
xlat
xlat
scas
pop
mov
cwtl
clc
inc
out
xorb
add
mov
or
sbb
add
xor
push
jmp
pop
fdivrs
mov
out
push
add
sbbb
repnz
mov
pushf
adc
por
xchg
ror
mull
stos
sti
orl
test
xor
pop
ds
push
mov
adc
adc
and
movsl
push
and
or
aas
nop
jl
insl
popa
or
mov
cmp
mov
add
mov
lock
hlt
and
cld
scas
inc
int
mov
lock
aad
insl
inc
mov
out
add
dec
inc
or
inc
scas
aas
sbb
repz
push
sbb
test
inc
es
or
dec
dec
sub
mov
inc
movsb
cmc
xor
imull
lret
lds
jns
mov
fcoml
lea
mov
xor
mov
mov
mov
int3
pop
sbb
fs
filds
pusha
inc
ds
ret
inc
sbb
sbb
cmpsl
xor
mov
dec
pop
xchg
hlt
mov
lock
pop
sbb
add
stos
push
xor
sub
cmp
and
pop
and
or
adc
mov
xlat
pushf
or
and
sbb
jne
fisubl
cmp
test
roll
add
incb
sahf
mov
ret
mov
dec
mov
das
fstpt
mov
jbe
scas
popa
stos
adc
xor
push
imul
outsb
in
dec
mov
out
xchg
rcll
or
pop
out
jmp
iret
xor
xor
cli
icebp
jp
test
cli
push
scas
and
pushf
push
ficoms
or
cwtl
sti
inc
xor
lcall
adc
fsts
or
imul
or
int
jns
lds
mov
ja
out
mov
in
push
mov
adc
popf
sub
adc
fstpl
aaa
mov
cmpsb
pop
mov
push
std
fildll
jo
ss
addr16
daa
enter
sbb
ret
or
mov
pop
mov
pop
pop
adc
push
jo
pop
pusha
cmc
cmc
jle
jns
out
xor
iret
int3
dec
frstor
jnp
cmp
mov
cmp
mov
mov
sbbb
or
and
pop
fcompp
je
mov
adcb
xchg
or
outsl
in
dec
and
adc
dec
ss
lcall
and
mov
insb
test
jle
mov
test
and
or
in
cltd
stos
scas
jo
out
mov
imul
std
xor
nop
adc
movhps
clc
inc
mov
in
pop
push
aas
and
add
repz
inc
and
or
inc
std
xchg
dec
test
mov
stos
xchg
lods
rorl
cmpsl
add
cmp
push
sub
sti
out
pop
pop
stos
js
mov
mov
pusha
fsubs
lretw
int3
push
add
shll
inc
xor
outsb
in
push
sub
xchg
addr16
out
xor
sti
inc
jae
aas
push
data16
push
mov
dec
mov
cld
cli
lret
repz
fadds
mov
mov
notl
outsl
mov
sarl
sub
bound
xor
sbb
cmp
rol
cmp
stc
and
loope
pop
sbb
insl
ret
cmpsl
add
adc
lock
jl
fdivrp
mov
jl
inc
jmp
xor
test
cmp
mov
mov
mov
cli
mov
xchg
mov
iret
stc
push
inc
jo
and
nop
jmp
clc
jmp
pusha
sub
hlt
nop
push
and
add
sti
xor
inc
lahf
sub
or
lock
cmovp
inc
loopne
and
roll
cld
in
mov
sahf
lods
xor
xor
nop
cmp
rol
fstpt
pop
popf
ds
std
test
sub
or
cld
das
mov
lods
xchg
in
das
in
iret
aas
jns
loope
push
popa
sbb
je
fnsave
dec
or
dec
dec
cmp
fdivrl
call
mov
mov
sub
dec
lahf
das
cmp
sbb
leave
xor
push
dec
inc
cmp
add
outsl
ret
xor
or
mov
fnsave
adc
push
dec
mov
scas
jne
insl
ja
orb
inc
mov
mov
js
sub
scas
dec
mov
adc
pop
and
imul
jmp
mov
je
push
push
ret
inc
shr
clc
lcall
cs
jl
pusha
int3
clc
inc
push
and
ds
fwait
push
add
pop
cltd
add
cwtl
repz
xchg
adc
cmpsb
jo
mov
pop
xchg
pop
lds
cmp
inc
pushf
in
pop
sub
lahf
test
test
mov
and
add
ds
push
cs
jg
or
outsb
outsl
dec
clc
loope
sub
out
jmp
ret
or
jg
xor
or
add
xor
cmpsb
jl
test
daa
xlat
mov
xchg
mov
push
lret
dec
inc
into
and
out
scas
popf
pop
lods
pop
push
fsubrp
clc
aas
and
dec
xchg
iret
cwtl
imull
pop
mov
pushl
mov
sahf
mov
mov
pop
mov
cs
add
mov
push
rcr
incl
add
ljmp
pop
shlb
cs
cmp
les
fisubs
mov
xor
shrl
repz
iret
dec
mov
mov
add
xchg
fs
lcall
loopne
addl
mov
xor
inc
push
fwait
mov
xor
mov
out
hlt
enter
pop
add
xchg
inc
pop
nop
pop
mov
adc
aas
adc
ret
mov
fstpt
pop
scas
mov
test
mov
test
lods
push
fnstenv
xchg
xchg
lea
jecxz
pop
pop
ret
and
insl
jb
xor
pop
ss
movb
mov
mov
mov
enter
ret
or
test
addr16
xorb
inc
arpl
pop
xchg
cmp
add
rorb
push
push
scas
cmp
xchg
xchg
mov
adc
jmp
mov
mov
fs
out
int
test
pop
mov
ret
iret
inc
lret
fcmovu
pop
pop
or
xchg
cmp
mov
xchg
or
mov
mov
pop
or
test
or
fidivrs
out
aad
stc
rorb
push
and
rcrb
pop
push
pop
icebp
push
int3
inc
outsl
mov
jp
xchg
nop
jl
ja
rcll
xchg
cli
dec
jbe
add
mov
xchg
cmp
inc
xchg
xchg
sub
and
xchg
pop
ljmp
mov
add
rcrb
push
push
popa
mov
fisubrs
sarb
out
sub
ret
int3
enter
jecxz
pop
mov
hlt
rcrb
test
enter
mov
jbe
outsb
mov
pop
dec
stos
insl
mov
fidivrl
lods
jne
sbb
out
nop
mov
hlt
out
sbb
in
pop
push
pop
cld
fsubs
cmp
push
fsub
mov
ljmp
sub
jl
jecxz
adcb
mov
jmp
pop
sarb
or
loop
pop
rcrb
inc
mov
cli
in
pop
mov
mov
cmp
mov
mov
or
pop
sbb
rcrl
stc
or
mov
mov
xchg
outsb
leave
mov
mov
inc
scas
push
jae
adc
loop
jl
inc
push
sbb
outsl
aam
jg
outsb
int
push
data16
cs
cltd
inc
pop
stc
in
jnp
sbbl
ja
sarl
mov
fiadds
xchg
jb
push
sub
shrl
jg
lods
mov
dec
outsl
xor
push
dec
mov
sti
or
int
sbb
into
loope
js
nop
shll
xchg
int3
add
sbb
inc
inc
add
divb
cli
test
sub
and
imul
fcomps
inc
xchg
pop
xor
or
fcmovne
jbe
xor
out
imul
dec
lods
fisttpll
adc
loopne
dec
arpl
imul
les
pop
xor
pop
leave
movsl
rcrb
jns
fidivs
mov
int3
inc
int
and
bound
fmul
negl
mov
mov
lahf
dec
lahf
mov
aaa
popf
cltd
cmpsb
out
pop
cli
hlt
out
stos
lahf
andl
mov
into
and
js
pop
sub
fbstp
je
out
addb
and
rcll
mov
adcb
xchg
cmp
out
stos
jno
mov
mov
push
pop
cmp
lret
and
lcall
loopne
fdivl
jge
mov
pop
ss
sub
mov
xor
fs
daa
jge
ja
sahf
aas
xor
aam
scas
outsl
mov
insl
roll
cmp
and
mov
ds
in
dec
dec
jne
sub
jno
jle
mov
or
or
lahf
test
push
push
iret
inc
fnstenv
xchg
insl
xorl
push
bound
mov
rol
imul
je
add
add
or
lret
pop
xor
repz
push
movsb
mov
mov
shrb
cmpsl
es
xchg
adc
mov
test
dec
cmp
cmpsb
stos
sub
add
orb
pop
es
sbb
mov
cwtl
sbb
loop
pop
rcrb
xchg
movaps
cmp
jmp
mov
and
fmull
cmp
mov
xor
in
push
cmp
mov
orb
jl
jge
and
xchg
loop
xchg
es
or
or
sbb
push
stc
sub
iret
add
in
add
and
les
in
stos
sbb
jmp
les
lcall
dec
popa
fs
push
pop
movsl
xor
mov
sub
mov
sbb
or
repz
sbb
ja
outsl
lods
movsl
mov
fcomps
cltd
jmp
out
je
mov
dec
ds
cmp
out
aaa
insl
out
fsubrl
dec
xor
lcall
xchg
pop
cmp
scas
hlt
cmpsb
into
subb
xor
pop
ret
cmp
mov
pop
mov
push
cmp
or
mov
pusha
cmp
pusha
mov
jp
lock
clc
das
frstor
add
jb
frstor
cmp
xor
aad
lea
dec
pushf
fwait
notl
lcall
stc
outsl
pusha
popa
jmp
add
clc
cwtl
inc
mov
cld
inc
and
in
cmp
sbbl
cmp
in
ds
xchg
mov
mov
cmpsl
xchg
mov
push
mov
iret
sub
adc
loop
mov
xor
xchg
imul
pop
aas
in
mul
push
xor
jl
aaa
es
int3
out
mov
and
fldenv
scas
rcrl
or
aad
push
outsb
xlat
sahf
pop
xchg
iret
mov
ds
sbb
jmp
pop
ds
sbb
cmp
adc
mov
dec
push
or
sbb
loope
or
fistpll
mov
leave
and
mov
jns
push
rorb
mov
fs
sub
sub
or
cmp
adc
and
mov
and
aaa
jle
mov
sbb
sbb
mov
sub
rolb
adc
jne
test
enter
cwtl
in
decb
jnp
mov
leave
fisubrl
add
jo
add
stc
test
mov
sbb
insb
imul
out
pop
pop
js
fwait
pop
jno
daa
faddl
pop
push
mov
test
sbb
xlat
pushf
push
int3
lret
insl
icebp
xor
mov
pop
pop
mov
sbb
outsb
xor
in
xchg
pop
xor
add
push
sub
cmp
test
in
fwait
in
sti
xchg
sub
mov
xchg
rolb
std
jle
lea
adc
adc
mov
leave
js
xor
rcr
pop
pop
in
dec
ficompl
dec
in
in
mov
loope
mov
data16
push
cmpl
sbb
stc
mov
aas
pop
jmp
hlt
adc
adc
fiadds
in
pop
mov
addr16
mov
arpl
and
lret
int
and
test
lock
cmp
xchg
leave
xor
jmp
cmp
push
pmulhw
cld
xor
push
mov
jle
pop
sbb
mov
pop
cmpsl
xor
outsl
jo
push
stc
push
dec
mov
notl
pop
adc
xorb
loope
js
ljmp
pop
stos
in
call
mov
push
fs
mov
pop
leave
rolb
idivb
adcb
pop
inc
mov
mov
addr16
xchg
popa
mov
sti
sti
jae
shlb
and
cwtl
ret
inc
test
clc
js
push
sub
ljmp
lfs
call
xor
popa
lea
inc
arpl
outsb
insb
insb
dec
mov
lcall
add
mov
pop
jmp
push
shlb
mov
fsubr
test
shrb
sub
jne
pop
outsb
js
mov
xchg
data16
lods
add
loop
lcall
ss
cmp
outsb
push
xchg
loop
movsl
lods
mov
nop
cmp
mov
out
or
sub
aaa
mov
cmp
xchg
mov
push
adc
or
sbb
mov
cmc
movl
jmp
and
xchg
and
xor
or
dec
ret
scas
enter
test
not
pop
pop
jle
movsl
mov
rol
xchg
rorb
cmp
mov
les
mov
push
or
pusha
add
lret
lds
scas
mov
iret
jp
jae
cld
aaa
xchg
sti
mov
notl
jo
loop
push
xor
add
jmp
rorb
lods
cwtl
adc
inc
lods
daa
xor
std
in
fwait
mov
sti
lds
inc
lods
inc
test
pushf
adc
cmpsb
ret
scas
push
xor
pushf
sbbb
add
jmp
sub
xchg
test
mov
int
dec
addr16
jle
dec
fsubs
sti
aas
sahf
pop
std
addr16
data16
test
xchg
loop
sbb
fdivs
cmp
xchg
scas
bound
push
cmp
add
mov
shrb
mov
enter
fimuls
mov
mov
icebp
jp
in
xor
ret
push
insl
mov
mov
mov
dec
lock
lret
ss
pop
movsl
movb
dec
pop
mov
pop
sbb
dec
cmpsb
aad
nop
clc
cmp
pushf
movsl
lahf
lds
out
shrb
cwtl
mov
and
js
push
pop
lods
mov
std
fcmovb
jo
cltd
inc
sub
mov
test
mov
mov
repnz
sarl
sbb
jmp
repnz
mov
adc
push
mov
into
pusha
jg
push
cld
xor
fs
pop
nop
mov
lcall
push
add
pusha
aad
add
sahf
push
scas
sub
fisttpll
inc
mov
xchg
and
repnz
ja
cmp
frstor
clc
lret
jmp
sbb
dec
arpl
xor
jo
sahf
or
fstl
and
xchg
xchg
icebp
sti
sbb
push
mov
adc
xchg
mov
cmp
jnp
ret
push
sbb
mov
rorl
xchg
and
pop
push
dec
mov
sub
jno
nop
inc
or
fcomps
ja
int
fstpt
inc
sub
mov
out
in
xchg
push
sahf
sub
push
or
loop
pop
fistpl
ja
add
stc
ljmp
aas
sbb
and
pop
ret
sub
add
push
jmp
outsl
aam
shrb
repnz
jnp
mov
loopne
dec
scas
jb
push
lcall
fsubl
subb
gs
pop
add
ljmp
sbb
xor
pop
das
mov
loope
je
es
incb
jnp
leave
mov
ror
jmp
xor
adc
std
cmpsl
or
rorl
loop
divb
fisubrl
fwait
dec
icebp
mov
sbb
cmpsl
aaa
mov
push
lea
jp
iret
sbb
fists
adc
fdiv
decl
and
jg
outsl
mov
inc
jae
xlat
mov
sbb
lock
jns
les
rcll
outsb
lock
push
mov
sbb
loope
xor
lods
lcall
daa
sub
roll
push
mov
lods
dec
jno
xchg
xchg
insl
aas
imul
and
mov
enter
pop
rcr
enter
rcrl
popf
sarb
enter
stos
fcomi
xchg
push
scas
inc
add
stos
mov
mov
adc
rolb
dec
cmp
cld
sbb
xchg
adc
cmp
insl
and
cltd
xchg
push
out
mov
and
dec
mov
cld
xor
ljmp
das
and
push
daa
fdivrl
adc
daa
aad
lods
xchg
mulb
int3
in
xor
shl
call
mov
or
fdivrs
push
lds
adc
test
test
test
ja
mov
mov
inc
out
test
ljmp
imul
leave
fsts
xchg
or
pop
cli
xor
out
and
cs
clc
or
ds
pop
imul
pop
aam
pop
stos
insl
daa
das
xor
cmp
lcall
jmp
cli
jbe
and
mov
push
mov
ret
xchg
pop
subps
xor
push
out
inc
rol
push
icebp
stc
mov
jno
arpl
scas
jnp
push
fsubl
inc
mov
cs
fmuls
xor
pushf
mov
pop
pop
in
rolb
das
clc
test
iret
aaa
mov
and
xchg
push
push
push
lret
mov
add
mov
bound
and
jg
mov
mov
in
mov
das
mov
mov
add
jp
popa
sub
jo
or
in
shll
pop
ds
rcl
fiadds
cs
pop
push
les
pushf
andl
mov
jmp
dec
adc
jne
fistpll
lea
movsb
lea
add
call
inc
xor
addr16
sub
scas
mov
repnz
fwait
sub
add
clc
cmc
fsubl
and
xor
xchg
or
rorb
sti
mov
inc
lock
mov
jae
jnp
lds
bound
push
sahf
aaa
pop
incl
and
arpl
outsb
mov
inc
pop
aam
popf
or
and
push
ja
pop
loop
push
mov
jle
inc
sbb
fadd
inc
cld
mov
sbb
movsb
jbe
adc
popa
stos
mov
inc
aam
call
inc
push
rclb
xor
sti
test
iret
add
mov
mov
mov
pop
ljmp
push
insl
ja
cmp
dec
fistpll
bound
mov
adc
pop
add
mov
mov
pop
jae
out
xchg
in
das
test
mov
dec
cli
fsubr
or
cmpsb
sahf
cmp
fldt
outsl
mov
fdivs
inc
add
jle
in
sub
mov
xor
out
roll
pop
mov
shlb
cltd
dec
popf
bound
aam
lock
sub
jne
sti
adc
pmaddwd
repnz
data16
icebp
mull
mov
test
ret
lret
jmp
shll
add
outsl
cmpsl
in
fs
ds
stos
cmc
les
dec
orb
or
jb
cld
inc
jb
lea
lret
fsubr
stc
fstps
imul
lock
xor
xchg
arpl
int
and
xchg
sub
hlt
jmp
and
xlat
xchg
aad
or
mov
aam
outsl
cld
push
pop
mov
or
js
inc
pushf
push
dec
xor
fdivr
mov
leave
pop
repnz
mulb
fidivrs
popf
dec
push
lahf
push
mov
ss
and
insb
sbb
inc
and
push
pop
add
lret
push
jmp
insb
stos
inc
push
and
mov
mov
jb
xchg
pop
xor
sub
adc
cmp
dec
push
push
xchg
push
add
cltd
pop
mov
cmp
xor
mov
sub
push
lcall
sbb
movsb
in
sub
cmp
mov
inc
sub
and
enter
ss
mov
and
push
sbb
xor
push
sub
jl
push
or
adc
addl
gs
dec
and
pop
aaa
push
xor
mov
frndint
ss
mov
adcl
in
mov
test
sub
adc
pusha
in
jecxz
and
pop
mov
sahf
fcmovnb
mov
loop
jle
mov
pop
dec
ret
and
int
les
push
mov
mov
sub
mov
cmp
dec
mov
outsl
arpl
mov
lea
mov
popf
pop
cmp
sub
xor
clc
aas
int3
jge
in
clc
pushf
inc
jle
sbbl
ret
add
outsl
mov
fwait
xchg
cwtl
out
add
jmp
sbb
rcr
lods
fs
sub
cwtl
shrl
fnstcw
jge
imul
fdivr
arpl
dec
sub
cmp
mov
sub
cmp
mov
outsl
pop
push
lahf
cmc
fldenv
jne
sbb
imul
lret
popf
loop
fwait
mov
dec
inc
loop
cmp
jne
iret
pop
or
into
pop
fdivs
mov
jo
call
pusha
or
clc
cmpsl
mov
pusha
xchg
push
inc
add
pop
xchg
dec
dec
je
fcoml
iret
aad
push
lock
in
fsts
gs
ljmp
test
repnz
xlat
pop
andb
or
jecxz
xchg
nop
dec
fdivl
dec
cltd
mov
cmc
sub
loopnew
or
cmp
mov
test
lods
out
adc
mov
aaa
test
push
loope
xchg
ja
jae
add
sbb
pop
in
outsb
sbb
rcl
fidivl
fsubrl
xor
pop
outsb
in
lahf
mov
je
xor
push
in
or
sbb
inc
adc
xchg
xchg
aam
jo
idivb
push
push
int
gs
sti
lds
mov
andb
mov
sahf
or
testb
arpl
mov
pop
dec
clc
fisubl
mov
out
adc
sub
es
dec
xchg
jl
pop
shlb
lret
popf
push
test
icebp
mov
push
out
sbb
xorb
xchg
sti
hlt
mov
aad
dec
out
lahf
sbb
cmp
lock
call
mov
pop
test
push
dec
nop
cmp
sahf
lock
cmpl
scas
mov
pop
roll
jle
mov
mul
lahf
sbb
sub
adc
or
mov
mov
popw
dec
xor
sub
push
cmp
fcoml
pusha
pop
mov
pop
cmp
cmpsb
lahf
inc
push
adc
in
movsl
arpl
lahf
inc
or
pop
or
or
or
lds
lret
movsl
in
mov
jecxz
fnstenv
xor
push
mov
lock
mull
mov
pop
cmp
rcrb
jmp
out
cs
jp
xor
and
imul
dec
or
push
hlt
aas
jo
cltd
xor
lea
xchg
test
fdivrl
push
dec
jno
lods
dec
lods
and
insb
cmp
flds
loopne
imul
test
adc
stos
mov
inc
push
add
out
pop
adc
xchg
fnstsw
push
ds
int3
xchg
dec
std
or
or
fcoms
jge
inc
icebp
pop
and
adc
jge
mov
fs
daa
jg
shrl
dec
mov
iret
lods
iret
arpl
fisubl
and
and
or
loope
jne
push
pop
scas
stos
shrb
loopne
fisttps
push
bound
out
je
mulb
inc
lock
push
push
xchg
and
dec
inc
push
clc
das
clc
vandnps
sbb
mov
dec
pop
xlat
dec
and
stos
mov
mov
xor
sub
aas
sbb
xor
cmp
movsl
insb
push
fcomp
rep
xchg
xor
dec
cmp
cmp
or
or
sarb
lds
cltd
xchg
pop
ja
mov
sbb
sbbb
mov
xchg
and
mov
testl
stos
fistl
fidivs
lret
pop
fdivrs
in
xchg
xor
loop
sub
iret
cmp
dec
add
jns
in
mov
rolb
test
cmp
xchg
aam
test
sub
mov
aas
sbb
andb
les
or
mov
adc
fisubl
imul
push
xor
or
aam
mov
enter
dec
lret
jp
xchg
lret
ja
pop
dec
clc
add
dec
int3
jbe
in
lods
or
pop
fstpl
sub
jbe
psubb
out
stos
dec
jl
notb
dec
lods
aaa
adc
fnstsw
jecxz
add
sti
sbb
into
sbb
sbb
push
pop
mov
es
imul
push
mov
mov
sub
jb
rcll
cmp
inc
jae
pop
xchg
popa
pop
orb
movsl
pop
xchg
repz
jmp
push
sbb
xor
xchg
popa
ja
adcb
add
lods
mov
jge
push
inc
orb
dec
xchg
adc
out
sbb
lret
js
or
push
scas
mov
sarb
xor
jge
sbb
call
test
dec
or
push
mov
stc
std
fmul
fists
sbb
ss
add
and
push
bound
add
in
iret
out
idivl
pop
iret
sub
inc
push
loope
out
sub
sub
das
pop
mov
lods
cwtl
jns
add
inc
int
addl
lods
stc
inc
mov
push
and
insl
dec
cmc
push
bound
mov
add
rcll
push
repnz
and
pop
in
push
mov
push
stos
mov
dec
sub
fs
xchg
repz
mov
pop
sub
jge
mov
jo
scas
xor
jae
inc
dec
cmc
imul
xchg
mov
inc
mov
jb
xor
cmp
jg
lret
insb
push
imul
aaa
je
mov
lods
xor
and
jno
jne
xchg
mov
mov
ja
mov
xchg
inc
test
jne
rclb
pusha
and
add
sbb
push
xlat
ret
push
xchg
adc
dec
lea
clc
xchg
sub
sub
dec
bound
ljmp
rolb
sbbl
daa
sbb
dec
mov
push
xchg
iret
and
and
add
sub
adc
xor
stc
mov
cmp
or
adc
jb
mov
psrlw
adc
cld
and
imul
push
rolb
mov
push
mov
mov
mov
and
aad
and
call
pop
sbb
lock
adc
fcmovb
scas
or
inc
lret
push
pushf
xchg
testl
leave
jns
xchg
test
shl
mov
push
ljmp
mov
cmpsl
add
cmpsb
push
in
ja
sbb
stos
das
adc
cmp
imul
push
enter
adc
sbb
push
sti
lret
mov
push
cltd
mov
and
jmp
in
fs
inc
out
xor
decb
test
jle
cli
dec
mov
fwait
ss
fidivl
lock
xchg
sub
push
sti
lock
es
into
mov
jg
iret
stos
in
or
sub
lahf
xchg
enter
out
popf
mov
jmp
mov
ret
mov
notb
mov
xchg
xchg
int3
sti
in
adc
dec
push
mov
dec
push
ret
gs
sbbb
cli
add
aaa
push
stos
adc
pop
ja
cmp
xor
push
in
cmc
mov
stc
mov
sbb
push
push
jnp
sbb
dec
sub
lahf
inc
cmp
push
sbb
jne
push
int3
mov
mov
aaa
imul
mov
aas
fsts
pop
lcall
test
test
mov
sbb
in
sbb
push
shlb
jg
jns
cmp
mov
mov
fsubrp
dec
pop
dec
in
hlt
pop
dec
and
iret
mov
test
mov
subb
mov
adc
cmp
callw
push
lcall
pop
rclb
xchg
push
sub
push
outsb
loopne
aad
shrb
push
push
cs
movsb
lea
adc
jecxz
push
lock
stos
movsl
dec
repz
mov
pushf
fstcw
dec
jp
push
scas
in
in
lcall
arpl
shl
jg
pop
sub
jge
outsb
and
inc
shlb
scas
or
out
lcall
mov
cs
pop
pop
push
notb
cltd
jns
aas
mov
inc
mov
lock
jmp
movsb
mov
sbb
push
int
test
inc
decb
enter
outsb
pop
repnz
jne
imul
fwait
dec
cmp
or
mov
in
notl
push
fnstenv
out
jne
rorb
cmpsl
jmp
jg
xchg
pop
xchg
sub
sub
add
pop
xor
ja
clc
xchg
test
mov
xlat
mov
push
cmp
pop
mov
adc
cmp
xchg
cmpsb
cld
shrl
or
shll
in
imul
cmp
div
movsb
cmc
aam
jb
out
xor
add
mov
push
test
xchg
cmp
mov
xor
inc
mov
icebp
or
jne
lcall
inc
inc
jecxz
scas
pusha
ljmp
mov
out
mov
daa
add
iret
mov
gs
cs
cmp
sbb
ret
pop
notl
dec
mov
jnp
dec
jle
dec
inc
sub
mov
test
jae
jb
jno
xchg
lcall
sbb
jp
daa
xor
pop
xchg
push
xchg
ja
es
in
test
adc
pop
dec
xchg
clc
adc
es
addb
sub
fsub
mov
mov
jmp
xor
or
push
outsb
imul
cmpsb
insb
addb
fdiv
mov
pop
or
in
inc
add
aam
dec
push
push
cmp
mov
or
scas
cmp
les
dec
int
div
fildll
test
movsl
std
push
lds
jmp
sbb
icebp
incl
inc
adc
dec
add
xor
lods
or
push
jns
or
imul
adc
pop
xor
sbb
or
mov
aam
mov
fisttps
add
cmpb
fs
inc
popf
sbb
arpl
jnp
push
cltd
or
jp
movsb
aam
mov
lea
test
adc
cmpsl
int3
lock
mov
dec
sbb
xchg
sbb
fidivrs
stc
das
or
jns
jbe
mov
fsubrl
fnstenv
imul
lret
sahf
int
mov
lcall
jecxz
hlt
jns
cmp
neg
pop
outsb
loope
test
sbb
mov
mov
pop
add
dec
pop
loope
in
cmp
jg
lods
movsl
mov
lcall
push
pop
popf
cmp
pop
mov
push
mov
cmp
xor
iret
andl
xor
cltd
xchg
pop
popf
ds
mov
inc
pop
cmp
xor
sbb
cwtl
out
movsb
loop
dec
jmp
popf
push
or
mov
mov
clc
mov
shl
push
cmpsl
clc
mov
sub
insl
unpckhps
negb
pushf
sub
ja
es
adc
pop
mov
jo
push
adcb
mov
inc
fisttps
cmp
push
popl
and
fdivrl
fwait
adc
daa
lahf
lcall
loope
sbb
cmp
push
xor
and
lds
adc
inc
xor
int3
add
pop
mov
mov
insl
mov
test
insl
call
cli
cmpsl
cmp
movb
mov
sub
mov
cld
mov
dec
mov
xor
cmp
les
mov
rcll
push
sbb
rolb
push
mov
loopne
inc
ret
xchg
std
js
mov
cmp
sbb
sub
ss
cli
sarb
testl
leave
addr16
and
outsl
adc
push
adc
or
lods
xchg
shlb
aas
sbb
movb
cmpsl
inc
test
mov
jnp
sub
jle
inc
xlat
jne
cmp
jmp
test
push
push
mov
xor
mov
sbb
ds
mov
dec
test
int
pusha
sti
test
imul
inc
loop
fdivrs
mov
adc
xchg
in
and
cld
push
into
icebp
pop
jo
pop
stos
scas
aaa
mov
inc
xchg
xchg
movl
or
bound
insl
in
pushf
jg
sbb
and
add
int
das
jae
add
ficompl
sub
jns
je
rcll
popa
lcall
lret
add
inc
jns
loope
push
shl
insb
push
and
push
dec
insl
and
pop
fisubrl
arpl
das
xchg
rcrl
aaa
xor
fsub
dec
pop
shl
sbb
mov
sbb
in
jbe
cmpsl
push
or
andb
fsubrs
xchg
shlb
bound
or
xchg
dec
dec
stos
aad
rorl
int3
cmp
lock
insl
std
xor
and
mov
fimull
cld
jo
jo
pop
sbb
xchg
lret
or
dec
sbb
jne
adc
or
lods
pop
fisubl
jle
sbb
es
jmp
pop
rolb
inc
and
or
lds
cmp
xor
mov
adc
ss
push
pusha
gs
and
loopne
lret
jg
or
iret
stos
loope
dec
add
outsl
cltd
clc
dec
cmp
mov
xchg
and
imul
sbb
add
ljmp
jge
pushf
push
insl
mov
jae
cmp
cld
ja
cmc
int3
push
add
aaa
xchg
pop
push
clc
test
sbb
jb
stc
or
cmpsb
cltd
inc
pop
je
xor
add
jmp
cmpsb
cmp
push
mov
push
mov
lods
xchg
stc
shlb
dec
insl
lds
repnz
mov
pushf
cs
mov
pop
int3
loope
in
loop
mov
into
sub
inc
mov
std
jp
ds
mov
ret
add
xchg
or
inc
dec
leave
stos
aas
iret
outsl
pop
jge
insb
aas
int3
pop
fmull
mov
mov
cmp
push
jecxz
out
clc
mov
or
mov
ds
lock
push
push
sub
push
xor
or
sahf
cli
lcall
cli
add
add
xchg
out
mov
cmpsb
inc
jno
ret
xchg
das
stos
add
inc
pusha
lods
decb
jp
pop
sbb
int3
nop
ja
iret
adc
sub
add
xchg
nop
push
inc
push
ss
scas
mov
incb
inc
jns
sbb
js
push
dec
shl
or
mov
cs
xor
or
adc
outsl
push
out
and
mov
dec
sahf
sub
fldcw
stos
fistpll
add
mov
cmp
xchg
xor
mov
sti
dec
add
or
out
jecxz
hlt
ja
mov
mov
int3
call
jo
cli
lock
stc
ret
lods
fcomps
pop
fsub
jnp
inc
cmp
xor
dec
mov
cltd
out
icebp
xlat
xor
pop
cli
out
ja
insb
test
mov
ds
mov
clc
add
jnp
jns
cs
ljmp
loopne
scas
sub
jno
lds
iret
add
pop
pushf
subl
lock
int
mov
aas
fisubrl
cmpsb
jne
push
icebp
pop
out
mov
cmp
pop
push
jmp
add
sub
cmp
dec
pop
negb
sub
cmp
lret
mov
pusha
push
mov
ret
sbb
xchg
xor
jmp
dec
test
cmp
push
dec
test
gs
xchg
dec
icebp
dec
les
mov
ret
inc
xor
inc
aam
sub
jecxz
inc
sub
add
iret
daa
test
cmpsl
inc
bound
test
jbe
fisttps
mov
mov
dec
jae
mov
ret
jp
lret
xchg
ljmp
mov
adc
mov
xor
push
int
sub
cmp
orl
rolb
into
jne
inc
lock
aam
fistps
add
mov
inc
sub
or
fwait
js
iret
mov
cmp
xchg
mov
inc
ss
jnp
pop
sbb
sti
or
inc
or
dec
pusha
adc
in
add
jo
cmpsb
dec
dec
and
and
or
leave
leave
inc
push
cltd
lea
mov
jae
xor
or
dec
inc
imul
int3
pop
add
push
movsb
syscall
test
pop
outsl
mov
in
mov
pop
mov
out
int3
aas
push
inc
xorl
and
cmp
cld
call
outsl
addb
rclb
or
push
xor
ja
sti
dec
or
leave
xchg
loop
cli
pop
std
xchg
xor
stos
push
or
fstpt
adc
filds
scas
sbb
or
stos
and
enter
iret
int
test
push
mov
daa
push
sub
hlt
add
jge
pop
inc
lods
inc
ret
inc
cvtpi2ps
imulb
out
arpl
out
outsb
jbe
sbb
repz
sbb
and
push
sbb
hlt
rclb
into
add
jge
mov
movsl
pop
cwtl
mov
popa
clc
mov
cs
mov
dec
ds
jae
shl
jmp
inc
sbb
adc
movsb
and
out
sub
push
inc
push
push
sub
test
and
gs
xor
push
cmp
xor
cwtl
cmp
xor
std
push
mov
mov
sub
dec
lret
int
cwtl
or
sbb
sbb
xor
pushf
mov
mov
pop
xlat
repz
adc
mov
pushf
pop
pop
lcall
jno
mov
cld
mov
fcompl
and
outsl
jmp
or
mov
cmp
in
rcll
mov
sub
push
mov
ret
xor
in
shr
inc
add
mov
aaa
aad
mov
test
dec
xlat
cld
pop
cwtl
jns
ret
icebp
mov
and
push
mov
cwtl
mov
js
lea
mov
loopne
cmp
adc
movsl
mov
and
aas
jecxz
leave
shll
test
mov
or
daa
fcomps
push
outsb
imul
aam
push
lods
mov
sahf
stos
jb
pusha
sub
push
ret
insb
shl
ret
insl
push
add
jno
jno
nop
outsl
push
sbb
sbb
ds
int3
rcrb
enter
test
adc
inc
push
mov
nop
outsb
lods
testl
sbb
in
shrb
lds
pushf
adc
push
sub
outsl
pop
orb
xor
ljmp
push
xchg
mov
mov
int
movsb
pop
mov
cltd
push
inc
inc
and
sbbl
addr16
hlt
dec
sbb
mov
mov
cs
ret
dec
pop
daa
cmp
addr16
imul
xor
insl
leave
cmp
mov
jnp
push
inc
mov
leave
aam
insb
test
stos
adc
mov
cmp
dec
adc
xor
mov
sahf
mov
les
js
lret
pop
inc
insb
aam
test
ret
or
fwait
or
dec
out
and
rclb
stos
data16
pusha
xor
icebp
mov
or
sbb
lahf
mov
or
mov
addl
scas
or
cli
rorb
jb
inc
jmp
out
mov
fwait
dec
mov
and
jge
sbb
aaa
iret
xrelease
inc
mov
popf
jmp
imul
dec
in
cli
test
mov
iret
std
ljmp
pop
sub
mov
sub
pop
dec
sbbb
push
cmpsb
jne
dec
dec
inc
add
push
lret
bound
adc
cmp
dec
xor
mov
mov
and
stos
mov
imul
lcall
aad
push
loope
xchg
xchg
jnp
fsubl
and
push
fs
sbb
or
dec
daa
cmc
int
dec
lcall
pop
movsl
in
push
out
add
jmp
testl
push
mov
jno,pn
popa
push
out
lods
jo
inc
and
mov
dec
sbb
jge
dec
fwait
sbb
dec
int
out
or
sbb
icebp
cmp
rolb
rcl
inc
stc
je
pop
stc
xor
xchg
jo
push
cmp
int3
xlat
shll
inc
mov
popf
movsb
rcl
ljmp
pop
arpl
call
shrl
inc
mov
out
xlat
push
sarl
int
imul
repnz
dec
loopne
pop
push
outsl
cwtl
sub
mov
xchg
in
adc
addb
int3
ss
mov
loope
sbb
sarl
or
call
mov
xchg
mov
cwtl
jle
cli
fistpl
push
adc
adc
lock
jg
pop
mov
xchg
xor
push
frstor
cmp
sti
repz
cmc
mov
jns
movsl
add
cmp
mov
lret
jae
xchg
imul
test
repnz
cld
xor
inc
fldcw
add
pop
cld
sbb
out
out
pusha
sbb
pusha
sbb
arpl
add
adc
pop
mov
jmp
fisubs
ljmp
insl
loop
mov
lcall
pop
and
xchg
xlat
cmp
add
push
iret
add
inc
cmp
adc
cmp
mov
or
add
ljmp
lahf
out
aad
sbb
aaa
cld
and
lods
loop
cmp
dec
adc
cmp
adc
sub
fldcw
lods
or
dec
mov
pop
dec
xchg
dec
rcl
popa
mov
lret
push
cmp
pop
idiv
adc
orl
fdivs
jb
mov
xor
or
and
bound
pop
testl
mov
dec
jb
ljmp
sub
sbb
cs
dec
sbb
add
arpl
flds
cmc
pop
testl
decl
pushf
mov
ficompl
jae
sbbb
rorl
push
mov
push
psubusw
fsubl
fisubs
sbb
xor
jge
mov
xor
cli
sti
add
lea
push
sbb
aaa
wbinvd
dec
mov
scas
cli
stos
jge
into
sbb
inc
daa
subb
pop
lahf
or
stc
iret
mov
adc
sbb
mov
iret
jg
scas
lret
movsl
and
xor
lahf
jl
ljmp
adc
fs
add
mov
test
xchg
in
addl
popl
pop
push
cli
mov
iret
mov
test
ret
stos
ss
push
inc
mov
popa
cmp
jb
insb
dec
jns
adc
notl
cltd
clc
pop
jmp
icebp
ljmp
mov
addl
mov
sbb
pop
sub
scas
fdivp
aaa
jecxz
scas
clc
sub
adc
adc
dec
inc
or
loope
mov
ss
adc
imul
ret
stos
sbb
inc
inc
roll
cli
stc
pop
add
movsl
xor
stos
xchg
jnp
or
jge
das
xor
mov
xorb
scas
jnp
pop
pop
pusha
icebp
ret
aam
out
fucomi
orb
inc
inc
jl
loop
lret
mov
repz
jp
movsl
in
pop
mov
sub
mov
mov
fistps
lret
cmp
dec
mov
in
adc
lock
imul
sub
dec
nop
gs
mov
bound
mov
cmpsl
fldt
fimuls
cwtl
mov
mov
sub
shll
or
sub
lods
xchg
and
shlb
sbb
adc
outsl
push
sbb
inc
aam
dec
daa
jbe
fs
hlt
call
or
aam
xor
jb
out
js
fsubrl
iret
aam
aas
cmpsb
inc
pop
fwait
or
push
loopne
jecxz
mov
out
pop
jo
gs
jp
les
adc
loopne
adc
into
adc
push
shrb
dec
sahf
inc
imul
pop
sbb
and
inc
leave
mov
xor
sub
add
cmp
lock
jge
push
mov
sbb
icebp
cs
cmp
push
or
and
lcall
repz
sub
inc
adc
jg
dec
dec
cmp
nop
dec
rcrl
mov
jl
pop
lcall
mov
rcrl
aam
xchg
mov
andb
and
inc
imul
cmc
pop
out
fldt
sbb
pop
mov
pop
and
les
out
rorl
dec
and
jne
push
mov
sub
test
ds
jno
sbbb
dec
xor
jnp
push
stc
ja
add
xor
mov
pushf
andb
addl
ja
cmp
mov
pop
into
dec
xchg
xorl
cld
mov
dec
sti
mov
inc
mov
inc
sbb
in
jecxz
inc
ret
bnd
cli
push
cmpl
mov
jg
call
addr16
pop
sar
add
lret
xor
lret
fisubrs
iret
mov
outsl
rcl
cltd
dec
out
sbb
std
pop
add
mov
clc
pop
aad
adc
int
sbb
nop
push
outsb
inc
push
mov
mov
cmp
cmpl
loopne
mov
inc
imul
mov
pushf
shll
mov
stos
adcl
push
movsl
into
jae
aaa
inc
xlat
addr16
jbe
rcrl
mov
into
push
insl
rcll
in
jns
dec
imul
scas
sbb
ret
pop
dec
add
jp
inc
mov
es
mov
cwtl
jns
rorl
out
jnp
stos
push
aad
jecxz
jno
mov
loop
sbb
cmp
mov
mov
cmp
mov
repnz
sbb
inc
lods
roll
mov
in
int3
jb
fwait
sub
sahf
jne
sub
add
popa
pop
xchg
xor
lock
insb
push
inc
jecxz
loopne
shl
into
les
push
jb
lahf
in
pop
push
fisubl
sub
xor
fs
inc
shl
push
cmp
fmull
jns
sbb
icebp
push
mov
in
mov
mov
aad
dec
mov
test
js
pop
lds
add
push
mov
icebp
mov
scas
sbb
les
and
mov
popf
lods
sub
pop
pop
adc
test
mov
xchg
jecxz
pop
jecxz
aaa
adc
nop
mov
jbe
or
lret
xchg
xchg
mov
pop
push
dec
sub
and
jns
xchg
xlat
adc
or
nop
dec
daa
sahf
popa
cmc
mov
push
xchg
and
push
sub
imul
mov
inc
icebp
mov
loopne
arpl
and
pusha
lret
aas
xchg
sub
mov
xchg
push
or
dec
dec
lret
ficoms
call
pop
les
push
mov
mov
pop
cwtl
cmp
and
fcmovu
lret
es
add
inc
rcll
addr16
or
movsl
mov
aad
outsl
bound
lea
lcall
mov
seto
testl
pusha
sbb
aas
or
xor
xchg
icebp
das
lock
clc
cmpsl
je
lods
lock
inc
add
add
sbb
sub
stos
popa
das
gs
in
shrb
pop
sbb
scas
leave
mov
cmp
fistpl
dec
shrb
das
xor
xor
xlat
xor
mov
pop
push
cmp
nopl
push
or
jae
cmp
leave
or
jnp
imul
cli
out
dec
outsl
es
ret
inc
aaa
enter
aas
mov
mov
insb
cld
mov
aas
loop
fst
cwtl
pop
lock
mov
sbb
out
adc
adc
adc
sub
out
arpl
and
mov
lds
push
mov
pop
fucomip
push
jno
dec
lock
adc
xlat
lret
pop
movsl
adc
lahf
or
and
sub
cmp
jl
test
push
js
pushf
std
divl
out
pmaddwd
das
icebp
xor
cmc
cmp
sarl
cli
rol
shlb
jecxz
xor
mov
loope
gs
push
push
xchg
sbb
nop
jp
sub
mov
and
test
lods
lock
sub
mov
mov
adc
xchg
stos
outsb
arpl
inc
add
mov
or
push
xor
ds
subb
mov
enter
mov
jae
sbb
xchg
icebp
shlb
mov
dec
dec
pushf
icebp
adc
lods
dec
push
fs
in
jo
aas
cmp
and
cmc
sbbb
inc
fs
push
dec
add
lds
test
jns
lock
pop
test
jge
push
shr
out
rcr
pusha
jae
pop
lods
imul
inc
rcr
push
push
loope
inc
push
and
gs
sbb
sub
lret
or
movsb
dec
and
aad
mov
adc
inc
leave
or
add
addr16
or
mov
and
inc
sbb
dec
cmpsb
mov
enter
or
idivl
mov
xchg
fisubs
test
pop
andl
mov
add
lret
cltd
ja
enter
push
or
lds
mov
mov
pop
sub
pop
mov
fiadds
sub
xchg
stos
insl
es
xchg
jg
cmpsl
push
fwait
bound
sbb
stos
cli
mov
outsb
jns
fidivrs
out
std
mov
movsl
inc
data16
mov
scas
push
clc
inc
repnz
imul
mov
jnp
jmp
mov
mov
pop
aam
mov
orl
or
xchg
test
scas
call
sbb
or
lret
mov
sbb
xchg
mov
sbb
jns
jg
jge
xor
mov
lret
out
jecxz
cld
pop
xchg
push
insl
repz
rclb
cmpsb
test
into
adc
jno
fmuls
sbb
pop
adc
test
rclb
sbb
fidivrl
adc
lret
inc
xchg
mov
inc
jae
jno
lods
test
push
je
push
and
daa
inc
mov
into
sbb
lock
sub
mov
lods
imul
test
mov
test
movsb
and
jmp
cmp
dec
xchg
add
inc
sub
movsl
lcall
sbb
test
fdivl
std
pop
mov
jmp
int3
lret
adc
ror
mov
fsubrs
add
rorl
cwtd
repz
and
inc
pop
js
sub
mov
std
push
ret
xor
aas
inc
repz
dec
jle
adc
test
popa
das
arpl
in
mov
inc
out
push
mov
movsb
xor
pushf
cmp
in
dec
or
jae
xor
jg
enter
aas
sbb
mov
stos
sub
cmp
add
pusha
mov
add
dec
lcall
or
into
push
int3
mov
int3
add
jp
push
repz
std
dec
pusha
lods
pop
dec
xchg
test
dec
mov
sub
and
int3
stos
pop
loope
adc
adcl
sbb
sbb
adcb
push
lea
pop
push
sub
mov
push
lcall
sub
sbb
int3
xor
mov
inc
or
pop
lret
lret
dec
push
mov
pop
nop
mov
xchg
xor
jle
pop
cltd
mov
cmp
xchg
stos
push
adcb
adc
push
ja
pop
pop
jno
stos
dec
jecxz
cmp
incl
inc
shrl
adc
mov
inc
cmp
scas
mov
mov
cmp
movsl
cmpsb
xor
ret
inc
xor
gs
lds
mov
push
pop
jmp
sub
xor
fdivl
sub
loop
addb
inc
or
fwait
push
xor
jae
xlat
xchg
aad
push
xor
mov
js
mov
xor
inc
ret
imul
loop
les
add
notl
mov
ja
push
out
mov
dec
movsb
sbb
inc
mov
lods
lcall
or
mov
pop
push
ljmp
sub
outsl
imul
pop
movsl
inc
mov
pop
test
mov
mov
mov
jmp
repz
sub
lret
lods
aaa
popa
les
jno
enter
push
dec
adc
pop
imul
xchg
inc
pop
mov
das
inc
mov
mov
and
cmc
mov
clc
pop
mov
sub
out
aam
dec
push
pop
cmp
nop
sbb
inc
leave
popf
addr16
mov
clc
dec
aaa
cmpsl
repz
andb
hlt
rcr
xor
sub
adc
jp
jp
mov
sub
pop
incl
xor
mov
or
aaa
jecxz
mov
ja
pop
in
inc
mulb
iret
stos
data16
insb
cmpsl
and
push
out
cld
repz
aam
lods
xor
ds
mov
jb
jg
stc
in
dec
add
mov
push
ret
str
scas
rorb
test
ljmp
cmp
xlat
cmp
fwait
subl
pop
push
cwtl
dec
sub
int3
mov
jl
subb
dec
xchg
notb
rolb
popa
in
int3
cmp
fucom
es
add
add
jmp
pop
xchg
adc
lds
stc
cmp
sbb
inc
sub
cwtl
sub
dec
adcl
jmp
dec
inc
lahf
push
int3
or
cmpl
out
out
cmp
hlt
pop
sbb
enter
lods
mov
stos
pop
push
sub
decl
xchg
ljmp
cli
pusha
leave
icebp
and
mov
addr16
stc
jmp
es
cmp
dec
sti
or
xor
aaa
push
mov
test
je
xor
repnz
pop
jp
dec
aad
xlat
push
ljmp
jbe
pop
and
cmp
push
mov
lret
bnd
movsb
arpl
xchg
out
mov
or
mov
mov
add
or
mov
mov
push
pop
sub
xchg
jnp
adc
sub
sub
mov
hlt
cltd
es
xchg
sbb
inc
testl
push
insb
mov
pop
sub
bound
jnp
sbb
les
lea
mov
jp
mov
pop
aam
sub
mulb
mov
push
jnp
xor
mov
andb
xlat
aaa
jl
fs
fs
cmp
inc
sub
dec
inc
stc
jmp
movnti
loope
jge
cmp
ja
in
outsb
sbb
in
cmp
movsl
cmp
jecxz
fwait
movl
pop
mov
lea
fimuls
or
into
push
neg
push
cwtl
add
idiv
pop
or
sbb
jle
xchg
jp
mov
add
xor
stos
cld
pop
mov
jge
xor
ret
repnz
repnz
pop
cltd
idivb
push
rolb
mov
inc
pop
mov
fldl
ja
shrb
push
cmpsb
loop
push
jae
je
data16
mov
mov
les
gs
mov
imul
sbb
fcmovu
mov
xchg
out
dec
sbb
cli
dec
xor
or
aam
add
icebp
outsb
out
in
les
fdivl
fildl
mov
cmp
pop
imul
std
stos
loopne
test
ret
mov
sahf
in
arpl
xor
pusha
or
dec
or
dec
or
in
idivb
addr16
xlat
or
sahf
rep
outsb
dec
fdivs
mov
xor
inc
pop
dec
mov
rcr
xor
cmpsl
popa
adc
add
loop
fs
ret
sahf
cmp
fsubrs
out
push
pop
xor
pop
pop
sti
loop
cwtl
outsb
mov
rcll
lret
mov
jbe
stos
cmp
hlt
and
mov
popf
fadds
push
outsb
mov
jle
icebp
rorb
cmp
sub
or
cmpsl
jecxz
xchg
sbb
bound
lods
fistl
stc
cmp
dec
and
mov
cmpsl
push
and
std
pop
enter
imul
fwait
ja
xor
mov
fwait
stos
and
or
lea
iret
inc
cs
fdivp
pusha
mov
dec
fstl
aaa
dec
rolb
lcall
lret
add
mov
iret
rorb
rcrl
les
mov
and
mov
or
icebp
push
outsl
ljmp
xchg
fnstenv
xchg
pop
je
stos
adcb
or
test
test
cltd
out
cmp
cmp
xchg
outsl
mov
adc
mov
inc
fists
pushf
int3
jp
lea
mov
pop
sbb
clc
push
add
sbb
mov
lret
out
aas
pop
sbb
lcall
mov
jge
lods
sahf
adc
pop
scas
and
in
fs
add
push
popf
lods
inc
adc
pop
lea
push
adc
adc
xor
mov
ret
adc
jle
xor
lahf
popa
ljmp
or
pop
outsl
push
and
les
sti
jl
mov
inc
mov
mov
addr16
jge
das
cwtl
push
mov
mov
sbb
and
xlat
jne
push
aaa
iret
rol
cmpsl
pop
mov
push
xchg
cmpsl
daa
sarb
sub
push
ret
icebp
shll
jnp
ljmp
jne
sub
icebp
dec
addb
jp
iret
xchg
pop
leave
loopne
mov
outsl
outsl
out
insl
or
xor
ret
fwait
lds
lcall
cmpsl
ret
ret
xchg
in
cld
or
jmp
int3
inc
loope
test
sahf
rcrb
and
mov
cmp
addr16
fistps
sbb
cmp
bound
testl
and
add
mov
pop
jecxz
fsubrs
mov
xor
dec
flds
arpl
push
adc
push
rcr
bnd
test
dec
js
les
jecxz
cs
sbb
sti
lock
pop
xor
sahf
in
jnp
mov
cli
sahf
push
inc
movsl
push
mov
fcomps
pop
adc
test
setg
sub
mov
arpl
lods
test
es
negb
push
into
push
icebp
xchg
inc
leave
xchg
sub
xchg
pop
pop
enter
xchg
repnz
mov
rorl
or
test
mov
jne
js
mov
inc
and
cs
addr16
insl
mov
in
push
sub
in
loopne
pop
jmp
pop
pop
and
adc
mov
decb
mov
lret
fcoml
pop
add
lock
lcall
or
cmpsl
sub
rcr
jmp
shll
mov
dec
or
shll
int3
mov
push
cld
cltd
cld
shr
push
sub
sub
addr16
lret
push
jb
test
aas
mov
pop
xchg
stos
cmc
or
pop
rclb
ret
popa
imul
mov
fucomi
and
lods
into
xchg
rorb
fsubrs
push
pop
aam
test
mov
loope
hlt
inc
orb
jl
sub
in
mov
lcall
xor
dec
sbb
lds
arpl
jne
pop
jge
fstl
hlt
xor
fwait
or
or
xchg
lds
mov
loope
fs
sub
mov
dec
jnp
add
and
aaa
addl
ret
inc
sar
jno
push
sbb
mov
out
enter
out
jo
mov
sub
stos
addr16
jne
fldcw
lods
idivb
cmpsb
pop
daa
je
loope
pop
scas
in
push
bound
adc
lret
imul
test
adc
push
xor
jl
cmp
rclb
cmpsl
es
or
mov
mov
popf
ljmp
jb
repz
js
add
lret
inc
jle
idivl
fwait
int3
and
cmp
lea
jecxz
movsl
orb
lds
mov
gs
das
inc
roll
jg
jecxz
mov
imul
cmpsl
rcrl
and
pop
add
dec
mov
push
xchg
leave
stc
inc
fildl
mov
cmpsb
mov
jnp
cmp
xchg
ret
stos
aam
loope
ja
cmpsb
imul
xchg
push
data16
inc
mov
push
cld
int
cmp
cmp
xchg
mov
push
pop
xchg
orl
gs
xor
mov
dec
int
cmc
test
mov
lock
xor
nop
add
ret
push
mov
xor
divl
mov
es
aam
std
mov
xor
sbb
push
inc
mov
add
jnp
repnz
loop
jg
pop
xchg
jo
adc
addb
sti
add
xor
sbb
stc
in
in
sbb
movq
pop
mov
sub
push
cs
inc
inc
push
lret
cld
lds
call
andb
fwait
pusha
sub
add
in
aaa
mov
fsubrs
xor
and
hlt
dec
mov
cli
push
mov
xchg
xchg
cmp
push
test
xor
jle
mov
outsl
cmp
sbb
jae
jne
dec
xchg
push
push
out
pop
stos
xchg
pop
sub
add
ja
lahf
mov
call
stos
adc
mov
loope
adc
mov
dec
inc
loopne
in
fldenv
shrl
mov
sbb
sbb
sbb
cltd
sbb
scas
xchg
mov
sbb
pop
div
xchg
or
in
pop
pop
aaa
inc
mov
mov
aam
mull
pop
inc
pop
fldcw
mov
rolb
or
or
xchg
sbb
and
sbb
dec
test
sbb
sub
pop
xor
cmp
sub
cltd
and
sbb
lret
std
movsb
popf
pop
mov
imul
push
add
adcl
fcompp
mov
cmp
jae
fisubrs
xchg
xchg
pop
in
mov
into
scas
dec
js
je
outsb
inc
xor
or
push
lret
inc
out
jmp
call
jo
pop
xchg
stc
fwait
inc
pop
in
rorb
xchg
or
sbb
out
cmp
cmpsl
aad
push
xor
test
mov
cs
ficoms
aad
fistpl
in
mov
and
sti
xchg
shll
test
push
lock
jo
inc
dec
xchg
jae
fidivl
fs
insb
ficompl
xchg
outsb
daa
xor
lahf
in
test
in
rcrl
mov
aad
sbb
xchg
add
and
jecxz
stc
adc
push
fcmovb
icebp
stos
fistpl
sbb
lds
add
sub
ljmp
icebp
inc
mov
jg
arpl
mov
mov
lahf
push
dec
outsl
or
sahf
ret
int
mov
popf
vpaddw
outsl
divl
idivl
push
and
jge
push
ss
bound
or
sub
cmp
mov
sbb
sbb
hlt
push
pop
in
lock
mov
imul
test
add
inc
inc
rorl
fistpl
mov
pusha
pop
nop
and
fsubrl
daa
xchg
out
pusha
or
pop
add
bound
cmp
sbb
les
stos
push
clc
out
push
push
dec
movsb
sbb
call
push
imul
xchg
sub
push
aam
xchg
iret
push
outsl
cld
mov
inc
repnz
mov
shr
movl
data16
inc
loopne,pt
aas
gs
jge
xor
mov
inc
sbb
xchg
mov
sbb
cmpsb
jns
xor
test
repz
push
and
push
clc
call
jb
std
mov
inc
mov
icebp
out
pop
jp
sbbl
cmp
sahf
xor
add
xlat
or
jg
movsl
adc
dec
jp
jo
enter
add
push
push
bound
adc
call
idivb
sbb
pop
mov
mov
jae
out
cli
pop
push
call
je
pop
movsb
lret
adc
and
cmpsb
outsl
push
xor
lcall
in
imul
fisttpll
rclb
push
mov
inc
push
cltd
je
push
loope
pop
mov
xor
jnp
pop
xchg
outsl
in
mov
jne
jmp
xor
jl
daa
add
mov
mov
out
dec
mov
aad
bound
data16
jb
pop
inc
pop
sub
dec
jb
and
shll
add
outsl
movsl
push
loope
mov
daa
xorb
jns
cmp
scas
pop
test
sub
int
cmp
mov
mov
lock
and
test
sbb
cmpsb
lds
insl
aas
jb
arpl
mov
scas
cmp
and
adc
xchg
mov
cmp
jne
mov
inc
mov
inc
push
fs
popf
jne
push
sub
aad
push
jmp
shlb
loope
rcrb
iret
pushf
cmp
pusha
jne
or
cs
pop
jns
or
jae
cld
mov
mov
out
cs
ja
test
jns
clc
pop
cmpsl
push
xchg
push
insb
test
dec
imulb
aas
add
mov
ror
je
dec
js
repz
cmp
add
pop
xchg
cmp
dec
xchg
xor
fiaddl
loop
mov
or
lock
cs
push
jnp
mov
js
jno
fisubs
pop
adc
popa
loopne
mov
inc
dec
lahf
add
out
mov
pop
jl
fs
sub
jl
mulb
mov
out
test
insb
push
roll
inc
sbb
test
cld
sbb
xchg
push
mov
add
cmpsb
mov
mov
movsl
out
cli
xchg
dec
xor
rcrb
push
jecxz
inc
xchg
xor
cli
fidivs
adc
adc
lret
mov
xor
and
out
push
xor
jge
cwtl
pop
icebp
xor
jnp
fistps
pop
xchg
jne
xor
arpl
mov
or
dec
jno
jl
pop
out
sub
push
loop
adc
mov
jne
loop
sbb
pop
test
pop
into
xchg
std
jbe
lcall
arpl
call
push
push
pop
jp
push
xor
sbb
mov
test
insb
sti
push
fbld
adc
test
adc
int3
fisubrl
addl
jmp
xchg
push
pop
pop
enter
and
pop
xchg
aam
insb
js
adc
jmp
mov
dec
push
pop
jae
mov
jge
int3
imul
xchg
aam
cmpsl
add
arpl
sub
cmp
push
lods
add
push
cltd
and
nop
aad
add
jg
xlat
cli
jmp
aad
sbb
mov
popa
fbld
sarl
test
out
mov
scas
jp
mov
jmp
jnp,pn
lcall
pop
dec
ds
inc
testb
push
xlat
mov
cmp
test
jge
xchg
xchg
inc
stos
mov
xchg
ja
sbb
cmp
das
push
mov
pop
test
and
pop
popf
add
pushf
mov
ret
inc
pusha
pop
fsubrs
jmp
push
insl
stos
push
push
xchg
and
sbb
or
loop
adc
jbe
fmuls
mov
and
pusha
dec
sbb
imul
jl
and
add
shlb
das
js
rclb
repz
shlb
sub
lcall
mov
cmp
xchg
ret
fcomps
inc
cmp
aaa
fs
sbb
push
ret
adc
xchg
jle
repnz
and
mov
cs
insb
jle
loopne
fidivs
or
inc
arpl
imul
sub
inc
dec
xlat
loop
push
sub
pop
lock
out
fdivp
in
fiaddl
xor
or
in
stc
sub
jge
movsb
aas
push
xor
push
stos
filds
add
cmc
cmp
cmp
arpl
jne
mov
add
add
mov
mov
or
shll
xchg
push
xor
mov
lahf
mov
push
push
movsl
sbb
add
push
hlt
movsb
insl
cmpl
mov
pop
in
xchg
mov
cmp
shlb
dec
icebp
test
push
xchg
mov
push
and
mov
push
pop
sub
shlb
aas
shrb
dec
punpckhdq
stc
push
mov
jmp
negb
fwait
add
push
test
inc
shl
jl
jle
in
fcoml
mov
jne
xchg
rolb
fcmovu
mov
faddp
mov
je
push
fimull
xchg
sbbl
add
cmpb
mov
cmpsl
dec
adc
add
pop
xchg
popf
daa
and
jns
xor
dec
movsl
out
jp
pusha
xchg
push
adc
aaa
dec
xchg
jnp
inc
sbb
popf
cli
fsubl
and
dec
in
adc
rcl
and
add
sub
pop
sub
ret
aad
mov
xchg
mov
add
loope
mov
jb
add
les
rcrb
or
mov
pop
loope
aad
push
negl
inc
and
mov
lcall
mov
xchg
fwait
pop
or
cmp
xor
dec
xor
add
mov
imul
mov
xor
lret
lcall
outsb
stc
cmp
pop
dec
cmpb
dec
sarb
xor
scas
jae
sti
xor
jbe
sti
test
in
cmp
mov
cmpsb
adc
mov
xchg
test
inc
xor
dec
jb
in
rclb
lahf
movsl
fwait
fwait
mov
push
adc
dec
jl
push
das
loop
sbb
push
mov
lcall
and
adc
adc
imul
adc
and
xchg
dec
sub
xchg
cwtl
xchg
sti
cwtl
push
in
sbb
dec
or
in
rcll
inc
repnz
xchg
push
outsb
rorb
mov
test
mov
or
xor
fidivrs
push
into
mov
outsb
cmc
mov
jg
insl
pop
rclw
pop
push
inc
adc
cmc
push
je
icebp
lea
daa
xor
shl
sub
shlb
and
stos
loop
jns
mov
add
ljmp
pop
xlat
or
sub
dec
pop
mov
add
adc
aas
stos
pop
pop
pop
imul
je
das
mov
jns
cmpl
jne
push
mov
add
jg,pn
out
ds
xchg
cmp
call
mov
and
ret
popa
sbb
xchg
dec
add
inc
cmc
push
and
lea
cmp
stos
pop
inc
mov
nop
jnp
adc
cmova
clc
push
xor
and
rclb
data16
ljmp
bound
push
cltd
in
negl
dec
push
out
xchg
cmp
push
mov
jno
or
jae
pop
pop
push
pop
js
or
cmp
mov
jmp
decb
sbb
jnp
ljmp
in
xchg
insl
pop
cwtl
nop
ja
mov
inc
ret
and
lea
test
cltd
pop
jmp
mov
daa
ret
fsubs
mov
adc
dec
loop
out
cmpsb
stc
and
call
icebp
ja
std
dec
test
jl
daa
ds
aas
loop
mov
gs
bound
or
xor
or
lcall
fs
in
mov
mov
hlt
sbb
outsb
add
push
lea
addb
add
and
stc
cmpsb
repnz
loop
imull
adc
gs
inc
push
arpl
movb
andl
call
adc
je
cli
cmpb
inc
stc
adc
mov
aas
cmpsl
and
lods
push
mov
andb
mov
fcmovu
sbb
stos
dec
pop
cmpsl
cmp
out
mov
call
mov
push
outsb
pop
cmpsb
add
inc
scas
xor
fsubrl
cmpsb
adc
jno,pt
xchg
cmp
outsl
push
aas
dec
sbb
es
daa
imul
push
mov
xor
mov
stos
fadd
filds
pop
stos
jo
lcall
in
cmp
fcmovnb
push
push
leave
sbb
loopne
cmp
or
xlat
and
mov
movsl
adc
lcall
fyl2x
repnz
fisubs
icebp
iret
push
pop
movsl
rorx
jb
xor
sbb
not
mov
mov
xor
pop
mov
sub
push
bound
scas
shlb
ret
incb
xchg
cs
jg
xlat
xlat
cltd
dec
sub
int3
mov
mov
mov
aam
mov
arpl
lock
adc
pop
out
bound
adc
cwtl
jne
sub
jnp
mov
int3
and
in
popa
and
jl
stos
nop
jle
aam
dec
fisubrs
jl
arpl
xchg
ds
xchg
jae
fwait
pushf
lds
inc
mov
sbb
xlat
mov
js
push
mov
jge
lcall
or
ficomps
mov
xchg
shll
lahf
lods
and
xchg
mov
and
jge
push
mov
xchg
push
popf
movsl
ljmp
arpl
pop
vorps
rorb
xchg
data16
icebp
jmp
mov
adc
xorb
in
mov
push
mov
sbb
enter
sysret
out
es
int3
mov
xchg
aas
add
call
daa
mov
fiaddl
pop
dec
in
xlat
gs
mov
dec
outsl
ja
gs
cmpsl
cld
push
cmp
jne
lods
iret
cmp
mov
sub
or
xchg
inc
pop
and
inc
pushf
add
out
in
fisubrs
jle
mov
jmp
mov
or
test
iret
leave
es
cmp
mov
xor
in
sbb
mov
pop
jmp
mov
push
push
adc
sbb
fdivrs
popf
les
gs
lods
out
add
lret
std
lahf
lahf
pop
movsb
bound
nop
mov
add
mov
inc
rclb
adc
jne
cmp
or
aaa
or
pop
int3
mov
add
shll
sbb
sti
inc
clc
imul
clc
jmp
cwtl
and
lock
cli
adc
mov
or
in
sub
cmp
mov
jae
aaa
int3
lods
sub
sar
sub
jecxz
inc
mov
cmp
rclb
ffree
stos
fs
or
fs
add
pop
sbb
imul
out
daa
jl
fldt
mov
sub
push
sahf
lret
mov
push
dec
test
pop
sbb
out
ljmp
enter
fsubr
jl
stos
add
das
mov
pop
dec
das
shll
pop
mov
and
pop
mov
jmp
xor
xorl
inc
dec
fs
cmp
lcall
rorl
outsb
daa
shl
aad
negl
lret
or
mov
push
xor
cltd
mov
jo
aam
jno
imul
fisubrl
les
pop
sbb
js
in
lds
push
pop
xor
push
or
inc
fimull
aam
xor
fisubl
fsubs
ud0
ret
add
xchg
mov
sub
push
dec
pop
lds
xchg
push
aad
jmp
sub
push
jecxz
loopne
pop
out
orl
dec
add
rolb
mov
cmp
dec
rclb
call
incl
add
popa
in
fbld
push
fsubr
push
jg
adc
fcom
mov
cmp
xor
jge
and
lret
adc
call
loop
or
into
jge
push
jl
scas
cwtl
add
push
add
push
test
enter
pushf
das
test
test
daa
xchg
shrl
xorb
insb
mov
inc
shrb
rclb
push
outsl
dec
pop
or
pop
cmpb
pop
jecxz
sub
scas
pusha
inc
out
adc
les
or
add
or
jns
outsl
pusha
fildl
dec
cmp
ja
jmp
out
mov
cwtl
add
mov
test
addr16
je
jnp
jle
icebp
inc
and
jbe
adc
jl
push
push
cltd
fildl
movsb
lds
lods
xor
mov
xor
insl
jbe
and
xchg
mov
sub
mov
lock
andb
fcompl
and
sub
jb
stos
mov
add
and
jno
push
ret
lret
ljmp
and
cwtl
push
pop
adc
nop
test
clc
push
sub
inc
mov
mov
enter
in
xchg
lret
and
xor
lret
test
fadds
mov
pop
xor
leave
jle,pt
inc
sub
lock
sub
ljmp
pop
jno
in
fmul
xlat
hlt
sbb
fists
mov
dec
push
shrb
push
fidivs
movsl
jmp
jmp
sbb
out
mov
repz
test
jp
or
and
scas
mov
xchg
sbb
adc
rcl
jmp
out
push
stos
rcrl
mov
inc
or
cli
sbb
js
mov
fucomi
cmp
fs
and
cmp
fistpl
call
lods
xchg
mov
movsb
das
mov
pop
mov
iret
cmpsb
dec
icebp
lods
scas
rorl
roll
sub
sbb
mov
sbb
sbb
ret
and
xchg
push
std
stos
cli
psadbw
ret
ljmp
mov
je
sub
xchg
pop
test
xor
cs
enter
mov
push
flds
xlat
jp
xor
mov
aad
ja
sbb
adc
fldl
adc
leave
jno
xor
pop
in
mull
subb
nop
pop
sbb
lret
push
rcrb
lods
aad
mov
cmp
adc
cld
rclb
cmpsl
jp
data16
imul
shlb
js
push
fdivs
stos
pop
adc
mov
fmuls
jnp
fisubrs
xchg
and
cmp
mov
sar
xor
das
mov
in
mov
lock
mov
cmpsl
cmpb
adcb
inc
in
mov
pandn
cmp
pop
out
imul
lahf
cs
pop
sub
in
sub
cli
inc
and
add
pop
inc
lcall
insb
icebp
xor
cmc
xor
push
test
push
mov
rol
int3
icebp
test
mov
mov
fistl
pop
mov
cmp
mov
push
mov
xchg
es
popa
ds
cmp
jp
ret
sub
dec
jl
pop
adc
fs
arpl
or
mov
xor
xor
lcall
test
mov
pop
lcall
js
scas
push
cld
loopne
cmp
lret
cli
jge
dec
xchg
xor
lock
push
sub
push
add
jo
aas
ficoms
call
and
ret
pop
or
and
xchg
les
mov
adc
mov
adc
out
fimuls
es
subb
sub
and
insl
aam
mov
mov
sbb
dec
fsts
repnz
push
ljmp
or
push
or
cmpsb
cld
pop
jne
inc
add
mov
fsts
push
repz
cmp
mov
clc
scas
cmc
addb
or
xchg
lret
dec
add
mov
out
rol
flds
subb
push
jg
imul
inc
fistpl
push
dec
mov
mov
push
je
sbb
cmpsb
adc
fcmove
addr16
push
leave
xor
xchg
loop
and
xchg
dec
xchg
sbb
aam
jnp
repz
scas
rcrl
sub
pop
sub
adc
aaa
mov
test
in
xor
dec
mov
jg
mov
pop
outsb
stc
jnp
hlt
lahf
adc
icebp
mov
mov
jmp
in
cltd
xchg
and
xor
iret
push
xor
dec
pop
mov
ret
sbb
mov
sbb
inc
xchg
data16
jne
mov
mov
or
sub
or
clc
das
fcompl
loopne
bound
out
clc
les
dec
in
loopne
aad
sbb
xchg
out
clc
neg
stos
jo
lret
mov
fstl
pop
jecxz
pop
jl
in
popa
sbb
and
and
inc
lea
cmpsl
jecxz
mov
lahf
xchg
test
das
fdivl
or
jo
sbb
xchg
and
repnz
ja
add
sbb
iret
xchg
cmp
sbb
lret
or
cmp
js
jle
inc
jnp
dec
jns
ss
in
stos
inc
jne
and
out
aam
es
stos
jns
div
or
jmp
jnp
xchg
sbb
jmp
rol
es
sub
and
stc
lcall
test
neg
fwait
xor
adc
in
inc
and
mov
push
repz
jb
or
push
ficoms
fcomps
gs
jmp
repnz
adc
imul
adc
loope
push
jle
sbb
out
lret
mov
xchg
arpl
roll
xchg
push
and
repnz
jbe
lret
cs
xchg
jnp
mov
dec
sub
mov
test
mov
mov
sub
add
fwait
shrb
xchg
push
popf
mov
and
into
sti
lahf
adc
xorb
xlat
pusha
dec
mov
mov
sub
fidivs
mov
test
fistps
aas
clc
in
push
push
push
pop
mov
or
push
mov
or
xchg
and
nop
inc
add
sub
out
push
mov
ja
push
xchg
rclb
or
and
or
in
inc
xchg
push
cmp
jo
notb
or
add
sub
push
rorl
aam
push
les
mov
xchg
sarl
insl
pop
push
and
loopne
push
lret
xchg
mov
pop
pop
cli
js
loope
test
dec
cmpsl
adc
imul
repz
mov
xor
add
inc
sub
xchg
les
sbb
loope
rcrl
ljmp
xchg
mov
push
jmp
ljmp
pop
dec
adc
mov
cmp
pop
cmpsl
sarl
mov
fsub
in
imul
ret
inc
mov
inc
movsl
stc
movsb
jno
insb
cmp
out
jbe
pop
mov
ss
and
lahf
add
push
pop
adc
out
icebp
inc
cmc
xor
jp
sbb
popa
lret
stos
call
lods
jae
mov
shlb
das
ljmp
call
mov
mov
out
push
inc
or
rorl
jle
xor
sub
dec
xchg
pop
jecxz
xchg
shll
lock
movsl
subl
in
inc
data16
dec
push
in
pop
aam
fidivl
xlat
adc
mov
arpl
xorb
xor
push
inc
mov
pop
movsl
sbb
mov
lds
sub
sbb
lea
addb
dec
scas
mov
stos
addr16
js
outsb
lds
shrb
cmp
adc
mov
jbe
rcr
dec
sub
xor
shrb
inc
ret
shrl
jg
lret
je
stc
xchg
add
cmpsb
cmp
rorl
xor
sub
cltd
fwait
jecxz
xor
cmp
adc
test
ss
adc
jp
lods
xchg
hlt
lods
cmp
xor
sub
mov
popf
cmp
fs
push
int
in
out
push
cld
or
adc
inc
xchg
popa
leave
cld
sub
adc
aam
jmp
push
inc
lahf
or
lcall
lock
mov
xor
in
cmpsl
ja
sub
cmc
lret
int
cli
push
push
mov
xchg
icebp
sub
inc
jp
push
xor
mov
cmc
js
mov
sub
mov
dec
dec
jo,pt
sahf
out
scas
lea
xchg
addr16
mov
xor
lcall
or
xchg
push
jp
inc
insb
sub
jle
mov
insl
js
fwait
cs
cld
orb
cli
std
mov
test
movsl
into
daa
cmp
jae
ljmp
adc
jecxz
dec
les
pop
inc
popf
push
adc
and
cmpl
outsl
lods
dec
and
pop
push
arpl
push
mov
or
clc
or
and
inc
and
xlat
xchg
inc
jb
arpl
cmpsb
outsb
dec
sub
fs
stos
test
add
xchg
and
arpl
sub
and
fiaddl
ret
pop
aam
pop
mov
ja
mov
pop
cs
adc
xchg
adc
sahf
xchg
mov
sbb
pop
insl
inc
mov
mov
fwait
popf
cmp
inc
cmpsb
jb
fadds
rolb
or
lahf
pop
mov
stc
push
movsl
shl
add
sbb
cmpsb
pop
pushf
ficomps
lds
out
roll
push
fs
dec
lea
pop
pop
mov
or
or
outsb
inc
out
pushf
mov
sub
xchg
or
jnp
mov
cmp
add
inc
scas
mov
fs
sbb
fdivrl
sahf
mov
cmp
mov
push
je
int3
fnstcw
jne
mov
dec
shlb
mov
mov
ret
imull
adc
lret
es
and
fists
sti
test
rcll
mov
add
std
scas
sbb
pop
xchg
and
ret
push
imul
movsb
not
and
pop
fistl
mov
sbb
insb
push
mov
and
shll
nop
movsb
in
cmp
xchg
je
mov
insb
xchg
mov
sbbl
or
call
sahf
addr16
dec
imul
loop
mov
into
jge
cmp
mov
inc
inc
add
cmp
es
fsubp
inc
cmc
aas
mov
jmp
inc
ds
das
xchg
outsl
rcl
lds
xor
jle
pop
addl
gs
notb
ret
add
and
lods
sti
sbb
aaa
xchg
cmpl
xor
cmp
insl
pushf
or
mov
and
cmpsl
sbb
imul
mov
dec
mov
int
add
mov
addl
or
inc
xchg
ja
imul
les
jg
ret
ss
xor
fxam
add
stos
out
ffreep
push
lds
push
xchg
or
in
push
cld
pop
mov
in
cmp
addb
mov
sahf
imul
in
repz
push
sbb
cmp
lahf
out
jecxz
repnz
mov
data16
push
sbb
sbb
cwtl
cli
push
mov
data16
sbb
mov
inc
scas
scas
jbe
and
cltd
test
shlb
push
inc
jnp
pop
sbb
cli
xchg
jns
lods
lea
std
testl
jo
out
adcb
jnp
aaa
shrl
pop
dec
fidivrs
aad
adc
mov
flds
sbb
in
les
jge
sahf
or
xor
outsb
sub
or
xchg
jmp
in
cmp
mov
cltd
leave
sub
fmuls
xor
push
mov
cmpsl
call
inc
imul
mov
inc
dec
adc
mov
cmp
addr16
mov
cmp
push
adc
cmp
es
push
sti
dec
push
mov
mov
subl
std
scas
dec
xchg
mov
test
into
push
dec
cwtl
sahf
mov
jl
test
inc
cmpb
fisubrl
xchg
xor
push
jle
pop
lret
stos
cwtl
popa
push
and
fdivrs
mov
inc
pop
mov
xor
jbe
sti
daa
mov
xchg
or
stos
adc
pusha
dec
mov
fisttpl
std
cwtl
cli
scas
imul
xchg
imul
clc
or
jae
mov
loope
inc
xchg
xor
xor
push
or
testb
xor
pop
cmp
in
mov
xchg
icebp
movsb
test
sbb
cli
stos
das
mov
lret
fwait
push
rolb
inc
add
dec
in
xchg
mov
in
lods
imul
xor
ss
xor
pop
jmp
fs
je
outsb
and
mov
jp
nop
sub
jl
jle
das
mov
lret
je
iret
in
int3
pop
xor
rclb
xor
jecxz
jge
or
shr
out
loope
loop
js
ss
std
push
ss
outsb
jbe
les
cmp
mov
add
out
mov
cmp
jecxz
or
push
test
inc
mov
pop
jmp
nop
xchg
sti
jl
arpl
cmp
cmp
fs
sub
ds
pop
lret
inc
or
xor
and
aad
cltd
mov
cmp
xchg
push
daa
or
lods
loopne
mov
shrl
dec
mov
mov
cs
adc
clc
sub
ret
mov
mov
mov
mov
mov
scas
mov
mov
pop
push
outsb
push
shll
ja
es
ja
xor
sub
arpl
or
mov
mov
pop
push
int3
scas
int
dec
cli
in
jle
cli
fnstcw
push
cs
mov
cli
cs
add
pop
or
sti
push
sbb
int
jns
fisubs
in
add
push
test
outsl
xor
repnz
or
jne
outsb
lods
adc
out
shlb
inc
popf
sbb
sbb
mov
cmc
mov
mov
es
mov
aaa
enter
mov
or
push
dec
shrl
sub
fdivp
add
push
pop
cmp
cwtl
or
lcall
xchg
pop
cld
mov
insl
fsubrs
dec
stos
in
je
ds
xchg
imul
xor
scas
inc
test
mov
imul
adc
push
inc
mov
sub
mov
sahf
add
das
test
xchg
notl
adc
add
outsb
lea
xchg
dec
push
insl
ljmp
pop
xor
sub
or
or
jmp
jge
cmp
movsl
xchg
mov
shll
cmp
pushf
rcrb
cmp
inc
xor
jbe
divb
and
jecxz
int3
in
cmp
push
and
call
pop
stos
fldcw
stos
jl
mov
notl
out
call
xchg
enter
divb
add
jns
adc
jl
icebp
je
xor
xor
in
and
loop
ja
das
xchg
rolb
sbb
int3
dec
inc
push
into
out
lret
icebp
int3
mov
aam
call
xor
pop
jmp
fiadds
pop
jmp
cli
cli
cli
je
push
mov
fmul
jp
sbb
jo
push
sub
aam
cli
icebp
inc
cmpsl
insb
mov
xor
lods
xchg
push
inc
cwtl
pusha
pop
dec
xor
cmpsb
incb
outsb
xchg
mov
or
add
cmpsb
mov
movb
jge
arpl
adc
loope
jno
sbb
leave
jns
daa
insb
lcall
dec
xor
test
outsb
movsb
sahf
cmpb
imul
xor
in
sbb
lock
mov
aaa
mov
shll
adc
cs
sbb
stc
cmp
pop
test
insb
push
popa
sbb
mov
add
lock
in
push
cltd
mov
jno
lock
mov
inc
lret
dec
lcall
pop
and
inc
and
lock
imulb
stos
nop
cmp
or
mov
mov
popa
push
and
test
ja
test
hlt
and
stc
mov
ret
adc
scas
ret
loopw
push
stos
cmpsb
push
sub
pop
mov
inc
loope
imul
inc
pop
dec
pop
mov
add
jno
int3
pop
je
sbb
fsts
lret
mov
pop
imul
mov
in
and
mov
aaa
sub
mov
icebp
pushf
sbbl
in
hlt
js
mov
push
movsl
js
int
jge
mov
stos
int
adc
pop
shll
das
out
js
je
inc
inc
mov
into
nop
int
imul
mov
xor
xchg
xchg
bound
xor
cli
xchg
mov
pop
popf
imul
ljmp
lret
mov
add
imull
dec
int
test
sbb
add
cmp
out
add
rorb
xchg
push
shrb
sahf
push
insb
jno
mov
push
xchg
enter
movsl
push
xor
arpl
push
push
jg
cmc
leave
mov
push
adc
add
test
mov
imul
sbb
cmpsl
js
arpl
mov
jbe
lea
jmp
out
inc
jl
mov
jge
pop
sbb
mov
shld
xchg
lods
jmp
and
adc
enter
int
aaa
addl
int3
ret
cli
iret
cmc
movsb
bnd
or
cmp
push
stos
jl
sbb
push
sub
fidivs
fnsave
sub
cmp
out
cld
add
adc
lds
mov
add
nop
push
cmc
pop
cmpl
sub
imul
xchg
aas
movsb
push
pop
jmp
mov
inc
jmp
xchg
clc
out
pop
ljmp
je
xchg
pop
push
mov
pushf
out
cs
fistps
out
pusha
mov
sbb
int3
sub
stc
and
cmp
jge
test
subb
push
and
fwait
sub
xor
sub
lret
jp
add
movsl
jns
push
mov
cmp
cwtl
pop
rcl
loopne
jno
stos
data16
leave
xchg
push
dec
cltd
sahf
pop
imul
subl
push
xor
or
daa
cmpsb
loope
lods
cmc
loop
ret
xor
scas
inc
mov
sub
sbb
sahf
dec
cmpsl
sti
dec
leave
outsb
ljmp
mov
into
adc
mov
insb
xor
cli
test
sub
imull
repz
lea
jp
imul
pop
xor
cmp
xchg
out
add
ret
fs
stos
adc
and
xor
add
in
mov
outsb
sub
mov
cli
lret
sahf
cmpsb
addr16
sbb
push
out
sub
mov
mov
mov
dec
mov
fistl
xor
inc
dec
dec
inc
cmp
cmpsl
insl
mov
pop
cmp
sub
loop
or
stos
cmp
pop
xlat
stos
sub
add
add
lret
or
out
test
loopne
pop
lods
jmp
mov
cli
mov
fs
dec
mov
stos
fld
add
add
xor
mov
or
sub
and
cmp
push
push
cmp
lea
jle
sbb
mov
iret
xor
lret
fldl
or
into
sbb
pop
push
pop
pop
xor
sub
sub
adc
sub
inc
push
in
jne
aaa
lock
and
sub
and
sbb
ja
and
pop
mov
xchg
addl
xchg
mov
mov
cltd
shr
hlt
xor
xchg
cmp
mov
xchg
scas
mov
inc
jnp
inc
add
enter
jno
jae
fbld
cmp
ss
notb
mov
fs
pop
ljmp
jge
dec
or
addr16
dec
iret
icebp
mov
enter
xchg
cmp
cwtl
cmp
ret
sbb
popf
jbe
pop
lret
dec
dec
fcomi
inc
lahf
repz
insb
lods
into
aas
adc
filds
pop
fmull
repz
push
aas
or
fistpl
jae
int
arpl
in
clc
add
push
aad
mov
int
movsb
jl
xchg
out
rcrb
insb
addr16
ret
adc
sbb
int3
add
add
xchg
cmp
xor
hlt
hlt
bound
cmpsl
iret
out
enter
xor
or
xlat
inc
ds
insl
ljmp
jo
shrb
jne
sbb
jne
mov
push
add
sub
and
sar
push
or
insl
cmp
xchg
aam
mov
out
mov
shl
mov
in
sub
lret
cltd
loopne
test
cmp
pop
pop
inc
xchg
xlat
xchg
enter
addr16
decb
loop
es
cmp
fcompl
aaa
lea
aas
shlb
and
or
and
jnp
mov
inc
testl
or
jp
int
cmp
xor
lock
int3
add
lret
fsubrl
jb
lcall
ds
inc
mov
push
jne
xor
cmpsb
negb
enter
adc
jecxz
lds
out
mov
clc
cmp
fimull
add
add
std
mov
insb
insl
fcoml
repz
xor
sub
jecxz
mov
adc
bound
xchg
adc
mov
aam
push
lret
mov
cmpl
imul
cmp
pop
sub
das
and
or
loop
jg
jno
nop
jp
in
into
cli
popf
movsl
aad
dec
ds
outsb
repnz
mov
and
sub
jne
and
cmp
mov
cmp
loopne
add
cmp
insb
fs
ljmp
inc
mov
inc
sbbl
and
scas
jecxz
lret
jb
and
push
dec
pop
sbb
lret
stos
sbb
outsl
mov
dec
dec
add
push
xorl
adc
adc
pop
adc
ja
jne
rol
iret
fisubrs
jmp
ja
push
outsl
je
pop
jle
mov
fwait
mov
enter
loope
fnclex
in
push
test
cmp
fwait
lret
mov
pop
fsubr
jmp
adc
or
fildl
push
jne
xor
xchg
mov
lahf
jmp
lahf
inc
out
sub
fucom
or
jle
inc
pop
ljmp
push
mov
adc
outsb
xor
fdivrs
sub
dec
sub
nop
mov
xor
lds
and
sbb
cmp
out
or
mov
cmp
loopne
xbegin
mov
sbbl
jp
lock
lret
aas
loope
xchg
rclb
add
cmp
xchg
stc
mov
rcrl
out
call
hlt
pop
pushf
call
test
je
aad
jge
stos
push
fcoms
jbe
mov
movsl
xor
mov
aaa
cmp
xor
lahf
mov
sarl
adc
pop
push
dec
jns
lret
jne
mov
xor
addl
xor
xor
lock
mov
rcrl
xchg
aas
fistps
cwtl
push
dec
hlt
pop
imul
cmp
mov
aam
and
mov
stos
dec
and
sbb
andb
inc
fisttpll
out
shrl
fbstp
sahf
sub
dec
in
or
fadds
imul
fnstcw
movsl
insb
inc
fsubs
test
mov
aam
cli
test
icebp
fcomp
rcll
add
pop
dec
inc
xchg
jae
mov
fimull
push
push
cmpsb
xor
jae
pop
jmp
fwait
cwtl
sti
adc
mov
xlat
xor
fsts
filds
bound
ja
enter
jmp
add
in
cmpsl
push
repnz
ljmp
dec
fwait
psrlw
por
in
sbb
or
adc
add
insl
push
mov
push
dec
push
jo
or
push
jb
ret
shll
int
push
jp
inc
inc
stos
and
repnz
jmp
pop
sbb
ja
sub
pop
pop
xor
icebp
cmpsb
pushf
mov
add
or
ljmp
jo
divb
xchg
loop
stc
xchg
clc
ljmp
xor
pop
xchg
cmp
jo
in
push
loop
adc
adc
mov
ficoml
dec
inc
testb
stos
dec
mov
getsec
jae
setge
xlat
xor
loope
lock
pop
push
cmp
ja
idivl
mov
ror
xchg
adc
in
jbe
cmp
inc
imul
mov
jno
xor
dec
push
sbb
in
cwtl
repnz
adc
or
jl
fmuls
push
sub
inc
data16
fstpt
sub
iret
sub
jns
repnz
mov
inc
add
push
movsb
push
add
mov
mov
sbb
sti
pop
xor
ss
in
in
leave
lcall
adc
inc
push
add
faddl
std
cmp
shll
cmc
dec
popf
rcr
xchg
inc
jl
mov
repnz
and
insb
mov
pushf
ror
mov
lcall
dec
lds
cli
mov
test
jp
inc
or
das
dec
mov
scas
inc
fdivs
jg
adc
mov
aas
sbb
or
push
xchg
je
mov
pop
adc
cmp
out
in
in
xor
jle
in
pop
sbb
mov
mov
push
dec
add
mov
push
scas
iret
data16
testl
inc
stos
pop
jg
fdivs
orl
fucomi
lods
lret
cmp
fadds
movsb
rclb
pop
ret
inc
int
scas
adc
push
mov
sbb
sbb
xchg
jle
cli
and
iret
clc
lcall
xor
adc
lds
cmp
into
mov
fdivl
clc
sub
fidivl
push
pop
xchg
xchg
sbb
jnp
in
xor
insl
mov
insb
arpl
inc
lcall
ljmp
mov
in
out
push
lret
mov
xor
push
iret
leave
les
sbb
sub
out
hlt
xchg
adc
leave
jne
dec
nop
push
sbb
xor
pop
ss
cmp
mov
sbb
imul
cmpsl
sbb
pop
rcl
mov
adc
jns
popa
mov
arpl
push
pop
lahf
jg
sti
xor
adc
push
movl
popl
test
add
xchg
icebp
mov
push
lods
ret
add
aam
cmpsl
sbb
xchg
lahf
add
arpl
xor
cmp
jbe
aas
add
mov
push
adc
or
int3
in
sbb
add
sahf
adc
xor
outsb
jp
movsl
bound
and
adc
cmp
clc
cmp
jmp
mov
jl
pop
sbb
or
pxor
cld
outsl
dec
insl
pushf
mov
dec
xchg
pop
stc
inc
enter
data16
repnz
sbb
in
mov
ror
and
dec
aas
into
xchg
popf
fadd
fwait
call
cwtl
das
cmpsb
fisttps
mov
xor
cs
cmp
clc
sbb
mov
sarl
rorb
jp
aad
sbb
popf
jo
push
cmp
into
or
inc
xor
outsl
bound
out
add
and
cmpsl
jns
and
sub
mov
out
sbb
mov
cld
add
push
sub
inc
scas
mov
loop
or
cmpsl
and
jns
lods
fld
cmpsb
lds
sbb
das
fisubl
aaa
pop
aas
sarl
adc
sbb
fadds
rorb
incl
jl
int3
movsl
inc
popa
add
scas
shll
jbe
inc
addl
imul
pop
push
xchg
movsb
icebp
mov
push
ds
call
mov
push
jns
out
leave
and
cmpsl
mov
xor
fcompl
pop
cmp
decb
je
scas
and
les
xchg
adc
dec
lds
mov
addr16
test
rorb
out
inc
jg
sub
and
inc
inc
insb
cli
mov
shll
gs
and
push
cmpb
pop
iret
mov
push
cmp
shll
movsb
addr16
and
aam
dec
sub
int
jg
dec
idivl
lods
scas
push
outsl
sub
addr16
and
daa
and
rcll
stc
je
jmp
pushf
dec
add
pop
test
dec
ja
inc
mov
mov
lret
int
mov
mov
inc
mov
push
outsb
pop
leave
jnp
clc
nop
sbb
xorl
insl
leave
pop
stos
push
orb
xor
js
in
cmpsl
and
mov
sub
xor
inc
add
push
mov
outsl
pop
mov
sub
sub
or
pop
cli
mov
sub
setns
out
push
gs
push
mov
inc
mov
adc
mov
xchg
fsubr
mov
sahf
and
pop
ret
mov
jb
pushf
sahf
cmpsb
jo
sahf
jmp
aas
sbbb
arpl
aad
inc
fildll
inc
mov
rclb
and
pop
push
lret
and
lods
sbb
mov
lea
dec
sbb
sub
dec
shlb
notb
mov
mov
sbbl
cli
shr
fnsave
ja
push
mov
jmp
psubw
sub
and
daa
cmp
stos
repnz
add
lret
jo
sub
mov
cmpl
punpckldq
outsl
pop
js
push
mov
inc
dec
push
test
testb
inc
insl
outsl
inc
or
pop
in
clc
xor
lea
test
inc
cmpsb
jbe
popa
xchg
mov
mov
dec
inc
jmp
aad
dec
sti
movsbl
xor
push
jmp
dec
adc
jno
jp
lea
lret
je
es
mov
fdivrs
push
call
push
andl
push
loop
leave
in
push
dec
dec
aas
pop
pop
jae
cmpsb
inc
xlat
mov
adc
aam
clc
lds
jno
pop
xor
clc
or
ja
mov
push
xchg
popa
lock
inc
jnp
sub
xor
test
mov
cmc
and
insl
sbb
add
gs
and
fdivs
push
ret
ret
daa
mov
arpl
clc
and
popa
jae
mov
xor
adc
jle
push
mov
mov
mov
fdivrs
ror
sbb
cld
sbb
jmp
imul
lods
out
in
jg
push
lahf
outsb
xor
lret
mov
mov
clc
imulb
shlb
sbb
loopne
dec
pop
mov
rcrb
insb
out
push
popa
pop
shlb
push
mov
xchg
jne
stos
pusha
aam
cmp
aam
insl
icebp
adc
test
mov
fs
fidivl
mov
push
mov
sti
push
shlb
adc
mov
xlat
jecxz
cmp
add
cld
add
sbb
xlat
mov
sti
dec
jbe
xchg
test
xchg
pop
movsb
subb
notb
scas
push
test
cmp
ds
push
sub
js
outsl
add
mov
or
in
and
lret
test
scas
aam
ds
inc
mov
jbe
stos
arpl
mov
scas
in
fstps
push
mov
jmp
cmp
lahf
push
outsb
sub
lret
xchg
lock
negb
mov
sarb
jae
xor
mov
pop
xor
imul
adc
jno
jo
aas
push
jno
push
in
inc
pop
jnp
xchg
sbb
ljmp
or
jmp
xchg
push
out
int3
cltd
cmp
scas
push
imul
fimull
mov
xchg
fmul
shll
shll
dec
adc
jb
mov
or
mov
inc
add
pop
dec
sub
sbb
pushf
add
lret
inc
or
insb
and
sub
in
fimull
repz
jge
or
insl
shll
movsb
test
sub
push
imul
jno
call
lahf
dec
subb
orb
pusha
pop
or
mov
popw
mov
lret
sbb
test
gs
fwait
ret
xor
int
xor
dec
add
xchg
inc
out
mov
stos
pusha
cmpsl
sbb
mov
cmc
aaa
stos
inc
stos
jae
retw
mov
pop
scas
and
daa
pop
sbb
cmp
icebp
inc
push
sub
sub
pop
frstor
push
jne
push
mov
xchg
jecxz
jmp
sbbl
add
mov
imul
out
mov
cmp
fbstp
or
sar
push
imul
ffree
inc
cmp
and
cmp
cltd
push
aam
push
xor
scas
scas
dec
outsl
mov
sbb
and
inc
dec
loop
aas
scas
push
out
jnp
outsb
cmc
dec
pushf
push
mov
add
scas
cld
clc
xor
inc
out
mov
fnstsw
adc
xchg
lods
lods
pop
jle
mov
dec
lea
xor
sbb
js
mov
mov
aaa
mov
pop
add
jmp
push
mov
push
sub
and
xchg
aaa
repz
fs
cmp
repz
scas
cmp
in
sarb
pop
repnz
xor
add
stos
push
outsb
inc
dec
stc
jns
mov
ja
mov
mov
call
out
jb
lock
clc
pop
or
inc
dec
xor
pop
clc
clc
pop
pop
dec
test
adc
cmp
insl
pop
push
xor
mov
daa
push
xchg
cltd
xor
leave
cmp
cmp
inc
adc
lods
lcall
adc
add
dec
fidivrl
cmp
adc
sbb
popf
out
push
js
pop
pop
repz
mov
inc
pop
call
sbb
loope
push
je
push
cmp
decb
mov
jo
inc
add
cltd
fcmovnb
or
add
inc
out
xor
xlat
push
mov
mov
test
lds
xchg
mov
scas
js
out
cltd
aad
in
lods
add
dec
sub
sbb
xor
adc
xlat
cmp
jbe
in
xchg
push
cli
pop
out
ss
dec
into
mov
out
lahf
stos
shl
and
mov
mov
xchg
shlb
pop
sahf
scas
lahf
and
mov
xor
cmp
pop
imul
push
adc
add
mov
fs
mov
arpl
fdiv
test
jl
int
dec
lods
fpatan
arpl
and
cwtl
aas
dec
cmp
je
jmp
ficomps
push
insb
nop
into
cli
and
dec
mov
sbb
pushf
sub
fldl2e
fstpl
mov
inc
shlb
xor
hlt
inc
pop
mov
sub
lods
arpl
lods
stc
mov
push
adc
jmp
mov
or
dec
out
mov
mov
xor
pop
mov
mov
cmp
pop
mov
fs
scas
push
mov
ss
cmpsb
pop
jecxz
ljmp
pop
into
sahf
xchg
enter
cmpsb
nop
iret
cmp
adc
push
mov
sub
sti
and
pop
jb
xchg
mov
mov
ja
adc
fwait
mov
sub
push
pop
and
jl
xor
sbb
pop
adc
mov
and
xlat
add
insb
out
sbb
repnz
jmp
vmovntps
fs
jns
or
fistpl
ficomps
repnz
clc
push
cmp
cli
movl
repz
fadds
mov
xchg
push
sbb
stos
pushf
incb
dec
lods
out
mov
in
mov
clc
push
sub
jl
xor
cmp
jecxz
push
cmp
insl
jnp
in
mov
xor
int
lock
idivb
pusha
dec
test
xor
sarl
bound
xchg
mov
lds
mov
xor
dec
cld
mov
pop
jbe
iret
mov
lods
js
in
scas
ja
sahf
dec
pop
popa
xor
cld
mov
lock
popa
mov
push
adc
cmp
pop
cmp
leave
out
sti
jecxz
sti
pop
mov
sbb
add
pushf
jae
mov
cld
les
cmp
mov
iret
cs
hlt
adc
movhlps
shlb
aaa
in
gs
jl
pop
ds
aas
mov
fstps
jge
mov
mov
andl
push
rep
std
xchg
insl
fnstsw
gs
pop
dec
aad
mov
fsubl
call
jb
mov
mov
test
hlt
push
jo
sbb
std
mov
sbbl
sub
mov
test
mov
pop
les
or
test
ja
pop
mov
out
je
mov
inc
sub
fstpt
and
sub
pop
or
push
jne
adc
cli
dec
shlb
sar
adc
dec
pop
das
lods
lods
fildl
arpl
jg
dec
scas
add
jns
ret
dec
cwtl
popf
aaa
sub
arpl
mov
ret
lret
stos
leave
sbb
int
cmp
movsb
push
scas
mov
or
push
adc
xchg
mov
pop
mov
mov
mov
or
scas
ret
aam
sub
add
push
repnz
mov
inc
leave
push
mov
or
imul
push
aas
outsb
xchg
xor
mov
repnz
jmp
push
and
and
cli
mov
cmpsl
adc
insb
shlb
mov
jecxz
jae
dec
decb
sbb
push
pop
inc
xor
and
cmp
sub
mov
and
mov
fst
mov
sub
test
xchg
into
mov
mov
xchg
nop
xor
jecxz
and
aaa
leave
aas
or
xchg
nop
lret
or
test
testb
jl
dec
stos
sarl
outsb
push
xor
or
xor
mov
test
sub
lock
and
test
stos
scas
arpl
ror
bnd
js,pn
lods
sti
mov
repnz
pop
jmp
jmp
lcall
xor
jl
iret
jae
jns
mov
cmpsb
ljmp
push
lcall
xchg
sub
dec
xchg
shll
pop
xor
cmp
mov
imul
jmp
in
aad
ficoms
cmpsl
stos
xor
sbb
xor
pop
jl
xor
gs
clc
cmc
xchg
fucomi
mov
adc
and
int3
and
mov
jnp
xor
jp
test
or
iret
fidivs
loopne
insb
arpl
ret
cld
mov
pop
mov
cvttps2pi
int3
insb
mov
mov
pop
sub
jmp
mov
mov
mov
and
rolb
cmp
sub
rorb
and
mov
adc
jmp
icebp
add
jp
push
shll
mov
sub
je
out
add
mov
sub
cmp
push
mov
and
xchg
and
lods
arpl
jp
leave
hlt
in
jno
fcmovnu
sub
shrl
imul
pop
inc
jl
popa
push
popf
xor
push
pushf
sub
sub
fisubrl
mov
push
push
cli
cltd
jo
pop
jecxz
sbb
add
mov
jmp
std
cmpsl
pop
sub
mov
or
inc
insl
xor
pop
lea
int3
mov
fldcw
ret
int3
adc
xchg
ljmp
aam
pop
cmp
mov
stos
mov
jne
sbb
sub
mov
push
xchg
sbb
cld
xor
push
pop
mov
sti
out
push
mov
shl
test
mov
imull
xlat
jnp
loope
in
pop
cs
pop
push
setae
adc
inc
xor
cmc
pop
in
inc
cmp
in
pop
push
lcall
enter
call
pop
icebp
add
shll
xor
faddl
lock
sub
push
lods
dec
sbb
cmpsl
aam
sub
xor
js
sti
lcall
xor
call
pop
lret
sbb
mov
out
xchg
xor
lods
dec
push
dec
adc
mov
ret
pop
std
push
sbb
pop
sub
incb
mov
mov
sbb
mov
mov
push
and
clc
xchg
out
int
mov
imul
out
cmp
aad
lret
test
lcall
ficompl
clc
mov
jge
fisubs
or
pop
iret
cltd
cli
in
dec
xor
in
repnz
add
fwait
arpl
out
push
sbb
sbb
outsl
cmc
pop
ss
xor
packuswb
or
xchg
sub
push
popa
shlb
add
pop
dec
push
push
push
push
outsl
pop
add
test
or
and
in
pushf
stos
pop
jae
das
push
mov
icebp
mov
xor
xchg
pop
jl
mov
add
cmp
sti
mov
dec
xchg
dec
lahf
adc
out
push
sub
pushl
jns
or
inc
mov
out
sub
scas
insb
dec
lds
icebp
stos
test
popa
repz
ljmp
ret
adc
sbb
sub
xchg
mov
outsl
push
out
stc
or
scas
das
sbb
add
es
mov
cmp
or
pop
lods
or
into
add
test
loopne
mov
iret
sbb
push
inc
xchg
jle,pt
div
shlb
sbb
jg
movsl
mov
mov
push
mov
and
sub
jle
mov
lret
mov
pop
dec
fmull
mov
aaa
xchg
out
je
add
out
sbb
push
int
loop
aam
divb
test
sbb
push
push
xchg
add
cmp
add
jg
negl
lea
mov
jmp
adc
xor
scas
int
fucom
mov
pushf
daa
testl
push
dec
mov
movsb
dec
rorb
push
pop
adc
mov
jb
or
xor
mov
sti
push
jae
nop
dec
cld
push
cld
sbb
push
and
hlt
fbld
loop
test
jg
scas
push
arpl
pop
out
outsl
jg
aad
ja
lret
mov
xchg
dec
jne
js
das
jns
leave
stos
fcoml
out
jno
outsb
gs
jge
inc
repnz
flds
fcoml
outsl
push
cmpsl
ds
and
jae
jnp
fstpt
push
fists
add
loope
addl
aad
lret
dec
xor
adc
pop
dec
imul
daa
xchg
fs
jns
cmp
inc
inc
loope
fiaddl
cwtl
cmp
outsl
lcall
jmp
jnp
divl
lret
mov
xchg
repz
stos
lods
aaa
mov
test
std
loopne
testb
mov
xchg
fcoml
or
sbb
inc
xchg
inc
fldl
lahf
addr16
clc
ja
stos
ret
push
cwtl
and
jp
xor
add
adc
xchg
cli
or
arpl
push
mov
jg
cmpsl
jmp
repnz
jle
stos
pusha
loop
das
outsb
xlat
jo
mov
ja
mov
test
pop
dec
or
dec
lahf
cmp
lret
push
imul
out
stos
cmp
add
dec
aam
jae
test
jbe
dec
int3
inc
inc
rcrl
mov
lea
cmc
mov
push
repz
jno
fmull
jns
insl
jmp
repnz
pop
mov
into
mov
jmp
jae
mov
add
xor
or
sbb
jle
mov
imul
dec
icebp
stos
negb
pop
or
jb
adcl
arpl
jb
or
insb
xchg
mov
imul
repz
xor
or
or
push
dec
xor
lahf
arpl
mov
pop
adc
xor
cmpsb
push
sub
jl
lahf
mov
fiadds
dec
fdivrs
pop
stos
adc
rcrl
or
outsl
mov
jp
pushf
mov
cmp
add
mov
aaa
insl
cli
js
mov
js
pushf
fcompl
mov
pop
sbb
nop
push
adcl
jae
dec
mov
scas
mov
dec
sti
outsb
scas
mov
lock
fstl
mov
roll
mov
rcll
shl
repz
lds
aaa
fmuls
das
adc
sbb
cmp
add
daa
or
adc
mov
inc
jg
mov
jmp
aad
int
cwtl
sub
pop
cmpsl
push
mov
cmp
imulb
pop
mov
stos
jno
mov
insl
out
mov
loope
mov
sbb
int3
xor
pushf
xchg
fwait
push
fisubl
negb
cwtl
adc
xor
ss
xor
sub
mov
popa
jb
pop
sub
test
movsl
add
mov
jae
mov
inc
dec
jae
push
lret
mov
inc
clc
xor
and
push
xchg
jo
adc
pop
aad
out
mov
std
jns
pop
xchg
and
rcrb
add
es
or
cmp
sub
ja
sbb
fldt
jo
xchg
mov
dec
cmc
mov
imul
jg
mov
xchg
je
cmpsl
out
addr16
js
jbe
leave
fdivrl
sti
dec
dec
mov
mov
mov
test
nop
add
bound
or
add
aaa
gs
outsb
mov
pop
or
xchg
or
pop
dec
insl
repnz
mov
addr16
lahf
sbb
inc
jns
jns
sbb
jno
shll
pop
insl
add
add
mov
push
or
rol
insl
dec
outsl
ljmp
test
or
negb
shrb
inc
fs
stc
fstl
mov
loope
cmp
lods
xor
xchg
lret
add
pop
sub
notb
inc
add
inc
adc
cli
mov
sub
rorl
mov
xor
lds
cmpsl
pop
jmp
out
lods
mov
into
push
jl
sub
mov
add
jne
ror
aas
push
and
loope
sub
mov
insl
lret
or
stos
punpcklwd
pminsw
daa
cmp
mov
mov
popf
cwtl
pop
stos
not
stc
cld
out
xchg
sti
inc
xchg
fs
adc
sub
lock
gs
sbb
push
xchg
ds
xchg
aam
ja
fwait
imul
jp
jns
out
pop
inc
sub
cmp
movsl
popf
inc
pop
out
sbb
and
and
and
mov
pop
and
inc
loopne
push
loopne
add
pop
dec
mov
pop
hlt
js
inc
lds
cld
dec
cmp
cmpsl
adc
aam
jmp
add
adc
sub
adc
cmpsl
dec
bnd
sub
outsl
inc
mov
xchg
ss
adc
jno
sbb
out
pop
jecxz
popf
jne
divb
imul
adc
xor
loope
sub
in
sti
negb
adc
mov
adcb
sbb
pop
cld
popa
cwtl
mov
in
dec
push
inc
jno,pt
or
roll
fnsave
add
js
jecxz
lock
loop
pop
out
mov
mov
xchg
sbb
mov
xchg
adc
shl
mov
inc
imulb
sbb
and
xchg
aad
lcall
pop
hlt
outsb
xchg
pusha
and
cmp
and
das
gs
repnz
mov
jae
inc
data16
clc
cmp
and
or
pop
jg
xor
mov
sub
rcll
add
mov
sub
push
inc
lret
xor
jae
dec
push
lock
cmp
sub
mov
pop
and
out
cmc
insb
fstpl
in
mov
push
xchg
push
call
mov
cmpsb
push
inc
inc
call
ret
mov
sub
push
fwait
xchg
sarl
sub
pop
subb
aaa
lahf
fsubrs
cwtl
xor
out
mov
jnp
sbb
and
es
pop
imul
pop
loopne
adc
cli
lcall
and
insl
cmp
sbb
test
fstpl
mov
adc
insb
rol
cmp
mov
pop
ljmp
sbb
lahf
setle
inc
cmp
mov
test
shrl
setle
clc
pop
push
cmp
cmp
lret
test
xor
shll
xchg
and
sbb
loop
je
jg
int3
mov
mov
add
movsb
cmp
or
cli
subb
js
sub
fldl
push
adc
mov
sub
pop
xor
sahf
xchg
inc
add
add
lret
pop
cld
mov
dec
leave
rorb
out
cmc
out
inc
xlat
in
lods
pop
lret
insb
xchg
lcall
mov
lea
loope
mov
inc
loop
adc
out
cs
imul
loope
xor
stos
dec
pop
xor
addr16
stos
mov
fildll
sti
scas
push
push
test
xor
popaw
mov
mov
sarl
mov
push
ficomps
xchg
insb
or
sub
and
sbb
in
mov
pop
mov
mov
sub
add
pop
pop
jnp
push
scas
jg
inc
sahf
xchg
push
insb
stos
push
js
aas
lods
ljmp
out
xchg
mov
jno
rcr
push
mov
mov
mov
mov
jl
mov
pop
hlt
jnp
out
js
call
test
fdiv
clc
add
int
xor
and
dec
pop
aas
jp
xor
add
rolb
and
pop
jl
insb
popa
or
mov
cmp
negl
jne
cltd
mov
xchg
jnp
loop
lods
xchg
in
test
mov
shl
in
mov
mov
negl
push
xchg
or
outsl
fs
sub
gs
hlt
or
xchg
imull
scas
adc
xchg
jl
cmp
xchg
fcmovb
or
or
test
cmpsl
push
dec
dec
cld
call
inc
pop
jmp
scas
jle
cmc
fnsave
pusha
fwait
popa
or
cmpsl
rcrl
and
mov
jg
adc
int
push
repnz
dec
inc
test
adc
stos
lods
inc
push
icebp
xchg
mov
aad
inc
jns
stc
push
jbe
lcall
jle
push
sbb
loope
jne
and
aaa
mov
sbb
int
movsb
mov
mov
adc
imul
mov
xchg
sbb
bound
mov
jbe
inc
shll
adc
mov
jae
rorb
gs
lcall
leave
hlt
adc
mov
sub
jp
xchg
sahf
mov
aas
add
lcall
mov
push
hlt
data16
mov
sbb
fwait
push
test
mov
xlat
sub
mov
cmp
enter
out
mov
xor
sbb
mov
outsl
adc
aad
scas
gs
jbe
sbb
mov
adc
xchg
inc
add
inc
push
inc
adc
jg
fdivrl
les
fimull
push
clc
sahf
sub
inc
jge
bound
pusha
jp
cmc
pop
sti
and
shl
mov
xor
fisubl
clc
dec
and
and
pop
fwait
hlt
iret
mov
jno
int
cwtl
xchg
aad
push
pop
add
adc
aad
int3
push
add
xchg
jmp
adc
mov
jg
or
sub
stc
jg
inc
inc
out
dec
inc
pop
pop
mov
pushf
pcmpgtw
call
call
mov
aaa
adc
sub
cmp
or
xchg
shll
sbb
loopne
cs
xor
mov
inc
mov
pop
aam
sub
mov
dec
xchg
call
and
or
adc
mov
fistpll
lods
or
dec
sbb
cwtl
fwait
pop
mov
cmp
and
adc
mov
loop
push
ss
rcll
mov
cmp
and
pushf
inc
mov
adc
stos
outsb
jo
rorb
cwtl
pop
add
arpl
add
fsubs
sbb
sub
sbb
jl
push
jno
push
roll
pop
adc
xchg
add
or
fwait
mov
add
sub
nop
rcrb
cmp
mov
in
cli
jge
fsubrs
imul
xor
jp
dec
test
fdivr
shl
jne
sbb
xchg
daa
outsb
cmp
mov
ljmp
cmp
or
in
arpl
pop
repnz
xor
jnp
orb
dec
andl
mov
push
mov
lahf
xor
rcr
sbb
sbb
add
pop
adc
xor
mov
inc
inc
pop
cmp
sbb
in
mov
roll
fldl
out
inc
pop
push
jp
sub
jmp
aaa
leave
cmc
adc
adc
jle
push
out
xorb
fwait
inc
mov
adc
out
add
xchg
outsl
mov
push
fcmovbe
leave
fimuls
out
daa
and
xor
xlat
daa
push
lea
xchg
dec
mov
movsb
ljmp
mov
mov
in
and
pop
adc
cmp
dec
push
mov
mov
dec
outsb
pushf
lahf
sbb
add
test
xor
subb
inc
adc
cwtl
lret
es
lds
mov
xchg
pop
std
xchg
inc
jge
and
adc
sbb
sub
nop
sub
push
and
xchg
shll
inc
cltd
rorb
stc
mov
add
push
js
cmp
jecxz
mov
aad
lcall
rcr
in
jo
cmp
out
adc
jo
jl
and
ss
jne
addl
movsb
dec
adc
inc
mov
notl
test
hlt
and
mov
and
add
ds
push
sahf
xchg
jb
std
enter
xlat
scas
dec
les
cmp
xchg
lods
fmul
scas
sub
in
pop
mov
xor
mov
xor
xor
out
dec
jae
xchg
lret
adc
mov
outsl
mov
imul
setb
movsl
lock
mov
int3
inc
inc
and
inc
adc
mov
fwait
jb
dec
jae
xchg
jno
and
cli
cwtl
js
cli
orl
aaa
imul
ficomps
sbb
sub
fdivp
push
lret
mov
or
cmp
mov
mov
inc
push
pop
ja
lret
popl
pop
jecxz
mov
jge
xchg
bndldx
movsl
test
xchg
xlat
testb
xor
xlat
sbb
mov
sbb
xchg
push
sarb
shll
sbb
test
mov
popf
dec
shlb
xchg
or
sbb
fs
mov
push
jp
add
js
jo,pt
sub
ror
push
and
out
imul
out
pop
stc
jmp
test
jnp
or
insb
add
sbb
dec
hlt
mul
jge
xchg
xchg
dec
ds
out
dec
mov
test
adc
and
orl
imul
test
addr16
add
scas
fcmovbe
inc
mov
sub
aad
lea
daa
mov
sub
cwtl
pop
aas
jns
pop
xor
sub
rol
cmp
add
jp
ja
int
and
in
mov
loope
push
out
enter
aaa
sbb
mov
xor
cmp
cmc
scas
mov
lea
int3
and
adc
xchg
mov
and
frstor
xchg
fxch
in
pop
dec
push
xchg
mov
out
dec
test
icebp
fsubs
pop
push
mov
int
nop
stos
hlt
dec
jae
xchg
mov
inc
xchg
adc
aas
movhps
inc
imul
test
bound
fdivrl
mov
std
sub
cmp
or
cmp
js
inc
movsb
mov
dec
push
into
or
clc
sbb
dec
cmc
mov
adc
inc
ret
es
sahf
dec
xchg
push
out
lea
mov
in
cmp
inc
mov
jl
xor
push
frstor
mov
cmp
or
jecxz
or
mov
das
imul
iret
mov
lcall
test
ja
jmp
dec
add
pop
nop
sbb
mov
mov
mov
je
shl
cmp
dec
mov
jne
xchg
mov
testl
sbb
out
mov
pop
dec
inc
pop
int
pop
test
mov
shll
pop
sub
mov
cmpsl
pop
mov
outsb
inc
iret
xchg
inc
shr
pop
lret
roll
adc
subb
dec
jle
sub
iret
cmp
inc
out
arpl
or
adc
test
inc
fildl
pop
jp
adc
ret
mov
dec
or
or
lds
mov
dec
insl
fcmovbe
scas
inc
push
xor
cmpb
xor
aas
add
add
jne
hlt
xchg
and
mov
mov
lret
stc
or
adc
and
jno
fnstenv
jo
rcrl
inc
inc
mov
jno
test
pop
das
adc
sub
mulb
cwtl
and
roll
mov
pop
cmp
or
rcrl
add
or
out
inc
cld
imul
mov
pushf
sbb
inc
imul
inc
ret
mov
rcr
std
repz
in
cmp
daa
pop
ss
sbb
mov
dec
mov
test
sub
adc
cld
aas
lcall
lea
leave
mov
xor
gs
sub
push
rcrl
or
xchg
int
mov
fistpl
adc
pushf
cmpl
in
clc
jb
roll
ss
test
mov
jnp
cmp
mov
mov
jg
jo
in
cmp
and
imul
inc
bound
lds
out
push
inc
std
cmc
cmpsl
jp
xor
jge
fs
outsl
into
jo
or
sbb
ja
bound
xchg
adcb
retw
push
xchg
dec
push
and
loop
ror
loopne
cltd
mov
adc
push
sahf
jmp
pop
pop
push
push
mov
hlt
fs
add
adc
je
inc
or
sbb
or
pop
aad
sub
fmuls
dec
sbb
adc
jae
sbb
cltd
jmp
fsubrl
lcall
inc
sbb
and
popa
pop
roll
rcrb
aad
jmp
js
xchg
jno,pt
dec
test
call
mov
dec
es
and
out
and
pop
pop
mov
dec
sub
pop
fdivr
push
dec
mov
adc
call
cli
inc
in
add
mov
test
aam
hlt
or
xlat
aas
jp
mov
push
cmp
stc
fs
loope
in
and
inc
pop
pop
daa
scas
dec
popa
and
push
dec
cmp
std
popf
out
loopne
ret
push
push
scas
fists
fcompl
sub
cmp
fisubs
jg
mov
lods
es
push
jmp
or
je
imul
xlat
mov
hlt
test
shll
dec
mov
add
xchg
or
xorb
and
xor
mov
pop
mov
ja
dec
or
xchg
dec
dec
scas
shlb
xchg
into
jmp
stc
pop
cltd
lahf
stos
lock
inc
jmp
add
pop
mov
divb
lret
or
inc
sbb
fwait
pop
inc
daa
fiaddl
repnz
mov
lcall
cmp
push
mov
add
sbb
sbb
cmp
and
iret
and
sbbl
sub
movsl
into
loope
std
xchg
fiaddl
stos
enter
stos
es
imul
mov
lahf
sub
es
and
mov
or
dec
add
js
mov
mov
mov
ss
xchg
xchg
xchg
cvtps2pd
inc
sbb
adc
je
out
icebp
inc
jno
sahf
mov
daa
cmp
movsb
iret
mov
dec
shlb
mov
adc
inc
loopne
fsubrl
aad
iret
lcall
sbb
mov
inc
out
fs
mov
push
cmc
mov
mov
pop
pop
sbb
loop
lcall
adc
adc
out
dec
cmp
fistl
fdiv
jmp
mov
pop
add
cwtl
mov
arpl
push
push
push
push
stos
scas
pop
loop
decl
mov
leave
push
fadd
mov
xchg
push
sub
mov
jne
lock
les
sbb
sbb
mov
mov
shrb
mov
inc
out
popa
lret
jbe
xor
imul
xchg
xchg
jp
and
pushf
cmp
clc
rcrl
lods
sbb
mov
pop
jl
out
adc
jle
push
jg
stos
lods
adc
ds
add
inc
adc
cld
shl
sahf
ja
push
push
fisttpl
mov
mov
sbb
and
sarb
out
fcompl
test
pop
lods
cwtl
dec
scas
mov
ljmp
lods
in
cltd
sub
cmp
jge
mov
pop
pop
inc
xchg
mov
cmp
sub
aam
mov
sbb
push
push
outsl
jg
jge
cmp
lea
mov
aad
sub
call
movsb
arpl
vrsqrtps
movsb
popa
fistl
jge
jl
jbe
adc
ja
pop
stc
mov
xchg
fidivrl
stc
dec
sti
jle
dec
and
add
jns
cmp
pop
xchg
inc
mov
data16
or
and
loop
jl
and
sbb
fdivrl
xchg
pop
imul
cmp
or
insl
shr
adc
mov
cmpsb
pop
lahf
xchg
xor
cld
push
out
xor
outsl
dec
pop
std
jo
mov
or
std
out
jb
loopne
cld
cmpsl
xlat
bound
mov
adc
jle
in
cli
pop
fisubl
or
hlt
inc
sub
xchg
lock
push
test
fstpt
jno
or
push
sub
stc
ficoml
add
sub
outsl
stos
leave
mov
pop
imul
fcoms
into
sub
and
repnz
jge
pop
fstpt
mov
insb
sub
jmp
add
pusha
mov
xor
push
stos
sbb
inc
sbb
sbb
mov
jp
sub
cs
xchg
mov
push
mov
fwait
xor
mov
test
stos
inc
adc
pop
sbb
push
cmc
mov
leave
mov
mov
inc
leave
outsb
cmp
loope
decl
out
xor
mov
shl
pop
lret
push
pop
iret
xor
in
pushf
enter
sub
call
mov
add
arpl
and
pop
inc
repnz
jecxz
stc
call
fistl
jne
sub
in
mov
cld
mov
test
fcoms
rep
inc
and
mov
pushf
loop
fiadds
cs
dec
enter
imul
jo
dec
sti
sbb
repnz
add
xor
push
and
std
push
sbb
out
add
ficomps
mov
js
jo
and
inc
gs
inc
pop
add
movsb
jne
cmpsl
movsb
push
fists
fwait
adc
fdiv
bound
lds
popf
sbb
dec
dec
xchg
pop
or
xor
push
in
and
mov
sarb
xor
mov
pusha
pop
mov
in
int
bound
xchg
mov
mov
out
pop
hlt
orb
cmc
lods
sub
mov
bound
jb
pop
or
push
ret
inc
push
jmp
fbld
and
inc
daa
mov
jmp
stos
push
int3
jg
xlat
mov
pop
pushf
and
ljmp
adc
sar
push
ret
daa
jle
leave
sub
cli
inc
mov
jnp
pop
lahf
cli
or
xor
das
or
out
or
dec
mov
nop
add
jo
inc
in
insl
mulb
in
mov
jnp
mov
negl
adc
sub
fimuls
fwait
hlt
inc
push
inc
inc
xchg
push
mov
fwait
sub
xchg
cld
cmp
shr
call
adc
outsl
add
fcoms
jae
jecxz
test
push
mov
mov
addb
and
stc
clc
inc
cltd
jmp
jg
add
xchg
movsl
xchg
negb
add
fsubl
jle
jg
bound
test
ret
xor
arpl
mov
jmp
std
xchg
adc
inc
inc
sub
test
cltd
push
in
xor
test
or
xchg
xchg
and
ljmp
jge
pop
bound
push
and
lods
lahf
cmpsb
popa
loopne
aam
sbb
push
leave
imul
sub
push
jge
mov
loope
rorb
dec
into
mov
jmp
xchg
cmp
mov
fistps
es
aad
mov
mov
pop
adc
shrb
jge
xchg
xchg
cmpsb
imull
cmc
outsl
js
dec
mov
hlt
fadds
push
inc
fstl
out
mov
test
sbb
mov
rcrb
pop
mov
add
dec
jg
cmp
push
pop
xor
dec
and
xor
push
inc
jbe
shlb
mov
sti
mov
mov
das
in
push
pop
add
mov
ljmp
mov
in
cmp
adc
add
test
fnstsw
dec
pop
gs
lods
mov
das
push
adc
dec
ja
xlat
pusha
popa
adc
xchg
sbb
insl
mov
test
xor
push
mov
or
xor
xor
leave
cli
ja
addr16
sub
lds
sbb
mov
add
jns
aaa
pusha
pop
sub
decl
in
les
xchg
xchg
sarl
incb
sub
cmp
sbb
leave
xchg
es
mov
push
cmp
lahf
pop
pop
xorps
mov
xchg
int
push
pop
mov
lcall
push
lahf
dec
mov
add
mov
jnp
nop
mov
ljmp
ljmp
aam
fimull
adc
or
shlb
or
push
flds
rcrb
fcoml
ret
test
mov
push
jbe
inc
outsl
andl
add
push
andb
dec
inc
fsubrs
ret
daa
xor
aad
mov
loop
popl
pushf
repz
andl
jmp
pop
sub
int
pop
inc
adc
mov
sti
pop
and
mov
push
das
outsb
nop
aam
je
cmp
xchg
mov
mov
xlat
xchg
or
loopne
add
out
xorb
shlb
cwtl
jbe
scas
imul
pop
notb
xor
or
popf
mov
xor
stc
push
mov
int
sahf
push
outsl
fwait
mov
mov
xor
push
cmpsl
mov
jge
fisttps
loopne
lcall
scas
jle
aad
mov
ret
sub
scas
jnp
xor
adc
daa
div
pop
enter
fsub
jg
sbb
movsb
inc
insl
xor
arpl
inc
sub
out
dec
je
popa
aad
sub
and
mov
cmp
stos
push
pop
mov
xor
cmpsb
xchg
jo
pop
push
in
cltd
movsb
lahf
aam
inc
js
mov
repz
xor
or
scas
test
cmc
mov
popf
inc
xchg
or
jae
sbb
rcl
add
fistps
rep
push
and
mov
es
jne
inc
pop
or
pop
jge
adc
mov
sbb
movsb
adc
jmp
push
imul
loopne
aas
jg
dec
cld
mov
out
cmp
and
int
jmp
and
sbb
pushf
xchg
test
inc
mov
pusha
adc
sbb
rcr
fs
jo
sbbl
dec
and
mov
mov
enter
dec
dec
fsubrp
loopne
mov
fildl
and
jmp
inc
adc
sub
ror
js
adc
mov
call
dec
mov
xor
mov
mov
lcall
or
pop
gs
mov
je
jmp
mov
movsl
nop
shrl
mov
fiaddl
cmp
xchg
mov
jne
cmp
mov
inc
push
xchg
pop
in
cwtl
das
mov
add
int
jg
mov
mov
and
xchg
lret
imulb
cmc
sbb
das
push
ja
mov
add
dec
lods
fnstcw
and
in
mov
std
imul
cli
addr16
hlt
popf
fstl
sti
outsl
cmp
or
sub
lods
dec
sahf
jg
fisubl
loopne
inc
lret
fiaddl
xorb
jmp
decl
ljmp
add
mov
fmull
out
jge
lock
orl
fadds
in
rolb
into
xor
lret
sub
aas
jmp
andl
int3
aas
aad
iret
sbbb
inc
pop
or
mov
loope
jb
jp
addb
add
mov
jmp
insb
popa
jno
sub
mov
mov
aaa
jno
popa
jns
jg,pt
call
pop
dec
fs
out
xor
xor
sub
pop
clc
mov
cmp
repnz
mov
xorl
ljmp
in
pop
mov
inc
scas
das
cmpsb
mov
adc
adc
cmp
mov
inc
add
adc
mov
sti
fdivrs
cmpsb
das
sbb
push
orb
int
cmpsb
and
mov
jb
pop
xor
idiv
js
jge
xchg
shll
cmp
xor
int
push
test
lds
add
fwait
inc
inc
mov
pop
adc
sbb
stos
add
lods
sub
mov
mov
mov
jb
fistps
fs
addr16
aas
outsb
fs
sub
jno
lods
mov
mov
cmp
test
in
or
pop
cld
bound
and
fisubl
loope
dec
notl
daa
shll
scas
mov
add
mov
mov
idiv
xchg
inc
mov
adc
loopne
jmp
mov
loopne
xchg
in
test
les
fwait
lret
pop
inc
add
lds
jae
push
jg
mov
push
inc
fs
inc
adc
cmp
push
sub
or
je
xor
xlat
int3
pop
sbb
mov
add
inc
cld
fistpll
outsb
push
adc
cltd
loope
fstp
jmp
cmp
pop
xor
push
lods
inc
into
jnp
les
push
pop
int3
test
inc
cld
cmp
cmp
out
mov
in
in
add
fucomi
cmp
mov
sbb
hlt
orl
shrb
jl
aas
jns
pop
mov
call
push
testl
cltd
out
mov
push
mov
jl
jle
dec
shrb
jns
jg
dec
arpl
xchg
pop
jnp
icebp
ljmp
push
mov
not
lret
jmp
lret
repz
ss
outsl
xchg
dec
jnp
sbb
push
pop
push
pop
or
outsl
imul
mov
fs
mov
inc
xor
cmp
inc
test
cltd
scas
into
mov
pushl
mov
scas
jno
inc
je
mov
andb
in
push
xor
push
xor
jno
mov
adc
sti
movsb
push
mov
and
ret
pop
adc
adc
push
push
lods
jns
in
dec
fwait
mov
xor
adc
push
sub
out
push
or
lret
inc
or
or
lret
sbb
mov
mov
or
cmp
test
add
mov
mov
and
insb
shrb
add
xlat
adc
iret
add
cmp
out
and
push
test
out
sbb
in
shr
imul
pop
push
testl
sbb
lds
dec
aam
xchg
inc
mov
pop
insb
enter
lret
jmp
adc
outsl
iret
sub
shl
push
icebp
aad
in
imul
inc
iret
std
xchg
lret
pop
sbb
sbb
jo
lods
sbb
in
addr16
xor
les
dec
lret
mov
inc
std
dec
mov
mov
push
gs
sbb
shll
or
jne
dec
push
and
test
fsubrs
or
lock
out
push
dec
fsub
jnp
mov
pop
adc
push
push
shr
and
ds
icebp
int3
pop
sub
add
mov
loope
and
pop
lock
ja
adc
mov
pop
mov
sbb
xchg
dec
imul
xlat
insb
mov
loop
cltd
inc
mov
inc
std
mov
mov
stos
fdivr
pop
lods
ss
lcall
cwtl
mov
push
je
rcll
sbb
mov
and
jmp
xor
mov
js
andl
stc
lret
cltd
mov
in
in
popa
inc
insb
andb
ret
jbe
push
mov
lret
stc
jns
aam
mov
call
int
push
xchg
xor
and
ljmp
mov
js
stos
in
cmp
cmp
rorl
xchg
popf
mov
pop
xchg
xchg
xchg
xchg
cmpsb
push
sub
icebp
sub
clc
clc
xlat
addl
ss
fsubrp
sub
add
insb
roll
ficompl
xor
push
mov
and
mov
mov
pusha
jmp
push
pop
xor
loopne
xchg
test
fsubrl
mov
jae
push
rolb
inc
mov
pop
pop
cmp
mov
add
adc
sbb
cli
ja
lds
sub
add
leave
orl
dec
and
repnz
popa
push
repz
int
sbb
arpl
adc
jp
sbb
mov
fildll
pop
rcl
dec
ret
out
mov
cltd
jg
or
jg
int3
leave
or
mov
jae
sub
lds
xlat
cld
jnp
and
loope
repz
repnz
jge
mov
mov
lea
push
in
xchg
ljmp
jnp
dec
xchg
imul
jecxz
pop
daa
jle
mov
add
fwait
pop
mov
jbe
lock
xor
jmp
enter
outsb
pop
xchg
aaa
cld
rep
or
sub
mov
xor
movsb
push
sbb
jb
stos
lea
mov
mov
sub
ljmp
xchg
loopne
cwtl
out
mov
push
mov
pop
mov
sub
mov
test
and
in
and
jno
mov
iret
decl
push
and
inc
rorb
mov
push
aas
sub
les
in
fsubl
outsb
xlat
pop
in
mov
cli
jecxz
sbb
cwtl
stos
cmpsl
ss
and
xchg
dec
fsubrs
inc
mov
sub
cli
mov
scas
add
and
or
notl
mov
mov
dec
mov
mov
dec
add
fiadds
add
dec
enter
inc
mov
fstpl
dec
sbb
ljmp
push
filds
xchg
hlt
cltd
repnz
sbb
push
xor
dec
test
dec
test
dec
enter
in
jecxz
add
outsb
int3
stos
pop
mov
jl
cmp
adc
test
push
mov
pop
stc
loopne
leave
mov
jno
jne
add
test
sub
pop
cmpsl
xor
movsl
inc
out
or
sar
clc
lret
cmp
pushf
jle
jne
xchg
decb
jae
imul
mov
fwait
inc
sar
push
pop
loopne
hlt
inc
mov
scas
push
outsb
sub
outsb
push
or
mov
mov
xor
jmp
ret
sbb
jnp
out
aad
cmp
inc
aad
xchg
lcall
jnp
xchg
repnz
shll
fcomip
sbb
xchg
ljmp
fbstp
test
les
inc
cmc
in
sbb
jne
cli
jno
add
and
mov
or
je
mov
inc
sbb
imul
test
jl
mov
add
inc
add
sbb
dec
pop
rclb
adc
push
cmpsl
mull
xor
roll
mov
lret
lods
movsl
adc
push
cltd
imul
loop
inc
sub
push
cmpsl
dec
and
push
pop
push
aas
mov
lods
movsb
imull
movsl
dec
or
jne
test
inc
outsl
push
or
sub
mov
loop
push
jmp
repz
out
rcrl
imul
mov
fildl
insb
clc
push
shll
add
out
dec
or
push
add
push
and
into
mov
dec
inc
cmp
daa
pusha
pop
mov
jb
stc
mov
inc
xchg
add
dec
dec
adc
xchg
outsl
push
aam
cld
mov
mov
mov
and
mov
lods
rep
pop
push
sbb
out
stos
pop
pop
adc
inc
xchg
rorl
insb
dec
ret
cwtl
arpl
pop
ror
sub
and
mov
aad
mov
xchg
sub
push
adc
xchg
dec
frstor
adc
loopne
adc
jno
cmpsl
pop
pop
ja
push
add
and
mov
xchg
cmpsl
sbb
stos
movsb
push
adc
xor
mov
xchg
insl
cmp
add
testl
jb
fwait
leave
setge
out
mov
xchg
cmp
dec
mov
pop
cs
add
xor
inc
ss
pop
outsl
repnz
sbb
sub
push
cltd
or
je
lea
jbe
cs
test
movsl
push
mov
lret
test
orl
arpl
mov
fstpl
mov
cmpl
or
or
xor
jno
jge
jb
lret
add
add
in
sub
loope
lret
mov
and
mov
shlb
and
hlt
jge
push
loope
ss
inc
inc
shl
xor
rcll
push
das
pop
lea
pop
rolb
rcrl
mov
lret
ss
addl
insl
adc
adc
push
mov
sub
gs
push
sub
andl
adc
fs
mov
imul
add
in
sbb
icebp
xor
cmpsl
fistpll
fidivs
sbb
insb
cmp
dec
fnstenv
xchg
sbb
mov
inc
shll
xor
or
and
mov
daa
xchg
fnstenv
fistpl
in
lea
cltd
sub
das
test
fs
inc
mov
push
jl
cmp
mov
push
jb
xchg
xchg
aad
mov
push
je
pop
scas
sub
mov
xchg
scas
xchg
repnz
push
mov
cmp
dec
jmp
repnz
add
das
lods
repnz
sbb
mov
out
pop
cmp
insl
mov
jecxz
scas
mov
ds
incl
mov
call
mov
repnz
stos
movsb
scas
cmpsl
insl
push
cs
ret
rcll
inc
lret
push
cmc
in
fwait
mov
shl
lret
es
sbb
inc
rcll
insb
inc
je
mov
xor
inc
pop
pop
sub
test
sub
push
cmp
mov
pop
pop
imul
push
cmpsl
mov
sub
in
lds
add
outsb
pop
mov
adc
ss
loope
decl
outsl
inc
cld
test
sbb
xor
mov
cmp
add
rorl
les
out
out
cld
mov
cmpsb
sbb
push
sahf
dec
imul
cmc
or
cmp
xlat
cmp
clc
imul
lods
aaa
lods
lods
call
xor
push
stos
test
and
or
pop
cmp
lods
dec
sarl
icebp
mov
hlt
enter
add
dec
cmp
dec
ja
lods
data16
xor
shll
pop
sarb
adc
mov
movsl
cmp
movb
add
pop
push
gs
ret
add
dec
pop
ja
cmp
sti
scas
mov
ret
dec
subl
push
test
inc
imul
ljmp
pop
push
into
lcall
mov
sahf
mov
clc
insb
add
dec
and
cmpsb
je
xchg
clc
cmp
in
pushf
sbb
adc
push
int3
testl
push
repnz
jp
xor
and
fmul
xor
loop
scas
fistl
pop
lock
test
fcompl
sbbb
mov
pop
xor
sub
dec
hlt
out
add
mov
fcmove
fidivs
xchg
push
xchg
add
mov
out
push
dec
out
mov
dec
push
addb
xor
cli
je
cmp
inc
adc
js
sub
pop
or
lret
pusha
jnp
xchg
std
js
mov
enter
xchg
in
jl
xchg
add
push
cld
int3
and
adc
stc
push
pop
and
sti
jbe
or
les
adc
sbb
and
mov
xchg
fwait
push
and
ds
pop
stc
adc
and
pop
hlt
cmpsl
movl
shl
sti
aam
aam
push
add
out
xor
repz
inc
sarb
mov
mov
dec
mov
mov
stc
push
cmc
jmp
push
fwait
in
lock
add
bound
jmp
in
push
mov
pop
xchg
call
adc
outsl
mov
into
dec
push
dec
rclb
rclb
dec
enter
adc
lods
arpl
movsl
sbb
add
add
sahf
inc
lds
and
lret
sub
jae,pt
cld
jae
stos
imul
dec
inc
iret
pop
pop
push
imul
and
into
jp
cmc
insb
das
cmpsb
jecxz
stos
fmull
cmp
fnstenv
jmp
ret
test
pop
lcall
rorl
aad
mov
xchg
jle
push
pop
lcall
xchg
rcr
pop
hlt
cs
adc
cmp
adc
xchg
popf
iret
insl
fidivrl
lods
or
jb
push
xor
rcrb
inc
mov
mov
add
lahf
pop
shr
ds
es
adc
mov
and
into
or
movsl
mov
lods
cltd
mov
or
inc
xor
sub
lods
test
imul
leave
inc
cmpl
and
jmp
outsb
and
inc
push
mov
inc
test
arpl
call
stc
xor
inc
sub
outsb
inc
or
xchg
xor
data16
popa
mov
cltd
hlt
loopne
push
enter
cmp
xor
jbe
stos
gs
inc
shll
pop
sub
jg
sbb
insb
hlt
adc
jmp
mov
xor
data16
dec
jo
jns
rcrb
cmp
bound
or
lret
lret
das
enter
sti
dec
frstor
loope
mov
xorl
in
jle
insl
arpl
scas
ret
xchg
push
sub
cld
bound
mov
add
in
ljmp
in
push
dec
iret
bound
jno
push
dec
xchg
push
inc
mov
jo
sbb
xor
xor
inc
popf
dec
pop
jns
sbb
stos
lock
call
sbb
mov
cmp
rcll
pop
sub
bound
test
cld
adc
and
add
scas
ds
idivl
and
pop
add
pop
outsl
adc
jbe
pop
xchg
dec
mov
mov
aam
test
pop
out
and
mov
imul
stos
mov
arpl
shlb
je
jmp
movsb
int3
mov
fucomp
gs
sub
gs
stos
in
mov
insb
or
fnstcw
mov
lock
push
cltd
lahf
xchg
jge
enter
pop
inc
push
add
aaa
and
sub
xchg
sbb
gs
arpl
aas
xor
xchg
aad
fdivs
fstpt
mov
mov
mov
dec
test
fdivrs
mov
mov
pop
ret
xchg
cmp
imul
jb
andl
lock
jecxz
lock
sahf
outsl
daa
test
std
fnstcw
iret
icebp
cld
fistpl
insb
dec
xor
jle
push
pop
xchg
and
inc
or
push
mov
mov
clc
stos
sbb
sub
pop
inc
adcl
daa
in
repnz
add
lcall
pop
pop
shlb
or
jbe
sub
mov
cwtl
cwtl
mov
lds
jne
dec
iret
ss
pop
test
lahf
mov
push
loope
popf
fmul
sub
dec
mov
lods
mov
cld
dec
mov
cmpsl
sbb
fs
xor
aas
inc
lahf
push
push
and
andl
sub
pop
add
sahf
rorl
loope
into
sahf
aam
out
push
enter
adc
xchg
loopne
xor
mov
movsb
push
xchg
popa
outsl
repnz
pop
iret
sub
std
mov
lds
inc
vpaddq
out
int3
sahf
jne
xchg
pop
ja
mov
mov
push
out
std
mov
xchg
cmp
or
pop
jl
push
lock
dec
push
arpl
jg
push
shll
pop
fsubr
loopne
ret
shlb
mov
fiaddl
lods
fcompl
cli
shll
cmp
in
push
inc
xchg
or
das
ret
dec
ss
or
push
add
cltd
jb
loop
in
add
jno
mov
adc
adc
sbb
mov
cmc
xchg
jecxz
xchg
outsb
test
test
mov
push
cmpsb
imulb
je
cmp
sbb
mov
lea
loopne
pop
sbb
leave
and
pop
outsb
lret
mov
je
mov
decb
push
mov
adc
mov
xchg
mov
rcl
call
bound
call
testb
loopne
jae
daa
sbb
mov
push
sbb
inc
lock
dec
in
and
mov
dec
ss
std
in
pop
mov
inc
lahf
xchg
gs
add
mov
data16
popf
outsl
pop
jno
pop
and
fdivl
pop
cld
das
addl
nop
orb
fsubl
scas
xchg
mov
xchg
dec
mov
pop
push
jg
repz
dec
cmp
clc
imul
out
mov
fcmovnu
mov
and
ja
inc
cmp
fidivl
test
pop
sbbl
scas
or
xor
add
cmp
pop
cmp
addr16
addl
pusha
adc
popa
repnz
xchg
push
stc
sub
clc
add
out
hlt
adc
andb
lods
aas
sbb
mov
push
push
arpl
add
movl
push
enter
rcr
cltd
shll
mov
sub
push
loope
imul
inc
sbb
pushf
sub
data16
stos
jno
add
xchg
js
jl
in
xor
insb
push
mull
mov
push
or
out
add
xchg
and
mov
in
dec
xlat
or
ret
jmp
push
pop
or
cmpl
inc
mov
mov
dec
das
sbb
jecxz
out
in
push
mov
pop
movsb
lcall
lahf
fidivrl
arpl
fisttpll
cmpl
cmp
fsts
movsl
and
stos
jecxz
push
loopne
mov
inc
mov
cmp
lods
fs
mov
xchg
pusha
inc
sub
scas
adc
fld
test
sub
aad
stos
ret
jmp
in
lret
lcall
push
lret
jnp
std
movsl
je
lds
lock
or
mov
cld
andb
mov
cmc
xchg
aad
inc
bnd
out
imul
or
out
pop
pop
jbe
sub
mov
pop
icebp
pop
lock
adc
sbb
fcmovne
and
cltd
pop
test
xchg
mov
lcall
ficomps
cmpsl
lock
insl
mov
push
scas
and
xor
dec
aaa
notb
cwtl
lcall
and
sarb
push
mov
dec
movsl
shll
push
and
inc
jo
mov
fstpt
arpl
add
loop
mov
or
jg
push
pop
or
cmpsl
and
push
inc
shlb
test
push
pushf
jbe
jge
cmpsl
mov
repnz
in
push
jb
xor
lea
fistpl
rcll
imul
sbbl
add
inc
ret
cmp
pop
mov
data16
lret
pop
int
dec
pop
pop
out
inc
cmp
aaa
ja
iret
xor
dec
outsb
jo
lcall
pop
or
push
and
add
cmp
into
scas
cs
or
and
and
or
push
shll
push
dec
fs
push
loopne
dec
cmpsl
cli
xor
fstpl
ja
fcoml
and
aad
rcrl
inc
aaa
lods
inc
in
data16
movsl
bnd
imul
sub
dec
stc
lock
leave
jo
pop
sub
shlb
cmp
stc
fdivl
add
xchg
and
mov
aam
sub
test
scas
jbe
and
aaa
dec
in
into
lds
pop
mov
lods
into
mov
loop
pop
inc
mov
or
sahf
cmp
in
mov
aam
dec
std
pop
ret
rorl
fisttpll
repnz
gs
gs
pop
mov
out
scas
sub
sub
inc
ja
add
push
int3
call
adc
mov
fbstp
xchg
mov
shll
sbb
add
sub
nop
mov
jmp
pop
sbb
pushf
mov
jne
inc
pop
mov
sbb
and
in
jb
in
or
cmp
mov
mov
bound
sub
pop
fidivl
add
into
jne
rorl
jp
add
push
out
ret
adc
inc
mov
jne
fstps
lock
adc
xor
jl
xor
push
pop
pop
andl
mov
jo
and
mov
popf
adc
rol
push
pop
and
push
scas
cltd
push
ret
cmp
or
cmc
mov
daa
add
mov
js
aas
add
pop
add
xor
mov
xor
scas
mov
loopne
sbb
dec
or
jecxz
inc
out
sub
add
mov
dec
cli
dec
inc
cmpsl
imul
pusha
movsb
inc
clc
dec
mov
or
andb
add
movsl
test
lock
mov
inc
outsb
inc
pop
add
arpl
xor
mov
loope
repnz
adc
mov
cmpsb
sub
cmpsb
sahf
cmpsl
bound
scas
popf
fldcw
xchg
leave
push
or
out
fdivs
fdivs
inc
mov
pop
xchg
test
dec
fists
fdivp
mov
add
jl
fisttpll
imul
cld
hlt
jnp
or
sbb
dec
mov
pushl
xchg
and
push
ds
scas
cmp
and
mov
dec
fs
mov
inc
or
test
or
stos
push
mov
push
loope
inc
push
in
imull
sahf
loopne
out
inc
sub
loopne
add
aad
add
mov
lock
mov
or
and
xor
mov
mov
idivb
mov
mov
js
xchg
jo
and
inc
js
aaa
cmp
mov
mov
xlat
push
out
or
adc
and
mov
or
adc
imul
aaa
push
xlat
mov
sub
js
xchg
lock
out
movsb
push
js
jns
outsb
leave
sub
mov
adc
outsb
loop
out
orb
in
nop
leave
push
xchg
enter
sbbb
stos
cmp
xchg
inc
inc
inc
fidivrs
inc
jns
pop
sub
pop
imul
icebp
dec
lcall
push
xchg
outsb
pop
mov
pop
scas
lret
scas
dec
dec
ss
popf
scas
pop
cmc
out
sub
mov
xchg
int3
xor
sub
sub
sub
dec
mov
mov
mov
cmpsb
add
mov
jnp
je
mov
fsubrs
adc
ja
jno
sti
xchg
inc
cli
imul
sbb
mov
adc
add
stc
int
sub
sub
outsb
mov
cmp
pushf
push
xchg
scas
dec
jl
push
std
ficoms
mov
in
pushf
push
stos
fildll
jmp
dec
shl
in
sbb
lds
paddsb
shll
rcrl
jmp
lahf
inc
jae
je
dec
jbe
push
in
jb
push
in
fsubrl
dec
stos
ret
pop
bound
and
push
mov
decl
jne
sub
fisubl
outsl
xlat
rcll
ds
and
lds
adcb
loopne
scas
sub
mov
mov
mov
in
xlat
inc
xor
cmc
addr16
loopne
daa
push
lock
lret
enter
jg
mov
or
add
push
mov
inc
sub
outsl
dec
push
add
add
add
pop
nop
jbe
insb
jge
test
int3
xchg
mov
enter
or
sahf
or
push
sbb
inc
pop
outsl
fsubrs
sub
jbe
cmp
cli
iret
std
push
add
mul
jmp
or
pop
dec
out
and
adc
mov
outsl
jb
shr
clc
sub
mov
fs
cli
stc
jg
push
mov
cmp
fs
push
cmp
adc
mov
jle
cltd
mov
xchg
push
rcrl
pop
pop
xchg
dec
jnp
jecxz
inc
cli
xchg
push
xchg
dec
add
mov
pop
test
cli
enter
out
inc
xchg
scas
mov
adc
adc
mov
fildll
mov
shl
ja
inc
jo
lahf
pushf
xor
in
push
mov
and
jmp
inc
ds
add
push
adc
cmpsl
and
lahf
push
jge
loop
push
cwtl
xor
sbb
dec
pushf
lret
sub
adc
cmpsl
aad
jmp
add
sbb
je
outsb
pop
int3
dec
jp
ja
out
outsb
jmp
inc
lods
scas
int
dec
fincstp
sub
xchg
xchg
nop
adc
xor
cmp
rcll
xlat
xor
andb
push
xchg
mov
rcrl
and
ficomps
push
and
jns
mov
jb
mov
nop
decl
push
aaa
popf
push
shl
in
addr16
fsubs
ficoml
cmp
xchg
pop
movsl
mov
and
mov
repz
jge
rcll
je
in
sbb
iret
je
xor
or
scas
nop
and
daa
insb
push
jae
test
push
sub
lock
push
xor
lcall
pop
mov
xor
add
push
movsb
or
std
mov
inc
mov
hlt
dec
and
mov
pop
outsl
bound
pop
mov
mov
sahf
fs
jnp
and
xor
ljmp
int3
pop
dec
push
sti
lcall
sbb
rclb
aas
or
scas
in
adc
das
mov
cmp
adc
subb
fmuls
adc
scas
call
scas
mov
and
mov
sub
cli
sarl
js
insl
call
lods
inc
fmull
cwtl
scas
addl
shll
pop
int3
mov
ljmp
inc
mov
fistps
push
les
mov
cmp
jns
sub
xor
add
jbe
cltd
int
cmp
test
push
incl
call
jle
push
and
out
or
dec
daa
mov
enter
push
jp
es
rcrb
adc
add
jge
jecxz
lods
inc
mov
add
or
cltd
aam
movsl
lods
inc
and
cmp
cmp
sub
sahf
inc
ljmp
sbb
mov
mov
subb
jnp
rcl
dec
cs
decl
fsubrl
pop
inc
scas
sub
dec
jno
mov
xchg
stos
movl
sbb
pop
mov
push
in
sub
mov
not
xor
iret
je
scas
out
pop
aas
int3
adc
pop
outsb
hlt
add
add
dec
movups
mov
cmp
inc
ja
or
lods
and
jbe,pn
ss
sbb
dec
lods
pop
and
dec
icebp
jne
mov
lods
daa
sub
mov
push
sbb
add
xchg
lahf
lock
mov
int
mov
mov
cmpsb
int3
je
mov
fldenv
loop
pusha
aad
or
mov
sahf
les
jg
pop
stc
loope
sub
jne
xor
leave
dec
sti
popf
iret
loop
inc
pop
jnp
sub
push
fs
pop
add
enter
repz
sbb
stos
jl
in
push
mov
pusha
xor
xor
lahf
mov
pop
jns
and
int3
pop
test
push
in
das
je
sub
faddl
outsb
push
movsl
cmp
push
jns
push
push
in
stc
sbb
cmp
call
xchg
pop
test
pop
dec
pusha
pusha
xchg
xchg
push
imul
jbe
repnz
xor
clc
and
pop
mov
ret
cwtl
fidivl
mov
popf
mov
xor
and
jne
fimuls
les
enter
push
mov
xor
leave
jne
popf
push
iret
repnz
test
mov
cmp
and
push
stos
jbe
adc
push
jo
adc
mov
xor
mov
popf
add
or
aad
adc
xor
xchg
add
sbb
mov
pop
xor
xchg
out
fnsave
hlt
lcall
stc
mov
stc
bswap
add
pushf
cmpsb
pop
sub
push
loop
arpl
xor
pushf
push
push
std
dec
jo
aad
xor
jl
mov
xor
jb
rcll
sbb
int
andl
jg
mov
clc
xchg
mov
cs
enter
or
nop
mov
std
insb
faddp
sub
sub
xchg
push
jle
dec
mov
mov
mov
xchg
mov
mov
push
negb
xor
pusha
sbb
adc
pop
push
gs
push
push
pop
xor
std
ljmp
dec
movsb
cmp
sbb
movsl
ds
stc
mov
dec
jp
sbb
daa
push
xchg
jno
xor
xor
movsl
arpl
cmp
xchg
mov
shll
mov
mov
lea
sti
xor
scas
enter
pop
pop
jbe
inc
xor
xor
cmovs
iret
loope
mov
jnp
push
lret
jns
stos
pop
dec
xchg
in
movsl
rol
aas
xchg
jmp
cmc
pop
flds
mov
data16
sahf
imul
xchg
mov
push
mov
das
and
xor
xchg
mov
ljmp
shlb
xchg
subl
inc
sbb
add
cmp
add
je
repnz
mov
shr
xor
xchg
ret
repnz
add
rorl
dec
cld
mov
xor
dec
into
imul
dec
pop
pop
pop
lds
rcrl
es
addr16
xchg
mov
and
pop
int
cli
or
loopne
testb
shl
dec
jns
adc
mov
out
jo
sub
out
sub
pop
fidivrs
mov
sub
jp
lret
cwtl
inc
aaa
test
iret
sbb
mov
mov
sub
cmp
clc
jo
das
or
jg
push
mov
aam
fstps
bound
mov
jo
mov
inc
popa
and
jp
mov
sbb
sbb
jne
push
push
xor
sub
mov
push
ja
pusha
xor
jge
xor
cmpsb
mov
push
test
outsl
inc
cmp
repz
xchg
adc
aam
adc
xchg
pop
push
sbb
or
dec
dec
inc
outsl
scas
xchg
mov
fs
fcmovnu
popa
xchg
pop
pmullw
pop
sub
bound
imul
pop
fld
adc
xchg
lahf
add
xor
xchg
push
in
ret
rcrb
mov
lret
mov
movsb
pop
mov
stos
icebp
aas
out
inc
pop
jno
aam
int3
sub
inc
ljmp
repnz
fldt
jnp
inc
addl
mov
sub
push
mov
aas
mov
int3
out
out
fwait
call
sahf
stos
mov
jle
jmp
sbb
jb
cmp
rcll
jbe
xor
sub
and
sti
insb
and
push
cwtl
lods
add
add
cmp
xchg
or
icebp
inc
push
mov
sbb
repnz
mov
test
push
pop
push
mov
or
mov
or
and
inc
jecxz
mov
dec
pop
ja
push
notb
mov
sbb
mov
call
mov
repz
cwtl
push
dec
mov
jecxz
aas
out
test
jle
mov
cmp
push
pop
mov
push
movsl
inc
stos
pusha
stos
mov
mov
jg
adc
addr16
mov
hlt
sub
cli
cmp
pop
movsb
jmp
aam
hlt
cmp
or
into
mov
adcl
dec
loop
incl
or
test
add
or
inc
enter
push
mov
dec
mov
push
pop
sbb
bound
xchg
pop
sar
jl
sarl
jae
cmc
fsubr
push
insb
repz
dec
imul
or
xchg
push
sub
cltd
addb
das
stc
lahf
call
rolb
test
add
ljmp
mov
push
rcrl
popa
pop
xchg
push
js
mov
roll
pop
sub
mov
nop
andl
aas
xor
int
jge
cmpsb
int3
pusha
ja
dec
pop
cwtl
xor
ror
xlat
insb
xor
test
xor
lock
sbbb
sahf
and
mov
push
mov
mov
cmpsb
arpl
xor
movb
pushf
and
inc
and
je
les
sbb
pop
dec
popa
inc
test
push
lret
movsb
lret
cld
std
sti
out
dec
mov
sbbl
push
out
loopne
cld
outsl
jge
scas
inc
push
xchg
rol
mov
jno
movsb
lcall
sbb
stos
push
adc
adc
inc
clc
leave
repz
stos
in
clc
and
sbb
xor
js
pushf
jae
daa
add
mov
jb
mov
adc
mov
fcmovbe
xchg
shlb
jecxz
or
insb
lds
or
mov
lret
je
inc
push
pop
loop
cmp
sahf
aaa
loope
lds
and
jb
cmp
sub
push
rcrl
out
mov
dec
and
inc
xor
xchg
and
adc
cmp
fyl2x
stc
inc
inc
jl
lods
pop
std
jo
or
je
jg
sbb
jne
aad
lods
mov
cltd
push
call
test
imull
or
jg
nop
xchg
test
or
push
xchg
movb
cltd
add
adc
decb
js
imul
jae
mov
and
mov
sbb
mov
int3
sub
test
push
imul
mov
dec
sbb
mov
sbb
add
mov
or
dec
pop
dec
mov
sbb
mov
inc
es
mov
mov
shll
stos
in
or
push
xor
gs
inc
push
jle
dec
inc
js
cmpb
sub
and
add
rclb
daa
xchg
push
insl
outsb
pop
scas
clc
out
adc
push
movsl
dec
fisubrs
rcrl
in
adc
test
xchg
mov
aaa
push
sti
push
push
cmp
lahf
and
stos
in
mov
cli
sbb
pop
fbld
shrl
sub
scas
pop
sbb
rcl
popf
sub
ja
mov
aad
dec
ret
out
cmp
outsb
das
and
push
add
sbb
ret
push
push
xchg
scas
imul
push
pop
fisubs
push
fcomps
xchg
loopne
mov
mov
es
dec
test
iret
mov
pop
lock
ret
ds
dec
dec
aas
dec
loope
ret
lret
lods
or
xorb
pop
jmp
stos
repnz
enter
mov
push
add
sti
test
and
dec
pop
xchg
fld
jb
or
jg
pop
fcomi
inc
in
stos
dec
mov
pop
xchg
pop
dec
adc
mov
fcomps
mov
syscall
scas
imul
mov
add
cli
jne
adc
sub
jbe
sub
iret
jnp
sbb
mov
popf
arpl
push
add
pop
fsubrs
jb
mov
cmp
cs
dec
arpl
fwait
dec
jno
push
sbb
sbb
outsb
jge
lea
pusha
add
xor
inc
mov
mul
sub
enter
add
fs
xchg
gs
mov
xchg
sub
out
sbb
stc
test
pop
inc
cmpsb
push
cmp
jo
out
dec
cmpb
arpl
aaa
dec
mov
mov
sbb
jne
in
lret
mov
sbb
xor
mov
jge
pop
aad
mov
rcr
cmp
in
sub
lcall
in
rcrb
lahf
xor
lahf
cmp
jle
outsb
bound
sub
test
lea
xchg
fstpl
pop
push
cmp
fstl
push
push
push
pop
mov
stc
jmp
mov
dec
std
cmp
enter
into
fldl
push
negl
xchg
es
mov
inc
cmp
cs
jge
xchg
enter
xchg
aad
pop
and
repnz
rcl
xchg
xlat
jb
mov
aas
xor
dec
idiv
dec
dec
lahf
or
xchg
jmp
xor
data16
or
clc
dec
popf
xchg
mov
mov
sbb
test
pop
xchg
add
mov
out
jo
andl
or
mov
jae
pop
or
test
jle
stc
xor
push
dec
xchg
stc
add
xchg
push
decl
mov
popf
jmp
mov
insl
push
lret
dec
pop
scas
inc
cmp
xor
bound
lcall
push
push
test
lods
push
outsb
daa
call
in
into
movsb
adc
cli
push
fsubs
dec
scas
test
or
into
mov
scas
fcomps
dec
cmc
xchg
or
mov
add
and
sar
fadds
outsb
cwtl
lods
xor
add
sub
repz
test
mov
in
daa
xchg
iret
sti
in
adc
push
add
or
xchg
mov
push
push
stc
out
loope
popa
xchg
loop
mov
lock
push
inc
add
imul
mov
cmc
mov
mov
das
adc
add
adc
xor
mov
inc
mov
adc
sbb
fs
ds
xchg
adc
sbb
out
or
call
or
fistpll
fs
stos
and
xor
fcmovu
neg
jg
incb
popf
in
nop
inc
gs
fwait
add
mov
daa
push
pop
loope
dec
mov
loopne
mov
mov
loop
rolb
decl
sbb
testl
pop
inc
ror
mov
out
sub
xchg
push
mov
dec
lahf
cld
lret
sbb
sti
sti
inc
xchg
push
test
or
sbb
mov
test
rorl
or
call
pusha
mov
pop
lcall
inc
cmpsl
and
inc
inc
mov
cli
sub
stos
mov
xorl
imul
in
hlt
xchg
movsl
test
mov
jg
pop
push
mov
jp
ret
mov
push
je
xchg
leave
or
push
jecxz
cmp
dec
lods
xchg
ficoml
movsl
push
jne
add
idivb
lret
add
pop
outsl
inc
roll
mov
or
adc
out
push
add
lret
fs
xor
lds
sbb
fmuls
lea
inc
adc
std
loope
ljmp
int3
in
inc
push
pop
sti
ja,pn
das
mov
adc
mov
and
nop
push
pop
rorw
aad
mov
pusha
icebp
aad
push
loop
lea
test
cwtl
xchg
sarb
inc
stos
add
lahf
addb
dec
das
aaa
jb
push
shrl
sbb
xchg
adc
push
shrb
jg
popf
jl
cmp
loopne
cmc
inc
push
sub
loop
sbb
pop
mov
call
shll
xchg
cld
push
call
mov
jmp
push
pop
sbbl
add
cwtl
je
push
dec
adc
push
jmp
adc
aam
mov
daa
js
lahf
or
xlat
jge
xor
jl
sub
pop
ret
daa
add
adc
xor
mov
or
jo
cltd
out
mov
das
jae
mov
lret
ret
in
jl
lea
divb
dec
insl
fcoms
in
rcl
cwtl
cmovs
sub
jge
adc
cmp
aad
xchg
out
or
add
test
sahf
fs
jge
mov
sbb
and
adc
sbb
inc
adcb
sub
fidivrl
inc
jge
cmp
cmp
pop
mov
add
test
jo
and
adc
adc
mov
and
xchg
sub
jns
cmp
arpl
loope
jecxz
arpl
imul
stos
adc
call
push
inc
mov
and
mov
sub
hlt
insl
inc
add
jl
mov
push
pop
das
inc
test
pop
out
pop
les
sbb
push
sbb
dec
mov
mov
fnstsw
aas
adc
and
mov
dec
jnp
push
test
mov
pop
mov
lret
inc
addb
and
push
cs
add
leave
inc
aas
dec
and
in
out
mov
add
notl
jno
sti
jle
mov
push
xchg
cmp
mov
jp
inc
pop
mov
jno
xchg
ret
mov
lds
mov
pop
es
mov
xchg
xchg
cmp
inc
rclb
add
aam
rorl
dec
push
xchg
or
sbb
jns
mov
push
and
jl
mov
xor
push
or
mov
sti
jae
int
je
out
dec
pop
outsb
jge
lahf
pop
add
mov
and
push
or
xor
sbb
mov
movsl
mov
mov
ret
push
push
or
jbe
fstpl
test
movb
push
inc
inc
mov
and
and
mov
adc
aam
clc
add
or
or
ret
loope
in
inc
scas
clc
hlt
mov
sbb
out
dec
pusha
inc
repz
pop
add
sti
dec
sbb
gs
jp
es
fcmovnb
out
mov
lret
jae
jb
int
mov
shrb
pushf
pop
pop
sub
jge
stos
mov
mov
ljmp
das
or
push
das
ja
dec
xor
and
mov
lret
pop
les
mov
and
in
lcall
es
and
cmpsl
xor
sbb
add
icebp
adc
xchg
push
mov
adc
icebp
lods
fldl2e
xchg
icebp
in
inc
add
lods
test
insl
fidivs
xor
or
lret
aad
cmpsb
inc
fcoml
jle
les
ret
or
lahf
scas
jle
stos
repnz
and
xchg
lret
pusha
dec
mov
arpl
cs
pop
loop
push
cli
pop
pop
inc
jecxz
sbb
dec
sbb
lock
stos
out
inc
js
into
std
mov
cld
xor
mov
xor
inc
or
pop
lock
and
mov
fs
out
push
and
out
lods
aaa
fsubrs
sbb
sub
pop
sub
mov
inc
icebp
pop
pop
aad
pop
rclb
lock
push
push
clc
dec
or
shrl
mov
lds
add
movb
cli
lea
push
and
pop
cltd
add
sar
inc
dec
mov
cmp
adc
cmp
daa
cmp
imul
add
xchg
push
cmp
mov
dec
xchg
dec
das
iret
mov
sub
adc
xor
pop
lahf
mov
data16
add
push
sti
xchg
mov
mov
vpmullw
xchg
fs
ljmp
clc
cli
in
xchg
mov
push
outsl
mov
mov
rol
inc
xchg
inc
dec
sar
mov
xor
inc
xchg
popa
mov
pushf
rorb
popa
lret
adc
imul
and
aaa
js
sbb
mov
mov
jecxz
lods
push
jl
aad
or
das
sub
inc
es
pop
rcrl
fcomi
in
rolb
mov
lock
push
mov
gs
inc
stos
icebp
and
and
fisttpll
jb
nop
cmp
movsb
scas
mov
inc
mov
addl
mov
out
lods
adc
mov
pusha
jns
std
xorl
pop
adc
stos
fbstp
ret
or
popa
insl
icebp
dec
iret
push
fldt
adc
outsl
mov
jne
addr16
mov
ss
arpl
mov
dec
int
imul
cmpb
push
add
out
clc
sub
and
inc
or
gs
adc
pushf
push
xor
lds
pop
and
jns
rorl
adc
cmp
or
sub
xchg
pop
stos
pop
jl
fsubr
loop
nop
ret
pop
adc
adc
lea
xchg
mov
inc
jmp
mov
fidivrl
pop
jmp
and
jmp
push
iret
out
and
jmp
or
pop
out
cs
icebp
mov
aam
add
and
out
xchg
or
and
push
gs
sub
enter
scas
add
mov
loopne
vpcomub
mov
dec
lds
mov
call
data16
imul
or
lret
pop
in
jnp
sbb
jge
pop
mov
inc
scas
sbb
repnz
rcrl
imul
ss
push
mov
and
dec
sbb
push
xchg
bound
in
adc
cmp
int
add
aaa
test
pop
and
addr16
repz
jp
xchg
lock
shrb
cmp
sarb
aad
push
hlt
cmpsl
sbb
jle
mov
lods
inc
mov
or
jmp
ficoml
pop
cmc
jecxz
push
sub
jmp
out
fildl
ret
jo
into
mov
dec
pusha
cmpsl
or
push
add
data16
lea
test
gs
in
xor
rcr
shrl
cmpsl
lock
push
push
inc
cli
and
test
inc
mov
fs
push
rol
pop
fldenv
inc
lods
adc
iret
roll
out
mov
addr16
and
lret
inc
out
rcll
leave
out
scas
cmp
repnz
insb
add
xchg
xchg
adc
xchg
fiaddl
popf
shlb
pop
fldcw
test
out
or
dec
cmpb
insl
or
sti
sti
jg
push
jb
in
or
inc
fstps
fmull
mov
or
cmp
add
cmpsb
add
cmp
scas
pop
in
mov
ret
das
push
jbe
pop
mov
and
stos
pop
pop
lods
loope
xchg
and
out
imul
sub
pusha
mov
mov
aaa
fsubrl
push
lods
lahf
add
test
nop
fdecstp
scas
jbe
mov
jo
lahf
stos
cmp
mov
pop
cld
sarl
test
clc
sti
les
aas
push
push
and
sbb
xchg
add
fildll
into
andl
add
sbb
addb
je
or
pop
adc
scas
ja
fistpll
out
and
and
insl
sub
insb
add
pop
mov
rcrl
divb
cmp
adc
popa
enter
hlt
in
jg
or
cmp
jecxz
dec
icebp
cld
xchg
or
adc
fisubs
cmp
stos
adcl
cmpxchg
sbb
fdivr
outsb
inc
enter
mov
fsubl
test
mov
lret
dec
mov
mov
mov
xchg
in
inc
ja
fwait
mov
mov
jl
mov
mov
addr16
or
outsb
push
mov
jmp
je
jne
outsb
push
int3
pop
xchg
xor
pop
pop
popf
sbb
xor
jmp
enter
std
and
pop
xchg
mov
daa
faddl
push
mov
insl
hlt
push
add
ljmp
aas
xchg
push
movsl
testb
mov
sbb
fwait
mov
jbe
repz
mov
xchg
mov
int
into
cmp
jp
adc
pcmpeqd
jne
or
loop
clc
cld
mov
lods
add
push
mov
into
ret
inc
fwait
ret
push
subl
push
mov
mov
push
push
xchg
ret
and
in
flds
outsl
mov
cmpsl
test
gs
in
mov
mov
jl
push
cmc
outsb
lcall
imulb
or
cmp
pop
scas
mov
mov
lea
pop
and
and
jge
ret
and
ss
mov
movb
add
jl
jae
adc
inc
add
les
lret
shlb
fs
cmp
xchg
push
adc
sub
jg
add
add
inc
les
sub
clc
hlt
movsb
sub
hlt
out
ss
hlt
cmp
xor
dec
in
movsb
jge
fs
add
cs
inc
xchg
lret
arpl
jns
mov
xchg
mov
mov
mov
mov
das
mov
sbb
call
sbb
mov
inc
in
push
jg
inc
jnp
add
lret
mov
outsb
shr
out
cld
adc
scas
ja
sbb
fcomp
cmp
add
lock
movsl
in
loopne
adc
jb
stos
fisttpl
mov
mov
sub
stos
and
pop
push
je
xor
xor
imul
jg
jae
xchg
push
lea
push
stos
jno
dec
stc
cli
loop
adc
cwtl
jmp
pop
lods
lds
jecxz
inc
pop
add
hlt
jne
sbb
push
jo
stos
adc
int3
add
lods
add
cmc
add
dec
xchg
enter
push
mov
ror
mov
ljmp
rcll
ss
xchg
xlat
arpl
loope
repz
push
pop
movsl
jmp
xchg
dec
jle
mov
cs
mov
faddl
pop
mov
pop
or
xchg
nop
outsb
push
mov
lcall
dec
andb
adc
jae
ss
cmp
outsl
ret
outsl
inc
adc
and
daa
mov
iret
adc
ret
lock
cvtdq2ps
adc
int3
jl
or
popa
jb
and
stos
mov
pop
out
xor
fstpl
sti
mov
xchg
mov
scas
leave
fwait
xchg
cli
adc
int
xchg
cmc
lcall
jne
aaa
loopne
jns
fsubrs
lcall
mov
shlb
mov
push
jo
xchg
jne
push
test
loop
shr
dec
loop
jge
jle
cmp
imul
and
add
inc
push
xchg
dec
cmp
mov
push
je
mov
in
jp
scas
add
mov
and
mov
dec
scas
adc
sbb
dec
shlb
sub
and
push
out
adc
push
xchg
test
dec
loop
mov
fmul
jle
aaa
fldl
outsb
jns
lcall
add
push
cmpsl
psadbw
mov
int
jle
in
mov
push
scas
xchg
jmp
jae
out
test
push
data16
mov
lock
mov
cli
les
push
mov
popf
inc
int3
push
ljmp
cwtl
and
dec
pop
and
cmp
inc
pop
adc
xor
sarl
push
ja
out
xor
xor
fwait
jl,pn
cmpl
repz
enter
add
and
push
dec
xchg
leave
rcrb
lds
cmpb
call
and
aaa
hlt
xchg
cmp
dec
and
push
cmp
mov
sbb
ja
cli
cli
in
pop
out
std
adc
pop
aaa
pop
mov
nop
imul
lods
int3
inc
cld
add
pop
rorl
dec
cs
push
stc
mov
cs
sbb
outsb
add
sub
and
add
push
aas
xor
pop
clc
movsl
mov
pop
outsl
test
push
dec
push
out
negb
pop
int
bound
mov
dec
lds
mov
cs
dec
or
pusha
xchg
mov
pop
adc
shr
cltd
dec
sbb
xchg
pop
or
fldenv
inc
outsl
cmc
sahf
orb
call
cmp
fildll
push
or
jb
arpl
jbe
sbb
sbb
in
push
mov
daa
scas
shll
daa
xor
pop
pop
sub
std
sub
sub
scas
pop
ja
push
imull
fstpl
and
mov
jg
push
xorb
mov
sti
jne
adcb
mov
call
pop
scas
loope
xchg
pop
mov
lcall
cmp
iret
xchg
aad
fs
sbb
jbe
adc
decl
pop
imul
iret
sahf
pop
cmpb
nop
lods
mov
lret
push
mov
in
xor
mov
mov
ficoms
je
dec
push
or
out
lret
dec
xor
and
pop
sti
in
mov
or
roll
xchg
ljmp
int3
xchg
add
push
xor
jl
add
mov
cs
push
sbb
and
jb
jmp
fcmove
sbb
mov
xchg
aad
and
jle
test
ds
mov
lahf
inc
xor
pop
sbb
sub
dec
pushf
test
push
scas
movsb
mov
leave
inc
in
pop
outsb
jp
adc
jp
and
cmpsb
sbb
psubusw
sbb
mov
adcl
pushl
fsubl
out
fwait
jecxz
ret
inc
and
clc
add
loopne
push
sub
pop
mov
fsubs
inc
jmp
xsaves
popa
imul
dec
or
aam
ror
cltd
jae
les
push
imul
pop
fcoml
pop
or
fdivs
nop
stc
mov
ja
pslld
mov
imul
popf
dec
mov
or
add
jmp
rcll
mov
hlt
add
pushf
lds
sbb
rcl
mov
fisttps
lcall
sub
mov
ja
inc
out
jge
js
inc
pop
xchg
int
and
jle
cmpsb
int3
out
mov
addr16
iret
mov
imul
and
push
pop
popa
inc
std
sub
sahf
push
or
inc
add
stos
xor
adc
jmp
int
inc
xchg
cld
xor
cmp
xlat
xchg
inc
lea
fldt
in
rolb
mov
cs
mov
jns
pushf
jbe
mov
es
ret
add
sbb
rcll
mov
ja
clc
add
lea
mov
mov
mov
and
dec
fs
iret
imul
dec
mulb
sbb
outsb
out
daa
and
pop
xchg
push
hlt
jle
stos
bound
push
mov
das
cmp
xchg
loop
sub
out
es
push
xchg
lret
dec
and
xor
mov
xchg
addr16
jnp
movsl
or
call
inc
insb
mov
add
or
sahf
lret
mov
or
popl
repz
loopne
mov
stos
fdiv
mov
pop
pop
add
sub
fidivrs
cmpsb
jge
scas
adc
bound
dec
jbe
out
movsb
sbb
sbb
push
push
insl
js
jl
arpl
xchg
add
dec
add
mov
mov
and
xor
dec
mov
int3
out
cltd
clc
jge
or
jl
xchg
jg
mov
je
jmp
icebp
out
shrl
mov
sub
xchg
xchg
sbb
xchg
test
xchg
ret
test
lea
fld
daa
fisubl
inc
push
dec
cltd
mov
dec
ja
add
jle
add
inc
mov
pop
inc
cmpsb
div
bt
xor
add
aas
lcall
cmp
mov
rcll
push
fimull
push
ja
xchg
push
sub
dec
adc
push
push
mov
lret
pop
mov
and
xchg
enter
movsl
add
mul
adc
inc
sbb
dec
xchg
jmp
ret
addr16
jle
testl
mov
and
ja
pusha
roll
inc
fldl
lcall
adc
dec
faddl
jge
sub
fidivs
test
icebp
bound
addl
aam
add
dec
mov
pusha
test
mov
adc
cmp
shlb
in
sub
dec
sbb
hlt
jno
int3
inc
scas
in
loopne
inc
mov
pop
ret
popf
mov
ret
fldcw
out
fdiv
jg
pop
insl
nop
push
mov
inc
add
and
imul
mov
or
fs
sub
push
pop
jns
cmpb
test
cmp
mov
push
cltd
pop
stos
fildl
mov
sahf
ja
andl
in
or
insl
int3
xor
icebp
xor
jo
imul
imul
mov
or
fistl
hlt
mov
dec
inc
push
lock
and
lds
sbb
mov
push
out
or
cmpsb
dec
or
jl
les
jo
push
push
cwtl
call
push
or
and
adc
push
pop
jns
outsl
inc
lcall
add
or
pop
out
stos
dec
enter
jg
jb
pusha
mov
mov
add
mov
lods
pop
push
sub
push
bound
pop
xchg
enter
enter
divl
xor
sbb
xchg
in
jbe
hlt
ror
mov
jae
mov
adc
mov
scas
and
loopne
stc
shl
cwtl
out
out
and
add
test
jle
cmp
sub
mov
cmp
sbbl
les
ljmp
dec
add
pop
xor
dec
in
repz
jns
xchg
xchg
dec
test
leave
and
insl
aam
jns
or
and
pop
into
pop
loop
xor
jl
lret
xor
call
mov
pop
mov
sub
sbb
test
loope
or
sbb
repnz
lahf
fidivl
in
mov
lds
add
cwtl
xchg
in
push
fsubrl
jl
sbb
sar
fcmovb
out
inc
sbb
ret
ret
sar
test
inc
push
out
dec
lock
fadds
add
cmp
pop
clc
lds
push
lods
fdiv
dec
hlt
das
pop
xchg
add
int
add
scas
cmc
notb
js
out
ret
out
in
aam
cmp
adc
add
pop
pop
mov
dec
pop
mov
mov
mov
ret
push
testl
adc
aad
add
scas
inc
je
inc
lods
mov
or
fidivrl
icebp
sti
movsl
jo
jae
repnz
js
icebp
xor
insl
push
test
mov
gs
push
jg
xor
sub
and
mov
in
aam
fadds
repnz
divb
add
dec
stos
mov
pop
dec
push
jae
jns
hlt
lea
out
cmp
popf
dec
mov
das
imul
mov
sahf
pop
iret
mov
xchg
in
mov
outsl
xchg
mov
pusha
dec
jnp
fs
jb
jnp
sahf
rol
cmp
in
ret
push
lahf
in
and
mov
int
in
and
jp
test
ret
outsl
out
xchg
pop
sub
ja
js
leave
mov
sbb
jge
pop
pop
or
loop
out
mov
je
add
enter
out
mov
fmull
clc
dec
repz
cmp
push
lock
mov
adc
xchg
cld
js
pop
push
les
cmc
mov
pop
push
aas
into
cmc
or
cmp
add
in
and
cmp
mov
hlt
dec
rorl
cwtl
mov
scas
mov
loop
adc
jae
inc
pop
outsl
and
mov
mov
sbb
push
lret
ja
pushf
hlt
cs
clc
mov
rorb
mov
pop
out
dec
shl
mov
test
pop
add
popa
xchg
call
aam
fdiv
inc
mov
lahf
popa
leave
shr
jae
in
xor
popa
aas
cs
jecxz
ja
sub
lcall
add
sub
jns
ds
inc
mov
inc
stc
sbb
jns
push
pop
fisttpll
rcr
std
mov
sbb
fldl
inc
outsb
mov
repz
lcall
xor
dec
ret
inc
imul
sbb
mov
sbb
fcomi
jno
aas
shrb
jp
xor
cmp
aad
pop
js
stc
pop
sbb
fildl
jg
mov
sbb
inc
cmp
movsl
fsubl
pop
push
rol
fabs
inc
xchg
mov
mov
lea
int3
xor
enter
insl
cmc
jns
ja
add
mov
popf
jb
imul
dec
pushf
cmovae
or
xlat
xchg
shrb
pop
icebp
sbb
pop
sbb
cmp
or
js
rcll
mov
rorl
imul
xchg
pop
stos
mov
add
pushf
out
cmpl
sub
or
pop
adc
mov
jno
fsts
movsl
in
adc
ja,pt
bound
ss
inc
jno
jmp
clc
enter
pop
insb
call
popa
flds
xchg
add
aas
out
push
and
xchg
je
out
add
repnz
xchg
xor
sbb
in
xor
hlt
mov
repz
adc
dec
cmp
shll
push
pop
mov
leave
and
fidivrl
decb
pop
mov
push
pop
mov
mov
call
mov
push
pushl
mov
push
cwtl
dec
test
mov
pop
mov
stc
xchg
jp
mov
lea
pop
and
shll
jle
mov
jbe
aam
call
xor
stc
outsb
cmpsl
mov
inc
shll
mov
dec
movsl
fisttpll
adc
das
loope
cmc
xchg
test
mov
negb
jecxz
xor
and
dec
out
adc
imul
xlat
in
lea
shl
sub
mov
and
and
push
sub
inc
jg
push
mov
xor
mov
hlt
test
mov
cmc
push
inc
mov
mov
xchg
jnp
and
aas
fcoms
outsl
sub
xlat
inc
jnp
adc
mov
cs
mov
pop
test
jbe
sbb
mov
daa
push
daa
imul
stc
std
mov
nop
mov
xchg
jle
jnp
or
and
mov
mov
lods
hlt
js
lds
stos
dec
stos
out
dec
mov
mov
iret
js
mov
cld
push
cmp
or
dec
mov
lock
sub
add
xor
repz
in
das
inc
hlt
lods
push
imulb
shrl
inc
fcmovbe
outsl
mov
in
cs
out
ds
test
lret
and
sub
push
cmp
int3
push
fcmovnu
pop
pop
int3
iret
dec
mov
xchg
outsb
imul
push
dec
and
loope
adc
cmp
inc
addr16
adc
rep
jno
inc
xorl
pop
stos
repnz
push
sahf
dec
sahf
xlat
aam
dec
popf
fiaddl
lret
push
sbb
inc
ljmp
xchg
cmp
jp
outsl
imul
inc
jle
cmp
cmp
daa
cmp
cmp
imul
xchg
mov
aas
adc
outsb
xor
fisubs
xor
xchg
mov
xor
jg
decb
enter
adc
loop
cmpsb
and
call
cmp
mov
mov
out
xchg
mov
xor
mov
lret
jo
movsl
andb
repz
and
lret
mov
pop
pushf
gs
repz
mov
mov
mov
and
cmovl
xor
gs
cmpsl
test
out
pop
jnp
gs
shrl
jnp
out
pop
mov
lods
outsl
and
cwtl
cwtl
and
push
dec
gs
jns
je
mov
xchg
shlb
out
lods
inc
inc
jno
or
xor
pop
out
idivl
test
cmpl
into
mov
test
pop
jge
sbb
icebp
int3
cmpsb
xlat
inc
fisubrl
cmp
stos
in
jge
sbb
out
dec
push
outsl
fs
rcr
loope
mov
or
inc
js
sub
aad
rolb
sbb
das
repnz
movsbl
out
test
adc
fcompl
je
jmp
rcll
cmpsb
cmp
lods
cmp
push
cmp
mov
popa
pop
rcll
cli
cmpsb
mov
push
pop
xchg
xlat
mov
popf
popa
repz
dec
popf
xor
arpl
fs
pop
test
and
adc
inc
cld
gs
xor
mov
mov
xchg
pop
shlb
push
mov
mov
je
out
mov
outsl
pop
out
push
loop
mov
pop
mov
mov
push
xor
inc
rolb
ljmp
enter
ljmp
pop
adc
mov
out
testl
xor
push
xor
sub
lea
insl
jmp
stc
xchg
push
sub
fwait
push
mov
push
add
push
adc
pop
imul
dec
and
xor
in
xlat
arpl
lcall
jno
push
nop
out
mov
add
push
fnstsw
xchg
or
fidivl
mov
data16
inc
inc
fs
es
cmp
icebp
pop
clc
or
loopne
jmp
nop
loopne
incl
jg
inc
inc
mov
or
dec
mov
in
mov
int
lock
cltd
pop
mov
xchg
jecxz
add
or
mov
dec
jns
leave
test
cmp
xorl
sbb
lcall
push
orb
aam
push
pop
mov
mov
addr16
fs
sbb
inc
adc
popa
xchg
fstps
ret
dec
movsb
sahf
sbb
push
leave
hlt
scas
xor
adc
xor
sbb
addr16
mov
push
add
sahf
cmp
pushf
testb
in
push
iret
das
or
subb
mov
scas
push
sbb
fs
inc
pusha
outsl
mov
push
push
int3
in
mov
stos
push
inc
jmp
pop
movsl
fcoms
insb
push
xchg
jle
ds
mov
sbb
outsb
in
aas
and
lock
mov
or
out
repz
into
jo
sub
cmpsb
int
lcall
adc
push
lods
push
lods
or
pop
popa
mov
sbb
sbb
into
sti
xor
jl
mov
loop
xchg
jbe
jecxz
xor
fnstenv
pop
int
lea
divl
cmp
jbe
add
mov
fists
push
dec
push
or
sub
loopne
dec
dec
iret
xchg
add
push
inc
dec
out
adc
sub
mov
fmul
popf
and
inc
pop
pmaxub
adc
fbstp
cmp
xor
mov
inc
push
xorb
and
movsb
push
lcall
pop
fmull
iret
das
in
mov
adc
ljmp
mov
movsb
hlt
fdivrl
in
aad
add
lods
xchg
jne
fs
aas
movsb
xor
aaa
stos
mov
jmp
stc
mov
test
fdivrl
jle
out
int
or
sub
xchg
mov
jne
jo
and
xchg
mov
addr16
push
xor
push
sub
mov
or
cmp
jbe
mov
gs
add
pop
adc
arpl
pusha
pushf
mov
ret
inc
inc
xchg
xchg
or
arpl
push
shl
or
scas
inc
sahf
cli
daa
insb
cli
jnp
dec
cmpsb
mov
xor
enter
xchg
shlb
clc
int
cs
mov
test
fisubl
scas
lret
mov
enter
idivb
or
int
jge
rol
aam
jle
ret
mov
push
cmc
jae
scas
and
out
test
lcall
movsb
fildl
inc
push
lods
cltd
addr16
cmpsl
inc
in
pop
iret
cs
cmp
push
lock
xchg
jl
xchg
outsb
sub
cmp
mov
mov
mov
dec
mov
cli
cmc
mov
das
sub
pop
sub
adc
xchg
daa
stos
fwait
sti
cmp
inc
fs
and
adc
shlb
insl
cli
in
jl
mov
sarl
sbb
jle
inc
aam
pusha
xor
xchg
cmp
out
push
sub
push
imul
sub
js
jb
mov
fnstsw
out
lret
sbb
sbb
sub
cmp
dec
add
ret
not
icebp
aad
pop
xor
lea
dec
ds
xchg
cltd
pop
ret
ret
mov
xor
jo
cld
mov
ja
push
aad
inc
push
adc
popf
dec
negb
popf
test
xchg
out
aam
addr16
pcmpeqw
or
and
test
mov
push
mov
push
ljmpw
mov
cmp
out
pop
cli
and
jp
xor
add
in
sub
fsubrl
hlt
lods
lods
pop
ds
movsb
push
xlat
cmpl
dec
mov
rorb
pop
das
cmp
inc
and
adc
icebp
out
das
xchg
fcmovu
fsubrl
jmp
dec
icebp
push
ret
loope
xchg
inc
mov
aas
pop
inc
fdiv
addr16
fldt
cmpsl
insl
pop
movsl
and
loop
mov
sbb
out
js
cwtl
es
sub
inc
test
push
loopne
dec
dec
sbb
pop
xchg
and
repz
push
xor
add
xchg
pusha
push
jno
inc
or
gs
and
int3
sbb
dec
pop
outsb
lods
adc
add
xchg
cltd
inc
or
cmpl
or
jmp
jbe
cmp
lea
notb
push
xchg
andb
stos
mov
jns
fdivs
push
mov
inc
push
xchg
clc
add
mov
scas
sbb
call
lret
push
inc
fucomi
jg
mov
pushf
dec
xchg
xor
sbb
xor
mov
mov
ret
inc
or
jns
dec
lret
rcrb
int
mov
xor
sahf
xchg
inc
push
sbb
test
movsb
xor
xor
cs
pop
push
mov
adc
lcall
mov
les
add
and
mov
mov
sti
pop
mov
lods
in
xchg
insb
and
cld
and
fwait
adc
push
push
dec
aas
xchg
and
lods
push
ja
stos
mov
mov
cltd
dec
xor
lds
popf
jns
mov
insb
mov
popf
jp
arpl
or
push
daa
test
mov
xchg
cwtl
mov
or
xchg
pop
inc
xchg
leave
adc
mov
loopne
aam
cmc
sbb
dec
mov
sbb
push
aad
nop
cli
rcll
mov
jns
and
sbb
and
lods
jle
out
jne
jl
outsb
adc
aas
test
outsl
push
fldt
jns
enter
lret
sbb
jl
inc
hlt
pop
fdivp
mov
aad
cmpsb
kmovb
mov
or
push
pop
or
xchg
jnp
lods
aad
test
pop
repz
jae
push
dec
mov
xlat
push
dec
push
nop
push
ja
add
pop
int3
sbb
js
push
js
sar
or
push
inc
xchg
pusha
out
sub
jg
fnstsw
xchg
xlat
xlat
aaa
or
mov
jo
mov
pop
dec
mov
cmpsb
jl
sbb
mov
mov
add
stc
cmp
sahf
push
adc
popf
push
jae
sahf
and
das
imul
loopne
add
mov
jl
or
or
sahf
nop
and
inc
in
aam
mov
call
cmp
adc
cmp
xorl
and
or
xor
fdivr
dec
or
jno
sub
cmc
mov
xchg
nop
int3
out
lea
leave
add
add
ljmp
dec
jg
hlt
int3
pop
lods
mov
inc
popf
mov
fcmovne
pop
push
cltd
lret
push
mov
pop
or
sarl
mov
push
or
push
imul
sbb
iret
in
iret
bound
push
push
push
fidivs
movsl
push
stos
imul
jecxz
test
outsb
xchg
mov
test
out
mov
add
cwtl
adc
insb
xchg
jbe
hlt
jecxz
sbb
int
and
lods
inc
inc
insl
xchg
mov
leave
stos
push
stos
rcrb
fcmovnbe
xchg
adc
lds
xor
test
sbb
adc
lahf
cmp
add
popf
rolb
dec
cli
andl
pop
adc
or
push
repz
out
push
push
inc
pop
cmc
mov
xor
mov
pop
jle
cmc
imul
lahf
or
and
out
in
into
idivl
adc
and
mov
adc
mov
insl
ret
shl
int
daa
test
movsb
dec
mov
rorb
cltd
adc
fnsave
iret
adc
je
add
popf
fwait
out
into
sbbl
mov
inc
jmp
push
je
in
dec
loopne
jb
pop
dec
adc
call
jmp
movsl
test
adc
aad
mov
rorl
lret
cmp
mov
outsl
push
movsl
or
into
cmp
lods
mov
pop
adc
out
repz
test
gs
sub
out
add
jg
mov
dec
jae
pop
push
jmp
jo
and
lock
in
aas
xor
popa
ss
ss
mov
lock
sarb
pop
cmp
int3
jb
aas
mov
dec
test
hlt
cmp
jg
pusha
xor
ret
in
and
or
or
or
inc
jno
mov
add
sub
ds
jno
sub
jno
sub
sbb
out
movsl
cmp
fcompl
jle
add
popa
aas
mov
bound
xor
mov
lds
push
sub
or
ret
lock
lods
nop
jnp
mov
sbb
dec
iret
mov
push
mov
aam
jne
jns
rcl
out
xchg
aam
xor
lret
push
xchg
out
push
dec
mov
test
adc
cmc
xchg
addr16
ror
inc
add
nop
or
mov
andnps
scas
stos
pushf
lcall
xchg
lahf
ret
mov
push
jb
fwait
cmp
negb
xchg
jno
lret
in
adc
clc
loop
data16
int
cmpsb
ljmp
mov
xor
push
ss
add
or
lret
jno
rclb
mov
xor
dec
jecxz
lret
lock
jo
frstor
insb
jmp
push
or
call
aaa
rcl
adc
fucomp
dec
xchg
fisttpll
imul
push
sti
adc
xor
popf
lds
fisttpl
sub
stc
mov
dec
fs
dec
ljmp
sbb
dec
hlt
filds
pusha
mov
xchg
ljmp
mov
pop
lea
adc
movsl
gs
sbb
adc
xor
and
xor
inc
pushf
insb
out
jecxz
sub
imul
add
bound
rolb
or
cli
add
pop
mov
push
or
mov
push
jl
add
pop
xor
add
sbb
popf
aam
inc
sbb
cltd
xor
push
imul
pushf
ffreep
nop
mov
push
popf
sub
icebp
or
rolb
shll
pushf
pop
js
mov
xor
inc
push
movsb
sub
sbb
pop
mov
roll
dec
gs
adc
dec
aas
lcall
cmp
dec
xchg
or
movsl
inc
lods
and
iret
adc
fdivl
xchg
mov
popf
jecxz
pop
sub
xorl
in
mov
push
sub
xchg
inc
fs
xchg
sbb
insl
pop
int3
test
scas
popa
scas
std
test
lea
inc
stc
push
es
arpl
jle
shrb
cmp
xchg
pop
icebp
out
imul
jp
das
or
sti
mov
sub
cld
cltd
xor
or
pop
sahf
repz
dec
notl
mov
mov
cld
adc
ror
pop
dec
rsm
out
pop
push
pop
push
push
lea
mov
lods
push
mov
pop
fisttpl
pop
fcoml
pusha
imul
xor
lods
cmp
or
mov
adc
mov
inc
push
je
into
lahf
cmp
jne
dec
int3
jo
out
jmp
popa
popf
jle
mov
rclb
inc
mov
out
stos
and
scas
cmp
subl
or
inc
inc
pop
push
add
shrb
mov
jle
imul
fwait
aad
dec
sub
sbb
mov
popa
inc
sub
inc
pop
out
xor
lcall
sbb
pop
mov
or
lahf
and
icebp
test
mov
xchg
ficoml
jg
sub
mov
loope
adc
cmp
out
scas
jno
mov
test
fsubs
cltd
jmp
pop
mov
jbe
add
sub
pop
cmp
icebp
cs
shll
arpl
lret
pop
fdivs
stos
adc
cmp
inc
pop
mov
xor
movsl
add
imul
push
jecxz
jp
and
jne
mov
movsb
jbe
cmpsl
pop
stos
jne
lcall
push
mov
stos
jg
push
hlt
bnd
mov
inc
lahf
int3
jbe
negb
dec
je
daa
cmp
adc
mov
xchg
pop
push
push
push
mov
lahf
bound
and
pop
jge
loop
lods
cld
test
lahf
jmp
dec
imul
aam
mov
push
bound
loope
les
mov
xlat
test
dec
jnp
mov
lahf
js
jge
int
out
je
xchg
outsl
xor
inc
popf
sarl
push
sub
or
add
adc
rolb
div
outsb
arpl
mov
mov
mov
hlt
test
roll
into
push
dec
jl
test
mov
dec
adc
loop
jns
fs
inc
and
cmp
in
stos
jns
adc
ret
out
xor
cwtl
lds
xor
and
pop
xchg
data16
fyl2xp1
xchg
xchg
lcall
sbb
mov
add
and
sbb
xchg
adc
adcb
or
jne
sbb
dec
cmp
mov
stc
pop
in
lcall
sbb
mov
cld
mov
fstpl
jmp
fldcw
mov
int
xlat
ffreep
pop
mov
pop
adc
inc
sub
and
cltd
mov
cltd
mov
jge
jns
gs
lock
push
orl
jecxz
scas
pop
mov
addr16
jns
test
movsl
or
ss
push
outsb
ret
push
dec
lcall
xchg
and
pop
ret
push
aam
arpl
into
cwtl
lcall
push
nop
movsb
push
or
addb
jg
dec
mov
std
jb
inc
xchg
aas
shll
enter
ret
cli
jo
fbld
cmp
fisubs
cmpsl
scas
cmc
inc
call
mov
test
test
fsub
scas
adc
jge
lods
add
xor
add
jge
les
pop
jbe
orb
lock
jge
sbb
mov
sub
dec
pop
in
iret
mov
in
je
jb
sub
sbb
or
xor
insl
xchg
mov
pop
add
rorl
lock
rolb
scas
mov
bound
inc
cmpsb
adc
js
popf
outsl
incl
dec
push
mull
repz
adc
pop
and
shrb
aas
and
gs
mov
xchg
cmp
lods
xchg
sarl
aam
shlb
and
add
loopne
jne
mov
xor
dec
test
add
paddsw
ja
out
sbb
cli
adc
xchg
repnz
cmp
mov
jo
and
js
stos
or
pop
int
and
sbb
das
out
loopne
mov
sbb
stc
pop
lea
dec
daa
js
jp
in
adc
lods
pop
and
scas
jg
and
inc
int3
adc
pop
cltd
and
push
add
cld
insb
mov
rorb
addr16
mov
loop
cs
jl
into
xor
ret
orb
sbb
stos
xor
push
pop
push
js
icebp
ret
mov
pop
daa
dec
or
mov
sub
inc
push
mov
dec
mov
cld
mulps
int3
subb
mov
jle
inc
enter
inc
jo
dec
xchg
ljmp
jns
xchg
or
outsb
pop
fsubrs
push
mov
cmp
fcmovnu
leave
lock
mov
loopne
dec
mov
aam
ret
push
mov
loop
mov
push
mov
jns
sahf
inc
daa
sti
ljmp
mov
mov
pop
test
imul
in
mov
or
adc
in
or
fcoml
andb
mov
sahf
sub
mov
xchg
iret
adc
imul
xchg
jb
and
xlat
clc
adc
cli
shl
sub
lods
rcll
test
jmp
into
xor
pop
pop
xor
sub
lret
xchg
out
or
mov
push
lret
mov
repz
repz
mov
or
inc
scas
jge
shll
insl
pop
lret
fiaddl
loopne
aam
repz
cs
fwait
mov
and
xor
test
fnsave
call
or
or
jmp
lods
push
cs
cmpsl
stc
aas
sub
shl
popf
clc
dec
icebp
cmp
xor
outsb
cmc
popa
jmp
pop
xchg
in
jbe
inc
jns
and
push
cmp
push
nop
or
movsl
adc
std
movsb
inc
push
mov
mov
jne
mov
mov
xlat
xchg
sbb
mov
jge
test
leave
xor
pop
mov
cmp
fs
into
mov
push
push
std
in
xchg
inc
out
mov
dec
fistpll
pop
jle
ficoms
push
mov
das
mov
in
add
adc
int
stos
add
dec
mov
pop
xchg
sbb
cmpxchg
sahf
add
and
scas
cld
pop
pop
xor
test
popa
data16
leave
xchg
adc
cmc
hlt
dec
fmuls
dec
and
dec
mov
jne
inc
js
mov
popa
cwtl
test
daa
or
add
push
adc
cli
sahf
mov
cmp
gs
das
gs
xor
ljmp
mov
push
frstor
mov
mov
mov
xchg
in
mov
arpl
adc
inc
mov
arpl
jmp
add
sti
xlat
jecxz
ret
stos
sbb
sbb
jbe
pop
mov
movsb
xor
lods
ss
mov
mov
push
xchg
jmp
lahf
or
movsl
adc
push
test
daa
cs
jle
fwait
lret
dec
and
sub
ljmp
pop
dec
movsb
mov
hlt
in
cmp
sub
ss
pop
xchg
cmp
cmp
xor
imul
scas
sbb
and
mov
lods
test
lahf
decl
test
stos
or
push
dec
adc
xchg
and
imul
repz
mov
sub
pushf
mov
gs
imul
mov
adc
je
pop
ret
iret
dec
imul
js
adcb
aas
aad
int3
pushf
insl
add
psubsw
cmp
stos
test
sub
aam
lret
scas
inc
mov
jg
or
gs
jp
dec
xor
je
jb
mov
mov
mov
inc
ljmp
imul
sbb
xchg
fimuls
loop
cmc
adc
out
push
xlat
sub
mov
or
dec
jae
dec
push
sub
insb
mov
push
mov
jns
scas
testb
sbb
push
call
sub
mov
fldenv
or
scas
cwtl
lret
mov
mov
pop
cld
insl
stos
mov
mov
inc
xchg
and
rorl
cmp
push
pop
aas
idivb
jne
inc
mov
mov
pop
jg
inc
fdiv
jl
cltd
cmp
push
cmpl
stos
and
pop
movsl
fidivs
mov
shrl
in
push
push
jl
add
mov
hlt
aad
mov
push
mov
add
test
shr
inc
push
popa
push
lods
xchg
clc
or
ret
rorl
cli
xchg
stc
xor
popf
data16
lahf
mov
sbb
cmp
lock
not
jns
sub
mov
push
add
in
fnsave
repnz
dec
cmpsl
out
sub
clc
jg
bound
cld
cmp
xor
xor
fdivs
cmp
out
lret
sbb
xlat
repz
enter
subb
jle
jg
fdivl
sbb
sub
cli
lcall
sbb
sbb
addr16
shlb
adc
sub
subb
mov
in
push
cmp
in
rolb
sub
inc
mov
dec
jg
aas
xor
pop
notl
pop
in
push
push
cmp
insl
and
lea
inc
xchg
out
push
scas
scas
jp
cli
ljmp
ficoml
loop
mov
je
add
mov
scas
and
adc
sub
inc
sub
sub
mov
and
ljmp
in
jne
jecxz
and
das
mov
lods
insl
jns
out
mov
jae
cltd
xor
jae
mov
push
fildll
ljmp
jp
sbb
addr16
mov
push
aam
outsb
push
push
in
stc
into
loopne
xchg
push
or
xchg
int
cmp
leave
imul
out
push
nop
xchg
insb
push
lret
mov
outsl
push
iret
movsl
lods
jne
jle
adc
add
mov
cmp
sub
shrl
test
aaa
cld
mov
sub
lret
iret
lret
push
add
mul
icebp
and
pop
retw
loop
push
into
bound
dec
lgs
lret
lcall
dec
lret
loop
js
aad
out
fsubrs
jmp
pop
fdivr
xchg
cld
sti
push
sbb
add
std
or
scas
ret
or
inc
xchg
jmp
mov
enter
push
lods
and
and
pop
add
lds
pop
xorb
cmp
cltd
add
in
stos
xchg
orb
int3
hlt
dec
insl
decb
xchg
sti
and
xlat
mov
loopne
sbb
or
cmpsl
jns
sbbl
or
dec
inc
lret
pop
adc
cmp
push
jl
pop
sarl
lods
adc
xchg
inc
xor
imul
addr16
sahf
sbb
aaa
mov
xor
and
imul
dec
cwtl
lret
test
dec
out
inc
mov
sbb
fbstp
xlat
jmp
mov
sub
adc
pop
cmc
out
mov
jb
popa
jbe
repz
mov
cltd
cmp
in
and
pop
mov
mov
sbb
push
jns
movb
notb
jl
aas
jp
std
mov
jp
xor
popf
xlat
adc
jno
mov
push
insb
cmpsb
lcall
nop
cmp
jae
fwait
out
or
sahf
push
dec
push
movsb
test
fwait
nop
insl
lret
jge
sbb
movsl
push
push
in
ror
mov
ss
mov
jae
or
push
jmp
lea
jbe
out
lret
push
mov
sbb
sbb
sub
cmp
test
bound
fcompl
dec
jmp
mov
ret
inc
xchg
pusha
cwtl
lea
sbb
mov
scas
jge
push
cmp
sub
jne
pop
lahf
lods
icebp
outsb
mov
insl
mov
fxch
sahf
xchg
sbb
test
push
mov
mov
nop
repnz
add
outsb
add
sub
xchg
lret
pop
and
lock
std
out
push
fsubs
es
lds
ret
pop
rcrl
mov
int
cmpl
xor
jmp
and
mov
leave
js
stos
lea
mov
mov
out
adc
mov
lcall
pop
jle
das
lret
fwait
into
test
xor
xor
sbb
add
insl
inc
lahf
dec
jmp
sbb
cmpsl
pop
flds
mov
or
inc
dec
mov
push
xchg
pop
stc
xor
je
hlt
pop
mov
shr
xchg
out
scas
jno
shrl
jmp
movsb
ret
ljmp
loope
mov
ffreep
iret
mov
jg
test
cwtl
mov
fwait
sbb
into
loop
loopne
in
lods
neg
imul
test
push
adc
dec
mov
and
or
not
sub
xor
insb
das
mov
int
jecxz
imul
aas
enter
fildll
add
lret
jge
das
cmc
aaa
inc
push
jbe
sbb
test
adc
lret
xor
dec
insl
cmp
cwtl
arpl
ds
sbb
sub
sahf
mov
fldenv
add
mov
mov
sbb
sbb
cmp
fucomi
inc
popf
iret
inc
sub
insl
jle
subl
add
jg
ret
mov
scas
xchg
pop
xlat
in
js
fimuls
sbb
rcrb
test
fisubrs
mov
roll
inc
xor
pop
rorb
inc
sbb
dec
insb
lea
mov
cli
and
push
push
mov
int3
hlt
push
mov
shlb
clc
mov
filds
popa
inc
fwait
pusha
in
xchg
xchg
xor
xchg
xchg
pop
fiadds
jo
jno
flds
inc
sbb
or
addl
stc
mov
dec
cmp
test
sub
in
sti
jp
and
call
sbb
jecxz
int
pop
mov
pop
jle
shrl
jne
lock
inc
xor
ficomps
pop
mov
pop
lcall
cltd
sbb
dec
mov
daa
stos
jp
inc
mov
pop
xor
jg
test
pop
sub
mov
jle
dec
cmpsb
pop
mov
popa
jg
out
push
iret
inc
popf
xchg
cmp
idiv
push
ds
iret
push
mov
sbb
push
hlt
repz
jns
jle
ds
fiaddl
mov
cwtl
shl
cmp
sub
push
cmp
sub
gs
pop
add
add
nop
jae
call
mov
enter
scas
pop
in
ret
dec
lea
xchg
idivb
mov
pxor
repz
repz
or
mov
test
sbb
cltd
shll
push
int
stc
mov
push
cltd
jns
sub
test
sar
in
xchg
fsts
jp
pop
jecxz
clc
sbb
jno
mov
sub
mov
sti
fsub
adc
push
sub
mov
sbb
leave
shll
sbb
dec
sub
pop
mov
xor
fstpt
and
or
sbb
jnp
pop
outsb
jge
iret
enter
les
je
xor
scas
or
lock
cmp
scas
lds
push
int
lea
or
pop
and
jmp
cmpsl
in
mov
pop
xchg
loop
mov
les
jp
cmp
dec
mov
sbb
pop
fidivl
clc
daa
lea
or
andl
xor
mov
inc
into
das
dec
sbb
mov
jge
mov
ret
das
fidivs
and
arpl
jns
push
jno
jmp
je
mov
addr16
pop
sbb
xchg
cmpsb
popa
lcall
dec
nop
sbb
je
sub
fs
neg
mov
ss
subl
xlat
xchg
dec
push
or
mov
lds
repz
xchg
or
enter
hlt
mov
ja
add
add
adc
sub
jge
jnp
xor
testl
call
lock
sbb
test
pop
jo,pt
adc
dec
dec
daa
cmp
pop
loopne
fxch
std
insb
sub
out
sub
sahf
shlb
int
ret
inc
mov
xorl
scas
push
xor
and
mov
sti
into
xchg
xor
inc
or
inc
push
cmp
lods
mov
fdivr
out
push
pop
negb
adc
adc
push
push
aad
pop
lcall
jl
mul
fildl
cmp
bound
das
dec
push
mov
aam
mov
jae
out
jl
scas
push
adc
scas
pop
sbb
jg
adc
add
rorb
inc
mov
cmp
adc
xchg
cmp
clc
cltd
inc
aaa
jae
shrb
lret
or
aas
movzwl
mov
jno
iret
or
mov
adc
test
in
lds
push
bound
and
rcrl
cmc
sbb
lahf
push
out
mov
sbb
sub
dec
dec
insb
bnd
inc
mov
jle
outsb
adc
mov
or
xchg
jl
lods
mov
mov
icebp
xor
in
fcmovnu
pop
dec
add
loope
imul
dec
test
ljmp
mov
push
cmc
dec
mov
ffree
fs
pop
loopne
jo
popf
fisubs
movsb
xchg
enter
imul
out
dec
push
pop
cltd
xor
repz
int3
rolb
fbld
negl
inc
icebp
push
mov
aas
mov
clc
mov
mov
push
hlt
ljmp
sub
push
imul
movsb
mov
or
jbe
sub
int3
aas
rcl
test
mov
stc
lock
adc
lcall
jmp
pop
jmp
jg
cmp
push
stos
mov
pop
mov
mov
xlat
xor
imul
sahf
and
xchg
mov
dec
sub
in
add
pushf
push
mov
mov
sub
js
lret
shlb
mov
shl
or
and
fwait
pop
int3
push
hlt
xchg
mov
nop
int3
loope
mov
mov
pop
lods
cmp
hlt
sbb
add
sub
lret
cmpsl
cmp
mov
bound
dec
adc
sbb
xor
notb
lret
jecxz
mov
inc
stos
int3
dec
sbb
mov
xor
and
adc
outsl
mov
pusha
jge
mull
addr16
movsb
lods
sub
into
addr16
and
loope
mov
vpshab
aam
cmp
mov
out
lcall
mov
ds
mov
dec
gs
std
fwait
movsl
dec
inc
sti
mov
sub
ja
xor
popa
sti
stos
ret
or
ljmp
sub
lods
jmp
or
cmp
mov
int3
cmp
imulb
or
and
popa
popf
jmp
sub
mov
test
insl
div
stos
leave
mov
aas
jp
push
adc
lds
inc
in
cmp
or
aad
mov
lcall
xchg
mov
jno
dec
sbb
mov
aas
mov
in
add
sbb
jp
fidivl
or
cli
adc
addr16
mov
mov
xchg
cmpsl
insl
sub
cwtl
arpl
popf
je
int3
cmp
or
add
mov
dec
pop
loop
lahf
enter
stos
hlt
push
mov
xchg
jmp
or
mov
ja
repz
adcl
or
and
push
and
jecxz
dec
xor
sub
test
cmpsb
fwait
pop
mov
inc
ret
xlat
inc
add
es
mov
pop
add
aad
lods
movsb
pop
mov
insb
lods
push
int3
sbb
jae
cld
pop
sti
leave
shlb
pop
mov
pop
outsb
movsb
mov
sub
sbb
push
dec
mov
movsb
mov
imul
in
pop
stc
repz
xchg
push
mov
fsts
xor
mov
pop
sub
aam
xchg
mov
test
subl
push
push
jmp
test
sub
repnz
or
jl
push
pop
mov
lahf
outsb
mov
addr16
sahf
pop
lcall
mov
inc
cltd
out
adc
or
mov
popa
jno
push
xor
xchg
mov
add
mov
cmpsb
inc
test
insl
aam
into
mov
sbb
push
or
sub
fcompl
pop
loope
or
pop
xchg
mov
cld
testl
push
dec
jbe
test
pop
push
and
ljmp
roll
push
call
jmp
adc
lret
js
sub
jne
ret
je
or
sub
lods
sub
add
jge
aam
xor
lret
jb
lods
sub
iret
xchg
sbb
sti
push
in
bound
test
testl
inc
cmc
aas
test
ljmp
mov
dec
stc
adc
pop
repnz
xchg
test
sti
icebp
call
add
pop
loop
sub
in
nop
sub
push
dec
jge
add
push
daa
rcl
sub
jl
stos
aas
popa
add
jae
in
clc
mov
and
ja
push
ja
das
add
fs
std
pop
and
lcall
arpl
lret
std
fcoms
fcomps
div
test
jnp
push
test
pop
fwait
in
jae
dec
ret
sqrtps
jne
sub
pop
sbb
cmp
jl
fs
lret
inc
rcrl
jo
cmp
stc
leave
and
jmp
mov
aam
xor
sbb
dec
movsl
notl
push
mov
cwtl
fsub
fnsave
cmp
pop
es
xchg
leave
fisubrl
cltd
mov
and
mov
fisubs
push
sub
sbb
inc
fmuls
mov
mull
pop
push
push
aad
js
sub
loope
repnz
xor
cltd
into
loopne
xorb
shl
sbb
pop
jp
lcall
and
jbe
repnz
mov
mov
adc
lods
adc
push
xchg
sbb
sahf
jnp
fnstsw
dec
repz
cltd
roll
sub
inc
out
inc
xor
int
xchg
enter
ret
mov
rcll
stc
aas
aaa
sbb
fcomi
push
neg
test
lods
out
dec
or
add
sahf
jns
sub
in
adc
push
rcrb
add
inc
jb
iret
or
nop
sbb
mov
lods
lods
xlat
outsl
callw
push
lcall
stos
jnp
pop
sbb
popa
arpl
aas
test
or
adc
pop
icebp
xchg
scas
data16
cld
cltd
bound
leave
xor
pop
imul
cmpsl
lret
invd
sub
push
cmp
pop
filds
lods
mov
rcrl
jecxz
adc
mov
push
cmp
imul
shrd
je
inc
mov
lret
in
xchg
or
int
dec
aam
add
test
mov
mov
imul
insl
fsub
loopne
imul
ja
sbb
mov
push
std
adc
es
notl
jae
mov
jle
xchg
inc
out
or
sbb
stos
adc
jge
std
and
or
or
or
sahf
es
cmp
repz
inc
dec
mov
dec
or
mov
cli
test
push
inc
sbb
rclb
imul
ret
add
repz
fimull
insb
lret
push
scas
push
testb
addr16
nop
fdivrl
dec
mov
jno
adc
add
sbb
lcall
push
sub
call
xchg
mov
test
cmp
iret
or
fldcw
les
lods
scas
jae
cmp
push
dec
push
inc
mov
add
sub
repz
int3
aad
adc
mov
leave
jmp
ret
sbb
dec
or
enter
fnstsw
xchg
sub
stos
dec
xor
sti
sbb
nop
fstpt
mov
cmpsl
pop
mov
mov
mov
ret
push
andl
adcb
xchg
pop
jp
inc
inc
shll
add
dec
pushf
and
xchg
cs
mov
pop
lahf
pop
mov
push
mov
mov
popf
mov
roll
push
xchg
mov
js
je
cwtl
roll
scas
std
ror
jl
mov
push
xor
ficompl
cwtl
jle
cmp
or
out
popa
adc
icebp
pushw
xchg
adc
mov
push
insb
jo
mov
ss
pop
scas
and
incb
dec
cmp
cmp
push
mov
jns
dec
jne
cld
dec
cmpsb
je
mov
cmp
in
dec
arpl
mov
inc
xor
insl
mov
mov
std
sub
cmpsl
das
or
int3
adc
pop
icebp
adc
es
test
jecxz
pushf
in
shll
movsl
in
cmp
enter
std
sub
les
and
xchg
stc
cwtl
repz
or
aas
mov
mov
ret
jmp
and
mov
inc
add
pop
fldcw
push
icebp
fmull
adc
sbb
jg
and
rorb
cmpsb
sbb
scas
repnz
dec
mov
push
bound
xor
xor
sub
aaa
inc
fwait
movsb
push
mov
out
cmp
int
jge
jns
dec
roll
and
lock
loopne
mov
rcrl
dec
jo
and
mov
add
psubb
js
cmp
xor
sub
mov
fists
popf
push
bound
jle
mov
push
cmc
pushf
js
pop
test
scas
aam
sbbl
imulb
nop
out
addb
lock
jmp
aad
cmp
in
and
or
sbb
pop
and
inc
rcrb
sbb
cs
pop
dec
repnz
js
lea
iret
dec
pop
cmp
in
or
in
repz
xchg
jbe
aad
pop
inc
mov
addl
xchg
sbb
add
sti
mov
ja
mov
xor
sbb
incl
push
and
xor
push
cmpsb
lret
hlt
dec
popa
stos
inc
sub
cs
test
les
jb
rcll
pushf
dec
pop
shrb
pusha
xor
push
sub
negb
jmp
jb
jb
cmc
pop
lahf
jne
cmpsl
test
loop
dec
push
cmp
outsb
push
cld
rcrb
xchg
dec
sbb
cwtl
mov
das
and
or
push
jbe
les
xor
mov
bound
and
ljmp
jp
int
adc
orb
pop
dec
adc
loope
cmpl
pop
add
iret
adc
sarb
in
adc
inc
ss
dec
scas
scas
xor
add
loopne
pop
jnp
mov
xchg
push
mov
movsl
imul
sub
xor
and
loop
sbb
cltd
imul
xor
mov
xor
or
fisttpll
insl
push
lcall
push
loope
mov
popf
cmp
test
testb
hlt
cld
xor
outsl
out
inc
push
jl
push
rcrl
icebp
fs
fwait
ja
ret
outsb
lods
sub
push
sbb
adc
inc
cmc
addr16
aas
xlat
xor
mov
dec
arpl
xor
icebp
xchg
push
cmpsl
push
push
leave
sbb
das
stos
xchg
cmp
or
and
rolb
dec
lret
loope
into
pop
pavgw
lret
out
jle
mov
out
and
shll
pushf
xchg
jge
popf
sbb
loop
arpl
aaa
iret
data16
test
mov
xchg
stc
and
rcrb
cmp
cwtl
inc
jnp
xchg
inc
scas
mov
test
dec
and
xchg
int
sti
mov
pop
leave
push
call
jmp
scas
ss
movsb
fdivr
sub
sbb
lock
jge
mov
add
mov
stos
xchg
sub
sbb
lods
scas
xchg
xorb
xchg
jae
xor
jge
popa
jae
sub
in
mov
mov
mov
or
jecxz
test
and
xchg
clc
inc
lods
and
pop
out
jl
pop
adc
mov
push
shr
push
int
loop
imul
nop
jnp
mov
lea
xorb
adc
jno
jp
sub
jae
pop
pusha
xor
out
fildll
add
cmp
dec
in
push
repz
push
stos
and
or
cmp
ficoml
rorl
xor
pushf
arpl
int
pop
push
push
test
adc
and
jecxz
repz
cmp
lods
loope
neg
adc
fdivrs
adc
cmp
ds
xor
sub
aad
loope
dec
cld
push
rolb
push
inc
cmpb
adc
sbb
xchg
mov
xchg
xchg
cltd
popf
scas
movsb
or
and
adc
test
mov
and
mov
inc
nop
push
inc
add
dec
pop
test
cmpsl
sbb
pop
je
iret
test
popa
imul
jmp
adcb
adc
nop
mov
outsb
dec
sti
lahf
repnz
cmp
inc
push
shll
push
lods
int
cmp
flds
cwtl
mov
and
jne
push
mov
inc
dec
jbe
jecxz
adc
jmp
jmp
lss
lods
lea
lods
enter
data16
cmp
leave
push
lds
inc
xchg
inc
push
subl
dec
pop
fsubrl
push
mov
push
insl
add
imul
jmp
pop
jle
adc
scas
hlt
adc
gs
loop
ljmp
cmpsb
mov
test
daa
call
mov
fadds
vpcmpgtb
dec
xor
sub
ret
sbbb
test
xor
in
fisttpl
lds
dec
xchg
cwtl
cli
pop
xlat
pop
cmpsl
pop
mov
jno
xor
push
sbb
xor
sarb
outsb
pop
push
mov
or
pop
xchg
cmp
xchg
or
aad
lods
mov
sbb
xor
fwait
mov
fsubr
int
lahf
cld
push
jns
pusha
aad
cmp
jo
test
jne
jmp
pop
mov
xor
xor
mov
outsl
mov
dec
mov
es
cmpl
sub
mov
mov
leave
test
jle
enter
push
inc
sahf
mov
dec
das
into
xchg
jne
fdivs
and
movsb
cmp
push
push
pop
movsb
sub
xchg
aas
cmp
shlb
lret
shr
test
mulb
lahf
cmp
sub
in
sbb
rorb
stos
in
cmp
data16
cli
or
pop
jno
ret
jl
mov
or
repnz
mov
xchg
aam
cmp
pop
faddl
sub
add
es
sub
mov
xchg
add
xchg
adc
cmpb
dec
jge
test
jmp
test
divb
push
icebp
stos
ret
test
push
test
mov
data16
bswap
pop
or
pop
xchg
aam
pop
push
mov
xlat
add
push
mov
inc
mov
inc
popf
imul
mov
daa
movsb
movsl
or
or
lods
lods
and
or
leave
cmp
mov
xor
mov
repnz
lock
cmpl
les
shl
movsl
pop
sbb
pop
repz
bound
daa
jno
push
test
rorb
adc
stos
pop
jg
or
sub
xchg
sub
and
es
mov
push
mov
mov
sub
js
lods
stos
cltd
pop
arpl
lods
jmp
call
mov
mov
bound
mov
sbb
aaa
imul
insb
shll
outsl
pop
imul
sub
int3
xorl
mov
filds
mov
jns
jo
or
andb
sub
decl
in
aas
leave
je
pop
iret
cwtl
mov
js
stos
negl
xor
out
stc
sarb
sbb
sbbb
mov
loopne
xlat
loop
or
notb
ret
add
stos
scas
iret
ja,pn
fisttpll
xor
add
cmp
dec
dec
arpl
xchg
out
push
mov
jg
sbb
add
jnp
jbe
mov
dec
outsl
daa
imul
xor
dec
sbb
leave
jmp
adc
mov
jl
imull
outsb
or
popf
jl
int3
jp
ret
xchg
fisttpl
push
pushf
std
xchg
jne
test
sbb
mov
loopne
sbb
das
jmp
jmp
fisubl
push
jp
jle
imul
test
and
out
test
dec
imul
ret
xorl
data16
sub
orb
jle
int
jg
mov
mov
add
enter
jae
stos
pop
jle
push
dec
sbb
push
andl
inc
adc
loop
lret
xchg
or
sub
adc
cmp
js
mov
les
sub
cmpsl
je
out
push
or
cmpsb
dec
stc
mov
iret
lock
adcl
jo
stc
add
push
sbb
jnp
push
call
or
add
mov
sub
daa
gs
xchg
call
add
inc
and
and
std
mov
stos
jmp
mov
in
jle
andl
mov
rorb
lods
ret
push
repnz
jle
sub
enter
fcomps
push
test
xchg
or
ds
test
fdiv
jmp
xchg
mov
mov
xor
and
aas
mov
nop
cmp
test
das
jg
or
jg
mov
mov
mov
inc
xorb
imul
nop
dec
jne
adc
lahf
iret
inc
pop
dec
lahf
test
jo
xor
mull
subb
out
xor
fcomps
je
fistps
icebp
loopne
sbb
out
inc
mov
icebp
outsb
dec
ljmp
cmp
xor
mov
fisttpll
testl
imull
xchg
aad
push
cmpsb
fidivs
and
pop
jns
out
sarl
dec
hlt
lcall
movsb
push
es
imul
and
xor
scas
or
xchg
sub
outsl
lea
pop
cld
outsb
add
xor
int
jle
mov
jo
subl
fistl
sub
jecxz
mov
push
sbb
mov
leave
and
push
in
lcall
test
dec
push
ret
outsb
shlb
push
scas
or
imul
add
xor
movsb
ret
imul
jns
aaa
in
call
add
ds
and
dec
imul
nop
pop
call
cmpsl
pushf
cmp
adc
fdivr
sub
mov
js
cmp
jl
adc
xchg
fldt
loopne
fidivrs
int3
mov
jae
cmp
jl
cmpb
pop
xchg
insb
mov
pop
scas
push
mov
les
enter
lds
rorb
mov
divl
or
xchg
mov
and
adc
adcl
cmc
inc
push
bound
pop
inc
stc
fcomip
pop
inc
or
sbb
sbb
pop
test
negl
dec
fwait
loop
jle
mov
test
ret
int
push
and
push
ja
mov
xchg
popf
or
xchg
das
push
stos
stc
jg
sbb
jl
mov
jo
mov
aam
roll
movsb
or
or
fldl
ja
push
sbb
gs
xor
fchs
faddl
jo
mov
stc
lea
cwtl
inc
scas
in
jmp
shlb
xchg
test
or
add
add
and
mov
and
enter
jno
daa
enter
lea
std
cli
ret
fstps
subb
xor
shlb
out
mov
and
mov
sbb
add
je
cmp
aas
fsubl
loop
sub
scas
lds
xchg
jge
and
test
xor
mov
aam
lcall
push
push
sub
leave
sbb
lret
rol
add
sub
mov
sub
lcall
mov
rcrb
push
add
mov
insl
mov
and
dec
jnp
fwait
sbb
sbb
xchg
add
cltd
leave
dec
scas
adc
andl
icebp
jnp
mov
pushf
fnstcw
and
es
cs
jp
add
xchg
ds
imul
jae
ja
jp
mov
sti
pop
mov
mov
loope
jp
push
test
push
cltd
in
loopne
add
inc
lahf
fs
test
mov
lret
ret
mov
sub
sbb
cmp
ficompl
push
mov
fisttpll
scas
pop
xor
sbbl
sbb
sti
sbb
das
mov
mov
in
out
or
jae
xchg
mov
mov
inc
and
aas
scas
add
jb
adcb
insl
out
mov
hlt
arpl
jle
aad
push
xchg
rorl
test
mov
out
mov
in
fisttps
in
adc
mov
fdivl
adcl
xchg
push
jmp
push
dec
fistps
cwtl
cmp
sbb
jne
push
test
and
jo
xchg
addr16
push
aaa
jo
sub
das
in
sbb
push
jl
test
fbld
jns
sahf
in
push
jg
daa
cmpsl
lds
lock
insl
jne
ds
fsts
das
xchg
push
stos
js
xor
ret
xor
cli
mov
fmuls
jecxz
sbb
add
lahf
push
test
sbb
mov
cltd
fwait
int
ds
stos
dec
adcb
mov
dec
dec
out
dec
out
dec
dec
lahf
out
jge
jne
call
lcall
nop
mov
pop
or
jne
xchg
mov
fistps
xor
mov
fs
dec
jmp
lods
pop
std
mov
call
jb
movsb
mov
pop
imul
out
les
pop
mov
add
mov
inc
notl
xchg
ljmp
push
popf
jle
icebp
xor
incl
movsb
sub
nop
sbb
dec
cmp
das
addl
out
and
and
xorl
cwtl
sbb
and
sbb
pop
pop
imul
or
push
pop
push
js
and
inc
xchg
add
icebp
lods
movsbl
dec
or
popf
lea
daa
lret
int3
aam
mov
dec
iret
fnstcw
or
jp
movsb
loope
test
in
stc
fwait
inc
xor
iret
inc
jmp
push
xchg
jb
insb
ret
push
cmp
rcl
pcmpgtd
into
mov
cli
dec
inc
sbb
dec
test
sbb
mov
mov
jg
push
aaa
and
scas
lock
cmp
ror
repnz
mov
mov
push
xor
push
movsl
lods
xor
jbe
mov
xchg
xor
pop
pusha
in
lea
adc
insb
sbb
or
cmc
pop
aaa
xor
pop
dec
xlat
mov
mov
push
sub
test
test
and
imul
cwtl
neg
pop
cmp
mov
repnz
roll
mov
cld
addb
sbb
or
xor
and
and
rcll
sbb
dec
js
xchg
jns
lods
cmpsl
pop
std
add
cmp
push
or
push
ret
test
inc
les
arpl
out
pop
fdiv
xchg
out
test
cmpsl
mov
or
mov
add
movsb
stc
rsqrtps
std
jle
insb
mov
adc
mov
hlt
mov
cmp
inc
dec
out
das
or
xor
ds
mov
into
mov
and
ss
push
jno
add
pop
insl
push
jae
mov
inc
adc
lret
lret
xor
shll
mov
pop
add
cmp
test
jo
add
sub
fisttps
sub
fs
pop
xor
sbb
add
jl
das
clc
out
ljmp
movsl
push
pop
push
pop
in
shlb
inc
mov
int3
jbe
inc
mov
shll
xchg
enter
jle
pop
pusha
fisttpl
mov
in
xchg
push
cmp
xor
xchg
das
sahf
jle
and
dec
ja
sahf
inc
mov
dec
inc
dec
jl
add
clc
out
add
mov
dec
fsubrp
outsl
xor
mov
lret
push
insb
lods
push
xor
jg
test
ret
cld
inc
aad
out
xchg
cwtl
add
fldenv
stos
adc
sub
cmp
pop
cmc
jbe
xor
jmp
sbb
pop
sub
roll
mov
dec
std
add
mov
fisttpll
movsb
test
dec
les
fwait
int3
rolb
push
popa
jno
xor
cmp
add
adc
sti
pop
mov
sti
addr16
addb
xor
xor
outsl
xor
insb
sub
sbb
addr16
add
fwait
push
dec
mov
in
jge
xchg
addr16
mov
xchg
sarb
aad
or
call
dec
cmp
cmpsb
cld
pop
addr16
and
push
inc
push
push
xlat
add
adc
sub
xchg
push
or
adc
ljmp
out
fcompl
aaa
jb
and
test
popa
stos
mov
or
rcrb
sti
inc
dec
repz
push
mov
leave
int3
stos
aad
or
mov
jo
pop
fidivrl
inc
pop
rolb
xchg
outsb
decl
and
jp
pushf
mov
sbb
xchg
push
jno
jno
mov
lds
mov
mov
mov
xor
mov
int
imul
incl
iret
and
fistpll
mov
dec
jne
pop
push
out
push
push
mov
sbb
scas
cld
mov
add
js
popf
add
decl
arpl
scas
sarl
lea
mov
out
adc
mov
in
sbb
push
push
dec
not
inc
and
add
pop
inc
sbb
icebp
je
xchg
adc
mov
mov
sub
incb
lahf
mov
xlat
sti
enter
sbbb
test
rcrb
push
out
lcall
cltd
cmp
roll
repnz
daa
xlat
and
adc
in
dec
mov
dec
cltd
sbb
mov
and
jne
mov
fsub
loope
or
fadd
scas
sbbl
lods
fwait
adc
aam
pop
iret
lahf
pop
fcoms
xor
movsb
loopne
cmp
test
out
insl
adc
stc
and
jl
outsb
das
push
icebp
stc
jae
dec
lea
aas
add
and
lods
mov
loopne
lods
test
loopne
movsl
into
ljmp
push
pop
loopne
fcomip
mov
cmp
clc
sbb
pop
mov
inc
add
cmp
bound
adc
hlt
daa
sbb
or
sub
in
add
sti
aaa
dec
dec
sub
stc
mov
jmp
mov
cmp
inc
cmp
xor
idivl
mov
jnp
xchg
cmpb
jbe
pop
inc
test
ficoms
adc
mov
and
sub
iret
out
fidivs
jecxz
adc
mov
mov
lcall
add
sbb
out
les
movb
sub
or
lock
cmc
cld
cwtl
int
xor
lea
pop
stos
test
xchg
mov
and
out
lret
mov
cmp
movsb
add
in
shlb
movsl
int3
iret
insl
push
xlat
scas
xchg
call
pop
clc
mov
ds
jno
mov
fmul
jp
das
jo
inc
fstpt
and
or
orl
jno
pop
dec
mov
mov
leave
fbstp
gs
aam
lret
add
out
cmp
mov
cmp
mov
xchg
jns,pn
inc
ret
mov
xor
add
into
loopnew
push
xor
mov
mov
mov
das
jge
lret
cmc
pop
xor
mov
sbb
inc
inc
shll
jnp
dec
in
sbb
mov
dec
cmpsb
lock
jno
stc
push
decl
or
shl
mov
mov
push
iret
push
mov
pop
into
pop
sub
fs
cmp
and
cmp
or
sbb
and
loopne
or
mov
adc
sbb
xor
xchg
xorl
add
push
ljmp
leave
test
push
ljmp
aaa
pop
mov
mov
push
jns
movsl
in
imul
sbb
stc
or
pop
or
clc
cli
ret
adc
lods
fsubr
icebp
jae
and
cmp
dec
pop
sbb
out
iret
repnz
jno
popf
inc
pop
dec
adc
jl
es
or
xchg
movsl
mov
jns
cmpsl
arpl
pop
in
lcall
ficomps
icebp
cmc
daa
xchg
push
xor
sbb
mov
rorb
adc
shrl
ds
pop
pop
and
sahf
in
lods
mov
push
xchg
fs
inc
rorb
xor
lahf
jmp
out
lods
insl
arpl
pop
das
insl
clc
sbb
inc
dec
cmp
xor
inc
pop
mov
int3
adc
popa
cwtl
hlt
js
lret
jo
or
gs
pusha
push
dec
cltd
or
xor
pop
rcrb
pop
das
jl
rclb
mov
test
pop
and
xchg
les
sbb
mov
xchg
repz
aam
shlb
call
adc
cmp
ss
push
fldt
xchg
cld
push
cmp
dec
jno
rcll
or
cli
or
lods
iret
or
mov
repz
jp
dec
mov
rclb
int
mov
out
sub
xor
cld
push
std
adc
scas
clc
popf
jp
mov
leave
push
pop
repnz
sub
add
idivb
mov
inc
mov
pop
pushw
mov
mov
mov
lcall
mov
fwait
out
sub
scas
les
xchg
stos
dec
aad
hlt
in
test
mov
pop
pop
mov
fnsave
jnp
mov
repz
andb
jle
stos
jl
ds
dec
repnz
xchg
mov
pinsrw
les
shl
and
ret
outsl
das
pop
popa
daa
scas
cmp
or
lods
call
inc
ds
sbb
orb
xor
dec
fcmovne
lcall
adc
sbb
sub
pop
scas
stos
xor
fwait
pushf
xchg
pop
cmp
push
movsb
out
dec
popa
stos
lock
add
mov
mov
movsb
insb
inc
shll
loopne
les
rolb
mov
inc
addr16
insb
mov
aad
iret
adc
es
mov
pop
or
incb
fstps
push
or
out
mov
mov
add
mov
rcrb
stos
push
lods
pop
xchg
inc
jo
and
call
sub
inc
xchg
dec
adc
mov
dec
xchg
ja
jp
inc
ret
push
int
push
mov
ret
adc
xor
nop
repz
repnz
pop
sub
movsl
cltd
dec
in
imul
cmpsb
and
iret
jnp
pushf
in
stc
push
add
loopne
movsb
cmpsl
fnstcw
mov
push
or
sub
sbb
popw
clc
dec
adc
dec
nop
add
test
mov
into
sub
out
lret
mov
mov
inc
mov
aad
shll
js
neg
cmp
out
cmp
ds
mov
cmpsl
push
push
test
push
scas
aam
inc
outsb
jno
jl
pop
mov
movsb
mov
int
push
xor
push
loop
mov
aam
das
mov
pop
mov
inc
push
popf
adc
test
cmp
push
rcll
pop
add
cld
sbb
shrb
xchg
mov
jcxz
jns
stc
mov
mov
pop
outsl
adc
pop
or
add
inc
sub
js
ret
jo
in
lods
icebp
adc
dec
push
cwtl
adc
mov
push
pusha
dec
push
dec
stc
mov
ss
cmp
xchg
enter
and
pop
mov
les
sub
adc
and
pop
push
jae
mov
imul
mov
mov
fildll
in
or
andl
and
pusha
aas
mov
inc
xor
and
mov
xor
xchg
sub
outsl
or
mov
mov
rclb
mov
jne
sbb
movsb
xchg
mov
sub
sub
gs
adc
iret
ds
ficoml
adc
lret
sbb
imul
add
xorl
mov
pop
cli
and
and
and
fs
xchg
bnd
cmpsb
xor
xor
jp
cmpl
mov
lcall
mov
test
jg
sbbl
das
mov
xor
fcoms
lea
out
mov
inc
lcall
cmpl
cltd
dec
das
sub
adc
or
lods
xor
mov
repnz
cli
daa
test
test
clc
fldl
lock
jnp
lods
lea
push
pop
sub
xchg
pop
or
rcrb
push
fcmovnbe
add
jns
xchg
orb
int3
xchg
jge
mov
pop
sub
sbb
and
inc
dec
lret
test
cmp
out
pop
xchg
mov
lods
xchg
inc
xchg
out
mov
popf
xor
jmp
jae
jp
add
jno
xor
add
cmp
mov
rcrb
lods
rcl
push
xchg
sbb
je
jg
or
das
cmp
sbb
add
fnstsw
push
movsl
xchg
jmp
movsb
and
push
adc
sub
xchg
out
jl
das
int3
xchg
fcom
inc
mov
popf
jmp
mov
push
jae
mov
je
ja
call
xchg
mov
rcrl
fldt
aad
cmp
rcr
in
cmpsb
neg
stc
lret
mov
std
add
jae
outsb
cmp
cmpsl
iret
pop
pop
ss
sahf
mov
sahf
addr16
sbb
shll
into
lret
jg
and
dec
push
test
jno
jl
lods
mov
pop
pop
xchg
pop
mov
bound
bnd
xorb
jae
cmp
stos
sub
dec
outsl
mov
cmp
jae
stos
sbb
out
sub
hlt
hlt
fistpl
mov
stc
inc
adc
pop
dec
repz
or
ret
jae
loopne
scas
in
imul
sub
xchg
push
sbb
mov
test
adc
loop
inc
push
and
fldl
mov
mov
push
cmp
hlt
mov
and
mov
xor
jp
into
cmp
mov
push
xor
out
jmp
out
mov
std
stos
and
jae
out
xchg
mov
mov
sbb
sbbb
rolb
repz
or
sub
dec
sub
jl
dec
inc
aas
fbstp
pushf
pop
loop
rorb
mov
jbe
je
cmp
dec
rcrl
cmp
enter
mov
jno
pop
enter
xchg
or
jmp
jne
dec
adc
shll
push
jo
and
into
jo
jns
das
ss
or
inc
ror
add
cmp
js
cmc
jo
in
stos
mov
sarl
imul
cltd
loopne
dec
sbb
sbb
mov
sbb
push
xchg
movsb
cli
mov
js
push
cmp
rclb
int
mov
cwtl
loope
mov
and
xchg
ret
push
and
inc
sub
in
loopne
ja
gs
mov
adc
cs
mov
jmp
aam
fdivl
lret
sbb
dec
mov
sub
mov
mov
outsl
push
ljmp
pushf
pop
movsl
cmp
rorl
sbb
sbb
push
mov
xchg
js
ljmp
mov
testl
and
fincstp
sti
mov
les
aam
ret
mov
das
and
pusha
inc
dec
mov
dec
ror
cs
addr16
pop
jg
mov
add
hlt
sahf
lods
out
and
and
ds
mov
push
adc
push
or
cmp
push
cli
test
cwtl
add
dec
imul
andb
test
jl
enter
or
mov
inc
dec
fwait
sub
cmc
sub
sbb
dec
jne
inc
scas
and
push
lcall
push
fisubrl
mov
sbb
es
outsb
pop
icebp
fwait
mov
jl
stc
in
loopne
push
in
das
add
lds
cmp
aas
nop
adc
jae
call
or
sub
xlat
ret
iret
outsl
inc
jo
inc
push
or
add
mov
add
aas
addl
cld
mov
pop
pusha
adc
fdivs
test
mov
or
cmpsl
aad
and
xor
insb
icebp
inc
cmp
inc
ficompl
mov
mov
out
lods
test
and
lds
mov
adc
cmpl
pop
stc
xchg
jbe
sub
add
imul
add
or
push
pop
xchg
mov
out
lahf
dec
test
sbb
cmp
roll
test
sbb
jno
cmp
jmp
in
adc
ret
lods
fimull
rorl
push
andl
xchg
push
xchg
xchg
cmpxchg
cmp
xlat
cmpsb
adc
ss
mov
pop
rcrl
stos
lcall
clc
push
push
clc
xchg
push
call
fcmovu
aam
dec
cmpsl
pop
pop
add
push
mov
cld
mov
in
add
or
in
adc
aad
xchg
nop
lea
sahf
fidivl
xchg
jnp
out
xchg
cwtl
pop
inc
lahf
xor
lods
mov
ds
cmpsl
repz
orb
imul
mov
inc
sub
fsubl
sub
sarb
push
nop
out
in
xchg
jb
enter
ljmp
xorl
mov
int3
or
fisttpl
mov
fsincos
icebp
sub
pop
mov
push
or
mov
stos
mov
mov
fldt
mov
inc
lretw
mov
mov
rclb
mov
xchg
sbb
mov
adc
xor
jge
movsb
lds
jns
mov
es
scas
jb
push
sub
roll
dec
sub
cmp
cmp
or
sub
inc
sbb
xor
shlb
add
fdivl
shrb
inc
andl
xor
je
dec
xor
sub
test
in
dec
xor
dec
sub
ficompl
push
lret
cmp
jmp
or
sti
pop
frstor
jno
ss
and
sub
jnp
scas
or
pop
sub
stc
pop
ds
pop
xlat
inc
pop
data16
je
movsb
mov
inc
lds
mov
cmp
subps
aaa
or
lret
sbb
sbb
pop
in
or
insl
pop
pop
xlat
and
pop
mov
cmp
mov
sub
pop
dec
sbb
popf
xchg
scas
int3
inc
int
mov
jl
mov
inc
and
stos
lcall
adc
sbb
fwait
and
lods
cmp
fstl
out
loop
mov
pop
and
inc
inc
cs
insl
push
in
jge
ja
ss
jnp
jecxz
or
jg
and
jno
stos
sbb
xchg
sti
addr16
mov
aaa
daa
aaa
loop
mov
aaa
daa
jae
jbe
xor
cmpsb
xor
faddl
imul
cmp
sub
popa
icebp
shlb
stos
gs
in
bound
popf
or
loop
sbbb
sbb
daa
test
mov
pop
jp
clc
out
pusha
jbe
int
inc
sbb
adc
adc
dec
sahf
fnstcw
jne
jb
inc
adc
add
daa
repz
add
aad
pop
cmpb
mov
xorb
imul
in
dec
mov
mov
mov
test
dec
out
sub
xor
imul
nop
enter
test
dec
aam
mov
add
out
sti
js
cwtl
xchg
aam
int3
pop
leave
out
repz
mov
cwtl
cmp
dec
rorl
and
xor
fildl
jbe
ficomps
and
jmp
or
scas
fadd
mov
lods
dec
mov
rcrb
repnz
lea
push
scas
test
out
sub
call
insb
push
mov
sbb
scas
jecxz
mov
dec
out
lcall
dec
pop
aam
shrb
shlb
in
adc
mov
insl
push
jae
dec
stos
out
lods
jge
cmp
cmpsb
aad
mov
adc
inc
imul
test
aam
jle
std
movsl
cmp
push
aaa
repnz
not
mov
loop
pop
jge
xchg
mov
subl
cwtl
iret
les
xor
rcll
mov
shll
mov
mov
loop
xchg
jns
hlt
cmp
cmc
pop
jp
and
ljmp
int3
jecxz
mul
or
imul
pop
lahf
hlt
outsb
xlat
iret
cmpb
ror
xorb
sbb
jl
xchg
mov
xor
pop
aas
cmp
mov
xchg
add
imulb
add
push
loope
in
fiaddl
mov
roll
aam
xchg
in
push
repnz
sub
in
add
mov
lds
mov
lock
sbb
xorl
enter
adc
mov
cmp
cli
test
jns
hlt
gs
push
xor
mov
mov
or
mov
shll
daa
pushl
ret
je
inc
decl
xchg
sub
mov
inc
jne,pn
mov
dec
adc
lea
js
shll
loopne
popa
mov
sahf
cld
xchg
inc
lods
xchg
daa
add
filds
arpl
jp
bound
lret
scas
mov
or
mov
push
push
mov
aaa
mov
lret
mov
mov
mov
sub
cmp
mov
loop
inc
mov
das
jo
push
std
arpl
and
inc
dec
adc
push
cmp
or
and
rcrl
test
push
in
lcall
aam
dec
pop
jl
into
mov
testl
loop
ljmp
lcall
iret
mov
mov
pushf
jnp
insb
sub
cltd
outsb
xor
aas
shlb
mov
dec
or
mov
or
xor
sbb
sahf
sub
pushf
lods
jp
loope
or
dec
sub
jg
jnp
lahf
push
mov
push
xchg
aas
pop
and
scas
sbb
data16
push
inc
inc
mov
push
lods
insb
loopne
mov
clc
mov
push
test
xor
fdivr
scas
daa
rdmsr
enter
cmp
out
cltd
jb
xor
lds
xor
xchg
int3
adc
jb
out
adc
roll
mov
bound
repnz
mov
in
jns
jno
cmp
push
and
pusha
pop
notb
lret
test
outsb
ljmp
push
push
sbb
pop
mov
push
jno
sbb
lods
out
jp
stos
ret
add
lret
cmp
push
pop
test
mov
or
mov
sub
cltd
jb
imul
lods
and
lret
jno
es
jl
jp
xchg
stos
mov
mulps
xchg
adc
jp
mov
mov
ljmp
mov
adc
dec
fucomip
dec
push
xor
inc
leave
and
jb
mov
mov
or
in
adc
mov
aas
cltd
xor
lret
out
daa
jmp
and
scas
cmp
in
clc
inc
jno
jb
fnsetpm(287
shrb
sbbl
icebp
add
lods
or
jge
stos
pop
pop
sbb
sar
test
cli
push
out
das
sbb
fadds
sub
jmp
lods
sbb
pop
cld
movsb
shll
pop
mov
cmpsb
sti
testl
aaa
jo
jnp
repnz
xor
dec
push
mov
cmp
gs
jo
rolb
sub
add
testb
push
scas
int3
pusha
and
pop
xlat
xchg
xor
mov
fisttps
xchg
insb
cltd
cmp
lods
clc
inc
insl
enter
xor
das
fld
loopew
in
jae
ss
ret
cmpsl
fs
and
ja
pop
add
bound
push
mov
and
lods
adcl
inc
mov
push
jmp
xchg
pop
mov
or
and
xor
pop
ficomps
mov
cmp
jbe
add
cltd
jbe
decb
js
aad
loop
or
int3
cmp
pop
sub
cmp
ret
lods
cmc
pop
addr16
imul
inc
dec
icebp
fiaddl
pop
sub
mov
cmp
cmp
aaa
sub
jp
sbb
adc
or
jnp
or
sub
push
hlt
jmp
scas
dec
adc
cmp
adc
hlt
test
scas
cmp
dec
inc
aas
push
mov
pop
and
pop
fdivrs
push
sbb
jmp
adc
jo
lds
push
sub
pop
add
or
mov
pop
mov
xor
add
in
mov
or
aas
or
fidivrl
setge
mov
xchg
icebp
sbb
cmp
dec
adc
mov
shll
sub
push
addr16
or
or
hlt
jb
add
icebp
out
int
rolb
stc
dec
es
xchg
adc
cmp
mov
xlat
out
add
mov
fwait
in
adc
jno
xchg
lret
fisttps
jno
fldcw
test
mov
pop
adc
fsubrs
addl
mov
and
das
mov
data16
adc
test
lret
cmpsb
lcall
std
jae
sbb
fldt
fistpll
mov
jecxz
mov
pop
decb
sub
std
fildl
clc
int3
and
add
jmp
bound
adc
dec
dec
and
push
mov
jo
fbstp
icebp
xchg
dec
fcomps
sbb
shr
add
fdivrs
and
dec
mov
xchg
rorl
inc
lret
popa
loope
dec
push
mov
lret
xchg
mov
test
lret
repnz
icebp
test
loop
xchg
cmp
aam
or
in
and
lock
lods
pushf
jmp
adc
xor
cli
bound
aam
push
jge
movl
or
test
dec
push
stc
and
xchg
std
mov
lods
cmp
cltd
sbb
fcmovbe
stos
iret
mov
leave
shrb
or
mov
push
movsb
in
addr16
test
jns
test
jg
fistl
jbe
lcall
sub
imulb
pop
push
xchg
aad
cmp
cld
add
jecxz
push
adc
inc
cmc
popa
mov
aam
jno
arpl
jp
das
shl
stos
enter
icebp
rcl
jno
cmp
fcomi
in
jmp
pop
call
inc
and
cld
push
hlt
loope
pop
loopne
icebp
repnz
push
push
movsl
mov
movsl
pop
push
rcrl
xor
sub
xchg
es
cld
loop
fadd
les
icebp
sahf
and
int
lea
in
add
in
repz
aam
pop
pop
insl
sbb
xchg
icebp
loop
int3
dec
aaa
cmp
and
mov
ss
or
push
jg
test
and
sub
cmp
add
lahf
rclb
inc
cld
aas
xor
sub
repz
repz
loope
inc
imul
sbb
xchg
inc
mov
jle
mov
cmpb
scas
adcl
movsl
sbb
mov
cmp
arpl
in
stos
into
adc
cltd
es
fimull
push
fwait
ja
jae
fadds
xchg
cmpsb
mov
pop
out
mov
lds
imul
cmp
cmc
bound
in
call
push
sahf
cmp
outsb
iret
sbb
dec
addr16
push
mov
sbbl
rorb
loopne
push
lea
inc
shrb
dec
mov
and
cmp
je
adc
push
sub
das
fisttpll
pop
faddl
add
vphaddbd
mov
xor
mov
inc
xlat
pop
rorb
or
add
dec
stos
addr16
mov
jae
fwait
pop
mov
push
pop
fbstp
dec
xor
fisttpll
pop
sub
ret
mov
loopne
sub
insb
jo
dec
cli
das
cs
mov
mov
daa
sbb
icebp
lcall
in
push
loopne
jp
sub
sub
pop
or
pop
fnstcw
xlat
lret
pop
addr16
xchg
mov
cmpsl
or
loop
repnz
inc
xor
les
xorb
in
iret
dec
cli
or
notb
dec
jb
pop
lea
sbb
or
cld
dec
xor
adc
sbb
jl
aaa
lods
mov
mov
mov
mov
les
xor
sbb
movsb
push
add
scas
scas
or
scas
pop
jo
mov
sbb
sub
int
xor
in
dec
popa
or
mov
test
push
das
xor
cli
pushf
in
jmp
xor
xchg
shll
lret
push
or
hlt
rorl
pop
das
xor
jo
ficompl
sub
sti
add
push
xchg
push
and
or
mov
mov
cmp
add
daa
pop
loopne
int3
repz
sub
mov
adc
or
test
testl
mov
imul
into
test
push
pop
or
pusha
push
repz
mov
pop
mov
and
add
out
xor
dec
je
mov
fisttps
mov
xchg
dec
test
arpl
jp
lds
mov
pusha
pop
mov
xchg
into
test
lahf
aas
mov
cwtl
pop
push
imul
sbb
ret
icebp
addr16
pop
mov
xchg
or
movsl
jp
scas
add
jo
popa
pop
mov
and
jno
pushf
mov
sbb
xchg
mov
das
cmp
xchg
sub
loope
xor
mov
lret
lods
sub
cmc
shrb
movsb
jmp
xchg
imul
mov
and
cmp
mov
pop
xor
mov
pop
sub
out
test
jae
rcrb
pop
add
inc
clc
in
or
fbld
sub
popf
test
cmp
addr16
fstl
cmpsl
jmp
insb
push
ljmp
loop
sbb
mov
push
add
xchg
xor
out
pandn
mov
dec
shl
loope
push
cmpsb
xlat
lods
lock
stos
xor
adc
inc
pop
xchg
xor
pop
rorl
cmp
mov
enter
test
sbb
dec
sub
add
fwait
push
and
lcall
push
dec
fwait
cmp
inc
dec
push
ja
inc
addr16
lcall
popf
adc
les
pop
movl
or
enter
hlt
in
mov
daa
push
loopne
gs
jl
sbb
lcall
sbb
imul
mov
out
aaa
ror
sahf
cld
mov
jne
fildl
pop
add
sub
push
inc
icebp
or
and
adc
lcall
and
jp
shl
lods
lret
jle
mov
das
inc
jl
mov
loope
mov
mov
inc
sub
outsb
ljmp
mov
lods
push
fistpl
sub
sti
xlat
xor
cmpsb
rolb
cmp
leave
xchg
add
sbb
lea
pop
fildll
mov
mov
xchg
cwtl
lods
mov
dec
call
in
lods
fdiv
push
cmp
adc
mov
mov
fsubr
or
jg
xor
sub
mov
in
sub
adc
xchg
insl
stos
faddp
push
jl
test
or
cmp
sbb
adc
push
jae
add
dec
mov
pop
fwait
mov
adc
and
xor
ds
pusha
cmc
adcl
or
int3
mov
in
pop
repnz
adc
fidivl
imul
outsb
mov
movsb
ljmp
addb
inc
stos
pop
scas
mov
sub
fisttps
xlat
cmp
test
js
iret
ljmp
ja
cld
jo
repz
in
dec
outsb
scas
add
testl
fimuls
push
iret
loope
push
sahf
insb
icebp
fs
orb
icebp
adc
xor
scas
adc
sahf
pop
inc
lcall
sbb
mov
xchg
jp
popa
stos
js
push
jne
jns
push
stc
push
xor
aam
imul
je
and
call
pop
adc
lods
mov
in
shlb
pop
setge
fs
je
cwtl
mov
mov
mov
jnp
xorb
pop
mov
call
lds
adc
cs
cmp
and
jo
adc
xchg
sbb
push
cmp
icebp
mov
outsl
push
push
fwait
scas
cmpb
inc
jbe
fisubrl
sti
mov
inc
fisubl
movsl
xchg
sbb
lea
fwait
loope
outsl
aaa
sub
stos
mov
rorl
mov
mov
not
insb
fs
push
mov
mov
and
mov
scas
jb
xchg
dec
and
xchg
outsl
hlt
push
and
incb
push
sbb
test
imul
xchg
filds
outsb
mov
inc
out
mov
daa
in
jg
dec
jb,pt
inc
sub
sub
pop
adc
ret
or
cmp
das
aad
and
sub
lret
sub
cmp
movsb
fidivrs
lock
or
dec
cli
out
xorb
pusha
jbe
mov
xchg
fsub
shll
nop
mov
fmull
fcmovb
test
fsts
scas
cmc
rclb
sbb
pushl
shl
mov
mov
outsb
stos
sarb
sub
out
and
mov
push
je
jno
cmp
jg
dec
add
push
add
mov
jo
test
stos
fwait
xchg
mov
mov
loop
clc
stc
jg
cmp
jo
or
sbbl
mov
inc
jae
stos
in
and
mov
loope
mov
add
cmpsb
jg
mov
inc
les
ret
or
push
jl
ljmp
cld
rcll
repz
aad
mov
or
pop
pop
shr
aas
fwait
call
ds
rcll
test
scas
push
cmc
sbb
jnp
mov
shr
imul
xlat
or
fdiv
ds
je
stc
cmp
enter
insb
xor
xchg
push
popa
lds
dec
sub
ss
shr
or
pop
jne
div
lret
sbb
out
push
outsl
stos
enter
jg
mov
or
lock
out
sbb
bound
or
es
jle
loope
sub
cmp
inc
ds
jnp
push
or
xor
lret
lods
nop
out
xchg
xor
and
and
lret
sahf
orl
inc
adc
push
insb
outsb
ret
aam
lods
std
rorl
testb
into
fwait
xchg
xchg
sub
movsl
push
scas
push
fistps
pop
fwait
add
lcall
fstl
insb
ljmp
rcl
in
ss
cmp
push
pop
xchg
cltd
insb
mov
xor
jne
jg
xchg
dec
inc
and
dec
or
dec
test
and
addr16
stc
sub
test
adc
adc
iret
push
push
bound
fdivl
mov
push
hlt
pop
xchg
jb
inc
gs
popf
vmovups
mov
adc
ret
mov
mov
add
push
mov
mov
push
aas
out
adc
pop
mov
cld
lock
xor
add
sub
insl
fsubrs
mov
jo
pop
pop
push
mov
mov
aad
aad
decl
push
subl
aam
dec
or
dec
cmp
adc
sub
or
mov
mov
stos
rclb
pop
xor
ret
repnz
clc
in
stc
pop
jg
popa
repz
mov
iret
insb
jmp
push
mov
test
mov
out
fistl
lods
pop
jecxz
and
sub
lea
enter
xor
adc
mov
cwtl
mov
and
push
push
xlat
test
cli
loope
dec
cld
pop
pop
mov
push
lahf
xor
mov
fwait
mov
adc
imul
icebp
mov
mov
iret
inc
add
notl
in
out
cmpsb
pop
lahf
addb
scas
mov
addr16
test
fistl
adc
test
sbb
xor
test
popa
mov
hlt
pop
arpl
mov
stc
dec
mul
mulb
fcomp
xchg
mov
jmp
xchg
adc
addr16
sbb
repnz
pop
lret
xchg
cmp
sahf
rol
out
sbb
pop
aaa
or
or
in
dec
or
mov
pop
es
push
add
xchg
xor
xchg
aad
cwtl
and
adc
jno
mov
inc
fmull
push
sub
or
pop
icebp
adc
loop
sub
cwtl
push
lea
xor
data16
or
lret
sbb
mov
jae
test
je
sti
cmpsb
pop
add
cld
xchg
in
rcrb
mov
test
inc
jl
xchg
add
jp
dec
sbb
adc
push
dec
push
lock
and
sbb
cmp
out
and
cmc
fimuls
stos
jp
aas
fsubrl
test
fidivrs
outsb
sbb
into
adc
fisttps
inc
mov
dec
lret
push
popf
dec
lods
jp
ficoms
mov
gs
jns
xchg
fnstenv
mov
add
rcll
jbe
js
stc
mov
mov
fistpll
pop
and
xchg
mov
aad
faddl
adc
pop
loope
imul
inc
mov
out
cwtl
shrl
test
push
shll
adc
xor
lods
jnp
inc
test
out
add
imul
sbb
jb
mov
pop
outsb
insl
or
cmp
lds
jecxz
cmc
repnz
scas
jmp
loopne
cs
add
scas
pop
or
je
sbb
push
xchg
enter
aas
and
sti
cld
mov
or
mov
loope
shrl
into
cld
cwtl
sbb
cs
jl
xlat
repnz
iret
bound
aam
push
sahf
xchg
fcmovnb
pop
test
nop
pop
mov
cmp
bound
pop
cwtl
push
and
jne
mov
push
cwtl
hlt
inc
inc
lea
sub
fsts
lea
pop
aam
push
repnz
lock
add
push
sub
jmp
sub
mov
pop
push
sbb
sbb
and
add
xchg
loop
mov
inc
sbb
mov
xchg
cmp
push
adc
iret
adc
lds
imull
dec
pop
aas
xchg
shrl
sbb
dec
jo
adcb
mov
ljmp
jmp
xor
push
inc
mov
in
jne
jb
xor
adc
bound
cmpl
mov
fs
cmpsl
add
les
rcll
stc
dec
popf
out
aas
and
bound
stos
rorb
push
psrlq
out
sbb
cs
inc
push
loop
test
jl
pop
repnz
es
outsl
pop
adc
mov
jp
loop
lret
mov
mov
and
fs
or
out
push
push
lahf
test
imul
iret
arpl
mov
pop
lea
xor
mov
negb
jno
aas
leave
cmp
sub
mov
fsub
mov
lret
mov
mov
mov
test
dec
dec
out
push
mov
push
push
and
jle
sbb
add
adc
imul
inc
push
mov
pusha
shl
mov
sarl
inc
or
mov
xor
aas
push
mov
popa
push
lcall
push
mov
gs
inc
xor
xchg
andl
sbb
pusha
fldt
lock
pop
mov
sub
lock
xlat
fwait
fs
xchg
pop
outsb
fsubrl
cli
cli
shll
push
add
cli
pop
scas
lock
adc
add
nop
inc
int
push
sub
mov
pop
ja
pop
mov
add
jne
sahf
iret
xchg
sub
cwtl
or
sub
mov
call
in
mov
jl
sub
cmp
popa
cmp
and
inc
xchg
fs
pop
iret
lcall
incb
jne
repnz
lcall
mov
mov
test
aam
sub
imul
out
nop
aam
jle
imull
xlat
les
push
xchg
ficoms
inc
inc
sti
mov
cmp
mov
push
xchg
movsl
sub
or
aad
mov
in
dec
shrb
xor
daa
push
lret
or
imul
movsl
fisubl
adc
iret
sti
loope
xor
xchg
mov
mov
movsb
cmpsb
mov
sbb
mov
pop
push
aaa
push
pop
or
mov
cld
adc
cld
mov
xchg
push
dec
and
add
add
inc
adc
or
pop
call
xchg
gs
fsubl
fstl
xchg
pop
mov
imulb
xchg
mov
or
mov
push
jae
addr16
xlat
insb
aam
div
sbb
aam
sbb
jp
arpl
pop
ror
dec
scas
fnsave
sbb
cmpsl
pop
push
dec
xor
mov
sbb
daa
jbe
adcb
imul
sub
mov
inc
sbb
ficompl
pop
xorl
lods
dec
cs
pop
xchg
iret
dec
rorb
xchg
cmp
fsubrs
data16
daa
sti
mov
mov
call
aaa
add
cmp
cmp
xor
sbbb
js
dec
and
movsl
or
dec
popa
jg
jbe
outsb
fxtract
and
mov
nop
mov
stos
mov
movsl
aam
cmp
clc
and
lcall
add
push
pop
cmp
xchg
sub
movsb
loop
stos
fdivl
loop
mov
and
mov
gs
dec
loope
mov
aaa
mov
cli
add
push
dec
pop
dec
push
sahf
fnstenv
jae
in
sbb
aaa
test
xchg
sbb
dec
push
push
dec
cli
rcr
inc
fisubrs
jl
dec
pop
rcll
movl
cli
mov
push
mov
xchg
jno
or
mov
insb
sub
lea
inc
les
xor
and
sbb
cmp
ss
scas
mov
addl
in
mov
faddl
test
sub
xor
in
push
inc
mov
insb
mov
jmp
call
mov
mov
shrl
mov
pop
cmp
int
mov
movsb
in
bound
imull
and
xor
mov
or
push
cld
testl
dec
mov
dec
jle
pop
xorl
xor
cmp
enter
adc
add
adc
or
repz
add
pushf
push
mov
bound
es
add
dec
out
loopne
ja
pop
mov
iret
inc
or
xor
mov
call
cmp
sub
outsb
pop
repnz
les
ret
inc
push
sbb
add
mov
jno
in
mov
sub
pop
outsl
lret
rol
ljmp
bound
adc
cmpsl
aaa
sub
mov
add
bound
jb
shl
insb
sub
sub
adc
dec
in
xchg
xorl
jge
push
in
cli
mov
in
xlat
imulb
or
and
fcoml
mov
mov
out
dec
test
mov
ljmp
mov
ja
ror
mov
enter
push
mov
outsl
movsl
ds
out
insl
stc
mull
sbb
pop
jo
mov
jo
inc
mov
cmp
call
inc
mov
mov
jnp
push
fnstsw
data16
lret
inc
and
cmp
adc
adc
push
pop
xchg
dec
ret
jbe
jecxz
loop
fisubrl
lahf
jns
xchg
pop
call
aam
xchg
addr16
adc
aaa
lret
testb
sbb
sub
loope
lods
repnz
loopne
xlat
and
or
dec
dec
decb
or
dec
and
sub
sub
ret
dec
xor
cwtl
inc
xchg
dec
insl
mov
mov
imul
pop
mov
arpl
xor
fsubrs
mov
popl
aam
jne
idiv
ljmp
jg
fbstp
pop
mov
incl
in
lahf
cmp
out
inc
out
mov
mov
int
add
jg
sahf
addb
cltd
aas
adc
xchg
loop
mov
test
sbb
dec
sbb
sysenter
jno
or
ljmp
xor
sahf
sub
push
push
loope
xor
push
repnz
inc
sub
stc
mov
aam
mov
int3
shll
fsubl
or
jo
mov
push
and
out
jnp
scas
pop
jbe
mov
sub
pop
jae
dec
not
mov
stos
mov
sar
inc
jp
cmc
sbb
out
mov
popf
push
mov
imul
subl
cmp
adc
inc
ljmp
or
inc
inc
in
mov
cmp
fistps
cld
pop
cmpsl
and
scas
dec
sbb
jmp
xchg
push
sahf
lret
fidivrs
push
scas
and
in
loopne
xor
push
mov
clc
les
pop
out
lea
addb
call
jmp
rol
and
pop
xor
xchg
packuswb
pop
int
mov
outsb
int
sbb
sub
add
fidivrs
xchg
lahf
cli
mov
cli
inc
out
out
mov
lcall
sbb
aad
mull
sub
call
xor
mov
push
cltd
cmp
ret
dec
test
aam
mov
ficoml
adc
lret
inc
and
shrl
mov
ljmp
jb
push
mov
mov
fdivrl
enter
lock
dec
test
sbb
xor
popf
cmp
dec
inc
xor
call
test
dec
push
jl
sahf
test
out
jg
inc
aaa
mov
sbb
sbb
mov
sub
cli
ret
push
mov
cmp
or
cli
cmp
pushf
xchg
out
dec
outsl
outsb
out
and
mov
mov
adc
inc
hlt
mov
test
dec
or
stos
loop
pop
cs
loope
sbb
xchg
stc
mov
mov
js
in
xlat
push
ja
xor
lds
jecxz
repnz
stos
dec
jne
scas
push
outsb
cmp
add
testb
or
jge
cmpsl
movsb
adc
ss
push
sub
lret
fstps
dec
mov
nop
mull
call
out
es
jle
mov
cmpsb
adc
adc
cmp
rcrl
jmp
pop
iret
imul
sbb
mov
pop
mov
lret
cmp
addl
mov
or
jo
mov
enter
adc
cli
xchg
and
xchg
dec
add
loop
mov
dec
mov
mov
jne
adc
cmp
in
enter
cld
mov
inc
sbb
dec
pop
loope
lahf
and
in
xchg
loope
jg
lea
xor
push
xor
adc
xor
loope
pop
popa
and
mov
and
mov
push
psllq
push
iret
mov
mov
pop
stos
icebp
jge
cmp
daa
loopne
loop
xchg
cli
lock
push
enter
daa
inc
shll
sub
dec
enterw
test
test
inc
aad
xor
sub
pop
stos
mov
sahf
stc
fsubl
pushf
push
push
xchg
shrl
xor
enter
cmp
and
and
scas
push
jg
inc
in
push
loopne
cli
pushf
pop
xor
jg
aas
inc
dec
mov
sbb
repz
cmpsb
xchg
cmp
jmp
inc
cltd
sbb
call
mov
mov
adc
subl
pop
sub
mov
mov
xchg
and
mov
pusha
jo
mov
cmp
dec
or
or
sbbl
gs
iret
xchg
cmpsb
enter
mov
adc
pop
ja
popa
jns
jo
xchg
mov
adc
fldt
sub
xchg
inc
jmp
out
out
out
sub
mov
popf
dec
hlt
mov
leave
pusha
mov
into
sar
pusha
xchg
push
int
jg
push
mov
fcmovb
inc
mov
cs
in
rcll
sub
push
pop
pop
mov
fsubs
jo
lret
xlat
jno
mov
xor
mov
xchg
sti
ja
jg
adc
daa
popf
and
out
inc
cmp
push
pusha
push
test
loopne
lds
sub
lret
fldt
cmpsl
clc
lea
dec
xchg
dec
repnz
sbb
repnz
xor
push
movsl
cwtl
stc
push
aas
jg
data16
mov
push
or
xor
lea
mov
jmp
inc
es
inc
out
sub
dec
fbld
out
add
xchg
daa
test
out
inc
xchg
scas
daa
or
pop
lods
sub
mov
scas
mov
mov
push
inc
fmuls
mov
sbb
pop
aas
andl
sbb
and
aas
stc
adc
pop
sahf
add
xor
jne
es
jns
jno
outsl
mov
int
jg
or
dec
inc
mov
xchg
mov
lcall
test
test
pop
push
in
lock
test
loope
mov
mov
push
sbbb
xchg
bswap
je
mov
xorb
pop
mov
dec
mov
xchg
or
repz
xlat
cmp
cmpsb
xor
out
scas
dec
and
mov
xor
cmp
stos
cmp
mov
mov
loop
pop
or
xchg
outsb
dec
add
out
cmpsl
mov
adc
cwtl
inc
add
cli
push
xchg
inc
mov
xor
insl
cwtl
pop
jno
push
in
add
jno
dec
push
cli
xor
cltd
jmp
rorb
sub
ret
sbb
jecxz
repz
xchg
xchg
pop
mov
adc
xor
jle
cli
sbb
aaa
into
dec
fdivrl
mov
cmp
aas
xchg
ret
je
cli
rclb
sub
inc
xchg
ret
pop
pop
cmc
out
fucomp
into
or
sub
lods
mov
sbbl
inc
pop
call
int
push
inc
ficoms
xchg
xchg
notl
jo,pt
stc
ljmp
mov
jp
or
movsb
mov
lods
cmp
loope
jbe
pop
pop
jb
leave
inc
shrl
lahf
and
adc
xor
mov
mov
outsl
or
sub
pop
or
lea
inc
jg
push
lock
test
lock
push
pop
push
cmp
test
loop
fs
push
jecxz
imul
mov
inc
pop
jge,pn
loopne
aas
hlt
inc
sbb
mov
or
gs
push
cmp
push
mov
cwtl
lods
in
xor
fists
adc
int
cmp
push
mov
pop
loopne
jg
iret
ja
test
and
hlt
push
ljmp
mov
test
enter
sahf
mov
loop
sbb
fstl
and
jle
pop
add
out
arpl
stos
and
imul
inc
clc
and
daa
xchg
imul
pop
repnz
lds
fs
lcall
jbe
jl
mov
mov
cwtl
jno
lret
inc
xor
push
jmp
test
dec
mov
hlt
mov
rolb
jmp
jns
xchg
fstl
movsl
push
mov
cmc
pop
and
mov
sub
jnp
cli
cmp
and
mov
pop
cmp
xchg
pop
dec
aam
outsb
outsb
mov
movl
andb
sahf
push
aaa
ss
pop
cli
xchg
std
rorl
iret
jge
aaa
mov
int3
pushf
pop
cmp
mov
xchg
lock
add
adc
sbb
imull
jmp
adc
aas
std
sub
xor
mov
jg
movsb
in
lods
loopne
and
rol
ficompl
out
xor
mov
xchg
out
std
rorl
fdivr
popf
adc
cltd
or
iret
and
pusha
pushf
push
lock
inc
add
mov
cwtl
pop
leave
fstpl
in
or
adcb
pop
mov
and
lret
pop
iret
add
cmp
mov
lock
mov
das
pop
loop
xchg
sub
mov
out
add
lret
hlt
std
dec
and
pop
fiaddl
mov
and
outsb
es
jge
push
fstpl
jnp
mov
pop
sbb
dec
out
imul
stc
jmp
je
xchg
and
mov
and
fildll
jb
ja
xchg
bound
and
add
test
xor
jne
xchg
inc
ljmp
pop
push
xchg
imulb
rolb
jle
test
ss
adc
adc
or
and
lcall
dec
adc
mov
cld
iret
pop
or
and
sbb
cwtl
inc
cmp
icebp
into
hlt
ret
fldenv
adc
fwait
sbb
aas
nop
scas
hlt
clc
jg
push
lods
imulb
xchg
insl
and
inc
add
mov
or
aad
mov
enter
enter
stos
inc
jb
sahf
cmc
adc
testb
aas
pop
mov
adc
lret
jmp
orl
sub
fisubl
cmpl
in
cmp
cltd
in
pop
xlat
or
xchg
cmp
js
insl
mov
repz
insb
js
dec
jmp
pop
jb
sahf
test
popa
scas
jne
es
inc
sti
jg
sbb
xchg
pop
inc
jno
dec
sbb
les
scas
popf
sub
mov
scas
iret
cmp
mov
cmp
test
dec
out
jb
in
fs
dec
icebp
jne
outsb
stc
xlat
in
rcl
pop
xchg
push
lret
dec
pop
xor
sbb
jmp
xor
mov
and
sub
cltd
testb
into
adc
inc
nop
xor
mov
inc
sar
mov
and
rclb
xchg
loopne
jecxz
into
and
push
mov
cltd
jle
mov
fucom
cli
repnz
pop
mov
dec
xchg
lcall
add
loope
lea
xchg
pusha
mov
push
add
cltd
add
adc
in
lret
icebp
loopne
fwait
das
xor
dec
js
es
testb
sbb
pop
hlt
out
out
cld
mov
lahf
lahf
inc
jmp
sbb
mov
fwait
repz
jecxz
movsl
aad
pop
pop
adc
lahf
imul
lret
or
xlat
aas
inc
dec
popf
out
pop
adc
adc
dec
xchg
imul
sub
inc
lahf
jbe
aas
pop
je
xor
dec
gs
mov
test
in
xor
xchg
add
into
int3
cmpsb
pop
iret
bound
call
pop
arpl
inc
inc
or
jae
popf
pop
jg
aas
dec
or
int
inc
add
mov
or
mov
push
dec
push
mov
dec
lcall
xchg
sbbb
lea
mov
daa
xor
daa
adc
pop
loopne
mov
adc
cmp
sub
test
cmp
in
rcll
or
daa
mov
lock
lods
int
push
xlat
fidivs
inc
xor
lods
lods
pusha
cltd
jb
cwtl
lods
mov
jmp
or
je
xchg
imul
aaa
jp
mov
mov
or
outsb
xchg
mov
arpl
cmpsb
jmp
cmpsl
ljmp
fninit
fidivl
std
push
xchg
push
jb
movsl
js
ret
and
mov
sub
div
mov
lret
imul
add
mov
pop
lea
rclb
cmp
cmp
js
out
push
cld
enter
in
ret
xchg
jge
inc
shlb
xchg
and
mov
out
mov
pop
pop
or
cmpsl
sahf
xor
dec
fdiv
das
fs
dec
pop
mov
pop
stos
add
xchg
cmp
shrl
dec
outsb
or
out
into
mov
aaa
jae
lods
push
push
mov
sub
jmp
dec
or
or
xchg
loope
pop
jo
addr16
fimull
popa
mov
push
push
push
or
shlb
sbb
lahf
sub
mov
xor
cwtl
mov
jl
cmp
in
lods
arpl
sub
dec
adc
cwtl
mov
sbb
push
pusha
js
push
hlt
inc
inc
lods
xlat
loope
lods
lcall
inc
fcoms
jg
fldenv
insb
mov
xor
fidivrl
fsubl
lea
cmpsl
ret
push
fxch
dec
xchg
pop
mov
pop
test
bound
inc
push
push
int
xchg
popf
in
sbb
test
mov
fwait
call
movsb
in
lret
inc
out
cmp
xor
sbb
int
ret
or
pop
inc
dec
push
xchg
pop
test
cmp
fucomp
and
arpl
fucomip
js
cmp
fnsave
lods
test
inc
mov
ljmp
jge
mov
imul
xchg
insb
dec
cli
dec
xor
mov
in
out
ds
enter
dec
aaa
sti
mov
in
dec
insl
lahf
or
add
daa
inc
fnstsw
sahf
aas
cmpsb
mov
hlt
jne
mov
adc
lcall
mov
jp
cmp
sarl
fcmovbe
lods
sbb
or
sub
fldcw
jb
or
inc
xor
je
mov
inc
mov
mov
fdivrs
sbb
push
push
or
add
jecxz
sub
scas
iret
outsl
es
sub
adc
cmc
jb
scas
sbb
push
cmp
push
fnstsw
mov
xchg
mov
pop
cmpsl
inc
dec
clc
sub
sub
aas
cld
gs
out
mov
jbe
popa
sahf
mov
int
std
es
dec
push
cmp
xor
sbb
jp
scas
add
sub
and
push
idivb
mov
icebp
push
inc
stos
rorl
in
lock
xor
roll
mov
cld
inc
xlat
push
jg
out
addr16
jecxz
fstpt
and
std
out
aas
mov
lea
pop
mov
sarl
xor
iret
arpl
sub
dec
stos
mov
cmpsl
or
adc
lret
sub
insb
or
jns
fldl
std
dec
add
inc
mov
ret
sbb
clc
pop
jge
cmp
nop
pop
test
repnz
shll
popa
mov
fdivrs
adc
out
fistps
addb
mov
in
sub
adc
dec
pushf
and
lcall
mov
push
mov
and
imul
mov
push
imul
in
and
xchg
jecxz
icebp
or
jle
jp
loopne
ret
fstl
ss
add
call
xchg
push
fistl
aas
sub
pop
fldenv
hlt
faddl
icebp
lahf
push
cmp
and
pop
xchg
mov
cmp
fbstp
add
sbb
sub
mov
pop
mov
xchg
sub
xchg
adc
lcall
jecxz
push
in
orl
add
mov
xchg
das
jmp
or
loopne
fcomip
shrb
pushf
or
test
scas
add
mov
sti
out
sub
iret
or
dec
push
xor
sbb
or
sub
cli
xchg
testb
sub
jmp
std
ret
aaa
and
jns
ja
mov
stc
in
cmpsl
mov
pop
push
jmp
sbb
outsl
mov
sbb
jb
hlt
int3
mov
xor
sbb
xchg
fldt
or
sbb
and
mov
fwait
mul
test
clc
ret
inc
data16
add
jae
dec
loop
fidivs
cmpsb
cmp
sbb
push
push
cmp
pop
std
js
das
push
adc
mov
or
ds
jmp
jb
lcall
sahf
mov
push
adc
loop
cli
push
enter
mov
popf
popa
push
into
xchg
push
mov
lea
insl
inc
shrb
outsb
stos
test
sahf
cmp
les
mov
sub
fnsave
arpl
xchg
test
push
push
lea
pusha
adc
in
mov
setb
repz
push
scas
inc
push
cld
lahf
push
out
push
pop
and
adc
or
push
js
aaa
or
cwtl
jecxz
in
ljmp
and
out
fidivs
and
xchg
push
fidivrl
xor
ja
add
repnz
jb
es
adcb
push
mov
pop
push
pop
rolb
lahf
cmp
adc
xchg
mov
in
mov
cmc
adc
addr16
mov
movsb
into
inc
sub
pop
iret
js
cmpl
sti
ds
repnz
adc
iret
movsb
xor
les
and
popa
dec
bt
test
fstl
cmpsl
mov
adc
fimull
add
xchg
rorb
mov
adc
pushf
mov
jnp
sub
pop
in
pop
mov
iret
mov
aad
das
mov
les
cmp
cmc
int3
mov
mul
test
into
out
outsl
inc
mov
popa
inc
in
sbb
cli
push
mov
xor
and
leave
es
jns
jl
in
inc
fbstp
sub
push
test
lahf
subb
aad
mov
add
adc
inc
dec
loop
and
aam
sbb
test
push
test
add
jg
imul
insl
sub
sbb
fldenv
nop
adc
ds
inc
cmp
dec
sub
mov
sub
lcall
pop
sbbl
xchg
sub
push
nop
cmp
push
push
pushf
imul
test
jb
mov
aaa
jbe
mov
out
xor
pop
and
dec
jns
cld
mov
arpl
mov
mov
push
inc
scas
or
popf
sbb
add
in
inc
lcall
cli
shr
jl
push
pop
pop
addr16
cmp
outsl
sbb
arpl
movsl
daa
rcll
jno
push
lods
xchg
add
adc
maxps
aam
or
lret
cmp
inc
enter
mov
pop
sub
fs
push
lods
movsl
scas
std
in
int3
cmp
inc
loopne
adc
xor
mov
sub
jl
or
cltd
push
in
je
mov
and
std
cmp
inc
cli
mov
roll
xor
cltd
push
sbb
rorl
xor
mov
clc
cmp
xor
or
data16
xchg
mov
idivl
std
mov
in
fiadds
mov
stc
popa
cmp
popa
mov
lret
pop
ficomps
push
mov
mov
pop
aas
push
cmp
dec
adc
addr16
mov
push
and
push
add
mov
stos
add
mov
or
mov
push
jecxz
and
sub
sub
lods
lods
push
and
cld
loop
sbb
sub
sbb
in
lods
inc
jp
mov
dec
lret
pusha
stos
xchg
leave
arpl
or
test
mov
dec
add
in
add
movsb
rclb
or
mov
jecxz
out
ret
xor
popa
push
jp
mov
mov
pop
subps
gs
test
or
mov
inc
sub
aad
mov
aad
jns
jp
push
mov
into
xchg
aaa
imul
sbb
imul
jns
arpl
gs
mov
lret
cmp
push
subl
fcompl
call
lods
loopne
insb
hlt
pop
ret
out
lds
pop
std
loopne
leave
cmp
mov
inc
in
jge
nop
scas
enter
jecxz
lods
and
xchg
jl
mov
leave
mov
lret
cltd
push
insl
into
add
xchg
inc
cmp
adc
adc
call
les
fistpll
xchg
cld
arpl
xor
xor
jbe
fisubrs
add
push
in
mov
shll
push
xchg
or
test
aaa
jno
xchg
xchg
xor
stc
push
data16
inc
divb
pop
cmp
and
lds
mov
dec
dec
into
adcb
dec
lcall
fstl
xchg
leave
pop
out
clc
repnz
cmp
or
push
mov
out
fs
call
insb
mov
and
pop
xchg
cs
and
mov
mov
dec
add
lods
sub
std
sub
lods
xchg
roll
dec
sarl
push
dec
test
popf
movsb
aaa
dec
inc
jno
cltd
adc
dec
add
mov
dec
mov
inc
imul
dec
sub
push
jmp
or
xchg
mov
jl
aaa
lcall
push
fwait
xor
popa
jno
lcall
and
outsb
add
or
outsb
popf
stos
insb
divl
testl
aaa
add
pop
insb
jl
adc
xchg
sub
std
lahf
dec
fwait
xchg
insb
leave
mov
cs
inc
mov
xor
dec
pop
jae
jl
fcomps
imul
hlt
fwait
cld
fsubrp
pop
xchg
lahf
mov
in
lods
out
dec
xor
ret
negb
cmc
mov
dec
insl
jl
gs
mov
repnz
clc
enter
inc
aaa
jnp
insl
inc
or
mov
add
nop
sbb
push
jmp
and
imul
aad
and
xchg
add
pop
arpl
mov
sub
pushf
aas
test
xchg
outsl
cmp
fadds
stos
aad
gs
mov
loop
mov
jle
sub
jp
repz
or
fsts
repz
push
sub
xchg
xor
xor
std
outsb
mov
rcrb
jecxz
jle
test
inc
enter
dec
andb
inc
dec
mov
jae
mov
fs
lds
jle
cmp
movsb
mov
insl
loope
pop
int3
push
inc
stos
adc
pop
cmp
jb
lods
cmp
aas
mov
clc
pop
and
mov
icebp
xchg
mov
mov
mov
xchg
or
in
pop
jge
dec
filds
mov
rcll
mov
nop
aas
xor
sub
cmp
jmp
movsb
icebp
std
test
ret
repz
jl
lock
mov
iret
test
or
jbe
fwait
push
add
xor
add
outsb
and
pop
jl
cmc
pushl
idivb
sub
mov
mov
sub
dec
out
rcrl
lahf
sub
push
es
or
enter
sub
loopne
and
and
aam
jo
jb
and
outsl
mov
lret
cmp
adc
mov
ss
xlat
ss
ja
pop
mov
xchg
popa
outsl
adc
adc
jmp
test
push
sbb
inc
cmp
sti
xchg
arpl
jmp
in
out
imul
out
pop
mov
sbb
pop
mov
scas
lahf
xor
sbb
imul
push
fisubs
mov
xchg
test
add
cmp
lods
data16
fisttps
and
sbbb
push
negb
jmp
aaa
push
or
pop
test
xchg
popa
test
xor
shr
push
lret
push
int3
inc
scas
xchg
std
mov
xchg
sub
or
mov
xor
fistpll
xchg
loope
adc
enter
xor
icebp
add
mov
lock
pusha
jmp
cmp
dec
out
jecxz
rcrb
enter
jmp
out
push
je
psubq
mov
pushf
sub
push
nop
test
mov
cmpsl
insb
cmpsb
adcl
lcall
inc
inc
insb
mov
popl
jmp
pop
imul
cmp
jne
or
sbb
loope
xchg
mov
inc
mov
mov
cwtl
and
shl
xchg
jbe
and
jecxz
dec
sbb
lods
push
add
xor
add
psllw
es
xchg
shrb
mov
jbe
or
sahf
roll
jne
and
stc
roll
cmp
ljmp
or
mov
mov
lcall
bound
clc
pop
test
dec
and
xchg
call
mov
in
imul
fidivrl
sarl
push
push
add
jne
stc
es
lock
inc
mov
sbb
pop
jmp
mov
sub
cmpsb
pop
test
lahf
pushw
inc
sub
rcl
push
mov
pop
cmp
mov
xchg
jg
jle
rorl
imul
pop
aam
cltd
inc
stos
fldcw
cmp
and
sub
into
ror
adc
cmp
mov
and
push
push
and
push
imul
jo
cmp
jb
pushf
bound
loop
in
xchg
leave
jno
outsl
pop
jmp
adc
lcall
and
adc
shrb
mov
pop
mov
pop
add
fistl
dec
mov
insb
and
sub
fwait
add
and
das
and
scas
sbb
or
sbbl
push
sbb
and
clc
push
jbe
xchg
xchg
add
addr16
lds
dec
cmp
ljmp
lret
push
xchg
mov
sbb
and
vpaddsb
sub
sahf
fisubrs
sub
push
outsb
imul
xchg
insl
sub
sahf
xchg
or
fsubrl
pop
cmpsb
out
fdivrl
cmp
jl
js
pusha
hlt
inc
shll
stos
mov
test
imul
add
aam
xor
pop
pop
cmp
stc
adc
nop
in
jb
mov
jne
addr16
ja
add
mov
sub
mov
and
dec
orl
mov
adc
in
pop
xor
aas
ja
cmp
sbb
dec
fwait
sti
aad
fisubrl
fdivs
add
cmp
mov
or
frstor
lds
push
push
rolb
push
xchg
mov
jno
pop
pop
ljmp
push
sbb
xchg
push
jp
sbb
orb
xor
dec
jmp
setge
es
adc
xchg
insb
xchg
dec
pop
jle
or
outsb
or
push
and
adc
mov
negl
popf
shlb
or
add
mov
and
xor
subb
fs
mov
hlt
cmp
sbbl
test
adc
xlat
sbb
nop
sti
mov
dec
xor
pop
jecxz
add
xor
or
in
test
sarb
mov
aam
cmp
sbb
dec
mov
mov
or
and
jbe
mov
pushf
pop
mov
negb
mov
push
inc
js
xor
mov
aaa
jb
call
push
mov
outsl
std
movsl
mov
loopne
repnz
ret
jb
data16
ret
dec
lcall
inc
xor
sub
jnp
mov
xchg
mov
les
sub
lahf
mov
xchg
or
out
lods
dec
sub
mov
xor
mov
mov
dec
xor
xchg
popa
add
sbb
jl
push
sub
jmp
ror
adc
outsb
lret
lcall
testb
idivb
jbe
cmp
out
mov
xchg
sub
es
jne
xchg
fisubl
jmp
mov
xor
jno
mov
mov
out
lcall
lds
call
inc
repz
sbb
push
mov
inc
mov
add
xor
xchg
es
or
aad
push
out
jg
and
and
adc
push
in
xor
push
pop
ja
push
adc
call
cmp
push
fisubs
repnz
lcall
pop
inc
rol
and
push
sbb
loopne
int3
jge
sub
scas
xor
ljmp
xlat
xchg
mov
in
andl
fcompl
mov
adc
nop
xor
arpl
ja
jmp
loope
jmp
adc
push
cmp
insb
cli
jo
jmp
adc
lret
add
orps
dec
push
push
push
xchg
ret
shlb
push
cmp
dec
loopne
inc
and
sbb
mov
out
movsb
test
das
jae
xor
out
das
fwait
add
andb
mov
push
in
inc
jne
out
xorb
cld
popa
jae
rol
push
push
sar
in
pushf
test
orl
push
add
xchg
lcall
cltd
xor
dec
insl
and
nop
test
mov
mov
insb
fsubs
imul
dec
add
mov
push
shlb
add
cmp
popa
xor
lods
inc
push
mov
jo
mov
push
xchg
pop
jg
xor
xchg
cmp
clc
push
cs
mov
bound
lea
and
xlat
pop
nop
mov
sub
mov
daa
aaa
stos
lea
cli
pusha
fdivs
icebp
imul
mov
and
cli
xchg
xchg
lret
int
dec
ret
negl
dec
sbb
inc
adc
xlat
add
xor
mov
aas
sub
cmpsl
aam
jbe
adc
adc
sbb
cmp
mov
jp
xchg
cli
dec
aaa
insb
test
jnp
adc
outsb
in
jl
arpl
jle
icebp
mov
dec
adc
xchg
lods
xchg
insb
fdivrs
clc
fs
andb
cmp
fucomi
stos
push
pop
scas
and
mov
xchg
push
xor
in
mov
fs
pushf
adc
adc
pusha
cltd
push
lahf
mov
ret
enter
decl
adc
call
jmp
loopne
mov
or
vdivpd
inc
enter
inc
into
cmpsl
cmp
daa
hlt
mov
imul
dec
push
ja
fcmovbe
push
mov
add
pop
jmp
jp
push
jg
loop
fwait
sahf
stos
pop
adc
adc
loopne
aas
fstl
icebp
xor
popf
mov
push
scas
jno
mov
xchg
inc
jmp
jmp
shlb
imul
inc
or
lret
pop
mov
push
aad
jae
pop
repz
lods
mov
fcom
xchg
dec
push
repnz
cmp
movsl
mov
add
sahf
mov
rcl
cwtl
imul
mov
mov
leave
bound
fs
xor
sub
jg
outsb
int3
mov
cmp
in
fidivrs
or
loopne
aam
inc
jne
and
fimuls
mov
jge
adc
and
and
and
enter
sbb
imul
xlat
stos
out
adc
cmpsb
push
movsb
xor
and
outsl
sbb
negb
and
aam
xchg
mov
sbb
fs
fldcw
or
pop
jb
int
loop
mov
jbe
scas
mov
jae
xchg
add
mov
and
add
out
add
and
mov
int
xor
gs
ret
cltd
push
rolb
out
imul
jecxz
ds
addb
mov
sub
dec
cltd
aas
mov
xor
fucomip
fdivs
sti
shrb
dec
xor
out
ss
imul
mov
jle
mov
stc
jno
cli
rolb
popf
mov
mov
ja
bound
or
push
imul
mov
mov
push
lock
pop
and
inc
adc
xchg
sbb
push
dec
test
dec
adc
jnp
inc
xchg
and
pop
mov
sbb
inc
test
js
stos
shlb
cmp
negl
and
add
nop
faddl
insb
and
data16
adc
mov
inc
and
pushf
lods
clc
jl
aas
inc
and
lods
dec
fstps
and
mov
xchg
dec
add
xor
and
and
jg
mov
and
pop
cwtl
movsb
aaa
jo
sbbb
inc
mov
jge
jmp
push
fdivrs
dec
aaa
sbb
mov
insl
mov
inc
js
outsb
adc
loopne
fdivr
leave
push
xchg
pusha
cmp
test
or
insb
dec
iret
fucomp
mov
rcl
popf
out
stos
les
push
lret
jp
mov
mov
mov
cmp
addr16
xor
jno
xchg
or
xchg
stos
add
xchg
xlat
insb
pop
stc
testl
arpl
ja
pop
sbbl
div
push
les
jle
mov
cmp
imul
out
pop
cmp
repnz
push
xor
mov
loop
rcrl
test
mov
imul
sub
pop
dec
stc
dec
lea
dec
sahf
sbb
push
mov
mov
cmp
pop
add
jmp
sbb
xchg
lret
add
mov
xor
test
popa
imul
jne
mov
xor
mov
sarb
imul
jnp
rcr
push
cwtl
push
push
mov
cmpsl
std
inc
stc
shll
jp
pop
sbb
nop
pop
mov
push
dec
enter
mov
ret
mov
push
jl
addr16
scas
rcrb
lret
je
out
pop
cmpsl
cmp
pop
add
add
shrl
in
popa
cmp
sub
xchg
xchg
jnp
cltd
les
push
mov
push
pop
out
jle
sbbb
movsl
xlat
mov
xlat
mov
push
sbb
ja
ja
xor
movsl
jb
or
xchg
and
or
jae
mov
sbb
add
sbb
mov
or
add
xor
mov
dec
jp
and
add
mov
es
mov
inc
push
rclb
lret
loopne
cmp
jg
pusha
adc
pop
inc
dec
outsl
lcall
jge
add
sub
fidivl
lds
sbb
dec
pop
aam
sub
daa
sbb
push
into
out
mov
mov
mov
jl
adc
xchg
sbb
sbb
sub
imul
adc
cmpsl
pop
jbe
mov
cmp
fcmovne
rorl
aaa
push
imul
jl
cltd
and
je
test
adc
sub
dec
cmp
lea
xchg
out
out
rcll
or
push
addb
les
sahf
movsl
test
adc
movsb
into
scas
jge
out
jmp
and
shlb
sbb
adc
loopne
jb
sub
cmc
or
cltd
mov
movsl
out
int
adc
inc
pop
mov
repz
xchg
sbb
lahf
adc
inc
mov
imul
mov
xchg
xchg
loop
call
mov
fsubrs
repz
mov
adc
testb
push
cmpsb
mov
lret
push
fwait
imul
stc
adc
mov
roll
jo
clc
mov
mov
dec
loop
jmp
push
dec
stc
sub
cmpsl
incl
out
dec
xor
popf
loop
xchg
mov
or
ja
sub
in
gs
std
push
adc
inc
dec
scas
fwait
sahf
jb
imul
stc
out
test
adc
push
ret
add
xchg
cmpsb
rcr
insb
ret
push
inc
aam
or
add
cmc
mov
xchg
sub
loope
mov
cmc
fwait
cmpsb
jmp
push
inc
push
jo
out
sti
sbb
xchg
aam
dec
aad
fisubs
sbb
out
insb
mov
jbe
xchg
jo
stc
pop
dec
inc
mov
sbb
add
mov
lret
outsb
push
or
lds
mov
stc
test
lods
mov
and
movsb
orl
dec
aad
push
lea
mov
repnz
rcr
fcomps
mov
adcb
sbb
lret
ret
jg
cmp
lods
adc
push
mov
and
rdtsc
mov
or
fstps
stos
int
bound
sub
mov
and
lods
and
or
test
imull
cmp
icebp
sbb
shlb
je
sbb
inc
mov
mov
mov
jle
test
sub
push
push
add
dec
cmc
jnp
rorb
inc
mov
test
in
pop
xchg
js
mov
or
das
sub
xchg
adc
cmpsb
popf
dec
shll
mov
mov
jne
fsubrl
in
mov
add
test
xor
les
ja
cmpsl
xor
lahf
mov
sbb
neg
stos
into
jae
or
int3
fistpl
lret
insl
cmp
ret
push
or
add
pop
pop
fneni(8087
cmc
nop
sub
xchg
clc
cmp
dec
push
testb
insl
sti
xchg
and
add
push
jb
loope
popf
push
in
pusha
lcall
fisubrl
ds
push
test
cmp
inc
pushf
orb
pop
push
cmp
mov
scas
rcrb
test
rolb
push
call
jg
or
add
dec
out
jl
insl
cmp
push
xor
push
mov
in
dec
adc
dec
fwait
lret
mov
paddusw
mov
jge
adc
mov
popa
pop
fbld
rcr
int3
sub
mov
or
dec
into
cmp
jmp
ss
xchg
js
icebp
add
mov
mov
aaa
mov
popf
push
sti
cmp
push
pop
xchg
fldenv
adc
push
mov
pop
call
and
popa
jp
mov
lock
cltd
jle
sti
xor
aad
and
roll
in
pop
lahf
stc
xchg
imul
fistps
mov
dec
jno
inc
gs
jne
cmp
inc
jecxz
and
dec
movsb
cmpb
out
mov
mov
loope
add
sub
arpl
icebp
sahf
iret
xor
mov
push
mov
mov
xchg
les
cmp
jo
movsl
push
bound
cmp
jb
adc
cld
ret
das
and
jno
or
adc
in
or
add
pop
bound
push
or
sbb
add
jo
and
pop
popa
push
sarb
dec
mov
dec
das
push
lcall
adc
loopne
xor
shl
fldenv
adc
add
test
push
cwtl
enter
sbb
divb
mov
cmp
mov
or
jns
and
arpl
cmp
xchg
push
or
mov
int
mov
shlb
mov
and
fnstenv
cmp
lret
xchg
sub
pop
mov
into
int
mov
mov
cmc
int3
adc
sub
xchg
cmpsb
jae
and
fldt
jmp
nop
mov
or
es
jle
bnd
inc
pop
push
test
mov
das
rcll
cmpsb
jbe
jne
sub
mov
xchg
mov
loopne
mov
inc
cltd
adc
push
int
xchg
cmp
mov
cmpl
or
cwtl
pop
loop
js
lods
pop
lret
pop
test
cmp
push
mov
cltd
push
add
mov
adc
rcl
test
ficompl
adc
xchg
mov
and
push
or
push
sub
popf
cld
repnz
les
adc
hlt
pop
cli
mov
add
lcall
les
push
mov
xchg
dec
dec
xchg
cld
cmp
dec
cmpsb
les
inc
sahf
in
je
ss
lea
inc
sub
fdivrs
outsb
jl
push
lea
xor
sub
test
test
lods
or
inc
sub
xchg
xchg
stc
inc
in
xchg
jecxz
dec
inc
or
or
mov
inc
dec
mov
pusha
notl
ror
mov
rorb
xlat
sub
or
sbb
lods
sub
or
sub
inc
add
lahf
jns
jmp
push
pusha
cwtl
mov
ljmp
add
push
jno
jae
scas
pop
mov
jo
xchg
notl
or
imul
lret
aaa
dec
inc
aaa
lret
notl
inc
pop
test
adc
jno
jmp
aam
lret
jmp
and
dec
cmpl
mov
scas
dec
cmp
in
fs
inc
insb
popf
repz
les
jmp
pop
fidivl
mov
jmp
mov
inc
adc
fildl
pop
test
mov
push
cmc
dec
xchg
ja
xchg
shll
aaa
ljmp
sti
repz
push
sbb
ret
rcrl
sti
or
cmpsl
pop
push
dec
mov
cmp
shl
les
loop
pusha
pop
push
pushf
or
mov
test
xchg
push
out
xor
push
ljmp
or
xor
je
aaa
sbb
je
cmp
and
lods
mov
and
xchg
jnp
pop
addb
mov
add
gs
insl
pusha
adc
outsl
and
add
xchg
iret
push
mov
adc
pop
pusha
fbld
add
adc
lret
sub
jmp
pop
sub
xchg
and
rclb
imul
xchg
cmpsb
mov
mov
cmp
jmp
aam
popa
pop
stc
test
icebp
ljmp
xchg
cmp
xor
mov
aad
xchg
push
cld
xchg
cmpsl
jmp
push
stc
insb
je
outsb
data16
lahf
imul
movsl
push
std
imul
fcoml
dec
out
ds
sub
jmp
push
lock
test
add
cli
jl
iret
out
dec
push
movsb
scas
cmpsb
sub
dec
inc
xchg
fistl
pop
imul
jle
and
les
jb
mov
shlb
rcl
mov
mov
cmp
notl
push
adc
or
or
fucomp
fcmovne
popf
push
inc
fs
or
rolb
jecxz
cmp
xchg
mov
mov
or
push
imul
bnd
sbb
adc
push
dec
xor
adc
mov
xchg
in
pop
xorl
adc
or
jb
dec
rcrb
mov
test
out
adc
lcall
jb
int3
fdivr
scas
pop
out
inc
inc
or
js
cmp
xchg
into
dec
repnz
out
sbb
fisubl
mov
hlt
push
push
add
test
mov
jnp
insl
mov
mov
clc
push
mov
lret
or
inc
mov
pushf
andl
or
aaa
rorl
pop
mov
js
cmpsb
and
movsb
loop
mov
jmp
push
dec
push
jp
mov
daa
cmp
inc
testb
cltd
mov
in
pop
push
mov
mov
add
sar
sbb
out
fwait
int
mov
repnz
int
jp
lock
mov
enter
or
pusha
fs
sbb
jae
test
xchg
lret
rcll
mov
dec
push
mov
scas
pop
sub
xchg
push
jge
or
xor
movsb
push
shll
and
ss
rcr
cmp
ja
js
aas
adc
add
xchg
das
popa
repz
cmpsl
xchg
xchg
xchg
test
test
int
sub
outsb
lret
je
sbb
aaa
xchg
js
ss
sbb
mov
xor
push
sub
in
xchg
imul
sti
shrl
idivb
out
jle
jne
push
ret
or
repnz
cmp
push
and
loopne
cmp
jns
cmp
jecxz
aam
mov
xchg
inc
jne
lods
xchg
push
sbb
pop
inc
xchg
push
hlt
mov
sbb
ljmp
add
pop
ret
loope
leave
aaa
lahf
pop
cld
gs
jmp
sub
jp
mov
mov
out
xchg
or
leave
es
into
xchg
cld
adc
into
add
xor
lea
inc
lahf
loop
rcr
inc
fwait
inc
mov
add
pop
push
rol
xchg
cld
xor
insl
dec
mov
cmp
rclb
jbe
dec
orb
or
ljmp
inc
sbb
sarl
xor
mov
inc
test
lods
in
test
ljmp
clc
adc
imul
into
test
imul
movsb
sahf
shrb
rcl
cmpsl
push
lcall
jg
addr16
jp
cmp
xchg
xchg
imul
mov
sub
pop
mov
ja
sti
cmp
daa
sbb
scas
add
mov
ret
mov
sbb
cs
adc
adc
and
xchg
push
mov
cld
cwtl
std
mov
lock
xchg
xchg
mov
imul
push
pusha
fs
div
and
sub
mov
jbe
int3
lcall
lcall
xchg
ret
cli
cs
mov
sbb
dec
dec
orl
add
and
sub
out
xor
psrlw
sbb
mov
aad
jae
inc
jge
in
xlat
fimull
mov
insb
sbb
sub
insl
mov
cmp
lret
xchg
add
movsl
inc
inc
add
idivb
push
inc
cmpsb
jb
daa
cmpsb
xchg
mov
mov
push
sbbl
xchg
adc
cmp
pop
jg
dec
daa
pop
cmp
call
sub
adc
mov
xlat
cmpsb
mov
pusha
clc
mov
out
fmulp
sub
aas
cmp
push
inc
call
sbb
bound
or
fiadds
jnp,pn
dec
fildl
mov
mov
mov
in
sub
mov
sub
je
inc
pop
lds
daa
andb
dec
lods
cmp
bound
sbb
movups
adc
fdivl
or
add
inc
mov
ds
inc
add
xchg
ret
into
sub
rcll
mov
jl
jg
aam
inc
out
jns
imul
repz
stos
xlat
jle
jo
push
je
sti
mov
inc
insb
cmc
mov
popf
aad
cmp
insl
je
ret
jno
pusha
inc
and
push
sti
xchg
scas
jno
inc
push
mov
scas
dec
das
addl
mov
push
mov
xchg
fld
shr
push
stos
inc
fidivl
fwait
iret
mov
jl
in
mov
xchg
jno
mov
cli
ret
ja
xchg
imulb
mov
jl
jmp
pop
jne
pop
jno
add
push
ss
pop
es
push
fdivr
ret
push
testl
lods
into
push
daa
xchg
push
aaa
pop
ds
mov
cli
add
lods
fwait
leave
shrl
ss
std
adc
imulb
lods
fcoms
loop
xor
jne
div
xchg
sbb
jno
iret
adc
sub
sbb
xchg
fmuls
xchg
jecxz
and
sbbb
cli
mov
xor
add
add
imul
lods
mov
loope
jb
mov
push
jle
adc
cld
jns
fisttpll
imul
inc
or
cmpsb
inc
mov
pop
add
roll
dec
jae
cmp
movsl
jo
fstpt
mov
mov
cmpsb
into
or
pop
ss
mov
out
jbe
stos
sub
andb
daa
test
cmp
mov
and
mov
sub
mov
into
in
rolb
dec
mov
sti
cmpl
and
and
dec
push
sub
xchg
imul
popa
or
pop
jno
xor
cltd
and
jae
dec
loop
jmp
adc
and
into
mov
jmp
xor
lds
or
mov
lock
add
mov
cmp
les
inc
mov
test
mov
xor
pop
push
jmp
xor
cwtl
sar
sti
mov
cmc
pushf
outsb
test
and
xchg
push
loope
inc
sbb
fidivrl
sbb
daa
in
cltd
fldcw
push
aaa
push
ja
je
push
scas
or
scas
stos
or
jnp
imul
inc
inc
xchg
cwtl
and
aam
cmpl
mov
fbld
bound
fsubs
pop
push
iret
push
cmp
les
stos
clc
push
pop
lods
arpl
add
mov
pushf
add
iret
imul
add
pop
cmpsl
mov
add
pop
adc
out
mov
inc
in
mul
xor
xchg
dec
fldenv
cmp
ficompl
ficompl
cmpsb
test
ret
shll
std
inc
das
gs
fcomps
leave
call
jbe
xor
mov
es
imul
outsl
and
lock
xor
sbb
cmpl
sbb
adc
xor
cmp
pusha
fwait
push
pop
loopne
sub
xchg
inc
or
ljmp
and
scas
imul
pop
mov
pop
jae
mov
add
iret
and
sbb
mov
or
test
notb
pop
lahf
call
jle
arpl
add
pop
fbstp
cmp
rcl
popf
ret
aas
mov
pusha
lcall
outsl
push
mov
mov
mov
aaa
hlt
pop
adc
repz
ss
insb
int3
test
std
sub
jl
xor
iret
std
jae
xlat
scas
or
lock
arpl
shlb
dec
jecxz
adc
jne
sub
pop
sbb
sub
pop
and
push
add
mov
dec
jo
ds
out
jecxz
in
testb
test
loop
mov
jp
pop
in
jno
jmp
mov
cmp
mov
outsb
arpl
bound
push
stos
add
jae
stc
enter
bound
dec
ljmp
pop
testb
sbb
mov
stos
xchg
mov
mov
imul
stos
ds
loope
dec
jbe
xchg
xchg
and
stos
sbb
mov
sbb
fdivrp
cmp
jnp
int
les
sahf
pop
stc
mov
jecxz
cmpsb
inc
cld
insl
pop
repz
insl
xchg
dec
imul
insl
jl
pop
popf
les
mov
hlt
call
fistpll
fcoml
dec
push
xor
dec
mov
imul
or
pop
sbb
sub
inc
das
je
dec
jp
jne
xchg
xlat
jnp
shrl
testb
dec
xorps
fcmovb
aad
sbb
pop
scas
lret
adc
dec
popf
pop
outsl
cmp
mov
push
or
call
push
adc
push
mov
sbb
loopne
pushf
inc
movsl
sub
xlat
lahf
jns
sub
or
lods
loope
add
gs
dec
data16
dec
push
cmc
loope
or
aam
icebp
lret
xchg
xor
and
js
sub
inc
inc
cmp
fldl
jle
pop
imul
das
mov
adc
jge
sarb
push
xchg
dec
fdiv
add
jno
out
imul
pop
xchg
dec
mov
out
dec
mov
les
mov
shrb
cmp
jg
test
adc
mov
xchg
dec
xchg
mov
jg
pop
push
adc
stos
xchg
lds
aad
sbb
or
loop
lds
cltd
js
add
push
push
or
inc
ret
add
push
push
fistpll
xor
test
stos
cld
repnz
push
fmull
imul
jl
pop
rolb
fwait
mov
jne
fmuls
jno
iret
cmp
add
and
cmpsb
inc
push
and
ljmp
sub
ret
leave
in
lahf
adc
jne
pop
mov
jnp
mov
adc
pop
and
dec
jge
aad
pop
test
stos
jle
and
fldenv
lahf
fnstenv
xchg
imul
repz
xchg
ja
jne
test
dec
sahf
mov
inc
out
mov
sbb
adc
dec
push
mov
iret
add
loope
dec
push
mov
addr16
fistl
sti
jbe
lods
popa
je
sbb
iret
outsl
ret
enter
cmpsb
into
ljmp
mov
movsl
dec
jle
ficomps
jle
and
out
in
lods
sub
adc
outsl
inc
pusha
mov
call
inc
es
dec
outsl
xor
push
add
sub
dec
xor
out
add
ss
in
inc
pop
add
imul
cmc
int
cmpb
mov
xchg
mov
or
aad
lret
push
jmp
adc
mov
adc
add
jns
mov
das
jle
arpl
scas
aaa
push
xlat
push
push
or
mov
xchg
int
add
out
cs
add
push
dec
dec
popa
in
ret
jecxz
in
pop
aad
push
or
adc
sub
enter
lret
arpl
fisubl
sarl
push
mov
ret
mull
sub
mov
sbb
movl
xchg
stc
or
jne
push
ficoms
mov
cmc
lret
insl
out
push
mov
adc
test
mov
in
loop
mov
mov
push
fs
rcr
lahf
sbb
push
pop
dec
out
add
in
sbb
cmp
and
pop
dec
sbbl
sbb
mov
ss
pop
push
popf
or
into
int
leave
out
cmp
mov
pop
inc
rep
pop
pop
adc
or
cmp
ret
and
mov
dec
dec
fwait
push
dec
leave
sbb
out
pop
imul
addl
xchg
pushf
aam
lods
push
faddl
addr16
icebp
shll
andl
inc
into
dec
xchg
xor
jp
shll
mov
lcall
jb
gs
push
movsl
loopne
or
dec
shl
cltd
inc
lds
cmp
hlt
or
push
sbb
stos
or
add
out
sub
testl
daa
pop
lds
in
xchg
cld
or
stc
fimuls
bound
lret
insl
dec
adc
sbb
add
jno
les
sar
inc
test
mov
sar
in
pop
es
insl
enter
xchg
insb
push
dec
lods
add
or
mov
jl
xor
jmp
outsl
lret
clc
adc
aas
add
test
loop
je
push
in
sbb
add
outsb
in
adc
cmc
inc
fstl
push
mov
inc
andb
clc
aas
jmp
fdivs
inc
fstl
scas
sbb
notl
aam
jae
mov
call
mov
push
sbb
scas
addb
gs
sbb
cmp
add
in
loop
xchg
push
and
lret
xchg
leave
rorl
es
xlat
mov
bound
xchg
jne
call
in
adc
divb
cmc
notb
fwait
imul
push
cmp
shl
ja
mov
dec
mov
sub
mov
negb
mov
add
cmp
push
mov
pop
sahf
xlat
mov
addr16
push
adc
push
inc
sub
sahf
out
push
inc
in
xor
dec
ljmp
mov
test
inc
and
sbb
dec
fadds
dec
xchg
add
mov
xor
and
mov
jnp
jmp
inc
enter
add
std
push
in
mov
ds
sbb
lcall
mov
cmp
mov
mov
dec
lods
xchg
imul
dec
mov
add
mov
cmp
fwait
mov
repz
das
add
js
ds
sub
dec
mov
mov
cld
inc
jge
mov
popa
mov
stos
outsl
jp
inc
mov
js
adc
jno
ficompl
and
cld
addr16
xor
xor
nop
mov
das
jecxz
xchg
es
movsb
ret
cwtl
jmp
lods
adc
mov
imul
das
test
mov
push
in
insl
push
mov
ljmp
fs
push
mov
add
xor
xor
push
pop
stos
mov
test
dec
push
lret
mov
xor
movsb
call
mov
ss
enter
push
add
jg
out
sub
sahf
inc
xor
testb
adc
push
mov
sbb
daa
pop
lret
sbb
dec
pop
testb
in
xchg
roll
rcll
mov
cmp
stos
or
lret
push
movsb
cltd
in
sub
out
mov
into
sbb
jge
add
cli
es
jmp
scas
adc
pop
sbb
mov
mov
das
mov
fistpl
lods
into
mov
mov
out
enter
popf
lods
daa
je
insb
xchg
es
jl
notb
sub
jle
in
add
dec
mov
cmc
ret
int3
push
int
or
cwtl
dec
xlat
or
testb
inc
incl
sbbb
mov
jae
or
push
sbb
pop
xchg
push
xor
fldt
stc
push
inc
shl
add
bound
and
in
sub
and
add
dec
insb
pop
fbld
push
xor
in
hlt
xor
sub
pop
add
ljmp
jns
jne
xor
push
jl
push
mov
aas
dec
arpl
imul
mov
arpl
int
cmp
dec
push
cmc
xor
or
mov
cmpsl
jmp
dec
mov
pop
ljmp
dec
stos
sbb
popa
stos
or
push
and
fistpl
push
leave
jae
jecxz
jmp
dec
push
mov
add
push
cld
stc
sub
cwtl
jle
xchg
push
arpl
jb
jle
sub
cwtl
ss
in
gs
adc
push
cmpsb
mov
test
or
inc
sub
ds
add
icebp
or
mov
xchg
movsb
mov
mov
lea
test
xor
and
ror
test
test
nop
or
and
stc
lahf
pop
int
pop
gs
sbb
sti
enter
in
pop
cld
mov
sti
dec
jo
popf
add
cwtl
fidivrl
scas
out
or
push
test
frstor
fsubrl
pop
jbe
fistpl
je
push
mov
mov
inc
push
dec
mov
jp
pop
fmuls
cld
mov
add
sub
mov
outsb
lcall
leave
adc
sbb
mov
mov
add
xchg
pop
rol
pop
aam
inc
in
pushf
push
jb
dec
mov
fistpll
jno
ret
movsb
mov
lret
out
or
mov
inc
xor
inc
iret
js
ss
sub
int
aaa
inc
and
mov
mov
push
xchg
cmpsl
clc
mov
orl
shrb
or
adc
mov
fldt
fisttps
push
push
lret
ss
leave
enter
lods
cmp
mov
add
pop
pop
inc
out
je
mov
jb
xor
dec
jge
sbb
cmc
dec
push
aam
mov
popf
cmpsl
adc
arpl
adc
and
test
dec
mov
icebp
push
lret
out
jecxz
in
sahf
mov
lods
inc
adc
sti
lcall
clc
cmpsb
mov
ret
hlt
je
outsb
mov
mov
push
stc
pop
mov
xchg
pop
or
push
push
push
rcll
dec
jo
stos
stc
xlat
mov
fidivrs
xor
imul
divb
sbb
jp
lret
cmp
repz
mov
mov
xchg
cwtl
jl
aam
mov
push
mov
jne
xchg
in
int
and
lds
pop
ret
xchg
es
scas
cmpsl
xchg
movsb
jmp
add
fldl
lods
mov
movq
dec
shll
and
test
adc
pop
xlat
inc
imul
jno
insb
incl
lea
pop
lods
cs
sub
sbb
xor
pop
jns
repnz
mov
addr16
in
mov
sub
or
mov
daa
push
mov
jns
and
addr16
cmp
sbb
or
push
lods
xlat
popf
adc
jb
push
dec
dec
adc
xchg
or
inc
push
jg
out
pop
xchg
xchg
mov
stos
in
cmp
jmp
test
pop
dec
and
and
mov
out
mov
xchg
jnp
leave
pusha
xlat
stos
shrb
fcmovnu
icebp
push
jmp
test
orl
or
add
inc
sbb
mov
loopne
or
jns
stos
shr
out
mov
push
pop
shll
or
and
cmp
and
mov
jmp
lock
mov
push
das
in
lret
enter
xor
nop
mov
movsl
leave
xchg
addr16
addr16
xchg
cmpsl
adc
jbe
dec
pusha
inc
ds
lahf
sbb
out
frstor
xchg
pop
mov
movsb
gs
cmp
xor
in
mov
push
and
loop
jne
inc
cmpb
and
ficoms
cmp
mov
jae
and
daa
pop
or
gs
ret
xor
mov
mov
inc
add
mov
dec
adc
mov
scas
mov
out
andl
cmp
dec
inc
loopne
or
xchg
jp
pop
sbb
push
jecxz
in
iret
loopne
gs
xchg
lahf
sub
fcompl
outsl
dec
into
out
pop
pusha
cltd
outsb
out
pop
negb
or
aam
jno
aad
mov
add
sbb
pop
outsl
cmp
mov
repz
xchg
mov
sbb
pop
lds
sub
sbb
lret
mov
push
xor
jne
dec
shrl
xchg
cmp
adc
or
arpl
inc
es
adc
cwtl
adc
pop
xchg
adc
dec
push
scas
dec
inc
shll
loope
mov
cwtl
js
push
mov
leave
xchg
fcompl
add
sub
out
mov
pop
mov
sub
fdivrl
hlt
aad
jle
pop
daa
pop
ret
mov
add
roll
mov
ret
jmp
int
push
or
push
lds
stos
mov
in
jp
mov
in
or
loop
lret
pusha
push
mov
imul
icebp
pop
xor
jns
imul
and
push
mov
jecxz
sbb
and
add
jb
dec
sub
flds
inc
mov
clc
scas
mov
bound
push
out
dec
push
sbb
popa
or
dec
xor
shll
add
insl
sbb
mov
or
jb
pop
orl
scas
loope
pop
mov
sbb
leave
sub
sub
or
sahf
rolb
outsb
out
dec
nop
lfs
dec
pop
jg
cmp
cli
loopne
xchg
pop
inc
das
mov
testl
cli
testl
adc
fisubl
or
mov
jno
mov
pop
pop
push
ret
lock
push
add
inc
ds
mov
icebp
pop
or
xchg
dec
mov
lods
cmp
aad
add
movsb
or
jle
and
mov
jnp
mov
and
aaa
xchg
lea
outsl
xchg
rcl
pop
cli
inc
jbe
dec
jg
out
call
add
mov
mov
xchg
pop
aaa
pop
dec
inc
loop
jmp
ja
mov
outsl
addl
mov
xor
shll
sub
dec
xchg
cltd
stc
pop
aas
xorl
cmp
enter
aam
mov
push
cmc
int
addl
cwtl
cltd
xchg
xchg
xor
enter
xchg
push
push
je
movsb
add
mov
inc
test
sub
stos
mov
jne
lret
addl
push
pop
push
jp
xchg
in
mov
xchg
fsubl
sahf
cld
sti
mov
mov
sub
push
fmulp
and
sbb
movsl
clc
inc
test
or
ret
bound
hlt
movsl
mov
adc
jp
or
mov
jne
or
and
jb
lret
mov
pusha
xor
sahf
jp
divl
jno
cmc
add
gs
cmpsl
cmpsb
jmp
dec
js
call
into
clc
dec
lods
int
add
cmp
inc
int
mov
out
ret
stos
fs
and
inc
inc
pop
sub
and
loopne
dec
xchg
sbb
or
mov
and
sub
xchg
push
inc
repnz
pop
or
pop
jnp
js
push
sbb
sti
divl
aam
cwtl
int3
ljmp
adc
mov
movsl
push
adc
jle
rorb
int3
setbe
popf
data16
rol
repz
push
mov
outsb
cli
xchg
imul
push
or
test
xor
int
xchg
das
xchg
push
into
shrb
push
loopne
popa
nop
aad
rolb
rolb
cmpsl
jle
sbbl
jp
inc
jmp
pop
mov
pop
adc
pop
imul
pop
or
sarl
jo
cmc
push
mov
push
add
sbb
and
loop
arpl
push
out
and
nop
hlt
imul
cmp
cld
sub
jge
pop
js
mov
sbb
adcb
mov
fcoml
ret
fildll
aas
mov
in
int
lcall
ja
loop
mov
inc
add
int3
jmp
loop
xor
pusha
popf
or
add
mov
jl
gs
adc
mov
mov
and
repz
push
add
jo
lods
inc
stos
popf
cmpb
cmc
pop
cmp
testb
xor
lea
sti
mov
fistl
or
out
push
lcall
popf
out
scas
xor
outsl
fcoml
cwtl
push
loop
sub
div
xchg
addr16
fbstp
int
add
push
out
lret
out
xor
cmp
jne
loop
and
cltd
xchg
fisttpll
and
scas
push
in
arpl
cli
dec
or
xchg
in
lods
mov
cld
jecxz
clc
cmc
lods
stos
cmpsl
mov
mov
mov
imul
pop
stos
sub
push
movsb
in
shll
pop
add
inc
push
fiaddl
popf
jp
mov
mov
das
sub
fsts
ljmp
popf
xchg
in
pop
cmpsb
mov
iret
push
and
mov
leave
aam
pop
popa
dec
cmpsb
xchg
or
or
popa
push
xchg
fwait
sbb
push
xchg
sbb
xchg
shl
inc
dec
movsb
rorl
cmp
in
divl
jle
in
mov
fdivl
and
mov
sub
frstor
xchg
jl
test
inc
ret
add
jnp
cmp
mov
jmp
aaa
pop
push
or
pop
jb
push
xchg
pop
pop
fcoml
pop
stos
jg
in
shlb
jne
or
test
in
sti
adc
adc
cld
xchg
pop
lret
and
icebp
cmpsl
push
stos
add
xlat
xorb
data16
pop
xlat
stc
inc
lods
mov
push
sub
cmpsl
insb
insb
and
xchg
mov
test
add
jmp
mov
pop
pop
mov
jl
sub
xor
adc
add
cmp
fistpl
insb
mov
clc
xchg
push
mov
mov
sbb
push
mov
mov
push
push
data16
jl
dec
or
cmpsl
sbb
aas
sub
push
sbb
ss
inc
jb
mov
fbld
lock
daa
mov
shl
push
xchg
mov
inc
jmp
cs
arpl
gs
test
or
sbb
jae
mov
in
push
dec
xor
jno
mov
or
mov
je
out
rorl
cs
pop
inc
imul
lock
lret
inc
lahf
shll
pop
insl
js
mov
jns
mov
xor
xchg
and
or
and
cwtl
rclb
sub
mull
int3
mov
push
sub
dec
jmp
pop
gs
lea
add
pop
push
loop
aaa
pop
in
pop
jmp
cmp
jle
cmp
adc
scas
cmpsb
enter
in
das
hlt
sub
pushf
push
or
inc
in
mov
outsb
aas
dec
or
pop
push
add
loop
pop
adc
icebp
and
xor
inc
cmp
inc
in
in
aaa
enter
dec
fsubr
pop
or
hlt
std
inc
pop
pop
movsb
cld
pop
iret
lret
ret
or
rolb
mov
in
int
fidivl
sub
mov
xchg
out
or
in
stc
cmp
xchg
and
xchg
or
pop
dec
ffreep
pop
mov
js
push
mov
decb
lods
add
int
dec
mov
jmp
push
decl
jecxz
jns
fmull
cli
stos
shlb
fdiv
jne
data16
repz
fsubp
jae
mov
or
mov
push
or
jbe
and
outsb
push
test
bound
sbb
repnz
xchg
rcll
repz
push
ds
shr
ret
insb
push
pushf
hlt
xchg
fcoms
jo
or
xchg
pop
jmp
mov
cmpsb
adc
or
xchg
pop
dec
aam
xor
and
sar
iret
add
cs
pop
inc
push
mov
cmp
mov
push
lret
mov
stos
cmc
push
dec
mov
mov
dec
mov
xlat
imul
push
mov
nop
lods
fdivr
inc
in
pop
cli
aaa
dec
leave
or
inc
fidivl
xor
push
mov
jmp
ret
ja
in
mov
in
in
rcll
bound
int3
xorb
das
sti
je
sub
aas
lahf
dec
scas
lods
sbbl
cmp
and
inc
push
adc
sbb
leave
sbb
rcrb
and
pop
xor
pop
sub
add
inc
or
inc
int
inc
jl
mov
jns
dec
mov
sub
popa
xchg
in
sbb
adc
aad
jb
popa
cmp
xor
adc
xlat
push
dec
mov
mov
js
push
jns
nop
das
push
xor
idivb
call
icebp
dec
adcb
xchg
and
jno
ret
out
cmc
int3
jmp
xor
insl
sbb
in
orl
sub
les
add
push
shlb
push
cmp
in
jb
fdivr
add
xor
and
cmpsb
lret
push
xchg
arpl
mov
mov
xlat
mov
add
stos
hlt
in
pop
mov
negb
orb
sbb
aas
push
lods
ds
push
stos
mov
push
mov
dec
dec
out
repnz
fcomps
mov
lds
jmp
add
push
ljmp
repnz
pushf
xor
push
adc
dec
mov
xchg
xchg
pop
fistpl
les
in
mov
ret
add
sbb
jge
les
loop
loopne
jo
inc
sub
xchg
cmp
addb
mov
lret
jb
add
imul
lahf
ss
xchg
adc
paddw
orb
add
daa
mov
or
icebp
xor
outsb
in
xchg
stos
mov
mov
sahf
outsl
popa
push
out
mov
insb
mov
das
mov
loop
outsb
mov
shrb
adc
pop
jl
les
movsb
andl
push
mov
ja
cmp
xor
fimuls
fisttps
pop
popa
add
cltd
insl
jo
mov
sbb
push
into
push
icebp
lds
jnp
mov
std
or
sarb
mov
jp
and
mov
jle
or
and
popf
jl
inc
and
fstpl
out
loope
jbe
sarb
mov
jno
cmp
aas
lods
xor
dec
or
adc
fmulp
dec
inc
inc
push
out
inc
inc
iret
fnsave
push
cltd
out
loopne
mov
sbb
pop
push
cmpsb
push
or
lret
stos
daa
push
push
push
add
push
jl
inc
loopne
adc
mov
cmp
imul
popf
push
fbstp
dec
mov
stos
int
push
test
cli
sub
push
imul
cmp
add
pop
call
adc
inc
enter
mov
fsubl
hlt
cs
call
fmuls
pop
mov
fldcw
loope
cmpsb
add
in
lods
andb
cmc
inc
in
mov
fwait
cld
in
mov
push
pop
pop
aas
dec
cmpsl
ret
cmpsb
xor
dec
mov
dec
aad
mov
incl
pop
jp
xchg
mov
sbb
fidivrs
push
addl
or
push
int
jp
jb
jecxz
jb
sarb
sub
lret
jge
fsubrl
mov
lret
nop
dec
pop
sbb
jl
mov
loopne
sub
push
pop
add
xor
loope
aas
jg
aas
jo
sarl
xor
ljmp
and
into
xchg
sahf
adc
ljmp
pusha
inc
in
xlat
outsb
jne
loop
loop
cmpsl
fisubrl
out
cmpb
jne
out
inc
pop
addr16
mov
push
mov
cmp
and
stc
out
aam
lods
aad
xor
loope
das
pop
je
hlt
addr16
pop
iret
cmp
mov
mov
jns
daa
inc
imul
adc
jp
dec
xchg
mov
mov
jne
andb
rcrb
outsb
add
jge
ds
dec
jg
mov
add
or
push
jnp
dec
mov
or
lret
dec
js
stc
in
std
in
sub
add
sahf
xor
nop
rorl
mov
add
je
mov
mov
loopne
inc
fs
xchg
insl
adc
pop
sbb
daa
cmc
out
mov
shr
push
fmul
xchg
jmp
daa
cli
sub
lea
push
push
inc
out
inc
popf
pop
sbb
leave
pop
cmp
shll
sbb
inc
mov
mov
push
orb
or
jmp
xchg
xchg
adc
dec
ljmp
aam
xchg
dec
mov
or
jle
jnp
inc
jecxz
fs
ror
sub
cli
mov
in
mov
cmc
push
sbb
add
clc
mov
fsts
je
and
mov
adc
sbb
push
adc
loopne
mov
adc
jo
adc
movsb
out
add
mov
rcll
pop
fsts
jg
pop
dec
jecxz
dec
outsb
sahf
or
in
out
mov
test
daa
sub
lock
dec
imul
stos
mov
ja
popf
xchg
pop
adc
cld
add
mov
sarb
push
xchg
sbb
sub
subl
scas
gs
mov
xor
xor
jno
xchg
cld
arpl
push
fdivl
sbb
ficompl
sbb
mov
js
jmp
mov
loope
frstor
xchg
push
hlt
jle
std
in
pusha
cmpsb
inc
lods
mov
pop
xchg
sbb
fstps
pop
icebp
pop
ja
inc
xor
xchg
mov
icebp
xchg
jbe
out
fwait
mov
aam
test
mov
mov
add
int3
jnp
jns
cmpsb
jno
cltd
lahf
push
xlat
mov
add
mov
push
push
fnstcw
sub
jmp
int
movaps
sub
ret
jne
mov
pop
das
int
nop
incl
xor
movsb
add
fstps
mov
lret
mov
pushf
mov
outsb
clc
push
cs
cmpsb
cmp
and
cmpsl
sbb
mov
mov
jg
push
pop
add
push
mov
push
bound
lcall
ds
lret
xchg
mov
dec
test
sbb
mov
xor
shll
aaa
bound
mov
push
and
jge
mov
repz
mov
movsl
stos
lcall
sbb
shrb
jnp
movsl
cli
jnp
cmc
cmpsb
dec
fmull
nop
xor
push
enter
add
cmp
jno
bound
daa
scas
jmp
enter
mov
into
and
js
pop
sbbb
leave
insw
or
fstl
into
adc
jg
insb
pop
out
pop
jg
loop
xor
ja
jnp
sbb
pop
xchg
scas
push
psubb
subl
xor
push
sub
inc
shl
xchg
mov
push
lds
push
mov
dec
sub
xchg
mov
pop
adc
cli
rorb
lods
and
decb
ret
test
inc
add
xor
xor
xor
mov
sub
push
xor
mov
jge
dec
stos
sub
aaa
out
add
pop
pop
pushl
push
push
adc
pushf
psubsb
stos
popa
test
sahf
jno
sar
jecxz
mov
lods
sub
sub
nop
outsl
fistpl
adcb
adcb
into
dec
add
sarb
roll
fldl
pop
into
ret
xchg
inc
mov
lods
es
push
mov
sub
mov
or
xchg
cmc
sbb
outsb
sbb
jge
out
addw
dec
imul
add
lret
sbb
xchg
push
cmp
lods
test
popf
enter
lret
cmp
test
mov
lods
push
pop
dec
sahf
out
inc
sbb
mov
enter
or
pop
xchg
cmp
ds
mov
aam
jg
add
int
xchg
pushf
test
xor
scas
pushf
and
in
push
fnstcw
adc
mov
loopne
lcall
push
rcrb
js
sub
mov
inc
pushf
jo
add
fs
rorb
jns
pop
or
cmovge
jmp
dec
and
call
pop
outsl
jno
sarb
outsl
lret
sbb
inc
jp
out
sti
push
psrld
xchg
test
mov
shlb
jmp
inc
jno
in
lods
into
xchg
mov
lds
pop
mov
jle
cmp
inc
mov
mov
mov
scas
in
jmp
jb
pop
cmp
in
ja
lock
xchg
push
add
lds
popa
inc
out
lock
addb
cltd
imul
xor
or
dec
jl
ja
sub
xchg
inc
ds
cs
jbe
push
push
movl
inc
pop
xchg
ficompl
pop
fldcw
adc
mov
stos
adc
sbbb
push
loope
aad
sub
jne
sbb
xor
out
xchg
lock
mov
lods
jae
adc
ljmp
ret
addr16
cmp
push
scas
cmp
out
inc
xor
hlt
loope
std
dec
xor
loopne
mov
inc
pop
and
jb
mov
mov
push
out
mov
xor
call
loope
xor
and
stos
ja
es
xor
fsin
xor
pop
scas
out
push
popa
je
lahf
lcall
out
xchg
push
rol
mov
xchg
ss
mov
xor
sbb
xor
jge
jne
inc
xor
cld
jle
mov
xchg
and
test
xchg
dec
sbb
outsb
fcomip
rolb
inc
cli
pop
pop
std
js
out
icebp
ss
jmp
stos
aam
xor
dec
out
jp
cli
inc
jno
mov
enter
mov
shrb
jae
cs
repz
cmp
adc
cltd
push
inc
mov
mov
add
movsl
lea
sbb
ja
fldenv
loope,pn
scas
pop
enter
adc
jg
jb
sahf
lahf
dec
scas
add
fbld
xchg
pop
ds
lock
xchg
adc
jne
sub
test
jns
sbbl
stos
sub
jnp
ret
push
push
js
jb
popf
enter
push
dec
leave
and
push
divb
mov
in
pop
aam
gs
fldl
sbbl
pop
mov
adc
shlb
dec
out
mov
mov
les
mov
or
xor
rorb
cmp
sbb
add
jbe
scas
mov
sbb
xor
push
addr16
dec
out
jge
xchg
out
mov
int3
js
mov
cmp
xor
sbb
in
in
shr
xor
aad
rep
jmp
aaa
adc
dec
nop
xor
das
push
fwait
mov
fildl
lcall
aas
and
mov
bound
adc
push
out
or
sub
cmp
pop
jecxz
rcrl
sub
popa
cld
mov
mov
sbb
shlb
xchg
jge
stos
inc
loope
jge
hlt
or
cmp
aaa
sub
push
pop
jnp
scas
push
rcr
stos
mov
lea
fisubs
lret
out
ss
rclb
icebp
push
lcall
dec
push
cmp
in
pop
bnd
ljmp
hlt
adc
push
adc
lret
xchg
cmp
mov
cmp
mov
jmp
lds
hlt
push
sarb
push
out
ss
gs
ret
dec
push
add
daa
ret
adc
push
repnz
mov
mov
sub
rorb
push
aad
clc
loopne
xchg
sub
mov
lea
cmpsb
jne
into
cmp
pop
stos
inc
popf
inc
cmp
pop
mov
sbb
push
js
das
cmp
or
or
sbb
shlb
add
mov
adc
mov
push
cmp
sahf
dec
rorl
mov
icebp
push
dec
sub
pusha
cltd
mov
lahf
loope
test
fwait
adc
test
int3
and
xchg
adc
arpl
daa
orl
aaa
and
sbb
fsubrl
sub
mov
pop
pushf
jl
xor
jnp
cmpsl
inc
mov
sbb
cltd
push
and
in
inc
sub
and
dec
scas
std
shll
fmull
pop
in
cld
loopne
lds
sbb
pushf
aad
clc
push
test
cmpsl
mov
xchg
cmp
xlat
jnp
lcall
dec
jl
xor
sub
out
popl
jae
es
mov
and
inc
sub
aas
xor
push
pop
cmp
divl
push
dec
out
cmp
pop
jecxz,pn
xlat
mov
mov
dec
jbe
outsl
in
pop
adc
ss
jmp
pop
xchg
call
mov
cmp
ljmp
xor
jecxz
shrb
or
push
xchg
push
jne
sbb
aaa
mov
mov
push
inc
jbe
inc
es
sti
stos
pop
cmp
push
dec
testb
mov
jecxz
repnz
push
push
ret
das
mov
jne
bound
rol
subl
scas
lahf
inc
mov
and
icebp
lods
mov
scas
mov
jns
push
sub
inc
gs
movsl
loope
and
mov
aad
mov
jnp
xchg
mov
popa
inc
cmp
inc
add
nop
insb
stos
sub
in
pop
sbb
jmp
mov
sub
xor
push
rcr
pop
xor
sbb
ljmp
enter
fnstcw
and
jecxz
test
mov
arpl
lret
lret
inc
icebp
xchg
mov
sbb
addr16
int
push
pop
sub
sbb
stos
add
sub
imul
and
sbb
jnp
test
loop
shrb
sbb
popa
fwait
out
dec
out
xlat
pop
repz
repnz
mov
ror
xlat
xlat
and
jne
mov
add
mov
push
shrl
arpl
push
jp
fwait
cmp
in
test
testb
stos
adc
aaa
mov
sub
cmp
lret
push
inc
mov
jns
outsb
xor
or
cli
in
cmp
lock
pop
push
stos
xchg
push
hlt
and
and
addr16
dec
stos
enter
jb
cmp
dec
lods
cmp
xorb
add
sub
pop
sub
push
fisubrs
mov
pop
mov
hlt
jle
nop
arpl
mov
dec
lods
push
out
jmp
out
daa
dec
cmpsb
iret
inc
lcall
and
mov
rcll
dec
stc
hlt
enter
in
cwtl
cmp
xchg
mov
enter
fldcw
ljmp
imul
ret
push
xor
subb
inc
jge
xor
pop
mov
negb
cmp
in
xor
adc
mov
xchg
bswap
add
in
in
pop
dec
push
push
dec
xchg
iret
and
sbb
jl
mov
dec
out
daa
pop
pop
shlb
sahf
mov
cmp
sti
fnstcw
or
sti
test
inc
bswap
adc
pop
movsl
je
and
lahf
pop
aad
push
sbb
jb
sti
cwtl
sbbb
int
mov
add
ja
arpl
mov
mov
in
sbb
fiadds
dec
cltd
add
cmp
pop
mov
inc
mov
outsl
mov
in
stos
and
xchg
in
fsubr
add
adc
popa
out
sub
xlat
outsl
testb
xchg
jg
cmc
lret
push
mov
scas
shll
mov
aas
scas
in
bound
and
shrb
mov
inc
adc
add
inc
push
mov
jmp
lods
adc
push
cs
xor
ss
inc
cli
mov
stos
test
shrl
mov
fidivrs
lret
insb
loope
incb
xor
sbb
xchg
clc
inc
lods
or
outsl
inc
or
fistps
jne
pop
mov
int
push
pop
push
inc
rcr
fstpt
xchg
xchg
movsl
rcll
repnz
xchg
jle
jge
cmpsb
leave
sub
adc
jge
lods
xor
pop
mov
xchg
mov
fadds
orl
ljmp
hlt
mov
popa
push
scas
sbb
dec
xchg
or
push
inc
pop
mov
jle
jp
in
dec
adc
sub
push
shlb
cli
rolb
sub
addr16
pop
sti
enter
test
or
rcrb
out
stc
insb
lcall
or
ds
popa
fisubrl
jbe
cmpsb
out
push
fadd
aaa
pop
adc
or
ljmp
cmp
int3
mov
sub
movsl
dec
test
cmpsb
das
lods
sub
loopne
jmp
pushf
out
push
data16
pop
xchg
out
imulb
mov
pop
jp
push
xor
adc
and
movsb
aas
mov
mov
mov
xchg
nop
ret
adcb
popa
daa
les
mov
stos
loop
lods
hlt
mov
lods
mov
adc
xchg
cltd
fnstcw
ds
mov
daa
punpckhdq
pop
test
insb
cmp
mov
hlt
dec
jb
je
hlt
or
gs
add
cvtps2pd
pop
inc
ret
arpl
outsb
dec
out
inc
ds
xor
ja
movsb
and
mov
das
xchg
movl
xorb
cmpsb
inc
mov
movsb
adc
mov
ret
xchg
inc
xchg
cmpsb
lea
push
cli
inc
jmp
cwtl
shrb
dec
adc
jbe
ljmp
adc
pop
lods
inc
cli
sbb
jns
dec
in
xlat
xor
ret
andl
in
cmp
lods
test
xchg
sub
daa
dec
jmp
adc
xor
jae
or
mov
push
ss
gs
inc
push
data16
sub
addr16
loop
aam
in
or
loop
sub
jnp
pushf
sbb
outsb
les
lahf
xor
lahf
hlt
popa
push
mov
std
push
gs
out
xor
xor
mov
jecxz
sbb
ret
data16
jae
lods
sbb
out
stos
mov
or
std
scas
mov
and
aaa
inc
shll
shr
mov
jmp
and
ds
or
adc
dec
add
mulb
mov
pop
sub
add
sahf
popf
dec
repnz
aad
int3
cs
mov
adc
ret
jnp
outsl
shlb
or
pop
mov
add
hlt
ficomps
lahf
sti
mov
mov
jecxz
inc
jg
scas
outsl
mov
mov
mov
insb
pop
jg
out
repz
pusha
cmp
add
flds
or
push
add
es
jne
mov
cld
jbe
stc
sbb
out
sub
loop
xchg
mov
pop
idivl
inc
popa
sub
push
retw
add
test
jl
ds
mov
mov
add
shlb
faddl
test
inc
xor
dec
mov
adc
aas
mov
outsl
jg
sub
mov
push
mov
test
sbb
es
mov
mov
lahf
loope
repz
shrb
stos
lea
mov
popl
shlb
in
dec
into
ret
mov
sahf
aad
mov
cli
stos
outsb
lods
xchg
cmovbe
daa
mov
rolb
sub
dec
lahf
pop
repz
cltd
int
adc
xor
jl
pop
insl
mov
cmp
cmpb
es
sarl
cmc
iret
ret
mov
push
in
in
add
cs
xchg
cmp
mov
aas
mov
xchg
mov
xor
mov
push
outsb
xchg
sub
add
inc
ret
lods
sub
push
mull
test
incl
shll
jns
mov
adc
arpl
mov
ds
xchg
cmp
jo
pop
push
jns
xor
fnsave
ret
outsl
pop
xchg
sbb
cmp
sub
sahf
cmp
cmp
repz
ljmp
int
out
mov
stc
jo
movsb
and
int3
push
icebp
pop
shrl
sub
inc
loope
adc
add
lods
mov
cld
mov
loop
arpl
xchg
out
add
call
sub
sbb
pushl
rorl
inc
je
sub
mov
lea
cmp
mov
dec
or
push
xchg
push
cmc
mov
call
mov
icebp
cmp
fstl
lock
pop
mov
sbb
idivb
xor
jle
mov
mov
pop
std
xchg
dec
inc
jo
xor
jo
and
ja
stos
rolb
popa
outsb
lea
addb
or
sbb
popf
in
add
stc
or
rcrl
daa
movsl
loope
stos
push
lods
fbld
mov
cwtl
scas
je
dec
cmpb
xor
lea
and
xchg
jmpw
mov
dec
mov
xchg
sahf
xchg
jp
cwtl
add
fdivs
mov
scas
and
outsb
mov
mov
mov
cs
cmp
out
mov
fpatan
jb
or
and
jge
stc
cmp
add
mov
in
cmp
popf
int3
shrl
adc
pop
dec
fwait
xor
xchg
cmpsb
or
fiaddl
stos
sub
xor
dec
add
insl
call
in
ljmp
rorl
loope
sbb
dec
cmp
in
hlt
sub
dec
or
or
ret
pop
sub
data16
dec
shlb
out
in
pop
mov
dec
js
sub
into
imul
mov
int
mov
pop
fnstenv
aas
push
xor
fwait
jne
je
pop
jp
loopne
loopne
lcall
testb
jnp
lahf
mov
sti
fwait
mov
push
add
bound
adc
or
shll
sahf
sub
and
mov
sahf
cmp
push
fs
clc
pop
mov
inc
inc
inc
jns
inc
mov
imul
inc
test
fisttpl
pusha
mov
jmp
mov
cmp
sbb
stc
jbe
inc
push
push
out
ret
and
push
dec
imul
enter
imul
or
lret
xchg
mov
and
in
sub
jmp
sub
frstor
dec
sbb
jnp
cmp
dec
bound
cmp
inc
jb
cwtl
mov
dec
add
repz
pop
aad
roll
out
mov
rorb
sbb
mov
ss
push
je
cmp
pop
or
push
fists
adc
inc
pop
push
pop
cmpsb
idiv
and
mov
popl
or
andl
mov
daa
in
xchg
mov
loopne
enter
cmp
cld
test
mov
xchg
xchg
pop
aad
and
outsb
xor
mov
imul
xchg
dec
or
cmp
push
xchg
orl
adc
hlt
imul
xorb
xchg
out
icebp
mov
mov
inc
iret
push
sub
cmc
aaa
outsb
xlat
jle
gs
xchg
stos
cmpsb
out
jg
je
ficomps
ret
mov
mov
ljmp
movsl
inc
sti
sarl
xor
orb
mov
cmp
or
push
jmp
pop
sbb
pop
lods
aaa
out
mov
or
pop
jb
into
adcl
or
fstpt
jmp
pusha
out
jmp
repnz
movsl
inc
sub
push
push
fmuls
sbb
add
cld
and
insb
rcll
and
pop
xor
roll
and
lods
pop
adc
add
test
sbb
out
mov
cmp
cmp
or
mov
pop
movsb
gs
outsl
insb
jnp
xor
adc
mov
inc
xchg
push
mov
inc
sti
xchg
mov
xchg
xorl
mov
inc
test
push
jne
xor
ljmp
int
sarb
data16
bound
or
outsl
inc
iret
xor
mov
dec
push
lea
jecxz
jb
mov
mov
mov
cmpsb
lea
mov
jp
sbb
sub
lea
outsb
xchg
mov
scas
in
subl
or
lds
push
xor
sysenter
lret
ret
or
shrl
in
sub
mov
jb
mov
jns
call
test
test
rcrb
bound
inc
aad
arpl
xchg
xorl
cmc
sbb
sub
andb
mov
dec
sbb
scas
dec
xor
cs
mov
xchg
jbe
lcall
mov
scas
mov
inc
loop
pop
mov
mov
negb
dec
or
lods
pushf
test
and
enter
mov
fnstenv
add
sbb
adc
ret
xchg
repnz
mov
mov
icebp
adc
sub
push
xchg
push
dec
test
jmp
jg
mov
out
andl
xchg
or
andl
lods
ja
xchg
inc
pop
mov
push
fs
lods
scas
js
ret
fstpl
pushf
aas
je
jbe
test
imul
popa
sahf
lret
mov
pusha
lret
hlt
aad
aad
inc
arpl
add
enter
arpl
ljmp
out
add
addr16
adc
xchg
movsl
popf
cmpsl
inc
mov
push
dec
push
cvtpi2ps
xor
or
mov
pop
xchg
or
dec
push
cmp
xchg
sub
lods
dec
fildl
pop
test
add
data16
in
push
mov
pop
xlat
add
sub
and
sub
dec
inc
insb
adc
arpl
or
movsb
mov
das
arpl
ret
jl
xchg
cmpsb
rcr
push
enter
pop
push
mov
movsl
cwtl
xchg
lds
ret
pushf
mov
aam
aas
imul
loope
xor
aad
dec
mov
xor
or
lds
int
adc
mov
insb
aam
aas
xor
icebp
in
cmpsb
mov
xor
stos
std
add
mov
ja
test
jle
sahf
mov
inc
jmp
pop
jno
cmp
stos
lock
lea
dec
sub
inc
jp
pop
mov
sbb
inc
ficoms
add
test
dec
test
pushf
out
push
jl
pop
and
testl
outsb
cmp
mov
popa
addr16
cmovne
push
push
xchg
iret
pop
mov
in
lea
imull
outsb
mov
sub
jns
scas
mov
out
xchg
rcll
push
jnp
scas
add
jns
push
mov
push
loope
and
cwtl
jmp
stos
fldt
adc
inc
cmp
out
cmpsl
pop
jge
sti
jp
xor
imul
mov
sbb
lock
mov
clc
fisubl
cmpl
lods
adc
out
out
cmc
jg
sti
scas
add
xchg
mov
adc
push
fisubrl
sbb
aaa
push
pop
in
mov
les
leave
jl,pt
or
or
push
xchg
repnz
in
stos
jae
cwtl
repnz
fists
cld
rolb
popa
xchg
aad
xor
in
jp
pop
insb
cmp
sub
enter
orb
sub
mov
add
in
jge
fs
xchg
and
gs
shr
sti
push
pop
mov
cmp
push
jo
and
call
dec
mov
gs
sbb
adc
xor
fs
in
out
fists
adc
fldcw
pop
andl
push
dec
jns
stos
mov
xlat
xor
add
lds
xchg
push
jge
hlt
adcl
push
lock
in
outsb
dec
scas
mov
call
xor
scas
cmp
inc
or
int
push
dec
cli
cmc
out
xor
mov
rcll
cld
frstor
mov
pop
test
cwtl
inc
and
or
setge
pusha
pop
pushf
in
jg
sti
call
loop
out
and
pop
cs
mov
sub
ds
add
push
out
dec
jp
mov
repz
adc
dec
enter
rcr
push
rol
jnp
icebp
loop
jmp
into
or
hlt
mov
cs
cmpsl
ds
addl
fdivp
cmp
sbb
pop
imulb
mov
adc
push
push
dec
push
sub
mov
or
mov
test
cmp
pop
xchg
sbb
xor
ss
mov
faddl
push
push
pop
leave
iret
mov
add
xchg
pop
out
dec
and
lea
sarb
test
hlt
mov
into
or
jo
push
bound
cs
imul
mov
out
loope
lahf
jge
lcall
dec
aad
and
ret
sti
pop
popa
jb
lcall
nop
sub
adc
jge
adc
aas
push
ret
or
cmp
dec
mov
int3
inc
rol
or
dec
push
imul
inc
cmc
add
test
mov
pop
fidivl
test
divl
enter
inc
xchg
pop
fwait
push
sbb
dec
movsl
cmp
add
sbb
pop
aad
in
lcall
aad
dec
lods
push
jecxz
push
into
loope
lods
lds
dec
jae
mov
repnz
dec
xchg
clc
aaa
fildll
xchg
sahf
popa
ret
push
roll
dec
rcrb
out
scas
dec
cwtl
shrl
cmc
les
call
pop
and
mov
cld
xchg
cltd
lods
js
push
sub
sbb
je
ret
sarb
ljmp
lods
mov
sbb
sub
push
fisubl
test
adc
mov
cmp
push
fcmovne
push
cmpsb
adc
or
imul
popf
fs
mov
clc
popa
cmp
add
push
add
pop
sub
add
jns
mov
sub
mov
sub
ljmp
in
adc
leave
jle
mov
fwait
sbb
dec
mov
sarl
ss
push
out
scas
in
hlt
xchg
scas
repz
lds
sub
and
sbb
and
test
ljmp
mov
xor
cmc
xlat
mov
push
inc
fistps
xor
pop
cltd
mov
sub
cmp
stos
jbe
aaa
fsub
call
cmp
imul
push
mov
mov
dec
out
ffreep
adc
fisubl
in
movsl
xchg
rcr
and
push
sub
prefetchnta
test
pop
pushf
insb
xchg
pusha
dec
cld
shlb
or
movsl
pop
cli
and
cmpsb
lods
or
test
ftst
push
lock
into
xorl
cmp
mov
sbb
push
mov
imul
aad
in
in
jl
cmp
push
hlt
pop
mov
add
xlat
lods
popa
call
inc
xor
fwait
lcall
addr16
fsubs
cwtl
scas
adc
add
pop
mov
testl
jbe
xchg
loop
sti
outsl
ret
jne
or
call
ljmp
insl
fisttps
dec
mov
fs
mov
movb
std
hlt
or
adc
sbb
jge
sub
add
mov
or
dec
repz
inc
inc
fidivrs
mov
shl
outsb
sbb
movsb
out
or
pop
mov
xlat
pop
call
scas
hlt
sbb
dec
test
add
dec
ret
dec
sbb
out
or
lret
cs
and
jge
cmp
xor
lea
fcmovnu
testb
pop
push
fs
or
lods
pop
and
outsl
insb
dec
wbinvd
lock
xor
adc
cmp
scas
test
or
jb
int3
cmpsl
shl
sti
jns
mov
mov
pop
cmp
xchg
lahf
xchg
sbb
xor
sbb
mov
ss
cmpb
jg
sub
cmp
cli
nop
cmpsl
pop
push
stos
js
mov
push
std
sti
scas
mov
dec
es
idivb
add
jl
in
push
lods
pop
mov
fldl
addr16
repz
jno
push
cwtl
push
or
sahf
int
mov
cwtl
adc
sar
add
test
mov
mov
dec
push
mov
out
xchg
add
jnp
dec
push
lea
cmc
xchg
ljmp
fisttps
out
add
ret
and
sahf
notl
enter
out
aaa
mov
dec
int
xchg
fsts
xchg
adc
cmp
out
fs
mov
test
cmp
int
sbb
add
insl
sub
dec
mov
mov
pop
and
std
pusha
inc
mov
std
std
sub
outsb
lea
outsb
and
sub
adc
mov
fildl
inc
xchg
clc
sub
into
inc
sub
push
mov
add
loopne
in
std
in
jge
inc
aas
sbb
fidivl
lret
cmp
data16
rep
push
cmp
cltd
xor
dec
xor
inc
aad
jmp
test
pop
mov
push
gs
sbb
fcoms
mov
xchg
xor
dec
fs
aam
sub
loop
sub
inc
ds
or
pop
jns
pop
xlat
sbb
add
pop
cmp
ds
sbb
or
ret
shl
lahf
xchg
lods
inc
test
mov
in
sub
sbb
xor
jne
fcomip
gs
fs
mov
movsb
xchg
fmuls
push
mov
dec
pop
xor
cmc
enter
fcomp
pop
xor
enter
lods
pop
out
stos
and
test
stos
mov
negl
add
push
jns
cmp
push
push
push
fidivs
jmp
sbb
cld
mov
push
or
mov
daa
cmp
jae
addl
pop
jl
mov
pop
sahf
push
aas
xor
jle
mov
call
movsb
mov
xor
and
xchg
out
inc
ret
dec
and
loopne
test
sub
adc
jg
push
lcall
in
inc
pop
xchg
outsl
ss
cs
es
pop
test
push
adc
testl
shlb
push
xchg
fwait
or
push
jp
popa
push
xor
mov
mov
mov
repz
pop
in
ljmp
jbe
mov
adc
jno
daa
push
xor
out
pop
fcompl
arpl
sub
add
js
jmp
cmp
lea
mov
dec
mov
sub
ret
aam
addr16
push
hlt
mov
cmpb
bound
jle
in
push
in
arpl
sbb
mov
mov
js
sbb
xlat
lcall
ret
test
add
jle
inc
ljmp
push
ss
push
repz
pop
fwait
loopne
jge
mov
fildll
outsb
sti
ret
lea
xlat
cs
mov
add
or
push
add
out
movsl
ljmp
lea
xor
rorb
pop
nop
pushf
stc
lea
dec
adc
sub
cmpsl
xor
loop
pop
adc
dec
outsb
jne
ja
mov
xchg
es
out
sbb
push
xchg
shrb
inc
inc
outsl
lea
dec
imul
loope
pop
pop
ja
push
fsubl
inc
out
jns
cmp
or
jecxz
xchg
popa
repnz
and
in
stos
xor
or
fdiv
mov
mov
scas
cmp
push
pop
cmp
jno
dec
lcall
jo
push
sub
dec
bound
mov
out
stc
or
enter
mov
xor
cmp
fsub
inc
lds
xchg
xor
dec
add
or
subl
stos
insb
mov
addr16
add
fisttpl
pop
data16
mov
add
test
push
ja
mov
push
ljmp
add
lret
jle
or
loope
push
adc
cli
mov
sub
push
lahf
jl
adc
repnz
jge
add
push
xor
push
mov
and
ret
adc
mov
jno
mov
mov
mov
frstor
movsb
jle
iret
or
mov
leave
sub
aad
add
test
and
jg
sub
out
in
insl
sarl
push
out
push
sub
pop
pop
mov
scas
inc
sub
mov
xchg
movsl
aas
div
mov
cmp
mov
push
outsb
xor
notb
inc
fstpt
mov
cwtl
xchg
ja
or
xchg
pop
insl
dec
mov
ss
imul
push
dec
out
lret
and
xchg
mov
adc
push
mov
cmc
cs
sub
iret
xchg
mov
imul
and
adc
enter
fwait
aam
dec
or
bound
lret
dec
call
icebp
ljmp
movsl
lea
push
daa
sbb
sbb
sub
in
repz
or
out
jl
sbb
mov
imul
lret
sbb
cmp
push
ja
mov
cmp
fiaddl
iret
call
adc
and
imul
or
jb
push
or
insl
lock
mov
pop
lds
imul
arpl
jp
je
outsl
lods
cmp
mov
sbbl
and
fs
mov
aad
lret
shrb
jge
rcrb
notb
outsb
and
sti
push
dec
adc
repnz
or
jle
sbb
nop
mov
rolb
test
addl
or
idiv
push
cmp
lcall
inc
dec
adc
popa
mov
mov
inc
ret
sub
xchg
aas
repnz
pusha
jo
fisttpl
xor
push
cwtl
xor
nop
mov
lods
in
mov
mov
pop
mov
sbb
jp
sbb
es
dec
xchg
xor
test
sbb
arpl
movsb
lret
aam
adc
dec
sahf
pop
sub
ja
mov
imul
and
imul
mov
jecxz
xchg
leave
sbb
jmp
ret
adc
out
rcrl
mov
gs
fsubs
adc
sub
jbe
int
fldl
stos
adc
xorb
adc
and
pushf
mov
pop
aam
pusha
icebp
cmp
mov
jb
mov
adc
dec
mov
pushf
push
imul
movsl
and
pop
in
fdivrs
fcomp
dec
push
divb
mov
pop
mov
shll
or
pop
cmp
jne
adc
xor
sarb
inc
stc
dec
shll
test
call
scas
jl
mov
jecxz
lock
dec
movsb
xchg
cmp
sub
loope
mov
add
aad
jge
xchg
ss
or
into
aas
sub
mov
mov
popa
stos
negl
xor
mov
aam
stc
in
xlat
popf
call
sub
cmpsl
push
popa
xchg
fs
sbb
es
cs
adc
jne
inc
imul
aam
dec
jmp
iret
or
jo
xchg
mov
mov
cmpsb
mov
jnp
mov
sbb
idiv
pop
xchg
mov
mov
ljmp
inc
addr16
rolb
mov
or
sbb
adcl
sbb
and
cmp
inc
cmpsb
fdivrl
div
dec
rorl
stos
xchg
icebp
add
loope
je
mov
add
push
insl
push
icebp
subl
jns
imul
out
mov
fisubrs
mov
neg
cld
dec
cmp
mov
mov
dec
jb
insl
mov
push
aaa
mov
or
int3
lea
data16
in
aaa
dec
add
inc
sub
int3
sub
pusha
mov
fwait
icebp
sub
dec
dec
imul
das
in
lret
sub
and
adc
bound
and
mov
cld
stos
inc
call
hlt
sbb
add
pop
push
enter
arpl
xor
lock
clc
adc
int
fmull
jne
outsl
add
clc
mov
adc
add
in
adcb
outsb
dec
leave
xchg
adc
cltd
test
pop
cs
aaa
dec
rcl
idivb
adc
paddw
xchg
lods
xchg
push
mov
mov
jmp
sar
sbb
lcall
sahf
punpckhwd
insb
push
dec
test
loop
adc
add
fwait
les
cmp
sbb
jmp
adc
xchg
push
cmp
lcall
pop
pop
xor
dec
mov
aam
mov
pop
mov
ret
insl
pushl
js
fdivrp
mov
xchg
mov
mov
dec
cmp
iret
add
mov
cltd
aad
bound
inc
sbbl
std
add
sub
in
bound
fstl
or
lret
ror
mov
rcll
dec
mov
cmp
mov
outsl
cmpsl
push
push
rcrl
mov
gs
scas
stos
jae
adc
adc
cmp
addr16
xor
sahf
jmp
fsts
xor
cmc
adc
cltd
jg
mov
xor
dec
arpl
mov
add
ja
mov
inc
stos
sbb
lods
dec
popa
loopne
sbb
ds
popa
pop
addl
xor
add
sub
add
scas
ret
lods
xchg
cld
inc
sbb
push
loop
pop
xor
push
rcl
gs
mov
and
out
mov
cmp
in
xor
mov
int3
push
lret
aaa
push
inc
pop
fcoml
sarb
je
fmull
push
shlb
add
addr16
adc
mov
and
sbb
je
push
sub
lahf
pushf
pop
jmp
jno
lea
xchg
xchg
add
inc
add
xchg
out
and
ljmp
push
mov
outsb
imul
pop
ljmp
mov
ret
mov
lods
and
js
xchg
or
filds
popa
cltd
daa
and
pushf
pop
jl
addr16
jge
in
mov
in
jmp
jle
cmp
and
mov
xlat
testl
inc
xchg
add
sub
cld
imul
jmp
stos
insb
je
loopne
std
add
orb
je
rcll
iret
sbb
mov
ds
data16
int3
xchg
bts
sub
add
daa
dec
pop
aam
lods
fisttpl
aas
in
mov
inc
xchg
lret
clc
loopne,pt
nop
popa
into
adc
lods
cld
fdivrl
jae
out
aad
sub
movsb
outsb
rcrb
ja
test
rcll
mov
test
mov
bound
pushf
pop
fildll
fmull
push
aaa
loop
roll
jle
test
dec
bound
push
mov
mov
mov
subps
jno
ret
jb
ds
mov
pop
xchg
pop
sbb
mov
icebp
out
sbb
out
inc
and
hlt
mov
popa
fwait
mov
outsl
xchg
cltd
add
aam
mov
push
mov
fiaddl
xor
leave
cmpsb
pop
add
adc
pop
ficompl
negb
or
jns
bound
ficomps
push
ss
pop
or
loope
and
nop
sub
stos
mov
mov
xor
xchg
jo
push
push
aas
int
imul
xchg
sub
fmuls
ss
and
notl
cmp
mov
dec
mov
push
xor
inc
jmp
int3
es
mov
jo
fucomi
dec
loope
push
pop
cmp
jl
or
repnz
jl
cmp
xchg
mov
and
add
cmpl
jg
lods
adc
xor
jecxz
das
xchg
push
cmp
xchg
popf
mov
pop
ret
loope
shll
inc
addr16
mov
pop
testl
shrb
popf
xlat
cli
shrl
xor
into
test
jg
xchg
push
test
fwait
xchg
xor
inc
push
and
sbb
push
mov
fimuls
xor
cmp
movsl
addb
repz
push
int
sahf
mov
fs
mov
out
out
and
sub
lds
lahf
fwait
jle
xor
cli
sub
xchg
and
sbb
xchg
inc
fidivrl
cwtl
aas
jae
leave
je
aad
ja
sbb
pop
and
fcmovne
mov
and
mov
enter
jmp
and
test
repnz
or
aam
inc
loopne
lods
push
mov
inc
mov
and
mov
movsb
pop
mov
and
push
es
mov
adc
and
jecxz
mov
xchg
jmp
stos
dec
fwait
pop
push
int3
out
sbb
pusha
sbb
xchg
pop
mov
aad
in
fwait
sub
call
mov
loope
inc
incb
xchg
insb
cs
or
dec
sbb
sub
push
cli
out
xchg
xchg
adc
out
inc
cld
or
test
sahf
adc
loop
push
ret
xor
sbb
rcl
mov
dec
aam
xchg
mov
lret
sbb
js
mov
xor
ret
cwtl
shll
pop
push
ljmp
inc
loopne
lock
xchg
or
sbb
dec
add
sahf
add
loop
cmp
loop
jg
ret
outsb
and
aaa
in
ret
aaa
mov
fcmovu
jno
cmc
push
stc
shlb
mov
clc
mov
fs
sub
sub
cltd
mov
rorl
hlt
adc
sub
es
xchg
scas
je
xor
outsl
test
es
mov
enter
es
bound
or
arpl
inc
dec
mov
push
popa
or
push
pop
xchg
sti
les
les
ret
sbb
enter
cli
pop
out
mov
stos
iret
lds
fdiv
and
addr16
add
mov
es
mov
mov
sub
add
push
adc
sti
movsb
insl
jl
inc
out
xchg
shll
enter
outsl
arpl
xchg
out
notb
push
ljmp
nop
orl
aam
jno
add
outsb
lea
scas
pusha
push
mov
divb
mov
jne
and
mov
jne
pusha
sbb
outsl
cli
pop
and
pop
xchg
add
xor
mov
hlt
pop
nop
inc
jg
aaa
fld
push
mov
mov
or
dec
mov
xchg
xlat
xlat
fsub
out
or
pop
adc
pop
and
xor
shl
add
cmpsl
cmp
fbstp
push
and
sbb
repnz
iret
aas
arpl
inc
mov
jp
xlat
xor
bsf
lret
pop
iret
xor
out
loope
adc
int
pop
mov
rcl
adc
pop
inc
popa
cld
shrb
mov
adcl
add
jno
fsubs
xchg
fwait
mov
pop
dec
jae
push
aaa
stos
iret
jle
es
sar
or
dec
xor
fidivrs
mov
push
and
daa
xchg
pusha
or
push
fsubl
pop
xchg
pop
dec
push
scas
int3
mov
mov
dec
std
xchg
es
ljmp
xchg
xor
dec
loope
stc
push
push
jb
out
scas
lea
jne
or
xor
cmp
out
mov
imul
fnsetpm(287
repnz
repz
sub
repnz
jl
sub
insl
fs
xchg
in
addl
cli
jl
adc
aaa
mov
ja
shrb
lock
fists
es
xlat
test
mov
sbb
mov
leave
cmp
add
orb
mov
pop
pop
push
jecxz
pop
ss
enter
pop
push
scas
adc
mov
or
into
dec
stos
xchg
adc
add
jo
mov
stos
add
call
xchg
leave
push
data16
popa
test
shlb
or
xchg
mull
fwait
xor
sahf
mov
mov
sub
jmp
nop
scas
jno
cmpsl
jnp
mov
jl
icebp
mov
pop
sbb
inc
loop
outsl
aas
mov
stos
nop
test
cmp
scas
xchg
jmp
imul
inc
imul
mov
cwtl
inc
inc
push
pushf
xor
test
mov
mov
andl
into
stc
sarl
xor
add
in
mov
and
mov
rol
xor
or
xor
aad
push
mov
mov
cmc
repnz
insb
xchg
icebp
jecxz
push
push
inc
fiadds
insl
jns
ret
dec
cltd
aam
mov
and
or
add
cmc
add
or
and
push
push
pop
push
pcmpgtw
jns
lods
ljmp
inc
jo,pn
lahf
adc
das
daa
fisttps
xchg
fiadds
pop
cmc
mov
ret
jns
mov
cs
push
stc
lret
add
mov
repnz
sub
test
push
push
shr
popa
mov
cmp
shrb
xor
ja
mov
adc
jl
les
add
push
aaa
sbb
jmp
and
fld1
ds
aas
lahf
call
inc
xchg
cmp
mov
jmp
or
sub
add
inc
xchg
jecxz
mov
push
dec
xlat
iret
mov
and
sti
and
push
jo
jns
pop
aas
adc
pop
fstpt
bound
insb
add
sbb
mov
push
lock
sbb
jle
xor
fnstenv
lock
pop
dec
xchg
fnstcw
in
test
mov
arpl
jbe
mov
dec
xor
pop
mov
mov
mov
mov
cmpsb
popa
mov
sub
lahf
loope
sub
sub
lret
out
cld
js
lods
mov
add
add
test
dec
cltd
ret
adc
pushf
test
das
int3
xchg
cltd
or
ljmp
jecxz
out
xor
loop
mov
pushf
clc
fimuls
insl
imul
or
mov
inc
icebp
shll
xchg
enter
dec
je
xchg
jbe
test
stos
aad
and
aaa
xor
mov
ret
or
xor
sbb
aas
sbb
fstp
loopne
lret
sub
push
int
mov
int3
int3
inc
push
push
scas
push
scas
jecxz
fwait
jp
add
xlat
mov
add
clc
fmuls
cli
or
aam
out
sbb
sub
icebp
ss
dec
xchg
rcrl
nop
mov
idivb
inc
mov
jnp
push
ds
iret
pop
shrb
imul
test
popa
popf
push
addw
or
or
ds
jno
inc
sbb
mov
xor
mov
ds
cmp
test
jle
data16
stos
loop
jmp
stos
mov
aam
sbb
xor
adc
mov
and
iret
push
add
dec
arpl
imul
leave
inc
out
mov
xorb
pop
inc
jp
fiadds
mov
sahf
xlat
push
adc
mov
add
mov
add
scas
mov
cmpl
lret
and
aaa
pop
mov
je
add
cmp
or
mov
std
jno
fld
unpckhps
adc
frstor
sub
das
ss
stos
movsl
leave
stos
or
adc
xorl
test
push
fwait
cwtl
in
into
cwtl
std
mov
sahf
dec
popa
xchg
stc
movsl
and
lahf
mov
bound
lret
add
mov
jo
jge
or
mov
ja
stc
add
aad
mov
jnp
scas
xor
in
sti
pop
icebp
data16
mov
push
xchg
mov
stos
scas
jmp
jecxz
cmpsb
xchg
ds
mov
imul
in
xchg
lds
mov
sub
push
and
insl
in
dec
loop
add
sub
cmp
mov
repnz
xor
popf
dec
dec
subl
cmp
mov
push
xchg
das
rcl
mov
rorl
mov
dec
mov
pop
repz
jge
ds
inc
lahf
out
jmp
lahf
in
pop
icebp
xchg
loopne
mov
pop
push
mov
int3
iret
push
pop
pop
pop
ljmp
fstps
jns
daa
or
sarl
ss
andl
push
test
ret
je
sub
lret
sarl
frstor
or
push
ss
mov
xor
or
adc
lret
lret
aad
dec
xchg
jl
sbb
bound
sub
jmp
cmc
jae
cmp
cmp
daa
jle
je
sar
mov
ss
lcall
push
sub
movsb
bound
out
setg
lret
and
lock
xor
and
movsb
mov
scas
adc
and
jl
int3
cmp
jp
dec
sub
pusha
loop
scas
test
mov
hlt
int
pop
sbb
and
xchg
jno
lret
adc
arpl
stc
pop
mov
lea
xlat
jp
lret
adc
cmc
mov
xchg
jg
sub
mov
mov
fsts
enter
sbb
out
pop
sahf
xchg
mov
test
or
cmp
xchg
sub
cmp
inc
mov
mov
push
clc
xchg
leave
loope
lret
enter
nop
jbe
movsb
test
lods
mov
shll
das
inc
repz
sbb
hlt
push
adc
xchg
in
jl
das
xchg
cli
jnp
sub
and
lods
mov
scas
js
aaa
sti
stos
scas
pop
cmp
dec
mov
aas
out
pusha
mov
push
out
cmp
cmc
xchg
push
and
mov
push
mov
adc
push
jne
mov
xchg
outsl
daa
aam
aaa
popw
and
inc
je
or
push
sub
and
cmp
jg
push
push
insb
pop
push
sbb
cwtl
push
sub
add
rolb
jo
mov
sub
push
and
mov
pop
add
cs
push
push
lcall
stos
imul
mov
arpl
mov
test
xlat
subb
sahf
test
sbbb
test
mov
js
lret
mov
mov
mov
cmp
fcoml
and
push
repnz
jb
data16
adc
xor
and
lods
cmp
push
xchg
xor
and
inc
jmp
dec
rcrb
mov
push
mov
cmp
mov
sub
xchg
shlb
rcr
xchg
push
xor
push
mov
leave
cmpsl
push
dec
movsb
mov
push
mov
jne
cld
test
jecxz
ret
mov
and
adc
adc
or
mov
mov
cmp
test
or
fwait
push
jecxz
fxrstor
addr16
popa
mov
jecxz
inc
or
icebp
insl
or
mov
cmpsl
jne
jg
dec
arpl
pop
jns
lret
les
insl
and
cs
xor
sub
addr16
ljmp
cmp
int3
or
out
push
sbb
je
pop
push
jge
ret
loop
ds
or
sub
jge
dec
mov
add
insb
push
pushf
fadds
cmp
cli
add
rorl
ffree
xchg
cmp
pop
push
divl
sub
stc
pushl
inc
mov
aam
mov
ficomps
imulb
clc
mov
data16
bound
xchg
jnp
lea
xchg
mov
mov
into
xorl
loop
xor
bound
hlt
jmp
inc
sub
xchg
jge
push
ja
cmp
push
cmp
mov
ja
push
lock
or
fimuls
mov
mov
mov
sbb
adc
jno
jmp
in
popa
cli
mov
jge
andb
adc
push
mov
xchg
dec
dec
cltd
jecxz
and
inc
aad
fwait
in
rorl
pop
inc
jg
mov
lret
dec
dec
int
add
jo
fldt
mov
dec
addl
xlat
mov
sub
inc
mov
ss
loop
dec
lds
fists
jmp
and
imul
push
jl,pn
mov
cmp
push
and
lahf
mov
out
sbb
jnp
loop
shl
add
inc
gs
inc
xorb
pop
xchg
cmp
xor
cs
ffree
xor
test
jb
and
pop
test
pop
push
and
mov
push
cld
in
push
out
mov
jle
push
adc
lea
ss
pushf
sahf
xchg
mov
notb
xor
repnz
insb
icebp
fnsave
call
ja
inc
lds
push
pop
dec
xlat
adc
stos
add
flds
add
sti
cmp
js
jg
test
jecxz
and
push
test
test
push
data16
and
xchg
scas
cmp
xor
jae
fs
arpl
mov
or
or
fidivs
sub
add
nop
repnz
push
sbb
push
xor
inc
cmpsb
fsts
loope
sbbl
arpl
cmpsb
bound
add
clc
ja
lcall
inc
mov
incb
jns
aad
movsb
xchg
or
ja
lock
fisubrs
jmp
dec
push
mov
jne
xchg
ret
loope
js
mov
js
add
or
in
js
or
mov
xchg
loope
inc
jle
sub
hlt
shr
insl
sbb
sbb
jg
jb
push
xlat
cmp
sbb
in
shll
inc
or
lock
dec
push
pop
jge
stos
insb
push
push
js
sahf
mov
mov
out
jbe
pop
mov
dec
imul
sbb
fsubr
stos
inc
mov
jbe
lea
xor
inc
das
into
mov
mov
push
jmp
dec
pushf
dec
fldenv
shrd
cmp
jbe
mov
jo
inc
decl
icebp
mov
sbb
pop
bound
adc
sbb
stos
jnp
cmp
jne
int
xor
pop
nop
repz
and
add
pop
aam
sub
push
cmc
or
xorl
xor
aam
pop
aad
nop
in
and
pop
push
and
push
pop
daa
mov
cmp
daa
into
inc
push
jo
mov
push
inc
xchg
das
fnclex
dec
subl
xor
add
popa
and
adc
sahf
xchg
or
mov
ja
ret
cmpsb
insl
cmpsb
loop
std
push
mov
jmp
bound
repz
subb
loop
fwait
fwait
and
dec
xor
jno
jnp
sub
pop
aaa
pop
adc
lret
jno
xchg
test
xchg
sti
enter
xchg
imul
les
lods
cmpsb
cltd
mov
sbb
pusha
mov
mov
push
push
push
sti
shll
xchg
xchg
dec
push
in
arpl
mov
pop
or
xlat
lret
pop
lods
gs
rcrl
mov
xchg
inc
add
xchg
and
pop
and
mov
mov
cmp
out
movsl
push
ds
adc
ds
dec
inc
mov
push
dec
push
add
jp
mov
and
mov
and
and
lea
cmpl
sub
sbb
pop
mov
inc
xchg
jmp
add
insl
pop
stc
xlat
and
aas
pop
cltd
dec
out
mov
dec
xchg
xchg
pop
mov
sarb
cmp
wbinvd
dec
mov
cld
jae
mov
call
mov
imul
testl
test
jl
and
roll
xor
push
sbb
adc
dec
jmp
add
je
push
push
pop
arpl
mov
fs
or
les
mov
mov
sarl
push
pop
or
inc
or
jecxz
jmp
and
sbb
mov
jg
je
sub
aaa
cmp
loope
jge
arpl
xor
cmc
sbb
test
ds
adc
jmp
jl
pop
pop
cmpsl
fidivrl
jp
ljmp
mov
adc
sub
stos
sub
ljmp
roll
sahf
push
push
cld
imul
adc
sbb
jg
xchg
inc
inc
loop
or
sbb
jne
and
mov
repz
xchg
xor
loopne
cld
jne
mov
notl
cs
add
jb
pop
clc
sbb
out
das
xchg
popf
mov
xor
sahf
int3
rol
out
jb
repz
test
fisubrs
xchg
mov
inc
fdivs
repnz
lahf
mov
data16
shrb
xor
shlb
xchg
aas
jo,pt
mov
mov
imul
mov
pop
movups
sbb
loopne
adc
imul
or
shlb
push
adc
add
mov
fwait
or
stos
popf
nop
fyl2xp1
or
imul
addr16
jns
cmp
dec
repz
adc
sti
pop
xor
repz
inc
insl
pop
xchg
add
in
cltd
faddl
sbb
into
and
sbbb
jo
insl
cmp
dec
loope
mov
sbb
fdivrl
inc
xchg
mov
aaa
xorl
mov
push
xchg
cmpsl
aad
or
dec
jp
out
add
push
les
imul
rcrb
mov
pusha
push
or
mov
je
xor
insl
mov
out
js
fcmovu
xor
xor
xor
movq
pop
je
xor
pushf
cmp
pop
sbb
jle
cwtl
out
aaa
mov
mov
cmp
imul
ss
fst
dec
je
fidivs
jmp
xchg
push
inc
pop
cmp
rol
nop
or
lret
xchg
jne
in
cmp
aas
dec
jp
es
in
in
faddl
ret
nop
outsl
push
in
mov
mov
aaa
fucomi
jp
jg
je
pop
pop
idivl
jo
fnstenv
dec
or
inc
dec
test
add
jp
repnz
pop
jg
movsl
int3
shll
iret
rol
outsb
fs
mov
push
mov
pop
ljmp
cld
test
mov
cld
pusha
ret
push
int
jae
lahf
xchg
push
mov
mov
outsl
pop
dec
shll
test
mull
mov
push
int3
push
add
sbb
imul
test
pusha
push
cmp
ret
add
jle
or
cs
adc
repnz
cmpsl
xor
lret
testb
mov
jb
test
testl
bnd
and
fisttps
xchg
out
inc
fisubrl
push
or
test
and
push
out
fwait
push
jbe
adc
ret
pop
int
sbb
jecxz
mov
clc
cld
fcmovnbe
insl
push
mov
cmp
das
sarb
scas
sub
pop
iret
cmpsb
ljmp
fisttpll
es
xchg
adc
scas
aaa
pop
shll
sub
lea
lret
stos
fimull
xchg
dec
push
arpl
in
lods
out
das
sahf
aas
push
jecxz
sbb
pusha
fcoms
lods
dec
dec
rorl
int
sub
jl
jbe
mov
ss
testb
push
cwtl
pop
jp
add
js
mov
dec
mov
xchg
cld
jb
loopne
lahf
adc
into
das
pminsw
aaa
lds
jmp
int3
pop
test
cmp
in
stc
and
mov
inc
jg
mov
cmp
pop
jg
outsb
mov
lcall
mov
cs
and
sbb
pop
jmp
stos
mov
jl
mov
mov
cli
sub
js
outsl
jnp
roll
pop
xchg
dec
sbb
mov
inc
cmp
mov
cmpsl
shlb
lret
inc
jg
push
lahf
mov
es
inc
lret
mov
sbb
mov
pop
in
xor
loopne
test
ret
xchg
xor
push
test
mov
outsb
mov
jmp
pop
mov
push
push
sub
popf
jbe
pop
sub
adc
adc
dec
repnz
int3
ds
ja
mov
xor
ja
in
movsl
sti
add
aas
inc
cmpsb
int3
cmpsb
dec
adc
xchg
out
xchg
mov
popa
and
test
pop
xor
mov
mov
jp
xor
pop
xor
xchg
roll
aam
ljmp
insl
mov
lods
xor
mov
faddl
cmp
dec
or
xchg
xchg
sub
pop
ror
bound
pushf
aad
dec
xchg
sarl
sbb
cld
pop
adc
dec
mov
mov
push
test
insl
adc
dec
clc
xor
imul
fists
push
jle
lods
aaa
push
test
mov
pushf
cmp
jecxz
stos
or
mov
cli
or
adc
lods
cs
filds
movsb
jo
or
dec
jnp
pop
xchg
jle
inc
aaa
lds
and
negl
sbb
ds
mov
outsl
lret
jl
inc
or
fcoml
add
ds
ficoml
into
dec
sbb
jns
dec
in
pop
push
adc
sub
nop
shl
mov
push
popa
push
lret
xor
adc
pop
lret
lcall
cmp
xor
adc
in
insl
in
stc
test
xchg
nop
daa
pop
clc
cmc
jae
lods
cmpsb
or
mov
push
or
add
cmp
sbb
sbb
cld
jns
mov
rorb
movsb
pop
ficomps
movsl
lds
fs
lcall
cs
maskmovq
ljmp
xor
mov
cmova
imul
and
adc
cltd
xchg
push
push
mov
inc
inc
push
int3
cmpsb
cmpsl
jae
pushl
sbb
cs
ds
add
lds
sti
in
pop
sbb
enter
push
mov
or
hlt
cmpl
rcll
push
fisttpl
or
push
scas
inc
out
dec
xorb
xchg
add
fistpl
jns
loop
add
xchg
xchg
sub
ja
outsb
jae
inc
jge
jnp
dec
loop
push
jp
paddw
xchg
scas
mov
mov
into
cmpsl
hlt
mov
les
push
test
add
pop
mov
popa
adc
cmp
rclb
xor
outsl
sub
add
add
xor
int
lea
or
fwait
arpl
inc
cwtl
dec
sub
ja
out
inc
out
ljmp
cmp
cmp
into
lret
jno
push
aad
adc
mov
jle
jb
push
clc
lret
inc
pop
outsl
cmp
push
mov
mov
xchg
in
test
jmp
push
es
adc
cmpsb
push
fnsave
mov
pop
cmpb
adc
xchg
xchg
sbb
lcall
and
faddl
dec
and
pushf
cmp
pop
cmp
aad
mov
fimuls
int
jecxz
sbb
fdivs
cmc
sbb
sbb
inc
loope
cld
imul
subb
data16
roll
adc
xlat
xchg
mov
adc
pop
jecxz
mov
push
mov
adc
xchg
test
pop
je
mov
dec
mov
push
cmp
call
cmp
sub
ficomps
mov
scas
iret
ret
cmp
sahf
dec
scas
xor
mov
hlt
xchg
leave
aad
inc
adc
loopne
cmp
xchg
sbbl
push
mov
outsb
outsl
cmp
sub
repz
stos
adc
stos
or
rcr
xor
mov
and
pop
aas
sbb
cmp
arpl
jp
and
add
jae
add
mov
dec
scas
cmpsb
lret
cwtl
lahf
mov
fisubrs
mov
push
inc
insb
stc
std
daa
jns
pop
push
in
or
icebp
ss
dec
lods
jae
cmp
sub
mov
pop
lcall
mov
push
bound
cmp
aam
xor
aad
icebp
out
fdivl
fcompl
repz
divb
and
fwait
scas
sti
lods
jbe
stos
adc
mov
in
sahf
call
popa
jb
jmp
dec
mov
out
jb
les
push
stc
jb
addb
pop
adc
mov
fcmovnb
mov
mov
adcb
ds
sub
mov
inc
xlat
aam
dec
xchg
outsb
inc
fwait
and
sbb
dec
push
xchg
pop
aaa
jle
or
scas
xchg
shlb
out
js
mov
pop
mov
lcall
sub
insl
jbe,pn
inc
stc
mov
mov
lret
in
lds
loope
and
sub
sbb
xchg
and
ror
insb
negl
mov
dec
lods
cwtl
aas
jmp
jae
lret
pushf
loop
popf
jge
cmp
dec
mov
popf
testb
pop
pop
mov
lods
dec
aad
lods
push
inc
cld
inc
pop
pop
cmpsl
adc
cmp
add
imul
xor
dec
xlat
mov
sarb
fcmovb
mov
stc
lahf
ja
add
cmp
dec
adc
iret
mov
dec
test
jmp
lds
test
mov
mov
lock
shrl
sub
cltd
push
adc
jle
or
cmp
xor
ss
push
pop
pop
push
mov
dec
fcoml
sub
mov
dec
adc
adc
test
pop
cmp
in
cli
jo
xor
xor
cld
flds
lods
ljmp
bound
inc
insb
out
out
pushf
ss
mov
insl
shr
or
xchg
ret
testl
jle
xlat
push
pop
orl
test
sub
sbb
sbb
shlb
lock
pop
or
inc
inc
mov
addr16
popa
adc
cmp
dec
and
mov
imul
in
rcl
mov
and
jnp
out
es
xor
in
xor
inc
sbb
push
in
dec
dec
jnp
es
pushf
xor
adc
mov
mov
push
clc
sub
xchg
ffree
inc
sub
pop
adc
inc
adc
popf
cltd
xchg
lods
dec
lret
xchg
arpl
out
mov
mov
jbe
das
lea
mov
push
inc
jb
call
pop
cld
ja
add
es
jecxz
and
loope
icebp
sub
or
adc
bound
inc
mov
sub
rcl
inc
mov
or
in
and
xor
dec
fisttpll
xor
cmp
jle
test
aas
xor
roll
inc
adc
fcmovnu
or
or
mov
pop
fsubs
xchg
out
jae
out
inc
pop
jg
movsl
push
sbb
push
mov
mov
inc
or
mov
lahf
sti
scas
and
pop
scas
add
cwtl
or
xchg
repnz
ja
push
mov
movsl
xchg
jns
scas
xor
cmp
mov
mov
mov
mov
mov
lods
cmpsb
xchg
xor
test
loope
mov
mov
mov
jbe
ja
gs
jb
push
push
popf
push
xchg
nop
je
cmp
out
mov
sahf
sbb
movsl
dec
sbb
pushf
lds
xor
jns
pop
xor
scas
mov
lods
cmp
sub
test
lods
frstor
jns
and
push
jb
adc
ret
xchg
dec
inc
sbb
nop
insl
ret
add
xchg
ljmp
mov
addr16
in
lret
in
in
lahf
mov
jo
dec
or
push
and
sbb
add
mov
lds
insl
mov
lock
aaa
sub
jge
popa
xchg
into
iret
or
mov
adc
xchg
stos
in
test
test
negl
cs
popf
dec
and
cmpsb
loop
sub
inc
aaa
mov
test
cmp
in
imul
cmp
sub
push
insl
inc
adc
or
mov
lock
dec
lahf
push
jle
jbe
stos
icebp
stos
dec
push
xchg
pop
adc
mov
movsb
ret
rolb
mov
ja
jb
jecxz
enter
cwtl
add
mov
mov
xor
cs
leave
loopne
sbb
sub
cmpxchg
mov
inc
cmc
cmp
and
not
pop
ret
mov
sub
jg
mov
out
divl
stos
aad
add
ret
es
mov
xor
cld
or
lret
xchg
xchg
or
jge
or
frstor
jnp
inc
aas
pushf
or
and
mov
ss
pop
out
lahf
test
stc
mov
dec
andl
bound
push
cmpsb
gs
sbb
xchg
popf
jns
xchg
ror
pop
xchg
and
and
pop
inc
rorl
loope
cmp
jg
stos
and
shl
inc
mov
jb
jne
jmp
or
mov
xor
jmp
nop
inc
js
stos
jmp
xchg
adc
ficomps
mov
jl
xor
fucom
ljmp
xchg
decb
adc
lahf
mov
lock
call
xchg
and
out
imul
mov
sbb
fs
sbb
sub
outsb
jne
out
sahf
and
and
imul
add
shll
lods
iret
int3
lcall
int
aaa
call
and
add
sbb
mov
push
scas
mov
lret
dec
fs
cmp
inc
adc
aas
xchg
mov
in
pusha
xchg
sbb
xlat
or
mov
xor
xchg
mov
in
shll
je
and
test
mov
push
mov
out
inc
lea
and
rcll
mov
add
imul
xor
sbb
xor
iret
test
xchg
or
push
in
fmull
mov
jle
ss
pop
push
bswap
xor
mov
cmp
fisubrl
xor
sub
mov
test
push
or
cmp
test
mov
jae
arpl
xor
ss
int
clc
mov
sbb
subb
push
fucomip
xchg
or
pop
jns
and
loopne
push
out
rorl
aam
out
scas
cmpsb
push
or
leave
into
jg
and
push
mov
out
inc
lret
hlt
sbb
jb,pn
jns
xchg
jnp
out
fwait
rolb
lea
mov
cmp
dec
rclb
push
inc
xchg
jle
ret
andb
bound
nop
mov
fiaddl
cmp
xlat
push
loop
push
es
das
nop
rcl
cmovg
int
cld
inc
lret
xchg
das
pop
out
inc
or
inc
fwait
data16
ss
jmp
daa
push
or
pop
push
xor
mov
fnstcw
pop
pop
xor
or
cld
sbb
pop
cld
cmp
call
nop
aas
mov
jns
pusha
sub
leave
aaa
loop
popa
xchg
arpl
dec
sub
pop
dec
sub
pop
test
sub
adc
xchg
mov
gs
and
lock
xchg
xchg
mov
dec
pop
cmpsl
inc
rcl
shl
pop
ja
movsb
in
cld
push
in
int
adc
dec
pop
sti
pop
mov
ret
jns
or
pop
adc
fistpl
cmp
fildl
push
and
int3
stc
dec
jle
xchg
push
push
inc
lcall
xchg
aas
imul
es
or
cmc
push
mov
aad
lock
jae
fdivl
mov
mov
arpl
add
movsb
pop
stos
inc
push
lcall
and
mov
nop
enter
mov
rcrl
mov
popa
push
fnstenv
pop
lahf
dec
out
jl
jnp
hlt
lea
jecxz
sub
mov
mov
xorb
movsb
imul
mov
and
stc
aad
insb
or
scas
pusha
push
adc
push
adc
or
in
lcall
fisubrl
jl
mov
and
dec
ret
adc
dec
or
addr16
fwait
icebp
addr16
test
lahf
jns
and
add
cld
mov
fwait
sub
mov
xchg
dec
sub
jno
push
dec
hlt
and
sahf
xchg
push
mov
jbe
cmp
mov
icebp
add
inc
outsl
pusha
in
jge
jbe
or
movsl
cld
sbb
outsb
lret
jb
aas
xor
sub
scas
ficoms
in
popa
hlt
jg
mov
ret
pop
out
or
add
in
sbb
inc
repnz
lods
arpl
cld
or
mov
imulb
or
and
jae
jmp
jecxz
outsl
idivl
popa
pop
fcmovne
outsl
ficoms
in
arpl
outsl
push
sahf
outsb
sub
push
jno
xor
outsb
sbb
and
fdivl
icebp
push
out
imul
or
push
adc
push
pop
or
xorl
scas
adcl
rcll
std
or
rclb
lahf
jnp
adc
xchg
fcomp
test
jno
mov
aas
cmp
cmp
pusha
loop
mov
dec
into
jecxz
int3
xorl
inc
lcall
cmp
and
outsl
push
mov
push
jmp
cmpsl
pop
xor
stos
scas
pop
xlat
aam
out
xchg
sbb
loop
xchg
xchg
sub
scas
std
jecxz
imul
sub
mov
or
jb
stos
mov
aas
jmp
inc
nop
dec
cld
jno
pop
jae
out
push
sbb
or
popa
rcrb
stos
in
lea
mov
mov
dec
and
xchg
repz
pusha
mov
fdivrp
in
jmp
push
daa
int3
and
push
adc
es
push
ficoml
addr16
mov
int3
sub
cmp
jecxz
gs
push
pop
lods
adc
mov
movsl
ss
and
fwait
xor
jecxz
in
add
sbb
push
mov
outsl
aad
andb
pushf
mov
hlt
and
mov
cld
mov
sub
dec
enter
fstp
repnz
icebp
mov
shrb
in
jecxz
pop
mov
mov
nop
mov
cmc
repz
scas
xor
push
push
scas
aas
lret
in
das
clc
into
push
mov
fisubrs
out
stos
mov
and
sti
add
sub
cld
sbbb
push
je
scas
dec
or
xor
pushf
outsb
insb
push
xchg
int3
or
std
lea
lea
shr
lret
insb
sub
pop
cld
and
loopne
fmuls
add
pop
fnstenv
loopne
fisttpl
or
mov
mov
adc
outsl
fcmovbe
fs
xor
mov
xor
mov
ljmp
jb
xchg
cmp
inc
jnp
pop
jb
dec
mov
or
cmp
cs
leave
xchg
xor
nop
loopne
stos
fldt
mov
xchg
fucomi
fstpl
adc
icebp
loopne
mov
and
clc
int3
in
loopne
add
and
sbb
roll
repz
pop
mov
test
fstl
shl
sub
and
dec
add
aaa
dec
jmp
test
sti
bndldx
cwtl
adc
ret
jb
lcall
fstpl
push
gs
mov
ret
lret
hlt
lahf
sarb
imul
addr16
jbe
shlb
xor
jbe
cmp
xor
clc
adc
shll
loope
les
push
loopne
subl
mov
sbb
or
inc
lea
aaa
nop
mov
jb
ja
or
aam
jg
and
or
insl
sub
or
push
repz
sbb
fld
jg
les
clc
pop
jp
mov
jne
mov
lcall
aas
fmul
cld
in
rol
das
aaa
mov
xor
out
incb
xor
mov
je
sbb
out
xchg
dec
int
out
and
leave
das
stos
cs
jg
addr16
pop
je
cli
movsl
xchg
pushl
jne
in
sti
paddsb
fldt
add
mov
xchg
cmp
dec
inc
rcrl
loop
clc
push
mov
adc
mov
jecxz
fadd
adc
add
insb
jae
dec
cmp
or
or
pop
std
fs
into
pop
pop
push
xor
jp
and
xchg
mov
mov
adc
inc
add
jl
pop
daa
mov
mov
ss
fdivl
jne
sub
lret
popa
sbb
stc
es
pop
rclb
mov
call
push
inc
adc
iret
pop
cmc
add
or
and
aaa
push
stc
xchg
mov
xlat
rcr
jo
mov
lods
push
mov
push
mov
push
je
in
ja
js
push
aas
and
lret
insb
dec
leave
dec
aaa
push
ret
fcomi
subb
cmpps
inc
fidivs
adc
xor
fs
cmpsb
or
ljmp
aam
repz
mov
push
or
aad
gs
sti
sub
pop
jle
pop
pop
movsb
push
in
rorb
dec
enter
mov
scas
popf
pop
or
ja
mov
jo
insl
shlb
and
cmc
mov
lret
enter
sub
push
pusha
lahf
jl
pop
lahf
test
js
fdivp
fucomip
dec
movl
pop
stc
mov
jae
jns
and
outsb
sbb
or
test
shll
sbbw
lcall
dec
shl
or
ljmp
in
jge
das
js
mov
adc
xor
or
jle
cmp
mov
lret
fsubrs
adcl
lret
inc
stos
mov
out
les
mov
ja
lret
fmull
idivb
std
sti
mov
pop
loopne
jge
push
mov
and
mov
insb
pop
test
cmp
ljmp
inc
push
adcb
fwait
mov
sbb
dec
dec
mov
mov
mov
ss
shrl
mov
and
fwait
rclb
fcomps
in
imul
mov
adc
pop
clc
mov
and
and
xchg
or
out
outsb
dec
and
dec
ds
xchg
adc
jae
pop
std
adc
push
mov
insb
jg
pusha
pop
sbb
loopne
sub
push
call
fnstsw
add
jp
pop
jae
es
jns
sbb
xchg
dec
pop
mov
cmp
test
repz
or
orb
cs
jnp
lret
lcall
lods
xor
jp
cmp
inc
push
sbb
inc
inc
pusha
cmp
mov
cmp
xor
imul
and
popl
loopne
or
loopne
in
pushl
lock
mov
adc
adc
dec
add
mov
les
fbstp
and
mov
dec
cwtl
lock
es
pop
stc
push
sub
pushf
scas
sub
ss
lret
mov
fst
jge
push
adcl
je
lea
or
mov
cmp
mov
pushf
repz
lea
sbb
cli
subl
or
sbb
or
das
sub
or
into
in
test
jmp
shll
call
sub
lret
enter
mov
inc
mulb
xor
test
pop
loope
test
or
sbb
dec
sbb
in
xchg
pop
xor
pop
insl
aad
adc
mov
out
and
mov
pop
test
fcomi
mov
sub
jne
sti
popa
sub
cmp
inc
fimull
das
xchg
xor
aas
dec
pushl
pop
les
lds
mov
insl
pop
negb
mov
clc
cmpsl
inc
inc
test
mov
inc
xchg
lods
add
ffreep
iret
mov
les
mov
jnp
data16
adc
call
sub
ja
shlb
shlb
add
hlt
or
mov
and
pop
mov
or
fucomp
scas
sbb
push
xchg
out
pop
cs
es
jne
add
adc
test
cltd
sub
in
mov
ja
xchg
cwtl
shr
and
push
dec
test
ja
push
loopne
punpckhwd
sub
rol
adc
cld
add
pop
or
ljmp
or
sub
push
sbb
iret
jne
jle
dec
repz
test
movsl
out
mov
inc
pushf
cltd
shlb
jg
or
pop
pop
pop
jge
int
lret
jo
mov
push
jae
les
or
xor
shll
and
add
cmpsb
gs
and
jno
adc
cmp
and
inc
pop
sbb
sbb
push
dec
fiaddl
push
mov
ljmp
movsb
and
jae
ja
pusha
iret
pop
loope
push
mov
sti
mov
mov
push
enter
mov
xlat
mov
in
jb
xchg
add
stc
pop
inc
arpl
cmpsb
aam
lods
leave
adc
je
mov
icebp
imul
cmp
not
idivb
add
adc
fs
push
loop
mov
cmp
addl
xor
repz
mov
fidivrs
repnz
popf
or
push
outsb
pop
sbb
leave
cmpsl
enter
sbb
mov
int3
push
into
push
lahf
insb
jecxz
mov
jne
cmp
pop
idivl
mov
adcb
mov
sub
pop
adc
xor
fwait
mov
jmp
cwtl
push
lret
lret
pop
js
aam
cmp
mov
pushf
push
pushf
shl
push
push
imul
aad
push
dec
inc
xchg
lret
push
mov
mov
scas
gs
push
xor
stos
or
jbe
popa
clc
es
jno
dec
push
jb
jmp
sbb
gs
dec
adc
jbe
pop
jmp
inc
sub
cli
pop
xor
fsubs
add
fists
enter
sahf
rcr
stos
cmp
xchg
and
addr16
jb
cmp
popl
out
and
jno
push
mov
fildl
push
enter
sarl
lea
pop
in
pusha
xchg
and
lcall
jmp
mov
popf
jmp
aaa
jo
pushf
repz
or
mov
pop
add
mov
xor
jg
xlat
aam
xchg
lock
sub
fnstsw
out
popf
xchg
push
and
push
pop
call
mov
push
add
xor
push
int3
add
dec
ljmp
lods
cmp
sbbb
push
mov
mov
mov
cs
test
xorb
out
push
mov
imul
ret
daa
rorl
cwtl
frstor
out
inc
mov
xlat
jno
mov
divb
lea
jle
pop
sub
ljmp
mov
xchg
sub
cli
fisttpl
xor
inc
mov
mov
faddl
fsub
jo
ficoml
out
cwtl
cmc
js
divl
mov
xchg
jns
push
movsb
xchg
arpl
push
mov
in
sbb
jmp
dec
jge
rorl
pop
sub
push
jns
sub
loopne
ljmp
and
enter
jnp
xor
mov
insb
mov
out
sti
cmp
xor
stos
xor
mov
outsb
mov
test
mov
clc
leave
push
clc
dec
jns
inc
xchg
js
mov
xor
fdivs
cmp
push
mov
push
icebp
repz
xor
stos
pop
pushf
push
lock
pop
int3
adc
mov
jl
mov
push
pop
roll
fisubrs
int
mov
sahf
xchg
sbb
leave
andl
xchg
mov
xchg
ljmp
jp
cmpsl
adc
test
test
movsb
or
test
sbb
pop
mov
mov
sbb
inc
ret
pop
enter
outsl
sbb
in
sub
adc
add
hlt
push
xor
cwtl
jg
pop
test
push
movsl
mov
in
rorb
pop
movsl
dec
mov
fcmovb
and
mov
dec
jmp
in
sub
daa
cs
gs
xchg
fs
pop
dec
enter
pop
adc
mov
mov
mov
lret
or
ljmp
jmp
xlat
xchg
rcrl
movsb
aad
int
clc
lods
in
fstl
mov
cwtl
mov
mov
lds
mov
jp
pop
pop
gs
xchg
cmp
sahf
std
stc
stos
jb
shll
inc
push
mov
movsl
or
xor
loopne
jmp
and
mov
mov
sarb
fsubrp
out
mov
push
cmc
or
les
lds
insb
and
ret
jae
call
mov
pop
int
and
stos
sbb
into
sub
int
std
xlat
mov
push
jo
sbb
inc
in
lcall
pop
sub
sub
push
xchg
jmp
jl
subl
cli
push
sbb
inc
les
jo
mov
in
push
dec
xor
jmp
xor
popa
leave
push
xchg
cld
fcmovbe
js
nop
cmpsb
sbb
sbb
xor
and
jo
hlt
cmc
icebp
subl
repnz
cmp
adc
jp
sti
in
mov
lcall
stos
adc
pop
mov
mov
pop
dec
cmc
aam
int
cmpsb
inc
sti
add
test
sbbl
sarb
ss
inc
dec
stc
inc
nop
pop
call
shr
jno
insb
les
sub
cmpsl
sbb
in
data16
mov
dec
std
aas
dec
and
cmp
or
and
pop
icebp
les
xor
bsr
sahf
mov
adc
cmp
js
fdiv
outsl
test
loopne
sub
mov
jg
dec
jmp
push
inc
sub
leave
adc
jno
dec
std
lahf
pop
insb
pop
adc
xchg
jbe
jns
and
push
cmpsb
inc
sti
fidivrs
stos
mov
int
stos
mov
push
jb
adc
mov
mov
jns
xor
out
notb
and
mov
cmp
lock
mov
sub
dec
sub
xchg
pop
bswap
aam
jb
mov
push
pop
mov
mov
push
pop
adc
test
lea
inc
mov
sbb
cli
mov
or
pop
mov
cltd
jp
movsb
adc
jmp
mov
cmc
push
jno
dec
pop
int3
adc
mov
mov
add
push
loopne
mov
sbb
mov
out
roll
pop
fdivrl
pop
add
jbe
in
mov
lea
xor
jmp
lea
push
icebp
push
int
dec
movsl
es
popa
out
push
cwtl
insl
mov
sbb
cmc
sub
jne
mov
lret
fstps
arpl
rorl
fidivl
std
jl
sub
loopne
xchg
das
icebp
cmp
loopne
sub
mov
cltd
mov
push
xchg
and
add
dec
fidivl
sub
mov
call
test
adc
and
sbb
in
lock
sbb
xchg
cs
ljmp
int3
push
inc
sbb
subl
mov
decb
mov
or
lret
and
rcr
add
jb
ror
mov
and
nop
aad
lret
inc
mov
adc
pop
mov
cli
int
test
pop
inc
xor
inc
and
jg
dec
movsl
lea
jge
lods
and
mov
mov
mov
subl
cmc
imul
push
sbb
outsb
out
jecxz
xchg
xchg
loop
xor
adc
in
push
in
repnz
subl
cwtl
cltd
xor
insl
cmc
sbb
dec
pop
ljmp
stc
jp
lret
pop
leave
cs
adc
cmp
sbb
push
out
mov
add
ret
faddl
and
jmp
mov
dec
mov
roll
imul
pop
dec
sub
mov
cmc
mov
test
xchg
sbb
lret
fld
xor
ret
and
das
pop
sbb
or
sarb
into
ljmp
fstpt
popa
sti
or
xchg
and
mov
cld
int
mov
xor
adc
shll
outsb
cs
inc
inc
sbb
or
mov
sahf
xchg
rclb
fst
xchg
int3
bound
sti
inc
dec
xchg
sub
xchg
xchg
mov
mov
mov
adc
inc
imul
or
pop
push
xor
jo
jp
popf
popf
xor
movsl
sbb
add
cmc
enter
mov
std
cmp
jge
push
sub
inc
inc
sub
and
inc
xchg
sahf
dec
jno
add
hlt
ja
lret
ljmp
jg
pop
imul
jne
mov
or
cmpsb
int3
stc
xchg
cmp
mov
jl
xchg
mov
sbb
cld
iret
pop
push
leave
mov
push
pop
dec
call
xchg
inc
add
pop
rorb
adc
movsl
fcomps
scas
mov
adc
inc
sbb
or
mov
lret
bndstx
mov
dec
add
push
mov
int3
icebp
int3
mov
adc
fadds
int3
push
dec
hlt
mov
pop
addr16
int
mov
pop
pop
mov
push
in
xlat
sbb
inc
scas
jne
inc
cmp
test
insb
mov
sub
cmp
push
jl
xchg
mov
rol
adc
push
adc
rorb
ret
xchg
sub
xor
fld
iret
sbb
aad
icebp
lods
pop
lret
xchg
push
divl
faddl
imul
stos
xlat
pop
movsb
lret
jno
mov
push
or
jmp
sbb
cld
sbb
jns
push
mov
lcall
movsb
cli
fcoms
cmp
sti
cmp
jge
fistpl
ffree
xor
and
inc
sub
orl
into
in
ds
jmp
pop
jb
dec
dec
mov
jg
fmuls
pop
pushf
push
dec
inc
out
pop
jmp
sbb
or
fs
or
inc
add
pusha
dec
mov
mov
pop
movsl
int3
mov
popf
xor
cmp
inc
sbb
mov
lock
sbb
test
shll
ljmp
imul
ja
xlat
or
scas
aaa
push
fimull
repnz
jl
cmp
cmpsl
aas
jno
ret
loope
sbb
mov
pop
dec
push
call
loop
ds
cld
sub
ljmp
add
int3
repz
gs
int
mov
lods
cld
inc
adc
sahf
int
fwait
mov
mov
addr16
or
dec
add
stc
xchg
imul
push
into
cmc
lret
sets
std
inc
add
sub
dec
or
pop
jmp
ss
faddl
and
xchg
inc
jb
sub
xlat
cmpsb
jge
mov
dec
inc
dec
pop
inc
cmp
fildll
cs
push
test
push
sbb
jne
push
sbb
pop
mov
dec
shlb
mov
out
lea
inc
sbb
lret
ss
dec
stos
dec
fldt
jle
dec
xchg
data16
mov
sarb
add
test
lahf
cmpsl
pop
jl
inc
cmpsl
pop
lods
test
jne
in
scas
cmp
cld
dec
out
jp
sbbl
adc
adc
imul
and
fnclex
cmp
inc
jle
push
jl
pop
cmpsl
gs
insl
jo
jle
and
mov
imul
jmp
or
test
inc
rcrb
mulb
or
rorl
mov
or
dec
lea
push
dec
mov
sbb
jg
inc
test
cmp
imul
jge
push
push
adc
js
sahf
sub
fildll
sbb
sbb
jmp
push
mov
icebp
push
pop
mov
mov
movsl
push
js
cmpsb
push
lock
mov
stc
inc
into
add
mov
in
notb
inc
fs
sub
mov
rclb
cmpsb
sarl
sub
inc
fcoms
sub
sbb
divb
inc
dec
xchg
inc
push
inc
and
ror
mov
cltd
add
lds
jmp
iret
pushf
push
mov
pusha
dec
fdivr
or
xor
cmp
stos
int
fidivrs
mov
dec
lds
ljmp
push
and
jne
loope
inc
dec
pop
ficompl
sub
sub
test
clc
jle
and
sbb
vminsd
loopne
addl
repz
cmpsl
push
add
jb
mov
mov
cld
ds
mul
sbb
das
sbb
jns
xor
ficoms
xor
shrl
stc
shlb
adc
cwtl
mov
push
add
mov
or
add
xchg
inc
inc
add
roll
ds
pop
dec
fcom
push
test
shrl
movsb
loop
iret
flds
enter
loope
sub
adc
xchg
outsb
xchg
fsubr
jg
push
xor
mov
xchg
ljmp
push
push
xchg
and
stc
xchg
fisubrs
jp
jbe
sahf
subw
push
rol
movsb
xchg
bound
pop
dec
push
in
or
fisubrl
xchg
fldt
pusha
push
inc
jno
gs
in
push
mov
pop
cmp
gs
in
adc
pop
dec
adc
mov
sbb
pop
cld
pop
xchg
fstl
dec
orl
mov
ret
movsl
mov
add
mov
jg
xorb
mov
inc
sub
repz
push
mov
inc
and
in
lret
push
mov
mov
add
pop
in
inc
or
test
push
outsl
xlat
repnz
cmpsl
aas
mov
inc
inc
das
and
jo
adc
xchg
mov
lock
push
ds
adc
mov
mov
mov
mov
pop
push
push
shlb
jg
sub
inc
popa
neg
dec
enter
movsl
push
insb
push
and
lds
rcrl
ret
pop
call
movsb
mov
nop
sbb
ja
shll
adcb
ret
push
inc
or
mov
push
daa
mov
test
sub
jns
in
xchg
mov
in
xchg
shrb
push
bound
je
push
sub
adc
mov
dec
icebp
add
loope
inc
aad
pop
call
test
jl
pop
aam
movsl
add
out
mov
mov
enter
mov
sbb
lea
push
cs
sbb
ret
lock
and
insb
xor
clc
dec
outsb
xor
add
loop
jbe
imul
adc
pop
fs
out
ficoml
push
imul
sub
dec
push
inc
lods
aam
inc
mov
add
movsl
js
and
ret
mov
mov
fs
pop
mov
mov
popf
jmp
jecxz
outsl
xchg
xor
lahf
cmpsl
add
xchg
mov
mov
movsb
aaa
push
lret
clc
adc
dec
cld
dec
xor
je
lret
outsl
fcmovnb
xor
dec
lock
pusha
pop
jp
gs
shll
test
cmp
sub
pop
in
xor
jae
sahf
in
pop
subb
jo
fsubl
mov
out
hlt
rorl
sbb
or
and
sub
add
mov
in
into
mov
clc
push
mov
mov
sti
imul
adc
test
pop
daa
ja
stos
sbb
and
inc
jge
insl
cmp
mov
add
scas
adc
cmp
sub
loopne
and
sub
mov
dec
mov
orl
jne
repz
mov
decb
popa
sub
xchg
pop
jnp
jno
xchg
cmp
mov
imul
stc
push
sarl
fwait
incb
sub
dec
mov
sbb
pop
scas
mov
mov
jp
mov
lea
jns
inc
dec
cmp
mov
or
dec
adc
hlt
addb
pop
push
xor
sbb
jle
or
adc
pushf
jbe
outsb
aam
aam
enter
cmp
in
dec
icebp
jge
adc
cld
jmp
sbb
xor
sbb
out
jnp
pop
xchg
subb
int
mov
xchg
push
cltd
jns
jmp
sbb
ret
xor
dec
outsl
idivb
xor
test
lcall
push
lock
lock
rcr
sbb
sub
mov
lock
jnp
sbb
xchg
cmpsb
add
adc
mov
out
fadds
movsl
scas
push
or
std
aad
xor
jnp
js
add
adc
mov
add
in
out
in
int
mov
int3
sti
ret
sub
leave
outsl
fistps
int3
mov
bound
sbb
es
cwtl
cmp
cmp
pop
fisubrs
loop
inc
pusha
fwait
push
mov
adc
push
adc
loopne
cmp
stc
cmp
movl
or
loop
ljmp
mov
scas
out
mov
sbb
clc
push
mov
mov
mov
mov
pop
push
adc
xor
add
jle
push
sub
lock
adcl
std
jecxz
inc
stos
mov
outsl
movsl
mov
idiv
mov
xchg
mov
fbld
dec
xor
xchg
test
pop
mov
cmpsb
sbb
in
push
fst
lods
and
cmp
mov
push
pop
sub
imul
mov
sub
lcall
test
jl
mov
test
add
xchg
insb
cmpsl
sbb
push
adc
adc
leave
adc
push
cmp
push
insb
jmp
adc
sub
arpl
rcrb
aaa
mov
data16
or
rcrl
mov
enter
xor
dec
push
sbb
lods
sti
adc
or
cmp
mov
mov
push
xchg
and
push
add
push
enter
fs
cld
cmp
ja
add
divb
lahf
sub
loop
xor
cmp
test
mov
dec
mov
xor
sub
sub
sarb
negb
xchg
mov
jae
or
push
cmpsl
mov
mov
jmp
outsb
add
pop
cltd
or
hlt
addr16
jl
in
xchg
xlat
adc
and
imul
dec
lds
pop
lds
popl
bound
dec
or
out
out
cmp
sbb
xlat
dec
adc
sub
mov
mov
mov
cmp
pushf
scas
inc
sub
popf
dec
das
clc
pop
xor
stos
ljmp
jg
mov
xchg
sub
pusha
pusha
popa
lret
fstpl
in
lods
inc
mov
adc
mov
push
xor
push
inc
sbb
lcall
mov
sub
addr16
aas
dec
into
sbb
add
or
outsl
mov
sbb
push
and
and
and
repnz
pushf
popf
rorb
enter
cmp
xlat
stos
push
das
ja
lcall
adcl
dec
jo
insb
andb
outsb
lock
imul
aaa
popf
clc
in
jno
fiaddl
jg
jp
jl
repz
das
clc
bound
call
sub
or
xchg
mov
adcl
aaa
pop
lahf
jg
and
sub
fidivl
inc
shr
jmp
ds
lods
cmp
mov
stos
add
aad
adc
cmc
popa
mov
lock
pushf
xor
scas
rcrl
dec
ficoml
adc
add
stos
not
sbb
sbb
nop
ret
fmuls
add
ret
orl
mov
dec
std
roll
push
dec
sarb
cmp
std
or
sbb
mov
sti
je
nop
incb
jnp
or
fcoml
sub
in
ret
loope
adc
ja
dec
xchg
in
hlt
pop
pop
lock
loope
pop
mov
mov
mov
push
jg
cmp
bound
test
mov
xchg
cld
shr
ftst
rolb
cmp
lahf
bound
cmc
sti
jo
mov
adc
stos
ret
sbb
sbb
xchg
cltd
push
arpl
adc
sbb
inc
jne
cmp
mov
push
push
outsl
out
arpl
mov
sub
out
or
xor
inc
mov
cmpsl
push
jbe
dec
jns
ja
movsl
in
fwait
mov
stos
inc
xor
and
mov
mov
add
cmp
lds
ds
push
inc
jae
mov
test
mov
bound
call
pop
test
repz
out
sbb
or
pop
addl
fstpt
lods
sub
ljmp
shll
arpl
jmp
enter
push
jmp
sub
insb
xor
hlt
push
mov
push
pop
rcrb
adc
sbbb
out
fidivrl
shlb
dec
scas
pusha
idiv
lcall
jecxz
push
xor
lods
pop
lret
and
pand
push
adc
add
arpl
pusha
jmp
int3
imul
mov
out
push
xchg
push
daa
mov
push
adc
out
mov
xor
faddp
mov
pop
push
inc
push
cmp
movb
das
sub
repnz
add
xchg
fcoms
in
push
sahf
push
inc
iret
repnz
repnz
jg
outsl
out
xor
mov
out
sbb
lcall
inc
fsubl
popf
jl
or
out
hlt
adc
std
sub
lcall
pusha
arpl
pushf
sbb
dec
paddw
imul
loope
push
xor
je
das
or
and
push
lds
pop
inc
out
rorb
pop
lock
jmp
cmp
inc
aad
mov
hlt
sbb
mov
popa
xor
mov
sbb
int3
fs
and
nop
fists
dec
ljmp
js
inc
ljmp
fildl
cmp
cmp
aaa
ds
xor
aas
jge
enter
out
inc
xor
push
cmp
shr
sarb
movsl
insb
sub
aam
into
and
mov
or
jge
push
inc
test
imul
cli
dec
cld
int
repnz
lahf
fwait
ja
bound
ret
pop
add
jbe
mov
dec
das
js
or
push
xor
xchg
xchg
pop
mov
lahf
pop
js
lds
cwtl
gs
call
stos
lock
lock
in
sbb
iret
cmpsb
mov
addr16
lock
or
popl
pop
sbb
jge
fidivrl
jp
fdivr
enter
testl
pop
pushf
adc
and
push
mov
sbb
nop
and
mov
cmp
mov
jle
mov
inc
fwait
in
je
stos
mov
imul
outsb
ret
push
pop
pop
out
outsb
adc
enter
int
aam
in
mov
push
aas
cmc
push
das
xchg
les
xor
rcrl
shl
jg
lret
inc
xchg
int
enter
arpl
mov
aaa
add
scas
xor
or
je
fildll
arpl
pop
and
jno
push
jle
lcall
mov
cmpl
pop
and
shlb
dec
cmp
push
push
roll
cmc
shr
stos
push
repnz
jmp
push
add
adc
pop
nop
and
push
out
test
xor
jp
jo
xchg
loop
in
loope
lahf
jp
andb
mov
cltd
push
scas
test
mov
in
ret
fwait
jne
mov
push
lret
fcmovbe
adc
jp
arpl
pop
push
pusha
sbb
test
cmp
jge
into
sub
adc
mov
lcall
add
and
arpl
jne
cmova
add
loope
div
xchg
daa
stos
pop
call
and
mov
mov
loopne
xchg
push
adc
insl
cwtl
inc
frstor
mov
stos
sub
add
mov
xchg
jp
ljmp
mov
add
push
rcrb
popf
mov
mov
into
insb
and
enter
cmp
cmpsl
dec
xchg
mov
scas
cmp
mov
pop
shlb
in
push
dec
jl
daa
mov
jmp
leave
inc
pop
jns
or
outsl
stc
sub
dec
and
push
test
mov
in
xchg
inc
push
test
lods
cmpsb
cmp
add
cmpsl
pop
fidivl
cmp
iret
push
jle
leave
lock
pop
jecxz
cmpsb
and
mov
xor
rclb
pop
mov
loopne
mov
into
jg
dec
sti
popa
dec
nop
scas
clc
ret
aaa
push
loop
sub
cltd
push
cli
cmpsl
out
das
add
mov
stc
pop
push
xchg
xchg
xor
pop
adc
dec
mov
stc
in
je
mov
out
out
sbb
rolb
gs
xlat
sbb
lcall
jle
call
pop
pop
call
xchg
sbb
sbb
cmp
mov
daa
fstl
ja
std
aad
sar
or
pop
mov
adc
sub
lret
in
fwait
imul
rorb
cltd
inc
cwtl
jmp
jge
jecxz
idiv
cmp
xor
ret
push
dec
ja
or
or
push
mov
inc
pop
cmpsl
out
mov
dec
shlb
in
push
ret
dec
pop
pushf
cs
gs
int
mov
in
jle
cmp
push
aad
scas
push
aas
nop
popf
lahf
iret
popa
aaa
jp
pop
adc
xor
xlat
lock
xchg
mov
mov
sbb
sbb
and
shl
sbb
pop
leave
sub
xor
add
fidivrs
sub
xchg
out
adc
jb
ret
dec
xor
sarb
and
mov
adc
xchg
mov
daa
inc
idivl
mov
sub
jle
dec
jnp
lods
pop
mov
adc
adc
pusha
pop
cmp
shl
pop
xchg
mov
pushf
test
loope
out
andl
mov
mov
and
mov
jns
mov
enter
xchg
xchg
sub
pop
jg
in
sti
xchg
mov
push
dec
jecxz
rorl
cmc
cmp
dec
jbe
sub
push
and
incb
rcl
add
ret
int
out
dec
fstp
arpl
scas
mov
into
and
cltd
std
ja
cmp
in
arpl
lea
xchg
in
rclb
ja
sar
imul
cltd
xor
add
cwtl
adc
into
push
jae
lahf
pusha
add
aas
js
insl
mov
dec
out
sahf
in
movsl
clc
mov
sbb
mov
nop
popa
mov
push
subl
pcmpeqd
cltd
and
sub
pop
push
mov
mov
lds
jno
not
jge
iret
lea
sarl
mov
popa
adc
in
xchg
pop
rcrl
xor
cwtl
gs
lcall
rep
rcl
push
dec
movsl
xchg
xchg
add
fdivr
outsl
outsl
in
addr16
dec
outsl
cmp
jecxz
xchg
adc
lcall
xor
sbb
mov
ret
adc
fcmovne
mov
or
xorb
ds
cwtl
jl
fldlg2
xchg
sbbb
mov
sub
outsb
mov
divl
lods
jbe
push
jnp
pop
xor
daa
inc
adc
in
shrb
sub
and
enter
jge
aas
repnz
mov
dec
pop
cmp
lret
js
insb
addr16
inc
stc
xor
iret
dec
lahf
cmp
xchg
sbb
cld
lock
cmpsb
pop
inc
mov
add
in
add
jmp
fwait
xchg
leave
clc
insl
mov
adc
push
in
lret
ljmp
dec
gs
pop
sub
mov
cmp
push
push
mov
xlat
jle
and
jmp
mov
or
mov
rclb
jmp
dec
aas
dec
add
loope
movsl
test
dec
pop
fidivrl
arpl
out
push
or
outsl
cmp
xchg
xchg
mov
push
xchg
out
mov
mov
das
and
adc
mov
repz
addb
dec
xor
xor
sar
aad
movsl
xlat
test
test
xor
push
pop
stos
adc
ds
push
mov
int
pop
xor
jg
add
es
lret
mov
popl
jbe
inc
js
cmp
mov
mov
add
nop
xor
sub
xchg
lea
jecxz
jg
push
adc
jmp
es
pop
jge
or
sub
popa
jo
in
rcrb
mov
sti
mov
bound
or
pop
inc
addr16
xor
sub
dec
rol
bound
jg
cmpsl
jecxz
ret
xor
clc
outsl
sar
xchg
out
push
int3
and
loopnew
inc
push
jae
int3
add
push
stc
jb
xor
push
inc
push
or
cmp
subl
dec
cmp
shrl
out
adc
into
mov
or
inc
sbb
dec
stc
lods
mov
pop
fstl
iret
dec
je
stos
inc
lea
test
sbb
mov
cmpb
aad
mov
cltd
aaa
pop
mov
jb
cmp
dec
in
daa
jmp
push
fiadds
xor
sub
notl
jb
loopne
and
sti
lea
insl
ret
rorb
inc
xchg
dec
ja
sar
sub
xor
jbe
sar
sbb
movsb
cmc
rcrl
ret
sub
sbb
cltd
out
stos
mov
or
pop
add
aaa
sub
cmp
pop
push
pop
push
inc
cmpsb
lea
adc
lret
pop
loopne
and
xchg
fnstsw
push
scas
xor
pop
sub
adc
xchg
mov
ret
dec
dec
in
fsubr
test
scas
outsb
adc
out
aaa
jmp
mov
outsl
daa
out
xchg
xlat
xor
nop
and
insb
or
rcrb
mov
test
dec
pop
add
outsb
fwait
mov
cmpsl
cld
daa
or
xchg
nop
test
inc
std
into
push
cwtl
xchg
sbb
push
xor
inc
aad
pusha
push
add
in
mov
lret
mov
ljmp
jmp
shlb
mov
mov
das
movsb
and
inc
sti
cmp
inc
idivl
insl
push
es
lcall
in
test
push
in
inc
cs
lcall
popa
jmp
push
aam
mov
outsl
popw
push
daa
icebp
pusha
lret
loope
es
inc
popf
jnp
inc
rcrl
test
notb
inc
push
mov
xchg
ret
cmp
ret
dec
gs
or
sti
fs
pop
loopne
lods
inc
outsb
outsb
clc
push
sbb
add
pop
hlt
inc
dec
cmpsl
pop
lods
addr16
subl
icebp
adc
nop
inc
js
inc
cld
jge
pop
pop
pop
push
sub
adc
inc
mov
popf
mov
push
fs
mov
sti
mov
jnp
jecxz
xchg
mov
fildl
scas
repnz
and
jne
int
stc
addr16
and
sbb
outsb
add
rclb
jne
mov
push
std
pop
rorl
inc
jb
mov
gs
add
jp
inc
adc
jl
xor
imull
lret
rcrl
and
or
fs
sub
dec
ret
sbb
popf
pop
or
and
pop
cmc
cmpsb
or
test
sub
add
cmp
jae
pop
lahf
test
pop
repnz
fistpll
jge
xchg
push
sbb
inc
mov
add
aaa
jg
sarl
cmp
fs
rcrb
mov
push
mov
or
push
in
push
jle
pop
cmp
fs
push
es
inc
adc
add
jo
outsl
clc
pop
pop
jae
in
jb
add
mov
shrb
icebp
push
bnd
add
pushl
outsb
test
xchg
insl
sub
fdivs
stos
and
jg
adc
mov
out
push
dec
outsb
and
push
decl
je
sub
push
nop
out
lret
int3
lret
dec
test
jmp
and
jmp
adc
jae
mov
ds
rcrb
shld
aas
fists
sub
lret
xchg
imul
mov
pop
mov
push
push
cmp
inc
mov
out
stos
jae
aad
inc
lcall
sbb
mov
jl
je
jmp
mov
cmp
scas
rcrb
data16
adc
pop
and
ret
xchg
out
push
mov
cmp
sarb
inc
push
pop
and
push
enter
mov
pop
lret
pop
jbe
cs
add
inc
pusha
fcmovb
jge
pop
scas
inc
and
lea
and
pusha
pop
dec
and
scas
sub
or
push
adc
mov
pop
lahf
adc
inc
cmc
cmpsl
pop
adc
adc
inc
push
movsl
and
pop
mov
lods
outsb
sub
inc
lds
sbb
xor
mov
push
cmpsl
lret
inc
and
jp
dec
icebp
mov
xor
add
inc
cwtl
pop
aas
das
gs
and
sbb
xor
push
roll
int
aaa
push
inc
mov
inc
jle
jg
mov
icebp
adc
repnz
lods
or
or
sti
pop
aaa
xor
jp
out
cltd
dec
dec
fnstsw
mov
in
sbb
popa
lret
add
lds
addb
popf
repz
stos
xchg
call
pop
xchg
mov
dec
lcall
cmp
nop
lea
lahf
pop
loop
cmc
icebp
add
rcrl
arpl
call
pop
cltd
setp
or
test
dec
jg
xchg
movsl
rcrb
dec
dec
shll
mov
xchg
test
outsl
mov
add
xchg
dec
mov
mov
xchg
push
cmpsb
jmp
shl
les
inc
out
sbb
rolb
shlb
jne
cmp
sbb
sub
test
cltd
sbb
jb
inc
int
push
repz
es
cmp
popf
outsb
sub
inc
test
out
inc
mov
stos
pop
sbb
scas
int
mov
fwait
dec
mov
cmpsl
mov
cmp
call
ret
in
inc
enter
cmp
mov
ret
jne
mov
lret
scas
clc
add
dec
mov
rol
or
das
inc
cmp
add
insl
sub
add
ret
fs
sub
jl
out
bound
xchg
mov
dec
push
fs
cli
cmc
popf
pop
fimuls
xchg
leave
add
aaa
adc
insl
push
inc
push
jne
lea
enter
ret
in
stc
das
xchg
scas
cmp
and
mov
cmp
adcb
icebp
sbb
ret
aas
push
sarb
insb
cs
mov
ss
or
mov
sub
cmpsb
lods
push
aaa
add
iret
stos
arpl
push
jecxz
nop
and
jle
arpl
sahf
sbb
jg
hlt
outsl
jg
int3
xor
lock
icebp
out
push
pop
repnz
mov
pop
xorb
orb
and
in
cmp
cmpsb
xchg
dec
mov
xchg
dec
sar
test
pop
outsb
pop
stos
adc
ljmp
cmp
xchg
int3
xor
inc
mov
cmp
ss
les
jb
imul
sub
lret
sub
es
jae
cmc
je
or
push
push
inc
sbb
adc
insb
test
lcall
ret
pop
mov
inc
add
test
sti
xchg
sub
and
sbb
leave
out
fdivs
or
push
dec
fcmovnb
loope
and
and
scas
lods
iret
xchg
jge
add
or
sahf
test
mov
mov
jl,pt
enter
test
cmp
lret
mov
pop
mov
stos
stos
or
insb
enter
and
lods
cltd
inc
int
sub
js
mov
jns
das
cmc
xor
sub
daa
xchg
scas
dec
adc
adc
mov
rorb
repz
dec
cmp
test
dec
fs
xor
data16
xor
pushw
inc
lret
aad
ja
shrb
mov
gs
pop
inc
shlb
mov
jge
pusha
push
inc
fwait
mov
or
int
mov
sub
shl
les
cmc
jge
mov
imul
test
cwtl
mov
bound
fwait
popa
push
out
popf
push
insl
mov
cld
or
notl
xor
and
jg
das
mov
test
mov
xchg
pop
in
inc
popa
pusha
mov
pop
xchg
nop
mov
fst
push
push
pop
dec
aad
push
les
mov
push
jle
ja
insb
jno
push
mov
inc
aad
cwtl
imul
movsb
or
adc
push
push
test
pop
rorl
mov
pop
push
xor
pop
dec
scas
jns
in
xchg
mov
and
or
mov
aam
mov
and
xchg
jns
inc
inc
pop
imul
das
dec
push
push
iret
xchg
adc
lods
int3
mov
and
cs
lcall
cld
into
cmp
jge
push
push
shl
xor
pop
rclb
dec
in
js
jmp
mov
fnstenv
lcall
mov
or
and
cmp
inc
push
mov
jns
hlt
mov
mov
push
clc
push
popf
add
rorl
icebp
mov
addr16
je
loope
cwtl
movsb
andb
push
lods
push
push
fmul
xchg
sbb
dec
mov
into
hlt
xlat
notb
push
dec
pop
xor
mov
dec
scas
xchg
sub
push
sbb
repnz
add
pusha
cs
ljmp
in
push
sbb
int
fiaddl
jnp
xor
dec
cld
mov
decb
lcall
lock
mov
dec
mov
mov
popf
add
add
test
push
cmp
xchg
xlat
mov
out
push
dec
push
and
xchg
repz
dec
adc
test
inc
and
pop
cmpsl
out
mov
sbb
pop
add
arpl
ret
scas
sbb
lcall
push
push
test
pop
ja
push
push
sti
loop
scas
sub
int
cmp
outsb
push
repz
iret
push
adc
xor
dec
lcall
aas
shl
adc
xor
jp
in
fdivr
jae
movsl
inc
dec
dec
inc
adc
push
aaa
jmp
pop
push
fmul
sbb
inc
fcompl
lods
mov
fistpl
lds
sub
push
aaa
outsb
cli
sub
insb
mov
sbb
in
xchg
das
jmp
cs
push
call
xor
sbb
ret
or
lea
dec
add
xchg
cmpsb
nop
mov
inc
mov
mov
cmpsb
das
xor
rclb
inc
mov
pushf
inc
sub
sbb
in
sub
imul
gs
fistpll
lods
lds
adc
call
or
pop
sbb
sbb
lock
jl
fdivrs
lahf
mov
mov
pop
dec
rorb
ss
mov
xor
outsl
in
sbb
inc
mov
mov
and
xor
js
mov
mov
sahf
in
testl
cmp
fwait
outsl
sbb
cwtl
push
dec
push
movsb
jge
lds
push
jnp
xchg
mov
ret
push
das
adc
and
sbbb
or
xor
jmp
jo
push
push
mov
or
xchg
mov
fwait
sbbl
lahf
ss
fstpt
clc
mov
ds
test
inc
out
pop
and
sbb
out
pop
hlt
mov
test
dec
pop
jecxz
fcompl
jae
mov
pop
pop
pop
add
daa
dec
pop
fisubs
sub
imul
out
je
cmp
add
cld
jo
add
ja
cltd
sub
imul
adc
arpl
jns
divb
lret
fcmovnu
imull
add
or
push
mov
cmp
out
sbb
xchg
inc
cwtl
sbb
fisttpl
mov
dec
mov
loop
or
xchg
cli
sub
dec
mov
test
sbb
outsb
mov
iret
out
daa
mov
aas
cltd
xchg
cmp
popf
xchg
pushf
dec
repz
inc
stos
push
sbb
mov
fisttpl
pop
sbb
add
mov
jmp
rolb
dec
std
mov
dec
xor
mov
ret
inc
mov
jno
mov
mov
iret
adc
bound
clc
pop
adc
jp
cmpsl
js
jne
mov
fmuls
cmp
shll
icebp
out
cltd
das
cmp
dec
fdecstp
mov
sub
fmull
jmp
pop
or
sarb
xor
pop
das
jmp
aam
or
dec
or
mov
sbb
mov
or
dec
lcall
out
dec
pop
stc
mov
dec
aam
inc
sub
std
loope
mov
hlt
mov
xor
adc
xor
push
out
daa
ret
adc
sub
into
add
inc
lods
out
daa
pop
push
repz
mov
fmull
push
or
lahf
sub
fmuls
pop
repnz
in
into
cmp
or
inc
mov
in
dec
push
xor
movsl
imul
mov
icebp
cld
sti
inc
inc
fdiv
repnz
cmp
loopne
in
cltd
dec
stos
xor
leave
pop
or
xor
mov
push
cmp
das
inc
test
or
frstor
outsb
cld
jne
cmp
add
sbb
iret
daa
fsts
xchg
or
inc
sub
lahf
call
vmread
jl
jmp
call
test
xchg
or
lea
mov
mov
pop
lret
xchg
cli
rolb
in
or
sbb
cmp
sarb
shr
imul
add
cmp
ja
xchg
and
sbb
mov
pop
scas
test
rol
xor
mov
out
and
insb
pop
xchg
lods
jge
enter
push
lods
aaa
jmp
sbb
or
pop
test
xor
and
adc
insb
sub
test
cmp
repnz
mov
sbb
mov
int3
mulb
into
call
aaa
mov
fsubs
mov
into
sbb
cmp
iret
imul
mov
aas
aas
bound
lcall
cwtl
jge
insb
jmp
or
fildl
xchg
push
mov
aad
pop
int3
xchg
iret
cmp
js
jmp
push
test
loope
les
sub
inc
out
cld
adc
and
xchg
fistpll
stc
out
jle
mov
or
data16
jb
fdivr
pop
in
jmp
imul
dec
xchg
jl
sub
fs
jmp
fbstp
lcall
in
push
sbb
jne
mov
add
xchg
adc
fisttps
mov
dec
leavew
sub
add
sub
adc
imul
mov
int3
mov
cmp
or
lahf
sbb
dec
test
js
fsubrl
pop
icebp
imul
mov
mov
fwait
leave
adc
loop
cmp
ds
adc
mov
lret
mov
movsb
push
or
adc
fisttpll
push
push
xchg
inc
sarb
jl
int
out
mov
dec
inc
das
push
jp
or
inc
shr
pop
or
loope
mov
cltd
into
aaa
call
inc
inc
imul
cmp
aam
pop
xchg
repnz
push
xchg
add
cmp
jne
cmc
es
mov
mov
shl
mov
mov
in
pop
lcall
aaa
stc
les
xor
or
mov
inc
sarl
lods
sub
stos
mov
add
sub
rol
mov
movl
mov
dec
cmp
push
push
mov
aam
cs
repnz
sub
xor
js
jbe
adc
xor
inc
mov
xlat
xor
mov
and
xchg
sahf
push
xor
int3
pushw
sahf
sbb
xchg
pop
cltd
out
dec
xor
dec
or
adc
sbb
pop
push
push
mov
jg
les
es
jmp
clc
int
push
xor
sub
imul
rcrb
in
jecxz
inc
xchg
adc
das
subl
fdivs
into
push
mov
cmp
out
dec
loopne
nop
xchg
inc
std
push
adc
jae
ds
js
push
lds
jno
test
mov
mov
xor
or
dec
jmp
jno
iret
inc
sti
lcall
sbb
sbbb
cld
lea
adc
das
stos
cmp
adcb
pop
dec
xorb
mov
pop
or
lea
mov
jge
pushl
shll
mov
notl
mov
arpl
add
xchg
insb
shlb
push
mov
insb
mov
add
stos
jne
fwait
xchg
call
jp
xor
cmp
fs
fwait
aaa
movsl
in
ret
add
mov
adc
or
das
pop
popa
ret
xchg
loopne
mov
lds
sub
roll
fisubrl
xchg
mov
arpl
shlb
ret
js
jb
xor
inc
dec
rcrl
gs
in
loop
imul
adc
dec
mov
mov
popf
repnz
jge
push
xchg
add
outsb
xchg
add
addr16
add
jbe
mov
sbb
cltd
rolb
push
push
adc
fsubs
adc
notl
push
pop
adc
ljmp
pop
int3
adc
inc
repz
sub
stos
xchg
mov
push
ds
xor
mov
aas
jo
stc
out
or
pop
adc
cmc
mov
xor
mov
jo
mov
fildll
mov
push
sbb
add
mov
sbb
pop
xchg
jecxz
je
hlt
in
ret
aam
lahf
xor
xchg
sub
mov
movsb
dec
jbe
icebp
lods
inc
push
repz
dec
mov
and
push
je
arpl
dec
mov
movsb
ret
negb
mov
fs
push
das
push
out
les
subb
dec
adc
or
sub
lea
inc
sub
jle
cmp
dec
mov
sub
sbb
int3
xchg
test
jge
mov
sub
push
pop
lahf
sbb
lds
and
popl
bound
pop
mov
sete
ss
xor
dec
rcrb
fldt
push
lods
jg
sarl
sub
and
cli
andb
add
sbbb
movsb
pop
xchg
dec
clc
std
imulb
pusha
mov
negb
movb
or
jb
jne
int3
rolb
mov
repnz
aas
stos
sbb
jl
mov
jl
push
sbb
inc
sbb
xchg
jmp
test
sbb
jecxz
adc
xchg
int
inc
aad
xchg
cmp
cld
push
fwait
rorl
out
mov
lret
inc
dec
test
lret
repz
das
xor
mov
sub
out
jg
push
jne
outsb
or
ficomps
cmc
dec
pop
dec
std
clc
sub
movl
daa
sub
add
call
stos
gs
push
pop
ret
rcrl
mov
push
push
jl
icebp
in
or
outsb
jnp
push
lock
jge
inc
mov
shlb
cmp
jmp
mov
test
xchg
mov
add
cmp
int
or
or
push
outsb
push
orl
adc
inc
test
dec
ret
inc
xor
push
jns
ss
sbb
cld
jbe
leave
pop
pop
ja
inc
stos
mov
insl
push
cmpsl
popf
in
jge,pn
fwait
hlt
push
fisubs
cmpsb
push
lahf
push
shr
xor
fcomps
mov
xchg
pop
pop
test
pop
shll
sub
and
ss
dec
jg
pushf
out
inc
jno
inc
push
add
pop
push
xchg
mov
mov
mov
push
aam
mov
sub
sbb
mov
loop
pop
add
xchg
sbb
mov
mov
mov
mov
into
js
sar
ret
inc
addr16
pop
popf
xor
addr16
xchg
and
bound
fisubl
jle
sub
sub
mov
inc
inc
xor
xchg
cmp
or
inc
and
rcrb
jns
popf
jp
pop
mov
scas
loopne
enter
js
in
sbb
jae
movsb
or
lret
aam
mov
cmp
lcall
jecxz
sbb
dec
sbb
mov
fwait
ret
out
pop
gs
lds
jne
xchg
loopne
add
js
enter
sub
cwtl
and
mov
xor
loope
jne
jmp
inc
in
jns
leave
pop
fcoms
xchg
sbb
adc
lret
lea
add
lret
mov
push
fcmovbe
push
pop
movsb
mov
sub
lahf
lcall
cli
inc
rorb
outsb
or
ljmp
cwtl
cmp
mov
std
fs
clc
push
or
ds
fcompl
outsl
mov
out
scas
hlt
cwtl
lods
mov
cmpsb
dec
push
movsl
out
mov
xor
and
adc
fs
popf
pop
pop
dec
cmpl
jae
mov
mov
mov
stc
xor
lahf
xlat
data16
test
sub
push
out
ss
jl
xor
push
inc
jae
bound
shlb
ds
fs
inc
nop
loope
sti
mov
cmp
or
or
push
lcall
insl
fadd
xor
push
ljmp
into
mov
mov
mov
jecxz
jle
out
icebp
in
popf
jmp
fs
dec
mov
repnz
mov
inc
cwtl
xorb
ss
rclb
movb
cmpb
adc
add
rcrl
mov
fimull
ss
cmp
jmp
loopne
addr16
cli
mov
cmp
in
mov
sbb
loop
cli
ja
std
mov
or
pop
pop
mov
outsb
imul
jmp
in
cltd
test
add
cmpsb
filds
rclb
lock
mov
sub
mov
jge
lcall
xor
xor
dec
pushf
sub
pop
mov
xor
mov
ja
xorl
sar
cmp
pop
inc
and
rorl
dec
mov
mov
push
dec
mov
call
xchg
fdivrs
sti
rol
jb
pop
fidivrl
and
pop
pop
aad
pop
pushf
push
add
popf
sahf
imul
xchg
sbb
adcb
xchg
and
insb
std
sti
pop
push
push
sub
adc
push
test
jecxz
nop
push
popf
mov
outsb
mov
push
mov
cmp
rcll
inc
in
ds
loopne
xchg
xor
ja
in
dec
adc
or
mov
clc
xor
out
lods
pop
fcompl
adc
shlb
popf
xor
sbb
sbb
sarl
add
bound
dec
adc
js
das
xor
pop
es
sahf
ffree
fcoml
xchg
sbb
jne
insl
icebp
mov
xor
out
rcl
pop
inc
xchg
fdivs
jnp
jbe
fs
icebp
cmpsl
aas
xor
ds
jge
insl
lahf
mov
mov
inc
pushf
mov
ud0
cmp
inc
push
sub
xchg
pushf
imul
mov
aas
pop
push
movsl
xor
mov
lods
stc
aas
jecxz
fimull
jmp
ror
mov
out
loop
adc
add
xchg
jne
cld
or
mov
addr16
mov
scas
or
stos
scas
mov
push
aam
adc
mov
test
ljmp
and
mov
push
mov
out
sbb
sbb
lahf
sub
in
pop
je
jmp
adc
or
fmulp
xchg
pushf
adc
sbb
es
outsb
fxch
gs
pop
sbbb
repnz
out
dec
mov
fnstenv
outsb
xchg
or
enter
or
push
leave
xlat
push
and
and
mov
pop
shrl
or
mov
pop
mov
or
or
lahf
fdivrs
aad
jle
xor
jmp
test
sub
jnp
xor
xchg
inc
inc
push
inc
out
fcompp
es
push
pusha
push
lret
pop
lahf
push
insl
mov
jno
inc
pop
sahf
inc
and
call
popa
cmp
sub
adc
add
push
sarb
icebp
jge
mov
lret
pushf
mov
push
mov
fs
sub
stos
gs
sbb
shrb
or
inc
aad
lock
or
jmp
ljmp
inc
bound
insl
pop
sub
mov
mov
lock
add
test
fwait
adc
inc
jmp
add
mov
dec
add
insl
iret
mov
scas
sub
pop
mov
or
fisubl
push
rorb
imul
repnz
sbb
mov
ljmp
inc
or
lea
test
xchg
adc
add
push
push
push
and
mov
jg
leave
pop
xor
stos
call
fs
cmp
data16
mov
cmp
inc
cmpb
add
shrl
stos
insb
js
repz
out
es
ret
and
xchg
dec
int3
mov
imul
and
jns
mov
adc
mov
shll
push
scas
or
lret
orl
insl
jno
dec
mov
or
mov
adc
dec
mov
cmp
lods
stos
stc
mov
sub
imul
int
push
fildl
out
adc
fmuls
dec
dec
pop
push
and
mov
xchg
ret
push
repnz
xorl
pop
inc
mov
das
jbe
cwtl
cmp
sbb
into
ds
les
pop
and
jp
add
orl
xchg
xchg
ficomps
fsubs
mov
pop
lods
inc
sbbb
mov
push
aad
fiaddl
xchg
push
xor
cmpsb
aaa
roll
repz
cltd
daa
mov
or
loopne
dec
dec
mov
int
gs
xor
and
imul
push
sbb
dec
push
mov
lret
push
push
jp
cmc
xor
pop
lock
in
xchg
jae
aam
testl
xchg
or
dec
and
aad
clc
xchg
repnz
lea
jae
add
adcb
sub
call
mov
cwtl
pop
insb
into
je
inc
jnp
sahf
xlat
push
ret
pop
sti
imul
sub
adc
inc
lahf
inc
stos
fldln2
aaa
inc
sbb
pop
mov
jne
movsl
or
pop
adc
pop
nop
xchg
jecxz
cmp
cmp
push
xor
inc
xchg
icebp
loop
or
in
out
mov
dec
in
mov
inc
xchg
in
xchg
adc
push
sahf
das
or
jle
insl
in
int3
in
jae
out
push
cli
jge
or
dec
and
cltd
mov
adc
adc
jl
clc
mov
dec
xor
dec
xchg
dec
dec
clc
xchg
adc
sub
std
dec
pop
js
sti
cmp
rcll
dec
shl
xchg
pusha
xchg
mov
sbb
ret
sahf
das
aaa
test
add
and
xor
sar
leave
mov
mov
jns
pop
push
jb
cmp
test
add
movsl
xor
jmp
add
pop
xorl
fcomps
ja
js
add
add
or
mov
lods
popf
out
leave
add
and
and
xor
sub
pop
mov
push
dec
inc
cmc
cwtl
jae
and
cmp
push
push
mov
lods
cmp
sub
out
jae
lret
out
insb
pop
cmp
cmc
imul
mov
psubb
cmp
stc
ret
cmp
ret
jle
mov
fmuls
cmp
xchg
fadds
sub
push
fisubrl
shrb
adc
push
jecxz
jns
cmpsl
ret
fcompl
ret
xor
imul
or
xlat
gs
sub
or
lds
sbb
sub
push
adc
out
scas
ds
mov
pushf
mov
adc
in
daa
out
out
das
jl
xchg
inc
inc
ja
fwait
mov
stos
cli
cli
xchg
pop
xchg
dec
cs
xchg
push
push
sub
arpl
xlat
loopne
pop
enter
inc
arpl
fnstcw
dec
jae
hlt
and
push
call
loope
jge
in
lods
sub
or
push
mov
add
sarl
hlt
ret
scas
out
and
jnp
add
push
test
inc
movsl
test
dec
out
mov
sbb
out
sub
insb
icebp
mov
imul
cwtl
mov
insl
and
inc
push
ret
sbb
nop
icebp
xchg
jecxz
dec
mov
sub
mov
sbb
adc
add
add
ja
orb
ret
push
idivb
test
lods
shll
mov
push
fwait
sub
lret
adc
in
xor
out
pop
push
rcll
add
push
mov
int
push
push
into
mov
or
arpl
sbb
ret
jns
jl
xor
cmp
scas
les
jno
push
pop
push
adc
rcr
repz
std
inc
ss
in
pop
dec
enter
fildll
arpl
icebp
rcl
mov
xchg
gs
das
sub
xchg
mov
test
pop
orl
les
adcb
adc
xor
mov
or
hlt
iret
lods
cmp
sub
jg
push
sahf
mov
arpl
lds
xchg
popa
test
pop
add
mov
push
loope
rcrb
push
cmp
xchg
push
out
cltd
jb
and
dec
add
es
jnp
push
cwtl
mov
jae
imul
push
xor
rorl
pushf
xor
cmp
pop
adc
sbb
mov
dec
or
inc
xchg
jno
in
aaa
mov
mov
int
aad
nop
hlt
imul
cltd
int
push
scas
into
dec
or
jecxz
daa
cld
mov
das
in
aas
jg
jno
je
and
jmp
fwait
inc
inc
loopne
mov
add
sbb
sub
mov
cltd
jae
dec
hlt
pop
and
rcr
sbb
push
and
xchg
jns
div
or
and
adc
ror
or
and
sub
adc
inc
add
fadd
mov
fmull
sub
gs
addr16
sbb
rorl
ret
into
pop
jl
xchg
es
or
push
pop
mov
nop
jg
int3
lea
add
xor
xor
mov
mov
fdivs
fnsave
mov
icebp
xchg
mov
aam
gs
adc
mov
pop
add
repnz
es
or
in
imul
call
xchg
adc
cmc
ficoms
inc
jp
lcall
es
fisubrl
cmc
mov
xchg
scas
xchg
ret
out
movsb
add
sti
cmpsb
pop
push
jo
imul
fisttpll
in
xor
outsl
mov
test
push
pop
ret
inc
cmp
or
cltd
adc
pop
mov
lahf
push
rol
dec
add
cs
cmp
xlat
sbb
cmp
cld
mov
pop
jecxz
mov
popf
inc
or
stc
out
imul
xor
sub
jnp
jnp
or
push
int
icebp
and
or
sbb
jge
popa
clc
fsubs
push
mov
cwtl
xchg
jb
pop
shrl
aad
pop
pop
mov
scas
and
inc
mov
test
rcrl
jg
sbb
in
push
shll
jns
stos
fwait
or
or
pop
test
sub
push
aad
sbb
mov
push
fnstsw
cmp
repz
fwait
sub
mov
sub
gs
scas
loopne
sahf
dec
je
stc
int
test
jno
ds
out
sub
je
aas
xchg
mov
ja
ss
sbb
xor
repnz
add
notl
scas
adc
sbb
out
test
in
popf
dec
popf
xor
mov
scas
dec
loope
xchg
pop
pop
ss
clc
adc
lods
addb
push
xchg
pop
insb
orl
sub
adc
fstpt
xlat
push
mov
fisttpll
inc
cmpsl
dec
inc
sbb
imull
pop
dec
jmp
pop
jae
sbb
cmp
notb
jnp
test
pmaxsw
bound
rorl
out
in
lock
pop
movsl
pusha
mov
inc
pop
mov
mov
repnz
out
mov
cmp
stos
mov
pop
out
sub
mov
nop
in
jns
jle
xchg
add
add
imul
inc
mov
dec
repnz
stc
mov
fsubrp
ret
stos
pop
out
icebp
inc
sbb
jge
test
pop
lds
jecxz
push
ror
divb
dec
stos
pop
aas
push
and
dec
dec
pop
jg
testb
test
enter
jnp
aas
int3
idivl
shlb
xor
inc
ss
pop
pop
popa
pop
test
xchg
mov
in
mov
jg
jl
bnd
or
jne
aaa
cmp
shr
inc
ja
stos
rcrb
push
and
sbb
pop
pop
aam
js
mov
imul
popa
xchg
ljmp
mov
jl
in
mov
ja
mov
insb
adc
push
xchg
cmpsl
dec
pop
jp
subb
shrb
mov
pop
ret
shr
in
dec
sbb
push
jg
ja
popa
pop
scas
dec
cld
or
mov
push
faddl
pushf
repnz
cmpsl
push
jne
jg
adc
push
add
clc
xor
xchg
jae
fcmovbe
stc
xchg
movsb
and
imul
into
push
xchg
stc
mov
cltd
ret
inc
data16
inc
dec
mov
hlt
add
insl
mov
fisttpll
add
in
push
clc
dec
adc
fsubrs
add
int
inc
adc
pop
jmp
or
sbb
or
jmp
ljmp
sbb
add
xchg
popa
je
mov
jp
stc
out
xchg
fcoml
cmp
inc
mov
sub
out
sarl
lahf
push
jbe
sbb
inc
in
cld
adc
push
push
daa
mov
test
dec
pop
mov
adc
idivl
jae
xchg
shlb
push
sub
in
add
mov
aam
or
lcall
inc
addr16
ss
repz
cwtl
aaa
xchg
sbbl
call
cltd
mov
cmc
mov
push
mov
cmp
push
pop
and
aaa
push
addl
pop
sbb
pop
mov
out
repnz
xchg
mov
das
arpl
add
stc
js
mov
sub
jg
xor
cvttps2pi
push
rolb
wrmsr
dec
fsubs
notb
aam
mov
out
repz
cmc
imul
add
cmp
out
xor
outsb
cmp
adc
lcall
lret
or
xchg
in
jo
add
dec
dec
jmp
jns
push
mov
pop
test
ds
cmc
dec
jmp
sub
pcmpgtb
or
shr
pmullw
lods
jbe
jo
mov
pop
push
xchg
mov
pop
mov
lods
mov
and
push
jecxz
int3
pop
sbb
popa
jp
test
mov
mov
repnz
push
popf
mov
movsl
idiv
je
add
mov
jo
test
add
shll
jo
inc
jne
cmp
and
push
bound
pop
scas
or
add
test
mov
mov
and
mov
imul
xchg
cwtl
xchg
addr16
xchg
mov
nop
sbb
nop
test
lods
jle
scas
nop
mov
xchg
adc
shr
fisubl
cmpsl
mov
fistl
fcomp
sbb
lock
push
movsb
data16
ljmp
mov
push
in
mov
xor
mov
adc
mov
scas
sbb
ror
sbb
jae
xor
cmp
insl
aas
cmp
testl
test
pop
rorb
xor
or
fwait
sbb
add
dec
paddsb
xchg
mov
inc
fwait
mov
sub
jecxz
loope
or
popa
jmp
xlat
scas
jnp
or
jecxz
xchg
dec
call
push
adc
pop
lock
xor
roll
jecxz
or
fwait
xor
xchg
lds
xchg
test
sub
mov
aam
inc
cli
repz
aas
cmp
dec
dec
notl
dec
mov
xchg
adc
stos
testb
mov
lods
pop
push
dec
outsl
cltd
stc
mov
lret
dec
dec
mov
mov
rcl
add
mov
sub
jmp
sar
push
dec
mov
roll
fisttpll
cli
mov
mov
sti
cmp
lods
popa
xchg
mov
rorb
mov
es
push
pop
jbe
push
sub
cli
jb
arpl
add
mov
pop
adcl
cmpb
mov
add
mov
push
inc
filds
jecxz
cld
lret
cmp
cmp
adc
mov
loope
test
pusha
sbb
stos
dec
cmp
repnz
mov
inc
mov
mov
dec
in
inc
sbb
lret
jge
xchg
aad
inc
ret
clc
or
out
stos
mov
jmp
inc
cmp
xchg
pop
mov
cmp
pop
dec
ja
jl
xchg
add
or
fnstsw
out
aaa
adc
push
cmp
popa
adc
scas
inc
icebp
bound
loopne
mov
aad
inc
cld
insb
pop
mov
das
dec
lret
ss
test
test
push
bound
fadd
scas
lods
mov
mov
jne
jae
cmc
fsub
adc
inc
stos
insl
mov
aam
shlb
xchg
roll
mov
xchg
xchg
shlb
out
sbb
lcall
inc
loope
pop
jb
nop
sbb
push
cmp
mov
adc
xchg
aam
aaa
dec
dec
loope
lea
loopne
in
movsb
dec
insb
ja
enter
daa
adc
pushf
ret
pop
lahf
shlb
mov
sub
add
lea
loope
leave
out
imul
mov
fcmovne
mov
lea
push
mov
dec
mov
ret
jg
outsb
fcmove
loop,pn
pop
or
fstl
mov
jp
je
push
jl
int
outsl
icebp
pusha
xor
addb
push
mov
mov
lcall
add
sub
lret
jg
xor
ja
push
mov
mov
and
mov
sub
dec
stos
add
mov
arpl
and
push
mov
push
int3
cltd
adc
adc
lcall
in
pop
ljmp
inc
add
bound
repz
cmpsl
sub
cmc
jle
enter
pop
jle
dec
cmp
fwait
loopne
shrb
pop
imul
push
jecxz
dec
push
inc
xor
mov
stc
dec
mov
xlat
mulb
fadds
lahf
xlat
pop
es
mov
lods
test
jb
xchg
arpl
mov
xor
loopne
sub
sbbl
dec
mov
aam
lahf
pop
ds
iret
and
sub
lret
dec
jno
fnstenv
cmp
jbe
jo
jns
repnz
fmull
cmp
cmpsb
mov
ja
mov
jl
das
xchg
cmpsb
jo
push
into
jns
ds
out
fcmovbe
mov
aad
inc
pop
xor
rcll
fisttpll
xor
addl
mov
imul
fcompl
or
popf
pop
sti
add
out
aaa
xlat
pushf
rcrb
fistl
lret
into
scas
mov
add
mov
bound
pop
std
dec
xchg
lret
idivb
sbb
cmpsb
sub
inc
inc
cs
mov
xor
das
xchg
add
adc
bound
scas
xor
mov
pop
sbb
lret
popf
shr
lods
pop
ffreep
add
xchg
scas
iret
add
push
jno
pop
orl
jnp
mov
ss
adc
mov
or
idivb
aam
mov
adcl
jmp
enter
or
xchg
mull
test
push
hlt
mov
ss
pop
sti
xchg
jbe
outsl
push
jecxz
mov
sbbl
repnz
jbe
pop
std
test
in
inc
dec
arpl
mov
jbe
jnp
jne
inc
in
inc
mov
adc
dec
das
lea
rolb
add
sub
mov
rcll
popf
xchg
out
mov
sub
fsts
xor
in
mov
pop
rorb
test
out
orb
rep
push
andb
sub
fistpll
arpl
test
repnz
rol
xor
shlb
movsb
dec
enter
cltd
hlt
cmp
mov
std
mov
mov
aam
aaa
jle
mov
pop
mov
in
dec
insl
mov
aam
mov
cmp
push
call
fwait
in
mov
cmp
stos
scas
aas
cmpsl
shlb
mov
and
xor
or
pop
pop
sub
mov
lret
sbb
jecxz
je
or
fisubrs
arpl
cld
cmp
sarl
xor
xchg
mov
pop
sbb
outsb
dec
adc
add
pop
fimull
jnp
mov
sub
sar
out
inc
xor
mov
jno
dec
loopne
hlt
mov
lock
fidivl
add
push
or
daa
add
mov
btc
iret
jnp
icebp
popf
mov
mov
xor
imul
out
mov
mov
pop
cli
cmpb
lock
dec
add
lods
mov
imul
lret
sub
ds
pusha
imul
jmp
dec
mov
stos
inc
mov
std
lock
and
push
xor
or
pop
add
push
mov
jle
nop
lahf
je
mov
inc
xor
andb
push
xchg
stc
lret
in
push
push
jle
inc
push
pop
sbb
sbb
fs
mov
fimull
insl
loope
sub
dec
fnsave
xlat
jb
loopne
stos
push
add
insl
or
in
mov
mov
lds
sahf
pop
cmp
sbb
aas
mov
sub
cmp
fmul
pop
xchg
mov
pop
xor
mov
or
andb
xlat
sub
and
mov
dec
dec
and
mov
xchg
sub
dec
add
orl
pop
shll
andb
adc
mov
dec
sbb
push
nopl
adc
jge
fwait
cmp
ja
fsubrl
dec
fbld
jl
lea
icebp
movsb
pop
mov
movsb
mov
inc
mov
pop
push
push
fiadds
pushf
mov
or
dec
cld
cmp
jmp
jae
das
jle
add
or
inc
addr16
in
orb
or
mov
ret
push
or
lcall
out
xor
mov
out
adc
imul
nop
ret
hlt
pusha
shrl
and
rclb
out
mov
rorl
sahf
mov
test
dec
cs
int
std
jne
lahf
stos
lds
xor
das
xor
mov
mov
ja
push
mov
sbbl
jbe
aad
lcall
ljmp
mov
daa
fs
xchg
pop
inc
jle
pusha
movsb
cmp
andb
mov
les
stc
out
pop
inc
pop
test
js,pt
xor
pop
adc
shl
popf
test
sub
or
aaa
jae
jle
mov
movsl
sbb
cmp
in
es
dec
inc
popa
xlat
lock
mulb
outsl
fisttps
sbb
mov
sbb
push
push
enter
and
aad
inc
ret
lods
test
aad
lods
or
jno
inc
aaa
movsb
shrb
xor
cmp
and
sbb
aaa
popf
inc
insl
fs
mov
scas
ja
das
sub
xchg
out
lods
cltd
and
test
mov
je
in
pop
mov
sub
sbb
imul
hlt
scas
lret
mov
inc
in
jg
insl
stos
mov
mov
mov
push
test
mulb
mov
neg
jmp
test
jecxz
leave
and
push
mov
rorl
mov
pop
fidivrs
xor
mov
add
ja
push
pop
into
imul
cltd
xchg
fdivrs
mov
jbe
fstps
lret
cld
adc
mov
insl
movl
out
mov
js
and
ficoms
push
in
and
mov
push
lea
inc
in
stos
iretw
je
and
jecxz
jnp
fwait
pop
sbb
int
sbb
push
inc
pushf
sub
fstpl
lcall
push
cmp
mov
jbe
cmpsb
pop
jb
xlat
xor
cmp
out
fwait
jecxz
jbe
jae
pop
inc
lods
mov
lods
add
lret
scas
jnp
test
xchg
add
fimull
xchg
push
mov
out
enter
frstor
cwtl
mov
loope
das
sbb
xchg
pop
adc
mov
xor
loop
cmp
xor
sbb
xchg
aam
das
inc
add
int
outsb
popa
push
and
cmp
cmp
inc
or
lods
mov
test
lret
mov
pop
lds
enter
lds
test
mov
stos
inc
arpl
lods
inc
jmp
and
imul
and
in
das
sub
inc
mov
push
adc
mov
xor
dec
push
xchg
xor
jmp
jbe
inc
and
movsl
scas
hlt
xor
cld
ds
push
inc
mov
call
fdivrs
in
push
xchg
mov
ljmp
adc
fsubs
jmp
adc
cmpxchg
testl
cwtl
xchg
mov
or
dec
mov
ja
adc
xlat
stos
or
ljmp
fmull
jecxz
fstpt
and
das
int3
ljmp
dec
inc
jns
push
les
int3
imul
inc
outsb
fimuls
scas
and
scas
pushf
jmp
mov
or
ljmp
scas
lock
and
and
add
mov
mov
sahf
sub
sub
dec
jecxz
fistpll
pop
inc
mov
xchg
xor
enter
ljmp
inc
int3
xchg
je
movl
leave
cmp
outsb
pop
mov
mov
fiadds
cmpsl
or
mov
inc
or
data16
push
adc
sbb
lea
clc
or
jae
pop
mov
hlt
js
int
mov
push
mov
idivl
movntq
out
adc
neg
push
mov
sub
gs
rolb
add
movsl
testb
ss
gs
enter
addr16
pop
and
mov
test
xchg
inc
rcll
mov
xchg
movsb
in
or
mov
loopne
jne
addl
mov
loopne
or
inc
int
jbe
and
lods
sarl
inc
jno
dec
push
cld
xor
lods
cwtl
nop
out
xorb
and
test
mull
cmpsb
or
shl
stos
mov
iret
in
out
mov
pop
mov
mov
pop
push
pop
loope
pop
outsb
mov
pushf
test
push
notb
movsb
in
inc
outsb
test
push
sub
push
sub
cmp
daa
xor
inc
jns
sub
addb
sbb
out
dec
jno,pn
cmpsb
jno
movsb
add
sbb
adc
sub
add
fldcw
cmpsb
xlat
push
lods
push
jb
and
xchg
add
xor
sbb
arpl
mov
test
les
mov
inc
dec
clc
aad
dec
icebp
or
push
es
fldcw
insl
mov
sbb
xor
cmp
dec
addr16
jnp
jecxz
clc
inc
push
add
inc
in
push
add
xchg
push
mov
mov
dec
rcrl
les
xchg
sarl
sbb
fbld
jecxz
scas
repnz
stos
movsl
fstps
test
mov
mov
leave
lahf
lret
pop
add
addr16
ss
aad
xchg
mov
cmpsl
int
aad
dec
ret
fiadds
pop
push
repnz
cmp
mov
jno
movsb
jo
jo
jb
sar
scas
push
mov
adc
std
add
xchg
lods
pop
test
adc
fcmovbe
jbe
inc
dec
or
outsl
xor
push
shll
dec
test
subl
or
sub
push
data16
jmp
and
push
dec
imul
mov
movl
xchg
adc
adc
pop
pop
pusha
sub
sub
ljmp
xor
mov
push
outsl
inc
sti
mov
imul
lret
aam
and
xor
cmc
enter
dec
aam
or
aas
mov
and
and
mov
mov
adcl
lcall
dec
je
loopne
fcomps
std
mov
sahf
stc
cmpsl
jl
mov
sub
and
shll
cs
xchg
in
sub
outsl
shl
or
ss
test
out
push
ss
sbb
loop
icebp
ljmp
aad
les
push
xchg
or
fwait
xchg
xchg
mov
adc
pop
fldt
mov
nop
jae
push
insb
je
xor
mov
sti
dec
loopne
inc
mov
shr
jne
xor
fsub
adc
jl
pop
mov
inc
icebp
out
in
int
cmp
adc
iret
cmpb
pushf
std
notl
adc
ja
sbb
ds
call
fistpl
add
dec
jle
jecxz
shll
cmp
and
sub
fistl
pusha
ret
sahf
out
out
sbb
in
dec
adcl
xchg
test
icebp
cwtl
loope
xchg
jmp
inc
pop
std
dec
ficoms
sub
xor
scas
aaa
hlt
xchg
adc
pop
lds
in
cli
scas
fwait
lcall
pusha
cmpsb
or
adc
imul
push
push
dec
jbe
mov
dec
dec
push
aas
imull
lret
insl
mov
popa
cwtl
add
out
xchg
pop
das
sub
shrb
lods
push
add
pop
mov
adc
pop
mov
stos
xchg
jmp
inc
pop
lods
sub
inc
xlat
add
leave
sahf
sar
ror
mov
cmp
or
cmp
test
mov
sub
push
pop
pop
and
cmp
js
mov
jge
or
mov
dec
mov
mov
mov
rorl
and
shlb
outsl
sub
aas
cmp
enter
xchg
add
aad
cwtl
pop
pop
lock
outsl
fisubs
jae
cmp
sub
add
adc
sbb
push
mov
xor
ja
cmp
shr
dec
adc
cmp
movl
dec
lock
hlt
inc
gs
rcl
cmp
mov
lcall
cld
pop
mov
shrb
mov
sub
sbb
inc
std
push
xor
jo
cmp
push
mov
sarl
js
jle
mov
mov
sub
mov
mov
cmp
clc
xchg
popl
jle
mov
sbb
push
pop
outsl
dec
jge
pop
nop
shlb
dec
repnz
xchg
shrb
into
cwtl
out
aas
jmp
in
inc
xchg
adc
lcall
test
jae
xchg
jae
push
cmp
lcall
fwait
or
jecxz
jecxz
orb
call
fdiv
add
scas
xor
jge
lock
push
sub
add
inc
inc
call
jnp
mov
insl
hlt
aam
addr16
cmpsl
jl
adc
mov
rolb
mov
iret
xor
addb
cmp
jge,pn
push
mov
rcl
jmp
dec
lcall
sbb
jecxz
aam
mov
xchg
xchg
pop
fs
jne
pop
test
push
pop
cltd
mov
bound
mov
negb
jp
outsl
lock
and
sbb
mov
cmp
popa
cmp
mov
ljmp
data16
mov
mov
leave
lock
in
push
push
pop
add
into
push
push
addr16
mov
push
add
sbb
fmull
xor
loop
scas
inc
xor
dec
xor
idivb
lahf
repnz
and
xor
aaa
fldcw
and
push
dec
fcmovnb
dec
sub
jg
mov
cltd
push
out
adc
or
xchg
cli
add
push
test
fistpl
jns
xlat
icebp
cltd
in
clc
xchg
addr16
mov
sbb
push
scas
aam
in
test
xor
frstor
insl
adc
and
jle
mov
adc
mov
repz
mov
sub
cmp
adc
or
add
xor
adc
out
movsb
jecxz
ljmp
rorl
shrl
jmp
dec
sub
out
lods
into
int3
xor
xchg
jnp
sbb
pop
dec
test
mov
or
scas
sbb
es
test
xor
xor
sub
or
insl
dec
out
mov
xchg
loopne
cmp
push
nop
xchg
mov
in
push
les
push
scas
mov
insb
adc
cmp
popf
push
arpl
add
mov
icebp
fistps
add
push
xor
addr16
scas
insl
fidivrl
mov
divl
mov
stos
pop
imul
cmpsl
mov
mov
test
loope
xchg
push
pop
sbb
inc
std
icebp
push
xchg
pop
push
jo
jmp
test
or
jne
jbe
xor
mov
push
xchg
in
fisttps
xor
rorl
outsl
stos
out
ret
enter
mov
add
je
imul
stos
mov
lahf
ljmp
dec
or
pop
movsb
jnp
fldl
icebp
push
jae
pop
das
or
push
in
cmp
ja
push
cmc
jle
lret
ds
test
or
test
negb
pushf
arpl
stos
fdivs
sbb
lock
adc
cmp
not
outsb
lcall
mov
pop
cld
jns
mov
adc
cli
ds
cmp
repz
mov
test
aam
cmp
mov
jmp
mov
insb
loop
or
ret
fmul
and
dec
clc
and
mov
dec
xchg
jo
or
es
lcall
jno
adc
pop
dec
cmp
shl
shlb
out
xchg
pop
add
lods
out
nop
enter
insl
and
inc
or
fidivrl
ficomps
dec
jnp
xor
repnz
inc
lds
dec
xchg
sub
or
cli
push
insl
jbe
adc
pop
ret
mov
dec
ljmp
cmp
cmpsb
clc
xor
ret
rcr
sub
fimuls
pop
mov
fidivrs
cmpsl
shl
loope
jge
pop
lods
icebp
push
jns
insl
push
cmp
xor
dec
mov
lret
bound
inc
test
in
dec
push
inc
aam
adc
gs
adc
outsb
sbb
add
push
mov
loopne
mov
lret
bnd
out
outsl
push
inc
lea
mov
adc
xor
imul
cwtl
or
inc
lret
fstpt
movsb
sarb
mov
ljmp
fmuls
cld
jbe
pop
nop
dec
push
xchg
sbb
rolb
mov
fsubl
aad
inc
mov
adc
ret
in
or
xor
mov
das
js
pop
shrb
test
sti
or
pop
and
jns
push
outsb
es
lock
pcmpeqb
lahf
and
mov
jno
mov
jne
cmpsl
inc
mov
fsubrl
xor
pop
mov
adc
gs
pushf
int
push
popa
pop
pop
test
mov
data16
add
imul
xor
dec
mov
xor
test
add
dec
cmpb
test
add
test
sub
loop
cmc
mov
sarb
sahf
inc
cmp
inc
dec
push
adc
loopne
or
fnstcw
xor
das
fmull
subb
xchg
out
adc
mov
mov
xchg
sbb
clc
jnp
rcl
add
dec
insl
stos
int
mov
push
add
daa
mov
ljmp
sbb
jg
test
xchg
push
add
dec
je
mov
jecxz
pop
fldenv
mov
test
jbe
jmp
jecxz
gs
xor
pop
scas
jmp
das
stos
inc
jp
mov
test
rorl
outsb
das
das
mov
aad
repz
inc
cmp
in
fiadds
inc
fdivr
push
lea
ds
cmpsb
gs
cltd
dec
cmp
mov
jno
pop
ret
fadds
push
dec
mov
inc
out
xor
jb
idivl
loopne
or
out
jns
jb
sbb
std
xchg
imul
sub
jl
mov
fcoml
sub
lods
out
xchg
movsl
sbb
mov
icebp
jmp
testb
out
mov
orl
push
cld
xlat
mov
ficoml
xor
sbb
cwtl
xchg
test
jae
mov
ret
outsl
push
jno
or
mov
adcl
xchg
fsubl
out
push
test
movb
lock
push
jmp
lahf
mov
in
inc
inc
inc
cs
fldl
enter
jbe
mov
outsb
jl
and
scas
sbb
scas
cmpsb
shl
sahf
mov
stos
ret
xor
push
hlt
pop
ficoml
mov
or
jne
inc
fbld
cmp
js
fs
cmp
adc
jecxz
roll
cltd
nop
sbb
or
xchg
xor
movsb
jge
imul
push
inc
aad
xchg
unpcklps
and
or
or
pop
sahf
mov
ljmp
add
cltd
or
arpl
adc
inc
lds
push
je
and
adc
pop
sbb
rcl
sub
sbb
inc
sbb
ss
dec
loop
jne
add
pop
jmp
sub
repnz
sbb
lahf
inc
pop
push
mov
imul
sbb
mov
sub
popf
fsts
push
rcll
aam
sbb
xchg
jbe,pt
xor
or
adc
xor
movsl
std
in
xor
lods
and
rcl
ret
loop
xor
in
pop
shl
out
inc
and
je
ja
gs
push
jle
in
insb
adc
stos
test
push
loopne
pop
in
fisubl
mov
mov
jnp
out
lock
push
xorb
cld
js
dec
pushf
sub
pop
les
insb
sbb
hlt
pop
mov
push
jb
imul
test
jle
mov
push
out
mulb
pop
popa
js
in
mov
sar
stos
sub
dec
pusha
cmpb
xor
movb
jno
mov
adc
cmp
neg
popa
out
lods
sub
out
pop
xchg
rol
mov
add
xchg
rclb
scas
inc
add
mov
push
lock
push
in
jle
pusha
adc
jns
lds
dec
insb
fisubl
cld
js
out
mov
fwait
add
sbb
push
loop
loop
add
sub
lret
or
lret
nop
je
mov
stc
jge
loope
lcall
test
sub
movl
jmp
mov
ljmp
gs
sbb
shrb
outsl
cmpsb
repz
mov
mov
inc
lods
dec
imul
idivb
xlat
into
fistps
popa
imull
cltd
sahf
jo
mov
jge
mov
cmp
pushf
jns
in
ss
sarl
sbb
aas
sub
or
mov
arpl
or
jmp
push
push
mov
scas
cmp
mov
xchg
repnz
repz
push
cmovne
testb
fcoms
push
push
cmp
aaa
pop
or
jle
cld
or
inc
xchg
and
sub
add
lahf
push
faddl
add
mov
dec
sub
xor
loope
push
cmp
icebp
test
shr
or
loop
mov
loop
fdivrl
pop
test
das
mov
clc
dec
ja
jmp
sbb
loope
ret
or
fxch
lock
jbe
sbbl
adc
in
dec
insl
aad
mov
repnz
out
jne
xchg
add
cmp
jo
aad
add
arpl
jl
sti
popf
inc
adcb
and
add
fpatan
mov
jmp
xchg
mov
adc
mov
in
test
cmp
repnz
mov
inc
shrb
jecxz
faddl
test
mov
cmp
dec
arpl
shl
mov
aas
push
cld
andl
stc
cmpsb
adc
xchg
mov
adcb
dec
ss
stc
icebp
and
cmp
jmp
out
jns
push
mov
ret
adc
mov
xchg
int3
cmp
mul
xor
adc
add
out
decl
mov
int3
out
mov
jle
add
adc
stos
sbb
add
jecxz
push
and
rcrl
movb
push
mov
inc
push
in
cmc
shrl
jnp
stos
and
inc
mov
xor
push
lock
ja
enter
push
lods
fstpt
shl
stos
cmp
outsb
inc
or
ss
jo
mov
cmp
mov
xchg
cld
push
aaa
dec
mov
cmpsb
push
out
ds
into
push
jl
int3
push
dec
jbe
fucom
test
inc
inc
in
mov
rcrl
cwtl
sub
dec
and
mov
int3
mov
push
mov
lret
jle
dec
mov
jp
add
or
pop
pop
mov
and
in
mov
push
push
adc
bound
push
stc
int3
fnstsw
fdivs
icebp
xlat
stos
mov
cli
and
clc
fs
xor
fdivrs
adc
xor
xchg
sub
ret
in
jo
aad
sub
out
cli
aas
inc
cmp
gs
mov
ficompl
push
outsl
jl
cmc
aad
aas
jae
sti
push
mov
andb
lcall
jae
xchg
xlat
push
jle
pop
lods
mov
sbb
or
cmpsl
cltd
ret
push
incb
fadds
aad
inc
sub
sbb
fstpt
hlt
add
cs
or
out
sub
enter
dec
andl
push
lods
int
outsb
popf
cmpsl
mov
inc
adcl
jle
jmp
sbb
pop
flds
cmp
cs
aam
movsl
inc
cld
cmp
shll
filds
push
sub
movsb
je
mov
aas
push
jmp
js
mov
leave
inc
imul
and
pop
add
cmpsl
fs
sub
inc
cld
and
sbb
mov
sbb
pop
mov
xchg
cli
push
subl
in
pop
inc
ljmp
push
aad
jno
lcall
or
mov
hlt
adc
nop
loop
cmp
leave
cmp
jno
and
icebp
popa
or
je
pop
push
cmp
jmp
xor
lods
inc
stos
mov
pop
lds
nop
push
pusha
popf
aaa
fisttps
lahf
push
xchg
sub
jle
sbb
add
mov
jmp
leave
pop
imul
cld
rcl
lods
popa
or
sub
add
dec
push
pusha
xchg
push
xchg
pop
inc
dec
xchg
push
mov
decb
dec
lret
jmp
dec
out
aad
mov
movsb
adcl
aas
je
push
jbe
inc
cltd
dec
xchg
enter
dec
adc
repnz
add
mov
pop
xchg
xor
cmc
inc
mov
or
add
adc
and
sub
ficoml
jg
loope
pop
int3
js
test
add
mov
shlb
xchg
sub
pushf
xor
fldt
fiaddl
fidivs
je
movsb
out
aaa
sub
lcall
mov
outsl
lock
sub
jns
call
xchg
xchg
call
sbb
xor
dec
push
aas
or
dec
gs
pop
pop
inc
fwait
dec
mov
mov
lock
pop
sbb
mov
and
fwait
aad
ret
or
jno
mov
mov
push
outsl
mov
sbb
dec
xchg
mov
push
sarl
pop
movl
imul
js
xchg
fwait
pushf
xchg
in
sub
inc
sbb
hlt
sahf
mov
jle
outsb
jnp
dec
pop
jo
iret
roll
popf
dec
xlat
sub
pop
adc
dec
mov
jb
cmpsb
lcall
lods
push
fsubrs
fs
push
sbb
inc
cmp
mul
popa
add
inc
and
rolb
test
insl
mov
inc
int
sub
sub
aaa
test
jno
push
mov
mov
fisttps
iret
adc
rcrl
es
xor
pop
push
mov
push
dec
mov
inc
repnz
mov
xchg
rcrl
mov
push
imul
pop
push
arpl
rclb
mov
fwait
mov
test
sti
inc
push
outsb
cmp
mov
cmp
jbe
jg
inc
mov
in
clc
pop
ret
out
stc
lods
push
inc
sub
mov
outsl
scas
xor
cmp
xchg
prefetch
test
jle
int3
jl
sub
std
imul
mov
inc
jne
xchg
insl
sub
icebp
mov
push
cmp
lock
sub
inc
sbb
jmp
pop
das
pop
cmpl
xchg
fcompl
push
pusha
insb
add
bound
fsubs
int
sub
les
jle
xor
icebp
cs
xor
sub
jmp
xor
out
mov
das
adc
jns
jae
mov
cmpl
out
into
orl
ljmp
push
mov
int
jmp
push
sbbl
lds
jmp
ficompl
adc
pop
xor
xlat
fcmovnu
sbbb
pop
mov
lods
xchg
sub
std
aaa
fstpl
addb
cli
outsb
mov
bound
jo
mov
ds
hlt
in
mov
xchg
sub
pop
out
ffree
sbbl
dec
insb
xor
aad
push
dec
shl
fsubs
add
rcr
pop
cmc
pop
out
sbbb
xlat
mov
jb
rcrb
dec
jne
mov
pop
in
pop
sub
stos
int3
in
ret
fs
rolb
or
mov
inc
les
das
ja
mov
and
int3
and
add
sub
sub
jnp
inc
mov
sbb
xlat
mov
sbb
mov
push
cmpsb
jecxz
rorb
mov
inc
lock
xchg
or
ja
cli
xor
fildll
pop
stos
test
mov
add
call
je
pop
movsl
dec
cwtl
shrb
push
inc
pop
mov
pop
xchg
pop
fdivrl
shrl
mov
pop
xchg
mov
and
xchg
ret
sbb
and
push
or
pushw
cmp
std
jg
in
dec
mov
fucomip
lret
pop
out
sbb
enter
xor
mov
push
sahf
ret
cmpsb
pusha
inc
out
loopne
fisubrl
adc
push
int3
pop
das
jno
xor
cmp
insb
out
aad
xor
int3
mov
dec
inc
rcll
stos
cmpsl
push
mov
icebp
inc
ljmp
xlat
cmp
sub
mov
sbb
jbe
push
sub
pop
mov
xlat
arpl
jbe
into
mov
pop
inc
cmp
iret
cmp
lds
imul
cmpsb
cwtl
cmpsl
out
ficomps
mov
lahf
mov
roll
in
dec
cmpsl
mov
lds
fsubs
fimull
add
scas
or
sti
xor
mov
clc
lods
inc
mov
mov
stc
push
xor
sub
fisubrl
icebp
and
setno
jmp
popa
mov
push
sbb
nop
shr
mov
xlat
into
push
adc
pop
imul
dec
cmc
jl
lret
push
push
fiadds
clc
dec
jmp
das
mov
cmp
pop
into
test
cmp
sarb
mov
not
mov
test
insl
cmpsb
cmp
ret
out
insb
adc
in
adc
outsl
movsb
enter
std
test
jno
mov
adc
push
ret
jne
adc
jmp
cltd
dec
das
cmpsb
stos
loop
sar
push
mov
das
bound
push
inc
inc
scas
hlt
test
pop
mov
inc
pop
in
add
sbb
cmp
push
cmpsl
hlt
outsb
or
pop
xchg
jmp
and
int3
xor
xor
mov
shl
push
mov
push
cmp
in
xor
pop
jo
sahf
inc
loope
imul
out
adc
sbb
in
adc
or
sahf
lret
sub
call
mov
lods
mov
xchg
xchg
jl
xor
movb
or
inc
adc
scas
fs
inc
xchg
mov
loopne
mov
sub
cli
lcall
xchg
mov
xchg
and
bound
mov
dec
xor
and
inc
std
push
loopne
insb
sbb
pop
pusha
rolb
inc
int3
enter
or
jecxz
stos
jo
jns
scas
push
scas
mov
fimuls
test
sub
cltd
add
inc
rorl
test
sbb
stos
les
outsl
fistpll
mov
or
xchg
jl
adc
mov
dec
fwait
xchg
scas
xchg
icebp
fiadds
xchg
movsb
mov
and
mov
cmpsb
in
mov
jl
stc
ret
mov
jmp
adc
sub
cmp
xor
in
rcpps
jae
xor
js
enter
movsl
outsb
iret
ror
enter
add
or
shl
push
cmc
mov
add
inc
into
cmc
fadd
sbb
add
insb
mov
jl
lahf
mov
xchg
xchg
fsubrl
das
dec
jns
movsb
push
loopne
fisttps
imul
clc
push
cmp
pop
movl
jge
xchg
sbb
add
jg
adc
das
sub
sbb
mov
mov
xchg
sbb
add
lods
inc
insl
fs
push
xchg
and
mov
lock
scas
fsub
xrelease
ja
mov
inc
cltd
scas
or
push
inc
jle
lock
lcall
lret
aad
add
imul
jae
fistl
in
in
cmp
aad
ds
jnp
mov
push
adc
mov
pop
fidivs
dec
rcrb
out
xor
jmp
mov
jecxz
fistpl
push
cmp
mov
or
jbe
pop
jne
sub
mov
adc
jmp
fidivs
enter
dec
int
fucom
rol
jge
enter
mov
mov
cli
sarl
xlat
dec
push
sahf
aad
inc
in
jle
shr
popa
sar
js
repnz
pop
into
orl
inc
pop
jne
push
aas
mov
and
outsb
leave
mov
int3
out
add
push
cmc
repnz
imul
xchg
imul
cmpsb
out
adc
adc
cli
lea
cmpsb
and
and
xchg
mov
imul
push
icebp
mov
call
or
jp
sub
push
into
push
mov
fsubrl
ds
ret
sub
popf
out
jnp
pop
xchg
je
jbe
hlt
pop
mov
jnp
lea
ret
shlb
xchg
cwtl
dec
push
cmp
adc
lods
mov
aas
dec
jecxz
sub
imul
jg
fsub
or
stos
jns
lcall
adc
aad
push
outsb
cmp
mov
pop
aas
xor
int
sarl
rolb
fidivrl
xchg
mov
xorb
push
mov
popf
dec
and
or
dec
mov
lret
sbb
test
or
dec
lock
mov
or
mov
pop
inc
mov
lock
test
add
aam
insb
mov
and
icebp
fadd
lock
paddusb
into
mov
xor
mov
or
das
popa
adc
das
dec
bnd
jbe
add
sbb
or
pusha
pop
xor
leave
mov
sbb
dec
jb
call
adc
cmpsl
pop
adc
dec
xchg
jge
xor
clc
xor
jle
push
mov
enter
sbb
bound
pop
jecxz
adc
xchg
mov
cltd
mov
ss
fidivrl
push
movsl
es
hlt
xlat
dec
xchg
inc
mov
jns
cmp
cmp
dec
out
xchg
pop
lcall
xor
dec
jmp
rclb
mov
lods
sbb
repz
xchg
jo
clc
das
scas
inc
incl
enter
lock
or
fistpll
push
xchg
inc
push
mov
addr16
dec
ficoms
jp
leave
adc
out
xchg
ret
loopne
adc
lahf
cmp
inc
fs
fistpll
push
loope
pop
push
dec
cmpsb
cmpsb
test
dec
add
xor
cmp
into
adc
cmpsb
mov
pop
test
sti
dec
dec
and
mov
push
into
int3
pop
mov
ficompl
add
inc
xchg
and
and
mov
inc
shrl
sbb
pop
ficompl
or
leave
cmc
jecxz
or
loop
add
in
stos
ds
push
ret
inc
push
push
test
lret
mov
call
or
add
je
clc
ljmp
mov
push
repnz
imul
data16
das
mov
cmp
push
pusha
or
loopne
pop
sub
dec
int
pusha
data16
jae
mov
xlat
add
sti
or
push
in
pop
lahf
dec
push
frstor
jns
aad
jno
mov
add
add
ja
mov
sub
jmp
in
cli
and
sub
sti
xor
leave
loop
pop
pushf
lock
fcompl
movsl
cmpsb
and
iret
mov
shrl
mov
adc
clc
and
xorl
mov
insl
jae
and
mov
push
in
xchg
inc
push
movb
dec
dec
gs
or
mov
rcrl
fdivrp
add
or
loope
mov
aam
aam
xor
movsb
dec
xor
pushf
or
fcmove
leave
sbb
mov
cmp
cmpl
orb
aaa
lret
lock
out
sti
ja
cmp
js
mov
push
cltd
sarb
shl
lcall
fiaddl
aad
pop
dec
loop
pop
je
push
test
jno
lock
add
shr
xor
add
xchg
and
fsubp
pop
addb
jge
mov
sbb
dec
sub
mov
into
inc
data16
lock
xor
adc
xor
stc
scas
dec
enter
xchg
mov
jmp
lea
mov
ss
test
dec
jnp
xor
leave
shr
or
je
in
sti
jnp
out
and
pop
jb
rolb
jbe
jmp
push
es
adc
add
nop
lock
in
dec
sbb
popa
sub
xor
idivl
das
shr
cmc
in
push
and
or
mov
js
fidivs
dec
fwait
pushf
xchg
mov
push
xor
ret
lcall
dec
ret
xchg
mov
es
mov
inc
pop
rorl
imul
fistps
cmc
push
popf
mov
insb
xchg
sbb
inc
mov
fnstcw
scas
popf
gs
lods
xchg
test
mov
mov
inc
repnz
push
lods
cmp
dec
xor
mov
insb
cmpsb
inc
mov
jbe
sub
and
xchg
call
mov
push
jb
stos
mov
js
jo
mov
dec
cltd
lods
fwait
and
lds
add
sahf
lcall
mov
popa
xchg
pop
lds
pop
in
sbb
cld
fstpl
push
dec
stos
push
out
test
lcall
shlb
outsl
dec
aam
sub
jae
fstpt
adc
mov
in
push
scas
sbb
xchg
stos
jb
out
loope
clc
mov
jo
inc
out
and
add
add
int3
dec
pop
out
jmp
mulb
lds
inc
pushf
push
nop
xchg
cmpsb
adc
xchg
test
rolb
ret
pop
aam
cs
fnstenv
pushf
sbb
mov
in
fsub
mov
das
mov
jo
sub
notb
adc
jne
inc
xchg
cmpsl
push
push
cmp
xor
or
push
push
push
pop
push
xchg
and
mov
mov
ljmp
adc
push
sub
mov
inc
push
repnz
das
stos
xor
insl
xchg
xchg
ret
inc
add
push
cmc
mov
jo
mov
je
arpl
mov
mov
xchg
repnz
decl
movsb
xchg
push
xchg
mov
mov
sti
gs
mov
sub
mov
addr16
pop
rol
outsb
test
sti
mov
push
cmc
dec
loop
lock
hlt
mov
sarl
pushf
mov
lret
adc
inc
mov
lea
and
std
sub
mov
sub
dec
sbb
and
push
cld
push
ret
adc
insl
ss
fisubl
pop
push
sahf
add
movsl
xchg
gs
movb
jmp
loop
scas
push
lods
sbb
xchg
jg
insb
jg
es
xchg
sub
outsl
cmp
push
lahf
data16
scas
fs
in
cmp
inc
mov
loope
push
add
cmp
jnp
push
cmp
test
out
fcmovnbe
mov
push
push
decb
sbb
add
xchg
pop
mov
add
testb
movsb
adc
in
lods
push
mov
int3
iret
mov
or
rorb
movsb
jae
inc
daa
xor
js
and
sub
rcr
lahf
jbe
inc
mov
test
inc
or
dec
sub
js
fisubl
inc
inc
adc
sub
mov
lods
aad
cmp
xchg
testl
dec
mov
clc
ret
stos
hlt
stos
ja
mov
pop
roll
fwait
int
aas
xor
push
lahf
mov
mov
notl
mov
bswap
test
mov
sbb
or
adc
cmp
dec
lcall
mov
ret
pop
popf
out
xchg
or
add
mov
jno
mov
ret
mov
jl
adc
cmpsl
jnp
pop
cld
jl
xchg
rorb
dec
sti
sahf
push
mov
cmc
and
mov
cmp
fsts
insb
daa
pop
stos
int3
and
lock
push
cld
idivb
movsl
pop
mov
dec
jg
int
scas
add
or
mov
dec
xor
add
or
jbe
das
push
rclb
inc
loop
xchg
jmp
sbb
pop
xchg
mov
xchg
mov
lret
aas
div
divb
mov
inc
fs
jle
pop
xchg
rolb
bsr
cmc
mov
adc
and
rclb
and
sbbb
repz
mov
addr16
push
mov
mov
push
jp
cmp
mov
xchg
loop
loopne
aaa
jg
cld
pop
into
mov
sub
cmpsb
fcoml
or
mov
inc
sub
mov
pop
imul
and
bound
cltd
mov
pushf
mov
sub
dec
pop
mov
ret
add
add
mov
mov
rcll
std
sarb
std
arpl
test
inc
stos
ret
mov
mov
cs
sbb
lods
mov
pop
push
aas
xchg
inc
pop
pusha
xchg
push
sbb
fidivrs
mov
cmp
adc
lcall
push
repz
push
mov
loope
cmpsb
pop
mov
jge
or
dec
lcall
and
push
jl
jmp
loopne
jo
adc
aaa
cmp
int
xchg
xchg
mov
pop
mov
jae
adc
insb
dec
pop
sub
cs
mov
cmc
inc
test
jecxz
jne
add
iret
sbb
mov
cmp
xlat
shrb
mov
lahf
push
cmp
enter
mov
xchg
mov
aad
pop
cmp
push
stc
xchg
test
lods
inc
or
imul
and
in
dec
lret
cmpb
dec
inc
or
cld
sbbl
add
pushf
push
stc
pusha
sbb
xor
xchg
adc
sbb
lock
orb
icebp
ss
mov
pop
sbb
xchg
mov
out
arpl
inc
adc
shll
sahf
cmpsl
xor
xor
fdivrs
xor
hlt
in
call
in
mov
das
mov
push
mov
pop
imul
push
aad
mov
aam
xorl
imul
cmpsl
jns
adc
movsb
das
sbb
xor
pop
adc
push
push
test
addr16
mov
inc
outsb
out
das
test
fmul
mov
enter
xchg
mov
mov
incb
mov
inc
dec
push
jnp
int
mov
fwait
lea
pop
test
je
mov
mov
push
icebp
in
lods
ret
das
cmp
shll
xchg
enter
add
repz
mulb
loopne
imul
jnp
stc
add
mov
jg
adc
mov
or
call
mov
jecxz
mov
insb
adc
lret
std
out
push
mov
shl
xchg
pop
inc
ds
dec
shll
cmpsl
inc
int3
fsubl
xchg
outsb
lcall
fildl
sub
sti
push
insb
dec
add
test
addr16
nop
cmp
inc
insb
cli
pop
xchg
std
mov
sbb
call
test
int3
dec
int3
aam
cmpb
pop
xchg
add
mov
adc
xor
push
xchg
nop
sti
cmp
inc
aaa
push
push
movb
sub
xchg
jo
mov
jno
shlb
aam
testl
lret
je
lods
hlt
jb
and
cmp
cmp
mov
cmp
fs
xchg
cmpsl
dec
mov
loop
sub
add
movb
out
pusha
aaa
mov
push
sbb
int
test
jge
and
test
jecxz
in
sbb
xchg
mov
pop
imul
push
pop
jnp
fsubr
js
inc
in
xchg
cmc
shrb
pop
jno
bound
jp
or
jmp
lods
mov
adc
ds
mov
jb
adc
mov
dec
jecxz
dec
xchg
mov
mov
dec
aaa
mov
push
mov
jmp
scas
xorl
jb
cmp
adc
adc
in
mov
or
daa
jg
dec
pop
loope
in
icebp
xor
mov
mov
out
inc
adc
mov
sub
jp
scas
mov
cmpsl
sub
mov
cmp
sbb
inc
xlat
push
lock
and
xchg
movsb
mov
push
imul
pop
inc
fwait
xchg
loopne
xor
dec
jg
pushl
clc
fmull
out
sub
es
je
nop
ficompl
out
out
fsubl
lret
adc
push
cmpsb
je
negb
xchg
inc
in
jl
ret
sub
fisubl
mov
daa
cmpsl
sub
inc
push
pop
inc
jno
ret
jne
nop
dec
ds
mov
dec
jp
inc
jl
fs
pop
cmp
mov
mov
iret
sbb
add
or
stc
dec
jp
inc
sbb
fwait
notb
push
mov
xor
ds
int
cwtl
xchg
not
jo
jmp
lcall
loope
sub
sbb
out
into
aaa
insb
and
mov
push
sbb
je
dec
xor
dec
dec
cmpsl
int
cwtl
notb
or
push
pop
sti
add
fsub
repz
or
mov
mov
xchg
sub
pop
int
and
ror
cmp
loopne
push
jne
mov
xor
lods
xlat
out
push
mov
cmp
xchg
mov
fcomp
mov
jno
ja
xchg
cmpb
dec
jbe
cmp
dec
mov
aaa
ja
xor
xor
push
sbb
mov
add
je
pop
mov
aas
cmpsb
fiaddl
bound
mov
push
div
dec
in
movsb
outsb
scas
adc
lcall
roll
mov
jl
push
hlt
fidivs
das
push
scas
jae
gs
fistps
stos
insl
mov
push
mov
in
fisttpll
andl
cmp
dec
in
pop
mov
es
pop
mov
push
jo
call
test
or
pop
ficomps
adc
cmpl
arpl
adc
movsb
cmp
jge
mov
lods
cmpsl
jnp
dec
push
jnp
jo
outsb
push
jb
pop
pop
ret
mov
mov
xchg
push
daa
jge
into
loope,pn
inc
add
inc
and
or
aad
push
add
push
sbb
lock
fwait
out
xor
sahf
hlt
loope
jb
or
int
out
lods
repnz
std
xor
pop
shlb
adc
movsl
scas
jl
call
sub
fdiv
cmp
or
mov
mov
xchg
fisubs
sar
jno
sbb
lods
mov
mov
jp
sub
repz
xchg
mov
push
out
ret
movsl
ljmp
adc
adc
sbb
imul
mov
xchg
or
sbb
nop
cmp
pop
xchg
jnp
pop
pop
pop
cmp
imul
cmpl
std
or
sub
push
sar
cmp
popf
rep
test
xor
in
mov
xchg
dec
cmpsb
sub
cmp
sub
xor
sti
and
stos
jb
and
or
cli
stc
push
std
lods
nop
sub
xor
fildll
add
cmp
fwait
xchg
cmp
mov
into
and
xchg
xor
int3
popa
into
mov
call
xorl
sub
jb
xor
xchg
in
in
pusha
or
xor
and
push
lods
sub
mov
fmuls
cmp
outsl
int3
addr16
pop
xchg
xchg
pop
int
push
popf
adc
jg
cmp
aas
lock
movsb
sbb
pop
push
lret
loop
insl
pusha
pushf
xchg
dec
lret
int
sub
pop
and
mov
xchg
clc
fsincos
in
ljmp
xchg
jecxz
add
mov
addr16
push
and
ret
push
mov
sbb
xchg
add
mov
lods
rcll
pop
and
in
rclb
sti
cld
roll
enter
imul
data16
cld
pop
cmp
sbb
push
xor
ss
xchg
in
mov
dec
sbb
sub
dec
push
push
loop
pop
leave
sar
mov
pop
xchg
insb
ret
imul
fwait
push
cli
aam
push
rorb
adc
out
insl
outsl
cmp
push
ret
cmp
dec
dec
mov
sbb
or
mov
aas
rorb
pop
in
loop
mov
out
mov
das
loopne
jo
xchg
les
pop
fsubrs
pop
daa
xchg
dec
or
inc
hlt
xchg
mov
sbb
or
sub
lahf
xchg
repz
and
fcmovnbe
scas
insb
push
enter
insb
jg
mov
arpl
jbe
fwait
jp
dec
and
iret
push
insl
fdivl
xor
cmc
js
aaa
xchg
aad
jg
push
jb
loop
xor
sahf
arpl
cmpsl
or
sub
and
test
leave
loop
adc
and
popf
push
loopne
mov
cmc
push
stos
lcall
xchg
bound
mov
pop
mov
and
mov
mov
int3
add
push
jg
pop
ficoms
push
test
xchg
repz
mov
dec
int3
jp
lahf
push
jmp
lret
jl
push
cmp
sbb
mov
xor
cmp
xor
cli
or
lea
push
and
adc
xchg
push
mov
dec
iret
ds
pop
gs
xlat
arpl
xchg
push
mov
movsb
fidivrs
addb
into
mull
add
mov
sub
sbb
iret
in
push
and
leave
dec
mov
cmp
in
cmp
cli
lret
sbb
daa
mov
cmp
scas
pop
or
push
icebp
jo
push
sti
push
and
dec
xor
pusha
xor
in
ret
daa
push
pop
add
cmpsl
and
sti
adc
cmc
movsb
push
pop
adcl
xchg
in
loop
pop
dec
inc
testb
inc
xor
clc
xor
xchg
jb
gs
scas
xchg
addb
inc
jg
mov
push
fisubrs
pusha
jb
inc
sbb
sub
lods
inc
outsl
arpl
rcll
hlt
imul
add
dec
xor
cltd
mov
movsb
mov
xchg
or
nop
mov
ss
push
stos
pushl
xor
mov
sbb
insb
push
lods
mov
cwtl
or
fwait
adc
pop
jns
lock
jge
aas
sahf
jo
dec
cmp
iret
xor
inc
enter
dec
fcompl
pop
push
les
add
cltd
push
popa
cli
adcl
test
out
outsl
lock
fcmovne
xor
jo
sbb
lods
adc
lcall
pop
lcall
icebp
leave
lret
xor
es
sub
fwait
in
sbb
lods
sahf
mov
mov
add
loop
push
mov
jbe
ret
jo
stos
push
inc
lock
aad
xchg
jg
cli
dec
pop
xchg
push
or
fidivs
dec
mov
xchg
push
dec
cmp
ret
cmp
jnp
imul
push
pop
in
sbb
lds
jmp
out
adc
fstpl
dec
sbb
push
in
dec
pusha
xor
enter
pop
lahf
aam
add
lock
gs
sbb
jno
fsts
stos
jae
push
xor
mov
pop
xor
cmp
push
pushf
jno
jb
bound
negb
sbb
cli
add
sbb
mov
xchg
and
cltd
xchg
and
dec
imul
add
jbe
sbb
rolb
leave
inc
out
cmpsl
and
cs
testl
roll
jge
dec
xchg
mov
test
xchg
out
dec
int
inc
nop
imul
mov
inc
out
mov
xlat
dec
movsb
or
xchg
pop
stos
or
pop
cmp
mov
shrb
jno
stos
add
sbb
sahf
repz
cmp
sub
sbb
push
scas
fwait
mov
xlat
and
sub
sbb
repnz
add
clc
adc
dec
xor
sti
leave
in
mov
std
pushf
xor
enter
fidivs
mov
aaa
push
in
push
call
inc
pop
negl
jbe
test
sbb
clc
cltd
jnp
int3
xor
fbld
or
adc
or
es
sbb
repnz
adc
call
jg
add
fldcw
xor
mov
dec
pop
mov
pop
lcall
sub
dec
sbb
xor
mov
xorl
cwtl
jge
mov
xor
mov
adc
mov
rorb
insl
sbb
xchg
les
aam
push
push
inc
xchg
pusha
cmp
lds
negb
xor
sti
rorb
push
mov
inc
mov
xor
mov
sbb
loope
loop
lahf
inc
jle
clc
mov
and
sbb
sarl
dec
sub
xor
in
mov
or
or
jecxz
adc
cld
fsubp
xor
mov
push
jg
mov
pop
es
xor
pop
add
pop
cli
cmp
outsb
jmp
outsl
dec
test
dec
pop
mov
pop
mov
or
sbb
and
pop
daa
cmp
or
movsb
sub
aas
mov
dec
dec
pop
jmp
and
xchg
sarl
aad
ret
pop
sbb
mov
adc
ss
jno
mov
hlt
fldenv
and
pop
mov
push
jns
push
mov
movb
les
mov
and
aaa
push
push
ss
push
in
mov
mov
or
loop
inc
adc
mov
or
adc
movsb
movsb
sahf
popf
rorl
in
sti
mov
mov
sbbb
cmp
insb
pushf
jnp
adc
dec
in
rcll
jl
testl
xlat
aas
cmp
cmpsl
gs
jp
sbb
and
sub
pusha
repz
or
dec
sti
std
push
jmp
out
sahf
push
fildl
jg
dec
push
push
in
pop
loope
pop
into
insb
data16
pop
lret
or
pop
fisubl
ret
pop
xchg
mov
insb
or
shlb
xchg
cli
and
and
divl
sub
rcrb
mov
scas
add
jbe
push
mov
popf
add
xchg
inc
fdivp
je
mov
cld
jge
add
mov
jno
test
or
xor
pop
imul
pop
mov
jl
push
mov
in
mov
adc
andb
and
or
es
test
addb
dec
jge
daa
divl
in
sub
sbb
cmc
sbb
aas
mov
nop
cmp
add
js
jns
jb
aas
add
mov
pop
movsb
call
adc
pop
push
aad
push
les
movsb
shll
fisubrl
jae
ret
loop
cwtl
ljmp
mov
jle
push
sbb
imul
mov
jb
push
mov
aam
mov
add
cmpb
mov
fnsave
clc
or
inc
sub
xchg
cli
adc
ficoms
fwait
mov
nop
adc
stos
or
push
in
xchg
dec
inc
inc
sbb
add
insl
lds
jl
jae
jl
adc
leave
or
cmpsb
les
imul
cld
add
jge
or
mov
pop
cld
adcl
xchg
lods
xchg
fisubl
fisubs
cli
lock
int
cmpl
outsb
fdiv
or
addr16
mov
fbstp
cwtl
jge
mov
in
lods
imul
jne
test
test
cmp
shlb
adc
add
pop
inc
repz
shll
xor
push
jmp
fsubrs
xchg
lds
push
fnstsw
mov
sbb
pop
and
test
fcoms
sub
loopne
ret
sahf
cmp
cmp
shl
add
mov
test
push
out
fildll
dec
lcall
insl
out
shlb
repnz
jmp
sub
leave
push
mov
imul
lcall
sub
cmpsl
inc
adc
call
mov
andl
push
shlb
adcb
mov
and
imul
dec
xchg
xchg
std
cmpsb
inc
mov
test
std
clc
xchg
push
cmp
es
dec
cmp
sub
cmp
xor
lea
or
mov
loopne
adc
rsqrtps
dec
push
xchg
inc
cltd
cmovne
negl
inc
jg
or
sbb
xor
sarl
aam
add
mov
sub
mov
xlat
inc
sbb
pop
into
loopne
sbb
add
icebp
lahf
xchg
gs
xor
gs
std
inc
push
mov
mov
xchg
test
loopne
mov
movsl
lcall
sbb
jge
filds
mov
sub
push
pushl
push
fidivrs
rorb
mov
xchg
insb
push
sub
jae
adc
test
push
adc
xlat
outsb
cmp
jne
cwtl
loope
dec
xchg
ds
lahf
les
sbb
or
adc
sbb
push
dec
pop
ret
out
addr16
cmp
mov
mov
push
push
ret
jnp
mov
and
jbe
movmskps
xchg
and
sbb
ret
push
push
jecxz
setb
xlat
mov
mov
adc
jne
adc
add
insb
cmp
jecxz
pusha
aas
int
push
dec
push
bswap
push
ficoms
mov
aad
jae
leave
fwait
push
es
push
push
add
jo
mov
jge
dec
loop
add
inc
and
das
pop
dec
ljmp
aas
ja
dec
pusha
xor
lock
push
cmp
cmp
into
movsb
add
aas
fdivp
sbb
xor
add
mov
jb
repnz
dec
jae
inc
insb
mov
movsl
pop
dec
lahf
int
rolb
ljmp
push
jle
adc
aas
sti
or
insb
out
cwtl
mov
fsubrs
xor
es
mov
cmp
test
jmp
dec
mov
lock
push
mov
mov
or
xor
push
ljmp
fs
aas
adc
ficoms
in
lds
fdivs
popf
jo
mov
jecxz
mov
pop
je
xchg
cmpb
imul
fucomip
cli
lcall
lea
subl
rclb
xor
jns
pop
outsl
adc
in
stos
stc
pusha
ret
enter
prefetch
and
ret
lret
and
popf
inc
and
das
add
adc
cwtl
mov
jns
in
mov
rcll
lea
cmp
xchg
scas
fsts
mov
xchg
icebp
out
and
pop
in
fcmove
pop
xchg
movsl
mov
jp
es
clc
jb
push
cld
jne
mov
jo
aam
mov
cmp
jae
stc
mov
xchg
xchg
jle
sbb
push
ja
repnz
js
mov
lret
pop
les
jle
sbb
mov
xchg
sbb
or
xor
dec
jno
inc
xlat
inc
cmpsl
sub
icebp
testb
or
mov
rorb
or
sti
xorl
push
adc
dec
cmp
inc
mov
jmp
imulb
lods
add
loop
sbb
icebp
fs
mov
cwtl
adc
inc
pop
jno
adc
shl
mov
bound
inc
lds
mov
cmpsb
cmp
in
jb
add
sub
add
cmpsl
pop
mov
or
bound
mov
pop
dec
lea
out
xchg
out
push
sub
sbbb
aas
dec
sub
sbb
lret
cwtl
pusha
add
jle
mov
popa
xor
lret
sbb
pusha
sbb
mov
push
ror
jg
in
sahf
cld
notl
adc
in
popa
leave
sahf
mov
aad
sahf
sub
sub
cmp
aam
sub
ss
add
or
inc
imul
and
jmp
in
sub
or
incl
lahf
jmp
jo
pusha
and
and
push
sub
pop
stos
push
loop
or
mov
xor
aaa
scas
mov
jns
pop
jp
xchg
cli
fistps
jbe
loop
daa
xchg
pusha
leave
cmp
jbe
out
movsb
push
movsl
xlat
leave
out
adc
stc
mov
fwait
inc
mov
insl
idivl
std
ret
inc
fdiv
inc
push
in
sbb
nop
outsl
adc
loopne
inc
push
aam
repnz
push
es
sbb
mov
imul
inc
in
ljmp
mov
add
xchg
fldz
jmp
aam
add
mov
and
dec
jno
mov
cltd
lret
inc
lock
sbb
xchg
xchg
das
sub
jb
fnstcw
shr
sub
inc
sbb
xchg
adc
xchg
les
mov
sub
cltd
sub
rclb
leave
mov
iret
jae
jo
imul
in
in
push
ret
xor
jg
sub
sub
rorl
push
xchg
mov
cmp
jl
and
fmuls
push
dec
or
inc
cwtl
push
ret
cmp
cmc
sub
or
add
sbb
iret
lock
push
mov
push
push
add
mov
rcll
addl
movsb
push
ds
mov
cmpsl
or
addl
bound
sub
mov
ret
jbe
adc
sbb
push
stc
rorb
inc
inc
gs
out
hlt
cmp
jg
jns
and
roll
out
jae
mov
shll
std
fwait
stc
les
dec
cmp
jnp
js
inc
cmp
fidivrl
push
sbb
cltd
push
mov
cmp
xchg
and
mov
sub
cmp
sub
pushf
xlat
incl
dec
rcll
mov
fisubrl
jbe
mov
or
push
mov
gs
imull
push
test
shrl
xchg
daa
dec
dec
push
stos
push
jmp
pop
out
loopne
adc
ljmp
lahf
xorl
fsubl
mov
add
addb
gs
pop
fnstcw
daa
jge
mov
cmpsl
enter
push
cmp
pop
xlat
and
mov
xchg
inc
out
fwait
push
pop
pushf
insb
ret
cs
int3
mov
inc
ret
lahf
stos
xor
cmp
ja
pop
sub
pop
icebp
aaa
jg
pop
fcomp
nop
adc
mov
adc
inc
std
mov
inc
xor
mul
ja
mov
sub
cmp
std
mov
inc
inc
andl
mov
sbb
test
push
das
cmp
in
jecxz
sub
jo
jae
cmp
imul
lods
mov
and
loopne
mov
sbb
sub
mov
sbb
roll
xchg
rcll
adc
outsb
rorb
test
movsl
daa
add
adc
pop
rorb
mov
int3
aad
adc
cmpsb
pop
dec
outsb
loop
rol
xchg
rorb
repz
je
dec
cmpsl
enter
notl
daa
xchg
test
ret
pop
adc
mov
enter
sbb
xchg
pop
mov
stos
push
iret
push
xchg
inc
and
sbb
pushf
dec
arpl
xor
je
xchg
pop
outsl
shll
fstpt
es
sahf
mov
in
and
add
movsl
cmpsb
push
dec
cmp
or
or
or
inc
clc
add
adc
xchg
sbb
or
xchg
icebp
mov
mov
or
mov
pop
inc
inc
in
cli
and
repnz
stc
loop
sub
push
aad
jle
mov
jle
sub
daa
stos
out
inc
mov
and
popa
and
out
pushf
stc
mov
pop
mov
adc
sbb
and
add
ja
or
sahf
pop
cld
fcmovnb
out
leave
sub
mov
push
jbe
mov
arpl
add
jp
lret
sbb
or
dec
test
inc
push
outsl
inc
add
jno
inc
insl
std
xchg
loope
fisttpl
push
sbb
fistpl
out
insb
sub
cmpsb
lahf
add
pushf
imul
nop
inc
addb
adc
les
jne
jle
cwtl
or
or
stos
adc
sbb
fmull
push
jae
or
add
into
fwait
inc
add
fldt
or
dec
out
fadds
loope
call
cmp
jg
sbb
xor
fcompl
test
daa
mov
pop
jne
ss
mov
inc
mov
daa
pop
jo
sub
inc
mov
and
mov
popa
and
loop
xchg
jnp
mov
fwait
pop
cmp
mov
es
insb
ret
loop
jecxz
add
cmc
mov
shlb
mov
and
repz
mov
inc
pop
nop
push
xlat
cmp
pop
js
add
add
ds
xchg
inc
pop
cmp
pop
pop
and
ljmp
out
mov
aad
lods
sbb
push
xor
jg
daa
subl
fnstsw
leave
dec
add
mov
sar
jno
xor
in
fs
fadd
in
xor
ret
or
dec
pop
jl
xchg
loope
mov
in
repz
test
je
inc
cmp
jp
lret
xchg
repz
sahf
lods
mov
jo
cmc
dec
jne
pusha
inc
xor
and
mov
mov
mov
add
cmp
test
mov
ret
adc
pop
addl
xbegin
ja
je
bound
xor
test
mov
push
mov
inc
mov
orl
lret
lret
or
int3
xchg
cld
sub
jb
xor
pop
fstps
jns
or
xchg
and
testl
jmp
or
int
pop
push
cli
mov
dec
mov
popf
mov
xchg
push
sbb
inc
test
insb
lods
loopne
je
movsb
jg
and
dec
mov
movsl
js
inc
std
or
fcompl
xlat
push
dec
loope
mov
fidivs
xchg
xor
pop
mov
aaa
sbb
fistpl
das
cmp
mov
cltd
test
xor
ja
lret
add
push
xchg
arpl
jne
mov
es
sbb
js
mov
cmp
mov
imul
and
mov
stos
xor
jecxz
in
jp
loop
mov
push
fcoms
addb
mov
mov
dec
addr16
dec
or
fprem
mov
jmp
adc
mov
mov
push
dec
popf
out
hlt
inc
or
pop
push
pop
inc
mov
bound
mov
sbbl
sub
popa
jmp
into
or
dec
loope
rcl
xor
shl
jns
movsl
cld
inc
add
in
xlat
dec
push
mov
xchg
inc
enter
xchg
pop
mov
cmpsl
mov
cmp
dec
hlt
cmp
lods
pop
pop
cmp
mov
mov
aas
pusha
add
adc
inc
roll
arpl
call
mov
movsb
pop
adc
push
cmc
movsl
sub
mov
dec
shll
stos
mov
in
push
addr16
push
push
hlt
std
stc
mov
stc
xchg
loope
loopne
cmp
or
fistps
mov
sbb
lret
leave
push
test
pop
cmpb
add
jmp
xchg
lahf
insl
fadds
test
push
xchg
mov
jl
push
int
sbb
daa
lcall
out
inc
sbb
mov
sbb
aam
dec
jecxz
pop
inc
adc
mov
cmpsb
gs
xchg
lods
push
ret
in
stos
mov
js
adc
shrb
shrl
testb
shlb
mov
sarb
fsubs
add
sub
inc
out
sti
jbe
in
jp
sbb
mov
mov
scas
fildll
pop
jb
mov
pop
push
es
mov
xchg
lret
xchg
mov
fsubl
cmp
sti
xchg
cmpsl
pop
insb
ja
jne
popa
inc
repz
std
das
mov
inc
testl
push
outsb
sub
adc
cmpsl
sub
stos
xor
roll
mov
insb
or
cmc
inc
cmc
dec
add
mov
add
mov
mov
dec
jle
dec
cmp
lcall
stos
fwait
addr16
push
push
mov
and
idivl
test
cmpsb
ds
ror
or
xchg
sub
push
loope
hlt
pusha
fildll
push
inc
inc
cwtl
loop
and
add
mov
xchg
icebp
outsl
into
mov
mov
inc
shl
cmc
mov
popf
push
jnp
pop
adc
jmp
pop
xor
cmp
xchg
js
je
push
je
enter
push
mov
xor
fisubrl
xor
out
or
jbe
popa
mov
in
jecxz
sub
jno
jg
stos
mov
add
shl
pop
imul
cmp
bound
jns
fstpt
sbb
add
or
cmpsb
mov
mov
dec
out
sbb
mov
xchg
push
inc
loopne
adc
fiadds
jb
or
cmp
clc
js
test
ja
popf
fsubrl
fcmovnu
cwtl
cmc
xor
cmp
sti
inc
pop
shrb
mov
insb
std
jmp
mov
adc
insb
xor
mov
push
mov
test
dec
test
je
jmp
inc
movsb
xchg
pop
repz
or
mov
lods
xor
mov
xchg
push
call
jecxz
pop
xchg
leave
shlb
push
cmp
cwtl
jno
push
lds
pop
cmpsl
fnstsw
lds
dec
icebp
mov
mov
or
ds
sub
jnp
sbbb
cmpsl
xor
ret
push
cmp
inc
lods
xor
jge
or
in
dec
popa
push
pushfw
jno
mov
adc
les
inc
jp
xchg
das
repnz
jg
and
adc
insl
cmp
dec
data16
dec
xor
pop
or
mov
stos
iret
cli
nop
test
cmpsl
sbb
xlat
out
sub
add
je
cmp
mov
inc
xor
sbb
cmp
pop
pop
sbb
xor
pop
dec
xor
jge
addr16
adc
cld
xor
adc
pop
cld
fistps
mov
sub
inc
pusha
jl
out
mov
inc
pop
dec
jne
test
pop
xor
mov
add
and
cmp
fdivs
sbb
in
adc
inc
jne
je
xchg
in
cltd
pop
mov
xor
push
mov
cmpsl
popf
pop
inc
jnp
push
pop
out
imul
fs
mov
sub
loope
nop
xchg
cld
jns
sti
or
gs
inc
jae
adc
push
mov
arpl
mov
aaa
cltd
mov
stc
add
sbb
add
dec
sbb
cmp
jb
stos
lock
xchg
cmc
lahf
mov
in
fildll
mov
leave
jle
dec
stc
stos
push
pusha
in
and
lahf
shl
mov
sub
notl
loop
cmc
cmp
mov
mov
cltd
popl
aad
cmp
insl
rorb
mov
inc
sub
cmc
sub
and
lods
jecxz
add
and
lahf
inc
cmc
pusha
fbstp
insb
adc
adc
loop
out
shlb
cmc
pop
cmc
pop
cmp
jns
mov
cld
icebp
negl
pop
fidivl
inc
jl
inc
mov
push
dec
xor
pop
adcb
cmpsb
out
sbb
mov
lods
rclb
fstp
dec
cmp
jl
xor
adc
xchg
or
movsl
and
inc
pop
push
out
mov
add
clc
lock
adcl
adc
sbb
jno
cld
pop
movsb
cmpsl
fwait
add
mov
scas
or
sub
and
mov
repz
je
cld
test
add
daa
add
add
push
dec
cmp
sbbb
enter
xchg
mov
pop
mov
and
cmc
fwait
dec
std
aaa
pop
sub
sbb
pop
jnp
out
jmp
js
lods
dec
cmp
loope
push
clc
jg,pt
dec
jb
push
xchg
mov
lods
dec
add
cld
out
dec
or
pop
mov
imul
inc
test
int3
cli
loope
mov
into
push
das
inc
jns
cmp
call
push
stos
pop
das
push
and
adc
jge
lock
sub
push
insl
repz
repnz
fcoms
cltd
imul
or
xchg
or
aas
je
push
cmpsb
xorb
fs
rcrl
les
jle
push
dec
inc
xchg
in
xlat
jmp
sub
and
or
push
pop
mov
icebp
pop
fcmovnb
xlat
cmp
and
negl
jle
sbb
cmp
jle
dec
pop
js
mov
daa
repnz
int3
scas
cld
rorl
mov
dec
jno
sbb
xchg
in
sub
push
inc
sub
fmulp
push
xchg
repnz
fdivs
popa
mov
push
ret
in
cwtl
std
sub
data16
icebp
lret
push
dec
cli
repz
jnp
rcrl
pushf
adc
mov
mov
sti
aaa
idiv
sbb
mov
cmpl
cmp
sub
push
dec
cmp
xor
mov
int
lret
mov
mov
cltd
les
scas
mov
xchg
sbb
insl
pop
loope
adc
ds
inc
jb
xchg
mov
mov
pusha
popf
loope
mov
iret
pop
loope
adc
or
and
jl
mov
stos
loope
call
or
sub
mov
jbe
scas
cwtl
push
cmpsl
sbb
fiaddl
shl
mov
leave
lret
pop
inc
out
test
ja
rorb
cmp
out
test
pop
test
add
shrl
loope
or
stos
mov
push
ja
xor
lock
sbb
mov
aad
inc
or
aaa
adcl
jg
inc
cmp
push
andl
cmpsl
or
sti
jl
je
jmp
inc
mov
jmp
xchg
pop
xor
sbb
mov
add
sub
maxps
xor
xchg
jmp
xchg
xor
int
dec
mov
bound
adc
xor
pusha
in
and
shll
out
in
cmc
dec
int3
inc
aam
stos
mov
rorb
lods
mov
in
nop
and
fstps
xchg
jns
xor
filds
jns
xor
push
dec
xchg
jl
xor
or
in
rorb
inc
testb
jno
inc
push
mov
xchg
mov
jno
cli
or
pop
outsl
and
and
out
cmp
xor
int3
cwtl
shlb
out
xor
jo
xchg
dec
inc
inc
sub
jecxz
mov
fsubrs
testb
movlhps
lahf
xchg
pushf
dec
lds
mov
test
ss
shl
sbb
in
sbb
fxtract
mov
jp
pop
xchg
fdivs
sub
outsb
das
ja
mov
incb
popf
cmp
enter
lods
ror
xchg
xchg
push
sub
adc
pop
jmp
movb
fmuls
cwtl
cmp
pop
add
das
or
into
mov
pop
push
xchg
and
jno
in
icebp
into
mov
mov
mov
dec
xchg
cmp
repnz
add
or
inc
push
movsl
push
cmc
mov
sbb
dec
cmp
and
jmp
ljmp
pushf
loope
scas
cmc
fnstsw
mov
aas
jb
push
sahf
push
into
cli
push
insl
and
or
cmp
in
sub
popl
pop
sbb
mov
push
cmp
and
ds
in
test
push
mov
cltd
stc
push
decb
lea
pushf
jnp
das
test
mov
das
sub
rclb
push
or
mov
jle
and
sti
int3
pushf
mov
xor
xchg
js
inc
jle
adc
les
xor
scas
cmpsl
and
out
sahf
fsubr
add
add
adc
repnz
imul
add
and
rcll
push
push
wrmsr
pop
sub
test
imul
mov
pop
enter
push
adc
add
xor
lods
pop
jl
cld
stc
xchg
xchg
insb
cld
in
add
mov
sub
or
pop
fcmovne
sbb
dec
dec
dec
pop
adcb
insb
aaa
pop
mov
sbb
sub
add
je
xchg
ret
icebp
mov
jnp
xlat
push
xor
push
xor
std
test
bound
adc
dec
enter
xor
push
jle
cmpsl
daa
jg
ds
push
jmp
test
mov
cmp
hlt
in
add
and
enter
fbstp
cmp
out
test
call
inc
dec
imull
add
xlat
push
in
mov
cmp
xor
xor
sub
cli
mov
pop
movsb
roll
sbb
push
jae
lods
fisttpl
add
dec
adc
mov
push
cmp
mov
lahf
push
push
lods
stos
scas
jge
dec
cmpl
add
daa
lcall
je
mov
inc
mov
bound
adc
repnz
xor
push
xchg
mov
jb
xchg
mov
sub
mov
jae
jmp
pop
push
out
jecxz
push
in
sub
jo
sub
lea
mov
outsl
aaa
mov
loope
add
es
fimull
pop
imul
sti
push
fisubs
xor
addr16
adc
lcall
and
rcll
xor
xor
push
sub
stos
lods
xchg
xor
or
jg
jp
aam
add
and
test
cmp
xor
jle
mov
push
jle
cmp
mov
outsb
push
dec
in
rcrl
in
das
call
es
pop
das
cwtl
mov
stos
arpl
jno
cmp
mov
decb
dec
mov
pop
push
sarb
push
inc
jbe
stc
mov
mov
and
enter
adc
sbb
bound
sti
sbb
fs
mov
rorl
or
xchg
add
inc
arpl
sbb
cld
add
sbb
push
shrl
xchg
fwait
jbe
push
add
scas
adc
mov
or
xor
push
jae
loope
sub
and
bound
pop
fisttps
xchg
add
push
add
testb
mov
jo
shr
xor
xchg
xor
xchg
jno
push
mov
inc
and
scas
sahf
mov
mov
add
pusha
and
sbb
data16
cwtl
leave
xchg
subb
aaa
pop
xchg
sbb
sahf
jo
leave
cltd
insb
mov
lods
xchg
popa
addl
or
int
aad
lcall
mov
sbb
lods
int
test
jecxz
addr16
out
mov
in
icebp
push
test
imul
inc
xchg
sbb
xchg
adc
or
adc
insl
fdivrs
push
mov
sub
outsl
bound
pushf
sub
xchg
pop
pop
jns
inc
mov
into
push
pop
fldcw
mov
insl
test
mov
dec
or
rorl
jge
loope
dec
lret
pusha
sub
pop
pop
rcr
mov
fwait
xchg
movsl
mov
test
in
mov
lret
aad
stos
mov
jno
leave
jns
push
into
bound
bnd
mov
scas
xchg
xchg
inc
adcl
jge
mov
insb
or
inc
jp
loop
sub
dec
pop
cwtl
cld
shrl
sbb
popf
out
enter
mov
xor
xchg
outsb
adc
in
test
das
pop
mov
sub
jmp
sbb
imul
add
stc
in
dec
add
sbb
push
mov
lock
mov
or
and
movsb
cmp
mov
sbb
in
mov
lret
pop
imul
add
inc
push
sub
les
call
mov
mov
mov
or
lock
and
xchg
mov
xor
mov
ja
push
mov
or
mov
test
add
sarb
xor
dec
xlat
xchg
and
dec
js
pop
stos
lret
sub
push
push
and
adc
arpl
fidivl
imul
inc
pop
stc
jle
xchg
dec
insb
outsb
add
repz
imulb
ret
pop
cmp
out
inc
js
push
mov
sub
lods
dec
adc
aad
xchg
stos
fcomps
mov
push
int
arpl
imul
cltd
lock
lret
test
or
pop
rclb
dec
sahf
fwait
rcrb
enter
pop
shrb
std
mov
int
xor
mov
xchg
shlb
mov
sub
test
xlat
notb
adc
test
lahf
popl
xor
lods
fmull
data16
mov
int3
push
pop
test
movl
cmc
dec
xchg
push
dec
enter
mov
pop
sub
sarb
gs
add
sub
popa
ds
stos
fnstsw
push
xchg
ja
push
adc
sub
in
cld
mov
stos
mov
sbb
subb
and
cld
jno
pop
mov
mov
fucom
mov
std
ss
add
popf
dec
test
push
ljmp
vldmxcsr
in
pop
mov
mov
out
fndisi(8087
cld
pop
jl
mov
and
push
xchg
inc
bound
jg
ret
mov
call
pop
sub
or
pushf
pop
adc
test
ret
mov
lock
add
and
jg
ljmp
mov
sub
adc
inc
imul
push
mov
jnp
pop
outsl
mov
movsl
jne
mov
dec
pop
dec
adc
and
sub
jb
mov
fidivrs
and
mov
int3
fs
fnsave
jb
scas
mov
mov
loopne
inc
cwtl
cmp
sbb
ss
adc
or
test
sbb
push
jl
imul
ss
iret
mov
cmp
xlat
or
iret
loopne
std
ficomps
xchg
nop
pop
inc
push
add
dec
clc
jo
mov
rol
out
shll
xor
push
sti
jmp
fists
es
sub
fistpll
in
pop
lods
scas
or
orb
orl
aad
clc
add
jg
test
xchg
mov
pop
mov
in
scas
das
lahf
loopne
enter
sbb
mov
sbb
xlat
loop
in
enter
jge
xor
push
lock
jbe
sbb
fs
pop
ljmp
jbe
sbb
push
dec
repnz
lret
js
adc
mov
and
in
aas
xchg
loopne
dec
dec
jo
mov
aaa
or
mov
jge
aaa
cmp
addr16
sbbl
dec
inc
rcr
insb
imul
sub
jecxz
jmp
adcb
mov
jmp
dec
push
push
in
cmp
push
gs
stos
xor
imul
cmc
cmpsl
lods
inc
ja
stos
lods
test
mov
cltd
pop
call
mov
and
and
push
sub
lret
jns
jecxz,pt
pushf
leave
adc
inc
aam
roll
and
lds
push
xchg
adc
into
sarb
sahf
dec
stc
cmc
adc
vaddsubps
inc
mov
aas
pop
fcoml
xchg
aaa
inc
andb
into
cld
and
push
or
push
out
repnz
stc
jb
mov
adc
nop
xor
scas
iret
and
ret
sahf
test
outsl
mov
mov
fwait
lcall
out
sahf
or
call
loop
sbb
lret
mov
dec
dec
and
jb
xchg
call
pop
repnz
add
lds
lcall
shll
jns
int3
push
iret
pop
sub
cmp
xlat
sbb
and
call
test
xlat
pop
adc
jb
nop
shll
adc
mov
leave
insb
idivb
push
in
lcall
dec
push
and
jg
fldenv
ja
orl
xchg
inc
test
fsubs
xchg
fcmovnbe
pushf
and
dec
mov
push
xlat
lods
sub
inc
lret
repz
xchg
mov
fs
lock
aam
loop
loop
cmp
inc
movaps
xor
xor
test
adc
test
cmpsl
enter
cmp
fisttpl
daa
sbb
xlat
push
addb
arpl
imul
lcall
cmp
inc
or
push
jle
cmpb
outsl
int
add
pop
icebp
lods
repz
ja
push
xchg
shlb
fiadds
inc
cmpsl
xor
fidivrl
and
or
mov
add
stos
cmp
push
sub
sub
add
loopne
push
mov
out
mov
xor
dec
fmulp
sbb
adc
fs
adc
dec
andb
dec
push
cmp
mov
or
pop
pusha
out
mov
mov
and
sub
jo
xchg
in
insl
data16
xor
cmc
scas
jo
shrb
cmovbe
xchg
or
push
cli
dec
je
xchg
push
push
cmp
jp
inc
insl
jecxz
sbb
or
and
adc
icebp
sub
nop
lret
sub
mov
cs
jb
xor
xor
mov
int
rolb
push
pushf
pushf
add
pushf
fsubs
lcall
fnsave
les
rol
sbb
or
cs
inc
xor
stc
and
lahf
push
xchg
mov
cmp
cwtl
xlat
repnz
or
xor
setns
adc
imul
ljmp
jg
js
out
arpl
dec
xor
outsl
dec
jp
push
aas
iret
cmpsl
hlt
repz
add
nop
imul
jg
or
and
and
sub
jmp
popf
xor
rcrb
call
mov
push
hlt
fsubp
add
mov
jnp
dec
dec
lea
daa
ss
pop
leave
sub
add
pop
sub
mov
ret
xchg
ds
ja
add
or
jmp
movsl
cmp
jp
and
xor
mov
xchg
jb
scas
and
mov
sbb
clc
and
xor
lret
mov
sti
popa
stos
out
push
subl
fmuls
iret
sbb
xchg
aaa
cmp
shr
stos
aam
mov
mov
in
cmp
dec
movsb
dec
jns
loopne
push
into
pop
add
mov
out
jmp
dec
test
fwait
pushw
push
rclb
push
or
fildl
js
shlb
fmuls
xor
push
cltd
cmp
js
mov
pop
adc
cmp
push
test
and
jp
inc
xchg
shrl
imulb
cs
mov
sub
cmc
adc
loope
inc
push
add
xchg
xchg
jne
pop
imul
pop
dec
push
fcoms
clc
jno
xchg
lcall
inc
push
rcrb
mov
sub
cmpb
pop
cli
cld
sub
mov
pop
ja
pushf
int3
jne
sbb
jg
pop
fwait
jle
cmp
sbb
pushf
adc
cmpb
je
mov
pop
stos
xor
sbbb
xor
xor
xchg
sbb
and
jne
mov
xor
dec
fdivs
xorb
lock
in
inc
push
or
xlat
and
mov
flds
and
mov
pop
xor
pop
clc
sbb
xor
mov
add
loope
ret
xchg
rcrl
xor
sub
idivl
ljmp
aaa
or
xchg
push
push
inc
jnp
inc
push
or
leave
outsb
testl
inc
sbb
adc
loop
cmp
pop
adc
cmp
adc
sub
jle
sti
mov
ds
xchg
mov
outsl
adc
dec
or
sub
fistpll
es
mov
leave
add
push
push
leave
aad
stc
xchg
out
and
mov
lods
lock
cmp
push
pop
js
out
xchg
sarl
jg
es
dec
cmp
push
sarb
mov
loop
leave
fpatan
cmpl
out
mov
cld
aaa
mov
mov
or
inc
dec
jecxz
pusha
lcall
insb
mov
icebp
pop
mul
fisubl
dec
movsb
or
lds
push
insl
mov
subb
xchg
push
pop
pushf
movsl
movsb
mov
mov
xlat
mov
and
out
test
mov
sbb
pusha
mov
int
fwait
test
lock
adc
cmp
stos
aaa
lods
fsubs
pop
pusha
lahf
mov
test
cwtl
fisubrl
sahf
imul
and
mov
cmp
pop
lds
loop
xor
pop
orl
ss
sub
xchg
fldl
popf
iret
cwtl
mov
clc
xor
mov
daa
dec
sahf
xchg
lea
shll
jmp
jbe
pxor
pop
push
mov
loope
and
jmp
and
pop
sub
cltd
out
dec
xchg
cmp
xor
adc
jne
subl
push
ja
aad
pop
repnz
fcoml
dec
jl
mov
inc
inc
push
out
sub
out
gs
push
into
add
movsl
push
pop
dec
sub
dec
sub
mov
out
int3
sbb
push
push
pop
sti
dec
repnz
les
dec
subb
xchg
test
popf
dec
fsubrl
sarl
and
inc
dec
lret
push
inc
add
jmp
popf
ja
pop
adc
xlat
insb
test
cmp
test
push
lret
scas
xchg
push
dec
arpl
insb
mov
sbb
mov
je
outsl
fnstcw
div
jg
es
xor
out
push
cmpsl
syscall
arpl
cltd
js
negb
adc
push
inc
jecxz
dec
jbe
or
popa
sub
lret
sub
sub
pop
pop
jge
pop
adc
cltd
mov
jb
pop
shll
push
aam
xor
push
xor
adc
xchg
lret
and
in
test
fsubr
movsl
in
xchg
mov
and
fsts
mov
xchg
add
xchg
pusha
inc
xor
cmp
lahf
test
xor
popf
insb
cmp
test
pop
sub
jmp
pop
xbegin
cmp
cmp
and
inc
pop
fadd
sti
push
push
cltd
jp
dec
xchg
repz
lods
std
xchg
fs
sub
jns
sti
data16
aad
mov
das
jle
cwtl
lods
jno
sub
dec
aam
not
mov
ds
les
loope
xchg
inc
fstps
ror
push
imul
fcompl
lods
lods
inc
int3
repnz
fcmovnu
mov
inc
xchg
inc
jns
popa
add
hlt
mov
es
in
or
call
pop
sbb
jp
aas
dec
lahf
ret
mov
inc
jno
mov
xchg
push
enter
jne
mov
pop
pop
push
dec
jo
jno
leave
push
and
or
in
lods
sarl
adc
dec
push
pop
ja
inc
adc
gs
mov
icebp
and
sub
ljmp
pop
add
jg
cmp
ss
mov
or
mov
cmp
dec
aad
pop
popf
push
mov
in
loop
mov
jp
inc
lods
movl
jns
add
sbb
xor
aaa
mov
fwait
and
mov
xchg
int3
loopne
inc
inc
jecxz
test
jnp
mov
punpckhbw
inc
cmp
xchg
gs
jmp
mov
clc
jge
ror
inc
jge
subl
jmp
loope
adc
or
add
cmpsb
dec
std
jno
mov
std
sti
arpl
sahf
mov
out
repz
sub
and
int3
sub
xchg
stos
in
mov
movsl
testb
jmp
not
frstor
cmpl
sbb
not
imul
into
add
xor
sti
stos
movsl
mov
sbb
notl
imul
das
add
inc
lds
cmp
sbb
pop
mov
mov
cli
movsb
jnp
fldcw
dec
xchg
xchg
ja
into
outsb
adc
sarb
lods
ret
xchg
jb
sbb
sub
mov
iret
sub
pop
add
stos
loopne
insb
je
jb
mov
inc
mov
sbb
cmpsb
in
mov
and
fdivr
push
cltd
push
pusha
sub
jbe
adc
adc
sub
fmuls
or
or
bound
dec
rclb
ja
mov
mov
or
add
lahf
inc
aam
sub
mov
test
das
std
imul
mov
adc
mov
insb
xor
inc
and
cmp
xchg
push
mov
sysret
gs
fldt
pop
je
mov
mov
mov
push
stos
xor
sbb
pusha
sub
sbb
jb
xor
jae
std
lahf
imul
xchg
mov
dec
mov
lea
lret
lret
jp
or
cwtl
dec
pop
mov
mov
pop
rorb
xchg
dec
enter
cli
xchg
mov
xor
mov
and
lret
cs
xchg
bound
inc
in
test
daa
sub
jb,pt
icebp
inc
inc
mov
mov
inc
pop
mov
mov
out
addb
hlt
push
fildll
add
dec
add
leave
push
bound
add
aam
lods
inc
jp
je
and
sub
movb
xchg
push
lret
adc
fwait
pusha
pop
jp
jo
cmp
dec
inc
arpl
addr16
popa
jno
or
adc
sbb
or
jge,pt
lret
cmpsl
xchg
push
aas
xchg
jl
sub
dec
dec
mov
jge
int3
ficomps
cwtl
out
test
add
push
outsl
out
add
repz
jmp
mov
test
push
adc
lods
inc
adc
adcl
fld
jb
es
das
in
cmp
clc
push
dec
scas
ljmp
out
arpl
mov
sbbb
popf
addr16
mov
pop
ljmp
mov
imul
fdivl
or
test
cmp
das
mov
pop
xchg
push
jb
sub
mov
xor
decb
lcall
dec
mov
xor
cmc
jmp
mov
push
fwait
sbb
scas
ja
loopne
jl
mov
clc
scas
pop
ret
mov
jne
jge
mov
adc
adc
sub
add
adc
add
inc
xorb
stc
cmp
repz
leave
imul
int3
sub
int
int
jno
push
ficoms
aad
loop
mov
sub
loop
out
xor
or
xorb
test
xlat
sbb
fisubs
inc
clc
rcr
outsb
inc
outsb
mov
out
fs
dec
loope
or
xchg
sti
dec
movsb
sub
mov
outsl
xchg
add
test
out
adc
ja
adc
fadds
stc
mov
mov
sbb
je
nop
add
les
aad
scas
out
push
cld
dec
sbb
icebp
xchg
cmp
jmp
mov
jp
jg
dec
comiss
dec
sub
add
negl
pop
lds
cmp
inc
jp
test
pop
in
flds
xor
insb
sub
mov
lcall
and
mov
scas
daa
mov
hlt
mov
inc
movsl
hlt
xor
xchg
test
jnp
mov
lods
push
mov
scas
fisubs
aas
or
cmp
fldl
xchg
adc
out
xchg
mov
ret
ljmp
inc
imul
out
mov
xlat
aas
xchg
push
stos
idivl
cmp
mov
iret
pop
inc
add
test
in
dec
sub
sub
mov
rorl
mov
pop
into
mov
push
pop
xchg
pusha
push
out
popf
hlt
push
jge
adc
dec
fisubs
push
jnp
push
mov
adc
dec
adc
sahf
dec
cmp
cld
loopne
fsubrs
sbb
pop
dec
orl
mov
nop
out
pop
sub
mov
aad
or
mov
lods
push
xor
cmpsl
dec
imulb
jl
xor
sbb
cltd
adc
adc
add
add
sub
mov
imul
jl
xor
test
iret
mov
add
xor
cmp
and
gs
ja
scas
gs
dec
rcrb
ja
pop
sbb
jno
pop
iret
iretw
mov
mov
repz
adc
pop
mov
out
insb
mov
cli
ljmp
or
sarl
push
fs
lahf
add
push
fistps
lahf
std
xor
into
jmp
fadd
aam
push
and
jmp
cmpsb
mov
pop
dec
ds
aaa
inc
pop
jne
adc
sahf
xlat
or
nop
xor
ror
push
or
lock
in
jns
pop
decl
sbb
adc
sahf
pop
dec
push
inc
adc
aam
mov
jg
pop
mov
in
fsubrp
nop
inc
movsb
daa
mov
jns
push
fs
iret
push
fldt
leave
push
mov
cltd
lock
leave
lock
dec
stos
inc
sub
iret
push
rorb
insb
sub
or
fildll
xchg
xchg
pop
ja
scas
adc
mov
xor
cltd
sahf
xchg
sbb
inc
xchg
jb
into
mov
mov
or
cltd
ljmp
jge
out
ror
pop
mov
in
stc
xor
cs
xor
xchg
mov
jle
cmp
aad
cmp
jno
std
int
aas
iret
imul
test
idivb
out
cmpsl
popf
or
int
jns
lds
ljmp
mov
add
sub
push
xor
gs
leave
or
push
xchg
mov
bound
bound
bound
mov
ds
incb
cmp
insl
pop
jmp
dec
inc
cwtl
outsb
lret
rep
and
xor
mov
push
lock
mov
xor
mov
cmpl
ds
pop
sahf
cmp
adc
fdiv
pusha
pop
loop
ljmp
lret
repz
scas
ljmp
push
cmc
jg
mov
xchg
movsl
xor
sbb
testb
out
xchg
push
dec
jns
test
mov
dec
mov
stos
lods
js
and
push
shlb
ss
repz
mov
dec
sbb
cmp
mov
aad
sarb
repz
mov
or
andps
add
int
mov
push
pop
inc
sub
lret
sti
in
mov
int
sahf
idivl
sbb
inc
pop
adc
lds
xchg
and
inc
pop
mov
mov
pop
inc
das
popa
out
cmp
clc
mov
int
lret
jns
mov
das
cmp
mov
in
jb
add
inc
cmp
dec
hlt
cld
mov
movsl
js
and
cmp
pop
loopne
mov
inc
cli
mov
popl
mov
mov
jnp
adc
pop
bound
bound
mov
mov
and
add
leave
cmp
lock
dec
pop
mov
jmp
jnp
cmp
or
xor
push
clc
xor
mov
xchg
push
mov
fbstp
or
mov
into
mov
loopne
enter
xchg
dec
pop
jecxz
push
or
push
bound
push
stos
adc
shlb
nopl
cmp
lahf
push
sub
aad
in
out
mov
sub
lock
cmp
adc
push
lret
mov
repz
inc
imul
andb
mov
popa
enter
sbb
inc
iret
jae
ret
fistpll
jns
testl
cmpsb
outsl
jb
test
xchg
call
sbb
movsb
fcmovnu
mov
add
or
add
dec
bswap
jns
movsb
dec
or
inc
mov
sar
inc
test
ljmp
adc
movsl
sti
mov
fwait
push
inc
cld
dec
shrb
jmp
cli
inc
cmp
cmp
mov
cmp
xor
aad
push
mov
xchg
sub
adc
daa
or
jo
or
adc
pop
mov
int3
or
add
mov
xor
mov
xlat
les
shl
pop
push
scas
inc
test
lret
jle
sti
inc
mov
dec
scas
xchg
jecxz
mov
inc
push
lahf
sbb
popa
sti
add
cmpsb
test
div
in
mov
and
mov
adc
leave
sti
loopne
add
inc
subl
cmp
xchg
daa
xchg
push
loopne
sub
xchg
mov
sahf
jo
mov
lcall
daa
jp
in
xor
push
lret
ret
test
and
push
ud1
out
sbb
shl
nop
stos
push
cmp
mov
xor
sarb
lahf
lods
aad
add
jns
and
mov
pushf
add
or
push
out
pop
adc
xchg
movsl
xor
mov
fadds
loop
pop
cmc
jle
mov
or
je
ds
aaa
roll
mov
aas
jl
outsb
in
fnstcw
cmp
push
mov
mov
and
sbb
sub
jnp
or
cwtl
and
aas
inc
iret
and
cltd
sbb
repz
add
leave
mov
das
or
xchg
mov
ret
inc
test
test
sub
mov
add
jae
mov
int
dec
std
add
sbb
sub
lret
je
out
int3
mov
popf
outsb
roll
fimull
sahf
movsb
jg
les
shl
xchg
imul
mov
sub
stos
dec
push
add
pop
xchg
adcb
hlt
sub
sbb
clc
cli
iret
scas
adc
mov
loopne
inc
jg
jo
rcl
xor
cwtl
mov
jmp
dec
nop
sbb
in
pop
loop
fldcw
mov
lret
ja
mov
gs
or
sub
mov
call
cmpsb
pop
and
sbb
enter
mov
outsl
xchg
jl
cmp
aam
orb
pop
mov
rorl
sahf
mov
test
movsb
and
popf
jle
mov
sti
or
xor
mov
cmpsl
roll
dec
ja
dec
ss
movsb
fstl
in
mov
lret
push
outsl
pushf
mov
sub
lock
or
mov
sub
and
xlat
fldl
hlt
dec
cmp
notb
int3
inc
cmp
jg
lock
mov
rcl
int3
adc
cmp
je
dec
sbb
mov
push
inc
pop
leave
xchg
fsubrs
push
and
test
or
mov
cld
fisubrl
jle
daa
mov
scas
fisubrs
and
sti
pusha
rol
out
push
push
sbb
jo
es
call
mov
scas
pop
stos
jne
fisubrs
sub
sbb
lret
mov
mov
mov
lea
fidivs
int
add
jp
lock
sbb
add
sbb
sub
cli
gs
and
and
insl
cmc
add
cltd
dec
outsb
icebp
xor
pop
cltd
inc
in
jg
mov
xchg
pop
cmp
mov
les
xchg
sub
mov
lret
mov
mov
xorb
add
xchg
fldenv
adc
addr16
bound
daa
sub
adcl
cmc
fildl
cmpsb
std
add
add
lods
push
out
out
adc
sbb
addr16
rolb
loope
push
into
enter
sub
lahf
call
shll
mov
xchg
push
iret
out
jbe
jo
popa
aaa
shrl
and
push
mov
lods
push
dec
or
mov
dec
sbb
jp
mov
mov
repnz
cmc
lods
sbb
cs
fs
fs
es
xor
loop
gs
cmp
daa
lods
ja
xor
cwtl
imul
dec
int
sti
call
jb
stc
je
fcomps
push
test
and
mov
mov
xlat
xchg
out
xchg
mov
push
rcll
add
jnp
insb
sahf
jns
sbb
sub
adc
xlat
xor
hlt
repz
dec
test
sbb
inc
sbb
pushf
cli
adcl
sub
popa
sbb
aaa
daa
or
pop
popf
stos
std
outsb
cmp
stc
jae
mov
mov
mov
mov
xchg
or
xor
xor
dec
aad
imulb
and
mov
and
inc
xor
jno
out
vcvtdq2ps
cmpsb
in
push
jg
cld
mov
pop
gs
ret
cmpsb
fs
mov
xlat
test
pop
sub
dec
add
dec
or
nop
aaa
add
xor
or
imul
sbb
or
loop
test
sub
push
dec
call
push
imul
mov
mov
aaa
ds
cmpsb
mov
jecxz
mov
xor
mov
sub
add
dec
roll
stos
pop
push
push
pop
jmp
aaa
jb
icebp
movsl
jnp
fs
sub
icebp
sbbl
push
mov
outsb
les
outsb
cli
xchg
jp
lahf
rcl
pop
mov
jp
jb
dec
call
and
cmp
dec
gs
data16
push
pop
bound
push
pop
jo
daa
or
test
mov
aas
rcrl
cld
push
mov
or
sarb
popf
push
xorl
push
jl
hlt
jne
xor
jb
adc
int3
cmp
inc
push
push
out
dec
push
mov
mov
push
mov
push
push
and
and
dec
in
push
jle
cli
mov
sahf
mov
in
movsl
fdivs
pop
sbb
jmp
xchg
dec
push
jmp
aam
pop
push
movsl
xchg
scas
imul
out
pop
xor
fsts
jne
dec
xchg
cmpsb
sbb
imul
fdivrs
adc
fcomi
mov
hlt
testb
hlt
jecxz
jecxz
mov
sti
adc
fadd
cmp
mov
int3
dec
cltd
dec
sub
mov
mov
or
push
add
jns
inc
cmp
add
int
xchg
loopne
adc
jecxz
xor
xor
rclb
adc
and
xchg
out
shlb
into
mov
sti
ficomps
jmp
inc
dec
mov
incl
loopne
nop
sbb
xchg
test
lcall
dec
xchg
ljmp
lcall
pushf
mov
jmp
addr16
dec
subb
lcall
inc
adc
jae
mov
in
pop
loopne
cwtl
dec
add
ja
mov
xor
addr16
ss
add
int3
xchg
std
xor
mov
pop
insl
pusha
test
adc
pop
fistpl
jne
and
and
fs
cwtl
fwait
push
daa
ljmp
hlt
mov
ret
xchg
xchg
adc
ficomps
std
or
cli
ja
xchg
sub
or
pushf
mov
or
sub
jl
scas
push
cltd
lahf
pop
mov
pop
pop
xor
fwait
lret
push
hlt
movsb
std
dec
pop
and
clc
xor
jmp
xor
hlt
jne
pushf
shlb
jle
lea
leave
scas
cmpsb
loop
pop
sub
sbbl
shrl
lods
and
sbb
fisubrs
nop
sbb
mov
nop
mov
testl
sbb
jecxz
in
lahf
clc
add
xor
inc
repnz
or
jle
cmp
mov
xchg
dec
adc
mov
cmpsl
insl
add
les
mov
push
fmul
call
pop
add
imul
xchg
or
push
pop
push
cwtl
fmuls
mov
and
pop
insb
push
dec
mull
rcrb
add
shlb
jnp
repz
mov
and
push
xlat
xchg
int
adc
mov
inc
scas
insb
test
scas
shlb
and
xchg
sub
rcrl
adc
int
outsb
push
lods
xor
jge
or
mov
add
pop
inc
hlt
cmp
inc
push
stos
fstpt
jbe
mov
mov
lret
addr16
mov
jne
addr16
adc
cli
mov
cmpb
clc
in
ss
cmpsb
xor
mov
sub
imul
sahf
and
fimuls
push
adc
push
xchg
clc
mov
cmpsb
sti
jb
es
icebp
stos
jbe
jp
mov
mov
cmp
fs
adc
cmp
test
cmp
mov
je
mov
mov
xor
in
lret
neg
stc
bound
inc
out
sub
flds
movsl
inc
sti
xchg
repnz
mov
xchg
cwtl
or
into
cmpsb
jmp
aam
jecxz
iret
stos
je
pop
orb
mov
imul
jle
adc
or
leave
call
push
repnz
daa
into
ret
repz
dec
xchg
adc
movsl
rcrl
fdivl
mov
lds
mov
scas
pop
mov
mov
push
xchg
push
cwtl
mov
jg
add
pusha
outsb
pop
mov
sbb
push
stos
dec
mov
cs
mov
int
pop
into
pop
int
loop,pn
mov
out
pop
or
aam
cli
adc
and
into
jo
int3
xchg
jmp
inc
in
cmpsl
or
cwtl
sbb
daa
scas
fsubs
movsl
dec
rcll
rcrl
dec
outsb
sti
xor
std
mov
inc
bound
push
jp
mov
pop
or
fbld
rcl
sub
std
movsb
and
push
push
ret
adc
jl
cmp
and
inc
enter
jg
adc
ret
push
out
xchg
fs
jl
out
cmp
push
aad
inc
test
xchg
leave
dec
jbe
xor
jne
into
or
xchg
imul
aam
es
or
adc
jo
pop
pop
push
sbb
and
cli
test
leave
shll
pop
or
out
inc
mov
shrb
mov
fdivl
cmp
lea
test
hlt
mov
ficoml
fwait
inc
jnp
inc
or
stos
jge
rclb
fbstp
push
sbb
adc
sti
insb
inc
lret
xor
out
mov
jo
add
sub
mov
jl
out
mov
enter
dec
xchg
outsb
es
lahf
xchg
xchg
into
cmp
inc
sahf
mov
out
pop
mov
pop
cld
xor
frstor
xchg
fisubs
mov
mov
push
jo
jae
repz
lock
stos
lret
fistpll
jmp
mov
push
in
iret
push
xor
adc
test
mov
pop
sbb
fildl
sub
sub
fistl
shll
sub
jbe
test
mov
aam
dec
jno
adc
fnstenv
cmpsb
negl
pand
mov
movsb
jp
inc
push
scas
dec
test
movsb
popf
aas
outsl
outsl
dec
jne
cmp
and
pop
xchg
movsl
aas
popa
adc
and
xchg
cs
adc
call
stc
faddl
mov
lods
hlt
jle
push
dec
fscale
add
mov
ficoml
xchg
xchg
mov
pop
movsb
popa
pop
dec
jbe
outsb
faddl
lahf
inc
fwait
out
sarb
cld
mov
mov
jns
lock
stc
push
fucompp
sbb
sbb
pop
lret
mov
mov
iret
test
add
jle
jge
test
mov
sti
pop
addl
imul
cld
and
pop
or
test
mov
sahf
fsubp
out
cmp
scas
sub
in
mov
push
push
stos
data16
push
dec
lea
imul
inc
sub
lds
xchg
jecxz
fwait
xor
daa
rcrl
dec
lock
mov
push
ret
ret
inc
aam
movsb
dec
in
sub
xor
or
fldenv
push
sarb
jae
rolb
adc
ss
mov
cli
and
lcall
cmpsb
shrb
pop
xchg
lret
sahf
add
ret
and
scas
xchg
jnp
push
and
outsb
push
mov
cltd
repnz
cmpl
and
fimuls
sbb
imul
push
xor
mov
mov
mov
dec
xor
mov
ss
aam
and
out
push
inc
cs
out
and
test
xor
adc
rcll
jp
lcall
leave
jecxz
testb
nop
or
xchg
mov
and
sbb
push
lea
cmp
hlt
pop
movsb
xor
mov
adc
fisubl
or
push
cli
aaa
xchg
ja
icebp
decb
xor
addb
fnsave
fiaddl
mov
rcrl
push
popa
mov
mov
pop
jle
adc
js
iret
orb
dec
scas
je
xor
cmpsl
in
stos
movsb
dec
xchg
push
dec
mov
daa
sub
aaa
out
lret
imul
out
pop
mov
dec
iret
xchg
dec
fdivs
into
pop
lea
and
clc
gs
cmpl
int3
aad
aad
ss
push
bound
adc
inc
call
adc
xchg
stc
push
lods
jl
dec
pop
dec
cs
jle
enter
mov
xchg
roll
push
popa
push
jecxz
jl
loop
jae
clc
jp
insb
aad
aas
push
mov
fisubrl
pop
mov
inc
cmp
loop
imul
or
ja
shl
fs
jmp
mov
xchg
mov
iret
push
test
xlat
ret
rcrl
xchg
inc
ja
and
js
loopne
pop
mov
das
xchg
and
dec
inc
out
fistl
aaa
insl
negl
movsl
sub
mov
insb
mov
jg
xchg
pop
in
shrl
mov
jae
add
cli
mov
inc
shl
mov
bound
fcom
xchg
dec
lock
xchg
clc
cmpl
mov
sub
into
das
dec
daa
cwtl
cmp
movsl
loopne
or
nop
and
adc
inc
les
xchg
push
clc
sahf
int3
in
pushf
mov
daa
or
lds
cmp
push
xor
lahf
je
int
adcl
xor
xchg
push
mov
rolb
popf
ja
fisttpll
xor
xchg
jg
and
hlt
or
mov
and
adc
xchg
or
adc
hlt
sti
sub
add
adcl
data16
pop
add
imul
stos
fstpt
or
sub
imul
outsl
xchg
jecxz
push
push
and
mov
mov
push
mov
stc
dec
stos
adc
xor
cmp
pop
sahf
lret
inc
lods
pop
add
sub
xchg
aad
cmp
xor
ret
ja
fneni(8087
mov
stos
inc
mov
sub
jg
pop
mov
inc
fstpt
adc
xor
cmpsb
mov
aam
mov
pop
popf
jo
or
bound
xlat
mov
pop
xor
fistps
mov
cltd
mov
push
push
stc
sbbl
mov
test
lock
push
inc
das
std
fcompl
lret
mov
mov
stos
lahf
stc
in
loopne
jb
inc
popf
mov
dec
jnp
sahf
iret
push
insb
pop
push
test
mov
mov
popa
lret
pop
push
jno
jle
ja
dec
mov
clc
cmp
popf
mov
or
subb
daa
popf
dec
jp
cwtl
mov
cltd
dec
fldenv
jb
hlt
or
lcall
sub
pop
mov
dec
xor
cmpsb
lret
lds
movsl
push
popf
mov
fdivl
popf
jmp
popf
je
inc
mov
jmp
jne
std
fisttpl
pop
bswap
push
mov
icebp
inc
sub
pusha
ljmp
inc
pop
lods
popa
pop
sahf
cltd
push
pop
pop
adc
inc
data16
sub
mov
sub
mov
cmc
subb
adc
ds
sub
cltd
add
sub
sub
pop
leave
dec
and
addr16
inc
leave
push
pop
and
into
mov
xchg
sub
sbb
push
loop
xchg
lds
inc
call
into
sbb
or
add
leave
orb
sub
repz
sti
cmpb
shlb
enter
xchg
daa
add
add
das
push
jne
insl
mov
jle
push
jne
push
jnp
test
dec
ljmp
ret
jp
in
inc
popf
xchg
sub
or
mov
xchg
add
jbe
xor
inc
pop
addb
sti
inc
mov
push
mov
jb
and
je
cmp
xchg
jo
push
iret
or
inc
pop
out
mov
xor
add
push
push
xchg
mov
or
popa
pop
arpl
fsubp
dec
jbe
dec
xchg
dec
lods
das
clc
sub
push
dec
push
std
mov
or
jne
insl
adc
std
mov
addr16
pop
push
jb
push
insb
jae
pop
or
fistps
mov
mov
lods
stc
outsb
iret
push
cltd
xchg
xor
xor
pop
out
sbb
xchg
ret
dec
into
cs
rol
cs
outsb
insb
inc
pusha
xor
fs
xor
push
cs
ja
sbb
adc
and
inc
push
fldcw
ljmp
add
inc
xchg
add
pushf
imul
or
icebp
or
cmc
clc
pop
add
cwtl
imul
aas
int3
cmp
imul
jb
push
jl
in
or
bound
mov
fwait
jp
push
pushf
jo
xor
hlt
and
lock
push
and
in
sbb
adc
xor
es
test
mov
lcall
jb
adc
icebp
dec
dec
cmp
dec
movsl
das
inc
pop
mov
dec
fwait
or
xchg
dec
cwtl
mov
cmp
out
mov
mov
xor
nop
insl
cmp
mov
sbbl
adcl
jmp
jae
sbb
dec
syscall
addr16
shrl
sbb
clc
fbstp
and
xor
xor
orb
xchg
cltd
cmpb
je
and
or
jp
pop
pusha
imul
inc
dec
fldenv
adc
pop
sub
adc
cs
dec
mov
dec
mov
cwtl
daa
and
neg
jne
enter
scas
cmc
scas
inc
fildl
fists
in
mov
shlb
insb
inc
shl
ds
lea
imul
in
sarb
adc
insl
push
out
dec
pop
fisubrs
add
ja
pop
and
jno
mov
or
jmp
xor
jmp
mov
jns
inc
xchg
popa
xor
xchg
inc
int
push
xor
xor
out
cltd
jne
lock
inc
lret
mov
fsts
add
jnp
lods
lods
jp
negb
out
shll
mov
andl
jle
jmp
lea
and
adc
cmp
rclb
leave
sbb
mov
mov
das
out
sbb
cmp
and
jl
addr16
out
movsl
insl
adc
iret
mov
mov
xchg
mull
cmp
leave
mov
mov
cmp
shr
addr16
adc
ja
lock
movsb
jnp
pop
sarb
sbb
dec
jae
lcall
add
inc
jne
push
cli
push
pop
xchg
jo
inc
and
jg
xor
js
cmovo
out
and
loopne
push
cmp
popa
sti
cmpl
or
xor
je
ja
aaa
decl
cmp
pop
push
push
test
cmp
gs
xchg
loopne
xchg
imul
pop
cmp
mov
daa
stos
rcrb
int
movsb
cmpl
ljmp
imul
jecxz
lret
std
mov
leave
leave
inc
dec
jb
repz
icebp
cs
xchg
ret
nop
or
push
fwait
sahf
inc
push
mov
sbb
pop
jbe
push
mov
sbb
and
dec
adc
int3
or
pushf
jle
movsl
jg
lret
adc
rorb
aad
and
lcall
or
adc
in
in
and
pop
in
or
in
and
and
jo
movsb
iret
lret
popa
lret
shrd
sbb
dec
mov
dec
push
ljmp
loope
ja
xor
add
mov
jecxz
sbb
add
push
mov
popl
push
lock
cwtl
repz
iret
out
stos
lret
inc
iret
xchg
mov
mov
ljmp
aad
lret
movsb
adc
sbb
mov
dec
mov
cltd
stc
mov
xor
xlat
popf
push
cmp
mov
cmp
fimuls
mov
or
xor
add
out
sbb
mov
inc
add
jns
xor
adc
push
xchg
hlt
icebp
mov
or
ljmp
out
add
or
xor
xlat
in
cs
pop
and
sub
xchg
movsb
fildl
mov
fisubl
adc
hlt
pop
incb
fsubrs
mov
cld
shll
add
fists
sub
mov
mov
je
jmp
outsb
sbb
iret
pop
call
add
outsb
std
jb
jnp
inc
sahf
push
cmp
lahf
xchg
xchg
dec
ljmp
push
xchg
cli
mov
daa
repz
mov
hlt
sbbb
out
imulb
test
mov
or
push
cmp
push
dec
das
pusha
dec
int
shlb
mov
test
or
dec
adc
xchg
mov
sbb
sbb
cli
out
push
add
pop
mov
cmpsb
fwait
cltd
outsb
sub
loopne
loop
pushf
or
cmp
ja
xchg
pop
std
adcb
aas
push
fstpt
outsl
negb
jge
stos
push
aam
stos
daa
jbe
mov
loop
jge
scas
and
stos
mov
sub
ds
mov
rcrl
push
cmp
mov
stc
xchg
hlt
rolb
adc
lock
lcall
cmp
xchg
mov
fldl
out
cmc
test
jg
pop
es
les
iret
mov
cmp
push
jmp
push
sbb
jmp
rolw
dec
out
out
mov
imul
in
mov
mov
mov
xchg
loop
mov
lods
mov
iret
arpl
cmp
out
jp
aaa
add
leave
or
lahf
cmp
aam
mov
xchg
cmpsb
movsb
sub
xchg
lods
sarl
addr16
sbbl
jle
insb
push
or
cltd
data16
pop
mov
pop
lret
cmp
outsb
jmp
hlt
mov
stos
aas
mov
add
fs
popf
mov
addr16
mov
int
push
sbb
sub
sbb
test
xor
leave
and
scas
pop
and
or
loop
push
mov
scas
adc
clc
xchg
jns
test
notb
mov
mov
jno
sub
ss
mov
loop
mov
fucomip
push
mov
fstpt
sbb
lret
jne
je
lret
aas
repnz
out
push
jp
cwtl
jecxz
aas
out
cmpsb
mov
xchg
pcmpeqb
js
fdivl
inc
ret
pop
push
and
lret
rcll
lahf
leave
sbb
xor
ja
std
sbb
out
push
cmp
adc
cwtl
push
fsubrs
insl
dec
mov
je
xor
push
mov
sbb
and
xchg
add
cmp
popa
hlt
xchg
sbb
and
fstpl
call
add
jg
fs
inc
mov
mov
push
push
inc
ficompl
lods
int
inc
lods
or
mov
addl
mov
mov
xchg
sahf
inc
pop
mov
dec
and
mov
test
insb
jo
mov
mov
call
inc
adc
inc
jle
dec
jns
or
sbb
jl
push
mov
fdivrl
daa
aaa
mov
clc
inc
ss
scas
or
fdivr
sub
dec
popa
sbb
out
or
mov
push
lcall
push
jp
jp
push
cmp
add
mov
jns
out
push
xor
jl
xor
xor
cltd
stc
sub
mov
xchg
mov
add
inc
data16
shl
movsl
xchg
inc
pop
iret
jnp
xchg
test
in
and
jbe
fstp
lods
adc
and
and
cmp
mov
movsb
or
or
mov
aam
fwait
in
stos
cmp
pinsrw
jmp
adc
leave
stos
push
or
hlt
iret
out
pushf
mov
mov
push
loopne
add
jmp
lock
adc
jne
dec
scas
test
mov
push
or
jg
mov
adcl
movsb
popf
mov
sub
ret
test
ljmp
dec
cmpl
sub
sub
jne
dec
xchg
rorl
or
pushl
pop
notb
fcoms
sbb
cmpsl
lahf
or
push
js
rcr
mov
push
mov
mov
sub
sarl
cmpsb
xor
fcmovnu
mov
and
pop
je
pushf
mov
into
rol
mov
outsl
xchg
push
cs
fistpll
cmp
outsl
inc
clc
add
insb
out
xchg
mov
movsl
sub
js
adc
test
push
xlat
mov
dec
pop
xchg
into
movsl
xchg
push
add
pop
icebp
fwait
xor
in
outsl
cmp
dec
jne
clc
mov
push
insb
dec
push
pop
gs
movq
pushf
push
jmp
lret
add
mov
adc
repz
es
xor
xor
clc
adc
xor
je
pop
lock
or
mov
mov
mov
mov
les
mov
mov
xor
xorl
ret
pop
repnz
fs
xchg
cld
mov
cmp
aas
ds
ja
sbb
xchg
push
cmp
mov
xchg
jbe
sub
mov
aad
les
pop
ljmp
push
mov
lods
or
mov
mov
filds
rol
je
ret
xchg
fdivr
xor
mov
nop
sub
arpl
cmp
inc
pop
jl
xor
pop
aaa
add
mov
lret
lret
jb
cli
inc
jb
into
mov
mov
fucomip
adc
daa
cmpsb
fimuls
jl
push
fldenv
inc
mov
test
push
add
mov
xor
or
clc
js,pn
xchg
mov
pop
sarb
and
or
icebp
loope
out
cmp
mov
fs
dec
mov
inc
out
sub
test
es
sbb
ret
pop
push
adc
inc
mov
out
cwtl
and
inc
testb
je
push
fcmovnu
mov
cld
outsl
fstps
in
mov
testb
mov
inc
xchg
lret
idiv
cmp
imul
add
mov
jno
fadds
mov
pop
nop
jnp
and
push
inc
les
mov
aas
subl
dec
add
movsb
outsl
pop
dec
mov
jnp
repz
ja
pop
adc
pop
push
call
aam
aad
dec
mov
xor
cwtl
ljmp
jno
add
addr16
add
sbb
in
aad
cwtl
pop
inc
in
jae
or
push
push
jmp
mov
pusha
push
and
mov
popa
std
rol
inc
inc
les
in
push
xchg
repz
roll
out
pop
jne
lods
movdqu
xlat
mov
inc
mov
lds
mov
divb
sbb
mov
jmp
pop
in
sbb
push
insb
dec
test
mov
int3
or
aas
adc
xchg
xor
sbb
fidivrl
jo
flds
adc
cmpl
call
js
mov
inc
call
lahf
andl
jp
sbb
int
mov
dec
jae
sbb
mov
movsl
push
jle
lret
mov
out
inc
pop
std
incb
lods
pop
leave
scas
rcrb
xchg
aad
aam
js
jecxz
dec
je
sbb
xorl
cmpsl
mov
mov
scas
pusha
cmpsl
loopne
add
dec
aad
jge
imul
ret
icebp
add
xor
insb
add
loope
mov
movsl
mov
inc
sub
or
sub
pop
sbb
les
add
cli
frstor
xor
movsl
mov
mov
add
rcrl
out
fistpll
mov
mov
js
mov
rcl
fidivrl
mov
mov
lret
shll
mov
cs
fnsave
xor
jl
int
jb
inc
repnz
push
jmp
adc
std
sub
adc
xchg
mov
stos
std
dec
cmp
stc
and
hlt
xchg
fimull
daa
les
dec
fs
sub
sub
add
bound
or
lahf
in
cmp
inc
pop
ret
sub
adc
imul
jmp
add
outsl
lock
mov
mov
push
cmpsb
in
data16
xchg
dec
mov
ret
lods
out
jle
loope
ret
ret
jo
inc
push
xor
sub
cmpsb
out
jp
mov
push
aas
imul
dec
dec
outsl
push
lret
and
dec
pop
sbb
add
test
xchg
push
cltd
jae
mov
pop
cwtl
mov
push
push
pop
dec
rcrb
outsl
or
pop
or
sub
xchg
jbe
or
les
sbb
sahf
arpl
fstps
mov
popa
faddl
jo
cmpl
mov
push
add
testl
pop
cld
or
xchg
xchg
sub
ret
stc
gs
sbb
aas
xchg
pop
aaa
cs
xchg
ds
inc
pop
jnp
dec
int3
lds
xchg
xchg
jae
mov
mov
dec
inc
scas
icebp
jo
dec
pop
push
test
adc
mov
out
push
test
movsl
mov
mov
fnstsw
leave
in
mov
xor
pusha
and
loopne
sarb
cmpl
cmp
mov
and
and
loop
idivb
bound
push
or
daa
xor
aam
inc
inc
push
cmpsl
cli
iret
push
sbb
sbb
pop
outsb
in
sbb
sbb
aam
adc
mov
addr16
adc
lret
fs
repnz
push
sbb
sbb
ljmp
and
inc
stc
push
xor
ret
xorl
rolb
jecxz
sahf
mov
xor
and
ret
std
cli
inc
dec
mov
push
jbe
xchg
push
add
sbb
fucomi
imulb
repz
call
outsl
inc
in
inc
jnp
and
adc
sub
lret
xchg
mov
mov
xor
xor
cmpsb
pop
popf
int3
insb
cmp
push
jo
sbb
mov
inc
jmp
iret
add
xchg
xor
jmp
hlt
mov
sarb
insb
das
outsb
shl
jae
clc
dec
loopne
pop
stos
or
sbb
loope
fwait
adc
call
scas
int
loope
or
mov
pushl
jmp
mov
push
testl
leave
je
fdivp
cmpb
jecxz
outsl
fwait
shll
pmulhw
add
cmpsb
lret
ret
repnz
push
and
inc
cmp
sbb
subl
lds
inc
scas
inc
roll
fisubrs
icebp
test
inc
jle
mov
fcmove
int
out
or
xor
cltd
jbe
mov
cwtl
add
movl
sub
mov
ret
stos
and
inc
dec
aaa
sub
sbb
es
add
jmp
jge
loope
repz
stc
call
inc
add
fstp
adc
add
std
fidivrs
repnz
xor
and
addr16
mov
cmp
mov
push
inc
int3
fimuls
sub
lcall
mov
dec
mov
push
inc
pop
sbb
add
xchg
sub
sbb
push
mov
push
mov
add
xor
outsb
pop
cwtl
jo
push
jo
pop
and
push
cmp
and
rcr
lret
dec
push
mov
jl
sbb
cmp
xchg
pop
fstps
or
int3
sbb
adc
dec
test
into
jmp
in
fisubrl
jge
sbbb
sbb
popf
fisubrl
add
test
inc
or
or
sbb
push
out
fdivrl
jle
addl
push
xchg
adc
mov
sub
xor
bound
cmpb
xchg
fldenv
les
xchg
cmpsb
loop
dec
rcl
loopne
int3
push
adc
jge
adc
jb
add
adc
outsl
and
dec
jnp
mov
mov
fld
test
inc
sti
mov
test
jecxz
dec
jmp
and
pop
cmp
mov
aas
popf
mov
pop
movsb
pushf
clc
lret
imulb
push
iret
aam
in
cmpsl
or
push
mov
or
mov
jno
popl
and
pop
mov
enter
fisttps
mov
inc
pop
mov
push
rolb
loope
gs
jns
jle
fldl
push
lods
jg
and
mov
mov
fwait
insl
xchg
movsb
push
insb
adc
push
mov
addr16
lea
mov
push
mov
sub
mov
aas
add
push
and
les
pop
and
sbb
jle
dec
or
inc
jae
adc
dec
or
adc
sbb
cmp
pusha
jns
mov
out
mov
orl
sbb
lods
xlat
xor
mov
pop
push
push
call
stos
std
mov
div
dec
push
adc
mov
scas
push
cmp
movsl
xchg
pop
adc
notl
dec
pushf
push
mov
mov
mov
pop
mov
fisubrs
xchg
mov
lcall
daa
xor
add
add
orb
ret
movsb
jl
push
dec
push
inc
push
pusha
dec
cmpsl
loopne
jmp
stc
jg
xchg
xchg
cmpl
into
repz
cmp
mov
jae
push
push
test
cwtl
frstor
sbb
adc
clc
fimuls
ss
xorb
imul
cwtl
cmpsb
jge
pop
adc
sti
cltd
jecxz
rorb
divb
jae
mov
add
mov
jbe
out
test
dec
push
cmp
fisubrs
cmp
mov
lcall
arpl
push
imul
push
adc
stc
inc
mov
ss
pop
or
and
fsubrs
loope
push
pop
sbb
repz
xchg
or
addl
cmpsb
lock
outsb
mov
dec
cmp
in
dec
mov
sbb
fidivrs
je
aaa
shlb
jle
sti
adcb
mov
push
lds
jmp
shrb
sub
sbb
idivb
jns
cmp
idivl
je
leave
movaps
pop
sarl
aas
xchg
shr
shlb
jmp
aas
mov
mov
imul
jg
mov
wbinvd
stos
shrb
dec
das
scas
cld
jmp
sbb
aam
iret
or
outsl
mov
je
dec
gs
sub
push
shr
stc
roll
mov
mov
cmp
into
pop
iret
push
and
push
push
stos
hlt
repnz
fwait
inc
mov
and
pop
nop
fdivrl
fisubl
jmp
cmpl
aas
fstl
in
sbb
mov
push
std
xchg
xchg
ja
jnp
stc
inc
add
mov
clc
aad
dec
dec
sub
jne
add
pop
fnstcw
into
pop
movsl
stos
lret
adc
mov
adc
adc
cmp
lahf
out
cwtl
add
imul
lds
inc
jmp
adc
cwtl
jl
in
and
jg
stos
pushf
notl
test
out
aad
mov
push
dec
je
pop
repz
dec
xor
mov
dec
sub
out
pop
popa
call
adc
fbld
mov
cmc
jp
dec
rorb
mov
cmp
ret
push
xchg
sbb
iret
pusha
mov
xor
pop
push
pusha
lcall
out
inc
sahf
fadds
jle
mov
add
mov
and
jp
sub
adc
sub
sub
aad
sub
push
add
jecxz
cmpsl
fidivs
ret
imul
inc
ss
xor
xchg
cmp
rcl
sbb
mov
fiadds
adc
pop
sbb
jl
fcoms
iret
lds
xchg
lds
icebp
add
stos
cmp
sbb
mov
addb
movsl
movsb
add
jp
cld
daa
pop
sahf
stos
pusha
add
subb
and
jae
mov
push
lret
shll
mov
jge
jle
bound
out
cmp
push
in
xorb
mov
insl
not
inc
dec
rcll
mov
lock
movsb
xchg
call
popf
lret
pusha
push
loope
mov
jp
sbb
ljmp
sbb
incl
loopne
out
cmp
adc
in
test
mov
pusha
mov
rcl
push
jno
and
mov
pop
into
xchg
jae
in
mov
xor
and
pop
mov
popa
mov
xchg
mov
mov
cmpsl
and
icebp
push
fprem
repnz
dec
icebp
xchg
out
push
jb
and
gs
xchg
jmp
mov
sbb
sbb
test
adc
or
stos
es
mov
sub
shlb
filds
inc
mov
cmpsl
pushf
mov
push
cmp
icebp
mov
nop
sub
dec
xchg
loope
mov
xlat
rcl
adcb
push
aaa
mov
pop
sbb
adc
cmpsb
xchg
jle
mov
subl
jnp
xor
xchg
cmpsb
sbb
or
inc
call
push
sub
les
scas
cmp
dec
fidivs
xor
sub
leave
xchg
dec
jno
ficoms
jg
dec
push
lahf
push
inc
jmp
pop
xchg
xor
mov
xchg
into
and
addr16
je
pop
xchg
xchg
jae
jl
enter
dec
xor
addr16
sub
jo
jo
pop
push
xor
adc
int3
pushf
je
xchg
jnp
sub
xchg
xchg
movsb
out
cld
add
xor
cmp
out
cmp
mov
sti
fisttps
mov
sub
popf
fsubr
xor
xorl
pop
ret
jle
inc
sub
outsl
push
dec
sti
dec
mov
push
jbe
mov
data16
mov
sub
subl
sbb
int3
addr16
data16
lock
pand
xor
js
adcb
add
or
sub
les
sbb
xchg
push
mov
lcall
stos
mov
mov
out
jl
out
lods
sbb
sbb
pop
jle
inc
push
ja
ret
aam
mov
icebp
stc
sbb
loop
cli
jae
xor
dec
push
cmc
mov
cmp
bound
pop
sub
or
ljmp
aas
mov
pusha
add
push
or
dec
insb
clc
inc
xor
repz
add
xchg
sub
cmp
hlt
or
jns
mov
pop
mov
sbb
xchg
and
mov
js
cmpsl
cmp
xor
ja
test
roll
repnz
adc
in
test
adc
cltd
xor
xchg
ja
add
jno
jle
in
in
sbb
fnsave
loope
jae
inc
dec
xchg
sbb
cmpsb
xchg
scas
mov
in
das
dec
data16
jmp
ret
jb
inc
fucomp
arpl
cli
mov
es
out
xor
dec
sbbb
jecxz
xchg
xchg
cmp
push
int3
sahf
adc
sub
push
jg
shrl
jge
shlb
cld
ret
repnz
jmp
sti
movsb
sub
mov
int3
jo
cltd
dec
mov
lock
and
outsl
sub
lahf
dec
xchg
sti
mov
fidivs
push
or
mov
mov
add
add
in
cs
push
and
or
mov
push
add
in
std
cli
mov
loop
imul
add
and
imul
cmp
divl
lea
stc
rcr
xchg
mov
dec
movsb
xor
std
and
dec
lods
pop
sarl
enter
jecxz
dec
xlat
mov
dec
insb
sbb
rcl
bound
dec
xchg
cmp
sbb
add
in
xchg
nop
add
cltd
fdivrl
mov
lds
imul
les
insl
ds
fwait
mov
aas
dec
cli
add
test
adc
aad
adc
lods
jle
cmp
ja
pop
push
sbb
movsl
xchg
out
loop,pn
xchg
insl
xchg
inc
icebp
xchg
add
scas
call
in
and
ja
adc
dec
sub
push
mov
mov
inc
add
or
js
jo
or
in
push
movsb
jns
popa
jae
inc
add
add
test
aam
pop
in
jns
adc
sub
add
es
dec
lods
loopne
loopne
lahf
mov
scas
loop
loopne
jbe
arpl
in
push
mov
hlt
pusha
mov
or
pop
mov
and
test
add
je
xchg
stos
pop
dec
jge
add
pop
jbe
dec
jnp
pop
les
icebp
testl
dec
js
pop
cmc
pop
lds
pop
xor
imul
mov
xchg
inc
pop
sarl
fcmovnbe
mov
mov
int3
rcrl
movsl
rep
popf
movsl
or
xor
aas
ds
mov
mov
mov
pop
sbb
xor
cmp
insl
les
pop
push
adc
and
mov
mov
mov
dec
jmp
mov
push
gs
sbb
in
iret
or
cs
cmp
out
icebp
mov
push
jg
cltd
cmc
rcr
test
xchg
push
dec
fsubp
stos
dec
or
mov
stc
jmp
out
jns
aaa
enter
in
and
sbb
lds
or
or
clc
mov
mulb
sahf
add
push
mov
pop
mov
mov
and
cmp
insl
dec
testl
das
scas
mov
xchg
mov
mov
arpl
cmp
decl
cmpsb
inc
movl
repz
in
je
imul
aam
jns
addr16
xor
cwtl
jbe
or
fstpl
lods
into
mov
imul
or
test
mov
adc
mov
outsl
mov
xor
dec
push
in
mov
pop
mov
sub
ljmp
std
jns
ret
cmp
dec
in
test
rcll
lret
into
sub
shrl
les
pop
mov
nop
addr16
mov
inc
inc
je
ljmp
sub
in
lods
lock
inc
fistpl
rorl
push
aam
and
jmp
mov
enter
and
dec
push
cmp
mov
daa
mov
loope
push
bound
push
mov
jmp
ds
and
jecxz
mov
rorl
push
or
es
aas
push
or
mov
int
pop
mov
sbb
les
inc
bound
fs
dec
xor
push
add
repz
xchg
outsb
push
mov
cs
fistl
fs
jb
stos
pop
outsb
jmp
sbbb
loope
fsubl
pop
or
push
cmc
imul
movb
mov
stos
jge
mov
adcl
sub
sahf
ss
test
fs
pop
enter
aaa
roll
mov
jecxz
es
mov
mov
jbe
dec
decb
jns
jb
sbb
push
arpl
xchg
mov
movsb
mov
sub
jo
push
pushf
pop
sbb
push
je
dec
ficoml
icebp
dec
shrb
or
mov
xor
and
lds
test
lea
cmp
imul
add
cld
push
leave
testl
mov
out
aas
pop
fistl
mov
out
or
xchg
mov
or
int3
ds
mov
mov
sbb
mov
rcll
xchg
inc
cmpsl
inc
jecxz
mov
test
xor
dec
inc
xchg
mov
into
repnz
fbstp
push
repz
mov
jg
xchg
jle
push
mov
es
rolb
mov
daa
jg
out
dec
cmp
ss
movsl
dec
cmp
jge
sbb
push
stos
loope
pop
jp
test
sbb
stos
mov
into
push
jno
add
rcr
stos
outsl
popa
adc
cs
adc
fs
mov
pop
or
xchg
xbegin
sub
lods
insl
aam
repnz
cmp
sti
xchg
repnz
pop
sub
and
pushf
in
push
subb
cmp
mov
stos
adc
mov
les
and
and
lods
mov
mov
dec
icebp
outsl
jecxz
or
sub
inc
add
xchg
pop
pop
addl
sub
es
mov
and
sub
dec
push
pop
lods
dec
insl
xorb
mov
stos
ja
xchg
orl
mov
lahf
fsubrl
mov
fimuls
jae
mov
scas
jae
pop
scas
in
push
mov
imul
shl
fwait
lret
xor
mov
adc
push
mov
mov
sbb
dec
mov
je
mov
mov
inc
mov
mov
mov
pusha
popa
add
jl
into
stos
addr16
outsb
jb
pop
sub
clc
inc
mov
jg
xor
adc
scas
adc
sub
lea
test
or
inc
jle
iret
mov
xchg
test
aaa
dec
jb
add
icebp
inc
push
add
test
pop
pop
sbb
scas
sub
push
and
mov
orl
push
push
mov
es
in
cmpsl
add
adc
outsl
in
addl
sbb
ss
mov
mov
push
dec
adcb
fisubs
mov
mov
insb
sbb
pop
sub
xor
rcrb
dec
add
adc
dec
cwtl
adc
sbb
dec
xchg
repz
fwait
inc
int
sub
pop
int
cs
cli
xchg
push
std
sub
and
adcb
dec
mov
push
mov
lcall
inc
mov
mov
jp
mov
sbb
or
gs
mov
jo
cmc
and
dec
xchg
cmc
das
iret
push
xor
mov
xchg
fldl2e
sub
es
sbb
add
or
inc
mov
ret
jns
mov
dec
les
add
es
idiv
jae
cld
dec
xor
sbb
stos
jbe
pop
xchg
movsl
andb
inc
in
iret
lcall
stos
cmp
sub
add
test
flds
mov
cmpsl
rcrb
mov
ret
mov
sbb
bound
jg
fcoms
mov
sbb
dec
fistps
xorb
bound
hlt
pushf
or
sbb
dec
pop
xlat
mov
dec
inc
loope
in
sub
enter
dec
dec
add
ljmp
jmp
xor
idivl
inc
and
enter
pop
xor
jg
fistps
or
pop
inc
nop
mov
adc
dec
lock
xchg
mov
aas
lods
sbb
cmp
out
or
add
movsl
dec
xor
daa
xor
cwtl
es
rolb
sub
adcl
cltd
cltd
popa
out
jl
in
sbb
pop
jae,pn
stc
push
adc
xchg
push
cli
cltd
lds
outsb
push
mov
add
dec
lahf
stos
jge
sbb
jnp
call
andl
cmp
rolb
clc
bswap
int
dec
gs
ss
mov
std
pusha
clc
add
adc
cmpsl
scas
stc
loope
mov
push
sti
dec
mov
adc
jbe
adc
fldl
roll
add
aad
inc
dec
fistpll
pop
push
lods
mov
sub
dec
and
cmp
inc
jle
ss
and
movsb
jp
inc
mov
mov
jle
xchg
adc
dec
ja
and
sti
mov
into
sub
daa
pop
xchg
mov
mov
dec
inc
nop
testl
push
mov
mov
or
inc
pop
scas
mov
mov
or
inc
xchg
jbe
pop
xchg
outsl
dec
mov
jns
pop
ds
jno
mov
push
test
jb
pop
cmp
fs
mov
stos
js
imul
ds
imul
les
call
es
cmp
push
xchg
daa
shrb
andb
arpl
mov
ret
mov
mov
pop
mov
or
fldcw
mov
push
pop
cmp
xchg
movsl
adc
arpl
cmp
nop
jecxz
inc
mov
inc
in
outsl
mov
into
bound
sbb
int3
inc
lods
inc
push
jmp
loop
xor
jecxz
insb
sub
sub
ds
ljmp
sbb
shl
xchg
test
cs
out
mov
pop
jmp
adc
mov
sbb
scas
add
ret
cmc
fcmovnu
cmp
fwait
dec
and
xor
sub
in
adc
mov
leave
cmp
test
out
push
stos
ja
inc
cwtl
bound
xchg
push
icebp
push
inc
lret
cmp
jmp
mov
mov
adc
jp
cmp
lods
sub
xor
push
stos
xor
cltd
popa
or
cmp
js
or
cmp
push
mov
jns
sub
sti
jp
iret
xor
sub
jno
jl
xchg
jns
jae
addb
dec
adc
in
es
lcall
and
rcrb
ljmp
dec
xor
pop
jbe
pop
aaa
fnstenv
pop
add
and
cltd
xchg
xchg
or
movsl
inc
gs
rcl
fcoms
add
or
push
add
lret
mov
das
int3
or
adc
push
mov
stc
lods
sbb
shl
loopne
or
movsl
daa
push
popf
iret
enter
lock
mov
cmp
repz
or
aam
push
aas
mov
fdivrs
fcoml
xchg
lock
cwtl
jbe
fstpl
out
push
aaa
out
push
pop
cmp
xchg
mov
fwait
daa
dec
xchg
aaa
push
jg
cmpsl
jne
adc
fistps
addr16
test
ficoml
mov
lret
xchg
and
js
adc
or
inc
stc
dec
push
lahf
in
imull
add
jmp
adcb
mov
outsb
pop
adcl
dec
adc
test
mov
push
in
shrl
add
das
mov
outsl
mov
out
pop
xor
mov
ret
repnz
push
ds
jecxz
and
dec
mov
jl
xor
addb
xor
outsb
dec
xchg
xor
fcoms
dec
je
ss
mov
int3
inc
push
pop
push
mov
fistps
cmpl
xor
xor
lret
dec
popf
mov
mov
cs
pop
lods
pop
ljmp
pusha
push
lods
cwtl
xor
sahf
clc
cmp
adc
cmc
sub
xchg
fldcw
xchg
cld
mov
mov
or
dec
lret
cmp
sbb
jae
push
addb
sub
sbb
pop
adc
jae
and
into
jge
jnp
xor
xchg
mov
pop
std
sbb
xorl
rorb
jnp
test
and
subl
cmp
mov
adc
mov
das
xor
lret
mov
xchg
xchg
push
mov
mov
cmc
ljmp
xchg
mov
xlat
or
jns
xlat
loope
pop
xchg
add
popf
ds
adc
push
lods
mov
test
sub
aaa
in
jae
push
sub
dec
and
aas
inc
fdivrs
pop
fcmovu
fwait
jnp
xchg
leave
cli
daa
xor
sub
mov
js
int
popf
adc
add
inc
mov
xchg
outsl
dec
pop
push
cmc
lcall
mov
icebp
jbe
push
aas
and
push
outsl
imul
aaa
sbb
dec
or
jge
push
adc
adc
fisttps
test
xlat
inc
adc
subb
pop
and
and
adc
das
xchg
dec
outsl
js
sti
sbb
aad
xor
fistl
pop
popf
arpl
out
xchg
jae
mov
adc
test
insl
mov
or
pop
sub
add
outsb
divb
mov
mov
add
jle
jge
ljmp
lock
ret
dec
jo
in
or
frstor
pop
sti
lock
sub
sub
int3
bound
xchg
pop
lea
stos
mov
push
jg
lods
sbb
dec
xor
or
mov
stos
sub
sbb
jno
loope
inc
fistpl
inc
hlt
jl
ds
push
and
jno
popa
jg
mov
das
mov
mov
pop
dec
in
or
mov
out
out
ds
xchg
jbe
xor
addr16
fmull
int
stos
enter
jne
inc
pop
lahf
fadds
sbb
mov
mov
mov
fwait
mov
insb
adc
or
jns
loopne
push
clc
dec
arpl
cs
inc
mov
pop
in
dec
mov
std
out
adc
pop
or
rcll
push
mov
inc
or
sub
jge
int3
fsubr
out
jmp
inc
mov
aad
flds
xor
xchg
add
adc
ds
push
iret
mov
int
push
rorb
jnp
mov
js
pop
into
clc
mov
adc
pop
jecxz
movsb
in
sub
mov
or
or
daa
shlb
sub
std
cs
aaa
ljmp
ds
mov
stc
enter
jae
pop
sub
xor
pushf
push
inc
ret
test
add
sub
shll
int
adc
fadds
fistpl
jp
mov
aad
sub
mov
test
shll
jmp
fildll
cmpsb
xor
pop
inc
jae
jnp
fsub
jne
adc
xchg
jno
pop
fiadds
icebp
or
jecxz
xchg
dec
push
sbb
jecxz
aas
mov
out
shll
andb
cmp
and
dec
call
pop
jmp
cmp
ret
push
ret
lds
data16
scas
lahf
insb
inc
pop
add
subl
push
or
add
or
jo
cmp
pop
mov
ss
negb
cmp
jl
xchg
push
push
sbb
lahf
loope
jg
xchg
mov
cltd
sbb
fidivl
sbb
jmp
xchg
adc
add
cmpsb
or
jp
lahf
cmpsb
iret
stos
aam
or
stos
je
pop
dec
lock
jo
push
sbb
lds
ja
adc
or
pop
lods
stc
push
adc
jecxz
adc
cmp
ret
pop
xchg
jle
lods
imul
xchg
sub
rolb
push
mov
es
mov
cmpsl
imul
dec
loop
popa
shr
aaa
mov
das
sbb
mov
cmc
cmp
pop
stc
lahf
pop
cmc
push
mov
jbe
pushf
repz
lret
jns
xor
lea
inc
cmc
pop
ret
push
lods
aam
insb
ret
jnp
fcoms
int
test
jne
or
pop
insl
aas
lret
out
sbb
in
sbb
adc
aam
rol
jb
jno
jns
cmp
push
add
lods
sbb
jne
and
imul
and
pop
sarl
lods
pop
insl
or
dec
lock
cli
into
sub
pop
dec
cmp
outsl
adc
and
jb
and
push
scas
inc
mull
sbb
pop
lods
jno
jmp
lret
sbb
pushf
pop
mov
out
cmp
or
mov
cs
aaa
out
out
jg
jnp
dec
sub
inc
cwtl
out
filds
jnp
add
xor
mov
dec
dec
out
push
iret
push
pop
cmpsl
aas
cld
cs
mov
clc
jp
faddl
xchg
xchg
jae
fmuls
ss
sub
stos
shl
fcomps
mov
or
xchg
and
and
popa
dec
rcrl
bound
imul
cmp
and
out
jbe
rolb
and
dec
cld
lret
adc
xor
data16
cltd
fwait
or
sub
jbe
sti
xchg
mov
xchg
pop
ret
xchg
xchg
lods
daa
lret
insb
or
xchg
cmpsb
dec
cmp
adc
mov
pop
xor
adc
add
jno
repnz
mov
das
subb
scas
or
loope
mov
xchg
push
push
cmp
test
enter
cmpsb
aam
aaa
mov
leave
std
jle
and
mov
and
addb
fadd
jmp
jo
xchg
pop
inc
mov
repnz
ret
or
pop
daa
ficomps
sahf
cwtl
mov
inc
dec
mov
ret
push
mov
pop
sub
adcl
cmp
or
call
jbe
and
cmp
cmc
sub
mov
ja
inc
dec
sub
mov
cmpsl
push
lcall
sahf
xor
mov
addr16
daa
pop
cmp
xlat
cmp
mov
push
ljmp
mov
sub
addr16
ret
mov
push
arpl
inc
sub
mov
pop
fldcw
mov
pusha
xchg
pop
inc
sbb
sub
inc
jo
dec
les
xchg
sub
jno
lea
mov
and
sub
jnp
insb
cmp
mov
inc
insb
sbb
aas
mov
sbb
and
das
ret
mov
jmp
cs
gs
inc
push
jl
inc
jne
xchg
push
xor
xchg
ret
and
jg
cmc
xchg
in
push
mulb
mov
mov
shl
jo
insl
ret
loop
ss
add
sub
out
push
push
lcall
out
ss
bnd
gs
xchg
fldt
push
sub
jle
out
sti
add
sub
stos
outsb
or
pop
adc
jp
cmp
xchg
adc
gs
imul
cld
scas
scas
sti
sub
mov
xlat
fisttpll
inc
inc
adc
sti
cwtl
dec
sub
gs
jge
adc
or
sub
push
pop
inc
nop
cmpsb
clc
lock
loop
dec
xor
mov
test
pop
push
lods
shlb
gs
xor
dec
or
cld
mov
leave
adc
mov
pusha
popa
maxps
fcompl
dec
jb
dec
mov
sarl
std
mov
in
sbb
xor
cmp
cmp
cmp
push
in
in
int
out
pop
ret
out
add
es
ret
js
mov
ss
dec
and
lahf
xor
sbb
xor
push
out
insl
in
repnz
repz
cmpl
jno
mov
outsb
sbb
sub
ljmp
es
mov
sub
decl
push
lods
lcall
dec
dec
mov
dec
ficoms
movd
mov
dec
push
in
pop
daa
movsl
cli
es
lock
jg
adc
cmpl
das
shrb
jae
mov
mov
push
lcall
xchg
out
push
fmull
movsl
aad
sub
xchg
popf
ret
decb
push
ja
dec
and
adc
filds
clc
jle
mov
cmpsl
cld
push
out
mov
clc
out
jmp
push
or
xchg
or
bound
loopne
pop
je
je
xlat
jns
mov
jbe
in
pop
std
fsubrs
cltd
xor
pop
xchg
hlt
js
xor
movsb
addr16
repnz
fsts
inc
out
xor
and
mov
ror
repnz
jae
addr16
mov
pop
cmpsb
es
popf
xchg
scas
xor
out
sbb
in
fsts
or
fsubl
insb
push
mov
dec
daa
xor
dec
jl
pop
and
add
cmp
and
lods
push
jle
mov
xchg
jecxz
movsl
mov
icebp
xor
bound
xor
jg
cltd
inc
jno
arpl
xchg
jle
aas
pop
mov
mov
jnp
sbb
shll
push
icebp
cmp
or
fists
inc
aad
mov
jns
push
ror
pop
pusha
and
push
icebp
cmp
push
cmpb
xchg
loope
icebp
cwtl
aas
mov
scas
sub
and
repnz
adc
push
adc
lods
xchg
out
sub
inc
inc
cmp
adc
cmp
cmpsb
in
cmp
pop
dec
sbb
push
enter
sbb
call
repnz
pop
pop
mov
fidivrl
mov
out
pop
fs
adc
shlw
mov
dec
loop
pop
xchg
mov
insb
and
sbb
in
mov
mov
ud1
outsb
and
cmpsb
push
popf
and
lahf
or
jb
cs
and
lret
loope
aad
scas
xchg
or
jl
cs
sbb
icebp
pop
or
nop
inc
jnp
nop
jnp
mov
mov
xlat
sub
push
jmp
insb
lret
add
daa
fwait
add
push
arpl
pop
push
cmc
cmc
lcall
incb
fnsetpm(287
sub
sub
push
sahf
cmp
push
cmpsl
mov
add
sar
into
adc
jmp
xchg
or
insb
xor
and
xchg
xchg
test
push
and
xor
sbb
and
pushf
pop
or
inc
nop
cmp
lret
vxorps
addb
mov
adc
mov
and
test
jae
imul
movsl
adc
sbb
aaa
adc
mov
mov
bound
jnp
cmp
adc
paddusb
push
xor
lret
popa
ja
loop
ret
push
fmull
cwtl
sbb
imulb
mov
adc
adc
mov
add
dec
mov
inc
adcb
imul
leave
xchg
mov
loopne
shlb
jae
cmc
pop
adcb
ja
fstps
icebp
cmp
lods
daa
fs
cmp
add
mov
outsb
mov
hlt
add
iret
mov
mov
adc
cmp
jbe
jecxz
pop
in
insb
sar
jmp
call
cmp
cmp
loope
sub
dec
movsb
loope
inc
inc
inc
pop
cli
mov
dec
pop
bound
mov
sbb
adc
dec
movsb
push
movsb
xchg
push
inc
inc
repnz
inc
add
adc
lahf
repnz
out
outsl
fidivs
xchg
pop
test
xor
mov
pusha
jnp
add
xchg
call
pop
ds
addl
dec
jl
lods
sbb
xchg
scas
loop
adc
mov
mov
adc
inc
int3
in
and
cmc
js
out
hlt
push
or
lods
jo
hlt
fidivrl
xchg
cmc
xchg
pop
enter
push
movsl
fsubrl
aad
in
sub
test
test
fdivr
cs
jnp
xor
dec
fistpl
cmp
fadd
mov
mov
sbb
and
mov
insb
adc
mov
jg
test
insl
in
lret
rcr
xor
shll
jns
jl
cmp
inc
outsl
insl
inc
mov
mov
dec
inc
jmp
sub
imul
mov
inc
push
ficoml
aad
sti
ja
cltd
inc
out
sub
sbb
add
ret
cmp
xchg
adc
fisttps
mov
iret
xchg
adc
enter
push
jecxz
inc
sbb
sahf
jae
cmp
ds
mulb
cwtl
in
jge
pop
sarb
out
or
inc
push
jmp
mov
pop
jecxz
xlat
mov
jno
lahf
out
rclb
mov
sti
dec
mov
dec
arpl
cld
ss
data16
sub
lahf
loopne
pop
or
and
rorb
mov
sahf
pop
test
fcompl
sahf
sbb
mov
scas
repz
stc
adc
inc
dec
jmp
cltd
xchg
ret
aad
outsl
test
lock
int
pop
sti
and
lds
cs
pop
add
shlb
or
jmp
sbb
and
dec
andb
jns
pop
pop
lret
sub
sti
movl
movsb
ror
roll
repz
add
lock
mov
stos
popa
xor
adc
int3
es
cmp
and
je
into
mov
jmp
lcall
push
lret
stc
push
nop
sub
cmp
out
pop
and
pop
push
cmpsl
jbe
sbb
mov
push
add
jmp
fwait
cmc
jecxz
fnsave
cli
xor
sub
cwtl
lret
js
pop
push
dec
xchg
in
mov
pop
ftst
push
in
outsl
call
add
mov
nop
flds
cmp
orl
test
lods
incl
test
mov
or
xor
orb
repz
aaa
mov
jbe
ljmp
adc
enter
xchg
and
into
dec
mov
push
push
aaa
inc
pop
pop
repnz
pop
cmp
jb
aaa
cmc
lea
push
xchg
gs
insb
pop
fwait
in
add
lret
and
jbe
mov
fsubrl
cmp
mov
stos
and
pop
pusha
dec
mov
rorb
jge
xchg
rorb
pushf
xor
mov
int3
jmp
test
je
into
jb
pusha
jmp
sbbb
mov
int3
out
mov
push
inc
mov
xor
aaa
cmc
ljmp
call
cmp
lahf
nop
add
ds
jl
fwait
imul
dec
outsb
cmp
mov
pop
aam
lock
dec
pop
rorb
pop
jnp
repnz
mov
stos
cmpsb
daa
out
sub
jmp
loope
ret
pop
gs
jp
push
mov
pop
dec
lret
or
insb
add
mov
mov
push
push
push
mov
push
mov
mov
jbe
xchg
das
mov
and
dec
sub
inc
or
xchg
xchg
andb
test
pop
ret
jae
sarl
xchg
idivb
push
or
mov
push
push
pop
clc
shrl
cld
out
cmpsl
mov
push
pop
jae
stos
pushl
ret
scas
and
push
es
or
jl
cmp
xor
xor
in
sbb
push
push
cli
pop
mov
dec
lds
mov
jb
adc
mov
xchg
loope
push
scas
cmpsb
insb
hlt
mov
jle
mov
xor
inc
add
jne
add
fucomi
and
ja
sub
mov
add
ljmp
mov
pop
adc
lods
mov
aas
jle
int
in
jbe
mov
inc
pop
lahf
popl
adc
lea
lcall
jbe
mov
popa
mov
leave
xor
cli
sub
or
pop
in
fwait
std
sbb
pop
in
setne
scas
dec
test
addr16
jge
cwtl
mov
xor
mov
lock
sahf
orb
lahf
cmpsb
and
sub
add
lods
cmp
addr16
out
scas
jg
pop
xchg
movsb
je
mov
sbb
shrl
push
test
pusha
add
clc
xchg
and
lds
sbb
dec
pop
rcll
in
mov
mov
mov
adc
and
imulb
cwtl
sub
and
ljmp
hlt
stc
stos
icebp
xchg
in
ss
int
stc
sbbl
dec
pusha
imull
push
pop
push
pop
add
mov
xchg
and
daa
jbe
and
imul
inc
daa
lods
sbb
shll
pushf
test
shl
jecxz
cmp
adc
dec
or
mov
xchg
js
js
leave
inc
lock
mov
or
stos
lahf
std
fxch
cli
push
das
sub
and
sub
lahf
pop
jge
lret
mov
push
xor
pop
insb
les
mov
xchg
fstps
adc
adc
clc
shrl
cmp
inc
imul
mov
dec
adc
loopne
imul
pop
jno,pn
jle
dec
sahf
cltd
push
dec
and
fstps
xlat
aad
les
mov
pushf
mov
mov
xchg
jno
and
dec
loop
push
jno
fisttpl
aad
insl
popa
mov
test
cmpsb
sub
aas
stc
xchg
addr16
push
popf
xor
imul
sti
sbb
sub
clc
adc
fs
nop
int3
in
dec
nop
lret
mov
bound
pop
adc
or
cmp
pop
aas
ficoml
jnp
jbe
adc
inc
std
xchg
int
xor
and
addr16
mov
enter
push
mov
leave
in
ret
imulb
frstor
jg
in
sbb
sub
inc
sub
stc
out
and
pusha
inc
or
rcll
jl
out
xlat
shll
or
mov
push
fistps
ljmp
mov
mov
mov
xchg
shll
adc
cmpl
stos
sub
inc
or
mov
bound
jne
inc
data16
dec
jne
dec
jne
sbb
aaa
mov
ret
adc
sub
xor
fcomip
or
add
adcl
test
jecxz
test
std
push
adc
jnp
sbb
jns
loopne
sbb
dec
xchg
push
popa
inc
dec
jae
xor
push
aaa
mov
mov
pop
mov
sub
mov
cmp
cmp
xchg
or
insl
cmp
add
out
xlat
shlb
add
nop
cmp
push
cmp
fldt
int
sti
repz
fdivrl
xchg
rorl
and
sbb
mov
out
add
fisttpl
ror
pusha
movsb
test
loope
add
imul
dec
jle
movsb
dec
and
stos
repz
pop
ret
jnp
xchg
lods
adc
mov
xor
arpl
out
addr16
loop
sub
jno
push
xorl
mov
or
or
sbb
mov
xchg
aaa
xchg
push
dec
shrb
cmp
pop
ret
adc
fwait
push
daa
ss
push
dec
and
cli
or
test
xchg
inc
or
jo
mov
pushf
test
aad
xor
sbb
cmpsb
das
sbb
pop
dec
mov
sbb
mov
push
bnd
into
xor
mov
cmp
cmp
jmp
jmp
hlt
fs
inc
cmp
mov
int
shlb
cli
icebp
mov
push
int3
lret
ret
jne
repnz
dec
inc
cmp
jl
adc
daa
out
or
push
adc
lods
es
fistpl
loop
popl
lahf
sarl
adc
xchg
cmpsb
popa
ss
fcomip
ret
pop
push
inc
pop
xlat
add
inc
or
jne
lods
mov
inc
or
repnz
loop
mov
repnz
icebp
mov
daa
push
dec
iret
or
loopne
mov
cmpsl
sub
mov
adc
addl
xorl
lods
sub
cmpb
sbb
push
ret
mov
fs
in
dec
push
mov
inc
sbb
dec
cmp
push
inc
inc
dec
fidivrs
mov
jnp
pusha
ds
jb
loopne
loopne
push
pop
and
or
pop
sahf
sub
std
jl
movsb
add
dec
ds
stos
js
fisubrs
adc
shll
mov
jne
or
pop
adc
outsl
sub
mov
xchg
adc
fcmovnu
ficompl
mov
icebp
lods
cmp
ds
jmp
sbb
xchg
or
iret
xchg
mov
rorl
testb
mov
fisttps
rclb
mov
mov
add
inc
clc
sahf
xchg
es
icebp
inc
sub
ljmp
punpckhwd
aaa
cmp
push
mov
jo
jle
clc
mov
cmp
sbb
adc
jnp
add
das
dec
mov
or
mov
or
pop
lret
add
push
cmpsl
into
sub
jle
dec
mov
sbb
xchg
pop
cmc
cmp
dec
movb
dec
std
daa
pusha
or
mov
lods
imull
ljmp
xchg
or
lret
sub
loope
push
xor
ret
repnz
mov
push
fucomip
pop
adc
add
mov
popf
je
dec
movsl
leave
je
jge
shlb
mov
outsb
std
std
inc
jl
xchg
fwait
imul
lret
cmp
aad
stos
js
repnz
out
sub
xchg
xchg
mov
icebp
and
lcall
xor
fsubrl
fdivs
popa
mov
inc
in
xor
xchg
in
push
stos
mov
push
leave
aam
xlat
lret
add
jle
mov
push
sbb
mov
add
or
icebp
xor
mov
bound
lret
fwait
aad
jnp
mov
es
mov
mov
loop
out
add
jb
movsl
out
xchg
or
frstor
sub
pop
movsl
shrb
js
orb
cli
sub
arpl
sub
imul
mov
pushf
xchg
inc
cld
popa
fdivl
fsubs
insb
ret
add
inc
mov
jbe
add
ds
stos
mov
jge,pn
fiadds
sarb
test
mov
out
and
xchg
mov
sahf
or
dec
cmp
shlb
mov
in
ret
aaa
xchg
xor
ret
push
mov
aad
xchg
shr
sahf
fs
iret
xchg
sarl
adcb
bound
leave
push
or
sbb
andb
enter
clc
mov
jnp
cmp
jbe
and
sbb
ud0
and
rclb
xchg
pushf
sub
fwait
mov
sbb
and
stc
inc
pop
es
jp
bound
jbe
sbb
or
subb
xchg
inc
push
stc
fistps
mov
stos
loopne
fmuls
xchg
pushf
out
or
sub
dec
repnz
ljmp
sbb
repz
mov
mov
and
sbb
add
out
sub
lea
fistl
out
mov
inc
cmp
mov
aam
es
jno
xor
stos
dec
loopne
int3
inc
dec
cmpsl
stos
psubw
cmp
test
fldl
mov
popf
jle
aas
insl
dec
fimull
cmp
jnp
pop
pop
scas
jno
stc
jae,pt
sub
rorb
insb
lods
mov
nop
mov
push
subl
jmp
pop
dec
mov
rorl
repz
in
pop
push
cli
fstpl
stos
inc
test
out
lock
test
xchg
adc
or
jmp
stc
pop
or
call
sub
scas
pop
lret
push
mov
xor
dec
xchg
cltd
mov
mov
adc
sbb
sub
jecxz
mov
fsubrs
inc
inc
mov
sbb
negl
xor
dec
sbb
shrl
fcomps
cmp
nop
sub
divb
mov
lea
lds
xchg
mov
inc
lea
mov
push
pop
outsl
fstps
and
sbb
jg
push
mov
js
xor
fcmovnu
vpaddq
js
mov
mov
stos
fists
jne
and
stos
loop
mov
jmp
sub
int
int3
test
sbb
shlb
adc
pop
xor
dec
or
sub
subl
push
cmp
pop
or
cs
pushf
mov
inc
pop
mov
xchg
mov
daa
sub
cltd
xchg
mov
cltd
xor
subb
fdiv
mov
sub
icebp
xor
mov
cmp
or
inc
mov
out
gs
enter
mov
adc
mov
jg
fcompl
std
pop
sub
push
mov
ja
sbb
push
push
add
nop
xchg
mov
mov
dec
sub
xorl
into
pop
shl
into
push
pop
ja
inc
add
gs
imul
pop
cmp
or
or
mov
sbb
add
arpl
inc
notb
cmp
stc
push
push
nop
inc
shlb
test
movsl
insb
in
leave
decl
xchg
inc
dec
push
ffreep
pop
cld
imul
adc
mov
ds
adc
fucom
movsl
repz
jno
inc
movb
lods
movsb
out
movsl
mov
mov
mov
cmp
sub
pop
repz
scas
adc
or
jl
push
fidivs
mov
lret
fsubs
dec
jge
test
xor
push
je
jnp
aas
icebp
dec
cmp
mov
adc
adc
aad
popa
test
ds
movsl
adc
sar
ret
pop
leave
push
inc
mov
lds
sbb
and
adc
mov
ljmp
fnsave
repnz
mov
cmpsl
out
js
out
and
xorl
inc
popf
mov
jge
movsl
mov
repnz
clc
push
mov
add
add
daa
in
mov
popf
dec
adc
pop
sti
push
push
jle
inc
xor
in
ja
imull
in
add
mov
xchg
orl
or
xchg
cld
adc
lock
popa
add
push
push
xchg
mov
test
lret
jmp
movsb
loop
and
push
adc
rol
ljmp
inc
add
mov
mov
fisubs
dec
int3
mov
pop
std
sbb
mov
lea
add
sbb
adc
pop
fwait
jp
aaa
pop
test
mov
dec
pop
insb
lret
loopne
cmp
fs
mov
arpl
pop
inc
cmpsl
xchg
ret
mov
jnp
jne
dec
mov
pop
jne
sti
out
in
push
daa
sub
add
adc
mov
jmp
sbb
jo
call
jl
cmp
jns
sbb
or
ret
adc
cmp
mov
jmp
jae
jns
mov
add
cmp
fimull
xor
cld
push
cmp
rcrl
outsb
movsl
inc
adc
pop
les
xorl
enter
xchg
inc
and
add
shll
hlt
cmpsl
and
inc
cmpsl
mov
sbb
pushf
into
jle
sub
test
test
and
sub
xchg
lcall
push
js
jmp
mov
pop
mov
mov
les
push
cmp
addr16
dec
pop
ljmp
call
ret
mov
jne
nop
jg
mulb
filds
or
xlat
add
sub
pop
test
scas
jecxz
jno
push
cmp
cmp
repz
inc
daa
arpl
add
fidivrs
inc
and
je
push
ljmp
or
dec
adc
insb
bound
gs
sub
and
mov
insb
divl
dec
rep
popf
mov
pop
xor
lods
ret
cltd
in
or
or
stos
push
jb
jecxz
mov
xor
xorb
outsb
xor
dec
jle
popf
out
adc
sbb
push
inc
cmp
lcall
xchg
xchg
insl
pop
fs
adc
lret
push
add
mov
aaa
inc
and
push
jl
aam
fstps
ja
fwait
inc
dec
push
and
gs
mov
out
fcmovbe
fs
icebp
adc
int3
pop
rolb
stc
mov
mov
gs
pushf
dec
jge
aas
mov
sbbl
cltd
rorb
mov
addr16
jbe
jmp
mov
lahf
fdivrl
inc
or
and
mov
leave
fsubrl
fdivrl
xchg
jnp
sarw
sub
jno
sbb
sahf
xchg
cmp
push
sbb
jmp
outsb
push
push
rclb
popw
test
pop
dec
ret
jg
cmp
mov
das
lcall
cmp
dec
out
mov
clc
movsl
outsl
mov
js
popa
sahf
lods
cmpsb
pop
xchg
mov
cwtl
sbb
jecxz
clc
cmpsl
mov
cmp
loope
test
add
sbb
add
bound
push
jns
pop
repz
ja
dec
dec
jo
aas
mov
out
jnp
int
outsl
cmc
ja
jg
mov
sbb
cmp
orl
aam
xchg
fiadds
xchg
imul
ret
hlt
sub
dec
and
add
dec
or
sbb
jecxz
arpl
mov
mov
mov
divb
jns
jns,pn
mov
out
and
aas
xchg
call
icebp
dec
inc
and
scas
xchg
dec
sbb
outsl
xor
subl
hlt
call
mov
ret
jecxz
xchg
loope
xlat
inc
aas
add
inc
dec
rcrb
and
js
dec
or
xchg
jne
das
pushf
stos
dec
jae
stc
ret
or
aad
jge
sub
std
cwtl
ds
or
jle
imul
ss
out
lret
aam
pop
add
es
jnp
lods
outsl
inc
cwtl
inc
lods
and
push
fisttpl
cmp
out
mov
clc
rcrl
lods
dec
dec
in
push
call
int3
shrb
shll
mov
scas
jle
ret
int
gs
loop
sahf
in
jecxz
andl
bound
xchg
sti
sub
sbb
test
adc
out
pop
mov
inc
mov
mul
aaa
jmp
rcrl
cwtl
dec
xchg
cmp
movsb
ljmp
jno
xchg
sub
fnstenv
mov
cmp
dec
xchg
ja
dec
mov
mov
sbb
mov
xchg
testl
adc
hlt
cli
pop
jnp
push
into
xor
cmp
das
bt
pop
mov
and
adcl
lahf
xor
inc
cmp
add
out
push
push
stos
mov
dec
inc
call
pop
jmp
outsl
outsb
dec
lds
dec
testl
imul
lock
sub
ret
adc
sub
dec
mov
testl
dec
repz
sarb
stos
and
fidivl
or
jbe
lahf
mov
lds
loope
push
mov
mov
test
and
aad
les
fwait
imul
mov
inc
gs
push
xchg
mov
mov
inc
inc
xchg
sbb
xchg
mov
adc
shll
enter
repz
cmp
bsr
test
push
lcall
test
movsb
loopne
into
and
mov
mov
push
jge,pt
ret
aas
in
and
dec
out
add
dec
fisttps
shlb
jg
mov
bound
movb
cld
popf
push
xchg
jno
xchg
cmpsl
add
fwait
and
movsl
mov
ffree
popf
adc
fsts
mov
test
rolb
push
xchg
xor
adc
mov
cmpsb
mov
sbb
and
aaa
add
xor
shlb
pop
imul
sub
imul
das
lods
lahf
adc
mov
fsts
or
and
adc
insb
out
rolb
ljmp
mov
inc
adc
add
daa
jle
push
mov
scas
dec
jp
ret
mov
or
xorl
and
jg
dec
cmp
push
xchg
cmp
sbb
data16
or
mov
inc
sbb
aad
out
push
mov
jno
or
inc
sbb
inc
pop
iret
jg
loop
rcl
addr16
pop
fadds
shll
jne
lods
lret
mov
adcb
in
inc
jbe
cmp
jo
dec
incb
aaa
test
popf
jle
adc
dec
push
adc
jo
add
add
pop
outsb
push
sbb
lds
push
daa
mov
dec
lret
aad
sub
pop
mov
mov
mov
out
inc
cs
jnp
pop
add
add
aaa
mov
mov
or
push
mov
xor
in
inc
fbstp
mov
sbb
sub
out
movsl
lds
or
mov
push
les
xor
bound
je
js
add
scas
add
cmp
fs
mov
mov
cmp
pop
or
cmp
lcall
push
xor
aaa
and
push
dec
mov
stos
sahf
mov
mov
sti
jno
insb
iret
mov
enter
pop
lods
or
dec
dec
data16
movl
sarb
add
fstpt
dec
pop
add
xor
orb
fimull
jns
adc
jge
xchg
inc
les
dec
cmpb
rcll
fs
loopne
and
push
sub
mov
xchg
ret
and
sub
test
sbb
jle
int3
sarl
adcl
jecxz
mov
loopne
mov
out
outsl
ja
sbb
test
adc
adc
mov
mov
cli
and
repz
jne
sahf
inc
xchg
adc
lea
movsb
or
xor
getsec
push
or
outsb
lret
fists
lret
shrl
mov
ljmp
and
insb
mov
sahf
mov
mov
cmpl
dec
pusha
jno
pop
or
jg
ds
xor
xchg
add
and
out
stos
int
in
dec
pop
enter
adc
insb
mov
rorl
into
push
xchg
dec
fmuls
sub
inc
push
and
inc
jmp
mov
popf
ret
pushf
ss
sub
fs
idiv
xlat
les
stos
add
mov
insl
fcompl
fsubrp
add
push
mov
arpl
aaa
xor
dec
les
push
loopne
test
jbe
lds
inc
add
jnp
cmp
xchg
gs
dec
je
imul
push
in
dec
jle
enter
cmpsl
mov
repz
sub
jo
inc
mov
and
xchg
xchg
outsb
sub
arpl
inc
xchg
lods
push
mov
cld
mov
pushf
lret
jg
lods
adc
les
out
sub
mov
imul
scas
rol
cmpsb
dec
aam
outsl
and
scas
call
pop
repz
testb
xchg
test
jecxz
xorb
dec
mov
pop
fwait
sbb
int
roll
or
jo
sub
into
push
inc
js
mov
sar
mov
repnz
sub
adc
cmpsl
xor
fdiv
push
loope
add
outsl
cmpsl
inc
pop
xchg
fisubrl
add
jp
pop
adc
push
jge
xchg
push
test
insb
xchg
fdivl
lret
or
call
push
adc
into
ss
scas
fldcw
jmp
ret
mov
pop
mov
in
repnz
or
mov
daa
cmpsl
lret
jmp
dec
loopne
lret
iret
xchg
mov
aam
push
and
repz
mov
js
jle
xchg
adc
jb
mov
ljmp
imulb
mov
out
rcrb
rorl
aaa
addr16
mov
cli
nop
dec
sub
fs
add
cwtl
xchg
imul
les
mov
pushf
stc
inc
rcl
xchg
jecxz
lds
fsubrs
fistl
sub
jp
add
pop
xchg
stos
sbb
ljmp
call
push
outsb
mov
rclb
imul
xor
mov
aaa
sahf
pop
outsl
lret
mov
rclb
enter
cs
rcrl
aad
or
scas
mov
xchg
nop
aaa
jo
into
mov
sarl
andl
adc
and
sbb
sbb
fxch
mov
push
dec
or
jb
movsl
add
adc
aas
xchg
push
mov
and
mov
out
cmp
sub
mull
and
call
pop
adc
jbe
in
cld
mov
inc
cmp
cmp
cmp
xchg
pop
mov
xor
pop
mov
shll
or
test
adc
adc
xor
jbe
nop
inc
push
inc
int
sub
das
sub
je
inc
shl
arpl
inc
negb
push
push
cmp
mov
cs
xchg
mov
sub
cwtl
pop
enter
inc
adc
dec
pop
cs
into
in
push
fcoms
sub
or
and
jl
mov
jmp
jnp
pop
outsl
ror
push
pop
ds
test
lret
movsb
adcb
hlt
jo
loopnew
les
pushf
dec
mov
repnz
mov
pop
inc
cmpsl
mov
mov
sarl
mov
add
les
dec
jmp
rcr
ljmp
xchg
jp
xchg
xor
xor
jno
data16
repz
xorl
mov
sbb
fsubrl
cli
cli
jle
js
mov
push
jp
ror
mov
jle
adc
lret
aaa
mov
dec
push
dec
jns
mov
add
fistl
stc
sti
jle
pop
add
test
xchg
push
inc
mov
inc
mov
jge
push
fimull
imul
ss
mov
int3
cmp
cmp
push
jb
jmp
dec
adc
pop
lcall
out
cwtl
fwait
jl
and
dec
xchg
out
cmc
shrl
je
cmpsb
test
lods
xchg
ss
fcmovnbe
xlat
push
jle
test
arpl
in
mov
test
jecxz
sti
lock
ja
icebp
js
and
and
shrl
sarl
lahf
cld
insb
int
mov
test
push
sub
inc
mov
shlb
push
cmp
outsl
sbb
xlat
andl
jecxz
xor
mov
pop
jb
adc
jmp
lret
add
ds
pop
aaa
jmp
mov
add
iret
adc
jp
adc
mov
xor
dec
cmp
adc
inc
jno
dec
xor
in
bound
jnp
mov
dec
repz
les
add
mov
mov
push
adc
mov
repnz
push
aas
stos
sbb
and
scas
sbb
xchg
adc
dec
cmp
add
or
inc
or
push
out
ja
jb
lcall
push
js
fcompl
mov
push
daa
pop
ret
loope
push
xchg
out
adc
lock
xchg
shll
dec
hlt
mov
fisttps
dec
out
xor
mov
add
mov
sub
mov
push
popa
or
add
aas
jmp
jae
inc
push
cmp
mov
lock
xor
scas
fldlg2
xor
dec
and
push
xor
int
sbb
scas
and
mov
ss
xor
shl
and
sbb
fdivrs
into
inc
xor
dec
cmp
xchg
lock
add
insb
xchg
mov
fidivrs
bound
xchg
push
pop
and
lcall
add
repz
test
dec
mov
lods
xlat
popa
pop
or
fdiv
mov
ds
push
jmp
popf
xchg
mov
add
xor
pop
add
addr16
insl
rep
insb
aas
pop
pop
fcoml
mov
filds
jb
sub
cmp
int
mov
shrl
cli
mov
rolb
mov
add
mov
cwtl
jne
add
inc
test
jb
lea
jne
stc
lods
int
in
push
and
add
xor
xor
inc
outsb
mov
pop
jmp
or
add
popa
pushf
dec
pusha
popf
int
fwait
sbb
push
add
jmp
xchg
jp
lea
lock
mov
and
rcl
ficompl
arpl
or
or
stos
pop
insl
adc
xchg
adc
icebp
jmp
push
add
out
rclb
inc
mov
mov
pcmpeqb
xorb
xchg
idivl
inc
pop
adc
mov
stos
test
mov
push
hlt
adc
xchg
in
pushf
aas
test
out
cld
in
mov
icebp
lods
sub
jle
and
nop
cltd
jg
jl
mov
out
int3
or
leave
addb
mov
clc
fwait
sub
in
clc
push
mov
out
jb
inc
popf
mov
sbb
loopne
sbb
adc
xor
xor
nop
mov
das
jo
inc
test
sub
fnstsw
adc
mov
adcl
or
push
inc
idivb
inc
lret
mov
push
mov
dec
bound
lret
stos
pop
aas
mov
xchg
cmp
outsl
cmp
outsb
adc
inc
sub
fsts
test
mov
es
xchg
push
stos
lea
gs
inc
and
or
stc
call
nop
mov
sbb
arpl
cltd
data16
out
icebp
nop
lcallw
xchg
mov
les
sahf
in
mov
or
dec
jmp
flds
and
sahf
movsl
xchg
adc
es
mov
pop
xchg
je
or
insb
testl
dec
fdivl
shrd
fs
in
add
push
fldl
fldl
dec
out
jno
mov
push
xchg
out
jo
dec
cmp
ss
movsl
lds
ja
inc
push
mov
and
incb
pushf
mov
orl
jle
jp
or
cmp
shrb
sbb
mov
into
xor
andb
icebp
movsl
aas
fistps
adc
push
mov
fists
add
jmp
outsl
pop
mov
loopne
fbstp
jns
test
pop
cli
out
nop
outsw
add
lock
mov
pop
jle
mov
mov
aad
mov
fstps
addb
popa
popf
mov
fmul
fcomi
cli
adc
test
imul
or
jge
lret
jno
arpl
das
cmp
push
xor
shrl
dec
sbb
mov
das
xchg
cmp
shr
xchg
subl
je
sub
ficompl
jne
out
std
sbb
mov
nop
in
push
dec
xor
imul
add
popf
jg
cli
jae
pop
std
push
cmp
xchg
mov
lods
mov
aad
fcoml
fnstenv
pop
cmp
xor
fdivs
mov
push
decb
iret
add
fcmovbe
enter
rolb
bound
xlat
jl
add
lods
movsl
ljmp
stos
sti
pushf
xchg
cmc
sub
xchg
and
lock
ljmp
icebp
mov
leavew
or
lahf
jecxz
jns
or
bound
or
bound
mov
out
sarl
les
test
mov
cmp
sub
push
ljmp
jle
mov
inc
inc
mov
lods
jb
push
cmp
sbb
mov
pop
adc
dec
mov
jne
daa
push
cmp
or
push
dec
sub
stc
add
xchg
ss
test
adc
push
xor
inc
out
jne
push
loop
xchg
fst
call
sbb
jae
mov
jmp
loop
insb
icebp
dec
in
stos
adc
and
sub
adc
xchg
cs
stos
xchg
and
push
xchg
sbb
and
hlt
lcall
insb
and
jnp
mov
movsb
mov
sub
outsl
test
lea
loopne
insl
out
fbld
push
sub
adc
sub
insl
inc
cmp
inc
lods
jo
or
imul
pop
mov
xchg
leave
sub
push
jmp
idivl
or
outsl
adcb
jge
ss
fisubrl
jno
add
mov
mov
xchg
mov
in
inc
mov
stc
pop
mov
cmp
inc
sub
jnp
imul
movsb
hlt
movsb
imul
test
push
cltd
hlt
je
jnp
mov
insl
enter
les
push
xor
movsb
out
xchg
insl
enter
movl
pop
sbb
pop
push
or
xchg
adc
push
push
and
mov
push
or
dec
add
mov
fs
call
scas
dec
cs
jns
cmp
lcall
mov
andb
inc
push
push
movb
roll
xor
mov
test
pop
ss
inc
in
jecxz
sbb
jns
test
mov
push
mov
xlat
xchg
sbb
or
shrl
mov
pusha
cmp
loope
fmuls
add
xchg
sbb
add
out
cmp
out
mov
loope
loop
stos
frstor
jne
sbb
jns
test
fists
cmpl
pop
insb
jns
push
cmp
out
push
sub
cs
push
mov
popl
jl
sbb
push
cli
aaa
cmp
cmpsl
pop
and
pop
jbe
aas
inc
inc
ret
push
shlb
add
insb
push
push
clc
shrb
shr
sub
fbstp
push
movsb
out
xor
nop
shl
aam
out
lds
loopne
insl
dec
cmp
jns
aad
movsl
imul
xor
or
into
stos
and
daa
insl
jmp
out
mov
cmc
inc
push
mov
xchg
arpl
push
stos
mov
cmp
out
imul
leave
movsb
das
jge
bnd
add
or
xor
xchg
mov
fcompl
sub
mov
mov
in
fdiv
xor
pop
mov
aam
int3
or
test
push
cmp
push
xor
xchg
cwtl
cmc
and
mov
aam
pop
sbb
leave
loope
cwtl
xchg
sub
dec
in
mov
fnclex
or
je
leave
add
jno
das
cmp
int3
jg
sbb
in
adc
xchg
push
inc
dec
outsl
xchg
mov
mov
int3
sub
cltd
xorb
mov
aas
or
mov
es
mov
call
cmp
cmp
mov
add
shlb
push
imull
in
enter
stos
pop
dec
xchg
imul
mov
je
icebp
and
inc
iret
orl
jmp
mov
pop
xor
lock
sub
inc
inc
mov
cmpb
cmp
mul
fstl
xor
es
in
xchg
stos
dec
cmp
fnsave
nop
out
fmul
shr
mov
stos
stos
subl
lods
testb
jle
push
scas
dec
mov
and
jg
xchg
mov
mov
mov
outsb
test
fwait
nop
dec
cmpsb
jmp
mov
or
loope
shll
mov
jo
je
loopne
mov
and
and
nop
add
enter
sahf
stc
xchg
sahf
enter
dec
jae
out
push
dec
cs
addl
inc
sbb
lock
sbb
je
enter
mov
cmp
mov
dec
xchg
shl
movsb
sbb
out
jae
dec
ja
push
add
rcll
loope
dec
mov
xchg
mov
inc
xor
adc
inc
lret
popa
cmp
sub
into
pop
sbb
sti
mov
cs
rclb
lret
nop
mov
enter
insl
rolb
aam
pop
aas
pop
and
bound
pop
mov
sbb
xor
xchg
fwait
das
sbb
std
imul
in
fldenv
js
xchg
mov
sub
out
or
stos
and
push
push
popa
rol
fiaddl
and
shll
jp
adc
mov
sub
sbb
cmpsl
decb
aam
nop
xchg
sbb
and
push
int
jecxz
fwait
sub
imulb
test
xchg
cltd
cmp
cmp
sahf
bound
add
mov
mov
pop
fistps
call
loope
dec
movsb
std
popa
fs
rclb
in
shr
dec
pop
enter
push
jo
in
pop
dec
fdivr
jbe
xor
adc
pop
lds
cltd
int
mov
cmpsb
pop
pop
rcll
lea
lods
aad
add
shlb
lcall
cld
std
gs
mov
or
add
add
pop
in
sbb
sub
xchg
pop
add
or
mov
ficompl
jecxz
mov
addb
sub
xchg
sbb
mov
fwait
out
jne
push
sub
sub
test
mov
push
xchg
movsl
std
or
fstpl
inc
mov
dec
xor
xchg
int3
sub
adc
das
hlt
cld
mov
xchg
pop
iret
andw
mov
mov
mov
arpl
sub
push
and
push
add
cmp
addl
add
enter
dec
push
lds
or
sub
and
push
jecxz
inc
inc
pusha
jge
pop
cmp
sbb
adc
xchg
fisttps
jbe
cwtl
mov
mov
lods
pusha
and
jne
push
cwtl
sbb
ds
mov
xchg
call
mov
stos
or
pop
jmp
sub
out
dec
movsl
inc
push
xor
cmpsl
aad
pop
inc
cmp
push
add
mov
leave
or
sub
cs
mov
movsb
pop
xchg
xor
ljmp
shrl
xchg
ljmp
xchg
lods
mov
es
insl
outsl
jne
mov
daa
and
mull
mov
mov
popf
inc
add
adc
sub
pop
sar
dec
add
dec
jb
cmpsl
jmp
subl
lret
notl
or
popf
adcl
mov
sbb
adc
mov
and
xor
loope
ficompl
jmp
lret
stc
push
sub
pushf
push
shll
jb
xor
inc
loope
ror
mov
test
das
movsb
ret
iret
adc
add
les
stos
mov
inc
push
mov
rclb
sub
cmp
dec
arpl
in
shrb
mov
cmc
lahf
cli
jb
lods
cmp
fisttpl
das
lret
stc
cmp
cmp
cmp
sbb
clc
mov
jne
movsl
js
je
lock
mov
xchg
stos
dec
rclb
jmp
jecxz
push
jmp
jbe
lret
jl
or
jns
jge
test
lret
ret
pop
sahf
pop
add
cld
xor
pushf
test
imul
aam
std
mov
sbb
sub
add
sbb
cmp
sbb
mov
lods
insb
outsb
lcall
mov
push
rcr
fnstenv
cs
pop
loopne
lcall
loope
cvtpi2ps
lods
rol
rorl
imul
lret
cld
ja
mov
sti
pop
sub
push
std
push
imul
cmp
aaa
mov
clc
pop
dec
negb
popf
pop
pop
mov
jle
xor
out
in
dec
nop
leave
and
push
scas
cltd
sub
push
pop
push
xor
sub
push
add
mov
jg
pop
add
fistps
mov
gs
xchg
pop
xchg
lret
jno
xchg
mov
mov
sbb
jl
cmp
andl
daa
jns
std
lods
addl
enter
lret
in
sarl
mov
cs
and
insb
dec
aas
pop
test
mov
fstl
inc
aad
enter
add
jb
aaa
inc
repz
mov
hlt
mov
test
aad
pop
pop
or
push
pusha
movsl
sbb
call
lret
push
xlat
xchg
pop
sarb
or
shl
and
or
arpl
mov
inc
aas
test
dec
mov
aam
and
hlt
jnp
ja
and
rol
mov
pop
mov
pop
pop
push
dec
mov
bound
sti
sub
push
cmc
and
mov
ret
arpl
out
jmp
xor
sbb
inc
mov
adc
cmp
push
ss
call
inc
mov
push
aad
jge
sbb
jno
mov
lea
inc
push
inc
outsl
jbe
mov
test
ljmp
jmp
jmp
mov
cmpb
dec
shrl
sbb
cmp
out
rol
js
mov
jle
sahf
xchg
jl
mov
lahf
sti
mov
and
lret
mov
xor
test
add
lcall
and
ja
ds
outsb
es
gs
jo
ret
fs
dec
dec
xchg
ret
stc
test
xchg
xor
mov
popa
push
pop
mulb
dec
mov
call
xor
in
orb
dec
arpl
xor
loopne
and
sub
test
idivl
jg
inc
xchg
push
pusha
pop
mov
fwait
sub
jbe
cmp
cmpl
mov
insb
lods
cmc
push
leave
pop
mov
or
mov
scas
sahf
push
cmpw
out
lcall
pusha
sub
mov
xchg
scas
scas
sarb
sub
xchg
loop
repz
sub
xchg
jb
sub
add
fs
mov
lods
fs
mov
ret
insl
in
ja
jl
scas
jmp
fnstcw
mov
imul
out
stos
das
stos
movsl
shl
fidivl
pavgw
dec
cltd
push
adc
push
dec
cmp
out
frstor
push
xorb
mov
xchg
mov
popa
mov
sub
enter
add
sub
stos
clc
xor
jno
or
lcall
popf
negl
enter
sub
pop
xchg
mov
inc
je
gs
xchg
jae
stos
dec
add
mov
out
dec
scas
mul
pop
daa
insl
xchg
jge
and
xchg
mov
pop
inc
pop
inc
lcall
dec
aam
popa
mov
adcb
divb
adc
add
mov
inc
jl
roll
rcrb
aam
jnp
pop
fbld
shlb
pop
rcl
rorb
cld
adc
inc
sti
jno
js
lock
in
fmuls
jns
jl
jnp
test
sub
adc
mov
adc
test
fcmovnb
inc
push
jne
aad
sbbl
ja
xor
sahf
push
inc
xchg
push
sub
sbb
lods
mov
ljmp
pop
sti
jbe
loope
ds
movsl
adc
mov
test
xor
xor
dec
cltd
xchg
dec
lret
or
xor
aad
mov
es
mov
sbb
in
inc
cmpl
and
std
sti
or
pop
test
lret
or
xchg
scas
inc
cmp
out
jno
loop
nop
stc
fldcw
push
adc
mov
movsl
push
fstps
mov
movsl
adc
cmc
or
cwtl
in
xor
mov
stos
jbe
lahf
mov
daa
and
jno
mov
bsf
mov
imul
vandnps
data16
mov
data16
xlat
cmpsb
mov
xor
sub
mov
dec
cs
add
jmpw
call
mov
mov
cmpsb
negl
mov
pop
int
cmp
or
jnp
jge
or
jecxz
daa
rcl
push
push
out
bound
fnstsw
sbbl
mov
mov
jle
pop
push
xor
jge
pop
jmp
jbe
cmpsl
push
mov
push
or
nop
test
jp
aaa
sbb
out
mov
iret
xor
ret
clc
test
addb
jp
das
lods
stc
and
fbld
inc
xchg
xor
adc
mov
repz
lods
jmp
mov
push
outsb
jmp
cmc
aam
mov
das
int
add
and
pop
inc
fimull
jle
js
pop
sbb
mov
adc
shl
ja
std
adc
movsl
dec
cmpsb
pop
jmp
bound
pop
xor
push
enter
rclb
sbb
rol
pushf
cmc
int
pop
cmp
out
loop
sbb
inc
pusha
xchg
add
and
sbb
pop
xchg
cs
sar
add
mov
shlb
or
sbb
outsl
jae
mov
in
clc
mov
pop
add
test
sti
mov
xchg
aas
and
aam
sti
xor
rdtsc
push
test
add
and
enter
add
out
dec
jno
je
cwtl
ret
push
xor
insb
insl
iret
lds
in
jp
fbld
popa
adc
leave
mov
ss
cmp
loopne
icebp
mov
loopne
testl
sbb
push
loopne
icebp
push
jns
scas
aad
and
adc
mov
jne
push
mov
test
insb
stos
mov
inc
mov
stos
adc
lret
ljmp
pmulhuw
push
add
in
rolb
das
push
scas
mov
push
ret
dec
stos
scas
iret
lcall
ljmp
cltd
aam
push
or
or
aam
jge
rcl
jns
push
fdivrs
test
loope
cli
jae
bound
and
repz
scas
pushf
mov
mov
pop
adc
cmp
lods
push
push
pop
jno
adc
inc
cwtl
scas
lods
jb
shrb
mov
lahf
pop
inc
retw
mov
push
loopne
push
jecxz
sub
xchg
mov
or
mov
mov
mov
outsb
mov
sub
aad
ret
lds
fwait
mov
ret
loope
in
daa
mov
fmull
adc
lods
sub
mov
cmpb
int
xor
push
sub
ja
xchg
push
adc
pushf
add
pushf
push
outsl
pop
out
lods
mov
jecxz
xchg
pop
shll
mov
push
lods
add
lretw
roll
mov
out
ljmp
lcall
sub
xchg
pusha
mov
sub
xlat
cmc
icebp
or
test
sahf
lahf
or
sahf
mov
pop
cmp
sub
test
inc
sub
loope
or
mov
jg
shlb
enter
push
sbb
in
loope
or
out
xlat
xor
adc
je
cmp
xor
loope
movsl
sahf
mov
movb
mov
push
shlb
mov
sbb
mov
push
adc
mov
lea
mov
fisttpll
in
lods
cwtl
mov
dec
in
mov
xchg
dec
mov
repnz
pop
push
or
jnp
sbb
lahf
jle
push
es
push
adc
adc
js
in
hlt
push
in
cltd
sub
cltd
pop
nop
lahf
jmp
lcall
outsl
hlt
stos
fwait
movsl
jle
jnp
test
xorps
pop
lock
xchg
and
push
and
cltd
lcall
mov
bswap
xchg
hlt
test
test
jae
cli
call
adc
cmp
xor
mov
lods
xchg
sbb
bound
mov
and
and
mul
push
fs
adc
ud1
adc
ja
xchg
push
inc
cmp
enter
fs
xchg
popa
xor
xorl
les
std
cltd
int3
cmpsb
cmp
mov
rorl
fiadds
iret
push
pop
cld
lods
add
aaa
popa
cmp
push
add
and
xchg
sub
ret
sub
xchg
mov
inc
jnp
roll
sub
lcall
sbb
and
adc
xchg
iret
mov
cmpsl
notb
push
or
fidivl
or
lret
popf
mov
movsb
or
inc
in
aad
jp
ret
mov
dec
and
mov
daa
jge
or
scas
pop
xchg
loopne
ss
pop
jae
lock
ds
out
aaa
pushf
mov
call
jnp
xchg
mov
aaa
subl
outsl
jle
dec
in
sbb
idivl
in
adcl
gs
and
xor
les
mov
xchg
idivb
xchg
inc
push
ja
scas
jbe
and
xorl
xlat
jmp
loopne
sub
mull
or
push
add
fwait
sbb
dec
aam
cmpsl
out
dec
jb
fsubp
andl
inc
scas
repz
sbbl
or
xchg
xchg
mov
movsb
int
push
mov
dec
inc
ror
shrl
mov
push
js
xor
mov
sub
cmc
clc
stos
inc
sbb
hlt
mov
cmc
jae
jp
inc
pop
push
sbbb
add
jae
movsl
mov
shlb
pop
subl
pop
mov
sub
mov
pop
insl
std
xchg
aam
pop
lods
pusha
xchg
add
mov
push
xor
arpl
js
es
je
xchg
in
mov
xchg
add
xchg
add
sub
or
outsb
clc
std
cmp
sbb
jle
test
dec
test
sub
jge
push
pop
je
fisttpl
lock
call
inc
addr16
inc
push
inc
or
push
mov
xchg
fdivrs
pop
clc
loop
ljmp
xor
mov
pop
idivb
xor
xchg
pop
and
stc
fs
ret
adc
insb
or
jno
xor
scas
repz
subb
enter
adc
cmp
dec
stos
loop
xchg
xorb
flds
push
sub
xor
sbb
nop
mov
icebp
sub
fdiv
decl
jmp
insl
fsubs
sub
data16
stos
ljmp
jecxz
imul
shlb
inc
addr16
mov
lea
ret
in
adc
cltd
bound
fstps
mov
mov
icebp
xchg
inc
mov
mulb
mov
push
xor
loope
mov
sub
xchg
popf
mov
inc
xor
adc
lods
xchg
lcall
jo
mov
sbb
push
push
push
imul
outsl
das
stc
sbb
dec
cltd
and
dec
mov
popa
mov
mov
sti
xlat
addr16
addr16
test
int3
imul
das
cmp
ffree
incb
xchg
jecxz
rolb
mov
insl
mov
push
loopne
add
test
mov
xor
js
es
into
jg
xlat
mov
add
sbb
aam
fidivrs
mov
pusha
test
popa
ret
cmp
inc
cmp
sbb
aaa
mov
sbb
inc
fbstp
sbb
dec
xchg
xchg
in
js
std
iret
pop
imul
lcall
in
outsl
leave
pop
sub
cmp
pusha
cmp
pop
aaa
cli
popa
aam
nop
in
inc
cli
stc
dec
outsl
lds
insb
pop
cmp
mov
jne
pop
sub
adc
inc
mov
adc
stos
fdivrs
pop
inc
mov
mov
imul
scas
xchg
and
cmpsb
nop
add
xor
popf
ret
push
mov
fcmovnb
movsb
neg
test
inc
mov
jne
js
cmp
lret
pusha
adc
fs
leave
imull
bound
sar
or
xchg
push
sbb
and
lret
inc
addr16
jecxz
add
adc
and
fwait
or
gs
jb
out
movsb
push
imul
andl
lock
mov
cmp
dec
pop
xchg
adc
sbb
xchg
rclb
stos
stc
idivl
test
mov
ljmp
dec
mov
add
or
xor
mov
sti
sub
out
ret
mov
por
jg
jg
xchg
and
jg
stc
lock
movsb
sbb
sub
jnp
rcrb
add
lret
dec
movsl
sub
cmpsl
xchg
cmp
in
mov
mov
cli
in
aaa
out
incl
mov
pop
das
pop
inc
int3
mov
jge
rcrl
sbb
jge
xchg
ret
or
sub
lock
xlat
xchg
mov
icebp
lds
mov
inc
sub
mov
cwtl
jb
dec
stc
cli
push
sbb
lahf
ljmp
rorl
test
xchg
repz
mov
add
dec
sub
jo
filds
loopne
int3
hlt
xchg
dec
data16
push
lds
jne
or
dec
jno
and
cwtl
loope
xor
jle
insb
cwtl
cmp
jmp
shrl
and
jecxz
pop
inc
push
std
loope
movsb
push
ret
stos
add
sbb
xchg
sbb
sub
jae
out
mov
movsb
sbb
dec
mov
das
dec
aad
fadd
hlt
insl
out
mov
repnz
push
jmp
sarl
int3
push
ja
pushl
push
xchg
add
call
mov
ds
shll
daa
fisubrs
jb
ret
adc
mov
mov
rolb
mov
ljmp
pop
icebp
lea
out
cmpsl
shlb
lea
push
mov
les
lret
mov
aad
movsl
lods
or
dec
inc
jge
fnsave
mov
fcmove
sbb
sub
lcall
push
sub
xor
jnp
add
sub
test
sub
es
cli
xchg
push
sbb
jl
lds
add
jne
cmp
or
lcall
push
fdiv
aaa
sti
push
rsm
fwait
insl
sub
xchg
movsb
dec
xor
or
pop
je
gs
fdivp
rcr
push
out
dec
out
in
gs
xchg
push
das
inc
dec
cli
cmp
mov
push
cmc
es
jno
push
xor
or
fnstenv
adc
test
rcll
jl
jl
cmp
test
faddl
xchg
aam
hlt
cmp
xlat
lret
iret
mov
js
xchg
fdivr
imul
mov
lock
cs
outsl
cmpsb
cld
and
cltd
mulb
stos
xor
sti
adc
inc
aaa
push
push
cmp
adc
jne
lret
jne
psubw
repnz
rorb
mov
aad
xor
sbb
jge
frstor
icebp
pop
mov
enter
pop
stc
inc
jne
xchg
pop
mov
cmp
or
sbb
ror
mov
mov
rcll
add
mov
shrb
xchg
cmp
push
push
in
pop
pop
sti
out
aas
xor
mov
inc
popf
push
inc
mov
outsl
mov
das
cmp
outsb
pop
push
bound
pop
rolb
cmp
dec
movl
dec
iret
stc
mov
mov
dec
cwtl
mov
pop
xchg
jno
icebp
and
leave
shll
adc
jb
inc
subb
mov
fdivrl
sbb
rorb
stos
xchg
jge
sub
je
pop
mov
sub
ljmp
jne
push
push
dec
sarb
mov
and
aaa
and
inc
cmp
ja
jae
sbb
es
and
push
fstpl
inc
stc
ds
mov
xchg
dec
mov
mov
cmp
cmpsl
dec
cmpsl
mov
aas
fwait
xor
mov
sarl
mov
mov
mov
nop
jnp
dec
cmp
xchg
mov
sub
out
and
jnp
cmp
push
sub
lcall
pop
dec
mov
inc
and
or
pop
cmp
mov
inc
sbb
mov
pusha
and
xor
and
xchg
fs
adc
insb
in
mov
lret
lea
sub
daa
xchg
adc
in
or
ret
mov
adc
push
xor
or
scas
loop
dec
and
in
repnz
sbb
add
or
or
lds
stc
iret
mov
sub
stos
iret
xchg
rcrb
adc
push
xchg
test
clc
hlt
pusha
sti
test
mov
dec
arpl
mov
aas
sbb
inc
push
in
icebp
cltd
cmc
loopne
scas
or
inc
ss
cmp
movsb
fsub
stos
sub
scas
insb
sti
fdivr
xchg
fldt
dec
out
lock
std
add
loop
xor
xchg
mov
xchg
cltd
mov
lods
cmp
or
mov
sub
sbb
sbb
dec
in
dec
cs
adc
sub
ljmp
int3
hlt
out
cli
fs
nop
lods
mov
ret
ret
sub
std
xchg
mov
rorl
or
xchg
pop
sub
cs
and
mov
daa
dec
dec
inc
fldl
xlat
cli
stos
in
fsubs
dec
les
enter
rcrb
jns
ljmp
jp
scas
pop
shrl
insl
out
pop
shrl
mov
icebp
loope
or
inc
pop
push
jns
pushf
sbb
bound
push
leave
rclb
ljmp
push
pop
inc
pop
ret
sbb
xchg
js
nop
mov
mov
rcl
mov
int
aaa
push
xchg
mov
xor
test
ja
inc
js
rcll
jnp
and
pop
movsb
inc
jge
add
mov
mov
shrl
js
jg
inc
dec
ja
aas
ljmp
jl
sarl
rolb
xchg
mov
mov
cmp
scas
sub
pop
leave
inc
mov
dec
cmp
xor
addl
dec
fs
inc
xchg
roll
adc
mov
pop
in
adc
adc
loopne
mov
inc
add
outsl
lods
hlt
addl
bound
data16
sbb
push
inc
nop
out
mov
xchg
mov
add
mov
inc
je
pushf
sub
cli
mov
cltd
les
push
fmuls
jle
mov
mov
push
mov
js
add
mov
xor
popa
cmp
pop
push
andb
dec
inc
in
call
push
inc
cmpsb
mov
in
push
fdivl
xchg
xor
xchg
jp
fs
push
pushf
adc
push
lcall
pop
shrb
in
lds
insl
int
mov
pop
or
jnp
inc
ficompl
imul
das
into
bound
sub
movsb
jecxz
adc
mov
push
das
fmul
bnd
loop
cld
dec
dec
imul
pop
xor
test
mov
dec
push
out
jae
inc
xor
inc
pop
or
jae
pop
sarl
cmp
cmp
dec
jnp
jmp
dec
ret
jnp
fwait
mov
inc
mov
sar
arpl
cmp
xor
mov
insl
in
push
lods
nop
inc
and
aas
adc
xor
pushl
dec
push
sub
sub
jb
mov
int
adc
pop
pop
mov
psraw
add
dec
out
jns
push
or
mov
ss
ret
inc
into
add
or
mov
cmpsb
jno
sub
mov
aad
stos
xor
gs
xchg
scas
adc
mov
push
int
mov
push
jae
inc
js
das
out
repz
dec
jmp
lods
fnstenv
sub
adc
and
cmp
xor
inc
push
dec
dec
xor
loop
sub
jp
aam
dec
inc
add
mov
int
dec
into
mov
sbb
lds
push
mov
add
test
push
mov
jmp
xor
std
cwtl
movsb
mov
push
popf
out
cmp
adc
xor
mov
dec
shrl
jle
cmp
shll
mov
dec
inc
xor
aad
loopne
ljmp
rcr
subl
fwait
xorb
arpl
inc
or
xor
push
mov
sub
cld
mov
loop
xor
adc
jg
icebp
push
ds
xor
xchg
and
out
ja
test
pop
inc
ja
push
into
xchg
push
add
ficomps
and
inc
sbb
xor
adc
outsb
arpl
mov
mov
adc
in
lahf
ja
out
loop
mov
mov
stos
dec
dec
inc
dec
xchg
mov
lret
and
jbe
ljmp
cmc
insl
dec
cmpsl
sbb
mov
rcr
xchg
test
jg
out
idivb
cltd
inc
mov
roll
or
shl
imul
adc
and
pusha
mov
shrl
mov
rorl
inc
fs
shlb
mov
lret
push
outsl
xor
pmulhuw
cmc
dec
imul
inc
mulb
loop
lret
mov
dec
stos
dec
enter
jbe
sub
or
mov
mov
test
lock
mov
add
push
xchg
push
dec
jp
sbb
push
mov
xchg
adc
outsb
adc
cmp
mull
popf
popa
ss
cmp
sbb
mull
shll
xchg
xchg
inc
jl
repz
test
xchg
repz
bound
mov
or
xor
inc
jae
lds
aam
pop
mov
call
mov
add
bound
xchg
jbe
std
out
xchg
stos
clc
add
mov
push
je
push
xchg
loope
jno
or
xor
aad
jmp
sub
mov
push
stos
add
jl
movsb
dec
lock
cmc
orb
mov
mov
jmp
jbe
mov
dec
cli
into
and
dec
insb
cltd
or
sbb
sbb
stos
fildll
imul
dec
push
adc
xchg
dec
stc
jae
cmpsb
dec
loop
fs
jnp
lret
shl
inc
and
pop
mov
das
pop
fwait
and
pop
inc
outsb
push
xchg
adc
icebp
xchg
out
aaa
sub
out
adc
dec
jno
xchg
push
inc
sub
addr16
cmpsl
out
add
push
cmpsb
and
sbb
addr16
sbb
or
pop
xchg
pop
jnp
shll
and
jo
push
xlat
into
cmp
mov
loope
inc
cwtl
je
je
call
getsec
aas
ret
jecxz
sarb
xor
out
insl
adc
xchg
popf
xlat
adc
and
pop
inc
cmp
ds
mov
stos
imul
les
xor
push
sbb
bound
jp
pop
andl
in
lret
cmp
xor
add
mov
lods
xor
or
push
mov
push
sub
push
lea
add
push
inc
push
dec
ljmp
fisttps
mov
mov
shrb
das
push
int
sub
loopne
mov
loop
dec
stos
outsl
out
loope
mov
cwtl
imul
daa
push
cmp
mov
loope
push
pop
imul
pop
ss
fsubrp
pop
jle
jl
sbbl
lret
insl
loope
push
xchg
jg
pop
pop
mov
int
sbb
cmpsb
ss
stc
push
xchg
pop
xor
dec
xor
popf
das
jg
lret
jmp
pop
xchg
push
in
fwait
loop
ja
xchg
js
ja
and
inc
push
test
outsb
testl
inc
mov
enter
fwait
push
mov
int3
in
aad
xchg
inc
movsb
popa
idivb
popl
jge
push
push
xchg
push
xor
mov
nop
cs
xchg
adc
pop
xchg
sub
xchg
es
mov
data16
dec
push
push
sbb
mov
imul
or
leave
sub
cmp
xor
jmp
clc
mov
repz
arpl
and
inc
push
loop
sbb
mov
mov
dec
add
xlat
mov
dec
insb
jae
add
sub
xchg
in
in
loope
std
ret
and
test
jae
cwtl
pop
lret
xchg
xor
xchg
test
add
in
cmp
inc
call
xor
js
mov
fstp
add
pusha
ss
cmp
jg
in
cmp
adc
cmc
lods
lods
jb
lds
xor
gs
sub
sbb
mov
push
andl
pop
and
xchg
sbb
mov
jo
movd
imul
aad
outsb
popf
push
into
jl
mov
adc
ja
add
in
orb
sub
mov
rcl
lcall
icebp
xor
dec
inc
and
or
jmp
int
mov
mov
sbb
push
jmp
or
xchg
sbb
loopne
adc
decb
mov
xchg
sub
xor
andb
dec
in
xor
mov
dec
dec
add
les
cmp
nopl
sbb
call
xchg
mov
mov
test
or
hlt
inc
mov
xor
gs
add
xchg
fiadds
adc
mov
cmpl
xlat
rolb
iret
jb
jg
xchg
aas
jmp
in
xor
jg
sub
mov
and
call
push
iret
out
sbb
pop
lret
inc
pop
inc
inc
jg
sbb
mov
lret
adc
jmp
xlat
add
hlt
sahf
jns
sbb
mov
js
iret
scas
jg
inc
sti
xlat
jo
xor
insl
cmc
lea
dec
add
jge
loope
in
inc
pop
dec
inc
mov
sbb
mov
cltd
rcrb
movsl
cmp
cltd
xchg
mov
inc
dec
call
sub
mov
push
cli
push
jae
cmpsb
mov
cmp
inc
subl
aaa
lock
inc
movsl
out
fucomip
and
sub
data16
sbb
dec
and
outsl
push
pop
in
inc
dec
cmp
dec
inc
fistpll
cli
ret
pusha
or
pop
popa
test
push
inc
dec
dec
out
dec
xor
ja
insl
cmp
cmpsl
push
and
mov
pusha
lock
jle
in
leave
add
mov
popa
xor
loop
adc
mov
mov
fs
dec
inc
stos
cmpsl
das
sbb
pop
dec
jmp
add
out
sbb
adc
pop
pop
mov
imul
add
cmpsb
mov
adc
stos
js
stc
fs
leave
cmp
je
jge
js
aaa
daa
call
scas
pop
fmull
adc
hlt
pushf
mov
idivb
and
lds
adc
pop
pop
test
mov
mov
pop
add
int
xor
push
dec
loop
loopne
lods
aaa
repnz
cmp
mov
sub
mov
mov
aad
xchg
cmp
sbb
fmull
mov
loop
hlt
imul
inc
ret
testb
ljmp
sub
insl
jg
pop
jae
cmp
inc
sub
add
jno,pt
mov
and
adc
push
mov
add
sub
push
mov
dec
insl
inc
iret
loop
lahf
daa
inc
popf
lret
pop
mov
sbb
dec
or
scas
or
xlat
fildl
loope
dec
add
enter
scas
cmp
mov
jne
sbb
cs
cli
cmp
jns
out
aas
dec
mov
inc
mov
repz
icebp
push
daa
add
mov
imul
inc
insl
cmp
sbb
cltd
pop
and
adc
hlt
cmp
cmp
and
cmp
fmul
xor
cltd
push
pop
push
aas
ret
rcl
fsubr
popa
mov
push
ret
pop
xchg
dec
inc
jg
fs
mov
xchg
cmc
inc
clc
shl
stos
xor
repnz
movsl
mov
insb
or
add
cmp
je
push
inc
inc
cld
stc
jmp
in
sub
and
incb
jae
push
icebp
ror
xorb
sub
sbb
insb
lock
pusha
and
and
out
out
shl
imul
push
xchg
mov
cmc
and
int3
and
dec
stos
cwtl
shr
push
out
mov
repz
stos
xor
idiv
jne
outsl
mov
mov
mov
cwtl
scas
lock
test
push
adc
push
rcr
push
es
repz
cmp
es
pop
mov
movsb
jmp
inc
cmc
xchg
les
in
movb
inc
fdivrs
daa
imul
mov
loopne
inc
scas
frstor
pop
add
xchg
insl
add
out
pop
pop
movsl
jo
mov
mov
dec
lock
push
mov
push
frstor
rclb
cmp
mov
xchg
dec
rcl
aam
aaa
loope
pop
dec
push
out
outsb
loop
mov
mov
mov
pop
aaa
shll
cmpsb
inc
push
adc
mov
in
stc
hlt
pop
sbb
add
ja
mov
scas
aaa
mov
xchg
adc
repnz
push
or
mov
bound
sbb
leave
cmp
imul
into
out
jmp
ret
dec
add
test
pop
ja
sub
xor
pop
push
and
or
out
or
mov
les
jg
out
pop
jl
dec
adc
lock
sub
mov
cwtl
stc
lea
fstl
push
inc
loop
sbb
adcl
push
jl
mov
clc
pop
inc
inc
orb
xchg
es
adc
jp
outsb
stos
test
jg
hlt
subb
loope
jb
scas
loop,pn
push
imul
popa
out
sub
sbb
xchg
lret
sar
lds
mov
test
je
out
jns
shrl
cmp
cwtl
mov
mov
daa
add
xor
stos
das
loopne
enter
inc
lret
cli
sub
jbe
cmp
sbb
mov
pusha
pop
repz
adc
insb
rclb
push
cmp
cltd
cmp
cmp
test
shrb
fwait
and
lods
jne
mov
adc
inc
fists
movsl
cmp
into
mov
outsl
insb
outsb
pop
add
pop
add
adc
jl
add
addr16
mov
jnp
sbb
dec
addr16
ret
or
mov
pop
jo
mov
push
or
sub
lds
xchg
sbb
dec
mov
out
es
sub
addb
test
mov
push
xor
xorl
xor
mov
push
xor
fnstsw
mov
or
cmp
fidivl
pop
sbb
mov
in
jns
mov
sarb
xchg
or
xor
and
add
idivb
xor
mov
mov
mov
clc
mov
aad
jae
mov
cmc
push
xchg
repz
dec
adc
push
inc
cwtl
and
jge
jnp
les
sub
sarb
test
pushf
mov
movsb
push
btr
ret
push
xchg
out
fsts
fsts
leave
int
mov
inc
cmp
pop
ds
jmp
cmp
sub
hlt
mov
dec
sbb
sub
out
xchg
pop
inc
test
pop
lret
fcmovu
sbb
cld
push
cs
dec
mov
xchg
jg
mov
mov
lahf
pop
add
sbb
pop
mov
test
add
push
addr16
iret
adc
inc
and
push
jo
mov
mov
movsl
fistpl
and
icebp
fmull
mov
xor
and
cltd
jmp
push
add
xchg
jl
jl
push
scas
mov
jge
inc
cmp
ror
bound
adc
add
out
sbb
insl
lods
dec
test
addr16
hlt
and
je
rclb
xchg
out
adc
inc
sbb
fs
lods
aad
push
setl
subb
js
inc
jae
push
scas
cmp
xchg
lret
or
sbb
movsb
in
fwait
test
js
pop
inc
fucom
mov
rcll
jo
jns
icebp
mov
int
in
dec
inc
mov
popw
stc
dec
sbb
jle
es
std
cmp
or
push
frstor
pushf
inc
xor
pop
add
loop
xor
icebp
mov
mov
stos
mov
ds
sub
sub
push
lods
jbe
xor
je
leave
cmp
inc
fildl
test
ds
sub
xchg
or
sub
lret
imul
or
ljmp
push
and
repnz
jo,pt
jecxz
mov
addb
call
in
lret
stos
pop
outsb
popf
out
pop
lcall
adc
inc
pop
jle
scas
fwait
lret
xchg
jecxz
mov
and
stos
and
hlt
adc
dec
cli
shll
mov
lret
ja
xchg
jle
push
int3
pop
sahf
pop
add
mov
dec
outsl
gs
shlb
enter
push
jl
popa
or
cltd
enter
or
int3
aaa
push
jbe
mov
adc
outsb
into
or
mov
pop
mov
xchg
jle
int3
xor
jno
dec
addr16
inc
fdivr
sbb
je
pop
push
addr16
xor
sbb
pop
push
mov
adc
movsb
and
inc
lds
fsubrl
shrl
dec
pushf
sahf
mov
xchg
pop
sub
or
in
cmp
mov
cmp
jae
into
loop
out
popa
call
lds
cmp
loopew
xchg
push
mov
pop
popa
sbb
jne
fsubl
mov
cmp
jle
xchg
and
push
fcom
jl
jmp
loop
sbb
mov
test
sbb
pop
push
xchg
mov
dec
rcrl
lods
rcrb
daa
int
ret
dec
imul
movsl
jecxz
stc
stos
cli
push
sbb
aad
fnstenv
outsl
ret
add
mov
cmp
sbb
rcrb
and
push
movl
insb
and
xchg
les
jl
cli
lods
dec
fnstcw
pop
int
test
xor
out
xlat
movsl
cmpsb
inc
in
xor
sub
add
dec
push
sarb
fnstenv
mov
cmpsb
mov
xor
shl
inc
and
imul
mov
add
int3
in
or
sub
sar
shlb
loope
inc
dec
adc
cltd
pop
sbb
mov
int
cmp
dec
adc
testb
xchg
rcrl
cli
enter
les
pop
daa
sbb
mov
and
mov
or
mov
mov
adc
je
jl
stos
addr16
fsts
and
or
loop
pop
pusha
mov
push
rorb
decb
insb
iret
jle
jg
sub
jb
xlat
xor
cld
insb
les
jbe
sub
lds
sub
mov
sbb
mov
or
les
lea
jecxz
movsl
ret
dec
mov
xchg
or
cmp
mov
push
sahf
testb
push
dec
fisttps
sbb
push
es
push
push
mov
ja
dec
stos
stc
les
pop
push
sub
and
pushf
pusha
sahf
xor
or
bound
add
mov
sub
push
sub
clc
clc
push
mov
pop
lds
pusha
pop
push
push
mov
pop
sahf
or
lea
add
push
push
insb
cmpsb
ret
or
xchg
xchg
arpl
sbb
mov
sbb
scas
push
push
push
sub
sbb
and
sar
and
mov
outsb
xchg
sub
movsl
xchg
mov
inc
lds
test
ja
das
xchg
cwtl
je
cltd
cmp
cmpsb
imul
outsb
mov
adc
jg
stc
pushf
sub
push
shll
xchg
repz
sbb
mov
popa
fistpl
cmp
gs
cmp
push
rcr
dec
movsl
push
inc
push
cmp
inc
cs
pushf
jb
cmp
jo
leave
insl
mov
xor
adc
insl
mov
scas
aad
fiaddl
push
cld
jne
mov
hlt
das
call
fdivrs
test
push
std
lock
mov
push
cmpsl
aam
dec
icebp
rorb
pop
fstpl
aaa
in
xchg
fwait
xchg
mov
shrb
lahf
push
xor
sbb
pop
pop
jmp
pop
push
lods
out
or
xorb
mov
in
adc
add
test
pop
loope
nop
xchg
push
lea
subl
push
leave
and
cmp
popa
jg
dec
add
cld
jb
cwtl
into
xchg
or
mov
inc
push
mov
int
test
pop
loope
mov
inc
fistpll
and
jge
pop
js
mov
in
xor
test
xor
sub
loopne
dec
mov
movsb
mov
fcmovb
movsb
enter
mov
inc
les
cs
ljmp
clc
lds
cli
mov
lahf
sbb
mov
xchg
shrl
jb
sbb
aas
repnz
aad
inc
fcmovbe
test
or
jb
xor
cmp
cli
jecxz
sbb
push
int3
dec
push
loop
jmp
xlat
lods
jge
mov
test
and
jmp
sub
add
bound
int3
xchg
xchg
xor
inc
sbb
lret
out
inc
xchg
inc
popa
or
fwait
xchg
inc
aam
lahf
mov
call
mov
test
dec
jmp
ja
outsl
jg
xor
cwtl
cmp
data16
mov
stos
call
xchg
push
shl
mov
xor
xchg
xor
mov
xchg
pop
test
sub
pop
into
dec
daa
rol
aaa
mov
mov
mov
or
dec
imul
es
mov
xlat
jmp
ret
adc
imul
pop
mov
dec
adc
leave
ror
dec
stc
outsl
pusha
mov
cmp
js
mov
clc
and
add
jle
das
or
xor
add
in
lods
call
mov
ds
fmul
leave
sub
pop
xor
mov
cmp
xor
cld
popa
pop
ja
in
push
push
pop
sar
popl
and
xchg
or
lret
sub
mov
or
aas
xor
jns
popf
adc
cmp
ds
mov
mov
push
xchg
dec
inc
cmpsb
decl
jp
icebp
inc
dec
xchg
push
add
add
push
fidivl
andl
push
lock
mov
dec
push
adc
or
outsb
or
lcall
mov
imul
jno
push
addr16
imul
js
idivl
pop
fdivrl
xchg
das
sbb
lcall
mov
push
sub
cli
imul
cmpsb
imulb
das
lea
mov
mov
andl
les
xor
xor
pop
dec
iret
movl
in
adc
test
sarb
hlt
data16
cli
pop
xrelease
arpl
mov
inc
orb
movsl
int3
adc
rolb
and
xor
aam
fsts
jno
inc
scas
addr16
lahf
pop
in
xchg
fsubr
sub
inc
push
cmp
cmp
xchg
lahf
push
test
add
enter
pop
inc
out
js
mov
xchg
inc
ds
lods
sub
sarl
xor
dec
inc
sub
dec
inc
inc
pushf
test
js
fdivrs
enter
and
in
addr16
mov
lods
enter
xor
cs
and
pop
push
mov
in
pop
sub
mov
adc
aam
scas
mov
insl
int
inc
dec
inc
test
sbb
and
outsl
loop
push
add
adc
sub
rorb
mov
pop
faddl
ss
flds
jp
fisubrl
cmpsl
lret
pushl
or
mov
push
pop
mov
idivb
add
push
mov
push
loopne
rol
add
pop
in
ficoml
or
daa
icebp
push
jne
daa
insb
or
sbb
call
push
ret
mov
or
jns
push
xchg
mov
lea
xor
sbbl
ja
mov
sti
lds
push
fs
add
adc
pop
cmp
daa
inc
es
out
inc
rcr
fsubs
addl
cmp
lret
jecxz
loope
xchg
movsb
cmp
stos
out
fnsave
scas
xor
int
push
or
push
outsl
and
cwtl
leave
cmp
addr16
iret
jge
ss
lret
push
jb
je
mov
lea
push
and
or
mov
imul
push
xchg
loopne
jge
scas
and
lahf
or
sub
dec
clc
or
or
out
mov
outsl
mov
pop
sub
dec
pop
ret
mov
mov
add
js
fbstp
or
arpl
or
fistpll
fistl
jmp
mov
lret
inc
std
popf
adc
sbb
js
inc
out
mov
sub
loope
lods
mov
aam
int3
push
cmp
pop
jb
mov
adc
xchg
dec
outsl
push
xchg
popf
push
jae
loope
icebp
push
addr16
dec
push
xchg
enter
sbb
jae
in
mov
sbb
lret
add
add
and
repz
test
add
push
sbb
cmpsb
inc
fstl
stc
enter
xchg
clc
xchg
mov
pop
fbstp
jge
test
jne
mov
jae
pop
rol
lret
sbb
cmp
xor
push
adc
mov
xor
jne
mov
or
daa
adc
and
rorl
ror
xor
xor
and
sub
test
pop
test
jmp
testb
rolb
cmp
icebp
popfw
pop
fisttpl
mov
mov
pop
popf
popf
into
pop
xor
in
mov
insb
sbb
sub
inc
and
adc
pusha
pop
dec
in
cmp
jecxz
mov
cmpb
inc
push
les
xor
mov
into
push
jo
loop
loopne
ss
jp
sbb
mov
pop
iret
decl
xchg
mov
cmp
jmp
lds
sbb
fmul
out
lods
inc
adc
pop
mov
outsl
stc
imul
mov
jne
xchg
or
cmp
je
addr16
xor
mov
mov
sbb
ljmp
add
and
imul
lcall
sbb
repz
pop
es
add
lret
sbb
and
jae
hlt
sbb
shrl
jbe
dec
dec
iret
pop
inc
xchg
inc
xchg
sbb
aam
lcall
xor
arpl
sbbb
ret
pusha
popa
in
mov
jle
call
loopne
rcl
push
es
in
orl
push
xchg
aas
outsb
add
ss
cld
mov
cmpsb
je
scas
int
in
das
jle
test
push
adc
cmp
lret
filds
lret
in
arpl
leave
mov
cmp
das
mov
out
test
dec
dec
jl
call
mov
bswap
pop
or
pop
hlt
daa
jo
jecxz
std
dec
jnp
in
stos
jno
imul
leave
aam
adc
jl,pt
cs
shll
imul
popf
or
loop
push
lret
add
inc
div
out
jle
mov
addr16
pop
mov
push
aad
jbe
scas
or
sbb
inc
sarb
fldcw
mov
add
cmpsb
call
cmc
mov
jae
std
ja
jnp
in
cmp
jnp
xchg
repz
in
push
push
dec
dec
sbb
fsubrl
into
mov
adc
cmp
icebp
jg
out
lret
cmp
enter
aad
js
in
xor
or
push
je
ret
gs
add
andb
jl
add
pop
push
mov
jge
mov
aam
sub
mov
inc
sbb
xor
fabs
dec
into
es
jae
mov
mov
sarl
outsl
imul
mov
and
mov
arpl
loopne
test
add
cmp
stc
in
sahf
shlb
jb
xor
xchg
jo
inc
stos
jae
sbb
aaa
out
clc
mov
hlt
add
push
add
mov
jecxz
inc
scas
or
pop
addr16
inc
xor
daa
ret
xchg
pop
shrl
enter
sbb
sbb
sub
and
dec
aas
and
push
pop
scas
icebp
out
pushf
pusha
xchg
xor
daa
test
das
mov
inc
xor
ja
fldcw
mov
mov
pop
dec
sub
movsb
mov
mov
dec
shl
add
jns
dec
xchg
lret
lahf
push
or
fs
imul
push
das
add
repnz
enter
jb
xor
and
arpl
mov
pop
sub
cltd
fnstsw
add
sbb
cwtl
mov
out
test
bound
enter
outsb
cmp
inc
in
push
mov
xor
inc
std
call
std
and
inc
sub
xchg
sahf
lock
fidivrl
stos
inc
fisttps
jno
dec
push
mulb
pop
xchg
add
dec
dec
and
push
fimull
mov
xchg
push
xchg
sub
leave
enter
call
cmp
fsubs
pop
pop
push
pop
call
pop
lcall
or
dec
addr16
out
outsl
out
sti
pop
gs
pop
and
fimull
insl
pop
ficoml
lods
mov
mov
stos
lds
push
int3
xchg
jmp
ret
addl
movsb
adc
pop
xchg
outsl
mov
sahf
repz
xchg
xor
mov
add
or
jge
std
jbe
stos
push
adcl
inc
aad
jno
in
push
sub
or
xchg
jge
push
adc
and
fldcw
adc
hlt
je
adc
push
cmp
test
xchg
aaa
out
add
mov
jmp
jae
xchg
sub
inc
jno
xchg
inc
cmp
push
inc
push
lock
or
pop
repz
adc
in
sbb
push
cwtl
test
mov
je
popa
call
or
gs
in
push
into
and
cmpsb
mov
cmp
jns
int
jge
xchg
jecxz
inc
jnp
lcall
jle
scas
int
mov
fs
lcall
fisttpl
xchg
jge
push
jle
sub
mov
scas
call
dec
mov
or
ds
in
push
mov
sub
ficompl
xchg
leave
sbb
div
cmp
dec
mov
cmp
icebp
add
dec
hlt
mov
xchg
dec
sti
cmpsb
stos
sub
dec
inc
xchg
dec
lahf
pusha
mov
jbe
scas
mov
js
je
mov
adc
inc
add
sub
push
sub
lahf
out
jmp
mov
mov
pop
in
or
jae
std
aaa
out
dec
jb
lds
mov
cmp
cmp
add
out
add
xor
pop
xchg
out
or
xor
push
jle
cmpsb
mov
or
jb
dec
ja
add
mov
cmp
mov
testb
stos
and
jnp
mov
adc
jno
push
sub
add
inc
xor
call
nop
or
fcmovb
test
xchg
les
call
inc
dec
insb
imul
and
jmp
mov
in
push
mov
icebp
xor
jle
fsqrt
je
jo
sub
fsub
and
setb
and
push
jmp
enter
add
pop
outsl
inc
lods
xor
iret
fistpll
lahf
arpl
mov
rcll
rcll
push
imul
jmp
out
pop
lret
loopne
mov
mov
fistps
nop
sub
and
jb
xor
mov
sahf
mov
pusha
push
mov
outsb
push
adc
mov
xor
push
cmp
jmp
mov
das
out
sub
xlat
insl
jmp
sub
fbstp
scas
fs
test
nop
adcl
push
mov
or
mov
xlat
cmp
ds
mov
minps
push
lret
jnp
cwtl
into
mov
cld
adc
pop
jp
cmp
dec
jle
out
pop
xor
jns
or
xchg
int3
sub
ret
loop
stos
add
adc
mov
cmp
lock
adc
cmp
mov
fld
push
and
out
ret
jp
or
cmpb
xor
in
fcmove
hlt
pusha
testb
mov
inc
rorb
addl
pusha
push
pusha
inc
ja
add
add
imul
sub
fidivl
jmp
or
or
and
xchg
and
push
jb
push
sbb
mov
jns
push
adc
icebp
movd
movsb
adc
push
push
daa
and
ljmp
sub
scas
out
popf
dec
mov
mov
pop
test
shrl
xchg
lds
adc
jbe
cmp
inc
out
push
jae
xchg
pop
pop
cmp
push
lcall
cli
mov
sub
add
pop
push
pop
cmp
ja
sahf
and
mov
out
sbb
fstpt
jle
dec
rcr
out
flds
or
loope
push
iret
adcl
in
jecxz
xchg
sbb
lahf
test
inc
movsl
xor
jl
lock
gs
and
loop
pop
in
pop
mov
sbb
adc
push
cmp
jge
push
ret
fstl
stc
cmp
fists
push
jg
movsl
jns
and
pop
inc
mov
sub
pushf
push
outsb
dec
mov
fistpl
cli
xchg
add
push
clc
sarb
cmp
test
pop
icebp
popf
xor
fcmovne
jo
ret
aam
int3
hlt
inc
fidivl
stos
addr16
imul
adc
dec
cmp
add
cltd
repz
testl
dec
jmp
ja
pop
ret
ljmp
fisubrl
ljmp
sbb
mov
cld
lods
xor
cmp
mov
movsl
stos
stc
push
xchg
loopne
outsb
fwait
ret
push
inc
mov
sub
shll
xchg
icebp
or
lods
shll
out
jb
fcomps
rol
scas
test
or
cmp
fsubrl
mov
es
and
lret
mov
pop
xchg
pusha
fnclex
cmc
mov
and
push
jbe
mov
mov
xchg
adcb
adc
int3
movsl
push
fwait
push
pop
jle
push
stc
testl
jmp
test
std
aad
jmp
scas
shrl
inc
jl
into
jns
ss
shrb
ficoms
push
dec
sub
ss
call
lahf
pop
dec
xor
clc
jg
mov
add
dec
sub
mov
in
sub
pop
jp
loop
pushf
scas
xchg
std
jle
push
sub
pop
adc
jg
imul
pop
enter
mov
sbb
daa
arpl
pusha
adc
pop
ja
add
mov
cmpsl
maxps
dec
cmp
cwtl
sub
iret
test
inc
mov
xor
lods
or
leave
mov
dec
inc
sub
or
loope
sbb
popa
jl
xlat
push
stc
nop
pop
sahf
fnstenv
cmpsl
mov
les
outsl
movsb
mov
pusha
arpl
dec
mov
lahf
mov
imul
in
sbb
fisubrl
daa
mov
jne
cli
dec
lret
adc
fs
xor
push
mov
insb
dec
std
xchg
mov
and
sbb
xchg
push
inc
and
fs
ficoms
loopne
inc
jne
out
clc
mov
xchg
sbb
and
rorb
stos
test
int
pop
jge
lea
nop
jns
test
push
mov
mov
cmp
jb
pop
fistpll
push
rcrl
aam
cmp
or
jle
xchg
mov
lcall
mov
adc
insl
lret
mov
insb
dec
and
jg
pop
adc
shll
and
addr16
push
subb
data16
popf
aad
and
xchg
fmuls
xchg
lahf
adc
in
sahf
pop
mov
mov
loop
sub
scas
cmpsb
lods
fldt
loop
inc
in
pop
mov
mov
mov
aas
jae
in
mov
jp
mov
cmpsl
stc
fstp
mov
xor
jb
int
fs
mov
adc
adc
jle
test
sti
fdivrs
push
dec
popa
pop
adc
negl
stc
sbb
sbb
mov
sti
ljmp
ja
inc
repnz
shll
xorl
jnp
cmpsb
or
cmp
push
jge
adc
pop
addl
push
jae
or
jecxz
ret
jle
cmpsb
pop
movsl
or
pop
inc
pop
lods
xchg
inc
jne
call
ljmp
dec
add
adc
fstl
mov
jne
mov
push
sbb
pusha
adc
xchg
jnp
loop
or
mov
dec
inc
sahf
cmp
pushf
sub
loope
jl
clc
dec
add
push
data16
xchg
xor
push
jecxz
mov
pop
stos
test
adc
outsb
or
scas
leave
mov
cmp
das
pop
jecxz
mov
mov
aam
xor
dec
or
sbb
and
test
and
pop
lcall
inc
roll
and
push
sbb
push
cmpsl
add
out
mov
sub
cmpsl
andb
xor
les
mov
jl
scas
sub
shlb
cmpsl
xor
aaa
cmpsb
pop
cltd
popf
stc
into
cmpsb
mov
add
test
sbb
mov
fldcw
out
sub
cmc
dec
mov
cmp
test
out
enter
adc
jg
push
push
js
push
test
lcall
nop
popf
dec
cmp
mov
pushf
lods
fldt
add
add
and
std
and
aaa
in
mov
mov
sub
lock
rolb
jb
sbb
into
cmpl
lds
insb
jmp
xchg
addr16
jl
orl
mov
dec
cmpb
jl
in
jne
pop
inc
mov
sub
mov
movb
ret
xchg
jle
xor
bound
addl
mov
call
xor
sub
add
mov
mov
repz
rorb
dec
jbe
addr16
pop
ret
test
mov
and
mov
test
fwait
test
add
xchg
sbb
je
jno
lock
fldcw
ja
pusha
sbb
cs
jae
fisttps
push
test
or
mov
pop
inc
push
out
mov
std
repnz
jg
mov
xlat
cmp
outsl
xor
rorb
icebp
je
scas
pop
and
jecxz
or
jl
adc
arpl
cmpsb
stc
jp
repz
lods
pusha
sub
in
les
sbb
fsubrs
ds
pop
mov
xchg
loopne
and
mov
pusha
iret
adcl
mov
sub
daa
sub
jg
imul
js
mov
xorb
xor
and
aas
leave
pop
xlat
fmuls
adc
movsl
inc
sti
pop
subl
push
ret
xor
jmp
insb
pop
ret
fcoml
adc
test
add
fwait
dec
jmp
and
mov
or
cmpl
cmp
mov
xorb
lret
jo
jmp
adc
dec
xchg
sbb
push
fists
xchg
ja,pt
cmp
add
xchg
stos
sbb
jmp
inc
in
xor
sbb
int
lea
jg
xchg
shll
jns
add
test
ret
xchg
insl
dec
in
mov
scas
data16
mov
fsubr
mov
xor
lret
test
sub
push
or
adc
out
dec
push
sbbl
scas
add
jle
sahf
mov
fwait
mov
sti
mov
js
and
mov
or
ja
leave
fstps
xchg
jmp
gs
loopne
xor
lcall
pop
lret
adc
push
mov
jbe
arpl
xchg
adcb
sbb
aad
jo
xchg
shlb
es
popa
test
cld
es
jbe
pop
in
jg
incb
sbb
mov
and
or
jb
ss
add
pop
loopne
gs
xchg
sti
idivb
or
sbb
sub
pop
std
out
xchg
add
jo
inc
aas
jmp
insb
imul
daa
pop
push
add
shll
iret
xchg
repz
jbe
push
out
dec
jmp
std
cwtl
scas
fsts
daa
pop
js
mov
ret
inc
scas
inc
mov
aaa
mov
shll
mov
jae
jecxz
add
scas
inc
pop
dec
pushf
test
mov
int
mov
mov
pop
cmp
mov
xor
imull
jle
mov
js
lcall
lods
xchg
dec
daa
mov
pop
jae
shl
mov
cmpsb
inc
dec
out
push
data16
mov
mov
inc
pop
xchg
sbb
jbe
pop
insl
xor
jo
fs
push
inc
jne
jbe
fabs
mov
dec
int
mov
mov
call
lret
jae
mov
jbe
pop
sbb
data16
sub
mov
adc
es
test
xchg
sbb
or
xchg
adc
sbb
push
mov
add
mov
pop
or
mov
jnp
fisubl
aam
mov
mov
out
xchg
scas
cmp
mov
mov
mov
lret
add
mov
and
lahf
or
push
test
jns
mov
and
inc
and
je
out
xchg
mov
mov
and
cmp
lret
mov
dec
in
add
cmp
inc
loope
subl
adc
scas
outsb
loop
adc
sbb
movsl
popa
sub
push
lds
cmp
pop
inc
frstor
mov
sbb
adc
push
cmp
aam
xchg
fisttpl
arpl
std
xor
cld
push
sbb
out
mov
in
mov
rorl
or
in
adc
mov
aaa
pop
fisttps
sbb
xchg
sbbl
xlat
and
pushf
leave
xchg
jecxz
xor
pushf
pushf
mov
and
adc
sub
addr16
scas
lret
pushf
jge
add
pop
js,pt
sub
aas
nop
push
shr
mov
cmp
or
testl
enter
test
ror
rcrl
lahf
movsb
jbe
ficoml
sub
add
inc
les
in
lcall
mov
xor
cltd
xor
dec
mov
xchg
xchg
dec
adc
sbb
repz
mov
pusha
fidivrl
pcmpgtb
call
into
clc
inc
fsts
xchg
test
mov
stos
sub
fstpl
ror
sub
mov
cmp
cmp
xor
cwtl
les
sub
and
and
leave
out
loopne
sbb
mov
dec
sahf
sub
jbe
cmpsl
xor
xchg
roll
aaa
lock
adc
daa
mov
in
cmp
outsb
call
movsb
mov
cmp
in
mov
xchg
or
jp
and
aam
adc
jmp
pop
in
fwait
xchg
jnp
aam
push
mov
imul
loop
fmuls
sub
push
xchg
pop
or
stc
add
psubw
inc
xor
lea
mov
inc
test
popf
test
mov
xor
add
jae
cmpsb
iret
bnd
or
push
lds
insl
fs
jle
rol
or
add
mov
pop
lahf
enter
rolb
xor
push
insl
es
orb
and
bound
popa
jbe
xchg
gs
and
into
fwait
dec
lcall
ret
jno
xchg
int3
or
outsb
es
mov
mov
sub
scas
lods
push
outsl
scas
shl
int3
mov
jno
fisubs
pop
push
out
mov
rcrl
lret
mov
test
rcll
pop
bound
cli
jbe
mov
cs
pop
xorl
lock
sub
fwait
movsl
jne
jno
movsw
cs
ret
out
fwait
jo
shll
in
dec
lods
mov
or
dec
mov
fnstsw
cmpsb
in
lods
lcall
repnz
aad
xchg
or
cs
push
pop
dec
cmp
fwait
les
icebp
cmpsb
mov
mov
cwtl
shrl
je
mov
jecxz
or
mov
dec
jb
push
out
jmp
or
ficompl
pop
add
mov
jne
lods
ret
adc
jae
movsb
xor
cmp
enter
inc
cmpsb
sbb
xchg
test
sub
cld
lcall
jns
pop
sub
or
pop
lret
lret
cltd
movb
sbb
out
push
out
fstpl
sub
stos
pushw
push
jg
add
sahf
mov
ret
pop
and
push
shlb
jmp
cmp
jmp
pop
mov
mov
add
daa
out
shll
adc
pop
adc
hlt
sahf
jecxz
push
mull
jae
in
mov
sbb
arpl
cli
ds
xchg
ret
adc
stc
mov
test
jle
pushf
adc
cld
adc
push
outsb
mov
arpl
pushf
sbb
sbb
xchg
mov
es
push
xchg
jle
push
mov
out
test
pop
xlat
je
xor
sti
inc
popa
in
mov
mov
add
jne
fisubrl
jle
ficompl
imul
in
mov
mov
xchg
dec
add
jne
dec
mov
pop
popf
mov
cmc
dec
mov
aas
adc
sbb
sbb
add
out
xor
sbbl
jbe
inc
outsl
pop
sub
pushf
sub
mov
aas
cmp
jno
gs
loope
inc
pushl
rolb
sbb
loop
sti
ss
aad
ror
ds
adc
xchg
std
jle
add
movsl
mov
out
ret
mov
mov
sti
movsl
add
add
cmp
dec
adc
out
lahf
clc
jb
testl
ret
jae
stos
adc
sbb
push
xor
fs
jno
jno
das
rolb
scas
xor
stc
inc
xor
or
sbb
cmc
dec
mov
movsl
dec
icebp
fwait
xchg
loope
loopne
jecxz
or
jp
sbb
cmpsb
cmpsb
mov
xor
or
xchg
xchg
leave
ja
pushf
in
xchg
repnz
add
jb
mov
xor
fdivs
or
imul
lcall
in
sbb
fwait
outsb
and
adc
ret
insb
mov
pop
sbb
sahf
nop
inc
mov
xchg
add
fwait
imul
push
sbb
sub
mov
sub
cmp
sub
jp
inc
inc
out
cld
clc
add
loop
mov
mov
subl
pop
cmp
sbb
int3
sti
add
adc
stos
pop
add
mov
inc
test
lods
pushf
fisubs
addb
pop
dec
scas
testl
adc
imul
mov
fisttps
lret
jae
mov
ds
pop
cld
loope
sub
lret
cwtl
mov
lret
std
lods
mov
fldenv
xor
and
pop
or
adc
jns
in
mov
test
cmpb
dec
pop
jecxz
aad
push
pop
sti
pushf
int3
sti
mov
popa
loope
dec
xchg
mov
add
xchg
in
fists
shll
xchg
addr16
lds
addb
jbe
mov
andl
std
mov
dec
les
push
adcb
dec
adc
loopne
sub
add
push
int
mov
push
sbb
decl
adc
adc
dec
pop
add
push
pop
cmpsb
outsb
stos
shr
fsub
jb
adcl
dec
mull
movsb
andl
std
fistpl
inc
test
xor
outsb
sar
test
test
xchg
inc
mov
fsubs
rclb
cmc
mov
es
test
xor
jb
outsb
pop
adc
push
test
adc
cmp
jb
adc
sbb
push
xor
jbe
imul
rcll
xchg
pushf
xor
mov
pop
dec
jns
lods
and
ret
sub
push
jl
mov
ljmp
jmp
mov
ss
xchg
sbb
push
or
xlat
insb
mov
mov
jno
xchg
cmp
movsl
cld
adc
aaa
addl
faddl
cmc
enter
dec
pop
inc
add
rcll
jo
into
jns
scas
orl
ljmp
lods
jp
das
hlt
add
ret
push
inc
sub
test
fiadds
pop
popf
into
mov
aaa
or
mov
or
xor
test
test
xchg
aaa
inc
stc
cmpsb
sbb
push
inc
aam
xlat
adc
xor
jmp
icebp
fnstsw
sti
xchg
out
mov
insl
inc
xchg
stos
inc
xlat
cmpsl
adc
cltd
jbe
push
dec
mov
sub
das
or
lds
in
je
je
and
rcrl
pop
xor
movsb
inc
mov
mov
hlt
icebp
pop
push
mov
mov
lret
cmp
das
notb
out
xor
js
or
or
pop
loop
jnp
pop
sub
push
cmp
dec
jne
pop
pusha
mov
or
ds
jbe
sbb
xchg
cmp
scas
cmpsl
xlat
sub
fstps
sub
xor
shll
movsl
fsubl
push
subb
ret
add
push
pop
out
and
or
jecxz
mov
xchg
cmc
aam
jmp
ja
iret
lock
mov
loope
pop
sbb
cltd
xchg
inc
pop
addr16
inc
into
xchg
jg
aam
loopne
mov
dec
mov
je
lret
pop
testb
jl
ja
cmp
call
inc
mov
push
movsl
mov
mov
iret
add
in
dec
pop
dec
and
jmp
lcall
dec
int3
cmc
xor
daa
adc
sub
loopne
jp
out
out
aaa
inc
popf
fstpl
stos
jnp
sahf
sbb
cli
push
les
xor
fcompl
cmp
inc
jae
or
sahf
fsub
sbb
cmp
xchg
sarl
xchg
mov
mov
adc
add
pop
fldt
les
push
mov
mov
jns
push
cmp
cmp
mov
mov
pop
int3
lea
out
fiaddl
xchg
loope
mov
dec
push
loope
xchg
mov
cld
leave
shrl
cmp
mov
and
aaa
cs
cmpsl
push
adc
mov
movsl
out
out
pop
xorb
sub
sarb
pop
and
push
nop
fstpt
pushf
mov
mov
insb
andb
xchg
or
pop
sti
pop
mov
jnp
pop
jge
lods
mov
jl
jecxz
clc
pop
loope
push
out
push
fdivr
addr16
xchg
fisubs
lods
jnp
mov
jg
jmp
dec
jbe
scas
leave
sahf
xchg
xor
mov
sbb
rcll
inc
enter
mov
xchg
popa
out
mov
out
mov
and
insl
push
stos
cmp
cmp
scas
cmpsb
and
lds
jns
inc
mov
addr16
gs
fisubl
or
push
xchg
push
test
testl
movsl
out
ret
mov
fbld
push
test
aad
jb
sbb
xor
ftst
les
dec
loopne
adc
ds
xchg
mov
mov
cltd
fisubs
shrl
stos
xchg
dec
mov
shufps
inc
icebp
and
arpl
test
in
jno
arpl
sbb
dec
xchg
mov
xrelease
rol
sti
ficoms
sbb
sbb
sub
sub
leave
add
cmp
sub
mov
inc
in
test
fisubs
sub
lock
jmp
addl
fidivrs
xchg
out
and
pop
mov
rcl
filds
mov
sarb
out
xor
dec
cmc
ljmp
dec
sub
and
dec
lret
fimull
fimull
add
sbb
fildl
cmpl
lcall
mov
pop
and
fwait
xchg
push
fdiv
and
sahf
and
fcmovne
jmp
pusha
sbb
lds
lods
and
adc
mov
mov
repnz
loop
or
ror
add
addr16
fdiv
pop
outsl
cmp
mov
adc
sbb
pop
jecxz
inc
xorl
sbb
fdivp
mov
cmp
jle
out
mov
mov
push
or
cmp
and
fisttpl
mov
jg
call
scas
pop
push
jecxz
pop
lcall
and
inc
shlb
shll
add
gs
stos
mov
int3
push
sbb
cwtl
adc
mov
or
lea
mov
inc
std
fmuls
push
cmp
pop
jo
enter
ret
lods
and
dec
fidivl
pop
lds
mov
loopne
adc
addr16
js
cli
movsb
sbb
stc
pop
testl
adc
mov
shll
mov
ret
inc
mov
scas
sarb
push
imul
or
rorb
sti
int
push
cmp
add
test
fwait
dec
dec
cmc
and
xor
cmc
jne
rep
lods
mov
out
sub
rorb
lret
mov
popf
and
dec
lcall
jno
ljmp
dec
hlt
sbbb
cs
push
dec
lahf
stos
andb
xlat
adc
inc
fwait
in
jl
inc
cmpsb
scas
mov
sub
mov
ret
push
and
insb
iret
jmp
fidivrs
fsubr
push
mov
jne
xor
mov
notl
sti
lret
cwtl
stos
xor
andb
insl
jae
mov
cmp
cmp
hlt
xchg
jl
mov
insl
fwait
mov
test
pop
in
pop
xchg
clc
jne
add
push
lret
cli
int
test
xchg
pop
stos
sub
cltd
loope
xlat
mov
add
xchg
cmp
test
sub
mov
push
into
leave
orb
cmpsl
addr16
insl
add
or
mov
movswl
popf
test
cmp
enter
push
inc
out
xchg
mov
xor
repnz
cmc
sarl
or
push
es
fdivs
mov
ljmp
sbb
nop
mov
je
add
cs
std
sbbb
les
xor
test
pop
lods
xor
loop
pop
shl
push
adc
stos
mov
aad
jb
mov
popl
xor
mov
adc
lods
into
jb
pop
sub
mov
pushf
xchg
sbb
imul
les
sub
mov
scas
xchg
inc
out
mov
sub
cmp
clc
out
inc
popw
dec
icebp
out
dec
xchg
out
leave
push
test
sub
movsl
sbb
push
push
int
xlat
jo
out
fs
adc
pop
cmc
xor
stos
in
ss
jb
or
out
das
test
mov
neg
mov
inc
lret
pop
sub
or
xorl
dec
mov
sbb
in
adc
or
enter
fcomi
xchg
pop
push
adc
iret
adc
lcall
and
pushf
xor
mov
je
imul
mull
mov
xchg
xor
iret
sbb
or
mov
loop
or
fsubl
push
cltd
adc
push
jno
das
out
lahf
mov
adc
and
imul
inc
xor
mov
fidivs
mov
push
add
sub
jno
fnstenv
enter
and
lea
dec
sub
mov
in
iret
test
push
shrb
xchg
fmuls
pop
inc
adc
xchg
stc
add
sbb
inc
add
clc
xbegin
jo
adc
insl
mov
js
dec
mov
xchg
ror
cmp
jnp
mov
adc
mov
gs
add
iret
sahf
sbb
incl
ljmp
cmc
jmp
lcall
xor
pusha
or
repz
and
test
xchg
out
mov
inc
inc
sub
lea
jne
mov
mov
sub
fwait
decb
js
push
inc
ljmp
dec
orb
sbb
cmp
pop
ret
jbe
or
mov
push
sub
popa
andl
and
ret
std
sub
mov
or
sahf
loope
dec
aad
icebp
subb
das
ds
dec
dec
cmp
push
xchg
fstpl
sub
push
cld
fimull
mov
mov
pop
fadds
and
rorl
es
cmp
push
mov
flds
inc
xor
add
mov
sub
pop
adc
out
jl
lret
fsts
or
jge
out
or
nop
inc
sbb
inc
lods
jle
jmp
mov
or
shr
fs
jg
sahf
js
leave
mov
jbe
and
not
movsl
ss
mov
icebp
ds
and
mov
pop
ss
fwait
adc
mov
cmp
loop
push
and
iret
fmulp
test
out
scas
jno
mov
mov
int
mov
nop
faddl
xor
icebp
push
cmpsl
xchg
or
push
push
stos
jp
mov
outsl
sahf
iret
and
imul
shl
push
lahf
daa
mov
jno
mov
pop
push
mov
jmp
push
pushf
stos
call
in
xchg
arpl
movsl
xlat
and
inc
fsubl
fisubrs
dec
pop
shrb
test
aad
leave
sub
push
daa
pop
push
jae
andl
or
fidivrs
out
sub
rcrl
sbb
sub
stos
insb
pop
mov
insb
dec
in
hlt
pop
stc
cmp
jl
jp
ja
das
cmp
dec
aas
ja
gs
imul
out
ffreep
ret
mov
mov
pop
cmp
imul
push
xchg
mov
mov
test
push
adc
mov
out
jbe
mov
clc
scas
mov
loopne
mov
loope
mov
sub
setge
ret
std
adc
sbb
outsl
pop
outsl
push
test
sub
pop
and
lods
stos
fs
pusha
push
dec
arpl
negl
test
cmp
outsl
stc
out
mov
sbb
js
cmp
nop
ret
lods
mov
movsb
pop
mov
xchg
js
stos
xlat
dec
pushf
sub
push
popf
cwtl
inc
adc
sub
repz
shlb
sub
push
rorl
test
dec
dec
leave
push
ljmp
cmp
jmp
rcll
lea
mov
dec
shrl
inc
paddd
cmp
pop
fbld
aaa
xor
mov
ret
mov
inc
mov
cs
dec
cs
shll
hlt
in
mov
ret
fsubr
test
pop
jmp
je
test
jae
cmp
or
mov
mov
mov
fsubs
mov
sbb
scas
fidivrs
mov
lea
xor
ret
adc
js
inc
pop
or
js
andb
pop
ret
xchg
popfw
add
adc
scas
pop
addr16
add
dec
in
sub
mov
ja
popf
cmp
cld
fs
fisubrs
popf
in
mov
sbb
lds
jae
pop
or
xchg
mov
jp
faddl
mov
call
pop
cmp
ret
fs
or
jnp
push
xor
mov
push
cmp
js
jmp
xor
rolb
data16
dec
xor
adc
sub
mov
mov
jecxz
mov
cli
mov
cmp
or
lds
jae
test
pop
shl
adc
addr16
imul
out
xor
sbb
addl
push
out
pop
cmpb
mov
xchg
and
sbb
sbb
xchg
add
stc
jl
xor
jne
les
ficompl
cwtl
add
sub
inc
xchg
inc
fwait
pusha
and
test
xor
ss
pusha
adc
int
sub
lahf
mov
leave
orb
call
lods
cltd
fs
out
mov
es
push
xor
pop
inc
and
or
jne
js
aaa
movsl
lods
test
push
das
hlt
and
xchg
loope
add
fisubrl
ljmp
xchg
mov
jg
dec
testb
push
pop
jge
pop
xchg
pushf
jg
xlat
andb
sbb
out
orl
leave
adcb
sbb
jecxz
mov
loope
roll
pop
sbb
sub
fwait
xchg
jecxz
mov
adc
or
lods
call
leave
loope
sub
adc
int
outsl
sub
jl
mov
sub
insb
nop
iret
sbb
mov
mov
push
test
mov
pop
arpl
arpl
incb
frstor
sub
pusha
icebp
push
call
xchg
jl
shlb
cmp
dec
rcll
or
movsb
sub
push
movsb
or
cwtl
mov
dec
pop
dec
add
sar
adc
pop
mov
movsl
push
xchg
dec
cmp
jge
pop
cmp
shlb
or
fwait
mov
cld
push
xor
push
inc
std
push
lahf
mov
int3
adc
daa
and
inc
push
dec
in
or
insb
dec
shr
cwtl
pushw
add
repnz
mov
sub
addr16
mov
enter
rcrl
fisubl
add
mov
test
es
imul
inc
adc
add
fwait
outsl
cmpsl
lods
stc
mov
jns
or
sbb
push
enter
push
mov
and
push
push
jae
sbb
mov
or
rolb
aam
fldl
scas
mov
cmp
dec
jl
mov
fsubrs
pop
pop
imul
sti
push
pop
cmpsb
test
xor
repz
add
fstpl
icebp
jecxz
mov
movsl
or
pop
and
fstps
or
mov
ficoml
fcoms
sub
stos
mov
inc
xchg
push
xor
imull
imul
dec
fstl
lods
lret
call
lahf
and
xchg
and
mov
pusha
mov
scas
mov
nop
cmp
jge
jmp
inc
adc
pop
aad
pop
clc
loope
xchg
sbb
dec
mov
push
push
mov
or
mov
nop
mov
testb
popa
fstpl
mov
enter
pop
push
jp
mov
in
mov
inc
dec
nop
aad
jnp
es
ficomps
mov
popf
inc
mov
cld
sahf
fwait
push
pusha
lret
inc
jge
popf
ja
cltd
jnp
into
sub
jp
shlb
fldenv
mov
jl
mov
pop
test
xlat
inc
push
sahf
or
repnz
jecxz
mov
xchg
outsl
pop
inc
jmp
or
inc
and
loop
sbb
or
rolb
outsb
jno
mov
shll
push
dec
sahf
lret
imul
stos
movsb
adc
scas
out
ret
out
roll
stos
test
pusha
ds
ds
inc
pop
pop
stc
cmc
add
fisubrs
int3
into
push
scas
inc
out
mov
mov
mov
jle
fbld
ret
push
xor
jo
xor
xlat
test
xchg
push
jne
push
dec
or
push
stc
popa
shr
cltd
cwtl
jae
mov
and
gs
addr16
xchg
mov
push
icebp
jae
scas
loopne
cmp
push
xor
jp
mov
in
pop
clc
loope
xchg
das
arpl
mov
mov
mov
mov
scas
jnp
push
sub
imul
xchg
shll
or
add
lods
notb
stos
mov
jmp
out
fmull
popa
or
xor
jmp
lock
stos
rorb
sti
lret
fnstenv
sti
sbb
push
lret
push
bound
rol
clc
and
sub
mov
cmpsb
hlt
cmp
push
scas
sub
rcl
stos
inc
mov
mov
test
add
lahf
mov
iret
stc
adc
shlb
scas
adc
fisttpl
add
cmp
notb
cli
inc
repz
jae
sub
movsb
push
lea
and
ds
addr16
ret
push
cltd
shlb
jns
out
das
and
pop
sub
inc
cmpsl
mov
bound
adc
lret
push
aaa
ja
sahf
push
adc
fildll
jb
push
jne
or
test
in
int3
and
mov
jo
jne
xlat
and
sahf
rcr
addl
arpl
or
push
scas
or
cs
cmp
push
pushf
mov
divb
push
mov
jp
in
pushf
lods
lret
adc
pop
mov
gs
sbb
push
hlt
nop
out
sbb
dec
outsl
nop
xor
sbb
xchg
mov
movsl
jns
clc
adc
add
push
lcall
popa
dec
mov
int
xor
mov
inc
mov
xor
test
jbe
jmp
movsl
jns
dec
xchg
and
jle
sub
xchg
mov
add
pop
test
cmp
jmp
rorb
lds
es
faddp
cmp
xor
pop
and
jne
stc
int
cmp
fistps
add
lcall
dec
ja
inc
int
mov
jns
out
jmp
inc
aaa
jns
es
add
sub
mov
test
stc
repz
test
ret
jl
cmp
enter
cmp
mov
xor
xchg
clc
outsb
xchg
sub
add
imul
aas
scas
sbb
data16
sub
mov
das
fs
imul
cmp
push
test
xchg
mov
xchg
mov
inc
and
sub
mov
mov
es
inc
aad
xchg
repnz
jge
cmp
lret
pop
or
movsb
pop
push
mov
insl
cli
lcall
data16
add
jo,pt
ret
sbb
fwait
inc
into
ret
mov
mov
repz
stc
mov
cmp
loop
jbe
dec
lret
add
inc
sbb
and
pop
jmp
mov
mov
or
inc
push
sti
loopne
bound
mov
sub
aam
cmp
xchg
daa
and
adc
bound
adc
loop
cmpsl
mov
outsl
push
ucomiss
xchg
push
add
jbe
dec
inc
imul
xor
jmp
add
mov
cmp
adc
push
push
bound
andl
inc
jb
test
test
pop
push
cmp
lods
loopne
push
xchg
inc
lcall
test
out
stos
cmpsl
outsb
adc
jecxz
lahf
jns
std
pop
movsb
jge
and
dec
sbb
gs
cmp
in
stos
mov
addb
movl
fcmovb
pop
cs
shl
js
aas
xlat
fldl
jecxz
test
out
pop
xor
daa
ja
fs
popa
and
mov
bound
mov
jne
dec
out
xor
pop
jo
dec
imul
mov
and
in
jb,pn
xchg
and
scas
jle
cmp
mov
cld
pop
push
dec
mov
ljmp
subl
xor
orl
test
popf
les
movsl
in
pop
das
call
fstpl
lret
jno
jb
push
sbb
cmpsb
add
sbb
jge
pop
shrl
dec
lods
dec
fdivrs
xchg
lahf
xchg
xchg
jg
jno
out
mov
xchg
in
lds
push
lods
dec
xor
loopne
inc
aad
mov
jmp
adc
in
imul
dec
fcoms
aas
add
les
sub
xor
adc
andl
fsubl
mov
scas
jne
fwait
pop
iret
ret
aas
and
add
popf
inc
inc
jo
xchg
pop
sbb
jns
push
fidivrs
je
mov
and
jge
movsb
test
or
jmp
dec
paddb
inc
mov
add
jns
xor
sbb
cmp
lret
jae
inc
inc
repnz
outsl
sbb
leave
jae
fidivs
mov
movsl
push
ret
std
and
ret
sub
inc
fstps
adc
stc
sub
pop
mov
lods
mov
dec
iret
movl
pop
adc
pop
sbb
enter
scas
test
mov
popf
pop
or
jg
mov
push
sbb
outsl
xchg
jg
leave
xchg
inc
rsqrtps
das
std
add
add
arpl
xchg
push
test
imul
adc
jno
in
js
push
and
xor
in
mov
call
jge
movsb
scas
mov
dec
sbb
aad
js
imul
lods
rolb
dec
push
les
adc
jb
pop
test
adc
adc
test
pop
xchg
ret
in
dec
lahf
cld
mov
mov
popa
fiadds
xor
mov
insb
pop
mov
out
mulb
stos
mull
jo
mov
sarl
push
std
dec
jbe
mov
fadd
xchg
sbb
int
aaa
test
mov
push
sbb
jo
filds
mov
das
or
jbe
inc
repnz
stc
push
stos
out
dec
lock
adc
sahf
in
adc
jnp
subl
sub
test
bound
lahf
filds
push
andl
sbb
arpl
add
mov
rcrl
inc
xlat
out
dec
iret
pop
rolb
jne
xor
push
leave
mov
jp
lcall
xchg
je
loopne
cmp
pop
pop
loop
inc
xchg
mov
jecxz
push
loop
out
cmpsb
jle
cli
xor
push
shll
addr16
aad
sbb
mov
iret
in
cmp
test
push
inc
mov
mov
cltd
pop
stc
insl
cltd
mov
adc
xor
ja
inc
or
adc
adc
xor
or
sub
sub
push
jo
dec
jg
pushf
inc
cmp
adc
dec
cld
mov
stos
insl
xchg
xor
jno
inc
das
adc
leave
jl
add
xchg
je
sub
outsl
insl
clc
mov
push
lahf
lods
jmp
imul
adc
pop
mov
stc
int3
movsl
nop
notb
add
push
add
insb
inc
leave
and
ljmp
lds
jne
sbb
jecxz
js
test
sarl
inc
push
dec
and
lret
xchg
cmp
movsl
cmpsl
sub
jmp
add
call
movsl
xorl
mov
push
call
dec
jo
fisubl
psubsb
or
nop
cmp
popf
scas
enter
jmp
xchg
xor
fmull
mov
pop
jmp
jns
push
call
sahf
mov
add
test
adc
nop
popf
loop
stos
or
or
jecxz
and
and
xor
enter
mov
add
push
gs
pop
aad
out
popa
test
out
pop
jp
call
add
ds
cwtl
dec
sbb
adc
inc
shll
call
push
lret
int
scas
std
cmc
xor
sub
das
gs
stos
jmp
xchg
leave
pop
pop
adc
ret
in
push
out
pop
imul
cmp
stos
xchg
push
aad
hlt
adc
push
adc
and
imul
pop
sti
gs
jp
sub
xor
lea
dec
int
imulb
adc
mov
push
adc
fnsave
pusha
mov
push
cmpsl
test
or
xchg
ss
pop
fisttpll
outsl
jbe
and
mov
dec
sbb
js
mov
mov
or
call
bound
mov
cmp
jecxz
add
or
pop
adcl
mov
pop
cmp
mov
js
sbb
push
xlat
adc
popa
shll
push
rcrl
nop
inc
out
adc
xor
mov
aam
xor
outsb
cmp
sub
shrb
stos
jp
mov
jp
xor
xor
out
cmc
push
shr
enter
out
jge
ds
mov
repz
cmc
mov
push
int
push
xor
imull
movsb
jno
roll
pop
iret
jle
mov
pop
jnp
je
fcomp
int3
dec
add
or
xchg
int3
stc
jo
xor
ljmp
mov
push
mov
pusha
push
xchg
pop
pop
pop
scas
sbb
push
dec
mov
stos
lret
inc
pop
push
repz
jno
sbb
inc
stos
add
xchg
es
out
test
sbb
push
pop
mov
rcrl
cltd
pop
jmp
out
in
insb
pushl
push
addb
jmp
ds
mov
push
insb
daa
pushf
mov
decb
fidivs
popf
ja
and
xlat
adc
add
hlt
or
popf
fstps
scas
hlt
roll
pop
mov
mov
adc
mov
jmp
js
sub
mov
addr16
js
pushf
or
cmp
int
sbb
mov
or
sti
scas
sti
int
aad
jns
push
fdivrl
outsb
inc
mov
xlat
xchg
sub
adc
pop
repnz
cmp
jno
roll
fst
popf
xor
sti
mov
lcall
sub
mov
mov
add
mov
push
aam
push
or
pop
or
ret
les
and
adc
dec
aas
jnp
movsl
cmp
cmc
lods
jbe
mov
fdivrl
lret
pop
dec
out
inc
iret
adc
outsl
push
les
pushf
adc
lahf
dec
fwait
int3
lret
fcoms
mov
mov
pop
push
push
and
fists
jl
xchg
ds
jne
or
addr16
fwait
cmp
stc
jmp
jb
xchg
test
mov
inc
or
sbb
push
add
push
out
dec
or
mov
addr16
xor
je
xchg
xchg
bound
inc
cld
popa
push
data16
repz
test
imulb
mov
pop
hlt
push
int3
cltd
fnstcw
shr
sub
movsl
mov
pop
sbb
mov
imul
imul
dec
mov
adc
xchg
push
int
xor
inc
ficoms
les
add
xchg
and
int
mov
testb
sub
mov
repnz
leave
pop
dec
gs
cmp
mov
cmc
push
lret
arpl
pop
imul
dec
scas
cwtl
insb
lret
dec
mov
mov
addr16
in
mov
loop
push
xlat
lcall
data16
imull
fidivs
das
movsl
test
dec
lds
shrb
inc
lret
mov
fsub
pop
in
push
repnz
adc
mov
cmp
mov
leave
div
out
sbb
sub
daa
dec
mov
add
jo
mov
out
jno
xabort
or
or
or
push
popa
sahf
aaa
cld
std
jbe
in
cld
mov
iret
xlat
push
je
stos
push
xchg
gs
out
inc
inc
inc
adc
aaa
pop
add
mov
push
outsl
or
pop
imul
dec
ja
popaw
lock
pop
mov
lret
popf
mov
jnp
cmp
dec
pop
cmpsb
xchg
xlat
or
jnp
sbb
insb
jb
pop
inc
mov
mov
aaa
xchg
adc
cmp
adc
push
stos
ss
push
call
fbstp
imul
sti
push
adc
shll
aas
jne
add
dec
sbb
test
shlb
dec
imul
popa
std
outsl
sub
das
in
fsubl
lock
mov
pop
out
ljmp
sub
addr16
lret
std
mov
lret
shll
mov
or
clc
mov
jl
test
rcl
or
jmp
aas
out
imul
and
jmp
btc
adc
icebp
dec
in
lahf
push
and
jp
adc
out
xor
dec
mov
adc
sbb
scas
push
xchg
daa
aad
or
xchg
jae
push
dec
sub
imulb
jnp
mov
mov
addl
shll
gs
xchg
hlt
push
pushf
dec
push
clc
mov
cmp
ja
hlt
das
inc
ljmp
test
mov
pop
dec
ret
ret
fisttpll
pop
je
mov
mov
jbe
mov
je
sub
out
pop
cmp
push
mov
sbb
cltd
inc
iret
aad
jle
and
lock
test
and
or
push
or
dec
ja
fstpl
xchg
sahf
sbb
dec
cmpsl
out
add
iret
gs
xor
adc
ljmp
pop
into
aas
cmp
je
sub
ret
rorb
or
sub
xchg
popa
fiaddl
insl
dec
sbb
push
xchg
inc
out
push
dec
divb
or
daa
pushf
insl
aam
test
icebp
insb
loop
inc
cmp
sahf
in
jp
and
jae
lret
xor
pop
sbb
jns
or
pop
and
sub
push
jno
in
shrb
push
clc
xchg
adc
lock
les
test
div
dec
aad
mull
push
pop
push
je
icebp
js
sbb
int
pop
stos
and
add
sbb
push
mov
sbb
cld
ja
jmp
sub
xchg
arpl
jae
rorl
add
bound
sbb
mov
repz
pop
out
sub
mov
in
popf
or
and
iret
sahf
test
mov
mov
fxch
or
mov
cmpsl
ja
pop
inc
push
scas
add
mov
dec
sbb
loopne
ficomps
mov
subb
cmp
roll
pop
stos
ds
sbb
jne
and
mov
mov
push
dec
push
sbb
lcall
mov
xor
rol
and
adc
push
jnp
pop
add
leave
dec
in
mov
pop
ret
out
adc
lds
loope
mov
mov
lods
pop
js
cwtl
pop
jle
ds
and
add
add
fdivrl
mov
dec
inc
sub
cmp
xor
mov
xor
jecxz
cld
in
add
dec
std
xchg
add
icebp
mov
iret
adcb
ret
out
ss
mov
les
and
jnp
shll
adc
dec
rclb
mov
lods
push
xchg
xchg
rolb
das
enter
fistpl
icebp
mov
mov
push
inc
adc
mov
pop
sbb
dec
fwait
xchg
mov
jnp
icebp
sbb
xchg
call
jecxz
jg
stos
popf
cwtl
movb
xchg
xlat
mov
lea
fdivs
fdivrs
cld
mov
mov
xor
inc
push
test
sbb
addr16
loopne
jmp
lds
push
mov
rorb
lret
dec
dec
jae
mov
int
fisttpll
out
movsb
add
mov
sbb
insl
sub
popf
insl
and
into
cmp
fnstsw
jl
pop
lahf
fwait
xlat
adc
and
outsl
add
cld
xor
shrb
or
clc
lock
out
cld
ret
adc
aas
das
push
dec
cwtl
data16
in
mov
inc
xorl
ds
out
jbe
es
sarb
push
adc
push
pop
inc
popf
ffree
jl
rol
adc
and
rclb
adc
cmp
enter
jbe
pop
xchg
or
jecxz
int
hlt
xchg
jbe
cmpsb
jno
insb
sti
shlb
push
and
sbb
mov
test
aam
cwtl
inc
pusha
in
ret
pop
sarl
mov
cmp
insb
out
sub
aaa
enter
lahf
in
loope
aas
sub
shlb
jbe
or
out
push
sub
sbb
popa
rol
lahf
loop
jmp
test
sahf
mov
mov
enter
mov
in
dec
mov
jb
xchg
mov
or
cmpsl
pop
test
iret
push
xchg
cwtl
lods
arpl
out
ss
cli
lret
mov
jno
mov
insb
outsb
mov
aaa
xor
push
sbb
mov
add
mov
enter
mov
scas
shlb
sbb
mov
cmc
lea
or
frstor
xchg
addr16
dec
jp
jb
push
fcom
push
pop
mov
fwait
popa
pop
mov
sub
imul
xor
dec
daa
clc
or
les
mov
pop
or
popa
popa
pop
inc
pop
or
mov
pushf
dec
fbstp
fwait
subl
or
arpl
sub
mov
lret
or
jnp
repnz
or
pop
stos
jg
ret
fs
pop
jg
lods
cmp
xchg
mov
fcomp
mov
insl
xchg
push
add
fwait
vrndscalepd
push
mov
mov
xchg
push
cmp
cmp
xlat
ds
mov
mov
push
mov
xchg
xor
jb
mov
xchg
cmp
add
out
jecxz
xor
sar
mov
in
xor
sbb
sbb
popf
push
stc
or
das
aaa
lahf
stos
cld
icebp
xchg
sti
stc
jb
bound
jno
loope
xor
mov
out
xchg
mov
stos
pusha
fwait
hlt
andb
xchg
cmc
inc
jns
push
adc
out
loope
loop
stos
add
or
cmpsl
xchg
and
adc
std
neg
or
sbb
mov
push
lret
popf
stos
jb
add
cmp
inc
loope
mov
leave
pop
pop
push
xchg
pushf
movsbl
ja
lea
cmp
shll
inc
adc
pushf
rcll
mov
jno
xchg
cmp
arpl
rolb
mov
sahf
fidivrl
mulb
mov
lret
mov
cmp
not
sbb
int3
mov
mov
adc
jecxz
lahf
pushf
pop
pop
sbb
pop
decb
sub
push
push
jb
into
dec
adc
mov
jbe
mov
cmp
cmp
andl
stos
jg
out
rcl
mov
ror
outsb
sbb
mov
inc
outsb
inc
mov
cmp
jmp
cmc
in
inc
rolb
pop
scas
sarb
push
addl
sahf
or
cmp
stos
fs
dec
adcl
aaa
pop
int
push
je
adc
roll
xlat
incl
sti
xchg
push
mov
sbb
int
inc
int3
movsb
insb
dec
mov
and
out
jg
shll
dec
mov
jb
rcll
in
dec
xor
add
and
pop
add
sbb
lret
push
xchg
xor
shl
iret
aas
pop
leave
jecxz
orb
adc
xor
call
jo
mov
xchg
and
je
cli
xor
xor
jo
pop
loope
in
mov
test
jns
bound
in
lret
adc
roll
jae
in
and
dec
stos
shll
out
hlt
shlb
mov
pop
dec
adc
jmp
addr16
call
lods
pop
and
jbe
adc
jg
push
in
sahf
ret
sbb
ljmp
inc
pop
lahf
aam
fcmovnbe
jp
imul
cmpsb
rolb
js
in
mov
pop
sub
dec
pop
lret
mov
fwait
cli
fistpl
mov
lea
xchg
and
fwait
adc
push
dec
and
lahf
jle
bound
mov
stos
adc
insl
fistps
mov
lcall
adc
jmp
mov
lods
cmc
push
mov
cmpsb
shlb
in
sti
loop
dec
aam
push
pop
jp
jp
inc
inc
out
and
jb
cmp
dec
icebp
pop
cmp
or
add
add
out
push
xor
mov
inc
push
data16
sbb
rcrb
sets
push
in
adc
mov
in
scas
rclb
pop
push
and
into
roll
subl
pop
or
out
lds
and
nop
test
inc
lcall
idiv
xchg
xlat
gs
cmp
inc
mov
mov
test
popa
cmp
int3
mov
int3
adcl
cmp
jle
cld
in
test
mov
sbb
jb
shll
cltd
mov
dec
jns
add
inc
ret
lret
jno
push
mov
add
adc
sbb
inc
int
xchg
test
fsubrs
xorb
sbb
pop
mov
inc
notl
sar
sbb
dec
mov
add
push
pop
cmpsl
xchg
out
fscale
insl
aam
jnp
cs
sbb
push
dec
jp
add
in
sarl
add
cmc
adc
lods
hlt
cmp
and
pop
mov
cmpsl
cmp
or
lods
sub
rcrl
pop
jne
mov
xchg
bound
dec
mov
dec
addr16
scas
and
imul
outsl
repnz
cmp
addr16
movsl
sahf
adc
mov
or
sbb
pop
je
or
mov
mov
xchg
popf
cli
mov
add
in
mov
cld
inc
stos
inc
repnz
adc
cltd
pop
xchg
rorl
pop
negl
and
xor
in
int
add
dec
rclb
add
or
pop
push
pop
lea
mov
in
lret
mov
out
xchg
mov
imul
fidivs
test
inc
daa
and
adc
faddp
xchg
rcr
xchg
sahf
add
lahf
inc
inc
shl
add
and
xor
xchg
orb
sub
mov
rcll
fstpt
push
jge
pushf
cmp
sub
xchg
mov
jp
cmp
mov
cmp
dec
sub
jns
cwtl
mov
sbb
xchg
pop
daa
lret
mov
adcb
pop
lahf
pusha
bound
push
mov
mov
in
push
cs
pop
aam
loopne
xchg
push
cmp
ret
out
dec
cmp
std
addr16
jg
in
repz
rcrl
int
push
and
stos
or
xchg
test
dec
int3
jp
pusha
xchg
pop
add
leave
pop
outsb
fistpll
fcoml
rorb
outsl
gs
aam
jl
fst
add
or
ljmp
push
push
jp
xchg
jae
adc
rcrl
sub
les
jne
fs
mov
lea
mov
add
fimull
movl
inc
push
xchg
iret
test
or
mov
fs
out
adc
jns
mov
jl
fidivrs
inc
enter
gs
lods
int
mov
add
sub
and
aas
sub
outsl
push
jb
aam
pop
dec
ja
insb
push
aas
subl
jbe
bswap
fstpl
out
inc
outsl
cltd
inc
frstor
or
mov
pop
xor
lcall
sub
out
dec
fbstp
jns
pop
lock
and
pop
cmpsb
roll
cmp
or
push
faddl
push
xchg
shrl
stc
and
movsb
xor
jne,pt
imul
fistpll
adc
sub
lds
daa
sahf
roll
cmpsl
jmp
or
ja
pop
adc
adc
idiv
rolb
fldt
outsl
xlat
leave
hlt
push
fimull
xchg
xchg
push
mov
imul
stos
repnz
int3
dec
pop
movsl
xor
pushf
or
js
adc
aam
sbb
mov
mov
sub
cmp
sub
sbb
call
mov
das
aam
mov
mov
lahf
sub
jg
push
cmp
cmp
and
repnz
xchg
sub
stc
xchg
scas
xchg
arpl
jle
outsb
test
scas
inc
int
push
stc
mov
mov
inc
mov
lds
cltd
inc
cmc
push
jb
add
pop
xor
jecxz
mov
enter
js
sti
rcrb
cmpl
int3
push
lock
and
cld
int3
dec
jmp
cwtl
and
popf
sahf
loopne
sub
pop
lods
scas
mov
clc
cmc
ja
sti
pushf
dec
xor
mov
mov
inc
scas
mov
fsubl
dec
sti
gs
mov
xor
adc
and
adc
mov
in
xchg
inc
push
inc
aad
icebp
xchg
leave
sahf
sub
ret
mov
mov
push
fnsave
and
cmpsb
adc
jo
aam
jge
ljmp
stc
fcomp
lods
mov
out
test
sub
bound
pop
inc
pop
bound
or
add
jp
cmp
pop
mov
add
out
sbb
adc
xchg
sub
cmpsl
es
insb
in
jae
cmp
sbb
aam
sbb
dec
addb
int3
testb
mov
cmp
aas
in
mov
decl
mov
sarl
mov
sub
jb
imul
pop
cmpsb
mov
movsb
leave
sub
or
ss
or
push
push
arpl
mov
lcall
and
sti
stc
negl
dec
or
adc
and
lret
add
mov
hlt
sbb
sub
push
mov
leave
pushf
pop
pusha
mov
xchg
or
mov
inc
clc
adc
xchg
push
and
mov
push
lcall
daa
aas
jecxz
leave
xchg
cli
sbb
in
fmulp
xchg
jl
pop
xor
mov
jno
cmp
loope
inc
sbb
aaa
repnz
sub
mov
xchg
push
pop
fmull
sub
mov
faddp
xor
movsl
and
int
mov
movsl
jbe
jne
mov
movsl
scas
insb
mov
xchg
imul
adc
cli
xchg
pushf
push
or
in
jns
test
add
mov
sbbb
sub
dec
lock
outsl
fwait
cltd
xchg
sub
mov
mov
xchg
cli
or
mov
push
push
pop
sub
dec
mov
jnp
xchg
pushf
cmp
adc
dec
xor
and
dec
sbb
push
aam
xchg
loopne
xchg
call
je
xor
push
mov
repnz
loope
bound
push
xchg
cmpsl
cmp
pop
and
mov
pop
push
mov
aam
mov
adc
enter
daa
and
or
xchg
aad
lods
testb
or
fmuls
push
scas
flds
out
arpl
cmp
ficoms
hlt
jecxz
and
leave
arpl
std
insb
or
cmp
xchg
test
in
mov
das
sbb
fwait
aam
sbbb
dec
imul
and
push
sahf
je
enter
push
adc
inc
pusha
add
mov
sbb
xchg
test
ds
push
test
mov
cmp
mov
in
iret
popa
movsl
mov
imul
sbb
cmp
mov
inc
idivl
cmpsl
pop
add
mov
in
arpl
rorl
ljmp
or
out
mov
jo
mov
testb
xor
add
movsb
loope
jb
ja
ret
push
pop
jle
ljmp
mov
lahf
jne
adcb
mov
inc
jb
addr16
stos
rol
pop
aas
loop
orl
data16
adc
add
sub
mov
mov
lahf
dec
mov
scas
mov
push
loop
lock
sbb
ljmp
in
pop
inc
jmp
int
sub
jnp
loop
cmp
mov
lods
sub
pop
shl
push
cmpsb
push
outsl
or
nop
in
dec
jg
push
cmc
loopne
push
pop
cmp
and
mov
out
mov
in
xor
stos
xor
xchg
mov
adc
mov
test
inc
push
mov
test
jecxz
inc
pop
mov
int
xor
mov
das
aam
lock
sbb
lock
aaa
fdecstp
test
push
sbb
sub
hlt
lods
push
pop
cli
fadds
and
jle
xabort
mov
pop
mov
mov
dec
adc
aaa
jmp
in
jmp
adc
ja
ja
sub
int3
or
mov
cmp
lods
arpl
sbb
jne
rcr
add
dec
and
rcrb
ss
stos
or
cmp
mov
dec
repz
ljmp
leave
lea
aad
inc
xor
dec
mov
andb
data16
bound
adc
xor
xchg
bound
stos
cmpsb
pop
int3
mov
dec
sub
pop
pop
add
push
enter
sbb
fcompl
inc
xor
jno
or
cmp
xor
push
adc
out
sbb
cmc
cmp
add
add
and
fimuls
push
add
addr16
in
pusha
sub
adc
or
jnp
lret
dec
and
movswl
sub
xor
aaa
ljmp
ja
movsl
mov
xchg
rolb
inc
arpl
call
mov
pop
aas
icebp
aaa
xchg
adc
sub
inc
push
lret
int
push
jno
icebp
xchg
les
jo
adcb
mov
out
mov
mov
lret
repz
jae
mov
push
sbb
inc
inc
adc
pusha
in
lcall
cmp
lds
sbb
int
xchg
mov
lret
cmpsl
cmp
repz
fiaddl
negl
push
xor
subb
xor
das
mov
dec
mov
and
flds
cmp
bound
roll
sbb
or
mov
out
sub
cmpsl
mov
gs
pop
sbb
xchg
aam
daa
rorl
in
stos
and
imul
imul
mov
mov
pop
std
fadd
negb
mov
inc
nop
aas
outsb
mov
cltd
pusha
nop
jne
or
pusha
cli
pusha
fldln2
dec
shl
push
rcl
gs
pop
jl
mov
cltd
pop
popa
mov
push
lret
je
push
jne
jle
sbb
xor
repz
ffree
and
rclb
repz
xchg
call
das
pop
rorb
mov
mov
mov
dec
pop
sbbb
dec
sub
mov
dec
rcrb
sahf
xchg
daa
add
jo
cmp
lret
add
push
add
push
fidivl
scas
mov
leave
sbb
loopne
cltd
adc
lret
mov
and
cmp
push
cltd
or
bound
shl
jnp
jno
popf
push
fs
test
fstpt
mov
stos
add
cmpsl
icebp
push
add
sub
and
aaa
xor
inc
loopne
push
cmp
insl
adc
pusha
aad
xchg
sub
cmp
dec
lret
dec
cmp
mov
and
aad
dec
jnp
cmpsb
push
mov
dec
fldt
gs
into
in
imul
in
lcall
fildl
jns
imul
inc
pop
mov
loope
pop
out
frstor
push
aaa
and
cmpsl
pushf
mov
sahf
pop
popa
hlt
xchg
out
je
test
inc
push
push
aaa
test
rolb
gs
sub
inc
stos
pop
dec
lds
jae
jne
mov
dec
mov
add
cmpsb
dec
sub
addr16
cwtl
dec
jb
or
test
pusha
or
pop
mov
jns
int
or
sti
and
insb
lcall
sbb
inc
ds
and
lea
repnz
int
cmp
jg
xchg
call
and
adc
pop
cmp
icebp
lcall
ret
sbb
fwait
mov
mov
push
add
cmp
sahf
mov
adcb
cwtl
sub
add
out
pop
mov
aas
inc
and
shrb
sub
in
enter
fnstcw
adc
and
mov
inc
push
jmp
loopne
aad
call
mov
jp
lret
dec
adc
test
xchg
scas
sub
sahf
cmp
add
jne
lock
fsubl
jl
call
pop
mov
mov
xchg
sub
cmpsb
push
mov
ret
push
dec
mov
mov
int
imul
add
xchg
test
mov
inc
sti
outsl
add
stc
fsubrp
ja
lret
push
out
pop
loope,pt
push
pop
mov
scas
jmp
fcoms
lret
aas
lods
mov
jmp
sub
cmp
dec
pop
and
or
sbbl
xor
dec
jns
cmp
fadd
stos
dec
cmp
mov
shl
insb
mov
daa
out
scas
in
mov
inc
pop
cmp
push
mov
jge
add
and
call
jecxz
jno
cmpl
outsb
cmpsb
push
jle
out
loopne
sub
out
add
mov
stos
jae
and
mov
cmc
cmpsl
mov
adc
jl
imul
lock
cmp
pusha
sub
aas
test
sub
daa
bound
pushf
fcomp
loope
neg
mov
rclb
stos
arpl
pop
push
rcrl
in
movsb
fmul
cmp
and
xlat
out
mov
mov
call
lock
test
cmp
sub
jns
jl
es
cmp
xchg
xor
adc
sbb
push
jl
mov
pop
cmp
repz
mov
pop
sbb
in
orl
xchg
sarl
ret
out
xchg
test
mov
cmp
shr
push
inc
iret
xchg
xchg
pop
jno
jae
push
jl
mov
xchg
xchg
cwtl
mov
mov
mov
xor
push
repnz
cltd
pop
xchg
loope
ret
mov
or
loop
roll
mov
inc
movsl
loopne
pop
out
push
stc
pop
ret
or
xor
scas
dec
mov
clc
inc
and
shlb
pop
icebp
sbb
adc
mov
mov
idivb
mov
stos
pop
in
inc
mov
sbb
pushf
mov
lahf
mov
int
fcomi
loope
push
test
push
aam
lret
mov
stos
jmp
lds
out
and
stos
adc
rolb
pop
in
cmpsb
jge
cmp
jo
sbb
jmp
in
xor
cmovno
je
hlt
fsub
mov
adc
loop
into
int
push
sub
mov
cwtl
gs
mov
inc
lock
iret
out
fisubrs
adc
sub
jae
aam
in
js
push
cmpsl
ds
nop
push
int3
pusha
mov
popf
fstps
les
mov
push
pop
out
jbe
xchg
fucom
insl
sbb
lahf
lea
jae
dec
xor
mov
ficoml
xor
dec
andb
sbb
xor
mov
aaa
adc
mov
and
and
popf
test
push
dec
movsb
dec
dec
pop
mov
repz
fdiv
int
pop
jmp
dec
mov
pop
sub
sbbb
repz
rcl
push
ds
bound
adc
lds
sahf
jnp
cmp
pusha
dec
daa
lahf
pusha
daa
movsb
xchg
push
fsubrp
push
data16
test
pop
hlt
rdmsr
mov
and
cs
sub
rcrl
jecxz
push
pop
and
adc
subl
xorb
push
pop
pop
xchg
daa
ss
in
cmp
outsl
xor
lret
sub
lret
nop
mov
add
adcl
ret
mov
jge
mov
xor
out
cmc
sub
test
ret
je
lock
sbb
cmp
jno
xor
fs
enter
out
es
hlt
dec
stos
lret
dec
sub
arpl
inc
or
mov
loopne
mov
cmp
adc
sbb
lea
xor
std
insb
cmp
stos
mov
or
push
mov
scas
fisubs
mov
arpl
sub
daa
mov
push
in
loope
mov
pop
fwait
xlat
cmp
and
aam
sbb
sbb
mov
mov
cmp
sti
push
adc
ljmp
test
jns
mov
sbb
leave
mov
or
fdiv
xor
mov
adc
and
scas
jae
push
enter
add
mov
push
add
xchg
sbb
and
jne
mov
daa
mov
xchg
cld
je
mov
call
in
inc
sub
cltd
fucomp
mov
ja
dec
ljmp
xlat
lret
sbb
mov
inc
loope
xchg
out
fstl
dec
xor
fsubp
lods
mov
xor
jae
mov
jl
mov
jl
btc
lock
clc
cmpsl
popa
rorb
pop
jo
cltd
jns
mov
pop
js
mov
rcr
pop
inc
mov
aam
ret
outsb
jne
cwtl
test
and
adc
lahf
inc
mov
jne
xor
and
dec
cmp
mov
sti
xor
push
aas
int3
add
out
mov
sbb
xchg
add
pushf
add
and
sub
fstpt
jno
fwait
and
push
jl
cmp
cmp
jmp
dec
push
mov
jmp
ficompl
cltd
xchg
fiaddl
imul
dec
imull
rcrl
adc
lahf
daa
adc
pop
cld
in
add
jnp
push
and
nop
mov
out
lds
push
jae
mov
leave
fidivrl
xorb
testl
cli
add
pop
iret
daa
xlat
or
jp
pop
dec
in
push
inc
jb
adc
dec
mov
mov
testb
jne
popa
mov
in
loope
cmpsl
cmp
negb
push
adcl
sahf
ds
mov
adcb
fdivl
ffreep
mov
add
cmp
jo
daa
pop
lods
inc
aas
ss
xor
shlb
jnp
sub
jnp
push
cs
push
and
leave
aas
cmc
cs
dec
mov
test
stos
pop
sub
pop
cmpsl
in
inc
sub
enter
jge
rcrl
out
pusha
lret
shl
in
push
xchg
ss
lea
mov
xchg
out
arpl
lahf
cmc
xchg
jnp
xchg
iret
repnz
sub
lock
popf
lea
in
lods
pushf
clc
sub
sbb
mov
cwtl
jno
outsb
mov
dec
jecxz
pop
test
push
jbe
fsts
push
or
mov
clc
mov
movsb
lcall
mov
adc
jbe
mov
mov
mov
icebp
rol
lds
mov
jns
fadds
fldcw
push
hlt
sub
mov
repnz
ret
sbb
mov
push
cli
mov
addb
mov
pop
xor
adc
loop
es
lret
sub
es
lret
dec
push
pop
add
sbb
incl
xchg
push
cwtl
sub
aad
add
fcomps
addr16
add
sub
push
leave
push
adc
sbb
inc
cmpsl
stc
cmp
repz
push
cmp
xor
ret
mov
sub
jb
stc
push
adc
pushf
inc
rcrl
test
add
mov
and
sbb
mov
test
jno
fwait
cmpb
sbb
cmpb
adc
push
in
cmp
lret
xchg
iret
testl
test
pop
lcall
push
insb
lcall
jecxz
xchg
adc
lahf
and
rcl
xchg
in
ja
inc
mov
push
out
dec
jae
xchg
fidivs
lahf
cmp
clc
aas
push
jmp
aaa
ds
leave
mov
inc
sub
test
iret
addb
pop
xchg
pop
mov
cmp
push
stos
stos
push
test
jl
stc
inc
cmc
test
fcoml
repnz
std
ds
dec
lods
pushf
negl
sub
test
fsub
push
jp
jecxz
mov
jae
mov
mov
cld
add
mov
mov
mov
dec
mov
mov
loopne,pn
in
lods
xor
xchg
pop
js
mov
test
aas
dec
movsb
daa
loop
xchg
lret
jns
inc
out
insl
fldt
fadds
pop
sub
mov
sub
push
ds
cmp
arpl
test
repnz
add
lea
cmp
cld
jmp
xorb
add
imul
jne
leave
mov
js
dec
and
mov
popf
gs
cmp
sbb
mov
push
push
add
ljmp
lcall
xor
mov
mov
jno
rcl
imulb
or
mov
or
lretw
push
pop
sahf
push
loop
mov
js
xor
mov
jecxz
int3
jmp
add
ljmp
mov
popf
mov
or
fwait
inc
jmp
xchg
je
inc
lret
dec
or
aad
or
jne
xor
sar
outsb
pop
aam
mov
mov
cmp
movsb
sbbl
loope
cld
stos
outsb
scas
data16
sbb
xchg
mov
push
mov
adc
mov
dec
push
idiv
pop
add
ficomps
push
outsb
out
fcmovb
in
xchg
lock
das
pusha
sub
jge
xchg
jge
cmp
add
in
cmp
mov
gs
push
pop
rorl
mov
pop
adc
and
enter
leave
or
int
fistpl
xor
pop
xor
xchg
test
push
test
test
or
dec
ss
out
mov
inc
cwtl
or
in
loopne
jmp
or
inc
repz
cmpsb
jmp
daa
sub
cli
mov
dec
xor
cmp
mov
push
popa
jp
add
lds
test
pop
lods
faddl
outsl
cs
xchg
stos
cs
cmpsl
loope
inc
loopne
scas
pop
out
insb
movsb
mov
mov
sub
push
dec
testl
jecxz
mov
rcrl
pop
fptan
mov
jo
lods
in
test
lods
jle
mov
daa
les
in
popf
cltd
sbb
and
dec
mov
fwait
sarb
lahf
insl
outsb
test
mov
cltd
sub
and
mov
mov
push
pop
es
mov
inc
shrl
jp
xchg
dec
sub
loopne
jecxz
cmpsb
imul
xor
sbb
fisubrl
int3
repz
lea
cwtl
stos
out
and
jno
and
test
lret
bnd
add
mov
mov
shll
movsb
mov
dec
pop
jno
jl
jg
mov
jl
dec
or
lods
jl
imul
ss
clc
push
movb
xor
fwait
sub
xchg
adc
negb
stos
push
dec
nop
or
mov
lcall
cmp
sub
cmp
sti
fwait
insb
sbb
div
or
mov
fstl
cmp
fidivrs
ja
fdivrl
mov
push
mov
ljmp
icebp
jle
jecxz
and
pop
sbb
jae
std
jmp
rcll
push
pop
aas
es
pusha
das
mov
fstpl
rclb
stos
insb
in
ret
lock
mov
sarb
stos
ja
sbb
popf
cmp
lds
sub
repnz
es
pop
mov
or
dec
jecxz
mov
jae
cmpsb
inc
in
jg
popf
dec
movsb
stc
jecxz
or
and
ds
mov
jbe
inc
out
test
outsb
mov
mov
sbbl
cmp
jp
out
pop
cld
cwtl
std
xor
ficoml
jmp
inc
test
mov
rcl
mov
xor
sub
dec
fldt
outsl
lea
enter
jp
cs
mov
jbe
rcrb
scas
cmp
jbe
nop
sub
shlb
jle
sbb
push
test
mov
jbe
mov
xor
push
sbb
and
cli
pushf
add
movsl
out
inc
movsb
jecxz
fwait
cmpsl
mov
sub
mov
adc
imul
push
dec
leave
stc
adc
int3
xchg
loope
add
mov
ss
outsl
push
jge
add
sub
pop
xor
ljmp
stos
lret
scas
xchg
stc
dec
out
movsb
mov
enter
or
sti
fs
loope
aaa
ret
pop
popf
xchg
cwtl
lods
test
lods
cwtl
cmpsb
cs
xchg
cmp
lahf
dec
dec
popl
cmp
cld
mov
imul
push
sub
cmp
cltd
ret
clc
daa
push
fildll
btc
or
sbb
pushl
or
sub
push
dec
dec
cmpsl
jecxz
insb
add
mov
stos
aaa
mov
push
mov
add
sti
imul
mov
jp
and
jge
mov
ja
fbstp
or
out
or
sub
das
aam
fsubrl
std
sbb
stos
cmpl
insl
adc
cmp
jb
idivl
sub
outsb
push
adc
sub
movsb
cmp
decb
pop
outsb
test
push
xor
jb
leave
jno
add
push
or
loop
adc
dec
jb
mov
rclb
decb
inc
jnp
sub
out
sub
jecxz
rcrb
cld
cmp
int3
in
aas
loopne
ljmp
mov
shll
pushf
fstps
inc
test
lcall
sti
add
mov
pop
push
mov
icebp
cmp
pop
loope
nop
mov
or
lret
rclb
inc
xchg
and
pop
sub
lret
in
daa
sbbl
push
jb
roll
cmp
fstps
inc
pusha
les
fcmovu
push
push
iret
xor
test
test
jecxz
pop
shlb
int3
adc
cmp
js
ret
loopne
xchg
stc
xchg
pop
add
push
idivb
shr
mov
in
inc
mul
in
xlat
pop
cmpsb
mov
mov
jae
or
jb
adcb
leave
imul
rcrw
out
rcrl
ret
imul
gs
dec
dec
adc
pop
lock
fwait
in
lcall
sarl
pop
std
jbe
mulb
xchg
mov
leave
hlt
sub
icebp
int3
inc
lods
movsl
or
dec
xlat
push
aaa
call
dec
rcll
jne
sahf
ret
movsb
inc
cmc
mov
xchg
ds
fisubs
rorb
call
jp
and
and
testb
jl
mov
cmp
jb
nop
add
xchg
push
inc
in
cld
inc
test
lods
lcall
mov
push
rol
test
pop
xchg
push
shl
cmpsb
gs
add
test
fsubrl
stos
call
aam
fstp
xor
outsb
dec
inc
call
pusha
clc
insb
jmp
in
shl
fldcw
xchg
pop
lds
adc
insl
das
pop
or
fidivrs
vmread
push
in
shll
ficoml
test
mov
les
and
push
jae
jmp
adc
inc
loope
sbb
rclb
sbb
fiaddl
pop
and
daa
iret
je
xor
xor
mov
jl
dec
mov
aam
mov
add
jg
push
xchg
lret
test
xchg
rolb
and
or
push
ljmp
loop
jmp
dec
dec
and
decl
push
adc
adc
push
scas
pop
jno
icebp
jge
xchg
sub
adc
into
inc
mov
push
shrl
add
fwait
sub
pop
je
int3
es
inc
neg
add
sub
cmpsl
dec
mov
jo
inc
pop
cld
in
push
xor
stc
stos
nop
jg
rorb
stos
cld
push
inc
mov
and
mov
out
mov
mov
fsubl
push
ds
sbb
cmp
ret
inc
jge
loopne
shlb
rolb
push
add
rep
jge
mov
loop
movsb
xlat
jle,pn
cmp
mov
dec
dec
and
es
mov
pop
lcall
mov
mov
xor
push
or
outsl
std
push
mov
sarb
pop
xor
in
stos
test
cli
aaa
xchg
mov
mov
cld
inc
lods
rol
mov
daa
test
arpl
jne
cmc
lock
inc
dec
push
mov
scas
add
or
jp
lock
jg
inc
ss
push
jmp
lcall
and
imul
dec
xor
sub
arpl
aad
sahf
push
fdivs
hlt
out
iret
inc
jbe
xor
sub
imul
test
out
mov
sbb
cmp
imul
mov
sahf
test
aam
mov
cmp
inc
lret
mov
jnp
xor
jbe
inc
mov
fsubr
sbb
sub
imul
mov
dec
and
jecxz
pop
shll
jbe
mov
addr16
in
sub
add
pop
jp
dec
rcrl
adc
test
cmp
aas
movaps
xor
jnp
je
ss
mov
mov
mov
mov
pop
push
adc
loop
sbb
dec
dec
arpl
jae
mov
lock
daa
mov
xchg
sahf
push
mov
lea
sbb
pushf
ss
push
sbb
insl
outsl
gs
pushf
lret
pop
xchg
inc
xor
andl
icebp
shl
pop
inc
add
jnp
sti
sbb
dec
rol
sub
shr
sub
dec
out
inc
push
add
fs
push
dec
data16
jge,pn
mov
adc
sar
xor
and
jbe
jb
dec
inc
out
mov
mov
add
ss
loop
dec
xor
add
or
cli
daa
mov
sbb
push
cltd
jno
jmp
fimull
push
xchg
sub
scas
mov
cmp
cmp
fistl
aaa
mov
and
popf
ficoml
in
and
push
leave
enter
in
nop
inc
mov
shll
adc
ja
and
arpl
add
pop
mov
sbb
mov
scas
hlt
mov
outsl
stos
xchg
repnz
push
rolb
push
std
xchg
dec
ja
nop
ret
mov
xchg
add
cmc
fists
insb
insl
cmp
negb
mov
les
mov
outsl
cmpsl
add
mov
pop
mov
xchg
mov
pushf
xchg
xor
mov
sub
test
movsb
cmp
sti
in
stos
pop
hlt
scas
or
sub
in
jnp
rol
xchg
aas
fimuls
cmp
loope
mov
mov
cmp
stc
or
mov
es
int
xchg
sar
or
mov
cmp
dec
and
mov
sbb
sbb
flds
mov
push
xor
jmp
mov
lds
dec
stos
scas
ds
lret
test
repnz
xor
cmp
inc
inc
loopne
add
shrl
mov
push
sub
dec
fcoml
dec
jne
jbe
jb
sub
cld
popf
in
sti
int3
jmp
xchg
inc
jg
dec
and
xchg
push
mov
aaa
loope
push
not
sbb
xchg
xor
xchg
cmp
push
call
rol
xor
stc
sar
fistl
adc
fbld
inc
xor
dec
scas
add
test
inc
aaa
sbb
dec
idiv
arpl
mov
mov
cmp
ss
inc
enter
cld
enter
adc
cld
rorl
xchg
or
fmull
push
mov
aaa
into
jo
negb
shrl
mov
ljmp
imul
out
jmp
lds
test
fmulp
jns
inc
jl
das
jge
push
jb
call
dec
push
mov
loop
fstl
push
push
scas
les
outsl
cwtl
stos
mov
xchg
loop
push
and
jmp
mov
insl
mov
into
icebp
adc
and
push
lock
or
fmul
sub
push
int3
fadd
sub
je
add
cwtl
ja
xchg
rorb
jno
mov
pusha
dec
in
fildl
out
sbb
fldl
xorb
xchg
pusha
fcoms
cmp
adc
dec
cmpsl
cmp
mov
push
or
and
mov
jmp
ds
cmp
sbb
mov
jo
dec
in
jae
pop
or
js
dec
mov
roll
cli
lahf
ret
subb
adc
in
jl
mov
jmp
popa
adc
ret
adc
rorb
add
aas
int3
enter
mov
push
jb
xabort
jne
pop
or
fcoml
mov
in
out
fisubl
push
jecxz
pop
cmp
and
jo
dec
add
jp
hlt
clc
and
push
negl
dec
jns
dec
push
sub
ljmp
jp
ffree
xchg
test
mov
jns
das
mov
adc
jno
cmp
scas
sbb
hlt
lcall
mov
orl
and
ret
icebp
jl
mov
test
pop
mov
xchg
sub
cld
mov
add
int3
push
imulb
or
and
jo
dec
add
adc
std
xor
loop
inc
dec
ret
cmpsl
cmp
hlt
test
lods
dec
call
xchg
rorb
scas
movsb
ja
scas
outsl
ds
mov
popa
pop
test
ljmp
jge
add
mov
push
xchg
xchg
fldl
es
mov
push
in
adc
mov
mov
loope
cmp
movsl
cmc
insl
jno
sbb
cmp
pushf
mov
scas
das
cltd
lret
and
ret
lds
enter
xchg
iret
xor
push
inc
fildll
outsb
popl
decb
cmp
inc
rorb
loopne
mov
pop
jo
dec
lahf
dec
outsl
cld
adc
roll
fsubs
pusha
dec
clc
out
std
sub
and
fistl
test
sub
xchg
xchg
sbb
cmpsl
leave
loope
jmp
imul
pop
sub
sbb
push
out
out
inc
fstps
inc
xchg
mov
popa
and
mov
cli
mov
mov
push
adc
jecxz
dec
insb
jmp
int3
iret
inc
dec
mov
adc
push
xchg
insb
repnz
nop
mov
xchg
pop
aad
xor
mov
movsb
mov
mov
int
or
pop
mov
xor
cmpsl
xchg
sub
push
fwait
cmc
mov
scas
movsb
or
nop
leave
pop
out
js
jnp
mov
lea
rorb
imul
sti
mov
push
inc
xchg
mov
cmp
lods
inc
or
shlb
loopne
xor
mov
lcall
xor
int
addl
popf
push
out
mov
shll
mov
mov
js
inc
jle
push
leave
pushw
or
lods
pop
ja
sbb
xor
test
jle
adc
cmpsb
or
xor
aaa
arpl
and
or
push
into
or
rolb
jp
repz
pop
sub
pushf
mov
cmpsb
mov
pop
cs
or
adcl
lods
mov
jge
pop
mov
pushw
pop
test
xchg
adc
dec
sbb
inc
sub
mov
pop
sub
fmull
inc
int
js
mov
clc
cmp
std
int
xbegin
pop
ret
cmpsb
add
loop
rorl
cmp
dec
mov
cmc
pop
dec
dec
inc
cld
xchg
movsb
sub
push
pop
cmp
int
clc
dec
jecxz
negb
push
stos
popf
adc
je,pt
scas
mov
sub
clc
xor
mov
xor
or
scas
mov
fstpl
xchg
imul
dec
inc
fisubs
mulb
mov
je
jge
push
int
roll
shlb
aad
lcall
or
jecxz
sbb
xor
pop
stos
out
sbb
mov
add
mov
push
roll
stc
aam
scas
aas
fidivrs
dec
mov
insb
leave
fsubp
cmp
xchg
sbb
mov
dec
or
das
in
mov
ljmp
ret
inc
cwtl
inc
dec
int3
popf
jmp
ss
jl
jo
fs
mov
jnp
push
lret
bound
mov
sahf
lret
dec
pop
jnp
pushf
jge
mov
ret
mov
or
sbb
aaa
jge
mov
jle
push
mov
pop
inc
insb
inc
xor
mov
xor
inc
pop
jge
inc
inc
movsb
push
add
mov
sbb
cmp
mov
xor
inc
sahf
leave
mov
add
or
cwtl
ss
out
mov
out
icebp
call
or
rcll
mov
daa
fwait
shl
dec
mov
sbb
cmc
inc
imul
out
add
adc
sbb
imul
sbb
cmp
adc
into
cltd
mov
sbb
lock
pop
ljmp
loop
outsb
loop
movsl
jecxz
in
jmp
fstpl
call
pop
icebp
adc
adc
in
push
sarb
xchg
out
mov
in
and
repz
jge
mov
aas
shlb
bound
test
push
test
es
sub
mov
push
mov
inc
xor
sahf
int
sbb
adc
repz
dec
lds
jne
testb
pop
xor
sbb
jae
fiaddl
inc
fsts
popf
std
xor
mov
ret
xchg
xchg
ljmp
je
adc
inc
add
hlt
sbb
pop
cmpsl
xchg
testl
and
mov
lret
es
leave
dec
jnp
fiadds
mov
mov
inc
and
add
vmovss
gs
jnp
mov
je
pop
out
nop
lods
iret
adcb
cmp
andb
mov
dec
and
aas
push
add
lods
lods
sti
sub
dec
push
ss
in
negb
outsl
push
add
testl
mov
jg
adc
sbb
outsb
sbb
inc
xlat
lods
jo
inc
mov
stc
add
sub
mov
jl
xchg
insb
enter
data16
in
push
arpl
cmp
ljmp
movsb
shrl
pop
jle
cmpl
mov
lea
xor
cmp
mov
sti
ljmp
mov
mov
test
inc
dec
xchg
out
sti
outsl
ret
enter
mov
into
or
imul
jb
les
ret
push
mov
cmp
ja
out
mov
pusha
in
ljmp
stos
pop
out
int
test
sbb
push
insb
in
cltd
fdiv
xchg
mov
cmp
mov
adc
in
stos
cmp
movsb
jecxz
adc
mov
enter
push
sti
iret
ds
hlt
fildll
cmp
xchg
sub
into
jmp
lahf
ficoml
xchg
mov
push
or
add
or
cmp
push
lods
pop
ljmp
jo
movsl
cmpsb
sarb
dec
pop
sub
xchg
mov
mov
add
pop
adcl
xchg
aas
daa
and
cmp
inc
nop
mov
mov
sti
or
aam
leave
adc
lds
push
jb
jb
cmpsl
pop
pop
loopne
rcl
lcall
aad
addr16
xchg
in
imul
pop
pop
pop
push
cwtl
icebp
mov
push
inc
pop
pop
cwtl
popf
mov
jg
mov
imul
lods
in
stos
sbb
add
cs
push
mov
movsb
out
fsubrs
sub
adc
push
pop
or
or
nop
lds
and
sbb
jbe
xor
out
sbb
and
cmp
lods
pop
out
gs
mov
sbb
adc
xor
jmp
stos
jno
sarb
andl
into
push
dec
jb
push
dec
aaa
or
mov
repz
mov
ret
push
adc
mov
cmpsb
bound
gs
and
rclb
inc
out
inc
repz
pop
add
sarl
mov
inc
stc
rcrl
jle
cmp
jg
inc
shll
jecxz
out
repnz
lds
test
cmp
outsb
adc
pop
dec
inc
das
xor
pop
fidivrs
jl
pop
cmp
cmpsb
jecxz
int3
pop
ficoms
dec
arpl
aaa
xchg
pusha
mov
pop
mov
std
js
add
xor
shll
add
orl
cmp
xchg
mov
inc
int
mov
push
cmp
hlt
mov
subb
stc
imul
inc
scas
cwtl
adc
push
and
mov
ja
insl
push
test
sbb
pop
lods
aam
add
mov
int
or
xor
test
add
or
xchg
idivl
imul
nop
push
push
adc
add
jno
inc
jmp
stos
shl
pop
cmc
inc
nop
push
sbb
and
sbb
stc
mov
std
pop
jae
test
test
add
enter
dec
arpl
fisubl
enter
push
xor
popa
add
lret
add
fcmovb
arpl
out
sar
mov
jmp
pop
gs
repnz
andl
gs
insl
out
cmp
sbb
scas
int
pop
xchg
ljmp
repz
iret
sub
xor
fcompl
lock
jg
or
sarl
fnstenv
ret
jg
push
sub
mov
aaa
inc
xlat
and
fisubrs
sbb
sbb
sub
lock
jle
push
decb
les
sbb
movsl
adc
pop
sub
jecxz
pop
movsl
xor
jp
insb
or
and
enter
lcall
jecxz
gs
mov
cs
ljmp
inc
jns
aaa
or
inc
loopne
xchg
stos
fstl
mov
inc
cwtl
int
push
cmp
and
add
sub
cmc
or
pop
es
sub
sub
mov
inc
ss
lods
xchg
jae
jmp
out
sar
gs
rorb
insb
rcrb
jo
sub
scas
cs
ljmp
mov
mov
mov
adc
outsl
movsb
cmc
js
into
jno
insb
mov
aad
xor
call
mov
push
out
fwait
xor
jo
dec
insb
ret
bound
fwait
arpl
pop
imul
push
lret
cmp
ja
mov
push
pusha
dec
cmp
call
stos
and
jge
push
lods
bound
dec
xchg
mov
or
out
dec
mov
jnp
sarb
jge
adc
dec
cmp
cs
stc
jno
movsl
push
jne
sbb
outsl
fadds
fwait
call
dec
sub
pop
cmp
fstp
icebp
dec
rcl
pusha
daa
in
stc
xor
dec
arpl
and
sbb
adc
mov
ds
cmpsl
mov
xchg
cmp
cs
mov
and
cltd
addb
push
push
insb
sbb
push
je
sub
mov
icebp
loopne
aam
push
in
lea
cli
sub
xor
aaa
mov
cltd
inc
sti
test
jae
sbb
add
mov
jno
cld
jo
cmp
test
cmpsb
fabs
cmp
dec
rcrb
pop
scas
push
mov
repnz
jns
cmp
loope
or
cmc
addr16
lods
fnstcw
test
mov
insb
mov
std
js
jmp
push
xchg
int
enter
pop
push
stc
inc
dec
push
push
negl
test
jns
push
jnp
loopne
and
pushf
scas
sbb
mov
test
dec
jno
jle
cmpsb
xchg
negb
in
pop
jmp
or
aas
out
xchg
xor
je
inc
cmp
add
add
cmp
adc
repnz
and
loopne
sahf
pop
jmp
stc
cmp
movaps
out
call
imulb
inc
sub
imul
mov
xchg
dec
stos
movsl
sub
sbb
pop
mov
lea
outsl
add
adc
cmpsb
push
mov
cmp
lods
lret
fwait
jns
xchg
fldenv
pop
pop
sbb
lret
xor
stos
xchg
or
pop
xchg
stos
add
add
push
mov
scas
mov
xor
out
mov
mov
sub
and
and
push
push
movsl
xor
sub
mov
rclb
loopne
pop
mov
rorb
inc
aad
adc
mov
sbb
and
insl
arpl
jae
sub
unpcklps
aas
fistps
push
outsb
mov
mov
out
or
jmp
movsl
imul
pop
lret
mov
push
aam
imul
ret
imul
or
jg
cmp
fcmovb
adc
pop
and
sbb
pop
mov
cmc
jns
jne
jmp
push
mov
mov
mov
or
insb
loop
lret
aas
sbb
cmpsb
mov
push
cltd
insl
or
mov
add
pushl
and
orl
xorps
loopne
out
lahf
lahf
lods
cld
and
rclb
fs
push
mov
and
inc
test
pop
lds
ficompl
fistps
pushf
fcmove
int
xor
js
xlat
js
fistps
aaa
std
sub
sub
aad
jnp
sbbl
lea
inc
enter
fnstcw
les
scas
lock
nopl
inc
test
sub
mov
or
push
mov
cmc
jg
pop
adc
pop
pop
sbbb
test
pushf
xchg
dec
stc
pop
subb
sbb
fcomi
nop
loope
lret
xor
mov
pop
mov
mov
xchg
pop
inc
cmc
icebp
cmpsl
mov
int3
mov
or
shl
ds
aaa
cwtl
cli
xchg
xor
ljmp
push
dec
adc
test
ljmp
dec
lock
cmp
inc
sbb
cmp
sahf
popf
jecxz
or
sti
sub
and
lret
push
pop
sbb
xor
cwtl
addr16
add
sbb
popa
cltd
fs
or
jnp
loop
nop
shrb
cmpsl
inc
add
xor
inc
jmp
inc
cmc
or
js
icebp
jg
inc
popa
add
inc
scas
adc
sub
mov
pop
in
cmp
testl
fistps
out
call
repz
and
mov
jg
das
push
mov
dec
adc
and
add
inc
and
popa
out
dec
outsl
jge
and
imul
ret
inc
pop
push
dec
xor
mov
loop
out
stc
mov
lods
cmpsl
test
aad
mov
jns
dec
jecxz
sahf
cli
cwtl
incl
or
pop
mov
mov
pop
inc
outsl
mov
mov
arpl
mov
lahf
inc
shrb
mov
or
jne
cli
or
nop
xlat
add
jle
rol
adc
sbb
loop
or
cmpsl
imul
aad
add
push
cmc
cltd
shlb
shld
movsb
hlt
lahf
mov
stos
in
test
mov
sbb
imul
and
xor
xor
or
add
jg
fstps
stos
adc
dec
cmp
sarl
loope
fmuls
cwtl
sti
xchg
fwait
mov
mov
loope
push
rol
dec
mov
mov
pop
pushl
and
int3
jno
lods
jno
adc
sbb
lahf
movsb
movaps
mov
jne
lret
mov
dec
stc
xor
adc
push
mov
inc
push
ret
loope
int
in
shrl
inc
sbb
sub
mov
outsb
add
lret
mov
addr16
pop
mov
dec
mov
std
ret
cmc
mov
mov
inc
test
outsb
jmp
and
in
int3
scas
mov
and
ror
and
push
xchg
cld
cwtl
enter
loope
enter
repnz
mov
or
push
pop
leave
dec
jmp
pop
xchg
dec
test
mov
adc
jmp
jb,pt
cmp
inc
ret
mov
div
aas
mov
lock
jmp
shl
test
jp
andl
dec
iret
in
xor
mov
jl
aas
sarb
adc
mov
add
std
sti
enter
jno
stos
cmp
cmp
pop
outsb
add
out
stos
or
shl
xlat
adc
push
xorb
mov
pop
flds
inc
sub
std
ret
outsl
iretw
sti
shll
pop
sbb
add
xor
xchg
add
sub
lds
pop
jmp
mov
test
fisttpl
lcall
push
lret
gs
aam
imul
push
fisttpll
and
push
inc
and
push
test
addl
js
inc
jno
pop
and
cltd
mov
lock
cld
jg
test
adc
lcall
sbb
ret
in
dec
cwtl
mov
jno
insl
stos
rcl
xor
sub
add
in
jb
enter
ret
mov
mov
adc
xchg
out
das
sub
fxch
dec
mov
sets
sbb
repz
nop
adc
repnz
or
inc
ret
aam
push
push
mov
push
popa
subb
sub
inc
es
push
fisttpl
ja
pusha
scas
in
dec
mov
out
mov
rep
jmp
lock
cld
pop
xor
les
ficoml
xchg
push
xchg
ss
int3
in
addr16
dec
jmp
mov
popf
scas
repnz
jbe
mov
movsl
daa
mov
pop
jns
and
pusha
std
sbb
or
fldt
pop
push
xchg
addl
push
or
scas
je
incl
cmp
dec
pop
sbb
ljmp
loopne
lea
inc
sbb
stos
mov
adc
adc
testl
test
inc
xorl
pop
push
ds
lahf
add
xchg
and
xchg
gs
into
push
sbb
loope
cmp
jne
fmull
pop
cmp
stc
add
cs
mov
push
int
mov
xor
sbb
mov
sub
scas
stc
sti
enter
mov
adc
in
and
cli
aas
mov
dec
adc
fidivl
xchg
pop
mov
iret
sbb
das
and
cmpsb
or
test
stos
cmp
lds
mov
xor
jmp
arpl
aaa
pop
test
adc
mov
mov
stos
sub
shrl
and
mov
cltd
cmpl
cmc
adc
loopne
cmc
mov
mov
xor
repnz
jns
cmp
in
sub
movsl
fucomp
adc
les
in
add
push
aam
icebp
and
sahf
mov
arpl
fs
jmp
loope
sti
sti
or
and
adc
or
add
inc
insb
mov
mov
das
dec
push
aas
sbb
lods
dec
mov
mov
dec
xchg
inc
std
adc
push
aas
bound
adc
dec
sbb
in
mov
jne
push
or
data16
je
pop
dec
jnp
pop
pop
and
ret
gs
es
clc
test
insb
shr
add
clc
mov
and
mov
daa
pop
aas
fs
popa
push
loope
xchg
jmp
push
sahf
popf
hlt
fs
arpl
push
xchg
lock
cmpsl
mull
pop
mov
dec
daa
lock
add
sbb
shlb
xor
filds
arpl
mov
lds
imul
loope
inc
and
jmp
icebp
sub
xchg
adc
mov
fwait
push
dec
dec
mov
cmpsb
js
adc
stos
mov
sbb
aam
jg
lahf
imul
adc
sbb
mov
or
add
cmpsl
push
data16
dec
mov
cmp
mov
imul
popf
je
test
lea
xchg
fmuls
add
sub
xor
dec
push
mov
roll
dec
push
scas
cld
mov
ret
xor
pushf
xchg
fs
mov
std
loope
repz
adc
std
xchg
jb
test
xor
mov
in
and
mov
lahf
jbe
adc
lret
fs
or
negb
mov
sbb
xchg
mov
ds
or
aas
ja
aas
pusha
sub
dec
in
mov
xor
pop
jg
data16
and
adc
adc
and
inc
mov
mov
iret
xchg
lock
call
cmp
and
inc
or
mov
sbbl
dec
and
cmp
jbe
jle
mov
popf
in
inc
fdivs
dec
imull
pop
inc
nop
imul
lcall
xor
xchg
sub
into
push
jmp
xor
testb
jecxz
adc
ljmp
fcmovnbe
cwtl
cmp
add
sub
mov
insb
mov
inc
push
push
mov
dec
xchg
push
dec
in
pusha
mov
jnp
and
pusha
in
jbe
mov
sarb
ja
mov
xchg
lea
mov
out
push
rcrl
push
mov
adcb
gs
sub
pop
sub
mov
ja
and
js
adc
lods
dec
subl
mov
ss
ret
out
inc
mov
imul
scas
mov
or
jl
paddd
xorb
pop
int3
mov
stc
lahf
gs
and
arpl
mov
popf
sti
stos
jno
push
or
add
adc
and
mov
add
std
or
movsb
mov
out
dec
and
and
mov
mov
ret
inc
dec
bound
adc
dec
outsl
adc
pusha
ds
inc
aas
xor
testl
add
pushf
xchg
sti
xlat
xor
push
mov
jbe
mov
lock
jae
insl
into
xchg
sbb
pushf
sbbl
int3
fldenv
fbld
mov
fiadds
rorb
add
and
shrb
xchg
ret
insb
ja
lretw
adc
fwait
das
mov
mov
daa
add
mov
rcrb
inc
call
cmc
xor
add
jb
call
mov
or
jp
rclb
inc
inc
add
jns
sbb
pop
mov
jmp
jnp
sub
cmc
inc
xchg
or
mov
push
outsl
sub
je
inc
adc
cmp
inc
xorb
push
icebp
cld
xor
lds
jnp
and
insl
jg
loopne
mov
out
fwait
imul
xchg
cmp
adc
sbb
bound
push
or
aam
jg
outsl
inc
shlb
sahf
mov
push
add
jl
jnp
xchg
repz
clc
dec
push
jle
pop
xor
and
fadd
popw
mov
push
xchg
in
or
jmp
inc
jg
sbb
enter
jne
xchg
movsl
mov
jno
test
stos
testl
dec
int3
xchg
push
divl
pop
and
faddl
andl
pop
adc
or
push
dec
adc
mov
inc
daa
nop
mov
cs
orb
dec
pop
xchg
shrl
xor
jb
jl
jno
add
dec
in
lret
mov
popf
iret
mov
lock
inc
jmp
mov
hlt
scas
and
enter
lock
je
movsb
rcll
inc
das
sbb
dec
inc
inc
dec
testb
movzwl
mov
insl
sti
or
jl
mov
jae
icebp
jnp
push
in
popa
lret
mov
andl
imul
and
xor
les
pop
test
pop
dec
push
add
sahf
sub
jno
int3
add
inc
aad
push
jg
push
mov
sahf
mov
pop
push
jecxz
cmpb
psubd
cmp
data16
fucomp
js
cltd
cltd
in
cwtl
mov
xor
adc
scas
int
xchg
data16
jg
rdtsc
and
dec
mov
mov
sub
cmp
lods
shll
sarb
and
out
pop
add
push
xchg
cmp
scas
inc
icebp
pop
xchg
icebp
lret
or
jg
pop
push
or
push
movsb
pop
add
push
sti
test
push
mov
xor
push
mov
xchg
in
faddl
insl
mov
sub
dec
or
stos
sub
lods
cmp
sbb
push
or
or
mov
dec
test
fstpl
push
xchg
sub
sbb
pushf
loope
mov
daa
inc
jns
sbb
mov
les
mov
test
push
les
cmp
pop
test
cmpsb
push
jle
and
les
out
ret
or
dec
cmpsl
je
lods
adc
xchg
imul
repz
sbb
and
add
insb
push
mov
sub
pop
cmp
in
mov
dec
mov
aas
dec
imul
cld
insb
ss
inc
jmp
iret
scas
mov
cmp
push
outsl
xchg
loop
dec
adc
jg
ret
mov
das
cmp
add
sarl
in
or
inc
cmpsb
sbb
xchg
inc
stc
into
lds
xchg
lahf
add
in
popf
bound
mov
out
aas
outsb
scas
pop
test
jmp
inc
lock
mov
push
popf
int
jne
mov
pusha
cmpsb
add
jns
sub
test
cmpsb
jge
dec
fisttpl
jbe
and
into
jl
dec
or
shrb
add
lahf
sbb
cmp
not
sub
std
mov
push
movsb
rorb
inc
test
into
mov
test
adc
dec
mov
lret
std
fldt
aam
mov
pop
mull
inc
mov
mov
push
mov
outsb
push
stos
andl
mov
out
out
mov
aam
sub
pop
xor
iret
mov
jecxz
int
mov
stc
testb
sbb
sbb
sub
push
xchg
cli
mov
stos
push
or
mov
sub
shl
outsl
sbb
sbbb
pop
pop
mov
sbb
cltd
repz
push
xor
fistpll
mov
cs
cmp
mov
lret
and
sub
rolb
enter
lock
leave
cwtl
sub
outsb
xor
mov
dec
cli
repnz
fwait
xor
xchg
mov
nop
lahf
insb
repnz
dec
call
sbbb
cwtl
pop
addr16
fcompl
pop
shll
hlt
push
cwtl
and
cmp
push
pop
pusha
adc
ficoms
repnz
cmc
dec
movsl
jne
adc
cld
add
or
fldenv
pop
add
testl
xor
xchg
mov
mov
mov
out
xchg
out
pop
cmc
jg
xchg
cs
ja
inc
pop
sub
mov
add
ret
cmp
adcl
push
xchg
cld
lea
int
add
sub
dec
ret
pop
test
mov
outsb
cmp
sbb
inc
dec
xchg
push
cmp
adc
push
jecxz
movsl
stos
arpl
inc
inc
cld
incb
xchg
cmp
inc
xchg
or
dec
cmp
enter
scas
xchg
cmp
jns
push
clc
dec
sub
jge
mov
pop
dec
xor
mov
adc
lret
lret
adc
shlb
mov
cmpsl
jecxz
cmpb
mov
sub
sbb
std
in
push
cs
jge
inc
fdivp
leave
pop
sbb
insl
adc
push
jo
test
cs
sti
dec
xchg
xchg
out
cs
int
jb
add
pop
xor
sub
mov
mov
push
sub
sub
cmp
mulb
sbb
dec
dec
pop
jp
sbb
ss
movb
loop
dec
inc
cs
sub
lock
mov
ret
or
loope
mov
bound
mov
fdiv
mov
push
loope
push
mov
pop
rep
or
jecxz
ret
pop
and
in
dec
imul
sub
mov
sub
or
xchg
lods
ret
adc
push
adc
xchg
add
lret
das
adc
dec
gs
add
nop
daa
mov
inc
sub
in
or
out
mov
shrl
outsb
scas
xor
sbb
ds
out
mov
jns
and
shrb
jbe
inc
pop
inc
push
pusha
mov
cmp
pop
pop
xchg
lods
fcomi
push
xor
lods
jo
iret
mov
push
lds
push
in
fucomp
cld
in
loop
lcall
mov
fmul
outsb
lret
mov
movsl
mov
mov
popa
xor
push
fisubs
xchg
sbb
je
sbb
rorl
xlat
add
pop
pushw
cmp
mov
sbb
mulb
mov
cli
das
mov
mov
xchg
scas
cmpsb
lret
push
inc
scas
test
cmp
jl
inc
fucompp
mov
xchg
jecxz
sub
mov
icebp
mov
add
xor
in
fwait
sub
sub
pop
rclb
sub
rorb
pop
lret
pop
cmp
in
sub
xor
jne
cld
inc
out
cltd
clc
fnstcw
bound
setle
and
sbb
add
lcall
push
scas
aas
cmp
mov
ljmp
int3
negb
cs
sbb
rcl
add
es
and
es
js
js
push
aam
gs
mov
mov
ja
int3
in
jle
scas
sub
add
jae
or
idivl
xor
test
call
adc
pop
ss
les
gs
xchg
popa
adc
xchg
push
fiadds
testb
xor
and
pop
stos
fildll
xchg
sahf
test
jo
nop
mov
sbb
push
add
push
jge
outsl
orl
out
mov
js
push
scas
js
sub
inc
in
ja
and
aas
pop
xor
add
sub
push
lret
mov
les
dec
outsl
jecxz
je
jno
dec
mov
outsb
loope
dec
jl
or
test
inc
dec
rclb
decl
mov
inc
inc
cmp
cmp
das
mov
pop
gs
je
shr
mov
fsubl
aaa
jnp
sbb
add
std
cltd
xchg
xlat
xchg
and
pop
jmp
lahf
ror
test
imul
lods
mov
test
aad
inc
js
and
in
sub
jmp
data16
add
sahf
movsl
cli
mov
push
pop
mov
in
sbb
dec
inc
mov
jnp
mov
xchg
lret
or
or
addl
test
adc
loopne
fs
dec
jp
jmp
push
shrb
jno
stos
hlt
sti
test
xchg
pop
sub
clc
fwait
rcr
mov
ficomps
pop
mov
cmp
popa
inc
gs
pushf
lea
cli
mov
lds
and
mov
sub
cmp
or
testb
pop
pop
push
nop
outsb
lahf
cli
movsl
js
cmp
fucomip
add
mov
into
mov
and
ljmp
or
cltd
push
push
out
mov
iret
gs
jle
aam
loope
xorl
xlat
cmp
pop
or
les
pushf
dec
fildl
jg
jge
shrb
and
push
enter
loope
lds
pop
call
jecxz
mov
lods
mov
pop
lret
xchg
ds
lcall
push
dec
mov
jo
xchg
test
js
je
imul
xor
loope
stos
mov
pop
mov
adc
movsb
mov
xchg
in
add
dec
xor
cmp
popl
fwait
aaa
push
gs
aam
pop
xor
aam
orb
fdivl
cltd
fmull
jecxz
push
push
aad
mov
ficoml
xlat
cwtl
pop
lods
pop
mov
movsb
cld
cmp
cmp
or
mov
out
adc
inc
or
mov
scas
sti
ljmp
insl
jp
xor
test
test
in
mov
test
pop
subb
in
fwait
or
push
gs
dec
adc
or
and
dec
jno
test
add
mov
int3
nop
bound
icebp
popa
or
outsb
mov
roll
clc
cld
ja
jle
xchg
xchg
scas
cmpsl
daa
push
add
sub
dec
cmp
loop
mov
inc
mov
or
out
sub
inc
xchg
call
push
into
pop
and
loope
adc
sarb
movsl
mov
adc
out
jae
mov
mov
add
sub
push
pop
inc
aas
insl
pop
fwait
out
cmpsb
shl
lret
dec
cmpsb
jecxz
movsb
dec
bound
cmpsb
in
xor
out
mov
fldenv
ljmp
mov
or
test
xchg
pop
xchg
pcmpeqb
push
sub
mov
fstl
test
dec
aam
out
add
sbb
repnz
mov
add
cmp
pop
inc
es
mov
cmp
fisttps
xor
mov
aas
inc
mov
stos
xor
xor
cmpsb
jp
stos
push
and
xchg
pop
int3
fs
lahf
mov
push
push
pop
add
mov
aas
mov
pushf
push
movsb
and
scas
rcll
cmpsl
and
mov
stos
mov
jnp
fisubs
inc
popf
jecxz
jl
cmpsl
inc
cli
data16
push
insb
jae
rclb
test
inc
rcr
dec
push
mov
add
cld
add
dec
inc
add
xchg
push
mov
loope
lds
or
mov
nop
nop
mov
shll
xor
cmp
loope
cmp
xor
lea
jnp
cmp
push
mov
mov
mov
je
push
sub
mov
or
je
insb
aaa
ja
idiv
in
in
ffree
shll
add
sub
mov
xor
mov
data16
mov
push
adc
xchg
lahf
push
adc
mov
pop
scas
cmp
mov
movsb
inc
andl
xor
getsec
ret
jne
fmulp
mov
sbb
hlt
sub
mov
mov
aad
adc
movsb
push
dec
mov
inc
dec
mov
es
mov
dec
sahf
sub
dec
int3
xchg
js
mov
insl
mov
sbb
mov
add
je
loopne
clc
cli
jmp
out
cmc
xchg
xchg
push
out
es
mov
sbb
push
sub
and
fsubrl
out
mov
ljmp
xchg
sub
rcr
push
push
in
dec
dec
push
inc
in
outsl
inc
or
ds
xchg
shrb
cmp
push
ret
lahf
lret
cmp
sbb
xor
not
and
sti
jge
mov
push
sarb
adc
nop
inc
std
jne
test
dec
arpl
jae
dec
adc
ror
sbb
jl
mov
add
mov
call
shlb
mov
jae
dec
push
stc
push
pop
movsb
loop
fiaddl
inc
sbb
jecxz
aam
in
in
test
mov
xchg
sarl
sub
fwait
pop
shr
scas
and
mov
outsb
xor
es
mov
pop
scas
sahf
mov
aam
cmpsl
scas
sbb
dec
jle
ds
cmp
inc
inc
xchg
fildl
idiv
cli
sbb
add
mov
orb
int
int
push
outsb
pop
xchg
adcl
mov
into
js
xor
xchg
cmp
mov
inc
pop
stc
xchg
pop
ret
test
and
mov
ljmp
push
ret
xchg
std
jg
aam
sub
jno
pop
movl
dec
xchg
sub
xchg
mov
movsw
mov
in
das
divl
push
sbb
bound
outsb
pop
adc
jg
dec
sti
push
push
sbb
pushf
ljmp
sbb
adc
adc
xchg
sbb
loopne
or
cmp
jno
and
ds
pop
adc
xchg
inc
cmp
adc
and
xor
or
and
push
cmp
outsb
xchg
imul
adc
fwait
je
push
cmp
rorb
enter
inc
push
jmp
cmp
adc
js
adc
cltd
or
push
aas
mov
dec
fxch
dec
push
insl
arpl
push
lret
push
push
xchg
inc
int3
jbe
dec
xor
test
sub
or
adc
sub
mov
adc
scas
cmp
out
aas
inc
repnz
or
sub
rolb
scas
iretw
mov
stos
test
pop
adc
roll
or
dec
test
push
mov
fidivrl
test
cltd
jb
loope
adc
aaa
mov
or
mov
push
adcb
adc
jno
std
sbb
je
xchg
add
notb
mov
mov
add
mov
or
jne
jae
mov
mov
push
add
xor
test
jbe
adc
pop
ljmp
jge
xor
dec
sub
push
orl
cltd
cmp
adc
in
pop
ret
mov
filds
dec
loop
dec
mov
pusha
xchg
aad
jecxz
xchg
xor
or
lock
lret
int3
or
sti
dec
sar
push
jecxz
mov
jecxz
mov
jmp
push
pop
dec
xchg
sbb
or
jne
mov
or
dec
aam
add
mov
iret
shll
mov
xor
lcall
jno
fcom
int
orl
jl
in
orl
and
hlt
cltd
dec
xchg
test
es
jg
mov
pop
test
push
push
mov
lods
ret
cmpsl
xor
xchg
shlb
shl
push
pop
push
jge
outsl
rclb
push
push
fidivs
in
fiadds
mov
mov
daa
jne
jmp
mov
cmp
lea
aad
inc
jle
int
jae
inc
out
sub
not
mov
and
int3
cmp
sub
push
and
or
clc
lret
inc
out
clc
lcall
aas
ja
pop
sti
mov
jle
push
and
out
lcall
jge
add
jmp
in
sub
mov
dec
and
ja
nop
outsb
sti
jg
lds
pusha
ficompl
imulb
cli
adc
out
inc
or
inc
or
les
lret
jnp
push
lcall
mov
and
leave
test
cmp
mov
xchg
in
aad
xchg
js
ja
test
push
aad
in
sub
repnz
add
and
lret
xchg
cmp
shrl
out
call
xor
pop
push
test
cmp
into
adc
pop
test
cmpsb
lea
test
adc
les
xor
jl
inc
js
push
xchg
sub
cmpsl
call
push
sub
cmpl
jg
mov
outsl
jno
and
inc
lods
adc
jl
imul
cmp
out
jmp
mov
adc
rcrb
jns
add
push
cltd
or
ret
out
inc
mov
rorl
push
pusha
rol
add
mov
icebp
jae
push
popa
add
mov
xor
push
dec
mov
data16
cmpsb
mov
stos
pop
mov
subl
sbb
push
mul
fiaddl
dec
test
rolb
call
add
movsl
out
xor
mov
icebp
xchg
clc
inc
push
add
inc
jge
push
dec
sub
mov
mov
pop
stc
js
mov
push
xchg
mov
jnp
jle
enter
mov
mov
cld
push
outsl
or
in
pop
dec
aaa
fldenv
loop
jno
mov
jl
lret
add
fsubrp
push
gs
cmpsl
mov
loopne
add
popf
mov
test
fildll
data16
out
inc
xchg
ss
hlt
ret
outsb
cmp
sbb
sub
dec
xchg
inc
into
in
lea
repz
pop
mov
aam
aaa
clc
mov
inc
jp
mov
mov
push
mov
stos
fdiv
icebp
call
adc
icebp
mov
dec
xchg
aas
mov
pop
xlat
lods
mov
out
dec
out
push
inc
outsb
daa
mov
out
cli
add
jbe
test
fs
cli
aad
push
xor
jl
sub
bound
loopne
mov
and
sub
aam
add
push
cli
adc
cmpsb
fwait
xor
dec
in
icebp
adc
cmp
movsl
stc
push
insl
sub
pop
jb
rolb
sub
dec
cmp
test
jp
inc
and
mov
adc
test
sahf
addl
add
scas
mov
inc
or
or
mov
or
and
sub
push
pop
lret
and
pusha
push
repz
pop
faddp
outsb
mov
lds
fstpl
insb
jbe
adc
lret
in
test
int
dec
mov
sbb
ljmp
sub
jno
push
ss
cmpsl
shr
xchg
adc
add
das
jns
cmpsl
jb
out
push
outsb
mov
inc
mov
loope
mov
mov
repnz
lea
lcall
xchg
leave
mov
fisttpl
jne
adc
clc
sarb
cltd
sti
in
mov
push
mov
push
xor
movsl
lods
xor
lods
sub
cmp
xchg
popa
push
jp
movsl
dec
shlb
int
test
mov
jne
ss
jo
pop
or
xlat
cmp
mov
and
push
repnz
mov
or
add
dec
fcmovu
sbb
hlt
pop
bound
jmp
insb
loope
mov
sarl
test
and
insb
xchg
or
fldcw
call
std
cld
cltd
xchg
ja
push
fs
adc
pop
or
or
lcall
add
push
pop
daa
dec
and
cli
xor
aaa
xor
call
pushf
repnz
xchg
in
add
push
test
inc
std
out
and
jb
fistl
xchg
mov
or
jb
test
xor
lahf
aad
mov
dec
shll
xchg
mov
scas
lcall
jmp
xchg
mov
subl
cs
sahf
xchg
xchg
xor
mov
cs
ds
imul
out
imul
and
cmpsb
push
es
icebp
jmp
int3
negl
adc
jnp
loope
out
sub
cmc
stc
or
push
out
xchg
popf
sub
test
pop
push
insl
subl
fisubrl
shll
hlt
rorb
mov
xchg
mov
mov
test
sti
sbb
outsb
imul
cli
shrb
mov
push
insb
jo
notl
sbbb
into
and
sub
pop
sub
mov
xor
mov
dec
aam
sbb
mov
push
xchg
pop
outsl
jne
lods
pop
mov
and
cmp
push
and
lret
mov
aas
inc
adc
and
in
gs
leave
je
movsb
lock
sub
xor
ja
fwait
aas
lea
andl
push
xchg
mov
mov
add
inc
sub
adc
imul
fcoml
insl
add
nop
cmp
fcmovu
jle
pop
jae
lret
xchg
mov
sar
dec
mov
adc
jne
shlb
stos
and
xchg
test
mov
mov
push
pop
cld
aas
and
movsb
int3
jle
jl
cmp
dec
cs
daa
xorl
push
std
sub
mov
fmuls
cmp
sahf
outsl
cmp
shll
dec
aam
mov
in
lods
ljmp
stc
xchg
pop
inc
fcmovu
int
inc
aas
jecxz
ret
je
insb
sbb
mov
pop
out
les
pop
fst
mov
insb
enter
mov
pop
push
arpl
sar
fsubr
aad
push
pushf
ljmp
inc
fldcw
sahf
dec
lock
sbb
ljmp
xor
pop
repz
adcb
loopne
xchg
adc
cmpsl
pop
movsl
cltd
xor
ss
push
push
adc
inc
fists
pop
xor
mov
scas
int
jo
and
inc
mov
add
repnz
jl
xor
mov
int3
push
into
rcrb
inc
jp
xchg
cmp
test
and
xchg
outsb
sbb
lock
cltd
dec
xor
xor
out
rcl
ljmp
xor
pop
mov
pushl
push
int
sbb
xor
push
fs
in
std
jecxz
fistps
jp
jo
add
cli
and
int
cs
xchg
push
cmpsb
or
pop
sub
sub
or
scas
xchg
dec
inc
xor
addr16
cmp
loop
pop
and
jge
or
dec
xchg
icebp
sti
or
mov
les
pushf
addb
cmp
sbb
lret
and
fs
xchg
pop
mov
imul
pop
fistpl
mov
mov
fists
daa
add
cwtl
lods
test
rolb
inc
adc
pusha
fwait
pop
xor
pop
mov
sarb
repz
lds
ds
pusha
mov
popl
punpckldq
xchg
mov
mov
dec
pop
std
repz
into
cmp
fildll
pop
es
aad
mov
mov
int3
in
jb
xchg
ja
jne
xchg
pop
test
out
aaa
jg
mov
outsb
inc
add
push
ficoms
lea
test
xor
int3
jl
lock
lcall
inc
mul
xchg
and
test
loopne
sub
mov
inc
hlt
imul
in
mov
inc
cmp
adc
add
cwtl
int
sbb
or
jle
mov
outsl
ja
adc
jbe
ret
cld
dec
dec
dec
add
dec
sub
pop
out
das
sahf
pop
lret
sbb
push
sbb
sub
adc
xor
scas
cld
pop
xor
daa
iret
shrl
or
xor
xor
cmc
mov
in
mov
nop
cltd
mov
and
scas
jecxz
cmp
je
shl
cli
pop
lret
sbbb
add
ret
jp
cmp
leave
sbb
lock
dec
mov
shlb
sub
bound
or
cmc
sahf
or
sahf
aam
rcll
pop
xlat
ja
pop
dec
sub
or
inc
pop
std
push
frstor
inc
cmp
lret
outsb
fmull
mov
out
sbb
mov
insl
int
out
es
cltd
and
inc
push
xor
xchg
test
movsb
leave
pop
ret
xlat
xchg
idivb
idivb
mov
subb
inc
mov
lret
xchg
pop
or
add
cmp
insb
fistpll
or
es
lret
xor
or
cmp
andl
jge
xor
xchg
aad
push
insb
add
mov
sub
les
pop
scas
push
in
loope
stos
dec
dec
cmp
test
les
jmp
enter
or
mov
mov
and
mov
or
jp
scas
cli
dec
pop
sub
mov
arpl
xchg
pop
sbb
mov
mov
and
das
fcomps
pop
bound
jnp
bound
fwait
pop
inc
xor
shrl
sahf
adc
push
into
fsts
mov
cmp
pop
clc
dec
mov
aas
faddl
ret
scas
xchg
leave
in
adc
sbb
ret
iret
sub
and
bound
sbb
dec
jmp
ss
xchg
lds
adc
test
inc
add
sub
stos
dec
dec
sbb
sarb
je
ret
xor
frstor
adcb
scas
mov
adc
mov
cmp
push
dec
shl
and
arpl
cld
mov
add
xor
pop
jnp
cmp
outsl
mov
and
out
jo
movsl
xchg
loope
push
cmp
clc
sbb
inc
mov
fwait
and
mov
test
lcall
mov
cmp
inc
jne
mov
mov
mov
push
jge
cmp
xchg
xor
jae
mov
gs
subl
mov
test
jo
inc
add
and
std
mov
fsts
dec
sub
xor
nop
ret
inc
sbb
mov
mov
cmp
adc
js
test
adc
pop
lock
add
popa
inc
inc
cmp
push
or
add
xor
arpl
mov
mov
js
jl
aam
inc
pusha
xor
movsl
data16
cltd
jns
shr
repz
push
dec
loopne
or
movq
sub
mov
dec
inc
repz
pusha
dec
pop
in
rcrl
shrb
pushf
mov
cmp
lret
cmpl
not
sbb
lret
mov
adc
sahf
xor
sub
cmp
jl
mov
arpl
mov
aas
movsb
test
outsb
popf
adc
cmp
fwait
inc
pop
xor
xor
loope
inc
sub
pushf
in
lods
sarl
sbb
mov
mov
scas
inc
bnd
push
pop
and
cmp
dec
mov
ret
mov
xchg
cmp
mov
adc
pop
xlat
mov
ja
pusha
jno
pop
mov
cmp
addr16
mov
ljmp
ret
ret
int
outsb
cmpb
pop
push
mov
sbb
in
stc
dec
add
callw
cmp
pop
xor
ficoml
push
leave
pop
push
dec
mov
fisttps
or
aam
lahf
sub
daa
lahf
pop
test
or
into
int3
xchg
pop
lods
xor
fcmovne
rorl
xchg
xor
mov
adc
out
mov
in
and
icebp
into
repz
addr16
jno
insb
pop
cmp
decb
lret
jb
jno
adc
push
xchg
movsb
fmuls
das
rcll
addr16
fldenv
rcrl
jo
roll
bound
into
shlb
or
shlb
mov
shll
negl
cmpsl
mov
mov
xor
stos
or
pop
enter
imul
mov
dec
scas
das
adc
inc
int
and
jl
fxch
mov
pushf
pushf
sbb
push
dec
xchg
out
popa
fs
jbe
icebp
pop
push
incl
test
xchg
jmp
add
cmp
shlb
sbb
push
movsl
or
add
cmc
jbe
movsl
sbb
push
in
inc
in
loopne
out
inc
push
dec
shlb
adc
xor
dec
into
adc
dec
test
fisttps
sbb
adc
outsb
insb
jo
sub
cwtl
or
mov
test
cmp
and
mulb
ljmp
sub
insl
outsb
movl
rcrl
xor
mov
mov
push
sub
aas
add
orb
and
loopne
push
inc
movsb
bound
in
pushf
in
pushf
iret
xchg
sbb
loopne
push
dec
mov
fdivrl
xchg
stc
inc
jp
bound
fwait
push
fiadds
dec
shlb
cs
test
ret
mov
push
je
jb
lods
push
or
xchg
fs
testb
fldt
cmp
pop
imul
add
and
inc
cmp
dec
mov
adc
jae
mov
dec
divb
addr16
jle
idivl
stos
pushf
jmp
mov
call
idivl
xchg
mov
std
mov
mov
fimuls
mov
push
lds
ret
pop
mov
inc
insl
jae
aam
loop
push
fs
mov
sar
mov
push
jmp
jle
xchg
fbld
xchg
out
jo
test
out
xor
in
andb
dec
dec
ret
sbb
test
les
imul
cld
loop
jns
je
pushf
jge
imul
pop
pop
popf
ds
adc
xchg
jne
call
mov
push
movsl
out
pop
lods
mov
shl
push
push
mov
push
out
sub
roll
sub
mov
jns
jbe
jl
push
mov
mov
andl
shrl
out
mov
std
add
jno
adc
inc
or
dec
test
sbb
inc
repz
push
xchg
pop
mov
inc
enter
sbbl
cwtl
ss
push
movl
cmp
test
outsb
or
push
stc
mov
test
add
popf
xchg
loopne
pop
xchg
inc
sbb
adc
cmpb
mov
inc
push
shll
shrb
inc
outsl
jmp
lods
add
sub
outsb
test
jne
lcall
and
pop
add
add
mov
jno
inc
mov
in
loop
mov
adc
mov
mov
pop
xchg
or
ret
movsb
mov
and
push
pushl
pop
xor
push
xchg
jge
clc
and
and
in
push
loop
pushf
divl
adc
or
mov
push
andl
push
cmp
add
mul
lahf
jne
lea
dec
popf
pop
in
leave
xor
xlat
adc
mov
dec
shll
inc
adc
sbb
mov
inc
stc
mov
nop
jo
push
cmp
push
sub
popa
movsb
ljmp
cmp
lret
test
mov
test
mov
inc
jno
mov
pop
nop
add
jle
in
pop
icebp
add
push
test
mov
lea
popa
icebp
dec
in
sbb
xchg
push
sbb
pop
rorb
sub
sub
inc
in
fdivs
pop
aaa
or
adc
fiaddl
cmpsl
sbb
mov
fistpl
fs
mov
cmp
int3
pop
in
imul
loopne
or
xor
daa
lock
cmpsb
cmc
mov
imul
pop
rcrl
xlat
cmp
add
mov
add
add
test
adc
mov
fdivl
and
stos
xchg
movsl
jo
sbb
movsl
jb
mov
sbbb
lahf
popa
test
orb
lret
ljmp
pop
cmp
push
jle
enter
fdivrs
adc
lods
loop
pusha
test
push
adc
ds
icebp
movsb
pop
je
cld
xchg
xchg
or
out
push
pushf
and
stos
ss
add
and
je
xchg
les
jge
mov
adc
pusha
dec
jp
xor
sub
repz
cld
pusha
pop
ds
cltd
lods
fiaddl
fidivl
ficomps
mov
insb
mul
mov
les
sti
adc
ljmp
std
fdivr
cmp
sbb
shlb
sub
push
inc
sbb
mov
sub
mov
daa
dec
stos
inc
push
repz
shl
shl
aaa
mov
out
or
jo
inc
out
call
call
mov
jl
fisttpl
popf
imul
rcll
lcall
push
adc
mov
stos
xor
push
dec
data16
mov
test
or
loop
pop
sbb
js
mov
or
jb
push
loope
into
das
xor
pop
pop
push
sahf
rcl
xchg
popa
int3
in
cld
es
aas
push
mov
stos
xchg
adc
ss
repnz
xchg
aad
loope
xor
test
mov
dec
cmpsb
cmp
imul
fst
mov
or
outsl
mov
test
fs
lahf
pushf
andl
dec
and
iret
icebp
je
mov
mov
pop
add
rcl
push
push
inc
mov
test
rcrb
mov
xchg
xchg
in
call
mov
iret
push
stos
pop
pushf
mov
mov
nop
inc
or
cmc
pop
in
cwtl
pop
push
pusha
movsl
xchg
cmpsb
lock
pop
jo
sbb
mov
addr16
push
push
mov
jns
pop
xor
daa
xchg
xor
in
sbb
jge
popf
cmp
cltd
mov
inc
jnp
pop
mul
sub
add
push
inc
mov
or
and
aad
mov
pop
in
sbb
popf
adc
mov
stos
in
pop
incb
mov
jnp
cmc
xchg
mov
daa
leave
pcmpgtd
int
mov
das
in
or
push
inc
lods
inc
push
jecxz
mov
add
outsb
call
out
aad
cmp
std
mov
jg
jl
inc
push
mov
outsl
lods
xchg
movsl
fldenv
js
cmp
lret
jecxz
scas
mov
je,pn
dec
add
outsb
xorb
mov
jecxz
mul
pushf
insb
mov
ret
mov
fiadds
mov
jno
mov
aad
jae
mov
outsl
jmp
mov
dec
add
sub
adc
jmp
mov
fcomps
inc
popf
sbb
and
and
pop
jo
xchg
hlt
sbb
arpl
cs
sahf
xchg
dec
xor
es
add
mov
mov
cmpsl
ss
inc
in
fadds
mov
shrl
pusha
arpl
out
test
mov
lods
xchg
sbb
enter
repnz
cmp
cld
stc
or
push
dec
ss
sbbb
aam
lea
adc
add
loopne
sub
mov
add
sbb
lea
pop
ljmp
mov
sbb
imul
lds
add
aaa
dec
in
loopne
dec
or
je
lds
dec
fisttps
push
add
mov
scas
mov
adc
jle
mov
dec
push
lock
mov
mov
jmp
fisttps
push
rolb
push
push
adc
pop
dec
pop
movsb
popa
stc
aam
sbb
stos
mov
xor
pop
pop
and
pop
mov
and
pop
inc
jp
and
imul
in
jae
rclb
das
repnz
push
cmp
je
adc
and
mov
add
cs
frstor
sub
lods
lods
sti
xbegin
xor
daa
out
dec
imulb
mov
mov
or
pop
inc
iret
stos
mov
add
dec
push
lahf
outsl
flds
sbb
pop
int
sub
stc
dec
pop
fs
incb
cmp
sahf
ljmp
andb
daa
mov
cmp
test
and
shlb
mov
pop
jns
fstps
cmc
and
sahf
mov
pop
sarb
xor
inc
iret
cwtl
scas
movsl
pushf
dec
out
pop
inc
push
jae
fdivr
xchg
pop
test
and
add
adc
sub
mov
pop
stos
scas
xchg
jno,pn
sub
xchg
jle
icebp
xchg
push
mov
lcall
clc
nop
pop
sub
jns
in
popf
or
sbb
adc
in
add
icebp
cmpsl
mov
movsb
lds
sbb
jecxz
mov
push
mov
lock
mov
popf
pusha
dec
cmp
repz
inc
cs
fistps
repnz
nop
lahf
xor
push
jo
mov
xorl
dec
inc
imul
lahf
ds
xchg
loope
fistl
push
outsl
push
lret
mov
pop
int3
imul
xor
iret
mov
sub
xchg
add
dec
adc
inc
hlt
xor
enter
loop
sbb
jp
jb
insl
mov
pop
sub
jbe
inc
pop
stc
jne
push
mov
in
push
mov
out
jp
xor
stos
data16
pop
push
mov
pop
pop
xor
pop
pusha
stos
movsb
and
pop
mov
test
sbb
add
aad
std
lds
data16
xchg
ret
jns
or
inc
push
add
scas
mov
adc
out
imul
das
arpl
dec
lods
mov
imul
ficoms
lret
sub
scas
mov
lcall
aam
call
dec
loope
lahf
sbb
loope
out
pop
and
or
dec
or
sub
sti
test
and
inc
jae
addr16
out
push
in
test
ss
pop
mov
inc
bound
in
xchg
sbbb
add
pop
sub
faddp
or
mov
out
sub
mov
or
sbb
clc
xchg
cli
or
sub
lods
push
jnp
push
or
pop
cmp
xchg
lods
fnsave
mov
mov
inc
fsts
stos
jno
add
aad
pop
adc
mov
xchg
popf
daa
popf
pop
sbb
popa
inc
mov
inc
add
lret
add
mov
add
inc
aam
mov
sub
loopne
adc
push
cmpsl
pushf
out
clc
pop
aam
dec
xor
je
dec
sub
xor
or
cld
jecxz
xlat
in
xor
fimuls
mov
aad
ljmp
lret
clc
scas
bnd
out
or
addl
mov
repnz
xchg
std
jo
pushf
mov
xchg
cmp
adc
aas
test
test
inc
fdivs
cmp
daa
jbe
cmpsl
push
sub
leave
out
mov
int
xchg
xchg
xchg
inc
adc
repz
aad
lea
sbb
sbb
pmaddwd
mov
arpl
outsb
push
pusha
lea
rcll
andb
and
pop
add
adc
sbb
or
xor
push
je
sub
int3
pop
sub
sub
mov
jmp
xor
push
pop
mov
aaa
popf
inc
inc
xchg
outsb
pop
sub
push
adc
cmp
pop
sub
xor
ss
sub
shrb
xchg
repnz
xor
mov
sbb
cs
insb
inc
popf
inc
pop
roll
mov
mov
cmp
imul
cltd
mov
cmp
or
add
int
jp
jecxz
sub
mov
stc
and
mov
imul
jo
or
cmc
sub
adc
push
fdivrs
sub
xchg
push
ds
cmp
out
insb
sub
lock
pop
clc
inc
je
add
sahf
xor
push
mov
or
sbb
inc
dec
cmp
lret
test
fisttpll
mov
in
push
outsl
fld
das
dec
dec
mov
les
push
shlb
rolb
dec
push
pop
pushf
add
xor
mov
fildll
cmp
pop
sbb
adc
les
xchg
mov
cmp
pop
adc
testb
or
add
cld
xchg
xchg
sub
add
mov
adc
mov
sbb
jae
push
sub
inc
clc
lock
push
xor
add
mov
xor
sbb
lods
add
sbb
ds
mov
push
cmp
jno
repz
sub
adc
cmc
push
movlps
push
fstpt
add
pop
mov
jp
std
cmp
dec
popl
sar
xchg
imul
rolb
js
jmp
adc
adcl
cmc
dec
jmp
or
stos
call
add
jnp
out
sbb
fdivs
cwtl
sbb
cwtl
ss
ljmp
nop
test
cltd
cmpl
fidivrl
out
xor
ss
jnp
in
sahf
insb
or
lds
mov
cmpsl
ljmp
movsb
das
enter
pop
add
mov
pop
dec
in
pop
rcrb
repz
cmp
out
jo
jns
ss
mov
sub
jno
push
sahf
sub
mov
arpl
cmp
mov
mov
popf
xor
sub
inc
shl
dec
bound
aam
jns
add
repnz
add
jns
imul
mov
inc
push
cwtl
std
sbb
hlt
rorl
sub
pop
jbe
mov
pop
cmpsb
pop
mov
dec
mull
or
hlt
test
cmpb
rorb
in
pop
inc
stc
cs
fidivl
dec
jge
lods
js
jae
aas
in
mov
inc
dec
push
push
mov
sub
inc
cld
pushf
js
add
cmpsb
loop
shl
loopne
sub
test
xchg
push
and
push
dec
cmpsb
mov
mov
outsb
mov
cli
jge
push
or
and
das
or
xchg
xlat
jb
ret
nop
xor
dec
in
mov
fsubrl
data16
mov
and
inc
mov
xchg
sbb
sub
out
lret
aad
mov
mov
adc
lds
flds
push
fwait
or
gs
push
popf
mull
outsl
ja
mov
sbb
jno
xchg
sbb
and
sub
sub
ds
add
or
outsl
push
ret
sub
aas
cmp
rorl
xorl
cli
lods
fstpl
pop
insl
xchg
mov
test
lret
fs
mov
popa
xor
std
sub
xchg
stos
clc
arpl
out
sub
idivl
sub
sub
add
call
cmp
outsb
hlt
std
sbb
pusha
leave
repnz
cld
jb
mov
js
and
out
pushf
movsl
lea
cmp
bound
std
dec
xorl
shlb
aas
arpl
sub
and
sbb
adc
inc
aam
movntps
jmp
lret
jo
in
mov
je
adc
arpl
xchg
lcall
cltd
lds
ret
dec
cmpsl
cltd
int3
lret
mov
jg
jmp
je
scas
in
mov
xchg
rcl
pop
xchg
xchg
sub
call
pop
add
sti
icebp
jae
push
aaa
cmp
icebp
imul
orl
mov
sahf
lds
ret
pusha
out
inc
mov
xchg
int
out
cmpl
and
imul
aas
xor
xchg
in
stc
sub
sub
ss
out
pop
xchg
jecxz
xchg
out
fiaddl
call
adc
xor
add
mov
xchg
rorb
push
jns
sbb
pop
std
jle
inc
push
cmc
idivl
push
mov
mov
cmpsl
js
mov
outsl
sbb
outsb
sbb
mov
add
in
push
scas
sar
les
imul
pusha
mov
and
adc
inc
inc
pop
addb
mov
cmp
xchg
ds
enter
stos
jmp
inc
sbb
jl
scas
sbb
push
sbb
loope
mov
push
andb
jnp
fists
fistl
mov
inc
repz
cmp
enter
add
mov
repnz
adc
stc
xchg
jp
jp
inc
std
data16
xchg
mov
aas
or
xchg
jae
scas
repz
jbe
nop
xor
jmp
xorb
or
pop
lock
clc
incl
sub
gs
xor
das
cmpsb
jo
adc
and
outsl
ret
mov
xor
mov
adc
aad
sub
out
out
popa
cli
rolb
mov
push
mov
or
lahf
sub
xchg
xchg
add
movsb
stos
scas
jg
push
add
inc
dec
xchg
pop
push
jle
pop
or
adc
arpl
push
xor
cltd
in
js
inc
into
imul
inc
push
cmp
test
and
ljmp
lahf
bts
sbb
cmp
pushl
fimull
stos
sbb
and
lods
sar
outsl
sub
mov
mov
ret
imul
test
jae
add
pop
popa
insb
sub
js
dec
jno
imul
sbb
pop
jg
sbb
mov
jno
aad
scas
mov
ss
push
push
inc
bnd
mov
jns
cmpsl
jnp
mov
dec
fcompl
lcall
lcall
fisubs
cs
clc
xchg
ss
test
dec
dec
jl
imul
subl
subb
push
mov
loop
adc
mov
cmp
inc
push
adc
cmpsb
pop
fwait
xor
stos
inc
dec
mov
jp
lods
ljmp
repz
cmp
mov
lret
fldl
rolb
jmp
das
sub
ret
das
fsubrs
out
dec
insl
sbb
xor
insb
cmp
mov
sub
mov
mov
rcll
stc
push
hlt
insb
cmpsl
rolb
scas
loop
jbe
jae
shlb
xchg
or
aad
dec
pop
sub
or
mov
inc
xor
js
hlt
push
mov
jge
ja
flds
or
xor
jmp
push
test
cmp
rorb
push
mov
mov
pop
daa
xor
dec
sbb
pop
lcall
jo
inc
sti
inc
mov
scas
jnp
repnz
dec
pop
sub
fcompl
int
adc
cmp
xor
inc
mov
cli
inc
outsb
mov
ja
xlat
pop
xchg
sub
mov
mov
dec
cltd
mov
mov
pop
mov
fs
shl
sbbl
ljmp
loopne
inc
insb
fcomps
xor
icebp
outsb
mov
sbb
dec
xlat
add
ret
mov
push
repnz
mov
and
mov
pop
push
xor
fistpll
loopne
add
mov
out
fsub
pop
cltd
nop
ljmp
arpl
inc
xchg
pop
mov
je
inc
popa
scas
lret
push
sbb
mov
std
or
xchg
rclb
inc
xchg
cmp
lods
repz
test
in
jmp
xchg
pop
sbb
mov
push
mov
or
and
push
scas
mov
or
int
pusha
jp
stos
xchg
dec
cmp
and
imul
jno
sub
mov
jo
stos
mov
daa
cli
imul
pushf
mov
add
in
jg
jge
push
fs
subb
cmp
fwait
adc
xor
loop
fisubs
cmpsl
stc
lods
mov
jne
push
jecxz
add
call
mov
xchg
std
jb
mov
sub
ds
xchg
sub
mov
cmp
sbb
sti
loopne
sbb
inc
xlat
jge
cmp
mov
adc
pop
in
fmull
xor
and
push
mov
imul
add
xlat
dec
push
cmp
add
out
jge
jb
cs
in
in
pop
sar
shll
divl
cmp
xchg
mov
in
sbb
lds
data16
xor
pusha
iret
cmp
movsl
lahf
sahf
jmp
mov
mov
loope
js
lret
or
xbegin
or
cmp
cmp
shlb
js
xchg
arpl
pop
ljmp
sub
mov
mov
mov
mov
fmulp
fnstenv
lret
stos
imul
jb
outsl
push
and
ljmp
add
jns
adc
fldl
js
push
dec
sbb
push
decb
and
sahf
cmc
or
testl
push
popa
pop
mov
xor
loop
hlt
rolb
sbb
jp
sub
testb
jecxz
mov
pop
mov
sbb
adcb
clc
xchg
pop
ljmp
mov
jge
int
fimuls
jo
fistpll
xchg
cmp
fmuls
xor
or
jle
mov
mov
roll
test
data16
test
jl
cwtl
lods
out
jb
adc
lock
loop
cld
lds
xor
arpl
adc
xchg
rorl
xchg
test
add
outsb
mov
cs
xor
or
jl
lods
orl
pop
xor
or
imul
inc
int3
xchg
and
outsl
push
int
jnp
fld
loope
pop
ss
pop
mov
xchg
xchg
jno
sahf
bound
enter
loope
arpl
popf
and
cs
add
mov
lret
dec
dec
bound
jno
xor
sbb
or
daa
mov
jbe
and
repz
icebp
outsl
dec
int3
mov
hlt
mov
pop
jle
ret
add
xchg
loope
loope
sub
fisubs
js
jb
inc
pop
enter
lret
push
shll
dec
vhsubps
or
sbb
je
mull
clc
push
mov
fisttpll
shrb
push
ds
repz
out
icebp
dec
fsts
ss
ret
mulb
ret
pop
pop
ds
mov
inc
cli
mov
rcl
addr16
ret
inc
xor
and
imul
inc
jl
cli
mov
loopne
insl
inc
add
push
xchg
out
dec
dec
xchg
das
pop
push
jp
sbb
jecxz
pop
fnstsw
add
jp
mov
flds
das
enter
shrl
scas
aad
sbb
in
cmovns
outsb
fistpl
sub
cltd
enter
ret
insl
es
jl
fcmove
jl
out
fwait
lret
je
mov
xchg
out
dec
sbb
mov
mov
mov
aad
fsubs
stc
js
mov
subb
fisttpll
mov
ja
ffreep
aad
ds
data16
pop
or
mov
aas
or
imul
mov
or
xchg
leave
dec
ss
jl
addr16
inc
jb
mov
shrb
mov
pop
mov
and
jae
or
aam
push
adc
push
push
cmpsl
movsl
aaa
into
stos
lahf
out
inc
pop
pop
lahf
lods
pmuludq
xchg
adc
imul
and
xchg
jb
stos
pop
mov
in
mov
pop
cwtl
scas
cmc
mov
jne
stos
adc
fcmovnbe
adc
daa
jl
ss
sub
cs
xlat
iret
jne
outsl
iret
mov
loop
fsin
cmp
lods
push
push
data16
and
aad
lahf
fcoml
dec
movsl
push
test
rcr
shr
sbb
jl
mov
int
sub
or
js
jns
xchg
xor
lods
shlb
jnp
ja
cwtl
push
test
shll
and
xchg
sbb
sti
orl
push
pop
pusha
aas
daa
shlb
out
imul
ljmp
mov
and
stos
outsl
mov
pop
mov
testb
jnp
movsb
cmpsl
push
jae
negb
mov
hlt
sbb
pop
xchg
loopne
or
sbb
sahf
jbe
push
ljmp
popa
ret
inc
mov
cltd
cmpsl
cs
sbb
fucomip
pop
imul
test
dec
call
jo
sub
lret
ljmp
jno
jo
pusha
sub
xchg
int
ljmp
sbb
addr16
mov
loope
push
out
mov
std
mov
add
int
in
rcll
das
mov
dec
xchg
movsl
enter
jecxz
fwait
cli
sbb
jne
jmp
adc
dec
push
add
lret
cmpsl
rcll
push
dec
mov
jg
cmp
inc
push
mov
fistpll
mov
rol
push
push
and
add
subl
or
add
mov
jmp
push
pusha
xchg
call
mov
aad
and
xor
arpl
scas
outsl
fstpt
dec
mov
cmp
jns
xor
sbb
jle
int
mov
jl
xchg
push
xchg
and
xchg
hlt
and
pop
lock
lret
cld
loopne
pop
test
add
sbb
mov
jb
mov
push
mov
mov
mov
xchg
and
js
adc
inc
bound
rclb
icebp
sub
adc
push
xchg
sub
xlat
ret
mov
add
push
mov
dec
or
dec
es
mov
das
push
clc
inc
and
lock
jo
pop
push
mov
fsub
addr16
and
and
insl
iret
pop
fucomp
push
sub
push
lock
popf
loope
mov
add
xchg
push
adc
sub
cmp
lods
ret
xor
popa
pop
shrl
lods
cmpb
movsb
mov
mov
push
inc
dec
xchg
bound
lret
push
add
xchg
pusha
pop
adc
fwait
cmpsl
cli
out
inc
cmp
and
scas
loop
jge
test
xchg
insl
cli
push
mov
push
cmc
cwtl
sub
xchg
dec
movsb
in
xor
ficoml
in
mov
and
repz
imul
shl
and
sbb
inc
inc
cmp
mov
or
jmp
cmpl
add
sti
in
cmp
jmp
scas
sar
xchg
stc
popf
sbb
lcall
or
sub
add
push
loopne
inc
loope
cmp
outsb
cli
enter
test
sbb
cmp
or
jae
das
or
sbbb
out
adc
push
adc
and
sub
sbb
jp
fldl
dec
ficoml
pop
shlb
jmp
lock
add
jmp
loop
stos
mov
xchg
lret
movsl
cmp
inc
xorl
cmp
mov
sub
inc
lea
jg
inc
repz
outsl
icebp
in
test
sti
dec
pop
into
sub
lock
stos
testb
je
scas
jno
xorl
lret
cli
adc
adc
adc
or
mov
inc
xor
in
xchg
inc
push
xchg
pushf
leave
lahf
arpl
aaa
hlt
mov
loop
int3
and
cltd
mov
pop
jnp
ror
adc
jb
inc
rorl
dec
movsl
add
mov
aas
je
cli
push
dec
mov
mov
pop
sub
lock
dec
in
inc
or
mov
and
fstps
push
inc
sarl
loop
icebp
testl
ja
pop
iret
add
dec
sub
or
mov
pop
pop
xor
lock
sbb
xor
cmp
add
mov
aas
xchg
out
mov
cmpsb
arpl
jae
mov
sub
dec
scas
sub
sub
insb
rolb
lahf
lret
movsb
fwait
add
iret
jbe
cmpsb
add
adcl
xchg
add
test
sbb
inc
and
adc
sub
mov
into
mov
dec
pusha
or
or
in
insl
inc
and
lret
lcall
lea
and
ljmp
inc
repz
leave
mov
cli
out
ret
xor
jbe
insl
adc
jmp
adc
jo
lret
or
mov
sahf
cwtl
mov
rcl
mov
cmp
pop
and
ljmp
mov
push
decl
cmpsb
inc
and
shrl
adc
sbb
mov
cwtl
fidivs
fs
sub
fldenv
rorb
push
mov
pop
leave
idivl
and
cmp
icebp
mov
pop
dec
lock
sahf
ret
push
loopne
add
adc
push
ret
mov
sbb
cmpsl
xor
mov
adc
imul
push
popf
mov
ds
push
cmpsb
push
push
xor
pushf
cmp
xchg
add
sbb
leave
mov
push
idiv
arpl
mov
ficoml
mov
notl
ljmp
dec
popf
xchg
mov
and
into
xor
movl
cmp
sub
dec
ja
leave
notl
std
cmp
xchg
xchg
xor
fcompl
xor
jne
scas
into
cltd
es
dec
cmp
fbld
inc
mov
add
mov
mov
movsl
mov
je
xchg
xchg
faddp
dec
mov
cmp
jno
das
sbb
mov
loopne
mov
imul
xor
shld
rorb
xor
xor
popa
adc
shl
stos
inc
pop
push
lahf
cli
mov
mov
je
sbb
shrb
push
sti
sbb
or
fsubrs
xchg
loop
cs
dec
lahf
ja
imul
mov
jmp
mov
in
ljmp
or
cmp
push
push
xor
and
jmp
xor
cmp
pushf
mov
vmovapd
push
outsl
mov
push
aas
cld
and
xchg
sbb
sub
push
lret
or
sahf
dec
into
adc
jne
mov
xor
xor
outsb
jne
dec
xor
mov
jno
out
das
cmc
xchg
adc
and
adc
test
pop
neg
aas
clc
cli
hlt
add
nop
add
mov
and
xor
ret
dec
jb
inc
xchg
jl
cwtl
xor
xchg
adc
mov
jmp
setno
cltd
push
pop
loop
fisubrs
scas
inc
or
pop
enter
inc
inc
and
out
inc
ret
movd
fldl
mov
lods
pop
sbb
and
pop
sti
dec
mov
cmp
sub
sub
add
lahf
cmc
or
jmp
jl
adc
mov
out
cwtl
add
adc
outsb
xor
xchg
pushf
mov
push
pop
ret
xor
shlb
scas
mov
pop
pop
pop
inc
xchg
enter
repz
adc
push
sbb
pop
jecxz
adc
xchg
xchg
push
lret
xlat
clc
mov
fisubrl
inc
popf
dec
lods
subb
cltd
push
or
je
sub
cmp
mov
cmp
lahf
fdivrs
dec
adc
xor
mov
sbb
hlt
imul
sbb
sbb
lret
xlat
xchg
pop
pop
pop
mov
hlt
mov
mov
xlat
xchg
cmp
into
jb
jle
addr16
stc
fisttpll
and
dec
mov
mov
mov
daa
sub
mov
cmp
dec
mov
sbb
push
push
add
pop
jae
enter
out
leave
movsb
inc
mov
sahf
and
add
add
adc
mov
ljmp
mull
sbb
enter
out
mov
jg
jbe
cmova
pop
cmpb
xchg
push
lahf
mov
arpl
pop
dec
mov
dec
jg
or
lcall
mov
repz
lods
ja
stos
out
shrl
mov
in
sub
mov
mov
dec
pushf
push
xor
lea
repz
jno
mov
ds
nop
js
test
in
mov
outsb
push
scas
sbbb
cmp
mov
int
inc
mov
data16
add
jbe
mov
mov
dec
bound
loopne
mov
lahf
pop
shrb
cmpsl
pop
mov
out
insl
and
mov
cmp
and
pop
adc
cmp
adc
shll
mov
push
loop
rorl
cmp
lahf
lea
jecxz
adc
adc
sbb
mov
pop
pop
lea
push
jle
gs
je
mov
cmp
xchg
xchg
repnz
dec
pop
mov
xor
adc
test
mov
mov
je
xchg
mov
das
or
sub
push
pusha
lock
aam
stos
and
fbld
int
fnsave
pop
push
cmp
cmp
stos
lret
repz
push
jb
pop
push
push
inc
les
sbb
cmp
hlt
jne
sbb
xor
mov
jmp
stos
mov
mov
bound
jmp
push
adc
aam
ss
xchg
or
and
mov
das
ret
xchg
push
out
adc
int
mov
daa
pop
jmp
popf
cmp
pop
stos
or
scas
jmp
sub
pop
lret
enter
rcrb
dec
popa
iret
outsb
fcoms
xchg
les
and
insl
pushf
enter
aas
push
imul
xor
xchg
dec
pop
and
add
mov
arpl
out
test
cmpsb
mov
xchg
popa
xchg
mov
aas
mov
idiv
cmpsl
ret
mov
sarl
sahf
bound
pusha
iret
jecxz
mov
test
dec
cmp
sti
mov
es
shlb
icebp
and
jb
pop
and
mov
xchg
hlt
dec
sarl
push
out
mov
clc
pop
lock
or
frstor
fimuls
mov
mov
inc
cli
xchg
xchg
sub
lret
pop
push
adc
add
or
sub
mov
pop
out
enter
or
inc
sbb
inc
and
jmp
iret
jae
inc
pop
jo
mov
int3
scas
rcrl
fcmovb
lods
mov
shlb
fwait
xchg
sbb
jle
mov
jmp
pop
mov
mov
stos
sub
mov
bound
loopne
push
xchg
xchg
dec
push
jo
jbe
xchg
repnz
sahf
mov
jae
pop
decb
cmp
mov
add
inc
movsl
loope
dec
orb
dec
lahf
mov
or
mov
loop
adc
mov
movsl
sbb
push
ret
std
cmp
hlt
xchg
dec
aas
pop
jp
scas
out
dec
dec
sub
jle
adc
lock
lds
push
or
cwtl
cmc
pop
out
and
inc
pusha
pop
jno
push
fimull
scas
or
adc
add
xchg
mov
add
in
aas
stos
leave
popl
push
or
and
jle
insb
lret
push
adc
jge
and
cmpl
push
ror
inc
insb
shll
mov
out
jmp
test
push
jge
dec
sbb
cmp
lock
es
aas
mov
pop
cmp
jmp
mov
movsl
popf
pop
add
inc
push
xchg
fucomi
cmpsl
das
dec
pusha
pop
and
dec
test
in
cmp
push
shlb
mov
icebp
inc
cmp
ss
cmp
cmpsb
aad
sub
out
xor
iret
inc
cmc
shrl
dec
addr16
pop
shlb
jbe
pop
aas
xor
cmpl
pop
jg
ds
cmpb
shlb
xchg
rorl
inc
add
outsl
fsubl
and
mov
and
mov
lret
daa
mov
leave
addr16
or
sarb
mov
jmp
movsb
inc
imul
pop
dec
out
test
mov
clc
sti
inc
sub
sti
xor
rcll
addl
mov
ljmp
je
xchg
push
cmp
unpcklps
fwait
xchg
std
fcomi
mov
inc
xor
cltd
fldt
dec
mull
fwait
and
mov
jno
out
addr16
push
cmp
iret
xlat
add
add
pop
sbb
mov
push
test
jmp
mov
mov
mov
cltd
inc
fists
sbb
jp
stos
add
push
sbb
inc
sbb
dec
fwait
jge
loop
push
popa
jp
cli
pop
cltd
inc
pop
push
icebp
xor
and
xlat
aas
inc
inc
pop
in
mov
sbb
xchg
stos
lcall
je
mov
les
inc
inc
xor
adc
push
rcrb
lds
leave
int
mov
stos
jp
adcl
add
dec
bound
sarb
inc
inc
and
lea
push
pop
cltd
xor
scas
sarl
push
inc
add
rorb
rep
test
stc
sbb
jl
and
pop
adc
cltd
lcall
push
xor
mov
in
and
jbe
sub
adc
fs
push
mov
call
xchg
pop
sbb
jg
faddl
call
call
scas
test
add
call
sub
fs
mov
mov
jg
or
decl
mov
lods
sub
push
xor
test
sbb
mov
xor
cli
roll
cltd
stos
add
addr16
cld
pop
or
jae
push
mov
add
pop
mov
fucomp
push
cmc
leave
mov
jns
mov
dec
dec
test
pop
jp
sbb
jne
mov
ja
jle
call
cmp
lds
cmp
xlat
repnz
dec
call
fistpll
pop
xchg
pop
int
dec
jae
mov
sbb
cltd
cltd
xor
leave
data16
sbb
mov
repz
repnz
sti
and
mov
and
int
lock
repnz
and
xor
mov
out
movsl
int
pop
xchg
roll
sahf
mov
in
mov
sub
hlt
loopne
imul
mov
mov
inc
cmp
dec
dec
movsb
mov
lret
xor
icebp
jmp
into
sbb
sub
xor
shlb
addb
icebp
imul
sub
stc
lods
mov
cs
test
cmp
popf
cmp
xchg
out
sbbl
cld
inc
adc
jle
insl
mov
int3
negl
jns
pop
les
adc
insl
hlt
sbb
jle
movsb
les
sbbl
inc
add
xchg
lea
cld
mov
sbb
imul
negl
cmc
sub
dec
repnz
test
sub
in
ja
push
pop
lcall
int
aad
inc
dec
mov
mov
aaa
push
jnp
test
popf
push
hlt
shr
loop
clc
ds
pop
aaa
cmp
repz
jbe
push
mov
push
pop
jmp
pop
nop
mov
pop
fsubl
mov
inc
mov
dec
out
push
xlat
cmp
adcl
pop
and
mov
je
pushf
sub
sbb
cmp
mov
imul
xor
xchg
mov
xchg
jp
into
out
jp
mov
jge
loopne
mov
cld
xor
adc
or
lods
mov
mov
mov
outsb
mov
in
aad
inc
stc
cmc
push
gs
mov
dec
xor
in
push
rcrl
aam
sub
pop
xchg
fdivs
js
fbld
cmp
and
inc
cwtl
fucomi
fmuls
xor
je
hlt
jo
mov
jmp
bound
inc
iret
loope
add
imul
je
icebp
mov
and
cmp
iret
adc
popa
jo
or
mov
cmc
cli
adc
iret
mull
jmp
mov
or
les
ja
sbb
xchg
xor
push
cld
push
cwtl
jge
cld
xchg
push
mov
aad
fisttps
popf
push
xchg
test
gs
mov
jno
push
ffree
iret
jae
jmp
cmp
sbb
pop
jno
fcoms
rorl
arpl
les
imul
jmp
movsl
add
push
and
fstpl
adc
dec
cmp
lcall
cmp
movsb
xchg
mov
mov
mov
cltd
push
leave
out
push
out
fcmovnbe
ret
adc
fimuls
xchg
mov
pushl
mov
mov
rorb
in
add
aad
jnp
cmp
popf
mov
push
aas
or
test
dec
scas
subb
sbb
popa
ljmp
ja
jae
push
mov
sti
addr16
jecxz
inc
test
ja
testb
repnz
inc
xchg
test
jne
lods
cmpsb
les
mov
cltd
aas
sahf
lods
push
imul
sarl
addr16
dec
jae
add
mov
lahf
adc
dec
pusha
cmp
ljmp
out
xacquire
arpl
mov
std
cmpsl
cli
scas
jmp
faddl
in
add
incb
in
inc
iret
scas
ficomps
cld
out
sub
lea
dec
push
lds
sbb
in
xor
in
pusha
mov
popa
ret
cmp
dec
aaa
jno
mov
jge
xor
stc
ret
lock
inc
dec
es
repz
subl
stc
fistpl
xchg
add
mov
int3
and
rcrl
xchg
mov
fistl
dec
lods
dec
mov
dec
int
int3
out
mov
adc
data16
hlt
xor
mov
adc
cwtl
xchg
mov
stos
pop
mov
call
pop
pushf
dec
int3
pop
out
adc
sbb
in
mov
sbb
jne
and
pop
xchg
mov
mov
fcompl
push
push
notb
jl
ds
mull
mov
insl
in
fstpl
mov
xor
mov
mov
in
or
push
sbb
xor
sbb
mov
imul
out
clc
dec
loop
xchg
in
je
shr
mov
inc
mov
mov
dec
pop
movsb
dec
sub
add
inc
and
adc
into
imul
inc
add
pusha
sub
int
push
incl
leave
sbb
out
pop
xchg
xchg
fistl
jae
test
or
and
call
xchg
addr16
fcomi
fidivrs
mov
repz
int
mov
fsubp
push
popa
cltd
ljmp
pop
mov
or
and
sbb
xchg
jl
div
xchg
enter
jge
ds
or
out
and
out
scas
test
repnz
push
jns
mov
or
pop
pop
stc
push
fwait
lock
cmp
aas
lock
pop
pusha
push
push
popa
leave
sbb
xchg
inc
or
add
dec
lcall
popa
cli
hlt
mov
lret
orb
fsub
sub
emms
or
out
xchg
mov
int
repnz
loopne
or
dec
mov
lret
das
test
cmpl
hlt
je
and
add
push
mov
mov
out
test
aad
inc
xor
out
jge
or
adc
mov
sub
lods
xchg
lds
mov
lret
mov
jae
xchg
loop
mov
repz
std
xlat
and
mov
mov
mov
lods
add
dec
dec
je
fisubl
ja
daa
jb
pop
fldt
cmpb
jae
and
push
cwtl
popa
pop
loope
or
xchg
shlb
lea
sub
jb
dec
add
pop
aas
xor
cmp
stos
std
mov
adc
frstor
cmp
sbb
or
popa
add
sbb
or
pushf
push
jl
pop
jns
test
fldl
sbb
jae
sbb
cmp
jle
and
nop
loopne
test
mov
sbb
add
test
das
push
jle
add
xor
imul
cmpsb
jg
imul
test
ljmp
xchg
pop
sbb
mov
fs
loop
imulb
sbb
imulb
shlb
data16
pop
xor
and
js
es
testb
mov
addr16
mov
es
call
sbb
es
jne
into
jno
std
push
mov
push
insl
insb
jne
sti
xlat
andb
add
pop
cltd
das
sub
iret
jb
mov
add
pop
push
iret
dec
outsb
jp
pop
jle
lock
stos
mov
xchg
mov
call
push
adc
clc
negb
and
mov
data16
xchg
insl
push
icebp
mov
in
jg
cs
mov
lods
xlat
pop
lods
cmc
dec
andl
imul
sbb
fildl
sub
jb
ss
lret
xlat
call
lods
inc
fsubrs
cmp
out
pop
xor
fdivrs
out
jge
cmp
pop
jecxz
sbb
dec
add
inc
mov
cld
imul
xor
or
dec
mov
adc
es
mov
adc
xchg
xchg
lret
push
shrb
cli
jns
gs
inc
xchg
int
adc
mov
cmc
mov
xchg
notl
gs
scas
xor
ja
sub
movsb
adc
xchg
loop
js
out
pop
stos
outsb
repnz
pop
pop
ljmp
sbb
or
outsl
outsb
cvtpi2ps
imull
pop
mov
mov
mov
rolb
out
rcrl
out
dec
int
jmp
add
pushf
push
mov
fmuls
stc
push
mov
jo
fsubrl
into
jnp
fisubl
add
pop
adc
cli
mov
shr
nop
out
cmpsl
push
xchg
lea
mov
out
mov
push
inc
repnz
ljmp
jle
xchg
loopne
mov
pop
call
jp
aam
xchg
div
movsl
jg
cmp
sbb
test
popa
sbb
gs
mov
inc
sub
or
lods
js
push
xchg
jnp
cmp
add
cwtl
dec
sbb
rorb
push
jns
test
xorl
mov
xchg
imul
adcb
xchg
push
mov
sub
lds
fwait
mov
xor
xor
or
mov
inc
jp
insl
jb
das
aam
lods
aam
stc
cmp
inc
cmc
mov
mov
jp
jle
test
aas
repz
push
ja
sahf
inc
cmc
push
lret
movsb
mov
lret
sub
iret
jp
flds
jl
mov
and
stos
into
pop
incb
jae
jmp
lods
mov
bound
sub
inc
xor
scas
loope
pop
add
rcrl
les
aam
xchg
out
cwtl
sub
mov
test
pop
outsb
cmp
dec
inc
mov
xchg
ss
bound
out
mov
in
loop
outsl
into
xor
mov
pushl
jle
jle
scas
xchg
fnstenv
mov
lret
jne
call
jbe
out
icebp
mov
ss
pushf
or
add
test
or
pushf
std
in
mov
xchg
js
aam
inc
roll
dec
outsb
ss
out
push
jg
lea
mov
sub
test
ljmp
xchg
xchg
pop
ret
jne
sahf
add
jp
cs
hlt
jb
jo
sbb
dec
lret
mul
scas
subl
repnz
fmulp
test
jbe
xchg
fildl
repnz
pop
xchg
fists
push
and
js
shlb
xor
sbb
test
movb
jo
add
cmp
pusha
pop
push
inc
roll
add
cmp
fdivrl
fcom
scas
testb
imul
mull
mov
jmp
aam
or
mov
inc
add
in
sbb
mov
pushf
sub
fucom
inc
sbb
or
mov
mov
pop
cmp
push
add
int3
mov
shll
les
mov
inc
mov
ljmp
in
leave
js
comiss
fwait
inc
sub
sbb
in
sahf
imull
push
push
lods
lea
dec
movsb
inc
les
in
jo
cmp
int3
cmp
mov
lea
js
mov
push
das
inc
adc
scas
aad
mov
and
in
jae
sbb
das
ss
adc
popa
add
or
movsb
push
add
inc
sbb
adc
fbstp
stos
mov
mov
fstpl
jl
scas
add
mov
jp
rolb
mov
int3
cmpsb
jne
mov
jecxz
jo
mov
notl
mov
cmp
mov
loope
lret
std
and
mov
dec
sbb
jg
mov
dec
and
mov
dec
cmpsb
xor
clc
sbb
inc
lret
aam
loope
or
js
clc
test
and
push
xorb
inc
jae
adc
ljmp
jns
mov
pop
sub
cmc
cmp
xor
inc
scas
repnz
int3
lret
push
cmp
xchg
insb
adc
mov
lcall
inc
push
ss
dec
out
insb
idivb
cli
pop
loopne
add
sub
adc
pop
adc
dec
sbb
xor
or
cmp
inc
and
movsb
xchg
inc
in
aad
cs
pop
mov
add
leave
insb
inc
out
or
loopne
cmp
jge
mov
in
int
fwait
adc
jne
dec
cmp
jns
dec
inc
dec
hlt
adc
and
inc
dec
aaa
and
out
pop
jbe
mov
pop
add
inc
ss
loop
or
jecxz
addr16
xor
fwait
xchg
jo
roll
das
or
pushf
add
mov
mov
je
sub
jl
imul
call
sub
testl
pop
js
dec
sbb
jns
in
bound
inc
dec
xchg
xchg
mov
lock
arpl
lds
push
in
mov
cmovae
fsubs
mov
in
push
pusha
sub
mov
cmp
outsb
lret
cmc
rcll
jg
ss
xor
xor
jne
addl
int3
adc
stos
sbb
push
out
shlb
enter
and
xchg
lods
jb
aad
sbb
xor
int3
and
mov
ljmp
pop
fucomip
jns
mov
inc
push
lds
or
not
adc
jb
jo
clc
adc
mov
lret
icebp
xchg
cmp
dec
inc
or
mov
mov
jbe
in
push
fildll
sub
test
lock
xor
adc
mov
xor
mull
adc
inc
sub
push
cwtl
es
adc
lods
jb
xor
mov
inc
xchg
sbb
push
testb
adc
ret
nop
jmp
jg
sti
shlb
pop
loopne
scas
mov
and
outsb
lcall
inc
out
clc
mov
pushf
pushf
pop
mov
dec
mov
xor
xor
push
cli
mov
ret
add
hlt
pop
mov
call
f2xm1
fmuls
insb
orb
inc
dec
push
ret
lea
rcl
xchg
push
ljmp
jg
fcmovu
cld
adc
sbb
push
xchg
dec
push
add
adc
xor
data16
xor
ret
popa
icebp
jb
dec
dec
inc
shl
and
fwait
adc
imul
fcmovne
cltd
out
xor
mov
fisubs
aaa
cmpsl
push
mov
sub
mov
aad
rorl
movsl
lret
jno
ds
fucomi
sub
cli
cmc
repnz
push
xchg
nop
jl
pusha
out
rcr
bound
call
add
notb
pushf
jnp
lahf
cmp
pushf
xchg
jp
mov
cmp
push
pop
fbld
adc
pop
int3
shll
call
adc
es
cwtl
jbe
mov
sbb
dec
inc
fstpl
outsl
insl
mov
stc
adc
jo
fists
push
leave
pop
or
pop
lock
sbb
push
jno
jmp
and
jo
icebp
jg
cmc
sbb
xchg
cwtl
fcmove
adcl
in
cmc
std
pop
cld
push
xor
or
clc
push
nop
lcall
stc
pop
jecxz
add
dec
jl
pusha
aam
lock
pop
add
mov
pop
cmp
testl
add
mov
or
inc
mov
icebp
sub
mov
sub
mov
pop
mov
xor
dec
mov
insl
jne
jo
and
lods
shll
js
dec
mov
mov
pop
xchg
jp
ret
jbe
int
jmp
loop
xor
inc
bound
ss
pop
leave
cli
jbe
sub
push
filds
repnz
jae
in
sbb
ja
adc
mov
loop
mov
jp
stos
test
out
mov
add
pop
data16
call
add
push
jg
xor
mov
add
dec
ja
pop
int3
loopne
inc
sub
pushf
mov
pop
fbld
je
fdivp
movsl
inc
fxch
fbstp
dec
mov
pop
xor
adc
sub
mov
mov
mov
daa
push
outsl
push
lds
mov
popf
xor
push
test
cmpsl
pusha
scas
sbb
aad
push
cmp
pop
imul
gs
insb
hlt
pusha
cld
pusha
push
ljmp
or
or
cwtl
push
in
imul
mov
je
xor
outsb
mov
lods
std
mov
dec
adc
push
xor
int3
or
fsubl
repz
push
test
push
sbb
push
test
pop
in
std
jns
out
shll
mov
lea
dec
pop
lock
dec
mov
fadd
pop
inc
mov
mov
jge
test
fwait
leave
fcoms
mov
mov
cmc
addr16
jns
push
pop
mov
sub
dec
jne
add
push
pop
sbb
cmc
iret
mov
sub
outsb
cmc
dec
add
ljmp
seta
je
jmp
nop
stos
and
test
jg
mov
ficompl
sub
movsb
dec
test
adcl
stos
movsl
in
lcall
cltd
cmp
adc
and
xchg
mov
sbb
mov
je
pop
xor
adc
negl
rcl
adc
outsb
mov
mov
mov
addr16
and
or
pop
testl
cli
dec
mov
es
stos
mov
outsl
sub
js
cmp
rcrl
loop
adc
xchg
jmp
mov
call
jle
mov
stos
mov
lea
fs
lcall
sbb
lret
cmpsl
lea
inc
push
loop
jmp
mov
add
pop
pop
add
sub
sub
popa
imull
int3
jmp
cltd
cmp
inc
mov
sub
daa
aaa
jns
adc
jge
xor
cli
lcall
into
movb
adc
movsl
xlat
data16
xchg
mov
pushl
jne
popf
push
out
loop
test
pop
addb
imul
mov
or
ret
or
jb
push
movsl
and
jne
dec
jno
cmp
jae
jae
test
adc
dec
adcl
lods
mov
xchg
nop
add
push
inc
repnz
jmp
cli
es
add
rcr
insl
mov
test
pop
mov
je
jae
dec
out
mov
adcl
pop
xchg
cmc
ja
cmp
es
stos
mov
hlt
sahf
enter
cmp
jle
jb
jge
stos
imul
jae
mov
dec
pop
cltd
loop
push
mov
jno
leave
inc
pop
cmp
xchg
testl
jae
lock
push
clc
push
stos
popa
pop
mov
inc
ds
xor
cmc
cmp
cwtl
mov
in
push
pop
jge
nop
sbb
int3
into
sbb
orl
xor
lods
inc
in
cli
adc
inc
push
js
in
adc
pop
xchg
rcll
outsb
mov
sbb
jmp
and
inc
mov
ljmp
mov
addb
sbb
inc
arpl
sub
ror
xchg
xchg
fcmovbe
nop
add
or
gs
aad
in
outsl
mov
inc
nop
test
mov
cmpsl
sbb
mov
clc
mov
shll
sahf
mov
negb
shr
repz
cmp
mov
jecxz
jns
and
pop
cmp
daa
mov
mov
out
rorb
inc
lret
lcall
test
rorb
stc
sbb
xchg
cli
repnz
shlb
xor
jno
push
mov
inc
jns
pusha
pop
cmp
add
out
arpl
lods
mov
xchg
xchg
bound
das
mov
aad
sub
push
mov
xlat
rcrl
pushf
test
scas
clc
loopne
orl
xchg
out
xor
scas
cmp
outsl
imul
dec
dec
add
fadds
or
xor
sub
je
aas
fists
pusha
fs
xchg
add
push
ret
push
andb
int3
jle
in
rolb
push
inc
jle
or
add
testb
ja
jge
mov
sub
push
inc
enter
sbbb
xchg
aas
add
sti
or
adc
leave
stos
xor
movsl
inc
adc
sbbb
mov
into
lds
repnz
js
in
or
decl
push
sbb
jbe
loope
call
test
jge
xor
jge
cmp
lds
iret
pushf
stc
ss
repz
mov
push
js
inc
stos
out
sahf
jecxz
clc
add
aad
out
into
jne
icebp
out
mov
sti
outsb
cmp
inc
sbb
call
jl
fldcw
insl
aam
roll
nop
cmp
ljmp
leave
andb
add
or
mov
mov
mov
adc
push
add
mov
out
mov
xlat
scas
repnz
test
subl
daa
mov
scas
push
xchg
mov
inc
addb
ficompl
cmpb
clc
out
push
testl
mov
andb
jne
inc
das
adc
mov
lock
rcll
sub
mov
pushw
std
icebp
xor
lcall
push
jno
das
pop
incl
popa
js
in
mov
push
mov
mov
aaa
xor
lahf
pop
insl
roll
cltd
mov
loop
aas
iret
adc
jg
orl
mov
lods
pop
popw
fisubl
icebp
in
inc
mov
cmpsl
cltd
cmp
int3
xor
outsl
xor
adc
in
nopl
xchg
inc
sbb
adc
mov
inc
add
sahf
int3
mov
push
test
scas
das
iret
aad
shll
cwtl
das
mov
in
pop
xchg
call
int3
add
scas
and
fisubl
lret
jecxz
aad
cmp
andl
int
roll
std
jmp
or
xor
sbbl
mov
pop
cld
sarl
in
push
lret
popa
push
push
imul
out
fstpl
stc
cmp
inc
xchg
jmp
sub
fcmovu
push
lahf
pop
dec
push
sbb
mov
pop
mov
mov
cli
push
xchg
outsb
xchg
repz
inc
hlt
or
in
test
mov
cmp
int
mov
xor
scas
clc
aas
or
mov
pushf
pop
popf
or
and
cmp
cmpsb
or
push
pop
xor
adc
popf
xchg
mov
adc
and
cmp
sub
cs
mov
mov
ficompl
das
push
sub
outsl
cmpsb
lcall
lret
addr16
and
pop
dec
std
mov
jmp
adc
lds
or
sbb
jne
ds
cmpsl
in
and
xchg
iret
pop
jbe
dec
adc
fcmovu
scas
xchg
iret
pop
or
cmp
xor
mov
sub
push
cwtl
fs
jbe
push
ja
movsb
mov
pop
mov
cmpl
sar
xor
pop
dec
jle
int3
push
in
or
js
mulb
sub
or
jae
movsl
sub
repnz
movsl
dec
sub
pop
rorl
cmp
mov
std
loope
repz
xchg
pop
and
inc
out
mov
cli
loopne
cmpsl
jnp
push
lahf
jge
fwait
inc
mov
mov
push
jne
fnstenv
adcl
pop
adc
les
mov
popf
sti
push
lret
dec
jge
jmp
inc
scas
pushf
scas
xor
adc
bound
mov
clc
icebp
mov
rcr
jo
cld
push
dec
or
clc
out
imul
shrl
scas
or
inc
arpl
sti
cmpsl
loopne
pusha
xchg
pop
fs
mov
stos
jge
cwtl
sti
push
push
loope
jmp
cwtl
xchg
lock
test
movsl
dec
mov
pushf
sub
and
inc
aas
xchg
mov
add
sub
bswap
xor
jno
out
cmp
mov
push
inc
cltd
cmp
sbb
and
pop
mov
or
mov
fnstcw
fnstsw
cmpl
jmp
xchg
subl
outsb
pop
fwait
stos
mov
shll
fdivrl
pop
jge
cs
mov
mov
mov
stos
pop
lock
mov
add
add
test
mov
adc
ret
xchg
lea
xor
mov
aad
fnstenv
mov
stos
lret
sub
jo
lds
scas
scas
scas
popa
push
sti
mov
ss
cmpb
fwait
jb
lret
xchg
push
mov
loop
jnp
mov
xor
push
int3
adc
mov
lret
sub
or
pop
lcall
push
jo
mov
inc
popf
xchg
ret
insb
jp
not
push
fisubrs
sbb
xor
xchg
stos
fdivrl
mov
mov
sbb
iret
dec
add
cwtl
mov
aas
xor
sub
mov
pop
pop
insb
popa
push
pop
mov
or
sbb
sbb
addb
pushf
scas
out
fsubrs
pop
test
jno
popa
push
inc
in
sub
repnz
aaa
stos
pop
hlt
popa
pop
adc
fimuls
jno
out
in
push
mov
imulb
mov
mov
xor
add
pop
push
and
mov
adc
decb
adc
cs
jp
mov
lea
cmc
notb
cmc
jae
rcr
xor
xlat
divl
nop
dec
mov
xchg
loop
icebp
call
stc
xor
scas
cmpsb
sub
shl
repnz
adc
adc
stos
mov
xchg
mov
movb
dec
rcrl
aas
mov
test
and
sbb
mov
adc
out
pushf
add
cmc
jb
pop
mov
or
and
mov
xor
sub
sarl
nop
cmp
pop
xchg
sub
test
cmc
jno,pt
sbb
cmp
int
jns
cmc
dec
pushf
mov
test
mov
and
xchg
dec
mov
or
mov
loope
shlb
lds
or
rorb
stos
sbb
sub
sbb
cld
or
adc
jmp
lret
ja
xor
jl
jnp
add
add
outsb
out
data16
js
loope
dec
and
in
imul
js
and
xlat
pop
xchg
repnz
fildll
loop
mov
adc
or
xchg
xor
mov
xor
jle
cmp
push
mov
add
outsl
inc
jne
movsl
pop
mov
je
push
ret
dec
xchg
fdivl
adcl
ret
or
data16
jmp
cmp
pop
fstpl
mov
and
pop
or
ss
hlt
inc
shll
xor
adc
int
roll
stos
idivl
pop
xor
jmp
sti
inc
ss
cmp
popa
mov
pop
insb
mov
ljmp
fstpl
loopne
fwait
push
and
in
in
add
push
xlat
adc
negl
into
pop
or
movsl
sbb
stc
aam
in
enter
punpckhbw
scas
mov
out
add
in
test
int
jns
mov
mov
test
sti
clc
aas
mov
rclb
mov
cmp
cmpsl
push
sbb
mov
xchg
dec
sbb
add
ja
gs
dec
and
sbb
push
mov
pop
inc
test
rcrl
pop
mov
sub
mov
or
loope
in
mov
dec
xchg
leave
sub
dec
inc
push
leave
mov
mov
addr16
dec
loop
insl
sbb
rorb
xor
enter
mov
xor
lods
inc
jecxz
test
jmp
je
into
ret
sbb
rclb
arpl
mov
lods
into
fwait
dec
stc
sbb
mov
mov
sti
data16
adc
cmp
sbb
in
cmpsl
popf
out
jle
add
aad
mov
fnsave
mov
xchg
aam
rolb
subb
pop
mov
scas
pop
or
das
cli
add
ret
cmp
sub
xchg
andb
mov
push
pop
jns
mov
aam
insb
pushf
sub
pop
aam
mov
and
aaa
cli
push
mov
out
aad
sar
out
sbb
pop
sbb
mov
jnp
aas
xchg
lea
je
inc
iret
cmp
mov
aam
popa
call
leave
dec
add
std
inc
lahf
pop
and
jae
stos
into
sbb
call
je
lds
loope
push
pop
jle
shlb
xor
movsl
jns
mov
loop
lods
jecxz
push
pushf
fadds
or
mov
aad
mov
dec
mov
mov
es
adc
add
push
xlat
xchg
sbb
insl
lea
mov
sbb
mov
aas
cmpsl
daa
xor
roll
sub
pop
dec
or
data16
xchg
jmp
mov
mov
fnstcw
sub
and
dec
cli
in
jge
adc
and
rcll
dec
push
xchg
push
aam
and
cwtl
mov
cmp
xorl
cmp
std
sbb
movsl
xchg
lods
loop
test
shlb
daa
out
enter
cli
or
adc
inc
nop
stc
out
push
test
sbb
out
adc
loopne
call
jno
fldenv
mov
movsl
test
add
lret
push
lds
xor
adc
lret
push
pop
xorl
sub
insl
pop
adc
test
in
aam
push
add
sub
dec
dec
and
cmpsl
pop
xchg
call
jbe
enter
adc
roll
cwtl
add
es
arpl
mov
test
jb
daa
fldcw
jo
dec
out
cmp
xlat
sub
clc
test
hlt
pop
pop
add
xlat
mov
mov
inc
cmpsl
push
xchg
lea
jmp
imul
mov
adc
cwtl
fucomi
xor
ss
inc
inc
add
add
dec
subb
mov
cli
push
int
jmp
or
sub
shrb
mov
sbb
mov
jnp
shrb
mov
dec
pop
outsl
or
dec
pop
bound
cmp
pop
jl
cli
mov
aas
xchg
inc
aaa
cli
push
push
cmpsb
sub
cld
xor
xor
clc
in
into
sbb
mov
psubw
mov
xor
mov
xor
sub
dec
stos
cmp
xchg
test
mov
sub
pop
add
imul
cmpsb
mov
scas
pop
mov
mov
or
aam
lea
sbb
xchg
sbb
imul
in
mov
fs
mov
int
jecxz
jmp
xchg
fsubl
pop
sub
dec
sarl
cmpsb
sarb
cwtl
inc
or
xchg
pop
movsb
ret
adc
lods
insl
xor
add
xchg
lock
jge
pop
lods
inc
jl
add
or
sbb
xor
jg
aad
jno
xorb
mov
stc
shll
dec
jb
mov
xchg
orl
test
pop
cmpsb
mov
repz
push
fs
es
loopne
and
jl
add
popa
les
push
lcall
jno
fisttpl
dec
lds
push
fisubrl
cwtl
adc
sub
sbb
loop
mov
pop
fs
outsb
cmovg
sbb
fmul
cld
hlt
loopne
call
ret
mov
loope
push
jg
mov
xchg
cmpsb
fisttpll
cmp
imul
clc
dec
loope
mov
push
and
clc
je
push
pop
cmp
js
movsl
rcl
ret
mov
bound
and
inc
jbe
pop
pop
push
dec
xor
int
lahf
arpl
mov
loop
mull
lods
inc
loopne
insl
xor
in
adc
pop
dec
pop
addr16
sub
pop
xor
addr16
fs
mov
repz
mov
lea
shll
subb
das
jmp
xor
rcl
mov
fisttps
cmp
iret
hlt
adc
fwait
xor
xchg
push
and
cwtl
sbb
sbb
int
mov
hlt
dec
or
dec
int3
adc
mov
cmpsl
pushf
sbb
mov
xchg
sub
stos
inc
push
ljmp
hlt
pop
xchg
pop
xchg
add
push
leave
xor
mov
test
mov
movsb
out
orb
bound
mov
shll
dec
push
js
aad
fucomip
push
test
sbb
pop
lea
ret
cmpsb
pop
sub
push
mov
rorl
mov
daa
sub
mov
mov
cmc
adc
mov
dec
sub
or
pop
fwait
jne
int
ficompl
popf
iret
pop
mov
xchg
fwait
mov
loop
fstps
enter
test
std
mul
iret
pop
lahf
xor
pop
mov
fisttps
movsb
lods
dec
rcrb
stos
addb
in
imul
mov
mov
cmpsl
mov
popf
adc
sbbl
test
jns
pop
fisubrl
push
out
in
lcall
or
cmp
jmp
ljmp
sub
xchg
jo
loop
adc
cmp
call
push
pop
dec
push
imul
testl
xor
pop
cmp
add
sub
mov
mov
ret
add
dec
xchg
adc
test
xchg
sub
jmp
loopne
cmc
imul
repnz
push
test
push
jp
jge
pop
shll
nop
aaa
out
jl
mov
enter
mov
sub
mov
and
ss
sbb
pop
repz
pop
aam
mov
sbb
jbe
fsts
call
pop
xchg
xor
sub
cmp
or
mov
jo
adc
inc
mov
test
mov
mul
repnz
cmp
xchg
cmp
sub
add
lock
pop
ja
or
lock
push
or
xlat
fcomps
dec
call
cmpsb
jns
sub
xchg
and
in
xchg
xor
out
pop
sub
sub
pop
into
in
lea
or
mov
hlt
push
cmp
push
sbbl
sub
imul
aam
push
dec
loopne
lret
enter
mov
pusha
in
xchg
sbb
clc
mov
pop
jl
add
fisttpl
je
pop
mov
push
mov
adc
std
outsl
jnp
pushf
lods
ret
sub
cltd
data16
lods
pmuludq
in
shrl
bnd
mov
pop
jg
fcoml
mov
inc
ljmp
or
jae
add
mov
jle
jge
mov
adc
adc
xorb
add
adc
or
scas
and
data16
or
mov
adc
addr16
mov
sub
nop
mov
fsubr
sub
jbe
shl
mov
jmp
mov
insl
cs
psubd
or
rcrl
cmp
cltd
xchg
lret
jo
scas
imul
inc
outsb
aaa
mov
sub
jp
adc
cli
imul
push
ds
jno
mov
xor
push
aaa
sbb
out
gs
into
cmp
sbb
fsubp
sub
test
sbb
outsl
pop
inc
add
pop
rcrb
add
lods
imul
push
jo
dec
xchg
inc
addb
cmp
popf
into
pusha
inc
in
mov
dec
mov
lods
std
dec
orb
call
es
pop
daa
arpl
aaa
sbb
cmpsl
test
aad
mov
jns
sbb
mov
xchg
fcomi
adc
aas
dec
mov
xchg
sahf
addr16
cmp
dec
push
xor
jae
mov
mov
jle
sahf
movsb
sbb
sbb
js
sub
inc
bound
ja
stos
sub
jmp
test
andb
cmpsb
dec
push
mov
push
nop
push
inc
ret
push
mov
inc
bound
adc
pop
stos
or
cwtl
rcr
loop
sbb
stos
mov
add
xchg
flds
pop
lods
jecxz
test
mov
adc
jmp
movsl
dec
es
testb
add
push
push
pop
push
adcb
pop
outsl
jne
imul
mov
mov
mov
adc
jp
icebp
andb
outsl
sbb
mov
pop
iret
fcmovne
sbb
pop
into
adc
mov
loopne
sub
decl
clc
loopne
sti
xor
repz
xchg
std
int3
cltd
outsl
pop
sahf
mov
adc
xchg
jns
inc
pop
pop
fcoms
lcall
insl
cmp
pop
jae
add
inc
pop
addr16
cmp
fstl
inc
divb
add
fadd
xchg
pop
cmp
mov
pop
ret
pop
popf
dec
xorl
pop
dec
icebp
mov
repz
js
pop
add
loopne
mov
mov
sub
jb
enter
enter
dec
stc
jmp
jae
js
inc
fldz
xchg
mov
xor
xchg
and
jmp
hlt
jp
or
aaa
push
icebp
pop
pop
les
je
jp
cli
or
arpl
jge
push
mov
faddl
mov
sbb
cmp
xor
adc
ljmp
in
test
gs
push
cwtl
mov
dec
idivb
fwait
lret
push
aaa
push
ret
cmp
pop
shll
and
pop
in
dec
add
mov
adcb
imulb
cmpsb
je
ss
cs
pop
insl
cmp
sbbb
pop
lret
mov
mov
dec
andl
test
leave
movsb
aas
sbb
mov
lods
mov
lock
push
sahf
push
pop
xor
ret
ror
mov
outsl
push
dec
adc
fbstp
mov
lret
imulb
cltd
jecxz
pop
sbb
fisubrl
cmp
mov
mov
mov
movsl
push
xor
lret
movsl
dec
aaa
xor
sub
subb
xchg
lock
shlb
mov
test
mov
fwait
push
aad
int3
scas
cmp
xchg
outsl
adc
fwait
xchg
inc
adc
xchg
or
xchg
lods
adc
and
jns
lods
mov
rorb
test
addb
enter
or
lret
jns
outsb
and
sahf
inc
in
fidivrl
call
or
dec
mov
sub
pop
cltd
ljmp
loope
test
inc
mov
xchg
xor
xor
mov
in
gs
adc
pop
mov
xor
pop
jne
pop
jg
inc
inc
shlb
mov
inc
inc
adc
or
insb
dec
test
pusha
cmp
aam
es
jmp
jl
addb
jb
mov
pusha
enter
mov
mov
jb
fldenv
rcrl
mulb
out
imul
mov
adc
mov
enter
xchg
addb
jecxz
cmpsl
fwait
cli
jp
cmp
xlat
shrb
push
and
cs
lods
pop
scas
inc
bound
lret
in
imul
push
ss
pop
stc
cli
das
add
fmuls
dec
xchg
notb
cmp
push
cwtl
int
mov
lock
jp
add
js
mov
icebp
and
movsl
cli
cld
push
mov
mov
test
into
and
sti
cmp
mov
outsb
adc
mov
andb
cld
cmp
mov
outsl
cld
popl
nop
lahf
jo
mov
xchg
cmp
ret
mov
cld
sti
pop
cmp
push
adc
sbb
adc
jb
jo
pop
cmpsl
xor
je
add
sub
push
mov
push
bt
call
jnp
clc
in
xor
repz
add
das
das
adc
or
inc
stos
fsubr
scas
pushf
xchg
out
push
sbb
and
sbb
jo
xchg
lret
cmp
adc
fisttps
pushf
add
add
mov
cmc
call
stc
adc
pop
mov
pop
adc
adc
out
add
notb
hlt
in
xor
sub
push
orb
mov
fisubrs
sub
cmp
andl
jmp
mov
jne
out
cmp
lret
icebp
incb
test
out
dec
pop
lods
cmp
sub
dec
stos
lods
scas
cwtl
dec
lahf
aas
mov
daa
xlat
push
stc
outsb
mov
les
sub
inc
inc
adc
push
out
sbb
add
or
adc
sbb
sbb
or
in
push
aad
xchg
bound
xchg
bound
arpl
outsb
lcall
cli
ficomps
decb
mov
enter
fucomip
or
xchg
jl
xchg
or
mov
daa
out
lea
jecxz
or
mov
sahf
sbb
shrl
rcrl
adc
mov
popw
js
fldl
cli
daa
push
and
add
leave
mov
call
sbb
pop
mov
mov
dec
or
lds
sarb
cmp
mov
gs
jecxz
pop
xchg
enter
fstl
pop
xlat
out
or
xchg
push
cmpsl
or
mov
aad
scas
pop
nop
mov
add
pop
test
test
mov
push
mov
push
cmp
pop
mov
and
insb
fidivrl
imul
mov
xchg
adc
mov
and
aad
fsubr
jle
mov
cmp
sti
mov
or
stos
cmp
push
pop
xor
lock
rolb
mov
out
jecxz
hlt
out
xchg
jmp
shlb
jno
aad
sbb
repz
add
insb
addl
test
push
lds
outsl
pop
fsubs
filds
mov
inc
out
inc
into
lcall
jno
mov
push
inc
xor
sub
lret
in
dec
sub
loope
mov
inc
call
scas
and
mov
or
jp
and
and
or
xor
fwait
jne
filds
addr16
pop
jno
stos
cld
in
mov
push
shlb
fisttps
push
adc
das
in
mov
in
pop
mov
adc
les
pop
ficoms
daa
mov
lret
xor
jge
test
movsb
inc
mov
mov
jge
cmp
mov
fwait
in
xchg
call
jb
xchg
and
push
test
sahf
add
lea
jg
jnp
dec
push
cmp
push
jp
pop
push
jns
push
rcl
sbb
cmp
and
pop
mov
aaa
push
push
sub
out
cmp
fwait
add
mov
add
iret
push
adc
pop
dec
xchg
inc
adc
push
inc
or
out
movsl
sub
dec
mov
test
sbb
les
xchg
movsl
dec
sbb
sbb
aaa
addr16
push
adc
in
or
mov
jo
subb
cmp
dec
sbb
xorl
push
add
test
jmp
mov
xchg
pushf
stos
lods
cs
xchg
loop
and
aam
enter
sbb
aaa
lcall
je
sarl
fcompl
addr16
add
and
ds
cs
scas
jge
jl
jecxz
push
push
push
ja
pop
je
out
inc
fdivs
jg
adcl
sub
lods
push
mov
inc
mov
pop
add
mov
mov
pop
dec
jae
cmp
dec
inc
push
nop
or
ror
data16
iret
xchg
lock
lret
push
ss
cwtl
in
loope
xchg
sti
clc
stos
sbb
mov
cmpsb
jbe
sbb
cmpl
or
mov
mov
cwtl
or
lret
mov
rcl
ljmp
mov
push
test
adc
mov
jo
pushl
daa
arpl
pop
fwait
inc
das
mov
scas
mov
fwait
xchg
mov
jg
jb
js
andb
push
stos
push
ja
pushf
test
and
ret
xor
and
cmp
int
xor
imul
xchg
les
cmpsb
jle
inc
jmp
xchg
ss
fdivrs
test
les
scas
xchg
sbb
aaa
mov
ss
nop
mov
lods
add
dec
cltd
nop
shr
mov
insb
test
popf
repz
fidivrl
jns
rorl
aas
push
cwtl
and
imull
clc
cmp
je
pop
sbb
and
lcall
pop
js
mov
call
xor
test
xchg
push
xor
das
pop
dec
jg
adc
addr16
ljmp
std
fnstsw
sbb
lret
push
les
and
pop
inc
shlb
xlat
pop
jnp
add
jmp
pop
popf
add
ja
cmp
mov
dec
mov
mov
push
inc
pop
insl
xchg
or
pop
xchg
gs
xor
fcompl
cmp
pop
es
fbld
arpl
cmp
jmp
cmpsb
lea
adc
mov
mov
inc
fisubrl
shll
push
int3
arpl
ljmp
adc
movsb
dec
out
dec
out
jmp
repnz
add
cld
lea
rorl
xor
hlt
dec
xchg
sahf
jae
fsub
lds
popa
jns
pushf
sbb
mov
xchg
sub
inc
mov
push
add
and
sub
sub
lds
int3
enter
inc
shll
out
mov
sbb
aas
in
jle
std
lret
das
pop
push
push
sbb
mov
sarb
mov
mov
das
stos
movsb
cmp
imul
push
sbb
lcall
push
movsl
int3
decl
push
xlat
add
movsl
xrelease
bswap
jecxz
jmp
push
inc
loop
test
xorb
and
sarb
mov
xchg
ret
mov
mov
das
and
or
mov
inc
push
je
fs
icebp
nop
mov
cmp
xchg
leave
mov
mov
lea
dec
sbb
or
and
xchg
lcall
pop
xchg
into
lcall
movsb
mov
and
fucom
out
fmul
ret
ret
jbe
jae
stos
sub
fiaddl
push
push
fisubrl
push
ja
cmp
jge
lcall
daa
cli
cli
insb
lret
sbb
mov
mov
call
popa
bnd
jae
lret
sbb
xchg
push
mov
mov
xor
push
xchg
scas
cltd
inc
imul
adc
push
jl
aam
mov
sbb
rcl
scas
clc
pop
fnstcw
test
mov
jno
sbb
xor
dec
ret
jle
imul
popf
add
fisttpl
mov
mov
aam
fcoms
jl
xor
xchg
test
insl
daa
mov
sbb
sub
add
sbb
pop
xchg
mov
lret
stc
mov
cmp
lret
jno
popa
enter
repz
lea
adc
inc
inc
notb
loopne
addb
dec
idiv
scas
jp
xchg
in
lock
jmp
and
aaa
pusha
in
aad
pop
shll
sub
lcall
cli
dec
shrl
push
daa
xlat
add
js
pop
loopne
negl
in
cld
sub
out
jmp
dec
jne
cs
hlt
jb
int3
xchg
push
pop
pop
push
cmc
xor
fsubl
bound
mov
add
add
ret
fidivl
fsubl
add
dec
out
cli
cmp
pusha
sub
adc
mov
xchg
pushf
xor
jns
in
xor
bound
push
push
add
jle
test
and
jle
xchg
cwtl
mov
fimuls
or
jnp
insb
adcl
sbb
push
outsl
in
sub
push
inc
aam
repz
mov
in
pop
ljmp
push
mov
ljmp
movsl
test
xchg
cmp
push
or
test
adc
out
fdivrl
or
cwtl
jno
fisubrs
xchg
arpl
mov
out
or
mov
xlat
neg
dec
movsb
movb
sbb
mov
mov
test
cmp
adc
cmpl
push
sub
mov
int3
in
sub
xchg
mov
and
adc
cmc
mov
scas
push
add
rorl
ss
popf
and
shrl
test
or
push
inc
cmp
test
jb
inc
js
cmc
push
or
lret
stc
out
xchg
cltd
aam
xor
orl
ficoms
lret
fisttpll
inc
gs
icebp
cmp
xor
jmp
ret
jmp
xorb
xor
jbe
push
hlt
ljmp
sbb
or
jp
sti
sarl
insb
xchg
fnstsw
shrb
push
jmp
adc
inc
ss
pusha
mov
push
clc
mov
sarl
imul
test
push
mov
xor
pusha
cmp
cmpsb
fmuls
push
mov
mov
mov
call
out
ja
adc
fs
jo
rcrl
adc
adc
sub
adc
pop
xchg
repnz
dec
sahf
mov
in
and
add
mov
iret
mov
mov
adc
shlb
add
decl
pushf
xlat
xlat
mov
lret
jnp
xor
test
cmp
xchg
sar
push
loop
dec
adc
andl
movsl
in
iret
rcr
mov
stc
dec
ret
jo
xchg
jmp
sub
fcmovnu
cmp
xchg
push
fs
adc
and
mov
inc
dec
ds
call
xchg
lds
pop
push
cmpsb
in
fsts
icebp
das
jg
mov
sarl
pop
mov
xor
add
adc
mov
out
lea
sub
mov
test
adc
pop
iret
std
daa
push
lret
cmpsb
cmp
and
clc
addb
pop
sbb
sarl
cmp
aam
and
lret
or
mov
lods
mov
jp
outsb
orl
fldcw
jp
fnsave
test
add
jp
pop
mov
xor
out
or
clc
xlat
push
push
sbb
inc
mov
pop
cmp
sahf
xchg
sub
adc
sub
push
ljmp
lds
loope
outsb
shl
mov
adc
pop
adc
imul
xor
cmp
adc
dec
stos
xchg
shll
mov
and
xor
mov
out
dec
aam
jo
inc
ret
ds
add
iret
mov
rclb
int
mov
adc
outsb
movsb
aas
xlat
sbb
lds
mov
adc
jnp
out
rol
push
pop
xlat
test
out
mov
cmp
mov
cli
subb
sub
or
push
xchg
fnstsw
outsl
add
push
jne
in
pushf
or
std
mov
mov
add
inc
ss
jns
shlb
xorl
lea
out
sub
mov
cmpsb
pop
rcl
dec
and
add
mov
lahf
lahf
xchg
and
cmp
pop
fadd
add
mov
and
out
mov
pop
fidivrs
scas
mov
mov
repz
cmp
mov
pop
cli
daa
mov
xchg
sahf
adc
add
sbb
mov
data16
and
jo
hlt
mov
aas
jecxz
out
in
adc
and
pop
or
shrl
leave
cmpsb
sbb
jbe
pop
flds
cmp
out
add
mov
ljmp
mov
and
xchg
fbld
leave
pop
mov
loope
add
pop
flds
std
dec
iret
das
rorl
push
cmp
dec
es
push
inc
xor
and
cmp
iret
mov
or
adc
xchg
inc
out
mov
inc
jge
xor
adc
pop
hlt
movsb
jne
inc
cs
xor
test
sahf
add
and
scas
lock
xor
jns
xor
insl
dec
sar
adcb
icebp
sbb
arpl
scas
or
or
cltd
push
adc
mov
test
scas
sbb
jl
cmpsb
or
dec
push
ja
add
or
jmp
push
fldt
cmp
fwait
ljmp
fwait
aad
xchg
js
mov
ret
fdivrl
or
fwait
jns
stos
dec
xchg
adc
and
push
out
call
jns
pop
push
lods
cmpsb
sbb
aas
mov
xor
push
repnz
cmp
enter
popf
imul
jbe
jo
cmp
popf
push
sub
push
icebp
adc
xlat
mov
push
sbb
mov
sub
mov
clc
cwtl
js
jle
xchg
fucomp
inc
addr16
push
and
lahf
imul
xchg
in
sbb
sbb
test
mov
inc
jne
xchg
lret
add
in
mov
xor
fistl
mov
jl
negl
addr16
xlat
ret
frstor
stos
pop
jns
in
xorb
xchg
jle
clc
fistpll
sbb
dec
shrb
outsb
leave
out
test
sbb
or
inc
ja
cmpl
inc
add
sbb
cmpsb
add
movsb
scas
dec
jp
into
cmp
out
out
sarb
cmp
mov
jae
jnp
mov
cmp
sub
lcall
lods
cli
mov
dec
ret
rcrb
mov
sbb
iret
mov
cmp
in
aad
adc
in
sub
lock
rorl
icebp
mov
scas
mov
push
stc
popa
nop
nop
push
mov
xchg
xchg
inc
cmpsb
push
scas
loope
and
push
lock
aad
fidivrl
cmp
ret
pop
bound
faddl
jne
fisttps
jb
lods
out
sub
ljmp
das
mov
cmp
push
cmp
inc
adc
arpl
hlt
pop
pop
pop
mov
push
das
sub
adcl
mov
iret
arpl
xchg
xlat
aas
cmp
mov
outsl
cmp
jb
stos
adc
xor
pushf
push
scas
push
es
cmpsl
mov
pushf
mov
cwtl
push
cld
imull
push
insb
dec
loope
int
lret
mov
lock
mov
sbb
cmp
sub
push
jno
fsubrl
into
ljmp
pop
push
movsb
shlb
xor
and
leave
sbb
dec
scas
sbb
popf
daa
pop
js
sbb
les
mov
fidivl
mov
xor
sbb
cmp
dec
fcmovnbe
es
movsb
pop
out
xchg
xchg
into
xchg
out
mov
push
outsl
mov
xchg
ljmp
push
xorl
les
aas
rclb
sub
xchg
imul
lahf
sub
mov
push
in
out
lret
shll
pop
inc
js
cli
les
in
xor
add
push
mov
pop
lahf
mov
jl
mov
sbb
ret
or
push
push
push
lret
std
in
ljmp
jl
int
xor
inc
shlb
loope
sbb
inc
or
adc
mov
pop
inc
mov
xor
jle
or
sbb
repz
and
fstl
mov
outsl
cmp
imull
addr16
push
stc
sbb
pop
aas
cld
clc
add
ret
lret
cltd
push
pop
sub
cmpsb
cmpxchg8b
or
or
xchg
mov
or
xor
int
subb
and
mov
in
push
xchg
jge
mov
add
sbbb
shlb
call
aas
jno
mov
xor
mov
mov
or
push
lahf
in
xchg
push
and
lock
ljmp
ret
fwait
sbb
icebp
aaa
aam
jnp
inc
jnp
in
pusha
dec
repz
jmp
stos
xchg
ss
inc
sti
push
test
cmp
ret
push
pushl
out
pop
xor
sbb
pop
mov
or
sbb
repz
mov
and
je
loope
ret
jmp
rolb
mov
push
pop
cwtl
cmp
add
lcall
or
jmp
insb
xchg
and
cmpsl
imul
imul
pushl
bound
roll
inc
push
insl
stos
mov
sbb
pusha
mov
inc
test
cs
lret
push
xor
lahf
jmp
pop
outsb
fcomps
pop
std
fldl
add
cmp
ja
fcoml
adc
add
mov
pop
js
jo
cmp
mov
mov
pop
or
je
xor
inc
out
jmp
add
fwait
adc
pop
sarb
push
fistps
cwtl
hlt
rorl
cmpl
xorl
loop
jmp
ljmp
ret
xor
cld
and
mov
fs
mov
rorl
jno
adc
xchg
and
insl
hlt
and
daa
out
decb
sub
push
adc
cmpsl
adc
or
test
rol
dec
fs
pushf
dec
sti
stos
into
xlat
movsl
rcr
insb
cli
adc
jmp
mov
ja
xor
out
lcall
inc
not
imul
sbb
leave
in
and
pop
in
arpl
shr
jmp
les
notl
pop
js
mov
outsb
jmp
mov
imul
push
inc
or
cli
xchg
repnz
add
adc
call
adc
mov
fucomip
adc
sbb
add
mov
xchg
lret
cltd
fcoml
mov
lock
dec
dec
xchg
dec
popf
inc
mov
nop
test
adc
in
shr
add
ret
adc
and
out
shrl
jne
xor
sbb
outsl
and
pop
dec
push
adc
gs
jle
jno
je
jnp
out
js
aad
lods
pop
xlat
and
pop
xor
adc
or
shll
lcall
addb
lret
aad
scas
jo
out
lcall
xchg
fstpl
add
sub
jne
mov
sbb
fsubr
dec
or
test
ja
out
pop
cmp
push
pmaxub
outsl
add
outsl
mov
cwtl
lcall
lcall
mov
fcmovnu
pop
ret
sub
jno
sub
out
mov
out
xchg
cmp
push
cmp
xor
jbe
mov
jns
push
addr16
in
mov
in
and
shll
sub
ds
mov
mov
xor
cli
mov
adc
ret
loop
and
stos
sub
add
pop
data16
and
cli
lret
jg
inc
mov
xor
out
push
inc
ret
push
mov
lahf
mov
fnstcw
jmp
arpl
iret
ljmp
add
mov
aam
dec
repz
out
lea
cwtl
cs
lahf
fldl
fisubrs
dec
fstps
mov
sub
mov
pop
cmpsl
sub
in
pop
push
dec
dec
pushf
test
mov
nop
out
cmc
data16
hlt
scas
mov
imul
scas
arpl
push
xor
stos
sub
repz
clc
jmp
jae
adc
push
add
mov
inc
test
repnz
inc
mov
pop
or
xor
jecxz
cmpb
xchg
add
jg
and
mov
pusha
jae
inc
leave
lret
sbb
jbe
mov
add
pop
mov
icebp
add
xchg
hlt
cmp
ljmp
add
jmp
inc
stos
insl
mov
lods
sarb
sti
mov
rorl
es
jp
fmuls
push
push
sbb
adc
dec
adc
pop
xlat
leave
lods
pop
xchg
jb
or
jle
jno
nop
cld
dec
lahf
push
cltd
fdivrl
adc
add
sti
gs
int3
je
mov
mov
out
pop
sti
sbb
scas
push
nop
pop
sub
shll
jns
loopne
push
or
cmp
out
adc
pop
xchg
sbb
or
xchg
and
jo
xchg
hlt
mov
out
popf
into
mov
jg
xchg
cld
cmc
xor
loope
xchg
cmp
pop
xlat
pop
push
mov
xor
out
pop
mov
nop
sbb
repnz
dec
xlat
pop
dec
adc
daa
push
mov
jg
and
mov
push
sbbb
ret
add
lahf
fnstsw
inc
hlt
jmp
xor
lcall
sub
dec
cltd
aam
mov
jmp
cld
inc
cmpsb
pop
test
lods
into
fcmovnu
jecxz
push
insl
mov
enter
popa
addl
pop
mov
dec
add
mov
and
les
mov
cmp
xchg
fcmove
sti
dec
pop
jb
xor
cmp
rcl
push
pusha
mov
jo
lahf
fs
rol
arpl
dec
pusha
fmul
or
hlt
xchg
inc
pushl
adc
fsubs
dec
lahf
cmp
cmp
daa
jnp
mov
lret
push
or
and
icebp
out
push
cmp
push
adc
imul
jmp
add
cmpsb
mov
sub
pop
mov
mov
mov
cltd
jecxz
test
jmp
ljmp
cmpsb
test
shl
je
pop
xor
je
hlt
xchg
jle
or
rol
bound
loopne
inc
aam
and
sbb
pop
test
sub
fidivrs
out
xor
cmp
sub
inc
cmc
jp
lds
in
xchg
pop
push
add
sbb
aas
xchg
arpl
inc
inc
push
cmc
insl
roll
movsl
insb
push
mov
xlat
jge
cli
lret
fwait
rolb
cmp
push
sub
imul
adc
add
cmp
loop
mov
push
push
and
rcrl
sub
shll
cmp
int
ja
xor
xchg
lea
leave
or
in
add
mov
inc
aad
xor
inc
pop
mov
inc
jmp
cld
je
or
xor
xchg
xor
es
mov
test
repnz
jmp
sub
jl
and
out
and
in
xor
loopne
cwtl
sub
movsw
mov
popf
je
movsl
pop
je
adcl
fcompl
cltd
push
fiaddl
sub
mulb
pop
cmpsl
cmp
test
cmpsl
push
and
data16
rol
lahf
adc
inc
inc
test
push
addr16
enter
notl
push
push
mov
cs
push
or
cmp
pop
cld
mov
pop
fiaddl
loopne
adc
inc
imul
call
iret
xchg
stos
cmpsb
fsubr
jp
out
dec
add
jge
xchg
int3
adc
mov
jne
push
lods
xchg
pop
push
push
in
mov
into
js
mov
cmp
fcmovne
jns
leave
push
sar
addr16
pop
jg
movsb
xchg
jbe
in
jl
stos
lds
loop
movsl
dec
xlat
pop
rorl
mov
lret
dec
pop
or
jl
pushf
mov
int
pop
in
cmp
mov
xor
sub
sub
xlat
stc
faddl
jl
imul
mov
and
push
lcall
aad
jmp
nop
dec
ret
or
sahf
gs
and
cmp
cmp
stos
mov
lcall
jbe
addb
idivb
aaa
sbb
cmp
ds
sbb
jge
enter
pop
xor
sahf
cmpsl
int
jno
roll
out
cmp
jno
test
pop
sbb
loope
sahf
daa
mov
pop
fwait
sbb
fbstp
xchg
push
test
out
adc
xchg
aas
cltd
aaa
lods
pop
mov
pop
aaa
lcall
pushf
scas
je
test
insb
or
andl
cmp
or
je
bound
ds
inc
jmp
daa
jle
sub
or
push
dec
adc
sbb
mov
xorl
cmc
out
push
dec
popf
xchg
fdivrs
mov
adc
jge
xchg
ds
mov
cmpsb
mov
add
cs
or
push
jg
mov
inc
ds
pop
mov
push
icebp
xor
sbb
jb
int3
fnsave
mov
mov
add
jp
fbstp
jge
dec
insl
mov
push
stos
sub
push
fs
pop
ret
test
push
ljmp
jp
out
insl
cmpsb
sbb
push
sar
push
data16
ret
pop
aas
mov
add
cmp
lahf
pop
pop
aas
flds
and
or
xor
aam
pop
and
mull
mov
mov
or
popa
shl
popf
push
imul
sbb
sbb
push
js
push
addr16
fmuls
inc
jecxz
mov
insl
les
mov
std
and
outsl
stc
cmc
sub
inc
movsl
mov
xchg
mov
cmpb
xor
pop
iret
jmp
adc
lock
pop
sbb
adc
dec
rcll
ret
dec
pop
sbb
push
and
mov
fcompl
std
mov
hlt
dec
mov
rolb
cs
or
outsb
cwtl
push
ret
add
loopne
cs
in
sub
adc
cs
push
mov
sbbb
insb
cmpsl
xor
mov
jl
adc
loop
mov
mov
fisubrl
xchg
or
inc
cmpsl
mov
mov
bound
pop
jecxz
cs
roll
cmc
mov
ja
stc
nop
and
dec
adc
ds
inc
in
xchg
jns
pop
mov
nop
jne
push
sbb
sbb
pop
insb
das
clc
addl
out
inc
into
mov
xchg
inc
dec
inc
xor
movsb
out
adc
test
dec
pop
push
dec
sub
mov
out
mov
mov
cmpsb
cmp
xchg
in
adcb
sbb
rcl
pop
adc
jae
jle
call
ljmp
pusha
pop
iret
adc
lcall
test
pop
orb
mov
daa
cmp
xchg
xchg
es
icebp
adc
rolb
cmp
pusha
and
inc
cmpsb
or
loope
jb
mov
test
nop
cld
rcrb
jecxz
lds
jmp
in
cwtl
in
push
adc
lea
mov
stos
in
pusha
sahf
in
adc
testl
xchg
xor
popf
fstpl
push
add
jnp
xor
jle
dec
cwtl
shll
dec
push
pop
or
xor
ds
push
mov
daa
jo
mov
cmpsb
mov
roll
inc
adc
stos
stc
dec
push
std
mov
push
nop
mov
sub
inc
inc
or
adc
mov
mov
mov
mov
outsl
xor
jns
and
mov
inc
addr16
int3
mov
jmp
jbe
int3
mov
test
push
js
or
in
jb
inc
pop
outsl
or
mov
sub
insb
mov
loope
idivb
cmpsb
pop
mov
arpl
and
cmpsl
mov
mov
or
xchg
stos
xor
mov
outsb
fs
fistl
or
push
jge
xchg
sub
add
stos
gs
cwtl
imul
scas
push
dec
and
jmp
scas
cli
imul
sbb
cmp
inc
push
loop
scas
xor
mov
aad
in
pop
jle
cld
in
mov
hlt
jno
push
inc
cltd
push
jg
xor
and
cmp
jmp
imull
rcrl
aaa
ret
mov
sbb
pop
imul
inc
and
imul
mov
xor
hlt
xchg
nop
out
push
pop
in
jle
cmp
pop
xor
inc
xor
push
data16
sbb
aam
fisttpll
add
inc
cmp
mov
xchg
icebp
iret
out
arpl
lods
push
jb
jecxz
inc
fwait
cmc
xchg
push
test
mov
int
imul
cmp
cmpsb
movsl
jg
sbb
cmpsb
scas
pop
sub
es
jnp
hlt
fstl
jmp
cmp
loope
inc
xchg
xor
mov
call
hlt
push
lahf
sub
mov
xor
cmpsb
jmp
xor
stos
stc
lea
push
mov
jg
icebp
les
cmp
mov
xor
xchg
shl
xchg
aaa
rcll
mov
dec
outsb
ds
jg
rcrl
loope
sbb
add
testb
mov
clc
hlt
aas
nop
adc
pop
jae
jnp
lret
clc
and
cld
js
je
lock
out
js
mov
sahf
cmp
push
ds
popf
addr16
in
inc
lods
cld
cmp
pop
xor
push
imull
and
push
in
std
or
andb
lret
gs
dec
into
inc
ds
push
loopne
test
in
add
fstpl
ja
inc
or
shlb
mov
mov
add
or
cmp
dec
vphadddq
xor
fnstcw
push
out
jmp
ret
xor
pop
cmpsb
mov
inc
cwtl
stos
mov
add
sahf
or
mov
mov
jne
enter
call
mov
or
xor
xchg
xchg
je
jb
sbb
lods
out
fdivrp
jle
sbb
fsts
pop
fimull
xor
pcmpeqw
fs
pushf
ljmp
add
sbb
mov
mov
sbb
xor
lret
mov
sbb
mov
int
mov
sbb
outsb
adc
and
movsl
sub
push
out
dec
fadds
xchg
xchg
hlt
fwait
sub
mov
ficoms
imul
push
xchg
mov
fisttpll
cld
pushf
mov
jno
orb
jo
enter
imul
shlb
jne
sub
out
fs
cmpsl
aaa
pop
bound
les
inc
enter
lods
sahf
add
inc
and
or
pop
and
scas
mov
inc
cltd
and
hlt
stc
cmp
test
jns
gs
ljmp
dec
inc
in
sahf
add
in
sbb
sbb
fildl
dec
xchg
clc
arpl
mov
imul
stos
lcall
and
pmulhuw
int
imul
inc
and
outsb
vdivpd
inc
mov
pop
mov
movl
cli
inc
fidivrs
cli
or
pusha
ljmp
cmp
loop
andl
dec
aas
jbe
lahf
scas
mov
and
push
sbb
fists
mov
inc
pop
or
lods
fwait
jae
push
in
jg
add
push
shlb
movsb
loope
xchg
leave
mov
lods
mov
lea
repz
fbld
jno
les
mov
scas
lret
push
rorb
out
mov
mov
push
push
mov
insl
add
jecxz
das
mov
or
fimuls
push
mov
xor
or
cmp
movb
sub
sub
adc
jge
pop
mov
hlt
push
outsb
jmp
jne
and
sbb
mov
aaa
push
inc
test
int3
adc
and
test
rcr
jmp
xchg
test
fisttpl
cmp
mov
movsl
loope
cmc
sbb
push
push
pushl
call
pmaxub
mov
push
vpaddq
mov
lea
pop
add
pop
nop
daa
cltd
fistpll
jge
imul
cld
cmp
loopne
and
ljmp
pop
pop
jns
stc
xchg
cli
add
dec
int
test
dec
das
adc
shrl
insb
adc
aad
cmp
es
pop
int3
popf
mov
jae
dec
xchg
lret
or
stos
lods
sub
lods
aad
stc
xchg
jb
cli
ret
dec
sub
addb
dec
aam
push
dec
jmp
mov
pop
adc
adc
mov
xorl
dec
das
movsb
mov
addr16
dec
cmp
xor
imul
jns
mov
arpl
out
push
xlat
test
nop
test
into
add
incb
clc
mov
cs
sub
inc
jb
outsb
rorb
dec
nop
push
cmp
inc
mov
outsl
jl
ss
push
rcl
add
cmpsb
popa
mov
lods
shll
pop
xorl
cmp
bound
push
xchg
rorl
dec
cli
pop
jge
incl
rclb
les
dec
psubb
xchg
imul
mov
cmp
repnz
jl
adc
fisttpl
pop
adc
jbe
cmp
js
ret
mov
ret
dec
fdivrl
add
sbb
xor
ljmp
xor
fidivs
fadds
pop
jo
gs
sub
xchg
dec
xchg
rcrl
insb
mov
lahf
rcrb
jne
mov
aad
movsl
push
push
pop
into
add
mov
add
ret
insb
push
shld
adc
or
subl
add
cwtl
inc
jnp
jp
sti
imul
dec
cmp
popa
sbb
or
imul
xchg
and
out
push
pop
or
stos
push
jns
or
mov
cs
popa
xor
and
or
popa
or
add
lret
xchg
mov
push
adc
xor
or
rcrl
add
add
push
jb
les
cmpsb
outsl
push
int
mov
cmp
mov
cmp
pushl
xlat
and
mov
bound
movsl
cmpsb
in
mov
out
push
adc
inc
insl
cld
mov
xor
js
popa
push
pop
push
push
xchg
call
jo
cmpsb
sbb
lret
inc
mov
mov
cs
mov
push
into
cmp
mov
xor
clc
jl
mov
bound
sbb
inc
imul
push
dec
xchg
cld
jns
daa
std
push
cld
mov
adc
push
loopne
ja
loope
mov
movl
and
jne
xchg
fsubs
push
fs
pop
cmp
cmp
and
pop
in
dec
dec
out
pop
mov
inc
mov
or
je
sar
xorl
out
add
push
dec
pushf
dec
jl
out
loope
mov
rcll
fildll
lea
leave
enter
imul
jno
lret
out
dec
xchg
leave
sub
sbb
xor
xchg
inc
cltd
insl
pop
push
pop
and
lcall
outsl
dec
xchg
cld
aaa
jns
movb
fwait
adc
imul
insb
or
inc
or
icebp
fisttps
xor
sbb
or
cmpsb
mov
pop
xor
cmpsl
imul
pop
fnstsw
push
xchg
xor
decl
inc
mov
mov
inc
xchg
inc
in
sarl
sub
jp
mov
repnz
jne
xchg
fistps
jo
sbbb
out
add
imul
pusha
xchg
pusha
das
movzbl
dec
push
push
adc
insb
mov
xor
inc
in
out
xchg
pop
cmp
sbb
int3
sbb
mov
pop
cwtl
cwtl
mov
mov
xchg
push
fld
rep
sub
vmwrite
xor
rcl
sti
ss
push
mov
mov
push
out
sub
adc
push
sub
loopne
cwtl
jp
or
aad
stos
xchg
lea
rclb
dec
xor
pop
inc
add
shlb
sub
test
test
fnstenv
les
in
loopne
mov
mov
jnp
jmp
test
cli
push
push
dec
inc
roll
jmp
lods
stos
movsb
inc
es
repz
aaa
cs
jnp
pop
ret
in
or
inc
call
mov
aaa
mov
loope
sub
repnz
jo
cwtl
aad
pop
shlb
mov
xor
or
push
lods
test
push
in
jae
pop
imul
sub
jl
xchg
add
dec
js
xchg
or
adc
jle
pop
repz
xor
fidivrs
andl
xor
lcall
cmp
inc
fistpl
push
xchg
xchg
cli
pop
scas
xor
and
jecxz
and
in
daa
xchg
xchg
pop
cmp
adc
inc
mov
sub
aaa
cmp
or
jl
dec
mov
add
loope
xchg
imul
cmp
in
cld
mov
jne
push
fcom
test
pop
int3
rep
dec
cmpl
mov
pop
pop
mov
mov
popf
div
dec
jb
sbb
add
outsl
cmp
cmp
dec
cmp
push
xor
lds
ja
mov
lret
enter
and
movsl
stos
lds
gs
ret
jl
mov
add
es
pop
andb
lock
pop
fdivl
ret
push
adc
pop
in
adc
fmul
inc
lahf
mov
mov
pop
out
pop
rcrl
clc
les
push
cmp
aam
and
addr16
or
ret
dec
jecxz
scas
rclb
decl
dec
pop
add
js
pmaxub
popa
punpcklbw
inc
insl
sbb
push
xchg
out
hlt
mov
dec
je
fstpt
mov
push
push
jbe
stc
mov
int3
std
cmpsb
js
fisubrl
rolb
fnstsw
and
dec
xchg
add
ljmp
aas
je
push
int3
adc
and
mov
and
xor
cmp
aam
xchg
jnp
rolb
scas
pop
icebp
xchg
movsb
and
loopne
xchg
dec
inc
add
xchg
xor
pushf
push
loopne
pop
nop
ss
imul
lret
jmp
pop
fistl
add
imul
nop
lods
sub
std
fsubrp
push
fildll
jge
nop
jge
in
pop
mov
ljmp
lret
lods
dec
sbb
jp
push
pop
pop
mov
lret
mov
std
sub
xchg
mov
jmp
xor
das
ret
lods
lods
psllq
jb
rcll
jecxz
ljmp
add
std
orl
sbb
std
cmp
cmp
sbb
dec
jne
movsb
imul
rcl
add
sbb
or
cmc
rclb
nop
sahf
inc
f2xm1
les
jp
call
aad
fcoms
fcomps
jo
outsb
and
jl
std
sub
inc
lods
outsb
insb
outsl
sbb
movsb
fldt
pushf
fs
movsl
jg
dec
push
xlat
call
aas
mov
out
cli
xchg
cli
cld
mov
call
fstpt
js
fcoms
mov
cmp
mov
stc
sub
xlat
test
je
ror
scas
and
xchg
add
ds
in
add
ret
and
push
inc
mov
cmc
out
cld
imul
mov
fcmovu
sbb
sbb
fcmovnu
repnz
pop
sub
dec
jmp
addl
mov
repnz
pop
int
rcr
mov
movsl
cmpsb
push
jb
pop
cmpl
pop
pushl
arpl
sub
push
add
or
adc
xor
pusha
cwtl
mov
or
repnz
jg
xor
jecxz
imul
vmaxps
mov
insl
cmp
add
push
cwtl
mov
push
mov
ffree
pushf
pop
pop
xchg
loop
sti
fldcw
cli
add
lea
inc
mov
push
filds
sub
pop
fimuls
sub
inc
add
xor
stos
mov
loopne
in
sbb
fstl
add
aam
mov
sti
xor
sub
push
adc
push
mov
addr16
fidivrl
test
xchg
das
xchg
cmovnp
cli
test
ret
mov
mov
in
mov
lods
push
movsl
cmp
je
das
dec
sub
ficompl
push
xchg
test
cld
cmp
push
test
clc
mov
fwait
jnp
or
loopne
in
cmp
test
dec
add
repnz
cld
test
lock
sub
sbb
int3
mov
cld
repnz
fdivl
into
mov
dec
mov
jo
filds
and
out
repz
test
xchg
add
mov
adcb
dec
in
mov
repz
test
ficomps
movsl
je
addr16
jae
insb
xorl
in
ds
lods
popa
insb
fnstsw
cmp
les
aam
shll
fldcw
jecxz
lret
test
xchg
imul
inc
cwtl
mov
mov
loopne
rcll
sbb
outsl
jnp
pop
xchg
xchg
clc
loope
jp
xor
scas
pushf
std
sub
cmp
or
and
out
das
xor
les
adc
rorb
xchg
and
xchg
ds
sub
int3
je
ret
pop
test
or
fisubs
inc
push
insl
mov
push
cmpsl
lock
add
mov
icebp
cs
sub
cmp
cwtl
dec
cmp
jne
mov
hlt
mov
push
xchg
loop
sub
aam
mov
ljmp
mov
test
add
fisubrl
xchg
das
jo
sbb
rcrb
lahf
out
add
outsl
xchg
dec
stos
jge
rolb
fdivs
and
repnz
jno
mov
shll
shlb
inc
ss
aad
fs
and
sbb
push
jg
test
sahf
sub
popa
inc
aaa
js
jg
dec
mov
jge
lret
in
push
call
pop
or
test
cmp
test
push
push
mov
fcompl
js
shld
nop
mov
sahf
cltd
sub
aad
dec
dec
jge
loope
pop
jnp
mov
xbegin
arpl
or
add
adc
cltd
loop
pop
jecxz
insl
sbb
movsb
fistpll
push
les
pusha
ret
xchg
sbbl
push
xor
les
jecxz
sub
outsb
sbb
lahf
mov
jmp
jae
es
or
jae
bound
push
push
or
lret
lea
and
and
fwait
push
and
flds
xor
stc
mov
movsb
flds
pop
sbb
jecxz
mov
sahf
inc
outsb
pusha
and
xor
jns
callw
fisttpll
mov
add
jo
jne
push
imulb
out
js
fimull
fs
loope
sti
dec
aas
dec
pop
ret
repnz
inc
mov
sub
sub
pushf
jo
cmp
imul
sbb
dec
aam
cmp
jae
lahf
xchg
jl
mov
sbb
rolb
outsb
sub
bound
loop
pop
mov
add
inc
std
sub
frstor
lcall
data16
ss
add
cmpsl
call
inc
mov
inc
adc
mov
mov
leave
push
adc
cmc
mov
in
fucom
pop
cmp
jns
mov
mov
xlat
dec
inc
cs
lahf
sub
mov
mov
out
nop
pop
sahf
ja
mov
fwait
sti
adc
mov
jnp
sbb
iret
shr
and
fstl
fisttps
ja
ss
lahf
rcrl
jmp
xor
adc
add
and
pop
aad
mov
push
lret
loope
nop
xchg
xchg
cmp
push
dec
pop
out
xchg
jle
xchg
fcoms
adc
mov
pop
push
mov
pop
sbb
push
cmp
adc
movsl
cld
fsubrl
sti
icebp
inc
mov
andb
popf
in
mov
stos
rcrb
cmpsb
pop
out
test
sbb
fistl
mov
push
pushf
decb
mov
sub
pop
ja
pop
sbb
or
sarl
repz
mov
loope
in
push
popl
clc
popl
cmc
sub
pop
push
repnz
dec
stos
jle
int3
sub
call
lock
int3
pop
cmc
push
pop
push
and
pop
push
sub
shrl
add
test
mov
cmpsl
pop
add
mov
daa
icebp
leave
imul
xor
sbb
push
add
fs
and
cmp
ret
mov
mov
arpl
in
jb
test
fcmovb
sbb
mov
imul
in
xchg
es
popa
in
pop
jns
mov
sub
movsb
out
jmp
cmp
mov
mov
push
insl
and
imul
mov
push
pop
stc
scas
pop
insb
mov
cmp
add
cmpsl
cmp
push
inc
xchg
roll
fwait
int
clc
add
mov
inc
mov
push
push
mov
lea
add
cmp
cmpb
into
adc
ret
imul
test
lds
pop
and
xor
pop
mov
sbb
ljmp
push
fisubl
imul
fidivrl
pop
es
stos
and
pop
push
inc
mov
cli
cmpsl
mov
je
sbb
cmpsl
sub
push
xchg
cltd
leave
test
mov
adc
mov
mov
repz
jne
std
mov
inc
pushf
lock
sti
lds
loopne
inc
mov
inc
call
add
push
shl
scas
adc
shll
jle
psubusw
sbb
js
int3
rorl
cmp
out
test
push
mov
push
dec
ss
nop
add
and
cmpsb
adc
lret
movsl
repz
add
push
inc
ret
cli
test
mov
jle
inc
pop
sbb
pop
cli
xor
test
sahf
lods
jbe
and
shll
adc
push
sbb
fcomip
jg
inc
mull
xor
not
popa
roll
lea
pop
leave
jp
rcl
mov
lds
cmp
pop
inc
addr16
mov
add
xchg
jl
or
lcall
push
dec
mov
les
mov
in
dec
sbb
sub
xor
xchg
push
int
rcl
xor
sahf
add
pop
out
sub
movsb
push
sub
mov
xchg
push
loop
lret
xchg
repnz
clc
push
popa
fisubrs
fildll
pop
xor
push
aam
cmp
push
imul
push
push
cmp
pusha
add
mov
jg
push
imul
sti
cmp
adc
fadd
pop
and
push
daa
lds
cmp
mov
pop
lds
loopne
add
fstl
inc
jge
icebp
sbb
mov
push
movsl
inc
test
xchg
gs
daa
push
cltd
push
movsb
sbb
xchg
pop
stos
or
test
in
jle
push
lock
test
out
push
ror
sub
fs
pop
sub
cmc
stos
adc
shl
push
mov
and
lahf
inc
push
movsb
mov
push
ss
data16
mov
std
push
dec
and
and
stc
add
mov
dec
ds
mov
inc
mov
hlt
dec
jo
jnp
add
pop
fisubrl
ret
sbb
push
mov
push
les
push
mov
dec
jecxz
cmpsl
sub
mov
mov
imul
cmp
in
movl
insl
hlt
jge
sub
mov
ljmp
ja
push
fdiv
lret
fxch
les
int3
ret
lcall
cmpsb
sub
lahf
sub
gs
orb
sbb
ret
xorl
clc
fdiv
test
imull
jecxz
xchg
adc
incl
or
int3
test
lret
fsubl
mov
mov
insl
push
xchg
sub
arpl
cmpsb
aas
cld
cli
and
pop
ret
xor
cld
adc
mov
idivl
repz
les
sub
mov
aam
outsb
icebp
pop
or
shrl
mov
cld
add
dec
mov
xor
xor
mov
lret
out
push
in
mov
cmpb
bound
lret
movsl
adc
jecxz
in
insl
pop
xchg
dec
clc
jp
mov
pusha
dec
aas
adc
push
insl
and
pop
or
cli
ss
lret
pushf
popa
jp
js
jecxz
adc
sub
popf
mov
lock
aas
push
xchg
loope
push
cmpsl
xor
lods
jnp
mov
xorb
stos
jle,pt
fiaddl
fmuls
cmp
rcrb
jb
outsl
cwtl
pop
das
rcl
lcall
pop
pop
ds
mov
push
lods
pop
hlt
clc
pushf
push
push
outsl
pop
loop
mov
enter
sbb
cmp
inc
mov
and
or
sti
scas
fnstsw
rorl
xlat
mov
in
into
icebp
xchg
orl
pop
xlat
outsl
jno
xlat
mov
mov
dec
stc
lds
cmp
sub
sub
mov
lods
sar
out
pop
mov
test
arpl
xchg
jae
mov
ds
mov
mov
ja
mov
adc
test
pop
or
test
sub
repz
pop
ljmp
sbbb
dec
add
push
loope
fnstenv
fisubrs
xchg
cmpsl
bound
mov
jmp
jnp
inc
cmp
not
js
mov
mov
mov
mov
pop
test
cmp
fisttpl
xchg
mov
es
idiv
not
in
in
ret
test
jb
sbb
sbb
inc
adc
jge
lcall
leave
jg
sarl
imul
push
and
mov
jmp
lret
and
adc
lcall
outsb
nop
repnz
std
sti
repz
in
mov
rorl
inc
testb
push
imul
nop
cli
mov
or
je
imul
cs
mov
nop
pop
or
push
clc
inc
dec
ffreep
mov
mov
add
imul
dec
ret
push
int3
cltd
cld
sub
imul
ret
test
pop
cli
js
push
sarl
inc
sbb
xabort
mov
int
and
or
and
cmp
leave
lods
mov
push
cmp
fists
pop
add
in
repz
lea
add
leave
cwtl
in
rorl
daa
mov
lock
movsb
xchg
inc
xor
popa
ret
aam
mov
add
and
nop
xor
inc
xchg
jmp
lret
jno
mov
mov
arpl
ljmp
dec
roll
test
inc
jae
lcall
outsl
movsb
jle
xlat
out
cltd
sar
push
icebp
fs
jno
xor
mov
dec
stc
adc
repz
cltd
je
push
mov
push
or
lret
jmp
imul
adc
jmp
mov
pop
xor
lcall
mov
xor
dec
xchg
enter
cmp
outsb
xchg
rcrb
push
fistps
adc
arpl
mov
cmp
test
sbb
rclb
cwtl
loop
cmpl
xchg
cld
pop
and
jp
notb
aam
lock
fstpt
imul
dec
scas
dec
mov
pop
hlt
scas
icebp
cmpsb
shrb
movsl
sti
push
mov
sub
xchg
shll
inc
adc
xlat
loope
imul
fwait
mov
sub
mov
ret
ficomps
inc
mov
xchg
mov
shrd
mov
dec
pop
mov
jno
cmp
xchg
jnp
xchg
dec
pop
jmp
and
push
fldcw
rcll
out
mov
loopne
aas
dec
mov
pop
xchg
xchg
pop
lret
imul
movsb
cs
adc
xchg
add
and
imul
and
ss
sub
sti
dec
lods
fildll
or
sub
mov
or
in
or
xchg
lea
ret
or
jl
sbb
sub
js
mov
inc
inc
pop
les
sbb
repnz
bound
pushf
and
xchg
jae
call
xchg
pop
shl
filds
sbb
sbb
jbe
pusha
pop
lods
pop
cli
cld
add
pop
adc
into
cmc
addr16
ret
pop
xor
mov
adc
lret
dec
add
mov
fs
fwait
sbb
and
cmp
xor
mov
aas
pusha
sti
mov
xchg
jae
push
inc
nop
push
cmpsl
fdiv
es
out
idivb
fsts
dec
nop
pop
inc
andb
roll
sbb
sti
jmp
cmp
into
cmpsl
push
icebp
popf
sbb
cmp
cwtl
shll
mov
sbb
and
gs
adc
and
cmp
lods
movsl
mov
nop
xor
mov
mov
push
inc
inc
mov
mov
scas
cmc
fidivl
pop
arpl
jmp
ds
repz
and
mov
aam
lahf
fucomip
out
and
cmpsb
stos
cmpsb
pop
movsb
stos
mov
repz
stc
xchg
inc
aaa
into
push
bound
and
sbb
or
in
hlt
mov
fsubs
dec
iret
add
xchg
pop
insb
ret
popa
mov
subl
sbb
imul
daa
pop
cmp
xor
or
mov
flds
and
xchg
jmp
mov
jnp
or
mov
push
jne
lahf
xor
push
push
sti
dec
inc
and
je
adc
push
or
out
loope
insl
xchg
jb
fstl
imul
sahf
mov
hlt
mov
ljmp
mov
and
cmp
mov
xchg
aas
mov
inc
mov
jne
jo
jecxz
repnz
inc
hlt
jnp
push
js
daa
lcall
jle
lret
dec
sub
push
sbb
and
insl
add
je
data16
or
sub
mov
inc
sub
sub
mov
lcall
mov
fdiv
gs
jmp
rclb
stc
ja
mov
mov
lods
jae
push
icebp
sbb
ret
cmp
mov
adcl
inc
fcmovnbe
mov
sub
stos
xor
shrl
jno
pop
test
std
outsb
inc
pop
loop
in
cmp
and
pop
mov
pop
ljmp
and
movsl
lahf
xchg
jecxz
cmp
dec
mov
or
or
lods
ret
or
sub
add
data16
pop
adc
mov
jecxz
xor
les
mov
pop
push
xlat
fsqrt
insb
lods
sub
cs
xor
lods
cmp
daa
xchg
out
inc
mov
in
ret
test
ljmp
inc
dec
sub
push
jg
call
mov
xchg
jmp
ljmp
jmp
sahf
mov
cmpl
pop
decb
inc
in
mul
mov
mov
adc
popa
outsl
lds
cmpsl
mov
cld
lcall
mov
icebp
adc
cmc
xchg
inc
mov
push
int3
mov
push
cmp
outsl
add
dec
js
inc
out
mov
mov
mov
sub
dec
cmc
rcrb
and
mov
lret
lods
ljmp
xchg
push
adc
mov
sbb
nop
inc
hlt
fwait
xor
sti
and
and
or
pop
es
pushf
mov
leave
jmp
fisttpll
out
mov
jge
int
sbb
pop
inc
imul
movsl
xchg
aad
lcall
insb
sub
aaa
dec
mov
or
mov
fwait
addr16
adc
mov
or
adc
push
push
mov
loopne
leave
mov
mov
outsb
jecxz
popf
adc
mov
addl
add
ja
ret
cld
jns
inc
pop
push
imulb
push
fidivs
imul
out
mov
cld
stos
sahf
lock
pop
mov
xchg
outsb
xchg
push
or
jp
into
mov
lcall
jl
mov
dec
or
addr16
xlat
insl
pop
mov
testb
loop
add
test
cmc
push
xor
push
test
aam
ret
jne
pushf
gs
add
mov
aaa
sub
and
sub
stc
repz
ss
and
cltd
mov
jo
and
test
xor
and
rolb
mov
cmp
int3
je
sbbl
jecxz
lret
bound
shrl
scas
push
outsb
popf
mov
decb
sbb
or
arpl
jo
jnp
ret
pop
lret
dec
mov
fs
jge
xchg
test
pop
ss
adc
popa
sbb
cli
cmp
mov
cmp
dec
dec
lahf
les
es
and
out
sbb
shr
fbld
adc
lret
je
or
into
int
stos
loopne
push
sub
push
jnp
mov
int
inc
sbb
jmp
ss
xchg
outsl
call
cmp
xchg
push
pop
jmp
push
aad
xchg
outsb
and
ja
lret
or
mov
mov
sbb
mov
mov
cmpsb
lret
stos
popa
xchg
sbb
fiadds
mov
rcrb
push
sahf
out
mov
mov
pop
inc
sbb
into
lds
jp
pusha
icebp
mov
xchg
loop
aam
mov
jge
cld
popa
jns
sub
push
dec
lea
mov
dec
inc
mov
or
xor
leave
es
xor
cmp
inc
negl
jp
outsb
hlt
jae
push
into
cmp
imul
and
adc
add
cmc
mov
popl
and
xchg
sub
push
arpl
out
jmp
shrl
cld
push
jnp
dec
fnstsw
mov
adc
int
pop
cmp
or
cmp
sbb
push
push
movsl
add
xchg
xor
push
sub
imul
push
ret
fsts
pushf
pop
je
sbb
mov
je
ss
adc
out
je
nop
add
idivb
lahf
jl
xchg
out
xchg
mov
add
ljmp
pop
insl
mov
dec
xchg
adc
fs
add
popf
in
sub
sbb
cli
xchg
fsts
jnp
inc
pushl
push
mov
cmpb
inc
loop
test
and
mov
mov
scas
imul
popf
stc
in
js
push
popa
cld
mov
lock
pop
stos
cmp
jg
out
aad
jg
dec
mov
sbb
aad
test
jb
lods
jg
pop
bound
popf
mov
or
lods
mov
shrl
shr
jns
aam
xchg
fsubl
mov
lret
xor
push
sub
jl
test
add
xchg
ss
mov
add
mov
daa
push
test
jae
scas
dec
imul
addr16
sahf
xchg
scas
and
jl
ss
out
mov
push
mov
jecxz
sbb
int
jmp
stos
test
mov
stos
dec
mov
out
xchg
ret
ret
cmp
sub
xchg
into
aaa
xchg
xlat
rcrl
aaa
sbb
fldcw
xchg
or
clc
lret
call
test
pop
orb
lret
enter
inc
cmp
jl
xlat
in
jo
mov
push
xchg
lahf
xor
push
mov
sarb
in
pop
push
sbb
cltd
rorb
fadds
lods
lret
popa
or
dec
add
rorb
je
lcall
popl
cmp
jge
inc
imul
sbb
aas
adc
std
sub
mov
fidivrl
iret
mov
imul
dec
adc
into
cltd
mov
shl
or
repnz
dec
ret
or
mov
adc
push
testb
out
push
sbb
stos
sbbl
stos
test
inc
in
mov
mov
sub
stos
pop
push
mov
loop
ret
cld
popf
xor
push
xchg
pop
or
jno
push
jmp
xor
inc
adc
pop
or
outsb
gs
imul
jb
in
pushf
adc
mov
jmp
stc
adc
inc
repz
fst
stc
in
pop
jge
push
jns
and
jnp
decl
loope
pop
xor
fiadds
inc
mov
in
nop
or
dec
lcall
inc
sarl
jnp
sti
sub
jne
out
test
push
mov
movsb
cmpsb
ficoml
iret
inc
fsubrs
movsl
je
test
inc
adc
insl
in
xchg
ja
inc
sbb
jg
aam
jo
popa
bound
das
jmp
push
js
stos
or
ds
pop
jb
or
sub
dec
pop
sbb
xchg
mov
mov
cmp
dec
loopne
push
jbe
filds
and
mov
sub
test
mov
insb
mov
or
lret
mov
test
ds
arpl
ds
adc
inc
les
shlb
add
xchg
addr16
inc
subl
jae
in
jecxz
mov
push
push
sub
es
cmpb
sarl
scas
xchg
add
ror
and
mov
xchg
mov
daa
xchg
push
mov
xchg
push
pop
mov
sbb
mov
inc
push
sub
andl
push
cmp
mov
arpl
repz
pusha
or
jno
movsb
pop
test
loopne
test
sarl
adc
rol
test
dec
or
cmp
dec
cwtl
fisubl
aaa
fdivl
int
xchg
and
dec
push
jo
out
loop
push
imul
scas
and
in
jno
call
pop
jle
loop
aas
jnp
xchg
sbb
mov
es
into
pop
push
or
mov
lea
lret
jo
push
inc
test
cmp
jl
lret
jle
imul
lock
cli
cmpsb
out
pop
sbb
add
pop
inc
dec
insl
dec
pop
cli
and
push
mov
lods
xchg
cmp
cmp
pop
sub
mov
scas
stc
sbb
jno
xorl
shrb
jns
push
loop
std
lods
add
mov
popf
mov
ja
dec
sbb
dec
std
cmpsl
jne
sub
sahf
add
xchg
and
sub
add
sbb
vmclear
xchg
inc
add
pop
pop
push
xchg
mov
dec
adcb
stc
mov
and
jmp
add
mov
shrb
and
nop
jge
rcr
stos
shlb
cmc
insb
rol
xchg
pause
sub
or
mov
xor
jne
scas
fadd
xchg
jg
jnp
sub
scas
adc
or
mov
pop
push
shr
sbb
addb
jne
cmc
ds
movb
in
add
dec
out
out
fs
push
js
fistl
and
push
scas
xchg
pop
daa
lahf
insb
cmpsb
inc
push
int3
jo
xor
dec
adc
inc
push
lods
fsubp
xor
and
inc
and
push
hlt
mov
repnz
ljmp
jns
jns
push
std
or
and
inc
imul
sahf
gs
mov
enter
cmpsb
inc
xor
and
movsl
mov
xchg
or
cmp
ficompl
repz
jne
push
mov
pusha
jl
xorb
fildll
jbe
gs
jb
inc
add
rcll
mov
adc
push
push
xchg
cmpsb
push
and
cmc
test
inc
in
dec
stos
bnd
shrl
jmp
and
lds
pop
and
jl
loope
pop
xchg
popa
iret
clc
prefetch
sbb
mov
jp
imul
repz
scas
in
pop
add
pop
jns
lods
and
lret
inc
mov
dec
into
add
mov
int
mov
fidivl
ficompl
or
pop
mov
cmp
test
mov
imul
sti
mov
leave
and
cli
sub
cmp
aad
pop
xor
or
scas
adc
pop
mov
add
out
mov
mov
rorl
mov
into
rclb
flds
xchg
leave
sub
fimull
mov
lea
sub
sbb
stos
mov
xor
pop
inc
test
sub
mov
and
inc
int
std
pop
jecxz
push
movsb
lock
xorl
jb
adc
ljmp
pop
test
mov
or
cmp
popf
inc
repnz
mov
repnz
mov
in
dec
sub
aad
inc
push
pop
mov
jne
pop
mov
cmp
xlat
jbe
pop
fadds
in
js
ss
loope
fstps
mov
xor
xchg
pop
ljmp
dec
stos
and
rclb
test
pop
mov
mov
mov
insb
jb
outsb
inc
pop
orb
xor
or
xor
les
pop
mov
dec
aam
mov
push
add
sbb
popf
dec
mov
scas
fstps
jmp
sbb
and
xchg
cmp
jae
cmp
scas
test
pushf
inc
mov
mov
fcompl
mov
xor
sbb
jmp
in
je
push
loope
or
mov
push
ljmp
cli
cld
rorl
push
outsb
jne
add
stc
arpl
add
xchg
add
adc
clc
pop
loope
cmp
lods
inc
mov
cmp
test
sbb
jecxz
hlt
out
jge
jb
dec
mov
xor
shl
pop
fimull
aam
je
mov
loopne
mov
nop
mov
ror
das
xchg
es
outsl
mov
sub
mov
dec
dec
push
lods
ret
mov
mov
test
adc
in
xchg
sub
mov
popf
pop
sbb
cmpsb
mov
cli
mov
mov
mov
ret
dec
ret
xlat
out
mov
shlb
mov
dec
fsubrl
cmp
or
dec
out
inc
xor
jno
lea
cmpsl
cwtl
push
mov
das
mov
lret
fldcw
pop
divl
inc
sub
fmuls
or
jg
stos
loope
and
xor
pop
xchg
mov
ss
bound
mov
int3
dec
and
ret
div
rol
add
dec
ret
push
push
in
fsubl
push
in
mov
outsb
js
mov
sbb
frstor
cmp
xchg
add
dec
hlt
scas
cmpsl
js
mov
outsb
movsl
or
push
das
xchg
xchg
xor
ljmp
pop
pop
push
xlat
cltd
add
repz
xrelease
scas
mov
shl
hlt
ds
xchg
es
iret
add
xchg
into
sarl
lock
sbb
fcomi
xor
cmp
sub
movsl
es
lret
ljmp
cmp
sub
enter
push
aad
push
faddp
mov
dec
loope
ficomps
es
pop
mov
outsl
inc
mov
lods
sub
daa
orl
xor
ds
xor
jmp
call
xchg
stos
cli
clc
xchg
jnp
cs
mov
mov
cmp
sub
flds
mov
loop
sti
lea
pop
cmp
and
dec
repz
enter
adc
xlat
bound
xor
outsb
fwait
cmp
sti
aaa
sub
test
mov
and
sahf
test
je
sbb
ret
in
mov
add
jae
clc
loope
jnp
dec
mov
fwait
dec
fisubrs
aas
into
pushf
cmc
insb
adc
test
xor
stos
sub
and
out
les
xorb
repz
imul
test
hlt
jnp
loopne
popa
aad
cmp
pop
push
or
push
pop
stos
and
mov
inc
ljmp
stos
mov
das
pop
imul
sub
pusha
into
push
lds
arpl
adc
jmp
fldcw
mov
mov
sbb
dec
push
ret
or
or
xor
nop
adc
adc
into
shll
push
loopne
sbb
pop
xchg
or
lret
sarb
inc
inc
adc
aad
out
push
jne
sub
dec
fs
lcall
add
mov
pop
lods
xor
roll
inc
pop
cmpsb
out
stc
les
mov
mov
cmp
cld
movsl
xor
inc
push
lret
lods
add
loopne
mov
xor
mov
pop
push
xchg
aam
outsb
adc
mov
nop
loop
fadd
mov
cltd
fxch
fnstsw
xchg
mov
jmp
push
push
dec
or
lock
sbb
jb
and
repnz
or
ret
push
inc
pushf
popf
inc
icebp
adc
adc
sbb
cld
cmp
enter
adc
popf
popl
pop
xor
test
pop
mov
adc
rclb
mov
cmc
lcall
test
mov
stos
pop
push
add
pop
or
inc
xchg
sbb
bound
repnz
dec
jae
or
sbb
js
in
jne
jnp
bound
xor
pop
fdivrs
aas
jbe
movsb
imul
mov
xchg
in
xchg
or
fstpl
adc
lods
popa
inc
ret
or
insb
imul
inc
jle
push
xor
sbb
dec
mov
mov
cwtl
scas
mov
pop
sub
sbb
pop
mov
gs
data16
sahf
lret
ds
outsl
pop
push
push
jno
mov
pushf
das
outsl
nop
fcoms
xor
je
mov
sbb
cmp
sub
das
inc
xchg
xlat
popl
sbb
cmc
mov
pop
js
negb
push
or
lods
into
sbb
lods
inc
inc
and
pop
shlb
cmpsl
jns
lea
xchg
mov
shll
outsb
std
loop
loopne
mov
movsl
add
jo
mov
dec
add
out
jae
mov
jle
pop
out
jl
shll
mov
sub
mov
or
daa
aaa
stos
jnp
les
sti
ss
idivb
sub
push
sub
mov
orb
jae
daa
imul
mov
xchg
test
xchg
cltd
mov
dec
mov
jbe
lea
mov
aaa
pcmpgtb
outsb
push
icebp
adc
lret
inc
jae
mov
jmp
cltd
sbb
pop
add
push
pshufw
mov
fsubr
ja
mov
jmp
push
lds
addl
xchg
pop
jp
pop
sub
leave
test
mov
push
sub
fidivrl
jmp
push
pushf
loopne
add
test
je
sarl
xchg
jnp
sbb
push
stos
sub
or
and
dec
clc
jne
or
ror
leave
xor
in
ret
push
iret
shrb
adc
jb
dec
inc
jmp
sarl
mov
nop
and
dec
adc
mov
js
push
ftst
sub
repz
rcl
loope
cmp
adc
loopne
repnz
xchg
mov
in
das
pushf
push
insl
adc
shll
scas
push
lret
imul
pusha
das
insl
sarb
cmp
in
inc
adc
mov
clc
adc
or
push
mov
xor
cmp
adc
shl
and
sub
jle
repz
scas
jg
jns
inc
mov
push
test
lahf
aas
cwtl
push
sahf
jp
pop
fnstenv
mov
mov
jl
sbb
mov
jae
jle
movsb
mov
adc
idivl
jmp
jecxz
xchg
into
addr16
cmpsb
adc
in
testl
dec
sub
call
movb
mov
sbb
xchg
fistps
imul
sbb
lock
dec
ja
xchg
adc
test
dec
fdivr
adc
pop
call
scas
in
fldenv
out
inc
mov
loop
push
out
jne
cltd
insl
int3
jge
inc
mov
sbb
adc
jb
mov
sti
cmpsb
sbb
adc
mov
push
mov
dec
call
loope
fdivl
int
stc
ds
pushf
jbe
jmp
and
push
jle
cmc
ljmp
pop
lahf
rcll
scas
mov
sbb
aaa
fistpll
lret
bound
cltd
add
and
push
mov
subl
dec
sbb
cmpsb
xor
pop
mov
mov
push
cmp
shl
stc
out
pusha
imul
mov
xchg
dec
imul
add
movsb
inc
mov
sub
sbbl
fstpl
sahf
jp
jno
xor
mov
sbb
jle
pusha
rorb
out
sub
cmpsl
fwait
pop
cmpsb
dec
adc
pushl
push
mov
ja
outsl
in
inc
in
and
or
sbb
movsb
pop
out
xor
add
scas
loopne
and
inc
inc
or
mov
add
cmpsl
xchg
aaa
xchg
je
ds
pop
dec
sbb
ds
mov
ffree
divb
cltd
adc
cmp
cmpsb
mov
and
mov
ret
lods
adc
js
or
repnz
jb
xor
lahf
push
fdivl
in
aaa
sbb
dec
mov
rolb
push
mov
mov
je
xor
add
mov
mov
icebp
or
ret
and
dec
in
jecxz
xchg
hlt
xor
clc
jecxz
daa
jnp
jo
scas
aam
mov
adc
xchg
dec
dec
imul
adc
jecxz
out
dec
sbb
mov
and
mov
pop
leave
dec
dec
push
dec
cld
add
lret
cmp
nop
aaa
mov
hlt
mov
out
sbb
and
js
in
mov
push
call
mov
call
jb
xlat
test
xor
jle
ja
pop
add
aaa
pusha
pop
dec
xlat
xchg
daa
xchg
xor
inc
popa
in
lock
jns
jecxz
pop
cld
xlat
mov
loop
cmp
sub
sub
pop
inc
mov
aaa
mov
fs
popa
repz
adc
shlb
divl
jecxz
or
out
das
imul
je
add
and
std
or
mov
pop
pop
pop
stos
shrb
fimuls
or
push
jge
sbb
cmp
flds
mov
cwtl
mov
xor
and
inc
inc
or
frstor
mov
inc
ret
daa
lods
cmpsb
adc
movsb
push
inc
outsl
xor
inc
rolb
adc
popf
aad
cltd
sub
test
mov
dec
aaa
cmp
dec
arpl
stos
add
lock
fcmovb
mov
inc
movsb
mov
test
or
in
push
out
stos
cmp
xchg
inc
mov
shlb
fadds
movsb
cmpl
xor
fists
jge
insl
xchg
popa
xchg
aam
add
add
andb
mov
shlb
fldl
mov
xorl
movsb
mov
sbb
loop
and
sti
dec
xchg
push
sbb
popf
imul
bound
sbb
jb
mov
adc
or
sbb
and
aam
xchg
mov
lds
je
call
and
stc
call
in
es
sahf
stos
int3
cmpsl
addr16
nop
hlt
and
je
imul
mov
xor
call
push
movsl
xor
ljmp
std
mov
fucom
notb
mov
pop
push
dec
scas
inc
imul
and
sub
or
cmp
fimull
push
out
call
or
mov
cmp
andb
push
or
push
xchg
push
xor
mov
sbb
repz
outsb
leave
mov
loop
xor
sysret
jne
push
add
shrl
jnp
test
fildll
push
and
fnstcw
lds
mov
pop
test
das
scas
and
jae
dec
js
dec
jne
arpl
cld
insl
mov
lcall
push
mov
jp
cli
test
lds
je
ret
icebp
sub
pop
cmpsb
or
pop
and
pop
rclb
or
adc
loop
push
and
and
xchg
dec
mov
cmp
or
loope
dec
mov
in
cmp
adc
jno
xchg
arpl
inc
scas
adc
lea
dec
testl
scas
pop
mov
pop
in
xchg
sbbb
xchg
push
jae
cs
fsubrl
out
cmp
adc
mov
ret
fadd
addb
in
push
mov
inc
ds
das
sahf
sub
pop
idivb
ljmp
sbb
add
jl
xchg
sub
xchg
mov
pop
arpl
mov
icebp
sub
aas
jmp
ja
addr16
lods
xchg
or
cmp
pop
mov
dec
jecxz
ret
pop
push
outsl
pop
xchg
mov
fsubl
push
mov
inc
fdivl
in
push
mov
into
or
sbb
jecxz
pop
rorb
mov
xorb
arpl
fs
sub
lods
mov
mov
repz
mov
inc
push
jl
mov
dec
mov
sbb
andb
or
dec
push
pop
cmp
sub
and
insl
lret
jp
xchg
sbb
xor
mov
fxch
out
mov
mov
mov
mov
jp
in
ret
int
sbb
imul
mov
rcll
pop
leave
in
mov
aad
lea
inc
icebp
lcall
cmp
push
iret
jl
lahf
aam
int3
icebp
pop
stos
inc
data16
mov
repz
add
add
pop
mov
lahf
and
repz
cmp
xor
push
inc
inc
test
or
xchg
jae
cmpsb
dec
enter
andl
jbe
daa
js
int
fiadds
jge
in
cmp
mov
mov
xor
fdivs
and
jle
out
in
rcll
flds
xchg
pop
push
or
pop
add
jl
xchg
or
dec
sub
test
test
mov
in
add
add
push
out
xchg
mov
push
xor
mov
inc
dec
xor
mov
cmpsl
inc
pop
adc
mov
cmp
push
in
xlat
cli
mov
adc
aaa
dec
fmuls
fisubrl
cli
sub
std
lea
in
add
and
lock
movsl
adc
in
clc
jo
dec
push
and
repnz
jno
add
aaa
daa
xor
sbb
xadd
test
or
stos
popa
xchg
dec
scas
addr16
jecxz
out
push
inc
sub
or
mov
jo
ljmp
dec
add
insb
rcrl
push
iret
loope
adc
ficoml
or
imul
and
ss
xchg
adc
and
xorb
inc
sti
dec
popa
dec
mov
aaa
or
xor
test
pop
inc
sub
mov
adc
test
sbb
sub
or
mov
xchg
js
mov
or
ret
out
push
lahf
pop
andb
adcb
push
dec
cmp
addb
out
icebp
test
es
in
mov
jne
inc
andb
lcall
in
cmp
cli
stos
xchg
fcos
sub
ljmp
call
and
in
test
xchg
inc
pusha
sub
fwait
mov
jns
push
ret
mov
xchg
mov
xor
leave
iret
adc
add
fisttpll
cmpsb
movsl
sub
jmp
sbb
xchg
imull
xorl
int
in
adc
and
push
push
rorl
add
lcall
int3
jne
enter
pop
test
out
loop
or
mov
pop
cmp
and
stos
sar
inc
or
mov
pop
ret
in
mov
pop
scas
cmp
push
loop
adc
in
imul
dec
cltd
imul
les
mov
push
arpl
xor
movsl
xchg
xchg
dec
cmp
inc
jo
call
mov
xor
rclb
cmp
cmp
repz
sahf
data16
and
std
push
fbstp
stos
inc
mov
mov
ja
imul
stos
out
add
addl
add
popf
mov
mov
and
jl
jmp
lea
out
adc
mov
stc
test
inc
iret
sub
lock
test
mov
push
jmp
movsl
fisubl
in
cs
cld
xchg
jl
cmp
mov
stos
out
shl
or
xchg
sbb
add
and
pushf
mov
jae
xchg
jge
test
rorl
sarb
mov
and
adc
mov
out
or
sub
addr16
add
push
sub
in
jb
xchg
daa
rcll
push
ds
inc
mov
lea
adc
sub
sbb
push
outsb
das
movl
sub
jnp
cltd
pop
push
imul
dec
sub
out
adc
mov
movsb
xchg
push
int3
sbb
push
rcrb
sub
sub
inc
cmpsb
mov
cmp
lods
push
stc
xor
repz
ja
mov
mov
aad
dec
dec
sahf
push
imul
fcmovu
mov
xor
jmp
sbb
xchg
inc
adc
mov
sbb
and
sub
mov
leave
ja
rorb
and
inc
sti
outsb
lahf
add
jo
ljmp
mov
repz
les
stos
cmc
xorb
pop
arpl
push
inc
jmp
sahf
movsl
pop
and
ss
xchg
lret
inc
rcl
sbb
es
jge
rcll
movsl
enter
nop
jne
push
in
dec
das
mov
iret
jecxz
sub
add
cwtl
xchg
xchg
lea
insb
mov
cwtl
addl
mov
mov
icebp
fucomp
mov
lods
mov
mov
das
inc
add
pushl
push
cmp
ljmp
cmp
loopne
jl
lods
aam
daa
test
push
ds
dec
jge
in
jle
inc
jne
mov
xlat
sub
mov
daa
shl
pop
pop
jo
adc
or
pop
hlt
lea
push
mov
div
push
pop
xor
jb
ljmp
mov
xchg
inc
add
arpl
cmp
add
sarl
into
idivl
push
mov
mov
loop
push
adc
sub
lds
adc
sub
jns
gs
aas
cmp
mov
mov
rolb
daa
mov
dec
in
cmp
jl
jg
dec
pop
rcr
fimuls
stos
sub
les
das
dec
idivb
bound
xor
jnp
sbb
jl
iret
ss
aas
xor
sti
pop
enter
mov
enter
scas
adc
pop
shll
mov
movsb
pop
cltd
dec
in
aam
out
addl
and
ret
sub
pushf
or
cmp
mov
daa
in
scas
aad
jbe
mov
out
rcrb
jecxz
mov
js
mov
mov
mov
or
inc
icebp
push
jmp
mov
jns
mov
scas
mov
or
inc
pushf
sahf
sbb
pop
mov
mov
xlat
pop
ss
data16
in
adc
and
iret
mov
mov
lds
pop
mov
jg
aam
dec
loop
int3
inc
shl
loopne
jmp
dec
jg
xor
cs
xor
push
out
dec
mov
jb
test
jnp
roll
cmpsl
jg
imul
ret
mov
les
xchg
adc
pop
xchg
mov
andb
stos
stc
or
adc
xor
xchg
fcoml
mov
insb
cs
and
push
jae
fisubs
adc
cmpsb
stos
popa
sbb
lock
das
dec
lcall
enter
fwait
inc
out
or
sbb
scas
les
arpl
sahf
enter
xchg
mov
sar
fisubl
pop
jle
daa
mov
bound
js,pn
pop
out
or
aas
jbe
mov
sub
adc
and
jle
test
add
repnz
or
xchg
subb
movb
mov
fimuls
out
cmpsb
xor
jae
jnp
mov
mov
cmp
push
outsb
mov
and
sub
mov
xchg
inc
cmp
fs
jo
dec
pop
sbb
inc
xchg
dec
lock
cmpsb
mov
mull
call
popa
pop
fimuls
test
sbbw
cmp
xorl
arpl
aas
lods
in
mov
jo
adc
mov
loopne
xchg
sub
bnd
sbb
out
shll
cmpsl
shrl
sbb
add
lcall
add
pushf
hlt
out
stos
frstor
sbb
adc
stc
push
idivb
push
inc
cmp
stos
mov
push
loope
add
mov
xchg
fstps
mov
push
orl
hlt
sbbl
fbstp
test
mov
out
mov
or
sub
push
in
pop
roll
push
inc
cwtl
sbb
subl
cltd
pop
gs
xchg
sub
adc
ljmp
sbb
mov
in
cmp
movsl
jne
fnstcw
sub
push
popa
out
cmp
aas
jge
or
xorl
mov
rorl
fmul
pop
mov
mov
mov
xchg
jmp
pop
out
sahf
and
xor
lock
sub
mov
cs
stos
push
clc
jne
iret
push
in
xor
sub
sahf
orl
cmp
xchg
cmpb
or
push
cmp
lods
dec
testl
adcl
movsb
aad
and
rorl
dec
adc
fsubl
stos
imul
movsb
inc
cmpsb
aad
dec
cmc
shrb
sub
xor
mov
imulb
repz
push
dec
sbb
xchg
push
bound
or
test
pop
mov
mov
mov
or
xor
arpl
sub
jg
call
stos
test
pop
adc
test
lret
fdivs
lea
and
cmp
pop
dec
sub
push
clc
jp
clc
inc
mov
mov
scas
mov
mov
push
je
int3
das
sub
push
lds
out
lret
or
mov
cmp
test
mov
push
dec
mov
cmc
xchg
xor
sahf
imul
mov
mov
dec
fldenv
fs
adc
jns
sbb
xor
or
mov
imulb
mov
jnp
and
iret
in
popa
jnp
sub
mov
push
sub
cmp
fisubrs
sbb
nop
clc
inc
dec
sbb
or
push
fstl
sub
lahf
nop
out
sbb
push
into
xor
or
mov
call
movsl
fimull
rcrw
mov
aas
or
adc
cmp
iret
sarb
push
jb
arpl
shll
rclb
sahf
bound
adc
push
pop
jbe
dec
xor
or
imul
into
or
push
ljmp
lret
inc
arpl
daa
cmp
mov
sub
jge
sub
push
jns
fs
push
mov
jmp
in
dec
loope
pop
or
sub
cmp
mov
enter
cmp
arpl
or
ja
mov
mov
adc
movsb
jno
ds
jno
mov
outsl
cs
xor
lods
stos
cli
jbe
imul
scas
fstpl
aad
andb
mov
sbb
adc
addb
je
shlb
out
cmc
jecxz,pt
jnp
hlt
popl
stos
jecxz
xor
push
addr16
push
jmp
pushf
sub
dec
and
shlb
xchg
push
adc
cmp
inc
xchg
push
inc
fistpll
add
orl
mov
inc
mov
out
sarb
rcrb
and
jae
pushf
clc
jge
ret
clc
mov
gs
pusha
into
aas
lock
into
int3
sti
ja
pushf
xchg
mov
inc
dec
cld
movsl
mov
xchg
stos
inc
push
aad
cs
into
xchg
pop
adc
xchg
xor
xor
lds
gs
pop
pop
insl
jae
cwtl
aam
dec
mov
loop
pushl
mov
test
cld
sub
loope
subb
mov
mov
in
push
mov
mov
mov
xor
fldt
mov
inc
adc
jl
push
cld
mov
jno
cmp
push
dec
pop
mov
fnstcw
xor
push
fadd
add
loope
into
pop
pop
and
jnp
push
push
mov
pop
jmp
jno
xchg
fwait
lahf
repz
mov
rolb
pop
mov
add
in
dec
lods
js
enter
jbe
cmpsl
inc
or
sahf
mov
es
fidivl
fs
icebp
data16
shll
lods
sbb
into
or
jl
xlat
fsubp
add
cmp
clc
test
lret
xchg
cmp
addb
push
xchg
cltd
orb
gs
dec
sti
cmp
cwtl
gs
lret
sahf
dec
and
jns
bound
mov
dec
iret
push
xchg
inc
movsb
popf
pushf
cmp
add
in
into
inc
jecxz
movsl
xchg
sbb
cmc
jo
cmp
sbb
cld
test
in
jne
xchg
rep
xor
sbb
mov
push
cld
in
mov
xor
sahf
mov
cli
ret
mov
jg
ja
jbe
push
shrl
loop
aas
sub
out
bound
imul
mov
mov
pop
out
mov
dec
add
stos
popf
jp
sub
xchg
fwait
mov
cmpsb
popa
pop
lcall
mov
pop
push
xor
xchg
adc
fstpl
dec
push
popa
or
scas
sbb
in
int3
sub
aaa
mov
nop
jp
dec
push
dec
inc
xor
mov
inc
dec
out
jecxz
ja
xlat
in
out
xchg
stos
add
and
push
clc
data16
ja
and
aaa
fsubrs
jl
dec
dec
lret
sub
in
add
dec
pop
hlt
adc
inc
pop
add
inc
rcrl
subl
repz
test
je
jo
xchg
sahf
cmc
and
out
jo
xor
ja
or
popf
mov
dec
xor
pop
imul
sbb
pop
stos
fiadds
jecxz
loop
cmp
rcr
jp
push
in
jmp
add
add
push
sub
popa
sbb
and
ja
jb
pusha
inc
pop
fwait
adc
push
jne
mov
mov
dec
nop
sub
cs
ja
lcall
cmp
pop
sub
aad
pusha
xchg
or
sbb
push
das
lahf
inc
movsl
sub
xchg
sbb
mov
sub
outsl
mov
inc
adc
mov
lcall
jle,pn
or
mov
popa
jle
lret
lods
shrb
movsb
jns
jbe
xor
mov
or
ljmp
bound
sbb
adc
sbb
sbb
pop
adc
movsl
ss
and
xchg
push
leave
gs
mov
test
ja
xlat
gs
mov
sbb
inc
sarb
lret
adc
sahf
fcomp
fisubl
push
pop
subb
pop
pop
aad
add
mov
lods
push
adcb
pop
pop
cmp
jp
xor
cmpsl
push
dec
xchg
or
xchg
pop
mov
and
arpl
dec
aaa
mov
imulb
fsts
cmp
je
xchg
loopne
or
and
xchg
cmp
test
inc
xor
cmp
xchg
loope
sbb
jg
mov
mov
jne
add
lds
xchg
xchg
out
and
clc
or
or
add
js
mov
jbe
pop
push
repz
xchg
jmp
or
sub
in
ja
jg
or
insl
aaa
sub
xchg
and
push
adc
lds
push
out
add
mov
call
mov
add
cmp
sti
xor
mov
icebp
out
push
fbld
popf
rclb
incb
xchg
ds
lods
movsw
rorl
xchg
inc
neg
mov
inc
stc
and
sahf
push
aaa
cmp
xchg
mov
pop
lahf
imul
sub
xchg
mov
mov
pop
mov
sbb
xor
mov
je
addb
adc
dec
mov
es
movsb
pusha
jmp
or
adc
or
mov
or
fildl
sarl
mov
call
push
cs
and
aas
addr16
out
test
jge
and
leave
adc
gs
ds
xlat
lods
mov
inc
jle
xchg
xchg
out
inc
inc
bound
clc
push
shlb
add
mov
vpmaxub
lret
push
notb
das
insl
daa
imul
mov
pop
xor
sub
jns
jno
add
pushw
insl
outsl
paddb
daa
adc
jb
test
sar
inc
cs
sbb
inc
add
leave
mov
mov
push
shld
inc
xor
rcr
in
enter
mov
into
filds
xor
lret
fildl
mov
push
fs
in
int
in
sbb
lret
xor
sbb
xorl
mov
mov
add
divl
loope
aaa
iret
fcmove
gs
add
adcb
mov
aad
xchg
jo
movsb
jbe
je
adc
test
ss
dec
int
or
incb
inc
jns
cmpsl
push
jg
push
cmp
jbe
shll
ror
js
adc
fcompp
repnz
scas
movl
jl
clc
push
scas
leave
pop
sbb
push
adc
mov
xchg
xchg
shll
add
gs
jle
inc
xor
mov
int
push
add
jo
aam
mov
jo
je
inc
stos
jp
test
adc
dec
pushf
enter
fwait
sub
sbb
or
imul
or
sub
cli
sub
lret
movsl
jl
mov
popf
scas
xchg
iret
loope
or
xor
in
mov
xchg
lahf
rclb
jbe
or
push
out
outsl
mul
push
sbbl
lea
ret
mov
popa
mov
jnp
subb
jmp
mov
pop
jns
mov
daa
dec
mov
lods
and
dec
mov
or
or
cmp
out
lods
lock
xlat
jbe
xor
mov
xorl
rorb
jb
sbb
scas
ret
pop
dec
das
mov
fwait
lret
sahf
xchg
sub
lock
inc
mov
insl
insb
addb
push
adc
popf
sbb
andb
xlat
lret
or
ret
fcmovnb
mov
push
pop
push
ror
dec
mov
cmp
test
pop
push
and
gs
inc
and
insb
xor
fisttpl
addb
pop
mov
and
xorb
fmuls
pusha
nop
jb
add
xor
pop
xchg
shl
add
aas
pop
or
inc
dec
push
loop
ficompl
or
mov
pop
iret
call
jns
jge
sbb
popa
ja
pusha
inc
in
das
pusha
fbstp
sahf
mov
int
dec
xor
ds
in
lcall
pop
mov
xlat
scas
cli
out
movhps
std
xchg
rcrl
adc
xchg
repz
out
ds
add
xchg
pop
subl
rol
pop
inc
sbb
push
cmp
push
cli
add
subl
sub
mov
je
lods
test
call
in
aas
inc
sub
test
adc
cltd
xor
push
in
lahf
movsb
push
mov
sub
cs
in
sub
clc
sbb
out
and
dec
mov
cmc
daa
std
add
in
cmpsl
out
add
js
fwait
scas
push
inc
pop
and
es
jle
and
orl
das
add
adc
jbe
fst
test
cmp
mov
jge
xor
addr16
inc
data16
xorl
mov
dec
or
ja
pusha
pop
push
mov
mov
pop
popf
push
sub
xchg
lods
out
ljmp
pop
lods
outsl
into
ret
sub
pushf
jecxz
mov
aas
cmp
test
cmc
in
jbe
fs
add
mov
push
inc
sub
mov
rclb
jecxz
clc
push
lret
adc
push
dec
cmpsl
adc
mov
cmc
mov
cli
mov
mov
lods
fsubp
adc
ljmp
mov
movl
cmp
xchg
and
sub
sti
inc
xchg
mov
xchg
push
ret
push
dec
out
jp
in
add
jl
cmpsb
push
xor
ds
cmpsb
ds
or
and
pop
mov
push
negb
fidivrs
ja
sahf
adc
cwtl
lods
mov
adc
mov
jbe
fsubrp
push
fdiv
jge
pop
cltd
loop
mov
lret
and
outsb
scas
xchg
push
push
shrb
lock
pop
es
mov
jmp
iret
cmc
mov
mov
popf
lret
fldl
repnz
mov
lods
mov
dec
mov
aam
rcrb
add
clc
stos
ja
shrb
jl
dec
rolb
loop
adc
js
gs
movsb
push
into
aaa
mov
xchg
jne
je
mov
rcll
jno
lods
or
lds
mov
cli
sbb
or
mov
mov
push
jne
lods
jle
stos
adc
test
xchg
mov
cmp
call
lods
pop
xchg
push
mov
pop
mov
dec
add
push
sub
cwtl
inc
sub
xor
cmp
mov
xchg
pop
inc
pop
jno
sub
jae
ret
mov
mov
mov
mov
mov
sbb
sbb
inc
sbb
jno
insl
outsl
aam
in
jno
jg
push
sbb
fists
fcompl
cs
test
jne
andl
or
bound
popf
push
lds
xchg
cmp
cmpl
add
jmp
push
aaa
fs
pop
inc
test
jae
stos
out
sbb
jbe
cmp
fsubrp
movsb
xchg
mov
shll
sub
sti
cmpsb
fldcw
andb
or
ja
adc
add
into
imul
leave
pop
cmp
push
mov
push
dec
add
mov
mov
stos
mov
imul
or
jp
xchg
roll
jno
push
es
mov
jg
testb
mov
jl
cmp
mov
dec
dec
or
and
adc
lret
jno
xchg
adc
sar
sub
mov
imul
sbb
mov
aad
repz
divl
aad
cmp
jnp
add
shl
mov
push
outsl
int3
dec
mov
mov
or
jns
push
popa
push
cmp
pop
mov
add
js
jmp
test
js
pushf
fwait
sbb
repz
jns
shrd
push
mov
or
mov
inc
xchg
dec
imul
inc
je
test
mov
scas
add
mov
dec
dec
stos
push
jge
lret
adc
adc
addb
outsb
jge
je
ja
sbb
lods
or
leave
sub
xchg
mov
fs
push
scas
xchg
sbb
or
pop
jg
lret
sbb
test
sbb
imul
push
ds
out
daa
mov
rorb
add
and
jae
or
popl
cmp
sbb
pop
cmpsb
mov
or
pop
xor
cltd
sub
ret
lods
pop
ret
cmpsb
pusha
fwait
insb
imul
in
inc
sub
adc
xor
xor
negb
mov
sbb
jbe
sub
pushf
dec
sbb
insl
mov
sub
subb
stc
fnsave
pop
test
daa
push
cmc
mov
cmp
sbb
sar
rcll
bound
aas
jne
cmp
mov
dec
stc
inc
repnz
lods
pop
lock
shll
push
testb
mov
xor
jg
push
ss
and
mov
mov
push
adc
sub
aam
jp
inc
scas
sbb
shrb
imul
in
inc
shlb
xor
xor
mov
push
or
pop
cltd
adc
dec
jae
cmp
cmpb
subb
or
std
or
push
hlt
lock
cs
cmp
jne
movsb
cwtl
nop
pop
pop
cmp
loop
fadds
add
lcall
addr16
int3
lret
pop
xorb
iret
imul
sarb
cli
addr16
xchg
xlat
push
icebp
outsb
pushl
sti
mov
test
xchg
call
loop
out
shl
or
iret
pop
ret
fnclex
mov
aaa
mov
outsl
xor
sbb
aad
lcall
pop
fidivrs
mov
push
jno
filds
add
fistps
jbe
cmpsl
leave
jno
adc
jo
je
in
mov
enter
or
movsl
mov
ret
push
insb
inc
mov
out
outsl
mov
add
adc
imul
and
mov
xchg
addr16
jl
or
xlat
bound
fwait
ljmp
js
mov
dec
sbb
aaa
mov
scas
mov
inc
dec
sub
popf
aad
dec
cwtl
or
rorb
sub
mov
ret
nop
and
nop
in
into
xor
jbe
cmp
mov
idivl
gs
cmc
and
cmc
gs
loopne
sbb
fisttpl
test
out
in
cmp
push
add
inc
cmp
dec
xorb
mov
into
rcrb
adc
cs
sub
add
fidivs
out
cli
jge
leave
dec
enter
inc
inc
jb
jb
push
fcoml
adc
bound
dec
leave
mov
scas
into
jb
pop
sbb
subl
mov
pop
pop
divb
ret
mov
nop
add
inc
pop
stc
hlt
cmpsl
jnp
lea
fistps
clc
add
mov
std
movsl
lret
xor
inc
cmp
dec
mov
ret
push
lods
daa
je
inc
clc
cmp
jbe
in
call
bound
lea
lret
mov
insl
cwtl
push
jae
jb
lret
pop
aad
out
pop
mov
cmpb
das
push
je
mov
insl
jns
adc
pusha
movsb
in
mov
mov
jecxz
xlat
test
push
imul
fldcw
fdivrl
xor
mov
add
aaa
aad
mov
enter
cmc
das
mov
jge
or
push
or
mov
xchg
xchg
lock
inc
dec
mov
aad
jge
mov
sub
dec
or
lods
cmp
in
jp
cmp
mov
pop
cmp
cld
lcall
xchg
jo
lahf
mov
mov
dec
gs
push
mov
adc
xchg
cld
adc
xchg
inc
or
xchg
aas
arpl
inc
stos
cmpb
or
add
jae
mov
imul
int3
or
fbstp
xchg
xchg
jecxz
int3
mov
xchg
lcall
sbb
sub
xor
add
cmp
iret
push
rorl
enter
or
mov
mov
dec
mov
pushf
fs
movsl
jge
push
lds
out
into
mov
jb
add
je
pop
cmpb
popa
jg
jnp
adcb
cs
movsb
lods
pop
repz
add
and
add
mov
xchg
outsb
call
lea
arpl
sub
pop
stos
jns
xchg
xlat
cmp
orb
aaa
mov
inc
and
rcrb
jle
das
lock
lock
cmp
lods
jnp
sub
pop
inc
sahf
scas
mov
addr16
fcmovne
imul
dec
add
pop
cmp
lahf
sub
jmp
repnz
xchg
fisttpl
adc
filds
sub
pop
adc
jge
jnp
jno
loopne
mov
dec
mov
and
xor
sub
mov
mov
mov
inc
add
outsb
push
jns
ja
mov
mov
push
push
sub
adc
je
ds
pusha
enter
mov
and
jge
add
or
sbb
fsubrl
mov
out
xchg
fdivp
scas
adc
popf
xor
sub
jbe
test
xor
pop
std
adc
lcall
mov
shr
popa
lea
popf
loope
dec
aaa
xchg
inc
push
adc
jg
movsl
and
movsl
outsl
and
js
mov
push
and
rcrl
cwtl
xchg
test
xor
sub
dec
das
test
mov
dec
adc
pop
subl
in
or
mov
push
outsl
bnd
test
scas
push
push
push
jb
xchg
lar
sahf
enter
orps
test
mov
fs
push
mov
jnp
nop
js
inc
adc
and
mov
daa
aam
xchg
pop
loope
fcompl
mov
add
and
cmp
es
dec
mov
mov
aaa
aad
dec
dec
cmpsb
sbb
sub
lret
push
call
imul
mov
jecxz
in
or
and
lcall
ffree
sbbb
ficomps
in
sbb
mov
cld
xor
jge
or
mov
pop
fcmovbe
shrd
in
xor
pop
stc
aas
movsb
fcoml
ja
jl
loope
filds
mov
jecxz
adc
or
jge
je
mov
lods
dec
mov
lret
dec
rolb
into
push
fidivrs
jmp
pop
mov
or
xor
js
sbb
mov
mov
out
or
stos
or
or
lcall
incb
or
stos
pop
movsb
hlt
xchg
inc
ret
gs
inc
adcb
jns
push
adc
adc
mov
or
add
into
sub
sbb
repnz
xorl
push
addb
scas
cmpsb
nop
nop
stos
mov
fcompl
inc
cmc
push
insb
inc
outsl
cmp
stos
mov
outsl
fwait
arpl
lahf
dec
icebp
in
push
sub
repnz
sub
sbb
test
xchg
loope
jo
pop
gs
movsl
sbb
pop
and
cmpl
cmp
mov
mov
aad
sbb
daa
or
add
lods
cmp
cmp
push
adc
addl
loopne
add
pop
mov
mov
test
cmp
lea
add
imul
pop
insb
pop
popf
inc
jg
push
jmp
pop
mov
jb
outsl
ret
xor
enter
jae
add
mov
mov
cwtl
repnz
jle
push
push
stos
push
jl
mov
sub
cmp
repnz
ficoml
or
adc
sub
mov
loopne
ss
xchg
jb
adc
jmp
cmp
lock
fs
push
sbb
pop
fisttpl
in
loope
fs
sub
xchg
push
adc
mov
inc
mov
insl
outsl
test
and
movsl
jp
aad
push
jmp
ror
insb
stc
cmp
sub
xchg
pop
or
pusha
rclb
ret
out
loop
inc
rclb
pop
insb
sti
lcall
dec
sbb
lcall
hlt
iret
dec
mov
sbb
rcr
push
push
cmp
repz
jne,pt
adc
push
iret
xor
icebp
iret
pop
jnp
xor
shll
xor
xor
call
inc
and
rolb
fwait
adc
sbb
adc
cld
adc
push
mov
cmp
pop
loope
cmp
lcall
insb
pop
mov
sub
pop
aad
daa
cli
cmp
lret
out
stc
sub
xchg
mov
cld
fdiv
inc
sub
xor
push
fldt
jns
popf
inc
mov
or
das
aam
movsl
pop
mov
xchg
jb
adc
mov
xlat
ljmp
xor
mov
mov
outsl
cltd
mov
adc
outsb
push
xor
popf
inc
in
mov
or
inc
sti
and
sbb
fisubrl
test
sar
stos
xorb
pop
jnp
add
mov
sbb
jno
jbe
pushl
and
xchg
sub
sbb
xchg
inc
addl
sub
cmp
ds
pop
and
sti
mov
xor
test
movsb
movsb
nop
andl
fiadds
inc
jmp
mov
mov
cltd
cs
not
xchg
fisttpl
test
mov
rolb
push
adcb
aaa
pop
push
mov
mov
leave
xchg
jle
and
or
iret
jmp
sbb
addb
push
cld
scas
and
cmp
jns
arpl
jl
fwait
js
cmp
or
sbbl
mov
fildll
sbb
fldenv
jp
xor
mov
dec
aam
hlt
cmpsb
lret
std
test
cwtl
and
arpl
out
xor
xchg
arpl
scas
add
arpl
mov
push
cli
sti
je
scas
imul
adcb
xlat
in
dec
mov
movsl
shll
mov
add
jecxz
les
in
mov
pusha
push
dec
fwait
add
jmp
mov
out
fsubs
sbb
sub
and
jbe
xchg
mov
and
mov
fdivrs
inc
mov
mov
push
cmp
lcall
lret
popa
push
movsb
outsb
jbe
cmc
xor
loop
sub
scas
enter
xor
jp
test
add
jne
xor
push
out
sub
hlt
ret
cmc
push
and
cmp
cmpsl
mov
sbb
int
into
fsts
cmp
fstpt
push
jp
ljmp
int
rol
inc
lock
xchg
jg
cmp
fildll
inc
scas
mov
adc
je
fbld
shrb
je
cmpsb
adc
mov
push
push
aad
xor
xchg
and
flds
dec
outsl
adc
or
xor
mov
cmpb
push
repz
mov
lds
push
push
push
stc
push
loopne
xchg
push
add
dec
pop
mov
out
movsl
nop
enter
push
xor
mov
lcall
shll
or
sub
ljmp
cld
inc
mov
cmpsb
out
push
outsl
dec
dec
lods
pop
cwtl
cmp
adc
insb
push
jae
or
adc
fdiv
inc
stc
leave
mov
nop
xchg
mov
add
fs
jae
leave
ja
int3
insb
fcmovnb
xchg
push
add
mov
and
and
jmp
out
sub
popf
push
shlb
add
jbe
rcl
mov
arpl
outsl
outsb
push
movsl
inc
rolb
xchg
gs
push
fcmovnb
iret
dec
push
jge
aam
lret
call
fnstsw
les
scas
mov
pushf
pop
xchg
adc
pop
ljmp
dec
cltd
scas
pop
loope
pop
xor
jns
cs
cmpb
push
js
mov
jns
xor
icebp
xchg
test
popf
xlat
out
cmpsl
out
mov
insl
inc
lahf
movsb
cmc
stos
adc
mov
or
jbe
in
call
mov
fwait
in
popa
mov
jle
mov
mov
repz
push
jg
ret
sub
ja
inc
insl
and
rcll
iret
aad
repnz
out
adc
jo
sbb
xchg
push
sbb
mov
dec
cmp
push
daa
pop
xchg
aas
cmp
inc
sub
push
in
pop
jp
mul
cmp
shrb
lcall
icebp
lret
in
std
das
hlt
ss
orl
movsb
or
dec
jecxz
cltd
jno
in
aas
mov
add
xlat
ret
inc
stos
jnp
ret
cld
mov
cmc
call
jnp
sti
insb
and
lahf
lock
test
in
aam
shrl
fcoms
cmp
sbb
test
arpl
xor
arpl
mov
xchg
int3
and
lock
cld
ret
cltd
push
jecxz
cmp
jge
lret
stos
roll
mov
repz
and
lret
xchg
sbb
aaa
ficompl
ret
push
in
xchg
mov
pop
insb
andl
sbbl
mov
mov
ljmp
cmp
add
and
push
ljmp
out
add
xchg
push
fsubs
cmpsb
mov
loope
cmpl
jle
inc
cmp
mov
jnp
lods
add
ret
scas
mov
sti
dec
xchg
enter
inc
push
mov
pop
push
xor
inc
loopne
add
ljmp
mov
test
or
mov
cs
inc
stos
test
les
scas
enter
aam
scas
test
movsb
rcrb
add
pop
inc
ficompl
sub
jle
test
cmpsb
mov
inc
cmp
sbb
mov
imul
jbe
mov
adcl
xchg
out
and
int3
or
xchg
push
sub
fstpt
xchg
fdivrs
or
shll
lret
aad
movsl
or
mov
into
adc
pop
call
ja
sub
dec
jne
adc
arpl
xchg
int3
sub
cmp
mov
mov
adc
xor
mov
pushf
ds
je
jns
ret
pop
sbb
or
mov
mov
fwait
les
stos
test
arpl
inc
pushf
adc
and
jmp
jnp
lock
cs
mov
or
nop
rclb
adc
pushl
dec
sbb
out
testb
inc
es
push
inc
cmp
icebp
xor
ja
testb
jmp
in
mov
mov
stos
lcall
sahf
add
push
adc
push
out
lahf
xor
adc
ja
rolb
jecxz
sub
lods
loopne
xor
jb
push
sahf
dec
sbb
xor
out
adc
and
lea
out
sub
inc
mov
popa
add
int3
ljmp
icebp
add
cltd
dec
arpl
imul
xchg
in
hlt
dec
in
xchg
mov
cmp
push
mov
test
mov
mov
push
dec
aaa
in
incb
nop
xchg
xchg
insl
jo
mov
pop
iret
lock
adc
dec
mov
popa
push
add
inc
pusha
push
inc
repnz
sub
sbb
sets
push
add
sub
dec
outsb
andl
xchg
mov
insb
iret
loopne
sub
mov
nop
test
pop
in
mov
imul
lret
insb
test
mov
dec
mov
dec
cld
arpl
mov
mov
cmpsl
shlb
test
fwait
rcr
mov
jns
or
add
inc
movb
sbb
add
inc
jns
sub
cmc
push
pop
mov
scas
and
lds
stc
out
cld
aad
lcall
ja
sub
ljmp
xchg
popa
pop
or
adc
fwait
call
popf
mov
pushf
or
mov
push
or
iret
add
in
shr
sbb
xchg
sub
xchg
ret
sbb
sar
adc
jne
cmp
scas
push
or
mov
sub
mov
imul
xchg
loop
cmpsl
in
das
dec
mov
jnp
mov
loop
and
cld
dec
cmp
cli
cwtl
inc
push
mov
shrb
mov
popa
add
adc
sub
je
dec
les
adc
sbb
add
addb
cld
and
test
add
data16
sahf
popf
imul
dec
loope
xor
arpl
inc
sbb
push
mov
sub
sar
push
jb
sbb
and
std
loop
mov
and
mov
add
inc
add
adc
adc
mov
jb
call
das
jmp
push
pusha
push
daa
out
and
outsl
mov
pop
cmpsl
cmp
mov
inc
fs
inc
adc
pop
inc
push
pop
cmp
pop
xchg
lret
jne
incb
inc
dec
fmuls
cmp
insl
cmp
mov
in
mov
mov
pop
lods
or
mov
add
or
push
stc
jge
loop
cld
or
lods
data16
push
xor
sahf
add
sub
adc
cmpsb
leave
sub
nop
loop
popf
stc
mov
xchg
push
add
push
es
push
repnz
and
or
mov
push
push
dec
or
add
mov
mov
pop
fwait
sub
shr
mov
add
cmpsb
pop
hlt
js
pop
test
stos
in
aas
hlt
aaa
pop
frstor
fs
mov
aaa
or
imulb
aad
jbe
xchg
inc
cmp
pushf
pop
xor
sbbb
jge
pop
int3
xor
jl
cmp
and
inc
inc
xor
je
int
stc
mov
test
enter
xor
ljmp
add
fnsetpm(287
mov
adc
fwait
cmp
lahf
orb
std
dec
scas
loop
xor
hlt
aad
outsb
xor
ret
std
cs
lds
sub
xlat
addl
loope
xor
pusha
aas
mov
adc
push
sub
mov
dec
cmp
ror
xor
sub
xor
adc
sbb
int
pushf
lret
adc
test
pop
daa
sub
sahf
dec
sbb
outsb
add
sub
cmpsl
loopne
pushf
mov
cwtl
sbbb
mov
push
lds
ret
xchg
adc
rorb
push
mov
das
dec
sub
and
pop
add
rcl
add
ljmp
mov
stc
jno
movsl
or
lock
inc
data16
in
mov
cmp
cmp
adc
sbb
add
sahf
jle
outsl
sahf
xchg
dec
adc
jno
test
loopne
rcrl
pop
jge
xor
cltd
test
and
add
sbb
add
cmpsb
add
add
mov
xor
pop
adc
fcmovnu
mov
and
fsubl
push
pop
ds
or
adc
sbb
dec
pop
pop
or
xchg
lret
dec
clc
lahf
pop
xchg
inc
xor
push
xor
fstpl
add
push
pop
push
adc
sub
dec
out
or
subb
push
jns
cmpsb
or
inc
fs
cli
push
into
ret
es
test
stc
jnp
sahf
lret
cmp
mov
push
leave
push
sub
xor
push
in
push
test
insb
or
fisubs
lret
sub
lea
cld
test
daa
dec
ss
cmpsb
outsb
ljmp
push
push
jne
pop
push
lods
movsl
es
loopne
sbbl
rorb
int3
adc
jns
or
cmpsb
mov
dec
jmp
enter
movsl
mov
xchg
js
jle
dec
inc
test
inc
push
movd
push
ja
xchg
insl
das
loop
mov
inc
add
daa
jmp
xorl
les
jmp
sub
ljmp
sbbl
mov
pop
fwait
mov
movsb
scas
mov
xchg
add
lods
fstl
jmp
subl
mov
popf
scas
lret
inc
sbb
mov
jp
inc
add
mov
das
mov
lds
popf
std
clc
aas
mov
sbb
out
imul
stos
inc
dec
jmp
in
pop
add
popf
or
std
js
and
jns
or
push
std
nop
sahf
jo
addr16
pop
mov
imul
mov
cmpb
inc
sub
jl
scas
lds
inc
rcll
cmpsl
jnp
and
ja
aad
insl
and
xor
cmpl
xchg
push
lea
jp,pt
fs
mov
std
push
in
push
fwait
pusha
ljmp
popf
pop
xchg
sub
into
repz
sub
push
fcoml
jmp
adc
cmp
in
fisubs
hlt
into
xchg
frstor
adc
push
sub
adc
ss
and
scas
xchg
loope
add
popa
push
cmp
js
mov
cmpsl
sbb
mov
mov
pop
xor
aaa
icebp
lods
pop
dec
add
lock
mov
dec
or
out
das
or
ret
outsb
divl
scas
push
and
push
and
subb
xchg
enter
mov
mov
push
cltd
mov
adc
orb
sbb
add
push
je
in
std
sbb
imul
movsl
adc
mov
adc
stos
shlb
inc
sbb
out
pop
dec
pushf
sti
inc
frstor
stos
push
jmp
pop
arpl
into
mov
pop
std
call
loop
aad
fwait
and
adc
fdiv
int
inc
jmp
pop
into
imul
loope
fstps
mov
dec
jmp
mov
push
lea
data16
in
cli
cwtl
outsl
data16
data16
icebp
jbe
sti
jb
mov
ljmp
and
push
sbb
ror
or
mov
jmp
js
jns
jb
addl
into
mov
insb
lds
jae
mov
or
or
sbb
xor
loopne
loope
ja
ljmp
loop
ss
lds
int
ret
pop
pusha
fadd
mov
push
sti
in
lods
fcoml
sub
xor
xchg
hlt
or
pop
push
push
cmpsb
mov
pop
pop
hlt
mov
jne
rolb
mov
cmp
pop
xchg
imul
inc
call
fisttpll
fsubs
jnp
xor
pop
mov
clc
ja
push
adc
dec
push
add
sub
cwtl
xchg
dec
xchg
movsb
adc
mov
loopne
xor
imul
xchg
cli
mov
mov
rclb
xchg
sub
test
adc
push
mov
mov
lds
dec
add
mov
fisubrs
cmp
dec
ss
clc
das
xor
nop
or
int
loope
mov
call
dec
mov
mov
lds
xor
aad
movsl
mov
mov
push
dec
jle
jbe
sbb
sahf
dec
push
in
hlt
dec
dec
and
and
mov
mov
ja
fwait
jg
enter
test
pop
dec
popf
cmp
push
mov
xchg
adc
mov
cwtl
lret
pop
cmpsl
fucomi
out
stc
fistps
mov
cmp
sahf
sbbl
pop
pop
cmp
cwtl
mov
cmp
and
push
push
dec
mov
inc
repnz
jmp
test
sbb
jecxz
cmp
std
xor
cmpsb
and
test
jnp
repz
repz
cmp
mov
xor
cmp
xchg
or
and
test
je
leave
cmpsb
pop
test
mov
mov
mov
mov
jp
cwtl
sbb
and
mov
mov
pop
jbe
adc
push
mov
xor
mov
std
or
or
repnz
aad
shll
icebp
repz
imul
leave
xor
insl
xchg
aad
scas
and
nop
xorl
sub
adc
insb
cwtl
sub
sub
fldl
mov
sti
mov
ja
dec
std
out
pushf
rcrl
jg
popf
adc
mov
out
shlb
shll
test
inc
sub
movsb
shrb
fimuls
std
add
or
outsl
or
pop
jmp
fbld
push
pushf
test
test
sarb
mov
out
jp
addr16
clc
mov
ljmp
xchg
adc
xor
fucom
pusha
push
orb
sar
jno
sbb
cmp
pop
pop
mov
inc
pop
mov
cwtl
je
in
pop
sbb
repz
cs
les
int3
mov
xor
sub
cli
or
std
aas
pop
mov
scas
icebp
xor
dec
mov
subb
popa
xchg
shll
mov
dec
pop
lea
pop
testl
dec
mov
mov
dec
dec
fs
inc
fildll
test
inc
dec
daa
scas
sub
push
inc
fists
xchg
mov
ja
mov
cmpsl
push
ljmp
xor
scas
dec
xor
fsubr
outsl
sub
inc
adc
pop
repnz
mov
movsb
outsb
je
sub
jp
push
xchg
pop
or
add
mov
mov
pop
std
sahf
adc
mov
push
adc
fnsave
add
outsl
or
dec
out
enter
enter
xchg
lcall
adc
test
jns
mov
call
xor
sbb
pop
jge
mov
push
pop
add
jno
das
jne
in
mov
jo
adc
jmp
xchg
stos
pop
div
mov
lods
or
cmpb
mov
push
mov
mov
fs
sub
out
and
add
pop
xchg
jle
xchg
lret
xor
sbb
clc
outsl
push
rol
pop
or
lahf
cmpb
jl
ficoml
push
pop
mov
or
lds
loop
out
jae
or
jecxz
rep
jp
mov
ja
out
lds
adc
nop
dec
jle
fimuls
mov
jno
fnsave
xchg
xchg
sbb
shl
mov
push
cwtl
in
inc
pusha
sub
lret
test
add
xor
cmp
fistpll
xchg
and
out
ljmp
adc
popa
loopne
shr
cmp
mov
and
inc
cwtl
add
adc
out
dec
arpl
cmp
xor
sarb
adc
inc
xor
loopne
movsb
cmp
xchg
pop
repnz
aad
int
outsl
push
rcr
xor
cmpsl
mov
and
aaa
pop
jecxz
mov
adc
icebp
pop
and
mov
ret
mov
fucomi
and
in
fimuls
pop
inc
wbinvd
ja
push
popf
mov
mov
lock
repz
dec
sub
add
clc
cltd
mov
loop
jbe
out
jmp
pop
out
sub
popf
lcall
xchg
pop
sub
jne
mov
cmpb
pop
outsb
push
call
rclb
pop
adc
push
add
mov
cmc
pop
and
lods
add
xor
shrb
psubw
push
inc
aad
fsubs
lret
mov
and
ss
xor
push
aaa
mov
gs
sbb
into
lret
add
aaa
icebp
dec
fwait
test
pop
dec
pop
in
pusha
push
xchg
std
cwtl
mov
mov
scas
orl
push
data16
add
sahf
scas
mov
sbb
cmp
loopne
int3
mov
mov
negb
add
cmc
and
xchg
outsl
pop
into
arpl
aam
fildl
mov
add
sbb
sub
pop
aam
inc
xor
inc
cli
cmpsl
push
fsts
fsubrl
insl
cwtl
arpl
rclb
movsb
lods
outsb
or
pop
or
test
cmp
scas
adc
out
pop
mov
scas
ret
inc
sti
fisttpll
inc
add
fadd
sub
aam
add
clc
fcoms
xor
xchg
mov
xor
pushf
pop
shrb
push
jae
aas
cmc
aas
stos
or
data16
bound
xorl
mov
out
imull
jg
jns
add
sbb
push
or
push
pop
in
jae
insb
adc
iret
dec
push
mov
cld
jmp
ror
outsl
pop
jmp
xorb
jb
mov
mov
bswap
jnp
mov
fimuls
stc
xchg
dec
pop
and
inc
pop
loopne
xor
xchg
movsb
inc
sbb
lea
seto
sbb
adc
fcompl
or
push
and
xlat
inc
cmc
cld
sub
inc
mov
ja
xor
sbb
faddp
js
shrb
adc
gs
jb
xchg
mov
lods
inc
xor
sbb
sti
loope
loop
fsubrs
mov
inc
lcall
rorb
xor
ds
sbb
xchg
imul
sub
push
bnd
mov
jp
aad
rcrb
mov
and
jge
js
nop
insl
xchg
mov
jge
mov
leave
add
cld
sbb
add
icebp
out
xchg
xor
and
mov
nop
dec
mov
imul
mov
mov
scas
pop
inc
jne
dec
jl
aas
clc
clc
mov
dec
ljmp
xchg
repz
in
sti
sbb
adcl
loope
dec
arpl
test
hlt
mov
jecxz
mov
lock
jno
bound
sbb
aad
dec
rcll
push
iret
outsl
imul
ret
fldpi
dec
cmp
scas
test
sub
xchg
sbb
outsb
js
shlb
inc
addr16
or
xor
dec
test
aad
pushf
mov
or
in
int3
stc
cmp
adc
dec
mov
bsr
mov
adc
sbb
rorl
and
adc
scas
xchg
inc
jg
imul
aas
and
push
fildl
mov
pcmpeqd
pop
xchg
inc
or
fists
sub
or
insb
adc
xor
inc
sbb
loop
sbb
daa
cmp
iret
push
mov
mov
shlb
push
add
push
inc
inc
add
mov
lods
lods
pop
ret
mov
sub
into
pop
jbe
add
pop
pop
negb
test
sub
mov
xor
mov
xchg
aad
movb
cmp
scas
xchg
jno
inc
outsb
sub
cmc
aaa
pop
pop
cmp
cld
je
aam
jb
cmc
mov
or
jle
xor
popa
fsts
jge
cmpsb
xor
push
lret
push
roll
fwait
push
arpl
pop
repz
xor
sub
lcall
lods
and
adc
cmp
addr16
xchg
xor
ds
push
mov
rcrl
cmp
les
xlat
add
or
xor
and
sub
in
ljmp
cmp
pop
rcl
mov
dec
popa
jmp
sbb
jle
xchg
jbe
sarb
in
les
inc
cmp
xchg
test
into
xor
mov
daa
aas
sbbb
adcl
sub
and
jecxz
stos
jnp
sarb
xchg
adc
mov
adc
inc
sahf
lret
push
js
pandn
adc
repz
sbb
push
xor
inc
jnp
aad
and
jp
inc
movsl
ret
inc
mov
cmp
scas
js
add
mov
jns
push
jae
insl
in
test
xor
sub
dec
popa
push
inc
hlt
out
jmp
sbb
hlt
mov
js
push
dec
jne
jmp
into
loopne
popa
cmp
outsl
hlt
add
movsl
inc
in
divl
dec
fdivs
int3
das
and
insb
fildll
xor
notb
scas
gs
aaa
das
mov
sahf
in
sub
adc
push
addr16
jmp
in
adc
cmp
mov
fnstcw
fucomi
jae
outsb
push
out
addr16
iret
lahf
pop
in
ror
dec
jl
jp
pop
add
jnp
add
dec
or
daa
das
xchg
mov
mov
ret
ds
rcrl
sub
out
arpl
jnp
ja
daa
lea
push
jmp
push
out
cmpsb
lea
es
stc
sbb
and
mov
mov
jge
lods
pushf
or
ljmp
cmovge
inc
inc
and
insb
fildl
mov
jl
fucom
negb
cmpb
jecxz
or
mov
clc
sbb
clc
lahf
jb
lcall
outsb
inc
inc
mov
dec
mov
add
sbb
sbb
outsb
enter
inc
fldl
orb
dec
xchg
sub
movsl
fildll
lahf
daa
dec
and
xchg
lret
shll
dec
fnstenv
in
push
sbb
cmc
das
add
lock
or
testl
lahf
addb
mov
fnstcw
bnd
sub
push
imul
imul
jmp
addb
imul
mov
shrl
cmp
mov
sub
and
sbb
push
add
repnz
in
push
cs
push
pop
push
dec
cli
js
inc
mov
xchg
insl
icebp
and
inc
cmp
mov
sbb
xchg
sbb
mov
idivb
or
or
push
adc
mov
call
add
mov
push
addr16
cltd
fwait
push
mov
das
or
push
jb
in
scas
pusha
mov
stc
pop
xchg
xchg
sub
push
xor
sub
mov
or
cmp
rolb
sbbb
into
xchg
daa
lock
sahf
lea
add
mov
dec
iret
idivl
pop
cmp
bound
jg
jne
add
ds
flds
mov
ret
cld
lahf
test
aaa
add
ret
sbb
data16
and
fcoml
xchg
xchg
sub
mov
pop
adc
daa
shll
repnz
cs
jns
pop
icebp
out
andb
in
in
pop
xchg
xor
add
into
push
shll
iret
cmp
enter
push
mov
vprotq
push
and
lods
xchg
sbb
jbe,pt
push
and
pop
jae
push
adc
cmpsb
xor
adc
lods
out
call
inc
and
scas
mov
push
dec
xlat
adc
out
sbb
push
insb
xor
cli
jo
and
sbb
sbb
cmp
or
pop
fsubs
repz
dec
arpl
ss
add
addb
pop
push
imul
pop
pop
cmpsb
adc
ja
dec
pop
es
or
push
mov
mov
mov
loopne
out
mov
cmc
cmp
jg
pop
incl
adc
sbb
ljmp
subl
insb
mov
inc
daa
jo
pop
test
mov
cmp
loop
fcompl
pop
std
int
cmpsl
push
ret
out
pop
sub
push
adc
jp
in
xor
aas
mov
fldlg2
orl
push
xlat
sub
in
movsb
repnz
push
mov
int3
aad
mov
sahf
add
movl
in
in
inc
mov
cmc
ret
xchg
mov
xor
scas
push
mov
orl
ficomps
ret
fxam
lock
cs
mov
andl
sub
into
out
fs
cmp
subl
movsb
ss
sbb
ja
mov
int3
xor
xchg
cwtl
mov
loopne
pop
jp
movsb
push
xorb
fwait
inc
mov
xchg
shll
test
iret
lret
lret
mov
xor
je
xchg
mov
data16
sbb
adc
js
ret
sub
mov
push
xor
outsb
mov
jns
jne
xchg
orb
xchg
mov
jnp
loopne
xchg
cmpsl
ja
insl
stc
lock
pushf
fwait
xchg
into
das
mov
inc
jg
cs
scas
add
sub
push
or
push
jno
pop
jle
or
mov
ja
mov
inc
cmp
in
fsubrs
iret
dec
adc
leave
jp
rorl
xchg
test
lcall
jb
xchg
psubd
mov
loope
cmc
xchg
push
pop
mov
and
ja
pop
xor
mov
jp
lcall
dec
out
adc
xchg
lds
fsubl
pop
jbe
mov
cli
and
mov
iret
sahf
xchg
jnp
stos
push
push
dec
rcrl
insl
scas
repz
jle
cmpsb
jp
sarb
cmp
push
adc
adc
mulb
cwtl
dec
mov
jl
xchg
aaa
movsl
and
dec
push
fdivrp
add
and
jne
pop
nop
jnp
andl
pop
out
push
dec
or
lock
mov
aam
dec
push
add
fisubrs
lret
mov
in
and
mov
add
jl
cli
test
popa
fmul
inc
xor
xlat
roll
imul
pusha
imul
data16
jns
or
addr16
adc
mov
mov
int
cld
adc
jno
gs
scas
fwait
out
imul
fidivrl
cld
cmp
les
add
jle
loopne
mov
cld
rcr
mov
mov
lock
ja
mov
aad
adc
or
leave
inc
pop
add
cmpsl
mov
xlat
sbb
inc
mov
xor
inc
lcall
outsl
in
int3
nop
push
pop
mov
test
xor
xchg
sub
mov
lock
push
mov
roll
aaa
dec
imul
push
xchg
adc
lods
cli
mov
adc
and
push
stc
ficoms
sub
sub
fnsave
aaa
pop
stos
lods
lods
subb
xor
xchg
ret
mov
mov
or
jns
rolb
enter
loopne
push
clc
nop
xchg
je
dec
ficompl
push
mov
push
in
repnz
scas
mov
ret
insl
lods
sbb
ss
push
mov
lahf
in
push
lods
jne
xor
push
call
dec
sbb
and
adc
pop
sti
clc
sarl
out
or
mov
test
dec
and
movsb
ret
mov
sbbb
and
mov
out
inc
mov
fs
adc
pusha
inc
dec
xchg
movsl
sub
dec
insl
test
mov
pushf
and
mov
cwtl
jbe
xchg
mov
add
xchg
out
jae
sbb
sahf
mov
cmp
mov
mov
and
mov
inc
daa
jge
jecxz
add
mov
jae
cs
orb
push
dec
iret
push
sub
les
sub
in
sbb
iret
xchg
popa
outsb
adc
pop
push
lcall
sarb
push
rclb
das
mov
xor
cmp
stos
xor
addr16
cmpsb
sub
sbb
jge
sub
les
rorl
inc
adc
mov
sub
mov
jmp
jl
repnz
pop
fdivl
dec
cmc
dec
dec
xorb
cmp
jns
xchg
lret
sbb
jp
fsts
pop
mov
push
bound
movsl
lcall
fidivrs
aas
xor
inc
cmpsb
xor
lret
sbb
push
xor
push
jne
es
fwait
mov
cltd
shll
dec
ljmp
into
mov
mov
xlat
inc
aam
xchg
test
ret
fistpl
pop
mov
imul
ficoms
jbe
pop
sub
cltd
inc
cld
fbld
xchg
decb
inc
inc
mov
fdivrl
arpl
cwtl
lods
aad
lcall
or
xor
cmpsb
scas
mov
dec
mov
xlat
cmpsl
sub
lds
adc
inc
push
es
xor
nop
cmpsb
and
mov
aas
cmc
dec
shll
shlb
xor
xor
push
sub
push
cmpsl
dec
and
ret
shrb
test
cmp
push
push
adc
jae
je
sub
push
mov
pop
mov
cmp
hlt
aas
dec
dec
pop
sub
outsl
outsb
cltd
aad
test
loopne,pn
out
in
jns
jb
gs
jb
mov
fucom
or
mov
inc
in
jae
cmp
ss
add
jns,pt
mov
scas
inc
loope
repnz
repz
adc
imul
pop
dec
xchg
jle
movsb
repnz
pop
cwtl
sub
push
mov
and
pusha
cmpsl
mov
push
aas
fcoml
icebp
insl
mov
xor
daa
bnd
dec
mov
xor
pop
xorl
rolb
inc
add
rolb
arpl
aam
frstor
adc
xchg
test
jmp
aam
pushf
push
mov
in
sub
add
in
jl
mov
mov
popa
into
adc
out
and
cwtl
pop
add
xchg
pop
stc
popa
mov
iret
push
or
xchg
fs
iret
stos
inc
call
je
orb
xchg
arpl
dec
sbb
adc
adc
xchg
aaa
pop
mov
pop
rolb
jae
ret
pop
add
lahf
loope
push
cmpsb
push
pop
fnsave
inc
xchg
jo
pop
fsubrs
mov
push
jp
sbb
mov
add
clc
cmp
jl
fsubrs
add
sbbl
loopne
dec
pop
or
inc
inc
sbb
cltd
mov
mov
push
inc
mov
clc
mov
mov
adcb
mov
lods
cld
std
jnp
dec
lahf
loopne
cmp
xor
xor
xchg
add
add
in
mov
imul
cmp
inc
std
les
decb
or
call
pushf
leave
loope
inc
mov
jno
inc
cs
sbb
cmp
sub
sub
mov
cltd
in
mov
pop
loope,pt
shl
pop
sbb
or
loope
adc
adc
add
jae
sub
jne
cld
repnz
jnp
imul
fnsave
or
adc
push
ljmp
inc
xchg
mov
jb
or
or
testl
inc
mov
jb
mov
test
jg
icebp
lret
lods
xor
jmp
mov
movaps
pop
push
test
clc
mulb
std
aas
popa
insb
mov
das
jmp
xchg
mov
xor
jns
pushf
bound
lds
outsl
add
dec
xor
jno
daa
adc
push
imul
rcl
mov
push
outsl
aad
push
inc
test
dec
sub
outsb
xchg
rorl
mov
push
sbbl
cmp
mov
imul
ds
push
fs
jle
and
cltd
out
repnz
stc
cs
or
stos
frstor
xor
test
sarl
loop
or
imul
cmp
lcall
sbb
mov
repnz
and
enter
push
jno
jle
xchg
push
mov
sbb
push
and
jnp
aad
push
mov
pushf
aaa
push
in
outsb
add
cmpsb
out
cmp
push
or
jecxz
jmp
mov
jg
jle
out
dec
hlt
sahf
pop
test
push
xchg
cmpsl
testl
and
nop
push
cmpsb
mov
mov
jno
out
aam
scas
ret
mov
mov
jecxz
lods
vmovd
pop
mov
jnp
lret
inc
adc
push
dec
pop
int
sub
push
jecxz
sub
jecxz
or
mov
repnz
mov
jo
shl
xchg
in
pop
mov
fs
push
adc
adcl
fnstcw
or
pop
mov
adc
add
mov
jae
dec
scas
xchg
inc
dec
mov
cmpsl
cmp
push
into
mov
aas
mov
les
ror
xchg
cmp
testb
push
leave
lret
mov
push
test
movntq
adc
pop
inc
outsb
xchg
jle
ja
ror
or
inc
jp
mov
xorb
gs
mov
pusha
sbbl
mov
fcmovne
frstor
sahf
sub
cmp
dec
in
imul
sti
scas
mov
push
in
pop
mov
pop
mov
inc
rorl
loopne
xchg
sbb
loop
and
jmp
popf
fcomps
lcall
test
cli
cmpsl
jmp
mov
fists
and
mov
subb
das
pop
inc
or
out
in
pop
test
push
addr16
pop
aam
out
xchg
mov
jb
out
jge
push
add
daa
or
add
idiv
icebp
hlt
and
cmpsb
cmpsb
xchg
dec
cmp
jge
inc
in
filds
mov
adcl
cmp
jg
shll
dec
push
push
shrb
nop
jo
inc
push
inc
add
scas
dec
or
das
in
mov
fmul
xor
cmp
xchg
ljmp
invd
scas
roll
cmp
mov
stc
adc
sbb
stos
fcomi
mov
imul
lock
nop
in
int3
data16
stos
jecxz
adc
enter
data16
adc
add
dec
sbb
push
mov
mov
add
and
cmp
imul
inc
js
enter
jns
daa
loop
xorb
js
push
stos
sub
cltd
inc
mov
subl
hlt
std
jge
jbe
daa
xlat
add
dec
xchg
rorb
add
jle
ss
push
mov
jp
pop
pop
enter
inc
cmc
in
fcoms
cmc
xchg
mov
add
jo
mov
adc
ficomps
imul
sti
call
jecxz
xor
pop
add
popf
addr16
cmp
or
xor
and
cmp
pop
xchg
xchg
cmc
cmpsb
out
aam
inc
mov
int3
xchg
out
mov
data16
pusha
fcmovnbe
inc
lods
pop
loopne
mov
push
jno
adc
sbb
shll
jne
test
xor
xor
std
imull
ret
sub
xchg
push
and
movsl
fldcw
loop
sub
and
pop
out
js
ret
jne
sub
dec
movsl
inc
jb
icebp
mov
imul
push
pop
mov
inc
inc
imul
add
inc
dec
cmc
arpl
add
imul
test
mov
cmpsb
push
test
adc
or
mov
negb
sub
sbb
adc
sarl
fdivp
xchg
inc
ret
or
xor
jl
adc
adc
popa
xor
mov
adc
in
imul
or
xchg
mov
mov
mov
lret
fsubl
hlt
pop
push
xor
pop
cmp
int
scas
dec
orb
cld
inc
sub
sbb
mov
jne
push
insb
mov
fldcw
xlat
xchg
jmp
test
insl
push
sbb
mov
jo
scas
scas
ljmp
ja
imul
mov
sub
and
adc
push
es
pop
mov
xchg
hlt
loop
push
lds
dec
and
pop
ret
jle
cmpsb
or
dec
add
fbld
mov
xor
push
mov
xor
testb
xchg
push
xor
fnstenv
ret
shll
fwait
sbb
movsl
sub
out
rcll
stc
cmp
cmc
ret
inc
lds
pop
lea
xchg
jmp
leave
out
repz
pop
inc
push
shrb
cmc
mov
pop
inc
sub
testb
push
icebp
cmp
inc
jecxz
push
dec
insl
idivb
adcl
fwait
mov
jne
mov
pop
int
outsl
mov
mov
push
dec
jl
pusha
rorb
dec
lds
ds
shl
push
push
push
jb
jns
sbb
test
sarl
push
cmpsb
and
xchg
stos
sahf
scas
ret
pop
cmp
fisubs
rorb
punpcklbw
rcl
jnp
cmp
out
pop
ret
mov
ret
scas
push
cmp
jge
mov
lea
push
ss
mov
out
rcrb
movl
sbb
out
push
pop
sti
jp
mov
loopne
imul
mov
mov
out
pop
pop
push
arpl
call
dec
sarb
dec
mov
jl
outsl
push
and
sub
inc
and
push
ret
cld
sbb
lods
aaa
cltd
cmp
cmpsl
pop
mov
addr16
sarb
xlat
mov
repz
cmpsl
loopne
inc
dec
cltd
or
call
sub
sub
sbb
das
xor
inc
pop
adc
adc
testl
js
loopne
xor
cmpsl
add
scas
repz
int
sub
sarl
fbld
insb
mov
gs
push
into
pop
xchg
dec
xor
xchg
inc
sahf
xchg
inc
mov
aam
cmp
addl
push
and
movsb
push
fldenv
xorb
aaa
sbb
adc
jmp
adc
xchg
roll
fwait
push
lock
in
int3
stos
stc
adcl
jmp
lahf
test
rolb
bswap
test
scas
nop
test
pop
cmp
cmp
daa
test
push
xchg
lea
daa
das
mov
jge
push
xor
out
es
jmp
test
aam
pop
fidivl
stc
and
cmc
in
loop
xor
cmp
rolb
adc
xchg
mov
pop
stos
or
mov
push
shlb
mov
or
pop
jl
daa
mov
xchg
jne
dec
sub
adc
or
and
es
mov
mov
mov
es
enter
xor
outsb
out
add
test
iret
push
xchg
repnz
fisubrl
inc
aas
call
jae
arpl
push
lcall
mov
xor
pop
mov
dec
xor
aaa
cmc
mov
ljmp
adc
xorl
adc
pushf
fmull
lcall
push
scas
negb
fs
lcall
inc
fucomip
ljmp
mov
mov
test
push
xor
sub
sub
shrl
mov
push
sarl
dec
mov
fwait
mov
adc
aas
in
jge
aaa
push
scas
rolb
repnz
aam
ret
sbb
xor
cld
xchg
gs
xlat
adc
andl
cmc
loope
cmp
fidivrs
mov
hlt
test
int
and
mov
shrb
pop
mov
sbb
add
jae
sahf
and
jns
mov
lds
cld
mov
sub
pop
arpl
in
and
mov
adc
mov
push
adc
cmp
xor
shl
and
push
cmp
push
push
mov
fcompl
test
scas
mov
xchg
sarb
pushf
xchg
mov
sbb
ret
hlt
dec
mov
repz
popf
inc
push
repz
jle
jno
jne
fnstenv
mov
arpl
inc
loope
aas
dec
das
jns
gs
jl
hlt
mov
inc
xchg
mov
stos
mov
jno
sbb
push
enter
xor
inc
insl
sub
stc
cmp
mov
lea
sub
lock
jp
or
stos
add
mov
mov
outsl
xor
jp
jmp
test
cs
cmpsl
shll
mov
push
jnp
xchg
in
xlat
stc
push
lea
clc
fbld
mov
pop
adc
movsl
arpl
stos
adc
nop
cmp
pop
ret
jecxz
in
jmp
fstpt
sbb
mov
jp
repz
jecxz
pop
push
pop
rcr
push
jmp
orb
and
cmc
or
push
xchg
leave
sub
cltd
sarb
aas
xlat
inc
int3
cmp
pusha
inc
cmp
push
and
pop
into
out
imul
jmp
push
repz
xchg
jmp
mov
inc
xchg
jg
repnz
in
adc
xor
mov
add
sub
xchg
jo
in
adc
test
dec
shrl
movb
out
adc
adc
sbb
push
push
ljmp
push
adc
sbb
loopne
mov
test
cs
lret
sarb
inc
aas
ljmp
mov
adc
cmp
repz
les
add
mov
adc
imul
push
pop
out
pop
jl
pop
ds
add
test
cmp
int3
sbb
fs
dec
jne
pop
dec
cmpsl
pusha
mov
add
cmpl
add
jle
mov
aam
cwtl
sbb
inc
negb
test
add
push
push
popf
movhps
or
aam
jns
and
mov
mov
xor
movsb
cmp
std
cwtl
cmp
pop
call
mov
sub
push
adc
daa
xor
add
xchg
cld
in
pop
mov
ljmp
mov
fs
popf
push
fmul
xor
sbb
sub
mov
leave
xchg
pop
push
test
mov
arpl
push
xlat
scas
test
popa
int3
aam
push
or
hlt
push
add
xor
lods
sub
stos
loop
bound
pop
stos
icebp
mov
test
test
data16
fdivrl
mov
aaa
fcompp
dec
ja
sub
or
mov
hlt
mov
cmc
jno
dec
repz
pop
xchg
jecxz
mov
imul
pop
out
add
es
and
ficoml
jnp
adc
sub
push
inc
pop
inc
cwtl
cmp
hlt
cmp
or
test
inc
mov
clc
pusha
push
inc
lcall
insb
ds
gs
dec
fists
pop
push
add
xlat
faddl
sti
sub
addr16
add
test
and
lea
cmp
push
ja
mov
pop
xchg
fimuls
push
fwait
pop
fs
pop
cmp
icebp
inc
sbb
dec
jo
shll
movl
inc
fists
dec
das
lods
aaa
jge
push
pop
fs
arpl
sbb
cs
orb
jo
cmp
lods
mov
inc
push
sub
adc
insb
push
add
shlb
outsl
mov
jecxz
data16
sti
sbb
mov
sbb
mov
cmp
mov
mov
pop
mov
faddl
repnz
fsts
pop
push
mov
js
cmc
cmp
aad
leave
nopl
xor
fwait
xchg
cmp
sbb
icebp
imul
lods
std
fwait
xor
fwait
sub
mov
jecxz
scas
mov
mov
mov
in
add
pop
lea
adc
cltd
addr16
lds
adc
cmpsl
jg
std
stos
nop
shrb
mov
lds
pop
ss
je
imul
xchg
fildl
fisttpll
fwait
sub
xchg
xor
enter
jns
cld
lea
push
dec
mov
jecxz
repz
cld
sbb
jmp
movsl
pop
xor
cld
pop
ds
sbb
imul
aaa
ljmp
mov
adc
add
data16
std
and
or
sbb
das
adc
inc
and
ljmp
insl
dec
fdivrl
cmp
outsb
leave
sub
shrl
or
sub
pop
push
or
adc
jno
sbb
dec
lods
in
pop
mov
imul
xor
push
adc
aas
lods
fwait
nop
mov
xlat
fistpll
daa
movsl
incb
inc
adc
adc
and
mov
rclb
pop
xor
sub
dec
mov
pushf
adc
cmpb
adc
inc
pop
jne
mov
jbe
mov
outsl
test
push
in
out
jnp
xchg
mov
inc
mov
or
sti
pop
mov
sbb
jo
xor
xchg
lods
mov
repz
lahf
data16
pop
or
mov
call
fimuls
js
mov
clc
test
jecxz
xorl
mov
dec
add
pcmpgtw
or
or
outsb
mov
sub
push
pop
pop
dec
pop
inc
repz
sbb
test
ficomps
pop
sbb
out
or
cmp
aam
jl
movsl
movsl
bnd
outsb
shrb
xlat
lret
out
xor
in
fidivl
sarb
lea
sub
mov
sarl
mov
aad
fincstp
daa
xchg
pop
stos
lahf
lock
lock
orl
mov
pop
lahf
push
cmc
setae
ret
jle
cmpsl
sbb
lahf
mov
mov
es
pop
mov
pop
mov
and
fcmovb
cmp
sub
idivb
or
cmp
in
push
adc
adc
mov
imul
push
xlat
and
stos
jbe
fsubl
or
pop
addb
add
cwtl
pop
mov
sub
xlat
adc
loopne
je
test
xchg
mov
leave
outsl
subb
cmp
fldl2t
dec
outsb
repz
pop
dec
jp
imul
jnp
sub
stos
repnz
loop
mov
jno
shlb
push
ds
add
sbb
pop
or
fmull
ret
xorb
dec
js
inc
mov
jae
in
repz
hlt
dec
sub
push
inc
sub
lods
push
lods
sub
jnp
xchg
out
repnz
sahf
insb
xor
cmp
clc
mov
and
ds
jb
cmp
pop
cli
fsubrl
cmp
and
xchg
pop
out
stc
ds
fwait
lcall
push
dec
cmp
sbb
cmpsl
jae
xchg
mov
pop
sbb
jo
cmpsb
or
das
idivl
test
leave
cmp
sbb
ljmp
dec
out
xor
popf
pop
jae
insb
daa
sbb
lret
icebp
cli
ja
mov
sub
pushf
adcl
and
dec
jecxz
in
sub
scas
mov
ficoml
fs
in
or
dec
dec
add
rcl
es
aam
das
cwtl
xor
inc
clc
jbe
mov
rorb
dec
je
cmpsb
aam
xchg
push
and
fmuls
inc
push
or
xchg
js
ljmp
push
mov
sti
cmp
dec
push
sarb
xor
pop
movsb
js
fidivrs
mov
push
push
mov
gs
cli
pop
int3
daa
push
shr
mov
pop
push
sbb
not
clc
out
mov
in
mov
push
out
popf
inc
adc
daa
jp
movsl
fmul
out
bound
cmp
add
mov
sti
das
mov
cmp
cmp
mov
inc
movsb
push
mov
inc
gs
xor
push
int3
xor
add
sahf
subl
popf
testb
fcoml
push
pop
inc
pop
push
pop
push
inc
mov
push
out
xlat
xor
inc
push
push
lret
dec
jge
imul
and
jne
outsb
jmp
rorb
outsl
pop
fwait
cmpsb
cmc
mov
and
scas
sub
mov
inc
mov
pop
mov
test
les
sti
xlat
add
push
insl
inc
add
or
arpl
xor
xor
xor
mov
and
and
lds
jmp
int
mov
cs
scas
popa
sub
fs
mov
xchg
and
hlt
test
test
cmc
xchg
in
in
adc
loop
cwtl
push
sbb
pop
lods
adc
sahf
xor
insb
test
aam
aas
xchg
cwtl
push
sbb
sub
sbb
and
mov
or
loope
jb
xchg
xchg
in
loope
mov
xor
lret
mov
or
ja
es
jb
inc
cli
and
sti
cmp
int
inc
mov
push
pop
cld
jae
lea
ret
pop
sub
sbb
mov
clc
jg
pop
out
leave
jns
adc
and
inc
push
push
jae
add
dec
mov
cs
dec
xor
ljmp
cld
xor
or
retw
rclb
lods
jp
decl
bound
nop
dec
movsl
in
icebp
stc
adc
int
cmpsl
nop
cmp
scas
sbb
fprem1
cmp
lahf
mov
or
shrl
mov
xor
push
ret
inc
out
mov
dec
fbstp
adc
pop
cmp
jl
jge
inc
and
and
xor
in
add
mov
or
cs
xor
iret
push
leave
mov
and
test
add
out
jno
addr16
shrl
jne
push
or
mov
or
in
repnz
iret
in
mov
shlb
mov
dec
popa
es
enter
pop
dec
jecxz
fbld
jecxz
dec
popf
and
out
xlat
pushf
out
hlt
mov
loopne
out
push
insb
fidivs
xchg
cltd
sbb
in
or
sti
pop
sub
dec
int3
aam
mov
jo
lods
xor
mov
push
mov
loop
mov
popf
std
mov
mov
into
mov
je
xor
into
repz
mov
jo
inc
xchg
rorl
aaa
pusha
inc
xchg
ss
mov
sub
ret
inc
sbbl
adc
aas
pop
push
outsl
mov
or
jmp
out
push
xchg
icebp
jle
popa
test
lock
adc
in
xchg
int
shr
lods
pop
jne
dec
out
cmp
mov
mov
insb
or
xlat
testb
xor
imul
xchg
cmp
popf
fs
out
mov
jge
adc
jo
xchg
jecxz
aaa
mov
cmp
jb
pusha
lcall
mov
inc
push
jne
jne
adc
dec
xor
push
fisubrl
add
fdivs
orps
push
sub
mov
and
mov
jo
add
mov
or
iret
mov
lods
push
dec
nop
inc
das
inc
sub
mov
shll
out
xor
adc
sbb
sub
jge
loop
imul
out
and
js
scas
xchg
outsl
mov
jbe
xchg
loop
call
jg
test
mov
sbb
inc
jo
insl
je
cmpsl
stos
jo
pop
out
jae
lods
or
pop
or
out
adc
jo
cld
clc
adc
xchg
int3
inc
mov
outsl
jno
mov
pusha
xchg
mov
in
jl
mov
clc
faddl
scas
xor
mov
enter
cmp
xchg
insb
movsb
out
sti
pop
mov
inc
jne
pop
or
and
dec
rcrl
lods
and
jmp
pop
divb
adc
mov
mov
repz
leave
inc
pop
add
xchg
xchg
xlat
popl
sbb
aad
test
pop
dec
push
and
push
leave
and
fwait
aas
sbb
mov
enter
test
sbb
lret
mov
and
jae
faddl
mov
jbe
in
add
push
lcall
std
pop
lods
iret
adc
sbb
jmp
lea
mov
fwait
scas
cltd
stc
xchg
adc
xor
fidivrs
xchg
test
xchg
pop
adcb
lock
mov
or
mov
push
shufps
aas
cmp
sbb
imul
es
addr16
mov
andb
rcrl
gs
insl
in
fsubrl
push
push
inc
jle,pn
sbbb
mov
je
or
or
add
jp
mov
pop
mov
rclb
mov
dec
mov
jl
rcr
jno
adc
push
cmp
stc
xor
loop
push
and
xlat
mov
cmp
pop
dec
mov
loop
jg
push
aad
lcall
xchg
nop
pop
pusha
cld
fmull
fbstp
test
lret
mov
push
pop
jo
mov
or
mov
out
mov
add
mov
and
mov
in
int3
mov
js
je
dec
data16
mov
mov
popa
xchg
rcrb
popa
lret
adc
mov
mov
das
jo
jnp
les
fcmovb
stc
push
cmc
lods
fcoms
jl
push
xor
loop
sbb
mov
mov
xchg
outsb
sbb
mov
and
add
aas
cmpsb
lock
pushf
adc
stc
lea
frstor
fcmovnu
in
add
jecxz
cmp
xor
cmpsb
lea
pop
bound
cmp
add
jmp
in
jae
ja
xchg
or
add
mov
mov
ret
cmpsb
add
scas
addr16
ret
clc
adc
mov
push
cmp
js
fs
adc
adc
fcom
xchg
dec
xchg
aas
xor
jp
sub
inc
movsb
outsb
adc
loope
imul
add
nop
cmp
sarb
cmpsb
mov
pop
add
and
mov
imul
push
mov
repnz
aam
cld
dec
les
mov
rorl
loop
fdivl
in
cmc
mov
sub
inc
sahf
xchg
xchg
cmp
pop
mov
pop
leave
scas
daa
mov
imul
xor
add
nop
mov
adc
cmp
mov
or
xchg
fstl
loopne
push
pop
loop
jp
orb
and
xor
stos
xor
lret
aad
js
xchg
out
fimuls
ds
dec
out
test
adc
lock
mov
scas
cmp
add
or
inc
cli
sbb
pusha
xor
mov
stc
loop
mov
dec
jl
jbe
or
loopne
xor
sbb
test
mov
xchg
dec
inc
jnp
xchg
jmp
jno
pop
pusha
cwtl
shr
adc
mov
xchg
sbb
pop
cld
clc
adc
test
repnz
pop
sbb
add
inc
push
or
ljmp
es
call
push
xchg
push
shrb
mov
js
mov
gs
cmp
rcrl
sub
sub
in
sbb
jne
adc
cmc
xor
push
and
arpl
sbb
mov
cltd
rcrb
pusha
mov
out
dec
cmc
or
pop
dec
mov
popf
iret
jmp
ret
clc
xchg
ret
lods
sub
into
jbe
loopne
xchg
sti
ja
aaa
xor
dec
mov
add
les
mov
pop
insl
or
hlt
das
push
imul
out
hlt
clc
out
or
repz
ss
cmp
cmp
pop
mov
inc
int3
rcl
push
or
mov
cmp
inc
ud0
xchg
movsl
sbb
push
dec
test
loop
or
jmp
pop
stc
dec
mov
shll
das
es
sbb
mov
outsl
call
das
add
sub
ret
cld
mov
mov
mov
inc
and
xchg
div
fstpt
jnp
insl
push
arpl
shr
repnz
in
add
and
mov
jl
push
mov
jecxz
fcmovbe
push
sbb
adc
out
cmp
mov
pop
xchg
inc
movsb
push
test
lret
or
and
mov
stc
mov
cmpl
ljmp
xor
in
stos
iret
pop
filds
dec
jb
push
or
mov
sub
push
pop
outsl
jge
cmpsb
push
gs
sbb
nop
jae
xchg
mov
jo
loope
cld
mov
add
cmp
call
mov
push
xor
movsl
mov
dec
and
andb
das
pop
cld
sahf
icebp
insb
nop
jp
aam
je
push
rorb
push
outsl
ret
int3
cmpsl
add
pop
subb
dec
jnp
dec
adc
jb
pop
lods
loop
dec
adc
jle
and
incl
out
incb
test
add
push
cmp
daa
test
aaa
popf
pop
mov
cmp
cs
adc
lock
dec
and
pop
addr16
sub
jecxz
dec
ss
pop
enter
stos
imul
sbb
stos
mov
push
push
sub
cltd
sub
shl
pop
mov
sar
xchg
fistl
xor
mov
mov
or
hlt
sbb
insb
add
xchg
push
add
cmpsl
test
lea
xchg
pop
test
sbb
push
ja
lock
jnp
in
and
insl
es
push
jae
aam
pop
dec
mov
mov
sbb
mov
cmpsl
mov
cmp
rorb
outsl
test
dec
movd
cwtl
adc
ss
hlt
dec
bound
mov
mov
mov
mov
ljmp
clc
hlt
ss
data16
add
pop
mov
inc
mov
push
dec
ret
pop
xchg
rolb
popl
add
outsl
xchg
pop
add
and
cmp
dec
fs
cmp
jb
idivl
xor
addr16
mov
xlat
push
pop
cmpsb
xchg
pop
dec
or
xor
aas
in
or
jb
push
loop
cmp
pop
xchg
xchg
pop
pusha
jmp
jb
ds
sub
and
pop
dec
aaa
xor
aaa
mov
fimuls
or
imul
andl
and
inc
jb
push
mov
lods
lods
adc
xorl
mov
xchg
rcr
sarb
pop
sub
lods
mov
mov
hlt
cld
out
ljmp
push
pop
iret
or
aad
adc
jecxz
je
dec
mov
stos
filds
scas
and
pop
push
mov
fisubrl
fcompl
jno
jle
mov
xchg
adc
pop
mov
rep
mov
xchg
dec
sbb
ret
cmc
cwtl
or
and
dec
xchg
aad
aad
fnstsw
je
jecxz
inc
leave
jl
out
mov
in
xor
jno
stos
inc
cmpsl
mov
js
dec
sbb
insl
sbb
jp
leave
add
and
and
pushf
xchg
sbb
jo
dec
adc
adc
lods
add
pushf
xor
sbb
pop
xor
testl
and
pop
decb
jg
inc
scas
into
cmc
mov
xchg
sub
fstpt
clc
scas
sub
sahf
cmp
jb
cmpsb
cld
pop
xchg
push
jno
popa
inc
sti
imull
mov
push
xchg
jnp
adc
clc
mov
xchg
xchg
icebp
je
addb
sti
out
mov
loopne
xchg
inc
les
test
fists
or
adc
aad
sbb
in
mov
mov
mov
fisttpl
scas
push
and
mov
mov
inc
cmovp
sub
push
push
sahf
jns
shrl
add
sbb
jecxz
aad
jne
pop
mov
push
orl
cmp
ja
mov
push
idivl
xor
test
mov
je
out
push
incb
inc
out
pop
mov
push
daa
sbb
add
pusha
xchg
pop
xlat
jne
add
sub
hlt
pop
cmp
mov
mov
addr16
inc
test
scas
pop
xchg
jle
add
xchg
mov
lock
cltd
dec
sbb
repnz
fnstsw
es
fcmovb
sub
jb
pop
mov
lods
icebp
inc
pop
push
int3
clc
cmp
adc
mov
mov
dec
lahf
cmpsb
or
jb
xor
ja
test
jmp
push
xchg
push
dec
out
push
cmp
test
push
or
ljmp
mov
sbb
add
sahf
mov
insl
lods
pop
ret
shll
mov
inc
repz
stos
jae
mov
mov
mov
cmp
lods
xor
cmp
into
and
inc
dec
cwtl
mov
push
xchg
sti
push
sbb
xchg
sub
andl
clc
dec
mov
push
call
pop
hlt
mov
sbb
sub
dec
aam
xchg
pop
sub
std
inc
mov
call
xchg
adc
inc
mov
inc
scas
mov
mov
xchg
mov
loope
inc
stc
xor
cmpl
lret
mov
lcall
add
mov
jge
xchg
or
or
in
or
sarl
cltd
adc
jne
add
xchg
push
mov
dec
dec
sbb
xchg
subb
mov
or
sub
cmpsb
dec
adc
loope
loope
jecxz
cmp
cmpsb
pop
xchg
adc
jno
ja
lret
adc
movsb
sub
xchg
mov
icebp
sub
test
ficompl
xorl
pop
test
sti
dec
in
sahf
fwait
sub
cmpsl
mov
addr16
sbb
in
cmpsb
xchg
orl
clc
scas
dec
xor
pop
and
out
pop
popa
ror
repnz
mov
shr
xchg
aad
jl
jge
aas
xchg
mov
loope
dec
sub
insb
scas
ficompl
fs
dec
iret
scas
sarb
flds
push
arpl
jb
jge
dec
push
loop
push
xor
mov
inc
push
and
jae
xor
iret
out
rcr
xor
lock
imul
scas
dec
pop
push
push
cmovbe
adc
ds
adc
mov
jns
pop
int
mov
pop
imul
push
pop
vmwrite
pop
mov
sbb
or
leave
inc
mov
inc
andb
xchg
sub
fsubrl
pop
outsl
jnp
dec
fwait
xchg
cmp
mov
in
addb
xor
outsl
xchg
mov
scas
test
movsb
popa
icebp
subl
test
out
push
mov
fimull
insl
std
inc
in
jle
jns
cmp
jp
mov
scas
in
lock
mov
lods
bnd
ss
ja
int
mov
sub
stos
inc
sub
push
iret
pause
pop
mov
xchg
sbb
arpl
jp
jbe
mov
inc
cmp
mov
stos
test
test
jnp
and
pop
aam
push
mov
cmpsl
outsl
jno
popa
in
lcall
jmp
loop
pop
dec
mov
mov
mov
push
pop
addr16
js
lea
sbbl
lcall
cwtl
fwait
mov
mov
fs
fwait
or
pop
cmc
lret
scas
mov
push
test
mov
decb
push
cld
dec
sarb
mov
add
push
jae
into
in
xchg
push
jo
pop
test
stos
pop
push
inc
jmp
push
mov
frstor
jb
repnz
jecxz
push
xor
imul
shrl
dec
or
imul
imul
mov
shlb
push
xchg
loop
sbb
and
pushf
fmuls
jbe
lea
inc
xchg
test
cltd
fs
jmp
cmpsl
and
cmpsl
mov
test
push
xlat
stos
aas
and
and
cmpsb
daa
in
adc
lea
push
xchg
cmp
push
pop
mov
xchg
jne
loope
and
dec
cmp
jnp
stos
aas
or
out
lock
loop
andb
faddl
sbb
dec
lods
mov
andb
jle
jecxz
push
push
xchg
jbe
cmp
add
cmp
fs
fldlg2
ss
push
mov
jne
scas
cld
jns
ljmp
cmpsb
pop
add
sbb
and
and
add
cmp
call
xchg
push
mov
mov
cmpsl
mov
cwtl
or
mov
fisttpl
pop
xor
sub
rcll
sbb
mov
fisubs
mov
xchg
loopne
mov
add
and
arpl
sbb
jge
and
inc
mov
call
adc
leave
or
sub
push
ficomps
bound
out
push
mov
or
and
scas
mov
icebp
es
iret
push
call
adc
jg
sbb
stos
aad
cmp
icebp
jo
filds
push
data16
lds
mov
cmp
mov
inc
push
aas
out
push
mov
jae
sti
xchg
dec
adc
xchg
push
in
les
loop
dec
and
in
cmp
lods
mov
mov
mov
stc
lds
sahf
stos
mov
mov
mov
pop
jmp
in
mov
add
xchg
sti
cmpb
cmp
xlat
jno
mov
pop
movsb
daa
int3
gs
or
sub
adc
or
ret
and
or
cld
call
and
shrl
pop
inc
adc
andb
int3
aam
jbe
fcomps
xchg
mov
call
nop
je
adc
pop
aam
dec
fmull
nop
in
inc
pushl
mov
scas
fwait
sub
push
inc
mov
or
es
stos
push
push
lds
pop
inc
mov
lret
lods
jnp
pushf
mov
sar
jne
or
push
jmp
inc
mov
cmpsb
imul
sbb
jl
jmp
fs
and
out
fistpll
mov
add
push
inc
scas
insl
outsl
lds
mov
stos
ror
in
lcall
and
mov
push
mov
insl
dec
rorb
mov
adc
scas
inc
ds
mov
mov
mov
or
sbb
push
imul
ljmp
test
das
xchg
popf
or
mov
pop
in
pushl
push
cmp
popa
stos
jns
daa
sahf
or
jae
call
ret
fwait
sbb
xchg
lret
lods
add
int
pop
pop
mov
call
in
dec
mov
ds
mov
mov
out
jo
fwait
mov
sbb
and
mov
inc
movb
lods
popf
jbe
pop
stos
jns
fistps
cmpsb
mov
fsubrp
negb
dec
mov
scas
cwtl
dec
in
and
push
sbb
mov
into
outsl
int3
mov
mov
pop
das
sub
or
lcall
test
sbb
movsl
cmpsb
inc
sub
arpl
and
mov
xchg
imul
or
inc
pop
dec
ss
addb
pop
loopne
loopne
loop
das
aas
pop
add
ret
ss
xchg
jl
xor
cmp
jle
jno
stos
icebp
movsb
jecxz
call
or
mov
stos
cmp
dec
loop
jp
imul
sub
addr16
jae
push
sti
mov
test
repnz
or
repz
fldcw
js
imul
ljmp
movsb
mov
nop
pop
in
out
shrb
bound
and
rcr
push
je
pop
sbb
adc
in
fdivs
imulb
in
cwtl
notb
sub
sbb
testl
jb
popf
mov
sarl
out
enter
xlat
sbb
fsub
fs
jb
fisttpl
dec
fcmovnbe
mov
jl
mov
push
mov
add
loope
dec
getsec
arpl
in
or
test
dec
fwait
mov
dec
movsl
in
pusha
jle
cmp
or
scas
inc
sbb
push
scas
mov
ret
or
xchg
jno
lock
addr16
sbb
inc
mov
ret
test
arpl
iret
xor
jge
jo
sbb
inc
xchg
jge
enter
outsl
adc
pop
repz
mov
in
mov
daa
pop
push
in
ss
mov
loop
std
inc
ja
sub
cmpl
xor
sbb
dec
push
pusha
jbe
imul
mov
mov
clc
icebp
xchg
mov
xor
out
inc
sbb
dec
call
lds
sbb
mov
and
mov
mov
rcll
aas
dec
rep
sarb
inc
sti
lea
lret
jae
int3
and
adc
jb
adc
int
loop
push
ljmp
test
pop
cmpsb
cwtl
adc
or
into
sub
aas
sub
mov
fwait
xchg
repnz
enter
out
inc
testl
xchg
inc
sbb
dec
aad
ljmp
les
cltd
outsb
iret
imul
shll
outsl
stos
xchg
ss
mov
or
dec
jns
ret
repnz
lret
cs
mov
push
mov
aaa
pop
movsb
mov
mov
mov
and
jo
mov
xor
add
pop
push
ds
xorl
loope
les
cmp
pop
out
int
sbb
fldenv
stos
jle
mov
js
rol
lahf
mov
inc
and
aad
jb
lods
adc
lret
bound
iret
xor
inc
lods
inc
jmp
push
inc
cs
das
inc
pop
or
out
sub
rcll
lods
loopne
cli
inc
mov
idivb
sbb
fwait
jno
and
push
stos
jns
nop
ss
inc
icebp
test
mov
fisubrs
dec
xchg
cwtl
mov
xchg
sbb
push
mov
cld
jecxz
lahf
push
jle
pusha
int
jmp
ljmp
mov
inc
push
fs
push
mov
mov
add
cmp
and
bound
dec
sbb
js
sti
and
decl
fstpl
cwtl
mov
test
add
movsbl
ss
xchg
pop
mov
jbe
rcrb
ja
out
cmpsb
push
je
test
add
nop
adcb
mov
push
call
jmp
mov
outsl
and
add
ror
fs
add
pop
cld
movsb
inc
adcb
cmp
daa
lods
push
adc
scas
test
inc
insl
cmp
jmp
out
lock
lret
lcall
pusha
xorl
mov
jbe
insb
push
je
mov
xchg
xor
sarb
cmp
rorl
bound
scas
xchg
adc
stos
imul
mov
out
jo
pop
fadds
jo
xor
sahf
aam
push
mov
das
xchg
neg
arpl
inc
cmp
mov
mov
cmp
fucomi
xchg
sbb
outsl
jae
popf
push
outsb
xchg
cltd
les
in
out
mov
mov
or
rcl
jg
in
pop
lret
mov
repnz
xor
push
adc
ljmp
jnp
inc
add
mov
pop
clc
arpl
cmp
int
mov
lds
popa
xorl
pop
xchg
jmp
js
mov
xor
sbb
movl
mov
adc
and
mov
cmp
out
jae
psllw
pop
in
xor
dec
pushf
xor
cltd
adc
js
push
jmp
icebp
xlat
cmp
enter
mov
sub
adcl
jp
dec
fld
cli
cmpsb
movsb
lods
imul
cli
ret
movsl
test
jle
xor
and
push
cld
std
aaa
inc
xor
mov
nop
mov
add
jmp
aad
xor
and
cmp
pushf
popf
sbb
ds
out
mov
cmc
adc
ja
mov
push
int
push
jle
inc
push
movsb
outsb
repz
arpl
ret
xchg
ficompl
iret
mov
cmp
and
cmp
repnz
pusha
adc
xchg
roll
cli
add
sbb
jp
dec
outsb
adc
add
xchg
pop
xchg
cld
xor
test
ja
mov
loope
sub
pop
jbe
sbb
mov
stos
clc
outsl
ret
jnp
adc
push
cmp
mov
push
imul
mov
in
icebp
lds
mov
cmpsb
mov
pop
jb
inc
in
repz
pop
movsl
dec
pop
jnp
bound
mov
aas
jbe
push
fdivs
push
xor
jp
pop
testb
pop
dec
inc
out
jb
cmp
movsl
and
jne
fdiv
pop
mov
aas
in
mov
jnp
ja
call
es
mov
fimull
aaa
das
sbb
jecxz
jecxz
cmpl
xchg
mov
add
sbb
shlb
imul
inc
outsl
cmpsl
ret
jbe
pusha
les
jns
xchg
push
lods
stc
jb
fimuls
in
cmp
xor
or
outsb
lcall
stc
add
cmpsw
mov
mov
mov
add
xchg
inc
les
mov
popf
bound
testl
rol
cmpsl
lods
xchg
orb
pushf
mov
jnp
xor
in
popa
orl
jnp
sbb
js
push
mov
mov
out
pavgw
mov
mov
and
and
inc
lea
or
mov
mov
das
hlt
les
psllq
sbb
clc
dec
mov
testb
mov
mov
jne
cs
jp
cli
jecxz
loopne
movsb
addr16
sbb
bound
lcall
sub
push
stos
in
jle
dec
movl
pop
inc
inc
in
call
in
mov
clc
les
xor
xchg
insb
daa
adc
in
jbe
sbb
fnsave
inc
inc
push
aaa
stos
loop
dec
out
mov
mov
add
int
or
mov
push
push
lock
aam
inc
decb
outsl
inc
xor
lds
ret
call
aas
stos
movsl
jecxz
jno
mov
xor
mov
inc
aad
push
cmp
mov
inc
mov
and
add
aad
scas
push
pusha
pushf
mov
lea
mov
pop
xor
pop
dec
lock
jns
int
jmp
mov
sub
sbb
pop
jl
xor
hlt
jp
inc
dec
imul
out
push
test
enter
lods
or
xchg
cmp
push
movsl
mov
cmp
daa
ja
loop
mov
int3
divb
test
xor
test
hlt
das
jl
jle
scas
mov
stc
mov
lods
mov
notl
neg
mov
shlb
fwait
lods
sbb
mov
cld
xchg
out
rclb
adc
movsl
sbb
sub
test
enter
dec
das
sbb
or
lahf
push
mov
xor
add
enter
mov
push
idivl
mov
insb
loopne
or
fidivrs
xor
rcrb
pop
fdiv
sbb
mov
add
jl
fldt
pop
mov
in
dec
rcrb
shll
rorb
lds
mov
aad
loop
push
fwait
sub
mov
adc
clc
enter
cmp
gs
aad
and
test
jo
lahf
aas
mov
pop
jnp
in
aam
xor
add
pop
iret
ds
lahf
jg
lcall
or
cld
mov
mov
pminsw
mov
stos
and
call
icebp
cwtl
jns
adc
repnz
sub
aam
mov
je
jne
leave
cmpb
out
ss
xchg
aam
push
or
xchg
adc
jno
mov
into
gs
lret
jae
mov
icebp
adc
aam
xchg
jmp
push
int
lds
in
pop
int
std
repnz
pop
jmp
jl
sbb
pop
mov
bound
dec
adcl
xchg
mov
out
jns
mov
push
xor
out
cmp
outsl
adc
jo
jae
jae
pushf
lret
sub
inc
popf
jmp
lahf
pop
xchg
xchg
inc
aaa
dec
imul
fidivs
mov
inc
adc
push
mov
lods
sti
outsb
inc
fcmovne
and
rol
fisttpll
cmp
cltd
xor
mov
loop
testb
pusha
sbb
or
mov
xor
mov
cmp
js
pop
add
int
adc
iret
add
pop
in
add
xchg
push
lock
rorl
lcall
jnp
xchg
push
sub
outsb
arpl
push
cmp
mov
repz
jb
or
es
xchg
mov
out
push
imul
mov
lret
loope
stc
call
add
call
or
sub
repz
fcmovb
out
pop
fxch
bswap
loop
mov
outsb
cmc
sahf
fsts
xchg
xor
orl
lahf
xor
sbb
insb
cmp
iret
lahf
cmp
stos
ja
lods
and
xchg
cs
pop
add
aas
roll
popa
pop
sbb
repnz
ljmp
out
inc
shrb
mov
mov
andb
adc
or
sub
mov
clc
in
jmp
iret
push
lret
and
xchg
dec
push
xchg
mov
and
in
and
into
jl
xor
insb
sbb
jp
stos
scas
or
mov
adc
sub
dec
mov
adc
mov
jnp
aam
dec
ja
hlt
fistl
pop
jns
dec
clc
mov
pop
adc
lods
test
cs
or
xor
sbb
dec
push
bound
fisttpl
adc
hlt
int3
mov
popa
adc
jmp
pop
test
ljmp
bound
mov
jl
cmp
sub
dec
movsb
cmp
cmp
mov
jmp
or
lahf
mov
sti
adc
sahf
pusha
in
sbb
in
mov
fcoml
rep
pop
sbb
stos
jp
adc
push
in
inc
dec
scas
push
int3
cmp
mov
adc
sbb
and
loopne
clc
jl
std
notl
sub
jno
push
repnz
arpl
sub
mov
pop
dec
cmp
xor
adc
in
inc
incb
orb
inc
std
adc
mov
test
xchg
mov
lea
outsb
mov
mov
imul
mov
pop
mov
test
mov
xlat
mov
pop
in
xor
rorl
sub
movsb
mov
fsubp
mov
loop
or
out
mov
test
leave
add
loop
cmp
add
cltd
out
aas
dec
and
shl
mov
je
cltd
aaa
fwait
inc
or
mov
lcall
inc
xor
lret
call
sub
cld
loope
pop
clc
xor
jb
int3
ljmp
fldt
push
push
mov
or
cmp
cmova
movsl
push
mov
push
int3
xchg
mov
xor
mov
pop
mov
in
push
sub
jecxz
pop
mov
pop
movsb
jmp
mov
mov
cmp
loopne
jmp
enter
cmp
lcall
mov
bound
inc
rcr
add
imul
mov
push
dec
fs
flds
mov
mov
add
push
fbstp
sbb
lret
out
xchg
adc
jo
cmp
mov
dec
in
adc
inc
inc
cs
dec
enter
xchg
pop
jne
cmpsl
jb
push
push
leave
jns
xchg
mov
das
add
fs
dec
fs
jmp
scas
repz
lds
sub
ret
cmp
adc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
and
xor
shlb
int3
adc
pop
movswl
pop
pop
mov
add
call
xchg
cmp
jle
sub
mov
push
call
loop
xor
cmp
dec
loope
hlt
sbb
pop
mov
sbb
mov
mov
add
add
mov
xor
jp
or
push
push
push
push
pop
pop
pop
popl
movzwl
sub
mov
dec
xor
sub
jne
sub
jmp
andl
add
jne
loope
jmp
inc
sub
scas
dec
fsub
mov
mov
jge
popa
bnd
ds
add
and
push
lods
add
sbb
in
out
movsl
jge
cmp
and
mov
test
fdivs
sahf
std
iret
mov
out
lcall
pop
push
adc
cld
ret
inc
ss
movsl
jge
mov
popf
pop
jns
fdiv
ret
jns
mov
icebp
insb
lds
lods
or
and
mov
mov
push
pusha
out
out
daa
loopne
imul
scas
pop
dec
leave
mov
jle
jb
repz
inc
movl
jg
rolb
or
lahf
sub
adc
inc
bound
jne
stos
xchg
xchg
push
aad
sub
repnz
loop
jmp
lahf
lea
stos
fucomp
sub
add
stc
rorb
pop
mov
outsb
sub
adc
push
jne
sub
mov
jb
cmc
stos
pop
cmp
jb
adc
cmpsl
or
and
ficoms
sbb
sub
jnp
cmp
pop
push
xor
mov
subl
cmp
adc
mov
pop
out
add
outsl
es
test
pop
ficompl
data16
test
mov
dec
inc
in
repz
les
imul
add
cs
mov
sti
xchg
pop
adc
push
or
or
testb
pop
xor
test
sbb
xor
sub
in
push
imulb
inc
cld
pusha
jo
insb
mov
adc
add
dec
addr16
cmp
dec
loop
ret
test
ret
pusha
add
andb
xchg
mov
push
and
adc
stos
popa
cld
jnp
cld
mov
jae
xor
sbb
or
xlat
sbbl
cld
mov
testb
push
push
aad
test
mov
dec
add
mov
nop
rcl
sub
outsl
jb
mov
mov
fisttpl
mov
adc
xlat
leave
das
mov
sub
push
into
pushf
add
xchg
sbb
lods
and
and
gs
sbb
pop
cmp
andl
scas
mov
pop
in
aad
or
mov
inc
shrb
iret
dec
sti
xchg
shrl
mov
inc
mov
cmp
add
cmp
jmp
inc
mov
push
aaa
and
push
shr
dec
sub
fsubs
sub
test
or
add
fsub
sbb
sub
jl
and
shrb
aas
add
mov
in
or
mov
rorb
mov
fadds
fadds
or
push
or
cmp
jp
fsubr
inc
fwait
imul
aad
lds
pop
movsb
and
xlat
or
insw
stos
loop
cwtl
xchg
jbe
inc
test
imul
dec
les
push
cs
inc
mov
fcoms
push
int3
inc
mov
dec
fstpt
fadd
xchg
gs
inc
mov
jns
js
fdivs
roll
and
mov
mov
fs
sahf
jns
fdivrs
mov
dec
idivl
fsubs
fadds
jmp
inc
mov
aas
js
in
dec
idivl
fdivrs
js
fdivrs
xchg
fadds
and
cmp
enter
inc
add
jmp
inc
mov
or
mov
scas
iret
jnp
fadd
cmp
inc
mov
test
arpl
inc
ret
fldl2t
dec
divl
inc
mov
jl
enter
mov
pop
test
push
in
dec
fstpt
fdivs
mov
sub
test
inc
mov
lret
int3
inc
mov
or
mov
mov
inc
add
aaa
lcall
jg
mov
aas
js
in
dec
jp
fdivrs
imul
fs
fnstcw
add
dec
push
cmc
and
fsubs
xlat
mov
pushf
fadds
movsb
fldl
fadds
gs
lcall
aas
ror
add
sarb
cld
outsb
imul
cmp
pop
jg
push
mov
jnp
test
imul
cmp
inc
mov
stos
pop
jg
push
mov
jnp
pop
jns
jle
add
or
int
into
das
sbb
enter
outsb
imul
cmp
jns
pop
aas
ds
mov
dec
mov
fmuls
int
into
das
sbb
enter
outsb
imul
cmp
dec
outsl
dec
mov
mov
fmuls
int
into
das
sbb
enter
outsb
imul
cmp
into
loope
cld
mov
mov
add
dec
ds
mov
inc
jp
jle
add
or
int
into
das
sbb
imul
pop
adc
fadds
gs
inc
cmp
push
into
loope
cld
mov
mov
dec
iret
xor
imul
dec
enter
mov
lds
cmp
mov
in
dec
add
enter
mov
jo
adc
aaa
cmp
insl
fadds
gs
inc
inc
in
and
fadds
xor
inc
jnp
cs
je
and
add
fadds
jb
out
js
add
mov
fadds
jecxz
inc
mov
imul
add
fadds
insb
fadds
int3
dec
add
add
jo
add
gs
inc
inc
xlat
add
pop
int3
fsub
adc
inc
mov
jne
mov
das
outsl
imul
mov
add
int3
test
xorb
outsl
popf
in
jp
decl
xchg
push
inc
jns
inc
pop
fbld
add
loope
inc
hlt
aad
sbb
and
mov
sahf
mov
mov
ja
cwtl
int
inc
leave
dec
dec
adc
cmpsb
pop
pop
das
flds
fadds
fadds
fadds
fadds
fadds
fadds
gs
andb
into
gs
jp
fcoms
js
fadds
fadds
and
fadds
fadds
fdivs
mov
fadds
fadds
fadds
fadds
fadds
fadds
gs
sub
mov
gs
stc
repz
mov
icebp
sbbb
int3
adc
sub
cld
cmc
sahf
in
adc
mov
push
mov
fistpll
push
scas
ficomps
loope
fs
mov
mov
jg
ds
movsb
sbb
adc
call
xchg
dec
pop
jnp
pop
bswap
adc
int
fcompl
movsl
imul
pop
pop
mov
flds
aaa
mov
notl
repnz
jae
repz
xchg
dec
test
call
inc
cmpl
stos
jns
or
ret
pop
in
inc
test
insl
sub
jne
push
je
lahf
insl
xchg
fwait
add
fiadds
jmp
dec
pop
xchg
pop
dec
into
mov
xor
sbb
inc
mov
inc
icebp
push
cmp
and
add
add
add
ljmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
ljmp
mov
push
add
ljmp
shr
add
ljmp
into
ljmp
arpl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
ljmp
or
push
add
add
add
jmp
add
add
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cs
dec
inc
in
mov
js
imul
or
lret
jecxz
dec
in
or
jmp
cli
xchg
fsubrl
push
push
push
imul
inc
or
fisubl
cmp
gs
xchg
mov
aas
clc
imul
call
mov
add
test
fdivl
push
jmp
gs
dec
jne
jle
mov
inc
adc
loope
fnsave
or
insb
pop
adc
dec
dec
fcmovbe
pop
jnp
or
pop
sub
pop
pop
inc
inc
push
pop
dec
cs
sub
iret
dec
and
dec
data16
and
push
push
dec
sub
cmp
jne
inc
xlat
sbb
push
pop
cmpsb
movsl
mov
inc
pop
adc
jns
in
test
add
jno
sbb
add
and
mov
sbb
pop
inc
pop
push
pop
ss
movsb
add
arpl
sub
dec
pop
in
dec
sub
rol
ds
or
fs
push
psubb
out
test
inc
lret
pop
or
repnz
xor
mov
out
add
inc
sub
pusha
inc
inc
jb
cltd
pop
inc
cmp
sbb
je
push
and
lcall
xor
sub
les
adc
je
imul
sub
cwtl
in
sub
icebp
data16
je
dec
call
or
dec
imul
in
cmp
push
cmp
pop
sbb
dec
xchg
pop
xor
mov
dec
dec
hlt
movsl
adc
imul
mov
mov
outsl
mov
jns
ja
and
push
cmp
insb
pop
pop
scas
adc
inc
bound
es
mul
inc
lods
push
mov
imul
xchg
pop
sbb
sub
pusha
mov
dec
mov
push
sbb
cmpsb
js
and
push
xchg
cmpsb
push
mov
xchg
push
inc
pop
loop
adc
mov
cmp
aaa
jns
xor
imulb
adc
cmp
bound
ds
sub
mov
sbb
dec
jge
jnp
mov
push
sar
in
pop
jne
popf
sbb
pop
adc
jg
inc
jne
jno
ja
cmp
jne
lret
mov
push
inc
and
and
pop
ja
mov
rolb
jns
repz
lds
int3
xchg
cmp
insb
pushf
pop
addl
pop
aaa
roll
ss
inc
mov
cmpl
fcmovnb
pop
in
mov
jo
dec
fisttpl
aaa
jns
lret
mov
out
push
adc
xchg
add
dec
inc
imul
mov
xchg
in
jp
pop
dec
jl
sub
dec
or
pop
jge
pusha
daa
cmp
jge
jnp
aaa
imul
push
fwait
pushf
and
pop
xor
jnp
sbb
je
push
std
dec
xchg
js
jno
cld
sbb
pop
test
adcb
mov
mov
pop
inc
neg
jg
es
dec
mov
inc
dec
sbbl
jge
mov
cmp
jo
add
decl
jmp
push
adc
ss
imul
jle
jl
xor
push
jbe
stc
xchg
fs
aad
push
insb
mul
xor
or
inc
loop
jl
int
insl
pop
das
aad
jne
jb,pn
hlt
and
sub
xchg
std
inc
dec
cmc
adc
and
or
push
sub
mov
in
jl
or
stos
aaa
bound
push
icebp
lods
adc
jg
push
lret
pop
cmpsl
pop
pop
js
sub
std
ss
std
subb
hlt
jge
rcrb
push
fucomi
lret
cs
push
cmc
inc
jle
insb
dec
jp
sbb
imul
popa
pop
xchg
mov
rcl
gs
pop
cs
pop
js
fiadds
pop
xorb
ja
insb
in
pop
insl
jle
push
adc
push
imul
aas
pop
and
lea
aas
popf
add
loope
xchg
out
fs
push
xor
imulb
out
pop
push
mov
imul
mov
aas
xor
inc
cmc
and
pop
lret
cmp
sbb
push
sbbl
mov
pop
js
inc
ret
push
int3
adc
xor
and
insl
daa
shl
lret
pop
neg
adc
aad
jae
cs
cmp
lea
ret
test
sbb
bnd
ret
jp
sar
adc
inc
mov
test
push
js
pop
imul
add
scas
cmp
ret
dec
enter
and
push
mov
or
add
int
jl
testb
dec
sub
add
pop
push
cmp
addl
negl
fisttpll
xlat
popa
jne
cmp
das
lds
int3
adc
jne
pop
pop
pop
lcall
loope
dec
cmpl
push
xchg
insb
loopne
repnz
pop
dec
shll
dec
mov
push
leave
xor
out
fsts
xor
or
push
aas
push
je
pop
mov
push
pop
aas
jb
repnz
pop
insl
aad
into
aam
push
or
jo
cmp
xor
shll
xor
fistps
out
lods
das
xchg
add
pop
push
push
sub
adc
enter
sbb
mov
in
sbb
scas
imul
jno
cmp
add
sub
adc
icebp
imull
fistps
pop
pop
pop
jns
loop
nop
aaa
outsl
fdivs
sub
out
push
and
test
dec
sbb
pop
pop
push
or
jne
jnp,pt
jle
in
daa
sub
cmc
jno
push
cmp
sbb
add
sub
and
std
jg
mov
xor
adc
ds
sarb
jg
pop
xchg
mov
js
in
jbe
mov
push
sti
adc
pop
cmp
cmpsl
insb
jo
sbb
iret
in
loop
pmulhw
jge
mov
jnp
vunpckhpd
xor
mov
je
mov
ret
and
outsl
scas
jmp
je
inc
stc
pop
push
out
cmp
aaa
jae
push
lcall
mov
pop
inc
sbb
ficomps
cmpb
mov
js
xor
das
push
sub
sub
ss
movsb
adc
mov
pop
sub
je
and
pop
stos
andl
addl
mov
in
es
sub
inc
push
mov
push
daa
mov
cmpsb
xor
arpl
dec
push
pop
loopne
or
sbb
cmp
arpl
loop
push
add
pop
sbb
jb
push
inc
inc
lods
int3
and
push
cmp
sbb
jmp
outsl
lret
xor
or
addr16
and
adc
jns
shll
fcmovne
addb
xchg
adc
mov
dec
sub
dec
ljmp
in
fstpl
jnp,pt
sub
sbb
cmp
pop
inc
daa
dec
popf
push
je
mov
and
mov
or
jnp
adc
push
pusha
stc
fidivrl
jle
jo
jae
dec
popf
adc
cmp
insb
fldt
out
push
dec
dec
lods
es
data16
cmp
cmp
ss
sti
mov
pop
and
inc
fadds
sti
jge
push
xchg
mov
mov
adc
fsubrl
push
mov
inc
mov
shrb
pop
pushl
and
aad
push
mov
gs
push
adc
and
arpl
ja
inc
inc
or
and
mov
push
lods
insb
sbb
pop
pop
jne
pop
xchg
dec
shl
cwtl
nopl
in
jb
pushf
adc
cmpsb
xchg
inc
xor
sub
dec
cmp
mov
cs
xor
ljmp
add
xor
sub
mov
sbb
shll
fs
js
dec
and
js
cmp
jl
sbb
enterw
movsb
and
add
pop
adc
pop
mov
dec
les
mov
fadds
mov
inc
test
inc
fdivr
or
nop
add
data16
loopne
fwait
imul
sbb
bound
jmp
jnp
sahf
dec
sarl
jnp
and
xchg
cwtl
sub
insb
mov
imul
lret
xlat
or
cltd
mov
imul
ja
dec
sbb
rcll
pop
repz
imul
gs
sbb
add
scas
insb
or
mov
or
jo
adc
add
imull
jge
mov
jnp
pop
jnp
xchg
cmp
jmp
stc
sbb
imulb
repz
push
jns
mov
bound
or
pop
stos
pusha
mov
inc
test
movsb
cmp
add
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
adc
shrb
push
dec
sbb
mov
ds
ds
and
call
add
fidivrs
cmc
xlat
jecxz
and
jo
mov
test
lahf
in
jge
mov
inc
or
pop
aaa
inc
xchg
xor
cmpsl
leave
ret
mov
mov
hlt
mov
add
pushl
xor
out
push
cmp
cld
or
test
and
jle
adc
std
push
xchg
pop
adc
lret
jmp
pop
jnp
sbb
inc
mov
inc
ja
js
aam
hlt
adc
cmp
aaa
add
in
and
movsb
inc
aas
jg
inc
lock
in
in
pop
cmp
push
leave
ja
mov
push
adc
and
icebp
inc
mov
dec
jae
pop
or
mov
adc
cwtl
jbe
push
sub
adc
mov
jno
adc
vpsubsb
ja
cmpsb
pop
rcrl
mov
cmc
lcall
imul
into
rcrb
insb
movsb
loopne
rcr
in
or
jl
jle
adc
ficomps
or
fsub
pop
pop
or
aaa
int3
adc
test
sahf
inc
stc
mov
mov
mov
cld
insl
and
and
scas
jnp
popf
xchg
popa
mov
cld
add
jle
js
push
cmpsl
cmp
adc
stos
cmovs
jno
inc
iret
jbe
mov
add
jl
lahf
fwait
clc
shr
out
sub
push
lret
cmp
mov
sarb
cmpl
jae
adcb
cltd
inc
mov
rclb
mov
adc
int3
xor
pusha
mov
push
xchg
xchg
test
mov
movsb
and
inc
jbe
shlb
outsb
inc
xor
lods
sub
roll
sbb
arpl
add
icebp
repnz
adc
mov
out
push
push
push
sub
pop
ja
ret
pop
dec
sbb
mov
mov
push
pop
mov
cmp
add
pop
or
pop
sub
scas
out
scas
xchg
adc
pop
rcrl
pop
cmp
jmp
ja
cmpsl
lods
adc
cltd
pop
mov
hlt
into
mov
arpl
add
scas
push
add
and
cmp
insl
push
scas
jp
inc
xor
adc
icebp
into
mov
outsb
call
inc
ss
mov
sbb
mov
hlt
push
and
loop
cmp
dec
push
popf
ss
sbb
fldenv
xchg
dec
cmpsb
lds
test
ret
and
cmpsb
cmp
loope
in
push
loop
jge
lahf
mov
cmp
xor
jle
jnp
inc
xchg
dec
les
fptan
mov
mov
cmp
lcall
pop
ret
addr16
inc
into
add
jae
dec
inc
or
cltd
or
xchg
jmp
in
les
mov
in
into
inc
adc
jecxz
jnp
cmp
shrb
push
rorl
push
scas
xor
js
and
cmc
inc
loop
nop
adc
cmc
stos
or
lds
pushf
lcall
cmp
lods
nop
pop
or
jmp
jg
ffree
mov
test
mov
xor
in
mov
xor
aad
sub
cli
repz
lret
add
jecxz
gs
xor
cs
or
aad
call
lea
push
cltd
loopne
ljmp
pop
push
mov
mov
pushf
and
sub
and
jo
jle
insl
test
pop
ret
imul
sbb
sbb
pop
jp
fiaddl
imul
ja
subb
jnp
xor
filds
jb
jecxz
and
pusha
pop
pop
xor
aas
bound
iret
insb
mov
int3
outsb
add
dec
ret
loopne
adc
and
dec
jmp
lods
sbb
add
or
jbe
shrb
jns
gs
sbb
shll
jge
mov
dec
xchg
adc
bound
sbbl
pop
leave
loope
outsb
ss
jb
jae
repz
inc
adc
test
shll
ja
je
pop
or
adcl
dec
mov
add
enter
lock
pushf
nop
sahf
jb
pop
ja
jmp
gs
je
mov
adc
mov
lods
in
mov
adc
ljmp
mov
inc
stc
inc
add
and
pop
push
jmp
rclb
cmp
jg
jns
mov
loope
add
jmp
aas
sbb
mov
movsl
xlat
enter
scas
jecxz
jnp
cwtl
or
fimull
or
cmp
dec
les
add
or
push
xchg
dec
sti
xor
mov
cwtl
jg
pop
loope
jbe
loop
add
test
mov
popa
neg
cmc
or
hlt
sbb
