add
or
orb
andb
addb
add
add
add
rolb
add
addb
add
add
addb
add
add
add
loopne
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
mov
fwait
or
or
add
in
add
add
add
add
add
add
add
enter
rcrb
add
add
add
add
add
add
add
add
lock
add
fwait
or
push
add
add
add
add
add
add
add
add
add
xor
add
pop
add
addb
add
addb
addb
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
in
add
add
add
add
add
add
add
jo
add
pusha
sahf
or
xor
add
in
add
add
add
add
add
add
add
cwtl
add
add
add
in
add
add
add
add
add
add
add
rolb
add
mov
add
in
add
add
add
add
push
add
add
add
add
js
add
mov
add
add
add
xorb
lock
xorb
add
add
xorb
add
add
push
add
add
add
add
add
loopne
add
or
adcb
add
xor
adcb
add
add
add
add
add
add
add
add
add
add
push
mov
add
in
add
add
add
add
add
add
add
nop
add
add
mov
add
in
add
add
add
add
add
add
add
mov
movsl
or
pop
add
add
add
add
add
add
add
add
add
loopne
add
pusha
cmpsb
or
pop
add
add
add
add
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
add
add
xor
add
adc
add
in
add
add
add
add
add
add
add
pop
add
add
or
pop
add
add
add
add
add
add
add
add
add
addb
add
stos
or
pop
add
add
add
add
add
add
add
add
add
test
add
sbb
add
in
add
add
add
add
add
add
add
rolb
add
jo
or
pop
add
add
add
add
add
add
add
add
add
clc
add
add
scas
or
in
add
in
add
add
add
add
add
add
add
and
add
add
in
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
add
shlb
add
in
add
add
add
add
add
add
add
add
add
addb
add
or
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
rolb
add
or
call
add
add
add
add
add
add
add
clc
add
add
mov
add
in
add
add
add
add
add
add
add
and
or
sub
add
in
add
add
add
add
add
add
add
dec
add
or
call
add
add
add
add
add
add
add
jo
add
xor
or
push
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
or
add
in
add
add
add
add
add
add
add
loopne
add
test
or
test
add
in
add
add
add
add
or
xchg
add
add
add
js
add
mov
add
add
push
add
lock
add
sbb
add
inc
pop
add
push
js
add
js
add
add
add
add
add
add
add
add
add
add
push
lret
cwtl
add
add
add
add
add
add
add
add
add
nop
push
add
lret
jp
add
in
add
add
add
add
add
add
add
mov
int3
or
cli
add
add
add
add
add
add
add
add
add
loopne
add
cmp
or
ljmp
add
add
add
add
add
add
or
add
sub
or
scas
or
add
add
add
add
add
add
add
add
xor
add
fcom
or
mov
add
in
add
add
add
add
add
add
add
pop
pop
add
mov
or
int3
add
add
add
add
add
add
add
add
add
addb
add
or
mov
add
in
add
add
add
add
add
add
add
test
add
or
or
loop
add
in
add
add
add
add
add
add
add
rolb
add
lock
mov
add
in
add
add
add
add
or
add
add
dec
or
addb
add
jo
add
cwtl
or
adcb
add
rorb
adcb
add
call
sldt
adc
add
cmp
add
pusha
or
sbbb
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
add
add
pusha
or
add
add
add
in
add
add
add
add
add
add
add
mov
add
int3
fisttpl
sub
add
in
add
add
add
add
add
add
add
mov
add
clc
fisttpl
js
add
in
add
add
add
add
add
add
add
fmuls
add
jo
or
les
add
in
add
add
add
add
add
add
add
add
add
xor
or
sub
add
in
add
add
add
add
add
add
add
sub
add
pusha
fisttps
inc
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
js
add
call
add
add
add
add
add
add
add
add
add
mov
loope
add
add
add
add
add
add
add
add
add
add
enter
and
or
adc
add
in
add
add
add
add
add
add
add
lock
add
in
add
add
in
add
add
add
add
add
or
add
or
orb
add
push
or
addb
add
js
add
add
add
add
add
add
add
add
add
inc
or
add
add
add
in
add
add
add
add
add
add
add
push
in
add
add
in
add
add
add
add
add
add
add
nop
or
add
add
in
add
add
add
add
add
cwtl
or
or
add
lock
addb
add
add
add
add
add
add
add
add
add
loopne
add
test
or
xor
add
in
add
add
add
add
add
add
add
or
add
fsub
or
adc
add
in
add
add
add
add
add
add
add
xor
add
in
in
add
add
in
add
add
add
add
add
add
add
pop
or
addb
add
add
add
add
add
add
add
add
add
jo
add
mov
push
add
add
add
add
add
add
add
add
push
add
dec
add
dec
add
inc
add
or
inc
add
inc
add
push
add
add
dec
add
dec
add
je
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
outsl
add
jo
add
je
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
outsl
add
jo
add
je
add
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
jne
je
outsl
add
jo
add
je
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
sbb
pop
inc
es
repnz
xchg
data16
call
lea
clc
mov
sti
push
xchg
in
movsb
int
jecxz
pop
mov
cmp
mov
cmp
mov
cld
test
mov
lea
jb
jnp
dec
pop
adcl
sbb
pop
outsl
sub
mov
push
dec
sbb
sbb
dec
push
pop
jp
jbe
pop
out
fwait
xor
and
mov
jbe
ja
stc
test
stc
jae
enter
sbb
rorb
fsubrp
mov
adc
mov
add
movsl
lds
and
fisubs
sub
divb
inc
jg
jnp
mov
xlat
movsl
mov
repnz
pop
sbb
jg
xchg
xchg
mov
loopne,pn
cs
js
mov
mov
movsb
mov
add
jae
mov
sbb
jecxz
cmp
add
sbb
inc
xor
xchg
push
sahf
mov
ss
lods
pop
jg
adc
mov
xchg
xor
pop
cmp
jo
lret
cmpsl
cmp
inc
call
std
mov
inc
push
inc
pop
inc
popf
mov
lods
ss
cli
icebp
sbb
jle
andl
das
xchg
dec
push
in
ds
pop
dec
mov
ficompl
mov
rcr
notb
cmp
es
mov
mov
push
fldcw
push
scas
mov
push
xcrypt-cbc
cmpsl
xchg
xchg
sub
push
call
mov
in
and
das
rcl
push
push
lret
jno
lock
mov
pop
mov
addr16
in
mov
push
out
shrl
sub
ja
xor
sub
aad
push
cli
cltd
dec
divb
lds
jmp
hlt
dec
test
push
sbb
iret
or
dec
fcomp
add
cmp
dec
pop
cmp
lret
xor
dec
rolb
sub
inc
imul
jl
pop
stos
cmpb
imul
lods
sub
cmc
xchg
loop
xchg
xor
scas
in
into
push
or
jle
xor
pop
outsl
cmc
lock
ret
in
mov
divb
adc
mov
cmpsb
fs
rorl
outsl
sbb
dec
sub
mov
inc
add
imul
leave
pop
and
das
aas
jg
arpl
pushf
aam
fstps
pop
sbbb
int
push
push
mov
ss
jbe
pop
aas
mov
out
cmp
fucomp
iret
sub
jmp
xchg
mov
cld
lahf
push
test
lret
pushf
pop
rolb
enter
push
cmp
mov
adc
fidivrs
stc
mov
pop
iret
pop
aam
jae
mov
fdivrp
andb
pop
or
stos
orl
out
mov
shll
addb
aad
fcompl
dec
cmp
jno
jmp
out
cwtl
xor
lea
cmp
xchg
mov
popa
mov
push
ret
popf
jo
xchg
ret
test
jnp
repz
js
cmc
fidivl
out
cwtl
cmp
pusha
ret
pop
mov
lret
and
movsl
dec
push
mov
push
dec
mov
sar
in
sbb
fwait
popf
xchg
movsl
div
sbb
fists
clc
mov
pop
or
jmp
pop
add
aaa
mov
mov
adc
cld
dec
cmpl
add
adc
xlat
movsl
roll
xchg
or
mov
roll
xchg
add
je
push
and
vunpckhpd
rdmsr
and
pop
out
stos
cs
cmpsl
adc
bound
lock
jle
push
shrb
or
test
push
and
movsl
jnp
aaa
push
dec
mov
rorb
int3
dec
cmp
shll
ret
dec
add
notl
mov
jnp
jne
jns
insb
flds
cmp
addr16
int
mov
cmp
add
fdivs
aaa
or
xchg
cmp
pop
es
add
push
dec
xor
and
les
mov
mov
adc
insl
sub
insb
ss
xor
mov
xor
adc
dec
pop
adc
jge
mov
rcll
pop
decb
sbb
call
call
push
lret
out
mov
push
std
ret
or
mov
fs
scas
xchg
dec
mov
es
ret
cmc
or
mov
pusha
cs
mov
xchg
dec
fstl
call
jecxz
ss
or
sbb
test
add
loopne
sub
xor
insl
in
into
pop
push
dec
out
shlb
popf
outsl
mov
lcall
add
pop
sub
dec
add
adcb
jge
dec
js
ret
inc
movsl
pop
and
in
lds
and
sub
jg
jo
jl
mov
inc
lcall
in
mov
rol
ljmp
xchg
fiaddl
jp
jp
mov
pop
add
outsl
or
inc
outsb
inc
test
mov
dec
push
shlb
movb
stc
adc
lret
cmp
lds
popa
ret
addb
mov
mov
daa
jl
pop
ljmp
cmp
xchg
ret
mov
in
movsl
sbb
pop
mov
daa
xlat
test
sbb
add
inc
fwait
pusha
mov
add
mov
push
or
cmp
pop
push
sbb
xchg
mov
sub
in
inc
jnp
pop
mov
in
das
cmp
dec
add
call
scas
sahf
push
xor
ret
insb
xor
test
cmpsl
mov
and
cld
insl
mov
mov
out
sbb
and
repz
fwait
adc
inc
jl
bound
cmpsl
cmpsb
mov
xor
jge
add
mov
out
sub
hlt
mov
cmp
rclb
dec
dec
mov
push
pop
scas
inc
loopne,pn
push
xor
scas
pop
mov
lea
mov
in
and
dec
fchs
cmp
add
aad
pop
and
das
fsubr
dec
fcomps
enter
or
sbb
ret
or
lret
repz
sbb
cwtl
scas
lret
aaa
daa
and
les
rcrb
aad
mov
and
imul
dec
and
ffree
jmp
mov
clc
sub
imul
and
out
sub
add
cmp
ss
fdivrs
andl
xchg
xchg
test
out
stos
jns
dec
out
push
inc
loope
js
dec
ficoms
inc
pushf
pop
nop
cmp
cli
dec
jne
mov
in
mov
adc
pusha
mov
sarb
add
aad
and
xor
aam
sahf
push
cmp
popf
inc
pusha
sahf
in
mov
lods
andb
add
pop
pop
cmp
test
clc
mov
xchg
fistl
sub
cwtl
sub
hlt
and
test
mov
out
pop
loop
test
or
push
push
and
mov
xor
loop
ja
or
lds
lcall
fistpll
sbb
mov
mov
xor
add
outsb
push
or
and
inc
sbb
ds
out
adc
bound
loop
jb
loopne
sub
ret
push
inc
shlb
sub
and
in
inc
lods
or
jecxz
fsub
xlat
ret
cmpb
mov
xchg
iret
sahf
cli
xorb
mov
orb
cmc
adc
inc
aam
imul
xchg
in
ss
mov
jge
adc
sub
js
sbb
or
insl
in
sbb
in
jmp
mov
push
sbb
rol
fbstp
pop
test
test
repz
mov
add
xchg
push
movsb
insl
cld
nop
jg
sbb
negb
inc
addr16
sub
xchg
or
mov
cmc
push
gs
sbb
es
cmp
inc
mov
mov
lods
cwtl
pop
mov
pop
sbb
dec
insl
shlb
call
inc
addr16
xchg
add
add
cmp
repnz
xchg
es
mov
fdivrp
test
dec
dec
push
push
cmp
or
ss
daa
sti
ret
pop
push
sbb
sub
push
dec
lret
push
fstpl
loopne
xchg
mov
mov
xchg
mov
add
addr16
cmpsb
repz
and
sub
push
xchg
fisubl
push
in
or
mov
push
lock
js
mov
add
das
sbb
arpl
into
clc
test
stc
leave
movsb
mov
addr16
lea
mov
adc
mov
outsl
into
in
inc
jbe
jecxz
inc
notb
inc
test
nop
js
out
test
lret
lock
data16
push
scas
sti
xchg
mov
stos
into
inc
or
push
insb
lods
xor
ret
xor
xchg
xchg
aam
inc
adc
jbe
test
or
mov
jmp
sbbb
jno
or
arpl
cld
xchg
inc
jecxz
mov
mov
push
push
into
or
and
das
rep
dec
das
ljmp
int3
mov
or
cmc
mov
int3
fcom
stos
inc
stos
push
jne
lret
out
mov
adc
mov
jae
push
jmp
xchg
and
imulb
aaa
xchg
jmp
mov
pop
leave
cli
test
or
out
icebp
loope
pop
inc
push
sar
icebp
mov
sahf
rcrb
lods
pop
scas
pop
and
les
dec
scas
xor
push
inc
decb
xor
nop
jmp
in
xchg
adcb
jbe
add
jnp
repz
push
inc
inc
or
push
ret
or
adc
in
pop
lret
lock
xor
out
xor
pop
repz
xlat
xlat
and
cld
dec
lods
dec
pop
push
fs
dec
aas
lods
ja
dec
nop
push
jb
out
je
and
mov
mov
ds
cmp
adc
xchg
sbb
sbb
stos
dec
loope
inc
scas
push
mov
sub
push
ljmp
lock
cld
adc
add
push
or
out
ret
mov
int3
test
or
cmpsl
mov
lcall
ljmp
mov
loopne
cmpsl
sahf
jns
add
inc
ja
push
xor
add
mov
or
xchg
pop
shl
adc
jo
mov
imul
inc
lret
insb
movsl
lret
cmp
imul
sub
pop
test
pop
sub
push
rcrb
repnz
pop
shl
add
psrlq
loopne
cwtl
xchg
inc
inc
sbb
ljmp
cmp
fmull
sub
or
outsb
inc
sbb
mov
inc
sahf
dec
bound
sti
jle
notl
shl
imul
insl
xchg
or
popf
mov
js
ds
jno
and
outsl
testb
sbbl
nop
daa
sbb
or
adc
sbb
test
xchg
setg
movsb
jl
in
pop
das
xor
adc
jg
adc
jns
mov
xchg
orb
stos
int3
sti
bound
pushf
ret
loopne
dec
cmp
mov
cmpsl
and
inc
mov
cmp
sbb
test
pop
test
mov
mov
lret
sub
das
cs
vpsadbw
es
and
les
fldl
or
inc
lret
xchg
loopne
jmp
jo
mov
jge
dec
cmc
xor
ret
cltd
pop
adc
cmp
inc
push
rolb
std
or
cs
sub
shlb
mov
push
inc
rorb
pop
bts
clc
out
fs
jmp
pop
loopne
push
xchg
pop
and
add
cmp
leave
mov
pop
lcall
outsb
test
stc
in
stc
shrb
cs
xlat
outsl
xchg
hlt
xor
stos
jbe
cmc
mov
test
adc
lea
jbe
mov
sub
xchg
stos
pop
mov
jg
in
cmp
cmpsl
jle
imul
ss
test
or
push
clc
frstor
scas
push
xor
imul
add
std
shlb
test
stos
dec
mov
add
rcrb
aad
bound
jecxz
xchg
test
adc
pop
inc
nop
stos
setp
repz
add
cmp
mov
mov
repz
addr16
andb
dec
aam
mov
push
sub
jbe
nop
xchg
les
jne
cs
ret
mov
out
pop
ljmp
test
push
push
mov
gs
orl
outsl
xlat
das
inc
in
sahf
mov
sahf
dec
repnz
push
mov
cmp
jle
push
pop
jae
call
int3
sarb
cld
jns
push
incl
sbb
popa
ja
push
adc
ret
nop
cld
mov
ds
scas
rcrl
xor
add
add
dec
push
icebp
or
jmp
dec
adc
jo
push
fwait
cmpsl
mov
mulb
inc
fildll
jbe
mov
pushf
fs
ret
mov
mov
mov
in
cmp
push
leave
cltd
push
movsl
enter
lds
iret
nop
mov
pop
mov
xor
jl
out
std
push
into
adc
cld
std
adc
ljmp
imul
frstor
mov
mov
ds
jle
cmp
iret
iret
add
push
lea
xchg
push
bound
mov
pop
icebp
inc
cli
dec
jns
jecxz
pop
int3
xchg
jmp
pop
in
iret
sbb
push
cmp
sub
or
dec
and
mov
mov
mov
mov
jbe
add
fwait
mov
add
lcall
xlat
sub
push
or
or
mov
jl
sbb
mov
inc
leave
cwtl
dec
mov
je
les
js
xor
loop
ret
addr16
fs
adc
inc
lahf
mov
sbb
xchg
mov
loop
aad
test
popa
lods
and
call
adc
push
jmp
popa
jp
popf
and
pop
xchg
movsb
std
or
sbb
cmpl
pop
mov
lods
jae
xchg
jecxz
inc
pop
xchg
imul
in
dec
loop
dec
sub
clc
lods
test
scas
xchg
sbb
mov
popf
lock
test
hlt
inc
aam
insb
iret
xor
jmp
mov
jno
cmp
aam
cltd
aas
icebp
jne
push
out
xchg
outsl
mov
jo
sub
lret
lcall
xor
loop
mov
in
push
outsb
jle
inc
mov
xor
fdivp
jno
push
dec
andl
data16
in
fldl2t
adc
mov
sbb
xchg
adc
pop
and
movsb
lock
cld
fisubs
push
out
mov
rorl
pop
call
xchg
in
mov
cmpl
icebp
mov
xor
loopne
inc
mov
jno
inc
sbb
ljmp
pop
loop
adc
jo
push
out
xlat
sarb
mov
popa
out
jge
dec
jo
or
aam
mov
jle
adc
jge
push
aam
xchg
pop
inc
nop
push
xchg
ja
rcrl
dec
je
push
or
sbb
ds
addr16
imul
xor
insb
xchg
xchg
xchg
mov
dec
incb
mov
xchg
setb
subl
add
add
ljmp
int
andl
push
les
lcall
cmp
xlat
test
mov
cmp
daa
ss
sub
data16
stos
and
imul
sub
fisubs
add
add
sub
ficomps
pop
ret
xlat
mov
les
jl
js
xchg
mov
jnp
int3
adc
faddl
test
movsb
ret
jb
gs
aas
mov
mov
call
in
imul
sbb
xor
pop
imul
fcoml
sbb
xchg
jmp
xchg
adc
or
add
mov
fidivs
incl
cmpsb
xchg
mov
test
jp
cmp
shrl
out
add
aas
fsubl
dec
sub
add
stos
jne
inc
rorb
dec
addl
gs
mov
xchg
pop
aam
xchg
jo
pop
outsb
clc
fs
aam
fcomps
clc
mov
xchg
pop
mov
jle
lods
pop
dec
mov
push
jo
popf
mov
repnz
mov
jb
adc
xor
inc
jl
sahf
xchg
pop
push
mov
aam
xchg
push
pop
mov
xchg
dec
in
stos
jns
icebp
lods
push
add
fdivr
pushf
push
adc
subl
test
and
sbb
iret
popl
push
push
daa
push
jns
push
repz
mov
negl
roll
pusha
jp
ds
and
push
adc
sar
es
clc
sub
mov
ja
xchg
pop
push
stos
cmp
in
das
sbb
xchg
repnz
adc
sbb
in
ret
lahf
out
lods
stos
inc
mov
pop
and
and
xchg
sti
push
gs
loop
cld
add
jno
push
jae
mov
mov
or
sti
fcmovbe
cmp
cmp
pop
push
mov
pop
out
inc
mov
adc
outsb
es
rorb
pop
mov
adc
pop
roll
cltd
aam
mov
mov
mov
and
sbb
jns
cld
repnz
dec
fildl
jmp
data16
pop
sub
cmp
aas
cld
lret
mov
mov
fcmove
pop
push
ljmp
mov
cwtl
xchg
ret
sub
andb
les
cmp
dec
adc
push
fwait
shlb
pop
lock
in
incb
dec
inc
icebp
in
dec
das
imul
cmp
cld
mov
jne
mov
aad
insl
rcpps
out
sahf
hlt
add
test
jno
mov
int
fcoml
nop
insl
clc
outsl
shrb
sbb
test
sbb
mov
pusha
jle
scas
andb
mov
sahf
hlt
movsb
int3
mov
jp
scas
mov
ljmp
pop
iret
pushf
fbstp
call
sub
adc
push
xlat
fdivs
imul
jmp
jl
push
ljmp
jo
andl
lret
fwait
jmp
ja
lods
movsb
lcall
cmpl
test
inc
fadd
push
lds
and
dec
xchg
aam
fcompl
enter
mov
out
cwtl
adc
movsb
sub
dec
sbb
imul
inc
ret
xor
add
xor
pop
and
xlat
pop
pop
mov
pop
orb
hlt
fisubl
popf
pusha
inc
shlb
and
cmc
jns
mov
xchg
or
push
add
popf
sar
ja
into
dec
adc
cmpsb
sar
push
mov
hlt
je
aam
xlat
pop
out
inc
je
mov
jo
pop
push
sub
mov
cwtl
mov
push
lret
ljmp
roll
pop
je
jle
cmpsl
int3
clc
lea
lds
mov
repnz
int3
pop
inc
test
fstl
dec
xlat
outsb
dec
xor
add
inc
arpl
sar
mov
daa
push
sti
push
add
or
xchg
inc
pop
stos
add
xchg
js
data16
xor
fsts
add
repz
fiadds
adc
add
cli
repnz
fucomi
cmpsl
adc
les
push
mov
decb
aad
xchg
daa
sbb
mov
dec
inc
nop
sub
mov
xchg
xor
daa
dec
jmp
out
pusha
pop
ss
aaa
ja
test
push
in
xor
sub
mov
dec
mov
cmc
jo
mov
mov
pop
in
aam
aad
jo
inc
out
movsl
enter
or
mov
sub
jg
mov
add
lcall
aas
lods
in
ficoms
mov
pop
jg
jg
inc
xor
dec
ret
test
mov
jne
add
cltd
jo
pop
pop
fwait
gs
fildl
mov
std
lcall
pop
xchg
pushf
arpl
scas
jmp
sbb
std
jge
sub
jnp
xor
or
je
pop
sti
sti
inc
push
mov
mov
cmp
sbb
roll
mov
push
mov
scas
lahf
xor
dec
xchg
stos
cmp
jno
loope
adc
fs
mov
scas
pop
clc
sbbb
arpl
test
push
popa
fmulp
mov
add
stos
mov
lcall
ja
aam
push
sti
mov
hlt
int3
add
cmp
ds
fists
loop
xlat
aad
lret
loop
xchg
or
push
cmp
add
push
addr16
inc
sub
lcall
jmp
pop
pop
jmp
inc
mov
cmp
dec
xchg
jge
faddp
iret
push
pop
jmp
sbbl
in
lods
sub
call
inc
inc
ret
or
int
dec
andl
push
std
jbe
vpunpckhqdq
push
das
adc
adc
mov
enter
in
neg
in
lea
sbb
stc
jne
lock
mov
movsb
stos
sbb
fdivl
jno
pusha
stos
push
jge
mov
push
insl
mov
xor
push
xchg
sbb
mov
push
leave
mov
xor
clc
faddl
cmp
es
into
xor
aad
pop
mov
mov
or
addr16
shrb
inc
aam
sub
sbb
lds
shlb
enter
xchg
sub
mov
icebp
inc
mov
outsb
dec
test
xchg
mov
pushf
fstpl
and
push
les
xor
sub
test
inc
push
ljmp
sbbl
jecxz
xor
cwtl
repz
pop
fstps
out
mov
dec
cmp
inc
jbe
cmp
xorb
xchg
repz
xor
mov
xchg
push
fdivrp
mov
inc
mov
std
sahf
mov
xchg
add
sti
sbb
scas
nop
shll
cmc
cmp
and
sahf
mull
mov
inc
cmp
xor
sbb
cld
push
rcrl
mov
inc
inc
sbb
loop
cmp
loop
lea
stos
inc
loop
jmp
aas
sbb
lods
popf
or
mov
or
jl
mov
icebp
sub
outsb
jmp
nop
inc
out
push
xchg
aaa
out
cmp
sbb
inc
mov
je,pt
xchg
dec
xchg
cld
inc
in
mov
test
in
cmpsb
fnsave
and
imul
fnstenv
popf
int
add
popf
sbb
je
imul
jne
cmpsb
push
outsb
push
cmp
sbb
mov
loopne
inc
shlb
cmpb
xchg
outsb
cmp
std
fldcw
mov
sub
decl
stos
jae
decb
rorb
pop
adc
sub
mov
jg
xor
or
pop
lock
jae
pop
sbb
movsl
dec
fisubl
out
mov
push
sbb
test
fs
lea
adc
pop
pop
in
mov
jbe
add
stc
ja
dec
in
jb
sti
call
adc
and
jns
fwait
icebp
push
aas
mov
insl
push
mov
add
out
push
push
adc
xchg
mov
xlat
pop
enter
mov
push
icebp
mov
inc
andl
sub
sahf
pop
add
jns
cwtl
decl
jbe
and
scas
mov
pop
stc
repnz
aas
jp
push
sub
mov
aas
jo
out
xchg
push
mov
loopne
hlt
test
aad
sub
and
dec
lahf
clc
call
es
push
sub
pusha
xchg
aas
fsubl
mov
sbb
shr
push
xlat
out
repz
pop
mov
mov
nop
sbb
pop
ret
icebp
sbb
xchg
aam
sub
sti
cmp
pop
movsl
sub
ds
cmp
mov
mov
fistl
xchg
dec
out
mov
aad
icebp
jno
push
or
mov
mov
outsl
mov
arpl
int
loope
insb
pop
mov
xchg
inc
mov
mov
fwait
mov
rcrl
mov
in
jmp
adc
dec
popa
pusha
divb
mov
and
dec
adc
scas
pushf
adc
fstpt
jno
mov
subb
mov
mov
les
xchg
mov
sahf
push
sarl
std
cmp
sub
xchg
fnstenv
js
mov
enter
sbb
push
pop
aas
arpl
xchg
mov
dec
push
lcall
lcall
test
aaa
in
pop
scas
add
out
shlb
std
iret
arpl
inc
fwait
fs
push
dec
cmp
xchg
mov
jb
jbe
imul
sbb
out
sbb
mov
jmp
fstpl
jmp
jne
aaa
mov
and
sbb
ror
cli
test
mov
push
pop
movsl
cmp
lret
sbb
push
loopne
test
jnp
mov
push
stc
push
lahf
adcb
pusha
loop
dec
mov
lods
xchg
test
mov
dec
out
pop
cmp
fxam
fldcw
sub
fisttps
decl
xchg
mov
sub
mov
fisttpll
inc
jmp
and
jo
aam
jecxz
icebp
xchg
pushf
xchg
outsb
xor
inc
mov
arpl
or
cmp
pop
out
sti
sbb
sbb
pop
daa
hlt
mov
js
mov
mov
fnstenv
sbb
sbb
mul
test
lods
das
aas
insb
jge
and
pop
jne
xchg
pop
in
rcrl
push
adc
jae
jg
fldl
ficoms
lret
cmp
ss
or
xchg
cmpsw
jbe
cld
push
inc
lahf
jno
arpl
rcl
test
fsubrl
insl
or
xchg
ss
xchg
jbe
shll
cli
cli
pop
fmuls
jle
add
pop
out
or
or
fstps
jmp
shrb
andb
lcall
push
mov
movsb
idivb
and
mov
pop
lcall
lret
push
aad
push
aaa
jmp
movsl
insl
cltd
repnz
leave
pushf
add
xchg
xchg
cmp
mov
mov
in
sbb
xor
adc
xor
mov
mull
jo
sub
out
jg
shlb
lock
sbbb
mov
enter
lods
mov
cmp
mov
jp
add
add
aad
mov
lret
push
mov
pop
pop
adc
mov
cmp
arpl
mov
into
inc
push
pop
fsubs
sub
repnz
cld
lods
sub
test
add
leave
and
xlat
sbbl
or
nop
xor
lea
dec
test
push
jo
loope
pop
xchg
inc
jmp
lret
mov
cltd
mov
test
arpl
push
mov
ret
scas
pushf
pop
mov
sub
dec
inc
mov
mov
insl
mov
or
sub
jecxz
imul
push
cs
adc
xchg
nop
pop
xor
sub
add
adc
popa
jbe
push
and
dec
imul
lret
out
dec
test
mov
xchg
xor
add
jecxz
sbb
inc
push
mov
mov
enter
fwait
dec
mov
outsl
jg
adc
jge
shl
into
testb
or
jg
dec
inc
xor
mov
in
cmpb
mov
lods
inc
dec
mov
dec
add
mov
scas
imul
aas
daa
lret
cmp
mov
xchg
aad
je
repnz
hlt
xchg
fisubl
jg
ja
movsl
push
jns
jmp
jg
insl
xor
stos
push
sbb
aam
add
adc
and
mov
sahf
lds
das
out
xor
sbb
cmpsb
push
or
flds
lret
push
pushf
cli
sbb
pushf
in
leave
loop
and
push
pop
xor
xchg
mov
and
cmp
repz
aad
repz
push
scas
sbb
mov
ljmp
jmp
pop
ja
push
stc
jae
xchg
out
js
out
inc
pop
jno
movsl
xor
test
push
cmp
pushf
ljmp
pop
rorl
add
out
push
sbb
cwtl
mov
or
jnp
pop
pusha
push
repz
jns
sarl
sub
jne
cs
shrl
add
pop
xor
adc
dec
jno
jb
mov
mov
arpl
lds
in
mov
pop
mov
addl
adc
arpl
xor
jle
cmp
enter
scas
jae
mov
shlb
mov
insl
dec
pop
xor
xchg
in
add
mov
jmp
sahf
inc
fcomps
dec
insl
jae
popa
jmp
mov
or
mov
adc
and
pop
push
add
inc
mov
gs
mov
sub
mov
mov
pop
stos
pop
jecxz
mov
jecxz
cmp
out
jnp
call
inc
xlat
iret
cwtl
loopne
bound
aas
dec
enter
mov
or
testb
adc
add
jge,pt
push
mov
mov
inc
inc
imul
jno
jg
xor
fnsave
fcomps
inc
fdivrl
movsl
fcomp
decl
imul
lahf
mov
cmp
cwtl
stos
movsl
and
fwait
mov
loope
out
push
notl
int
roll
idivl
pop
ljmp
jae
adc
adc
movsb
push
sub
imul
sub
mov
pop
inc
add
outsl
mov
push
in
add
mov
sti
mov
pop
lods
sub
mov
in
sbb
cmp
jge
sti
out
out
sub
jle
in
sub
add
inc
sub
mov
popa
aad
aam
xchg
movsb
inc
insb
mov
mov
aam
xor
push
fwait
std
mov
ljmp
xchg
sbb
movsl
jmp
inc
mov
in
in
je
fildl
cmp
and
jmp
movl
cmp
mov
cmpsl
loope
incl
jne
pop
dec
xchg
or
in
divl
xchg
nop
cmp
push
lahf
adc
lea
test
jns
adc
loope
pop
xchg
push
pop
mov
enter
push
mov
test
dec
mov
sahf
loop
and
mov
insl
shlb
sbb
test
push
ljmp
jno
into
les
xor
mov
dec
adc
jns
idivl
out
or
cmpl
inc
mov
xchg
test
pushf
and
adc
push
roll
scas
xlat
addr16
push
int
imul
data16
xchg
inc
xor
in
repz
std
mov
or
sahf
shr
leave
push
jbe
fiaddl
add
fdivr
mov
mov
and
add
xor
add
cmc
jb
xchg
jle
hlt
inc
pop
scas
cmpsb
inc
adc
cmp
cli
jae
mov
or
movsb
roll
sar
pop
mul
mov
es
popf
sub
mov
cld
mov
aaa
idivb
mov
out
or
ss
xchg
xchg
add
xchg
pop
or
and
and
clc
div
das
add
mov
ret
xor
xor
lret
inc
scas
adc
or
mov
fwait
inc
pop
fcmovne
in
push
push
movsl
push
fbld
stos
std
fsubl
stos
enter
push
or
and
add
jmp
and
das
xor
cmpsl
xor
jge
push
cmp
cmc
mov
and
sbb
mov
in
cmpl
les
push
cmp
xchg
scas
cwtl
add
sub
push
inc
loopne
in
pusha
inc
cs
lcall
and
push
sub
shll
push
jge
sub
test
cli
push
int3
dec
mov
adc
stos
imul
inc
push
mov
mulb
adc
pop
jne
adc
mov
lret
fadds
cmp
addl
iret
sahf
sbb
mov
pusha
mov
sbb
stc
cli
pop
fmulp
xchg
rorb
inc
fmull
xor
or
int
rolb
or
imul
jl
filds
add
loopne
sub
mov
out
test
stos
xchg
bound
rcrl
sarb
filds
ret
add
decl
xor
xchg
leave
int
subb
add
push
xchg
and
jne
mov
clc
addb
inc
ret
mov
in
mov
pop
xor
add
mov
std
adc
mov
and
cltd
push
fidivs
xor
cmp
sub
lret
jp
mov
xchg
std
test
push
adc
pushf
dec
jg
test
adcb
in
mov
test
loop
mov
int3
leave
movsl
into
popf
lds
push
pop
rorb
ret
data16
stos
xor
stc
xor
sub
cmp
lock
in
xor
pop
mov
sub
lea
inc
or
pop
dec
dec
ja
and
jmp
mov
daa
xor
pop
addl
pop
mov
pop
sbb
mov
int
outsl
push
sub
mov
aas
cli
pusha
imul
fimuls
mov
orb
pop
leave
sbb
in
ret
pop
popa
cmpsb
pop
sahf
popf
fistps
je
cmpb
mov
pop
scas
popa
jle
lcall
ds
popa
shr
push
mov
icebp
cmc
in
int3
xor
dec
aaa
popa
mov
faddp
incb
cmp
jbe
cltd
ds
inc
jl
sbb
andl
xchg
cmpsl
jmp
enter
xor
mov
cmp
inc
jecxz
and
pushf
pushf
test
cmpb
cmp
mov
fwait
gs
add
movsb
push
inc
adc
sbb
std
pusha
adc
daa
nop
lahf
sub
aam
sub
mov
mov
mov
push
cmp
pop
xchg
push
popf
jmp
fdivrs
mov
mov
loope
ja
jle
push
cmpsl
sbb
cmp
inc
in
mov
add
sahf
out
or
iret
call
mov
scas
repnz
push
xchg
jbe
push
insb
dec
lods
imul
sbb
fnstcw
pop
sahf
lea
mov
jno
dec
pop
data16
mov
jmp
jae
test
daa
xor
mov
ja
mov
push
and
adc
xchg
fildl
and
fcmovb
cld
or
aaa
enter
sar
leave
imul
ficomps
in
inc
jno
mov
inc
adc
sbb
out
ljmp
fcompl
mov
cwtl
aas
adc
xor
mov
mov
arpl
sbb
jbe
dec
imul
imul
sub
mov
out
scas
dec
rorl
imul
add
sbb
mov
xor
mov
jge
imul
sub
call
pop
pusha
repnz
pusha
cltd
dec
lods
cmp
mov
out
pusha
out
xchg
aas
jecxz
mov
lds
adc
lahf
ljmp
loop
pop
popa
gs
lods
cmc
add
and
into
dec
mov
pusha
je
xchg
loop
pop
adc
or
push
fcompl
mov
inc
movsb
push
in
jle
and
lahf
mov
gs
jle
jp
loopne
add
cmp
repnz
or
int3
sub
mov
and
sub
lahf
adc
sahf
sti
cltd
movsb
mov
and
push
mov
mov
xchg
mov
aam
cmc
cmp
fwait
adc
dec
jg
movsl
gs
sahf
cmc
dec
std
and
push
call
add
push
out
or
push
xchg
dec
out
insl
je
mov
data16
add
jle
adc
sub
repz
add
xchg
cmp
jae
cmp
adc
inc
mov
lcall
and
xor
hlt
test
ret
jno
loop
xorl
jle
mov
sarb
les
imul
rcll
aad
dec
and
push
test
mov
aaa
dec
mov
insb
cmp
out
mov
das
jle
insb
pop
jmp
data16
mov
out
mov
pop
push
cmpsl
test
daa
push
icebp
nop
adc
inc
lea
loopne
cmp
xchg
push
out
pop
pop
out
cmp
pop
xchg
jns
lock
clc
mov
int
sbb
fnstenv
test
add
mov
or
sub
insb
test
shll
push
cmpsl
fcomps
enter
mov
add
mov
sbb
adc
adc
enter
push
push
pop
cmpb
into
nop
ljmp
es
ljmp
imul
fucomp
lret
jno
inc
pushf
mov
lcall
or
cs
mov
mov
mov
cmc
sbb
dec
iret
into
popa
test
hlt
out
rorl
xchg
cmp
or
push
dec
or
pop
push
mov
dec
aas
xchg
mov
dec
cmp
pop
cmp
aas
cmc
push
mov
gs
pushf
xchg
loope
test
jno
adc
pop
lds
pop
std
xor
inc
loope
js
shl
xor
xor
jl
sub
cs
popa
insl
aaa
sub
sbb
lahf
or
mov
sti
add
sub
ret
mov
mov
inc
mov
leave
test
pop
stos
repnz
jp
pop
decb
sub
xlat
rol
dec
fwait
pushf
add
push
inc
subb
push
pop
or
sarb
sub
mov
cmpsl
sub
idivb
inc
mov
movsl
mov
mov
inc
dec
in
push
das
push
cmc
add
aaa
push
stos
mov
jnp
dec
jae
fbstp
mov
dec
and
xchg
daa
dec
leave
mov
sbb
into
push
xchg
adc
aam
call
dec
cld
ret
cli
xchg
dec
pop
cmp
mov
rcr
insb
jbe
sub
mov
jbe
sbb
xor
add
test
pushf
test
mov
mov
xchg
icebp
fstps
inc
inc
ds
ficoms
add
shll
sbb
pop
ret
add
shl
push
js
jmp
lock
jle
sbb
mov
test
cltd
cmpsb
daa
xchg
mov
shlb
jecxz
push
cmpsl
ljmp
ret
stc
test
pop
and
test
xchg
inc
cmpsb
jns
mov
adc
out
sub
ret
mov
fnstenv
cmc
add
sbb
sbb
lods
lret
dec
push
inc
shl
sahf
inc
push
adc
pop
xor
inc
add
jmp
bound
push
inc
jmp
push
xor
mov
push
mov
and
xchg
imul
pop
adc
insl
lcall
notl
cmp
mov
push
cmc
add
jne
fstpl
add
fwait
loop
sti
adc
or
mov
gs
imul
dec
cli
push
daa
fsubr
lods
mov
out
sarb
pop
lods
xchg
dec
fwait
adc
xor
rclb
in
out
leave
mov
mov
cmp
fdivp
push
out
mov
fs
fmuls
fs
stos
jmp
hlt
jl
fnclex
mov
movsb
jnp
xchg
fistpl
push
sub
iret
loop
rorb
or
jnp
icebp
cmpsb
sti
cmpsb
adc
outsb
add
mov
fistpll
push
inc
add
mov
int
xchg
or
mov
adc
mov
test
pop
push
lahf
xchg
fstpt
pop
xor
das
mov
dec
xchg
into
xor
fcmove
or
push
out
dec
mov
mov
arpl
insb
jbe
dec
test
divl
lret
lds
pop
xor
mov
pop
insb
movsl
lods
call
mov
test
push
jmp
adc
icebp
mov
loop
pop
in
push
sbb
push
mov
outsl
mov
rolb
push
popf
call
das
mov
inc
pop
and
sub
xchg
sarb
inc
loope
gs
xorb
je
pop
xchg
in
adc
add
inc
mov
test
outsb
jl
repz
daa
xor
mov
xor
and
test
je
cmpsb
maxps
rcr
xor
mov
das
xchg
dec
mov
loop
dec
shrl
cmp
mov
xchg
in
leave
xchg
adc
mov
mov
adc
mov
fnsave
mull
add
repz
add
iret
test
xchg
data16
cld
rol
imul
test
fidivrl
pop
adc
pusha
jg
hlt
movsl
shl
inc
lahf
and
mov
rolb
loope
xor
mov
push
jmp
cmp
cmp
jmp
dec
xchg
test
outsb
or
adc
lods
or
cmp
cmc
loop
push
loop
push
imul
mov
test
test
std
or
cmp
pop
outsl
in
adc
mov
cmp
push
gs
popf
gs
nop
xlat
pop
mov
push
inc
mov
int
pop
xchg
in
das
lret
and
fstl
add
clc
sti
iret
out
xchg
sub
jle
out
incl
loop
lret
data16
push
cmpsl
mov
inc
sub
inc
inc
out
sbb
leave
fisubrl
int
fs
ja
pusha
adc
lds
inc
mov
pop
test
mov
mov
test
in
sbb
out
jmp
xchg
push
out
inc
mov
js
aaa
mov
adc
jecxz
jmp
sbb
adc
insb
lret
jb
aad
sub
mov
in
hlt
out
pop
jmp
call
lds
jecxz
inc
jge
andl
std
cmp
hlt
push
xchg
push
nop
adc
dec
addr16
insl
dec
mov
in
cli
mov
jmp
sbb
loope
es
sbb
jne
outsb
stos
fs
pop
aas
aas
in
pop
pop
mov
add
sarl
loope
mov
jmp
push
xor
adc
mov
mov
push
cmp
xor
or
mov
mov
cmp
dec
gs
out
and
or
xchg
ret
fmull
imul
pushw
cwtl
jo
mov
mulb
repnz
arpl
hlt
pushf
mov
push
sbb
lock
lcall
pop
gs
xor
and
inc
sbb
xor
and
cld
jnp
roll
test
stos
mov
shrb
add
add
iret
add
jo
hlt
pop
cmp
out
push
loop
mov
enter
jp
fwait
ret
jp
push
jae
inc
push
fs
ja
xchg
ss
int3
mov
adc
leave
hlt
sub
and
insl
cli
fbstp
ret
iret
enter
mov
and
cmpsb
fwait
pushf
cld
mov
sbb
add
mov
cmc
js
mov
shrl
mov
insb
inc
stos
or
dec
out
xchg
aad
std
adc
dec
add
push
and
mov
mov
sub
add
rclb
xlat
xchg
mov
mov
xabort
dec
cmp
cli
aam
lahf
data16
mov
iret
jle
mov
mov
or
or
jns
pop
lret
mov
daa
cmc
test
inc
cmp
jle
fchs
outsb
sub
mov
xchg
rolb
js
mov
rol
ret
pop
shlb
xchg
jl
aad
lea
and
jno
imul
sub
aad
sub
push
mov
cmpsb
cwtl
aam
loop
sub
jp
dec
rclb
push
push
sub
sub
mov
mov
cmp
push
fistpl
push
xor
pop
jle
inc
xchg
push
jb
in
mov
in
mov
push
inc
add
test
dec
lea
pop
jb
dec
cmp
enter
dec
mov
fcoml
repnz
roll
jne
das
cli
divl
dec
dec
pop
insl
nop
pop
in
gs
movsl
inc
xor
cmp
dec
inc
or
imul
sahf
pop
and
xor
subl
dec
inc
xchg
out
jl
lret
fstl
aaa
hlt
pop
jl
into
jle
adc
into
jle
cld
dec
icebp
rol
jmp
test
push
test
iret
shrb
dec
pushf
shl
je
cmp
std
shll
imul
fcoml
sub
cld
inc
add
xor
sub
jp
cmp
push
roll
jnp
sbbb
or
dec
mov
ss
adc
jnp
mov
dec
cmp
shll
lahf
les
dec
bound
jl
fs
stc
cmp
mov
sbb
aam
lock
lcall
mov
cmp
cmc
sub
mov
and
cld
mov
mov
xchg
push
jae
jle
icebp
mov
lods
dec
dec
fisubs
ja
mov
dec
jge
xor
repz
sti
mov
adc
add
push
pop
sub
lcall
cmpsl
add
jns
into
mov
gs
jo
fwait
or
pusha
mov
dec
out
outsb
and
pop
and
xor
push
pusha
cs
push
rcr
test
lds
pop
xor
imul
adc
in
pop
clc
push
pop
push
ret
xchg
xor
stc
jns
mov
fisttpll
mov
dec
insl
outsl
ret
imul
inc
stc
shll
push
shl
xchg
je
or
int3
int
jg
out
mov
mov
scas
push
mov
mov
add
mov
arpl
or
scas
mov
out
je
in
or
dec
rclb
add
pop
dec
loop
das
sbb
dec
xchg
or
orl
pop
test
iret
fcmovbe
sbb
xor
ret
mov
enter
fsubl
and
cmp
lock
icebp
into
ret
mov
inc
test
in
movsb
loope
lcall
imull
repnz
push
adc
mov
inc
jb
mov
mov
mov
push
std
movsl
fsubs
adc
jb
cmp
imul
movsb
mov
ss
cmp
push
push
pop
gs
adc
int
mov
mov
pop
xor
xor
pop
repz
or
inc
in
xchg
mov
in
xchg
iret
sar
cmp
divb
ret
mov
xlat
jne
pop
inc
rolb
mov
cmp
xor
out
incl
sbb
mov
fadd
je
and
add
xchg
dec
icebp
add
add
ds
pushf
xchg
mov
fwait
dec
lea
mov
cmpsl
add
daa
add
mov
mov
cmpl
mov
push
lds
dec
out
pop
and
cmp
or
mov
add
fidivl
in
dec
sub
jne
ret
inc
cmpsl
stos
push
pop
lock
outsl
shlb
popf
or
mov
fisubrl
lcall
fbstp
popf
outsl
and
mov
andl
and
ret
mov
stc
stos
mov
icebp
or
pop
mov
pop
mov
js
movnti
push
int3
xor
test
push
out
ret
xor
cmp
loopne
jo
adc
or
add
inc
aam
aaa
ret
add
mulb
fcmovne
mov
outsb
stc
sbb
lods
mov
push
jg
into
es
andb
test
pop
inc
in
mov
stos
syscall
sbb
sbbb
jmp
adc
aam
jno
stos
jecxz
push
xor
lods
loopne
xchg
push
test
dec
fildll
add
fwait
and
fldcw
or
push
imul
aad
adc
cmp
lret
into
cmp
das
push
or
mov
ret
mov
and
cmpsb
popa
testl
orl
andl
movsb
add
jge
jmp
inc
es
mov
flds
out
imul
push
out
jmp
pop
inc
pushf
cmp
inc
lahf
decl
pop
pushf
je
push
sahf
int3
push
push
jnp
std
pop
inc
cs
xchg
mov
push
mov
xchg
add
adc
xchg
lods
das
pop
inc
jns
out
adc
pop
mov
clc
push
xchg
cmp
fwait
pusha
push
cmc
or
cmp
cmp
mov
in
pop
inc
mov
imulb
ret
jns
ss
xchg
mov
inc
pusha
xchg
xor
mov
lahf
mov
decb
fnstsw
jb
into
adc
jg
adc
add
rclb
lahf
mov
mov
loope
rcrl
sub
je
incl
insb
sub
mov
fistpll
adc
dec
sbbl
mov
push
test
xchg
aaa
mov
push
pushf
clc
add
or
dec
outsb
mov
xchg
rcr
jbe
int3
shlb
cmp
int3
mov
jecxz
jno
jns
into
sub
cmp
mov
ds
repnz
gs
mov
pop
sbb
test
pop
mov
dec
ret
scas
jae
out
inc
mov
in
mov
scas
adcl
xlat
or
inc
leave
ds
cmc
pop
add
fsts
push
mov
and
pop
xchg
in
popf
xchg
or
pushw
jb
mov
jecxz
and
fs
and
lcall
mov
cmc
ljmp
mov
pop
sbb
hlt
out
test
bnd
dec
mov
cwtl
mov
lea
movsl
push
mov
dec
mov
add
mov
add
sub
insl
mov
clc
scas
das
shrl
xchg
pop
test
or
ljmp
push
out
dec
dec
pop
fdivl
dec
testb
xor
cmc
or
loop
mov
js
gs
mov
adc
cwtl
adc
inc
loop
push
int3
mov
mov
jae
adc
jecxz
xor
mov
cmp
sub
add
into
mov
shll
das
subb
imul
sbb
mov
lock
js
popa
pushf
push
mov
stc
pop
fisubrl
ficoms
in
sbb
sub
xchg
cmp
js
outsl
sbb
mov
push
test
xchg
cld
lea
shrb
fldenv
pop
sub
xor
xchg
sub
dec
lcall
insb
call
insl
fwait
jo
inc
adc
mov
fidivl
shrl
dec
rcrl
mov
rclb
xchg
fs
loop
mov
repnz
insb
adc
sub
aas
xor
sbbl
movsb
mov
pop
out
fiaddl
and
xchg
mov
mov
in
lcall
dec
mov
dec
insl
popa
jmp
insl
or
add
push
scas
adc
bound
and
mov
ret
mov
inc
mov
shll
rorl
lret
xchg
sbbb
es
rolb
aam
push
scas
out
jg
push
gs
dec
shll
or
mov
and
rcr
mov
push
cmp
jp
jnp
dec
test
jb
xor
add
sub
imul
pop
and
aad
jae
arpl
sbb
cltd
or
in
insb
stc
cmpsl
push
inc
das
movsb
and
jg
push
mov
mov
push
bound
pop
push
or
fs
ds
or
mov
insl
lret
data16
xor
pusha
push
js
jge
jo
test
jnp
and
jecxz
jle
push
sub
pop
sbb
push
sti
lds
mov
sbb
and
sub
inc
dec
test
std
xor
mov
cmp
aam
pop
scas
jp
scas
hlt
fucomi
adc
daa
add
mov
pop
ret
stos
jmp
mov
dec
lahf
shlb
add
outsb
inc
mov
sub
lcall
out
and
lcall
lret
test
fcoms
push
cmc
dec
popf
pop
mov
rclb
jle
call
cmp
sbb
insl
and
fsubrs
inc
ret
sbb
jmp
jo
call
xchg
or
jle
xor
loope
adc
aad
pop
sbbb
sbb
inc
lea
sub
inc
cltd
mov
into
push
cwtl
add
jb
sub
bound
pop
in
push
mov
and
add
shll
mov
xchg
sub
jne
lret
loopne
cmpsb
out
push
cmp
in
popf
add
jp
lret
cmp
js
pop
or
mov
sahf
push
js
sarb
xchg
lods
jmp
mov
mov
divl
shll
mov
mov
fidivrl
mov
mov
flds
mov
lods
or
push
fisubl
int3
xchg
std
pusha
jae
mov
add
test
cmp
out
dec
mov
jae
cmp
push
add
xor
mov
ljmp
cmc
jnp
or
lcall
pop
pop
pop
or
data16
cmp
xchg
cmp
adc
fists
push
jnp
data16
adc
mov
push
sub
movsl
addr16
push
xchg
fwait
rcl
imul
add
fsubl
movsl
fidivrl
cmpsl
jp
jns
xchg
ret
inc
fwait
pushf
jb
addr16
ror
xlat
mov
dec
mov
stos
dec
imul
mov
and
sbb
ror
jns
test
sti
add
int
adc
test
mov
in
insl
in
addr16
movb
or
in
lcall
mov
lods
pop
call
mov
movsb
jo
push
popf
movsb
cmc
dec
sbb
cwtl
and
push
test
mov
or
xchg
push
inc
bound
and
stc
xor
jl
jl
xlat
cmpsb
dec
cmpsl
xchg
sbb
or
xor
imul
mov
pop
pop
xchg
sbb
shlb
std
std
bound
jb
nop
push
push
mov
popf
ffree
out
or
and
cmp
inc
hlt
js
bound
inc
jne
repz
xchg
or
jle
xor
inc
in
push
rcll
fnstsw
jmp
push
inc
daa
sub
or
imul
fmuls
cmpsb
test
mov
sarl
movsl
outsl
sub
push
xor
shl
adc
fsubrl
subb
scas
out
sbb
scas
call
test
jo
cltd
mov
cltd
pop
xchg
bound
imul
adc
enter
enter
popf
das
lods
arpl
cmpl
data16
jl
aam
xor
scas
sbb
cmp
dec
sub
or
push
ret
push
mov
mov
popa
lret
rcll
pop
xchg
stos
enter
rcll
xchg
pop
lods
and
xor
test
sub
fisttps
mov
lahf
daa
popl
shl
lret
pop
in
jg
mov
mov
scas
dec
lret
xchg
pop
mov
pop
or
popa
leave
repnz
inc
sub
lds
dec
dec
sbb
out
push
ljmp
mov
fwait
iret
into
xchg
pop
pop
test
stos
or
push
lret
loopne
popf
cmp
aaa
mov
mov
push
or
outsb
pop
stos
cmp
mov
in
mov
data16
dec
lods
ds
add
pop
lret
mov
push
cld
xchg
mov
sbb
sahf
adcl
imul
subl
pop
push
pop
and
jp
mov
imul
notb
ss
xchg
or
pop
add
sbb
sbb
mov
js
clc
out
jnp
call
adcl
jg
dec
testb
sbb
and
std
insb
or
mov
xchg
addl
popf
stos
jecxz
mov
sub
jp
insb
nop
fdivs
mov
std
adc
cmpsl
jns
pop
pop
lock
out
into
xor
pop
add
push
and
rcrl
pop
xor
cmp
cltd
movsl
xor
xchg
ds
aas
mov
xor
pop
pop
sbbl
nop
ljmp
sbb
push
pop
stc
xor
push
cmpsl
arpl
sub
adc
cmp
mov
xchg
add
cmp
scas
shlb
shlb
sub
mov
ljmp
dec
pop
mov
xor
mov
rolb
clc
inc
cmp
out
loopne
mov
mov
rorl
lds
jnp
xchg
bound
sti
push
jge
mov
lcall
add
pop
fidivs
lds
add
pusha
cmp
add
cmpl
ja
adcl
xchg
rcll
fisubrl
inc
sbb
cld
mov
mov
inc
mov
or
adc
inc
xchg
sbb
dec
mov
dec
loope
shll
jge
imul
sbb
decb
addb
pop
das
jecxz
je
mov
push
or
push
xchg
cltd
inc
fidivrs
pop
mov
outsb
cmp
dec
test
push
dec
push
dec
jl
add
mov
add
xchg
xchg
mov
sub
rolb
xchg
xlat
adc
or
mov
cli
mov
mov
sbb
cmp
or
das
js
loopnew
jnp
xor
push
dec
push
mov
cs
push
mov
pop
add
cs
mov
cmpsl
xchg
call
movb
push
test
add
xor
aam
inc
jns
inc
loop
mov
cmp
mov
ret
mov
xchg
enter
rclb
outsb
xchg
jmp
cs
mov
aaa
mov
aad
cmp
add
mov
outsl
out
and
in
jp
stos
outsb
in
test
outsl
mov
ret
dec
fcomps
jecxz
cmp
out
repnz
xchg
inc
push
xchg
jge
mov
es
es
xchg
adc
jno
mov
loope
rcrb
adc
add
jno
movsl
jns
shlb
in
push
jae
mov
aaa
mov
arpl
cli
inc
aam
xchg
ret
adc
mov
pop
jmp
jb
lock
sub
icebp
xor
push
adc
out
jg
mov
movsl
dec
or
cmp
mov
aas
and
xor
mov
push
pusha
repz
nop
das
test
and
xchg
mov
into
dec
jg
dec
out
icebp
xchg
ret
push
dec
push
in
repnz
ljmp
jle
cmovne
in
dec
movsl
push
cmp
mov
mov
sbb
jle
pop
add
and
push
int
shlb
or
xchg
and
sti
dec
aad
inc
fdivs
pop
pop
or
test
mov
fcmovu
ds
inc
mov
inc
aad
cmpsl
or
add
ljmp
adc
lods
adc
sub
dec
sub
fists
sub
pop
lods
ja
add
and
popa
mov
add
sub
insl
fisttpl
dec
pop
je
movsl
gs
pushf
mov
push
mov
dec
mov
dec
adc
lea
adc
enter
out
mov
jge
inc
jae
lret
fisttpl
pop
adc
rcll
sub
repnz
lahf
sahf
xor
mov
test
inc
pop
je
test
lock
loop
imul
cmp
add
lods
jp
sbb
sbb
icebp
sbb
ljmp
notl
rorb
sub
fists
iret
mov
out
sar
lods
mov
sub
xor
pop
xor
jbe
mov
and
daa
sub
stos
cmp
test
sub
pop
sub
pop
addr16
loopne
mov
pop
cs
dec
mov
jp
inc
xor
inc
mov
aas
and
aad
cmpsb
mov
cmp
insb
jl
stos
adc
cmp
das
push
jo
in
dec
push
xchg
repnz
dec
shll
sbbl
call
fldl
out
adc
test
mov
mov
movsl
sub
arpl
out
mov
adc
out
movsl
push
add
and
sbb
daa
bound
cmp
mov
cmp
or
xor
rcll
mov
notl
test
mov
jecxz
pop
jmp
call
cmp
push
sub
bound
movl
push
in
mov
push
and
jle
add
pop
or
mov
dec
daa
push
aam
sbb
push
clc
cli
ret
addr16
mov
pop
xchg
mov
jne
out
sbb
mov
mov
jns
dec
sub
push
pmulhw
mov
mov
mov
sbb
outsb
jno
test
inc
mov
sbb
pop
out
add
dec
aam
mov
inc
adc
mov
fisttps
mov
cmp
dec
pop
cli
adc
insb
xchg
sub
mov
inc
hlt
adcb
sbb
mov
imul
cmp
mov
and
mov
call
fimuls
pop
scas
bound
pop
mov
cmp
jb
mov
loope
mov
or
imul
xor
sbb
mov
xchg
adc
leave
sbb
push
lock
loope
test
fsts
mov
addr16
jbe
outsl
fwait
inc
inc
hlt
mov
sbb
pop
jae
cwtl
add
loopne
push
dec
jne
mov
decl
sub
leavew
aas
pop
and
adc
cmc
and
xor
dec
sahf
adc
enter
lea
jg
addb
in
lahf
add
repz
and
dec
test
push
loop
leave
adc
pop
mov
jmp
int
shll
dec
or
mov
mov
jno
jns
adc
or
pop
or
xchg
fnstcw
lds
nop
shlb
pop
stc
adc
jecxz
cmc
cmpb
loope
iret
jmp
or
cmpsb
xchg
sub
inc
mov
insl
xor
fisttpll
shl
in
mov
jns
mov
out
push
add
adc
adc
hlt
addr16
pop
jno
xor
inc
push
in
and
cmpsb
xchg
xchg
xchg
orb
andl
cltd
jle
pushl
add
test
mov
pop
mov
loopne
cwtl
inc
xlat
add
fidivrs
jae
aas
sbb
repz
sub
mov
push
imul
sub
mov
or
fbstp
daa
iret
adcl
xchg
outsb
sbb
or
jg
loope
adc
push
sub
stos
lcall
inc
xor
stc
rcll
sub
mov
cld
adc
iret
push
mov
lret
shrl
inc
ret
pop
fdivs
lock
fs
sub
jle
xchg
int
mov
sub
neg
out
movsb
les
xor
mov
mov
popf
pop
insb
hlt
push
into
add
cmpsl
add
pop
and
cmp
stos
jnp
xchg
bound
cmc
lahf
add
adc
loop
les
add
imul
cs
cmp
add
pop
lock
scas
rcll
xchg
dec
gs
test
mov
daa
xor
faddp
cmp
xor
aas
fadd
movsb
movsl
cmpsl
xor
cmp
cmp
in
cmp
or
jg
dec
and
xchg
sbb
hlt
inc
arpl
imul
addr16
add
repz
in
pop
jo
into
movsb
xor
xchg
xchg
jg
je
sub
jp
mov
clc
in
outsb
sub
mov
mov
inc
dec
js
cli
icebp
push
shlb
mov
daa
dec
inc
push
pop
xchg
mov
xor
in
movsl
mov
movb
sub
or
xchg
ss
xor
push
scas
sub
inc
xchg
fimuls
mov
or
test
imul
cmp
lret
mov
adc
mov
adc
fnstsw
jae
jne
dec
enter
pop
mov
pop
loopne
arpl
insb
push
dec
jge
cmpb
xor
in
mov
inc
aas
pop
insb
add
xchg
mov
cmp
stos
mov
jnp
pop
inc
in
adc
mov
cltd
or
shl
das
cmpsl
inc
lods
sti
jo
fstpl
and
jae
fildl
mov
xchg
xchg
movsl
mov
lds
inc
cld
or
loop
js
divl
lret
cmpsl
add
jle
or
call
roll
dec
repnz
add
push
pop
int
bound
cmp
dec
pop
inc
jecxz
dec
clc
mov
adc
paddusw
ja
movsl
and
repnz
cmc
movsl
mov
gs
pop
push
or
loop
xchg
mov
inc
cli
pop
mov
movb
sbb
sbb
mov
lcall
cwtl
sub
xor
and
ja
jns
leave
outsb
hlt
int3
pushf
sahf
pushf
std
data16
adc
jmp
nop
sahf
jmp
mov
push
lcall
jl
insb
aam
xor
out
xor
sub
jae
mov
pusha
pusha
int3
xchg
inc
aas
stc
inc
outsb
ret
das
push
arpl
sub
sbb
jle
aaa
push
adc
das
jae
xchg
ds
js
push
jnp
sbbl
outsl
sub
xor
hlt
test
xor
inc
pop
pop
adc
dec
fsubrs
mov
xchg
arpl
sbb
mov
inc
add
fwait
sub
xchg
adc
mov
mov
inc
fwait
popf
pop
pop
addr16
jmp
pop
and
ficomps
repnz
arpl
movsl
lods
jg
bound
xchg
cmp
and
icebp
push
pop
jne
outsb
jl
js
lret
and
aad
gs
mov
push
mov
add
pop
sbb
filds
and
repnz
mov
xor
icebp
loop
xchg
lcall
jle
lock
aad
and
shr
mov
pop
jae
mov
enter
mov
dec
add
ljmp
sbb
sbb
sub
add
sub
call
lret
in
and
sub
movsl
aam
xchg
push
xchg
dec
cld
je
dec
push
xor
lahf
and
mov
ds
sub
movsl
loopne
shlb
mov
xchg
sub
sbb
jnp
loope
push
call
jne
jl
shrb
xchg
out
sbb
push
les
cmc
jecxz
mov
fnstcw
outsl
jno
xchg
ret
adc
or
and
mov
push
inc
in
jmp
shrl
sbb
sub
inc
mov
popf
and
inc
sti
mov
sbb
or
or
xchg
test
adc
lret
call
es
lahf
test
test
fwait
sub
scas
stc
test
inc
es
out
sub
and
aas
pop
loop
cmp
sbb
adc
std
and
push
in
inc
insl
idivb
sbb
sahf
popl
adc
stos
cmp
mov
xor
pop
xchg
adc
push
pop
mov
mov
and
outsl
aad
push
out
cwtl
adc
aam
dec
push
pslld
repnz
push
into
ret
xchg
insb
xchg
pusha
xlat
daa
int3
xor
and
pop
aad
sbb
rep
mov
adc
out
rorl
sahf
fbld
mov
xlat
sub
mov
leave
stos
pop
stos
iret
pop
xor
push
cmpsb
mov
lret
lahf
or
mov
ss
fdiv
cmp
and
jge,pt
jno
cmp
mov
icebp
inc
dec
and
jnp
xchg
inc
movsl
iret
mov
jle
push
mov
jnp
pop
pop
leave
pusha
add
in
mov
pop
push
enter
mov
push
xchg
clc
jae
lcall
cltd
xlat
inc
and
scas
scas
daa
mulb
out
pop
fucom
xchg
in
ret
ror
or
call
call
and
cs
in
inc
xor
cwtl
pop
push
xor
pop
shll
mov
xchg
push
adc
iret
xor
inc
or
test
jno
push
pop
jp
inc
xor
repz
and
cmp
insb
fisubrl
mov
mov
fs
push
xor
loop
push
lds
pop
cwtl
and
sub
and
lahf
push
ficomps
push
outsl
mov
rcrb
mov
rcl
outsb
cmp
in
jg
sub
rcrb
xor
push
sub
mov
xchg
mov
mov
lock
popa
aam
cmp
inc
outsl
xor
sbb
add
mov
ja
xor
cmpsb
int3
iret
inc
enter
pop
gs
jge
fcmovnb
xor
xor
stc
imul
shll
ja
ffreep
ljmp
dec
out
sub
xchg
rcll
push
outsl
dec
movsb
sbb
cmp
mov
scas
xor
inc
cmp
pop
sbb
cwtl
nop
outsl
inc
or
jg
into
xchg
sbb
fsubrl
push
sub
dec
push
mov
cmp
adc
ror
ret
adc
or
hlt
lea
into
xchg
cmp
mov
xchg
rorb
lods
pusha
iret
lcall
cmp
pop
sub
lret
or
cmp
ds
iret
jo
jmp
mov
insl
sbb
xchg
loopne
stc
cmpsb
out
pop
fistpl
dec
or
cwtl
pop
loopne
push
and
sahf
or
je
or
out
int3
push
mov
clc
icebp
enter
lcall
xchg
xor
xor
mov
imul
jg
jno
sbb
mov
ds
cmpsb
dec
cmp
sarl
mov
ja
fcomip
jno
push
push
mov
add
cwtl
clc
gs
orb
jge
xlat
xchg
mov
repz
jecxz
mov
dec
and
cld
ja
lret
jmp
pop
pop
dec
std
aam
cmp
das
dec
mov
sbb
leave
lret
repz
sbb
int3
sbb
mov
je
xor
movsl
mov
jle
xchg
in
test
mov
fpatan
mov
sbb
mov
clc
out
push
cli
push
pop
adc
inc
movsl
dec
mov
xchg
popf
into
int
sbbl
int
ljmp
fstpt
out
dec
mov
cld
xor
dec
or
jp
dec
test
das
mov
cli
into
jecxz
xchg
fwait
imull
lcall
sub
push
push
in
mov
xchg
pop
or
jno
int3
lock
scas
scas
dec
sub
aam
jnp
lret
repz
addr16
sub
notl
dec
mov
push
add
mov
mov
dec
push
cmp
xor
ja
ja
xor
lods
pop
dec
push
mov
cmp
lea
incb
or
jne
push
aad
leave
popa
lea
lods
shrb
dec
and
sub
jecxz
ret
jae
mov
push
lods
cltd
stos
push
cmc
push
test
xor
lret
xchg
leave
pop
pop
push
push
push
mov
pop
push
mov
mov
stc
inc
lret
dec
lds
mov
in
inc
les
scas
jae
push
in
and
cld
out
mov
or
sub
jne
xchg
mov
pop
ja
fucomp
cmpsl
fldl
cmp
or
fldcw
cwtl
pop
pop
out
popa
xor
push
faddl
shl
repnz
and
in
xor
sbb
into
mov
inc
pusha
fs
stc
push
lcall
xor
mov
sub
push
leave
outsb
cmp
rorb
xchg
push
lar
fcomps
cmpsl
and
add
ja
or
movsl
mov
data16
int3
sahf
stos
sbb
scas
adc
aam
jp
pop
dec
sarl
pop
sub
mov
les
fldcw
fnstenv
insl
fcomps
fbstp
arpl
fists
es
mov
ja
dec
dec
outsl
xor
mov
push
inc
decl
loop
mov
aas
sub
lds
loope
sbb
das
mov
hlt
mov
inc
jnp
mov
mov
push
movsl
jg
sbb
test
imul
push
xchg
add
leave
out
fdivr
in
push
in
or
or
push
fsubrs
and
adc
sahf
test
mov
push
add
sbb
aas
add
fsub
push
mov
pushl
pop
and
lret
fnstcw
iret
xchg
xchg
shl
cld
aam
mov
mov
adc
icebp
pusha
icebp
jne
xchg
mov
or
enter
inc
or
inc
imul
cmpsb
shrb
iret
or
ror
pop
cmp
sbb
les
push
fidivl
xchg
testb
push
outsb
mov
dec
dec
pop
sbb
jg
inc
ficoml
mov
shlb
ret
sahf
jns
lods
aam
cmpsl
outsl
sub
ret
movsb
loop
jns
in
movsb
dec
mov
ficoms
sar
lods
dec
and
ret
lret
rcrl
into
fsubrs
push
jnp
rcrb
or
cmp
icebp
outsb
arpl
fstpl
jnp
lahf
jmp
gs
scas
mov
loope
jmp
in
add
pop
sub
in
std
divl
mov
dec
mov
jmp
inc
fldcw
mov
sub
dec
xchg
fbld
aaa
xchg
xor
out
sub
or
lock
out
es
mov
arpl
in
push
imul
movsb
hlt
push
aad
dec
pop
dec
filds
jle
pop
jl
nop
in
dec
inc
daa
push
inc
xchg
lret
mov
jnp
xorl
arpl
xor
xor
repz
lods
mov
popl
xchg
mov
mov
pop
mov
ss
cmp
test
rorl
cmp
push
insb
mulb
arpl
adcb
xchg
je
xchg
call
mov
dec
fwait
mov
les
and
lret
mov
and
xchg
iret
popa
insl
pop
xchg
testl
adc
push
sub
jle
or
arpl
mov
jle
cmp
cli
clc
leave
loopne
sub
pop
fwait
int
int
dec
push
cmp
into
notl
std
mov
jecxz
sti
mov
xor
jecxz
sub
imul
fstl
imul
inc
sub
jnp
stos
xchg
xor
testb
jne
xchg
jecxz
or
in
imul
shll
mov
jmp
push
daa
jmp
jle
jp
enter
ja
xchg
es
cs
cmp
loopne
shrb
clc
scas
icebp
das
add
lds
mov
adc
daa
mov
mov
imul
js
call
jmp
lock
scas
fwait
jp
outsl
cmp
orl
jecxz
push
lret
mov
sub
in
fcoms
mov
push
push
sar
jo
jle
mov
adc
int3
imul
popa
lock
test
test
out
cmp
lock
jmp
insb
loop
xor
in
push
mov
insl
mov
push
je
sub
jmp
hlt
adc
push
xchg
lcall
shll
mov
and
push
addr16
adc
sbb
test
xchg
lret
or
inc
xchg
mov
and
add
mov
cmc
and
int
test
test
fdivs
enter
mov
lds
inc
xchg
jne
gs
scas
outsb
or
mov
adc
out
pop
imul
and
cmpl
ret
jns
inc
add
xchg
call
je
out
mov
sarb
aas
xorl
mov
adc
and
xchg
and
lret
repz
push
mov
mov
arpl
arpl
fildll
mov
sub
clc
js
lahf
xchg
push
sub
adc
and
test
dec
push
mov
test
dec
shl
shrb
jo
fdivp
add
aaa
scas
push
sarl
inc
mov
adc
pop
mov
push
sbb
cmc
adc
jecxz
imul
push
push
sbb
push
movsb
or
stos
mov
fistps
xchg
loope
sbb
pextrw
stos
js
punpcklbw
cmp
vpcmpeqb
jb
mov
mov
test
scas
es
dec
aas
je
add
or
cmp
gs
outsl
fisubrl
das
mov
in
dec
fs
enter
cmp
or
pop
nop
jl
cltd
inc
leave
cmp
and
pop
fistpll
ret
mov
les
mov
cld
inc
sub
push
sub
inc
dec
cmp
jbe
loopne
dec
add
xchg
cltd
nop
add
xchg
jnp
gs
adc
popa
popf
rcr
sarb
jbe
sbb
mov
ret
test
or
xor
xor
out
add
push
cltd
push
shl
xchg
pop
sub
cmp
aam
and
fdivs
outsb
lcall
cli
adc
jl
sbb
je
adc
sbb
sbb
dec
call
outsb
imull
bswap
cmp
outsl
pop
jne
inc
out
scas
inc
jecxz
mov
xchg
xchg
jl
cli
jae
xor
mov
sub
imul
adc
fwait
ja
lret
lcall
cmp
imul
icebp
dec
jnp
adc
arpl
in
andl
xor
sbb
arpl
fsubr
fwait
arpl
nop
das
cs
movsl
mov
dec
jle
mov
lods
sbb
and
cli
sub
cli
inc
int3
lret
outsb
call
sbb
cmpsb
xor
or
cld
adc
xor
sbb
jge
and
jmp
add
sub
dec
fwait
mov
mov
and
push
sti
dec
mov
ja
mov
imul
cmp
adc
cmpsb
movsl
mov
aad
and
mov
adc
xlat
cmpsl
pop
ja
mov
sbb
sarb
jno
xchg
push
add
jnp
out
subl
in
jo
add
aaa
rcr
dec
inc
xchg
setno
movsl
cwtl
aas
ljmp
or
xchg
jl
mov
shlb
shll
inc
in
xchg
xchg
push
nop
pop
mov
xchg
ret
jb
push
imul
enter
push
cmc
sbb
jne
and
or
mov
loop
das
js
adc
outsl
outsb
leave
fisttpll
jg
xchg
inc
pop
iret
jp
sahf
pop
push
cmpsl
test
sbb
xor
fwait
mov
orb
clc
leave
mov
mov
lahf
div
mov
cmp
adc
xchg
call
fidivrl
dec
add
or
insb
xor
xchg
sti
mov
popa
mov
das
or
adcb
cwtl
int3
adc
and
jae
cmp
cmp
insb
mov
or
mov
jns
and
aam
cmp
push
xchg
and
fisubrs
or
and
inc
in
or
adc
dec
sub
mov
mov
lahf
mull
pushf
sub
jns
jge
xchg
aas
sbb
and
push
test
add
repnz
iret
adc
outsl
mov
aam
cld
es
cmp
jge
imul
pop
xchg
stc
scas
jbe
or
sarb
sub
cmp
pop
mov
mov
xor
insb
dec
cs
inc
mov
push
and
inc
andl
clc
mov
jle
adc
int
push
xchg
jmp
mov
enter
pushf
add
cmpsl
iret
and
mov
jno
jbe
jecxz
mov
sbb
lods
inc
pop
xchg
popa
push
es
stos
loopne
lahf
cmp
push
dec
popf
mov
xor
jns
inc
js
pmaxsw
xchg
iret
aas
or
pusha
into
stc
sub
inc
mov
push
mov
aaa
xchg
notl
mov
leave
fwait
mov
stos
cmp
pushf
mov
testb
jb
jecxz
rcrl
inc
mov
jae
icebp
or
mov
shrb
mov
lcall
in
test
xchg
pop
pop
shl
test
xchg
out
mov
jecxz
andl
pop
xor
cmc
movsl
outsl
cwtl
fisttpl
push
sub
stos
sub
stos
inc
mov
out
insb
add
clc
ds
fbld
fadds
enter
dec
ret
xor
aaa
mov
or
insl
pop
lcall
das
mov
jne
cmp
ja
mov
imul
ror
dec
push
sub
sbb
mov
out
cli
and
xchg
or
movl
pop
dec
jmp
cmp
inc
xlat
inc
fsubrs
das
inc
adc
xchg
inc
or
push
lods
call
aam
rol
adc
daa
add
or
pop
mov
aad
insl
stc
sub
mov
push
imul
mov
shl
dec
mov
sbb
mov
addr16
mov
loop
add
cmp
and
insl
es
xor
and
in
mov
xchg
ja
arpl
popa
iret
addb
cmp
inc
lods
mov
or
push
rcrl
or
push
jmp
cmp
jle
aas
dec
mov
cmp
out
mov
dec
mov
cmp
pop
sbb
jp
outsb
out
mov
outsl
inc
lahf
jp
hlt
lret
ljmp
negl
push
ljmp
sub
popf
js
mov
sete
jle
xchg
jae
mov
hlt
xchg
mov
incb
ja
jmp
test
icebp
aad
cmpsb
ret
arpl
or
jmp
arpl
sub
lret
or
bound
pop
inc
add
out
pushf
push
imulb
stos
mov
icebp
in
inc
mov
loopne
mov
sbb
cmpsl
inc
sahf
lcall
sbbb
add
nop
movsb
mov
mov
lock
fsub
out
and
icebp
js
dec
test
push
movaps
test
mov
popf
pop
rcrl
loopne
xor
sbb
out
jge
sub
mov
pop
test
in
lcall
sub
and
or
in
jp
push
cmp
pop
pop
or
xor
adc
push
mov
fwait
les
push
addr16
xchg
pop
cs
ret
andb
xchg
push
ss
cmp
xchg
push
xchg
mov
outsl
jmp
in
dec
out
out
dec
stc
or
popf
aas
leave
fs
jnp
mov
cmc
in
adc
arpl
jle
inc
mov
mulb
dec
cmc
mov
mov
mov
dec
push
ret
rorl
cmp
xchg
and
cmp
xchg
hlt
or
push
sti
or
pop
shlb
push
imul
imul
mov
or
add
inc
jb
leave
jbe
out
pop
mov
outsb
adc
shlb
dec
pop
add
adc
dec
push
jo
stos
scas
test
loopne
xchg
and
cmp
jecxz
icebp
jmp
fucomp
outsb
shll
cli
iret
push
mov
pop
cli
adcl
dec
sbbb
out
xor
xor
leave
mov
mov
gs
lea
dec
jbe
add
jns
enter
hlt
lock
adc
lret
cs
xchg
inc
dec
fiadds
lods
xchg
cmp
cmp
xorl
jl
and
inc
stc
push
repz
subb
mov
jnp
inc
jns
data16
xchg
ds
add
adc
inc
push
fcmovnbe
cmpsb
ljmp
movsb
mov
testb
push
cli
sub
xchg
push
sbb
fldl
add
out
mov
fisttps
lret
and
inc
aam
dec
inc
add
stc
jge
dec
pushf
mov
cwtl
popf
sub
lods
push
aam
movsl
in
xor
fcoml
loopne
stc
ret
sbb
mov
rorb
addr16
aad
sub
push
jl
jnp
int
or
or
xor
js
push
addr16
pop
ret
popa
or
dec
outsl
pop
xor
mov
or
dec
lock
lret
repz
mov
push
pop
shlb
xchg
push
ss
and
icebp
icebp
pop
lahf
jnp
sbb
or
shrb
and
imul
adc
je
cmpsb
pop
mov
shlb
lock
clc
dec
test
arpl
ret
daa
hlt
lods
lock
add
push
incl
fwait
cwtl
test
int
adc
push
jbe
cmpl
mov
dec
bound
mov
add
ljmp
mov
pop
sbb
dec
fdivl
fcoms
pop
mov
dec
lret
and
xor
xchg
fisttpll
mov
ljmp
std
jg
pop
insb
fdivl
aas
or
js
lahf
dec
popa
or
push
lea
adc
and
ja
lret
sbb
sbb
xchg
lea
jne
repz
sub
dec
dec
out
jmp
pusha
cmc
xchg
mov
sbb
test
and
or
push
popa
call
mov
xor
bound
dec
jmp
fidivl
mov
popa
sbb
in
jge
cmp
push
fistpll
and
lods
sahf
mov
fstp
adc
sub
push
loop
or
mov
adc
dec
jae
xchg
adc
mov
les
xchg
out
sbb
inc
test
add
xchg
mov
ds
jbe
pop
mov
scas
jne
setns
and
jmp
jno
cli
lcall
push
aam
mov
add
int
xchg
rcll
shrb
inc
cli
mov
sbb
sub
inc
in
lret
ret
aam
xchg
lret
push
xchg
add
es
fimull
jb
sub
push
lahf
sbb
cmp
xchg
je
sub
inc
jmp
mov
jmp
and
xchg
fcompl
iret
xor
loope
add
cmpsl
in
push
daa
xchg
mov
imul
mov
dec
mov
int
xor
jno
push
adc
rcrb
and
inc
push
add
rorb
shlb
int
clc
add
inc
cld
pusha
cs
out
das
jae
ss
dec
ljmp
dec
push
stc
les
add
pop
cmp
hlt
shrl
frstor
add
inc
aaa
cmpsl
jp
int
mov
jl
dec
fistl
inc
xorl
add
int
pop
and
daa
adc
pop
xor
jmp
cmp
scas
sbb
js
push
outsb
xor
movsb
mov
xchg
stos
and
or
jnp
lock
mov
mov
test
filds
icebp
lahf
jle
mov
cmp
adc
movsb
stc
test
and
dec
xor
popa
cmpl
insl
fstpt
aad
jge
xor
and
sub
jnp
and
mov
push
sbb
push
das
adc
stos
in
cld
pushf
mov
xor
repnz
sbb
and
ja
xchg
sub
arpl
hlt
xchg
les
adc
iret
xchg
data16
sub
mov
mov
xor
mov
repz
and
dec
popl
mov
enter
or
jg
jno
sub
xchg
adc
and
push
xchg
out
enter
cwtl
jecxz
imul
bound
repz
mov
loope
je
mov
pop
push
xorb
mov
jns
mov
dec
mov
pop
mov
outsb
xor
ficoml
sbb
mov
sub
idivb
in
daa
adc
adc
std
lretw
dec
jge
fwait
mov
mov
lods
cld
scas
popa
adc
bndstx
mulb
int3
ja
pusha
dec
xchg
dec
pop
xchg
imul
inc
add
jge
mov
adc
out
movsb
push
cmpsl
adc
jmp
ja
scas
or
lock
dec
repz
cmpsb
jae
mov
cmp
mov
pop
call
paddsb
mov
pop
loop
test
push
jno
js
jle
xor
and
pop
pop
jp
jo
inc
jmp
aas
xchg
ficompl
adc
das
cmp
dec
mov
add
sysret
mov
mov
das
push
fs
dec
push
movsl
inc
add
int
leave
xchg
and
add
stos
cmc
das
mov
pushf
or
fistpl
sbb
in
push
jmp
lods
enter
insb
xchg
lret
jg
mov
mov
test
jge
jge
push
mov
add
fcmovu
xor
rolb
mov
rolb
or
lret
mov
in
ret
mov
xor
pushf
adc
fdivl
sub
sarl
jo
jno
in
cld
fnstsw
lret
pop
cmp
fcompl
mov
lcall
jno
fcmovnu
jbe
mov
gs
dec
sbb
enter
push
push
sbb
pop
test
push
leave
cmc
in
mov
shll
movb
or
dec
in
das
dec
pop
clc
je
enter
inc
jge
xchg
push
test
popa
call
dec
in
push
pop
movsl
mov
cmp
mov
push
test
out
loopne
repz
call
mov
or
fistpl
mov
pop
jb
test
cmp
mov
or
sbb
and
repz
sti
cmc
movsl
ja
push
or
cmp
mov
pop
jmp
mov
fcmove
add
popf
sub
pop
adc
push
or
xor
jmp
scas
mov
out
cmpb
mov
divps
pop
imul
out
jbe
dec
lret
or
inc
adc
push
shl
xchg
fildll
add
add
mov
not
loop
clc
repz
cltd
mov
jp
lcall
mov
pop
xor
shrl
mov
pop
mov
mov
cwtl
sbb
adc
ret
in
imul
je
movsl
cli
add
in
fldenv
and
add
in
mov
adc
and
xlat
pop
movl
mov
pop
xor
push
cmp
or
stos
push
dec
idivl
rcrl
xlat
cmpsb
inc
std
dec
sbb
inc
clc
enter
cmp
push
and
fsts
test
pop
jle
xchg
repnz
mull
fs
mov
je
mov
push
bound
cld
adc
pop
gs
in
repnz
xor
xchg
sub
imulb
ds
inc
pushf
imul
or
sbb
sub
shlw
gs
std
fstl
pop
jo
clc
xchg
lods
mov
jg
pusha
adc
push
lcall
sub
push
push
cmc
and
or
fdivl
fldcw
aas
xor
inc
scas
mov
inc
lea
lea
cmp
ret
idivl
stos
push
xchg
in
roll
icebp
testl
lods
lahf
insb
lcall
aad
sarl
hlt
and
cmp
fwait
xchg
or
clc
mov
adc
insl
mov
in
popf
pushf
push
dec
xchg
mov
ret
out
fisubrl
leave
xor
pushf
dec
dec
pop
cmp
pop
adc
fistl
pop
test
sbb
xor
iret
mov
stc
ljmp
mov
jb
xchg
xchg
or
push
jecxz
in
adc
xor
stos
movsl
arpl
lahf
ljmp
dec
jnp
lret
stc
aad
lds
sub
outsl
push
or
adc
jnp
push
loop
sub
adc
lock
dec
jl
push
or
push
daa
and
mov
in
pop
imul
js
push
loopne
je
andb
or
xor
jnp
fsubp
aad
mov
adc
sbb
les
into
into
jl
ds
gs
stos
ljmp
out
es
je
cmpsb
cmp
cmp
and
ret
adc
clc
xchg
sti
jbe
mov
mov
or
push
sub
cwtl
pushf
mov
fildl
mov
rcrl
jbe
mov
xchg
mov
xchg
js
inc
sarl
dec
and
lods
jb
lcall
sub
hlt
sub
fsubrl
addr16
pop
les
nop
push
jo
inc
dec
insl
push
ljmp
inc
cld
lret
push
popa
mov
jne
ss
xchg
mov
xchg
mov
daa
sub
push
pop
inc
js
jge
ds
sub
lret
fldt
je,pt
cmp
dec
repnz
inc
filds
ret
push
mov
push
xorl
add
inc
andl
cld
mov
mov
mov
pop
xchg
out
pop
cmpsb
jecxz
in
push
inc
int3
popf
cmp
mov
sub
popf
divb
push
ljmp
sub
jecxz
lods
push
push
inc
adcb
std
mov
mov
stc
adc
mov
in
cmp
pop
lea
cwtl
dec
jecxz
arpl
rcrl
std
sbb
pop
fucomip
cmpsb
jle
and
ret
test
push
xor
pop
dec
leave
int
mov
arpl
out
aad
aaa
sahf
sub
mov
pop
sub
and
pop
lahf
jecxz
into
fwait
int
xlat
popf
mov
mov
out
movsl
cli
adc
and
cmp
movsb
in
mov
fiadds
pop
cli
lret
xorb
aam
int3
cmp
adc
push
inc
stos
jge
xchg
call
dec
sub
ret
dec
push
lcall
sbb
ss
jecxz
sub
mov
daa
ficomps
pop
in
sti
int
push
mov
ja
cmp
pop
stc
mul
or
clc
fs
push
jns
inc
inc
pop
call
lods
cmovs
hlt
imulb
dec
adc
test
shll
and
scas
es
ror
xor
clc
stos
cmp
add
sub
fptan
dec
and
outsb
call
add
add
xor
xchg
jl
push
adc
xchg
pop
push
adc
sbb
mov
mov
add
cwtl
mov
ret
int3
dec
add
das
mov
push
sbbb
or
add
fwait
ds
fisubs
test
lock
sbb
mov
push
hlt
push
sub
or
jp
scas
cld
mov
cmc
jno
add
insb
add
call
mov
push
mov
mov
xchg
xchg
out
mov
push
add
push
sbb
rolb
fs
or
mov
outsb
sbb
cmc
rcrl
ret
addb
and
and
fistpll
loopne
leave
mov
mov
sbb
scas
adcb
inc
jns
nop
pop
fisttpll
imull
adc
xchg
das
icebp
fbld
test
and
lds
dec
jmp
cmp
xchg
cmp
xchg
xchg
lods
cmp
dec
fstps
mov
inc
pop
cld
sbb
sub
jno
cmp
ret
repnz
dec
data16
push
divb
pop
fdivrs
xchg
jno
aaa
xor
pop
add
xor
sub
xchg
inc
dec
add
fwait
shlb
shl
jno
gs
dec
xchg
sub
add
pop
fidivl
fsubrl
and
cmc
or
out
push
sahf
xor
insl
in
push
outsb
and
scas
mov
scas
test
inc
faddp
add
push
ss
adc
in
cmp
test
int3
iret
push
mov
out
xchg
pop
cltd
sub
stos
scas
ljmp
sbb
in
jb
adc
push
data16
xchg
outsb
and
cmp
cltd
loope,pn
inc
lret
imul
inc
frstor
stos
sbb
movsb
dec
push
fdivrl
push
imul
out
inc
popf
xchg
shll
pusha
sar
push
sbb
add
jnp
inc
and
imul
mov
xchg
icebp
je
sbb
cmpsl
int
inc
and
test
ret
mov
pop
clc
rolb
push
into
lods
test
leave
lds
pop
jb
test
xchg
ds
out
shl
or
sbbb
loope
shll
adc
sub
cmc
push
loope
add
ret
mov
mov
les
inc
sub
cmp
inc
cmpsb
adcb
mov
adc
lock
mov
xchg
nop
mov
xor
dec
fdivrl
call
enter
shll
dec
jp
jb
push
jl
dec
and
sahf
call
mov
into
fimull
stc
arpl
xorl
daa
jge
cwtl
mov
fcmovbe
popa
add
mov
pop
sub
mov
fiaddl
pop
lods
popa
test
outsb
push
inc
cld
push
xchg
mov
mov
repz
inc
scas
sbb
aad
push
add
iret
or
aam
sti
fisubrs
into
mov
movsb
cmpb
mulb
jb
push
inc
or
push
cs
lret
in
shl
push
xchg
fdivr
cmp
aas
xor
in
aas
lret
icebp
inc
lcall
nop
sbb
cmc
mov
cmp
cwtl
mov
lahf
daa
inc
es
mov
push
add
xor
arpl
in
mov
testb
mov
dec
adc
dec
test
popf
pop
pusha
das
jle
xchg
mov
cld
inc
sbb
jno
pop
mov
mov
jnp
popa
jb
mov
adc
subl
mov
movb
scas
mov
psubd
dec
jae
push
dec
pop
lds
cwtl
jno
insl
fmuls
and
out
dec
testl
lea
pop
jo
mov
xor
enter
aas
lds
inc
subl
sbb
sub
out
cld
cmp
sti
test
xor
mov
clc
jbe
adc
xor
ljmp
stc
cld
fld1
in
rol
push
mov
call
pusha
adc
fxch
aas
pop
or
xchg
xor
outsl
rorb
lds
shlb
cmp
sbb
mov
out
lods
sahf
mov
outsl
sub
shrb
xchg
sete
pand
sbb
or
fs
pushf
daa
fdivrs
subb
hlt
aaa
push
sbb
jmp
cmp
aam
fiaddl
pusha
push
inc
dec
mov
outsb
sbb
inc
cmp
test
add
pop
mov
enter
jnp
jnp
enter
lds
adc
xchg
stos
jmp
cld
jge
inc
test
push
test
fs
xor
out
dec
clc
in
lret
add
scas
imul
in
cltd
sub
fsubs
cld
adc
imul
add
cmp
lds
cmp
push
movsb
scas
fbstp
add
jo
imul
sbb
insl
fmuls
scas
add
mov
dec
call
mov
push
push
mov
push
and
mov
sbb
fisubrl
icebp
std
and
xor
jns
mov
rolb
cmp
sbb
fldl
cmp
ds
inc
adc
mov
scas
sub
add
dec
es
aam
out
shrb
mov
ret
push
push
lock
dec
jmp
fwait
jbe
push
mov
jnp
mov
xchg
fistps
lods
lea
fdivrl
sub
sub
inc
sub
add
push
adc
jge
cmpsb
mov
cmpsb
xor
xchg
out
fisubrl
sbb
cmp
ret
xor
jnp
jbe
in
mov
cmp
sub
adc
insb
popa
call
mov
and
std
sahf
ljmp
push
int3
cmp
cmp
int
dec
ret
scas
incb
jp
scas
mov
jns
sbb
adc
push
cmp
lcall
xchg
xor
mov
icebp
shlb
out
add
ret
repnz
insl
dec
push
pop
jecxz
xlat
mov
or
out
mov
adc
xorb
mov
inc
pop
ljmp
sti
nop
hlt
aaa
test
sahf
pop
nop
mov
dec
push
loopne
cmp
mov
mov
xchg
xchg
outsl
push
pop
jle
js
xchg
movsb
hlt
lcall
test
xchg
push
push
cltd
and
daa
std
sub
xchg
mov
das
scas
pop
scas
cmp
xchg
mov
xchg
sarl
add
and
aaa
cmpsl
daa
ret
inc
push
fimull
xor
insl
inc
or
push
mov
mov
int3
nop
cmp
sub
add
xor
xorl
sub
sbb
rorb
sub
pop
js
push
cmp
mov
xor
call
je
cmp
mov
fisttpl
dec
outsl
sti
orb
fdivl
xor
mov
sbb
insb
fdivp
bswap
mov
jl
pslld
mov
nop
xchg
les
xor
mov
roll
jae
mov
imul
xchg
dec
mov
and
dec
and
dec
dec
mov
pushf
aam
mov
shlb
test
push
cmc
dec
jle
xchg
lcall
shll
mov
stos
sub
jecxz
cmp
pop
ds
sub
in
out
stc
leave
mov
add
jns
cmpsl
leave
sbb
xor
subl
xor
inc
fidivrl
adc
adc
xor
or
adc
pop
sub
jle
xor
dec
popf
lret
push
add
sub
cmpxchg
push
inc
loopne
es
dec
into
or
pop
and
bound
ljmp
pushf
adc
jl
mov
mov
jecxz
push
cmp
lcall
or
fisttpl
jns
enter
sbbb
inc
mov
addr16
nop
or
in
add
sbb
iret
add
inc
aas
xchg
pushf
push
sbb
cli
int
in
inc
mov
mov
aaa
fisttpl
andb
repz
pop
pushf
shl
mov
dec
and
lods
xchg
icebp
inc
dec
fcoml
jns
dec
and
gs
inc
xchg
aas
out
add
ss
push
xchg
cmp
pushf
lock
scas
ds
sbbb
mov
adc
adcl
insb
push
push
dec
jmp
test
call
xchg
cmc
pop
popa
mov
jge
test
mov
pop
jg
mov
xchg
dec
lret
jle
sbb
lock
adc
lea
pop
xchg
adc
pop
inc
adc
scas
push
imul
shll
rclb
lods
jl
add
and
int3
ja
mov
idivl
arpl
xlat
movsb
push
inc
bnd
mov
lea
mov
or
in
enter
ljmp
jmp
cwtl
adc
dec
sub
push
lcall
cmp
rcll
push
pop
inc
fnsave
daa
push
in
mov
std
dec
sub
fstpt
pop
cmp
fwait
cmp
and
push
jl
repnz
insb
and
test
gs
pop
int
shrb
fistpl
in
lret
cli
popf
nop
xchg
aad
aam
andb
shlb
pop
mov
adc
es
cmp
xor
pop
rorl
and
jl
jne
enter
pop
rol
in
add
stc
leave
push
push
inc
xor
push
jne
dec
push
repz
paddq
jb
cmc
das
add
and
loope
clc
xchg
jle
into
std
sub
mov
push
pop
lahf
xchg
xchg
repz
in
fidivrl
test
cmpl
in
jp
sarl
adc
das
pop
xchg
shl
sub
pop
outsb
iret
dec
mov
cmpsl
movsl
mov
jnp
push
inc
scas
ja
outsl
addb
addr16
mov
sub
lahf
cmpsb
das
adc
fidivl
sbb
stc
das
and
mov
xor
flds
xlat
stos
xchg
inc
fmul
insb
scas
or
push
sub
ret
jbe
ja
sub
leave
add
nop
cltd
pop
push
sub
cwtl
lods
ljmp
loope
lds
jo
adc
mov
sbb
inc
into
lock
lcall
test
cmp
aam
cmp
pop
movsb
out
adc
inc
jg
pop
mov
cwtl
nop
mov
lods
inc
shrb
xchg
pop
jne
into
leave
imull
lods
dec
cmc
scas
mov
sbb
fnstcw
mov
cmp
xor
jb
mov
pop
shlb
cs
jle
dec
cmpsl
lds
and
mov
xor
mov
hlt
xlat
jnp
push
pop
push
popf
aaa
scas
loope
sub
dec
adc
ja
insb
sbb
in
fnstcw
push
and
pop
or
cmp
daa
es
xor
aam
aad
popa
inc
fwait
cmp
add
mov
jne
mov
or
pushf
out
shll
inc
loope
mov
mov
xlat
and
rcrb
scas
popf
ror
cmp
jge
dec
aad
pop
fldl
insb
mov
in
inc
ljmp
icebp
popf
adc
rclb
xlat
inc
jno
pop
test
inc
cmc
outsb
imulb
pop
adc
ljmp
xchg
jge
in
xchg
std
ja
push
bound
jbe
cmp
sbb
cwtl
int
test
add
sub
and
mov
test
fcoms
jnp
ljmp
pop
sbb
and
jecxz
jmp
mov
or
push
cmpb
imul
fs
pop
insl
add
pop
push
imul
cmp
mov
pop
sbbb
mov
pushf
lock
call
push
fiadds
xor
ss
out
fldcw
jne
dec
lods
dec
sbb
push
mov
ficompl
scas
daa
das
push
pop
sbb
cli
shrl
imul
inc
pop
aam
loop
adc
xor
in
jecxz
sbb
test
in
pop
insl
mov
mov
lods
out
add
test
adc
lock
mov
pop
nop
inc
cmc
dec
push
insb
or
ds
lds
adc
jmp
adc
in
jns
stos
rcr
dec
sar
in
out
and
rcr
mov
movsb
dec
pusha
adc
inc
loop
daa
stc
cmp
mov
dec
or
xor
ja
add
cmp
push
rcrb
mov
das
dec
sbb
repz
out
sub
ja
std
fidivrl
cmpsb
bound
dec
inc
jb
inc
adc
add
in
clc
fcoms
addr16
mov
dec
loopne
fcom
cmp
bound
jp
xchg
inc
inc
xchg
mov
cwtl
add
inc
sbbb
call
mov
mov
mov
add
sti
mov
push
push
mov
imulb
adc
test
mov
test
fwait
mov
sub
adc
into
sbb
xchg
push
xor
jnp
loope
andl
pop
cmpsb
add
xchg
aad
push
mov
inc
mov
icebp
lea
adc
out
or
mov
mov
inc
adc
out
imul
mov
push
test
push
pop
stos
int
ljmp
xor
mov
push
and
adc
mull
mov
jp
dec
push
stos
xchg
mov
mov
cmp
pusha
fnstenv
imul
int3
out
mov
mov
out
cmp
cmp
mov
cltd
xor
jmp
loope
cli
push
les
fsubl
cli
xlat
lds
movsl
outsb
jb
xchg
add
mov
dec
mov
fldenv
pop
dec
adc
in
push
js
daa
js
mov
pop
push
xchg
mov
dec
loopne
dec
stc
add
lds
ss
jp
jecxz
shrb
inc
push
inc
mov
lea
cs
leave
repnz
dec
inc
pop
repnz
imul
dec
sbb
inc
mov
ss
insl
xor
je
mov
cmpsl
add
mov
lcall
in
arpl
pop
lret
jno
mov
popf
or
jns
repz
jg
and
push
clc
pusha
pop
mov
jno
xchg
lea
gs
lret
flds
push
sbb
lds
ret
mov
jl
jg
mov
mov
aas
repnz
pop
dec
push
addb
adc
and
cld
idiv
xchg
jmp
pushf
mov
push
addl
lret
cli
mov
cmp
or
pop
push
dec
push
sub
mov
cltd
and
cmp
gs
dec
enter
cmp
and
xor
in
pop
dec
and
xchg
mov
mov
add
rcll
pop
fidivs
or
lcall
aas
lds
jmp
cmp
or
sbb
test
cld
out
notb
lahf
cmpsb
jl
mov
jo
outsl
xchg
mov
cli
push
xchg
pop
std
pop
mov
pop
sub
jmp
xchg
push
addr16
push
inc
inc
jge,pt
int3
jbe
leave
pop
in
mov
jmp
fdivl
std
sub
sbb
mov
fst
lret
mov
xchg
adc
cmp
jbe
pop
jbe
stc
dec
stos
mov
mov
sub
cmpsl
sbbl
sub
lods
mov
push
frstor
roll
lahf
push
shlb
push
andb
mov
cli
cmp
jmp
loopne
xor
sub
int
jp
xchg
xchg
aam
mov
cmp
pop
jecxz
sub
mov
adc
xchg
outsl
lock
repnz
addr16
movsl
lret
sub
xor
push
mov
mov
inc
ret
sub
and
pop
sbb
xchg
ds
mov
add
xor
jns
das
push
adc
xchg
scas
sub
imul
fstps
test
les
mov
cltd
ss
ret
jno
mov
sub
aaa
repz
rcll
ret
add
dec
dec
in
je
jae
or
or
mov
enter
jnp
and
aad
rorb
movsb
ljmp
imul
mov
nop
int
fsubrl
cld
xchg
dec
mov
xchg
lret
fadd
nop
xor
xor
and
dec
shrl
xchg
outsb
scas
inc
clc
sub
inc
sbb
insl
push
push
or
adc
adc
test
adc
sbb
add
mov
jne
fcomps
jne
lahf
pop
pop
xchg
ja
and
and
in
mov
or
daa
aad
xchg
mov
mov
imul
jp
mov
sahf
push
and
ss
clc
mov
gs
and
mov
mov
popa
aas
adc
bound
mov
cmpsl
mov
outsb
loop
js
add
fcoms
mov
cmp
in
inc
out
mov
mov
and
jnp
jbe
ret
jnp
mov
jl
arpl
aaa
sbb
dec
inc
sbb
js
fldcw
jmp
cmp
and
sarb
sbb
xor
ja
cwtl
mov
inc
shlb
test
jo
das
in
mov
test
cmp
cmp
jbe
mov
xlat
or
push
nop
js
xor
ret
push
push
push
outsl
fdivrl
testb
mov
jmp
outsb
movsb
push
add
std
ljmp
adc
xchg
xor
ficomps
je
add
imul
mov
loopne
jge
imull
scas
adc
shll
adc
inc
das
aaa
out
mov
and
shl
or
std
mov
mov
adc
gs
call
mov
or
mov
mov
xor
cmpsl
scas
fcomps
outsl
insb
xchg
mov
iret
in
icebp
pop
mov
push
adc
cwtl
mov
fwait
std
test
clc
hlt
movsl
sub
push
jl
out
and
mov
filds
sbb
mov
mov
mov
xor
aas
cs
or
aad
mov
fwait
lods
test
pop
aaa
xchg
rclb
dec
jmp
mov
sub
mov
xchg
mov
sub
xchg
cmp
sbb
into
pop
and
and
mov
push
leave
mov
clc
test
das
jne
cltd
lock
sbbl
mov
cmp
aam
jns
std
das
stos
movsl
xchg
hlt
outsb
push
ljmp
cmp
insl
jg
loopne
imul
mov
dec
enter
add
das
in
pushf
std
scas
push
mov
mov
pop
push
imul
inc
mov
dec
pop
testl
sbb
xchg
pusha
leave
sbb
cmp
cltd
lods
enter
ljmp
loop
pop
xor
pop
pop
ss
and
lea
xchg
pop
cmp
adc
cmc
push
sbb
das
clc
icebp
loopne
pusha
out
mov
ret
scas
cmpsb
adc
mov
or
in
aas
int
xchg
sbb
or
xor
inc
add
add
inc
je
jo
fwait
xor
add
pusha
inc
mov
aad
ret
xor
mov
jo
push
lret
test
xchg
hlt
inc
call
jp
loopne
pop
ret
dec
jb
or
dec
repz
imul
test
shll
mov
loopne
mov
daa
fidivl
std
xchg
aad
and
push
jp
mov
lock
lods
dec
or
das
sbb
fs
mov
insl
nop
clc
add
mov
xchg
jecxz
push
xchg
and
xchg
and
adc
jns
cld
ret
push
mov
ret
nop
cltd
imul
and
xchg
rorb
jg
xchg
pop
mov
aad
notb
aaa
hlt
into
rolb
or
sbb
mov
dec
daa
push
btr
add
push
hlt
push
mov
int
mov
xor
in
jle
add
scas
and
inc
mov
pop
push
sub
mov
cwtl
out
jmp
subl
push
out
inc
cltd
xlat
cmpsl
cmpsl
inc
and
cmpsl
ret
movsl
lods
sti
clc
stc
outsb
in
jae
sbb
mov
lods
sbb
clc
xchg
fistps
inc
sbb
pop
and
push
pusha
pop
xchg
mov
xchg
sti
mov
push
or
mov
adcb
lods
jl
push
jns
nopl
push
sbb
idivl
pop
dec
outsb
or
push
cmc
les
ficomps
sbb
adc
dec
stc
popf
cmp
mov
and
mov
cltd
imul
dec
fsubrl
dec
dec
inc
adc
inc
js
insb
push
adc
mov
sti
push
push
mov
mov
jl
aam
pop
sbbl
pop
xchg
cltd
pop
aaa
arpl
sbb
xchg
clc
movsb
loope
mov
and
shlb
dec
mov
or
or
outsl
push
in
pop
sub
xchg
and
and
jp
xlat
xlat
sub
inc
cmpsl
data16
push
cmc
inc
iret
push
ret
mov
int3
sahf
pusha
xor
addl
out
stos
gs
push
test
jne
cmp
add
ja
cmp
lret
push
ss
push
mov
pop
mov
dec
scas
jbe
pop
jns
push
mov
cltd
mov
loope
pop
or
mov
fisubrs
add
ror
push
fbld
xchg
push
fdivrl
push
stc
and
cmp
mov
test
popa
pushf
outsb
lds
jns
and
xlat
mov
lds
mov
loope
xlat
lret
mov
push
xchg
roll
cmp
ds
push
jae
stos
push
pop
pop
iret
mov
data16
test
clc
fisubs
add
xchg
mov
stos
les
jp
pop
inc
dec
jl
jl
push
add
fmull
pop
mov
jp
testl
adc
aad
rorl
scas
dec
push
jp
mov
mov
mov
sti
repz
dec
jl
sbb
pop
test
outsl
pop
push
insb
enter
dec
inc
inc
push
mov
scas
pop
xchg
imul
mov
in
xchg
sbb
mov
ret
jae
add
sbb
jae
jl
mov
ret
js
push
pusha
outsb
or
mov
repnz
popl
sbbl
inc
mov
rcll
add
mov
adc
and
ss
or
xor
mov
add
xor
std
scas
popf
push
or
lods
clc
or
out
cmp
jl
jp
int
testb
out
nop
jmp
sbb
jno
push
push
push
mov
lock
lcall
lods
divb
addl
or
cmpsb
outsl
lcall
js
jb
das
test
adc
fwait
sbb
pop
and
data16
mov
outsl
sub
es
mov
xor
xchg
add
add
xor
dec
gs
repnz
xor
popa
out
xchg
add
xchg
mov
mov
fstpt
add
jg
cmp
pop
pushf
or
out
pop
out
fs
jbe
add
jg
movsl
or
inc
xchg
jp
fcmovnbe
rcll
dec
sti
ss
xor
popf
es
xor
dec
and
vandnps
mov
and
fbld
xchg
jnp
jns
or
icebp
into
outsl
push
fimull
mov
add
out
jae
je
in
pop
jb
mov
test
mov
cmc
lcall
push
wrmsr
out
filds
jl
mov
in
lods
call
fsubr
mov
sub
sti
je
jne
aaa
xor
hlt
aam
mov
dec
dec
mov
push
lods
xor
insl
imul
fmuls
sbb
sbb
ret
and
dec
or
aad
adc
rol
roll
shlb
lcall
cmp
pushl
stos
test
nop
je
adc
out
jle
test
stos
in
ja
sub
push
adc
sub
xchg
xor
cmp
andl
ljmp
push
mov
sub
loope
sbb
fcoms
xor
xor
jmp
in
sub
je
adc
fimuls
daa
inc
mov
shlb
push
jo
cltd
mov
rclb
cltd
aam
adc
xor
roll
pop
int3
push
push
mov
add
adc
pop
sbb
dec
push
mov
shlb
sbb
cmp
imull
outsb
shll
inc
daa
inc
movsb
cltd
jle
sbb
imul
inc
arpl
scas
dec
mov
notb
sahf
daa
push
lods
push
and
sub
call
pop
jmp
ret
out
shl
xchg
mov
adc
or
xchg
jmp
mov
push
std
out
addl
inc
dec
jno
movb
inc
imul
sub
xor
stos
fsts
lock
add
mov
or
aaa
and
stos
ret
je
popf
xor
push
cli
outsl
xlat
ret
and
test
pop
dec
push
pop
movsl
lock
inc
xor
pop
loopne
mov
and
jnp
xchg
or
jp
and
mov
add
mov
xor
outsb
jns
out
pop
or
adc
and
or
pop
imull
hlt
fdivp
adc
hlt
sbbb
les
insb
shr
popf
out
sbb
int3
dec
xchg
movb
into
cmp
sahf
ljmp
nop
cld
or
or
mov
xchg
or
fildll
les
mov
and
or
mov
mov
mov
xchg
and
movsb
popa
popa
push
shlb
icebp
add
imul
ficomps
mov
lret
adc
sub
or
pop
mov
lcall
aaa
fcoms
imul
ret
inc
push
test
mov
sbb
inc
lds
imul
aam
movsl
push
lods
adc
imul
mov
sarb
mov
ret
add
shr
push
jl
pop
test
cmpsl
out
fwait
hlt
rclb
push
into
movsl
xchg
mov
xor
rdmsr
push
movsl
addr16
push
outsb
imul
cmc
xor
imulb
ljmp
pop
dec
mov
test
mov
dec
outsb
sahf
xchg
jp
into
push
adc
nop
jno
fwait
test
pop
push
sbb
push
fsubrl
mov
lret
sub
lods
cs
std
sub
push
mov
mov
fcomp
push
fistl
ss
sub
arpl
or
sti
cwtl
movsb
pop
sti
popf
xchg
mov
lds
rcl
adc
and
lods
dec
sbb
aam
push
mov
loope
sbb
jp
xchg
fsts
mov
dec
sub
xchg
loop
mov
push
es
ja
cmp
push
int
sub
xchg
rcl
insb
decl
add
adc
add
jp
sbb
sbb
popa
aas
loop
pop
es
popf
std
stc
imulb
pop
jnp
stc
push
push
cld
jg
arpl
clc
testl
test
mov
dec
divb
add
enter
insb
and
mov
ret
imul
jmp
xchg
dec
inc
and
popa
fidivl
mov
sub
jnp
pop
arpl
push
fwait
add
jmp
int3
movsb
push
inc
punpckldq
in
movl
jae
aaa
adc
sbb
shrb
pusha
xor
fcompl
sbb
xchg
loope
xor
pop
and
or
pop
push
les
mov
test
mov
inc
test
adc
dec
lret
mov
jae
shlb
shrb
nop
mov
or
jp
mov
into
imulb
inc
lcall
out
cmc
sbb
push
popf
and
dec
mov
lds
sbb
xor
jb
adc
fisubrs
mov
xchg
push
sbbb
enter
iret
mov
jp
fld
sub
mov
out
lcall
cmp
out
das
lahf
out
cmpl
das
test
out
fidivs
ret
push
cmp
jae
sbb
mov
jmp
mov
xchg
cmp
cmp
nop
dec
pop
or
jo
adc
fldenv
push
leave
dec
mov
stos
sbb
iret
pop
sbb
xchg
aad
js,pn
sub
mov
lock
aaa
dec
imull
or
jno
lods
fxrstor
cwtl
mov
lds
sbb
nop
xlat
mov
data16
pop
andb
adc
mov
shll
mov
xchg
gs
ret
pop
icebp
daa
dec
jo
mov
lret
ret
pop
sbb
add
adc
mov
sub
lret
test
sahf
xchg
enter
clc
dec
mov
das
fdivrs
xchg
pop
or
dec
lret
fsub
adc
adc
fdivl
stos
ffreep
stos
pop
push
add
push
arpl
push
flds
repz
mov
push
pop
lods
dec
js
pop
ret
jno
mov
cmp
sbb
mov
leave
lods
jl
insb
sbb
test
in
pop
cltd
xchg
ds
or
lods
icebp
popf
sub
in
gs
int
mov
nop
or
ljmp
push
cltd
jnp
sub
call
clc
cltd
js
lods
fnstsw
push
out
xor
int3
xor
ret
ja
and
mov
dec
mov
sbb
lcall
sub
xor
test
lcall
adc
ljmp
sub
scas
jne
inc
cmp
inc
push
sahf
test
sub
sbb
xchg
dec
inc
jl
xchg
bnd
or
cmp
dec
pop
and
inc
outsl
xchg
arpl
fs
imul
jb
leave
movb
pop
jbe
fdivs
push
stos
jae
sub
add
jp
cld
mov
sbb
push
mov
and
sub
daa
out
xchg
and
pusha
cmp
ss
xchg
jno
and
fs
int3
arpl
and
insb
fisubs
push
or
cwtl
pop
lahf
popa
fidivl
pop
sub
int3
fstps
mov
jecxz
inc
fistpl
rorb
out
add
mov
into
imul
filds
pop
mov
inc
ror
popa
repnz
loope
push
pop
cli
imul
lret
pop
add
inc
scas
icebp
dec
jge
mov
pusha
jg
inc
inc
lcall
jb
imul
fisubs
cld
pop
jp
mov
sbb
cmp
fists
movsb
inc
fstp
in
push
xchg
scas
xchg
in
and
fdivrp
or
inc
pop
fdivp
ljmp
testl
and
cmpsl
pop
sbb
and
jns
gs
ss
dec
push
loop
divb
imul
test
pop
and
mov
aaa
lret
out
xor
outsl
inc
cli
mov
fbstp
push
insl
scas
and
cmpsl
repz
cmp
outsl
mov
shrd
testb
outsb
or
leave
test
das
sbb
and
dec
mov
rolb
stos
or
pop
leave
iret
push
xor
sub
cmp
dec
lock
cmp
js
jne
test
xrelease
stc
mov
pop
ficoml
les
ficoml
dec
arpl
sub
and
and
mov
push
jns
cmp
ja
dec
add
inc
fsubrs
lds
outsb
in
shl
sub
add
jmp
adc
test
stos
cmp
int3
push
pop
ljmp
add
sti
inc
sub
sti
cmp
insl
sbb
mov
cmp
scas
and
enter
data16
xchg
mov
pop
negb
iret
ret
mov
push
lret
loopne
or
push
pop
and
xlat
add
and
loope
jl
divb
insb
outsb
mov
and
icebp
in
cmpsl
nop
imul
add
mov
xor
add
scas
repz
mov
mov
mov
lods
ljmp
aas
push
dec
cli
dec
lods
jmp
pop
fucomp
ret
test
cmp
rorb
add
mov
mov
lea
sub
jmp
dec
push
mov
hlt
cmpsl
in
hlt
mov
jle
cmp
xchg
and
sahf
call
shll
js
adc
stos
nop
js
lret
in
push
jae
push
inc
cmp
push
mov
jp
jge
cmove
xor
out
push
mov
add
mov
sub
data16
jnp
cmp
ds
xchg
sub
pop
fisubs
cwtl
clc
insl
sub
push
outsb
je
mov
pop
inc
push
add
test
test
scas
and
test
shrl
fwait
xor
xchg
jg
sti
cmp
mov
lods
push
xor
xchg
jp
jecxz
enter
icebp
ljmp
and
out
sub
xchg
aad
mov
imul
shlb
movsl
sbb
xchg
ret
call
mov
mov
push
mov
push
mov
sbb
push
jecxz
xorl
mov
insl
nop
xor
cmp
adc
inc
sub
insl
sbb
scas
imul
cmpsb
mov
pop
cmp
add
loop
mov
adc
mov
icebp
add
jl
daa
jge
test
mov
ljmp
dec
jnp
loopne
lcall
push
or
adc
jno
sbb
push
dec
flds
les
fmul
inc
aam
inc
pushf
pop
inc
mov
add
pop
rcrb
and
pop
push
fs
aad
loopne
pushf
imul
repz
and
out
je
leave
mov
jne
add
pop
xor
hlt
pop
mov
movsl
mov
les
dec
stos
fists
mov
sub
sub
push
loop
int3
jle
push
pop
popf
xor
iret
les
push
dec
fidivs
mov
aad
lcall
dec
lret
jl
lcall
add
movsl
scas
inc
pop
sbb
stos
jb
push
ljmp
out
mov
mov
ret
bnd
js
xchg
insl
jns
jae
inc
inc
sbb
add
jecxz
pop
movsl
jge
and
movsl
loope
cmpsl
xchg
hlt
pop
repz
negl
mov
add
pop
ficomps
sbb
inc
and
lahf
repnz
jp
jle
cmp
lcall
or
cs
or
sub
outsl
cmp
aas
div
sbb
sti
xchg
outsb
rclb
call
call
xlat
sbbb
int3
push
nop
out
bound
jp
add
shl
test
aad
sub
cltd
iret
pop
mov
shll
lods
popf
xlat
pusha
push
sbb
xorb
adc
mov
mov
cmp
dec
enter
dec
mov
pop
xor
lahf
adc
mov
inc
loopne
sub
inc
ret
inc
adcb
iret
mov
scas
push
cwtl
rorl
pop
ficomps
popa
fdivrl
push
pop
ljmp
divb
cltd
xchg
add
xchg
ss
mov
cmp
or
push
out
loope
sbb
pop
or
test
xor
out
jl
jo
lret
loop
insb
inc
stos
cmpsl
lock
stos
sti
cwtl
sbb
inc
in
push
int
add
cmp
fcomps
mov
jmp
enter
mov
insl
inc
sti
insb
in
jecxz
lock
cld
out
inc
call
xor
outsb
pop
push
lahf
addr16
sbb
cmp
nop
ss
inc
iret
adc
lods
dec
mov
stos
adc
ret
scas
xchg
in
je
in
loop
mov
es
imull
incb
sub
jmp
je
or
ljmp
mov
mov
add
in
jbe
out
mov
mov
repnz
mov
fstl
dec
mov
mov
adc
test
jbe
jno
repz
xor
outsl
dec
call
pusha
enter
pop
jl
lret
xor
and
scas
sbb
push
popa
pop
mov
in
je
dec
jecxz
pop
in
jle
dec
jecxz
testl
in
or
das
fcoms
pop
roll
fcomp
add
daa
clc
pushf
mov
pop
xchg
addb
adc
adc
mov
lret
mov
int3
btc
mov
icebp
jb
adc
cs
test
jno
xchg
es
or
jmp
mov
xor
dec
mov
aam
pusha
mov
fimuls
loop
outsl
xchg
outsb
ljmp
cmp
int
into
pop
jnp
fiadds
push
xor
loopne
pop
test
bound
jno
test
lea
push
mov
add
xchg
dec
loop
in
dec
cs
iret
lods
fwait
cli
das
pop
es
pop
pop
fidivrl
js
push
inc
xchg
inc
test
xlat
jae
sbb
jae
mov
mov
push
sub
xchg
inc
data16
rcl
fadd
cmp
jbe
popl
xchg
out
jmp
lock
push
and
mov
mov
mov
cs
mov
lret
cmp
sti
push
or
pop
pop
dec
add
add
fs
pop
cld
std
and
jae
decb
movsb
lea
sbb
ds
sahf
mov
mov
cwtd
adc
dec
mov
cmp
cwtl
sub
or
in
xchg
jl
mov
sbb
inc
push
lret
pop
xchg
and
xchg
sub
jno
sub
es
scas
xchg
or
fistps
dec
dec
cmp
in
mov
test
jmp
test
je
mov
call
in
or
js
ja
pop
lcall
inc
sbb
adc
inc
int3
push
or
pop
mov
push
sub
outsb
roll
mov
cmp
sti
rolb
mov
pop
into
cmp
mov
mov
inc
jno
add
leave
sbb
inc
inc
mov
or
faddl
mov
ret
jle
mov
shll
lea
lods
bound
cmp
loopne
mov
dec
sub
fcoml
jge
dec
mov
and
mov
cs
aad
pop
test
adc
in
aad
repnz
push
cmp
push
inc
in
mov
mov
fst
movsb
and
lods
loop
jo
mov
push
sbb
call
xor
pop
addr16
jge
mov
mov
inc
mov
sti
cli
aaa
mov
push
dec
imul
inc
stc
sbb
sbb
aad
fcoml
jno
out
push
out
pop
je
xchg
cwtl
jns
in
xchg
jecxz
mov
sub
popf
pusha
pop
or
push
fisttpll
and
xor
cld
subb
inc
lds
xor
gs
mul
adc
pop
and
or
pop
fstps
test
outsl
xor
int3
pop
inc
push
inc
cmpsl
rcrb
loop
jne
inc
mov
sbbb
es
push
jl
jge
mov
fwait
inc
daa
movl
push
js
cmp
mov
loopne
aas
jne
dec
cld
xor
out
cmp
fisubrl
stc
cld
pop
sbb
andb
add
mov
pop
aam
test
int3
add
sub
xchg
cs
divb
push
dec
lcall
leave
add
loop
mov
xchg
pushf
sub
lahf
inc
jnp
add
add
push
test
in
aas
outsb
xor
aas
daa
inc
rcrl
jno
lds
mov
in
and
jl
lcall
gs
loopne
cs
cli
mov
scas
cmp
addr16
mov
cmpsl
sahf
imul
imul
cltd
adc
mov
xor
mov
jne
sbb
int3
add
mull
shlb
sbb
cmp
mov
dec
jne
test
lret
xor
push
xchg
push
icebp
leave
and
mulb
jne
add
ret
xchg
gs
cmpsl
xchg
fdivrl
push
xor
cmpsb
inc
mov
adc
aad
dec
and
mov
ss
cmpsl
mov
das
add
xorb
add
and
ret
xor
jl
pop
jp
mov
pop
std
and
dec
or
cmpsb
aaa
adc
mov
repz
sti
jnp
mov
popa
push
cmc
cmpsl
call
jne
mov
adc
inc
fnstenv
movsb
lret
jb
mov
sbb
cmp
imul
add
sbb
insl
jp
xchg
jb
push
mov
jmp
xchg
and
mulb
dec
xor
out
mov
ror
lahf
int
dec
jmp
adc
rol
push
lds
mov
aaa
mov
stos
xlat
sahf
fsubrl
jae
test
xor
push
mov
fimull
lret
and
mov
mov
sarl
scas
adc
push
mov
fs
mov
mov
and
jns
fistpl
mov
mov
xor
std
mov
iret
imul
rcr
adc
stc
xlat
push
xorb
dec
bnd
in
cwtl
mov
jbe
fstps
and
dec
push
ret
xchg
mov
pop
test
fwait
sub
lods
inc
pop
xchg
mov
out
in
lcall
xor
outsl
jecxz
pop
sub
outsb
mov
lret
rcrl
add
aam
xchg
repz
mov
dec
cmpsl
test
inc
or
pop
hlt
fnclex
adc
mov
test
pop
mov
mov
sbb
push
icebp
addr16
rorb
es
addr16
loop
ss
scas
cld
mov
or
testl
negl
les
bound
add
popa
xlat
out
sbb
test
pop
mov
inc
fcomps
jge
bound
sahf
mov
lods
sub
enter
into
popf
cmp
sahf
push
cmp
xor
lret
or
pop
and
sbb
jg
add
sar
fwait
sub
cmp
ljmp
int
test
clc
mov
or
and
mov
xchg
stos
adc
cmp
das
jge
xor
xor
mov
adc
add
int
rcrl
mov
shl
cmp
mov
cld
adc
dec
bound
aaa
inc
add
loop
mov
or
inc
stos
test
cltd
popf
les
push
je
icebp
xor
or
pop
cmp
cmp
divb
mov
xchg
adc
mov
jle
repnz
mov
int3
and
dec
orl
xor
stc
jns
adc
add
push
fcoms
xchg
js
add
mov
add
push
add
inc
push
repnz
mov
in
or
push
push
fwait
xor
lret
and
mov
xchg
je
adc
pop
and
jne
fwait
out
inc
xchg
mulb
ficompl
pop
jl
imul
std
arpl
jae
pop
dec
sub
jmp
mov
push
and
lds
push
mov
call
sub
in
mov
std
lock
dec
adc
into
and
xchg
pushf
cmp
ss
hlt
push
std
pop
shrl
fyl2x
cmpsl
sbb
xchg
popa
call
jmp
inc
in
outsb
std
xor
cwtl
leave
shrl
loop
inc
int3
pop
mov
sbb
fld
negl
loopne
out
sub
cld
jp
fsubs
sbb
mov
dec
inc
cmp
push
mov
add
and
sub
xor
mov
rolb
lret
mov
jge
ja
adc
cltd
push
pop
pop
imul
data16
ret
jl
and
adc
mov
mov
es
xor
push
xchg
imul
sbb
mov
push
mov
dec
mov
xchg
leave
jle
jo
inc
leave
mov
iret
pop
mov
dec
in
cmp
xchg
mov
rclb
in
mov
push
cmp
pop
jo
pop
inc
jg
fists
push
cmp
inc
in
xchg
cmpb
cmp
or
mov
les
int
jmp
fnstsw
cmp
js
inc
ret
in
fidivrl
sub
dec
and
jge
dec
mov
popf
icebp
add
add
pop
jp
cmc
rcrl
shll
ds
push
pushf
fdivrl
jg
mulps
fisubl
std
sub
inc
pop
hlt
cs
mov
imul
mov
cmc
jne
adc
push
cmp
outsb
div
inc
mov
push
inc
inc
lret
push
jne
repz
pop
mov
test
ljmp
inc
sub
add
outsl
mov
mov
test
ret
inc
cld
jecxz
pop
jae
lahf
mov
ss
push
add
jmp
test
es
sbb
iret
in
cli
mov
js
jle
addb
cmpl
jp
aam
jns
mov
and
dec
sub
jl
cwtl
add
lea
cmc
adc
pop
or
lock
out
mov
dec
jle
inc
int3
jge
jmp
sarl
mov
cmp
call
cltd
or
pop
push
lret
stos
mov
and
mov
lret
shll
and
movswl
std
pop
cmp
adc
ss
ljmp
hlt
pusha
bound
push
in
fisubl
or
pop
test
outsl
out
xlat
add
push
dec
cltd
or
test
je
test
jp
pop
xlat
xchg
fcompl
sub
vminss
cmp
aam
test
push
js
adc
mov
push
in
cmp
cmc
lahf
imul
inc
push
gs
xchg
insb
pop
xchg
dec
icebp
stos
and
add
loopne
push
out
cmp
lds
aas
int3
outsb
xchg
xchg
into
push
dec
data16
aad
rcl
daa
aad
jae
hlt
lea
jnp
xchg
mov
sbb
inc
sbb
xchg
fistpll
sub
enter
fsts
test
mov
das
cmp
in
rcrl
push
faddl
xorb
pop
ret
out
mov
dec
adc
and
repnz
iret
imul
in
stos
ret
mov
dec
outsb
aas
jo
xadd
in
mov
cwtl
mov
outsl
sbb
std
jle
and
add
popf
bnd
dec
out
jle
insb
mov
ja
out
jg
dec
xchg
pop
jl
or
adc
sti
push
imul
adc
orb
jge
mov
leave
outsl
jecxz
imul
dec
pop
aam
daa
cmp
outsb
add
adc
mov
add
rorl
or
out
xchg
lock
clc
inc
pop
sub
mov
movsl
inc
sub
outsl
inc
loopne
sbb
add
inc
pop
popf
inc
adc
jo
sub
mov
out
repnz
add
and
mov
xchg
repnz
movb
pop
jmp
pushf
std
fxch
cltd
jp
mov
into
dec
leave
sahf
sbb
inc
dec
mov
loop
aaa
mov
testl
or
cld
or
xchg
aaa
jle
lds
pusha
dec
fnsave
add
lcall
jg,pn
pop
pop
dec
mov
cs
fcoml
hlt
outsl
int
leave
xchg
mov
iret
jae
and
jae
dec
jnp
sbb
push
testl
sti
jmp
or
sbb
push
popa
cmp
inc
rep
jp
test
xchg
mov
inc
dec
mov
test
mov
hlt
rclb
push
mov
inc
adc
adc
dec
ret
mov
fsts
daa
push
push
fs
mov
mov
cmc
lret
mov
mov
gs
stos
fdivrs
popa
lret
and
push
sbb
lret
sub
push
xchg
mov
cld
popa
enter
pop
add
xor
sbb
sbb
daa
ss
lret
dec
jge
mov
cmc
add
pop
pusha
cmp
lds
jmp
xchg
and
int
out
andl
or
les
fdivl
mov
jb
rep
add
or
or
mov
add
inc
cmp
das
mov
and
pop
popf
mov
mov
inc
mov
movsb
push
cmovns
cmp
nop
jne
jecxz
inc
fdivl
xchg
pushf
pop
data16
dec
push
leave
lcall
imul
test
data16
jl
jbe
xchg
pop
sbb
cmp
outsl
cmp
pop
xor
push
cli
enter
lret
add
jg
ljmp
dec
mov
jge
pop
pop
bound
push
adc
cmp
push
push
push
mov
cmp
push
aam
jb
pushf
mov
sbb
mov
out
cs
js
repz
xchg
sbb
lret
mov
cmpsl
sbb
xor
and
popa
nop
stos
movsl
dec
dec
push
jl
and
or
and
cmp
enter
cmp
and
aas
pop
mov
mov
aad
clc
call
jg
mov
scas
ja
lea
sub
jb
lods
insl
inc
add
cmp
xor
lea
or
push
mov
aam
popa
jecxz
inc
sbb
dec
push
cltd
mov
cmp
cwtl
icebp
or
fistpll
jg
xor
xor
pop
cmpsb
adc
loop
imul
jg
pop
das
call
or
mov
xlat
push
adc
adc
push
aam
mov
cmp
cmp
rcrl
xchg
dec
sub
push
ds
out
cld
cltd
aad
push
push
add
in
or
stc
fwait
clc
inc
pop
jo
out
gs
js
and
push
push
rol
out
icebp
repz
jno
out
or
std
iret
outsb
test
movb
add
aad
das
mov
sub
xchg
int3
fldt
sub
sbb
in
push
inc
in
mov
jne
pop
or
or
pop
cmpsl
pusha
sub
fbstp
insl
je
mov
mov
jge
mov
dec
and
xor
push
mov
jo
fwait
add
jp
mov
rol
std
loope
out
cmpsb
les
or
fsubs
sbb
out
test
add
jne
dec
shrl
shrl
pop
jecxz
fistpll
adc
mov
stc
outsb
je
mov
ds
push
mov
xor
and
in
jb
mov
sub
dec
xchg
adc
push
pop
or
mov
fidivs
pop
inc
shrb
scas
jno
cmp
xchg
push
rclb
add
mov
dec
shll
jbe
ljmp
mov
lods
inc
pop
lret
popa
shll
aas
addb
xchg
leave
mov
pop
bnd
inc
dec
mov
pop
aaa
outsl
xor
lret
jg
nop
jmp
aas
jno
pop
cmp
cwtl
xchg
xor
out
lods
jmp
xlat
push
rol
cld
sti
stc
in
test
xchg
stc
inc
push
iret
pop
push
out
pop
pop
iret
out
xchg
mov
pop
call
imul
inc
xchg
rolb
movsb
xchg
sbb
jno
test
add
and
inc
push
insb
mov
jge
lahf
and
gs
xlat
cmc
shll
push
dec
push
cmpsl
sub
cmp
lods
add
jmp
rorb
push
leave
fsubrl
addr16
insb
js
cld
or
cmpsb
mov
add
and
sahf
pop
push
fsubs
xchg
loope
inc
popf
or
push
adc
pusha
jns
dec
dec
xor
or
mov
add
inc
rolb
call
mov
sbb
jns
dec
add
insl
nop
xor
into
pushf
inc
dec
fnstenv
jae
andl
nop
mov
daa
jge
mov
lods
adcl
ja
mov
lahf
sbb
push
addr16
stos
dec
icebp
pusha
mov
cs
pusha
test
clc
dec
jl
mov
and
mov
or
pop
dec
mov
ficompl
daa
movsb
scas
aad
pusha
mov
pop
dec
xchg
xchg
out
jmp
sbb
dec
popa
sub
mov
and
push
in
mov
add
jb
popf
ds
cmc
addr16
adc
into
cmp
or
enter
out
push
jge
fisttpl
jno
lds
xchg
cltd
leave
push
je
dec
or
jp
mov
and
sbb
adc
idiv
outsb
push
push
jp
lock
out
daa
cmpsl
xlat
xor
mov
cmp
js
mov
out
test
dec
iret
mov
notb
pushf
adc
hlt
pop
push
mov
xchg
add
ret
hlt
pusha
cmpb
sub
pop
push
dec
outsl
fcoml
xchg
pop
inc
mov
lock
aaa
xchg
push
pushf
daa
gs
cmp
movsb
call
in
mov
movsb
popf
insb
repz
cmpsb
shrl
xor
dec
loope
mov
shlb
leave
mov
inc
adc
gs
mov
daa
cmp
leave
pushf
fimull
xchg
insl
dec
in
outsl
mov
pop
popf
add
mov
sub
cmpsb
mov
xchg
pop
fbstp
orl
fucomip
int
adc
sub
lret
sbb
cs
pushf
outsb
cmp
mov
aam
arpl
cmp
fisttpll
out
mov
push
sbb
add
push
mov
fisttpll
icebp
jnp
sbb
mov
and
pushf
out
dec
xchg
aaa
mov
into
and
ja
movsb
popa
in
jl
and
sub
and
mov
xchg
ljmp
fisubrl
fnsave
rcrl
negl
mov
sbb
inc
jb
pop
mov
test
les
push
gs
insb
sbb
xor
pushf
cmp
pushf
test
push
mov
lea
xor
mov
dec
fadd
sbb
add
fldenv
jecxz
je
or
ja
adc
jg
sahf
mov
sbb
mov
push
jns
pusha
fsub
jmp
fsubs
mov
cmc
insl
ss
pushf
adc
das
pop
cmp
mov
jmp
sbb
mov
jns
or
jo
mov
inc
das
dec
clc
xchg
dec
stos
les
add
pop
jbe
icebp
push
xchg
push
dec
sub
pop
das
inc
in
and
test
xchg
call
jbe
inc
sub
sbb
dec
adc
adc
ret
or
inc
fs
pushf
mov
rolb
pop
int
cmp
xchg
jae
dec
adc
xchg
inc
push
pop
pop
icebp
stos
mov
inc
cmp
mov
mov
pminsw
sub
pop
mov
jmp
lcall
jo
movsb
lahf
outsb
inc
pop
mov
andb
adc
daa
sbbl
pusha
jae
aas
mov
nop
pop
cmp
loop
lcall
jns
jno
cld
sub
sub
das
loop
inc
adc
mov
out
jl
mov
inc
sarl
pop
mov
repz
divl
fldl
and
not
xchg
nop
leave
aaa
and
and
mov
jmp
xor
and
adc
movsb
insb
repz
adc
shrl
add
fisubl
xor
mov
sahf
pop
jns
aas
xor
mov
scas
scas
mov
inc
hlt
add
pop
jp
adc
dec
insl
or
out
arpl
std
rorl
into
pop
stc
lcall
inc
jg
les
mov
xchg
push
stos
xchg
adc
mull
nop
add
inc
pop
xchg
push
cmp
lcall
cmpl
push
fnstcw
inc
ja
inc
dec
rcrl
imul
or
mov
push
xlat
daa
addl
loope
sub
xchg
imul
cmp
mov
push
adc
loopne
mov
cmp
rclb
rcrl
cmc
ds
lcall
sub
mov
mov
scas
xor
mov
sub
mov
movsl
fcmovb
mov
fprem
mov
push
inc
inc
push
add
cmp
out
adc
imul
int3
xchg
mov
stc
repz
lea
pop
xchg
setbe
rcrb
sub
cs
hlt
sbb
jle
cwtl
push
shrl
scas
sahf
sub
jl
lret
mov
jb
fs
cwtl
and
sub
je,pt
mov
sbb
adc
repnz
fdivl
xor
aam
mov
fwait
xchg
aam
mov
stos
pushf
or
iret
ljmp
jno
gs
sbb
add
addr16
inc
aam
mov
adc
mov
sti
inc
xor
rorl
cltd
ja
mov
ret
mov
pop
push
mov
in
pop
test
pop
movsb
dec
push
push
mov
sbb
pop
sub
push
int
cld
decl
mov
push
cs
je
or
repz
addl
adc
test
in
cmpsl
inc
sarl
lds
stos
fsubrl
in
pop
lods
int
sbb
push
addr16
and
cli
mov
aad
cmp
add
fcoms
fildl
or
or
in
stos
out
lds
loopne
aad
sub
pop
cld
cmp
aam
or
hlt
scas
std
gs
adc
fsubs
push
std
repz
je
call
push
adc
push
cmp
test
rcll
pusha
dec
xor
or
aad
std
imul
ret
sti
jnp
and
mov
sbb
mov
mov
adc
mov
scas
xorl
add
lcall
push
loope
test
jle
int
lds
lds
xchg
sub
push
add
inc
sub
xor
pop
stc
sahf
andl
jb
cmp
xor
push
sbb
cmp
xor
lock
das
add
sbb
mov
cmc
outsb
and
ret
inc
pop
add
jo
dec
dec
xchg
mov
fistpll
push
add
cmpsb
out
jnp
jo
and
push
xchg
jae
je
jo
shrl
shr
cmp
fsubs
bnd
and
jge
pop
inc
subl
mov
add
ss
mov
xlat
or
xor
push
scas
mov
idivb
push
fiaddl
mov
fnstsw
lret
insl
mov
leave
lcall
sti
stos
mov
out
or
lcall
scas
jg
push
mov
not
xchg
cs
push
sub
mov
or
or
ljmp
pusha
fdivl
xorl
outsl
pushf
stc
xchg
lds
or
ret
mov
sub
cld
pop
pop
adc
lcall
pop
sbb
inc
ficomps
cmp
movsl
rcl
xchg
aas
popa
adc
sbb
push
sbb
iret
lcall
or
popf
sub
out
stc
pop
sub
xchg
stc
and
sbb
test
or
dec
sbb
and
adc
add
jo
inc
mov
fnstsw
icebp
test
cmpsb
fildl
insb
fisttps
daa
outsl
es
dec
or
xchg
jno
pop
les
lret
rcrl
je
incb
pusha
repz
or
mov
adc
loop
inc
mov
adc
js
push
cli
mov
adc
push
push
scas
out
dec
lea
jnp
fwait
inc
push
dec
call
mov
ljmp
adcb
mov
cltd
insb
jo
mov
inc
arpl
call
leave
jg
aas
sbb
push
out
add
push
or
inc
sub
mov
gs
sti
mov
xchg
sbb
andb
insl
out
lahf
shrb
popa
push
pop
push
sub
or
jecxz
pusha
movsb
jecxz
lods
dec
ja
cs
mov
dec
lods
outsb
dec
xor
add
dec
dec
add
dec
push
lods
int3
pextrw
stos
mov
sbb
pop
adc
fstpt
cmpsl
div
fs
daa
dec
jbe
push
mov
jg
or
out
cmp
movsb
roll
mov
int3
mov
jo
in
sbb
mov
rep
sahf
xor
aaa
lods
in
shrb
pop
mov
xchg
add
xchg
mov
adc
push
shlb
repnz
mov
test
jne
icebp
mov
in
push
out
sbb
xor
mov
out
fdivs
mov
or
shlb
dec
adc
jb
cltd
int
lods
mov
mov
lods
mov
lahf
jne
sbbl
cmpb
mov
aad
push
repnz
js
jns
leave
pop
xor
pushf
inc
inc
mov
jl
xor
add
andb
pop
adc
mull
subl
test
ljmp
jno
cld
mov
pop
mov
jg
roll
or
lcall
sahf
ja
cmp
cmp
adc
loope
add
test
mov
pop
jbe
sbb
xchg
fisubl
sbb
xchg
and
or
test
out
arpl
pop
and
mov
das
out
in
push
mov
jl
dec
cmp
cli
dec
out
dec
mov
fimuls
push
xor
in
daa
push
and
sub
push
xchg
mov
mov
sub
orl
push
stos
sbb
cmpl
adc
scas
add
sbb
imul
jne
in
dec
or
xor
pop
jae
push
adc
inc
shll
fcmovb
les
popa
pop
insl
xorl
out
jo
dec
repz
jne
paddusw
fnstenv
sbb
jae
testb
mov
test
mov
sbb
fimull
mov
les
xchg
push
outsl
aad
push
cmp
stc
fisttpl
shll
mov
mov
pop
add
mov
and
fdivrl
inc
xor
dec
mov
dec
adc
add
xorl
lods
mov
sub
push
pop
ret
iret
mov
mov
adc
jecxz
int3
ret
cli
and
sub
lret
xor
add
inc
mov
xorl
cmp
jb
lods
xchg
sbb
and
add
inc
xlat
jne
mov
cmc
inc
loop
cmc
add
sbb
cmp
sbb
ds
cld
call
pop
sbb
pop
sbb
je
inc
cmc
xchg
fs
fildll
out
insl
pop
mov
leave
sbb
iret
ss
arpl
icebp
pop
or
xor
test
outsl
xchg
push
fldenv
negl
fs
lahf
pop
ljmp
pop
push
pushl
notb
imul
pushf
loope
sub
mov
or
clc
push
xchg
out
in
dec
lcall
rcrb
icebp
and
popa
rorl
mov
test
repz
out
popw
mov
iret
lret
in
mov
call
xchg
mov
ret
and
cwtl
add
mov
adcb
outsl
cwtl
mov
into
push
fbstp
icebp
movsl
dec
xchg
sbb
rolb
push
pop
sbb
and
mov
cmp
add
out
push
clc
mov
lea
jne
nop
mov
mov
mov
ds
fcmovnb
jno
dec
jmp
ret
out
push
pop
and
call
outsb
mov
dec
pusha
sbb
mov
enter
lcall
out
push
dec
mov
imul
xchg
mov
sub
movb
mov
jne
cli
fs
sbb
xor
das
and
xchg
and
lds
hlt
mov
xchg
not
addr16
test
pop
add
jecxz
aaa
loopne
aaa
mov
or
imul
jge
xlat
jg
fidivs
sbb
push
xchg
and
js
shlb
repz
fs
xor
cmpsb
decb
sbb
bound
lret
push
les
pop
cmc
gs
sub
int
cmp
jne
call
shll
inc
fwait
push
xlat
sub
cmp
add
test
lods
in
in
in
mov
aas
std
cmp
xchg
xor
ret
cmp
jl
inc
and
ret
push
repz
loopne
xor
hlt
lock
popf
jnp
adc
dec
sbb
imul
leave
gs
dec
mov
jae
fucomp
bound
arpl
aam
mov
cmp
nop
popl
jae
or
jg
mov
arpl
movsb
cs
std
loopne
ljmp
push
ficomps
movsb
mov
fstp
inc
xchg
fisubrl
ds
xor
cmp
and
movsl
mov
fidivrl
mov
push
cmp
fs
call
inc
cmp
js
orl
outsb
pop
test
adc
adc
sbb
push
mov
stos
enter
aaa
push
shlb
negl
cli
stos
xchg
test
xchg
and
xor
adc
jne
ljmp
or
pop
outsl
add
cli
test
jns
dec
stos
jnp
in
adc
inc
jle
and
sbb
inc
and
mov
lods
inc
insb
fstl
ljmp
xchg
sub
xorl
push
and
lock
testl
out
pop
sub
ljmp
jecxz
test
mov
push
dec
out
lods
stos
pusha
cwtl
sbb
mov
xlat
xor
inc
mov
aaa
sub
push
push
xor
mov
jp
insb
pop
dec
cmpb
or
push
cmc
inc
test
pushf
mov
jp
mov
cmp
je
pop
loope
hlt
dec
or
xor
ret
in
stos
or
or
lock
jbe
mov
xchg
add
mov
out
outsl
jp
loopne
imul
pop
sbb
mov
imul
lds
addr16
jmp
sti
cmpsl
xor
sbb
and
or
fdivs
inc
nop
into
cmp
push
mov
icebp
cmc
lret
jo
sbb
in
jle
aaa
scas
clc
outsl
aaa
jnp
xchg
adc
dec
jno
filds
dec
jo
xchg
push
cmp
andl
arpl
sub
stos
mov
mov
adc
adc
loopne
adc
mov
je
cs
fisubs
cmove
mov
push
lret
mov
loop
iret
shl
int
cld
movsl
pop
ja
outsb
popa
inc
xchg
xchg
int3
mov
mov
ret
inc
test
cmpsb
jl
fnstsw
push
xchg
xor
or
movsl
pusha
or
jl
inc
dec
fcomps
mov
mov
pop
pop
pop
dec
jmp
in
dec
stos
leave
in
testb
xchg
pushf
adc
mov
dec
divb
ffreep
xor
or
push
in
cmp
sahf
inc
xchg
mov
push
mov
arpl
cld
mov
imul
xchg
dec
inc
insb
mov
push
ja
xchg
fisubs
xor
xor
fnstcw
ret
bound
lods
cmp
and
shl
and
imul
xchg
popf
xchg
stos
push
xor
mov
lock
je
dec
enter
mov
mov
push
imul
sbb
adc
mov
cmpsl
push
cwtl
sbb
xor
jg
and
out
lahf
out
repnz
or
push
mov
loop
cmp
mov
dec
xchg
dec
or
sbb
out
enter
pop
insl
outsl
jge
mov
int3
imul
lock
push
sub
cmpsb
xor
jne
cltd
sbb
xorl
es
xor
add
lcall
or
mov
jl
pop
xchg
pop
out
imul
arpl
mov
push
sbb
and
scas
in
xor
mov
mov
mov
mov
ljmp
cs
dec
test
std
inc
dec
push
les
push
sub
pop
sbb
xchg
lret
and
add
jne
lods
adc
jmp
push
fistpll
pop
xor
lods
mov
call
lock
sbb
jae
leave
test
test
inc
xor
ffreep
cmp
stc
cltd
mov
or
pushf
push
or
notb
push
in
sbb
loop
pop
xor
fcomps
nop
xchg
mov
outsl
mov
stc
in
out
inc
jb
int3
test
out
fdivrl
cmp
xchg
mov
stos
repnz
xchg
enter
addr16
leave
test
sub
push
ljmp
or
jmp
push
lret
cwtl
xchg
adc
dec
scas
arpl
popa
xorb
nop
enter
data16
in
fwait
dec
mov
les
repnz
repnz
int
mov
out
mov
inc
ds
pop
sbb
push
cmp
pop
cwtl
lret
gs
imul
cmp
ret
mov
test
or
xchg
pop
sbb
cmp
mov
add
mov
dec
jle
inc
push
scas
aas
aas
imul
lea
dec
adcb
push
push
leave
out
out
mov
mov
out
xor
sub
sbb
das
pop
and
xor
pusha
inc
lret
ret
xchg
or
out
loopne
into
icebp
sub
je
lods
cs
scas
stc
dec
jae
xlat
and
add
mov
jecxz
mov
loopne
std
or
or
add
fildll
or
and
push
loope
sbb
orb
pop
dec
les
outsb
dec
js
pop
call
add
mov
adc
call
pop
in
imul
imul
out
fcomps
or
xor
std
push
and
pop
xor
subb
gs
shlb
add
js
adc
sbb
sub
cli
movsl
enter
mov
gs
jp
adcb
xchg
imul
lods
imull
js
les
aam
rcrl
jae
pop
aad
xor
cmp
clc
mov
push
sub
jecxz
dec
inc
cs
les
pop
cmp
movsl
xor
cmpsb
xchg
sub
xchg
pop
mov
sub
fcomip
movl
inc
push
mov
or
inc
inc
dec
xor
imul
xor
lea
insl
and
or
adc
lock
inc
sub
fdivrl
hlt
rorb
push
out
jmp
filds
loope
push
mov
notb
inc
xchg
negl
mov
sti
out
jmp
in
ret
jp
fs
icebp
stos
imul
xchg
loope
std
sti
and
leave
ja
ret
sti
mov
out
add
push
push
mov
and
into
mov
xchg
mov
sub
mov
xor
icebp
or
pop
inc
sub
sbb
imul
mov
inc
mov
int
inc
push
popa
jmp
jo
dec
mov
dec
jecxz
cli
push
popl
jbe
adc
mov
ljmp
mov
out
cs
pop
jmp
ss
xor
cli
fcoms
cli
mov
jle
lods
icebp
pop
cmp
mov
stc
sbb
andb
mov
sbb
jle
call
mov
and
adc
jae
lahf
daa
add
in
cmpl
mov
mov
xchg
inc
or
xchg
jae
repnz
out
add
das
test
outsl
sbb
imul
push
adc
mov
or
or
mov
fincstp
push
test
mov
sysexit
cwtl
and
xchg
lds
adc
inc
fidivrl
xchg
push
dec
nop
jecxz
pushf
adc
sbb
dec
and
adc
mov
jb
jne
out
push
cli
cmp
inc
xchg
sub
mov
and
add
mov
popf
mov
sbb
lea
cltd
and
dec
xchg
inc
filds
je
add
sub
pop
movsl
jl
imul
in
xchg
cmp
adc
xchg
lret
push
mov
cwtl
add
shll
push
dec
ss
mov
sbbb
out
jmp
pushf
push
jp
dec
outsl
mov
or
cmp
add
ljmp
lds
jo
imul
mov
sbb
test
out
lret
mov
enter
sub
mov
in
nop
add
push
push
jbe
testl
int
sbb
mov
inc
push
inc
mov
lea
rclb
movsl
inc
stos
ja
pop
mov
inc
cmc
lcall
lret
sbb
push
fucomp
clc
pop
and
test
jg
fadd
pop
fistl
mov
out
out
das
push
lds
and
out
enter
aaa
sub
fisubs
idivl
enter
cmp
push
in
fmuls
pop
int3
shl
push
cmp
cli
mov
push
xchg
and
mov
or
hlt
and
rolb
mov
int
repnz
push
js
rorb
outsl
mov
rcrb
mov
sbb
xor
add
xchg
cs
inc
mov
subb
int3
add
out
lret
inc
sbb
out
aam
mov
xor
enter
fsubs
xchg
in
xchg
add
or
sar
push
or
and
mov
inc
pop
sub
inc
or
fsubrs
jo
push
int3
mov
repz
sbb
jmp
ljmp
mov
adc
and
push
lock
or
pop
sbb
daa
in
cmc
out
xor
mov
outsb
sub
gs
comiss
cld
jo
es
sub
cmpsb
test
std
int
pop
mov
and
inc
outsl
mov
aam
jmp
imull
push
dec
insl
jmp
sbb
and
adc
xchg
dec
ja
pushf
adc
pop
adc
aaa
js
pop
data16
or
xchg
sbb
jns
ret
fs
insb
data16
cmp
and
mov
clc
and
int
rcrb
in
mov
xor
and
pushf
jno
repz
int3
and
fs
dec
enter
or
fldt
jnp
mov
aaa
sub
aaa
daa
mov
ret
ds
scas
faddl
rcll
cltd
ret
shlb
mov
outsl
fsubs
dec
rcll
push
add
sub
mov
cmp
pop
cmp
inc
int
jb
jp
pop
add
cli
test
push
sub
jbe
pop
or
dec
mov
cmp
dec
clc
scas
xchg
mov
loopne
enter
ja
popa
push
sub
ss
and
add
jl
and
das
sub
adc
ret
pop
rorl
cld
outsl
nop
mov
cmpsb
jo
dec
mov
and
rorl
xchg
dec
dec
adc
rcr
sbb
popf
push
aaa
or
lret
ret
or
sbb
movsb
adc
repz
lahf
imul
fs
shrl
adc
mov
out
push
jle
mov
arpl
int3
imul
out
dec
push
rclb
inc
lds
and
mov
or
adc
or
mov
pop
test
idiv
sbb
insb
mov
enter
and
stos
daa
xchg
jb
sub
ja
hlt
andb
int3
pop
cmpsl
sbb
out
shrl
jne
push
shrb
pop
arpl
sbb
xor
out
xlat
movsb
mov
mov
jbe
imul
mov
lds
or
out
dec
fwait
ds
push
aaa
add
in
test
cld
lea
aas
rolb
mov
mov
in
std
dec
iret
in
insb
repnz
dec
fdivs
je
push
inc
jl
lea
sub
and
or
push
fldt
adc
ss
mov
mov
pop
bswap
xor
jns
adc
mov
pop
mov
pop
ret
in
call
bound
into
jecxz
xchg
push
shlb
mov
fs
movsl
and
movsb
rcrl
subl
imul
sbb
das
mov
push
loop
xor
mov
loope
jl
sub
hlt
lret
das
mov
jmp
lock
aad
icebp
adc
ret
jno
dec
dec
or
mov
mov
test
mov
flds
and
ret
pop
aas
cs
cmp
add
inc
jmp
cmp
mov
jne
pop
mov
fs
and
movsb
mulb
nop
out
out
xor
xor
mov
jge
jo
mov
pop
decl
sbb
aas
mov
lds
and
lret
mov
test
pop
aam
loope
test
int3
shll
add
lods
jmp
sub
ja
mov
and
dec
dec
pop
inc
les
pushf
pop
insl
fidivl
lods
not
bound
pop
into
jmp
xchg
sbb
xchg
nop
fistps
jmp
popf
pop
jmp
aad
insl
xchg
clc
jnp
icebp
shr
cmp
jae
jb
jp
mov
dec
outsb
inc
dec
bound
and
pop
add
pop
cmpl
hlt
sbb
push
movsl
pusha
int3
lret
shl
xchg
xor
sti
in
das
fstpl
inc
xchg
mov
mov
mov
mov
dec
xlat
aas
rcrb
andl
lret
jb
pop
sbb
out
cmp
roll
lods
aas
cmp
xor
add
mov
inc
jg
inc
stos
mov
scas
mov
mov
mov
rcrl
sub
inc
push
mov
repz
mov
push
sbb
lods
gs
jge
add
test
lcall
fdivrs
das
mov
stos
mov
add
adc
lahf
and
test
xor
xor
sbb
lods
pop
repnz
rclb
jecxz
mov
jb
add
xchg
sahf
scas
mov
mov
stos
inc
dec
mov
dec
icebp
fmuls
fstl
mov
xor
mov
jecxz
in
dec
mov
xor
loopne
push
pop
jb
lds
repnz
or
jmp
pop
out
pop
jnp
lret
pop
xor
loopne
jb
xchg
cmp
add
mov
sarl
js
and
shrb
pusha
aaa
rolb
mov
not
cmp
push
push
int3
push
jecxz
lcall
arpl
pop
popa
pop
pop
push
pop
jo
cmp
movsl
push
aaa
ljmp
or
ss
mov
mov
jecxz
jecxz
stos
rcll
mov
loop
aad
push
movsb
or
jbe
xor
out
movsl
push
repnz
inc
cs
or
inc
and
scas
inc
push
sbb
fimuls
stos
mov
gs
cli
adc
mov
repz
lock
rorl
lret
xor
movsb
adc
in
loopne
cmpsb
nop
sahf
inc
movd
pushw
push
cmp
out
and
jo
adc
nop
hlt
dec
push
rcll
xor
sub
ja
push
enter
movsb
mov
push
mov
mov
cli
loopne
push
sahf
mov
add
rcl
test
jne
jo
cld
mov
pop
pusha
mov
shll
clc
cmp
or
and
mov
fisttpll
aam
gs
sbb
cld
and
add
sti
xchg
insb
dec
or
imul
leave
dec
xchg
or
fwait
mov
rclb
fmul
lcall
int
std
xchg
dec
fstl
xlat
mov
push
sbb
sub
into
nop
inc
loopne
mov
xchg
rcrl
cltd
dec
jnp
andb
in
out
out
mov
insl
pop
and
inc
arpl
cld
xchg
aaa
nop
aam
sub
and
icebp
add
pop
fldlg2
sarb
mov
cmpsb
push
int
mov
xchg
arpl
mov
inc
imul
subl
movsb
cwtl
je
js
test
jne
movsl
xchg
repnz
mov
arpl
push
stc
and
push
mov
in
repz
rorl
jmp
pop
sbb
in
inc
movsb
lret
andl
fs
fcomps
ds
sub
xor
cmp
test
xlat
sbb
cmp
ret
adc
pop
or
data16
lods
push
xor
push
mov
push
or
stc
mov
xchg
idivl
sbb
fldenv
xchg
popa
dec
xchg
fs
add
cltd
sti
shll
cltd
inc
icebp
fwait
js
ret
and
jmp
cmpsb
xor
xchg
mov
mov
orb
adc
jmp
mov
subl
outsl
push
xchg
ret
outsb
sarl
mov
jno
stc
lock
cmpsb
inc
mov
mov
dec
outsb
std
stos
add
or
push
call
clc
lcall
jae
lret
inc
int3
mov
lea
push
cmpsb
les
in
mov
mov
rcrl
cli
pop
mov
cltd
test
subb
jno
ja
sub
movsb
pop
mov
push
mov
mov
cmp
jmp
popa
fidivrl
xchg
mov
and
or
and
and
inc
mov
pusha
mov
lock
lcall
es
jecxz
rorb
pop
sbb
out
ret
decb
loopne
jecxz
sub
lds
lods
mov
sbb
cmp
pop
movsl
fidivl
xor
jno
cmp
loope
jns
orb
mov
inc
pop
jmp
lret
sbb
xchg
push
cmpsl
push
inc
idivb
push
int
adc
pop
mov
mov
test
outsb
jbe
inc
or
lds
subl
xchg
arpl
mov
dec
scas
jle
fiadds
or
xchg
sbb
mov
fwait
sub
incl
shll
mov
fbld
call
cmp
lock
push
or
sbb
addr16
popa
shl
mov
cmp
and
fldl
mov
push
pop
dec
xor
ret
sub
inc
jle
inc
mov
es
adc
mov
das
push
mov
dec
pop
outsl
sub
fwait
cmpsb
sub
or
shlb
addr16
lahf
cld
mov
data16
leave
jp
dec
insl
nop
jg
imul
adc
mov
cltd
mov
sub
mov
mov
mov
pop
inc
inc
inc
fisubrl
xor
pop
mov
addr16
inc
out
cwtl
push
and
ret
fbld
test
stos
dec
jl
mov
adc
or
lcall
pop
repz
mov
mov
add
add
xlat
push
jl
pop
xor
aam
shrb
mov
outsb
and
test
dec
xchg
fstl
jns
outsb
xchg
add
stos
push
insb
sbb
mov
mov
push
mov
aam
mov
lea
int3
cmp
xlat
clc
cmp
or
insb
cs
jb
cld
clc
js
inc
dec
lds
test
hlt
movsl
ret
mov
stos
mov
repnz
jmp
jne
movsl
outsb
and
fmull
outsb
cmp
push
lcall
sub
adc
scas
mov
je
outsl
inc
cwtl
in
ret
sbbb
lret
push
dec
into
add
ljmp
sarb
fs
je
int
lret
xor
test
jno
mov
fmuls
inc
pop
jecxz
shl
outsb
push
iret
mov
sahf
mov
in
ss
popf
jle
or
orb
loop
out
mov
or
xchg
jle
sbb
popa
fldcw
daa
inc
inc
jecxz
int3
or
push
dec
sub
cmpl
push
xchg
inc
mov
das
mov
or
fwait
xchg
xchg
jo
jb
xlat
cmpsl
inc
daa
dec
jno
divl
fwait
pop
mov
mov
mov
pop
pop
jo
loop
push
sub
out
lret
lret
or
mov
mov
inc
aad
mov
jmp
insl
sub
outsb
xlat
nop
and
cmp
not
hlt
jno
sub
adc
leave
jne
stos
add
loop
xchg
sbb
mov
repnz
xor
fidivs
repnz
xlat
daa
test
lahf
cmp
test
mov
cmp
andb
call
inc
pop
sub
xlat
cld
iret
test
es
test
ja
cmp
xor
xchg
orl
adc
cmp
xor
scas
and
dec
fists
push
fistpl
movsl
repnz
sub
pop
adc
sub
cld
scas
out
xchg
push
sbb
call
jbe
cmp
push
push
cmp
xchg
jbe
pop
mov
je
fisubl
and
adc
mov
add
stos
fmuls
sub
loopne
shll
cmc
mov
fistpll
sahf
cwtl
aad
push
fists
addb
in
pop
nop
cmp
cmpsb
and
xchg
cmp
jge
or
jo
xchg
jo
in
mov
std
ljmp
mov
sbb
in
add
dec
imull
mov
sbb
js
cmp
in
lret
xor
lahf
ret
jg
test
pop
push
mov
mov
aaa
pusha
pusha
or
je
in
jl
xor
mov
lcall
push
mov
jno
fwait
xchg
mov
dec
adc
mov
sbb
mov
add
pop
adc
lock
push
xchg
mov
faddp
cmc
out
cltd
addr16
jmp
push
dec
dec
adc
cmp
pop
cmp
sbb
push
jmp
fiadds
aad
mov
in
xchg
scas
in
push
subb
and
sti
in
iret
sbb
dec
inc
mov
pop
call
arpl
in
fidivs
bound
shrl
lret
push
adc
mov
push
call
cltd
mov
insl
mov
movb
clc
das
cmpsl
push
sbb
movsb
and
data16
push
pop
insb
pop
repz
ds
inc
cs
test
mov
cmpsl
jo
pop
je
push
pop
or
mov
stos
dec
pushf
add
iret
inc
arpl
int3
mov
pop
mov
or
arpl
pop
int3
and
pushf
out
jg
sbb
outsl
rcl
pop
jmp
add
adc
push
out
clc
mov
dec
loopne
jmp
test
pop
add
jmp
push
jno
outsb
xchg
sub
fsubl
pop
mov
arpl
mov
lret
pop
cld
imul
jl
xchg
or
mov
lret
jecxz
fdivp
and
pop
mov
outsl
inc
xchg
lock
mov
and
sub
cs
push
cmc
mov
ljmp
xor
push
sbb
ficoms
push
lret
lahf
hlt
mov
sub
insb
jl
hlt
and
ja
mov
xchg
std
fsts
leave
sub
lods
or
dec
xchg
pop
dec
fwait
cld
imulb
ja,pn
pop
and
and
imul
adc
in
xlat
pop
sub
add
mov
mov
adc
jno
sub
sbb
xchg
in
dec
mov
dec
push
jbe
push
add
lea
xchg
xor
cli
sbbl
cmpsl
inc
cmp
cmpsb
add
loop
jmp
mov
lods
sbb
xlat
in
testb
inc
ljmp
aad
xchg
popf
out
jp
insl
out
pop
icebp
adc
idivl
pusha
mov
pop
cwtl
into
or
and
popa
fidivs
or
movsl
xor
adc
stc
push
adc
pop
mov
insb
xor
jne
in
jl
sub
adc
adc
sub
push
fld
repz
sbb
faddp
ffreep
add
outsl
leave
and
lods
or
popa
xor
mov
push
insl
push
xchg
arpl
sub
or
jp
sub
mov
insl
jecxz
jae
and
movsl
hlt
fistpl
xor
fldcw
lret
test
jnp
xor
mov
dec
sub
leave
mov
pusha
push
jp
xchg
notl
ja
xchg
and
pop
adc
xorb
jno
cld
xchg
adc
mov
cwtl
int
fs
mov
sbb
popa
mov
pop
push
jns
sbb
loope
jg
movsb
mov
push
out
pop
push
mov
and
cmpsb
push
ds
ss
sbb
adc
fcmovnb
dec
inc
push
out
shrb
jl
inc
jns
add
daa
ficompl
xorb
xchg
xrelease
and
mov
dec
in
add
outsl
hlt
int3
ljmp
aad
push
pushf
fisttpll
jge
xor
jne
lcall
lret
lods
cmpb
sub
jg
sar
cld
or
mov
leave
setb
cmp
cwtl
jmp
add
out
stos
sete
rorb
adcb
push
adc
divl
mov
jl
popf
int3
pop
fists
jp
lcall
mov
dec
jo
pop
outsb
jns
cmpsl
rcrl
les
stos
daa
dec
cmp
std
xchg
sahf
lret
sbb
out
roll
cmp
call
cmp
mov
adc
sahf
xchg
or
in
sub
jo
push
or
xabort
loopne
dec
jbe
lahf
pop
nop
and
sub
jbe
and
imul
ret
xchg
fstl
call
adc
sbbl
push
test
sbb
sbb
mov
sbb
pop
subb
mov
inc
dec
mov
or
das
push
mov
in
ds
xchg
sbb
scas
in
popf
and
and
push
sbb
or
cld
mov
adc
xchg
jl
mov
ret
mov
adc
pop
in
xor
cmpsb
ja
xor
push
inc
xor
push
decl
xchg
loopne
cmp
mov
inc
js
dec
shrb
test
test
lock
pop
imul
pop
hlt
mov
mov
xor
xor
xchg
inc
cmp
sti
stos
add
negb
xor
lret
out
jnp
arpl
lret
dec
mov
push
inc
jbe
add
insl
mov
sbb
fidivl
adc
xor
shrl
fisubl
push
int3
hlt
test
add
xchg
inc
and
in
xchg
sbb
out
pop
xlat
jge
jo
call
jmp
sahf
sbb
ret
sub
fwait
xchg
out
ljmp
xchg
mov
popl
inc
mov
cmp
sub
push
jmp
adcb
xchg
xor
repz
xchg
int3
sub
adc
mov
movl
xor
shlb
push
inc
fildl
adc
xchg
addl
fcomps
cmpsl
mov
aas
cmp
cmp
xchg
xor
movsb
xchg
mov
fwait
popf
cs
ss
jg
mov
push
insl
lret
rcll
or
mov
aad
mov
xor
popf
imul
cmpsb
add
aas
daa
mov
cltd
test
cli
sub
pop
mov
sahf
cmp
mov
push
jns
sub
pop
icebp
sub
aad
test
and
or
mov
repz
mov
inc
xchg
lret
xor
xchg
xchg
stc
xchg
add
push
pop
xchg
ljmp
mov
mov
jge
push
pop
dec
shl
xor
daa
mov
push
adc
ljmp
movl
mov
inc
mov
jb
jge
out
mov
cmpsb
mov
adc
cmp
sub
loop
insl
loop
inc
xor
jb
movsl
psadbw
dec
push
cmc
addr16
xchg
frstor
push
cmp
nop
imul
jl
xchg
dec
addl
faddl
xor
pop
loop
sti
dec
cli
push
add
ss
or
cli
adc
sub
sub
shrd
pop
adc
push
scas
push
sbb
aad
fcmovnb
add
pushf
adc
subl
addr16
mov
dec
lods
xor
or
clc
dec
enter
sahf
je
xor
idivb
lcall
rorb
movsb
test
inc
lret
dec
and
ret
iret
xchg
cli
xor
movsb
inc
ljmp
fcomps
and
lock
lret
dec
jns
push
movsb
xor
jno
in
jecxz
jge
andl
sarb
mov
in
mov
jb
lret
mov
pop
fists
push
popa
sti
std
dec
sti
pop
mov
fbld
stos
cmp
repz
lods
imul
aas
ret
test
les
cmp
mov
sbb
sahf
xchg
cs
fadd
mov
mov
aam
movsb
ret
fs
mov
cltd
test
popf
xchg
sbb
or
inc
dec
adc
xchg
fstpt
sub
xor
cmp
or
ljmp
jmp
push
xor
jne
jmp
fimuls
mov
insl
push
cld
add
xchg
andb
loop
sbb
mov
inc
ds
mov
mov
arpl
int3
or
out
inc
nop
cmp
add
or
leave
mov
fsubrl
pop
fsubrp
std
mov
lret
out
loop
nop
leave
pushf
jns
cmpsb
aad
ss
push
inc
lds
or
std
adcb
sbb
mov
mov
and
sub
sbb
int3
jge
sbb
rol
dec
insb
stc
xor
xchg
fdivl
cmpsl
push
xchg
in
loope
in
loop
pop
lcall
loope
jg
mov
hlt
ror
sbb
push
sbb
dec
movzwl
dec
xchg
inc
pop
cmp
push
mov
jae
mov
and
ljmp
fdecstp
lcall
push
fistps
xor
lahf
xorb
mov
push
lock
pop
repnz
insb
or
sub
aad
or
fcompl
daa
sub
push
lock
sub
leave
push
imul
adc
lods
jmp
imul
stos
ret
fimull
aas
int
sub
in
add
pop
jnp
out
sub
push
xchg
adc
aam
mov
or
pop
dec
pop
mov
packsswb
and
scas
push
jge
dec
mov
mov
out
ljmp
push
repnz
push
hlt
cmp
inc
ja
mov
mov
stos
add
mov
push
xor
arpl
sub
inc
int3
inc
test
repnz
fidivl
lea
pop
insb
jp
adc
outsb
sbb
andl
and
push
gs
arpl
add
sahf
imul
mov
and
jge
out
notl
sub
jle
push
mov
cmpsb
movsb
gs
push
cmc
out
in
sahf
scas
push
pop
je
gs
aaa
adc
insb
pop
sub
fstl
imul
pop
icebp
cmpsb
lahf
movsl
cmp
rorl
dec
out
mov
out
push
cld
xor
imul
jp
xor
mov
pushl
cs
shll
inc
sub
outsb
add
xchg
push
repz
sbb
lds
cmp
cmpsb
lods
or
jp
fisubs
aas
mov
mov
mov
shlb
test
and
js
nop
jnp
out
cmp
mov
sub
aad
mov
daa
add
inc
cmc
lret
hlt
aad
jno
cmp
mov
xchg
fiaddl
int3
or
js
cmp
pop
add
notl
xor
lret
pop
add
mov
call
jp
int3
push
out
jns
adc
push
lods
ja
xchg
dec
pop
les
decl
adc
push
mov
test
data16
ja
test
inc
iret
cld
mov
add
cmp
sub
out
xchg
mov
jb
sub
add
xorl
inc
arpl
test
mov
jns
jno
mov
movsl
add
lods
jg
subb
xchg
repnz
mov
stc
mov
in
out
nop
inc
mov
int
icebp
test
out
pop
sub
icebp
mov
pop
inc
xor
cwtl
pop
jb
aaa
push
adc
ss
out
jnp
imul
mov
lds
push
lea
or
mov
sbb
out
adc
shrb
jl
arpl
test
lods
mov
and
jbe
or
iret
ret
xchg
xchg
int
mov
arpl
mov
sbb
stos
xchg
jecxz
testb
shlb
test
jp
xchg
push
pop
inc
and
test
jg
pop
test
push
imul
sub
cmp
mov
scas
mov
cmc
lea
and
mov
pop
loopne
loop
pop
sub
andb
enter
sbb
lahf
iret
nop
loop
sub
xor
arpl
outsl
adc
in
insb
or
shrl
fcomps
and
cmp
call
adc
mov
mov
sbbl
push
jg
cmc
cmp
mov
add
dec
scas
sub
insb
jge
and
dec
movsl
or
push
mov
out
stc
and
daa
sub
lret
jp
cwtl
xchg
es
xchg
scas
and
and
pop
sbb
jmp
fisubl
mov
add
or
mov
mov
rclb
jns
sbb
std
fiadds
mov
outsl
or
call
in
fcompl
pop
sub
pop
push
or
xor
fwait
stos
mov
adc
jmp
jg
cld
fbld
sti
cmc
repnz
nop
sti
pop
jbe
push
data16
test
cli
loop
or
pop
stc
pop
mov
and
mov
jns
sbb
xor
popf
lcall
xchg
xchg
movsb
ret
out
xchg
jb
xchg
mov
push
test
icebp
add
cmpsb
add
cmpsl
and
sti
jno
lods
xor
clc
jno
cs
loop
and
sub
hlt
mov
and
push
fsubl
insb
rol
inc
jno
dec
insl
ficoms
or
mov
jle
xor
inc
testl
ljmp
mov
jmp
jb
dec
rclb
insl
shll
in
aam
xchg
xor
or
xlat
mov
mov
mov
shl
sbb
mov
jbe
into
mov
pusha
wbinvd
mov
dec
scas
add
lcall
dec
xchg
in
ret
test
xchg
xlat
sbb
cmpsl
insl
imul
nop
adc
adc
mov
out
mov
push
mov
pop
cmp
test
jmp
pop
sub
cld
pop
movsb
enter
or
cld
adc
rorl
fdivl
and
pop
jae
in
xor
mov
shll
sub
sbb
aad
pop
stos
das
fisubrl
popa
xchg
mov
and
lods
imul
pushf
sub
sbb
lret
pop
outsb
xor
mov
cmc
xchg
cmc
lret
in
lods
lcall
mov
dec
fbstp
xchg
or
pop
mov
dec
aam
adc
mov
test
inc
mov
adc
repz
jp
lds
clc
or
mov
sub
arpl
mov
jns
xor
mov
andb
add
sub
inc
leave
rcrb
ret
dec
nop
mov
outsl
and
lods
arpl
inc
out
dec
cmpsb
cmpsb
hlt
call
mov
or
push
in
mov
call
mov
movsb
mov
jae
hlt
repz
adc
pop
inc
test
cltd
mov
je
lds
lahf
dec
or
push
adc
pop
movsl
repz
or
and
js
mov
popa
xchg
stos
sbb
call
cli
lods
jne
jmp
stos
out
les
and
stc
mov
sub
dec
in
mov
push
test
push
nop
sub
xchg
push
clc
test
cmpsl
dec
or
sbbl
jg
mov
rcrb
in
jnp
cwtl
sub
xchg
cmp
inc
loopne
outsb
movsl
inc
int3
dec
add
cs
jno
push
jns
mov
into
pop
sub
xlat
loop
rorl
movb
mov
mov
and
xor
mov
popa
lret
test
leave
jl
dec
in
popf
outsl
xchg
xchg
dec
clc
inc
add
addr16
movsb
in
out
jo
test
insb
sbb
sbb
inc
pop
lahf
outsb
xchg
pop
and
fnstsw
mov
push
pusha
jle
and
and
insl
or
int
xchg
cmp
mov
inc
sub
mov
scas
test
adc
verr
dec
subb
sub
xor
xchg
movsb
push
xchg
aad
cltd
loop
pop
xlat
jecxz
cmp
mov
cmp
jb
push
iret
gs
data16
pop
lret
xchg
pop
aaa
psadbw
js
sbb
xlat
aad
fimull
lcall
jae
daa
push
sub
pusha
xchg
fiadds
xchg
adc
int
lret
sti
xchg
lahf
or
out
test
sahf
inc
mov
push
out
pop
inc
rorl
sbb
mov
xor
mov
shlb
mov
fiaddl
sub
faddl
sbb
xchg
add
add
xor
add
setno
add
jle
arpl
adc
pop
adc
shlb
adc
jecxz
in
cmpsb
jnp
ud0
cmp
mov
imul
jbe
adc
dec
ror
pop
or
xlat
inc
pop
pop
pop
jmp
xchg
push
pop
jecxz
ja
cmp
mov
ret
mulb
scas
sti
cmp
inc
ljmp
adc
dec
ds
fwait
sbb
push
and
inc
loopne
out
and
out
inc
les
mov
fcmove
es
fidivrs
mov
jb
lock
lret
jecxz
fnstcw
sbb
sbb
hlt
mov
xlat
dec
data16
aas
scas
adc
xchg
addr16
xchg
inc
xor
or
cmovs
jo
xor
lret
popa
xor
int
lahf
lahf
repz
adc
xchg
aad
jne
in
movntq
inc
jo
mov
jmp
push
es
cli
add
out
iret
pop
mov
xor
aam
mov
xchg
outsl
and
xor
test
xlat
sub
ljmp
inc
aam
pop
lahf
mov
cli
push
dec
mov
rclb
or
xchg
mov
ret
ja
fstpl
xchg
aaa
out
call
cld
jl
out
inc
mov
in
stos
rolb
mov
push
mov
jg
xlat
or
dec
int
lock
imul
sti
sarl
inc
jae
jb
mov
cwtl
sub
stos
int
push
jbe
lea
sti
jp
mov
mov
or
jne
mov
xor
fsubr
adc
or
shrl
adc
rorl
or
push
cmp
stc
push
int
or
lods
add
aad
sahf
sbb
les
fcoml
jb
jp
sbb
call
push
ret
movsl
push
jns
pop
add
into
call
rcrb
and
mov
jbe
xchg
mov
jl
out
and
shlb
mov
mov
daa
mov
push
mov
add
pop
and
rcr
js
fistpl
fcomps
cmp
adc
jmp
pop
in
pop
sub
in
sub
pop
xchg
push
push
cmp
lret
jge
fistpll
mov
dec
xor
push
out
out
hlt
stos
push
sub
xor
iret
or
scas
out
cwtl
shrl
or
es
in
lcall
or
pushf
subl
cltd
ss
lret
fildll
xchg
mov
repnz
or
inc
sbb
leave
sub
subl
adc
xor
mov
cmp
xor
sahf
xor
in
add
out
clc
cmp
loope
movsb
sahf
pop
jecxz
enter
test
aaa
inc
cmpb
cmc
or
adcb
jbe
lods
in
mov
xchg
push
bound
and
or
int
not
dec
adc
arpl
inc
sub
inc
mov
popf
jmp
jns
sub
add
xchg
cmp
andl
lret
stos
sbb
mov
pushl
mov
rolb
lds
xchg
loope
in
dec
out
dec
aaa
push
mov
sahf
dec
push
enter
jb
in
sub
pop
test
ljmp
pop
repz
sbb
xchg
pop
in
test
mov
les
push
lea
add
sbb
daa
lcall
loop
push
ja
and
js
pop
arpl
ror
xchg
cltd
pop
push
scas
dec
call
dec
rcl
das
and
mov
ret
mov
outsl
xchg
ja
enter
das
faddl
jmp
mov
lret
jge
mov
repz
xchg
daa
rolb
sub
or
jecxz
mov
loopne
inc
imul
sarl
lret
xchg
shl
add
loop
push
jno
fwait
lods
pop
lods
sbb
stos
push
mov
stc
pushf
mov
aad
mov
std
mov
jmp
xlat
adc
xchg
push
sub
das
sub
sti
fsubs
ljmp
pop
push
xchg
imull
pop
jbe
xor
xchg
shrl
daa
subb
sbb
pop
popa
js
out
jns
insb
cs
inc
adc
movsb
pop
stc
pop
jno
push
daa
xor
push
jnp
divl
mov
xchg
out
aas
push
mov
xor
mov
out
and
aam
shll
in
pop
and
psubsw
repnz
or
dec
test
xchg
sbb
push
xor
and
sub
outsl
mov
pop
lret
inc
cmpsl
push
fcomi
xchg
push
push
aam
push
lcall
and
movsb
jnp
dec
inc
pop
pi2fw
fnstcw
mov
xlat
mov
sub
roll
xor
testb
imul
aaa
ljmp
add
adc
dec
push
mov
in
mov
and
jge
int
jae
jg
xchg
aas
xchg
pushf
out
mov
fcmovu
sub
push
or
cmpb
sub
push
sbb
les
xchg
in
inc
test
xchg
clc
xchg
mov
data16
dec
or
andb
movl
std
stc
rolb
jg
fimuls
fimuls
popf
push
jle
mov
pop
sar
pop
dec
mov
xchg
xlat
mov
pop
mov
ss
in
cmpsl
mov
cmpsl
push
sbb
sub
add
imull
or
inc
out
xorl
jle
jecxz
in
pop
sbb
mov
cmpl
pop
dec
in
out
sbb
xor
xor
xchg
jb
mov
and
pop
imul
jne
mov
jge
mov
dec
clc
inc
push
into
dec
sub
cmp
jns
les
cltd
xchg
shll
ret
mov
pop
sub
sbb
xor
push
imul
insl
popl
imul
shr
loop
push
inc
push
xor
xchg
int3
fisubrs
in
cmc
push
shll
mov
rcrb
push
xor
decb
movsb
or
nop
ret
jecxz,pn
cltd
mov
push
mov
iret
mov
movsl
fsubs
mov
xor
rolb
es
and
and
push
mov
add
rcl
mov
int
jns
ja
sub
hlt
dec
jmp
sub
fwait
and
dec
out
push
mov
aas
mov
push
pop
and
test
mov
inc
mov
add
dec
outsb
add
mov
mov
pushf
rolb
pop
mov
es
rcll
push
roll
mov
pop
shrb
sbb
ja
cmp
popa
mov
xchg
hlt
sub
dec
adc
ja
call
push
into
loopne
pop
shlb
cmpl
mov
je
inc
adc
fidivs
mov
and
mov
outsl
scas
xor
aad
ljmp
xchg
aam
mov
popl
pusha
xor
pop
mov
scas
cmp
pusha
inc
jo
mov
bound
jp
fiaddl
cmpsb
ljmp
int
xchg
dec
mov
pop
loopne
out
cmp
fldlg2
cmpsb
sub
fistpl
test
pslld
addr16
cmp
xchg
lea
sbb
xchg
dec
orb
mov
push
cmp
clc
mov
fisttpll
int3
fsubp
notb
mov
add
lcall
in
xor
lods
hlt
imul
push
sbb
mov
xchg
xchg
in
ss
shll
sub
mov
loopne
mov
ljmp
adc
popa
pop
lock
dec
loop
cmc
push
sub
popa
je
jecxz
inc
jecxz
mov
push
mov
add
cmpsb
shll
lock
cwtl
lcall
cmp
fwait
push
dec
nop
jle
adc
lret
cmp
bound
fisttpll
or
data16
test
push
adcl
cs
test
xchg
and
jno
sub
test
add
mov
in
das
fwait
in
xchg
dec
add
shll
or
fistps
scas
sbb
mov
rcl
cmpsl
inc
cmpsl
mov
enter
mov
jle
ret
rcrl
mov
xor
loopne
xor
scas
mov
or
es
mov
mov
fnstcw
repnz
push
and
sbb
cmpb
ret
adc
popf
rcr
add
cwtl
in
ja
adc
jg
mov
call
scas
pusha
repz
cmp
or
push
sarb
enter
icebp
fiaddl
mov
shlb
es
aad
out
out
mov
sbb
aad
sub
rcll
in
popa
push
in
inc
shll
lock
pusha
andb
ja
in
xor
mov
jle
mov
cmp
in
clc
cmp
inc
fs
cmc
adc
stos
mov
xlat
stos
icebp
and
mov
aas
or
sbb
jo
adc
cltd
enter
in
add
rorl
push
jg
pop
lret
mov
aam
sub
and
jns
loope
loope
pop
xchg
adc
movsl
and
jmp
mov
iret
or
add
out
mov
fistl
adc
cmc
sbb
inc
loope
mov
inc
mov
and
insb
or
fwait
xor
loop
leave
into
fsubrl
movsl
inc
dec
and
pop
jne
xor
in
pop
ja
lahf
xlat
cld
inc
add
adc
cmp
and
mov
xchg
in
mov
mov
das
dec
dec
pusha
movsb
sub
mov
mov
jo
les
fsubrp
imul
js
sbb
mulb
xor
ret
dec
sbb
inc
xchg
jmp
arpl
cwtl
pop
rorl
jno
pop
neg
add
negl
aad
push
mov
sbb
pop
loopne
sub
sbb
sbb
pop
pavgb
xor
nop
iret
and
pop
cmp
mov
outsl
cmp
repz
popf
push
clc
fsubr
jmp
sbb
xor
and
and
cmp
out
push
addr16
std
subl
imul
push
xor
scas
mov
pop
shll
icebp
mov
or
incb
sub
sub
push
iret
mov
mov
jae
imul
rorb
popf
push
icebp
in
bsr
pop
sub
push
out
mov
stos
lea
add
dec
out
iret
cmc
imull
or
out
fisubs
push
in
addl
pop
push
jp
fisttpl
jmp
adc
xchg
in
leave
xor
fdivl
notl
push
lods
fsubrs
mov
in
inc
fidivl
dec
or
cmp
xchg
in
mov
dec
xchg
out
mov
push
xor
test
or
push
push
jns
mov
push
cmp
scas
lock
cltd
leave
cmp
add
xor
sbb
mov
jbe
xor
cmp
test
mov
mov
clc
mov
inc
inc
inc
xchg
int3
mov
je
je
mov
xor
insb
or
lahf
dec
or
pop
and
dec
cmpsb
clc
adc
lret
jns
dec
daa
push
insl
xor
mov
or
xlat
test
lds
push
loopne
pop
in
cmp
and
adc
aas
sbb
lahf
adc
test
imul
and
inc
out
outsb
mov
int3
fstp
xchg
pcmpeqw
mov
adc
pop
rcr
popf
jne
lahf
sahf
fldenv
and
je
xchg
cmp
inc
push
int
stos
lock
js
mulb
decb
jnp
repz
xor
insb
mov
mov
fs
roll
pop
clc
sbb
and
push
sbb
push
or
push
stos
test
jg
xor
mov
lock
sbb
movsb
scas
and
mov
xchg
in
mov
popf
xor
lds
xor
mov
mov
jb
pop
mov
addr16
mov
adc
scas
sub
arpl
fwait
jno
aam
jb
scas
loopne
lret
adc
je
lods
and
pop
insb
flds
mov
mov
mov
in
je
pop
xchg
add
push
cld
inc
stc
adc
dec
dec
popf
inc
add
sbb
out
inc
shlb
jp
jge
and
fidivs
xor
lock
sub
or
movsb
mov
pop
mov
adc
js
push
test
scas
in
and
fdivrs
push
mov
sub
inc
scas
and
lret
mov
out
sbb
notl
sub
mov
jno
lcall
inc
inc
loope
mov
push
xchg
hlt
imul
testl
lds
cmp
push
pop
notb
xchg
dec
stc
sbb
ja
add
sti
sbb
jns
push
mov
call
fcmove
psrad
or
push
out
xor
inc
imul
jnp
dec
jp
mov
cmpb
movsb
mov
pop
lsl
inc
cmp
xor
hlt
leave
lret
arpl
mov
inc
jl
xchg
enter
push
jge
and
enter
aad
rcrb
in
push
fs
rorl
pop
jbe
aad
jmp
and
mov
jecxz
jecxz
cmp
out
sub
push
push
dec
pop
inc
dec
fimuls
int
mov
aaa
adc
pop
inc
push
lds
pushf
cld
mov
nop
ja
adcl
pusha
fildll
fimuls
dec
cmc
out
mov
fsubrs
push
push
loopne
orl
cmpb
les
lds
int3
addb
rolb
ret
push
enter
sbb
rolb
mov
mov
lret
idiv
sar
cmp
pusha
sbb
mov
fildl
aam
std
pusha
xchg
push
aad
or
fidivrl
xor
js
xchg
test
fisttps
or
ljmp
push
dec
add
adc
cltd
outsl
xchg
add
sbb
sbb
mov
inc
fldl
repz
push
or
rcrl
cmc
sub
jb
shrl
sar
inc
int
inc
cmp
pmulhuw
sbb
cmpsb
pop
sbb
insl
sbb
sbb
cmp
push
jle
or
sarl
fcoms
ret
les
testl
aam
add
in
fwait
ret
mov
inc
add
mov
ljmp
push
sub
fs
push
cmp
xchg
leave
pop
outsl
pop
or
mov
push
add
mov
lcall
imul
outsb
lods
xchg
dec
loope
adc
shl
cmp
sub
pop
int
in
pop
pushf
cld
decl
dec
pop
jbe
mov
ljmp
int
pop
repz
pop
arpl
fdivl
sub
inc
fwait
sahf
inc
pusha
mov
fldcw
int3
push
or
sub
inc
shrl
xchg
pusha
test
fisubrl
pusha
enter
jg
adc
inc
inc
mov
adc
and
movsl
fisubs
imul
pop
nop
mov
shlb
mov
leave
push
stos
inc
in
jl
jecxz
sub
jo
lock
mov
inc
mov
mov
das
arpl
addb
out
dec
ja
aaa
jle
push
or
xchg
cmc
int3
mov
xchg
lahf
js
ret
stos
nop
push
jmp
mov
ds
popf
es
cmpl
lea
in
push
pop
pop
fldl
sbb
repnz
push
push
lods
popf
lahf
xchg
js
repnz
nop
xchg
push
add
xor
xchg
jmp
loop
and
aad
xchg
cli
arpl
or
lcall
jne
repnz
inc
fs
iret
or
leave
inc
xchg
pop
stc
and
xchg
in
rcll
enter
adcl
xchg
sub
mov
sar
or
cld
pop
lods
pop
lret
xchg
movsb
in
ds
or
dec
mov
ja,pt
sti
pop
push
cmpb
data16
into
xchg
mov
imul
sahf
shlb
aad
push
pop
mov
arpl
pop
std
in
pop
fcomps
add
push
aam
cmp
sub
das
iret
push
sub
xor
jo
roll
mov
nop
push
add
jge
aam
cmpsl
inc
bound
push
sbb
movsl
cltd
movsl
push
rolb
cld
and
and
cwtl
iret
cmp
rorb
lret
add
mov
mov
scas
lcall
fwait
mov
push
xchg
sub
outsb
mov
xchg
cmp
mov
aas
data16
sahf
mov
inc
fucomp
test
adc
leave
push
cs
cmp
test
push
incb
arpl
mov
dec
int
arpl
pop
pop
aaa
mov
int
test
sub
dec
mov
mov
das
dec
add
xor
je
adc
inc
outsb
add
mov
adc
addb
in
sub
sbb
outsb
mov
ret
push
mov
aas
in
dec
sub
shl
pop
xchg
push
out
idivl
cwtl
repnz
sbb
push
lods
adc
pop
fidivrl
pop
mov
fstpt
xchg
pop
aaa
je
jns
sti
xchg
mov
mov
add
gs
jmp
adcl
lahf
xchg
dec
jb
scas
test
mov
ret
aad
int3
mov
mov
dec
shrl
aas
or
mov
cmpsl
sub
fisubrs
sub
pop
adc
cli
sbb
cmp
aas
loopne
movsl
leave
pop
jecxz
test
or
or
jo
pushf
lcall
mov
cmp
cmp
add
sti
les
inc
mov
inc
repnz
inc
fmull
std
push
jnp
dec
dec
push
ret
out
cli
xchg
mov
subl
jmp
sti
inc
adc
xchg
ftst
and
movsl
push
and
mov
roll
dec
fs
mov
xchg
repz
inc
sub
and
xor
sbb
pop
mov
loopne
popa
mov
lds
iret
fisttps
fldcw
push
or
jae
test
push
mov
es
in
shrl
lods
mov
sbb
jb
es
dec
and
sbb
push
push
and
je
incb
dec
pushf
daa
test
inc
pop
cmp
inc
dec
cwtl
repz
mov
mov
xor
add
jne
xor
and
ss
xor
out
jbe
xlat
test
movsb
stos
sub
lods
push
push
and
inc
filds
dec
pop
lds
sbb
sub
mov
pop
roll
cmpl
ljmp
fsubr
adc
nop
sbb
jle
int
jle
insb
je
pop
mov
fistps
scas
jae
call
loop
ret
es
push
nop
xor
or
cmpsb
sub
ja
pop
xchg
cmpsb
sbb
fidivs
cmp
adc
sbb
mov
aam
mov
and
xchg
mov
adc
xor
xor
cmpsl
push
mov
jge
test
xchg
jmp
or
jb
inc
cmc
pop
inc
adc
xchg
outsb
cwtl
test
mov
outsb
fisubrs
leave
jnp
in
loop
sbb
xchg
fucomi
mov
lahf
xchg
xor
sub
test
xor
xchg
mov
sbb
imul
push
fcoml
pop
push
mov
pop
jle
addr16
jnp
add
clc
mov
or
mov
scas
ljmp
push
push
mov
ret
or
jne
imul
cmpsb
xchg
or
bound
xor
clc
xor
cmp
call
test
sbb
pop
xchg
pop
iret
gs
cltd
sbb
insl
sbb
jp
mov
mov
inc
mov
inc
mov
int3
mov
mov
add
imul
in
jmp
jge
je
or
mov
add
insb
jg
aad
xor
fwait
mov
xor
nop
xor
test
shll
dec
out
cltd
repnz
test
push
adc
enter
in
cmp
lods
into
sbb
sbb
test
push
movsb
or
pop
add
or
jecxz
push
jge
push
aad
sub
push
mov
jp
push
xchg
xlat
loopne
inc
sub
dec
xchg
jle
mov
pop
addl
cmpsl
xchg
push
add
jecxz
loope
mov
jecxz
dec
stos
mov
ljmp
xor
add
int
stos
mov
sahf
cltd
sbb
jmp
cwtl
adc
dec
push
fsubp
push
jl
push
fwait
xchg
fwait
call
loope
mov
repnz
inc
xchg
mov
scas
lahf
mov
sbbb
inc
movsl
outsb
inc
fucom
push
inc
loop
pop
mov
lods
jg
fimuls
pop
daa
sub
insl
out
adc
adc
in
and
daa
lea
xchg
icebp
cwtl
leave
and
push
cwtl
cmp
aaa
mov
inc
hlt
rcll
jecxz
out
cmp
das
add
inc
ds
jp
add
mov
fcoms
imul
daa
mov
xlat
mov
sti
ret
push
cld
sub
jo
aas
xchg
out
pop
iret
xchg
sbb
pop
les
insl
sbb
lret
test
cmp
inc
sbb
test
cmpsb
jnp
add
jl
mov
cmp
mov
mov
in
xor
scas
iret
in
insb
xor
mov
mov
lods
cmp
lods
jae
lods
sarb
or
test
insl
or
sub
or
mov
xchg
pop
inc
xchg
inc
ror
enter
sti
sbb
xchg
test
jp
or
or
imul
in
xor
mov
cld
jne
mov
loope
gs
jp
xor
outsb
movb
gs
gs
sbb
mov
cwtl
in
ret
or
xor
push
out
xor
or
fs
push
sub
xlat
dec
cmc
rol
and
dec
call
push
inc
insl
jmp
js
inc
push
sti
stc
int3
adc
cmp
jg
jp
and
xchg
imul
sub
mov
mov
jae
jno
mov
xchg
rorl
movsl
xchg
mov
sub
adc
xchg
into
jb
lret
pop
sarl
xor
imull
dec
push
jmp
jp
orl
or
cs
adc
loop
cmp
and
adc
mov
xchg
test
inc
jmp
mov
fsts
mov
push
or
not
out
xchg
ja
mov
loope
lahf
test
sub
adc
stc
aad
sbb
or
int3
xchg
mov
testb
dec
and
lods
mov
adc
ja
xchg
fidivrl
cmpsb
mov
and
mov
rclb
rcrl
sti
sbb
pushf
mov
cmovno
xor
xchg
xchg
inc
and
xchg
scas
repnz
pop
popa
jle
dec
arpl
dec
and
nop
push
pop
arpl
sbb
lods
jecxz,pt
xchg
in
stos
fcmovnu
jmp
sbb
xchg
addl
fld
cli
sub
insb
adc
enter
jno
pop
push
pop
xchg
cmpsl
inc
bound
xor
lea
xchg
in
sbb
jge
jo
cld
aas
fsub
pop
mov
xor
insb
and
fists
fmul
cs
cmp
ljmp
pop
rorl
adc
mov
jns
mov
shl
in
fiaddl
shrb
fs
aas
jns
negl
mov
icebp
shll
aam
sbb
movsb
pop
lret
ljmp
lret
outsl
fnsave
fnop
jns
sbb
outsb
pop
ja
xor
mov
dec
shlb
xor
pop
xchg
pop
ja,pn
test
add
push
mov
aaa
lods
in
ficompl
inc
mov
mov
jmp
icebp
mov
js
mov
ljmp
push
fprem
pop
mov
sub
repz
sub
fnstenv
repz
cmp
cmp
movsb
jne
lret
lds
pusha
roll
lret
insb
mov
stos
sub
cwtl
mov
jne
or
xor
xor
in
into
mov
les
shrb
lea
push
sbb
iret
sti
roll
sbb
loop
sbb
add
or
add
dec
xchg
and
xchg
clc
mov
test
fstp
imulb
mov
orb
adcl
stos
push
jmp
in
je
clc
repnz
pop
adc
jnp
sbb
sbb
cmpsl
shlb
lods
je
xchg
jge
cmp
mov
cmp
xchg
es
std
loop
xor
xchg
dec
mov
jnp
adc
or
pusha
repnz
popf
ss
shll
lds
sti
pop
pop
jecxz
sub
push
es
add
pusha
push
sbb
daa
fstpl
addr16
and
ljmp
cld
push
push
fs
int
and
push
popa
repz
mov
jo
std
add
xchg
dec
ret
into
cmp
pop
int
aam
mov
daa
js
pop
subl
dec
adc
dec
out
mov
call
iret
cmp
pop
xor
lret
fisttps
ss
xor
cmc
jl
sub
cmp
cltd
imul
dec
mov
cltd
mov
movsb
divl
pop
jne
negl
ret
adc
popa
jnp
adc
outsl
dec
mov
xor
mov
xchg
pop
ja
mov
mov
pusha
mov
push
xchg
enter
gs
push
dec
std
loop
divl
pop
xchg
push
jle
jns
repz
cmpsl
sbb
pop
sbb
sbb
jge
or
and
mov
sbb
leave
data16
fsubrl
mov
out
add
push
push
shlb
mov
jo
js
frstor
out
xor
xchg
sahf
sub
jecxz
xchg
aas
push
dec
fcomps
xor
es
pop
mov
dec
pop
hlt
ficoms
cmp
sbb
nop
pop
icebp
aam
cmpsl
mov
in
dec
inc
sub
lock
in
xchg
out
or
cmc
fsubrs
fadds
cmc
cli
sub
push
lock
adc
xchg
fiaddl
imul
shrl
sub
lret
xlat
push
fisubrl
je
dec
inc
jbe
and
inc
push
insb
jo
test
sti
test
fadds
cld
mov
jecxz
dec
test
sbb
loopne
jmp
pop
outsl
sbb
ds
movsb
into
sbb
push
adc
dec
es
fpatan
add
pop
xor
adc
sarb
xchg
aas
add
incb
mov
daa
jl
movl
loop
daa
mov
xchg
or
mov
test
push
push
aam
cmp
dec
les
or
mov
pop
dec
outsb
sbb
and
lret
arpl
pop
das
mov
ss
mov
jnp
pop
mov
and
lahf
lods
ljmp
jecxz
xchg
jmp
jno
pushl
test
cmp
shl
xor
push
int3
addb
xchg
loopne
push
xlat
adc
sub
or
jp
arpl
jns
or
dec
cmc
cmp
inc
stc
inc
sub
aam
pusha
mov
ret
xchg
shr
mov
xlat
push
mov
insl
push
aaa
gs
dec
inc
pop
mull
or
lcall
imul
outsb
jg
pop
fwait
clc
pop
insl
or
mov
inc
cmp
adc
or
std
lock
jecxz
repnz
add
shlb
add
cmpsb
xor
cmpsb
enter
jecxz
loopne
lcall
mov
cmp
cmp
shl
sub
jmp
sub
addl
imul
insl
mov
gs
inc
iret
jae
adc
xchg
cltd
push
mov
jl
xchg
js
fsubrl
or
mov
rol
popf
mov
das
adc
cmp
imul
insb
imull
sub
loope
fnstenv
movsl
add
dec
sbb
mov
lahf
mov
jbe
sbb
xchg
data16
es
sub
mov
xchg
mov
shrl
loopne
add
lahf
js
push
mov
sub
or
scas
push
cmc
das
sbb
loop
insl
jns
pop
add
sub
mov
test
inc
test
sbb
loopne
addb
pop
pop
scas
popf
jl
jbe
pop
je
sub
pop
test
pop
loop
mov
and
notb
iret
in
cli
or
inc
push
jp
roll
popf
fimull
fldl
add
add
push
sub
mov
jmpw
xchg
push
sahf
mov
shl
jg
jle
jmp
mov
mov
pop
mov
add
fisttpll
mov
addr16
scas
ret
xchg
xchg
std
push
xchg
stos
fsubrl
sbb
lock
or
sbb
cmpsl
dec
push
lret
and
mov
cmc
mov
addr16
push
xlat
in
subl
hlt
add
add
pop
in
stc
hlt
sarl
xor
fiaddl
xchg
in
test
clc
adc
jns
mulb
clc
push
jb
insb
pop
or
cmp
inc
fs
fildll
xor
pop
loopne
mov
xchg
cmpsb
jge
pop
iret
pop
aad
cmp
cmpsb
insb
mov
and
mov
sbb
mov
int
add
jno
lret
jo
xchg
lret
loop
xchg
fdivl
xlat
push
cltd
adc
faddl
push
hlt
jge
in
jp
jno
mov
push
pushf
xchg
divps
mov
inc
fiadds
add
mov
in
lret
sbb
push
jnp
mov
out
clc
add
iret
push
test
push
les
ja
cltd
sbb
xchg
pop
and
add
add
sahf
ss
add
testb
xlat
sub
or
sbb
in
cld
mov
push
xchg
ljmp
mov
dec
fdivrp
rorb
xchg
pop
push
or
in
mov
dec
add
arpl
ret
daa
or
mov
xchg
lds
mov
add
xor
mov
leave
and
test
cmpsb
mov
sahf
imull
sbb
filds
leave
dec
mull
mov
xor
lahf
into
fisttpl
mov
cltd
mov
mov
mov
adc
inc
je
dec
inc
aaa
gs
hlt
dec
outsl
out
jbe
pop
ja
cmpsb
fimuls
xchg
mov
inc
daa
jns
test
jne
xor
daa
xor
inc
sbb
shll
and
or
leave
icebp
pusha
dec
iret
jecxz
push
pop
fs
cmpsb
xchg
test
fcmovu
add
mov
aas
std
call
ljmp
sarb
aas
fs
or
mov
negl
aad
mov
push
adc
std
xor
in
jbe
adc
roll
pop
push
or
jmp
lds
aad
test
add
scas
shl
add
mov
in
movsb
scas
adc
jbe
and
xchg
push
outsl
cltd
sarl
fwait
mov
lcall
test
cmp
imul
fcmovnu
call
sbb
mov
jmp
sbb
sbb
mov
dec
mov
mov
sbb
test
lods
inc
adc
mov
mov
or
sbb
ss
lock
lods
rorb
mov
imul
es
xor
xchg
fisubl
mov
xchg
rclb
std
dec
ret
mov
mov
jae
jnp
fwait
pop
cmp
or
pusha
frstor
fisttps
clc
cltd
stc
mov
mov
mov
int
test
cmp
and
ret
enter
lds
popa
test
lods
cld
rcrl
and
inc
adc
and
aaa
imul
mov
sbb
xor
loop
cmp
add
jnp
in
or
rorl
je
inc
mov
into
xchg
pushf
je
insb
pop
leave
lea
push
mov
ret
leave
sbb
pop
jmp
aam
dec
fldenv
jnp
add
ret
adc
loop
xor
ror
in
jnp
sub
dec
adc
sbb
xor
stos
add
pop
test
gs
dec
ljmp
sub
mov
pop
fwait
cltd
jmp
jle
fdivl
xchg
lods
sub
dec
sbb
push
rorb
lea
dec
outsl
loop
pop
inc
decb
adc
cmc
sbb
jp
or
out
mov
mov
adc
push
sbb
in
cmp
int3
pop
xchg
mov
int3
xchg
in
rolb
mov
push
sub
push
sub
mov
pop
sub
mov
mov
jne
shll
jmp
add
lcall
xchg
outsl
imull
arpl
adc
dec
test
outsb
loopne
adc
sahf
mov
jnp
push
cmpsb
push
sub
adc
mov
in
jb
lea
movl
mov
out
das
dec
adc
fidivrs
adc
testl
aaa
out
pop
add
stos
and
and
cmp
xchg
mov
lret
and
loope
int3
lods
out
pop
mov
addr16
fxch
out
outsl
dec
test
push
dec
sub
inc
pop
push
push
pop
leave
test
lret
test
jmp
mov
lcall
push
pop
shlb
ja
pop
pop
and
cmp
sbb
rcr
test
adcb
in
gs
pcmpgtw
sbb
repz
push
ja
push
loop
jle
adc
pop
stc
orb
jmp
add
nop
clc
add
sahf
movsb
cmc
sbb
enter
out
dec
pop
sahf
das
je
shlb
pop
lahf
push
arpl
rol
add
aad
int
xchg
repz
jl
cmc
jmp
jo
sbb
sbb
add
dec
mov
andl
in
les
push
lock
frstor
adc
cs
aam
jnp
cmp
out
or
cmp
sub
cld
lcall
inc
adc
jb
mov
mov
jo
in
mov
pop
jb
hlt
xchg
push
push
pop
mov
jnp
adc
cmpsb
or
adc
icebp
dec
jp
das
dec
sub
addr16
pusha
mov
pop
fs
cmp
mov
add
push
imul
mov
cmp
cwtl
fdivrs
add
lods
aaa
fists
ret
xchg
out
ret
or
scas
mov
lcall
inc
pop
in
imul
jg
adc
enter
inc
sbb
add
inc
xor
pop
push
push
je
lahf
inc
push
sbb
mov
mov
mov
sbb
add
xchg
ds
lods
sbb
movsb
mov
data16
push
jns
jb
bound
shlb
icebp
or
jecxz
inc
xor
adc
push
xchg
mov
aaa
push
je
je
js
xchg
repz
mov
cmpb
and
clc
cmp
imul
push
and
stc
test
adc
dec
or
cmp
mov
fs
int3
sti
cmp
pusha
xor
fmuls
cmpb
les
push
popa
mov
add
icebp
rcr
jnp
xchg
dec
push
and
mov
jecxz
or
dec
xchg
pop
inc
or
jge
jne
xor
xchg
sbbl
bound
adc
incl
data16
ljmp
rep
dec
fsqrt
shrb
rolb
add
adc
or
iret
testb
add
or
aas
out
shrl
shlb
sub
test
mov
pop
pushf
inc
pusha
pop
sub
add
mov
pop
xchg
mov
aad
xchg
nop
adc
or
and
pop
int3
lock
iret
pusha
xchg
and
mov
pop
push
movsl
mov
push
jae
incl
push
mov
fs
addr16
xor
es
push
aam
shll
lods
out
mov
into
inc
sbb
sub
xor
pop
cmp
inc
nop
scas
ja
push
lock
xorb
and
rcrb
fnsave
xor
insb
je
pop
and
test
outsb
adc
sbb
inc
outsb
test
sbb
insl
mov
popa
roll
shll
daa
xor
jecxz
cmp
sahf
subl
cmc
mov
add
sar
in
mov
mov
aad
lret
xor
jbe
insl
push
mov
js
imul
jno
shl
test
mov
mov
addb
outsl
test
icebp
jb
cmp
jnp
jbe
push
daa
mov
rcll
loope
xchg
mov
stc
adc
adc
mov
xor
xor
xlat
xor
daa
xchg
lret
xchg
jle
neg
sub
and
xor
sti
leave
and
sub
out
jbe
pop
test
loopne
xlat
test
push
mov
into
std
or
sub
stc
ss
icebp
xchg
push
fdivrs
or
push
pop
scas
pop
add
negl
add
mov
xor
sti
pop
scas
aaa
lcall
sbb
inc
bound
inc
lods
fsts
mov
sbb
mov
int3
arpl
addl
xchg
sub
pop
imul
clc
jns
jno
movsl
aad
insb
xchg
repz
shr
insb
es
ret
add
sub
add
mov
adcl
aam
in
das
xchg
mov
sbb
pop
repz
cvtpi2ps
mov
fiadds
jo
add
fistps
ficomps
cmpsl
pop
subb
xor
fs
mov
jbe
or
cmpb
fstl
mov
out
mov
sti
cmp
xchg
stos
stos
sbb
cmp
out
sub
nop
jns
mov
xchg
in
imul
adc
clc
xlat
push
inc
jns
and
adc
int3
cmp
addl
das
cmp
shrl
pop
dec
dec
cmp
mov
adc
in
mov
imul
fdiv
hlt
mov
js
in
ret
jne
popf
xor
or
test
lcall
cmpsb
cltd
ffree
and
xchg
repz
adc
movsl
or
sbbl
inc
adc
inc
push
cmpsb
xorl
cmovp
cwtl
pop
cwtl
mov
outsl
jl
in
xlat
cltd
aad
mov
inc
fisubl
or
mov
daa
add
bound
pop
movsl
xor
lcall
shl
lret
std
push
or
divl
pop
sub
scas
and
push
sbb
push
mov
cmc
out
fs
inc
push
and
xlat
xor
cmpb
sub
pop
xchg
pusha
lds
ret
repz
xor
int
lods
scas
mov
js
fwait
aas
sub
inc
stos
leave
inc
loope
lcall
jb
fwait
imul
lods
js
inc
bound
and
mov
xchg
imul
cld
insl
jns
je
mov
insb
add
jo
pop
push
push
mov
add
lret
push
lret
and
inc
push
dec
andb
pusha
push
add
lock
in
add
pop
mov
bound
push
xchg
mov
mov
bound
cmpsl
adc
in
xor
push
xchg
ret
icebp
cmp
std
out
loop
mov
mov
dec
dec
adc
hlt
out
outsb
and
jge
xorb
dec
jne
lods
sub
or
aaa
out
cmpsb
lea
add
aaa
movsl
mov
dec
cmp
inc
repnz
sub
sbb
lock
and
jl
jbe
pop
shll
pop
lock
sbb
cmp
cwtl
sbb
inc
mov
les
sbb
cmp
cltd
mov
syscall
andl
add
and
and
adc
pop
or
xchg
push
dec
aad
push
jecxz
cmpsl
nop
loop
lock
dec
adc
inc
pop
and
push
jl
sub
mov
in
mov
inc
lds
pop
sbb
pop
out
in
pop
ffreep
cli
dec
sub
lods
cltd
aam
out
push
movsl
cmp
dec
std
out
or
cmp
in
and
jg
popf
arpl
cs
mov
decb
subl
jo
xor
inc
aaa
out
bound
repnz
andl
fstl
or
retw
jae
out
das
xchg
adc
es
scas
inc
subb
dec
mov
ds
sahf
fcoms
xchg
and
and
jae
sub
movb
enter
js
out
pushl
jb
les
and
jno
scas
xlat
mov
or
mov
int3
xor
pop
mov
and
flds
jl
xchg
ds
test
out
adc
jecxz
sub
xor
mov
mov
adc
push
dec
cmp
push
in
cld
insb
push
cli
inc
popa
dec
cltd
xor
sti
arpl
mov
or
and
jle
push
xchg
sbb
pusha
addl
push
sub
push
loop
mov
xor
sbb
je
add
fdivrp
pushf
sarl
arpl
imul
leave
pop
sub
js
test
mov
ficoml
hlt
mov
into
sub
and
xor
sub
push
mov
sbb
fisttpll
orl
popa
lods
pop
jl
mov
push
outsb
test
pop
sbb
pushf
xchg
out
mov
scas
xchg
arpl
jne
dec
mov
jae
mov
cwtl
push
popf
push
call
enter
je
push
cli
mov
lods
aad
dec
mov
in
fstl
sub
or
sarb
js
cld
scas
pushf
outsb
testl
pop
popf
sub
pop
mov
push
in
xor
push
aam
cmpl
imul
fimuls
fmuls
mov
pop
cmpsb
pop
bound
loopne
stc
xchg
xchg
xlat
mov
icebp
daa
aas
test
inc
add
pop
jb
mov
adc
xchg
jmp
mov
out
rorb
roll
aam
lds
push
fstl
mov
sbb
jg
sahf
mov
inc
dec
or
insb
dec
xor
rcll
ja
jecxz
jge
inc
adc
gs
cmp
mov
mov
sbb
ja
cmp
sub
xchg
fwait
lcall
sub
in
pop
sub
dec
sub
shrl
or
mov
cli
jmp
sarb
and
je
inc
lea
dec
popf
adc
add
std
fmulp
ds
or
xor
lahf
push
fsub
push
adc
xchg
mov
xor
jp
fwait
mov
lahf
mov
mov
cmpsl
cmp
cmpsb
mov
cmp
fidivrs
fwait
and
imul
xchg
cltd
divl
shll
clc
pop
mov
popf
mov
dec
pop
mov
jg
mov
pop
cmp
pop
pop
rdpmc
sahf
push
cmpsb
cs
cli
dec
and
shll
hlt
xchg
push
jnp
daa
ret
mov
pop
jle
push
loope
mov
and
arpl
xor
mov
jmp
push
xchg
enter
fidivrl
xor
xlat
arpl
mov
test
pop
fmull
and
adc
aad
and
push
test
les
loopne
pop
mov
pop
or
mov
mov
push
pop
andb
icebp
loope
cmpsl
cmp
xlat
loopne
out
sar
arpl
xor
xor
jmp
ficomps
xor
jp
or
dec
cwtl
inc
push
pop
pop
pop
and
test
and
sbb
sarl
mov
inc
addl
jae
shlb
cmpsb
ret
push
pop
pop
and
lods
jne
insb
ret
nop
lea
pop
xchg
dec
dec
jnp
jae
mov
mov
xchg
and
jle
inc
ret
inc
sub
and
ljmp
fdivl
add
mov
cmp
in
mov
adcl
bound
cmp
dec
fiaddl
cmp
ja
loope
ror
loope
and
sti
shll
mov
in
sub
and
cmpb
cmp
pop
pop
mov
fimull
mov
rcrb
dec
mov
pop
mov
push
loope
cmp
sbb
mov
mov
sub
in
lea
iret
jns
jg
or
jg
lea
insl
push
sub
jmp
loop
aaa
adc
mov
jmp
dec
cmp
movsl
cmpsb
mov
mov
popf
adc
mov
jne
jae
icebp
iret
es
cmp
js
cmp
in
dec
mov
push
mov
in
stc
jne
scas
out
lahf
lods
mov
and
ss
cs
popa
sub
cmp
mov
fidivl
loop
sub
mov
sub
rclb
mov
aas
mov
cwtl
xor
fidivs
das
mov
xor
xchg
mov
push
rorb
int3
mov
xchg
jae
fnstsw
les
insl
sbb
jae
cmp
ror
mov
lahf
push
subl
adc
into
jle
jno
pop
push
adc
ljmp
and
test
sbb
pop
clc
and
outsl
icebp
into
jmp
fbstp
mov
insb
movb
sub
addr16
loopne
jae
mov
aam
fwait
jo
inc
add
sahf
mov
pop
adc
pop
mov
sub
add
pop
mov
mov
imul
xchg
pop
mov
shll
clc
das
pop
push
fdivrs
test
lods
jne
rclb
mov
out
dec
aaa
mov
cmovle
dec
fldenv
pop
and
negb
cmp
mov
xchg
fidivrl
mov
stos
and
cwtl
jo
imul
bound
mov
testl
push
dec
mov
aam
mov
sahf
pop
jl
ja
hlt
sub
das
lods
faddp
mov
adc
test
scas
sti
mov
addr16
in
mov
pop
cmp
bound
test
and
pusha
inc
sub
jne
ret
ret
fdivrp
lret
scas
dec
les
fadd
sbb
and
test
scas
add
mov
push
or
pusha
ljmp
icebp
pop
mov
push
push
lret
and
jmp
pusha
xor
popf
sub
cmpb
fsubl
and
decb
mov
cwtl
lock
mov
arpl
mov
out
dec
jmp
fs
pop
fdivs
add
jae
xchg
frstor
jmp
lret
mov
pop
fwait
test
addr16
lock
in
xchg
mov
or
mov
pop
xor
mov
into
shl
xchg
inc
mov
dec
cmpsb
or
xor
dec
mov
shl
cmp
out
into
inc
aaa
dec
into
outsb
mov
clc
insb
sub
adc
jmp
aad
pop
rolb
and
jns
das
negl
std
outsb
xchg
xchg
imul
pop
loop
sub
cmp
mov
jge
je
cmp
repz
or
orl
mov
mov
add
fwait
outsb
xchg
pop
inc
inc
sarb
cltd
iret
call
inc
addr16
pop
push
scas
push
inc
add
mov
dec
pop
inc
dec
and
shlb
dec
test
scas
adcb
movsb
inc
std
xor
pusha
mov
addl
aas
adc
ja
xchg
ss
xor
sarl
pop
test
div
test
add
jb
or
xor
dec
push
fincstp
xchg
xor
lea
or
inc
loop
cmpsb
mov
or
fmuls
mov
xchg
scas
sbb
pop
fcomps
int3
sub
jns
mov
push
mov
imul
xor
in
rorl
sbb
inc
lods
push
xorb
mov
pop
xor
dec
popf
test
sbbb
adc
add
jne
add
mov
lret
ret
mov
sub
lds
push
adc
adc
out
jae
jl
ret
and
out
jno
mov
cltd
jb
inc
adc
dec
imul
fwait
or
and
stc
xor
push
sbb
fwait
sbbl
mov
mov
testb
mov
pop
adc
sbbl
in
pop
shl
outsl
dec
xlat
repz
pop
fst
aad
notb
cmp
aam
dec
cltd
jg
fdivrl
and
movsl
cmp
and
pop
mov
pop
push
xchg
sub
and
dec
in
or
pop
test
or
mov
sbb
sub
adc
cmpsl
pop
and
pop
inc
and
jmp
fld
ds
and
repz
xor
movsb
in
mov
cmpsb
inc
inc
hlt
and
hlt
testl
jo
flds
sub
push
cmp
push
cmpl
jecxz
pop
addr16
out
andb
xor
push
rcll
xor
dec
mov
enter
testb
pop
lods
fs
call
pop
cld
stos
jl
jmp
or
andb
pop
add
cmpb
inc
and
pushf
pop
adc
je
sbb
lahf
inc
jo
es
cld
rorb
loopne
sbb
mov
ret
shrb
pop
out
popa
inc
gs
jae
iret
cmp
jae
scas
dec
mov
pop
mov
stos
jle
cmc
enter
xchg
mov
mov
leave
sub
cltd
dec
mov
mov
or
sbb
xor
loopne
xchg
cmpsb
mov
les
or
inc
add
shlb
jmp
orl
mov
int
leave
std
dec
fnstenv
jl
int3
jns
filds
pushl
notb
fcoms
adcb
shll
insb
mov
ja
cmp
ret
push
and
push
aad
ret
push
cmp
and
aad
pop
mov
outsl
and
sbb
sbb
in
cmp
fstl
lahf
mov
sbb
jg
movsl
xlat
xor
faddl
repz
push
push
call
ljmp
add
and
loop
pop
push
dec
cltd
jl
dec
dec
lret
sarl
adc
mov
adc
shlb
sub
jg
mov
fwait
sahf
loope
mov
inc
jle
lret
loop
add
mov
lret
jl
pop
mov
pop
lods
push
push
sub
or
addr16
sbb
jbe
ja
xor
das
cmpsb
jne
mov
add
or
adc
cmp
pushf
subb
cmc
pop
test
arpl
xchg
xorl
xchg
in
and
add
aaa
xchg
addr16
ret
ret
movb
xor
sets
adcl
cmp
add
aad
mov
lods
ss
jg
insl
mov
push
fnstenv
push
mov
fsubrs
or
cmp
xor
sub
cld
insb
shr
sbb
mov
js
adc
imul
stos
push
test
jle
testl
xchg
movl
pop
add
lcall
pop
pushw
in
sahf
adc
idivb
fmull
or
ret
insl
iret
or
inc
xchg
dec
mov
dec
cld
dec
roll
mov
hlt
imul
cs
cmp
test
jmp
inc
pop
add
add
inc
rorb
stos
fnstcw
cmp
daa
and
adc
mov
dec
cmp
out
test
outsb
add
fwait
mov
outsl
xor
repz
xlat
std
push
mov
sbb
dec
lods
jbe
and
movsb
lods
or
push
add
adc
shrb
or
xchg
add
adc
into
cmp
inc
lods
cmp
aas
stos
pop
test
xor
jmp
imul
and
cld
fldenv
insl
mov
stos
inc
jne
mov
mov
mov
xchg
jae
adc
xchg
push
and
enter
cmp
enter
jb
lcall
ja
xor
cmp
shlb
jne
and
lahf
mov
inc
out
aas
cmp
popa
test
mov
push
xor
mov
imul
add
and
loop
fucomp
cmp
mov
aaa
jns
mov
lods
cmpsl
adc
cmp
sbb
sub
jge
arpl
loop
adc
dec
or
sbb
and
lahf
mov
cwtl
fs
adc
mov
mov
repz
outsl
xlat
mov
nop
aaa
jl
dec
aas
gs
outsb
dec
push
pop
out
insb
mov
std
pop
adc
dec
ficoml
fcomps
fxch
jmp
sbb
mov
insl
xor
movsb
jp
nop
aad
mov
mov
jge
lcall
mov
in
iret
sbb
pop
outsl
jnp
aaa
inc
jl
sbb
loop
add
mov
lahf
add
fstl
inc
inc
ja
repz
movsl
jle
int
sbb
addl
pop
movsl
gs
cmpsl
sahf
xchg
or
adc
rcl
cmpsb
mov
gs
insl
or
icebp
xchg
or
fs
insb
mov
adcl
movsl
pop
test
cmp
mov
dec
pop
mov
inc
call
sbb
adc
or
jp
outsb
mov
stos
pop
movsl
fdivl
pop
jl
loope
mov
mov
insb
sahf
xlat
adc
pop
jbe
aam
push
jge
xchg
negl
mov
les
addr16
mov
ds
cmpsl
inc
mov
mov
aaa
adc
addr16
push
xchg
or
fists
add
push
mov
loopne
repnz
mov
ret
and
sbb
nop
jns
xchg
xchg
and
sbb
push
cmp
jo
cwtl
out
lret
aaa
push
dec
not
lea
dec
push
idivb
sbb
push
jl
insl
push
pusha
pusha
push
in
test
stos
in
dec
lods
ss
fwait
jle
pop
and
aas
outsb
inc
fsubrl
dec
or
inc
adc
inc
lock
inc
aas
or
push
mov
xchg
out
pop
sbb
mov
popa
leave
pop
cld
sub
mov
repnz
stc
push
push
cltd
mov
inc
loop
xlat
mov
sbb
cmp
aam
push
add
out
pop
xchg
test
loope
mov
cmc
std
xor
fisubrs
fsubl
sahf
dec
jb
in
inc
ljmp
xchg
pminsw
lods
addr16
push
lahf
js
xlat
adc
fistl
pop
pop
push
loope
idiv
lods
xchg
pop
mov
in
cltd
and
in
adc
jp
sahf
jp
aas
inc
pop
mov
push
dec
sbb
dec
sub
sbb
lcall
jb
cmp
rorb
aas
adc
adc
jle
jo
adc
cli
outsl
or
aad
mov
and
pop
sub
scas
pop
dec
aas
pop
mov
or
sbb
fistps
cmp
push
pop
xchg
cwtl
cs
ja
xor
sub
mov
pop
xchg
jmp
or
int
hlt
nop
daa
xchg
lds
iret
push
test
pusha
popf
sets
add
xlat
mov
jnp
mov
push
pop
mov
mov
pop
in
mov
sbb
xchg
int
lretw
daa
push
and
lret
xchg
fstpt
outsb
dec
outsb
fsub
mov
add
or
cwtl
jne
mov
push
jo
ds
cmp
jmp
aam
mov
push
cmp
mov
inc
inc
rolb
jle
in
int
psrld
lods
lret
sbb
scas
mov
mov
dec
mov
inc
mov
inc
hlt
cli
js
mov
jo
xor
push
mov
jecxz
es
lret
sub
cmc
and
cmp
lods
cld
inc
xor
push
scas
out
push
sbb
aam
push
repz
addb
lock
push
push
push
pop
lock
cmc
out
cmp
repnz
imul
sbb
mov
mov
pop
and
stos
psubd
gs
cmp
enter
or
rol
inc
mov
mov
cmp
jmp
popf
mov
jl
es
push
push
nop
push
iret
test
sbb
cmpsl
loop
aas
mov
xor
and
jecxz
push
add
outsl
cmp
out
mov
or
stc
mov
movsl
add
or
fcmovnb
les
add
stos
sahf
adc
test
xlat
pop
das
cltd
lahf
mov
xchg
mov
add
mov
enter
xchg
addr16
cmpsb
fidivrs
inc
cmp
push
out
sub
jge
pop
or
xor
cmc
cs
outsl
cmp
pop
push
xchg
cmpsb
mov
pop
inc
sbb
jne
pop
into
nop
jmp
adc
iret
leave
pop
out
jl
pop
sub
stc
stos
mov
aam
mov
into
orb
pop
js
in
jae
fidivl
jo
in
or
incl
pop
andb
int3
repnz
mov
subb
int3
pop
ret
push
daa
dec
bound
scas
es
adc
call
sub
arpl
mov
push
out
lret
cmp
jge
stc
in
icebp
lds
push
je
cmp
test
jp
or
in
ja
inc
jne
loopne
mov
jno
je
mov
popf
std
icebp
and
mov
cli
push
push
or
jno
mov
push
gs
mov
cmp
lods
fs
mov
and
into
sti
or
xlat
lea
mov
or
sbb
jnp
adc
jge
stos
cmp
jle
push
test
out
orl
mov
mov
xchg
and
call
sahf
sti
stos
sbb
cwtl
test
ljmp
hlt
out
mov
xchg
addb
push
ja
cltd
repnz
cmp
jge
dec
and
enter
dec
aas
xor
jns
arpl
mov
and
xchg
add
scas
push
dec
mov
popa
sub
mov
cmp
lret
lea
rorb
dec
aad
lods
add
or
andl
fimull
hlt
mov
movsb
pop
push
daa
orl
xchg
stc
orb
inc
mov
cmpsb
sbb
cmpsb
flds
mov
stos
out
shll
mov
decb
rorb
xorb
clc
xchg
les
sub
add
and
sbb
loopne
subb
lea
fs
jnp
mov
adc
and
or
movsb
loope
and
arpl
repz
shlb
mov
test
lret
cmpsl
sbb
or
jmp
repnz
scas
jl
iret
decb
pop
cmp
in
sbb
mov
xor
push
test
gs
aam
imul
cmp
ss
imul
jp
xchg
push
bound
sub
mov
jbe
les
jnp
mov
imul
push
fmulp
sbb
xorl
mov
mov
cmpsb
scas
jp
ja
add
les
pop
lods
out
adc
loope
add
mov
inc
mov
add
enter
and
xor
or
inc
hlt
pop
cmc
loopne
addr16
xor
fs
enter
mull
aam
lock
jo
pop
aam
mov
shlb
or
cmc
adc
mov
inc
and
pop
shlb
filds
cmp
aaa
jl
adc
adc
sti
add
cwtl
and
rcl
rcr
jle
dec
xor
je
daa
and
lret
lods
push
cld
lock
push
pop
aad
cmc
aam
pop
loope
mov
fnstenv
adc
test
jl
add
sub
je
push
and
je
in
jecxz
popf
mov
mov
dec
clc
push
cs
enter
mov
inc
mov
lret
or
pop
mov
dec
sbb
popa
loop
xchg
stos
mov
mov
das
andl
mov
and
inc
out
mov
loope
sbb
test
sub
lock
xor
movsb
mov
dec
hlt
dec
push
xor
mov
or
jbe
push
adc
jge
inc
je
jg
fwait
test
fsubrs
or
test
sub
les
adc
adc
clc
stos
pop
xchg
fadds
jl
cmp
cli
and
jl
xchg
lahf
aas
jmp
ja
push
mov
test
pusha
push
cli
movsl
mov
pusha
push
sti
fwait
mov
and
int
popf
loop
mov
int
adc
pop
pop
xor
adc
pop
scas
outsl
lods
nop
sbb
xor
sbb
cwtl
in
jle
clc
int
pushf
js
cmpsl
mov
adc
ja
lret
inc
inc
jmp
leave
sub
xlat
adc
xchg
test
fistpll
sti
adc
sub
cmp
sbb
aas
mov
nop
jl
push
xor
in
sub
push
insb
add
int
jo
mov
lock
imul
dec
aad
mov
js
mov
imul
jle
decl
ljmp
movsb
mov
inc
lret
push
mov
xor
cmc
mov
inc
cmp
lock
in
cwtl
test
repnz
sbb
das
pop
outsl
cmp
xlat
insl
cmp
div
out
test
and
lea
push
jno
xorl
jg
xchg
xor
mov
xor
outsl
out
mov
mov
jmp
lock
dec
mov
jge
sbb
lcall
inc
lcall
pop
dec
sti
xor
hlt
out
jg
and
test
mov
out
daa
ja
adc
test
cmpsl
mov
or
adc
pop
cmpsb
in
out
fmuls
add
sub
mov
in
inc
and
loop
stos
insl
aaa
scas
mov
xor
xor
hlt
mov
cmp
test
xchg
into
sub
repz
jns
add
jb
xchg
jns
sub
test
shrb
lret
jno
and
imul
rep
loopne
dec
mov
mov
jle
mov
sbb
dec
sbb
mov
jg
adc
out
stos
imul
pop
xor
dec
pushf
stc
in
ljmp
mov
mov
inc
sub
cmp
faddp
inc
push
scas
inc
xchg
push
aam
dec
xor
sub
int3
cmp
cli
in
ret
inc
sbb
xor
jnp
fsubrs
push
mov
cmp
scas
push
sbb
xchg
into
lods
jo
lock
mov
and
das
enter
lret
aad
mov
roll
and
cmp
push
dec
mov
xchg
xor
pop
enter
mov
sub
cmp
addr16
or
sub
inc
mov
les
out
lods
cmp
cld
mov
xor
fdivl
xchg
out
shlb
mov
pop
cld
sub
int3
sbb
xor
pop
push
lods
pop
dec
lret
jns
cmp
sbb
mov
add
divl
movsl
loop
std
inc
push
mov
fldl
mov
adcl
ljmp
jne
cltd
xor
in
movsl
idiv
lds
shrb
pop
xor
cmpsl
cmp
jp
pushf
int3
or
shlb
add
lock
iret
mov
cmp
cmp
inc
fsubs
inc
jns
add
call
sbb
loope
adc
pop
push
jb
adc
push
inc
cmp
pushf
or
sbb
jns
cwtl
test
inc
dec
fmull
sti
or
dec
push
or
cli
pushw
jl
xchg
mov
in
xchg
cmp
call
lret
mov
movsl
ror
in
iret
and
lcall
inc
mov
jae,pt
sbb
cmp
ljmp
push
je
repnz
pop
xchg
sub
les
pop
dec
mov
adc
insl
mov
push
jno
push
and
mov
sahf
std
test
dec
sbb
orl
pop
adc
arpl
fsubrs
cli
and
mov
negb
mov
fildll
jg
jge
pusha
scas
mov
cld
imull
arpl
or
inc
mov
fsts
add
sbb
cld
lret
dec
cmp
ret
arpl
push
jo
lret
pop
mov
movsb
push
icebp
and
loope
rcll
push
out
push
sbb
les
shlb
loopne
leave
jne
loop
adc
pushf
sbb
or
lahf
jne
fisubs
pop
repnz
add
scas
or
cli
pop
cmp
jp
sub
cli
inc
sahf
mov
andl
ficoml
fdivs
addb
fcompl
outsl
sub
into
in
adc
fisubl
jnp
push
mov
cmp
aam
mov
ror
sub
cld
orb
xor
orb
push
or
mov
fbld
inc
xchg
or
mov
dec
iret
xor
imul
call
cmp
scas
sub
pop
rcr
out
movsl
mov
in
mov
mov
repz
cmp
inc
mov
xchg
cmp
jae
rcrb
ds
or
xor
test
loope
std
roll
movsb
js
mov
add
les
mov
fwait
cmp
mov
mov
mov
mov
stos
adc
sets
push
inc
xor
add
fwait
ljmp
jb
add
mov
add
addr16
sbb
mov
adc
fisttpll
aam
cmp
push
inc
xchg
mov
fs
inc
lret
iret
inc
xor
movsl
push
mov
test
or
inc
sbb
lret
pushf
ds
sbb
add
in
mov
adc
ja
aas
cmpsb
cltd
lahf
jae
and
repnz
arpl
sbbl
inc
sub
leave
repz
dec
pop
movsb
jnp
rolb
jns
fxch
mov
mov
xchg
sub
insl
adc
xchg
mov
xchg
outsl
cmp
roll
push
xchg
imul
push
cli
push
ljmp
mov
adc
mov
in
movsb
push
fsubrs
popf
dec
dec
in
icebp
stos
mov
cli
push
fdivl
sbb
insl
mov
cmpl
mov
popf
mov
adc
inc
sti
cmp
fs
sub
sti
loope
insl
xchg
addr16
jo
in
mov
inc
js
xchg
je
mov
fstl
or
ljmp
int3
pop
scas
fsubrl
cmp
xor
ret
or
cmp
std
adc
adc
cmpsl
mov
cs
xchg
xchg
or
lods
arpl
leave
iret
out
pushf
fiadds
push
xchg
bnd
sbb
dec
and
dec
pop
andl
nop
jnp
loopne
out
movsb
push
dec
es
xchg
es
and
shl
add
sub
inc
rcll
ss
loopne
mov
and
daa
xchg
cmp
xor
pushf
and
cwtl
fiaddl
stc
in
mov
inc
lret
or
sbb
mov
cmp
dec
icebp
dec
addr16
sub
sbb
add
push
stos
repnz
push
frstor
sub
pop
cmpsl
cli
popf
rcrb
adc
icebp
sub
xor
add
stos
test
fwait
std
clc
xchg
push
ja
cmp
lret
xchg
out
fs
rcr
popa
xchg
push
jbe
int3
lock
gs
xor
mov
dec
std
dec
fdivl
mov
cmp
and
out
insl
mov
std
pop
dec
outsb
insl
inc
nop
mov
notb
add
cltd
pusha
adc
dec
outsb
mov
sbb
sub
orl
push
fs
movsb
cmp
rclb
cmp
jp
xchg
inc
pop
call
cld
mov
fisubrs
inc
push
int
pop
xor
outsl
pop
mov
push
shlb
out
in
mov
cmpb
mov
mov
or
int
or
lcall
adc
lcall
fmull
mov
scas
adc
imul
ja
pop
sbb
fildll
mov
mov
movsl
xchg
or
dec
jns
in
pop
in
pop
ret
mov
rcl
ret
cmp
mov
int3
mov
or
mov
sti
push
lock
mov
mov
xchg
js
add
mov
or
addr16
sbb
pop
and
xor
add
lea
mov
adc
int
inc
call
ja
inc
and
ljmp
inc
mov
pusha
mov
fs
xchg
add
out
push
jae
fstp
pop
jge
sahf
dec
inc
add
mov
ja
xchg
or
lcall
and
lods
cli
ret
mov
jo
loope
mov
call
pushf
xchg
cmp
lret
xchg
in
imul
in
mov
dec
and
bswap
outsb
sub
hlt
sbbl
and
lea
aas
jbe,pn
jo
in
jmp
inc
or
bound
sub
adc
inc
outsl
mov
ja
js
and
lods
mov
stos
add
test
mov
jae
mov
ret
dec
and
rorb
xchg
out
mov
xor
sub
push
pop
push
fnsave
test
sti
arpl
xchg
test
imul
gs
mov
orb
adc
mov
cmc
xchg
jl
mov
xlat
push
sbb
call
adc
popa
inc
inc
jbe
or
std
cmp
push
push
push
mov
xchg
rcll
in
add
repnz
insl
popa
rolb
shll
cld
inc
subl
mov
fsts
pop
inc
cltd
movsl
inc
push
cmp
es
dec
push
aaa
aaa
xor
xchg
sbb
pop
xor
hlt
push
jno
cmpb
push
out
mov
inc
and
cmpsl
andl
loopne
pop
pop
imul
and
mov
testb
xor
stos
sti
add
mov
adcb
bound
dec
lahf
sub
ret
cmp
lret
lds
fmuls
push
push
les
cmpsb
in
fnstsw
test
popf
dec
setae
fiaddl
cld
pushl
adc
lahf
rol
dec
ret
loope
inc
roll
sub
pop
inc
xchg
pop
jns
push
repnz
out
mov
stos
rcrl
mov
xor
sub
sub
xlat
cld
inc
test
xchg
jmp
arpl
out
jne
add
adc
xorb
fwait
xor
kmovw
in
scas
cwtl
jo
mov
dec
jmp
call
stos
add
sbb
lret
add
or
jmp
icebp
push
fmuls
push
out
push
adc
or
jae
mov
xor
stos
jne
push
mov
xor
xchg
add
into
fs
lods
dec
fstps
or
enter
das
xor
scas
jns
or
and
movsb
lea
xorl
or
outsb
fdivl
stc
lret
arpl
inc
or
subb
xor
mov
mov
fwait
std
fsubs
repnz
dec
adc
ljmp
xchg
in
or
ret
cltd
fs
mov
jb
stos
cmp
aad
jp
aam
push
aas
mov
dec
and
movsl
icebp
orb
test
and
cltd
int
call
mov
jns
or
outsl
daa
xorl
pop
rclb
iret
fldcw
out
push
mov
adc
out
stos
mov
aaa
mov
test
mov
cs
das
clc
daa
inc
mov
jmp
enter
jb
ret
push
adc
xor
mov
fstpt
mov
cmp
cld
rcrl
sub
pop
mov
add
pop
inc
sbb
jo
fisubs
xorl
mov
mov
inc
orl
push
lahf
lahf
pop
sub
fst
outsb
jecxz,pn
stc
xchg
call
out
sbb
inc
push
mov
and
jmp
jmp
mov
test
push
movb
mov
dec
fwait
and
int
imul
scas
jg
int
lds
subb
sti
cltd
mov
lret
mov
or
lds
cs
lods
jge
lock
dec
mov
gs
push
pop
cmp
stc
fidivs
mov
xchg
push
cwtl
gs
cld
add
or
fdivrs
dec
jne
and
mov
lahf
sar
mov
add
mov
push
xor
mov
fsubl
push
movl
sbb
push
imul
movsb
mov
cmp
and
push
sub
movsb
jl
adc
cmp
mov
sub
imul
jp
je
divl
ds
mov
mov
push
mov
lds
and
sti
lret
test
and
into
ret
push
mov
mov
or
repz
test
je
adc
jae
mov
lahf
icebp
dec
cmp
cmp
push
lock
and
decb
mov
and
xchg
or
dec
mov
cmp
cmpsb
movb
popa
dec
push
cmpsb
icebp
jns
or
fidivl
xchg
mov
jb
sub
iret
xlat
fldl
dec
addb
mov
mov
mov
and
je
xchg
dec
rol
out
add
inc
jo
sub
jne
sbb
xor
lds
jecxz
xchg
insb
xchg
and
aad
pop
test
out
xor
ds
popf
aad
pop
sahf
xchg
mov
mov
inc
or
std
and
jbe
push
mov
data16
mov
pushl
lret
mov
xchg
sbb
jmp
scas
inc
fisubrl
push
push
shrl
or
adc
push
mov
jo
gs
pop
xor
jbe
sbb
sub
and
stos
and
shl
lds
jno
movsb
gs
aas
xchg
adc
idiv
cli
mov
test
xor
mov
iret
out
push
lock
push
and
xchg
test
call
xor
mov
inc
jnp
sbb
pop
iret
arpl
push
rolb
pop
push
cwtl
dec
xor
shll
stc
add
inc
in
mov
ss
rclb
dec
push
hlt
test
pop
xor
cmpsl
add
adc
sbb
inc
jne
jb
add
jg
loop
test
jl
xlat
outsb
pop
push
push
push
decl
pop
jg
dec
addr16
xor
xchg
mov
loop
sbb
mov
sub
inc
mov
iret
cld
push
das
xor
je
ja
add
xor
dec
mov
push
lcall
mov
adcb
and
xor
pop
cmpsb
push
clc
and
jle
pop
ret
cmc
or
je
lret
mov
pop
das
enter
pop
mov
mov
and
push
into
ss
xor
pop
insl
cmp
std
xchg
das
push
fwait
inc
and
push
adc
shll
jle
ds
hlt
jo
lret
stos
int3
lds
sbb
and
mov
out
fsubl
pop
mov
jae
lahf
push
xchg
loope
xlat
test
in
cltd
in
roll
push
push
loopne
and
jl
cmp
lock
ret
adc
mov
sbb
xor
mov
mov
xchg
add
mov
add
scas
jo
dec
stc
inc
and
inc
jecxz
cmc
cmp
sub
lahf
push
out
xchg
xchg
dec
or
sbb
in
push
neg
sbb
adc
test
push
fcmovnbe
sub
cmc
xchg
pop
jge
aad
std
push
cmpl
ror
sbb
sub
cmpsb
add
inc
xchg
mov
aam
nop
test
test
lret
push
sahf
mov
stos
cld
int
push
gs
pop
push
test
rcl
popa
mov
xor
sub
pop
lcall
adc
enter
aas
lahf
pushf
les
cs
movsb
cwtl
jge
arpl
mov
xor
ds
xchg
pop
mov
xchg
adc
call
adc
xlat
in
sarb
or
cmp
mov
data16
jecxz
dec
push
movsl
adc
out
sahf
das
push
sbb
push
outsb
arpl
adc
cmp
lret
push
push
mov
pop
shll
insl
call
aaa
xchg
dec
mov
adc
in
sbb
sub
xchg
jbe
sub
pop
jl
push
js
inc
pop
pop
mov
cwtl
push
and
fwait
cmp
and
mov
bound
out
adc
push
jp
inc
sbb
pop
pop
jae
sub
sti
lret
cmp
loop
dec
push
jno
lahf
test
mov
xor
bound
nop
sbb
lahf
adc
jp
loope
stos
adc
cmp
dec
cltd
imul
ja
or
sbb
push
push
sub
or
push
adc
sbb
mov
das
jecxz
pop
ss
sbb
aaa
popf
cld
test
cmp
insl
scas
jno
repz
pop
mov
scas
daa
jle
add
and
out
mov
scas
loopne
scas
imul
jp
pop
lcall
nop
inc
pop
addb
xorb
test
xor
xor
repnz
ja
xor
and
cld
xchg
sub
int
jnp
mov
push
adc
leave
push
iret
lcall
hlt
pop
popa
dec
movsl
lret
movsb
stos
nop
cld
cs
test
and
or
imul
cld
sub
adc
mov
test
mov
mov
fcmovnb
scas
cmp
insl
dec
lret
xchg
clc
sti
add
loop
cmc
push
and
cwtl
es
psubw
leave
rcrb
dec
loope
mov
mov
lcall
add
pop
mov
mov
fbstp
lds
and
stos
bound
xor
and
push
push
and
and
rcl
mov
mov
cmp
mov
fnstsw
adc
ret
cmp
shrl
jge
popa
xchg
jge
mov
jle
sahf
jecxz
pop
andl
mov
addb
xlat
pop
inc
das
cmp
lock
sub
outsl
push
mov
pop
pop
mov
and
jle
mov
test
mov
dec
pop
mov
pusha
imul
dec
negb
add
mov
adc
inc
in
fwait
xor
push
test
dec
scas
sub
lret
mov
mov
movsb
add
pusha
mov
mov
dec
push
int
fidivrl
addr16
inc
push
jmp
pop
inc
stos
sbb
sti
cmp
testl
sbb
loop
pop
jg
push
scas
lahf
push
fwait
sub
or
repnz
test
and
add
xor
cwtl
ds
mov
lds
sbb
jle
inc
test
hlt
dec
loope
lret
test
aad
jg
test
inc
mov
fmull
pop
mov
lcall
ss
pop
ror
lahf
jmp
cltd
insl
lcall
loope
adc
ja
push
out
pop
insb
dec
popa
dec
xchg
dec
das
xor
sbb
adc
lock
orl
dec
fildl
xor
jb
pop
jno
fidivs
pop
add
in
insl
inc
stos
pop
add
push
in
outsb
shlb
sarb
mov
leave
xor
int
test
fwait
mov
popa
mov
xchg
mov
xchg
pop
gs
push
xchg
push
rcll
aaa
repz
outsb
movl
das
shrl
ret
arpl
push
jo
mov
call
xor
jnp
pusha
mov
adc
or
fstl
pop
dec
scas
rcrl
xchg
movsb
mov
push
xchg
dec
xor
rclb
mov
int
je
inc
and
xchg
imul
and
push
loopne
ljmp
adc
insb
pusha
mov
and
repz
cmp
fwait
lret
mul
push
inc
fimuls
ja
ss
inc
fsubrs
aas
insl
mov
orl
pop
cmp
add
xchg
push
in
cmpsl
loop
lahf
sbb
rcrb
pusha
jbe
mov
jmp
sbb
stos
insl
cmp
xor
jne
cmpsl
ja
pop
jae
negb
push
adc
xchg
mov
shlb
lds
or
repnz
jne
ds
out
push
mov
adc
sbbb
xor
pop
cmpsl
test
out
sbb
fucom
push
inc
push
fnstsw
pop
out
mov
xchg
push
mov
fs
cmpsl
add
jg
lds
repz
jecxz
dec
mov
and
xor
addl
fdivs
or
or
pop
mov
pop
outsl
pusha
sbb
adc
xchg
xor
sub
mov
rol
ja
lock
test
dec
sbb
add
lret
loop
pop
out
imul
xchg
cmpsb
mov
xor
push
andb
push
cmp
and
push
pop
call
leave
adcb
jno
push
or
or
movnti
imul
jb
mov
add
mov
push
leave
call
pop
add
mov
loop,pn
movsb
scas
aam
rorl
sub
fwait
in
or
inc
insl
fbstp
xchg
pop
sub
jns
inc
xchg
push
xchg
xchg
test
push
dec
stos
mov
dec
into
in
icebp
xchg
pop
mov
sbb
movsb
mov
cs
iret
or
mov
inc
dec
xlat
test
push
push
mov
mov
add
mov
dec
cmp
dec
lret
inc
lock
stos
in
mov
lea
sub
mov
shll
mov
mov
push
js
jns
adc
stos
add
xchg
mov
scas
mov
push
dec
xor
les
clc
stc
xchg
cmc
lahf
push
jecxz
jo
cmpsl
repz
add
xor
xor
imul
cmp
pop
movsl
pushf
adc
repz
sets
add
addb
roll
push
xchg
pop
jb
mov
or
bound
test
sbb
inc
jge
cmp
ret
aad
and
mov
pusha
mov
aas
add
mov
mov
mov
cmp
in
stos
je
cs
mov
test
cmp
xor
repz
jmp
lahf
fsubrp
mov
cli
loopne
mov
xchg
sahf
icebp
pushf
out
sbb
test
jno
pop
push
in
pop
add
fmull
jb
mov
loop
dec
sbb
js
out
mov
in
push
addr16
or
out
lret
dec
cltd
mov
adc
in
outsl
xor
push
cwtl
xchg
sub
pop
xchg
xchg
dec
mov
jge
jl
pop
mov
and
shll
add
xchg
or
adcl
fisubrl
aas
outsb
adc
jge
pop
popf
push
popf
pop
insb
xor
test
inc
cld
imul
jp
test
mov
xor
shrb
jae
loope
jo
movsl
mov
ss
fmulp
xor
add
mov
xchg
ficompl
jne
enter
pextrw
inc
add
push
dec
in
dec
mov
mov
pop
cli
push
stc
jbe
incl
fstl
int
xlat
push
cmpsb
enter
push
add
sti
in
cld
xchg
and
dec
inc
inc
in
xchg
cwtl
sarb
jecxz
sarl
testl
fidivs
adc
pop
repz
dec
iret
or
adc
jl
mov
cmc
jmp
push
lcall
xchg
dec
and
and
mov
lock
mov
pop
inc
insb
fisubl
pusha
mov
sbb
test
lock
mov
int
mov
jnp
jmp
jne
mov
and
pop
mov
data16
mov
fildl
pushf
stos
jecxz
rcr
pop
pop
sub
insl
cli
cmpsl
pop
adc
fsubs
xor
loopne
lock
sbb
test
mov
fwait
jb
xor
inc
sub
out
inc
iret
ss
cmc
mov
xor
stos
mov
mov
add
adc
cmpsb
pop
mov
dec
int
xchg
int
hlt
loope
jno
pop
stc
js
mov
cs
push
adc
lret
or
aam
addb
mov
orl
jp
fnstcw
pop
test
inc
mov
xchg
bound
mov
or
subl
pop
cmc
insl
sbbl
je
pop
arpl
adc
mov
sbb
add
jbe
outsb
xchg
insb
mov
sub
add
xchg
jl
xchg
pop
leave
gs
xlat
jne
inc
xchg
and
jne
sbb
sbb
ljmp
icebp
cld
xor
movb
out
xchg
test
pop
cli
push
in
lcall
lahf
or
cltd
mov
pop
mov
jb
test
dec
iret
inc
mov
push
add
add
dec
pusha
daa
outsb
mov
int3
fildll
pop
push
cli
cmpsb
fldcw
inc
mov
js
inc
xor
out
insl
loop
js
and
mov
std
xchg
sbb
stos
fwait
testb
adc
or
pop
dec
loope
sahf
loop
xor
dec
mov
mov
clc
push
jg
subl
out
cmpsl
and
adc
jns
inc
lret
mov
mov
fisubrl
flds
lods
xor
mov
mov
mov
xchg
pop
mov
pop
mov
and
sub
pop
lret
repz
adc
dec
or
pop
notb
push
ret
repz
sub
pop
mov
push
je
jle
cld
pusha
xor
cmpsb
sub
dec
adc
pop
push
cmp
mov
adc
out
lcall
cmpsb
into
nop
inc
fcoml
loop
push
leave
jg
xor
inc
jge
xor
pop
je
jne
add
add
mov
stc
loope
pop
fidivl
pop
lcall
push
inc
cmp
inc
pop
ss
and
mov
mov
gs
outsb
adc
fists
lods
adc
lods
addr16
shl
subb
xor
add
movl
pop
jle
add
mov
pusha
inc
das
cmp
mov
push
ss
aas
push
mov
and
cmp
push
xchg
data16
add
or
cmp
xorl
xor
push
outsl
sbb
mov
sub
subb
scas
dec
add
pop
popa
jg
jg
jns
daa
lret
sub
mov
je
mov
xor
push
mov
mov
jo
cmpsl
sub
push
pop
or
jecxz
into
arpl
outsl
jp
int3
inc
jb
dec
xor
xor
out
cmpb
das
dec
xor
in
jbe
in
aad
fdivr
xchg
call
in
and
mov
jnp
jecxz
pop
adc
gs
sahf
enter
inc
dec
out
adc
idivl
gs
rclb
sub
sbb
inc
fneni(8087
fxch
mov
sbb
xchg
data16
cmp
sti
int
leave
mov
je
hlt
out
andl
lea
ljmp
sarl
push
test
adc
jns
ds
inc
std
jae
sbb
dec
adc
cltd
inc
js
mov
xor
iret
jmp
push
pop
sub
mov
fwait
scas
jmp
je
mov
fs
mov
loop
std
sbb
mov
enter
cltd
push
movsb
add
in
test
cli
aas
aas
imul
dec
xchg
mov
out
mov
cld
orb
jne
and
movsb
stos
sbb
in
pop
enter
sub
aam
lods
cli
call
ficompl
push
sbb
xchg
dec
lahf
lret
pusha
push
push
sub
cmc
out
xchg
fstpt
sbb
jle
inc
jb
clc
loop
add
scas
sbb
mov
jns,pn
call
idivb
dec
jb
pushf
cmp
insb
arpl
add
testl
or
push
lret
or
xchg
xchg
push
mov
lcall
xor
data16
cs
and
inc
push
lahf
push
dec
push
dec
jne
dec
scas
cmp
add
imul
cltd
test
jns
sub
jae
mov
xchg
inc
dec
sbb
xor
sahf
mov
jmp
in
inc
scas
fsubr
mov
jbe
test
adc
push
jae
shl
lock
imulb
xor
ljmp
aas
xor
gs
imul
movsb
stc
sbb
xchg
cmc
jne
mov
pusha
push
aas
js
mov
adc
cld
cmp
xchg
add
sti
mov
sahf
insl
fdiv
push
out
add
or
push
aas
push
push
sbb
fucomi
jmp
ljmp
inc
pushf
jae
fidivrs
loop
js
addr16
mov
dec
jp
pop
mov
inc
push
jle
mov
mov
pop
sbb
mov
xor
mov
ret
and
push
icebp
lods
mov
lods
clc
icebp
out
test
jb
inc
sub
test
pushf
adc
popa
dec
mov
enter
leave
mov
inc
out
repnz
jbe
lods
insl
flds
pop
cmp
arpl
js
insb
jp
or
and
repnz
out
ss
adcl
mov
stos
cmp
xchg
or
pop
pop
dec
mov
mov
iret
jne
adc
inc
push
mov
fidivs
inc
sbb
gs
jp
out
inc
popa
xchg
inc
lds
mov
fwait
jno
push
jnp
xor
fcomp
mov
stos
lods
test
dec
mov
sbb
push
jl
xor
ljmp
lods
out
pop
and
mov
lret
and
mov
cmc
cld
adc
outsb
popa
sbb
scas
ljmp
xchg
int3
pop
addb
icebp
scas
popa
rcrb
pusha
clc
inc
dec
pop
adc
ljmp
xchg
ror
mov
in
in
dec
dec
shll
cltd
mov
int
xchg
mov
fistpl
adc
cmpl
popf
mov
mull
cmp
je
and
or
ja
sbb
xor
js
dec
lea
mov
inc
cld
and
mov
mov
js
clc
fldl
add
add
mov
test
push
shll
in
popa
or
dec
lret
pop
dec
jbe
lods
js
jnp
mov
pushf
push
scas
jo
popa
lahf
cmp
xchg
jecxz
or
add
mov
in
sub
sub
xor
cmpl
icebp
pop
or
sbb
arpl
test
add
insb
std
xchg
add
xchg
out
gs
mov
sti
loope
int
movsb
push
scas
pop
lods
out
in
mov
daa
xchg
jb
fwait
xor
xchg
into
and
mov
xor
pop
xor
sub
js
in
pop
mov
or
pop
add
mov
hlt
cmp
cmp
adc
sub
push
mov
cwtl
imul
fs
incb
inc
lret
fdivs
js
jbe
cltd
fidivrs
decb
imul
insl
sbb
and
jmp
mov
jg
icebp
sbb
aam
inc
ja
icebp
and
pop
mov
iret
and
ss
cmpsb
xchg
bound
add
lock
js
daa
push
loopne
lahf
sub
shlb
inc
lret
mov
ret
psubusb
imul
add
jle
pop
aas
pop
repz
jnp
and
inc
pop
sbb
cmp
mov
cwtl
inc
js
negl
and
je
into
pushf
lahf
pop
pop
jnp
cli
push
or
xlat
in
sub
push
mov
mov
hlt
lret
fwait
lds
mov
cli
mov
pop
or
mov
pop
js
xchg
push
pop
adc
and
jmp
mov
sahf
sub
cwtl
cmp
inc
push
jecxz
mov
xor
push
cmp
ja
add
sbb
xchg
cwtl
test
inc
sbb
cltd
jo
sub
in
int
ffree
movsb
mov
outsb
xchg
or
jnp
sub
mov
in
sbb
sar
orl
cmp
aaa
or
mov
jp
cmpsl
addl
fwait
clc
pop
les
jl
mov
mov
dec
ja
push
sbb
adc
dec
sub
adc
fcmovbe
mov
sbb
add
lahf
scas
cmp
adc
arpl
daa
aas
cwtl
push
cmc
adc
mov
shrl
outsb
sub
mov
or
push
sbb
bound
fadds
mov
inc
cmpsl
std
pop
pushf
add
dec
mov
out
filds
je
stc
test
jl
test
jo
out
rolb
mov
mov
mov
dec
in
js
pop
lods
in
xchg
and
mov
inc
mov
push
xor
add
test
hlt
out
pop
pusha
js
mov
jp
popa
push
mov
pushf
pushf
mov
cmp
sbb
aad
std
or
scas
jge
mov
fsubp
mov
xchg
movsb
xchg
push
movsl
je
push
in
outsl
sub
or
jle
bound
pop
ret
fadd
sub
ja
out
mov
pop
xchg
push
or
in
test
xor
nop
and
xchg
dec
cmpsb
leave
pop
mov
int
sbb
jo
test
dec
sbb
cld
insb
push
into
sti
lret
sbb
sbb
out
cmp
adc
sub
add
xlat
nop
pop
xor
cli
xor
pop
das
xchg
sarl
sbb
push
fidivs
jns
fwait
sbb
push
and
sbbl
sub
scas
add
cmp
rcrb
mov
fsubrl
pop
into
repz
mov
into
insl
mov
mov
orb
sub
cli
mov
movsl
mov
je
shr
mov
addr16
inc
sbb
mov
mov
scas
pusha
jbe
sub
int
popf
push
pop
popa
push
in
xor
aam
scas
aas
mov
jo
pusha
mov
xor
fnsave
adc
push
fwait
sti
xor
pushf
inc
adc
jle
dec
pop
fsts
cmp
mov
aaa
testl
jle
add
pop
insb
out
pop
xchg
cmp
mov
int3
pop
add
aaa
xor
hlt
mov
fs
sti
mov
push
pushf
in
mov
mov
mov
mov
pop
dec
mov
jp
shll
push
and
test
hlt
rol
loop
mov
cmp
lods
xchg
mov
or
movsl
fisubs
das
mov
xchg
adc
outsb
dec
sbb
int
shrl
ror
pop
adc
das
mov
movsb
adc
int3
cmc
aam
idivb
das
dec
jbe
push
mov
xchg
jle
lret
scas
push
inc
sbb
mov
ja
xor
add
inc
jb
pop
cli
insb
cltd
ja
xor
fildll
jecxz
push
in
xor
dec
and
cmp
mov
sub
sbbl
push
test
clts
jl
repnz
pop
inc
outsb
xchg
pop
mov
je
push
push
jp
mov
movsb
outsb
adc
mov
sub
mov
mov
push
ds
lcall
jmp
ffree
and
mov
or
push
aam
add
jge
scas
inc
pusha
adc
push
mov
inc
or
mov
cmp
aam
and
cmc
adc
fldenv
sbb
les
xchg
fldenv
lret
xlat
pusha
jnp
shl
mov
jle
out
xor
inc
cmpsl
lret
popf
fmuls
adc
fs
or
aas
lret
cmpsb
adc
mov
fwait
sub
movsb
fcomp
jge
ljmp
and
lods
subb
test
lcall
jnp
pop
in
les
fs
jl
and
repz
jno
cmp
and
stos
stos
push
popf
xor
mov
mov
cmc
ljmp
call
push
repz
push
rclb
nop
push
adc
dec
pop
or
mov
push
and
cmp
out
or
ret
sbb
out
addr16
arpl
popf
push
mov
push
dec
enter
mov
in
je
movsb
sbb
cmp
neg
fwait
pop
sbb
push
xchg
lock
dec
dec
mov
mov
dec
aaa
or
mov
jg
xchg
push
jmp
xchg
imul
mov
adc
inc
pop
clc
mov
inc
mov
mov
or
xchg
outsl
mov
mov
pop
gs
pop
jge
mov
inc
inc
or
jmp
jno
xor
imull
imul
add
or
rcll
push
push
dec
insl
inc
pop
or
sbb
addr16
nop
sbb
shlb
cmpsl
movsl
sub
mov
xlat
sub
push
out
cmpsb
adc
sbb
adc
pop
jno
dec
in
inc
arpl
dec
xor
std
fcmovnb
popf
cld
inc
int
andl
in
testb
lock
test
icebp
cmp
aas
and
lods
add
into
jge
pop
fwait
mov
scas
dec
int
test
xchg
dec
sub
cmpsb
sub
cwtl
test
sbb
jno
adc
adc
mov
lret
cmpsb
in
sbb
pop
sub
cs
inc
dec
mov
hlt
add
daa
or
pop
mov
adc
in
cmp
push
jae
data16
mov
in
mov
xor
dec
out
dec
nop
aad
xchg
and
rol
jl
sti
xor
mov
cmp
ljmp
ljmp
jne
mov
and
je
enter
scas
aam
cmp
stos
jns
jge
stc
out
adc
lods
inc
fisubrl
mov
dec
les
xchg
enter
cli
nop
dec
mov
adc
pop
jnp
add
rorl
dec
push
pop
push
jne
lcall
jbe
dec
mov
ds
bound
or
shrl
mov
ret
std
mov
fcoms
inc
and
pop
in
repnz
mov
imul
nop
inc
push
sub
pusha
cmp
sbb
dec
push
mov
xchg
int3
popa
xchg
outsl
sub
mov
in
push
gs
mov
or
xor
cmp
inc
into
data16
cmp
aad
rcr
inc
jmp
lea
cmp
rcrb
jg
push
sahf
add
push
sti
pop
movsl
push
adc
xchg
sub
cli
fldlg2
mov
insb
ret
leave
jg
js
push
mov
lea
insb
xor
adc
dec
mov
sbbb
push
enter
mov
cmpsb
add
jns
aad
inc
js
je
cli
pop
clc
ds
repz
jne
xor
addr16
addb
mov
add
outsl
mov
adc
sti
mov
inc
sbb
mov
xor
xchg
stos
dec
mov
sti
es
shrl
stos
shlb
testb
push
fmul
xchg
ret
xchg
addr16
subl
xor
mov
dec
popf
xor
or
fs
divb
iret
jmp
lods
cmpsl
inc
fidivrs
mov
mov
data16
add
push
ds
xchg
mov
xchg
rorb
popa
jl
mov
shrb
imul
shll
jmp
shll
xor
jnp
int
pop
xor
in
outsb
xlat
mov
add
dec
cs
xor
and
and
das
cvtps2pd
jnp
lock
cmpsb
sbb
fsubl
adc
mov
cmp
lods
arpl
movsb
pop
xchg
aad
or
jmp
jns
int
cwtl
jne
jecxz
testl
mov
jge
push
mov
push
and
ror
cli
cmpsl
ljmp
inc
adc
lods
xor
inc
cmp
mov
ss
mov
mov
push
adcl
mulb
mov
dec
jmp
ss
aaa
sub
pop
inc
jno
mov
mov
xlat
push
fwait
call
jecxz
mov
inc
or
pusha
fistpll
dec
jp
adc
dec
aaa
lahf
mov
repnz
adcb
aad
scas
rorb
shrl
and
sbb
lcall
xchg
cmp
adc
mov
repnz
testb
push
cmp
les
push
daa
sarb
into
jecxz
xchg
js
push
inc
int3
mov
call
cs
xchg
and
xchg
imul
adc
xorb
xor
leave
pusha
xor
inc
movl
xchg
movsb
jmp
cmp
out
ds
push
sub
jne
daa
push
and
mov
xorl
cld
xchg
add
inc
cmp
push
in
xor
mov
lret
jecxz
cmp
and
movsl
xchg
inc
mov
mov
pushf
jl
das
jge
lock
andl
iret
leave
je
dec
sub
mov
gs
les
xchg
xchg
fcmovbe
iret
rolb
ret
call
fidivrl
xor
add
or
xor
lahf
popa
js
sbb
movsb
lahf
out
push
lea
add
jb
aas
popl
push
mov
ss
inc
ficoms
xchg
out
and
arpl
jns
push
stos
adc
dec
pop
fiaddl
lea
dec
arpl
pop
je
dec
jge
popf
adc
fwait
sub
stos
aam
mov
add
rclb
int3
imul
pushf
push
sbb
sahf
fmull
fcmovb
pushf
add
rcrb
loop
hlt
inc
stos
fldl
into
xor
xchg
xor
shll
pop
xor
outsb
mov
sahf
ficomps
stos
push
shr
xchg
test
adc
pop
pop
lock
into
popf
lahf
mov
in
gs
mul
pop
seto
push
mov
jge
addl
fstpl
dec
adc
lea
mov
xor
test
les
sub
into
rclb
popa
fbstp
xchg
cltd
sub
cmp
popf
test
mov
xchg
inc
mov
jp
dec
movsb
jmp
inc
jae
and
leave
pop
addr16
test
sub
mov
jp
mov
jnp
mov
fbld
jb
pushf
sbb
sub
cmp
add
into
pop
jae
hlt
and
xchg
repz
xor
xchg
jbe
in
sahf
icebp
sbb
or
push
lea
mov
xor
adc
inc
lcall
call
jno
and
or
jecxz
outsb
fimuls
sbb
jl
pop
shrb
push
push
mov
pop
jbe
arpl
mov
outsb
sarb
cmp
mov
push
pushf
or
cmp
mov
mov
hlt
js
pop
popf
xchg
mov
fcoms
mov
movsb
xor
mov
shlb
lds
inc
repz
insl
mov
dec
xchg
pop
lahf
stos
sbb
adc
cmp
inc
cmp
pop
or
adc
repnz
dec
cmpsb
test
aad
sub
xchg
std
faddl
inc
jne
or
jle
rclb
popf
mov
mov
pop
roll
insb
push
xor
push
pop
rol
mov
push
outsl
nop
dec
int3
cmpsb
mov
pop
jnp
mov
mov
xchg
cmp
fisttpll
leave
std
les
mov
sub
scas
sub
jmp
repnz
sti
int3
or
and
leave
push
pop
rclb
mov
pop
fisubl
lods
scas
call
mov
push
pop
sbb
fisubrl
divl
mov
sbb
out
cmp
mov
mov
and
mov
or
mov
or
adc
packssdw
shl
sarl
cli
jl
cmp
stc
pop
rclb
repz
add
dec
repnz
and
addb
aas
popa
popa
inc
sub
lret
sahf
or
cwtl
ljmp
pminsw
mov
sbb
pop
data16
dec
pop
fisubrl
mov
cwtl
sub
or
sbb
sahf
inc
insl
dec
inc
dec
aaa
out
xchg
mov
out
stos
leave
mov
repz
push
nop
outsl
or
mov
pop
cmp
cld
xor
xchg
xor
dec
add
cmpb
mov
or
add
cmp
adc
pop
sbb
inc
push
jl
sbb
push
dec
lcall
xorb
mov
push
in
pop
sub
das
pop
shrb
fistpll
mov
push
dec
in
addr16
add
in
mov
push
xchg
adc
lods
mov
ds
sbb
jp
stos
or
inc
fdivl
mov
adc
orb
notl
pusha
cltd
xor
jg
mov
xchg
js
cld
outsl
fucomp
inc
in
addb
cmpsl
out
outsl
pushf
fldenv
adc
sbb
ss
cltd
and
je
cld
cmc
mov
push
mov
in
div
sbb
jno
xchg
adc
cltd
mov
jl
xchg
mov
cmpsl
shr
sub
push
and
add
popa
cmc
mov
es
pop
leave
push
xor
cld
iret
cltd
les
and
rclb
adc
jns
insl
sbb
pop
nop
popa
fwait
clc
nop
and
jnp
leave
mov
xor
fcompl
js
cmp
mov
sbb
movb
repnz
mov
fiadds
jnp
dec
push
and
repnz
xor
std
jle
inc
dec
cmp
in
arpl
mov
push
mov
jl
pop
push
adc
fimull
push
xchg
xchg
dec
dec
add
mov
lea
loop
adc
fimull
adc
mov
inc
xchg
bound
daa
jp
loopne
xor
and
sbb
cmp
in
mov
sarl
fidivrl
cmpsl
inc
fdivrs
xor
jl
pop
inc
xchg
mov
inc
sub
sti
aam
cmp
sbbb
mov
mov
je
jne
add
jb
jbe
mov
or
stos
adc
aaa
jge
push
pop
lods
jo
add
mov
andb
imul
jb
pop
or
sti
push
cs
xor
pop
out
mov
or
jne
inc
mov
cmp
xlat
mov
or
idivb
mov
jg
sub
in
loope
xor
and
push
push
push
mov
cmp
sub
cmp
lret
xor
scas
inc
jnp
pop
fisttpll
dec
lret
or
lods
shrl
and
subb
test
cltd
loopne
inc
and
je
aaa
leave
cltd
shr
iret
xchg
inc
hlt
dec
out
jne
loopne
nop
sbbl
cmp
mov
push
loop
repz
sbb
insb
add
dec
cmp
adc
aas
insl
icebp
mov
bound
ret
out
mov
add
shl
out
cmp
pushf
sbb
pushaw
inc
out
cwtl
mov
mov
add
xchg
mov
sub
sbb
jg
sbb
ss
aam
call
je
jge
push
call
enter
mov
add
repnz
es
movsb
lea
mov
xchg
push
das
into
xor
dec
mov
rolb
cmp
adc
outsl
or
stc
enter
in
mov
lret
inc
pop
mov
cmc
mov
out
mov
xor
fistpl
mov
inc
dec
in
icebp
insl
mov
sbb
ret
mov
dec
jp
icebp
push
shlb
xorb
sti
cltd
lret
aam
xlat
leave
bound
lea
xor
aad
aam
lods
out
mov
push
addr16
mov
int
lcall
cld
nop
pushf
and
push
enter
imul
jnp
leave
fcmove
adc
xor
sysexit
inc
outsb
mov
movsl
ret
pop
adc
call
sbb
ja
cli
jne
stos
jmp
test
sub
mov
inc
dec
cmp
sub
leave
loopne
sub
sbbb
push
test
sti
cmp
das
push
std
lret
std
push
popa
xor
adc
mov
dec
sbb
jmp
dec
mov
insl
shll
imull
sbb
das
dec
adc
jbe
dec
pop
lock
jne
jne
mov
pop
stos
dec
cwtl
pushf
ss
jge
rolb
mov
in
loopne
sub
mov
mov
xor
andb
outsl
xor
in
movsb
js
sub
inc
jne
mov
lods
mov
ror
cmp
and
cmp
jbe
lods
stos
int3
mov
push
lcall
mov
and
and
dec
es
sbb
test
cld
mov
xlat
pop
std
hlt
test
mov
repnz
xlat
fimuls
jo
push
int
mov
std
lahf
jp
lock
pop
pop
fst
sub
pop
sbb
pop
mov
insl
ljmp
adc
mov
jo
mov
pop
idiv
lret
mov
adc
mov
repnz
mov
xor
lea
mov
sub
adc
sbb
push
adcb
inc
push
lods
in
xchg
cmc
cld
mov
ret
je
mov
shr
mov
inc
int
test
sbb
mov
pop
movl
mov
stc
sbb
into
test
shl
nop
mov
ja
pop
hlt
sub
popa
call
les
mov
aad
in
lods
ficompl
enter
mov
xchg
aas
pop
mov
add
imul
inc
dec
adc
incl
cmpsb
insb
push
sub
testb
cmp
aad
sbb
jecxz
sbbb
inc
adc
popf
sbb
pop
pop
fstpt
sbb
sub
jmp
in
or
lcall
rcl
aam
or
cmp
jle
inc
xchg
int
and
add
mov
cs
ds
mov
jecxz
adc
xchg
test
iret
pop
cwtl
enter
or
ss
push
and
or
nop
ret
jb
cmpsb
aam
pop
sub
pop
movsl
scas
pop
rol
xor
movsl
fildll
sbb
sub
sahf
jnp
jne
popf
cmpsl
xchg
faddl
cmp
cmc
push
int3
clc
enter
filds
cmp
sahf
inc
cli
notb
data16
dec
ret
push
je
fdivl
or
push
pop
xchg
jo
sbb
dec
fs
mov
mov
loopne
andb
jmp
pop
or
movsb
addr16
out
lock
jg
call
xor
inc
and
dec
push
mov
mov
repnz
mov
push
and
imull
inc
addl
fcmovu
pushf
and
leave
fldl
xor
mov
dec
pop
pop
mov
push
sub
mov
das
inc
dec
cltd
cmpsb
and
xor
outsl
cmp
lret
aam
fistps
pop
adc
sbb
in
jbe
jmp
adc
inc
insb
inc
jo
inc
or
jno
sbb
and
adc
loope
arpl
mov
push
xchg
out
pushf
inc
or
xchg
xlat
sbb
sahf
fistps
in
jg
xor
and
dec
mov
jne
push
mov
fstp
addr16
mov
out
xchg
adc
push
negb
mov
into
in
mov
cmp
mov
cmp
mov
push
orb
pop
fwait
lret
ds
cmc
das
pushf
outsl
sbb
sbb
insb
and
fmul
fsubrl
jg
pusha
sti
adc
mov
popl
dec
push
cmp
popf
aad
inc
inc
lret
jne
stc
push
mov
sbb
loopne
mov
int3
inc
xor
notb
add
into
scas
cwtl
outsl
mov
cmp
sahf
jb
push
shrb
shrb
movsb
adc
sub
add
js
fsts
dec
jb
adc
adc
pop
ret
mov
jle
xchg
or
cmp
movsb
xor
ds
xlat
imul
push
hlt
loope
push
repz
js
add
and
inc
mov
or
test
xor
lret
out
mov
shrb
push
mov
out
sti
xor
gs
push
mov
in
lock
outsb
add
sti
dec
outsb
or
cmp
mov
inc
inc
inc
mov
dec
loopne
inc
mov
or
xchg
inc
fdivrl
mov
daa
mov
sar
cmp
fsub
repz
adc
addr16
dec
sbb
add
movsb
lret
mov
and
inc
mov
sub
push
aaa
inc
xlat
inc
fcmovne
cld
mov
add
movsb
cltd
sbb
push
ss
push
adc
lock
clc
lahf
out
out
lea
push
fcoms
cmp
cmpsl
cmp
xor
out
sahf
jl
jle
sub
push
shrb
and
cmpb
inc
sbb
lock
xor
fisttpll
mov
mov
clc
movsl
test
dec
cmp
stc
sbb
addr16
in
leave
adc
adc
stc
adc
addr16
cmpsl
test
shrl
sub
mov
iret
imul
inc
mov
ljmp
pop
push
inc
and
mov
test
int
in
mov
jle,pt
ljmp
cmp
pop
dec
out
push
xchg
cmp
push
in
xchg
adc
mov
cmp
cmc
outsb
jns
mov
jb
and
xor
mov
pop
mov
add
mov
cltd
fiaddl
sbb
mov
sar
jbe
rorb
jno
cmp
pop
pop
and
int3
das
call
sbb
outsb
insl
cmp
repz
repnz
in
dec
and
add
sbb
push
repz
clc
adc
mov
int3
add
xor
mov
pop
addr16
call
in
mov
lods
push
outsb
or
sbb
mov
loop
push
insl
sbb
cmp
xchg
pushf
sar
xchg
xor
ret
leave
cmpsl
in
mov
xor
sub
xor
iret
aas
cmp
pop
cmp
outsb
sub
inc
imul
mov
sti
hlt
sub
xor
test
das
sub
xchg
cld
loopne
maskmovq
imull
push
mov
cmp
cmp
mov
mov
popa
in
pop
outsl
dec
loopne
xchg
aas
jbe
pop
or
scas
in
loope
inc
xchg
push
mov
fisttpll
add
cmp
sbb
je
ret
xor
movsl
mov
rolb
aam
add
popa
add
mov
nop
sti
lret
or
push
mov
test
mov
daa
xor
iret
push
inc
sub
int
std
push
cmp
clc
negb
and
mov
mov
xchg
add
pop
repnz
in
popf
jbe
bound
mov
adc
imul
sbb
das
dec
pop
push
mov
mov
lds
mov
push
jbe
sarl
lods
dec
and
bnd
clc
xchg
xor
jp
cmpsl
js
test
fildl
stc
ret
jne
clc
lock
sahf
adc
cwtl
out
scas
pop
mov
sbb
call
loopne
in
mov
pop
scas
jl
jle
add
push
aas
pushf
out
inc
into
push
sub
daa
aad
and
popf
addl
scas
mov
and
js
add
mul
mov
mov
nop
scas
sub
in
in
inc
test
jns
fsubrl
mov
mov
xlat
incb
sahf
sub
cli
int
sub
ror
adc
imul
add
cmp
push
mov
pop
cs
retw
push
jge
outsl
cmpsb
add
das
inc
dec
mov
and
pop
jecxz
xchg
mov
cwtl
fmuls
add
fdivl
shll
aas
pop
arpl
jb
scas
mov
out
fs
sahf
push
pop
mov
out
pop
notl
rol
xchg
pop
sub
adcl
scas
imulb
leave
iret
test
mov
imul
lret
jp
pop
mov
mov
les
push
stos
adc
mov
lret
out
fisubl
loopne
test
loope
or
ljmp
aaa
cmp
inc
les
mov
mov
in
sbb
add
inc
in
movsl
int3
int
inc
cltd
cmpsb
mov
repnz
insb
inc
fdivr
push
fnstcw
mov
xor
ja
popf
dec
hlt
xor
gs
pop
lock
mov
mov
test
enter
sbb
sbb
cld
movsl
dec
pop
dec
dec
mov
enter
inc
add
fwait
jno
dec
sub
ja
sub
cmc
pop
dec
mov
push
mov
ds
in
lods
cmp
sub
pop
fdivs
in
xchg
cmp
js
sub
jl
notl
shl
in
orb
mov
push
push
inc
and
cmpsl
push
sub
jmp
stos
out
ret
dec
and
xor
xor
cwtl
pop
mov
xadd
add
stos
push
repz
sbb
dec
mov
enter
fnstsw
bound
test
mov
sub
push
gs
jge
mov
test
scas
pop
enter
dec
pop
mov
add
fwait
scas
mov
fldenv
lods
lods
pop
hlt
inc
in
out
pop
aad
xor
jge
xchg
or
mov
jl
sti
pop
mov
xor
jnp
js
imul
sub
pop
xchg
xchg
incb
mov
subb
add
cmp
call
and
cwtl
mov
out
mov
sbb
mov
inc
ljmp
xor
aad
push
jg
mov
or
cmpsl
rcr
push
lret
out
or
add
pop
mov
cmpsb
adc
cmpsl
fisttpll
in
fsubs
repz
arpl
js
popa
mov
shlb
sbb
movsl
push
lcall
adc
push
mov
xchg
popa
popf
lock
cmp
rorb
mov
lods
cmp
push
gs
int3
cmpb
mov
pop
call
andb
adc
mov
mov
data16
popa
add
or
std
mov
cmp
into
ljmp
lods
scas
in
mov
mov
pop
dec
lock
push
enter
negl
movnti
jge
int
or
dec
mov
ret
xchg
pop
imul
xor
movsl
cli
xor
jmp
inc
dec
pusha
mov
xlat
ljmp
and
pushf
mov
mov
shll
test
mov
andps
and
es
orb
lcall
fdivrs
and
in
clc
dec
jno
sbb
lcall
pop
push
mov
jnp
jle
mov
std
jbe
push
or
dec
int
andb
cmp
ret
stos
push
cmpsb
jmp
cs
mov
push
mov
mov
rclb
xor
sbb
xchg
movsl
xchg
lahf
out
sti
mov
movsb
movsl
test
shrb
cmpsb
cltd
outsl
loope
push
add
and
inc
or
pop
rorl
adc
testl
int
ret
std
xchg
mov
fistpl
cmc
negb
imul
adc
daa
pop
cli
mov
sub
pushf
fs
movsl
cwtl
fwait
es
lret
mov
mov
ja
in
insb
mov
jp
inc
subb
cmpsb
jno
adc
dec
or
les
popf
int3
pop
sub
sarb
enter
jecxz
mov
push
loopne
push
jo
sbb
jno
in
popa
pop
mov
fidivl
dec
insl
lahf
inc
les
mov
mov
out
sbb
add
mov
shl
dec
pop
fstl
xor
xor
mov
out
hlt
pop
pop
jo
test
lock
stos
inc
xchg
jge
sti
cmp
in
fsubr
sbb
incb
out
insl
mov
or
dec
mov
cmp
push
xchg
cmpsl
adc
or
mov
mov
daa
cltd
lods
cmp
lret
bound
lea
fdivl
xchg
lcall
mov
xchg
mov
rcrl
popf
sahf
daa
pop
cmp
out
enter
rolb
mov
bound
adc
pop
xchg
push
test
and
mov
gs
dec
pop
lds
cmp
lock
insb
pop
arpl
in
or
in
loop
cmp
mov
jbe
xchg
push
stos
stc
xor
mov
xchg
xchg
fsubrp
ss
and
add
stos
pop
fscale
push
repnz
into
mov
lods
cmc
add
sub
mov
cld
cmp
mov
jo
pop
sti
cmc
and
shrb
ss
out
bound
daa
adc
dec
dec
movsl
sbbl
out
or
push
push
lds
pushf
insl
fs
mov
popa
jno
inc
enter
jno
mov
add
pop
mov
pop
daa
in
or
mov
pop
in
cmp
cmp
inc
arpl
jg
mov
sub
jl
jbe
scas
mov
sbb
lea
push
in
shl
movl
test
loope
xchg
and
jmp
mov
dec
or
mov
inc
out
cmpsl
cmpl
xchg
fisubs
pop
repnz
shlb
mov
lods
mov
cltd
in
lret
imul
cmpsl
mov
push
xor
mov
pop
cmp
push
xorb
or
in
pop
sub
mov
sub
xchg
addr16
pop
jle
mov
ss
clc
cmp
stc
in
xorb
jo
lahf
callw
pop
dec
roll
loop
sbb
sbb
mov
lcall
cmp
ret
adc
inc
cmp
jecxz
rorb
int3
sub
add
les
cmp
pop
xchg
push
and
inc
dec
sbb
in
test
je
mov
inc
adc
dec
pushf
mull
pop
push
adc
dec
out
rcrb
ljmp
or
es
inc
inc
scas
fucomip
popf
out
add
xor
mov
push
sbb
pop
imul
xchg
rcrl
mov
mov
jmp
shrl
dec
jno
xchg
jle
fisttpl
imul
ror
shlb
xchg
xor
and
shll
and
psllw
fiaddl
cmp
stos
les
jl
and
inc
iret
scas
xor
adc
call
cwtl
insb
push
sbb
push
inc
mov
xlat
and
push
fwait
and
loopne
inc
stos
insl
into
sbb
inc
xor
arpl
sbb
jge
push
xchg
push
lods
pop
push
mov
in
repnz
push
jns
add
cli
cmp
xchg
js
push
sbb
sub
add
inc
cld
lods
cmp
or
xchg
inc
pop
or
inc
sbb
loope
mov
cld
cmc
xlat
add
repz
shlb
or
imul
fidivs
inc
add
out
shlb
test
xchg
jmp
cmp
mov
xchg
in
xchg
xor
and
cmpsb
lods
mov
sub
imul
xor
jbe
pusha
in
mov
les
xor
pop
push
mov
daa
push
cmc
cmp
call
or
mov
data16
fidivrl
sbb
mov
pop
jecxz
ds
lods
sarb
loop
add
aas
dec
cmp
and
mov
sbb
dec
push
sbb
cltd
cmpsl
sbbl
jae
cmp
mov
push
das
js
pop
xor
inc
mov
fsubrl
add
pop
lret
push
add
mov
mov
test
test
add
pop
fidivrl
and
sbb
lcall
mov
stos
loop
jne
jne
shlb
scas
lock
call
int
cltd
stc
mov
cltd
xor
es
in
lcall
insb
je
cli
inc
xor
les
iret
dec
dec
mov
cmc
cmp
jns
xchg
or
mov
mov
repnz
jge,pt
sub
pop
gs
add
sub
jge
dec
in
fwait
or
addb
pop
mov
in
shll
sahf
mov
mov
inc
jmp
jl
sub
sub
ja
push
int
fnstcw
ret
lea
pop
cltd
in
jp
pop
xchg
xchg
cmpsb
dec
jg
lock
push
setg
xchg
sarb
out
and
jle
xchg
pop
and
mov
aas
arpl
and
pop
push
sub
xchg
inc
cmc
fwait
pop
out
pop
les
jns
sub
mov
adc
movl
fldl
orl
pop
xlat
cld
shl
jl
loope
popf
ss
or
pop
push
add
cld
push
pop
out
sbb
push
repz
out
mov
aaa
out
or
test
push
popf
iret
rclb
loope
sarb
adc
repz
stc
add
popa
dec
outsl
daa
mov
jg
mov
mov
mov
xchg
and
aad
pop
lods
rcrl
push
xor
cmpsl
xor
popa
mov
pop
lods
fsubl
stc
push
xor
jmp
pushf
xchg
push
push
out
call
notl
inc
jp
xchg
arpl
sub
icebp
outsb
jne
pop
outsl
daa
std
outsl
xchg
jle
add
inc
sbb
je
dec
test
jne
inc
dec
cmp
mov
mov
sub
outsl
loop
push
jl
xor
mov
dec
inc
pushf
ds
dec
mov
dec
sbb
xchg
cmp
lret
mov
sahf
cwtl
xchg
popf
pop
mov
adc
mov
lock
and
push
jmp
dec
fstpl
lret
in
dec
and
scas
aas
add
mov
test
jmp
mov
scas
orb
insl
lcall
pop
ljmp
jb
dec
test
pop
fidivl
stc
insl
pop
aam
jge
out
and
cmp
jmp
sub
mov
jge
call
ret
sbb
mov
pop
mov
pop
into
aaa
adc
cmp
adc
in
dec
and
jecxz
rcll
lgs
aam
push
dec
xchg
inc
movsl
mov
and
xor
jnp
lock
xchg
scas
ljmp
int
and
bnd
cmp
cmp
fldpi
fsubs
cmp
test
fwait
dec
sbb
sbb
jns
and
mov
pop
jmp
pusha
sarl
hlt
sub
out
ret
dec
sbb
xor
mov
jp
mov
lods
iret
je
ja
cwtl
mov
cmp
jl
addl
jne
pop
mov
pop
jmp
jno
mov
sbb
cmp
sub
or
mov
or
mov
push
je
dec
imul
pop
je
jae
stc
xor
in
imul
and
mov
insl
push
xor
loop
mov
sub
mov
lret
clc
mov
jae
xchg
fwait
xadd
adc
movsb
add
cwtl
fildll
rolb
xchg
js
dec
fstpt
push
pop
jecxz
gs
aas
push
or
jne
xor
and
enter
lods
mov
lcall
adc
mov
stc
rcrb
iret
push
pusha
ret
pop
mov
outsb
loop
jmp
push
movsl
jb
stc
jge
cmp
adc
das
fsubrl
andl
insb
xchg
adc
leave
leave
xchg
gs
dec
mov
jle
std
gs
adc
in
cmp
mov
xor
jb
sarb
arpl
insb
or
into
xchg
mov
dec
js
leave
dec
push
fstl
xchg
adc
mov
pop
mov
nop
cmpsb
mov
aaa
dec
mov
ljmp
sbb
or
xchg
push
jge
or
adc
xor
mov
inc
mov
js
fwait
ss
addr16
mov
imul
sub
jecxz
jp
xchg
xchg
leave
mov
loope
lahf
cmp
jae
insl
cmp
ret
repnz
mov
arpl
clc
out
in
jecxz
int
push
sbb
scas
stos
ret
pop
int
xor
bound
out
movsb
loope
imul
ja
pop
in
aaa
add
sbb
gs
cld
scas
mov
sbb
xor
pop
fs
mov
cmp
lcall
adcb
xchg
push
pushf
mov
sub
notl
popf
inc
sarb
ret
add
call
dec
and
fstp
cmp
adc
loop
jg
push
mov
lret
mov
ja
xlat
push
inc
cli
fwait
lods
aaa
inc
inc
cmp
insb
iret
cmc
cmpsb
xor
jge
and
and
lods
sahf
sub
sub
add
scas
lock
negl
mov
scas
sbb
out
mov
icebp
xor
sub
test
fidivs
adc
cmp
cmpb
sub
jno
cwtl
je
pop
in
mov
push
and
cmp
xchg
aad
aas
test
pop
gs
push
inc
nop
add
andb
in
xchg
xlat
dec
fmul
cmp
fnstenv
xor
push
frstor
popa
sahf
in
push
movsb
out
mov
mov
cs
mov
inc
out
sbb
pop
repnz
cmp
leave
idivl
dec
pop
push
frstor
sbb
imul
pop
and
dec
jbe
jp
mov
inc
sbb
movsb
push
lret
in
dec
inc
inc
pop
sbb
pop
mov
cmc
jns
bound
jb
mul
mov
inc
mov
in
add
out
lea
ja
and
adc
shrl
xor
int3
mov
hlt
gs
sub
lret
mov
jg
icebp
xchg
inc
cmp
aaa
mov
xlat
sub
lods
and
out
or
xor
fadds
mov
xchg
mov
mov
movsl
jle
and
push
jno
out
dec
arpl
mov
jne
mov
sbb
daa
rcrb
or
and
mov
xchg
jns
dec
adc
in
scas
cmp
pop
loop
sbb
sbb
sbb
inc
cmp
xchg
pop
clc
pop
mov
inc
into
int
add
fs
mov
das
xchg
jno
aas
rcrl
leave
jecxz
dec
mov
pop
adc
and
shll
loop
repz
andb
aam
jecxz
gs
add
jnp
cwtl
xorb
xchg
call
xor
loopne
push
test
aaa
and
dec
xorl
orl
pop
mov
les
mov
leave
fcomps
push
stos
push
jno
jo
adc
enter
mov
mov
cli
std
jne
cs
popf
fldt
dec
fs
or
pop
filds
out
icebp
ljmp
pop
nop
ja
mov
stc
sti
mov
fucomp
push
mov
in
repnz
jne
sbb
fnstcw
inc
cwtl
cmp
pop
addl
xchg
or
es
mov
xorb
xor
jg
data16
lods
fdivrp
dec
into
lds
lret
adc
scas
movsb
icebp
int
shl
xchg
push
dec
pusha
push
inc
cld
mov
ret
xchg
fcoms
mov
lahf
push
add
aaa
inc
and
dec
dec
mov
lcall
xor
pop
push
les
adc
add
je
insl
loope
fs
sti
bnd
mov
orb
pop
mov
or
add
imul
stos
test
in
push
or
push
jb
or
cmc
push
fwait
jle
outsb
jb
es
jb
sbbb
int
pop
inc
mov
push
fwait
jg
sahf
fs
lods
jmp
gs
call
addr16
nop
xor
push
sbbl
dec
repz
xor
stc
sbb
jmp
mov
push
cmc
fwait
sarb
xor
inc
sbb
xchg
push
adc
into
mov
in
inc
push
mov
fsubl
adc
rcll
adc
pop
stos
rclb
push
scas
addl
cmp
push
mov
push
aam
inc
inc
dec
enter
lss
je
xchg
dec
scas
pop
ret
icebp
push
mov
das
insl
insl
push
shll
cmp
mov
jl
fs
lcall
cmp
jecxz
fisubrs
push
stos
add
sbb
xchg
mov
push
add
aam
pop
fsubrp
cltd
fldenv
insl
dec
xchg
xchg
fdivrs
inc
pop
cltd
shlb
xor
xchg
mov
add
je
xchg
xchg
imul
pop
pop
cmp
cmp
xor
xchg
add
daa
push
sti
mov
inc
sbb
sub
mov
es
inc
adc
xchg
or
xor
sbb
fs
jmp
aas
adc
js
in
inc
or
cs
stos
mov
shlb
daa
imul
shlb
stos
cmp
lea
mov
dec
das
insl
pushf
out
mov
mov
call
and
lods
in
mov
push
ffree
or
xchg
xchg
pop
xchg
push
sbb
ljmp
sbb
push
cmp
or
scas
xchg
cwtl
mov
inc
stc
sub
cltd
lret
in
mov
insb
movsb
jle
xor
test
test
dec
cmpsl
inc
fistpl
cmpsl
sbb
data16
ret
lods
and
push
dec
daa
call
jne
cmp
addr16
je
inc
inc
adcl
xchg
imulb
sarb
sbb
mov
cmp
pop
aam
xor
insl
imul
add
test
icebp
jge
sub
cltd
dec
jb
stos
jb
cmp
or
rcr
inc
pusha
xlat
or
push
push
jle
cmp
dec
in
push
xchg
test
cmpb
arpl
loop
pop
cmp
mov
dec
push
js
mov
hlt
cs
adc
fs
test
push
loopne
or
scas
adc
add
mov
or
sub
dec
cli
sub
dec
inc
mov
stos
sub
daa
fistpl
arpl
cmpsl
out
inc
lods
inc
loope
push
loope
mov
add
sbb
dec
inc
push
mov
push
out
les
sub
in
jbe
dec
xchg
jg
push
ret
and
pop
mov
je
popf
push
into
dec
xor
mov
ret
mov
push
outsl
lods
leave
mov
dec
repnz
mov
shlb
xorb
jb
push
test
inc
cmp
inc
sub
shlb
mov
sahf
mov
cmp
pop
shrb
xor
repz
xchg
pop
jmp
pop
ds
push
and
repz
push
hlt
mov
xchg
push
pop
or
mov
stos
ret
mov
ffreep
lret
adcl
cmpsb
cmp
popa
fldl
adc
mov
mov
inc
fnstcw
jl
or
cmp
in
add
int3
outsb
adc
sti
xor
js
push
std
cmp
fdivl
dec
sub
ss
dec
mov
test
jg
cmp
xlat
rcrl
sbb
cwtl
mov
jecxz
adc
adc
pushf
and
mov
cld
or
xchg
movsb
std
cld
out
mov
pop
out
in
pop
iret
mov
aam
data16
mov
cmp
int
daa
mov
jp
fimuls
xchg
dec
pop
sbbb
rcrb
xchg
xor
dec
test
lods
push
insl
dec
push
mov
int3
repz
or
add
mov
push
lret
jne
inc
dec
mov
test
loope
adc
mov
cvtps2pd
push
js
jb
loopne
lds
pushf
mov
shl
scas
divl
and
pop
mov
movsb
jo
jp
add
loopne
scas
pop
adc
movsl
addr16
mov
setl
xchg
shrl
nop
cmc
andl
ficompl
andl
icebp
enter
xchg
jl
mov
fcmovnu
stos
or
lcall
inc
arpl
lods
lret
ret
xlat
movsl
out
lahf
clc
xor
popf
dec
lock
mov
faddl
scas
jl
stos
mov
lret
mov
pop
pushf
popa
test
and
pop
pop
dec
ja
add
shll
out
xor
add
mov
mov
or
popf
daa
mov
popa
push
out
insl
rcl
loopne
addr16
or
mov
pushw
imul
aaa
xchg
int
mov
xor
outsb
gs
insl
int3
lock
add
xlat
cmc
adc
sub
adc
int3
sub
fdivrp
repz
xchg
leave
xchg
pop
arpl
mov
and
push
or
mov
jnp
jg
and
out
in
icebp
mov
pushf
leave
cmp
sub
or
push
mov
adc
mov
sbb
xorl
cs
mov
push
insl
mov
inc
fcmovnu
popa
pop
xchg
mov
xorl
outsb
sti
jge
outsl
pop
xchg
adc
into
es
lock
aaa
lcall
or
lock
adc
and
lret
shlb
aam
cmp
ja
inc
pop
mov
add
dec
push
cmc
jbe
rcll
mov
loopne
ja
lcall
outsl
cmpl
xchg
xlat
sbb
adc
data16
in
cmp
and
mov
dec
sbb
dec
fldenv
sub
rolb
aas
dec
ret
xor
cs
add
mov
cmp
cmp
adc
add
mov
ja
cmova
sub
inc
call
mov
mov
inc
aaa
mov
lahf
gs
popf
nop
mov
push
mov
es
adc
xor
rcrl
and
fcomp
xchg
fldcw
jnp
mov
inc
xor
nop
mov
call
mov
into
xchg
out
adc
push
lea
cmp
sbb
ds
std
dec
dec
sbb
dec
scas
mov
lret
xor
cs
rcll
sbbb
mov
ds
out
cmp
or
dec
movsb
iret
mov
lods
push
dec
out
mov
rclb
mov
fwait
test
xchg
lret
pusha
cmp
sub
int
cmp
push
cs
cli
popa
dec
rcrb
imul
movsbl
bound
cmpsl
rcr
pop
jg
push
adc
jae
fadds
inc
or
xchg
push
in
xor
jecxz
jl
xlat
sub
mov
int
lock
pop
mov
sub
jae
leave
fldt
mov
xor
jae
cmpl
or
jl
jg
xchg
cmp
cwtl
insl
pop
or
xor
mov
xlat
sub
mov
mov
xor
in
icebp
aam
popf
sub
push
mov
movsl
jns
inc
in
xchg
rcll
cmpl
jb
lcall
inc
sub
sbb
and
dec
xchg
fnstsw
jno
xchg
inc
icebp
dec
scas
xchg
add
lods
xor
sbbb
movsb
mov
mov
inc
inc
mov
inc
ret
cmp
out
movsb
mov
pop
jg
ja
add
mov
daa
sub
lret
mov
mov
hlt
pop
ficoml
dec
imul
inc
dec
fucom
sbb
pop
aaa
sub
int3
jb
cld
fs
scas
xchg
pusha
adc
imul
push
loope
insl
jmp
add
sub
imull
mov
addr16
repnz
jb
pusha
aad
jmp
xchg
mov
jb
data16
aaa
loope
pop
pop
or
adc
inc
ljmp
mov
sub
fisubl
call
je
int
jle
mov
mov
sub
dec
and
push
sbb
and
mov
lret
mov
es
ljmp
js
mov
rorl
das
xor
fmull
push
jl
cmp
ljmp
fisubrs
inc
imul
mov
sahf
inc
xor
mov
loop
addr16
add
addr16
sub
mov
xor
lret
aad
lret
mov
push
mov
add
push
mov
out
dec
jp
push
push
aas
in
xchg
jbe
cmpsl
mov
pop
gs
mov
sbb
jmp
pop
mov
mov
adc
jge
subb
test
and
hlt
je
mov
mov
cmp
adc
dec
movsl
or
cmpsl
addr16
clc
push
sbb
sub
test
dec
cltd
aas
jle
mov
or
pop
stos
xchg
lods
in
fsubrl
outsl
rcr
enter
nop
lock
jns
outsb
mov
daa
out
mov
cmpsb
lods
push
clc
push
sub
popf
jge
sahf
push
aam
cmp
mov
xchg
aaa
mov
in
xor
or
aaa
mov
stos
cmp
out
cmp
gs
jnp
nop
pop
fisttpll
cmp
xchg
imul
leave
shll
int
lods
push
or
jae
pop
inc
out
jmp
mov
in
shll
mov
jo
jae
sar
mov
idiv
int3
mov
and
icebp
cmp
push
insb
rorb
out
and
cmp
pop
fs
mov
jp
shrb
mov
sub
out
push
int3
ficoms
and
dec
cmp
mov
mov
insl
xorl
or
movsl
cli
inc
sbb
ret
mov
inc
xor
sti
bound
imul
jl
sar
inc
push
and
les
ss
jae
xor
call
fldt
lods
insb
mov
sub
test
cli
xor
loope
adc
addl
fldcw
push
stos
jnp
push
int
cmc
out
add
aad
mov
push
xchg
stc
dec
pop
inc
shll
xchg
xchg
aaa
test
sbb
pop
dec
sbb
inc
lret
shll
int
orl
jmp
cmp
adc
icebp
idiv
inc
js
cmp
hlt
aad
pop
popa
repnz
pop
repnz
arpl
and
or
out
sahf
lret
dec
add
fisubs
add
add
jge
jmp
mov
sbb
push
add
mov
ja
jne
jge
ss
xchg
push
jb
push
cmpb
or
lret
mov
mov
and
jnp
inc
or
std
out
in
adc
add
xlat
xchg
test
jle
and
sbb
stos
pushl
mov
sbb
in
andb
or
jp
adc
and
xorl
inc
movl
std
dec
mov
or
push
fwait
xchg
pop
movsl
pop
push
bound
cmp
stc
pop
ret
inc
dec
testl
movl
dec
repz
in
es
int
ss
jns
shll
inc
sahf
outsb
and
int
jecxz
lahf
popf
mov
inc
pop
jae
cli
mov
imul
insl
xchg
jmp
jl
dec
mov
cmpsl
sbb
movsl
out
pusha
dec
cmp
mov
jl
data16
inc
out
stos
xchg
stos
call
das
mov
ds
inc
xchg
jecxz
cmp
sub
aas
in
mov
inc
adc
sbb
dec
aad
popa
in
inc
mov
pop
inc
or
inc
pop
mov
shll
subb
orb
in
imul
pushf
std
addb
fmull
scas
mov
stos
fdivrl
xchg
lods
jecxz
add
or
aaa
pop
shlb
jbe
pop
fmuls
popa
jae
fists
scas
aad
aaa
pop
push
jl
mov
outsl
xor
mov
and
ja
iret
gs
cmp
inc
mul
add
sbb
xchg
mov
fstp
jnp
rcr
sbbb
cltd
mov
dec
ss
push
stos
adc
mov
shl
ret
and
aam
lahf
jae
lea
sub
xchg
adc
aam
add
jmp
addb
icebp
pop
pop
add
jp
xlat
mov
jo
hlt
inc
bnd
in
and
fcoml
lahf
lods
mov
adc
sub
imul
mov
xor
repnz
jbe
stc
xor
jo
mov
push
jo
mov
into
jno
inc
jb
in
or
mov
pop
and
rclb
xor
popf
js
mov
jmp
in
lods
lds
add
rclb
and
mov
cmp
jg
add
mov
mov
call
mov
les
xor
cmpb
jae
sub
insb
in
cltd
in
loope
sbb
loop
daa
stos
inc
sbbl
rcll
insb
dec
xor
test
aas
push
addr16
mov
xor
test
xor
in
xchg
jmp
mov
cmp
jo
inc
xchg
xchg
sub
pop
inc
insl
xlat
cli
cltd
in
sub
movsl
mov
add
fnsave
push
cs
lcall
jge
in
sbb
adc
dec
fimull
push
subb
ret
loopne
mov
arpl
popf
lret
lret
sub
add
addr16
stos
je
inc
push
push
in
sub
add
adc
aas
pop
mov
into
pop
and
pop
mov
xchg
mov
jno
xor
xchg
mov
inc
adc
pop
xchg
clc
aas
xor
mov
or
sbb
push
or
push
adc
pusha
ss
pusha
pop
cmpsb
jo
mov
clc
dec
or
jns
data16
test
mov
jbe
or
clc
mov
sbb
or
data16
push
sbb
aad
sbb
clc
mov
or
jge
imul
dec
add
push
popf
or
cmp
cmp
mov
popf
mov
pop
mov
push
mov
jg
adc
xchg
pop
inc
mov
push
mov
cs
aaa
pop
test
mov
cmp
cmc
dec
or
shlb
jno
xor
aas
inc
shrl
lea
pushf
push
jnp
fcmovb
sbb
jns
pop
idivl
cmp
mull
rolb
mov
int
mov
test
adc
and
loope
loope
dec
ret
push
sarl
xor
push
call
and
adc
mov
or
xchg
push
in
adc
loopne
out
loope
adc
xor
or
push
hlt
jb
mov
mov
int
inc
push
rcll
cltd
in
mov
das
xchg
dec
outsl
aad
pushf
inc
dec
in
inc
stc
xor
inc
xchg
les
or
and
mov
lds
sbb
pushf
ret
and
cmp
adc
inc
mov
je
push
clc
xchg
fisubrs
in
cmp
dec
lds
enter
xchg
or
jae
scas
pushf
fsubr
test
jl
cwtl
movsb
fwait
pop
fmul
mov
lds
ret
mov
cmpsb
fistl
aam
dec
popa
rol
mov
jp
adc
add
out
push
push
popa
aad
subb
js
out
or
or
scas
pop
imul
push
repz
jo
xchg
cmc
push
jae
outsb
ljmp
movsb
sbb
std
sub
aam
imul
jp
movsb
jle
jbe
cmp
fnstsw
lds
mov
stos
push
adc
fst
inc
clc
pop
fucom
out
sub
mov
cs
pop
mov
cld
and
popa
mov
adc
bound
ljmp
mov
pop
push
or
mov
sahf
mov
inc
sarb
push
into
mov
imul
cld
or
pop
xchg
jmp
imul
jns
orl
push
lods
pop
test
mov
mov
mov
push
jno
dec
push
and
cmp
cltd
out
into
fsubs
into
orb
icebp
lret
ja
inc
cmp
inc
imul
shll
or
out
ljmp
loopne
mov
sahf
outsb
scas
mov
add
pop
mov
xor
mov
dec
adc
jne
sub
sbb
pop
filds
cmp
inc
mov
mov
jmp
pop
data16
adc
sub
test
lock
orl
jb
inc
outsl
enter
mov
dec
sbb
imul
cmp
jge
mov
xor
scas
cmp
add
add
out
les
jns
push
jne
cmp
and
pop
xchg
mov
cltd
and
mov
cmp
or
aas
pop
and
inc
jbe
ret
adc
lods
adc
xchg
outsl
out
rcl
push
jge
add
mov
cmp
stos
pop
cmp
fisubl
mov
aad
popf
scas
jb
xchg
or
jl
imul
jae
out
pop
leave
mov
mov
push
call
outsb
push
shl
jmp
mull
ret
mov
sub
and
add
filds
pop
jo
mov
or
cmp
and
lea
sbb
scas
mov
cmp
test
dec
sbb
push
cmp
jae
dec
es
jnp
out
stc
jl
add
test
mov
movsl
push
cmp
lods
or
fstl
adc
sbbb
pop
popa
pop
and
dec
inc
dec
cmc
mov
sbb
jno
dec
mov
rcr
in
outsb
push
cld
jg
dec
jp
fiadds
sbb
addr16
inc
mov
push
adc
fdivl
cmp
xor
scas
mov
std
push
repz
sbb
stos
subl
mov
cmp
test
jg
loop
mov
push
jo
gs
add
jge
cmpsl
and
rclb
call
mov
std
sahf
xor
or
mov
or
out
push
mov
cmp
inc
movsl
jg
cli
lds
adc
out
imul
daa
xor
dec
xor
jo
push
xchg
sub
jge
enter
mov
bound
cld
and
jo
loopne
cld
data16
adc
cmc
push
imul
into
icebp
jg
pop
push
into
out
mov
xchg
aas
insb
adc
shrl
adc
shr
add
dec
inc
data16
daa
fcompl
outsl
sti
aad
int3
pushf
mov
xchg
adc
mov
xchg
and
mov
push
inc
rcrl
xor
xchg
sbb
jbe
imul
fmull
je
daa
test
inc
out
push
sbb
leave
and
scas
jne
fwait
mov
cmp
cmp
arpl
sti
movsb
xor
shll
mov
out
test
mov
pop
icebp
clc
je
rcr
fsubl
dec
pushf
push
jo
jle
sbb
movsl
dec
test
hlt
jae
insl
aam
push
xchg
shlb
lods
repnz
push
sbb
scas
fistpll
adc
jl
sub
sarb
jl
jae
es
xor
mov
out
pop
or
or
dec
sbb
addr16
icebp
jbe
and
sahf
push
mov
inc
mov
mov
test
cld
cmp
loope
and
stos
xlat
mov
sahf
jnp
sar
daa
mov
sub
pop
fldl
sub
cmp
leave
adc
cld
mov
fwait
je
inc
rcrb
es
push
sub
cltd
xchg
jg
pop
adc
sbb
mov
rcrl
clc
addr16
sahf
xchg
adc
xor
cmc
adc
fs
or
lock
and
sbb
cmpsb
mov
sub
pusha
pop
inc
mov
or
lods
lods
push
shlb
sahf
mov
or
movsb
pusha
filds
xor
dec
push
jo
or
cmp
pop
cmp
loop
dec
mov
jnp,pn
icebp
sbb
jmp
mov
push
mov
cmp
jmp
xchg
clc
adc
mov
adc
xlat
ret
fiaddl
jno
sub
pop
gs
mov
stos
push
testl
jbe
cli
inc
cwtl
movsb
mov
std
je,pn
fneni(8087
sub
jmp
shll
cmpsb
cmpsl
in
sbb
fists
lock
mov
sbb
aaa
mov
dec
push
mov
push
xchg
add
lods
sbb
fimull
outsl
adc
push
inc
or
fwait
push
ret
ja
subb
loop
mull
xchg
bound
mov
pop
std
adc
push
inc
sub
pop
add
xchg
and
push
mov
mov
push
mov
sub
xchg
mov
push
push
aas
lcall
enter
xchg
inc
rcrb
jae
lea
sub
and
jae
mov
or
cli
idivl
mov
jle
bound
fs
inc
mov
outsb
movsb
pop
push
xchg
lcall
mov
dec
inc
xor
adc
add
sub
ret
sbb
push
xchg
pop
rclb
add
mov
je
pushf
sub
std
xor
std
cmp
cmc
push
push
adc
bound
pop
test
mov
imul
jae,pt
mov
xchg
popf
out
js
xor
test
push
or
je
mov
jo
repz
fbld
cmp
into
sbb
jl
mov
mov
in
cmp
iret
pop
mov
xchg
mov
ss
xor
dec
and
out
push
and
in
popf
xchg
xor
adc
arpl
and
das
cmp
push
test
repz
mov
pop
xchg
fcomi
or
dec
push
stos
or
into
inc
jl
push
push
nop
mov
push
cmp
dec
lcall
dec
xchg
cmc
or
scas
dec
dec
aas
dec
xchg
pop
sbb
js
cmp
ffree
push
loop
out
lahf
and
ret
fists
cmp
jmp
int
inc
pop
push
push
and
pushf
xchg
pop
fdivp
dec
jnp
cld
push
pop
pop
lret
mov
inc
jge
iret
out
int
or
rolb
jns
pusha
insl
aam
ret
scas
push
mov
cmp
ja
mov
sti
push
cmpb
pop
fldcw
jle
inc
pop
ret
hlt
inc
adc
mov
rorl
testb
and
add
push
stos
stos
mov
push
fucomp
hlt
sub
xchg
and
mov
out
push
xor
or
je
xchg
js
call
cmc
cmp
pop
sbb
adc
sub
pop
push
dec
aam
mov
sbb
xchg
jecxz,pt
sub
sahf
gs
sub
dec
dec
test
test
push
pop
sti
dec
pop
xchg
jecxz
push
cwtl
sub
push
lock
fsubp
dec
hlt
pop
jnp
jle
add
mov
add
inc
add
and
sub
in
pop
jbe
xlat
aam
sti
sbb
xchg
push
imul
sub
je
dec
arpl
cmpsl
iret
in
fstpt
cmpsb
into
mov
test
daa
and
arpl
cmpsl
mov
mov
ljmp
fwait
jns
in
xor
shll
stos
mov
mov
mov
imul
cmp
repnz
or
lret
filds
mov
dec
in
inc
pushf
jp
adc
cmp
or
das
pop
jmp
add
cmp
inc
je
jecxz
mov
mov
inc
xchg
mov
mov
pop
xchg
and
sub
pop
popf
aad
lock
cmpl
icebp
mov
incl
idivw
mov
int
mov
repnz
call
icebp
mov
shll
aad
ja
out
in
pop
dec
mov
sbb
mov
rcrb
xchg
add
mov
jp
jp
push
push
jge
mov
movsl
xchg
aad
add
addr16
lcall
xchg
fcoms
jbe
xchg
mov
and
push
outsl
xchg
outsl
dec
adc
and
or
add
jl
mov
push
lods
sahf
loopne
into
sbb
xor
mov
push
popa
mov
xchg
xor
xchg
test
ja
mov
push
inc
out
mov
jo
pop
stc
es
sbb
fnstcw
hlt
adc
cmc
jns
lcall
ror
not
mov
cmc
arpl
jb
mov
lock
xor
inc
jo
push
pop
aad
shr
adc
cmp
xchg
jae
test
jle
adcb
push
mov
ficomps
sub
mov
adc
insb
push
jmp
imul
fldt
out
out
insl
in
clc
xor
jne
or
insl
dec
lods
jns
lods
clc
insl
lcall
mov
sti
ret
into
sbb
ficomps
dec
pop
out
mov
sbb
xor
mov
ja
sub
es
ret
pusha
add
lret
fs
dec
repz
or
jge
outsl
arpl
cmp
adc
ret
dec
jbe
jo
dec
idivl
gs
test
loopne
mov
stos
mov
in
cmp
cmp
cmpsl
inc
imul
cmp
repz
pop
inc
inc
and
ja
mov
rcr
jmp
pop
or
adc
iret
pop
adc
push
adc
pop
jle
or
mov
xchg
adc
lcall
loopne
daa
jmp
jo
fstpt
ret
ficoms
xchg
test
cmpsl
jmp
imul
dec
into
sub
lcall
in
movsl
adc
jns
subb
pushw
sbb
and
mov
jmp
sahf
aam
mov
mov
pop
aad
jmp
sahf
cmp
jo
jae
test
add
sub
push
push
das
push
jmp
mov
data16
in
cmp
ficompl
mov
add
adc
adc
xchg
pop
xor
add
push
jmp
cld
adcl
pop
mov
ds
int3
test
push
xchg
mov
bound
lret
gs
lcall
lret
mov
lret
cmp
sub
rorb
sbb
das
jl
arpl
jle
or
and
aad
ja
mov
jecxz
test
out
cmp
pusha
and
pushf
fsubrs
testl
sub
pusha
sub
push
rcll
jmp
jp
sub
aaa
jns
cmp
sub
adc
es
push
push
xchg
call
fdivrs
es
mov
mov
in
push
dec
mov
push
cmp
adc
cmpsl
stc
inc
fwait
mov
scas
push
cmp
test
cmpb
fnstsw
js
stos
movsl
xlat
xor
in
and
popa
ljmp
xor
rcrl
inc
shll
inc
mov
ret
iret
mov
pop
push
mov
jno
in
mov
and
int3
or
cwtl
inc
xor
dec
ret
inc
divb
ret
aam
sub
fsts
sbb
dec
jmp
pop
sahf
push
movsb
loope
testb
imul
test
adc
data16
jg
or
inc
int3
sbb
and
in
shl
cwtl
pop
dec
adc
sti
mov
int
std
test
lahf
fisubrl
in
xchg
and
fs
ret
sbb
push
or
shlb
jecxz
adc
sbb
cmpsb
lock
scas
out
mov
cmp
sbb
dec
mov
sub
test
dec
sbb
outsb
or
rcrl
insl
mov
sub
cld
gs
repnz
dec
pusha
mov
pop
or
lret
out
push
stos
addl
xchg
xor
aas
jne
mov
xlat
punpckhbw
xor
or
fistpl
enter
das
int
insb
lcall
jg
test
js
pop
in
das
add
push
ljmp
push
imul
dec
mov
jo
mov
jl
sarl
nop
fldenv
jecxz
popf
or
and
dec
insl
shl
and
popa
test
jns
cmp
dec
mov
mov
dec
mov
ljmp
cmpsl
scas
lahf
cmpsb
jbe
in
fidivl
rcl
cmp
loop
mov
in
lahf
mov
jecxz
pop
sbb
call
and
inc
sbb
imul
iret
push
sub
xchg
xchg
scas
aaa
dec
push
push
negb
inc
mov
subb
call
fsubl
mov
movsb
or
andl
jge
ret
adc
mov
xor
gs
or
and
es
outsl
xchg
ficomps
adc
sti
cmp
inc
sub
sub
popa
xchg
adc
int
jle
stos
and
mov
xor
nop
icebp
jo
jo
les
sub
cmp
cmp
inc
mov
pushf
xchg
sub
popa
mov
shl
dec
outsb
add
out
mov
mov
xchg
in
call
sbb
repz
es
shr
stos
ret
jl
pusha
cmpsl
pop
jne
and
pop
jmp
push
jle
jo
mov
xchg
cmpsl
jmp
inc
dec
movsb
nop
cmp
cs
inc
xor
lret
sub
pop
fs
mov
dec
stos
push
inc
jnp
popf
push
sbb
je
pop
in
push
addl
push
neg
daa
mov
mov
mov
cmp
add
cld
std
insl
xchg
and
setnp
inc
mov
mov
shll
jecxz
mov
icebp
push
adc
add
je
and
mov
lock
ret
xlat
mov
imul
arpl
push
sub
sub
mov
xchg
mov
and
mov
negl
jl
cmp
pop
xchg
jb
inc
and
nop
pusha
push
add
adc
repnz
popf
mov
dec
or
ficomps
les
fstpl
cs
add
mov
pop
fiadds
aas
stos
test
xchg
dec
imul
xchg
xor
scas
iret
mov
push
mov
aam
inc
mov
sahf
test
mov
std
cs
mov
xchg
jle
push
outsb
mov
ss
mov
loope
jno
push
xchg
jmp
bswap
std
cld
insl
int3
psrlq
cmpl
sahf
inc
mov
in
ret
jno
push
js
cmc
js
aam
imul
push
pop
loopne
inc
movups
xchg
pop
lcall
arpl
subl
shrl
fucomp
pop
and
subb
mov
cmp
imul
addr16
xor
jl
rol
mov
xchg
jno
rorb
sti
arpl
xor
aam
scas
and
mov
insl
and
js
pop
xchg
push
lea
push
sub
lods
das
mov
dec
rcrb
dec
push
or
and
fisubs
popf
gs
divl
jns
aam
jge
insl
lds
push
jge
jecxz
dec
movsb
scas
mov
pop
popa
pop
push
xor
roll
fbld
movzbl
fwait
mov
sbb
jmp
and
imul
lds
lret
test
inc
push
push
ret
fnsave
mov
add
lea
repnz
les
xchg
lods
lret
pop
sbb
dec
cmpsb
xor
or
lods
xchg
sahf
add
xor
cmove
daa
add
cli
js
jne
sub
lahf
rcr
in
popa
hlt
add
mov
and
test
mov
push
xorb
imul
and
sti
xchg
call
dec
push
test
push
adc
xor
and
popf
jmp
and
loopne
sti
adc
inc
orl
xor
shrb
cld
push
stos
sub
imul
pop
adc
leave
std
lods
add
fs
push
add
lds
inc
lds
mov
xchg
fldt
stos
sub
outsb
push
loope
and
ljmp
mov
lds
nop
mov
push
stos
and
das
rclb
cmp
xchg
repz
xor
push
cmp
popa
adc
sti
sbb
inc
out
loope
or
mov
jo
out
ret
popa
mov
add
dec
xchg
mov
push
hlt
rorb
mov
lds
outsb
ss
push
lods
out
adcl
dec
lcall
pop
movsl
ljmp
lret
test
dec
popf
push
xchg
adc
scas
pushw
cltd
aaa
aam
movl
js
fsubl
jns
cwtl
push
repnz
lcall
or
mov
adc
lock
ret
sti
and
sbb
jle
loope
out
fnstcw
sahf
into
fwait
imull
cmp
dec
push
insl
jle
pusha
into
cmp
setae
lods
das
sub
aas
cmp
pop
movsl
das
je
dec
lcall
and
pop
xor
add
ret
dec
mov
push
outsl
dec
pop
out
xchg
pop
jbe
popa
xchg
loopne
mov
fwait
adc
test
xor
jmp
test
jnp
inc
xchg
sbb
mov
sbb
rcr
jmp
mov
and
int3
push
xchg
int
dec
push
enter
push
lods
push
inc
fwait
hlt
or
pop
and
sti
add
lea
iret
or
fiaddl
loope
mov
and
mov
out
rolb
js
lock
pushf
aam
ss
cs
in
xor
and
lock
repz
cli
mov
sbb
loop
movsb
dec
sbb
pop
aas
test
xchg
movl
cmpsl
mov
stc
mov
loopne
mov
repz
addr16
dec
fidivl
pop
andb
cmp
cmpsb
mov
mov
enter
insb
mov
into
mov
xchg
ret
clc
sub
outsl
adc
or
int
xchg
sub
push
push
sti
fbstp
xorl
mov
push
mov
data16
cmc
jge
dec
dec
cltd
sub
cltd
imul
addr16
loopne
sub
sbb
lods
xchg
jle
sti
imul
sti
xchg
test
movsb
stos
mov
add
imul
test
movsl
das
xchg
bound
jl
pusha
adc
hlt
nop
pushf
and
int3
xchg
out
lods
popf
xchg
bound
je
fldenv
mov
or
mov
or
push
or
ret
push
loopne
jg
hlt
sti
rol
push
mov
or
in
dec
movsl
adc
into
add
icebp
mov
pop
jnp
rcll
in
pusha
or
push
data16
push
pop
cmp
and
dec
push
shlb
push
repz
insl
cld
stc
call
fnstenv
adc
dec
insl
test
xlat
fidivrl
sbb
inc
popa
lret
sub
ljmp
jo
dec
lret
pop
imul
aas
cmpsb
pusha
add
testl
adc
lcall
mov
push
cmp
pop
roll
dec
outsb
nop
push
aam
jle
scas
lods
insl
pop
inc
movsb
mulb
cmp
push
leave
and
mov
outsl
pop
jge
sbb
insb
sub
lret
lahf
lahf
inc
fs
lahf
xchg
push
xchg
fildll
aaa
and
xchg
in
jle
clc
sub
mov
mov
addb
fnstsw
popf
jmp
std
push
clc
adc
pop
mov
push
pushf
adc
and
fistl
int3
xlat
pop
and
imul
sub
add
or
aaa
cmp
jp
cmc
mov
outsl
gs
or
call
shl
cltd
inc
cmpsb
imul
inc
jnp
adc
aad
and
xchg
bound
cld
cmp
cmp
test
push
int
push
or
rcr
cwtl
jno
pop
push
mov
jp
lods
cmc
rcr
into
jmp
add
push
xor
cmp
sti
push
push
and
outsl
cld
mull
fld
and
cmpsb
imul
mov
cwtl
popf
push
stos
movsb
shll
mov
push
mov
mov
sub
cmp
xor
pusha
andb
jmp
mov
scas
lea
add
inc
and
push
scas
jl
imul
sbb
hlt
push
xchg
js
ret
add
or
pushf
pushf
adc
mov
jnp
add
and
fwait
add
es
sbb
xchg
jecxz
das
ja
movsl
xchg
and
or
adc
cli
in
scas
sub
mov
jbe
cs
jo
and
and
gs
int3
sbb
int
mov
add
jl
or
pop
sbb
insb
xor
fists
insb
insl
into
sub
pop
ds
pop
adc
xchg
mov
fstl
ret
into
repnz
fs
push
jo
sbb
loopne
rcrl
lds
xchg
test
je
ja
repz
adc
pop
jb
mov
call
test
int
jb
andps
adc
inc
xchg
movsb
ja
mov
pop
cmp
addb
sub
in
outsb
fwait
mov
mov
xchg
cmpsl
jae
dec
lret
xchg
jo
sti
sahf
jb
popf
cmpsb
addb
xor
mov
add
inc
aaa
jmp
and
mov
pop
adc
sahf
iret
pushf
inc
lret
xchg
add
int
xlat
data16
lcall
hlt
sub
aaa
adc
mov
loop
test
inc
lahf
push
imul
xchg
add
mov
mov
idivw
adc
push
xchg
sub
loope
mov
fnstsw
bound
test
ficompl
rorl
insl
daa
mov
lahf
data16
test
xchg
cmp
mov
mov
mov
stc
mov
mov
push
pop
repnz
stos
add
cmp
push
mov
daa
std
mov
das
or
shll
pop
adc
fwait
cs
icebp
loope
and
cmp
add
adc
pop
pop
xorb
lods
add
hlt
sbb
stos
mov
lods
insl
push
pusha
inc
sarl
mov
sbb
push
movsb
mov
adc
jno
call
in
cmp
dec
dec
rolb
pusha
add
pop
popa
cwtl
inc
pop
shll
push
lret
mov
jo
mov
jg
cmp
jae
pushf
and
icebp
mov
push
cmpsl
mov
xchg
mov
mov
jns
hlt
dec
loopne
icebp
mov
push
push
add
je
test
push
mov
aad
test
es
jns
pop
mov
fsubs
dec
mov
mov
int
dec
inc
sub
aam
adc
aad
mov
or
mov
out
add
jno
sub
sbb
addl
mov
daa
fisttps
mov
or
push
lds
mov
cmp
pop
pushf
jns
pop
sbb
xchg
fbstp
movsl
lods
fadd
testl
pusha
xchg
jbe
sbb
lods
mov
int3
aam
mov
jno
mov
imul
jmp
pop
xchg
mov
popf
xor
sub
out
fadd
push
sti
sub
pop
jmp
das
or
cmp
inc
lret
ds
lods
mov
jo
xor
fcompl
inc
xchg
add
dec
scas
pusha
cmc
dec
mov
lea
cmp
clc
pusha
bound
jge
push
mov
and
xor
aam
lcall
jno
fcoml
pusha
dec
pop
call
cmp
outsb
pop
jg
outsb
bound
rclb
jle
popf
sbb
cmp
sbb
arpl
add
mov
xchg
inc
pushf
cmpsb
sti
pop
js
subl
xchg
fidivrl
fcomip
xor
lds
clc
push
insl
mov
out
and
cmc
adc
xchg
ret
in
sub
xchg
test
repz
hlt
cmp
sbb
js
mov
jb
jmp
xor
rclb
pop
insb
mov
add
aad
rol
iret
jg
les
int3
das
sbb
mov
loopne
cwtl
ret
jo
mov
lock
dec
popa
and
cmpl
int3
push
js
push
or
ficoml
adc
aas
sbb
stos
lods
sbb
insb
int
and
insl
lret
aam
pop
enter
jb
inc
adc
mov
jmp
sti
jne
lods
inc
repnz
repnz
dec
iret
mov
inc
cmpsb
cmp
mov
test
mov
adcb
popf
pop
jle
lods
test
rep
mov
ja
jl
and
dec
popa
and
aas
stos
loopne
shl
inc
add
jo
mov
scas
out
fcmovnb
adc
pop
or
jne
sbb
and
mov
mov
add
inc
sub
cmp
mov
mov
xorb
lret
or
dec
pop
jns
push
fs
and
ret
push
loop
jbe
jmp
sbb
cmp
imul
jb
push
inc
xchg
clc
add
pop
and
repz
xlat
mov
cmp
scas
push
insb
addb
call
adc
mov
test
jns
push
adc
shrl
lods
xor
mov
stc
shlb
roll
mov
adc
andb
dec
data16
repz
pop
icebp
test
arpl
pop
js
repnz
cmp
adc
inc
aaa
aad
sub
xor
pusha
fisubs
rorl
cs
mov
jae
cmpsl
movsb
inc
dec
ret
jp
fadds
faddl
mov
out
adc
push
mov
ljmp
cld
pop
bound
xchg
push
dec
mov
dec
push
inc
rolb
mul
jg
mov
adc
mov
pop
sub
sub
dec
flds
jne
in
xor
cmp
dec
popf
dec
test
iret
bound
xchg
cltd
dec
mov
into
sub
mov
js
subb
mov
lret
push
lret
or
jns
mov
jg
ja
cmpsl
in
mov
int
pop
pusha
ljmp
push
jb
sbb
or
xchg
or
std
scas
add
mov
test
loopne
aad
mov
inc
insb
mov
loopne
cli
sub
cmp
inc
push
mov
lods
test
jns
jnp
xchg
std
lret
mov
out
xchg
sub
rorl
xchg
xor
mov
pop
notl
cmp
lcall
in
scas
out
mov
jg
jecxz
pop
data16
iret
repnz
in
mov
outsb
add
jg
ret
jns
outsl
and
dec
stos
lahf
inc
popf
mov
mov
and
push
xchg
iret
adc
dec
movmskps
push
dec
or
pop
adc
jmp
sahf
or
and
in
cld
lods
mov
cmp
mov
stos
xchg
stc
mov
sub
add
loop
daa
xor
jae
mov
les
popa
rcl
mov
sub
jae
adcb
fldenv
cltd
mov
dec
imul
xor
mov
mov
jo
xchg
xchg
loopne
sub
and
sub
dec
sub
das
pop
jo
and
xchg
mov
pop
xor
cmp
pop
stc
movsl
lea
imul
outsb
imul
jnp
mov
fcmovbe
std
xchg
sub
sub
fs
nop
mov
loop
das
mov
idiv
aas
ss
sbb
xor
in
mov
push
ljmp
jecxz
mov
dec
jo
and
test
leave
les
dec
loope
sub
jg
xchg
sub
cmpsl
add
mov
cwtl
lcall
or
dec
out
dec
xchg
adc
das
cmp
andl
imul
aaa
or
sub
or
and
call
dec
popf
xchg
out
sub
sbb
and
btc
outsl
cwtl
in
into
inc
sarb
sbb
aam
jmp
dec
arpl
pop
pop
jbe
push
mov
mov
inc
call
push
cmp
cmp
jl
fs
cmp
pop
sbb
outsl
mov
rorl
shrb
lods
gs
out
addb
arpl
jge
cmpsl
mov
and
mov
mov
or
pop
subb
mov
in
jo
out
lods
ds
push
xor
je
push
bound
hlt
clc
xor
push
loopne
movsb
add
in
push
frstor
xorb
cwtl
int
jns
notl
fmul
mov
pop
lahf
hlt
popf
or
mov
divl
cmp
and
daa
movsb
loope
adc
aam
fwait
push
cmp
pop
lret
lds
mov
lret
mov
mov
push
insl
xchg
lock
fdivr
clc
mov
ljmp
pusha
stos
xadd
sub
jne
sbb
mov
or
pop
mov
sub
cmp
leave
test
push
cmpsb
mov
xor
out
push
fmuls
xor
xchg
mov
out
push
in
repz
sahf
loopne
fwait
adc
movsb
add
and
xchg
lahf
orl
stos
pop
pop
xor
icebp
test
nop
mov
dec
xlat
add
shlb
leave
push
add
adc
push
daa
aaa
sbb
clc
movsl
dec
and
jecxz
xor
cmpb
inc
hlt
popa
mov
jb
push
inc
mov
and
mov
xor
daa
pop
rclb
fs
rorl
fdivrs
or
pop
mov
push
roll
iret
pop
push
xchg
pop
test
mov
mov
mov
jns
mov
pop
mov
jmp
cltd
popa
addb
inc
xchg
inc
jmp
xchg
jge
orl
shll
mov
je
dec
adc
cwtl
inc
call
jecxz
adc
mov
out
das
adc
js
clc
jg
inc
pop
dec
cmp
cmp
sub
push
loope
daa
shll
sti
add
mov
lret
xor
cs
es
adc
mov
and
out
cs
mov
inc
or
sbb
sub
push
adc
movsb
xchg
jo
fmuls
mov
adc
cld
je
call
sub
xor
cmpsl
mov
dec
push
inc
mov
push
cmp
stos
mov
mov
lds
pop
sarl
cmp
cmpsb
pop
popf
fdivl
faddl
mov
xor
dec
mov
sbb
mov
lahf
push
inc
or
in
xchg
shlb
int3
jl
push
mov
dec
subl
inc
and
cld
popa
pusha
xchg
xor
mov
jmp
loop
loope
mov
insb
jmp
lcall
lds
das
adc
in
clc
jo
push
mov
lret
cmpsl
mov
idiv
icebp
out
lods
sahf
sub
clc
pop
push
jbe
jb
jl
sti
add
pushf
es
fucomp
dec
out
sub
clc
or
push
cmp
add
or
fwait
pushf
or
jmp
inc
sub
or
loop
sahf
pop
insl
fdivrs
popf
xor
insl
pop
in
xchg
xchg
test
shlb
ja
push
ljmp
outsl
cmpsl
push
cmpsl
rorl
ljmp
sbb
shlb
pop
in
xchg
lea
decb
xchg
cmp
das
sbb
adc
sbb
test
mov
xorl
nop
fistpll
iret
outsb
fcmovu
xchg
push
fwait
push
aaa
jp
rorl
mov
ret
repnz
xor
lods
cmp
dec
xor
fsubs
sbb
or
inc
sahf
in
inc
and
push
fwait
inc
cs
xchg
dec
test
xchg
cmp
inc
push
mov
stc
popf
mov
add
and
and
inc
dec
mov
xchg
aas
sub
jmp
cwtl
push
mov
aad
xchg
pop
pop
add
imul
xchg
xchg
adc
es
jnp
aaa
sub
adc
nop
lcall
fidivl
pop
dec
xchg
mov
ss
jo
push
inc
pop
xor
lods
divl
jle
decl
sbb
mov
cmp
jl
sahf
mov
in
push
and
or
and
decl
adc
push
testl
pop
xlat
fsubrl
in
in
xchg
je
sbb
pop
jp
out
loope
lcall
fildll
add
sbb
mov
adc
sub
jle
mov
outsb
xor
xlat
pop
xor
jmp
and
lret
pop
sub
pop
fbstp
pop
popa
popf
jae
pop
fs
mov
dec
xchg
std
stos
add
jbe
jne
mov
sbb
loopnew
cmp
jmp
popf
push
mov
add
push
insb
cld
cmpsb
adc
jl
xlat
jnp
push
xadd
outsl
notl
rolb
mov
pop
div
out
inc
js
fisubl
jmp
jge
mov
pushf
mov
loop
xchg
jnp
pop
mov
loopne
iret
clc
ret
lss
mov
or
addr16
fsubrs
lret
int
inc
sahf
lret
xchg
icebp
hlt
or
mov
iret
neg
mov
mov
push
adc
daa
scas
xlat
cmp
or
pop
roll
fisubrs
call
cmp
out
sbb
cmp
pop
xorb
xorb
push
add
add
add
jecxz
inc
pusha
mov
mov
cmp
imul
lock
dec
leave
and
jge
leave
mov
adc
movsl
dec
jnp,pn
shr
add
pop
mov
inc
or
push
and
mov
or
pop
test
mov
jmp
out
lahf
push
mov
cld
cmp
xchg
in
pop
sbb
xor
aas
test
jmp
xchg
lcall
xor
xchg
daa
je
loope
sub
jmp
in
imul
addr16
arpl
mov
pop
push
sbb
add
jg
sub
jnp
xor
out
test
insl
lcall
mov
push
das
mov
xchg
cmp
enter
mov
mov
push
nop
ret
or
insb
xlat
and
cmp
sub
mov
xlat
dec
loopne
jmp
outsb
repz
fwait
test
or
out
sar
inc
inc
jno
insb
fmulp
sub
add
ret
and
mov
push
insb
sarb
test
shll
push
mov
push
dec
loop
adc
add
dec
push
xchg
sbb
pop
sbb
sahf
jmp
mov
lret
ficompl
xchg
outsb
and
inc
mov
fnsave
jp
push
push
jg
or
movsl
mov
je
nop
mov
push
jbe
xchg
imull
ret
scas
mov
push
iret
xchg
frstor
inc
movsl
add
fidivs
xchg
jbe
in
imul
xchg
ljmp
cmpb
in
mov
outsb
mov
scas
cmp
fwait
mov
hlt
adc
daa
mov
or
enter
xchg
add
push
data16
lret
xor
sbb
lock
inc
decl
std
or
ljmp
subl
mov
or
or
mov
aad
subl
in
push
pushf
dec
test
sbb
add
push
xchg
dec
dec
inc
pop
xor
test
jge
movsb
loopne
add
mov
loop
gs
add
push
mov
jmp
aad
nop
test
dec
cli
or
inc
push
push
jle
fcmovnu
or
or
mov
mov
dec
call
loop
jno
lret
jmp
dec
loopne
inc
stc
push
daa
mov
mov
decl
adc
dec
xor
test
hlt
js
mov
pop
lds
jmp
cwtl
aaa
adc
repz
sbb
cwtl
push
shl
imul
adcl
insb
popf
fsubrl
pop
sub
sahf
pop
push
sbb
aas
clc
movsl
cwtl
int3
lcall
cli
inc
pop
inc
or
cmp
and
jno
pop
fadds
inc
push
sbb
or
aad
ficomps
cli
lret
cmp
fcomps
jae
push
mov
rcrl
fcmovbe
ret
mov
xor
pop
mov
out
pop
dec
adc
sbb
gs
mov
mov
mov
inc
and
addl
inc
aam
inc
cmc
push
in
lock
arpl
adc
adc
mov
not
pop
mov
out
loope
addr16
adc
xor
dec
cli
scas
mov
pop
ror
lret
sub
jecxz
dec
mov
mov
mov
push
mov
and
and
pop
xor
shlb
scas
push
jp
jne
adc
xchg
hlt
add
pop
cmp
sti
fsubrp
xor
jno
xor
and
xchg
sarb
cli
jns
mov
xor
push
out
xor
mov
out
movsl
add
int3
pop
xor
das
and
je
sahf
outsb
inc
jg
cmpsb
aad
hlt
imul
fs
adc
outsb
lret
adc
cmp
js
mov
pop
rcrl
sahf
sbb
xchg
testb
push
in
in
es
iret
xchg
cmp
popf
pop
and
nop
add
in
andl
cltd
inc
cmpsb
fiaddl
insb
cs
leave
sti
cmpsb
or
jo
mov
mov
test
sbb
arpl
fwait
and
xchg
push
lods
mov
outsb
repz
push
fcoml
jmp
adc
xor
inc
hlt
flds
and
jbe
loop
mov
sbb
pop
xor
mov
idiv
xor
inc
call
and
adc
jp
fcoml
mov
inc
inc
xchg
das
fsubrl
out
out
adc
ret
clc
pusha
cld
fisttpl
lods
leave
push
inc
std
add
jle
lcall
out
das
or
mov
insl
mov
mov
fs
inc
push
cmc
fdivs
cmovb
jecxz
xchg
sahf
xchg
sbb
or
fs
sbb
in
push
cmp
int3
ffreep
xchg
pusha
cmp
call
stos
xor
push
adc
pop
daa
pop
dec
loop
cmp
push
call
push
sbb
and
int3
cwtl
or
and
pop
cmpsb
mov
xor
cmp
add
fisubrl
fs
and
dec
scas
xchg
pop
cld
andb
push
dec
clc
dec
xchg
ret
and
sbb
imul
repz
inc
and
or
inc
cld
add
add
popa
dec
pop
and
jb
dec
dec
js
sbb
enter
push
adcb
pop
loop
test
jl
in
cmp
xchg
iret
data16
jl
in
dec
add
popf
ret
push
pusha
push
subb
jo
mov
or
lods
xchg
jb
and
cmp
data16
and
inc
or
mov
div
cmp
out
das
xor
jb
in
enter
adc
xchg
adcb
xchg
outsl
xor
movsb
pusha
icebp
jno
jb
mov
stc
mov
sbb
fsubl
pop
add
jb
xchg
shr
call
mov
ret
scas
mov
add
pop
cmp
das
sbb
push
mov
hlt
andb
pop
mov
icebp
aas
xor
adc
mov
and
aad
inc
xchg
lods
stos
mov
and
iret
jle
jmp
xchg
out
add
dec
rcrl
fdivs
jle
xchg
js
test
jmp
gs
and
divl
and
into
jge
sahf
data16
cmp
push
xchg
fld
stc
push
test
dec
mov
inc
cmpsl
ret
xlat
out
imul
xchg
inc
daa
and
iret
cmp
rcrb
inc
sbb
push
cs
jns
das
and
jg
dec
gs
ss
pop
nop
rclb
mov
pushf
adc
ret
popf
popa
xadd
mov
and
xor
jno
mov
sarl
pushf
adc
jae
cmp
dec
cmp
sub
test
cwtl
mov
mov
push
xchg
push
dec
sti
mov
fs
push
popf
pusha
inc
rcrb
jne
push
popa
lock
lcall
adc
sarb
adc
cmpsb
js
inc
scas
dec
ds
ja
dec
fimuls
add
sub
push
lds
jns
and
inc
mov
ret
add
pop
mov
jl
iret
jg
std
cwtl
loop
push
xor
xchg
jmp
scas
adc
jbe
pop
dec
sahf
or
cltd
or
xlat
lcall
adc
add
ret
add
sub
lret
cli
pop
mov
pop
jmp
pop
push
sbb
adc
shll
or
and
shrl
and
aaa
add
xor
sub
data16
lea
xlat
sub
insb
mov
aam
cltd
xor
sbb
push
leave
nop
pop
out
push
dec
cltd
push
or
repz
add
cmp
out
mov
add
adc
les
sarb
fisttpl
jg
sbb
loopne
adc
aaa
mov
or
xor
in
xor
pop
shlb
lret
sub
jae
inc
add
dec
js
mov
int
shlb
xchg
sarb
in
dec
push
jp
imul
mov
cmpl
loop
cs
mov
inc
xchg
jl
outsl
rol
cmp
inc
nop
mov
sub
mov
dec
mov
jb
sbb
push
cltd
push
shlb
lds
jne
outsl
dec
in
loop
fadd
popa
add
addb
cmp
popl
xchg
and
shrb
leave
push
test
push
or
pushf
mov
rcr
int
lret
pop
mov
lret
rolb
xchg
into
daa
push
xor
push
repnz
pop
js
or
jne
adc
test
xor
push
daa
movsb
fiadds
mov
pop
stc
loopne
and
clc
sarl
les
pop
push
pusha
or
add
in
rcll
out
xchg
mov
cltd
push
xor
arpl
scas
pushf
fstp
or
and
cld
mov
lods
adc
loopne
fidivl
scas
mov
inc
mov
jp
push
fnstsw
mov
js
ds
mov
loope
popa
push
xor
jmp
outsl
push
cmp
and
pop
adc
xlat
enter
aas
push
addb
xchg
ljmp
push
jl
js
mov
outsl
cmp
cmp
mov
or
mov
mov
ficompl
xchg
jmp
push
cmp
push
push
popa
sub
ss
adc
int3
sbb
data16
xor
dec
jnp
test
pop
cmp
pusha
lcall
outsl
mov
outsb
fidivrs
pop
mov
fisubrs
jl
notb
movsbl
fbstp
push
imul
mov
fst
cmp
mov
xchg
add
jecxz
fsubs
xor
inc
mov
pop
add
or
jg
lods
dec
mov
pop
push
pop
bound
dec
out
std
stc
inc
shrb
scas
das
jl
insl
adc
rcrl
xlat
inc
jno
cwtl
lock
inc
fsts
xlat
jnp
xchg
inc
fcmovbe
xchg
jns
dec
push
decb
push
mov
loope
pop
mov
int3
mov
rol
jbe
mov
xchg
repz
shrl
push
and
daa
mulb
jecxz
lea
movsl
mov
mov
je
mov
sarl
mov
push
sbb
or
or
mov
cmp
sbb
and
adc
dec
mov
fmuls
mov
xor
mov
mov
pop
dec
mov
leave
lods
mov
dec
cmp
push
aas
les
jmp
inc
dec
sub
and
inc
ss
movsb
stos
jb
popf
negl
in
fwait
lahf
and
xchg
jl
bound
inc
lock
int
add
cmpsl
lcall
add
test
loope
jle
add
sbb
test
xor
jg
ds
mov
push
dec
f2xm1
test
test
or
jne
mov
mulb
fldcw
test
cmp
cmp
or
mov
xlat
movsb
sbb
inc
aas
jge
mov
dec
imull
inc
push
pop
add
mov
and
xor
sub
push
push
push
aas
xchg
ret
cmpl
fists
rolb
out
jle
sbb
ret
inc
fst
loopne
pop
loop
inc
push
scas
cmpsl
pop
in
ficoml
push
xchg
test
mov
pop
je
pop
xchg
ret
setae
or
bswap
out
outsl
inc
sub
xchg
dec
jmp
adc
push
loopne
cmp
inc
dec
out
in
sbb
xor
xor
ljmp
stc
jae
stos
sbb
fsubl
popf
popf
mov
lcall
and
sbb
je
dec
out
pop
add
push
xor
and
call
cwtl
inc
xchg
gs
sub
rcr
shl
add
and
fs
xor
push
mov
movsb
subb
nop
jmp
mov
pop
and
fiadds
dec
mov
push
mov
rcl
mov
inc
add
scas
leave
fldl
mov
jnp
movsl
inc
push
pop
jmp
push
mov
and
push
pushf
push
insb
and
loope
bound
daa
insb
pop
pop
xor
ret
lods
mov
xor
cwtl
jns
cmp
lods
pop
push
dec
lods
add
rclb
js
mov
pusha
stos
add
sub
clc
loopne
mov
mov
jmp
faddl
xor
ja
loope
push
test
pop
outsb
mov
mov
cltd
movsb
jnp
or
jecxz
mov
jbe
ficoml
sbb
pop
xchg
xchg
stos
inc
std
sub
jns
cld
nop
data16
jno
push
aad
dec
outsb
jne
in
fisubl
fidivrs
fs
frstor
cmpsl
cmp
loope
inc
add
in
insl
or
cwtl
pop
jne
jae
jmp
cmp
jge
jae
sbb
scas
cld
mov
push
addr16
dec
les
sbb
xchg
movsl
mov
jl
mov
lods
xchg
cmp
gs
pop
pop
jp
dec
jbe
pop
cmp
jb
ja
push
aad
clc
cld
stos
xchg
test
mov
push
data16
pop
mov
dec
jl
rcl
mov
sti
jecxz
cmp
testb
lods
scas
or
out
div
sub
lcall
adc
or
mov
xor
mov
mov
cltd
das
jb
and
pushf
aaa
shrb
rcrl
or
pop
sbb
outsl
push
mov
cmp
adc
sbb
cmpsl
sub
sub
clc
xor
je
rol
call
scas
or
pop
rcll
mov
sub
pop
loopne
loop
push
je
mov
inc
pop
xchg
push
mov
xor
push
add
addl
push
push
dec
out
repz
xchg
xchg
loope
das
or
popf
jp
int3
lods
mov
adc
pop
ret
adc
sub
adc
loop
fstpl
stos
push
dec
iret
mov
sahf
jge
push
sbb
cmp
std
popf
push
enter
mov
lcall
aam
and
test
int
sti
ret
mulb
jle
cmp
aad
lock
shlb
popf
pop
sti
mov
mov
xchg
aad
add
aam
mov
cmpsl
popa
push
sub
xchg
xlat
pop
jno
lea
jae
in
popf
stos
sub
pop
pop
fdivr
sarl
mulb
outsl
sub
jne
lods
sbb
cmp
ret
jmp
lods
jbe
xor
pop
rorl
mov
mov
rorb
lret
mov
lret
jp
fst
adc
or
push
adc
fwait
mov
lods
jge
insb
fldenv
inc
xacquire
lret
mov
or
cmp
aad
add
nop
jmp
je
push
addr16
aad
insb
sub
dec
fnstenv
adc
xor
push
icebp
insb
sbb
pop
fcoml
lds
sub
stos
cmp
in
nop
inc
sbb
insb
cwtl
lea
lret
movsl
arpl
cwtl
jl
test
popf
dec
pushf
imul
push
pop
packssdw
push
into
sti
data16
adcl
mov
and
fcomi
ret
mov
cmp
popf
dec
dec
js
sbb
mov
and
mov
push
sub
jge
ficoml
xor
rcr
loope
mov
insl
adc
add
or
aad
xor
sub
sub
xchg
mov
out
jmp
xor
int
stc
nop
cmp
add
insl
or
and
xchg
sti
movsl
adc
fidivrl
push
cmp
push
mov
cmp
jp
sbb
add
push
mov
rclb
xor
dec
fistpl
call
cli
ss
imul
jno
cwtl
or
dec
mov
mov
mov
push
je
mov
mov
jbe
movsb
int3
mov
jae
mov
jae
lods
xor
jne
and
jecxz
ret
shll
mov
dec
mov
mov
push
test
loop
mov
imul
cltd
mov
pop
dec
push
ret
ret
add
xchg
jmp
push
mov
out
rdmsr
cwtl
fmull
mov
sahf
jbe
mov
enter
outsb
test
inc
cli
mov
push
cmp
clc
sub
inc
xor
scas
rorl
jne
jnp
lahf
mov
popa
sarb
aam
clc
fldt
sbb
or
xor
ficompl
shl
out
cs
dec
inc
pop
cwtl
jl
movsb
ret
ss
psllq
jle
repnz
loop
mov
xor
dec
shr
into
sbb
push
push
lods
add
jg
cmc
cmp
adc
fidivrl
into
adc
int
push
and
scas
jne
sub
and
ljmp
ljmp
pop
sahf
cmp
adc
or
scas
jb
pop
sbb
mov
je
jmp
cmc
inc
notb
divb
xor
arpl
adc
out
cmc
and
fstl
sub
movsl
cwtl
add
cwtl
gs
in
js
mov
sbb
int
xchg
shr
jae
jecxz
push
mov
xchg
mov
fidivs
cmp
ljmp
add
pushf
mov
les
xchg
xchg
mov
std
rclb
roll
mov
in
mov
pusha
inc
sbb
fstps
push
xchg
sti
inc
lock
pop
cmp
daa
in
cs
repnz
mov
mov
dec
pop
inc
and
jp
push
scas
jecxz
push
fisttpl
push
cmpsl
ss
into
fisubs
loope
jb
sub
sbb
xchg
ljmp
popa
adc
fidivs
fsubrp
xor
adc
jmp
ret
je
aad
sahf
sbb
jb
add
lret
cmp
test
stc
mov
dec
sbb
inc
mov
mov
pop
cmp
ds
cld
aad
daa
pop
pop
in
mov
gs
rolb
mov
add
fisttpl
stos
popa
sbb
push
sbbb
jne
mov
jg
inc
mov
pop
add
jb
xchg
rcr
fsubl
fwait
das
movq
pop
in
enter
push
pop
ret
adc
or
xor
fimull
and
ror
or
out
mov
fcomip
jg
orb
call
jecxz
shr
adc
std
out
js
repnz
ret
pop
pop
mov
mov
push
test
push
pop
mov
push
jno
jg
lret
mov
pop
mov
gs
pop
push
jmp
cmp
outsl
out
cltd
adc
fcoms
stc
or
sub
cltd
pop
fsubl
adc
cmp
call
dec
dec
ret
lret
xor
cmp
lret
sbb
fsubrs
xchg
push
adc
lock
add
mov
lahf
repnz
push
mov
inc
pop
dec
imul
ja
popa
rorl
addl
add
jae
push
xchg
ja
arpl
pop
jl
xor
int
add
adc
test
mulb
test
aas
scas
into
nopl
leave
mov
pop
inc
dec
out
cltd
inc
je
dec
mov
and
jge
pop
pop
push
mov
into
fisttps
scas
cld
jmp
leave
jns
inc
pop
ret
and
or
dec
push
adc
cmp
movsb
sub
or
in
mov
int
mov
jae
mov
push
popa
mov
and
out
and
lock
iret
xor
stos
aas
pop
push
inc
ror
out
push
lds
lret
cmpsb
xchg
adc
pushf
mov
or
out
aas
and
xchg
jbe
lods
and
mov
jne
push
adc
jo
lods
cmp
xor
shlb
xor
adc
sub
cli
lret
aad
pop
out
pop
testl
push
outsb
or
pushf
pushf
sbb
mov
loopne
lods
movsb
in
jne
inc
mov
shl
push
testl
push
adc
sbb
inc
lods
jno
test
seta
mov
cmpsl
xchg
jo
pop
imul
jp
popf
xchg
pop
repnz
dec
xor
mov
popa
daa
aas
pop
into
mov
pop
ss
fdivrp
mov
and
mov
shlb
cmp
adc
dec
adc
stos
mov
jmp
pop
cld
mov
aam
and
jle
adc
push
out
fsubrs
and
sbb
jecxz
jl
push
je
mov
bound
pop
jne
mov
pop
cwtl
jns
push
decb
cmpsl
push
cmp
lcall
lcall
xor
adc
xor
jmp
bound
mov
popa
dec
mov
and
inc
xor
push
iret
add
aad
xchg
shll
adc
push
cs
sub
arpl
mov
jge
or
int3
jae
test
or
aam
mov
inc
cmp
les
int3
mov
popa
push
inc
lahf
cmp
xlat
push
and
test
scas
sub
leave
lea
sub
cltd
arpl
mov
sub
decl
pusha
pop
fsubs
push
pushl
cwtl
mov
lcall
std
mov
and
jo
pusha
push
insb
les
xchg
mov
xor
or
loop
out
push
enter
cmc
dec
test
out
ja
jge
lods
and
jbe
shll
int3
xor
aas
xchg
xchg
xor
pusha
fiaddl
gs
aad
jg
stos
adc
inc
pop
xor
inc
sarl
cmp
es
in
cmp
mov
out
jmp
outsl
sbb
sub
in
xor
pop
popf
jo
lock
push
bswap
mov
test
xor
fdivr
inc
xor
or
inc
cmp
icebp
les
mov
jecxz
rclb
ss
jmp
fidivrl
ja
mov
sub
dec
call
icebp
inc
insb
lcall
sarb
push
orb
scas
jo
insl
jg
sub
and
fldt
in
xchg
or
sub
adc
xor
xchg
pop
mov
pop
les
gs
push
inc
mov
mov
je
cltd
mov
add
mov
lahf
ret
in
sahf
xchg
mov
push
add
adc
insb
shl
stc
xor
mov
in
ret
mov
push
dec
in
orb
cmpsl
push
lret
inc
dec
adc
mov
in
mov
push
sub
push
cs
adc
push
sub
icebp
lods
cmp
std
pop
in
aam
add
sbb
adc
jo
pushw
mov
enter
fcmove
and
inc
scas
xor
xchg
mov
jp
addr16
fwait
daa
ret
mov
mov
loopne
movsl
ljmp
sbb
cmp
push
adc
add
icebp
jne
push
cmc
sbb
add
pop
cmp
adc
pop
int
inc
cmp
or
and
loopne
out
fcoml
das
cmp
ficoms
hlt
dec
jp
adc
cli
jbe
inc
stos
adc
scas
jnp
or
push
cmpsl
mov
fwait
dec
jns
call
xchg
sarl
add
and
rcrb
js
test
pusha
add
sbb
lret
fs
xchg
movsb
add
mov
fbstp
push
xor
and
mov
fnsave
arpl
pop
nop
adc
xchg
daa
pop
movsb
adcl
sub
gs
int3
aad
mov
frstor
fisttpl
sbb
or
movsb
nop
sub
mov
xchg
add
lock
test
movsb
repz
jle
lods
clc
je
addr16
mov
lods
fwait
and
jbe
mov
outsl
imul
into
cmp
push
out
bound
mov
jp
push
in
jns
dec
iret
outsl
sub
add
sub
xor
mov
jae
stc
insb
lcall
lret
ljmp
sbb
cmp
jecxz
ja
inc
enter
xor
jnp
and
sbb
mov
xor
mov
xor
inc
adc
insb
sarb
out
mov
jbe
mov
or
pop
dec
push
inc
cmpsb
sub
mov
sbb
cld
sbb
in
into
popf
ret
jle
fs
mov
arpl
push
movsb
mov
jg
inc
inc
jns
imul
inc
iret
out
mov
loopne
loop
or
push
sbb
inc
shrl
outsl
test
mov
xchg
xlat
jnp
mov
mov
cmp
rcl
bsr
std
and
jno
pop
add
ljmp
bt
jae
push
lret
jnp
inc
sbb
mov
fdiv
cltd
dec
pusha
test
clc
and
aad
xchg
add
sub
leave
mov
add
sbb
lahf
xchg
ljmp
popf
add
push
add
mov
or
imul
pop
xchg
inc
ja
mov
cmpl
jne
fbld
xchg
cli
xchg
pop
fldenv
es
mov
mov
jbe
gs
fwait
out
jp
dec
sbb
adc
adc
jae
xchg
outsl
lds
setg
fwait
sbb
cmp
stos
push
push
imul
pop
stc
pop
enter
mov
and
dec
pop
push
jge
add
ret
xchg
mov
enter
movsb
outsb
jns
lods
dec
inc
or
pop
pop
mov
cmp
cltd
scas
push
inc
cmp
cli
aaa
push
xchg
hlt
dec
and
jle
jb
and
fwait
add
xor
mov
dec
inc
sub
sub
jo
mov
inc
dec
mov
es
xchg
in
stc
cmp
mov
adc
and
into
jns
leave
and
test
or
sub
inc
rep
imul
ret
pop
inc
das
mov
jo
sarl
sbb
dec
and
mov
sahf
jns
iret
jb
or
aam
in
pop
lds
leave
adc
mov
jge
cld
movsb
fdivs
loop
fisttps
adc
inc
or
insl
sub
rorb
xchg
mov
adc
loop
fsubs
fninit
sbb
inc
fdivl
xchg
cmpl
xchg
xchg
icebp
and
outsl
movsl
scas
add
pop
jmp
shll
xor
jecxz
jno
sti
xchg
rclb
or
mov
sbb
cmp
or
leave
leave
or
das
inc
and
repz
shll
movsb
adcb
outsb
in
mov
add
mov
xchg
lcall
cwtl
cmp
test
mov
test
les
loop
jg
pop
cmp
mov
adc
cmp
outsl
test
loop
mov
ficomps
adcl
xor
cmp
add
inc
push
gs
cmp
repnz
insl
out
xchg
mov
xchg
leave
jge
push
outsb
in
jmp
pusha
sbb
mov
loop
scas
and
mov
into
and
jae
addr16
push
insb
in
and
fisttpl
pop
shlb
andps
mov
sub
inc
in
in
out
sub
mov
sub
push
cmpsl
lret
nop
pusha
int
ja
int
adc
out
mov
inc
and
cmpsb
sub
push
xchg
mov
testl
inc
xor
jg
or
xor
xor
sub
out
or
and
pop
mov
pop
push
push
cmpsl
jo
dec
out
aas
cmp
pop
xor
cmp
out
push
mov
testb
rcrb
out
stos
inc
call
sub
dec
out
pushf
cmp
cmp
mov
in
fwait
out
xlat
push
mov
dec
scas
jbe
repnz
sub
mov
mov
stos
aaa
fnstcw
in
scas
inc
addl
scas
or
in
loop
ret
rorl
fcoml
lods
int3
cmpl
int
and
leave
cmc
jecxz
mov
jne
scas
pop
xchg
shrl
enter
das
adc
mov
rorb
sub
xchg
push
push
lahf
xchg
xchg
fprem1
fistl
adc
rolb
shrl
inc
or
fst
add
mov
mov
xchg
fwait
push
arpl
in
mov
push
das
popa
inc
inc
roll
fisubrl
push
decl
jno
push
repnz
dec
imulb
mov
jg
lods
cs
mov
dec
jo
push
stos
ret
test
scas
push
fs
dec
mov
pop
or
pop
mov
xchg
jp
addr16
nop
out
in
mov
mov
xchg
scas
fisubrs
adc
push
call
int
daa
daa
cmp
inc
movsl
adc
out
sub
cmp
movsb
in
imul
data16
add
adc
push
and
push
repz
rclb
stc
popa
or
leave
jno
test
nop
in
jle
jecxz
inc
pop
fwait
cltd
ja
xchg
dec
adc
add
jb
sub
jnp
mov
inc
adc
pop
out
jne
push
inc
dec
push
sbb
les
and
push
std
sub
leave
ljmp
mov
dec
pop
loop
xchg
jmp
jne
fcomps
mov
pop
sbb
jae
hlt
inc
cmp
sbb
add
inc
outsb
jle
movb
pop
aam
mov
popf
mov
cld
mov
add
push
shrb
icebp
pop
jle
pop
sbb
xchg
or
mov
dec
movsl
jno
push
popw
std
mov
enter
or
loop
dec
or
or
xor
loope
adc
lahf
push
lock
or
int
out
mov
inc
xor
fnstcw
push
clc
push
cld
mov
lds
mov
in
adc
rorl
sti
lock
insb
jecxz
or
xor
xchg
lret
cltd
dec
mov
cltd
push
mov
mov
push
add
jb
add
mov
outsl
in
mov
and
scas
fs
push
not
dec
adcb
xchg
lcall
xlat
testb
inc
xor
sti
and
inc
xchg
or
lcall
mov
fistl
test
cmpl
idiv
push
gs
lret
call
jo
cmpsl
jnp
add
and
adc
mov
orb
xchg
mov
pop
jb
xor
sub
xor
add
add
xchg
sub
or
xchg
inc
mov
mov
pusha
inc
imul
enter
push
cmp
jmp
dec
push
cmp
sub
int
addr16
aam
lods
scas
fimuls
xchg
inc
aas
dec
movsl
hlt
ljmp
std
jno
cmp
mov
mov
xchg
xor
jmp
jne
push
in
xor
mov
jl
loope
dec
push
stc
pop
inc
ja
sbb
sahf
sub
pushf
pusha
mov
ret
xor
stc
ret
sbb
cwtl
push
in
push
in
mov
rorb
and
scas
mov
push
int3
repnz
sub
lds
imul
insb
jle
xchg
sar
pushf
in
mov
mov
cmp
inc
dec
icebp
clc
and
mov
es
dec
mov
pop
pop
test
dec
fadds
jne
leave
mov
sub
dec
sbb
mov
inc
mov
imul
test
cmp
jo
cld
jp
sub
lods
nop
jg
or
clc
das
call
adc
and
out
ret
mov
adc
sub
outsb
cmp
test
jmp
fldl
sbb
dec
aam
adc
xlat
stc
push
mov
je
adc
xor
js
mov
sbb
pop
xchg
fldenv
dec
repnz
in
orl
shr
or
pop
popf
nop
sub
mov
fdivrl
int
jno
cmp
adc
out
push
ja
add
bound
jle
push
sub
mov
pushf
pusha
out
xor
mov
cwtl
test
cs
cli
xchg
mov
dec
adc
mov
mov
out
data16
jo
lcall
mov
sub
sbb
pusha
imull
mov
fistpl
pop
dec
popa
lret
inc
pop
add
mov
stos
push
icebp
mov
int
aaa
dec
push
lahf
mov
jns
cmc
cmc
dec
add
std
lods
fdivrp
inc
ficomps
inc
xchg
push
adc
pop
out
mov
push
out
mov
xor
cmp
xor
inc
loope
or
xchg
sbb
or
loope
cmp
icebp
sub
mov
std
dec
or
int3
sub
lahf
clc
cmp
gs
bound
sub
repnz
dec
xchg
leave
fsubl
gs
and
mov
loope
adcb
xchg
scas
mov
mov
movsl
adc
push
add
das
mov
mov
popf
ret
sub
imul
lret
insb
scas
lods
test
pop
cmp
cmp
mov
sbb
hlt
mov
roll
inc
pop
xor
sub
and
ljmp
sub
cmp
pop
subl
movsl
mov
xchg
mov
adc
lahf
jp
lcall
sub
and
loop
adc
lret
idivl
xchg
mov
xchg
dec
jbe
iret
ret
stc
fistpl
dec
loop
add
sbb
and
push
ret
jg
adc
fs
enter
add
mov
lea
mov
xor
jno
adc
pop
es
jo
fisubl
enter
inc
dec
insl
add
sbb
cmpsb
inc
add
jno,pn
scas
sbb
mov
aad
inc
mov
jge
js
and
loope
insb
pop
xlat
out
out
jmp
cwtl
xor
push
mov
stos
and
jl
enter
mov
pop
cltd
dec
sbb
sbb
cmp
jbe
xchg
push
nop
and
and
mov
rol
sbb
in
push
push
sbb
hlt
cmp
hlt
sbb
add
sahf
push
dec
aad
or
popa
or
push
jge
or
pop
mov
jp
dec
mov
xchg
mov
loope
roll
xchg
loopne
ds
orb
inc
pusha
jge
adc
ljmp
es
cli
jle
loop
std
hlt
mov
sbb
jne
test
and
add
dec
sti
ja
jae
repz
mov
imul
mov
mov
js
push
fisttpll
js
outsl
int
stos
fcoml
add
std
mov
rcll
loopne
in
push
sbb
das
adc
jno
pop
scas
shl
jb
ftst
and
test
pop
out
dec
mov
or
aas
insl
mov
mov
sbb
inc
loop
inc
jbe
inc
sbb
adc
mulb
jne
mov
pop
lds
rcrl
xorb
inc
sub
xchg
cmp
pop
das
in
shl
cmove
and
push
xor
das
mov
stc
add
sub
jmp
fwait
cmpsb
pop
xchg
repz
stos
mov
xchg
jne
mov
daa
aad
dec
js
jae
xchg
push
add
ss
icebp
addr16
sbb
cld
dec
sub
push
xchg
repnz
sbb
es
sbb
cwtl
repnz
rorb
xor
or
lret
inc
jmp
jb
ret
icebp
addr16
xchg
loope
push
cmpsl
ret
ror
test
inc
mov
fnstsw
sbb
cmp
inc
enter
test
jmp
sbb
sbb
jno
pop
insl
mov
or
bound
cmpsb
lret
dec
mov
lret
jp
pusha
roll
mov
sbb
mov
mov
push
inc
adc
fwait
and
loope
and
repz
jecxz
or
xchg
rcr
cmp
in
mov
jae
xor
xor
mov
mov
cld
adc
insl
sub
push
push
scas
cmc
adc
inc
fimuls
adc
clc
add
nop
push
rolb
inc
iret
cmpsl
adc
jnp
and
bound
pop
fninit
or
sbb
dec
mov
or
ret
lea
je
xor
test
cltd
xchg
daa
add
adc
aam
sub
push
jns
pop
push
fnstsw
lods
push
pop
push
pop
pop
mov
pusha
jb
sbb
mov
ss
mov
cmp
fcompl
mov
lret
push
dec
out
test
fmuls
sub
cmp
jge
sub
int3
je
push
bound
mov
int3
mov
push
fimuls
and
shr
fsubrl
jg
stos
cli
cmp
dec
movsb
sahf
and
ret
push
add
cvtpi2ps
dec
movsb
mov
xor
xchg
and
jecxz
sbb
xchg
scas
sarl
mov
sub
lods
xchg
mov
insl
dec
jne
test
mov
movsl
mov
in
insl
dec
shr
cmpsb
jp
mov
fisubs
nop
dec
not
or
mov
sti
add
mov
inc
dec
stc
jne
icebp
adc
call
cwtl
fstpt
call
cmpsb
inc
test
sti
jnp
movsl
pop
test
in
gs
sti
imul
xlat
fnstenv
xchg
sub
lds
push
mov
cmc
jbe
fbstp
mov
mov
mov
loope
xor
pop
and
in
jmp
mov
adc
cmp
or
lret
mov
aam
data16
and
mov
out
addr16
aam
fistpl
clc
imul
popa
popa
mov
mov
dec
add
add
stos
push
hlt
adc
icebp
adc
jo
sbb
inc
loopne
movsl
mov
cmpsl
push
xchg
inc
stos
mov
fildl
dec
out
xchg
jae
imul
xchg
and
outsl
jno
cli
xor
loopne
add
into
imul
inc
push
jb
sub
sub
inc
out
jnp
das
xorb
dec
ds
jg
mov
das
fldl
call
pop
cwtl
pop
outsl
dec
jns
not
in
data16
hlt
inc
dec
push
test
int3
dec
adc
jl
mov
in
mov
je
popf
pop
or
jmp
test
les
sbb
sbb
sbb
mov
addr16
xchg
cmp
and
sarb
sbb
and
adc
notb
out
ja
fisttpl
cltd
lock
fwait
mov
lret
pusha
adc
sbb
and
inc
xor
stc
pop
pop
mov
inc
shlb
into
ss
je
clc
outsb
jl
dec
xchg
push
lret
fwait
sub
lcall
mov
sti
xor
iret
fucompp
out
andb
jle
lret
dec
xor
arpl
stos
lods
outsb
jns
and
je
jle
shr
sub
in
mov
insb
aam
jns
lds
cli
fdivl
aaa
int
sarb
fisubl
add
es
into
fdivrl
sahf
lods
cmp
fs
xchg
mov
cvtps2pi
test
fwait
jl
add
lret
sbb
xchg
mov
push
push
clc
sbb
and
push
cmp
dec
mov
insb
pop
cmp
dec
inc
push
add
test
sbb
call
sub
dec
aas
push
pop
xor
arpl
xchg
sbb
aam
push
scas
lret
outsl
sti
push
in
mov
shll
insb
bound
dec
or
jne
sti
js
div
mov
das
inc
test
pushf
shlb
cmp
and
xor
or
mov
test
inc
outsl
mov
xor
sbb
push
cltd
jb
mov
sub
and
xchg
sbb
xor
sub
imul
scas
xchg
mov
xor
push
lods
cmpsb
mov
rorb
lret
ja
es
aaa
bound
xor
cmp
pop
loopne
push
pop
or
pop
in
dec
mov
fdivl
cmp
call
lock
xchg
xchg
scas
mov
imul
push
loop
pop
xchg
pop
inc
aas
jp
push
fnstenv
enter
push
xor
scas
add
test
cmp
dec
aad
add
cmc
repz
or
es
xlat
push
incb
bound
cs
pop
pop
mov
xchg
lret
sub
mov
stos
pop
cmpsl
test
add
test
and
xchg
dec
jns
inc
cmpsb
dec
sub
xchg
push
push
pusha
dec
in
les
push
imul
scas
sub
aad
scas
xchg
mov
mov
xchg
divl
lret
xor
sub
je
pop
mov
xchg
jae
sbb
divl
insb
add
lret
push
xchg
aas
icebp
insb
xchg
jge
fisubl
pop
icebp
inc
lcall
xchg
mov
ljmp
fmull
scas
mov
fdivp
stc
jne
aas
push
sub
adc
xchg
mov
mov
ror
gs
xchg
out
add
daa
push
lods
sbb
xor
jp
xlat
xlat
mov
jo
lret
xchg
dec
mov
push
mov
xlat
push
lret
loope
mov
pop
jle
push
iret
mov
sub
push
inc
dec
lahf
jns
xchg
xor
mov
popl
repz
or
fidivrl
rclb
xor
addr16
ficoml
mov
mov
jl
and
pop
cli
out
dec
mov
add
mov
pusha
add
cld
inc
xchg
adc
and
mov
fildl
mov
fnstcw
inc
sub
out
les
jns
mov
out
xchg
pop
inc
dec
or
pop
and
cwtl
cltd
arpl
mov
pop
xchg
lods
adc
dec
pop
mov
lcall
out
and
mov
mov
ds
mov
shll
jle
das
mov
xor
mov
cld
andl
dec
add
pop
sahf
leave
mov
cmp
sub
adc
imul
and
jl
jne
clc
inc
out
mov
je
imul
out
sbb
and
dec
xor
dec
pusha
fadds
fiaddl
cmp
or
faddl
mov
mov
shrl
xlat
ja
leave
lods
repz
cld
xor
scas
lods
out
mov
pop
mov
inc
in
push
jmp
mov
scas
dec
fadd
sub
xor
push
fmull
sub
scas
loopne
sub
std
dec
mov
out
cmp
mov
cmp
jb
mov
ret
mov
add
bound
roll
jmp
ljmp
mov
sarb
aad
mov
sub
inc
and
add
pop
pop
sti
mov
out
lret
add
xor
repz
pop
jp
and
nop
jp
mov
pop
insb
xchg
rcll
jb
xchg
stc
je
inc
sub
iret
out
bound
inc
testl
and
sub
dec
jge
cld
jae
jle
loope
icebp
jno
inc
mov
sub
cmp
decl
cmpsb
arpl
push
pop
test
push
adc
sbb
jmp
sub
call
inc
push
and
imul
bound
stc
cld
addb
pop
push
pop
pop
pop
sbb
loopne
adc
jle
sub
adc
or
pop
jge
cmpsb
testl
fbld
and
mov
push
mov
fcoml
mov
push
test
add
loopne
aas
pusha
fnstenv
leave
push
xchg
sbb
dec
sbb
int
and
mov
std
test
add
xchg
pop
sub
cmpsb
sub
dec
lret
imul
dec
push
jae
adc
lds
clc
inc
pop
jbe
insl
inc
fbld
add
loopne
inc
mov
mov
add
fidivl
sbb
in
pop
out
jb
fiadds
add
les
test
xchg
leave
dec
mov
push
mov
stos
ja
shrb
popa
and
sbb
loope
mov
sub
and
mov
and
nop
inc
push
andb
mov
or
es
push
xor
sahf
mov
push
es
lret
int
push
xor
cmpsl
sbb
scas
or
cmc
sbb
sub
test
ficoml
push
mov
les
jmp
adc
stc
cli
mov
into
and
mov
add
xchg
xor
xor
xchg
aaa
test
lcall
test
pop
push
iret
xchg
add
addr16
cmc
leave
sahf
pop
cmc
sub
insl
or
movsl
cmp
movsl
add
sub
cmp
lock
out
adc
int3
test
shlb
jg
mov
daa
test
mov
imul
jae
push
stos
add
rclb
hlt
sbb
ret
push
or
rol
cltd
jnp
sub
mov
fstps
add
dec
shrb
pop
cmp
mov
outsl
lahf
push
sbb
adc
fcomps
jl
scas
pop
and
sti
fdivrs
jp
pop
xchg
out
mov
daa
aas
xchg
dec
pop
fsubrl
mov
sti
push
fsubl
decl
shlb
ret
stos
loope
push
jmp
inc
cltd
aaa
add
mov
andb
inc
cld
lds
out
push
imul
adc
test
pop
out
dec
sub
and
fadds
enter
xchg
cmpsb
mov
sti
lahf
popf
pop
mov
dec
mov
mov
stos
fstl
mov
fimuls
mov
dec
jbe
mov
mov
adcb
loop
xchg
jl
cmpsb
stc
pop
pusha
outsl
pop
aad
imul
in
subb
mov
mov
dec
sub
lret
neg
out
cmc
ds
mov
mull
push
ljmp
scas
and
out
in
mov
dec
sub
sub
mov
aaa
or
mov
push
mov
jecxz
jp
or
add
jb
sti
stos
mov
pop
mov
call
loop
inc
std
push
pop
imul
xchg
pop
mov
aam
cld
shll
lret
movsl
jnp
test
mov
insb
insl
and
dec
lcall
pop
cmp
push
mov
inc
popf
ret
dec
sub
mov
sbb
cld
adc
push
les
sub
sti
and
add
sbb
mov
push
hlt
movsb
push
mov
jecxz
pop
fs
aad
incb
sub
push
mov
pusha
dec
imul
lret
jne
xchg
xlat
jg
icebp
jae
xlat
xor
push
sbb
sbb
das
out
inc
imul
mov
adc
je
test
clc
xchg
les
jle
sarl
mov
loope
outsl
fwait
je
inc
sbbl
add
pop
mov
mov
outsl
rcl
sbb
loopne
sti
cmp
mov
lcall
push
xchg
fcoms
xchg
jne
adc
cmp
je
and
stos
iret
inc
dec
cmpsl
pop
imul
pushf
fisttpll
pop
sbb
pop
stc
les
jae
add
pop
ss
mov
mov
inc
and
std
mov
push
push
pop
add
daa
lahf
mov
sub
mov
sub
push
mov
cld
mov
inc
out
ret
sub
xchg
push
pop
adc
cmp
mov
cmpb
push
adc
inc
test
pop
in
adc
inc
idivl
cltd
enter
sbb
call
pop
lret
adcl
add
lahf
mov
fsubrp
scas
je
ss
xchg
cli
shrl
pop
outsb
xorb
imul
out
fnstenv
mov
sbb
lret
icebp
imull
repz
mov
lods
sbb
and
insl
mov
int
push
aam
mov
cmc
xorl
or
scas
fimuls
decl
int
push
mov
icebp
mov
faddl
mov
into
xor
mov
mov
nop
in
stc
int3
add
mov
and
jge
xor
adc
xor
addr16
pop
adc
lods
mov
and
jecxz
inc
and
popf
cwtl
outsl
xchg
sti
mov
repz
mov
jo
scas
or
les
xlat
hlt
sahf
sbb
mov
dec
std
enter
in
cmp
je
test
sbb
fnstenv
sub
bound
lods
imul
adc
mov
dec
sub
pop
jns
fiaddl
loop
lods
cmp
push
add
stos
rcr
roll
lret
int
push
cld
daa
xchg
push
aad
mov
sub
mov
jl
jp
addr16
inc
and
inc
mov
pop
loopne
jge
pop
jl
inc
inc
sub
pop
xchg
cld
push
push
inc
aas
jae
pop
dec
mov
push
and
call
mov
orl
push
fidivl
popa
pop
icebp
roll
sahf
mov
or
movsb
leave
mov
and
mov
and
pop
outsl
add
scas
push
pop
jle
incl
clc
shlb
sub
in
test
adc
outsl
aaa
sbb
pop
mov
loop
lds
push
stos
sub
push
push
sbb
inc
shrb
adc
lret
das
jmp
popf
sub
jecxz
xacquire
mov
scas
cmc
adc
aam
stc
lock
out
setns
test
cmp
pop
in
cs
pop
inc
mov
scas
add
test
sti
add
or
fisubl
arpl
fsubr
jne
push
jb
rorb
mov
push
adcb
or
cltd
scas
add
mov
inc
inc
aad
xchg
out
sbb
je
and
push
mov
cmpsb
repnz
push
lea
adc
fisubrs
lds
rcr
inc
cld
pop
dec
movsl
xchg
test
cltd
add
sbb
inc
mov
outsb
pop
leave
or
jmp
sub
jg
jo
stos
push
sub
mov
cmpsl
out
stos
mov
dec
or
jl
sbb
sub
aas
ljmp
test
xchg
int3
in
mov
out
lahf
inc
pop
jb
dec
add
popf
popf
ret
shl
out
and
dec
insb
icebp
jo
bnd
mov
lock
push
or
jg
or
aaa
xchg
fcomi
fsts
lcall
inc
rcrl
mov
std
push
das
mov
sbb
cmp
mov
aam
dec
add
xor
stc
xor
gs
xchg
and
jbe
push
push
filds
jnp
imul
dec
xchg
sbb
andl
xchg
xor
popf
jmp
push
sti
lock
iret
hlt
lods
and
sbb
jne
inc
and
jne
mov
inc
shl
xadd
xor
hlt
mov
push
fsts
call
aas
lods
rclb
fldt
lds
pop
sub
mov
jo
shl
pop
cmpsl
or
lods
cmp
xchg
sahf
xorb
lahf
idiv
jnp
or
push
push
jne
sti
nop
sbb
sub
push
jno
push
leave
jp
push
xchg
aam
sub
in
pusha
gs
jmp
stos
test
sbb
push
repnz
imul
movsb
adc
jg
jo
mov
out
fs
js
sbb
insb
add
jno
sbb
xchg
rclb
shrl
mov
movb
mov
cmpsl
stc
xchg
xor
jg
daa
pop
cmp
sbb
mov
test
cmpsl
imul
inc
fistl
jb
data16
add
out
mov
repnz
xchg
dec
ljmp
stos
push
pop
sarl
mov
movsb
arpl
mov
pop
insl
sbb
ds
fxch
fidivrl
add
cmp
leave
push
lods
pop
ja
jle
cmc
mov
jle
mov
dec
dec
pop
sub
or
xlat
xchg
out
test
and
cmp
xchg
test
rol
pop
mov
out
dec
cltd
adc
or
je
jp
cmc
lahf
loope
xchg
ljmp
xchg
insb
pop
add
cmp
imul
fiaddl
shlb
xchg
xor
pop
sar
subl
les
cmpsb
jae
in
push
pop
mov
mov
dec
sub
dec
inc
lds
sub
mov
push
sub
dec
shll
je
mov
setp
mov
sbb
push
mov
shll
sub
mov
cmc
test
and
clc
mov
cmp
cld
pop
cld
daa
push
push
push
jl
add
loopne
lret
sarb
insl
stos
fistps
mov
mov
xor
pop
mov
xor
mov
mov
mov
jns
mov
not
hlt
out
inc
xor
xor
pop
mov
and
sbb
sbb
aaa
cmp
xchg
pop
jmp
add
jb
jnp
std
test
push
popf
outsb
inc
clc
xchg
rol
mov
xor
sbb
jmp
mov
into
sbb
scas
or
or
lock
inc
push
mov
pop
clc
jns
insl
pop
and
lods
jnp
call
or
adcb
pushf
and
int
pop
cmp
mov
ss
mov
and
push
mov
cltd
push
cld
addr16
in
lret
scas
mov
mov
ds
xchg
add
inc
sbb
sub
int3
mov
aad
addr16
jno,pt
and
test
xchg
sub
inc
sub
in
sarl
jge
es
jns
icebp
jnp
sahf
mov
mov
inc
test
stc
dec
cmc
and
pushf
and
pop
jecxz
iret
or
fwait
enter
push
jmp
adc
inc
cmpb
ds
cmpsl
nop
jmp
sti
cltd
test
push
push
loope
sub
orb
jecxz
mov
push
sub
popf
xchg
jbe
add
mov
lds
sbb
add
jg
loope
sub
push
mov
lea
out
movsb
dec
in
outsb
xchg
push
stos
xchg
lahf
xchg
sti
cmp
inc
cmp
push
push
insb
jge
jmp
movsb
fcompl
mov
jnp
iret
dec
cmp
mov
dec
shlb
jg
push
and
sub
xor
add
fisubs
dec
mov
mov
mov
dec
inc
add
xchg
sbb
rcrb
xor
sub
sbb
xchg
ret
dec
pop
jnp
cmp
xlat
repnz
lcall
push
lret
rclb
lods
fidivrs
enter
push
inc
fsubs
sub
imul
and
and
inc
adc
sub
movsb
mov
adc
push
jo
xor
call
mov
sub
push
xchg
pop
pop
dec
pop
pop
pop
xchg
jns
or
out
cwtl
pop
in
fsubrp
mov
cmpsb
fstpt
dec
fsubrs
bound
out
ss
pop
push
es
stos
xchg
mov
mov
xchg
push
into
ret
call
das
xchg
mov
and
outsl
lahf
jns
insl
xchg
inc
mov
orl
mulb
cmpsl
push
mul
mov
leave
shrb
mov
out
mov
xchg
cmp
fidivs
jle
mov
mov
add
lret
xchg
aam
lea
repz
or
fldt
pusha
xor
aad
and
sbb
inc
push
decl
loope
aam
imull
xorl
mov
xor
or
cmp
es
loop
gs
out
sbb
xchg
pop
jnp
lea
fistpll
sub
and
sti
outsl
xchg
in
cmp
enter
out
adc
sarl
adc
add
mov
mov
lods
shlb
and
cmpsb
in
jae
lods
mov
mov
stos
mov
es
dec
xorl
mov
dec
stc
fistpl
sbb
ss
je
inc
mov
mov
pop
xchg
mov
mov
mov
rorl
jecxz
or
push
xchg
scas
push
mov
jmp
sahf
dec
fistps
jbe
rorb
mov
test
cwtl
fwait
sbb
push
pop
dec
cmp
or
jae
je
sub
stc
inc
fldt
mov
aad
pop
roll
imul
es
aad
ja
xchg
pop
push
pushf
push
fdivs
in
pop
jge
pop
cmp
pop
mov
fwait
adc
out
xlat
fsubl
sub
loope
mov
cmc
imull
rclb
or
test
int3
and
hlt
mov
push
xchg
daa
xchg
mov
ljmp
sub
stos
dec
not
pop
jge
inc
jecxz
test
outsb
movsl
hlt
lods
out
mull
mov
aas
jg
lret
xchg
sub
mov
mov
cmp
test
insb
inc
arpl
inc
sub
shlb
mov
std
fadds
sub
jo
std
mov
aad
mov
pop
hlt
in
push
or
into
mov
or
sbbl
imul
out
bound
inc
xchg
add
mov
add
dec
push
aaa
shll
pop
and
mov
adc
repnz
loopne
jnp
mov
mov
cmp
rorl
into
addr16
inc
ja
cmp
ss
insl
dec
fwait
int
cmp
xchg
and
push
mov
jecxz
sbb
add
mov
ljmp
dec
movsb
in
shrl
push
mov
inc
mov
lds
jb
rolb
stos
pop
or
add
push
imul
jecxz
inc
sahf
cld
mov
mov
inc
loopne
out
mov
adc
push
inc
jae
int3
jge
fistpll
mov
hlt
ds
mov
shlb
adc
sbb
test
imull
mov
int
and
cmp
pushl
loop
fidivl
lea
sbb
push
dec
sbb
or
aam
or
pop
mov
std
in
xor
pop
xor
add
shl
and
or
inc
jle
dec
adc
insb
sbbb
push
out
fcmovnb
ret
int3
lret
cmp
pop
sub
in
fidivs
ds
sub
xchg
inc
iret
outsb
sub
jge
int
mov
popa
lret
arpl
test
loop
mov
lcall
scas
cmp
fsubrp
inc
sbb
mov
dec
xor
outsb
outsl
sbb
es
inc
and
in
je
ss
sbb
mov
push
push
dec
push
jbe
push
inc
fwait
popa
out
jb
pushf
cld
call
test
test
lods
cmp
fisttpll
fbstp
pusha
mov
dec
jge
sub
mov
mov
inc
cwtl
arpl
cmp
xchg
cmc
gs
dec
sbb
in
es
out
ficoml
aad
loopne
mov
cwtl
in
out
shl
pop
lahf
enter
rclb
or
sub
stos
pop
inc
jns
xlat
lds
dec
fdivrs
xchg
push
popa
les
push
jg
push
inc
or
mov
mov
sbb
idivl
or
xchg
mov
xor
jae
movsl
xor
pop
shll
lods
leave
cltd
mov
push
pop
inc
cmp
push
das
jg
mov
jne
shl
xchg
xchg
inc
inc
mov
pop
mov
dec
dec
icebp
mov
mov
in
arpl
test
pop
inc
xchg
xor
aaa
jns
push
sbb
mov
repz
js
sti
icebp
aad
sbb
jb
pushf
xor
dec
aam
loopne
xor
or
movsl
jp
imul
stc
push
adc
or
std
rorl
iret
lahf
and
push
adc
mov
and
jb
inc
mov
movsb
test
nop
adc
jbe
adcb
fimull
sub
jne
fcomi
push
lods
dec
scas
sub
mov
push
popa
inc
jecxz
dec
and
fstps
xlat
test
imul
out
mov
push
lock
icebp
push
test
sbb
mov
sub
inc
imul
cwtl
cmp
lods
pop
jge
outsb
lock
or
pop
rcrb
mull
lret
mov
mov
es
mov
negl
mov
mov
cwtl
xor
mov
ja
fadd
add
loopne
jg
push
pusha
cld
insl
push
jmp
push
cli
xor
mov
or
orb
push
aam
pop
test
pop
mov
movsl
shr
xor
out
mov
or
jmp
push
idivb
pop
popf
ret
bound
cwtl
bound
incl
jecxz
stc
testb
addr16
movsb
cmp
ret
mov
jmp
jg
push
mov
fdivs
ficoml
mov
lret
or
dec
xchg
mov
pop
jge
in
sbb
outsb
pop
jecxz
repnz
push
xchg
inc
pop
test
cld
movl
cs
out
lcall
jge
into
pop
jle
push
jo
jp
std
ds
pop
sahf
rolb
pop
xchg
or
aam
enter
and
popf
sub
jge
push
sub
pop
sti
sub
in
and
pop
test
idivb
sbb
add
add
mov
jge
test
div
push
push
sbb
dec
jmp
jmp
jns
mov
adc
inc
jmp
data16
mov
xchg
cmp
lods
mov
push
and
xor
mov
jns
jno
dec
ret
aam
xchg
scas
jne
cmpsl
push
push
mov
or
pop
sbb
mov
or
outsb
cld
jae
jmp
jp
mov
mov
in
rorb
test
out
mov
push
inc
mov
std
out
cmp
push
pop
xor
cmp
and
sahf
sbb
lds
xchg
cmp
rolb
je
cmp
bound
insb
aam
mov
xlat
cld
idivb
mov
std
sub
xorb
pushl
or
inc
xor
fcomps
and
imul
movsb
xor
fistl
fdivrs
jg
inc
xchg
shll
adc
test
push
adc
lds
xchg
pop
adc
in
fisttps
sub
add
icebp
dec
mov
sub
mov
jne
in
dec
inc
out
fbld
mov
add
inc
ja
sub
mov
pop
pusha
pop
push
cmc
stos
sti
inc
and
aam
mov
push
ss
fcmovnb
pop
lods
sub
inc
lds
scas
pop
adc
dec
adc
in
in
push
adc
loope
add
fsubl
fucomi
int
pop
rcrl
popf
mov
xchg
add
sbb
lods
pop
jg
jae
inc
rorb
cwtl
dec
pop
dec
pop
adc
or
push
dec
inc
test
sahf
cltd
subb
sbb
lds
adc
xchg
mov
add
sti
xor
popf
inc
xchg
sarl
in
lods
stos
je
add
jmp
mov
in
pop
sbb
xchg
and
stc
inc
das
in
aas
hlt
push
adc
xchg
lds
dec
pop
fldl
push
push
jne
pop
add
and
xchg
cmp
stc
push
adc
insl
loope
stos
das
push
and
andl
xchg
loop
mov
cmpsb
mov
imul
push
and
stc
pop
and
xor
lods
test
in
cmp
sub
enter
sub
adcb
js
push
mov
pop
jae
mov
lds
xchg
fld
sbb
hlt
xor
jae
lds
in
lods
jne
cmp
mov
in
outsl
and
addl
pop
push
sti
pusha
in
ret
cli
or
and
push
sbb
xorb
sub
push
outsl
int
push
sahf
cwtl
popa
pop
out
pushf
imul
pushf
or
aas
loop
sahf
mov
push
dec
and
jbe
add
testl
push
mov
lods
fistpll
xor
loope
shrl
testl
jecxz
mov
das
inc
cld
scas
pop
jnp
add
pop
mov
xchg
repz
mov
dec
adc
push
repz
jg
mov
push
push
mov
sbb
test
or
adc
mov
pop
push
addr16
mov
adc
aam
cmc
push
js
or
lods
pushf
and
adc
xchg
es
out
scas
jp
mov
fcmovnbe
inc
mov
jg
inc
ret
lret
sbb
sahf
ret
or
fisubl
cmp
mov
and
js
push
xor
mov
rcll
cmpsb
cmp
jg
inc
cli
mov
jecxz
in
repnz
dec
push
cli
push
mov
insb
pop
jl
enter
in
push
sahf
add
pop
test
hlt
pop
sub
lods
adc
insl
and
das
and
loope
dec
jb
sahf
inc
stos
fsubrl
add
fisubl
repnz
lods
fcmovbe
add
in
enter
fiadds
mov
iretw
test
std
jp
outsb
fcmovb
inc
or
outsl
pop
fnsave
lods
xor
fnstsw
push
jnp
jbe
xchg
push
jge
pop
inc
jb
stc
pop
sti
mov
pop
mov
cmp
mov
sarb
gs
roll
insl
cmp
push
in
rcrb
and
and
clc
inc
daa
scas
mov
sahf
adc
push
add
add
cmp
push
test
repnz
sub
clc
arpl
xor
fildl
and
pop
jne
xchg
add
dec
testb
xor
dec
fsubrs
repnz
push
adc
iret
adc
loope
repnz
sbb
mov
pop
mov
mov
sbb
push
outsl
jge
adcl
vpshlw
ficompl
test
inc
fnsave
cmc
test
add
inc
in
shrl
inc
test
and
jne
xchg
rol
inc
push
outsb
add
jmp
pop
jl
dec
pop
mov
mov
inc
sub
push
dec
cmp
xlat
insb
int
and
imul
pop
movsl
sbb
pop
add
xchg
xchg
scas
inc
cwtl
daa
dec
ljmp
test
pop
push
pop
aas
or
cs
mov
cmp
or
aaa
inc
fcomi
pop
fdiv
insl
xor
push
jle
inc
xchg
jns
mov
or
cltd
xor
bound
inc
push
jp
add
loopne
inc
mov
enter
inc
mov
xchg
in
jo
mov
fstpl
mov
pop
lock
pop
je
cwtl
xchg
jmp
inc
dec
push
and
mov
push
push
movsb
jo
popa
jge
pusha
imul
and
and
jmp
pop
jecxz
rclb
sti
sub
or
ja
mov
adc
mov
add
dec
add
and
sbb
xor
dec
shl
pop
test
jo
mov
aaa
stos
ret
mov
lods
sub
and
dec
inc
dec
mov
insl
ret
pushf
mov
test
fmull
sbb
mov
jbe
adc
mov
clc
in
cmp
sti
rcrb
arpl
unpcklps
shlb
or
iret
fistpl
sbb
jb
add
mov
push
push
in
test
push
mov
xchg
icebp
movsb
shll
std
repz
xor
call
push
mov
das
xor
imulb
daa
rcr
sub
mov
lods
dec
je
or
mov
in
add
xchg
push
call
xor
mov
xor
or
xor
dec
rorl
negb
scas
movsb
adc
cmpsl
divb
fimuls
cmpsb
and
cmp
aad
arpl
mov
out
rclb
mov
inc
sarl
push
fnstenv
mov
sti
mov
ret
pop
dec
iret
dec
movsb
pop
sbb
data16
adc
or
loopne
jno
dec
mov
andl
shl
add
jmp
xchg
popf
adc
mov
cmp
outsl
xchg
lods
push
cli
add
mov
lcall
xchg
fwait
xchg
decl
inc
scas
jno
mov
mov
dec
xor
sbb
sbb
add
rolb
out
sbb
stc
mov
ja
pop
pop
push
jne
sahf
stos
adc
cmpsb
movsl
mov
dec
addr16
inc
push
dec
in
jbe
lahf
adc
push
sbb
xchg
pop
ss
push
aas
lods
xchg
jle
cmp
lds
mov
lds
add
ret
xor
arpl
sub
cli
inc
xlat
adc
mov
sub
dec
idiv
jo
pop
and
loope
xor
ret
jo
ljmp
push
push
clc
sbb
testl
sbb
dec
xor
ja
jno
xchg
xchg
aam
aaa
mov
icebp
sub
inc
push
mov
das
ljmp
pop
hlt
or
jns
bound
daa
addl
add
and
mov
dec
sahf
cmp
and
add
sarb
mov
popf
xchg
jo
sbb
or
aam
js
sub
sub
jbe
mov
jbe
mov
imul
imul
push
mov
jecxz
loopne
jle
add
aad
xchg
mov
jns
adc
or
leave
push
in
lret
test
lds
cmp
lods
jle
dec
into
mov
mov
inc
in
cmpsl
cmp
test
testl
popf
pop
mov
push
cmp
rcll
sti
pop
cwtl
push
xchg
sbb
adc
movsb
mov
push
add
inc
imul
push
sub
and
xor
jns
lods
add
in
push
outsl
insb
mov
cwtl
mov
out
jns
dec
xchg
insl
push
or
ds
dec
dec
jae
rcrb
pop
dec
and
push
mov
or
cmp
and
pusha
dec
nop
frstor
lea
and
outsb
paddusw
inc
pop
or
in
lods
adc
sahf
int
mov
sbb
imul
push
add
out
xor
jmp
add
jl,pt
cld
and
jge
jno
int
mov
sbb
xor
inc
jne
adc
mov
enter
push
push
jmp
mov
imul
ss
jp
xor
jae
mov
daa
pop
imul
xchg
outsb
lret
adc
out
movsl
rcr
mov
jp
leave
mov
xor
pop
ja
test
clc
nop
in
imul
sub
dec
test
sbb
iret
wbinvd
or
stos
sbb
nop
push
mov
cmp
jae
inc
xchg
addl
mov
pushl
mov
cmc
jle
dec
or
cmc
dec
cmp
or
aaa
rorb
cmp
or
xchg
rclb
xchg
jo
in
add
cmp
xchg
mov
icebp
dec
mov
or
mov
sub
pushf
int
and
imul
mov
sbb
mov
jbe
or
mov
subb
jg
lds
pop
mov
cmp
add
lahf
lock
lret
clc
mov
pop
imul
in
lea
divb
pusha
repz
movsl
jmp
dec
rorl
movsl
cwtl
cltd
dec
enter
shrb
outsb
adc
sub
mov
xchg
arpl
in
dec
sbb
imul
lret
and
and
loope
push
push
jge
sahf
xor
adc
sarl
les
repnz
shll
ljmp
subl
dec
scas
jno
xchg
inc
cltd
mov
rclb
or
xchg
inc
clts
sarb
in
jb
push
mov
add
push
inc
test
dec
xchg
loop
insb
sub
mov
idivl
or
out
push
in
inc
push
test
and
inc
or
lret
lret
gs
in
mov
pop
sub
inc
jmp
divb
sbb
xor
cmp
aam
icebp
add
ds
sbb
adcl
xchg
outsb
aaa
outsb
fwait
ret
js
pop
dec
inc
in
pop
in
mov
mov
xchg
clc
or
inc
cmp
dec
cltd
int3
add
mov
jl
insb
sahf
in
mov
shl
jmp
jmp
mov
add
rcrl
and
movsl
pop
sbb
fcomps
in
addr16
add
out
aam
dec
in
into
mov
jnp
clc
jb
ja
and
inc
enter
and
sub
fldt
stos
xchg
mov
les
pop
inc
cmp
idivl
aas
mov
sbb
mov
pop
popf
cs
mov
push
dec
aad
sbb
icebp
cmp
inc
repz
jb
scas
inc
add
xor
insl
sub
test
push
lods
mulb
pop
push
pusha
adc
push
push
jmp
mov
outsb
push
cmp
xchg
cmpl
scas
push
outsb
jl
and
popf
sub
call
aaa
jbe
push
dec
movsl
sbb
nop
push
imul
mov
mov
mov
pushf
testb
das
mov
cwtl
test
xlat
je
jb
nop
fiadds
push
jnp
outsb
mov
les
in
enter
cmp
jno
sub
loope
loopne
push
add
dec
iret
aaa
cmp
xor
loop
mov
pandn
jecxz
xor
jle
push
jmp
daa
sbb
inc
stos
mov
std
mov
insl
sbb
mov
xchg
adc
mov
mov
andl
sti
inc
sbb
pop
inc
enter
cmpsb
or
stc
call
push
xorl
and
pop
mov
push
sbb
fmuls
or
popa
jge
rcll
aas
push
mov
popa
cmp
iret
ljmp
mov
lds
ja
sti
and
in
clc
xchg
sub
repnz
js
xchg
mov
or
sti
sub
fldcw
mov
or
fnstenv
xor
movsb
push
cltd
leave
jnp
jnp
out
xchg
test
adc
std
dec
xchg
rclb
aam
or
loop
imul
mov
jmp
mov
push
lret
xchg
sbb
nop
sbbb
mov
add
jmp
cmp
or
mov
sub
push
daa
dec
repz
cmpb
push
outsb
inc
jbe
xor
inc
loope
cld
cmpsb
add
add
mov
rcrl
push
jbe
mov
mov
inc
push
jge
loopne
dec
nop
andb
push
js
leave
test
xlat
push
inc
mov
mov
xchg
jmp
lea
daa
sarl
push
pusha
jnp
fnsave
jmp
mov
or
or
push
out
outsb
imul
cmc
push
imul
ficompl
clc
pop
rorb
js
cli
sbb
int
jns
sbb
dec
dec
aam
hlt
dec
sub
test
test
in
addr16
inc
inc
imul
dec
je
mov
gs
imul
and
adc
mov
xor
in
xor
add
lahf
das
push
pop
mov
testb
mov
mov
or
incb
push
dec
xchg
pop
dec
fimuls
arpl
push
les
fcoms
cwtl
mov
arpl
or
inc
pop
xor
or
loope
pop
jecxz
ffree
push
inc
out
xchg
lret
sbb
push
imul
dec
js
stos
call
add
xchg
pop
ds
pop
faddp
dec
mov
or
test
and
scas
push
or
ret
mov
int
cs
and
sub
pop
and
xchg
sarl
in
jecxz
xchg
fdivs
repz
mov
outsl
push
loope
nop
ljmp
je
es
insl
cli
arpl
xchg
inc
inc
jecxz
aad
inc
cmp
dec
insl
sub
out
push
jg
lcall
adc
cmp
push
stos
sbb
into
cltd
push
inc
loopne
pop
jge
cli
jle
lret
or
mov
mov
out
sbb
shrb
sub
sub
xor
adc
dec
and
test
data16
inc
mov
push
call
je
pop
add
or
popf
mov
jbe
loop
add
jg
xor
stos
fmulp
push
xchg
xor
insl
in
outsl
cmp
add
and
mov
dec
sub
shrb
dec
cld
pop
xor
pop
xchg
es
pop
roll
decb
repz
dec
push
adc
and
xor
ss
ds
leave
sub
in
ja
or
push
int3
fcomi
xchg
jl
popf
std
lods
mov
add
and
jbe
mov
jb
dec
inc
add
pop
sahf
lret
mov
sub
push
push
bound
lods
adc
xor
and
imul
push
aam
xchg
fmuls
jl
xchg
jg
adc
jle
movsb
xor
ret
xor
insb
scas
sbb
sbb
jp
inc
aas
out
cmp
and
jnp
push
mov
shrb
lahf
cltd
sbb
mov
fmuls
stc
fstps
fstpt
hlt
xchg
jae
dec
jge
inc
in
sbb
xchg
loopne
mov
lods
int3
mov
jnp
in
fildll
popf
popf
pusha
out
xchg
sbb
aam
test
ja
or
sub
ds
inc
jb
out
mov
lret
aaa
xor
in
and
cwtl
out
jle
push
insb
mov
sarl
rorl
xchg
orb
and
pop
xor
push
inc
cmp
or
test
popa
sbb
push
outsl
xchg
sub
inc
push
lahf
test
jns
shrb
out
inc
cmpsl
pop
xorb
jmp
std
push
hlt
imul
push
aam
int
mov
cli
dec
jbe
push
loopne
inc
cwtl
lcall
sub
movsb
mov
push
outsb
xchg
scas
clc
ss
and
xor
xchg
stc
cld
xchg
fdivs
pop
push
push
jp
jne
cwtl
cmp
jmp
and
mov
les
mov
psubq
xor
stos
sub
mov
sbb
jne
xor
xor
nop
add
push
inc
xchg
adc
mov
or
inc
adc
ja
mov
fdivp
xchg
mov
lret
mov
xchg
jg
pop
mov
inc
mov
cmc
xchg
andl
imulb
ret
adcb
mov
lahf
add
push
loopne
jmp
sbb
add
sub
push
or
aaa
inc
test
jle
jp
test
cs
xor
mov
ss
mov
cmpsb
adc
pop
in
push
out
xchg
xorl
loop
mov
mov
ss
lea
fsubl
call
push
pop
cmp
cli
push
mov
popf
mov
cmp
dec
dec
inc
pushf
and
pop
int3
data16
push
cmpsb
xchg
fisubrs
sbb
cwtl
fldcw
ljmp
pop
adc
xchg
mov
test
in
xchg
popa
mov
iret
div
lret
mov
push
jbe
jns
push
xor
outsb
aam
es
mov
shlb
push
iret
dec
mov
lret
pop
ret
mov
lahf
enter
clc
or
adc
jge
adc
int3
in
or
and
fsubs
mov
inc
ret
pop
inc
jl
push
out
int
mov
je
cmp
adc
cmp
inc
mov
jecxz
mov
fldt
xor
sbb
pop
outsb
je
and
add
into
enter
insl
outsl
push
cmp
push
sti
xchg
xchg
dec
jbe
int
mov
gs
je
adc
cmpl
mov
or
movsb
mov
popl
mov
xor
mov
pop
xor
aaa
dec
bound
out
cs
ja
gs
hlt
jl
fs
mov
mov
pusha
mov
cmp
dec
nop
jge
outsl
push
js,pt
xchg
or
in
push
jg
ja
ja
ds
mov
xchg
lock
and
xor
xchg
mov
testb
pop
mov
or
jmp
les
lret
add
js
lcall
outsb
sub
sbb
int3
enter
inc
insl
lea
xor
jge
jge
cmc
in
push
out
mov
lods
inc
mov
adc
xor
mov
hlt
lock
jo
dec
xorl
mov
popf
or
roll
iret
mov
rcrb
sbb
in
mov
daa
aam
mov
scas
jge
daa
test
loop
repz
sub
jecxz
int
fsubrs
adc
pop
mov
shl
loopne
cmpb
ljmp
mov
std
sbb
or
cli
jo
stos
cli
sbb
jb
icebp
push
out
test
inc
jnp
push
ret
shl
in
xchg
insb
jle
mov
push
sub
bound
scas
pusha
xor
test
jb,pt
mov
jne
rcrb
arpl
mov
push
push
aad
es
negl
xor
out
lock
ja
xor
add
popl
jne
xchg
mov
lods
push
sbb
das
addr16
cmpsb
cmp
cli
pop
dec
ja
or
in
push
mov
lods
add
xchg
jae
mov
in
pop
mov
or
dec
xchg
xorb
pop
mov
and
aad
pop
cmpsb
je
add
xchg
xchg
or
mov
jmp
repz
or
scas
pop
push
dec
movsb
popa
push
push
adc
jo
repnz
inc
ja
ffree
xlat
xchg
push
faddl
stos
or
sub
jno
push
mov
scas
ja
pop
adc
xlat
into
or
mov
and
mov
fisubrl
cmp
arpl
popf
test
rolb
loop
jle
pop
push
inc
jno
lcall
popa
push
xor
push
adc
mov
push
cmp
jnp
je
mov
repz
iret
loopne
lcall
pop
movsb
notb
test
data16
mov
xchg
jns
push
xor
fstpl
clc
mov
mov
lahf
mov
ret
dec
cs
xchg
mov
in
mov
daa
and
xchg
inc
xchg
cmp
movl
out
sbb
xchg
xor
mov
sub
cmp
xor
aam
icebp
mov
sti
imul
adc
cmp
ficompl
arpl
adc
loop
subl
clc
scas
jmp
sub
popf
out
fs
rorb
std
scas
push
pushl
add
push
out
pop
jle
mov
or
xor
mov
movl
call
fs
jnp
clc
test
in
out
push
int3
pop
movsb
cmp
inc
rorl
aas
mov
jle
inc
movsb
and
aam
pop
lods
xor
into
sub
test
adc
lds
cmc
xlat
pop
xchg
jp
les
sub
xchg
ret
loope
push
sbb
mov
mov
das
jb
lds
lea
cmp
adc
mov
sbb
xor
test
adc
repz
ss
mov
pop
mov
rcl
push
dec
dec
mov
inc
cmp
ljmp
fdivrs
mov
sub
mov
xor
mov
xchg
pushf
fdivl
aad
in
dec
mov
iret
jmp
into
andb
or
jae
inc
test
mov
and
mull
lea
je
out
and
jae
sti
arpl
sub
mov
out
or
push
dec
jne
jmp
fs
rcrl
lods
mov
pop
popa
mov
and
arpl
sbb
mov
fsubr
fldln2
jno
out
fs
scas
and
dec
sub
jl
out
fdivl
fnstsw
inc
out
dec
movsl
xor
pop
hlt
movb
and
sub
lods
test
mov
cld
out
add
cmp
push
shrb
daa
das
enter
xchg
testb
das
fcomps
or
mov
aad
shrl
sub
push
jnp
out
movsb
ja
adc
or
movsl
fiadds
mov
and
push
push
sub
push
push
out
lret
push
xchg
sahf
mov
iret
scas
lods
xchg
push
int
fdivl
das
popa
push
sbb
stos
mov
dec
xchg
int3
adc
xlat
dec
push
sbbl
pop
pop
inc
xor
dec
lret
xlat
stos
lock
nop
dec
inc
shl
das
xor
jno
rorl
inc
insl
lahf
pushf
and
imulb
daa
leave
or
insb
rcll
addr16
push
xor
test
adc
push
test
gs
movsb
sbb
mov
dec
jne
sbb
mov
mov
pop
pop
add
jne
inc
aaa
out
xor
push
test
xchg
inc
jle
lahf
cmp
into
mov
xchg
imul
mov
in
in
mov
push
bts
mov
pusha
adc
loop
in
fwait
cmc
jae
jecxz
rcll
cmpsb
aam
in
cmpsb
xor
std
scas
fs
or
movsb
xor
dec
into
out
into
lahf
xorb
cmp
clc
cmc
pushf
and
adc
jmp
pop
xor
and
fs
pop
jecxz
jecxz
ret
repnz
sub
adc
sahf
into
popl
sub
or
sub
pop
push
sbb
bound
xchg
pop
les
xchg
loopne
jnp
sub
or
inc
add
popl
xor
testb
ret
les
pop
fcomip
imul
push
mov
add
std
fsubrp
xlat
xchg
stos
cmp
mov
popa
push
fwait
jno
sbbb
xabort
jno
push
mov
jmp
ljmp
sbb
cmp
fs
cs
push
fstps
cmc
mov
subl
pop
frstor
cmpl
popf
inc
popf
dec
lods
push
mov
push
enter
in
xor
mov
idivl
rcrl
inc
or
inc
repnz
push
jnp
decb
ret
mov
xlat
jo
mov
aad
mov
aaa
in
push
push
test
aam
lds
jl
cmpsb
neg
pop
inc
test
lods
js
mov
in
sti
jae
lret
std
push
mov
push
loope
push
jnp
mov
and
ss
add
jbe
into
adc
sbb
cmp
hlt
jge
aaa
leave
in
jo
out
cmp
or
jno
jo
in
dec
orl
movsw
mov
sub
dec
mov
add
scas
cld
or
and
add
cmpl
pop
out
cmc
lods
mov
xchg
dec
dec
aaa
clc
repnz
add
push
inc
push
cmp
push
leavew
ljmp
mov
out
inc
add
xchg
inc
ret
loop
jo
and
iret
je
pop
ficoms
ds
ljmp
mov
mov
cwtl
push
jno
add
cmpsb
cmp
ret
jge
sbb
xchg
cmpsl
xchg
movsl
xor
test
add
pop
inc
sub
pushf
jl
mov
jnp
fsubl
xor
jl
sti
xchg
mov
movsl
sti
dec
xchg
mov
add
loopne
aaa
inc
rol
gs
dec
imul
fcmovnu
add
xchg
push
movsl
pusha
in
dec
cmp
movsl
pop
xchg
pop
ret
pop
jbe
mov
arpl
pop
xor
fildl
mov
psrld
sub
rep
lods
icebp
sahf
and
push
in
popf
aam
call
xorb
adc
movsb
fisttpll
mov
cmpl
fsubs
mov
in
enter
fsubl
out
cltd
ds
xchg
xor
in
gs
fldl
pusha
pop
enter
push
subl
mov
rcrl
cmp
stos
in
movsl
repnz
or
adc
pushl
mov
jae
loopne
or
les
dec
sbb
aaa
insl
mov
nop
into
notb
push
mov
outsl
rcrb
cmp
lea
jae
sbbb
ljmp
aas
add
push
rorl
adc
push
dec
stos
out
jmp
flds
push
lea
popf
xchg
orl
xchg
mull
mov
sub
xor
jo
cmp
pop
bound
fdiv
mov
adc
pop
xlat
test
scas
test
cmp
dec
pop
outsl
or
jg
ljmp
sub
mov
arpl
hlt
mov
xchg
jg
add
daa
in
jo
mov
mov
test
pop
loop
sbb
jg
sbb
in
adc
mov
or
inc
jo
fidivs
hlt
dec
cmp
adc
cmp
sti
aas
xor
incb
push
pusha
ljmp
inc
enter
ret
out
scas
aam
jbe
mov
push
mov
aas
fstp
cld
int
mov
in
xchg
cmc
inc
push
bound
cmp
inc
decb
shl
movsl
jae
xor
nop
mov
imul
inc
jno
jae,pt
cmc
adc
mov
out
int3
adc
sub
and
cli
xor
push
sub
repz
jb
cli
xchg
and
in
insb
and
in
fadds
add
cmp
dec
mov
push
xor
push
nop
xchg
repnz
adc
ret
jnp
iret
cvtdq2ps
fisubs
popa
adc
xchg
adc
adc
xlat
test
ret
daa
cmp
and
push
test
and
lods
xchg
xor
je
inc
sub
add
and
inc
jg
jg
test
aam
mov
or
pusha
add
inc
pop
fdivp
xor
jns
loope
hlt
push
int3
idivb
repnz
shrb
adc
movsl
cmpsb
xor
jecxz
test
sar
insb
pop
not
push
sarl
inc
leave
addl
jbe
repnz
push
les
add
sahf
cli
out
pop
mov
push
ret
daa
nop
push
pop
cli
jne
loop
insb
stos
hlt
arpl
mov
jae
nop
cmc
shlb
insl
dec
jo
lret
aaa
arpl
cmc
pop
pusha
inc
mov
ret
push
test
and
mov
pushf
inc
inc
and
in
sbb
rcl
mov
push
push
mov
test
out
scas
je
je
pop
gs
push
jge
add
and
loope
xchg
orb
and
mov
add
scas
cmp
movsl
pop
hlt
outsl
xchg
adc
sub
and
inc
cmpsl
mov
pop
repz
mov
cmpsl
out
jg
adc
push
or
stos
out
dec
mov
xor
js
sahf
fwait
mov
dec
mov
mov
xchg
xor
jb
ljmp
xchg
in
enter
sub
out
pop
sub
ret
data16
lret
jo
insl
sub
and
leave
cmpsl
adc
xchg
cld
sbb
xor
xlat
stos
nop
sbb
pop
or
jno
rcrl
xchg
jl
iret
push
popf
outsl
cvtps2pd
sub
int3
add
mov
sbb
mov
jg
pop
pushl
ret
xchg
push
mov
xchg
ret
aas
push
insl
dec
fwait
cmp
pop
mov
mov
iret
bnd
decb
ficoms
fidivs
cwtl
and
cli
xor
inc
gs
jmp
push
mov
and
xchg
shrl
add
in
xor
or
lock
mov
shlb
dec
test
push
cs
gs
push
stos
fwait
push
dec
pusha
imul
or
cmpb
test
leave
cmpsb
pop
xorb
jmp
mov
push
iret
pop
mov
and
cli
dec
sbb
add
push
add
xchg
xor
cld
fdiv
add
stos
xor
dec
xor
mov
jns
mov
ja
hlt
mov
ljmp
or
test
jecxz
in
inc
les
xchg
icebp
out
rorl
xor
mov
mov
scas
push
int
adc
sahf
das
pop
and
js
mov
dec
lock
fnstsw
stos
scas
ret
xor
js
mov
sahf
xchg
pop
jmp
lods
push
cmp
sbb
adc
data16
aam
and
cmpsb
mov
inc
adc
xchg
ljmp
jg
in
jmp
movb
mov
stc
mov
add
popf
outsb
lea
push
rcrl
mov
push
pop
sbb
ljmp
fists
xlat
repnz
ret
movb
add
adc
jmp
push
mov
test
outsb
add
movsb
pop
mov
movsb
mov
cmpsl
adc
pop
sbb
push
enter
push
inc
scas
ret
jge
pop
je
pop
mov
push
and
mov
sbb
dec
or
and
faddl
xchg
inc
inc
xchg
loopne
jmp
adc
xchg
mov
xchg
push
popa
lcall
add
das
icebp
pusha
leave
xor
shll
pop
out
lea
je
outsl
add
lret
jo
iret
out
aaa
shld
rcrl
pop
dec
mov
addr16
sub
sbb
mov
call
mov
testb
pop
jl
fstl
ret
sbb
cmp
clc
iret
mov
ds
push
push
cmpsl
popl
out
imul
aaa
fiadds
or
push
jbe
jmp
lock
and
jecxz
and
inc
dec
jle
inc
mov
sbb
int3
jmp
add
sbb
shrb
sub
xor
aas
dec
mov
adc
add
sbb
inc
repnz
sub
lret
sbb
push
fwait
push
jl
in
shrl
rolb
stos
mov
inc
test
lock
jmp
stos
repnz
fucomp
fsubrp
leave
popa
cwtl
and
adc
dec
push
mov
pushf
scas
clc
stc
jp
inc
loope
cmp
lock
mov
aam
out
mov
push
and
iret
arpl
in
xchg
int
push
outsl
cmp
lret
and
adc
scas
xor
clc
push
aam
lcall
sub
mov
sbbb
mov
shlb
fidivrs
fsubrl
cwtl
jns
sub
lods
adcl
dec
loopne
dec
jg
rolb
mov
add
sbb
flds
sbb
cld
mov
dec
fistpll
movsl
xor
scas
lods
mov
cmp
jbe
psubd
adcb
adc
xchg
insl
xchg
mov
sub
lcall
int3
inc
sbb
lds
push
aad
lods
add
insl
fsub
jp
pusha
cltd
out
je
stc
jo
imul
add
mov
inc
xchg
bound
pop
repz
add
cmpb
imul
push
insl
xchg
test
bound
push
push
sbb
mov
xlat
fstl
mov
fs
push
xchg
mov
call
adc
or
packssdw
add
shll
mov
cwtl
inc
fcmovne
daa
pop
mov
mov
or
jae
cwtl
dec
pop
dec
mov
mov
sub
inc
into
out
xchg
les
pop
movsb
setl
stos
fisubrs
lock
mov
div
sbbb
mov
cmp
scas
dec
adc
je
pusha
jo
pop
push
je
test
int3
cld
out
cmp
cmp
jge
aam
mov
pop
jae
mov
scas
inc
gs
aas
into
sbb
mov
sbb
push
mov
jg
xor
or
mov
xchg
jecxz
xorl
add
shlb
xor
xlat
jp
or
in
sbb
imul
popf
mov
into
cmp
sbb
rcrb
or
out
sbb
xchg
aaa
int3
mov
popa
push
je
jg
fwait
jb
fdivl
sahf
jl
xchg
cmpl
jp
and
inc
out
xlat
inc
hlt
push
sbb
push
sbb
je
lods
lock
xchg
fnstcw
jb
push
ret
cmc
repz
xchg
xor
mov
out
xchg
movhps
bound
js
pop
fdivrp
popf
sub
push
daa
xchg
sbb
aam
in
jo
xchg
xchg
add
xchg
jecxz
fimull
adc
sub
ret
jne
rcrb
sub
adc
push
aam
rcrl
psrld
inc
ficomps
stos
fdivs
add
xchg
cmpsb
jmp
or
mov
mov
iret
insb
mov
mov
jne
mov
je
jbe
decb
dec
insl
pop
sub
pusha
jl
jno
mov
push
sti
lods
sub
mov
icebp
push
or
pop
mov
push
push
out
sbb
pop
ret
pop
das
or
add
xlat
mov
mov
sub
rolb
mov
nop
sahf
adc
cmpsl
xor
sbb
out
xor
jge
and
lret
push
cmp
mov
mov
push
daa
lret
inc
out
sbb
fisttpl
in
clc
mov
sub
pop
das
loope
sub
lea
mov
push
stos
sbb
aas
mov
or
adc
jmp
mov
pop
push
add
and
fdivrs
xchg
test
subl
cmp
outsl
jae
push
push
push
cltd
repz
jle
inc
sbb
je
pop
test
pop
jne
popf
sub
fcoml
shlb
clc
sub
jne
jl
push
hlt
hlt
dec
or
inc
outsb
and
lods
pop
and
mov
and
jo
pop
and
mov
inc
sti
fcmove
xor
fstpl
fimull
loope
lahf
jb
xchg
jns
xchg
dec
sbb
es
jl
outsb
js
fistpl
daa
push
in
push
out
adc
jecxz
xor
shlb
or
fmull
pop
jae
sahf
mov
roll
inc
inc
jmp
lock
adc
add
sub
xchg
fisttpl
jmp
adc
cltd
and
repnz
dec
mov
push
sub
cmp
cli
clc
ds
or
into
int3
cmpsl
cmpsl
pop
gs
add
mov
sub
and
pop
mov
jmp
dec
sub
out
divb
pop
mov
dec
mov
adc
orb
jecxz
jmp
call
je
cmp
int
inc
pop
nop
hlt
arpl
lret
xchg
hlt
insb
mov
icebp
xlat
mov
jae
jecxz
sub
cmpl
pop
mov
mov
dec
add
das
iret
jge
or
sub
clc
adc
int
add
test
cs
inc
lds
cmp
push
fsubl
fdivp
mov
out
pop
out
repz
or
jbe
push
fadd
ljmp
pop
mov
dec
jns
xor
add
dec
popa
insb
xchg
rcll
ret
adc
lds
inc
imul
mov
std
lret
and
mov
xchg
movsb
lock
lret
movl
fcmove
loop
fisttpll
and
sub
xor
and
leave
mov
jo
and
or
cmp
lds
adc
mov
sahf
roll
aaa
xchg
mov
and
add
dec
xor
xchg
cmpsl
mov
aad
insb
rorb
sub
push
mov
xor
aad
in
mov
cmp
add
nop
mov
and
mov
push
pusha
jbe
shll
mov
jb
enter
vunpckhps
mov
mov
or
xchg
mov
out
data16
ret
out
fucomip
add
es
fisubrs
push
fcompl
out
push
outsb
and
les
mov
mov
insb
imul
mov
jns
jne
pop
call
in
cmp
fstpt
sti
or
lea
jmp
xchg
in
and
xchg
stos
cltd
mov
mov
das
pusha
pop
push
fwait
mov
xchg
mov
add
icebp
inc
push
aad
pop
outsl
rolb
aas
and
cmpsl
mov
mov
pop
ljmp
rol
inc
xlat
xchg
popf
cmpl
jae
call
rolb
test
xor
pop
pop
inc
pop
mov
test
in
testb
ja
pop
push
pusha
test
mov
add
pop
mov
jecxz
divl
fsubl
push
lods
mov
ja
icebp
inc
xchg
pop
addr16
jnp
jae
xor
ja
jns
pop
lret
add
test
push
fmul
mov
fildll
push
lock
movsl
sbb
add
mov
sbb
push
cmp
dec
insl
mov
cmp
addr16
sbb
mov
add
push
lahf
jl
jnp
xor
leave
mov
dec
dec
jns
inc
inc
xchg
lcall
dec
jmp
cltd
push
or
hlt
hlt
shll
sub
cs
cwtl
push
scas
test
into
andb
cmp
cwtl
lock
fisttps
add
cmp
cmpsb
inc
add
repnz
out
push
test
inc
ljmp
inc
add
xor
loope
out
push
jns
lret
inc
inc
inc
sub
inc
outsb
and
xchg
jmp
add
movsl
clc
mov
orb
add
loop
fs
cmc
das
cmp
sbb
and
dec
dec
xor
fistps
repz
adc
and
cmc
in
jecxz
nop
push
cld
adc
ljmp
xor
mov
aad
add
mov
adcb
mov
cmp
and
sti
mov
mov
dec
jg
lahf
fwait
stc
mov
dec
push
and
jecxz
rorb
push
push
sti
por
cs
sub
lods
test
mov
xlat
sbb
out
es
fsub
inc
cmpsl
aad
jg
inc
outsl
add
popa
mov
lods
lret
or
jno
stc
or
pop
adc
mov
push
lahf
hlt
or
hlt
jae
push
sub
jne
int3
ja
mov
pop
aam
pop
daa
or
cltd
je
popl
cmp
dec
add
aas
mov
jno
jns
xchg
push
orb
pushf
mov
dec
sbb
sub
and
pusha
mov
ficoml
inc
sbb
mov
xor
xchg
push
jne
pushf
push
rcl
rcrl
dec
xchg
pop
xor
inc
sti
std
movsb
push
and
jp
jmp
jo
mov
push
adc
xor
fstpl
adc
inc
in
pop
roll
inc
or
cli
sub
mov
mov
jp
jbe
add
lods
mov
inc
and
incl
xor
inc
push
adc
in
test
jmp
lret
mov
mov
dec
xor
cli
shlb
ljmp
roll
ret
pop
lcall
push
xchg
jmp
sbb
adc
or
loop
subl
cld
int
or
fisubrs
sub
inc
jge
or
test
xchg
and
data16
call
jp
fwait
adc
imul
push
test
in
push
and
addl
xor
sti
cmc
adc
ljmp
pushf
or
push
insb
sbbb
mov
mov
cmpsb
sub
jmp
and
dec
inc
stos
push
inc
js
adc
shl
cmp
mov
xor
repz
mov
dec
xor
rolb
pop
ret
addb
sahf
lods
xchg
mov
push
fwait
or
rorl
enter
daa
jl
fimuls
jecxz
sub
fidivrs
cmp
dec
dec
scas
shll
mov
jge
jle
add
mov
inc
push
xor
xchg
ffreep
xor
and
push
popa
imul
adc
outsl
std
popa
sub
mov
adc
pop
add
pop
inc
and
add
out
xor
mov
push
sbb
fnstenv
adc
xor
mov
movsl
cltd
sbb
scas
fimull
jg
cli
test
jecxz
outsb
nop
pop
cmpsb
and
or
jle
push
das
or
mov
and
lock
xchg
mov
loop
clc
je
out
iret
push
mov
imul
pusha
pushf
dec
xchg
push
or
lahf
jmp
cld
fstps
adc
xchg
sbb
clc
push
ret
sbbb
lret
mov
mov
sub
insl
push
jnp
xorl
inc
push
xor
in
jno
jge
mov
data16
jl
test
or
xchg
jne
movl
mov
aas
cmpsl
jb
sbb
mov
pop
dec
ret
sarb
sbb
push
js
and
add
or
adc
dec
push
dec
mov
scas
and
pop
lods
jae
jle
cld
mov
cmp
lcall
adc
roll
sub
dec
pushf
mov
vsqrtpd
in
mov
iret
lock
fldl
jle
adc
xchg
stos
loope
xorl
js
repnz
sub
jmp
mov
mov
jns
bound
shl
jge
mov
lret
xor
mov
jnp
loope
dec
xor
inc
xchg
push
loop
jo
pop
outsb
mov
dec
sbb
mov
inc
lods
sbb
ja
fstpl
clc
jne
les
fucom
jle
andl
dec
add
outsl
dec
mov
popa
pushf
stos
leave
pop
xchg
movsl
mov
ss
push
xchg
and
or
jmp
inc
gs
push
xor
stos
scas
mov
cwtl
ret
pop
sti
outsl
imul
cmpsl
decb
fldenv
fstpl
out
or
sarl
loopne
rcrb
push
or
mov
ficomps
xlat
pop
int3
popa
mov
sbb
fmull
inc
jecxz
clc
sbb
xor
ret
pushf
daa
and
nop
cli
aas
push
pop
ljmp
adc
mov
mov
inc
jb
fldl2e
add
dec
repnz
push
cld
mov
pop
xchg
push
aas
push
jl
mov
test
or
or
push
mov
mov
adc
adc
repnz
push
les
sbb
in
scas
sbb
inc
cs
cmp
or
les
enter
les
cli
jle
pop
iret
push
pop
mov
fwait
dec
or
mov
push
notb
jle
push
or
adc
push
mov
pop
fildl
jmp
les
mov
dec
xchg
test
addr16
das
icebp
inc
xchg
sub
push
int
mov
jg
into
add
stc
cwtl
dec
lahf
inc
jle
mov
and
add
push
les
add
dec
and
into
push
aad
movsl
push
push
cmp
push
mov
xchg
and
imulb
loope
insl
loope
mov
mov
adc
popf
shl
push
xchg
fsubrp
inc
out
into
fwait
loopne
clc
jo
add
enter
mov
add
mov
mov
adcb
adc
fs
enter
inc
test
ja
dec
cmpsl
or
mov
adc
pop
stos
sbb
adc
pop
imul
xchg
xchg
cmp
clc
fcomi
mulb
insl
int
jle
popa
and
pop
or
mov
aaa
mov
mov
pushf
push
mov
into
xor
mov
and
adcb
movsb
aaa
pop
loop
sub
mov
dec
lock
mov
testb
sbb
push
out
dec
push
mov
and
and
sti
mov
jno
push
pop
cmp
sub
scas
mov
sbb
dec
xchg
push
lret
sub
test
out
pushf
push
pushf
repz
pop
or
popf
rcrb
dec
pop
call
fcomps
add
pop
jle
xchg
push
test
cmpsl
dec
xor
imulb
xor
into
sbb
add
inc
pop
lods
inc
jbe
addr16
jne
pop
add
aaa
inc
sbb
sbbb
sti
stos
xchg
call
sbb
xchg
mov
clc
add
mov
ss
ret
lds
int3
dec
cmp
mov
test
movsl
and
sub
sub
gs
cltd
loope
dec
ljmp
adc
jmp
mov
xor
mov
push
cmp
enter
jno
lods
mov
mov
fldl2e
in
loopne
lret
push
cltd
rol
sub
stos
mov
adc
mov
call
mov
xchg
ds
pop
inc
pop
adc
sub
xchg
dec
inc
shrb
out
nopl
jmp
sti
shlb
add
fnstcw
and
sub
out
stc
popl
cmp
pop
and
add
cmp
dec
sub
shlb
inc
sub
test
dec
bound
pop
jmp
mov
cmp
inc
mov
pop
jns
sahf
loopne
les
push
pop
adc
cmp
jno
xchg
out
pop
scas
nopl
sbb
sbb
clc
push
pop
lcall
dec
xor
out
stc
jge
das
push
add
mov
sar
outsb
or
int3
mov
adc
xchg
mov
gs
pop
mov
add
cmpxchg
movsb
mov
xchg
scas
imul
xor
sub
outsb
dec
les
in
mov
movsl
adc
ret
ficoml
xor
into
or
pop
jno
jmp
push
dec
mov
inc
ja
cmc
stos
mov
xchg
fldt
and
mov
jno
and
xchg
jae
fcomps
xlat
je
lock
cwtl
xor
mov
fisubs
lahf
ss
xchg
leave
fwait
inc
pop
lahf
mov
jmp
int
cld
js
add
jg
push
inc
sub
jmp
dec
cld
in
loop
jl
sar
hlt
jmp
mov
daa
dec
stc
stos
out
xchg
enter
mov
jecxz
clc
cli
and
pushf
lock
sub
jns
lcall
insb
lock
inc
pop
repz
mov
and
imul
cs
rcl
pop
push
inc
and
cmc
push
bound
jmp
outsb
push
fwait
cmp
aad
dec
pop
outsb
jne
inc
js
push
ds
xchg
cmc
negl
call
insb
out
xchg
mov
xor
lock
xchg
lds
xor
loopne
pop
outsl
stc
out
jecxz
pop
xchg
mov
nop
stos
mov
xchg
pop
push
into
jg
cld
pop
cmpsl
clc
in
mov
ds
stc
sarl
bound
fs
adc
movsl
arpl
dec
push
fadds
iret
xchg
sbb
popa
sub
sub
add
test
loop
cmc
test
mov
test
repnz
cmp
outsb
xor
xorb
pop
jl
pop
inc
outsb
jle
dec
sarb
fwait
das
cld
outsb
inc
lea
mov
cmp
jnp
inc
sub
sub
jge
push
sbb
lock
lock
cli
lahf
hlt
cmp
and
pop
inc
mov
gs
ja
lahf
xor
inc
fcmovbe
lcall
call
scas
std
pop
adc
sbb
mov
mov
aas
push
lcall
movsb
sbbb
lret
sub
sub
in
cld
dec
outsb
dec
jno
xor
dec
sbb
aas
pusha
cmpl
push
mul
jae
push
pop
repnz
cs
xchg
popa
mov
out
cs
out
nop
cwtl
pushf
test
jmp
cmpsl
jbe
xor
fiaddl
push
in
xor
outsl
xchg
popa
sbb
mov
cmc
rclb
in
out
fcompl
add
pushf
stc
push
xchg
push
mov
sbb
jp
inc
stos
and
dec
addr16
popa
xchg
adc
fwait
scas
jno
mov
xchg
mov
inc
and
stos
icebp
pop
mov
mov
cmpsl
imul
es
pop
data16
jmp
sar
xchg
sbb
jo
pushf
popf
mov
push
outsl
inc
sub
jne
sbb
lcall
jg
push
ds
and
test
ds
lret
jae
cmp
dec
int3
stc
add
in
in
insl
mov
mov
push
cltd
aas
mov
fsub
mov
sub
push
popa
test
xor
jmp
inc
test
xchg
jns
cmp
cmpsl
add
xor
in
pushf
shlb
popa
inc
push
sahf
adc
mov
pminub
loope
jb
enter
inc
mov
fsubs
je
nop
negl
sub
rclb
les
add
push
and
popa
std
idivl
xor
ret
lock
lods
mov
dec
xchg
lcall
sub
xchg
movsl
fdivr
inc
mov
test
in
mov
test
and
push
sbb
mov
xchg
ret
mov
jo
ss
pushf
cmpsb
jno
or
adc
mov
daa
arpl
insl
push
push
jne
cli
sbb
sub
cmp
adc
ret
out
mov
inc
push
dec
stos
mov
nop
mov
add
pop
lcall
outsl
idivl
fdivrs
test
cmp
aas
pop
lds
dec
add
add
push
into
outsb
rcrl
jne
sub
jbe
clc
stos
lret
loop
xor
cltd
jbe
adc
jp
inc
dec
gs
andb
push
mov
outsb
sar
adc
stos
cmp
xchg
lahf
push
ja,pn
inc
bound
jo
pop
xchg
dec
push
xor
dec
dec
xorb
test
sbb
lret
pop
sub
dec
rcl
mov
adc
and
mov
sbb
leave
mov
mov
jmp
xchg
cmp
or
mov
sub
inc
mov
xchg
cwtl
pop
scas
pop
xchg
aad
popf
fidivl
or
test
shll
dec
dec
mov
outsl
mov
push
pop
fldenv
stc
xor
dec
and
stos
xchg
in
and
dec
bound
push
test
or
imul
pop
push
push
push
mov
mov
and
insb
int
ficomps
inc
fwait
cmp
jmp
inc
inc
push
pop
pop
adc
cmpsl
loopne
jbe
inc
dec
mov
push
and
aas
imull
div
add
pop
jl
cmp
subl
popl
mov
or
sub
enter
fadd
xchg
lods
jb
mov
pop
and
test
daa
dec
dec
jle
mov
mov
jbe
jp
lcall
pop
pop
lahf
xchg
jp
sub
jl
and
push
insb
iret
ret
in
faddp
dec
mov
inc
decb
or
imulb
repz
push
pop
push
push
fwait
mov
and
sub
sbb
push
sub
and
fdivl
sub
mov
jne
lods
cmpsl
mov
jecxz
inc
sub
mov
repnz
ljmp
push
sbb
jno
jnp
push
xchg
xor
mov
mov
lods
adc
cmp
loop
cld
jno
xchg
jno
in
loopne
dec
imul
addb
cmp
xor
pop
nop
inc
fisubrs
inc
ss
inc
repz
test
cmp
xchg
fcoms
mov
cmpsl
mov
sbb
xchg
jmp
sub
sub
push
call
leave
lock
xchg
fwait
push
dec
push
mov
xor
bnd
divl
loopne
out
mov
jl
jae
cmpl
mov
lret
xor
mov
jge
adc
jmp
inc
xlat
mov
push
shrl
scas
xchg
in
rcrl
push
lods
faddl
std
mov
outsb
xchg
bnd
ficomps
inc
es
xor
mov
dec
bound
loopne
or
repz
mov
roll
movsl
cmpsb
sbb
test
div
jge
in
pop
or
imul
cld
sbb
xchg
stc
lret
dec
fisttps
xchg
dec
fdivrl
aad
push
cmpsb
mov
or
mov
repnz
cmp
jb
popa
bnd
stos
pusha
shrl
sub
test
xor
mov
pcmpgtd
push
inc
stos
push
leave
movsl
shr
addps
mov
fnsave
outsb
enter
cld
adc
jnp
sti
icebp
out
outsl
lret
aam
icebp
sub
out
mov
adcl
je
mov
push
arpl
dec
fs
mov
ja
gs
fs
pusha
or
ret
mov
xchg
movsb
xchg
jle
mov
mov
mov
in
subl
sub
jne
dec
iret
push
cmc
iret
fcoms
fldt
sarb
fwait
hlt
lret
nop
cs
xor
add
push
out
jle
or
shl
and
rorl
cmc
xchg
mov
dec
movsb
mov
shl
dec
das
cmp
add
stos
or
jno
in
aas
push
pop
adcb
cmp
leave
out
jno
jne
lds
sub
aam
hlt
sti
nop
psraw
or
aaa
xor
mov
out
dec
or
mov
mov
int
stc
bound
cmc
fmul
jmp
add
addr16
mov
in
jge
loopne
xlat
cmpsb
cmp
fiaddl
repz
es
fnstsw
jns
inc
cmpl
pop
xchg
cli
add
mov
insl
out
jl
dec
in
pop
xchg
xor
and
xor
jns
add
ss
sti
cmpsb
jle
xor
mov
and
sub
ret
cld
ss
les
std
in
aam
or
in
inc
inc
add
adc
mov
push
cltd
inc
add
push
jecxz
mov
push
inc
and
gs
xchg
adc
popa
or
in
ja
mov
inc
adc
jne
dec
jg
sahf
pop
xlat
xchg
dec
std
xchg
movsb
sbb
push
push
push
stos
xor
in
flds
mov
push
xor
fs
orb
fisubl
js
mov
push
xor
or
sbbb
imul
mov
inc
cmp
iret
test
pop
fdiv
pop
imulb
clc
inc
bound
int
enter
fld
and
stos
adc
lods
and
xor
fs
cwtl
out
test
aas
xchg
stos
mul
mov
or
sbb
jp
sbb
pop
or
add
inc
jg
jle
push
adc
loopne
mov
fcompl
aas
insb
bts
push
jns
xor
sarb
mov
jbe
pop
in
jnp
and
sbb
add
insl
push
daa
push
push
xchg
aam
daa
add
inc
sbb
mov
push
fwait
bnd
scas
fcoml
fisubrl
adc
leave
sti
push
push
sbb
outsl
inc
mov
mov
outsb
inc
in
lret
es
call
movsl
popa
movsl
jp
cltd
fcomps
dec
jbe
jmp
jl
aaa
mov
jl
cld
xor
mov
ss
sarl
sbb
blcmsk
cmpsb
clc
xlat
mov
cmp
xchg
movsl
pop
xchg
adc
cmc
pushf
xchg
inc
ljmp
hlt
lea
shll
inc
add
insl
test
mov
fsubrl
stos
sbb
rcl
outsl
push
fsubrl
push
push
mov
cmp
cmp
bound
inc
inc
pop
pop
sbb
lret
insl
int3
enter
xor
pop
hlt
jo
jg
adc
insl
mov
lea
jecxz
into
xchg
push
sbb
popl
xchg
addb
push
mov
insb
xchg
repz
and
mov
mov
cmp
out
call
adc
in
xchg
popa
test
movsl
sub
in
movsb
mov
push
mov
rorl
inc
ds
scas
sbbb
xor
out
cmp
shlb
pop
addr16
and
xchg
xchg
jne
xchg
sti
pop
xor
les
push
jne
pop
bound
xor
mov
mov
leave
push
or
add
mov
rorl
xchg
mov
ss
cmp
lods
push
xchg
outsb
sub
push
or
dec
xchg
out
cmpsl
cmpsb
lock
xchg
mov
cmpsl
inc
xorb
test
sub
and
lret
in
lahf
stc
xor
xchg
sbb
out
cmp
xchg
mov
inc
xchg
leave
stos
xchg
xchg
mov
or
pop
jns
mov
cld
xor
jb
jbe
or
jge
mov
mov
nop
mov
xchg
outsb
dec
subl
out
lods
jl
imul
cmp
cmp
jae
jnp
mov
cmp
stos
jg
add
sub
popf
pop
jmp
in
enter
rcrl
xor
sub
repz
jb
xchg
bound
std
scas
dec
fdivs
push
or
mov
sub
ss
sbb
iret
mov
adc
pop
rcrb
into
xchg
mov
pop
sub
xlat
jae
pop
das
flds
adc
int
stos
fcomps
lea
mov
cmovno
repnz
mov
sub
das
jl
data16
pop
lahf
aam
mov
ljmp
mov
rclb
xchg
xchg
sbbb
xchg
sub
xchg
addl
pop
cltd
jmp
fists
arpl
push
xor
pop
jmp
dec
mov
js
mov
lods
inc
lret
lock
and
pushf
shlb
sbb
add
push
fisttpll
rclb
insb
pop
jnp
xchg
mov
mov
jo
mov
mov
cld
dec
insl
out
mov
mov
shll
add
ja
mov
imul
mov
xor
pop
push
addr16
lret
ja
jno
add
push
mov
bound
and
sub
mov
jecxz
sbb
nop
fdivp
cmpl
xchg
jne
xlat
jne
js
movsl
sub
arpl
in
xor
push
cmp
mov
add
push
adc
mov
into
xchg
incl
inc
mov
xor
fildll
sub
leave
cltd
inc
in
dec
add
push
xor
mov
std
ljmp
add
sub
lcall
jge
sub
push
adc
cmpsl
sbb
ret
js
add
jl
scas
shr
inc
or
cld
cmp
and
pushf
adc
int
testb
or
sahf
xchg
xchg
push
leave
mov
push
push
and
push
or
lcall
fwait
mov
xor
shrl
sub
mov
jae
lock
rcrb
jne
push
neg
jge
aam
fbld
cmp
cmpsb
adc
cltd
or
adc
test
push
jp
adc
push
mov
mov
ss
pop
xchg
pop
mov
decb
sub
jno
sbb
mov
movsb
into
or
rorb
add
adcb
mov
adcl
push
loop
sbb
pop
mov
jl
ljmp
js
push
xchg
out
shl
test
mov
jb
jo
lds
mov
xchg
dec
cmp
pop
loope
push
std
fcoms
ret
and
mov
adc
pop
aas
push
popa
ret
sbb
pop
insl
fwait
or
xchg
dec
pusha
cld
xor
jmp
ret
int
addl
daa
cmpb
inc
xlat
mov
lods
into
data16
inc
lds
add
ljmp
mov
mov
cmp
bound
mov
in
lods
sbb
ficompl
mov
and
or
and
dec
pushl
sub
jne
les
roll
enter
sbb
xchg
xchg
sbb
adc
inc
in
ds
shrb
shl
push
pop
inc
repnz
call
add
adc
scas
and
enter
scas
sbb
pop
jnp
sti
adc
dec
sbb
xor
cld
jb
xor
fisttps
or
adc
jb
popa
xchg
fidivs
call
daa
inc
cmc
add
shl
sub
dec
jns
push
mov
notl
dec
bound
push
adc
imul
add
inc
lret
movsb
push
stos
arpl
xor
pop
inc
ret
inc
inc
dec
es
int
outsb
scas
lcall
inc
pusha
cmp
and
lea
jl,pt
mov
push
jb
adc
pop
dec
cpuid
jnp
sub
loopne
dec
ret
add
aas
add
mov
inc
and
fstpt
in
sub
aaa
ja
sbb
inc
jbe
and
mov
adc
mov
cmp
ret
test
lds
loopne
sbb
cmc
flds
fmulp
in
sub
sub
sub
imul
into
jp
imul
push
outsl
inc
lret
add
jg
stc
les
aas
out
add
popa
fildll
xor
jge
mov
xchg
bound
fists
xchg
dec
popa
sbb
push
inc
jecxz
lock
sbb
daa
sub
pop
mov
lahf
and
inc
or
outsb
and
aam
xor
in
filds
in
dec
rorl
xor
ret
and
fadds
cmp
push
and
xchg
push
inc
xchg
mov
dec
jge
cltd
xchg
adc
adc
cltd
inc
mov
mov
mov
xchg
test
cmc
fnstenv
or
roll
jmp
fwait
cltd
push
sbb
lahf
js
dec
sbb
fucom
shl
sub
punpckldq
repnz
faddp
dec
les
dec
xchg
push
or
push
push
mov
mov
pusha
sub
lds
imul
mov
out
jae
int
add
or
in
cld
mov
lods
sbb
mov
mov
push
jecxz
or
push
mov
in
test
xchg
dec
bound
call
add
jmp
inc
cmp
lods
test
shll
dec
mov
ss
mov
or
mov
xor
inc
or
push
adcb
inc
sub
adc
les
pop
lods
xor
scas
mov
outsl
stos
lods
shrb
nop
ss
das
daa
test
xchg
in
jae
inc
dec
pop
fisttpll
pop
movsl
out
pushf
daa
mov
push
je
in
cmp
or
xor
test
in
lock
fistl
sbb
cmp
push
adc
xor
mov
mov
inc
mov
pushf
sbb
push
add
addb
loop
add
fisubl
dec
dec
cmp
xor
push
fwait
dec
ss
mov
addl
les
int3
stc
push
mov
mov
add
in
iret
arpl
es
mov
shll
ja
movsb
out
pop
fistl
int3
insb
cmp
xchg
or
sarl
lds
dec
movsl
aam
jnp
jmp
rolb
push
outsl
iret
idivl
add
mov
fidivrl
leave
scas
sahf
in
subl
loop
aaa
or
shll
dec
xchg
clc
jne
sbb
pop
js
enter
push
or
in
or
jne
fdivrp
out
cmpsb
pop
shll
jmp
js
imul
jmp
shrl
cmc
movsb
inc
ja
sbb
mov
out
sub
push
test
pop
dec
inc
scas
add
fucomp
jae
aam
dec
xor
mov
pop
xor
push
inc
mov
sub
fst
mov
stc
pop
out
mov
add
cltd
ljmp
ds
inc
pop
pop
insb
mov
add
aam
lret
fildl
mov
xchg
adcl
inc
inc
out
pop
jbe
hlt
xor
fsubrl
mov
rcll
out
test
xchg
in
mov
in
add
cmpb
inc
mov
jbe
fadds
in
ja
hlt
pop
xchg
leave
mov
int
jo
lcall
mov
pop
mov
inc
daa
fidivrl
inc
push
xchg
ret
out
clc
add
pop
xchg
xlat
add
out
push
inc
arpl
aad
ret
add
cmc
data16
inc
add
mov
test
mov
add
js
cmc
enter
dec
in
pop
adc
mov
inc
xchg
sub
add
fsubs
mov
push
sbb
clc
rorb
imul
int
xchg
jns
popf
mov
ret
popa
sub
adc
in
rorl
lcall
outsl
mov
cltd
shll
loope
fs
dec
inc
add
out
or
mov
ja
imul
jp
xchg
out
pop
pop
push
out
das
popa
sub
xor
sbb
add
daa
sub
pop
push
mov
jge
stc
or
lahf
sub
cmp
mov
dec
xor
pop
cmp
mov
loope
lahf
out
xor
ds
sbb
cli
lea
adc
push
add
xchg
xorl
faddl
adc
cmp
test
insl
ljmp
shll
pop
mov
stc
sub
push
push
mov
and
jmp
mov
mov
xchg
push
push
daa
iret
lock
enter
dec
mov
clc
je
flds
jnp
mov
mov
sub
mov
cld
xlat
and
push
movsb
and
add
push
or
or
loopne
mov
pushf
rorl
inc
or
jecxz
ret
in
add
lock
stos
mov
cld
mov
lcall
jae
mov
stos
mov
jle
loope
shr
aaa
jns
or
mov
loop
xor
js
jp
fs
popf
mov
cmc
pop
cmp
popf
pop
rorl
inc
xor
sbb
jl
nop
mov
sbb
push
dec
xor
jnp
add
and
pop
nop
jne
lods
data16
xchg
push
or
mov
mov
mov
lret
jne
cmp
mov
sub
test
aad
aam
and
and
mov
sbb
sbb
pop
or
sahf
xchg
inc
xchg
jno
loop
int
push
xchg
jp
sbb
mov
shll
fs
sbb
mov
mov
loope
xchg
arpl
cld
or
adc
inc
sbb
pop
fcmovnb
adc
les
cmp
jecxz
into
dec
mov
dec
xor
add
pop
jnp
mov
pop
sub
aas
out
js
pop
js
push
push
add
daa
sub
das
shrl
hlt
stos
mov
inc
sub
dec
and
nop
ja
mov
stc
and
decl
jge
push
mov
xor
dec
push
imul
sbb
out
les
or
movntq
out
add
xchg
fisttpl
outsb
pop
sbb
enter
sub
dec
sti
fwait
jecxz
mov
pop
xchg
pop
je
push
jmp
pop
adc
test
out
cmpsb
or
or
xor
or
sbb
xor
rorl
into
sub
pop
pop
pop
popa
pop
sbb
ret
insl
cmc
call
rcrl
xchg
icebp
in
fdivrs
repnz
imul
es
pop
dec
push
in
sahf
mov
push
addb
les
xor
mov
nop
popa
les
sbb
loope
scas
jns
xlat
les
push
mov
std
dec
add
sub
ret
cltd
insl
adc
or
sub
push
mov
sub
loop
jg
cld
sahf
xor
test
fs
mov
inc
jecxz
movsl
mov
xor
mov
xchg
out
out
mov
hlt
jbe
lock
stc
push
pop
mov
jp
daa
cmpsl
mov
testl
adc
popl
out
pop
mov
jmp
and
add
ljmp
push
add
bound
jmp
fdivrl
and
test
dec
fs
gs
adc
or
sub
and
push
pop
cmp
push
popa
shl
subl
into
jb
outsl
pop
add
adc
stos
add
mov
pop
pop
cmc
xchg
xchg
enter
jge
push
mov
mov
aam
jb
ds
mov
ror
das
mov
add
inc
insb
xchg
or
inc
push
pushl
add
mov
lock
mov
loope
leave
mov
pop
arpl
jge
push
cli
bound
jne
pop
in
inc
sar
fisubrs
mov
icebp
scas
movsl
pop
or
mov
movsb
clc
icebp
enter
repz
rolb
mov
insb
cmp
ljmp
fimull
sub
push
jg
xchg
pushf
in
and
jp
clc
xchg
pop
ret
adc
les
add
or
xchg
and
scas
jl
sub
adc
outsl
and
dec
dec
into
outsl
pop
out
mov
sti
aad
mov
adc
inc
pusha
cmp
popf
mov
sahf
out
subb
push
push
icebp
ljmp
mov
scas
add
dec
adc
fisubl
adc
sbb
mov
and
add
xchg
movsl
sbb
cmp
shrl
mov
fwait
ljmp
nop
jb
ds
mov
aad
and
leave
shll
jnp
jle
pop
adc
es
mov
stos
pushf
add
push
jbe
mov
clc
dec
aam
dec
inc
aam
jge
incb
jbe
xor
fcompl
out
jns
daa
and
sahf
sub
movsl
outsb
stos
xchg
call
and
gs
push
addr16
xchg
test
popa
je
mov
xchg
icebp
push
xchg
or
nop
in
mov
loopne
dec
fnsave
or
push
out
and
cmpsb
rcrl
sbb
iret
fdivr
pop
xchg
cmp
xchg
call
sub
push
rorl
cs
push
mov
out
cmc
sub
dec
jno
mov
adcb
xor
mov
loop
xor
imul
pop
sbb
scas
jmp
aad
adc
mov
int3
in
mov
aad
loopne
sarl
movsl
push
scas
lock
jge
lahf
xor
ds
repz
mov
ret
clc
mov
jmp
sub
or
sub
pop
or
mov
xchg
push
fwait
gs
subl
push
add
adc
sbb
mov
and
mov
add
sub
in
leave
lds
mov
aam
roll
adc
jae
pop
push
mov
xlat
orl
pop
test
int3
bound
popf
lcall
add
outsb
cmp
fisubs
fdivrs
movsl
test
xchg
sar
lret
push
dec
mov
adc
xchg
mov
jmp
data16
and
mov
ss
out
stos
sub
aaa
cmpsb
call
cmp
call
adc
fildll
jb
int3
or
lock
int3
idivl
mov
push
js
scas
sbb
push
pop
sbb
movsl
imul
push
fstpt
movsl
cltd
or
negl
dec
das
mov
jecxz
mov
arpl
pop
sbb
in
iret
hlt
fcmovu
in
xchg
adc
ficoml
xchg
adc
mulb
jecxz
test
jle
nop
jbe
daa
inc
push
movq
bound
mov
les
jbe
jae
outsb
lea
jp
addl
out
iret
xchg
xchg
inc
jnp
leave
cmpsl
or
je
mov
adc
in
inc
jnp
mov
sahf
and
cli
cmp
xor
xor
jmp
xor
push
in
sbb
aaa
and
sbb
inc
out
dec
out
js
adc
adc
or
fcomps
dec
or
stos
call
out
div
adc
mov
dec
sub
popf
mov
mov
ret
and
les
outsb
aaa
je
xchg
aam
dec
sti
cmp
dec
iret
test
cmp
push
and
movsb
clc
add
dec
and
stc
sarl
pop
jl
lock
cs
outsb
sub
or
hlt
aam
mov
pop
jne
fadds
frstor
pushf
push
or
fistl
push
test
orl
mov
push
lds
cmp
imul
inc
pop
push
cmp
enter
movsl
jmp
jp
pop
es
xchg
iret
mov
ds
push
fwait
dec
arpl
fimull
xchg
rolb
jmp
xchg
aaa
popf
fwait
roll
jge
xchg
jg
test
lret
mov
push
repz
daa
dec
cmp
jl
adc
push
fwait
inc
dec
push
inc
xor
lock
jg
sbb
popa
enter
mov
sti
mov
roll
lods
jg
ret
add
std
insl
js
push
imul
lods
mov
fnsave
add
dec
and
fcomps
aas
or
es
inc
in
pop
cwtl
and
mov
pop
cld
in
dec
out
stos
in
popa
push
inc
and
inc
sbb
xor
addb
sbb
in
cld
lahf
sbb
into
inc
mov
decl
fwait
mov
stos
movsl
cmp
xchg
dec
sbb
mov
fwait
js
xchg
inc
push
jae
sub
in
inc
je
movb
xor
gs
inc
inc
push
jmp
mov
mov
add
or
or
subl
mov
sbb
pop
xchg
das
xor
adc
xchg
sti
int3
jae
pop
ficomps
ljmp
pop
or
push
inc
ror
sbb
cltd
dec
comiss
add
adcb
mov
add
pop
sub
push
aaa
add
sbb
dec
stc
push
pcmpeqb
push
xchg
jae
mov
jno
inc
add
cs
repz
add
cmp
stos
cli
sub
sahf
push
jb
aaa
rorb
mov
xchg
ljmp
dec
adc
jbe
fs
js
jb
mov
mov
cmpsl
pop
sahf
sub
jl
aaa
cmp
cmpsb
xorl
addb
ljmp
addr16
adc
push
inc
lea
cmpsb
inc
push
int3
sbb
jne
loop
ret
shl
enter
xchg
and
movsl
ja
mov
mov
sbbl
mov
addr16
clc
xchg
rorb
jmp
push
mov
lcall
mov
push
sarl
adc
push
mov
cmc
jne
repnz
repz
std
test
stos
pushf
mov
sub
xchg
mov
ret
pop
dec
mov
outsb
clc
out
fcompl
mov
lods
jecxz
xchg
add
adcb
add
leave
adc
mov
cmpsl
push
imul
push
inc
add
push
xchg
movl
dec
es
mov
mov
mov
loopne
xchg
jge
out
sbb
pop
movsl
int3
push
push
and
lret
adc
add
sbb
mov
notl
enter
ljmp
insl
mov
mov
adcb
lods
daa
inc
adc
negb
xor
aad
sarl
jns
adc
mov
aam
inc
mov
lea
or
mov
pushf
and
or
sbb
sti
aam
sub
ficoml
jle
jb
lds
or
mov
push
jns
add
sub
mov
push
sbb
add
test
lret
mov
jne
mov
dec
stos
xchg
lods
xor
ret
sub
ds
lods
mov
jmp
lcall
mov
inc
fisttpll
stos
aad
inc
addr16
inc
push
push
jp
in
xchg
dec
in
insl
idiv
fnstsw
jbe
loopne
pop
push
mov
shl
add
push
outsl
dec
and
sbb
add
cld
lret
icebp
push
cmp
lods
adc
mov
sbb
xchg
or
inc
into
fisubl
pop
and
add
dec
or
dec
xor
mov
sub
cli
dec
test
fwait
lret
test
lret
mov
xorb
sbb
pop
cmp
cli
repnz
adc
lea
rol
mov
lds
push
and
cmpsb
int3
les
ret
jl
movsb
sahf
mov
or
dec
pop
lods
or
cmp
sbb
push
mov
clc
cltd
imul
dec
sbb
int3
xlat
lahf
out
mov
popa
or
jg
adc
mov
cs
mov
ret
in
add
jbe
cli
xchg
inc
mov
inc
gs
repnz
jns
jmp
mov
xchg
enter
push
push
sti
pop
das
dec
in
sbb
pop
fstps
adc
or
jbe
pop
jae
outsl
and
out
push
fildll
cld
outsb
iret
out
pop
push
out
js
mov
push
mov
fldenv
in
and
ror
xor
dec
pop
imul
mull
jmp
mov
data16
addb
sub
lods
fldt
and
push
mov
insl
mov
ficoml
xor
xor
lods
enter
mov
and
pop
or
mov
push
stos
icebp
push
lret
mov
sbb
cli
call
jne
loop
aad
xchg
mov
xchg
xchg
cmp
cmc
jno
adc
sbb
sub
sub
xchg
mov
or
xor
xlat
xor
loopne
ss
pusha
cwtl
cld
loop
xchg
fisubrl
add
push
popa
sbb
mov
ljmp
bound
mov
cltd
pop
xor
jae
sahf
sbb
sbb
lret
fsts
repz
ret
mov
pop
mov
sti
bound
loope
pop
nop
ljmp
xchg
and
and
int
shll
xchg
clc
or
pop
inc
add
test
mov
cld
mov
sar
dec
and
das
shr
daa
pop
arpl
in
out
jo
leave
and
lock
pop
lock
xor
mov
push
jl
mov
xchg
sbb
xor
fucomp
cmpb
mov
loopne
std
pop
inc
rcrl
loop
iret
shlb
ret
sarb
jmp
lret
and
xchg
test
out
movsb
inc
in
shr
aam
mov
sub
daa
jno
jbe
or
xor
cs
jmp
or
sahf
loope
push
pop
icebp
shll
jo
mov
pop
aad
push
roll
mov
pop
ja
fwait
out
arpl
pop
jb
int3
inc
insb
ljmp
mov
mov
scas
out
xor
das
mov
addl
or
dec
enter
mov
xchg
bound
test
jo
lret
rcl
fisubrl
gs
movsb
lods
mov
nop
xor
jbe
cs
and
iret
loope
jns
cld
test
xchg
xchg
jne
jmp
xor
daa
orb
gs
loopne
jg
les
lds
xor
aas
inc
pop
cmpsl
ja
mov
xlat
jg
fwait
jle
mov
arpl
cmp
mov
mov
clc
pop
shrl
jo
sub
inc
sti
push
outsl
mov
iret
cwtl
out
rcrb
mov
fwait
je
int
fs
push
pop
inc
std
dec
jnp
loopne
daa
sbb
jmp
fdiv
sub
test
dec
lds
loop
dec
das
mov
loopne
or
sub
subb
shrl
outsb
push
call
xor
mov
movd
push
adc
jae
mov
jl
fisttps
ds
sbb
data16
mov
mov
std
jmp
mov
into
stos
fsubr
inc
sbb
jecxz
jmp
into
shr
adc
jmp
nop
jge
inc
pop
cs
push
sbb
lods
lahf
and
les
fucomp
shlb
adc
ja
daa
nop
stos
sub
icebp
clc
sahf
negb
xchg
jmp
inc
or
xchg
sbb
shrl
jne
std
or
stos
jo
xor
mov
add
movsl
inc
lock
lahf
repz
aam
and
pop
lock
xchg
outsb
add
mov
inc
xchg
aaa
add
int3
sarb
add
rcrl
cmp
push
popf
lods
lret
mov
popa
lahf
add
fisttps
sub
js
mov
scas
stos
je
sub
jb
insb
mov
scas
cmp
mov
mov
lods
mov
jae
cmpsl
jbe
out
fisubl
and
ficompl
mov
lcall
icebp
je
popf
pusha
fadd
shll
fcoml
in
cmpsb
ror
xlat
insl
and
xlat
scas
sub
mov
sub
cwtl
mov
xor
imul
sbb
in
push
movsb
push
or
scas
nop
jae
out
ljmp
cmpsb
scas
ja
call
out
mov
loop
pushf
push
dec
and
lret
sbb
movsb
js
test
mov
jnp
cmpsb
fcom
test
lods
mov
pop
push
xor
ret
out
dec
mov
scas
sub
mov
je
insb
pop
mov
push
and
sub
pop
scas
lock
mov
lock
lock
mov
jbe
dec
inc
push
test
mov
shll
cwtl
gs
jae
mov
cltd
stc
and
and
cmp
ficoml
mov
cli
movsb
imul
enter
test
mov
cli
cmp
hlt
xchg
pushf
clc
xchg
pusha
push
orb
std
hlt
jne
lret
sbb
and
mov
xorl
xchg
fsubs
cmp
sub
std
aad
js
push
pop
aaa
dec
cmp
mov
xor
stos
out
push
movsb
inc
jl
fnstsw
orb
fists
decb
pop
pop
mov
test
sub
inc
stos
cli
arpl
jecxz
rolb
adc
mov
mov
aam
in
neg
inc
xor
fimull
sbb
fistps
scas
pop
pop
pop
pop
fstps
sbb
std
into
jmp
mov
jle
rolb
hlt
ret
xchg
dec
rolb
jnp
jae
xchg
mov
cmp
add
sub
adc
lds
mov
mov
popa
repz
loop
into
or
and
fisubl
pop
cmp
mov
jg
push
mov
sarl
inc
xor
stos
idivb
xchg
cmovs
pop
add
std
mov
adc
testb
xchg
lret
pop
rorl
movsb
add
dec
ja
mov
push
test
int3
jb
push
daa
xchg
cmc
xor
dec
push
xor
cmp
add
add
aaa
and
repnz
adc
cmpb
sub
insl
ret
ljmp
mov
ljmp
mov
dec
push
xchg
mov
push
add
movsl
sub
pusha
call
repnz
fwait
aad
rcrb
jns
shll
mov
enter
pop
xchg
dec
pop
stos
jmp
fimull
hlt
pop
mov
adc
mov
add
adc
sbb
adc
mov
mov
pop
fdivs
sub
mov
loop
mov
or
nop
inc
jb
xlat
or
int3
mov
stos
pop
sub
andl
mov
movsl
pop
lcall
pop
pop
and
test
cwtl
js
sub
cmp
popf
lcall
ja
pop
xchg
xchg
movsl
js
and
idivl
push
mov
adc
inc
out
adc
pusha
sti
adc
dec
imulb
cmpb
adc
bound
jbe
fists
mov
std
push
xor
in
out
cmovs
jb
loopne
je
pop
sbb
aaa
xor
mov
dec
shll
and
xchg
ja
mov
ja
arpl
daa
xchg
ja
jno
jle
xor
daa
add
pushf
andb
add
cwtl
push
cwtl
scas
xor
jb
and
cltd
xor
xor
pop
xchg
aam
mov
fists
fisubrl
push
test
movsb
adc
lahf
ret
mov
pushaw
inc
clc
xor
adc
addr16
lcall
aaa
push
testb
movl
push
mov
shlb
clc
and
movsb
jae
add
jecxz
fidivrs
popf
xchg
shl
fsubl
adc
dec
sbb
hlt
sbb
data16
mov
inc
mov
aas
pop
enter
adc
test
mov
mov
mov
cmp
mov
cmp
mov
xchg
popa
inc
sub
adc
imul
sbb
mov
mov
popa
and
jno
js
insb
fwait
in
in
or
js
cmp
mov
xchg
inc
gs
ret
ret
ss
jp
shrl
fistl
sbb
mov
pop
fdivs
dec
mov
push
mov
inc
addr16
dec
sbb
push
xor
fisubrl
jnp
inc
adc
out
cmp
jo
push
pop
sahf
mov
insb
dec
lods
das
lcall
dec
sbb
and
pop
icebp
fmulp
cld
js
mov
and
ror
cs
pop
loopne
sahf
mov
pop
aad
mov
lcall
rcll
cmpsb
jns
xchg
or
fbstp
adc
sbb
or
pop
pop
mov
or
popa
and
xchg
imul
mov
adc
xchg
push
adc
pop
iret
les
sti
outsb
xchg
cmpsl
fs
fninit
pop
fwait
cmp
stos
inc
sbbl
loope
and
lret
lret
imul
jnp
and
jmp
ja
mov
js
pop
adc
test
mov
subl
fsubrl
jb
cmpsb
jno
jle
fsubrs
mov
mov
movb
push
aam
loop
lcall
cltd
rcr
push
mov
push
das
and
mov
ljmp
ret
and
mov
and
cmp
adcb
mov
repz
dec
arpl
add
sub
pop
call
cmp
jns
inc
insb
imul
lods
pop
scas
jns
mov
mov
push
and
dec
sub
cmp
jg
shl
sub
shll
js
out
add
leave
int
or
or
pushf
into
js
dec
sub
sub
test
in
cs
push
ja
fisttpl
cmp
push
sbb
or
addl
repnz
or
stos
push
mov
fsubrs
inc
push
fldl
xor
leave
dec
aam
int
or
adc
push
shlb
ljmp
mov
lret
and
pop
cmp
insl
aad
xchg
pop
mov
sbb
push
mov
sub
notb
mov
inc
mov
stos
aam
paddb
test
ljmp
popf
jecxz
and
pushf
mov
push
loopne
arpl
adc
gs
mov
fcoml
cmp
or
cld
and
cli
pop
jmp
cmp
jns
jl
in
sub
mov
adc
ss
jb
push
aas
test
jbe
cmp
sub
lods
push
fiaddl
add
xchg
dec
add
add
dec
add
mov
testl
nop
mov
jno
jae
pop
mov
pop
addr16
or
shr
dec
or
cmp
mov
mov
std
fiaddl
movb
in
pop
mov
ljmp
rorl
enter
mov
insl
xchg
fnstcw
call
mov
push
jne
or
xchg
push
mov
dec
fstpt
bound
lock
or
lock
mov
fdiv
inc
outsb
ror
cmpsl
adc
cmp
sub
jp
xchg
push
and
inc
pop
pop
ret
inc
js
aas
xchg
mov
dec
neg
pop
fisubrl
nop
add
push
mov
xlat
dec
scas
sbb
mov
pop
sbb
mov
pop
aaa
push
xor
jbe
xor
sbb
jbe
cli
mov
jns
or
aam
push
sti
je
cmp
jge
insb
inc
aaa
mov
jns
fiaddl
fwait
inc
lcall
shrb
out
pop
cwtl
sarb
movsl
jae
xchg
pop
inc
pop
fwait
adc
daa
dec
mov
xor
cmp
jbe
ret
ljmp
mov
xchg
lcall
loop
jnp
sbb
add
fisttpll
scas
adc
xchg
inc
leave
lahf
sbb
out
xchg
jb
aas
xor
xor
outsb
xor
shl
loope
push
movsl
mov
jp
ret
adc
inc
pushf
je
in
into
out
adc
xchg
ret
mov
in
mov
inc
aaa
pop
adc
ja
mov
fs
outsl
adc
sahf
idivl
mov
jns
andl
push
inc
jo
iret
and
jne
lret
shlb
fwait
push
mov
mov
into
cmp
xchg
adc
mov
xor
stos
daa
das
jmp
shrl
lahf
cmp
mov
push
fwait
stos
cmc
xchg
pushf
or
mov
sub
jg
dec
negl
or
loope
mov
ror
dec
int
mov
adc
and
sbb
pop
stos
xchg
adc
pop
jae
cs
xchg
out
addr16
push
addr16
test
enter
stos
test
xchg
sbb
test
xchg
or
loop
adc
icebp
cmpsb
dec
cmp
fisubs
add
push
xor
fisubrl
adc
jns
adc
sbb
mov
or
mov
imul
mov
push
and
stos
repz
push
mov
or
imul
loopne
or
test
movsl
aad
and
add
mov
sbb
dec
and
or
lods
scas
jno
xchg
push
push
mov
ljmp
repnz
push
and
jecxz
mov
or
mov
push
mov
mov
add
sub
push
and
and
stc
xchg
pop
and
lods
push
pop
repnz
add
xor
push
sub
pushf
aam
jecxz
insb
icebp
data16
mov
stos
dec
mov
bound
je
imul
popf
inc
insb
push
pushf
jae
lds
out
inc
cwtl
and
dec
aad
cld
mov
in
mov
mov
xor
fildll
leave
push
xor
pop
arpl
roll
sub
aaa
les
fistpl
adc
rcr
push
cmp
add
mov
xchg
and
mov
lahf
test
sub
jne
int3
or
fs
stos
fdivp
js
inc
in
jbe
xor
cwtl
les
rolb
inc
dec
push
pop
mov
les
push
leave
sbb
xchg
xor
jno
jb
sbbb
xor
repz
daa
mov
sbb
adc
int
scas
addl
mov
rclb
rclb
and
mov
jmp
cwtl
cmp
je
add
mov
xchg
adc
aaa
mov
testl
ret
fmull
sbb
fisttps
scas
je
push
push
mov
push
pop
adc
jp
add
pop
fisubl
fnsave
mov
mov
push
jo
sbb
cmovae
fdivrp
add
push
push
cs
jnp
cmc
inc
cmc
mov
adc
add
pop
cltd
push
scas
and
shll
call
imul
mov
and
fwait
movb
push
divl
je
arpl
aaa
cmp
pop
int
sub
movsl
mov
scas
cmp
test
fcoml
sbb
popa
jno
jmp
stos
sahf
in
test
xor
loopne
lcall
int
mov
sbb
sub
mov
je
jns
and
dec
sbb
inc
jb
test
dec
cmp
cmp
inc
fmull
outsl
adc
addl
add
stos
scas
clc
mov
push
mov
dec
or
in
cli
stc
push
cmp
cli
xchg
push
ja
adc
or
imul
mov
das
not
dec
xor
and
loope
enter
mov
and
push
lret
mov
sub
imul
push
push
jbe
lock
and
push
or
push
popa
mov
cmc
xchg
inc
js
jnp
inc
cltd
xor
out
stos
inc
mov
movsb
sahf
adc
das
enter
aad
lea
jle
push
ljmp
sub
addl
xchg
jns
mov
mov
jg
fimuls
cmpsb
adc
and
out
lds
dec
fwait
aam
mov
decl
inc
jo
shr
pushf
cs
push
loop
and
inc
scas
addb
int3
clc
and
or
cs
imul
insl
lods
xchg
dec
adc
cmp
es
inc
ds
punpckhdq
sbb
mov
cltd
frstor
mov
aaa
js
push
mov
sbb
scas
mov
test
push
loopne,pt
out
cs
mov
push
popf
fldl2e
outsl
cmp
mov
jne
ret
pop
pop
aam
add
es
sbb
imul
inc
jecxz
roll
pop
clc
dec
adc
mov
push
ficoml
mov
pusha
mov
std
push
xor
inc
out
ret
xchg
mov
aas
fs
insb
je
nop
cmpl
lods
rclb
sbb
push
cli
shlb
rcrb
daa
add
mov
mov
dec
insb
les
fldpi
fidivrs
sbb
aam
test
mov
inc
ret
inc
push
daa
jno
adc
inc
fisttpl
xchg
mov
gs
cmc
fisttpl
push
add
mov
sarl
pop
sub
ss
nop
sbb
rcl
cmp
xor
test
push
cmp
and
dec
mov
lret
arpl
daa
out
scas
hlt
xor
xor
pushl
jb
xor
int
jb
jns
sahf
sub
sub
pop
or
and
cmpsb
cmpsl
xchg
roll
es
push
adc
addb
sub
mov
imul
and
sbb
outsl
idiv
arpl
mov
pop
inc
mov
mov
fidivrl
jo
jmp
sbb
stc
rcll
jg
loopne
orb
cmpsl
or
mov
les
jb
loop
mov
sahf
mov
iret
add
xor
scas
pop
popa
cmc
xchg
push
dec
adc
iret
fs
arpl
ja
adc
or
mov
mov
pop
sbb
aam
adc
cld
stc
into
add
push
mov
lret
pushf
lea
xchg
and
adcl
into
jno
xor
inc
dec
loopne
fmul
sti
pop
inc
stos
popf
test
jb
xchg
mov
daa
aad
std
arpl
and
into
mov
mov
inc
push
sbb
adcl
adc
sub
movsb
xchg
push
adc
xlat
stc
add
negb
cltd
jg
cs
push
fcomps
push
movsb
pop
mov
sub
pushf
fcoml
fmuls
pop
dec
xor
mov
dec
pop
movsb
iret
cmpsb
and
or
add
mov
insl
sarl
jno,pn
dec
dec
cmpsl
aaa
int
sbb
adc
testb
dec
push
iret
xor
push
repnz
xorl
push
fmuls
mov
orb
lods
repnz
sbb
inc
cmp
nop
pop
jae
gs
icebp
gs
test
les
sahf
mov
xlat
test
sbb
xor
dec
rcrb
out
sbb
and
sbb
and
push
or
nop
and
mov
sbb
fbld
add
sbb
and
mov
jns
ret
mov
lea
push
fidivl
xchg
mov
arpl
loop
jmp
mov
outsb
mov
mov
xchg
ret
mov
mov
dec
sub
mov
arpl
jle
mov
lea
inc
movsb
add
fidivs
or
shlb
sbb
push
iret
xchg
and
mov
jecxz
aam
cmp
jne
loop
sub
push
push
pushf
scas
push
sub
jae
test
arpl
fldcw
pop
ret
jb
inc
fucomi
movsl
pushf
fiaddl
inc
xchg
bound
ret
pop
pop
scas
call
cmp
outsb
in
mov
lds
cmp
rcrl
xchg
jle
clc
jne
xchg
and
push
test
jno
mov
push
pop
jns
xchg
and
clc
shl
into
out
imul
adc
sub
pop
jno
dec
sti
and
jno
xchg
scas
pop
inc
repz
jno
jmp
lods
ds
sub
adc
out
das
push
push
cmpsb
ss
cmc
mov
mov
rclb
clc
adc
and
xchg
hlt
outsb
lock
mov
add
jmp
pop
mov
pop
cmpsl
sub
imul
bound
pop
sbb
clc
jne
pushf
fwait
arpl
in
pop
test
fs
lods
add
test
push
lret
pushf
sahf
xchg
lock
in
jecxz
mov
rcrl
xchg
divb
push
mov
scas
lretw
mov
aas
hlt
inc
out
mov
scas
call
and
sub
std
jge
cmp
mov
xchg
pusha
cmp
and
add
and
stos
roll
xchg
aaa
ja
jo
out
push
in
push
test
jg
pop
arpl
mov
dec
cmpsl
mov
lcall
lods
fcoml
cltd
inc
xchg
aaa
insl
pop
js
pop
movsb
push
aaa
pop
xor
stc
xor
and
sub
ret
mov
lret
outsl
mov
mov
loopne
add
insl
inc
testl
lret
clc
adc
pop
cmp
mov
test
fidivrl
xor
sahf
jae
cwtl
loopne
jo
ret
out
mov
stos
add
push
mov
pextrw
xor
rcll
pop
pop
ja
jle
push
mov
mov
lds
ret
je
out
xchg
stos
jnp
and
hlt
jb
pushf
mov
scas
add
stos
inc
cmp
jne
inc
stos
int
jmp
fdivrs
ret
nop
mov
jp
and
ss
mov
ret
push
faddl
add
lds
test
cmp
mov
jg
adc
movsl
xchg
adc
push
loop
stc
add
mov
insb
sbb
cmp
fldl
push
or
mov
out
or
ret
mov
iret
int3
mov
repz
mov
out
leave
shr
push
push
xor
and
cmc
mov
test
outsl
add
and
jb
xor
and
push
negl
in
sbbl
mov
test
xor
sbbb
mov
dec
jno
into
and
adc
pop
xor
and
dec
jbe
sahf
push
dec
cmp
mov
cwtl
pusha
cmp
sti
sti
enter
pop
jns
jno,pt
mov
pusha
bound
sbb
das
push
xchg
ror
xchg
pop
loope
xor
lds
or
repz
adc
cmp
imul
jg
popa
dec
pop
hlt
xor
jp
adc
xchg
testb
fs
jle
lock
test
jmp
xchg
stos
jo
and
jmp
cmc
lods
cltd
jecxz
pop
movsl
pushf
pop
cmp
das
inc
dec
mov
jecxz
cmp
mov
inc
jns
insl
cmp
lret
adc
sbb
std
repnz
andb
sbb
sub
cmp
xchg
cmp
adc
jg
xor
es
enter
jl
pop
mov
cltd
rolb
lcall
inc
outsb
out
lcall
imul
orb
xchg
jo
shl
push
test
inc
pop
push
flds
dec
shr
jle
xlat
push
add
pop
movsl
aam
jle
push
xchg
orb
or
add
insl
pop
pop
std
and
sub
dec
pop
sbb
sub
imul
jle
and
sbb
cli
dec
push
add
imul
push
or
aad
test
fstpl
add
lock
add
and
sbb
sub
pop
shlb
xchg
inc
jp
fucom
or
sbb
je
mov
pop
int3
lds
fucomip
xor
jne
jle
mov
inc
mov
push
adc
mov
cmp
mov
out
ret
mov
rcrb
dec
and
pusha
pusha
cmp
lods
movups
aas
pop
dec
in
push
iret
pop
je
and
in
mov
jb
stos
add
push
addl
cltd
pop
xchg
aad
cmpsb
leave
dec
aaa
mov
jae
pop
lret
or
sub
sahf
xor
inc
inc
imul
rclb
test
mov
ds
pop
cmpsl
cmp
push
add
push
fwait
ss
imul
pop
into
mov
lods
dec
mov
mov
sbb
loop
sub
pop
shrb
xchg
mov
out
loope
xchg
imul
ss
ljmp
pop
cwtl
cmp
or
xchg
je
push
cmpb
and
or
add
scas
andb
sub
data16
cs
cmp
push
jmp
cs
jbe
fisubrs
gs
cmpb
repz
jns
jno
rcl
out
fldl
orb
mov
pop
lds
push
out
stos
mov
mov
mov
dec
imul
pop
push
cmp
sbb
insb
sti
push
test
mov
and
popaw
cmp
lea
pusha
call
adc
pushf
push
in
and
stos
jne
pop
mov
inc
sbbb
hlt
insb
jmp
cmp
lret
and
and
inc
clc
xchg
mov
subb
dec
pop
outsb
mov
int3
lds
notb
sbb
pop
cmp
mov
aad
vpmacsdqh
cmp
mov
fstl
xor
ret
mov
jmp
out
adc
nop
shlb
je
push
and
pop
xchg
mov
std
push
push
pop
rclb
mov
xchg
jbe
sahf
mov
je
fwait
dec
in
dec
out
adc
movsb
lret
dec
mov
addl
mov
js
cmpl
sbb
jne
sbb
cmpsb
cli
jae
stos
sti
inc
jg
nop
cs
add
mov
arpl
adc
mov
mov
pop
std
mull
xchg
outsb
jno
jno
xor
sbb
hlt
ret
mov
rcrl
xor
jnp
dec
in
addl
xchg
lret
sub
into
inc
jae
div
mov
shrl
js
pusha
fistpll
insl
aad
sahf
sub
icebp
rcrb
adc
das
mov
mov
imul
mulb
or
inc
cli
pusha
out
xchg
add
and
push
hlt
loopne
popa
lods
pop
sub
clc
mov
mov
sub
negb
cmc
xor
jns
scas
test
pop
imul
cmp
adc
ljmp
scas
add
cmp
je
pusha
fidivl
xor
pusha
fisttpl
push
js
sbb
shll
sub
add
push
mov
sub
call
cli
adc
into
lahf
jp
jne
inc
adc
pop
cmpsb
in
pusha
ljmp
iret
inc
mov
popa
xlat
jmp
add
dec
mov
imul
fdivl
jnp
stos
xchg
jmp
jnp
pop
pop
sbb
push
push
or
aad
call
scas
mov
sarl
ds
jge
outsl
lock
mov
push
leave
pop
mov
jmp
and
jne
xlat
jge
decl
pusha
dec
icebp
or
sub
hlt
rorb
push
lahf
mov
inc
loope
xor
test
pop
inc
jb
test
add
mov
fadd
adc
mov
mov
outsb
adc
inc
inc
clc
jp
cmpsl
sub
pop
cmp
inc
popa
insb
xorb
mov
mov
addr16
jne
loopne
inc
mov
add
test
mov
cmp
test
push
xor
popa
lahf
imul
into
push
lcall
pop
pop
cmp
loopne
ret
ret
pop
or
inc
mov
push
test
pop
loopne
xor
je
and
adc
rcll
fwait
xchg
insl
jmp
mov
in
addr16
popa
add
or
je
sub
mov
sub
xor
jnp
dec
push
mov
hlt
hlt
arpl
fldl
push
sbb
jl
dec
mov
pop
stos
sub
lea
mov
out
cwtl
cwtl
in
lcall
pop
cmpsb
aam
cmp
popl
sub
inc
and
mov
xor
dec
or
jnp
dec
mov
and
and
and
adc
aaa
inc
stos
push
pop
add
sub
jge
inc
add
cmp
push
push
xchg
sbb
mov
insb
cld
cmp
push
das
cltd
xor
mov
mov
repz
nop
cli
adc
jg
sub
sub
jns
loop
repz
mov
lods
lret
out
ficoms
or
xchg
or
jne
sbb
and
int
mov
daa
enter
add
sbb
pop
or
leave
loopne
lea
and
jl
data16
sub
test
push
lock
pop
sub
add
add
lret
cmp
insl
adcl
cmpsb
jnp,pt
jb
test
pop
jno
dec
and
lock
loop
movsb
and
enter
cmp
mov
add
push
adc
je
add
scas
and
xchg
les
sbb
addr16
cmp
negb
cli
cvtps2pd
fwait
mov
in
test
cld
stos
rorb
stos
mov
jns
lret
lcall
add
mov
cltd
lahf
cmc
sub
cmp
sbb
ret
xorb
pop
ja
int3
shlb
cld
stc
gs
imul
int
push
pop
loopne
sahf
int
cwtl
call
gs
ja
scas
rclb
mov
mov
aaa
inc
xor
xchg
dec
adc
jge
mov
push
jo
fcomp
adc
mov
jp
gs
data16
push
loopne
iret
sub
mov
pop
popf
mov
popf
cmp
in
enter
pop
out
xor
xor
cwtl
pop
enter
dec
mov
es
pop
mov
jge
mov
mov
cmp
ja
scas
decl
nop
orb
mov
icebp
pushf
jge
jge
int
add
xchg
jp
push
enter
movsb
mov
es
lret
pop
jo
jns
adc
mov
out
imul
jbe
inc
inc
sub
mov
fidivrs
cmc
mov
cltd
inc
mov
out
rorb
test
icebp
sbb
aam
leave
adc
bound
mov
mov
fcoml
adc
dec
add
jae
rcll
xchg
push
lea
cltd
in
pop
lahf
push
fs
push
ljmp
int
movsl
test
sbb
clc
scas
loopne
cwtl
pusha
push
ss
aaa
dec
std
cmp
jb
in
loopne
fwait
push
jg
repz
ljmp
ds
andb
imul
inc
ds
enter
repz
loop
fwait
je
mov
int3
mov
push
test
xor
dec
in
mov
and
repz
scas
jne
mov
mov
sub
rorb
push
gs
imul
xlat
dec
mov
cmp
mov
mov
fisttps
fstpt
fnstenv
fidivrs
std
pop
push
xchg
hlt
mov
xor
sub
cmpb
sub
aam
lret
les
jmp
aam
fmuls
jno
jbe
lea
test
or
sub
inc
mov
shrl
cmp
jno
fiaddl
mov
fstpt
sbb
ret
imul
ficompl
dec
addr16
sbb
mov
sbb
mov
dec
push
popf
lahf
in
cwtl
lret
adc
cmpsb
adc
adc
mov
sbb
ret
push
insb
xchg
pop
mull
jnp
fnstcw
outsl
jp
lock
inc
daa
push
dec
out
mov
sbb
rcll
and
negb
pop
rclb
xchg
decb
fldt
out
sbb
pop
mov
into
sub
add
aaa
out
addl
jmp
jge
sbb
pop
add
mov
xor
xchg
testl
incb
lret
sbb
xor
xlat
jno
mov
iret
jb
ljmp
int
shll
push
rcrl
call
xchg
dec
inc
call
iret
ret
xchg
inc
mov
sahf
pop
loop
mov
pop
dec
lods
adcb
inc
roll
xchg
jge
mov
jae
sub
cmc
xchg
xlat
add
stc
sub
and
pop
fsts
test
fcompl
fistpll
dec
cltd
cmp
ljmp
ljmp
inc
gs
push
push
adc
cltd
and
add
fisttpl
adc
inc
test
cltd
sub
test
repnz
stc
test
inc
jecxz
jno
pop
dec
int3
mov
ret
mov
outsl
add
lods
andb
fcoms
sub
fimull
dec
adc
shrb
or
cmpsl
cmp
fwait
sub
ja
push
rolb
mov
ss
leave
lock
imul
inc
insb
test
jmp
xchg
and
cmp
sbb
pop
bound
in
and
into
sbb
orl
or
ljmp
cmp
je
adc
shll
out
adc
pushf
xor
stos
sub
mov
stc
loop
xchg
cmpl
call
inc
adc
stc
inc
jne
fs
fiadds
mov
les
repz
test
mov
out
xchg
push
jne
shrl
ljmp
lea
ficomps
push
sbb
in
shll
inc
push
xor
shl
addb
sbb
sub
or
mov
orb
stos
mov
xchg
lahf
mov
xchg
pop
les
push
push
mov
xor
inc
inc
sbb
pop
imul
mov
outsb
daa
mov
mov
jne
inc
inc
push
test
mov
sbb
lods
dec
fnstenv
jmp
ds
cs
and
bound
push
aaa
jle
sub
sahf
sub
pop
push
popf
sub
dec
mov
hlt
cmp
sub
push
push
dec
std
in
cld
jmp
add
push
out
or
mov
hlt
jne
xchg
fstps
test
pop
and
icebp
test
jmp
adc
mov
pop
scas
mov
adc
jno
dec
xchg
pop
xchg
jecxz
ret
xchg
fbld
push
les
xor
jae
fadds
fistpl
jge
in
inc
aas
cld
aaa
and
adc
push
sub
fnstsw
xor
outsb
mov
xor
mov
sti
xor
scas
xchg
xor
mov
mov
push
imul
movsb
xchg
dec
inc
scas
cmpsb
shlb
mov
in
cmp
dec
pop
fisubl
test
gs
lcall
dec
cld
nop
and
adc
iret
adc
inc
loopne
clc
shrb
jno
jp
mov
cmc
push
jmp
lods
ss
mov
repz
cmp
adcb
hlt
ret
xchg
mov
mov
xor
or
popf
cmpsb
es
test
test
mov
lock
fsts
aad
xchg
popf
and
lock
outsl
subb
jge
mov
cltd
inc
lods
mov
out
xchg
add
in
loop
inc
dec
xor
fdivrp
ljmp
push
jns
pop
sub
lcall
adc
dec
mov
xchg
sbb
pop
or
rcrb
pop
adc
push
psubq
jo
loopne
pop
jns
imul
jecxz
sti
pop
sub
or
xchg
push
cltd
inc
ljmp
add
sub
xor
jae
mov
mov
fsub
je
dec
mov
mov
nop
sti
dec
jbe
push
push
out
sub
push
negl
scas
nop
cmp
icebp
pop
adc
cwtl
int3
lret
mov
insl
int3
mov
jno
les
shlb
or
pop
and
test
inc
xchg
divb
rorb
js
mov
movsb
inc
faddl
popl
mov
aam
aaa
sbb
test
cmpsl
mov
xchg
fnstcw
inc
rorl
cltd
inc
enter
cltd
push
arpl
mov
dec
jmp
lea
pop
cwtl
add
or
leave
cli
jb
cmp
mov
xchg
cmpsb
mov
mov
mov
ds
jo
xor
data16
inc
mov
mov
inc
fildll
mov
out
push
inc
mov
jmp
adc
pop
stos
xchg
int3
decb
jne
rolb
ds
dec
sub
daa
filds
scas
cwtl
iret
and
dec
dec
jae
xor
ret
inc
xchg
add
rorl
xor
inc
shrb
dec
int
in
arpl
imul
dec
jge
loop
adc
pop
sub
jl
cmp
push
dec
xchg
insl
xchg
repz
mov
pop
sbb
pop
pop
lds
insb
je
out
fucomip
xchg
jp
jb
or
std
mov
mov
sbb
in
push
icebp
out
mov
mov
sub
inc
sub
xchg
and
fiaddl
aam
mov
lea
lods
lods
lahf
stc
and
dec
imul
add
add
int3
imul
mov
cmp
mov
cmp
mov
incl
clc
int3
push
ss
lret
mov
out
imul
xchg
out
into
test
push
sbb
movb
ss
xchg
mov
lcall
adc
iret
gs
bound
jno
cmp
inc
test
pop
inc
subb
and
sub
loop
icebp
mov
xchg
push
push
xor
inc
mov
sub
int
into
shlb
pusha
add
push
pop
sub
das
aas
adc
bnd
lcall
int3
jne
cwtl
cmp
mov
sbb
mov
scas
into
repnz
in
fldl
repnz
popa
mov
insl
mov
insb
test
sahf
ds
mov
mov
imulb
ret
clc
lods
test
add
xchg
xchg
mov
movsl
mov
xchg
into
repz
dec
mov
xchg
adc
mov
fs
in
pop
or
add
lea
js
call
mov
or
push
mov
or
mov
mov
cmpl
adc
xor
lods
jns
jp
push
mov
hlt
push
pop
out
test
ljmp
outsb
push
mov
fldenv
cmp
xor
cmp
ret
loop
and
lods
sbb
cmp
gs
mov
dec
sbbl
stos
popa
not
push
in
and
std
sti
push
or
pop
push
jo
pop
sbb
scas
ficomps
inc
mov
pusha
addr16
cmpsb
test
inc
cmp
cmp
in
xchg
gs
sub
jl
popf
xchg
and
dec
nop
mov
fdiv
push
or
icebp
out
sahf
cmp
mov
sub
sbb
jecxz
rcl
test
mull
jmp
fstpt
sahf
mov
pop
cwtl
mov
push
inc
inc
insb
fsubs
sub
sub
add
shlb
fildl
inc
lea
loope
adc
mov
in
outsb
push
movaps
dec
add
rorl
lea
sub
xchg
jmp
add
xorl
sahf
cwtl
and
add
ror
int
stc
xchg
dec
inc
es
cmp
iret
xlat
in
je
es
loop
imul
cmp
push
xchg
lods
ds
arpl
push
gs
mov
inc
cmp
mov
fsubrp
mov
sahf
add
stos
push
pop
mov
or
arpl
insl
mov
xor
call
int
dec
dec
add
mull
xor
aad
std
mov
out
dec
cmpsb
dec
mov
pop
push
fsubr
inc
jmp
aam
lahf
mov
jae
adc
and
clc
xchg
push
pop
jbe
jecxz
lea
jp
mov
xor
test
cmp
jmp
push
bound
clc
push
gs
aad
cmc
out
rol
add
jno
hlt
ss
imul
cmp
mov
ljmp
cmp
xor
jno
sbb
mov
cmp
mov
cli
and
push
movsl
test
mov
pop
call
shl
jp
push
repnz
push
and
sub
aas
mov
mov
push
jmp
adc
adc
outsl
incb
xlat
push
dec
frstor
pop
lret
pop
xor
lds
mov
adc
rorl
pop
cmp
std
mov
stos
sbb
jmp
es
lret
ret
ret
daa
in
or
jno
jl
sub
scas
stos
inc
dec
push
cld
push
mov
and
push
pop
test
pop
cmp
sbb
sub
sbb
and
mov
addb
imul
loope
pop
cmc
aaa
ret
notl
add
int3
jmp
hlt
inc
imul
jmp
std
adcl
push
jo
pushf
pop
mov
call
mov
cmovne
jecxz
test
addl
sub
jbe
arpl
jle
mov
mov
or
lcall
imul
pop
fadd
fldlg2
xor
xchg
in
cmpb
negb
inc
lea
icebp
outsb
mov
test
cmp
inc
testb
pop
stos
lahf
lea
test
sbb
cmpsb
or
adc
pop
test
jle
and
lds
in
icebp
out
xchg
aam
add
dec
jae
cmp
mov
pop
sbb
mov
push
mov
xchg
and
push
les
shrb
repnz
push
push
push
outsl
insb
xor
nop
xor
aad
xchg
adc
or
addl
push
cmp
outsb
cmp
sahf
or
mov
xor
jg
and
nop
inc
sbb
and
mov
pop
xchg
jmp
je
dec
push
cltd
cmc
pop
testl
stos
mov
out
jecxz
fwait
inc
pop
shr
sub
stc
ss
jl
xchg
punpckldq
mov
nop
das
push
hlt
mov
and
pop
jbe
dec
movsb
sbb
lea
cmp
push
cmpsb
dec
mov
das
pop
add
and
xchg
cltd
aam
sub
test
adc
xor
scas
pop
adc
push
inc
or
adc
push
lea
outsb
fnstsw
and
jne
sbb
das
and
xchg
or
inc
inc
in
test
push
cmp
inc
insl
ret
push
rcrl
sub
adc
lea
jne
aad
popa
scas
mov
rolb
add
shrb
std
nop
and
jp
fs
sub
frstor
mov
cli
xlat
lret
pop
jb
jnp
ret
push
xchg
sbb
jmp
xorb
cmpsl
ss
add
ljmp
scas
aad
icebp
lret
inc
xor
fistl
sub
and
dec
shl
pop
cmpb
in
je
mov
ljmp
jbe
fisttpll
mov
arpl
push
idivl
pop
pop
insl
cmc
dec
repz
pusha
imul
mov
cmpsb
push
push
int3
mov
aas
dec
das
xor
and
adc
ljmp
stos
je
xchg
jle
lock
add
out
into
mov
stc
mov
lea
arpl
push
sbb
pusha
xchg
dec
out
in
out
ret
scas
fs
mov
cs
aad
jnp
repnz
cltd
push
cmp
fwait
gs
dec
jle
cmp
stos
scas
add
pop
or
mov
les
pop
lods
mov
outsl
aam
ja
cltd
or
ret
call
sbb
xchg
xchg
out
or
dec
fisttps
inc
xchg
inc
das
jmp
or
mov
xchg
xchg
pop
inc
loope
repz
iret
push
cmp
mov
mov
cmpsl
orb
add
ret
repnz
inc
inc
add
pop
xor
pop
or
inc
cmp
xor
sbb
dec
add
cmp
ds
jp
add
test
adc
fwait
xchg
imull
mov
jo
pop
dec
out
jo
jb
movsb
test
push
mov
push
imul
scas
pop
push
rcrb
mov
loope
cmpsb
std
or
jns
idiv
push
notl
scas
cmp
jbe
jge
inc
jb
aad
test
pop
ficoml
loop
stos
pushf
xchg
mov
imul
cmp
in
int3
lea
xchg
pusha
and
cmp
stc
dec
ret
test
mov
mov
ss
mov
inc
ret
loop
sbb
xchg
in
sub
stos
inc
sub
and
add
nopl
aad
sbb
pop
mov
hlt
xor
rcll
ljmp
stos
and
push
arpl
arpl
js
jmp
or
push
jge
adc
xor
xchg
fsubrs
cmp
cli
push
inc
xchg
dec
xchg
pop
jno
nop
out
and
push
rolb
xor
es
push
dec
push
ret
mov
bound
lods
cmp
cli
fwait
inc
xchg
xchg
outsl
inc
outsl
test
jo
arpl
aam
sti
inc
mov
cmpsl
cmpsb
mov
fcompl
outsl
pop
cli
push
inc
das
xchg
jo
adc
mov
sbb
jmp
xor
imul
mov
push
inc
cmp
jae
test
pop
mov
lahf
shl
adc
fdivs
sahf
out
or
outsl
xchg
call
pop
and
inc
mov
jle
enter
mov
dec
push
dec
cmp
aas
xor
xlat
jnp
sbb
jmp
mov
cmp
and
dec
pusha
jns
mov
xor
ficomps
inc
enter
push
lret
in
pop
fstl
dec
and
cmp
sbb
xchg
mov
push
incb
push
es
or
sti
cmp
jl
xchg
jo
push
addb
pop
and
cmp
das
ror
sub
xor
mov
insb
jae
cmp
lahf
mov
inc
dec
or
xchg
jle
mov
in
fdivrl
add
dec
push
xchg
orl
cmp
stos
xchg
adc
aas
adc
jecxz
jl
dec
xchg
cmc
movsb
fistl
xchg
in
jg
push
rcr
xor
popa
add
mov
adcb
and
sets
cmpsl
repz
jns
push
in
add
fwait
scas
imul
bound
jle
stos
push
fisubrs
sarb
push
mov
jb
add
adc
test
jae,pn
mov
xchg
and
mov
mov
push
js
mov
pop
adcl
aam
sub
adc
or
movsl
aam
repz
sbb
inc
or
inc
std
sbbb
cli
mov
outsl
cmp
nop
xchg
jge
adc
dec
lods
call
dec
or
cmc
add
jle
clc
test
std
dec
add
ret
mov
or
xchg
mov
jno
push
loope
jg
sub
incl
lods
movsb
fwait
mov
xchg
dec
es
mov
sub
jp
js
push
mov
std
mov
inc
cmp
fisttpll
lahf
into
and
shll
jb
lods
sub
rcl
mov
pop
pop
mov
stos
xor
aas
push
subb
push
inc
jae
push
sbb
movsl
mov
sbbl
mov
or
mov
aas
mov
dec
jecxz
pop
xor
shr
pop
loope
push
imul
daa
fwait
and
in
ljmp
enter
cli
pop
lret
add
sub
inc
cmpsl
scas
stc
push
mov
arpl
dec
lock
shr
int3
cmp
push
jg
int3
cmpsb
lods
dec
sub
sbb
dec
stos
and
pushf
inc
shll
xchg
jg
add
popf
pop
mov
rolb
je
sbb
mov
jns
insb
xchg
jecxz
or
push
and
dec
mov
nop
mov
iret
push
add
and
mov
cmp
adcb
inc
mov
mov
mov
cmpsl
aam
mov
mov
push
cmp
test
mov
sbb
repz
jp
call
cmp
fidivs
into
ss
push
ds
sub
push
or
sbb
fsub
xchg
or
sarb
inc
scas
loopne
fwait
sub
loope
xchg
scas
repnz
popf
jecxz
lea
inc
mov
lcall
ljmp
addl
inc
decl
xor
pop
push
and
sbb
mov
cmovle
cwtl
lret
stos
dec
and
push
subl
inc
or
or
pusha
dec
xor
outsb
insb
mov
mov
jp
ret
xor
push
sarb
lea
mov
cmpsl
fbld
sbb
lods
cmp
inc
stos
daa
dec
fs
and
out
mov
inc
movl
add
sub
aaa
push
push
xchg
mov
xor
sbb
pop
mov
int3
push
xchg
dec
pop
popf
inc
jg
stos
mov
scas
fdivl
push
dec
xchg
arpl
sub
mov
lea
cltd
and
and
movsl
push
and
pop
cmpsl
fnstenv
outsb
ds
jno
test
adc
or
dec
push
cmp
enter
dec
insl
dec
lret
int
push
insb
mov
add
xchg
insb
fadd
andb
mov
sahf
jno
arpl
xor
lods
in
out
je
lret
outsl
jle
xchg
dec
gs
sbb
mov
out
ds
and
lock
hlt
insb
sbb
subl
popa
mov
cmpsl
vmread
outsl
jae
jecxz
sti
enter
shr
mov
pop
mov
cmpsl
xchg
and
aaa
iret
stos
lods
aas
jl
pop
test
out
mov
addr16
enter
cmp
add
add
insb
dec
enter
mulb
ss
loop
mov
pop
lods
mov
xor
mov
jae
mov
lods
fmul
mov
pusha
fsubl
dec
mov
mov
mov
push
cwtl
enter
add
inc
js
fildl
scas
aas
pop
fnsave
fwait
test
push
leave
mov
cmp
jp
cmc
push
cli
out
mov
xor
mov
jnp
ret
lds
aaa
and
xor
pop
loope
xor
push
mov
xor
fstl
vmwrite
loopne
inc
dec
inc
pop
sub
lret
and
and
ss
and
jp
pushf
loop
and
cmpsl
test
popf
and
mov
pop
mov
dec
cmp
add
pop
popl
xlat
mov
int3
arpl
cli
cmp
jp
jb
mov
mov
movsl
mov
dec
jbe
icebp
jo
xchg
je,pn
xor
xchg
ret
call
jg
pop
out
or
aam
lock
loopne
sahf
movsb
mov
cmc
nop
iret
inc
jo
pop
adc
inc
fmull
fcompl
push
mov
mov
imul
or
loop
push
mov
inc
hlt
lods
xlat
pop
dec
test
adc
sub
imul
adc
add
xor
inc
adc
in
push
mov
push
outsb
aaa
mov
stc
sbb
or
stc
pop
stos
jnp
jbe
xor
inc
jmp
xchg
and
outsl
fdiv
xor
cmp
pop
mov
xlat
aas
vpsrad
dec
inc
pop
add
jle
pop
jne
les
fnstcw
cltd
into
mov
add
jg
fwait
pop
mov
inc
add
lret
xchg
aad
scas
out
in
fsubl
jns
fsub
int
out
mov
add
pop
fnstcw
enter
xchg
dec
aam
or
sahf
pushf
or
repnz
mov
sub
daa
pop
xchg
mov
mov
cld
push
lock
xchg
test
push
mov
insl
mov
mov
and
int
jns
jmp
push
ja
jmp
and
pusha
ret
sub
push
xor
mov
sar
add
xor
add
cmpl
icebp
sub
rorl
mov
push
mov
lcall
jle
inc
or
sub
ljmp
out
push
sti
push
jge
pusha
push
lea
inc
xor
cs
push
push
or
mov
jb
dec
cmp
mov
mov
cmpsl
inc
data16
pop
repz
push
ds
jne
out
dec
adc
push
fdivrs
mov
cmpsb
adc
shll
enter
roll
cmpb
jge
popf
bound
pusha
fnstsw
clc
xchg
daa
xchg
sub
repnz
mov
mov
xor
mov
cmp
lods
jo
mov
inc
ja
fimull
gs
loope
dec
mov
mov
adc
iret
adc
pushl
bound
jl
jge
insl
jmp
inc
fs
or
sbb
cmpsl
jl
stos
xchg
sbb
mov
cwtl
cmp
fbstp
out
lds
mov
arpl
movsb
pop
rcrl
fcomi
sarb
and
xchg
push
fnsetpm(287
xchg
or
je
sub
outsb
addb
add
popa
pushf
sbb
cli
or
cmp
aam
cmp
mov
lock
sub
jbe
sbb
nop
push
arpl
jl
sub
mov
out
gs
pusha
adc
pop
add
push
in
xlat
xorb
mov
xchg
call
je
addr16
shrb
inc
mov
or
rolb
sub
fdivrp
inc
mov
aam
xor
mov
rolb
jmp
and
fildl
xor
pop
ret
test
mov
jno
xchg
push
mov
pop
push
aaa
pushl
test
pushf
mov
mov
int3
sti
mov
pop
in
div
xchg
inc
mov
in
inc
nop
mov
xlat
mov
or
adc
cmp
jge
xlat
adc
xor
pop
ljmp
nop
xor
nopl
xchg
repnz
or
sbbb
and
ret
mov
sbb
rolb
pop
xor
outsl
inc
jmp
xorl
cltd
stc
add
mov
aad
mov
popa
jg
subb
mov
mov
out
enter
popa
xor
push
in
push
fcmovne
xorb
pop
movsl
mov
or
rcrb
mov
and
js
mov
mov
orl
leave
cs
sti
cli
pusha
gs
dec
repz
sub
or
pop
repz
mov
mov
mov
and
jp
iret
sbb
sbb
jg
lahf
push
mov
ret
xor
pop
lds
jbe
fimuls
ds
dec
in
mov
pop
xor
dec
xor
mov
mov
mov
out
mov
cld
add
shlb
inc
dec
mov
cld
jecxz
dec
xchg
outsb
push
or
xor
sub
pop
mov
sub
ds
aas
mov
sub
xor
inc
sahf
mov
pop
sahf
cmp
sahf
and
fcoml
iret
test
daa
cltd
stos
arpl
fstpt
enter
fistps
jo
push
das
mov
ret
add
push
inc
jmp
xchg
rcrl
dec
pop
pop
stos
shr
bound
pop
mov
mov
cmc
or
xor
mov
inc
sbb
ret
movsl
pop
add
push
sub
cli
adc
scas
mov
xchg
popf
ljmp
cmp
cmpsl
push
dec
enter
je
jl
jg
in
fadds
mov
cmp
call
or
mov
push
loop
or
xchg
xor
loop
pop
lcall
imul
xchg
in
mov
test
lds
pop
jp
test
addr16
xor
je
imul
add
mov
pop
shlb
cmp
pushf
adc
call
fs
jle
das
bound
jmp
or
cmp
sbbb
fyl2xp1
mov
repz
outsl
mov
cmp
mov
cmp
sub
sbb
mov
call
daa
arpl
scas
cmp
or
mov
imul
sbb
std
inc
mov
mov
sub
xchg
dec
sarb
test
js
xlat
adc
das
int3
or
imul
lret
or
stc
cmp
push
imul
shrb
dec
or
enter
cmp
pushl
push
popa
xchg
fsubs
and
or
jle
stc
mov
inc
inc
and
cmp
pop
mov
dec
jmp
das
push
xor
xor
pop
cli
add
pop
inc
jbe
cmpsb
fidivrl
cwtl
aad
ficomps
jle
ret
test
scas
out
sub
dec
lods
and
sahf
pop
jne
popa
push
cmpsl
push
dec
sub
cmpsb
jno
and
lods
sbb
sub
push
lahf
add
sbb
lret
jne
rolb
fistl
ret
lock
mov
jmp
push
add
fs
adc
lcall
sbb
lods
xchg
mov
mov
shl
inc
loopne
sarl
dec
mul
std
or
cwtl
lcall
inc
mov
imul
sbb
push
lea
push
inc
fbstp
stos
sbb
push
push
cli
data16
aas
push
xchg
xchg
test
sub
loop
loope
les
mov
aam
adc
repnz
fmull
adc
faddp
mov
mov
xor
shl
push
sub
cmp
pop
repz
mov
ds
mov
out
push
sbb
in
cmp
js
xchg
cmpsb
jmp
jbe
jle
add
sbb
dec
sbb
and
ss
out
xlat
or
mov
push
sbb
cmp
je
das
jo
repz
dec
icebp
imul
stc
cmp
adcb
adc
push
js
js
and
shll
test
mov
in
push
lds
fbld
ds
stc
xchg
push
stc
in
dec
cwtl
ljmp
dec
add
inc
fistpll
mov
and
dec
movb
lea
repz
xor
pop
icebp
out
sbb
jno
enter
add
or
aas
cmp
aam
push
cmp
popa
loope
pop
jg
aas
in
mov
pop
xor
mov
imul
clc
iret
push
lock
out
addr16
jb
lahf
or
lock
das
scas
mov
jae
shl
jb
arpl
xor
mov
or
arpl
es
in
adc
sti
loope
aaa
adc
das
jns,pt
call
cli
mov
push
push
pop
stc
push
dec
bound
aas
out
inc
sbb
xchg
aaa
outsl
dec
mov
adc
pusha
or
fidivrs
std
rcl
icebp
popa
cmp
jb
gs
fsubs
call
in
push
jg
push
jl
arpl
sub
mov
or
mov
adc
shr
rorl
mov
cmpsl
std
call
mov
cmp
repz
lcall
mov
in
dec
cwtl
faddl
insb
cwtl
jno
jle
ds
jbe
xchg
outsl
pop
roll
stos
xchg
mov
push
xor
test
nop
les
ret
jl
aas
sub
inc
adc
lock
fisttpl
dec
int3
daa
out
pop
cmpsb
or
inc
fs
jmp
jae
clc
loop
push
icebp
int
push
pop
faddl
adc
addl
js
or
sbb
jl
lock
dec
jo
int
ds
ja
jne
add
mov
mov
enter
loope
jle
cld
call
cmpsl
addr16
lods
xlat
and
mov
push
push
jbe
adc
lea
int
icebp
js
xchg
mov
mov
add
add
and
cld
sub
into
add
jmp
dec
adc
mov
pop
adc
push
or
cmp
lcall
movsl
jmp
inc
push
pop
clc
sti
aas
pop
cmp
xor
cmc
stos
add
stos
jae
divl
test
adc
dec
mov
negl
hlt
popf
cmp
cmp
xchg
push
call
xchg
inc
xchg
pop
into
cmp
pop
stos
stc
sub
mov
lret
pop
fists
mov
movsb
push
pop
ficompl
sbbl
sub
repnz
or
cwtl
mov
push
cmp
stc
mov
inc
ss
cmpsl
in
inc
pushf
mov
movsb
pop
and
cmpsb
sarl
or
sbb
sbb
das
push
inc
and
icebp
push
jg
jge
jle
nop
mov
stc
fwait
mov
xor
cmpsl
inc
stos
jle
dec
adc
shl
stc
cltd
aaa
pop
mov
mov
inc
cmp
out
dec
mov
test
test
daa
xchg
cli
out
and
stos
push
shlb
popa
iret
nop
xchg
or
loope
sbb
push
lcall
test
mov
mov
mov
push
mov
cmpsl
pop
cmpsb
xchg
jnp
lods
pop
jbe
sbbl
cmpsb
call
ja
sub
repz
movsl
inc
in
dec
adc
mov
popa
dec
pop
jmp
ret
shrl
add
add
je
aam
xor
and
cmp
dec
push
in
rcll
insl
mov
xor
xchg
jl
ljmp
jo
add
insb
pop
loope
xor
cmp
scas
sub
adc
insb
sbb
pusha
gs
pusha
jmp
rcrb
jmp
mov
xchg
pusha
dec
xor
adc
xor
xchg
mov
shrl
mov
sbb
push
addr16
pop
outsl
cmpsb
cld
inc
xchg
pop
repnz
call
and
adc
test
fcomip
into
test
xor
adc
insb
mov
fbld
test
loop
cmp
lret
pop
aaa
data16
mov
jbe
mov
xor
push
xchg
cltd
push
in
xchg
jmp
xlat
dec
mov
push
adc
in
repz
das
push
fwait
pop
rcrb
dec
add
mov
adc
and
fsubl
sub
jmpw
pop
pop
dec
in
xor
enter
js
movsl
and
and
je
jmp
mov
cmp
xchg
gs
push
sbb
scas
lods
jecxz
aas
pop
push
push
sub
js
repz
clc
adc
sub
add
imul
outsl
xor
sub
aad
int3
mov
leave
enter
dec
lea
inc
mov
int3
sbb
xchg
into
mov
pop
xchg
mov
mov
aas
in
pop
call
roll
push
jp
dec
movsb
out
xchg
pop
push
inc
fidivs
sbb
call
adc
hlt
idivl
cltd
add
test
pushw
addps
arpl
scas
in
fistpll
mov
pop
daa
and
mov
rclb
in
xchg
in
incb
rol
or
and
jp
mov
add
jb
daa
inc
jmp
addl
fstps
aas
sbb
fsubrl
ljmp
inc
mov
dec
and
aad
adc
adc
dec
mov
push
dec
mov
out
jo
out
add
rcrl
lret
dec
push
jae
jo
jae
mov
adc
enter
jl
lret
and
mov
cmp
stos
sub
insl
or
jp
ret
xor
mov
out
xor
fwait
lcall
repz
sub
add
mov
xor
pop
outsb
sub
in
or
sub
add
cmp
jns
out
cmp
aam
lds
jl
lcall
push
icebp
movsl
leave
add
mov
pop
xor
xchg
pop
outsb
aad
inc
fwait
hlt
loope
adc
jg
dec
xchg
cld
gs
or
lea
xchg
cwtl
das
push
sub
test
xchg
jae
icebp
fwait
repz
dec
push
cltd
push
adcb
xchg
das
arpl
cld
jp
mov
sub
cmp
jmp
mov
pop
xchg
popa
adc
or
xchg
or
dec
pusha
and
das
pop
pop
ret
xor
les
xchg
push
ljmp
cld
pop
push
mov
cltd
popf
icebp
sarl
aaa
daa
pop
add
add
dec
lahf
or
sbb
popf
fisubs
call
adc
shlb
outsl
ss
adc
loop
dec
mov
push
adc
cli
inc
pop
xor
stos
mulb
orb
lock
dec
xlat
mov
inc
pop
cld
clc
aad
repnz
in
lea
fidivs
mov
loopne
ss
cmp
push
lods
adc
test
lods
push
adc
jnp
sbb
lods
loopne
mov
icebp
in
mov
xor
cmc
popa
sbb
jo
in
cmp
jmp
mov
lods
adc
loope
int
and
shl
adc
fidivrs
cmpsb
add
rcr
inc
or
jecxz
and
jbe
push
adc
sbb
push
push
and
scas
jp
loop
imul
jb
push
rcrl
xchg
adc
dec
xor
xor
out
pop
aad
das
fwait
dec
stos
dec
or
in
js
cmpsb
outsb
mov
mov
mov
loop
inc
pop
xor
aaa
push
sbb
fnstcw
cmp
cmpsb
ret
aas
cli
add
test
or
push
inc
test
enter
push
sub
push
xchg
adc
loopne
push
cmp
mov
enter
push
add
cs
dec
cmp
adc
mov
in
aad
test
das
pop
inc
push
gs
and
pop
fcoms
lea
and
test
cwtl
pop
aad
lea
shrl
xchg
in
inc
mov
mov
xor
pop
push
mov
adc
pop
and
push
adc
cmp
push
adc
xor
mov
insl
xor
jnp
mov
insl
xor
addr16
popf
lcall
cmp
fisubl
in
out
lods
cmp
push
sbb
inc
xor
ret
jne
pop
int
test
mov
test
in
sbb
mov
sbb
xchg
clc
mov
je
jnp
cmp
popf
xchg
or
add
pop
shl
jle
add
or
pop
je
mov
mov
sbb
in
out
or
or
xorl
pop
jne
xor
xor
xor
sbb
mov
insl
mov
and
addl
mov
cmp
adc
rcl
xor
inc
lods
cmp
rolb
shrl
xor
popa
jmp
fsubrl
mov
xchg
test
popaw
add
sub
je
add
into
inc
into
xchg
fisttpll
pop
xchg
push
ret
adcl
arpl
outsb
xchg
cmp
xor
adcl
mov
sbb
mov
popf
shl
popa
insb
inc
lret
nop
push
out
xchg
mov
mov
jns
mov
cmp
mov
sub
mov
std
stc
mov
adc
rolb
fcompl
andl
push
push
dec
push
stos
jbe
sub
adc
pop
fs
mov
leave
ret
or
insl
pcmpgtd
movsb
pop
pop
push
mov
inc
adcl
sub
stc
fists
or
mov
pusha
push
imul
mov
loop
imul
sbb
call
fnstenv
outsl
leave
out
data16
out
cld
data16
negl
stc
sbb
fs
test
push
inc
outsb
add
andl
repnz
mov
mov
inc
jecxz
push
xchg
mov
mov
pop
lahf
xor
test
mov
aas
xchg
push
cmp
in
dec
xchg
push
push
or
inc
push
xchg
push
cli
fwait
cmp
sbb
imul
pop
orb
ret
fsub
shll
outsb
flds
ss
ret
xrelease
test
les
and
sbb
mov
mov
dec
stos
push
ljmp
mov
sub
pop
icebp
dec
sbb
cmp
jmp
imulb
stos
test
sbb
pop
lea
adc
popa
insl
test
push
xor
ds
icebp
fdivrs
sahf
sub
shr
std
fsubrs
dec
xor
jo
mov
push
out
xor
dec
ljmp
es
xchg
hlt
repnz
push
xchg
ds
fadd
pop
cmp
or
les
dec
sbb
int
xor
xor
mov
lahf
negb
mov
xchg
push
or
jnp
mov
sub
pop
xchg
pushl
sub
cli
scas
sub
adc
jl
outsb
sti
cmpsb
test
lods
out
out
insl
xchg
jg
les
aaa
and
pop
add
test
data16
push
das
push
xchg
fwait
addr16
hlt
add
mov
rcrl
insb
out
mov
xor
movsl
loopne
fs
mov
jno
push
out
fwait
js
cmp
or
in
xor
xchg
or
or
fistl
ja
int
xor
jns
test
sbb
inc
lahf
push
test
ficoml
rolb
xor
daa
inc
loopne
loopne
imul
jae
mov
fldt
dec
mov
push
mov
adc
sahf
sub
sbb
mov
xchg
adc
pusha
dec
pop
adc
shlb
cmp
add
xor
add
shlb
ds
fs
xor
add
jl
cmc
dec
pop
pop
stos
add
adcl
dec
pop
add
adc
adc
mov
inc
jmp
pop
ds
outsb
fwait
push
dec
dec
imul
mov
push
xor
dec
lret
inc
aas
out
hlt
sbb
push
mov
mov
add
pop
mov
xchg
and
aad
popf
push
and
scas
rcl
mov
scas
xchg
cmp
enter
and
rcrb
adc
dec
lahf
in
das
and
mov
inc
into
insb
inc
mov
jns
hlt
jb
xor
rcrl
push
sub
cmp
pop
int3
xlat
aaa
mov
lods
dec
mov
ss
int3
xchg
and
dec
scas
adc
in
pop
shrb
outsl
sbb
sti
lcall
mov
pcmpeqb
mov
add
test
xor
xor
daa
xchg
inc
leave
scas
sub
cmp
pop
jle
jg
pushf
aad
dec
movsb
in
fdivl
stc
mov
mov
or
xchg
je
dec
scas
es
int
jmp
pop
mov
inc
out
lret
mov
imulb
in
into
or
stos
push
pop
ljmp
push
and
jns
insb
lret
sbb
in
push
mul
xor
pop
cmp
push
add
add
idivl
add
push
push
adc
xor
jb
fldt
mov
gs
jae
stos
xchg
dec
in
inc
or
mulb
out
sub
sbb
xor
arpl
add
pop
and
or
test
sub
mov
loopne
daa
cmpxchg
lcall
push
mov
mov
test
dec
mov
hlt
ds
mov
xor
xor
test
adcb
mov
push
cmpsl
xor
outsl
pusha
add
lods
mov
inc
jo
pop
or
sub
ja
mov
push
cmp
ds
nop
or
movsb
imul
xlat
pop
lods
pop
and
shrb
jae
icebp
jecxz
or
jns
ss
imulb
rolb
insl
push
pop
es
pop
in
shlb
inc
xlat
or
test
sub
add
out
pop
jne
add
push
push
xchg
mov
jb
repnz
ja
ja
xchg
scas
adc
xchg
fnstenv
jb
enter
aaa
lds
and
dec
mov
shll
ja
das
dec
test
scas
arpl
or
in
fsubl
cltd
loopne
lcall
xor
int3
add
hlt
jnp
mov
lret
lahf
into
movsb
sub
cmc
mov
pushf
xor
xchg
test
ds
xor
sub
or
shl
mov
out
xlat
loope
add
and
ret
pushf
sbb
rolb
clc
ljmp
mov
shlb
jle
shll
adc
pop
cmpsb
jle
adc
loop
imul
cwtl
add
popf
lret
mov
pushf
pop
hlt
iret
fcoms
jno
rorl
lods
and
pushf
push
or
fnstenv
inc
add
mov
ret
test
mov
adc
add
icebp
clc
and
pop
mov
loop
push
lret
mov
ja
mov
stos
mov
scas
adc
jp
fstps
cli
xchg
jge
enter
mov
dec
inc
push
xor
sub
nop
push
or
out
sub
in
push
fcmovbe
cmp
std
or
jno
push
data16
pop
mov
jae
test
aaa
mov
ror
test
pop
aas
xchg
insl
dec
xchg
mov
in
ror
dec
push
jl
dec
sub
mov
and
shrb
inc
lret
sub
pop
call
rcll
lret
cs
lcall
cmp
jl
mov
cmp
pop
mov
sub
lahf
cmp
out
cmp
arpl
aam
imul
push
mov
gs
aad
cmp
insl
xor
add
add
fsts
mov
push
inc
mov
sbb
les
jns
lock
loop
test
xchg
pop
fcompl
jl
std
add
pop
add
das
fisubrs
cli
pop
xlat
sti
arpl
pop
int
or
mov
adcl
lock
enter
flds
mov
lcall
or
xchg
mov
inc
inc
iret
mov
xchg
ss
lods
xchg
stos
jecxz
flds
mov
inc
cmp
push
mov
sbb
or
push
hlt
jecxz
push
insb
fstl
adc
sbb
and
xchg
aas
daa
iret
xor
insb
movsb
push
add
inc
mov
sahf
jl
add
adcb
cmp
sbb
movsl
pushf
sub
aad
xor
aam
jnp
dec
imul
cmp
xchg
push
hlt
movsl
jmp
out
int3
sub
push
shrb
mov
cli
pop
cld
data16
cld
aad
cld
or
scas
and
out
aas
out
aad
dec
pop
icebp
push
jnp
fists
aad
inc
jnp
movsl
mov
mov
stc
cmp
mov
scas
pop
popa
loope
call
pop
js
lock
test
xor
mov
or
cmp
jge
je
inc
sbb
xchg
popf
imul
popa
cmpsb
xor
mov
dec
add
add
repz
adc
jbe
aas
cs
lcall
xchg
test
lea
ds
mov
js
xlat
push
xor
outsl
sub
ss
ja
aad
jo
insb
push
jne
cmp
pop
lahf
mov
imul
cmp
ljmp
daa
and
adc
jnp
add
sbb
js
repnz
test
mov
jb
lret
inc
push
sbb
mov
or
xchg
shll
sub
adc
loop
enter
add
mov
mov
push
pop
dec
push
dec
inc
pop
cld
jae
mov
xlat
jnp
lret
xchg
adc
add
pop
mov
repz
jo,pt
xorb
lods
addr16
add
insl
ja
ss
scas
mull
pop
loop
xchg
add
or
inc
jns
aaa
push
jecxz
pop
out
lret
subl
adc
imul
and
addr16
lret
fcomip
fstl
sbb
fidivrs
mov
cmp
xchg
fstps
je
lahf
push
pusha
ljmp
and
xchg
rclb
sbb
pusha
test
ljmp
or
mov
push
arpl
jae
jmp
cmp
lds
sub
je
jp
jns
adcl
cmp
dec
xor
shlb
push
stc
adc
movsb
xchg
cltd
or
test
into
dec
push
mov
xchg
popa
lods
ja
add
das
pop
js,pn
xor
iret
sti
rcr
fistl
mov
jp
push
js
test
popf
ds
push
xor
mov
lret
xchg
testb
xchg
cmp
sbb
leave
sti
fmuls
ret
sub
xor
sbb
outsb
mov
adc
jmp
fsts
addr16
fcmove
xchg
dec
jmp
push
cltd
push
add
adc
hlt
out
pop
jl
xlat
and
sbb
push
out
stos
xchg
cmp
and
fmul
and
add
mov
xlat
xchg
mov
mov
inc
and
dec
push
push
lods
push
dec
subb
test
or
cmc
and
adc
mov
aaa
int
xor
imul
and
stos
jo
jmp
mov
mov
stc
add
dec
shlb
in
cmpsl
pop
sub
add
pop
gs
mov
xor
jle
dec
imul
pop
sub
out
lock
sti
jmp
fisttpl
push
xchg
pop
xchg
ret
popa
roll
xor
lahf
xchg
xchg
push
mov
dec
clc
jg
mov
add
pop
das
out
cmp
es
jp
in
fimuls
adc
xor
ja
mov
movsl
int
stos
cmc
mov
stos
iret
cmp
loop
lds
outsl
pop
test
fisubl
xor
lods
and
sub
mov
loop
sub
xorl
lret
lea
rclb
leave
sarl
inc
in
dec
dec
lds
xchg
dec
mov
nop
cli
inc
popa
testl
fwait
aas
cmp
test
out
cmpsb
xor
cmp
inc
in
enter
xor
mov
pop
jecxz
or
lret
mov
out
adc
out
and
insb
dec
pop
sbb
add
pop
ds
nop
xchg
xor
mov
add
sub
rcrb
std
mov
or
jae
xchg
push
or
or
mov
adc
enter
sarl
stc
jmp
lock
movsb
mov
insb
imulb
mov
and
cli
pop
inc
popf
stos
or
mov
adc
mov
fisttpl
in
clc
icebp
push
cmp
cmp
and
fcoms
adc
icebp
fst
or
and
lcall
aas
lcall
arpl
sbb
fldl
cwtl
mov
lods
addr16
sub
fstpt
mov
xchg
pop
movsb
test
cltd
pop
std
mov
sbb
pop
ds
mull
pushf
mov
hlt
xor
movsw
lret
and
cltd
pop
stos
ret
outsl
not
adc
je
xchg
pop
jns
xlat
mov
jmp
imul
jae
into
push
fs
dec
test
int
push
enter
fdivr
pop
adc
add
push
push
in
pop
imul
sub
cs
push
dec
sbb
xor
pop
sub
xchg
dec
mov
push
mov
pop
inc
iret
pop
sub
ljmp
cltd
cmpl
fsub
pop
pop
lret
xor
sbb
pop
jecxz
lods
jne
jb
ja
bnd
sbb
sbb
jmp
push
cmp
pushf
dec
stos
dec
int
push
xor
jns
xchg
mov
inc
push
mov
cmp
test
fisubrs
addl
mov
sbb
ljmp
bound
xchg
jae
in
cmp
sbb
sarl
mov
push
jp
xchg
pop
icebp
fsts
pop
or
loop
push
push
testb
mov
pop
int3
ljmp
xchg
pop
mov
and
cmp
daa
ror
lods
outsl
pop
mov
cmp
cmp
jmp
fsubl
mov
in
je
test
pop
movsb
cmpsb
js
xor
pop
xchg
cmp
jl
pop
int
repnz
outsb
fstpt
push
cmc
jno
inc
insb
lcall
aaa
mov
repz
push
test
dec
inc
jne
lds
lcall
xor
je
add
popa
jl
and
lret
pop
repz
jno
sbb
cs
xlat
ljmp
lret
test
lret
dec
mov
test
mov
cmpsl
cmc
and
aas
movsl
pop
cmp
out
call
xchg
and
add
je
in
int
jns
ss
jno
jb
pushf
outsb
mov
lock
jp
mov
jns
push
or
cmp
inc
popa
xor
xlat
out
dec
outsb
insl
xchg
add
test
jmp
sub
pop
jns
cmpsl
lcall
cwtl
push
adc
movsl
jmp
cltd
ret
imul
ror
nop
lods
pusha
sahf
and
fildll
or
jb
pop
mov
pop
adc
jne
fabs
cli
in
mulb
mov
xor
inc
add
inc
mov
xor
testb
sub
pop
scas
popf
sub
lods
sbb
nop
fmull
mov
xchg
popl
sub
lret
fadds
mov
idivl
xchg
mov
adc
sbb
xchg
popa
or
dec
nop
mov
jmp
jbe
mov
aad
mov
fisubrl
addl
sub
sub
mov
mov
mov
inc
xchg
iret
inc
xor
pusha
clc
mov
push
insl
lcall
sub
xchg
jbe
pusha
sub
pushf
or
mov
xchg
inc
jecxz
out
shll
loopne
adc
mov
xchg
mov
stos
mov
mov
incb
and
repz
add
xor
mov
push
sub
aad
sahf
mov
cmc
and
outsb
out
jp
and
sti
mov
pop
sbb
stos
adc
and
or
bnd
sbb
mov
test
iret
pushf
sub
jmp
sub
inc
jnp
mov
sbb
sbb
push
ljmp
or
and
and
jg
sub
pop
imul
lret
fdivrl
repz
add
loopne
jge
in
jmp
mov
icebp
push
adc
mov
int3
sbb
outsb
push
shll
pushf
call
lret
pop
aad
add
mov
in
push
jp
dec
inc
fwait
push
decl
mov
pop
lds
test
lcall
negl
jle
rolb
push
cltd
mov
rcr
dec
repnz
xchg
stc
arpl
out
mov
fimull
je
jle
and
lock
addr16
aaa
test
in
mov
xor
stos
clc
iret
and
xchg
mov
sub
call
pop
cmp
imul
mov
stos
adc
pop
stos
sbb
out
sub
cltd
xlat
adc
popa
pop
dec
dec
jbe
inc
jo
xchg
cld
pop
repnz
adcl
pop
mov
mov
jb
adc
in
jnp
xchg
adc
mov
xchg
jg
in
rolb
test
lea
ret
push
push
cmpsb
loopne,pt
inc
cmp
test
xchg
pop
push
mov
int3
mov
pop
test
lock
in
cmp
adc
mov
pushf
cltd
subl
xchg
test
and
jp
insb
loop
cmpsl
jb
mov
movsb
sbb
lcall
into
arpl
jle
lret
dec
adc
mov
rcrl
dec
sbb
add
daa
jbe
xchg
inc
addr16
dec
mov
mov
mov
dec
pminub
std
ret
adc
call
test
push
rcrl
arpl
add
lds
sbb
xlat
xchg
pushf
mov
or
sub
mov
push
lret
fimuls
adc
cltd
insb
jns
jbe
shll
sbb
or
rcrl
or
pop
in
into
stos
scas
or
jne
jne
push
fwait
test
loopne
pusha
fwait
ret
faddp
dec
and
sbb
pop
xchg
pop
mov
sbb
cmp
inc
push
lods
mov
movsl
pop
pop
lock
aad
out
jnp
hlt
ret
cli
les
pop
icebp
mov
jge
adc
ljmp
or
mov
bound
lods
push
add
mov
push
iret
push
icebp
lds
adc
call
fwait
mov
push
inc
scas
push
outsl
jno
das
daa
jle
pushf
loopne
xchg
push
push
jo
out
gs
xchg
fisubrs
popf
stos
icebp
dec
cmpl
nop
sbb
xchg
sub
sysexit
fistpll
adc
mov
rcll
cli
xlat
mov
fnstcw
andl
aas
jae
mov
push
add
sarb
in
mov
out
outsl
test
test
fwait
lea
jns
clc
negl
call
dec
jne
scas
fldenv
sbb
and
int
cld
movsl
lods
mov
test
push
pop
pop
notb
xor
movsb
sarb
js
popf
jmp
mov
and
xor
inc
and
pusha
mov
push
ljmp
aas
mov
cmpsb
jae
jl
inc
ja
nop
sahf
mov
movsl
jmp
sub
xor
repnz
pushf
popa
stc
xor
push
scas
and
icebp
xor
rcl
mov
add
aad
in
and
mov
sbb
jge
mov
subb
cmpsb
xor
lret
xchg
push
add
adc
addr16
pop
popa
je
cmp
repnz
xchg
push
mov
inc
loop
sbb
sarl
insb
add
mov
jmp
aaa
movsb
aam
xor
stos
adc
mov
in
jg
jns
dec
sbb
mov
pop
pop
push
fwait
stos
cs
dec
sub
in
lahf
fstl
xor
out
or
outsl
gs
inc
and
pop
sub
test
dec
and
or
imul
aad
and
mov
pop
jp
mov
dec
insb
in
scas
mov
enter
mov
jne
and
jno
push
and
lods
out
mov
xchg
mov
ficompl
out
dec
mov
mov
scas
sarb
scas
mov
cmp
push
inc
sahf
pop
das
fistpll
cmp
ret
data16
and
mov
cmp
xchg
ss
fidivs
ret
jb
mov
mov
testl
sub
fmuls
lret
faddl
xor
inc
mov
lret
lods
popf
in
dec
int3
sub
testb
jl
jle
cmp
lods
cmp
fistpll
push
jbe
mov
push
enter
ss
mov
dec
mov
mov
dec
inc
fwait
pop
je
xchg
mov
daa
shlb
shl
fldcw
lret
cmp
adc
cs
insl
rolb
cwtl
cmp
lret
inc
aam
xor
or
jmp
int
sub
jae
outsb
sbbl
and
cmpsl
dec
into
out
and
iret
ret
movsb
mov
push
push
push
pop
inc
sub
ret
mov
aam
iret
lea
mov
jp
mov
aam
mov
lds
imul
pop
call
mov
xchg
push
in
mov
popf
cmp
jge
shlb
xor
mov
pop
inc
movsb
push
cmpsl
dec
popf
inc
stos
insl
add
mov
adc
mov
sbb
loope
xor
xlat
shll
inc
pop
or
push
dec
cmp
lea
and
mov
and
daa
stos
inc
xchg
insb
int3
movaps
sbb
add
aaa
insb
sub
mov
gs
mov
stc
out
ret
jge
inc
or
mov
sub
add
jae
xchg
stc
dec
jb
cmp
inc
pop
mov
sbb
leave
or
aas
imul
in
rol
sub
in
mov
insl
dec
scas
and
data16
jb
sub
and
add
imul
mov
sbb
shlb
dec
icebp
cmpsb
add
push
adc
xorb
stos
mov
xchg
push
cmp
inc
jmp
aad
sub
rcr
jp
mov
jbe
xchg
adc
iret
sti
adc
add
iret
xor
out
pop
inc
cld
push
addr16
dec
pop
ret
icebp
outsb
decl
in
jl
xor
call
jne
lea
sbb
fmull
es
lret
xor
fsubl
or
sbb
or
push
pop
ljmp
fisubs
fwait
xor
sbb
add
ret
sti
xchg
xchg
daa
jg
sub
sbbb
add
jae
mov
adc
idivl
test
sub
ja
cmp
mov
mov
jl
push
inc
mov
imulb
sub
test
lret
sub
mov
cmp
inc
or
icebp
jge
sbb
fnstsw
movsl
jg
xchg
dec
das
out
pop
pushl
pop
ss
ja
shll
jg
cltd
xor
inc
xchg
jo
pushf
dec
or
mov
ljmp
xor
or
mov
push
adcb
inc
or
mov
push
or
cwtl
testb
push
dec
mov
std
repz
cmp
js
jmp
out
xchg
inc
lods
shll
xacquire
sbb
push
mov
mov
xchg
jmp
fsubrl
stc
in
xchg
mov
lret
mov
push
je
out
add
in
xchg
mov
sub
pop
sahf
jns
inc
add
add
lds
aas
nop
push
xor
inc
hlt
call
pop
inc
push
enter
mov
cmc
js
shrl
mov
xchg
or
je
pop
mov
or
pop
pop
or
xchg
push
mov
add
add
lods
decb
push
jno
sbb
or
sti
jo
inc
inc
popf
sub
cmc
jl
mov
daa
loopne
idivl
xor
push
cmp
mov
mov
faddl
int
jmp
inc
xchg
test
add
jg
sub
xor
pop
iret
hlt
aaa
xchg
sub
lods
in
cmp
sbb
inc
rcl
sbb
out
aas
xchg
out
cmp
int3
mov
test
push
dec
jns
shrl
pop
mov
sarl
or
or
adc
pop
in
out
mov
mov
adc
out
mov
jnp
ljmp
sub
scas
and
or
xchg
scas
mov
xorb
mov
push
daa
lahf
pop
xor
inc
add
or
int3
push
mov
mov
sbb
add
in
je
and
gs
sti
out
pop
inc
dec
cmpsb
out
mov
mov
inc
pop
xchg
lahf
mov
daa
ljmp
aam
mov
andb
fwait
pop
mov
mov
fisubl
into
cmpsb
push
push
adc
add
data16
xchg
loopne
fimull
mov
aaa
into
push
rol
fistps
xchg
mov
movsb
imul
aaa
and
inc
cwtl
mov
xchg
popf
xor
xor
mov
in
movsb
pop
sbb
dec
aaa
inc
jl
push
xchg
and
cwtl
and
clc
push
bound
xchg
pop
into
out
ret
test
ja
repnz
pop
add
data16
out
jno
push
mov
jne
cmp
pop
ja
call
mov
mov
call
dec
movl
popa
cwtl
mov
rcrl
adc
cmp
roll
icebp
mov
mov
sub
xor
cwtl
sti
sarl
in
lods
or
xchg
inc
into
sahf
test
mov
dec
jp
stos
in
cwtl
mov
jae
or
or
repz
push
fsubl
ja
stc
cmp
out
mov
or
lret
cmp
adc
jmp
pmulhuw
sub
and
lcall
fsubrs
mov
jno
push
pop
mov
sarb
es
fmuls
lds
add
jmp
inc
jp
test
sarl
and
mov
mov
outsl
rcrl
or
mov
mov
pop
xor
xor
jl
scas
sbb
push
int
and
or
in
add
popa
add
mov
adc
cld
sub
rclb
mov
sti
push
cs
rorb
enter
clc
inc
dec
and
adc
fisubl
adc
addr16
push
inc
or
inc
pop
xor
pop
adc
stos
sbb
xchg
out
popf
sub
dec
adc
mov
pop
mov
jle
in
lret
add
mov
in
shl
out
mov
lret
and
cmp
sbb
cmp
push
jno
adc
add
cmc
lret
hlt
and
inc
sbb
ret
ret
adc
inc
inc
js
popa
jl,pn
int3
cli
cli
aad
addr16
or
jns
jle
fadd
pop
lock
int3
xchg
jge
sbb
xchg
adc
loope
cmp
gs
inc
xchg
mov
imul
xchg
int3
notb
or
lock
add
fmuls
jbe
and
push
pushf
push
lods
fisttpll
aam
jne
add
and
rcll
push
jo
mov
dec
jle
icebp
int3
add
xchg
outsb
sub
mov
bnd
adc
push
rcrl
test
loope
pop
push
dec
or
push
dec
bound
pop
sub
idivl
lahf
fidivl
dec
jmp
js
jno
scas
fsub
jbe
adc
add
or
push
push
lret
fidivl
xchg
mov
inc
sbb
andb
xchg
imul
push
sub
outsl
clc
adc
jl
jmp
mov
ret
lcall
scas
addr16
and
and
filds
xor
loop
add
cmp
push
pop
mov
in
pop
cmp
cmp
or
ret
push
test
shlb
test
add
int
mov
fcoms
push
or
and
test
jle
push
lahf
cmp
into
gs
push
jbe
jmp
int
pop
mov
ljmp
ds
dec
mov
fsubrl
inc
add
stos
sbb
fabs
fimull
ret
xor
je
xor
or
xchg
cltd
hlt
fcmovbe
add
cmpsl
pop
jmp
jp
dec
iret
fincstp
jne
cli
aaa
arpl
sbb
cmp
mov
pop
push
outsl
xor
inc
xorl
mov
jo
notb
outsl
push
rcl
add
and
cwtl
sbb
subl
sub
lods
out
xor
cmpsl
xor
sbb
fwait
push
in
cmp
sbb
outsb
aas
lods
jecxz
std
cmp
ja
cmp
mov
cmpsb
push
fldcw
add
sub
and
cmpsb
sub
cmpsb
push
insl
jecxz
fs
out
fnstenv
into
mov
cmp
sub
pop
out
xlat
sti
clc
jle
adc
push
sahf
mov
inc
lods
insl
mov
push
jge
mov
jle
push
hlt
ficoml
cmp
nop
loope
clc
std
je
test
xor
jmp
negl
push
fldl
sbb
mov
or
adc
xchg
lea
insl
jmp
inc
or
inc
dec
push
pushf
je
xchg
stc
xor
imulb
lds
idiv
jmp
leave
mov
mov
js
dec
lods
leave
jmp
xor
repnz
loope
data16
jae
aaa
out
sbb
xor
push
mov
or
push
mov
in
js
jge
fs
xchg
cmp
add
je
fs
dec
mov
dec
add
shrb
dec
inc
pop
sbb
cmc
clc
ljmp
cmp
mov
inc
dec
inc
push
sub
jle
es
adc
aam
sub
daa
pop
dec
or
jne
adc
andb
cmp
jnp
xchg
and
mov
and
popf
adc
data16
divb
or
pushf
cmpsl
push
mov
pop
adc
icebp
sti
jecxz
jb
push
enter
out
jmp
call
jp
adc
mulb
sub
dec
js
add
lret
adc
sar
test
pop
fistpll
rclb
and
loope
ss
int3
repz
add
aas
add
push
push
cwtl
dec
push
inc
movsl
mov
cmp
dec
sub
in
adc
sbb
nop
pusha
add
pop
xchg
dec
push
mov
xchg
in
cmp
add
pop
dec
cli
aam
xchg
dec
ss
enter
push
lods
cmp
dec
mov
lret
ss
xor
pop
push
lcall
es
jns
popa
mov
mov
sbb
jne
jne
ret
fwait
popa
xchg
cmp
add
fwait
xchg
cmp
scas
push
push
dec
push
sahf
call
or
repnz
xlat
ret
inc
mov
lret
xlat
cmp
inc
sub
cmp
dec
leave
cmp
sbb
enter
cli
sub
ljmp
push
adc
jns
fs
mov
scas
mov
jp
or
pushf
cld
sbb
jns
or
lret
repnz
add
jl
adc
insl
inc
xchg
repnz
stos
or
aas
and
xor
sar
or
sbb
xchg
mov
cltd
mov
add
lea
fs
scas
lods
sbb
rolb
dec
cmp
cmp
jmp
cmc
lahf
cwtl
or
jb
pop
sub
pop
push
imul
or
cmp
xor
jo
mov
daa
mov
mov
xlat
gs
mov
mov
lret
cmpsl
push
pop
adc
loop
inc
push
test
fs
mov
or
out
stc
leave
inc
xchg
ds
stos
cmpsl
sbb
adc
out
mov
xor
dec
int3
pop
mov
mov
sbb
stos
sahf
lods
mov
fadd
and
in
pop
imull
mov
sbb
mov
push
xor
mov
ljmp
fidivl
pop
pop
cmp
in
pushf
jmp
pop
mov
cmp
in
xor
lret
sub
mov
xlat
sbb
jno
cmp
addr16
xchg
push
and
out
shl
enter
std
adc
out
cld
xchg
dec
lea
cmp
jg
loop
jp
push
push
and
and
or
dec
xchg
sbb
xchg
fisttpl
test
push
pop
loop
cwtl
add
mov
jle
pop
fimull
arpl
mov
clc
in
sub
movsl
and
loopne
sarb
mov
clc
es
sub
out
xlat
fmull
dec
mov
push
ficoms
inc
sbb
jecxz
sub
xor
out
jno
mov
pop
cs
aaa
out
call
xchg
enter
testl
or
dec
jbe
nop
es
addl
xor
push
xchg
popa
insb
insb
and
rorl
fbld
xchg
lods
mov
adc
or
xchg
out
xlat
cmp
cmc
xchg
adc
aam
dec
xchg
lea
jp
pop
mov
adc
push
and
fwait
add
push
jbe
mov
stos
dec
dec
dec
mov
pop
popf
shrb
enter
mov
lock
cmovs
lret
push
jae
jne
add
mov
orb
hlt
cmp
mov
xchg
push
lds
cmp
test
pushf
push
in
andl
pushf
divb
fistl
nop
push
fcompl
iret
mov
jge
pop
inc
mov
push
cmp
push
cmpsb
pusha
cmpsb
pop
test
push
fs
sbb
mov
fisttpl
pusha
pop
or
push
pop
mov
mov
cmp
push
and
mov
inc
or
fwait
cmp
push
pop
and
mov
pop
or
and
outsb
cmp
stos
mov
cmp
lds
cmp
mov
mov
or
jecxz
pop
lods
cmp
push
mov
mov
je
xchg
fldenv
cmc
ljmp
lahf
test
gs
call
rcll
jnp
add
dec
daa
push
lds
andl
cwtl
dec
inc
outsb
dec
rcll
jl
movsl
or
push
pop
subl
inc
push
stos
add
cmp
mov
stos
push
fcoml
xchg
mov
js
sbb
jge
inc
das
ljmp
inc
add
mov
inc
xchg
daa
push
lret
adc
xchg
and
jo
pop
jbe
pop
test
add
push
or
inc
stc
adc
inc
nop
add
cli
stos
cmp
lret
fiaddl
sahf
lods
sbb
fiaddl
test
xlat
rclb
loop
jle
dec
and
jg
jle
aam
stos
stc
xor
push
jmp
outsl
or
mov
sub
and
sub
xchg
mov
jge
cs
das
test
icebp
cmc
xchg
jne
stos
xchg
js
lret
lods
lret
cmp
inc
sbb
sahf
pusha
pusha
out
aas
dec
push
enter
inc
or
call
jecxz
mov
sub
out
mov
ljmp
stos
std
fsts
cwtl
xor
arpl
cwtl
ret
outsl
jle
or
mov
inc
push
loop
and
mov
lock
fcmovbe
and
xchg
ljmp
cmp
fcmovnb
ret
mov
inc
jmp
xchg
ja
push
rclb
sbbl
sub
insl
iret
out
jne
sbb
in
jle
not
sub
mov
cmp
fnsave
add
xchg
dec
push
fdivl
xor
adc
sub
adc
pop
xchg
outsl
in
aam
xor
imul
shrb
add
push
movsb
xor
adc
stos
mov
iret
mov
pop
pop
js
insl
adcb
inc
out
lods
test
lahf
fwait
int3
pop
fiadds
movsb
push
and
mov
add
std
cmpsb
in
fwait
and
pop
xor
lret
mov
je
xlat
stos
pop
xchg
push
lret
cmpb
repz
dec
jmp
inc
adc
cmp
ss
inc
adcl
bound
mov
je
bound
cmpsb
les
dec
xor
dec
outsl
jle
test
clc
jo
adc
sbb
push
xor
std
xor
mov
inc
out
add
mov
push
sbb
loopne
pop
cs
jns
leave
fsubrl
xchg
enter
and
enter
xchg
xor
pop
aam
js
xchg
dec
cwtl
cli
sbb
jle
xor
xlat
adc
out
in
repz
pop
dec
aas
mov
sbb
stc
shrb
sti
jg
in
lret
xor
xor
dec
sbb
pop
sarl
stc
xor
mov
dec
gs
adc
mov
test
cli
or
xor
and
clc
iret
sahf
xor
imul
adc
mov
or
ss
lret
mov
data16
popa
imul
push
sub
mov
inc
stos
stos
jbe
jb
call
lret
mov
cmp
pop
sub
iret
adc
pop
ficoms
andb
jnp
stos
aad
push
aad
mov
and
and
cmp
jne
push
fdiv
lea
jge
push
test
dec
dec
adc
sbb
jo
rcl
adc
jge
arpl
push
xor
dec
dec
pop
xchg
ror
in
stc
out
xchg
cmpsl
push
leave
inc
sti
adc
out
xor
aas
cmp
add
lret
and
inc
mov
daa
pop
cmpsl
mov
sbb
push
adc
bound
js
cmp
sub
test
gs
mov
cmp
rcl
pextrw
pusha
push
insl
xor
adc
js
out
fsubs
dec
ljmp
jbe
jg
pop
jp
iret
leave
dec
fsubr
addr16
sbb
jnp
adc
adc
sbb
sbb
xor
aaa
test
clc
inc
sbb
lods
scas
fisubs
nop
and
mov
xchg
mov
and
jl
icebp
mov
inc
mov
test
fistpl
shrl
fsub
jle
fisubrs
or
jl
adc
mov
and
adc
pop
data16
sahf
pop
cmp
adc
jle
push
call
add
repz
add
mov
cmp
dec
das
rcrb
imul
or
cld
xor
or
repz
ret
sbb
mov
ret
lcall
outsl
in
jp
test
push
xchg
in
fwait
xor
stc
add
add
lea
in
and
dec
or
add
lret
test
push
cmpsb
mov
sbb
xor
inc
leave
xchg
sbb
xchg
mov
sbb
jp
rcr
lea
jb
loop
iret
loopne
jo
hlt
pop
mov
dec
jbe
sbb
shlb
cmpl
sti
sti
shll
adcb
mov
xor
jge
pop
shlb
nop
mov
in
xchg
repnz
mov
dec
xchg
xchg
xchg
mov
or
xchg
stos
sub
push
lds
mov
push
jp
or
lds
mov
rcrb
mov
fldenv
cmpsl
pop
cmpsl
inc
scas
pop
inc
rclb
outsl
shlb
dec
sarl
dec
sub
adc
loop
jae
dec
xor
xlat
jns
xor
xor
inc
out
loop
push
dec
clc
inc
jle
pop
in
popf
pushf
data16
sbb
test
push
xchg
aam
movsb
js
int
pop
shll
in
cmc
xchg
call
xor
adc
mov
aam
loop
sub
mov
jbe
notb
sbb
jl
jl
repnz
outsl
ss
mov
imul
punpckhbw
mov
pushf
dec
jae
add
mov
repz
mov
jno
imulb
dec
cmp
mov
js
mov
mov
cs
cmp
stos
incb
lods
test
add
push
pop
in
xchg
outsb
dec
add
imul
sub
mov
pop
adc
insb
mov
in
adc
frstpm(287
cmp
hlt
inc
push
add
mov
out
lret
xchg
bound
pop
xchg
pusha
lods
mov
cmp
push
pushf
cmpb
adc
int3
cld
je
inc
sti
stc
xchg
nop
jecxz
out
je
xchg
sbbb
sub
dec
mov
push
jne
lods
fwait
push
test
repnz
pop
imul
sub
jmp
andb
cld
stos
mov
ffree
adc
pusha
scas
mov
pop
mov
and
and
outsb
mov
icebp
xor
sub
mov
add
gs
scas
xchg
jae
mov
mov
imul
xor
or
shrl
mov
xor
fcomps
insl
loop
aaa
mov
pop
push
push
fwait
cmp
adc
in
inc
mov
xchg
aas
add
cmp
leave
mov
dec
movsl
xor
mov
je
mov
sub
sti
adc
mov
jge
orl
adc
fs
pop
dec
std
inc
iret
clc
jb
jb
xor
test
dec
xchg
xchg
add
lret
push
or
mov
mov
out
iret
out
test
sahf
mov
test
dec
filds
in
xor
iret
push
sub
or
sbb
add
repz
sbb
pop
cmpsl
cmpsb
shrb
lcall
mov
xor
xor
sub
lock
xlat
cli
cmp
roll
adc
add
shrl
out
mov
sub
sbb
jg
loop
mov
xchg
mov
sbb
inc
test
js
inc
cmp
test
std
sub
inc
pop
push
cwtl
cmc
das
repnz
mov
in
stc
in
push
cmp
ret
sahf
aad
push
mov
mov
out
dec
and
dec
jecxz
mov
insb
sarl
push
push
scas
notl
popf
add
mov
pop
ds
arpl
fwait
scas
jp
lods
add
ret
adc
movsl
mov
in
ffreep
nop
addb
imul
sub
mov
cmp
sbb
fcoml
sub
and
adc
imul
stos
pop
out
inc
and
pop
out
rcrl
push
or
stc
test
inc
adc
nop
js
mov
sarb
out
pop
or
mov
xchg
mov
negl
imul
adc
add
xchg
ljmp
and
in
or
insl
sbb
mov
push
cmp
push
je
fcmovne
xchg
xchg
sub
aas
xor
loope
clc
sbb
or
push
cmp
mov
sub
hlt
jg
add
jle
and
test
lahf
lds
cli
shll
js
and
loop
or
mov
inc
mov
cmp
mov
mov
mov
ja
std
pop
xor
cmpb
push
xchg
inc
mov
xor
shl
push
imul
filds
scas
dec
push
aam
adc
jns
testb
adc
sbb
lcall
in
xor
out
cmp
sbb
arpl
lods
in
mov
stc
cmpsb
in
jle
data16
lahf
dec
scas
out
push
loope
mov
lods
mov
divb
pop
push
jl
and
cltd
mov
push
adc
xlat
loop
push
icebp
lods
push
scas
cmp
pop
inc
cmpsl
icebp
lds
jecxz
leave
ficoms
out
in
std
cmp
xchg
or
cmpsb
out
mov
out
cmc
scas
out
xor
imul
daa
pop
push
in
stos
aam
mov
dec
pop
enter
aas
repz
jmp
lea
frstor
or
das
pop
bswap
jae
ss
daa
rol
pop
test
pop
mov
mov
xchg
push
adc
xchg
lods
xchg
vpmaxsw
xor
rcrb
test
add
idivb
xor
hlt
stos
icebp
imul
loop
jbe
ffree
rorl
jge
pop
adc
sbbl
hlt
pushf
sbb
les
adc
push
inc
dec
out
ficoms
out
insl
pop
test
or
pop
outsl
call
roll
xor
dec
arpl
pop
dec
jl
or
repz
mov
dec
imull
jg
add
cmp
lock
fsubrp
push
pop
xor
into
std
jmp
or
cld
or
mov
mov
gs
ret
outsl
and
das
fcomi
stos
mov
inc
loopne
mov
dec
stos
scas
cmp
push
addr16
dec
pop
and
mov
js
cmpsb
mov
hlt
test
mov
xor
das
mov
lret
scas
jmp
lea
cmc
gs
or
push
and
fdivr
js
push
clc
hlt
pop
push
xchg
fwait
dec
mov
cmp
add
shrl
es
hlt
aam
jno
mov
sbb
sub
and
mov
xchg
inc
ljmp
es
popf
cmp
dec
add
enter
xchg
enter
dec
fistpl
shrb
adc
out
inc
add
inc
mov
loop
cwtl
jbe
shlb
xchg
shl
movsl
hlt
mov
add
mov
int3
mov
sub
addb
cmp
cmp
jge
out
cli
inc
pop
sbb
cmp
bound
in
out
into
mov
sub
jb
sbb
push
pop
std
xchg
loopne
clc
psubb
lret
ljmp
inc
push
adc
xchg
je
ss
hlt
pop
aas
dec
dec
xor
inc
adc
rorl
in
cwtl
outsl
add
shll
mov
pushf
push
clc
xor
jle
jbe
inc
call
leave
and
xorl
adc
lods
jns
jb
ret
xlat
test
repz
cmpsb
fs
sahf
int3
adc
and
mov
aam
mov
cltd
sbb
mov
in
addl
ret
jmp
dec
mov
sbb
pop
xchg
mov
pushf
xor
xor
pusha
andb
fiadds
test
add
push
mov
adcb
dec
bound
mov
mov
sub
rcrl
into
push
lcall
mov
jb
sub
pop
jp
lret
out
outsl
inc
dec
lods
movb
js
mov
dec
lret
jp
cli
jne
jnp
inc
pop
scas
cmp
xchg
xchg
add
mov
mov
aam
popf
mov
ret
pop
pushf
test
imul
dec
or
xchg
pop
test
ret
xchg
addr16
jb,pn
mov
mov
xor
movsl
aaa
or
fisttpll
pop
or
pop
negb
test
fidivl
jle
mov
lcall
or
cmpsl
push
push
xor
and
fdiv
shrb
push
mov
ret
std
push
sbb
pop
and
pusha
int3
add
lods
loope
or
cmp
imul
pop
arpl
inc
push
movsb
push
testl
fwait
daa
arpl
cltd
cmp
clc
aaa
jb
mov
push
add
lret
add
nop
pop
lret
xchg
mov
jne
sbb
mov
jnp
mov
dec
cmpsl
xor
loopne
repz
sub
cmp
jb
in
shll
cli
or
xchg
notb
add
xchg
inc
adc
in
xchg
hlt
cmp
jo
push
hlt
std
push
push
ljmp
jmp
mov
loop
dec
enter
stos
or
push
mov
out
xchg
and
stc
pop
fucomip
push
test
sub
pop
and
in
in
adc
xchg
mov
pop
dec
fstl
jbe
dec
xor
jl
mov
push
sub
aaa
xchg
roll
and
test
inc
pop
pop
nop
dec
out
ljmp
add
fiadds
sbb
scas
out
cwtl
sbb
sub
mov
mov
mov
aad
mov
dec
cli
jns
lret
inc
pop
fsubrs
out
xor
add
jo
cwtl
aad
loope
or
sub
push
out
pop
inc
cmp
shll
or
xor
movsl
movsb
mov
faddp
and
add
pop
lds
lods
shlb
nop
xlat
fdivrs
mov
stc
popf
gs
push
ljmp
xchg
jge
bound
xchg
shrl
ret
mov
xlat
xchg
push
push
rcrb
sarl
push
and
nop
mov
mov
or
mov
xchg
xor
nop
mov
dec
js
fildl
dec
mov
sahf
mov
push
mov
jnp
push
push
xor
push
mov
outsb
or
fsubr
gs
push
jp
xor
mov
sub
or
arpl
xchg
mov
cmp
fwait
js
mov
popf
lahf
mov
dec
mov
jp
lock
xchg
rclb
imul
popa
lea
xchg
lret
addb
ljmp
push
xchg
std
lahf
sub
adc
cmpl
xchg
mov
mov
sti
xchg
xlat
mov
pxor
adc
or
push
fcmovu
jne
shlb
mov
mov
push
push
add
mov
mov
in
add
lret
mov
scas
jmp
mov
pop
dec
or
add
cmp
adc
das
mov
dec
frstor
lods
loopne
ss
inc
jae
fnstcw
scas
mov
jmp
pop
push
cmp
add
mov
cmpsb
or
fnsave
dec
lret
sbb
dec
mov
xor
xchg
mov
out
aas
idivl
adc
inc
sbb
push
rcrb
in
xor
sbb
mov
sub
ficoml
inc
aad
sbbl
pop
fs
inc
mov
add
jl
inc
mov
mov
outsb
dec
jp
mov
jge
je
fistl
adc
pop
clc
inc
cwtl
sbb
add
mov
lcall
fwait
and
roll
loopne
push
inc
sbb
or
aaa
pop
clc
movl
loop
xchg
pusha
xlat
mov
stos
fidivrs
cmp
mov
sahf
cwtl
and
fwait
push
in
fs
or
dec
ljmp
lock
or
adc
ds
andl
xor
cmpsb
add
mov
push
lods
inc
push
push
stc
sbb
mov
mov
movsb
mov
mov
leave
data16
insb
xor
pop
add
test
mov
push
xchg
sti
cmc
dec
cmp
lcall
loop
inc
jbe
jp
std
fcmovnbe
push
scas
adc
lock
xchg
rcll
subl
pop
inc
fsub
dec
iret
movb
mov
scas
and
xchg
sahf
cwtl
xchg
fwait
and
add
mov
lahf
addr16
sbb
mov
ljmp
add
and
mov
or
pop
gs
or
ffreep
in
popf
mov
pop
adc
cmp
pop
insb
rol
sub
negl
ret
test
repnz
rorl
adc
leave
mov
ds
inc
xchg
cwtl
cmp
xchg
ss
jp
popf
pop
les
and
call
roll
push
icebp
aad
dec
dec
fldt
sub
sub
push
inc
mov
je
mov
add
and
aaa
out
stos
xchg
test
scas
cmp
fistpll
cmp
add
mov
test
dec
sti
jmp
out
stos
aas
or
mov
mov
pop
mov
aam
add
or
push
dec
pop
adc
rcl
shl
dec
jno
xchg
push
cmpb
lret
lods
push
mov
dec
push
inc
mov
cmc
xor
leave
jl
ret
ljmp
fs
cvtps2pd
sub
sbb
maxps
pop
mov
adc
hlt
std
loope
int
sbb
sub
mov
pop
dec
xchg
adc
pusha
js
dec
repz
ret
pop
cmc
and
sbb
jns
aas
ret
fcmove
addr16
jnp
test
fisubrs
push
shr
out
cmp
lods
push
outsb
addr16
push
mov
pushf
bound
scas
ljmp
cmp
in
hlt
xor
arpl
push
pop
scas
test
push
test
jl
idivl
mov
cmc
iret
jb
fsubrl
lods
lds
rcll
jno
leave
sub
add
cmp
call
mov
cmp
test
cmp
inc
pushf
mov
cwtl
cwtl
jns
xor
dec
adc
popa
dec
fcomi
in
clc
test
iret
aas
out
lock
inc
sbb
jl
pusha
sti
push
lahf
lea
dec
mov
cmp
lock
imul
test
dec
mov
ljmp
call
adc
mov
push
mov
sbb
mov
dec
lods
je
inc
and
sahf
dec
js
lahf
aas
dec
xor
dec
movl
loope
push
push
sbb
inc
fstpt
mov
fiaddl
xor
inc
out
movsl
lods
mov
xchg
pop
js
xchg
mov
sarl
mov
mov
inc
cmp
lock
jne
out
push
push
push
jnp
pop
bound
xor
ret
mov
inc
mov
xchg
and
in
mov
cli
scas
jo
xor
push
xchg
sub
das
sbb
loopne
pop
sub
pop
add
push
add
out
stos
push
lret
xor
daa
hlt
int
and
pop
push
or
shr
mov
outsl
inc
leave
test
push
push
movsb
loopne
inc
adc
jo
sub
scas
cmpsb
sti
mov
lret
mov
int
xchg
ds
scas
push
lds
or
ja
sub
xchg
mov
and
std
es
ret
test
inc
fsub
lds
push
xor
in
pushf
mov
clc
nop
int
fisubl
mov
xchg
and
cld
adc
fldl2e
test
shll
adc
pop
cld
add
sbb
movsb
jne
mov
lods
movsl
stc
fwait
or
sub
adcb
lods
pop
test
xchg
int3
in
aaa
fwait
push
sahf
jnp
push
iret
xor
mov
add
pop
gs
mov
enter
movsl
aam
inc
mov
dec
inc
and
int
push
or
sbb
iret
outsb
out
aas
leave
aaa
cwtl
fwait
push
dec
jne
mov
int3
inc
sbb
popa
fcmovnb
lcall
inc
enter
mov
addl
imul
inc
lret
pop
push
shlb
mov
jns
xchg
loopne
sti
icebp
cmp
jb
int
je
je
push
add
decb
or
loop
pop
and
loope
in
mov
stos
push
add
jl
cmp
sbb
popf
adc
mov
fs
pop
mov
mov
mov
rorl
or
sbb
mov
outsl
mov
push
or
push
scas
dec
cltd
sbb
sbb
fisubrs
add
mov
aas
jne
push
pop
inc
mov
fwait
jge
mov
clc
hlt
push
cmp
ficoms
enter
out
call
scas
push
and
mov
adc
xchg
add
cld
cmpsb
add
push
addr16
adc
ds
dec
mov
add
push
push
out
icebp
jp
dec
pop
mov
pop
roll
mov
add
call
dec
cmp
pop
fcomps
sbb
xchg
dec
enter
ret
jns
lret
fisttpll
mov
mov
xchg
and
jge
or
push
inc
aad
ja
cmp
test
or
dec
xchg
and
sub
jnp
scas
addr16
jo
jg
fcmovbe
jmp
std
jl
adc
mov
test
xor
pop
lar
fcoml
dec
rorl
repnz
ror
enter
mov
lret
in
shl
daa
leave
xor
push
cmp
rorl
xlat
adc
sbb
jae
rcr
into
push
push
js
push
cmp
sbb
mov
mov
and
xorl
daa
add
cmc
pushf
or
cmc
inc
ss
arpl
test
jecxz
fsubp
sub
dec
jne
jns
pop
and
sbb
sahf
ljmp
insl
dec
aaa
pop
jo
adc
xor
or
dec
mov
idiv
lret
xor
adc
das
add
ljmp
add
cli
jmp
aad
repz
push
fiaddl
push
sti
movsl
ja
gs
xchg
clc
bound
sahf
lret
xchg
mov
sbb
push
inc
xor
nop
int
fsincos
xor
je
je
push
xor
lret
sub
imul
lret
mov
pusha
lret
mov
cmp
or
imul
xor
sbb
jne
lcall
dec
xchg
in
pop
push
pop
int
xchg
loopne
movsb
jo
and
negb
sub
in
sbb
xchg
imul
lahf
mov
outsl
mov
in
filds
push
bound
and
int3
xor
mov
jne
cs
xchg
pop
push
and
outsb
stc
shl
fidivrl
or
sub
sub
lods
cld
cmpsl
mov
stos
dec
jb
dec
sarb
loope
sub
jmp
jae
push
mov
divl
pusha
or
mov
movsb
aam
sahf
fs
jle
int
jle
mov
rcl
lods
in
cmp
loopne
add
jp
lods
inc
lds
sub
and
lret
lods
rorb
movsb
dec
xor
lods
bound
test
dec
mov
gs
mov
lods
loopne
popf
shll
mov
push
xor
fs
fdiv
dec
ss
jns
adc
push
inc
movsb
in
es
or
ds
dec
cmp
sbb
xor
lahf
pop
ret
repz
iret
jnp
push
aam
and
cmp
and
sbb
dec
and
pop
xor
cmp
jb
jmp
aad
je
out
fdiv
imull
decl
push
pop
cmpsb
scas
ret
fbstp
hlt
les
adc
bound
pop
cmp
push
dec
ret
inc
xlat
pop
nop
and
push
aaa
fwait
mov
sti
or
sbb
out
cs
jb
mov
push
in
mov
mov
xor
pusha
inc
test
fstpt
jge
aas
mov
bnd
mov
add
daa
xchg
dec
jbe
lahf
insl
adc
jmp
in
rorb
adc
xchg
outsl
lods
push
aad
push
add
hlt
mov
and
xor
out
mov
nop
lods
mov
pcmpgtb
push
inc
pushf
jle
pop
movsb
dec
xlat
jbe
mov
or
lahf
dec
in
inc
push
fcomps
in
jg
jne
test
sti
and
sarl
push
jae
out
inc
sub
mov
call
mov
fbstp
leave
jnp
or
mov
mov
mov
ror
xchg
mov
sbb
xor
loopne
xchg
mov
xchg
dec
mov
adc
sbb
idivb
fimull
jg
mov
and
repnz
mov
cmp
mov
jle
outsl
out
push
stos
xchg
sub
xchg
push
repz
push
and
push
mov
ficompl
jo
into
in
outsl
rorb
scas
xor
mov
mov
push
inc
rcll
repz
std
inc
mov
insb
pop
inc
jb
jmp
int3
mov
xor
cmp
in
adc
mov
outsb
mov
out
pop
aas
test
scas
loopne
sbb
dec
js
dec
js
sub
jl
in
lds
jne
popf
mov
addr16
pop
inc
sub
rolb
cmp
xor
cld
cmp
add
mov
mov
add
ja
or
cmp
xor
sub
or
cmp
push
mov
aad
cwtl
popf
xlat
and
dec
fisubrl
or
ja
mov
fidivs
push
dec
cmp
out
mov
mov
insl
xchg
cmpsl
cmpb
out
inc
jecxz
adc
lea
mov
mov
js
adc
and
sbb
mov
aaa
xor
push
pop
addr16
ret
adc
lret
hlt
mov
mov
ljmp
mov
mov
and
mov
icebp
jne
push
cmp
push
mov
sub
add
mov
mov
xor
dec
sub
fs
mov
inc
lea
cmp
icebp
out
testb
in
imul
mov
and
popf
mov
loop
or
jb
xor
aaa
cmp
fcmovbe
shr
jb
lahf
dec
xchg
leave
adc
adc
sub
aaa
stos
sbb
push
popf
or
and
aad
cmp
repnz
cmp
daa
leave
sbb
push
out
sbbl
mov
faddl
das
xor
mov
cmc
mov
mov
mov
mov
lahf
dec
pop
cmp
and
cmp
sbb
push
cmp
data16
mov
mov
hlt
add
jge
inc
mov
and
mov
dec
adc
inc
mov
mov
adc
scas
dec
mov
cmp
jbe
mov
add
lahf
test
hlt
pop
adc
sub
xchg
cld
adcl
and
lds
lret
jne
ret
cmp
roll
dec
in
popf
arpl
jl
dec
inc
int3
mov
ds
into
pop
or
pop
repz
inc
movsl
das
stos
jae
jne
xor
rcl
mov
push
or
xor
sahf
cld
movsl
outsl
data16
cmp
test
mov
mov
mov
jge
out
std
cmp
es
adc
adc
sub
cmp
jo
sbb
or
lahf
stos
sahf
mov
leave
arpl
inc
pop
sbbl
ss
pop
or
into
or
lods
push
inc
push
shll
inc
popf
add
and
add
int
lret
jb
addr16
cmp
jo
pop
inc
repz
gs
test
int
test
scas
ds
or
cwtl
adc
pop
inc
xchg
or
orb
jno
or
cli
mov
rclb
sbb
push
xor
mov
jae
xlat
sahf
cltd
cmp
xchg
mov
dec
loope
mov
push
cli
bound
xchg
mov
mov
pusha
stc
sbb
and
sbb
mull
pop
stos
push
lret
jns
arpl
push
lcall
lods
nop
xchg
push
test
xchg
pop
adc
mov
pop
push
scas
cmp
mov
lock
hlt
mov
ljmp
lods
pop
jne
lcall
shrl
mov
enter
cltd
mov
pop
jmp
add
inc
inc
jne
jp
mov
movsb
lahf
das
and
es
xor
xchg
in
loopne
sbb
inc
stos
adc
jo
into
adc
and
mov
outsl
push
stc
sub
iret
imul
movl
stos
pop
push
int3
fiaddl
sbb
das
cwtl
arpl
xchg
cmp
int
int
fnstenv
sbb
test
mov
pusha
pusha
call
or
sub
pop
aaa
fimull
shr
xor
in
jo
mov
or
movsl
dec
mov
fsubl
xor
or
popf
xchg
int3
ds
popf
andl
in
xchg
and
xor
add
sahf
imulb
jnp
mov
sub
sub
dec
ret
jne
popa
cmp
mov
push
and
les
adc
adc
test
lea
roll
roll
push
adc
xor
das
inc
aam
jmp
sbb
push
iret
pop
and
mov
sub
imul
or
cmp
pop
dec
mov
iret
mov
into
dec
and
xlat
enter
lods
mov
or
cs
fnstsw
pop
cltd
add
dec
jmp
ja
setle
cltd
inc
test
mov
sub
arpl
ficomps
out
and
insb
mov
mov
clc
jb
icebp
sahf
idivl
and
sub
divb
add
dec
ljmp
xchg
fwait
xchg
ret
sti
push
jmp
lods
xor
add
inc
mov
xchg
fcom
push
sub
dec
lds
dec
stos
xor
jecxz
mov
inc
sarl
in
jecxz
stos
add
dec
nop
decb
and
sbb
sub
jne
dec
repnz
popa
stos
rcrb
cmpsb
adc
cmp
and
mov
mov
lea
repz
and
cmpl
fisttps
sub
les
sub
movsb
aad
cmp
aaa
repz
jno
fimull
std
mov
cwtl
lcall
jge
adc
or
add
les
cltd
inc
add
mov
fdivs
xchg
jge
enter
in
movsb
fucom
cmc
push
adc
cwtl
pop
lods
pop
in
jne
dec
pop
or
iret
sbb
sbb
cmp
ret
imulb
jmp
test
push
into
xorb
pop
pop
pop
mov
test
and
xchg
cmpsl
loopne
dec
pusha
out
fimuls
cltd
inc
pusha
cmp
div
mov
pminsw
cmp
rcll
xchg
mov
dec
dec
imul
or
daa
sbb
sub
ficomps
sbb
jnp
jo
push
idiv
loopne
or
mov
and
cltd
push
enter
loop
aad
aas
sub
rorl
adc
cltd
imul
cmp
stos
ja
jmp
icebp
pop
outsl
inc
or
rcrl
mov
dec
rorb
jbe
mov
pop
push
ja
cli
movsb
mov
xor
mov
lahf
ja
arpl
test
mov
sbb
cmpb
es
dec
cwtl
out
inc
jg
mov
add
xor
int
and
out
mov
jns
sbb
dec
fucom
shlb
scas
inc
cmp
mov
outsb
xchg
and
xor
rolb
gs
pushf
out
call
xchg
pushf
mov
test
cmpsl
push
fdivs
adc
cltd
jecxz
inc
lea
lahf
enter
pop
inc
cli
lahf
cmp
push
push
lret
repnz
lods
lret
lret
adc
or
pop
aaa
xchg
sbb
xor
mov
inc
cmp
push
les
outsb
sub
inc
xchg
call
cmp
push
popf
lods
loop
in
mov
rep
lds
push
mov
cmp
in
outsb
or
xor
std
js
mov
add
out
add
jle
fucomp
clc
les
push
mov
icebp
stos
int3
out
jo
testl
or
movsb
lahf
or
mov
dec
test
add
inc
fdivrs
andb
pop
aas
push
pusha
addr16
mov
mov
mov
adc
xchg
mov
jecxz
outsb
out
test
in
test
and
les
push
push
or
mov
mov
add
sbb
in
cmp
negb
push
int3
test
test
jg
aas
addr16
pop
fdivrs
or
sub
push
inc
xchg
sbb
mov
ljmp
test
stos
sub
and
sahf
mov
mov
loope
and
leave
bnd
mov
int
aam
daa
push
out
inc
cs
addl
mov
fdiv
test
inc
lock
pop
ljmp
push
outsb
dec
jle
es
mov
dec
lds
addr16
mov
pop
call
sub
dec
push
sbb
repz
sbb
data16
fsub
gs
and
jle
in
adc
cmp
sub
push
push
test
loope
xor
pop
sbbb
or
sbb
out
out
mov
sbb
dec
or
ret
or
pop
imul
cmp
pop
sub
out
cmp
and
mov
mov
inc
pop
sub
dec
xchg
sbb
bound
push
sbb
outsb
lret
cmpsl
jae
in
add
push
mov
cmp
call
inc
int
sub
sub
xchg
and
inc
faddl
daa
out
dec
xchg
add
idivb
ljmp
fsubp
or
jno
push
stc
scas
addr16
adc
in
stos
xchg
fmuls
movsl
push
pop
dec
pop
lret
stc
pop
sbb
sub
or
sbb
fwait
cmc
jecxz
cli
mov
sub
or
inc
test
mov
inc
dec
jle
daa
add
add
loopne
testl
call
pop
clc
pop
in
roll
rcr
out
push
or
jo
mov
out
out
dec
ret
arpl
lods
or
testb
inc
xchg
sub
cmp
add
imul
das
bound
rclb
sub
or
fcom
sub
add
in
add
sub
leave
out
nop
and
test
mov
sbb
cld
sbb
cmp
xor
inc
repz
push
mov
mov
sub
movsb
fsubrl
shr
orb
clc
adc
cmc
ficoml
mov
xchg
sub
lock
jecxz
out
loope
jecxz
add
jge
call
inc
in
xchg
lret
mov
std
jnp
pusha
pop
add
xor
enter
insb
jp
mov
cmp
movsb
lret
pop
mov
xlat
jae
int3
out
cmp
in
mov
pop
int
test
pop
movsb
sub
add
je
fsubrs
int3
sub
es
mov
or
stc
mov
dec
mov
jne
pushl
sub
mov
out
fwait
push
fmull
sub
mov
js
fidivrl
mov
or
insb
add
and
mov
xchg
addr16
notl
inc
lret
dec
popf
xor
loope
les
arpl
fstl
sbb
push
out
jo
mov
imul
aad
push
or
inc
in
fwait
je
xchg
sub
and
aam
je
adcl
pop
enter
pop
xorb
roll
add
mov
jmp
ret
dec
mov
add
addl
daa
lret
jnp
dec
jp
pop
int3
loopne
inc
out
mov
imul
jl
and
pcmpgtw
mov
xchg
sbb
jo
and
lods
xchg
sbb
lock
testb
push
incb
loop
dec
push
fidivs
adc
adc
cmpsl
mov
jbe
and
push
adc
data16
stos
mov
pop
in
mov
inc
xchg
les
rcrl
sub
pop
xchg
es
sub
loop
inc
mov
push
out
ljmp
lcall
xchg
pop
fstpt
addl
out
outsb
mov
mov
ljmp
int3
cmp
jae
hlt
bound
dec
std
add
in
jecxz
mov
inc
push
jns
jmp
roll
dec
inc
dec
sub
addr16
fwait
jbe
loopne
dec
jb
lock
fcoml
addr16
stos
mov
mov
negl
add
push
dec
xor
cmp
adc
jns,pn
sub
arpl
scas
stos
cltd
stos
xor
sub
pop
sbb
out
lahf
mov
xchg
or
and
adc
jnp
imul
jmp
inc
xor
xchg
mov
clc
xlat
xchg
push
sysenter
out
mov
in
lret
xor
sub
or
adc
adc
dec
js
mov
cmp
push
shl
and
or
aas
push
and
sbb
les
clc
or
subb
mov
xchg
jbe
leave
fstl
sub
push
add
pop
lret
nop
xchg
test
shrl
test
ja
shr
movb
mov
lds
fisubrl
cltd
int
cmp
insb
leave
inc
js
add
ficompl
xchg
dec
test
lds
add
inc
cmpsl
ljmp
daa
mov
scas
sarb
xchg
pop
pop
pop
cmp
push
cmpsb
adc
sbb
mov
mov
repz
shlb
cmp
outsl
cwtl
mulb
sub
dec
xchg
cwtl
inc
ret
cli
cmp
dec
cmc
fs
add
add
std
mov
es
xor
xchg
test
cli
add
mov
sahf
push
push
mov
xor
mov
dec
je
out
mov
fimull
sub
pop
adc
sbb
cld
add
arpl
inc
xlat
icebp
add
push
bound
cmp
xchg
imul
ja
and
adc
xchg
inc
cmp
pop
dec
icebp
cwtl
pushf
mov
outsl
enter
movsb
rcr
out
mov
jmp
xchg
adc
and
roll
jp
adc
xor
test
mov
pop
sbb
pop
fdivr
sub
mov
push
jp
push
push
push
orb
cmp
enter
fmull
in
andb
pop
scas
mov
aas
inc
mov
daa
xchg
xor
cmp
pusha
dec
dec
hlt
jmp
iret
std
in
jnp
movsl
jo,pt
mov
push
les
cmc
jge
leave
js
in
pop
movl
push
out
stos
lods
clc
jg
pusha
mov
and
imull
inc
loop
sbb
and
dec
add
ret
push
mov
arpl
nop
fwait
jle
sub
jp
xor
repnz
lock
pop
lea
repnz
inc
addr16
out
push
push
lods
push
mov
cmpsb
add
or
jp
xor
pop
cmp
add
sbb
cmpsl
adc
mov
adc
and
push
push
sbb
loope
movsl
stos
das
loope
sub
test
into
mov
sbb
enter
fimuls
inc
pop
push
inc
inc
rcll
jecxz
mov
mov
inc
scas
push
push
fs
sbb
cld
and
in
mov
shlb
shlb
xor
gs
xchg
cmp
mov
jg
jecxz
dec
mov
and
arpl
push
js
movsl
mov
push
push
xchg
loop
or
lcall
lods
jne
shrb
data16
sbb
insb
mov
inc
dec
out
xor
sub
xor
aaa
je
push
add
push
add
jo
sub
cs
inc
rol
movq
mov
cmp
mov
dec
ja
js
add
sub
enter
add
mov
in
dec
jnp
lods
std
into
frstor
add
nop
push
mov
cmp
xlat
rcrb
jge
jno
aaa
mov
xchg
mov
movsl
sub
mov
arpl
insl
sbb
imul
cmp
jbe
xor
je
jne
mov
popa
out
jne
ljmp
movsl
pop
mov
push
lods
scas
and
adc
lahf
push
lcall
lahf
xor
idivl
xor
mov
or
outsb
test
jmp
lea
imul
jmp
jl
ja
dec
push
mov
mov
jbe
push
repz
in
pop
sbb
push
popa
inc
fdivrs
fxtract
ss
in
and
jl
cltd
scas
test
mov
stos
push
push
and
jns
xchg
loope
out
sbbb
aaa
test
movsb
pop
ja
xchg
mov
xchg
push
subl
mov
mov
and
fs
add
fwait
pop
jle
push
imul
and
mov
cltd
ja
mov
jp
cmpsb
das
in
and
test
add
sub
mov
add
idiv
or
fcmovnu
cltd
stos
and
push
or
pop
aaa
rolb
int
pop
jb
fldln2
jl
in
ret
test
daa
call
jmp
inc
sarl
pop
or
stc
lret
xchg
mov
cmpsb
dec
mov
mov
stos
fwait
popf
mov
cmc
nop
mov
roll
mov
enter
sarb
or
jb
xor
jle
fsubrp
mov
push
xchg
jns
je
shlb
or
jge
mov
xchg
fwait
add
shll
fidivrs
inc
lcall
and
movsl
xchg
std
data16
es
int3
and
call
jne
test
imul
xchg
subb
inc
or
and
add
lock
mov
sbb
sub
nop
add
cli
imul
mov
ja
xor
daa
pushf
mov
xor
enter
call
adc
imul
jmp
std
call
adcb
stc
xor
xor
and
sti
lods
gs
adc
dec
outsl
sbb
mov
test
in
lds
imul
xchg
lods
test
sbb
sub
adc
adc
pop
lcall
in
imul
and
stos
add
shll
push
mov
lods
mov
jg
loope
in
insl
pop
sbb
js
jb
icebp
push
add
mov
push
sbb
dec
pop
xchg
hlt
sti
jmp
push
lahf
cmp
mov
sti
pop
mov
push
inc
test
mov
sbb
xchg
xchg
sbb
aam
xor
xchg
out
and
xchg
or
out
in
lret
ds
test
or
hlt
jae
shl
leave
movsb
inc
out
lcall
movsb
push
fnstenv
mov
out
ror
push
call
sahf
sub
cmpsl
loop
scas
dec
shl
ss
loope
or
adc
jl
mov
nop
xchg
test
inc
in
push
leave
and
mov
add
mulb
fistpl
mov
pushf
jecxz
sti
insb
or
xor
dec
sub
and
jnp
mov
mov
cmp
out
add
and
inc
insl
std
mov
scas
push
fwait
jbe
cmp
mov
mov
add
sub
cld
lock
fsubp
lcall
popa
movsl
ds
jmp
pop
sub
enter
push
addl
ret
test
lds
fsts
inc
scas
mov
adc
pushf
xchg
mov
test
jae
arpl
shll
rcrb
out
mov
cs
loopne
data16
mov
sub
and
loop
pop
sub
test
inc
inc
imul
xchg
fldt
outsl
neg
mov
mov
jo
or
test
sub
sbb
mov
sbb
cmpsb
fmull
clc
inc
pop
repnz
fsubrs
push
sti
sbb
mov
push
inc
ret
xlat
jb
leave
ret
stc
ljmp
pushf
and
dec
out
in
push
mov
outsl
push
add
dec
push
mov
jmp
nop
cmp
push
mov
inc
mov
jmp
dec
icebp
dec
scas
jp
dec
hlt
cltd
push
movsb
push
xlat
adcb
lret
xor
repnz
mov
cmpsb
pop
bnd
mov
or
cld
out
cmp
sbb
int3
ja
xchg
fs
push
dec
mov
jne
imul
cmp
adc
sbb
push
cmpsb
and
stos
jae
adc
sbb
out
leave
aam
inc
mov
mov
pop
sub
sub
mov
enter
sub
lret
xor
or
call
out
xor
dec
adc
loop
fldenv
or
movzwl
into
mov
sub
sub
push
dec
add
ror
in
push
dec
out
imul
pop
sub
imul
out
in
cmc
push
or
mov
mov
ljmp
adc
dec
dec
or
fs
xchg
cmpsl
push
sbb
in
jecxz
push
inc
mov
nop
cmpl
cmc
insl
pop
jb
lret
jg
xor
shlb
movsb
out
push
mov
ret
outsb
fadd
enter
jl
mov
mov
pushf
mov
ficompl
and
sbb
push
mov
mov
es
xchg
adc
push
mov
add
sub
fisubs
cmp
jb
daa
mov
add
dec
xchg
cmp
jo
outsb
test
xchg
setg
mov
and
jge
repz
inc
mov
test
sbbb
into
xchg
mov
mov
add
add
imul
mov
adc
mov
stos
or
cmp
mov
ds
jns
pushf
mov
icebp
popa
inc
sbb
clc
mov
xor
daa
imull
or
mov
cmpl
addr16
div
push
arpl
xlat
and
movsb
pop
mov
xchg
jb
fists
jnp
xchg
test
iret
mov
aaa
fwait
imul
repz
lea
mov
repnz
jmp
pop
into
sbb
stos
cltd
cmp
mov
mov
mov
ss
lods
cmc
lcall
adc
push
push
stos
fs
xor
or
add
adcl
mov
das
lahf
cmp
jmp
xchg
mov
aas
dec
push
test
jns
mov
mov
mov
xchg
xchg
and
and
popa
ret
lret
movsb
pop
dec
push
lds
or
subps
pop
fpatan
inc
lahf
adc
dec
lods
in
xor
xchg
je
sub
scas
int3
cmp
repz
mov
sahf
mov
mov
aam
jecxz
int3
stc
adc
mov
stos
cli
insl
in
jmp
sbb
pop
test
mov
ds
mov
mov
dec
hlt
in
inc
dec
cld
push
sub
mov
fs
pop
pusha
inc
fistpll
in
pop
inc
lock
adcl
imul
jecxz
lock
fcompl
jmp
testl
mov
and
mov
and
divl
mov
addr16
cmp
iret
push
adc
cmpb
test
popa
xor
out
outsb
enter
jge
arpl
test
cmc
enter
fdivrs
sbb
shlb
aaa
paddb
cltd
adc
lret
sbb
jmp
sub
inc
shrb
mov
jae
inc
mov
dec
add
xchg
dec
lret
cmp
push
test
outsb
pop
mov
jl
mov
in
test
cltd
mov
shr
lds
hlt
inc
push
cmp
sbb
xchg
and
ret
lahf
mov
fcoml
mov
and
or
jnp
inc
insb
jo
and
push
xlat
insl
pop
mov
mov
mov
jb
xor
mov
push
dec
orl
jne
sub
arpl
sub
push
push
nop
ret
pop
adc
ds
xchg
cs
rcrb
cld
push
in
jl
push
push
jg
shl
push
add
sarb
jae
cli
les
cmp
stc
das
pop
sbb
push
fs
sub
fiaddl
push
fdivp
fisubrl
in
fs
or
imul
lret
lret
dec
and
or
ja
mov
add
mov
dec
dec
xor
xor
mov
lock
mov
cmpsb
adc
sub
int
mov
push
inc
bound
push
cmc
cmp
mov
sub
fildll
lahf
and
aaa
mov
leave
mov
mov
call
ds
add
or
pop
in
int3
dec
and
xchg
xor
in
fnstsw
es
jbe
stos
mov
cmp
cltd
andb
cmp
sbb
xor
xchg
add
into
ret
leave
mov
movsb
xchg
sbb
jmp
push
jnp
lret
movsl
jle
mov
mov
mov
out
cltd
shlb
test
mov
xchg
clc
sbb
cmovno
dec
adcl
lock
imul
data16
sti
int3
jnp
cmpps
xor
lcall
inc
daa
cmp
jb
fisubl
pop
aas
xor
jb
jnp
insb
pusha
sbb
mov
in
outsl
xlat
fldcw
adc
arpl
sub
mov
xor
das
insb
loope
gs
adc
xor
cli
rcrl
sub
adc
add
sbb
xor
ja
sub
cltd
in
sbb
ret
sub
int
adc
jmp
cmp
cmp
sbb
adc
xor
cmp
test
cmp
pushf
push
push
push
add
cmp
xor
imul
icebp
mov
js
pop
jae
es
in
mov
popa
cli
addb
es
jl
xchg
gs
xor
mov
xor
pop
adc
inc
push
lcall
jae
or
adc
fcomps
push
daa
mov
inc
dec
arpl
sub
pop
mov
push
xchg
bound
aad
das
lahf
inc
xchg
jmp
or
roll
mov
jl
mov
dec
dec
in
loope
mov
mov
mov
or
data16
xor
mov
inc
and
movsb
push
popa
addr16
notl
cmpsb
adc
jns
pop
xlat
iret
std
pop
add
adc
je
cltd
jae
xchg
jno
je
add
stc
sub
xor
into
xor
xchg
push
mov
lcall
push
loop
xchg
xor
pop
xchg
ljmp
test
pop
jne
inc
mov
pop
inc
xchg
repz
jae
inc
add
aas
repnz
adc
iret
jmp
in
push
aam
adc
pop
and
cltd
lock
add
lods
xchg
pop
add
enter
and
sbb
cltd
dec
aaa
jle
mov
mov
adc
add
dec
sbb
std
jmp
aad
pop
jg
cld
pop
gs
movsb
nop
imul
insb
sbb
mov
push
aam
stc
imul
dec
pop
sti
xor
cli
outsl
rclb
adc
or
out
cmp
movsb
in
loop
inc
sbb
sahf
sbb
dec
ljmp
cs
lahf
shl
xlat
dec
sbb
adc
jle
dec
jnp
stc
nop
mov
push
leave
cmp
sar
xor
cmpl
mov
xchg
pop
xchg
fnstenv
inc
hlt
jno
fld
cltd
call
adc
dec
mov
dec
xor
in
div
and
xor
rorl
pop
sbb
jne
int
orb
lods
insl
rorb
add
xchg
cs
push
int
fmull
lds
std
pop
xchg
in
out
inc
std
or
jle
jno
stc
scas
or
js
out
call
scas
ljmp
pop
iret
inc
pop
leave
mov
push
stc
push
nop
sbb
repnz
stos
js
sbb
clc
mov
jmp
cwtl
jge
xchg
xlat
dec
lds
sub
negl
jp
sbb
dec
mov
adc
loop
xor
leave
pop
pop
mov
nop
cmp
je
inc
stos
mov
insl
push
push
ljmp
push
fcoms
test
test
cmp
mov
sbb
stc
mov
or
inc
push
pop
data16
mov
jns
cwtl
dec
sbb
sbb
xchg
dec
jmp
jnp
xchg
add
repz
aad
int
js
xor
lret
in
rcrb
aad
inc
lods
loope
mov
lcall
or
bound
hlt
dec
rol
push
and
mov
sbb
or
lea
ja
std
xor
mov
xchg
mov
cltd
lret
jo
lods
pushf
or
jg
cmp
fildll
ja
sbbl
push
mov
ja
lock
in
ret
sbb
push
sbb
xchg
cmpb
lcall
loopne
orb
fmuls
int
sub
test
int
mov
mov
ficoms
bound
cmc
mov
or
insb
fistpl
and
jecxz
test
filds
xor
mov
icebp
xchg
aad
pop
insl
adcb
scas
insb
ret
jb
xor
repnz
jne
stc
xor
in
gs
ljmp
ficoml
sub
cs
sbb
mov
or
dec
mov
jne
push
xor
sbb
int3
xor
cltd
jns
jmp
jmp
jno
adcl
inc
daa
mov
call
and
ficoms
fildl
push
sahf
or
out
sub
push
and
cmpsb
insl
daa
icebp
fcmovb
dec
insb
scas
out
fs
movsl
jecxz
ja
adc
scas
pop
or
fld
addb
inc
jb
lret
mov
in
out
mov
vphadduwq
jecxz
jle
repz
adc
cmp
icebp
push
sub
fisttpll
dec
mov
fwait
lret
adc
movsb
sub
leave
and
loopne
xor
jecxz
add
push
mov
mov
rclb
jge
das
adc
lahf
add
jb
or
ja
scas
mov
xor
mov
mov
daa
push
dec
mov
js
inc
rclb
shll
ficomps
mov
mov
push
adc
icebp
icebp
push
fistl
pop
popf
pop
mov
leave
xchg
bound
mov
andb
sub
mov
andb
cmc
adc
xor
in
int3
mov
ja
mov
sbbb
adc
mov
xchg
es
xor
out
ret
dec
adc
dec
jp
jecxz
in
iret
jae
dec
test
dec
enter
push
in
ljmp
cmp
lea
jno
mov
aad
ret
push
jecxz
jmp
dec
mov
pop
cmp
lds
sahf
mov
cmc
inc
test
ja
aaa
push
jg
add
jns
dec
adc
push
xchg
add
stos
call
nop
sub
inc
add
idivb
push
add
cmp
imul
movsl
aas
cs
sbb
jecxz
mov
aas
adc
add
adc
cltd
ret
inc
cld
dec
jne
icebp
mov
jl
xlat
xor
std
cmp
dec
pop
push
cmp
pop
scas
mov
loop
pop
push
pop
repnz
inc
in
and
scas
daa
mov
out
push
mov
repz
ljmp
xchg
or
in
pop
cmp
adc
xlat
imul
jecxz
loopne
xor
xchg
rclb
mov
insb
cli
adc
scas
sub
pop
or
inc
xchg
ret
or
fisubrl
movsb
or
out
add
aad
adc
add
xor
push
sub
sahf
orb
pop
pop
shll
mov
sti
rcrl
mov
and
test
das
dec
in
push
imul
xchg
or
outsl
cmp
rcrl
test
pop
cmp
mov
fsubrl
push
rcl
push
adc
leave
sbb
rclb
push
mov
sbb
push
sarl
xor
lret
out
je
xor
jo
call
add
cld
ja
jmp
cmpsb
adc
push
sub
push
scas
push
ret
outsb
nop
std
xor
sarl
out
push
mov
mov
push
dec
jns
dec
test
sub
decb
nop
adc
in
imul
mov
ficoms
nop
fstp
and
sbb
jmp
dec
pinsrw
rolb
out
in
inc
mov
and
mov
hlt
movsl
mov
mov
lds
fsubs
and
stos
or
pusha
add
adc
mov
adc
or
sarb
stos
and
popf
cli
push
cmp
cmp
rcll
sbb
cmp
fnstenv
pop
jnp
push
mov
inc
jnp
jl
inc
or
jo
mov
scas
or
je
or
pop
xor
xor
push
mov
ret
xchg
cmp
sbb
test
pop
idivb
scas
test
bound
loop
sub
shrl
imul
sahf
sub
int
dec
jae
addr16
jno
cwtl
cs
push
movsl
pop
mov
ja
fs
mov
ret
and
or
and
mov
scas
push
ss
xchg
xor
into
jp
mov
addr16
stc
mov
push
xchg
cs
sbb
inc
push
aas
lods
sub
lcall
repz
adc
cmpsl
enter
int3
mov
je
rolb
arpl
or
dec
test
mov
pop
popf
arpl
es
push
in
daa
es
call
out
fists
inc
and
inc
movq
inc
or
xchg
xchg
shr
cmp
enter
test
popa
or
arpl
xor
mov
dec
mov
jg
mov
mov
push
jnp
inc
push
cmpsl
and
sub
sbb
aam
sub
arpl
in
sbb
sbb
mov
icebp
inc
push
add
scas
pop
dec
jl
jecxz
test
fdivrs
rcll
cltd
pop
cmpsl
test
or
or
push
adc
and
pop
mov
push
leave
adc
scas
aad
clc
or
add
adc
adc
loopne
addb
scas
push
mulb
idivl
jns
push
test
or
scas
mov
ljmp
mov
ret
cmp
push
and
mov
int3
push
xlat
fbld
xchg
xor
xor
mov
insb
inc
jmp
or
popf
rorb
cli
pop
ret
inc
pop
in
addr16
out
and
xchg
xlat
es
popf
sub
into
aaa
jmp
or
inc
add
aad
inc
mov
fstpt
in
inc
add
stc
fld
add
jne
and
mov
jne
xchg
fisubs
test
push
inc
icebp
jno
sub
ret
dec
js
mov
sub
pop
dec
andb
dec
in
adc
mov
mov
mov
pushf
imul
sub
sbb
pop
imul
or
jbe
jmp
sub
lret
pop
orl
popa
sbb
mov
test
lret
and
dec
es
imul
lea
movsl
idiv
loopne
mov
les
push
fdivs
add
mov
call
jnp
jne
xchg
std
and
cmpsl
lcall
mov
jne
cli
clc
push
enter
fcompl
push
adc
mov
xorl
aas
jns
add
inc
xchg
fdivs
jg
adc
adc
mov
dec
pushf
into
xchg
sbb
imul
in
int
sbbb
mov
push
sub
add
into
iret
jp
mov
sub
sbb
addr16
xchg
sbb
js
xor
insb
cmovae
lcall
enter
bound
inc
ds
inc
hlt
imul
movsl
pop
lret
incl
mov
lock
cmpsb
mov
sbb
xor
int
add
cmp
jle
pop
cmc
lea
sub
mov
inc
cmpsb
scas
ret
repnz
pop
mov
cmp
clc
inc
jnp
mov
clc
lahf
mov
out
mov
push
inc
lds
mov
dec
je
lret
adc
xchg
pop
dec
xor
ja
enter
popf
cmpsb
dec
rcrl
icebp
pop
icebp
xchg
fmull
in
int
cmpsl
pop
jge
jg
push
mov
pop
imul
imul
loop
sub
daa
xchg
cmc
xor
add
jg
cld
lcall
pusha
or
out
jns
jmp
dec
fisttps
or
pop
pop
lock
loope
jnp
sbb
sbb
lcall
cmp
hlt
aad
aam
addb
adc
jge
das
int
bnd
int
fistps
dec
adc
push
addl
iret
mov
imul
adc
push
adc
repnz
mov
mov
xchg
push
xor
mov
push
das
cmp
cmp
out
sbb
leave
mov
mov
andps
sub
cmpsl
fcoml
mov
push
cmp
loopne
iret
les
enter
or
cmpl
xchg
xor
xchg
add
cmp
loope
mov
mov
jne
popf
mov
xor
pusha
push
aad
mov
xchg
or
lahf
ja
stos
adc
push
daa
or
or
stc
jecxz
inc
cli
and
sub
mov
sub
inc
jmp
jne
dec
idivb
insl
cmpb
and
push
aam
shl
push
cmc
jns
dec
jmp
hlt
lods
addl
addr16
movsb
xchg
jnp
mov
movsb
sub
test
insl
cli
pop
and
sbb
test
movsl
scas
pop
mov
xchg
into
je
add
cld
mov
shrb
jle
insb
or
dec
icebp
out
adc
out
cmc
loop
xchg
push
hlt
out
cmp
mov
std
adcb
jb
iret
or
xchg
aaa
cltd
je
push
pusha
cmp
jl
push
mov
pusha
bnd
sbb
mov
inc
pushf
out
pop
sub
mov
sbb
arpl
inc
cpuid
pop
in
mov
xchg
imul
sub
dec
push
add
cmp
ja
out
and
adc
fstps
stos
fildl
enter
stos
je
aam
cmp
push
call
into
sub
add
loop
idivl
mov
push
and
xchg
std
xor
sub
fsubrl
daa
push
testl
jne
negl
aad
or
xor
in
inc
jecxz
icebp
loope
and
rcrl
rcrl
fwait
sub
lret
lock
lods
outsb
ss
adc
notl
sbb
cwtl
push
dec
and
mov
inc
xlat
xor
inc
in
push
add
jns
xchg
stos
jge
andb
das
idivl
mov
mov
inc
push
aam
jb
sbb
cld
dec
mov
pop
pop
xchg
pop
loop
cld
insb
cmp
xor
and
mov
push
xlat
inc
cmp
cwtl
mov
xor
std
sarb
dec
pusha
cwtl
ja
fdivl
enter
mov
insl
ljmp
jne
out
shrl
test
dec
outsl
mov
es
int3
xor
aam
xor
int3
xchg
es
in
pop
psrlw
sahf
dec
inc
loope
or
fistl
sahf
cmpsl
mov
push
popa
mov
mov
mov
repz
lret
add
jg
sbb
aaa
xchg
push
jo
sub
sahf
test
mov
popf
xor
stc
dec
mov
mov
dec
ret
add
loopne
movsl
ljmp
xor
dec
or
rclb
mov
ret
out
nop
inc
jg
xor
pushf
push
ljmp
lods
stc
dec
cmp
outsl
insl
pop
mov
lods
and
test
jb
cmp
adc
xchg
addr16
inc
bound
std
ficoml
mov
loope
lods
lcall
mov
jl
decl
fimuls
pop
add
add
sbb
adc
jg
mov
dec
jmp
push
add
mov
movsb
mov
test
out
sub
pushf
sub
lock
ja
sbb
jge
jmp
cltd
iret
movsl
loope
cmp
add
mov
cmp
call
cmpsl
test
mov
jp
xlat
popa
sbb
into
aad
lods
xor
adc
jl
leave
dec
sub
mov
in
xor
dec
xchg
mov
add
mov
push
cmpsb
arpl
mov
cwtl
outsb
and
loop
sub
out
subl
roll
push
sti
lret
dec
mov
ljmp
or
daa
sti
pop
iret
bound
jb
or
and
pop
inc
stos
cmp
or
mov
pop
mov
pop
rcrl
je
ljmp
sbb
je
movsb
je
push
xchg
outsb
adc
push
in
mov
or
adc
fldcw
rcll
push
scas
inc
addb
lcall
movsb
mov
loope
xor
movsb
fsincos
push
dec
cmp
xchg
mov
add
xor
pop
rol
rorl
jne
or
inc
stc
orl
mov
sbb
sbb
xchg
adc
mov
pop
and
stc
mov
loope
mov
cwtl
aaa
lods
mov
push
mov
nop
cmpb
xchg
ffreep
cmpsb
leave
gs
movsl
rorl
rolb
leave
pushf
and
mov
pop
push
pop
je
in
and
ljmp
int3
int
movsl
cmp
icebp
in
ficoml
mov
test
xchg
ljmp
clc
lret
data16
xor
shld
cli
test
push
mov
movsl
adc
inc
cli
push
in
in
shlb
pop
adc
loop
jno
ficompl
mov
mov
adc
adc
stos
xor
ljmp
sub
aas
mov
adc
loope
pop
and
fbld
cmp
lret
mov
inc
jbe
cmc
sub
popl
push
pop
push
popa
cli
popf
test
shll
inc
in
or
add
dec
cli
test
lods
faddl
pop
inc
sub
or
in
imul
lds
lret
fistpl
xor
adc
cld
mov
pop
push
adc
insb
fidivrs
pop
fs
lds
addl
xor
pop
andb
or
adc
lods
fisubl
cmp
lcall
ret
das
mov
dec
loop
or
imul
jo
add
pop
xchg
xor
out
xor
jne
lcall
push
mov
xchg
fyl2x
adc
aas
rcrl
mov
add
push
or
decl
add
mov
les
shlb
dec
push
xchg
rclb
jae
cli
dec
pop
sarl
movsl
push
pop
std
cmpsw
jl
imul
push
in
push
xchg
push
pop
mov
or
aad
xchg
fldenv
sub
out
sub
imul
sub
pusha
lret
mov
vcvttsd2si
xchg
add
jmp
sub
xor
mov
inc
adc
mov
cwtl
in
push
cmp
add
jno
cltd
dec
aaa
cli
jns
cmpsl
hlt
fidivl
sarb
shll
pop
mov
pushf
and
aas
or
mov
je
xchg
push
jg
int3
xchg
cld
mov
xchg
add
out
mov
outsb
mov
mov
dec
fstl
jbe
cmc
mov
lcall
dec
xor
mov
mov
mov
add
jae
pop
orb
or
dec
jl
mov
aaa
xlat
adc
das
pusha
push
outsb
pop
xor
mov
mov
push
mov
ret
xchg
jns
cmp
subl
ret
std
xor
cmp
sub
mov
shrl
sub
rorb
fistps
push
pop
adc
jle
jecxz
adc
test
dec
outsl
scas
in
roll
mov
adc
add
repnz
and
dec
sub
xor
dec
test
js
xor
mov
inc
aad
and
sub
test
jl
pop
arpl
lret
mov
inc
mov
add
gs
push
dec
fcoms
aas
fdivr
in
ja
mov
inc
leave
sub
mov
imul
mov
add
loop
mov
movl
add
inc
dec
dec
popf
pop
inc
idivb
jae
leave
sub
into
clc
push
cwtl
jne
sbb
mov
mov
inc
into
fldcw
add
mov
xchg
orl
jne
push
sub
push
pop
call
insb
pop
mov
lock
pop
movsl
add
aaa
movb
mov
mov
lahf
cmp
add
xor
push
in
incl
and
shll
loope
xor
icebp
cmpb
js
xlat
jge
stc
out
lahf
pop
outsl
jb
mov
sub
mov
lods
fnstenv
dec
test
int3
xchg
jb
movsl
pop
sub
scas
pop
loope
sub
outsl
testb
or
mov
mov
mov
push
pop
push
ret
lods
inc
push
in
sahf
jle
lcall
test
inc
fcompl
ja
data16
ljmp
out
jno
cmp
dec
jg
lahf
push
adc
add
mov
xchg
movsb
pop
push
repnz
jo
sarb
movsb
movsb
ss
mov
fisubl
pop
sub
or
sbb
pop
enter
pop
push
sti
adc
inc
jmp
or
adc
mov
stc
jns
stos
add
aad
in
outsb
daa
into
jmp
xchg
cmp
arpl
xlat
in
sub
aad
jmp
mov
xor
aas
iret
sbb
sub
sub
push
jnp
lcall
sbb
dec
lock
movsl
decl
dec
addr16
dec
xor
or
movsb
sarl
loop
and
into
mov
sbb
imul
mov
xchg
dec
jmp
push
ret
or
xchg
popf
scas
aaa
xchg
xlat
fdivrs
dec
jp
pop
lret
pop
mov
ljmp
shrl
daa
movsb
and
jb
xchg
lds
jecxz
cmp
jl
insb
lock
jmp
aaa
mov
jmp
nop
imul
inc
ja
jmp
push
popa
adc
testb
adcb
data16
dec
pop
dec
sub
mov
and
cmpsb
pop
leave
cmp
pop
cs
dec
sbb
lods
shlb
aaa
std
sti
inc
addr16
mov
lock
xchg
cmp
das
mov
out
adc
test
jbe
ja
dec
aam
xlat
add
lods
and
popa
jmp
inc
push
repnz
xor
fwait
dec
ret
fnsave
push
pop
push
test
sub
or
push
push
out
adc
out
mov
mov
or
in
loop
inc
jnp
mov
das
xchg
loope,pn
lcall
aas
test
mov
rcrl
loope
push
mov
sbbl
push
inc
mov
jnp
adc
and
cmc
xchg
adc
es
aas
sub
xchg
cmp
fimuls
xchg
scas
push
aaa
outsb
testl
or
sub
in
push
and
mov
adc
roll
or
jg
and
in
push
outsb
lret
add
xchg
stos
inc
mov
pushl
xor
call
mov
jnp
outsb
mov
pop
lods
xor
out
std
enter
out
ljmp
xchg
mov
movsb
add
movsb
mov
jbe
shll
inc
mov
popa
mov
fisttps
les
insl
aaa
insb
push
out
adc
mov
xchg
gs
ss
stos
outsl
ja
cld
xchg
cmp
daa
dec
loop
test
shl
pop
es
mov
jnp
jg
pop
adc
add
mov
ror
mull
cwtl
add
rclb
mov
sbb
xchg
outsl
movsb
and
std
mov
out
sti
or
dec
cmp
test
or
mov
mov
xchg
scas
jp
icebp
mov
push
pop
test
std
int
test
sub
mov
sub
in
push
psrld
cld
pushf
negb
mov
or
cmp
xor
loop
je
and
inc
push
sub
fcoms
insl
xchg
das
or
fldenv
mov
notl
pop
adc
sbb
adc
jle
xchg
test
mov
inc
sbb
js
jecxz
mov
xlat
or
loop
std
xor
lret
clc
test
pop
jl
stos
xchg
push
cli
mov
nopl
aam
jnp
imul
push
cmp
cmpsb
sbb
and
xor
cwtl
push
popl
in
lcall
mov
stos
mov
fwait
enter
sarb
pop
jl
or
and
loopne
sub
in
jno
fadds
mov
imul
cmpb
pop
push
lods
sbb
add
adc
mov
push
or
sbb
sbb
jmp
jo
jge
ret
subl
repnz
cmpsl
es
mov
andl
outsb
adc
pop
xchg
cmpb
cmp
xor
loop
enter
mov
repnz
and
and
cld
sti
push
notl
mov
or
mov
test
ret
fs
add
pusha
rorb
scas
push
pop
mov
lea
cli
xor
or
popa
gs
cmp
mov
testl
stc
xor
in
mov
lahf
lods
mov
dec
sbb
pop
inc
imul
je
mov
dec
push
or
pop
lds
aas
fcompl
mov
addr16
pop
arpl
sub
jle
jmp
roll
imul
dec
mulb
cs
jns
movsl
ljmp
stc
jno
inc
push
repz
filds
lret
adc
out
mov
add
insl
sbb
arpl
or
lds
das
mov
bound
loope
adc
and
out
xor
loopne
out
xchg
jbe
add
xor
add
cld
add
fdivrl
inc
cmp
stos
sarl
or
xlat
lock
adc
in
clc
nop
out
adc
cmpl
push
add
dec
adc
outsb
xor
sbb
xchg
sahf
hlt
in
dec
mulb
add
push
inc
roll
pop
sub
jne
jge
sbbl
adc
in
outsb
sub
lods
dec
cmc
rolb
push
sbb
cmpsl
pop
xor
call
lahf
cltd
orl
xchg
push
int3
and
jnp
sbb
divl
fsubl
sti
arpl
repz
add
xchg
push
jmp
gs
js
push
mov
push
rep
mov
mov
xchg
call
xchg
jbe
sub
dec
ds
repz
cmp
dec
in
sub
out
push
pop
fst
or
popa
inc
fldl
das
xchg
out
mov
imul
imul
push
out
sub
sahf
push
jo
or
and
inc
dec
add
add
addr16
mov
es
dec
push
cmp
add
test
mov
lods
dec
mov
movsl
lea
popa
andb
aas
dec
lahf
cmpb
in
pop
or
int3
add
and
imul
scas
int
fstps
leave
lahf
out
cltd
sbb
or
jecxz
mov
sti
hlt
popa
test
mov
daa
sbb
jg
outsl
xor
das
adcl
test
hlt
mov
add
out
push
cmp
dec
mov
hlt
fildl
dec
addr16
fnstsw
sbb
jae
jae
scas
cmpsl
push
dec
iret
movsb
inc
je
insb
cli
or
aas
inc
adc
mov
push
jo
cwtl
imul
push
pop
adc
pop
rclb
test
sbb
dec
loope
fsubs
scas
pop
loop
dec
push
mov
pop
fnsave
xchg
out
stos
sub
cmp
fwait
mull
rcrb
out
xor
ds
loopne
imul
inc
out
mov
mov
movsl
insl
shrl
or
push
inc
jle
js
cs
in
mov
and
mov
notl
test
xchg
stc
ds
and
stc
test
aad
inc
repnz
or
dec
fisttps
shrl
jmp
lahf
mov
mov
lea
jns
lcall
repz
jle
fwait
cltd
in
out
lds
add
mov
dec
mov
cwtl
nop
outsb
mov
aaa
lds
adc
in
adc
add
js
addl
push
insl
je
push
hlt
xchg
mov
mov
jne
push
daa
out
cmp
mov
mov
int3
scas
pop
xor
push
inc
sub
data16
incl
fmull
das
and
and
sbb
sbb
cli
cwtl
mov
repz
cmp
sti
sub
imul
scas
lahf
mov
insl
fisubl
xor
aam
sub
pop
jmp
ss
or
int3
add
mov
scas
mov
outsb
js
adc
add
lret
popa
push
shrl
jge
push
aas
ret
test
cmpsl
xchg
sti
rclb
jb
mov
roll
js
adc
shlb
sbb
push
test
call
sahf
ja
stc
xor
add
sub
push
cmp
cmp
arpl
rol
xor
jmp
xlat
jns
adc
lods
sbb
sbb
cmp
dec
sbb
sarl
xchg
xor
sbb
gs
xor
addr16
push
pop
and
add
pusha
cli
mov
aam
jecxz
into
dec
mov
out
cmc
mov
jo
les
outsl
cmp
hlt
out
aam
xlat
lahf
stos
test
addl
mov
cmp
jecxz
scas
sbb
ljmp
add
scas
test
enter
xor
pop
push
hlt
mov
mov
out
pop
xor
pop
fcoms
cmp
sub
push
inc
xchg
stos
sbb
pop
jae
jmp
sbb
add
ss
popa
rcrl
pop
push
xchg
icebp
repz
das
mov
mov
out
cltd
fstpt
cwtl
pop
jae
mov
jne
and
mov
ror
stc
movsl
leave
icebp
lock
popf
mov
lods
and
test
popf
or
enter
xchg
or
ss
sbb
int
xchg
mov
pop
push
pop
shll
loopne
cmp
das
jge
and
lds
inc
shlb
fs
lods
xlat
dec
inc
xchg
fstl
or
lods
sti
add
mov
in
adc
push
mov
mov
xlat
adc
mov
pushf
jb
sub
mov
imul
sti
loope
mov
dec
repnz
loop
jecxz
lods
add
cmpsb
adc
xchg
inc
outsb
ja
push
and
outsb
lret
pop
xor
shll
fsubrp
in
sarl
out
cwtl
pop
jbe
push
test
enter
lods
push
add
mov
lcall
push
stos
push
push
je
xchg
jge
lods
and
orl
mov
cld
or
lock
filds
mov
daa
inc
call
xchg
mov
jmp
into
xchg
cld
xchg
inc
idivb
mov
mov
jno
test
out
call
and
mov
sub
dec
arpl
inc
jecxz
push
idivl
dec
imul
inc
dec
or
lahf
outsl
test
push
ja
mov
pop
dec
fdivrs
rolb
int
test
mov
pop
add
sub
adc
sub
mov
popf
cltd
sbb
jo
jo
inc
pop
inc
jmp
int3
mov
ret
xor
cmpsb
sahf
popf
sbbl
adc
jp
daa
cwtl
xor
cmpsb
jecxz
and
call
mov
or
cmp
push
mov
stos
xchg
in
outsb
mov
dec
cmc
call
mov
js
or
int3
imul
and
loope
in
mulps
push
add
jl
sti
jne
dec
repnz
xor
test
ljmp
mov
or
or
cmp
lods
dec
push
or
dec
insb
push
inc
movb
cli
imulb
repnz
sbb
sub
push
dec
dec
fadd
scas
iret
jp
sub
cld
mov
sti
icebp
rorl
hlt
test
mov
mov
jb
pop
jp
movsl
push
xchg
cltd
pop
lds
ret
cs
std
popf
and
jno
mov
cmp
out
push
loope
pop
sbb
or
add
test
out
lcall
mov
imul
lea
adc
push
ja
jno
jne
mov
shlb
test
addr16
xchg
or
add
add
cmp
push
jl
dec
out
les
faddl
cmpl
scas
xor
sub
mov
hlt
negl
js
std
stos
inc
je
mov
stos
xchg
test
lahf
pop
shll
bound
inc
ret
push
xchg
push
xchg
ret
subl
pop
xor
out
xor
or
je
sbbl
nop
mov
xchg
pop
aaa
sbb
js
add
jnp
xchg
ror
pop
mov
sahf
into
sbb
shll
adc
cmpsl
addr16
sub
pop
mov
repnz
std
cmp
outsl
in
adc
add
xchg
fldl
jl
xchg
or
mov
daa
mov
cmp
lea
sbb
pop
lret
outsl
inc
repz
or
or
xor
mov
mov
jecxz
xorl
loopne
push
bound
nop
lahf
sbb
dec
inc
push
push
popf
bound
scas
out
mov
fimuls
inc
adc
mov
sbb
or
adc
xchg
jmp
loope
cltd
stc
adc
mov
movsb
cmp
xchg
adc
pop
fstpt
ret
imul
arpl
out
aas
imul
sbb
ss
push
sbb
push
insl
aas
repz
out
lods
jp
jp
enter
dec
push
sub
inc
int
cmp
idiv
test
mov
ret
jecxz
xchg
popf
pop
shlb
mov
push
insl
jge
mov
ljmp
fdivrp
in
mov
outsl
add
jns
mov
xchg
sub
pop
push
test
lret
cwtl
cmp
xchg
sbb
dec
adc
sub
jg
adc
pushf
jbe
jno
es
fsub
mov
pushf
cltd
in
pushf
dec
jmp
jg
out
and
adc
das
push
mov
int
notl
popf
xor
loope
pusha
mov
push
xchg
cmp
rcr
rcrl
bnd
int
fiadds
adc
pop
adc
test
jle
ja
mov
cmp
adc
mov
rorl
vcvtsd2ss
outsb
fisubs
pushl
testb
aas
aas
push
mov
imulb
ret
rorl
int
ljmp
sahf
sbb
repz
adc
sbb
mov
or
xchg
inc
lds
jp
stos
dec
shrl
jno
adc
and
adc
adc
je
fwait
sti
sub
cmp
ret
sti
iret
add
pop
shrl
jl
ljmp
inc
xor
xor
or
jecxz
add
in
popf
inc
pop
adc
gs
pop
jne
or
jl
inc
push
mov
jbe
pop
adc
out
pop
jmp
mov
cs
mov
dec
push
xor
or
mov
sbb
xchg
mov
xchg
test
jns
xchg
mov
sub
sbb
and
loop
xor
iret
clc
dec
clc
push
pop
jae
cmp
push
adc
inc
push
mov
rcrb
sbb
inc
sbb
movl
pop
inc
mov
es
inc
repz
test
std
or
sarb
adc
xchg
lock
popa
daa
adc
mov
pop
ret
flds
adc
fsts
adc
lcall
rcrl
jg
adc
stos
xlat
mov
dec
mov
cmpsl
push
push
push
ret
addb
and
scas
mov
imul
scas
test
sub
push
stc
adc
lds
je
or
fistpl
test
adc
fs
testl
ret
xchg
jg
dec
and
stos
cli
push
or
das
fxch
das
and
fistpl
cmp
xor
addr16
dec
movsb
sarl
in
jno
int3
push
sbb
loop
std
gs
inc
insb
ljmp
mov
cmp
jle
imul
add
sbb
ss
push
pusha
jo
fdivs
int3
pop
add
fxch
xchg
lret
fdivrl
mov
jg
jnp
sub
sbbb
or
mov
push
mov
mov
decl
test
inc
xchg
jp
cmp
jmp
sbb
sbb
pop
pop
mov
xor
nop
xchg
jle
loop
xlat
xor
pop
push
call
mov
int3
xchg
sbb
sti
add
sti
inc
sub
insb
sbb
loop
int
cmpsb
lea
sbb
or
add
aas
pop
incb
mov
arpl
push
lret
es
fwait
jbe
jmp
xchg
scas
sbb
pop
mov
ja
xchg
jnp
fwait
shll
aad
mov
stos
mov
xchg
mov
sub
sub
jecxz
jnp
in
pushf
jns
out
xor
data16
aas
int
stos
movsl
test
cmpsb
adc
dec
push
xor
add
out
outsb
iret
popf
popa
mov
add
out
mov
xchg
mov
cmpsl
negb
and
fists
fs
pop
fdivrs
sbb
adc
loop
mov
inc
out
pop
in
inc
and
das
out
cmpsb
std
jb
jecxz
cmp
or
mov
std
mov
mov
arpl
pop
enter
in
xor
iret
insl
cmpsl
and
into
push
sbb
and
in
lock
pop
adc
shll
xchg
dec
stos
icebp
inc
cmc
inc
mov
cli
inc
addr16
dec
cltd
push
call
adc
pop
adc
pop
sub
fcmovu
iret
inc
fisttpll
xchg
xor
pop
xor
mov
cli
out
jecxz
mov
pop
orl
mov
nop
push
lret
xchg
mov
sbb
xchg
ret
mov
push
sbb
lret
mov
mov
inc
jge
jno
xor
test
in
cmp
jecxz
arpl
icebp
pop
or
mov
fs
mov
mov
rclb
jp
or
test
std
or
cltd
movsb
cli
jne
push
imul
stc
outsl
outsb
jbe
sahf
cmp
sbb
iret
jp
inc
mov
xor
and
pop
cltd
imul
jle
lods
loop
ja
iret
stos
fistl
push
xchg
shrb
add
lods
int
data16
out
ret
lahf
mov
mov
ret
inc
fmulp
lds
xor
dec
mov
sub
sbb
xor
lahf
dec
enter
pop
sub
jns
add
jle
stos
fbstp
dec
outsb
out
push
mov
sbb
mov
mov
mov
push
pop
inc
and
addr16
lcall
shl
loop
inc
mov
or
or
cmpsb
in
fldcw
negb
lahf
std
xchg
leave
inc
adc
pop
insb
fistps
cmpsl
push
les
mov
addl
sub
pop
data16
or
xor
inc
in
je
popf
fsubs
mov
mov
insl
xchg
fcmove
jl
mov
aaa
adc
xchg
fs
repnz
push
sub
add
jnp
sahf
out
lret
push
lds
or
fildll
mov
inc
fwait
add
mov
lcall
or
dec
inc
dec
cmp
rclb
cmpsb
jbe
jbe
fiadds
test
pop
mov
shll
mov
sbb
lret
ja
test
cld
sarb
add
sti
dec
push
inc
shlb
add
mov
insl
test
cmp
xor
and
test
xor
movsb
cli
xorb
dec
shl
pusha
lock
pop
and
lock
and
int
insb
xchg
xor
mov
adc
adc
push
dec
jne
mov
gs
shlb
mov
xlat
outsl
push
xchg
pop
or
js
sub
sub
sbb
pop
in
xchg
aaa
mov
xor
daa
fs
adc
cmp
enter
lret
sub
or
xchg
pusha
mov
js
adc
mov
add
add
int3
mov
inc
inc
pop
in
rol
xorb
or
jg
lock
lea
dec
sbb
xlat
xor
and
xchg
xchg
cmp
cmp
test
mov
and
cmp
push
dec
xchg
mov
jnp
lea
mul
insb
pop
jns
mov
xchg
add
sub
das
dec
sbb
hlt
mov
push
jmp
mov
in
cmpsb
jno
inc
jnp
fcomps
sub
or
ljmp
lds
adc
fs
sbb
add
pusha
cmpsb
jo
pusha
push
lret
and
push
xchg
enter
xchg
xchg
mov
inc
ret
gs
aam
and
adc
aad
loope
xor
xchg
add
sbb
xor
add
sti
rcll
mov
sub
loopne
ja
imul
hlt
inc
mov
add
into
gs
inc
add
mul
xor
push
and
adc
add
mov
push
pop
andl
lea
cmc
xchg
and
jecxz
imul
inc
popa
loope
dec
sub
ljmp
mov
and
das
fsubs
ret
sub
mov
dec
dec
or
jo
and
inc
add
pop
push
or
xchg
mov
cltd
aam
outsb
fs
notl
pop
pushf
pop
adc
xchg
lds
mov
jno
and
mov
xor
lods
imul
test
mov
xor
pop
adc
mov
xchg
sub
mov
iret
stos
or
icebp
mov
sarl
outsb
repnz
sbb
xchg
mov
cmp
hlt
jno
popa
jmp
xchg
hlt
movsb
xchg
dec
or
out
xchg
jno
inc
ja
roll
adc
cmpsl
test
jbe
jne
xchg
movsl
lock
push
mov
fistpl
mov
push
mov
jae
pop
nop
push
negb
nop
enter
dec
jge
cmpsb
pop
lock
in
rcrl
mov
push
fstl
mov
xor
xchg
jae
pop
fs
fidivrl
sbb
dec
cmp
in
sbb
repz
scas
vaddsd
or
cmp
lea
push
fdiv
pop
and
xchg
lret
jns
or
lret
xor
loopne
gs
adc
sub
nop
sbbl
pop
sbb
je
mov
dec
and
ficoml
sub
orb
lods
insb
xor
fstp
push
fwait
sbb
sahf
aaa
inc
imul
arpl
lods
aas
and
sub
sti
ret
negb
push
jae
test
popf
and
fnstsw
lret
add
add
cmp
in
mov
xchg
stos
data16
ret
addr16
ss
dec
or
mov
in
inc
mov
xchg
push
rorb
stos
cmp
sub
mov
scas
inc
call
mov
dec
mov
pop
in
ss
aam
sbb
dec
add
and
shll
int3
in
add
je
popa
xor
push
inc
push
mov
or
enter
push
call
mov
fldl
mov
add
dec
subl
push
add
call
push
add
lds
fdivs
sub
inc
cmp
adc
fidivs
cmpsl
cwtl
in
jmp
push
cmp
push
mov
pop
xor
xchg
cwtl
ret
cmpsl
xchg
cltd
add
xchg
arpl
in
jmp
fdivl
or
test
xor
mov
and
bound
pop
mov
leave
fmuls
push
repz
call
adcl
jecxz
cld
icebp
ror
or
xchg
outsb
push
arpl
push
jb
shrb
cmp
inc
dec
push
lock
leave
fcomi
ja
jno
jbe
lock
jg
and
decb
dec
inc
sarl
clc
sti
inc
outsl
in
jb
push
dec
lods
pop
movsb
pop
pop
pop
pop
jle
lret
mov
stc
cs
lds
insb
fisubl
sahf
mov
xchg
shll
push
js
fcmove
les
mov
push
cmp
ds
stos
mov
jle
int
push
xchg
jne
rorl
mov
jae
arpl
fistl
inc
into
mov
adc
imul
out
in
cmp
fsts
js
mov
lahf
movsl
push
lcall
cltd
ljmp
pop
imul
in
add
sahf
outsl
or
das
jmp
insb
mov
cs
adcb
pop
pusha
and
add
mov
sbb
mov
fstl
dec
rcrb
jp
popf
and
pop
add
mov
cld
dec
mov
xor
stc
push
call
xchg
mov
pop
test
out
pop
mov
inc
fadd
in
push
in
repnz
jbe
gs
repz
or
shlb
pushf
adc
fdiv
popf
jae
sbb
cmp
es
inc
mov
fnsave
repnz
inc
les
cmc
nop
pop
jl
jp
adc
insb
push
mov
xchg
mov
cmc
push
loop
test
mov
outsb
mov
jmp
fsubs
mov
mov
mov
pop
fdiv
scas
outsl
cmc
or
popa
enter
addr16
mov
add
and
jg
sub
xchg
cmp
inc
dec
loopne
repz
movsb
cwtl
rcrb
mov
dec
jo
sti
dec
imul
sahf
xor
adc
mov
fcoml
imul
mov
dec
ret
pop
les
push
sub
fwait
add
xlat
sbb
xor
ljmp
mov
fistpl
dec
jp
lea
pop
ss
lret
inc
xchg
fwait
mov
cmpsl
lock
sahf
not
dec
adc
xchg
call
jp
stos
xlat
mov
das
dec
insb
adc
loop
and
in
jmp
xchg
stc
fcoml
sbb
out
mov
std
mov
mov
adcl
jp
dec
xchg
addr16
mov
loop
xchg
lock
lar
fs
movsl
loop
les
mov
punpckhdq
mov
sbb
jno
adc
mov
xorb
push
outsb
sub
and
mov
loopne
dec
lods
cmp
es
pop
pusha
sub
das
mov
and
scas
cmpsl
push
mov
push
imul
inc
dec
inc
xor
xchg
sub
outsb
mov
jle
jo
xchg
jno
xchg
notl
sbb
loopne
mov
jge
mov
cmpsb
pushf
inc
cwtl
outsb
push
bound
inc
sub
call
aad
sub
jge
or
or
cmp
out
mov
cmpl
add
xchg
lds
mov
pop
lahf
je
and
mov
and
xchg
outsb
mov
enter
and
and
fimuls
and
loopne
mov
xor
out
add
or
mov
ffreep
mov
ja
rcrl
jl
cmp
cmp
movsb
into
movb
in
pop
pop
pop
push
sub
in
and
lods
push
inc
mov
int
push
insb
xor
adc
jbe
ss
mov
jae
std
cwtl
shll
cli
jl
jmp
xor
push
cmpsb
or
ret
push
ja
pushl
pop
ja
cld
jp
cwtl
xchg
sub
dec
loopne
pop
cmp
loope
jp
loopne
ljmp
jl
xchg
and
sub
jmp
leave
jbe
pop
push
popf
gs
imul
push
dec
gs
enter
xor
mov
cmc
xlat
in
test
xchg
xor
insb
and
movsl
fst
mov
jno
in
js
lods
or
lcall
pop
pop
jmp
test
lods
in
arpl
fld
mov
aas
call
fwait
pop
xor
jo
test
sub
insb
and
jne
test
or
movswl
sti
sbb
push
sub
mov
lea
jns
push
stc
sub
icebp
sahf
adc
pushf
lahf
test
pushl
test
cmp
in
push
dec
ljmp
jl
xor
pop
shlb
push
xchg
xor
xchg
inc
cwtl
sbb
xor
shl
cld
outsb
mov
out
cmpsl
lahf
adc
jne
mov
and
in
lcall
push
pop
xchg
add
jg
xchg
mov
cmp
cs
jo
xchg
stc
sbb
xchg
push
xor
mov
outsl
inc
mov
loopne
inc
dec
fcoml
clc
lds
out
in
in
xchg
aas
fmull
pushf
outsb
imul
popf
cwtl
and
sbb
jge
mov
xchg
negb
cmp
rol
and
insl
inc
repnz
jg
or
dec
rorl
pop
cmp
or
cli
dec
out
inc
out
push
popa
push
push
ss
cmp
ljmp
pop
fiadds
xor
hlt
mov
mov
ret
jo
adc
call
jl
or
es
leave
pop
idivb
test
dec
or
mov
cli
pop
arpl
jbe
dec
scas
ror
lds
popf
cmp
addb
add
and
rorl
cwtl
mov
lods
das
jns
pop
rorb
or
xchg
imul
cs
fst
cmp
fstpt
xchg
mov
and
dec
xchg
or
jb
pop
pop
fstpl
cs
loope
push
fs
bnd
mov
cmp
data16
xchg
pop
decb
popf
fistps
fiadds
cmp
test
cwtl
mov
in
mov
inc
addb
xchg
or
xor
shll
jo
push
rorl
cltd
out
cli
jmp
cmp
cld
stos
sahf
mov
mov
sbb
insl
dec
sub
xchg
call
jae
shlb
mov
sbb
loop
dec
call
in
subb
dec
mov
sub
outsl
cmp
test
mov
xchg
jp
inc
adc
movsb
cltd
std
push
leave
add
cltd
cltd
ret
daa
jns
rclb
psubw
jge
popa
jmp
and
xor
add
add
out
mov
and
mov
in
mov
jnp
xchg
dec
and
sub
xchg
rcl
fnstenv
sbb
or
and
cmp
jns
mov
dec
dec
inc
xchg
idivl
cmc
pop
dec
pop
pop
or
push
add
daa
mov
sbb
aam
push
push
dec
ds
das
jg
addr16
mov
push
shrl
pop
inc
test
movsb
mov
cld
les
dec
and
imul
adc
xor
lcall
leave
inc
inc
or
rcr
xor
lods
mov
sbb
pop
mov
fldt
fimuls
dec
jo
fstpt
lret
pusha
ror
enter
pop
fwait
ret
mov
sbb
xchg
addr16
rolb
push
mov
mov
mov
mov
int
xchg
jmp
repnz
jmp
jecxz
cwtl
fs
xchg
btr
sbb
clc
repnz
push
sbb
sub
repnz
pop
daa
push
jmp
adc
sub
xchg
cmp
xchg
in
push
leave
sahf
insl
sbb
mov
bound
imul
xchg
sub
mov
daa
fnsave
inc
pop
ja
fimull
push
repz
fwait
xor
xor
xor
sub
mov
push
jbe
cmp
inc
push
mov
stos
jmp
jge
pop
mov
or
into
sub
enter
stos
daa
orb
jne
rcll
ja
push
dec
fdivrl
stc
and
sbb
shlb
lods
shlb
dec
cltd
cs
sarl
insl
ljmp
xor
lahf
ljmp
negb
sahf
int3
std
sub
cmp
jl
jmp
sub
popa
cltd
sub
scas
inc
pop
clc
aaa
imul
push
mov
pop
or
call
push
aas
popa
and
cmp
pop
inc
mov
lret
and
subl
push
jb
or
imul
push
and
test
leave
mov
dec
mov
aad
roll
mull
cmp
adc
ficoms
cmc
sub
or
jae
xor
push
pop
mov
stc
dec
jge
enter
leave
and
rcrb
test
call
pop
push
pop
scas
jbe
push
inc
inc
cs
aam
pop
out
adc
push
cltd
imul
daa
xchg
int
test
in
cmp
imul
mov
lret
cmp
or
cmc
mov
sub
cmp
lock
mov
arpl
fs
and
inc
and
or
lcall
xor
push
out
mov
fwait
ret
dec
inc
xchg
mov
test
or
or
adc
xlat
sub
cmp
std
call
jo
inc
dec
mov
mov
aas
lods
or
jo
neg
mov
nop
mov
pop
loope
adc
pop
mov
out
dec
popa
mov
sub
sbb
sub
loope
call
sub
pop
sar
sti
clc
mulb
mov
jg
mov
mov
cs
mov
popa
xorl
inc
aas
notb
push
jo
jmp
call
mov
sar
xchg
inc
cmp
arpl
cltd
loope
imul
pop
fisubrl
push
sub
pop
add
pop
mov
daa
loop
out
icebp
pop
dec
cmp
mov
mov
mov
sbb
jge
repz
mov
and
pop
cltd
pop
sub
sbb
dec
cmpsb
mov
jge
jae
or
xor
sarb
xor
lods
mov
mov
sbb
insb
or
mov
testl
int
lock
jl
cwtl
push
and
insb
mov
push
pop
je
subl
les
enter
cmpsl
pop
out
hlt
ljmp
lahf
daa
icebp
cmc
out
test
stc
popa
test
mov
ljmp
sbb
in
push
push
insb
pop
push
mov
jno
loope
push
repnz
pop
add
inc
xchg
xchg
jle
cmp
jmp
push
push
pusha
inc
sub
pop
sarl
fcoml
mov
jne
add
scas
inc
and
cmp
sarb
rcll
mov
dec
mov
call
push
cli
lret
adc
dec
jbe
inc
inc
fwait
push
dec
test
in
push
imul
mov
call
popa
into
ljmp
adc
std
xchg
lds
pop
dec
mov
dec
add
add
pop
jmp
xchg
mov
outsb
dec
arpl
push
out
aam
push
push
xchg
fisttps
aas
jg
int
popa
in
in
bound
push
sub
sti
das
pop
das
dec
push
test
jns
sahf
mov
out
movlps
mov
repnz
jbe
jo
push
fimuls
fdivs
outsl
push
test
mov
std
aaa
mov
add
xor
cmc
ljmp
cmpsb
mov
push
pop
cmp
dec
iret
cmp
push
xchg
and
sbb
dec
cmp
sbb
inc
mov
ss
sbb
jle
lahf
out
cs
jnp
pop
sub
cli
clc
test
std
popa
in
negl
jg
adc
xchg
pop
xor
dec
iret
ficompl
in
scas
insl
dec
push
pop
add
mov
push
addr16
jle
pop
lret
scas
xchg
pop
cmp
fwait
inc
lret
sub
dec
stc
sub
cmp
mov
cmp
xchg
dec
dec
xchg
pop
out
out
out
add
std
sbb
gs
push
or
jae
xchg
sub
sub
or
push
lock
pop
test
jle
xchg
mov
hlt
mov
js
movsl
pop
jns
xlat
int3
mov
push
lds
rol
dec
jnp
scas
rorb
int
pushf
aad
sub
adc
mov
insl
addl
xchg
jo
add
push
inc
iret
push
pushf
das
scas
rorb
fnstsw
daa
imul
mov
inc
xchg
ret
pop
leave
and
mov
aad
repz
push
sti
enter
negb
ret
adc
pop
cmpsb
sub
ret
scas
ret
dec
test
jmp
xchg
loopne
jne
ret
push
lcall
xchg
adc
push
jle
insb
push
dec
imul
and
test
jge
jp
stos
rcrb
mov
or
mov
dec
sub
std
inc
mov
mov
aaa
pop
lock
mov
mov
jmp
jmp
cmp
insb
fisubl
push
lret
mov
fldcw
or
xlat
ss
inc
xchg
testl
out
js
sbb
popa
and
mov
jmp
out
fidivl
xlat
lahf
les
cmp
jno
pusha
jecxz
lods
scas
push
xchg
jle
inc
xchg
pop
inc
mov
in
and
in
scas
ret
dec
adc
int3
lret
repz
scas
ljmp
inc
cli
fstps
jg
aas
call
dec
adc
mov
dec
test
pop
imul
dec
inc
dec
push
adcb
xchg
mov
int
mov
jle
test
jge
int
or
and
xchg
int3
push
ljmp
dec
hlt
pop
call
jge
mov
jo
or
popa
loope
fimuls
mov
mov
and
fistl
lock
add
out
push
sub
adc
out
dec
out
loope
lcall
mov
imul
xor
sbb
fidivs
push
rcrl
cmp
mov
cmp
mov
inc
mov
push
int3
rorl
xchg
add
dec
pop
fimull
sub
xchg
cmp
mov
cmp
jnp
inc
pop
push
xorb
mov
mov
mov
push
add
clc
push
and
or
test
imul
xor
test
test
mov
push
xor
out
inc
fnstcw
es
dec
xchg
xchg
jns,pt
out
add
jg
repnz
ffreep
inc
cltd
mov
stc
xor
xor
sbb
iret
jbe
mov
xor
sbb
sbb
scas
inc
fwait
cmp
lret
bnd
inc
push
xor
cmpsl
stos
test
pop
lahf
xor
mov
mov
fwait
jbe
rolb
cmp
imul
mov
les
je
mov
mov
mov
loop
and
mov
mov
dec
mov
test
es
mov
dec
add
adc
sbb
ss
mov
dec
das
in
adc
outsl
xchg
or
out
add
aaa
andl
in
mov
sbb
jns
mov
das
mov
nop
sub
and
pusha
push
in
and
push
jne
mov
cltd
enter
mov
addr16
pop
xchg
jecxz
pop
sbb
fildl
dec
mov
shrl
xor
ret
xor
adc
mov
jmp
ss
fiadds
xor
pop
adc
dec
mov
inc
sbb
dec
cmc
lcall
push
loop
in
pusha
cmpsl
sub
data16
clc
pop
xchg
out
xchg
mov
gs
push
dec
fcomp
mov
pop
movsb
inc
stc
cmpsl
inc
icebp
rcr
in
xorl
mov
jmp
mov
mov
cs
inc
insb
fstpl
xchg
xor
push
hlt
iret
jb
movsl
cmp
cs
pop
mov
inc
mov
jle
sbb
ss
es
mov
mov
popf
test
xchg
lods
dec
insl
mov
adc
mov
outsb
test
push
outsl
fisubrl
jns
shlb
mov
adc
enter
aad
mov
int3
cmpsl
mov
dec
mov
dec
pop
push
xchg
pop
popa
in
jbe
cmp
mov
adc
cmp
dec
sub
jnp
mov
sub
pop
mov
into
notb
sub
mov
loop
cld
hlt
adc
int3
outsb
daa
ret
cwtl
adc
pop
push
add
rcll
js
out
adc
cmpsl
sbb
mulb
int
fistpl
dec
ret
sub
inc
cmp
les
adc
jle
ds
cmp
push
adc
int3
insl
cmpsl
mov
mov
push
or
cwtl
mov
ja
sbb
lret
cmp
out
es
and
addb
movsl
mov
test
add
push
cmp
push
fwait
add
inc
xchg
movsb
add
mov
mov
push
xchg
and
outsb
inc
jmp
sar
sbb
add
mov
xor
adc
hlt
ret
xor
movsb
aas
xor
sarl
insl
sbb
retw
addl
and
or
loopne
mov
ret
dec
je
jnp
movsb
pop
adc
or
in
scas
aas
flds
jecxz
push
add
movsl
ret
scas
or
jecxz
cwtl
call
icebp
and
adc
jnp
into
mov
in
xchg
ds
dec
icebp
pop
add
push
mov
mov
push
mov
inc
jns
pusha
cmp
jge
lret
repnz
add
loop
jge
aad
in
xchg
push
in
out
jmp
mov
adc
pusha
push
jle
lahf
insl
xchg
dec
add
xchg
stc
insl
cmp
adc
inc
div
mov
mov
or
fisubrs
rol
cld
daa
je
jns
rcrb
shr
sub
jle
stos
xor
xlat
jnp
and
sbb
mov
mov
cwtl
ja
mov
adc
test
cmpsb
or
sbb
push
add
mov
adc
js
dec
mov
pop
jge
cmp
ljmp
ja
xorb
or
nop
je
popa
dec
mov
dec
and
or
call
leave
jecxz
add
jno
sbbl
imul
mov
xchg
fcomps
sahf
jge
fwait
and
mov
inc
pusha
imul
jle
imul
push
fsubl
popf
adc
sbbb
pop
jne
sub
fisttpl
in
dec
les
repz
sti
or
mov
aaa
mov
mov
fidivrs
cmp
daa
xchg
shlb
or
or
inc
fld
outsl
sub
stos
add
mov
mov
push
and
jmp
pushf
add
clc
idivb
xor
pop
sti
xor
pop
sbb
icebp
pop
cmp
hlt
in
repnz
sub
add
push
shlb
pop
mov
popa
xchg
fadd
cmpsb
sbb
arpl
jo
clc
sub
in
enter
xor
adc
sarb
outsb
and
sahf
sub
lcall
mov
sub
mov
adc
mov
popf
pop
cmpsl
xchg
mov
and
mov
imul
in
inc
mov
pop
mov
nop
cmp
pop
sbb
pop
repz
aam
bound
push
xor
cmpsb
push
mov
stos
jo
jl
push
lahf
cmp
enter
jnp
dec
ret
cld
mov
cwtl
stc
test
dec
cmpsb
push
pop
xorl
add
scas
iret
sbb
xchg
lea
xor
lea
xchg
in
leave
push
xchg
or
mov
movntps
xor
fisubrl
jp
arpl
cld
cwtl
and
aas
pop
addb
adc
push
jne
adc
mov
cmp
jno
ljmp
mov
int
or
insb
addl
in
loopne
outsl
repnz
adc
out
sub
mov
push
clc
test
rolb
inc
adc
push
lret
mov
ljmp
or
pop
cmp
dec
dec
jg
xor
jl
mov
cmpsl
sbb
test
sbb
test
repz
insl
jns
fidivs
cwtl
movsl
ret
adc
mov
xchg
ljmp
shrl
mov
pop
cld
sub
cmp
loope
xchg
test
loope
dec
jmp
ret
mov
ror
jmp
adc
mov
daa
add
inc
orb
stc
xchg
sbb
pop
gs
xlat
roll
xor
and
xchg
mov
push
mov
in
sbb
mov
sahf
xor
mov
int3
out
movsl
adc
cmp
and
enter
daa
xchg
inc
and
das
cmp
sti
jns
test
pop
clc
test
out
je
mov
xchg
mov
inc
xchg
ret
add
pop
outsl
je
sarb
and
cmp
shll
insl
inc
in
dec
in
jno
call
sbb
cmp
loope
insb
movsl
lods
sbb
inc
mov
outsl
sbb
mov
cld
mov
dec
sub
mov
fdivrl
mov
cmp
mov
push
movsl
lods
mov
sbb
sbb
int3
dec
jns
jnp
sub
jne
push
dec
outsl
clc
aas
les
ret
or
pushf
roll
jmp
jecxz
push
inc
mov
mov
and
subl
lds
arpl
xchg
dec
jae
pop
fisubl
pop
ljmp
fidivrl
lret
fwait
mov
jg
mov
adc
mov
xor
sahf
and
adc
sbb
int
clc
loop
sbb
xchg
adc
and
stos
outsl
jb
imul
arpl
and
mov
int
mov
sbb
shrb
sti
jns
addr16
dec
cmpb
mov
mov
test
test
mov
xchg
pop
cmp
repz
cmpsb
outsl
xchg
gs
pop
in
pop
jo
cli
dec
rorl
js
cmp
out
xchg
xchg
xchg
adc
add
xor
mov
mov
mov
call
inc
jbe
push
pop
mov
xor
incb
rorl
xchg
shll
sarb
lcall
stc
shrl
out
jle
fnstsw
faddp
sarl
sub
mov
inc
das
cltd
ret
or
dec
xlat
xchg
jo
add
mov
std
movb
fs
sbb
xchg
shll
pop
xchg
lcall
or
call
repnz
mov
ds
mov
test
mov
nop
dec
pop
adc
imul
lods
popf
and
cmp
loope
cmpb
mov
pop
movsl
repnz
mov
in
xor
loope
adc
andl
cwtl
repnz
push
sbb
imul
inc
jne
clc
icebp
movsb
jl
data16
fsubs
movsb
fisttpl
movsb
or
pop
dec
adc
inc
neg
test
sbb
cmp
popa
push
repnz
and
ret
pop
fwait
repz
sub
outsl
and
enter
jecxz
jns
das
or
jle
adc
add
shll
mov
std
enter
inc
ret
mov
or
les
dec
mov
fsubr
fs
jle
stc
jp
xchg
ss
jge
sub
adc
in
ret
mov
add
jns
dec
xchg
cld
push
frstor
sub
sub
scas
aam
out
push
push
add
mov
clc
fildll
push
bnd
imul
lods
js,pn
xchg
sarb
lods
cmpsl
out
loopne
repz
aad
sub
es
cmp
sbb
jmp
into
rclb
xchg
out
ffree
jl
jb
push
and
rcrb
lods
js
cmc
pop
jl
fwait
sbb
xchg
pop
inc
mov
enter
in
out
outsl
in
in
rcll
mov
inc
xor
int3
negb
mov
bound
shrb
pop
or
icebp
xchg
mov
sahf
fildll
aas
fldt
inc
or
jbe
movsb
pop
sbb
into
sahf
mov
inc
ret
sbb
arpl
mov
inc
or
js
cmp
mov
sahf
fcoms
ja
mov
fnsave
les
test
add
js
aad
mov
stos
les
adc
cmpb
pop
js
sub
xchg
and
cltd
push
push
int
cmp
mov
pop
mov
sub
jno
hlt
mov
int3
fiaddl
popa
ret
adc
or
inc
pop
in
inc
xchg
mov
int
xchg
adc
jae
xchg
lods
fists
inc
mov
mov
pusha
lret
daa
xor
shll
inc
xchg
nop
pushf
clc
mov
jo
lea
enter
mov
or
loopne
xlat
arpl
cmp
lods
daa
mov
jmp
push
fdivrl
out
fiadds
out
test
lret
push
inc
pop
lds
dec
test
lock
mov
mov
leave
stos
out
movsb
mov
xchg
das
pop
aaa
add
hlt
pusha
test
sahf
ret
sbb
cmp
dec
int
in
or
shlb
mov
mov
outsb
inc
cmp
addb
xor
push
jecxz
lcall
sub
daa
sub
cmp
adc
xchg
icebp
cmovo
pop
mov
out
adcl
cmpsb
arpl
add
popa
stos
sahf
jnp
jge
out
inc
sbb
mov
pop
jmp
dec
cmpsl
sahf
add
lock
ds
sub
xor
and
popf
jo
ja
popf
movsl
ret
mov
dec
push
stos
adc
and
js
sbb
adc
subb
inc
jne
outsl
call
mov
scas
sub
sbb
mov
iret
mov
pop
mov
xchg
mov
test
xchg
stos
int
sub
mov
in
jne
sub
and
jmp
jne
pop
nop
aam
and
inc
add
pop
pop
jb
sub
sub
pusha
fmull
add
sbb
in
leave
les
mov
leave
xor
cmp
xchg
pushf
ret
int
xchg
xor
stos
sbb
pushf
dec
jbe
mov
add
dec
cmc
imul
inc
add
mov
ljmp
xor
lock
add
out
popf
xchg
lret
imul
cwtl
enter
mov
lret
pop
aaa
cmp
adc
pop
mov
testb
sub
cmc
mov
mov
inc
adc
pop
divb
shll
inc
mov
movsb
std
xchg
cmp
cmp
iret
lods
push
sbb
sub
sbb
pop
std
loopne
jbe
push
add
push
xor
cltd
scas
push
adc
mov
cltd
push
mov
outsl
rolb
xor
jb
push
xchg
mov
sbb
mov
mov
dec
idivb
notl
xchg
dec
lret
mov
pop
mov
in
jbe
xor
jno
ret
stos
aad
mov
jae
iret
adc
cmpsl
mov
lods
idivl
sbb
stc
inc
loope
mov
in
test
cmp
mov
test
in
inc
jg
stos
mov
adc
pushf
xchg
xchg
pop
dec
in
dec
inc
push
repnz
push
ficompl
jle
test
inc
mov
lods
jp
adc
push
push
sbb
jp
mov
js
pusha
fst
pusha
xor
adc
lcall
les
dec
mov
aad
outsl
xchg
push
push
test
and
mov
mov
mov
in
jle
add
mov
movsl
aaa
sub
and
enter
add
je
xchg
mov
mov
and
push
scas
fsubr
xchg
in
dec
add
jo
scas
repnz
add
out
lods
inc
and
mov
inc
sub
out
inc
xchg
sbb
cmpsl
testb
fcompl
and
mov
dec
mov
lock
push
enter
jae
dec
inc
movsl
stc
sbb
pop
mov
pop
test
faddl
lret
and
out
add
cmc
fldl
jns
inc
or
jae
mov
nop
pop
ljmp
lret
sbb
inc
push
jns
into
int
lock
push
mov
aas
das
fistpl
test
xchg
inc
pop
adc
pop
call
xor
pop
push
inc
ljmp
pop
lcall
add
ss
lods
cltd
repnz
mov
pop
mov
push
xchg
les
jmp
test
ja
mov
mov
loop
in
pop
mov
cld
lcall
clc
mov
repz
jp
ja
adc
leave
gs
xchg
mov
mov
and
xchg
lea
sbb
add
mov
jg
int3
inc
push
jno
add
ret
icebp
mov
inc
icebp
pop
xor
xor
mov
add
test
push
mov
sub
rcrl
and
pop
sti
and
mov
cld
rep
popf
fwait
mov
jle
xchg
mov
cmp
pushf
mov
inc
out
fimull
sahf
ljmp
rol
loopne
and
jns
and
jl
xchg
cmp
mov
pop
pop
cmp
jbe
or
out
clc
aam
sbb
pop
arpl
pop
sti
shl
or
dec
mov
mov
jb
loopne
ds
xchg
sbb
add
mov
aad
fcmove
pop
sahf
cmp
pop
push
or
outsl
xor
lea
mov
mov
mov
sub
push
cmc
dec
sub
mov
neg
adc
stos
push
dec
and
add
mov
mov
lds
or
xor
popa
jnp
shl
daa
jg
xchg
cmp
dec
imul
in
lock
pop
into
push
cmpsb
dec
or
repz
loop
pop
lcall
stc
ljmp
ds
or
sbb
add
or
rorb
dec
icebp
xchg
mov
scas
xorl
adc
ljmp
jmp
cmp
fildl
fisubl
mov
jmp
rorb
shrb
test
fwait
dec
xchg
lock
mov
sub
orl
psrlw
mov
popa
jge
ljmp
lahf
imul
xchg
or
aad
repz
and
cmp
mov
pop
mov
test
sub
xor
psubusw
mov
jl
mov
gs
faddl
inc
sub
loope
or
adc
sub
cltd
in
aaa
arpl
nop
mov
rcr
movb
mov
sub
add
pop
mov
jg
pop
push
shl
mov
jmp
mov
out
imul
xor
int3
scas
in
mov
sub
outsb
jle
test
sbb
les
aam
mov
dec
inc
adc
and
mov
imul
cli
popa
and
xor
imul
stos
mov
pop
int3
aam
jae
xor
sub
loop
jp
jmp
xor
sbb
rol
xchg
loop
aad
loop
inc
cmp
sbb
iret
pop
fisubs
add
xchg
inc
or
lret
jg
xchg
jp
sbb
test
and
xchg
xchg
leave
pop
push
mov
insb
jmp
adc
add
mov
in
mov
incb
lcall
sub
add
cmp
mov
std
pushf
fnstsw
icebp
xor
or
scas
stc
dec
pop
jl
push
ret
aam
hlt
jl
xchg
cmp
xchg
add
out
jb
leave
sub
loopne
addr16
mov
stc
cmp
xor
in
mov
nop
dec
xor
das
movsl
xor
lock
aas
jns
sbb
push
sti
xchg
mov
mov
xchg
cmp
ss
and
and
xor
and
mov
xchg
aaa
sbbl
cmp
stc
fiaddl
ret
dec
test
push
xor
ret
jb
imul
mov
pop
and
jb
jl
jnp
movsb
mov
adc
ret
xor
inc
sub
pusha
add
int3
jbe
cltd
pop
dec
pop
shll
mov
add
push
jecxz
mov
xor
into
push
inc
add
fdivrl
mov
cmpsl
dec
inc
out
inc
imul
fnstenv
cmp
insb
sti
sub
aas
xlat
inc
inc
and
mov
xor
adc
shrb
neg
out
mov
les
loopne
pop
sub
inc
and
out
mov
inc
mov
fcmovb
mov
dec
jnp
dec
push
inc
sbb
or
sbb
jge
cmpsb
mov
or
jge
xchg
fcomps
push
js
aad
cwtl
fcompl
lods
jno
xor
inc
shrb
cs
cmpsl
dec
lods
mov
int3
pop
mov
enter
add
push
inc
cli
jno
movsl
aam
stos
sti
rolb
lret
lcall
dec
mov
mov
ja
add
ja
mov
bnd
mov
jno
outsb
icebp
or
or
cmc
movsl
or
cmp
mov
and
cmp
push
sub
movsl
mov
aam
or
or
or
cmp
das
inc
mov
mov
arpl
add
and
cmc
push
xchg
fildll
cmp
sub
out
sub
test
arpl
mov
stos
scas
cmp
popf
pop
enter
cli
sbb
sbb
je
sbb
int3
mov
cmp
mov
outsb
movsl
pop
adcl
push
sbb
pop
sti
popa
sbb
lret
es
scas
test
cld
lret
mov
dec
ficoml
aaa
mov
xor
in
pop
push
and
push
push
push
pop
pushf
jbe
sbb
jl
lret
mov
sbb
add
fucomi
adc
mov
inc
push
inc
and
inc
cwtl
sub
aas
pop
pop
pop
arpl
jne
subl
inc
adc
push
inc
fs
nop
leave
or
add
aam
xchg
hlt
cmp
popa
es
lret
add
fcoms
out
in
movsl
cmp
sahf
mov
cmpl
xchg
mov
or
add
add
sbb
xor
sub
out
fwait
adc
shrb
pop
stos
mov
fidivs
inc
ret
out
iret
sbb
mov
int3
mov
out
push
imul
sbb
testb
push
push
push
bound
pop
iret
xlat
xchg
inc
mov
add
push
in
or
cmp
xor
pop
stos
cld
sbb
push
das
cmp
xor
pop
lods
mov
push
pop
mov
xchg
fsubrs
mov
cmpl
pushf
inc
cltd
cmp
fistps
ss
jo
mov
jp
aam
or
aam
mov
xchg
or
xor
xor
outsl
cmp
adc
dec
dec
mov
dec
xor
lret
out
push
aam
xlat
and
sub
fnstsw
imul
xorb
jne
pop
dec
aam
int
mov
dec
mov
bound
es
fistl
jge
call
aaa
fisubs
fwait
into
adc
rolb
jne
inc
pop
loop
mov
mov
cmp
mov
jp
mov
shll
clc
rolb
inc
jp
dec
jp
push
scas
pop
shlb
or
sub
pop
add
dec
pop
xor
hlt
push
pop
inc
add
mov
cld
sub
inc
stc
loopne
rorl
mov
mov
cld
jbe
pop
adc
mov
aas
or
mov
movsb
jmp
adc
mov
call
ss
or
adc
ljmp
xor
jo
xchg
mov
roll
mov
sub
push
push
mov
cmpl
pop
hlt
jecxz
sbb
or
lock
call
mov
mov
dec
nop
ja
fimull
dec
sub
sub
andb
lock
test
sub
sbb
or
cmpsb
dec
or
jecxz
sahf
add
fimull
or
push
mov
or
insl
frstpm(287
enter
cmp
push
jno
pop
push
lds
sub
xchg
sahf
and
or
dec
pop
mov
xchg
sub
jno
in
and
rorl
push
int3
cld
jecxz
xchg
in
insb
in
jo
adc
xchg
cld
add
lret
xchg
out
push
in
outsb
inc
fistpll
scas
ja
in
aas
inc
hlt
ret
cmp
mov
repz
pop
sbb
hlt
xchg
push
inc
mov
loope
cmc
mov
and
aaa
iret
or
movsl
adc
mov
dec
jo
into
jle
jmp
out
imul
dec
stc
mov
pop
out
fldenv
add
jecxz
cltd
jo
and
adc
lcall
mov
or
mov
xor
mov
xor
sbb
push
cli
out
and
stos
scas
mov
and
push
ja
into
inc
xor
fcmovnbe
fs
in
or
out
jbe
pusha
jae
testb
add
sbb
or
dec
pinsrw
je
cmp
stos
mov
sti
repz
les
test
jmp
fwait
cmpl
aam
movsl
bound
in
mov
loop
es
fwait
jbe
les
dec
jno
sbb
pop
je
js
pop
loope
jo
out
jmp
iret
cmp
stc
rcr
xor
pushf
fistpll
pop
cmc
sbb
or
mov
or
pop
clc
mov
nop
push
xchg
ret
inc
or
pop
scas
roll
push
sbb
scas
adc
mov
dec
cmpsb
jmp
stos
push
popf
cmp
inc
push
dec
cld
sahf
pusha
cwtl
pop
cmp
dec
sbb
xchg
cwtl
cmpsl
mov
lret
fmuls
ss
dec
outsb
aas
jno
mov
iret
aad
jecxz
pop
mov
dec
adc
jg
scas
into
out
mov
adc
aaa
mov
notl
xchg
or
xor
fiaddl
outsb
movsb
lcall
aad
xchg
call
adc
scas
js
add
aam
push
inc
sbb
push
lret
aaa
or
pop
inc
outsb
adc
pop
jbe
sub
jae
fwait
out
xchg
mov
push
pop
sahf
or
fs
leave
and
incb
adc
std
xchg
xor
jg
dec
add
adc
hlt
pop
gs
xor
loopne
mov
int3
mov
test
jns
pop
xchg
mov
test
jnp
mov
pop
or
mov
cmp
or
sbb
int3
stos
mov
pop
and
arpl
jno
mov
jo
mov
adcl
pop
mov
out
outsl
negl
das
cmp
sti
mov
xchg
dec
jp
push
push
push
ljmp
cmpsl
xchg
notl
push
push
pop
mov
push
xchg
shll
pushf
je
sti
mov
pop
push
pushf
mov
icebp
fidivrl
into
cmp
je
loope
cmpsl
adc
sub
adc
in
ja
insb
xchg
pop
shrb
add
cltd
cmp
out
repz
adc
adc
imulb
add
fs
sub
aam
xchg
ljmp
sub
pop
xchg
or
cltd
dec
sub
lret
dec
addl
das
shll
mov
sbb
or
addb
jecxz
adc
inc
rorb
addr16
or
push
sub
mov
movsl
in
pushf
mov
imul
sbbl
inc
in
adc
lds
adc
and
mov
loop
mov
mov
subl
push
data16
adcl
movsl
nop
cli
mov
dec
in
mov
mov
es
pop
adc
sbb
stc
mov
bound
aas
and
xor
pop
mov
sti
dec
xchg
push
jle
insb
in
scas
das
in
jb
bound
sbb
fstpt
mov
repz
leave
xchg
and
ja
jbe
and
call
adc
inc
clc
mov
rorb
in
lds
mov
adc
ja
mov
and
int
cli
fcmovnbe
inc
das
rorl
sbb
scas
jae
cli
and
sbb
mov
adc
jp
jno
stc
je
pushf
in
inc
outsl
test
cmp
les
jns
pusha
lock
and
in
sahf
or
or
sahf
fistpll
xchg
cmovo
shl
inc
filds
xlat
imul
andl
loopne
push
mov
mov
cs
cmp
into
mov
sub
cmp
dec
or
mov
js
pop
xchg
and
cmpsb
xchg
cmpsb
mov
ja
jle
icebp
scas
inc
and
movsl
pop
cmc
dec
sarb
test
cmp
sub
int3
xchg
rorb
xor
push
arpl
xchg
adc
inc
addr16
insb
notl
dec
mov
xchg
or
stos
mov
sbb
rclb
dec
push
repz
mov
xchg
and
mov
test
adc
stos
loopne
mov
or
mov
push
adc
repz
bound
icebp
push
or
pop
and
call
imulb
psrlw
mov
xchg
xor
xchg
sbb
pop
cmc
outsl
and
xor
jns
dec
cmp
xchg
cmpsb
cmp
mov
jno
es
xchg
sub
xor
xchg
pop
pop
push
push
shl
cwtl
mov
outsb
xor
leave
movsl
in
cmp
pop
mov
insl
or
inc
cmp
fldcw
xor
popa
daa
aaa
cltd
aaa
adc
adc
shlb
out
jecxz
and
scas
xchg
mov
roll
adc
jbe
cwtl
gs
push
sar
out
cld
inc
cmpsb
jmp
add
cmp
lods
in
mov
test
and
inc
inc
xor
mov
mov
or
inc
scas
sbb
aaa
hlt
aam
loop
fucomp
lahf
cmp
dec
lock
or
dec
xchg
mov
adc
mov
mov
pop
iret
test
inc
cmp
cmp
aad
dec
cmpsl
out
add
pusha
sar
loop
lret
pop
inc
jg
lahf
jno
arpl
pop
mov
lods
mov
mov
sbb
cmc
jno
mov
lock
lods
push
or
mov
push
inc
dec
push
fistpl
in
int
fisttpl
jae
mov
and
or
inc
push
mov
add
cmp
out
jae
adc
xchg
hlt
and
jnp
push
sbb
jmp
pop
and
mov
sbb
jne
je
mov
mov
push
push
cmp
in
xlat
rcr
arpl
pop
daa
lods
in
imul
sub
push
or
bound
test
aad
jae
in
in
inc
push
mov
adc
cs
pop
inc
mov
sti
adc
mov
pop
push
loop
pushf
negl
sbb
adc
jge
pop
push
jb
mov
sub
std
push
cmp
cmp
and
stc
scas
push
notb
cmc
mov
jmp
inc
jmp
pop
mov
test
jno
jecxz
dec
push
ret
or
jge
xchg
cld
push
pop
sbb
sbb
and
jecxz
cltd
pop
push
push
xchg
fsubrl
or
ret
testb
pusha
jle
pop
clc
push
cli
cld
aad
mov
pop
dec
icebp
push
mov
ja
add
movl
int
ljmp
adc
and
fisttpl
lret
stos
enter
loope
sbb
iret
sarl
fsubrl
fidivrl
mov
dec
pop
and
clc
pop
mov
outsl
add
mov
cld
stos
push
sub
js
push
arpl
scas
int3
mov
mov
mov
icebp
adc
xor
loop
mov
add
jg
jnp
mov
out
mov
ds
test
and
imull
pop
xor
leave
hlt
cld
and
fs
movsl
fsubs
push
jne,pt
ret
xchg
pop
jg
xchg
lret
ret
sub
shrl
out
sbb
repz
adc
in
inc
pop
sarl
dec
dec
inc
pushf
xor
in
repz
stos
rcll
repnz
cwtl
movsb
pop
test
call
sbb
adc
or
jb
lock
or
sbb
and
ret
popa
in
adcb
and
shlb
cmp
mov
jp
mov
pop
icebp
and
jl
jb
in
popf
xchg
shlb
iret
xchg
jmp
ds
gs
call
loop
dec
pop
lea
test
movsb
icebp
sub
mov
push
xchg
lods
mov
lret
adc
push
add
stc
adc
sub
icebp
das
sbb
jle
mov
xchg
movswl
jmp
cmp
les
cltd
mov
or
clc
into
fst
or
cmp
mov
push
cmc
int3
stc
shll
jmp
rolb
push
rolb
push
insb
add
aaa
mov
pusha
js
sub
js
add
xor
dec
or
ja,pt
mov
adc
lahf
xor
stos
sbb
xchg
xchg
sub
sbb
test
cmp
pop
pushf
out
adc
adc
into
jecxz
xchg
sbb
add
and
jnp
inc
lea
subl
mov
mov
push
aad
push
adc
sarl
mov
xchg
dec
stos
mov
cmpsl
dec
orb
push
xchg
add
inc
cmpsl
in
lea
lea
sbb
mov
iret
sbbb
iret
loop
subl
pusha
loope
aad
cmc
mov
or
rcrl
inc
fsubs
mov
test
in
and
mov
sub
dec
or
cli
pop
addb
add
test
insl
mov
popf
mov
addr16
cmp
cmpsl
jg
cmp
out
mov
adcb
pop
imul
out
aad
dec
sbb
lahf
cmp
mov
ret
out
movsb
mov
or
js
into
rcrl
dec
dec
fwait
fimuls
mov
xchg
and
sub
mov
bnd
or
xor
aaa
and
sbb
xor
inc
fs
scas
xchg
and
adc
jmp
mov
stc
lock
in
xor
dec
loop
sbb
iret
fs
js
ss
fwait
lret
pusha
aaa
mov
push
movhlps
rcr
dec
inc
in
mov
lret
rolb
lds
xchg
arpl
mov
sbb
and
inc
bound
xorl
pop
adc
hlt
jmp
cmovb
stos
jp
mov
shll
ja
push
xor
push
sub
fsts
cmc
cli
sub
pop
flds
mov
lret
mov
ret
cmp
mov
aaa
shlb
pop
mov
movsb
cmpsb
pop
mov
jmp
inc
das
dec
ss
mulb
xor
sub
adc
insb
sbb
adc
imul
stc
adc
or
add
leave
mov
cmp
lret
jbe
popf
mov
sbb
outsb
cmp
jle
push
or
pushf
insb
das
pushf
xor
sbb
push
adc
cmpsl
mov
adc
push
enter
movsb
das
jg
mov
cltd
repnz
cmp
cwtl
lret
pop
call
adc
jno
mov
jo
in
inc
pop
sbb
icebp
sbb
stc
xor
out
sbb
xor
or
ret
call
mov
push
int
inc
mov
and
jbe
stos
xchg
inc
xor
and
loope
xor
cmp
sbb
add
out
mov
aam
mov
js
cmpsb
and
push
and
xchg
mov
mov
aaa
rcrl
pop
rorl
pop
jg
cs
adc
dec
lret
pop
xchg
or
or
into
add
outsb
in
push
aam
andl
ret
add
loope
sbb
clc
lea
popf
xchg
cwtl
pop
and
flds
icebp
xchg
push
jnp
mov
sbb
loop
push
bound
xor
mov
mov
inc
in
clc
into
jp
add
or
jle
mov
adc
inc
inc
jle
cmp
fdivrl
xchg
movsl
push
bound
lea
sbb
shl
mov
add
test
cmpb
cltd
adc
xchg
mov
xor
inc
loop
in
push
xor
and
mov
dec
xor
mov
dec
mov
sub
cmc
clc
jl
xchg
mov
inc
add
cmp
sbb
in
mov
loopne
fidivs
iret
addr16
scas
fadds
mov
or
inc
or
mov
xor
fcomps
filds
loop
mov
shl
sbb
push
pop
and
and
mov
pushf
pop
dec
sbb
iret
test
scas
shrl
fmuls
adc
and
es
hlt
add
xor
mov
and
sub
xchg
mov
dec
mulb
jmp
mov
mov
das
out
pop
sahf
or
scas
and
xor
popa
and
xor
mov
jmp
inc
push
cld
xlat
jbe
and
pop
and
aad
jo
adc
pusha
mov
testl
ret
ret
adc
jg
or
sbb
adc
fdiv
inc
mov
stos
cmp
inc
nop
mov
mov
push
test
test
hlt
stos
jmp
out
pop
or
ds
imul
adc
cmp
xchg
lods
andnps
aaa
mov
lods
add
repz
pop
lret
sahf
addr16
sub
cmp
push
jecxz
cltd
mov
outsl
loope
dec
popa
sarb
push
mov
jge
mov
in
shlb
push
cld
or
nop
lcall
cmc
push
cmc
scas
cmp
insb
mov
imul
fmul
sub
out
scas
stc
movsl
push
cmp
into
mov
dec
sub
cld
xor
js
bound
adc
sahf
fcompl
inc
xchg
ret
icebp
lret
into
push
and
out
add
pop
add
ret
jl
push
pop
std
and
push
adc
fimull
arpl
cmp
outsb
lods
push
mov
incb
out
sbb
ljmp
mov
popf
fwait
pop
pop
call
push
mov
ret
jns
hlt
and
in
add
clc
pop
cmpsb
stos
in
insb
lcall
push
jecxz
add
mov
lea
sbbl
jmp
jne
inc
lods
lods
test
test
and
mov
xchg
lret
es
or
rolb
cmc
mov
std
std
adc
imul
lret
bound
lahf
in
int3
xchg
mov
cltd
out
cmp
out
pusha
fsubs
sbb
pushf
lods
out
cli
push
in
pop
in
jle
dec
pop
cmpsb
push
push
shl
shlb
sbb
push
roll
sbb
lods
xorl
xchg
xchg
mov
push
jbe
dec
push
outsb
jns
clc
xor
clc
jb
jge
test
cmpsb
xchg
mov
dec
test
lds
push
shl
clc
cmc
out
mov
xor
ljmp
nop
push
cltd
add
push
or
sbb
fstp
mov
xor
mov
sub
push
jmp
adc
dec
test
jns
lret
dec
aam
daa
fsubrs
lock
jl
dec
xchg
and
ss
jmp
adc
fmull
loope
jp
jns
test
xlat
into
aam
jg
cmp
addr16
test
fwait
jmp
adcb
lahf
mov
jecxz
and
fmul
xchg
int
mov
in
and
push
pop
sar
mov
roll
icebp
rorb
addr16
dec
or
push
inc
ret
xlat
fs
sub
enter
sarl
xchg
insb
pop
inc
jp
add
fcomps
sbb
inc
and
dec
rclb
cmpsb
orb
xchg
outsb
frstor
push
push
cmp
pusha
jp
fdivrs
divb
mov
imul
xlat
repnz
ss
cmpsl
mov
and
dec
hlt
enter
cmp
addb
pusha
rcrb
out
bsf
inc
xchg
and
or
lods
insl
sub
xchg
sbb
pop
gs
xor
out
testb
and
xchg
test
sti
add
mov
adc
inc
imul
inc
das
lds
mov
cmc
cwtl
sbb
xor
leave
loopne
scas
pusha
push
aam
and
xor
pushf
mov
adc
scas
adc
sbb
lds
repz
test
fs
inc
sub
lods
jecxz
hlt
mov
cmp
lret
dec
jae
xlat
pop
xor
mov
mov
loopne
add
jnp
mov
enter
adc
bound
cmp
stos
cwtl
lea
out
cmp
pop
mov
jae
ja
rsm
inc
stos
js
pop
adc
cmp
insb
push
stos
push
add
sbb
adc
sub
push
xchg
or
mov
loope
xchg
add
pop
sub
push
cs
cmpsb
in
jns
add
cmpl
pop
adc
mov
test
fstps
jb
bound
out
fcoms
ljmp
icebp
jge
aad
and
inc
mov
stos
mov
imul
push
lea
sub
clc
mov
dec
jmp
sarb
lods
pusha
sbbb
pop
mov
insl
push
dec
xor
jne
les
xor
das
andl
in
cmp
test
sbb
pop
and
test
inc
testb
addr16
mov
cmpsl
cmp
push
pop
inc
test
or
gs
subb
rolb
cli
xor
inc
arpl
jns
scas
dec
push
or
sbb
mov
std
scas
mov
pop
movsl
and
daa
jmp
push
and
push
popa
jnp
jae
ret
push
inc
xor
repz
jg
lods
fsubrl
or
jae
xchg
shlb
and
mov
das
sbbl
add
sbbl
mov
add
mov
sub
push
cmp
mov
fisubrl
push
outsl
data16
mov
sub
fildll
xchg
cmpsb
pop
xor
pushf
or
adc
inc
mov
loop
pushf
jl
fmull
and
stos
inc
addl
adc
test
loope
xchg
mov
pop
cmp
xor
es
dec
cltd
mov
push
lahf
adc
cmp
lahf
aaa
pushf
icebp
lret
adc
movd
adc
and
xchg
jg
cltd
shrb
xor
lea
adc
adc
inc
ds
sub
lret
dec
ficoml
xchg
dec
fmulp
add
mov
pop
add
or
sarb
cmpsl
add
jnp
das
or
in
jle
in
sar
iret
icebp
and
dec
popf
pop
gs
lahf
cmpsb
add
lods
dec
dec
cmp
xchg
out
xchg
dec
push
jnp
inc
cmovne
rolb
hlt
scas
mov
fnstenv
loopne
jle
into
rclb
insb
mov
add
movsb
jmp
xchg
push
data16
jg
and
mov
mov
aam
cmpsb
in
or
inc
stos
aam
xchg
test
add
test
xor
test
les
inc
loopne
cmp
daa
sbb
sahf
and
push
out
stos
pop
nop
addr16
daa
daa
mov
mov
inc
sahf
sbb
push
dec
iret
bound
cmp
dec
in
scas
or
xlat
cltd
popf
dec
stos
scas
int
xchg
das
dec
aaa
and
orb
fwait
pop
sub
jbe
adc
lret
xchg
sub
sbbl
lcall
fistpl
jl
cmp
iret
and
xorb
test
lods
jle
dec
enter
cs
loopne
ret
or
loope
xlat
testb
push
adc
jbe
cmpsl
or
xor
dec
inc
xchg
add
xchg
daa
sbb
xchg
cmc
push
cli
push
in
cmc
idivb
jne
in
add
movsl
add
int
sub
sahf
les
aas
es
jns
inc
jb
mov
fdivrs
and
out
cmpsb
pop
push
arpl
sbb
stos
push
fwait
adc
add
push
dec
push
aad
call
std
push
xlat
mov
pop
mov
fwait
mov
lret
xor
jl
pop
adc
out
loopne
add
cs
ja
jno
inc
in
out
popa
jmp
mov
test
hlt
lock
push
ja
or
push
cmp
or
data16
sbb
pop
mov
stos
fnstcw
lahf
or
rclb
xchg
out
lea
mov
add
add
or
jge
xchg
jo
subl
pop
cli
push
lds
lock
out
mov
mov
in
and
pop
jne
roll
push
lahf
sub
mov
je
sarl
enter
adc
lcall
data16
test
fidivrs
sub
adc
loope
lret
xor
mov
and
in
movsl
cmp
cmp
std
pop
or
mov
sub
mov
imul
and
stos
jnp
cmp
and
orl
aas
mov
in
push
cmp
not
sub
lods
push
push
arpl
and
dec
mulb
add
sti
and
dec
in
repz
neg
aam
insb
dec
outsl
ljmp
stos
sub
pop
fwait
ja
sub
cmp
mov
cld
cmp
sbb
leave
jecxz
cs
add
adc
sub
enter
sbb
xchg
inc
pop
cld
in
movsb
mov
xchg
mov
fnstcw
nop
jns
push
stos
jmp
sub
fidivl
jmp
cld
jb
xor
mov
and
xchg
sbb
cmp
cmpsl
jp
cwtl
ds
mov
fiaddl
jno
mov
xorl
push
clc
pop
cli
ljmp
cmc
das
cld
fmul
push
sbb
hlt
push
cmp
test
test
dec
inc
mov
out
addr16
sbb
movsl
imul
jg
outsl
mov
enter
scas
popf
push
add
jnp
hlt
aam
sarl
inc
subl
call
jo
or
add
testl
sahf
mov
xchg
cmpsb
popa
pop
xchg
xchg
mov
and
sbb
inc
lahf
je
hlt
mov
clc
xchg
fdiv
inc
inc
shrl
jl
inc
sub
clc
sbb
push
mov
adc
loop
mov
add
cmpsl
push
out
imul
in
fcomps
das
pop
inc
jnp
in
xchg
mov
shll
push
jne
mov
xchg
cmp
div
rolb
and
and
add
scas
or
stos
sub
aam
push
jmp
cmp
mov
sar
sbb
out
mov
mov
lea
push
roll
cmpsl
pop
pop
xchg
insb
adc
out
in
bsf
insl
cmp
pop
push
or
pop
rcll
pop
pop
insl
xor
js
and
and
lods
pop
mov
push
mov
fs
add
popa
or
shrl
roll
mov
mov
int3
mov
insl
sbb
and
push
inc
cmp
xor
xchg
fsubl
mov
cmp
and
icebp
inc
or
rolb
fistps
scas
and
ret
in
jne
loope
stos
push
stos
inc
sti
mov
xor
lods
outsb
test
inc
int3
mov
lahf
push
sbb
xor
mov
pushf
cli
in
jmp
inc
mov
je
add
les
jns
pop
inc
daa
sbb
push
inc
xor
mov
mov
push
popa
mov
jp
enter
f2xm1
cvtpi2ps
mov
mov
sbb
pop
sub
insl
sub
mov
mov
jnp
pop
insb
xchg
fistl
mov
orl
add
cmp
mov
xchg
sbb
mov
ds
loope
fwait
sti
push
mov
add
int
out
jg
adc
xchg
test
xchg
outsl
xor
or
hlt
int
test
push
cltd
aas
add
jno
push
outsl
loopne
fsubl
mov
jle
push
mov
ror
outsl
ja
outsl
jbe
mov
dec
decb
and
push
push
stc
xchg
in
sbb
in
push
into
pop
cmp
in
imul
lods
pop
pop
sub
stc
push
adc
add
lea
bound
repz
jno
int3
rclb
out
adc
pop
and
push
insl
mov
dec
es
sub
scas
dec
mov
pop
mov
hlt
push
mov
mov
test
ljmp
xlat
out
cmp
loopne
aaa
pop
loope
shll
xchg
mov
or
mov
vmovups
push
lods
in
ret
loope
mov
xlat
sbb
pop
dec
nop
mov
ret
inc
pushf
scas
and
dec
ret
aaa
out
jge
mov
mov
add
rolb
pop
ss
imul
xchg
sbb
roll
inc
xor
fisubs
cmpsb
and
jns
inc
adc
scas
dec
movsl
sbb
mov
aad
jne
ss
stos
aad
inc
rorl
mov
movsl
js
mov
xor
add
mov
pushf
loop
jecxz
mov
mov
adc
push
in
pop
stos
outsb
fcoms
mov
sbb
mov
adc
xor
shll
mov
cmp
imul
iret
and
sti
out
nop
push
stc
cmpl
inc
dec
mov
bnd
mov
jne
jne
test
bound
jns
push
jns
sub
sahf
mov
jo
lahf
xor
and
push
add
mov
int
xchg
mov
fwait
data16
in
cmp
pop
cmp
push
fnstenv
push
or
push
rcl
ljmp
lcall
je
fwait
add
aaa
popf
adc
mov
lea
jle
cmp
jp
mov
bound
adc
jmp
inc
mov
jecxz
aas
rolb
in
jl
inc
repz
mov
jae
push
fildll
pushf
mov
in
inc
pop
mov
clc
clc
popf
mov
divb
aad
in
lcall
lea
shl
lods
or
out
subb
leave
lret
sub
test
jne
movaps
les
sub
sub
sarl
iret
xchg
scas
scas
out
inc
or
mov
push
or
test
inc
imul
mov
arpl
push
nop
test
pushf
adc
sbb
jge
cld
outsl
aas
pop
sub
lahf
sbb
cmpsb
insb
push
xor
adc
xor
adc
sub
cli
movsl
cmp
mov
adc
test
push
jecxz
add
lods
or
fyl2x
lds
imul
cmp
jle
rcrb
xchg
jg
vhsubps
or
jle
test
sti
push
jp
out
or
mov
mov
jno
push
bound
xor
je
loopne
mov
addr16
sbb
push
popf
cmpsl
or
adc
imul
push
mov
xlat
icebp
xadd
sub
scas
cmp
mov
mov
jns
and
mov
dec
pop
pushf
mov
sbb
adc
jmp
inc
xor
mov
cltd
sbbl
pop
xor
test
out
mov
adc
push
push
loope
cmp
add
mov
das
enter
in
mov
inc
mov
push
loop
mov
shrb
shlb
fcompl
arpl
movsb
test
leave
sub
push
push
inc
ja
pop
mov
mov
outsb
fucomi
or
cmp
mov
rorl
push
mov
sbb
xor
xor
jne
std
mov
addl
add
and
add
addr16
sahf
jp
cmpsl
mov
imul
into
divb
loope
push
or
sub
jg
lahf
out
sbb
inc
xor
lea
jbe
cmp
lods
movsl
ljmp
outsb
out
scas
fcomps
mov
fs
repnz
cmc
xlat
dec
pop
xchg
jbe
es
loop
mov
adc
popf
add
jnp
mov
mov
lret
inc
xor
jne
cmp
mov
out
xchg
push
inc
or
add
jne
out
fmuls
dec
xchg
xchg
test
punpckhwd
mov
out
sub
jne
mov
in
push
mov
jnp
sbb
cmp
push
push
sbb
fcmovnbe
xchg
and
xchg
cwtl
outsb
mov
fcmovnbe
xchg
jecxz
adc
push
popa
outsb
lds
leave
lods
push
test
jp
cmp
dec
adc
pushf
lods
dec
jbe
mov
sar
out
sub
in
call
pop
dec
lcall
out
pop
outsb
sbb
orb
outsl
xchg
loope
pop
or
mov
pop
jbe
popa
pop
dec
jb
fsts
lods
sti
negl
pop
repz
push
or
aam
jno
imul
shll
sub
fdivrs
lret
xchg
jns
ljmp
je
ficompl
xor
push
mov
mov
xor
add
js
inc
ret
popf
insb
imul
outsl
lods
mov
lret
jle
and
jnp
mov
aad
xchg
add
or
cmp
or
pop
xchg
mov
jno
out
and
sbb
fsubs
sbb
imul
ret
rcrb
loopne
out
adc
fadd
mov
mov
pop
xor
enter
cmp
and
test
xlat
cmp
popa
xchg
pop
add
xlat
out
out
icebp
data16
mov
js
js
pop
lahf
aam
stc
ret
lock
xchg
xchg
xor
mov
hlt
inc
fcoml
cvtps2pd
in
gs
push
dec
mov
push
stos
xchg
jo
add
test
outsl
icebp
dec
sbb
jo
xlat
lret
or
jp
sbb
int3
xorl
add
inc
mov
imul
fs
mov
popf
stos
and
xchg
outsb
dec
je
push
movsb
add
sbb
outsb
iret
pop
and
cmpb
dec
pop
subb
outsb
adc
xor
jnp
add
call
mov
fists
dec
jge
scas
xchg
in
insb
sub
xchg
push
lahf
movsb
push
lret
mov
mov
jo
cmp
insb
shl
cli
jle
dec
int
jmp
test
popa
dec
testl
cltd
fcoml
and
push
daa
jo
jno
cmp
xchg
dec
push
mov
int
mov
popf
mov
dec
lret
jns
add
jns
and
and
in
nop
jp
mov
jge
dec
les
jl
dec
lret
ud2
js
adc
repnz
fwait
js
push
aaa
in
stos
sbb
test
add
mov
and
push
push
push
movsl
jbe
cmp
push
cmp
movsb
xor
jg
hlt
shll
or
bound
jmp
inc
dec
aad
sub
push
dec
aad
mov
cld
scas
lahf
adc
adc
fs
jno
orb
and
push
addr16
jb
hlt
and
push
pop
pop
push
inc
add
and
or
jne
cmp
mov
dec
outsl
movsl
fdivl
jbe
jg
lret
inc
clc
movsl
aam
and
mov
push
subl
mul
loopne
ret
jae
dec
inc
jo
xor
mov
orl
adc
in
lcall
or
in
lock
shr
add
shll
mov
push
scas
sahf
mov
lfs
inc
lods
push
jnp
sbb
xor
cmpsl
inc
cmp
cmp
jl
lea
decl
jnp
out
imul
fwait
mov
add
rcrb
mov
or
loopne
leave
int
js
insb
mov
clc
dec
cmp
rolb
push
int
dec
test
push
and
pop
jne
fbld
xor
dec
jne
add
aam
or
push
gs
pushf
fcmove
popf
scas
adc
jb
test
test
jl
push
call
pop
mov
jecxz,pn
push
xlat
jnp
rep
or
add
loopne
push
or
adc
aaa
push
cmp
dec
pop
or
add
jge
imul
pop
mov
pop
xchg
aam
frstor
aas
sahf
bound
xchg
in
test
add
jnp
or
cs
jb
mov
dec
jno
jg
shll
pop
test
pop
xchg
jl
aam
sub
stos
or
frstor
scas
sbb
loope
adc
jg
in
rorl
or
testb
push
icebp
xor
add
inc
sbb
int
push
fucom
jge
jo
lahf
mov
jle
xchg
leave
xor
push
int
and
push
test
sub
mov
xor
lock
data16
aam
cs
xchg
cltd
push
sub
sbb
bound
mov
sub
std
outsl
or
xchg
xor
fldenv
adc
push
ds
hlt
mov
or
cmpsb
scas
icebp
insl
adc
sbb
mov
mov
mov
add
mov
and
cmp
imul
movl
adc
in
ret
fcmovne
push
push
sub
sub
adc
xchg
lret
xchg
jmp
or
mov
arpl
cmc
iret
dec
loop
xor
adc
inc
jnp
ljmp
push
lahf
sar
repz
add
inc
lcall
add
or
adc
iret
xchg
mov
sub
push
jne
imul
add
inc
and
aad
sbb
fwait
xchg
fcoml
dec
push
ret
mov
adc
fwait
scas
cli
lret
jne
mov
mov
nop
jg
push
pop
dec
incl
es
inc
addr16
rcrb
fists
movsb
sub
rcrl
sub
pop
jp
or
sahf
sub
jae
paddw
int3
xchg
mov
das
js
sub
push
dec
sub
push
out
xchg
push
sbb
addr16
xchg
jl
push
mov
sbb
mov
movsb
in
out
add
ficoml
pushf
lods
ficoml
dec
fistpll
test
fcomps
cmp
aam
addr16
xchg
addr16
gs
nop
push
dec
xor
cmc
hlt
sub
pop
cmp
sbb
and
inc
fst
das
lods
loopne
jne
push
mov
iret
pop
pop
mov
cmc
mov
inc
cld
ljmp
cli
pop
mov
mov
xchg
pop
movsb
dec
mov
jecxz
jne
add
or
and
cmp
mov
ds
ds
sub
test
sub
shrl
jne
sbb
push
lock
mov
loope
mov
dec
jp
hlt
decl
movsb
and
inc
test
fidivl
into
dec
cmp
out
imul
xchg
jmp
mov
sahf
iret
cmp
inc
mov
mov
or
cmc
jge
cli
aad
mov
adc
adc
roll
jecxz
and
adc
add
sti
sbb
sub
cmpsb
xchg
lods
push
in
sub
sti
adc
shll
ja
dec
popf
cld
or
jns
push
pop
cltd
test
shrl
adc
outsl
sbb
sub
scas
inc
adc
cmp
cmp
pop
jo
testl
hlt
jo
ret
scas
sub
enter
fnstsw
mov
pop
scas
mov
mov
jb
jo
outsb
repz
test
cmp
rcrl
stc
sub
jnp
ljmp
inc
les
shll
pop
dec
clc
cmp
movsb
sbb
sbb
pop
xchg
jne
mov
iret
cmpsb
xchg
mov
fidivs
movsb
dec
fistpl
xchg
mov
outsl
sbb
cli
fnstcw
mov
mov
int3
icebp
mov
lods
testb
gs
bound
or
inc
push
xchg
sub
outsl
cmp
cmp
lahf
jnp
sub
dec
jae
push
das
jecxz
jnp
sub
lods
and
test
ljmp
mov
sti
int
push
aas
pop
cmp
jne
je
xlat
xchg
mov
sbb
adc
push
jne
and
lods
jmp
push
pop
sub
mov
jmp
leave
fsts
cmp
aaa
lods
inc
push
fidivl
sarl
mov
xchg
test
mov
mov
icebp
mov
mov
dec
gs
dec
push
movsb
push
lock
lods
and
jmp
cmc
push
mov
mov
jo
test
adc
cmp
dec
out
lock
out
pop
xlat
inc
gs
lret
pop
cmpsl
xor
outsl
in
sar
jp
or
sbb
dec
in
or
sbbl
pushf
pop
pop
mov
push
dec
das
dec
lret
pop
stos
cmpsb
enter
lret
push
imul
outsl
xor
cmpsb
cmp
pusha
push
dec
aad
push
adc
mov
fistpl
ret
add
adc
xchg
insb
fcompl
add
fs
sbb
dec
lock
insl
ficoms
xor
lea
call
add
xchg
adc
or
je
adcl
pop
push
sub
adc
mov
dec
add
scas
iret
loop
jnp
add
std
push
xchg
xchg
mov
out
inc
adc
fnstsw
loop
sbb
add
pop
sbb
pop
inc
push
sbb
mov
sbb
icebp
lahf
mov
push
sahf
int
inc
mov
int3
or
mov
test
pop
aas
inc
cmp
std
inc
test
jge
ja
jb
fcoms
lret
out
ss
sahf
daa
sub
jle
movsb
cmc
pop
cmc
or
ds
int3
mov
das
lds
push
and
add
in
cmc
sbb
inc
ret
lret
xlat
cmp
or
aaa
pop
dec
jmp
fwait
mov
ja
into
mov
mov
scas
mov
out
mov
mov
mov
cmpl
aad
xor
add
jl
shlb
mov
fadds
in
sbb
loope
push
mov
clc
call
xor
push
push
imul
and
repz
nop
insb
stc
scas
jb
arpl
outsl
movsb
push
pop
loopne
jg
int
lock
insb
dec
mov
dec
ficoml
lret
lcall
sbb
or
imul
negl
sahf
mov
inc
add
hlt
inc
jbe
hlt
out
jg
sub
adc
cmp
inc
adc
jmp
sbb
stos
outsb
inc
imul
adc
jnp
and
push
notl
xor
fcoms
mov
out
fistl
flds
rol
ljmp
jle
push
pop
lcall
jmp
xchg
push
js
adcb
jmp
pop
aas
jmp
movsb
jp
or
inc
add
out
and
dec
lods
inc
outsl
xor
outsb
pop
shrb
cs
mov
rcr
lds
adc
cmp
shr
add
xchg
mov
ja
add
or
jecxz
nop
popa
adc
xor
stos
out
outsb
add
out
clc
and
push
mov
pop
repnz
int
leave
cmp
loopne
fisubs
repz
cld
mov
adc
call
cmp
sub
movsb
sub
pop
cmp
mov
mov
jno
xchg
and
push
mov
bound
mov
xchg
arpl
jge
pop
fcmovu
add
or
jnp
enter
shll
xchg
dec
xchg
test
jae
push
push
mov
andb
test
clc
push
or
pop
add
loope
bswap
lods
add
add
sarl
cmpb
mov
sub
in
mov
mov
mov
jae
ljmp
push
sub
dec
push
fistps
clc
sbb
imul
sahf
and
ss
inc
adc
inc
sub
xchg
inc
xlat
or
stos
mov
add
xchg
adcl
pop
loop
repz
inc
in
inc
sbb
mov
or
cmp
sub
ss
addb
mov
insl
ljmp
inc
cmpsb
popf
mov
in
jg
xchg
pop
xchg
xlat
adc
test
and
mov
insb
push
lahf
xor
out
sbb
dec
enter
pop
lcall
cli
arpl
dec
and
out
pop
mov
lret
out
sbb
cmp
inc
mov
les
xchg
sti
dec
ficompl
dec
fdivrs
aas
insl
jne
mov
mov
adc
sbb
inc
and
test
aas
or
lods
test
jp
cmp
jg
xchg
dec
adc
adc
shlb
sub
dec
imul
jge
repnz
xor
lods
loop
sbb
les
es
xor
or
les
push
fs
mov
jno
push
sub
push
or
out
mov
fstl
test
lcall
inc
idivl
mov
sar
testl
xchg
mov
fstl
scas
jae
andb
lret
sub
loopne
inc
outsl
rcrl
fs
dec
out
xlat
in
insb
nop
dec
mov
dec
push
jl
cmp
scas
cltd
aaa
out
cmp
mov
int3
mov
adc
jb
adc
ljmp
sub
jo
movsl
stos
xchg
push
or
add
sbb
arpl
addb
out
adc
data16
pop
je
shl
push
push
xchg
push
mull
cli
iret
das
repz
stc
jp
ljmp
jno
sbb
mov
sbb
push
les
add
cmp
int
testl
or
add
adc
adc
or
and
neg
mov
or
faddl
inc
inc
mov
push
jns
test
fsubrs
mov
mov
or
arpl
cmpb
sti
leave
clc
out
xchg
arpl
sbb
xor
lods
adc
mov
ja
insb
mov
ljmp
push
and
dec
cmp
out
lret
loope
pop
fsubs
jno
lock
dec
bound
adc
cmpsb
add
cmp
dec
or
iret
push
mov
add
and
push
pushf
xchg
cmc
pop
sub
outsb
jb
lock
push
push
dec
jp
xchg
cmp
iret
sbb
and
cwtl
push
or
repnz
shll
and
pop
push
das
pop
fisttpll
add
aam
sub
flds
aad
call
mov
rolb
in
lods
add
mov
cmp
xchg
push
scas
fcomps
mov
mov
rcll
xchg
push
sbb
out
cmp
xor
cmc
iret
cmpsb
mov
sbb
repnz
cmp
or
push
lods
mov
cmp
mov
pop
push
jg
clc
inc
pop
or
mov
or
fimuls
scas
inc
inc
xor
popf
and
mov
pop
jo
shrb
xor
xchg
lcall
push
and
mov
xor
add
inc
push
push
jnp
aaa
inc
jb
cmp
repnz
in
jne
cmp
mov
cmp
test
sbb
xor
lea
imul
sbb
and
mov
out
cmp
imul
call
or
push
movb
dec
in
xchg
sub
or
push
mov
jle
sbb
mov
rorb
bound
aad
jbe
ss
sbb
inc
and
arpl
cmp
pop
roll
sub
in
mov
and
push
js
and
dec
xchg
pop
mov
push
add
sbb
mov
ss
sbbb
sbbb
sbb
add
adc
jne
addr16
push
xchg
fidivrl
in
das
les
js
dec
ss
dec
dec
inc
addr16
jp
push
mov
aas
xor
sbb
mov
mov
jns,pt
sub
dec
xor
add
cmp
loopne
ss
and
xor
leave
xor
add
cmp
enter
dec
lods
inc
sbb
in
xchg
xchg
insb
aad
xchg
js
mov
xlat
inc
out
xchg
pop
lcall
addr16
cs
jecxz
and
sbb
roll
sbb
pop
shll
imul
mov
xchg
arpl
push
aad
jnp
mov
fnstsw
pop
cli
dec
test
mov
sbb
in
xchg
or
repz
mov
xchg
pop
mov
xor
mov
mov
cmp
and
test
jne
scas
lret
cmp
dec
mov
outsb
imul
xchg
lock
lahf
mov
dec
or
sub
movsb
cmc
outsl
cmp
in
and
add
mul
dec
movq
andb
cld
jmp
jnp
repnz
jo
adc
ret
out
scas
xor
in
shrb
lds
scas
enter
mov
test
bound
adc
xlat
xor
inc
rolb
mov
test
nop
xlat
or
adc
mov
jmp
dec
test
inc
sbb
mov
nop
jecxz
gs
mov
add
arpl
jns
call
loope
call
mov
nop
popa
imul
push
or
jbe
xor
or
sub
cld
fwait
lds
movsl
cmp
or
pop
xor
push
push
mov
hlt
adc
je
xor
pop
add
pop
jge
push
sub
daa
adc
or
add
enter
dec
test
push
and
cmp
loop
mov
call
lods
jo
rcll
divl
xchg
ficomps
or
insl
out
dec
xchg
aaa
addr16
dec
lahf
xchg
repz
std
mov
imul
and
sti
icebp
bound
cmc
jmp
fildll
inc
sti
bound
xchg
jne
jb
es
sbb
sysret
mov
pmuludq
dec
and
imul
mov
mov
fcoms
mov
mov
daa
jae
xchg
push
xchg
lcall
lods
sub
lret
in
outsl
mov
mov
add
sbb
pop
ljmp
lods
cmp
and
and
dec
and
shrl
push
add
jo
ds
ss
into
jno
std
fidivrl
sbb
xchg
pop
jg
idivb
or
pop
jne
int
rclb
ljmp
inc
dec
loope
xor
rclb
adc
fsubr
out
jmp
rorl
jno
sub
jle
sbb
push
add
scas
sub
pop
insl
push
out
in
or
stos
subb
cs
sbb
mov
das
xchg
imulb
dec
outsl
sahf
hlt
in
sub
das
mov
mov
jae
pop
stos
movsl
xor
lcall
jmp
pop
mov
cmpb
popf
fcmovnu
and
adc
push
ret
ret
sbb
inc
push
insb
stos
and
fisubrs
loopne
pop
adc
mov
mov
push
mov
pop
xor
das
mov
push
sbb
ljmp
divl
and
cmp
cmc
pop
pop
aad
fsubl
mov
dec
test
xchg
jl
and
and
xor
lock
xor
pop
sub
mov
paddd
mov
clc
push
cmp
cmp
sub
lods
jne
dec
or
lcall
out
pop
xor
test
mov
pusha
lock
push
mov
jns
call
das
xor
rol
cwtl
lock
pop
cli
mov
out
mov
divl
push
out
jg
mov
mov
inc
push
hlt
dec
out
call
add
jmp
inc
movsl
jle
loop
xor
pop
sbb
mov
jecxz
out
gs
mov
int3
andb
jae
mov
dec
xchg
pop
mov
inc
jle
icebp
dec
push
loop
lret
jl
sub
dec
insb
stos
movsl
push
insl
adcl
sahf
insb
mov
push
sub
in
fadd
imul
lret
rcrl
aam
jb
mov
push
pusha
dec
xor
aad
or
and
jo
sbb
lea
ficoml
pop
sbb
std
jae
jne,pt
out
and
xor
fcoms
cli
mov
addb
movsl
and
arpl
lods
lcall
clc
add
pop
dec
xchg
in
and
pop
pop
out
mov
mov
testl
sub
ds
push
cli
xor
jp
sub
and
push
xlat
out
lcall
pop
mov
adc
int
or
loop
jo
push
push
sbb
dec
lea
and
jnp
jb
jne
xlat
fdivs
xchg
ret
push
outsl
mov
cmpsl
cs
xchg
shlb
mov
pop
lahf
pop
iret
xor
fisttpll
sbb
push
divl
daa
lods
aad
shlb
dec
mov
sbb
enter
sub
dec
add
mov
cwtl
cltd
pushf
out
jnp
dec
cmpb
mov
les
mov
nop
jge
jae
mov
add
xor
cmp
mov
lds
jle
lds
roll
leave
test
jle
pop
cmp
leave
bound
and
add
xchg
lcall
add
rcll
mov
mov
movsb
jae
aas
test
jb
cmc
fisttps
iret
imul
stos
push
ss
orb
xorl
lahf
in
imulb
daa
cld
bound
xchg
mov
dec
mov
call
and
addr16
bound
mov
and
es
enter
push
lods
int3
mov
inc
xchg
dec
lock
adc
jne
js
sbb
shll
lods
je
dec
sub
adc
cld
mov
mov
sti
in
int
scas
mov
mov
imul
jae
scas
dec
loope
int
mov
cmpsb
loope
je
cli
mov
pop
pushf
lods
mov
and
xor
scas
movsl
dec
repnz
xchg
jg
add
je
pop
loopne
stc
mov
inc
test
ss
lret
xorb
xor
stc
addl
loopne
sti
addr16
mov
push
mov
enter
fwait
dec
push
push
jnp
mov
add
ss
dec
dec
adc
cwtl
dec
cmpsb
or
movsl
aaa
jo
mov
aam
mov
idivl
xor
inc
inc
gs
mov
or
push
add
fldcw
pop
test
inc
xor
xchg
fadd
cmc
in
aam
xchg
adc
icebp
add
daa
and
pushf
sbbb
aad
jp
jns
jno
imul
xor
mov
jb
sub
sbb
jecxz
pop
in
stos
jne
enter
jl
xchg
cmp
bound
cmp
je
icebp
scas
xchg
xchg
cmp
ficoms
movsl
dec
mov
testl
mov
out
cmp
add
aas
mov
cwtl
dec
sbb
dec
sub
inc
mull
movsl
movsl
je
push
mov
es
repz
fadds
cld
adc
lcall
out
mov
push
xchg
in
inc
ss
popa
xchg
sahf
push
enter
repnz
xlat
mov
icebp
mov
and
jo
inc
movsl
scas
sahf
inc
sbb
dec
fisubrl
mov
cmp
adc
mov
sbb
ljmp
push
inc
sub
addr16
push
movsl
jmp
enter
in
std
sub
mov
in
inc
nop
jnp
dec
ret
out
cs
xor
adc
push
jns
outsb
or
aad
pop
into
inc
add
cltd
pusha
push
cmpsb
int
aas
mov
dec
push
mov
mov
xchg
jne
mov
call
out
scas
icebp
adc
icebp
movsl
scas
imul
cmovno
jne
jno
rclb
sub
and
das
push
mov
and
xor
push
test
mov
sub
lods
cmp
out
cwtl
daa
sub
mov
xor
out
sarl
jo
xor
cmp
repz
rcrl
mov
add
imul
and
clc
pusha
outsl
push
cmp
jb
and
imul
rcr
stc
jne
data16
lods
scas
mov
shll
ljmp
lock
fmul
ds
test
sahf
xchg
or
es
xor
jbe
mov
lds
pop
shlb
testl
cmp
ja
sarl
mov
and
xor
xorb
dec
or
cmp
cmp
out
mov
cld
sub
daa
mov
loop
fwait
adc
push
imul
das
outsb
sub
mov
mov
sbb
mov
xor
sub
cmp
push
movsl
into
pop
lret
jl
ja
jbe
cwtl
test
shl
mov
divb
psadbw
sbb
pop
pop
or
or
xchg
loopne
repnz
lods
movsl
lods
or
es
xchg
jbe
cmp
jmp
aam
cli
scas
out
scas
mov
xlat
cmp
aaa
rolb
mov
pop
mov
sti
xchg
ret
repnz
mov
imul
add
push
mov
sub
mov
xchg
sub
sti
xchg
lock
mov
enter
or
jge
and
ret
inc
fldt
mov
xchg
movl
scas
test
jnp
pop
xor
inc
and
sub
mov
push
std
xchg
sbb
out
mov
push
mov
xor
adc
fwait
cld
sbb
mov
rcrb
xor
repz
js
insl
call
aaa
xchg
mov
add
jecxz
fs
test
adc
mov
pop
ficoml
ret
aas
test
sbb
push
ficoml
test
mov
ljmp
movsb
into
fsubl
xchg
push
sbb
cli
in
inc
or
xor
push
fimull
imul
xlat
fchs
inc
sub
mov
fimull
dec
adc
mov
push
push
mov
out
jle
ds
dec
outsl
push
ds
js
pop
mov
inc
rol
pop
sti
cli
dec
mov
hlt
mov
mov
bound
mov
bound
movb
mov
mov
dec
arpl
daa
data16
divb
jl
cmp
sub
rcr
or
aad
sbb
notl
int3
lods
dec
sub
lock
insl
and
loopne
push
lahf
inc
imul
mov
push
mov
sahf
jne
sti
lods
popf
mov
les
insb
jno
or
adc
clc
xor
lret
xchg
or
ret
aam
xchg
cltd
loop
pop
out
popa
jp
divb
xchg
sub
mov
mov
sub
dec
push
in
sub
dec
mov
idivl
jl
jnp
in
push
adc
int3
ljmp
sbb
mov
cli
popf
mov
jbe
movl
test
sbb
sub
adc
mov
push
out
repz
mov
in
or
jg
loopne
xor
and
ffreep
loopne
sub
fildl
in
rcr
mov
adc
adc
mov
psubq
cmpb
aad
test
dec
aaa
pop
fsts
and
xor
push
mov
cli
mov
in
testl
sub
xchg
add
sbbl
or
dec
stc
dec
aam
push
push
xor
mov
outsb
addr16
or
jl
fidivl
and
jmp
push
xchg
lods
jnp
push
pusha
xchg
loop
xor
imul
les
stc
or
sbb
xor
mov
mov
sbb
test
mov
adc
clc
sbb
jecxz
out
and
fldt
mov
pop
mov
mov
test
and
leave
shl
cmpsb
push
xor
xor
bound
jbe
enter
sbb
pop
jecxz
adc
std
mov
jmp
jno
test
out
pop
add
adc
je
jno
push
mov
mov
xchg
and
jne
or
mov
sti
mov
aas
mov
adc
imul
xor
orb
xchg
fsts
or
fiadds
testb
dec
mov
repnz
dec
outsb
inc
loope
cmp
scas
scas
iret
adc
int
adc
test
cmp
rcll
cmp
mov
leave
jne
mov
clc
cli
sbb
inc
clc
sbb
repnz
cs
in
pushf
or
jp
in
int3
mov
adc
rcr
inc
aam
and
push
pusha
jp
xor
add
pop
in
xchg
repz
fstpt
sub
les
push
hlt
sub
je
mov
xor
in
pop
imul
xor
and
or
arpl
lea
xchg
add
sti
mov
jnp
lods
xchg
cmpsb
aaa
jle
mov
and
mov
stos
out
xor
mov
cmpsb
movsl
ret
fdivrp
movsb
arpl
dec
int
js
or
out
fwait
push
push
dec
aaa
in
jo
cmp
pop
cld
icebp
enter
scas
loop
add
je
ret
pop
mov
dec
mov
ja
fsubl
into
loope
push
stos
cmp
jge
stc
mov
mov
xor
xchg
add
or
in
clc
add
sti
enter
jmp
push
push
mov
inc
mov
lods
fidivl
out
mov
lods
adc
testb
icebp
cmp
xorl
fistpll
ret
rolb
mov
adc
cmpsl
sub
jnp
xchg
repnz
pop
outsl
inc
pop
hlt
das
xchg
movsb
aam
mov
iret
mov
mov
sub
into
jp
lcall
test
sub
mov
pop
dec
pop
jecxz
cmp
adc
mov
lret
mov
dec
lret
xor
inc
fidivs
mov
cs
or
jmp
sbb
into
sbb
pop
pop
mov
iret
aas
hlt
adc
psubq
sbb
mov
loope
jg
ds
aad
fmul
mov
mov
mov
or
scas
arpl
sub
xchg
ljmp
jb
jae,pn
loop
mov
and
inc
xchg
lock
add
ds
ret
xchg
lret
adc
push
sbb
es
inc
sub
inc
fadd
pushf
daa
shlb
mov
and
lret
sub
inc
mov
pusha
cltd
xor
and
push
xor
mov
lea
add
cli
and
retw
stos
xor
fucom
mov
inc
mov
and
jle
leave
incl
movsl
lea
push
ja
inc
popa
hlt
pop
dec
arpl
mov
and
cmpb
nop
cmpl
shl
xor
mov
jb
and
ds
mov
es
mov
fldcw
test
cmpsl
fwait
test
pop
xor
aaa
nop
lcall
and
push
add
out
in
xchg
loope
mov
lods
imul
dec
gs
xor
int3
in
inc
cmc
mov
enter
arpl
sub
pop
add
mov
mov
add
imul
gs
mov
lret
xchg
push
pop
jp
stos
inc
movsb
out
inc
mov
arpl
test
faddl
stc
dec
inc
push
stos
and
js
mov
pusha
outsb
add
mov
jbe
xchg
push
aam
sbb
cmp
lcall
mov
fwait
cmp
jmp
jb
mov
hlt
pop
pop
inc
rcll
mov
lret
out
fldcw
adc
cmpsb
or
mov
mov
adc
fcoms
ds
sbbl
and
sbb
xchg
loopne,pn
jae
push
push
mov
adc
mov
adc
xor
inc
inc
mov
pop
sahf
inc
imul
pop
sub
fwait
push
sbb
mov
ret
das
xor
adc
decb
int
clc
test
les
push
xchg
push
jl
push
add
cmp
loopne
push
hlt
gs
addr16
or
movsl
int3
test
jne
add
dec
push
jge
out
mov
push
dec
iret
fs
push
sub
xor
sahf
fistpl
es
inc
icebp
dec
jmp
cmp
pop
jbe
out
es
imulb
loope
adc
sub
or
push
pop
push
cld
loop
cmc
jbe
mov
and
dec
loopne
les
push
jb
jmp
inc
aam
outsb
adc
lret
repz
inc
inc
cltd
std
repz
and
daa
leave
sbb
push
push
aas
pop
dec
inc
push
xchg
in
sahf
mov
out
es
cltd
aad
dec
jae
inc
mov
jecxz
insl
lcall
inc
cmp
sarb
pushf
insl
dec
in
int
push
push
pop
push
xchg
add
lds
jmp
cmp
mov
inc
push
pop
fcmove
ret
pop
sub
jno
push
sub
xchg
mov
pop
cmp
scas
repz
pushl
push
out
adc
jg
test
xchg
pop
mov
stc
jle
sub
adc
inc
adc
mov
and
outsb
repnz
adc
in
aam
mov
or
repz
shl
popa
add
or
sbb
xor
sar
daa
push
sbb
lret
dec
ja
cmovl
stos
mov
jo
pop
out
roll
lcall
jp
or
cmpsb
cmpb
subb
repz
addr16
pop
dec
stos
xor
loopne
dec
out
aam
and
test
pop
das
sub
and
sub
mov
xor
addr16
dec
in
out
es
scas
push
mov
xchg
fsubrl
cwtl
mov
test
or
arpl
cmp
loop
xchg
aam
or
fildl
sbb
jg
rorb
sub
xchg
stos
mov
push
lahf
xchg
lret
mov
or
leave
aas
in
xchg
push
into
std
sar
call
mov
sahf
xor
hlt
loop
mov
clc
out
outsl
pop
ficomps
xor
mov
xchg
mov
sbb
sbb
cmp
lret
out
clc
aad
mov
mov
mov
push
push
stos
push
int3
push
rorb
inc
movsl
pop
repnz
and
inc
pushf
out
jno
xor
loop
jle
pop
cmp
add
xchg
mov
sbbb
or
jns
mov
push
leave
das
push
test
mov
mov
dec
leave
sbb
lods
fiaddl
stos
push
cmp
mov
adc
xchg
lock
pusha
sbbb
pop
mov
xchg
push
and
or
pop
popa
lahf
dec
cmpsl
sub
lods
sti
sbb
and
lret
shll
pop
mov
add
mov
adc
sbb
push
adc
ljmp
pop
pop
nop
sahf
xor
push
jns
push
out
imul
stos
dec
mov
insl
dec
xchg
push
cmp
add
arpl
and
pop
dec
inc
in
dec
adc
jg
push
in
cmp
adc
cmpsl
ss
call
jl
shr
add
mov
or
iret
stos
push
out
aam
xor
mov
fisubs
leave
bound
inc
repz
test
or
jp
cmp
aam
adc
in
stc
lret
or
icebp
xchg
jae
push
mov
push
subl
ds
aas
sbb
cvtpi2ps
jp
adc
xchg
into
das
inc
mov
push
push
cltd
cld
adc
mov
scas
sbb
push
shrl
jae
insl
mov
xchg
push
div
sbb
movsl
into
mov
xchg
cs
adc
ret
imul
in
adcb
xor
fimull
daa
inc
push
test
jmp
test
and
add
jge
xchg
lcall
xor
xchg
xlat
scas
repz
rcrb
stos
sub
jmp
scas
out
test
sti
lret
cltd
jp
push
lahf
jecxz
cmpsl
orl
stos
shlb
push
xchg
sbb
int
data16
push
mov
cmpsb
dec
mov
jnp
inc
fs
inc
xchg
das
addr16
xor
mov
sbb
jns
mov
push
orl
daa
push
sbb
cmp
xchg
jecxz
cmp
adc
push
fidivs
movsl
and
add
pop
and
xor
arpl
cmp
and
shlb
cs
dec
scas
mov
and
lods
lret
pop
inc
imull
sub
pusha
and
and
imul
or
aaa
je
and
add
jmp
mov
push
push
jo
lods
sub
pop
mov
dec
sahf
mov
loopne
clc
push
int3
dec
popl
sbb
push
inc
pop
out
scas
wrmsr
fisubrs
mov
stc
loope
repnz
mov
pop
mov
or
dec
sbb
orl
stc
mov
bnd
mov
fdivrs
mov
jne
jne
sbb
mov
in
shlb
leave
push
jae
and
pop
or
push
cmp
and
and
xor
inc
sarb
lods
sahf
xchg
lret
or
outsl
or
mov
push
not
jae
sub
ss
mov
test
movsl
cli
sbb
or
les
xor
dec
negl
fucomip
mov
loop
dec
aaa
adc
push
scas
loopne
sahf
repnz
or
mov
adc
scas
mov
ljmp
and
mov
mov
rclb
pusha
xlat
pop
cs
iret
pop
pop
mov
inc
or
inc
add
jbe
jmp
pop
add
movsb
mov
les
adc
daa
mov
jle
add
in
jp
xor
enter
loope
lret
xor
jg
iret
enter
jl
sbbb
sti
cs
scas
pop
inc
or
mov
arpl
loope
inc
mov
fs
mov
jl
jmp
adc
add
xchg
pop
cmc
push
push
sahf
out
gs
sahf
icebp
outsb
aad
sbb
add
andl
ds
es
cmp
dec
mov
loop
int
mov
inc
popf
dec
sbb
data16
idivl
push
fsubrl
rorl
sub
das
test
and
push
aaa
pushf
pop
stc
fdivrl
dec
imul
and
rolb
xchg
adcb
xchg
mov
in
adc
push
push
out
and
jno
add
cmp
sbb
in
pop
cs
stos
inc
mov
mov
jecxz
leave
ljmp
xor
enter
inc
push
sbb
push
test
xor
das
and
aaa
pop
add
test
cmp
pop
bound
mov
add
in
icebp
int3
jmp
jo
push
sti
jecxz
mov
lds
and
je
leave
pusha
pop
lret
lods
xchg
pop
loope
jmp
xchg
xor
fisubrs
dec
jno
xor
popf
jge
mov
imul
xor
popa
and
jo
pop
add
dec
push
addl
push
sbb
jnp
lret
dec
popf
add
jne
push
rclb
xor
add
icebp
mov
dec
cmpb
lods
xchg
xor
xchg
aam
inc
cmp
push
in
jmp
shll
in
mov
setp
lea
ss
and
sub
sti
sub
and
mov
inc
fiaddl
sub
jp
add
mov
sbb
outsl
lea
add
xor
sbbl
mov
adc
and
inc
push
jge
inc
inc
xchg
call
les
jno
mov
adc
and
mov
test
jbe
add
in
ds
shlb
and
leave
push
ficomps
inc
lcall
push
int3
push
je
add
rol
ss
mov
pop
cmp
popa
cmp
cld
pop
xor
hlt
ret
aad
mov
cmp
stc
cli
clc
sub
ja
inc
mov
call
ja
push
shrl
dec
and
cli
out
xchg
outsb
push
mov
iret
cs
xchg
sub
pop
jbe
and
iret
ret
mov
push
lahf
lock
nop
lea
mov
outsl
add
xor
dec
hlt
push
neg
lcall
mov
cld
or
lods
push
mov
movsl
and
sbb
jle
fdivs
and
sarl
cmp
fprem1
pop
mov
icebp
ss
ss
ficomps
repnz
cmp
push
and
testl
jns
dec
pop
mov
jge
dec
dec
lahf
cmpsb
bound
pusha
shrb
add
in
jg
mov
and
mov
popa
push
xlat
mov
push
pop
in
xchg
dec
or
add
pop
lret
pop
dec
lods
push
lock
xor
out
lret
mov
cmp
cmp
sub
push
clc
mov
dec
test
mov
jmp
push
out
cld
sub
ret
lahf
mov
fistpl
sub
stos
xchg
push
mov
clc
cmpsl
cmc
push
adc
and
shrl
mov
scas
sbb
scas
add
xchg
lahf
adc
xchg
stc
repz
enter
lcall
cmp
xchg
and
cli
dec
loopne
aad
es
cmpsb
mov
mov
daa
mov
and
lret
shll
jecxz
out
push
adc
ret
test
clc
pusha
icebp
xchg
test
stos
mov
adc
xor
ds
xchg
push
add
mov
push
cmpsl
in
sbb
orb
cli
mov
shll
into
movsb
sbbb
sbb
cwtl
int
jmp
sub
sub
in
pop
mov
iret
inc
cmc
jl
pop
adc
popf
inc
fs
je
push
xor
mov
neg
int
int3
fsubp
hlt
push
or
dec
out
jns
mov
jns
ja
or
jne
jmp
push
inc
mov
out
jecxz
and
and
dec
add
jo
xor
xchg
jb
movsb
jb
and
inc
movsl
popa
inc
iret
inc
pusha
push
ret
pop
fstl
mov
cmp
dec
pop
loopne
gs
pop
or
lea
add
cmp
gs
jle
jae
ljmp
xchg
shrb
sub
movsl
in
mov
add
or
mov
and
mov
outsl
pop
ja
pop
push
dec
popa
in
daa
or
mov
outsb
repnz
or
bound
push
addr16
or
jg
popf
fimuls
xchg
mov
push
test
sbb
xchg
lods
faddl
pushf
mov
in
jmp
aaa
lret
sbb
adc
mov
cli
sub
iret
xorl
in
push
push
loope
js
nop
into
add
in
ficompl
sub
fstl
and
xchg
lret
lahf
xchg
dec
xor
scas
scas
fmull
fiaddl
test
jns
rorl
pushf
sbb
shlb
mov
or
mov
data16
stos
sub
jb
sti
sub
loop
and
rorb
popf
xor
leave
lods
mov
mov
das
sub
jmp
adc
adc
pop
stc
out
pop
sbb
js
mov
jp
or
push
xor
mov
cmpsl
notl
arpl
int3
push
xor
loop
lea
cmpsl
aaa
out
addr16
notl
pop
xor
jnp
jns
mov
in
repnz
lahf
mov
sbb
fs
lahf
and
sbb
jo
or
movsb
cmp
cmp
mov
paddb
jne
pop
cmp
cltd
xchg
gs
cld
pop
xchg
mov
shrb
xor
adc
lahf
mov
sbb
mov
cltd
fstps
push
outsl
mov
mov
jl
xlat
xchg
cltd
or
mov
jge
bound
ja
jno
scas
jo
fs
or
call
jb
stos
sub
add
jge
sbbb
or
push
fistpl
xor
sub
int3
cmp
push
faddl
fstl
cld
pop
or
ret
mov
insb
inc
adc
xlat
or
dec
push
cmpsb
ficomps
sub
inc
dec
fmulp
pop
push
inc
clc
movsb
or
sub
in
mov
jo
enter
jge
cmp
mov
inc
andb
add
jg
push
adc
xchg
roll
push
sub
lcall
xchg
out
dec
out
sbb
push
out
or
mov
add
rcrl
cmpsl
addr16
test
scas
dec
jns
sub
and
cwtl
out
andl
xlat
cmpsl
push
pop
fcompl
xor
loopne
ljmp
sub
mov
jae
push
push
push
adc
scas
cld
mov
inc
cli
push
rolb
es
push
push
jae
mov
add
incb
xchg
pop
push
in
lock
cmpb
xor
lods
mov
shl
jb
xchg
sbb
sbb
pop
lds
xchg
xor
scas
pop
sub
out
stc
stos
enter
outsb
nop
sar
add
out
scas
mov
fsubrp
aam
rclb
jp
jmp
sub
stc
das
add
cmpb
push
js
push
xchg
pop
arpl
push
xchg
pushl
fdivrs
adc
mov
push
push
nop
or
fstpl
stos
pop
je
pushl
cmp
mov
rcll
sub
rorl
mov
mov
in
mov
sub
xchg
lods
lret
movsl
sub
mov
pop
lret
popa
ja
push
or
cmpl
sub
ret
outsl
adc
cmp
aaa
sbb
xor
fsts
bound
inc
lods
loope
loop
sahf
in
sbb
sbb
xchg
sub
test
mov
out
popf
dec
pushf
pushf
mov
das
dec
test
pop
sbb
das
dec
mov
inc
lret
jg
incl
ljmp
pushf
rcll
inc
and
hlt
adc
jae
divb
mov
ds
mov
bswap
and
and
cmp
cmc
aad
rcl
mov
mov
mov
les
mov
jns
arpl
mov
rcll
mov
xor
movsb
inc
aaa
and
loopne
rolb
and
insl
dec
shr
test
sti
bound
subl
mov
xchg
jns
insl
inc
mov
push
inc
daa
cli
xor
insl
sbb
cmp
fninit
inc
jbe
sbb
or
and
aad
pop
mov
testb
dec
jge
cmpsb
jb
and
lods
push
in
aam
jmp
scas
or
lea
cmp
sti
leave
xor
lods
inc
stc
xchg
and
loop
push
stos
or
and
mov
push
imul
add
add
fs
push
inc
jg
bound
cli
dec
daa
fistps
or
fisubl
enter
inc
int3
lahf
arpl
adc
andl
out
and
pop
leave
sub
add
lock
fs
jge
cmc
lock
xor
sub
mov
cmpsl
xchg
inc
and
mov
jae
cmp
and
adc
aaa
sub
arpl
lock
fs
and
or
filds
cmp
pop
aam
xchg
pop
sbb
add
mov
cmp
stc
xor
loope
inc
lods
testb
std
test
inc
add
cs
mov
mov
test
jl
xlat
hlt
cwtl
add
push
pop
nop
cwtl
pop
ja
gs
cmpsl
xor
push
clc
mov
push
mov
xor
mov
rcl
scas
jb
incb
push
jns
jge
lods
and
jecxz
adc
sbb
xor
pop
data16
mov
pop
and
jl
add
pop
cmpsb
xor
rcrl
push
ret
xor
mov
mov
or
mov
mov
sahf
mov
mov
jnp
and
xchg
pop
jle,pn
in
outsl
and
mov
test
jmp
jp
fnstsw
xchg
jle
jnp
aad
in
and
and
lods
dec
inc
jnp
stos
mov
and
pop
cs
aad
repz
cmp
daa
xor
mov
push
cmpsl
sub
mov
sub
cld
sub
lods
fwait
enter
mov
imul
jbe
iret
clc
mov
repnz
in
lods
adc
subl
pop
jae
sbb
mov
fidivrl
mov
jmp
fildll
popa
or
cli
mov
aad
in
fdivrl
add
push
and
lods
mov
push
xor
jp
or
mov
push
or
push
adc
rep
pop
xor
inc
jb
pop
lcall
pop
add
pop
movsl
lcall
hlt
cmp
adc
push
xor
cli
insl
sbb
fidivrs
adc
fisttpl
mov
popa
aad
or
jge
or
mov
je
das
xchg
inc
fiadds
mov
or
out
popf
cmc
loop
fcmovb
dec
sahf
push
ret
ljmp
popa
clc
xchg
add
or
push
xchg
cmpsl
hlt
outsl
repnz
push
mov
sarl
mov
pop
testb
cmp
dec
lock
insl
dec
fucomp
stos
mov
mov
add
add
push
adc
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
adc
add
add
add
add
add
add
je
adc
jp
adc
js
adc
xor
add
add
adc
dec
popa
insb
inc
jne
outsl
push
jo
popa
je
