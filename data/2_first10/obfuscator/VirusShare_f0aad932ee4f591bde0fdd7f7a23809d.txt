xor
mov
stos
push
xor
rcl
mov
push
sub
mov
jns
or
icebp
sub
or
sbb
pushf
xchg
cmpsb
shll
jmp
mov
push
mov
push
cld
loopne
cltd
xchg
xor
imul
and
mov
out
rolb
insl
leave
sbb
dec
mov
sbb
sub
xchg
xor
xor
out
test
or
cs
mov
fwait
cltd
popa
xor
xchg
inc
out
loope
xchg
sbb
inc
jge
pop
jns
mov
inc
andl
inc
jg
jecxz
cmp
lahf
jp
push
pop
es
test
movsl
mov
gs
popa
dec
mov
test
push
cmpsb
sub
int3
inc
cwtl
pop
xchg
aad
dec
outsl
sub
push
insb
jmp
out
sub
cwtl
add
fwait
dec
dec
or
and
stos
lahf
pop
and
sahf
pop
enter
or
lcall
or
sti
hlt
movsl
pop
jp
into
movsl
push
daa
xor
push
data16
mov
bound
lock
mov
pop
fistl
fwait
ja
loop
pop
or
fidivrl
dec
test
xor
outsb
les
push
add
sbb
add
and
ficomps
sbb
rcll
aas
imul
test
sub
pop
or
inc
lcall
aam
cs
pop
mov
arpl
int3
loop
push
jns
jo
and
test
fimuls
mov
push
fisttps
jne
fsubr
rcrb
dec
mov
adc
cwtl
adc
jecxz
and
mov
loope
mov
push
mov
fidivs
xchg
imul
data16
daa
sbb
xchg
mov
mov
fisubrs
xor
mov
ja
jl
fdivrl
dec
mov
loopne
jmp
and
loop
cltd
psubsw
repnz
push
sbbl
jp
imul
xor
xor
xchg
leave
aad
enter
dec
int
pusha
ds
fistl
fdivs
push
repnz
repnz
xor
pushf
cmp
push
jno
mov
dec
inc
popf
test
insl
mov
lahf
jl
dec
push
mov
std
dec
mov
aas
push
xor
dec
cmpl
leave
imul
inc
fldt
lahf
xor
xor
add
lds
sarl
adc
hlt
cwtl
js
icebp
arpl
mov
sub
movsb
imul
lret
test
ret
mov
gs
insl
jmp
mov
iret
daa
dec
or
mov
in
sahf
xor
aad
ss
pusha
out
or
sub
add
sbb
call
pop
mov
icebp
mov
xor
je
mov
push
test
push
iret
imul
stos
sbb
ret
in
insb
in
adc
es
pop
or
jle
shrb
push
lods
int3
imul
push
jmp
shlb
mov
mov
inc
gs
daa
sub
es
xlat
and
push
leave
out
or
sbb
xor
sub
fsts
mov
daa
push
push
cmpl
pop
lea
loopne
jl
lret
into
jg
jno
sub
lret
jge
mov
lahf
mov
sbb
cmp
scas
int
jbe
insl
dec
jnp
sbb
into
lret
pop
push
out
cmpsb
mov
and
lock
lds
js
lods
mov
jecxz
mov
mov
inc
sbb
lret
jae
shlb
pushf
mov
mov
mov
mov
push
sub
gs
xchg
in
pop
out
popa
movsb
lret
dec
fyl2x
out
sub
adc
and
jbe
loop,pn
pusha
adc
mov
cmp
loope
repnz
clc
stos
fs
xchg
mov
mov
in
aad
mov
and
cld
inc
mov
loop
out
cmpsl
sub
outsl
cmp
js
jle
xor
rcrb
ljmp
mov
addr16
jecxz
in
sbb
dec
lods
and
rol
mov
xor
mov
xor
int
jbe
push
cwtl
xor
ss
nop
cmpl
mov
mov
mov
xor
or
lcall
push
addr16
sub
icebp
addl
out
adc
ja
shlb
enter
xchg
push
jo
out
div
iret
loope
mov
scas
dec
mov
sub
out
pusha
andl
inc
cmp
cmpsl
ret
cvtps2pd
add
dec
lock
ja
push
mov
lret
jp
ds
iret
mov
fmuls
outsb
pop
int3
adc
movsl
xchg
and
ja
dec
and
jp
in
enter
pop
dec
xchg
sub
fistpl
mov
js
in
jp
out
pop
mov
faddl
fistpll
ja
fstl
jge
pop
mov
push
out
dec
jnp
push
sbb
movsl
xchg
push
idivb
mov
dec
fcomi
jmp
cltd
fs
sub
adc
movsb
je
and
imul
xorb
je
jg
xor
out
push
out
lods
inc
sarb
test
movsb
es
testb
xchg
movb
adc
dec
stos
cwtl
mov
pop
scas
bound
mov
shlb
adc
push
pop
jl
lods
cmp
shlb
hlt
lret
sbb
mov
bound
subl
popa
imul
pop
repnz
xchg
sub
inc
dec
sub
aam
pop
dec
pop
aam
cmp
sbb
pusha
cmp
shlb
cmp
pop
inc
out
lea
inc
push
stos
or
jnp
cmp
pushf
sbb
fdivr
rcrb
imul
popa
andl
sti
push
ret
add
daa
repnz
call
imul
dec
xchg
add
leave
call
cmp
jno
popa
movsb
jno
inc
adcl
popa
aam
pop
divl
dec
gs
add
lods
outsl
push
adc
ret
outsl
cmp
mov
pop
mov
stc
les
fcomps
stos
dec
and
les
xchg
push
outsl
ds
leave
mov
fildll
fcmovbe
mov
fstp
sbb
push
jle
adc
mov
out
insb
xchg
mov
icebp
jecxz
punpckhdq
inc
lret
cld
add
sbb
pop
cmp
sub
cmp
icebp
stc
aaa
cmp
loop
mov
cmp
xchg
jecxz
dec
in
inc
or
rcl
jbe
imul
ror
mov
movsb
mov
lds
mov
sbb
pop
icebp
mov
mov
sub
int3
loope
xor
aad
xor
pop
adc
pop
mov
into
test
cmp
fldl2e
insb
pop
dec
aad
imul
push
hlt
lahf
jp
xchg
ja
sub
lock
sub
mov
repz
sti
repz
push
inc
mov
mov
mov
and
pop
fbld
pop
push
aam
push
gs
repnz
inc
insb
fcoml
icebp
popf
sbb
iret
imul
fdivrl
in
lds
and
mov
mov
test
dec
lret
add
xlat
or
stos
arpl
idiv
cmp
pop
mov
mov
xchg
pop
mov
mov
inc
pushf
adc
pop
scas
mov
in
test
les
inc
inc
pop
adc
push
sub
arpl
fmull
and
nop
push
dec
popf
push
movsb
lret
lods
dec
pop
mov
adc
add
data16
push
jg
push
mov
movsb
out
data16
cmp
mov
pop
pop
stc
jne
sub
movsb
and
and
sbb
dec
mov
jb
push
cs
dec
adc
adc
push
xor
and
pop
push
pushf
popa
mov
xor
mov
push
mov
xor
cmpsl
xchg
orb
nop
push
mov
sti
rclb
add
xchg
xchg
ret
cltd
ljmp
cwtl
xchg
mov
xlat
aaa
adc
mov
mov
cmp
sbbl
push
arpl
rorl
scas
lret
dec
fisubl
xor
lds
mov
imul
stos
xchg
mov
scas
shrl
jg
mov
lods
imull
ljmp
mov
cs
pusha
ret
and
sti
flds
orl
call
hlt
mov
mov
in
pop
sub
scas
repnz
out
fs
or
xchg
stos
pop
inc
add
jge
cmp
and
mov
xchg
sub
push
sti
mov
jbe
adc
mov
lods
cmp
mov
jae
stc
xor
mov
cmp
repz
aas
push
divl
sub
out
lods
cmp
rorb
repnz
loop
and
mov
lds
insb
push
nop
cmp
cwtl
jns
or
out
mov
test
mov
mov
jb
int
orl
addr16
aad
cltd
popa
pop
adc
psubsw
movsl
addr16
adc
das
lods
call
out
xor
inc
loop
test
push
sub
movsb
in
dec
sahf
outsl
sbb
mov
in
pop
or
mov
scas
inc
sbb
loop
insb
leave
aaa
push
ljmp
iret
scas
inc
xchg
daa
jmp
shr
adc
sbb
sub
mov
or
push
test
int3
sbb
fsubrs
mov
les
rclb
loopne
mov
clc
adc
inc
cld
shl
aas
pop
pop
hlt
out
pop
dec
jge
into
pop
push
mov
mov
cmp
jp
pop
adc
out
cmp
mov
mov
scas
cmc
push
inc
scas
inc
pushf
fwait
scas
sub
fisubrs
xchg
pop
and
sti
mov
push
sub
dec
sahf
cmp
inc
mov
into
push
sbb
cmp
xchg
sub
add
adc
adc
mov
int
mov
xor
loopne
xchg
jno
shrl
test
jp
std
clc
icebp
clc
inc
in
fs
mov
paddb
fsubr
out
jge
jne
insb
push
xorl
gs
hlt
jns
addl
int3
mov
shll
into
push
dec
mov
push
insl
pop
mov
stc
movsb
aaa
or
adc
and
dec
sti
popfw
ficoms
jbe
jle
sbb
dec
xchg
shll
jnp
lret
arpl
outsl
pushf
pop
je
pop
aaa
sahf
inc
leave
pop
inc
aas
inc
sbb
dec
jno
add
aas
xchg
adc
sbb
das
jo
mov
repz
pop
jnp
int3
into
inc
push
aas
mov
inc
stos
and
lcall
or
lods
and
lods
mov
adc
push
pop
inc
js
fnstenv
or
mov
dec
outsl
lea
shl
arpl
dec
push
jnp
push
int
jne
and
pop
shll
push
jp
fsubl
jmp
lret
sub
mov
jl
shlb
dec
out
mov
mov
mov
mov
adc
mov
pop
sub
movsl
xor
fmuls
shll
pop
or
jg
leave
addr16
or
xchg
fmuls
adc
les
testl
sbb
mov
popf
sub
cwtl
mov
sbb
aas
lahf
inc
add
popa
icebp
and
ss
mov
je
push
fs
push
inc
pop
jmp
adc
pusha
jecxz
pushf
push
das
fcompp
adc
sub
ss
in
mov
mov
sub
and
sub
arpl
fwait
scas
ja
xor
xchg
jg
push
fisttpll
xchg
inc
mov
push
sub
xchg
fwait
out
xor
add
leave
imul
sahf
out
xchg
stos
subb
xchg
lods
pushf
clc
les
loopne
jbe
pop
fldcw
add
mov
dec
dec
insb
pop
mov
inc
stos
mov
jo
cmc
jg
icebp
pop
sti
and
jae
xchg
test
sub
call
xor
xor
mov
and
jno
or
cmpb
aad
lods
and
add
and
cmp
sti
or
jne
and
outsl
jo
mov
clc
clc
nop
arpl
mov
inc
lods
fsubrp
jge
repnz
pop
push
cli
mov
int
shrb
arpl
xchg
mov
adc
les
test
insl
xchg
xchg
cmpsb
xchg
in
addr16
adc
or
cld
mov
and
add
aaa
pushf
out
mov
fwait
add
sbb
inc
aam
sbbl
dec
and
lcall
gs
cmp
outsb
xchg
ffreep
je
sbb
pop
jg
inc
jb
cmp
jecxz
push
fisubrl
icebp
mov
cmp
add
out
dec
mov
stc
jp
je
add
xor
into
jmp
mov
push
push
or
testb
xor
xchg
cwtl
or
mov
outsb
sub
sbb
jbe
dec
roll
add
inc
dec
xchg
movsl
cmp
fwait
stc
gs
cmp
mov
cmpsl
out
arpl
xchg
test
inc
xor
sti
cmp
loope
xchg
scas
cmp
and
je
pop
sbb
xchg
movsb
fnstcw
popa
dec
and
stc
dec
dec
lcall
and
lods
sbb
into
test
repz
mov
ret
lock
push
sbb
pop
mov
or
push
negl
pop
nop
cmpl
nop
mov
cmc
jge
fsub
mov
test
mov
pop
arpl
cmpsb
inc
aam
or
push
std
inc
mov
push
mov
inc
push
xor
xchg
nop
xor
leave
lret
dec
jns
out
fs
push
jge
imul
ror
cld
and
add
sbb
pop
les
cmp
mov
dec
push
jge
mov
adc
mov
sub
and
sub
fiadds
sub
inc
xor
je
or
les
push
pop
jg
and
mov
xor
jno
int
adc
popf
ss
push
mov
jp
push
push
fidivl
xchg
and
jno
push
add
fcmovbe
int3
sub
sbb
mov
mov
dec
sbb
push
nop
xor
lds
jbe
or
xor
stos
sbb
pop
mov
mov
jo
fistps
jne
push
cltd
stc
xchg
sti
or
sub
jmp
pop
cld
incb
addr16
orl
les
in
and
scas
sbb
dec
cmp
enter
xchg
cmp
nop
pop
les
mov
jl
xchg
fildll
test
xor
repz
imulb
bound
xlat
rcr
xor
test
inc
mov
add
xchg
cmpsb
sbb
sbb
jmp
cmp
into
adc
mov
add
pop
sbb
push
or
mov
lds
hlt
jnp
sub
fildl
stos
mov
cmp
je
mov
addb
lock
mov
xor
repnz
dec
pop
mov
mov
jmp
mov
push
cmp
pop
sti
add
fstpt
out
mov
jb
ja
imul
pop
mov
push
jo
int3
mov
jp
loope
pop
outsl
or
add
cwtl
sbb
jnp
pop
lcall
push
stc
inc
and
jp
pop
xchg
sbb
push
movsl
mov
insb
mov
xor
and
mov
addb
je
and
scas
mov
je
out
pushf
inc
std
test
dec
popf
mov
jle
add
andl
push
pop
in
sub
mov
sbb
cmp
adc
out
lock
pop
gs
cltd
addb
dec
sbb
sbb
fwait
ret
mov
inc
cs
or
adc
lret
sub
jo
pop
leave
jns
push
clc
je
nop
jle
std
adc
cmc
push
cmp
mov
adc
mov
pop
out
fldl
les
bound
xor
mov
int3
push
rcrb
jo
imul
or
stos
sbbb
lea
stos
addr16
fisttpl
mov
andb
pop
mov
push
mov
jp
cmp
xor
push
or
xor
dec
or
fdivl
es
stc
mov
lods
int
jle
mov
push
lods
sbb
sbb
adc
lea
clc
inc
cmp
fst
sub
mov
mov
fsubl
adc
push
add
fcompl
push
imul
cli
lret
xchg
cmp
hlt
aas
pop
mov
sti
in
call
je
mov
sub
cmp
mov
adc
ret
dec
enter
hlt
movsl
sbb
mov
xor
mov
sbb
sahf
adc
fwait
outsb
mov
lock
adc
pop
inc
fimuls
sbb
xchg
imul
cli
and
mov
loope
dec
mov
ror
jp
xchg
aas
fnstsw
pop
in
ret
lods
dec
or
jbe
rcrb
jp
cmpl
cmpl
cmpsl
pop
dec
xor
inc
push
data16
data16
int
cmc
fidivl
cmp
fwait
sbb
adc
and
xor
sub
inc
push
es
jo
and
es
shl
fs
mov
aas
jle
sbbl
adc
adc
pop
lret
fucom
lret
cmpsb
push
sbb
push
xor
popf
mov
inc
lret
adc
out
cmp
adcb
dec
insl
fistpl
jle
test
mov
cmp
push
jp
add
outsb
fimuls
sbb
mov
scas
add
mov
movsb
xor
sarb
sbb
ds
cmpsl
aaa
sub
dec
pop
sub
int3
xchg
loop
mov
cli
sbb
xor
addl
push
testl
pusha
dec
mov
les
xchg
in
sahf
test
pushf
pusha
sbb
push
testb
jle
inc
and
sub
xchg
fists
pop
in
cmp
stos
add
inc
fdivrl
pop
into
mov
shll
pop
dec
fdivs
js
adc
inc
cmp
adc
mov
mov
jb
das
add
lcall
scas
je
inc
dec
lahf
je
add
inc
mov
bound
in
lods
add
sbb
mov
lods
xchg
cli
and
rcl
dec
or
int3
popa
mov
jp
movsb
and
jnp
sarb
out
push
daa
jmp
mov
shl
addl
addr16
dec
pop
stc
sar
and
push
jmp
mov
add
test
js
and
sarb
and
in
xchg
jno
faddl
call
inc
insl
and
sub
or
loope
push
and
shll
lret
inc
mov
mov
cmpsl
loop
mov
arpl
fwait
mov
cltd
inc
mov
in
lods
add
les
pop
aaa
sbb
aad
sbb
sbb
add
jo
lea
and
sbb
pop
cld
test
mov
mov
repnz
notb
jno
cltd
adcb
hlt
mov
mov
cltd
cmp
fldenv
sahf
inc
loope
aam
ljmp
jo
jl
pop
fcmovbe
popf
or
cmpsb
xchg
loope
pop
sub
into
push
or
xor
sub
inc
dec
sbb
push
sbb
xchg
rcrb
loop
jl
andl
mov
je
in
enter
insl
mov
lock
dec
inc
sub
mov
pop
in
push
ss
repz
jge
jnp
fcmovnbe
and
lcall
sub
pop
pop
sub
mov
push
insb
sbb
and
nop
or
fidivrl
divl
leave
add
outsl
rclb
rcrb
aam
icebp
mov
xchg
fnstsw
cmpsb
sar
cmp
ds
pushf
sub
out
rcrb
push
adc
jb
ljmp
adc
aaa
sbb
push
sub
mov
inc
shl
xchg
xchg
loope
clc
cmp
add
loopne
stos
jle
add
or
or
jle
pop
xchg
dec
sub
bnd
imul
mov
lret
outsl
mov
sbb
push
push
aad
inc
push
cmp
lods
rcll
mov
and
andb
out
lds
dec
jle
mov
stos
testb
mov
jbe
fs
outsb
shll
scas
jmp
test
sub
push
xor
xor
push
push
gs
dec
or
pop
fxam
lods
jecxz
lods
ljmp
pop
pushf
int3
mov
push
inc
ja
or
dec
dec
ret
inc
jl
push
and
pop
xor
mov
inc
repz
cld
pop
pop
data16
jp
cmp
push
jl
out
mull
mov
int3
push
xchg
push
mov
ret
aas
into
dec
pop
leave
jl
pop
dec
push
test
and
adc
mov
fcoms
jno
sub
cmp
mov
arpl
cmc
js
lods
out
stos
jo
mov
xchg
aad
stc
pop
mov
rol
xorb
ret
mov
jne
lock
icebp
scas
dec
inc
or
movsb
cld
stos
mov
insb
mov
or
sub
fwait
repz
jle
jl
test
jl
and
inc
sbb
mov
repnz
jle
popf
lcall
dec
subl
mov
iret
sub
fcompl
mov
fstp
cmp
in
sti
fisttps
add
sbb
and
mov
icebp
jecxz
dec
fwait
sub
add
xor
xor
mov
daa
out
adcb
loop
sbb
mov
imul
push
mov
cmp
jb
aad
pop
pop
pushf
sub
lock
xchg
push
sub
das
in
jnp
into
mov
cmpsb
ret
dec
mov
cmpsl
orl
mov
pop
hlt
ljmp
mov
and
sub
ret
jo
mov
mov
gs
movsl
mov
xor
mov
jb
and
sbb
stos
inc
inc
xchg
push
sbb
mov
or
cmp
inc
nop
xor
in
hlt
add
xor
mov
add
fcoms
sub
rcll
adc
ss
aaa
jle
rsqrtps
pop
fistps
xor
loope
ja
or
sbb
outsl
adc
jno
fmuls
dec
mov
push
loopne
loopne
and
dec
mov
or
imul
add
sub
aas
or
sbb
xor
loop,pt
jb
xchg
fcomi
cmp
movlhps
inc
push
pushf
mov
mov
jae
sbb
and
xor
je
sub
int
lea
pop
push
imul
mov
or
add
mov
xor
dec
test
or
add
pop
jns
jne
js
pop
add
and
fisubl
pusha
dec
sbb
mov
mov
mov
jns
movsb
xorl
mov
pop
xor
xchg
cmp
lock
dec
inc
dec
ljmp
pop
or
xchg
nop
jecxz
jns
mov
push
cwtl
lds
inc
mov
mull
xchg
in
in
mov
cmpb
and
or
ficoms
out
mov
lahf
mov
inc
lcall
xor
movsb
mov
ret
ficoms
sbb
xchg
mov
inc
lcall
js
imul
and
jbe
addr16
mov
pop
enter
mov
out
iret
iret
outsb
pop
outsb
pop
mul
mov
inc
imul
xchg
mov
mov
pop
fcom
mov
fstpl
aad
loope
sub
adc
rorl
xchg
xor
movsb
mov
std
cmp
pop
pushf
clc
lret
mov
movsb
scas
sbb
gs
shl
xlat
fnstenv
xlat
mov
fnsave
sub
inc
test
mov
xor
je
and
leave
inc
xchg
mov
lock
cltd
xchg
bound
hlt
sub
lock
lret
dec
fimull
outsb
xchg
mov
mov
movsl
mov
jge
negl
cli
sub
jg
cmp
sbb
imul
cltd
fwait
and
in
data16
jb
xchg
add
in
push
xor
scas
sub
push
inc
out
dec
mov
popf
jmp
dec
rcll
in
cmp
sub
adc
lock
xchg
pushf
stc
pop
sahf
cs
roll
mov
cwtl
inc
cmp
dec
jmp
xor
xor
sub
mov
sahf
dec
mov
mov
aaa
fcmovne
xchg
mov
lds
mov
rolb
iret
int3
mov
imul
inc
pop
das
push
xchg
xor
out
xchg
jbe
mov
push
je,pn
and
lea
dec
add
mov
xchg
int3
pushf
les
insb
adc
jno
dec
xor
mov
aam
push
lods
movsb
dec
jo
pop
xchg
mov
fidivrs
repz
ficoml
je
inc
jnp
mov
push
iret
scas
inc
dec
sbb
pop
movsl
cmc
pop
push
push
aaa
mov
jp
cltd
in
add
push
adc
push
repnz
cmp
lock
daa
inc
stos
cli
push
mov
bound
jg
arpl
xor
ficoms
or
cmc
loope
adc
jnp
ja
mov
xor
mov
into
adc
pop
ljmp
or
xor
sub
xor
jl
out
push
pop
and
mov
adc
jecxz
or
cmp
adc
xor
cli
ds
push
mov
jp
call
sub
fadd
jmp
testl
sti
cmpsb
mov
test
aaa
adc
pushf
dec
pop
outsb
sub
mov
and
shlb
xor
loope
dec
mov
cld
mov
dec
repnz
icebp
stos
xor
popf
sbb
gs
cltd
ljmp
mov
fcmovu
adc
push
and
push
and
std
add
loopne
xorl
pop
mul
stc
cld
mov
das
pop
xorl
sbb
dec
mov
mov
xchg
xchg
dec
pop
fstl
lahf
sub
bound
inc
mov
lcall
sarb
sbb
adc
xchg
scas
adc
imul
and
add
mov
into
fs
mov
call
dec
sub
std
js
aad
jg
adcb
lcall
pusha
icebp
push
bound
fnsave
out
mov
in
add
lods
or
jecxz
xor
cli
in
jl
stc
lds
inc
gs
pop
out
pop
aam
pop
ret
and
fs
xchg
or
jo
mov
in
hlt
mov
clc
aam
pop
xor
fsubr
js
ret
adc
sub
std
or
xor
pop
and
fdivl
pop
jg
sbb
into
sub
push
daa
adc
push
pop
mov
leave
lods
movzwl
xor
dec
and
mov
int
mov
lods
inc
or
mov
pop
jle
cmc
int3
daa
outsb
sahf
adc
mov
xchg
shrd
push
adc
pusha
cmp
or
adc
mov
in
ds
and
clc
aad
or
xchg
inc
dec
sub
pop
movsb
xchg
jl
js
mov
add
aam
rcrb
insl
adc
mov
xorl
into
and
dec
aam
xchg
push
stos
insb
inc
pop
adc
cmp
fstps
iret
mov
insb
call
lds
jbe
sub
hlt
jnp
lahf
fwait
adc
rorl
inc
xchg
dec
lea
cmp
inc
jge
sbb
cwtl
in
jb
rorl
push
je
cmove
fcmovbe
dec
test
push
push
lds
fs
lods
dec
and
daa
mov
outsb
aas
jge
push
lret
add
popf
push
and
sub
in
mov
out
stos
mov
shll
mov
inc
insl
jbe
pusha
mov
adc
mov
pop
test
das
mov
xchg
std
xchg
notb
iret
stc
xchg
movsl
dec
sahf
lods
rol
adc
hlt
jge
sarl
push
mov
cltd
inc
xchg
dec
adc
mov
popl
jae
and
push
push
mov
xor
data16
movsb
mov
adc
dec
in
loop
popf
ss
and
add
cmp
adc
decl
popl
adc
test
fildll
sbb
std
mov
pop
sub
pop
lcall
cmp
into
ret
jmp
insl
test
pop
out
xchg
lods
sar
mov
ja
xor
adc
or
dec
push
adc
xchg
jns
mov
int3
sahf
mov
mov
add
push
filds
in
push
popa
cs
gs
outsb
adc
mov
mov
xchg
push
and
and
ret
mov
xlat
jmp
mov
push
int3
div
jno
lock
xchg
or
mov
std
rcrl
test
data16
lock
and
popl
push
mov
mov
xchg
shlb
inc
scas
push
sub
sbb
mov
pushf
xchg
sbb
pop
rorl
insl
scas
scas
inc
inc
mov
mov
and
and
push
push
lock
mov
repz
aas
dec
imul
mov
std
adcb
stos
cmp
or
lods
ret
fstps
inc
jo
lds
jl
js
stos
jle
jmp
out
ret
adc
testb
xchg
jl
jge
in
test
push
pop
cmp
dec
daa
pop
mov
add
push
push
imul
add
dec
es
ret
adc
arpl
in
push
jbe
aaa
pusha
or
and
jnp
lods
sub
cwtl
push
mov
gs
cwtl
shlb
ror
pop
out
mov
xchg
push
js
das
jnp
imul
leave
add
leave
sub
fisubrs
pop
data16
js
stc
mov
bound
fildl
dec
sarb
mov
cmp
or
sub
loop
je
int3
sub
mov
stc
ss
sub
test
push
iret
pop
or
enter
push
stc
jo
int3
insl
sub
pusha
mov
jg
sbb
shlb
push
sub
cmp
xor
xchg
sbb
sub
loop
xor
cltd
pop
outsl
icebp
push
in
frstor
imul
push
repz
xchg
push
dec
sbb
or
es
test
lods
jae
and
sahf
fcomp
mov
xchg
call
pushf
pop
cmpsl
lahf
dec
sub
lcall
inc
nop
push
imul
inc
and
lock
sub
mov
mov
jae
enter
mov
lret
mov
or
cmp
es
mov
addr16
jns
mov
and
cs
cmpsb
dec
xor
pop
cld
pop
inc
ds
cmp
dec
xor
std
outsl
mov
sbb
aad
mov
mov
xchg
adc
es
mov
and
pop
sub
popf
data16
mov
loopne
add
lcall
jmp
or
add
outsl
add
les
aas
js
icebp
frstor
xchg
push
or
push
into
cmp
mov
out
or
mov
movsb
in
jo
adc
je
jecxz
push
jle
pop
ror
dec
test
iret
aad
aaa
fcompl
lcall
in
cmpsb
push
xchg
mov
mov
dec
sbb
stos
pop
xchg
test
push
push
cli
cld
std
sbb
les
add
pop
jo
rorb
push
adcb
fildll
pushf
nop
push
pop
jmp
imulb
mov
loop
or
cmc
xchg
cmpsl
ja
sbb
mov
sbb
pop
adc
add
loopne
bound
in
mov
fmul
pop
dec
cmp
mov
ret
fcoms
pop
xchg
push
ficomps
stos
dec
andl
dec
iret
pop
lret
or
lret
add
dec
es
mov
out
fmulp
fisubl
fldl
inc
pop
jae
out
and
fptan
push
push
ja
adc
push
int3
and
jbe
push
aam
cmpsl
fwait
ja
scas
bound
flds
and
lods
das
inc
xor
mov
xchg
inc
mov
dec
adc
mov
sub
es
mov
bound
mov
cmpsl
mov
es
int
icebp
imul
sbb
fistpll
fildll
xchg
xchg
adc
shr
mov
inc
cmp
icebp
pop
je
loope
loope
repz
inc
lods
adc
or
mov
out
and
sbb
ljmp
pop
mov
sbb
aas
arpl
mov
pop
mov
out
and
bound
rclb
pcmpgtb
pop
loop
add
es
mov
xor
push
cmp
insb
lret
icebp
lahf
fsubrs
imul
pop
push
repz
and
xchg
inc
push
sub
enter
enter
mov
enter
out
pop
fs
cwtl
sub
icebp
mov
inc
jecxz
outsl
jb
rorb
icebp
ror
add
xchg
pop
adc
gs
push
int3
adc
add
add
push
and
add
cs
fwait
jne
loop,pn
sub
mov
pop
jno
dec
out
out
lods
incb
xchg
xchg
idivb
inc
sbb
imul
aad
mov
mov
add
pushf
in
pop
aas
push
pop
ret
ds
push
lret
cmc
cmpsl
jb
sbb
xchg
fisubrs
fisubrs
int
jno
pop
rolb
sub
roll
xor
jno
sbb
int3
xor
or
ss
les
push
sbb
pop
mov
dec
pop
sar
jae
mov
cwtl
popf
insb
lret
jl
clc
je
jne
push
and
pop
fnop
stc
push
push
push
push
lea
push
push
push
push
test
add
test
jns
push
push
push
js
pop
pop
pop
stc
push
pop
loop
jecxz
stos
jg
inc
push
jo
pop
push
insb
fnsave
out
cmp
cltd
dec
jle
daa
or
mov
pop
cld
lods
inc
sub
or
jo
jnp
xor
clc
push
pop
sub
push
movzbl
cmp
push
jns
and
pop
stc
jo
jne
push
mov
pop
push
inc
pop
loop
pop
cmc
push
pop
stc
or
stc
jmp
jmp
call
cmp
clc
push
call
stos
pop
dec
pop
int3
daa
xlat
sarb
addr16
jbe
mov
dec
cmp
mov
ss
aam
sbb
pop
scas
push
mov
ss
test
push
fbstp
or
les
pop
nop
cmp
push
add
pop
rol
jbe
xor
lea
push
push
push
rol
pop
pop
pop
cmp
push
push
mov
pop
pop
push
jbe
test
pop
push
inc
dec
pop
jnp
or
sub
add
lea
push
call
ja
out
pushf
scas
and
sarb
inc
mov
notl
pop
into
sub
sbb
cmp
pop
xchg
mov
sub
cmp
and
daa
jae
mov
dec
rcrb
pushl
pop
jmp
pop
ret
jg
arpl
jg
shrb
xor
add
inc
enter
clc
push
cli
pusha
xchg
inc
mov
jge
jbe,pt
dec
and
cmpsl
mov
repnz
xchg
mov
sub
add
pushl
jmp
push
movzbl
rol
push
push
or
pop
pop
and
add
nop
push
add
xchg
push
jne
or
pop
and
dec
inc
push
mov
pop
push
jns
add
pop
lea
cld
stc
nop
loop
pop
push
push
push
test
pop
pop
pop
fnop
add
push
js
xor
pop
loop
jecxz
cmpsl
xchg
jg
dec
fisttpl
pop
les
pushf
out
dec
into
ret
sub
inc
xchg
dec
subb
loop
jecxz
ds
cmp
loop
jbe
cmp
sbb
pusha
mov
rcrb
push
pop
push
push
test
pop
pop
xchg
nop
jne
xor
push
add
pop
jle
push
push
jle
or
pop
pop
inc
dec
cmc
push
mov
xor
pop
cld
rol
or
push
push
add
pop
push
dec
pop
jne
add
add
mov
rol
push
xchg
movsl
xchg
push
call
icebp
bswap
repnz
aam
xor
insl
dec
pop
add
or
sbb
add
fdiv
shll
cmp
xchg
mov
and
test
pop
cwtl
in
ret
sbb
mov
rorl
mov
ljmp
add
in
je
jb
jne
shl
cmc
shl
push
push
test
pop
pop
xchg
xchg
cmc
dec
jne
push
call
and
push
movsb
sub
aas
je
mov
mov
mov
lods
cs
fwait
or
stos
sbb
cmpsb
cmpsb
adc
push
and
rorl
push
cmc
daa
rol
push
sahf
mov
popf
and
and
mov
rorb
cli
push
gs
add
shl
out
or
cwtl
jg
lret
scas
pop
pop
xor
mov
xor
cmpsb
rolb
cld
ficomps
shll
jnp
mov
fcmovne
cli
mov
ficoms
scas
add
fisttpl
jne
mov
adc
mov
lcall
es
dec
cmp
dec
push
mov
lahf
adc
sub
mov
rcr
ljmp
ficompl
mov
int3
lods
xchg
fwait
xlat
xchg
add
loope
fsubs
cli
mov
sbb
sub
cmp
cmpsb
jle
rorb
pop
xor
scas
sbb
jns
mov
repz
imul
inc
xor
pop
data16
xor
test
add
add
lret
movsl
and
outsl
leave
fisubrl
sub
xor
push
dec
in
add
jne
add
add
pop
gs
jnp
pop
dec
fmuls
int3
cs
ret
outsl
add
outsb
sbb
popf
lret
mov
sub
idiv
aas
mov
int
sbb
mov
fidivrl
hlt
sub
fdivrl
fs
sbb
mov
loopne
repnz
dec
lock
stc
popa
and
test
ss
or
or
nop
fs
pusha
sub
outsl
cmp
cs
fnstsw
add
inc
inc
and
imul
aaa
cwtl
outsb
fidivl
add
and
dec
inc
out
sbb
xchg
inc
insl
imul
fildll
nop
pop
scas
inc
movsl
mov
test
lock
push
jne
and
test
cmp
jle
mov
adc
pop
pop
lods
mov
sbb
xchg
nop
out
ret
in
pop
jp
mov
ja
scas
dec
inc
and
out
mov
and
mov
inc
jg
test
repnz
shl
sub
cmp
pop
mov
mov
ret
int
dec
push
int
icebp
in
cld
sbb
movb
mov
mov
stos
loop
xchg
out
out
sub
sahf
mov
push
mov
cmc
adcl
hlt
inc
iret
jmp
ret
push
aaa
movsl
pop
sete
mov
sti
push
xchg
lock
ret
add
push
pop
and
loope
add
aaa
fstpt
shll
xor
cmpsl
and
loop
push
push
jge
icebp
push
xor
hlt
mov
cmp
sub
andl
iret
push
sbb
push
xchg
punpcklbw
dec
mov
repnz
cwtl
fs
stos
rcll
sbb
outsb
outsl
push
popf
test
jbe
pop
xchg
xor
cmp
ja
dec
repz
call
orb
enter
daa
cmpsl
add
stc
stos
pop
jae
out
in
mov
lds
imul
lods
imul
vfmaddsub132ps
and
xchg
and
popa
jb
testl
dec
cmpsl
mov
sub
aas
mov
add
sub
fs
xchg
mov
cmp
in
xchg
andl
mov
mov
mov
rcrl
int
icebp
add
push
ffree
repz
mov
xlat
test
fadd
add
ja
push
ljmp
in
jg
xchg
aaa
rorb
insl
nop
jmp
lret
xchg
aas
divb
negb
into
icebp
pop
ud2
fcmovnbe
test
mov
icebp
xchg
cmp
push
adc
arpl
insb
pop
leave
inc
test
sub
xor
adc
cmp
fsts
xchg
iret
dec
jb
sub
inc
and
mov
movsb
shrb
cmp
sbb
aas
je
mov
pop
xor
shlb
and
addr16
push
fcoml
mov
cmp
dec
dec
sti
adcl
bound
insb
xor
out
movsb
repnz
pop
add
sub
jnp
mov
push
test
push
insl
cli
jmp
jno
das
clc
pop
insb
lret
enter
sub
pop
dec
js
cmc
and
sub
dec
shll
ds
movsb
cltd
mov
push
adcl
das
xorb
adc
xor
insb
inc
xchg
inc
or
cltd
push
fidivrs
xchg
jnp
xor
cmp
mov
gs
or
mov
rcrl
sbb
lret
aam
cmpsl
sub
leave
lea
scas
and
imulb
fcmovbe
push
or
dec
insl
push
sub
jle
scas
sub
subb
ror
sub
inc
rolb
repz
push
fstl
dec
movsl
pop
jp
rolb
xchg
shll
pusha
sbb
ret
test
fdivl
sub
add
lret
andl
inc
mov
pop
lods
mov
sbb
xlat
adc
dec
mov
adc
cmp
sarl
push
inc
or
mov
in
nop
aad
mov
sub
push
push
pop
fldcw
mov
xor
lret
and
or
out
xchg
mov
imul
movsl
push
push
and
xchg
addr16
cwtl
pop
mov
push
rol
push
xchg
cmp
add
push
testl
in
cmpsb
mov
adc
mov
sbb
adc
fistpl
sub
ja
in
aad
sub
ret
cmp
lret
sarl
mov
xor
into
sub
in
lds
push
xchg
js
or
xchg
pop
lret
adc
mov
xchg
repz
sbbl
adc
xlat
les
xchg
in
mov
addr16
les
cmpsb
cmpsl
xchg
jecxz
sbbb
jnp
out
push
add
or
mov
or
lods
push
aas
cmpsb
xchg
js
enter
mov
lret
adc
adc
mov
xor
cwtl
shll
dec
in
xor
mov
and
or
lcall
testb
dec
mov
scas
idivb
mov
rcrl
mov
mov
and
push
aas
mov
xor
pop
xor
push
xchg
mov
mov
cli
test
inc
sahf
mov
gs
or
mov
mov
jg
fdivl
or
adc
bound
dec
rorb
add
fstps
mov
decb
clc
stos
roll
int
lret
jns
ret
popf
xor
sbb
xchg
dec
call
fnstsw
sub
jecxz
mov
xor
and
hlt
pop
push
xchg
jbe
movsl
mov
movsl
lods
test
in
cmpsb
dec
push
mov
notb
xchg
mov
push
dec
lret
add
xor
mov
and
aas
ret
fsubrl
ja
adc
sub
loopne
bound
jnp
outsb
sbb
mov
movsb
stos
cmpsl
das
add
pushf
jmp
scas
sub
pusha
hlt
cmp
dec
lret
and
outsb
fsubrp
subl
nop
xchg
pop
jnp
xchg
xchg
jnp
inc
add
iret
dec
and
or
out
pop
scas
mov
fldt
jnp
sbb
sbb
subl
push
shlb
push
fdivl
in
inc
shlb
pusha
daa
mov
bound
shll
les
je
ds
repz
pop
push
or
pop
movsb
dec
imul
dec
xchg
inc
mov
movsb
fsubrl
mov
jl
cmp
fldenvs
inc
addr16
push
or
ja
loope
push
add
or
jne
jmp
xor
dec
into
std
imul
jle
loope
bnd
into
cmp
int
or
sarb
xor
dec
cmp
and
les
mov
sbb
adc
lods
inc
fiaddl
lds
mov
addr16
lods
shrl
bound
and
scas
pop
mov
int
xchg
jns
addb
and
sbb
xor
sbb
push
rcll
or
arpl
shlb
int
jmp
rcl
lret
loopne
jl
loope
fst
mov
insl
or
mov
test
cmp
mov
xor
mov
pop
jecxz
clc
fst
or
cmovle
repnz
mov
mov
loope
scas
repz
repz
ljmp
pop
mov
loope
mov
xchg
scas
ret
push
add
cmpsb
cmp
mov
rcll
mov
sub
repz
xor
movsb
dec
push
inc
and
in
jle
leave
sarb
lret
mov
mov
xchg
cmpb
aas
ja
nop
lods
les
push
loop
ret
repz
mov
fmul
jg
fcoml
mov
imul
pop
stos
out
cmp
cmpsl
sbb
sbb
pusha
jmp
xchg
and
inc
idiv
push
movsb
add
rorl
adc
test
sbb
sahf
idivb
xchg
xor
test
mov
add
push
add
mov
adc
mov
ja
mov
adc
cli
call
loopne
add
mov
arpl
dec
mov
enter
push
cmp
sub
cmp
rol
or
add
in
jg
xchg
sahf
fldcw
xor
lahf
or
subl
fadd
int3
xchg
scas
js
push
insb
addr16
stc
icebp
pop
shl
daa
scas
cmp
sbb
sbb
cwtl
push
cmpsb
test
imul
jge
push
jg
push
adc
push
pushf
subl
mov
clc
adc
negl
nop
cmpsb
cmp
push
repnz
and
inc
push
pop
push
shlb
pop
jle
hlt
aaa
sub
jge
pop
push
dec
fs
aad
inc
mov
xlat
addr16
movsl
inc
push
mov
jae
iret
mov
mov
mov
popf
push
iret
xorl
fstps
mov
pop
test
jecxz
or
mov
shrb
ss
pop
jle
lea
and
sub
iret
js
and
cmc
test
lods
cmp
in
adc
int3
adc
call
and
sarl
cmpsb
test
jecxz
xchg
and
out
mov
das
insb
sub
push
idivb
push
imul
imul
or
and
es
lcall
rorb
mov
xacquire
push
test
cltd
pop
int
stos
and
daa
dec
dec
dec
fsubp
add
daa
icebp
xor
cmc
or
popa
mov
mov
iret
popa
ret
lret
fs
test
into
cmp
xor
inc
and
add
jecxz
test
jnp
ljmp
test
push
ja
add
pop
inc
pusha
popf
mov
cs
leave
je
ss
mov
push
cwtl
and
fsubr
cmp
repz
and
add
sub
es
das
ret
mov
orb
and
cs
cmp
pop
mov
or
lock
xchg
lods
cmpsl
fdivs
fisubs
shlb
jns
jp
mov
scas
jo
and
cmp
and
add
in
out
push
lcall
fsts
cmp
xchg
xlat
pop
add
or
jge
rcrl
lea
mov
or
enter
sahf
movsl
pop
push
shl
rorb
jne
in
jg
lret
push
cld
fidivs
ror
adc
andb
scas
push
xchg
sbb
shl
push
imul
mov
out
xchg
push
cmp
mov
adc
or
inc
in
cmpsb
xlat
push
add
loopne
jle
or
cmp
jg
mov
adc
mov
mov
lds
pop
mov
mov
add
lock
mov
cs
dec
sub
push
jnp
push
clc
std
scas
pushf
jmp
sbb
in
loop
jnp
cld
add
fisubs
add
and
mov
xchg
repnz
inc
das
pop
jae
clc
inc
sub
jb
xchg
daa
pop
testl
roll
fcmovb
xor
push
sub
pop
int3
add
lret
lret
cmp
fcoms
add
stos
icebp
mov
sbb
pop
add
int3
outsb
jg
stos
or
cs
or
loope
mov
mov
jo
call
ror
mov
dec
test
dec
enter
ds
popf
inc
mov
xor
xchg
ljmp
cltd
cmp
fdivs
into
enter
inc
push
mov
mov
mov
das
inc
int3
mov
push
aaa
shrl
and
cld
pop
adc
rcll
jbe
popa
sub
loope
jae
dec
sub
lcall
fidivrl
fs
stos
dec
add
dec
pop
cmp
dec
out
push
fists
negb
or
lea
push
dec
mov
or
fdivrs
inc
fstpt
inc
jo
aas
pop
mov
ss
xor
jg
pop
xchg
or
out
push
push
xchg
mov
xchg
xor
or
in
xor
jle
rcll
dec
lods
inc
scas
sub
add
sbb
xchg
and
and
jmp
fisubrl
push
imull
mov
push
inc
shl
add
imul
movsl
lcall
or
hlt
sbb
adc
pop
lods
or
xor
sub
sbb
ror
sbb
call
imull
je
pop
pshufw
push
mov
push
or
jne
and
inc
add
mov
gs
roll
add
cmp
test
lock
inc
jbe
xchg
or
pop
std
mov
and
test
xchg
imul
repz
lret
adc
loopne
jnp
inc
fdivrl
or
and
add
jbe
cmpsb
sub
or
xor
sub
outsb
jb
inc
mov
push
add
or
lcall
push
pop
movsb
out
push
test
lea
out
xchg
adc
orl
adc
ret
pushf
and
mov
fisubrs
cmpsb
jge
jge
outsb
es
inc
jae
std
repz
cmpsl
dec
xchg
add
cmp
jp
lret
mov
jg
xchg
xchg
push
lods
adc
xchg
cmpsl
cmpsb
inc
adc
push
cmp
mov
mov
scas
cmp
aas
fadd
faddl
or
bound
int3
iret
cmpsb
mov
sub
or
and
js
shll
pushf
int3
jge
cld
jnp
cmp
inc
dec
xchg
jno
inc
fucomip
rcl
sub
push
gs
xchg
lret
lahf
iret
fimull
pushf
adc
pop
call
lcall
xorl
xchg
or
daa
call
scas
movsb
mov
mov
pop
jae
jb
idivb
jns
fstpl
mov
mov
out
jb
movsb
and
lret
adc
adc
enter
pop
and
cs
insl
push
mov
fmul
xchg
sarl
jmp
lahf
lods
adc
mov
es
jp
jge
fcmovne
daa
dec
icebp
mov
aad
xor
mov
imul
in
stc
mov
jbe
add
repnz
ret
cmp
inc
aas
aam
xchg
gs
or
je
jno
sub
mov
jae
mov
inc
mov
pop
cmp
push
mov
or
push
push
dec
std
je
cmpsl
xor
lret
lods
mov
xor
inc
push
cmc
in
or
int3
es
aas
push
push
xchg
test
jnp
jo
mov
push
dec
jl
cmp
pop
ret
adc
loope
adc
jnp
pop
mov
inc
push
adc
push
mov
and
mov
test
inc
arpl
xchg
sbb
adc
das
pop
fldcw
mov
popa
pop
sbb
cmp
sbb
add
cmp
pop
pop
inc
pop
jb
sahf
cmp
dec
bound
inc
popf
push
insl
cwtl
and
and
lret
lods
pop
inc
lods
cmc
cmp
jo
adcb
test
dec
arpl
ja
je
mov
dec
add
jecxz
daa
cwtl
movsb
xlat
out
lahf
leave
and
insb
es
mov
pop
mov
push
push
in
adcb
mov
stc
sbb
dec
jl
dec
mov
sti
idivl
or
rcll
jne
fs
cmc
outsl
or
cmpsb
pop
inc
inc
jg
xchg
cmc
push
popf
ret
jae
mov
jmp
xchg
je
sbb
ljmp
pop
out
jle
shr
dec
cmpsl
ljmp
fiadds
inc
mulb
push
loope
jg
mov
inc
dec
sbb
xchg
lds
arpl
sub
adc
xchg
xchg
jp
jle
ja
pushf
adc
movsb
std
notb
aad
movsb
popa
lods
lret
inc
adc
rep
cmp
dec
lret
fs
sbb
ficompl
dec
lahf
jle
pop
cmpsb
sbb
dec
bound
xlat
add
xchg
push
nop
xchg
daa
roll
lds
jb
insl
fdivs
icebp
stos
outsl
pop
cmpsb
xchg
adc
xor
jle
nop
cmc
in
pop
xor
fnsave
push
in
push
mov
cmpsb
movb
mov
lcall
or
add
push
fidivrl
call
mov
pop
out
outsl
out
leave
call
cmp
cltd
out
sub
mov
mov
add
aas
inc
mov
in
xchg
xlat
lock
popa
cld
mov
sub
sbb
leave
sub
push
jb
lcall
popa
push
mov
in
and
jmp
pusha
mov
ret
xor
mov
push
or
xlat
fsubr
mov
sub
dec
lret
leave
and
lcall
insb
or
cwtl
orl
inc
test
sub
icebp
cwtl
cmpsb
add
hlt
cld
adc
pushf
aam
insl
and
xchg
sbb
cltd
into
out
nop
cmp
ret
mov
add
pop
mov
ret
mov
pop
adc
sarb
jle
sarb
push
dec
pop
push
jb
cltd
push
add
mov
and
inc
jbe
sbb
pop
mov
iret
stos
stos
cmpsl
test
sub
daa
scas
shr
push
rolb
fwait
dec
daa
add
cwtl
dec
bound
xchg
jb
lret
ret
push
or
ret
mov
cmp
pop
or
subl
int3
xor
loop
cmc
xchg
add
jne
or
and
cmp
fisttps
fidivs
loopne
and
push
ja
inc
aas
push
pop
ficomps
cmp
push
pop
cmp
pop
fstl
and
push
adc
mov
cmp
push
mov
mov
je
cmp
loopne
out
jnp
jo
enter
gs
lea
aam
mov
dec
sbb
aas
mov
and
neg
nop
xlat
adc
pusha
sbb
mov
fs
cmp
sarl
sub
jmp
fildl
jmp
mov
ret
xorps
sarl
add
cmpsl
pop
cmp
ret
arpl
sbb
ljmp
mov
shll
adc
mov
and
and
mov
rcr
je
daa
popa
aas
lods
cmpsb
mov
and
add
push
ljmp
xchg
ja
push
lods
pop
push
add
add
gs
ret
ficomps
test
adc
or
sub
cmp
test
xlat
mov
xor
jg
sbb
pusha
in
xchg
jo
add
dec
adcl
xchg
lret
adc
aas
add
hlt
sbb
xchg
out
pop
add
sub
popf
nop
imull
mov
mov
or
xor
cli
xlat
xor
imul
jp
es
cmp
xchg
inc
rcll
out
mov
gs
clc
sbb
lret
mov
inc
inc
sbb
test
push
push
or
jns
movsl
jno
shr
mov
rclb
rcl
out
mov
cs
fildll
or
ljmp
sti
adc
fcmovnu
sbb
jge
jo
pop
inc
cs
aad
data16
cld
dec
sbb
sub
aam
shr
jno
mov
popf
sbb
pop
lahf
mov
ljmp
cwtl
cmp
lods
xor
out
jnp
mov
push
jns
insb
add
jns
aad
mov
into
xchg
cmp
insb
adc
fisubrs
in
ret
jmp
ret
mov
dec
push
test
mov
lcall
lods
test
jmp
add
inc
enter
pop
xor
ja
sbb
push
inc
stos
insl
xchg
fstpt
pushf
popf
fcompl
loop
jecxz
jns
sbb
push
mov
cmp
leave
mov
or
adcb
sarb
mov
jp
rolb
xor
in
jno
mov
or
lods
nop
lret
rcl
mov
cld
into
loopne
sub
test
mov
mov
jg
pop
bound
add
jb
cli
xor
mov
push
push
sub
repnz
cmpsl
stc
in
push
shll
ss
dec
pop
pop
push
bnd
dec
in
leave
adc
xchg
dec
and
or
adc
jl
aam
push
cmp
jecxz
arpl
ss
stos
lock
dec
fwait
popf
cwtl
outsb
lea
jo
sub
scas
les
push
loopne
push
cmp
mov
int3
arpl
xchg
int
dec
lcallw
dec
push
dec
addr16
scas
pop
sbb
aas
nop
dec
adc
inc
in
inc
dec
sub
mov
pusha
dec
movsb
cmp
or
push
out
jo
push
mov
cmp
xchg
sub
push
push
js
cmpsb
adc
jns
sub
and
pop
int3
fs
jp
xor
push
inc
mov
pop
lahf
jne
and
clc
cmp
stos
adc
xor
push
popa
xor
lret
stc
mov
xchg
cwtl
popf
mov
pop
cli
sbb
ja
gs
lcall
push
dec
out
sub
pop
fiaddl
mov
mov
aam
and
mov
ja
les
in
xchg
jbe
or
jbe
imul
lret
xchg
push
inc
mov
icebp
jo
push
lret
cmpsb
incb
frstor
xchg
stos
mov
jae
or
repz
add
addr16
les
jbe
push
js
loope
pop
daa
ss
lock
inc
add
aam
imul
popf
lods
loop
dec
pop
dec
into
call
and
push
popa
jge
adc
sub
inc
push
call
xchg
add
pop
mov
fcompl
movsl
inc
ret
inc
jl
dec
add
jne
inc
adc
push
push
data16
mov
and
dec
cmp
jb
lods
push
cmp
xchg
adc
sbb
xchg
sti
sbb
lret
lea
sub
imul
push
rcll
pop
loope
dec
inc
jno
scas
adc
xor
inc
insl
inc
insl
xor
sbb
sarl
repnz
mov
mov
dec
pop
mov
and
sbb
or
push
jnp
repnz
rorl
sub
mov
push
lret
jns
mov
push
aas
push
xchg
or
lea
xchg
imul
stc
jle
dec
pop
adc
push
outsb
adc
cli
mov
dec
fs
ror
mov
rcrb
in
mov
ja
into
xor
popa
out
rorb
bound
sub
mov
nop
loopne
aaa
pusha
xor
cld
mov
shlb
adc
notl
sub
push
leave
jbe
inc
xor
imul
and
lea
xchg
ret
push
sbb
int3
out
push
jl
cmp
rolb
ret
popf
xor
sub
loope
adcb
imul
add
jp
orl
pop
sbb
inc
push
ds
inc
dec
xchg
ds
hlt
es
mov
add
pop
mov
inc
mov
inc
out
fnstcw
pop
out
mov
int
inc
xor
cmc
sbb
scas
bound
adc
pushf
jns
mov
dec
popf
movsl
mov
dec
jae
fldt
js
cs
insb
jns
mov
push
gs
movsb
test
in
sbb
xchg
adc
add
fdivl
xchg
push
cmp
adc
dec
sub
frstor
push
stos
jno
mov
push
jae
push
lods
sahf
xchg
xchg
ja
loopne
cs
sub
inc
or
adc
mov
adc
xlat
arpl
test
imul
jnp
clc
popa
cmp
add
and
sahf
mov
dec
ret
repnz
xchg
mov
sub
cmp
shll
roll
repnz
mov
pop
sbb
mov
shll
cmp
jnp
push
scas
loope
lahf
or
out
push
lret
out
in
int
test
movsb
imul
fildl
inc
pop
cmc
out
and
inc
add
iret
test
sbb
jl
stos
scas
mov
cmpsb
sbb
jle
mov
xor
xchg
cmp
sbb
add
and
mov
je
iret
sbb
mov
add
sub
push
xchg
inc
xor
mov
push
shrl
jbe
sub
adc
outsl
test
ret
enter
subb
in
adc
dec
shlb
jg
push
xchg
mov
or
ja
add
dec
mov
mov
and
fstpt
leave
push
add
rorl
mov
insb
and
xchg
mov
iret
dec
push
lret
sub
jle
inc
push
fnstenv
jmp
jg
cmc
mov
out
adcl
in
cmp
ljmp
push
pxor
sarl
insl
cld
imul
leave
nop
hlt
or
popa
fildl
test
push
cli
or
jo
cmp
jne
int3
push
loop
adc
adc
pop
fwait
repz
dec
roll
fadds
lret
sbb
cmp
dec
lret
bound
jle
and
and
jne
fisttpll
into
or
mov
scas
push
or
test
push
xor
mov
cli
in
rol
push
cmp
imul
cwtl
nop
aaa
loope
push
pop
leave
xor
pop
push
sub
fs
mov
loop
add
add
adc
add
or
xchg
sub
ffreep
cwtl
mov
in
movsb
pop
fisubl
into
scas
push
inc
add
negb
imul
add
mov
push
rcrb
push
cli
cmpsl
push
shrb
push
imul
mov
pop
cmp
addb
jecxz
outsb
std
jg
or
push
incb
dec
in
insl
lods
divb
jl
test
lods
loopne
pop
push
jg
pop
rclb
lock
fdivl
pop
push
aas
xchg
push
pop
add
push
sbb
adc
je
jae
and
lods
push
js
dec
or
aaa
call
cmp
xchg
sub
cmc
push
out
ss
ficomps
inc
sbb
in
push
mov
jmp
addr16
aaa
xchg
enter
icebp
jae
clc
mov
inc
xchg
add
pop
inc
ss
es
divb
jge
mov
jmp
sub
sub
cmpsb
mov
add
popf
scas
fnstenv
inc
jecxz
sub
xchg
icebp
mov
test
sarl
movsb
push
xchg
push
or
push
lret
sti
fldcw
orb
xchg
les
push
adc
inc
subb
jle
ret
cmp
lret
push
test
fcompl
and
mov
adc
sahf
andb
mov
sub
pushf
push
dec
and
ljmp
addr16
cmp
cmp
adc
sarl
mov
and
or
bound
xor
daa
outsb
out
test
inc
pop
mov
pop
ja
mov
inc
into
imul
rcll
sub
mov
and
adc
mov
push
jge
in
jg
cmpsb
push
jecxz
mov
dec
add
aaa
lods
adc
lock
les
mov
dec
repz
stc
cwtl
hlt
sbb
push
pusha
xchg
pop
lods
xor
mov
mov
pop
xchg
sbb
add
mov
loope
jbe
lock
ret
imul
cmp
xor
daa
cmp
xor
push
cmp
daa
xchg
sahf
fs
mov
pop
jo
dec
arpl
and
mov
xchg
test
sbb
adc
out
nop
stos
sub
cld
into
jecxz
xor
pop
mov
xchg
daa
jg
sub
push
inc
xchg
sub
sbb
idivl
dec
into
cs
cmp
je
xchg
cltd
jg
pop
add
les
xchg
fisttpl
or
sub
jl
jae
jmp
pop
mov
lahf
icebp
mov
jbe
xchg
cs
inc
shl
ret
mov
adc
lahf
jno
jnp
fcoms
mov
inc
mov
xchg
cwtl
mov
rolb
pushf
mov
out
cmp
xor
or
pushl
inc
xchg
xchg
mov
pushf
jle
jo
jno
jge
pop
les
mov
xor
stos
mov
mov
mov
aam
pop
push
mov
icebp
pop
mov
lcall
xlat
push
xchg
mov
lahf
out
stos
test
loopne
rcr
rcrb
mov
rcrl
test
insl
nop
inc
fstpt
jae
rclb
movsb
dec
test
loopne
fdivrl
sbbb
or
sub
cld
push
out
iret
lcall
cltd
push
push
xchg
fadd
addr16
cmpsb
dec
cmc
pop
dec
cmp
add
dec
adcb
movsl
iret
hlt
pop
in
rcll
es
stc
imul
repnz
scas
sbb
and
or
movsl
mov
cmpsl
popf
pushf
sbbb
xchg
mov
pop
movsl
sub
icebp
data16
stos
xlat
sub
out
repnz
repz
mov
push
insb
scas
push
inc
xchg
ja
test
sub
push
sbb
arpl
or
sub
or
in
mov
push
mov
xrelease
pop
les
pushf
inc
sahf
mov
push
leave
ljmp
dec
rclb
cmpsl
hlt
push
jmp
mov
jmp
orb
jecxz
imul
mov
in
pop
cli
mov
and
pop
popf
addr16
dec
adc
into
dec
and
ret
push
push
fldcw
aas
ds
push
mov
xor
popf
pushf
jae
lds
ret
xchg
mov
les
test
cmp
aad
mov
mov
push
jbe
pop
push
mov
fsubl
and
jl
sub
or
fcoml
or
dec
inc
sub
lcall
push
shlb
jle
int3
jge
push
inc
or
mov
lds
mov
cltd
in
mov
mov
push
pop
fildll
xchg
dec
jae
ret
stc
cmc
push
pop
inc
push
into
rorb
cltd
cli
fldcw
mov
xchg
les
mov
xor
push
popf
xchg
repz
pop
lods
adc
pop
imull
inc
push
xchg
fcomps
sub
pop
je
lea
mov
jl
bound
mov
movsl
test
push
lret
aas
movsl
shr
int3
rcr
sub
in
push
dec
inc
sub
push
push
or
repnz
hlt
add
insb
jl
in
adc
push
in
push
cltd
push
push
jle
mov
mov
gs
stos
or
popf
ficompl
les
and
jge
adc
jno
add
xor
dec
push
sub
add
pop
jnp
or
sbb
paddd
into
xchg
adcb
pop
pop
adc
jge
ret
in
nop
loope
scas
jae
fwait
leave
in
mov
ss
inc
pop
adc
push
int3
mov
pusha
scas
add
cmp
imul
mov
mov
xchg
fstpl
and
xchg
lock
inc
mov
push
jg
fcmovbe
rclb
pop
add
cmpsl
or
das
add
lock
fildll
cltd
mov
bound
sub
movsl
push
jbe
cmpsb
lahf
jge
nop
stos
bswap
lret
ljmp
pop
pop
imul
jl
xchg
push
pop
loop
mov
sahf
cs
xchg
sub
outsb
jl
aaa
push
lcall
or
sub
jo
scas
sub
stos
hlt
popf
mov
mov
sub
stos
hlt
cmp
outsb
fcmovnb
ret
sbb
or
xchg
shlb
push
pop
aam
pop
aad
loope
inc
xor
dec
mov
pop
push
pop
add
adcl
mov
ss
rclb
pop
ljmp
into
outsb
and
push
push
ss
sti
loop
push
movsb
shll
add
fdivrs
push
sub
repz
xchg
mov
cmp
add
and
je
inc
bound
outsb
rcll
add
add
dec
icebp
and
das
and
mov
das
mov
dec
adc
jb,pt
fildll
adcl
cmp
dec
rorb
ret
dec
shlb
cmpsb
outsl
xlat
rol
jge
sbb
pop
fdiv
inc
sahf
sub
in
test
add
push
sarl
sbb
sbb
inc
cmp
sub
sbb
sbb
sub
inc
insb
pop
test
cwtl
sbb
xchg
push
inc
insl
in
pop
push
imul
push
inc
lret
loope
addl
es
gs
and
sub
xchg
lret
push
xchg
mov
push
cwtl
add
lods
in
mov
lds
into
mov
out
cltd
adc
jge
je
rorl
dec
pop
mov
adc
jp
and
lret
outsb
jae
dec
pop
je
shll
loop
addr16
stc
push
insb
jbe
fldenv
cmpsl
inc
mov
pop
repz
in
icebp
cmp
jecxz
sti
out
adc
divps
lods
cmpsb
daa
inc
push
sti
jmp
xor
je
leave
cmp
ret
cmpb
insb
jnp
pushl
ljmp
add
clc
mov
jg
xor
inc
sbb
or
nop
aad
jmp
mov
jo
dec
fldcw
add
pop
dec
das
lds
xchg
in
cmp
insl
in
cmp
adc
mov
adc
aad
or
pop
xor
mov
mov
rorb
sub
stos
dec
adc
icebp
inc
adc
lcall
fcom
add
mov
hlt
mov
int3
subb
popf
jp
addb
insb
jne
mov
je
add
xchg
xchg
fstpt
sub
sbb
out
enter
xchg
leave
jmp
pop
cmpsb
mov
mov
fadds
adc
or
inc
inc
lcall
xlat
sbb
jo
cmp
lods
pop
shlb
inc
in
push
pop
fwait
lock
lcall
add
je
clc
test
test
cmpsb
lock
xor
aam
mov
int3
scas
pop
icebp
hlt
sti
div
add
out
xor
or
dec
pop
clc
add
add
iret
mov
leave
fwait
loop
sysret
pop
movsl
mov
iret
push
sahf
xorl
add
arpl
cmp
rcll
add
fwait
push
inc
adc
in
ror
fisttpll
ss
push
fs
cmp
imul
mov
dec
push
push
sub
and
mov
nop
xchg
movsl
or
shlb
xchg
jnp
dec
cmpsl
mov
js
cmp
pop
sbb
call
cmp
std
aam
dec
test
mov
jne
std
ja
test
dec
icebp
jp
aaa
mov
test
lock
mov
push
data16
hlt
mov
lahf
or
jbe,pn
cmpsl
push
add
jnp
test
in
mov
inc
mov
test
in
mov
xchg
ljmp
movsl
cmp
out
clc
inc
inc
push
mov
add
inc
sbb
int3
es
cmp
inc
aas
xchg
mov
adc
mov
jae
cmp
jbe
adc
hlt
jbe
jne
xor
push
push
insl
rorl
pop
cli
out
ds
int
jg
lea
aas
mov
or
repz
mov
cld
inc
sub
pop
arpl
push
fbld
jmp
cmp
fists
jbe
mov
and
or
inc
or
pop
loope
jecxz
subb
xor
popa
repnz
fistl
ret
sbb
cmpsl
xor
daa
es
add
leave
mov
test
add
inc
mov
mov
int3
push
jnp
ds
xor
inc
cmp
dec
in
xchg
imul
shlb
jmp
push
xchg
pop
popf
inc
das
popf
push
js
fisttpl
incb
sti
out
fs
mov
xchg
test
mov
sbb
test
jg
dec
stos
arpl
mov
test
dec
or
loope
jg
inc
test
sbb
cmpsb
into
add
cmp
or
aam
pop
add
in
frstor
out
pop
sbb
test
ret
iret
mov
test
test
popa
jne
das
lds
imul
fcoml
inc
inc
xchg
dec
jl
dec
int3
call
into
xlat
mov
mov
pop
jns
mov
sti
jecxz
pop
je
fucom
sub
push
mov
sbb
dec
sahf
scas
jo
dec
inc
mov
rcr
sub
jb
les
jae
dec
jl
sbb
add
mov
outsb
cmp
inc
movsb
sub
jge
add
or
leave
and
fcoml
rorl
dec
mov
xor
dec
ss
scas
js
out
or
daa
sbb
repnz
leave
mov
cltd
cmp
cmpl
je
inc
mov
push
mov
mov
aaa
popf
popa
or
testl
xchg
sbb
iret
mov
dec
cmp
js
dec
std
shlb
cmc
pushf
scas
and
sub
ss
stos
out
mov
jg
rolb
cmp
mov
test
xor
jae
sub
ja
and
popa
xchg
ljmp
imull
fidivs
xchg
and
in
dec
xchg
ficoms
push
dec
xor
mov
js
shll
lods
pushf
xor
sub
add
movsb
fdiv
push
call
inc
bound
adc
stos
lds
adc
ret
jl
gs
scas
lcall
pusha
mov
in
jg
jmp
xor
stc
and
push
adc
outsb
or
decb
rorl
pop
rcrb
faddl
xchg
pop
loope
int3
dec
cmpsb
xor
cmp
or
pusha
inc
scas
stos
or
out
loope
and
pop
sbb
fistps
pop
ss
pop
mov
aam
sbb
sub
sbb
imul
mov
jne
movsl
imulb
leave
add
sbb
sbb
fists
shl
out
lods
mov
out
out
jns
sub
cmpxchg
push
jbe
loope
leave
xor
sub
or
xchg
ret
add
push
mov
into
loop
inc
push
and
pushw
aad
push
insl
xor
shrb
and
mov
xchg
pop
adc
nop
xor
jp
test
inc
mov
scas
popa
movsb
and
enter
fldenv
push
xchg
cmp
push
sub
jnp
pop
xchg
sub
inc
xor
cmc
dec
mov
pop
jle
icebp
add
mov
cwtl
push
adc
stc
mov
jo
daa
cld
xorl
pop
not
lods
imul
and
xchg
pop
enter
jmp
cwtl
mov
push
adc
out
jno
sti
and
pop
inc
dec
repz
mov
mull
mov
adc
popf
sbb
inc
inc
sbb
mov
lea
mov
add
loopne
pop
fmuls
mov
fsincos
pop
in
pop
scas
dec
fsubl
out
add
dec
jecxz
adc
out
std
imul
cs
mov
shll
inc
jb
add
loopne
out
jbe
push
leave
and
xchg
add
xchg
dec
dec
adc
loope
cmpsl
mov
mov
push
mov
aad
dec
or
lahf
or
xchg
cmp
xor
test
repz
leave
or
dec
aas
mov
cltd
call
mov
mov
imul
push
decl
in
loop
lahf
nop
sub
mov
mov
out
cmpsb
sbb
lcall
or
mov
adc
sbb
dec
in
insb
aaa
inc
sarl
cmp
push
pop
jge
out
inc
push
jb
outsb
lahf
aaa
cs
push
or
dec
int
push
fxch
push
add
sbb
popa
sub
cmpsl
daa
push
sub
adcb
mov
aad
aam
mov
mov
imul
stos
sbb
stc
data16
push
loop
in
push
fs
ja
xor
int
cmpsb
int3
lahf
jne
arpl
mov
cld
dec
xor
jg
xlat
dec
cs
dec
fwait
in
movsb
dec
stc
lods
mov
sti
cmpsl
addb
mov
adc
or
fbstp
pop
sbb
or
cs
ja
mov
aas
ret
sbb
mov
ja
mov
push
adc
out
push
leave
mov
loope
jge
adc
shl
jg
pop
push
and
ret
jge
xchg
jg
aaa
mov
jmp
jg
leave
pushf
scas
ja
xchg
dec
sbb
roll
add
xor
scas
out
cmpsl
stc
fwait
in
inc
jle
xchg
lea
aam
ficoms
pop
jns
xor
popa
test
lret
ficomps
xchg
add
bound
rorb
ljmp
jmp
push
pop
xchg
add
addr16
ret
and
mov
shl
xchg
sub
sbb
sub
push
out
jbe
inc
dec
scas
jg
cli
mov
test
insb
incl
ds
jb
sub
shlb
les
popf
jnp
jo,pn
lret
xchg
jne
int
mov
push
pop
pop
jns
dec
cmpsb
pop
fldt
pushl
mov
sub
lods
push
cld
or
and
dec
pop
ror
dec
mov
mov
lahf
and
dec
push
inc
in
mov
or
push
mov
adc
negb
cli
outsl
cmp
in
or
cmc
mov
push
clc
aad
cmc
pop
jecxz
int3
jp
cli
push
xor
or
dec
xchg
enter
cmp
ss
sub
pop
mov
ds
xor
xchg
in
lds
mov
add
leave
insl
ret
test
jecxz
imul
daa
out
sub
lret
mov
and
insb
lock
andl
sbb
add
clc
sbb
into
mov
or
lret
jle
stc
loop
push
inc
push
sbb
mov
dec
jge
js
cmp
leave
stos
and
and
xor
xchg
lahf
aas
mov
add
stos
xchg
cli
dec
sub
in
sti
jb
or
inc
roll
push
insb
enter
popf
test
mov
mov
daa
mov
and
add
je
cwtl
xor
popf
xchg
pop
lcall
js
into
dec
inc
dec
in
jle
cmpsb
test
adc
push
or
push
addr16
jle
test
scas
xchg
adc
iret
mov
testb
dec
call
inc
mov
mov
mov
or
push
jns
dec
pop
shll
adc
cld
shrb
enter
cld
push
fs
fsts
mov
mov
push
nop
stc
popf
fsubs
or
push
test
outsl
add
repz
ds
loop
addr16
push
lahf
push
movsl
inc
aam
cwtl
jl
and
addr16
out
mov
sbb
aam
mov
outsb
mov
hlt
sub
jae
pop
sbb
neg
mov
dec
and
cwtl
or
pusha
hlt
ret
pop
cmp
scas
outsl
out
mov
dec
cwtl
sbb
dec
leave
pop
orb
mov
xchg
push
cli
add
test
push
shll
repz
addr16
or
aam
fidivl
inc
sbb
rcrb
add
pop
lock
stos
out
incl
cltd
dec
lods
jg
jo
jmp
push
aaa
imul
adc
gs
cmpsb
mov
imul
mov
stos
test
loope
and
fiaddl
xchg
shlb
insb
ds
lahf
cpuid
adc
or
scas
jge
lods
lret
pushf
lds
jno
aad
test
sahf
test
fstps
cwtl
dec
popa
mov
dec
test
push
stos
enter
push
lret
and
jb
mov
cli
adc
xchg
pop
mov
scas
inc
imul
pushf
outsb
and
dec
and
sahf
cmp
dec
mov
inc
jne
decl
dec
popf
ljmp
nop
insb
mov
jbe
push
xchg
inc
push
rorb
outsl
pop
mov
bnd
scas
cld
push
sbb
shr
out
dec
test
pop
movsb
dec
mov
add
push
mov
out
ljmp
adc
lds
xlat
adc
pop
call
adc
and
mov
mov
imul
icebp
and
jno
subl
lahf
das
xlat
inc
push
stc
jl
dec
addr16
add
jbe
cltd
jge
in
and
loopne
cmp
or
mov
test
lret
fidivl
into
push
js
test
aas
add
pusha
dec
ja
ffreep
mov
push
addr16
sbb
xchg
mov
in
and
xor
sbb
rcr
lods
lret
ret
fcoms
fbstp
xchg
jb
lods
pop
lret
stos
cmp
inc
mov
or
adc
sbb
enter
or
or
cmp
aaa
jl
mov
out
fidivs
pop
das
cmp
add
les
out
scas
mov
mov
jmp
insw
push
ficompl
jb
cmpsb
mov
pop
cld
orl
in
lods
roll
dec
arpl
sbb
add
aas
lahf
or
mov
aam
or
cmpsb
push
in
jno
mov
shll
test
mov
in
dec
sbb
jne
cmpsl
xchg
std
mov
movsl
ret
mov
xchg
inc
mov
pop
in
or
mov
dec
popf
aas
lahf
mov
or
add
mov
mov
out
push
std
cltd
adc
dec
imul
dec
ret
dec
jb
jge
sbb
mov
pop
mov
test
fs
enter
ret
scas
stos
lahf
sub
sub
ds
pop
das
xchg
xchg
es
or
pop
adc
idivb
outsb
repnz
in
mov
mov
movsl
inc
ret
cmpsl
scas
push
or
jp
xchg
mov
out
shlb
test
and
cmc
jle
inc
dec
or
jecxz
dec
push
clc
jmp
and
jno
daa
mov
push
mov
daa
int
popa
jbe
iret
push
xlat
mov
push
sbb
mov
int3
sbb
repnz
or
iret
pop
jo
sahf
or
sar
test
sbb
lret
xor
push
mov
cmp
push
popf
aaa
jne
xor
dec
test
and
cmp
cld
mov
mov
pop
fcoml
lret
jl
dec
push
xor
outsb
and
and
lods
addr16
jmp
je
ss
loope
add
loop
add
xchg
in
fucom
push
fwait
push
loop
dec
mov
sti
mov
sbb
addr16
insl
js
daa
stc
mov
bound
push
adc
sbb
jp
adc
pushf
out
mov
loop
lds
add
mov
mov
jg
int3
popa
sub
aaa
gs
cld
pusha
pop
xchg
cld
bound
inc
pop
lret
scas
shl
sub
in
and
mov
and
mov
jnp
pusha
je
out
in
stos
sbb
mov
das
in
xchg
cltd
fimuls
xor
add
les
mov
mov
leave
test
orl
mov
push
add
mov
mov
xchg
cmpsb
mov
cs
jbe
in
daa
ret
xchg
imul
push
inc
cmp
aaa
inc
gs
or
iret
repnz
data16
push
test
icebp
loop
ss
rcl
lds
aam
adc
jecxz
push
inc
andb
filds
add
xchg
mov
xchg
test
push
sbb
shrb
xchg
gs
mov
and
adc
adc
sub
scas
jmp
or
sub
outsl
inc
aad
dec
mov
dec
cmp
notb
sub
sbb
outsb
or
lods
fs
pop
cwtl
fnstenv
test
sbb
subb
xchg
movsl
pop
cmp
cmpsb
xchg
add
pop
cs
aaa
push
test
mov
sbb
loopne
dec
sub
ret
xor
aam
lret
and
fldl
dec
icebp
fiadds
popf
movsb
jecxz
je
fldenv
test
or
cmp
aam
out
repz
adc
out
js
lock
icebp
ficompl
aas
outsb
dec
mov
add
mov
repnz
fists
cmp
jns
popa
jp
into
cmp
xlat
lahf
mov
pushf
das
add
stos
xlat
dec
sbb
jecxz
push
test
rcl
fldl
push
push
dec
dec
sub
aam
loope
jnp
inc
inc
out
fbstp
mov
cltd
out
lcall
icebp
hlt
test
jns
arpl
jne
call
sub
xor
jle
fucomp
xchg
jns
and
xchg
gs
aam
inc
mov
mov
fdivrs
imul
test
mov
loopne
adc
cmp
and
stos
xorb
jle
cmc
push
push
es
xchg
inc
data16
jne
dec
xlat
sub
test
xchg
icebp
insl
mov
push
sarb
neg
jmp
adc
xor
ds
aad
sti
push
sub
hlt
inc
popa
xchg
lea
pop
sub
daa
mov
testl
insl
xor
and
push
xor
jmp
das
popa
stc
mov
push
outsl
imul
pop
jl
sahf
add
xor
lods
outsb
mov
sub
mull
adc
xchg
mov
sahf
jmp
les
push
mov
xchg
sub
dec
rolb
pop
push
cs
add
arpl
outsb
cmp
stc
mov
pop
or
pop
arpl
xchg
inc
jno
inc
lock
out
push
test
sub
ja
and
mov
cwtl
xlat
and
sbb
stos
mov
mov
fstps
das
sbb
adc
sub
or
in
sahf
scas
sbb
rcl
xor
push
mov
or
push
adc
sub
enter
push
mov
scas
imul
sti
clc
pop
movsb
xchg
out
dec
xor
clc
jb
cmovle
js
dec
mov
sub
cmp
in
push
loop
les
rclb
or
mov
dec
pop
jne
mov
mov
cmp
cmpsb
test
fldl
xchg
push
sbb
iret
stos
push
pop
or
inc
loop
les
les
sahf
adc
adc
or
mov
rorb
cld
stc
fisubrs
or
rolb
movsb
jno
sub
adc
pop
mov
mov
mov
adc
idivb
movsb
xchg
mov
push
roll
jns
bound
test
hlt
add
cmp
jns
cmp
shr
shll
cmpsb
cltd
xchg
dec
or
cwtl
lahf
std
dec
pop
jne
cmp
outsb
add
jb
pusha
xor
and
lods
jnp
stos
sbb
jne
cwtl
inc
cltd
xchg
in
in
sub
mov
lahf
aam
adc
jecxz
pop
dec
fnstsw
mov
jns
aad
idivl
popf
ret
sbb
fstpt
adc
test
dec
pop
lcall
add
mov
xchg
and
jg
pop
pop
mov
iret
inc
mov
push
xorl
cmp
aam
xchg
test
jg
outsl
and
clc
xor
subl
ror
push
inc
scas
ret
icebp
cmp
xchg
jp
cmp
adc
ret
push
pop
cmpsb
mov
aam
addr16
loop
addr16
cld
xchg
mov
adc
sti
mul
mov
lds
in
add
xchg
cmp
jae
inc
lods
cwtl
sub
rcr
add
pop
icebp
dec
mov
mov
pop
test
ret
mov
cli
pop
cmpsb
je
iret
jbe
pop
xchg
xchg
mov
sbb
je
sub
into
loope
iret
add
iret
xchg
nop
test
jl
imul
clc
bound
add
loop
push
test
es
pminub
pop
lods
push
cwtl
xor
sub
test
jp
cmp
or
sahf
data16
cltd
fcmovb
inc
stos
jmp
mov
add
or
aad
xchg
jno
mov
loope
push
nop
pop
test
pop
jecxz
mov
insl
shrb
cmp
mov
enter
jmp
orb
pop
xor
shlb
jl
comiss
mov
pop
mov
adc
pop
inc
nop
add
in
loopne
in
jns
outsl
popa
and
scas
mov
loop
adc
fucompp
rcl
ljmp
out
dec
cmp
out
lret
xchg
mov
jl
pusha
jns
out
dec
sub
and
dec
mov
mov
into
dec
repz
lret
pop
pushf
and
jb
push
js
jb
xchg
movsb
mov
hlt
pop
adc
add
test
stos
rcll
dec
fldt
mov
fmull
xchg
rcll
das
cli
sti
xchg
ja
repz
jbe
movsb
pushl
bnd
pop
xchg
cli
fdivl
adc
push
or
leave
sub
fiaddl
inc
inc
bound
mov
pushf
mov
add
ljmp
cmp
stc
mov
jno
es
pop
mov
fisubl
cmp
jge
out
fadds
sar
pusha
cmp
rcrb
addl
fwait
push
pop
mov
push
mov
insb
out
dec
dec
int
and
call
cmpsb
fucomp
das
rcll
andl
jge
pop
ja
loopne
hlt
or
ljmp
nop
in
adc
inc
push
and
mov
jp
call
rcrb
sbb
adc
cmp
sbb
inc
out
push
lds
cmpsl
jmp
and
out
push
shrb
jecxz
fcom
dec
outsb
xchg
dec
inc
mov
sbb
ja
mov
hlt
and
fisttps
rol
repnz
mov
test
jo
jne
call
int3
jns
loop
cmc
ret
mov
cltd
inc
subb
lret
xchg
adc
outsb
fsubl
cmp
sub
outsb
adcb
shlb
and
shlb
out
lahf
sub
add
lods
push
inc
dec
popa
in
sub
xlat
ret
faddl
fldl
cmp
cmp
or
ja
adc
dec
jmp
cmp
xchg
sub
mov
test
mov
cld
movsl
mov
xor
les
cmp
mov
jae
add
nop
popf
sub
adc
mov
rol
mov
insb
mov
aaa
out
inc
mov
in
pushf
loop
arpl
push
jl
sti
mov
mov
add
pop
jne
adc
fs
bound
outsl
shll
loope
movsl
mov
icebp
xor
mov
gs
repz
xor
jg
lahf
mov
and
sti
outsl
pushf
mov
imul
js
dec
xchg
iret
xchg
outsl
and
dec
cmp
cmp
cli
xor
sub
mov
jb
add
loop
or
sub
out
mov
movsl
xor
cmp
cwtl
ss
inc
aaa
dec
rorb
pop
aaa
fimuls
sub
lea
sti
sub
jecxz
in
lret
dec
fwait
and
fdivrs
jbe
imul
std
mov
mov
movsl
fcmovnb
andb
inc
xor
jne
cmp
push
mov
scas
pop
adc
jp
repz
es
sbb
arpl
xchg
loop
cmp
mov
hlt
pop
repz
push
sbb
movsl
and
mov
pop
sbb
sbb
or
push
jae
sub
pop
push
out
mov
jae
mov
jp
rcr
inc
xor
cmp
movsl
sub
pop
fwait
sbb
addb
mov
or
pop
inc
and
aaa
jne
mov
cmpsb
or
xchg
mov
mov
stos
and
movsb
mov
fcmovbe
add
data16
adc
mul
mov
into
add
add
outsl
ffreep
icebp
sub
jmp
test
push
jle
pop
inc
jnp
hlt
ret
andb
sbb
xchg
xor
dec
push
xchg
sbb
pusha
mov
or
ss
xchg
shll
and
into
imul
out
stos
jl
adc
pushf
fsubl
inc
push
fwait
leave
jle
int3
in
lods
mov
xchg
lahf
mov
dec
dec
pop
ret
adc
xchg
mov
push
pusha
xorb
push
hlt
cmc
xor
mov
popf
test
xor
cmp
jns
pop
loope
hlt
xor
push
cmp
inc
or
and
xchg
xor
inc
loopnew
cmp
sbb
xchg
mov
fsubs
fildll
push
push
lcall
jo
xor
lret
ss
xchg
sbbl
push
enter
out
out
dec
push
lds
int
push
shl
or
cmp
mov
cmp
popa
sub
mov
enter
in
jnp
xor
mov
sub
dec
xchg
push
mov
stos
fwait
movsl
imul
fsubs
adc
pop
jno
add
or
sbb
loop
clc
dec
ret
lods
fstpt
in
repz
fldcw
scas
in
jae
cmp
fidivl
aas
jl
pop
je
push
rclb
icebp
sbb
xor
rcrl
or
push
out
cmp
hlt
push
and
jge
movsl
mov
xchg
outsb
mov
and
mov
out
pop
adc
scas
outsb
arpl
mov
sahf
pusha
pop
flds
inc
popf
mov
lods
subb
mov
push
inc
mov
inc
sub
lds
scas
ret
push
adc
and
in
sbb
add
das
leave
into
add
das
and
pushf
jecxz
loope
push
xor
ljmp
aam
adc
ror
cli
mov
aam
sbb
cvtps2pi
mov
xchg
adc
fldenv
add
shlb
dec
sub
jne
sti
inc
or
dec
xchg
and
sbb
mov
ss
mov
add
jge
popa
sbb
mov
mov
inc
aaa
and
sub
mov
sub
sub
pop
insl
int
adcl
fs
lods
mov
std
dec
xlat
fstpt
xor
sbb
movsb
xchg
push
xchg
mov
add
sub
push
dec
cmpsl
adc
out
or
sbb
arpl
out
xchg
mov
xlat
dec
cmc
pop
out
imul
std
jle
sbb
dec
std
cmpsl
sbb
and
lods
pusha
aam
mov
mov
cmp
cmp
lds
iret
push
shrb
xchg
aam
cmp
sarl
ret
mov
mov
add
test
imul
add
pop
cmpsb
mov
es
sub
jne
cli
lods
mov
adc
insl
sub
lahf
sbb
xor
lods
or
movsl
daa
jno
fstps
push
cli
sbb
mov
rolb
movb
pushf
in
inc
movsl
stos
pop
loope
jbe
fisubs
jle
xchg
jmp
inc
inc
jmp
out
push
push
pop
xchg
and
pop
loopne
jl
jg
sub
in
leave
push
shl
sbb
popa
jne
jge
hlt
cmp
or
mov
adc
hlt
aas
stos
mov
xor
or
pop
shr
and
mov
sub
inc
adc
inc
je
cmp
dec
push
in
jnp
jns
js
push
mov
mov
mov
inc
outsb
sbb
push
push
jp
adc
out
loopne
mov
jnp
or
insl
aad
mov
hlt
movsb
and
repz
roll
mov
push
sbb
popf
sbb
pusha
test
sub
imul
xlat
mov
enter
stc
outsl
and
int3
shlb
movsb
mov
mov
out
mov
outsb
push
fwait
sub
cli
sub
imul
iret
dec
xlat
mov
loopne
mov
cwtl
xchg
outsb
outsl
or
mov
mov
pop
adc
pop
push
aas
inc
aaa
push
xlat
pusha
outsb
mov
in
dec
je
xchg
cmp
mov
inc
cmp
add
shl
mov
dec
or
push
cltd
into
mov
lods
repz
je
add
and
pop
jge
mov
and
mov
and
popf
cmc
push
and
push
push
ja
mov
pop
inc
fcmovnb
sbb
outsl
jp
sub
and
stc
and
xchg
add
adc
cld
inc
cmp
test
pop
in
inc
ret
outsl
ja
stos
fs
push
test
ficoml
rorb
push
push
push
repnz
imul
or
cmp
sbb
jae
push
xchg
mov
movsb
flds
rcrb
icebp
cmp
stos
xchg
das
ret
insb
cmpb
dec
dec
add
or
jo
into
pop
xor
or
xchg
dec
xchg
and
movsl
test
and
mov
movsl
incb
imul
mov
jmp
jle
aam
testl
das
in
cmpsl
mov
test
xchg
xchg
cmp
lret
xchg
sbb
lea
add
mov
test
stc
xchg
mov
clc
fidivl
sub
push
pop
addr16
test
cmp
loope
sbb
sahf
sub
cmp
test
out
cmpsb
inc
push
lock
lret
je
lcall
movsb
imul
or
jo
outsl
ja
andl
ds
sub
test
rcrb
popa
jo
loope
lock
test
inc
push
hlt
loope
dec
add
into
sub
aad
mov
xchg
pmaxsw
cmp
xchg
fldt
repnz
lock
outsb
arpl
jecxz
ss
scas
sti
scas
mov
xlat
dec
negl
sbb
mov
adc
or
js
insb
and
hlt
push
movb
movsl
inc
mov
mov
adc
jo
add
xchg
lock
stc
mov
int3
sahf
test
js
push
in
and
mov
test
arpl
cltd
jno
and
mov
ljmp
push
shlb
push
jl
or
mov
and
mov
or
movsb
cmp
xor
pop
inc
and
xor
jb
inc
pop
mov
leave
daa
leave
xchg
inc
lds
inc
fistpl
inc
lds
inc
mov
mov
jb
push
outsb
sub
test
popl
in
mov
test
push
movsb
dec
out
inc
lods
push
push
clc
rcrl
lods
test
mull
scas
orb
fadds
or
test
lds
cli
mov
pop
adc
inc
test
xchg
sti
adc
push
mov
mov
out
ret
mov
mov
dec
push
mov
pop
sub
push
and
pusha
fldcw
adc
int3
popa
aam
jb
dec
iret
jae
loop
mov
mov
es
shll
xor
push
sbb
sbb
add
out
xchg
imull
ljmp
add
jp
xor
lea
adc
sub
sub
dec
aas
fwait
stos
jp
mov
in
fisttps
cmc
sbb
test
add
or
xchg
fsubl
pusha
ja
mov
shlb
mov
popa
add
xlat
in
mov
or
cmp
addb
pop
pop
jp
sub
jecxz
aam
mov
or
jge
jne
nop
xor
jns
sub
popa
out
add
les
add
stc
fidivrs
pushf
xor
xchg
dec
sbb
ficomps
add
aad
dec
into
mov
push
jle
xor
sbb
gs
and
pop
mov
and
pop
test
hlt
pop
cwtl
xchg
sub
adc
negb
dec
dec
ja
or
iret
std
xchg
aaa
push
adc
sbb
call
es
adc
mov
shrb
and
and
jge
sub
imul
inc
stc
and
outsl
xchg
adc
add
mov
push
and
pop
pop
movsb
and
fldl
rcll
faddl
js
cltd
insb
push
sbb
jnp
xchg
pop
nop
ljmp
scas
pop
fisubrs
enter
outsb
mov
pop
xor
push
cwtl
inc
addr16
out
ja
lcall
lahf
in
test
das
add
test
push
lahf
pop
xchg
xchg
cmpsl
inc
mov
fists
cmp
cmp
mov
sbb
pop
mov
push
cmp
pusha
addl
sar
lods
dec
adc
in
insb
out
mov
mov
arpl
hlt
mov
xlat
test
adc
ljmp
pushf
mov
mov
push
mov
mov
movsb
and
into
push
test
sbb
sti
lock
imul
pushf
arpl
loop
dec
jns
or
iret
cwtl
inc
out
cwtl
hlt
xor
inc
mov
stos
dec
push
dec
or
lea
cmp
popf
cmpsl
or
jg
cmpxchg
negb
jmp
jb
cmp
jmp
in
dec
sbb
and
dec
jo
outsl
mov
push
push
out
sub
scas
cltd
aas
xor
int
push
xor
shlb
mov
xor
or
pop
in
pop
push
dec
push
pop
push
fsubrs
or
jl
and
and
jge
add
aam
jmp
mov
mov
fwait
xchg
pop
cld
cmpsl
push
test
and
aaa
scas
or
mov
jae
jle
je
push
mov
and
ret
mov
mov
outsl
iret
fs
jb
dec
leave
aam
cmpsl
jg
test
pop
pop
adc
dec
xchg
and
fnclex
lret
pop
add
dec
fadd
js
jo
repnz
cld
ljmp
call
mov
inc
xlat
pusha
fsubl
pop
pop
xchg
and
adc
int3
xor
push
repz
rclb
cld
fsubrs
pop
dec
cmp
in
popf
pushf
sub
jle
inc
jle
jnp
sub
inc
outsb
inc
add
sub
adc
mov
jno
xchg
lahf
fs
addl
adc
scas
cmc
add
jae
cmp
outsl
pop
xchg
xchg
xchg
cwtl
loopne
add
push
mov
in
mov
cmp
sub
cmp
and
stos
mov
pop
jle
jge
pop
pusha
mov
scas
cmpsl
xchg
xchg
add
push
fs
test
rol
sbb
push
dec
fldcw
and
add
pop
sbb
mov
push
push
cmp
dec
incb
push
in
mov
mov
out
test
ss
bound
sbb
dec
inc
dec
fs
mov
pusha
lea
dec
int3
jmp
push
outsb
int3
lock
lods
outsl
sub
test
lds
ret
push
pop
cwtl
add
lahf
data16
mov
sahf
jbe
jns
fdivl
mov
loopne
test
inc
dec
or
push
out
lods
pop
mov
testb
mov
or
je
pop
pop
fistl
jl
loope
or
adc
mov
jl
inc
xchg
or
in
add
push
loopne
fsubs
and
xchg
test
mov
rorb
dec
in
push
inc
movsl
mov
daa
mov
leave
gs
imul
push
js
ret
out
pushf
cmp
inc
iret
adc
addl
iret
jmp
sbb
dec
or
mov
pop
scas
push
pop
adc
sbb
mov
shll
lock
push
jecxz
jmp
dec
push
daa
dec
xor
jne
mov
and
bound
add
xor
and
cmp
scas
or
pop
or
lret
in
pop
pop
jnp
mov
out
xor
clc
test
dec
fstps
adc
movsb
mov
and
adc
xchg
imulb
fisttpll
xchg
and
stos
out
mov
les
push
push
sbb
addr16
out
jp
je
inc
daa
fcomi
stos
loope
lcall
pop
cmpsb
test
inc
mov
push
cmc
push
mov
popf
pusha
ds
push
stos
cltd
rep
jno
add
mov
xchg
loope
adc
jne
pop
xchg
mov
xor
and
js
xlat
aad
cmp
push
ja
outsb
aas
aad
out
pushw
test
mov
mov
cli
xchg
sub
sahf
and
mov
mov
lds
cld
mov
bt
pop
pop
sbb
test
nop
mov
jmp
sarl
int
inc
popa
pop
enter
fisttpl
pop
jge
orb
scas
jle
xchg
scas
inc
mov
mov
inc
xor
xor
cmc
lret
inc
fidivs
ficoml
out
mov
cmp
push
sbb
mov
sub
cmp
popf
cmp
incb
nop
mov
ja
fwait
or
xor
cmpsl
into
jle
in
in
lret
mov
std
push
inc
repz
add
sbb
inc
adc
fcmovbe
repnz
jnp
sub
xor
push
push
hlt
push
sbb
jl
je
dec
push
mov
xorb
cmp
lahf
lret
nop
inc
popa
pop
mov
loope
pop
push
add
and
je
xchg
imul
cwtd
push
rolb
scas
and
aaa
and
adc
xor
add
mov
repz
gs
cs
icebp
push
cltd
xchg
push
fsts
es
std
mov
sbb
or
push
and
daa
jge
inc
lods
push
dec
pop
pusha
jo
push
cwtl
sub
popa
dec
push
movsl
repz
fsubrl
xor
push
sbb
movsl
fldl
ja
mov
call
test
xor
imul
and
rcl
jbe
das
mov
movsb
sbb
jmp
or
fwait
xchg
or
sub
sarb
push
pop
and
arpl
inc
sarl
int
out
or
ret
loop
cmp
xor
add
jle
sbb
push
and
lods
pop
test
fwait
sub
in
push
repnz
xchg
sti
lods
jnp
into
mov
push
nop
imul
loop
pop
lret
ss
mov
inc
dec
mov
icebp
dec
or
popa
sub
sub
js
mov
jbe
jne
dec
dec
sub
clc
xchg
push
scas
sbb
pop
and
clc
xchg
stc
movsb
cmpb
ljmp
inc
shrl
cli
testl
dec
push
jecxz
xchg
cmp
inc
aad
into
xchg
cmc
sahf
data16
aad
pusha
inc
jno
aaa
pusha
dec
test
mov
cmpsl
stos
push
filds
clc
into
jae
dec
jg
jle
mov
mov
push
add
inc
loop
enter
pushf
adc
xor
pusha
push
mov
notb
cmp
bound
adc
leave
insl
and
int3
popf
mov
mov
popa
xchg
dec
enter
ljmp
mov
push
les
je
pop
std
out
jecxz
xchg
int3
bound
mov
aam
inc
inc
mov
aam
mov
sub
jle
or
mov
or
out
imul
pop
negb
xchg
loopne
mov
and
fisubs
sub
jne
xchg
ret
addr16
mov
addr16
sub
jg
pop
scas
push
mov
mov
sbb
xchg
xchg
xor
icebp
inc
aad
mov
loope
adc
mov
sbbb
cli
iret
pop
fld
out
out
ja
cmp
cmp
rorb
shr
xor
push
cmp
testb
lods
and
push
jnp
dec
mov
xchg
lods
push
xorl
rolb
outsb
lahf
inc
mov
out
cmp
sub
jb
push
adc
clc
adc
cmp
lock
out
dec
sub
shl
rclb
adc
push
addr16
outsl
roll
lea
jl
xchg
sbb
popa
notl
loope
daa
je
mov
rolb
xchg
fimull
fldenv
pop
test
mov
sti
jb
mov
inc
ret
scas
inc
imul
inc
lret
insb
sub
add
lods
mov
movsl
cmpsl
aas
add
xchg
js
sub
pop
lock
xor
popa
inc
insb
inc
loop
js
or
xchg
js
mov
push
call
mov
ficoms
pop
jb
pop
shl
ds
repz
daa
dec
add
xchg
sbb
jnp
sub
sahf
push
les
mov
pop
icebp
test
adc
mov
cmp
imul
movsb
xchg
stos
daa
xchg
lods
mov
add
pusha
outsb
lods
mov
pop
push
sbb
mov
pushf
loopne
and
jae
fs
test
ret
pop
stc
fwait
mov
cmpb
jge
sbb
adc
das
push
jmp
pop
or
add
jg
adc
or
sbb
xor
test
jmp
and
in
or
jb
cld
mov
insl
in
int
sbb
add
je
inc
mov
cmp
clc
sub
xor
push
fnstsw
mov
push
sbb
lea
or
test
adc
mov
xor
insb
mov
inc
inc
ja
xchg
mov
dec
into
outsl
jmp
nop
fisttps
loopne
or
mov
mov
mov
sahf
cli
cmp
aas
fisttpll
jge
xchg
aas
out
mov
sbb
insl
arpl
movsl
or
btr
or
and
jge
lret
in
push
mov
mov
cmp
sbb
cmp
inc
int3
test
mov
shrb
lret
sbb
and
insl
js
sahf
lret
inc
cmp
lahf
adc
or
daa
jb
adcb
shrb
push
xchg
push
or
jg
shlb
outsl
cmp
jo
mov
mov
dec
addl
loope
add
push
cmp
sti
inc
cmp
mov
mov
fisubl
cmp
lret
or
loopne
sbb
inc
adc
out
in
adc
pop
inc
loop
adc
pop
push
add
or
xchg
imul
dec
mov
mov
push
mov
je
xchg
xchg
and
add
add
sub
mov
orl
mov
mov
pop
inc
loop
mov
adc
mov
lret
test
mov
pop
push
movsl
por
dec
xchg
scas
mov
ss
jae
shl
jb
cmovae
jmp
pop
inc
mov
pushf
pop
insb
rorb
pop
daa
fbstp
rclb
imul
or
mov
movsl
inc
mov
sub
jns
xor
je
clc
fbld
push
ja
insb
loope
pop
shll
in
inc
xchg
mov
xchg
mov
mov
jnp
sbb
jg
xchg
mov
fstpl
incl
dec
sub
ficoms
pop
cmp
xchg
push
mov
rol
inc
push
cwtl
negl
xchg
push
fisttps
mov
cmp
fs
ss
xlat
sbb
inc
cmpsb
pop
cmp
add
movsb
pop
xor
cltd
mov
stos
lea
xchg
jge
lcall
cmpsb
jmp
call
jo
mov
or
push
test
xor
jmp
int
leave
push
xchg
inc
lahf
cld
sbb
add
cmp
cmc
jg
hlt
fcompp
std
cmpsb
test
loopne
pop
adc
cld
mov
jo
rclb
sarb
lock
ss
leave
xchg
ss
dec
jecxz
jns
cmc
xor
js
dec
test
push
divl
and
lahf
jns
push
addr16
in
rorb
adc
sti
jbe
inc
xor
and
push
mov
icebp
or
data16
xchg
pop
scas
sbb
stc
popf
jns
dec
les
inc
cmpsb
jle
out
clc
and
dec
inc
and
and
sub
stc
mov
mov
add
sub
cmp
or
test
xchg
add
push
dec
repnz
dec
push
mov
sahf
mov
or
lods
fbld
icebp
jp
and
mov
dec
mov
cli
or
ljmp
push
mov
testl
xor
cmp
aaa
sub
push
jne
scas
pop
mov
insl
movb
not
dec
cmp
xchg
dec
push
adc
jb
xor
cli
push
adc
out
sarl
lock
mul
dec
js
push
mov
sahf
in
mov
mov
mov
and
in
gs
int
roll
pop
inc
mov
mov
pop
sbb
inc
int3
fsub
cwtl
cmp
shlb
xor
imul
mov
icebp
js
daa
and
sbb
adc
scas
and
add
in
adc
jae
sub
mov
pop
rolb
test
sub
push
fs
push
fnstenv
mov
adc
pop
mov
and
loope
mov
cwtl
rclb
mov
jmp
dec
cli
stos
int
jmp
popl
dec
sub
inc
addr16
inc
xchg
dec
icebp
push
int3
mov
rcrb
jns
xchg
jno
test
out
sbb
dec
cmp
imul
push
mov
or
mov
in
or
pop
sub
push
clc
sbb
pop
mov
fisubrs
pop
out
test
repnz
cwtl
out
rcrb
test
jge
mov
cs
mov
and
sub
pusha
and
and
repz
and
push
and
lods
and
or
xchg
movsl
int3
lcall
aam
xchg
mov
or
mov
popf
mov
popf
pushf
in
cmc
mov
xchg
in
in
mov
sbb
push
jmp
loope
xchg
push
stc
test
add
scas
xlat
inc
cmpsb
pop
xorb
daa
dec
dec
dec
test
mov
jns
sub
arpl
mov
addr16
das
pop
test
shl
out
fildl
add
pushf
dec
sub
push
outsl
iret
mov
cmp
push
out
jbe
dec
stos
in
aam
lret
das
dec
sbb
lods
cmpsb
hlt
gs
sub
sub
inc
and
push
inc
mov
mov
push
mov
and
push
mov
out
into
pop
mov
int
xchg
mov
popf
mov
jmp
scas
pusha
inc
adc
mov
xor
jae
push
sbb
xor
add
out
xor
mov
sbb
xor
xchg
adc
fsub
jb
cmp
test
push
bound
lock
or
sbb
test
xchg
fdivs
sub
lret
sub
pop
mov
stos
pop
push
mov
jecxz
and
jbe
add
pop
pop
and
hlt
adc
arpl
pop
or
pusha
fs
pop
ret
xlat
push
lret
and
add
cmp
stos
aam
ljmp
dec
sbb
fcomps
fs
stc
mov
xchg
scas
lods
and
xchg
mov
movsl
inc
mov
push
pop
cltd
popa
add
in
aas
ret
inc
cmp
inc
cmc
push
lcall
inc
icebp
mov
adc
mov
mov
xchg
roll
sub
int
pop
or
bound
popa
jle
inc
cmp
and
fists
xchg
fmuls
mov
outsb
dec
jl
rorb
jmp
aas
popf
xchg
sbb
addb
ds
jg
jae
lods
adc
out
mov
in
sbb
pop
test
pop
stc
subl
jne
stc
mov
cmp
xchg
mov
int3
add
inc
jg
insb
icebp
repnz
pop
pop
and
dec
das
bound
mov
out
mov
xor
jno
in
aam
ret
inc
rorb
add
popa
jne
lret
shll
lods
add
loopne
cld
enter
pushl
xchg
push
outsb
gs
xchg
pop
mov
or
add
call
loope
dec
std
add
cmp
jl
jb
and
das
cld
mov
pop
leave
jns
inc
push
das
lcall
pop
push
push
into
dec
outsl
mov
repz
xlat
aad
jmp
rorb
and
sbb
push
xchg
pop
dec
test
imul
cltd
xchg
lcall
push
xor
popa
das
adc
imul
mov
pop
movsl
dec
loope
out
and
pop
js
or
imul
inc
ss
xchg
pop
jo
xchg
call
inc
loop
sbb
daa
aaa
test
aam
mov
into
outsl
pop
and
xor
loope
or
mov
mov
jne
mov
andl
cmc
pop
push
aam
sbb
push
mov
ja
add
cmp
insl
repz
pop
or
push
insb
idivb
loopne
inc
cmp
jbe
cmp
push
inc
pushf
std
jg
push
jmp
das
ret
das
mov
loopne
jecxz
stos
add
scas
movsb
pop
push
out
aaa
pop
outsb
rcl
stos
dec
dec
and
js
enter
dec
es
daa
or
dec
and
xor
ret
pop
loop
test
adc
in
ljmp
cmp
push
shlb
js
faddl
push
xor
iret
sbb
aad
or
and
dec
dec
lahf
pop
jge
lret
mov
xchg
clc
imulb
inc
gs
insl
cs
cwtl
fwait
push
lods
mov
jecxz
cmpsb
xchg
cmp
out
stos
js
insl
dec
cmp
xchg
adc
inc
and
cli
stos
das
popf
shrl
or
and
movsl
xor
adc
pop
scas
pop
push
jl
js
fsubrp
sub
fildl
xor
cmpsl
lods
dec
xchg
adc
fmull
xchg
loope
nop
xchg
push
je
pop
push
addr16
jl
mov
sti
pop
xor
ffreep
adc
in
pop
mov
jp
xor
push
lret
mov
scas
or
sbb
jl
roll
loope
jbe
jg
mov
nop
xchg
pop
push
or
mov
mov
aaa
cmp
adc
mov
data16
xchg
cmp
into
imul
insl
sti
shlb
inc
add
inc
pop
jno
lods
xchg
pop
cmc
mov
sbb
adc
jmp
ret
shl
int
jmp
call
adc
ror
mov
mov
pop
sub
push
jne
je
dec
jg
sti
leave
testl
push
test
and
adc
fcmovnu
push
fldt
mov
ret
iret
adc
fstps
aam
call
push
mov
add
adc
daa
cmp
repnz
aas
mov
cld
xchg
dec
cmp
out
and
jb
pop
jo
sub
add
or
add
add
jo
clc
mov
adc
test
xchg
mov
add
or
pop
fxch
mov
mov
cltd
fidivs
out
xchg
ret
xchg
mov
lods
dec
std
daa
mov
imul
pop
jmp
fpatan
rcll
sub
lds
ja
cwtl
jge
pop
aad
xor
das
sbb
or
cmp
fisubl
mov
out
cmpsl
jg
pop
sbb
push
stos
xchg
out
xor
xor
insl
pusha
inc
out
push
dec
outsb
adc
xchg
inc
mov
popa
sti
pop
nop
fmulp
inc
arpl
movsb
fisttps
xor
into
fnstenv
sbb
push
cmp
push
xchg
xor
cmp
dec
cltd
and
jp
movsl
mov
lahf
mov
adc
inc
loopne
in
ret
cmc
leave
pop
mov
fxch
inc
out
fisubl
push
and
and
jmp
mov
into
inc
lret
rcl
sbb
arpl
js
or
addl
les
and
inc
or
scas
test
xchg
cmc
pop
mov
ljmp
cmp
push
iret
xor
push
dec
sti
and
lock
leave
jg
dec
popa
dec
push
test
and
pop
sbb
inc
push
sbb
mov
fbstp
dec
in
in
das
xor
jmp
or
xchg
shrl
mov
mov
rol
adc
in
in
hlt
ds
lret
mov
adc
imul
or
xor
mov
lcall
dec
dec
movsb
dec
in
lahf
fdivrl
les
pop
pushf
sub
sub
es
test
imul
divb
jecxz
xchg
mov
jns
data16
sbb
xor
mov
xchg
mov
rcl
ficompl
leave
xchg
in
mov
xor
cmp
nop
movsb
jno
mov
ja
push
push
out
icebp
pop
fidivs
clc
push
xor
jle
leave
mov
fsubr
fucom
pop
mov
mov
sub
pop
lret
dec
mov
xchg
mov
or
and
nop
inc
pop
mov
jne
rcll
dec
ret
dec
arpl
add
pushl
pop
ja
xor
jmp
mov
lret
das
sub
jmp
mov
inc
push
xor
mov
and
imul
int3
out
shl
jp
lret
or
cli
shlb
pop
dec
loopne
mov
cmp
inc
mov
pop
subb
mov
sub
xchg
pop
fnstcw
popa
nop
adc
sub
nop
or
cmpsb
daa
js
repz
xchg
icebp
xchg
les
mov
jo
nop
lds
call
insl
imul
jg
inc
sub
or
ret
adc
enter
sti
test
fisubrl
pusha
mov
movsl
hlt
pop
adc
aaa
std
pop
sbb
orb
lods
mov
loop
add
cmpl
std
cmp
subb
dec
xchg
cmp
popf
push
cmp
loop
je
cmovl
js
loopne
lock
jle
outsb
jne
ret
sub
mov
adc
cmpsb
mov
jl
mov
push
or
add
jmp
movsl
dec
mov
mov
test
outsb
mov
fld
cmpsb
sbb
ss
mov
mov
pop
xchg
in
in
xchg
jbe
int
xlat
adc
int
call
cmpsl
jo
push
scas
or
aam
xor
or
or
mov
lcall
push
fsubs
stos
repz
les
push
lret
xor
aad
sbb
icebp
cltd
inc
push
ds
jb
loopne
fstps
imul
lret
int3
call
lret
or
aam
sti
dec
pop
dec
iret
xor
inc
dec
and
cmpsl
xchg
sti
lcall
add
pop
inc
dec
push
jmp
lods
movsb
cmc
cltd
pop
in
jge
jo
ja
mov
pushf
pop
insb
sub
gs
int3
cmp
sub
jne
adc
sbb
mov
xchg
ret
xchg
gs
mov
subb
les
or
inc
lods
arpl
mov
lahf
mov
mov
sub
into
pushl
fistl
test
jmp
int3
int
repnz
int3
clc
insb
sub
out
push
int3
mov
mov
sub
std
mov
pop
inc
push
orl
mov
outsb
mov
mov
jmp
cltd
lds
or
sub
movsb
rcll
cld
out
mov
aas
jle
insb
xorb
mov
addr16
sub
pop
mov
dec
loopne
int3
xor
mov
int3
cmpsb
sahf
jecxz
push
in
mov
dec
jnp
push
fisubs
sub
sbb
mov
or
sub
adc
sbb
test
aam
lret
outsl
adc
std
incb
xchg
cmpb
mov
call
aaa
cmp
mov
leave
nop/reserved
xchg
dec
lret
mov
xchg
add
leave
inc
mov
sarb
sub
add
aam
lcall
mov
sub
dec
cmpsb
mov
cltd
cltd
fs
sub
sub
popf
mov
mov
adc
and
push
push
test
fadd
ljmp
lea
inc
sbb
pop
jmp
sub
xchg
popa
cmpsb
jno
sub
xchg
jmp
push
fiadds
push
inc
lea
and
sub
shlb
push
xor
lock
mov
pop
lock
fdivr
xchg
jbe
mov
or
add
fdivl
sbb
insb
daa
ljmp
imul
imul
enter
mov
shl
aas
je
pop
xchg
xor
mov
mov
jecxz
xchg
add
or
adc
push
sarb
add
jne
or
pushf
add
jb
subb
xor
or
and
push
pop
push
mov
sub
in
cmc
ljmp
push
adc
push
sbbb
jmp
mov
pusha
cli
pop
stos
pop
sahf
jl
mov
fisubl
sti
push
cmp
rcl
in
outsb
out
jb
ds
sub
add
repnz
cmp
push
cmp
pop
pop
sarb
cmp
lret
je
fdivp
pop
xor
pop
adc
ss
outsb
hlt
insb
lock
insb
jmp
lahf
mov
and
cltd
sbb
ljmp
jb
pop
shrl
mov
cmpsb
in
cmp
fsub
das
sahf
insb
inc
push
xor
or
or
and
or
lcall
pop
call
std
cmc
adc
pop
stos
pop
add
icebp
aaa
xchg
out
dec
shll
clc
loop
mov
mov
lods
cs
xor
out
stc
stos
cmpsb
mov
dec
add
add
hlt
mov
or
test
fmul
mov
sbbb
dec
xor
scas
inc
dec
sub
adc
lret
dec
pop
in
data16
fldcw
sub
dec
scas
outsb
insl
out
ss
jle
decb
out
imul
jno
insl
cli
and
mov
lea
sarl
or
and
and
xchg
add
inc
xorl
flds
frstor
push
fistl
xchg
sub
pop
sub
loop
mov
mov
inc
test
pop
adc
dec
insb
push
mov
sbb
jmp
mov
lret
fnstsw
and
lods
test
push
dec
lcall
and
pop
xorb
adc
call
dec
into
ljmp
sub
xchg
je
iret
fs
std
pop
mov
sub
rcr
or
add
mov
push
sbb
sti
daa
iret
pandn
adc
xchg
xor
fsubl
ret
dec
mov
mov
imul
mov
xchg
enter
xor
add
popa
inc
push
push
xor
push
dec
frstor
test
sub
lret
aad
pop
lret
in
mov
mov
jmp
insb
mov
pusha
pop
dec
dec
jns
jae
je
sbb
aaa
cli
mov
test
ds
out
adc
push
pop
mov
pop
loope
or
xor
inc
pop
scas
mov
iret
xor
adc
xchg
xor
out
jl
adc
sti
jns
ja
jle
ss
dec
loop
dec
ror
ja
imul
test
mov
movsl
mov
or
pop
mov
xchg
mov
jb
and
and
outsb
js
mov
cmp
test
adc
or
mov
mov
push
or
into
mov
ja
push
mov
stc
push
xor
maxps
mov
pushl
and
lods
dec
push
addr16
push
popa
mov
xchg
push
dec
jmp
outsb
jo
stos
push
mov
or
xchg
sub
sub
in
test
fbstp
cmp
xchg
icebp
lahf
inc
mov
test
dec
mov
mov
push
cmp
xor
push
loop
test
dec
cmpsb
push
mov
xor
mov
add
adc
ja
dec
lret
inc
lret
dec
dec
mov
enter
push
mov
inc
cld
movsb
pop
cmp
rcll
aas
orps
out
mov
pop
shll
jnp
fcmovb
jmp
fsubrs
cmpl
cs
mov
bound
js
adc
insb
add
xor
jae
adc
dec
jmp
insl
arpl
sbb
aad
stos
inc
lea
dec
repnz
enter
inc
andb
stc
and
dec
push
mov
in
xor
stos
inc
cld
xchg
sarl
xor
mov
daa
xchg
into
sub
mov
pop
sub
push
jmp
insb
fidivl
fwait
push
xor
sti
stos
not
jno
fwait
jne
jg
mov
jmp
mov
push
int
mov
cwtl
aaa
out
sub
dec
mov
cltd
ss
mov
addr16
pop
jae
adcl
xor
jg
pop
dec
sub
sub
lods
sahf
pop
insb
ljmp
rcr
sub
fnstsw
rolb
shl
inc
aas
insl
rol
push
or
mov
test
in
and
pop
popa
fildll
pop
out
sub
jmp
dec
mov
stos
nop
rcrb
and
subb
jns
cmp
daa
push
adc
scas
jb
arpl
movsb
call
das
mov
dec
daa
insb
pusha
scas
cmpsl
xchg
jl
mov
test
add
ja
dec
dec
int3
out
je
jge
xchg
sbb
add
pop
repz
sub
dec
xor
shl
jbe
xchg
mov
test
mov
mov
and
jg,pn
jmp
xchg
cmp
dec
les
push
cmp
popa
int3
xor
aas
dec
orl
or
cld
jl
inc
ja
inc
arpl
xchg
adc
out
testl
and
aad
pop
adcb
adc
adc
lcall
mov
daa
dec
in
push
mov
xor
out
mov
test
cmp
xor
mov
icebp
in
mov
dec
repnz
out
pop
dec
es
jae
ljmp
inc
cmp
mov
jbe
repnz
pop
mov
jns
es
in
jne
pop
sbb
ret
out
jno
jnp
xchg
cwtl
jmp
mov
lds
sbb
mov
cld
gs
and
insl
clc
and
je
mov
inc
cmp
inc
xchg
pop
fdivs
jne
cltd
sub
lock
lods
outsl
pop
pop
sub
mov
aad
inc
xor
dec
xchg
sub
loop
fsubrp
push
mov
int
das
icebp
ss
jne
mov
push
mov
mov
ret
mov
out
mov
jnp
xchg
ja
adc
jb
mov
xlat
lods
mov
jge
push
adc
inc
ret
and
clc
popw
add
mov
frstpm(287
dec
hlt
dec
jo
push
in
add
sub
pop
stos
pop
inc
iret
sub
stos
jge
push
and
or
movsb
sbbb
push
fisttpl
ret
add
cld
fistpl
pop
jns
repz
pop
gs
jns
arpl
mov
xchg
adc
mov
in
push
jns
cmp
adc
mov
cmp
xchg
insl
lods
decb
xchg
stos
call
rcrl
gs
popf
inc
mov
mov
test
dec
int
add
notl
subl
sbb
xlat
in
sbb
adc
mov
jg
xor
mov
inc
mov
dec
mov
pop
jns
into
add
movsb
mov
leave
inc
lods
sub
cmp
aam
xchg
in
push
ret
xchg
outsl
mov
push
outsb
adc
adc
lds
dec
inc
cmp
fldenv
adc
mov
mov
cmp
pop
mov
dec
mov
ret
test
lcall
xchg
pop
je
lea
sbb
jo
sti
aam
cli
add
movsb
jge
loopne
mov
lods
lods
or
push
add
fsub
int3
inc
hlt
jle
push
das
adc
mov
pop
cmp
shll
mov
inc
pop
mov
popa
cwtl
aas
addl
aad
sub
push
adc
loope
jb
movsl
mov
xor
jno
movsb
repnz
mov
pushf
mov
test
hlt
stc
xor
out
pop
inc
insb
cmpb
mov
ret
pop
orl
dec
loop
add
lret
clc
mov
rcll
test
sti
mov
or
roll
mov
popf
or
fcoms
or
add
mov
jmp
cmpsl
push
sbb
inc
mov
sub
lods
movsb
push
fdivr
jge
mov
pop
inc
jmp
sbb
jnp
mov
sbb
std
hlt
dec
add
adc
mov
scas
jo
lods
and
in
push
test
mov
das
ret
leave
or
repnz
lock
or
jo
out
sbb
xchg
add
pop
in
aam
jl
iret
or
jl
scas
sbb
aam
aaa
and
fs
push
mov
xchg
pop
clc
mov
ret
fldcw
je
movsl
faddl
pop
inc
pop
jb
mov
loope
roll
loop
and
xchg
mov
xchg
xchg
xchg
mov
xchg
xor
add
shrb
mov
sub
and
push
mov
daa
hlt
loope
xlat
in
repz
imul
sbb
mov
gs
in
xlat
stc
je
test
rcrb
xor
mov
add
jne
mov
jecxz
lock
gs
out
mov
ja
in
add
pushf
cmp
push
xor
out
push
aaa
icebp
fs
js
cld
stos
push
mov
add
loope
pusha
and
and
orb
lods
popf
fs
outsb
stos
imul
lock
cmpsl
sbb
dec
dec
pop
fistpl
jno
repz
dec
push
and
jge
out
mov
bound
addb
mov
cltd
xchg
pop
mov
or
dec
jbe
or
add
mov
and
adc
adc
test
ljmp
cltd
cmp
iret
lret
jbe
fistpll
push
cli
mov
or
push
and
lea
mov
pusha
push
push
adc
pop
fdivrp
cmpb
in
mov
xchg
cmpsb
xchg
frstor
ljmp
pop
jno
repnz
inc
jne
sbbl
mov
stos
dec
sahf
mov
out
inc
pusha
and
push
dec
sbb
jge
popa
popa
jmp
pop
daa
into
inc
jo
repnz
cmp
xor
imulb
or
xchg
sub
and
sbb
test
or
out
pushaw
mov
xor
adc
xlat
xchg
cmp
ja
xorb
shll
cs
pop
xlat
mov
rcrl
jae
ja
test
imul
mov
mov
cmpsb
div
scas
add
and
xchg
jp
js
jnp
cs
adc
jns
test
inc
in
pop
loopne
pop
aaa
sub
testl
mov
xchg
jne
aaa
dec
popa
mov
fisttpll
xor
das
cmc
pushf
out
push
in
adc
xor
mov
mov
mov
cmp
jl
ret
and
arpl
lahf
add
xchg
out
ljmp
cmp
out
int3
xchg
cmp
mov
jp
mov
push
lock
push
mov
ds
insb
repnz
in
movl
mov
scas
cs
inc
ja
insb
or
mov
jnp
mov
mov
fistpl
mov
jg
call
xchg
cmc
pop
cmp
movl
add
mov
mov
in
push
int
lods
icebp
or
jnp
stos
sub
outsb
dec
cmp
fisubl
shll
jmp
stc
adc
fs
shll
outsb
cwtl
inc
fxtract
sbb
sub
ficompl
cli
mov
std
cltd
sarb
inc
push
inc
in
ret
pop
dec
xchg
outsb
and
sbb
and
lahf
fcomp
mov
repnz
mov
add
in
pop
movb
int
sbb
xchg
leave
ds
mov
lcall
imul
je
imulb
mull
outsb
mov
lds
push
sbb
loopne
clc
sbb
testl
push
dec
xor
xor
push
mov
arpl
loop
inc
not
fildl
ss
dec
js
lret
cmp
adc
in
cmpsl
push
lahf
or
lods
es
push
negl
jl
rorb
aad
jge
sub
xchg
lds
pop
mov
shll
and
ss
pop
push
sub
mov
repnz
fisttpl
push
xchg
sarb
push
mov
adc
xchg
xchg
and
add
mov
lret
out
push
jge
add
lock
pop
adc
dec
pop
mov
xchg
aas
push
fsubr
inc
daa
sub
into
push
dec
lods
shl
aad
imul
push
cld
push
push
aaa
lret
xchg
cmp
sbb
xor
mov
add
cld
add
dec
movsl
push
dec
or
out
enter
adc
or
adc
add
imul
es
and
pop
push
pop
cmp
je
aaa
xchg
push
pop
lret
or
adc
pop
xor
push
xchg
mov
or
stc
adc
pop
movsb
sub
icebp
push
leave
test
and
dec
addr16
in
ds
mov
into
mov
iret
xchg
loop
pop
inc
add
mov
sahf
scas
faddl
out
rcrl
xchg
mov
or
mov
sbb
loope
test
inc
jmp
adc
xchg
adc
pop
fucomip
out
add
adc
out
adc
sahf
adc
and
unpckhps
std
aam
popa
in
and
jg
xchg
add
jnp
jbe
xchg
push
mov
sub
cmpsl
fildl
cmpsb
cld
dec
inc
mov
or
add
daa
mov
xchg
dec
outsb
and
add
shll
mov
jg
jno
lahf
pop
aaa
mov
inc
in
mov
pushl
cmp
xchg
adc
je
pop
xchg
jno
push
dec
cmp
mov
fs
pop
sbb
pop
jge
into
inc
sbb
mov
mov
ret
nop
fdivrp
push
fdivr
push
sbb
bound
mov
mov
push
xchg
pusha
or
and
popa
mov
pop
dec
push
mov
jb
mov
lcall
out
push
inc
mov
fucom
sbb
add
xor
sahf
movsl
subb
inc
push
add
and
fildll
aam
ffreep
insl
inc
mov
dec
in
or
imul
in
xor
lds
dec
mov
shl
scas
sbb
lods
jle
pop
outsl
shlb
ret
imul
add
adc
fwait
mov
push
push
mov
shr
xlat
cs
stos
mov
sbb
jno
fidivrl
or
sub
scas
mov
dec
jae
add
adc
pusha
adc
andb
es
lock
shrl
in
cmp
insl
dec
cmpps
btc
mov
lret
sahf
mov
adc
shll
cld
sarb
mov
scas
push
in
cmpsb
nop
rcrl
out
push
push
mov
les
add
fists
ret
mov
fcompl
mov
cmp
add
int3
notb
cmp
out
push
lods
sbb
lahf
test
lret
test
loopne
xor
jo
inc
or
or
adc
mov
rolb
hlt
arpl
add
lods
stc
das
test
xor
xor
push
stos
xchg
sub
lds
sarl
lods
pop
ljmp
outsl
int
dec
sbb
and
jl
pushf
rcrb
aad
cwtl
ds
pop
out
test
leave
hlt
xchg
mov
insl
sub
bound
jg
mov
adc
pop
fbstp
sti
or
cmp
in
or
or
dec
lcall
and
adc
dec
jmp
int3
and
lret
out
cmc
insb
in
and
loopne
nop
mov
jo
fcmovu
stos
add
mov
das
xor
popa
and
shlb
fiaddl
clc
xchg
shl
add
push
cli
loope
aaa
pop
adc
jbe
fldenv
adc
xor
pusha
rorb
xchg
or
imul
inc
inc
mov
mov
cmc
push
test
out
je
sub
std
shl
mov
dec
xor
fwait
cmc
int
adc
cmp
js
xchg
pusha
jb
push
lret
xchg
icebp
in
sti
pop
in
jle
pop
cmpsl
in
shrl
pop
movsl
dec
loope
je
mov
out
mov
cli
pushf
ljmp
outsl
aad
dec
mov
dec
jo
subl
nop
addr16
fucomip
sbb
scas
ret
mov
shl
sbb
adc
mov
jbe
rcr
das
cmp
adc
xor
cmp
out
adc
cmp
push
mov
adc
adc
fisubrs
clc
jmp
or
mov
nop
ja
addl
inc
dec
jae
mov
aas
mov
aam
xor
setp
xchg
es
add
mov
mov
mov
push
mov
fidivs
int
adc
popf
into
and
pop
dec
add
nop
sti
jl
cmp
lret
int
movsb
xlat
mov
mov
xchg
shrl
xor
or
mov
push
mov
and
lods
push
xchg
nop
es
lea
sub
or
dec
inc
scas
es
or
lret
sub
cmp
sarb
mov
hlt
push
lahf
bsr
or
xchg
jge
cmpsl
sub
filds
addl
xor
test
stos
rclb
dec
out
mov
cmpsb
push
push
ficoml
mov
fucomip
mov
xchg
pop
xor
imul
pop
xor
cmpsb
cmp
jbe
push
loop
icebp
pop
mov
mov
mov
dec
repz
lods
imul
add
out
fsubrs
xchg
jo
jge
inc
or
dec
ret
repnz
push
sbb
and
lock
mov
int
idivb
and
mov
and
lret
sahf
inc
mov
xchg
lock
out
pop
int
dec
xchg
cmp
test
inc
fs
dec
dec
jg
xchg
or
mov
inc
jno
cltd
push
hlt
mov
testb
sub
cmpsl
mov
mov
cmp
inc
mov
push
mov
loopne
rorb
repz
lock
and
jmp
pop
lcallw
sahf
jle
insb
cmp
or
xchg
popf
jnp
addr16
sub
popa
popa
adc
loope
xchg
cmc
gs
xor
addb
mov
sub
and
and
dec
stos
sbb
rcrl
xchg
push
mov
inc
int3
add
jae
add
dec
adc
mov
and
std
sub
sub
in
mov
lcall
ret
dec
rol
adc
mov
fidivs
adc
in
xor
mov
xor
push
sub
jl
add
pop
xchg
pop
xor
fsubl
xchg
sub
add
int3
and
xor
fs
add
lret
mov
daa
arpl
mov
shr
inc
int3
lret
in
push
lds
inc
mov
add
es
lea
sbbb
push
repnz
repnz
in
scas
pop
in
stc
sub
out
mov
fs
rorb
push
clc
ja
lahf
stos
lods
sbb
adc
repnz
xchg
jmp
inc
push
jl
ja
fs
cmpsl
sbb
icebp
insb
stos
fbstp
js
lea
cs
arpl
rcrl
scas
pop
pop
das
repz
pusha
cwtl
adc
sub
stos
pop
or
mov
pop
std
xchg
dec
mov
ret
and
lods
pop
pop
jmp
in
mov
ret
jl
mov
into
fs
mov
mov
je
or
popa
adc
adc
mov
or
aam
and
ds
dec
cmp
sahf
jno
sbb
or
push
adc
in
push
rorl
and
aam
cmp
ljmp
pop
push
pushf
add
dec
or
add
dec
sub
pop
fstps
enter
je
repz
mov
mov
cwtl
scas
popa
inc
xor
mov
sbb
mov
and
sub
sub
push
mov
into
push
cld
sub
inc
daa
xchg
inc
outsl
into
mov
lret
scas
lods
fwait
cmp
ja
push
cld
aam
popf
push
inc
xchg
mov
out
cmp
push
dec
aad
mov
cmp
pop
pop
sbb
fs
std
jno
push
add
pop
hlt
push
clc
jle
data16
xchg
adc
mov
sub
in
rcr
mov
jg
jne
adc
mov
repz
xor
inc
orb
dec
xor
jmp
or
outsl
add
leave
cmp
fstps
inc
stos
sub
pop
jl
ret
push
mov
lds
and
jns
push
or
xor
mov
jae
aas
fcomi
clc
push
test
xor
jno
mov
mov
pop
push
xchg
leave
sbb
out
lahf
lods
popa
les
jecxz
mov
and
jo
sbb
test
add
ror
xchg
fisubl
mov
popa
fwait
js
xchg
pop
shl
adc
in
sbb
mov
pusha
sub
mov
int
mov
push
pop
pop
inc
xor
scas
lret
int3
lret
lea
mov
mov
push
orb
es
xorl
in
cmp
into
jns
decl
adc
jl
cmpsl
xchg
test
les
jg
inc
js
fsubp
fcompl
clc
mov
push
loopne
mov
ds
les
xor
fimuls
aaa
stos
add
jecxz
out
push
addr16
dec
pop
and
cs
in
mov
cwtl
test
filds
pop
lods
push
pop
cwtl
sub
fiaddl
scas
ficoml
mov
popa
addr16
in
push
mov
cmp
pop
enter
aaa
icebp
ja
mov
xchg
cwtl
clc
out
push
sub
mov
jl
cmp
dec
mov
sub
sbb
xchg
xchg
mov
pop
xor
hlt
je
jae
hlt
jnp
fsubrl
xchg
jae
xchg
push
xchg
add
outsb
loope
jl
sti
cli
negl
jl
and
sbb
pop
or
addl
adc
push
test
xchg
xor
fistpl
add
es
jbe
push
les
push
popa
aas
mov
xor
push
in
mov
mov
fcoml
repnz
test
sbb
les
push
push
popf
fsubs
and
mov
cmpsb
sbb
fsubrl
xor
cmpsl
insl
fisttpll
or
fs
outsl
pop
lds
mov
imul
int
cltd
cmp
enter
and
mov
xchg
lock
ds
int3
xchg
setl
into
or
shr
rolb
js
cli
adc
push
adc
in
cmc
fidivrs
jmp
xchg
out
rcrl
sub
jg
aaa
shrl
mov
cli
push
insb
ficompl
jp
pusha
mov
inc
mov
scas
dec
inc
loopne
mov
jno
xlat
std
adc
enter
movsb
and
xchg
out
cmp
push
lret
mov
pop
add
ja
pop
push
pop
mov
int
pop
and
negb
adc
or
add
lcall
sbb
adc
movsb
jle
dec
cmpsl
pop
mov
test
xor
das
stos
imul
stc
adc
jno
out
in
pusha
adc
les
scas
push
pushf
imul
mov
icebp
dec
insb
or
hlt
adc
imul
sub
enter
call
and
mov
mov
inc
ret
cmp
adc
push
stos
arpl
nop
pusha
jecxz
lods
sub
clc
insl
or
insb
mov
std
loope
add
inc
cmpsb
mov
and
cltd
lcall
mov
loope
mov
cmp
jle
and
int
xchg
cwtl
sbb
les
sub
int3
adc
jecxz
cmp
push
addr16
repz
enter
mov
je
push
jl
dec
aaa
xchg
movsb
xchg
xchg
cmp
cmpsb
push
fstps
imul
daa
out
lret
dec
cmp
mov
fildl
fdivs
push
shlb
and
in
and
test
sahf
pop
dec
add
fisubs
push
and
pop
ljmp
inc
into
jmp
or
push
mov
lcall
and
aas
mov
je
in
pop
fwait
cmp
fwait
adc
mov
into
aad
push
and
push
cmp
loop
sar
or
cmc
call
test
lock
sub
jb
mov
data16
push
cmp
mov
jp
test
add
pop
mov
mov
shlb
jg
jecxz
xor
xor
cltd
mov
add
enter
subl
movsl
ret
mov
rol
test
data16
add
aad
xor
movsl
jno
fistpl
lea
dec
mov
in
aam
in
pop
daa
imul
sbb
pusha
jb
jbe
lods
rcl
int3
cmp
jo
repnz
jne
repnz
add
xchg
je
loopne
and
jno
mov
out
sbb
insl
add
adc
out
or
jecxz
lcall
sub
sbb
pop
test
mov
adc
sarb
push
aad
scas
ret
adc
loop
or
iret
out
lcall
mov
xor
dec
data16
mov
out
lds
dec
or
xor
xlat
cs
nop
or
andl
jb
negl
ret
mov
and
popa
loope
and
mov
es
imul
add
jge
insb
js
jno
pop
out
je
adc
ret
push
sub
sbb
mov
adc
jnp
test
loopne
sub
sbb
hlt
or
popa
ret
daa
mov
push
sbb
or
sbbl
push
popa
mov
in
inc
test
pop
shrb
fsubrs
lcall
xor
xor
xchg
lds
popf
mov
push
push
inc
fistpl
popf
adc
xchg
ja
mov
fsts
jecxz
pop
jmp
push
jns
xchg
rclw
sti
xor
mul
shll
jnp
scas
pop
lahf
xlat
xlat
add
addr16
pusha
outsb
imul
adc
out
cmp
dec
loop
mov
mov
xchg
lcall
cmp
aaa
dec
mov
shlb
jmp
das
push
aam
cld
lods
sahf
iret
fwait
addr16
cmpsb
mov
pop
clc
testl
mov
data16
pop
push
xchg
loop
xchg
sahf
mov
push
daa
insb
inc
ss
cmp
sub
scas
cs
mov
into
jb,pn
inc
mov
das
dec
inc
in
iret
leave
sti
leave
push
pusha
rorb
dec
dec
stc
call
orl
mov
xor
std
add
jp
into
shll
notl
cmp
and
les
cwtl
lea
je
cli
int
outsl
xor
popa
pop
repz
sub
push
or
dec
das
sub
jo
testb
out
cmp
sub
clc
mov
cmp
push
mov
mov
and
xor
andb
push
cwtl
shr
icebp
xor
in
outsb
orb
stc
rorl
inc
jnp
jbe
mull
outsl
inc
aam
in
sbb
jbe
adcb
and
mov
xlat
cmpsb
push
xchg
div
push
loopne
jmp
and
loope
das
test
pop
popf
out
dec
jns
into
xor
pop
push
psubsw
scas
pop
loop
sbbb
mov
in
std
dec
pushf
adc
lods
add
mov
sub
cmc
xchg
sbb
cli
mov
mov
push
dec
mov
lret
insb
pop
mov
popa
je
push
pop
mov
outsl
cltd
les
or
adc
in
add
loope
lcall
movsl
lea
dec
jnp
sub
enter
push
ds
mov
lods
sub
or
inc
cmc
pushl
mov
jecxz
pop
std
and
adc
shrb
andl
xchg
test
mov
sbbl
scas
insb
hlt
push
jecxz
and
jl
mov
xor
mov
dec
repz
ljmp
mov
mov
jae
push
leave
inc
dec
ss
add
ret
lods
dec
sarl
or
shrb
adc
out
inc
rorl
and
pop
sub
cwtl
add
popf
pop
test
push
xchg
push
xchg
xor
push
add
addb
mov
movsb
mov
push
or
arpl
in
jnp
outsb
test
pop
outsb
mov
std
sar
mov
mov
ljmp
jbe
into
mov
cs
test
push
test
es
outsb
or
mov
dec
icebp
repz
add
sbb
inc
je
xchg
mov
pop
mov
movsb
mov
push
popa
pop
fisttpl
nop
xchg
or
cmc
jle
sbb
nop
bound
add
add
fs
and
sahf
xchg
jbe
repz
jg
add
push
fnstsw
rcll
cmp
lock
cltd
dec
sbb
mov
repnz
jne
sub
dec
adc
mov
fimull
clc
sbb
jecxz
push
mov
add
lcall
xor
enter
movsb
mov
adc
sbb
dec
or
jae
mov
dec
pop
xchg
pop
push
dec
add
mov
mov
sub
xchg
nop
sub
adc
lock
pop
out
popf
roll
mov
sarb
jl
ss
scas
jle
enter
sti
cs
lods
notb
inc
xor
sarb
hlt
stos
cli
shr
xor
or
insl
or
insb
scas
fs
pop
clc
cld
lcall
lds
mov
insb
stos
push
cmp
push
cmp
push
pusha
mov
rolb
int3
push
inc
clc
jle
popa
jecxz
sbb
add
cmp
xor
aaa
mov
jg
push
fbstp
xchg
mov
pop
stos
inc
notb
cmp
dec
inc
pop
sbb
adc
iret
scas
cltd
fldl
shufps
rorl
sub
xorb
scas
xchg
dec
sbb
mov
and
mov
add
jbe
ds
insb
sbb
pop
or
jns
inc
or
fldz
sbb
inc
lea
xlat
cmp
test
aas
cs
mov
adc
mov
sbb
cmc
imul
movsb
pop
out
and
fsubs
orl
pop
call
aaa
jecxz
in
cld
mov
dec
loopne
mov
int3
pop
push
or
sub
cmpsb
mov
enter
insl
pusha
gs
cmc
rcl
or
or
loopne
xchg
and
mov
mov
mov
les
cmp
adc
rolb
xchg
jb
xchg
sub
add
inc
sarl
cmp
inc
or
lea
xor
inc
dec
jecxz
aas
push
mov
fwait
add
pop
pop
mov
jnp
repnz
cmp
aad
lock
in
inc
mov
lret
movsb
jg
shr
xor
dec
add
inc
sbbb
add
jg
lods
aam
push
cli
scas
xchg
lahf
pause
jecxz
into
and
cli
jge
and
lcall
push
lret
ss
test
add
inc
cmpsb
insb
outsb
ret
gs
dec
push
or
inc
pop
adc
je
loop
imul
cmp
daa
sti
icebp
sbb
jge
jae
adc
or
cmp
add
xchg
cmp
mov
shll
xor
addb
sub
xor
or
mov
mov
xorl
ds
pop
sarw
loope
addr16
stos
mov
xchg
mov
jne
pop
push
xchg
stos
or
lds
imul
movsb
std
int3
andl
rclb
lea
inc
pusha
and
jo
pop
push
sub
fisubrl
mov
cmpsl
nop
das
jle
xchg
pushf
aam
je
mov
inc
fisubs
mov
mov
mov
lahf
shll
ljmp
fdivrs
mov
sti
cmp
fcomps
xchg
vmovaps
xor
inc
cmpsl
out
pop
movsl
int
sub
mov
jecxz
lret
enter
popa
insl
arpl
jg
shll
xchg
movsl
rorl
mov
cli
not
sub
adc
stos
add
cmpsl
bound
jp
stos
enter
aas
sbb
mov
int
mov
mov
mov
and
incl
sbb
outsl
xchg
andl
push
fs
push
and
sbb
jle
fwait
lock
int
lret
pop
and
jg
ds
sti
and
fidivs
std
scas
pop
mov
sub
mov
aad
fldl
std
into
cmpb
mov
xor
sahf
cld
mov
mov
xchg
cmp
sbb
jb
mov
cmp
sbb
jae
and
inc
jp
inc
int3
mov
imul
sbb
inc
rcrb
jne
or
pop
pop
in
sahf
fs
jb
add
sub
cmpsb
push
lcall
ret
out
cmpsl
rorb
test
adcb
push
or
fstp
int
inc
sbb
sub
test
outsb
xor
xor
pop
aam
inc
pop
hlt
cmp
iret
dec
stc
test
cmp
adc
inc
push
push
loop
mov
movsl
ds
insb
pop
cmpsb
int3
ficomps
inc
imul
outsl
ds
aam
mov
jl
rclb
iret
imul
mov
cmp
dec
push
out
fldenv
pop
mov
and
ds
xchg
test
lahf
sub
cmp
mull
int
scas
dec
ljmp
mov
sub
sub
sbb
hlt
jg
inc
popf
int3
fmuls
icebp
pop
dec
mov
faddl
out
cmp
and
jmp
repz
movsl
push
mov
mov
sbb
dec
in
add
adc
push
mov
inc
dec
mov
add
jmp
jb
jb
cmp
or
jo
scas
repz
shl
int
les
dec
scas
out
mov
into
pop
mov
push
cs
xor
mov
push
xor
jno
and
push
popa
push
cld
dec
daa
in
dec
pop
jmp
rcll
sahf
jmp
mov
dec
sti
mov
daa
or
jp
les
ds
xchg
test
adc
inc
sub
cltd
sbb
lret
bound
ja
and
cwtl
out
dec
filds
mov
sub
mov
mov
es
and
out
testl
dec
cltd
addr16
arpl
mov
insb
fwait
xchg
sub
mov
in
aas
es
jns
int
and
xorl
push
adc
jge
cmp
inc
fsts
mov
int3
mov
xor
jns
into
dec
and
bound
sub
xor
out
push
add
pop
jp
lea
stc
xchg
jo
fldt
aas
or
stos
mov
cmp
adc
xchg
aad
sti
out
repnz
xor
pop
sar
ffreep
cmp
in
inc
push
cmpsb
push
ret
mov
pop
je
cmpsl
sub
ljmp
icebp
push
daa
push
inc
or
sbb
and
mov
xor
dec
pusha
sub
push
inc
jb
pop
pop
xor
into
nop
pop
and
sbbb
jno
push
pop
or
adc
pop
add
lret
sti
les
repnz
dec
mov
movsl
cwtl
iret
lock
lods
or
jns
in
mov
sar
insb
sahf
xchg
mov
inc
das
ret
mov
add
mov
enter
mov
mov
out
mov
test
inc
push
fistl
push
lea
icebp
faddl
pop
ja
pusha
out
int3
mov
lret
cmp
mov
mov
fstpl
mov
xor
inc
rcrb
lods
mov
pop
xchg
leave
aam
loop
mov
repnz
cwtl
sbb
nop
or
subl
movsb
add
push
dec
xor
inc
cli
outsl
jmp
test
mov
aaa
push
mov
into
daa
jp
shlb
xorl
insl
mov
cmp
notb
or
xor
sbb
and
xor
inc
je
jle
dec
dec
xor
lods
jl
mov
sbb
sub
and
cwtl
mov
pop
dec
loope
movsl
repz
sahf
push
mov
inc
pop
or
jno
repnz
int3
mov
stc
or
test
xor
mov
lock
sbb
pop
scas
fwait
jns
pop
cmpsb
xchg
mov
cmp
dec
les
cli
dec
jbe
js
pop
adc
inc
icebp
sub
xchg
cmpb
subl
jl
xchg
fsubs
lds
xor
mov
cmp
push
nop
cmpsl
int
icebp
cmp
cmc
xor
cmp
pop
les
pusha
lahf
data16
or
mov
jns
cmpb
or
lcall
sbb
test
jae
jns
pop
pop
inc
cltd
cwtl
mov
mov
xor
test
xchg
das
hlt
jb
nop
mov
cmp
in
das
cmp
jg
adc
xchg
test
jmp
mov
fisttpll
stos
mov
inc
or
mov
movsb
mov
push
or
xchg
add
fsubrp
add
push
xor
cmp
test
icebp
shrb
fnstenv
jns
es
cmp
lret
insb
int
cmp
ss
lcall
fadds
jle
sub
inc
pop
ret
rorb
dec
jecxz
aaa
cmp
repnz
int3
sbb
mov
mov
xchg
movsb
cpuid
jae
dec
mov
dec
lds
push
inc
inc
sbb
notl
int3
into
insb
ljmp
mov
push
shlb
xor
mov
adcb
push
mov
jnp
cwtl
ds
cmp
jge
enter
xor
jle,pt
mov
jg
mov
mov
xor
sahf
xchg
fs
mov
ja
xchg
es
mov
mov
push
mov
jae
call
jns
enter
sub
std
adc
movsb
jb
or
jns
dec
test
pop
jae
inc
xchg
mov
pop
xchg
inc
jbe
push
subl
stos
or
push
pop
or
pop
fwait
scas
ja
adc
or
rcrb
das
outsb
mov
ret
lods
lahf
jge
inc
fldt
pop
mov
inc
add
xor
sub
repnz
or
mov
cmpsl
dec
mov
cmp
rorl
cmp
cwtl
cmp
popa
mov
sbb
push
int
xchg
sub
movsb
nop
pop
popa
fs
ficompl
or
cli
ja
jp
int
imul
pop
cli
data16
arpl
stc
in
add
stos
xchg
arpl
idivb
imul
xchg
inc
lods
setle
cli
aad
cmp
outsb
int3
mov
stos
mov
jbe
test
dec
addr16
scas
xchg
dec
push
out
add
or
lret
inc
dec
lahf
rol
sbb
add
jns
dec
outsb
insb
or
clc
mov
ficompl
test
hlt
sbb
jge
sbb
pop
gs
add
data16
repnz
push
push
nop
xchg
xor
mov
mov
or
mov
add
xor
jb
pop
xlat
pusha
scas
add
aaa
jae
cmp
cmp
mov
sub
push
mov
adc
mov
cwtl
fiaddl
xor
or
movsl
loop
clc
imul
or
std
or
in
push
popf
or
aaa
test
dec
ljmp
pop
lret
int3
dec
fwait
mov
pop
pop
mov
cltd
pop
cli
mov
popf
add
aad
mov
out
cld
lcall
les
pop
fidivrl
aaa
nop
enter
sbb
cli
minps
psubsw
shll
or
adc
cmp
inc
in
or
dec
loop
mov
out
mov
je
loop
push
sbb
out
mov
clc
xor
inc
sub
jno
sahf
dec
int
cmpsb
and
js
xchg
sbb
mov
insl
pop
pop
pop
stc
out
mov
pop
push
dec
or
sbb
and
cs
mov
shll
lods
in
dec
sub
adc
cld
stc
mov
pop
pop
pusha
aas
or
test
jg
jo
lea
jmp
shlb
sub
xchg
fistps
addr16
test
cmp
pop
std
decl
mov
sub
cmpsb
outsl
out
cwtl
int3
arpl
sbb
mov
cld
adc
sti
add
sbb
fstpt
jne
jp
js
les
add
mov
mov
loopne
je
out
mov
fs
mov
cmp
sbb
pop
aas
pop
jl
sub
inc
mov
rcll
sbb
popf
andb
mov
jb
mov
adc
pushf
in
mov
cltd
popf
sarb
sbb
jecxz
sbb
outsl
xchg
xchg
adc
aad
push
les
leave
cld
push
daa
aas
int
sub
jge
popa
jl
mov
and
jmp
scas
orl
lds
sbb
xor
addb
or
push
jle
xchg
dec
mov
loopne
out
addr16
add
cmpsl
mov
xchg
xchg
and
jne
cmc
lcall
xchg
or
or
out
mov
jl
and
mov
rorb
loope
and
pop
popa
push
dec
mov
icebp
push
movsl
push
mov
push
xchg
push
insb
inc
adc
jmp
add
xor
lret
imul
inc
outsb
shr
pop
mov
fldenv
xor
stos
fstps
inc
psubusw
test
jb
lahf
xchg
add
dec
mulb
cli
movb
sub
cli
add
cwtl
jb
fstps
subb
popf
xchg
ds
and
aad
push
popa
mov
and
pop
in
mov
inc
rorl
dec
cmp
insl
enter
or
sbb
pop
or
sub
push
xor
sub
loopne
or
mov
sti
push
fnstcw
aam
mov
sbb
dec
dec
sti
stc
push
fwait
and
push
frstor
fnstcw
repnz
pop
lds
and
push
dec
unpckhps
test
lahf
dec
push
inc
stos
popa
int3
int
mov
repz
loop
fsts
push
xor
pop
test
pop
or
jp
cmp
jmp
mov
mov
add
adc
clc
jmp
iret
insb
adc
movsl
pop
cmp
push
lods
jne
push
jge
lods
adc
lahf
arpl
add
mov
in
lods
rolb
loop
outsb
lret
cld
adc
xor
jb
test
cld
lahf
rclb
mov
cmpsl
hlt
push
jbe
jnp
test
iret
lods
stos
imul
mull
adc
push
push
pop
jnp
or
xor
je
subb
and
inc
push
inc
mov
mov
cmpsl
sbb
aas
jbe
jg
iret
and
jmp
xor
loop
inc
out
cmpsb
cmpl
jge
mov
add
and
lret
out
mov
push
pushf
mov
push
xchg
pop
adcl
loopne
and
aam
mov
mov
inc
cmp
inc
ja
xor
xor
and
pop
imul
sub
sub
cs
outsb
mov
fcom
inc
gs
loop
loopne
loop
enter
or
pop
test
iret
pop
mov
mov
sbb
outsb
mov
push
sarb
push
push
dec
rcll
push
loope
loopne
xchg
sbb
loop
int
and
fdivrs
and
sbb
ffreep
orl
out
sub
vmulss
xchg
std
ret
lods
orb
xchg
or
sub
scas
fisttps
inc
jge
jmp
mov
push
into
movsb
daa
jl
rcll
add
sub
mov
cmpsb
cwtl
ret
lret
bswap
sahf
orb
push
lods
leave
lods
es
movsb
aam
mov
outsl
mov
xlat
xchg
ja
pop
push
es
cmc
imul
xchg
in
es
cmp
fcmovnbe
pop
dec
xchg
mov
andl
pop
pop
adc
int
xor
adc
xchg
popa
xchg
xchg
aaa
xor
or
ds
and
int
fldl
out
xor
push
rorl
xchg
ret
jbe
out
das
dec
leave
and
mov
jo
call
inc
sub
fs
mov
dec
outsl
mov
cmpsl
dec
mov
push
and
mov
mov
minps
adcb
cli
scas
xchg
cmpsl
daa
cmp
ds
and
cmpb
push
fwait
jnp
das
test
addl
outsl
mov
xchg
jg
shlb
lock
popf
shrl
cltd
iret
mov
push
mov
in
loop
xchg
test
sub
jmp
sbb
sbb
notl
lea
mov
adc
leave
dec
imul
mov
push
add
ljmp
cmpl
adc
lcall
cli
sbb
in
movsl
adc
fprem
adc
mov
cmc
es
movsl
mov
mov
pop
mov
pop
movsb
or
jecxz
cli
inc
cwtl
jbe
pop
jl
pmuludq
int
repz
jb
sbb
je
js
sbb
pop
push
outsl
bound
enter
xchg
adc
jle
sahf
test
aam
stos
fidivl
lods
push
mov
es
push
fmull
xchg
loopne
pop
pop
pusha
add
adc
icebp
test
lret
shl
and
cmp
inc
mov
jg
orl
cmp
repz
xor
lds
cmp
data16
test
or
sbb
pop
int
arpl
inc
fiadds
int
insb
push
jns
loopne
and
mov
les
adc
pmaxub
enter
mov
cmc
popa
adc
inc
cmp
int
clc
inc
mov
fmul
sbbb
xor
sbb
jns
int
dec
pop
xor
mov
clc
pop
mov
jge
aam
ss
mov
push
fiadds
xor
movsb
sub
js
and
aas
insl
cmp
sub
adc
mov
or
in
mov
sub
mov
inc
sub
std
adc
std
pushf
sbb
mov
adc
push
imul
mov
xchg
cmp
int3
jns
xchg
pop
arpl
lods
push
jg
or
dec
xor
insl
mov
loopne
mov
imul
or
sbb
icebp
xlat
stos
idiv
push
sub
sarb
xchg
push
leave
scas
jle
mov
xchg
sbb
filds
add
mov
in
lea
add
mov
xchg
or
xor
sbb
fnsave
aad
mov
mul
xor
mov
fwait
pop
gs
lahf
add
addb
xor
pop
xor
xor
push
cmp
enter
outsl
dec
in
insb
sub
xchg
lods
cmp
es
cld
inc
notl
pop
mov
out
cmp
ficoms
adc
inc
loope
pop
loope
jo
pop
sub
mov
xchg
rcl
loope
movsl
fstl
or
hlt
repnz
xchg
in
ficoms
cmpsb
jge
stos
xchg
inc
jl
test
or
push
insl
sbb
hlt
xchg
pop
rcll
loope
fdivs
push
fisttps
iret
or
fwait
loop
jmp
dec
sbb
test
rorl
dec
mov
outsl
dec
mov
insl
jg
rorl
frstor
cmp
mov
inc
test
enter
fwait
inc
push
pushf
daa
sbb
paddw
and
mov
xor
jmp
mov
pop
xchg
or
movsb
repnz
lret
jno
sar
pop
jno
icebp
or
in
fdivrs
push
xor
jno
and
sbb
xor
les
into
mov
fwait
mov
sbb
cltd
or
fucomi
imul
adc
ret
add
aam
push
inc
into
test
icebp
sub
mov
arpl
mov
fmull
dec
jnp
xlat
push
rcl
pop
lods
inc
mov
push
inc
xor
adc
stos
imul
stos
into
enter
dec
lret
xchg
loopne
and
insl
jl
cmp
out
stos
cmp
in
push
inc
gs
fdivl
mov
fs
aam
sub
shl
mov
incl
xchg
add
jp
jno
fists
sbb
mov
pop
dec
mov
loope
inc
or
lret
sub
cli
out
inc
inc
mov
push
cmp
push
sahf
cmp
xor
lret
dec
xor
imul
and
adc
das
push
in
xchg
sbb
add
shl
arpl
mov
imull
cmovbe
data16
xchg
jle
xchg
push
and
cmc
mov
stos
out
xor
xor
xchg
push
mov
inc
sub
sbb
xchg
push
mov
jo
inc
inc
out
loop
add
aas
xor
adc
jns
push
loope
mov
movsl
cmpb
imul
pop
aam
or
ret
pop
pushf
lea
les
repnz
adc
stos
mov
outsb
mov
xchg
test
loope
xchg
stc
ljmp
pusha
mov
mov
iret
lcall
inc
pop
mov
lds
cltd
lahf
lock
lods
ret
xchg
dec
mov
je
push
in
cs
sahf
popf
das
mov
lock
ret
dec
nop
push
pushl
xchg
mov
pop
cmp
loopne
movsb
and
or
mov
mov
xchg
mov
add
xor
aam
mov
in
dec
roll
mov
adc
inc
pop
pop
pusha
sti
jnp
ljmp
sub
cli
aaa
mov
cmova
icebp
out
cmpsl
add
loopne
mov
push
and
mov
sub
xchg
adc
inc
fbstp
aaa
movsl
loopne
push
sub
adc
push
rorl
mov
fcomps
or
jbe
lcall
jecxz
and
aad
push
fstps
gs
and
subl
sti
outsl
sub
sbb
incl
fstps
or
punpckhdq
mov
sahf
cmc
lcall
ja
cli
fwait
push
lcall
loopne
inc
int
push
sub
pop
rep
jecxz
mov
sub
push
subb
sub
div
in
loop
addr16
pushf
push
lds
ss
cmp
fistpl
pushf
sub
or
mov
add
mov
push
pop
push
mov
ja
fildll
mov
jae
iret
imul
xlat
dec
inc
xchg
repz
incl
out
push
sub
dec
int3
cmc
inc
cmpsb
cmpsl
add
lods
aam
adc
fisubrs
fsubrs
sub
shl
out
lds
push
inc
and
and
bound
and
mov
xor
sub
lods
shl
in
jecxz
fadds
int
mov
xchg
lods
insl
call
imul
fmuls
stc
aam
jl
dec
fldl
sbb
xchg
cmp
insl
hlt
imul
and
dec
ret
dec
jp
jne
insb
and
and
test
cmp
sbb
idiv
jbe
fistl
jl
out
jge
popf
xlat
loope
out
ds
cltd
ret
push
or
das
add
ret
xchg
jno
mov
xlat
pop
jmp
mov
mov
insl
ljmp
mov
shl
lahf
pop
mov
sbb
repnz
incb
or
daa
push
pusha
ret
and
adc
dec
pop
insl
dec
test
add
mov
stos
lods
mov
orb
sub
push
lods
pop
jge
and
add
jb
out
push
sub
xchg
idivb
pop
xchg
out
sub
adc
mov
xlat
and
push
jno
dec
ss
sbb
jnp
je
sbb
fldl
xlat
rcr
into
fcomps
enter
push
inc
or
mov
lcall
arpl
push
cs
imul
mov
add
test
daa
cmpsb
rorl
fidivrl
data16
pop
push
mov
and
lods
xchg
scas
jne
lock
arpl
push
mov
push
mov
cmp
cmp
aad
jge
cld
mov
addr16
xor
pushf
push
leave
dec
or
les
cli
ss
inc
cld
mul
pop
std
cltd
and
iret
outsl
data16
push
mov
and
movsb
mov
in
cld
loopne
adc
inc
out
jg
into
xchg
jge
or
fmul
adc
loope
sub
sub
ret
xor
subl
jb
push
ss
repnz
pop
enter
loop
rolb
adc
sarb
xor
sbb
enter
dec
adc
test
pop
xchg
sub
cmpb
nop
mov
popf
mov
in
lahf
adc
insb
leave
xchg
daa
cmp
arpl
lds
inc
dec
rol
push
jnp
xchg
orl
mov
adc
pop
sub
scas
push
rcrl
push
jl
mov
lret
lds
sbb
sbb
pushf
jl
lds
jge
jmp
adc
inc
jbe
xor
cltd
rolb
aaa
jae
mov
sub
xor
into
xchg
xchg
imul
and
in
movsb
adc
in
jo
add
sbb
cmp
jno
xchg
cmp
add
insl
cmpsb
mov
jne
outsl
in
js
data16
pop
push
aaa
cmovs
and
mov
loope
inc
adc
imul
xchg
loopne
cmp
movsb
movsb
sbb
adc
sbbb
sbb
lods
cmp
push
pop
push
imul
lahf
dec
pop
sahf
fs
cli
mov
sbb
es
fisubrl
arpl
pusha
iret
jno
mov
repnz
imul
les
jne
sbb
popl
and
add
popf
jne
aam
adc
fistl
pushf
xor
mov
adc
imul
add
daa
leave
mov
or
cmp
push
mov
test
push
inc
inc
enter
adc
sbb
sub
inc
mov
xchg
repz
push
andb
jle
mov
out
lods
adc
add
push
imul
lret
lds
insl
addr16
scas
pop
mov
flds
enter
inc
gs
jno
inc
xchg
and
xchg
mov
ljmp
fldenv
pop
call
inc
adc
xor
ret
jae
test
outsl
jns
dec
daa
adc
adc
pop
and
pop
mov
or
mov
ds
ret
sub
movsl
lods
jnp
pop
scas
adc
les
sbb
sub
rcrb
fidivs
or
xchg
or
insl
sub
adc
and
stos
inc
shlb
mov
rcrb
xor
dec
xchg
mov
pop
fistpll
loopne
mov
and
jo
mov
repnz
sbb
clc
jae
mov
aaa
push
lea
jl
xchg
sbb
pusha
lahf
in
in
sub
pop
scas
mov
in
popa
stos
cs
insb
or
iret
mov
xchg
popf
test
call
jmp
cmp
push
movsl
test
jo
dec
fcmovne
push
xchg
push
fnstenv
insb
filds
inc
orb
stos
repz
shll
leave
stc
lds
in
stos
xlat
sbb
cmp
outsl
loop
addr16
mov
add
pop
dec
mov
iret
sub
mov
mov
and
sbb
push
mov
fisttpll
rolb
add
add
or
sbb
addr16
jecxz
sub
sub
dec
out
xor
push
or
icebp
push
out
mov
jnp
jge
or
and
sub
scas
mov
das
aam
add
mov
sbbb
pop
cmpsb
mov
loope
and
lahf
mov
ficomps
test
inc
cmp
out
les
clc
cmp
pop
inc
enter
cmp
xchg
iret
mov
movb
cs
out
pop
xor
out
xor
pop
cmp
icebp
imul
lds
in
inc
push
and
std
jge
add
cmpsl
pushf
mov
mov
pop
add
pop
cs
push
and
xor
mov
fists
insb
sbbl
das
shlb
inc
push
cmp
movsb
jg
mov
or
out
adc
inc
test
or
ret
jo
pop
popa
sbb
add
dec
and
lods
pop
rol
pop
in
sbb
notb
fstpl
ljmp
mov
pop
loopne
pop
jnp
adc
dec
cbtw
roll
jge
adc
mov
add
popa
adc
pusha
test
imul
xor
test
add
xchg
mov
or
mov
jno
xor
out
es
pop
xchg
jno
daa
pusha
aas
dec
push
mov
add
mov
ljmp
xchg
mov
inc
dec
hlt
jp
shl
pop
and
pop
sub
lods
outsb
roll
or
lds
push
daa
mov
es
sbb
sub
cmp
mov
out
adc
mov
mov
xor
insb
sub
mov
test
xor
aas
xchg
xchg
xor
adc
stc
in
fldenv
jbe
clc
sub
xchg
jae
lret
stos
and
cwtl
sub
popa
dec
cmp
je
das
out
insb
pusha
or
mov
loop
decl
xchg
incb
sbb
movsb
mov
dec
mov
ss
out
hlt
add
mov
cltd
in
insl
sbb
push
cmp
push
lahf
jb
jg
push
rorl
mov
jge
push
xchg
jmp
fmull
gs
adc
aas
adc
sbb
cltd
cmpsb
fimull
cmp
adc
popf
lret
sbb
into
mov
shrb
xor
pop
mov
xchg
add
aas
pop
pop
gs
mov
orl
and
xchg
cmpsb
xor
shrl
aaa
gs
test
inc
push
cmp
roll
pop
scas
inc
cmpsb
xchg
je
xchg
mov
lahf
loopne
cmpsl
mov
out
push
std
aaa
andl
or
insl
pop
js
in
dec
inc
repnz
add
cmc
int3
push
push
out
ja
mov
or
jns
ss
add
pop
inc
sahf
sbb
xor
xchg
arpl
jo
flds
popf
rcrb
jg
mov
cmpsl
jg
pop
push
nop
push
or
ljmp
jne
das
push
mov
adc
sub
cld
test
xchg
sub
gs
faddp
sbb
gs
fimull
xor
or
pop
cmpl
push
scas
add
std
or
daa
and
andl
mov
dec
cmp
sbb
pop
loopne
call
and
dec
mov
jle
mov
mov
into
adc
mov
movsb
testb
cmpl
cmpsb
push
stos
inc
stos
js
sbb
scas
jns
jnp
movsl
aam
lds
sbb
scas
xchg
leave
out
xlat
mov
xor
in
aam
cld
jge
pop
das
in
dec
in
fscale
iret
xor
cmp
push
ja
jecxz,pn
je
int
sbb
mov
arpl
rcrl
mov
jg
sbb
push
cmc
out
sub
xor
imul
push
test
add
loop
add
cltd
cwtl
or
aam
mov
imul
xor
outsl
dec
jp
cmp
cmp
mov
repz
aad
and
and
jb
dec
xchg
cwtl
test
out
pop
pop
imul
pusha
xor
daa
dec
mov
jmp
or
out
lcall
les
inc
nop
xchg
cmp
xor
and
shll
jmp
ret
clc
cmp
push
pop
shrl
xor
stos
mov
jp
mov
daa
lcall
mov
mov
bound
pop
or
les
sbb
scas
sbb
cmp
mov
sub
mov
or
mov
xchg
and
in
mov
pop
jnp
jmp
add
stos
pop
lret
push
and
js
jo
ss
or
lods
add
dec
aad
pop
out
jmp
popa
mov
add
pop
mov
mov
loop
xor
pop
sub
int
pop
outsl
sbb
daa
adc
nop
pusha
xchg
jl
jp
lret
xlat
push
or
inc
repnz
push
xchg
xchg
jns
mov
sub
in
dec
dec
out
in
aad
xchg
insb
mov
or
shlb
imul
test
add
sbb
pop
sbb
sti
or
popf
stos
push
test
xor
push
outsb
pop
pop
dec
inc
nop
add
xchg
push
lea
xor
scas
stc
imull
insb
inc
je
push
inc
adc
popf
test
mov
inc
jmp
jbe
xchg
fwait
shl
push
es
adc
xor
and
jnp
xor
andb
cmp
adc
and
out
adc
mov
orb
ja
jb
in
sub
lret
xchg
cld
rorl
das
jmp
aam
sbb
mov
mov
mov
fcompl
test
addb
pop
sbb
insb
dec
adc
pop
fwait
cltd
mov
aas
inc
mov
in
pop
add
jmp
addr16
xor
or
cmpsb
test
sub
aas
mov
xchg
adc
push
es
mov
dec
lds
enter
sbb
pop
pop
mov
sbb
sub
cli
push
bound
xchg
cmp
pop
xchg
icebp
jae
je
int
adc
add
xchg
cs
xchg
lock
repnz
popf
arpl
es
call
jo
sbb
push
lcall
pop
cmpsb
sub
mov
addr16
addb
push
fabs
sub
push
push
jle
fwait
lods
mov
xchg
xchg
sub
cmp
cmc
pop
leave
or
mov
sub
gs
in
sub
lcall
pop
in
dec
mov
or
lcall
rclb
dec
das
arpl
jmp
out
fs
xchg
xchg
dec
lods
loopne
mov
outsb
jne
ds
push
push
mov
nop
fdivr
cmpsl
jb
test
fstl
mov
jg
sbb
ljmp
inc
xchg
lock
psubq
mov
adc
gs
popa
add
rcrb
xchg
in
adc
jp
addr16
cmp
lock
mov
ds
sbbb
ja
nop
out
hlt
pop
bound
popf
sub
jb
pop
stos
xchg
mov
xchg
jmp
jle
jae
in
bound
das
inc
leave
sub
xchg
shll
out
push
les
push
ret
div
dec
pop
or
mov
movsl
les
shrl
xchg
xchg
jecxz
nop
rcrl
gs
sahf
addl
fwait
pop
xlat
push
and
sub
inc
cmp
js
add
and
mov
rcrl
mov
hlt
pop
popa
insb
mov
mov
inc
push
xchg
inc
sub
jmp
stos
push
add
lar
aaa
pop
hlt
jb
push
cmpsl
mov
js
inc
add
push
ret
sub
popl
ret
test
cmpsl
sub
adc
xlat
shlb
rolb
insb
inc
mov
lahf
in
xor
cmpl
loopne
nop
cld
jmp
mov
and
push
bound
mov
push
mov
arpl
cmpsb
scas
xor
fbstp
and
test
pop
imul
mov
push
pop
pushf
mov
cmp
cmp
ja
jg
loope
mov
add
inc
dec
or
xchg
roll
fmull
push
mov
xchg
sbbb
hlt
add
xor
outsb
sbb
pop
inc
push
loopne
sti
mulb
in
sbb
fdivs
fmull
repz
cmpsb
pushl
sbb
sbb
jns
xchg
xor
jnp
mov
jno
inc
repz
jle
addb
into
std
shlb
addb
pop
pop
push
xchg
sar
push
loopne
inc
nop
sbb
movsb
xchg
insb
loope
and
inc
dec
aaa
outsl
push
and
add
test
xor
into
jmp
sbb
stos
adc
insb
dec
jl
fs
movsb
inc
hlt
mov
outsl
mov
pushf
pop
aam
mulb
jae
outsl
inc
or
jno
in
popf
pop
mov
fisubs
inc
sti
pop
leavew
add
xor
inc
xor
add
xor
push
das
push
xchg
jecxz
hlt
rorl
sbb
xlat
push
cmp
mov
pop
pop
pushf
sub
xchg
inc
cli
out
mov
jl
hlt
ret
sbb
push
xchg
sti
cli
insb
mov
outsb
adc
mov
mov
add
insl
mov
in
jle
xchg
push
hlt
sbb
sbb
xor
in
stos
jb
loope
inc
mov
and
gs
bound
jne
shrl
popf
into
cmpsl
xchg
sti
dec
pop
lcall
in
fistpl
cmc
xchg
inc
xor
ljmp
xor
mov
jnp
outsl
aas
es
add
into
mov
mov
mov
pusha
out
sub
daa
test
add
hlt
fisubs
fiadds
push
outsl
mov
pop
jne
icebp
jmp
loope
inc
stc
neg
sbb
and
and
add
mov
lods
and
sub
lds
xor
sub
out
dec
or
shrl
scas
mov
decb
pop
icebp
test
push
cs
in
cmp
dec
cmp
mov
sub
mov
and
cmp
jp
cmp
mov
loop
scas
repz
pop
add
xchg
and
dec
and
lods
cmp
sbb
lods
xlat
cmpsl
sbb
loop
cmp
push
movsb
add
dec
cmp
addr16
repz
cs
sub
pop
lret
inc
lahf
xchg
insl
and
ret
stos
dec
push
mov
addr16
cwtl
repnz
xchg
xor
mov
jmp
push
inc
mov
xchg
fildll
or
sbb
push
and
shlb
ss
xor
in
movsl
out
repnz
mov
icebp
jle
mov
sub
call
xchg
fs
pop
mov
cli
nop
add
in
incb
xor
movsl
les
pop
ljmp
jmp
xchg
mov
loop
int
lcall
sub
aad
cmp
cmp
cmpsb
test
mov
in
fdivrl
mov
sti
dec
js
loope
fldt
cwtl
push
pop
xchg
cwtl
add
xchg
pop
shrb
adc
sbb
or
mov
inc
and
mov
pop
ja
nop
lret
rclb
mov
repnz
je
mov
mov
ds
mov
and
sub
popf
testb
mov
xlat
xor
dec
mov
cmpsl
mov
bound
push
arpl
sub
ret
in
pop
hlt
mov
pop
jmp
push
jbe
clc
xor
push
lods
inc
mov
pop
jne
sub
mov
arpl
push
xchg
cmp
cmovle
inc
sub
cmpsl
pop
imul
inc
fstl
xchg
sbb
mov
jnp
jmp
push
in
call
or
testl
daa
ljmp
addl
cwtl
cmp
xor
rcr
push
and
dec
data16
das
adc
and
mov
fwait
loop
adc
cmc
dec
xlat
xchg
xchg
movb
std
jmp
add
out
pop
mov
stos
ljmp
movsb
not
fs
stos
insb
pop
clc
jno
mov
fists
mov
sbb
xor
cmp
or
sbb
jno
test
or
dec
jg
mov
sbb
push
xor
lret
pop
ret
jnp
lcall
adc
ror
mov
bound
inc
das
cmp
ds
pop
mov
pusha
inc
xchg
sub
stos
mov
pop
lds
pusha
movsl
push
adc
push
dec
jecxz
mov
or
adc
push
popf
xchg
add
daa
movsl
shrl
cltd
testb
mov
sub
js
jmp
sahf
jne
insb
lea
xor
inc
repnz
aad
lods
ret
or
cmc
lds
push
pop
sbb
cmp
mov
mov
xor
sbb
xor
cld
jge
dec
flds
jle
scas
xchg
mov
fcmove
mov
in
jns
mov
dec
dec
pop
and
fadds
sub
data16
xor
icebp
movsb
and
in
push
xchg
call
stos
imul
sahf
int
stos
push
mov
ja
or
sti
or
sub
out
repnz
mov
push
push
or
in
insb
push
push
or
push
mov
push
popf
pop
sub
sbb
jl
cmp
jmp
lcall
sti
dec
ret
rcl
pop
xor
fildl
enter
cmp
loopne
push
add
fcoml
cmpsl
push
movsl
int3
shlb
movsb
imul
rcrb
loope
fstpt
pop
fdivrl
add
jno
push
addr16
inc
in
shlb
sbb
int3
add
lods
xchg
adc
dec
stos
adc
in
std
pop
and
stos
popa
test
test
fldl
dec
pop
int3
add
jle
les
mov
setno
adc
mov
scas
pop
adcl
adc
and
sub
xchg
sub
push
jp
mov
dec
pop
js
add
sbb
enter
xor
sahf
les
pop
out
mov
xor
dec
sub
lods
aad
sbb
xor
xor
push
dec
and
imul
sti
insl
xchg
loope
add
lea
imul
into
les
dec
and
mov
mov
jle
lock
insl
outsl
and
sbb
idivb
add
pop
movsb
scas
jl
shrl
mov
mov
shlb
in
roll
adc
movsl
xor
leave
mov
test
cmp
movsl
xchg
rcr
outsl
xchg
scas
xchg
mov
lret
push
add
testb
ret
pop
sub
push
and
outsl
add
pop
lods
mov
gs
out
jp
pop
cmpsl
xchg
jmp
xchg
mov
stc
insb
cmp
pop
xchg
in
clc
std
mov
push
xchg
xchg
insb
outsb
fwait
hlt
icebp
xchg
cwtl
cmp
push
ss
sbb
int3
shrl
xchg
adc
push
ret
adc
inc
dec
dec
scas
gs
nop
and
mov
cmovs
test
pop
mov
add
stos
push
add
out
pop
mov
cmpsl
adc
inc
repz
cmp
mov
test
bound
inc
sbb
mov
inc
fisttpll
mov
lock
or
in
sbb
pop
mov
pop
mov
jo
cmp
and
iret
cmp
sbb
movsb
je
ret
push
lret
ja
push
sub
in
fidivl
pop
in
cmp
cli
stc
push
push
jp
pop
or
pop
cs
jb
fwait
popa
cli
xor
stc
sbb
xchg
in
inc
shlb
jge
ja
flds
sbb
data16
cmp
ja
cli
mov
or
je
cmp
add
fldl
mov
lahf
cld
pop
xchg
loopne
andl
mov
flds
push
scas
mov
sbb
jno
fadds
inc
push
daa
test
xchg
outsl
pop
sub
xchg
pop
xor
mov
data16
mov
into
mov
push
cli
pusha
hlt
dec
mov
jo
mov
cli
das
inc
inc
test
cmp
popa
ljmp
inc
clc
adc
xchg
push
dec
dec
lret
frstor
cmc
cmp
aam
shll
ffree
xlat
in
add
add
sbb
iret
lods
lea
and
and
icebp
lahf
inc
adc
cmp
mov
and
cmp
mov
pop
jle
inc
jge
dec
xor
sbb
mov
rolb
or
push
mov
mov
mov
and
scas
mov
or
cmpl
mov
and
dec
loop
push
push
xor
xor
aad
scas
mov
paddusw
fnstenv
enter
or
jns
cli
pop
out
or
cltd
jmp
pushf
sub
and
mov
fucom
pop
in
add
mov
cmp
out
xchg
out
mov
sahf
fidivrl
test
pop
mov
int3
mov
jp
mov
data16
test
pop
mov
mov
mov
jecxz
dec
test
xor
cld
arpl
jae
mov
movsl
mov
adc
lahf
jl
lods
cmpsl
pop
mov
cmp
sbb
jg
xchg
mov
jp
stos
std
test
stos
mov
mov
loope
dec
dec
test
movsl
stc
pop
inc
mov
mul
mov
sahf
cld
mov
jne
add
jbe
push
loop
push
sub
sbb
sbb
sub
mov
pop
jge
lods
jecxz
mov
and
das
inc
insb
scas
or
fs
adc
scas
and
clc
jne
or
and
adc
sahf
ss
xlat
lahf
pop
xchg
loop
pushf
pop
cmpsl
mov
test
adcl
leave
iret
cld
or
lods
int3
jge
xor
mov
outsb
shlb
sbb
ficomps
push
add
xchg
xchg
pop
dec
pop
xor
push
dec
jo
cmp
jl
cmp
sub
mov
bound
sbb
ret
cmp
lcall
mov
inc
mov
add
in
jp
es
int3
loopne
ljmp
sub
loopne
test
sub
sbb
dec
add
mov
repnz
xor
cmp
mov
add
adc
lds
mov
dec
out
xor
arpl
pop
out
sub
pop
mov
or
fstpt
mov
mov
sub
pushf
and
xor
fildl
mov
jnp
push
inc
pop
sub
pop
or
leave
push
mov
psubsb
or
in
enter
aad
adc
ss
push
rorb
aaa
xchg
negl
sti
scas
jecxz
pop
cs
add
pop
push
mov
mov
subb
aad
pop
sub
hlt
jns
lock
stc
clc
cmp
je
pusha
dec
dec
pop
xchg
mov
mov
lds
mov
jle,pt
int3
pop
pop
pop
cwtl
lods
rorb
pop
jmp
subb
pop
cmp
pop
leave
shrb
das
mov
jae
and
push
insb
sub
mov
shlb
or
daa
xchg
push
iret
test
push
cmc
addr16
lds
adc
jecxz
push
lock
scas
fisttpll
inc
sub
sub
ja
sbb
jl
adc
or
mov
stc
sbb
push
mov
or
adc
ss
addr16
fisttpl
jns
dec
push
mov
and
mov
fwait
int
mov
xor
push
negb
ret
jns
lcall
dec
test
aaa
pop
in
es
mov
adc
add
xchg
or
pop
mov
mov
jle
xchg
and
sub
aas
cmp
ss
mov
fsubs
mov
xorl
add
mov
sbb
mov
jns
dec
xchg
imul
push
cwtl
sub
int
push
scas
fstpt
inc
daa
xor
mov
mov
push
lock
mov
cmp
cs
pop
or
or
imul
loopne
jae
mov
xor
mov
movsl
pop
mov
test
pop
ror
xor
xchg
mov
popf
dec
cmc
lods
sub
imul
mov
enter
outsb
pop
imul
fidivrs
les
push
mov
pop
xchg
add
nop
inc
push
outsb
mov
mov
pop
ret
out
js
jne
mov
in
pushf
pop
or
sbb
imul
in
call
dec
jmp
addb
fistpll
xor
push
jb
inc
dec
mov
jmp
push
insl
mov
add
xchg
in
jg
jmp
lods
mov
inc
inc
mov
aam
in
xchg
mov
sub
push
call
xchg
out
ret
add
mov
mov
addr16
enter
loopne
mov
xchg
movsb
cmp
cs
sbb
dec
insb
fdiv
hlt
cld
sub
and
ss
xchg
or
add
es
sub
scas
fnstcw
lret
cld
lret
jl
push
aaa
xor
mov
push
xchg
shl
in
jmp
mov
or
out
div
jecxz
xchg
cmc
sahf
mov
aas
ja
add
mov
push
pop
push
dec
mov
sbb
int3
push
push
push
mov
jle
and
fistpl
cwtl
xor
stos
and
mov
outsl
pop
xchg
in
add
and
xchg
lock
jmp
lcall
imul
incl
pop
xchg
or
sahf
jo
into
fwait
push
xchg
mov
dec
push
mov
call
mov
sbb
adc
outsb
inc
mov
jae
mov
or
lods
call
in
in
fdivrl
clc
pop
into
xor
jnp
or
mov
rcll
pushl
mov
out
ret
loope
adc
and
xchg
pop
jne
sub
sbbl
pop
dec
and
aam
push
cwtl
fcomp
sbb
popf
sub
cld
inc
pop
aad
test
mov
mov
bound
xchg
xor
and
imul
adc
aam
jne
cmp
push
icebp
testb
cld
push
xchg
jge
lret
pushf
and
mov
or
jecxz
nop
cmp
pop
jnp
jmp
arpl
fisttpl
orl
lock
dec
dec
jb
lret
jae
push
jmp
clc
call
cmc
xchg
icebp
sarb
pop
cmp
push
testl
lcall
leave
xchg
mov
adc
xorl
clc
inc
and
jmp
mul
aam
sbb
sbb
aas
or
inc
xor
cmp
mov
in
sub
ja
addr16
jmp
lcall
fwait
mov
insl
mov
add
call
sub
out
call
mov
jo
mov
rolb
pop
cmp
fwait
ret
jp
sarl
and
lret
add
jbe
call
mov
imul
decb
rcpps
mov
xchg
in
daa
dec
push
jle
imul
out
rorl
mov
or
sbb
jecxz
or
jmp
or
aas
push
cmp
aaa
out
mov
jmp
xor
pop
cmp
sbb
ds
lahf
cwtl
cmpsl
fs
jne
mov
movsl
mov
popf
push
data16
hlt
into
jbe
mov
xchg
in
scas
popa
push
rcl
add
xor
in
pop
lret
cmp
movsl
xor
ret
pusha
in
dec
xor
mov
outsl
rcr
pop
loope
adc
iret
dec
test
aas
out
xchg
inc
xchg
js
add
cld
popa
adcl
imul
je
clc
pushf
inc
lret
cmpsl
lea
fisubrl
int
shlb
jl
arpl
loopne
add
and
push
loope
into
inc
or
arpl
pop
sub
xor
mov
and
xchg
or
jge
inc
loopne
stos
shrb
mov
cmc
jne
dec
xor
fisttps
in
adc
sbb
adc
dec
mov
lods
xchg
ret
inc
xchg
adc
mov
popa
xor
dec
mov
insl
pop
in
pop
add
adc
dec
mov
roll
fisttps
cmp
icebp
push
dec
inc
adc
aad
cli
inc
insb
push
shl
inc
mov
scas
adc
jno
jge
push
push
jo
add
in
and
leave
push
mov
adc
pop
repnz
inc
or
add
jne
fcomps
int3
shrl
sbb
push
rcrl
cwtl
inc
xor
jne
inc
hlt
adc
pop
xchg
mov
push
xchg
out
out
cmp
xchg
mov
fcompl
mulb
int
mov
aam
push
mov
ret
mov
ja
cmp
sbb
inc
push
jge
imulb
cmp
sbb
arpl
int3
sbb
dec
cmpsl
xchg
sbbl
pop
jge
pushf
sub
or
lahf
addr16
outsl
les
mov
mov
dec
or
mov
inc
les
sbb
inc
pop
xorb
mov
lcall
pop
sti
pop
inc
xchg
es
sub
ret
stos
inc
or
jmp
lock
out
in
inc
outsb
pop
shl
push
mov
stos
ret
popf
pop
jno
rcrb
in
loop
sub
daa
and
mov
xor
lods
mov
mov
and
stc
cli
xchg
sbb
loope
cmpsl
xchg
outsl
cld
repnz
arpl
adc
jbe
cwtl
cli
out
mov
adc
mov
and
pop
cmc
inc
test
rolb
aaa
and
sbb
cld
jl
or
out
fists
repnz
and
cwtl
rol
xchg
movsb
push
mov
dec
mov
xor
pop
clc
cmp
xchg
int3
inc
lret
loopne
jo
sbb
mov
mov
cmpsb
inc
fisubrs
orl
mov
mov
mov
push
stos
jns
xchg
push
jns
bound
scas
mov
xchg
mov
outsb
sub
or
mov
popa
adc
sub
mov
clc
insl
movsb
adc
add
sub
clc
mov
jbe
jmp
add
push
sahf
daa
add
jae
filds
rol
nop
mov
push
mov
out
insb
lcall
or
push
xchg
and
adc
push
add
xor
subb
adc
rcrb
sub
add
mov
outsb
cmpl
cmp
iret
inc
jbe
inc
mov
outsl
mov
flds
and
push
jo
mov
mov
imul
imul
jge
push
jp
enter
imulb
jns
call
stos
dec
push
js
pop
mov
jo
outsl
mov
aad
jnp
dec
mov
push
jmp
int3
sub
mov
js
out
or
insl
xorl
pop
xchg
mov
lret
icebp
sbb
lock
js
loop
jl
out
arpl
rorb
mov
sub
push
push
xor
in
pop
inc
addr16
xchg
mov
sub
mov
ds
arpl
test
cltd
sub
dec
push
adc
add
add
cmp
push
pop
hlt
pop
enter
stos
push
je
inc
ret
and
sub
inc
stos
or
lret
aad
cld
movsb
xchg
je
in
dec
test
inc
dec
scas
inc
xchg
xchg
add
mov
jns
adc
jl
push
jns
popf
adc
push
in
jle
add
loop
shl
sub
fwait
pop
cmp
push
push
sub
sub
push
jne
mov
test
push
movsb
jl
mov
and
iret
jmp
push
pushf
or
cmp
sub
mov
ja
ja
cli
ljmp
jecxz
ja
outsb
int
aaa
mov
hlt
aam
and
xor
call
sub
bound
jne
int3
movsb
out
xor
loopne
sarb
cmp
movsl
lock
mov
sub
dec
mov
adc
dec
mov
into
pop
addl
lods
ret
orl
sub
pop
lret
add
xor
dec
push
push
push
push
push
fs
inc
cld
imul
sub
mull
sbb
xchg
out
mov
in
pop
mov
dec
mov
inc
pop
aad
lods
arpl
or
enter
popf
out
xor
aam
push
gs
imul
jae
push
js
pop
imul
dec
jnp
popa
cmp
xchg
xorb
pop
lcall
adc
mov
jg
sub
fidivs
push
cli
shl
iret
aam
xchg
out
push
fcmovne
lods
icebp
mov
test
mov
inc
cltd
loopne
push
push
int
inc
mov
das
sub
xchg
add
pop
add
jnp
cli
sahf
scas
js
sahf
and
stc
xor
jp
imul
lock
out
and
inc
lods
call
pop
pusha
fisttps
or
loope
mov
rcrl
add
mov
clc
sti
out
js
aad
lahf
fbld
or
es
testl
xor
or
rclb
jmp
mov
enter
les
shll
xchg
hlt
xchg
cmp
lods
or
xchg
imul
mov
jle
or
jnp
imul
adc
mov
pop
lret
fidivl
inc
xor
adc
mov
mov
xchg
repnz
push
daa
mov
pop
and
clc
adc
xchg
mov
mov
pop
pop
xchg
clc
mov
push
cmp
sub
rcl
sub
cmp
sbb
mov
daa
out
mov
push
pop
fadds
pop
subb
cmp
lahf
insl
cmc
push
push
xor
insl
out
lods
movsl
push
push
in
hlt
sbb
adc
and
mov
lods
push
jp
xchg
mov
fs
xor
ret
mov
pushf
push
imulb
mov
jno
paddq
jae
icebp
push
xchg
jns
adc
std
test
out
fwait
cmp
push
into
mov
dec
mov
das
jmp
or
hlt
dec
mov
mov
imul
in
sub
fldt
adc
adc
adc
dec
fnsave
in
sti
jge
or
jmp
nop
stos
xchg
ret
mov
inc
lock
fistpl
aad
push
adcl
ljmp
jmp
in
ljmp
hlt
je
andl
sarl
mov
xor
mov
cmpsl
mov
mov
push
mov
leave
jnp
mov
pop
xchg
mov
push
add
pop
ss
dec
sub
aam
mov
jo
adc
shrl
adc
pop
mov
mov
push
inc
sbb
pop
fldenv
clc
into
push
enter
lea
rorb
jmp
ja
add
xchg
arpl
loop
and
mov
push
jecxz
xor
icebp
orb
icebp
push
or
lea
inc
xchg
lcall
dec
ss
in
imul
lahf
loop
lret
je
cmp
dec
cmp
sub
pmullw
mov
xchg
fnstenv
shll
mov
cmpsl
pop
sub
adc
add
ljmp
cmp
and
cmc
fwait
rorl
shrb
outsl
js
adc
test
mov
fstpl
or
scas
mov
sbb
sub
out
lods
lods
jb
fsubrs
xor
mov
movsb
push
addb
arpl
es
mov
mov
pop
push
in
int
enter
adc
imul
push
gs
dec
inc
cmpxchg
push
popa
sbb
push
inc
jns
sub
test
mov
cmp
pop
bound
pop
scas
outsb
pop
das
inc
or
jge
loopne
cmp
adc
and
or
repz
icebp
xchg
push
dec
popf
test
inc
lcall
out
dec
or
mov
fadd
sub
and
adc
or
pop
cli
sbb
mov
push
js
fs
jle
test
adc
inc
add
shlb
lret
int3
push
mov
fisubrs
jmp
test
es
test
push
into
and
xchg
sub
cmp
jbe
repnz
and
or
jae
jp
loopne
mov
shl
or
loope
imul
out
inc
ss
dec
dec
mov
jb
xchg
jb
int3
sub
cmp
xchg
or
add
push
adc
stos
fldcw
add
mov
stos
shl
jno
jecxz
sbb
jb
and
jns
ret
mov
in
push
cmpsl
pusha
or
int3
ret
cmc
fldl
imul
jp
sbbb
out
loopne
sub
popf
movsl
dec
fwait
cld
sbb
movsb
stos
push
mov
xchg
repz
jo
subb
xchg
jl
pushf
and
mov
xor
inc
mov
or
hlt
mov
in
or
ss
cli
sbb
xchg
lcall
insl
repz
mov
or
xor
nop
xor
sbb
sarl
jo
scas
ds
js
sub
sbb
mov
mov
push
lcall
xor
jae
sbb
stos
mov
pop
add
add
movsb
sbb
lret
fsubrp
loop
insb
stc
shll
xchg
cmp
int3
imulb
cmp
sti
ljmp
jmp
js
and
or
mov
scas
or
je
mov
std
adc
xor
sti
mov
popl
sbb
jge
in
and
push
adc
sti
add
movsl
lret
scas
sub
sub
or
sub
xchg
sbb
sahf
jle
mov
and
inc
jle
and
js
xchg
mov
inc
cltd
and
xchg
mov
mov
push
pop
outsb
pop
arpl
push
push
push
sub
leave
and
pop
pop
test
in
dec
mov
or
mov
xor
mov
hlt
sbb
cmp
arpl
jae
imul
xlat
dec
outsl
sarl
and
xchg
pop
das
jge
cmp
jae
mov
inc
jb
inc
mov
into
popa
jae
sti
cmp
adc
cld
cwtl
fistl
je
sbb
jb
push
mov
push
dec
mov
mov
das
sub
repnz
adc
aad
adc
mov
lods
cmp
pop
or
lods
scas
nop
pop
xchg
idivl
mov
jecxz
cmp
pop
inc
mov
lret
pop
xchg
gs
cs
cmpsl
fidivrl
inc
pop
dec
sub
xchg
adc
gs
sarb
leave
outsl
or
adc
mov
mov
sti
repz
lea
ret
or
inc
inc
or
pop
in
lret
or
fwait
ret
xor
jg
in
outsl
add
mov
aad
fdivl
lret
mov
mov
sbb
cmp
push
mov
jg
call
das
adc
lods
lea
hlt
popa
and
and
ljmp
out
or
xor
lods
and
push
jno
repnz
pop
dec
js
je
shl
lahf
jne
sbb
rcrl
fwait
push
adc
push
scas
add
adc
cwtl
sbb
mov
pusha
lea
out
sbb
sbb
jnp,pt
xchg
repz
xchg
adc
push
fdivs
xor
adc
mov
lret
rorb
jns
stos
inc
subb
mov
cmp
or
test
cltd
faddl
repnz
dec
adc
outsb
and
lahf
cmp
mov
sub
push
sbb
inc
mov
jae
xchg
fstl
mov
test
mov
sbb
out
jnp
push
sub
jno
jl
mov
cmpsb
cwtl
dec
std
in
adc
mov
fwait
lods
test
daa
push
jecxz
mov
mov
jno
movsb
dec
insl
dec
gs
je
mov
ja
std
xchg
xchg
dec
jp
popf
repnz
mov
lds
dec
pslld
gs
xor
arpl
mov
out
imul
mov
pop
in
stos
mov
dec
jp
leave
xchg
jl
mov
jns
subb
pop
mov
pop
dec
mov
jne
mov
arpl
rorb
mov
movsl
pop
int
xchg
addr16
sbb
pop
scas
lds
and
enter
or
add
mov
call
int
inc
xchg
jnp
mov
lret
inc
rorl
sub
push
jns
add
mov
clc
imul
ficoml
xlat
jle
sahf
ret
jno
jns
jg
loop
xor
dec
jecxz
inc
jo
popf
pushf
push
push
incb
mov
cld
imul
inc
inc
mov
inc
pop
mov
cmc
cmc
sbb
lret
mov
scas
mov
dec
imul
xor
pop
or
icebp
scas
loop
in
xchg
push
xorb
mov
xchg
pop
or
jmp
out
testb
sbb
or
ret
or
or
les
add
les
mov
ja
adc
pop
mov
pop
mov
sqrtps
pop
imul
sbb
std
and
mov
adc
mov
mov
add
fidivs
jmp
mov
out
inc
lea
repz
and
loopne
dec
imul
push
in
aas
icebp
movsl
addl
stos
pop
sbb
loope
cmpsb
outsb
cltd
iret
inc
aad
sbb
dec
sub
dec
xor
xor
stc
js
xor
sbb
stc
mov
dec
xchg
dec
pop
mov
dec
xor
push
es
sub
jbe
dec
jb
aas
ljmp
mov
fmuls
lods
sbb
clc
push
mov
adc
lcall
xlat
outsl
insl
mov
and
xor
out
rcll
jae
dec
insb
push
jno
addr16
testl
cmp
sti
mov
push
push
jle
test
dec
push
rcll
push
stc
adc
sahf
push
lods
ds
push
add
dec
jnp
push
outsl
fdivl
push
add
imul
mov
outsb
inc
loope
mov
arpl
mov
xchg
aad
add
adc
fs
xlat
xor
pushf
cld
in
mov
and
fucomp
mov
pop
mov
lret
je
add
div
rolb
ja
out
fwait
jns
jne
mov
ja
addb
mov
push
fcmove
pushf
push
push
xchg
lcall
outsl
loope
nop
outsb
pop
mov
lret
inc
mov
mov
push
sti
lock
int3
enter
mov
adc
push
cltd
ficompl
jecxz
mov
ss
mov
and
out
adc
dec
cwtl
enter
test
data16
xchg
cmpsl
push
xor
sbb
movsb
rclb
in
test
stos
pusha
xchg
int
popa
jb
and
or
xchg
push
mov
cmp
into
mov
xchg
jbe
scas
enter
ret
push
inc
pop
sub
sti
mov
jo
mov
jae
add
lahf
rolb
sbb
pop
in
scas
and
stos
add
sub
es
loope
jnp
mov
sbb
add
je
sub
mov
cmp
sub
xlat
mov
mov
inc
popf
ds
jne
hlt
insb
xchg
lret
movsl
xlat
xchg
stos
mov
ret
jne
ljmp
popa
xor
fwait
xchg
mov
addr16
loope
scas
add
out
jle
iret
jl
sub
notb
stos
mov
add
fcmovu
cmp
arpl
cmp
cmpsl
or
insb
ret
and
jnp
je
enter
ljmp
pop
xchg
pop
lcall
les
sub
iret
add
mov
jbe
mov
push
mov
mov
in
mov
movsl
push
repnz
push
cmp
cmp
in
daa
mov
enter
stos
dec
dec
jnp
lcall
cs
xor
lock
push
add
enter
mov
push
adc
inc
icebp
add
repz
or
inc
lds
and
push
sub
and
mov
sbbb
lret
scas
cli
jge
orl
data16
dec
stos
xor
jns
mov
mov
repz
decl
inc
test
scas
mov
out
aas
lods
pop
nop
jo
pusha
int3
pop
mov
fcmovbe
push
sub
dec
push
mov
addr16
inc
and
xchg
pop
xor
and
insl
mov
fwait
icebp
add
int3
pop
data16
out
inc
mov
push
inc
ljmp
pop
push
adcl
outsl
jge
cld
pop
out
icebp
push
inc
mov
and
inc
adcb
adc
mov
sub
mov
cld
push
out
les
xor
lock
ret
jb
xor
mov
mov
jmp
mov
cmp
out
into
leave
xor
inc
mov
addl
jb
jle
pop
outsb
mov
insb
add
and
xchg
es
and
jg
and
popa
sub
arpl
dec
mov
pusha
insb
fadd
test
in
std
push
pusha
jne
lods
push
mov
aaa
push
sub
xchg
lahf
xchg
and
cmp
inc
add
jp
fisttps
sbb
int
pop
loopne
xchg
mov
xor
sti
xchg
mov
enter
fsubrs
lcall
popf
shrl
add
jne
mov
jno
loop
lret
cli
enter
inc
fdivrl
sub
test
pop
out
test
hlt
lods
mov
push
movb
xchg
xor
sub
adc
adc
push
and
out
push
pushf
mov
fstps
jecxz
inc
gs
xlat
xor
pushf
mov
out
cmc
mov
rorb
stos
aam
pop
jecxz
dec
dec
repnz
add
sub
inc
fmuls
push
sahf
in
mov
jae
loop
das
lcall
push
arpl
loope
pop
fmuls
jmp
rorb
add
add
and
les
or
lret
add
sub
bound
mov
cmpl
js
dec
out
mov
ljmp
arpl
jo
push
xchg
or
or
loope
jge
in
pusha
cmp
pop
insb
or
and
mov
test
clc
hlt
loopne
jo
movb
sahf
push
stos
add
dec
rcl
mov
push
sub
mov
jp
and
shll
cmp
inc
xchg
dec
pop
or
ljmp
mov
sbb
xchg
xchg
pusha
adc
mov
ja
dec
pushf
pushf
das
and
jg
dec
add
xchg
push
test
in
jns
sbb
mov
push
out
adcb
jl
sarb
icebp
mulb
call
xchg
inc
mov
jo
fsts
xor
cs
xchg
add
xchg
repz
in
aas
pop
popa
sahf
cmp
repnz
cmp
dec
or
jo
pop
lahf
mov
ljmp
or
adc
arpl
pop
sti
lcall
mov
sti
pop
fdivr
rol
pusha
cld
mov
test
sub
data16
inc
pop
cmp
jo
push
cmp
ljmp
mov
or
movsl
mov
jp
psubd
jecxz
int
pop
push
scas
les
imul
add
fs
stos
push
dec
out
adc
jge
cmc
enter
lret
incb
xor
xorl
rorb
icebp
enter
add
leave
inc
cmp
enter
jmp
fld1
ret
in
test
sub
cmpsl
inc
cmp
sbb
inc
and
inc
jne
daa
mov
xchg
js
leave
fs
shlb
fisttpll
repnz
xchg
ficompl
inc
or
cs
test
int3
test
sbb
dec
and
ljmp
jecxz
inc
aam
cmpsl
idivl
mov
sub
pop
pop
push
pop
add
dec
scas
xor
lods
mov
or
rorb
decb
test
js
push
int
pop
xchg
out
popa
jge
mov
lcall
push
addr16
dec
mov
fcmovnb
add
jb
cmpsb
stc
sbb
jmp
fs
jl
dec
pop
jne
stos
sbb
test
xchg
lds
sbbb
dec
adc
lds
jge
negl
fisubrs
neg
rcrl
mov
sti
adc
sub
cmp
dec
jae
lods
insl
lret
push
mov
inc
dec
cli
mov
inc
shrb
mov
aas
sub
movsb
data16
mov
in
pop
xchg
cmp
dec
arpl
inc
mov
sub
or
pop
and
ja
push
sbb
or
pop
cmpsb
enter
nop
sti
xor
xchg
adc
fsubs
and
jmp
push
lock
cmp
fdivl
mov
rcr
enter
xor
pop
daa
arpl
dec
pop
push
mov
pop
or
les
pop
les
xor
dec
jno
add
cmpsb
loope
cs
loop
and
xchg
cmp
in
scas
sbb
pop
add
pop
jle
stos
data16
loope
or
add
nop
stc
jb
xchg
iret
scas
scas
jb
mov
shll
jns
inc
call
pop
dec
add
out
mov
jo
fldenv
popf
pusha
xchg
inc
into
js
sbb
iret
jle
repnz
sbb
les
adcl
dec
out
insl
and
js
fistps
sbb
xor
fstpl
in
pop
shlb
sub
mov
js
imul
sbb
sub
rclb
and
cmp
jg
pop
jno
inc
fnstcw
scas
sbb
test
add
pop
cmp
sub
enter
mov
out
cmp
and
or
out
mov
inc
or
fcomp
push
fnstcw
stc
jge
rcll
dec
mov
idivl
xchg
faddl
in
out
lods
stos
mov
sbb
jg
dec
xor
xchg
loop
xchg
lods
nop
xchg
mov
and
xor
jmp
addr16
cs
inc
or
mov
repz
nop
into
or
push
pop
pushf
xchg
xchg
sub
popa
es
dec
inc
push
mov
das
and
mov
cwtl
or
mov
call
and
dec
shll
stos
adc
jp
xchg
inc
into
mov
jmp
cmp
and
push
mov
pop
adc
mov
mov
lods
movsl
jge
pop
mov
push
lret
mov
es
jl
and
pop
loop
mov
fbld
lea
ret
stos
push
add
push
xor
sti
stos
insb
fdivl
pushf
out
inc
fs
fildl
enter
cmc
popa
cmc
pop
ret
sarb
lods
inc
dec
rol
add
ds
adc
cmp
nop
je
ja
mov
mov
aam
xorl
cmp
data16
ret
insl
mov
mov
sti
shl
aad
rcrl
cmp
and
mov
mov
push
hlt
sbb
je
scas
adc
jb
and
ljmp
sbb
push
cs
fldenv
pop
add
dec
inc
mov
imul
xchg
cmp
push
sbb
movsl
rolb
xchg
cmpsl
dec
dec
mov
in
mov
imul
sub
cltd
jle
lret
or
or
movsl
sub
in
pop
push
lds
pop
movl
dec
aam
aaa
sti
lods
imul
or
insb
or
sub
mov
mov
icebp
popa
pop
ja
jae
jns
gs
stos
iret
out
bound
pop
adcl
inc
and
sbb
jns
cmp
mov
sbb
push
pop
xor
sub
adc
mov
gs
fwait
inc
jp
imul
lock
mov
data16
fsubl
xor
cmc
clc
icebp
adc
ss
dec
cmp
and
sub
push
and
adc
xor
push
lods
insl
push
inc
stc
add
sbb
lret
and
add
nop
pop
pop
test
adc
lods
dec
push
mov
sahf
rclb
cmp
xchg
xchg
mov
imul
inc
ret
repz
movsl
jno
or
mov
jle
mov
jno
popa
pop
iret
xlat
pop
jb
jae
popa
dec
add
push
push
cmpsl
mov
adc
loope
mov
outsl
loop
pop
inc
adc
bound
jl
in
jg
les
adc
ret
pop
cmpsl
test
mov
add
xchg
out
and
mov
push
pop
adc
daa
push
mov
outsl
or
mov
sub
xchg
lods
mov
lds
or
pushf
sti
lret
loop
add
ret
mov
pop
mov
mov
into
xchg
sub
cmp
xlat
rorl
mov
rclb
icebp
jbe
pop
mov
stos
mov
cli
xchg
push
jne
dec
ss
out
rep
cmp
in
cmp
cmpsl
repz
aaa
dec
stos
inc
inc
cmp
jnp
cwtl
dec
xor
shll
mov
daa
movsl
cli
dec
mov
mov
xchg
test
and
or
sub
stc
cwtl
add
xor
or
and
je
mov
out
push
xor
ljmp
popa
and
mov
ja
in
xchg
lods
jl
das
daa
dec
add
sahf
sub
lods
pop
into
stc
or
lds
sbb
fwait
lods
pusha
lret
popa
mov
inc
push
ds
cmpsb
adc
jns
cmp
cwtl
test
out
jnp
pop
js
push
js
xchg
jne
push
dec
gs
mov
adc
or
stos
loope
into
in
lods
ror
pop
mov
adc
lcall
pop
push
cmp
mov
movsl
mov
iret
jmp
cmp
insb
sub
fistps
movsl
popa
cmp
push
lods
add
inc
mov
out
push
fidivrl
ss
lods
mov
in
or
push
cmc
sbb
and
sbb
add
rolb
sti
jecxz
dec
mov
pop
adc
loop
inc
adc
rcrl
loope
cmp
pop
jg
pop
fs
inc
jl
xchg
pop
mov
add
fldl
jno
fistl
imul
push
jo
mov
or
inc
pop
fbstp
mull
cmc
loop
addr16
jp
daa
outsb
push
popa
adc
lret
loope
daa
test
add
in
cmc
ljmp
lahf
add
push
loopne
rorl
mov
inc
fiaddl
inc
xchg
jbe
sbb
loope
mov
adc
add
popf
push
test
daa
rcl
sarl
fs
adc
sub
cmpb
in
in
pop
out
dec
and
leave
sete
ds
lcall
push
sub
push
jp
pop
adc
xchg
cmpsb
inc
lahf
imul
inc
rclb
lods
mov
mov
fcoml
popl
dec
add
ljmp
mov
adc
mov
pop
xchg
inc
outsl
popa
adc
xlat
test
cwtl
imul
xchg
pop
scas
and
xor
xor
cli
dec
inc
idivl
loopne
jnp
jae
mov
pop
lods
or
stos
imul
popf
ret
and
popaw
loopne
stos
movsb
sbb
fstpt
or
sbb
pop
inc
cmp
pop
dec
pop
paddq
jb
jnp
lea
jmp
xor
mov
push
cmp
inc
lods
and
mov
mov
sub
xor
aad
adc
ficoms
jge
jl
int
cmp
or
cmp
and
cld
pop
out
jl
xchg
aaa
sahf
pop
ficoms
pop
je
jbe
mov
cld
mov
xchg
gs
out
cmp
clc
movsl
inc
mov
sbb
mov
sub
push
or
xchg
xchg
add
jp
sub
pushf
call
sbb
cmp
nop
sub
and
xor
bnd
mov
mov
imul
jb
add
pop
jbe
inc
imul
pop
out
dec
and
xor
cs
or
sub
pop
cmp
dec
in
pop
in
jecxz
test
fadds
adc
mov
or
lret
out
mov
ret
xchg
in
sti
mov
jmp
sbb
and
sbb
mov
pop
cmp
pop
pusha
js
sbb
stos
in
insb
jle
aas
xchg
inc
ret
mov
mov
lahf
imul
outsl
addr16
das
insb
lds
xor
mov
popa
lods
pushf
adc
push
mov
xor
sbb
mov
xlat
inc
pop
push
push
movsb
adc
addr16
adc
or
ja
jmp
pop
hlt
sbb
push
insl
pop
addr16
enter
pop
or
jmp
push
call
mov
int
and
imul
adc
sub
ds
inc
std
insb
sbb
xchg
sti
mov
jecxz
enter
orb
aas
fsubs
stos
mov
insb
xor
and
push
fwait
or
mov
cmp
and
andb
fdivs
or
mov
dec
add
test
arpl
subl
mov
dec
mov
jns
adc
aaa
js
cli
add
lods
mul
xchg
rcrb
mov
ret
sahf
les
in
ljmp
inc
xchg
lcall
push
in
test
aam
pop
mov
scas
cmp
insb
imul
sub
mov
xchg
incb
subb
jl
fistl
push
call
cli
lahf
cmpb
push
std
xor
sti
loopne
sbb
data16
iret
push
dec
dec
xor
jbe
cltd
std
cmpsl
jmp
mov
fucomi
fcoms
pop
jg
movsl
loopne
dec
inc
push
movsb
push
outsb
rcrl
jo
iret
pusha
inc
sbb
add
adc
mov
and
pop
dec
xchg
mov
out
cmp
shr
or
inc
out
or
addr16
jae
je
cld
cli
sbb
or
ret
outsl
jo
inc
cmpxchg8b
into
shlb
dec
mov
mov
push
mov
ret
xor
fld
lret
rcr
js
icebp
jb
into
push
cmpsl
cmc
add
out
or
icebp
mov
and
inc
or
ljmp
movsb
cmp
sub
shlb
in
or
mov
ds
outsb
aaa
out
jb
add
mov
negl
rclb
js
add
mov
cmc
mov
add
jmp
sub
fisttpl
mov
cmp
test
decl
jp
cmp
popl
in
lret
repnz
in
outsb
sbb
fdivrs
cld
or
push
jno
repnz
mov
fs
mov
imul
sub
loopne
mov
or
pop
mov
inc
push
lods
imul
push
jle
lret
xchg
dec
jl
push
scas
mov
imul
cmp
nop
cmpsl
adcl
data16
inc
mov
xor
icebp
mov
fisubrl
xor
xor
adc
loopne
flds
cmp
mov
ds
popa
sub
pop
jnp
scas
cmp
popa
shl
xchg
das
pop
dec
es
pop
in
lahf
inc
aad
lret
nop
sti
imul
push
js
sub
pop
enter
cltd
jge
bound
xor
int3
int3
cs
mov
pushf
insb
pop
scas
push
pop
pop
js
push
mov
shlb
addr16
add
subb
push
fidivrl
mov
jb
add
or
test
out
jecxz
loopne
cwtl
xchg
testb
inc
add
pop
mov
stc
repz
smsw
daa
cmp
push
sub
xor
mul
and
sahf
inc
je
pop
sti
xor
test
xchg
psrld
cmpsl
sbb
in
dec
xchg
scas
or
imul
jl
mov
jne
push
jle
mov
cmp
or
mov
mov
or
mov
ja
fisttpll
cmpsb
inc
mov
inc
iret
sbb
aam
in
jl
cwtl
outsb
mov
and
push
add
subl
inc
mov
cmp
incb
jbe
outsb
packsswb
push
je
cwtl
insb
scas
leave
xchg
xor
mov
int3
stos
clc
int3
push
pop
pop
mov
push
mov
adcb
ds
ljmp
fstl
lea
pop
sub
dec
jl
jae,pn
or
add
or
negl
icebp
xchg
dec
add
addb
mov
sbb
cmp
adc
lods
mov
push
lcall
fisubl
aam
xor
loope
cmp
fimuls
int3
data16
fsubs
cmp
enter
mov
aaa
in
push
adc
mov
xchg
and
lea
push
xor
jns
stc
pop
into
mov
mov
pop
mov
add
fwait
ja
clc
add
pop
cmpsl
lcall
inc
jg
inc
and
pop
iret
add
shrl
in
push
jecxz,pn
out
mov
push
js
jns
mov
cmpsb
pop
dec
push
mov
mov
ljmp
popf
sbb
stos
and
iret
sub
test
scas
in
repnz
fldl
inc
pop
cwtl
out
lahf
fstpl
cmp
dec
pop
add
insl
cmp
jb
pusha
mov
push
ds
int3
fisttpl
xlat
mov
loop
ret
jge
sarb
pop
jmp
sub
mov
fisttpl
cmp
testb
jnp
hlt
pushf
push
repz
cmp
sub
leave
pop
sbb
mov
fdivl
pusha
xor
sbb
adcb
mov
sbb
add
xor
or
scas
mov
clc
int
cmpb
mov
jns
bound
mov
dec
and
cmp
push
pop
jl
mov
fdivrl
push
or
mov
adc
mov
int3
loopne
adc
aam
jecxz
mov
sbb
lods
std
out
sbb
xchg
mov
inc
mov
bound
fldcw
or
cmp
inc
cmp
icebp
sbb
add
sbb
pop
cmp
push
out
out
nop
pushf
xchg
or
insl
pop
add
pop
xchg
dec
es
mov
push
mov
pushf
sbb
mov
in
mov
and
cwtl
xor
imul
repnz
sbb
outsb
add
mov
repnz
lahf
inc
clc
rcrb
scas
fidivs
jne
adc
cld
mov
mov
and
fcoml
rorl
and
hlt
test
mov
jno
mov
rcl
fildl
out
enter
sbb
or
loope
dec
subl
dec
pop
cld
and
xchg
pop
rorb
mov
bound
wrmsr
cmp
inc
jae
imul
iret
add
mov
add
les
fs
add
cmp
cmp
scas
pop
loope
imul
bound
mov
dec
stos
mov
out
push
jmp
movntq
icebp
and
push
sbb
das
xchg
fisubl
pop
scas
xor
mov
jb
aad
decb
ss
cmpsb
hlt
mov
clc
or
les
and
lcall
xor
xorl
dec
dec
jb
push
fldlg2
add
data16
scas
int3
daa
movsl
mov
icebp
or
fisubs
hlt
cmp
xchg
adc
lods
push
push
mov
sbb
loopne
pop
pusha
cmp
jbe
push
in
movsb
xor
mov
jl
incl
pop
out
pop
push
xchg
filds
xor
dec
jg
jecxz
outsb
jae
mov
push
xchg
mov
push
pop
inc
jnp
das
push
out
test
mov
mov
xchg
aaa
cltd
shll
mov
inc
xchg
dec
cmp
inc
ja
jmp
je
loopne
jnp
ja
out
cmpsb
cmpsl
or
test
sub
mov
mov
or
repnz
cltd
fs
rcr
sbbl
xor
test
aaa
aad
fisubs
sub
mov
jl
dec
add
scas
xor
pop
scas
jl
cwtl
push
cmpb
jmp
dec
das
add
adc
mov
mov
and
fbld
lods
mov
cs
nop
out
ljmp
imul
lea
movsb
pop
jne
sbb
cwtl
xchg
add
adc
and
into
addr16
rorb
loopne
pop
xor
lcall
mov
hlt
sysret
mov
aas
jne
fcoms
je
add
mov
loop
scas
sahf
mov
fidivl
xchg
sbb
sbb
orb
arpl
push
cli
cmpsb
mov
jb
ljmp
sbb
dec
clc
lret
xor
adc
push
or
icebp
aad
addr16
mov
xchg
xor
cmc
sbb
sub
lret
and
incb
mov
xchg
shlb
into
cli
call
addr16
add
cmp
jo
inc
loop
sbb
imul
xchg
leave
cmpsb
lods
mov
adc
in
xchg
fcmovnbe
push
in
icebp
sbb
xor
das
sub
popf
jns
testb
aas
xor
mov
fbld
add
enter
push
out
mov
mov
jecxz
or
aaa
or
xchg
fwait
ret
xor
sbb
pop
mov
mov
adc
cltd
aaa
dec
adc
cmp
inc
xchg
mov
push
mov
dec
xchg
cmpsb
inc
xchg
test
lret
pop
lcall
repnz
mov
pop
fldl
lods
test
and
sub
jbe
adcb
cmp
nop
xor
xor
xlat
rorb
add
enter
fisttpll
call
out
in
cltd
mov
xchg
pop
ja
les
cmp
in
imul
inc
sub
sbb
or
sub
gs
xchg
into
dec
xor
dec
adc
es
xchg
mov
cmpsb
jnp
out
ja
jae
fisttpl
mov
xchg
ret
insb
cmpsb
xor
mov
cmc
into
xlat
cmpsb
lret
xchg
ljmp
mov
fstpl
cmpb
adcb
inc
test
enter
dec
xorl
out
dec
fwait
push
call
xchg
imul
lock
sbb
insl
lea
inc
or
sbb
jg
gs
outsb
xchg
add
shr
pushf
xchg
dec
mov
popf
negb
test
popa
push
xor
in
or
stc
lock
das
xor
push
cwtl
mov
daa
inc
lock
out
inc
cltd
mov
stos
push
rcll
pop
fbstp
add
xchg
xchg
subb
mov
sbb
sub
imul
mov
mov
jns
imul
das
mov
in
sbb
cmpsl
mov
sti
clc
in
inc
sbb
jae
jo
frstor
cwtl
insb
sub
clc
imul
leave
pop
adc
sbb
mov
push
add
mov
movsl
or
mov
adc
roll
sbb
pop
inc
mov
add
lret
jae
jle
xchg
jne
adc
ss
and
mov
lahf
jge
push
mov
xchg
add
dec
es
xchg
cs
mov
loop
imul
aam
xchg
test
and
xchg
leave
hlt
or
aas
xlat
inc
lahf
stc
pop
fnstenv
lahf
popf
jg
lock
xchg
mov
rclb
xchg
loope
add
mov
adc
xchg
aas
aad
std
mov
and
push
popa
loope
popf
fs
mov
imul
inc
sub
add
mov
mov
adc
adcb
iret
sbb
cmc
jbe
cmp
mov
mov
lret
shl
mov
sbb
ret
xor
stc
sub
movsl
fimuls
stos
mov
sbb
sahf
dec
sub
pushf
shlb
cmpsb
or
out
mov
loop
sub
sbb
gs
and
cld
mov
movsb
ljmp
mov
jbe
mov
push
sahf
je
jno
or
mov
lock
sub
add
mov
pop
icebp
jbe
movsl
mov
rcll
in
pop
add
push
stos
cld
int3
fst
outsl
cld
add
icebp
leave
inc
or
jge
jns
adc
mov
ljmp
popf
cld
mov
add
xor
je
pop
mov
insl
mov
jge
xor
jbe
jecxz,pt
sbb
sti
lds
xor
aaa
xchg
addr16
int3
js
sbb
call
mov
add
fmull
aas
rorl
push
add
mov
addb
adc
rolb
les
outsl
push
jne
test
fcoms
add
adc
mov
scas
cmp
into
fmuls
test
ret
stos
push
and
inc
out
scas
and
in
inc
xor
xor
mov
jo
push
mov
cmpsl
mov
xor
pop
mov
pop
xor
std
jae
jge
cmpsl
push
inc
stos
mov
pop
mov
sbb
pusha
int
mov
mov
inc
or
lock
mov
notb
cmp
pusha
cmp
mov
mov
cmp
xor
cmp
out
cli
repnz
std
nop
push
ljmp
mov
nop
pop
cmp
xchg
inc
mov
mov
inc
xlat
fists
xor
aaa
push
out
je
pop
push
jbe
lret
jb
pop
daa
sahf
stos
fistpl
xchg
lret
sbb
decb
out
outsb
jne,pn
sub
test
adc
fisubrl
cmp
insb
ljmp
pop
fstps
js
pop
aad
and
out
cmc
or
xchg
add
daa
sub
or
test
rolb
push
fnstenv
call
repz
movsb
test
call
inc
mov
test
out
xor
pushf
stos
aam
adc
and
mov
call
push
add
xchg
or
cmp
dec
std
mull
stc
cmp
sub
fmuls
imul
dec
outsb
jle
xchg
outsb
and
int
inc
hlt
pop
scas
cmpsb
jmp
sub
pop
xchg
inc
test
mov
pop
js
mov
sbbb
js
sbb
cs
mov
mov
mov
jo
mov
xchg
jne
lret
mov
ljmp
cmp
test
xor
xchg
fidivrl
pop
sub
dec
loope
lret
aam
rolb
mov
ret
idivb
sub
mov
dec
push
mov
in
add
test
leave
cmp
sub
shrb
mov
push
mov
fs
scas
push
test
int
jg
cmp
mov
dec
out
mov
or
mov
dec
mov
pop
or
lahf
in
icebp
lods
mov
inc
stos
pop
add
lldt
mov
mov
stc
inc
jne
dec
rorl
clc
add
loope
jge
movsb
cmp
repz
daa
push
stos
pushf
mov
popa
jno
imul
cli
lock
mov
mov
xor
lcall
adc
jo
sub
jae
or
fisttpl
or
cmpsl
outsb
lret
icebp
stos
cmpsb
repz
rcr
or
jmp
lods
mov
mov
addr16
daa
xchg
ret
test
adc
pop
jne
out
add
mov
ret
push
mov
push
mov
ljmp
int
or
or
and
fs
pop
std
jmp
lock
repnz
mov
pop
mov
jns
mov
push
repz
inc
shll
movsb
xchg
xor
es
enter
adc
lahf
jle
or
xchg
mov
mov
mov
mov
mov
outsb
addr16
in
dec
outsb
dec
cmpsb
cmpsl
push
imul
mov
add
gs
xchg
mov
in
lcall
lcall
in
pop
dec
rorb
or
stos
mov
outsl
mov
out
insl
and
jmp
jmp
imul
sahf
cmpsl
cli
dec
adc
or
inc
aad
icebp
jmp
daa
stos
popf
mov
js
lcall
fists
push
cwtl
mov
cmp
or
inc
insb
xchg
sbb
test
fistps
xlat
dec
jg
dec
inc
mov
addr16
pop
inc
scas
lods
mov
cli
out
clc
inc
lcall
inc
test
ja
add
scas
xor
test
adc
sbb
add
daa
imul
pop
arpl
je
test
adc
cli
clc
mov
cmp
das
mov
xor
dec
adc
jno
mov
jnp
sub
pushf
fnstsw
add
dec
test
icebp
mov
lock
rorb
scas
jecxz
cmp
pusha
lods
dec
arpl
add
cmp
jge
int3
xchg
add
frndint
clc
jo
cmp
lret
pop
push
jle
fcoms
ficoms
fimull
or
cmp
push
lcall
rorb
lds
add
ret
sarl
dec
jl
xchg
jle
xor
add
ret
not
cmp
jbe
add
outsl
repz
mov
jno
add
jnp
pop
pop
shll
xlat
aad
and
pop
or
scas
or
xor
add
pop
in
test
push
std
aas
icebp
inc
test
pop
add
add
xor
lret
shrl
sub
mov
pop
sub
pop
xchg
popa
test
loop
pop
out
inc
mov
imul
hlt
imul
mov
clc
xchg
mov
fdivl
and
jns
dec
xchg
xor
or
cmp
dec
test
dec
jl
fdivs
dec
and
decl
sahf
push
fwait
add
ret
xchg
pop
push
cltd
sbb
icebp
lea
pop
icebp
mov
outsl
push
jmp
push
test
fcompl
xor
cmc
std
dec
adc
or
or
pop
sub
jno
mov
imul
pop
arpl
mov
arpl
push
outsl
mov
xchg
mov
outsl
lock
lret
or
rep
in
push
and
paddsw
jne
js
and
scas
lret
xlat
sbb
aaa
popf
stos
jg
mov
inc
sub
adc
lea
les
mov
push
mov
adc
cmp
add
mov
imul
test
mov
and
es
nop
mov
cmp
jb
inc
push
push
xchg
jmp
cmp
inc
lock
popf
push
sbb
sub
push
push
or
sbb
xchg
fwait
bound
pop
pop
inc
andb
sbb
or
sbb
inc
and
push
fcomip
and
pop
outsl
je
xor
sub
mov
cmp
scas
sbb
in
fstpt
orl
std
lea
sbb
push
jmp
push
or
nop
in
jg
pop
mov
fnstsw
imul
and
lods
jae
ljmp
cmpsl
xchg
lods
jns
and
and
cmp
inc
aad
fs
add
or
or
dec
out
dec
jne
cmp
rolb
jge
pop
scas
scas
pop
jg
out
mov
xchg
or
lret
push
cld
adc
iret
loop
push
clc
xchg
mov
pop
outsb
adc
daa
in
leave
jns
fildl
sub
popa
xchg
in
subb
es
lret
and
xor
shll
scas
xchg
enter
and
dec
stc
xchg
pop
fcomi
inc
pop
sbb
add
push
xchg
in
push
jecxz
add
push
push
pop
test
sbb
mov
sub
loop
cmp
loopne
test
inc
inc
insb
in
pop
push
jle
inc
adc
lock
adc
je
jmp
repnz
repz
fisttps
lret
or
mov
test
dec
inc
mov
stos
push
test
push
pop
fdiv
mov
adc
adc
in
xor
pop
xor
aaa
insb
shrb
flds
pop
hlt
aas
jo
adc
mov
ret
xchg
es
mov
sbb
cmp
inc
rol
and
mov
fcmovnu
aam
loope
xchg
aaa
and
xchg
je
ds
mov
test
repz
inc
xor
mov
lock
xchg
sub
lahf
pop
jp
test
cmp
cld
cmpb
leave
adc
mov
sub
aaa
cmp
movaps
jmp
push
adc
mov
mov
sti
testl
mov
mov
mov
gs
rcll
fdivrl
xor
test
stos
or
iret
and
leave
and
es
int3
xchg
daa
push
and
cs
jno
fs
jbe
call
repz
rorl
out
pop
push
lods
insl
sub
sub
adc
jbe
outsb
sub
mov
outsl
push
cld
fisttpl
push
mov
loop
add
xchg
push
aas
ljmp
mov
adc
add
mov
inc
ljmp
ds
xor
sbb
and
push
sub
call
and
cmpsl
and
sub
pop
int3
and
push
cltd
adc
or
sbb
and
shl
std
add
jo
mov
insl
cmp
out
pop
push
imul
pusha
push
mov
and
or
lods
cmp
mov
or
cmp
arpl
mov
ds
nop
pop
mov
inc
mov
pop
mov
fwait
sbb
adc
push
popf
pop
sbb
mov
dec
push
adc
leave
mov
mov
dec
xchg
nop
int
js
jecxz
mov
or
and
cmpsl
xchg
jb
add
sub
stos
js
pop
aaa
pusha
xor
mov
adc
xchg
scas
fistl
xor
subl
xor
or
daa
cmp
cmp
mov
lret
scas
push
sub
jp
pandn
sti
add
mov
xchg
das
and
and
out
mov
int3
push
sbb
pop
stc
ret
jmp
lods
xor
sub
cvtps2pd
ljmp
mov
pop
pop
jmp
xor
imul
inc
mov
and
cmp
sbb
ret
and
in
in
push
scas
cltd
dec
inc
lahf
ficoml
dec
lods
test
cmp
call
and
sub
shll
jecxz
add
test
cltd
bnd
iret
test
mov
mov
rcl
adc
in
sbb
pop
add
xchg
pop
xchg
xor
aas
mov
inc
outsl
es
mov
dec
cs
les
dec
pop
lcall
icebp
mov
enter
rcr
push
cmp
lock
jmp
ret
push
sti
pop
mov
xchg
nop
in
popa
inc
out
scas
pop
loop
jle
cmp
lret
xchg
or
inc
ret
test
jb
pusha
lahf
jg
mov
clc
sbb
or
lea
xor
jnp
push
jmp
xchg
cli
pop
js
call
pop
fldt
je
or
fdivrl
dec
inc
es
clc
jae
lahf
enter
dec
das
repz
inc
pop
dec
ljmp
in
xor
jl
addr16
iret
lret
mov
into
ret
sahf
mov
adc
inc
insb
or
popa
fsubr
mov
dec
icebp
lcall
in
dec
inc
mov
int3
cli
mov
js
addl
push
pop
insb
xor
adc
in
nop
push
lea
rorb
daa
mov
mov
lcall
sbb
cmpsb
push
add
sbb
pop
jl
insb
sbb
clc
rolb
sbb
insb
movsb
sbb
rolb
int
mov
push
xor
cli
inc
xchg
lcall
mov
movsl
sbb
cwtl
fisttpll
out
mov
mov
jl
push
inc
ret
xorl
je
les
sbb
inc
jge
and
cs
es
sbb
jb
sbbl
mov
push
sbb
push
jnp
mov
push
ret
adc
test
mov
mov
cmp
adc
or
aam
push
loope
sbb
xor
dec
cmp
or
add
and
pop
sbb
ljmp
into
mov
jno
imul
or
jl
xor
inc
pop
sti
sub
inc
inc
ret
scas
iret
sbb
pop
or
jmp
mov
push
in
scas
loopne
repnz
add
jge
orl
insl
jo
cwtl
in
pop
leave
adc
into
push
into
nop
inc
insb
test
lods
dec
orb
and
jge
movsl
or
jae
mov
fldt
sbb
sbb
lds
mov
imul
jle
pop
ds
mov
out
xor
movl
pop
xchg
jp
mov
mov
pop
lods
mov
pop
inc
cmp
sub
lret
icebp
xor
or
pop
xchg
xchg
cli
mov
sub
cmp
aam
pop
jbe
push
xchg
adc
mov
fwait
inc
stos
aam
stos
aaa
in
adc
fwait
mov
inc
mov
mov
lret
push
out
das
lock
mov
div
int
jb
cmp
mov
pop
inc
pop
scas
call
xchg
aas
sarb
jae
and
lods
imul
sub
addr16
xorl
xchg
xorb
mov
jge
push
adc
fnstcw
pop
fdivrs
or
shl
rcrb
lock
cli
repz
and
mov
mov
inc
xchg
mov
shlb
shll
test
in
xchg
cmp
sbb
addl
gs
in
pop
andb
ds
mov
cli
xor
lret
ss
xor
jo
xor
subl
jmp
test
pop
movsl
pop
imul
cwtl
xor
int
lret
es
cmp
push
je
cs
out
push
and
insl
sbb
cmp
push
nop
div
aam
cmp
jno
mov
mov
divb
push
insl
adc
test
ja
mov
adc
stos
cmp
xlat
movsb
in
imul
and
movsl
mov
movsl
cmc
pop
mov
xchg
xchg
xchg
sbb
xor
lcall
mov
ret
pop
iret
sub
cmpsb
sbbb
fbld
in
daa
add
cmp
push
and
sahf
jb
inc
ret
int3
fwait
shlb
pushf
lahf
cmp
jae
mov
pop
cmp
test
out
lcall
push
xor
dec
dec
push
mov
inc
adc
int
cmpsl
aad
mov
xchg
jbe
xor
movsb
int3
xchg
push
nop
ljmp
xchg
sbb
and
jns
mov
pop
sbb
adc
lea
mov
loop
mov
pop
sahf
jne
add
and
sub
sbb
test
jo
jecxz
push
dec
push
aas
rcrl
aaa
mov
sub
aas
inc
inc
fildll
pop
fmull
cs
sbb
pop
or
mov
push
lods
ret
in
dec
test
xchg
jbe
jge
mov
adcl
mov
es
or
je
cli
inc
mov
sbb
jb
xorb
fs
or
sbb
jge
test
jae
fisubl
loope
add
cmpsb
lods
shr
mov
movb
shl
and
fxch
fdivrs
lret
fdivl
pop
popf
and
cmp
sbb
lahf
imul
sti
lods
jnp
mov
jnp
push
lds
es
mov
aad
pop
call
pop
xchg
std
xchg
jne
dec
call
data16
mov
test
jne
push
cs
dec
ds
push
and
jnp
xor
adc
and
xchg
negb
jle
lea
sbb
push
js
cmpsl
sbb
and
sbb
xor
sbb
adc
add
jecxz
ficompl
mov
rolb
add
add
cmp
jl
cld
push
push
or
push
cmp
loopne
aad
mov
cmp
push
jle
inc
lods
xchg
leave
push
pop
cmpl
fstpl
pop
cmp
imul
mov
cmp
sahf
mov
jnp
xchg
cltd
lret
and
sahf
insl
fisubl
fstl
lock
mov
and
jne
cld
dec
ficoml
pop
xlat
cs
test
fldl
loopne
loopne
push
movsb
pop
mov
cmp
imul
rcrl
xor
or
cmp
dec
cmp
clc
jne
push
lea
and
cmp
pop
lock
dec
mov
cmp
xchg
pop
les
pop
sbb
inc
jmp
adc
sbb
dec
sub
and
test
sbb
sbb
and
jns
and
jmp
and
mov
rolb
cmpsb
int3
icebp
imul
mulb
cld
enter
dec
mov
cmp
xor
lods
les
jns
arpl
out
arpl
jnp,pn
sbb
call
ljmp
cmc
lock
pushf
cs
fucomip
mov
pusha
sbb
mov
sbb
test
popa
adc
or
or
fsub
inc
cld
mov
out
shll
xchg
addl
xchg
mov
sub
or
add
pop
mov
mov
ja
test
pop
jmp
ret
or
lahf
push
lea
mov
and
cmpb
xlat
sahf
roll
movsl
push
insl
daa
ljmp
out
adc
shrl
rcr
lcall
sub
or
cmpsb
scas
imul
pop
sti
pop
jge
jae
jle
fucomp
mov
add
ret
jmp
outsl
inc
xchg
ljmp
arpl
dec
lcall
cwtl
dec
call
imul
xor
ljmp
je
fisttps
pop
pop
lret
push
xchg
in
push
inc
inc
and
les
or
jbe
notl
test
mov
movsb
inc
bound
dec
sar
dec
cwtl
cld
mov
mov
add
mov
mov
push
pop
test
xor
xor
mov
jmp
jne
ja
xor
sbb
mov
inc
outsb
ljmp
pop
sahf
pop
mov
pushf
mov
dec
pop
call
push
sub
shrb
pop
inc
mov
in
pushf
mov
loopne
adc
bound
pop
xchg
cmp
ret
mov
std
stos
cltd
or
jp
jmp
xchg
mov
pop
sub
pop
sub
insb
rolb
loopne
push
and
ret
in
lcall
or
mov
fs
and
or
mov
sub
mov
fsub
cmpsb
xchg
aam
xchg
add
xchg
test
sahf
pop
inc
push
mov
outsb
mov
jmp
xchg
outsl
movsl
add
in
shl
adc
mov
je
out
enter
stos
sbb
fbld
loop
sti
into
fs
dec
pmulhw
cmp
jmp
lods
mov
stos
push
pop
jae
jl
mov
inc
fstl
mov
add
pop
pop
aad
mov
adc
pop
push
fnstcw
divb
inc
push
push
xchg
lods
fisttps
sarl
sbb
adc
xor
es
xor
xchg
add
mov
pop
pusha
xchg
pop
sbb
arpl
jo
pop
int3
jo
or
es
cmpsl
stc
sbb
push
pop
sub
inc
lods
add
xor
test
popf
aaa
das
fbstp
fcoml
add
and
shll
sub
mov
cli
push
mov
cwtl
add
test
xchg
xor
mov
mov
movsl
jecxz
fsubrs
aam
lods
cli
mov
add
xor
sbb
add
cld
cmpsl
pop
fisttps
cmp
cli
inc
fldl
add
sbb
jb
and
ds
push
ljmp
jnp
pusha
xor
add
xor
xchg
jg
mov
lcall
pop
cs
push
leave
pop
fwait
xor
insb
sbb
sub
stc
mov
or
cmp
aas
pusha
sbb
mov
mov
xchg
incl
jne
mov
pop
mov
testb
or
bnd
rclb
shrl
cmp
int
fisttpll
adc
aas
jecxz
bound
or
lret
pop
or
inc
inc
dec
clc
fstpl
repnz
dec
add
sub
xlat
insl
std
inc
fnsave
inc
mov
xchg
mov
cmp
push
cmpsb
sub
jno
sbb
inc
add
jno
aaa
sbb
xchg
push
test
sub
fs
xchg
lcall
inc
mov
loop
cmpsl
ds
into
imul
mov
je
xchg
aas
jno
jecxz
cmp
fsubl
xlat
xor
movsb
icebp
cmp
jecxz
mov
pop
enter
xor
lahf
sub
fbstp
cmpsl
mov
pop
push
insl
or
adc
ret
imul
in
lea
mov
js
dec
adc
fcoml
js
push
jmp
leave
insb
and
movsl
inc
cwtl
pop
out
or
pop
fwait
jnp
test
loopne
mov
pop
outsl
enter
pushl
and
rcll
data16
add
adc
sbb
pop
sub
dec
insb
mov
pushf
jo
cltd
jbe
dec
ret
imul
push
hlt
faddl
test
xchg
test
pop
xchg
out
dec
jns
scas
lods
push
mov
dec
rol
cs
xchg
mov
xor
int3
outsb
jl
repz
rcll
push
sub
jg
jbe
dec
aam
imul
leave
aad
mov
mov
call
jecxz
jae
test
scas
movsb
nop
insl
xlat
testl
in
sub
hlt
out
or
jb
mov
daa
dec
arpl
mov
cmpsl
mov
push
mov
in
mov
cmpsl
aas
add
cmp
jb
test
inc
mov
add
or
sbb
out
push
sub
lds
and
pop
fucomp
in
mov
repz
mov
or
xchg
jp
in
popa
inc
loopne
xchg
add
fwait
es
sbb
pop
push
lea
inc
loope
push
call
inc
mov
test
ja
adc
ljmp
aam
je
sub
pop
test
call
xchg
shlb
mov
aad
mov
iret
adc
lahf
sti
ds
loop
pop
push
sbb
loopne
add
pop
inc
push
popa
xchg
fsubl
xor
fdivs
cmp
pop
sub
add
jae
jmp
or
push
in
ja
js
and
sub
pushf
push
push
add
mov
mov
in
je
pop
mov
xor
sahf
addl
dec
xchg
push
and
jg
lods
and
repz
lods
mov
scas
movsl
inc
fstpt
push
pop
cli
jb
mov
or
inc
adc
and
fsubr
adc
repz
lret
xchg
sub
cltd
add
sti
sti
xchg
inc
pop
push
or
int
lret
cmp
out
ljmp
loop
xlat
pop
scas
das
push
or
movsl
stc
lock
mov
sbb
push
jb
adc
dec
xchg
jle
push
jno
pop
mov
jns
cld
mov
lcall
xor
jns
cmp
inc
jbe
shlb
push
push
dec
sbb
or
repz
mov
mov
incl
pcmpeqb
or
mov
shll
and
test
ficoms
inc
mov
pop
lds
rorl
fldt
mov
lds
mov
xor
icebp
add
fbstp
lods
lods
gs
insb
enter
roll
ret
fsubs
scas
mov
pop
push
jl
bnd
push
cmp
mov
mov
mov
gs
aas
cmp
loope
ja
inc
lds
out
stos
pop
xchg
or
iret
cmp
sbb
or
scas
and
sbb
es
fiaddl
gs
cmp
dec
lock
jmp
cmpsb
jle
and
pop
sub
iret
add
inc
fadds
mov
or
ss
je
inc
into
push
jge
into
mov
push
js
xor
movsb
or
popa
out
pop
cmc
inc
xchg
push
pop
pop
stos
adc
andl
lahf
xor
inc
adc
inc
xchg
adcl
lahf
xchg
pop
sbb
fisubrl
rclb
fbstp
pop
mov
adc
imul
flds
mov
stc
jo
lods
aas
pushf
jge
dec
or
lea
cli
mov
push
mov
sbb
fistps
not
fwait
or
mov
mov
out
cmp
loopne
bound
outsb
push
orl
xchg
and
or
and
sbb
sahf
lds
inc
pop
cmc
cmp
or
out
loope
ret
je
mov
jae
inc
sti
loope
jbe
mov
push
sti
shlb
mov
scas
sbb
inc
or
sub
or
shrl
dec
mov
sahf
aas
and
pop
lds
aaa
mov
repnz
sub
push
push
addr16
dec
clc
xchg
imulb
push
xor
lods
fs
jl
and
push
cmp
push
xchg
fistl
lret
cmp
mov
jns
lret
pop
inc
or
pusha
and
test
sbb
mov
or
in
xchg
pop
shr
lds
jae
jge
sbb
lret
addl
cwtl
sahf
xchg
rcrb
mov
bound
lods
lods
pop
add
inc
or
into
je
insl
sbb
inc
cmp
outsb
and
cmp
into
pushf
inc
lds
xlat
dec
xor
adc
xor
shll
xor
pop
jle
cli
shrb
test
js
fidivl
xor
mov
into
cmp
cmp
imul
inc
fmul
test
ds
jne
out
andl
out
imul
shrl
sub
or
and
or
mov
cs
mov
mov
xor
in
sbb
outsl
mov
xchg
pop
cmp
add
nop
imul
hlt
sub
mov
pop
push
lock
add
sbb
mov
mov
sub
fs
dec
push
jmp
into
xor
fwait
scas
mov
into
dec
or
mov
cmp
add
add
rcr
mov
test
sub
mov
mov
out
jb
stos
pop
stos
xor
inc
jg
xchg
je
imul
insl
jo
into
push
xchg
dec
fs
mov
mov
scas
and
popf
mov
ficompl
bound
sbb
xchg
mov
and
jo
add
imul
cmp
out
sbbb
mov
aaa
lret
xor
mov
frstor
ss
mov
mov
icebp
aam
xchg
int3
enter
cmpsl
push
orl
dec
and
aaa
sbb
push
test
xchg
nop
das
test
jmp
das
out
ja
test
js
mov
mul
xor
cmp
imul
mov
stos
hlt
je
xor
in
adc
cmc
lret
push
mov
mov
cmp
adc
pop
jl
xchg
neg
add
loopne
cmp
cwtl
ret
addr16
test
test
and
or
and
mov
pop
test
stos
mov
pop
stos
mov
mov
shr
lods
icebp
movsb
aas
test
mov
sar
push
icebp
imulb
shrl
mov
pop
fidivrl
fcomp
out
and
shll
xchg
mov
pop
sub
inc
cmp
push
jo
push
scas
gs
pushf
mov
out
les
stos
cmp
push
lcall
int3
in
aad
ret
push
imul
adc
pop
scas
cmp
sub
sub
cwtl
rorl
cmp
pop
jle
adc
cmp
sbb
lcall
dec
lods
cmpb
fmull
out
in
push
nop
mov
in
and
cld
cmpsl
push
outsl
mov
pop
push
filds
jno
outsl
xor
inc
inc
movsl
push
push
into
ljmp
push
fnstenv
jnp
mov
iret
push
dec
into
xchg
add
jbe
clc
cmp
xchg
pop
cli
pop
sbb
rorl
fists
out
repnz
adc
adc
mul
adc
or
outsl
faddl
mov
sbb
dec
cmp
inc
dec
xchg
scas
mov
add
clc
fwait
test
or
stc
mov
insl
or
xchg
jno
and
xor
jecxz
decb
xchg
je
sahf
loope
inc
arpl
scas
cmpsb
or
push
in
incb
clc
in
cmp
ja
pushf
xor
adc
add
lods
cmpsb
jp
dec
loop
cmc
jo,pt
ret
movsb
in
dec
cmc
jbe
shll
mov
xor
push
jl
cmpsl
pushf
fidivrl
mov
jnp
enter
pop
sub
inc
outsl
inc
stc
data16
insl
add
adc
sbb
gs
loopne
into
aad
push
fisubrl
mov
xchg
xor
andl
push
out
and
in
loope
faddp
xor
sbb
insb
and
data16
and
insb
jno
add
movaps
popf
in
movsl
sbb
sbbb
add
sahf
popa
jo
push
cmp
ljmp
adc
fldcw
pop
jmp
fwait
xor
scas
mov
stos
lcall
sahf
lcall
icebp
jb
adc
test
sarb
aam
lret
jg
push
or
push
push
ss
lahf
cmpsb
testl
test
add
adc
fwait
pop
mov
test
dec
insb
or
sbb
dec
icebp
out
dec
xchg
cmp
push
iret
dec
jns
in
sarl
test
insl
ret
xchg
sub
lcall
mov
sbb
lret
sbb
mov
push
add
and
lret
shll
cmp
mov
stc
or
aam
push
scas
xor
cltd
pop
fcompl
scas
daa
add
rcr
jns
fldenv
pop
int
lea
pushf
or
dec
cld
mov
or
inc
fldcw
adc
pop
inc
xor
stos
mov
pop
sbb
and
push
test
mov
sbb
sbb
out
ljmp
mov
sbb
pusha
cli
adc
hlt
test
mov
push
shlb
mov
pop
ljmp
adc
sbb
mov
inc
lea
insl
mov
inc
loopne
scas
sbb
push
ja
pop
and
xor
mov
pop
or
out
jae
test
clc
cs
mov
inc
outsb
aam
addr16
stc
mov
add
push
movsb
mov
inc
shll
out
call
push
cmpsl
fcomps
pop
scas
out
ffreep
pop
and
xor
jbe
mov
sbbl
int
hlt
jecxz
shrl
mov
pop
dec
fcmovnb
jnp
jbe
enter
adc
sbb
and
insl
add
jg
fnstcw
mov
or
loop
fstps
loop
imul
jb
int
inc
mov
movq
sub
cmpsb
mov
jg
cmp
pop
ss
test
mov
mov
mov
inc
inc
lods
xor
xlat
sbb
in
sbbl
jb
sbb
arpl
mov
ror
or
mov
loope
lods
dec
test
or
sarb
adc
stos
mov
lret
int
into
repz
jg
sbb
bound
pushf
inc
xchg
jns
dec
aaa
repz
mov
xor
lods
add
mov
hlt
ss
ret
and
mov
in
test
lods
mov
mov
lret
icebp
jo
adc
fadd
inc
rcrl
mov
lret
inc
push
adc
jbe
cmp
test
pop
arpl
xchg
dec
adc
nop
cmp
or
bnd
ja
sti
jmp
out
out
add
jge
addr16
xor
cmp
add
repnz
bnd
repnz
mov
ss
mov
js
movsl
mov
ljmp
lret
sub
inc
add
dec
mov
js
rcrl
cmc
inc
in
or
mov
imul
pop
inc
bound
fisttpll
xor
fimuls
dec
or
insb
lret
clc
jge
and
dec
xchg
imul
push
addb
mov
pop
push
jl
sahf
push
push
cwtl
fnstcw
push
cmp
push
movsl
pop
pop
mov
fs
mov
int
daa
and
or
stos
push
lods
rcll
cmp
xchg
mov
lcall
jmp
ljmp
xchg
dec
int
ja
pop
mov
test
cltd
outsl
fmull
pushf
aas
or
push
int3
popa
mov
cmpsb
inc
fisttpl
lahf
inc
add
push
mov
int3
movsl
jno
pop
add
loope
or
test
lods
sbb
movsl
jmp
jne
out
insb
jg
insl
or
adc
sub
jbe
scas
lcall
lods
fcmovu
add
push
aas
push
das
repz
hlt
shll
and
pop
inc
ljmp
xor
adcb
or
mov
fldl
dec
imull
movsl
mov
adc
xchg
sbb
stc
rcrl
and
jg
repnz
je
test
lods
loopne
pop
stos
scas
mov
cld
data16
or
xchg
insl
cs
fistl
cltd
rep
lea
movsl
loope
adc
pop
xchg
ljmp
cmp
add
xchg
push
std
in
or
fiaddl
ret
aaa
pop
loope
enter
popa
xchg
sbb
mov
dec
xchg
jmp
cmp
xchg
mov
popa
and
and
mov
push
movsb
pop
adc
inc
push
pop
lea
cmp
jne
cli
je
cmp
adc
mov
push
xchg
fsts
fwait
jge
les
test
or
fisubl
push
repnz
ja
mov
outsb
adc
fldenv
mov
lahf
push
sub
sub
jge
add
int
inc
iret
jp
cmp
bound
xor
shrb
mov
push
adc
rorl
dec
mov
rolb
or
aam
mov
jb
mov
mov
mov
sub
aad
pop
mov
lahf
fdivl
push
lret
pop
push
lds
in
mov
loopnew
mov
cmovae
cli
mov
mov
or
inc
jbe
leave
cmc
and
cmp
cmp
xchg
idivb
setle
lret
dec
test
cmp
mov
mov
popl
push
sbbl
or
inc
mov
pop
movsb
ret
pop
mov
mov
mov
jmp
pop
pop
aam
adc
jp
mov
mov
loope
inc
pop
mov
add
popa
cwtl
or
faddl
test
negb
lret
mov
bound
jmp
into
and
sub
lahf
pop
push
cmc
popf
push
lahf
fdivrs
lret
cmp
push
push
add
xorb
and
inc
shrb
sub
lds
mov
insl
pop
mov
clc
inc
lret
mov
test
mov
inc
jne
adc
mov
iret
arpl
cli
jmp
mov
addr16
push
xchg
jnp
test
out
adc
inc
push
out
add
push
sub
faddp
jecxz
lods
jmp
flds
sub
inc
mov
lock
idivb
jecxz
add
jnp
loope
mov
loop
add
mov
push
add
jmp
sbb
shll
sbb
cmp
setbe
pop
stc
aam
imul
hlt
add
xchg
repz
int
ljmp
lahf
sub
aad
fdivl
fwait
xor
jno
xchg
cmpsl
decl
adc
mov
daa
in
xchg
xchg
adc
push
ror
sbb
mov
push
fnsave
mov
xor
sbb
ret
jo
pop
sub
int
cltd
insb
fbstp
sbb
dec
dec
insb
iret
ret
pop
addr16
cmpsl
mov
inc
shl
sub
cmovp
cmc
test
jp
scas
movsl
inc
std
outsl
mov
test
ret
sbbb
cmp
hlt
and
mov
adc
pop
loope
fwait
imul
scas
nop
cmp
cli
pop
dec
fsubp
sbb
aad
push
add
les
add
mov
jmp
loopne
iret
xor
aas
push
jne
xchg
mov
aaa
aaa
daa
cmpsl
loop
push
addl
inc
mov
js
mov
and
loop
cmp
cmpsl
mov
call
push
mov
repnz
test
and
pop
addr16
es
sub
popf
rcr
lcall
arpl
push
inc
push
xchg
or
div
jbe
or
lcall
xor
js
scas
or
scas
into
hlt
adc
xchg
add
or
xchg
xor
sbb
in
into
jg
add
fadds
ja
pop
repnz
pop
jo
leave
fimull
push
jnp
xchg
jbe
mov
idivb
int
push
add
sbb
mov
push
stc
inc
call
xor
jmp
mov
in
adc
mov
icebp
loop
cmc
sub
xchg
sub
loopne
gs
adc
iret
xchg
dec
js
sarl
xor
outsl
pop
scas
imul
scas
mov
dec
jae
into
imul
lods
adc
rol
xor
icebp
rcll
stos
xchg
push
in
dec
xor
jno
mov
outsb
test
insl
stos
stos
dec
mov
push
cli
icebp
leave
or
decb
pushf
fwait
mov
pushf
mov
sbb
xchg
adc
sub
jno
shrb
imul
and
fsub
addb
pop
divb
xchg
rol
les
or
dec
push
lods
clc
push
inc
pop
sbb
loope
mov
or
adc
cmc
jg
movsl
push
mull
out
xor
in
push
pop
addr16
rol
sbb
divl
xor
movsl
sbb
push
jnp
jg
scas
xor
je
cmp
jae
jo
inc
lret
and
scas
loop
rcr
lds
out
fstpl
cmp
sub
add
xchg
adc
fdivl
sbb
jo
sub
sbb
inc
adc
jecxz
int3
mov
mov
and
icebp
aaa
pushf
shlb
cmpsl
popa
shl
movd
sahf
stc
push
insl
lret
dec
sbb
popa
add
fs
outsb
and
out
add
pop
cmp
xchg
movl
jle
xchg
pop
inc
loop
jecxz
subb
addl
leave
pop
outsl
and
adc
cmp
imul
sarb
inc
inc
inc
or
dec
add
sbb
lret
cmp
inc
call
or
jmp
sbb
inc
cld
mov
repz
push
sbb
push
jbe
add
jnp
mov
cltd
call
sar
int
lock
mov
adc
dec
dec
call
out
data16
iret
cmp
repz
fucomi
outsb
out
es
fwait
xchg
pop
mov
mov
sub
mov
xchg
pop
push
pusha
les
into
jne
jno
imul
inc
jb
jbe
xchg
stos
xor
in
adc
pusha
call
mov
inc
in
icebp
mov
leave
mov
inc
ret
xor
dec
fstpt
aad
jne
mov
sub
mov
lret
or
xchg
fwait
adc
lahf
dec
inc
repnz
mov
jno
dec
mov
ja
jno
xor
fdivrs
jae
xchg
jae
popf
aaa
nop
mov
sti
mov
mov
lcall
repnz
cmc
outsl
lds
addr16
outsb
dec
or
pop
sbb
jmp
adc
cmp
popa
pop
hlt
pop
loopne
outsb
add
aad
jle
daa
aad
xor
jo
sbb
popf
ss
mov
sub
xchg
xchg
xor
shlb
pop
xchg
add
xchg
fsubrs
or
into
popa
inc
and
mov
stos
test
xchg
in
lret
dec
movsb
rcl
insl
push
ljmp
stc
inc
imul
call
mov
mov
inc
es
mov
sub
jno
mull
mov
jge
lods
pop
or
movsb
dec
aas
cld
aas
outsl
adc
mov
int3
mov
enter
nop
cmp
push
xchg
jo
sti
cltd
xchg
ds
inc
and
imul
ljmp
rcrl
loop
dec
or
jnp
scas
enter
jg
popf
mov
loope
jno,pt
das
arpl
popf
sbb
pop
sub
cmpsb
roll
mov
fld
imul
loope
mov
call
mov
cltd
das
cwtl
repz
xchg
sub
cs
jb
mov
push
shll
mov
xchg
sub
movsb
cmp
xchg
dec
mov
pop
int
adc
and
rcrb
ljmp
xchg
pop
jns
or
out
lock
bound
xor
cmova
imul
repz
push
repnz
inc
mov
pop
out
cld
jnp
add
sbb
sti
inc
cmpsb
fisttpll
clc
xchg
nop
xchg
adc
das
push
fwait
ss
lcall
ret
push
fmuls
out
nop
jo
sub
xchg
sub
push
cmp
xchg
into
inc
psllw
xchg
jnp
fldenv
xchg
mov
jbe
jns
dec
push
je
and
mov
scas
aaa
mov
mov
sbb
pop
shrl
lock
mov
xor
xor
dec
xchg
out
lods
jecxz
ret
je
aas
sub
sar
pop
lods
icebp
daa
jge
inc
enter
and
orb
mov
nop
addr16
add
cmp
test
outsl
jl
xchg
and
stos
xor
or
pop
adc
mov
pop
sub
push
jae
inc
or
ret
faddl
pop
xlat
xchg
int
sub
and
push
test
pop
scas
ds
clc
pop
imulb
push
mov
data16
pop
popl
xor
cmp
fwait
mov
jae
xchg
and
dec
mov
xchg
dec
outsl
adc
mov
cmp
push
xor
iret
add
repz
cwtl
push
dec
and
lods
ret
stos
int
xchg
lds
enter
push
movsb
js
cmpsb
inc
adc
or
repnz
movsl
sub
shlb
cld
movsl
bound
loopne
loope
cmp
cmp
popf
jp
dec
cmpsl
xor
movzbl
addr16
adc
mov
icebp
jo
insl
lds
bound
cmp
pop
jbe
data16
and
adc
sub
jecxz
outsb
cmp
mov
movsb
jns
dec
loop
andb
pop
mov
or
scas
mov
jl
hlt
and
cmp
xchg
in
mov
pause
mov
mov
int
cld
outsb
adc
add
jns
inc
ss
fldl
adc
imul
push
dec
or
popf
cmp
lock
mov
ret
adc
jmp
rorb
movsl
imul
xchg
ret
jbe
xlat
mov
mov
mov
sti
stos
adc
xchg
rolb
mov
out
jp
and
mov
gs
pop
cmp
nop
mov
fdivrs
and
cmp
jg
cltd
cs
fildll
movsl
add
das
cld
dec
gs
stc
cmp
and
cwtl
fadds
es
sbb
test
repnz
es
push
imul
insb
mov
mov
sbb
fucomi
andb
out
sub
repz
cltd
ja
into
movsl
mov
mov
jae
cmpb
dec
sub
or
inc
out
mov
pop
xor
jb
dec
jno
cli
mov
xchg
test
sbb
xchg
pop
lods
dec
in
or
add
int3
dec
lret
mov
jnp
and
mov
xor
repnz
mov
pop
in
loopne
das
mov
push
dec
nop
ds
pop
push
xchg
xor
in
and
call
push
cmp
jb
jge
pop
cwtl
addb
xor
addl
icebp
lret
mov
movsl
dec
popa
xchg
adc
call
push
push
fcomip
mov
loopne
adc
je
out
std
sbb
je
test
sub
test
rcl
and
out
inc
mov
test
int3
outsl
dec
sub
pushf
negl
mov
call
mov
int
add
and
push
jecxz
push
xchg
xor
xor
jns
mov
cmc
lahf
dec
xchg
inc
cmp
mov
out
sub
lcall
adc
xor
xor
rorb
adc
mov
out
sbb
jp
mov
inc
inc
lret
push
aad
push
push
outsl
je
nop
dec
iret
mov
aaa
cs
or
out
inc
sbb
call
push
test
lds
and
xor
and
xor
cmp
jb
xchg
add
xchg
cmc
lret
xor
and
cmp
sub
shrb
inc
fdivs
lahf
sbb
adc
lea
lods
xchg
dec
mov
inc
sub
iret
mov
and
cwtl
jle
mov
mov
mov
cmp
incb
idivb
sub
pop
mov
lret
fistpl
std
xchg
iret
call
mov
scas
in
stos
les
push
cmpb
mov
pusha
pushf
test
mov
sub
into
scas
mov
jae
push
mov
sarl
arpl
test
cmp
dec
dec
and
sbbl
sub
inc
test
rorb
cld
dec
bound
test
push
push
into
fnstcw
popf
dec
push
lahf
cmpb
in
dec
test
lods
mov
xchg
jp
mov
push
and
add
and
jbe
fcmovu
inc
push
dec
sbb
sahf
lahf
lahf
nop
xchg
mov
pop
movsl
icebp
outsb
repnz
and
xor
xor
and
scas
xchg
andl
bound
jno
sub
ljmp
movsb
sbb
lret
ss
or
mov
addl
and
cltd
cmp
mov
pop
mov
scas
and
pop
pop
xchg
sahf
repnz
shlb
xor
fwait
sti
inc
int
adc
xchg
mov
in
and
jae
in
fildll
test
cltd
mov
imul
mov
push
stos
into
iret
int3
or
sbb
imul
mov
les
fstps
xchg
adc
fcomip
pop
fdiv
jne
jl
pop
or
cmpsl
jae
imul
push
and
jmp
inc
shrd
jns
outsb
inc
test
mov
in
scas
push
push
or
imul
add
fldl
pop
js
out
sub
sub
xchg
mov
and
cld
sub
and
mov
mov
lods
xchg
bound
xchg
push
sbbb
jl
and
jns
fstp
cmp
xor
push
or
dec
stc
test
test
adc
aas
in
push
cltd
out
sarl
add
sub
enter
decl
add
popf
pushf
mov
dec
out
cs
popf
push
jg
jg
scas
in
aaa
push
stos
sbbb
into
insb
outsl
mov
mov
push
sub
in
aam
push
mov
dec
sub
jnp
into
std
out
cmp
mov
push
int
fsubr
adc
inc
arpl
sub
mov
scas
repz
or
add
data16
pop
mov
adc
popa
mov
xor
sub
jge
push
cmp
xchg
andb
flds
cs
loop
cmpsb
add
fimuls
sub
mov
cld
icebp
sti
pop
outsb
jo
in
add
or
xchg
mov
inc
lods
lods
xchg
dec
jg
pop
lahf
dec
or
pop
dec
rclb
sub
stos
jg
or
xor
sbb
xor
hlt
repz
dec
mov
add
ljmp
push
in
xchg
ficomps
mov
push
and
enter
repz
scas
xchg
rorb
test
std
adc
stos
ss
dec
pop
mov
fs
mov
insb
mov
popa
xchg
ja
inc
cmp
add
repz
adc
cmp
fs
cmpsl
xor
sub
mov
dec
movl
lcallw
orb
mov
rolb
lret
mov
push
push
sbb
pushf
out
inc
shl
adc
pop
aad
fucomp
callw
gs
xorl
push
outsb
xchg
hlt
cli
and
sub
inc
jnp
insb
or
xchg
xchg
sub
mov
add
xchg
pop
ljmp
sub
addr16
jo
mov
fs
jnp
inc
repnz
sti
xchg
jnp
stos
add
in
cltd
adc
outsl
xchg
pop
and
scas
pop
mov
jb
add
hlt
and
das
insl
inc
cli
fsts
fwait
enter
cmp
pop
fldenv
cmpsl
mov
cmpl
sub
xchg
and
je
xchg
dec
pop
push
pop
inc
adc
mov
test
mov
int
sahf
push
out
dec
aas
shll
daa
add
cli
repnz
sub
jo
mov
aad
or
lods
pop
push
xchg
mov
rclb
hlt
imul
pusha
dec
adc
je
or
mov
fdivrs
xchg
mov
inc
sbb
push
pop
ret
loop
push
stos
or
adc
cmp
pop
roll
mov
sahf
data16
adc
add
mov
push
aad
push
outsl
rolb
stc
sahf
xchg
pop
adc
das
popa
pop
aaa
in
jp
mov
test
jbe
addl
flds
or
test
lahf
pushf
js
ljmp
pop
jo
xchg
incb
adc
fimuls
mov
push
imul
test
add
mov
enter
cmp
mov
pop
repnz
outsb
fwait
mov
sbb
or
mov
add
sbb
push
enter
std
addr16
es
mov
shl
adc
cmp
fldenv
push
push
xor
sub
cltd
jg
cmp
xchg
popa
adc
lds
leave
push
stc
shrb
int3
arpl
add
cltd
outsb
leave
pop
rcll
jl
into
inc
imul
jno
push
cs
xor
movsl
inc
icebp
mov
mov
mov
pop
ljmp
into
clc
shl
mov
notl
xchg
jbe
cmp
loop
lahf
or
and
push
xchg
leave
lcall
adc
repz
cmp
mov
test
test
add
cmp
cmp
add
ljmp
dec
ficompl
jo
stc
xchg
xchg
mov
loopne
jno
test
nop
gs
or
xor
push
jne
fadds
test
or
icebp
shr
bound
scas
add
pop
inc
and
setp
inc
xchg
mov
outsl
rorl
dec
cltd
mov
mov
inc
dec
push
gs
cs
jecxz
test
cmp
or
arpl
sahf
fxch
icebp
and
idiv
sbb
je
mov
mov
pusha
in
adc
movsl
and
push
push
pop
push
xor
ret
add
ret
inc
push
int3
pusha
xchg
loop
jle
mov
jnp
test
pop
out
lods
and
insl
fs
sbb
xchg
or
xchg
push
mov
and
push
xlat
push
sbb
pop
sbb
testb
stos
loope
adc
rolb
mov
arpl
push
je
loopne
sahf
pushf
inc
pop
adc
push
int
mov
inc
dec
jnp
pop
and
call
sbb
sub
pop
into
sub
rclb
or
push
mov
aaa
test
push
xchg
outsl
jae
aaa
jne
xor
jge
sbb
cmp
mov
inc
adc
sbb
mov
and
fcoms
mov
push
xor
ljmp
cmpsl
popf
fimuls
mov
mov
adc
dec
jl
sub
inc
aas
push
sbb
js
sbb
jnp
and
xchg
test
fcoml
dec
dec
fisubrl
out
push
jmp
adc
push
sahf
out
ljmp
xchg
inc
out
je
stos
out
mov
sahf
mov
dec
jno
insl
pop
sarb
cmp
jg
in
outsb
jmp
pushf
jge
clc
mov
icebp
popl
add
imul
ljmp
cmpsb
shrb
pop
test
in
lret
out
push
mov
rcll
inc
test
imul
in
sub
pop
ds
fiadds
mov
cli
inc
adc
xchg
add
mov
movsl
insb
sti
adc
movsl
in
mov
ret
adc
push
aaa
lea
inc
into
dec
and
dec
and
pusha
ret
clc
das
in
adc
mov
test
mov
pop
les
pop
cwtl
adc
shrl
xchg
pop
inc
lcall
addb
js
push
insb
lret
inc
dec
aas
or
mov
or
roll
fwait
pop
xchg
inc
mov
add
pop
int3
jnp
rcll
lahf
sub
xor
sub
xor
out
js
sar
and
jbe
imul
fiaddl
adc
in
pop
movb
mov
push
lcall
jg
dec
lret
jns
dec
mov
cmp
add
push
in
loop
mov
aas
adc
icebp
sub
out
or
lahf
sbb
daa
stos
or
lds
mov
xchg
adc
movl
xor
lods
cmp
jnp
ficomps
inc
decb
sbb
dec
dec
and
sub
dec
gs
shr
das
mov
je
repnz
sbb
int3
test
sub
idivl
aad
ss
cmp
xlat
add
and
idivl
std
xchg
xor
jl
lods
and
loopne
ss
enter
into
cmp
imul
jl
jg
lods
stos
sub
add
jg
shrb
sub
add
outsl
cli
outsl
dec
roll
out
xor
xchg
push
cs
jmp
xchg
das
outsb
mov
repz
scas
mov
insb
dec
iret
adc
mov
jg
sbb
push
cmp
adc
ljmp
mov
jge
mov
cmc
pop
sbb
imul
or
add
shl
loope
es
pop
xor
cmp
mov
cmp
or
add
mov
inc
mov
fwait
sub
aad
into
pop
xor
scas
push
int3
add
fildll
idivb
jnp
add
mov
push
out
cmp
es
add
adc
and
jl
add
ficompl
dec
fwait
or
rcll
cmp
clc
add
cwtl
shlb
cwtl
mov
jnp
jb
sahf
fstp
roll
adc
std
dec
jl
cmp
cmp
insl
xchg
fldl2t
sbb
lahf
hlt
outsl
bound
divb
dec
sbb
mov
add
in
test
imul
cmp
out
dec
xchg
pop
nop
and
sbbb
or
pop
cli
insb
hlt
call
inc
push
dec
aad
test
iret
jge
adc
jl
fsts
push
rcr
pop
lret
inc
repz
mov
fnstcw
pop
in
xor
gs
mov
xor
hlt
push
jae
pop
jb
add
add
out
sbb
mov
sub
mov
and
stos
data16
push
jb
push
sub
or
mov
fmull
jne
xor
cld
xor
fiaddl
subb
ds
add
cmp
test
stc
enter
xchg
repnz
aas
adc
out
jp
mov
mov
jl
repz
fistps
and
insl
mov
mov
jge
test
jo
xchg
push
aad
jo
sub
es
jg
shrl
imul
popa
dec
pop
ljmp
xchg
sub
popf
xor
xchg
adc
data16
sub
insl
xor
lea
push
lcall
fnstcw
inc
and
add
mov
sbbl
mov
pop
scas
inc
ja
icebp
and
inc
or
pop
push
adc
push
cmp
outsb
sub
xchg
outsl
subb
pop
fistps
pop
int
or
pop
sbb
mov
pop
and
and
or
cmpsl
imul
push
popa
mov
xor
in
dec
jo
and
sub
push
mov
sub
aam
je
bound
fs
shll
flds
ljmp
jp
fsubrp
xchg
cmp
pop
fadds
xor
xchg
int
inc
and
cmc
std
outsl
scas
xchg
mov
insb
mov
std
outsl
pop
popf
sub
mov
sbb
or
ss
push
lahf
andl
mov
fmuls
popf
add
pop
rcr
rol
sbb
inc
lahf
ficomps
out
add
clc
pop
add
xchg
test
xor
repnz
sbb
inc
inc
inc
inc
dec
xor
ss
mov
jo
adc
jno
cmp
lock
and
ja
jle
push
mov
out
sub
cmc
mov
xlat
and
add
push
dec
push
mov
mov
mov
pop
aam
cmp
inc
adc
scas
in
cmp
pop
in
and
insb
rcll
mov
test
mov
pop
fnsave
xchg
cltd
push
in
inc
fldt
ss
std
ljmp
sarl
push
sbb
or
or
xchg
inc
roll
ljmp
push
push
jae
sbb
dec
subl
xor
lea
lret
inc
dec
iret
and
leave
cmp
mov
scas
ss
xor
clc
cmpsb
cmp
dec
dec
cli
leave
loopne
jae
imul
ficoms
cltd
daa
xchg
xor
or
retw
mov
shll
mov
leave
aad
dec
repnz
sbb
fidivrl
add
pop
dec
jp
sub
rdpmc
mov
pop
push
movsb
push
mov
sbb
inc
sbb
gs
pushf
or
sub
and
add
lret
mov
xchg
sbb
iret
les
sbb
ss
cmp
push
adc
mov
mov
push
mov
cmp
mov
testl
jae
mov
push
mov
mov
xchg
nop
add
cmp
lock
xchg
dec
push
adc
jmp
pop
pop
dec
sub
rorl
roll
sti
xchg
js
pop
sub
fnstenv
scas
cmp
iret
sarb
pop
xor
push
lods
jnp
in
xchg
ret
popa
movsb
cs
outsb
loope
push
leavew
ret
fucomi
xchg
dec
add
scas
cli
roll
mov
daa
lret
fwait
or
lcall
mov
mov
mov
sbb
and
or
add
pop
xchg
inc
fs
jne
icebp
popa
jecxz
cmpb
xchg
cmp
je
in
mov
xor
hlt
dec
push
lret
ljmp
or
fwait
bound
jmp
ret
incl
jae
test
stos
clc
fdivl
call
inc
mov
pop
out
mov
sub
mov
ror
rclb
ret
xchg
jae
out
inc
xor
dec
sbb
pop
inc
add
pop
out
jns
out
mov
push
inc
fwait
clc
push
mov
jne
push
aad
test
fcomps
mov
push
aaa
fiadds
fcompl
xlat
mov
xchg
icebp
lea
adc
adc
dec
popf
mov
das
cmp
xchg
mov
mov
aam
sbb
jecxz
fwait
xor
lds
mov
or
mov
jo
mov
andl
xchg
sub
dec
ljmp
jp
arpl
xchg
xchg
nop
mov
mov
cmpsl
rcl
add
outsb
or
pop
stos
mov
stos
sti
xchg
loope
cld
negl
ret
sbb
lahf
mov
cld
sbb
int
mov
xchg
gs
ret
push
lret
mov
dec
jno
sti
and
xchg
je
clc
sbb
in
notb
sbb
mov
add
push
fcompl
lcall
cmp
add
jno
cmp
cmp
mov
add
sbb
dec
inc
push
cmp
aaa
inc
cld
gs
test
dec
aam
in
dec
aam
push
mov
mov
push
mov
mov
lahf
jns
subl
in
or
mov
lret
cli
mov
sbb
dec
push
push
aam
jg
popf
jl
xor
enter
adc
in
repz
repnz
dec
cld
jo
pushf
inc
aam
cmp
cltd
fucomip
dec
mov
ds
mov
push
push
in
jbe
push
icebp
cmp
scas
push
jbe
sub
sbb
mov
test
dec
cmp
fisubl
mov
adc
outsl
subb
cmpsl
das
sub
mov
jp
fiadds
shl
add
dec
cwtl
ret
push
sub
jb
or
imul
out
add
jecxz
rcl
push
divl
mov
ret
into
subl
xchg
dec
xor
or
pop
subl
jne
stc
jns
subl
sub
mov
cmpl
ljmp
xor
adc
jae
jae
sbb
push
repnz
rclb
fdivs
jecxz
mov
mov
das
push
int
xchg
jmp
mov
loopne
mov
jmp
jae
mov
jae
cs
pop
mov
xchg
fcoml
lret
mov
push
fwait
jo
fs
cli
adc
clc
sub
mov
mov
andb
dec
and
scas
stos
out
enter
dec
mov
in
xor
mov
push
cmpsb
mov
shl
test
imul
add
cmp
pop
fisttps
jg
dec
aas
xlat
lahf
jo
leave
cmp
or
xor
mov
sbb
arpl
dec
mov
rcrb
mov
ret
aad
xchg
ret
mov
ja
inc
sbb
fwait
fcomip
aas
outsb
imul
and
xor
mov
clc
inc
aad
and
out
sub
sbb
pusha
lret
aas
cmc
xor
aam
xor
cwtl
xchg
insb
inc
imul
mov
mov
jl
in
adc
mov
idivl
aam
lods
sbb
mov
stos
divps
push
adc
or
pop
mov
push
clc
movsb
and
xchg
test
and
pop
push
nop
dec
push
adc
push
mov
rol
mov
push
ds
jno
in
ss
push
push
popf
fidivs
popf
cmc
inc
xchg
cmpsl
fistps
es
shr
cmp
sub
aaa
xchg
mov
push
adc
daa
sub
sub
mov
pop
push
andl
jle
arpl
add
repz
outsl
in
cmpsl
sub
sahf
cmp
divb
sub
pop
pop
fldenv
push
std
sarl
inc
mov
xchg
hlt
cs
xchg
call
std
scas
pop
mov
add
insb
push
out
cmc
pop
jb
jnp
and
add
jle
divl
dec
dec
fs
in
mov
jo
out
and
mov
ljmp
pusha
cmp
jbe
das
push
ret
cld
mov
loope
adc
cmp
int3
ja
gs
std
mov
stos
imul
sub
jmp
mov
loopne
pop
and
js
jmp
push
sbb
jbe
inc
mov
mov
sti
aam
ficoml
fdivrp
pop
push
lods
xchg
xor
sub
decl
addr16
jmp
jle
cltd
andl
jbe
and
lods
dec
dec
mov
jae
cmpsb
shll
les
jns
cmpsl
sub
stos
das
cmp
js
add
add
jmp
jl
xchg
dec
roll
shll
add
lea
jb
cwtl
and
call
cmp
ficomps
xchg
bound
sub
adc
mov
lea
dec
fdivs
xchg
push
mov
hlt
out
aaa
shl
xorl
imul
std
mov
jns
sub
inc
sub
imul
sbb
fldt
mov
je
pop
bound
repz
mov
mov
sub
sub
ret
sbb
xlat
data16
adc
je
fs
lea
js
lea
mov
jne
jp
and
test
test
inc
cli
adc
ljmp
rol
sbb
lods
jb
rolb
test
mov
inc
sub
mov
push
push
insb
insl
push
aad
jno
repz
or
insb
and
jno
pop
cmp
addb
and
ds
sbb
int3
fcmovnb
or
mov
loop
xor
mov
das
cltd
jns
lods
imul
call
push
mul
adc
inc
lods
imul
fistpl
repnz
decl
and
jmp
pop
aam
sub
lcall
sbb
mov
pop
lret
divl
lea
pop
inc
in
in
movsb
push
dec
jecxz
ret
xchg
adc
arpl
jbe
jb
test
loopne
out
out
ja
testl
cmc
es
and
adc
mov
outsl
jp
cmpsb
add
xchg
outsb
push
add
out
aad
push
xchg
push
imul
sub
arpl
subl
inc
lahf
scas
cmpsl
mov
or
inc
cmpl
sbb
lret
les
push
in
repnz
fiaddl
mov
xchg
jge
imul
xchg
decb
scas
test
push
jle
mov
push
add
movsl
aad
mov
adc
mov
cmp
push
int3
data16
ret
aam
cmp
out
pusha
rorl
movsl
dec
xchg
addb
stos
pop
cwtl
or
push
popf
nop
or
add
pop
aaa
mov
push
xchg
sahf
sbb
jbe
pop
mov
add
pushf
pop
push
sub
faddl
incl
jne
xlat
lds
cmc
mov
repz
pushf
add
dec
pop
cli
push
and
jnp
mov
xchg
pop
leave
xchg
adc
jno
stc
divl
out
inc
call
pop
test
test
cmp
popa
js
cmc
cmpsl
sti
es
pop
xchg
outsb
inc
cli
jle
js
repz
sbb
add
and
arpl
and
je
hlt
std
lret
ja
sub
mov
fisubrs
ja
inc
pop
inc
sub
jle
leave
arpl
mov
xlat
push
je
mov
mov
push
sub
jae
push
aas
test
loope
cmp
add
fisttps
cmp
mov
xorb
insb
aas
cmpsl
inc
adc
pushf
push
fwait
mov
test
jp
xchg
adcl
dec
sub
or
outsl
das
push
mov
mov
daa
push
inc
sub
imul
sub
sub
xor
shrl
das
add
lods
add
pop
mov
pushl
movaps
push
xchg
inc
ret
rcrb
orl
add
std
xchg
and
std
popf
pop
rcll
cwtl
int
xor
pop
idivl
sub
insb
mov
and
or
add
scas
in
les
imul
sub
xor
push
lods
clc
sbbl
sbb
sbb
clc
adcb
insl
imul
inc
pop
add
sbb
cmp
or
jne
cmpsl
je
xchg
xchg
bound
or
outsl
shll
shrb
lock
aad
or
rcrb
sub
fmul
jg
sbb
into
and
dec
cs
push
push
push
cld
ds
lods
std
sub
loop
mov
sbbb
arpl
and
mov
loopne
sti
shrb
pop
je
fdivrs
xor
ss
pop
push
mov
jnp
mov
ret
push
cmpsl
sub
adc
addr16
mov
inc
cmp
pop
sbb
rorl
mov
mov
mov
inc
or
push
sbb
xchg
xchg
sbb
loope
repz
push
lcall
sbb
popf
push
stos
and
clc
jge
out
and
test
mov
pop
inc
sbb
mov
scas
and
xchg
add
push
sbb
cmp
sub
es
stos
pop
je
dec
push
and
cmc
enter
and
mov
jp
call
insb
cmpsl
pop
and
xor
stc
or
int3
inc
pop
cmp
inc
pop
clc
andb
cs
adc
xlat
test
xor
cmp
adc
mov
repz
fsubr
dec
fsts
addr16
inc
movsl
or
lret
mov
mov
movsb
mov
scas
movsb
data16
fistps
hlt
in
adc
sbb
mov
psubq
in
cs
aad
out
sbbb
je
cmp
sahf
nop
mov
jg
mov
test
mov
mov
inc
popa
mov
sbb
pop
jo
jae
sub
inc
out
add
or
xchg
lods
jo
xor
sti
pop
fnstcw
jl
or
add
out
cld
and
fs
mov
fs
jge
lcall
icebp
sub
mov
mov
xchg
add
ret
cmp
shlb
push
jne
inc
pop
push
or
xchg
cwtl
jo
or
in
lock
dec
cmp
fiaddl
cs
js
pop
adcb
push
cmc
sbb
fwait
pop
pop
jg
and
mov
jmp
jmp
sbb
cmp
pushf
insl
add
orl
test
lahf
loop
testl
xor
je
adc
mov
int
pop
mov
out
loope
mov
sbb
je
lods
test
push
push
out
sub
xchg
or
push
fwait
inc
je
pushf
daa
xor
lds
jmp
dec
mov
sbb
sub
cmpsb
imul
mov
out
nop
rolb
enter
sub
js
scas
fwait
add
and
or
and
lret
adc
xchg
push
test
push
in
pop
jp
icebp
pop
fisttpl
in
add
cld
jecxz
es
out
jecxz
jmp
dec
ret
test
mov
jae
popa
sub
mov
lcall
mov
aas
ljmp
and
jo
ss
xchg
pop
lea
rcr
cmc
sbb
or
push
fsubs
out
pop
and
cltd
mov
addr16
in
jne
mov
pop
cmpsb
clc
cmp
mov
movsb
out
lret
iret
idivb
dec
popf
mov
jp
mov
fwait
sbb
xor
sub
lret
add
aad
mov
movsl
push
push
std
push
fwait
xor
out
outsb
xchg
xchg
push
shlb
insl
mov
imull
out
lret
sbb
jp
pusha
daa
and
imul
inc
push
xchg
sbb
jo
mov
pop
xchg
mov
fucom
mov
sti
std
pop
xorb
push
xor
ss
mov
sar
repnz
lret
and
jo
or
adc
inc
shrb
iret
popa
adc
stc
pushf
pop
inc
insl
shrl
adc
xor
jl
pop
imul
xchg
lods
leave
xchg
in
jg
popf
lock
adc
movsl
test
dec
lahf
cmp
pop
das
inc
out
insl
inc
pusha
mov
loop
push
jl
inc
pop
pop
xchg
dec
jle
jmp
notl
mov
insb
cmp
xchg
mov
pop
jnp
mov
iret
and
popf
cs
cmpsb
fstpt
pop
push
rcrb
xor
pushf
loop
push
fsubl
mov
negl
add
test
jno
dec
push
repz
xchg
dec
movsb
push
pop
pop
mov
icebp
xlat
pop
fdivl
aad
pop
mov
jb
xor
lods
insl
mov
iret
add
mov
les
gs
sbb
inc
loop
shr
jb
sub
dec
ss
inc
push
add
cld
rcll
repnz
sbb
aam
mov
sbb
addr16
repz
lea
cmp
xor
xor
or
aad
dec
xchg
jbe
ds
sbb
jge
jmp
daa
mov
andb
jmp
outsl
cs
adc
fstpl
add
xlat
push
jno
mov
mov
arpl
ficoml
jge
je
mov
mov
mov
jnp
mov
inc
push
into
sbb
lcall
and
push
jg
xchg
and
movl
cld
mov
cs
shrb
outsb
sub
mov
xor
xor
cmpsl
push
js
dec
mov
in
jg
or
bound
lds
cmp
bound
aam
loopne
daa
mov
in
sbb
push
sbb
push
xor
adc
jo
faddp
inc
and
lds
les
inc
jmp
call
ds
scas
cmpsb
mov
mov
pop
mov
call
fistps
fst
loope
mov
push
sub
mov
into
push
dec
push
dec
lods
daa
ss
fisttpll
shrl
sub
add
aad
test
shlb
mov
arpl
test
dec
loope
xchg
jns
xor
push
hlt
fcompl
js
push
mov
mov
xor
cltd
jmp
pusha
mov
outsl
jge
stos
ret
xlat
jb
nop
mov
jmp
aam
in
or
inc
popa
xor
xlat
pop
pop
mov
lret
mov
int
cld
xchg
nop
clc
inc
rcll
xchg
insb
mov
push
std
dec
cs
jl
sbb
into
pop
aad
xchg
scas
rclb
pop
or
sarb
rol
push
nop
bound
test
xchg
adc
mov
pushf
push
push
mov
add
sub
inc
pop
cmp
nop
inc
cli
out
xchg
pop
mov
inc
inc
adc
icebp
pop
outsl
stos
pop
mov
sahf
sub
psubsw
dec
push
dec
add
push
ljmp
ret
pop
dec
stc
daa
je
jbe
mov
cltd
mov
hlt
push
repz
addb
push
jne
add
icebp
pop
or
iret
mov
push
test
fs
pushf
cmpsb
decl
std
cwtl
sub
xlat
shrb
out
insl
in
pushf
mov
pop
inc
xor
xchg
and
jl
aam
cmp
fwait
test
enter
adc
lds
cmp
aad
or
or
pusha
push
inc
gs
jge
adc
cwtl
outsl
cmp
test
xor
mov
adc
ret
cmc
dec
ficoms
out
shl
and
shrb
or
addl
jns
sbb
fidivs
fistps
stc
sbb
xlat
out
dec
lods
out
rorl
stos
jno
fadd
xor
jnp
stc
jg
call
mov
aas
or
nop
popa
dec
in
sbb
mov
wrmsr
lea
and
arpl
jle
loopne
fsts
outsl
aad
mul
cmp
test
leave
push
xor
add
sti
imul
call
and
arpl
and
mov
mov
cmp
cmpsl
negb
insl
imul
cs
std
inc
jne
nop
lahf
inc
pop
lret
jnp
jbe
dec
popf
out
shrb
pop
add
scas
sbb
leave
adc
fs
outsl
mov
loopne
das
jnp
gs
mov
shll
ja
mov
add
aaa
pop
fistps
scas
or
lods
arpl
sar
scas
mov
push
into
xor
sub
adc
and
rcrl
pop
pop
sub
jno
jecxz
lret
and
xchg
and
cmp
push
inc
adc
or
movsb
out
insl
lcall
and
pop
xchg
divb
adc
pop
out
bound
pop
jne
popf
push
add
fisubl
xor
addb
dec
jecxz
jb
test
mov
insb
das
out
popa
xor
lret
dec
gs
lds
daa
fstps
push
in
orb
lret
fcmovb
push
cmp
scas
rcll
sub
aas
mov
jmp
je
pop
aad
sbb
or
adc
adc
mov
lret
aaa
mov
test
mov
and
aas
rcll
pusha
push
punpckldq
adc
or
add
repz
jns
pop
jne
pusha
sti
sbb
jge
mov
push
inc
mov
add
repnz
mov
das
sub
xchg
bound
pop
pop
sahf
ds
outsl
call
mov
sub
scas
sbb
shr
mov
mov
jae
adc
dec
aas
jo
mov
dec
daa
xor
rcrl
mov
nop
popa
call
ss
in
sub
mov
jbe
scas
mov
mov
adcl
iret
cwtl
push
mov
test
dec
mov
mov
repz
push
mov
cmp
pop
push
inc
mov
and
out
mov
ja
divl
enter
and
xchg
mov
addr16
add
xor
lock
mov
sub
pop
push
adc
nop
add
jecxz
mov
pop
sarl
and
iret
popa
testl
push
pop
mov
shr
sbb
cmp
xchg
imul
addr16
inc
clc
lret
insl
sub
cmpsl
es
jb
scas
pop
or
and
daa
das
xchg
lods
mov
imul
ret
lods
sub
lret
stc
fidivl
int
test
es
jle
adc
rcrl
ffree
mov
xor
in
in
xlat
mov
ret
jmp
hlt
pop
addl
mov
mov
sbb
push
cltd
push
sarb
sar
outsb
js
sbb
mov
sbb
dec
out
sbb
and
outsb
fs
ds
add
inc
mov
xor
xchg
mov
pop
pusha
adc
jge
mov
or
outsl
add
adc
pop
movsl
stos
or
cli
add
out
xchg
fbstp
push
enter
add
inc
sahf
je
mov
hlt
cmpxchg
enter
or
imul
stos
mov
or
shl
cld
insl
test
xchg
outsb
push
push
jno
inc
xchg
xchg
lock
movsb
push
enter
and
add
add
jo
add
fsubs
add
xchg
and
add
add
lock
add
add
push
and
add
add
mov
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
popa
fs
jo
xor
cs
insb
add
add
inc
jb
gs
imul
je
xor
fs
insb
add
add
push
jns
inc
jb
gs
je
imul
jb
xor
fs
insb
add
add
inc
push
js
inc
