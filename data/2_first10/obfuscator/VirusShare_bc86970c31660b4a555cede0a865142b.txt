pop
xchg
push
imul
push
test
push
lods
fadds
jns
outsl
lret
jae
insb
jae
inc
dec
sahf
popa
add
pop
scas
dec
mov
mov
icebp
dec
sbb
xor
dec
jb
and
loope
push
test
mov
addr16
mov
stos
outsb
xor
cmp
sub
mov
mov
push
bswap
testl
adc
and
xchg
mov
adcb
insb
adc
in
mov
push
jecxz
in
shr
repz
inc
jno
and
mov
fdivrs
imul
lfs
push
es
mov
push
xor
rcll
mov
popf
adc
mov
pop
sbb
insl
aas
ds
mov
or
push
inc
stos
inc
pushf
sub
sbbb
cmp
mov
sbb
test
das
pusha
es
je
int
cmpsb
addr16
jnp
xchg
adc
lea
pushf
pushl
ret
pushf
add
pusha
push
jmp
add
push
add
mov
add
rcll
add
add
add
add
add
add
add
sbb
shrd
shrd
pusha
mov
jmp
jmp
pusha
mov
movb
jmp
bts
shl
mov
test
push
clc
and
cmp
add
sub
clc
cmc
add
call
mov
pushf
pushl
ret
cltd
clc
mov
mov
ljmp
div
cmpsb
dec
mov
lods
mov
insl
cmp
std
push
mov
in
cmpsb
insb
je
cmpsl
lods
cmp
and
jne
inc
dec
jmp
cmp
mov
sti
cmp
pusha
pushl
popl
pusha
pushl
ret
add
lret
dec
mov
mov
sub
dec
out
lcallw
insl
popa
pop
adc
cmpsl
into
push
push
test
mov
rorl
sbb
add
cld
pop
fcompl
push
arpl
lcall
add
rcl
mov
bt
mov
pusha
test
push
pushf
lea
jmp
sbb
and
dec
mov
bt
call
pop
bound
iret
shr
aaa
jmp
dec
jns
fisttpl
inc
or
sbb
mov
and
in
aam
daa
js
push
mov
call
jp
inc
roll
cmc
xchg
mov
out
lret
ljmp
test
rolb
lret
mov
rcrb
sti
loop
or
icebp
dec
out
lret
ljmp
fiaddl
cs
or
push
push
inc
imul
repz
fbld
pop
shlb
dec
mov
in
jle
dec
mov
aam
push
faddl
mov
xor
cmovb
xchg
pop
shl
ficoml
pop
cmp
lock
dec
cltd
dec
je
filds
je
dec
aaa
mov
and
lock
mov
fisubrs
xchg
sub
cwtl
lea
mov
call
pushf
test
pushl
jmp
lea
call
pusha
clc
call
sub
push
dec
mov
dec
inc
cmpsb
cli
ss
bound
pop
in
cli
lods
cmp
add
loope
test
xor
xchg
or
push
push
mov
xchg
push
mov
lahf
mov
add
ds
shr
int
push
cmp
ja
cmc
nop
mov
loope,pn
loop
mov
in
pop
or
mov
mov
call
cli
push
addr16
dec
mov
jg
mov
xor
emms
aaa
and
mov
sbb
sbb
mov
sub
dec
push
aas
sub
mov
xor
arpl
lahf
push
out
mov
idivb
jnp
sbb
add
lcall
aaa
imul
mov
cmp
jne
movb
pop
cmp
sub
mov
popa
sub
je
popl
fsubrl
lods
ficoms
mov
scas
imul
iret
lcall
dec
lock
xchg
cld
bound
roll
lret
mov
add
clc
pop
in
pushl
popl
movw
call
pusha
push
push
lods
call
lret
dec
mov
pop
aas
fists
xchg
xchg
iret
xor
inc
sbb
push
pop
push
mov
or
sbb
hlt
and
or
sub
mov
sub
mov
inc
mov
loope
icebp
aaa
jns
test
nop
and
cwtl
adc
sub
mov
mov
dec
or
rol
es
adc
inc
mov
cmpsb
cmc
jmp
insl
aas
adc
addr16
mov
scas
dec
notl
pop
cmp
cmp
push
jae
test
mov
leave
daa
ljmp
sbb
sbb
and
xchg
fimuls
jle
dec
or
mov
dec
push
outsb
dec
or
push
fwait
add
jmp
mov
cwtl
incb
leave
aad
sub
or
test
or
shrd
clc
sub
shl
movsbw
shld
aad
mov
cmp
shl
add
not
mov
test
pushf
test
lea
call
cmp
pushf
jmp
pusha
lea
jne
setge
push
lahf
movb
call
pusha
pushf
lea
je
jmp
xor
mov
mov
or
fsts
add
test
sbb
pop
das
jge
push
or
sbb
mov
ljmp
pusha
fmul
mov
adc
push
es
sbb
pop
sub
into
pop
sbb
rcrb
je
cmp
aad
and
pop
or
nop
js
jmp
jmp
mov
xchg
pop
lret
mov
nop
clc
repnz
push
insb
stos
rclb
in
mov
push
aam
decb
movl
add
pushf
movl
jmp
pushl
movb
call
neg
mov
cmp
push
test
mov
cmc
pushf
pushf
sub
call
not
lea
mov
push
bts
bt
jmp
cmc
test
cmpb
pusha
jmp
lea
ja
pusha
movl
pushf
movb
lea
jmp
movl
pushf
pushf
push
call
pushf
movl
push
pushl
lea
jmp
pusha
movl
call
lea
pusha
movb
movzbw
push
call
not
call
lea
jne
adc
mov
stc
pusha
cmp
pushf
pushf
push
pushf
lea
ja
movsbw
pushf
mov
pop
xchg
mov
pushl
jmp
shrb
dec
mov
movsl
and
sub
jne
xor
lds
dec
addl
iret
inc
hlt
or
xchg
mov
jb
jbe
rolb
jo
sbb
xchg
outsl
ja
xor
popf
int
push
test
and
rcrl
mov
push
addr16
int
jno
mov
pop
inc
dec
push
movsl
push
loop
mov
out
mov
jle
repz
mov
in
cmpsl
fsubrs
in
iret
popf
popa
add
out
mov
mov
bound
mov
std
sarl
mov
daa
xchg
inc
pusha
add
popf
jle
loop
or
jb
ja
xchg
into
pop
adc
push
mov
in
in
dec
inc
push
sub
inc
lret
mov
cmpl
sub
dec
sbbb
stc
jecxz
xlat
scas
rorl
jbe
cmpsb
inc
out
xchg
neg
xor
out
mov
mov
arpl
jno
outsb
sub
xchg
sbb
test
jae
xchg
xor
lea
mov
cmp
jle
cld
jb
mov
xor
cmc
popa
in
es
sub
pop
pop
mov
pop
pop
jnp
jne
xchg
out
pop
xor
data16
in
bound
shlb
pop
test
adc
je
addr16
jbe
dec
jno
jmp
cmp
cmp
pusha
pushf
lea
jae
cmc
jmp
cmp
fmull
push
cmp
cmp
push
sbb
sbb
sarb
jle
cmc
pop
pop
push
pusha
test
in
fwait
sti
and
jecxz
pop
loope
mov
aaa
out
mov
das
mov
jae
mov
insl
aad
xchg
fstp
leave
pop
pop
dec
leave
cmc
push
xchg
xchg
les
hlt
test
push
mov
xchg
sahf
repnz
and
fsts
mov
dec
adc
adcl
adc
ja
adc
add
add
insb
add
mov
sahf
data16
cmp
outsb
fwait
imul
sbb
xchg
cs
push
adc
ljmp
aaa
jne
lods
fstpt
out
push
adc
push
add
jb
inc
adc
inc
dec
js,pt
push
push
out
push
push
fnsave
leave
ljmp
push
insl
je
adc
imul
outsl
add
dec
xchg
add
loope
daa
out
pusha
push
xor
lea
cli
fldt
pop
push
movsb
cltd
out
daa
cld
loopne
repnz
mov
dec
es
cld
out
add
and
sub
xor
call
scas
cmc
int
incl
or
lahf
cmp
cmp
adc
stc
pop
push
push
pop
add
out
push
xchg
adc
xchg
popf
push
jns
mov
pop
sub
out
ret
xor
cwtl
pop
sbb
fidivrs
inc
push
mov
mov
dec
push
cli
sub
add
hlt
jp
outsl
sub
jmp
cmp
shlb
add
bt
test
cmp
movb
mov
pop
not
lea
movzbw
pop
mov
jmp
jo,pn
mov
outsb
adc
jbe
sbb
or
repnz
pop
push
jle
out
mov
lods
mov
jle
sub
and
outsb
and
mov
xchg
xchg
mov
in
inc
cmp
xchg
mov
bound
and
dec
sub
sbb
and
adc
jmp
pop
mov
fildll
xor
xchg
xor
outsl
lock
mov
loopne
push
push
loopne
mov
mov
mov
mov
movsl
out
jg
xlat
sbb
loope
out
insb
cli
inc
stos
jns
inc
mov
mov
and
fmull
in
cmp
scas
jae
mov
cmpsb
dec
xor
and
ret
add
ret
outsb
pop
sar
xchg
xor
lock
mov
mov
cmpsl
test
into
fisubl
adc
icebp
mov
jae
push
aas
mov
sbb
dec
test
pushf
call
pushf
pushl
call
pusha
call
hlt
and
push
cmpsb
adc
leave
gs
sbb
sbb
out
jle
out
dec
push
outsb
push
mov
or
xor
sbb
adc
lret
loop
xor
xchg
pop
ljmp
loopne
xor
test
shrl
dec
cmpl
dec
mov
ret
add
dec
jb
jle
es
fs
and
mov
jb
rolb
mov
add
fsubr
dec
adc
add
mov
sbb
dec
dec
pop
or
movsb
dec
ret
push
out
fidivrl
push
pusha
adc
pop
cmp
cmp
jno
or
ja
jnp
and
aad
int
ret
add
movsb
pusha
psrld
das
aad
xor
insl
add
pop
xchg
mov
jg
movsbl
loopne
in
scas
dec
cmp
cld
or
test
mov
jb
in
movb
cmp
fistl
fs
mov
cmp
mov
je
out
dec
out
mov
cmc
push
add
mov
push
movl
inc
lret
test
mov
std
sbb
push
out
into
sbb
out
jb
jp,pt
inc
mov
daa
adc
pop
mov
xchg
and
imul
out
fbstp
out
inc
xlat
inc
das
jmp
in
add
imul
lret
jp
sbb
daa
sbbb
jmp
imull
pop
lahf
push
insb
dec
daa
pop
mov
lcall
jo
push
cmpsb
lock
aas
fmull
push
inc
mov
jecxz
inc
pop
jg
xchg
inc
ja
or
imul
mov
and
mov
cmpl
orb
out
pop
test
xchg
mov
je
xchg
push
pop
outsl
lods
das
cmp
push
cmp
mov
clc
rcrb
and
jmp
pop
seta
lea
movb
movb
pushl
push
movl
pushl
pusha
pushl
mov
mov
pushf
pushf
push
pushl
ret
lea
jb
bt
jmp
lea
je
bt
sub
cmc
clc
stc
cmp
push
pushf
lea
ja
bt
clc
imul
cmp
add
pushf
push
lea
jmp
movzwl
pushl
call
cmp
cmpb
pushf
lea
jne
add
rcl
inc
mov
cmp
add
stc
movzwl
bsf
not
and
mov
pushf
push
cmp
cmp
add
pushf
mov
pushf
push
movw
test
call
pusha
movl
call
jae
sarb
mov
inc
enter
test
pusha
mov
insb
subb
lcall
aam
adc
cmp
xchg
add
mov
fsubrl
and
mov
mov
repnz
ficompl
xchg
xor
push
outsb
cmpsb
push
enter
pop
pop
ds
dec
jge
xchg
es
inc
fildll
adc
cwtl
sub
les
and
je
jmp
cmc
test
cmpb
mov
jmp
lea
bswap
pusha
jmp
add
add
adc
add
add
add
add
add
add
cmp
adc
rclb
add
adc
add
add
add
inc
rclb
add
ss
and
sbb
insl
jb
movsb
mov
divb
mov
dec
push
sbb
ss
loop
mov
and
fisttpl
cld
mov
imul
inc
les
sbb
lret
jp
mov
data16
mov
repz
mov
pop
xchg
aaa
popa
cmp
mov
cmp
jge
mov
jle
sahf
lods
dec
popf
adc
sub
js
cmp
xor
das
jle
xor
out
and
nop
arpl
jecxz
cmp
data16
lds
inc
shrl
mov
ljmp
ret
jl
insb
insl
cmc
imulb
stos
add
or
sbb
mov
lock
sub
sub
dec
push
pop
movsb
lret
aam
ds
in
add
mov
push
leave
movsb
aad
dec
pop
stos
in
btc
das
loop
jne
in
xchg
cs
insb
xor
jo
xchg
mov
inc
jle
pop
movl
mov
or
sbb
in
lret
push
aaa
scas
and
aaa
mov
hlt
adc
cmp
add
scas
aad
inc
shr
ficoml
call
xchg
rcr
xchg
iret
and
das
adc
leave
loope
xor
jl
jo
sbb
sub
cmc
rcrl
aas
lcall
or
xchg
mov
sub
clc
inc
mov
xor
dec
fs
mov
lret
lcall
add
xlat
xchg
sub
pop
icebp
adc
push
sbb
cld
and
ja
dec
js
xchg
push
jmp
sbb
sti
lahf
add
data16
lods
pop
jge
add
subl
jle
mov
inc
in
adc
mov
out
or
je
movsl
xor
iret
jge
fisttpl
sbb
dec
cmp
call
das
xchg
push
ret
adc
test
inc
pop
push
xchg
popf
in
push
push
daa
mov
mov
icebp
xchg
xor
xchg
div
scas
and
mov
cltd
aaa
es
stc
fldenv
pop
lods
pop
mov
push
leave
sub
mov
dec
loop
lcall
es
pop
cmc
xchg
pop
cmp
cmpsb
xchg
inc
stc
cmp
dec
hlt
cmp
mov
cmp
jne
mov
sub
dec
out
jge
xchg
jecxz
fxam
cld
push
push
mov
sti
mov
sbb
repz
jl
adc
lea
or
scas
daa
xor
movl
jge
shll
mov
sahf
stc
mov
mov
xchg
sbb
mov
dec
rcrb
mulb
cmpsl
push
enter
mov
ret
out
fidivrl
cs
jo
push
pop
push
cmp
adc
push
aad
int3
mov
dec
int3
popf
fldcw
ja
loope
mov
push
in
pop
icebp
pop
insb
cmpsb
sbb
pop
mov
out
or
stc
lea
imull
pop
xor
fwait
repz
hlt
push
dec
fs
sbb
jae
and
sub
aad
xor
movsb
repnz
hlt
fsts
and
cmp
unpcklps
loopne
mov
pop
lea
xlat
ja
movsl
or
fdiv
stc
pop
inc
mov
xlat
and
in
dec
vmwrite
cmc
inc
mov
push
sub
push
cli
sub
add
sub
inc
mov
and
mov
insb
ret
inc
or
jns
movsb
test
sar
jle
xor
pop
mov
jl
xchg
xchg
sub
mov
mov
pop
adcl
fnsave
insb
jae
sbbb
pop
arpl
xlat
dec
dec
out
cmp
das
aaa
dec
and
dec
xorb
lahf
ljmp
aas
push
push
lret
and
out
nop
mov
jmp
shll
cmpsl
dec
fisubl
pop
mov
imul
push
leave
mulb
shlb
pop
sbb
jp
cld
pop
dec
xor
and
cmpps
je
push
mov
mov
xchg
lock
lock
in
push
in
xchg
cmp
push
je
fildll
ss
xchg
cmpl
pop
js
inc
xchg
or
adc
lret
in
dec
or
into
lds
fstpl
leave
xchg
push
sahf
lea
jne
add
xchg
push
cmp
xchg
ds
in
jnp
mov
cltd
pop
out
out
aaa
pop
push
push
mov
mov
dec
fisttpl
cltd
sbb
cwtl
pushf
outsb
sub
stc
xchg
inc
inc
ret
sbb
mov
adc
pop
inc
jae
push
data16
test
out
add
adcl
push
sbb
sbb
ja
repnz
pop
std
sahf
test
popf
mov
test
sbb
push
mov
mov
sbb
pop
xchg
sahf
mov
out
mov
push
out
imul
inc
pusha
fs
out
pop
jle
fldenv
or
rcrl
lcall
inc
stc
inc
inc
cli
xchg
call
fdivl
xchg
shrb
arpl
clc
sbb
popa
lcall
inc
push
imul
xorl
push
push
ljmp
scas
std
cs
sbb
repnz
pop
dec
sub
stos
mov
rclb
lods
pop
fstpt
mov
fisttpl
dec
fs
cli
mov
mov
xor
inc
neg
test
xor
gs
xchg
sbb
dec
std
xchg
cmp
es
dec
bound
loope
aam
cmpsb
jbe
or
push
xchg
mov
pop
cwtl
mov
addr16
out
lahf
subb
jnp
sbb
inc
pause
stos
jle
push
in
dec
mov
call
mov
pop
mov
mov
test
sub
mov
outsl
les
stc
call
push
push
outsl
aam
mov
lea
fs
push
mov
xchg
ror
shr
clc
xor
pop
adc
mov
faddl
inc
mov
repz
push
out
scas
repz
insb
and
push
pop
out
fcmovnu
cmc
jno
add
push
mov
out
fs
pop
dec
mov
jmp
add
inc
popf
mov
pop
out
cmc
pop
mov
or
mov
je
movsl
cmp
push
adcl
adc
mov
adc
stos
jns
push
ficompl
les
mov
cltd
fsubp
rcrb
lahf
xor
fimull
ja
popf
scas
in
xor
xchg
inc
insb
cmp
lcall
in
repz
xchg
push
lahf
add
dec
outsl
adc
inc
sbb
mov
cld
loopne
movsl
call
jecxz
add
mov
mov
aam
cs
in
push
leave
cmp
frstor
ljmp
test
xchg
jo
xchg
mov
adc
xchg
mov
mov
in
addr16
outsb
fldl
in
out
fists
mov
mov
int3
outsb
xchg
stc
pop
loopne
fcomps
movsl
cmp
or
mov
adc
paddb
mov
dec
xchg
adc
jge
popf
ja
and
cmp
dec
js
or
mov
and
adc
mov
sahf
inc
xor
iret
sbb
fadd
mov
push
mov
mov
ds
cmp
dec
adc
cmp
divb
and
mov
out
jo
mov
xchg
or
and
sub
ds
pop
in
or
cs
push
movsl
in
popf
cli
ret
sbb
and
inc
adc
and
sub
lods
pop
cwtl
mov
lcall
and
jne
sbb
xchg
sar
aaa
and
hlt
inc
loopne
mov
dec
pop
mov
aam
dec
repz
pop
test
nop
push
cmpsb
lds
xorl
push
cltd
sub
xchg
dec
mov
adc
and
pusha
sub
sub
mov
push
push
in
mov
test
shlb
pop
adc
addr16
xchg
shrl
popa
movsl
out
sbb
xor
jge
mov
mov
fstpt
and
cltd
lret
leave
imul
xchg
add
cmpsl
flds
dec
push
mov
shll
fdivrs
pop
pop
scas
jne
xchg
mov
pop
xchg
adc
idiv
sbb
pop
pop
pusha
xchg
cmpsb
jecxz
push
cmc
mov
cwtl
stc
xchg
push
cmp
pop
jns
shl
xchg
jbe
jmp
rolb
jns
adc
xorl
jno
dec
fwait
dec
lcall
xchg
imulb
dec
pop
subb
cltd
mov
cmpsb
and
ljmp
cs
sub
push
jb
jle
xchg
lret
xchg
mov
add
sub
sar
fsubrl
in
mov
push
dec
clc
inc
sub
insl
fmulp
xor
lret
xchg
sbb
lock
test
out
xchg
jne
gs
mov
js
iret
and
pop
xchg
cld
or
jno
mov
xchg
clc
int3
dec
lcall
jns
movsl
fistl
sub
inc
rcl
std
push
scas
pop
mov
push
and
scas
cmp
xor
scas
inc
mov
fcoms
jg
js
mov
pop
inc
xchg
xchg
filds
call
sub
cmp
pop
dec
push
cmp
shl
insb
gs
in
jp
push
jb
mov
or
push
pop
je
filds
in
sti
movsb
or
test
sub
movsl
push
lods
cld
int
nop
scas
and
lea
jbe
mov
lea
rorb
lods
js
imul
and
mov
cli
bound
ret
lock
jmp
mov
fcoml
jmp
loope
pop
ljmp
mov
ljmp
mov
mov
movsb
xor
mov
aam
pushf
stc
in
push
push
fdivrs
add
add
inc
mov
xchg
aas
xchg
and
sub
test
adc
ja
xchg
pop
dec
scas
stos
mov
inc
test
pusha
rolb
mov
pop
push
pop
or
call
push
fs
pop
push
into
jg
pop
cld
lahf
fwait
pop
imul
lods
dec
shll
dec
or
ret
loope
mov
jne
pop
sahf
jecxz
push
loop
loopne
in
dec
jmp
insl
push
test
xlat
jmp
scas
xchg
insb
out
mov
ret
maskmovq
imull
call
add
cmp
push
mov
xchg
shll
cmp
push
pushf
cmp
in
pop
pusha
das
mov
sbb
inc
in
mov
sbb
insb
loope
pop
push
inc
sbb
imul
test
add
adc
xchg
lcall
jno
outsl
jo
cmpsl
ret
xor
push
cmc
adc
and
cmpsl
mov
mov
rclb
add
xlat
ljmp
mov
cs
jo
jae
in
and
dec
pop
out
imul
repnz
add
lea
jne
shrd
mov
lea
add
mov
jmp
call
mov
mov
mov
mov
cmp
dec
mov
gs
mov
das
fdivr
jg
cmpsb
cmp
pop
push
lds
insl
cwtl
pop
ret
js
mov
dec
push
mov
xor
mov
aas
iret
dec
test
fs
je
cmp
clc
pusha
sub
pusha
bt
movl
cmp
jmp
pusha
call
call
movl
pushf
jmp
mov
not
call
pushl
popl
pushl
pushf
pushl
ret
call
cmp
push
lea
jb
cmc
cmc
cmp
pushf
pusha
push
lea
ja
pusha
cmc
bt
add
pushl
or
movb
jmp
pusha
push
lea
jb
jmp
cmpb
mov
lahf
call
mov
inc
jmp
dec
xchg
pop
xor
jg
outsb
jb
iret
push
pop
inc
cmp
aad
pop
je
rcrl
scas
mov
cmpsb
loop
mov
xor
lret
pushf
icebp
test
mov
or
sub
lret
pop
xor
xchg
pusha
xchg
xchg
dec
sub
fwait
popf
push
fs
cmp
iret
mov
mov
lret
test
in
sub
incl
xchg
and
stc
jae
arpl
ret
push
jmp
xchg
int
lods
pusha
cmc
cmp
not
test
movb
call
cmp
test
xchg
out
sub
xor
lcall
mov
lret
mov
je
leave
mov
out
mov
fisttpll
sub
mov
ds
mov
lods
pop
adc
scas
andb
and
and
jp
push
iret
scas
push
icebp
adcl
out
lret
les
mov
out
aam
subb
jmp
push
push
xchg
scas
and
jmp
pop
push
js
ja
sbb
push
pop
cmp
push
or
dec
arpl
cld
cwtl
add
pop
adc
out
push
movsl
ret
insl
fisttpl
pop
push
repnz
push
pop
cmp
push
mov
cltd
pop
push
mov
stos
lahf
cmp
xchg
mov
stos
push
jge
out
adc
and
iret
subl
jl
xchg
lret
test
arpl
lods
jl
out
xchg
popf
das
mov
push
popf
adc
pop
push
outsb
loope,pn
ret
jmp
xchg
les
mov
aad
or
int3
pop
push
clc
stos
cmp
das
bound
out
push
xchg
aaa
pop
in
sarb
cmp
mov
adc
xchg
push
mov
outsb
inc
or
out
push
mov
pop
add
sub
aam
stos
fs
push
jg
inc
push
pushf
fcoml
and
push
mov
mov
aad
mov
push
lea
testb
cmp
test
daa
pop
scas
lret
adc
out
push
mov
dec
cmpl
mov
inc
push
xchg
jecxz
idivl
cmp
xchg
sti
sti
int3
pushf
xchg
jl
out
xchg
mov
sti
aas
pop
push
push
lret
jge
inc
push
ja
mov
pop
loope
push
enter
push
jnp
push
dec
ja
mov
push
push
sub
rcrl
pop
push
dec
adc
xchg
loopne
push
fildll
fmuls
add
not
sub
sar
adc
mov
push
pushf
test
push
pushf
call
jmp
bt
sub
push
push
or
call
imul
gs
xor
cs
insb
add
add
call
mov
mov
jmp
pushf
pushf
pushf
movl
jmp
add
pushf
mov
call
push
jne
mov
xchg
lahf
lret
sbb
mov
gs
inc
in
and
cld
lods
jp
inc
addb
repnz
pop
das
cltd
clc
push
pop
pop
xchg
outsl
pop
daa
inc
and
lods
ds
mov
push
les
add
adc
push
xchg
sbb
shl
mov
add
cltd
add
icebp
cmc
loopne
and
mov
inc
lahf
in
push
popf
ss
call
outsl
jns
sahf
jp
cmp
out
pop
lds
push
insl
mov
sub
mov
decb
mov
fsubl
inc
les
call
js
sahf
push
shrl
dec
bound
adc
xorl
lods
jae
ss
xchg
push
outsb
sub
repnz
jae
lret
sub
push
je
cs
lret
stc
jae
sub
cmc
jg
xor
fwait
mov
fdivrs
xchg
inc
dec
push
gs
fisttpll
jge
cmp
or
sarl
jge
adc
imul
inc
ljmp
mov
mov
push
ficompl
sub
sub
jg
repz
push
shrl
les
dec
mov
inc
push
test
sub
hlt
add
add
push
js
push
repz
cmp
fcomps
mov
test
pop
hlt
enter
sbbb
lret
aas
jge
add
add
and
adcl
add
jae
jmp
mov
popa
pop
lods
flds
iret
xchg
sti
test
jne
jns
sub
or
ja
ss
mov
xor
dec
and
js
cwtl
int3
ds
outsl
push
or
mov
dec
adc
ja
hlt
rcrl
xor
adc
mov
pop
jle
mov
lret
or
ret
and
adc
push
popa
arpl
rorl
cmp
mov
decb
mov
iret
in
dec
jns
sub
and
pop
and
push
aaa
aad
test
adc
lret
fcomip
xchg
sub
xor
scas
enter
pushf
pushf
lea
jmp
push
jmp
arpl
ret
fdiv
gs
mov
lods
cmpsb
pushf
filds
clc
push
push
inc
pop
jmp
cmpsl
dec
lock
insb
insb
jl
push
cwtl
inc
out
enter
les
insb
cmpsb
xor
pop
inc
out
arpl
popa
pop
addl
jne
flds
adc
dec
dec
cmpsl
sub
popf
orb
mov
bound
fsubl
and
stc
mov
in
fildl
stos
sbb
mov
insb
pop
add
out
xchg
dec
dec
cmpsb
out
cmp
ljmp
xchg
mov
leave
xlat
add
cmp
sub
iret
push
fdivl
fxch
add
and
cltd
xchg
or
int3
sti
mov
mov
push
push
jecxz
test
pop
fnsave
cmp
test
pop
into
ret
push
jle
push
push
push
or
xchg
insb
clc
loope
repnz
daa
sbb
push
hlt
nop
lods
dec
push
sub
out
sti
leave
mov
pop
repz
enter
repz
push
dec
mov
jl
push
jo
aad
ret
or
scas
sbb
mov
stc
rolb
pop
paddsw
int3
and
push
out
in
loopne
inc
push
ljmp
dec
mov
dec
out
cs
xor
or
bound
push
clc
loop
sahf
call
cs
push
add
imul
js
test
call
fninit
mov
push
push
dec
mov
mov
lcallw
jns
inc
push
sbb
into
xchg
gs
cmpsl
data16
cmpsb
xchg
vcvtss2sd
xchg
inc
mov
insb
sub
push
insw
aaa
jecxz
popf
in
cmp
sub
in
pop
lahf
lret
xchg
pop
or
sub
sbb
mov
cmp
dec
decb
xchg
movb
jmp
or
lahf
and
in
aad
xchg
lret
out
mov
sbbl
jl
dec
les
loopne
fmuls
rolb
repz
ja
push
ret
pop
out
es
mov
lcall
ret
in
test
cmp
sub
jle
repnz
cmpsb
dec
sahf
lock
inc
ss
cmp
jno
xchg
ret
jmp
cmp
call
mov
movl
call
fsub
mov
xor
arpl
sub
push
out
add
pusha
xchg
add
mov
ljmp
jle
mov
ja
dec
xlat
cld
mov
imul
fmulp
stos
jmp
dec
lock
aam
push
ficoms
sub
aaa
cwtl
push
lock
cmp
sub
jge
adc
push
in
mov
xor
pop
push
div
and
negl
dec
mov
decb
and
pushf
movb
pop
jmp
pushf
stos
pushf
pusha
pushf
pushf
lea
jmp
lea
jb
jbe
bt
cmc
cmp
pushf
pushf
push
movb
lea
jmp
rep
pushl
mov
movsbw
mov
mov
lea
jmp
aad
leave
sub
cmp
sub
rorb
outsb
fwait
adc
push
and
scas
shr
mov
sti
loope
lds
stc
imul
cli
mov
dec
std
pop
mov
sti
sub
imul
and
in
mov
sub
out
sbb
in
sbb
xlat
fnstenv
test
cli
jbe
movb
xor
movb
test
sub
cmc
jmp
inc
divl
test
gs
adc
cld
sub
xor
enter
lret
es
lds
cmp
movsb
adc
sub
imul
leave
pop
leave
add
cmc
fwait
in
lds
xor
pop
movb
not
pusha
mov
bswap
pop
cwtl
lea
pushl
pushf
pushf
movl
pushf
mov
movl
pushf
pusha
push
pushl
ret
mov
pushl
bswap
setp
mov
bswap
pushf
pushf
mov
pushf
pushl
mov
bswap
pop
push
pushl
mov
pushl
ret
not
call
push
push
andb
fcompl
fisubl
cmpsb
stos
adc
xchg
sub
loopne
test
or
jne
xor
jae
iret
repz
repz
inc
xor
dec
ret
push
lcall
scas
in
fistpll
rorb
or
shrl
mov
test
pop
inc
pop
rclb
stos
xchg
pop
sub
ss
test
and
adc
pop
xor
in
stc
repnz
mov
call
lea
ja
call
movsbl
jmp
jb
push
push
push
pusha
pushl
ret
pusha
pusha
setb
mov
lea
pushf
setbe
mov
pusha
mov
call
lret
daa
mov
add
pop
pop
push
jle
dec
inc
das
lret
xor
shl
adc
pusha
inc
xor
adc
int3
test
cwtl
mov
xchg
add
stos
loopne
mov
rorb
mov
gs
xor
jge
mov
popf
xor
add
jmp
dec
dec
xor
dec
dec
ret
pop
mov
sbb
ffreep
cmp
pushl
pop
mov
xchg
ljmp
iret
imul
ljmp
enter
jl
xor
out
aas
sub
push
cmp
pushl
popl
pushf
pushl
ret
push
lea
jae
bsr
call
mov
mov
lea
jmp
cwtl
push
push
mov
push
insl
scas
cmc
bound
inc
jl
mov
aam
shrb
insb
adc
dec
cmp
mov
or
repz
push
xchg
sti
in
adc
cli
mov
inc
out
and
adc
stos
mov
sub
jecxz
fldl
mov
popf
mov
pop
push
ret
jmp
out
xchg
aas
je
rorl
inc
out
sub
adc
mov
pushf
xor
lahf
aaa
sub
sub
ret
sub
mov
jge
dec
pop
jae
and
lock
aas
vsubsd
mov
call
mov
mov
adc
jnp
mov
mov
mov
xlat
test
int3
mov
cmpsb
daa
pop
outsb
sarb
lods
in
mov
aad
mov
mov
inc
add
loope
mov
lock
adc
and
in
mov
or
call
insl
dec
test
lods
cld
or
cmp
push
enter
cmp
scas
push
cmp
nop
mov
sbb
jp
bound
mov
push
fs
xor
pushf
lea
jae
clc
jmp
stos
movw
push
lea
jmp
dec
call
not
call
call
cmc
cmp
movb
call
dec
int
and
xchg
sub
stos
in
inc
test
incl
and
lods
xchg
stos
popf
push
mov
mov
jg
leave
add
jo
loop
push
cmp
push
sub
sub
push
lds
mov
fildl
ljmp
adc
push
dec
or
cmp
cmp
sbb
and
jl
jg
fldenv
xor
mov
jo
mov
or
insl
adc
dec
roll
fisttps
int
mov
in
aam
lods
sbb
adc
sbb
shrl
push
add
dec
lods
inc
push
push
and
cmp
mov
dec
test
aas
mov
inc
mov
lds
cmpsl
test
jge
shll
into
cmp
sub
sar
ret
btr
xor
mov
and
dec
mov
jmp
clc
repnz
pusha
lea
jne
lahf
movb
bswap
pusha
mov
jmp
lea
movb
pushf
setbe
mov
pushf
pushl
lea
ja
pusha
pushf
pushl
pushl
lea
jb
pushf
clc
test
call
movsbw
mov
call
imul
call
add
inc
js
je
jb
arpl
jae
movb
movl
push
jmp
pusha
lea
je
pusha
call
movl
pusha
movl
movl
pushl
pusha
pushf
lea
jmp
pusha
lea
jb
pusha
cmc
cmc
cmpb
push
lea
jne
rol
or
sub
mov
stc
stc
test
cmc
add
push
jmp
push
cmc
sub
mov
cmp
push
not
cmc
movb
bt
sub
jmp
call
jmp
movw
movb
lea
je
pushf
lea
jno
not
lea
push
movzwl
not
lea
pop
bswap
mov
jmp
stc
add
pushf
cmp
lea
pusha
mov
movw
jmp
leave
adc
xchg
movb
xchg
xchg
mov
xchg
xor
mov
and
and
lcall
mov
and
xchg
mov
jg
fisubrl
shll
xlat
or
mov
pop
aas
das
xchg
pusha
cmp
not
lahf
not
lea
setl
not
mov
push
pushl
jmp
jns
int3
and
add
sub
es
push
mulb
popf
flds
mov
fs
sub
or
add
repz
rorl
jmp
jge
dec
out
nop
je
out
rolb
fnsave
stos
cmp
mov
or
addr16
pop
cmp
fdivrl
fsts
and
ds
or
nop
pop
dec
adc
out
jo
sbb
xchg
sar
jno
dec
push
rcrb
scas
add
mov
shrl
insl
pop
dec
cmpsl
dec
mov
jmp
xor
shrb
dec
pop
push
lea
jb
call
and
fsubrl
es
fsubrp
into
xchg
sub
and
jl
in
jl
outsb
add
insl
icebp
lock
fcoms
jo
movsb
sar
lock
into
inc
mov
sbb
lsl
imul
sbb
int
mov
test
jns
and
pop
les
mov
push
fiaddl
add
and
and
mov
jp
call
test
mov
jmp
mov
lea
call
push
mov
push
lea
jne
call
call
enter
mov
mov
cmp
daa
mov
fistpl
add
dec
push
cmp
idivl
cmpsb
push
ds
mov
push
sbb
hlt
loop
lea
xchg
cmp
lret
ljmp
lods
mov
hlt
decl
push
dec
int
inc
xchg
daa
jmp
inc
dec
ficoml
pop
cmc
fldl
sti
cmp
mov
push
out
test
jnp
mov
test
cmp
inc
shll
push
jb
cs
mov
movzbw
lea
pushl
movl
pusha
mov
mov
push
movb
pushl
ret
mov
jg
mov
sbbl
mov
xor
pop
fistps
dec
or
call
mov
icebp
inc
pop
fldcw
data16
out
cmp
mov
sar
pop
into
inc
lret
lds
xchg
sbb
and
push
jno
aad
loope
or
sub
rorb
mov
stc
popf
vfrczpd
aas
xchg
in
fs
call
jmp
lea
jbe
shld
clc
lea
sub
sub
bt
stc
push
mov
inc
neg
mov
adc
add
stc
shr
shl
adc
shl
mov
dec
bts
xor
jmp
jo
negb
cld
and
test
nop
in
shrl
dec
pop
cltd
or
pop
xor
mov
xchg
push
fwait
mov
cmp
and
lods
fwait
inc
aas
mov
sbb
icebp
xor
adc
sbb
push
addr16
mov
iret
sbb
mov
pop
pop
lods
xor
and
bnd
lods
xchg
add
or
push
xor
push
mov
inc
and
ljmp
cmp
pushl
call
xor
xchg
sbb
or
cmp
bound
pop
lret
push
stc
and
xor
sub
lret
das
jae
add
cs
adc
sbb
push
and
scas
out
cmp
mov
imul
ljmp
addl
sbb
inc
nop
push
push
scas
or
pop
out
sbb
mov
mov
test
dec
jo
inc
cs
test
ja
jp
loop
loop
lret
or
es
outsl
jmp
jl
sub
push
sub
push
fdivl
jns
push
sahf
mov
push
arpl
add
cmpsl
in
pop
cmp
out
gs
pop
xor
cwtl
push
pop
add
call
ds
nop
in
mov
ljmp
daa
lods
pop
imul
jns
inc
movsb
xchg
test
mov
pusha
rep
call
test
pusha
movb
lea
je
add
neg
add
push
bsr
mov
call
pusha
ror
clc
pusha
jmp
lea
je
pusha
mov
lahf
pusha
mov
bswap
lea
call
xor
sbb
faddl
loopne
cmp
int
andb
fiaddl
cmpb
fisubrl
pop
sarb
adc
jge
cmp
bound
ret
and
xor
and
push
out
xchg
inc
mov
sub
mov
rcrl
rorl
loop
je
push
or
xor
adc
jmp
adc
je
and
xchg
stc
mov
mov
push
int
mov
aam
xor
gs
mov
add
push
movb
pusha
lea
je
pusha
test
add
mov
push
pusha
lea
jmp
add
cmc
test
mov
cmc
cmc
test
jmp
dec
pop
aas
sbb
sbb
divl
pop
xlat
fbstp
rcrb
cmp
push
les
daa
inc
lahf
add
dec
sub
sub
inc
ljmp
jns
cmp
in
jnp
sub
pop
or
fcmovne
pop
add
movsl
lock
jnp
in
bound
sarl
push
test
add
outsb
adc
and
adc
popf
nop
push
jmp
sbb
in
jo
fcomps
xor
push
mov
mov
push
inc
jp
pop
je
mov
insl
jb
ret
adcl
pop
jmp
sti
adc
inc
fsts
sbb
pushf
cwtl
mov
jge
mov
mov
pushf
mov
push
pusha
pushl
pushl
lea
jmp
call
lea
call
push
pushf
jmp
or
je
mov
pop
sar
or
aas
cmpsl
push
scas
iret
pop
aad
inc
push
fs
xorb
inc
js
sbbl
movsl
cli
cmpsl
gs
add
dec
sbb
jmp
mov
sbb
push
or
sub
enter
into
xor
outsb
jo
xlat
cmp
loop
and
out
out
inc
add
test
out
sub
xchg
push
cwtl
or
in
lods
mov
aam
pop
call
jmp
pusha
push
movb
pushf
movl
call
jmp
imul
pusha
cmp
push
pushf
add
pushf
movb
lea
jmp
mov
lea
ja
pushf
pushl
jmp
call
cmpb
jmp
lods
lock
lret
push
or
and
mov
push
push
int
cltd
cmc
and
ss
mov
jb
add
mov
shrl
addr16
addr16
push
cmp
jo
ret
insb
push
cmp
shl
xchg
add
push
pop
addl
shr
jl
or
sub
push
and
or
das
rolb
mov
jg
xchg
adc
incl
scas
in
sub
insl
lcall
gs
inc
pop
out
ja
test
loopne
mull
adc
push
mov
adc
pusha
mov
lahf
xor
cmp
fldenv
inc
insb
sbbb
es
fcomps
dec
pop
cmp
and
lock
mov
nop
pop
inc
js
daa
push
pop
inc
aas
mov
ret
xchg
es
into
xor
or
or
mov
imul
lret
ficoms
or
not
push
jmp
lea
jne
pushf
pusha
inc
jmp
lea
jae
pusha
push
pusha
lea
jmp
jmp
jge
jmp
ds
xor
outsl
bound
or
sti
cmp
jge
lcall
or
insl
inc
pop
lods
call
cmp
scas
xor
mov
inc
pop
jns
fstps
or
cmpsb
out
add
cmp
jle
cmpl
test
mov
mov
in
xor
shld
pop
pop
adc
xchg
fcoms
hlt
jle
jle
push
adc
icebp
testl
sbb
add
clc
stc
call
cmp
pushf
lea
ja
call
imul
mov
pusha
add
movb
lea
jmp
stc
jmp
je
adc
inc
xchg
les
je
add
xor
pop
or
js
lea
call
jmp
lea
ja
call
xchg
pop
pop
mov
sbb
repz
outsl
popa
add
pop
adc
adc
call
stc
hlt
aad
and
cmp
mov
pextrw
js
imul
jo
ds
mov
cmp
je
rolb
push
stc
push
aas
aas
pop
pop
jae
xor
repnz
or
pushf
lea
jae
push
movb
mov
pushf
dec
inc
setb
pusha
mov
lea
pusha
pushf
pushl
movb
lea
call
push
lea
jne
adc
jmp
pusha
pushf
movl
pushf
movl
push
push
pushf
push
lea
jmp
movb
movl
call
cmp
pop
not
call
xchg
sub
decb
lret
sarb
int
negl
dec
rcrb
add
icebp
dec
push
mov
repz
mov
and
lods
push
sahf
scas
mov
sub
ljmp
jg
mov
shlb
stos
pop
in
jns
mov
mov
andb
dec
enter
lret
lcall
in
and
jnp
xchg
adc
rcrb
clc
jae
lea
xlat
lret
arpl
in
inc
and
dec
sti
and
testl
jmp
and
fcoml
cmp
adc
repz
push
int3
inc
rcl
mov
sbb
jns
cmc
push
lea
aad
cmc
mov
sbb
insl
lds
pop
mov
adc
and
push
std
xchg
fucomip
das
test
sbb
cmpb
jmp
push
fsubrl
lock
and
sub
and
ds
repz
or
subb
xchg
mov
fdiv
test
jo
pop
xchg
nop
cld
mov
int3
push
xchg
sbb
loop
push
sub
dec
das
mov
push
ret
xor
add
and
out
das
jge
push
or
and
pushf
lcall
lock
sub
cld
xlat
cli
in
lcall
mov
shr
int
scas
sub
mov
outsb
sbb
fsts
lcall
aas
sub
mov
jge
pop
pop
sti
sub
or
test
bsf
adc
and
xor
or
add
rol
stc
mov
clc
add
not
setne
mov
call
push
lock
std
std
test
insb
xor
dec
ds
leave
fildll
mov
pop
mov
xor
stos
sbb
jge
sub
sar
dec
inc
dec
and
aam
pop
into
add
in
cs
test
sub
mov
cmpsb
push
arpl
xchg
push
movsb
xchg
lds
int
imul
pushf
adc
dec
mov
mov
in
popf
xor
and
fiaddl
xor
sarl
movsl
aas
cltd
jp
inc
nop
into
cmpsl
notb
fwait
inc
jbe
cmpb
es
xchg
aas
sbb
imul
push
push
mov
mov
lods
jbe
adc
stos
and
and
ja
testl
push
notb
xor
sub
sahf
enter
jae
scas
aad
cmp
fimuls
ret
jbe
jg
in
in
ss
jne
xchg
hlt
les
and
and
lret
popf
les
inc
inc
icebp
repz
dec
sarb
xchg
cmp
shr
and
repnz
test
hlt
les
push
rcll
bound
push
jbe
aad
iret
xchg
gs
in
push
xchg
sbb
mov
push
xchg
dec
add
xchg
xor
jne
call
sti
push
into
add
inc
adc
fists
xchg
bound
inc
dec
cmpl
repnz
test
cmpsb
add
test
xchg
xchg
and
jns
cmpsb
sub
push
inc
push
negl
mov
popf
cmp
push
inc
scas
mov
cmp
xchg
sarl
and
add
dec
int
inc
sbb
mov
mov
idivl
ret
aaa
cmpsb
push
loop
sarl
mov
aad
mov
cltd
cld
sub
pop
enter
pop
mov
test
mov
pop
dec
dec
ja
add
iret
mov
test
jae
xchg
inc
loopne
jnp
jns
les
ret
mov
cmpsl
mov
stc
inc
inc
int3
fcmovnb
and
in
lcall
push
cmp
rorl
jp
sbb
cmp
jp,pt
mov
inc
es
push
add
mov
dec
lds
into
scas
scas
push
mov
in
push
imul
notb
sbb
enter
and
aas
gs
out
data16
aaa
in
lahf
xchg
lock
jge
pop
scas
jle
mov
je
and
xchg
cmp
inc
sbb
pop
loop
mov
cmc
insb
sahf
cmc
push
sar
push
in
xchg
mov
lcall
mov
in
add
and
push
outsl
incb
in
jno
push
lahf
cmp
cmpb
pop
mov
rorl
xchg
xchg
in
sbb
dec
mov
jbe
sysexit
dec
in
cmpsb
pop
adc
push
and
and
pop
leave
xor
les
cmp
test
mov
out
movsb
icebp
out
gs
es
lock
lea
es
aas
push
outsb
dec
loope
fimuls
dec
daa
gs
sbb
pop
rclb
ja
push
cli
xchg
xchg
xor
stos
fiaddl
mov
fucomip
incb
shlb
stos
enter
push
loopne
aas
xor
data16
inc
xor
and
mov
shll
dec
xchg
or
std
xor
add
inc
insl
into
nop
mov
into
dec
and
ret
into
add
mov
xlat
and
adc
inc
or
push
scas
jecxz
jp
imul
push
dec
clc
movsb
jle
pop
test
pop
xchg
test
cli
loop
cwtl
push
mov
test
es
jo
cwtl
test
scas
out
adc
pop
rcll
fdivl
cmp
iret
aad
cmpsb
popf
sbb
inc
sbb
out
push
add
sub
ljmp
loopne
cmp
xchg
pop
ss
les
fiadds
dec
xchg
lods
ljmp
lcall
jge
call
xlat
xchg
sbb
addb
ret
fwait
shl
xchg
repnz
xorl
jno
leave
shl
mov
aad
cwtl
notl
repnz
add
mov
testl
addb
ja
add
push
inc
je
mov
adc
xor
push
rorl
divl
xchg
cmpsb
pop
add
push
testb
or
popa
mov
ja
push
fimull
xor
data16
enter
cmc
jae
sub
daa
into
jno
mov
stos
aas
add
and
cmp
lahf
and
fsubl
in
aas
cmpsb
cli
scas
pop
ja
in
xor
jne
out
out
push
jecxz
and
and
mov
jbe
xchg
jge
xchg
out
cmp
and
sub
icebp
sub
int3
pop
sar
jecxz
mov
pop
fildll
in
dec
out
call
sbb
jp
test
xchg
jecxz
cmp
push
into
dec
aad
sti
mov
dec
jmp
mov
jo
sbb
xchg
jbe
xchg
insl
jecxz
imul
cmp
dec
xchg
adc
pop
mov
push
add
les
cmpsl
mov
adc
jecxz
iret
inc
inc
stc
or
out
xchg
mov
sbb
sahf
sarb
and
sarl
mov
loopne
lds
push
stos
xchg
aad
enter
fwait
cli
cmp
jmp
aam
in
mov
jbe
stos
xor
test
adc
rcl
std
pop
into
or
loop
xchg
cltd
cmp
push
pop
fnstcw
mov
mov
xchg
jl
fsubs
mov
cmp
lods
popa
lods
outsb
dec
push
jp
xor
adc
jl
gs
push
cld
ds
push
ja
cli
rep
or
and
add
in
add
cmpsb
add
out
vmovss
mov
js
decl
dec
mov
dec
fsincos
ret
jbe
jmp
mov
ret
sarb
fisubl
in
and
xchg
inc
push
push
fcmovu
xlat
lods
test
ja
add
enter
rol
addr16
mov
mov
push
add
fwait
aaa
rorb
call
notl
mov
shl
in
pop
wbinvd
iret
int
bound
icebp
test
out
psrlq
jmp
pop
ret
cltd
jo
mov
cli
sub
cs
sub
shll
scas
and
sbb
or
push
xor
cmp
or
gs
sbb
cmpsb
xchg
aaa
fildl
fimull
ja
mov
cmp
xchg
les
push
fs
rcr
and
fwait
add
xor
mov
inc
cmpsb
mov
jp
les
adc
test
shll
arpl
push
int3
push
aad
int3
rol
scas
jp
jg
cmp
rolb
repz
sahf
adc
cwtl
jbe
jp
or
lods
sbb
mov
loopne
gs
adc
lds
cli
ffreep
mov
mov
enter
stos
rcrb
xor
xchg
mov
stos
ja
push
adc
push
loopne
clc
sbb
and
push
sahf
adc
mov
ret
loope
mov
push
xor
jbe
and
sti
loop
pop
xor
movsb
mov
mov
inc
or
ret
int
stos
jl
lock
ljmp
or
adc
fwait
inc
pop
mov
mov
and
cmc
adc
fwait
in
add
ret
int
sub
push
call
cmpsl
xor
mov
fmull
dec
cli
mov
pop
push
push
in
push
mov
movsb
inc
hlt
fstp
sarb
cs
inc
add
cmp
mov
daa
int
mov
aad
cwtl
lahf
pop
pop
out
fcmovbe
pop
call
ss
sbb
aad
gs
cmp
or
pop
lahf
popa
cmc
les
imul
xor
outsl
loope
shr
mov
aad
test
sub
push
mov
shrb
push
adc
mov
add
mov
int
push
jle
jno
xor
es
xchg
mov
test
ds
icebp
mov
iret
jbe
pop
mov
shrb
dec
mov
test
xor
out
mov
dec
xchg
push
es
pop
mov
dec
cmpsb
hlt
mov
loope
sarl
add
dec
adc
push
les
xor
bound
jbe
push
cmp
push
inc
jns
mov
push
in
mov
sub
data16
inc
dec
pusha
out
adc
int3
fstpt
mov
bound
mov
movsl
mov
scas
ljmp
xor
fdivrl
push
bound
ss
roll
push
fbld
jp
cltd
add
jns
roll
cmp
xor
push
cmp
mov
add
decl
nop
jp
mov
lock
cmp
je
xchg
xor
push
rcll
mov
scas
int3
mov
ret
pop
mov
inc
xchg
sub
mov
movsl
in
scas
hlt
les
mov
push
or
arpl
xchg
inc
jno
and
dec
fmulp
rolb
cmp
es
out
dec
mov
test
cmp
adc
bsr
sarl
pop
loopne
ffree
sub
cltd
cs
sbb
ss
xchg
div
int
sub
mov
fdivrp
sub
xor
pop
ds
loop
mov
push
jle
fiadds
repnz
lret
rcr
push
and
ds
xor
xchg
jnp
jecxz
push
fidivrl
out
jge
clc
jle
leave
dec
xchg
cmp
mov
int3
lock
mov
pop
cmp
std
lcall
cmpsl
fwait
jno
or
mov
mov
fs
sbb
cld
dec
std
and
adc
pop
sub
and
imul
fwait
inc
incl
push
cmpsb
mov
jbe
push
pop
outsb
into
clc
gs
push
out
push
in
imul
pop
ds
neg
ja
cli
loope
pop
ds
add
lret
cmpsb
mov
bound
and
cmp
push
push
shrl
jp
cmp
inc
mov
mov
stos
xchg
jae
push
in
xchg
lods
sub
aas
push
mov
xor
ret
loope
popa
lret
jl
cmp
pop
fidivrs
jbe
pop
fstps
aaa
cmp
push
ja
loop
mov
out
outsb
sbb
outsb
test
sbb
xchg
jmp
ds
sbb
je
mov
push
add
shlb
hlt
mov
loopne
mov
pop
add
or
push
mov
mov
mov
pop
fdiv
xchg
xlat
push
jns
cld
iret
cld
rcr
movsl
push
in
dec
cmpsl
jbe
xor
rorl
pop
dec
call
arpl
jae
cmpsl
int
leave
pop
gs
repnz
inc
in
adc
add
bound
enter
fstl
cmpsb
movsl
add
xchg
stc
xchg
popf
popf
adc
into
test
jbe
sbbl
jne
push
fbld
ror
sarb
iret
into
pop
ja
fisubs
jp
pop
hlt
scas
shrl
jle
mov
cmp
imul
out
addl
inc
js
rorb
xor
pop
js
push
jg
dec
in
and
repnz
mov
sbb
outsb
stc
int
push
sarb
lret
jo
popf
call
fisubrl
je
dec
out
in
sub
mov
and
dec
push
pop
andb
mov
jb
jo
clc
jnp
jb
popa
or
rol
int3
lds
push
push
es
dec
mov
inc
cmp
test
repz
test
mov
ja
and
test
adcl
dec
fdivs
mov
add
out
ret
sahf
lret
or
fcomps
fcomip
shlb
push
push
push
movb
ja
in
hlt
sub
sarb
pop
gs
add
jg
cmp
xchg
movsb
sub
incb
sbb
sbb
mov
pop
test
xor
in
rorb
pop
fnclex
ja
loopne
aad
sbb
outsl
xor
or
jbe
ret
daa
push
push
xchg
lahf
xor
into
leave
add
jg
lret
test
aas
pop
gs
push
inc
fisttpl
ja
inc
sub
push
fneni(8087
add
xchg
out
cltd
pop
mov
xchg
and
repnz
cmpsl
sbb
fcmovnu
ja
xor
push
or
mov
mov
dec
popa
stos
xor
pop
roll
jge
into
push
push
push
pop
adc
cmpsb
push
stos
cmpsb
dec
mov
xlat
fistps
jge
testb
les
aad
fs
fldcw
inc
shr
ljmp
aam
icebp
mov
add
mov
clc
je
ja
inc
or
sub
xchg
mov
mov
jp
shrl
rolb
jne
xor
cmp
jae
mov
mov
gs
data16
push
xchg
cltd
shlb
push
loop
jb
divl
adc
inc
cltd
imul
xor
std
int
rcrb
cmp
gs
ja
mov
cs
xor
jo
bound
jnp
jmp
cmpsl
cli
popa
idivb
push
mov
jns
dec
movsl
out
xchg
xlat
mov
gs
jecxz
sub
mov
mov
test
lea
sbb
loope
jbe
repnz
fcmovnbe
out
pop
xchg
adc
iret
pop
js
enter
iret
addl
mov
add
mov
dec
push
into
es
es
cmp
xor
cltd
xchg
push
xchg
xchg
pop
pop
shr
popa
data16
out
ds
ss
xchg
aad
push
scas
addb
jbe
xchg
ss
xor
adc
mov
fmul
gs
push
jle
mov
popa
and
push
mov
sub
cld
pop
fistps
daa
pop
xor
inc
mov
mov
jo
cli
shll
fsts
gs
dec
mov
xchg
cmc
fcmovu
sub
fimuls
ror
clc
push
sub
mov
repnz
and
int
imul
sbb
mov
ss
push
xchg
and
pop
subl
jbe
fisubrs
cltd
and
imul
push
push
push
in
mov
ja
inc
mov
pop
dec
dec
sbb
push
sub
adcb
cmp
sub
cld
bound
cmp
jnp
dec
fwait
bound
mov
std
jae
mov
fimuls
jns
mov
jae
jno
sbb
xor
cmpb
les
pop
pop
mov
sarb
aam
cmpsb
mov
out
fwait
inc
sub
loop
stos
in
cltd
inc
loop
xor
fmul
push
int
bnd
inc
cltd
xchg
rolb
out
push
xor
test
add
shlb
pop
scas
cmp
int
xor
xor
mov
pop
bound
cmpsb
in
and
loope
mov
adc
or
shr
ret
iret
jno
sub
es
into
jbe
and
in
mov
test
lods
rclb
adc
cmpsb
es
iret
dec
xchg
in
cli
sub
push
mov
cwtl
mov
dec
dec
rorb
cmpsb
pop
je
enter
lret
mov
std
or
inc
out
ret
adc
jge
out
std
xchg
leave
icebp
xor
xlat
cmp
js
lods
dec
int3
stos
push
sbb
fwait
fs
jmp
ja
hlt
rolb
mov
mov
mov
arpl
cmpsl
xchg
int3
aas
lcall
mov
popa
fwait
mov
adc
xchg
ss
mov
adc
in
sub
sub
or
cmc
andb
sbb
scas
jbe
dec
ja
cmpsl
push
pop
cwtl
mov
loop
ja
std
or
mov
ss
lds
xchg
stos
mov
aam
xchg
pop
mov
mov
aaa
mov
sti
xchg
jbe
std
adc
loope
out
push
test
push
lock
jle
into
ficoml
outsl
ret
mov
jle
fcmovnb
and
jmp
arpl
addb
jmp
in
gs
xor
or
inc
hlt
add
rcrb
sbb
loopne
out
and
inc
sub
in
inc
sub
or
decl
push
jle
inc
add
inc
add
jnp
adc
inc
out
mov
xor
adc
cmpsb
into
xchg
pop
inc
shr
sti
shll
ret
shl
lds
test
sahf
and
pop
cmp
aas
pusha
jle
call
mov
movsb
xchg
mov
push
pusha
or
lret
bound
and
pop
inc
mov
add
aad
inc
push
push
push
adc
mov
mov
sub
test
clc
aas
sahf
pop
add
fcomp
xor
fcomp
add
cmpsl
push
mov
mov
mov
pop
sub
sbb
pop
dec
out
out
int3
mov
mov
push
xchg
xor
jge
aaa
xor
mov
pop
or
ret
xchg
lret
or
pop
xchg
cmp
stos
jp
movsl
xor
and
inc
les
jge
jbe
jbe
in
pop
ficomps
fs
into
std
aaa
fsubs
sbb
loop
cwtl
sbbb
cmp
shr
cmpsb
mov
xchg
sbb
lods
jmp
repnz
aaa
inc
xchg
xchg
into
xor
sub
jge
in
int3
fcomps
inc
cli
aad
shll
mov
addr16
ss
xor
push
lret
or
data16
rclb
xor
gs
ja
pop
xor
dec
jb
lds
add
lock
inc
sub
fadds
mov
mov
lock
inc
mov
push
mov
mulb
and
jg
dec
xchg
xor
stos
push
mov
xor
bound
es
movsl
jp
push
push
lret
inc
pusha
jno
fs
loopne
aas
jae
lea
popa
std
fisubrl
push
cmp
ficoms
pop
cmp
scas
and
hlt
out
iret
cmp
std
aaa
shl
mov
jmp
jo
ds
jnp
pop
popf
fchs
mov
jp
and
into
scas
cmp
adc
push
mov
cld
push
out
dec
aaa
test
sub
and
lds
fistps
lret
jbe
lret
push
cli
and
loop
bound
pop
mov
mov
push
lea
and
inc
mov
jne
insl
adc
push
test
cmc
loop
lahf
in
loopne
out
mov
ret
ja
xlat
andl
or
mov
sub
xor
aam
cmpsl
jmp
adc
mov
mov
cwtl
mov
mov
cld
jp
lret
add
adcb
loopne
jnp
aas
and
loop
jno
or
add
aad
or
call
push
es
xchg
gs
cwtl
add
jmp
repnz
lods
pop
and
pop
js
mov
lret
jnp
cmc
cld
ja
push
jb
js
je
or
inc
imul
cmp
lock
loope
mov
mov
aas
into
sub
xchg
shlb
aaa
lock
test
dec
repnz
cltd
jmp
mov
addr16
or
popf
mov
and
mov
fwait
bound
mov
bound
add
xchg
jp
sarl
dec
push
les
push
pop
add
setg
pop
fstpt
outsl
clc
pop
jp
iret
mov
aaa
cmpsb
push
add
or
mov
mov
jbe
out
dec
sub
ja
or
into
ja
push
mov
leave
xor
and
mov
int3
shrl
mov
push
xorb
sub
gs
iret
mov
nop
mov
sbb
push
dec
int
arpl
cltd
test
jae
idivb
loopne
popa
xchg
fs
mov
shlb
or
mov
adc
into
jecxz
mov
adc
popa
jno
pop
inc
stos
xlat
out
pop
mov
gs
adc
js
mov
movb
mov
push
xchg
and
or
xor
push
cmp
loope
mov
xchg
std
pop
and
xchg
insl
cmp
dec
cli
sti
and
jo
adc
fiadds
ds
inc
fidivs
scas
lds
lret
pop
jo
add
in
sbb
mov
xor
out
pusha
xor
xchg
lock
push
in
cmp
mov
lock
fwait
pusha
jecxz
out
int
adc
out
out
mov
push
out
push
sbb
sbb
in
dec
nop
jbe
dec
cmp
in
popa
aad
jo
rorb
xchg
or
dec
add
push
dec
ss
push
and
mov
je
push
cmpsl
adc
pop
ss
add
out
int
cmpsb
les
iret
mov
es
adc
mov
inc
addl
push
mov
mov
loope
rcrl
loopne
mov
mov
dec
xchg
mov
mov
out
jg
out
push
loop
push
cmpsb
lds
push
cmc
push
sbb
jbe
pop
push
es
mov
push
inc
ja
add
mov
ja
frstor
inc
vorpd
pop
jle
cmp
pop
outsb
cwtl
xchg
into
xchg
loop
jp
jecxz
rolb
xchg
mov
xlat
cmpsl
lahf
fwait
aaa
sub
mov
out
mov
popa
aas
enter
arpl
imul
ret
inc
cli
iret
jb
pop
add
mov
jle
shlb
sbb
rcrl
mull
push
push
ljmp
mov
fwait
pop
cmpsb
aas
push
mov
lods
imul
sub
aam
fldt
mov
icebp
arpl
dec
or
xchg
outsb
or
cmp
and
je
shlb
pushf
arpl
adc
es
inc
outsb
out
aam
pcmpgtw
sahf
push
xchg
or
push
jnp
mov
push
mov
daa
sbb
add
fsubs
pusha
xor
adc
jns
icebp
mov
jmp
push
daa
jp
shlb
in
adc
mov
or
push
dec
mov
xchg
push
rol
xor
inc
ss
shll
fstps
lcall
xchg
push
cmp
das
pop
sub
in
mov
leave
add
ret
int3
ja
cwtl
pop
movsb
jp
pop
push
or
leave
in
push
cltd
push
dec
xlat
cwtl
subb
dec
inc
xchg
test
ficoms
pop
adc
xchg
fisttpl
shl
fistpll
inc
pop
out
xor
adc
sbb
cmpsb
scas
sub
push
cwtl
ds
outsl
add
lods
xor
xor
enter
pop
repz
rclb
jbe
lret
lods
test
xchg
xor
shrl
mov
in
lret
movsl
push
push
out
or
enter
lret
imul
gs
mov
or
gs
jbe
das
scas
pop
inc
mov
in
xchg
and
pop
je
fs
stos
add
out
rcrl
inc
xchg
stc
inc
ja
adc
dec
fwait
aas
jp
inc
lods
lret
push
iret
jmp
into
lods
arpl
repz
xchg
rcrb
fidivs
inc
ljmp
leave
cli
fbstp
jns
mov
into
dec
push
inc
jecxz
mov
shrl
std
jae
cmpsb
fwait
or
adc
xorb
or
adc
xchg
jnp
in
gs
push
or
gs
mov
push
leave
fcmovnb
xor
xchg
inc
es
mov
mov
outsl
mov
iret
loope
pop
xchg
decl
movsb
jecxz
es
push
sbb
add
fdivs
cmp
inc
pop
dec
xor
addr16
lea
cmp
lods
ficomps
and
loop
notb
movsl
lock
jle
js,pn
mov
mov
ja
flds
sbb
fwait
out
pop
loope
lcall
mov
mov
out
les
bound
or
test
pop
pop
imul
pop
std
xor
mov
jne
imul
rorw
mov
inc
mov
jle
push
jmp
aad
jnp
sbb
sub
aaa
orb
mov
lds
out
mov
inc
in
jecxz
inc
xchg
inc
repz
inc
cmpsb
mov
mov
push
pop
adc
jb
and
adc
rol
and
xor
sub
inc
std
mov
ss
stos
xchg
add
into
std
and
cltd
cmpl
fcmovbe
mov
jbe
dec
sbb
aad
or
add
stos
jbe
xor
sahf
fs
xorl
jbe
cmp
push
inc
icebp
inc
cltd
in
mov
cld
es
test
xchg
mov
loop
jle
lret
fisubrs
mov
inc
mov
pop
in
mov
sbbl
addr16
mov
and
jae
imul
xchg
jne
xchg
add
push
loop
into
push
loope
mov
bound
lods
je
lock
loope
xchg
jmp
mov
fs
sbb
sub
add
mov
hlt
adc
pop
mov
xchg
js
jge
mov
rorb
stc
mov
push
scas
call
movb
push
pop
gs
jns
pop
sbb
hlt
iret
in
insb
sub
sbb
or
movsl
mov
inc
outsl
cmpsb
stos
ja
mov
shrb
or
pop
sub
test
pop
pop
mov
or
xchg
cmp
ret
adc
push
sub
cmc
or
and
add
push
popf
and
cmp
xchg
stc
aad
add
ficoms
or
add
push
jle
xchg
push
sahf
push
mov
scas
inc
push
xor
aad
mov
divb
pusha
dec
mov
mov
shll
inc
dec
mov
pop
ret
fisubl
and
js
adc
and
aam
cmpsw
add
ficoms
and
cltd
pop
or
lods
dec
pop
fists
inc
rorl
divb
adc
push
mov
add
and
jl
ja
lea
cmp
rclb
adc
push
pop
ljmp
inc
inc
cmpsb
scas
mov
or
adc
rolb
jae
xchg
fimull
adc
mov
push
in
add
xchg
sbb
orl
xchg
sub
sbb
sbb
cmp
shll
sub
mov
mov
xor
adc
test
ret
and
sahf
xor
lcall
push
pop
lret
mov
pop
or
push
push
cmp
mov
push
repz
in
add
dec
clc
icebp
repnz
cmovns
ret
cltd
testb
inc
pop
push
sahf
ret
cmp
jne
inc
out
fisubrs
push
jb
ret
insb
mov
push
mov
jmp
add
cmp
cli
xchg
pop
sbb
movsl
or
mov
pop
xchg
mulb
popa
jns
jecxz
bound
cmpsb
dec
push
stos
cmp
fcmovne
loopne
xor
sbb
push
icebp
cmp
lahf
sbb
fisubs
clc
inc
loopne
cmpsb
push
cmpsb
out
inc
mov
mov
push
inc
inc
mov
in
push
arpl
int3
inc
call
jmp
or
sbbl
out
jo
outsb
add
push
adc
mov
lds
sarl
push
cmpsl
lret
cmpsb
fwait
icebp
notb
lock
mov
inc
lahf
pop
push
jne
pop
mov
mov
call
les
roll
pop
mov
or
jnp
inc
cmpsb
push
outsb
inc
mov
cmp
pusha
push
sub
cltd
cmc
outsl
aas
negb
cmovne
int
and
scas
xor
pop
sbb
fwait
jle
hlt
aad
in
xchg
mov
push
test
imul
cmc
adc
and
mov
inc
fcmovne
fiadds
mov
add
xchg
inc
pop
fs
and
aam
mov
or
mov
dec
dec
jb
cmp
push
gs
mov
push
xorl
out
das
inc
lods
icebp
movsb
rclb
jge
nop
ret
mov
pop
push
sti
je
repz
xchg
inc
add
aam
mov
ret
and
cld
and
fsts
movsl
sub
out
dec
push
cmc
aad
std
and
fcoml
mov
mov
in
dec
ret
sahf
inc
ret
add
jle
mov
std
pop
dec
test
jb
cmp
jmp
xchg
jno
and
cmpsb
das
xchg
shlb
inc
test
pop
dec
and
cld
xchg
push
gs
in
in
pop
mov
mov
sarb
sete
xchg
rorb
push
mov
dec
insb
mov
fs
cmp
das
pop
pop
add
xchg
pop
stc
loope
and
adc
test
jbe
testb
sbb
jbe
mov
mov
inc
lret
sbb
add
push
lds
popf
loop
cmp
lret
in
iret
cmp
adc
push
test
push
shl
push
push
push
adc
cmpsb
insl
cli
inc
iret
inc
int3
mov
mov
push
in
and
fstpt
test
scas
xchg
cwtl
mov
loopne
cmpsb
cwtl
fsubp
inc
clc
in
addl
cmp
mov
aas
push
xchg
or
or
cmp
cs
mov
shlb
jnp
ja
mov
repz
sbb
inc
mov
fwait
jecxz
pop
pop
and
inc
add
loopne
mov
les
adc
iret
xchg
ret
xchg
push
mov
andps
pop
jbe
cmp
mov
jl
es
jge
cmpsl
das
dec
call
fadds
push
decl
and
andb
push
xchg
fwait
xor
push
lahf
cld
inc
push
inc
xchg
nop
not
iret
ss
xlat
gs
jno
rolb
push
insl
cltd
adc
arpl
scas
in
xlat
cwtl
std
loop
push
inc
mov
mov
ja
jmp
xchg
fists
shll
aaa
push
ja
adc
test
lea
push
fistpll
jbe
aaa
or
in
cmp
imul
ss
stos
pop
push
sub
mov
push
xchg
inc
inc
or
mov
jbe
es
into
add
push
gs
mov
xchg
push
movsb
enter
xchg
out
xchg
hlt
push
mov
aaa
inc
sbb
daa
jne
jp
dec
jmp
repnz
gs
lcall
inc
cmp
nop
es
stos
cli
push
mov
xchg
fildl
xchg
adc
adc
dec
mov
mov
data16
shrl
rol
jg
ja
push
clc
in
jecxz
cmpsb
push
cltd
xchg
mov
fdivrs
scas
out
mov
pop
mov
mov
fldl
mov
mov
ret
iret
mov
scas
xchg
cmc
add
push
lock
push
int3
int
sub
pop
cmp
push
or
mov
xor
dec
inc
inc
in
jmp
mov
ss
push
mov
mov
rol
mov
outsl
repz
and
stos
push
jno
insl
stc
xor
push
out
dec
fisttpll
out
vpaddsw
mov
add
mov
xchg
add
lods
icebp
or
mov
aas
mov
into
divl
es
xchg
mov
or
sub
dec
sarl
or
xchg
rclb
mov
rorb
push
imul
int3
mov
shlb
gs
or
push
pop
lock
jp
sarb
stos
aam
ficomps
or
repz
cmp
add
adc
or
mov
adc
xchg
stos
xor
dec
jmp
jmp
jp
inc
cmpsl
fwait
pusha
and
into
bound
push
mov
fs
test
push
pop
roll
and
scas
mov
jl,pn
inc
dec
cmp
pop
shrb
sub
pop
jg
inc
into
xlat
xor
in
inc
and
xchg
roll
fwait
xchg
jecxz
shll
ret
jae
push
dec
bound
mov
das
pop
shll
test
mov
mov
mov
mov
ret
jbe
mov
or
add
in
cltd
lock
ss
fmul
in
out
add
push
jle
enter
mov
fildl
cmpsb
xchg
cmp
jmp
cmp
insb
mov
sahf
ret
push
push
mov
jo
lcall
pop
xchg
and
gs
cmp
out
push
fldl
cmp
es
fsubr
add
mov
mov
movsb
dec
and
leave
xchg
inc
ret
jbe
xchg
scas
rclb
movsb
mov
mov
push
loop
fsubr
test
pushf
andl
shr
jo
ret
imul
clc
push
mov
inc
outsb
mov
dec
jp
and
imul
outsl
cwtl
sbb
mov
add
js
idivl
mov
jl
stos
mov
sbbl
inc
out
imul
shll
inc
push
lret
xchg
int3
mov
xlat
push
das
xor
shll
pop
loope
out
inc
and
mov
movsb
lea
andb
aaa
xchg
fdivrl
lahf
rolb
mov
sbb
sub
imul
dec
rcrb
xchg
mov
mov
outsb
jg
jne
sarb
orb
add
aad
sarl
cmp
mov
push
cmpsb
inc
inc
mov
dec
dec
xchg
adc
stos
fdivl
out
xlat
mov
aas
in
ja
loopne
mov
xchg
fistl
jmp
int3
jg
push
aad
int3
cmpsb
fnsave
stos
addr16
ss
outsb
inc
inc
je
repnz
fildl
punpckldq
lods
mov
repz
out
out
xchg
push
mov
sbb
out
daa
push
xor
push
test
inc
lahf
jo
adcb
imul
add
loope
push
dec
and
aam
out
repz
mov
mov
insb
cltd
popf
xlat
or
js
cmp
fwait
push
loope
fnstcw
sub
sarb
fsubs
in
icebp
aaa
push
and
pop
inc
jmp
rcll
mov
adc
and
push
xor
dec
mov
cld
mov
xor
push
mov
pushf
cli
into
dec
xchg
test
aam
ret
push
outsl
cmpsb
jbe
loop
sbb
cmp
out
scas
out
xchg
dec
movsb
and
jl
orb
fcomps
ljmp
outsl
popf
loope
jb
std
xor
xchg
mov
fists
out
xchg
iret
add
cmp
je
mov
ja
push
outsl
sub
mov
mov
and
push
xchg
or
fstl
sub
or
js
lret
push
in
bound
out
cs
adcb
push
adcl
pop
pop
fnstsw
jmp
cs
rol
jbe
shll
cmpsb
mov
pop
sar
pop
lahf
es
add
in
jmp
pop
in
fbld
inc
mov
pop
aaa
pop
dec
sbbb
cmpsb
lods
out
push
jno
push
test
dec
push
ja
daa
shrb
xchg
fstpt
out
in
pushf
xor
xchg
xchg
cmp
mov
push
je
sub
mov
xchg
inc
out
call
lods
cmp
push
ja
add
mov
loopne
xchg
pop
int3
dec
vmovapd
sbb
and
pop
ret
jne
push
pminub
and
leave
jno
and
mov
int3
int3
dec
stos
jnp
pusha
inc
fidivrs
cld
out
daa
inc
xlat
adc
sub
mov
mov
gs
inc
sbb
cmp
cld
jmp
loopne
ss
bound
push
loop
or
cs
call
adc
push
js
xor
jle
inc
testl
mov
and
scas
fs
in
sbb
icebp
and
or
movsl
clc
dec
jne
xor
jbe
aas
outsb
repnz
mov
push
pop
mov
sbb
adc
mov
into
mov
xchg
iret
addl
xchg
dec
mov
scas
mov
ja
pusha
leave
dec
stos
dec
into
sbb
cmp
pop
insb
jge
repnz
scas
fisubs
enter
dec
shlb
adc
xchg
xchg
inc
cmp
add
inc
loope
pop
cltd
and
sub
pop
test
mov
inc
sub
enter
pop
cld
adc
gs
jbe
xor
mov
dec
mov
mov
imul
cmpl
aas
mov
mov
insb
and
adc
loopne
test
cmp
leave
testl
xchg
fs
dec
and
fisubrs
int
push
cmc
push
sub
bound
xchg
mov
aam
pop
bnd
inc
cmp
std
imul
fistps
aas
inc
mov
pop
sbb
cwtl
in
adc
pop
fiadds
and
xchg
jns
xchg
mov
xor
scas
ja
push
mov
nop
jecxz
mov
adcb
push
scas
daa
cmpsb
stos
inc
dec
fwait
jae
loop
sub
fs
popf
or
ret
popa
xor
adc
mov
cmpsb
bound
gs
add
jl
stos
xlat
punpckhwd
pop
out
adc
insl
cmp
ja
push
xor
ret
into
int3
add
movsl
dec
mov
xchg
sub
xchg
and
shlb
xor
inc
std
dec
daa
loope
mov
and
push
fcoms
pushl
xchg
xchg
add
adcl
inc
jecxz
and
cmp
xchg
jb
fwait
add
in
in
fiadds
or
ja
sub
or
sarl
pop
repnz
addb
sub
mov
cmp
xchg
add
icebp
sub
push
and
jle
ret
jno
mov
ja
jnp
mov
lret
inc
push
sbb
out
std
pop
cmc
mov
lahf
je
jmp
out
dec
fildl
and
xchg
loopne
pusha
dec
daa
and
outsb
jno
cmp
jns
test
xchg
mov
ss
hlt
pushf
add
fisttpl
into
jbe
push
and
xor
ja
shlb
sahf
lock
and
aam
mov
pop
fldpi
push
xor
shl
sbb
out
pop
ja
popa
jae
jle
xor
pop
ret
cmc
popa
xchg
lods
push
daa
jbe
bnd
loop
cmp
mov
je
jg
jbe
xchg
bound
jmp
lcall
pusha
rclb
xchg
popa
aas
pop
leave
mov
ret
xchg
cmp
push
rclb
ds
mov
xor
in
or
flds
divl
mov
sub
dec
push
out
stos
fstpl
jle
jge
stos
or
xchg
nop
xor
push
jo
and
in
aaa
loope
cltd
decl
xchg
lret
ds
mov
dec
or
popf
sbb
and
or
and
jg
add
shlb
outsb
cli
hlt
clc
push
xchg
into
jmp
ljmp
and
daa
dec
and
jnp
lcall
cmp
mov
sub
mov
outsl
sbb
sarl
addr16
push
mov
xlat
xchg
pop
cwtl
ret
jbe
dec
movsl
mov
lcall
push
cmp
mov
jns
push
jbe
lret
fadds
int3
ret
lahf
dec
aas
loope
clc
gs
mov
cltd
and
sbbl
lahf
outsb
dec
jb
dec
rcrb
lret
inc
push
fwait
cmp
daa
cmp
dec
add
mov
iret
jg
xor
jp
cmp
mov
xor
mov
mov
cmpb
cmp
ficomps
sub
xchg
repz
push
pop
sub
aad
jbe
dec
and
adc
push
fisubrs
push
into
mov
mov
call
or
test
mov
je
cmp
pmuludq
fcomps
fisubrl
push
std
rcrl
fidivl
push
std
dec
gs
or
js
cmp
out
lods
int3
dec
jno
xchg
add
out
ljmp
mov
push
jns
adc
out
xchg
pusha
xchg
hlt
mov
ja
mov
and
inc
gs
sbb
test
cmpsb
clc
pop
dec
push
pop
push
or
jp
stc
ss
lods
push
dec
or
and
adc
cli
clc
mov
fisttps
stc
jo
jbe
lret
mov
pop
cmp
outsb
and
sub
push
int
gs
fnstcw
sti
push
dec
add
mov
ja
xchg
stc
js
lret
bound
or
mov
mov
icebp
adc
jge
mov
push
adc
push
push
push
push
pop
pusha
adc
push
push
popf
shll
pusha
mov
loope
lods
pusha
xchg
shlb
sub
cmp
mov
sbb
mov
cmp
rclb
jmp
push
push
push
pop
push
jno
sub
push
cli
scas
jmp
xor
fadds
ss
scas
push
dec
and
xchg
popa
sub
rorb
mov
and
push
push
adc
mov
rorl
jmp
xor
out
inc
ja
outsb
rcrl
icebp
fidivs
lock
jns
stos
add
cmpsl
jbe
sbb
repz
pop
push
aaa
jb,pn
js
sarb
and
addl
mov
test
insl
push
cmc
sbb
pop
ja
loop
rorl
cli
jno
test
iret
jg
push
jp
das
int3
jbe
stos
mov
in
mov
sti
mov
cmp
fwait
push
shrb
or
pop
imul
push
mov
sbb
cmp
dec
jge
fcoms
les
mov
dec
std
mov
mov
shlb
movsb
jl
sub
fcompl
pusha
test
in
int
add
mov
lret
mov
pop
inc
call
dec
and
popa
out
insb
mov
bound
cmp
mov
cmpsl
nop
jbe
mov
mov
clc
inc
test
fimuls
xchg
rolb
xor
shrl
loop
aas
in
xorl
das
add
inc
sahf
sub
adcb
sbb
xchg
aas
out
orl
das
imul
cmp
xchg
cli
push
xor
cwtl
pop
test
mov
testb
movsl
mov
jo
dec
fwait
std
sbb
cmc
lcall
fdivs
lock
inc
mull
xor
in
fwait
test
into
inc
dec
mov
aad
inc
hlt
mov
loope
mov
cli
mov
jb
pop
lods
movzwl
aad
pusha
push
mov
aaa
cltd
inc
rorb
inc
into
pop
movsb
push
or
sahf
mov
xchg
dec
xchg
pop
or
push
push
mov
dec
sub
shll
lods
lcall
test
dec
mov
push
mov
push
sub
into
dec
je
out
dec
or
dec
popa
mov
inc
shlb
rorl
jbe
sub
aad
insl
clc
mov
or
mov
or
rcll
mov
test
jge
imul
insb
and
mov
and
cmp
or
adc
dec
fsubs
shlb
or
rorl
xor
fnstcw
jnp
inc
push
add
xchg
inc
addl
mov
aad
ja
ja
ret
cmpsb
xchg
movsl
xchg
out
pop
lock
adc
mov
mov
jno
aas
dec
dec
addl
addr16
xlat
mov
xorl
rcrl
mov
ret
add
lods
rol
lock
movsl
xchg
jno
push
xchg
jno
in
loopne
mov
iret
les
xor
mov
adc
pop
cmp
mov
push
fldt
shrl
ds
or
jl
and
into
rcrb
mov
add
fimull
aad
icebp
aam
jge
scas
imul
sub
out
pop
notl
negb
cmp
pop
cmovb
push
int
test
mov
out
testb
push
add
or
cltd
push
and
mulb
mov
mov
add
cld
inc
add
ret
mov
mov
jb
cmp
ficoml
cmp
out
loop
mov
cltd
xchg
js
or
dec
arpl
out
jbe
into
sbb
in
jnp
ret
push
sbb
nop
daa
inc
jmp
aas
add
push
jb
aam
pop
pop
mov
popf
pop
mov
testl
xchg
push
or
ret
or
add
jmp
cmpsl
mov
adc
shl
frstor
mov
arpl
lock
adc
xchg
scas
fstl
inc
mov
sub
rcrl
push
mov
push
inc
gs
je
int
popa
repz
fwait
aas
sbb
pusha
shrl
dec
pop
andb
int
push
ja
shlb
divl
adc
sbb
clc
imul
iret
pop
push
cmp
dec
ljmp
sub
shlb
cmp
cmc
rcl
xchg
rcl
xchg
pop
arpl
dec
mov
cmp
mov
out
mov
mov
or
cmp
cmp
push
push
je
and
int3
or
mov
add
fldl
movb
xor
pop
out
xchg
lahf
adc
adc
andl
int3
add
call
cld
into
pop
jb
fwait
push
push
and
daa
or
in
sar
sbb
mov
imul
sarb
push
les
decl
cmpsb
dec
push
push
ja
dec
add
clc
mov
push
addr16
aam
gs
xor
jo
jno
push
inc
sub
or
fs
mov
jbe
push
out
std
imul
pcmpeqb
inc
scas
pop
push
mov
cmp
pop
xchg
loop
ja
dec
sbb
add
mov
fdivrl
mov
xor
inc
gs
pop
shl
ret
pusha
aam
test
add
jbe
jecxz
push
aaa
lds
in
clc
mov
fcmovne
fsts
pop
mov
xchg
xchg
jb
push
inc
cmpsb
fwait
xlat
xchg
add
mov
fwait
add
dec
ret
pop
add
xlat
rclb
jno
sti
and
sbb
push
loopne
and
fchs
and
fwait
xchg
nop
sarb
inc
mov
push
std
sahf
jnp
inc
je
cli
pop
cs
subb
jo
push
cltd
mov
push
and
push
movsl
jge
mov
test
sub
push
notl
push
mov
ja
out
mov
mov
xchg
test
adc
jbe
jle
pop
out
xor
push
push
cwtl
add
push
jo
mov
nop
inc
or
ja
push
lock
sbb
xlat
xchg
sub
stc
add
fmuls
in
pop
pop
sti
fidivrl
sti
dec
popf
inc
add
pop
mov
das
fisubl
mov
sahf
icebp
adc
fsubrs
xor
mov
aas
pop
ljmp
push
xchg
aas
push
mov
std
xchg
ret
xchg
sbb
lods
adc
aam
je
mov
dec
push
pop
and
lret
add
sti
mov
add
loop
dec
and
dec
push
ds
lcall
mov
fistl
lds
mov
dec
test
enter
mov
add
mov
je
into
xor
shll
fucomp
pop
jle
xchg
loop
es
xchg
daa
mov
stos
sarb
push
fmull
popf
into
fst
mov
fstpt
xorb
std
push
dec
lahf
mov
popa
dec
pop
int3
cmpsb
xor
cwtl
cmc
aam
mov
xchg
mov
or
pusha
mov
in
ret
mov
cmpsl
xorl
add
frstor
sbbb
pop
outsb
or
loop
inc
mov
insb
fcomi
jns
dec
scas
xchg
das
adc
sarb
add
cltd
xchg
gs
adc
xor
popa
inc
hlt
dec
fisubl
inc
mov
xchg
jns
out
testb
mov
push
push
ljmp
stos
ja
lock
and
fwait
mov
cmp
mov
addb
inc
loop
jl
xor
pop
rcl
cltd
jbe
ds
adc
arpl
aaa
adc
mov
sub
fldl
push
imulb
cmpsb
stos
call
mov
shlb
push
cmpsb
test
pop
insb
sub
loop
aaa
fbld
lds
jnp
loop
xor
enter
jp
stos
or
jge
inc
fnstenv
jp
bound
dec
iret
sbb
in
or
pop
outsl
inc
mov
mov
stc
mov
dec
in
outsb
clc
adcl
iret
adc
xchg
das
sti
and
cld
xchg
push
shl
outsb
adc
pop
sub
xchg
push
or
xchg
faddl
pop
aam
gs
and
mov
int3
ficoms
mov
adc
shrb
imul
xor
gs
add
mov
mov
pop
ja
pop
pop
push
pop
xor
sbb
push
and
in
xchg
add
mov
ja
in
sti
enter
cwtl
or
jnp
inc
test
push
jg
jnp
mov
xchg
addl
testb
inc
ret
or
ljmp
nop
dec
push
adc
and
push
and
xchg
xorb
cs
fisttpl
xchg
jp
pop
or
loop
cmp
pop
mov
imul
push
or
rol
test
jp
cmpb
cmp
inc
sub
faddp
mov
pop
inc
inc
in
les
cmpsb
inc
mov
mov
popa
inc
movsl
or
push
imul
xchg
bound
ficoms
push
xchg
push
rorb
into
add
inc
mov
setno
stc
fisttpll
ret
add
das
cmp
shrb
pop
cli
cltd
addr16
std
aaa
shlb
push
pop
iret
dec
test
push
dec
pop
lods
mov
insb
imul
movsl
loope
pop
or
dec
pop
cmpsl
cmpb
rorb
test
pop
scas
add
jbe
sbb
outsl
test
fwait
and
mulb
idivb
cmpsl
cmp
jne
adc
in
iret
in
jp
xchg
popf
mov
xchg
inc
mov
xlat
cmc
or
cmpsb
dec
shl
push
iret
iret
push
mov
or
mov
sub
enter
out
lea
xchg
daa
arpl
sub
cld
push
lds
insl
shlb
mov
xchg
mul
das
xchg
mov
inc
mov
aam
scas
ret
or
jae
in
add
fistpll
adc
fmuls
sbb
loope
add
aaa
xor
lret
dec
outsb
jle
cmp
in
adc
pop
out
xchg
adc
addr16
mov
addr16
enter
notb
mov
sbb
mov
jns
pop
cmpl
lahf
addb
pop
dec
ror
in
push
mov
ja
mov
in
dec
mov
add
mov
daa
mov
xchg
pop
bnd
sbb
ret
ret
mov
in
push
les
dec
lret
ss
ss
lret
fwait
xor
pop
dec
or
leave
test
sub
ja
xor
aas
ficompl
pop
dec
enter
lds
xor
cld
fistpll
addb
int3
je
xchg
fwait
aaa
pop
mov
pop
ja
nop
pop
add
dec
call
mull
leave
jg
andl
mov
dec
cli
jno
jle
jb
jne
out
push
in
mov
adc
stos
add
adc
adc
pushw
stos
pop
dec
jp
cmpsb
pop
push
sbb
movswl
lret
add
pop
or
mov
push
mov
inc
jle
ja
push
cli
lahf
ret
insb
mov
push
mov
divl
sbb
and
iret
xchg
enter
pop
pop
cs
out
rorl
rorb
ja
aad
es
jnp
in
incl
in
inc
xor
mov
insb
bnd
movsb
dec
push
repnz
mov
cmp
insb
nop
rclb
into
inc
dec
aas
dec
jo
aas
push
mov
inc
xchg
jge
jp
xchg
mov
or
xor
mov
or
das
push
movl
lock
pop
dec
or
push
xor
es
das
in
aam
stos
pop
int
idivb
shr
jne
push
stos
dec
push
bound
jecxz
rcrl
dec
and
mov
adc
nop
push
gs
mov
jp
test
jbe
sbb
xor
arpl
fcompl
pop
mov
mov
mov
xorl
je
jne
push
daa
mov
shlb
sub
out
jl
push
sbb
inc
loope
push
cltd
add
xor
jo
test
lahf
xor
jo
dec
jecxz
sub
clc
inc
push
rcrb
aad
add
out
pop
push
aam
push
rcll
pop
xchg
jg
xchg
mov
gs
cmp
test
dec
mov
xchg
ss
cmp
popf
je
add
pop
adc
idivb
subl
jbe
loopne
subb
xchg
test
inc
xchg
sbb
push
in
xchg
cltd
jg
xchg
bound
jge
aad
mov
fs
aaa
cmp
ljmp
cmp
or
pop
xor
sarb
dec
mov
add
clc
inc
pop
dec
adcl
mov
data16
stos
aad
pop
gs
sahf
push
aam
xchg
xor
push
clc
sbb
jl
xchg
movsb
mov
ja
mov
mov
mov
into
and
ja
mull
mov
cmp
sub
in
ret
movsb
frstor
lea
fisttpll
or
fldcw
push
shl
bound
idivl
out
sub
in
imulb
mov
dec
gs
dec
lahf
nop
jae
jecxz
cmpsb
pop
call
jb
fstpl
iret
cli
lahf
test
push
and
dec
xor
repnz
faddp
xor
sbb
inc
or
adc
jnp
fldl
shll
xor
gs
popa
ds
mov
mov
int3
mov
in
push
pushl
shrb
mov
mov
pop
pop
xorl
iret
jne
inc
sbb
dec
add
jns
lcall
adc
loopne
cmp
aaa
clc
mov
push
add
faddl
mov
jp
pop
sub
push
inc
mov
jg
cmpsb
ja
inc
lods
fwait
pop
andb
lret
faddp
adc
cmp
inc
mov
ljmp
into
jp
pop
icebp
inc
rclb
cmpsl
sub
insb
dec
xchg
cld
popf
sub
cmpsb
sub
inc
scas
ja
xchg
das
mov
adc
mov
sbb
jecxz
divb
push
and
shrb
add
enter
sarl
push
jae
push
gs
xchg
call
addl
and
enter
and
in
inc
ja
lcall
in
incb
std
mov
xor
aam
pop
inc
ljmp
into
xchg
xchg
push
rolb
popa
mov
inc
cmp
sub
dec
sub
mov
iret
push
lods
jle
mov
fmulp
lea
push
pusha
add
inc
jg
pop
mov
add
mov
rclb
fists
inc
bound
mov
rclb
stc
dec
xchg
push
adc
insb
popa
xor
or
icebp
lods
xor
xchg
jp
mov
ss
mov
fistpl
out
mov
lds
outsb
aam
dec
and
dec
jle
mov
ja
xlat
push
shll
mov
inc
cwtl
jb
and
inc
or
inc
dec
pop
sub
mov
ja
push
mov
hlt
inc
aaa
xchg
stos
imul
lret
roll
jg
fcoms
xor
andl
pop
stos
lahf
pushf
and
push
sub
jecxz
sbb
mov
inc
push
mov
push
xchg
adc
or
fidivl
mov
xor
ja
daa
inc
dec
test
xor
or
push
cmp
addb
sti
xchg
cmc
add
jno
push
int3
mov
repnz
mov
shrb
or
jmp
sub
bound
loopne
xlat
ds
push
ret
loope
xchg
sbb
jmp
int3
jbe
inc
inc
adc
ja
mov
repz
icebp
inc
push
mov
xor
pop
out
or
mov
mov
rolb
mov
outsb
popa
push
iret
roll
mov
mov
outsb
or
stc
dec
mov
ljmp
xchg
push
mov
ja
jl
fcmovnu
jbe
push
sub
xchg
sbb
ret
aas
aaa
int3
xchg
sahf
ljmp
lock
popf
mov
or
xchg
imul
pushf
es
ja
aas
jns
inc
and
add
jb
loop
rorb
imul
mov
pop
jecxz
out
push
cli
fs
mov
js
mov
xlat
fidivs
jp
jb
add
std
aaa
dec
or
xchg
pop
fisttps
sbb
es
nop
outsl
push
pusha
repz
dec
int
dec
push
ja
notb
adc
mov
xor
jl
in
pop
mov
stos
xchg
mov
mov
scas
mov
or
js
push
add
imul
pop
mov
cmp
push
aas
out
dec
jmp
jmp
ja
aaa
sbb
dec
in
xchg
aad
cmp
ds
repnz
and
cld
movsl
icebp
cs
mov
aam
push
aaa
lahf
jno
xlat
adc
and
mov
xor
push
aaa
push
nop
sub
in
cmpsb
push
inc
in
xorl
ret
push
push
leave
push
ret
cltd
jmp
fistps
mov
jnp
loop
ja
mov
pop
pop
lea
mov
nop
inc
or
xor
mov
insb
xchg
test
pop
cmpsl
fwait
pop
adc
test
clc
insl
add
push
out
and
popl
bswap
cmp
lods
stos
push
and
std
mov
ja
mov
add
inc
andl
xor
sbb
lcall
mov
loope
jle
ret
sti
adc
cwtl
ja
xchg
nop
gs
cmpsb
addl
adc
jno
push
rorb
incl
push
out
into
enter
sub
iret
jo
jecxz
leave
into
pop
ja
fnstsw
xchg
add
loop
inc
mov
out
testb
xchg
out
push
push
int3
cli
push
jnp
mov
sub
jge
mov
testl
cmpsb
inc
push
cmp
rorb
sub
sbbl
lods
mov
neg
roll
cmp
orps
es
ds
fildl
xchg
push
dec
inc
xchg
loop
in
fs
adc
fwait
or
fnstenv
scas
scas
in
inc
xchg
pop
fnsave
xor
clc
jmp
inc
xor
mov
xlat
push
scas
dec
push
xchg
cmpsb
mull
mov
pop
mov
in
js
hlt
fwait
inc
pop
sbb
fnstenv
push
inc
rolb
imul
push
jecxz
and
inc
out
iret
inc
loope
pop
loopne
dec
out
inc
mov
iret
mov
xor
insl
loopne
aad
inc
xor
dec
cmpsb
cld
out
push
xor
mov
inc
bound
xor
adc
xchg
mov
ds
loop
in
xchg
or
cmpb
flds
pop
adc
or
fidivrs
aam
in
mov
sbb
sbb
jmp
in
sub
jg
xchg
push
dec
dec
jp
dec
mov
adc
insl
cmc
jo
jb
idivl
scas
addr16
shlb
gs
addr16
cmc
pop
adc
pop
out
dec
cmp
sub
out
cmp
adc
sub
mov
and
aas
cmp
mov
pop
push
imul
jp
ret
ficoms
sbb
adc
sbb
mov
and
jmp
jne
in
gs
popf
mov
dec
dec
inc
daa
sti
pop
add
imul
sub
inc
push
jecxz
mov
lahf
or
je
scas
pop
jp
out
dec
incb
push
in
fs
bound
jo
adc
xchg
xchg
cmpsb
aaa
divb
into
ficomps
scas
stos
dec
decb
bound
loop
cltd
mov
cmp
push
push
inc
dec
jbe
xchg
rcrb
mov
push
xor
rcr
nop
xchg
loop
je
add
xor
in
mov
mov
xor
push
adc
cltd
pop
int
imul
jo
das
js
mov
in
jb
das
loop
push
xchg
fwait
jne
sbb
stos
popf
jb
or
sub
inc
arpl
cltd
std
shll
cld
xchg
cmp
ja
bound
pop
push
aam
popa
jo
mov
xor
pop
pop
dec
mov
cs
push
addr16
mov
adc
mov
inc
mov
mov
sub
in
es
and
out
sarl
ljmp
hlt
xor
lea
insl
mov
pop
cltd
popa
outsb
fdivl
push
xchg
and
lret
cld
movhps
jo
mov
mov
mov
idiv
xchg
ds
je
pop
leave
push
sub
xor
es
cmp
sbbb
cli
inc
cwtl
leave
push
inc
sub
dec
dec
pop
fs
jecxz
mov
fmul
int
orl
jb
xchg
or
xchg
mov
stos
lds
add
std
jns
sbb
mov
clc
shll
inc
test
and
pop
aad
push
cmpsb
jbe
push
in
push
cmp
iret
loop
dec
add
dec
aad
mov
pop
mov
sub
add
into
in
ja
xlat
les
cmp
pop
mov
mov
out
rol
adc
mov
jno
hlt
and
daa
rolb
jp
int
test
outsb
pop
mov
pop
mov
cmpsb
pop
ret
jp
dec
bound
cltd
mov
sbb
sub
int
xor
add
add
sbb
fdivrl
pop
int
out
out
ljmp
ret
pop
mov
out
cmp
fdivs
lock
dec
lret
dec
push
stc
or
adc
mov
dec
mov
xchg
popa
ljmp
mov
int
dec
adc
movsl
nop
add
mov
subl
lods
in
testl
xchg
push
cmp
in
mov
and
ficoms
pop
dec
mov
jno
pop
push
push
xor
lods
adc
imul
dec
mov
enter
sbb
pop
inc
or
jne
mov
jbe
add
mov
push
aaa
mov
sbb
mov
cmpsl
lret
sbb
lds
xchg
mov
aam
mov
test
add
ss
cmpsb
jbe
das
sub
xchg
subl
jmp
sti
div
push
outsl
push
add
adc
dec
dec
aad
stos
and
sub
lret
lcall
addb
ss
ret
sbb
pusha
test
push
cwtl
or
gs
out
repnz
add
scas
ret
cld
xchg
push
gs
push
cltd
out
mov
push
dec
xchg
add
repz
cmp
jnp
cmp
fldt
and
xchg
push
cld
push
int3
sbbl
shrl
xchg
aad
mov
jl
push
xchg
cli
imul
sarb
lea
rclw
mov
mov
out
cs
es
js
das
imul
pop
outsb
data16
call
cmp
mov
xor
pop
cmpb
xor
ja
xchg
arpl
xchg
sti
xchg
sahf
ds
bound
pop
loopne
scas
sub
into
aaa
or
loope
xor
lret
add
cld
jmp
add
lret
fwait
inc
call
mov
mov
push
int
or
lock
dec
push
dec
jecxz
bound
jae
xchg
push
fs
mov
or
xor
bound
mov
shl
sbb
xchg
std
inc
ja
cltd
or
jb
adcl
dec
xchg
jmp
dec
daa
ret
negl
xchg
jb
fisttpl
pop
jns
mov
ss
lret
cli
xchg
mov
rcrl
inc
mov
xchg
xor
cmpb
outsb
adc
loope
fisubrs
fcoms
bound
cli
mov
push
mov
sub
orb
sti
mov
add
adc
pop
loop
call
loop
xor
push
lea
xchg
lahf
test
dec
fcoml
testl
cmpl
mov
jo
cs
inc
mov
push
jl
inc
rep
movb
cmp
lods
push
mov
dec
testl
inc
push
loop
testb
push
mov
mov
add
pop
fst
mov
push
jle
ds
gs
ds
ret
mov
xor
and
xorl
mov
adc
lds
push
push
notb
mov
dec
jp
pop
jb
out
mov
std
ret
rep
ret
into
jo
and
pop
cmp
mov
popf
cwtl
cmp
in
adc
mov
sbb
push
adc
xchg
jge
mov
into
push
cmpsl
popa
enter
fst
shll
pop
aaa
mov
add
subb
scas
mov
mov
dec
mov
popa
xlat
movb
ds
xlat
out
ds
push
mov
int
jbe
mov
add
adc
dec
mov
popa
jmp
fldl
cld
pop
ret
adc
jecxz
pop
cmpsb
xlat
cmpsl
lds
cmp
or
jle
push
ss
ds
std
aad
cmpsb
out
or
scas
mov
mul
popa
mov
ret
push
cmpsl
inc
xchg
pop
ss
adc
dec
dec
cmpsb
out
cmpsl
dec
mov
addb
mov
out
cmpsb
jg
push
jp
cmc
int
filds
add
jo
push
std
pop
pop
mov
push
arpl
lds
incl
push
push
sbb
sbb
ss
cmpsb
icebp
xchg
cmp
push
mov
cmp
aaa
push
or
cltd
add
in
push
cmpsb
popa
iret
mov
inc
push
jbe
iret
cs
xlat
inc
xchg
data16
inc
icebp
cmc
and
fisubs
aad
jecxz
fcmove
sahf
fdiv
cmc
loope
scas
mov
int
fstp
std
cmpsl
jnp
mov
cmc
shlb
jns,pn
mov
mov
mov
add
mov
sbb
ss
pop
dec
pop
out
leave
les
and
sarb
cmp
jmp
mov
mov
movsb
mov
popf
fs
shll
popf
or
add
cmpsb
pop
pop
scas
xchg
sbb
in
popa
push
daa
push
push
jg
pop
mov
cmp
ret
jbe
repz
xor
push
rolb
popf
mov
negl
cmp
in
fnsave
mov
aas
cmp
scas
xchg
loop
cmp
ss
imul
lret
stos
in
pop
push
push
scas
push
push
shll
andb
push
subb
jl
lds
adc
add
mov
sub
sbb
movsl
stc
xchg
jbe
cwtl
out
ficomps
or
push
in
insb
fnstenv
mov
sahf
enter
sbb
pushl
xor
in
jbe
mov
mov
flds
xchg
xchg
inc
push
sbb
jbe
in
sub
out
ret
movd
mull
inc
push
fnstenv
sub
mov
or
ljmp
movsb
outsb
in
sub
test
cmp
pop
xchg
cwtl
daa
add
hlt
mov
xchg
inc
or
adc
and
xor
inc
std
or
push
or
ret
cltd
pop
pop
pop
clc
or
mov
push
ja
jmp
xchg
fdivrp
movsl
sti
sbb
nop
cmpsb
int3
or
dec
jb
inc
inc
ret
pusha
cmpsl
push
pop
jbe
fisubl
push
push
gs
sbb
les
mov
push
push
jge
fdivl
mov
push
pop
mov
jle
fcompl
mull
sub
cmpsb
add
cmpsl
xchg
and
gs
cld
mov
icebp
jnp
sti
and
and
loop
iret
add
repnz
pop
dec
js
lock
jge
imul
or
dec
cmp
adc
cwtl
daa
push
jle
dec
pop
and
xchg
lahf
ja
sub
lret
jbe
jno
out
gs
dec
mov
jbe
push
clc
sahf
cmpb
sarb
ja
cmp
inc
into
in
cmp
cmpsb
or
or
fs
rcrb
and
and
push
ret
and
das
sub
int3
in
push
stos
dec
out
neg
mov
cmp
xor
xlat
jno
fld
push
inc
mov
mov
out
jg
int
dec
cmp
inc
and
and
adc
adc
fiadds
jp
test
adc
mulb
inc
leave
ret
xchg
or
xorl
loop
inc
pop
adc
sti
mov
mov
lds
mov
cltd
int
mov
fistpll
xlat
add
cwtl
dec
pushf
aaa
ret
aam
outsb
lahf
rolb
scas
es
ljmp
mov
cmpsl
sub
fwait
outsl
gs
pusha
or
push
mov
inc
movb
cltd
pop
aad
inc
xor
cmp
cli
loope
adc
and
jae
addr16
jp
mov
add
xchg
aad
ja
xchg
fcoml
loope
pop
inc
aam
jns
popf
mov
gs
mov
and
mov
sub
iret
push
lret
js
adc
int3
and
in
jb
out
sub
mov
in
in
aaa
push
das
enter
mov
dec
or
mov
adc
push
add
inc
sbb
arpl
popa
jmp
fwait
push
lds
cmp
fmull
sub
xor
loop
add
popf
cmc
dec
lahf
and
and
loope
inc
sub
in
xchg
aas
pop
push
mov
insl
pop
ljmp
add
push
ret
ret
in
or
aad
push
fwait
jno
rcl
rcl
inc
xchg
push
add
dec
pop
iret
adc
add
jmp
mov
out
cmp
lds
mov
cmp
bound
cli
xchg
out
mov
cld
cs
rol
cmp
cmpsb
test
xor
cltd
ret
dec
aad
add
test
pop
adc
xchg
adc
pop
cmp
cmpsb
and
add
add
cmp
mov
jns
sub
push
aas
loope
lahf
stos
mov
ss
inc
pop
jmp
popa
push
mov
or
les
roll
in
pop
add
ja
jb
cmc
test
mov
sbb
pop
test
mov
ja
addr16
loop
xchg
dec
xor
lret
fwait
add
rclb
pop
or
aam
jp
push
adc
mov
mov
push
mov
fisubrl
pop
jl
jmp
mov
push
rcrb
xchg
in
sbb
dec
sbb
loope
arpl
cli
fisubrs
xchg
xchg
daa
shlb
int3
mov
ljmp
outsb
roll
cmp
inc
push
pop
loopne
incb
pushf
pop
aam
pop
scas
movsl
add
and
mov
dec
xor
outsb
movsb
loop
dec
gs
mov
addps
dec
xchg
push
mull
out
adc
mov
sbb
repz
jmp
push
in
insb
out
lcall
roll
jae
push
cmpsb
xchg
imul
push
cmpb
xchg
mov
xchg
sub
push
and
sub
bound
aas
into
lea
notb
sbb
in
push
stos
and
mov
cltd
testb
mov
js
bound
pop
es
jg
push
xchg
pop
xor
fsubr
js
in
das
add
fcomps
adc
jne
push
push
cmp
mov
mov
imulb
xchg
fimuls
sub
divl
pop
rolb
cltd
jmp
ja
or
or
jno
pop
xchg
enter
fdivl
sub
bound
inc
testb
mov
inc
add
xor
pop
shr
mov
xor
stc
xor
mov
js
out
lcall
jbe
mov
push
fists
mov
jo
jge
ja
rcl
xchg
push
icebp
xchg
aad
push
push
bound
clc
cmpsl
shrb
aam
cmp
push
push
sahf
stos
push
sarb
testb
fsubr
dec
fldenv
pop
xchg
mov
sbb
movsb
in
xor
cmpsl
jbe
mov
ja
cli
arpl
repz
test
jg
xlat
cmp
outsl
lahf
xchg
nop
mov
clc
cmp
dec
xchg
loopne
addb
mov
popa
orb
orb
scas
dec
bound
pop
push
xchg
mov
je
mov
aam
shlb
mov
divl
push
mov
push
shlb
mov
popl
adc
and
psubsw
addl
push
inc
notb
das
cs
test
aas
pop
mov
loope
gs
adc
test
jb
mov
and
or
test
outsl
sub
add
dec
mov
xchg
sarb
jmp
out
ss
and
and
mov
cs
jns
lahf
addb
shrb
orb
outsb
pushw
push
imul
sub
insl
shrb
cpuid
xchg
add
mov
fwait
inc
daa
add
sub
push
arpl
popa
ja
jne
mov
loope
int3
push
lret
ds
pop
in
shl
mov
jp
push
movsl
js
cmp
rcl
or
int
pop
pop
jmp
sbb
dec
sbb
ret
fwait
bound
loop
add
mov
inc
bnd
xor
sti
pop
test
xchg
ret
mov
mov
daa
lcall
dec
shrl
push
xor
mov
ja
cwtl
dec
filds
cld
ret
jg
ret
pop
cmp
aaa
cltd
loopne
dec
cwtl
mov
shlb
xchg
cltd
shll
sarl
aaa
imull
dec
ret
les
jp
outsb
mov
jge
ss
iret
cmp
clc
dec
push
mov
fsts
push
pop
jp
mov
lahf
fdivl
jnp
pushf
cs
pop
sbb
xchg
push
imulb
cld
dec
xchg
iret
pop
xchg
xorb
jbe
add
loop
and
mov
test
movsl
mov
sub
sbb
push
or
xchg
movsb
js
pop
sbb
xor
hlt
daa
ja
inc
cmpsl
mov
ja
loope
sbb
fnstcw
jnp
les
and
gs
push
aam
testb
cmp
dec
sbb
cmp
bound
push
xchg
or
mov
ljmp
jnp
dec
sub
mov
repz
rcll
ja
aad
pop
mov
fbld
es
notb
cld
repz
mov
stos
inc
stos
or
push
stc
or
mov
int3
fisttpll
mov
outsb
outsb
push
and
mov
movsl
and
dec
xchg
xchg
rclb
mov
subl
xchg
movsl
js
xchg
inc
pop
hlt
push
sbb
sbb
es
jbe
bound
insl
ja
mov
add
push
mov
je
add
xlat
mov
shlb
scas
cmp
out
in
inc
pop
rolb
xchg
inc
mov
push
aam
cmc
outsl
lods
std
ror
aas
add
or
cmp
or
mov
or
js
pushf
clc
stc
bound
in
and
mov
ficoms
pop
add
add
xchg
lahf
dec
popf
divb
loop
fisttpl
mov
xchg
das
cwtl
shll
cmp
inc
push
ds
xor
xlat
fiaddl
push
aam
out
imul
imul
mov
inc
jnp
push
mov
push
mov
push
outsb
stos
or
jmp
insb
fstpt
movsl
jmp
mov
lock
daa
outsb
out
xchg
jmp
cmp
add
push
jbe
xor
jge
pusha
test
xor
xchg
adc
add
mov
xchg
out
add
jg
mov
mov
rorl
cmp
orb
idivb
cmp
outsl
jb
jne
rorb
fimuls
sbb
jo
pusha
test
push
sub
adc
fidivs
daa
rcrb
xchg
std
xchg
mov
bound
pop
and
lret
int
aas
add
mov
pop
cmp
repz
jnp
cmc
or
aam
pop
popf
xchg
xor
xlat
ljmp
int
shrb
in
mov
fdivp
pop
iret
divb
popf
push
rclb
movsl
loopne
ja
mov
xchg
mov
out
imul
sbb
mov
jae
add
fmull
imull
pop
out
mov
sub
int3
xabort
mov
sbb
xor
mov
mov
mov
lds
ja
jb
xchg
in
je
or
mov
push
adc
in
out
imul
daa
xchg
pop
push
fists
test
fdivl
test
push
ss
cmp
adc
cmpsb
mov
xchg
cltd
mov
fs
repnz
add
sahf
mov
mov
xor
out
jmp
mov
into
sbb
aas
xlat
fstpt
jns
shll
mov
push
cmpsb
mov
mov
adc
ja
sub
push
mov
arpl
mov
pop
xor
pushf
sub
mov
dec
ret
and
lret
inc
mov
ss
lea
rorl
push
add
inc
stos
push
aam
aad
lds
mov
fs
cmp
in
rorb
cmpsb
ja
xorl
sub
or
xchg
mov
ja
push
sub
jle
add
push
cli
sub
push
and
into
ja
xor
das
inc
out
lods
int
cld
mov
sub
mov
adc
or
push
sar
call
enter
fnstsw
and
je
fists
push
xchg
inc
test
jbe
xlat
dec
shlb
mov
cs
mov
in
jb
fisttpl
mov
mov
les
aam
stos
adc
and
push
mov
pop
loop
hlt
int3
cs
rol
push
data16
sub
mov
es
lret
shl
lcall
ja
push
mov
cmpl
xchg
cmpsb
in
aad
inc
push
adc
pop
add
xchg
in
pusha
or
aas
and
mov
sub
sbb
mov
stos
inc
mov
jg
ja
inc
xchg
testb
push
hlt
jecxz
jp
jle
inc
into
test
jp
loop
shrl
jp
dec
add
jle
out
dec
cmp
lret
cltd
mov
bound
fwait
xchg
stos
xchg
mov
push
push
ja
or
inc
mov
std
fstpl
jmp
fsubs
jne
push
cwtl
ret
sbbb
stos
mov
cmp
and
lods
fwait
call
pop
inc
dec
andb
push
push
incb
out
jle
out
aad
xchg
jnp
jmp
push
and
sbb
imul
sub
movsl
xchg
repnz
cltd
sub
subl
mov
push
jecxz
inc
mov
mov
stc
mov
std
popf
movsl
adc
mov
lods
mov
inc
cmp
xchg
adc
xor
loopne
into
sbb
mov
xchg
shll
jae
push
xchg
cmpsb
mov
mov
les
mov
cmp
xchg
xchg
data16
in
idivb
faddl
pusha
cltd
xchg
push
pop
xchg
jae
push
xchg
jno
cmpsb
dec
cltd
jecxz
adc
enter
dec
ret
adc
int3
lds
lret
rcrl
and
mov
xchg
cmp
adc
mov
test
lahf
jnp
mov
mov
and
insb
push
xchg
ss
loop
scas
mov
add
xchg
iret
mov
pop
ja
adc
push
mulb
arpl
jl,pn
faddp
jbe
clc
lock
ficoml
jb
fbstp
pop
mov
xchg
sbb
mov
jae
and
mov
int3
shrb
lds
pushf
fldln2
xchg
mov
addr16
shlb
test
jnp
lds
inc
ds
adc
push
out
loop
mov
andb
popf
mov
sub
or
test
push
es
arpl
jbe
cmc
gs
out
in
push
push
ja
jno
cwtl
dec
test
cwtl
aad
shl
pop
ret
leave
gs
cmp
or
mov
cmpl
in
pop
jp
and
push
icebp
xlat
and
sbb
mov
inc
ret
int3
xlat
cmp
xchg
inc
mov
push
fwait
inc
mov
inc
ja
scas
stos
fcoms
ret
and
pop
xor
inc
push
mov
cmp
xlat
cli
dec
push
push
lock
add
and
adc
pop
lcall
pop
mov
les
xchg
push
sub
mov
into
pop
sarl
mov
sahf
loop
bound
pop
ret
jbe
lret
xor
insl
scas
in
clc
xor
adc
dec
xor
mov
cmpsb
mov
adcl
out
iret
fnstcw
rcll
and
fstl
movsb
and
scas
cmp
mov
mov
scas
out
push
and
add
ljmp
call
inc
insl
push
neg
mov
mov
out
sub
mov
push
fs
add
add
cmp
pusha
or
std
push
ja
scas
loopne
out
es
mov
sbb
rorb
lods
dec
adc
lahf
add
stos
and
mov
fisubrs
mov
loop
mov
pop
push
adc
lea
dec
insb
sbb
push
mov
pop
jbe
cltd
mov
iret
divb
sbb
mov
push
pusha
push
xor
jo
in
mov
rcl
xor
in
lods
dec
add
out
cmp
out
test
cld
clc
inc
lock
sbb
sarl
addr16
pop
jno
jbe,pn
hlt
jnp
cmc
jle
add
cmc
jmp
arpl
in
notl
mov
adc
lods
xchg
or
sub
insb
ret
mov
clc
pop
dec
and
and
aas
jae
lock
mov
sub
xor
dec
pop
xchg
fistpll
mov
inc
mov
adcl
gs
or
daa
fs
mov
out
xor
dec
leave
pop
xor
gs
ja
sub
ss
xchg
iret
adc
inc
les
xchg
mov
cwtl
push
out
add
xchg
mov
stos
cwtl
lahf
and
or
testl
jns
fldcw
dec
cwtl
add
arpl
pop
mov
inc
sbb
dec
jmp
ljmp
inc
sub
fwait
mov
insb
push
std
push
sub
jmp
cmp
push
mov
fistpl
fildl
aam
addb
and
cmpsb
mov
call
imul
loop
push
imul
push
lret
stc
mov
push
pop
cli
sub
pop
and
aad
jae
lea
mov
in
pushf
cld
adc
mov
push
aaa
inc
inc
mov
push
nop
mov
mov
stos
push
and
stc
adc
out
jbe
je
jecxz
jle
add
jb
or
pop
add
mov
idivb
xchg
add
out
mov
xor
xor
pop
cld
push
xchg
mov
push
mov
pusha
push
and
adc
scas
jp
cmp
cmp
test
mov
decb
xchg
mov
add
shlb
xchg
jbe
in
shlb
mov
xchg
int
shll
cmc
sahf
iret
or
cmpsb
xor
loop
xchg
cs
mov
stos
and
imul
xchg
cwtl
push
daa
cmpsb
mov
xchg
push
push
cld
repnz
mov
dec
outsl
pop
gs
in
mov
mov
jo
lret
pop
leave
push
pushf
aaa
mov
mov
fisttps
cmc
mov
mov
mov
ret
xor
inc
mov
out
sub
push
mov
jle
push
loope
mov
mov
cltd
call
je
cltd
aad
sti
pushf
std
mov
orl
sbb
inc
adcb
pop
out
in
aas
add
cmpsb
jmp
cmp
int
int3
sub
into
aas
test
pusha
ja
aad
daa
stos
jmp
xor
jmp
lret
or
sbb
push
daa
mov
daa
pcmpeqd
pop
out
leave
xchg
aam
stc
fisttps
xor
cmp
shl
jae
test
fcmovb
in
and
push
icebp
cmpb
sbb
add
xchg
mov
sub
out
mov
outsb
clc
or
addr16
xchg
xchg
pop
dec
ja
dec
aam
fisubrs
jge
inc
dec
stc
jae
je
dec
fmul
lea
and
out
lret
adc
fsubrp
jns
sbb
lcall
loop
jae
mov
cmp
mov
aas
jno
test
jg
xlat
push
xchg
ja
and
lret
out
fisttps
insb
fcmovnbe
das
xchg
insl
out
xchg
out
sbbl
push
rolb
xorb
rcrl
or
jle
fdivrl
mov
gs
in
sar
cmp
ja
mov
out
xor
mov
add
add
jne
jecxz
jb
jg
or
mov
andb
fcomip
mov
push
xchg
sub
cmpsb
inc
in
gs
loop
aas
inc
and
scas
nop
hlt
test
push
mov
movsb
das
scas
pop
out
dec
lret
cmp
push
out
mov
nop
out
dec
mov
sub
popf
shll
gs
xchg
decb
rol
ja
add
std
cmp
cli
int
inc
pusha
sub
ja
mov
sub
ja
pop
test
pop
mov
xchg
mov
enter
jo
mov
push
test
shll
xchg
mov
and
shll
scas
loope
popa
xor
push
push
lds
testb
jne
les
xor
push
xor
repz
add
stos
incb
push
shl
dec
decl
mov
bound
mov
mov
cld
aam
cmp
in
jbe
and
fsubrl
cmp
xor
fsubrp
je
inc
dec
data16
mov
push
sub
or
mov
xchg
xchg
push
sub
lds
mov
out
iret
repz
xchg
mov
jbe
sbb
mov
inc
stos
jns
jnp
outsb
ret
cmp
mov
loope
repz
lods
dec
mov
push
xchg
jle
dec
test
xor
push
in
repnz
xor
xor
adc
jmp
ret
movsl
add
pop
inc
lret
in
cmp
and
gs
jg
je
xor
std
xor
mov
pop
sbb
adc
mov
sbb
insb
loop
ja
push
fdivrl
cwtl
mov
testb
dec
outsb
lds
pop
add
imul
dec
lea
jne
ja
loop
sub
mov
push
cmp
pop
loop
xchg
mov
leave
loopne
in
jl
sbb
add
lods
scas
sbb
dec
adc
out
pop
imul
mov
push
add
mov
shll
fisttpl
repz
push
mov
ret
mov
cmp
je
popf
ret
mov
fldcw
or
fimuls
daa
mov
xor
out
cmpsb
lods
mov
out
fisubrl
jo
lds
lahf
mov
mov
cmpsb
fsubrl
sahf
cmp
enter
pop
cld
and
xchg
das
popa
push
or
xchg
subl
xor
clc
push
or
cmp
scas
inc
or
into
ss
mov
jmp
jl
adc
mov
xchg
imul
cltd
xchg
pusha
sub
lahf
ja
xchg
sub
inc
push
dec
pushf
xlat
lods
or
or
mov
push
mov
flds
jecxz
ja
inc
sub
mov
dec
out
sbb
jl
les
mov
mov
dec
dec
cmp
push
popa
add
push
mov
sbb
pop
ds
add
xchg
sub
jmp
mov
popf
xor
mov
sub
cmc
pop
cld
push
outsl
mov
mov
pop
add
std
add
mov
lret
push
push
sbb
gs
push
sbb
repz
imulb
lock
rcl
pop
jbe
ficoml
jp
cmc
push
jbe
fstpt
inc
add
fidivl
xchg
cmp
jle
push
jns
sub
sbb
lret
push
cmc
cmp
inc
cmc
cmpsl
test
jbe
jecxz
pop
xchg
mov
push
cmp
shr
into
pop
sbb
jg
and
mov
loope
xorb
mov
xorl
in
std
in
cmp
inc
xor
mov
push
mov
or
jb
inc
gs
mov
xchg
in
cmp
push
dec
enter
and
fidivl
mov
or
ret
push
js
shr
pop
push
rol
and
push
xor
stos
addr16
jg
pop
dec
outsb
sub
out
imul
jno,pt
cmp
out
or
push
gs
sbb
mov
out
xchg
fsubl
mov
push
mov
dec
cmc
rcr
add
out
mov
mov
cmp
fprem
xor
fisttpl
cmpsl
jbe
stos
mov
cmpsl
sub
iret
push
jne
notb
xor
pop
jb
in
jmp
fcompl
mov
dec
decb
es
cmpsb
mov
dec
and
dec
popa
loopw
push
inc
mov
mov
sub
fnstcw
and
sub
pop
cmp
jbe
and
lahf
ja
dec
xlat
lds
add
sbb
arpl
cmp
add
inc
cmpsl
ja
stos
addr16
xchg
lret
jge
pop
sti
mov
in
imul
sbb
arpl
xor
jno
cmpsl
rclb
repz
xchg
xchg
push
iret
int3
inc
sarl
enter
dec
fldl
iret
adc
add
mov
cli
ret
jmp
stos
push
dec
fmull
movsb
ret
and
jne
fwait
inc
imul
in
mov
fsubrs
fcmovnu
jmp
or
adc
aaa
jns
xor
jg
adc
out
mov
imul
outsw
test
and
mov
xchg
dec
repz
nop
push
pop
aam
jo
jne
lds
negl
push
out
ret
xchg
xchg
sbb
adc
cmpsl
filds
imul
das
aam
push
mov
adc
ss
sahf
jb
inc
pop
mov
popa
scas
jle
fistpl
in
and
aad
shlb
lds
mov
mov
pop
jp
push
push
outsl
fimull
ja
mov
pop
popf
std
scas
out
dec
sub
cmp
sub
popa
imul
ja
xlat
ds
mov
sarl
inc
stos
push
jp
cmp
xchg
icebp
push
add
sbb
jp
inc
cli
cmp
or
add
loop
shlb
push
lea
bound
pop
sub
into
push
std
push
mov
dec
loop
fwait
jae
cmpsb
xchg
stos
fisubs
stos
dec
ljmp
mov
repz
push
pop
lahf
pop
inc
sub
into
pop
jle
divl
mov
jmp
gs
add
scas
test
pusha
in
cmpsb
jbe
mov
rcll
add
adc
leave
push
les
std
pushf
add
sti
jb
imul
fwait
cmp
mov
xchg
ficomps
pop
lahf
stos
into
aaa
sbb
fidivl
stos
cmp
in
dec
pusha
pop
mov
arpl
movsl
jno
xlat
ljmp
shrb
arpl
clc
lcall
mov
lods
xlat
or
add
jnp
imul
testb
add
cvtps2pd
jbe
loope
rcrb
leave
xor
into
movsl
aad
fimuls
xor
int3
cli
mov
pop
or
iret
pop
stos
push
and
xchg
push
inc
sahf
mov
mov
cltd
insb
adc
imul
mov
sbb
cmc
addb
mov
popf
out
cmc
scas
or
clc
lret
add
jle
sbb
xchg
add
xchg
push
mov
inc
xor
push
ja
adc
fstl
popa
sub
sbb
adc
fstpt
testl
or
gs
sub
inc
xor
xchg
push
add
gs
xor
push
fwait
inc
fdivl
mov
jne
cmp
mov
lds
sbb
xchg
repnz
push
mov
jnp
and
jbe
rcr
xchg
mov
ja
mov
cmp
cmp
arpl
dec
dec
test
cmp
imul
pusha
jecxz
int
xlat
jge
jle
aaa
xlat
rcr
mov
push
xlat
xor
cs
cmp
out
aad
outsl
push
mov
pop
sub
inc
sbb
data16
jbe
in
cmpsb
addl
mov
cld
loop
jg
popa
fmull
inc
push
int3
fiadds
mov
call
scas
inc
int
movsb
push
and
dec
and
stos
pop
or
xor
xchg
int
dec
add
cmp
xlat
xchg
pop
ja
aas
pop
jp
xchg
cwtl
repnz
xchg
test
in
scas
sti
jae
push
fimuls
jbe
imul
push
jo
cmp
inc
in
sub
ret
je
lcall
lock
call
aas
jg
xchg
cld
jae
pop
shlb
ja
xchg
jo
inc
stc
rcl
rol
or
push
push
adc
cmpsl
dec
and
je
ja
test
fidivrl
lret
jle
add
sub
mov
xchg
fcmovb
shll
jmp
sbb
clc
loop
push
dec
jb
ficompl
cmp
jb
das
icebp
aad
scas
subb
or
inc
add
gs
sub
jmp
mov
fwait
stc
std
rcrl
aaa
ficompl
shll
test
out
lret
negl
dec
stc
pop
dec
in
in
mov
adcb
pusha
inc
push
lods
fldcw
popa
mov
lahf
cmp
lods
mov
sub
outsb
scas
and
and
ds
ficompl
jmp
xchg
ret
bound
cmp
sbb
xor
cmpsb
or
sarb
mov
inc
scas
ja
push
dec
xchg
or
int3
mov
mov
repnz
xchg
jg
push
mov
idivl
mov
mov
xchg
or
pop
ds
pop
sub
std
into
popa
dec
xchg
sbb
mov
lea
sub
lods
pop
pop
jg
aas
lods
aam
aaa
mov
xor
and
out
push
icebp
dec
popa
xorb
push
aas
jno
mov
xchg
loopne
les
or
cltd
push
push
jae
daa
dec
push
push
loopne
or
fs
in
gs
adcb
in
sbb
fsts
jg
pop
lods
out
inc
xchg
cltd
add
cwtl
das
pusha
inc
xchg
fcmovb
shrb
jge
psrld
add
mov
and
jg
cs
xor
insl
clc
mov
mov
and
push
inc
cltd
lds
mov
push
adc
stos
inc
mov
ss
aaa
jbe
xchg
out
ja
repz
sbb
adc
stc
jge
rcll
shrb
pop
mov
subl
and
adc
gs
mov
xor
mov
cld
movsl
dec
mov
clc
inc
insl
push
cmpsl
sbb
dec
jmp
test
adc
dec
std
xchg
imul
push
loop
shll
mov
cli
jmp
xchg
mov
fcmovb
push
notb
in
rorb
inc
add
inc
xor
jg
xchg
mov
adc
int3
cmpsb
push
push
cmp
hlt
out
imul
ja
andl
mov
cwtl
and
pop
ficompl
bound
hlt
pusha
scas
xor
int3
push
adc
mov
int
movsl
in
sbb
sarb
pop
mov
mov
out
int3
adc
aaa
adc
ds
out
movups
jmp
call
sbb
mov
out
mulb
imul
out
inc
mov
add
es
cmpsb
mov
imul
xchg
push
test
xchg
je
sub
and
ja
stos
loop
pop
es
imul
mov
push
ja
pop
cs
popf
mov
insl
cmc
push
int3
jmp
and
add
xor
xchg
outsb
mov
cmp
jo
pop
push
gs
cmpsb
fwait
aas
dec
lret
les
notl
mov
scas
ljmp
adc
push
sbb
fnstenv
pop
add
inc
fs
push
cmp
sbb
pop
mov
fnstsw
adc
daa
mov
nop
pop
lahf
mov
mov
fs
imul
xor
in
cmc
lods
pop
cwtl
sarl
test
imul
imul
dec
inc
cltd
mov
sub
cli
pop
sub
leave
or
and
mov
scas
imul
faddl
lods
mov
gs
mov
sub
dec
adc
test
jo
fistps
clc
dec
lods
push
dec
mov
hlt
call
or
add
arpl
fbld
das
in
or
inc
pop
jne
inc
jbe
mov
pop
jecxz
pop
jl
mov
enter
shlb
sahf
mov
negb
adc
sub
aam
jno
in
outsb
pushf
fisubl
adc
mov
or
dec
mov
shl
jns
nop
jnp
pop
push
ja
das
sbb
mov
or
mov
push
add
ss
xchg
cmp
push
pop
inc
push
cmp
mov
fmuls
mov
in
pop
jbe
xor
jmp
leave
stos
inc
xor
cmc
cmc
xchg
cmp
scas
leave
ds
ja
dec
neg
xor
adc
in
xchg
jbe
cld
fs
mov
daa
mov
jp
je
xchg
das
loopne
test
out
xchg
es
mov
rcrb
jmp
jb
pop
cmpsl
ret
lcall
repz
shl
out
adc
popa
rcl
loop
addr16
lock
inc
xchg
push
or
sub
sarb
test
pop
mov
jno
push
daa
cmp
aas
xchg
clc
lds
xchg
mov
cmpsb
scas
dec
out
lock
add
sti
and
pop
leave
mov
pop
jle
iret
loope
mov
push
xchg
mov
cmpsb
mov
cld
lods
loope
jno
add
scas
pop
into
dec
jb
mov
xchg
mov
adc
sahf
imul
popa
repz
sbb
mov
dec
xchg
inc
and
mov
sbb
push
arpl
inc
shrb
loop
stc
pushf
adc
outsl
pop
icebp
movb
in
movsb
nop
xchg
mov
stos
xchg
gs
dec
mov
adcl
mov
inc
loopne
mov
or
in
bound
cmp
ret
xor
fs
inc
push
push
imul
popf
push
into
jecxz
popa
sub
mov
les
pop
jno
hlt
push
int
mov
inc
push
cli
xchg
scas
shll
jecxz
es
aas
xchg
mov
aaa
ficoml
mov
cltd
sbb
std
je
in
aas
pop
loop
push
cmp
pop
push
pop
rcll
rcrb
rclb
pop
or
mov
dec
jl
cmpsb
cltd
les
jnp
cld
jne
ret
mov
pop
cld
inc
int3
ret
sarl
mov
dec
mov
mov
push
inc
ljmp
in
cltd
inc
loope
xchg
xorb
mov
sbb
mov
bound
cmp
dec
push
push
int
shlb
stc
loopne
sub
mov
xchg
mov
ja
and
or
clc
cli
rcr
mov
sub
cmpsl
add
popf
mov
rcr
movsb
std
imul
popf
stos
idivb
sub
inc
mov
inc
les
bound
scas
pop
shlb
add
mov
das
push
ret
jle
dec
inc
pop
pop
lods
inc
std
es
gs
stos
ret
or
lahf
in
fistl
cld
fxch
fcomip
cmp
jno
fidivrl
push
out
faddp
test
push
jecxz
add
mov
test
sbb
mov
inc
mov
mov
aaa
cs
xor
mov
or
subl
push
es
shlb
push
es
mov
popa
xchg
push
gs
fmull
xor
gs
ds
mov
bound
push
out
in
ret
mov
mov
mov
shll
jne
add
xlat
test
mov
mov
or
lods
push
std
insb
mov
sbb
xor
aas
in
lock
mov
or
inc
mov
ljmp
cld
or
movsl
and
mov
arpl
daa
call
sahf
insb
les
lahf
push
shlb
in
mov
or
or
sub
mov
aas
mov
rcrb
sarl
inc
xchg
dec
adc
shlb
mov
jne
mov
out
mov
pop
mov
lds
or
repnz
jbe
lahf
daa
subl
sbb
pop
ljmp
sub
xor
lods
jg
sub
ljmp
nop
out
cli
xchg
push
push
int3
test
or
iret
in
cmp
mov
cli
cmp
mov
icebp
sbb
jo
ja
xchg
int
adc
sub
movsl
push
adc
adc
andl
scas
fbstp
into
push
filds
xchg
xor
pop
push
sbb
mov
mov
je
mov
pop
clc
push
inc
pop
loop
xor
cmp
data16
inc
add
and
stos
aam
mov
sub
push
mov
mov
jbe
out
mov
inc
test
mov
loopne
mov
shlb
aam
outsl
push
or
fistl
sbb
cmp
pop
cmp
add
je
in
dec
mov
mov
cmc
in
loope
dec
divl
ljmp
in
imul
bound
inc
xchg
dec
sub
pop
imul
enter
ret
or
gs
mov
fwait
aas
dec
dec
dec
xchg
pop
sub
cltd
xchg
call
and
ja
daa
shl
rcrb
jmp
xchg
popf
push
jg
ss
rcrl
cltd
loop
lds
jbe
lahf
lds
aad
mov
cmpsl
mov
or
push
in
stos
rclb
imull
jg
xor
lds
mov
sbb
clc
xchg
push
imul
cli
shll
or
loop
adc
rol
mov
cmp
cmp
stos
cmpsl
mov
and
icebp
das
aad
pop
fdivp
imul
aam
jle
loope
pop
and
in
push
mov
cld
ja
add
push
pop
inc
loope
ret
mov
enter
mov
sar
dec
popa
cmpsl
ret
push
insl
xchg
leave
imul
jns
loop
or
pop
mov
test
iret
push
cli
sub
mov
ja
popf
fists
push
shrl
insb
mov
test
sbb
inc
or
mov
test
dec
lahf
ret
addb
pop
inc
iret
fs
subl
jp
idivb
mov
sahf
cmp
xor
sarb
ljmp
pop
cmp
aaa
or
rolb
sub
inc
mov
pusha
gs
mov
adc
push
addl
cmp
adc
test
fucomi
into
sbb
mov
ds
lret
in
xchg
xchg
jno
pop
fs
cmp
getsec
mov
adc
pop
in
out
fstps
enter
leave
jmp
jmp
and
push
cld
sahf
xor
pop
mov
sub
xor
pop
pushf
pusha
cmc
imull
xor
mov
pop
out
mov
push
lcall
jmp
push
and
mov
loope
inc
inc
xor
repz
and
dec
mov
pop
std
cld
enter
xorb
inc
shlb
ds
mov
movsl
xor
pop
iret
aas
ja
xchg
pop
fldenv
xor
xchg
push
jns
mov
imul
data16
jmp
repz
adc
cmp
dec
inc
clc
pop
stos
pop
xchg
cmp
scas
cmpsb
push
rclb
in
add
ds
and
jb
iret
cmp
sbb
shlb
xor
xchg
add
mov
or
xor
lds
es
dec
inc
sbbb
and
xlat
ds
push
inc
std
out
cwtl
das
inc
loop
or
cld
sbb
mov
xorl
jbe
fisubl
cmp
cli
pop
pop
jge
push
push
mov
mov
cltd
mov
jnp
add
in
jbe
adc
pop
enter
mov
or
addr16
fxch
mov
xor
lret
mov
clc
aad
adc
adc
mov
sub
mov
jmp
mov
gs
adc
dec
xchg
mov
inc
es
insb
mov
clc
fcomps
iret
or
or
rorb
fldt
jne
xchg
mov
fbld
lods
loope
pop
add
insb
jg
fidivl
jge
and
inc
lods
mov
ret
pop
les
test
stos
sbb
push
lds
jno
shrl
out
xlat
divb
cmc
fldt
in
or
push
call
add
arpl
jmp
movzwl
imul
push
out
cmpsb
xor
jbe
fidivrs
sbb
pusha
cmp
clc
sub
out
sub
add
mov
push
lods
fwait
inc
ss
je
ficoml
fidivrl
push
or
xchg
ja
int
loop
das
repnz
ds
xchg
popa
sahf
inc
pop
popf
or
pusha
cmp
rorl
sbb
dec
lods
inc
cmp
insb
stos
loope
lds
bound
popf
mov
mov
adc
stc
add
jmp
sub
dec
loop
lods
stos
loop
out
or
int
or
imul
into
test
mov
push
mov
cmpsl
inc
outsl
sarl
movsl
push
lods
xchg
inc
sarb
movsl
inc
mov
in
rcrl
fnstsw
xchg
test
xchg
fisubs
sbb
aam
cmpsl
mov
hlt
jbe
outsb
dec
subl
jmp
mov
pop
pop
inc
into
pop
icebp
rcrb
shrb
and
fstl
test
xchg
lds
push
or
xchg
adc
xor
fisttpl
xchg
cmp
pusha
icebp
mov
hlt
arpl
cmp
jle
xorl
movsl
aam
push
lahf
sahf
inc
cmp
je
std
jmp
idivb
or
stc
mov
call
pop
sbb
dec
ja
jne
xchg
jmp
xor
mov
mov
das
jmp
aad
leave
xor
add
push
pop
fucom
aam
mov
lock
push
bound
dec
insl
fscale
push
mov
push
and
and
sbb
nop
cwtl
loopne
fisubrs
jnp
xchg
jno
inc
pop
jle
push
sub
cmp
or
adc
clc
arpl
adc
inc
adc
mov
xchg
stos
cmpsl
mov
aaa
sbb
movsl
inc
cmpsl
xchg
test
rol
dec
mov
cltd
shl
gs
aad
sbb
ja
lock
pusha
adc
push
fwait
mov
add
cmc
push
or
xchg
shlb
mov
push
mov
push
ja
std
frstor
sbb
xor
aam
pop
outsb
pop
and
push
imul
sti
jecxz
fs
jmp
sahf
aaa
mov
fs
lahf
lret
cmp
sbb
mov
xchg
push
mov
or
lea
mov
rcll
mov
sub
xor
fistps
popa
in
ja
inc
xchg
xor
sub
arpl
fcmovne
mov
and
xor
or
jbe
loopne
insb
add
and
xchg
clc
notl
jge
inc
sbb
addl
addb
fs
test
iret
inc
in
lds
push
aaa
test
or
pop
repz
testb
clc
dec
aam
pop
loope
pop
es
int
dec
dec
rol
fistpl
bound
scas
mov
and
inc
out
xor
popl
sbbb
mov
stc
out
gs
cli
negl
stos
roll
ret
fmulp
mov
adc
ret
std
cmp
adc
mov
adc
cmpsb
cltd
rclb
mov
push
or
adc
jbe
in
popa
dec
stos
clc
es
inc
fwait
bound
into
ffreep
sarb
clc
gs
repnz
ja
inc
es
push
push
loope
cmpsb
mov
inc
outsb
xchg
mov
xchg
clc
jae
out
mov
iret
inc
into
lea
push
iret
insl
sahf
push
js
cmp
aas
test
or
ss
cltd
xor
xchg
out
push
mov
adcb
jb
adc
mov
xor
or
jne
and
lods
add
subb
cmpsb
push
scas
and
cmp
bound
or
mov
inc
cmp
xlat
push
test
push
pusha
jns
subl
add
rol
aaa
addb
inc
inc
sbb
aas
notw
fsubs
enter
out
adc
out
dec
push
popf
jecxz
jb
push
jmp
mov
push
inc
lea
pop
push
jecxz
mov
ficomps
jbe
notb
cmp
sbb
stos
ljmp
in
adc
lock
push
testb
imul
icebp
sub
inc
push
push
mov
imul
adc
andl
into
cmp
orb
cmpsl
mov
xor
clc
and
fistpll
daa
mov
mov
xchg
outsb
aaa
aaa
stos
lods
int
inc
outsl
and
data16
xor
xchg
js
adc
js
add
out
dec
jp
mov
inc
push
shlb
adc
cmpsb
jp
jbe
mov
int
sub
pop
jle
fwait
cmp
and
loop
pop
in
insl
test
or
push
push
mov
daa
adc
nop
push
add
jnp
movb
daa
and
jbe
test
arpl
movsb
push
arpl
stos
mov
popf
in
adc
push
pop
xchg
mov
push
add
scas
fmul
mov
fcoms
jle
ss
xor
mov
and
jg
adc
fsubl
push
stos
adc
call
scas
movsb
xchg
pop
jmp
fdivs
mov
pop
mov
or
and
in
fs
idivb
testl
mov
dec
pop
cmc
or
mov
xchg
xchg
jg
movd
ds
push
mov
or
mov
mov
loop
xchg
scas
js
gs
pop
xlat
pusha
enter
cmpsb
bound
pop
mov
jge
out
cltd
mov
fcmovb
lcall
lcall
push
jno
cmp
add
out
mov
jns
inc
jae
cmp
pusha
shll
mov
mov
add
ljmp
pop
iret
and
adc
pop
mov
dec
xchg
shll
inc
inc
fxch
pop
xor
scas
xchg
addr16
popa
movsb
in
inc
mov
xor
pushf
or
ss
jbe
in
cmp
and
cmp
pushf
xchg
loope
faddl
inc
aad
sbb
jnp
xchg
cmpsb
dec
xchg
pop
pop
mov
mov
pop
aas
mov
push
sbb
repz
mov
lea
mov
pop
loopne
xchg
push
and
fsubl
jmp
mov
frstor
cld
lea
je
add
mov
out
das
push
add
js
shld
das
add
clc
out
xor
and
hlt
lahf
push
cmp
cld
or
cltd
gs
push
clc
mov
stos
jecxz
sbb
cltd
js
add
jnp
cmp
pop
mov
stc
pop
mov
xchg
mov
xor
aas
xchg
mov
loope
scas
dec
testl
or
ja
sub
xlat
cld
shll
stos
jl
pop
adc
aam
outsb
dec
mov
jbe
dec
mov
sbb
xchg
dec
pop
loop
test
inc
sbbl
jbe
outsl
gs
ja
mov
dec
movsl
mov
scas
outsb
or
xlat
mov
jecxz
cs
jg
rol
xor
into
ja
clc
sub
xorl
mov
mov
in
xor
sub
dec
mov
sbb
and
fs
ja
aas
imul
sbb
inc
negb
push
aad
loope
fldt
xor
and
jp
or
ja
mov
or
push
add
mov
xor
ret
cmp
inc
cmpsb
jbe
neg
pop
and
out
ljmp
mov
daa
xor
pop
gs
cmc
stos
out
cld
iret
jne
ds
clc
ja
ret
cmp
mov
dec
mov
and
sub
mov
and
mov
bound
insl
imul
inc
rol
inc
inc
pop
and
pushf
lds
aas
es
jne
aad
mov
sbb
xor
inc
mov
or
mull
xchg
add
push
bound
cmpl
jmp
hlt
cli
or
xchg
and
stos
in
into
ja
daa
lcall
mov
in
pop
int
notb
sbb
push
mov
push
fcmovb
mov
into
jmp
push
xor
in
cmpsb
jg
ret
arpl
ror
push
xor
imul
cmpsb
fs
movsb
adc
mov
mov
lcall
cwtl
icebp
jae
fisttpll
and
sub
imul
clc
cwtl
adc
imul
ret
scas
popa
cmp
daa
fs
dec
adc
test
pop
mov
jnp
mov
jmp
mov
xor
shlb
jg
and
repnz
out
inc
mov
ffree
mov
pop
push
sbb
cld
inc
orl
cmpl
testb
xor
adc
push
ret
jbe
adc
gs
xchg
ja
sahf
fsts
jae
push
xchg
lods
cwtl
dec
stos
fists
push
lgs
cmp
pusha
dec
ds
out
pushf
fcmovnb
push
xchg
ja
fistpl
aam
cltd
mov
aad
push
jb
cli
ss
or
out
sub
sahf
sbb
sbb
push
sub
push
add
and
jg
das
mov
mov
pop
out
ds
imul
lret
jo
xchg
cli
mov
out
cmp
adc
inc
das
jne
mov
icebp
inc
loopne
aas
cltd
aam
mov
lcall
loopne
push
int3
ret
fiadds
xchg
mov
mov
shll
call
nop
mov
pop
cmp
inc
dec
push
bound
out
addr16
or
mov
shrl
jnp
int
push
icebp
es
imul
repnz
adc
pop
add
jbe
mov
std
adc
push
jmp
rclb
push
push
clc
sbb
sub
leave
xchg
cmpsb
mov
mov
mov
stos
add
loop
imul
fidivl
sub
scas
add
and
adc
negb
fwait
das
xor
mov
ja
jbe
into
sub
in
adc
add
xchg
pop
mov
scas
jae
jnp
add
rcll
lock
outsb
stos
ja
adc
jg
cwtl
lahf
sub
or
fildll
mov
dec
cld
mov
out
jno
nop
cltd
mov
pop
xor
mov
in
mov
lods
and
pop
rcrl
sub
out
adc
leave
add
add
xor
sahf
shlb
lock
lods
mov
mov
aam
aas
mov
loopne
imul
add
or
outsl
cmp
or
dec
adc
push
int
fcompl
mov
pusha
push
xchg
ja
or
int
push
jne
mov
lock
xchg
inc
cmpsb
shlb
sbb
dec
fndisi(8087
das
lahf
cmp
std
insb
xchg
sub
and
pop
jnp
adc
aas
xor
rcrb
cmpsb
push
imul
dec
adc
xor
or
mov
outsl
loopne
fisttps
int
das
pop
fsubl
fwait
cltd
aaa
mov
xor
xchg
cmp
cmp
ja
aaa
pop
inc
inc
mov
in
xor
aaa
push
popw
out
lcall
mov
in
rorl
xor
and
jle
sub
repnz
or
dec
add
fwait
pop
sub
cmpsb
mov
adcb
jae
pop
int
dec
fdivrs
mov
xchg
jne
cmpsb
bound
repnz
jmp
mov
mov
mov
sbb
xor
pop
imul
rcrl
cmp
popf
jno
or
jmp
into
cmc
out
insl
scas
jb
and
jnp
push
mov
push
xchg
push
mov
xchg
cltd
and
mov
sub
xchg
pusha
push
inc
jb
jne
aad
push
aas
xchg
adc
aas
sarl
or
subb
int3
mov
mov
jb
cli
insl
cmp
cmpsl
outsl
dec
xchg
jbe
jle
lods
ja
cs
lods
mov
xchg
pop
mov
clc
push
jno
iret
or
pop
sbb
test
sbb
loop
jo
fidivrs
push
clc
test
mov
das
stc
push
xchg
pop
lock
test
incb
xchg
pop
js
cltd
iret
mov
mov
sti
movsb
and
out
rorb
mov
arpl
clc
push
lret
out
jmp
or
stos
clc
mov
stos
ja
sahf
mov
lea
sbb
fmull
fnstenv
cmc
shrb
inc
jle
imul
test
inc
push
lea
popf
or
repz
sahf
pop
and
dec
clc
pop
mov
fnstenv
aas
cltd
dec
sub
pop
dec
push
mov
test
pop
ja
inc
dec
jbe
arpl
notl
inc
inc
into
lcall
pop
out
int3
dec
scas
push
cmp
sbb
xor
mov
fiaddl
loop
mov
cltd
loope
out
xchg
mov
mov
ficoml
pop
xchg
loopne
fidivl
xchg
pusha
pushf
and
idivb
jo
loope
ret
es
pop
mov
dec
rcl
loopne
sbb
rclb
pop
out
gs
int3
mov
arpl
sub
mov
nop
push
mov
jno
xorl
xchg
adc
sbb
xchg
xchg
mov
and
lods
and
push
mov
inc
mov
andb
test
push
into
cmp
xchg
inc
hlt
aas
mov
pop
in
movb
xor
cmp
inc
and
gs
push
sub
in
repnz
adc
cmpsb
mov
sbb
scas
mov
inc
ss
inc
sbb
mov
and
fnstenv
mov
mov
leave
pop
dec
add
sarl
push
mov
jle
or
inc
cmc
mov
cmp
es
cwtl
adc
or
dec
inc
mov
adc
cmpsb
das
ucomiss
pop
xchg
fidivrs
shrl
es
cmp
push
loopne
sbb
mov
in
jle
loope
rclb
incl
sub
aaa
lock
jle
mov
add
jle
outsb
neg
or
out
jno
jbe
xor
std
inc
dec
jbe
incb
loopne
mov
cli
int
fsubrs
and
mov
push
ss
add
fidivs
pushf
push
fidivrs
int
or
cmp
mov
inc
and
lds
inc
inc
xchg
inc
out
nop
out
scas
pop
out
inc
xchg
lahf
cmp
cmp
and
inc
mov
jb
xchg
dec
push
int3
jp
add
or
add
adc
movb
loop
ror
xchg
xor
shlb
dec
inc
ficoml
aad
add
js
loopne
lahf
loope
cmc
jle
int
ss
push
emms
out
int
add
sahf
pop
adc
loop
js
fdivrs
sahf
cmp
out
cmpsl
ds
sub
add
and
add
push
ds
decb
mov
sahf
fdivrl
shll
dec
enter
cmp
xor
adc
cwtl
mov
or
test
jbe
repz
xor
jmp
inc
rol
inc
jp
xchg
mov
sbb
pop
sub
xor
insl
shr
iret
inc
pop
gs
sbb
or
fnsave
mov
xchg
ficoml
dec
xchg
out
mov
cmp
les
push
ja
adc
mov
sarl
adc
inc
mov
stos
mov
ror
fs
pop
mov
loope
and
mov
push
addr16
cmpsl
jbe
shlb
xorl
mov
cmp
inc
push
gs
popf
fwait
sti
cmpsl
jbe
scas
and
jae
test
xchg
sahf
xor
shll
xchg
mov
loope
stos
scas
mov
mov
dec
xchg
inc
xor
rol
push
cmp
inc
mov
xchg
stc
mov
cmp
lret
notl
shll
lea
jbe
mov
test
cmpsl
jne
scas
mov
shl
jb
sbb
orb
mov
push
xor
xchg
ja
and
mov
mov
shll
xchg
mov
sub
mov
mov
int3
pop
popa
jg
and
lods
sbbl
push
hlt
ja
incl
dec
adc
jbe
jnp
sub
mov
xlat
loopne
xchg
stos
mov
rcrl
out
dec
or
stos
sti
or
push
inc
test
xchg
sub
in
mov
and
out
bound
pop
lcall
sbb
icebp
fs
iret
cld
std
lock
scas
ret
jbe
mov
mov
aam
ja
pop
fwait
xor
jo
xor
pop
test
jbe
sbb
push
outsl
mov
sbb
push
arpl
jbe
int3
dec
cld
ja
cmpsb
dec
cltd
gs
pop
pop
movsb
pop
or
add
push
inc
and
push
out
pop
ljmp
fwait
dec
inc
or
jp
add
pop
int3
test
repz
dec
or
add
mov
jbe
xor
sub
cld
dec
jg
xchg
mov
pop
shlb
call
fisttps
pop
or
dec
jno
or
sub
mov
test
adc
addr16
pop
into
pop
xchg
ss
mov
ret
inc
das
xchg
aam
cmpsb
mov
in
enter
out
jp
inc
mov
pop
mov
mov
inc
cmpsb
push
pop
mov
xor
ja
in
jbe
add
lret
adc
pop
mov
pushf
test
cvttps2pi
jle
jecxz
cmp
les
icebp
in
jle
fidivl
pop
pop
inc
das
pop
jle
mov
pop
add
not
xchg
test
cld
dec
adc
rcrb
ja
cmpsb
mov
sub
pop
pop
test
inc
push
push
mov
jp
push
mov
xchg
data16
aas
sub
shlb
push
test
or
lods
sahf
cmc
xchg
in
negl
mov
sbb
lret
jns
fwait
aaa
rcrl
incl
mov
sbb
rcrl
es
jae
rol
xor
and
fdivrl
mov
adc
push
pusha
xorb
push
mov
add
push
stos
dec
or
aas
push
cltd
sub
and
mov
mov
int
and
and
adc
cmp
push
outsl
shrb
cmp
sub
mov
jne
push
aad
jbe
call
xchg
out
jne
dec
gs
lret
out
andl
in
mov
sub
push
sarb
sub
js
pop
adc
and
push
ds
push
popa
jae
jg
out
je
aad
cmp
push
or
jnp
int
aam
jl
aam
fwait
shrl
into
fistpl
jbe
loope
adc
out
daa
push
jge
jecxz
je
and
frstpm(287
adc
mov
shl
mov
in
jnp
nop
pop
popa
mov
pop
jns,pt
movsl
je
mov
sarl
std
les
fwait
pusha
mov
jno
and
sahf
fadd
mov
cltd
sarb
push
neg
dec
in
das
dec
pop
mov
test
int
jne
into
mov
out
xor
pop
sbb
daa
lahf
fidivs
jbe
pop
fildll
aad
out
adc
jne
pop
add
outsb
jp
pushf
gs
dec
pop
and
mov
mov
mov
loop
xchg
add
scas
in
jg
cmp
or
xchg
out
ja
fcoms
dec
sub
jle
roll
lods
jmp
das
in
xchg
pop
jmp
pop
aas
jmp
rclb
stc
adc
sub
xchg
mov
xchg
pop
jbe
push
fwait
jb
loope
aaa
cmpsb
sub
popa
fs
gs
push
cld
arpl
ret
into
lahf
cmp
arpl
jne
jbe
test
pop
addr16
ja
addb
push
mov
adc
fimull
sub
ds
add
test
das
jo
pop
pop
pop
pop
mov
mov
imul
gs
dec
cmc
dec
pop
fisubs
xlat
add
jns
inc
ss
and
push
mov
push
clc
gs
in
and
xchg
out
pushf
jbe
call
xchg
stos
pop
and
notl
pop
adc
sbbl
test
and
mov
add
daa
push
aad
lods
sbb
xchg
out
lods
loop
and
push
push
fstpt
dec
or
out
lahf
mulb
ja
rcl
cmp
mov
fdiv
mov
and
mov
out
nop
mov
aaa
gs
xor
shlb
jns
or
mov
sbb
mov
lea
imul
sub
or
arpl
andl
inc
in
mov
and
jbe
mov
sbb
les
outsb
sahf
mov
lea
ljmp
xor
loope
fwait
es
cmp
lds
sti
test
jg
out
out
daa
aas
xor
jae
outsl
mov
push
iret
cs
sarb
jg
inc
lcall
frstor
mov
jb
xchg
call
cli
in
ja
fucomi
cltd
cmp
xchg
out
das
pop
or
shlb
dec
dec
inc
movsb
inc
mov
mov
icebp
mov
xor
mov
out
in
std
inc
push
pop
or
rcr
bound
insb
xor
scas
adc
popf
jbe
das
dec
xor
push
pop
xlat
xchg
dec
xchg
aad
jns
inc
ja
pushf
push
bound
jle
out
xchg
sub
add
es
mov
test
cmc
pushf
jo
leave
sub
and
pop
jnp
push
loop
aam
xchg
jnp
fdivrl
jbe
and
adc
fbstp
mov
testl
jne
das
daa
and
mov
pop
xchg
dec
sub
mov
xor
jmp
sbb
std
out
loopne
add
pop
mov
dec
sbb
sub
or
jae
xor
arpl
add
rcll
inc
add
stc
pop
loop
cmpsb
xchg
xchg
pop
mov
cwtl
in
pop
sub
sbb
mov
idiv
xchg
push
mov
ja
mov
cltd
rcl
cmp
xchg
xchg
loop
push
add
jo
or
fs
ss
shrb
mov
and
dec
inc
and
dec
aas
adc
jecxz
pop
outsl
jecxz
mov
test
cmpsl
xchg
aam
push
in
pusha
push
push
cmc
push
mov
cmpsb
ja
xorb
pop
sub
cli
jl
xor
pop
xchg
int
ja
xor
cld
dec
rol
dec
clc
mov
jmp
mov
adc
clc
inc
and
push
inc
call
pop
es
dec
in
xor
push
sti
into
ja
in
mov
and
cmpsb
shl
adc
jmp
xorb
negb
mov
lds
stos
jmp
xlat
jo
dec
xor
pop
mov
sub
shlb
push
xchg
xchg
jl
and
dec
inc
mov
xchg
or
dec
add
xchg
inc
ljmp
aaa
inc
insb
mulb
lods
adc
jmp
jbe
gs
jne
inc
push
lahf
mull
sub
or
cmp
in
push
pop
jg
or
pop
lods
mov
mov
lcall
aas
sbb
cmpb
gs
test
aas
jl
fwait
cmp
das
mov
dec
stos
int3
xchg
or
sbb
mov
jmp
rorl
xchg
mov
inc
gs
xchg
popl
cmpsl
pop
inc
or
add
aad
sbb
jno
lahf
mov
cmpb
mov
gs
push
es
cmpsb
xchg
push
popa
mov
push
mov
btc
roll
pop
cwtl
mov
cmpb
fwait
inc
arpl
mov
or
jne
je
and
jp
jbe
stos
shl
mov
loop
dec
cmpsl
ja
call
sbb
rorb
repz
in
int3
pop
dec
fwait
push
xchg
scas
lods
lret
dec
mov
adc
pop
adc
xchg
clc
lods
mov
addr16
ja
sub
xchg
mov
gs
loope
les
loopne
fildl
push
jns
xor
jae
push
sub
push
jmp
cmp
cs
push
popfw
dec
push
popa
or
push
stos
sbb
dec
pop
and
cmpl
pop
out
pop
mov
add
mov
mov
pop
mov
xor
push
rcl
bound
lods
adc
lds
jne
fildll
xor
jle
push
sbb
inc
aam
mov
xchg
xor
xlat
jge
aaa
lret
lds
lds
or
pushf
nop
add
and
xor
or
jnp
push
mov
ja
and
cmp
xchg
rcrl
mov
pop
cmp
adc
movsl
in
xchg
dec
xchg
dec
mov
insl
add
imul
dec
xor
cmp
mov
or
jb
addr16
aaa
jb
wbinvd
mov
gs
and
pop
aam
stos
inc
and
adc
test
lea
imul
push
test
jb
addb
add
mov
scas
stc
adc
rclb
imul
sbb
movsb
or
or
adc
sbb
imul
pop
add
mov
mov
in
int3
les
pop
jge
icebp
lds
nop
lock
test
mov
mov
pop
scas
mov
repnz
inc
sahf
inc
cltd
xlat
xor
dec
jge
inc
int
subl
in
mov
xor
cld
push
mov
inc
incb
insb
mov
jmp
jg
bound
cmp
in
add
in
adc
sahf
sub
rcll
mov
cmp
dec
lods
and
loope
jmp
shlb
je,pt
jo
or
jbe
fmull
mov
scas
or
pop
mov
inc
cmp
jbe
gs
ds
fsubrs
and
push
inc
sub
pop
addr16
lahf
dec
adc
xchg
adc
adc
sti
add
test
xor
inc
inc
idiv
xor
jae
inc
pop
ja
gs
enter
popa
mov
sbb
dec
push
or
ja
adc
test
cmc
mov
add
in
pop
movsb
shll
lds
mov
xchg
jg
lcall
xor
clc
ja
xchg
mov
ret
mov
aam
cmpsb
pop
cmpsl
sub
or
adcl
in
jnp
ror
xchg
lds
js
insb
out
ja
push
dec
lds
pop
into
ret
outsb
pop
fildl
xor
outsl
notb
idivl
out
dec
adc
jns
rorb
gs
pop
popf
adc
lret
add
xchg
shlb
mov
fbstp
pop
std
xlat
rol
jbe
pop
adc
arpl
movsb
out
xchg
cli
mov
and
lahf
dec
mov
out
bound
add
dec
xchg
clc
stos
mov
xchg
pop
mov
mov
in
or
or
adc
arpl
aas
inc
leave
xor
divl
fsubrs
mov
dec
cltd
mov
mov
lahf
out
cmp
and
xchg
ja
decb
xor
mov
xchg
or
dec
fwait
jbe
jb
cs
loop
inc
jmp
mov
fildl
adcl
pop
inc
and
sub
fsubr
lret
gs
dec
fwait
cld
or
cmpsb
rolb
mulb
bound
add
leave
pop
and
push
scas
jae
jmp
inc
mov
sbb
sbbl
push
cmpsb
xor
mov
cmpsb
pusha
xchg
arpl
in
jbe
lock
add
sub
push
jg
xor
jbe
jae
clc
fsubs
negb
into
cwtl
ja
mov
ret
and
in
iret
ret
sbb
or
dec
add
jg
cld
sub
add
repnz
push
dec
adc
push
stc
fdivr
rolb
outsl
jge
push
jb
std
aam
je
jmp
mov
lock
push
lret
cld
xchg
hlt
aas
adc
int
mov
sub
adc
idivl
fdivl
gs
dec
insb
sbb
add
in
imul
mov
shlb
pop
xchg
in
mov
and
xor
arpl
pop
in
pop
dec
and
or
insb
sbb
push
sbb
std
loopne
xor
fs
add
aaa
std
xchg
lea
cltd
ret
or
or
nop
neg
movsl
bound
cld
sbb
inc
jnp
dec
mov
xchg
xchg
xor
push
push
push
mov
mov
xorb
addr16
mov
xchg
punpcklbw
pop
push
stos
jo
decb
ss
pop
shld
adc
push
sub
in
mov
sub
jecxz
testb
and
aas
jle
lea
or
je
adc
rcll
mov
inc
repz
sub
ret
inc
mov
cmp
sub
adc
mov
es
jbe
mov
mov
js
xchg
clc
jg
loopne
ficoms
push
inc
dec
xchg
stos
sub
jae
adcl
aas
fwait
lock
ja
orb
outsl
jmp
mov
iret
flds
sbb
in
xchg
mov
dec
enter
out
mov
lret
in
and
pop
cld
dec
add
inc
rol
bound
pop
mov
sbb
inc
or
shrb
inc
xchg
out
scas
adc
jle
insl
xor
mov
adc
dec
sub
xchg
faddl
xor
jnp
lds
cld
in
mov
adc
jmp
aas
xchg
lock
sbb
pop
sub
pop
imul
push
adc
test
loop
cwtl
ljmp
ja
or
je
repz
pop
and
in
jb
loope
adc
adc
push
xchg
push
arpl
mov
or
and
test
ja
mov
xlat
push
add
bound
in
push
mov
aas
push
pop
int3
out
xor
cmpsb
mov
cmp
mov
xorb
dec
fcmovnu
mov
push
in
sahf
test
dec
insl
xor
xor
in
sub
movsl
notl
in
pop
cmp
test
iret
dec
pop
lret
xor
push
push
ret
ja
mov
cltd
xchg
mov
cmpsb
dec
je
mov
lods
and
outsb
jnp
and
in
out
cmp
and
xchg
push
cwtl
or
arpl
push
cmp
popl
jbe
rorb
push
daa
stos
aam
aas
cmp
lcall
cmpsl
cmp
sub
push
or
xor
cmp
scas
mov
cmp
scas
sbb
in
dec
in
mov
loope
loopne
movsb
or
cmpsb
test
fldcw
arpl
add
iret
push
pop
cmp
inc
and
sahf
out
xchg
cli
imul
push
popa
pop
xor
sbb
push
je
ret
popl
or
push
pop
gs
aaa
fwait
cmp
mov
nop
cmp
outsl
mov
jbe
pushl
sub
in
bound
jo
out
xchg
cmp
into
or
push
jle
xlat
jg
pop
pop
out
sti
iret
jge
xchg
mov
sbb
xchg
push
cmc
xchg
adc
pop
ja
bound
mov
leave
and
and
aad
cs
jo
jae
loop
add
xchg
mov
scas
arpl
in
dec
int3
push
or
ljmp
popf
rorb
adc
xchg
mov
clc
and
inc
int3
lods
in
in
ja
mov
cmpsb
mov
scas
pop
cli
pop
mov
sahf
fstpt
xchg
fld
pop
xchg
hlt
out
outsl
push
jecxz
and
out
jmp
sub
xor
xor
out
mov
stc
clc
adc
mov
sub
loop
ja
orl
cmpsb
movsb
or
push
mov
jl
or
inc
xchg
sub
mov
cmp
xchg
dec
mov
daa
or
ja
push
aam
mov
pop
jno
and
or
push
mov
scas
sub
xor
and
jge
push
and
push
inc
aas
mov
and
pop
mov
in
mov
cmp
or
bound
push
and
outsb
inc
shll
aas
push
ds
mov
mov
loope
in
adc
and
xchg
cltd
add
inc
imul
dec
xchg
push
sbb
ds
xchg
lods
lret
adc
lahf
pop
cmc
shr
cmp
test
gs
mov
pop
cmpsb
fisttpll
jge
xchg
and
push
cltd
ficoml
mov
xchg
push
out
mov
push
mov
jmp
insb
pop
ss
aaa
call
mov
dec
mov
jnp
loop
xchg
or
int3
ret
pop
adc
pop
jmp
jns
jge
fdivl
mov
stos
daa
je
clc
adc
push
pop
std
push
je
orb
mov
sbb
out
mov
pop
inc
push
enter
imul
push
push
mov
outsb
loope
pop
subl
mov
xchg
or
pop
xchg
jnp
lds
clc
add
ja
mov
clc
jbe
jmp
mov
dec
xchg
adc
rcrb
pop
adc
outsl
pop
jp
les
mov
and
lahf
test
outsl
lds
push
outsb
mov
cli
sbb
jae
inc
sbb
imul
mov
inc
in
mov
mov
movsb
notb
cmpsb
aam
mov
push
mov
lods
jb
icebp
cmp
push
clc
xchg
xchg
rcrb
inc
jbe
inc
mov
in
push
mov
mov
cmp
xchg
ljmp
dec
mov
lock
std
adc
notb
bound
ret
xchg
xchg
inc
popa
int3
jnp
sbb
cld
and
loope
inc
mov
repz
leave
inc
in
lcall
add
ficoml
push
iret
sbb
ja
je
cmp
xchg
movsb
adc
sub
testb
and
not
xchg
and
jecxz
xchg
jp
mov
fldl
push
fldcw
and
scas
xchg
jmp
addb
pop
out
adc
loopne
add
out
dec
addl
cld
inc
iret
insl
arpl
dec
pop
sub
arpl
and
gs
jmp
xchg
std
inc
sbb
add
lcall
outsl
xor
jge
jbe
out
dec
aad
ja
jno
das
cmp
add
aad
push
and
int3
int3
mov
call
mov
test
jmp
fmul
xor
ljmp
mov
clc
xor
loope
mov
daa
roll
mov
mov
outsb
pop
jbe
pushf
ja
scas
addr16
xchg
or
mov
adc
push
push
lahf
sbb
shll
mov
loope
das
into
test
data16
add
add
mov
les
stos
out
mov
clc
push
jle
pushf
and
lds
jge
pusha
push
push
mov
imul
mov
sub
hlt
ja
push
push
mov
xor
dec
inc
ja
mov
rolb
mov
popa
xchg
lds
push
push
imul
in
xor
dec
adc
pop
sbb
cmp
out
pop
cmp
jbe
xchg
xchg
scas
arpl
cmp
adcb
subl
cmp
outsl
in
inc
add
adc
int
pushf
bound
clc
add
rcrb
ds
repnz
or
and
out
pop
xchg
lock
jmp
dec
aam
xor
pop
sbb
xchg
pop
addr16
int3
imul
lds
adc
sbb
ficoms
mov
dec
scas
push
pop
jg
or
inc
push
inc
jmp
pushf
push
call
pop
xor
mov
outsb
mov
push
add
pusha
adc
xchg
fcom
push
aas
outsl
jecxz
jg
inc
out
push
lahf
xchg
mov
movsb
mov
stos
ret
fwait
cld
enter
mov
push
cmpsl
jbe
enter
pop
or
jbe
cmp
shrl
mov
mov
mov
sub
fisubl
pop
outsb
xchg
and
aaa
xchg
pop
rcll
mov
mov
sub
mov
mov
sarl
loopne
negb
push
out
mov
dec
int3
and
xchg
hlt
lods
lret
jbe
mov
xor
push
add
movsl
mov
mov
inc
cmp
sub
mov
add
push
mov
push
cli
add
pop
push
aad
xchg
mov
lods
aad
mov
aaa
mov
add
decb
push
mov
add
out
into
inc
pop
mulb
outsb
push
add
das
aaa
push
addr16
gs
push
cmp
jbe
xor
cmp
add
xchg
push
data16
scas
pop
push
push
es
jle
lret
in
das
out
setle
mov
cmp
inc
mov
out
aam
mov
mov
ss
adc
adc
mov
xor
in
or
and
mov
dec
mov
es
std
ds
cmp
xchg
dec
add
pop
lods
ficomps
rcrb
dec
outsl
adc
xchg
jae
cmpsl
ss
std
cmpsl
mov
add
and
inc
ja
pop
es
pop
int
pop
fadd
cmpsb
loope
out
aad
mov
cmp
rcll
ja
gs
push
add
push
mov
push
pop
inc
mov
outsb
xchg
push
and
push
and
jle
jno
ds
cmpsb
mov
jmp
sbb
in
xchg
es
shlb
add
ds
push
leave
and
xchg
inc
pop
and
fcoms
push
inc
mov
xchg
mov
out
dec
dec
into
in
xor
xchg
and
jo
add
fst
cmp
push
loope
cltd
adc
lret
pop
test
cmp
mov
or
in
push
mov
sub
jg
std
mov
mov
xor
sub
sub
pushf
jb
and
out
dec
cmp
out
ja
xor
mov
and
fidivs
adc
push
mov
push
icebp
stos
xor
cmp
or
ss
imul
mov
ja
push
out
pusha
fwait
mov
push
pop
inc
in
sub
mov
cmp
and
sub
rorl
hlt
gs
lret
fisttpl
jp
add
pop
movsb
mov
pop
stc
xchg
loop
pop
and
or
dec
int
lcall
adc
aad
cltd
movsl
pop
adc
fwait
repnz
cmp
jnp
enter
mov
mov
mov
sbb
xchg
stos
push
push
dec
mov
dec
and
cltd
testl
jg
ja
sbb
jmp
loope
loope
and
pop
popa
ja
pop
mov
shll
add
xor
outsb
add
insb
imull
dec
adc
out
nop
xor
sbb
sub
pop
divl
adc
fidivrl
jl
or
rclb
push
arpl
jl
add
cmpsl
iret
in
clc
sarb
pop
or
xor
adc
loop,pt
and
ss
ja
jb
xor
mov
mov
cmp
pop
aas
jnp
inc
xor
notl
mov
cmp
fdivrp
add
xchg
adc
inc
call
loope
stos
mov
fcmovu
inc
out
dec
fbld
ljmp
push
pop
push
cmp
mov
lea
mov
pushf
fisubrs
sub
es
in
sar
cld
xchg
dec
pop
or
dec
outsb
ret
or
movsb
clc
push
lcall
sbb
stos
loop
test
xlat
scas
inc
xor
pop
sub
popf
shlb
jmp
push
mov
bound
cld
ss
mov
imul
inc
push
pop
aaa
fxch
fisttpl
adc
xchg
daa
popa
mov
cmp
enter
pop
adc
inc
mov
into
jp
cltd
inc
iret
aas
das
xchg
mov
adc
sub
sub
cs
sbb
mov
bound
jmp
pop
sub
xchg
test
push
inc
fwait
cmp
addr16
scas
pop
and
xchg
lds
rclb
mov
sub
lods
movsl
xor
fwait
push
cmpsb
in
in
gs
or
push
movsl
and
cs
mov
rcrl
enter
dec
lahf
mov
xchg
xchg
cmp
add
ss
ret
push
bound
mov
fidivrs
push
or
sub
pop
jecxz
push
test
pop
orb
push
aam
arpl
insb
ficoms
mov
mov
cs
sub
sbb
add
dec
push
sub
in
adc
in
cmp
repz
inc
fidivl
xor
mov
cs
aam
test
mov
outsb
clc
popa
jbe
sbb
mov
pop
rcrb
or
jb
inc
outsl
nop
rclb
fidivl
leave
shlb
js
out
pusha
and
sub
shll
add
pop
pop
in
dec
int
jae
fsubr
pop
sbb
cld
roll
cmpsb
mov
push
in
daa
rcl
sbb
fbstp
inc
ja
call
inc
gs
jbe
or
arpl
push
fsubs
mov
repz
push
bound
loope
aad
js
cmp
mov
ja
sub
xchg
out
xchg
clc
mov
cli
xchg
cmc
aad
jl
push
sub
jo
iret
mov
imul
mov
dec
mov
es
mov
fisubl
dec
aaa
and
cld
jle
jb
subl
sbb
gs
outsb
add
test
repnz
adc
cmpsl
push
cltd
rclb
xchg
movsb
cmc
and
push
pop
into
call
or
mov
lea
insb
clc
mov
cmpsl
push
test
push
in
cmp
ljmp
in
add
sub
test
inc
ja
sahf
pop
lahf
mov
mov
jg
inc
adc
fnsetpm(287
pop
push
or
cs
xchg
adc
hlt
mov
push
fs
pop
lds
sub
pop
out
push
inc
inc
andb
pop
popa
test
jae
inc
cld
and
scas
push
dec
shrb
into
stos
fisubrs
sbb
les
lds
stc
xor
pop
sbbb
in
push
xchg
aas
jecxz
sub
cmpsb
jae
cmpsl
push
xor
push
adc
jl
stos
dec
pusha
in
xchg
jae
push
imul
push
popa
fiaddl
stc
mov
pop
imul
lock
dec
pop
dec
xchg
mov
mov
addb
sub
inc
loop
mov
lahf
mov
pop
xchg
pop
jmp
sbb
test
xchg
push
push
imul
jbe
mov
mov
inc
movsb
sbb
outsl
in
outsb
scas
inc
xor
into
xor
jbe
mov
dec
iret
inc
aas
dec
mov
add
pusha
mov
cmp
push
push
repz
pop
xchg
pushf
inc
adc
xchg
and
mov
ja
aad
aam
and
jle
push
sarb
mov
sbb
pop
cmpsb
mov
popa
bswap
push
mov
sub
inc
xchg
in
ja
popa
shl
jmp
add
in
xchg
cmpsl
dec
inc
arpl
mov
pop
pop
ljmp
push
out
in
add
mov
loop
gs
sub
into
int3
mov
and
aad
gs
jbe
iret
fiadds
es
clc
mov
add
mov
mov
cmpsl
ja
mov
imul
push
lds
sub
xchg
and
sahf
jnp
outsb
ret
out
divl
xchg
cmp
adcl
into
jmp
aaa
adc
daa
insl
bound
pusha
into
ja
test
int3
int3
std
xor
add
xor
pop
popa
mov
add
jbe
imul
lahf
mov
outsb
adc
pop
sbb
and
inc
dec
aad
inc
push
pop
inc
cmpsl
sbb
adc
out
repz
jle
pushf
mov
jmp
xchg
adc
call
sub
les
std
fs
inc
jne
inc
or
xlat
push
cmp
loope
sbbb
cmpsl
mov
dec
je
or
rorl
cmpsb
ljmp
into
pop
mov
jg
mov
pop
repz
sbb
dec
ret
adc
loope
pop
test
out
adc
sub
popa
jp
andb
pop
clc
mov
je
stc
fcompl
stos
subl
cs
cmp
inc
out
into
in
jb
adc
sbb
iret
sub
outsl
subb
dec
out
cmp
out
lods
xor
out
es
scas
fidivl
roll
cs
add
out
incb
dec
cmpsb
fs
lret
aad
jnp
push
ud0
aaa
and
mov
clc
fistl
mov
cmp
jnp
out
notb
and
pop
xor
int3
fistpll
inc
test
mov
cltd
mov
loop
ficoms
xchg
mov
cltd
imul
xlat
xchg
stc
ret
dec
fstpt
clc
dec
insl
push
mov
out
stos
and
ficoml
movsb
ss
and
stc
shrl
je
xchg
lea
les
ja
push
daa
ret
jle
or
mov
inc
test
push
push
imul
mov
xor
mov
push
cmpsb
popf
push
shlb
or
sub
js
mov
mov
lock
lret
sarb
loope
pop
dec
mov
fwait
imul
sub
mov
out
inc
push
dec
sub
out
call
cltd
push
jb
fistpl
cld
mov
arpl
add
mov
pop
ds
push
not
into
pop
cs
mov
movsl
aaa
call
gs
lret
xorb
push
xor
repz
dec
scas
out
mov
mov
mov
enter
lret
lea
jbe
xchg
lods
dec
push
dec
pop
std
sub
xchg
adc
adc
pop
xor
jns
fldcw
add
popa
cmp
rcrb
pushf
and
mov
add
and
add
daa
pop
test
movsb
test
lcall
bound
dec
adc
rcll
sbb
and
adc
setno
sbb
jl
cmp
add
cmp
rcll
jbe
shrb
mov
cld
sarb
dec
aam
xor
xchg
in
push
sbb
nop
mov
mov
cmp
mov
cmpsb
mov
dec
popa
ja
imul
sahf
or
and
ss
mov
add
imul
mov
int3
jbe
fs
jg
into
sub
jle
shlb
mov
inc
cltd
or
insl
scas
or
fidivrs
inc
cmpsb
ss
fidivl
push
test
add
cmp
jl
and
cmpsb
scas
mov
fsubrs
loopne
xor
mov
loop
pop
iret
into
inc
jmp
cmpsb
scas
mov
add
stos
dec
daa
popf
mov
jb
dec
int3
mov
or
inc
scas
cmpsl
add
mov
xor
cmp
lahf
mov
cld
xchg
adc
in
dec
loope
fcmovu
add
add
leave
enter
out
jbe
jle
pusha
scas
adc
mov
xchg
aaa
pop
push
gs
add
mov
fcoms
in
inc
outsl
mov
incb
das
cmp
add
cli
add
outsl
sub
adc
gs
lds
in
mov
fwait
jno
jle
push
xorl
mov
mov
rcrb
pusha
dec
pop
gs
les
xchg
jg
mov
out
pop
ja
or
mov
xchg
lods
icebp
add
cmpsl
shrb
stos
cli
nop
loopne
or
ja
ret
sbb
sub
sbb
push
fwait
cmp
test
xor
xchg
pop
ss
push
aam
cmc
ja
cltd
cmpsb
xchg
xor
cld
sub
xchg
imul
int3
push
test
jb
pop
xchg
or
stos
push
push
xchg
pop
js
sbb
rclb
fldenv
pop
inc
lods
call
cmp
pop
xchg
add
fisubrs
pushf
add
jns
push
cmpsl
cmc
push
das
das
inc
jp
and
or
loope
iret
xchg
mov
sbb
xchg
or
stos
out
xor
ds
loop
ds
mov
xchg
int3
lea
dec
fidivrl
in
xchg
sub
pminub
movsl
inc
sub
lods
jmp
add
fisttpl
pop
into
daa
ss
mov
and
int3
loopne
cmpsb
xchg
imul
xchg
pop
fwait
mov
into
imul
addr16
cmp
push
mov
xchg
adc
iret
cmp
cld
push
jecxz
cmc
test
pushl
leave
adc
adc
daa
lret
adc
hlt
insb
fldenv
dec
addr16
cmpsl
lock
pushf
or
jp
xlat
mov
jle
pop
and
mov
sbb
jecxz
int
scas
push
test
fidivrs
ja
stc
cmpsb
xchg
mov
icebp
imul
sbb
cmc
cmp
sbb
mov
popf
fwait
daa
sub
call
cwtl
jbe
xor
ret
xor
or
inc
lahf
pop
mov
xchg
sub
stos
inc
loop
xor
pop
ret
addr16
fimuls
push
dec
fcoml
imul
mov
or
aaa
sub
pushf
and
out
or
or
xchg
in
imull
push
or
push
inc
addr16
mov
xchg
fldt
adc
rcll
push
mov
dec
dec
std
test
movsl
xor
test
or
insb
push
cmp
xor
std
inc
pop
xchg
lahf
xor
loope
in
mov
into
cmp
inc
cmp
dec
into
adc
cmpsl
cwtl
or
jnp,pn
xchg
jp
mov
mov
mov
mov
and
mov
aam
pop
jno
rolb
scas
insb
ret
dec
sbb
pop
mov
daa
cli
pop
adc
sub
cmp
inc
cmp
int
xchg
or
jp
es
aas
dec
int3
shlb
int
push
imul
aad
ja
ss
lret
ret
shlb
pop
out
mov
mov
xchg
xor
sbb
inc
rorb
rcr
pop
lret
lds
cmp
in
push
fsts
mov
push
js
jmp
imul
mov
mov
iret
lods
xchg
inc
je
divl
sub
xchg
mov
cmp
push
insl
pop
or
ds
and
push
ljmp
xor
cmp
das
sub
push
into
mov
cld
dec
je
out
pop
in
or
add
es
in
loope
scas
push
or
push
add
arpl
lock
inc
xor
mov
cmp
and
sarb
out
das
jae
pop
adc
pop
pop
iret
xchg
lock
xchg
pop
mov
dec
dec
stos
popa
and
mov
xor
or
in
out
repnz
sbb
sbb
cltd
out
pusha
inc
adc
mov
jb
incl
jge
gs
xlat
adc
out
mov
loopne
lds
xor
call
in
int
int3
xchg
xor
mov
jg
or
add
dec
incb
daa
mov
addl
mov
orl
fbstp
popf
jmp
jl
outsb
push
add
mov
sarb
dec
movsl
jb
data16
icebp
inc
pop
gs
pushf
push
sub
add
leavew
mov
pusha
imul
mov
and
sub
test
pop
ret
inc
in
icebp
push
stos
lds
mov
mov
jno
iret
cmovb
adc
clc
incb
lcall
xor
cmpsl
lcall
pusha
dec
mov
jno
daa
push
xchg
jae
insb
imul
adcl
cltd
dec
out
dec
pop
inc
inc
stos
sarb
pop
mov
bound
mov
shlb
orl
stos
sahf
out
mov
inc
lea
std
push
aad
mov
sub
xchg
aas
scas
mulb
and
iret
xor
mov
js
out
mov
xchg
mov
inc
aas
mov
pushf
cmp
outsb
push
sbb
xchg
push
orl
xor
mov
inc
repnz
mov
xor
pop
dec
lods
push
enter
cli
xchg
ljmp
ja
imul
adc
pmaddwd
gs
stos
call
ret
xchg
cwtl
inc
clc
jo
scas
and
xchg
mov
mov
iret
repnz
mov
sarb
adc
and
pusha
or
daa
adc
mov
stos
xchg
mov
xchg
mov
test
xchg
loop
test
mov
sub
or
pop
cltd
push
push
lcall
mull
psrad
mov
pop
sbb
pusha
sahf
or
xchg
jbe
fs
xchg
outsb
incb
xor
xchg
outsb
mov
cmc
ss
xchg
cmp
int3
cli
sti
fldcw
pop
push
mov
sbb
outsl
rolb
ret
sarl
mov
into
mov
fwait
mov
xor
sbb
sub
mov
test
insl
xchg
pop
loopne
xchg
sbb
outsl
or
lods
or
popf
mov
adcl
add
and
push
jp
pop
adc
xchg
cmp
lahf
dec
data16
loope
jg
jbe
jmp
test
xchg
jb
out
sbb
xlat
int
incb
sarb
mov
gs
jbe
fcomip
dec
add
or
inc
stos
cmp
or
aam
lods
shlb
xor
add
cld
jg
je
fsts
cld
xchg
and
popf
sbb
adc
scas
pushf
dec
xchg
bound
lods
mov
cld
lds
xor
mov
ja
ljmp
imul
iret
inc
xor
inc
ja
and
pop
addr16
js
insb
add
xchg
add
mov
rolb
or
push
xor
or
cmp
adc
mov
js
cmp
inc
aaa
fiadds
ret
fs
call
in
in
pop
mov
mov
pop
arpl
mov
push
push
ss
into
xchg
xchg
pop
imul
and
shll
mov
loop
notl
dec
mov
cs
cmpb
dec
outsl
xchg
mov
inc
imul
push
rclb
addl
cmpl
loope
mov
push
fcoml
cld
xchg
cmp
mov
call
jmp
bswap
adc
and
imul
xchg
add
stos
sub
xchg
cmp
push
cmc
in
into
sub
fisubrs
cmp
adc
push
mov
lahf
sub
stos
adc
fs
or
pusha
lret
xchg
mov
mull
adc
jmp
or
add
and
dec
and
xchg
in
outsb
and
loopne
add
add
mov
in
mov
divl
mov
ds
cwtl
movsb
adc
push
mov
and
insb
ret
xor
shl
adc
pop
lret
inc
xchg
mov
aaa
popf
insb
jbe
in
mov
sbb
addl
fcmovb
push
xlat
xchg
fiaddl
jno
push
jle
icebp
push
dec
xor
push
popa
pop
and
sub
pop
jp
incb
mov
cwtl
cmc
call
fimull
rcrb
mov
add
ds
scas
in
lods
cli
pop
aad
or
lods
std
push
ret
mov
cmp
xchg
pop
jmp
mov
aaa
iret
cmpsl
mov
vmwrite
pop
out
jbe
lock
mov
add
stos
lret
push
int3
dec
and
push
add
xchg
iret
dec
xor
inc
lret
adc
shrd
cmpsl
into
out
jbe
mov
add
add
mov
adc
je
mov
rorb
test
loope
xor
mov
bound
mov
repz
stc
mov
test
daa
leave
xchg
loope
mov
dec
jns
push
outsl
fisubrl
roll
inc
jl
xchg
jnp
adc
shll
sbb
movsl
gs
xchg
mov
fisttpl
jbe
pop
movsl
and
les
xchg
mov
inc
lds
pusha
out
dec
add
fdivl
adc
mov
shll
daa
jno
xchg
test
mov
push
jb
push
sbb
dec
push
jl
ret
jbe
pop
arpl
push
jle
movsb
out
ds
mov
mov
or
mov
and
inc
dec
xor
mov
iret
loop
dec
mov
mov
pop
push
aad
mov
in
repz
fnsave
dec
mov
inc
add
lret
xor
lret
pop
jbe
negb
jbe
or
nop
cwtl
and
outsb
dec
sbb
movsb
sbb
sub
dec
xchg
push
rclb
jmp
loopne
dec
push
cld
mov
es
out
adc
push
gs
push
mov
rclb
pop
lock
or
dec
mov
cmp
jmp
cmpsl
cli
frstor
lods
cld
shlb
xchg
roll
jno
cmpsl
inc
stos
cmp
cmc
and
loopne
xor
push
test
fs
dec
fists
xchg
pop
imul
lret
fsts
int
mov
lock
cmc
cltd
pop
sbb
push
pop
add
mov
psllq
in
lods
fnstsw
push
faddl
push
adc
pop
in
movsl
mov
xor
pop
aad
cs
out
push
mov
stos
xor
push
fwait
pusha
push
pop
pop
aam
push
rorb
dec
inc
sub
add
sbb
mov
outsb
enter
pushf
and
xchg
ja
sahf
test
dec
xchg
pusha
adc
jmp
movsl
inc
mov
jbe
test
xchg
stos
int
and
push
insb
xor
adc
loope
test
xor
sub
and
mov
cltd
lret
mov
or
xor
cs
mov
sbb
test
scas
sub
in
sub
mov
lods
add
hlt
push
xlat
mov
rorb
sbb
push
push
pop
ja
cmp
jmp
insb
or
or
movsl
dec
adc
dec
jnp
dec
in
pop
xchg
imul
xor
mov
pusha
lret
out
cmp
pop
daa
or
int
inc
xor
mov
in
mov
or
scas
aad
mov
fisttpll
pop
pop
lret
push
scas
pop
push
mov
iret
sub
mov
jbe
fsubrl
shlb
mov
popf
jmp
add
pop
fbld
pop
jbe
cmp
nop
mov
dec
aam
mov
jle
push
cmc
dec
out
mov
jo
dec
mov
stos
adc
loopne
sub
fwait
mov
cld
inc
inc
scas
cltd
imul
loopne
inc
cmpsl
xchg
sbb
push
scas
xchg
movsb
stos
and
jns
enter
push
xchg
mov
lahf
test
push
das
mov
test
sbb
insl
dec
cli
out
es
lock
idivl
ja
cmp
jb
pop
enter
lahf
push
das
addr16
adc
repz
mov
pushf
inc
inc
dec
ret
gs
test
stc
xorb
pop
imul
push
push
or
pusha
xchg
aaa
inc
add
jo
mov
mov
mov
sbb
adc
int3
adc
aas
push
and
mov
sub
mov
cmpsl
notb
mov
mov
pop
iret
pop
js
or
ret
rcll
pop
adc
ret
ja
mov
rclb
das
adc
ss
sub
push
clc
push
cmp
xchg
push
xor
scas
add
aas
pusha
stos
push
fistps
push
mov
or
adc
jbe
xor
adc
pop
ret
outsl
inc
stos
cmp
cltd
ja
or
xchg
cmp
sbb
jle
xchg
out
sbb
in
ds
fcmovnb
add
push
xchg
inc
sbb
test
gs
inc
cmp
pushf
push
push
cltd
fxch
fcoml
lahf
cmp
add
int
jb
dec
scas
jbe
sub
test
jb
std
cmp
xchg
shll
lods
inc
pushf
loop
stos
push
out
inc
sahf
clc
push
jnp
dec
gs
out
mov
insl
ficoml
xor
shll
stos
inc
xchg
aad
fbstp
mov
pop
inc
pop
xchg
sub
into
jmp
mov
loopne
mov
lret
dec
xor
je
sub
pop
in
aad
xchg
xchg
jns
sub
inc
add
pop
ret
push
push
inc
and
jmp
or
out
bound
les
addr16
xor
int
test
cmc
pop
and
cli
into
gs
dec
lock
push
and
push
push
or
pushf
stos
mov
rcr
int
mov
mov
fdivl
mov
jo
add
pop
dec
mov
fcomip
and
or
xchg
jge
xchg
bound
imul
aaa
les
mov
shlb
inc
loope
cltd
and
ficoml
pop
addl
lods
add
je
xchg
xchg
imul
popa
pop
clc
in
push
aad
push
movb
stos
cmp
mov
mov
jbe
adc
mov
add
out
adc
shl
in
and
out
pusha
in
pop
or
pop
xchg
mov
and
jg
cltd
pop
mov
mov
or
dec
adc
in
jno
repz
das
push
std
jo
jecxz
rol
popl
jmp
jle
inc
sarb
shlb
add
xchg
xchg
mov
and
pop
sbb
rcll
or
adc
daa
adc
add
mov
dec
mov
mov
pop
mov
in
and
pop
mov
pop
push
mov
push
or
jno
loope
mov
xchg
nop
loope
aam
dec
clc
test
mov
push
lea
loop
ds
adc
mov
jno
cmp
jge
out
ss
in
dec
daa
add
aam
out
imul
pop
xchg
and
lea
adc
push
aam
int3
mov
fisttpl
cld
pop
addb
mov
gs
jbe
loope
xlat
jg
adc
jp
fdivr
loopne
inc
mov
mov
mov
mov
in
ret
mov
jbe
dec
or
dec
pusha
ficomps
cmp
insb
mov
xor
push
sub
xorb
cmpsl
mov
divl
divl
fbstp
xor
ja
es
fisttpl
adc
bound
cmc
xor
and
add
sub
loope
mov
mov
mov
and
jnp
cmp
mov
cmpl
xchg
addl
bound
inc
loop
testb
push
lods
sub
mov
pop
roll
lods
add
jns
notb
inc
aam
xchg
mov
fs
xor
jle
mov
xchg
aad
fwait
ja
xchg
mov
imul
int3
dec
cli
rorl
pop
jmp
shrb
mov
into
cmc
push
push
fs
jbe
out
clc
cli
mov
fs
bound
adc
loope
and
mov
mov
in
jbe
outsl
ja
mov
sub
dec
xchg
popa
sbb
jle
inc
dec
pop
adc
dec
and
add
push
mov
pop
pop
arpl
stos
push
adc
inc
or
pop
mov
adc
in
sti
sub
gs
fistpl
insb
and
jle
push
inc
jb
mov
inc
es
subl
push
pop
or
gs
jnp
inc
lods
mov
jnp
gs
dec
push
mov
rcll
fldenv
ret
mov
cs
daa
jns
pop
je
es
pop
fbstp
mov
ret
out
pop
add
inc
bound
sbb
pusha
test
jmp
popa
mov
lods
stos
mov
pop
xchg
sbb
icebp
out
xchg
insb
xchg
mov
dec
in
or
dec
xchg
idiv
inc
jo
cld
popa
xlat
imul
outsl
pop
sub
add
inc
lods
nop
mov
nop
jo
mov
in
iret
mov
dec
cmpsb
jbe
fcoms
mov
adc
pop
jg
cld
pop
es
loop
and
cmp
mov
xchg
sbb
frstor
xchg
mov
iret
adc
pop
pop
mov
push
dec
out
into
mov
lcall
inc
or
in
sub
shrl
dec
mov
fwait
or
xchg
mov
test
rorb
pop
mov
sub
jle
aas
mov
mov
jae
jne
xor
dec
loopne
aam
movsl
movb
sbb
push
inc
mov
push
or
scas
mov
pop
dec
out
aad
add
fadd
inc
popa
test
loopne
push
sbbl
test
dec
lock
and
mov
gs
dec
aaa
and
inc
rcrl
in
push
jbe
push
xor
addr16
cltd
sbb
dec
clc
push
rorb
into
or
lahf
dec
ja
lods
out
aam
jnp
xchg
xor
xchg
xchg
cmp
push
ret
inc
jbe
or
mov
xchg
push
push
xchg
je
loope
add
xor
lods
xor
imull
sub
mov
mov
inc
jle
mov
rorb
rorl
ljmp
push
or
mov
into
and
push
push
push
std
mov
dec
es
jge
lds
xchg
stos
addr16
andb
cmpsb
lods
sahf
iret
add
jg
pop
jbe
cmp
ds
or
mov
pusha
test
push
pop
dec
and
add
fs
sbb
sub
adc
jne
imul
push
scas
stos
aam
mov
shrb
loopne
add
icebp
xor
lahf
mov
das
or
xor
loop
or
jg
pop
pushf
movsl
cmp
xor
repnz
dec
addr16
mov
aad
jns
push
imul
testl
push
sbbl
popf
stc
rorl
or
or
adc
imul
inc
jno
ds
push
stos
add
fs
repnz
in
in
outsb
cltd
mov
imul
out
jne
jo
fwait
pop
inc
fwait
jnp
fistpl
jbe
int3
xor
pop
ljmp
inc
xchg
mov
fistl
add
adc
xor
out
rclb
sbb
jbe
push
xchg
aaa
lcall
lcall
lea
shlb
adc
dec
out
out
outsl
ss
shlb
fmul
cltd
cmpsb
or
jmp
out
xorl
mov
and
push
sub
mov
cmp
popa
mov
push
and
adc
cmp
xchg
push
cmp
dec
add
ja
push
or
rclb
lds
mov
nop
xor
xor
jge
clc
xchg
sahf
fmuls
gs
xchg
pushf
jp
cmp
shlb
xchg
inc
add
cmp
dec
stos
mov
jnp
rol
cmp
lret
sbbb
mov
push
mov
in
jbe
imul
int
xor
jbe
icebp
dec
pop
or
ret
into
out
lea
das
es
and
mov
stos
test
dec
orl
mov
adc
inc
pcmpeqd
xchg
push
out
subl
or
and
mov
xor
scas
rcl
sbb
jbe
in
jge
pop
mov
clc
lcall
jb
xchg
mov
dec
xchg
std
jae
jno
pop
fs
mov
cmc
dec
and
mov
ja
adcl
sub
inc
dec
adc
push
pop
negb
insb
loope
xchg
mov
xorb
jne
cmp
inc
rclb
rclb
dec
xor
aam
and
movsl
adc
movsl
mov
adc
cwtl
repz
and
adc
xchg
inc
ljmp
xchg
mov
mov
xor
ja
or
pop
repnz
xchg
mov
fsubp
popf
mov
jg
int
pop
sub
dec
cmp
bound
push
adc
and
push
dec
sub
je
rcl
pop
cmp
rep
in
adc
divb
in
int3
and
mov
cld
adc
adc
xor
nop
jae
add
lret
push
jae
and
clc
fcomps
mov
add
leave
loope
imul
ret
sbb
call
rcrb
jmp
and
mov
push
jge
push
jmp
sub
aas
pop
mov
push
adcl
xchg
mov
cmpl
stos
sub
add
sub
ror
jbe
in
sbb
mov
xor
cmp
int3
dec
addr16
push
roll
frstor
xor
loope
outsb
and
fstl
inc
mov
outsl
inc
sti
iret
imul
std
adc
mov
loope
mov
xor
mov
cli
xchg
push
imul
xchg
stos
inc
addl
pop
dec
cmpsl
dec
pop
jbe
mov
fwait
fwait
jns
xor
sarb
inc
ficomps
lret
xchg
xchg
push
lea
adc
cltd
insl
jmp
pop
xor
dec
or
jp
mov
jne
inc
xchg
inc
cld
inc
lcall
adc
in
aam
push
addr16
jo
sbb
repnz
add
pop
outsl
cmpsl
cmpsb
insl
bound
lea
mov
test
daa
cmpsb
jp
nop
dec
jbe
pop
lea
test
or
loope
jge
fmul
xchg
bound
shrb
pop
and
std
shlb
jbe
fldenv
xchg
push
sub
outsl
lods
push
ret
add
adc
out
adcl
sub
arpl
in
sbb
dec
xor
jno
loop
jb
and
xchg
cli
jge,pt
clc
ja
jmp
jbe
enter
clc
div
xchg
dec
sti
faddp
and
fldt
mov
notl
dec
pop
lea
dec
inc
jbe
mov
es
xchg
jecxz
mov
iret
and
repnz
sub
sbb
rorb
xadd
movsb
sub
xchg
inc
imulb
bound
or
jae
jb
mov
sahf
xchg
xor
cltd
daa
ja
shl
inc
int3
inc
cmpsb
movsl
shl
mov
cld
fidivl
cmp
in
jb
shll
subb
clc
dec
sarl
sbb
cld
inc
jo
adc
inc
push
loope
out
daa
sub
or
rcll
mov
mov
pop
loopne
xchg
xchg
mov
xchg
xor
std
cmp
inc
sub
iret
push
add
inc
je,pn
ret
aaa
xchg
or
pop
mov
ja
jns
sbb
test
nop
push
mov
dec
cmpsb
fisubrs
sbb
mov
xchg
pop
pop
push
push
test
lret
scas
adc
cld
test
icebp
daa
clc
leave
insb
loopne
push
adc
fcmovu
stc
or
inc
push
ja
iret
push
mov
inc
push
jae
dec
ss
mov
mov
add
add
rcrb
ret
pop
adc
cwtl
jns
aam
pop
sahf
mull
jns,pn
clc
inc
in
pop
cli
and
pop
mov
or
fdivrl
in
mov
sarb
imul
cmc
jp
movsb
add
iret
xor
movb
dec
or
xor
mov
loop
shrb
int
pushf
inc
scas
ret
and
xor
inc
push
jl
je
cmc
outsb
test
lds
sarb
call
shrl
xchg
jmp
clc
push
adc
push
xchg
out
loop
add
testl
test
cmp
sti
inc
jb
mov
cld
ret
rcl
jmp
loop
inc
and
pop
xchg
dec
jmp
mov
mov
daa
xchg
mov
sub
nop
int3
out
inc
shrl
aas
or
sbb
divb
mov
ret
and
inc
ja
adc
mov
imul
cmp
push
mov
sbbl
into
or
iret
out
dec
gs
xlat
sub
imul
xchg
or
fiaddl
cmc
jns
xchg
fadds
popa
jo
shlb
ja
cmc
xor
ljmp
sub
pop
xor
out
lret
xchg
fadd
insl
inc
push
and
mov
xor
xchg
imul
movb
out
pop
js
inc
and
or
adc
sbb
mov
cli
mov
fiaddl
aaa
xor
imul
mov
push
dec
push
daa
pusha
push
xor
repnz
je
mov
je
jge
push
add
jno
out
pop
je
or
cmpsb
mov
xchg
cmpb
dec
xchg
and
aam
push
xchg
xor
ret
cvtps2pd
and
xor
mov
xchg
cmp
mull
les
aaa
xchg
addr16
int
or
ret
and
dec
aas
jp
cmp
jmp
ja
push
icebp
jae
adc
sub
push
outsb
in
or
iret
addb
fcmove
dec
inc
mov
es
inc
rol
divb
or
mov
gs
les
rcl
lea
xor
sub
faddp
loop
in
lods
lds
inc
cmp
dec
ret
out
mov
dec
movnti
mov
int
pop
xor
ss
sub
mov
cmc
scas
xchg
dec
ja
adc
fdivs
std
outsb
inc
xor
push
xchg
mov
mov
xchg
add
rcrb
cmc
inc
outsl
jb
adc
cs
add
mov
inc
pop
pop
lds
xchg
ss
rorb
and
mov
js
fsubs
fisubrs
fimuls
frstor
mov
inc
mov
ficoms
ret
or
mov
int
ret
fsts
jno
aaa
ss
gs
ja
xchg
push
push
adc
loopne
sbb
xchg
push
cmpsb
dec
rcr
pop
push
pop
sub
cmc
adc
stc
cmp
mov
xchg
adc
imulb
jle
and
imul
js
cld
outsl
clc
int
es
cs
xchg
add
add
mov
gs
mov
testb
es
fiadds
adc
sbb
push
xchg
ja
push
inc
push
dec
mov
loopne
xchg
push
fstp
xlat
push
cmp
mov
ret
ss
std
adc
cli
push
popa
iret
cmc
and
adc
dec
dec
mov
cs
push
xchg
push
push
jle
pop
cmpsb
fstpl
loopne
pop
inc
mov
and
dec
gs
loope
ds
sar
dec
xor
scas
ja
cwtl
inc
jle
xor
jmp
je
stos
push
pop
push
mov
jmp
inc
ja
mov
nop
and
jae
lret
mov
fidivrl
iret
data16
cmpsb
xchg
cli
mov
dec
mov
sahf
adc
push
mov
daa
enter
push
adc
and
enter
loopne
aam
add
sarl
mov
push
xor
movsl
in
jge
sub
rclb
mov
test
sbb
pop
mov
enter
test
cmpsl
sub
jmp
aaa
sub
mov
dec
mov
push
lret
daa
and
fwait
je
lods
push
in
pusha
je
lods
sahf
lock
cmp
jbe
dec
in
mov
jg
rorb
jg
dec
sub
push
lret
fiadds
ja
mov
pop
jo
int3
rcll
insl
mov
int3
add
pop
mov
push
push
lcall
jno
out
or
ja
popa
test
jo
lret
mov
or
mov
aad
add
fisttpl
xchg
aas
push
gs
ds
xchg
insb
andb
jae
dec
cld
pop
xchg
push
add
adc
aam
ja
inc
mov
and
mov
shlb
push
in
dec
movsl
in
push
sbb
adc
test
aad
pop
cmpsb
mov
push
jb
imul
pop
sub
push
mov
and
adc
or
lret
lahf
ret
ret
outsb
in
addr16
cmp
jle
mov
out
or
sub
fs
mov
sub
sbbb
cs
jl
jp
in
mov
add
push
shrl
inc
outsl
cld
sub
orb
adc
jb
repz
xor
dec
and
sub
inc
out
mov
cs
dec
add
testl
push
inc
push
dec
test
arpl
mov
pop
push
jnp
sarb
and
push
jno
adc
xchg
fstl
xchg
lret
xchg
push
cmpsl
dec
sbb
add
xchg
xor
daa
jnp
xlat
popf
jecxz
pop
mov
adc
push
xchg
inc
xchg
scas
in
sbb
ja
push
icebp
lds
or
das
add
cmp
in
or
xchg
cmp
pop
mov
lahf
jecxz
mov
mov
ret
aas
pop
testb
xchg
jae
out
ja
mov
pop
in
lahf
xor
into
xchg
cmp
push
ljmp
mov
pop
pop
sub
xor
cmp
mov
test
xchg
cmp
xor
dec
push
adc
lea
inc
sti
outsb
loopw
sti
sub
push
push
cs
lock
pop
inc
aam
decb
cmp
fldenv
jmp
bound
xor
sub
mov
jae
dec
push
sbb
mov
xor
cmp
xor
cmp
mov
or
fsts
dec
xor
in
fcoml
or
popa
loopne
imul
jns
lods
and
imul
push
jbe
push
aad
mov
mov
in
into
rcrl
push
dec
xorl
lods
repz
push
shll
data16
pop
shll
and
mov
mov
clc
pusha
xor
jne
xchg
add
xchg
cwtl
mov
mov
inc
mov
lret
fcmovnb
cs
sub
test
mov
mov
xor
mov
cs
popa
std
out
daa
pop
jle
and
js
xchg
cld
roll
mov
cwtl
cmp
gs
fs
sbb
out
dec
push
cwtl
cmp
push
fwait
mov
xor
push
lahf
adc
aad
pop
out
insb
mov
and
ret
cmp
or
inc
iret
mov
imul
mov
ds
pop
out
inc
cs
sbb
mov
int
xchg
filds
dec
lcall
mov
add
loop
arpl
daa
xor
xchg
popa
and
push
popa
jbe
inc
xchg
scas
iret
mov
test
xchg
push
and
hlt
loop
mulb
or
jb
stos
ja
cmp
in
xor
adc
ja
jmp
mov
and
jmp
cltd
sbb
mov
and
push
or
xchg
dec
xchg
fs
pusha
arpl
add
xchg
addr16
mov
imulb
push
popa
mov
dec
int3
les
and
int3
imul
ja
jb
jecxz
cmp
dec
mov
in
sbb
push
xor
xchg
xor
jge
push
jmp
or
jnp
inc
push
mov
dec
cmp
push
pop
cmp
pop
pop
jne
mov
ret
push
jbe
fsubrs
and
dec
jmp
add
xchg
fldcw
sahf
aad
imul
cli
cmpsl
dec
ja
jmp
cmp
mov
rorl
pusha
pop
dec
mov
mov
mov
aam
fbld
in
mov
or
gs
ja
jae
mov
and
pop
jns
jo
adc
add
ss
fidivrl
aaa
mov
jbe
dec
aas
inc
mov
mov
cltd
mov
push
xor
aad
test
xor
cmp
jg
mov
lcall
movsl
and
loop
test
int3
mov
push
lea
xor
iret
cmpsl
jne
popf
mov
mov
sbb
and
cmpsb
scas
adc
fwait
cmpsl
into
pop
adc
xorb
scas
ret
mov
mov
cltd
and
xor
cmp
lds
xchg
movsb
dec
ja
hlt
inc
adc
mov
ljmp
fsubl
xchg
shll
pusha
sbb
cld
cltd
push
bound
xchg
sbb
outsb
out
mov
decb
sub
es
adcl
outsl
adc
cmpsb
ljmp
jns
cltd
inc
imul
pop
xchg
dec
scas
call
ja
cld
pop
arpl
in
jecxz
lods
mov
int3
sahf
push
mov
popa
inc
inc
sub
xor
iret
leave
dec
cmp
dec
aad
ret
push
cltd
pop
pop
or
dec
mov
mov
fs
ret
push
push
stc
jle
jnp
xchg
shr
mov
repnz
or
or
loop
mov
fwait
arpl
cmpsb
fldt
cld
notl
pop
mov
xor
dec
jge
mov
xor
pop
shll
dec
testl
ja,pn
adc
mov
lret
pushf
push
pop
ret
jle
jb
sbb
loopne
push
dec
add
mov
push
test
add
mov
xor
rol
jae
mov
or
ja
mov
aad
xchg
fs
pop
dec
movsl
mov
lods
cmp
ja
adc
iret
andl
mov
push
loop
add
das
mov
inc
mov
jecxz
cmpb
mov
cmp
ja
nop
aaa
orl
lcall
out
dec
lret
fldcw
mov
xchg
mov
not
xchg
loop
psubusw
push
nop
push
inc
xchg
shr
xchg
mov
notb
daa
mov
mov
fisubrl
pusha
inc
imul
xlat
push
pop
pusha
xchg
xor
adc
and
ss
push
enter
jl
xor
xchg
add
ja
xor
addb
sub
idivl
loop
testl
sbb
insb
adc
aam
lods
inc
inc
sub
or
adc
into
gs
push
push
pop
imul
xchg
dec
add
xor
and
stos
xchg
lcall
fidivrl
test
mov
les
mov
jecxz
or
pop
scas
mov
lds
xor
dec
rclb
iret
xchg
cs
imul
push
pop
cli
daa
mov
aas
popl
sbbl
jns
jno
jle
sar
inc
cmc
mov
je
shll
stos
xchg
loop
out
add
ja
cli
and
ret
jbe
push
xchg
mov
cmp
aaa
mov
addl
shlb
aaa
pop
jg
mov
cwtl
popf
repnz
xor
cmpsl
jl
pop
push
mov
daa
testl
jbe
aas
xchg
in
jg
into
imul
loopne
scas
cwtl
loope
aas
stos
adc
dec
xchg
jae
pop
rclb
jecxz
dec
in
fs
jl
insb
fwait
cmpsb
and
pop
sub
xchg
shrl
xor
mov
inc
jecxz
cmc
and
or
aam
fldln2
cmp
add
pop
sub
call
inc
clc
ret
mov
mov
pop
shrl
mov
ret
pop
scas
jle
inc
and
jl
bound
mov
xor
imul
jne
pop
add
dec
pop
cmp
sub
out
cltd
xchg
pop
jb
sarl
mov
pop
sub
pop
pop
lea
pusha
imul
dec
mov
pop
mov
push
es
push
or
and
xor
ja
cmp
ret
add
push
add
popa
sbb
pusha
loop
in
inc
aad
sbb
les
cmp
inc
aaa
dec
xlat
addr16
hlt
cs
cwtl
cwtl
cmp
pop
popa
dec
sub
jne
mov
or
xchg
data16
fnsave
add
adc
sub
rclb
fisubl
mov
repnz
mov
mov
pop
jecxz
aam
sbb
rolb
pop
mov
or
pop
sti
push
ret
cmp
out
mov
cli
les
rorb
push
gs
cmp
adcl
ja
inc
dec
ja
push
pusha
popa
les
aas
hlt
dec
cmc
lea
ja
int3
push
iret
popa
adc
pop
in
fwait
xor
inc
cmpsl
mov
jno
imul
in
xlat
stos
and
jb
dec
xchg
mov
cmp
insl
ss
and
cmp
push
xchg
stc
cmpsl
fmulp
ss
aaa
cmc
ja
lods
stos
jne
dec
popa
add
dec
mov
es
orl
out
pop
add
inc
xchg
ja
test
xchg
inc
mov
mov
loope
imulb
es
jne
imul
daa
push
stos
fwait
push
aas
fadds
dec
test
jl
cmp
push
cmpsb
out
rcll
pop
push
nop
xchg
mov
sti
outsl
fildl
adc
xchg
shrb
gs
mov
adc
dec
cmpsb
in
jmp
push
mov
sarl
mov
xchg
adc
push
push
ret
es
stos
push
push
aad
pusha
mov
aaa
loopne
cmc
aaa
mov
or
push
inc
mov
es
xchg
cmp
mov
mov
dec
dec
rorb
push
lods
fbstp
inc
mov
push
cmpsl
adcl
and
lret
fcompl
subl
flds
mov
mov
dec
into
aas
adc
adc
test
xchg
or
es
mov
addr16
fdiv
fs
sub
dec
sub
hlt
and
sbb
sub
cmp
into
pop
test
lods
bound
scas
sub
mov
ret
jecxz
or
push
cmpsb
or
or
ja
icebp
adc
lret
outsb
mov
rolb
repnz
dec
mov
push
dec
jg
insb
and
or
sti
jle
fsubrl
rcrb
jg
shl
pop
push
in
cltd
sbb
ds
push
mov
ret
and
addr16
js
xchg
pop
inc
rorl
cli
shll
test
mov
pop
lcall
aas
and
mov
push
add
push
cmpsl
cltd
movb
xlat
ja
test
cmpsb
mov
and
xor
cmpsl
gs
addr16
dec
imul
movsb
ja
movsl
jle
add
xor
gs
push
pop
add
push
push
loope
push
out
xchg
mov
aas
inc
lods
cmpl
lds
das
mov
into
lods
mov
mov
sahf
mov
icebp
cld
mov
fcoms
hlt
ja
sub
adc
xor
das
or
push
test
imul
xlat
cmp
cmp
adc
cmp
aam
push
mov
pushf
cmp
out
lret
daa
inc
fnstenv
xor
arpl
fsubrl
cltd
lret
xor
sbb
jbe
call
mov
aas
cs
xchg
jne
cwtl
mov
sub
aas
mov
mov
sub
dec
mov
cmp
push
mov
insb
mov
out
xor
inc
sub
mov
xlat
in
lods
aad
hlt
roll
jb
scas
adc
movsb
ja
cmp
xor
mov
xchg
jnp
or
iret
mov
cmp
add
shlb
sbb
inc
xor
fcmovnu
fsubrs
add
mov
out
xchg
sub
outsb
inc
push
jne
fdivs
xchg
mov
xor
dec
out
pop
incl
cltd
mul
clc
je
aad
add
mov
sub
lods
ja,pn
je
jo
es
rcrl
jns
sbb
mov
mov
iret
push
outsl
stos
decl
sub
cmp
mov
addr16
aad
and
clc
cltd
std
out
addr16
in
and
lock
cmp
popf
inc
shr
shl
lock
ss
es
mov
adc
cmpsb
push
jnp
pop
or
push
cli
push
mov
mov
mov
add
xchg
ds
pop
cld
adc
adc
enter
test
push
int3
icebp
add
push
push
sbb
or
rol
mov
dec
cmpsb
adc
or
push
idiv
outsb
loopne
push
xor
sub
ret
mov
ret
push
data16
cmp
or
std
faddp
pop
jg
loopne
mov
mov
add
shll
jg
xchg
cmp
movb
movb
mov
popf
ror
ja
mov
pusha
inc
flds
mov
loopne
cli
mov
mov
inc
lock
dec
incl
add
push
push
jg
sbb
ret
testb
xchg
lds
push
mov
ds
in
inc
lcall
xchg
adc
out
out
xor
push
and
into
lds
or
arpl
int
scas
shll
lods
popf
jg
xchg
fdivrs
lds
hlt
cwtl
cld
cmp
lds
ss
push
mov
icebp
xchg
push
dec
ret
xchg
js
into
pop
fldl
adc
push
pop
adc
add
pop
cmp
mov
in
loopne
inc
pop
gs
push
mov
xor
fidivrs
cmc
sbb
stc
addb
and
push
xchg
add
sub
inc
mov
sahf
push
cmpsl
inc
out
scas
jno
rolb
sub
cli
pop
cmp
cmp
ficoml
les
pop
jle
mov
gs
int3
xor
and
mov
mov
or
inc
shl
stos
pushf
jmp
bound
mov
pop
push
adc
stos
sbb
ja
push
dec
mov
push
stos
pusha
or
dec
les
push
shlb
dec
repz
jnp
divl
in
out
negl
imul
inc
mov
clc
xlat
dec
test
or
xchg
call
pop
adc
sub
aas
jbe
xor
fwait
imul
pushf
fisubl
cltd
std
fnstcw
pop
pop
pop
loop
mov
pop
add
rorl
mov
lds
test
mov
test
sub
or
push
cmp
nop
in
dec
es
adc
jns
fwait
dec
cld
sahf
mov
sarb
xchg
cmpsb
push
jns
bound
jae
pop
inc
cltd
xchg
daa
ja
xchg
out
inc
mov
ds
nop
mov
xor
cmp
imul
push
inc
sarb
xchg
jne
scas
mov
sub
imul
in
out
sahf
add
inc
sub
mov
ret
mov
inc
fwait
inc
int3
jae
add
push
cmp
cld
push
jnp
insl
mov
and
jmp
aas
or
arpl
clc
cmp
lds
test
sbb
fxch
inc
ja
loope
push
loope
fdivs
insb
jecxz
sti
loope
pushf
adc
shlb
mov
jmp
aad
aam
xchg
ja
inc
xchg
or
dec
fcmove
and
jbe
push
xchg
xor
cmp
lret
sub
xchg
xchg
push
std
or
or
mov
insl
dec
daa
or
out
adc
int3
push
cltd
sub
fwait
jno
dec
pop
call
jbe
idivl
xchg
pop
sar
mov
sbb
inc
loop
cmp
xchg
clc
xchg
sbb
mov
ret
jns
sbb
leave
neg
push
aaa
jge
ficomps
cltd
gs
dec
iret
pop
and
push
dec
imul
test
inc
push
or
es
mov
in
pop
stc
xor
cld
inc
scas
fisttpll
int
dec
mov
sbb
call
pop
rorl
xorl
mov
sub
pop
cmp
es
gs
mov
adc
out
jbe
loop
ja
aaa
mov
xor
ljmp
je
xchg
imul
and
or
subl
nop
iret
lret
inc
jg
mov
loope
inc
je
ljmp
push
stos
add
je
dec
jne
jle
out
lods
mov
cli
roll
imul
outsl
ja
and
imul
inc
aad
dec
inc
sub
lcall
push
andl
adc
xor
ds
jmp
sub
adc
pmulhuw
push
je
pop
addl
mov
ss
stos
dec
arpl
dec
jo
jge
fisubl
lods
lds
add
std
rcrb
ss
add
sbb
int
inc
and
mov
push
pop
pushf
mov
sti
fs
and
mov
xor
fs
sub
and
pop
cmpsl
cltd
ja
mov
popf
sub
jne
std
dec
les
adc
mov
xor
or
mov
mov
into
jge
es
bound
or
add
sub
test
ret
pop
ja
in
sahf
inc
mov
jmp
out
popa
add
xor
lods
push
ret
pop
inc
add
cmp
adc
mov
xor
inc
cmp
sub
cmp
out
stos
subl
mov
jnp
cmp
cmpsb
push
cwtl
repz
pop
xchg
popf
jg
out
xchg
fidivl
mov
and
and
or
test
andw
pop
addr16
xchg
aad
scas
xor
faddp
mov
std
xlat
push
sbbb
mov
pusha
inc
ret
outsl
push
arpl
or
mov
movsl
pop
sbb
xor
popf
push
cld
cmp
and
xchg
ds
fcom
into
or
lock
or
push
dec
push
xchg
cmp
lods
cmpsb
push
std
and
or
ret
jbe
mov
pop
push
movsl
lods
xchg
pop
and
add
enter
mov
mov
test
pop
lcall
cwtl
pop
cmpsb
in
mov
movsb
ret
dec
cmp
mov
stos
or
pop
mov
test
arpl
pop
or
push
cwtl
ficoms
mov
xchg
and
push
loop
ret
daa
int
ret
jbe
fsubs
mov
f2xm1
mov
js
jp
or
mov
int3
lds
or
clc
jnp
les
outsl
ja
into
xchg
test
and
enter
repz
lods
xchg
jae
jb
iret
dec
and
int
movsl
mov
int
dec
push
in
sub
or
sub
out
es
das
je
inc
jbe
push
cmp
lods
imul
xchg
aad
testl
or
push
cmpsb
adc
lcall
xor
out
add
aad
jmp
pavgw
add
mov
dec
pop
mov
mov
ljmp
xor
jge
shlb
xchg
aad
mov
xor
cmpsb
xor
rclb
imul
xchg
clc
lock
repnz
and
aad
cld
shlb
lds
xor
into
lods
mul
adc
xchg
retw
xor
insb
shrl
cld
lods
mov
inc
push
mov
call
mov
sub
clc
insl
cmp
jno
mov
inc
xchg
out
mov
aad
imul
xorl
mov
mov
sbb
push
data16
mov
xchg
or
mov
jo
push
ret
adc
xor
push
lock
xchg
cs
pop
mov
adc
sbb
subb
into
cmpsb
inc
faddp
mov
adc
mov
mov
dec
aas
push
push
out
xor
out
xchg
sahf
pop
mov
and
aaa
fwait
div
popf
addb
lods
pop
fldl
pusha
xchg
int
mov
mov
rcrb
adc
addr16
sbb
mov
sub
inc
test
jmp
lret
lods
test
ds
rorl
jbe
push
or
negb
pop
xchg
scas
clc
push
fcomps
fimull
pop
enter
jle
mov
in
ja
out
out
adc
xor
add
cs
cmc
scas
daa
and
mov
ss
or
mov
xchg
add
and
pop
xchg
inc
mov
xchg
icebp
cmpsb
and
pop
fadds
add
insb
mov
cmpsb
popa
add
mov
ds
and
mov
xchg
jo
add
push
mov
sahf
iret
mov
div
testb
aad
or
lahf
dec
push
jo
mov
std
sub
and
inc
or
dec
ficomps
inc
fucom
je
js
loopne
xor
in
dec
mov
fisttps
jle
push
push
inc
std
lock
mov
cmp
and
sbb
push
sahf
dec
mov
ss
inc
lock
in
mov
cmp
scas
push
xchg
sbb
jle
rcrl
dec
outsb
mov
outsl
sarl
lods
or
add
repz
outsb
mov
mov
xchg
aam
lret
add
divb
mov
mov
out
testl
xor
fstpt
fmuls
xor
push
add
cmp
push
xchg
sarl
jbe
rcrl
mov
push
push
loop
loope
pop
cmpsb
lods
mov
lods
ja
fisubrl
xchg
and
cmpb
mov
xchg
arpl
pop
repnz
xor
ja,pt
lret
jge
lea
inc
sbb
inc
repz
popa
sbb
xchg
xlat
sbb
cmpsb
arpl
popa
sbb
adcl
imul
xlat
sbbl
enter
mov
pop
lcall
stos
js
xchg
pop
or
jbe
inc
sub
ja
js
in
mov
ds
aas
push
fcomps
divb
jmp
popa
shlb
push
es
sti
sti
gs
add
inc
xor
sbb
ja
cmp
lcall
lret
mov
sbb
push
bound
cmp
sbb
cmc
enter
cmp
push
mov
ret
pop
fisttpl
test
jae
addr16
je
mov
flds
adc
add
xor
mov
loope
and
pop
or
inc
gs
jb
rorl
lods
cld
shlb
clc
cmp
ret
aam
lcall
push
shlb
int
cmp
mov
push
sub
rclb
mov
fdivl
push
push
mov
pop
adc
adc
mov
fsubrl
inc
pop
jno
iret
add
fimull
mov
mov
addr16
xchg
push
subl
jbe
mov
je
ja
jno
pushf
ds
xor
pop
sarb
xchg
mov
jb
notb
into
mov
addr16
nop
in
xlat
popa
cmp
mov
inc
int3
int
ficoms
add
cmpsb
dec
pop
jb
iret
xor
int3
and
dec
add
cmpsl
xchg
mov
je
sub
test
negl
add
jo
or
add
out
mov
push
fadd
inc
in
pop
or
icebp
insb
mulb
test
xchg
or
and
aaa
adc
jno
add
stc
and
cmc
sbb
ss
xchg
loop
bound
and
and
dec
sub
aad
push
and
and
int3
in
and
in
mov
inc
gs
and
ja
xchg
sbb
push
pop
and
es
push
push
ja
mov
stos
push
mov
aam
aad
push
jl
dec
pop
outsl
iret
mov
cwtl
repz
popf
xor
test
or
xor
xlat
add
inc
popa
lcall
push
pop
int
ss
ja
scas
dec
cli
sub
mov
into
aad
push
sbb
xchg
pop
xor
push
cltd
cmp
sahf
xchg
je
inc
pop
scas
fidivrs
adc
aad
int3
xchg
cmc
mov
pop
xchg
int3
adc
das
in
dec
sarl
arpl
cltd
sbb
lret
inc
stos
shll
mov
sub
fcmovnu
push
jp
jns
or
mov
mov
repnz
js
rcl
rcrb
cli
jns
loopne
mov
nop
mov
xchg
nop
jb
call
sbb
outsb
js
inc
sahf
mov
dec
jmp
mov
lds
in
dec
sbb
adc
aam
pusha
cmp
imul
aas
pop
mov
push
popa
inc
cmc
aaa
fs
and
ja
pop
or
pusha
stc
or
or
sbbb
dec
mov
push
nop
ss
movsl
cmp
aad
test
lahf
clc
je
pushf
cmp
iret
pop
or
ficompl
gs
mov
xlat
cmc
cmp
and
sbb
addr16
cmp
jge
push
pop
shlb
xor
pop
gs
jbe
xchg
jb
mov
into
pop
and
push
lods
lcall
xchg
add
mov
cltd
jg
and
mov
int3
arpl
movsl
shll
cltd
mov
lret
fwait
inc
xor
mov
cmp
add
inc
xchg
adc
movnti
mov
test
sub
mov
subb
clc
mov
out
clc
imul
cmpsl
fistpll
push
int3
xor
ficompl
push
aas
mov
mov
add
and
push
cmpsl
repz
mov
or
cmpsl
fidivrs
cmpsl
test
pop
inc
pop
bound
lea
ret
cmp
or
cli
mov
inc
push
test
std
aam
mov
out
cs
xor
inc
aas
push
xor
lds
mov
loope
iret
ror
loope
inc
xchg
push
outsb
std
cmp
mov
andl
into
mov
mov
scas
call
js
stc
mov
adc
xor
data16
mov
out
inc
cmpb
aaa
xchg
mov
cmp
jb
imul
cmp
push
popf
clc
lods
test
push
aam
mov
mov
jmp
push
push
sarb
popf
lret
cmp
and
rcrb
mov
pusha
iret
cmpsl
pop
jbe
xchg
ja
and
sbb
xor
lea
insl
fbstp
adc
jecxz
dec
into
mov
icebp
inc
adc
pop
leave
scas
std
inc
pop
sub
xchg
mov
jg
xchg
ds
mov
and
pushf
dec
aad
pusha
fs
push
ss
mov
bound
popf
cld
jb
jecxz
or
mov
push
clc
mov
pusha
loopne
fnstenv
test
sub
jns
loope
adc
out
shlb
push
insb
mov
push
insl
movsb
sub
add
fwait
cmp
add
sahf
and
mov
mov
test
imulb
push
arpl
les
inc
cwtl
sub
repnz
stos
ror
dec
outsb
and
pop
cld
or
inc
out
adc
test
jns
sub
rcrb
cmp
and
repz
cmp
add
add
jnp
hlt
cmp
stos
mov
out
daa
mov
aas
cltd
push
mov
dec
adc
das
pushf
jo
shrl
fcompl
xchg
daa
and
stos
mov
pop
mov
into
mov
push
ja
push
xchg
xchg
int
into
adc
aas
pop
fisubl
lds
cmp
and
and
xor
add
lods
lfs
xor
jbe
dec
xor
iret
out
cmp
shll
xchg
cmp
loope
arpl
cmc
cmp
daa
enter
jl
dec
add
cld
adc
je
int3
clc
pusha
xor
inc
test
bound
ja
jbe
sarl
add
lods
fldl
lods
mov
push
cmp
leave
and
sarl
mov
mov
lea
xlat
sarb
inc
fldenv
outsb
cld
ret
jbe
pop
iret
mov
jmp
popf
cmp
rolb
cltd
push
mov
mov
pop
pop
out
lret
ss
loopne
fistpll
push
sub
ja
sub
shll
outsl
es
mov
fldenv
push
xor
mov
and
xchg
imul
jae
or
dec
push
es
sub
fwait
and
cmc
seta
scas
inc
iret
pop
xchg
pop
xlat
lods
or
mov
dec
out
and
test
push
pop
daa
imul
ret
pusha
push
cmp
xchg
loope
jnp
pop
inc
mov
ret
cli
fwait
mov
lds
add
inc
fldenv
mov
mov
mov
cvtpi2ps
cld
inc
mov
or
in
fbld
cli
inc
js
or
and
lds
bound
dec
je
xor
add
push
ret
inc
dec
ja
inc
dec
inc
add
xor
test
xchg
sbb
jbe
hlt
enter
jge
or
cmp
or
call
fwait
enter
outsl
add
std
inc
lock
jb
out
sub
pop
fldcw
flds
and
hlt
fwait
movsl
bound
sbb
jbe
mov
inc
movsl
call
andb
aad
cmp
or
inc
cltd
sub
notw
adcb
cmpsb
test
scas
push
insl
in
pop
xlat
arpl
scas
mov
insb
shlb
decl
test
hlt
or
ds
dec
mov
mov
sarl
subl
sti
ja
outsb
xchg
mov
into
bound
loop
cmp
bound
and
sti
pop
add
into
popa
add
std
or
loop
rorb
xor
mov
ja
in
or
in
or
xchg
xor
sbb
mov
sub
pop
lock
sub
mov
xchg
pop
jle
sub
scas
mov
int3
out
inc
xchg
cmp
jl
pop
ja
inc
shrb
or
pop
mov
nop
ret
or
in
pop
or
dec
shlb
adc
cmpsb
pop
js
push
daa
sahf
roll
ret
imul
stos
iret
cmpsb
jns
ret
sub
andl
pop
cmp
clc
xchg
push
cmpsb
inc
outsl
in
mov
clc
pop
pushf
rolb
rclb
sbb
adc
pop
hlt
xchg
xchg
pop
xchg
jo
xchg
ds
mov
dec
inc
js
push
cmp
test
aaa
cwtl
int
imul
mov
shll
repnz
push
mov
xchg
sub
push
and
shll
test
inc
popa
insl
sub
aas
mov
pop
mov
in
pop
push
dec
ja
mov
sarb
jbe
push
nop
into
ja
xor
xchg
or
out
pop
pop
test
aas
push
dec
xor
sbb
out
in
cwtl
jae
push
fstpt
mov
ds
pop
push
dec
iret
jp
cwtl
setb
fcoml
pushf
dec
inc
loop
mov
push
push
sbb
pop
cs
outsl
lcall
mov
pop
mov
xor
push
stos
mov
pop
jnp
xorb
bound
adc
ja
jne
insl
das
rcrb
outsl
dec
mov
negl
mov
mov
stos
dec
nop
loope
popf
jp
mov
add
sub
outsb
popa
dec
sub
xchg
sbb
ja
jp
rol
aaa
sbb
fwait
inc
imul
gs
lds
prefetchwt1
loop
pushf
das
mov
aas
jno
in
fdivl
rcll
int
popf
push
jno
std
insb
cmp
gs
xchg
aad
subl
cmp
aas
fsubrs
xchg
iret
imul
data16
dec
test
stos
es
rcll
jbe
adc
inc
adc
ret
jecxz
in
fisttps
cmc
pop
outsl
adc
xchg
xor
test
out
pop
xchg
mov
and
in
sub
inc
mov
sub
xor
imul
je
pop
in
loop
fistpl
fcmovnbe
out
xor
bound
int
dec
pushf
dec
shrl
mov
addb
sbb
lcall
shl
push
inc
sbb
test
jne
xor
mov
xchg
gs
mov
jae
clc
pop
arpl
repz
or
xchg
loop
in
or
inc
sub
mov
mov
gs
out
mov
push
mov
dec
jecxz
shlb
xchg
out
xchg
into
sbb
sub
dec
or
ja
cld
push
or
pushf
ret
mov
test
mov
jmp
pushf
mov
popa
mov
push
arpl
cmp
xchg
add
icebp
or
movsl
ds
mov
ret
jbe
pop
shll
add
aam
xchg
enter
out
push
pop
pop
lret
testb
ss
out
loop
dec
inc
mov
test
mov
sbb
fwait
scas
jnp
add
pop
in
jp
daa
push
gs
ja
add
mov
xchg
stos
frstor
or
mov
cltd
adc
pushl
sti
pop
xchg
push
loope
in
jbe
lahf
mov
xor
push
cli
xchg
dec
cmp
call
jg
lea
je
lea
xchg
aam
or
jo
ss
push
push
cwtl
dec
leave
dec
pop
pmullw
dec
xchg
cmpsb
bound
ret
fisttpl
inc
jae
lret
or
inc
jo
in
mov
or
jne
add
pop
sbb
icebp
cltd
pop
xchg
aaa
adc
inc
xchg
je
loop
xchg
es
pop
loop
or
pushf
ja
and
or
repz
test
stos
flds
call
sahf
adc
and
popl
pop
and
or
inc
dec
imul
in
inc
add
dec
js
cmp
push
pop
out
cwtl
and
outsb
push
xchg
arpl
lods
scas
dec
in
es
push
mov
xor
push
jbe
loop
sbb
ficompl
cmpsb
adc
add
imul
mov
jbe
jl
mov
dec
ja
sub
dec
dec
imul
mov
hlt
xchg
mov
mov
pop
xchg
push
in
jp
dec
push
movsb
adc
jno
inc
sbb
ja
ror
sahf
ret
xor
xor
and
mov
push
inc
xchg
pop
les
ficoml
sbb
popa
test
pop
cwtl
shll
push
sahf
xchg
gs
mov
nop
es
fmuls
dec
mov
mov
pop
faddl
cmp
into
xor
and
inc
testl
mov
xchg
stos
jecxz
cmpsb
in
bound
and
mov
sub
mov
mov
cmpl
mov
mov
push
in
and
or
or
pop
push
pop
inc
stc
inc
or
inc
mov
jno
into
sbb
xchg
mov
dec
adc
mov
and
rcrb
nop
pusha
test
jo
or
loopne
sbb
stc
mov
aam
inc
dec
mov
mov
cmpsl
gs
adc
xchg
sub
push
dec
in
push
adc
shrb
dec
dec
pusha
in
adc
cltd
xchg
sbb
ss
xchg
ja
mov
out
mov
loope
mov
fsubl
insb
or
sahf
fdivrl
pop
add
test
inc
mov
cmpsl
in
int3
fstpt
ret
fwait
push
lcall
and
pushl
add
ja
call
sti
pop
cmp
bound
mov
sahf
faddp
into
pop
dec
and
outsb
pop
sti
int
jmp
out
mov
mov
ret
cld
imul
ja
pop
or
or
shrl
and
cwtl
filds
xchg
fdivp
jmp
mov
or
fsts
mov
test
scas
in
rclb
cmp
or
mov
aam
xchg
mov
jge
aaa
data16
xor
push
push
into
mov
lods
cltd
xchg
ret
pop
mov
pop
xlat
insb
loope
lcall
hlt
jns
and
add
in
sarb
sbb
xchg
inc
adc
adc
pop
popf
xor
dec
lahf
rcrb
outsb
gs
cmp
mov
push
lahf
fistps
adc
xchg
shr
icebp
xor
notb
bound
lods
cmc
mov
test
scas
xor
inc
adc
lods
lds
insl
pop
sub
iret
test
xor
stc
add
jg
xchg
clc
or
es
add
lods
and
loop
sub
aad
jno
xchg
lods
push
scas
inc
scas
cltd
addr16
loop
cwtl
adc
out
xchg
push
jg
fidivs
mov
ds
push
fwait
sub
adc
jp
out
jbe
rcrl
jns
arpl
pop
inc
mov
add
addl
popf
ret
pushf
dec
push
xchg
mov
mov
push
mov
repz
and
rclb
and
mov
aad
fwait
pop
fs
lods
xchg
popf
je
out
cmp
or
sub
sti
mov
or
mov
lods
jbe
jbe
ret
scas
inc
je
pop
add
les
cmp
inc
insl
cmp
adc
and
ja
into
jge
test
ja
or
mov
adc
sarl
ret
cmp
testl
gs
mov
jmp
bound
sahf
add
xchg
sbb
mov
xlat
sbbb
fdivr
aas
push
mull
mov
lret
dec
mov
push
push
pop
push
clc
imul
scas
sub
or
mov
shrl
mov
sub
or
pop
inc
xchg
cmpsl
lcall
push
dec
or
int3
shrb
bound
pushf
test
lock
mov
test
xor
pop
fwait
pop
aam
addr16
flds
push
outsb
mov
inc
jbe
push
cmp
loop
aas
out
mov
cld
jns
cltd
add
je
cmp
push
push
xchg
inc
dec
pop
mov
inc
aam
popf
stos
xchg
sub
jnp
sbb
push
fcmovnb
pop
std
or
mov
sbbl
add
mov
push
dec
mov
xchg
pusha
xor
lahf
addb
pushf
ds
jno
lret
ss
aas
mov
fwait
cmp
ja
sbb
les
pusha
mov
dec
leave
mov
mov
loope
aas
and
mov
push
add
push
push
mov
call
jo
sbb
roll
decl
add
pop
in
stos
xchg
adc
ja
popl
xchg
aas
sahf
push
shrb
sub
in
xchg
enter
and
ret
iret
mov
push
mov
into
or
ja
jl
stc
shrl
dec
in
cmp
dec
imul
pop
mov
cmp
jnp
xchg
call
pusha
ds
cli
push
iret
or
gs
loop
bound
cltd
aad
cld
push
pop
jp
jle
push
mov
into
sbb
mov
jmp
jg
test
stos
xchg
pop
cmpsl
and
shlb
cmp
cld
jo
imul
or
mov
jbe
pop
cld
pop
out
loop
pop
pop
mov
sbbb
add
cltd
mov
add
or
fwait
jae
dec
in
pop
ret
inc
adc
out
cmp
pop
jg
aam
mov
test
mov
ds
mov
sub
ja
push
lahf
popf
loop
xor
and
inc
sbb
popa
pop
push
xlat
bound
rcr
jns
andl
je
inc
sahf
loopne
xorb
add
jb
fcoml
jmp
loop
lcall
push
idiv
xorps
fdivs
jmp
mov
pop
cld
fldenv
jnp
sub
icebp
call
lret
cmpsb
int3
aad
stos
aam
je
fiaddl
cltd
aas
xor
jle
in
xlat
push
pushf
gs
cld
popa
aas
push
dec
mov
mov
pop
mov
sbb
pop
cmpsb
loope
xchg
cwtl
ds
sbb
add
fidivrs
imul
int3
dec
stos
jl
into
and
out
shlb
push
and
popf
inc
inc
aam
xor
jbe
inc
dec
rcrb
popf
pop
push
lcall
jmp
xor
push
mov
dec
mov
in
aaa
adc
lcall
dec
push
in
in
jno
rorl
out
outsb
sarb
jbe,pn
loop
mov
insl
pop
push
mov
ret
jbe
xchg
jnp
xchg
or
mov
sti
or
es
clc
pop
fldl
ja
push
cmp
ss
add
mov
in
cmc
shr
cmpsb
scas
pop
fstps
push
fimull
or
out
jo
in
sub
aas
inc
mov
daa
mov
pop
pusha
pop
in
sbb
mov
aaa
jg
xor
aam
cltd
push
sarl
push
fdivs
adc
mov
xchg
sbb
or
cmp
pop
data16
push
fcom
gs
ret
inc
lods
insl
sarl
add
pop
scas
adcl
ja
sbb
xchg
dec
push
daa
fwait
mov
loope
mov
mov
add
jno
ja
sbb
xchg
push
inc
cmp
gs
addr16
imul
lcall
popf
sarl
sbb
hlt
cmpsb
mov
inc
loop
fwait
aam
ja
and
mov
div
cltd
mov
mov
out
nop
jp
in
imul
fisubs
in
loope
inc
lret
mov
pop
lret
gs
or
pop
mov
popf
sbbl
cmp
jne
in
int3
pop
in
ja
adc
inc
adc
scas
test
fdivl
push
scas
mov
add
cmc
in
push
inc
mov
jno
fidivrl
fcomps
in
xchg
dec
test
stc
xchg
mov
inc
ja
push
dec
pop
jno
and
mov
jmp
push
or
sub
data16
arpl
mov
jns
jg
shrl
cmpsl
push
fwait
pop
sbb
push
push
mov
lock
cltd
xor
mov
pop
cmc
faddp
fnstsw
and
mov
flds
out
popf
and
add
mov
inc
mov
xor
out
lret
mov
lds
mov
dec
dec
std
ss
mov
je,pt
rol
and
inc
mov
sti
ret
data16
lds
dec
addr16
lock
es
and
ret
mov
add
dec
cmp
repnz
push
push
rolb
scas
inc
push
data16
jbe
scas
cmpsb
jbe
clc
rclb
jae
push
push
movb
adc
and
inc
add
clc
add
adc
ret
inc
inc
mov
mov
loopne
mov
inc
stos
mov
test
jg
push
inc
out
or
mov
xchg
outsl
xchg
fildll
add
lds
inc
jg
cs
scas
push
stc
scas
std
mov
mov
add
inc
or
paddsw
push
xchg
add
push
out
mov
int
add
xchg
cmp
adc
sub
cmpsl
pop
filds
add
sub
aad
fiadds
pop
and
adc
jecxz
out
fildll
pop
adc
aaa
add
loope
shl
jle
mulb
int
roll
loop
sarl
xor
dec
inc
in
jo
mov
into
ja
pop
out
ss
pop
mov
dec
inc
pop
lds
ja
cmp
mov
push
inc
xor
fdivrs
xor
push
jle
mov
push
lds
or
sbb
dec
xor
xor
mov
lea
aaa
pop
sub
xchg
jns
lea
aam
push
cmpsl
inc
gs
cltd
in
jbe
mov
mov
mov
sbb
jae
test
mov
pop
lahf
das
cmp
and
jbe
enter
add
fneni(8087
into
cltd
sub
cmpsb
adc
xchg
cmp
int3
cwtl
push
ja
mov
jg
cmp
xchg
mov
aaa
out
adc
rorl
mov
insb
fldt
mov
aam
and
xchg
test
mov
gs
sub
push
loope
mov
enter
shlb
add
xlat
test
fcmovbe
mov
inc
out
xor
ret
js
lea
jp
adc
jnp
push
mov
pusha
fcomip
cmc
les
scas
pop
cs
xchg
insl
mov
int3
pop
hlt
xchg
pusha
jge
setae
sub
pop
rclb
xchg
pop
aad
notb
bound
pusha
jmp
inc
aas
fs
andl
xchg
in
cmc
in
and
adc
data16
cld
and
stos
cltd
cmpsb
xor
push
sub
push
cli
ret
mov
mov
dec
sub
and
cwtl
jle
mov
push
sub
fisubs
insb
in
xor
into
fildl
rcll
clc
mov
xchg
jae
dec
xchg
mulb
xor
shrb
mov
pop
dec
sub
addr16
dec
lods
jbe
fsubr
adc
in
jne
jp
int
scas
in
stos
stos
xchg
popf
movsl
push
mov
loope
dec
mov
push
iret
mov
imul
cltd
xchg
arpl
popf
cmpsl
testl
cld
sarl
xchg
pop
add
mov
pop
push
push
push
bound
mov
popf
push
push
lock
cmp
cmp
cmp
or
into
fnsave
leave
jbe
loop
cmp
and
jne
jbe
cs
loope
jns
and
push
push
add
movsl
add
aam
push
test
call
out
adc
mov
movsb
cmp
loop
xor
test
inc
pop
pop
xor
fadd
imul
ds
or
daa
xchg
mov
lods
and
and
sbb
ret
in
fwait
sub
inc
sahf
pushf
daa
int
test
add
xor
dec
sbb
pop
cmp
dec
bound
aaa
push
add
es
ss
jl
and
mov
sarl
in
pop
fwait
push
mov
xor
inc
xchg
aam
push
push
jno
pop
push
dec
inc
leave
xor
or
mov
cmpsb
mov
enter
push
xchg
popl
mov
xlat
xchg
xor
fistpll
outsl
aam
push
pop
fldenv
in
or
arpl
xchg
fcomps
push
xlat
ds
int3
fstpt
mov
mov
push
divb
adc
or
mov
or
lcall
dec
xor
stos
fistpl
dec
jmp
mulb
jne
rcll
aam
pop
xchg
push
xchg
add
mov
mov
xchg
fidivrs
fisttpl
and
adc
test
pop
in
out
ja
test
shll
mov
insl
cmpl
jns
jno
lea
jno
ret
frstor
cmp
xor
xchg
pop
dec
call
sub
stos
sar
inc
xchg
addr16
lret
inc
clc
repnz
pop
mov
mov
and
addr16
mov
imul
iret
out
out
popa
ljmp
stos
push
pop
xchg
sbb
outsb
hlt
and
add
pop
push
inc
and
pop
loope
pop
pop
lods
loopne
push
out
aad
and
popa
pop
jg
add
sub
mov
fsubl
mov
pop
jg
mov
mov
mov
out
xchg
mov
and
sbb
xchg
mov
xchg
lods
fisubrs
aaa
push
push
scas
arpl
mov
cmpsl
jbe
cwtl
push
xchg
and
mov
mov
mov
xchg
in
mov
lret
mov
lea
js
cmpsb
jo
xchg
insb
add
fisubs
int3
xchg
push
lcall
jecxz
dec
inc
jle
mov
fwait
push
adcl
cltd
icebp
sub
bound
mov
add
outsl
cld
push
pusha
cmp
cmp
xchg
jno
int
fwait
jl
icebp
mov
jb
adc
rcr
adc
adc
cmpb
mov
sbb
and
jae
iret
movsl
iret
mov
shlb
test
imul
xor
stos
jge
push
add
ja
mov
int
add
and
mov
xchg
mov
orb
and
inc
inc
imul
push
sbb
push
sub
add
mov
jns
out
iret
mov
es
xlat
sahf
lea
dec
mov
push
mov
pushf
hlt
lods
xchg
jbe
mov
jne
jb
fiadds
pop
cmp
inc
mov
sub
or
jg
test
sub
push
test
cmp
push
cmp
xchg
sahf
sub
js
mov
mov
sahf
mov
ds
push
and
jne
mov
jno
xchg
outsb
xchg
lcall
cwtl
aaa
popf
mov
sahf
xor
jo
ret
pop
dec
sub
jae
loop
jbe
aam
dec
sub
mov
dec
push
pop
jbe
dec
sub
mov
or
xchg
ja
scas
add
ret
int3
cmpsb
fldl
pop
movsb
push
mov
mov
xor
mov
cltd
cmpsb
scas
xchg
jle
lret
in
xchg
das
icebp
in
mov
sub
fsubp
jp
mov
icebp
cmpsb
iret
or
cmpsb
lods
sti
into
xchg
ja
sub
jae
adcb
clc
jg
or
or
repz
pop
inc
mov
in
inc
pop
xchg
loop
in
adcb
clc
pop
cwtl
iret
out
movsb
test
cmpsb
cmp
nop
ret
aam
adc
mov
push
ja
out
or
rcrb
stos
push
xchg
push
sub
mov
sbb
and
out
adc
xchg
mov
stc
mov
mov
push
mov
int3
gs
test
xchg
lods
adcl
mov
and
pop
dec
push
mov
dec
ss
sub
std
loop
pop
push
int3
and
mov
pop
ja
dec
push
rclb
sarl
push
stos
sbb
dec
out
xchg
rclb
nop
push
stos
mov
fwait
daa
mov
cltd
jbe
out
dec
inc
sahf
sbb
mov
aad
movhps
pop
scas
divl
rcrb
and
movsb
or
mov
leave
fs
xor
sub
stos
jle,pn
sub
dec
xor
xorl
sub
pop
je
xor
jl
fwait
pop
fistps
jecxz
mov
in
adcl
xchg
rcrb
xor
add
dec
jg
inc
pop
push
aas
dec
clc
cmpl
sub
hlt
push
inc
int3
cmp
mov
inc
negb
cwtl
push
out
adc
in
sbb
bnd
sti
aas
out
push
je
mov
dec
jge
mov
aaa
dec
int
es
xor
mov
stos
dec
out
push
add
ja
in
jb
jl
fwait
inc
rolb
es
rclb
loope
ret
jecxz
aad
jbe
in
das
call
sbb
je
popf
cli
loop
or
bound
aas
mov
jle
mov
lock
jb
bound
pop
cmp
out
and
pop
stc
sahf
enter
out
jbe
test
out
jmp
shlb
sti
imul
test
jecxz
add
jbe
jnp
inc
mov
test
xchg
pop
loopne
jb
or
mov
and
fdivl
inc
sbb
lods
inc
push
ret
push
lods
and
mov
fidivrl
push
test
mov
clc
mov
jno
cmpsl
aas
mov
lcall
movsl
iret
mov
cmp
adc
jp
sahf
jnp,pn
xlat
nop
rorb
das
sti
gs
bound
rolb
lods
data16
inc
mov
loop
aad
pop
fbstp
nop
mov
sbb
jo
repnz
dec
xchg
pusha
lds
sub
out
sbb
mov
xor
dec
out
push
sahf
clc
subl
movsb
xchg
movsl
test
push
push
loopne
adc
adc
cltd
jg
loop
cs
nop
cmp
mov
scas
ja
dec
sbb
dec
ror
gs
filds
adc
std
daa
pop
gs
stos
dec
imul
and
int
and
out
in
push
aad
out
xchg
xchg
jb
int
inc
fchs
fidivl
dec
clc
xchg
sub
dec
adc
jp
lods
pop
clc
movsl
adc
add
int3
stc
dec
ficoms
sub
xchg
loop
ja
adc
pop
xchg
subb
mov
sbb
out
cmpsb
shrb
ja
pop
aam
enter
out
push
xchg
jo
push
mov
sub
rolb
hlt
and
out
stos
icebp
ret
aaa
jne
push
cld
imul
mov
sti
jns
sub
shll
cmp
push
xlat
mov
dec
aas
jge
jb
cmovnp
cmpl
iret
cmc
std
ja
test
inc
push
cwtl
pusha
mov
jp
mov
push
add
outsl
mov
sbb
or
adc
scas
aas
ja
shlb
test
adc
mov
rcrb
xchg
addr16
inc
int3
xor
dec
mov
push
or
test
test
shll
inc
xor
gs
daa
fmull
and
adc
mov
int3
out
cmp
push
jb
jbe
fsubl
mov
test
rolb
adc
cwtl
int3
icebp
cmp
inc
cwtl
dec
xchg
fs
cmp
mov
dec
pusha
push
addr16
out
or
fidivrl
test
sub
mov
push
adc
xchg
lds
out
mov
or
in
test
and
lahf
inc
push
adc
xchg
lock
enter
fwait
aam
or
xchg
cld
divl
cmpsb
xchg
dec
jl
xlat
push
xor
dec
or
jmp
inc
sahf
pop
and
dec
inc
aas
subl
stos
xchg
cli
mov
ret
test
lods
ss
jbe
loop
and
and
imul
cmp
mov
clc
inc
cmpsb
jno
adc
xchg
hlt
sub
xor
inc
cli
inc
pusha
gs
push
sbb
ret
mov
test
ret
sbb
aam
aad
mov
mov
and
and
out
out
xlat
lahf
bound
lcall
inc
xchg
cwtl
cs
out
jbe
leave
fprem
fisttpl
mov
cwtl
hlt
stos
mov
shlb
mov
push
xor
xchg
fimuls
mov
test
pop
data16
mov
sbb
xchg
out
sub
inc
sbb
call
ljmp
pop
fcoml
push
arpl
outsl
lds
push
jmp
mov
scas
xor
xchg
or
lret
xorb
mov
inc
sub
mov
aad
add
dec
pop
xor
aad
pop
stos
sbb
in
jmp
clc
inc
and
fdivs
daa
sbb
fnstcw
mov
ds
mov
xchg
imul
pop
or
in
and
ljmp
test
pushf
movsb
cli
mov
shrb
test
xor
push
jno
push
push
iret
loop
xor
inc
andb
into
jb
mov
sti
lds
dec
fdivl
mov
push
lds
andb
ret
in
xor
imul
push
out
mov
fwait
daa
mov
add
jp
xor
add
mov
aad
dec
mov
or
mov
mov
pusha
sbb
stos
mov
loope
mov
mov
mov
scas
shlb
cmp
divl
fildll
inc
fmull
cltd
xchg
add
dec
shll
imul
popa
jbe
fidivl
out
mov
insb
imul
mov
jge
dec
sub
cmp
test
jo
inc
hlt
lret
add
adc
popa
punpckhdq
pop
rclb
insb
xchg
cwtl
push
loop
inc
cmc
pop
push
add
xchg
or
sub
ja
lret
jae
add
cld
fists
xchg
test
xorl
jb
mov
mov
mov
pop
cmc
push
enter
popa
dec
jno
cmc
lret
test
mov
sbb
shrl
fildll
adc
pop
xor
mov
xor
push
lods
mov
aas
or
adc
or
bound
cmp
js
rorb
mov
ficompl
ds
adc
mov
loopne
aam
sbb
dec
jbe
cld
mov
ret
mov
push
push
sub
jns
cs
daa
xor
ja
mov
nop
fld
dec
mov
or
cmp
stc
ret
jg
outsl
ret
and
adc
lods
cmp
inc
inc
dec
sbb
sarb
imul
push
cmp
or
aas
xchg
adc
cmp
ljmp
push
sub
das
mov
jns
lret
pop
pop
ja
popa
sub
stos
cmpl
cmpsb
push
pop
inc
lret
cwtl
lods
fdivl
pop
add
mov
lret
lods
inc
or
roll
bound
lret
in
mov
stos
cmpb
or
and
incb
lods
mov
and
mov
mov
cs
jae
add
xchg
pop
in
vunpckhps
xor
jbe
add
lods
inc
inc
ja
xchg
shrl
xor
in
out
pop
xchg
loop
adc
adc
push
not
mulb
ret
and
xchg
or
xchg
xlat
data16
fldcw
cmp
mov
mov
je
inc
adc
xor
inc
and
dec
adc
bound
mov
adc
lret
push
lret
and
cld
imul
popf
cwtl
out
fbstp
aas
outsb
hlt
mov
dec
imul
and
fcompl
lahf
add
and
mov
mov
add
dec
pop
clc
jnp
jp
js
fcmovu
xchg
xchg
cli
xchg
inc
push
rolb
lods
aad
sub
rorl
and
das
fucom
in
sub
dec
mov
mov
roll
inc
ja
lret
int3
daa
bound
mov
or
out
inc
inc
dec
pop
mov
popf
std
and
xchg
push
mov
out
ja
xchg
cmp
pop
pop
std
sarb
aam
xor
dec
mov
ja
lret
ficoml
sbb
out
pop
daa
xchg
mov
pop
xchg
mov
outsl
mov
jp
pop
adc
sub
xor
in
cwtl
ret
iret
int3
out
sbb
out
mov
mov
dec
loopne
aam
mov
shll
or
pop
sbb
push
pop
sbb
sub
je
mov
popf
sub
jbe
xchg
push
pop
lods
pushf
fadd
fbstp
or
movsl
and
sbb
jmp
in
ja
cmp
mov
jns
xchg
les
es
in
imul
and
loopne
cmpsl
out
mov
jns
test
jmp
nop
pop
jae
loop
iret
pop
xor
int
popa
in
sbb
jbe
fidivs
push
int3
lds
clc
mov
and
jmp
xor
rcrb
lahf
adc
sub
aas
mov
ja
je
adc
or
pop
cmp
adc
outsb
ja
faddl
jecxz
test
sbbl
sbb
lds
ret
mov
or
jae
roll
mov
es
push
mov
jne
shl
dec
test
jno
out
mov
pop
cs
cwtl
mov
jne
sarb
inc
mov
faddp
mov
into
lds
and
push
and
mov
jne
ret
push
repz
mov
mov
mov
mov
les
aaa
jg
push
test
jb
testl
mov
insb
daa
fbld
push
out
data16
pop
inc
int3
fsubp
cmp
mov
add
cmpsb
cmp
lock
cltd
imul
and
jle
mov
aas
push
or
in
ret
cmpsb
popa
inc
jbe
sbb
fidivs
aaa
lds
out
pusha
movsl
push
mov
test
outsb
add
and
and
xchg
pop
daa
xchg
and
mov
pop
or
jp
shlb
pop
xor
ja
xor
and
xchg
inc
xorb
push
and
inc
push
sahf
cmp
xor
fcomip
fadds
jle
add
imul
pop
jbe
lds
dec
test
inc
ds
incb
add
mov
loopne
or
push
test
ds
adc
adc
sahf
adc
cmpsl
push
inc
add
dec
adc
jle
iret
pop
ds
clc
ss
gs
lds
cli
push
xchg
inc
ss
and
dec
repz
roll
xor
push
push
push
add
out
mov
xlat
int
sbb
inc
ds
clc
out
fcomps
lds
mov
pusha
out
jbe
dec
lds
int
mov
dec
mov
inc
pop
sahf
xor
inc
cmpsb
push
popf
aam
rorb
jcxz
adc
lds
subl
lds
xchg
dec
mov
jb
push
jmp
fdivp
push
inc
call
adc
in
lahf
inc
out
in
push
rolb
and
aam
inc
jae
xchg
sub
sub
pop
into
fidivl
mov
jbe
icebp
and
lea
out
and
lahf
rcrl
insl
fildll
sub
movsb
imul
ja
dec
push
adc
into
ror
insl
cld
add
push
call
cltd
mov
cmp
mov
lahf
lods
leave
jmp
push
xchg
xchg
gs
loop
popf
sub
inc
mov
inc
adcl
xchg
pop
dec
enter
mov
fbld
add
loop
xchg
stos
stos
addb
dec
addl
cmpsb
mov
lods
sub
shl
mov
mov
stos
enter
add
movsb
clc
mov
je
sbb
xor
jmp
and
fwait
push
cld
push
cld
mov
out
xchg
or
add
in
stos
jb
stos
xorb
and
adc
xor
lock
ja
icebp
push
arpl
insl
cld
push
clc
cli
in
push
sbb
aaa
cmpsb
aas
fwait
mov
pop
incb
mov
icebp
emms
push
fstps
mov
jmp
or
fcmovb
pop
loop
mov
lods
sbb
ds
sub
inc
in
dec
mov
movsb
and
mov
out
out
jne
push
pop
sub
fcos
nop
mov
push
add
push
adc
mov
cmpsl
mov
pop
sti
lods
ficompl
shll
test
cmp
xor
scas
adc
ficoml
sbb
std
test
mov
mov
inc
popf
cmp
inc
in
adc
jb
fimull
cs
push
addl
push
pop
iret
shrl
inc
mov
ret
repnz
mov
xorb
in
and
fwait
jg
mov
repnz
cmc
cltd
inc
sub
lahf
dec
fisubrs
insl
lods
fwait
pop
cli
pop
das
pop
cltd
and
cmc
jbe
aad
incl
adc
and
pop
add
mov
or
pop
movsl
push
xchg
and
js
adc
mov
jne
jge
stos
lock
xor
mov
push
adcl
gs
push
jne
scas
inc
test
xchg
test
xchg
xchg
fnstcw
mov
push
shrl
in
dec
rcrl
rcrb
and
rolb
pop
mov
mov
cmp
cmp
into
mov
mov
and
jbe
xor
jnp
lret
and
cmp
scas
fidivrl
xchg
sbb
leave
inc
inc
mov
mov
pop
xchg
push
sahf
ss
push
pop
iret
test
stos
inc
xlat
xchg
mov
xor
mov
xchg
cmp
sub
cmp
gs
lret
fs
pop
xchg
ljmp
add
lcall
ss
pop
add
or
test
ss
xor
shl
fcmovnb
imul
xchg
aaa
lods
fucom
adc
lahf
cltd
sbb
mov
mov
fndisi(8087
dec
pop
mov
push
push
and
pop
pop
jmp
sub
add
outsb
outsl
mov
ret
xor
les
aas
fsubl
iret
rcr
data16
or
hlt
xor
getsec
inc
clc
jne
popa
push
jmp
fisubrl
adc
and
pop
insb
enter
gs
mov
or
jae
scas
cmp
lret
dec
rolb
ficoml
sbb
inc
jle
mov
aam
aas
mov
arpl
push
mov
push
fmul
loope
incb
sarl
call
and
add
lods
jmp
popa
loop
mov
sub
mov
adc
or
imull
push
xor
pop
mov
jnp
xor
xchg
fucom
nop
scas
fwait
jbe
cmp
jle
inc
fists
popf
std
sbb
lods
ja
cmp
aad
fdivp
mov
cmp
pushf
loop
mov
push
inc
jmp
imul
mov
repnz
std
fsubl
pusha
hlt
mov
mov
leave
ficoml
jecxz
int
in
bound
test
or
mov
cmp
mov
lds
cmpsb
sbb
and
cltd
jge
mov
inc
lock
in
jno
loope
lea
sbb
and
mov
dec
in
fwait
xchg
jp
mov
or
jbe
movsb
pop
fbld
out
push
dec
mov
add
inc
cwtl
push
xchg
bnd
xchg
shl
shlb
mov
jbe
adc
pushf
vzeroall
dec
loope
out
mov
es
sbb
ret
mov
cltd
mov
xor
inc
les
inc
mov
hlt
jmp
loop
jle
xlat
aam
pop
scas
jno
cmp
sbbl
insb
lret
stos
mov
bound
add
int3
fildl
cwtl
in
rol
shll
int3
inc
loope
pushf
loope
xchg
xchg
andb
nop
scas
imul
movsb
ljmp
ficoml
jg
fld
loop
pop
stos
faddl
aas
push
aas
cmpsb
mov
inc
inc
shlb
pusha
test
sub
dec
push
test
add
mov
pop
in
ja
bound
sarb
adc
jmp
mov
inc
mov
mov
nop
outsb
gs
xchg
out
aaa
rcl
in
push
or
test
out
xchg
dec
jae
mov
or
sbb
push
xchg
and
fwait
dec
loope
mov
push
icebp
faddp
adc
faddp
cmp
ss
jl
loopne
push
xor
cmp
pop
or
or
scas
xor
std
inc
push
shlb
aad
imul
je
lea
loop
scas
out
xchg
adc
imull
cmc
loopne
je
push
clc
mov
addr16
push
inc
ss
push
push
nop
mov
popa
and
mov
gs
mov
xor
in
cmc
add
out
and
pop
dec
fcmovnb
pop
xor
mov
mov
push
pop
out
loopne
xchg
popf
and
aaa
xchg
mov
pop
pop
fidivrs
xchg
into
outsl
mov
rcl
icebp
mov
xchg
ret
and
and
mov
ja
testb
add
fisttps
jbe
push
popl
sub
loopne
pop
sub
fdivr
inc
js
ret
aad
ret
pop
jl
mov
xor
scas
and
mov
sbb
push
fwait
arpl
cmpsb
dec
in
adc
stc
in
mov
mov
adc
std
sbb
es
dec
fisttpl
xchg
mov
pop
dec
out
jg
outsb
pop
aas
jecxz
mov
js
xlat
lahf
ficomps
repnz
cmc
dec
arpl
mov
lahf
jecxz
push
es
push
popa
xchg
sub
lcall
arpl
into
shrb
notb
std
int
inc
cmpsb
out
lock
push
int
pop
and
mov
std
xor
mov
inc
cmp
out
jnp
inc
lahf
pop
idiv
sahf
loopne
lahf
icebp
in
jle
jg
and
push
sbb
inc
jo
ficomps
into
jg
into
in
dec
out
lds
mov
jae
sub
ds
mov
rolb
add
xchg
xor
mov
out
ss
inc
and
mov
in
popl
jo
adc
fsubp
adc
out
out
jo
pop
mov
orb
push
mov
xchg
mov
dec
or
jbe
lock
mov
dec
ds
push
in
dec
es
icebp
es
shrb
bound
outsb
add
dec
push
lds
div
cmpsb
and
inc
push
sub
rcll
or
push
bound
pop
push
inc
cmpsl
mov
pushaw
out
iret
sbb
mov
push
nop
cwtl
loop
in
lods
js
sarb
mov
and
in
cltd
jnp
aam
xchg
sbb
xchg
push
xchg
jno
push
cmpsb
push
inc
ja
jle
lds
mov
scas
xor
loopne
int3
fs
jnp
movsl
test
push
mov
shl
into
movsl
test
push
out
dec
test
push
aaa
ds
xchg
shlb
mov
add
stos
cmp
bswap
enter
add
pop
cmp
ja
lcall
addr16
push
xchg
cmc
shll
faddl
mov
xchg
adc
jb
xchg
lret
out
aas
mov
es
jbe
dec
or
xchg
aam
xchg
jo
rolb
out
jbe
insl
jne
sbb
movsl
pop
imul
and
je
fs
or
add
lea
cltd
or
jg
dec
mov
daa
lea
data16
stos
mov
xchg
stos
subl
add
insl
es
rcrl
mov
inc
in
xchg
shl
shlb
aad
nop
xchg
add
out
cmpsb
dec
xor
daa
sub
cli
and
xchg
insb
push
into
fsubrs
lcall
or
xchg
data16
inc
and
ret
push
outsl
and
adc
jne
sub
inc
sub
pop
mov
fisubl
out
or
rclb
stos
int3
js
movsl
sahf
pop
mov
sbb
loop
pop
jns
jge
push
add
loop
loopne
test
fld
pop
adc
scas
pop
in
pop
test
hlt
dec
mov
psllw
fnstcw
ss
or
out
jnp
cld
enter
in
es
fistl
and
fsubrs
mov
shlb
dec
mov
notb
cmp
cld
sbb
xchg
lock
sbb
into
xor
or
push
xchg
js
cmpsl
pop
jbe
int3
lods
adc
fstpt
sarl
loop
std
mov
cmp
or
ds
in
add
sbb
push
shr
jb
inc
inc
loop
std
jle
mov
sahf
dec
cld
out
cwtl
std
sbb
or
sbb
data16
mov
inc
inc
push
mov
and
sbb
into
xchg
mov
jl
lods
cmp
cmp
fwait
push
or
ja
in
clc
lret
sbb
push
add
mov
pop
out
sub
xor
stos
shlb
mov
mov
xor
push
cmp
sbb
stos
ja
pop
sbb
or
imul
outsb
dec
jno
push
sub
xchg
ljmp
sarl
or
imul
mov
inc
cld
cli
scas
leave
test
test
movsb
sbb
int
or
addr16
popa
push
add
ret
jp
orl
int
pop
cmpsl
mov
jnp
divb
sub
add
arpl
add
cmpl
sbb
push
mov
das
enter
mov
add
pop
jbe
js
add
push
lods
aad
leave
cld
xor
imul
jp
stos
adc
mov
stos
xchg
sub
outsb
push
popa
lods
xor
fsubl
fisubs
out
pop
lock
in
xor
push
int
push
push
cltd
sti
jnp
push
cld
fldln2
mov
fdivl
or
pop
lahf
jecxz
out
aad
test
push
aad
aam
imul
mov
or
cmp
pushw
and
imul
xchg
into
jae
push
fisubs
out
adc
cmc
dec
out
xchg
or
xor
roll
mov
jg
dec
jp
and
mov
push
lcall
cmp
xchg
call
push
clc
push
push
outsl
std
xchg
in
addr16
test
pop
test
cld
mov
inc
xchg
nop
leave
test
pop
mov
lcall
stos
pop
mov
fs
cmpsl
push
sti
mov
inc
jne
scas
mov
sbbb
stos
xor
mov
lods
pop
pop
jg
bound
loope
pop
mov
test
push
push
repnz
lods
test
mov
cmc
add
popa
ja
xchg
or
mov
cmc
dec
sbb
xchg
push
pop
pop
bound
imul
stc
pop
xor
cmpsb
mov
lahf
fsubl
adc
inc
xor
std
rcl
iret
aas
lret
data16
cwtl
xchg
xchg
xchg
or
stos
mov
out
aam
jmp
sub
xchg
insb
es
test
xor
jne
aaa
andl
jo
cmp
lods
ds
cld
fldenv
pop
pushf
pop
out
je
test
test
push
int3
in
push
fidivrl
jne
cmc
clc
mov
fsubl
jns
jno
push
scas
cmp
ljmp
jl
mov
loope
or
jns
pop
add
shrb
insb
or
in
mull
sub
mov
xchg
jae
pop
ja
push
int
push
push
insb
and
test
or
aas
mov
push
in
ret
cwtl
rep
imull
jno
leave
clc
and
xchg
jbe
aad
dec
imul
jge
imul
push
push
pop
pop
imul
into
xchg
ja
lock
int
or
jno
test
pop
xlat
mov
or
int
mov
inc
or
popa
push
out
jbe
ljmp
imul
fisttpll
movsl
sahf
cmp
xchg
adc
fmull
lahf
inc
rcrl
mov
outsb
sub
and
xlat
scas
lods
dec
pop
mov
lods
xor
pop
push
dec
stos
sub
out
imul
pop
imull
lods
iret
cmp
lret
fwait
test
sbbl
mov
test
sub
ret
mov
movsb
dec
nop
mov
pop
and
pop
insb
bound
push
sub
push
xchg
clc
lea
lock
cltd
shl
adc
xchg
aaa
lea
sbb
pop
pop
jp
xchg
or
sbb
mov
add
fcomi
jge
stos
or
mov
xchg
addr16
aam
dec
lcall
bound
xchg
stos
shlb
adcl
and
dec
sub
adc
fwait
gs
and
loop
lods
out
insb
ja
pop
xor
inc
into
es
add
inc
jecxz
add
xor
lds
inc
faddl
movsl
loop
adc
dec
subps
and
adc
dec
inc
call
ja
dec
mov
ja
xchg
pop
outsl
shrl
or
fbstp
xchg
test
jno
sub
pushf
stos
or
test
xor
lea
shlb
faddp
movsl
iret
stos
push
out
jp
mov
out
jbe
rolb
dec
fs
adc
frstor
shll
imull
imull
cmp
adc
lahf
ds
scas
mul
ja
jecxz
or
out
mov
push
inc
cltd
ja
stos
adc
in
jo
clc
pop
fists
mov
push
and
inc
push
pop
push
add
jle
mov
cmp
jbe
sbb
pop
mov
jnp
mov
pop
repz
or
push
mov
pop
stos
mov
cmpsl
push
js
div
add
ds
leave
pop
ja
or
jo
test
out
shlb
popf
lock
jb
aam
cmp
adc
push
mov
dec
or
les
repnz
cmp
out
inc
xor
dec
push
iret
jne
jg
xchg
jnp
std
cmp
rorl
push
out
bound
inc
outsb
xchg
mov
jb
pop
sbb
xor
inc
iret
je
shlb
xchg
push
or
mov
test
scas
fsts
movl
pusha
cli
stc
stc
jns
aad
xor
jmp
mov
and
insl
leave
mov
hlt
pop
inc
jecxz
xchg
mov
icebp
sbb
push
and
pop
lock
outsb
xchg
fs
or
and
push
xchg
scas
imul
stos
mov
xchg
cmp
loope
aam
xor
out
sarb
clc
cld
rcrb
das
fistl
fwait
sub
add
stos
cmc
add
jbe
push
push
sub
xchg
rolb
pop
ds
xchg
sbb
fs
sbb
mov
pop
nop
add
adc
loope
ror
jmp
sub
lods
ljmp
rorb
adc
add
imulb
xchg
inc
adc
inc
pop
jp
mov
mov
cmpl
out
cltd
inc
sub
or
imul
sbb
mov
jl
imul
loope
push
imul
ja
popl
loope
xor
sahf
cmp
es
ja
cltd
jns
and
dec
out
pop
mov
js
test
ret
mov
clc
sub
adc
mov
nop
pop
repnz
cld
mov
movsl
mov
js
out
push
jle
pop
shr
sbb
mov
ficomps
data16
ja
lret
lock
mov
fdivrl
pop
aam
jne
and
fcompl
stc
sub
cmpsb
and
pop
fs
in
and
xor
sub
add
and
hlt
scas
scas
lds
outsl
aaa
adc
loop
mov
aam
enter
stos
push
sub
sahf
cmp
or
mov
cmp
sbb
lds
push
mov
and
mov
mov
cwtl
jecxz
out
adc
cmp
movsb
ja
in
ss
aam
and
aaa
jmp
xor
ss
cltd
fistl
nop
xchg
ret
loopne
xor
cmp
mov
fwait
cmp
mov
pop
movsl
jg
mov
rcll
in
sbb
das
cmp
movdqa
imul
aam
dec
jae
aam
std
pusha
andb
xorl
popa
cs
mov
push
ja
or
adc
stos
push
hlt
jbe
inc
push
xor
sbb
outsb
inc
dec
shl
cs
mov
rorl
fcmovu
xchg
pop
sbb
xchg
ror
cmc
adc
dec
jg
int
inc
ror
or
xor
sbbl
sbb
xor
out
test
jg
daa
jle
rcrb
pop
xchg
stc
xchg
stc
jne
neg
call
out
testb
popf
xor
mov
in
sbb
cwtl
mov
push
cltd
adc
mov
push
in
punpckldq
jns
add
mov
es
pop
sub
mov
xchg
add
iret
push
mov
push
test
addb
xor
push
xchg
loop
adc
inc
lock
mov
and
mov
adc
mov
int3
dec
stos
mov
mov
pop
call
add
push
es
lods
cld
and
repz
rcrb
sbb
cmp
and
xchg
cmp
fimuls
pop
sti
inc
xor
cmpsb
mov
pop
stos
leave
roll
xchg
outsb
dec
sub
push
or
push
jne
adc
dec
notb
add
cmp
stos
rorl
scas
jns
mov
dec
test
mov
in
adcl
or
dec
test
in
pop
loopne
adc
ret
mov
jge
pop
xchg
push
xor
xchg
mov
inc
movsl
iret
jns
push
imul
lds
and
inc
mov
cmp
sub
sti
push
mov
test
call
xchg
jae
mov
jmp
es
jne
cmpsb
mov
jle
adc
jmp
fnstsw
jns
and
mov
gs
xchg
cmc
rorb
xor
mov
movq
cld
aas
xchg
jle
sub
jmp
dec
push
mov
popl
popf
in
call
movsb
addr16
int3
leave
pop
inc
popa
mov
sub
nop
stos
adc
test
lret
mov
fld
inc
aas
mov
jecxz
inc
adc
clc
sbb
loop
lds
add
add
mov
push
test
mov
push
mov
mov
stos
mov
jbe
je
mov
mov
outsb
cmp
add
iret
mov
adc
call
jo
shlb
adc
sbb
test
mov
push
mov
scas
dec
pushf
jno
dec
stos
imull
dec
ds
sbb
push
xchg
adc
ja
addr16
push
int3
sub
jo
stos
push
gs
mov
push
xor
rclb
sbb
data16
and
fcmovb
xor
push
ja
and
add
outsl
daa
in
mov
push
sbb
xchg
repz
mov
pop
popf
arpl
mov
insb
sbb
movsb
mov
adc
test
mov
cld
sarl
scas
cmc
sub
jne
adc
jae
sahf
int3
stc
sbb
xor
stos
xchg
inc
cmp
testb
into
pop
mov
and
xchg
mov
push
mov
jbe
ret
push
mov
imul
sbb
lret
ss
ret
xchg
xchg
xor
imul
cwtl
call
incl
dec
mov
or
dec
andl
jne
and
into
imul
xchg
movsb
pop
negb
dec
je
mov
xchg
fidivrl
test
inc
stos
push
in
pop
cld
aad
push
aad
test
pop
int
scas
out
and
sub
shl
add
and
cli
push
rclb
adc
push
insb
rolb
xchg
sub
dec
mov
xor
jge
outsb
mov
subb
lcall
sarl
mov
add
mov
imul
adc
ja
bound
jg
add
ja
jmp
or
fildl
icebp
xchg
sbb
sub
fbld
pop
pop
pop
addb
xchg
mov
lcall
mov
je
dec
aam
leave
cs
stos
cmpsb
movq
ret
inc
jbe
mov
aas
aad
ja
xlat
xor
push
lahf
mov
mov
out
roll
shlb
gs
cmp
push
inc
lea
mov
int3
out
inc
cld
push
pop
loopw
cmpsb
cmp
mov
mov
ja
lock
or
mov
jae
orb
stos
scas
pop
ds
fisttps
cmp
popa
add
pop
sbb
jbe
push
ficompl
mov
pop
jmp
mov
pop
xchg
shll
test
jb
shlb
pusha
pushl
mov
xchg
or
mov
sub
ret
xchg
mov
jmp
dec
adc
push
sbb
aas
ljmp
and
adc
dec
bound
push
push
xor
mov
ja
push
popa
fs
cmp
xchg
cmp
pop
xor
jecxz
xchg
or
xchg
jg
shrb
push
inc
aas
or
ja
rclb
out
mov
or
sahf
je
lods
test
adc
lea
in
lock
cmp
pop
sbb
mov
je
add
popf
call
sbb
subl
and
nop
ficompl
rcrb
xchg
loope
or
xor
out
in
sub
or
push
or
mov
pusha
rol
cmp
outsl
std
mov
shl
mov
jnp
cltd
ret
sbb
mov
and
scas
xchg
adc
cmc
sbb
ret
bound
cmp
fwait
aaa
mov
mov
xchg
mov
xor
xchg
jecxz
and
inc
jg
scas
mov
push
xor
ss
cmpsb
lods
test
mov
mov
insb
jg
sbb
xor
mov
adc
pushf
inc
sub
mov
cmp
cli
bound
lock
enter
pop
sarb
loope
out
mov
sbb
inc
adc
pop
mov
ja
xlat
and
pcmpgtb
cmp
pop
clc
sub
insb
mov
jecxz
mov
and
movsl
sbb
stc
sub
aam
inc
xchg
jg
ror
xchg
mov
mov
notb
pop
fdivl
or
cmp
outsl
add
loope
addr16
mov
inc
into
mov
jg
cli
push
insl
push
int
mov
stos
cmp
inc
cmp
leave
mov
js
pop
cli
push
cmp
cld
mov
pop
mov
lahf
int3
rclb
jbe
xlat
lret
cld
test
dec
leave
pop
inc
clc
or
js
out
cmp
adc
insl
orl
lods
mov
imul
into
jno
aas
sbb
std
pop
shrb
dec
or
inc
mov
lds
mov
pop
add
imul
aaa
mov
in
aas
jle
cld
in
pop
mov
push
jge
fs
push
xlat
dec
jge
inc
push
pop
insb
jge
sbb
push
mov
popf
arpl
rclb
sub
dec
xlat
imul
sbb
push
mov
aas
mov
jb
xchg
mov
lahf
and
jle
push
dec
fs
ret
ret
inc
aam
roll
inc
mov
jmp
jmp
inc
call
in
xlat
lods
cmp
stos
sub
scas
cmp
sub
push
data16
mov
lods
ja
jne
addr16
mov
movb
jge
lods
popa
fcoms
jbe
cmp
out
mov
mov
rdtsc
imul
xchg
lahf
je
push
and
push
outsl
adc
jecxz
arpl
cmpsb
mov
mov
and
fwait
insb
stos
dec
aas
lods
fimuls
jg
scas
cmp
daa
insl
outsb
lock
mov
push
push
out
sbb
repnz
jbe
sarb
sub
fadd
inc
les
out
insb
rcrl
push
int3
cmpsb
push
sbb
rclb
stos
test
mov
cwtl
ss
test
pop
pop
add
rcll
mov
adc
sbb
mov
mov
cmpsb
dec
and
cmp
popl
push
mov
popf
je
bound
shlb
xchg
test
into
sbb
sub
popf
mov
in
out
inc
das
fisttpl
leave
clc
fmuls
in
lods
int
sbb
pusha
sbb
jge
aas
dec
jg
mov
jmp
test
out
aas
xchg
pop
imul
mov
inc
into
xchg
push
or
insl
pop
lahf
xchg
pop
push
dec
xor
loopne
in
std
movsl
sbb
cld
test
jno
sbb
cmp
mov
fldenv
jg
pop
sub
cwtl
mov
mov
mov
fbld
aad
mov
sbb
loop
cmp
jbe
loopne
mov
fsts
icebp
test
aam
mov
loop
add
or
lock
mov
lcall
jbe
hlt
or
and
jle
xchg
sarb
cmpb
pop
jle
sub
insb
ss
mov
mov
adc
inc
lret
jg
dec
or
mov
sbb
xchg
cmp
mov
dec
in
inc
pusha
addr16
and
cmp
mov
pusha
or
pop
xchg
fs
gs
dec
andb
xchg
popf
or
mov
or
add
or
es
bound
iret
jb
dec
aad
cmp
fdivs
jbe
cs
mov
inc
xor
loopne
test
sbb
sbbl
aam
test
cmp
mov
stos
fwait
xchg
push
cmpsb
dec
xlat
lods
in
outsl
arpl
addr16
cmp
or
sbb
scas
adc
and
xor
decl
imul
adc
push
cmp
mov
pop
or
xor
shl
scas
or
repz
and
cmpsl
push
add
subb
imull
inc
add
ss
and
bnd
jno
aam
rclb
imul
ds
out
scas
das
xchg
push
arpl
jle
pop
imul
xor
push
mov
xchg
aas
test
fsts
xchg
cltd
lret
and
cmc
lods
rcrb
rol
mov
mov
jne
inc
mov
xlat
push
xlat
xchg
cmp
shrl
pop
in
xchg
mov
cmpsl
mov
add
push
mov
jg
mov
xor
jecxz
xchg
push
out
sbb
cmpsl
jbe,pn
ficoml
ja
lods
add
into
dec
xchg
sbbb
mov
mov
push
cli
pop
mov
mov
jbe
cmp
daa
jmp
int
dec
push
mov
rcrl
cmp
jbe
pop
js
daa
data16
test
movsl
mov
mov
mov
aas
mov
dec
cmpsb
mov
dec
addl
push
nop
or
mov
mov
mov
inc
jno
ja
out
mov
xlat
xchg
push
fisubs
fiaddl
out
ret
add
int3
rcl
shrl
inc
cld
in
or
mov
pusha
sti
decb
xlat
and
push
fwait
movsb
inc
out
cmpsl
mov
sbbl
mov
lock
es
aas
ja
or
or
adc
lds
mov
shr
pop
flds
ficoms
push
mov
cmp
mov
or
xorl
movsl
mov
gs
or
mov
iret
cltd
scas
push
mov
inc
and
pushf
scas
lods
sti
test
cld
shl
ss
fwait
or
pop
mov
cli
push
pop
mov
out
mov
sti
sbb
xlat
repz
hlt
ja
cwtl
sbb
scas
xchg
mov
jno
loopne
sbb
and
push
mov
pop
iret
loopne
gs
xchg
pop
lds
xlat
fs
sbb
das
mov
out
cld
pop
jmp
pop
xchg
stc
sub
adc
int3
push
jo
push
jp
ret
and
addr16
mov
fists
enter
jne
and
shl
and
mov
lahf
xchg
add
cmp
cmp
ja
dec
fs
cs
outsb
cmc
js
imul
pop
pop
or
mov
cmp
ret
jns
inc
arpl
and
or
xlat
int
jp
imul
mov
push
sbb
pop
push
mov
rclb
addb
imul
cs
add
sub
shlb
dec
enter
test
arpl
inc
ja
mov
mov
mov
mov
adc
cld
cld
shlb
mov
push
pop
in
shll
aas
fwait
outsl
adc
aad
push
gs
mov
xchg
xchg
jg
lods
movsl
sbb
mov
negb
fists
dec
dec
push
clc
negl
es
mov
pop
dec
imul
cmc
inc
dec
jbe
insb
push
push
and
xor
rcrb
jb
inc
aaa
or
ss
push
outsb
and
xchg
inc
xor
pop
movsb
lods
sbb
xor
arpl
aaa
cmp
push
inc
stos
mov
jle
dec
stc
jb
xchg
fcompl
cwtl
int3
or
sarb
xor
ficompl
std
pop
lods
push
stos
sub
dec
xchg
js
enter
push
xor
pop
mov
cmc
loop
ds
scas
fcmovne
mov
clc
in
dec
fistpl
paddd
mov
push
daa
and
push
fnstenv
pop
cmp
lock
xchg
ja
std
in
popa
xchg
cli
add
arpl
out
adc
mov
dec
push
cltd
lds
sub
arpl
sub
popf
jo
mov
and
or
lret
adc
mov
out
stos
pop
rcll
ficoml
xor
pop
mov
sub
mov
jbe
inc
sbb
out
aaa
fdivs
jbe
sbb
push
adc
adc
xchg
gs
add
ret
into
push
ja
dec
jbe
mov
in
pop
shrl
sbbb
cli
pushf
push
push
mov
mov
jbe
and
in
sbb
and
shl
aas
push
mov
push
jns
pop
mov
jp
cld
mov
push
and
xor
scas
out
cmp
mov
mov
mov
adc
xlat
mov
std
cmpsb
cmp
scas
dec
mov
fs
adc
call
popa
das
movl
mov
in
inc
push
dec
or
rcl
inc
movsl
out
ficoms
mov
cltd
cmc
scas
fistl
lcall
cmc
inc
out
mov
dec
sbb
dec
shlb
lods
and
push
fidivrl
fidivl
xchg
stos
and
add
test
loopne
ss
jp
mov
jns
jo
xlat
xlat
mov
clc
dec
scas
sbb
test
jecxz
nop
in
mov
dec
push
roll
aas
mov
jno
xchg
in
sub
xchg
push
xchg
push
scas
pushf
out
shr
mov
mov
add
test
jb
lock
out
pushf
dec
push
fisubrs
aad
mov
push
lcall
mov
push
mov
push
and
popf
les
ret
repz
cli
testl
ja
sbb
push
loop
cwtl
mov
int
sbb
shlb
mov
mov
adc
lahf
push
fs
jne
xchg
add
xchg
icebp
shlb
inc
xorb
movsl
mov
aas
adc
sbb
daa
fcompl
sbb
cmpsb
rcll
jnp
pop
in
xchg
fstpl
mov
rcll
adc
xorb
negb
xchg
pop
cltd
call
push
jbe
mov
xor
loope
push
push
dec
ds
int
notl
subb
rcrb
fwait
and
inc
fnsave
scas
pop
daa
in
loop
mov
jg
test
cmpsb
lods
push
cwtl
xchg
imul
cli
outsb
imul
in
jbe
incl
mov
push
adc
or
stos
pop
loopne
out
xchg
rcrb
or
sbb
insb
and
loop
in
adc
fldenvs
orl
sub
fnstsw
xor
les
cmp
insb
popa
test
jmp
shrb
cmovae
aam
insl
pop
jnp
cltd
pop
mov
ret
mov
jecxz
call
aaa
imul
int3
mov
cltd
push
adc
dec
sar
ja
jnp
js
sbb
push
lods
lret
lea
mov
mov
cmp
jl
daa
out
xchg
cltd
aam
enter
dec
scas
add
in
cmpl
and
das
mov
push
inc
in
sbb
movsl
enter
pop
test
int3
fs
xchg
ds
aam
jle
cmp
add
sbb
and
jge
int
loopne
mov
in
cmp
mov
sub
shll
xor
les
clc
pop
or
push
inc
call
adc
lret
test
fwait
pop
lods
shl
hlt
cmpsl
and
movsb
pop
out
sub
dec
loopne
stos
xchg
and
sbb
sbb
cmpsl
in
push
outsb
into
int3
repnz
insl
jl,pn
loop
mov
jae
icebp
cmpsl
dec
int3
out
testl
push
mov
in
jmp
cmpsb
cmp
mov
lock
xchg
ret
mov
sbb
fwait
mov
sbbb
ljmp
lss
sbb
lock
lahf
fmul
loop
nop
mov
lret
mov
cmc
mov
aam
pop
fsub
out
enter
xchg
nop
sub
cmpsl
adc
push
inc
shl
mov
popa
adc
inc
adc
mov
mov
ljmp
mov
call
lret
sbb
add
pop
cmp
sbb
and
push
in
push
lcall
lret
int
xor
iret
pusha
es
and
xlat
xor
dec
sbb
push
repz
lcall
dec
and
into
inc
cli
flds
in
sbb
jo
xchg
and
mov
jne
in
inc
jecxz
xchg
rolb
cmpsb
sbb
mov
outsl
push
rcrl
sub
xchg
push
xor
dec
mov
add
jae
rcrb
cmpsb
loop
out
mov
jge,pn
sbb
inc
mov
test
fucomp
xchg
movsl
cmpsl
dec
mov
in
jne
inc
xor
add
in
movsb
or
inc
imul
mov
and
ljmp
xor
cld
inc
push
and
popa
mov
cmpsb
jo
mov
clc
mov
cli
lods
cmpsl
in
out
jmp
cmpsb
or
jb
add
adc
out
xchg
mov
test
jecxz
sbb
mov
pop
jno
in
mov
jg
fs
mov
xor
jp
icebp
das
into
cwtl
mov
lods
clc
mov
shl
mov
and
mov
rcrb
or
fidivrs
insb
xchg
and
mov
jp
cmpsl
rol
adc
push
std
sub
test
popa
aam
mov
popf
push
in
jmp
dec
pusha
add
adc
mov
sub
loope
jecxz
adc
jns
sbb
cmpsl
aas
mov
out
cmp
das
mov
xcrypt-ecb
cmpsl
dec
js
mov
jge
pop
clc
int3
int
ret
add
rorl
pop
cmpsb
loop
add
pop
mov
and
fidivs
ja
dec
test
xchg
clc
movsl
ds
adc
fwait
mov
shlb
adc
mov
push
mov
fs
sub
cmpsl
in
sbbl
xchg
inc
push
mov
or
push
lds
mov
sub
add
xchg
jno
adc
pop
cmp
call
ror
lahf
dec
sti
adc
out
std
or
adc
sbb
push
mov
stos
jl
push
mov
es
fld
mov
stos
popa
dec
cmpsl
loopne
cmc
cwtl
and
leave
adc
mov
mov
dec
movsl
dec
aam
incl
add
xor
add
xor
and
or
dec
lea
ror
nop
data16
push
cmpsb
loop
xchg
jle
test
mov
add
aam
pop
mov
in
xchg
mov
sub
and
add
into
aam
enter
mov
fsubs
mov
adc
cmp
sub
in
ror
ss
aam
sbb
mov
cmp
fsubr
insl
pop
in
add
int
mov
and
in
adc
inc
sbb
mov
ljmp
jnp
mov
cmp
aas
loop
adc
push
lret
notb
ljmp
sub
in
scas
arpl
js
out
dec
int3
inc
lds
sub
data16
inc
movsb
pop
out
in
dec
lock
shl
add
clc
pop
xor
mov
insl
mov
cmpsb
pop
aas
mov
push
cmpsl
imulb
test
test
in
xchg
data16
repnz
xchg
mov
outsb
es
push
push
ret
mov
jl
pop
push
cmpsl
xchg
test
mov
xor
inc
mov
call
xorl
pop
adc
pushf
in
aas
push
shrl
sbb
ret
jle
test
lea
lahf
jbe
mov
call
and
mov
stc
sub
mov
shlb
mov
mulb
mov
cmpsl
ret
jno
sbb
loope
and
test
xor
lret
dec
mov
movsl
mov
or
sub
scas
and
jbe
lahf
mov
in
in
mov
roll
shll
cmpsl
add
ljmp
cs
dec
jnp
lock
mul
stos
loop
test
jne
mov
out
in
cmp
mov
push
in
les
movsb
add
pop
mov
popf
push
jns
pop
es
and
mov
ja,pt
ret
scas
or
lcall
mov
jb
dec
mov
test
ret
sbb
dec
jbe
imul
mov
xchg
jo
repz
lret
mov
sbb
mov
clc
ds
adc
mov
mov
inc
test
insl
es
push
leave
out
movsl
sbb
movb
call
mov
dec
into
jmp
faddl
add
sbb
xchg
sbb
or
pop
gs
fdivl
xchg
rcll
inc
lods
cmpsl
dec
and
popl
fisubl
out
iret
cwtl
lea
into
scas
mov
mov
adc
rcrl
fsin
dec
push
jnp
adc
pop
clc
loopne
xor
fldz
or
xor
loop
loop
in
or
add
xchg
sub
enter
inc
inc
jecxz
xchg
jo
mov
mov
cmpsl
xor
out
mov
loope
loop
xchg
add
mov
sbb
cmpsl
test
mov
sub
popf
hlt
into
or
je
cwtl
inc
sti
mov
jmp
xor
xchg
dec
out
loop
and
cmpsb
call
aad
push
xchg
mov
sub
movsb
lods
je
aaa
ljmp
push
mov
mov
icebp
cmpsl
shr
lods
mov
cmp
sbb
out
loop
andb
cmpsl
test
mov
mov
push
loop
push
mov
jo
repz
aas
in
fistpll
ret
jge
daa
adc
stos
adc
cmp
mov
je
mov
lret
loop
ja
in
or
int3
dec
rolb
or
ror
mov
cmpsb
sbb
jb
outsl
jl
rcll
xor
leave
addr16
mov
in
adc
addr16
xorl
ss
jbe
and
faddl
addr16
mov
sub
aam
mov
in
aaa
into
or
into
dec
or
into
or
sar
ret
xchg
das
dec
in
xchg
iret
rcrl
sub
mov
cmp
into
xor
int
clc
pop
mov
test
and
jno
repz
mov
stos
pop
cmpsb
sub
push
insl
loop
in
mov
sbb
and
ds
xchg
and
std
mov
mov
rcrl
add
stc
stos
ds
inc
push
shl
sub
ret
pop
loop
inc
data16
push
mov
fildll
xchg
mov
sub
ljmp
into
push
cmp
pusha
in
ret
mov
in
xor
xchg
mov
mov
jle
xor
cmpb
loop
mov
movsl
das
inc
jge
jp
mov
and
mov
enter
mov
mov
into
push
or
loop
pop
int
out
add
sbb
lods
into
xchg
push
jmp
loope
xor
es
andb
adc
dec
mov
jae
ret
inc
mov
cmpsl
in
ds
shll
faddl
push
adc
test
stc
lock
psrad
jle
shrl
mov
ds
xchg
lahf
call
clc
adc
repz
fadd
mov
sahf
call
fiadds
in
lods
xchg
loopne
or
push
push
test
pop
mov
add
in
sbb
mov
aam
pop
mov
and
repnz
jge
imul
aas
jg
outsb
out
jbe
mov
mov
cmpsb
in
xor
aam
xchg
push
ss
cmpsl
xchg
cld
jmp
jb
mov
cmp
pop
les
jl
in
loop
lods
mov
cmp
adc
wbinvd
addr16
mov
adc
in
popa
mov
adc
and
mov
adc
dec
or
mov
jo
mov
add
inc
mov
cli
xchg
xor
in
inc
xchg
jp
out
inc
mov
mov
add
out
in
out
es
sti
xorb
mov
dec
movsl
lock
inc
cmpsl
xorb
cmpsb
cmp
add
push
rcrb
cmc
mov
add
je
dec
loop
cs
push
ja
push
cmpsl
push
and
pusha
ss
sar
add
cmpsb
sub
and
mov
out
dec
roll
pushf
lret
pop
or
stc
adc
xchg
mov
aad
loopne
aas
xchg
repnz
and
jnp
or
or
lcall
fxch
loop
xchg
mov
mov
fneni(8087
mov
sbb
dec
jo
push
cmpsl
test
cli
cmp
insl
out
adc
outsb
loopne
mov
out
lods
mov
inc
adc
outsl
dec
mov
shrb
cmc
cmp
adc
dec
cmp
in
inc
rcr
ja
pop
das
es
push
xchg
hlt
mov
dec
je
fstl
lods
and
ret
lret
mov
add
pop
pop
inc
ret
in
adc
mov
push
iret
into
jge
pop
inc
fucomip
int3
lahf
push
popa
outsl
push
out
xchg
jne
ds
loop
cltd
inc
in
sarl
mov
out
mov
test
testb
cmp
cmp
jo
mov
movl
add
movsl
iret
xlat
inc
sub
popf
mov
in
and
mov
and
in
cmp
mov
cmpsl
jnp
xchg
sub
aam
push
js
cmpsl
scas
ljmp
ret
sbb
xor
ss
add
in
mov
mov
cmp
inc
fs
mov
pop
inc
jb
xchg
inc
scas
call
mov
inc
mov
inc
mov
cmpsl
fwait
mov
into
dec
cmp
arpl
pop
into
ret
in
mov
into
dec
jmp
mov
push
cmpsl
mov
mov
sbbb
in
push
adc
or
scas
jo
mov
and
das
sub
pop
call
adc
push
mov
push
adc
inc
mov
xchg
sbb
mov
add
push
xor
loop
mov
cmpsb
xchg
call
or
es
add
sbb
popf
movb
or
mov
rol
ja
adc
ljmp
into
ret
or
pop
lds
adc
mov
es
add
add
push
add
mov
xchg
pop
lds
xor
in
bound
mov
mov
mull
js
cltd
mov
pop
adc
pop
add
stc
ffreep
data16
mov
cmpsl
movsl
inc
lret
sbb
push
mov
xchg
mov
and
push
ds
stos
pop
push
mov
mov
test
xor
inc
imul
cmpsl
lods
icebp
nop
cwtl
inc
jnp
cmc
dec
pop
enter
xchg
xor
inc
into
daa
vmovaps
mov
mov
and
jp
mov
push
ds
add
jo
insb
cmpsb
in
inc
mov
jmp
mov
fbld
mov
add
jecxz
fld
in
mov
pop
shlb
xchg
repz
in
in
std
add
pusha
es
test
sub
push
cwtl
enter
lods
jnp
daa
orb
lret
lcall
mov
popf
cmpsl
stos
xlat
and
jbe
scas
sbb
sbb
shll
and
pop
rcrl
jne
shlb
enter
add
adcb
adc
mov
in
or
fnstcw
leave
clc
jecxz
mov
in
add
sub
ret
jg
scas
mov
push
lahf
push
push
xor
in
and
mov
hlt
adc
cmpsl
lods
push
gs
repz
in
leave
lock
push
adc
sub
adc
xchg
jns
shrb
xlat
add
lds
addb
xchg
jnp
cmpsb
mov
push
jbe
add
sub
jg
and
cli
lcall
lret
lock
cmpsl
xchg
add
icebp
and
daa
mov
mov
repz
xchg
xor
xchg
ret
mov
pop
out
and
cld
cmp
mov
ffreep
xor
cmpsl
scas
dec
sbbl
inc
sbb
xchg
add
dec
sbb
and
filds
incl
idiv
mov
lods
xchg
mov
xlat
in
and
out
call
imul
push
inc
data16
xchg
and
mov
fildll
xchg
bnd
mov
pop
push
loop,pn
cmpl
pop
xchg
fiaddl
movsb
and
sar
js
xchg
out
jp
and
and
xchg
clc
icebp
push
dec
jle
sbb
test
pop
mov
and
mov
mov
in
loop
sbb
cmp
ret
cs
test
data16
lret
and
jg
jecxz
mov
push
jge,pt
into
cs
cmc
sbb
mov
mov
daa
xor
ret
fldt
sbb
lods
test
or
push
push
mov
and
imul
rolb
inc
jnp
mov
cmp
shlb
push
cmp
out
shlb
or
int3
fwait
pop
scas
cmp
lcall
insb
xchg
rol
fistpll
dec
das
stos
in
push
stos
pop
mov
xor
in
jae
fbld
mov
dec
add
sbb
or
push
sbb
cmpsl
fwait
xchg
jb
cmp
aas
in
sbb
jae
hlt
xchg
clc
mov
les
cmpsl
in
test
movsl
les
or
jg
aas
sbb
cmp
adc
nop
mov
xchg
push
rolb
lods
ja
rcll
cmpsl
stos
add
scas
aas
adc
cltd
popf
ret
in
loope
xchg
into
sbb
sub
and
mov
in
mov
gs
sbb
push
push
int
in
mov
sbb
clc
movsb
jg
shl
adc
ss
mov
rorl
ret
cmp
jecxz
dec
nop
es
jge
test
jne
mov
cmpsl
xchg
rcrb
add
mov
imul
push
mov
jle
aas
in
and
loope
out
lea
xor
out
repnz
xchg
pusha
push
sbb
lock
pop
sti
mov
cmc
push
push
or
add
int3
dec
arpl
js
jb
or
xor
or
sbb
loopne
out
cmpsb
in
xor
mov
in
jae
mov
stos
xchg
mov
jno
cli
and
shl
icebp
loop
lret
push
and
hlt
push
test
push
je
je
pop
movsb
faddl
and
add
popf
cmpsl
movsl
mov
hlt
pushf
sbb
mov
ret
push
aam
cmc
xorl
js
nop
rorb
xchg
stos
and
clc
mov
pop
sbb
fsubrl
fistps
lea
mov
and
cmp
in
cmp
pop
xor
loop
sub
insb
lock
lret
imul
xchg
mov
pop
cmp
push
and
cmpsl
imul
mov
ljmp
xchg
ret
push
scas
fsubp
cmpsl
outsl
stos
lahf
xorb
imul
cltd
repz
or
push
mov
pop
out
clc
mov
ret
or
pusha
and
add
stos
aam
adcb
rcrb
jmp
add
addr16
out
clc
mov
lods
xchg
cmpsl
in
push
push
jmp
mov
cmc
out
orb
movl
test
jg
push
add
rcl
hlt
ds
cli
daa
rorb
inc
loopne
jnp
movsl
aam
cmp
pop
xor
dec
mov
into
inc
fsubl
inc
ss
fwait
cmpsl
scas
jp
push
inc
xchg
xor
test
cmp
sarb
mov
dec
sub
cmp
addr16
xchg
fs
lock
nop
in
jne
xchg
push
mov
mov
scas
add
scas
sub
dec
mov
sub
xchg
mov
xlat
push
addr16
in
mov
js
je
dec
and
pop
push
sbb
sahf
jb
cli
dec
mov
dec
inc
sbb
insl
cmpsl
sbb
jmp
sbb
pop
filds
mov
out
xor
dec
push
test
enterw
sar
adc
jne
shlb
mov
sbb
shl
into
out
adc
dec
aam
push
in
mov
sub
cmc
js
pop
test
arpl
cmp
aaa
gs
or
jo
lret
push
pop
int3
loope
add
xor
jl
or
push
int
cmpsb
mov
in
mov
sbb
clc
sbb
stos
sub
rol
mov
push
jnp
mov
lret
inc
call
cmpsl
mov
dec
mov
mov
push
gs
ret
cmpsb
scas
movsb
mov
mov
sub
sub
sbb
aam
mov
aaa
cs
add
jbe
cmpsl
mov
push
pop
mov
test
outsb
fsubs
int3
xchg
xor
ret
outsl
insb
mov
fcomi
clc
aas
mov
loopne
fucomp
rcll
xor
ljmp
fnstcw
lods
adc
bnd
or
into
inc
or
xor
xchg
dec
sbb
mov
ret
into
ja
enter
iret
in
das
lret
jle
out
sar
push
inc
into
dec
and
loop
jae
enter
jno
aad
ror
push
xor
ds
and
shl
fldcw
or
add
dec
into
in
push
std
cmc
scas
sbb
inc
es
pop
ss
push
call
pop
jl
xchg
fs
inc
pop
cld
lock
cmp
cmp
out
pop
pop
jne
and
cld
jl
sarl
lahf
subl
and
mov
or
cmp
mov
divl
or
ja
addb
push
push
cmpsb
inc
roll
sub
lahf
iret
call
and
and
xchg
add
xor
mov
cmp
xchg
or
pop
jno
mov
dec
js
rorb
pop
fwait
out
sbb
mov
cmp
dec
mov
push
jb
push
stos
mov
andb
negl
adc
shlb
lea
in
mov
jp
cmpsl
loope
add
outsl
int3
cmp
outsb
fwait
and
mov
mov
add
mov
xor
lds
cld
ds
xlat
push
aam
xchg
lods
and
cmpsl
xchg
adc
outsb
sbb
insb
sub
in
cli
pop
cmpb
push
inc
leave
or
xchg
outsl
inc
in
out
test
rol
adc
mov
int
in
rolb
xchg
aad
rorl
and
subps
and
in
imul
in
mov
sbb
cmpsl
jbe
jg
pop
inc
test
cwtl
lret
testb
fnstenv
dec
cwtl
mov
aas
push
test
push
pop
push
ljmp
pop
cmpb
inc
xlat
sub
dec
mov
nop
adcb
out
ret
cmpsl
test
hlt
rcrl
subl
cmpsl
lods
sbbb
push
pushf
mov
stos
sti
inc
push
cmpsl
imul
mov
aam
lcall
sbb
daa
jo
xchg
xor
adc
push
int
es
hlt
mov
jno
dec
cli
ret
mov
sub
add
or
leave
push
jl
sub
dec
mov
push
mov
jle
mov
sub
adc
mov
pop
pop
shrb
jnp
cmpl
lret
and
popf
sub
mov
in
lds
cmp
jnp
inc
cmpsl
test
push
stos
and
cmpsl
cmpsb
jg
mov
cmpsl
lcall
sub
ja
jo
or
cmc
sahf
jnp
ret
inc
nop
mov
cli
sbb
sarb
push
jg
cmp
add
inc
jne
mov
mov
xchg
pop
das
inc
xchg
add
mov
xor
clc
sub
jg
dec
mov
data16
cli
es
push
aas
dec
xor
cmpsl
mov
and
and
or
dec
add
sub
aam
data16
insb
xlat
aaa
add
mov
pop
mov
imul
jp
insl
push
cmpsl
push
sarb
mov
cmpsl
inc
and
lret
test
cmpsl
xor
fmulp
and
or
cmpsl
fs
aaa
dec
mov
rcrl
sti
push
mov
mov
sbb
lret
adc
inc
mov
jnp
lods
adc
clc
dec
fsubrl
insb
pop
xor
or
xchg
fists
sti
insl
dec
lods
add
es
jle
ret
mov
push
dec
loopne
xchg
aad
fdivrl
mov
cli
shl
cmpsl
lea
mov
mov
incl
xor
cmpl
dec
pop
push
and
mov
out
inc
xlat
cmpsb
push
xchg
pusha
imul
scas
sbb
mov
mov
lahf
cmpsl
iret
xor
xor
cmpsl
stos
xchg
mov
pop
cmpsl
sahf
ss
or
movsb
dec
cmpsl
sub
cmpsl
inc
push
adc
iret
jae
enter
ficoms
imul
pusha
sbb
loop
mov
mov
ret
mov
hlt
mov
dec
mov
pop
cmpsl
out
add
lret
fwait
push
mov
sub
pop
push
lret
jno
xchg
add
pop
jne,pt
push
mov
into
mov
imul
aam
out
pusha
out
cs
jle
add
lret
cmpsb
bound
xchg
cmpsb
sub
clc
pop
add
pop
subl
bound
mov
mov
shll
xchg
lds
cmpsl
xchg
das
rorb
cmpsl
or
in
push
clc
cwtl
insb
jg
testb
xor
dec
pusha
xor
lret
or
add
adc
sub
jbe
cmpsl
add
fldt
inc
sub
pop
clc
or
push
repz
lret
or
sbb
arpl
and
mov
mov
flds
xchg
ljmp
jmp
pushf
mov
andb
push
in
cmp
jmp
cmpsl
jo
lock
jp
mov
std
fiaddl
mov
push
sbb
addb
in
int
in
add
inc
lahf
fidivs
lret
imul
popf
sub
loop
mov
mov
add
sbb
cltd
outsb
cmpsl
or
jno
xchg
adcb
adc
dec
xchg
shrl
adc
outsl
gs
es
cld
or
or
pop
cmpsl
sbb
out
das
sub
lret
in
or
push
fwait
mov
and
jae
jle
mov
xchg
cmpsl
in
fldt
cli
loope
cmpsl
roll
fidivrl
pop
cmp
sti
inc
loopne
cmpsl
add
jge
xchg
fiadds
ljmp
pop
xchg
xchg
cmpsl
enter
je
pop
out
cmpsl
pop
mov
push
mov
cmpsb
jle
xor
mov
frstor
cmpsl
sbb
std
xchg
int
mov
lea
cld
and
lods
lret
fcoml
push
mov
add
push
or
and
out
clc
call
cmc
loop
loopne
repnz
outsb
sbb
and
leave
jmp
pop
or
dec
rcl
jge
pop
divb
jo
cmpsl
inc
test
repnz
xchg
jno
daa
shll
jne
jnp
int3
jbe
jo
out
ja
jecxz
mov
mov
outsb
cmpsl
jne
arpl
test
fwait
dec
out
and
gs
push
and
scas
cmpsl
cmp
fucomip
cmpsl
negl
pop
subl
shlb
sub
mov
pop
aas
mov
cld
jbe
cmpsl
xchg
pop
cmpb
cmpsl
scas
ljmp
cmpsl
fldl
push
cmp
add
inc
cmpsw
sub
pop
sub
adc
cmc
ss
dec
lahf
dec
aaa
xor
jecxz
push
xor
sbb
ja
stc
sbb
stos
mov
cmpsl
cs
cmp
shll
outsb
mov
ror
sbb
ret
jmp
inc
mov
cmpsl
cmp
push
iret
push
xor
sbb
push
int
cmpsl
or
pop
mov
insb
repnz
jmp
faddp
pop
add
rorl
fidivs
out
into
cmpsl
icebp
adc
fsubrs
cmpsl
pop
mov
ret
test
mov
cmpsl
jmp
in
and
mov
mov
xor
adc
das
out
rolb
int
cmpsl
mov
inc
mov
adc
popf
adc
mov
movb
popf
mov
nop
jnp
or
cs
cmpsb
stos
mov
sahf
cmp
iret
push
cmp
das
mov
es
add
add
sbb
ret
mov
sub
dec
sbb
inc
mov
in
sti
das
out
scas
jecxz
call
fisubrl
cmpsl
jnp,pn
push
lahf
mov
cmpsb
mov
pop
jle
adc
fmulp
cmp
es
mov
add
lahf
jns
daa
sub
jno
mov
sbb
in
out
cmp
scas
mov
mov
cmpsl
cmp
or
cmpsl
js
je
add
cli
ds
cmp
xor
cld
jno
cmp
xchg
test
out
mov
lcall
or
xor
scas
and
lret
inc
mov
jle
ss
xor
push
leave
cmpsl
js
cmp
scas
mov
pop
inc
test
incb
cmpsl
lods
fistps
push
xchg
inc
adc
arpl
sbb
adc
mov
cmpsl
push
adc
push
cmpsl
out
outsl
scas
jmp
inc
lret
sarb
sub
dec
cmpsl
mov
xchg
push
clc
xchg
arpl
ret
inc
dec
xor
push
cmpsl
push
insl
cld
add
push
dec
dec
in
leave
or
ret
cmpsb
test
xor
ds
mov
mov
mov
mov
cmpb
fisubrs
xchg
cmpsl
dec
add
xchg
push
cmpsl
and
sti
lret
out
pop
scas
mov
loop
inc
lcall
jg
push
cmpsl
stc
jae
xchg
inc
mov
xor
jbe
loopne
xchg
ret
fmull
dec
add
cmpsl
adc
lcall
mov
lahf
cmpsl
lds
cs
aad
cmpsl
fsubs
pop
cmpsl
in
into
ss
outsb
les
cmpsl
dec
popf
test
aaa
sahf
sbb
gs
stos
cmpsl
out
jecxz
stos
pushf
mov
cmpsl
lds
out
int3
push
daa
mov
in
std
inc
andb
out
mov
arpl
cmpsb
mov
mov
ficomps
cmc
test
inc
xor
jno
jmp
add
jo
cmpsl
fnstenv
rclb
cmpb
call
ja
pop
aam
outsl
mov
imul
rolb
outsb
ss
add
xchg
imulb
or
cmpsl
fs
aas
call
cmpsb
movsb
insb
inc
in
mov
in
idiv
cmpsl
xor
xor
adc
sahf
iret
jmp
rcll
or
adc
hlt
dec
andb
jno
jmp
mov
ja
mull
cmpsl
inc
lret
xor
xor
pushw
pop
cmpsb
fprem1
or
adc
pusha
sub
les
sbb
cmpsb
fcomp
cmpsb
pop
sub
cmpsl
add
sub
cmp
cmp
cmpsl
inc
fnstenv
dec
mov
std
aam
arpl
das
ss
xor
pop
cmp
sbb
mov
stc
ret
cmp
out
xchg
aam
cld
loopne
cmpsl
cmp
in
jecxz
andl
cli
fbld
sub
cmpsw
mov
pop
in
js
ret
ss
jne
mov
inc
mov
or
insb
xchg
fldenv
insl
mov
out
jo
clc
pusha
or
ret
in
lea
dec
loopne
xor
leave
mov
or
sbb
sarb
adc
or
scas
in
xchg
mov
cmpsl
xor
jle
fldenv
es
push
aad
inc
dec
cmpsl
sarb
pop
cmpsl
hlt
fmulp
lock
or
ret
insl
cmpsl
jo
cmp
into
push
jno
and
mov
fimull
cmpsl
sbb
adc
mov
outsl
dec
je
in
mov
cli
mov
jp
mov
lods
push
int3
jae
int
rol
xor
gs
fiadds
cmp
ljmp
cmpsl
call
std
fidivl
into
cmpsl
xor
sub
jnp
cmpsl
fnsave
sahf
mov
inc
clc
pop
dec
mov
xchg
daa
and
mov
sbb
add
subb
outsl
mov
lret
cmpsl
push
add
mov
push
rol
adc
dec
mov
xchg
and
rcll
cli
fxch
sbb
outsb
add
je
sahf
sbb
xorb
jne
outsb
decl
leave
push
and
cmpsl
repnz
xchg
pop
jbe
cs
pop
ret
addb
push
out
call
out
mov
mov
cmp
cltd
xchg
in
add
loopne
mov
xchg
xor
cmpsl
fsubr
cmovne
shlb
int
cmc
cmpsl
jb
jecxz
jl
dec
enter
mov
and
loop
mov
loope
rcr
add
frstor
push
fwait
inc
cmp
out
ret
jle
in
add
adc
fcom
test
popf
lahf
repz
adc
cmpsb
mov
fnstsw
add
daa
mov
out
movsl
shll
nop
js
lds
add
rclb
mov
xchg
rorl
mov
test
jbe
lahf
hlt
ja
call
lods
test
or
add
mov
je
dec
in
and
gs
cmpsl
and
mov
lds
jno
add
pop
in
xorb
adc
sub
out
stos
cmpsl
iret
cltd
jmp
dec
mov
adc
lret
mov
cmpsl
pop
outsl
sub
repnz
mov
scas
cmp
xchg
leave
mov
pop
jmp
mov
negb
xor
fwait
push
imul
out
inc
int3
dec
lret
cmp
add
iret
inc
outsl
mov
fsub
lock
pop
ja
xchg
xlat
sub
gs
push
icebp
loop
sub
and
lods
jle
stos
pusha
into
bound
sub
push
jo
fwait
pusha
int3
loope
mov
and
aam
cmc
mov
xchg
loope
cmp
clc
and
test
arpl
loopne
cs
addr16
sub
ja
mov
popf
adc
mov
dec
aam
adc
in
sti
rorb
xchg
out
shl
lds
xor
inc
cmpl
mov
lods
sbb
scas
cmpsb
jb
sbb
sbb
pop
imul
lods
jl
inc
inc
in
mov
rorl
xchg
in
push
lock
pop
arpl
or
mov
cmp
or
push
aam
mov
pusha
ja
shll
cmc
bound
jle
cmpsb
jns
ffree
push
addr16
add
inc
adc
hlt
es
stc
or
rolb
xchg
popa
decb
incb
out
sub
ljmp
pop
cmp
test
mov
lcall
loope
outsb
addr16
xor
push
in
pop
inc
mov
into
sbb
xor
inc
cltd
outsl
lds
std
and
push
cltd
fldcw
xchg
mov
adc
dec
xlat
sti
testl
sbb
mov
aas
pop
inc
pop
mov
shl
mov
int3
mov
sub
mov
insb
push
xchg
fldt
push
inc
test
adc
add
imul
or
out
mov
jnp
cmp
mov
rcl
or
cmpsb
cmp
lea
cs
fcoml
push
sarl
xchg
fistpl
mov
or
pop
adc
out
or
pop
jmp
adc
es
xchg
leave
cmpsb
adc
mov
leave
dec
mov
mov
popa
mov
in
addr16
pop
scas
es
test
dec
mov
call
jne
mov
test
adc
les
shlb
pop
addr16
pop
lcall
clc
fildl
mov
call
iret
out
dec
dec
insb
mov
arpl
ds
dec
xor
cmp
nop
push
push
push
int
out
dec
rcr
xor
dec
lcall
dec
roll
jp
js
loope
in
rorb
scas
cmp
shlb
jmp
ja
cmpsb
cmp
cmp
sbb
popf
fwait
ret
pop
sbb
js
movsl
lock
push
or
inc
push
es
ret
mov
test
inc
fwait
inc
jmp
fdivrs
xlat
push
jecxz
jbe
aad
lods
test
shlb
cmc
mov
leave
mov
aad
add
out
push
jno
dec
arpl
cmpsb
xchg
pop
xchg
push
repnz
mov
mov
cmp
xchg
adc
in
adc
dec
jo
lea
lods
xchg
lcall
sbb
imul
fidivrl
or
rol
lock
mov
push
imul
or
sbb
cmpsb
sarl
or
icebp
xchg
mov
test
mov
mov
or
es
xchg
fwait
sahf
cmp
testl
lock
pop
jno
cmc
dec
mov
add
inc
out
push
cmp
les
mov
mov
push
sub
pop
mov
das
repz
adc
sbb
mov
adc
mov
cmp
lock
stos
ret
mov
cmp
pop
cld
mov
dec
mov
jno
push
push
aas
divb
xor
xchg
sub
inc
and
jbe
mov
repz
pop
inc
shrl
and
in
aas
int3
shll
incb
inc
push
and
daa
push
leave
addb
add
lds
inc
les
fldenv
push
push
out
call
push
addr16
jg
or
jns
sub
lds
push
pop
mov
into
and
mov
shlb
mov
addr16
mov
pop
cmc
add
pushf
lods
inc
xchg
mull
js
shlb
dec
inc
out
clc
inc
jns
in
mov
insb
pop
jecxz
mov
mov
sahf
rcll
fstl
gs
lock
jbe
dec
aad
jns
xor
int
loopne
test
push
dec
ret
fildll
stc
xchg
aas
mov
aaa
ss
adc
xchg
aad
mov
pop
rcr
gs
rol
adc
mov
aam
pop
xchg
mov
icebp
fcomps
lcall
enter
mov
callw
out
inc
sbb
cltd
out
bsr
bound
pop
ret
mov
or
fcomp
xchg
xchg
cmp
dec
repnz
sub
out
push
mov
test
scas
lret
adc
aam
add
cmp
jg
inc
jl
in
mov
in
push
stos
mov
out
jmp
fildll
icebp
mov
sbb
shll
test
mov
mov
movsb
pop
inc
cli
push
mov
stc
lds
sahf
xor
sbb
out
pop
gs
bound
rcrl
bound
inc
insb
cmp
sbb
push
int3
mov
inc
or
loopne
xor
inc
lea
or
shrl
mov
inc
sahf
jl
lock
or
cs
xchg
out
cmp
ja
mov
jmp
jbe
cmpsb
test
rcrb
leave
loop
ds
js
shlb
nop
and
xchg
fcompl
or
in
roll
mov
jo
rcr
lds
fcomps
jnp
fs
mov
outsb
pushf
jmp
or
gs
hlt
pop
mov
frstor
repnz
nop
test
push
call
callw
inc
data16
out
enter
xlat
loope
imul
fld
jo
out
or
inc
inc
dec
out
ret
add
pop
or
jp
call
es
or
adc
test
jbe
mov
outsl
in
and
int3
ja
loope
xchg
jecxz
dec
or
outsb
test
leave
cmpsb
lahf
cmpsb
mov
adc
das
mov
lret
ja
rorl
push
sub
into
fidivl
rcll
test
nop
testl
in
sbb
mov
push
je
inc
push
pop
into
dec
roll
jmp
jbe
mov
ds
iret
gs
pushf
xchg
ss
push
mov
cmpsb
pop
jbe
fsubl
fistl
rorb
sti
adc
ret
sub
daa
loop
les
dec
add
mov
inc
gs
or
lahf
dec
or
cmpsb
lds
cs
in
sbb
sarb
iret
cld
xor
push
out
lock
sub
mov
push
pop
shl
fcomi
push
xchg
shlb
lock
mov
xchg
add
push
mov
into
das
sub
movsb
sub
inc
push
shlb
js
ja
enter
aas
xor
rclb
out
popa
xchg
sbb
cli
outsb
fisttpl
jo
push
repz
pop
in
orl
daa
hlt
ds
adc
and
cmc
adc
subl
sub
jno
enter
shlb
call
imul
out
iret
push
push
ja
cmp
pop
xchg
test
push
mov
dec
lods
aas
fidivl
imul
add
adc
jle
daa
mov
xchg
xorl
lock
popa
inc
fs
sub
pop
and
xchg
adc
cmp
iret
sub
shlb
dec
sub
lds
mov
sub
stos
cs
add
leave
out
roll
push
mov
add
mov
daa
into
lea
lahf
fsts
mov
mov
stos
out
sbb
fstps
ret
sahf
das
sub
lea
lods
arpl
xor
out
adc
ja
gs
repz
mov
test
pusha
dec
mov
daa
xor
loop
rclb
imul
mov
ret
lods
or
movq
push
inc
pop
adc
jb
ss
rorl
xchg
ja
es
pop
int
mov
repz
xor
ljmp
ss
cmp
pop
shrb
out
iret
and
fsubr
int
xchg
mov
shlb
rclb
inc
adc
adc
cltd
push
mov
shr
push
scas
push
sub
lds
mov
aaa
fs
jae
or
inc
in
ret
loope
push
adc
mov
in
cld
pushf
int3
outsb
add
pop
loope
rcl
ret
lock
out
or
fisubrl
lret
ret
mov
rorl
dec
ds
test
fisubrl
rcrl
add
movsb
js
out
sub
pop
jge
xlat
std
les
adc
jnp
mov
xchg
mov
repnz
ror
push
cmpsl
mov
out
mov
sub
fidivs
jg
mov
aas
adc
inc
jg
pop
add
push
push
js
fnstsw
jnp
jnp
ret
lds
test
cld
cmpsb
test
imul
adc
xchg
pop
mov
push
insb
pusha
add
push
xor
js
add
call
add
push
jmp
test
xchg
int
or
aad
sub
insb
pusha
xor
es
pop
jno
mov
andl
hlt
mov
int3
pop
push
emms
loop
cmpsl
inc
push
add
cmpsl
cld
sbb
lcall
test
inc
cltd
cmpsb
xlat
lret
mov
shlb
data16
mov
push
mov
lret
lret
inc
add
push
cmpsl
dec
mov
dec
cmpsl
mov
jmp
xlat
ljmp
cmpsl
mov
push
inc
imul
int
shlb
stos
xchg
lahf
inc
inc
aad
aaa
mov
and
inc
cmpsl
ds
mov
push
lods
dec
dec
mov
sub
pushf
mov
std
push
fidivs
int3
repz
fwait
es
inc
jecxz
cmpsl
mov
sbbl
and
es
cmpsl
xchg
or
insb
pop
cmpsl
and
mov
xchg
movb
mov
mov
cmpsl
test
pop
std
and
inc
jae
dec
fadd
sub
add
cmp
cmpsl
adc
test
insl
cmpsl
adc
sub
pop
insb
cmpsl
popf
ret
les
push
mov
jnp
lods
ss
and
add
xor
push
jg
xor
repnz
mov
xor
cmpsl
jmp
movsb
imul
rolb
push
jg
movsl
ljmp
neg
rolb
bound
scas
cmpsl
cld
nop
mov
ss
pop
sub
pop
cs
mov
sti
mov
aam
push
rorl
int
aad
mov
or
ficoms
sub
int3
mov
mov
cld
cmp
pop
add
rcl
mov
sbb
lods
jae
push
cmpsl
xchg
test
mov
cmpsl
xchg
sub
adc
or
cmpsl
sbb
lods
mov
lret
jle
in
inc
mov
mov
push
dec
scas
mov
sbb
movsl
mov
pop
push
scas
sub
insl
decb
mov
push
push
cmpsl
loop
aaa
lret
lahf
and
push
dec
mov
mov
pop
cs
inc
cmpsl
aad
js,pt
imul
and
rcll
cltd
inc
xor
cmc
enter
jge
pop
test
cmpsl
xchg
sub
fsubrs
cwtl
faddl
mov
jecxz
or
cmpsl
popa
jl
add
cmpsl
fcomi
mov
xchg
cmpsl
push
xchg
add
mov
in
clc
in
aam
rorl
jae
in
cmpsl
notl
sub
popa
clc
xchg
mov
jo
jbe
pop
jae
int3
jecxz
mov
mov
icebp
mov
dec
adc
mov
pop
xor
push
mov
dec
scas
jmp
test
push
pusha
int3
lock
cmpsl
or
sahf
fimull
cmpsl
int
loopne
rolb
hlt
sub
adc
into
jl
out
pop
cmpsl
pop
or
fsubl
adc
jmp
cmpsb
clc
jle
mov
scas
icebp
and
pushf
or
loope
jno
cmpsl
mov
loopne
scas
js
sbb
pop
popf
push
pushf
int3
idivl
sub
aad
outsl
cmpsl
mov
jbe
iret
cmpsl
insb
dec
push
test
outsb
repnz
std
add
int3
cmp
push
sub
cmpsl
arpl
mov
push
js
cmpsl
dec
inc
dec
push
mov
xchg
fnstenv
mov
subb
mov
push
pop
stos
or
push
xchg
push
jmp
shr
mov
pop
cmpsl
jmp
or
jecxz
fs
mov
or
int3
mov
js
andb
mov
xchg
inc
js
and
shr
loop
cltd
lcall
dec
test
shl
dec
daa
imul
add
add
jb
shrl
bnd
orl
ds
push
inc
xchg
cmp
pop
imul
xlat
cmpsl
ds
sbb
inc
xchg
lds
lock
add
sbb
rcl
leave
cmpsl
inc
test
mov
xor
fwait
cmpsl
or
mov
shll
loope
fnsave
out
ljmp
cmpsl
rorl
lret
push
add
mov
cmpsl
push
scas
mov
cmp
lods
pop
shl
cs
jns
cmpsb
cmpsl
jl
cmp
mov
aad
mov
inc
xchg
rclb
cli
cmpsl
xor
add
add
loopne
fidivrl
pop
adc
cmpsl
sub
mov
jbe
lret
popf
and
jge
sahf
ret
xor
ficompl
out
cmpsl
sbb
xor
aas
inc
test
ljmp
pop
cmpsb
outsb
leave
out
cmpsl
mov
in
mov
and
pop
rorl
adc
stc
sub
je
shlb
jecxz
cltd
gs
cli
cmpsl
pusha
cmp
adc
jne
repnz
pop
push
je
imul
rcll
mov
and
pushf
pop
mov
push
test
push
aaa
cmpsl
mov
xor
lar
mov
push
push
lds
mov
push
adc
xor
in
sub
pop
movsb
jbe
push
cmp
xchg
cmpsl
imul
lret
loopne
int3
cmpsl
imul
mov
sub
int3
mov
aaa
dec
gs
mov
mov
cmc
pop
arpl
xrelease
xchg
test
in
roll
and
mov
ljmp
xor
cli
jno
adc
mov
pop
pop
cmpsl
gs
push
test
mov
sbb
loopne
out
push
aam
jle
mov
mov
cmp
sub
in
mov
mov
repnz
push
popf
fildll
and
cmpsl
push
cmp
xchg
clc
jo
xchg
and
rorl
pop
lret
out
dec
dec
aam
pop
in
mov
cmpsl
push
push
bound
jns
int3
test
adc
bnd
xchg
mov
adc
pop
hlt
lcall
cmc
mov
xor
int
mov
and
mov
stos
jb
xchg
lret
or
es
insl
in
cmpsl
push
arpl
imul
pop
and
mov
mov
xchg
jl
clc
cmp
jb
xor
cmp
jae
and
dec
cmpsb
lods
data16
scas
aad
pop
add
mov
loope
push
mov
jecxz
cmpsl
push
sbb
adc
xchg
jb
pop
addr16
fisubrs
in
dec
lahf
lcall
or
pop
int
xchg
adc
mov
sbb
cmpsl
scas
sti
bound
push
fiadds
mov
push
push
cmpsl
cmp
test
dec
cmpsl
cld
pop
orl
hlt
sarb
lods
loopne
mov
mov
mov
cmpsl
xor
dec
add
jge
cmpsl
stc
adc
mov
add
xorl
cmpsl
out
outsb
mov
cmpsl
jl
mov
or
inc
xchg
inc
cmpsl
add
cld
push
dec
cmpsl
inc
jno
fcmovbe
cmp
cmpsl
xchg
sbb
pop
mov
cmpsl
push
cmp
fidivrl
cmpsl
negl
mov
add
jl
sub
movsb
cmpsl
push
mov
insl
xchg
testl
les
xchg
adc
cmpb
pusha
aas
scas
or
gs
stos
sahf
sub
cmpsl
fisubrs
mov
fmull
nop
int3
stos
mov
int3
push
adc
inc
xchg
or
js
xchg
sbb
cmpsl
repz
xchg
xchg
decb
push
mov
leave
mov
rorb
test
aaa
shll
ja
push
sub
inc
jmp
clc
xchg
ss
rclb
call
mov
ret
ja
fwait
push
sub
mov
adc
ss
sub
mov
cmpsl
repz
mov
fnstenv
adc
stos
lret
iret
shlb
out
mov
popf
add
iret
ss
and
mov
dec
sub
push
push
seta
mov
lret
loope
std
roll
fs
sbb
mov
inc
lds
xchg
dec
push
sbb
ja
xor
pop
sbb
push
bound
les
mov
pop
loopne
push
mov
xchg
leave
les
lds
jbe
lods
mov
xor
cmp
xor
out
sahf
mov
das
sub
push
mov
push
in
dec
stc
ds
int3
mov
mov
idiv
jnp
jle
pop
pop
loope
cwtl
jno
lahf
xchg
fstpt
mov
dec
movsl
and
imul
cmp
cld
es
imul
fdivl
xor
pop
jns
pop
cli
inc
test
jnp
or
and
mov
ss
in
jg
out
movb
adc
lret
imul
mov
pop
ja
pop
xor
inc
adc
sbb
leave
lret
stos
scas
lcall
orl
lret
lcall
mov
mov
orl
mov
ja
sbb
mov
rol
mov
cs
xchg
ret
popf
das
push
lods
lods
xchg
mov
inc
fwait
or
loope
and
and
cmpl
loop
aam
sbb
stos
xor
ljmp
xor
call
sub
mov
jo
in
xchg
cmpsb
shrl
adc
gs
push
mov
inc
lea
aaa
cltd
stos
lea
xchg
sub
bound
in
iret
mov
pushf
stos
or
mov
cld
jne
pushf
cmp
xabort
cs
in
or
movsl
cmpsb
shll
iret
adc
mov
mov
loope
cs
dec
movsl
mov
xchg
xor
popa
dec
cmp
in
inc
sbb
xlat
imul
idiv
or
lret
push
cmpsl
xor
and
fstpt
pop
das
adc
insl
xchg
lods
jno
adc
cmp
iret
stos
mov
push
das
xor
pop
push
testb
or
xchg
scas
repnz
sbb
clc
cld
lock
adc
and
in
push
pushl
and
int
cmpsl
outsl
repz
fldt
mov
inc
pop
dec
jae
bound
dec
cmpsl
lahf
insb
test
add
lret
gs
es
adc
cmp
repz
add
movsl
dec
cmpsl
sub
xor
enter
jb
sub
cmpsl
mov
dec
mov
inc
dec
es
sbb
rcll
push
cmc
jmp
cwtl
jnp
sbb
mov
mov
mov
cmp
cmc
lret
sub
cmp
shr
xchg
cmp
xchg
xchg
in
mulb
test
out
inc
ficoml
mov
mov
add
loop
cmpsl
mov
mov
mov
cmp
mov
pop
insl
xchg
inc
rorl
cmp
xor
or
jns
cmp
sub
out
leave
cmpsl
pop
arpl
int3
adc
cmpsl
inc
xor
inc
cmpsl
lcall
dec
sahf
mov
daa
aam
test
test
dec
xor
rcl
pop
sbb
rcrl
pop
cmpsb
cmpsb
scas
mov
mov
mov
cmp
adc
cmpsl
rcrb
xchg
stc
ds
cmpsl
jo
icebp
or
sahf
dec
pop
mov
shlb
lods
das
andl
dec
cmpsl
int
in
inc
push
call
or
jge
gs
sbb
or
push
iret
cmpsl
imul
xorb
dec
int3
add
lret
jl
cmp
clc
jge
xchg
push
insb
ljmp
mov
cld
add
dec
mov
shl
xchg
pop
decb
push
cli
lcall
and
add
sub
cmc
int
dec
and
les
inc
int3
pusha
cmp
and
enter
lcall
cmpsl
fiadds
divl
adc
pop
xchg
pcmpeqw
cmpsl
popa
mov
aaa
pop
jnp
cmpsl
jo
add
jl
mov
shrl
daa
mov
jae
add
cmpsl
xchg
push
push
leave
and
mov
fnsave
cmpsb
or
in
cmpsl
ljmp
cmpsb
cmpsl
out
add
mov
test
aaa
sub
cmpsl
ljmp
push
cmpsl
xchg
jl
out
fnstenv
and
cmc
xor
pop
push
sub
in
mov
pop
call
dec
cmpsl
xor
in
outsb
stos
cld
cmpsl
sti
cmc
cli
ja
popf
sub
dec
call
pop
cmp
xor
cmpsl
loop
cs
jecxz
xor
cmpsl
arpl
inc
in
pusha
cli
cmpsl
xor
pop
lods
das
dec
mov
xor
cmpsl
or
pop
insl
cwtl
cmp
gs
sbb
inc
push
jmp
stc
mov
mov
cmc
xor
mull
hlt
mov
xchg
das
or
outsl
inc
sahf
push
cltd
int
cmpsl
cs
mov
xchg
leave
cmpsl
aad
loope
gs
in
pop
cmpsl
pop
in
xlat
cld
and
mov
mov
fldt
sub
jno
cmpsl
adc
fdivp
push
sahf
cmp
incl
inc
call
loopne
push
mov
inc
mov
outsl
pop
push
dec
mov
mov
aam
cmpsl
pop
xor
popf
ss
mov
push
mov
fisubl
arpl
std
lret
or
push
push
jg
stos
pushw
movsl
jmp
sub
pop
shll
mov
clc
dec
gs
out
dec
in
and
inc
sbb
into
adc
cld
dec
xchg
xchg
repz
dec
ret
xlat
jne
jb
push
xor
ret
and
gs
jmp
mov
loopne
arpl
scas
imul
inc
or
push
mov
adc
cmpl
xchg
pop
xchg
xchg
push
or
call
xchg
mov
sbb
ja
ret
mov
scas
into
movsb
mov
movsl
mov
xor
clc
mov
sbb
and
fcomi
rcll
cmpsl
in
scas
pusha
gs
mov
pop
mov
mov
mov
xchg
cld
add
xchg
jnp
loop
gs
bound
and
dec
clc
mov
lods
fwait
stos
inc
ljmp
mov
ljmp
jge
xchg
jecxz
add
loope
fs
pushl
push
jb
xchg
adc
cmp
sub
pop
xchg
add
push
jno
pop
sub
mov
jbe
ret
mov
repnz
ja
inc
lods
mov
dec
sarl
xchg
pop
dec
in
pop
sub
test
imul
lea
nop
jge
imul
jno
aam
mov
cmp
sahf
xchg
sub
lods
jecxz
pop
mov
xchg
mov
cmp
jnp
nop
rclb
imul
into
inc
leave
add
imul
adcb
inc
or
syscall
xchg
fcomi
movl
adc
or
or
mov
xor
inc
xchg
adc
xchg
bound
cmp
pop
roll
or
sbb
aad
xchg
jmp
push
popa
dec
dec
mov
ds
daa
jnp
es
dec
das
jns
les
mov
decl
test
push
out
int3
cmp
or
bound
sub
pop
cmp
dec
mov
jl
push
aad
xor
pop
arpl
sub
ss
sbb
insb
popl
mov
and
scas
pushf
mov
inc
scas
inc
add
ret
inc
nop
iret
cmp
push
rclb
in
xchg
shr
mov
push
push
cmc
insb
fistpl
stos
arpl
xchg
insl
adc
cmpsl
stos
sahf
lret
loop
or
cmpsl
jle
daa
push
mov
dec
mov
pop
mov
loope
mov
int
shlb
or
pop
sahf
add
ja
xchg
pushf
jo
cmpsl
stc
fdiv
adc
sub
pop
jmp
xchg
pop
pop
cmc
shlb
xorl
xchg
cmpsb
xchg
jns
cs
ja
pop
sbb
lret
mov
cmp
pop
push
xor
and
push
push
push
nop
ret
push
ds
mov
xchg
inc
dec
and
push
out
cmp
sub
sub
jbe
loope
pop
xlat
cmp
fidivrl
jbe
mov
dec
iret
push
mov
pop
pop
mov
lret
aad
mov
fildll
push
mov
xchg
out
fwait
dec
pusha
iret
push
repz
pop
ja
add
pop
dec
ljmp
xchg
lock
sub
push
pop
sub
arpl
pop
rorl
test
mov
sbb
jno
jmp
out
cmp
dec
mov
cwtl
outsb
or
push
fcoms
scas
hlt
int
rol
sahf
aad
adc
pop
mov
mov
push
ja
pop
dec
cli
mov
lods
insb
fwait
jns
in
dec
outsl
mov
test
int3
lret
insb
mov
jns
jbe
push
and
loopne
repz
xchg
lds
in
sahf
add
and
mov
inc
or
push
mov
push
daa
mov
add
cltd
mov
mov
sub
repz
push
fs
pushf
out
mov
popf
idiv
movsb
insb
dec
pop
orl
divb
jb
inc
push
sub
fstpt
push
lcall
sub
and
sbb
ja
jle
mov
insl
stc
push
push
mov
pop
gs
sub
xchg
mov
pop
mov
ret
jecxz
ss
xor
aad
sub
sahf
aad
popa
or
pushf
dec
xor
lcall
xor
cmp
jae
pop
andl
jbe
xchg
jns
loop
test
lods
mov
repnz
int3
cmpsb
jno
pop
jbe
or
push
lock
faddl
inc
ja
push
mov
jnp
xor
out
jg
push
cmp
iret
popa
es
ja
push
cmp
sub
cmp
xchg
xchg
xchg
mov
mov
push
or
lahf
pop
nop
adc
icebp
push
and
loope,pn
push
push
jmp
shlb
insb
ja
or
aam
fstps
push
pusha
movsl
mov
stos
pop
gs
in
mov
sub
shll
cltd
arpl
js
and
cmp
mov
mov
mov
and
jle
cli
out
rol
push
mov
adc
push
ss
test
xchg
xchg
not
daa
ljmp
stos
movsb
gs
std
loop
mov
pop
pop
mov
cmc
roll
push
push
adc
push
mov
cmpsl
pop
mov
loope
xchg
mov
cwtl
jmp
xlat
cmp
cmp
lret
mov
jp
cld
leave
out
sub
gs
jecxz
xor
out
dec
rolb
out
ds
cmp
aas
jbe
das
push
xor
test
ja
fwait
aam
and
fcomps
mov
mov
push
js
xchg
cmp
mov
xor
lcall
and
push
loop
mov
xlat
aad
fisubl
je
cmp
es
in
fwait
aad
ja
push
push
cmp
mov
fs
nop
mov
shr
pop
mov
ja
mov
in
jno
ljmp
imul
dec
mov
pop
mov
inc
js
shrb
stos
cmpsb
push
adc
adc
cmpsb
cmp
loope
and
push
ja
insl
test
int3
shrb
out
aas
dec
pop
mov
iret
push
mov
bound
mov
stc
xlat
repnz
scas
mov
or
int3
jmp
sarl
lods
mov
xchg
lods
shl
xor
ficompl
in
popa
lods
sbb
mul
mov
push
and
inc
mov
dec
dec
outsb
xchg
push
iret
outsl
lods
jp
adc
dec
add
jecxz
les
fdiv
js
sub
sti
sahf
adc
ror
pop
jmp
mov
iret
inc
enter
out
in
push
jecxz
inc
add
aam
or
sbb
mov
aad
push
repnz
push
inc
pop
mov
cmpsl
pop
xchg
addr16
lret
pop
mov
dec
test
adc
loope
mov
out
mov
mov
frstor
xor
ljmp
gs
mov
pusha
cmpsl
int3
stc
sbb
mov
xchg
jno
mov
sbb
mov
jbe
mov
push
xor
dec
lds
out
jbe
cs
jnp
iret
push
push
imul
mov
xor
mov
jg
pop
loop
pop
ficoml
rclb
adc
arpl
xor
lret
jae
fidivs
push
into
decb
sbb
jbe
ljmp
mov
jae
test
sahf
outsl
and
xor
int3
std
xchg
cmpsl
add
inc
ja
adc
inc
mov
push
in
inc
or
cld
ja
incb
lds
dec
pop
mov
sbb
data16
push
flds
aam
pop
fidivrs
fstl
int3
fstpt
mov
mov
mov
in
dec
dec
pop
roll
movsb
mov
mov
das
in
popf
inc
xor
dec
sub
jne
lret
in
in
lcall
or
js
fprem
sahf
inc
xchg
sub
lds
sub
mov
add
mov
lods
and
mov
xchg
inc
push
xchg
xchg
xor
fisttpll
ds
and
aad
rclb
mov
test
jbe
sbb
inc
loopne
mov
mov
mov
pusha
add
or
inc
inc
fiadds
inc
movsb
and
cmp
jno
xchg
imul
shr
jbe
and
fsubrs
test
fs
std
out
icebp
mov
gs
data16
aaa
mov
std
jo
sub
mov
imul
es
aas
push
xchg
std
std
cmp
outsb
push
jb
xlat
aaa
pop
mov
nop
mov
in
rcrb
dec
lds
shll
das
popf
pop
mov
mov
idivl
out
or
sub
cmp
xchg
mov
inc
sub
adc
push
xor
test
dec
mov
dec
pop
lock
mov
mov
test
xchg
pop
sbb
xchg
cmpsl
lret
sub
mov
sub
cmpsl
out
loop
fmul
sbb
push
lcall
mov
aas
jbe
dec
mov
pop
popa
inc
mov
add
ja
fwait
cmp
cmpsl
add
frstor
mov
mov
ljmp
push
es
xorl
xor
dec
inc
mov
pushf
loope
nop
gs
scas
cmpsl
push
sbb
push
dec
int3
or
cmp
lret
test
dec
into
mov
inc
dec
lahf
mov
cmp
mov
fcoms
pop
cmpsl
sahf
sbb
jmp
mov
cmp
add
cli
or
xor
loop
inc
add
inc
andb
inc
cmpsl
mov
fcoml
test
subb
sub
add
jne
mov
outsl
dec
cmpsl
test
adc
mov
inc
shr
loope
push
outsb
dec
cmpsl
mov
cmpsb
xlat
sbb
call
inc
mov
cmp
stc
jg
xlat
xchg
leave
sub
push
push
jbe
add
adc
mov
inc
cmpb
cmpsl
push
inc
pop
inc
mov
cmp
mov
jbe
mov
fsub
cmp
subb
shrb
jns
cmc
inc
outsl
sub
scas
pop
jo
imul
cmpsl
push
jmp
insl
mov
insb
mov
outsl
pop
jecxz
mov
inc
push
ret
aas
mov
mov
hlt
add
cmpsb
les
in
jmp
lods
cmpsb
xchg
dec
mov
in
call
sarb
jl
enter
inc
test
jo
loopne
aad
iret
dec
dec
push
cmp
outsl
xchg
fistpll
jl
stos
or
test
idivl
cmp
mov
cmpsl
pop
or
mov
sarl
inc
cmpsl
out
ljmp
roll
mov
aas
xchg
mov
add
mov
fcoml
inc
cmp
jmp
addr16
mov
adc
movsb
pop
imul
or
xchg
mov
loope
add
aad
loopne
jg
cmpsl
pop
or
cmpsl
sub
add
les
push
cmpsb
sbb
loope
jae
test
push
mov
mov
imul
jl
dec
mov
cmpsl
jne
mov
pushf
es
imulb
es
lods
pop
pop
repnz
iret
jnp
cmpsb
cli
ja
mov
stc
popa
fldenv
and
cmp
stos
jge
or
das
jae
addb
dec
outsl
ret
pop
cmp
mov
push
mov
fldl
pop
dec
cmp
cli
mov
pop
rcr
rol
pop
push
ja
mov
idivb
outsl
push
dec
das
out
push
pop
fstps
ret
xchg
jno
outsl
mov
cmp
fnstcw
loopne
xor
icebp
sub
mov
in
les
sti
fidivs
mov
stc
push
rol
cmc
inc
bound
cmpsl
in
out
push
jae
push
cmp
mov
adc
jle
ret
and
shlb
jmp
jns
xor
adc
pop
lcall
or
lcall
xchg
xorb
ljmp
int3
mov
adc
jge
fnstcw
ret
sub
ja
add
cmp
sarl
fisttpll
adc
cli
sub
movsl
xor
cmpsl
popa
lcall
cmpsl
mov
mov
xor
jo
push
jp
out
jmp
lret
mov
xchg
popf
adc
addr16
clc
adc
and
cmpb
add
mov
xchg
repz
dec
inc
cmpsl
addl
and
hlt
lret
push
cmpsl
add
arpl
xchg
mov
jne
cmpsb
rclb
dec
fmul
lods
add
lock
aaa
loope
dec
cmpsl
add
insl
mov
cmpsl
mov
loop
push
pop
mov
testb
test
mov
xor
cmpsl
cmp
aas
imull
and
cmpsl
cwtl
jne
ja
xor
ret
fnstenv
lret
cmp
xlat
ror
add
adc
into
mov
cmpsb
sbb
iret
inc
roll
sbb
mov
fstpl
dec
pop
loop
ss
dec
pop
ret
mov
jne
test
xchg
push
jmp
cmpsl
imul
jecxz
shrl
pusha
cmpsl
adc
sbb
cld
in
mov
loop
es
add
xor
pop
pop
sahf
fadds
cmpsl
push
mov
ja
lods
xchg
into
les
andb
and
fsubl
loop
mov
bound
mov
pop
outsl
jae
and
and
imul
inc
cmpsl
and
mov
mov
or
es
cmp
xlat
add
pusha
cmpsb
sbb
in
movsb
mov
cltd
sti
mov
imul
into
push
xchg
cmpsl
in
or
roll
pop
aas
vshufps
pop
cmpb
sbb
jnp
inc
jp
out
fs
std
cmpsl
cwtl
sub
xor
adc
fwait
xchg
rorb
repnz
cmpl
mov
xchg
cmpsl
movsb
jecxz
mov
push
fstpl
jno
loop
rorb
fs
cmpsl
adc
in
add
aas
adc
test
cmc
or
pusha
lcall
icebp
jmp
pushf
fdivr
cmpsb
scas
popf
in
adc
js
cmp
push
loop
pop
daa
cltd
jbe
and
mov
shll
cmpsl
xor
sub
push
inc
mov
cmp
sub
ret
xchg
pop
inc
stos
inc
cmpsl
jbe
or
insb
adc
dec
jns
je
stos
mov
ret
xor
cltd
push
add
inc
cmpsl
adc
jne
and
ret
movsb
cmp
sbbl
jle
push
mov
add
cmpsb
inc
push
mov
xchg
lds
add
cmp
jge
dec
cmp
cmpsl
add
jg
cmpsl
ret
inc
push
sbb
lret
dec
ljmp
int3
cld
cmpsb
mov
mov
repnz
sbb
mov
test
bound
cmc
mov
pop
mov
add
cmpb
fisttpl
ds
addr16
ja
insl
pop
insb
out
int3
sbb
xchg
rclb
aam
sti
or
sbb
adc
rorl
push
imul
mov
mov
out
test
adc
and
clc
cmc
jb
jl
ret
inc
stc
cmpsl
adc
loope
sbb
fcmove
outsl
push
fistpll
out
xor
std
cmpsl
or
int
and
loope
roll
cmpsl
fistl
cmpsl
icebp
or
dec
sub
jmp
xchg
mov
mov
mov
inc
repz
sbb
outsb
and
jl
add
js
xchg
jb
out
cmp
cmpsb
sarb
ffreep
ljmp
xlat
test
aam
popa
push
cli
cmpsb
imul
mov
cmp
outsb
xor
iret
adc
cmpsl
das
inc
dec
addr16
sti
mov
sbb
adc
push
ret
rorl
int
cmpsl
push
cmp
cmp
aad
mov
mov
sub
fcoml
loop
ss
dec
cmpsl
dec
and
pop
push
loope
mov
je
mov
pop
mov
xchg
mov
aam
and
push
in
loopne
sbb
lods
int3
es
or
push
int3
loop
mov
mov
cmp
cmp
int3
jno
xor
testl
and
adc
mov
pop
cmpsl
sub
sub
sbb
fdivl
rcrl
mov
jg
fbld
aaa
cmpsl
call
adc
mov
ret
pushf
cmc
data16
cmpsl
and
sub
popf
movsb
xor
sbb
xchg
push
sub
cmpsl
or
cmpsl
and
xchg
mov
mov
repnz
or
testb
ret
ljmp
or
mov
jmp
mov
ret
pop
mov
outsb
mov
lahf
out
jb
test
divb
sbb
int3
mov
mov
cmpsl
mov
add
jno
aad
push
dec
dec
sbb
inc
cmpsw
adc
loopne
es
enter
cmpsl
and
push
inc
adc
pop
loopne
test
mov
jne
dec
jl
mov
fldenv
xorl
xchg
lods
mov
lea
xchg
cmp
inc
loop
xchg
cmp
xlat
inc
ja
cmpsl
sbb
in
cmp
mov
mov
inc
lcall
cmpsb
mov
cmpsl
inc
push
sub
xchg
insl
sub
or
es
xchg
cmc
jns
dec
cmp
arpl
mov
cmp
cmc
frstor
ds
adc
leave
dec
dec
cmp
mov
cmp
cmpsb
jo
sbb
enter
cmpsl
cmova
pushf
jae
and
xchg
loop
repz
bound
jbe
or
ret
aad
cmpsl
in
sub
adc
or
mov
pushf
push
insb
sub
mov
adc
ss
stos
cmp
ss
fstl
and
cwtl
xor
cmpsb
loop
loopne
cmpsl
fs
fcomps
and
and
pushf
pop
cmpl
fldenv
cltd
sbb
xor
push
add
test
loope
hlt
xchg
int3
cmp
mov
xlat
or
pusha
dec
movsl
xor
or
cmpsb
ss
fcmovnb
gs
mov
dec
shl
call
xchg
loopne
mov
test
andb
or
sbb
jns
dec
cmpsl
stos
sbb
sub
out
pop
and
jmp
mov
push
and
mov
cmpsl
test
dec
mov
jl
inc
adc
or
add
ja
test
jae
mov
jle
orl
and
add
cmpsl
xchg
lods
insl
push
jae
addr16
dec
mov
cmpsl
rorl
sahf
xchg
pop
shll
aad
ss
pop
imul
cmpsb
out
pop
adc
cmpsl
mov
adcl
lods
rcll
cmpsl
je
test
in
xchg
mov
decb
mov
ds
mov
aaa
cli
data16
mov
sub
sub
mov
push
dec
jae
cmpsl
xchg
cmp
dec
or
cmpsl
dec
sbb
jecxz
add
out
lods
mov
in
movsb
inc
and
daa
mov
out
imul
mov
push
inc
movsl
push
inc
rcrb
into
mov
dec
jl
mov
mov
cmc
imul
jg
xor
or
mov
jecxz
add
sbb
mov
mov
insl
mov
sbb
xor
sub
jle
push
out
dec
lds
cmpsb
and
lds
fistpll
xor
jecxz
add
cmpsl
push
and
and
push
out
rcrl
adc
inc
dec
jnp
mov
es
fisubrs
lock
sub
mov
jg
ja
lret
sbb
dec
ffreep
pop
xor
jg
and
jle
rol
vmovaps
out
outsl
push
mov
fidivl
cmp
mov
sub
insb
add
xchg
out
call
push
push
mov
lock
sbb
call
xor
adc
es
and
dec
jmp
hlt
sbb
out
mov
xor
xor
cs
mov
pushf
jle
fbld
lret
pop
es
and
push
sbb
ja
xor
jl
outsl
xor
lret
inc
popa
lret
push
out
in
out
ds
pop
xor
test
mov
out
jo
sub
ss
jecxz
sbbl
leave
out
sbb
out
mov
push
xor
cs
mov
gs
fsubp
mov
and
sbb
out
xor
xor
cmp
sbb
mov
dec
es
enter
mov
or
rcrl
inc
inc
std
out
sti
jno
and
out
sbb
out
pop
xor
sub
inc
icebp
gs
push
or
and
mov
push
sbb
iret
xchg
dec
les
and
and
fsts
out
inc
sbb
std
sbb
add
push
aam
mov
xor
xor
sub
cmpsb
aas
cmp
int
inc
inc
cmp
jnp
pop
xor
cmpsl
jmp
cwtl
subb
jg
and
sbb
and
or
dec
sbb
mov
xlat
push
addr16
mov
dec
add
out
into
aas
and
and
repz
pop
push
pop
push
xor
loope
mov
frstor
nop
popa
incb
mov
adc
ret
cmp
mov
sbb
lahf
out
push
les
cmp
mov
ss
lcall
and
rclb
lock
aas
xor
dec
inc
jecxz
les
or
push
pop
xor
or
sbb
inc
push
xor
fidivs
lds
outsb
cli
loop
jbe
sub
sbb
addr16
insl
xchg
sub
sub
fimuls
sub
js
stos
bound
in
mov
arpl
mov
and
and
add
mov
in
ss
adc
sub
push
stc
mov
xchg
stos
and
in
and
leave
push
adc
ds
fwait
and
add
push
and
push
sub
dec
jne
mov
lods
ss
xor
cmpsl
jb
aad
and
jnp
xchg
imul
and
push
movb
push
cmp
in
and
gs
ja
xor
mov
repz
in
sub
xchg
int
das
lret
and
frstor
add
ljmp
mov
cs
pop
push
pop
out
mov
in
call
mov
mov
push
cld
outsl
dec
cmpsb
adc
xor
xor
aaa
out
ljmp
sub
sub
push
les
and
lds
push
xchg
inc
inc
and
xor
inc
adc
push
cmpsl
bt
push
inc
push
stc
push
stc
push
shld
mov
movsbl
not
not
rol
mov
neg
adc
cmp
sbb
mov
add
add
xor
push
lods
adc
pushf
inc
shr
sub
pushf
pusha
bt
cmc
rol
add
not
sar
xor
sub
setp
rol
rcl
sub
pushf
xor
cmc
sub
pushf
not
stc
sub
pushf
stos
call
pop
xor
fmull
and
stos
add
out
push
mov
sbb
or
pusha
sti
aam
cwtl
cmp
cltd
and
adc
les
sbb
push
jl
adc
adc
stos
jae
xchg
ja
ret
inc
push
and
inc
sahf
notl
shl
pop
fs
mov
aaa
push
xadd
outsb
jns
pop
xor
mov
xchg
scas
mov
imul
xchg
sbb
and
jbe
stos
call
imul
cmc
and
sub
sar
and
ror
int3
lods
lods
stos
xchg
push
popa
aaa
and
mov
xchg
adc
jo
mov
iret
sub
daa
cltd
and
subl
icebp
sub
fs
jmp
call
add
call
pushf
pushl
popl
pushl
mov
pushl
ret
pushf
not
mov
mov
pushl
jmp
movl
lea
jnp
push
mov
movl
pusha
pushf
pusha
lea
jmp
push
cmpb
movb
jmp
dec
mull
push
aam
push
dec
mov
push
int3
andb
xchg
xor
mov
aas
sub
adc
push
sahf
mov
pop
jnp
repnz
test
xchg
rol
or
lods
inc
aam
sbb
add
lret
or
aaa
rclb
mov
inc
out
pop
in
in
push
hlt
push
rcrb
xlat
or
cmp
xchg
cmp
xor
in
pop
sbb
sbb
push
je
shr
or
test
push
mov
cmp
call
push
mov
pushf
setbe
not
lods
pushl
bt
cmp
not
cmp
add
stc
rol
push
pushl
jmp
movb
cmp
call
movl
push
pushf
mov
pushf
lea
jmp
push
out
mov
mov
mov
fisubs
data16
sahf
jbe
xor
fwait
outsl
pop
dec
sub
mov
outsb
stos
out
push
stos
out
mov
scas
pushf
and
jl
sub
cs
imul
pop
sub
leave
mov
fbstp
nop
pop
loope
ljmp
sbb
jle
popa
arpl
mov
hlt
adcl
inc
sub
add
decb
ss
mov
movsl
pop
jp
fcoml
pop
xchg
cmp
out
cwtl
lret
jb
xchg
or
dec
in
mov
daa
std
push
mov
or
mov
aas
cltd
fistps
adc
add
and
sbb
add
add
mov
cmpsl
adc
add
mov
add
in
adc
add
add
add
stc
rol
movb
pushl
dec
mov
bt
cmp
setle
movb
mov
lea
jmp
cmc
cmc
repnz
movw
lea
jne
cmp
adc
xadd
sub
mov
or
shld
bswap
lea
sub
shrd
shrd
sar
mov
stc
sub
jo
pusha
test
pushf
pushl
popl
cmp
cmp
call
pushf
pusha
lea
jb
cmc
stc
cmp
call
push
lea
jne
cmc
mov
sbb
sub
mov
mov
cmp
cmc
sub
stc
test
push
bt
pushl
popl
clc
call
jmp
bswap
mov
movb
pusha
push
pushl
ret
bt
pushf
add
add
clc
push
test
stc
or
movb
lea
je
bt
cmp
jmp
leave
push
pop
jns
fmull
jmp
in
lods
xchg
in
push
cmp
fs
addb
sub
inc
xor
cmp
cltd
loope
repnz
lea
cltd
loope
scas
ss
pop
clc
inc
aam
ljmp
add
push
jnp
mov
rclb
out
pop
mov
inc
adc
cmp
rol
mov
movsl
cmp
fnstsw
adc
lret
inc
andb
test
dec
in
or
xchg
out
mov
popa
movsl
js
inc
fwait
popf
daa
mov
cs
pushf
dec
jmp
not
pushf
clc
jmp
pushf
pushl
lea
jae
je
push
call
add
mov
cmc
cmc
bt
pusha
and
call
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
adc
fmull
xchg
out
add
pop
imul
add
xor
and
data16
roll
dec
and
cmp
jo
scas
andb
shl
dec
cli
in
sbb
adc
or
inc
pop
dec
cmpsl
lea
pushf
mov
movzbw
mov
call
pushf
lea
jae
seto
mov
rcr
bsf
mov
xchg
ror
mov
or
sar
shrd
neg
mov
stc
cmc
bt
cmp
xor
test
push
call
mov
rol
clc
rol
mov
jmp
call
xor
les
bound
cli
xor
xchg
stos
std
mov
loop
mov
mov
lds
xchg
daa
lcall
call
adc
inc
out
inc
jecxz
sbb
js
xor
sbb
cmp
pusha
lea
jae
je
bt
cmc
push
cmp
pusha
lea
je
cmp
jle
test
push
cmp
jmp
bt
repnz
pushl
jmp
ror
jmp
push
pushf
movl
pushl
pushl
pusha
lea
jmp
pusha
movl
lea
jp
pushf
push
movl
pushf
pushf
movb
pushf
lea
jmp
pushf
call
cmp
mov
shld
rcr
adc
mov
mov
cmp
cmp
push
push
pusha
push
lea
jbe
ror
bsf
not
sar
mov
btc
add
sar
mov
add
shl
add
push
xor
stc
movl
sbb
btr
bswap
rcl
mov
mov
cmp
pushl
pushf
push
jmp
push
or
add
cmc
add
xor
clc
mov
push
test
pushf
pushf
pusha
call
mov
pushf
lea
ja
stc
imul
clc
pusha
jmp
stc
stc
bt
jmp
jmp
pop
mov
je
fsubrl
out
cmpsl
outsl
pop
jbe
lret
add
cmp
push
in
adc
adc
and
int3
in
enter
mov
movsb
jl
jle
mov
fwait
dec
push
fbstp
or
xchg
test
cld
cmp
into
mov
push
xor
outsl
push
mov
add
outsl
cmpsl
fucomp
jecxz
add
adc
xor
xor
ret
xor
scas
mov
inc
lods
test
lods
out
lret
fsts
scas
repnz
test
fisubrl
add
cmp
je
les
mov
adc
in
mov
fst
sbb
cmp
mov
repnz
adc
jge
cmp
call
leave
scas
inc
xchg
mov
fistpl
aas
aaa
and
fldl
call
aas
and
mov
addr16
fnstcw
ja
pop
jge
popf
adc
gs
aas
jge
decb
pusha
movl
push
mov
pushf
lea
jmp
mov
movl
pop
mov
pop
lea
pushl
push
pushf
mov
movl
movl
pushf
call
pusha
lea
jle
je
jmp
movw
mov
movl
mov
pushf
lea
jmp
push
pushf
push
movl
jmp
cmp
push
stc
sub
bt
jmp
mov
not
jmp
call
pusha
push
jmp
jmp
pushf
mov
pusha
jmp
adc
mov
outsl
scas
mov
mov
lcall
mov
nop
push
adc
movsl
or
lea
push
test
and
scas
adc
out
enter
fidivl
lods
lcall
sbb
cltd
out
inc
repnz
pusha
mov
push
mov
fstpt
idiv
and
inc
call
testb
inc
jb
and
mov
sub
scas
daa
es
push
loopne
test
xchg
inc
xchg
stos
in
out
cmp
je
add
sbb
push
add
call
lea
movb
call
xor
call
pushf
pushl
lea
je
pushf
pushl
bt
cmp
jmp
call
setb
lea
pusha
xchg
lahf
movzbw
pushl
popl
movsbw
setg
movsbw
mov
setle
lahf
seta
jmp
movl
pushf
pusha
pushf
pushf
lea
jmp
xchg
not
movzbw
movl
jmp
lea
jb
call
jmp
bt
test
cmp
cmp
push
lea
je
cmc
cmc
pusha
bt
cmp
call
jmp
popf
sbb
jb
fsubrl
mov
ret
sub
sub
mov
fisubrs
adc
adc
adcl
or
and
lret
inc
nop
hlt
push
insb
movsb
jnp
sbb
filds
or
jl
sarl
and
je
shl
add
and
mov
bt
add
stc
stc
pusha
pushl
mov
bt
mov
mov
jmp
idivl
pop
jno
fcompl
push
movsb
cli
test
test
sahf
dec
dec
push
or
mov
jmp
sub
mov
and
cwtl
stos
xchg
gs
lods
inc
cmpsl
add
fldcw
aad
and
dec
loope
xchg
push
mov
dec
jbe
loopne
popl
xlat
and
add
in
mov
pop
mov
mov
push
call
push
jecxz
cltd
fbstp
outsl
test
shrl
lret
jne
fsubs
inc
and
mov
cmp
cwtl
add
mov
cmp
or
loopne
pop
dec
fdecstp
shrb
pop
inc
lds
test
sbb
incl
jbe
jnp
sbb
mov
mov
mov
rcll
sbb
mov
mov
sub
mov
push
ljmp
pop
data16
push
jo
mov
dec
aam
cwtl
aas
lods
inc
rcrl
cmpb
add
lea
call
pushf
pusha
movl
lea
jmp
mov
lea
ja
sar
inc
add
shl
mov
clc
push
cmp
mov
movb
movb
pushf
lea
jb
test
clc
push
call
pusha
pusha
movl
pushf
lea
jmp
pushl
popl
mov
pushl
ret
call
call
test
sub
pusha
lea
call
bt
cmp
push
pushf
lea
jae
pushf
mov
cmp
pusha
jmp
lea
movb
mov
jmp
not
movb
add
pushf
rol
pusha
lea
jo
pusha
dec
movb
cmp
pushl
pushl
pushf
lea
call
mov
pusha
lea
je
jmp
mov
jmp
pushf
add
call
shl
stc
shld
xor
setbe
movzbl
xchg
pop
jbe
pop
jmp
lea
sete
mov
push
pushl
movb
lea
jmp
xchg
mov
outsl
mov
fdivrl
and
mov
add
leave
test
mov
jb
or
js
jl
and
xchg
outsb
push
jb
mov
inc
in
and
mov
jnp
fstl
cmc
inc
dec
sub
mov
enter
scas
mov
out
xchg
mov
icebp
in
arpl
pop
rcrb
mov
add
inc
ljmp
movsl
inc
int
hlt
xchg
sbb
test
dec
out
fmul
popa
or
cs
ljmp
push
out
xchg
movsb
adcb
fmull
add
movsb
xchg
nop
push
sbb
adc
add
cmp
jno
in
mov
data16
mov
mov
ljmp
les
outsb
push
dec
outsb
mov
mov
sbb
loope
xchg
aam
cmpsb
cmp
clc
jl
add
mov
insb
cld
adcb
loopne
push
bound
or
ljmp
jae
sti
sti
jg
pop
add
in
iret
into
out
shrl
lcall
movl
icebp
imul
addr16
jecxz
mov
xor
hlt
in
mov
scas
inc
mov
adc
cmp
ss
in
inc
inc
push
add
cmp
dec
dec
mov
jnp
ja
in
cmp
sbb
cmp
fsubrl
repz
popa
rorl
rcl
pop
les
mov
stos
sbb
push
stos
xor
fs
add
mov
mov
push
mov
movl
pushf
mov
pushl
push
pusha
pushl
ret
mov
push
pusha
lea
call
pushf
pusha
lea
jne
lea
movsbw
mov
push
movw
pusha
lea
jmp
cmp
movzwl
inc
mov
stc
add
clc
cmc
mov
push
test
jmp
push
jmp
mov
fdivl
outsb
or
push
dec
fimull
bound
mov
xchg
and
mov
mov
adc
inc
cmp
jl
cmp
push
push
or
inc
jecxz
rolb
pop
stos
shll
add
lahf
pushf
mov
dec
push
xor
cld
jno
push
je
insl
xor
lret
aas
xor
push
loop
int3
inc
cmp
out
mov
mov
imul
mov
popf
jmp
shr
aad
cmpsl
cmp
xor
mov
add
cwtl
outsl
stos
or
arpl
nop
out
xchg
aam
xchg
sahf
std
jg
xchg
add
sub
push
xor
sub
add
cmpsl
shlb
cmpsb
or
push
push
mov
les
nop
jmp
testb
xor
add
or
fsts
ljmp
in
mov
add
jecxz
icebp
shrl
dec
push
jmp
push
movl
pushl
lea
call
stc
call
pusha
mov
mov
call
pusha
jmp
bsf
xchg
bts
setnp
mov
stc
rcl
das
sub
stc
push
btc
bswap
push
sar
movzbw
aad
push
bsr
sub
jmp
pushf
mov
stc
stc
bt
add
jmp
pusha
movsbl
pushl
movzbw
mov
call
call
fdivrl
and
pushf
int3
inc
mov
push
addl
xlat
mov
sub
sub
lods
fisubrl
mov
adc
test
decb
cmp
enter
addb
xchg
cwtl
pop
stc
mov
push
js
adc
sub
fs
xorl
and
cmp
sub
call
mov
fcompl
adc
lcall
rcrb
test
lods
mov
repnz
sub
inc
mov
sbb
cwtl
mov
ds
mov
mov
insl
xor
push
jo
aad
movsbl
mov
data16
into
test
mov
icebp
cld
ljmp
add
insl
jae
call
fs
ja
cmc
push
stc
call
pushl
mov
sete
not
mov
lahf
jmp
dec
sub
mov
cmp
int
pop
inc
icebp
in
imul
mov
inc
dec
push
cmpsl
out
dec
pop
cmp
mov
jecxz
out
push
sbb
mov
movsb
fidivrl
jge
push
inc
cli
sub
mov
add
sbb
inc
icebp
sbb
pop
xor
fcmovb
xchg
scas
mov
dec
and
mov
add
ret
mov
gs
adc
dec
lcall
cmc
cmp
push
xor
imul
rcrl
jo
es
leave
lea
jp
push
pusha
pushl
push
lea
jmp
movw
xchg
jmp
scas
aad
push
nop
aam
cmpb
mov
shrb
loop
cli
popa
add
mov
mov
jp
pop
mov
std
ja
push
jl
cli
loop
enter
mov
ss
jno
add
jmp
fists
hlt
dec
mov
enter
push
jmp
hlt
push
mov
int3
and
xchg
iret
jne
cmp
mov
mov
fdivr
adc
subl
add
xchg
mov
lret
incl
push
scas
cltd
incl
jno
pusha
loopne
mov
xor
push
and
lods
xlat
aam
push
sbb
dec
dec
and
inc
fsts
add
sbb
lods
fwait
sarl
movl
cmpsl
dec
push
fbstp
cmpsl
adc
sub
subl
dec
mov
mov
dec
pushf
pushl
popl
call
mov
lea
je
pushf
mov
mov
cmp
lea
pusha
call
lea
je
test
pusha
cmp
bt
cmp
pushl
push
lea
jne
pushf
inc
pushf
inc
pushf
pushl
pusha
lea
jmp
lea
je
movzbw
bswap
mov
call
add
stc
jmp
jmp
je
pusha
pushf
mov
lea
jmp
mov
pushf
movl
pushl
movb
pushl
popl
pusha
push
pushl
ret
lea
jb
cmc
call
add
dec
outsl
popa
fs
imul
add
outsl
cmp
dec
jp
inc
xchg
sub
ss
sub
repnz
imul
cmpsl
scas
cmp
add
cld
scas
jg
outsb
push
lock
push
sahf
decb
stos
jecxz
mov
and
push
in
ss
cmpb
cmc
ljmp
stos
inc
xlat
cmp
int3
test
mov
das
iret
cmpsl
add
xchg
sbb
mov
mov
jp
push
hlt
or
aas
mov
outsl
mov
mov
pop
xchg
push
ljmp
sbbb
pop
mov
mov
jo
test
push
mov
fsubrl
lret
movsl
jns
popa
pop
push
stos
mov
div
aas
roll
push
cmpsb
cs
jo
call
pop
pushf
call
push
fsubl
inc
mov
cmp
mov
ficompl
cld
push
mov
fcomip
lret
xor
push
jmp
mov
push
or
test
push
je
mov
sub
jnp
or
mov
fs
fidivl
cmp
pop
insl
xchg
aaa
cltd
push
inc
les
shll
movsl
sub
dec
cmp
xor
mov
jne
sub
jl
daa
jns
rolb
cmc
or
mov
pushf
pushf
pushl
popl
push
pushl
ret
movl
pusha
movl
pushl
movb
pushl
lea
jmp
adc
sub
push
inc
push
push
or
inc
testb
out
pop
and
xchg
clc
xchg
in
lods
ds
insl
inc
mov
mov
lock
std
std
add
addr16
cmpb
int
aas
insl
sub
or
adc
pop
or
xchg
nop
sbb
insb
in
jge
sub
sbb
in
pop
push
ret
out
daa
adc
test
in
popf
inc
mov
mov
push
repz
xchg
push
mov
add
cmpsl
scas
mov
sar
push
enter
rorl
sub
mov
sbb
pushf
pop
call
sbb
ja
xchg
aas
dec
push
mov
adc
stos
addr16
dec
xchg
push
std
pushf
out
cmp
pop
mov
or
out
popf
pushf
mov
pop
mov
adc
sub
mov
xor
mov
adc
xor
sahf
xor
xchg
add
popl
push
pop
push
mov
jne
pop
inc
and
mov
xchg
xchg
lret
sbb
sub
add
mov
repz
xchg
fildl
rcl
rcll
fs
in
push
lcall
jns
xor
insb
movsl
jg
dec
xchg
sub
cld
mov
test
fwait
sub
in
sub
shr
pop
dec
in
add
mov
push
pop
test
dec
xchg
xchg
push
fcmovnb
or
inc
lahf
aaa
xor
loopne
mov
jae
xor
mulb
stos
xchg
test
sbb
sbb
lds
int
pushf
add
test
jnp
xchg
mov
ds
mov
movl
push
movb
push
lea
jmp
pusha
push
lea
jbe
inc
dec
mov
jmp
bt
push
cmp
stc
pushl
popl
clc
cmp
pusha
mov
mov
pushl
lea
ja
sar
sub
cmc
sbb
clc
lea
add
rol
mov
rcl
mov
clc
push
rol
mov
push
pusha
test
cmc
repnz
call
inc
mov
stc
pushf
cmpb
pushf
pusha
lea
jne
dec
cmp
xor
pusha
clc
rcl
mov
call
jmp
mov
pushf
pushl
mov
pushl
ret
jmp
call
add
dec
outsl
arpl
inc
jb
add
rcrb
inc
ret
call
call
stc
cmp
push
lea
jae
sub
ror
not
mov
shld
clc
test
mov
bsf
mov
pushf
cmc
cmc
jmp
movl
call
movl
pushf
pusha
lea
jmp
cmp
clc
add
pushf
cmp
mov
mov
lea
jmp
cmp
pushf
call
cltd
push
pop
lcall
ret
ds
xchg
lods
loop
rorb
jg
add
in
std
jle
outsb
jg
cmp
inc
cmp
push
jbe
lahf
daa
das
mov
sti
mov
das
adc
adc
jl
xchg
cmc
int3
push
mov
popl
movb
movw
mov
movw
pushl
ret
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
xchg
or
push
bt
call
les
jge
add
sub
pushf
lea
jae
pusha
stc
movw
pusha
cmp
call
jb
cld
popa
mov
inc
fbld
aaa
lahf
jg
enter
fstl
lock
sub
inc
adc
push
jbe
sub
stmxcsr
lcall
dec
push
sbb
stc
xor
dec
cld
ljmp
or
lahf
and
push
daa
adc
mov
cli
xor
lcall
dec
mov
pop
push
inc
mov
push
push
pop
sub
xor
inc
inc
mov
lret
int
sbb
push
jl
sub
push
push
xchg
sub
lock
cmp
sahf
ds
and
mov
ret
mov
jmp
cli
call
jnp
and
fidivs
dec
mov
adc
ljmp
js
sub
mov
cmpsl
push
lods
xor
gs
jae
push
bound
or
lds
cmp
mov
pop
or
mov
jno
xchg
repnz
or
test
mov
rcr
int3
push
test
popf
jno
cltd
push
pop
popa
mov
dec
cmp
ljmp
lcall
pop
jns
cli
mov
mov
stos
inc
mov
xlat
xchg
xor
sbb
jo
mov
push
cmpsb
mov
sar
out
inc
jecxz
mov
push
ljmp
out
jp
add
les
xchg
roll
push
addr16
lret
inc
push
jne
scas
idiv
incl
enter
adc
loop
or
in
jns
jbe
inc
sub
sub
and
popa
subl
lret
mov
mov
pushf
mov
cmp
push
inc
pop
xchg
orb
sti
xchg
adc
mov
mov
mov
push
dec
shlb
mov
cmp
or
das
mov
mov
shll
cmc
dec
mov
add
push
call
movl
jmp
bt
clc
stc
not
bt
call
js
or
xor
inc
jns
cmc
add
shll
or
sbb
mov
or
adc
fiadds
xchg
jae
leave
jmp
outsb
dec
pushf
fisttpl
orl
daa
pop
call
mov
mov
push
ret
sbb
and
aas
mov
orl
les
sub
insb
fmuls
xor
cld
push
ss
sbb
mov
lret
or
adc
inc
jno
jnp
xlat
test
fisubl
stos
pop
xchg
pop
cwtl
jnp
sahf
repnz
mov
arpl
movsb
xchg
in
xor
bound
not
adc
push
es
adc
jle
inc
push
and
pop
pushf
dec
aas
or
adc
aad
aas
call
in
icebp
mov
dec
and
mul
nop
shrb
or
into
les
shlb
rcr
movsb
xor
clc
clc
clc
pushl
sub
bt
mov
not
pushf
cmc
sub
call
mov
mov
call
push
movl
call
cmp
push
push
cmpb
call
test
jmp
pushf
lea
ja
clc
xor
sub
shl
adc
ror
add
shl
mov
xor
shl
xor
mov
stc
repnz
call
jmp
push
das
outsl
pop
mov
iret
fwait
xor
pop
adc
sbb
hlt
fs
sarl
push
mov
mov
mov
aam
sub
and
xchg
dec
les
mov
mov
fisubrs
test
inc
int
push
jbe
push
mov
cmp
xchg
sbb
mov
lea
jo
push
mov
movw
xchg
mov
movsbw
pusha
mov
movl
lea
pushl
lea
call
test
cmp
not
call
cmc
in
mov
mov
pusha
xchg
rclb
mov
iret
sbb
add
cmp
mov
xor
inc
and
rorl
cmp
mov
mov
adc
fs
mov
dec
jmp
xchg
add
gs
movsl
dec
jl
pop
dec
dec
lea
lods
push
out
dec
inc
pop
lods
arpl
nop
push
popa
inc
out
dec
btr
in
mov
das
movl
ja
pop
enter
test
aad
int
std
sbb
repz
jge
and
add
xlat
loope
pushl
mov
mov
pushf
jmp
mov
xchg
pop
mov
dec
xor
mov
sub
or
sub
call
fstpt
sbb
sub
xchg
mov
stos
inc
jg
cld
sti
out
mov
push
mov
mov
jp
inc
mov
add
sbb
mov
and
mov
call
in
push
cmp
stc
sub
mov
or
loop
ret
das
div
lods
and
mov
loope
dec
clc
adc
aam
call
mov
add
xchg
xchg
stos
jge
fisttpl
into
enter
cmp
or
rorb
cmc
popf
daa
and
cli
adc
xchg
insl
jae
ja
lahf
pop
std
mov
scas
lods
cmp
into
repnz
out
sub
cli
ret
ja
add
das
rolb
mov
sbb
fcompl
and
ret
jnp
or
sub
ds
or
arpl
jbe
or
pop
pop
call
and
out
xchg
aad
xor
sub
fwait
stos
push
movl
pusha
jmp
push
cmp
call
test
stc
mov
pushf
stc
bt
test
mov
pushf
jmp
movb
mov
lea
jbe
stc
mov
or
movzbw
add
test
movzbw
mov
bts
not
shr
add
sub
shl
movl
neg
shl
mov
push
bt
stc
cmp
call
jmp
lahf
pushf
lea
pushl
call
in
pusha
call
dec
xchg
or
fcoml
and
adc
pop
xchg
push
add
nop
mov
adc
mov
sub
int
daa
mov
inc
js
ret
jne
cmp
es
mov
andb
pushw
jg
cltd
lods
sub
imul
lea
jmp
pushf
bt
cmpb
call
pusha
lea
jbe
or
sub
not
btc
test
js
mov
bsr
and
mov
xadd
add
pushf
adc
btc
pusha
shr
bsf
xchg
xadd
or
mov
cmc
push
sbb
cmc
add
lea
jge
bswap
bswap
not
mov
push
mov
jmp
push
cmp
fsubl
mov
mov
jl
mov
insb
pop
repz
insb
jns
in
inc
lahf
lret
jge
mov
and
jge
jle
xchg
sub
stos
jb
inc
or
je
push
test
lods
push
push
jb
mov
mov
aas
std
jae
arpl
mov
jmp
movsb
pop
push
pop
mov
pushf
mov
jnp
add
sbb
lcall
jns
sub
mov
mov
dec
mov
jp
fs
sub
inc
cmp
sub
xchg
sbb
mov
js
hlt
sbb
sub
jb
add
test
out
mov
fcmovb
cmpl
std
cmp
inc
inc
sbb
movsl
and
add
sbb
or
push
pusha
lea
je
not
movsbw
pusha
pushf
mov
movsbw
lahf
pusha
not
lea
movb
call
popa
push
dec
cmp
pop
ficoms
cmpsl
pop
inc
pop
cmp
sahf
sbb
fidivrl
adc
mov
jle
sahf
cli
or
arpl
mov
dec
ret
shl
icebp
cld
stos
mov
adc
loopne
stos
cmp
shll
inc
and
fbstp
out
test
je
ret
or
mov
lret
int
mov
sahf
xchg
mov
vpsllw
xor
jmp
xlat
lret
and
addr16
gs
cmpsl
lods
rcl
in
add
adc
int
xchg
sub
popa
pop
cmpsb
pop
addr16
test
mov
and
jecxz
sub
mov
push
dec
mov
mov
and
pop
adc
test
sbbb
or
jmp
lret
cmpsb
mov
jp
rolb
adc
sbb
loope
ret
loope
dec
jns
subb
jnp
in
repz
lods
jge
je
lret
push
adcb
xlat
icebp
jmp
add
mov
jl
cmpl
xchg
lret
loope
push
mov
movsb
lcall
loopne
in
mov
push
cmp
push
rol
int
mov
movsb
mov
fpatan
jmp
ret
es
mov
lar
inc
sahf
shlb
imul
mov
fidivl
ja
ret
orb
pop
das
rcr
out
mov
or
fidivrl
jo
or
lahf
ret
fimull
jl
sbb
popa
inc
mov
mov
out
adc
mov
rclb
addr16
jle
adc
sub
add
arpl
movsb
xchg
xchg
outsl
mov
fidivrl
sarb
fiaddl
fdivs
ficompl
mov
mov
cmpsb
test
test
pusha
test
out
in
icebp
scas
ffree
stos
stos
js
adc
inc
jl
icebp
mov
out
jmp
mov
pop
imul
loopne
gs
loopne
lcall
in
stc
dec
mov
jle
stos
mov
and
stos
sbb
mov
ds
push
inc
or
imul
repz
or
lds
icebp
loope
shll
jmp
pushf
aad
mov
fisubl
addr16
ds
xchg
rcrb
sub
lock
fiaddl
push
rcr
mov
sarl
mov
inc
pop
xor
iret
inc
ret
lods
lcall
inc
and
jmp
loope
fidivl
icebp
cli
adc
pop
ss
fiaddl
pextrw
xor
cmp
rol
testl
out
dec
pop
ret
jb
ss
add
or
cmp
and
fisubl
incl
push
add
shrb
add
adc
or
ficoml
lret
xorb
fidivl
ss
or
jp
mov
ficoml
mov
lahf
sbbb
les
push
fimull
div
fcmovb
int
inc
mov
pop
add
dec
xlat
iret
mov
adc
fcmovu
mov
pop
mov
imul
xchg
mov
dec
out
push
and
mov
push
dec
push
add
adc
aas
loopne
pop
shl
lds
or
adc
adc
jb
or
ds
mov
loopne,pt
ret
mov
ds
fisubrl
mov
mov
dec
inc
lret
mov
jp
aad
push
je
movsb
push
gs
ficompl
jmp
pop
orb
sbbb
mov
pop
mov
dec
loop
dec
adc
push
jbe
incb
out
mov
jp
sahf
xor
mov
repz
mov
dec
mov
out
out
cmpsb
xchg
mov
in
push
testb
stc
and
sub
gs
pop
pop
loopne
shrl
adc
loop
adcb
and
or
cmpb
sar
outsb
mov
andb
xchg
pop
sbb
shlb
or
jb
mov
fstl
imul
aad
lds
adc
fs
mov
outsl
adc
in
or
ret
mov
xor
movsl
push
les
out
les
jp
addr16
out
les
mov
ds
mov
and
inc
loopne
mov
adc
fisubrs
add
les
je
jecxz
loop
int
icebp
add
imul
add
xchg
jle
cmc
repz
mov
xor
rolb
dec
mov
adc
fcomps
repnz
dec
and
mov
in
jl
nop
filds
and
sahf
xchg
push
fisubs
arpl
in
inc
inc
in
sarb
icebp
loopne
arpl
and
and
push
fstl
adcb
or
mov
mov
testl
mov
jb
fists
aaa
jnp
jp
addr16
outsb
inc
xor
loope
ret
mov
les
mov
les
inc
and
outsl
clc
xor
mov
xor
dec
shll
loopne
les
add
es
std
outsb
clc
les
out
ficoml
xchg
cmp
jno
out
les
jmp
inc
mov
mov
cld
fidivl
mov
mov
sarb
cmp
je
lcall
aaa
push
pop
sti
fisttpll
cmp
inc
push
jb
ss
and
push
out
les
loope
js
iret
in
repnz
ds
push
jg
push
push
lods
loop
mul
lcall
jg
or
add
mov
int
add
les
aaa
loope
push
xchg
push
nop
les
in
les
add
pop
fiadds
out
test
dec
pusha
sbb
xchg
test
push
adc
dec
testl
mov
ds
jp
pop
pop
les
push
fidivl
loope
mov
push
out
sbbl
outsb
fdivrs
les
loope
dec
les
inc
push
pop
out
mov
je
arpl
stc
push
adc
add
jge
addl
push
ffree
pusha
icebp
loop
sbb
pop
aaa
inc
shll
jnp
sub
sbb
loopne
mov
cmpsb
add
mov
mov
fimull
mov
fiaddl
mov
dec
xor
push
fiaddl
outsl
mov
sahf
mov
jp
xchg
mov
les
cmc
fimull
adc
push
mov
and
dec
test
or
mov
les
js
add
fnstenv
push
and
mov
repz
out
ss
clc
addr16
loope
jno
pop
fcmovb
repz
xor
in
adc
fmuls
push
mov
les
jno
pop
ja
xchg
push
adc
lcall
dec
insl
xchg
push
jle
les
mov
xchg
stc
icebp
mov
loopne
clc
and
mov
je
or
xchg
popf
neg
les
and
les
icebp
adc
xchg
adc
pop
add
mov
test
mov
je
xchg
les
mov
add
les
lods
pop
mov
push
les
sbb
out
xlat
adc
in
mov
mov
xchg
shll
jge
jnp
xor
test
enter
movsb
or
stos
btc
sahf
xchg
mov
mov
xchg
rorb
addb
jge
xor
loopne
xchg
xor
push
popa
mov
xlat
xlat
jmp
mov
add
push
testb
jb
add
fs
loope
je
push
mov
lcall
inc
stos
pop
push
xchg
push
pop
pop
std
lods
xchg
dec
jae
lcall
mov
fucompp
push
dec
adcb
cmp
sbb
outsb
pop
sub
stc
pop
mov
jg
push
pop
adc
push
les
sub
mov
add
cmp
iret
in
and
les
out
mov
int
xor
xor
mov
dec
mov
popa
ja
std
ja
jg
inc
test
ret
scas
push
rol
add
mov
push
mov
scas
mov
repz
xchg
lcall
shll
mov
mov
or
fwait
and
cli
fptan
push
push
dec
mov
and
mov
sub
xorb
mov
jecxz
adc
push
stos
add
rorl
ljmp
pop
scas
leave
shll
data16
jecxz
sbb
shl
sbb
out
iret
mov
shrl
xchg
movsl
xchg
mov
lret
sub
adc
pop
jbe
mov
mov
mov
fs
mov
js
popf
cwtl
pop
jnp
mov
cmpsb
mov
shlb
ds
orl
daa
push
mov
adc
mov
inc
inc
mov
in
aaa
gs
jne
sub
ret
imul
mov
nop
test
ss
dec
push
sarl
test
data16
ret
add
and
shl
or
ficomps
or
aam
sbbb
testb
and
mov
mov
and
jae
ret
sub
adc
push
add
pushl
je
loopne
xor
mov
filds
in
adc
aam
add
out
sbb
mov
in
cmp
mov
or
scas
int3
add
lock
or
roll
or
jo
mov
shl
dec
filds
adc
idivb
in
movsb
xchg
mov
fisttpll
or
mov
loopne
mov
dec
divb
push
loope
pushl
push
and
cmp
inc
pop
pop
shrl
jbe
and
mov
dec
jo
int3
adc
pusha
in
les
stos
in
sbb
out
mov
pop
sbb
jne
mov
cmpsb
roll
inc
cmp
fwait
or
leave
inc
es
xchg
stos
cmpsl
pop
pop
fisubl
iret
lcall
jle
ds
xchg
add
divb
mov
loopne
push
fadds
adc
mov
pop
mov
repz
adc
cmp
aad
cmpsb
mulb
xchg
adc
mov
lock
mov
inc
fdivs
mov
test
popa
ja
sbb
rcll
sahf
hlt
nop
push
loop
iret
fs
lock
fdivrs
in
test
sbb
xor
and
dec
ja
int3
mov
push
inc
sub
push
cmpsl
pop
stos
movsl
addl
clc
lahf
push
sbb
out
mov
enter
repz
fidivs
aam
rol
mov
scas
add
iret
ds
outsb
scas
sahf
push
and
jle
push
mov
in
jmp
mov
out
cmpsb
mov
test
cwtl
out
out
add
and
pop
scas
sub
mov
rorl
addr16
addl
jbe
and
ds
shll
loop
inc
out
add
mov
aas
cmp
push
ss
das
rorl
cmp
push
sbb
int3
test
and
cmc
imul
imul
gs
mov
jg
cwtl
loop
rcrb
pop
pop
ror
pusha
fdivrl
or
es
inc
adcb
push
and
aam
aaa
iret
cmp
test
fwait
pop
daa
adc
cwtl
mov
int3
mov
mov
mov
pop
pop
aad
push
mov
jo
hlt
loopne
xchg
mov
repz
cmp
xlat
ja
lds
mov
pop
inc
popa
mov
or
mov
iret
mov
movb
imul
shll
cmp
cmp
mov
mov
ss
pop
dec
jle
into
xor
int3
mov
jb
bnd
in
cmp
subb
and
dec
into
jl,pn
dec
lcall
jno
inc
ret
and
sarb
mov
lods
addr16
mov
inc
lds
push
repnz
out
pop
es
daa
cmc
neg
sbb
mov
and
xchg
std
in
or
sbb
cwtl
add
inc
jae
sarb
std
mov
inc
sti
shlb
mov
dec
out
inc
neg
js
rolb
xchg
gs
sarb
sbb
out
mov
cmpsb
xor
push
push
rcr
dec
jg
mov
popa
std
clc
ss
testb
jbe
out
das
int3
cmp
popa
inc
add
and
cmp
sbb
popa
cmpb
sbb
cmp
inc
and
test
cmp
adc
mov
mov
cmp
insl
mov
mov
sbb
fdivrs
pusha
ja
les
cmc
fdivrp
sbb
call
add
inc
add
aad
mov
xor
loopne
in
in
cmp
mov
cmp
mov
loopne
sub
mov
es
mov
mov
icebp
mov
xchg
test
test
sar
adc
aad
enter
and
dec
sbb
cmpsb
fisubs
fsubs
sbb
add
push
das
in
out
lret
push
or
testb
and
lds
jbe
push
shll
jno
cs
aas
mov
lret
insl
lcall
mov
lea
jbe
and
loop
enter
cmp
rcr
jnp
sbb
test
and
cmpsb
mov
jnp
cmp
popa
movl
adc
cmpsb
add
into
xchg
xchg
sub
xchg
pop
cmpsb
addl
push
call
mov
in
jbe
push
pop
shl
out
adc
push
lcall
gs
mov
mov
pop
xbegin
sub
roll
shlb
rorl
fcoms
idivb
add
aam
sub
dec
adc
pop
outsb
popa
mov
xor
push
sub
push
push
dec
mov
and
popa
mov
xor
les
scas
sbb
aam
in
stos
jo
mov
outsb
push
xchg
xlat
shlb
mov
xchg
dec
stos
imul
add
into
out
aas
popl
faddl
jle
mov
mov
mov
inc
pop
xchg
outsl
leave
pusha
repz
int
pop
cmp
adc
inc
pop
clc
xor
aam
jl
insb
lea
sbb
jb
adc
jmp
notb
or
test
gs
cld
adc
mov
das
xor
in
add
adc
imul
ja
insl
ja
addr16
into
into
push
sti
jecxz
mov
enter
pop
ss
add
inc
adcb
ja
outsb
adc
cli
jmp
or
sub
mov
iret
inc
loopne
fadd
cmp
ss
mov
repnz
lock
sarb
test
call
decb
jne
arpl
add
pushf
adc
xchg
aam
mov
push
mov
loop
mov
test
add
fisubl
sbb
jbe
loop
xchg
mov
add
sahf
ret
adcb
jae
shll
mov
ja
sahf
fimull
pop
idivb
pop
add
and
add
sbb
fdivrs
jecxz
cmpsb
test
cmpsb
add
in
xchg
xor
cmpsl
shll
es
jp
xor
fs
nop
xchg
add
inc
out
js
add
aas
mull
fisubrs
out
outsl
add
cmpsb
stc
xchg
shll
dec
pop
int3
push
bound
dec
push
mov
iret
inc
out
mov
ret
into
mov
dec
int3
cwtl
fimuls
cmp
inc
rcrl
push
inc
jae
scas
out
dec
sbbl
cmp
sbb
mov
jg
sbb
cli
dec
adc
and
stos
sub
push
pusha
lds
cmpsb
dec
iret
jle
out
push
mov
ret
test
cld
sbb
in
adc
arpl
call
ret
mov
dec
xchg
cmp
fnstcw
scas
mov
leave
xchg
adc
pop
add
in
scas
xor
sub
fisubrl
jle
inc
out
loope
mov
xchg
out
mov
adc
fimull
rcll
shrd
ficoms
pop
ja
sub
cmp
mov
jg
adcl
mov
push
imul
dec
inc
jns
add
aad
leave
pop
fidivrl
lea
cmc
sbb
in
adc
adc
mov
xlat
sbb
test
shll
sub
or
push
imul
jb
in
push
add
inc
mov
mov
arpl
and
out
or
sbb
pop
out
jo
push
add
jb
pop
ret
stos
xor
cwtl
movsl
rcl
xor
movsl
pop
mov
xor
cs
inc
fildl
and
test
cwtl
or
gs
sub
rcrb
cmpsb
insb
mov
jbe
fbld
pop
or
fstpt
leave
iret
mov
pop
add
add
push
mov
cltd
iret
mov
lahf
pop
lret
outsb
and
xor
mov
rol
pop
lds
mov
inc
xchg
roll
dec
repnz
daa
je
daa
mov
push
mov
mov
inc
pmuludq
sahf
in
ja
xchg
out
inc
jg
mov
add
add
sbb
inc
inc
xor
enter
ret
popf
inc
xchg
xor
mov
cmp
shll
push
loop
inc
mov
xchg
call
into
and
pop
shlb
std
mov
pop
in
shll
xchg
rcl
cmp
jle
cmp
xor
push
lret
les
movsl
movsl
pop
int3
sbb
inc
lret
mov
cmp
cli
push
cwtl
mov
push
jnp
and
inc
cmp
sbb
int3
mov
ret
cmp
add
pop
fwait
cmpsl
ds
stos
push
xchg
imul
xlat
push
add
shll
ror
out
jbe
mov
mov
jg
mov
test
lods
test
cwtl
out
mov
cmp
fidivl
xor
scas
xchg
lea
xor
adc
sahf
pop
out
push
ljmp
sar
dec
hlt
mov
dec
cmp
lea
sub
ja
or
xchg
stos
inc
movb
add
int3
into
lea
pop
sub
xchg
rol
sub
jg
bts
or
mov
aam
aas
pusha
inc
sbb
jo
fistl
xor
stos
cwtl
mov
mov
imulb
shrl
loope
mov
mov
push
jbe
mov
sti
or
sahf
mov
lods
arpl
xchg
arpl
arpl
dec
jp
xchg
xor
mov
jge
test
pusha
adc
ds
and
hlt
repnz
loopne
adc
out
mov
mov
divb
mov
repnz
shl
cmp
or
into
sbb
inc
push
cli
push
je
ror
xchg
xchg
es
enter
cwtl
ds
es
dec
cmp
xchg
xchg
mov
hlt
movsl
xchg
dec
adc
outsb
xor
push
sahf
pop
xchg
iret
xchg
loopne
push
jo
scas
fwait
inc
xor
and
xchg
movsl
add
xor
stos
rcr
inc
aas
mov
pop
xor
dec
mov
push
stos
xchg
lea
lret
lods
cwtl
inc
adc
mov
mov
test
mov
ret
cmpsb
sahf
gs
mov
cmp
sahf
jg
cmp
push
inc
jno
incb
jbe
out
loopne
int3
jg,pn
fs
lods
iret
out
fadds
push
into
jne
push
jb
out
pop
dec
xor
add
jl
call
push
mov
mov
xor
dec
pop
and
and
data16
idivb
in
aam
mov
jb
cmpsl
jle
dec
mov
imul
es
pop
inc
and
inc
in
out
cltd
inc
mov
xchg
int3
mov
lds
dec
pop
mov
aam
lea
fwait
cmp
rcrl
push
and
mov
out
in
into
scas
inc
cli
mov
and
loopne
cmp
into
xor
sahf
shlb
ds
stos
push
mov
dec
bound
clc
gs
js
push
jl
and
mov
cmp
in
mov
jle
mov
mov
inc
pop
xorb
rol
mov
xlat
ficoms
outsl
mov
je
mov
loop
mov
or
push
ret
fcmovb
cwtl
scas
imul
adc
dec
inc
xor
cli
lea
movsl
fdiv
mov
or
inc
in
pusha
mov
hlt
adc
test
cmp
xor
cli
scas
jnp
je
ror
fcoml
imul
movsl
roll
arpl
in
call
mov
stos
rcrb
mov
int
ret
ja
xchg
sub
stos
and
mov
mov
xchg
add
lea
jo
jmp
add
ficomps
or
mov
pop
shl
jo
dec
int3
mov
jmp
es
jno
into
cmp
divl
inc
push
pop
inc
fdivl
rolb
les
popf
imul
and
push
in
xchg
mov
jmp
loop
fisubrs
add
loop
cmp
pop
cmpsb
sbb
push
mov
jl
fwait
push
push
xor
das
js
aaa
inc
jae
js
cmpsb
xor
sahf
aad
inc
stos
std
or
or
cld
mov
jbe
out
xchg
jle
fsts
ja
inc
push
aad
or
icebp
push
stc
adc
inc
not
fiadds
andb
mov
fwait
xchg
out
inc
cli
sub
insl
inc
xchg
mov
loopne
cmpsb
nop
xor
xor
mov
clc
dec
nop
shl
lock
out
insl
mov
xchg
sbb
dec
ret
lret
icebp
jle
jbe
roll
in
fwait
out
dec
jo
lock
xor
mulb
add
cmpb
enter
fcom
mov
inc
fisubrs
inc
loopne
into
mov
ds
push
and
mov
mov
inc
mov
scas
test
inc
call
mov
mov
xchg
mov
push
mov
cmp
in
idiv
call
not
push
rolb
and
lods
daa
cld
jge
mov
pop
mov
mov
std
push
inc
loope
clc
mov
mov
add
fiaddl
add
sub
add
mov
dec
fwait
inc
or
outsb
jb
sub
push
jo
inc
add
nop
xchg
cmp
sti
adc
mull
dec
lods
nop
push
mov
inc
aad
jecxz
test
fldcw
fadds
xchg
cmp
xlat
push
in
out
mov
daa
dec
cmc
push
adc
xchg
mov
mov
xor
mull
in
mov
out
movl
jle
ja
lahf
add
dec
scas
jg
cmp
loope
cmp
pop
cli
cmp
jg
pop
add
faddp
das
push
inc
and
push
stos
sahf
mov
push
mov
ja
inc
fcoml
push
xor
scas
sbb
sbb
imull
rclb
sahf
mov
lods
shrl
jecxz
and
addr16
push
xor
mov
sahf
in
les
ss
loopne
pushf
lret
push
fstps
loop
ds
stos
lret
xor
aas
les
mov
fdivl
and
bound
cmp
loopne
iret
into
mov
sbb
lods
data16
movsb
iret
fwait
ret
jo
push
enter
push
push
or
adc
out
jae
and
imul
push
lea
shll
push
xchg
push
test
outsb
sbb
stos
loope
and
ljmp
adc
lock
push
mov
das
int3
push
lea
fsubl
aas
out
inc
xchg
rcl
xchg
arpl
scas
xchg
lock
stos
imul
inc
fidivrs
xchg
mov
daa
shlb
mov
jg
cltd
mov
lods
addb
pop
add
outsb
mov
mov
sahf
or
cmpsb
sub
push
loopne
inc
negb
mov
jbe
incb
sub
push
ret
mov
repnz
mov
xor
pop
xlat
inc
cmpsl
rorb
loope
rcl
les
out
xchg
dec
lea
rcr
test
rorb
repz
add
adc
ss
sbb
aaa
and
inc
and
and
mov
dec
aas
mov
shlb
mov
aas
xchg
loopne
cmp
sub
cs
pop
test
push
inc
notl
or
mov
xchg
jbe
arpl
lds
lahf
xor
sarl
sub
out
mov
mov
pusha
mov
xchg
in
ja
cmp
hlt
jnp
fimull
mov
xchg
into
cmp
out
pusha
mov
shrl
pop
jg
scas
dec
ret
adc
inc
cmp
pop
xor
inc
int3
mov
pop
lods
sub
pop
lock
out
faddl
arpl
shrl
enter
loop
sarl
mov
lds
add
negb
pop
push
loop
or
inc
into
inc
xorl
aam
push
into
inc
dec
mul
fwait
sarb
sbb
das
jle
dec
xchg
add
in
ret
ret
aad
roll
icebp
xor
scas
out
push
aam
add
xchg
mov
pushf
shlb
sub
inc
rcrb
outsb
ror
adc
mov
fcompl
sarb
cmpsb
insb
lret
shrb
lahf
ja
shrb
or
es
adc
inc
sbb
cld
push
sub
push
loop
inc
out
hlt
rorl
je
adc
push
push
enter
mov
mov
popa
mov
cmpsb
xchg
mov
in
ja
dec
mov
pusha
cmpsb
ss
mov
cwtl
xchg
or
mov
push
sub
stc
or
jbe
and
fdivrs
mov
ret
cmpsl
add
movsl
push
add
mov
fnsave
push
ljmp
and
inc
lods
mov
ja
loope
sub
pop
jp
pusha
pusha
sbb
addl
mov
es
repnz
test
xor
xchg
push
mov
icebp
mov
mov
jbe
mov
nop
or
lret
mov
xlat
stos
cmp
shrb
data16
jp
push
dec
xchg
ret
hlt
dec
pop
popa
add
or
or
cmc
les
out
inc
cmp
loop
movb
out
sbb
cld
testb
dec
int
cmpsb
les
push
cmp
rorb
xchg
push
ja
adc
enter
lret
mov
and
mov
pusha
pop
in
cwtl
in
mov
shll
hlt
bound
mov
dec
and
sahf
sarb
mov
in
shr
les
pop
fs
sub
xchg
nop
push
int3
rcrl
adc
in
pushw
aam
jle
cltd
fiadds
std
mov
xor
inc
sbb
std
cmp
shrl
and
loop
js
ja
xchg
fstp
push
pop
aaa
fsubl
xchg
jle
pop
pop
inc
cmp
cmc
imul
pop
inc
xchg
mov
jl
clc
xchg
imul
sbb
pop
dec
mov
mov
rorl
mov
shrb
test
jmp
imul
fwait
mov
mov
jl
cmpsl
pop
push
ja
arpl
loop
cmp
add
dec
mov
outsb
dec
ljmp
push
fdivrp
pop
ja
mov
lea
mov
jmp
cwtl
dec
cmpsb
test
iret
sahf
fists
add
xor
mov
lahf
sub
xor
add
lea
cwtl
shlb
movsb
clc
mov
push
sub
lods
or
out
mov
ja
ljmp
push
inc
push
sbb
in
into
sub
outsb
lcall
jbe
loop
shlb
ds
mov
mov
mov
enter
mov
push
xor
into
adc
pop
push
ja
inc
sbb
out
adc
notl
pop
mov
in
scas
and
mov
out
loope
mov
pop
clc
das
repnz
pusha
push
lods
int3
addr16
and
jbe
fbstp
push
mov
inc
mov
sti
and
and
cmc
aam
or
mov
in
shlb
aaa
es
mov
pop
icebp
push
jbe,pt
lea
pop
outsl
pop
adc
inc
or
pop
clc
andl
and
mov
inc
loop
rorb
jbe
mov
xchg
mov
sub
aaa
addr16
cmp
iret
ret
adc
dec
dec
rolb
movsl
mov
inc
divb
icebp
adc
ss
xchg
inc
push
call
and
pusha
je
add
xchg
jecxz
add
xor
cli
ljmp
stos
mull
lret
in
sub
das
mov
addr16
mov
popa
pop
xchg
cmpsb
rcrl
aam
adc
mov
test
inc
sbb
sahf
mov
push
data16
dec
and
das
bound
lds
xor
xchg
cmp
repnz
cmpsb
cwtl
dec
arpl
and
sub
adc
ja
push
repz
mov
xor
aad
sub
and
push
into
in
mov
or
imul
ret
loopne
dec
imul
mov
fs
les
negl
pop
pop
pop
adc
loop
jp
jo
inc
les
mov
xor
add
test
adc
jl
shlb
lret
lds
je
xchg
jb
ret
sarl
stos
arpl
mov
mov
and
loopne
cmp
stc
or
xchg
cwtl
faddp
xor
gs
rorl
mov
call
adc
bound
movsl
dec
mov
loopne
ret
shlb
sbb
ss
jmp
jle
insl
jo
xchg
mov
inc
sbb
and
xchg
inc
sub
jp
pop
rorb
push
xlat
test
dec
lods
jne
data16
fwait
cmp
arpl
jno
and
lods
shll
sarl
mov
into
dec
ja
mov
mov
bound
int3
lret
or
adc
lods
pop
fimuls
pop
add
ret
push
and
xchg
stos
in
cmp
fdivr
mov
outsl
scas
adc
add
ja
inc
jle
and
loop
popa
sbb
jp
push
and
decb
popf
mov
add
cmp
xchg
ret
iret
cwtl
imul
jo
lcall
add
cld
mov
add
push
sub
fistps
out
add
cld
dec
inc
xor
jl
repnz
xor
xlat
test
mov
cmc
loope
lds
loopne
mov
xlat
test
mov
lds
sarb
int3
int
adc
inc
ret
push
out
push
pushf
loopne
pop
dec
mov
data16
adc
inc
mov
xchg
mov
xchg
mov
sub
xchg
aas
jmp
inc
rol
add
pop
imul
and
ftst
xchg
xchg
mov
pop
mov
outsb
sahf
jl
sarb
cmp
ss
dec
fsubr
mov
jmp
push
movsb
into
mov
sarl
sarb
hlt
jmp
loopne
in
mov
adc
scas
push
adc
rcl
scas
xor
adc
xlat
int3
mov
mov
ficoms
jne
roll
aad
push
ds
sbb
xor
ja
aas
sahf
pop
mov
pop
inc
ja
add
cmp
pop
fstps
lret
add
inc
mov
dec
sahf
push
shlb
rorb
lahf
test
clc
pop
cmpsl
cld
xor
cwtl
fiaddl
inc
push
or
rorl
into
jne
cmp
sbb
rcrl
faddl
xchg
stos
mov
cs
add
lock
mov
inc
add
push
pop
mov
nop
add
mov
aaa
cwtl
add
xchg
add
push
add
in
fucom
mov
lock
ja
arpl
leave
shll
push
mov
divb
std
add
pop
inc
add
sub
xchg
inc
mov
adc
xchg
fisttpll
ja
in
mov
jg
add
mov
sahf
push
sub
shlb
mov
cmp
sarl
dec
stos
xlat
adc
mov
and
mov
in
xor
repnz
imul
xchg
jnp
dec
push
imul
orl
add
jp
or
mov
sarb
sbb
adc
es
scas
out
out
mov
incl
fcoms
mov
aaa
xchg
lods
inc
dec
pop
lcall
adc
icebp
cld
das
loopne
jmp
sahf
push
xlat
mov
ja
add
xor
sbb
sahf
in
xor
into
in
imul
fxch
xchg
sbb
mov
sbb
ss
xchg
push
call
mov
sbb
scas
out
aaa
jg
mov
jns
call
jno
dec
jo
xchg
dec
or
addl
jbe
or
fsubrs
leave
push
add
into
nop
sahf
mov
ret
int
xor
sbb
leave
lea
sbb
sbb
pop
or
repnz
mov
fidivs
lock
xchg
adc
test
rclb
shl
push
xchg
aas
jle
jmp
mov
les
pop
cwtl
loopne
outsl
jl
js
dec
imul
cmc
into
stos
mov
sbb
sbb
rcll
loop
cmp
pop
mov
sbb
pop
adc
in
stos
xor
shlb
push
sub
lock
mov
das
into
inc
loop
pop
xlat
dec
and
fstpl
ss
ja
scas
jbe
cmp
and
arpl
sbb
nop
ljmp
push
xchg
sbb
shlb
sahf
out
sbb
cwtl
popa
out
arpl
mov
int
inc
cmpsb
daa
std
adc
out
and
lret
xor
or
loop
fucom
jns
dec
mov
arpl
or
lds
ds
out
cli
sbb
cmp
out
int
movsb
cmp
sbb
shrb
lahf
outsb
loop
nop
push
rorl
add
cli
loopne
inc
pop
xor
xchg
cmp
mov
repnz
scas
inc
mov
fidivrl
cmp
jmp
fdivrs
clc
es
xor
lods
cli
fsubrl
loopne
push
les
push
mov
jae
xchg
cwtl
loop
insl
les
ret
test
jl
iret
repnz
ret
mov
xchg
hlt
ror
cmp
inc
cwtl
roll
pop
jl
fstpl
push
std
aam
lods
mov
pop
mov
out
popa
inc
fwait
xchg
mov
inc
sarl
push
mov
in
and
mov
lret
daa
in
popf
adc
pop
cmp
nop
subl
xor
sub
push
sub
sub
cmp
push
lea
dec
jp
and
cli
lahf
adc
nop
ret
idivb
mov
dec
cmpsb
push
scas
dec
out
cmp
and
cmp
mov
and
in
xor
dec
adc
or
lret
adc
aam
ret
cmc
loopne
mov
mov
mov
jecxz
mov
loop
and
loopne
lods
aam
cltd
jg
lods
cs
call
shlb
cltd
sub
jo
dec
sarb
xchg
push
or
inc
shlb
rclb
sahf
jb
data16
xchg
pop
fstps
sbb
inc
xchg
jle
loop
ret
cld
cmp
arpl
cwtl
divb
arpl
dec
leave
xchg
sti
mov
inc
lahf
ja
jae
pop
daa
sub
cld
cwtl
in
pop
out
or
sub
inc
or
js
dec
jo
das
adc
out
ret
inc
sub
rcl
imul
testl
mov
sbb
mov
cmp
outsl
rcr
inc
xchg
addl
lcall
mov
lds
and
mov
fisttps
repnz
add
ds
out
aas
xor
dec
xchg
sbb
fsubrs
inc
loopne
push
aad
xchg
pop
sub
aaa
xor
inc
sub
push
sbb
mov
inc
mov
mov
lret
cs
xchg
incb
jle
in
push
into
push
xor
push
rcrb
sub
adc
dec
movb
rcl
cmp
in
out
push
push
movsb
mov
fsubrs
adc
push
leave
fisubl
lds
ja
push
in
push
xor
in
data16
mov
les
filds
vpsraw
add
cmp
xor
arpl
out
popa
frstor
inc
mov
sub
es
out
lea
js
push
mov
popf
sub
push
mov
outsl
dec
shrb
sti
ret
push
cmp
pop
inc
mov
sub
cs
pop
cmp
jne
pop
push
sbb
jl
movsb
fdivs
in
mov
ret
into
inc
ja
push
and
mov
mov
les
mov
mov
incl
pop
inc
rcll
cmpsb
dec
movsb
mov
ffree
mov
cli
mov
mov
pop
hlt
and
sbb
push
mull
sub
in
push
push
iret
sub
jo
mov
or
lods
imul
fnstcw
fcomps
idivb
push
lods
mov
fdivrs
mov
lock
es
xor
fidivrl
sar
mov
adc
sub
sub
shlb
mov
popa
sub
pop
pop
jo
loopne
outsl
cmp
repz
add
mov
jo
bound
mov
stos
sbb
dec
push
push
jl
xchg
cmp
gs
jnp
cmp
shr
adc
lea
pop
sub
cmpsb
or
push
cwtl
fwait
adc
repnz
xchg
ss
xor
ljmp
or
jecxz
or
pusha
lods
idivl
sub
into
lods
dec
cmp
test
mov
lcall
mov
mov
or
dec
dec
and
clc
mov
add
cwtl
repnz
mov
xchg
jb
xchg
dec
jno
testl
insb
and
fstl
cwtl
adc
or
jge
xchg
dec
out
xchg
dec
pop
mov
ja
test
pop
xchg
cli
jo
dec
es
lret
pop
ja
das
inc
or
jae
jnp
imul
ss
fimuls
ret
lret
es
out
and
out
mov
imul
fadds
into
lds
dec
loop
xor
mov
les
mov
sahf
push
outsl
mov
adc
mov
mov
cmp
std
dec
xchg
push
cmp
cmp
cli
jne
outsl
cmpsb
inc
in
pop
dec
dec
mov
sbb
push
and
fcom
pop
jecxz
push
jp
jns
mov
cwtl
mov
pop
hlt
xchg
sbbl
sar
roll
jo
pusha
jmp
jle
int
pop
ret
mov
pop
fdivrs
fwait
daa
xchg
cld
jnp
jg
mov
into
lds
xor
aam
lret
adc
sub
add
cmp
adc
mov
int3
mov
inc
add
cwtl
push
mov
jnp
mull
mov
xor
shll
push
push
sarb
inc
iret
in
xchg
push
or
lret
jb
add
dec
adc
jns
dec
lret
mov
cwtl
stos
stos
add
sbb
jp
in
sbb
loop
mov
jbe
xor
int
and
fdivp
enter
and
enter
insl
sub
js
enter
enter
inc
xchg
xchg
push
mov
cwtl
shl
lea
xchg
sahf
adc
mov
enter
fsubrl
add
ret
push
push
lret
or
in
into
xlat
lret
cmpsb
daa
adc
and
in
or
push
and
jmp
lret
loopne
push
insl
xor
mov
mov
xchg
arpl
mov
inc
add
mov
lea
mov
sahf
push
rolb
in
inc
push
aad
in
mov
mov
gs
push
dec
ja
push
roll
xor
mov
adc
loop
pop
and
enter
push
push
xchg
shr
movsb
je
lods
mov
roll
mov
cltd
mov
ljmp
ret
xlat
mov
loopne
rorb
mov
clc
or
mov
cmp
shlb
push
add
mov
mov
es
xchg
nop
push
aam
mov
xor
or
jae
dec
lods
mov
xchg
xchg
mov
lock
cwtl
push
enter
shrl
hlt
sub
iret
roll
adc
push
add
inc
mov
xor
push
sbb
es
mov
xchg
pminub
mov
cmp
arpl
mov
mov
push
or
xchg
fdivrs
sub
les
and
mov
dec
pop
mov
es
inc
arpl
out
fs
iret
call
pop
fdivrs
cmp
stc
int
mov
adc
jbe
jle
or
add
cmpsb
sub
cmc
add
add
sar
shl
inc
ret
mov
out
sub
cmp
lock
out
sbb
cmp
loop
adc
pop
pusha
shl
loopne
cmp
out
mov
dec
inc
loopne
push
vpmacsdql
cmp
or
rol
js
sbb
in
pop
fdivrs
into
lds
jle
ljmp
sti
in
cli
jp
in
addl
mov
dec
or
popa
pop
addr16
je
ja
xchg
or
clc
cli
xchg
adc
lea
cwtl
push
call
ds
mov
loop
ds
push
mov
call
adc
add
rolb
sub
mov
int
sub
loop
ret
pop
out
ja
in
cmp
xchg
je
cmp
cmc
xor
pop
pop
lcall
in
inc
fcmovu
subl
add
insl
movsl
int
sahf
les
pop
mov
aad
rcrl
cmp
enter
xor
cmc
dec
xchg
leave
xor
jmp
lock
cmp
adc
mov
adc
xchg
xchg
popf
in
iret
fwait
pop
push
pop
in
cmc
fcompl
fisubs
mov
inc
add
ror
iret
xlat
pop
jo
fbld
es
push
aas
shlb
rolb
mov
mov
out
xor
xchg
movsl
es
inc
shll
mov
fs
dec
dec
jp
inc
sbb
sub
jmp
dec
mov
pop
jl
iret
js
in
iret
pop
push
test
sbb
add
in
and
xchg
pop
add
ror
cmp
ja
sbb
sbb
cmp
pop
sub
in
mov
add
add
jl
cmp
stos
movl
idiv
repnz
mov
xchg
les
xchg
imul
or
jae
pusha
adc
shlb
imul
loopne
sbb
mov
fs
sbbl
cvtps2pd
push
cmp
enter
aas
sti
mov
cmp
push
jmp
mul
xchg
jns
jae
xchg
cmp
jae
rcrl
call
lock
jmp
ficoml
inc
inc
pusha
movsb
mov
into
mov
cltd
iret
ss
mov
mov
xchg
loop
mov
into
mov
dec
loope
in
and
bound
mov
cmp
faddp
lock
jns
idivl
adc
call
fistps
in
stc
orb
arpl
fucom
adcl
pop
les
add
mov
aad
jb
aam
nop
inc
cwtl
push
repz
repnz
mov
or
adcb
out
cwtl
xchg
in
inc
xorb
mov
rorl
es
push
xchg
mov
push
iret
out
inc
sahf
dec
lods
mov
or
cmp
hlt
js
fmulp
lods
push
mov
mov
fistpl
pop
push
push
xchg
je
or
inc
jmp
scas
pop
testb
jb
and
shrl
clc
xchg
mov
nop
popa
fucom
movl
mov
sahf
push
adc
xchg
pop
divb
leave
pop
dec
mov
add
ja
inc
fdivrl
xor
push
std
popa
mov
mov
dec
push
mov
repnz
mov
add
in
rcll
inc
cmp
mov
pop
out
xor
inc
sbbl
mov
cmp
sub
in
test
into
jp
incb
mov
mov
movsb
jnp
push
push
mov
dec
sub
mov
mov
lret
pop
add
loopne
es
fidivs
mov
in
into
lea
popw
rolb
jecxz
cld
jle
add
xchg
out
mov
dec
movsb
mov
mov
imul
imul
mov
jg
push
js
inc
cmp
mul
xlat
loop
mov
mov
loop
mov
xchg
inc
sub
jecxz
push
ret
lds
xchg
mov
repnz
pusha
fdivs
call
in
jae
push
mov
pop
add
add
repnz
and
push
adc
aas
nop
and
ja
mov
aas
testl
jno
add
inc
and
fs
sub
mov
add
jl,pn
ss
add
test
mov
mov
idivl
inc
pusha
in
sub
pop
sub
fmull
add
std
out
push
sahf
in
pop
into
iret
mov
inc
mov
adc
push
lods
push
jp
or
mov
push
mov
rcrb
sub
push
add
lret
int
testl
loope
lock
and
clc
push
mov
stos
cld
les
mov
xchg
mov
loop
xchg
push
repz
cmp
jmp
ja
pop
daa
loopne
into
adc
push
mov
mov
mov
lea
ja
or
cmp
cmp
mov
push
cmp
daa
fildll
imul
mov
mov
or
fidivs
fdivrs
push
cmp
xchg
loope
push
cmp
mov
cmp
push
aas
and
xchg
dec
and
ja
fs
pop
loopne
bound
scas
dec
and
call
xchg
cld
rcrb
mov
clc
sbb
les
jg
dec
sub
ja
fdivl
xor
scas
cmp
inc
fcoml
cmp
fisttpll
int3
mov
mov
test
shl
cwtl
sbb
stos
mov
std
jl
fcmovu
gs
dec
inc
fidivl
adc
cltd
fsubrs
icebp
lds
les
sbb
sbb
fwait
xlat
in
lcall
rcrb
loop
sbb
out
xchg
es
sahf
jb
in
iret
pop
pop
ja
cs
sub
sahf
mov
cmpsb
pop
jle
xchg
popa
shlb
xchg
mov
inc
inc
sub
cmp
shlb
push
mov
into
pop
ja
pxor
jo
gs
out
adc
sbb
mov
daa
dec
sub
daa
push
push
out
decb
test
leave
je
std
mov
sahf
mov
mov
add
inc
daa
inc
imul
mov
mov
dec
mov
fucomp
cmp
xchg
mov
and
sub
adc
dec
mov
lret
rcll
mov
lret
rcll
icebp
nop
stos
out
ficoms
test
lods
scas
sbb
fsubrl
mov
inc
sahf
ljmp
imul
push
lods
jo
and
mov
js
in
cmpl
add
sahf
xor
sbb
xchg
push
dec
mov
bound
inc
pop
sub
into
jecxz
mov
stos
sbb
test
pushf
dec
mov
insb
mov
jp
mov
inc
je
in
out
test
leave
sbb
inc
lea
loop
dec
xor
ss
iret
fbld
out
push
lahf
xchg
sbb
out
pop
xchg
push
push
hlt
and
fidivs
fisttps
aam
pop
mov
out
jg
outsl
xor
or
fdivr
cmp
jno
les
sahf
imul
outsb
es
inc
iret
push
scas
jmp
sbb
into
fwait
aas
sub
outsb
push
sub
loopne
push
psllw
cmc
ljmp
test
fisubs
lods
ret
jle
sbb
sub
add
lea
jmp
fcom
cmpsb
js
inc
and
test
pop
pop
sbb
ja
pop
push
sub
not
repnz
pop
fnstsw
pop
mov
xchg
xor
lods
sti
rcr
inc
call
cmovb
cmpsb
pop
out
cld
sub
add
mov
rcl
ret
mov
jbe
sbb
ret
mov
jb
xlat
mov
hlt
jns
popa
mov
mov
mov
stc
push
cmp
repz
inc
xchg
and
adc
cmp
ja
xor
outsb
mov
imul
push
adc
xor
sub
enter
ds
out
rcr
sbb
xchg
aaa
mov
ds
inc
pop
in
sub
mov
and
cmp
sbb
sub
push
mov
inc
call
mov
ret
insl
jg
scas
push
pop
xchg
popf
adc
mov
rcll
lds
push
xchg
ror
ja
loop
scas
aad
js
jnp
xchg
mov
ja
in
fisttpl
dec
cmp
shlb
mov
dec
lcall
mov
sahf
fucom
cmp
pop
lds
push
adc
rorl
sbb
mov
xor
rcrb
cmp
cmp
dec
inc
fbstp
filds
cmp
or
xor
jo
iret
xchg
orb
mov
in
sarb
test
pop
mov
cmpsb
mov
lods
pusha
fs
out
shl
lds
cmpb
mov
jecxz
push
in
int3
or
decb
push
mov
fisubs
inc
jle
push
andb
push
dec
cmp
add
loopne
mov
cmp
into
ss
loop
sub
push
mov
insl
push
or
std
leave
adc
adc
inc
inc
mov
mov
and
push
sahf
arpl
mov
add
stos
mov
notb
dec
sub
ret
and
cmpsb
and
sub
cwtl
loop
push
cli
cs
ljmp
addr16
testb
sub
ror
into
mov
sub
sarb
int
sahf
dec
push
std
jle
push
cld
std
adc
fucomp
icebp
test
imul
notb
rolb
inc
pop
shll
dec
stc
int3
pop
add
ret
lds
adc
mov
jbe
dec
pop
push
fsubrp
mov
add
mov
jnp
enter
mov
pop
inc
inc
inc
add
mov
push
add
loope
sbb
add
mov
pop
sarb
pop
imul
xor
mov
repnz
xor
xor
jl
dec
pushf
lock
xor
fisubrl
jb
cmp
adc
popa
pop
loopne
mov
mov
loopne
faddp
cmp
enter
sahf
js
jno
inc
cltd
and
adc
add
mov
shll
in
mov
hlt
mov
mov
lea
stos
enter
std
and
loope
dec
xchg
in
xor
in
dec
std
out
loopne
mov
std
fcomps
jmp
imul
popa
inc
ja
popa
iret
push
andb
into
push
jnp
popa
jo
fmull
xor
or
or
add
mov
pop
sub
std
push
bound
adcb
cmp
mov
gs
into
jb
lahf
test
xlat
dec
fdivl
pop
popl
mov
mov
pop
cmp
adc
arpl
sahf
push
sbb
inc
adc
dec
clc
xor
int
dec
xchg
iret
stos
into
ds
aaa
loop
aam
or
cmp
xchg
and
jb
icebp
fcmovbe
mov
pusha
push
into
mov
mov
push
inc
lock
mov
clc
cmp
mov
in
adcb
jbe
add
and
dec
dec
cwtl
lret
pop
nop
lock
cmpsl
adc
mov
test
or
xchg
test
cmpb
std
push
out
pop
imul
test
sub
jbe
std
dec
cmp
icebp
loop
pop
and
mov
jp
movsb
mov
jge
lock
mov
xchg
fstpl
xchg
rclb
push
fstl
xchg
adc
xchg
cwtl
outsl
push
xchg
add
mov
pop
push
ja
sbb
mov
push
or
inc
inc
in
xor
cmp
pop
and
cmc
fiaddl
in
adc
cwtl
dec
mov
lret
lcall
fimull
movsl
adc
imul
cmpsb
inc
scas
mov
mov
inc
inc
stos
aas
test
jge
xchg
xor
scas
test
sub
jle
or
das
xchg
push
adc
adc
stc
or
ja
dec
jle
add
pop
or
fiadds
mov
sbb
psrad
pop
mov
mov
mov
pop
jle
dec
xor
jle
add
shlb
cmp
aaa
sahf
adc
xchg
pop
in
sub
xchg
inc
jo
mov
and
xchg
xchg
mov
lods
loop
pop
ret
xchg
ja
fstl
arpl
stos
push
imul
cmp
outsb
lds
daa
je
sahf
dec
pop
xchg
or
fs
sbb
or
mov
inc
mov
pop
clc
aam
jle
fidivrs
or
test
fisttps
repnz
cmpsb
ja
adc
insb
adc
add
xor
testb
inc
pop
xchg
idivb
rcll
data16
sahf
shrb
rcrb
in
in
and
cwtl
sbb
daa
push
cs
int3
fst
cmp
lea
inc
movsl
adc
stc
cmpsb
xchg
into
in
std
dec
cmp
ja
pop
test
loope
mov
push
ficompl
xorl
and
mov
lods
out
shrb
rolb
jmp
mov
out
test
in
mov
es
lea
lock
mov
adc
add
imul
cmp
mov
or
cli
fwait
aas
rcll
jl
lcall
add
and
pop
cmp
ds
fsub
dec
test
ret
outsb
inc
pusha
sub
cwtl
mov
sahf
fs
adc
cmp
in
sub
ss
xorb
jmp
jns
add
int
inc
scas
xchg
jnp
lds
mov
sbb
adc
xchg
pop
mull
stos
mov
and
je
push
inc
je
clc
adcb
dec
push
stos
mov
cmp
rcrb
sti
dec
loop
add
aad
cmp
call
jae
repnz
sbb
mov
mov
cwtl
mov
xchg
mov
lret
gs
ja
pop
stos
mov
add
sub
rcrb
and
in
mov
sbb
push
dec
xchg
adc
stos
pop
pop
ret
test
jle
mov
push
pop
dec
sub
jmp
out
inc
and
out
mov
or
pop
pop
subl
lea
xchg
cwtl
rclb
lock
adc
jp
nop
xor
lcall
fdivrl
in
lret
xor
mov
mov
fists
pop
test
jbe
pop
pop
sbb
or
clc
jne
jg
jp
call
add
mov
inc
jns
or
ljmp
addr16
push
mov
inc
inc
lea
rol
and
aas
ret
aad
xchg
mov
ljmp
mov
ja
jno
cmpsb
add
adc
dec
into
mov
ffree
xchg
cmp
dec
fidivl
add
push
push
lock
push
push
cwtl
inc
sub
movsb
lcall
shrl
inc
cwtl
lret
push
stc
pop
dec
lods
iret
jmp
pop
jbe
popa
hlt
inc
xchg
std
cld
add
and
into
ret
addr16
inc
es
sahf
push
ret
push
sbb
out
rep
and
and
cmp
int
mov
scas
fisttpll
cmp
pop
shrb
fiadds
mov
and
call
mov
pop
in
cmpsb
sub
inc
or
pop
ja
mov
cmp
call
ret
jge
push
arpl
int
jge
push
xchg
insl
into
xor
aas
sarb
mov
cmp
pusha
push
aas
pop
insl
pop
pop
mov
dec
imul
lods
cld
les
dec
mov
dec
cmp
xchg
dec
loopne
cmp
loopne
gs
movsl
sbb
mov
cmpsl
sub
adc
inc
popf
mov
in
pusha
mov
test
xchg
push
xchg
stos
lds
and
in
call
insb
xor
scas
orl
xchg
sbb
mov
cmp
pop
xchg
xor
add
dec
sub
mov
inc
sub
jecxz
add
test
ljmp
sub
add
movsb
xchg
mov
fs
fisubs
pop
repnz
jmp
cmp
mov
popf
cli
mov
adc
inc
clc
enter
ja
jo
adc
ret
mov
cmpsl
arpl
dec
jnp
xor
aaa
adcb
push
gs
ror
xchg
inc
add
pop
rclb
loopne
push
rcll
out
and
jg
sbb
decb
mov
add
repnz
xor
in
sub
pop
aam
popf
sti
fisubl
xchg
pop
inc
movb
mov
test
ror
lahf
xor
or
inc
in
fsts
fcmovb
mov
ds
mov
adc
inc
push
es
les
xchg
jno
cmpl
scas
shll
data16
bound
les
mov
popa
shl
add
jecxz
mov
lods
and
imul
xlat
sarb
insb
fldt
test
xor
jmp
add
mov
push
ret
dec
add
ret
jg
sbb
mov
in
scas
idivb
imul
icebp
jecxz
addl
cmp
jmp
inc
lcall
ret
sub
popa
ljmp
sub
ljmp
dec
push
and
fisubs
ja
enter
into
cmp
bound
push
sub
push
fmuls
cmp
sub
mov
in
stos
in
enter
xchg
lahf
jns
lahf
pusha
js
mov
cmpsb
push
adc
imul
cwtl
mov
jnp
push
jmp
arpl
outsl
pop
aaa
or
ljmp
aas
ret
shrl
popa
xor
push
mov
ss
inc
fwait
lods
incb
popa
push
aad
xor
jmp
in
lea
mov
mov
fnsetpm(287
dec
lea
mov
add
pop
xchg
shlb
shlb
loop
cwtl
push
push
enter
into
test
bound
pop
insb
mov
mov
jne
push
scas
mov
dec
not
cmpl
and
insl
les
adc
xchg
loopne
nop
out
negl
scas
pop
jae
jp
divb
fwait
cmp
cmpsb
mov
xor
and
pop
add
rclb
in
enter
jns
fisubrl
lods
gs
cmp
jb
js
arpl
stos
lret
test
int
mov
mov
jge
mov
cmpsb
inc
movsl
xor
sub
movl
sahf
cmp
ss
aas
scas
iret
lret
pop
dec
fmuls
lods
push
popa
insb
pop
or
push
xchg
lock
aas
mov
sahf
outsl
pop
add
jecxz
inc
imul
mov
lods
fisubs
sahf
jle
rclb
ss
es
pushl
cs
xor
mov
in
mov
xlat
popf
ljmp
xor
data16
inc
das
out
fidivl
sub
lods
aas
sahf
push
push
jecxz
push
sahf
leave
in
sub
mov
in
mov
xorb
in
loopne
jbe,pt
popa
sub
dec
pushf
jle
mov
scas
or
sarl
data16
adc
gs
ljmp
push
clc
xchg
mov
adc
clc
lcall
roll
xchg
cmpxchg
shrb
out
mov
ficomps
mov
lcall
jb
stos
std
notl
das
fists
jbe
loopne
leave
dec
shll
jo
dec
lahf
xchg
sbb
loop
rclb
and
pop
sbb
cmp
mov
mov
rcrb
adc
cmpsb
xlat
clc
sarb
jno
cmp
inc
mov
or
cmp
ja
aam
out
insl
imul
aad
mov
and
jg
mov
inc
mov
je
push
inc
loop
jle
popf
xchg
add
mov
enter
jge
lds
sub
fidivl
lea
pop
adc
inc
lods
jecxz
mov
push
shll
mov
cli
shrl
jmp
ret
mov
ret
mov
ret
mov
in
js
ss
popf
int
or
ret
cmc
in
sahf
sub
movsl
pop
dec
imul
lock
lcall
sahf
inc
sub
lret
shll
fildll
scas
inc
stc
mov
dec
imul
xchg
sub
xchg
mov
popa
xor
sub
sahf
inc
mov
pop
mulb
push
mov
sub
cmp
xchg
ret
pop
inc
int3
mov
add
lahf
mov
push
clc
lret
shl
ljmp
cmp
lcall
call
mov
cwtl
call
push
fmull
mov
rclb
xchg
ret
in
sub
in
in
fwait
pop
rorl
nop
inc
je
inc
loop
pop
hlt
pop
xchg
das
and
sbb
jmp
push
ds
dec
cmp
stos
mov
nop
jmp
adc
adc
lret
adc
mov
jno
mov
sahf
mov
hlt
lret
popa
add
lret
xchg
repnz
add
mov
in
inc
sahf
cmp
push
cli
sub
je
jp,pt
mov
dec
add
ds
rol
lods
sahf
xchg
and
xor
test
test
es
jo
mov
xchg
outsl
popa
cmc
dec
pusha
push
loop
movsl
lcall
mov
in
cmp
jbe
or
mov
and
mov
clc
jb
scas
sub
fsubl
sbbl
sarb
pop
loop,pt
iret
push
mov
xchg
jle
inc
mov
arpl
fidivrs
pop
pop
jns
pop
lahf
mov
hlt
jmp
out
in
xor
jecxz
sbb
inc
mov
aam
lret
sarb
lods
insl
jns
cmp
out
or
jp
shll
cmpsb
subl
cwtl
xchg
cmpsl
and
lods
rclb
mov
push
addr16
push
sahf
hlt
notl
and
push
out
test
arpl
scas
and
aaa
aaa
or
pop
inc
shlb
outsb
pop
jecxz
fsub
and
je
es
xor
mov
stos
and
cmpsb
lahf
mov
push
aad
movsl
push
dec
aaa
mov
dec
fildl
clc
roll
xchg
fidivs
sbb
aaa
negb
dec
mov
aas
test
xor
hlt
loop
adc
out
imul
jmp
mov
shr
jo
int3
sbbb
fsubrp
sbb
fdivrp
lods
test
in
es
jmp
pop
in
popa
mov
sahf
ja
xchg
ds
inc
xor
sbb
mov
int
movl
sahf
idiv
shlb
jecxz
sub
pop
call
sbb
sbb
scas
ja
out
mov
stos
lock
stc
arpl
jmp
mov
xorb
adc
lahf
sahf
cmp
filds
cmpsb
xor
cwtl
cli
pop
fisubrl
mov
icebp
jo
ss
into
add
andb
mov
and
repz
mov
adc
mov
inc
lods
xor
pop
mov
mov
jp
sbb
popf
out
mov
sbb
pusha
fwait
sarb
ret
call
sahf
nop
dec
hlt
out
fnsave
repz
rolb
rcrl
shll
mov
aas
cmpl
lret
xchg
mov
pushf
mov
lea
push
mov
clc
repnz
jb
xchg
cmpsl
into
ret
fwait
inc
call
iret
iret
shll
lea
xor
cwtl
mov
call
cmp
subl
rcr
inc
cmp
mov
inc
bound
stc
rorb
xor
push
scas
ret
ss
inc
fxch
rcrb
aam
xchg
mov
hlt
mov
pop
ret
ss
lea
jno
dec
scas
or
sbb
xor
std
mov
pop
and
mov
ficoms
lahf
xor
xor
popa
lds
xchg
in
out
ret
adc
inc
add
lds
mov
sub
in
add
pop
xor
cli
and
xor
mov
in
shr
mov
imul
addr16
test
call
push
lea
or
lcall
inc
jle
mov
push
pop
and
fisubl
popf
dec
push
bound
mov
pop
in
push
rclb
xlat
gs
iret
adc
out
lea
stos
nop
fildl
scas
jbe
jno
out
push
sub
pop
inc
js
mov
testb
inc
push
fisttpl
or
push
or
add
mov
fadd
ror
aas
movsl
xlat
test
shrb
jns
test
stos
cs
ja
fstl
xchg
scas
adc
jp
rcrl
mov
or
mov
sub
stc
and
rcll
mov
cltd
std
shlb
jle
mov
pop
repnz
mov
add
fwait
lcall
mov
shl
ret
push
mov
rolb
cs
ja
repz
dec
xchg
inc
xchg
fsubrs
lahf
dec
jmp
je
dec
clc
mov
xchg
jo
fisubrs
push
pop
push
mov
jbe
and
adc
xchg
dec
adc
inc
or
inc
std
repnz
mov
xor
fisubl
aas
mov
rcr
imul
clc
fwait
sbb
inc
push
sub
dec
test
jb
sti
jbe
cmp
cmp
xchg
test
loopne,pt
out
ds
testb
sub
popa
mov
pushl
add
pusha
inc
arpl
fists
es
jne
fs
push
inc
notb
lcall
xor
xor
mov
rcl
into
and
lds
push
aam
xchg
push
hlt
push
fcoml
sbb
add
lea
sbb
mov
jno
push
cmpsl
sarb
mov
mov
xchg
out
popa
push
mov
push
xor
daa
aam
rcl
in
push
mov
jge
and
push
jo
int
inc
xchg
subl
pop
imul
aam
ja
adc
pop
shlb
in
cld
repnz
xor
int3
sub
clc
adc
and
sub
mov
cld
imul
ss
adc
loop
mov
fists
loopne
xchg
loop
fwait
sub
out
mov
iret
xchg
xchg
mov
iret
pop
stos
aaa
dec
mov
mov
aam
mov
xchg
icebp
jge
shlb
sub
lret
and
cwtl
loop
mov
fidivs
pop
sarb
mov
insb
mov
jnp
push
mov
loop
push
std
sub
inc
shrb
cli
mov
cmp
mov
mov
out
outsb
mov
push
add
outsb
lret
xor
pushf
ficoml
es
loopne
inc
enter
out
xchg
imul
cwtl
push
setbe
sbb
lahf
dec
sub
pusha
popa
cmp
arpl
xor
in
push
xchg
arpl
mov
add
dec
ss
jle
mov
int
cmp
sub
mov
mov
xchg
push
aas
fsub
out
jecxz
insb
jg
or
fdivs
std
lea
dec
mov
mov
rcl
xlat
mov
mov
mov
les
stc
lret
pusha
insb
inc
inc
int3
les
in
adc
push
inc
xor
dec
mov
daa
std
loopne
jmp
push
push
rorl
call
xchg
push
ljmp
sahf
call
lcall
sub
out
popa
andl
inc
pusha
mov
add
xor
push
pop
or
add
ret
pop
ja
pop
clc
inc
clc
iret
cmp
rcrl
mov
fwait
shlb
push
push
inc
xchg
sub
pop
outsl
jne
jmp
call
das
shlb
cmp
mov
cmpsb
lds
add
cwtl
cmp
loop
xor
inc
scas
xor
call
xor
fdivs
iret
out
xlat
inc
loope
movsl
clc
mov
or
xchg
mov
int
sbb
repz
sub
adc
scas
inc
sub
push
sub
shlb
repz
fistpll
sbb
cmp
cmpsl
adc
and
inc
stc
add
fbld
out
lods
lret
xchg
jge
push
inc
loope
mov
add
int3
mov
test
sti
dec
mov
ror
fs
add
inc
aad
jo
or
cmp
pop
xchg
sbb
xchg
push
push
cmpsb
xor
pop
inc
jecxz
mov
dec
jecxz
negb
sub
shlw
ds
mov
pushf
cmp
xchg
lcall
dec
dec
pusha
notb
push
dec
test
mov
sarl
or
mov
js
jl
push
xchg
mov
xchg
xchg
gs
and
adcl
pusha
jg
sbbb
movsl
out
dec
mov
lock
lcall
push
pop
in
inc
ljmp
mov
dec
cwtl
mov
mov
js
and
scas
hlt
call
and
mov
loop
xor
cli
jg
adcb
xor
std
in
push
data16
push
mov
or
imul
jno
jae
cmp
lcall
sbb
pop
jg
pop
rcr
out
fwait
ja
outsl
cmp
insl
add
pushf
subb
in
jecxz
adc
lcall
cwtl
xchg
lcall
mov
sub
inc
sarl
shlb
jbe
jl
iret
ficompl
ret
fisttps
icebp
in
and
push
xchg
fisubrs
data16
mov
fsubrp
into
loopne
pop
shlb
add
test
es
inc
insb
shr
into
push
mov
ja
sub
shll
out
mov
lock
outsb
adc
adc
movsl
and
jo
test
das
xor
ficomps
ret
mov
cmc
pop
or
or
out
lods
lds
arpl
push
pusha
aam
negl
xchg
loop
mov
jp
sub
ja
shll
mov
pop
push
add
mov
test
adc
mov
ret
pop
stos
stos
mov
and
jbe
add
fs
adc
mov
imul
popf
pop
jae
inc
sbb
hlt
add
add
hlt
jecxz
add
and
out
cmp
mov
mov
and
dec
add
cmpsb
adc
in
dec
lret
add
and
sub
shll
ret
int
cwtl
mov
enter
ds
sti
inc
es
stos
inc
lds
shrb
jp
aam
int
ret
outsb
imul
fidivrs
faddl
xchg
mov
lds
inc
mov
lods
pop
pop
outsb
int3
jbe
dec
mov
movsb
mov
mov
std
test
nop
inc
inc
inc
enter
sbb
imul
cmp
add
scas
adc
aaa
mov
repz
les
mov
xor
pop
icebp
xchg
loopne
mov
in
fisttpl
jbe
push
xchg
popf
je
jno
imul
push
push
pop
aas
lcall
hlt
mov
cmp
or
lahf
sbb
test
test
in
loope
aad
in
cmc
mov
pop
iret
xchg
cmp
out
divb
fsubl
xorl
inc
jnp
rol
cmp
ja
inc
lea
inc
xchg
aas
loopne
daa
jns
leave
push
stc
add
xchg
or
cmc
ret
ja
jb
adcl
and
add
iret
xor
hlt
add
lea
mov
cmc
lods
or
fld1
mov
rorl
and
jg
add
fiaddl
cmp
rcrl
jmp
sbb
lret
sub
cltd
inc
scas
lods
lahf
daa
repnz
testl
bound
cmp
sub
shll
dec
xor
lods
xchg
inc
xor
mov
scas
lea
cmp
fcoml
dec
mov
sub
mov
pop
pusha
jle
test
lock
sbb
and
fisubrs
loop
pop
test
clc
push
mov
mov
mov
fisubrl
loopne
mov
pushl
test
sahf
shl
neg
lea
xor
scas
mov
imul
sbb
add
xor
sbb
loopne
cmp
in
mov
mov
add
xor
mov
cmp
mov
insl
mov
rol
les
mov
loopne
test
std
mov
rol
out
xor
inc
les
aas
lahf
imul
ja
inc
scas
dec
cwtl
and
jg
adc
sbb
retw
lea
lods
inc
jp
and
stos
fiaddl
xor
adc
iret
push
shrl
cs
xchg
outsl
out
lret
add
ljmp
mov
cmp
icebp
enter
aam
lea
inc
inc
cvtps2pi
int3
mov
repnz
das
movsl
rolb
sahf
int3
cmp
pop
scas
fdivl
or
iret
ret
mov
aam
out
jno
mov
mov
fadds
add
psubusb
xchg
mov
lock
sub
and
ds
clc
mov
into
aam
arpl
pop
cli
nop
fsubp
lds
xchg
mov
fidivs
inc
out
or
lcall
rorl
add
fisttpl
jl
ljmp
pop
mov
dec
cwtl
imul
ja
arpl
xchg
and
inc
mov
mov
fcmovne
movsb
dec
iret
xor
mov
mov
imul
jb
lret
aad
lds
and
dec
pop
or
aam
jbe
jecxz
movb
bound
xchg
mov
jl
add
jle
ss
lock
lea
outsb
icebp
clc
pop
pop
mov
insl
add
enter
popf
gs
inc
fidivrs
ds
jnp
mov
mov
add
les
rorb
and
cli
fiadds
into
xchg
jae
ficompl
sahf
fs
jno
imul
push
seta
cmpsb
das
inc
mov
pusha
mov
lcall
jecxz
mov
enter
mov
repz
jne
mov
es
imul
aam
addr16
push
push
jp
xchg
cmp
fmuls
mov
les
cmpsl
adc
push
jg
ret
mov
cmp
cmpsb
ljmp
xchg
mov
xchg
hlt
lret
int
loopne
mov
sarb
push
add
pusha
data16
sub
jnp
ret
pop
jno
sbb
ret
cmp
imul
push
fdivr
jbe
inc
jnp
stc
aam
sbb
inc
cmp
and
xor
ss
cmp
cmp
fs
add
stc
loopne
ja
decb
lahf
add
xchg
scas
addr16
pop
add
mov
sbb
mov
mov
sti
jb
sbb
popa
lds
inc
into
fildll
pop
loop
int3
cmp
into
sahf
and
sahf
xor
mov
test
mov
jno
xchg
push
push
mov
inc
adc
mov
dec
adc
outsl
mov
std
mov
sub
jae
and
in
or
jmp
mov
sbb
dec
and
lcall
dec
int3
sarb
iret
dec
loop
outsb
ss
pushf
pop
mov
sar
loopne
fisubs
cmp
dec
add
mov
mov
and
or
jle
shl
ss
add
sti
int
or
jae
or
add
icebp
les
push
in
pushf
xchg
outsb
mov
xchg
aad
mov
mov
scas
ss
movsb
mov
aas
jecxz
nop
fiadds
pop
es
shlb
mov
leave
lods
fcomip
sbb
cltd
mov
push
jbe
ret
mov
add
sub
or
add
sub
sub
ror
mov
lods
pop
fisttpl
test
popa
or
mov
add
xchg
cld
jo
jp
nop
movsl
mov
sahf
dec
movsl
dec
fdivrl
mov
roll
lea
and
fstpt
push
mov
add
ds
mov
sarb
leave
xchg
mov
movsl
push
adc
repz
mov
mov
int3
add
jg
or
adc
data16
xor
in
cli
int
scas
sbb
mov
hlt
js
scas
push
scas
cmp
cwtl
in
sub
ret
ds
movsl
adc
xchg
ret
ret
pop
xlat
xchg
fdivs
mov
sub
sub
loop
lea
cmp
sub
inc
mov
fildl
push
jnp
bound
into
pop
sub
pop
push
adc
inc
movsb
mov
push
iret
fildl
push
xchg
orb
stos
mov
jae
add
or
mov
add
scas
and
add
cltd
cmp
mov
popa
repnz
push
cmp
cmp
jl
sbb
icebp
popa
dec
sub
xchg
pop
fistps
jnp
push
cltd
lahf
aam
xlat
ds
scas
xchg
lahf
aad
cwtl
pushf
lcall
mov
enter
cmpsl
xorb
lods
lds
ss
adc
scas
ljmp
cltd
sarl
popf
xorb
xchg
je
and
lea
xlat
dec
lods
es
ret
xor
call
mov
stos
add
subb
pop
lock
cmc
adc
test
push
js
ret
push
jo
cld
lea
mov
sub
cmpsb
out
inc
mov
push
adc
add
int
mov
add
into
push
and
jg
inc
aam
ja
jmp
add
or
js
dec
mov
mov
icebp
loop
lret
add
daa
jo
fldt
or
or
mov
into
add
sbb
adc
mov
adc
mov
and
sbb
inc
ret
clc
movsl
sbb
bndldx
iret
into
jbe
popa
mov
subl
addr16
jge
xor
push
cltd
xor
dec
sbb
push
dec
pop
test
sbb
mov
test
iret
xor
rol
mov
pop
test
into
xchg
xchg
testb
data16
out
mov
frndint
mov
data16
pop
jb
fcompl
mov
and
jge
shrl
roll
mov
sub
es
add
mov
push
ja,pt
push
or
push
loopne
sub
and
xchg
ja
jns
sbb
cwtl
pop
rclb
xor
lcall
mov
fwait
out
enter
xlat
pop
aam
sbb
jle
je
add
push
or
pop
inc
push
jno
jle
mov
int
push
outsb
shll
jecxz
push
pusha
fiaddl
pushf
xchg
testl
and
out
aam
xchg
stos
fsub
enter
movsb
or
add
cmp
das
arpl
inc
bound
mov
push
inc
push
push
cmp
idiv
fidivs
loop
scas
mov
into
push
mulb
cli
stos
fcom
movsb
dec
test
adc
lahf
cmpsl
movb
push
outsl
scas
int3
les
pop
ret
adc
cmp
ret
xchg
lahf
and
fdivl
adc
xchg
add
inc
jne
fidivl
xor
out
aaa
in
xchg
mov
out
sti
imul
gs
or
loop
mov
add
repz
jecxz
lcall
pushf
testb
inc
sbb
gs
xlat
jp
xor
popa
or
push
cmpsb
push
fistps
inc
mov
dec
je
cltd
fwait
pop
sub
sbb
dec
imul
ljmp
int3
mov
shlb
push
enter
pop
cmp
pushf
add
cmp
mov
mov
adc
cs
pop
fdivs
xor
loop
or
inc
mov
and
shrb
cwtl
in
clc
ds
enter
adc
popf
shlb
lea
ja
sbb
pop
xchg
test
mov
jbe
shrl
scas
out
xchg
ja
fadds
in
mov
int
pop
shll
addr16
xchg
ss
mov
or
cmpsb
popl
sbb
cmp
in
cmp
xor
lret
push
xor
cmp
lds
cmpsb
clc
lea
xlat
aaa
push
ds
adc
aam
mov
add
mov
arpl
pop
scas
add
mov
fs
fsubs
outsl
or
pop
decl
sbb
push
inc
pop
lea
into
sarb
cmp
fidivs
aam
lea
mov
bound
stos
adc
mov
jp
scas
aas
test
mov
int
ds
jne
mov
imul
out
and
in
push
gs
pop
jp
into
xchg
dec
popf
or
sbb
push
les
in
rcll
xor
mov
cwtl
inc
xor
push
adc
push
fs
testb
mov
shrl
stos
rcrb
lock
repnz
adc
mov
sbb
mov
ret
and
jb
push
test
enter
push
rcr
mov
jmp
fidivrs
adc
clc
lock
lods
mov
push
imul
lds
mov
out
jae
imul
aas
mov
into
lods
cmpsb
rcll
pop
add
mov
ret
and
not
sbb
add
int3
add
cld
into
aad
aas
pop
stos
lea
lahf
inc
insb
mov
js
fisubl
mov
dec
jo
sti
push
test
insb
enter
cwtl
gs
fdivs
aas
xor
lds
clc
cmpsb
stos
test
cmpsb
lret
pop
xchg
sbb
shl
push
into
and
lret
cmc
mov
xchg
adc
loope
inc
pop
cli
sbb
xchg
idivl
mov
inc
mov
push
add
popf
in
mov
fwait
sarl
add
enter
jno
mov
jbe
out
aas
or
add
movsl
pop
dec
out
and
outsb
rolb
adc
test
sbb
call
jae
dec
or
cs
sub
icebp
adc
out
loop
arpl
out
push
xchg
sbb
in
xor
dec
jne
mov
fadds
sub
pop
xchg
ss
ficoms
jle
jmp
movsl
mov
xor
decl
lcall
ljmp
ds
iret
sub
add
ds
call
cmc
mov
dec
movsl
inc
push
push
inc
push
dec
push
sbb
inc
mov
add
xor
imul
xchg
les
sbb
out
mov
jbe
imul
push
loopne
cmp
movsb
sahf
iret
xchg
mov
iret
out
rorl
into
sti
loop
lcall
les
mov
mov
sarl
cmp
mov
sbb
xor
mov
jle
and
lods
mov
inc
nop
push
cmp
cmpsl
les
jb
es
mov
push
cwtl
lahf
mov
mov
bound
scas
sub
sbb
add
mov
xchg
test
adc
cmpsl
adc
aas
xchg
into
mov
ss
popw
mov
sbb
mov
scas
int
iret
loopne
fucom
in
fldl
cmpsb
ja
ret
enter
dec
cwtl
push
rcrl
push
das
dec
dec
enter
decb
push
jle
imul
das
jmp
sarl
inc
dec
xor
stc
mov
mov
push
cwtl
ret
mov
icebp
jecxz
xchg
xchg
bound
mov
jge
ljmp
mov
addl
aas
xchg
cmp
pop
cmpsl
xor
les
loop
xor
cltd
cmp
lcall
inc
stc
jne
in
mov
ss
sar
mov
idivb
jl
mov
imul
mov
repnz
xchg
aad
outsb
roll
in
les
rcr
call
mov
insl
mul
iret
rorb
jmp
fists
rorl
mov
rcr
in
bound
movsl
mov
push
outsb
test
out
lods
ljmp
into
jmp
push
or
push
enter
cwtl
pop
mov
mov
in
gs
out
les
sub
sbb
out
inc
dec
dec
test
fnstsw
ds
sub
std
js
mov
cmp
ja
jae
pop
data16
sub
inc
addb
xchg
xchg
or
xor
fcmove
int3
cltd
pushf
xchg
dec
pop
dec
ds
cmp
adc
stos
mov
add
pop
fs
imul
mov
xor
jo
ds
add
sahf
mov
push
pop
add
mov
xchg
pushf
add
xchg
rorl
mov
into
mov
push
mov
gs
popa
out
jae
pop
mov
loop
out
arpl
mov
sub
add
cmp
dec
add
out
mov
pop
dec
mov
mov
xchg
jns
adcl
mov
enter
lock
fdivrl
dec
xchg
ds
pop
pop
test
aam
dec
movsl
fs
call
or
or
xchg
dec
jno
arpl
xor
decb
aam
pop
xchg
loopw
fisubs
mov
lods
shr
jo
jno
sti
xorl
mov
mov
and
sar
out
fbstp
jle
ja
or
imul
cmp
xor
movb
lahf
sahf
jns
call
cltd
adc
push
les
scas
inc
dec
add
add
cwtl
push
adc
fidivs
cmc
dec
movsl
and
xchg
fistpll
sub
mov
or
dec
cwtl
loop
jo
adc
push
cmp
mov
dec
xor
rclb
xchg
mov
dec
stos
loop
movsl
into
dec
rcr
dec
push
ret
movsb
shrb
add
push
test
fimull
scas
push
sahf
in
mov
add
mov
scas
shrb
push
scas
data16
fcmovbe
lea
inc
sub
mov
popa
or
pop
push
hlt
js
aam
lods
pop
aad
in
adc
xchg
pusha
push
mov
movsb
enter
loop
stos
mov
icebp
jo
mov
into
xlat
aad
imul
fnstenv
add
stc
sbb
imull
imulb
add
enter
sbbb
or
inc
mov
sbb
push
pop
imul
ljmp
dec
cld
and
pop
incl
mov
out
sub
repnz
in
jbe
mov
jne
es
add
xchg
pop
and
mov
and
insb
mov
out
movsb
pop
xchg
push
or
push
cs
push
int3
outsb
fsubrl
lds
sub
add
scas
or
sub
adc
test
arpl
cltd
add
mov
jg
sbb
pushf
es
ja
ret
loopne
sbb
cmp
clc
lds
mov
scas
je
or
mov
aam
jno
fsts
fidivl
adc
sarl
push
testb
int3
inc
into
mov
sub
pop
xchg
mov
addr16
inc
ja
mov
mov
dec
or
pop
xor
inc
add
dec
movsb
mov
out
cwtl
ja
sti
movsb
andl
lcall
test
inc
jp
aam
popf
or
mov
mov
inc
dec
imul
pop
sbb
repnz
aaa
popf
loope
lods
ficoml
mov
fwait
push
sti
adc
sahf
call
adc
je
ds
into
sub
cli
iret
pusha
inc
mov
dec
pop
cmp
push
inc
xchg
mov
xor
ds
jmp
mov
xchg
cmp
or
das
aam
ja
cmp
pop
addl
cmp
sub
es
int3
decl
rcrl
daa
cmp
dec
test
push
mov
loop
push
popa
xchg
les
iret
pop
popa
outsb
outsb
stos
mov
int3
dec
out
dec
inc
aam
fsubrp
inc
shlb
ret
outsl
adc
lret
ja
fs
insb
outsl
pop
imul
int3
sahf
hlt
pop
push
mov
push
ret
mov
loop
add
jnp
imul
add
mov
enter
mov
gs
xchg
adc
movsb
gs
neg
sahf
outsb
addb
daa
pop
inc
inc
shl
adc
inc
pop
xor
movsb
fmull
cmp
sbb
or
pop
pop
inc
adc
mov
mov
out
pop
mov
gs
aaa
fidivrl
in
jg
cmp
dec
movsb
pop
mov
mov
xor
xor
xor
iret
cmp
cmpsb
push
jl
mov
sbb
add
jp
pop
cli
arpl
pop
sbb
lods
inc
mov
rcll
into
ret
insl
inc
lods
sub
mov
out
cld
enter
or
pop
aam
push
mov
shrb
inc
cmpsl
cmp
loope
pop
pop
mov
nop
inc
pusha
outsb
js
loopne
adc
imul
shll
fisubl
inc
out
stos
fwait
jb,pt
fs
aam
ja
and
imul
pop
mov
in
cmpps
inc
ss
push
inc
out
in
movsl
cld
xchg
pop
fiaddl
incb
es
ds
or
inc
lock
fidivs
cmpsb
cmp
mov
lods
ds
shll
jb
cli
jg
imul
rcrl
mov
jnp
les
xchg
les
pop
mov
pop
fiaddl
test
pop
dec
inc
sbb
repz
iret
cmpl
sahf
push
data16
mov
xor
cmp
jo
xchg
and
arpl
xchg
jae
lods
inc
stc
iret
clc
hlt
pop
and
clc
sbb
cmc
mov
fcmovu
mov
enter
push
insl
daa
ljmp
add
sti
dec
add
mov
mov
inc
pop
ss
shll
fldcw
dec
ja
dec
adc
adc
mov
aas
xor
fisttps
push
into
int3
int
inc
les
daa
out
in
jb
adc
mov
arpl
jo
inc
mov
ror
es
add
mov
sbb
pop
mov
rolb
int3
sbb
jno
les
sub
jecxz
mov
adc
adc
popa
xchg
ja
sbb
clc
mov
jbe
add
ret
cmc
cmpsl
sahf
adc
ja
jmp
fimuls
js
in
xor
xchg
ret
jmp
ror
adc
in
mov
call
xor
mov
sub
pop
push
mov
mov
mov
jl
lea
fdiv
notl
cmp
ss
cmp
xor
xlat
cs
loope
mov
cmpsb
mov
mov
in
cmp
enter
adc
daa
lock
in
xor
cs
fnstenv
loop
cli
mov
inc
stc
add
insl
sub
imul
adc
fnstenv
faddp
dec
das
ficoml
sbb
fs
test
and
call
jo
ds
pop
cwtl
fidivrl
je
add
cmp
and
mov
out
popa
stos
data16
outsl
pushf
cmpb
mov
shll
xor
imul
aaa
roll
mov
lret
and
push
idivb
addb
loop
pop
inc
test
jbe
enter
fisttps
adc
insb
loop
int3
aaa
out
lahf
cs
arpl
push
sahf
adc
test
inc
xor
scas
idivb
inc
sahf
into
idivb
lods
push
lea
mov
lods
jb
inc
pusha
popa
mov
sub
cmp
pop
xchg
push
je
add
adc
pop
sub
add
add
add
dec
mov
mov
loop
or
xor
add
mov
and
popa
cmp
sub
in
jo
and
lds
dec
ret
repnz
es
loopne
fadds
xchg
es
iret
dec
adc
push
imul
xchg
dec
xor
dec
and
pop
mov
xor
add
fdivl
xchg
xchg
mov
je
sub
or
js
mov
xchg
dec
pushf
movhps
ficoml
push
test
adc
cwtl
in
lret
popa
lods
push
inc
and
out
ljmp
xchg
sbb
insl
xor
push
bnd
cmp
mulb
fdivs
xchg
dec
mov
cmp
lret
shl
shlb
and
int
lahf
fdivr
sub
mov
lret
sbb
lock
pop
push
push
xor
ss
sbb
mov
stos
sbbl
or
fsubs
push
or
sbb
cmp
sub
fwait
in
pop
jb
fldt
pop
pop
add
pop
pop
ja
dec
sub
data16
mov
dec
sub
sbb
or
hlt
add
inc
jno
jg
mov
mov
mov
repz
cli
dec
lods
filds
movsl
jbe
dec
fisubrl
scas
sarl
les
inc
xchg
dec
xchg
add
rcl
fisttpll
jge
fcmovnbe
imul
int3
pop
fists
jb
add
clc
divl
lea
loop
pushf
sub
mov
xchg
cmp
scas
ds
mov
sbb
and
stc
dec
fmul
scas
in
ja
lcall
lcall
int3
or
popa
out
testb
cmp
push
lock
pushf
nop
test
in
jo
and
inc
cmp
loopne
xor
fs
aaa
loop
mov
lds
sahf
loopne
sub
mov
into
stos
add
sbbb
or
xor
testl
sbb
jg
mov
loope
add
and
push
loopne
mov
in
adc
sub
fldl
inc
cmpsb
push
shrl
ds
add
mov
arpl
pop
sqrtps
rol
add
loopne
cmp
jp
jecxz
sub
dec
shr
lds
fistps
out
mov
bound
push
inc
adc
dec
inc
xchg
adc
movsl
adc
pop
dec
mov
mov
ss
bound
and
into
in
sarl
or
sbb
mov
rcrl
movsb
mov
sti
pop
jo
data16
fneni(8087
or
out
and
pushl
or
pop
fbstp
xor
pop
sbb
lds
dec
das
or
out
bound
sahf
sahf
rol
sbb
mov
arpl
in
cld
shll
les
mov
clc
dec
push
jbe
or
mov
jo
cld
push
push
test
leave
lock
hlt
and
jmp
sub
sarb
xchg
scas
testl
pop
pop
data16
mov
push
mov
mov
sbbb
push
andb
std
or
ss
mov
inc
flds
or
outsl
xchg
fsubl
aam
mov
rolb
into
rol
test
lahf
sahf
fidivs
movsb
adc
popf
lods
loop
insb
mov
testl
push
jle
scas
xor
test
push
sarb
les
aam
in
pushf
lds
or
fstpl
loopne
sarb
enter
add
hlt
fcmovb
lods
scas
cld
inc
cmp
jbe
adc
xor
sbb
arpl
ss
in
dec
fwait
in
mov
push
jae
inc
mov
adcb
js
loop
xchg
and
cli
jbe
cwtl
lods
ret
cmp
push
lock
and
cs
xor
mov
outsb
mov
sub
push
dec
clc
ret
ljmp
cmpb
add
pop
inc
arpl
out
call
push
fistl
clc
add
out
jg
xorb
xor
push
lea
or
lahf
pop
test
add
les
stos
call
inc
or
clc
jmp
sub
mov
negl
add
push
scas
sahf
fdivs
jecxz
sbb
loop
jbe
movsb
ja
stos
jmp
mov
xchg
cmp
pushf
fimuls
dec
pop
test
dec
xchg
fs
test
cmp
popa
mov
mov
movl
int3
sbb
xor
push
push
adc
pop
mov
xchg
fmulp
mull
cwtl
mov
enter
and
es
pop
xchg
iret
push
push
clc
add
stc
call
mov
into
jecxz
mov
pop
pusha
jb
outsb
loopne
iret
popf
xchg
dec
addb
jp
roll
or
or
xchg
cli
popa
mov
mov
les
dec
cmc
adc
movl
rcrl
pushf
and
adc
sub
jo
rcrb
mov
arpl
cli
jmp
es
pop
xlat
fidivl
inc
lea
push
loope
mov
in
jbe
xchg
aaa
mov
adc
push
dec
gs
jbe
lahf
arpl
or
mov
mov
into
mov
inc
pop
test
jl
repnz
pop
imul
in
jb
mov
les
test
inc
data16
push
pop
in
lods
aam
dec
sub
imul
jle
cwtl
ja,pt
clc
stos
sub
sbb
out
mov
idiv
mov
pushf
outsb
shll
xor
in
mov
ja
sahf
mov
shl
push
adc
lcall
mov
leave
mov
jmp
lret
mov
jmp
mov
fwait
popf
dec
rcl
stos
xorb
jo
bnd
inc
ficoml
and
and
out
mov
mov
jg
add
lea
mov
push
mov
dec
imul
and
out
es
stos
cmp
cld
or
mov
outsl
push
add
push
test
add
imul
sub
add
mov
cmp
in
int3
push
jle
ficoms
sbb
sbb
mov
mov
xchg
lds
out
cmp
iret
loopne
pop
fstps
clc
jle
add
pop
or
jmp
mov
int3
inc
mov
cld
fucomp
cmp
mov
mov
popf
lcall
pushf
hlt
gs
mov
movsb
orl
test
sahf
push
je
sbb
lock
pusha
pop
dec
inc
cmp
push
popf
sbb
shlb
jle
push
lea
out
scas
aam
mov
call
out
mov
mov
ljmp
test
out
or
adc
imul
scas
sub
push
nop
mov
push
adc
sub
jns
test
sbb
lods
clc
push
mov
mov
ds
gs
imul
cwtl
inc
rcl
arpl
add
idivb
out
xchg
mov
adc
sbb
mov
into
or
pusha
les
xor
inc
cmp
loope
mov
mov
cwtl
jge
inc
mov
iret
movsl
sbb
and
popf
adc
lea
cmp
jbe
or
mov
fsubrl
mov
popa
push
dec
inc
into
cmp
jo
xchg
xor
sbb
call
inc
push
sub
pop
call
xor
mov
lock
cmp
or
mov
in
push
shll
xchg
out
jb
pusha
sahf
in
pop
mov
ljmp
movsb
ficoms
nop
xchg
je
xchg
fstps
mov
jecxz
mov
ret
or
into
ja
cld
add
push
dec
push
ljmp
dec
pushf
cmp
pop
sub
jne
dec
dec
pop
fidivl
in
into
dec
outsl
xchg
arpl
pop
lea
call
xor
cmp
and
pusha
mulb
adc
nop
mov
test
aam
scas
lret
xor
in
stos
out
mov
sbb
jge
adc
cmp
add
inc
or
dec
xchg
dec
or
sbbl
push
inc
xchg
popa
mov
loopne
nop
sbbl
inc
lea
jae
push
jnp
sar
out
movsb
xchg
stos
loop
adc
shll
ja
addr16
mov
mov
js
movsl
clc
cltd
sar
add
ret
xorl
outsb
mov
cs
dec
cmp
sub
inc
pushf
pushf
cmp
cmp
ja
jo
push
ret
add
mov
xor
lea
inc
push
mov
pop
adc
mov
cmp
lods
and
popf
imul
arpl
mov
scas
lcall
out
cmpsl
jl
rcl
cmp
pop
lock
aam
dec
sbb
scas
shrb
mov
jg,pn
or
jne
imul
cmpsl
xchg
mov
pushf
aad
out
test
adcb
cmpsb
mov
mov
mov
jb
das
mull
add
lods
mov
arpl
sub
div
rcr
jg
sbb
enter
aaa
ss
enter
js
shlb
ja
jl
imul
iret
mov
outsl
les
in
mov
push
aas
scas
sti
xchg
bnd
pop
xor
sbb
sbb
xor
out
push
mov
test
xchg
lret
shl
pushl
popf
icebp
dec
inc
sbb
dec
mov
rcl
xchg
jp
addb
insb
mov
in
ss
ja
ss
or
fwait
or
inc
adc
fs
mov
dec
push
aas
mov
into
sahf
int3
sbb
es
and
mov
push
stos
out
xchg
shlb
xchg
mov
cwtl
lret
xchg
inc
stos
and
pop
stos
dec
or
xchg
shl
lock
add
mov
xor
sbb
mov
pusha
or
inc
xchg
mov
and
out
and
xor
sub
mov
adc
jbe
loop
stos
ja
xor
repz
aam
ds
sahf
std
scas
jmp
mov
mov
dec
mov
mov
mov
es
movsl
pushw
cmp
stos
sahf
test
rorl
clc
mov
cmpsb
test
shrl
je
rcrb
ds
fldenv
mov
rolb
ja
jge
inc
stos
dec
or
add
xorb
sbb
xchg
mov
jl
cld
dec
rcll
mov
les
ret
dec
mov
lahf
cmpsb
xor
cmp
leave
pop
xchg
insb
inc
iret
mov
insl
int3
les
rol
repnz
hlt
cmp
mov
fcoml
ss
xchg
fmull
movl
lahf
repnz
xor
mov
ja
sbbb
cmp
adc
cmp
add
movsl
mov
das
leave
mov
popf
or
xor
inc
out
aaa
inc
lock
xor
je
ja
stos
dec
xor
addb
mov
pop
icebp
fsubrs
jg
cwtl
lea
xor
add
rclb
mov
adcl
xor
aam
push
xor
inc
loop
inc
cmp
dec
lea
ja
lods
in
mov
aam
cmpsb
das
mov
outsb
cltd
jmp
ljmp
adc
add
xchg
int3
cwtl
mov
fldenv
and
inc
loope
mov
ss
mov
mov
clc
roll
jnp
outsb
outsb
loop
imul
outsl
out
inc
ret
mov
xlat
nop
ficoml
into
xchg
fstps
dec
pop
js
pop
add
ret
aaa
sahf
mov
test
sbb
je
enter
ljmp
roll
fcmovu
and
xchg
hlt
aas
mov
fiaddl
cli
lea
fcmovu
lret
les
jl
sbb
pop
fcmovu
push
iret
aam
inc
jb
lahf
xchg
dec
sbb
aas
stos
data16
adc
ret
pop
cwtl
enter
sub
add
mov
push
xchg
add
add
loop
test
aam
and
jecxz
lahf
mov
mov
clc
push
cmp
push
lea
and
scas
std
or
sub
repnz
test
inc
push
loop
mov
mov
roll
push
pop
xchg
test
bnd
cmp
hlt
sub
pop
add
add
xchg
nop
cmc
dec
shlb
jo
in
xchg
cmp
cli
fidivl
loopne
xor
jne
mov
mov
fwait
xor
cs
addb
cmc
or
fcmovnbe
imul
loope
xchg
mov
loope
xor
sahf
sub
pop
cmc
or
inc
in
sahf
std
dec
inc
jb
lea
iret
iret
cwtl
jg
je
insl
into
stos
mov
incb
pop
fistl
cmp
push
outsl
and
in
jae
sti
fwait
mov
sbb
sbb
fstpl
cwtl
imul
xor
jb
js
negl
ja
mov
fimuls
push
roll
fcmovnu
pop
mov
fistl
loop
pusha
xchg
mov
inc
xor
xchg
sar
es
ljmp
orb
shrb
loopne
add
push
adc
cld
fidivl
ja
sub
repnz
sti
add
cwtl
mov
mov
or
sub
addr16
daa
mov
sbb
dec
xchg
and
cmpsb
dec
enter
add
xchg
jle
mov
rcrb
pop
add
mov
nop
xchg
inc
nop
xor
ljmp
lea
cmp
push
sahf
push
pop
sub
adc
sbb
out
xor
dec
pop
xchg
jns
call
inc
in
pushf
dec
scas
clc
sahf
ds
outsl
jns
pop
jnp
xchg
jmp
pop
adc
out
or
mov
out
rcll
or
lret
xchg
das
add
divb
sbb
dec
jne
insb
cmp
ret
imul
add
pop
pop
std
gs
sahf
outsl
sar
fists
fs
xchg
push
mov
arpl
mov
outsl
or
int3
dec
pop
mov
aad
icebp
push
negl
bound
scas
mov
inc
mov
arpl
bound
mov
test
sbbl
ss
xor
add
push
aam
xor
mov
inc
lea
cltd
outsb
xor
dec
sub
cmp
stos
or
fildll
add
scas
or
mov
sub
xor
sbb
es
movsl
leave
int
int
das
mov
ficoms
pop
ret
mov
mov
mov
rclb
cmp
sub
jmp
js
lea
push
xor
inc
mov
in
cwtl
push
xchg
push
mov
fidivl
mull
shll
iret
sub
add
fcomps
sarb
mov
leave
mov
cltd
dec
scas
dec
push
gs
jb
xor
cwtl
fcompl
in
ss
into
mov
xchg
fs
xchg
xchg
std
loopne
loopne
dec
sti
in
hlt
and
out
sub
dec
es
dec
mov
sbb
int3
pop
jae
jb
push
sub
mov
jle
push
cwtl
hlt
lock
lret
or
sarl
mov
mov
js
and
xchg
test
sarl
in
push
dec
and
add
adc
or
push
data16
mov
lea
push
aaa
cmc
aad
xchg
pop
mov
inc
jge
faddp
loope
add
inc
iret
mov
sub
rolb
into
les
test
loop
sti
sbb
in
mov
jecxz
ficompl
inc
sub
xor
mov
ja
cmp
mov
leave
bnd
jge
cli
dec
or
or
pop
mov
jle
fnstsw
loope
mov
iret
xor
out
push
nop
out
test
lods
push
mov
je
mov
pause
xchg
push
dec
pop
jmp
adc
ja
repnz
jle
xlat
adc
xor
icebp
mov
insl
jo
and
jbe
aad
ja
pop
pop
incl
pop
ret
repnz
mov
fdivl
aad
fwait
xchg
test
test
sub
adc
push
jns
fiaddl
inc
adc
mov
fidivl
inc
std
orl
sbb
in
lret
insb
pusha
xchg
hlt
add
push
lahf
mov
clc
adc
inc
or
out
dec
mov
ja
xchg
insb
ja
xchg
cmc
sbb
add
ja
mov
je
push
dec
add
fisttpll
sarl
mov
add
call
loope
in
js
jmp
xchg
jg
or
nop
dec
popf
addb
rcll
into
dec
mov
inc
out
pop
imul
pop
mov
lret
daa
mov
jae
pop
shll
sbb
rcrl
pushf
sub
xor
add
cmp
mov
cmc
movsb
sub
push
mov
cs
clc
add
icebp
sub
and
imul
and
xor
push
pop
out
pop
and
fcoms
out
or
lock
cli
mov
inc
lea
int
inc
ficoms
mov
sub
fbld
ljmp
stos
ja
dec
inc
rcll
sbb
xor
ror
loop
sbb
movsl
cmp
push
shl
mov
ficompl
and
enter
fisubrl
pop
xchg
addb
mov
add
repnz
lcall
and
inc
ret
repnz
loopne
cmc
popf
mov
gs
jge
testb
fs
add
movb
adc
mov
push
inc
and
add
rolb
das
fisubrl
xchg
movzwl
add
mov
mov
inc
xchg
lock
addl
into
jle
push
mov
mov
ss
sahf
mov
jl
mov
add
les
nop
xchg
mov
pop
mov
mov
mov
inc
ret
mov
aad
push
into
in
mov
movb
sbb
cmc
loopne
ficoml
jbe
sahf
test
mov
imul
adc
lds
push
loop
or
ret
and
mov
add
fbld
mov
loopne
xor
jbe
enter
mov
rolb
leave
lahf
mov
je
jno
stos
out
add
pop
jl
xchg
pop
rolb
int3
inc
push
repnz
cmp
dec
lea
ret
cmpsl
mov
lret
sbb
shl
je
push
lods
add
in
dec
subb
sbb
pop
dec
ret
rcrb
mov
ret
adc
add
push
movsl
push
and
hlt
out
add
push
imul
loop
sub
lret
and
leave
sti
xchg
pop
mov
dec
ljmp
fs
aam
test
rcl
mov
pop
ljmp
jne
loopne
mov
ret
mov
test
rcrl
nop
jle
fidivs
mov
sbb
or
push
mov
or
cmpsb
xchg
inc
ret
xor
xlat
or
cli
and
loop
dec
or
addl
loopne
mov
call
mov
pusha
les
mov
lds
adc
dec
jne
and
std
jp
and
in
testb
gs
daa
inc
dec
ret
lea
lds
xchg
xor
cmp
sub
ja
iret
xor
inc
bound
into
mov
xchg
hlt
into
loopne
mov
sbb
add
repnz
aas
cltd
mov
cmpsl
dec
ret
ja
rcll
in
cltd
dec
outsb
ds
xchg
cmp
adc
lods
dec
outsl
ret
shlb
mov
popa
cld
push
pop
mov
or
vpaddd
jmp
sub
push
hlt
enter
rorb
arpl
ljmp
les
outsl
mov
push
mov
iret
clc
stos
sub
subl
fcomip
and
sarb
pop
mov
lea
cmpsb
lods
or
imul
mov
mov
sub
int
popf
mov
ss
xor
push
cwtl
adc
popa
push
cmp
lea
shll
xor
push
in
mov
add
loopne
pop
mov
sbb
push
lret
mov
test
std
lret
sub
std
into
aam
xchg
and
out
into
dec
dec
fwait
ss
scas
scas
sub
hlt
xchg
cmp
in
sahf
and
insb
cmpsb
outsl
orb
and
mov
xor
xor
push
push
push
mov
lcall
push
ja
mov
dec
cmc
mov
out
dec
dec
inc
es
xchg
sub
je
addr16
mov
lods
iret
shll
loop
cmc
sub
xchg
sub
ret
inc
aas
shrb
icebp
jnp
adc
lods
push
lcall
add
out
pop
loope
inc
adc
movsl
int3
sti
clc
inc
push
push
cs
fidivrl
xlat
adc
and
xchg
pop
inc
aas
push
lret
pop
incb
outsl
mov
cmp
clc
xor
scas
adc
lea
pop
out
ja
push
js
xor
ficompl
mov
stos
rcl
mov
mov
rorb
cmp
imul
ds
add
mov
add
stos
xchg
and
adc
adc
popl
popf
sub
add
out
rcrb
rcl
out
jno
not
lret
adc
les
insl
mov
pusha
outsl
dec
repnz
mov
lods
iret
push
pop
lret
in
jecxz
adc
cld
jns
pop
or
stos
fs
pusha
cmp
pushf
push
mov
pop
xchg
inc
popf
std
cmpsl
arpl
sbb
fnstcw
shrb
test
push
mov
into
stos
clc
xor
ja
mov
sbb
loope
xor
sub
adc
lock
rclb
pop
push
enter
inc
dec
rorl
ja
cmpsb
adc
push
pop
int
push
aas
insl
or
cld
push
inc
sahf
jne
jae
js
lcall
das
xorl
cmp
ljmp
mov
rcrl
pop
or
fnstsw
fwait
loop
ss
push
jb
and
mov
mov
loop
cmp
jb
push
scas
pop
xor
inc
sub
iret
xchg
mov
adc
cmp
xchg
mov
mov
pushf
jp
or
pop
add
mov
mov
or
loopne
ret
jl
adc
inc
lea
into
outsb
mov
jnp
mov
int
xor
fldl
fld
cwtl
dec
cmp
push
fildll
inc
inc
lret
sbb
cmp
leave
xor
cs
rorb
or
fisttps
fdivs
dec
mov
sahf
lret
xor
stos
cmp
and
lret
adc
clc
loop
stos
iret
data16
xor
sbb
mov
jmp
scas
pushf
pop
inc
mov
adc
pushf
jo
fs
movsl
daa
mov
in
loop
dec
lds
xlat
or
push
mov
imul
clc
loope
fwait
out
mov
loop
and
or
stos
lods
or
loope
xlat
imul
out
jns
cli
inc
rcr
es
lret
movsb
int3
fstpt
pusha
int
pop
lods
mov
lret
jg
clc
push
popa
adcb
out
lea
cmp
push
fwait
sub
xlat
jecxz
cmpsl
fmulp
movsl
and
rcrl
mov
or
daa
dec
aad
aas
shrl
or
and
cmp
lret
mov
push
cmp
jg
pop
adc
jp
into
mov
cmpsb
cs
jle
push
lds
jg
fiadds
or
repnz
test
lds
lea
fstps
inc
mov
loope
jnp
loope
push
imul
push
into
xchg
sti
lcall
adc
aad
imul
aam
rclb
mov
sub
ds
lods
xchg
ja
shlb
push
add
xor
mov
mov
out
xor
dec
mov
adc
xchg
repnz
jge
sbb
int3
and
stos
out
in
xchg
loopne
jge
inc
outsb
and
int3
outsb
add
jle
mov
adc
pop
test
add
xor
or
std
ja
pop
adc
mov
jle
ret
stos
movsl
data16
mov
ds
or
mov
pop
mov
mov
mov
or
in
icebp
jl
mov
ret
fnsave
rcrb
dec
iret
arpl
movl
fwait
es
and
imul
push
xchg
adc
pop
push
out
pop
sahf
lahf
mov
sub
cmp
arpl
rcrb
test
mov
inc
add
sarl
in
xor
mov
frstor
inc
or
xchg
pop
std
xor
fimull
xlat
mov
movsb
data16
push
mov
jo
fldenv
pop
push
push
outsb
je
add
imul
sahf
aam
movsb
scas
inc
and
pop
xchg
dec
leave
jecxz
push
jo
clc
pop
jbe
arpl
jns
loopne
jb
mov
mov
pop
test
test
cmpsb
shlb
out
cmpl
add
mov
lds
dec
xchg
outsb
movsb
aas
int3
mov
sti
cmp
push
fimuls
adc
mov
add
xor
xor
push
sahf
mov
fistps
sub
ss
inc
fidivs
jecxz
add
sub
std
idiv
mov
xor
cmp
mov
sub
daa
and
jo
inc
setnp
divb
sub
cmovg
mov
loop
rolb
out
xor
in
add
push
mul
dec
mov
addr16
lock
out
jmp
call
xchg
xchg
push
scas
out
lahf
aad
ja
mov
in
arpl
inc
ret
xchg
lock
push
inc
scas
ds
ljmp
sarb
fdivrp
popl
iret
pop
enter
ja
inc
jnp
cmp
or
out
mov
mulps
out
push
es
sub
fs
bnd
cmpl
pop
adc
jo
cwtl
sarb
iret
mov
imul
xchg
dec
inc
test
and
jo
rorl
mov
pop
jo
dec
xor
adc
test
andl
pop
jg
pop
pop
mov
scas
cmp
sub
mov
ja
fmull
fisttpll
mov
div
dec
aam
fidivrs
dec
pop
or
lahf
dec
out
cmp
xchg
add
mov
loopne
sbb
in
dec
jge
pushf
fiaddl
in
mov
ja
movsb
jl
and
mov
shrb
jp
fisttpl
scas
add
xchg
jae
popa
pop
lahf
mov
pop
sti
icebp
jo
add
mov
mov
dec
sahf
ror
inc
imul
pushf
sub
cmp
ss
pushf
lock
loopne
cmpl
mov
mov
aam
sahf
or
into
sbb
jb
push
out
lahf
cli
sarb
mov
cld
out
adc
cmpsb
cmp
jne
sahf
mov
imul
cmp
rcl
idivl
repnz
fidivrl
mov
sarl
je
into
mov
add
mov
xadd
out
fnsave
cwtl
push
inc
sarb
in
mov
mov
mov
adc
inc
sbbb
xchg
scas
jb
inc
sub
push
fwait
pop
popa
scas
inc
dec
xchg
test
mov
fdivrp
sub
imul
jb
push
call
imul
push
xchg
pop
xor
in
ror
cmp
adc
push
jge
ja
je
add
out
aam
je
stos
pusha
in
arpl
ret
int3
rcl
sahf
cmp
out
or
xchg
pushf
lret
dec
fs
lcall
or
scas
xchg
pusha
jg
test
xor
mov
sbb
push
shlb
pop
lock
lods
popf
or
xchg
call
add
in
sar
inc
xchg
int3
fcomi
pop
loop
sahf
cs
cmp
dec
adc
clc
sbb
lea
data16
xchg
fmuls
lret
mov
scas
inc
push
shr
fiadds
js
daa
fisubrs
add
push
clc
out
es
sub
hlt
push
and
sub
add
lds
mov
rolb
ja
mov
outsl
push
nop
pop
loopne
mov
out
popa
outsl
xor
xor
inc
loope
cwtl
inc
pop
xchg
out
icebp
jle
cli
imul
imul
imul
je
xor
jle
aad
jo
pop
cwtl
jb
out
adc
mov
aas
pop
xchg
jle
mov
sarb
jge
push
ret
pop
xchg
xchg
xchg
and
cmpsb
popa
mov
mov
lret
dec
dec
cmp
lcall
sahf
inc
fs
mov
xchg
cmpsb
push
cmp
adc
inc
scas
xchg
sbb
dec
js
lds
cli
fsubrs
mov
pusha
outsb
sbb
mov
test
clc
ds
xchg
adc
lret
cmpsl
cmp
test
fadds
iret
movsb
into
adc
je
jle
fcoml
mov
xor
dec
jne
inc
mov
ja
lahf
movsb
push
push
aam
cli
lahf
ret
sarb
insl
xor
pop
dec
mov
cmpsl
cmp
cmpsl
mov
sbb
test
js
into
cmp
push
mov
cmc
jo
mov
or
ret
cmp
or
std
sub
mov
cmp
sarb
push
inc
or
push
movsb
jg
xor
sarb
aaa
fsts
loop
mov
es
iret
cltd
push
mov
cmpsb
mov
js
into
sarb
gs
inc
lods
ss
push
sub
cmpsl
arpl
xor
je
cwtl
shll
shlb
inc
mov
add
pop
push
adc
inc
jno
and
data16
jge
int
push
or
negl
ja
rorb
and
mov
mov
mov
das
ja
aam
pop
hlt
mov
and
xor
ss
xchg
mov
mov
test
or
add
jmp
pop
or
repnz
cmc
sub
clc
xor
mov
xlat
push
pop
pushf
sub
out
xor
stos
mov
inc
stos
outsl
cmp
adc
cmp
lcall
sub
ror
rcrb
lcall
ljmp
jmp
and
or
inc
lret
push
out
ja
jno
les
ja
cwtl
mov
movsb
shrl
stos
mov
add
dec
xchg
cld
pop
sub
shl
fsubp
push
cmp
jg
scas
pop
jle
inc
sub
adc
lods
addr16
push
xlat
xor
dec
inc
cmp
xor
dec
ret
jmp
movsl
mov
sarl
fistl
mov
push
in
or
cmpsl
lds
shr
xchg
adc
scas
roll
add
xor
xchg
fstps
sub
push
cwtl
int3
mov
inc
pop
ja
jmp
mov
loopne
fs
push
jae
sbb
fmul
pop
push
xchg
cltd
cld
jg
scas
pop
dec
cltd
incl
ja
sbb
mov
int
scas
or
xor
push
mov
rolb
or
jns
xor
pop
jb
adc
fidivl
pop
mov
shl
call
cmp
inc
sbb
and
in
lea
add
inc
pop
data16
fnstenv
mov
mov
and
out
icebp
out
fdivs
in
push
sub
lahf
or
sbb
mov
mov
cwtl
mov
push
ds
dec
sbb
cwtl
cmc
jle
push
cmp
mov
aam
pop
push
lods
inc
mov
mov
pop
mov
clc
push
dec
adc
cmpsb
repz
fidivs
movsl
test
push
or
lds
lea
cmp
mov
mov
adc
stos
dec
out
shrb
xchg
aas
xchg
out
mov
scas
push
dec
in
dec
push
xchg
incb
ret
add
mov
push
xchg
shl
cmpsb
xor
bound
push
decb
loop
js
imul
cmp
call
sbb
imul
rep
push
out
cmpsb
andl
cmp
push
enter
test
cmpsb
fnstcw
dec
shll
mov
stc
add
pop
cmpsb
cmp
lods
jge
addr16
loop
lods
cmp
inc
cld
inc
aam
cwtl
mov
je
mov
int3
and
frndint
mov
enter
popf
lds
and
subl
mov
in
cmc
sarl
int3
pushf
mov
inc
cli
mov
lahf
pop
push
mov
push
sub
cmpsl
filds
pop
mov
pop
int3
sub
xchg
and
ja
dec
jp,pt
inc
push
lods
pop
pop
cmpsl
pop
xor
add
das
dec
ljmp
and
push
out
iret
insl
cli
push
push
pop
add
scas
pop
out
jecxz
xchg
mov
push
mov
sahf
mov
cmpsb
push
lea
std
mov
add
aas
popa
mov
inc
xor
gs
shrb
xor
adc
imul
shll
adc
pop
add
pop
push
add
xchg
mov
enter
xchg
out
clc
out
push
mov
sub
hlt
fisubl
into
xchg
into
hlt
inc
mov
lea
shr
fnstenv
jae
call
stos
mov
loop
das
ja
jle
aas
mov
popa
pop
and
inc
xchg
cmpsl
aam
bound
pop
cli
mov
xor
cmp
cli
vcmpps
or
or
push
rcl
fisubs
jmp
mov
clc
mov
jno
ja
sub
jo
ljmp
push
lahf
add
xchg
push
pop
push
mov
mov
push
cmpsb
xor
jg
icebp
mov
mov
sub
iret
add
xchg
cld
jecxz
movsb
pushf
xchg
add
iret
or
mov
add
cli
into
loop
mov
ds
mov
xchg
test
aad
ret
das
push
mov
rorb
iret
pop
add
loop
lcall
lret
pop
xchg
jg
jb
pop
hlt
dec
mov
inc
inc
insb
in
mov
shl
inc
pop
or
fildl
rorl
sub
mov
popf
roll
xor
mov
inc
mov
add
jmp
mov
and
cmp
adc
push
fstpl
add
add
inc
mov
cs
divl
jecxz
xor
ficomps
xchg
push
dec
sbb
ljmp
int3
in
aas
movsl
mov
push
push
mulb
mov
push
ret
mov
imul
ret
dec
add
jle
add
clc
cmp
ja
push
xchg
mov
inc
negb
xchg
js
imul
push
cwtl
loop
scas
push
clc
mov
subb
sahf
ljmp
xchg
jg
cli
pop
add
pushf
mov
fsubrl
sti
xchg
xorl
and
or
loop
xchg
mov
int
pop
dec
push
mov
or
imul
ds
pusha
pop
or
xchg
push
mov
sub
cwtl
popf
jp
mov
mov
rclb
push
test
movsl
fmuls
mov
sub
pop
out
mov
stc
inc
inc
xchg
stos
xlat
mov
inc
lahf
jmp
mov
xchg
jb
inc
pop
roll
cmp
push
mov
xchg
mov
jae
outsb
int
notb
std
test
cmp
outsl
fucomi
and
cmp
out
outsb
lock
ficoml
add
fwait
movsb
sub
lock
or
les
negb
adc
add
fcmove
mov
or
ss
arpl
mov
push
xchg
enter
ss
ljmp
cmc
add
in
mov
lret
sarb
neg
pop
mov
inc
mov
xor
test
lods
cmp
xchg
adcl
lcall
ljmp
es
lret
or
imul
adc
stos
repnz
push
ret
sub
sarb
adc
xchg
push
popf
iret
scas
lret
sub
pop
enter
mov
push
xor
sub
cwtl
mov
fcomp
inc
loopne
jg
leave
sub
sub
loop
adc
sub
push
inc
mov
pop
pop
mov
sub
mov
xchg
inc
mov
jno
jmp
cld
cwtl
scas
inc
insb
push
in
cwtl
mov
aas
cmp
imulb
lods
int3
sub
cwtl
loop
fnstsw
lret
push
inc
jb
movsl
cmp
dec
cmp
sub
ret
sbb
mov
push
xor
xorl
sub
orl
lcall
jno
bound
scas
lea
fs
push
sarb
push
pop
inc
mul
mov
add
dec
ljmp
jp
divl
daa
testb
inc
xchg
xchg
test
das
sbb
and
pop
scas
data16
bound
sub
sarl
ja
in
xor
push
sti
xor
pop
xor
dec
mov
or
push
and
push
fimuls
enter
ja
cs
add
mov
in
push
and
push
mov
fdivrs
adc
xchg
mov
pop
push
xor
lods
add
out
scas
xor
cmp
push
out
shrl
fimuls
mov
xlat
push
adc
pop
mov
xchg
mov
lds
push
fmulp
cmp
add
inc
out
add
aam
inc
mov
pop
xlat
mov
dec
cwtl
fidivrs
imul
mov
movsb
fcom
out
push
lds
loop
fs
sarb
in
inc
fimuls
into
dec
or
and
sahf
and
sub
aam
and
movsl
add
mov
popa
push
mov
fstl
call
fldl
xor
sarb
dec
fidivl
mov
sbb
shl
scas
jno
rolb
ret
into
data16
and
sarb
jl
jp
into
cmpsb
rol
pop
push
and
add
lods
shl
negb
xor
data16
es
data16
testl
xchg
ret
les
xlat
lret
js
rcrb
xor
push
push
pop
test
mov
mov
aas
out
les
stc
push
pusha
rcr
clc
movsl
es
cmp
les
inc
scas
sbb
mov
lods
fs
fwait
xchg
xchg
mov
and
adcl
int3
jno
arpl
popf
xchg
mov
jo
pusha
jb
sarb
std
dec
les
imul
les
jbe
and
mov
lret
mov
hlt
fildl
dec
in
loopne
mov
mov
movsb
mov
mov
int
rcrl
inc
loopne
fidivs
pop
fnsave
bswap
inc
lret
xchg
shll
inc
adc
ret
popf
adc
mov
jg
fwait
mov
stos
xor
adc
das
sub
xor
lret
js
adc
pushf
enter
loope
idivl
adc
adc
sub
inc
lahf
push
nop
pop
shl
ret
mov
cmp
push
mov
jo
out
xor
dec
pusha
les
xlat
inc
mov
cli
aam
sub
jnp
stc
iret
loope
inc
pop
lahf
scas
sub
inc
std
out
aas
jnp
inc
pop
jb
fidivl
inc
scas
sarb
pop
jle
mov
mov
pop
adc
xchg
movsb
cmc
cmc
or
xchg
std
in
loopne
pop
adc
inc
in
push
cmpsl
mov
mov
mov
iret
xor
mov
ljmp
cmp
and
dec
ss
sbb
jns
cmp
adc
frstor
ss
aad
out
rcr
call
lret
pop
fimull
outsb
xor
call
lcall
cmc
lahf
loopne
out
xchg
xchg
and
mov
data16
add
dec
loopne
int3
pop
subl
scas
or
adc
test
dec
aam
or
fmuls
add
dec
xchg
inc
scas
adc
push
fs
xchg
jno
hlt
push
xchg
hlt
mov
aam
cmp
xchg
mov
aaa
jae
push
sbb
mov
inc
out
mov
pop
or
movsl
dec
mov
test
gs
adc
mov
mov
ss
cmp
into
inc
movsl
jmp
gs
mov
gs
out
cmp
xchg
mov
into
cmp
pop
faddp
and
dec
aad
sbb
std
out
es
add
pop
movsl
mov
jnp
xor
dec
mov
iret
rorl
into
pusha
shlb
sbbl
enterw
inc
icebp
and
or
mov
in
adc
cmpsb
xor
pushf
mov
push
rclb
inc
cmp
cmp
stos
jmp
call
insb
adc
lea
or
mov
cmp
push
push
out
pop
es
cmc
aaa
or
fstpt
aad
xor
or
adcl
push
mov
stos
cmp
jns
mul
xchg
mov
ds
mov
notb
int3
push
mov
gs
insl
adc
add
jp
mov
lods
mov
xor
movsb
shrb
mov
adc
fxch
imul
pop
jmp
iret
hlt
mov
mov
out
std
pop
cli
xchg
mov
sahf
fwait
int
pop
pop
mov
shrb
jl
les
cltd
xchg
jmp
push
jp
loop
push
sahf
mov
xchg
rclb
mov
inc
and
and
xchg
ret
inc
aad
fidivl
push
testb
mov
and
mov
mulb
push
lea
stos
or
fildl
sahf
popa
cmp
jle
movsl
imul
daa
and
rcr
iret
xchg
mov
xchg
flds
daa
lcall
scas
mov
out
icebp
iret
loop
mov
lea
ror
repnz
mov
mov
movsl
add
push
xchg
jge
push
sub
shlb
rolb
das
pop
jno
xchg
xchg
aam
popa
dec
push
je
mov
mov
adc
mov
lahf
fnstsw
movsl
add
loopne
jmp
aaa
bound
ret
xchg
push
mov
test
es
adc
out
pop
sub
mov
add
or
das
jo
dec
sbb
pop
inc
push
ret
shrl
orb
adc
outsl
insl
or
lock
out
cmp
cmp
stc
sub
xor
test
mov
data16
fidivrs
imul
xor
sub
sub
out
xor
push
rolb
ss
and
pop
mov
movsb
dec
or
sub
mov
push
sarb
or
fidivrs
bound
pop
sbb
add
loop
dec
mov
test
orb
jmp
sub
ret
enter
mov
or
js
cmp
push
dec
imul
xor
lahf
aam
pop
rorb
rcll
cwtl
add
inc
mov
int3
fdivl
movsb
mov
push
lret
xor
aaa
cmp
inc
aad
push
add
in
mov
in
mov
ds
mov
mov
push
pop
repnz
or
int3
dec
ret
scas
push
shll
test
add
scas
sahf
mov
dec
mov
mov
in
or
ficoml
xor
test
ret
ffreep
inc
ret
and
stos
sbb
shrl
adc
cwtl
push
lret
pusha
js
aas
ja
pop
mov
sub
jge
push
fcmovnu
sbbl
inc
cli
fcmovu
ljmp
repz
xchg
push
sahf
jae
or
inc
out
pusha
mov
lcallw
xchg
xor
fidivs
dec
pushf
jae
scas
cwtl
mov
sbb
ficompl
xchg
aad
shll
pushf
inc
or
shll
cmpsb
into
cwtl
push
mov
mov
jae
out
mov
shrb
stos
and
mov
push
pushf
add
cltd
lcall
outsb
pop
ss
inc
mov
push
popa
adc
push
dec
and
dec
cmp
inc
push
or
ret
jp
roll
jecxz
stc
inc
ds
outsl
into
push
aas
out
dec
ljmp
jno
xor
mov
cmp
loope
or
pop
in
pop
mov
scas
push
push
or
decb
cmp
push
xor
loopne
rcll
and
xchg
test
mov
fstl
rcrb
mov
inc
data16
test
rclb
pusha
sar
rol
jb
jmp
pop
fisttps
and
add
stc
xchg
or
stos
pop
inc
out
pop
rcrb
cwtl
mov
stos
xchg
out
cmp
rolb
mov
dec
mov
bound
fistps
pop
ds
pop
iret
push
loop
add
ret
insl
sub
jmp
movsl
ss
mov
or
mov
nop
inc
or
rorb
cmp
imul
stos
int
xlat
xor
out
in
mov
pop
mov
xor
xchg
xchg
ljmp
imul
jp
cmp
adc
dec
lds
call
ss
pop
mov
jb
cmc
cmp
inc
enter
in
push
mov
cli
xor
rol
or
sub
enter
lea
adc
push
inc
pop
adc
lds
pop
lds
mov
push
sarl
inc
aas
lea
shll
mov
inc
and
enter
cmp
rcrl
push
in
inc
data16
inc
xchg
insl
pop
adc
sbb
imul
cmpl
faddl
adc
ja
faddl
test
push
xchg
ret
jecxz
lods
mov
shrl
cmp
clc
shll
ret
aam
jae
idivb
mov
xchg
lock
ss
lahf
add
and
fucomp
jbe
rclb
dec
jg
adc
stos
mov
cmpsb
dec
pop
or
mov
fildll
mov
xlat
jne
pushf
movb
cwtl
ja
jg
xchg
fs
jle
mov
ja
jg
data16
xchg
add
in
add
mov
shlb
xchg
sahf
sbb
add
ret
pop
call
sub
mov
and
data16
mov
aad
adc
into
inc
pop
sub
xor
out
sar
xor
mov
dec
xchg
cmp
mov
add
sub
cmc
out
and
cmp
out
movsl
stos
xor
out
fs
imul
add
and
mov
clc
mov
inc
out
mov
out
lods
push
inc
mov
fdivr
mov
cmpsb
cmp
xchg
decb
cmpsb
push
and
mov
repnz
mov
mov
or
rorb
sbb
decb
fadd
mov
lcall
insb
add
mov
lea
xor
adc
mov
mov
cmc
repnz
cs
xor
std
mov
dec
adc
out
xchg
mov
aaa
jae
fwait
push
push
outsb
inc
inc
sarb
xchg
sbb
push
jle
fwait
subl
and
mov
xchg
rcrl
push
mov
xor
or
adc
xlat
into
adcl
mov
push
hlt
loop
fsubl
sbb
and
ja,pt
outsb
test
cwtl
call
in
out
repnz
out
shlb
add
inc
out
cmp
lds
jbe
std
enter
std
push
in
test
push
movb
das
or
push
ficoms
inc
lret
cltd
rcl
in
mov
scas
dec
out
flds
jae
jno
sub
and
jge
push
lds
and
mov
sarb
fwait
jg
xchg
mov
xchg
mov
cmp
jecxz
fistpl
push
fistpll
jmp
add
ljmp
fiadds
xchg
add
mov
push
pop
add
mov
nop
jle
cwtl
std
xchg
insl
and
data16
popa
out
ret
pop
inc
sbb
ret
sahf
and
mov
adc
out
sbb
cmp
mov
mov
ret
out
push
mov
loope
imul
lret
imul
shlb
xchg
dec
mov
inc
aad
addr16
mov
inc
mov
adc
sbb
add
sar
cwtl
push
cmpsb
and
cmp
sbb
lea
xchg
sbb
bound
push
cmp
dec
jb
xor
xor
and
fiadds
dec
xor
mov
cld
loopne
ror
cmp
inc
mov
bound
rcl
jl
or
xor
cs
iret
enter
jb
aad
mov
out
out
cld
sbb
jmp
cmp
xor
jno
and
arpl
mov
push
push
jno
adc
cltd
inc
dec
shrl
in
mov
push
xchg
push
pusha
aam
mov
inc
sub
or
lea
inc
sarl
jo
inc
mov
cmpsb
and
cmp
jno
js
in
mov
inc
cmp
cmpsl
stos
mov
clc
push
or
inc
cmp
sarl
pushl
push
cwtl
mov
fwait
xor
lret
js
addl
dec
push
ret
movb
push
cmpsb
or
jg
movb
push
adc
inc
leave
xchg
jg
ficomps
push
into
mov
lret
mov
rol
mov
mov
xchg
xchg
dec
in
mov
aam
ret
rcll
cmpsl
add
pop
sub
dec
sbb
jnp
repz
fidivl
xchg
aam
push
adc
pop
xor
mov
add
mov
cwtl
mov
ret
pop
fisubrs
out
xor
leave
inc
les
js
repnz
icebp
pop
inc
inc
lret
dec
mov
xchg
xor
ffreep
xchg
stos
repz
mov
sub
add
fucomip
xor
std
out
push
imul
gs
cmp
mov
imul
pop
mov
or
cwtl
int3
enter
mov
cltd
fsubrs
cs
outsb
jno
and
xchg
jb
xor
mov
movb
rol
mov
add
ret
ds
fiadds
sub
mov
add
clc
es
loop
outsb
pop
idivb
ret
inc
adc
data16
push
xchg
mov
loop
leave
repnz
dec
add
cmp
mov
test
ret
mov
pushf
push
inc
inc
mov
into
xor
cmc
das
fs
ds
insb
jecxz
lret
jno
cwtl
cmp
lods
pop
imulb
push
fiaddl
and
aam
sbb
inc
outsl
fisttpll
bound
mov
sub
jne
mov
dec
addr16
lods
cmp
cmovs
lods
mov
sub
sub
xchg
sub
xchg
imul
inc
shll
add
fcoms
leave
and
and
adc
es
sub
sub
ja
into
outsb
or
lock
push
fimuls
fldl
or
test
mov
cwtl
bound
pop
aam
rorb
add
or
and
xor
dec
decl
les
jb
aas
pusha
pop
mov
test
ficompl
xor
leave
scas
dec
inc
mov
lret
scas
inc
es
out
int
xlat
inc
mov
push
add
fdiv
les
pop
cmp
leave
mov
push
xorl
out
adc
ret
cmpsb
cwtl
jmp
out
sbb
fwait
ja
dec
movsl
iret
push
filds
mulps
mov
add
mov
rsqrtps
mov
hlt
aam
pop
ss
and
dec
dec
jg
cmc
test
js
imul
std
mov
cltd
lahf
fstsw
lds
inc
xchg
jle
nop
lods
mov
push
test
rclb
xor
sahf
repnz
xorb
insl
inc
sahf
loop
sbb
dec
and
out
loopne
fs
jae
inc
outsl
or
xlat
lcall
icebp
rorl
into
sub
pop
or
imulb
jmp
nop
mov
push
movsl
push
xchg
inc
rclb
out
sub
push
loopne
lahf
outsb
lds
mov
inc
adc
jb
ds
mov
les
loope
movsl
ficompl
loop
data16
push
mov
adc
xchg
iret
push
sub
dec
xchg
xchg
xor
popa
sahf
pop
adc
test
add
fistl
and
jecxz
pop
mov
rorl
mov
jp
aaa
out
rorb
jmp
cmp
inc
loopne
aam
mov
pop
fwait
add
adc
cmp
std
jge
add
xchg
xchg
xchg
mov
or
lea
dec
push
inc
faddp
adc
ds
stos
lock
rorb
ss
and
inc
inc
sub
add
ss
loop
loopne
add
ds
iret
gs
mov
fstp
add
sbb
xor
xchg
mov
loop
mov
fbstp
add
imul
fbld
mov
loope
adc
mov
mov
mov
adc
filds
lret
out
push
loop
pop
ss
xchg
add
sbb
xor
adc
ret
sar
lahf
sarb
ret
jnp
xor
push
or
cmpsb
mov
movb
repnz
dec
std
out
push
jo
aad
rcll
jle
xchg
mov
andl
mov
sbb
add
dec
dec
inc
and
inc
fcmovb
cwtl
inc
pop
adc
test
mov
mov
mov
fcompl
push
loopne
adc
out
aam
mov
xchg
sbb
rcrl
out
lret
push
fdivl
in
gs
mov
mov
test
int3
inc
mov
mov
nop
sbbl
test
or
dec
in
push
push
and
or
xchg
js
push
lret
movsb
stos
sub
pushf
subb
inc
inc
aas
mov
cs
mov
sahf
inc
mov
js
movsb
dec
out
hlt
shrb
mov
mov
aam
xor
fnstenv
leave
int3
add
jg
fistpll
ret
rol
mov
rcl
cmpsl
aam
enter
loopne
cmpsl
in
fcomp
lock
hlt
out
call
add
cld
notb
adc
or
and
cmpsl
and
sbb
sbb
xor
cmpsl
xor
sub
sub
inc
inc
ss
cmp
push
push
dec
cmpsl
inc
dec
dec
inc
pop
popa
arpl
push
pop
pop
push
jo
je
out
lea
incb
jl
nop
xchg
xchg
cmpsl
mov
mov
test
xorl
insl
out
cmpsb
outsb
mov
mov
fiadds
ret
loopne
jae
inc
jg
loope
idiv
lock
ss
mov
mov
and
mov
mov
mov
push
pop
pushf
mov
cwtl
pop
mov
mov
or
in
ret
mov
shlb
arpl
loop
int3
push
test
dec
dec
cmp
mov
inc
cli
loop
popa
sbb
int
loop
mov
subb
std
mov
jbe
movsb
ja
xchg
cmp
dec
and
lods
mov
jbe
or
jl
sbbb
pop
mov
jecxz
sahf
cmc
es
sahf
mov
mov
ret
ss
mulb
imul
ljmp
jp
daa
mov
push
adc
or
push
mov
inc
inc
jno
ds
add
push
mov
cmp
xchg
add
into
jle
mov
lcall
lds
mov
imul
add
adc
jle
hlt
js
data16
mov
sbb
pop
in
mov
xchg
js
enter
in
inc
mov
sub
lahf
stc
fldl
ret
stc
nop
inc
cmpsl
div
or
mov
adc
ss
inc
cmc
push
adc
dec
std
add
cmp
test
fldl
push
aad
popa
and
js
shr
out
xchg
dec
xchg
add
inc
rclb
cmp
inc
scas
and
daa
popa
pop
xchg
ficoml
lcall
in
arpl
cli
xlat
mov
jle
cmp
lods
in
sti
cmp
inc
ret
xor
or
popf
pushf
pop
adcl
lcall
jb
xor
add
cmp
sti
call
push
push
popa
and
push
jmp
repz
fwait
or
and
mov
xchg
push
loopne
cmpsb
mov
ja
push
fists
repz
inc
push
ret
add
inc
or
mov
sbb
orb
xchg
push
mov
das
pop
adc
popf
cli
cltd
pop
cmp
mov
mov
popa
jns
push
nop
cli
int3
nop
lods
adc
test
xor
iret
add
pushf
jns
popf
daa
fdivrl
add
sbb
outsb
push
push
mov
movsl
cmc
cwtl
adc
push
add
fdivrl
aaa
sahf
loopne
xchg
lahf
inc
fildl
jle
jle
inc
ffree
inc
xor
push
pop
xchg
aad
inc
adc
add
push
dec
and
mov
ret
shrb
cwtl
arpl
inc
jl
add
ss
int
outsb
inc
std
cld
push
xor
popa
rcll
out
ret
inc
imulb
xchg
cmp
and
rorb
sarl
ret
xor
in
adc
xor
pop
faddp
ret
std
or
loope
ret
stos
ffree
inc
ret
test
stos
push
cmpsl
in
ret
xor
lds
push
mov
cmpsb
lret
loop
push
iret
pop
or
out
mov
rcl
int
leave
lret
lds
xlat
aad
out
icebp
repz
out
jmp
cmpsl
incl
add
idiv
sti
cmc
cmpsl
movups
or
cmpsl
pop
and
sbb
cmpsl
das
xor
sub
cmpsl
aas
inc
inc
cmp
cmpsl
push
push
push
dec
dec
dec
dec
inc
cmpsl
pusha
bound
pop
pop
push
cmpsl
jno
insl
outsl
push
addl
xchg
lea
cmpsl
mov
fwait
xchg
xchg
shll
movsl
scas
adc
fcomi
rcrb
notl
cmpsl
cmpsb
adc
notl
cmpsb
xorl
mov
jo
ret
jle
push
out
roll
enter
inc
out
or
mov
nop
inc
rclb
sub
dec
adc
lcall
aam
test
cwtl
jl
cmp
mov
mov
mov
inc
xchg
xchg
addb
jbe
cmp
arpl
mov
aam
pusha
gs
inc
ss
ds
mov
jecxz
jae
jle
jbe,pt
sub
int
jbe
movsb
stc
fisubrs
pop
js
mov
sbbb
rolb
pop
mov
arpl
mov
mov
out
ret
idiv
out
data16
or
sahf
pop
xchg
and
inc
ss
rclb
mov
push
dec
sbb
inc
in
out
test
or
mov
cwtl
xlat
inc
faddp
lds
and
jmp
push
arpl
cmp
and
ds
cmp
fnstsw
xchg
ret
pop
jmp
push
mov
push
mov
int3
push
push
push
adc
and
and
imulb
xchg
xchg
fisttps
mov
sub
mov
mov
shl
movsl
fdivp
adc
push
xor
sahf
sahf
enter
mov
in
clc
in
in
push
adc
push
movsb
and
enter
jp
push
mov
mov
push
jle
push
jmp
inc
ret
cmc
mov
in
test
push
popa
inc
sahf
ret
mov
mov
nop
addb
mov
and
inc
dec
cmp
nop
clc
cmp
xchg
mov
adc
stos
roll
out
cmpsb
movsl
imul
or
push
push
fisttpll
repnz
in
mov
sbb
xor
mov
popa
ss
push
lret
sbb
cli
ds
adc
aad
push
adc
dec
pop
cmp
les
xor
pushf
pop
inc
and
xchg
adc
jnp
movl
or
sahf
sahf
fcmovnb
shrb
std
cmc
call
nop
or
data16
loopne
cmp
test
jecxz
mov
inc
loopne
cmp
out
lahf
add
loopne
clc
adc
in
push
out
inc
je
loopne
push
or
out
inc
sahf
xlat
or
gs
jo
dec
je
fidivrl
add
jbe
or
out
sub
into
xlat
push
negb
xchg
adc
imulb
inc
mov
mov
fsubs
pushf
gs
int
mov
add
bound
xor
stos
xlat
cmpsb
xchg
mov
rolb
sbb
sti
xorl
xchg
cmc
mov
pop
cld
jbe
inc
and
shl
out
adc
sbb
lret
inc
adc
inc
mov
jp
pop
xchg
out
and
pop
gs
dec
sub
push
xchg
dec
cmc
xchg
mov
xchg
push
in
mov
fsubrs
push
in
es
xor
dec
lock
push
mov
sub
push
add
xchg
pop
es
mov
xchg
mov
cld
xadd
jnp
cwtl
outsl
repz
mov
inc
ret
jbe
mov
inc
movl
sub
xorb
inc
xor
mov
mov
sbb
scas
sbb
inc
xchg
mov
or
jp
mov
xchg
inc
xchg
cwtl
xor
arpl
decl
jle
push
jl
and
cmp
xchg
cmpsb
shlb
jne
xchg
lds
movsb
ss
mov
inc
loopne
in
pop
hlt
ret
das
int3
dec
js
sahf
clc
nop
mov
cmpsl
inc
movsb
lds
jns
scas
jmp
mov
roll
sub
cmp
sbb
scas
adc
mov
shlb
dec
movsb
aam
push
les
xchg
and
xor
sbb
lcall
fstps
mov
cmp
mov
push
xor
cmp
xlat
jle
fsub
add
test
ljmp
sub
shlb
sub
fistpll
shll
ss
fdivrl
inc
pusha
jae
test
mov
ljmp
std
ljmp
inc
jle
fistps
loope
fdivl
jge
and
stos
testb
pop
jge
and
stos
adcb
decb
dec
sbb
mov
mov
lahf
icebp
and
mov
mov
dec
lret
out
notb
xchg
jb
push
sub
mov
add
xchg
push
shl
loope
adc
aas
out
adc
ss
xor
out
in
aam
xchg
jne
mov
push
pop
ss
lahf
pop
mov
sbb
pop
mov
idivl
xor
aaa
add
int
mov
fstps
jnp
xchg
pop
fsubr
push
adc
pop
add
mov
nop
imul
xchg
jecxz
fdivs
inc
hlt
dec
shlb
repnz
repnz
dec
cmp
into
insl
fs
pop
push
fistpll
adc
in
outsb
repnz
pop
inc
dec
shl
jnp
jge
pop
adc
mov
scas
add
and
ss
ret
lds
loope
mov
pop
dec
addr16
lds
sbb
inc
jbe
inc
xchg
add
decb
shll
je
movb
cmp
dec
testb
cmp
jp
jl
add
or
push
jbe
jo
inc
ljmp
adc
jge
es
sub
test
cmp
loop
dec
ja
iret
dec
stos
jmp
mov
ret
call
outsl
mov
mov
fwait
loope
stc
cs
arpl
xor
pop
inc
adc
in
mov
popa
daa
cmc
lds
add
jbe
hlt
dec
out
shlb
xchg
aaa
mov
add
ljmp
ror
rorl
lock
ds
dec
arpl
add
xchg
enter
mov
into
arpl
shr
xor
cs
mov
out
push
dec
fsubp
iret
loop
mov
sbb
inc
leave
cmp
adc
frstor
push
arpl
jo
scas
mov
mov
out
xchg
out
push
mov
push
cmpsb
das
sbb
stc
out
les
mov
adc
adc
vpaddw
mov
pop
out
loope
ss
push
mov
add
or
repnz
inc
cmp
shll
ja
cmp
shlb
add
cmp
imul
jg
pop
cmp
rcrb
rorl
out
mov
add
xchg
mov
mov
add
inc
lods
mov
enter
jae
fs
mov
add
sub
lds
push
ret
mov
out
gs
add
aaa
stc
insb
add
jmp
scas
ret
cmpsb
lock
mov
adc
dec
mov
stos
aaa
and
inc
mov
jg
repnz
jns
ja
je
inc
lds
call
and
shlb
push
xor
imul
add
xchg
push
mov
and
rcrl
inc
add
jb
cmp
xor
prefetchwt1
into
xchg
adc
cmpsb
jp
add
mov
lds
and
std
push
mov
popa
mov
adc
jle
push
loopne
imul
rolb
ds
fiadds
loop
xchg
ds
iret
loop
lock
repnz
ds
lahf
es
out
iret
dec
loop
decb
add
lods
loop
add
clc
mov
call
iret
push
loop
ss
fistpll
add
adc
xchg
and
fistpll
es
mulb
and
xor
add
cmp
fwait
mov
add
xchg
and
iretw
push
loop
xor
add
add
ss
add
fnsave
out
push
xchg
jbe
gs
fisttps
es
push
iret
push
loop
dec
outsb
add
sarb
orb
dec
imul
fisubrs
ja
fcmovnu
dec
mov
inc
cmpsb
xchg
testb
arpl
adc
es
and
fcmovnbe
mov
mov
xor
xor
jb
out
fistl
iret
pop
loop
clc
loopne
jno
rorb
mov
sbbb
jo
pushf
add
loop
incb
mov
cwtl
aad
movsb
shll
rcr
scas
ffreep
sbb
aam
es
ret
cmpsb
cli
sarb
mov
out
lods
sbb
es
cmp
inc
mov
ss
into
push
inc
inc
inc
int3
inc
lahf
loop
mov
fiaddl
sub
mov
push
mov
dec
test
dec
data16
jmp
cmc
pop
aaa
out
xchg
inc
cmpsl
addr16
dec
lock
pop
xlat
inc
lret
adc
jmp
ds
shl
dec
ret
and
movsl
dec
sbb
xchg
mov
mov
data16
xchg
cmpsb
push
cmp
jecxz
inc
cmpsl
sub
xor
xchg
int3
xchg
inc
cmpsb
push
cmpsl
lods
lea
jnp
lcall
shrb
mov
or
jge
cmp
sti
pop
popf
xchg
inc
adcl
js
cmp
lret
or
lock
cmp
lahf
fmul
out
cwtl
sarb
push
inc
cmpsl
jg
jecxz
xor
adc
mov
jns
sub
lods
inc
shr
loope
movsl
ja
xchg
test
test
clc
addr16
mov
insl
jl
xlat
xchg
popf
cld
sub
add
dec
push
repz
gs
push
dec
dec
mov
mov
add
jb
xor
dec
mov
les
cmpsl
js
adcl
pusha
mov
add
cmp
out
aaa
sti
mov
nop
mov
mov
lea
mov
pop
int3
pop
jne
inc
test
loopne
pushf
dec
adc
or
je
inc
mov
jnp
jge
and
ds
fmulp
icebp
or
xor
dec
lods
cmpsb
incb
subl
shll
aas
stos
pop
arpl
scas
loop
imul
mov
lods
ds
ss
notl
lods
cmc
adc
jg
jle
cmp
cmpsl
push
sub
mov
shrb
mov
lock
mov
clc
inc
and
iret
pusha
push
ret
adc
xor
mov
mov
pop
mov
jge
stc
mov
inc
cmpsl
mov
out
cwtl
sbb
or
mov
mov
and
xor
mov
cs
xorl
ret
sti
popa
jmp
jo
data16
dec
cmpsl
jg
sbb
dec
arpl
dec
mov
cmpsl
lret
jo
std
and
lods
ja
ljmp
fildll
sub
add
mov
push
js
test
fldl
test
outsb
push
dec
ret
bound
pop
mov
aad
push
push
mov
cwtl
pop
mov
rcrb
mov
lds
daa
adc
scas
sarb
dec
aam
scas
fcomps
insl
adc
lcall
mulb
sahf
or
mov
dec
sbb
xor
mov
out
push
mov
pop
mov
jp
or
inc
sub
push
shl
pop
cs
and
add
dec
and
push
inc
cwtl
mov
sahf
mov
pop
clc
adc
push
lcall
in
inc
cmp
dec
lods
lcall
mov
mov
add
mov
jp
mov
inc
jnp
or
sub
add
stos
push
push
mov
add
out
inc
dec
stc
inc
inc
mov
imul
shrb
push
mov
mov
ljmp
inc
push
jge
popl
and
jecxz
add
and
mov
ja
xor
shrb
scas
out
and
xor
xor
lret
dec
adc
jge
mov
outsl
in
sbb
jg
ja
fildl
mov
sbb
xor
cs
sub
mov
dec
test
mov
dec
adc
xor
pop
add
and
inc
mov
mov
ja
xchg
xor
jg
ja
pop
xchg
lahf
xchg
out
scas
out
scas
imulb
push
scas
push
scas
cs
es
ds
ss
dec
scas
inc
scas
pop
scas
push
scas
xchg
adc
shrb
scas
ljmp
mov
xor
int3
xor
lret
jne
scas
sub
jecxz
add
jg
ja
jne
push
cltd
dec
outsl
int3
sbb
xchg
jbe
dec
leave
fbld
xor
ja
stos
xchg
xor
ljmp
sub
sub
sub
sub
lret
mov
leave
jge
xchg
in
sub
cltd
sub
lret
rorb
leave
fmull
clc
dec
push
lret
push
dec
cs
ds
inc
dec
jo
imul
ret
dec
jecxz
add
or
push
dec
pusha
dec
dec
mov
jecxz
add
xor
addr16
jecxz
and
test
or
mov
dec
rorl
adc
mov
add
mov
inc
sub
mov
andl
mov
pop
cmp
push
fsubl
les
inc
fldenv
les
jecxz
in
and
lcall
enter
aas
cmp
jl
ret
mov
inc
lret
push
cs
mov
out
sub
out
rclb
sub
sbb
lret
out
push
and
out
sub
dec
mov
xchg
mov
mov
mov
xchg
hlt
and
mov
test
in
and
out
call
push
jmp
mov
jb
inc
das
and
popa
dec
dec
sti
dec
adc
push
adc
inc
add
leave
jns
cmp
nop
push
adc
loopne
call
std
inc
loope
mov
push
int
aad
pop
mov
mov
mov
mov
mov
mov
xchg
mov
repnz
add
xchg
mov
scas
inc
stos
dec
stos
push
stos
adcb
stos
stos
shrl
or
into
sub
popa
call
jmp
rcrl
mov
les
jl
ror
in
push
clc
pusha
and
cmpl
scas
mov
ret
scas
add
sbb
push
scas
bound
jnp
test
or
push
mov
dec
fmul
repnz
out
clc
dec
push
dec
push
dec
push
dec
jb
js
xchg
dec
cwtl
dec
mov
mov
dec
cmc
dec
xor
inc
call
add
sbb
test
inc
jno
jle
jecxz
ret
scas
imul
lods
and
cmp
push
xchg
mov
ret
stos
adc
jno
xchg
stos
stos
out
sub
push
out
call
shr
cmc
sub
sbb
dec
call
icebp
jmp
in
cltd
jmp
mov
dec
sbb
jle
mov
jbe
xchg
dec
jle
xor
xchg
xor
inc
jmp
mov
cmp
jl
mov
xchg
xor
jg
ja
loope
mov
scas
push
stos
imul
lret
stos
xlat
stos
rep
daa
jo
jp
push
xor
xor
sub
mov
stos
pushf
lahf
les
xor
imul
mov
test
jo
subb
hlt
sub
dec
or
popa
dec
jo
mov
sti
aad
jne
addl
lock
and
cmpsb
fstp
test
mov
scas
adc
dec
mov
dec
cmp
jl
mov
imul
cltd
push
les
push
jbe
mov
out
pop
mov
mov
andl
aas
inc
nopl
outsb
cmpsb
sbb
jg
cltd
dec
or
add
cmp
jl
mov
stc
fs
jnp
shlb
inc
jg
ja
mov
fidivl
and
push
pop
xor
push
xchg
out
call
and
xor
pusha
jmp
mov
mov
mov
ret
jne
lea
mov
sar
cmp
jecxz
addb
and
push
sbb
into
adc
xchg
mov
test
sub
arpl
cmpsb
scas
mov
stos
lds
jg
ja
addr16
inc
loop
ja
mov
int
lds
lods
bound
jmp
pusha
out
push
push
lahf
notb
inc
in
cmpsb
jmp
jmp
jmp
mov
pop
cmp
jl
shl
pop
xor
out
mov
arpl
sbb
push
in
add
lcall
add
jle
mov
in
add
cld
call
xor
lcall
sub
sub
sub
sub
sub
sub
sub
sub
sub
lret
aam
loop
cli
sub
xchg
in
inc
or
inc
cmc
stos
stos
test
push
es
fbstp
in
jbe
or
mov
and
cld
lds
sbb
jno
subl
cmp
jl
daa
int
out
rcrb
loope
dec
push
das
int3
cmp
push
add
mov
lea
mov
lds
add
lret
add
shrb
sar
sub
push
xchg
cmp
sub
pusha
xchg
and
ja
icebp
sbb
mov
orl
and
call
jg
test
jecxz
add
and
sbb
and
aam
sub
cmp
aad
cmp
sbb
xor
adc
mov
inc
scas
push
stos
bound
sar
sub
fxch
sub
sub
lret
ljmp
shrb
dec
idivb
cs
jmp
or
mov
add
push
rclb
pop
xchg
sub
aam
and
call
push
jle
xchg
and
ret
and
shll
inc
shlb
add
ja
popl
xor
sub
mov
sub
and
cmpl
sbb
ds
inc
dec
jb
orb
xchg
jle
ficomps
inc
cmp
mov
adc
std
xor
inc
sub
pop
fcmovnb
mov
and
cmc
bound
mov
dec
dec
sbb
jb
sbb
push
push
cmpsl
outsb
push
stc
mov
stc
test
jle
data16
shr
push
xor
test
out
and
out
call
jmp
in
movsb
jmp
jmp
jmp
jmp
jmp
jmp
stos
cmpsb
mov
rol
and
mov
scas
in
nop
add
adc
dec
lods
inc
or
jecxz
add
and
inc
ds
icebp
sahf
sub
scas
cmc
scas
or
push
fsubp
add
sub
dec
ljmp
mov
lods
jmp
xlat
add
lret
leave
std
dec
and
adc
dec
jns
lea
lret
dec
fmul
add
push
xor
cmp
push
jecxz
pop
popf
bound
ljmp
lahf
xor
inc
aam
xor
sti
and
or
pop
xor
pop
clc
outsb
mov
jmp
js
jmp
mov
stos
xchg
mov
stos
loope
fisttpl
ljmp
or
and
pop
jmp
jmp
jmp
adc
dec
sahf
push
jno
loopne
mov
xchg
push
shlb
push
and
icebp
cs
sub
lock
std
pop
pop
dec
sub
pop
sbb
lds
lret
dec
adc
pop
push
aas
addl
out
loopne
lock
loop
mov
loop
mov
jle
cmp
adc
add
and
inc
sub
cmp
fs
pop
popf
jg
or
in
sub
das
xor
loop
adc
cmpsb
xchg
xor
sub
enter
div
push
es
and
gs
jle
xchg
sahf
repnz
sub
push
ja
int
sar
push
adc
xchg
loop
dec
or
dec
xchg
rolb
push
lret
gs
mov
mov
fst
add
mov
jecxz
add
push
xchg
inc
mov
mov
mov
mov
xchg
jle
adc
scas
xchg
fldl2e
out
out
loop
ljmp
flds
data16
pop
mov
scas
into
ja
pop
add
push
inc
mov
push
mov
dec
mov
stc
lds
aad
stc
sub
sub
sub
cld
add
sub
xor
pop
scas
outsl
scas
jg
scas
lahf
scas
scas
scas
mov
inc
out
jl
mov
ret
ds
dec
scas
pop
loope
dec
jle
cmp
aam
int
fcmove
fisttpll
in
dec
in
std
push
cmc
adc
mov
sbb
xor
popf
inc
mov
push
cmpsb
clc
jg
mov
lahf
jg
stc
mov
mov
into
sbb
xor
sub
sub
sub
sub
sub
sub
sub
clc
push
shrl
mov
inc
jne
jne
jne
jne
lea
jne
jg
in
xor
xchg
shrl
cmp
jnp
loopne
out
enter
sahf
jle
mov
xor
mov
mov
std
pushl
lea
and
mov
sub
or
mov
push
and
and
or
sbb
sbb
enter
in
sarb
cmp
adc
add
fwait
sub
bound
mov
and
js
out
ds
rolb
jne
lods
jg
sub
sbb
jecxz
mov
hlt
adc
sbb
jg
and
xor
cs
and
pop
sti
and
lea
push
mov
lock
in
and
sti
mov
xor
mov
sbb
insl
push
dec
loop
sbb
or
ret
inc
rolb
xor
cmp
movsl
inc
fisubs
fwait
sbb
and
push
stos
sti
imul
jp
popf
or
sbb
push
lret
mov
cwtl
and
xchg
xlat
shll
shr
or
mov
les
sbb
cltd
mov
cs
stos
add
xor
repz
lcall
jnp
les
js
mov
sbb
jle
and
and
jmp
dec
out
ret
or
jl
pop
popa
mov
xor
push
inc
test
cmp
jge
xchg
fcomps
cmpl
and
pop
sbb
nop
xlat
loopne
mov
hlt
fwait
push
imul
add
stos
clc
sbb
dec
jle
adc
lcall
add
cmp
add
popf
sahf
inc
cmp
cmp
bnd
dec
out
jl
mov
popa
scas
xchg
and
cmp
in
or
les
add
sbb
dec
cmp
clc
push
ljmp
ja
push
xchg
mov
das
inc
test
mov
add
add
out
add
dec
xor
outsb
xor
out
mov
lds
push
push
mov
mov
stc
cltd
pop
in
pop
inc
dec
adc
xor
ss
jg
adc
or
shrb
or
popa
mov
mov
sub
and
push
and
test
and
fs
imul
xor
and
push
jge
sbb
sahf
dec
push
push
mov
sub
push
sbb
push
shll
in
lods
jl
bound
inc
xor
cs
popf
mov
pop
lret
push
xor
sbb
pop
les
stc
jbe
and
sbb
fnsave
inc
frstor
sbb
jnp
scas
int
lahf
or
fs
xor
and
sub
push
popa
test
mov
inc
es
push
pop
ret
mov
dec
sub
es
add
jae
jle
mov
outsl
scas
mov
pop
push
xor
mov
out
or
lcall
and
adc
repnz
and
repnz
jle
pop
repnz
into
xor
jecxz
cwtl
xchg
incb
ja
push
cmpsl
pushf
xchg
int3
mov
divb
ljmp
nop
mov
int
mov
fidivrs
sahf
adc
cli
pop
or
sbb
adc
sbb
mov
out
inc
push
bound
adc
mov
cmp
ljmp
push
scas
jecxz
pusha
pushf
add
push
push
mov
sub
jle
mov
loope
mov
pop
hlt
ds
outsb
add
sahf
push
cld
sub
sbb
push
out
or
addb
mov
inc
ss
lret
les
mov
clc
jle
and
cmp
loope
cld
xchg
pop
lret
pop
hlt
arpl
mov
mov
clc
decl
mov
inc
jl
sub
pop
cmp
aam
movb
imul
adc
inc
and
inc
nop
xchg
and
sti
lds
std
adc
inc
sbb
inc
mov
or
sub
inc
inc
add
mov
sub
add
bound
dec
lret
push
mov
mov
dec
or
ficoms
arpl
mov
mull
call
je
je
not
adc
dec
aaa
mov
add
test
mov
sub
add
add
jl
push
cmp
pop
jle
add
mov
lahf
mov
inc
jle
xchg
pop
out
jp
ss
jl
xchg
inc
js
pusha
imul
imul
arpl
dec
mov
mov
lds
popa
in
xchg
loope
subl
inc
jo
lds
popa
cwtl
pop
mov
clc
xor
mov
es
jp
sbb
cmp
mov
into
fsubrs
test
std
sbb
pop
xchg
neg
insb
sbb
and
adc
jne
xlat
add
sbbl
arpl
fsubs
dec
mov
push
mov
stc
icebp
adc
cli
xchg
pop
iret
cld
repnz
inc
cmp
mov
cli
lds
sub
sahf
out
lahf
push
mov
and
jp
or
das
mov
push
mov
imul
orl
out
out
call
and
mov
ja
or
inc
sub
sbb
fsubr
jg
xor
and
or
stc
stos
xchg
sti
mov
push
push
xchg
and
dec
jo
hlt
lahf
les
jl
or
repz
mov
pop
jmp
sub
sarb
std
sub
test
and
fcomi
dec
mov
in
mov
jp
add
push
mov
fisttpll
inc
jecxz
xorb
xor
fs
xchg
repnz
lods
xchg
push
test
lret
sbb
insb
aam
or
sub
xchg
mov
push
and
xor
lds
or
pusha
inc
sub
in
mov
pushf
lea
outsl
idivl
test
stos
mov
mov
push
push
or
inc
test
mov
mulb
shlb
pop
adcb
movsl
iret
cmpsl
imul
shll
imulb
add
arpl
iret
in
xchg
adc
jbe
adc
shlb
imul
ss
adc
add
stos
loop
pop
jo
mov
pusha
out
inc
mov
rdpmc
xchg
sahf
cli
push
insb
push
push
out
mov
mov
sbb
add
and
push
push
jp,pn
repz
add
push
dec
cwtl
adc
int
test
push
rcrb
pop
inc
stos
fucomip
inc
xor
sbb
out
int
decb
xor
stc
add
ss
outsl
or
push
ficoms
iret
dec
repnz
add
push
cmp
shl
cmp
call
ss
addr16
insb
push
sbb
and
mov
jns
dec
sub
andb
push
fldenv
cmp
mov
push
int3
out
roll
in
movsl
mov
xor
push
jbe
sarb
loop
in
sbb
add
xchg
cmc
jbe
jg
sub
dec
and
sub
lret
iret
dec
or
xchg
adc
cwtl
imul
outsb
shlb
mov
jp
inc
jns
int3
push
sbb
jle
jecxz
fmull
cli
lds
divl
movsl
sub
or
inc
push
push
jb
fnclex
pop
cmp
loope
dec
cmp
jbe
xor
sbb
cmp
and
push
lret
dec
mov
pop
and
add
rcrl
subb
inc
roll
call
adc
inc
xorb
mov
jb
jo
jg
aaa
jle
adc
rorb
out
sbb
les
sahf
rclb
cld
sbb
test
xchg
or
lods
ret
jecxz
inc
in
insb
aam
fcoms
pop
test
fimull
jl
add
addr16
in
pushf
adc
test
adc
mov
or
incl
push
divb
shll
inc
dec
fwait
or
inc
or
and
hlt
xchg
jmp
fistpll
inc
inc
es
std
pop
and
and
test
loop
jo
dec
das
enter
sbb
js
sub
out
cmp
add
outsb
adc
adc
pusha
or
jns
adc
mov
std
push
cld
mov
arpl
icebp
jmp
adc
insl
icebp
int
stos
cmp
or
xchg
das
mov
push
rorb
ss
dec
sub
lods
adc
jb
clc
add
add
pop
insl
push
movsl
in
lret
and
push
mov
fisubrs
and
nop
jnp
fimull
fidivrl
lcall
dec
out
mov
mov
xchg
push
mov
xchg
cwtl
jge
scas
or
lcall
adc
push
mov
mov
adcl
mov
arpl
cmp
jge
or
addr16
mov
es
push
sub
jl
loopne
in
adc
mov
in
pop
cmp
push
jns
and
jno
out
mov
push
imull
sbb
push
or
jp
xchg
cwtl
lahf
or
add
cld
shll
dec
xchg
lahf
cmc
sqrtps
repnz
cwtl
mov
sti
call
sub
call
pop
push
pop
add
stos
popf
stos
cmp
int
mov
pop
jo
or
mov
jle
or
jp
push
adc
bound
in
and
add
cmp
push
pop
imul
ret
xor
push
push
fidivrl
js
mov
xchg
pop
pop
cmc
frstor
std
add
sbbl
pop
xchg
mov
or
and
or
sbb
and
insb
jbe
inc
and
and
xlat
movsl
push
dec
xor
xchg
jp
mov
or
sub
xchg
or
lcall
out
sub
add
cmpl
mov
jnp
jg
ret
mov
inc
cmp
js
and
icebp
ret
jmp
xor
xor
cmpsb
cmp
mov
pushl
in
jle
cli
push
mov
pop
push
pop
sub
addr16
loope
dec
ret
push
or
jae
add
hlt
cmp
and
cmp
xor
cmp
dec
and
ljmp
or
mov
cltd
add
dec
fisttpll
inc
push
addb
out
inc
pop
adc
mov
aaa
pop
inc
scas
xor
inc
pop
push
jecxz
arpl
out
lods
jg
out
mov
adc
nop
cmp
and
arpl
cmp
cli
ja
movsl
push
and
mov
js
jecxz
shl
jae
xlat
cwtl
adc
xchg
fstps
call
lds
shl
mov
icebp
mov
loop
js
nop
test
out
lds
and
mov
push
fwait
nopl
xor
push
aas
mov
lock
jmp
pop
jno
mov
add
sub
inc
cmp
aas
or
pop
mov
push
push
inc
movsl
sub
xor
xchg
out
bound
xlat
imul
sub
pop
and
fwait
sbb
push
or
ret
aaa
cli
xor
xchg
fmuls
jl
pusha
mov
rorb
out
mov
add
xor
mov
cs
imul
lea
push
and
sbb
add
test
arpl
sbb
cs
xor
lods
popf
dec
sub
sbb
fmulp
daa
mov
sbb
xchg
push
mov
xchg
mov
ss
push
jne
movsl
lds
or
mov
adcl
js
cmc
mov
out
or
aam
and
jns
inc
rorl
add
sbb
push
ljmp
sbb
in
sbb
sbb
xor
shl
pop
jecxz
jge
inc
sbb
icebp
out
jmp
sbb
arpl
jle
mov
je
clc
and
outsl
repnz
arpl
fstpl
push
or
stos
mov
dec
out
mov
mov
sbb
xor
out
jle
push
and
repz
pop
mov
dec
mov
push
outsb
sbb
out
xor
in
leave
stos
fstpl
jb
pop
push
adc
sbb
addb
pop
xchg
pop
and
cld
jecxz
push
mov
adcb
cmp
jo
sarb
cltd
mov
sti
or
jge
mov
lds
or
mov
insb
sub
mov
sbb
xchg
or
loope
cmc
sub
push
xor
mov
sbb
or
push
xor
sti
sub
xor
mov
dec
jl
or
fnstcw
inc
add
cmp
out
cmp
movb
es
and
pop
aad
out
push
in
out
xor
std
inc
sub
fldenv
pop
stc
push
inc
mov
out
mov
add
xchg
in
fs
and
out
lea
push
outsl
mov
xor
inc
fisttpl
std
scas
ds
xchg
daa
pusha
xchg
pop
mull
stos
lret
xchg
inc
or
daa
or
and
dec
pop
push
into
sbb
mov
cmp
std
xor
shlb
jge
fld1
addr16
mov
xor
insb
std
jecxz
fiadds
out
push
push
idiv
jae
xlat
cmp
loop
xchg
stos
fwait
insb
xlat
jne
loop
adc
mov
mov
mov
add
inc
sbb
jo
idivl
jb
clc
jle
xchg
out
mov
mov
sub
stc
push
ja
stos
xchg
inc
xchg
pop
mov
je
aad
pop
pop
fmull
rcrb
pop
mov
sahf
mov
add
add
sbb
dec
dec
sub
popa
arpl
pop
clc
sbb
jle
inc
sub
aam
imul
cmp
jo
stos
and
jbe
out
leave
lds
out
inc
ret
dec
sub
add
jecxz
test
arpl
outsb
mov
mov
jge
adc
jo
mov
rcrb
pop
daa
or
aaa
fwait
clc
fdivr
clc
insl
cmp
fwait
nop
enter
scas
das
pop
out
push
lea
nop
mov
dec
mov
popf
mov
mov
je
and
sbb
nop
pop
pop
xor
cwtl
stc
ret
inc
push
lcall
or
bound
push
or
push
or
loopne
cs
or
cwtl
xorl
push
adc
push
jecxz
jae
add
imul
mov
sbb
mov
ljmp
mov
negl
mov
dec
push
push
add
or
mov
or
leave
outsb
arpl
mov
pop
cld
loope
fs
add
push
push
mov
popa
shrb
dec
push
out
xor
and
imul
sbb
cmc
clc
je
dec
jae
and
xchg
sbb
mov
push
and
psadbw
out
pop
mov
test
xchg
sub
loope
test
bound
fstpl
push
xlat
popf
fwait
sub
jp
sbb
mov
testl
popa
dec
mov
jnp
call
pop
push
adc
cs
sub
sbb
clc
mov
lods
mov
push
push
adc
lods
jae
addr16
dec
jbe
pop
push
mov
stos
icebp
cmpsb
jo
jae
cmp
mov
aaa
arpl
mov
and
and
test
or
in
and
pop
push
repz
push
jbe
ss
jmp
dec
clc
lods
push
jb
je
fistpl
sbb
inc
arpl
sahf
push
add
leave
push
mov
imul
out
inc
push
xlat
dec
pop
lahf
sbb
or
or
arpl
pop
mov
push
jae
in
pop
push
inc
jecxz
xchg
pop
push
test
scas
out
adc
out
aas
mov
push
push
mov
addb
bound
ljmp
mov
adcl
dec
push
outsl
fisubs
xchg
fs
inc
and
inc
test
dec
pushf
xor
nop
jns
cs
sbb
push
out
rcrl
out
push
nop
jb
sub
or
xchg
mov
js
push
mov
pop
je
ds
scas
ds
aam
xchg
lods
outsl
sub
xor
xchg
push
push
test
fidivrl
cmpsl
test
pop
cs
dec
popa
pushf
push
push
cmp
mov
mov
cmp
push
jp
aam
cwtl
inc
fwait
dec
and
arpl
fisubl
ret
push
cmp
cmpsb
mulb
pop
dec
ljmp
cmp
push
js
sbb
in
jp
xchg
ss
pop
pop
xor
mov
scas
xchg
push
dec
stc
orb
push
sahf
movsb
cmp
jb
push
mov
inc
nop
jle
fstpl
inc
jns
inc
inc
and
jb
ds
in
pop
cmp
sub
adc
sbb
mov
dec
in
mov
dec
cmp
lret
cli
andb
push
hlt
scas
xchg
sub
mov
add
ja
pop
push
out
and
lods
jp,pn
mov
mov
cmp
xchg
ja
pushf
dec
into
push
inc
inc
push
mov
mov
cmp
cmpsl
mov
xchg
pop
dec
mov
inc
push
inc
adc
pop
sbb
xchg
cmp
mov
xchg
cmpsl
sbb
adc
push
sbb
jb
mov
push
push
pushf
inc
xchg
xchg
test
rcl
dec
mov
adc
pop
pop
and
mov
mov
jbe
inc
xchg
test
sbb
cmp
mov
jp
inc
inc
push
mov
cmpsl
xchg
cmp
push
dec
sbb
xor
ds
jp
jmp
jo
mov
outsl
in
lcall
cmp
pop
jl
orb
pop
movsb
mov
xor
adc
movsb
xchg
in
jle
cmpsl
movsb
xorb
dec
inc
roll
push
push
sub
into
push
push
push
push
jnp
call
mov
mov
push
push
jb
sbb
sbb
sarb
movsb
imul
xor
mov
int3
adc
ds
push
mov
push
sarl
adc
and
clc
cmp
jbe
loop
cld
cmpsb
xchg
js
jle
mov
jo
pop
dec
lods
inc
push
xchg
mov
push
nop
cmp
test
jo
orl
push
mov
lds
ss
rcl
cmp
jbe
push
cwtl
xchg
int3
sbb
ret
sarb
test
dec
inc
shll
cmc
mov
cmpsb
leave
jb,pt
sbb
pop
mov
inc
add
cmp
pop
ss
push
mov
sbb
sub
jbe
jb
sahf
arpl
pop
in
xchg
cmp
lea
call
jb
or
inc
mov
sbbb
and
nop
jbe
jb
or
add
pop
ret
mov
in
push
pushf
jo
push
arpl
ss
mov
dec
push
mov
mov
inc
cmpb
arpl
jbe
push
xchg
popa
int3
fsubl
push
push
cli
xchg
cmpsb
cmp
and
test
push
mov
mov
addb
pushf
incb
rorb
cmp
sbb
mov
mov
push
push
cli
pop
inc
fidivs
or
mov
push
popf
sbb
pop
mov
mov
push
dec
negb
mov
pop
mov
in
pop
inc
dec
inc
cmp
jp
cmp
shll
adc
xor
adc
dec
ljmp
mov
aad
lcall
outsl
cmp
push
cmp
mov
popa
ret
lcall
adc
cmpsb
sahf
push
int3
adc
adc
sbb
xor
push
popa
and
and
mov
cli
xchg
inc
and
mov
push
jb
inc
sbb
mov
jno
inc
push
ss
cmpsb
iret
or
and
mov
arpl
mov
iret
sub
stos
and
stos
ja
inc
inc
adc
lret
lcall
and
jbe
fdivrs
mov
xchg
xchg
xor
call
inc
stc
iret
fdivl
cmpb
dec
out
xchg
add
push
push
ss
mov
fistl
inc
xor
mov
mov
and
inc
push
in
push
push
mov
adc
sub
pushf
jg
push
lcall
cmp
pop
dec
cmp
xchg
cmp
lret
sbb
out
jbe
ss
xchg
inc
mov
jne,pt
aad
inc
push
xchg
es
sbb
lea
and
dec
mov
popa
xor
js
lret
lcallw
add
add
lret
push
insb
or
out
inc
dec
dec
pushf
push
scas
fcmovnu
cmp
mov
loop
sub
rcrb
push
dec
iret
jae
pop
push
xchg
push
lcall
adc
and
sbb
les
xchg
dec
xchg
insl
push
mov
stos
lods
ja
jo
repz
pop
ror
inc
dec
push
gs
in
cmp
adc
xchg
lret
mov
rorb
xchg
push
mov
in
xorb
mov
mov
jbe
stc
popa
dec
mov
int3
ficoml
ss
cmp
ds
push
cmp
xchg
jb
ss
mov
and
ss
test
out
pop
xchg
call
dec
pop
js
jle
fucomp
mov
xchg
fdivrl
cmp
movsl
cmp
xor
push
scas
nop
arpl
jle
sbbb
push
mov
pop
jo
pop
xlat
movsb
rolb
shlb
lcall
insb
in
sbb
pop
mov
fwait
outsb
jp
cli
movsb
pop
mov
cmpsl
push
push
xchg
pop
cmpb
rolb
jl
aam
sarb
in
popa
inc
dec
mov
es
inc
mov
or
sbb
add
dec
jl
js
sbb
aam
and
dec
sbb
sbbl
popa
dec
inc
cmpsb
mov
mov
or
cmp
sub
push
jo
mov
mov
sbb
and
mov
jge
push
fisttpll
cmp
shll
cmp
movsb
into
mov
test
push
js
cmpsb
jmp
repnz
mov
mov
das
dec
and
mov
dec
mov
xchg
cmp
inc
aad
outsb
pushf
popf
push
ljmp
jo
inc
movsb
inc
adc
xchg
fstps
loop
lock
jb
xchg
pop
movsb
cmpb
fcompl
inc
push
shlb
mov
inc
ss
iret
in
enter
cmp
out
push
mov
js
cmp
pop
jmp
dec
and
and
mov
push
out
jo
push
sbb
sahf
inc
cmp
ret
nop
dec
push
push
arpl
incb
cmp
mov
mov
mov
mov
test
add
inc
popa
mov
rcll
xchg
or
push
push
sahf
xor
orb
and
jo
pop
push
fwait
jb
pop
push
out
mov
sbb
and
push
xchg
pop
jmp
arpl
scas
pop
mov
jl
adc
repnz
mov
and
scas
pop
js
jo
xchg
jnp
adc
and
jle
stos
dec
xchg
push
dec
mov
sbb
sub
sbb
inc
inc
lds
mov
arpl
push
cmpsl
pop
pop
dec
mov
fidivrl
mov
cmp
arpl
adc
mov
mov
into
lret
or
jo
dec
lret
pop
sub
ss
sub
push
push
xcrypt-cbc
cmpsl
xchg
popa
push
jo
xchg
mov
int
test
push
mov
sahf
xchg
adc
dec
sahf
aam
pop
mov
lcall
inc
out
jbe
jo
xchg
js
ret
and
pop
shll
and
ret
pushf
pop
sahf
xchg
shrb
cmp
cmpsl
pop
mov
pop
inc
cld
push
jle
xor
xchg
push
aad
xacquire
popa
mov
inc
rclb
jl
movsb
pop
mov
loop
mov
mov
cmp
push
xchg
cmpsl
and
inc
mov
or
pop
fdivrl
test
dec
cmc
inc
lahf
scas
mov
cwtl
pop
inc
js
push
mov
jo
xorb
jl
dec
and
nop
jb
in
rcr
movsb
dec
push
sub
xchg
inc
or
inc
push
mov
dec
push
sbbb
js
fdivp
bound
cwtl
stos
mov
stos
lea
mov
lret
mov
pop
and
mov
mov
inc
pop
adc
xchg
decb
insl
mov
xchg
inc
push
mov
ja
pop
inc
jl
sahf
repnz
sbb
inc
test
ret
orb
inc
in
ud1
rcrl
incb
xchg
and
sarl
jle
push
jbe
sbb
jg
dec
aas
add
adc
and
xchg
xor
and
inc
push
xchg
mov
inc
cmp
inc
inc
push
fildl
ret
sbb
inc
and
ret
xchg
push
sbbb
add
sbb
xor
and
inc
and
jg
cmp
jp
and
cli
mov
pop
xor
pusha
jne
or
inc
push
mov
cmpl
sub
lcall
or
push
jb
pop
push
stc
shlb
mov
inc
xchg
inc
push
ret
sub
or
cli
and
mov
lcall
xchg
mov
xchg
xchg
mov
inc
mov
lods
leave
pop
push
mov
loope
arpl
ret
popa
cmp
pushf
rcr
lods
hlt
nop
jae
in
sbbl
mov
pop
dec
mov
out
xor
push
add
sbb
xor
jbe
arpl
mov
popf
movb
inc
mov
dec
in
xchg
sub
mov
mov
mov
inc
loope
jb
leave
push
pop
push
adc
mov
mov
xchg
cmp
stc
xchg
push
jnp
jl
dec
pop
push
shl
jp
mov
push
inc
pop
bound
pop
xchg
and
lcall
outsb
pusha
mov
dec
nop
and
aaa
lods
stos
dec
orb
xor
cmp
popa
jg
callw
call
jl
lods
cmpb
pushf
int3
or
cwtl
jp
sarl
ja
mov
popf
rcrb
or
and
xor
sahf
cmp
dec
push
sbb
mov
jle
push
mov
pushf
lret
push
nop
andb
push
inc
test
add
dec
dec
mov
roll
mov
ds
pop
mov
aad
add
mov
pop
sbb
cmp
rorl
adc
shll
dec
jl
enter
adcb
jne
fs
xor
leave
int3
adc
test
jo
cmp
and
mov
or
rcrb
loope
xchg
cli
mov
aas
rolb
popf
adc
shr
ljmp
int3
push
push
jp
inc
xchg
sbb
fistpl
mov
ss
lret
popa
jo
sbb
mov
mov
pminsw
xor
dec
jb
test
inc
xchg
and
out
adc
sub
mov
mov
sub
mov
in
popa
inc
test
es
sbbb
xor
pop
inc
xchg
push
mov
dec
mov
dec
aaa
aad
imul
lret
repz
pop
dec
push
adc
push
bound
lret
jle
and
hlt
pop
insb
push
mov
int
decb
jmp
and
fistpll
cwtl
pop
jg
sbb
mov
push
and
mov
mov
in
mov
sub
dec
cmpb
sbb
push
popa
cmpsb
jb
ss
xchg
pop
push
inc
bound
lret
mov
dec
sti
mov
into
negb
xorl
pop
lds
mov
xchg
push
in
ss
nop
cli
jl
push
lret
iret
dec
imul
mov
mov
std
and
call
cmp
test
sub
pop
pop
xor
cmp
jo
ja
adcb
dec
int3
inc
cmp
inc
pop
push
js
lea
negb
jbe
lcall
or
adc
mov
and
fisttps
pop
aas
jb
test
and
adc
cwtl
addb
pop
xchg
sbbb
jno
addl
mov
test
scas
rclb
cmpsb
inc
jp
sbb
push
shll
mov
push
and
sbb
movsl
add
or
pop
inc
filds
adc
jo
jo
mov
aaa
ss
inc
push
adc
sbb
jne
mov
cmp
push
test
movsb
ss
push
inc
orl
sub
aad
fidivs
mov
sarb
push
lret
cmp
fimuls
mov
pop
sub
ds
jo
inc
mov
push
sti
idivb
pop
lds
nop
rcrb
popa
and
adc
add
cmp
push
lcall
xchg
jb
xchg
fidivrl
in
mov
push
add
ss
push
push
in
xchg
push
negb
sbb
dec
ret
dec
and
inc
jae
lahf
xchg
sarb
mov
xlat
sarb
or
push
cmpsl
sbb
mov
jnp
adc
add
dec
jno
push
bound
iret
dec
cmp
xor
and
push
pop
lahf
inc
arpl
push
or
mov
js
xchg
xchg
push
sbb
lret
in
inc
cmpsb
dec
and
add
gs
inc
push
xor
jl
dec
cmp
pushf
xchg
rcrb
inc
xchg
sub
mov
inc
mov
cltd
repz
jbe
lret
xchg
jb
cli
addb
pop
mov
pop
sbb
je
sbb
jl
mov
add
cmp
out
pop
push
mov
std
repnz
sbb
and
jb
push
push
in
fidivrl
and
push
orb
adc
cmpsb
mov
inc
nop
in
push
inc
ret
mov
inc
push
dec
or
adc
shl
andb
jle
pop
jnp
fcompl
sbb
sub
and
mov
mov
nop
mov
sub
cmpsl
orb
xchg
cmp
sbb
cmpsb
cmp
xchg
ss
daa
ljmp
test
dec
add
push
es
jle
int3
cmp
nop
pop
shrb
cmp
addr16
fwait
shlb
dec
popa
lret
mov
and
sahf
sbb
sbb
xchg
xorb
pop
dec
ret
imul
mov
jle
jne
data16
sbb
cltd
jbe
fdivrl
inc
cmpsl
mov
nop
incb
in
fcoml
ljmp
fcompl
test
or
sbb
mov
addb
adc
push
xchg
xchg
push
popa
test
jg
dec
mov
mov
cmpsb
cli
out
arpl
jg
add
push
ljmp
and
mov
xor
lret
test
dec
call
loope
dec
mov
int
and
push
inc
js
mov
sbb
xchg
out
adc
mov
imul
test
dec
pop
aam
xchg
test
mov
xchg
mov
ret
dec
sbb
and
stos
ss
push
cwtl
mov
jo
inc
lret
in
push
pushf
js
or
cmp
add
inc
xchg
mov
repz
in
pop
mov
pop
pop
aam
pop
or
adc
in
js
or
in
loop
dec
notb
cmpsb
mov
inc
cmp
jp
inc
movsb
mov
and
push
pop
push
push
jecxz
jle
ret
iret
aaa
leave
test
cwtl
mov
inc
pop
lcall
shlb
cmp
cld
sbb
imul
testl
xchg
jb
imul
xor
add
push
sub
pop
mov
scas
jbe
dec
ds
mov
popa
jb
inc
adc
cmp
pop
sub
xchg
mov
jb
xor
sub
push
mov
subl
out
push
pusha
cmp
inc
test
out
loopne
xchg
pop
xchg
jbe
lret
sub
pop
in
and
aad
in
sbbb
or
xchg
pop
dec
inc
sub
in
lcall
pop
xchg
pop
lret
mov
xchg
pushf
jp
or
nop
xchg
add
and
mov
out
push
mov
int
imul
xor
jbe
shlb
addb
inc
and
and
cmc
out
cmpsb
add
mov
or
clc
mov
push
andb
jb
imul
push
cmp
nop
mov
sahf
sbb
push
test
inc
mov
popf
mov
push
lcall
push
pop
mov
pop
or
mov
popa
enter
andb
jl
popa
push
cmp
dec
mov
shlb
dec
mov
nop
jp
popa
scas
test
mov
insb
or
push
jl
ja
sbb
lds
and
cmp
sbb
dec
inc
sbb
rcll
push
sahf
cmp
arpl
lock
inc
fwait
subl
lcall
mov
dec
cmp
ja
push
ret
inc
jb
outsb
jbe,pt
cmpsl
dec
sahf
jle
mov
cmp
inc
xchg
lds
or
push
fnsave
das
and
push
ja
inc
dec
aad
add
add
cmp
arpl
push
xchg
popa
movsb
mov
nop
mov
push
adc
movsb
sahf
mov
pop
jb
push
dec
mov
pop
lcall
cwtl
inc
dec
movsb
lcall
and
aad
scas
jp
sbb
dec
mov
sahf
cmp
sbbb
sub
pop
xor
or
popa
xchg
push
dec
and
mov
cmp
push
aas
rorb
ret
mov
and
ja
and
ss
cmp
cwtl
xchg
dec
xor
mov
mov
movsb
mov
inc
jl
and
xchg
mov
mov
fisttps
xor
inc
jb
sbb
jg
xchg
and
sahf
xchg
lcall
in
add
add
inc
mulb
cs
sahf
jp
ja
dec
ss
testb
jns
inc
aad
ss
mov
pop
ret
and
sbb
mov
inc
mov
inc
pop
inc
jp
inc
or
mov
mov
dec
inc
mov
mov
mov
push
jb
xchg
or
sub
ret
adc
mov
mov
mov
and
jae
dec
push
mov
dec
mov
je
or
popf
pop
xchg
sbb
pop
push
ds
cmpb
outsb
jle
inc
outsl
pop
and
ror
out
or
push
dec
cmc
push
cmp
inc
pop
es
cwtl
shlb
mov
xchg
test
mov
mov
sbb
jbe
cmp
in
mov
cs
ds
orb
in
mov
cmp
aas
mov
fdiv
push
aad
je
cmpsl
cmpb
sbbl
call
cmc
inc
mov
loope
push
movsl
fs
inc
sbb
das
ror
leave
mov
pushf
inc
mov
jp
ret
fistps
cwtl
mov
push
push
cmp
inc
divb
nop
arpl
pop
jb
adc
popa
push
and
test
ret
pop
adcl
ret
xor
push
movsb
inc
mov
inc
adc
jb
dec
ss
iret
xchg
mov
xor
sbb
and
lret
sbb
mov
sbb
mov
lea
movsb
outsb
xor
or
lret
and
cwtl
lock
jo
sbb
xor
inc
inc
or
in
dec
mov
repnz
push
pop
mov
movsb
inc
or
js
inc
or
push
cmp
jns
jbe
lret
je
ljmp
adc
mov
xor
ss
xchg
inc
in
rorl
xchg
cmp
bound
jb
jge
dec
dec
daa
lret
xor
std
movsb
mulb
ret
cmp
push
pop
push
incb
out
sub
stos
lods
jl
ds
lret
mov
push
inc
js
mov
mov
dec
xchg
mov
lret
inc
cli
ss
aas
add
movsb
outsb
inc
dec
shll
out
adc
cltd
test
jne
jo
pushf
cmp
inc
aaa
dec
xchg
cltd
data16
mov
push
mov
xchg
fwait
jp
and
movsb
lahf
pop
cs
mov
inc
xor
hlt
dec
mov
movsb
and
xchg
push
js
fsubl
out
push
push
and
nop
fimull
cmp
ret
cmpsb
cltd
arpl
jle
jmp
sub
cmp
xchg
push
sahf
fildl
arpl
xor
cmp
adc
dec
inc
insb
jne
out
sarl
cmpsb
xor
push
or
push
repnz
adcl
shrb
xchg
test
adc
mov
sar
cwtl
shlb
mov
pushf
lds
js
movsb
fiaddl
adc
hlt
mov
cli
flds
mov
pushf
cmp
cmp
adc
adc
test
add
mov
dec
dec
pop
push
push
aam
mov
out
inc
arpl
lret
mov
xchg
pop
jle
push
test
inc
sbb
js
lods
mov
xchg
adc
cmp
mov
movsb
test
movsb
movsb
aaa
lds
pop
sarb
lret
outsb
mov
aam
and
mov
add
ror
and
add
push
adcb
or
mov
js
xchg
pop
inc
scas
ds
push
int3
fnstcw
jle
xchg
add
inc
ficomps
push
fwait
mov
cmp
fisttpll
push
or
jl
adc
fsubl
in
xchg
cmc
jp
mov
add
aad
mov
call
jo
push
pop
mov
cmpsl
xor
cmp
push
divb
xchg
cs
hlt
lret
mov
sbbb
outsl
dec
mov
mov
inc
xor
jbe
jo
mov
pop
icebp
mov
jbe
jnp
pushf
push
jle
cld
imul
cmp
jp
or
jnp
cmp
add
sub
or
popf
sarb
rorl
or
xor
pop
andb
fwait
mov
in
xor
ss
lcall
cmp
jle
dec
cli
ss
mul
bound
sbb
xchg
lcall
mov
loop
and
nop
mov
gs
and
mov
pop
pop
ss
cmp
clc
cmpsb
add
push
mov
jp
ret
dec
out
pop
xor
xchg
dec
mov
stos
aaa
push
pop
cmpl
in
jmp
test
jle
jmp
pop
push
push
into
scas
ret
or
insl
sbbl
and
dec
inc
mov
xchg
cld
test
pop
mov
pop
and
mov
sbb
push
fmull
pop
xlat
push
mov
idiv
sub
sbb
ds
mov
fstl
cmp
into
pop
xchg
xchg
es
pop
dec
adc
mov
inc
adcb
cmp
lcall
sub
stc
xchg
jle
xchg
adc
out
push
mov
or
lret
jbe
xor
inc
sbb
cwtl
xor
lcall
xor
jae
mov
xchg
fucomi
sbb
call
js
mov
mov
in
inc
mov
inc
inc
mov
shrl
sbb
inc
popa
js
in
sbb
pushf
mov
inc
jb
push
pop
shl
leave
in
mov
and
xor
js
sbb
loop
loop
pop
xchg
add
nop
cmp
and
mov
push
ret
call
cmpsb
xor
hlt
mov
lds
fwait
inc
ss
dec
fisttpll
adcb
dec
and
jp
push
mov
inc
adc
fsubl
and
dec
sbb
push
cmp
sbb
ret
mov
mov
push
mov
mov
orb
mov
xchg
mov
adcb
dec
dec
jb
inc
and
xchg
jno
xor
pop
mov
fdivrl
or
push
push
xchg
mov
and
cmp
lcall
mov
dec
pushf
movsb
cmpsb
stos
pop
mov
sbb
sbb
jp
dec
inc
pop
and
dec
pop
pusha
cli
cmp
mov
int3
xor
arpl
inc
sbb
push
xor
or
xchg
popa
nop
ss
or
dec
arpl
xchg
push
pushf
pop
jbe
and
inc
xchg
movsb
cmp
mov
enter
ret
xorb
ret
test
inc
out
loop
dec
inc
pop
shufps
lcall
in
arpl
dec
and
inc
inc
xchg
inc
aad
nop
mov
test
cmp
mov
or
aaa
dec
push
xchg
loop
nop
js
int
inc
ss
test
scas
inc
cs
inc
or
xchg
push
or
cmpb
sar
sub
jo
dec
lcall
mov
and
test
jb
push
in
sahf
sbb
xor
test
aam
nop
fldt
add
inc
adc
push
out
cmp
mov
mov
xorb
jb
sub
popa
mov
push
push
inc
ja
sbb
aaa
lret
loope
popa
dec
xchg
xchg
inc
xlat
cmpsl
jne
pushf
cmp
push
andb
mov
stos
fldcw
and
shrb
sbb
sarl
scas
mov
or
xor
fiadds
jp
cltd
gs
daa
leave
icebp
mov
rclb
mov
xor
push
jge
aas
xor
jnp
cmpsb
jbe
jb
xchg
adc
ret
inc
inc
jl
adc
xchg
pushf
pushf
xchg
je
inc
xchg
dec
nop
push
push
xchg
xchg
mov
addb
popa
cmp
cli
dec
push
sub
mov
mov
fistpll
bound
cmp
push
dec
mov
mov
xchg
cmpsb
into
movsb
mov
mov
jo
sub
inc
ljmp
mov
repz
pop
sbb
gs
arpl
sub
jb
mov
popf
bound
arpl
movsb
call
jb
mov
aas
inc
inc
mov
xor
mov
mov
lcall
xlat
mov
push
xchg
xchg
jno
jle
mov
sub
ja
mov
push
xchg
xor
and
xor
mov
and
pop
mov
arpl
rcrl
fildll
inc
outsb
sbb
sarb
test
inc
cmp
jo
ds
jge
jnp
stc
and
popa
jmp
js
nop
gs
mov
or
movsb
dec
out
mov
mov
idivb
jo,pt
rclb
pop
lahf
jle
pop
scas
fisubs
mov
xorl
and
cmp
mov
andb
mov
out
push
lcall
cwtl
xchg
inc
mov
pop
loop
in
inc
dec
mov
push
push
arpl
push
jle
cmp
pop
and
cmp
push
xchg
xchg
dec
fstl
and
inc
xor
push
mov
or
pop
dec
jb
or
xchg
lret
out
and
jo
or
inc
lods
push
sbb
mov
jp
mov
xchg
call
aam
inc
iret
rcl
pslld
lds
mov
push
cmp
adc
int3
xor
int3
jl
adc
incl
mov
pushf
add
dec
xchg
inc
dec
cmp
xor
ljmp
loope
ds
jl
inc
pop
fisubs
sbb
mov
in
pushf
mov
push
and
nop
push
shlb
jl
pop
pusha
sbb
jo
gs
pusha
dec
xchg
int
mov
ss
pop
mov
lds
dec
xchg
mov
lahf
cmp
pop
jo
fdivs
jb
sub
xor
push
add
cmp
inc
pushaw
adc
orb
dec
pop
inc
cmpsb
out
mov
jbe
cmpsb
lods
mov
push
aad
mov
js
jp
mov
sar
jb
subb
jl
push
in
in
and
les
sbb
mov
sbb
jg
and
push
dec
aad
ja
notb
mov
push
mov
push
push
jb
mov
push
inc
xchg
ss
push
ss
pop
xchg
dec
xchg
and
push
jmp
cs
pop
and
sahf
aaa
add
jl
push
rcrb
adcb
jp
je
cmc
pop
ljmp
cld
inc
push
mov
and
loop
xchg
add
cmp
inc
push
inc
sub
xchg
push
orb
fimull
in
push
mov
inc
rolb
aam
js
cmp
out
mov
push
orb
mov
sarb
and
orl
stos
or
push
dec
ret
jbe
pushf
sbb
movsb
xlat
data16
popa
imul
loope
dec
sbb
and
mov
adc
sbb
loop
ret
popa
push
mov
cmc
jl
scas
in
adc
in
push
adcb
mov
stos
jle
and
sbb
ljmp
addb
push
add
dec
cmp
mov
or
push
jo
or
jl
mov
push
push
aam
jb
nop
mov
test
ja
xchg
push
loop
push
movsb
loop
in
mov
mov
inc
jno
les
and
cmp
sbb
sahf
pop
jmp
xchg
mov
inc
jp
add
inc
dec
push
sbb
mov
mov
xchg
sahf
popa
xor
cwtl
js
xlat
sub
movsl
test
dec
loop
pop
insl
rorb
lret
lahf
dec
sbb
scas
stos
ljmp
pushf
stc
mov
xchg
jne
jl
jge
inc
jns
shlb
sbb
test
inc
pop
in
jmp
cwtl
sbb
xor
std
jne
xchg
jge
xchg
dec
inc
testb
ret
ret
dec
push
js
iret
les
cmpsb
add
out
ss
dec
xor
jecxz
dec
roll
inc
nop
stc
ficoms
push
xor
pushf
stos
arpl
mov
int3
push
push
push
mov
adc
cwtl
mov
stos
mov
xor
fwait
xchg
outsb
mov
lcall
std
mov
sbb
call
cmp
mov
mov
cli
loop
sbb
lcall
and
mov
loop
movsb
push
mov
push
push
inc
cmpb
xchg
int
daa
ror
pushf
ds
inc
jns
iret
inc
and
mov
mull
and
mov
stos
addb
nop
pushf
rclb
xor
mov
pop
sbb
mov
pop
cltd
push
cmc
mov
cmpb
and
mov
cmp
xor
mov
sbb
jecxz
mov
xorb
xor
mov
pop
outsb
out
pop
lret
sbbb
jle
cmp
sbb
cltd
addl
cmp
test
push
fidivs
mov
mov
xchg
jo
lods
mov
mov
in
mov
adcb
out
rorl
lret
mov
mov
inc
shlb
sbbb
mov
call
mov
movsl
xchg
movsl
jns
or
rcll
add
test
lods
test
ljmp
pop
fldl
xor
scas
jbe
jno
cmp
fdiv
and
ljmp
jo
popa
loope
xlat
mov
cmc
in
jo
pushf
ja
aad
dec
xchg
rorb
adcb
add
cs
xchg
jp
fimuls
arpl
sbb
cmpb
mov
js
call
mov
push
mov
sahf
ja
dec
mov
add
xchg
dec
sarl
add
adc
fs
in
jp
sub
mov
aad
xor
push
xchg
cmp
sbb
xchg
sbb
out
pushf
dec
push
inc
fidivrl
cmp
es
sub
icebp
int3
mov
sub
loop
mov
addr16
mov
dec
xor
enter
shll
ljmp
cmp
outsb
mov
dec
fimull
dec
push
lret
dec
push
test
mov
neg
mov
repnz
xchg
fwait
sarl
push
pop
test
sbb
das
push
scas
mov
adc
pop
xchg
push
in
xchg
cld
call
cmp
cmc
jnp
lods
idivb
stos
mov
inc
jbe
ljmp
in
subb
in
ljmp
inc
test
in
xchg
andb
push
bound
testb
ss
ret
pushf
pop
inc
nop
push
test
arpl
push
push
lret
pop
cmp
aam
sahf
iret
dec
cmpsl
pusha
popa
ss
nop
into
sbb
or
mov
dec
cmp
inc
mov
push
aaa
outsl
mov
push
xchg
jp
popa
lods
stos
subl
mov
dec
movsb
std
jae
xor
mov
mov
pop
test
jl
dec
aas
fisttps
sub
and
ss
mov
rcrb
gs
push
mov
lcall
and
and
xchg
sbb
lahf
mov
cwtl
test
pushf
xchg
test
shll
cmp
inc
xchg
push
jecxz
xchg
ss
inc
and
jp
xor
pushf
arpl
ds
add
xchg
stos
test
inc
push
in
arpl
dec
in
lret
pushf
int3
cmp
xchg
pushf
mov
stc
xchg
int
mov
lock
arpl
dec
lret
mov
dec
xchg
and
dec
dec
xchg
jb
inc
dec
adc
dec
iret
mov
or
xchg
stos
pop
mov
inc
sbb
cmp
inc
push
mov
dec
inc
sub
mov
pop
mov
insl
popa
dec
iret
sbb
jb
in
lds
xchg
mov
mov
push
neg
xchg
insb
les
aaa
or
xchg
lcall
xor
cmp
xchg
pop
jnp
rcl
xchg
sbb
cmpsl
out
inc
pop
push
outsb
movsb
adc
scas
push
in
jp
cmpsl
mov
push
cmp
dec
loopne
ds
xchg
cmpsb
cmpsl
and
adc
inc
sbb
cmp
dec
and
mov
and
add
mov
in
dec
jbe
imull
and
aaa
push
mov
js
and
cmp
lret
iret
push
lcall
push
xchg
sbb
mov
push
jl
sub
jb
and
outsl
xchg
js
popa
inc
or
mov
in
in
or
leave
pop
dec
mov
lcall
mov
sbb
inc
lds
inc
jnp
in
inc
mov
mov
mov
loope
rcl
push
jge
pop
dec
xchg
inc
pop
inc
mov
xchg
inc
sbb
mov
dec
aam
dec
js
mov
and
inc
rorl
jl
lods
ljmp
mov
jb
and
loop
inc
in
rcrb
pop
dec
push
icebp
and
xlat
mov
ljmp
shrb
mov
push
movsb
inc
aas
out
in
mov
cmp
aas
in
jl
test
mov
cmp
push
mov
adc
popa
cwtl
inc
jbe
xchg
int3
push
dec
inc
ss
cmp
push
addb
push
push
stos
inc
xchg
mov
paddq
or
push
pop
cmp
dec
jo
pop
and
xor
in
jl
mov
data16
ss
or
mov
cmpsb
or
inc
mov
xchg
sarb
dec
or
and
scas
gs
aad
mov
push
mov
ss
jl
jle
loope
inc
ss
push
xor
sbb
in
mov
js
xchg
inc
cmp
mov
cmp
icebp
dec
pop
push
out
mov
and
jle
pop
mov
or
jb
jl
and
adc
jg
movsb
mov
stc
xor
inc
xchg
sbb
leave
dec
inc
ss
mov
xchg
pushf
add
pop
int3
push
jbe
mov
cli
jne
or
insb
ljmp
mov
lock
push
pop
lret
xor
mov
test
cmp
mov
cmp
ds
ret
inc
inc
mov
cmp
dec
pop
cmp
and
dec
jae
jo
mov
and
cmp
ret
out
arpl
mov
sahf
cwtl
inc
test
mov
lcall
lods
xchg
lea
sbb
dec
dec
arpl
nop
push
int
je
daa
pop
or
dec
xchg
rol
push
mov
xorb
aas
aaa
jb
out
clc
cmp
sub
addb
int3
push
out
push
jle
mov
ds
jo
jb
movsb
xchg
call
xchg
cmc
pop
nop
outsb
jle
push
mov
mov
jb
dec
mov
js
pop
subb
jmp
out
xchg
rcrl
cmpb
outsb
insl
out
lahf
dec
sbb
sbb
cli
sbb
mov
rcll
movsb
sbbb
lret
dec
xchg
push
xor
cmpsl
sbb
dec
inc
xchg
push
fisubl
xor
cmpsb
push
xor
mov
or
gs
inc
push
sub
mov
jbe
xchg
cmp
movsl
lret
mov
and
leave
push
fiaddl
fmulp
cmp
test
jmp
add
pop
dec
ret
lret
cmp
ss
mov
xchg
pop
sbb
dec
in
lods
jle
ss
cmpsl
movsb
cmp
push
adcb
and
sahf
int
inc
pop
jbe
test
aam
popa
sar
lret
sub
mov
mov
movsl
mov
xchg
xlat
shrl
dec
fidivrl
xchg
inc
pop
mov
inc
push
out
adc
aas
ss
aaa
cmpsl
dec
xchg
nop
cwtl
sbb
and
inc
mov
call
inc
xchg
subb
push
jle
push
fnsave
or
xor
sbb
test
push
pop
ds
add
outsl
inc
inc
ret
pop
in
icebp
popa
es
mov
mov
ds
cmp
pop
sbb
and
push
repnz
aad
mov
cmpsl
mov
lcall
mov
mov
sbb
push
xor
xchg
jp
adc
std
mov
fstl
mov
sahf
xchg
push
aaa
les
mov
jle
dec
lcall
add
mov
mov
sub
push
mov
mov
sbb
shr
jbe
cmpsl
movsb
sub
es
pop
jo
pop
dec
icebp
mov
dec
mov
ss
or
xchg
sub
cmp
xorb
test
push
xchg
inc
movsl
inc
inc
out
xor
cld
ss
dec
mov
sbb
jle,pt
and
mov
outsb
sub
js
xchg
pop
push
push
sbb
vmovd
into
xor
jmp
dec
sbb
lahf
movsb
and
push
aaa
jb
rorb
cmp
dec
mov
in
dec
mov
mov
sbb
cmpsl
bound
jp
nop
incb
rcrb
xor
xor
xorb
jp
mov
dec
xor
aad
ljmp
inc
jp
add
sti
dec
gs
inc
mov
in
jl
dec
inc
inc
cli
xor
sub
dec
xchg
or
ret
mov
insb
mov
jo
push
and
sbb
out
inc
test
push
dec
pop
xchg
scas
cmpsb
cltd
sbb
fidivrl
inc
dec
push
xchg
int3
jle
xor
ss
pop
jbe
adc
inc
inc
test
adcb
jo
lods
cmpsl
dec
popa
mov
inc
inc
xchg
cmp
and
test
dec
pop
mov
loope
data16
or
ds
sbb
xchg
jno
and
or
or
ror
sbb
js
push
mov
add
mov
fcompl
inc
mov
jnp
enter
jg
jle
push
mov
mov
in
shlb
iret
in
pop
mov
xchg
cmpsb
mov
inc
popa
and
adc
rol
shlb
push
dec
and
fiadds
mov
sub
mov
rclb
cmp
push
inc
dec
push
push
mov
xchg
inc
dec
ds
jns
pop
pop
popa
andl
push
mov
push
aas
mov
mov
mov
fimuls
test
gs
cmp
xchg
fs
imul
cmpb
add
cmp
pop
xchg
push
and
xor
cmp
in
xchg
push
call
pop
ret
js
inc
mov
xor
loope
xchg
mov
mov
lods
mov
jns
js
decb
in
sbb
cmp
int3
or
cs
push
jns
bound
inc
stos
inc
xor
or
out
adc
mov
popa
dec
and
ss
cltd
push
test
and
pushf
push
nop
jo
mov
test
movsb
call
pop
outsl
out
sarb
ss
roll
lahf
pop
subb
cmp
int3
and
cmpsb
sbbl
push
xchg
sahf
cwtl
into
mov
xor
scas
aad
movsb
mov
lods
dec
jbe
xchg
aam
popa
pop
mov
mov
inc
xlat
ljmp
cmp
mov
ss
aaa
pushf
sbb
adc
jmp
xchg
add
mov
pop
mov
rcl
mov
lret
jbe
in
mov
mov
sbb
mov
xchg
clc
ds
inc
inc
mov
adc
xor
mov
adc
mov
pop
aad
sahf
xchg
test
mov
pop
mov
push
push
lahf
stos
xor
arpl
addb
adcb
cmp
mov
rclb
out
lcall
cmp
test
dec
jbe
mov
jb
mov
js
nop
aad
xor
mov
fcmovne
jns
cmp
shll
pop
dec
adc
jle
jb
std
pop
cmp
aad
loop
nop
sarl
pushf
dec
push
add
mov
ss
lods
mov
cmpsl
fcoml
jl
ret
mov
outsl
dec
sbb
in
sub
outsb
int3
sub
sahf
mov
dec
pop
inc
mov
test
lods
pushf
sahf
cmp
inc
lret
pop
xchg
ret
cwtl
adcl
push
and
cmp
lds
inc
dec
push
mov
push
jl
mov
jle
dec
mov
addr16
or
push
cmp
jmp
rolb
push
jl
dec
idiv
xchg
sub
mov
pop
subb
xchg
js
fdivs
xorb
ljmp
jnp
add
mov
inc
inc
push
mov
xchg
and
xchg
cmp
test
inc
call
mov
inc
push
add
ds
dec
push
jno
mov
mov
add
mov
loop
and
cli
jo,pt
jl
sub
xchg
push
push
dec
fdiv
cmp
ds
sahf
in
jmp
test
pushf
pop
push
dec
pop
lds
dec
dec
out
xchg
cmp
int3
mov
and
push
dec
rclb
iret
mov
sbb
dec
sub
insb
mov
ret
js
pop
mov
push
xor
stc
repnz
mov
test
add
loop
movsl
jge
cmp
aas
arpl
xchg
cwtl
aad
cmpsb
adc
gs
xor
and
mov
inc
or
aas
pop
jb
adc
sub
add
and
cltd
movsb
push
movsb
dec
jns
mov
jo
push
cmp
out
outsl
shll
push
mov
dec
sbb
lock
cmpsl
pushf
xchg
inc
sbb
lcall
xor
inc
test
adc
cmpsl
mov
jle
add
sub
in
sbb
andb
cmp
xchg
fisubrs
cld
shlb
nop
cmpsl
out
xchg
outsb
cmp
test
mov
inc
movsb
adc
ljmp
mov
or
xchg
jl
mov
xchg
push
lahf
mov
inc
mov
xchg
push
js
push
addb
jle
sub
mov
xor
lods
xor
xchg
xor
in
aam
mov
mov
push
fnsetpm(287
xorb
add
ss
movsb
jl
ret
mov
cmp
dec
and
pop
rorb
lret
faddl
xlat
pop
xor
xor
lcall
push
push
shlb
ds
es
inc
cmp
push
xchg
cmp
push
test
xchg
cld
mov
dec
cltd
cmpsb
jae
inc
popa
and
ret
xchg
inc
jl
arpl
mov
inc
pop
dec
jp
xor
lods
add
jl
push
add
adc
mov
mov
xchg
int3
ret
pop
loope
and
and
enter
cmc
inc
xchg
mov
inc
dec
lret
loop
mov
push
cmp
fwait
sahf
cmpsb
mov
inc
push
in
test
pop
cmpsl
pop
or
pop
and
push
movsb
sub
in
arpl
pop
dec
ds
aad
stos
movsb
out
dec
jle
mov
sbb
sub
into
xchg
sbb
cmp
js
push
ljmp
aad
mov
cmc
repz
push
and
and
cli
sub
in
push
dec
ds
rolb
dec
mov
pushf
cmp
das
in
or
pop
mov
inc
lret
xchg
pop
fsubrl
nop
cmp
sbb
mov
inc
ret
xchg
or
int
pop
pushf
sbb
jbe
ss
mov
push
mov
dec
movsb
mov
push
nop
ficompl
in
inc
and
sbb
out
ds
jge
push
sbb
or
mov
dec
and
add
outsb
pop
mov
push
in
and
push
aam
cmpb
out
cwtl
sbb
popa
mov
xor
lahf
push
inc
fs
imull
movsb
or
clc
inc
sahf
shlb
add
sarb
inc
or
fwait
dec
mov
mov
xchg
mov
sbb
popa
adc
jbe
dec
xchg
cmp
dec
jo
adc
inc
nop
arpl
sbb
les
test
pop
rcll
or
push
test
or
xor
pushf
cmp
pop
mov
insb
push
cwtl
jbe
push
outsb
xchg
in
sbb
push
mov
mov
in
in
in
shlb
pop
xchg
fmull
xchg
pop
sbb
mov
lcall
push
dec
pushf
dec
sahf
std
call
std
push
dec
push
dec
xchg
lds
or
gs
xor
mov
dec
sahf
and
xor
fistpl
adc
adc
mov
cmp
adc
pop
mov
mov
xor
rcrb
push
jbe
push
cwtl
jle
push
jg
mov
mov
fs
mov
mov
inc
andl
sbb
mov
or
sub
push
popa
imulb
mov
sbbb
xchg
sbb
das
or
push
aaa
cld
int3
xchg
test
out
push
int3
pop
mov
ljmp
push
push
mov
xchg
xchg
sbbb
pop
pop
or
lods
repnz
pop
in
inc
xor
mov
inc
cwtl
inc
jns
pop
mov
or
lcall
data16
popa
adc
ss
push
fisubl
scas
es
sahf
jo
dec
xorb
cmp
xor
jp
pop
sahf
dec
adcb
xchg
or
mov
cmp
inc
sub
xchg
push
pushf
cwtl
outsb
and
movsb
xor
or
push
jae
pop
in
repnz
scas
push
sbbl
cmpsl
jmp
sub
push
xchg
shlb
dec
rorb
and
or
jp
inc
addr16
xchg
xor
pop
inc
add
pop
xor
mov
fbstp
dec
out
pushf
push
inc
pop
mov
lock
lcall
imul
cld
movsb
jb
adc
popa
cmp
cmpb
test
and
mov
add
sbb
inc
jp
pop
inc
mov
sarl
mov
pop
xchg
mov
mov
mov
push
inc
mov
push
xor
pop
inc
add
push
sbb
mov
add
in
xchg
xlat
push
mov
js
xchg
cld
add
mov
mov
es
jg
ret
push
data16
inc
adc
mov
and
nop
xchg
rcrb
lcall
push
dec
push
out
stc
add
xchg
fs
arpl
in
mov
sub
sbb
dec
push
mov
in
xor
int
mov
mov
mov
mov
dec
mov
lods
sbb
adc
cmp
ret
pop
push
inc
addb
xchg
sahf
in
jl
sbb
inc
xchg
and
ja
sbb
popa
test
sub
cmp
and
inc
sahf
pop
call
sbb
cmp
push
pushf
sub
dec
mov
jb
mov
rcrb
and
shll
mov
xchg
push
andb
adc
movsb
imul
xchg
push
mov
cwtl
and
lock
pop
dec
push
pop
dec
movsb
push
in
jb
xor
xor
arpl
lcall
popa
mov
fnstsw
ss
in
pushf
xchg
add
lcall
xchg
jge
or
jl
dec
arpl
aaa
or
les
push
cwtl
fnsave
test
jge
lahf
test
xchg
sbb
in
shlb
or
pop
push
jnp
in
push
ret
pop
nop
and
gs
cwtl
adc
leave
mov
push
ja
movsb
mov
sarb
xchg
outsb
shl
dec
ljmp
mov
push
int3
loope
ficompl
sbb
push
fcompl
jbe
mov
or
add
dec
in
mov
jmp
es
mov
push
lret
mov
cli
dec
and
ss
push
aas
mov
test
inc
push
gs
movsb
jnp
cs
sub
push
sub
sub
loope
mov
inc
mov
data16
sarl
jb
ds
pop
inc
test
dec
xchg
add
es
and
std
clc
ds
leave
shll
out
mov
mov
fdivl
out
push
jb
aam
shrb
push
push
xchg
ss
in
cmp
fldenv
sub
push
add
ds
jp
push
push
jge
sbb
gs
xor
and
inc
jb
aaa
negb
mov
adc
jo
xor
loop
inc
mov
ficoml
mov
cmp
in
sbbb
cwtl
shll
inc
pop
jbe
fwait
inc
test
pop
xchg
mov
xchg
scas
frndint
mov
es
out
mov
mov
es
sbb
pushf
mov
push
dec
cmp
and
push
aas
pop
adc
jg
xlat
ds
out
popa
inc
mov
or
cmp
cmp
jp
dec
adc
ja
xchg
shlb
inc
cmpsl
jmp
jge
sub
mov
push
cmpsb
push
inc
ret
ss
and
mov
xchg
sbb
push
push
rcrb
shll
jb
fimull
lcall
es
add
sbb
aas
sub
sbbb
adcb
cmpsl
pop
movsb
pop
sbbb
scas
outsb
inc
mov
test
xor
ret
sbb
mov
jb
mov
lcall
mov
push
leave
dec
sbb
and
mov
sahf
mov
xor
jns
jge
pop
mov
mov
arpl
mov
dec
xorl
jl
test
lcall
out
inc
sub
pop
int3
push
push
dec
pop
ret
pop
mov
pop
xchg
mov
clc
jb
inc
repnz
movsb
lds
pop
xchg
or
mov
dec
jge
push
sub
xchg
sub
xchg
andb
cmpl
cld
fiaddl
and
cmpb
loop
pop
inc
cwtl
jl
shrb
mov
in
sub
jp
rolb
or
or
push
mov
sbbb
xor
lret
ret
in
xchg
jbe
inc
mov
inc
dec
cmpsb
xor
sbb
add
in
dec
or
jl
and
and
dec
mov
test
dec
into
pop
xor
sub
mov
out
cmpsb
fsubs
pushf
mov
or
push
mov
mov
iret
cltd
cmpsl
jp
movsb
cwtl
popa
aad
je
add
rolb
int3
inc
pop
push
and
push
jmp
sahf
adcb
dec
out
sbb
fisttpll
or
inc
push
xor
jbe
je
mov
or
cmp
inc
arpl
mov
inc
movsb
jge
mov
lcall
sbb
ficoml
cmpsl
pop
and
dec
jp
dec
cmp
dec
jl
mov
arpl
add
test
int
pop
ja
mov
in
dec
call
test
mov
jp
inc
dec
mov
inc
test
jbe
js
lock
adc
lods
test
inc
inc
mov
adc
mov
xor
dec
ss
pop
mov
mov
gs
push
pushf
mov
fs
rclb
xchg
push
inc
mov
cmp
movsb
xchg
cltd
icebp
fwait
test
jl
mov
pop
sbb
mov
sub
lea
push
and
jp
and
cmp
rcrl
fcoml
mov
xchg
xchg
cmpsl
and
ds
xchg
push
cli
pushf
cwtl
daa
in
jg
sahf
out
dec
aad
and
enter
xchg
adc
incb
mov
fistps
sub
sbb
sbb
push
inc
inc
push
lahf
inc
sub
mov
xchg
xchg
push
stos
or
jbe
movsb
mov
inc
and
jl
cmp
movsb
push
lcall
xchg
cmp
add
cwtl
cld
xchg
push
xchg
fbstp
nop
sbb
dec
sahf
xchg
stos
pop
in
dec
and
mov
shr
inc
bound
mov
in
mov
cmp
push
dec
cs
and
sbb
flds
cmpl
sbb
or
out
pop
push
sti
sbbb
or
fcomps
xor
cwtl
push
and
push
inc
aaa
adc
sbb
jnp
and
lock
and
adc
or
push
mov
lahf
push
lret
fimuls
dec
pop
mov
push
movsb
clc
sbb
in
xchg
inc
pop
loope
roll
sbb
sbb
adcl
inc
add
dec
sbb
sbb
and
mulb
lret
cmp
cs
add
adc
scas
pop
fildl
mov
nop
scas
jb
push
jo
xchg
mov
dec
dec
das
rorl
adcb
jmp
adc
and
sbb
push
in
pop
mov
popa
mov
xchg
add
inc
addl
outsb
cmp
pop
jp
sbb
daa
test
inc
xchg
dec
pop
rolb
cmpsb
or
arpl
xlat
movb
adc
xor
push
ret
fs
cmp
jns
pop
inc
push
jmp
inc
and
pop
or
jle
or
ficomps
adcb
xchg
rolb
scas
movsb
cs
test
xchg
xor
inc
and
dec
sahf
xchg
aas
push
pop
movsl
insb
lods
lret
jo
or
sub
popa
roll
push
arpl
inc
pushf
jp
push
into
mov
inc
mov
add
xchg
inc
jae
std
roll
lds
add
sbb
lcall
jbe
jge
lcall
mov
jo
push
out
add
sbb
push
xor
xor
aam
and
insl
cmp
add
jmp
mov
cwtl
mov
lret
xor
js
push
add
int3
xorb
pop
jle
mov
mov
sbb
jle
xor
push
cmp
mov
out
cmp
add
mov
or
inc
nop
movsb
and
out
inc
je
lcall
lret
mov
push
pop
cmp
test
cwtl
std
lcall
mov
cs
ret
push
lcall
mov
inc
or
xchg
sub
or
call
inc
pushf
mov
push
jp
sbb
cmp
mov
pop
mov
push
xchg
add
and
cmp
cli
inc
std
cs
in
rclb
jo
jp
mov
adc
or
dec
xchg
inc
push
mov
cmp
push
popf
mov
aad
push
inc
push
sbb
outsb
mov
inc
divb
add
inc
add
mov
jbe
addb
cmp
pop
inc
lea
add
cli
mov
xor
mov
clc
shll
movsb
inc
out
xorb
lods
mov
push
fstl
loop
or
cmpsb
or
inc
push
orb
popa
sbb
sti
jbe
mov
pop
es
jle
push
cmp
sub
push
test
out
aam
xchg
mov
addr16
pop
sahf
add
push
mov
sbb
cmp
push
sub
inc
cltd
pop
mov
lds
jge
movsb
js
mov
data16
insb
mov
sbb
push
lahf
fidivrl
mov
aam
popa
push
jmp
xchg
addb
dec
push
xor
mov
out
mov
push
test
or
dec
mov
movsl
jbe
clc
jb
inc
mov
shlb
arpl
mov
xor
and
jb
adc
sbb
lcall
fs
shlb
fidivrl
or
sub
je
mov
cwtl
movsl
lods
sbb
add
ret
lcall
pop
inc
or
dec
jle
ljmpw
and
mov
jo
cltd
adc
mov
mov
in
mov
cmp
cwtl
outsb
lcall
into
sahf
push
sub
and
rcll
data16
inc
push
mov
jl
sbb
and
dec
jo
aam
sbb
cli
push
pop
xor
push
jle
dec
and
jb
roll
sbb
shlb
inc
loop
fimuls
stos
or
loopne
cmp
mov
lea
jmp
leave
pushf
mov
dec
pop
adc
int3
test
jle
sahf
cmpsb
pusha
pop
cmp
cmp
inc
mov
push
cmp
fiadds
jbe
rcl
pop
pop
pusha
ss
mul
rol
loopne
sahf
mov
gs
pushf
push
negb
add
xchg
cmpb
pushf
dec
add
pop
jb
test
jns
sahf
xchg
or
mov
aam
nop
data16
rorb
sub
cmpb
mov
int3
dec
mov
adcb
shlb
sbb
mov
add
inc
sbb
sub
sbb
in
outsb
mov
mov
push
test
or
bswap
inc
std
mov
sti
dec
xorb
xchg
outsb
xchg
out
inc
xorb
push
cmpl
in
in
xor
pop
mov
push
ret
push
adc
dec
cmp
xchg
out
mov
and
push
sbbb
pop
dec
ss
rep
and
mov
inc
push
jg
add
mov
mov
ror
cmp
movsl
jno
nop
cmp
cltd
ljmp
sbb
sbb
out
and
pop
loop
dec
subl
add
jb
xchg
cmp
inc
data16
outsb
sbb
and
xchg
pop
mov
add
out
out
push
inc
ret
inc
popa
xchg
adc
sbb
roll
push
sub
movsb
mov
jmp
and
js
pushf
xchg
loope
push
and
push
ss
dec
rol
pop
cmp
xchg
cmp
dec
test
test
and
pop
mov
ds
inc
inc
aam
push
add
pop
xchg
adc
divb
out
jb
mov
xor
mov
leave
movsb
js
test
push
inc
jbe
pop
push
pushf
xor
adc
add
cmp
dec
lcall
jbe
nop
dec
xor
movsb
mov
mov
cmp
jo
push
ja
testb
in
jbe
bound
and
subb
pushf
xchg
mov
adc
jns,pt
push
data16
pop
dec
push
push
shlb
jl
mov
mov
mov
pop
aaa
inc
and
and
mov
jl
mov
push
xchg
push
fiaddl
cmp
lret
mov
sub
mov
mov
push
addb
icebp
mov
repz
sub
jl
movsb
xchg
cmp
xor
inc
popa
cmp
sbb
or
mov
es
push
lds
mov
imul
inc
adc
cli
push
popf
add
pop
aad
in
and
add
cmpsb
lods
cmp
dec
clc
inc
js
mov
popf
or
fmull
jb
dec
sahf
cmp
cmp
loop
cmc
dec
sub
loope
jp
cmp
pop
push
dec
lcall
push
mov
dec
mov
sbbb
pop
cmp
hlt
lcall
ss
call
jo
and
shlb
cwtl
mov
dec
inc
scas
out
inc
insl
ds
into
xor
push
push
lock
xor
outsb
cmp
in
cwtl
push
add
pop
popa
nop
mov
jge
adc
out
mov
nop
xor
mov
inc
push
lret
push
in
mov
sbb
mov
pushf
notl
imul
inc
lcall
arpl
xchg
mov
inc
lcall
pop
xchg
push
or
inc
aas
inc
adc
mull
lea
cmp
nop
out
dec
pop
adc
lock
jl
movsl
jmp
cmp
mov
mov
pop
inc
push
and
xor
shrb
push
outsb
lcall
mov
inc
pop
mov
push
sub
or
js
sbbb
mov
mov
push
adc
inc
push
jmp
insl
in
pop
sarb
sahf
sbb
xorl
xchg
jbe
cmp
pop
insb
iret
fdivrs
push
sbbb
mov
inc
sti
shll
mov
out
push
andb
xchg
and
inc
mov
or
into
mov
dec
cmc
lcall
mov
cli
mov
cmp
movsl
enter
xchg
push
inc
clc
pop
popa
inc
pop
sub
movsl
ret
adc
mov
sbb
push
lcall
lds
xor
movsb
dec
lds
pop
cmp
js
xchg
push
pop
sbb
or
ss
ror
inc
rorl
and
sbb
mov
jae
xchg
in
movsb
xor
or
mov
push
popa
xchg
xor
adc
add
cs
mov
xchg
jbe
test
push
mov
cwtl
test
ret
jle
mov
inc
xchg
adc
jns
add
pop
lods
mov
pop
loopne
test
ret
jecxz
xchg
pop
mov
mov
imul
xchg
fcompl
dec
mov
test
xorl
cmpsl
sbb
or
pop
adc
adc
std
xchg
push
shlb
xchg
mov
xor
pop
cmpsl
subb
cmpb
iret
jbe
popf
adc
xchg
push
jb
push
and
jb
add
rol
xor
or
add
leave
rcrl
mov
aad
js
mov
xor
nop
dec
push
dec
mov
cli
sub
enter
adcl
jb
xchg
cli
mov
mov
add
inc
push
js
icebp
in
fisubrl
mov
and
push
xchg
and
gs
mov
mov
lods
stos
fistpl
inc
sub
xlat
aas
pop
cmp
jno
leave
stos
jl
sub
test
jbe
jo
or
cmpsl
loop
inc
dec
mov
cmp
ss
push
loop
jp
or
and
in
cwtl
pop
cmp
jl
ds
cmp
jle
push
pop
xchg
and
mov
inc
mov
adc
js,pn
jo
shlb
mov
rorb
mov
cli
pop
jo
loop
fcmove
cmpsl
scas
jbe
xor
mov
lahf
inc
out
pop
arpl
movsb
mov
insl
push
cmpsb
ret
push
or
pushf
scas
mov
mov
mov
les
in
push
sbb
ja
or
jge
xor
sahf
and
xchg
loopne
dec
cwtl
shrl
mov
pushl
in
cwtl
rcll
arpl
xor
lcall
out
push
cld
mov
cli
push
dec
out
push
sbb
mov
mov
repnz
xchg
mov
jno
in
in
dec
xor
and
sub
dec
mov
pop
popa
adc
adc
mov
test
xchg
add
and
cs
fwait
lds
jb
push
jg
or
push
testl
dec
popa
inc
add
push
xchg
pop
aad
outsb
ss
push
arpl
cli
adc
push
sbb
rcrb
iret
mov
jle
jge
pushf
loop
xor
aam
push
lret
cmpb
popa
loope
inc
xchg
add
in
sbb
dec
adc
xchg
mov
pop
and
lea
sub
ds
inc
pop
inc
cmp
mov
dec
jp
mov
cmp
aaa
sub
push
cli
jb
fimuls
push
push
and
shll
mov
pop
mov
cmp
sbb
fldcw
fwait
pop
inc
movsb
xchg
add
xor
aaa
jb
dec
or
out
in
pushf
pop
xor
mov
adc
orb
out
mov
dec
ljmp
inc
xchg
movsl
lods
mov
imul
xor
stos
call
jle
mov
mov
ja
ficompl
js
cmpsl
pop
cwtl
inc
mov
push
pop
test
fidivs
jg
add
mov
mov
mov
cltd
shlb
jmp
sbbb
ss
cld
push
mov
dec
pushf
mov
cmp
fsubl
cwtl
mov
dec
mov
and
loope
push
fildl
mov
xchg
mov
ss
mov
js
ss
sub
clc
test
or
daa
dec
sar
xchg
or
clc
rorb
ror
push
add
mov
mov
inc
mov
and
sar
mov
loopne
dec
pushf
cmp
push
xchg
jo
gs
dec
lcall
push
pop
dec
pop
push
rclb
adc
push
mov
dec
and
mov
rorl
shlb
jb
add
insl
mov
mov
jl
push
inc
cmp
lahf
js
mov
mov
dec
cmpsb
rcrl
jp
test
push
add
push
out
pop
dec
fidivl
in
ret
jne
pop
jo
aas
loope
pushf
sahf
mov
sarl
mov
mov
pop
sbb
xchg
mov
cmp
mov
cmpsb
int
push
inc
jbe
test
xor
push
sub
es
cmp
pop
das
mov
mov
sub
cmp
adc
inc
mov
mov
push
mov
aam
or
shlb
mov
xchg
cwtl
test
add
nop
ret
js
push
inc
push
in
dec
push
and
int3
mov
sbb
adc
inc
push
xchg
pop
mov
or
and
sbb
ljmp
dec
jle
pop
ret
nop
pop
xchg
push
and
inc
xchg
subl
sub
mov
sahf
imul
mov
shrl
cwtl
dec
imul
stos
idiv
xchg
xor
inc
add
pushf
test
out
bound
xor
sbb
fldl2e
test
push
mov
cmp
lahf
and
dec
dec
adc
sbb
in
mov
push
xchg
xchg
add
xchg
sbb
jmp
nop
cs
cli
mov
out
in
mov
mov
test
es
inc
and
in
push
ds
adcl
cmpb
inc
int3
pop
inc
mov
inc
out
inc
pop
mov
xchg
jnp
aas
lcall
push
iret
inc
int
ds
mov
rorb
mov
nop
pop
daa
inc
fisubl
push
je
jle
ljmp
aaa
push
pop
push
aas
xchg
xchg
push
xorb
mov
repz
xchg
add
dec
adc
mov
call
std
ds
pop
scas
dec
call
sub
mov
sub
adc
lods
xchg
sbb
addb
inc
mov
rcrb
movsb
jbe
decb
mov
inc
pop
xor
ds
sbb
lcall
and
xchg
jo
mov
push
and
sbb
push
pop
icebp
aam
cmp
arpl
sbb
sbb
and
ret
push
mov
inc
pop
xchg
daa
leave
push
adc
pop
push
ret
dec
and
dec
addb
out
sbb
mov
add
mov
xchg
mov
mov
mov
insb
mov
inc
inc
incb
cmp
repnz
cmp
or
test
sahf
xchg
std
or
ds
mov
push
jp
push
dec
lods
shrb
push
mov
jg
dec
jge
jp
mov
push
dec
mov
mov
cmpsl
testb
js
jle
repz
sahf
pop
hlt
adc
dec
mov
test
in
mov
and
adc
xchg
push
in
inc
test
mov
jno
mov
push
cs
cmp
dec
lcall
xlat
lods
xchg
xchg
add
add
or
dec
sahf
pushf
ficompl
sbb
das
or
ljmp
push
dec
inc
jg
push
inc
push
dec
mov
add
cwtl
push
les
dec
mov
xchg
mov
jo
mov
movb
jl
mov
sub
sbb
dec
lcall
cmp
inc
mov
hlt
popa
shlb
mov
aam
iret
or
xchg
sbb
mov
jg
and
mov
sbbb
dec
adc
push
mov
lds
jo
push
call
adc
cmpsl
jg
sbbb
mov
jo
pop
add
or
add
xor
push
dec
insl
xor
push
push
aad
lds
sbb
xchg
daa
inc
xchg
dec
lret
arpl
jnp
int3
mov
fs
push
xchg
in
cmp
test
out
mov
movsb
movsb
push
ja
mov
jb
xlat
and
ja
inc
dec
test
jbe
mov
sbb
mov
aam
jp
idivl
pop
in
ss
push
test
jl
sbbb
dec
ds
gs
sbb
jb
mov
pushf
addb
jg
mov
xor
popf
addb
mov
add
jl
clc
inc
stos
jl
cmpsb
icebp
jb
mov
or
sbbl
inc
adc
popa
mov
sbb
lds
arpl
aam
ss
inc
sbb
loop
jbe
popa
jno
mov
rcrb
xor
push
ret
xchg
and
xchg
aam
jo
mov
pop
and
in
dec
sahf
movsb
push
inc
push
dec
lcall
mov
leave
sbbb
mov
jle
popa
push
test
cltd
fiaddl
nop
xchg
jge
and
jg
cwtl
mov
fwait
cmp
jbe
jo
sahf
mov
cli
shl
dec
and
ds
in
shrb
mov
inc
pop
clc
or
andb
test
jl
push
mov
call
leave
outsb
inc
outsb
or
and
jb
adc
inc
push
in
push
dec
xor
lret
test
mov
sbb
loop
adc
mov
jp
xor
jbe
js
pop
push
xchg
test
popf
pushf
xlat
ret
stos
out
bound
or
mov
pop
mov
inc
addb
push
lods
clc
sarb
inc
inc
cmp
dec
cmp
lock
ss
dec
daa
iret
inc
cmpb
jp
xor
and
and
aaa
and
shlb
push
xor
nop
mov
mov
adcl
xchg
jne
fnsave
mov
int3
rcrb
adc
mov
aam
int3
push
mov
movsl
pushf
push
insb
and
nop
ss
xor
pop
cmp
ss
add
cmp
mov
incb
enter
dec
and
aam
sahf
leave
aas
bound
shlb
rcl
mov
cmpsb
inc
or
push
xchg
mov
mov
inc
mov
arpl
and
aas
lock
ret
or
dec
mov
andb
outsl
mov
in
cwtl
inc
cmp
mov
mov
and
inc
sbb
dec
or
or
jnp,pt
mov
jb
inc
test
mov
or
stos
xor
jl
ret
mov
js
ss
jle
and
sbb
cmp
push
ret
mov
jmp
js
aas
mov
test
test
xor
xchg
inc
or
push
inc
push
dec
mov
jo
mov
push
and
sbb
push
sbb
sbb
jle
jb
in
jb
popa
fidivrl
mov
inc
cmp
pop
adc
dec
add
pushf
cwtl
inc
scas
sbb
dec
mov
mov
pop
mov
jne
mov
out
xchg
sub
ss
jnp
add
fdivr
negl
sub
pop
mov
jae
data16
cmp
js
mov
mov
ljmp
inc
push
pushf
test
and
ds
divb
pop
mov
sbb
mov
popf
insb
sbb
outsb
mov
in
movsb
and
sarb
mov
mov
inc
mov
js
adc
mov
les
ds
push
pop
aaa
add
xchg
cmc
std
cld
mov
ja
sbbb
clc
mov
rol
jp
xchg
xchg
movsl
das
or
xchg
mov
inc
cmpsb
repz
cmp
push
pushf
push
dec
mov
out
inc
inc
ss
or
mov
cmp
cmp
dec
mov
fsubrs
xor
ja
xchg
lahf
dec
pop
ret
pop
sahf
imulb
xor
sub
xchg
xchg
dec
mov
ss
lock
inc
sub
or
fisubrs
push
insl
cmp
mov
or
inc
in
jmp
fcompl
lcall
mov
inc
xchg
inc
or
adc
pushf
dec
sbb
iret
ret
pop
dec
ss
movsl
mov
xchg
lods
imul
sti
xor
fisubl
xorl
fidivl
mov
rorb
cwtl
data16
dec
pop
push
xchg
sahf
jnp
cmp
les
nop
loope
xor
movsb
sbb
push
or
cs
mov
mov
add
inc
sub
mov
cmpsb
or
inc
jo
aas
jo
idivl
mov
xchg
sbb
cmp
jb
les
push
mov
stos
xchg
inc
inc
dec
push
nop
and
or
xchg
push
call
sbb
pushf
mov
aas
sbb
add
mov
push
mov
dec
jbe
dec
and
mov
and
stos
sbb
mov
dec
cwtl
xor
addb
add
mov
and
fidivrl
inc
addb
dec
push
ss
jb
jl
jbe
push
jge
cmp
push
jo
inc
imul
mov
mulb
icebp
sub
sarl
cmp
mov
aas
xchg
push
push
push
xor
mov
add
ds
jo
and
lods
jne
push
mov
fwait
inc
cmp
lods
aad
int3
adc
xchg
sahf
add
push
es
dec
xchg
and
sub
xchg
and
fidivl
pop
movsb
xor
push
lds
inc
pushf
clc
inc
outsb
fmul
mov
mov
cmp
xor
mov
in
jle
ss
push
mov
shrb
test
mov
frstor
dec
and
pushf
dec
mov
pop
rorl
cmpb
lea
mov
in
push
pushf
stos
test
pop
xchg
dec
dec
std
mov
arpl
inc
pop
ret
push
lret
popa
inc
jbe
mov
inc
mov
cmp
push
faddl
xor
cmp
incb
dec
xchg
mov
nop
xor
pop
inc
and
ret
js
push
mov
adcb
imul
imul
popa
xor
or
leave
add
mov
lods
negb
ret
sub
pushf
jnp
push
rcrb
dec
lcall
aad
push
push
test
insb
lret
xor
lcall
and
push
cmp
add
sti
xorb
lret
pop
inc
sbb
sbb
sbbl
aad
or
sbb
leave
stos
sub
dec
jp
push
and
cmpb
in
pop
div
xchg
push
xchg
cmp
inc
jno
push
push
inc
scas
cmp
push
in
movsb
mov
js
mov
push
push
popa
cmc
sub
decl
mov
inc
dec
mov
popa
cs
inc
or
jb
push
jb
push
mov
lret
loope
addr16
mov
mov
dec
jnp
lds
pop
cmp
sbb
leave
ss
mov
push
mov
lret
sbb
fstpl
push
xchg
orb
xchg
aas
mov
sbb
std
je
in
inc
gs
jb
outsb
cmp
in
sbb
or
jo
and
push
add
outsb
rcl
xor
int
add
sbb
ret
ja
cmp
mov
adc
in
jo
bound
mov
ret
mov
adc
dec
mov
push
inc
push
in
dec
mov
movsl
orl
push
mov
orb
popa
mov
sbb
xchg
mov
sbb
jmp
js
lock
pop
xchg
fwait
push
leave
and
push
jle
inc
test
insl
ljmp
xchg
push
push
and
push
xchg
cmp
jbe
cwtl
add
outsb
jecxz
push
faddp
xchg
ss
push
jl
lds
int3
daa
and
stos
les
mov
inc
incb
call
jle
gs
mov
movsl
cmp
inc
jecxz
push
push
and
ret
jp
std
mov
addl
fcmovnb
xchg
ret
hlt
mov
mov
movsb
push
js
pop
dec
cmp
inc
repnz
sub
loopne
mov
lds
jle
sub
inc
add
xchg
and
xor
scas
lds
fwait
sahf
adc
push
ficompl
xor
and
cmpsl
and
repnz
cwtl
sbbl
pop
xchg
ret
push
int
dec
jo
mov
xchg
pop
stos
xchg
incb
inc
sub
sub
xor
cmp
ficoms
pushf
aam
mov
jo
jle
mov
dec
pop
les
pop
movsl
andl
add
mov
and
ds
xchg
les
inc
inc
pop
inc
ja
dec
nop
xchg
loop
mov
mov
mov
xor
dec
inc
out
pop
xor
mov
mov
push
mov
mov
mov
mov
sbb
sub
ljmp
sbb
sahf
mov
push
test
push
je
push
sbb
mov
in
inc
and
das
mov
cmp
lods
and
incl
pop
add
cmp
jne
orl
loopne
push
xor
sbb
lods
jne
pop
rcrl
and
inc
cltd
inc
sub
sub
sub
jmp
mov
mov
cmp
fiaddl
xchg
dec
push
dec
aad
bnd
popa
push
aas
inc
pop
adc
mov
sub
mov
cmp
arpl
shr
mov
in
sub
or
cmc
and
daa
mov
mov
jle
fstpl
ret
sbb
pop
aam
sbb
mov
inc
cmpsb
push
arpl
cmp
mov
pop
test
faddp
lcallw
movsl
push
pop
jle
add
subb
ret
inc
xor
adc
cmp
xchg
sbb
jecxz
cwtl
mov
ficoml
dec
push
sub
leave
rolb
xor
fs
aam
jbe
shll
xor
push
push
or
mov
in
mov
sarb
jns
push
and
in
mov
inc
mov
pop
dec
lds
dec
jl
idivb
cmpsl
andb
inc
adc
les
cmp
bound
pop
inc
xor
push
xor
mov
mov
cwtl
jo
mov
pop
jbe
int
xchg
lds
in
mov
xor
pop
arpl
ss
inc
subl
cwtl
enter
js
test
inc
daa
jo
adc
cmp
xchg
xchg
test
inc
adc
sbb
jb
imul
dec
push
jbe
xchg
sbb
shll
mov
mov
adc
or
jb
test
and
mov
and
scas
dec
in
mov
cmpsl
push
push
jbe
sbb
lds
jle
nop
or
jb
cmp
enter
sub
repnz
mov
xchg
aam
push
shll
imul
cmp
sub
mov
inc
int3
sbb
int3
ja
or
add
push
and
pushf
sbb
sbb
mov
imul
jo
jbe
ror
mov
push
dec
dec
push
or
xchg
xorb
xor
pop
ljmp
adc
jle
ret
in
xchg
nop
xchg
lea
jp
push
test
xchg
and
fdivrl
mov
mov
mov
shll
mov
push
pop
xchg
mov
mov
in
jle
push
ret
jbe
cmp
jge
cmp
push
and
pop
mov
popf
cwtl
arpl
pop
divb
pop
jp
mov
ret
stc
jo
test
int
aad
lcall
js
xor
xchg
push
aam
pushf
mov
dec
ds
pop
fidivrs
xchg
mov
pop
movsb
dec
ss
fcompl
test
or
sahf
arpl
gs
cmp
sbb
mov
fiaddl
sahf
scas
cmc
fmull
cmpsl
ficoml
js
arpl
pop
lcall
pop
mov
dec
xadd
pop
mov
insl
sub
xchg
hlt
sbb
push
xchg
mov
imul
hlt
arpl
js
test
xchg
pop
dec
mov
inc
cmp
mov
jb
cmp
ret
inc
and
aam
or
faddl
mov
xchg
mov
inc
pushf
push
cmpsb
jo
dec
push
inc
aad
incl
sahf
inc
cmp
sbb
fwait
ds
sub
in
mov
cmp
xor
in
mov
push
jo
ret
push
mov
call
je
repz
dec
stos
and
xchg
and
jle
imul
es
or
mov
pop
inc
jg
aad
lds
dec
pushf
mov
xchg
xor
mov
in
call
dec
jae
dec
push
movsb
nop
repnz
sbbl
aam
pop
push
movsb
mov
push
cmpsb
inc
dec
mov
push
dec
add
sbb
push
in
cmpsb
push
jp,pt
xchg
pop
inc
lds
mov
mov
ss
inc
sub
mov
cli
sbb
call
ljmp
movsb
pop
addb
adc
scas
addb
pop
inc
and
push
in
xor
mov
xchg
mov
xor
lock
push
jle
aas
fwait
push
adcb
lahf
sub
rcll
jbe
ds
sbb
xchg
and
mov
inc
push
jo
add
pop
pop
hlt
repnz
sbb
mov
out
dec
mov
fldl2t
inc
cmp
inc
push
mov
sbb
push
cmpsl
push
push
mov
std
jle
and
xchg
arpl
push
jp
cmp
aas
cmp
call
mov
loop
push
inc
sbb
dec
adcl
lods
xlat
jle
xchg
mov
dec
aaa
dec
adc
pop
pop
aam
jo
ljmp
inc
cmc
or
xchg
mov
and
faddl
inc
ret
and
pop
pop
lea
js
cmp
movsb
ss
add
and
sahf
push
outsl
inc
push
jle
shll
push
mov
cwtl
mov
xchg
lods
daa
loop
rcr
cwtl
push
mov
push
push
push
jl
push
outsl
xchg
add
ss
wrmsr
mov
dec
stos
dec
sbb
push
nop
call
mov
cmpsb
testl
std
insb
mov
aad
movsb
jb
inc
dec
arpl
xor
lret
push
push
and
lods
test
addb
scas
aam
js
out
mov
sahf
xchg
arpl
mov
mov
mov
out
push
jbe
je
in
fwait
jg
cld
stos
psrad
pop
sub
cmpsl
mov
sbb
mov
dec
jb
mov
inc
cmp
or
sbb
mov
ja
inc
mov
push
inc
in
pop
js
movsb
pushf
or
sbb
call
push
xchg
mov
xor
jmp
outsb
xchg
jns
xchg
data16
popa
insb
loope
cmpb
push
mov
inc
cwtl
and
jno
and
jae
cmpsl
arpl
push
pop
jbe
mov
dec
mov
ja
int3
ss
ds
mov
dec
clc
mov
dec
xor
pop
sbbl
xchg
divb
inc
sbb
xor
faddp
shrb
dec
push
sub
loope
cmpb
cmpb
sbb
xchg
push
xchg
dec
jp
rclb
icebp
mov
cmp
pop
lcall
mov
adc
test
or
pushf
ret
xchg
test
pop
push
mov
jl
cmpsb
jl
cmp
push
dec
push
mov
ljmp
movsb
rcrl
cmpsl
cmc
xchg
pop
jle
sub
push
sbb
out
fcoml
xchg
jle
cmp
xchg
mov
ret
sbb
ret
cmp
enter
xchg
push
fiaddl
push
sar
xor
pusha
dec
cmp
sub
mov
jnp
mov
inc
jbe
push
fidivl
data16
mov
push
push
xor
adc
dec
adc
js
ja
negb
cmp
jle
in
inc
lahf
out
inc
nop
or
shlb
adcb
mov
popa
pop
mov
push
xlat
movsl
out
jmp
or
loop
push
and
lcall
push
dec
lock
jg
aad
fistl
inc
sahf
dec
inc
jb
sub
sbb
aaa
xor
ljmp
push
cmp
xchg
cmpsl
fwait
movsb
xor
in
inc
cs
dec
ss
push
sub
lcall
js
ret
xchg
orl
subb
ljmp
pusha
sub
lods
lea
push
cmpb
and
sbbl
ss
mov
lds
loop
js
or
mov
arpl
sub
pushf
dec
rcrl
push
sbb
cmp
pop
sbbb
dec
adc
pop
leave
push
lcall
and
dec
idivb
roll
xor
aas
xor
out
mov
cmp
mov
dec
mov
jle
xor
lret
push
dec
inc
push
mov
and
push
in
xor
fsubrp
mov
sbb
xchg
inc
jbe
or
xchg
call
xor
cwtl
mov
push
sbb
pop
xchg
and
cli
mov
aad
fcompl
pop
rcrl
push
mov
mov
aad
in
xor
lods
push
movsb
mov
mov
adcb
push
mov
xchg
movsb
nop
jle
xchg
les
int3
ret
mov
xor
push
lcall
aas
xchg
cmp
push
ret
fldenv
xorps
jecxz
lret
cld
sbb
adc
cmpb
sbbb
jle
lods
in
lcall
xchg
mov
in
pop
push
pop
mov
clc
mov
inc
adcl
mov
imul
jecxz
xor
push
or
dec
jp
decb
push
jl
lahf
in
mov
fcmovu
mov
pop
inc
iret
pushf
xchg
mov
xor
cwtl
xorl
int3
enter
inc
shlb
push
outsl
or
and
loop
pop
test
mov
xor
rcll
xchg
hlt
divb
mov
outsb
icebp
addb
jbe
inc
push
inc
lret
ret
sbb
push
cmp
js
mov
add
out
mov
push
push
inc
arpl
cmp
lret
pop
scas
dec
sahf
and
sbb
xchg
jg
andb
inc
movsb
xchg
cmp
data16
sbb
sbb
dec
shlb
xchg
jo
shl
sbb
jmp
cmp
jle
mov
into
pop
mov
jmp
xchg
inc
fildl
dec
inc
add
jl
ds
loope
insl
iret
or
iret
jno
push
cld
iret
adc
jp
shlb
mov
mov
and
fiadds
sub
mov
lds
cmp
mov
cwtl
inc
cld
inc
dec
sahf
clc
and
push
and
ret
popa
mov
pop
jmp
gs
inc
mov
jns
or
mov
jg
and
pop
pop
mov
fwait
push
nop
adcb
fsubrl
mov
cmpsl
and
cmp
movsb
jnp
mov
fucomi
mov
mov
xchg
mov
jo
cmp
or
ret
dec
sbb
adc
es
jecxz
pop
xchg
xchg
push
xchg
dec
and
fwait
mov
inc
cmp
xchg
shlb
pushf
inc
push
in
pop
xor
dec
popl
mov
in
inc
sub
pushf
inc
movsl
sub
xchg
pop
mov
dec
mov
xchg
inc
adc
xchg
add
push
outsb
pop
mov
push
outsb
gs
cwtl
enter
jbe
and
push
cmp
mov
push
inc
pop
and
jno
xchg
movsb
xchg
jbe
inc
cmp
ret
xchg
and
outsb
es
and
mov
call
cmp
lcall
xchg
inc
and
sub
and
arpl
mov
jge
mov
mov
dec
aad
sbb
sub
push
test
aad
fdivl
inc
sbb
icebp
fidivrl
dec
repz
andl
xor
push
inc
bound
jl
pop
pop
and
insl
movsl
xor
iret
xor
adc
test
fildl
jne
push
lods
xchg
pop
xchg
icebp
std
sahf
mov
dec
jbe
cwtl
sub
pusha
jmp
popa
inc
cmp
xorb
cmp
mov
xlat
sarl
push
arpl
mov
pop
mov
mov
xchg
jl
pop
inc
mov
addb
ret
cmp
mov
or
aad
pop
ds
test
jp
nop
pop
lret
xchg
sbb
cld
push
jo
orl
sbb
xchg
sub
push
sub
adc
mov
icebp
cmp
popa
dec
sbb
pop
or
adc
sarl
dec
push
xchg
adc
inc
mov
sub
or
lods
int3
out
cmp
push
movsb
push
wrmsr
inc
mov
les
sub
arpl
pop
ss
xchg
and
jae
cmpl
add
sub
arpl
sbb
cmpsl
mov
adc
push
mov
sahf
inc
push
jb
andb
stos
pop
xlat
lret
cmp
pushf
mov
sbb
fildl
sub
outsb
or
xchg
dec
std
xchg
ss
imul
cmpl
pop
roll
dec
xor
loop
arpl
mov
adc
lds
and
shrb
dec
ja
ss
cld
push
inc
cmp
inc
xchg
pusha
push
jle
xchg
cmp
push
js
movsl
mov
rolb
xor
xor
mov
lock
sub
je
mov
sbb
xor
pop
xor
pop
je
data16
inc
imul
push
gs
push
jp
mov
dec
mov
mov
imul
rorb
sub
xor
fildl
ja
scas
pop
xchg
mov
dec
negb
xor
scas
mov
xor
test
cld
sahf
inc
sub
arpl
fdivrl
inc
mov
lahf
dec
subb
pop
mov
pop
jbe
pop
adc
pop
jo
cmp
xchg
aam
inc
push
dec
mov
or
xchg
lcall
push
ret
inc
inc
xor
jp
repz
inc
mov
mov
xchg
dec
push
push
mov
ss
cmp
mov
es
and
mov
sub
mov
dec
inc
testb
pop
call
roll
mov
cmp
cli
test
xchg
lds
jbe
and
mov
gs
mov
fstl
mov
push
dec
fildl
xchg
fidivl
adc
out
call
mov
ds
subb
cmp
and
push
arpl
cmp
jl
cltd
xchg
xchg
lds
jb
xchg
fwait
lcall
out
mov
and
pop
xor
push
jge
std
add
in
mov
orb
xchg
pop
inc
pushf
sub
cmp
pop
ret
push
adc
fnstenv
ljmp
lahf
inc
movsb
push
lcall
jns
sub
popf
cmp
repz
push
mov
jb
mov
pop
jp
notb
js
arpl
push
out
xchg
inc
sbbb
mov
int3
lahf
arpl
and
jbe
xor
or
mov
mov
mov
mov
dec
loop
cwtl
int3
xor
adc
xchg
xchg
ret
es
xor
push
pushf
sub
or
outsl
jbe
lahf
mov
inc
jae
xchg
adc
loop
loop
or
icebp
sbb
xchg
push
and
mov
add
inc
nop
addb
jl
and
ss
xlat
cmp
dec
aaa
cli
sub
cmp
cmp
sahf
mov
adc
testl
mov
insl
mov
ss
jbe
or
test
sarb
nop
mov
jmp
sbb
ret
xchg
inc
popa
and
or
mov
xchg
pop
ret
dec
cmp
jb
js
mov
aam
cwtl
rol
mov
and
icebp
xchg
decl
shl
dec
fldenv
cs
cmp
aas
in
sbb
mov
inc
mov
inc
push
sbb
dec
in
push
and
outsb
xor
incb
popa
rcr
mov
push
inc
xor
xchg
test
xchg
push
loope
enter
jo
and
jbe
lcall
rclb
push
jle
fnstcw
popf
scas
mov
mov
and
test
and
jl
loope
xchg
cmp
or
xor
mov
sbb
jp
sbb
ret
xchg
sahf
add
sti
or
and
xor
fstps
cwtl
rcrl
jp
ja
subb
adc
xor
sarb
pushf
popa
cmpsb
sub
cwtl
push
push
fildl
outsb
jo
mov
xchg
scas
push
ret
jle
and
mov
push
push
adc
or
shll
jl
out
pop
dec
movsb
call
push
cmpsl
pop
rolb
rclb
incb
into
push
dec
rorb
into
xchg
xor
fcoml
ret
cltd
push
mov
ds
mov
lods
mov
call
in
adc
dec
jbe
arpl
or
sbb
cwtl
orl
cmpsl
xor
and
aad
test
mov
xchg
arpl
jp
and
and
mov
scas
ret
mov
movsl
jbe
push
and
rolb
push
mov
xchg
dec
push
test
xchg
cmp
iret
pop
lret
push
jle
and
stc
aaa
push
cmpsb
cmpsl
mov
push
cwtl
mov
inc
and
cmp
es
push
push
outsb
jo
push
movsb
mov
popf
push
or
ljmp
sbb
rolb
mov
sub
sbb
pushf
dec
mov
sahf
xchg
nop
rcll
inc
pop
pushf
dec
ss
sub
lea
xchg
dec
cmp
ret
and
rcll
loop
and
pop
jp
arpl
stos
imul
ss
orb
bound
mov
ss
cwtl
rolb
jno
push
push
pop
movsb
nop
dec
pusha
xchg
mov
fisttpll
fisubl
push
mov
cmp
jo
sub
inc
pop
imul
adc
nop
jle
jl
cmp
insl
mov
loop
fdivrl
jl
cwtl
xchg
rolb
jne
lret
ret
sahf
test
xchg
mov
add
mov
jp
shlb
pop
aad
lcall
mov
rorb
sub
dec
add
cmpsb
fisubl
xchg
push
pop
cmp
inc
roll
fistpll
cmp
pop
dec
loope
rorl
lcall
dec
js
or
and
push
mov
insl
push
dec
pop
inc
inc
aam
push
mov
sahf
xor
clc
gs
jb
mov
xchg
out
sbbb
cmp
ret
mov
and
push
mov
sub
shr
in
mov
push
ds
lods
jb
jl
ds
xchg
rclb
and
adc
push
xor
cmpb
jbe
push
xor
jo
mov
aas
add
orb
or
rcrb
clc
mov
sbb
retw
arpl
and
mov
in
xchg
adc
out
adc
jmp
dec
orb
inc
mov
lret
outsb
add
lods
addb
cmpsb
cmp
mov
cwtl
mov
inc
ds
pop
mov
test
jbe
inc
xor
cmc
and
dec
lds
mov
dec
ret
fsts
in
sahf
fistpl
xchg
push
cmpsb
es
pop
add
push
cmp
dec
add
inc
fwait
dec
cli
pop
out
inc
push
jp
test
pop
mov
mov
sbb
pop
dec
cmpsb
arpl
sbb
cltd
add
push
adc
sbbl
pushf
or
mov
cmpsl
xchg
ds
push
dec
mov
xchg
cwtl
push
dec
rolb
dec
xchg
push
out
sbb
xchg
lcall
mov
dec
and
fs
lahf
inc
xchg
xchg
std
mov
add
ret
adc
fistl
add
aas
add
mov
push
mov
xorb
dec
jo
ds
test
push
push
sbb
mov
inc
mov
pushf
sbbl
jb
mov
cmp
movsb
sahf
cwtl
andb
arpl
push
mov
xchg
ret
cwtl
orl
xchg
or
push
imul
loop
push
ja
mov
or
cld
and
jg
cmp
mov
mov
cmpsb
xchg
mov
sub
push
mov
mov
sub
mov
cmp
outsl
sbb
cmp
into
xor
ds
jo
push
rol
or
popa
jbe
inc
lock
and
adcb
js
in
push
shr
mov
or
add
sbb
fcoml
push
leave
xchg
jle
rcll
cmp
jns
jp
xchg
push
mov
dec
adcb
dec
adcb
sarl
loopne
xchg
mov
int3
addr16
lret
mov
popa
push
filds
jl
test
jmp
mov
jae
inc
fldl
lcall
pop
clc
xchg
jbe
ss
rorb
aas
mov
cmp
jnp
add
cmp
cmp
mov
xchg
push
aad
mov
int3
cld
push
push
push
ds
ss
sbb
add
pop
mov
jp
cmp
negb
imul
push
outsl
dec
push
pop
call
jecxz
dec
in
dec
cld
repnz
cltd
ret
jmp
call
dec
jp
fcompl
lods
in
cmp
ret
jb
fucom
sub
or
shlb
std
ret
cmp
or
dec
and
ss
inc
sub
jns
sahf
adc
fistps
lcall
lds
jl
cmp
and
mov
mov
fisubrs
loop
dec
shr
pop
aam
sahf
xor
xchg
xchg
jnp
aad
popf
mov
ljmp
ret
and
push
loopne
sbb
xchg
inc
les
cmp
clc
xchg
mov
mov
repz
lcall
xchg
sub
push
dec
or
cmp
xchg
mov
ds
ds
daa
popf
call
push
lret
jl
aas
or
pop
stos
data16
mov
inc
mov
jno
push
mov
popa
arpl
aas
dec
push
push
jbe
xor
int3
mov
jp
mov
adcb
pusha
and
and
push
add
in
jp
insl
jle
inc
adc
ja
sub
jg
sahf
aaa
imul
out
jle
arpl
mov
push
jbe
bound
iret
push
cmp
adc
cmp
mov
aam
mov
or
sub
pop
jecxz
cmpsl
mov
mov
in
jle
lock
and
and
fs
xor
std
jb
push
mov
loope
popa
lcall
pop
adc
jnp
subb
or
pop
roll
pop
lods
inc
inc
es
jle
pushf
sbb
inc
int3
sahf
sbb
xor
pushf
js
mov
mov
inc
adcb
inc
movsb
push
mov
adc
ret
inc
inc
popa
inc
add
dec
push
add
sahf
filds
add
and
in
or
sub
lds
in
and
loop
cmpsl
pop
dec
jo
xor
mov
inc
and
add
cwtl
movsb
jne
mov
inc
inc
dec
push
popa
inc
sbb
in
jle
xor
in
cwtl
cli
xchg
outsl
mov
push
movsb
mov
push
pop
aaa
mov
adc
dec
rolb
test
xchg
xorl
mov
gs
inc
push
xor
lcall
lret
sbb
mov
js
xchg
mov
push
call
nop
pop
mov
or
and
in
push
and
inc
scas
dec
pop
mov
js
push
pusha
roll
arpl
nop
or
lock
popa
push
sub
push
jb
je
in
movsb
outsb
and
mov
xchg
data16
popf
xor
fstpl
orb
jp
mov
inc
arpl
dec
cli
push
cwtl
xor
jb
or
lods
push
add
jmp
jecxz
push
data16
or
pop
mov
mov
and
add
or
lcall
xchg
pop
xor
movsb
adc
jb
mov
insl
mov
popa
cwtl
cmp
dec
jl
adcl
sbb
in
ficoml
hlt
push
lret
pop
out
mov
mov
mov
mov
test
mov
xchg
mov
iret
cmpsl
xor
jle
jo
movsl
push
popa
pop
pop
test
dec
mov
xchg
pushf
push
add
popf
push
sbb
inc
xchg
insb
and
and
mov
scas
push
aam
push
and
cmpsb
push
inc
inc
mov
push
push
jp
and
jbe
int3
popa
cmpl
push
inc
sbb
and
shlb
lds
inc
leave
xchg
mov
rcrb
pop
bound
ss
cmp
push
mov
xchg
movsb
test
mov
pop
inc
push
push
rcrl
push
jbe
xor
dec
pop
movsl
rclb
dec
andb
int3
cmpsl
sahf
pop
or
aam
rcll
js,pt
pop
cmp
inc
fstpl
dec
sub
in
ss
mov
test
and
ret
pop
jle
mov
pop
xchg
pop
and
dec
sbb
jge
jg
dec
mov
push
mov
mov
jb
cmpsb
fisubrs
imul
flds
inc
in
inc
and
leave
sbb
pusha
inc
adcl
lock
cwtl
nop
test
sub
fstps
and
sub
mov
mov
movb
and
cwtl
mov
or
jo
cmp
adc
outsl
and
jb
xchg
inc
inc
shlb
jb
jle
push
xchg
repnz
fcmovbe
cwtl
subl
je
nop
inc
inc
pushw
sbb
push
inc
aas
ret
pop
mov
mov
xchg
pop
mov
fsts
repz
xlat
xchg
in
nop
mov
arpl
or
rcrb
outsb
imul
push
cli
sub
mov
mov
fistpl
pop
out
push
mov
inc
jle
push
xchg
mov
sti
pop
sarb
inc
and
cmp
xchg
fnstenv
jb
adc
sbb
in
in
jecxz
loop
sbb
fdivrl
ds
ja
inc
or
cwtl
sbb
push
jb
loope
ss
lods
pop
mov
sahf
rcrb
push
and
jo
ljmp
mov
pop
popf
movsl
mov
nop
push
push
in
arpl
cld
sub
mov
jb
nop
cmp
arpl
sbb
loope
jle
inc
aad
and
xlat
into
push
popa
jo
sbb
dec
sbb
add
jle
std
push
xor
call
les
pop
xchg
push
xchg
iret
xchg
int3
mov
ret
add
cmp
and
xchg
add
std
in
shlb
nop
jb
lahf
test
repz
push
ss
mov
insl
dec
inc
negl
jb
inc
jecxz
lcall
cmp
lret
xchg
into
cmc
jl
jo
mov
orb
xchg
test
mov
clc
dec
inc
ljmp
mov
push
adc
stos
rorb
pop
push
decb
sub
or
lret
loop
push
mov
icebp
mov
sub
dec
aam
inc
lcall
mov
lret
xchg
pop
xlat
in
mov
cmp
add
or
roll
ja
inc
inc
inc
cwtl
sbb
jecxz,pt
cmp
jp
dec
jecxz
dec
adc
pop
nop
cmpb
sbb
and
lcall
ja
or
xor
push
out
xchg
and
subb
mov
stos
dec
loop
mov
ljmp
gs
or
jge
mov
mov
movsl
mov
inc
inc
repz
jbe
inc
or
orl
test
mov
je
je
dec
xchg
cmp
shrb
and
and
into
sbb
inc
add
dec
inc
ds
xorb
imul
cli
mov
adc
aad
testl
xchg
loop
dec
pop
cmp
movsb
dec
pop
pop
mov
mov
mov
bnd
inc
jmp
ficoml
loop
dec
inc
ds
inc
fildl
clc
inc
push
jg
mov
clc
mov
cmp
outsb
ret
test
jae
mov
int3
imul
xchg
loope
imul
dec
sbb
cli
cmpl
lds
mov
xchg
inc
mov
push
mov
lret
or
fdivp
dec
dec
inc
sbb
test
push
mov
xlat
repnz
notb
nop
rcl
push
rorb
data16
adc
pop
in
cmpsl
ss
dec
movsb
xor
movsb
xchg
stc
fsts
mov
jle
push
mov
mov
jb
push
pop
and
ja
data16
push
aaa
es
cwtl
rclb
lds
insb
and
dec
cmpsb
xchg
and
ss
and
jp
jb
aad
sbb
and
xor
loop
pop
mov
push
push
dec
jb
jge
jbe
xchg
cs
mov
sahf
jo
pop
push
mov
cmp
and
arpl
imul
pop
rcrl
pop
js
out
mov
push
dec
push
sbb
xchg
aas
dec
inc
mov
jle
xchg
lcall
gs
aas
cmp
dec
mov
jle
in
and
inc
pop
in
jo
scas
jbe
inc
dec
sbb
ret
loopne
pop
xchg
cmp
mov
inc
pop
sbb
xchg
iret
and
inc
mov
sbb
test
push
or
cwtl
test
xchg
stos
lret
mov
arpl
outsl
and
lods
in
int
and
movsb
lcall
fsts
cmp
mov
into
push
cltd
aam
rorb
ss
push
mov
inc
and
cmp
mov
mov
mov
sahf
mov
adc
and
jne
inc
mov
dec
xchg
push
or
mov
inc
outsb
ljmp
xor
jnp
push
inc
es
jb
outsb
xchg
fwait
cmpsl
mov
and
cmpl
mov
xor
sub
pop
mov
ljmp
pop
push
adc
inc
sub
xchg
in
push
pop
lahf
push
mov
inc
dec
pushf
ss
in
shlb
rcrl
push
mov
add
push
lods
mov
adc
jp
cmpsl
or
mov
push
push
sbb
test
sahf
ljmp
or
or
clc
jp
shrb
lret
inc
ss
mov
push
bound
mov
or
or
xchg
dec
dec
cmp
js
ljmp
cwtl
rolb
dec
decb
adc
mov
dec
mov
les
fdivs
fcmovnu
addb
inc
cmp
arpl
mov
jb
fcompl
lea
es
push
movsb
inc
test
pushf
push
orb
push
push
mov
xchg
xchg
and
jl
loop
pop
push
adcb
jb
push
divb
repnz
rorb
out
mov
adc
jbe
push
icebp
ss
mov
push
lret
cmp
inc
pop
fisubrl
into
push
and
inc
adc
pop
add
cwtl
popa
pushf
mov
push
fdivrl
cmp
xchg
nop
mov
popa
sbb
test
and
ds
es
sahf
mov
mov
cmp
mov
jbe
rorb
cmpsb
jns
cmp
stos
sbb
push
lcall
add
or
push
push
push
and
xchg
nop
ds
test
in
movsl
js
inc
cmp
pop
test
mulb
sbb
lea
shlb
imul
int3
movsb
dec
arpl
scas
push
pop
and
es
inc
pop
outsb
js
sub
adcb
cmp
dec
sbb
or
ss
outsl
push
pop
xchg
jbe,pt
mov
scas
dec
mov
aaa
loop
lea
mov
loop
mov
mov
mov
ds
mov
jle
and
scas
out
cwtl
sub
xchg
loop
sbbb
cmp
pop
sbb
mov
fwait
xchg
mov
xlat
aam
rolb
and
les
inc
enter
pop
ret
arpl
movsb
pop
pushf
ret
addb
movsl
lods
dec
pop
jo
jp
ds
sahf
int3
add
out
dec
xchg
jbe
les
js
in
xchg
mov
lds
and
rclb
aam
mov
push
negl
pop
movsl
in
hlt
test
dec
xchg
push
fdivrl
push
in
aas
add
inc
mov
rcll
cmpsl
sbbl
xor
jb
add
test
orb
pop
cmp
xchg
jb
fiaddl
push
inc
sbb
xchg
and
mov
ds
gs
xchg
xchg
xchg
xchg
pop
andl
mov
push
jnp
clc
pop
sahf
xchg
lcall
test
jp
mov
ss
cs
and
push
insb
lret
int3
loopne
inc
pop
cmp
arpl
inc
push
jle
mov
mov
in
or
dec
popa
shll
mov
add
jmp
add
in
rcll
cmp
and
jge
mov
jg
aas
mov
adc
sahf
dec
xor
adc
push
subl
sbb
jp
mov
cmp
mov
push
xor
ss
xor
push
scas
push
inc
out
test
arpl
mov
cs
out
inc
dec
not
jmp
shlb
push
test
jp
lds
adc
mov
ret
out
cmp
push
fadd
add
enter
inc
mov
fwait
inc
push
add
cwtl
jo
jbe
jae
pop
or
testl
jae
and
nop
iret
push
push
xchg
mov
jl
jp
mov
loop
inc
and
ret
test
or
inc
adc
sbb
xchg
pop
dec
xchg
adcb
mov
xlat
andl
xchg
push
popf
push
cmp
aaa
pop
cmpsb
std
sbbb
add
mov
imul
js
pop
inc
dec
pop
andl
push
leave
fiaddl
loope
pusha
sub
push
pushf
sbb
add
pushf
ret
fisttps
iret
popf
mov
out
loope,pn
jnp
sarl
dec
cmc
or
xchg
scas
imul
test
cmp
aad
sub
dec
lret
orb
adc
adc
icebp
sbb
frstor
cmp
or
filds
insl
and
mov
int3
fdivrs
bound
push
inc
fildl
out
cmpsb
push
and
scas
cmp
dec
pop
leave
cltd
nop
jo
out
pushf
sub
pop
pop
subb
ljmp
cmp
dec
add
inc
ret
gs
mov
jl
int
sahf
jle
push
mov
mov
mov
push
mov
hlt
pop
ret
ss
push
out
ds
mov
sahf
push
lahf
pop
xor
push
aaa
das
sub
in
sbb
stos
push
push
les
cmp
rolb
dec
push
pop
jp
js
std
inc
inc
pop
sbb
fs
add
popa
test
das
js
out
pop
mov
nop
add
dec
scas
cmpsb
or
jecxz
xor
test
jl
fcmove
jnp
ficoml
into
ds
and
sub
pushf
hlt
push
lcall
push
out
loope
lea
in
xor
in
and
xor
adc
or
test
mov
icebp
or
mov
mov
ficomps
rcrl
sbb
dec
cli
dec
xchg
popa
mov
inc
clc
pop
rcrb
out
ss
push
inc
mov
cmp
lea
cmp
mov
sub
sbb
mov
in
cmp
inc
aaa
movaps
pop
dec
cmp
push
or
inc
sub
jp
mov
mov
or
adc
cmc
stos
and
nop
mov
movsl
xchg
or
andb
orb
and
mov
push
mov
xchg
push
adcl
lea
or
loop
inc
aam
and
dec
imul
cmp
inc
jl
data16
and
xor
sahf
and
or
cmp
or
pop
dec
es
inc
dec
pop
adc
subl
movsb
in
pop
scas
mov
push
arpl
xor
xchg
or
mov
jb
jae
ljmp
shl
push
xchg
or
fimull
rolb
movsl
in
aas
xlat
inc
xchg
addl
inc
pushf
in
inc
push
cmpsl
push
std
mov
push
ds
xchg
and
popa
xor
jp
push
loop
fcmove
enter
pop
xchg
pop
push
jbe
or
sbb
pushf
xchg
sub
in
nop
sbb
ja
ss
ret
cmp
psrad
nop
jl
pop
jp
jnp
push
sbb
push
in
lea
lret
mov
mov
inc
sbb
test
and
xchg
ss
inc
js
inc
pop
cmp
sahf
mov
mov
test
out
ss
nop
rclb
mov
inc
pop
gs
lcall
pop
stos
mov
inc
sub
xchg
sbb
jle
push
cwtl
cmp
stos
push
sahf
mov
pushf
dec
pop
lods
push
inc
arpl
push
cwtl
and
mov
dec
and
mov
loop
imul
cli
inc
test
hlt
ss
in
ds
pop
xchg
inc
mov
and
gs
or
clc
mov
ret
dec
mov
sbb
call
xorb
xor
rcrl
call
dec
mov
mov
jp
push
pop
aaa
jb
ret
out
xchg
in
dec
jbe
lods
pop
aad
aam
add
jle
pop
jb
xlat
insb
push
loope
jnp
daa
inc
in
in
mov
xchg
fwait
idivb
inc
sahf
pop
cmpsl
push
inc
andb
movsb
mov
xchg
cmpsl
mov
push
mov
inc
fnstcw
lahf
dec
pop
cmp
inc
jl
lds
inc
push
mov
or
mov
orb
sbb
lea
inc
push
in
jle
pop
push
cmp
stos
mov
in
mov
sbb
mov
mov
cmp
push
xor
mov
arpl
mov
xor
jno
sbb
jle
and
mov
dec
dec
lahf
push
dec
movsb
add
push
pop
mov
or
out
pop
std
and
jo
sbb
mov
push
fmull
add
push
mov
loop
nop
or
aam
mov
jo
dec
mov
mov
dec
cwtl
xchg
pop
mov
ss
mov
cmp
in
popa
sbb
mov
cltd
test
mov
sbb
out
in
jle
cmp
inc
lds
test
jb
notl
in
inc
shrl
cmp
pop
mov
inc
cwtl
negb
cli
arpl
fcmovb
push
cmp
xchg
lods
in
cmp
jmp
mov
sbb
push
mov
in
cmp
sarb
cmpsb
aam
dec
aam
int3
cmp
xchg
xchg
jnp
mov
int3
jo
sbb
loop
ljmp
orb
xchg
mov
dec
mov
rorb
inc
andb
xchg
rcrb
mov
hlt
or
cmp
in
xchg
outsb
xor
ds
js
inc
movsb
dec
dec
xor
inc
mov
xor
popa
push
mulb
dec
lods
add
ret
dec
inc
cmp
bound
mov
cmp
cmp
jnp
cmp
push
mov
pop
ss
repnz
pop
inc
sub
push
jb
inc
pop
sbb
imul
mov
test
jle
movsb
jb
mov
push
xchg
aas
imul
fstps
push
popf
mov
adc
push
and
ljmp
sub
sbb
pop
xchg
mov
xchg
into
bound
mov
pop
xchg
jb
add
rcrb
xchg
sbb
pop
insb
pop
inc
out
fwait
call
and
loop
push
fwait
mov
ret
inc
scas
incl
stos
mov
xchg
movsl
fiadds
ss
mov
cmp
mov
lock
xchg
sub
mov
lcall
fidivs
out
cmp
ds
dec
out
mov
and
jmp
test
dec
test
xor
outsl
and
and
mov
ret
lods
ss
inc
push
push
mov
lock
inc
mov
push
cmp
repnz
loop
scas
fsts
ss
cli
or
and
sbb
cmp
mov
push
iret
fimull
pop
scas
fisubrl
in
cmpsl
jo
mov
cmp
mov
pop
cmp
xchg
jno
cmp
xchg
sub
scas
push
adc
fdivr
stos
lock
test
inc
mov
lods
orb
cmp
inc
adc
inc
ds
pop
sub
push
outsl
cwtl
xor
push
loop
jle
dec
pop
sar
jb
add
mov
je
push
arpl
pop
push
mov
dec
xchg
ror
lcall
mov
sbbl
test
dec
sbb
push
mov
ret
adcl
jbe
inc
inc
cmpsb
mov
cltd
bound
sub
jo
arpl
nop
out
jo
dec
pushf
mov
inc
push
cmp
mov
sahf
andb
push
aad
add
shlb
cmpsl
cwtl
sbb
push
sahf
outsb
mov
mov
roll
jo
pop
mov
jecxz
add
xor
push
mov
icebp
sub
fisubs
sbb
xchg
popa
sbb
pop
sar
jb
notb
jp
stos
add
push
dec
push
push
nop
out
xchg
jb
lds
and
jns
push
outsb
std
sahf
in
xchg
lcall
outsb
pop
xchg
mov
ret
mov
inc
pop
xor
pop
not
fmull
cmpl
dec
dec
push
dec
and
sahf
stos
sbb
sub
ret
jbe
addl
mov
pop
sar
xorb
xchg
inc
and
jl
sub
data16
mov
mov
dec
mov
pop
push
mov
adc
subb
aam
adc
test
out
popa
pop
ss
push
inc
mov
mov
inc
and
xchg
jge
mov
aam
push
int3
lods
stos
pop
cmp
gs
jp
sbb
nop
in
int3
jae
arpl
mov
xor
xor
mov
in
xchg
push
std
mov
push
push
jns
adc
lahf
jl
or
and
in
test
mov
lods
push
lods
push
sarb
xor
cli
add
pop
flds
aam
dec
mov
jne
popa
mov
jb
and
or
xor
push
inc
movsl
xchg
cmp
push
int3
adc
push
mov
lods
and
sahf
lds
pop
jge
aad
ja
mov
outsb
add
mov
or
stos
xor
xchg
mov
dec
mov
push
inc
push
mov
xchg
mov
sarb
push
outsl
rolb
nop
pop
add
push
dec
cld
push
popa
mov
arpl
sbbb
push
jb
inc
or
sbb
inc
lret
insb
into
mov
insl
jae
xor
pop
mov
lcall
lret
jbe
movsl
push
mov
lds
mov
cmp
cltd
scas
mov
mov
xchg
outsl
lods
rclb
xchg
lret
sbb
cmpsl
and
xor
dec
add
insb
imul
mov
push
inc
arpl
dec
sbbb
mov
or
xor
push
testb
cs
in
adcb
lcall
inc
push
fiaddl
mov
aad
incb
ljmp
add
dec
gs
cmp
es
movsb
mov
clc
mov
out
test
xchg
std
cmpsb
pushl
sub
lcall
cmp
ret
xor
cmp
stos
push
xchg
xchg
and
xlat
loop
jle
mov
pop
in
mov
mov
rolb
adc
or
sub
orb
dec
cwtl
ds
scas
nop
ss
sbb
fnstenv
cmp
or
or
cwtl
pushf
out
testl
mov
and
add
inc
inc
mov
sbb
or
mov
test
sahf
das
clc
lcall
es
push
push
sub
inc
push
pushf
cmp
rclb
xor
loope
pop
cmpsb
rorl
popa
cmp
pop
inc
in
mov
mov
cwtl
sbb
mov
push
xorb
fistl
lcall
mov
sbb
jle
lds
shlb
out
mov
outsl
inc
and
ss
dec
loop
push
es
sahf
sbb
and
fsubl
jb
ret
ds
ss
inc
inc
xor
iret
aaa
cmpsl
clc
arpl
pop
stos
push
lds
in
loop
mov
xchg
cli
sbb
out
push
and
ss
in
scas
jp
mov
aas
outsl
sahf
ds
jle
lds
adc
bound
add
dec
pmaxub
sbb
cmp
popa
jle
mov
pop
sub
ret
movsb
cmp
or
inc
test
aam
ds
arpl
xor
iret
dec
cmp
lock
loop
xchg
ss
add
fxam
mov
sbb
and
ret
adc
dec
and
pop
inc
and
xor
dec
jnp
sbb
testb
push
addb
ret
stos
into
in
mov
mov
bound
adcb
add
mov
inc
jnp
mov
inc
push
pop
mov
fsts
xchg
or
sbb
pop
inc
adc
push
in
push
fiadds
inc
mov
inc
jne
add
xchg
mov
movsb
jle
insb
idivb
mov
inc
or
ss
mov
cmpsl
mov
push
dec
pop
push
nop
xchg
in
popf
dec
fldl
mov
ss
xor
sarb
sbb
ss
lcall
mov
int3
push
pop
fidivrl
out
mov
jp
xor
iret
sub
sahf
fsubl
inc
loop
shll
push
cmp
imul
jl
inc
dec
pop
inc
inc
push
arpl
sarl
mov
cmp
jbe
xchg
dec
push
ret
cmp
insl
test
lahf
or
push
jl
mov
xorb
xchg
sub
and
mov
mov
popa
pop
dec
fstpl
add
sbb
jp
lcall
out
pop
sub
das
je
inc
mov
adc
add
push
pop
cli
xchg
out
inc
jne
mov
mov
in
mov
and
pop
add
pop
cmp
outsl
dec
xchg
and
cwtl
inc
call
jns
xchg
aam
jp
sbb
add
dec
adc
push
popa
and
into
stos
movsb
out
or
and
nop
sbbb
jo
js
cmp
arpl
push
lcall
pop
in
call
sbb
lcall
xor
adc
rolb
fstl
jp
testb
shlb
mov
int3
jp
inc
inc
nop
mov
andb
sub
adc
ja
push
mov
xchg
pushf
pop
inc
call
jo
adc
jl
in
inc
mov
dec
pop
arpl
push
inc
and
sbb
cmp
push
push
aam
and
addr16
rcr
jle
shld
repnz
ret
push
ds
push
aam
mov
arpl
mov
insb
mov
mov
addb
mov
pop
test
jge
ret
cmp
inc
push
sbb
xor
sbb
fsubs
push
or
push
xor
mov
ljmp
mov
sbbl
in
or
mov
cmpsl
sbb
andb
cs
mov
lods
sub
dec
push
sub
pushf
jmp
fisttpl
ret
jne
pushw
cwtl
outsb
sahf
dec
xchg
out
push
cltd
xlat
and
aas
pusha
fldt
adc
insl
popa
mull
test
mov
bound
xor
test
pop
fnstenv
jnp
test
push
pop
pop
aaa
push
sub
jb
pop
jl
push
fidivrs
xchg
cmp
jge,pt
add
jge
mov
addl
bound
push
dec
sahf
xabort
cmp
adc
repz
repz
pop
inc
jne
es
lcall
mov
outsl
or
inc
xchg
push
adc
push
arpl
das
leave
push
inc
push
jge
test
adc
lcall
insb
xlat
lcall
mov
xchg
movsb
add
mov
das
out
xor
cwtl
daa
jp
dec
arpl
in
adc
or
pop
hlt
imul
mov
xchg
mov
test
in
cmpsb
push
sahf
popa
mov
cmp
pushf
inc
clc
call
in
dec
movsl
jnp
ja
dec
ds
popa
adc
push
out
jo
and
lret
mov
sahf
add
dec
jle
sub
pushf
mov
inc
inc
and
jl
adc
inc
jbe
fwait
cmp
daa
pop
add
ljmp
xchg
inc
sbb
out
jns
loope
dec
aam
xchg
inc
and
pop
les
imul
lods
aam
mov
jle
arpl
xchg
in
lret
fcomi
or
je
imul
push
ret
mov
in
ljmp
push
jp
fstps
sbb
mov
movsb
repz
sti
xchg
int
adc
and
pop
ss
in
and
ret
orl
xor
sub
lret
test
jecxz
popa
into
imul
sub
lret
ds
scas
push
ds
mov
cmp
push
push
and
cmc
xchg
bound
test
dec
test
popa
leave
cmp
fdivrs
in
mov
inc
xchg
or
inc
fdivl
cltd
ss
adc
dec
dec
inc
addr16
int
mov
xor
inc
cltd
xchg
orb
popa
aas
mov
push
in
jns
add
push
jle
out
xchg
dec
cmp
mov
dec
shlb
and
js
mov
pop
and
icebp
cmpb
xchg
scas
jmp
lds
pop
and
xchg
movsb
sub
sahf
add
dec
scas
sbb
add
and
or
jle
push
pop
mov
xchg
sbb
pop
xchg
imulb
mov
jp
loop
jnp
dec
popa
xchg
inc
aad
ret
pop
push
in
jo
push
and
mov
stos
cmp
outsb
pop
outsb
out
movsb
jo
cs
and
mov
mov
jl
out
jnp
into
repnz
mov
sarb
jle
sub
popa
xchg
mov
pop
mov
cmp
in
xchg
dec
dec
clc
push
xchg
cmp
shlb
scas
jne
out
mov
xchg
lock
pushf
inc
add
mov
aaa
add
xor
inc
xchg
lcall
sbb
mov
cmp
xchg
and
inc
xchg
jmp
cwtl
into
out
jb
mov
and
adc
sbbb
jle
rclb
rcrb
cwtl
pusha
sahf
cmpb
mov
aaa
loope
stc
cwtl
adc
sbb
cmpsl
out
mov
mov
test
mov
dec
push
push
cmpsb
or
pop
inc
data16
adc
adc
dec
mov
xor
xor
scas
nop
test
in
popa
cltd
outsl
arpl
mov
stos
arpl
mov
sbb
or
arpl
dec
add
out
ss
rcll
sub
push
sbbl
mov
sbb
and
insl
js
add
mov
cmp
aas
shll
dec
lcall
xlat
and
mov
mov
inc
mov
push
dec
push
loope
cwtl
and
jno
inc
dec
pop
sbb
lcall
jp
fs
rcrl
mov
cli
xchg
sub
add
sub
dec
add
imul
adc
inc
fucomip
mov
sbb
stos
xor
sbb
int3
je
jp
aad
movsl
dec
jle
sub
and
cmp
jbe
sub
scas
sti
jb
sbb
out
pusha
dec
out
movsb
int3
mov
xor
pop
push
movsb
leave
stos
adc
sbb
adc
xor
cmp
or
nop
int3
test
add
and
inc
test
jb
rorb
in
nop
stc
mov
mov
add
xor
pop
and
mov
outsb
sbb
jo
js
loopne
lea
lcall
adc
shll
addb
xchg
cwtl
std
inc
ds
test
out
push
or
es
xor
cld
mov
mov
js
pusha
cmp
sbb
xchg
jle
jecxz
dec
in
add
push
jle
std
mov
mov
lods
and
adc
xor
sbb
xchg
sbb
sub
push
xchg
in
mov
ret
pop
jle
inc
fnstsw
in
inc
mov
fcomip
xchg
push
push
insl
dec
xchg
ja
inc
mov
sbb
fnsave
add
in
push
mov
pushf
sbb
adcb
popa
pop
out
fucomp
and
pop
push
or
inc
setno
jnp
mov
gs
cmp
lret
lret
pop
mov
dec
cmp
clc
mov
into
cmc
repz
xchg
ljmp
in
insl
and
mov
ret
in
inc
pop
lahf
sbb
mov
in
xlat
jnp
jg
pop
in
jnp
imul
idivl
jg
mov
sub
xchg
sahf
mov
sub
repz
adc
pop
mov
mov
xor
out
xor
dec
pop
pusha
sbbl
addb
mov
aam
dec
and
mov
sbbb
push
jle
cwtl
addb
xchg
mov
jbe
adc
xchg
adc
and
int3
mov
and
pop
push
pop
test
adc
xor
aaa
push
mov
mov
dec
test
or
dec
cmp
in
or
cmp
inc
rcrl
mov
pushf
xchg
cmp
push
mov
xor
lahf
mov
xchg
cmp
std
std
cmp
mov
and
jle
jo
cli
cmpsb
xor
inc
cmc
jmp
xchg
fcmovu
nop
inc
roll
leave
adc
fstpt
pop
ds
mov
mov
jns
push
ficoml
enter
lret
push
sbb
dec
mov
mov
push
push
jmp
mov
lcall
adcl
mov
nop
jle
push
xchg
inc
loope
mov
mov
pop
mov
ja
xchg
cmp
inc
jo
das
scas
cmpsl
cmp
sahf
adc
das
mov
push
mov
add
sub
mov
mov
stos
sub
push
dec
mov
sbb
sahf
push
orb
inc
push
sbb
sbb
popa
mov
ficoms
dec
lret
stos
mov
mov
lcall
pop
and
and
jbe
out
cmpb
rcl
xor
ja
dec
scas
arpl
lea
push
mov
xlat
dec
xchg
cmp
xchg
sahf
mov
push
mov
xchg
cli
jl
sbb
lahf
jb
mov
cmpsl
pop
test
stos
and
andb
sbb
aam
mov
mov
cwtl
sbb
cmpsl
lahf
pop
sahf
lcall
mov
js
or
mov
scas
sbb
push
pop
lods
fsqrt
and
insl
cli
les
ljmp
int
orb
sub
shll
in
mov
mov
scas
jecxz
and
sahf
pop
sbb
dec
or
xchg
jo
mov
mov
pop
gs
xchg
lcall
inc
pop
enter
stc
sahf
addb
xchg
daa
xchg
out
inc
scas
jmp
xchg
adc
pushf
dec
and
jb
mov
pop
test
push
js
jo
ret
outsb
jb
xor
test
cmp
sbb
dec
bound
ss
popa
jl
rorb
jge
mov
inc
loop
mov
mov
cmc
loopne
cmp
sub
push
mov
mov
jbe
push
scas
stos
in
cmpsl
test
dec
xchg
push
inc
and
mov
arpl
lock
test
jb
push
aad
ror
inc
stc
mov
xchg
inc
fisubl
sub
sbb
adc
and
or
stos
add
mov
mov
sahf
cmpb
aaa
jbe
jb
jp
pushf
in
fisubrl
inc
push
jo
dec
loope
aas
inc
xor
jmp
push
stos
push
pop
popa
int
xor
les
jo
sbb
nop
imul
mov
shlb
jl
add
and
rcrb
push
sbb
orl
push
mov
popf
loop
sbb
mov
mov
ret
arpl
jp
in
dec
adc
lods
cmpsl
cmp
inc
js
fisubs
mov
mov
sbb
push
jo
scas
test
mov
xorb
shrb
mov
dec
push
cmpsl
dec
xchg
jo
jbe
push
cld
push
popa
outsl
or
mov
rcll
xchg
in
mov
jle
int3
sbb
sbb
es
sti
ss
inc
pop
or
int3
add
and
cmp
scas
scas
lock
sbb
cwtl
pop
jo
lds
fdivrl
fs
call
mov
pop
test
sbb
push
flds
xor
arpl
xchg
push
pop
out
inc
mov
mov
sub
pop
sbb
inc
inc
mov
js
sbb
push
jle
mov
pop
adc
or
arpl
ss
pop
xor
sbb
pop
inc
push
push
jmp
mov
add
xchg
test
push
data16
sbb
mov
mov
push
lcall
inc
cmp
stos
xchg
adc
inc
or
sub
dec
pushf
pop
mov
fiadds
cmp
mov
mov
xchg
or
pop
or
and
out
dec
xchg
sarb
mov
inc
cltd
push
mov
jb
mov
pop
pop
leave
adc
pop
jp
in
lcall
cmpsl
cmp
push
sbb
mov
sarl
mov
pop
jo
mov
sarl
push
and
and
pop
ds
pop
jl
mov
sub
ds
popa
sahf
test
test
sbb
data16
mov
xchg
cmpsb
and
xchg
ds
xchg
mov
dec
leave
pusha
test
cmc
jecxz
adc
dec
insl
mov
outsl
mov
hlt
push
ret
push
lret
or
mov
arpl
xchg
cmp
mov
mov
mov
push
inc
popa
dec
sarl
iret
rcl
leave
mov
sbb
push
pop
xchg
adcl
dec
mov
imul
sub
loop
test
mov
ss
int3
out
inc
push
jo
mov
cli
xchg
pop
jge
flds
cwtl
inc
std
mov
ss
and
ds
ds
mov
int3
xchg
nop
jecxz
lock
add
mov
and
addr16
stc
sub
cmp
loop
or
testb
mov
cmp
outsb
pop
test
leave
lret
or
push
push
testb
xlat
xchg
sbb
lcall
out
hlt
fiaddl
negb
movb
es
and
push
xor
mov
lret
inc
outsb
push
sub
or
add
sub
xchg
lock
orb
add
arpl
cld
push
ss
test
movb
sbb
rorb
pop
cmp
in
sbb
inc
in
rclb
lcall
push
sbbl
popf
xor
stos
nop
push
inc
xchg
cmpsb
out
push
cmp
jp
sub
icebp
pushf
sbb
xchg
inc
or
movsl
sbb
lods
cmp
out
ret
pop
and
test
pop
int
ss
mov
movsl
sub
inc
inc
jp
cld
imul
mov
roll
mov
nop
adc
mov
mov
mov
jb
and
into
fs
es
sub
mov
mov
adc
pop
xchg
ss
push
clc
push
push
xor
mov
push
ds
js
jo
jb
aad
mov
and
pushf
outsb
arpl
cmp
nop
mov
mov
sbb
dec
and
inc
shl
leave
call
popa
xor
loopne
or
inc
push
adc
xchg
in
adc
in
aam
cmp
push
push
int
jb
mov
xor
sarb
andb
pop
movl
push
out
ret
push
push
dec
scas
hlt
sub
mov
orb
xchg
iret
cmpsb
iret
in
mov
nop
pop
jge
mov
cmp
mov
ja
mov
push
stos
movsb
pushf
test
jp
adc
xchg
push
aad
mov
xchg
gs
pop
movsb
mov
xchg
ja
adc
push
or
inc
out
xchg
out
shll
loop
fidivl
aaa
and
ret
ret
mov
ss
data16
nop
or
and
lcall
lret
cmp
inc
dec
dec
inc
sbb
ss
push
sub
mov
test
add
ss
dec
out
pushf
aad
mov
jl
outsl
mov
lds
dec
dec
gs
pop
rcll
test
cmp
mov
in
in
inc
jmp
or
push
iret
adc
push
lret
fmul
cmp
repnz
mov
push
pushf
pop
sarb
mov
push
inc
xor
sub
movsb
mov
add
push
add
in
mov
mov
dec
mov
sub
push
aam
popa
jle
ficompl
lret
ret
stos
dec
rolb
mov
and
push
push
and
in
lcall
test
inc
xor
clc
arpl
addr16
stos
push
cwtl
mov
addb
cmp
clc
xchg
int3
mov
dec
test
push
pop
sbb
lock
and
adc
mov
out
inc
dec
mov
jg
inc
stos
loop
int3
mov
decb
cmp
aam
inc
scas
aad
push
jo
xchg
dec
ds
sbb
sub
xor
lods
jl
imul
or
and
data16
jb
ret
cmp
pop
inc
adc
xor
adcb
les
cmp
pop
sub
dec
sahf
inc
cmp
popf
inc
pop
pop
push
loope
aad
jg
fildl
int3
push
fcmovbe
jge
mov
xor
push
jbe
inc
es
adc
mov
mov
orb
adc
movsb
push
adc
nop
jo
ror
sbbb
mov
jne,pt
fs
push
sahf
mov
and
aad
add
dec
movsl
shll
mov
mov
roll
inc
add
cmp
arpl
enter
add
inc
push
sahf
dec
insb
pop
out
mov
mov
ret
orl
cmp
pop
pop
fimuls
insb
je
movsl
push
inc
and
lcall
inc
dec
dec
popl
mov
inc
movsb
jb
push
in
nop
inc
fidivl
and
or
mov
or
sbb
fnstcw
and
ret
or
inc
ds
xor
inc
cmc
addr16
insb
inc
in
testb
mov
mov
mov
scas
insb
dec
sub
mov
inc
mov
push
xor
adc
mov
jle
rolb
jp
mov
outsl
fstl
jo
jl
jg
int3
mov
xlat
pop
mov
and
xorb
les
or
lcall
in
cmp
outsb
mov
cmpsl
dec
mov
xor
push
or
in
pop
xor
dec
cmp
arpl
ss
lcall
dec
inc
jb
push
popf
mov
or
ds
outsl
mov
in
mov
loopne
dec
cwtl
outsb
xor
mov
fistl
mov
dec
fisubs
inc
sbb
jno
ds
mull
sbb
decb
pop
cs
lea
shll
lcall
inc
pop
pushf
jmp
mov
shrl
dec
xor
cmp
cmpsl
dec
pop
push
push
xor
push
movsl
jg
xchg
scas
jp
sub
push
inc
mov
mov
loopne
xor
sbb
jne
lahf
adc
pop
push
repnz
decb
push
mov
dec
xor
cs
adc
push
add
fs
push
mov
mov
es
insb
lret
nop
mov
imul
aad
or
mov
xchg
pop
add
push
jb
xor
xor
add
nop
mov
popa
in
push
jl
daa
enter
sbb
xlat
dec
sub
cld
sbb
jb
int3
adc
jp
pop
jbe
xorb
sbb
mov
push
pop
jns
cmpsb
ret
xchg
xchg
mov
inc
jbe
inc
dec
mov
and
mov
push
xlat
mov
mov
ret
addb
sbb
pop
and
adcb
andb
xor
jo
mov
mov
and
lcall
lcall
or
mov
xchg
adc
inc
inc
push
push
push
push
push
rorb
rcll
inc
inc
dec
ss
ret
pop
add
mov
imul
jmp
fsubl
test
sub
jecxz
cmp
and
pop
mov
xchg
mov
jb
jecxz
and
cmpl
push
cmpl
daa
imulb
jnp
pop
pop
add
inc
inc
int
jp
pushf
jae
ret
cmp
jl
popf
pop
pop
xchg
sahf
xchg
push
sub
in
mov
cmp
nop
adc
sub
out
mov
cli
push
sahf
daa
repnz
jb
sbb
or
mov
cwtl
std
daa
inc
loope
xchg
aaa
shll
xchg
jo
pop
dec
sbbb
movsb
lds
xchg
mov
mov
and
pop
sbb
lahf
sbb
test
xchg
push
movsl
fbld
and
jbe
dec
icebp
sub
mov
jb
cmp
int
ds
push
imul
mov
jle
inc
out
sahf
or
int3
mov
pop
subb
nop
xor
scas
mov
cs
ss
sarb
pushf
mov
mov
icebp
mov
adc
scas
fcmovnu
dec
cmp
stos
and
inc
adc
mov
lret
shrl
mov
xchg
mov
mov
add
pop
xchg
cmp
sbb
pop
xor
mov
lds
es
movsb
xchg
test
mov
sbb
sahf
sbb
fimuls
lods
sub
pop
ss
xchg
mov
jle
xchg
outsb
inc
shlb
and
push
ret
push
push
es
sbb
mov
mov
jbe
repnz
or
fsubrp
int
mov
lret
es
mov
lcall
outsb
ss
or
xchg
fcoml
jp
mov
push
push
mov
loop
dec
bound
orb
loope
push
xor
daa
add
pop
push
in
fs
out
cmpsl
pusha
push
and
aad
mov
incb
mov
push
scas
pop
rorl
mov
dec
xorb
test
ret
xchg
mov
test
addr16
jecxz
jnp
push
dec
pop
movsb
f2xm1
dec
out
std
or
mov
adc
leave
in
inc
pop
test
xchg
jl
jge
test
cmc
pop
sahf
push
mov
push
js
out
int3
cmp
push
push
cmpsb
lds
arpl
jp
push
cwtl
push
movl
mov
push
ret
push
and
fistps
push
int
dec
mov
push
jo
ds
cwtl
or
sbb
clc
xchg
icebp
out
mov
dec
pop
jl
pop
xor
and
mov
and
add
sbb
orb
lcall
js
in
sub
mov
lcall
std
incb
add
mov
out
rcrl
mov
mov
aaa
and
or
jecxz
inc
clc
inc
fsubs
popa
inc
pop
inc
xor
ljmp
cwtl
sbb
dec
pushf
mov
mov
xchg
adc
outsl
pop
cmp
mov
out
rcrb
test
push
add
movsb
xor
das
imul
out
cmp
dec
sahf
push
imul
push
jg
or
lret
andb
add
sahf
mov
gs
inc
js
cmp
sbb
inc
or
test
ss
mov
xor
popa
mov
push
iret
push
cli
shll
and
lcall
outsb
pushf
call
and
jbe
adc
xchg
add
mov
gs
jo
add
inc
and
jae
mov
pop
sbb
xchg
lcall
push
inc
fisttpll
rcrb
shll
dec
adc
push
adc
adc
sbb
adc
push
lds
in
addr16
cli
and
mov
or
mov
les
pop
das
insb
iret
xchg
js
jl
xor
push
jl
adc
aas
imul
inc
jb
inc
xchg
sahf
negl
inc
fwait
push
fcmovb
stos
push
inc
push
inc
sahf
sbbb
pop
outsb
cwtl
es
push
out
jo
push
add
les
cmpb
inc
mov
push
dec
or
xchg
rcll
ret
xor
cmp
push
push
movsl
divb
jecxz
dec
xchg
xor
fisttpll
enter
cmp
push
or
cwtl
scas
std
clc
cmp
shr
rcrb
aam
mov
sbb
popa
data16
xchg
outsb
cmp
mov
imul
loop
xor
cmp
push
mov
lcall
jl
ja
push
jge
pushf
fs
adcl
push
les
pop
fsts
arpl
jns
push
lcall
lods
lcall
xchg
ljmp
sahf
xorb
sub
xchg
aam
sbb
and
sbbb
mov
xchg
push
push
adc
pop
pushf
fwait
pop
mov
jb
adc
imul
sbbb
lret
push
sbb
sbb
js
xor
adc
xchg
jbe,pt
cmp
and
inc
shl
or
insb
push
ds
lds
cmp
sbbb
xchg
push
bound
add
in
jge
jmp
adc
or
mov
inc
nop
mov
dec
cmp
sub
sbb
lds
out
jb
dec
mov
mov
inc
popa
xchg
mov
test
mov
lods
shlb
les
jbe
ret
les
inc
mov
mov
adc
leave
xor
and
in
mov
lret
js
mov
mov
adc
xor
pop
adc
pop
inc
test
loop
in
pushf
aaa
xor
adc
pop
cmp
cmp
inc
xor
xor
jb
in
js
push
pusha
mov
pop
iret
mov
jno
daa
test
lcall
icebp
xchg
in
aam
and
js
push
loop
and
and
jmp
or
int
inc
iret
popa
mov
mov
adc
push
sarb
mov
lret
jecxz
sub
push
or
xchg
clc
fldenv
add
mov
lahf
sbbb
in
lds
pop
jg
or
xor
sbb
sbb
push
fwait
lcall
in
ljmp
lahf
sbb
or
cmp
inc
inc
push
push
and
in
sbb
push
dec
jbe
out
mov
dec
xchg
pushf
cltd
mov
push
dec
inc
xchg
fidivrl
fwait
push
sub
ss
pop
pop
cli
push
lock
fsubs
pop
and
push
xorl
and
inc
adc
jnp
mov
xor
movsl
cmp
mov
xchg
stos
jecxz
js
addr16
fistl
dec
dec
sbb
sbb
outsl
pop
je
push
jmp
nop
arpl
push
call
test
or
pop
pushf
adc
pop
add
movsb
and
push
xchg
cmp
mov
ficoml
mov
sbb
out
mov
add
push
aam
dec
pushf
dec
mov
pop
nop
jb
cmp
jle
sahf
fidivrs
fstpl
pop
sbb
inc
fiadds
adc
push
xor
dec
cs
dec
jmp
mov
orb
jge
inc
jns,pt
pop
fsubl
data16
pop
xchg
jl
mov
mov
stos
inc
mov
xor
fwait
or
mov
out
dec
lahf
ss
mov
mov
adcb
cmp
xchg
and
push
inc
dec
push
mov
push
inc
inc
std
cmpsb
jle
pop
dec
cmp
dec
or
or
mov
jp
xor
cmp
dec
out
and
ret
fstl
pop
repnz
jnp
sahf
cmp
and
add
adc
cli
add
pop
jne
popl
test
jo
mov
addb
cmp
popa
fcoml
sbb
int3
orb
arpl
sub
cs
xchg
movsb
roll
les
dec
push
lret
xlat
dec
in
mov
stos
movsb
fldcw
ljmp
sbb
and
idivb
add
push
dec
inc
mov
nop
xchg
mov
enter
mov
gs
push
movsb
jo
xor
dec
push
ds
cmpsl
mov
mov
mov
sbb
jl
lea
add
dec
push
rclb
jo
xchg
fwait
and
aad
mov
stos
jl
jae
xor
lcall
fsubl
sub
and
fistl
and
jnp
call
mov
jp
and
and
lea
leave
bound
push
mov
jl
mov
jo
pop
dec
xchg
dec
jne
pop
mov
pop
rolb
in
loop
imul
pop
and
pop
cmpb
rorb
dec
es
push
scas
xchg
out
push
dec
into
pop
jle
jb
inc
pop
arpl
lds
aas
xchg
mov
gs
and
rorl
gs
inc
mov
jbe
cmp
xchg
inc
sahf
inc
jo
jae
cmp
pop
jle
mov
xor
jge
and
add
sbb
scas
inc
xchg
ljmp
jle
and
pusha
jl
or
js
loop
mov
mov
into
arpl
and
sbb
ret
push
xchg
push
andb
inc
es
int
sbb
ret
std
aad
sub
mov
cmp
dec
inc
repz
cmpb
cmp
andl
js
sahf
push
dec
cmpsl
push
mov
mov
mov
outsb
and
mov
cmp
jle
sbb
cltd
and
popa
xchg
xchg
lret
cltd
sbb
xchg
sbbb
sub
fidivrs
sbb
xchg
in
dec
xorb
jne
mov
cwtl
ja
lret
pop
pop
mov
and
mov
cmp
sub
dec
push
xchg
xchg
in
push
call
cmpsl
rorb
sub
and
mov
xchg
cmp
incb
imull
mov
andl
ljmp
inc
frstor
inc
cmp
aaa
and
cli
dec
push
pop
and
arpl
inc
cwtl
test
xchg
iret
repnz
jne
lret
data16
daa
test
rcrl
arpl
test
xor
push
lods
arpl
aas
into
jbe
sbb
pop
test
pop
jbe
ljmp
fcoml
dec
js
test
xchg
mov
out
aad
bound
and
mov
mov
sub
cmp
cmpsb
imul
dec
add
and
inc
nop
popf
dec
incb
lret
outsb
pop
jmp
cmpb
mov
ljmp
push
insl
ss
addb
mov
out
shll
sub
cwtl
in
xor
into
lret
and
pop
popa
ret
ficompl
xor
and
mov
pop
ret
scas
sbb
inc
sarb
xchg
cmp
xor
sahf
mov
mov
xchg
mov
mov
pop
dec
in
gs
push
push
mov
ds
adc
sbb
xchg
stos
out
arpl
test
js
xchg
sbb
addb
sbb
dec
es
mov
inc
pop
xchg
call
pop
xor
mov
xchg
or
xchg
push
andb
adcb
dec
sahf
xchg
lahf
inc
push
inc
inc
mov
cmp
mov
jb
jle
sbbb
std
cwtl
pop
call
int3
adcb
in
inc
movsb
lds
sbb
jnp
ljmp
add
inc
inc
js
outsb
push
iret
aas
fwait
push
mov
inc
sub
into
inc
out
test
jl
mov
add
addr16
loope
test
fwait
ljmp
int
sub
test
push
ret
scas
ljmp
push
inc
aaa
sahf
add
scas
push
pop
aad
push
pushf
out
faddl
xchg
or
ss
cmp
inc
cmp
movsl
shlb
rorl
or
hlt
sahf
cwtl
rcrb
ret
stos
push
xchg
add
xchg
movsb
push
adc
outsb
pop
xor
pop
mov
stos
dec
repz
sub
push
dec
cwtl
inc
adc
cmp
cltd
cmp
xchg
inc
outsb
rorb
ret
push
cmp
inc
xor
and
push
bound
jp
sbb
in
xchg
jp
nop
cmpl
xchg
sub
fsubr
dec
push
cmp
arpl
push
mov
mov
xorb
dec
pushf
inc
ss
stos
add
sahf
xchg
daa
inc
movsb
xchg
sbb
or
mov
test
xchg
pop
mov
lds
jl
sbb
test
loop
sub
arpl
sbb
add
sbb
mov
push
lea
lds
inc
sbb
ds
cmp
rcr
pop
and
or
lea
in
fsubrp
loop
lea
xchg
nop
mov
data16
mov
ss
push
lock
add
out
inc
pop
push
adc
push
jp
rorb
movsb
fst
cmp
fldl
addl
hlt
dec
cmp
mov
out
movsb
and
mov
inc
xor
mov
jb
mov
pushf
lcall
xchg
jo
xor
jle
cwtl
pop
ss
daa
mov
xor
mov
sahf
cmp
loope
adc
dec
or
cltd
inc
sub
roll
enter
pusha
addb
jl
mov
sti
lods
repnz
ss
mov
ss
inc
rcl
jbe
into
push
mov
and
dec
icebp
and
jne
adc
ss
andb
xchg
sahf
sbb
push
gs
sbb
mov
mov
or
cwtl
sbbb
sbb
inc
adc
iret
lret
mov
xchg
mov
push
dec
ficompl
xchg
mov
inc
in
xchg
push
mov
ss
push
xchg
cmpsl
and
push
mov
jl
in
pop
mov
iret
or
mov
imul
jb
push
and
adcb
test
cmp
xchg
dec
jle
loop
push
lock
mov
stos
xchg
loop
jo
scas
mov
push
pop
adc
sbb
mov
arpl
and
cltd
ret
shrb
pop
iret
inc
sub
inc
xor
cmpsb
cltd
pop
xchg
push
jg
cli
ss
add
movsb
push
pop
call
in
ds
cmpsb
sub
ss
add
mov
push
arpl
popa
mull
pushl
out
cwtl
push
mov
push
lahf
ret
mov
test
aad
adcl
out
arpl
loop
aam
xchg
mov
cwtl
pushl
xchg
inc
adcb
push
adc
cmp
loopne
int
in
xchg
sbbl
add
inc
nop
pop
ret
sub
mov
adc
add
mov
in
or
jmp
aad
xchg
pushf
jb
pop
lcall
inc
int
insb
or
aad
dec
cmp
inc
inc
cmpb
aad
dec
in
sbb
inc
mov
mov
sahf
push
push
in
addr16
push
jp
mov
dec
addr16
mov
int
cmp
xchg
test
mov
ljmp
push
sbb
inc
dec
inc
ss
int3
sbb
mov
dec
or
sbb
lds
push
dec
inc
sbb
cmpsl
xchg
jl
jo
xchg
push
lods
cwtl
cmp
nop
lds
pop
dec
xor
pop
and
jb
dec
dec
pop
in
leave
adc
sbb
push
lcall
aas
incb
add
jbe
sarb
xchg
push
mov
xor
ljmp
scas
sbb
jge
aaa
sarb
sub
push
lret
jp
in
lret
push
inc
xor
cmp
mov
addb
in
arpl
leave
lock
jge
add
adc
andb
mov
in
sbb
cwtl
in
aad
jle
scas
sub
inc
addr16
sub
cmc
pop
cmp
test
xor
aaa
jmp
mov
xor
xchg
outsl
test
mov
fiadds
cli
dec
aaa
in
or
sbb
dec
icebp
ret
jp
pop
mov
sahf
sbbb
adc
dec
cwtl
push
add
pop
shlb
push
xchg
inc
movsb
test
fnsave
push
xchg
sbb
or
test
mov
adc
inc
push
arpl
nop
lret
sub
loope
cmp
repnz
push
cli
and
loop
ret
and
push
push
push
jo
xor
mov
or
mov
mov
ss
mov
and
pop
mov
jb
inc
cmp
rclb
in
in
loop
fidivrl
movsb
aam
dec
xchg
jo
mov
xchg
fimull
jo
push
lds
lret
jo
pushf
cmp
cmp
mov
cli
inc
sbb
hlt
adc
inc
mov
mov
xchg
mov
lds
cmpb
rcrb
test
mov
cmp
cmp
aaa
inc
or
jo
outsb
js
inc
sbbb
sahf
lahf
sbb
aad
call
xor
test
sbb
mov
addl
int
pushf
and
aad
push
cmp
ret
insb
sbb
push
lret
in
pop
dec
inc
push
mov
xchg
repz
mov
cwtl
ss
xchg
jb
sbb
push
push
jbe
xchg
or
sub
push
movsb
cmp
xchg
dec
call
les
out
jne
inc
jl
fcom
lret
jb
mov
push
and
cmp
pop
xchg
dec
jbe
ficomps
jecxz
mov
in
inc
push
dec
mov
xchg
in
dec
dec
jmp
and
push
push
sbb
sbb
inc
jle
jbe
nop
jp
aas
mov
xchg
inc
and
and
pop
inc
pop
xor
hlt
movsb
int3
dec
dec
adc
loop
lret
add
inc
outsl
push
push
dec
addr16
sbb
dec
push
clc
xorb
inc
xor
lods
xchg
mov
xor
jnp
mov
mov
xor
sub
jb
icebp
and
or
iret
jle
jl,pt
mov
ds
xor
inc
jp
pop
inc
into
push
jo
aas
notb
orb
inc
xlat
mov
lret
int
or
fstpl
jmp
sbb
add
out
pop
mov
movsl
in
push
mov
mov
and
nop
dec
and
stos
mov
in
test
xchg
mov
les
cmp
mov
test
movsb
cwtl
lds
ljmp
adc
cs
pop
shlb
dec
inc
ss
lcall
dec
idivb
icebp
int3
push
dec
push
mov
nop
pop
jl
xchg
xor
aas
fcompl
inc
jns
jbe
jno
das
shll
pop
jle
and
jp
push
add
aad
aad
dec
sbb
push
adc
sub
mov
rorb
mov
push
pop
inc
int
andl
inc
and
pop
cmp
lcall
lret
push
pop
subl
dec
sbb
inc
add
inc
ror
je
xor
cwtl
mov
add
inc
adc
cs
adc
pop
outsb
xor
mov
xchg
mov
mov
out
add
inc
sbb
push
xchg
mov
jmp
dec
cmp
roll
lret
jl
xchg
and
mov
xchg
inc
inc
ret
push
pop
and
jge
inc
jg
mov
xchg
mov
je
ret
lret
mov
addb
adc
ds
lea
lock
stos
mov
lds
sbb
movsb
mov
les
jle
dec
and
xchg
jb
dec
mov
and
push
inc
aaa
dec
outsb
push
lret
sub
mov
subl
inc
mov
movsb
std
in
lcall
push
and
jmp
mov
xchg
and
inc
test
popa
loop
cmp
lcall
mov
imul
loop
arpl
nop
jl
jmp
mov
lods
push
ds
dec
and
dec
jae
sub
movsb
add
and
lcall
es
xchg
pop
cli
mov
lret
jle
sahf
mov
and
fwait
cmp
test
cmp
add
mov
xor
ss
movsb
push
push
mov
in
mov
inc
adcb
arpl
ljmp
stc
push
dec
inc
aad
add
dec
sarl
mov
adc
stos
and
jb
inc
imul
adc
jp
push
pop
ret
aas
jno
cmp
push
int
mov
cmp
std
push
movsl
push
or
push
adcl
pop
pop
push
mov
push
stc
in
lret
loop
push
ss
xchg
or
jp
and
mov
negb
stos
addr16
mov
push
pop
lock
les
pop
push
add
add
daa
push
in
xor
mov
dec
je
push
les
pop
adc
inc
cli
xor
dec
mov
or
push
mov
jae
pop
xor
and
mov
cs
push
popf
aam
inc
lret
sbb
add
cld
pop
movsb
xor
popf
cs
and
mov
rorl
dec
xor
sbb
mov
adc
lock
mov
rcrb
push
pop
ss
push
jo
mov
xchg
push
dec
mov
fldenv
or
cmp
pop
xchg
inc
or
lcall
push
xor
pushf
bnd
adc
or
adc
lds
lds
cld
push
sbb
loopne
jbe
fdivs
dec
inc
dec
xlat
inc
mov
lods
sbb
les
sbb
ds
inc
pop
xchg
xchg
cs
inc
mov
mov
sub
push
dec
inc
lock
dec
hlt
data16
xchg
loop
xchg
mov
push
ret
dec
inc
test
xchg
inc
repnz
sbb
imul
xchg
xchg
daa
xchg
dec
dec
dec
mov
cltd
mov
adc
stos
jae
xchg
leave
xlat
fists
and
in
ljmp
dec
leave
in
ret
xor
inc
test
pop
push
dec
and
vpsubd
inc
pop
lcall
ret
mov
push
xchg
inc
gs
sub
mov
inc
ljmp
sbb
dec
ret
sbb
add
dec
pushf
dec
inc
cmp
mov
not
nop
rol
inc
push
xchg
dec
je
out
outsb
test
and
add
js
push
dec
fwait
lea
call
cmp
xor
or
push
or
jno
jbe
mov
pop
xor
nop
mov
fiaddl
sub
mov
xchg
inc
mov
adc
int3
xor
mov
aad
jbe
push
and
mov
dec
leave
cmp
cmp
push
push
mov
dec
push
lds
cmpsb
and
xor
jnp
nop
pushf
push
push
jle
mov
in
aas
sahf
dec
cmp
jns
xlat
xchg
xchg
jmp
inc
movsl
dec
push
sbb
inc
adc
addr16
inc
inc
and
cmp
leave
push
lea
pop
outsb
dec
sub
inc
jle
mov
ret
pop
mov
int
nop
test
lcall
dec
lds
cwtl
jge,pt
insb
dec
sub
xor
jo
cmc
pop
outsl
mov
xor
pop
adcb
jnp
or
mov
lret
push
pop
leave
aam
mov
sarb
inc
xor
cwtl
fistps
mov
xchg
mov
fdivl
lahf
inc
push
and
aaa
bound
inc
jb
stos
add
test
mov
or
out
cli
mov
xchg
popa
jb
sahf
ljmp
jge
lds
test
pop
aas
xor
in
inc
popa
inc
dec
pop
js
pop
push
jne
js
pop
shrl
add
push
xchg
sbb
imul
inc
xchg
scas
int3
push
cmp
pop
jo
outsb
shl
movsl
mov
xchg
xchg
cmp
loopne
mov
sbbb
ja
push
or
mov
dec
pushf
inc
pop
sbb
pusha
enter
mulb
enter
js
jns
xchg
or
jle
das
loop
dec
mov
fiadds
sbb
inc
mov
xchg
push
jp
out
movsb
xchg
outsb
sbb
ss
jl
mov
push
arpl
sbb
mov
bound
in
icebp
out
adc
pop
push
sbb
cs
or
pop
aas
ficoml
and
and
sub
inc
jbe
mov
jb
and
aad
ja
cwtl
jbe
dec
ret
stos
xchg
int3
xchg
ss
fsts
movsb
inc
lcall
lret
and
pop
shlb
xor
outsl
jae
sbb
fnstsw
push
inc
mov
xor
lahf
sbb
out
fwait
andb
sahf
add
xchg
pop
pop
and
aad
loop
dec
inc
loop
ret
scas
xor
pushw
jle
jns
fnstenv
push
stos
cwtl
stos
add
sbb
ret
inc
mov
loopne
adcb
mov
inc
addr16
addr16
push
pop
js
push
in
jne
xchg
nop
es
push
jl
sub
inc
mov
leave
ret
arpl
xchg
push
in
icebp
mov
adc
xchg
xchg
and
ret
inc
jecxz
call
jns
les
mov
addb
sahf
mov
js
outsl
sarb
and
pushf
nop
mov
jecxz
mov
cmp
call
sub
adc
or
sbb
fwait
lds
and
mov
and
test
mov
pop
xchg
fistl
lahf
sub
mov
and
mov
adc
icebp
movsb
jle
andl
dec
and
mov
and
cwtl
outsb
inc
xor
jle
ljmp
pop
rcr
mov
push
adc
mov
adc
in
rorb
lret
add
adc
rcrl
in
cli
sbb
lret
jb
jbe
mov
sbb
jl
stc
mov
testb
or
nop
pop
push
push
push
inc
mov
inc
jp
les
cmp
test
xchg
jg
nop
adcl
push
push
call
in
dec
dec
push
cmpsb
mov
pushf
test
stc
cld
cs
dec
and
dec
ret
mov
sub
lret
cmp
js
inc
inc
inc
push
jb
dec
test
cmpsb
daa
inc
sbb
xlat
adc
adc
es
dec
out
and
rcrl
popa
and
xchg
xchg
xchg
test
adc
js
jnp
inc
xchg
sahf
and
mov
xchg
nop
jge
xchg
inc
mov
jo
mov
cmp
and
push
add
lret
faddl
mov
in
aad
xchg
and
xchg
lea
ss
add
fwait
add
mov
in
clc
xchg
in
idiv
in
dec
fsts
in
loopne
inc
in
pop
out
dec
jecxz
sbb
add
cli
in
ret
and
pop
or
jno
dec
or
or
shlb
in
call
fdivp
adcb
mov
or
xor
adc
test
shl
push
or
insb
push
lock
scas
pop
jl
nop
imulb
inc
push
xchg
cwtl
clc
pop
inc
mov
push
arpl
adc
in
dec
and
push
mov
stos
adc
popa
jle
xchg
jp
inc
mov
xchg
push
fidivrl
in
pusha
stos
xchg
ss
lods
or
inc
sbb
out
jo
ljmp
pushl
nop
jbe
mov
lods
std
cmp
test
mov
push
jl
orb
jo
inc
cmp
dec
mov
sbb
mov
cs
jb
stos
ret
xchg
push
and
movsl
dec
out
adc
int
sbb
inc
jle
fcoms
and
stos
inc
mov
lcall
cwtl
inc
adcb
inc
jo
push
roll
gs
adc
lea
adc
pushf
inc
sub
or
push
clc
xchg
add
lcall
aad
cltd
gs
pop
pop
sub
jne
and
pop
orl
fimuls
int3
aaa
clc
xorb
xchg
xchg
cmp
mov
icebp
mov
jmp
sahf
xchg
ss
pop
jg
cs
ret
or
mov
shl
push
push
cmpsl
mov
movsb
mov
dec
dec
jb
push
xor
shlb
movsl
frstor
lock
leave
mov
jle
cmp
push
aaa
ficompl
adc
push
aaa
xchg
aas
roll
test
jl
call
movsb
and
out
call
mov
and
leave
sbb
sbbb
mov
push
lods
aam
pop
cmpsl
pop
nop
pop
ds
out
mov
pop
leave
pop
cwtl
sbb
mov
dec
ret
icebp
mov
jge,pn
ds
data16
cwtl
outsb
dec
ljmp
sbb
cmpsb
xor
rcrl
out
in
xchg
fisubs
mov
mov
imul
aaa
lret
out
sbbb
jb
jo
jle
mov
pop
lea
fcoml
mov
cmpsb
cmp
mov
mov
jecxz
orb
inc
mov
or
into
xchg
cmp
and
xchg
movsb
subl
dec
xchg
and
lcall
imul
push
das
push
jecxz
mov
cmp
sub
arpl
rolb
lahf
adc
inc
sbb
mov
shll
jmp
inc
es
dec
or
stos
ja
and
jb
jb
add
loopne
inc
mov
aas
adc
add
xchg
aaa
call
out
lds
xchg
ret
loope
nop
shrb
movsb
ss
add
and
call
adc
es
stc
or
mov
mov
inc
xchg
sbb
xor
adc
pop
mov
in
and
int
inc
nop
mov
jp
pop
es
aam
push
cmp
sub
adc
rcrb
xchg
js
stos
outsb
aam
and
ljmp
inc
mov
mov
xchg
mov
arpl
push
push
dec
sub
push
cmp
inc
pushf
call
or
insb
into
std
cmp
or
imul
sbb
mov
movsb
pop
aad
jo,pn
scas
in
pop
push
lds
jl
cmp
pop
testb
mov
mov
or
ss
in
and
shll
cmpsl
xor
cmp
arpl
mov
cmc
dec
sbb
scas
jbe
ja
sub
mov
int3
mov
fiadds
inc
push
adc
mov
shlb
mov
das
mov
and
cmpl
cmp
or
mov
in
cmp
mov
mov
push
loop
cmp
sub
push
push
outsb
push
lret
cmp
fisubrs
ss
mov
sub
loop
ror
xchg
sbb
stos
dec
arpl
add
dec
and
mov
jb
adcl
in
mov
hlt
cltd
mov
push
in
pop
dec
call
jg
mov
in
sbb
dec
xlat
jl
dec
pop
dec
fwait
mov
push
mov
push
aad
test
xchg
mov
ret
sbb
int3
popa
pop
aaa
push
lretw
xchg
int
push
cwtl
dec
lds
addl
shl
xchg
rolb
stc
aam
jl
shll
mov
imul
fstl
cmp
mov
js
push
int3
nop
mov
push
addb
pop
in
cmc
adcl
leave
sti
cmp
mov
pop
test
xlat
out
cmpsl
rcrl
js
push
add
pop
mov
dec
push
and
mov
jmp
addl
popa
xor
lret
xlat
jb
pop
inc
inc
div
sub
arpl
ds
test
push
sbb
sbb
push
cltd
push
mov
sbb
mov
inc
jp
dec
mov
jg
push
mov
fidivrl
ja
idivb
xchg
push
cmp
mov
mov
in
push
test
sub
or
cmc
sbb
push
mov
jb
xchg
push
xchg
dec
adc
inc
ror
pop
push
test
ss
popa
aam
arpl
mov
push
push
mov
add
xchg
jbe
push
out
push
cmp
sub
adc
inc
adc
dec
ss
ficoml
mov
ds
popf
je
mov
sbbb
mov
xor
mov
adc
cmp
inc
push
icebp
cld
stos
lods
push
inc
push
mov
push
inc
movsb
pop
inc
test
rorb
inc
mov
push
inc
xor
jae
test
in
xorb
sahf
mov
lcall
inc
push
mov
and
ljmp
jle
dec
jb
mov
cmp
mov
jb
add
jns
sahf
inc
std
cwtl
inc
scas
gs
dec
js
pop
loope
cmp
mov
ficompl
ficoml
adc
sbb
nop
sbb
ss
sbb
jle
fistpl
andb
adc
rcrl
and
nop
cwtl
xchg
aad
pop
push
pop
pop
xor
pop
xchg
jae
push
jmp
xchg
test
insb
sbbb
dec
or
cltd
iret
cmp
ficompl
in
in
sbb
rorb
add
push
daa
rcll
push
mov
test
call
sahf
push
inc
mov
popa
ret
ljmp
out
push
testb
inc
dec
mov
jae
ret
mov
cmp
out
push
inc
or
iret
or
jns
enter
push
sahf
xor
adc
lcall
ret
jbe
pop
push
into
mov
orl
dec
dec
or
dec
repnz
xchg
idivl
jae
pop
inc
push
adc
xchg
fdivl
cmp
adc
fisubl
fiaddl
sbb
sahf
dec
cwtl
aad
push
lea
jp
xchg
sarb
ss
ret
inc
nop
ds
adc
xchg
pop
aad
dec
shrl
cli
and
testb
inc
rclb
sub
aas
es
push
push
outsb
and
cld
or
fstpt
jp
out
xchg
subb
push
jo
and
orb
jle
mov
xor
je
jmp
xor
cld
idivb
xchg
adcb
xadd
ljmp
ljmp
scas
dec
imul
inc
pop
nop
jle
inc
inc
inc
jb
and
aas
xchg
xchg
ja
cmp
js
cmp
inc
sbb
dec
sub
dec
mov
inc
xchg
int3
mov
lret
js
and
push
xabort
fcmovnb
adc
pop
push
jbe
xor
push
xorb
fs
nop
pop
lods
mov
or
movsb
push
shll
mov
stc
icebp
stc
sarl
andb
sbb
cs
xor
rcl
lcall
mov
imul
in
push
iret
mov
inc
push
js
jbe
pop
xchg
mov
jae
mov
les
pop
imul
jno,pt
cmp
mov
mov
aad
fwait
pop
aad
ljmp
mov
mov
test
push
jo
fwait
lret
lcall
mov
mov
hlt
leave
into
leave
mov
adc
nop
shrl
inc
mov
jle
movsb
xchg
and
xchg
mov
cmp
mov
mov
pop
sbb
jbe
xchg
fsubrl
cmp
ds
call
sbb
mov
xor
jno
add
sub
pushf
pop
arpl
push
lcall
test
xor
mov
xor
jns
push
xchg
ljmp
imul
int3
sub
scas
outsb
sbb
in
mov
sahf
mov
stos
sahf
xorb
int3
jnp
lcall
push
inc
mov
ja
cld
inc
mov
lds
push
inc
sbb
and
push
insb
xor
sub
inc
xor
ljmp
movsb
dec
test
pop
mov
neg
xor
cs
jle
mov
test
je
orl
xor
inc
rorb
testb
shlb
popa
or
nop
in
pop
jmp
mov
xor
in
pop
movsb
data16
mov
push
jo
push
insl
mov
mov
push
push
lods
inc
dec
test
arpl
cli
je
mov
push
and
and
dec
nop
adcb
push
rolb
hlt
add
sbb
aad
popl
outsb
inc
adc
rolb
adc
cmovne
push
cs
jl
sahf
mov
lret
lret
sub
push
repnz
inc
not
mov
mov
or
sbb
jle
jae
jne
xchg
cwtl
ficompl
int3
scas
adc
and
js
push
xchg
jnp
addl
jbe
xor
mov
jno
sub
xchg
dec
lret
icebp
lret
xchg
mov
pop
adc
xlat
cmc
fcmovnbe
dec
cltd
inc
sahf
push
fistpl
mov
dec
dec
das
insb
sti
sub
in
jo
xchg
daa
push
sub
fs
pop
add
mov
and
jbe
dec
aaa
negb
ficompl
cmp
dec
ss
mov
fs
pop
insl
adc
outsb
mov
cwtl
mov
push
icebp
push
pop
inc
enter
imul
mov
addl
inc
mov
nop
push
or
and
sub
inc
or
ss
fiaddl
jecxz
pop
aaa
pop
aam
jbe
aas
and
shl
and
iret
ds
dec
lahf
mov
mov
push
xchg
loop
movsb
lret
jmp
mov
pop
jle
push
aaa
cmp
jo
andb
dec
jbe
inc
roll
mov
cmp
sub
popa
mov
push
inc
sbb
mov
pop
ret
cmp
test
jl
in
dec
cmpb
pop
xor
lcall
inc
aad
add
cmpsb
nopl
xor
stc
push
add
and
jns
pop
loop
cltd
sbb
ret
jle
cwtl
push
outsl
mov
jge
std
or
ret
mov
mulb
in
jbe
out
adc
pusha
out
mov
xchg
rolb
punpckhwd
and
push
out
dec
push
xchg
pushf
cmp
pop
dec
fimuls
int3
mov
cmp
fistl
jb
push
cmp
sbb
mov
cmpsb
or
test
int3
ss
mov
fidivrl
push
es
inc
push
inc
icebp
push
je
jl
arpl
xchg
mov
sahf
cmp
xchg
and
xchg
push
inc
bound
lret
dec
xchg
mov
add
jo
ret
add
inc
ret
lret
pop
adc
or
fwait
lds
mulb
and
rorb
cmp
fst
dec
add
testb
mov
sub
ret
jle
jb
inc
sbb
jp
mov
xchg
inc
pop
inc
mov
mov
lret
push
pop
inc
or
push
lcall
pop
pop
or
push
push
xor
adc
jns
xchg
xchg
inc
int
movb
push
mov
fisubl
dec
shll
stc
out
sahf
movsb
or
sub
popa
mov
push
and
xor
lods
push
jge
test
ret
push
popa
adc
add
add
in
adc
push
in
dec
jp
cmp
inc
arpl
xchg
sub
sbb
sbb
out
shll
int
push
pushl
xchg
and
sub
mov
sub
adc
pop
push
pop
call
inc
adc
jo
outsb
cmp
cmpsl
inc
push
push
dec
popa
mov
push
lds
shll
pop
outsb
mov
and
cwtl
xchg
mov
mov
push
arpl
inc
mov
mov
cli
lea
mov
mov
popa
mov
dec
jge
adc
sbb
pop
adcb
cmpb
stos
nop
outsb
inc
cmp
mov
cli
imul
repz
push
mov
push
push
in
cs
dec
cmpb
push
pop
movsl
arpl
lea
lds
mov
mov
aad
mov
inc
xor
xor
jle
in
aam
jl
sub
stos
popa
mov
in
jbe
mov
nop
out
jae
push
in
in
xor
outsb
js
or
nop
push
push
jg
mov
movsb
jb
mov
sub
cltd
gs
inc
pop
dec
dec
ficomps
inc
dec
xchg
mov
es
push
loope
pop
jae
sarl
movsb
push
cmp
sbb
xchg
pop
add
lcall
fistl
in
mov
mov
rcll
int3
dec
xchg
aaa
inc
push
inc
cli
xchg
aaa
jne
jge
test
inc
inc
xchg
shrl
ficoml
inc
mov
dec
js
popf
jle
shll
jbe
push
inc
mov
lcall
roll
or
sbb
adc
mov
mov
movsb
mov
push
shr
lods
and
dec
xchg
inc
sub
lahf
add
mov
cmpsl
data16
dec
test
not
xchg
pop
xchg
js
jb
stc
push
add
mov
in
mov
loope
ss
out
lahf
sahf
nop
cli
jo
mov
pushf
push
sahf
mov
pushf
mov
loop
jle
mov
mov
daa
mov
pushaw
push
add
jge
xor
pop
leave
test
dec
movsl
aaa
jbe
mov
lahf
je
inc
fisubl
lret
xchg
jbe
sub
aam
inc
mov
dec
mov
test
and
lods
or
xor
inc
cmpsl
in
push
ss
sahf
stos
jo
movsl
lahf
sub
clc
gs
jp
imul
inc
fidivl
jbe
push
pop
pop
push
add
cmp
inc
mov
cmpl
call
loope
pop
test
cmc
xchg
inc
jl
pop
dec
mov
test
aam
mov
shll
testb
ftst
pop
ss
or
jge
sahf
mov
xchg
fimull
notl
xor
rolb
cmpsb
stos
int
mov
mov
dec
mov
inc
repnz
adc
mov
ss
push
jecxz
js
pop
sbb
fwait
in
cli
dec
cmp
lret
sbb
mov
sahf
xorb
sbb
sbb
adc
js
int
xchg
adc
mov
push
mov
mov
add
insb
add
mov
and
ss
shrl
dec
out
ror
test
push
mov
popa
dec
daa
aas
in
cmp
test
jb
xor
cmpb
rcrb
ss
lret
mov
test
subb
cwtl
mov
or
pusha
shll
out
dec
push
inc
inc
adc
aad
lea
jno
fcom
pop
cmpsb
mov
mov
inc
rcpps
and
jb
inc
cwtl
inc
xor
push
push
add
cmpsb
sbb
xchg
int3
pop
push
dec
push
mov
push
mov
cmp
orb
push
arpl
mov
mov
pop
mov
and
ss
scas
cmp
xor
pushf
dec
and
push
ds
ss
lahf
aad
mov
adc
std
mov
mov
test
pop
jo
ja
or
pop
popf
ljmp
out
clc
imul
cwtl
inc
ds
mov
cmp
iret
loop
call
xchg
orb
les
fs
jbe
adc
sahf
inc
jo
cmp
push
xor
lods
cmp
or
mov
dec
fidivrl
pop
test
aaa
cmp
sbb
inc
and
mov
out
mov
ret
test
xchg
ss
mov
es
ret
ds
jno
pop
pop
sahf
rcll
xchg
mov
add
xor
rcrl
cmp
or
imulb
adc
ret
cmp
shlb
andb
dec
jp
ret
ss
cmp
dec
or
mov
cwtl
ja
cmpsl
inc
movsb
pop
inc
cmp
mov
xchg
sbb
inc
test
std
push
jmp
inc
jl
adc
mov
cwtl
jle,pt
mov
dec
lods
push
inc
and
push
mov
popa
ret
mov
popa
jo
mov
jmp
mov
push
js
sbb
push
xor
sbb
mov
lods
daa
xchg
cmpb
pushf
xor
sbb
xor
xor
mov
nop
imul
clc
pop
repz
mov
lcall
fdivrl
sbb
cltd
push
fcmovne
jbe
inc
lcall
pop
pop
nop
cmp
lret
lret
nop
std
data16
aas
or
daa
sub
int3
sahf
xchg
mov
mov
and
pop
xor
inc
or
dec
cmp
dec
insb
sbb
cmpb
test
gs
mov
push
and
and
jle
or
push
popa
movsb
push
cmpsl
xchg
inc
cmp
inc
pop
shll
push
jge
jb,pt
and
popa
dec
arpl
icebp
rcrb
cwtl
sahf
mov
jle
out
xchg
fwait
arpl
xlat
xchg
jg
mov
xchg
lds
sbb
mov
stos
sbbb
jb
dec
aam
push
jb
addr16
mov
jle
cmpb
mov
repz
inc
loop
push
jmp
or
xchg
mov
xchg
push
mov
cltd
inc
daa
mov
fdivl
lods
push
test
jne
sbb
inc
mov
inc
xor
inc
fstpt
dec
in
mov
nop
out
push
call
pusha
clc
push
jb
lcall
and
jmp
push
mov
jp
dec
mov
in
sbb
subl
push
xchg
loop
pop
inc
aam
or
cmp
push
xchg
sub
push
or
mov
xor
pop
mov
ret
inc
and
rol
dec
xor
cwtl
popa
andl
pop
js
adc
ja
xchg
out
sbbb
xor
inc
fwait
ss
or
mov
les
shlb
arpl
js
out
mov
xchg
jbe
pop
ss
jle
mov
inc
inc
inc
aas
inc
dec
and
jo
subl
cmp
outsl
stos
pop
adc
in
push
adc
aad
mov
inc
cmp
cmp
ljmp
push
sub
xor
adcl
gs
lds
mov
pushf
mov
and
pushf
adc
jp
lret
out
in
push
scas
mov
and
fisttpll
dec
xchg
and
js
cmp
bound
fwait
dec
sub
and
xchg
jno
data16
loope
cli
cmp
push
jb
jbe
movsb
sbbl
fs
add
rorb
mov
popf
add
mov
pop
dec
jmp
test
jp
inc
mov
nop
and
add
xchg
pop
mov
and
out
mov
xlat
sahf
sub
test
mov
xor
dec
dec
jbe
ja
int3
js
push
lret
cmp
mov
jp
or
mov
arpl
mov
jo
ds
xchg
and
push
push
mov
mov
push
popa
mov
xor
inc
fimuls
jae
lods
mov
bound
popa
in
or
cmp
fidivs
xor
cwtl
mov
xchg
xchg
movsb
or
push
in
in
adc
or
ret
mov
and
pop
dec
add
or
push
inc
arpl
xchg
pop
push
jmp
rorb
enter
enter
popf
mov
sahf
inc
lret
sbb
insl
mov
cmp
lcall
push
xor
mov
sub
scas
icebp
in
mov
inc
sar
cwtl
mov
clc
int3
adc
mov
jmp
loope
ret
jle
gs
dec
popa
and
sbb
jmp
pop
outsb
les
xchg
xchg
cmpsb
add
push
xor
mov
push
push
mov
inc
movsb
push
out
push
xchg
nop
jbe
sub
pushf
pop
and
mov
xor
lret
jp
enter
lea
mov
and
pushf
test
pop
rcrb
mov
push
out
mov
pop
xchg
jb
outsb
repnz
dec
ficoms
out
mov
jb
aad
or
pop
push
rorb
sarb
dec
ret
pop
xchg
ds
sbb
inc
sbb
ret
mov
pop
daa
aam
inc
shrb
xchg
xchg
sbb
push
pushf
mov
cmpsl
cmp
inc
movsb
and
cli
mov
mulb
xlat
mov
cs
push
mov
rolb
and
inc
negl
inc
pop
mov
mov
out
mov
lret
cmp
push
and
xlat
pop
stos
loop
inc
or
repnz
ljmp
mov
mov
add
inc
jbe
push
movb
inc
rcrb
pop
xchg
push
dec
dec
dec
sahf
popa
pop
ret
push
aam
push
data16
mov
popa
not
jbe
rcll
gs
inc
jge
sub
push
xchg
aas
cmp
mov
add
push
jbe
xchg
sahf
mov
sbb
mov
push
xchg
iret
or
sub
inc
and
ljmp
add
adc
and
lcall
push
ds
mov
arpl
mov
cmp
ret
cmpsb
bound
push
sbb
dec
pop
dec
aas
mov
jo
add
sbb
sbb
daa
cmp
ret
andl
sbb
or
mov
cmpsb
cmpsb
or
push
subb
std
test
push
push
inc
psadbw
rorb
mov
aam
pop
scas
dec
in
call
inc
insl
incl
movsb
dec
add
xchg
adc
cmpsb
mov
and
mov
adc
push
mov
sub
in
inc
xorb
mov
mov
push
aam
ds
call
inc
jo
rorl
movsb
mov
and
ds
sbb
shrb
sbb
mov
inc
cmpb
push
cltd
outsl
mov
mov
xchg
cmp
ficomps
das
add
jl
xchg
inc
int3
and
rclb
xchg
data16
lds
dec
pop
lods
ljmp
pop
xor
dec
adc
es
movsl
int
stos
adc
jp
xchg
add
xchg
inc
ret
jae
sbbl
adc
test
fsubl
push
aam
jl
cwtl
pop
fxch
icebp
dec
push
jg
lods
push
xor
sbb
push
loop
ja
dec
insl
sub
adc
mov
inc
and
jb
lahf
in
adcb
xor
fldenv
aam
dec
scas
add
scas
mov
cmpsl
mov
and
jl
in
dec
lods
adcl
dec
and
movsb
jg
out
test
dec
jle
sub
out
adc
xchg
or
fildl
push
ret
push
test
xor
lret
xchg
mov
shl
shll
adc
arpl
xorb
pop
mov
ss
jo
cwtl
pop
cmp
out
push
dec
ret
push
out
xchg
push
pushf
nop
and
addb
mov
cmpsl
xchg
push
aam
sbb
iret
cmp
fcmovb
or
int3
push
cmpsb
jb
pop
sbb
push
lcall
dec
ret
or
inc
mov
inc
js
fs
jno
inc
add
add
bound
jecxz
xchg
rorb
aaa
jno
pusha
dec
inc
mov
dec
mov
add
mov
lds
test
mov
pop
xchg
push
stos
pop
cltd
addb
pop
sbb
or
out
test
adc
cli
mov
or
inc
and
mov
push
pop
xchg
cmp
jp
stos
cmp
dec
jb
lcall
push
in
mov
icebp
inc
dec
pop
push
imul
xchg
cs
insl
sub
inc
dec
inc
mov
adc
sahf
pop
outsl
insl
ljmp
mov
idivl
les
push
cmpsb
bound
sti
orl
mov
andb
ja
jae
jle
cmp
outsb
xchg
loop
xchg
push
lcall
and
pop
ja
jae
sbbb
lahf
pushf
movsl
clc
pop
stos
lods
in
dec
rclb
into
pop
test
inc
push
into
add
stos
cmp
lret
inc
or
jge
js
xlat
aas
cmpb
testb
dec
sahf
push
ljmp
movsl
bound
ljmp
addl
sbb
sub
and
xorb
int
push
jbe
nop
jmp
cmp
pop
inc
or
movsb
push
std
cmp
rcll
stos
stos
cs
testl
pop
and
stc
lcall
dec
lret
gs
nop
and
mov
jbe
mov
insl
sbb
cmpsl
xchg
mov
lcall
and
pusha
push
push
add
sub
inc
dec
js
pop
fisubl
add
xchg
dec
jne
cmp
sub
scas
or
adc
test
gs
cmp
out
pop
adc
sbb
arpl
lcall
arpl
ret
mov
jle
or
in
lcall
jp
outsb
push
xor
or
jo,pt
sbb
inc
in
cmp
cmpb
inc
jb
addb
arpl
in
mov
dec
rorb
nop
xchg
movsb
int3
and
jo
cmp
not
jle
in
inc
mov
fs
or
popf
jl
xlat
add
pop
mov
ret
cli
sub
loop
dec
jp
iret
sti
mov
jp
enter
testb
inc
cmp
fldl
fistpl
outsb
lcall
mov
subb
ss
inc
andb
push
mov
clc
inc
jbe
sbb
inc
cmp
mov
rcrl
test
push
mov
mov
xchg
sbb
daa
pop
mov
jle
dec
pushf
mov
add
cmpsl
call
dec
mov
aam
mov
es
xor
mov
out
ss
pusha
pop
aam
xchg
lret
scas
out
nop
js
dec
push
pop
inc
push
push
push
add
shl
push
in
mov
pop
cmc
dec
aad
stos
push
pop
inc
mov
stos
les
push
in
shll
popa
push
lahf
push
scas
inc
fimull
sbbb
mov
inc
push
loopne
xchg
push
push
test
inc
aaa
movsb
xor
movsb
or
shll
mov
cmpl
addb
xchg
popa
mov
call
arpl
cmp
cmp
cmp
cwtl
jl
cmp
in
inc
sbb
push
rcr
and
push
inc
rorb
pop
mov
pop
arpl
test
adc
add
xor
xor
add
dec
xor
lret
xchg
lahf
mov
sahf
xorb
jle
mov
or
xchg
mov
mov
mov
xchg
aaa
inc
rcr
jo
pushf
jmp
or
adc
mov
or
cmp
mov
adcl
pop
push
xchg
dec
mov
push
jle
push
lds
lds
jmp
and
and
shll
mov
out
and
push
jbe
call
mov
jmp
and
xchg
dec
shll
mov
loop
inc
jle
dec
push
pop
mov
jae
and
mov
xor
and
push
add
mov
add
pushf
js
xchg
jp
ret
fidivs
aad
fidivrs
pop
jecxz
in
inc
add
pop
jns
xor
arpl
cmp
insb
in
call
pop
mov
inc
inc
sbb
xchg
add
inc
arpl
mov
jbe
out
pop
and
xchg
sbb
subb
xchg
subl
xor
inc
sub
mov
cwtl
in
adc
mov
push
subb
js
aaa
testb
and
inc
cmpl
adc
and
cmpsl
movsb
push
pop
jle
dec
xchg
faddl
push
mov
cmp
mov
xor
xchg
push
movb
dec
mov
xchg
sti
testl
testb
pop
push
imul
mov
xchg
cltd
inc
scas
data16
pop
sub
xchg
inc
xchg
sbb
push
mov
dec
ss
ret
or
pop
dec
inc
pop
sub
adc
ljmp
xlat
pop
mov
cmp
add
lea
out
pop
ja
aam
dec
ss
mov
or
xchg
and
jno
push
je
adc
and
popa
scas
imul
js
push
push
es
xchg
cmp
imul
mov
dec
pop
adc
xchg
sbb
xlat
jbe
rcr
or
cmpsb
xchg
in
pop
cwtl
int3
cwtl
dec
adc
add
mov
push
add
push
cmpsl
add
jle
cmp
jbe
cmp
mov
mov
inc
inc
and
jl
inc
ss
out
fmull
sbb
or
testb
xchg
out
mov
dec
mov
sbb
dec
inc
sbbb
jp
push
and
daa
rclb
js
jns
mov
push
loope
push
fisubrl
dec
or
pushf
push
ret
loopne
push
jo
adc
sbb
xchg
xor
xor
popa
scas
ljmp
test
aaa
mov
cmp
dec
cwtl
sbb
aaa
ret
int
in
or
cmp
pop
xor
test
insl
mov
dec
inc
cmp
xchg
adc
mov
inc
fisubl
cmp
mov
jle
jge
sbb
pop
int3
andl
mov
mov
mov
in
mov
les
xorb
xor
jo
xchg
pop
mov
push
pop
pushf
lcall
push
movsb
pop
cmp
inc
dec
ds
jl
sub
xchg
shrb
rorl
insb
arpl
push
jge
inc
dec
mov
adc
inc
jbe
push
xchg
jle
in
push
mov
ja
inc
cli
call
movsb
scas
pop
inc
in
add
imul
pop
cmp
add
cmp
cwtl
pop
aad
in
nop
in
pop
icebp
imul
test
pop
popf
mov
lcall
das
pop
dec
pop
imul
mov
mov
addb
nop
mov
jb
inc
mov
sbb
addb
adc
fisttpll
lcall
adc
push
scas
aaa
jge
mov
jb
lret
xchg
pushf
mov
in
xor
cmp
and
fisubrl
mov
add
aas
and
movsb
frstor
into
inc
arpl
cmpb
and
orb
insb
outsb
adcb
addb
gs
push
inc
nop
arpl
out
mov
jl
xchg
andl
cmpsl
test
mov
jbe
push
in
mov
mov
imul
dec
or
and
mov
stos
lcall
cmc
repnz
jmp
cmpb
sbb
xchg
cli
pop
push
dec
push
sub
jo
inc
ss
cmp
inc
add
push
and
movsb
sbb
push
push
add
sarl
test
xor
outsb
mov
or
dec
mov
sbb
xor
pop
push
inc
loope
shrb
mov
inc
inc
add
lea
push
push
rol
xchg
jl
shll
inc
out
jae
add
pop
dec
pushf
sahf
ret
push
test
jbe
and
pop
data16
dec
pop
add
mov
mov
test
push
or
xor
push
jne
mov
push
aam
mov
add
pop
dec
mov
sbb
movsb
sub
mov
dec
pop
mov
cmp
out
dec
mov
popa
cwtl
arpl
mov
aas
mov
dec
fidivrs
sahf
push
sbb
orl
rcll
test
jbe
sbb
jb
pop
dec
neg
out
mov
test
std
dec
imul
enter
mov
cmp
xchg
sbbb
sub
shll
jb
or
mov
and
lret
push
inc
mov
sub
pop
clc
cmp
mov
mov
pushf
cmc
push
or
pop
mov
jb
aaa
xchg
jo
lea
pop
cmp
and
ret
adc
addb
inc
lret
test
jle
inc
dec
jb
bound
jmp
inc
stos
cmpsl
xor
popa
inc
sahf
adcl
pop
insb
xorb
inc
sbb
scas
mov
dec
cmp
int3
mov
aaa
insb
mov
inc
out
sbb
push
xchg
nop
and
jno
cmp
push
movsb
fcmovnb
dec
jl
je
xchg
mov
lcall
xchg
outsb
push
xor
jmp
pop
push
sbb
ss
loop
xchg
ficompl
pushf
sbb
cmpsb
bound
call
into
xchg
inc
outsb
test
cli
mov
pusha
push
inc
sub
sbb
dec
subb
inc
jb
cmp
jmp
cld
pop
mov
ss
pop
inc
xchg
arpl
pop
repz
in
cmpsb
or
jp
jle
xchg
and
sub
popa
adc
fimull
test
clc
pop
push
mov
ds
or
popa
and
lds
cmp
aam
sbbb
and
push
xchg
pushf
lea
aas
sbb
pop
aam
and
incl
bound
insb
pushf
inc
ret
and
mov
xchg
mov
push
bound
jns
cwtl
cmp
cld
jle
pop
int
arpl
ret
xchg
movsb
daa
or
push
iret
push
inc
dec
rorl
inc
push
pop
inc
jl
cmp
add
lcall
dec
arpl
leave
mov
cmpb
jbe
xlat
inc
cwtl
mov
sub
xchg
adc
cltd
in
xlat
mov
ret
jnp
movsl
add
cwtl
test
fsubs
out
inc
xorb
cmp
sbb
sub
push
jecxz
and
pop
lcall
jae
js
inc
add
mov
popfw
push
inc
add
lods
push
push
xchg
mov
adc
cmp
mov
loop
xor
push
lcall
outsl
lret
mov
mov
jbe
cmc
xchg
in
and
dec
push
aam
int3
pusha
dec
jb
cmp
push
aas
fistl
jg
hlt
or
lcall
jmp
stos
mov
fstpt
aad
fiaddl
cmpsl
push
push
push
sbb
and
mov
add
fisubs
jle
data16
js
jnp
out
pop
sahf
popa
mov
fimuls
xchg
push
lods
dec
pop
and
test
imul
inc
push
mov
aam
push
pop
gs
jge
rcrb
push
adcl
pop
inc
fwait
hlt
push
push
rorl
lds
js
xlat
cmp
cmp
sub
inc
inc
mov
in
mov
dec
daa
negb
mov
dec
pop
push
mov
mov
and
lods
ficompl
mov
adc
orl
sbb
dec
out
and
dec
jecxz
nop
in
or
sar
inc
mov
and
jmp
lds
out
aam
inc
inc
push
rcll
push
movsb
xor
fisubs
push
sbb
fcoml
in
mov
idivb
lds
pop
in
btrl
xchg
mov
inc
push
aad
pop
lock
and
jb
sbb
ss
cld
test
scas
mov
sbb
outsb
pop
ficompl
aam
jle
xor
ja
mov
stos
jp
mov
jecxz
push
mov
cld
mov
jg
inc
xchg
adc
add
sub
dec
rcrb
push
adc
add
inc
fwait
lcall
or
cmp
adc
push
sub
pop
lret
push
mov
gs
push
cmp
push
mov
or
jb
in
outsb
xchg
mov
and
mov
add
mov
ss
int
and
ret
and
pop
sub
mov
cmp
and
pop
add
adc
in
aam
jno
dec
jb
cmp
pusha
jb
xchg
push
ja
inc
in
push
cmc
imull
stc
icebp
in
xlat
cmc
push
stc
test
in
adc
mov
in
cmc
push
adc
lahf
pop
in
cmc
adc
xchg
paddsw
pop
sti
stc
fs
in
dec
test
xchg
cwtl
mov
pushf
jo
lahf
adc
int
inc
lcall
cmp
dec
popf
daa
imul
pop
fcoms
pop
adc
fidivs
cmp
dec
loope
lcall
xchg
cmp
push
outsb
push
xor
sbb
adc
and
mov
dec
sbb
push
xchg
cmc
and
push
fstl
push
pop
push
mov
lds
int3
inc
sbb
xchg
jo
and
pop
mov
pop
test
cmp
pushf
arpl
sbbb
adc
jbe
jo
fistpll
mov
inc
dec
scas
xchg
cld
inc
insl
xchg
pop
shll
xchg
inc
jb
stos
pop
sbb
xchg
push
mov
mov
xchg
pop
lahf
adc
push
jp
sbb
push
jle
xchg
aam
insb
lret
clc
scas
dec
mov
in
adc
sbbb
lcall
mov
fs
sbb
push
jl
and
xchg
cmp
ss
in
jle
pop
push
mov
mov
popa
push
pop
xchg
sahf
jbe
lock
cmp
and
xor
lods
imul
enter
and
add
push
jl
dec
pop
inc
mov
inc
mov
enter
aaa
and
aas
jb
inc
iret
mov
loop
sbb
mov
in
cmp
push
mov
push
inc
xchg
xorb
mov
jle
popa
aad
loop
and
xchg
outsl
mov
inc
fsubr
dec
cmp
xchg
mov
push
lret
jle
push
cmp
pop
mov
cmp
mov
sbb
imul
fildl
cmp
inc
lcall
push
jbe
mov
push
popa
mov
cmpsb
dec
push
dec
mov
orb
pop
xor
pushf
scas
enter
mov
mov
pushf
ss
mov
hlt
mulb
fiadds
lods
pop
mov
dec
out
mov
and
xor
mov
icebp
fcmove
and
js
cmp
cmp
pop
push
cwtl
cmc
outsl
sub
mov
mov
nop
cwtl
arpl
testb
fidivrl
and
nop
ret
mov
popa
pop
cmp
aas
dec
jb
sbbl
divb
pop
stos
mov
arpl
into
and
cmpsl
push
mov
popa
mov
ja
cmp
roll
dec
push
fistl
dec
ss
clc
js
ret
sbb
fisubs
pop
out
sbb
pop
jle
cwtl
arpl
js
adc
cmpsb
mov
push
cmpsb
arpl
popa
movsb
cli
mov
xchg
mov
jl
cmp
pop
sbb
xor
inc
scas
inc
mov
mov
mov
jbe
into
xchg
and
out
cmp
pushf
out
jb
xlat
inc
jg
lahf
cwtl
push
lods
cmpb
pushf
nop
push
scas
mov
inc
cmp
and
rol
in
inc
xchg
jle
lock
mov
and
cmpsl
inc
push
and
pop
push
std
xor
push
rclb
stos
inc
jge
mov
leave
xchg
int3
stos
mov
pop
ror
xchg
inc
xchg
add
xchg
dec
pushf
out
push
xchg
xchg
push
cmpb
xchg
xor
sub
jl
mov
and
push
lret
ljmp
push
stos
mov
inc
push
adc
loop
xlat
imul
imul
test
les
sbb
stos
mov
call
mov
jle
loope
int3
xor
addb
gs
mov
mov
mov
fisubs
mov
xchg
inc
mov
xor
sarb
or
push
pop
stos
arpl
dec
cwtl
dec
pop
xchg
mov
ss
dec
xorb
cmp
pop
test
mov
add
mov
or
pushf
sarl
dec
xchg
ficoms
xchg
and
and
pop
push
push
popl
pushf
in
inc
js
mov
sub
xchg
pushl
and
mov
adc
fidivl
and
push
out
xor
enter
adc
ret
dec
inc
mov
adcb
pop
xorb
fidivs
in
lret
inc
imul
scas
pop
push
fiaddl
lret
cmp
inc
cmp
jns
test
ss
lds
addb
addr16
push
test
sbb
mov
jbe
movsb
cmp
ret
das
pop
in
dec
mov
pop
cli
jl
xor
repz
js
test
xchg
dec
flds
cmp
pushf
fisubrs
rorb
and
jp
mov
jp
sbb
push
adc
push
push
lret
and
iret
pop
aam
inc
and
push
mov
mov
jmp
pop
adc
js
mov
pop
push
shlb
mov
cmpsb
je
push
push
xlat
mov
arpl
inc
and
ja
cwtl
cmp
cmp
dec
pop
mov
pop
aad
xchg
andb
sbb
pop
or
ds
xor
out
xor
div
popa
or
popl
mov
dec
test
mov
mov
ss
sti
loop
pop
pop
sbb
pop
scas
sbb
push
mov
movsb
test
mov
push
out
cmp
lret
xchg
pushf
lods
mov
in
mov
inc
mov
xchg
popf
push
popa
jecxz
push
imul
loop
into
mov
into
push
je
add
cmpl
sbb
mov
ret
dec
sbb
subl
inc
pushf
mov
imul
aam
and
arpl
movsb
fwait
dec
lahf
inc
aad
daa
inc
aaa
dec
std
scas
mov
js
push
push
aad
sub
dec
xor
inc
ds
xchg
jle
push
cld
aad
aad
or
mov
push
pop
stc
in
mov
cs
jo
shrb
ja
ret
cmpl
std
dec
outsl
pop
sbb
pop
shlb
rolb
adcl
pop
inc
sub
mov
adcb
dec
mov
popa
sbb
push
dec
push
arpl
sub
jp
and
jle
add
ds
aaa
cmpsl
xchg
xor
js
adc
sub
lret
jbe
mov
movsl
cmpsl
outsl
jb
cmp
test
cmp
imul
les
fmull
addr16
sbb
pop
sahf
mov
arpl
cmpsl
dec
test
cmp
sbb
mov
pop
mov
or
dec
xchg
mov
push
push
push
cmp
pop
push
push
ficoml
data16
stos
cmp
lcall
xchg
rcrb
mov
lods
fimuls
and
or
inc
jb
or
cmc
jmp
mov
aaa
sbb
loop
in
push
lea
mov
xchg
cmp
adc
pushf
popa
xlat
sbb
xchg
pop
dec
out
sub
mov
outsb
xchg
xor
dec
sar
sbb
pop
inc
sahf
push
xchg
mov
aam
ss
xchg
movsb
cmp
inc
push
pop
roll
and
nop
das
in
jge
mov
insb
jmp
cmp
fadds
sarl
mov
inc
pop
daa
xchg
sbb
xchg
rcll
cmp
ds
iret
mov
xor
dec
and
pop
mov
dec
push
pop
cmp
in
jl
out
imul
mov
xorl
aaa
sbb
push
xchg
xchg
ljmp
push
pop
aam
mov
sbb
in
test
pop
lds
sti
xchg
add
mov
popa
mov
mov
out
and
out
nop
movsl
xchg
pushf
adcb
mov
ficoml
in
push
mov
sbb
and
push
in
pop
inc
cli
ss
jns
jo
and
inc
pop
push
mov
mov
popa
adc
sbb
xchg
mov
pop
pop
pop
or
pop
rcr
fisttpl
dec
xchg
jb
call
aaa
jb
dec
jle
dec
adc
push
int3
fcoms
adc
shlb
ret
jnp
mov
xor
mov
pop
mov
lcall
push
lods
push
decl
push
mov
call
xchg
dec
push
xchg
cmp
xchg
cwtl
mov
dec
push
cmc
loope
lods
stos
cmpsb
repz
and
pop
and
cmp
mov
cld
push
xor
or
xor
pusha
cli
inc
push
sub
inc
mov
int3
xorl
js
push
xchg
mov
lds
add
push
nop
inc
push
or
jle
cltd
lret
in
jnp
mov
pusha
xor
sti
js
jge
mov
leave
mov
dec
ret
jo
inc
xchg
pushf
xchg
mov
dec
cmpsb
js
aad
lds
mov
cmpsb
cmc
xchg
push
jb
pop
stos
jne
addb
js
and
stos
inc
popf
dec
and
lahf
adc
rcrb
cmp
add
dec
or
loop
pushl
or
pop
jp
mov
and
outsb
aam
and
sahf
xchg
lds
push
inc
icebp
or
scas
movsl
ret
and
sbb
mov
inc
mov
pop
xor
fcoml
lock
loopne
fstl
push
pop
iret
test
mov
fmull
pop
sbb
cld
test
pop
cmpsl
int
push
lcall
and
test
movsb
lock
mov
jmp
cmpsl
sahf
jl
and
push
inc
pop
sub
push
icebp
jb
sbb
cmpsl
nop
and
cwtl
sbb
lods
ret
ret
xchg
imul
aas
call
inc
push
repnz
xor
bound
pop
inc
push
test
pop
or
lret
adc
sbbb
subb
cltd
inc
aam
sub
adc
nop
imul
mov
sub
push
ret
out
inc
xchg
xchg
and
and
out
fildl
push
dec
cwtl
cmp
inc
dec
insb
in
pop
xchg
pop
addr16
out
lds
pop
cs
inc
aam
add
pop
xor
jb
or
aaa
inc
dec
pop
cmpsb
push
and
push
jbe
sbbb
movntq
fiaddl
cmc
push
aaa
mov
pop
push
sti
fisttps
mov
mov
sbb
mov
mov
inc
cwtl
pushf
test
inc
push
push
mov
arpl
and
pop
aam
pop
sub
and
jl
mov
mov
lds
inc
mov
lcall
lret
cmp
dec
xchg
movsb
push
pop
in
and
cmp
mov
push
cmc
dec
movsb
xchg
ficoml
cmp
out
jno
ds
jecxz
imull
das
into
mov
inc
test
inc
scas
push
cmpsb
lret
nop
cmp
sahf
dec
sbb
inc
mulb
popa
mov
orl
add
movsl
pop
push
and
test
pop
mov
xor
push
orb
mov
adc
cmp
inc
pop
jl
mov
lret
lret
sbb
add
push
jp
inc
ljmp
nop
addb
ret
mov
icebp
nop
jbe
ficompl
mov
cmp
sbb
mov
dec
stos
orb
andb
sbb
mov
add
mov
lcall
xchg
xchg
movsb
addl
add
jg
inc
or
and
lret
and
shlb
xchg
add
mov
sbb
cld
dec
add
jo
mov
scas
pop
inc
mov
lret
movl
and
pop
add
add
adc
mov
out
mov
insl
push
fnstcw
cmpsl
push
jl
test
mov
ss
cmp
dec
sub
xor
loope
sub
dec
repnz
inc
mov
andb
mov
mov
lock
les
ret
in
jo
nop
mov
and
cmp
adc
xchg
enter
sti
lcall
loop
sub
jp
imul
imul
dec
fcoml
fidivrs
ja
xchg
arpl
mov
mov
or
inc
push
inc
jno
jne
jl
lret
in
pop
andb
adc
sbb
mov
dec
sbb
sbb
fwait
in
cmpsb
loop
adc
cmp
xchg
pop
and
test
and
ja
cli
sbb
stc
fsubl
js
push
inc
test
mov
imul
lahf
xchg
das
xor
xchg
xchg
cmp
aam
push
mov
in
int3
cltd
push
jecxz
mov
cmp
sahf
xchg
xor
dec
rorb
cmp
stos
js
mov
sahf
sub
ret
xchg
popa
movsb
xchg
cmpsl
mov
xlat
xchg
icebp
add
pop
bound
ror
mov
or
es
xchg
aas
std
cmp
popa
push
insb
in
push
dec
cmpsl
jb
cmp
ljmp
loopne
enter
stos
inc
clc
xchg
lods
ret
jmp
ss
mov
jbe
push
xlat
lret
loop
mov
cmpb
cmp
jb
sbbb
jl
fprem1
arpl
jmp
or
ret
cwtl
orb
jl
push
push
test
and
push
cmpsl
in
dec
inc
arpl
inc
push
pop
rcrl
and
mov
sub
xchg
inc
into
test
cltd
xchg
or
xchg
inc
sub
jge
push
push
jle
xchg
push
and
push
lods
push
stc
loope
push
pop
mov
ds
and
js
pop
or
fsubr
sti
jo
in
aam
jb
lahf
enter
mov
ret
mov
mov
mov
sahf
or
ljmp
cli
pushf
xchg
and
jmp
repnz
push
mov
jp
xchg
cmp
scas
dec
jg
ljmp
movsb
ljmp
xchg
jge
mov
mov
xchg
in
xchg
lea
dec
js
int
adc
inc
mov
dec
decl
fisubl
mov
js
sahf
fnstcw
out
nop
push
inc
add
ljmp
icebp
dec
in
fldenv
sub
sbb
push
sahf
sbb
aam
xor
jge
push
mov
negb
dec
pop
pop
xchg
js
cmp
arpl
sti
push
lret
std
jnp
push
or
aam
jbe
sti
mov
adc
jge
es
or
iret
mov
pop
cmp
cmpb
ret
ret
popa
inc
mov
mov
dec
out
inc
mov
in
decb
int3
jo
movsb
push
arpl
mov
pop
mov
gs
js
in
cwtl
jb
cmp
addb
sub
push
mov
and
push
mov
dec
add
enter
inc
in
xor
jg
push
test
out
mov
in
dec
adc
mov
sbb
mov
insl
mov
dec
mov
and
daa
int
push
test
xor
inc
mov
aaa
and
std
push
shl
lret
jo
jp
lock
xor
pop
adc
jb
mov
cwtl
push
adc
adc
mov
sub
testl
cmp
xor
mov
dec
icebp
in
pop
dec
stos
xlat
mov
lds
jle
push
push
add
loope
xor
sub
faddl
test
aam
sbb
and
push
dec
push
mov
push
and
xchg
inc
dec
js
in
ss
sbbb
inc
call
jns
mov
ror
sbb
addb
inc
cmp
push
jb
xchg
mov
mov
addr16
and
aad
xchg
inc
icebp
jmp
lret
push
xchg
lock
push
cli
jle
pusha
mov
movsb
int3
dec
xor
inc
cwtl
mov
fisubs
jnp
mov
add
sub
pop
add
adc
sub
xchg
push
in
pushf
xor
std
jl
adc
push
shrb
and
dec
jbe
cmpb
pop
and
mov
test
inc
inc
in
ljmp
and
lret
mov
mov
xor
lcall
push
cltd
adc
pushf
out
inc
push
movsb
push
add
cwtl
mov
fsubr
mov
mov
rorl
jl
push
or
jae
mov
ss
orb
imul
cmp
dec
cmp
shlb
outsb
inc
ret
negb
pop
adc
movl
xchg
int
and
daa
sbb
out
cwtl
pop
jb
push
mov
inc
dec
fstpt
jp
mov
jo
movsb
or
push
xchg
ljmp
popa
outsl
inc
push
fwait
pop
stos
xchg
arpl
xchg
sub
nop
adc
sbb
inc
pushf
adc
in
cltd
mov
mov
popl
adc
xchg
aad
jge
inc
adc
pop
leave
push
cmp
imulb
mov
xchg
xor
mov
xor
sbb
adc
out
jp
add
xor
and
inc
ljmp
adc
out
nop
xchg
pop
jo
fldcw
xchg
cmp
jmp
jb
xor
imul
imul
out
popa
sbb
sbb
xchg
out
fildll
paddsw
in
push
mov
lret
in
mov
imul
mov
out
imul
jnp
out
popa
addr16
push
in
push
popa
xchg
lock
imul
imul
popa
or
imul
les
in
adc
inc
imul
sub
or
adc
imul
push
ret
adc
push
and
sbb
xchg
mov
and
mov
into
cmp
jo
adc
push
adc
ds
push
add
dec
mov
test
ret
mov
xchg
xchg
cmp
nop
push
outsl
jg
data16
cmpsb
adc
mov
sahf
push
mov
or
dec
inc
sbb
shl
mov
or
ds
jns
jne
push
dec
rcll
or
mov
sahf
stos
mov
mov
push
xchg
and
adc
inc
xchg
xchg
inc
pop
popa
flds
fldt
xor
inc
mov
adc
jbe
inc
sub
mov
scas
inc
sub
mov
push
inc
sbb
jmp
lret
adc
push
out
and
jo
call
mov
mov
pop
sbb
adcl
sbbb
fidivrs
xchg
cs
jb
pop
mov
adc
and
js
pop
dec
and
cmc
repz
orb
xlat
iret
mov
mov
mov
lcall
dec
mov
or
cwtl
sub
jp
in
mov
ja
js
push
jl
dec
out
jne
push
push
ss
mov
jle
notl
mov
outsl
mov
outsb
cmp
jmp
cmp
xchg
jb
std
push
sub
hlt
push
pop
and
and
pop
inc
jo
cmp
mov
mov
mov
mov
scas
lcall
mov
dec
pop
and
sbb
test
sahf
les
loope
inc
inc
dec
mov
cmp
and
inc
cmpsb
lds
pop
mov
inc
adcl
aam
inc
movsl
mov
push
movsb
sbbb
push
dec
xchg
in
inc
sbb
dec
push
call
sbbb
sub
push
xor
int
mov
and
xchg
dec
or
jo
cmpsb
jmp
push
push
mov
xchg
and
mov
mul
lret
jle
es
inc
dec
jb
addb
inc
bound
mov
int3
int3
pop
movsb
call
cs
lahf
dec
aam
and
outsb
lcall
test
and
cltd
bound
cmpsl
inc
ss
inc
dec
mov
xchg
xchg
push
orb
nop
cwtl
sahf
jo
cmp
in
push
mov
lcall
push
int3
jb
cmpsl
inc
cmp
jo
push
jbe
jne
ljmp
inc
cmp
pop
or
arpl
insb
mov
mov
adc
and
int3
inc
push
cld
mov
inc
mov
movsl
and
arpl
inc
push
test
in
adcb
jb
xor
in
add
movsb
mov
mov
test
and
nop
push
mov
popa
dec
xor
sbb
out
ds
aaa
and
sbb
movsb
inc
nop
jb
dec
adc
xchg
jo
vrcpps
lds
dec
mov
aas
mov
movsl
push
add
pop
stos
in
dec
cmp
ss
clc
push
pop
inc
lret
popa
ljmp
pusha
sarb
cmp
pop
and
sub
and
mov
aam
xchg
push
arpl
inc
dec
push
outsl
and
gs
sbb
mov
sbb
xor
in
mov
in
pop
sahf
aad
ss
xchg
cli
imul
aad
xchg
dec
ds
fwait
xor
dec
and
ljmp
sub
push
xor
ja
je
push
sbb
pop
push
mov
mov
sbb
in
pop
in
fiaddl
mov
lods
cmpsb
dec
adc
xchg
pushf
and
jle
push
mov
rcrb
mov
pop
ret
nop
sub
xor
jp
cli
mov
mov
aam
adc
mov
jl
sbbb
loop
mov
in
push
pop
add
adcl
loop
pop
mov
nop
jp
mov
and
sub
clc
pop
xchg
inc
stos
push
lods
xorb
insb
cwtl
fldlg2
inc
inc
inc
bound
in
into
pop
cwtl
stc
popa
or
inc
ljmp
mov
jl
movsl
xchg
xor
jmp
pop
jb
movsb
dec
aas
push
mov
mov
fidivs
or
fwait
inc
ret
aas
jp
pop
inc
dec
cmp
lea
cwtl
jne
imul
loopne
ds
stos
push
in
xchg
sahf
rclb
push
cmpb
or
js
aad
dec
dec
aam
sbb
cmpsl
pop
inc
idivl
push
xchg
mov
cmp
testb
xor
je
cmpsb
ja
push
and
xchg
mov
push
cmp
push
pop
push
xor
sbb
ret
dec
xchg
and
mov
xchg
std
jp
mov
fiaddl
pop
fwait
rorb
push
xchg
loope
sbb
adc
and
cmp
push
pop
push
mov
arpl
adc
aam
js
lea
shrl
xchg
dec
lret
pop
iret
adcb
ja
lret
and
cmc
movsb
popa
shr
mov
pop
push
outsb
nop
stos
pop
sahf
mov
cmpb
test
movsb
push
push
jnp
arpl
cmp
mov
push
dec
push
cmp
lcall
xchg
out
jo
pop
jl
stos
push
fiadds
js
adc
test
push
mov
outsl
xchg
sbb
jae
call
int3
jb
push
jg
xchg
sbb
pop
xchg
xchg
ljmp
mov
mov
and
lods
cltd
insl
outsl
shl
and
mov
dec
ss
push
inc
push
adc
xor
imul
pop
jo
inc
pop
cwtl
pop
popa
jbe
xchg
jb
cmp
nop
xor
test
and
pop
sti
xlat
push
push
dec
jbe
int3
test
push
ljmp
rcrb
mov
push
sahf
inc
add
xor
sub
int3
divb
pop
mov
ds
lret
xchg
pop
mov
inc
mov
popa
sbb
inc
and
mov
mov
nop
out
dec
jp
sarb
mov
test
adc
out
add
test
push
pop
sbb
mov
sub
int3
test
ss
mov
pop
adc
cmc
sub
aam
or
iret
jo
enter
mov
mov
sahf
ds
mov
mov
pop
sbb
jbe
loop
mov
pop
xchg
pushf
xchg
cmp
push
adc
mov
jo
push
mov
add
jb
xor
fs
jne
dec
sbb
outsl
mov
push
pop
jp
shrb
arpl
out
pop
lods
fisubl
dec
es
nop
pop
sahf
xchg
mov
sbb
sub
in
jl
or
ds
fidivs
push
cmp
add
mov
arpl
ret
sbbb
jo
jle
push
mov
sahf
cwtl
daa
mov
xchg
inc
sub
or
rclw
leave
hlt
nop
lcall
ss
test
mov
cmc
jnp
cli
push
add
dec
cli
js
jns
sahf
and
dec
xchg
or
pop
in
xchg
xchg
and
xchg
pop
mov
mov
xchg
out
nop
aam
mov
insl
xchg
dec
movsb
add
cs
inc
jno
dec
xor
push
test
sbb
jbe
jp
mov
scas
inc
in
pop
nop
push
inc
push
inc
pushf
mov
push
mov
lcall
mov
dec
jle
or
push
in
mov
in
insl
mov
mov
imul
pop
jbe
sahf
pop
pop
data16
test
stos
jo
insb
cmpsl
cli
push
push
cmp
jb
xchg
lcall
xor
das
push
inc
or
stos
sub
outsb
aam
jl
dec
or
inc
rcr
ror
pop
notl
jo
ror
dec
jo
aaa
sahf
push
rclb
push
xorb
mov
jb
xchg
lods
xchg
lds
dec
xor
xchg
mov
adc
js
jb
sbb
mov
sub
lods
push
sahf
dec
and
in
mov
push
push
ja
cmp
mov
clc
inc
push
xchg
jp
inc
es
movsb
sbb
jg
push
sub
mov
jp
inc
pop
xor
into
pop
mov
add
inc
push
adcb
cwtl
xchg
aad
add
sbb
inc
jp
mov
sahf
mov
xor
xchg
jle
and
jl
jnp
jbe
mov
inc
push
pop
test
lods
inc
jae
push
aam
sbb
pushf
iret
add
shlw
imul
sbbb
cwtl
jp
mov
and
push
test
cmp
cmp
and
adc
mov
cmpsl
pop
cmp
test
mov
adcb
jb
inc
cmp
mov
dec
and
pop
mov
aas
lcall
and
xchg
outsb
jl
push
or
xchg
jae
mov
lcall
xor
pop
sbb
cmp
popa
cmp
mov
push
sbbl
and
xchg
or
dec
xchg
mov
shrl
in
push
stos
fisubs
mov
xor
pushf
push
aad
mov
mov
cwtl
js
jle
loop
mov
int3
and
adcl
fiaddl
dec
in
movsl
jmp
push
movsb
sbb
xor
into
adc
jl
mov
mov
scas
mov
xchg
push
jbe
popa
iret
call
shll
outsb
lcall
push
and
xor
mov
sub
pop
sahf
adc
cmp
ss
ljmp
xor
scas
add
sbb
imul
andb
ljmp
and
leave
or
mov
push
movsb
movsb
mov
or
push
sahf
dec
int3
dec
pushf
and
and
pusha
fs
fadds
ja
sahf
mov
jo
mov
jge
push
xor
push
test
pop
dec
sub
shlb
movsb
jle
cmpsl
pop
sbb
inc
pushf
lds
push
sbb
add
dec
aas
out
sbbb
push
jge
pop
and
aam
movsb
xchg
sbb
xorl
jp
push
inc
lret
fstpl
addl
iret
fbld
inc
mov
repnz
jbe
xchg
gs
mov
jp
fcomp
subb
icebp
rcrb
ret
push
imul
mov
cmpb
bnd
xchg
sub
mov
cmc
mov
jb
incb
sbb
xchg
push
ds
pushf
push
inc
dec
mov
or
pop
add
leave
or
lods
sub
mov
inc
in
sub
pop
jno
inc
mov
mov
inc
rolb
aas
xchg
test
cltd
mov
popa
add
jp
pop
mov
iret
andb
test
sbb
cmpsl
out
mov
and
dec
cmp
aam
xchg
ret
add
xchg
xchg
inc
imul
adc
dec
inc
jle
push
xchg
test
gs
stos
xor
pop
xor
fwait
ss
test
cli
push
sub
popf
divb
inc
xchg
dec
inc
pushf
pop
pushf
jl
dec
sahf
movsb
dec
dec
sbb
xor
xchg
outsb
cltd
mov
aaa
mov
imul
jno
loope
xchg
mov
popa
sub
test
in
dec
or
sbb
dec
je
dec
mov
pop
push
xor
inc
xchg
inc
xor
or
xor
loop
nop
mov
mov
jbe
xor
cmp
sbb
inc
popa
test
push
fwait
mov
fcompl
xchg
xchg
ret
repz
insb
jno
xor
insb
lret
lar
pop
jb
adc
cli
cmp
sbb
dec
aas
jnp
mov
aas
push
sub
popa
jmp
cmp
pusha
lods
xchg
sahf
jbe
ss
nop
push
dec
das
ficoml
in
shl
pop
iret
cmpsb
cltd
inc
xor
cli
mov
shlb
inc
xchg
mov
push
mov
mov
mov
nop
jl
dec
push
imul
inc
popa
les
push
xchg
add
dec
inc
jp
mov
movsb
xor
dec
push
insl
fimuls
push
jl
cmp
ret
jge
push
inc
shlw
push
nop
push
cs
adc
mov
xor
sbb
mov
js
xchg
gs
cmp
xorb
mov
inc
aad
add
cmpsl
pop
pop
sbb
jp
xchg
adcb
lea
aad
lds
ficomps
mov
and
sub
sbb
cmovb
rorl
movsb
push
xchg
cmp
and
push
test
icebp
lcall
mov
sbb
and
mov
mov
jo
jns
add
push
mov
xchg
pop
cmpb
push
cmp
jb
mov
inc
pop
lods
out
imul
mov
dec
pop
dec
xchg
loop
shll
ds
cmp
push
cmp
jle
jbe
sahf
insl
inc
dec
jge
aaa
subl
std
jl
int3
mov
rcrl
cld
jns
sub
lret
dec
inc
and
mov
dec
sbb
push
inc
ss
lds
cli
and
in
ficoml
mov
push
pop
test
bound
ljmp
pop
push
pushf
dec
movsb
dec
rclb
test
mov
mov
push
popf
ljmp
adcb
adc
arpl
adcb
xor
sbb
dec
inc
push
sahf
shlb
pop
lret
xchg
fisubs
push
pop
nop
in
test
push
fiaddl
imul
or
lock
xchg
andl
arpl
sbb
cmpl
xchg
js
ds
push
cld
or
xchg
dec
push
push
xor
mov
and
and
lcall
cmpsb
sbb
mov
cmp
sub
clc
aam
push
push
aad
in
push
and
push
cmp
and
push
push
push
dec
pop
ljmp
mov
iret
or
in
jg
mov
mov
das
pop
pop
mov
xor
adc
push
push
leave
xchg
and
test
cmp
push
aad
push
lcall
xchg
sbbl
add
inc
push
cmc
push
rclb
pop
and
sahf
inc
cmp
mov
cmp
mov
call
cmpl
cmp
jle
lcall
pop
mov
and
jg
and
aaa
pusha
jl
test
xor
xchg
stos
add
jbe
cmpsb
push
xchg
lods
popa
inc
cmp
inc
outsb
adc
test
or
sbb
jo
mov
in
lcall
cmp
push
mov
jo
push
pop
ret
gs
add
mov
xchg
lods
daa
dec
movsb
or
lahf
popa
cmpsb
sarl
push
and
fnstsw
add
mov
mov
pop
lea
jbe
stos
pushl
inc
jo
ljmp
in
inc
test
nop
imul
lret
int3
in
adc
ret
xor
sub
push
lahf
movsb
push
lcall
xchg
out
sbb
xorb
sbb
fidivs
nop
subl
mov
adc
pop
push
inc
dec
inc
push
lret
jns
inc
lds
xor
lret
lods
push
mov
push
mov
adc
xchg
cmp
in
rol
mov
ds
mov
or
mov
pushf
mov
jb
mov
push
orb
pushf
mov
dec
push
lds
push
mov
and
enter
scas
arpl
cwtl
test
pop
and
repz
mov
mov
lcall
testb
jnp
pop
andl
mov
lds
mov
dec
test
push
push
push
js
lods
fidivs
mov
cmp
mov
jp
in
inc
imul
xchg
dec
loope
push
adc
je
ret
dec
sbb
push
add
in
cmp
inc
loope
xor
xchg
cs
push
imul
adc
jb
mov
jp
mov
arpl
es
cwtl
ss
xchg
test
jns
inc
pop
jg
push
ret
inc
sar
lods
sbb
pushf
push
pop
inc
pop
test
xlat
cmp
addb
sti
add
adcb
cs
push
mov
mov
jge
add
mov
push
or
cmp
dec
lcall
lcall
mov
addr16
fs
nopl
lret
xchg
inc
sbb
outsb
pop
xor
arpl
pop
mov
cmpsl
push
sbb
sbb
push
fidivs
mov
dec
push
movsb
and
test
lahf
jne
fstp
push
mov
fidivrl
cmpsb
inc
and
xchg
push
andb
lds
lahf
sub
aad
lds
add
inc
xchg
ss
dec
xchg
mov
mov
cwtl
movsl
inc
pop
pop
xchg
xor
mov
inc
mov
cmp
lret
jl
adc
dec
xchg
shl
sbb
movsb
orb
nop
or
xchg
scas
jmp
mov
data16
jge
mov
mov
push
pop
sahf
test
and
out
push
lods
mov
xchg
push
mov
inc
jb
cmp
test
jl
mov
push
push
and
ljmp
ja
ss
decb
ss
xchg
das
cli
sbb
in
mov
jbe
in
sar
push
out
mov
sub
pop
dec
and
add
xchg
cs
cmp
mov
jo
mov
add
push
cli
mov
push
push
xor
push
push
test
fiaddl
and
inc
in
mov
sahf
insb
xlat
and
movsb
cmp
cmc
cld
xchg
mov
push
lret
das
aas
dec
sbb
push
inc
movsb
add
jmp
test
pop
ret
or
rcrl
cmp
popa
scas
popa
rolb
inc
pop
cmpsl
cmp
push
jb
sbbb
rolb
hlt
cmp
mov
cmp
xor
js
xor
mov
inc
push
mov
jns
lods
cwtl
mov
or
jl
mov
nop
xchg
mov
ss
mov
ds
pop
enter
cmp
test
or
xchg
mov
mov
cmpb
jp
js
ss
mov
test
gs
dec
mov
inc
into
push
mov
pop
ljmp
testl
lods
mov
xor
sbbl
sbb
jne
pop
mov
gs
lcall
xchg
mov
pop
inc
pop
xchg
dec
and
test
xor
xchg
sbb
inc
xrelease
inc
push
lea
or
and
dec
popa
ss
mov
push
dec
mov
jl
jo
lret
dec
rcrb
out
push
sbb
iret
sbb
js
add
out
mov
cmp
mov
pop
xchg
sbb
scas
inc
lock
mov
sahf
pop
adc
push
test
pop
stos
add
test
lcall
js
ds
and
inc
jge
test
mov
mov
in
cmp
cmp
adc
cmp
push
fildl
cmp
cwtl
mov
pop
pop
pop
fdivl
mov
fidivl
jp
mov
xor
sub
or
popa
cmp
movsb
inc
mov
xor
jno
dec
push
fisubrl
dec
pop
xor
pushl
sbb
test
in
mov
add
jbe
cmpsb
cmp
inc
mov
aad
stos
and
inc
mov
dec
jbe
in
pop
push
push
xchg
inc
fstps
ljmp
cwtl
addb
arpl
jecxz
pop
fcompp
and
rcrb
mov
adc
xchg
jnp
add
test
or
push
sahf
dec
pop
xchg
mov
inc
cmc
mov
xchg
sarb
mov
and
cmpsl
popa
sbb
inc
mov
add
and
push
insb
jbe
cmp
mov
sbb
ret
test
pop
xchg
and
popa
inc
jl
nop
jle
stc
pop
loop
test
push
lret
cmc
outsb
pop
mov
movsb
data16
sahf
or
js
hlt
push
int
out
test
jne
mov
scas
aad
xchg
cmp
pop
xlat
cmpsb
xor
stos
push
mov
mov
test
fisubs
popa
or
loop
lock
mov
jo
inc
or
aam
sbb
rcll
out
add
test
xchg
inc
jno
xchg
cmp
ror
sahf
dec
push
and
mov
lret
lcall
incb
dec
cmp
pop
jnp
push
cmp
ss
js
mov
xchg
sub
iret
ds
mov
adc
cmpsb
pop
inc
inc
dec
mov
lret
push
sbbb
mov
out
lret
pop
ret
mov
pop
push
pop
add
or
and
push
faddl
out
mov
cli
mov
xchg
cmp
sbb
jo
inc
push
pop
mulb
sub
xchg
push
push
mov
dec
sbb
and
arpl
inc
hlt
dec
push
pop
xchg
aad
lds
andb
xchg
into
pop
inc
test
rolb
dec
and
push
mov
sub
cmp
inc
js
inc
jb
cmp
scas
cmpsl
xchg
cmpb
xchg
mov
in
adc
mov
pop
dec
jge
inc
or
inc
push
push
aam
jp
or
and
mov
mov
push
mov
adc
xchg
dec
mov
inc
andl
or
jmp
sbb
pop
xor
push
adc
shrl
nop
pushf
xchg
adcb
jecxz
push
cwtl
inc
push
sub
nop
mov
mov
jmp
scas
jle
and
xchg
adc
fnstcw
inc
mov
ss
scas
mov
xchg
pop
push
mov
imul
inc
int
movsl
cmc
jp
pushf
fcoml
jo
mov
dec
xor
imul
and
jo
scas
test
mov
mov
cmc
scas
jnp
cmpsl
cwtl
xchg
inc
sahf
and
je
pop
ds
pop
jb
andb
mov
sbb
rcrl
jle
mov
xchg
imul
cmp
cmp
or
pop
pop
fiaddl
inc
in
gs
scas
mov
dec
mov
js
ja
xchg
mov
xchg
lea
fstl
jbe
xor
pop
test
ds
inc
cwtl
cltd
xor
push
loope
pop
cmp
cmpsl
out
ss
dec
cmp
cmpl
inc
out
enter
fisubl
inc
in
test
xchg
outsl
jno
dec
jl
negb
pop
mov
mov
adc
cwtl
mov
pop
cmpsl
dec
adcb
insb
cmpsb
xor
pop
and
push
pop
or
mov
mov
in
xchg
mov
fiadds
jbe
mov
out
jb
mov
sbb
jns
push
mov
mov
inc
mov
pop
cmpsb
sahf
sbb
jo
dec
dec
pop
push
ja
test
push
xor
xchg
mov
inc
cmpsl
out
mov
lea
push
dec
xor
cmpb
xchg
shr
cli
test
cltd
cmp
push
xor
mov
ss
fwait
stos
jle
inc
push
mov
dec
or
mov
fwait
in
jp
inc
mov
dec
ds
sbb
divb
int
inc
jb
shlb
xchg
and
or
mov
xchg
sbb
mov
out
ret
xor
movsb
aas
jbe
push
mov
adc
push
mov
cmp
andl
adc
adc
test
xor
mov
inc
jg
aad
je
xor
sub
cs
push
mov
sbb
lds
pop
jl
jle
addr16
cmp
adc
sub
xchg
imul
into
cmp
dec
mov
ss
js
adc
push
pop
xchg
test
inc
and
sub
jbe
pushf
leave
sbbb
push
imul
push
cmp
das
xchg
and
mov
loope
xor
movsl
pop
inc
insl
cld
mov
mov
pop
sahf
mov
jl
jb
sbb
fstpt
nop
into
iret
movsb
push
aad
xor
adc
xchg
xchg
in
xchg
inc
clc
or
stos
ds
loop
push
scas
shl
xchg
std
add
jnp
adc
les
mov
sbb
iret
push
mov
fisttps
cmpsb
fbstp
aam
sbb
dec
aad
in
mov
ss
dec
adc
mov
cs
sti
and
pop
xchg
out
cwtl
sbb
mov
test
mov
ja
mov
sti
cmp
sbb
add
cmp
data16
sub
dec
pop
fstps
pop
cmc
cmp
or
adc
mov
roll
jo
out
lods
arpl
lea
push
mov
inc
ror
test
or
and
add
sti
mov
clc
cs
outsb
xchg
lods
lcall
adc
shlb
pop
aad
clc
inc
push
outsl
xchg
arpl
adc
xor
sbb
cli
mov
push
push
clc
fcompl
ja
mov
int3
jo
dec
cwtl
fsubrl
in
fdivl
adc
pop
inc
rcl
nop
insl
shll
pop
push
and
xchg
mov
jo
cltd
pop
mov
and
imul
xchg
add
cmp
dec
cwtl
lahf
mov
pop
inc
push
adc
loopne
pop
in
inc
xor
pop
popa
mov
ds
cs
jo
jmp
ja
mov
push
dec
stos
and
rcll
sbb
and
nop
mov
cmpsl
ljmp
push
mov
sbb
jo
lahf
dec
cwtl
xchg
or
mov
dec
pushf
and
xchg
pop
xchg
aad
xor
inc
xor
incb
scas
sahf
mov
sarl
lods
bound
mov
and
push
inc
mov
in
pop
mov
xor
inc
cmpsb
jmp
dec
lds
lahf
or
or
ljmp
dec
movsb
add
sbb
xchg
sub
scas
xchg
jo
popa
test
fwait
inc
xlat
xchg
repz
dec
xchg
fistpll
in
mov
xor
and
data16
mov
mov
xchg
fwait
imul
inc
nop
push
push
ss
mulb
lds
subl
jp
push
ljmp
inc
mov
add
or
cs
jo
fwait
or
push
jg
mov
jecxz
loop
nop
mov
pop
jle
fistl
xor
cwtl
ret
lcall
jp
ja
mov
fbstp
popa
xchg
andnps
iret
dec
mov
mov
xor
inc
push
inc
jecxz
rcrb
and
pop
cmp
mov
bound
push
dec
add
cld
inc
inc
add
sbb
ss
mov
orb
xchg
jle
push
mov
add
inc
push
add
xchg
push
and
inc
shr
fdivrl
in
xchg
dec
push
test
call
sbbl
mov
mov
inc
mov
imul
lcall
aam
push
int3
or
inc
jo
xchg
inc
sub
lods
mov
adc
pop
in
lcall
cmp
sub
or
jmp
push
shlb
or
push
jle
in
xchg
mov
xchg
arpl
mov
test
xchg
xchg
ds
mov
es
inc
sbb
ss
mov
ja
cmp
xorb
test
push
loop
cld
push
sbb
dec
or
adc
push
and
xchg
cmp
js
mov
gs
cmp
jg
jnp
xor
cmp
push
mov
mov
lret
or
xor
push
dec
cmp
pop
int3
add
loop
gs
sub
mov
mov
cmp
outsb
ret
push
movsb
push
es
inc
jb
xchg
addb
lret
icebp
push
and
out
andb
lds
mov
mov
pop
push
add
fcompl
sub
repnz
cmp
mov
mov
js
jbe
mov
sbb
mov
mov
adc
fnstenv
mov
pop
push
jo
cwtl
ss
aaa
mov
ds
push
inc
inc
inc
push
mov
or
xchg
js
jb
ret
popa
loop
pop
mov
and
inc
adc
push
mov
jbe
in
mov
ja
cmp
js,pt
gs
and
pop
rolb
pop
adc
dec
jnp
xchg
sbb
insl
pop
or
or
dec
cwtl
push
jb
dec
in
ficoms
xchg
test
sub
pusha
ret
outsl
push
inc
jb
fimull
jo
mov
mov
adc
dec
movsb
mov
xchg
ss
mov
push
ret
adc
mov
loop
call
test
in
mov
movsl
out
push
adc
lcall
popa
push
in
mov
pop
scas
dec
dec
sarl
cmp
inc
add
cmp
out
and
sbb
fwait
inc
icebp
aas
mov
dec
in
jbe
dec
arpl
jp
jne
int3
inc
jge
cmp
push
adc
js
bound
movsb
test
ret
jbe,pt
test
imul
test
add
and
fmull
loop
mov
mov
cmp
mov
mov
aam
mov
andb
aad
push
sbb
xchg
xchg
pop
es
sbb
pop
push
push
sub
and
jo
mov
addr16
or
or
cmp
pop
aas
lds
inc
lods
andb
mov
out
xchg
ss
nop
imul
and
xchg
das
scas
and
xchg
xchg
inc
xor
inc
dec
scas
pop
daa
mov
notb
mov
mov
in
cmp
out
mov
rcll
mov
xchg
popa
arpl
int3
xchg
in
jl
xchg
mov
xchg
nop
xchg
pop
stos
ljmp
pop
dec
aam
and
nop
sbb
int3
cs
movsb
lds
jb
xlat
inc
dec
loop
xchg
cmp
pop
dec
mov
aam
mov
js
outsl
mov
xor
cmp
fnclex
pop
ret
pushf
movsb
dec
popa
test
insb
pop
jbe
inc
xor
int
inc
inc
jo
or
mov
pop
sbb
pop
stos
pop
icebp
and
imul
jae
in
in
shl
cwtl
int3
or
push
inc
xchg
push
popf
lods
inc
out
out
pop
mov
adc
mov
dec
dec
inc
add
or
ret
movsb
xor
mov
push
ss
imul
lret
and
mov
xlat
int3
and
rorb
ss
and
mov
andb
adc
inc
ja
int3
push
cmp
xchg
adcl
sahf
dec
shlb
ds
shll
and
push
and
xchg
xorl
pop
xchg
push
aas
cmp
mov
mov
popa
gs
xchg
sahf
fdivrl
sbb
adc
inc
cmp
cmp
lds
add
xchg
roll
cwtl
sahf
cltd
call
jle
mov
ss
and
or
adc
pushf
mov
xchg
adc
aam
and
sbb
xor
inc
inc
push
jl
push
rolb
jbe
or
ret
ret
sbb
sbb
and
sbb
adcb
and
push
pop
xchg
fcmovne
aas
sub
lahf
sbb
cmpsl
iret
lods
push
shrl
xor
les
outsl
fiadds
pop
scas
cs
je
cmp
push
call
xor
inc
shlb
jl
ds
xor
cmp
cwtl
pop
mov
js
xchg
mov
cmpsb
scas
inc
mov
adc
adc
pop
sub
arpl
lret
xchg
notb
insb
or
pop
adc
data16
data16
negb
bound
sbb
cmc
and
lds
pushf
xchg
js
cwtl
ja
inc
bound
push
mov
xchg
sub
mov
test
inc
jle
clc
aad
push
cmp
sbb
pop
push
insb
iret
xor
sub
cmpb
mov
mov
adc
mov
cmp
ss
lret
jb
sub
lea
adc
xlat
xchg
push
mov
loop
in
xchg
iret
push
and
jge
pusha
lcall
dec
and
pop
mov
jle
xor
adc
jae
sub
lret
or
pop
mov
sbb
and
leave
xor
mov
and
push
pushf
mov
ret
mov
arpl
mov
inc
push
xor
sub
rol
aas
push
lcall
pop
and
jns
push
mov
and
cmpsb
outsl
mov
push
fstpt
lds
xorb
sahf
dec
add
test
jl
sbb
test
adc
dec
cmp
jnp
ss
rcr
jo
ret
lds
pushf
push
es
nop
dec
mov
inc
shll
adc
or
into
aam
dec
shrl
add
jo
roll
aaa
push
push
sahf
mov
lods
shlb
in
ja
mov
sbb
aam
jmp
push
and
lea
int
cwtl
or
xchg
push
sahf
ret
adcl
push
lcall
out
cwtl
outsb
dec
sets
push
inc
or
insb
mov
or
inc
lds
sbb
aas
sbb
or
mov
push
dec
xchg
add
cmpl
xor
nop
jle
and
les
jmp
inc
mov
cltd
mulb
fcmovne
in
in
inc
xchg
and
mov
lds
inc
mov
popa
ficoml
xorb
int3
roll
in
leave
sbb
cmp
pushf
jp
push
jno
inc
lods
add
imul
mov
xchg
lcall
push
sahf
aad
in
and
divb
push
push
stos
cmpsl
jo
dec
push
cmp
js
movsb
xchg
mov
arpl
out
aad
dec
subb
mov
sbb
jbe
inc
rcll
jo
or
and
push
addb
fidivrl
lcall
inc
cmp
jp
push
hlt
cmp
xchg
inc
orb
subb
mov
dec
mov
vmovntdq
dec
sub
popf
cmp
and
mov
retw
pushf
outsb
mov
cmpb
cmp
ret
dec
push
mov
and
cmpb
dec
inc
dec
dec
pop
shll
test
jo
xchg
inc
jne
stos
nop
mov
lcall
adc
pop
adc
adc
dec
dec
in
pop
xor
cmp
jns
xchg
pushf
popa
gs
push
scas
pop
aad
mov
adcb
lock
xor
and
nop
stos
adcl
mov
mov
dec
or
push
inc
cltd
mov
jge
pop
push
popa
inc
fwait
out
addb
xchg
sbb
inc
pop
mov
push
mov
aaa
push
cmpsb
mov
dec
insb
fidivrs
mov
jb
cmp
jp
dec
mov
mov
loop
xchg
mov
mov
test
dec
ret
jge
fs
cmc
cmp
xchg
daa
jge
ss
xor
pop
xchg
loop
cmpsl
mov
nop
ss
lcall
shlb
pushf
aam
cmpl
inc
mov
cli
mov
jo
iret
jp
mov
aas
ficomps
clc
pop
pop
mov
xchg
sahf
iret
adcb
mov
mov
sub
into
mov
sbb
pushf
sub
xor
lods
cmpsl
push
pushf
inc
sbb
outsb
pop
push
ss
pop
in
push
and
adc
dec
adc
and
cwtl
jp
inc
jb
arpl
mov
popa
inc
mov
movsl
lret
in
cmp
mov
rcl
adc
sbb
mov
pop
sub
ds
lds
inc
pushl
jle
aad
ret
andb
or
xor
minps
pop
jge
xlat
cmp
dec
imul
arpl
jle
xchg
cmp
lahf
cs
xor
xchg
mov
inc
dec
dec
adcb
xor
push
jle
xchg
stos
incl
ds
push
adc
mov
jmp
inc
mov
pop
xlat
les
push
lods
fisubrl
es
cmp
adc
mov
adc
sbbb
imul
dec
jo
jle
xor
repnz
pop
addl
mov
inc
mov
jne
aam
xlat
iret
inc
lret
cmp
out
xor
inc
push
dec
mov
push
rcrb
mov
inc
mov
cmpsl
call
or
add
pushf
cwtl
scas
cmp
movsb
push
jb
xchg
jle
sub
sub
mov
and
mov
lret
mov
adc
xlat
pusha
cmc
mov
lds
arpl
jo
jo
cmp
xchg
cmp
lret
leave
and
mov
into
or
push
leave
cmp
xor
mov
insb
lret
dec
mov
pop
aaa
in
adc
lcall
jp
adc
adc
ret
sbbb
outsl
and
and
cmp
add
ret
out
mov
dec
mov
adc
sub
mov
dec
and
jo
outsl
loop
loop
sub
jmp
dec
test
in
jno
cmpsb
jg
mov
push
xor
sahf
call
xchg
jbe
ret
imul
call
ret
mov
cmp
shl
test
shrl
mov
pop
xchg
xchg
cmp
cmp
sbb
xlat
inc
or
jp
add
js
cwtl
jge
inc
and
jae
lret
jge
ficompl
mov
inc
inc
xor
pushf
sub
push
dec
cmpsb
or
popa
mov
pop
sbb
adcb
or
lods
pop
in
pop
jb
push
mov
lods
adcb
add
cmpsl
mov
dec
sahf
and
jbe
inc
push
loope
loope
push
shrl
add
lods
roll
pop
mov
push
mov
xchg
add
mov
shlb
mov
jb
inc
xchg
sbb
arpl
mov
movsb
fst
xchg
cmp
and
xor
xchg
pop
mov
sbb
xchg
ret
lret
sbb
mov
stos
out
jle
inc
or
movsb
rcrl
inc
mov
push
mov
in
sub
outsb
mov
dec
sahf
mov
shlb
mov
clc
addr16
stos
or
inc
test
rorb
rcrl
push
mov
lods
bound
sbb
dec
push
nop
inc
push
cli
dec
push
bound
test
and
and
ljmp
push
adc
aas
xor
cli
pop
popa
mov
jb
sub
jb
mov
add
enter
adc
jb
cli
clc
sub
xlat
push
pop
or
or
mov
or
cmp
lcall
mov
test
lds
push
iret
jne
mov
lods
ret
and
xchg
and
dec
movsb
mov
out
pop
mov
and
arpl
nop
or
cmpl
andl
lea
dec
add
push
and
pop
sahf
pushf
push
or
cmp
push
sbb
sbb
xchg
ss
cmp
lcall
add
mov
popl
shlb
jbe
push
push
push
mov
pop
andb
push
scas
cmp
idivb
dec
jb
jns
addb
sub
adc
lcall
pushf
jge
mov
mov
mov
out
add
mov
stos
jecxz
xchg
mov
mov
mov
push
test
dec
loopne
and
in
fstpl
fmull
mov
andb
sarb
mov
imul
mov
cmp
push
shrb
out
scas
mov
xchg
sbb
push
arpl
aas
sbb
inc
imul
adc
rcrl
cmp
jp
orl
inc
xor
xor
jp
add
jbe
mov
xchg
mov
and
sbb
in
xor
mov
aam
cmp
fisubl
loope
sbb
pop
mov
mov
and
inc
push
sub
jbe
dec
in
cmc
pusha
notb
loope
push
ret
mov
mov
mov
jnp
lret
movsb
fisubrs
lcall
xchg
dec
bound
rcrb
xchg
cmpsb
inc
pop
dec
xchg
pop
xchg
scas
lcall
xchg
sub
xchg
dec
mov
ret
pushw
inc
ljmp
mov
and
pushf
xorl
mov
sahf
inc
sub
inc
clc
xor
nop
sbb
scas
cmp
push
ss
add
mov
arpl
in
and
pushf
mov
jbe
in
push
mov
cmp
lock
bound
adc
adc
lret
test
leave
rcll
push
data16
push
cs
mov
inc
jmp
inc
scas
lds
lods
in
push
inc
jl
xchg
sbb
cmp
jne
pop
aad
jbe
adc
ljmp
add
inc
rcrl
arpl
push
push
jnp
xchg
dec
dec
cwtl
lret
and
sub
js
sbbl
cmp
mov
rclb
cltd
xchg
xchg
adcb
mov
and
out
repnz
mov
push
jle
outsb
clc
test
pop
cmpsb
loop
cmpb
mov
and
ficoml
movb
adcb
cld
mov
sub
mov
out
out
decl
push
sub
in
pop
cmp
xchg
xchg
lahf
inc
mov
mov
or
xchg
mov
inc
pop
xor
push
cmp
frstor
add
cmp
nop
and
or
push
notl
push
xchg
mov
dec
mov
push
and
pop
shl
ret
jle
pop
shll
ss
faddl
pop
ficoms
sti
enter
in
push
sub
inc
js
inc
cmp
icebp
aas
test
mov
xchg
xor
sbb
rclb
inc
adc
cs
sbb
inc
cwtl
sbb
cmovnp
es
push
sub
in
fidivrs
xor
jle
dec
mov
sbb
es
jl
cli
dec
pop
pop
push
ret
and
lret
mov
dec
xchg
and
lret
testl
mov
mov
mov
std
cmp
inc
scas
sbb
inc
pop
daa
sub
push
mov
push
dec
inc
fildl
mov
jne
aaa
jo
pop
lcall
arpl
pop
add
inc
sub
lcall
in
adc
mov
cmp
xchg
jo
lods
push
push
xor
jp
in
and
sub
jb
pop
pushf
cwtl
jg
in
ds
orb
xorl
mov
sbbb
sub
out
into
sbb
jl
xchg
mov
and
sahf
arpl
push
inc
mov
adc
push
loop
jb
in
fcmovbe
ss
jbe
push
xchg
inc
pusha
cmpsb
rorl
cmp
inc
xchg
cmpsb
inc
mov
inc
mov
sti
cli
ds
cli
or
push
testb
inc
cmc
push
mov
adc
fs
xchg
mov
pop
ss
inc
xchg
pop
nop
movsb
addl
cwtl
int3
xchg
test
mov
mov
cmp
cmp
loop
mov
inc
mov
testb
lahf
int
cmp
push
or
or
pop
add
movsl
ljmp
sbb
rcrl
inc
cwtl
xchg
cmc
aaa
fs
push
dec
inc
mov
jb
push
dec
lahf
and
xchg
xorb
sarl
push
push
out
xor
adc
inc
rcrb
leave
sbb
mov
dec
cwtl
movsb
aad
ret
lret
push
cmp
sub
lcall
aas
mov
pop
ljmp
fcoml
ret
mov
xchg
inc
test
and
adc
xchg
cmpsb
add
in
js
in
xchg
xor
lret
cmp
jo
mov
in
dec
dec
push
dec
xchg
push
fnstsw
cmc
cmp
dec
aad
je
inc
inc
xchg
and
xor
xchg
jl
sbb
adc
push
cmc
loopne
pop
mov
nop
out
push
ja
cwtl
and
sub
loop
push
inc
mov
mov
inc
push
ficoml
lds
push
and
xchg
fstpt
lret
cmpsb
push
xchg
xchg
mov
jo
pop
push
mov
jo
dec
in
xor
ljmp
push
xor
jp
and
add
add
xchg
inc
dec
sahf
mov
and
lcall
daa
and
jae,pt
outsl
adc
cmp
pop
sbb
nop
mov
mov
fcompl
mov
hlt
push
inc
mov
xchg
xchg
xchg
and
sbb
imul
inc
sahf
jl
pop
mov
cwtl
clc
movsb
dec
jge
jecxz
bound
outsl
fcompl
test
imul
jo
cmp
and
outsb
xor
testb
xchg
xchg
lahf
xchg
xchg
push
pop
int3
mov
test
push
popa
scas
pop
incb
push
test
jbe
cmp
pop
xchg
aad
pop
stos
mov
and
xor
loope
les
xchg
js
jo
out
lret
push
lret
test
xchg
inc
mov
push
or
cs
stos
into
lock
push
jmp
das
xor
stos
mov
shll
add
adc
vmovaps
push
dec
push
pop
arpl
ss
cwtl
inc
jbe
shll
jbe
push
and
test
in
and
dec
xor
aad
arpl
xor
or
adc
fiaddl
mov
incb
and
mov
push
sub
inc
ret
cmp
pop
shl
in
mov
jbe
popa
jp
mov
push
adc
cltd
rolb
and
not
cmpsl
xchg
push
jbe
dec
jb
lods
ja
sbb
mov
sbbb
cmpsl
inc
inc
push
cmp
inc
nop
jle
sarb
pop
xchg
scas
mov
repnz
xchg
mov
dec
xchg
pop
fcompl
push
mov
lahf
pop
jnp
mov
push
frstor
int3
or
js
cmpb
imul
push
mov
and
sub
add
es
jg
mov
mov
push
loop
add
jge
xchg
pop
mov
add
int
xchg
push
jge
push
inc
incb
dec
jl
push
pop
cmp
aam
popa
subb
ja
add
rorb
mov
ss
mov
imul
push
mov
fistps
in
sbb
cwtl
or
jp
jnp
push
mov
xchg
pop
arpl
in
loop
out
lea
das
loop
mov
inc
sub
int3
sahf
cmp
add
sbb
imul
cmp
fldt
pop
popa
scas
ret
mov
vrcpss
mov
mov
sarb
std
mov
xor
movsb
dec
pop
cli
jbe
inc
enter
add
cmp
mov
mov
lahf
inc
push
gs
mov
mov
pop
outsb
cmp
xchg
xchg
mov
jbe
xchg
inc
inc
add
mov
sbb
mov
mov
fiaddl
subb
sbb
mov
mov
pop
mov
push
sbb
nop
sub
or
sub
push
adc
ficomps
movsb
mov
movsb
aad
fcoml
pop
rclb
leave
jl
push
movsl
and
in
inc
mov
cmpsl
inc
push
push
pop
inc
or
jp
add
mov
sbb
pop
mov
push
push
and
mov
push
pop
mov
xchg
sbb
inc
dec
outsl
xchg
cmpb
imul
jb
nop
and
mov
sahf
mov
cmp
xor
iret
loope
out
sub
pop
stc
inc
add
pop
cmp
jl
cmc
cmp
ds
mov
sub
pop
ret
xchg
dec
mov
stos
or
dec
les
sahf
pshufw
sbb
xchg
xor
mov
cmpsb
aas
arpl
movsb
jmp
mov
stos
sbb
sbb
lahf
mov
nop
arpl
in
imul
push
sahf
inc
jbe
pop
xchg
lret
sbb
xor
push
aaa
or
mov
pop
mov
data16
push
mov
mov
js
cmc
xor
dec
jo
dec
sub
inc
inc
lcall
cltd
mov
lods
xor
leave
xchg
test
jl
pop
pop
orb
and
ss
js
push
movsb
cli
mov
call
out
inc
jb
ja
aad
sub
push
loope
jbe
ss
inc
xor
cmp
leave
lods
loop
sar
mov
subl
and
push
movsb
mov
loop
enter
xor
ja
stos
inc
sbb
xchg
mulb
test
dec
inc
div
push
jmp
sub
scas
mov
mov
xor
push
cmpsl
loope
andb
jle
cltd
mov
xchg
test
mov
or
mov
adc
dec
inc
mov
inc
mov
xorl
pop
cmpsl
xchg
mov
aad
aad
rolb
arpl
push
in
mov
xor
shll
xchg
push
dec
mov
pop
xchg
ret
andb
aas
clc
mov
push
in
rclb
sbb
loope
mov
jns
mov
imul
or
mov
inc
mov
aad
xchg
push
or
ficoml
loop
ret
adcl
test
icebp
inc
lahf
cmp
sub
and
test
mov
insl
jbe
fwait
adc
loope
sbbb
inc
mov
decb
aaa
cmp
dec
jp
popa
outsb
xchg
lret
mov
call
cld
gs
push
jb
xchg
popa
ljmp
sub
inc
call
and
pusha
ret
test
data16
cwtl
clc
mov
fwait
or
push
jp
mov
sub
inc
mov
stos
cmpsb
dec
push
mov
push
mov
lods
faddp
cmp
je
mov
jns
push
or
cmp
test
mov
dec
mov
roll
sbb
aas
sub
and
inc
dec
stos
mov
pushf
out
sbb
aad
pop
dec
adc
mov
scas
pop
or
push
xchg
xor
mov
mov
mov
pop
hlt
popa
push
mov
dec
cmpsb
mov
push
sbb
cwtl
imul
pop
stc
mov
inc
out
sbb
int
mov
fnsave
or
jns
loop
mov
mov
xchg
mov
int3
jbe
xchg
rclb
jb
jle
cmp
movsb
outsl
jmp
mov
in
jb
in
push
testl
cmp
mov
fdivrl
or
nop
cmp
in
dec
add
rcrl
ret
pop
push
jbe
dec
push
sub
movsl
or
pop
cs
and
mov
test
out
mov
or
push
pushf
dec
and
and
mov
jbe
inc
mov
mov
je
lcall
mov
or
mov
xor
mov
js
stos
sbbl
inc
xchg
mov
mov
push
pop
lahf
cmpsl
jns
dec
adc
movsb
mov
clc
cwtl
xor
je
mov
mov
ret
mov
inc
jl
jb
adc
outsb
addb
inc
inc
add
ja
dec
jp
push
test
push
cmp
push
xchg
fimull
mov
lret
fwait
jle,pt
movsl
mov
push
pushf
dec
sahf
das
push
cmp
aam
mov
sub
inc
cmpb
mov
adc
mov
sbb
dec
dec
push
sahf
mov
and
mov
sbb
movsb
ss
and
cmp
mov
ss
jle
pushf
ss
shlb
lret
pop
lcall
sbb
stos
or
cltd
sbb
adc
pop
mov
or
int3
mov
cmp
inc
push
outsl
divb
test
push
push
imul
mov
aam
sbb
fistpl
mov
sahf
mov
and
outsl
xor
outsb
inc
aas
negb
out
movsb
test
push
lret
sarb
push
push
xchg
lods
sub
push
inc
popa
sbb
push
jo
es
mov
sub
sarl
cmp
inc
mov
dec
and
ret
stos
or
js
es
cmp
ret
inc
cltd
dec
stos
push
mov
ficoms
mov
jp
negb
jns
push
jno
int
sahf
and
xchg
mov
cmp
sbb
cs
xchg
push
xlat
gs
mov
pop
add
cmpb
mov
mov
pop
xor
incb
cmpsl
int3
cmp
cwtl
cmpsl
cmp
xchg
addb
fidivrs
dec
call
movsl
jmp
mov
pop
mov
push
pop
cli
xchg
rcrb
sbb
pop
pop
jnp
xor
cli
jmp
and
cli
adc
dec
scas
popa
dec
mov
jl
mov
jo
loop
fimuls
push
gs
arpl
and
ss
lea
pop
cmp
push
pop
push
jl
dec
movsb
push
sarl
dec
into
inc
push
inc
mov
xor
dec
js
dec
push
cmpb
sub
dec
lea
mov
stos
add
push
mov
mov
adcb
in
and
mov
cmpb
xchg
jo
mov
cmpb
add
mov
cmp
mov
xor
dec
push
jbe
imul
lcall
push
jg
add
inc
dec
mov
lods
sub
cmpsl
push
jl
sbb
movsb
push
js
rcrb
arpl
cmp
lcall
dec
xorb
mov
xchg
into
idivb
sbb
out
push
cwtl
mov
jl
fs
xchg
sahf
mov
xorb
pop
sub
pop
cmp
cli
fcompl
ja
sub
sbbb
les
mov
inc
sub
jae
inc
xchg
push
arpl
xchg
mov
daa
cwtl
adc
cmp
jno
imul
in
popa
cmp
mov
pop
loope
les
sbb
mov
push
mov
jg
inc
push
cmp
push
mov
std
sub
mov
imulb
pop
ljmp
fcoml
in
mov
inc
mov
jno
movsb
sub
outsb
jl
ss
pushf
xchg
cmpsb
out
jp
repz
jns
xchg
cmp
das
sar
mov
sahf
movsb
mov
sub
into
mov
mov
lds
push
xchg
out
dec
imul
xchg
push
aas
popa
pop
sub
mov
repnz
push
aas
hlt
jle
arpl
adc
mov
cwtl
stos
mov
fists
push
in
or
xchg
inc
movsl
mov
jne
shlb
faddp
mov
and
inc
xorl
inc
pop
cwtl
mov
push
sub
into
mov
add
jo
inc
cmp
mov
shrl
jmp
movsl
mov
aam
mov
jbe
cmp
mov
mov
push
dec
bnd
outsb
dec
push
sbb
in
and
mov
inc
cmc
dec
jge
add
push
aad
jl
pop
test
aam
cmp
sbb
pop
push
shr
mov
inc
ss
mov
inc
mov
int3
dec
jbe
cmp
movsb
test
arpl
cmp
inc
mov
fisttps
es
sahf
or
rclb
stc
xchg
gs
adc
xchg
adc
push
icebp
in
mov
in
movsb
xchg
lcall
sahf
mov
push
sub
movsb
xchg
jbe
mov
mov
and
push
adc
jl
dec
sahf
xchg
ret
movsl
lret
lock
mov
or
lock
push
xorb
mov
pop
or
test
and
xchg
xchg
or
test
lret
xor
inc
dec
jle
or
mov
cwtl
push
out
jle
lods
pop
repz
ja
out
dec
push
push
les
mov
pop
mov
daa
inc
repnz
and
add
push
dec
outsl
aaa
push
lock
repz
popa
cmpsb
xor
dec
xchg
gs
cmp
pop
push
ret
lcall
mov
mov
pop
insb
lods
movsb
fwait
mov
mov
dec
sbb
shrb
mov
push
nop
iret
cmp
or
push
and
mov
cs
inc
xchg
in
out
mov
cli
sbb
outsl
jmp
ret
and
push
sbb
push
scas
inc
jle
cwtl
aam
sahf
outsl
mov
mov
outsl
lods
data16
xor
sbb
addb
push
orb
mov
movl
mov
xchg
jle
cmp
xor
std
ss
mov
cs
mov
ret
xchg
jle
lcall
mov
mov
test
mov
push
arpl
jbe
xchg
lahf
xor
imul
sbb
push
mov
push
pop
cwtl
lds
xchg
xchg
rclb
fwait
out
add
fisttpll
incb
xor
mov
lcall
ljmp
mov
xchg
fstps
pushf
jle
bound
push
repz
in
fsubrs
mov
std
mov
xchg
push
mov
aam
adc
ret
dec
pop
test
pop
cmpsb
pop
push
inc
sbb
arpl
mov
xor
mov
pop
mov
inc
rclb
dec
sub
lcall
adc
inc
pop
mov
dec
sub
sbb
and
cmpsl
and
xchg
nop
push
xchg
rol
jmp
push
add
dec
push
xorb
out
fiaddl
fisubrl
pop
outsb
cwtl
lock
testl
cltd
es
cmp
mov
jo
test
inc
pop
inc
and
sbb
cli
loop
ljmp
pushf
add
out
nop
xlat
xchg
test
push
or
arpl
rcll
sbb
mov
and
in
lcall
push
xchg
lcall
adc
inc
lea
xor
test
icebp
idivb
fs
outsl
mov
loop
push
inc
call
iret
cld
adc
push
and
andb
test
sub
mov
pop
subb
dec
jp
frstor
data16
dec
aad
movsb
js
adcb
mov
mov
cltd
xchg
xchg
stc
ret
fs
jo
xchg
adc
mov
lahf
mov
movsl
loope
stos
push
roll
in
fwait
cmc
in
dec
and
aam
and
jae
sbb
sbb
adcb
mov
push
stc
push
inc
add
int3
movsl
loope
mov
add
in
and
inc
sub
orl
and
add
adcb
push
xchg
push
sbb
loopne
sbb
in
in
jo
arpl
push
push
sahf
pop
in
sub
ds
icebp
fwait
mov
notb
xchg
add
jb
xchg
mov
mov
cmp
pop
orb
pop
cmpl
xchg
inc
lods
push
aam
jb
test
pop
call
sub
xorb
sub
sub
and
or
jle
jg
aad
fwait
arpl
test
jl
jb
xchg
mov
fcoml
xor
or
push
mov
mov
push
jp
iret
or
loope
int
call
stos
jne
js
les
popf
mov
frstor
push
adc
pop
mov
jb
jl
cltd
inc
and
aas
pop
jbe
test
inc
inc
push
popa
push
ss
dec
lret
lea
cli
bound
cmp
mov
ficoms
pop
inc
out
mov
dec
cld
inc
arpl
ds
divb
pop
jb
add
or
popf
mov
mov
lods
adc
movsb
data16
popa
pop
xor
std
mov
test
or
xor
jp
lret
divl
fisubl
inc
add
sub
popf
out
sahf
cli
mov
add
adcl
adc
repnz
cmpsb
mov
push
push
cltd
ljmp
pop
xchg
cs
mov
jmp
cmp
mov
push
test
push
mov
test
push
and
mov
adc
dec
inc
mov
jne
mov
inc
and
mov
mov
pop
push
data16
je,pt
loop
aam
jle
mov
pop
jb
and
iret
cli
lds
lcall
mov
in
sub
jb
pop
jl
mov
and
insl
loop
int3
push
mov
mov
jp
pop
pop
inc
fbstp
xor
adc
xchg
std
jae
adc
cmp
sbb
mov
aad
movsb
lcall
outsb
in
stc
mov
lret
sbb
pop
out
or
popa
xchg
xor
push
add
inc
dec
sbb
ss
scas
mov
ret
cmp
sub
push
inc
lcall
add
stos
sub
sbb
dec
mov
mov
push
fildl
sbb
mov
repnz
pusha
xorb
in
movsb
xchg
stos
mov
dec
xlat
sbb
test
pop
xor
js
int3
xchg
movsb
sub
cwtl
xchg
cs
pushf
push
pop
push
in
mov
adc
imul
fimull
xor
cmp
xchg
dec
cmp
test
stos
mov
int
cli
sahf
aad
mov
and
test
mov
ss
sub
mov
fwait
mov
jl
lods
out
xchg
inc
mov
pop
mov
sub
arpl
xchg
push
mov
outsb
pop
cmp
push
push
dec
test
push
xor
cwtl
push
push
and
cmp
push
test
das
inc
pop
out
push
ljmp
mov
jnp
popa
dec
jb,pn
out
ss
mov
in
cwtl
dec
or
add
sbb
in
out
mov
lahf
dec
inc
and
imul
loope
pop
sub
dec
mov
sahf
dec
push
mov
fnsave
mov
test
sub
sbb
stc
xor
xchg
xchg
mov
inc
addr16
jnp
outsb
xchg
enter
mov
xchg
aam
sbb
mov
pop
cmp
daa
je
jle
in
mov
ficoml
xor
sbb
nop
and
xor
js
pop
icebp
sub
ss
out
pop
push
pop
movsl
mov
sbb
cmp
cwtl
das
rcrl
xchg
push
leave
push
pop
rorl
pop
mov
push
js
lcall
mov
inc
jo
push
mov
xchg
xchg
fwait
addl
pop
and
xchg
dec
mov
pusha
xchg
push
adc
xor
mov
sub
mov
out
arpl
pop
mov
inc
and
aam
mov
mov
mov
xchg
mov
popa
inc
or
data16
jb
or
sub
or
sub
cwtl
aad
decl
std
xchg
not
inc
push
std
dec
dec
jb
mov
push
test
and
cmc
pop
lcall
movsb
cs
cwtl
and
sbb
xchg
loope
inc
ret
testl
ficomps
xchg
cmc
mov
sbb
mov
inc
or
mov
test
shlb
enter
dec
imul
and
add
leave
xchg
sahf
inc
dec
jb
pop
xchg
cmpsl
cmpsb
les
push
jl
cmc
push
jp
aad
js
in
push
ret
cmp
fs
mov
mov
cwtl
lods
jnp
xor
sbb
mov
lock
pop
dec
aas
jp
and
aaa
xor
adc
xor
adc
and
stos
dec
neg
out
pop
mov
push
lods
loope
mov
mov
mov
cmpsb
mov
xchg
addb
push
iret
ficomps
cmp
xorb
jb
cmpb
xchg
nop
test
xchg
mov
shl
jae
sbb
shl
and
push
push
mov
mov
ret
es
xchg
mov
or
pop
dec
ret
cltd
xchg
hlt
rorb
out
xchg
mov
mov
or
xorb
add
into
lret
adc
pop
inc
pop
sbbb
mov
lret
aas
adc
popa
pop
sub
fdivl
mov
or
jle
aam
pop
into
lahf
push
pushf
xlat
push
into
inc
mov
adc
rorl
dec
xchg
mov
cltd
xor
inc
jle
loop
sbb
jl
dec
jmp
arpl
les
adc
data16
dec
nop
cmp
mov
mov
out
xor
shll
xchg
pop
push
inc
xchg
aas
mov
ds
inc
es
pop
fistpl
sub
jl
cmp
adc
bswap
lcall
ret
inc
cwtl
mov
sbb
pop
shll
and
or
jb
cmp
inc
and
lods
mov
cltd
mov
mov
lcall
scas
inc
jbe
mov
arpl
ficomps
movsb
mov
sbbb
push
sub
cmpsl
cmpsl
sbb
dec
jp
fistpl
fsubl
dec
jbe
ret
pushf
mov
cmpb
push
xchg
mov
fwait
mov
jo
push
xor
nop
push
xchg
or
loop
shlb
push
test
or
cmc
and
mov
scas
fcompp
decl
mov
sub
cmpsb
repnz
pop
mov
xchg
addb
jp
inc
cmp
fisubs
jg
in
push
aam
mov
lret
das
pop
rcl
lcall
fisubl
test
and
lcall
jmp
les
sbb
sbb
push
inc
inc
sbb
jp
dec
cmp
loop
out
test
mov
ss
cmp
mov
fistps
cltd
pushf
pop
xchg
mov
xchg
jbe
loopne
push
cwtl
loope
loopne
cmp
lcall
mov
mov
mov
xchg
daa
push
push
sub
push
call
decb
pop
mov
cmpsl
mov
mov
popa
sahf
in
cvtps2pd
int3
dec
sbb
rorb
jo
mov
dec
jb
push
cmp
cmp
lcall
mov
aam
and
test
ss
mov
inc
fld
aam
push
leave
adc
push
mov
mov
cmp
je
sahf
xor
test
addb
xlat
daa
xchg
stc
das
aad
xor
mov
mov
cmp
rcrl
inc
sbb
cltd
out
cmp
mov
mov
lods
fsin
je
dec
ja
jns
jae
push
xchg
jb
sbb
out
push
addr16
push
push
dec
out
pop
aaa
xchg
mov
loopne
mov
mov
pop
pop
xchg
jg
mov
inc
cltd
xchg
data16
mov
sbb
fidivs
into
mov
pop
adc
dec
and
mov
lcall
inc
push
push
push
adcb
mov
sbb
sbb
adc
testb
rcrl
ds
xor
fsts
arpl
js
push
push
push
mov
inc
arpl
rcll
shlb
cmpsb
push
jo
inc
xchg
jnp
pushf
cmp
test
dec
in
pushf
mov
dec
xchg
ret
rcll
inc
push
js
orl
ja
inc
pop
jg
pushf
mov
outsb
mov
test
sbb
std
pop
push
insb
and
in
adc
jbe
arpl
mov
push
ret
cwtl
and
nop
push
popa
andb
scas
aam
and
cmp
ss
inc
in
roll
dec
ds
jl
nop
sbb
jb
test
dec
ret
sbb
push
imul
imul
mov
shrb
sbb
push
pop
and
xchg
xchg
inc
aad
call
dec
add
scas
mov
test
cmp
dec
and
xchg
jnp
in
pop
rorb
outsb
jo
pushf
cltd
inc
sti
dec
mov
loope
js
add
inc
aas
xchg
sbb
add
mov
cmp
dec
xor
xchg
sub
xchg
xor
cmc
push
and
pop
xchg
and
in
xchg
mov
xchg
jo
test
sub
and
sbb
imul
movsb
push
mov
inc
aaa
or
sahf
push
cmpsb
jo
andb
push
cs
mov
stos
pop
xchg
mov
xor
outsb
ds
xor
and
gs
push
jo
pop
sbbb
popa
xchg
pusha
dec
inc
lods
cwtl
ja
mov
adc
jecxz
xacquire
shl
ss
mov
mov
adc
ficoml
mov
sbb
jg
je
sbbl
cmpsl
popa
jb
dec
mov
mov
dec
add
ret
and
mov
sahf
jo
mov
inc
push
mov
js
sar
pop
in
sub
cmp
outsb
mov
movsb
mov
lret
adc
out
in
inc
or
js
push
repz
xchg
cmp
repnz
dec
xlat
mull
subb
pop
jle
lods
inc
jmp
push
adcb
jbe
into
popa
lcall
dec
push
test
add
aas
mov
xchg
jo
iret
lods
fcompl
popa
mov
xor
mov
mov
add
mov
sbbb
mov
mov
push
into
mov
aam
lret
orb
insb
push
iret
dec
fs
sbb
subl
daa
push
cmp
lret
and
cmp
push
test
popa
push
push
and
adc
pushf
orb
out
xchg
clc
add
leave
rcr
mov
inc
int
jp
loope
jb
ret
cmp
ds
xor
pop
ret
push
mov
dec
dec
fsubs
aam
push
fwait
jnp
cmp
inc
xchg
push
xorl
in
and
pop
xchg
mov
push
sbb
jo
dec
inc
xchg
lret
lcall
cmp
push
push
push
test
js
and
test
mov
mov
mov
adcl
loop
scas
jno
mov
sbb
push
dec
adc
jae
inc
sbb
sub
fwait
push
jl
dec
cli
mov
inc
popa
mov
jmp
inc
mov
sub
or
adc
mov
pop
or
movsl
mov
sub
popf
ljmp
movsb
pop
cs
dec
push
sub
aas
rcrb
inc
mov
popa
pushf
jbe
jge
push
xor
or
outsb
nop
xchg
inc
xchg
pop
xchg
add
out
rcr
and
push
dec
outsl
jno
push
inc
push
lcall
mov
cld
xorl
popa
inc
sub
xchg
imul
xchg
sbb
sub
ljmp
sbb
lea
push
ret
push
push
pop
push
push
cmpsb
lds
dec
push
test
jl
inc
adc
xchg
push
test
push
dec
adc
push
or
pop
in
xor
mov
mov
mov
popa
fnsetpm(287
jp
aas
ljmp
pop
sbb
sub
lock
lcall
add
mov
inc
movsb
mov
cmp
xchg
jnp
xor
inc
jne
mov
in
jb
aas
leave
and
dec
les
sti
std
push
mov
or
andl
dec
xchg
mov
jle
shll
mov
nop
cwtl
data16
xor
or
int
mov
sbb
in
ljmp
pop
fidivl
adc
mov
sti
cli
and
lcall
std
mov
push
lcall
dec
inc
sbb
aad
std
and
or
jp
and
push
or
push
arpl
decb
or
lret
stos
pop
and
roll
dec
and
cli
adc
scas
add
push
jo
mov
dec
jb
and
loop
rcrl
pop
sahf
cmp
add
jo
lcall
xchg
dec
cmpsl
pusha
pop
push
sahf
and
aaa
and
xchg
xorb
call
cmp
inc
mov
lds
adc
and
mov
mov
adc
iret
rcll
fwait
push
pushf
cmp
stc
jmp
and
in
mov
int3
inc
popf
rcl
loope
negl
in
sub
pop
mov
testl
pop
iret
adcb
mov
ja
mov
cmpb
popa
ss
inc
jp
sahf
in
loop
mov
andl
mov
pop
mov
and
xchg
test
ss
push
addb
stc
sahf
adc
les
sbb
or
mov
push
int3
sarl
or
jns
mov
aam
mov
inc
fimuls
fst
stc
mov
cmp
out
test
push
mov
cld
dec
mov
aad
jge
or
push
mov
and
mov
jle
pop
xchg
adc
insb
pop
or
mov
mov
les
xchg
cmp
cwtl
js
sbb
icebp
ficompl
mov
loop
pop
cwtl
cltd
pop
push
or
popa
pop
out
orb
sbb
aam
inc
mov
pop
test
dec
mov
and
xchg
mov
imul
ds
in
mov
addb
daa
imul
fisubs
xor
adc
mov
mov
dec
rcl
mov
in
push
mov
dec
je
in
dec
xchg
stos
and
ss
out
nop
mov
inc
in
scas
das
in
mov
in
call
pusha
in
scas
add
pop
sti
jge
ret
inc
xchg
jg
mulb
add
repz
mov
das
mov
sbb
inc
stos
adc
mov
add
cmp
jp
movsl
or
xorb
dec
aas
mov
stos
cwtl
fwait
push
lods
pop
mov
inc
cmp
popa
xchg
dec
and
jp
scas
push
sahf
jb
mov
sub
movsb
push
imul
data16
cltd
pop
inc
out
jmp
rcll
sahf
pop
adc
dec
mull
xor
scas
test
mov
in
sub
pushf
cmp
sub
mov
mov
jp
in
mov
push
push
mov
adc
sub
adc
add
clc
add
xchg
movsb
inc
xchg
inc
out
cmpsb
jl,pn
ss
mov
js
out
test
imul
mov
ljmp
push
sbb
pushf
push
and
cld
js
inc
jmp
ds
cmp
jmp
out
inc
shlb
adcb
rolb
cmpsl
arpl
movsl
call
jo
pop
and
push
movsb
sub
push
pop
push
js
mov
ret
mov
xor
nop
rcrb
mov
or
cltd
inc
loop
enter
xchg
and
btr
xorb
push
bound
cmpsb
in
pop
push
push
and
fildl
cwtl
mov
arpl
push
cmp
lcall
stos
inc
jp
dec
mov
leave
add
adc
incb
mov
jmp
mov
cmc
add
hlt
ss
fmull
movsb
push
and
pop
clc
xchg
xchg
cbtw
jb
fcoml
jl
xor
cmpsl
lcall
lds
xor
inc
addl
adc
test
cmp
and
cmp
jb
leave
dec
xchg
and
and
adc
ss
call
mov
movsb
out
push
mov
lret
aad
jb
fldt
cld
cwtl
sbb
xor
inc
stos
add
jp
dec
sbb
fimull
dec
out
inc
lods
add
add
fcompl
sarb
dec
push
jnp
xchg
stc
mov
pop
cmpsb
xchg
inc
push
jb
pop
cs
out
sbb
and
decl
idivl
sahf
mov
inc
sub
fisttpll
fistpl
adc
sub
sahf
sbb
fwait
xchg
jo
and
pop
and
mov
sarb
shll
shlb
jmp
mov
sub
push
pop
in
nop
sbbb
aam
movsb
pop
push
mulb
daa
ljmp
scas
dec
push
inc
adc
sbb
inc
ds
test
addb
mov
movsb
push
stos
ret
lret
dec
lods
mov
out
jbe
lea
push
jp
pop
sub
lret
test
xchg
dec
push
mov
push
sbb
out
mov
mull
inc
xchg
mov
ret
movsl
xor
aad
xchg
daa
ret
js
pushf
sahf
js
cmp
inc
mov
jp
nop
in
pop
adc
mov
dec
incb
jg
ss
aad
into
xor
mov
mov
sbb
jo
fnstsw
push
xchg
xlat
data16
inc
cmp
dec
xchg
insl
mov
movsb
dec
sbb
sahf
cmp
lods
jecxz
and
inc
push
rcr
inc
push
pusha
sahf
jno
xor
repz
and
fisttpll
lods
add
mov
imul
ret
fdivs
dec
sbbb
mov
and
push
cwtl
jbe
ds
pop
push
test
push
and
jmp
push
xchg
mov
cmp
cmp
adc
les
jle
cs
mov
outsl
mov
mov
pop
popa
dec
arpl
clc
bound
cmp
xchg
rorb
dec
inc
leave
cmc
mov
aam
lret
in
xchg
lcall
pusha
inc
ljmp
lods
ret
dec
cwtl
inc
rol
stos
sbbb
pop
gs
inc
mov
sti
and
ss
subb
mov
es
popa
jl
nop
xchg
stos
cli
dec
test
ds
and
andb
aad
sbb
inc
pop
test
cmp
push
mov
sbb
pushf
dec
outsb
cli
lods
roll
cwtl
pop
jnp
orb
xchg
xchg
add
xor
stos
rcr
push
push
xor
adc
cwtl
cmp
addr16
popa
mov
call
aas
push
arpl
stos
pop
shll
cmp
dec
rorl
mov
gs
sbb
xchg
or
inc
and
cmp
dec
xchg
cmp
mov
xchg
in
adc
push
and
jle
mov
mov
dec
mov
xchg
fldl
in
mov
cltd
cmp
jmp
sahf
jle
push
jne
jp
imul
mov
clc
xchg
cmp
ljmp
shl
into
rcll
cmpsb
fbld
xchg
xor
arpl
adc
pop
cwtl
inc
mov
xchg
sbb
push
shrb
xchg
xor
cli
push
jp
ds
jae
adcb
mov
movsl
mov
push
popf
xor
aam
xchg
movsb
dec
xchg
sbbb
lret
jbe
js
sbb
pushf
cmp
mov
iret
cmp
and
iret
lret
aas
jge
xor
lods
push
ss
push
or
inc
mov
cwtl
jb
mov
inc
movsb
shlb
sbb
insb
subl
push
fiaddl
lcall
aad
ret
and
mov
xchg
inc
pop
ds
add
mov
js
push
dec
pop
movsb
xor
sahf
in
add
and
cmp
jo
lods
add
popa
jbe
inc
push
fwait
in
sbb
mov
dec
and
push
ret
pop
popf
out
pop
jmp
mov
inc
dec
orb
clc
inc
push
lods
and
cltd
xchg
add
dec
mov
test
mov
xchg
pushf
xchg
jle
push
fcompl
xchg
inc
xchg
cmc
sbb
push
or
inc
inc
and
xor
jg
lret
popa
jnp
jl
push
cmp
in
popa
push
fnstenv
adc
xor
mov
sbbb
rclb
negl
xchg
cmp
push
ret
mov
inc
inc
mov
aad
in
cmp
pop
or
mov
push
mov
rcll
jne
inc
cmp
test
xchg
jp
mov
pop
in
loopne
cmp
push
in
popa
ja
mov
test
sbb
cmp
jbe
outsl
inc
shll
fsubr
mov
mov
arpl
cwtl
push
lret
insb
lods
in
ret
loopne
mov
pushf
add
inc
gs
shlb
jbe
xchg
scas
push
dec
in
and
rorl
mov
mov
push
shl
mov
dec
dec
push
stos
cmp
arpl
sub
xor
ds
xchg
lcall
add
scas
push
jp
push
mov
pop
mov
mov
dec
xor
cli
ds
clc
inc
pop
xlat
mov
pop
or
adc
xor
fistl
aas
rclb
cmpsb
mov
mov
jno
inc
inc
add
mov
pop
jae
push
push
or
mov
xchg
dec
inc
xorb
cmp
push
xorb
andb
sahf
and
ss
push
hlt
inc
pop
dec
cmc
and
cmp
sbb
sahf
inc
dec
addl
aad
test
in
lods
xor
inc
xchg
sub
xor
jg
mov
int3
sub
push
pop
sbb
lds
pop
inc
fwait
mov
and
fmull
repnz
bound
mov
sbb
mov
test
push
push
inc
int3
mov
cmp
cltd
lret
lods
rcrb
inc
inc
test
arpl
cmp
adcb
outsb
cmp
xor
aam
lcall
adc
mov
aam
push
shl
pop
xor
pop
mov
in
int3
sub
sub
xchg
xchg
loop
jp,pt
sub
xor
push
pop
cmpsl
loopne
xchg
jb
scas
sbb
aam
push
in
push
test
cmp
mov
inc
jbe
movsl
lret
push
rolb
push
and
stos
push
mov
mov
push
pusha
inc
and
nop
xchg
push
mov
lcall
mov
cwtl
icebp
xor
ja
inc
fcoml
in
in
pop
dec
jo
mov
fcmovne
xor
pop
mov
pushf
es
inc
pushf
mov
fwait
push
inc
ficompl
jle
push
pushf
lea
pop
dec
andb
mov
mov
mov
and
gs
cli
adc
xor
jo
stos
sub
outsb
and
test
push
jnp
lcall
and
cmpsb
or
es
push
cmp
pop
jb
mov
add
or
and
sbb
in
in
mov
cld
in
add
inc
lahf
mov
xor
pop
dec
inc
dec
lahf
jle
or
call
cs
inc
aad
repnz
mov
sub
subb
pop
inc
ds
add
mov
and
arpl
in
jle
jp
mov
dec
shrb
sarb
leave
shrl
xchg
test
inc
rcrl
cmp
roll
mov
outsb
adc
sub
fisubl
push
sbb
into
insl
sbb
xchg
mov
pop
jo
xchg
test
movsb
xchg
incb
jae
inc
cmp
add
inc
ror
mov
nop
cwtl
cmp
ds
dec
xchg
mov
mov
inc
cmp
dec
popf
xchg
push
xchg
cmp
jle
cli
and
sahf
jp
dec
shll
loop
jmp
push
push
fdivl
shlb
xchg
mov
xchg
jl
xchg
daa
addl
xchg
inc
js
pop
push
sbb
inc
rcll
fsts
inc
inc
jge
pop
cmp
add
sbb
jp
adc
call
loopne
dec
inc
mov
xchg
and
in
jbe
push
or
sub
push
push
lcall
test
dec
mov
jae
mov
xchg
cmp
cwtl
add
inc
push
test
outsb
cmp
ja
lcall
dec
call
xchg
pop
push
cmp
imul
mov
push
imul
test
mov
add
sbb
arpl
inc
ja
inc
insb
dec
xchg
mov
mov
lds
dec
popa
cmp
sbb
out
xchg
or
pop
in
aaa
pop
or
push
push
push
adc
push
popa
dec
aad
push
push
xchg
loopne
xchg
cmp
xchg
pop
inc
sub
sahf
push
sbb
int3
mov
sarl
xchg
jb
adcb
in
push
jge
xor
or
and
and
or
jo
outsl
lock
nop
mov
cs
push
xor
imul
fidivrl
mov
lcall
jge
adc
decl
ja
in
adc
rol
cmp
mov
out
or
dec
mov
pushf
call
imul
and
add
push
adc
dec
push
jp
out
out
arpl
imul
pop
pop
mov
dec
in
stc
push
jecxz
inc
mov
fidivl
lret
push
and
lcall
push
adc
fiadds
xor
lods
out
push
push
push
out
rorb
cwtl
arpl
mov
or
mov
xor
xor
jl
sub
mov
jo
inc
fwait
mov
pop
pop
mov
mov
leave
or
hlt
lret
arpl
ljmp
push
out
mov
decb
push
pop
loope
cmp
stc
mov
jbe
sar
pop
and
enter
loop
shl
cmp
sbb
cwtl
sahf
jg
cwtl
inc
push
jl
loop
subb
fs
jmp
rorb
pop
sub
mov
inc
popl
gs
sahf
dec
pop
inc
pop
and
arpl
cmp
movsb
mov
inc
loop
cmp
dec
xchg
fldenv
dec
sbb
push
push
jmp
cmp
and
and
cmp
sub
add
sbb
mov
push
std
mov
mov
add
orb
cmp
dec
mov
xchg
cmp
inc
ficoml
rolb
xchg
dec
mov
mov
cmpsb
pop
cmp
push
xchg
popa
movsl
add
loop
ljmp
xchg
sbb
ja
mov
jg
mov
dec
mov
jb
mov
lcall
pop
jno
jbe
push
ret
or
cmp
push
xchg
jo
addb
xor
push
xchg
aad
mov
js
cmpsb
xchg
ret
push
aas
inc
inc
push
pop
inc
aad
adc
push
into
lock
stos
dec
out
pop
mov
js
imul
and
jne
adcb
lds
jle
pop
mov
ret
and
push
inc
adc
insb
leave
ficoml
xor
int3
jo,pt
mov
mov
dec
and
lret
inc
pop
jmp
xchg
mov
es
int
and
pushf
push
fcompl
aad
mov
mov
sahf
ds
jb
icebp
movsb
fcompl
xor
push
jl
xor
dec
cmp
adcb
pop
ss
add
mov
cmp
clc
push
addl
test
sarb
or
xor
mov
adcb
dec
inc
cmp
xchg
nop
pushw
jb
dec
add
push
imul
jno
add
dec
inc
pop
cmpsb
int
inc
dec
sub
sbb
pop
xchg
int3
mov
xor
js
int3
loope
clc
dec
xchg
les
call
cmp
cmp
loop
ljmp
ret
push
andb
pushf
nop
dec
nop
sbb
rcrb
popf
dec
xchg
mov
dec
adcb
cmp
shrb
and
fwait
js
cmp
dec
fcmovu
in
cmp
mov
cld
repz
shlb
icebp
mov
pusha
cmpsb
pop
orb
lcall
sbb
dec
xchg
xorb
xchg
push
mov
mov
lahf
ret
test
inc
fimuls
ficompl
imul
pop
mov
adc
sub
sbb
nop
jl
jns
adc
jb
push
pushf
xchg
cmpb
inc
mov
subb
mov
inc
push
inc
push
jo
and
cmp
insb
xchg
lret
loop
mov
movsb
sbb
fidivs
inc
cmp
pop
mov
mov
push
ljmp
mov
in
cli
into
std
out
dec
mov
dec
sbb
lret
das
in
jbe
shrb
cmp
inc
cltd
xchg
xchg
sub
mov
or
or
and
jo
jl
inc
sub
popa
dec
adcb
sub
or
jae
mov
sbb
mov
jp
cmp
xchg
std
rorb
push
mov
sbb
sub
mov
jnp
xor
mov
mov
sbb
loopne
ss
pop
xchg
scas
dec
xlat
mov
jp
mov
pop
iret
cmpsl
lds
inc
sub
out
cmpsb
mov
xor
push
arpl
mov
and
push
mov
push
inc
scas
cltd
aam
xchg
dec
int3
push
adc
js
xchg
pop
mov
in
xor
xchg
test
pop
mov
es
inc
ss
cmp
xchg
push
mov
adc
fdivrl
mov
adc
xchg
scas
sahf
sahf
mov
in
sub
jp
dec
es
jo
pop
dec
add
pop
adc
in
jecxz
fdivrl
aam
cmpsl
mov
sahf
pop
xor
popa
rclb
and
mov
sarl
xchg
xchg
rclb
sbb
dec
inc
cmp
loop
aam
inc
cmpsl
in
arpl
andb
nop
pop
inc
lret
add
mov
mov
sub
arpl
push
fmull
loop
call
ljmp
iret
out
nop
mov
add
cs
xchg
jne
ret
mov
dec
andb
add
mov
dec
jecxz
fsubrp
scas
inc
out
jle
sbb
push
fldz
loop
int3
decb
cmp
cltd
jb
and
push
aad
orb
ss
xchg
push
jo
call
ljmp
xchg
and
addr16
xchg
dec
and
push
dec
popa
cld
arpl
aam
mov
xchg
lcall
dec
cwtl
mov
lret
mov
cmp
adcb
ss
push
lock
xchg
mov
mov
push
push
rcl
cmp
jo
inc
jae
mov
and
jge
and
inc
jae
js
cltd
inc
les
test
test
sbb
adc
lahf
jb
arpl
jbe
js
scas
stos
ljmp
xchg
stos
fisttpll
mov
xchg
lcall
mov
jmp
pushf
push
mov
sub
fiaddl
add
push
lcall
rcll
and
cwtl
jbe
cli
sbb
call
cmpsb
sub
cmp
jbe
incl
mov
aaa
jp
and
adc
cmpsl
ss
and
sub
mov
jmp
or
pop
cmp
inc
dec
outsb
and
sub
jb
push
js
jo
adcb
cld
add
sbb
cmp
adc
xchg
push
add
rclb
mov
in
xchg
arpl
cwtl
cmp
add
and
pop
push
push
inc
aaa
out
jmp
push
int3
mov
jbe
sub
test
aas
imul
popf
mov
orb
lcall
xchg
and
and
ss
xchg
jle
xchg
icebp
mov
add
push
scas
or
push
inc
js
int3
sub
jo
in
pop
pop
popa
repz
mov
jp
push
mulb
test
cmp
sbb
orb
mov
or
insb
ss
insb
mov
push
pushf
incb
jp
leave
leave
cmp
sahf
adc
in
rcl
xchg
inc
jb
addb
aad
fiaddl
xchg
in
ljmp
push
xor
pop
mov
dec
insb
xor
sbbb
lret
aas
push
inc
pop
push
add
rcll
push
adcb
sbb
pop
cmp
adc
arpl
xor
inc
and
sbb
sti
test
nop
and
out
or
inc
fs
or
loope
jle
cwtl
adc
lock
mov
cmp
bnd
pop
loop
in
and
movsb
popa
push
in
in
push
lds
adc
mov
mov
dec
jge
pusha
jp
adc
in
xchg
xor
and
lret
jle
mov
push
ret
jo
xchg
xchg
rolb
cmp
es
mov
inc
aad
rclb
jle
push
and
cwtl
dec
mov
jb
jp
mov
jmp
mov
sbb
adc
and
popa
sub
mov
js
pusha
push
lcall
in
call
push
dec
ret
xor
lret
sbb
fistpl
jle
push
jbe
mov
cmp
jo
fidivs
cmp
ret
out
imul
mov
sub
cs
mov
lret
pop
jbe
and
int
xchg
inc
aam
jo
fisubl
push
data16
pop
cmp
mov
add
addb
test
stos
cmp
inc
stos
ret
jle
jp
xor
inc
dec
pop
mov
jns
pop
cmp
insb
cli
ss
inc
jo
jl
push
and
cmp
and
push
testb
sbb
and
xor
cmp
inc
inc
aaa
jbe
xorb
into
inc
cmc
and
dec
sbb
jp
xor
xchg
andb
pop
ret
jb
shlb
inc
fimull
lret
lret
mov
mov
aam
in
ficompl
ds
jno
lds
dec
inc
in
iret
cmp
fs
mov
dec
xchg
push
jp
fimuls
movsb
mov
leave
cs
mov
lret
dec
mov
dec
jb
pop
gs
mov
jo
ds
mov
or
xchg
dec
lret
ljmp
inc
push
inc
and
add
in
sub
mov
out
sbb
ret
jb
test
or
mov
icebp
or
sub
fwait
cmp
pushf
dec
js
xchg
or
xor
push
es
ds
cwtl
test
and
mov
in
sbb
cmp
push
dec
dec
cltd
ficoml
cli
push
mov
mov
or
mov
pop
mov
jecxz
xor
aad
mov
lds
sbb
pusha
sbb
ret
mov
xchg
std
inc
jl
and
adc
jmp
in
movb
pop
push
push
pop
ljmp
push
cmp
aad
xor
icebp
mov
mov
and
fwait
ss
and
lds
mov
inc
rorb
jle
inc
pushf
push
adc
repnz
cs
mov
cmpsl
inc
xor
xchg
inc
and
mov
pop
jecxz
push
js
push
mov
push
mov
cltd
push
dec
jnp
outsb
mov
push
xchg
or
imul
sbb
out
xorb
and
bound
ljmp
push
dec
fisttpll
sbb
mov
jmp
lahf
inc
cmp
push
and
xor
push
fisttpll
pop
ficompl
xchg
call
mov
or
imul
cmp
mov
push
push
xchg
mov
cmp
in
xchg
loop
lcall
sbb
jnp
pop
xlat
daa
hlt
movb
js
push
adc
lcall
and
adcb
push
jp
lcall
movsl
or
pop
das
cwtl
daa
jp
jb
and
cmp
sbb
adc
mov
xchg
mov
jmp
push
fs
and
pop
fistl
xchg
in
adc
inc
jl
push
jo
scas
inc
in
loop
incl
aad
outsb
cmp
ret
orb
mov
pop
push
sbb
ret
xchg
push
jp
and
mov
dec
mov
aam
int3
push
and
sti
jbe
test
pushf
and
mov
outsb
inc
adc
sbb
mov
add
xchg
dec
push
xor
mov
xchg
and
jle
cmp
or
lds
mov
push
mov
mov
cmp
pushf
push
push
sbb
mov
push
mov
stos
fimuls
fisttpl
cmp
xchg
test
movsb
nop
daa
inc
inc
ret
xchg
mov
sbb
lret
xchg
in
jb
mov
and
sub
mov
push
mov
loop
shr
test
adc
push
lret
neg
and
movsb
popf
sub
fistl
xor
or
inc
aaa
push
and
inc
pop
and
mov
fldt
sbb
scas
mov
mov
mov
inc
ds
sbb
sbb
fisubl
xor
inc
push
inc
sbb
out
fucomi
xor
mov
and
xchg
pop
popf
insb
inc
mov
inc
dec
and
test
shlb
cmp
jnp
test
outsl
pushf
push
push
int3
or
xchg
popa
cli
sbb
dec
and
das
lret
popf
mov
sahf
mov
lods
sbb
or
and
cmp
or
loop
int3
xor
or
and
mov
or
movsl
ret
push
cmpsb
stos
jb
dec
movsb
cld
dec
pop
mov
bound
jp
int3
dec
dec
pushf
xchg
fiadds
jbe
mov
mov
xor
les
lahf
in
sbbl
push
xor
adc
inc
adc
movsb
test
aas
in
adc
dec
inc
cmp
xor
lods
and
cmp
mov
inc
popf
push
imul
iret
jnp
or
jg
or
push
jle
insb
in
fstpt
mov
push
dec
into
cmp
dec
and
inc
aam
cmp
popf
xchg
inc
pushf
lcall
jp
ja
and
pop
xor
cmp
mov
pop
jno
inc
mov
inc
jle
add
mov
nop
adc
inc
outsb
dec
das
cs
push
pop
mov
push
push
cltd
mov
aad
mov
mov
mov
in
mov
adc
sbb
jbe
sahf
adc
pushf
mov
sub
mov
mov
arpl
and
aad
cmp
mov
mov
in
mov
outsb
data16
and
hlt
jle
mov
and
jmp
stos
push
add
lahf
dec
push
cwtl
fucomp
lcall
jp
add
mov
push
dec
push
test
dec
push
and
push
mov
sarl
jl
mov
adcb
and
xchg
movsb
push
test
push
dec
cmp
in
inc
cmpsl
sbb
jb
jbe
aam
jo
cwtl
lret
xchg
inc
sbbb
divl
sbb
mov
lret
sbb
imul
les
xor
pushf
push
dec
mov
imul
pushf
cmc
push
ret
fistl
xor
test
pushf
inc
in
sbb
jb
movsl
andb
lahf
mov
dec
pop
sbb
push
xchg
arpl
scas
and
mov
inc
mov
fisubrl
inc
cmp
adc
cmpsb
mov
test
aad
aad
jmp
lret
arpl
shlb
inc
js
jle
neg
pop
jle
in
dec
jp
sahf
jle
add
add
sbb
pop
xor
dec
nop
pushf
inc
test
movsb
mov
xor
jbe
xor
ret
pop
mov
inc
cld
loop
jp
fisubl
push
push
and
push
cmp
ljmp
rcll
aad
outsb
jb
or
inc
nop
leave
out
idivl
mov
mov
dec
ds
clc
pop
push
pop
fldl
iret
xor
rolb
pop
pop
and
nop
in
pop
xchg
xchg
inc
dec
shrl
inc
xor
jo
out
sti
js
sti
sahf
mov
mov
or
paddsw
mov
popf
pusha
mov
pop
inc
xorb
inc
sub
mov
out
push
jne
add
dec
jg
mov
dec
mov
mov
dec
xchg
xchg
fs
and
or
mov
add
jmp
pop
mov
outsl
xor
cltd
mov
adc
stc
int
clc
imul
jb
mov
sbb
inc
or
inc
push
mov
inc
sbb
inc
ss
lea
xchg
pop
and
jo
lcall
cmp
cltd
cmc
cmpsb
imul
cmp
mov
lahf
and
add
out
jl
xor
mov
mov
fldl
pop
ss
int3
push
sbb
jecxz
jl
xorb
xchg
icebp
cmpsb
fadd
lret
adc
push
stos
xchg
not
ss
ret
fbld
mov
push
xchg
push
lds
std
sbb
aaa
dec
mov
rcr
sub
xchg
dec
and
sahf
arpl
pop
cmc
push
leave
push
cmp
pop
sbb
imul
add
mov
sbbb
negb
in
jl
mov
or
lret
das
jae
jae
aas
dec
push
push
sbb
ds
test
xchg
mov
arpl
mov
fbld
or
jp
rolb
fisttpll
add
ljmp
in
adc
jae
cwtl
rcl
and
call
in
imul
lcall
inc
adc
jecxz
jp
pop
inc
rcr
mov
repnz
inc
fcmovnb
xchg
popa
daa
lahf
mov
scas
pop
jbe
lret
mov
cli
add
enter
xlat
dec
sti
test
rclb
idivb
jecxz
popa
push
test
sbb
pop
adc
sub
rcl
ds
pop
xchg
pop
cs
xchg
sbb
mov
and
icebp
sbb
xchg
adc
mov
pusha
ss
jnp,pt
out
cmp
cmp
cli
xchg
jp
jecxz
xchg
adc
sub
icebp
in
push
xchg
and
stos
loope
testl
subb
jns
mov
mov
ja
cmp
cmc
sub
xchg
imul
xor
subl
or
add
in
mov
daa
je
cmc
lret
jne
xor
mov
push
inc
or
pop
enter
jecxz
fbld
sbb
pushf
xchg
imul
mov
test
dec
insb
nop
adc
push
push
jecxz
mov
xor
sbb
sub
inc
int
in
daa
xchg
and
dec
cmp
mov
lret
dec
cli
arpl
icebp
in
mov
fwait
xchg
xor
addr16
xor
in
fldl
xchg
xor
fnstenv
inc
or
fldt
out
push
fstl
das
dec
insl
push
in
lods
fwait
pop
xor
in
fstpl
push
in
push
cmpsl
mov
into
jl
pop
sahf
mov
jp
nop
push
lods
lret
lcall
mov
aam
mov
sub
mov
mov
cmpsl
dec
mov
push
aad
and
outsb
cld
lahf
sbb
mov
into
push
push
andl
mov
fstpl
stos
push
dec
inc
mov
cmp
in
lea
sub
in
inc
mov
jo
bound
sbb
push
cmp
pop
dec
cmp
out
sarl
xor
shll
lret
adc
fistl
push
pop
jae
cmp
imul
shll
cmc
jp
cld
xor
or
test
das
and
jo
inc
xchg
dec
jbe
add
popa
and
in
loopne
std
xorb
pop
cmpb
jo
inc
pushf
aas
xchg
xchg
sub
cmp
mov
ljmp
arpl
push
aad
in
xor
sbb
scas
jl
mov
push
pop
shlb
push
dec
int3
leave
stos
cmp
inc
mov
fisttps
and
and
or
push
sub
js
pop
test
push
mov
lcall
pop
sbb
aaa
out
pop
pop
scas
mov
xchg
sub
mov
add
jl
push
dec
insl
mov
mov
pop
dec
lds
cwtl
push
pop
mov
push
xchg
into
popa
xchg
add
fsubs
pushf
or
xorl
push
and
mov
and
test
test
jbe
inc
mov
adc
repnz
cmp
pop
call
inc
push
sahf
int
es
add
and
add
frstor
out
dec
dec
mov
mov
adc
cwtl
cmp
lahf
xchg
fwait
cmp
sahf
mov
test
jl
xchg
pop
cmp
pop
lcall
aas
mov
pop
data16
add
cwtl
xchg
jbe
pop
xchg
adc
pop
push
gs
sub
mov
imul
xchg
sbb
inc
and
cmp
inc
cmp
ret
cmc
cwtl
js
inc
lcall
or
add
insb
inc
jne
ljmp
sbb
xor
cld
mov
lds
push
inc
inc
and
cmp
push
andl
mov
arpl
inc
push
xchg
mov
filds
pop
push
pop
mov
lcall
cmp
sahf
orb
shlb
into
rolb
sbb
pop
push
arpl
mov
lods
inc
dec
cmp
fimull
jp
ret
js
pop
and
cmp
rcrb
mov
sbb
aad
mov
mov
and
inc
outsb
pop
ds
ds
adc
jne
add
sub
cwtl
imul
push
sahf
pop
jbe
addb
dec
sub
dec
sbbb
xchg
mov
cwtl
xchg
adc
mov
mov
mov
mov
in
sbb
or
fistpl
inc
sub
jno
and
repz
mov
andb
arpl
pushf
inc
aad
jmp
fistpll
mov
aam
inc
les
test
cmp
cmpb
mov
dec
daa
sub
pop
lret
cmpsl
push
arpl
dec
in
xchg
and
popa
xchg
ss
jb
ja
pop
xchg
repz
sbb
test
mov
fimull
sbb
inc
jns
xor
movsb
notb
nop
ja
pop
sbb
pop
inc
mov
xor
lods
loop
andb
insb
lock
mov
leave
fdivs
scas
cmpsb
cmp
cmp
push
dec
push
dec
cmp
lea
cmp
dec
dec
jl
jl
dec
pop
inc
pushf
test
and
fildl
xchg
pop
inc
mov
xchg
enter
in
cmpsl
insb
shlb
rorl
pop
ret
pop
pop
test
ss
inc
cld
adc
nop
xchg
fistpl
push
pop
inc
push
or
push
cmp
dec
pop
xchg
loopw
pop
call
adc
inc
insb
sahf
mov
std
xor
xchg
ret
jo
test
pop
ss
pushf
lds
ja
inc
mov
xchg
arpl
sbb
cmpsl
inc
mov
sbb
negb
pop
aas
push
inc
mov
add
ss
mov
sbb
mov
and
fs
mov
adc
or
xor
jb
xchg
push
or
or
es
lds
and
aad
sub
jb
adc
xchg
mov
push
push
push
ret
mov
mov
and
iret
dec
jle
mov
shlb
adcb
test
sahf
outsl
mov
jb
pop
mov
cmpsb
and
pop
jg
cmp
push
cmp
lret
push
cwtl
xchg
xor
pop
cli
xchg
out
dec
negl
mov
xor
push
xlat
jae
lods
mov
outsb
std
mov
ds
test
mov
or
mov
sarb
pop
cmpsl
pop
push
push
and
fnsave
jmp
pushf
jb
mov
es
and
mov
cmpsl
sbb
xchg
pop
jo
stos
or
movsb
icebp
hlt
push
jp
jae
test
mov
cmpsb
mov
cmp
imul
cmpsl
and
push
dec
sahf
mov
bound
les
and
in
mov
sbb
popl
push
push
xor
and
in
push
mov
in
loope
out
jmp
lods
add
outsl
int3
sub
inc
pushf
push
pop
jbe
and
out
sahf
fstl
inc
xchg
cmpsl
inc
dec
inc
mov
add
sbb
and
add
jnp
packsswb
xchg
push
inc
xchg
mov
cmp
xchg
nop
loope
test
pop
push
xchg
xor
cmpb
das
out
or
dec
sbb
popa
push
lret
leave
inc
repz
pop
dec
jl
js
movsb
mov
sub
in
mov
cmp
add
imul
inc
test
popf
or
std
push
push
lea
cltd
cmp
bound
es
mov
shlb
inc
orl
xor
mov
dec
lcall
test
pop
jle
nop
sub
inc
xchg
shll
mov
shll
mov
cmpsl
nop
dec
jbe
dec
xchg
int3
sahf
jle
xchg
shlb
push
and
mov
andb
stos
xchg
outsb
cmp
out
mov
jmp
pop
inc
negl
ss
aam
popa
mov
inc
pushf
or
fstpt
jmp
rcr
jb
push
inc
inc
outsb
mov
inc
sub
mov
adc
sbb
rorb
dec
push
aaa
and
mov
add
cmp
fsubrs
mov
add
inc
imul
cwtl
movsb
jmp
ficompl
iret
push
shl
xor
xchg
sub
xchg
movsb
push
xchg
test
gs
mov
ljmp
sbb
mov
je
and
ss
mov
cmp
ljmp
imul
adc
rclb
inc
mov
shlb
xor
cmp
inc
andb
aad
mov
push
push
inc
jmp
lods
inc
aad
push
xchg
mov
inc
pop
inc
movsb
vmaxpd
inc
stos
addb
cmp
mov
andb
dec
jo
jb
push
loop
xchg
mov
inc
push
roll
jb
mov
jecxz
jno
int3
adc
movsb
pushf
jle
mov
xor
dec
pusha
leave
add
inc
inc
cwtl
or
cwtl
nop
or
daa
ss
adc
mov
or
xchg
and
out
cltd
test
pushf
xchg
mov
sub
int
xchg
jnp
jl
dec
sbb
aas
bound
mov
nop
std
mov
mulb
leave
int3
jbe
arpl
or
xlat
popa
jle
cmp
dec
xchg
in
out
or
inc
xor
fidivrs
mov
mov
mov
cwtl
xchg
push
push
push
ss
fildl
fildl
cmpb
loop
mov
into
mov
jo
jbe
sbb
jp
mov
sbb
cmp
mov
ss
lret
push
push
inc
mov
fwait
gs
cmp
mov
dec
scas
and
inc
jp
jbe
loop,pt
ss
mov
dec
push
dec
add
dec
xchg
nop
inc
and
xchg
scas
add
ljmp
mov
inc
testl
inc
xchg
jl
in
arpl
dec
mov
mov
hlt
sbb
dec
mov
xchg
popa
in
test
cmp
pop
movsl
sarl
push
xchg
js
inc
inc
ljmp
mov
cli
aam
inc
outsb
mov
jmp
sub
cwtl
mov
adc
xor
mov
mov
and
cli
mov
cmp
sbbb
xor
arpl
cwtl
inc
cmp
leave
jae
iret
fistpl
pop
cmp
mov
dec
push
test
sbb
cmp
xorb
inc
and
ljmp
pop
popa
mov
sbb
inc
cmp
mov
inc
movsb
or
push
dec
and
lcall
rcll
stc
popl
or
xor
dec
push
test
cmp
push
mov
or
shl
mov
std
fiadds
dec
std
push
test
lcall
jle
dec
xchg
in
pop
int3
adc
jecxz
shlb
cmp
dec
cmpsl
jmp
xchg
inc
ds
cwtl
test
out
dec
inc
jmp
inc
nop
inc
cmp
pop
cmp
ret
mov
push
add
xchg
mov
or
bound
pop
and
imul
mov
xchg
mov
cmpsb
leave
or
addb
insb
dec
aas
cmc
lcall
div
pop
push
ret
and
mov
loope
imul
cmp
test
sarb
push
push
cli
out
adc
lret
push
jbe
incl
in
int
pop
sbb
push
inc
mov
push
lea
dec
popa
dec
mov
aad
out
or
push
aad
insl
in
push
in
sub
pop
mov
push
pop
in
and
aam
push
pop
rcrl
jecxz
jle
inc
arpl
pop
js
movsb
and
sbbl
jp
xchg
pop
mov
cmp
inc
test
nop
fiaddl
lret
xchg
sbb
adc
in
dec
pop
and
mov
nop
push
sahf
movsb
inc
insl
mov
dec
jno
mov
and
test
jmp
sahf
mov
mov
dec
cmp
dec
mov
cmc
lock
inc
arpl
cmpsb
add
cmp
popa
fistl
xor
jp
pop
xchg
jnp
add
dec
sbbb
sbb
faddl
add
jo,pn
and
cmpsl
pop
mov
arpl
lcall
mov
ja
jl
ds
popa
ret
inc
out
test
mov
cld
mulb
jo
pop
aad
cltd
sub
jbe
jno
pop
xchg
rcrb
mov
call
xchg
shlb
mov
mov
dec
mov
and
mov
leave
js
iret
jb
jp
inc
mov
sarl
mov
out
sbb
cmpsb
adc
dec
xchg
lahf
lcall
mov
push
push
or
sbb
idivl
adc
cmp
xor
sahf
cmp
dec
push
sbb
and
in
push
addb
mov
dec
test
cmc
push
mov
hlt
dec
adc
mov
mov
mov
cmp
mov
push
loop
fimuls
das
mov
ss
xor
fdivr
sub
lds
inc
xchg
mov
pop
xchg
jb
adc
sub
lcall
mov
and
mov
loop
mov
xor
cmc
jle
sbb
and
inc
sbb
scas
push
mov
xchg
mov
sub
or
test
cltd
xchg
mov
xor
cmp
mov
mov
lods
pop
mov
cwtl
cmpsl
mov
int3
arpl
mov
jmp
out
cmp
lock
xchg
adc
xchg
ja
sbb
pop
and
xchg
mov
gs
cmp
and
and
dec
inc
hlt
sbbl
push
ljmp
and
dec
cmpb
cmc
idiv
sahf
sbb
js
jmp
fistl
in
push
xor
and
inc
clc
in
push
addb
dec
push
pop
cmp
cmpb
ret
iret
pusha
shrl
addb
jo
scas
mov
dec
and
lods
ret
faddl
sahf
ss
push
add
out
jl
dec
ret
lods
dec
jp
inc
std
jne
cmp
sbb
sbb
inc
insb
and
es
add
fisubl
push
mov
xchg
jmp
pop
or
sbb
adc
movsb
sbb
negb
jno
push
mov
xchg
ret
inc
xorb
test
mov
or
dec
dec
lcall
ss
push
jl
dec
xor
mov
inc
inc
and
addb
push
cmp
push
mov
push
push
inc
xchg
jb
pop
push
push
jae
popf
imul
jge
ja
pop
and
enter
mov
sub
fs
aam
cmp
add
adc
loop
lods
pop
inc
mov
arpl
dec
cmp
sbb
and
scas
jo
add
pushf
ss
loop
pop
pop
jle
std
mov
hlt
in
ficompl
ljmp
aam
pop
mov
mov
mov
pushf
and
cmpsb
sub
mov
sahf
adcb
sbb
xor
dec
push
mov
outsb
rcll
iret
jge
mov
in
cmp
clc
int3
nop
mov
sbb
or
sbb
fs
mov
pop
dec
push
mov
ficoml
inc
pushf
xchg
out
push
inc
fimull
call
sbb
push
pop
fdivrl
shlb
movsl
jg
pushl
pop
test
and
xchg
or
out
mov
add
mov
inc
or
add
or
aas
addb
in
mov
in
pop
idivb
repz
pop
lret
dec
pop
test
ds
jge
push
ljmp
lret
test
pop
mov
push
pop
xchg
jo
inc
loop
into
stos
mov
in
mov
mov
lcall
cmp
cwtl
push
jmp
aaa
push
pop
or
mov
gs
aad
dec
cmp
lcall
lds
in
sbb
pushf
inc
cmp
push
inc
add
adc
ret
sbbb
fcoms
dec
mov
dec
jle
jne
xchg
push
xchg
cld
insb
dec
jno
nop
popa
xchg
push
jo
inc
ss
push
dec
jl
aas
mov
mov
movsl
sahf
loop
lret
test
divb
jns
arpl
movsb
sbb
ficompl
jo
dec
lahf
mov
aas
mov
push
in
fistpl
sub
xor
adc
mov
ficompl
cmpsl
stos
or
pop
cs
repz
ss
jo
mov
inc
cmp
and
ss
ret
stos
jo
ds
and
cmpsb
test
push
jp
js
jb
mov
lcall
pop
xlat
pop
imul
cmpsl
jp
movsb
jb
push
pop
inc
cmpsl
inc
nop
mov
mov
inc
dec
jmp
dec
lcall
shll
mov
dec
lcall
cmp
out
sbb
test
push
push
out
pop
cmp
xchg
push
pop
push
xor
inc
rcrb
jbe
daa
mov
mov
mov
inc
jle
outsl
dec
inc
inc
arpl
lret
pushf
jmp
mov
jl
xchg
adc
xchg
ja
addb
cmp
sbb
cmpsb
out
int3
lcall
shr
dec
sarb
int3
fwait
inc
ss
pop
inc
cmpsb
data16
lcall
sbbb
mov
aad
add
lods
dec
jbe
cwtl
mov
test
dec
xchg
rcrb
adc
aam
lahf
sub
or
push
dec
cmp
dec
push
xor
jp
inc
mov
out
pop
mov
adc
gs
push
add
jbe
sbb
scas
inc
add
inc
int
movsl
push
jae
xchg
decb
inc
mov
sbb
aas
into
adcb
fstps
pop
dec
and
pop
mov
lret
dec
inc
jg
ja
push
mov
xor
xchg
sub
mov
push
push
fcoms
ds
popf
push
inc
fadds
ret
sbb
nop
push
js
rcrb
das
inc
xchg
xchg
inc
gs
push
pop
mov
test
jp
arpl
pop
aam
push
leave
push
adc
or
and
mov
lock
lods
mov
dec
xchg
add
mov
aaa
xchg
or
xchg
mov
mov
mov
mov
fdivrl
shlb
push
jle
mov
dec
sbb
xor
add
test
ljmp
test
or
testb
ds
test
push
xor
sbb
out
popa
sub
movsb
adc
cmc
in
mov
js
jle
ss
xor
rorb
pop
mov
inc
rolb
ret
ret
pushf
aam
aam
mov
iret
mov
sbb
xchg
mov
sbb
mov
rorb
std
inc
push
cmpsl
jp
mov
mov
in
push
xchg
bound
xor
inc
insb
jbe
outsl
ss
stos
popa
int3
cmp
pushf
ljmp
pop
jns
movsb
push
fisubl
jp
out
mov
xchg
arpl
push
mov
rolb
sbb
leave
sub
test
push
sahf
push
mov
xchg
out
inc
mov
sbb
in
ror
pop
lret
mov
cmp
loopne
pop
sbb
mov
stos
outsb
dec
lahf
xchg
push
pop
lret
arpl
dec
xchg
pushf
das
in
cmpsb
ss
jbe
sbb
nop
outsb
dec
lret
dec
iret
out
and
cmp
fucomip
jle
push
push
test
cmpsl
inc
xchg
jle
jb
movsb
xchg
js
xchg
aad
les
in
mov
push
dec
add
mov
shlb
jo
jl
ljmp
xchg
add
and
cmp
fcom
loopne
cmc
sub
dec
leave
ljmp
ficoml
mov
jns
mov
aam
sbb
lods
sar
mov
lcall
xchg
xchg
jp
sbb
xchg
mov
mov
loope
lods
cmp
or
xchg
sub
cmc
mov
or
mov
xor
sahf
push
aad
inc
and
pop
sub
mov
cmp
je
adc
lret
cmp
inc
mov
push
cwtl
pop
ret
data16
in
push
ljmp
jo
xchg
mov
js
push
das
ss
push
adc
cli
mov
xor
pop
jbe
push
push
ss
mov
inc
mov
stos
adc
push
cli
pushf
movsb
cmpsl
xor
mov
add
clc
cmp
inc
add
mov
ss
adc
movsb
push
dec
xchg
mov
xchg
sbb
mov
xor
repz
push
push
sbb
jg
sbb
cmp
out
out
push
gs
cmp
jb
xor
dec
sub
jb
in
adc
mov
pushf
push
mov
inc
xchg
orl
and
jle
xchg
push
pop
arpl
lcall
xchg
xor
dec
mov
aaa
and
aad
clc
mov
cmp
adc
push
jno,pt
stc
dec
adc
aam
push
fmull
xor
jl
aam
shrb
mov
pushf
js
in
and
test
sbb
mov
push
int3
sti
jle
lcall
mov
jbe
test
and
mov
mov
ss
mov
pop
ret
sahf
dec
cmpsl
jb
mov
sbb
pop
data16
dec
xor
sbb
xor
mov
sbb
test
sbb
pushf
add
or
adc
shlb
and
sbb
cmp
inc
mov
and
and
and
inc
loope
cmp
std
flds
fisubl
sbb
nop
cli
push
dec
push
mov
lcall
pop
notb
inc
ficompl
dec
or
ds
mov
ljmp
mov
sub
jb
es
ss
mov
mov
jae,pn
mov
sub
pop
add
and
andb
movsb
jg
aad
xchg
ljmp
test
ds
xchg
push
jecxz
mov
or
cmp
xchg
enter
dec
pop
mov
in
xor
enter
int3
and
push
add
fs
data16
jle
scas
push
std
dec
in
lret
test
dec
adc
shlb
inc
pop
add
jl
inc
lcall
lret
sbbl
addr16
in
mov
iret
sub
stos
jne
lock
xchg
xchg
and
sbb
inc
mov
pop
jge
dec
jae
sub
dec
cmp
dec
pop
push
stos
sub
pop
cmp
lock
xchg
inc
popl
xchg
ficoms
sbb
mov
and
and
ds
mov
inc
sar
xor
sub
faddl
xchg
mov
push
pop
icebp
mov
nop
xchg
mov
mov
gs
dec
or
and
push
xchg
pop
rcr
and
daa
mov
push
inc
or
fwait
popl
sbb
and
and
jns
in
ds
push
adc
rorb
jl
lods
cmp
mov
cli
mov
mov
jge
lret
xchg
mov
push
sbb
jnp
pop
cmp
mov
mov
lcall
push
mov
inc
test
dec
test
xchg
bound
dec
and
sbb
cmp
aas
loop
mov
fwait
pop
mov
push
movsb
xchg
in
inc
movsb
fdivp
add
in
xor
mov
mov
pop
shl
lahf
push
roll
cmp
xlat
push
mov
jl
lret
push
adcb
bound
push
jo
popa
lcall
aam
cmp
cmpsl
inc
nop
pushf
inc
and
dec
mov
pop
lods
in
mov
mov
pop
shlb
push
mov
out
push
inc
pop
pop
in
mov
dec
popa
push
jb
ret
cmpb
data16
test
jbe
into
mov
movsb
sbb
inc
mov
cmpb
enter
pop
je
test
jns
ret
orl
inc
push
lds
inc
xor
dec
mov
push
push
cmp
cli
in
mov
sahf
popa
rcrb
pop
jns
ds
add
aas
imul
es
cli
out
lds
shlw
jp
pop
dec
mov
or
jge
out
push
ficompl
or
lahf
cmp
lock
in
fisubl
out
pop
mov
adc
push
xchg
pop
mov
cmp
ret
cwtl
inc
in
pop
cmp
dec
iret
mov
pop
cli
lahf
push
ja
iret
and
pop
jne
es
inc
push
xchg
xchg
sub
lret
mov
iret
push
int
inc
mov
cmp
nop
in
mov
push
inc
jbe
cltd
add
std
sbb
cs
cmp
sbb
cmc
mov
rorb
aam
lods
aam
lahf
pmaxub
daa
push
xor
inc
xor
lea
mov
inc
mov
dec
push
jb
cmp
sarb
pop
mov
mov
loope
in
fsubr
adc
push
testl
jecxz
push
imul
cmpb
lea
jo
sbb
inc
sahf
lcall
ss
push
in
dec
push
mov
js
mov
xchg
xor
and
lahf
scas
fnsave
test
inc
out
notb
push
add
xorb
test
xchg
xor
push
mov
pop
jle
inc
cmpb
xchg
rorl
and
add
pushf
arpl
mov
lcall
cwtl
cmp
dec
cmp
into
pop
inc
std
push
aad
mov
pop
cmpsb
jb
xchg
adc
ret
push
mov
cmp
aad
mov
inc
push
pop
inc
movsb
mov
jbe
in
push
andb
aad
add
cwtl
sbb
sbb
shlb
outsb
mov
mov
pushf
cmp
xchg
pop
movsl
aaa
mov
pop
xchg
inc
xor
pop
call
mov
ss
ja
in
cli
inc
nop
in
cli
sbb
and
adc
xchg
push
cmp
push
out
pop
pop
inc
roll
jp
pushf
dec
orb
jbe
inc
adc
dec
sbb
inc
xchg
inc
xorb
and
lcall
dec
lret
iret
jb
mov
cmp
lcall
mov
jp
push
dec
cmp
sbb
inc
es
push
dec
movsb
shlb
mov
sarl
outsb
sar
fdivrl
add
inc
fs
push
pop
inc
popf
mov
pop
push
sbb
ljmp
imul
ss
push
cltd
ja
xchg
dec
lea
sbb
cmp
cmp
push
or
movsb
jl
outsb
mov
popa
sbb
roll
rorb
stos
ret
sbb
jb
stos
and
popa
daa
popf
mov
cld
inc
dec
arpl
sbbl
pop
inc
leave
dec
in
push
cmp
pop
jp
dec
mov
iret
push
mov
dec
mull
nop
and
and
lods
mov
dec
shll
sub
pop
mov
in
mov
aad
loop
inc
jp
jmp
push
cmp
add
xor
sub
push
mov
inc
pop
jl
sbb
push
pop
sbb
xor
or
cmpsl
xchg
andb
xchg
andb
dec
pop
ja
ss
fmull
hlt
sbb
out
ss
cmp
in
ds
fisubl
mov
movsb
mov
mov
ss
aam
sbb
repnz
inc
jbe
inc
mov
ds
pop
add
pop
push
jo
lahf
cwtl
mov
xchg
call
fsts
mov
jnp
dec
xchg
pop
movsb
dec
mov
lret
cmc
call
inc
daa
jbe
cmp
push
lcall
mov
jbe
xchg
cmp
mov
imul
jmp
test
push
cmp
sub
xchg
cmpsl
lret
adcb
mov
mov
dec
xchg
test
add
push
dec
scas
imul
mov
push
loope
js
stos
inc
lcall
fisttpll
mov
mov
mov
pop
inc
sub
lods
rorl
sbbb
aaa
and
lahf
or
push
inc
xor
xchg
orb
xchg
notb
mov
imul
dec
test
xchg
push
xchg
mov
mov
inc
inc
add
mov
in
jno
pushf
test
leave
or
or
cli
mov
addb
mov
loopne
xor
pop
cmpsb
push
xchg
xchg
push
ss
and
scas
pop
subb
inc
xor
out
sub
out
es
subb
pop
inc
dec
cs
and
push
rcrb
push
in
and
in
mov
mov
mov
cwtl
inc
cmp
mov
jo
xchg
xchg
fstps
lcall
push
ficomps
jp
jb
cmpsb
push
jle
jo
jle
lds
sub
sahf
mov
out
mov
arpl
push
jl
mov
lahf
ljmp
or
mov
loope
jb
in
jle
or
lods
inc
inc
imul
inc
push
pop
push
push
jecxz
mov
call
orb
je
sbb
xor
push
fstps
popf
push
and
xchg
mov
dec
push
and
or
mov
movsb
mov
jbe
jo
popa
adc
ja
in
sub
jle
cmp
insb
jle
aad
xchg
js
add
push
sti
push
push
mov
xchg
test
xchg
and
pop
mov
movsl
xorb
mov
inc
mov
jb
ficoml
aas
fcoml
movsb
cmp
out
cmp
fisubl
pop
ss
testb
mov
adc
idiv
xlat
sbbl
sbb
push
dec
jl
xorb
pop
adc
and
jp
dec
andb
mov
xchg
mov
or
xor
mov
inc
dec
ret
flds
orl
mov
icebp
jg
jge
or
push
inc
cmp
ja
pop
lock
orb
ds
push
ss
std
inc
push
pop
inc
adc
pop
fbld
rolb
sbb
and
test
xor
lret
push
push
jle
movsb
popf
mov
cmpsb
sbb
and
jmp
mov
les
mov
negl
cwtl
jp
jno
mov
jae
push
xchg
scas
ja
dec
dec
test
pop
sbb
xchg
scas
xchg
push
inc
pop
ljmp
cmp
cmc
adc
push
and
inc
fimuls
sub
push
xchg
xor
pop
outsl
out
mov
ja
js
jg
adc
call
repnz
nop
fldt
or
dec
mov
push
push
xchg
jb
add
or
aam
ret
adc
cmp
push
cwtl
mov
pop
jo
scas
aad
push
jbe
or
pop
rcl
inc
push
xor
lahf
ret
inc
loop
les
push
in
in
int
adc
sbb
xchg
sahf
xchg
pop
jp
cli
and
pop
and
cwtl
sbb
hlt
loop
cmpsl
xchg
cmp
cmp
jne
xor
adc
jae
push
rorb
push
pop
add
push
inc
cmpb
or
sbb
sbb
xchg
mov
out
scas
sti
or
jp
in
jns
rolb
test
mov
push
xchg
jno
jbe
mov
in
pop
sbb
push
inc
arpl
mov
inc
mov
decb
xchg
xchg
xchg
ss
pop
fnstsw
rcrb
and
scas
cmp
push
push
popa
or
inc
sub
iret
mov
xor
mov
js
xchg
mov
sub
or
push
inc
aaa
add
nop
cmpsb
filds
mov
ret
scas
dec
rolb
filds
or
xchg
js
jb
jl
adc
push
push
sub
addb
rclb
pop
and
outsb
dec
aas
or
mov
leave
inc
test
cmp
movsb
aas
jle
xor
dec
mov
in
sbb
mov
inc
pop
mov
popa
rolb
mov
cmp
inc
xor
pop
xchg
dec
dec
ss
ss
ss
in
pop
jo
mov
out
xor
aas
sahf
jp
cltd
xchg
xchg
inc
inc
dec
adc
fdivrp
movsb
cwtl
stc
push
outsb
ret
jbe
pop
push
jge
std
popl
mov
push
jo
movsb
push
xchg
mov
sbbl
sbb
mov
jle
xor
mov
sbb
inc
xchg
jle
pop
gs
shl
ds
out
sbb
inc
ficompl
pop
cmp
inc
roll
sub
movsb
ss
sub
js
cmpsl
aaa
and
sbb
cmp
mov
push
push
sahf
jg
jnp
push
xchg
pushf
movsb
xchg
pop
cs
xchg
test
mov
mov
push
ds
adc
aad
testb
lds
js
mov
push
inc
popf
out
xchg
aas
shll
jge
xadd
dec
mov
mov
inc
nop
lds
pop
ds
incb
lret
inc
adc
inc
es
cs
movsb
xor
mov
cmpsl
xchg
push
jo
mov
fisttpl
pop
push
dec
mov
ficompl
sbb
call
arpl
sub
pusha
inc
ds
push
and
jno
or
outsl
lcall
pop
xor
push
scas
xchg
arpl
mov
popa
jg
pushf
inc
imul
xchg
lcall
mov
jbe
addb
popa
push
pushf
je
rolb
or
and
jp
mov
sub
sub
into
lcall
inc
push
pop
mov
pop
ds
fidivrs
and
mov
mov
xchg
adc
lea
mov
andb
mov
push
or
sbbb
sub
lcall
lahf
jecxz
arpl
pop
mov
insb
inc
jge
xor
icebp
dec
and
dec
mov
cmp
nop
hlt
add
mov
lods
push
adc
addb
fwait
pop
sub
sarb
add
add
js
xor
out
mov
lcall
mov
xor
leave
push
mov
pushf
ljmp
sbbb
jle
and
xchg
int3
cmp
and
pop
inc
push
iret
in
jl
xchg
scas
les
pop
dec
shrb
push
mov
lahf
push
jbe
fimuls
pop
adcb
inc
aad
pushf
in
jmp
int
pop
jg
jo
and
cmpb
cmp
sahf
aam
iret
cmp
fdivrs
out
inc
jle
rcrl
push
pop
or
test
dec
andb
stos
test
sbb
sbb
push
ss
adc
cs
and
cmp
subb
push
shrb
rcrl
ret
js
and
pushf
orb
xchg
inc
push
pushf
pop
nop
push
pop
add
cmp
mov
fdivs
cmp
fwait
daa
push
pop
aad
lds
mov
andb
mov
gs
ss
test
mov
repz
in
push
cmc
add
push
dec
jne
jo
fnstsw
test
cmpsb
pop
mov
rorb
idivb
mov
test
dec
xor
mov
jp
mov
push
push
push
cmpsb
jge
nop
mov
jo
pop
adcb
dec
mov
movsb
test
inc
cld
xchg
dec
mov
xchg
pop
fisubl
in
push
ss
cmpsb
inc
ljmp
xchg
mov
or
pop
add
mov
fcompl
xchg
int3
in
lcall
dec
inc
mov
and
inc
inc
pop
aas
add
cmp
xchg
clc
test
into
lret
stos
xor
movsb
mov
nop
inc
lds
into
mov
push
add
cs
je
rorl
sbb
dec
mov
jnp
arpl
inc
aam
jl,pt
mov
push
fisttpll
ss
sbb
fildl
push
js
sahf
cli
pushf
test
sub
fdivl
dec
data16
xchg
in
in
add
fildl
xchg
push
cmp
xchg
dec
scas
pop
test
and
adc
les
dec
xchg
xchg
and
dec
mov
inc
xchg
mov
add
out
test
dec
jle
out
lcall
xchg
pop
or
shll
mov
cmp
ds
mov
xor
pop
nop
jae
push
ljmp
xchg
sub
and
in
mov
mov
xchg
andb
jns
push
mov
rcll
mov
lret
xchg
sbb
sbb
xchg
js
movsb
mov
pop
adc
enter
dec
mov
and
push
sbb
ss
push
mov
dec
out
cmp
mov
std
frstor
and
xor
cmp
and
adc
popf
ffree
sbb
imul
dec
mov
push
push
sbb
inc
aad
jg
add
loop
dec
scas
push
sub
sbb
pushf
jle
jg
push
cmp
jno
push
in
inc
ss
or
or
out
jae
imul
sbb
mov
push
jno
scas
push
aam
cmp
test
mov
and
dec
and
push
adc
push
in
push
int3
xchg
jp
jmp
push
int3
test
mov
fs
mov
lret
and
sbb
and
xor
loop
cmpsl
aas
pushf
inc
push
ds
push
pop
mov
jbe
mov
jbe
adc
lahf
les
les
sbb
ja
pushf
push
jne
add
bound
jbe
rorb
or
inc
jno
add
xchg
push
cmp
adc
lret
sbb
jbe
inc
aas
rcr
ss
call
mov
xor
push
bound
adc
call
mov
mov
cmpsb
mov
push
mov
dec
js
adcl
push
sahf
mov
insb
push
lods
les
mov
mov
ljmp
mov
xchg
mov
fmull
pop
xor
add
rclb
pop
and
jbe
fists
test
inc
aaa
nop
mov
mov
sub
and
push
cmp
cld
and
jb
ds
jp
dec
xchg
xchg
sbb
push
cmpsb
add
xorb
popa
push
mov
sub
push
mov
ljmp
movsb
arpl
inc
mov
mov
sbb
mov
xor
lret
stc
dec
and
xorb
xchg
pop
push
mov
nop
mov
cwtl
push
add
cmp
jl
xor
movsb
pushf
jle
or
aas
mov
pushf
adc
inc
jbe
rorl
mov
and
jo
into
lock
pop
push
xchg
sbb
pop
outsl
dec
dec
inc
add
inc
out
jb
and
xor
test
push
pop
jno
push
xchg
lcall
and
js
int
dec
mov
cltd
add
fiadds
lea
mov
fnsave
ds
ret
push
orb
jl
and
sub
ljmp
lcall
fwait
xor
addl
push
sub
xchg
push
add
cwtl
cmpsb
jbe
inc
cmpsb
sahf
jmp
int3
popfw
lret
jmp
bound
out
sbb
jb
daa
dec
or
add
mov
test
lods
in
lods
sarb
inc
lret
stos
daa
fistpl
and
call
aam
push
shlb
adcb
push
lcall
xchg
mov
in
test
push
or
sahf
inc
push
iret
push
cmpsb
adc
mov
popa
pop
stos
loope
jb
fnstsw
cltd
mov
incl
xchg
pop
push
popa
and
mov
ljmp
arpl
mov
aaa
in
in
add
inc
ds
mov
add
inc
test
lret
sub
xchg
test
add
mov
rcr
jmp
push
adc
xchg
decb
sbb
mov
pop
jmp
cmp
dec
push
test
ss
in
test
lret
lock
rcll
xchg
adc
scas
xor
aad
xor
sbb
sbb
in
fistl
cmp
rcrb
inc
out
mov
pop
xor
and
and
dec
dec
cmp
inc
pop
inc
cmpsl
data16
xor
cmp
movsb
mov
xlat
enter
test
mov
pushf
dec
push
pushf
jle
cmp
leave
jl
test
xchg
add
xchg
incb
js
xchg
sub
cmc
cmp
cli
arpl
aas
call
into
inc
sahf
xchg
cmp
out
popa
loop
inc
js
scas
inc
repz
cs
inc
in
cmp
xchg
sbb
xchg
mov
pop
add
stc
lret
outsb
dec
sbb
stos
and
sbb
xchg
jl,pt
scas
cmp
test
dec
jo
mov
xchg
lahf
bound
push
pop
dec
ror
cmp
into
leave
sbb
push
jmp
xchg
orb
insl
push
cwtl
test
lods
jmp
add
int
push
inc
out
mov
nop
or
push
adc
pushf
dec
sbb
xchg
push
xor
in
shrl
xchg
adc
adc
lcall
xchg
push
movsb
and
nop
sbb
js
les
pushf
jb
add
xchg
loop
ds
lcall
inc
jb
shlb
in
xchg
pop
sbb
mov
mov
loop
xchg
xchg
addr16
or
xchg
xchg
push
jle
sbb
inc
enter
push
mov
enter
cltd
js
xor
stos
xchg
dec
ss
push
andb
out
test
pop
mov
in
or
andb
ss
xor
xor
cmc
mov
inc
js
dec
inc
ja
push
cmp
xchg
cltd
or
pop
shlb
jle
sarl
cmp
lds
sub
lret
rcll
rclb
aas
gs
gs
dec
mov
sbb
inc
push
dec
in
mov
push
pop
dec
mov
dec
sbb
and
aam
pop
into
and
sbbb
pop
shld
in
and
pushf
out
mov
in
cmp
push
lret
add
jle
ret
jp
and
lods
xchg
cmp
push
sub
and
jle
xchg
and
int3
mov
lcall
pop
aam
inc
sbb
mov
test
les
push
xchg
xor
fdivs
pushf
js
loop
pop
inc
hlt
pop
xor
cltd
jmp
pop
xchg
xchg
test
dec
popa
push
ss
mov
arpl
jp
dec
mov
int3
pop
inc
xor
inc
and
mov
aam
inc
jae
aas
mov
shrb
xor
push
inc
fwait
inc
mov
jns
rcrl
push
arpl
lcall
mov
pop
arpl
push
mov
mov
dec
mov
hlt
xchg
addl
push
mov
sarb
push
inc
or
lcall
jl
addb
scas
int3
cmp
pop
xchg
mov
xchg
rcl
mov
and
adc
jl
addb
jmp
dec
xchg
push
scas
addr16
aaa
jo
push
inc
incb
cwtl
popf
mov
jb
mov
gs
pushf
sbb
fistpll
dec
arpl
and
push
test
jne
sbb
js
xchg
inc
ss
dec
mov
push
imul
add
mov
sbb
nop
cmp
inc
mov
iret
push
or
jns
mov
inc
push
orb
nop
or
mov
pop
mov
dec
adc
sbb
sbb
andb
adcb
pushf
jg
mov
fcmovne
mov
sbb
cmp
pop
shrb
int
xchg
fcoml
and
mov
xor
and
cmp
adc
push
pop
xor
inc
or
cwtl
and
mov
mov
xchg
movsb
in
mov
inc
xchg
pop
push
mov
push
or
movsb
pushf
mov
xchg
inc
xchg
inc
cmp
aaa
shlb
push
mov
addl
and
push
and
test
ret
lcall
dec
inc
xchg
test
or
cmp
pop
fcoml
out
jecxz
inc
jp
cwtl
cltd
out
push
or
xchg
sbb
int3
dec
xchg
nop
jle
hlt
lret
add
sahf
ds
xchg
lds
int3
jo
dec
push
roll
mov
pop
cld
mov
dec
cmp
sahf
push
outsb
jl
in
jbe
inc
mov
addr16
mov
mov
xchg
push
out
popa
dec
shlb
mov
mov
ret
push
jl
js
and
lcall
aaa
mov
jbe
adcb
movsb
in
loop
mov
mov
inc
shrb
fs
jge
and
popa
popf
mov
cmc
push
jbe
jp
ret
es
mov
mov
xchg
push
aaa
adc
aas
in
mov
dec
cmp
lcall
mov
fs
outsb
sahf
lock
ficoms
rcrl
inc
cmpb
test
xchg
or
add
mov
pop
and
cmc
mov
pushf
mov
or
fmull
pop
mov
and
adcb
enter
scas
inc
mov
push
sub
pop
lret
pop
sti
cmp
mov
xchg
shlb
movsb
cmp
dec
sahf
xchg
lret
add
jp
jno
inc
cmp
imul
inc
push
in
adc
loop
or
hlt
and
mov
mov
gs
sbb
xor
shlb
adcb
aas
movsb
mov
xchg
mov
movsl
sbb
jbe
jb
out
aam
push
mov
mov
inc
mov
popa
mov
or
insl
xor
mov
lea
rol
mov
mov
mov
lret
es
pop
cmp
mov
addl
xchg
add
in
cmp
sbb
jb
jbe
push
push
dec
cli
cmpb
rorb
int3
hlt
jecxz
and
ds
test
cmp
sbb
push
cmp
lds
vpsrad
insb
mov
pop
mov
aam
sbb
lcall
in
cmp
sub
ss
js
test
cmc
rorb
inc
or
sbb
lahf
mov
push
xchg
ret
push
pop
ja
or
inc
fldenv
sbbb
mov
stos
movsl
xchg
nop
cld
pop
lcall
stos
inc
sub
stc
xchg
adc
ret
push
pushf
cli
adcb
xchg
jbe
push
and
pushf
xor
mov
xchg
jle
adc
mov
sub
nop
test
and
jnp
or
ja
mov
adc
push
or
xchg
xor
cmp
add
push
lahf
in
nop
push
fwait
mov
fsts
rclb
and
pusha
mov
mov
fsubl
and
sbb
lcall
sbb
mov
jp
jne
adc
addl
xchg
cli
and
jo
mov
xorb
or
adc
sahf
aas
popf
cmp
scas
and
and
push
pop
test
push
or
sbb
pop
sbb
pop
cmp
sub
and
lock
in
movsb
filds
pop
adc
ficomps
sub
push
sbb
mov
ljmp
mov
cmp
push
mov
dec
sbb
sub
xchg
xchg
mov
jo
lock
pop
dec
pop
rcrl
in
push
adc
dec
in
lahf
or
mov
jb
sub
jbe
push
sahf
mov
loop
pusha
out
or
ret
cmc
jo
adc
rcrb
mov
loop
inc
mov
sbbb
inc
fisttps
and
mov
ljmp
jns
mov
xchg
and
jnp
fistl
mov
jo
add
dec
jbe
push
pop
divb
add
xchg
andl
fimull
dec
push
dec
test
pushf
sbb
inc
loop
ja
or
jb
cwtl
test
xchg
jmp
neg
cmp
adc
jo
mov
sbb
xor
inc
das
out
scas
dec
mov
mov
imul
push
pop
fimull
mov
andl
data16
nop
xor
pop
add
ds
add
jae
aas
fs
rcl
push
pop
cmpsb
inc
cmp
push
dec
adc
and
inc
cs
es
sbb
movsb
inc
pushf
stc
cwtl
mov
popa
out
fsubs
dec
push
and
dec
fbstp
cmpsl
cli
xchg
outsb
cld
pop
add
mov
xchg
lods
add
cltd
mov
sbb
loop
jbe
mov
and
enter
hlt
in
pop
xchg
and
pop
pop
pushf
add
dec
and
pop
jecxz
test
mov
mov
mov
repnz
cmpl
sbb
mov
mov
mov
sbb
cmp
enter
cli
out
nop
add
pop
jne
push
aas
mov
mov
popa
push
mov
rcrl
cmp
clc
es
jp
int3
jne
fidivrs
push
ret
ss
nop
adc
stos
xchg
sub
jo
pop
ljmp
scas
in
movsb
test
xchg
and
mov
call
ss
xor
fiaddl
pop
shlb
shlb
inc
xorb
cmp
cli
cmpsb
mov
cwtl
mov
dec
imul
inc
cwtl
push
push
outsb
inc
mov
mov
rol
push
mov
inc
jl
pop
fwait
or
pop
loop
add
jp
stos
pop
mov
and
mov
aas
add
out
cmp
mov
cmp
or
mov
adc
mov
add
cmp
mov
lds
imul
pop
mov
push
ret
outsb
shl
push
hlt
test
inc
inc
test
push
popa
cmp
lds
jb
or
sbb
cmpsb
fstpl
cwtl
in
jle
into
sbb
scas
mov
ds
sub
js
jo
xchg
ss
sbb
or
insl
sub
sbb
push
or
sub
xchg
in
cmp
xchg
aaa
dec
mov
push
push
sbb
push
dec
mov
xchg
add
inc
mov
or
pop
inc
pushf
jb
push
stc
cmp
cmc
mov
popa
loop
adc
cmp
inc
hlt
cld
mov
mov
stos
aad
and
fisubrl
and
mov
pop
outsl
inc
jl
cmp
test
fisubrs
out
inc
lcall
inc
xchg
ljmp
nop
cmc
and
in
jo
push
push
pushf
and
push
mov
hlt
mov
negb
outsl
aad
fwait
jo
dec
andb
xchg
push
jb
inc
call
xchg
adc
sahf
int3
pop
arpl
movsl
fnsave
sbb
mov
mov
mov
sub
xchg
sub
lods
daa
jmp
movsb
adc
clc
divl
cmpsb
xchg
jnp
adc
xor
push
inc
xchg
mov
cmpsb
pushf
ss
xchg
or
aas
cwtl
pop
dec
pop
aad
sbb
xchg
sbb
xchg
pop
mov
cwtl
pushf
push
or
lods
push
mov
mov
dec
push
pop
inc
mov
or
xchg
ljmp
aaa
inc
adc
sbb
fchs
xor
cli
cwtl
push
inc
push
movsl
or
andl
int
push
inc
shl
sbb
pop
mov
ret
pushf
xchg
cltd
push
ret
mov
push
or
lcall
jo
inc
inc
adc
mov
aaa
xor
or
mov
ss
ss
dec
xchg
add
xchg
mov
mov
add
lods
sbb
clc
dec
adcb
jb
push
mov
mov
add
test
xor
inc
jl
mov
push
mov
add
xchg
mov
and
mov
cmp
lahf
mov
pop
ds
cmpsl
cmp
dec
sahf
or
ficoml
fwait
lods
and
aad
movsb
dec
and
pop
pop
fs
lods
loop
fmulp
jg
dec
lcall
xchg
pop
testb
sahf
cmp
pop
dec
pop
lods
enter
out
nop
lret
sbb
fistpl
jno
mov
cmp
fiaddl
and
inc
mov
neg
add
dec
xchg
and
js
ss
jno
mov
push
faddl
cmp
aam
xchg
jle
mov
jb
cmpsb
add
aad
xlat
inc
out
inc
arpl
jo
and
xchg
test
xchg
push
push
ror
movsb
mov
jge
jmp
mov
xlat
inc
pop
pop
add
inc
bound
inc
inc
int3
xchg
test
xchg
mov
fstpl
xor
inc
inc
jb
sub
pop
daa
xor
pushf
lcall
lds
xchg
mov
cmp
popf
and
ljmp
in
adc
pop
adc
jp
movsb
cmpsb
push
inc
mov
xchg
dec
push
and
cmp
jl
in
fstps
mov
lods
loop
add
dec
dec
std
repz
stc
inc
pop
adc
xchg
sub
mov
mov
testl
fcoml
pop
ja
cli
cmp
pop
std
ret
inc
lcall
push
or
es
mov
inc
in
xchg
mov
inc
jbe
js
xchg
sbb
mov
shlb
aaa
gs
dec
cmp
push
jmp
inc
adc
mov
jge
dec
or
inc
pop
or
push
push
ds
cmp
xchg
jo
mov
adc
movsb
orb
jmp
fldt
cmp
adc
push
mov
jb
rcr
sahf
xchg
int3
es
movsb
mov
inc
xchg
out
mov
aam
and
stos
pop
pushf
mov
jl
fwait
daa
ss
cmpsb
mov
cmp
out
iret
mov
cmp
dec
arpl
test
mov
push
clc
xchg
inc
push
push
leave
cmpl
popa
int3
mov
cmp
pop
fimuls
ds
cwtl
mov
dec
cli
pop
mov
std
mov
ss
pop
inc
loopne
add
push
jne
pusha
mov
mov
and
add
xor
xchg
xor
jne
jmp
inc
lret
cmc
xchg
pop
rcrl
outsl
xor
and
push
lret
cwtl
adc
aam
and
sbb
xor
mov
lahf
mov
iret
addr16
jmp
jg
jl
xchg
or
loope
ss
xlat
je
call
aad
mov
xchg
push
xchg
pop
or
mov
xchg
aas
int
arpl
jb
mov
mov
jb
jns
nop
add
aam
push
mov
pop
ss
loope
sbb
push
push
mov
ffree
cmpsb
adc
scas
mov
pop
cmp
jb
test
gs
mov
inc
shlb
pop
pusha
xchg
xor
inc
cmp
sbb
mov
mov
jo
rorl
sub
outsb
pop
or
out
out
fimuls
ja
sbb
es
sahf
dec
ljmp
js
inc
mov
adcb
aas
divl
pop
les
and
inc
sbb
sub
pop
sbb
mov
fdivl
push
pop
aam
dec
in
ljmp
outsb
push
out
lcall
js
and
out
sti
ret
xchg
aas
pop
pop
jbe
testb
es
mov
mov
sbb
mov
lcall
sbb
pop
sbb
xor
dec
jp
mov
push
xchg
mov
inc
aam
inc
mov
dec
fiadds
xor
mov
pop
cld
inc
andb
lds
xchg
call
mov
or
cli
cwtl
xor
sbb
adc
loope
cmpb
in
push
push
jecxz
jl
inc
cmpsb
xor
scas
xchg
out
cli
fnstenv
mov
shll
inc
or
lret
dec
inc
mov
mov
pop
cmp
jb
in
push
inc
in
cmp
out
adc
clc
xchg
rorb
popf
xchg
insb
loope
adc
notl
out
cmpb
popa
rolb
jb
xchg
mov
ja
and
inc
cmp
aaa
mov
pop
ljmp
push
sbb
les
lods
js
jp
cmp
in
add
cmp
cmpsl
or
push
xchg
push
mov
xchg
jbe
add
int
scas
xchg
jp
sbb
loop
dec
push
aam
test
lahf
push
repnz
rorl
and
xchg
push
or
roll
sbb
inc
jp
jnp
sbb
xchg
push
aas
mov
aaa
and
jle
mov
adc
jp
daa
xchg
fnstenv
mov
in
push
pushf
jb
ds
inc
pop
pop
push
xor
or
jge
adc
popw
jle
xor
xchg
xor
scas
popa
stos
jb
xchg
dec
cmp
sbb
mov
call
pop
lahf
jg
xor
xorb
sbb
xor
popa
outsl
cmp
adc
push
adc
lcall
cmp
shr
push
shlb
frstor
or
xchg
scas
aad
leave
sbb
jo
pop
push
hlt
jbe
out
das
pop
nop
addl
xorl
divb
dec
popa
scas
fsubrs
fcmovnu
aaa
ja
in
cmp
dec
xchg
mov
sahf
and
leave
push
insl
or
sahf
les
cmp
push
adc
xor
push
xchg
lcall
imul
xchg
xchg
rcrb
sub
push
adc
add
mov
dec
jbe
dec
pop
cs
imul
push
rorb
ss
imul
mov
cmp
lcall
dec
push
sbb
sbb
lods
test
gs
xchg
lret
js
stos
frstor
adc
out
inc
dec
pop
mov
mov
fcmovne
sahf
insb
out
or
xlat
in
mov
cmp
shlb
cmp
mov
aaa
xchg
pop
mov
ret
jle
or
lds
mov
push
xchg
or
xor
cwtl
fcmovu
mov
mov
bound
xchg
or
arpl
cwtl
test
push
jmp
nop
and
scas
out
inc
ja
xor
inc
cmp
movsb
mov
inc
cmp
mov
mov
dec
jbe
mov
mov
ljmp
dec
into
sahf
loopne
mov
push
dec
loope
cmp
xchg
ds
inc
dec
pushf
xchg
dec
aad
outsb
push
lea
mov
mov
xorl
xchg
out
sbb
pusha
out
dec
in
xchg
push
in
mov
inc
andb
arpl
loop
ja
in
jp
rorl
cmp
jno
pop
mov
mov
pop
push
roll
call
movsb
pop
dec
jl
nop
pop
fmull
mov
push
cmp
inc
dec
cltd
ss
dec
jb
das
mov
push
xchg
sub
std
push
orb
inc
inc
sbb
sbb
fimuls
cs
pop
stos
fidivs
dec
or
push
and
mov
cmp
add
call
push
lret
ret
pop
lcall
test
in
mov
xchg
push
pop
dec
movsb
in
dec
jo
inc
scas
jo
mov
cwtl
add
xchg
shll
lret
xor
sahf
inc
aaa
sbb
pop
xor
jbe
clc
mov
mov
rcll
xchg
orb
xchg
mov
jp
cltd
push
mov
dec
or
xchg
andb
adc
inc
movsb
pushf
push
js
fs
xchg
push
xorb
xor
mov
jl
push
inc
xchg
stos
pop
push
jl
adc
dec
ss
mov
movsb
cmp
and
dec
xor
sbb
jp
mov
sahf
cmp
push
cmp
mov
es
or
shlb
pop
dec
test
clc
push
jo
dec
cmp
mov
mov
inc
cmp
rorb
fcmovbe
outsl
mov
pop
rorl
mov
dec
adc
cmp
inc
mov
lret
pop
add
jle
mov
adc
imul
daa
inc
dec
mov
mov
or
pop
test
ret
inc
lahf
imul
and
cwtl
xchg
push
rcrb
sbb
addb
push
jle
cs
mov
mov
cmp
pop
or
sbb
and
out
sbb
xchg
xchg
movsb
add
jecxz
aad
cmp
mov
inc
xchg
notl
mov
adc
ss
js
arpl
xchg
jecxz
xchg
inc
sub
sbb
and
xchg
in
sub
in
shll
mov
sub
aam
aam
lret
xchg
pop
aas
xor
in
mov
popf
in
loop
inc
shll
aas
mov
or
stos
mov
aad
inc
dec
inc
lcall
out
xchg
xchg
test
pop
push
in
loop
ret
in
push
ss
stos
stos
xor
xchg
fcomi
ror
mov
dec
xor
inc
or
faddl
lcall
push
jle
mov
pop
out
out
mov
movsb
cwtl
lret
dec
and
lock
xchg
push
adc
xchg
test
or
stos
ss
pushf
test
xchg
loope
inc
stos
fdivr
push
dec
in
addr16
mov
fs
mov
js
mov
dec
cmpsb
jecxz
xorb
inc
fnstsw
nop
arpl
pop
jge
lods
cwtl
out
push
mov
jae
sbb
aas
lock
mov
cmp
sbb
pop
inc
and
sub
mov
sbb
mov
pop
aas
mov
cmp
push
inc
push
jmp
test
in
mov
imul
inc
xor
movsb
or
clc
fidivrs
ret
push
arpl
cmp
add
sbb
pop
movsl
cmp
pop
adc
das
scas
inc
mov
inc
adc
push
cwtl
ds
dec
fwait
sbb
add
adcb
push
mov
aas
call
mov
dec
xchg
xor
jbe
sbb
or
fdivp
cmc
cld
ds
stos
push
das
sahf
xor
push
add
dec
lcall
xchg
mov
into
ficompl
into
xchg
sahf
sub
daa
push
cmp
jo
in
decb
lret
out
adc
and
notl
jl
sbb
and
xchg
ficoms
push
jecxz
add
mov
jno
lock
lods
xorl
repnz
dec
sahf
cmpsb
xchg
sbb
js
fimull
nop
mov
mov
mov
mov
xor
test
ret
pop
push
sbb
jns
movsb
cld
mov
hlt
mov
or
movsl
rcrb
in
andb
xchg
ss
push
int3
dec
dec
daa
fcompl
mov
mov
ret
push
jbe
xchg
in
fdivr
sub
dec
test
cmp
out
xlat
ja
sbb
ja
xchg
push
addr16
dec
jb
nop
sub
pushf
sub
rorb
scas
mov
jl
xchg
push
jle
aaa
mov
or
sub
repnz
pop
cmpsl
ds
adc
xchg
add
cld
mov
lcall
int3
test
jl
mov
iret
call
insb
pop
sbb
sarb
mov
push
push
andl
add
sbb
push
dec
inc
mulb
cmc
mov
test
jae
and
das
ds
push
mov
xchg
dec
popa
subl
ret
sub
out
mov
in
jne
xchg
ss
fimull
mov
std
test
inc
movsb
rorl
jbe
inc
mov
pop
xchg
sahf
test
in
cwtl
movsb
and
sbb
jle
xchg
inc
xchg
mov
loop
in
sbb
pop
cmp
jb
ds
mov
and
mov
push
scas
cmp
pushf
mov
add
fisubs
jo
mul
inc
jp
or
cli
loopne
push
aam
and
mov
popa
push
cmpb
pop
add
cmpb
mov
sbbl
xor
sbb
lcall
lds
loopne
sbb
ret
inc
mov
andb
xor
jle
cmp
lret
push
sahf
ret
movsl
leave
test
mov
jb
add
mov
stos
clc
inc
movsb
pop
pop
rcrl
mov
and
push
inc
aam
xchg
mov
iret
test
lods
mov
cwtl
jp
fcompl
dec
pop
sbb
gs
popa
mov
mov
ret
dec
movsl
push
mov
jae
push
push
js
pop
and
pushf
ds
pop
mov
clc
sub
sbb
dec
inc
inc
in
movsb
jo
out
inc
in
cwtl
xchg
aam
pop
sbb
cld
cltd
xor
push
psubq
mov
roll
inc
push
jb
push
sbb
mov
test
mov
and
dec
sub
adc
jbe
dec
mov
cli
dec
js
fimull
xchg
and
mov
dec
jb
in
dec
pop
aam
cmp
sahf
and
pop
sub
sbb
call
jle
repz
jg,pt
in
xchg
xchg
inc
aaa
push
push
cmp
inc
ja
cs
jecxz
arpl
push
test
jne
movsb
test
in
pop
add
loope
pop
adcl
xor
aas
and
xchg
jp
xorb
jp
dec
lods
cmp
xchg
ss
dec
sub
ds
pop
push
mov
in
jmp
cmp
sahf
outsb
push
sub
negb
loop
jl
adc
cwtl
xchg
and
inc
inc
outsb
pop
scas
add
ss
jne
cmp
mov
pop
push
fidivrs
push
js
inc
pop
sahf
cld
movsb
dec
push
cmp
add
mov
bound
inc
or
dec
cmp
test
and
add
sub
mov
lds
jp
mov
cli
push
mov
jns
adc
mov
xchg
sti
lds
inc
xchg
and
sub
stos
mov
popa
ds
fmuls
rol
xchg
xchg
adc
sbb
add
mov
mov
xchg
das
dec
aad
xlat
gs
cmp
xchg
dec
js
xor
nop
mov
mov
out
xchg
arpl
mov
int3
xchg
mov
cmpsl
pop
movsb
dec
cmp
pop
add
addb
xor
xlat
ss
repnz
push
gs
nop
loope
daa
push
and
jns
jnp
pop
adc
pop
push
in
iret
sbb
lret
pop
add
insb
les
pop
out
sub
popa
or
push
cmp
in
push
lds
cwtl
mov
stos
mov
dec
mov
mov
cmp
in
call
nop
jae
addb
loope
movsl
leave
push
pop
xchg
push
outsb
dec
popf
xor
jb
cmpsl
push
jbe
mov
push
pop
arpl
test
inc
mov
stc
inc
ljmp
popf
push
sbbb
inc
dec
inc
andl
in
nop
push
andb
out
push
mov
inc
mov
arpl
outsb
xchg
outsb
or
popa
inc
andb
pushf
movsb
pop
mov
cmp
test
mov
pushf
mov
push
jmp
dec
std
add
mov
out
test
or
fucom
xchg
scas
sbb
sbbb
dec
jp
xchg
jl
and
cmp
inc
cwtl
mov
jp
andb
and
and
xchg
pop
push
daa
stos
adc
adc
push
out
or
fdivrl
push
mov
xchg
pop
popa
dec
xor
push
jle
rcrb
jb
xchg
sub
pop
jl
lcall
imul
aaa
inc
popa
mov
shll
ret
add
push
pop
xchg
and
sub
cmp
jnp
in
aam
pushf
rcr
lods
ja
push
lcall
push
sub
xchg
lds
dec
sbbl
mov
ss
xor
xor
push
subb
sbb
cwtl
xchg
jp,pt
daa
or
test
adc
cmp
scas
loop
scas
cmpsb
decb
or
scas
push
xchg
incl
mov
xchg
pop
dec
aad
outsl
lock
sbb
ret
sbb
push
xor
mov
pop
ja
push
in
mov
pop
adc
loop
ret
xchg
push
rolb
cwtl
lret
pop
mov
jl
ja
loop
inc
ret
cmp
xchg
aam
mov
popa
iret
push
rcl
cmp
cmp
jb
push
push
sahf
xchg
fdivrl
dec
dec
shlb
stos
cmp
stos
xchg
xchg
inc
xchg
jl
xchg
sbb
cwtl
mov
xor
and
xchg
loope
xor
jns
shl
and
arpl
or
mov
loope
cltd
or
out
xor
dec
insl
and
cli
in
push
push
jo
jge
dec
push
jbe
inc
outsb
dec
jl
mov
mov
mov
push
push
test
js
cmp
pushf
push
jae
iret
mov
test
ds
push
jp
sbb
jecxz
out
data16
push
fs
pushf
addb
mov
jl
cmp
jl
cmp
daa
xchg
in
sahf
inc
jp
inc
mov
aam
arpl
or
sbb
lods
inc
gs
cmp
adcl
push
sbb
sbb
pop
push
cmp
into
test
sbb
popf
xchg
movsb
mov
fbld
push
lods
mov
mov
lret
pop
orb
xchg
pushf
dec
pop
bound
xchg
mov
push
daa
push
mov
popa
aas
ja
mov
jo
inc
inc
pop
pop
xchg
aas
inc
sbb
in
sahf
mov
mov
rcl
sub
subb
push
out
xchg
sbb
movsl
shlb
arpl
sub
roll
add
pop
jbe
addb
jp
jle
xor
cmp
xchg
add
mov
mov
adc
push
fstl
dec
adc
in
mov
jl
inc
pop
sbb
pushf
cmp
push
das
inc
push
add
push
popa
push
lds
arpl
mov
mov
or
sbb
pop
pop
sbb
or
mov
pop
mov
jp
and
ljmp
mov
test
in
or
ss
push
push
rclb
or
push
mov
ljmp
mov
and
movsb
pop
into
xchg
pop
jbe
rcl
andb
push
test
andb
mov
xor
pop
ja
lcall
inc
xor
mov
jmp
and
fwait
ds
pop
jge
lret
pop
cli
or
jnp
dec
sahf
inc
push
xchg
add
gs
sbb
ds
mov
sub
xchg
jp
mov
dec
mov
mov
test
cmp
and
sbb
movsb
aaa
imul
push
and
and
dec
pop
loop
nop
sbb
mov
cmp
add
inc
and
mov
mov
js
sbb
leave
out
push
mov
inc
adc
push
dec
aas
bound
and
mov
xchg
mov
lret
aad
movsb
dec
xchg
es
inc
pop
cmp
dec
inc
pop
ljmp
mov
add
cs
test
js
stos
jmp
add
lods
add
lock
movsl
pop
cmp
inc
mov
pop
xchg
add
cmp
mov
inc
xor
mov
inc
stos
mov
dec
in
jmp
inc
and
testl
ljmp
int3
int3
sbb
js
mov
pop
push
inc
orl
ds
ret
popa
lcall
sahf
in
stos
ret
xchg
dec
pushw
mov
jl
cmp
add
ds
xchg
pop
int
dec
push
inc
cwtl
or
jnp
pop
xchg
mov
inc
sti
push
je
xchg
xor
movsb
or
dec
or
js
push
sbb
in
pop
mov
dec
jl
arpl
xchg
jo
pop
stos
cmp
and
cwtl
mov
jb
shlb
mov
mov
pop
cmp
mov
js
scas
add
jl
inc
inc
mov
push
mov
and
jb
pop
xchg
jnp
ficomps
stc
xor
jg
jae
loope
add
push
push
pushf
rcll
dec
movsb
cmp
fldl
sbb
out
mov
adc
dec
adc
sbb
lret
sub
rorl
mov
mov
dec
inc
sahf
mov
or
mov
notb
xchg
push
dec
mov
jb
stos
aas
jle
test
sub
add
push
xchg
popf
dec
sahf
mov
dec
ss
ret
out
mov
mov
sub
xchg
xlat
nop
jo
out
pop
fisttpll
sub
push
or
xchg
sbb
mov
pop
jle
cmp
pusha
movsb
add
addb
and
test
dec
cmp
movsb
bound
add
xchg
dec
mov
aaa
insb
loop
mov
pop
mov
xorb
fistpll
popa
inc
dec
cmp
adc
xor
mov
jo
lds
fisubrl
mov
and
test
or
xchg
nop
pop
inc
in
sbb
jne
jo
stos
cmc
dec
rorb
jecxz
jp
adc
inc
aad
lods
test
pop
xchg
sbb
stos
mov
dec
shll
jb
stos
push
fcompl
call
mov
pushf
test
mov
loop
fidivrs
xor
push
pop
inc
es
arpl
push
and
xchg
dec
jno
in
mov
mov
idivb
xchg
adc
jno
ds
pop
lcall
sbb
imul
inc
cmp
push
movsl
jcxz
ja
sub
mov
fistl
add
ret
cmp
cmp
push
nop
lret
and
cmp
ss
mov
add
call
mov
movsb
dec
fsubl
and
call
inc
push
mov
jmp
inc
inc
adc
push
inc
insb
sbbb
mov
inc
xchg
in
or
lds
inc
mov
or
ljmp
lret
rorb
xor
sbb
inc
cwtl
iret
sahf
pop
into
lods
inc
pop
add
cmpsl
imul
xorl
push
inc
mov
mov
or
sbb
sbb
push
lret
and
movsb
xchg
pop
xchg
cwtl
test
jp
push
pop
jg
pop
mov
sahf
imul
jo
jnp
int3
arpl
inc
lds
fwait
mov
mov
and
push
mov
cld
push
jp
xchg
push
cmp
push
sbb
sbb
xor
mov
sti
push
adc
test
fidivrs
xchg
gs
jns
cmp
and
rorl
jb
sarb
mov
decb
xchg
mov
inc
popf
mov
add
lret
outsl
aaa
pop
mov
or
mov
in
inc
scas
stos
xchg
aad
testb
mov
mov
mov
ret
gs
mov
pop
inc
cmp
bound
push
dec
xchg
mov
sbb
addb
mov
cmp
inc
pop
shll
mov
push
xchg
xor
and
ss
fcoml
cmpl
jg
cmp
mov
jbe
push
call
xchg
add
js
and
add
xchg
popa
push
mov
inc
mov
mov
gs
xchg
aad
call
popa
dec
sbb
lahf
ss
icebp
rcrl
mov
sbb
mov
push
es
mov
push
cmp
cmp
pushf
int3
mov
popa
push
inc
mov
lcall
ret
inc
inc
mov
les
pop
pushf
dec
mov
movsb
mov
out
dec
lahf
pop
aad
fs
sbb
inc
ret
andl
lods
jbe
push
pop
nop
inc
lret
addb
push
incb
jl
push
sub
in
push
lahf
push
sahf
adc
xor
inc
mov
pop
lds
push
push
gs
cs
mov
xlat
jb
sub
push
scas
jle
jo
ret
xchg
lcall
xchg
xor
popa
push
adc
dec
adc
pop
pop
cmpb
pop
mov
notl
mov
mov
jnp
test
inc
inc
xor
lock
mov
mov
jb
sub
mov
movsb
push
cmpsl
sbb
js
xchg
aas
fbstp
mov
ret
cmp
inc
mov
cmp
loop
or
rcl
xor
or
pop
mov
jl
lret
daa
mov
pop
leave
or
int3
and
mov
test
lds
add
loope
mov
add
popa
push
push
fwait
pushf
orl
push
dec
jbe
jnp
cli
xchg
addb
jmp
in
cwtl
ficompl
adc
xchg
cmp
xorb
lcall
rcrb
mov
cwtl
mov
insb
call
add
fnsave
mov
cs
and
mov
mov
xor
mov
rcl
mov
xchg
push
cwtl
fstpt
push
inc
lahf
sbb
aad
ljmp
pop
clc
out
lds
aad
or
dec
dec
ljmp
in
lret
shlb
dec
push
push
pop
mov
shll
add
inc
ds
inc
jle
cmp
xor
xchg
pop
jl
or
cmp
xorb
test
jg
nop
jbe
push
mov
jl
cmp
mov
movsb
ja
adc
dec
addb
mov
push
and
mov
pusha
pop
inc
frstor
mov
cmpsl
push
mov
mov
js
inc
xchg
inc
pop
fisttps
dec
iret
sarl
movsb
jp
xor
pop
mov
lret
lods
mov
rcrl
cltd
ja
ss
repz
pushf
dec
mov
dec
dec
sub
push
fisttpl
mov
sbb
add
jns
push
sbb
xchg
sub
or
add
mov
ds
inc
push
xchg
outsb
mov
or
mov
mov
and
adc
out
shll
mov
mulb
mov
pop
xor
fbld
movsb
andb
push
clc
dec
and
mov
rclw
das
mov
push
fnstenv
out
dec
movsl
in
push
mov
mov
mov
sbb
dec
cmp
jle
or
sub
cmpsl
cmp
andb
add
jle
fistl
mov
adc
cmp
push
mov
cmpb
cmp
ja
cmp
lret
xor
xor
inc
mov
xchg
mov
cli
roll
loope
adc
out
std
sarl
imul
and
cmp
sbb
nop
xchg
cld
jle
mov
shrl
test
mov
dec
dec
dec
push
mov
sub
dec
sbb
jb
push
push
sub
mov
cwtl
pop
les
inc
das
jbe
or
test
xor
jne
mov
xchg
pop
inc
jae
xor
aas
mov
sub
pushf
cli
push
xchg
popa
mov
dec
in
xchg
push
cmpsl
xchg
arpl
movsb
xchg
test
inc
xchg
xchg
xchg
dec
pop
cs
push
adc
orb
or
and
aad
mov
ret
dec
push
test
ljmp
dec
cld
fwait
outsb
shlb
add
push
xorb
addb
cmpsl
jle
js,pt
sbb
inc
xor
sbb
in
orb
or
lret
pop
sub
loope
add
nop
outsb
sbb
bound
add
pop
popf
shll
mov
ja
xchg
sub
loop
cmp
or
ja
mov
cmp
imul
xchg
out
js
push
fildl
cmp
js
rorb
mov
pop
ficoml
push
mov
fldenv
aam
push
sarb
and
cmc
cmp
sub
sar
lock
inc
mov
mov
cld
lcall
and
addb
jl
inc
bound
movsb
push
inc
mov
xchg
fsubrp
sbb
mov
test
iretw
pushf
inc
xchg
push
outsb
push
data16
in
lret
and
mov
lods
xor
jbe
and
cs
push
int3
cmp
mov
or
clc
xor
add
push
pop
mov
pop
inc
shlb
dec
push
arpl
test
jo
sub
xchg
pop
mov
jecxz
cmp
mov
xchg
rorb
stos
loop
mov
ret
xchg
inc
popf
out
adc
in
and
pop
pop
mov
aad
ss
in
push
dec
cmp
pop
mov
andb
xchg
lret
pop
dec
popf
loop
cmc
cli
dec
bound
cmp
sbb
inc
sahf
jle
pop
add
cmp
push
inc
dec
das
inc
push
adcb
dec
and
mov
enter
subl
push
mov
push
lds
movsb
cmp
addb
or
mov
rolb
sub
push
loop
cwtl
or
add
add
fucomi
rcrl
inc
cmp
mov
adc
pushf
push
and
pop
test
mov
cs
mov
dec
push
loop
cmc
out
push
jns
mov
push
ret
push
inc
cmpsb
cmp
add
xchg
push
sub
pushf
pushf
leave
sahf
jcxz
cmc
iret
fcoml
jmp
jp
nop
pop
inc
in
cmp
pop
cmp
pushf
mov
ret
ret
ss
ret
inc
movsl
rorb
ret
dec
push
mov
ljmp
aaa
inc
dec
xchg
sarb
jbe
xchg
ss
dec
mov
pop
inc
or
jp
and
xchg
inc
ss
inc
sbb
and
xchg
adc
inc
or
scas
sub
mov
pop
mov
dec
inc
aam
push
movsl
mov
in
lcall
insl
and
jae
fs
pop
mov
in
cmp
ret
lea
inc
jge
icebp
push
inc
stc
xchg
pop
pushf
scas
pop
popa
dec
mov
xchg
mov
ret
xor
dec
and
jg
add
incl
xor
push
jp
dec
cltd
mov
arpl
lods
jmp
lea
mov
inc
cmp
dec
dec
xor
mov
pop
mov
mov
incl
push
cmc
inc
popa
xchg
cmp
in
add
jnp
mov
dec
sbb
xchg
mov
xchg
add
lea
jge
fcmovnu
dec
pop
push
xchg
loope
fistl
orb
inc
mov
mov
scas
insb
pop
inc
sbb
xchg
test
mov
mov
mov
cmpsl
push
sbb
adc
mov
push
arpl
aam
push
mov
xchg
mov
adc
ss
lods
jp
push
lret
cmp
fucom
ficoml
rorb
push
pop
push
sub
ret
jo
dec
sbbb
testb
cmp
pop
cmpsb
xchg
jo
and
mov
mov
pop
mov
jno
scas
sbb
add
iret
mov
push
arpl
outsl
sub
jo
xchg
jb
gs
pop
add
dec
xor
and
pop
dec
mov
iret
ret
iret
mov
and
addr16
repnz
stc
mov
mov
sub
pop
push
movsl
inc
sahf
daa
xchg
in
push
in
sbb
and
cmp
mov
dec
and
xchg
jb
les
add
mov
add
push
inc
ss
jg
cwtl
xlat
inc
pop
jbe
mov
xchg
mov
adcl
xchg
lret
loope
mov
insb
js
aam
push
rcll
rcrl
push
xchg
jbe
ljmp
stc
push
data16
sub
inc
dec
aaa
nop
sbb
push
fnstcw
dec
sbb
ljmp
cmpsb
jmp
in
ds
mov
mov
jg
in
mov
inc
addb
dec
gs
xor
aam
ss
imul
push
lds
mov
js
inc
adc
xor
jle
pop
iret
cmpsb
cmpsl
rcll
mov
lahf
dec
dec
cmp
ficomps
inc
aad
and
pop
mov
sahf
popf
mov
mov
arpl
test
cmc
ds
mov
rcrb
jl
shl
je
pop
pop
shrl
pop
mov
mov
xchg
cmp
fmuls
leave
lahf
arpl
mov
pop
test
pusha
add
rolb
mov
mov
pop
mov
mov
aad
lret
push
aas
push
test
sbb
cmpl
lret
adc
push
cwtl
shr
xchg
and
ror
ja
mov
push
sbb
pop
stc
gs
pop
je
loop
inc
add
movsb
mov
pop
rorb
xlat
mov
cmp
shll
sbb
xchg
sahf
es
cmp
sub
mov
ret
hlt
mov
push
sbb
jle
jp
and
and
mov
ss
arpl
cmp
jb
push
pop
inc
out
inc
xor
push
lods
mov
rcrb
jecxz
ss
dec
fidivl
mov
and
mov
mul
jbe
jg
pop
mov
pop
pop
loope
adc
mov
stc
push
sbb
rolb
xchg
mov
adc
fisttpl
jmp
out
push
nop
movsb
ds
push
movsl
ficoml
inc
loope
int3
cmp
dec
ret
adc
push
mov
and
mov
lahf
cmp
xchg
aas
push
mov
inc
dec
and
stos
popa
mov
xchg
nop
in
inc
stc
push
sub
cwtl
sbb
out
pop
loopne
int
stos
dec
push
sub
ljmp
mov
sti
insl
int3
mov
mov
imul
mov
add
mov
test
jle
test
cmp
movsb
jl
ret
scas
mov
int3
cmp
rcl
or
push
stos
sub
mov
int3
inc
mov
lcall
fistps
inc
xchg
xchg
ret
or
pop
arpl
xchg
lea
xorb
adcl
je
int
fstpt
das
rcll
or
insb
or
inc
lcall
aam
pop
mov
shlb
call
mov
test
mov
cmp
fistpl
ret
cmpl
mov
jp
mov
cwtl
jge
push
and
xchg
shrb
add
mov
adc
cmp
rcll
iret
cmp
dec
aad
lcall
jbe
out
jp
push
incb
jl
mov
xchg
cmpsb
lds
or
mov
jecxz
mov
pop
dec
push
aas
cmp
add
mov
js
iret
xor
sbb
inc
mov
int
pop
inc
jl
cltd
push
mov
dec
and
lcall
jbe
popa
xor
loopne
cmp
or
xchg
jbe
sarb
jl
mov
mov
popa
movsl
outsb
ja
lds
fwait
jp
repnz
adc
xchg
jl
rcrl
mov
in
dec
and
push
sbb
adc
sub
and
imul
pop
in
cmp
les
xor
cmpb
sbb
xchg
inc
xchg
mov
bound
mulb
dec
mov
imul
mov
jg
dec
mov
push
pop
xchg
mov
loop
mov
stos
mov
movsl
mov
dec
aas
mov
inc
and
jo
jb
es
xchg
test
push
jl
fistl
add
movsb
push
mov
dec
pushf
push
sbb
and
test
arpl
imul
loope
xlat
xchg
gs
inc
xchg
fidivl
fcomps
jle
enter
gs
xchg
aad
test
mov
inc
fildl
test
sbb
ss
lcall
push
xchg
arpl
inc
push
sbb
in
xor
mov
push
dec
stc
pop
add
cmp
dec
add
cmp
shlb
test
push
nop
sbb
stos
mov
dec
and
xchg
aam
cmpsb
push
js
out
js
inc
sbb
mov
sub
in
cwtl
inc
or
inc
push
pop
aad
test
or
subb
ret
lock
push
and
shlb
aad
lret
push
jo
testb
xchg
arpl
aam
push
push
mov
dec
push
xchg
inc
jle
popf
mov
pushf
mov
fimull
mov
add
jp
xlat
xchg
sub
jl
ret
mov
pop
sbb
aas
lods
pop
adc
inc
rcrb
test
push
push
xlat
test
scas
mov
lcall
dec
sbb
inc
push
pop
lea
je
ljmp
mov
adcl
xchg
pop
xchg
rcll
pushf
cmp
push
gs
push
rorl
popa
dec
jb
andb
ret
jnp
dec
nop
dec
push
jp
stos
ret
inc
frstor
cmp
inc
insl
push
and
arpl
push
cmc
push
or
mov
push
inc
cmp
out
cmp
push
cwtl
fimull
ljmp
fmul
dec
adcb
mov
xchg
jl
int
test
add
nop
es
scas
shrl
out
shll
dec
mov
sub
in
ja
aam
adc
cmpsl
push
arpl
rorl
mov
pop
cmp
add
shlb
mov
xchg
cld
jle
push
jecxz
pop
mov
mov
ss
sbb
push
mov
push
jle
ss
pop
inc
and
xor
inc
lds
push
cmp
stos
shrb
orb
mov
test
dec
mov
cmp
loop
ss
cs
pushf
stos
pop
xlat
ret
mov
sub
rorb
and
xchg
mov
inc
sbb
loop
ds
or
mov
push
or
imulb
xchg
jecxz
andl
call
adcb
adc
mov
push
mov
mov
mov
cmp
int3
insl
push
push
inc
inc
pop
xchg
push
push
imul
sarb
ret
adc
sbb
leave
mov
pop
or
pop
fcmove
mov
in
cmpsb
lret
adcb
sub
sbb
jl
addb
popf
or
in
push
mov
js
movsb
lahf
sbb
adc
pop
mov
mov
pop
cs
iret
cmp
jp
dec
dec
jg
and
jne
pop
cmpsb
scas
xor
cmp
or
pop
mov
jb
jp
mov
scas
es
push
and
cmp
jle
inc
xchg
mov
adc
inc
sahf
das
test
mov
sbb
xchg
cmp
mov
push
popw
movsb
jl
and
scas
sahf
push
dec
js
push
sub
test
pop
leave
xor
push
jl
or
pop
inc
xor
iret
lahf
jb
shl
dec
xchg
out
push
outsb
mov
cwtl
shlb
ds
ss
hlt
ss
das
pop
mov
push
lds
ds
sbb
and
pop
loop
sarl
in
adc
inc
es
lcall
inc
push
sahf
aad
ss
sub
xchg
xchg
cmp
dec
mov
push
test
xchg
xchg
lds
adc
pop
xor
stos
mov
dec
cmp
in
dec
jecxz
js
inc
sub
sbb
xchg
push
inc
jle
adc
jmp
imul
out
in
pop
in
dec
xchg
cwtl
out
aam
xchg
dec
jbe
fsubr
ljmp
pop
insb
cs
stos
push
ljmp
repz
test
mov
or
inc
xchg
sahf
out
pop
mov
xor
fwait
pushf
lret
push
mov
push
sbb
dec
rcrb
mov
dec
mov
cmp
ret
pop
adc
inc
lret
adc
sbb
cmp
add
and
out
fidivs
imul
cmp
nop
mov
inc
push
test
lods
xchg
loope
data16
jl
mov
ss
push
jecxz
push
cmpb
jb
nop
xchg
lret
out
popa
and
mov
pop
or
rorl
outsl
jl
sbb
cmp
fidivrl
ret
decb
sahf
and
push
test
clc
mov
in
pop
pusha
cli
pop
rolb
or
cs
outsl
aaa
xchg
xchg
push
ficomps
lahf
cmp
push
movsb
pushf
mov
mov
mov
ret
cmp
mov
gs
dec
sbb
push
mov
cmc
fsubl
inc
lcall
adc
push
pop
and
das
sub
jo
push
shl
xchg
ficoml
pop
mov
aaa
sub
mov
sbb
mov
push
dec
ss
xor
push
xor
adc
adc
cli
xchg
xor
mov
sub
jo
mov
push
xchg
and
enter
pop
jl
push
mov
popw
sbb
and
adc
aam
pop
iret
je
xor
mov
inc
rcrl
mov
jbe
sub
mov
and
sbb
loope
rcrb
xchg
cmp
loop
mov
dec
mov
lahf
inc
mov
push
xchg
and
xor
or
mov
lret
sbb
adcl
dec
enter
and
inc
and
dec
enter
mov
adc
addb
xor
mov
mov
xchg
jge
fistps
pop
xorb
arpl
mov
lods
and
pop
push
insl
cltd
loop
and
ret
push
mov
push
push
sarb
inc
movsb
adc
ja
mov
push
cld
dec
push
push
gs
add
outsl
mov
push
cmpb
dec
fmull
adc
popa
dec
aam
sarb
shl
inc
out
gs
out
jbe
and
dec
xor
aam
andb
add
and
xor
js
mov
cmp
insb
sahf
loop
mov
in
ja
addr16
inc
ret
mov
dec
es
sbb
mov
dec
mov
sahf
ljmp
lcall
incb
test
xchg
and
ljmp
clc
or
add
and
repnz
inc
ss
in
sbbb
sarl
push
mov
xor
xchg
xchg
sbb
sbb
mov
sub
xor
jl,pt
sbb
inc
test
cmp
dec
pop
jge
push
or
pop
pop
jp
mov
call
mov
mov
sub
ss
jb
dec
movsb
fisubrs
add
dec
fwait
into
lcall
push
adc
dec
js
or
and
lcall
js
adc
mov
pop
andb
je
or
mov
mov
push
xchg
xchg
mov
jl
outsb
dec
ret
js
cmp
xchg
sub
pop
pop
test
add
addl
mov
push
enter
jp
dec
inc
mov
jne
dec
mov
pushw
mov
loope
in
fmuls
cmp
js
rol
dec
lods
xor
inc
mov
jns
subb
mov
or
popa
xchg
cmp
push
add
xchg
dec
sub
dec
cld
ljmp
mov
push
xor
mov
xorb
pop
xchg
mov
aam
inc
inc
lcall
jb
xchg
mov
cwtl
inc
sahf
stos
mov
mov
scas
adc
scas
in
jp
cmp
push
xchg
inc
pushf
jb
in
xchg
out
mov
jmp
cwtl
add
imul
mov
and
push
in
lds
inc
mov
aam
push
mov
xorb
inc
scas
pop
scas
inc
dec
push
sbb
push
push
int3
xchg
inc
xchg
jge
cmp
jo
pusha
mov
andb
dec
mov
inc
adc
fdiv
add
test
jle
fmul
push
cmp
add
inc
or
ss
jp
mov
mov
ss
fsubs
cmp
ss
jle
sahf
test
push
aam
test
sbb
scas
xorb
mov
xor
fs
fiaddl
cs
outsb
fsubrp
arpl
bound
mov
pop
cmp
loop
adc
out
test
ret
jae
xor
push
xor
xchg
xlat
mov
mov
push
mov
test
cmpsb
and
add
cmp
dec
int
jl
fnstenv
mov
pop
call
push
push
ret
in
and
mov
in
lret
rcll
aam
adc
sub
pop
in
aaa
outsb
inc
fwait
sahf
rclb
cmp
pop
fisubl
fiaddl
outsb
shlb
inc
ss
sbb
and
movsb
imul
jmp
xor
mov
fcmovne
pushf
adc
push
arpl
cmp
pop
dec
xchg
jbe
mov
xchg
cmpsl
lods
push
cmp
ss
jge
outsl
mov
add
push
and
ds
cmpsl
ficomps
cmpsl
sbb
sub
adcb
add
dec
lods
rorb
mov
cwtl
and
cmp
andb
sbb
or
or
lock
jb
and
sbb
add
add
cmp
mov
mulb
mov
mov
jp
testb
mov
xchg
fwait
shr
mov
xchg
and
in
and
adc
xorb
popa
xchg
addb
cli
imul
sub
inc
mov
pushf
lods
out
inc
aad
lds
pop
lods
out
inc
push
mov
mov
lcall
data16
stos
mov
xchg
inc
push
rcr
sbb
sub
jl
clc
and
jb
idivb
mov
mov
cmp
jbe
push
stc
inc
push
and
mov
insb
cwtl
mov
xor
addb
in
inc
mov
xchg
popa
push
in
xchg
jp
or
add
lret
cmp
into
fcompl
or
idiv
xor
mov
add
int3
pop
jb
xor
xor
lahf
inc
cmc
adc
push
adc
jo
mov
out
arpl
lret
pop
gs
lcall
or
out
mov
aad
mov
mov
sbb
sahf
dec
and
add
sub
arpl
push
test
dec
mov
mov
xchg
cmp
push
pop
xchg
cmp
dec
popa
or
or
js
mov
xchg
mov
pop
sub
lods
push
mov
decl
fstps
jge
stos
mov
cli
test
shr
sbb
push
std
add
push
loop
sarb
inc
cmpsb
fimull
into
add
popa
out
jle
mov
and
nop
pop
ror
sahf
adc
mov
mov
fisubrs
mov
pushf
pop
into
jo
cmp
mov
cmc
pop
mov
pushf
xorb
push
xchg
aad
sub
push
mov
ret
mov
xchg
mov
cmp
add
test
mov
sbb
movsb
cmpsb
cmp
push
hlt
mov
dec
loop
and
arpl
mov
push
ds
pop
in
mov
andb
or
mov
pop
inc
inc
jle
mov
dec
jo,pt
sbb
mov
aam
cwtl
mov
aam
shr
div
push
mov
out
jbe
test
mov
xor
or
inc
clc
sbb
arpl
mov
or
sarb
rclb
pushf
dec
sub
lahf
cld
fwait
iret
out
scas
cmp
cmp
loop
mov
scas
xchg
add
ret
mov
jb
dec
push
lods
movsb
xchg
sbb
cmp
or
les
into
fiaddl
lea
and
out
mov
dec
outsb
dec
lahf
scas
mov
popa
inc
lds
mov
xor
mov
xchg
pop
rep
bound
or
dec
dec
pop
out
xor
insb
mov
mov
pop
adcb
ret
sahf
arpl
pushf
and
mov
subl
shrb
xlat
push
ret
lods
orb
mov
cmc
jbe
in
cwtl
or
leave
or
ds
push
and
dec
test
int
xor
sbb
dec
mov
dec
popa
and
dec
inc
mov
dec
mov
push
add
cltd
push
mov
sbb
sbb
lcall
arpl
orb
inc
icebp
sti
bnd
and
mov
test
inc
pop
movsb
loop
pop
pop
mov
inc
cs
inc
adc
or
dec
sbb
adc
push
pop
adc
fs
or
jbe
sahf
mov
cltd
pop
pop
in
ss
mov
fldenv
divb
mov
sub
cmp
aam
dec
imul
fdecstp
loope
ss
gs
pop
push
aad
negb
sbb
aad
lods
xchg
push
mov
mulb
xchg
add
sub
lret
xor
mov
imul
sbb
popf
dec
mov
pop
add
inc
std
test
jnp
pushf
xchg
stos
arpl
jbe
cmp
mov
jp
push
loop
jo
sbb
es
fnstsw
cmovo
push
cmp
inc
cmp
negl
push
push
aam
cmpsb
scas
js
mov
push
add
cmp
xchg
orb
nop
inc
sahf
inc
cmp
ret
push
popw
inc
cmp
mov
out
sbb
push
sub
push
xchg
js
out
mov
inc
dec
xchg
push
or
dec
mov
mov
sahf
inc
jle
mov
aas
divb
sbbl
dec
jmp
push
dec
pop
pop
cli
pop
popa
mov
mov
sbb
mov
int3
xchg
jl
mov
jmp
mov
imul
lds
xchg
mov
in
dec
sbbb
icebp
sbb
lds
rcrl
imul
fldl
inc
push
and
sbb
pop
aas
inc
push
add
pushf
mov
scas
int3
nop
mov
pop
jb
repnz
lret
int3
push
cli
fstpt
aam
sbb
out
outsb
cwtl
imul
cmp
sbb
mov
push
mov
shrl
inc
or
dec
pushf
andb
xor
aad
shll
pushw
mov
pop
lds
xor
sub
out
or
xchg
sbb
mov
push
shll
lret
out
test
ds
push
push
push
cmp
sbb
arpl
mov
push
adc
lret
into
jne
orb
inc
jl
movsb
jp
dec
push
xchg
loop
mov
fdivl
or
sub
mov
push
and
jne
jl
addb
and
nop
movsb
out
mov
push
push
mov
push
cmp
cmp
jle
xor
inc
adcb
sbb
bound
mov
dec
push
inc
push
cwtl
orb
mov
loope
and
sahf
adcl
sub
int3
jle
mov
jb
pop
ds
pop
inc
aad
xchg
cwtl
int3
cmp
xchg
jne
and
lods
les
or
fidivrs
jb
mov
push
aad
cmp
inc
and
and
scas
or
es
test
dec
cmp
push
movsb
outsb
lcall
jg
and
cmp
movsb
and
push
outsb
pop
outsl
pushf
cli
ds
xor
sub
mov
sub
push
adc
mov
inc
pushf
fwait
pop
adc
xor
cltd
cmc
loope
lds
dec
sub
mov
xor
fisubs
rorb
add
or
push
je
and
sbb
mov
adcb
ss
xor
xor
mov
aas
cld
lcall
sbb
mov
mov
in
cmp
mov
outsb
dec
fists
fs
mov
testl
or
inc
jle
mov
jne
clc
and
add
pop
lods
xor
push
mov
push
sahf
or
aas
aad
fistpll
inc
sahf
nop
lret
movsb
dec
pop
fmull
or
sub
sbb
push
push
pop
sbb
jbe
and
xchg
fwait
shll
in
int
pop
nop
insb
movsl
fidivrl
xchg
outsb
jl
mov
aam
ss
xchg
sbb
andb
arpl
xchg
sub
jne
lcall
shl
popa
shl
mov
ret
gs
pushf
cmpb
xchg
pop
fildl
inc
mov
aas
pushf
push
out
or
push
jae
in
push
inc
or
push
jp
push
mov
imull
push
sbb
xor
pop
cmp
cmp
ret
inc
sub
scas
movsb
arpl
push
push
push
in
rcrl
cmc
decb
xchg
aad
push
xchg
sbb
mov
inc
mov
scas
cli
outsb
addb
or
dec
add
cmp
push
xchg
mov
test
adc
xchg
xchg
pop
ret
pop
mov
sbbl
jp
imul
fimull
call
ss
aas
imul
mov
push
mov
push
mov
mov
gs
arpl
out
dec
femms
cmp
xchg
sbb
pushf
adc
out
inc
sbb
dec
mov
cmp
cli
mov
nop
or
add
jo
mov
inc
or
push
mov
cmp
in
push
sbb
xchg
aad
cs
pushf
movsl
lea
inc
xchg
adc
xchg
inc
and
push
jle
xchg
mov
ss
mov
adc
inc
in
pop
inc
jmp
decb
jbe
or
push
pop
and
popa
adcb
and
jl
inc
push
in
inc
andb
inc
sbb
outsb
popa
and
jbe
mov
leave
and
inc
and
xor
xchg
cmp
cmp
mov
dec
dec
inc
xor
inc
pop
mov
push
mov
cmp
iret
ficoms
dec
mov
mov
cmpb
or
insb
test
loop
and
mov
icebp
sarl
inc
cmp
pop
push
jne
into
push
adc
xchg
inc
push
pop
ds
sbb
aad
pop
ficoml
jo
sbb
idiv
or
xchg
test
imul
jb
pop
xor
or
aaa
jbe
scas
mov
cmp
aad
push
inc
dec
pop
push
lret
mov
pop
cmp
aaa
push
or
jne
mov
cwtl
and
push
mov
mov
sbb
ds
dec
mov
icebp
in
jle
xor
mov
add
jge
push
or
pop
push
or
stos
aam
imul
adc
rorb
in
aam
pop
mov
cmp
cld
cmpsl
cli
or
mov
sbb
xchg
mov
mov
lock
das
push
sahf
rcrl
cmp
xchg
push
jp
and
sub
mov
mov
mov
rcrl
pushf
popa
pop
jo
pop
roll
mull
mov
cmp
or
xlat
inc
popf
and
mov
sub
mov
mov
mov
in
mov
mov
pushf
inc
popf
and
jge
dec
jbe
int3
and
xor
adc
sbbl
xchg
cwtl
mov
push
jp
les
xchg
js
xchg
jnp
scas
cmpsl
and
sbb
sahf
mov
pop
ficoml
addr16
xchg
shrl
cmpl
push
pushf
dec
mov
bound
jbe
pop
fidivs
enter
cmp
dec
xor
sub
pop
mov
jle
xchg
ljmp
xchg
push
mov
or
pop
addb
dec
scas
mov
lret
jbe
jle
in
mov
cmp
adcb
push
in
fiaddl
jle
lcall
ret
cmpsb
dec
dec
xchg
jl
mov
pop
sahf
mov
xchg
in
dec
sbb
xchg
hlt
cltd
in
mov
push
ds
ss
mov
xorb
mov
fwait
xchg
pop
jp
mov
xchg
outsb
nop
movsb
mov
mov
mov
xchg
and
and
push
adc
pusha
xor
inc
inc
pop
outsl
aaa
call
insb
pop
jle
pop
adc
scas
jbe
mov
xchg
mov
push
leave
popa
xchg
pop
push
inc
pop
fimull
and
cs
pop
movsb
push
cmp
rorl
dec
cmpsl
aaa
mov
push
arpl
jge
xchg
adc
and
and
jge
fisttps
add
xchg
push
inc
loope
pop
dec
aas
sub
or
mov
ljmp
aad
dec
xor
mov
inc
sub
adc
jns
aaa
stos
in
cmp
mov
pushf
mov
and
xchg
arpl
test
loope
pop
rclb
push
mov
mov
pop
repnz
inc
addl
bound
adc
cwtl
dec
pop
jmp
daa
sbbb
push
jbe
mov
pop
push
fs
cmp
or
push
imul
outsb
inc
pop
push
les
pop
xchg
cwtl
cmp
inc
stc
test
out
notb
pop
out
push
and
inc
adcl
jl
sub
xchg
cmpsl
int
mov
mov
jl
mov
stc
push
stos
mov
push
imul
insl
mov
movsl
xchg
cmp
push
mov
iret
ljmp
push
pop
cld
push
sahf
add
xchg
sbb
mov
jg
mov
test
pop
mov
adc
mov
aas
lcall
xchg
pushl
sbb
mov
ficoms
pop
mov
scas
jbe
bound
cwtl
pop
in
std
xorl
mov
dec
cmp
insb
push
mov
adc
xchg
stc
ja
xchg
cld
mov
cmp
mov
and
adc
aam
xchg
ret
inc
inc
mov
and
inc
cmp
sbb
and
test
xor
push
xchg
stos
mov
xchg
sbbb
ret
insb
fmull
mov
add
mov
adc
push
sbbb
jp
adcb
mov
push
xor
mov
cmp
sub
jl
push
sbb
and
cmpsl
or
and
jo
cmp
jp
inc
cmpsb
or
xchg
arpl
mov
int3
mov
jbe
jle
cmp
push
jb
pushf
cmpsl
mov
inc
mov
xor
xchg
movsb
xor
fimuls
fstpl
insb
xchg
inc
es
and
les
cmp
leave
cld
scas
adc
popa
imul
ljmp
in
js
xchg
jne
jae
sahf
lds
or
jo
dec
insb
andl
xor
mov
aad
pop
adc
sbb
cmp
lods
push
inc
xor
rclb
test
and
lcall
or
pop
lret
in
mov
fcmovu
ljmp
loope
xchg
cmp
mov
fsubr
and
lods
dec
dec
es
into
push
push
xchg
mov
enter
and
aaa
pushf
mov
outsl
ret
sbb
dec
decl
and
push
cmc
addl
xchg
mov
and
subb
pop
dec
lock
insb
mov
inc
xchg
cltd
inc
xor
sbb
add
inc
and
push
out
repz
cmp
incb
fcmove
fsubrp
sbbl
mov
mov
add
aam
or
lret
sbb
xchg
lea
jecxz
and
pop
dec
adc
mov
or
cmp
pop
mov
cmpsb
pop
inc
test
xchg
add
push
inc
mov
lret
inc
pop
and
aad
cli
dec
pop
cli
lret
mov
pushf
jle
std
mov
mov
inc
add
ret
dec
movsb
push
sbb
inc
fwait
loop
mov
stos
push
dec
jp
cli
dec
sub
inc
jne
stos
pop
push
pop
cmp
pop
and
enter
mov
jp
cmp
or
mov
fiadds
in
stos
test
mov
push
sub
adc
or
xorb
xchg
pop
inc
push
xor
int
inc
sahf
in
jg
sub
mov
shll
xchg
jb
push
sub
aaa
imul
jo
inc
lods
pop
js
push
jno
sbb
ss
jmp
mov
arpl
jns
dec
clc
push
cmp
dec
sub
ss
sub
mov
adc
jb
and
nop
mov
ljmp
inc
sub
jae
ja
outsb
jbe
or
jo,pt
dec
idiv
popa
xchg
insl
pop
mov
lods
dec
test
jbe
stos
sarb
xor
xchg
data16
jmp
fidivrl
rclb
xchg
mov
stc
pop
aas
repnz
mov
rolb
inc
ficompl
adcl
jp
sarb
movsl
push
ret
js
sbb
inc
test
adc
pop
jb
fidivl
call
bound
fisubl
movsl
sbb
mov
jb
call
fnstcw
sbb
and
mov
sbb
xchg
fisubrl
jb
push
mov
call
fwait
in
test
sbb
cltd
xchg
pushf
aad
mov
jo
idivb
ds
add
inc
dec
and
mov
lea
in
xor
or
adc
loop
lahf
pop
aad
lods
jg
dec
notb
mov
jb
add
popf
xchg
pusha
ret
cmp
sbb
jnp
xor
or
aam
xor
pop
xchg
add
lock
shlb
ret
xchg
pop
cmpsb
inc
inc
push
dec
aad
push
cmp
lds
inc
aaa
orb
jbe
mov
lcall
inc
push
aad
imul
sti
dec
mov
and
xchg
pop
jae
in
int3
arpl
and
and
push
add
adcb
aam
mov
sub
add
and
ds
push
pop
test
std
data16
xchg
or
mov
jp
and
mov
xor
cmp
mov
and
movsl
dec
xchg
push
xchg
inc
aad
adcb
pop
add
pushf
mov
pop
dec
mov
mov
cmpl
add
push
mov
dec
pushf
mov
mov
cmp
and
jns
xchg
inc
lret
sub
test
loop
xor
xor
sbb
popa
inc
dec
and
and
inc
cmp
mov
dec
leave
movsb
bound
jbe
int3
jg
jmp
cmp
in
xchg
out
push
xchg
sbb
sbb
push
lods
pop
jnp
imul
mov
loopne
vmovd
cmp
dec
jb
jns
out
dec
or
pop
or
stos
jmp
pushf
in
pop
in
mov
cld
pop
mov
sbb
inc
dec
xchg
dec
outsb
sbb
xchg
cli
ss
sub
and
int3
andl
push
ss
ljmp
lcall
loope
lods
mov
es
iret
or
pop
int3
sahf
sbb
jnp
aam
ds
inc
and
mov
insl
push
fildl
ss
dec
fwait
clc
mov
stos
jb
mov
inc
push
xchg
inc
pop
adcb
sarb
mov
and
jbe
shl
inc
lds
jl
js
cmp
fsubl
sbb
mov
dec
inc
xchg
mov
dec
or
or
inc
negb
xor
xchg
adc
popa
aam
sbb
mov
xor
fdivrp
arpl
push
arpl
lcall
orl
pushf
lds
fidivrl
push
ljmp
mov
push
mov
lcall
adc
and
rorb
pop
fdivrl
push
js
aad
cmp
ficoms
ret
xchg
pop
int3
push
mov
lcall
and
inc
inc
shlb
push
dec
push
sti
xor
jo
in
xor
sbb
xchg
mov
lcall
and
cli
out
sbb
jl
cmp
xor
pop
shlb
daa
inc
pop
mov
xor
dec
or
mov
pop
mov
out
push
cmp
dec
and
fsubl
divl
jp
lcall
push
xchg
cmp
in
cmp
pop
out
andl
lcall
roll
mov
sbbb
std
push
data16
mov
arpl
jle
ret
mov
call
nop
cltd
sub
push
inc
inc
ret
or
dec
pushf
add
mov
aad
mov
and
and
lcall
dec
ja
scas
add
cmpsb
mov
repz
add
movsb
xchg
rorb
and
in
leave
scas
and
adc
mov
in
aad
outsb
push
mov
sbb
lods
cs
sbb
push
jle
xor
sahf
arpl
lret
pop
ret
loope
pop
ds
lea
int
mov
ljmp
xchg
subl
add
rclb
push
mov
cltd
mov
int
lcall
or
adc
inc
xchg
xorl
jb
lds
stos
jl
les
mov
aaa
pop
loop
ja
loope
xchg
addb
pop
xchg
ret
adcl
sub
inc
fwait
shll
pop
shlb
arpl
scas
mov
and
jp
loop
mov
rcrl
push
pop
dec
adc
sub
lcall
mov
jb
inc
sarb
dec
push
mov
aad
addb
inc
rorl
xchg
cmp
in
jle
enter
mov
sbb
inc
fwait
xchg
push
or
inc
adc
ds
test
scas
mov
test
stos
shll
sbb
xchg
inc
adc
dec
cli
xorb
fisttps
aaa
jp
push
jnp
push
out
add
dec
loop
dec
cwtl
inc
sbb
test
push
decl
arpl
pop
jbe
into
push
push
mov
leave
inc
mov
push
cmp
add
mov
sub
mov
jb
xor
in
lcall
mov
ss
fsubl
push
pop
ja
xorb
dec
fs
ss
inc
negb
sbbb
in
mov
pop
sub
sbb
popa
push
jbe
or
scas
xor
mov
sbb
or
mov
pop
mov
dec
sahf
cmp
dec
dec
mov
adc
sahf
or
sub
pop
dec
push
ss
repnz
jns
int3
sarb
cmpsl
mov
lcall
inc
stos
cwtl
inc
fisttps
into
or
nop
mov
inc
or
add
dec
push
or
push
in
mov
cmp
movsb
xchg
fs
push
sahf
nop
aam
lret
mov
fimuls
or
movsl
sbbb
andb
add
lods
cmp
ret
and
adc
xchg
xchg
fucomip
and
orb
testb
push
sub
adc
popa
inc
mov
cltd
mulb
dec
push
adc
int3
push
jnp
mov
aam
push
xchg
movsb
mov
xor
jno
lcall
negb
test
es
pop
call
jbe
movsl
mov
pushf
push
cmp
xor
dec
pop
aam
jo
mov
xor
lret
cwtl
push
xor
sbb
out
mov
inc
or
stos
lcall
inc
loop
cmp
xchg
cmpsb
inc
push
dec
inc
add
fadds
cmp
jae
inc
pop
add
xchg
inc
mov
push
mov
mov
mov
xchg
mov
or
mov
dec
and
dec
and
iret
in
lret
dec
mov
sbbb
mov
sbb
adc
dec
ja
sbb
mov
push
jo
ds
int
cli
or
scas
or
lds
int3
ja
cmp
xchg
sahf
or
js
sbb
mov
inc
fcoml
xchg
xchg
mov
in
call
popa
jg
or
cmp
push
push
add
or
ret
cli
xchg
xchg
lods
rcl
cld
ljmp
pop
data16
mov
push
daa
data16
movsb
orb
sub
mov
and
sbb
adcb
inc
cmp
pushf
cli
and
sbb
addb
dec
and
mov
fcmovnbe
sahf
mov
mov
xor
inc
jmp
xor
xor
inc
push
ss
scas
das
call
or
push
testb
lcall
pop
push
mov
push
in
mov
nop
fidivs
sbb
aad
sub
jp
cmp
pop
inc
js
dec
jo
out
push
mov
dec
and
hlt
popa
inc
cmp
sbb
out
js
jp
mov
push
faddl
cmp
shrl
or
sbbl
xchg
dec
xchg
jo
cmp
mov
adc
testb
push
adc
js
push
shll
xorb
sbb
pop
std
sahf
inc
mov
or
add
or
pop
and
lret
test
xor
aaa
adc
adcl
inc
sub
xchg
inc
iret
mov
ret
mov
pushf
mov
ss
or
mov
call
mov
mov
es
cmpsb
or
sbb
mov
inc
mov
dec
sub
scas
jmp
out
mov
inc
push
mov
mov
push
sbb
iret
adc
jl
jne
pop
lcall
mov
xchg
xchg
lds
sahf
lods
cmp
dec
mov
nop
stos
js
xchg
xchg
mov
inc
add
in
rcr
push
pop
gs
aad
add
js
cld
mov
test
inc
pop
dec
push
sahf
or
dec
dec
dec
bound
inc
push
xchg
aaa
push
cmp
xchg
aaa
lea
mov
adc
sahf
xchg
sub
push
inc
push
aas
cmp
sbb
clc
mov
idivl
mov
xor
mov
gs
sahf
mov
bound
and
test
rorb
rorb
clc
mov
mov
mov
cmpsl
xchg
jb
push
cwtl
orb
mov
shll
lcall
cwtl
jbe
mov
arpl
imul
push
xor
lcall
cmp
jo
sbb
adc
dec
pop
fldln2
pushf
in
dec
jbe
test
inc
fistpll
and
jmp
ret
dec
push
pop
es
pop
inc
adc
xchg
sarb
outsl
inc
push
or
aad
add
and
or
or
inc
ss
xchg
and
in
cwtl
inc
lret
rorb
mov
shr
int3
lahf
sub
jp
mov
and
xor
sahf
jle
or
aas
pop
xchg
mov
jb
cmpsb
cmp
sbb
push
dec
add
rorb
sbb
in
aas
push
imul
and
push
inc
adc
mov
adc
insl
inc
lret
jmp
mov
dec
mov
ss
cli
nop
addr16
mov
loop
mov
ficoml
das
in
arpl
xchg
loope
and
cmp
push
cmpsl
cs
inc
pushf
push
or
js
mov
jo
xchg
sbb
scas
xor
orb
fisubs
nop
mov
bextr
shlb
mov
imul
pop
nop
mov
mov
gs
lret
inc
jp
cmpsb
out
jb
mov
mov
out
clc
inc
mov
cld
xchg
call
inc
push
cmp
inc
js
cwtl
jb
jecxz
and
mov
xor
imul
ss
cmp
insb
loop
ret
js
jl
or
jo
mov
mov
mov
movsb
xchg
adc
mov
jmp
adc
mov
aaa
pop
fadd
adc
mov
insl
insb
std
push
rorb
inc
orb
inc
cmp
inc
mov
sahf
and
in
push
mov
pop
and
inc
pop
test
inc
rcrb
and
shll
into
xchg
popa
out
outsl
jne
sub
xor
mov
xchg
and
mov
jl
sbb
inc
cmp
inc
mov
in
inc
mov
cwtl
push
jo
into
push
sbb
in
jb,pt
xchg
sub
jbe
push
xorb
loope
cmpsl
bound
cmc
adc
xor
push
mov
aad
imul
sbb
sub
sub
arpl
push
andb
cmp
imul
pop
jb
mov
push
xchg
dec
aam
and
sbb
add
test
push
and
jbe
pop
mov
xlat
dec
mov
sub
sbb
sub
push
std
mov
dec
imul
xor
aam
and
push
ficoml
mov
jb
xchg
or
pop
inc
push
cmpsb
jecxz
inc
pop
mov
dec
mov
insl
ljmp
ljmp
sbb
push
mov
pop
mov
pop
mov
jmp
fstl
rclb
add
cli
xchg
xor
ds
sbb
sbb
stos
xlat
rclb
push
out
aam
xchg
les
push
daa
lock
dec
dec
add
mov
dec
and
pop
xor
fwait
jl
test
fs
sbbb
dec
enter
mov
and
adc
divb
push
adcl
jp
movsb
nop
ljmp
jbe
dec
xchg
xor
push
mov
push
cltd
test
xor
jmp
sti
in
inc
push
js
sub
pop
sbb
lock
cmp
cmp
mov
dec
mov
inc
dec
and
shl
mov
notb
test
pop
push
dec
inc
imul
sbb
sub
dec
pusha
add
out
dec
push
popa
xor
into
fs
sbb
ja
lds
cs
adc
jecxz
outsb
jnp
mov
lea
dec
inc
sub
add
push
cwtl
and
inc
subl
aaa
jg
pop
mov
in
xchg
and
jne
popa
fisubs
mov
cmp
push
test
lcall
call
in
andb
mov
negb
adc
jns
mov
push
iret
lahf
pop
lods
aam
inc
shll
ss
dec
aas
pop
xchg
adc
mov
cmp
xchg
decl
pop
and
ret
push
add
jbe
shlb
and
jp
mov
pop
sub
aad
push
mov
sbb
scas
stos
jle
mov
mov
push
and
inc
jb
addb
popa
repnz
or
adc
out
cmpb
push
jb
xchg
push
sti
cmp
or
iret
cwtl
inc
xlat
cmpsl
out
sahf
jb
stos
mov
jnp
in
mov
inc
les
push
arpl
jle
mov
dec
jo
into
mov
cwtl
mov
popa
jno
shlb
add
sbb
or
jbe
pop
push
adc
push
orl
lds
pop
mov
dec
and
ret
pop
dec
inc
mov
loopne
mov
idivl
inc
inc
pop
and
ret
bound
jle
sub
mov
sub
mov
pop
dec
fstps
pop
jge
xlat
mov
mov
add
and
inc
pop
sbb
gs
ja
in
mov
pop
jb
inc
sti
adc
shlb
inc
cmp
dec
push
mov
ljmp
jae
sub
in
lret
sbb
cmpsb
pushf
sbb
push
pop
sarb
in
cld
sahf
fistl
fcmovu
call
push
push
movsb
mov
add
outsl
or
sbb
mov
or
push
mov
pushf
pop
xchg
jno
cmpsl
lock
mov
lods
aas
cld
push
mov
cwtl
or
sub
les
add
sub
inc
jle
aad
lds
mov
xchg
pop
dec
and
xor
pushf
xchg
push
add
icebp
mov
cwtl
movsl
dec
mov
dec
addb
pop
cwtl
inc
sub
sarl
ror
jb
ljmp
mov
jmp
dec
insl
adc
xchg
push
jo
fwait
xchg
inc
xlat
inc
pop
inc
in
es
adc
lcall
aad
aad
push
xchg
push
decl
bound
ret
sahf
adc
jno
inc
push
xor
js
lds
addb
inc
fwait
mov
sahf
mov
add
aam
jo
sbb
ds
inc
push
and
pop
adc
inc
or
jb
pop
imul
ret
xchg
lds
add
add
in
dec
jl
jb
sahf
ret
inc
push
inc
idivb
stos
ds
and
out
and
and
out
gs
pop
popa
pop
push
and
dec
jb
mov
dec
push
sbb
add
sahf
jne
cmpb
fdivrp
mov
pop
cmp
jl
mov
les
fwait
loope
and
les
lods
test
xorl
cmp
mov
je
aaa
jge
cwtl
aaa
lret
sub
mov
lea
scas
sbb
adc
pop
andb
out
jo
inc
movsl
pushf
ss
cmp
mov
push
popf
and
xchg
xorb
inc
ljmp
mov
cmp
mov
jo
push
mov
mov
dec
mov
dec
nop
mov
xor
bound
sarb
sbb
inc
in
clc
mov
inc
in
lcall
nop
dec
scas
xchg
aam
mov
and
inc
inc
scas
in
jl
sahf
enter
leave
cmp
dec
xorb
inc
arpl
int3
pop
movsb
popf
push
pop
ss
add
inc
pop
std
inc
and
inc
sti
dec
add
ficoml
int3
call
mov
inc
mov
xchg
mov
dec
sub
push
lret
test
mov
shr
cmp
movsl
push
iret
jo
jb
inc
cwtl
movsb
shlb
ja
jle
fdivrl
lahf
mov
sbb
out
and
push
aaa
xchg
nop
shll
test
lahf
pop
and
aaa
dec
xchg
mov
mov
xchg
subl
inc
ret
mov
dec
mov
test
cmpsl
push
push
orb
inc
sbb
sbb
sbb
nop
xchg
pop
in
pop
aaa
arpl
pushf
shrb
push
aas
inc
mov
sbbl
mov
cmp
xchg
mov
or
sub
mov
pushw
test
js
movsb
xor
arpl
xchg
mov
mov
sub
es
shlb
pop
inc
clc
clc
cmp
mov
push
sbb
dec
xchg
mov
cmc
into
ja
xchg
sbb
adc
out
pushf
lds
arpl
xor
jle
aam
shr
ret
jl
ds
xor
sub
sub
ss
shlb
aam
ds
loope
popa
inc
lret
xchg
xor
inc
or
ficoml
push
int3
mov
jb
mov
sbb
and
test
icebp
pop
push
push
imul
dec
mov
std
adc
adcl
stos
movsb
testb
dec
pop
iret
or
inc
xor
es
mov
dec
lcall
xchg
aam
cwtl
mov
mov
cli
addr16
into
inc
popa
sahf
mov
popl
jp
inc
sub
push
xor
negb
xor
jp
adc
pushf
push
addb
insb
xchg
pop
and
in
mov
mov
in
pop
pop
xchg
xchg
nop
out
dec
sub
and
mov
dec
roll
mov
in
ds
movsb
les
dec
jno
jb
es
dec
mov
lods
push
test
xor
jmp
dec
push
jb
outsl
shl
lcall
rcrl
jl
inc
pop
popa
mov
push
cmp
push
mov
ret
aas
sbb
push
gs
xor
outsl
lcall
inc
xchg
xchg
pushf
stos
pop
lds
fisubl
mov
inc
mov
mov
pop
sbb
push
xchg
or
loop
andb
mov
mov
les
popa
icebp
inc
aas
mov
ficompl
mov
roll
test
and
out
int3
sti
inc
adc
ret
and
or
jmp
cmp
pop
push
lcall
mov
aas
fsts
cmp
mov
rcll
sub
leave
jp
inc
out
pusha
push
cmpsl
lret
jl
cmp
lret
push
sbb
cwtl
xor
inc
test
mov
pop
pop
inc
and
mov
or
inc
jp
mov
fldcw
push
popf
loop
in
cmpsl
pushf
pop
popa
inc
nop
jns
mov
xor
xchg
jbe
movsb
out
lahf
dec
cmp
bound
dec
mov
sbb
xchg
lds
push
cmp
mov
mov
and
cmp
lret
bound
sub
or
and
add
or
stos
sbb
mov
sahf
mov
dec
mov
push
inc
dec
jmp
push
in
hlt
ret
sub
jo
sbb
scas
lds
jb
outsl
sub
or
mov
lcall
push
gs
sbb
sbb
iret
lret
jmp
data16
push
sbbb
push
sub
push
mov
xorb
cmpb
cltd
push
imul
in
push
es
push
pop
push
mov
fdivrl
cmp
and
inc
jb
jbe
loope
sahf
cwtl
adcb
sbb
add
andl
inc
xchg
mov
sbb
and
jle
ss
cmp
pop
mov
push
jns,pt
xor
jmp
test
cmp
arpl
push
out
cwtl
les
inc
or
jl
xchg
js
xor
push
inc
inc
pop
iret
shll
ljmp
adc
gs
jne
jg
cmp
jb
call
sbb
mov
mov
pop
lods
ret
and
pop
inc
push
aad
rcrb
push
push
jl
into
mov
lahf
cwtl
pop
jecxz,pt
jl
inc
cld
push
pop
push
inc
cld
sbbb
in
fiaddl
cmc
mov
inc
pop
cmp
mov
out
or
int3
sbb
adc
nop
nop
cli
inc
in
pop
gs
cmp
cld
sbb
and
fs
sbb
loop
arpl
dec
pop
push
lahf
push
pop
cld
shlb
push
mov
ficoms
mov
mov
incb
ss
sarb
pop
clc
push
outsl
in
shrb
repz
xchg
xchg
mov
aad
mov
sub
and
push
xchg
dec
scas
nop
dec
xchg
ljmp
pop
push
adc
mov
cmp
outsb
xlat
mov
inc
push
adc
lret
adc
mov
les
and
es
mov
movsl
ljmp
pop
rclb
ja
inc
and
js,pt
fiadds
loopne
adc
inc
cmc
movsl
add
sbb
popa
cmpsb
in
push
add
inc
xchg
sbb
adc
push
push
out
pop
xor
ss
xor
push
dec
aam
mov
lahf
sub
sbb
mov
mov
sbb
inc
test
adc
push
cmp
jl
cmp
sub
pushf
rcrb
sub
fstps
push
dec
rclb
inc
jp
push
jl
sahf
in
bound
cli
push
and
push
jo
jnp
dec
test
jmp
inc
nop
js
sahf
in
cmpsb
cmp
dec
push
addb
pop
stos
fnstenv
sbb
repnz
in
or
ss
rcrl
sbb
pop
and
stos
arpl
cltd
out
data16
xorb
and
xchg
mov
mov
xchg
xchg
jbe
andb
sbbb
sbb
or
inc
add
loope
mov
mov
pop
shlb
pop
push
data16
in
mov
jns
stos
mov
fstl
jl
sub
dec
mov
roll
push
clc
pop
mov
loop
mov
fildl
out
mov
shlb
add
jb
leave
mov
in
test
pushf
push
sub
lcallw
lret
sbb
adc
xor
jb
and
ret
lods
lret
sub
sub
in
pop
dec
mov
dec
pop
push
jle
xor
push
xchg
jl
and
dec
sub
mov
jmp
arpl
inc
daa
ret
mov
fiaddl
rcrl
mov
pop
pushf
jnp
jns
inc
add
scas
and
pop
stos
inc
out
test
mov
jbe
mov
sbb
in
idivb
jl
sbb
jb
push
pop
ljmp
xchg
or
lahf
pop
pop
in
jo
xlat
outsb
mov
cwtl
add
es
pop
lcall
and
js
or
aad
add
fcompl
ss
das
sub
push
in
lret
movsl
aas
pop
pushf
pop
out
or
arpl
xor
orb
push
or
sbb
aam
push
ret
pushf
jge
sti
mov
sub
pop
add
jae
cwtl
push
bound
cwtl
and
push
or
mov
cmc
imul
xor
sahf
jb
inc
outsl
jns
push
test
ficoml
cmpsl
divl
mov
jae
jbe
faddl
fucomi
dec
push
in
cmp
pop
cwtl
mov
gs
ds
mov
sub
pop
jle
fimuls
add
xor
cmp
jb
mov
fs
jl
sbb
mov
jns
mov
int
test
or
push
jge
and
sbb
inc
mov
outsb
push
fimull
stos
mov
cmp
out
push
cli
in
in
pop
cs
add
jb
dec
mov
ljmp
int3
jb
dec
popa
sbb
mov
xchg
out
push
dec
pop
sbb
push
mov
pop
add
test
sub
push
xchg
sbb
mov
xchg
push
push
pop
mov
jp
sarl
mov
xlat
fimull
inc
jbe
lret
pop
inc
dec
cmpsb
test
push
inc
add
orb
stos
sbb
ljmp
cmc
movsl
ss
xchg
add
packsswb
ss
fs
ret
and
and
dec
rcrb
pop
mov
push
lods
jg
adc
movsl
js
adc
ret
in
xchg
stos
xorl
cltd
jae
loopne
fwait
inc
out
push
dec
and
iret
mov
or
shll
cmp
push
sbb
ds
mov
mulb
mov
nop
aad
add
jnp
and
stos
ljmp
cs
cwtl
jb
fldcw
cld
inc
into
mov
aaa
dec
xchg
dec
aad
ficompl
xchg
jb
sub
jns
mov
loop
jo
xchg
sbb
push
adc
outsl
ret
mov
sbb
insb
in
push
mov
dec
xchg
dec
jle
mov
and
ret
cltd
push
arpl
mov
mov
es
mov
push
and
sarb
jbe
sub
sbb
lcall
dec
cwtl
sub
mov
bound
rolb
aam
sbb
cwtl
xchg
stos
inc
lcall
xor
xor
add
mov
adc
addr16
iret
xadd
lcall
jae
lcall
or
xchg
jbe
pop
arpl
popa
fistl
es
inc
mov
mov
sahf
cmpb
mov
jp
in
and
xchg
mov
aad
movsb
jb
andb
fistpll
ret
mov
bound
aaa
cmp
sub
jb
xchg
add
mov
arpl
xchg
push
push
mov
xchg
ficompl
mov
les
and
sbb
add
pop
adc
subb
jb
xor
cmp
cmpb
stos
push
inc
inc
jl
mov
scas
dec
push
add
scas
sbb
push
nop
mov
rol
movsb
pop
mov
pop
inc
inc
jne
cmp
mov
nop
les
orb
dec
xor
mov
mov
fwait
xchg
data16
add
and
test
inc
sbb
mov
cmp
mov
cwtl
inc
out
fisubl
ror
sbb
repnz
add
lcall
lea
push
sbb
arpl
xchg
hlt
inc
outsl
pop
cmc
xchg
in
xchg
pushf
aad
in
cmp
pop
or
shlb
sahf
int3
sbb
cmpsb
push
arpl
xchg
pushf
xchg
and
xor
cwtl
dec
cmc
push
inc
stc
fdivl
cltd
mov
sbb
jae
xchg
inc
mov
and
scas
adc
popa
nop
mov
std
jb
and
outsb
inc
fnsave
adc
xchg
inc
add
xor
pop
dec
lret
adc
ret
push
cltd
fisttps
pop
jl
jg
mov
mov
jns
je
movsb
mov
jle
inc
ja
push
and
ljmp
dec
cmp
push
cmp
xchg
push
dec
jo
push
ljmp
nop
xorl
pushf
sbb
pop
push
mov
mov
and
pop
dec
sub
cwtl
decb
pop
cmp
adc
clc
push
js
inc
fxch
sub
inc
push
out
cmpsl
push
push
jl
mov
ss
mov
and
xchg
mov
dec
sub
xchg
test
ss
dec
sbb
xchg
dec
nop
mov
sbb
inc
dec
and
scas
nop
imul
xchg
inc
cld
xchg
sub
es
nop
pushf
and
or
push
hlt
int3
jp
mov
ds
sbb
clc
dec
push
sub
nop
test
test
pop
mov
xchg
adc
dec
nop
sbb
outsl
in
fmull
pop
and
add
inc
xchg
inc
aaa
mov
mov
lcall
push
adc
shl
jmp
sub
jae
cmp
lcall
sbb
std
mov
pop
mov
lods
push
int3
dec
adc
dec
lods
bound
stos
fildl
pop
mov
in
lods
xor
push
in
lcall
xchg
fcomps
pop
test
jl
nop
and
pop
imul
ds
sbb
and
mov
fisubrs
mov
inc
mov
inc
mov
test
push
mov
mov
out
inc
xor
fnstsw
mov
out
dec
bound
inc
sbb
pop
int
inc
push
mov
cmpl
mov
lds
jle
dec
mov
xchg
shll
dec
lcall
ljmp
sub
ret
div
mov
in
xchg
jb
dec
pop
mov
jl
shl
sbb
lcall
ss
sti
and
inc
jbe
add
jge
fucom
jne
and
and
inc
mov
inc
and
dec
stos
fwait
loop
cmpsl
dec
pushf
mov
out
das
aad
lret
mov
mov
mov
push
and
bound
pop
sub
push
dec
idivb
xchg
and
rcrb
mov
xchg
inc
mov
cwtl
fldenv
mov
lcall
ret
popa
aas
push
movsb
mov
out
mov
arpl
aam
sbb
dec
adc
jns
movsb
faddp
into
ss
cwtl
sbb
xchg
pop
out
cmp
or
popf
out
scas
cmp
cmp
inc
dec
jmp
aam
adc
aas
imul
push
stos
mov
loop
aam
inc
rcrl
or
inc
jle
sbb
inc
enter
cmp
pop
rolb
jae
movsl
adc
xor
and
pop
mov
test
inc
dec
aas
addr16
xchg
mov
sbb
das
loop
in
mov
push
mov
mov
in
pop
and
dec
cmpsb
xor
jb
mov
popf
add
cmp
jle
or
inc
mov
mov
sbb
xor
divb
add
nop
mov
aam
pop
add
popf
dec
fiadds
adcl
pop
scas
push
jp
shll
xchg
adc
inc
test
inc
cmp
lahf
inc
xchg
mov
sub
cmp
inc
rorb
jo
jl
js
leave
inc
test
popa
pop
push
add
adc
lds
daa
ret
flds
add
inc
jo
and
cmp
sahf
add
pop
push
or
mov
xlat
or
ficomps
ds
xchg
fildl
adc
pop
or
and
jle
enter
push
mov
lret
jbe
lcall
out
mov
fwait
cmc
mov
data16
xorb
sbb
cwtl
push
daa
aas
pshufw
sbb
nop
dec
test
jg
pop
pushf
in
push
lret
jbe
mov
sbb
dec
movsl
sbbb
scas
lcall
push
pop
jp,pn
inc
xor
pop
mov
mov
ret
ret
push
jp
cs
mov
xor
xor
sub
add
test
sbbb
inc
out
cmc
sbb
movsb
cwtl
mov
push
rcrb
data16
dec
or
mov
mov
inc
dec
push
jg
leave
adc
arpl
pop
loope
inc
in
mov
and
mov
icebp
loopne
popa
subb
mov
or
in
les
sbb
addl
or
test
fidivl
mov
pminsw
jle
xchg
popa
rolb
cmp
lahf
cli
inc
push
dec
sahf
inc
clc
mov
sub
push
xchg
andl
clc
xchg
mov
push
jle
out
pushf
stos
xor
rclb
inc
ss
jbe
loop
rclb
cwtl
or
push
push
inc
in
cmp
push
cmpb
pushf
popf
in
aaa
jl
sub
sub
sub
push
jg
sub
cmp
inc
aam
inc
pushf
lret
sbbb
mov
mov
push
test
adc
push
pushf
stos
fiadds
aad
add
inc
js
pop
push
adc
mov
push
and
jmp
push
ret
mov
inc
loop
jbe
jbe
dec
movsb
or
inc
push
pop
lret
dec
dec
mov
inc
push
mov
inc
test
mov
jns
loopne
movsb
subb
mov
mov
mov
loop
cmpsl
daa
cmp
sbb
xchg
cwtl
push
nop
mov
andl
push
pushf
inc
in
push
inc
inc
and
jl
adc
and
movsb
nop
xlat
inc
in
add
sbb
out
stos
sahf
mov
inc
inc
fiadds
daa
xchg
push
jbe
xorb
inc
dec
or
dec
cmp
push
fmul
push
mov
and
adcb
push
dec
insb
int3
in
mov
sbb
arpl
imul
pop
lds
sbb
xchg
sahf
into
movsb
mov
dec
xchg
mov
cmpsl
and
or
nop
ljmp
pushf
xchg
test
add
mov
fldl
cmp
dec
call
rcrb
xchg
mov
sub
inc
jo
xchg
inc
stos
or
out
mov
mov
movl
pop
adc
cmp
dec
jp
inc
and
jae
outsb
inc
fimuls
int
xchg
lods
ss
ret
dec
data16
sahf
movsb
pop
xor
mov
sbb
xor
ss
cmp
add
jle
sahf
ja
ss
test
cmp
ret
push
ss
sbb
dec
mov
adc
xchg
cmp
sbb
push
push
mov
mov
nop
pushf
adc
out
sbb
xor
inc
sarl
jo
xchg
push
addb
mov
mov
push
orb
xchg
inc
es
pop
js
or
inc
inc
mov
inc
je
cmpsb
and
mov
sub
mov
or
inc
mov
pop
sbb
mov
cli
xchg
stc
movsb
adc
or
test
inc
cmp
fisubl
or
mov
cmpsb
cmp
iret
xchg
and
ds
enter
cwtl
jle
sahf
sbb
nop
lcall
test
cmp
add
jns
push
inc
xchg
adc
sahf
in
pushf
sbb
dec
jl
pop
fld
sbb
jp
mov
lds
out
mov
mov
jle
rcrb
pop
jo
shlb
or
inc
sbb
js
das
rol
and
mov
sahf
pop
out
inc
sub
mov
xor
movsb
sarb
orb
mov
and
dec
popa
js
xor
movsb
mov
cmpsb
push
adc
sbb
xor
push
pop
xchg
lock
mov
cmp
insl
ret
xchg
ss
call
sub
cli
jb
sub
mov
jmp
push
les
dec
pop
out
xchg
sbb
jo
lcall
cmpsl
push
or
sbb
jbe
and
xchg
mov
jp
add
cmp
sahf
and
cld
inc
mov
push
outsb
mov
inc
jle
andl
pop
inc
xchg
fwait
scas
aam
adc
rorl
mov
lcall
add
push
xor
jb
cmc
out
clc
cwtl
push
or
adc
sbbb
ficomps
ret
dec
inc
and
stos
cmp
push
pop
cwtl
sbb
push
dec
nop
jb
popa
inc
test
sub
in
jbe
ficompl
mov
fcmovb
mov
xchg
lods
aad
xchg
test
mov
cmp
sub
xor
out
push
cmp
mov
dec
or
push
rcrb
xchg
bnd
xorl
push
out
push
sbbb
pop
cmpsb
sbbl
fwait
inc
fcoml
in
mov
dec
and
dec
xor
mov
jp
jns
inc
xchg
inc
test
jl
jmp
nop
insl
shrb
pop
adc
lods
adc
cwtl
xor
push
pop
xchg
aaa
testb
push
and
xchg
adcb
xchg
jne
add
cmp
inc
es
mov
xor
outsl
xlat
xor
test
es
jno
push
sub
xchg
lea
mov
add
testl
stos
dec
gs
daa
push
gs
mov
inc
xor
mov
xchg
mov
dec
jle
mov
xor
push
call
data16
mov
pushf
push
pop
leave
and
sub
xor
aam
mov
xchg
push
or
mov
mov
sub
or
add
xchg
add
leave
add
aam
xchg
lret
in
ret
inc
dec
in
adc
faddp
aad
pop
jb
mov
stos
popa
loop
jb
loop
sub
jmp
sbb
int
gs
mov
xor
pop
jp
sar
and
cld
jl
in
rcrl
loope
xchg
pop
clc
pop
inc
lock
xchg
or
inc
rclb
aaa
jo
cmpsb
in
jle
inc
int
cwtl
mov
lds
mov
push
cmpsl
ljmp
fstl
fdivp
dec
mov
adc
bound
ret
ret
xchg
adc
cmpb
adc
and
cmp
add
mov
dec
push
xchg
inc
aad
aam
cmp
lcall
and
mov
popa
jne
rcl
loope
shlw
pop
ret
adc
sbb
push
mov
ss
imul
mov
dec
jle
cmpsb
cmp
lcall
lock
movsl
test
jg
clc
imul
ss
in
sbbb
inc
dec
out
popf
xor
test
pop
popa
mov
push
dec
dec
pushf
divl
cmp
push
inc
inc
mov
xchg
rcr
rorb
iret
pop
stos
outsl
cli
shr
inc
mov
mov
cmp
arpl
inc
sbb
pop
pop
and
inc
cwtl
aam
and
pop
cmpsl
push
xchg
insb
ja
push
jb,pt
sarb
ficoms
jns
dec
xchg
js
inc
divl
xchg
test
and
cli
movsl
imulb
ss
push
inc
lcall
mov
xchg
in
out
pop
mov
and
rcl
mov
push
pushf
popa
arpl
cli
orb
dec
jge
push
sub
sti
inc
push
mov
adc
imul
push
add
pop
push
add
jnp
jbe,pt
in
xlat
aam
pop
xchg
div
dec
push
aaa
lods
cmpsb
cli
cwtl
xchg
adc
sbb
or
ds
add
hlt
push
or
push
jb
mov
xor
xor
popa
pop
pop
cmp
pop
mov
inc
in
jle
mov
imul
dec
fcomps
sub
mov
or
xor
pop
mov
cwtl
pop
mov
and
into
pop
cmp
cmp
and
adc
pop
jl
ret
cltd
data16
dec
mov
push
inc
lcall
out
push
push
nop
cltd
inc
ds
xor
scas
lods
idiv
mov
pushl
push
push
mov
xorps
inc
jl
test
dec
jbe
sub
iret
mov
leave
mov
dec
dec
loop
cmpsl
add
xchg
mov
mov
or
xchg
add
lds
xor
ds
inc
mov
inc
sbb
inc
outsb
sub
mov
jb
cmp
js
cmp
nop
pop
and
orb
xchg
dec
incl
mov
push
leave
jno
lcall
js
nop
mov
mov
pop
hlt
push
ds
xor
and
pop
cmp
xchg
dec
xchg
push
iret
cmp
cmpb
mov
sbb
pop
and
mov
movsb
sbbb
adc
ss
xor
lcall
lret
and
sbb
inc
cmp
movsb
and
mov
js
insb
or
jge
push
mov
and
popa
sbb
adcl
aas
pop
jb
insb
dec
push
addb
mov
sbb
add
jle
jb
pop
inc
jne
imul
mov
jg
jecxz
ja
xor
adcb
sbb
jl
mov
xchg
inc
shlb
addb
push
loop
inc
jg
push
int
in
push
inc
mov
inc
sbb
jae
inc
es
pop
orl
push
adc
xorb
ret
pop
lret
insl
and
xchg
jb
add
xchg
imul
sub
xor
dec
xor
add
push
inc
mov
lds
mov
cmp
push
popf
sub
loope
jl
pop
sub
mov
outsb
xchg
or
std
xor
jle
scas
xchg
push
loop
mov
sub
adc
popa
pop
xorb
je
add
xor
push
push
sub
clc
ja
pushf
xchg
adc
mov
ja
js
jl
sbb
sbb
ret
gs
adc
adc
pop
ret
push
adc
imul
jle
out
out
mov
adc
push
inc
cmp
icebp
push
sub
negb
popa
rcl
cmp
aam
pop
push
push
fisubl
pop
and
sbb
in
dec
jb
into
popa
mov
loope
jo
xchg
ss
cmp
iret
xchg
outsb
pop
or
mov
ret
aad
dec
sahf
subl
xchg
xchg
rcl
jl
cwtl
leave
cwtl
lret
pop
ffree
faddl
lahf
dec
xchg
outsb
pushf
xor
dec
loop
xchg
adc
imul
mov
xchg
xor
mov
adc
add
cmp
es
sbb
jl
leave
fisubl
cltd
mov
push
sub
nop
push
sub
xchg
iret
test
cmp
ss
mov
push
sarb
xorl
mov
stos
xorl
cwtl
gs
dec
mov
adc
pop
mov
andb
inc
cmp
pop
addb
pop
ja
sbb
lahf
xchg
repnz
and
sbb
jb
sbb
insl
popa
adc
aad
mov
push
dec
push
and
xor
sub
inc
inc
cmpsb
push
push
inc
sbb
and
stc
rorl
ss
push
movsb
jns
aaa
jl
sbb
dec
sub
jbe
adc
xchg
lret
mov
mov
clc
jb
pop
jge
insb
pop
sub
enter
xor
mov
gs
dec
bound
insl
xchg
scas
cmp
inc
js
popa
push
inc
cmp
push
ljmp
push
jb
orl
adc
pop
cmp
fnstsw
cmpsb
and
pushf
sub
adc
out
mov
fsubs
dec
sbb
mov
pop
or
jg
fmull
js
lods
mov
mov
or
fdivrl
adc
lods
sbb
dec
push
and
lods
dec
push
jp
movsb
sbb
jo
cmp
mov
lds
mov
movsl
sarb
js
std
inc
js
mov
sbb
or
adc
icebp
cli
mov
and
push
jb
into
inc
push
xor
popa
push
loope
and
decb
daa
xchg
cmpsl
outsl
iret
or
push
daa
cmpsb
lds
ss
mov
xchg
je
cmp
push
lea
arpl
lcall
jne
out
sahf
or
js
push
mov
lcall
inc
and
cli
cwtl
inc
or
ljmp
sub
in
inc
clc
jb
push
in
push
pop
xor
loop
cmp
sbb
mov
outsl
ja
pop
adc
movsb
mov
into
sub
jbe
sbb
pop
flds
push
mov
mov
out
aas
popa
ss
mov
bound
lret
and
xchg
push
cmp
mov
stc
es
inc
mov
xor
popa
inc
imulb
pop
lret
daa
or
or
mov
leave
inc
orb
add
mov
sbbb
mov
xor
stc
mov
cmp
cmp
or
loop
in
sarb
out
clc
dec
js
sub
pop
shr
inc
jbe
fldt
cmpsl
test
xchg
jmp
mov
jmp
cmp
test
sub
push
pop
gs
jo
mov
ret
test
ss
push
mov
push
cmp
cmpsl
lods
xor
mov
push
xchg
pop
xchg
fldl
jno
shr
jl
push
dec
mov
xchg
loope
cmpsl
sahf
mov
imul
pop
leave
repnz
mov
lret
mov
mov
fiadds
xor
mov
and
mov
or
aad
mov
sub
jl
jp
cmp
xchg
push
shlb
ds
dec
mov
in
js
adc
mov
test
sub
mov
push
pop
xchg
mov
adc
push
adc
mov
inc
add
mov
jle
mov
popa
jne
mov
xor
mov
xor
dec
xchg
xchg
pop
push
dec
cld
lahf
mov
pop
inc
es
push
es
push
mov
icebp
add
mov
xchg
nop
jo
sbb
and
xor
adc
dec
jb
xor
imul
sbb
xchg
push
pop
jbe
ss
jae
mov
adc
into
jbe
in
sbb
pushf
scas
repnz
pop
xor
sahf
push
scas
xor
dec
or
adc
leave
dec
addb
nop
adc
xor
jp
sbb
gs
mov
sbb
jae
sbb
and
inc
push
mov
push
inc
pop
les
pop
and
cli
pop
mov
mov
and
jl
popa
and
dec
pop
dec
test
pop
push
call
xor
push
mov
or
dec
push
xor
xchg
cwtl
sbb
push
and
mov
or
movsl
mov
mov
sbbb
and
dec
add
sbbb
addb
jge
xchg
adc
test
lcall
ljmp
pop
arpl
dec
cmp
push
or
in
dec
negb
adc
lds
cmp
mov
cmpsb
and
jp
popa
xlat
inc
push
mov
xchg
jno
and
xchg
dec
mov
loop
and
mov
lea
sbbb
arpl
pop
fildl
xchg
push
or
xchg
xchg
arpl
aam
test
loopne
add
lret
cmp
dec
sbb
movsb
dec
ja
sub
popa
test
pop
adc
jo
and
shrb
push
xorb
outsb
stos
pop
icebp
mov
mov
xchg
fildl
pop
mov
roll
push
jl
adc
sub
xchg
leave
jecxz
sub
jp
jge
dec
mov
jo
test
sub
popa
push
mov
scas
lcall
push
shl
stos
pop
sub
jp
mov
adc
cmpb
mov
bound
pop
inc
cwtl
mov
mov
popa
ljmp
cmpb
loop
sbb
outsl
lcall
bound
in
inc
sub
js
dec
or
inc
lods
jl
xchg
sub
in
ss
jle
xchg
pop
xlat
mov
dec
xchg
mov
xchg
xor
push
out
lret
cmp
mov
push
inc
dec
aam
mov
sbb
mov
fisubrl
call
cwtl
call
dec
jo
in
push
dec
inc
sbb
scas
adc
std
loope
inc
cmp
pop
call
mov
push
fstl
pop
sub
les
pushf
es
mov
mov
pop
mov
cmpsl
push
cwtl
adc
lcall
popa
pop
pop
jmp
sahf
data16
push
and
mov
rolb
push
orb
arpl
push
in
push
faddl
inc
mov
add
nop
outsl
mov
sahf
jl
idivb
xchg
dec
lcall
ret
insl
push
pop
dec
popaw
nop
sbb
dec
imul
dec
cwtl
movsl
mov
jbe
jl
scas
aaa
jo
push
loop
mov
pop
adc
mov
mov
jnp
mov
xor
sbb
pusha
inc
and
out
fadds
sbb
jp
inc
add
push
inc
mov
dec
pop
jge
jne
and
lcall
icebp
inc
mov
mov
pop
jle
lret
inc
jbe
jbe
and
and
and
shlb
sahf
mov
enter
xchg
mov
sub
pop
push
loop
and
insl
cmp
mov
lcall
fs
push
push
mov
scas
in
or
inc
xor
xor
outsl
inc
fisubl
add
pop
inc
es
adc
fidivrl
jp
cmpsb
sahf
sbb
int3
cmp
sbb
xchg
outsl
lcall
dec
arpl
aas
xchg
push
add
lret
add
sbb
jnp
mov
and
xchg
and
mov
ds
or
inc
mov
xchg
xor
push
or
mov
or
lret
jne
jbe
dec
ret
gs
cmp
mov
adc
cmpsb
lahf
lcall
mov
sub
pop
pop
dec
mov
pop
push
sbb
subb
cwtl
inc
or
mov
sbb
es
adc
js
or
and
push
inc
sub
ds
sahf
ret
inc
fsts
xor
stc
sbb
arpl
ss
mov
sub
sahf
lret
inc
xchg
sbb
out
or
push
inc
pop
jl
xchg
dec
push
pop
ret
std
mov
icebp
fs
cmp
sbb
inc
sub
ja
aam
dec
push
cmpsl
dec
push
pop
sbb
js
movsb
aas
sbb
xchg
andb
and
xchg
out
adc
dec
inc
push
push
ss
sub
test
xchg
pushf
pop
jbe
dec
push
dec
xchg
add
push
push
in
push
xchg
xchg
pop
lcall
xor
sbb
adc
loopne
aam
iret
loope
adc
call
inc
fcmovnb
sbb
inc
push
inc
loop
cltd
orb
sahf
adc
fs
roll
lcall
mov
add
test
jl
mov
dec
aad
jb
xchg
mov
les
lret
and
xchg
pop
inc
sub
mov
push
adc
pop
stos
in
and
xor
jle
fcompl
or
sub
xchg
inc
gs
push
adc
scas
ret
jmp
stc
xlat
push
js
sub
lods
stc
push
jl
fadds
push
ret
idivb
add
popf
jb
adc
loope
lock
push
sub
inc
orb
ret
mov
in
rolb
mov
lods
mov
hlt
mov
sbb
in
add
push
and
cltd
imul
js
sti
sahf
out
stos
mov
cwtl
push
xchg
jo
sbb
int
mov
rorl
mov
push
dec
out
add
xchg
lret
adc
jl
add
pop
fs
loope
xor
mov
sar
cwtl
aaa
xor
arpl
int3
cmp
mov
fcmove
shlb
cmpsb
filds
inc
xchg
and
cmp
push
push
rol
dec
out
popa
xchg
inc
mov
ds
cmc
std
add
push
sahf
pop
pop
fs
in
pop
or
fcomps
cmpsl
popa
dec
xchg
ret
or
sahf
xchg
rclb
cltd
cs
mov
xor
test
xor
cmp
into
inc
inc
es
andb
outsl
movsl
je
outsl
cmp
pop
sub
mov
enter
ss
pop
aam
sahf
jp
pushf
lret
jmp
push
inc
mov
push
jbe
out
xchg
orb
mov
gs
cltd
mov
popa
adc
jo
push
inc
daa
stos
mov
sub
push
adc
sbb
pop
mov
jbe
jb
xor
push
fisttpll
pop
jle
inc
arpl
scas
mov
add
mov
mov
pop
in
sbb
add
xorb
jp
es
inc
xchg
sbb
xlat
inc
push
jp
sub
lods
subl
stc
test
mov
or
in
push
pop
xor
jg
pop
add
add
adc
add
std
lret
dec
mulps
push
and
call
cmp
inc
inc
bound
cmp
pop
testb
decl
loope
dec
pop
inc
cltd
xor
icebp
dec
xchg
enter
sahf
dec
lea
push
lea
stc
or
adc
out
into
sbb
xchg
jbe
popa
pushl
xlat
popa
fistl
and
jae
ja
in
bound
loope
mov
jae
xlat
aad
fstps
call
push
in
ds
imul
or
in
mov
xchg
pop
inc
ss
cmp
sub
in
out
xor
aad
xchg
in
pop
ss
test
pop
push
in
push
pop
xlat
popa
loop
mov
paddusw
mov
in
aam
dec
or
adc
xlat
xchg
xchg
sar
in
mov
mov
insl
popa
push
out
bound
xor
or
mov
pop
sub
pop
or
sahf
xlat
data16
push
push
cld
popf
imul
inc
inc
dec
test
sbb
push
insl
sub
ret
stc
push
pop
inc
fdivrl
mov
in
test
popf
pop
in
mov
pop
test
std
in
sub
pop
arpl
in
inc
mov
mov
jp
icebp
in
sub
ret
pop
xchg
in
pop
inc
adc
in
repz
ss
jo
imulb
xor
in
leave
or
int
scas
repz
in
fcomi
add
pop
add
in
or
pop
ds
in
repnz
pop
ds
in
bound
popa
ds
adc
fwait
in
jmp
pop
ds
in
sti
imulb
arpl
paddw
rcrl
xor
sbb
push
in
mov
das
dec
xchg
mov
pop
cmp
popa
mov
xchg
ficoml
xor
push
cmc
sti
lcall
xchg
aas
xchg
push
push
adc
sbb
mov
push
xor
mov
dec
out
xchg
sahf
inc
jmp
lahf
sbb
and
stos
xchg
xchg
mov
xchg
push
dec
mov
mov
cmpsb
dec
movsb
pop
inc
dec
fstpt
xor
cwtl
pusha
and
aam
sbb
adc
lcall
mov
inc
xchg
jp
inc
or
add
pop
unpcklps
out
in
popa
das
movsb
inc
scas
jl
mov
cmpsl
jb
jo
or
dec
fadds
push
cmp
mov
mov
jbe
inc
xchg
mov
push
or
cmpsl
loopne
and
fcompl
jle
jne
std
and
stos
push
push
hlt
push
and
ss
jle
sahf
lcall
cmpsb
std
pop
inc
push
and
sbb
xchg
cmp
mov
mov
fidivl
jp
inc
pop
rcrb
cwtl
xor
nop
push
and
mov
dec
push
sub
or
jb
subb
jb
mov
sbb
lea
cmp
fbld
jecxz
and
jmp
dec
pop
inc
in
cwtl
iret
pop
mov
jecxz
out
jb
push
ret
push
in
xor
arpl
push
test
sbb
push
rolb
cwtl
push
call
add
jp
dec
xor
push
mov
inc
xchg
add
nop
sahf
sbb
adc
mov
xor
cs
ljmp
das
in
mov
sahf
dec
xlat
sub
add
add
add
cmp
inc
cld
push
insb
dec
mov
cmp
pop
cmp
pop
push
sbb
push
xchg
inc
push
arpl
inc
ss
push
xchg
rcrb
xor
dec
test
push
xor
mov
or
jne
lock
lret
outsb
and
ds
pushf
or
test
lret
rol
icebp
out
or
lds
mov
and
jle
rcrl
or
fwait
lods
cld
sbb
xlat
inc
pop
mov
add
outsb
stc
in
mov
jns
ret
fildl
mov
sbb
pop
sbb
enter
and
adc
push
jle
aad
sti
out
push
repz
pop
divl
rcrl
je
in
addr16
fadds
inc
inc
adc
inc
mov
loop
or
in
pop
sub
push
sahf
das
jb
aaa
fisttps
sarl
in
fnstcw
adc
push
jbe
mov
cld
mov
mov
dec
jo
mov
into
jecxz
xor
adc
lcall
push
bound
rolb
roll
mov
in
push
loope
cmp
loope
pop
in
adc
pushf
leave
cmpsl
xchg
jl
ljmp
xchg
jp
pop
adcb
and
lret
in
dec
subb
xchg
pop
xor
pushf
push
xchg
cmp
outsb
stos
rolb
cmp
les
mov
mov
xorb
dec
lods
gs
or
arpl
ds
dec
mov
dec
ja
int3
xchg
push
mov
push
ret
arpl
mov
mov
jae
pop
mov
cmp
nop
dec
push
addr16
insb
bound
mov
fcomi
jb
aas
xchg
in
js
mov
mov
and
cmc
cmp
jle
jb
arpl
push
data16
push
outsb
mov
mov
dec
ja
es
loop
inc
push
idivl
mov
cmp
jno
dec
pushl
js
jb
mov
push
xchg
inc
add
inc
jp
add
jle
shll
cmp
mov
aad
pop
push
mov
iret
pop
xchg
mov
push
xchg
gs
dec
movsb
call
cmp
cmp
jp
int3
lcall
xchg
and
fmull
notb
jb
lock
adc
inc
out
jmp
push
and
inc
add
push
push
jo
xchg
push
dec
sub
addr16
es
sbb
push
aad
cmp
pop
iret
mov
pop
lds
dec
push
arpl
js
push
outsb
out
jo
and
mov
jecxz
decb
mov
int3
cmp
sub
pop
adc
or
inc
cli
cwtl
push
lds
xchg
push
inc
sub
lret
jl
and
cmp
pop
jg
jbe
pushf
dec
aam
xchg
call
lds
out
dec
nop
mov
cmpsl
mov
push
adc
in
jne
mov
jl
popa
leave
mov
cltd
int3
pushf
sbb
jecxz
out
push
xchg
push
loop
movsb
jb
sub
gs
mov
xchg
xchg
lahf
lea
les
js
cmp
jle
pop
jo
stos
nop
or
loope
and
fidivrs
ss
jge
xchg
push
jp
nop
pushf
cmp
and
inc
add
mov
mov
cmpb
dec
xchg
insl
fwait
mov
jl
cmc
xor
push
sbb
out
sahf
cmpsl
push
lcall
decb
xor
mov
sbb
inc
xchg
xchg
arpl
ss
sub
push
imulb
and
push
in
inc
adc
sbbb
and
cmpb
mov
ds
mov
xchg
mov
sbb
cmpsl
sub
andb
negb
mov
and
pop
dec
inc
sar
mov
jle
mov
cwtl
jb
xor
pop
push
movsb
ja,pn
mov
aas
mov
leave
sarb
cmp
repz
pop
arpl
dec
push
sbb
in
sbbb
cmpsl
pop
pop
sbb
push
je
add
sub
adc
push
cmpps
pop
cwtl
push
push
pop
or
fldl
es
push
jb
sbb
notb
xchg
dec
pop
mov
inc
test
icebp
jb
xchg
mov
dec
imul
xchg
inc
ljmp
adc
pop
inc
cmp
je
jo
mov
adc
inc
inc
adc
cwtl
outsb
mov
push
and
dec
lcall
sarb
sbb
cmp
mov
inc
mov
add
xchg
or
sub
push
pop
lret
loop
sahf
xchg
les
pop
mov
lret
in
popa
pop
popf
sahf
xchg
xchg
cld
inc
clc
mov
in
cld
mov
fcmovnbe
movsb
mov
nop
and
inc
mov
orb
mov
xor
push
mov
int3
test
push
xchg
cmp
add
mov
lds
leave
mov
pop
mov
aam
xchg
xchg
xchg
jns
loopne
das
imul
xchg
movsb
nop
or
xchg
push
and
mov
xchg
nop
iret
adc
dec
ja
mov
je
scas
push
clc
inc
stos
stos
xor
push
idivb
sbb
fisubrs
arpl
mov
inc
mov
push
inc
mov
aad
in
nop
xchg
push
push
aas
fiadds
insl
pop
push
ja
rorb
pop
xchg
leave
enter
and
ljmp
mov
inc
or
in
push
pop
push
push
mov
push
popa
mov
mov
jb
ss
sbb
stos
and
pop
cwtl
mov
sbb
mov
xchg
jp
mov
and
inc
pop
addl
adc
dec
add
xchg
aas
dec
mov
jg
jl
inc
dec
jne
ljmp
push
ja
movsb
push
inc
mov
in
lock
in
pop
inc
adcl
enter
in
dec
push
inc
cmpl
nop
xchg
gs
xchg
in
lret
cmp
inc
les
or
and
push
add
aad
stos
pushf
gs
adc
jl
vmovhps
addb
in
lret
cwtl
nop
mov
adc
pop
jl
mov
in
inc
pop
pop
pushf
pop
xchg
dec
js
and
ss
mov
sbb
mov
inc
rcll
dec
movsb
jle
adc
fidivl
test
add
push
cwtl
xchg
mov
leave
daa
inc
adc
cmp
inc
in
mov
mov
xlat
cmpb
pop
nop
das
cwtl
mov
pushf
addl
mov
push
cmp
jo
cmp
mov
jl
gs
xacquire
fs
ds
pop
ret
data16
xchg
rcrl
int3
aam
test
xchg
jo
and
pop
inc
inc
ficoml
xchg
aam
mov
push
and
arpl
dec
push
push
mov
push
jmp
div
call
and
jecxz
inc
mov
test
xor
add
mov
jb
pushf
inc
jne
jbe
sbb
jp
push
push
push
push
pop
rorb
xorb
gs
ds
inc
sbb
rcr
pop
push
sub
cld
in
in
es
and
push
mov
inc
mov
mov
sub
jb
lcall
inc
mov
popa
dec
push
pop
jbe
lret
dec
nop
pop
xor
addb
push
outsb
mov
push
ds
mov
arpl
outsl
cli
push
mov
sbb
loop
inc
mov
lcall
sbb
mov
jns
pop
adc
inc
jnp
dec
imul
test
fisttpll
shlb
inc
xchg
enter
ss
lahf
and
lcall
xor
ljmp
rcrb
sbb
pop
lret
mov
mov
xchg
bound
and
out
cmp
push
cmpsl
dec
lcall
imul
mov
scas
popa
scas
dec
mov
push
stos
or
cwtl
mov
in
or
sub
or
jbe
mov
int
lcall
call
cmp
nop
mov
sbb
mov
push
notb
push
test
mov
pop
mov
shlb
in
lcall
mov
in
push
cmp
std
jge
test
imul
push
popa
or
push
push
pop
jo
incb
andb
mov
jle
push
inc
xor
xchg
lcall
xor
mov
pop
push
imul
nop
std
mov
call
cs
mov
lock
mov
jb
fidivrl
dec
aas
sbb
cmp
jb
icebp
cmp
cmp
push
push
pop
popa
cmp
xlat
jle
bound
shlb
negl
pop
ds
add
das
xchg
out
sub
dec
sbb
dec
push
ss
jle
xchg
xchg
pop
mov
jg
push
dec
inc
adc
jmp
orb
outsl
mov
aaa
xchg
scas
popf
mov
call
cmp
sbb
push
jmp
sub
jecxz
popa
fisubrs
mov
cmp
in
ret
cmpb
xchg
push
mov
test
jle
mov
pop
dec
in
movsb
cmp
inc
cmpsl
pop
ds
dec
inc
adc
jecxz
cmpsl
mov
and
or
inc
lcall
xchg
movsb
subb
jge
aad
aad
cld
sbb
xchg
fs
jo
lret
jo
cmc
aad
dec
popa
ret
and
pop
mov
loope
xor
fwait
jp
mulb
inc
dec
int
ss
stc
xchg
popa
cmp
xor
dec
mov
sbb
push
push
mull
pop
jb
nop
xchg
pushf
roll
mov
lods
int3
sub
push
mov
jb
cli
mov
ss
jb
inc
stos
mov
push
out
add
adcb
pop
adc
sahf
mov
js
push
mov
sbb
xor
xchg
movsb
xchg
jle
sub
mov
sbb
push
xor
cltd
or
xchg
loop
lret
dec
mov
jnp
mov
jbe
push
dec
jb
sbb
cmpl
cmp
inc
jl
dec
mov
inc
push
adc
aad
cmpsl
aam
pop
mov
nop
lea
lret
ss
mov
cmp
sbb
lods
ficompl
mov
mov
cmpsb
jle
and
shlb
push
adcb
sbb
or
push
cmp
rcll
adc
pop
sbb
out
ja
pop
aam
push
rcll
cmp
xchg
mov
sbb
cwtl
test
rcrl
andb
xchg
mov
mov
push
xchg
push
lods
push
pop
xor
rorl
in
mov
xchg
pop
gs
jb
inc
inc
idivl
or
xchg
cmp
inc
jmp
mov
inc
jge
and
outsl
notl
pop
int3
jbe
ss
js
xchg
iret
sbb
pop
andb
outsl
js
push
mov
jl
push
addb
jmp
mov
dec
adc
cwtl
sbb
jmp
pop
jno
std
int3
fcoms
lret
mov
mov
dec
ss
push
inc
jp
out
fcompl
mov
jmp
and
inc
imul
push
inc
es
mov
xchg
scas
sarl
inc
mov
and
in
movsb
and
push
xor
and
filds
and
in
dec
lret
push
adc
adc
inc
cmp
push
push
jg
fsts
cld
xorb
pop
mov
adc
pop
jae
lret
cmp
iret
push
adc
or
inc
gs
xchg
ljmp
and
aad
call
xorb
out
test
cmp
sub
mov
ss
lcall
mov
xchg
add
jmp
xchg
cmp
inc
xor
loop,pt
and
jo
pushf
rorl
cwtl
pushf
std
in
rcr
adc
scas
push
inc
cmp
xchg
adc
flds
sbb
imul
es
mov
inc
or
xchg
adcb
and
cmp
cwtl
and
popa
rclb
ficompl
mov
pop
cmp
xchg
lcall
mov
xchg
xchg
ss
inc
fists
mov
xchg
pop
pop
dec
orb
pop
xchg
inc
sti
ret
push
or
lcall
dec
cwtl
jmp
stos
and
stos
ret
mov
push
mov
and
punpcklwd
out
xchg
sahf
movsb
fistl
dec
push
lret
mov
popa
jp
adc
inc
xchg
cwtl
test
test
inc
aaa
add
sbb
movsb
xor
dec
dec
sub
mov
mov
daa
cli
testb
xchg
call
sub
ss
inc
rorl
sbb
jecxz
push
ret
fnstsw
jp
rcll
mov
lds
lcall
stos
cli
int3
out
push
pop
dec
push
lock
cmp
sbb
pop
mov
sahf
mov
push
ficomps
xor
nop
dec
fiaddl
adc
lret
push
add
cli
jp
push
push
int3
push
pop
pushf
in
mov
ds
and
sahf
inc
jg
lahf
adc
mov
mov
and
arpl
pop
push
cmp
sahf
push
in
mov
pop
dec
jmpw
pusha
mov
sbb
xchg
lcall
push
cltd
inc
aad
inc
test
cld
pushf
and
mov
sahf
or
insb
aas
push
push
and
cmp
ss
jp
loop
mov
sarl
in
arpl
inc
mov
nop
and
out
andb
lods
mov
dec
pop
inc
in
call
fidivrl
out
mov
mov
jmp
adc
loop
lret
push
jmp
mov
inc
cmpb
aad
ljmp
ds
xchg
push
mov
sbb
mov
xchg
cmp
addr16
xchg
inc
fnsave
in
pop
rclb
ret
push
int
jge
in
dec
push
sbb
insl
arpl
fcoms
shl
les
lea
push
cwtl
inc
imull
cmp
lods
dec
pop
and
push
movb
jo
xchg
rcll
insb
shrl
xchg
pop
ret
mov
mov
nop
cmp
lcall
cmp
ljmp
js
stc
jbe
mov
out
loope
sub
xor
out
xor
icebp
das
stos
add
lcall
inc
pop
sahf
repnz
stos
inc
mov
adc
cmp
jo
outsb
push
cmp
inc
xchg
and
pop
inc
nop
jbe
xor
cmp
fimull
xchg
stos
push
cmp
mov
mov
les
negb
adc
inc
int3
mov
inc
jo
enter
dec
idivl
aad
sbbl
popa
mov
lds
mov
mov
pop
jne
dec
mov
push
push
pop
scas
dec
xor
or
push
cmp
pop
mov
pop
cwtl
inc
sbb
rcl
je
jae
xor
lret
push
ret
pushf
xchg
mov
cwtl
test
pusha
and
dec
push
inc
sub
mov
enter
outsl
jle
nop
mov
cmpsl
push
pop
leave
sub
push
mov
cmp
gs
pop
mov
push
mov
xor
or
fcompl
addr16
jle
push
addl
pop
es
pop
pop
movsl
jp,pn
je
pop
mov
fs
insl
sbb
xchg
add
cmp
inc
pushf
jge
insb
jno
hlt
ss
jle
movsl
fiadds
mov
loop
add
add
push
popa
and
inc
push
movsb
into
push
arpl
cmpb
sahf
cwtl
push
push
insl
push
sbb
test
enter
inc
movsb
cmpsb
push
fcoml
out
cmpl
inc
mov
mov
sahf
xor
jb
mov
push
shl
push
xchg
shr
pop
shlb
ret
mov
mov
mov
xor
test
cmp
cwtl
ss
hlt
jecxz
mov
mov
xchg
mov
xor
inc
mov
mov
mov
mov
inc
jmp
inc
push
shrb
dec
push
and
jae
test
mov
adc
jle
inc
or
dec
xchg
jecxz
cmp
aam
sahf
cmp
push
cwtl
cmp
cmp
jb
scas
cmp
out
test
in
sbb
fmull
cld
int3
xchg
dec
jle
out
mov
les
sbb
in
xchg
push
mov
rclb
push
push
push
push
or
ds
push
and
enter
rcrb
sbb
cmp
xor
xchg
mov
in
jle
ljmp
sbbb
mov
movsl
mov
push
cwtl
andb
xchg
add
shlb
leave
scas
pop
cmp
ret
jno
dec
js
and
cwtl
arpl
mov
movsl
mov
xchg
shlb
pop
jle
inc
mov
mov
outsb
jb
test
js
aad
pushf
mov
mov
clc
sub
lcall
push
mov
sbb
aam
cmp
dec
mov
movsl
cwtl
push
xchg
inc
xchg
rcll
lods
adc
and
mov
sbb
flds
or
aad
mov
pop
pop
sahf
xchg
dec
popf
lahf
ds
mov
pop
in
sbb
mov
xchg
and
mov
xchg
and
or
pop
xor
mov
push
adc
inc
push
jns
jl
jp
mov
mov
js
jl
repnz
xchg
mov
popf
add
lds
mov
xchg
dec
cmp
or
lret
mov
pop
subb
sbbb
arpl
popa
mov
mov
inc
cmp
ret
andb
push
add
inc
test
daa
frstor
or
xchg
lods
dec
lds
loope
lret
adc
adc
mov
inc
pushf
mov
ds
jno
jecxz
and
rcrb
mov
pushf
mov
add
arpl
loop
pushf
xchg
add
and
pop
push
mov
cs
sbb
mov
xchg
mov
sub
jo
scas
sbb
mov
inc
push
aas
adc
and
jl
xor
in
mov
lcall
cwtl
and
cmp
sahf
jb
mov
mov
and
push
mov
xchg
push
and
movsl
out
jl
adc
in
and
push
pop
push
jle
lds
mov
mov
fcompl
sbb
sub
imul
inc
js
aad
in
int3
pop
cs
jbe
inc
dec
aam
jle
cmp
daa
mov
push
mov
cli
mov
pop
out
ficompl
xchg
mov
xchg
push
sbb
inc
and
adc
fwait
and
ret
adcb
loop
aad
cli
and
cli
and
and
mov
pop
in
sub
hlt
in
in
or
sbbb
sub
jo
andb
movsb
push
pop
fwait
dec
sbb
jle
jb
mov
lds
xchg
push
add
insb
xchg
mov
test
andl
push
dec
aad
vpaddusw
repnz
std
and
cmpsl
roll
push
or
push
es
test
lahf
inc
nop
outsb
and
cmp
cs
mov
lfs
xchg
les
lahf
or
push
mov
js
xor
scas
mov
sbb
loopne,pt
add
push
inc
adc
pushf
sbbb
jl
js
mov
add
stos
push
xor
movsl
decb
push
or
and
jle
lcall
cmpsb
mov
dec
dec
es
push
ljmp
testb
pop
out
add
jecxz
bound
test
jne
fwait
and
pop
cltd
popa
inc
pop
data16
dec
outsb
xchg
stos
dec
pusha
or
xchg
hlt
inc
pop
nop
fwait
add
adc
pusha
rorl
in
inc
repnz
aam
pop
les
xchg
dec
inc
jl
ss
dec
test
push
dec
mov
xchg
cli
test
mov
sbb
test
push
push
out
inc
aad
ss
in
nop
inc
jp
cli
jle
iret
lds
into
or
lods
pushf
sbb
pop
ds
push
subb
mov
inc
push
sbb
sbb
push
lret
mov
or
or
and
in
fs
pushf
inc
ss
add
xchg
sbb
mov
and
jo
test
jno
out
stos
push
xchg
orl
pop
fs
pop
pusha
loope
cmp
and
add
popa
dec
loop
push
adc
daa
add
loop
push
cmp
loop
adc
test
pop
or
adc
iret
mov
push
fisttps
xor
test
cwtl
pop
in
xchg
arpl
sbb
xchg
adc
icebp
pop
shr
add
test
jo
adc
gs
dec
push
push
mov
and
insb
push
dec
in
inc
jmp
fsts
xor
push
mov
rclb
or
ss
jl
aaa
push
push
adc
cmp
and
inc
cmp
lods
sub
shlb
or
jp,pn
inc
js
rclb
inc
ds
test
mov
push
jp
push
int3
incb
jo
push
leave
push
add
test
adc
push
xchg
cld
pop
xor
xchg
rorb
mov
jp
sbb
mov
into
push
or
and
bound
pop
gs
xor
sbb
sub
push
movsl
leave
mov
sahf
inc
cmp
call
std
mov
cmp
sahf
sbb
mov
push
inc
sub
xchg
lds
or
jp
pop
cmp
cmp
jecxz
dec
jns
mov
add
xchg
xchg
xchg
or
cli
test
lret
clc
movsb
mov
cmp
cmpsb
mov
addb
push
pop
clc
outsl
mov
or
movsl
mov
inc
jl
sub
cmp
xchg
andb
pop
xchg
and
pushf
ds
test
faddl
mov
mov
jle
orb
imul
popa
aaa
push
push
push
xchg
or
mov
mov
and
pushf
nop
mov
and
xchg
outsb
movsb
rcl
xchg
js
loopne
jbe
push
lcall
out
popa
xchg
loope
add
mov
add
xchg
mov
mov
xchg
push
aas
inc
mov
arpl
pop
data16
in
or
sahf
mov
and
arpl
mov
pop
cmp
leave
mov
jne
repnz
xchg
and
cwtl
mov
nop
pusha
adcb
ss
sub
inc
jb
and
push
sbb
into
add
xchg
decb
inc
aad
or
pop
rcl
and
jbe
mov
cmp
sub
ljmp
and
xor
shlb
in
push
or
mov
mov
and
or
mov
mov
mov
inc
ja
jbe
shll
jae
ret
and
mov
mov
push
sahf
pop
sub
mov
inc
xor
jp
test
add
cmp
push
pushf
cwtl
sub
js
xchg
or
add
inc
dec
push
adc
add
mov
pop
and
sbb
pushf
or
mov
pop
sbb
dec
pop
negb
cmpsl
inc
jmp
loope
adc
xchg
in
out
stos
lret
mov
inc
sbb
nopl
xchg
add
ljmp
mov
cmp
jnp
push
push
nop
outsb
pop
and
xchg
out
mov
test
jmp
mov
xchg
mov
push
cltd
inc
mov
inc
xchg
mov
push
xor
and
xchg
pop
fdivs
or
adcl
xchg
sarl
in
dec
push
ljmp
push
mov
out
push
jp
call
fstpt
ret
dec
mov
mov
mov
je
aad
loop
fcoml
inc
movsb
inc
adc
aas
jno
mov
cld
xchg
push
addl
test
in
int3
sbb
mov
pop
mov
lods
jle
or
push
lcall
fistl
imul
pop
adc
inc
mov
data16
inc
sbb
cmp
sbb
out
fidivrl
mov
push
stos
call
hlt
jl
mov
test
sbb
push
push
sbb
mov
dec
add
push
pop
dec
fnsave
ja
pop
dec
call
xchg
sbb
jnp
les
or
bound
nop
in
sub
fwait
push
fistpl
adc
and
sarl
and
pop
sbb
fistpll
jae
sub
inc
or
sti
jae
mov
mov
lret
pop
out
mov
in
adc
je
mov
lods
cld
pop
inc
inc
add
outsb
ret
sbb
arpl
jbe
push
inc
jp
xchg
push
dec
cmp
ds
dec
ficoms
test
pop
les
dec
cwtl
push
sbb
dec
sub
xor
sub
mov
mov
outsb
jne
les
nop
stos
pop
add
lds
jb
cmp
dec
push
in
outsb
jp
cli
pop
out
and
mov
jb
lahf
add
fwait
aam
dec
lahf
and
push
mov
push
mov
push
cmp
and
xor
jb
loope
add
les
fisubrs
movsl
jne
icebp
adcb
mov
push
dec
pushf
cmp
push
ficomps
push
dec
nop
mov
cmp
cmp
jp
xor
mov
or
js
jne
mov
dec
sub
push
jo
add
adc
lds
mov
xchg
dec
lds
int3
leave
inc
mov
sbb
xchg
in
jbe
mov
movsl
ret
imul
inc
push
mov
insl
inc
in
sbb
sbb
xor
lds
in
mov
add
sbb
adc
xchg
mov
in
pop
pinsrw
pop
mov
imul
ja
iret
xchg
cmpb
mov
mov
fucomp
nop
fiaddl
outsl
or
inc
cwtl
lcall
inc
scas
pop
jle
in
xchg
or
dec
cwtl
xor
adc
push
scas
ljmp
ret
out
or
dec
icebp
in
dec
or
push
push
fadds
in
push
mov
dec
or
push
fs
adc
std
jp
in
out
mov
push
push
in
mov
lds
das
std
in
ficoml
push
mov
aaa
js
push
sti
or
xchg
ss
fidivrl
jle
data16
fstl
jl
dec
pop
popf
sbb
divl
inc
pop
jg
xchg
mov
jo
pushf
mov
pop
cltd
cmp
push
dec
sub
push
stos
pop
vfrczpd
lods
loope
lods
test
jo
incl
cmp
push
push
cmp
popf
and
imul
xchg
mull
insl
cmpsb
in
repnz
mov
inc
ds
push
add
adc
movsl
inc
jns
bound
mov
loopne
ss
cwtl
push
pop
jle
xor
pop
mov
inc
dec
addb
push
mov
and
je
sub
and
sbb
mov
dec
movsl
add
pop
pushf
addb
xchg
aam
pop
int
in
adc
jbe
cmp
mov
push
mov
cmc
not
rcrb
lret
jbe
test
add
mov
lret
push
movsb
push
push
xchg
ds
or
sahf
dec
call
jmp
sbb
out
jmp
test
inc
push
inc
and
mov
pop
popa
cmp
and
and
cmpsb
arpl
sub
sbb
mov
addr16
mov
out
cltd
rclb
xchg
mov
add
inc
popa
xchg
notb
sub
push
stc
inc
bts
jecxz
test
in
mov
sub
pushf
js
cmp
jo
fiaddl
sub
in
xchg
and
mov
and
fs
cmpsl
mov
mov
or
inc
into
mov
mov
xchg
nop
test
dec
mov
pop
pop
cmp
inc
call
divl
int
cwtl
jo
jp
cmp
imulb
xchg
nop
imul
mov
cmp
outsl
data16
dec
sahf
aad
inc
cmp
mov
push
jo
jle
xchg
inc
inc
lods
sub
xchg
sahf
push
lcall
shll
jge
cwtl
inc
inc
and
dec
fwait
pop
sub
into
outsb
ja
stos
mov
shrb
mov
or
mov
push
jp
xchg
pop
cli
sbb
out
mov
inc
mov
out
and
pop
into
xchg
movsb
push
loop
jo
es
sub
and
inc
dec
xor
into
dec
andb
cwtl
cltd
and
sbb
fidivrs
daa
aam
mov
dec
and
stos
leave
cmp
dec
bound
mov
jle
cmp
xchg
les
jne
insb
jl
arpl
pop
mov
pop
inc
sbb
xor
xchg
sub
jp
jl
and
inc
dec
adcb
pop
dec
mov
dec
lcall
sbb
sub
mov
es
mov
movsb
mov
xchg
lcall
dec
push
inc
sarb
rcrl
cmpsb
orl
push
adcb
mov
push
mov
jo
sub
cmp
orb
iret
ret
jne
push
inc
cmp
jo
mov
cmp
cs
adcb
ret
add
into
addb
mov
movsb
mov
out
pop
repnz
push
das
mov
xchg
mov
add
in
push
and
fs
ret
test
dec
bound
arpl
jb
shlb
and
cmpsl
jne
push
mov
ret
pushf
outsl
sbbl
mov
push
icebp
arpl
adc
mov
jbe
out
mov
pop
mov
arpl
dec
test
shrl
ljmp
push
dec
mov
mov
test
out
mov
dec
adc
cmpsl
arpl
mov
cmp
mov
in
nop
jmp
sub
movb
shlb
pop
push
sbb
xchg
cld
mov
jl
push
shrb
push
nop
mov
mov
mov
xchg
push
and
mov
push
in
ss
das
xor
repz
dec
xchg
arpl
push
nop
cwtl
mov
push
jl
inc
cmp
cwtl
roll
movsl
shll
adcb
aad
add
mov
and
lret
push
in
pop
xchg
inc
sbb
mov
dec
xchg
leave
jl
nop
pop
cmpsb
jg
push
pop
pop
push
mov
mov
dec
xor
jle
rorb
adc
pop
xor
popa
and
cwtl
int3
cmpsb
push
inc
dec
pop
xchg
push
ret
pop
aas
xchg
and
or
xchg
loope
add
xchg
inc
mov
cmp
jecxz
cmp
scas
mov
adc
jl
pop
or
jne
out
push
xchg
sbb
xorl
xchg
aad
rclb
pop
inc
rorb
aam
outsb
out
ss
push
cmp
cltd
sbb
cmpsl
mov
jb
cmp
jnp
inc
rcrb
mov
jo
cltd
mov
cmpb
inc
xchg
lret
loop
outsl
add
sbb
lret
push
inc
orb
or
push
andl
popa
dec
push
ja
xchg
pop
imulb
or
js
inc
pop
dec
and
xchg
inc
pusha
mov
inc
push
xor
pop
outsl
mov
dec
inc
push
mov
lret
ret
movsb
test
popa
inc
dec
sbb
shll
sbb
adc
cmpsl
jecxz
mov
pop
dec
cli
dec
nop
test
xor
shlb
xor
sbb
inc
mulb
out
ss
cmp
scas
test
jl
push
adc
push
adc
pop
orl
jno
and
inc
in
lret
mov
mov
push
rcrl
repnz
push
push
int3
mov
mov
ss
xchg
jnp
push
mov
cmp
push
mov
cwtl
cmp
pushw
inc
xchg
pop
mov
mov
lret
xchg
push
sub
inc
push
sarl
sbbb
mov
out
mov
push
aam
xchg
jo
cmpsl
loope
push
adc
lds
fdiv
pop
dec
push
jle
push
fidivl
ret
mov
xchg
test
outsb
nop
aam
sbb
clc
sahf
cmp
inc
pop
loope
push
fsubrp
push
mov
mov
incb
idivl
cmp
adc
xor
ret
xchg
inc
jle
shll
cmp
or
negb
inc
mov
fnstsw
nop
push
mov
or
shl
mov
movsb
mov
loopne
push
dec
or
pop
jle
mov
sahf
or
or
stos
shlb
popf
out
outsl
mov
xor
add
aam
cmp
mov
test
js
in
push
cmpsb
fiaddl
sbb
out
fnstcw
lock
or
sbb
and
cli
add
in
lcall
add
push
adc
or
jb
scas
cmp
outsb
and
or
mov
and
in
dec
addb
jns
add
mov
mov
sbb
push
test
daa
sbb
add
mov
lcall
xchg
dec
cwtl
push
adc
addb
mov
xchg
mov
xchg
ficoms
popa
xor
push
push
pop
es
js
cmpl
cmp
out
mov
cli
je
lcall
les
push
and
adc
jb
dec
push
dec
test
and
mov
in
cmp
aam
and
pop
shrb
rolb
jns
mov
cmp
jecxz
cmp
xchg
push
cmp
and
incl
dec
xchg
adc
xor
mov
sarb
push
push
fldl
adcb
sti
xchg
push
push
orb
je
pushf
and
jns
inc
xchg
iret
mov
arpl
mov
push
push
jb
divb
push
dec
into
push
cmp
pushf
push
mov
cmp
push
cmpsl
jbe
jle
mov
xor
mov
nop
xor
decb
negl
aad
mov
mov
add
cs
popa
inc
jle
clc
xchg
cmp
jecxz
outsb
fcoml
andb
shlb
xchg
inc
jl
lahf
xor
add
dec
movsb
ds
or
cmp
test
push
jns
jp
add
add
lcall
pop
inc
xor
movsb
mov
into
xchg
xchg
pop
jbe
mov
mov
loop
stos
pop
mov
pushl
pop
inc
push
cmpsb
in
cmp
aas
arpl
cmp
cwtl
pop
and
aad
popa
lock
jbe
imul
sahf
inc
xorb
ss
pop
les
cmp
test
mov
jp
inc
lods
pop
pop
in
call
pushl
mov
nop
fldenv
ret
pop
push
jle
inc
pop
leave
mov
dec
or
cmp
cmpsb
sbb
mov
sub
xchg
sti
xchg
aas
inc
push
cmp
cli
fidivrl
data16
negl
popa
and
jle
cwtl
aad
mov
dec
and
sarl
repz
pop
mov
adcl
inc
sub
rcrl
sahf
mov
push
jp
bound
movsb
mov
sub
adc
aam
lcall
push
and
push
cmp
mov
hlt
pop
aas
push
inc
lret
stos
fnstcw
mov
and
and
pushf
push
or
sub
loope
inc
push
pop
mov
sbb
pop
dec
inc
fists
jnp
pop
inc
jl
dec
jns
leave
push
mov
test
dec
andnps
pop
popa
arpl
mov
sbb
ficompl
lds
mov
adc
xchg
xchg
movsb
pop
fnstsw
call
inc
push
pop
mov
xor
and
sahf
adcb
and
pop
jmp
mov
and
add
and
pop
popl
loope
pop
and
js
pop
push
cmp
cwtl
dec
adc
sarb
dec
xchg
xor
and
cmp
push
push
jns
cwtl
pop
add
xchg
sahf
mov
push
in
sti
outsb
mov
scas
dec
aaa
movsl
mov
inc
jo
repz
mov
inc
mov
xchg
fwait
mov
pop
cmp
daa
mov
adc
mov
pop
or
pop
and
icebp
inc
pop
jnp
xor
xchg
push
mov
sub
fildl
std
mov
pop
and
and
mov
mov
arpl
call
inc
cmp
lcall
xorl
pop
push
pop
adc
xchg
xlat
cmpsb
daa
popa
sbb
inc
mov
lcall
sahf
pop
sarl
jo
repnz
pop
cmp
lds
orb
cmc
mov
imul
vucomiss
orb
xchg
push
mov
mov
push
mov
jbe
or
sbb
cwtl
add
inc
sbb
mov
js
pop
add
pop
dec
pushf
jb
sbb
or
das
in
push
pushf
das
jecxz
xchg
inc
add
sbb
pop
and
or
sub
inc
mov
or
adc
add
or
jp
repz
and
or
lahf
or
push
js
pushf
sbb
orl
cwtl
sahf
or
lcall
pop
aaa
sbb
scas
add
pop
stos
cmp
jge
sarb
nop
decb
adc
xchg
in
and
inc
js
dec
jb
cltd
xorl
ret
test
out
es
nop
lods
dec
inc
cmp
add
rolb
mov
cmp
add
pop
jg
loop
cwtl
sahf
arpl
cltd
cmpsb
decb
inc
push
dec
fcompl
push
push
push
insb
gs
push
and
sbb
dec
adc
nop
faddl
push
add
or
js
pop
xlat
lds
dec
fistps
mov
and
adc
cmp
movb
icebp
cmpb
jmp
xchg
icebp
loop
imul
cmp
push
js
add
imul
cmc
notb
dec
push
push
ret
inc
leave
xlat
popa
daa
xchg
popa
not
mov
mov
jl
repnz
xorb
imul
shlb
adc
mov
jo
push
aam
adc
adc
arpl
xlat
or
sbb
pop
add
les
in
pop
test
pushf
push
xchg
lret
adc
inc
aas
addb
aad
xorb
mov
cwtl
ds
mov
frstor
inc
xlat
inc
mov
cwtl
pushf
adc
or
cli
sub
sbb
mov
sub
outsl
out
push
je
int
stos
inc
arpl
mov
push
xchg
sbb
jbe
mov
adc
mov
in
jbe
nop
inc
scas
xchg
mov
mov
in
das
in
pop
xchg
addb
rcrb
loop
mov
cmp
sbb
dec
and
call
aaa
lock
mov
cmp
add
fimull
push
pop
xlat
in
stos
cmp
out
iret
mov
cltd
mov
mov
loope
int3
cmp
xor
in
mov
in
test
outsb
pushf
fdivs
repnz
fcompl
test
mov
mov
fwait
lret
jecxz
push
dec
sub
cmp
pop
popa
cmc
ret
jp
dec
sub
dec
jge
jp
cmp
xchg
fldenv
inc
xchg
xlat
cli
or
nop
jns
inc
loop
movsb
cmp
inc
jbe
inc
arpl
dec
mov
cmp
cmp
lahf
aad
cli
cwtl
xor
das
decb
fisubs
sub
push
mov
shrb
push
inc
xor
cmpb
cmpsl
xchg
mov
push
inc
cmp
lds
sub
cmp
inc
repnz
mov
outsl
jbe
jo
and
adc
cltd
push
mov
inc
fwait
pop
fldl
clc
sub
push
sub
sbb
xchg
cmpsl
lahf
popa
pop
push
dec
cmp
cmp
cmpb
imulb
fs
and
add
dec
and
lcall
adc
cld
ficompl
mov
das
jp
sub
pop
push
mov
jnp
test
movsl
adcb
js
pushf
movsb
and
ret
add
sbb
and
push
jo
push
imul
fidivrl
inc
leave
leave
jle
out
and
addb
ss
popa
adc
les
pop
or
push
push
inc
and
ds
aas
dec
adc
out
and
inc
mov
push
sbb
push
dec
jle
cmpsb
notl
mov
cmpsl
mov
sahf
jo
mov
push
decl
jge
xor
in
mov
push
movsb
cmp
ds
arpl
xchg
inc
or
inc
sbb
sbb
mov
inc
mov
jl
dec
call
mov
adc
clc
xchg
mov
ja
inc
inc
ds
pop
pop
mov
js
sti
mov
loope
adc
lcall
push
jb
rorb
push
xchg
dec
xchg
cs
addb
or
xchg
lret
shlb
adcb
loop
movsb
lea
push
jae
stos
sub
in
inc
cmc
mov
in
push
inc
xchg
add
push
dec
ret
push
jo
push
mov
pop
lds
mov
sarl
icebp
inc
and
xor
push
inc
xchg
cwtl
pop
pop
jge
das
jo
xchg
call
xchg
xchg
push
pop
sub
push
push
pop
mov
jo
mov
jbe
cmc
jle
mov
push
mov
adcb
ds
inc
xor
lds
push
add
xor
lcall
ret
es
imul
mov
imul
xchg
push
cmpb
cmp
and
cmp
test
mov
push
cmpsb
add
fiaddl
push
stos
in
in
sbbl
mov
sbb
dec
gs
inc
movsb
jl
pop
flds
mov
inc
popa
mov
and
js
testb
mov
ds
cmpsl
mov
test
jb
out
rcrb
cmpsl
fsubl
dec
mov
test
inc
jns
mov
lahf
xchg
je
cmp
in
lds
mov
fisubrl
std
fcompl
cmpsb
fsubs
scas
ret
and
inc
pop
pop
scas
and
pop
loop
mov
out
in
jnp
mov
mov
addb
lahf
sbb
in
pop
mov
mov
mov
cmpsl
jns
and
or
dec
mov
cmpsb
and
jo
lds
mov
adc
inc
addl
sub
push
fwait
push
sbb
stos
mov
add
mov
adc
rol
jbe
mov
mov
out
sbbb
pop
mov
jecxz
cmp
jbe
pop
xor
std
sbbb
mov
mov
cmp
mov
or
mov
arpl
test
aaa
fdivl
stc
mov
inc
sbbb
mov
or
repnz
sbb
insb
test
dec
cs
pop
mov
cmp
sub
push
mov
aas
cmp
push
xorb
addb
lret
push
xchg
and
loop
lret
sbb
repnz
ds
mov
sahf
mov
cmpsb
adc
pop
rcrb
mov
ret
pop
or
inc
add
sahf
cmpsl
jl
xor
pop
fisubl
test
sahf
pop
pop
popf
pop
mov
in
pop
loop
mov
mov
sbb
inc
mov
subb
push
test
or
clc
mov
push
jl
push
jecxz
movsb
push
inc
xchg
cltd
mov
pop
fiadds
xor
push
jbe
xchg
jo
fidivrl
stc
in
mov
push
addb
sahf
sbb
mov
adc
mov
jp
imul
sbb
in
sub
dec
or
movsb
xchg
inc
ret
jp
and
pop
mov
cmp
sahf
outsl
hlt
fcoml
sbb
mov
lcall
movsb
out
push
dec
pop
movsl
loope
mov
outsl
push
and
push
pop
adc
dec
addb
pop
sub
in
mov
or
and
push
shlb
push
shrl
insb
fstps
loopne
mov
ds
jp
xchg
sbb
jge
add
nop
sbbl
xchg
cmp
pushf
inc
push
dec
push
mov
jmp
jle
out
test
xchg
mov
mov
leave
push
data16
xchg
addb
push
mov
cmpsb
ret
xchg
lcall
cmpsb
pop
mov
dec
inc
xchg
out
jl
push
ss
push
cmp
push
add
call
bnd
push
movsb
loop
ja
cwtl
fcmovnbe
mov
shll
adc
xor
pop
movsb
sub
mov
sahf
jb
test
daa
inc
dec
test
sub
lcall
and
or
js
shlb
adc
rcrl
pop
xchg
inc
out
enter
cmp
push
inc
ss
or
push
test
mov
dec
xchg
iret
fcompl
loop
in
mov
pop
call
sub
fnstcw
push
ss
popf
loope
rclb
adc
cmpsb
nop
sbbb
test
lds
push
jo
fimull
aam
adcb
adc
movsb
ficomps
cwtl
push
mov
popf
out
pop
pop
jb,pt
sbb
subb
sub
push
lcall
dec
ds
hlt
inc
xchg
outsb
in
in
adc
sub
imul
push
aaa
jae
sbb
lods
lods
and
inc
adc
movsb
mov
cmpsb
and
mov
call
mov
mov
xor
inc
jo
push
nop
adc
mov
mov
cmp
es
and
mov
add
or
push
cwtl
dec
int3
mov
jb
cmp
fidivrl
xor
movsb
mov
jae
mov
xchg
push
inc
sub
xor
xchg
and
lcall
call
dec
jb
inc
fdivrl
dec
rcrb
jo
lret
dec
mov
inc
pop
pushf
pop
gs
mov
cmpsb
pop
imul
mov
jg
push
js
leave
jb
jae
adc
sahf
xorb
mov
leave
adcb
rcrw
mov
push
and
mulb
aas
mov
in
sbb
dec
insl
inc
adc
aad
ret
mov
int3
mov
mov
mov
cmp
shll
pop
out
mov
in
adc
test
dec
pop
push
xor
dec
mov
sbb
or
pop
cltd
mov
and
lods
rcrl
addr16
inc
adc
cmp
loope
dec
sbb
mov
push
loope
pop
aad
out
or
adc
jnp
push
xorl
push
outsb
mov
rorb
lcall
push
mov
test
cmpb
jmp
pop
lcall
mov
cmp
push
or
jb
std
sub
xor
ljmp
pop
daa
xchg
mov
ss
iret
push
jbe
loop
mov
inc
mov
int3
jo
xchg
divl
xchg
ds
mov
adc
cmc
rcrb
lcall
dec
or
mov
out
push
stos
mov
mov
pop
mov
repnz
pop
fwait
scas
shlb
mov
or
scas
das
ss
sub
push
mov
push
jmp
ja
pop
or
out
lret
xchg
dec
or
pushf
aaa
jp
cmp
mov
pop
ss
mov
adc
push
pop
sahf
inc
mov
mov
sub
mov
dec
xchg
add
insl
test
notb
sbb
inc
jo
inc
push
or
push
ret
and
xchg
push
cli
nop
push
dec
mov
jp
fisubl
bound
lret
sbbb
inc
loope
es
push
pop
nop
mov
jl
test
xchg
in
sbb
push
dec
test
xor
mov
mov
add
mov
dec
insb
ficompl
pop
in
sar
mov
ss
decl
iret
cmp
push
mov
jb
lcall
gs
sahf
je
xchg
mov
push
and
jnp
cmp
clc
or
dec
into
sbb
mov
dec
mov
xchg
jp
icebp
arpl
push
jle
mov
movsb
cmp
cli
push
cmp
xor
adc
xchg
stc
inc
aaa
or
cli
loop
outsl
bound
xor
xchg
pop
push
or
mov
xchg
or
mov
push
xchg
xor
std
xchg
sti
push
rcrl
xchg
outsb
movsb
insb
dec
cwtl
int3
xchg
pushf
rcrb
incl
dec
mov
jle
mov
and
sti
ret
iret
pop
cmp
fsubrs
xchg
aam
cmp
push
test
mov
dec
mov
cmpsl
arpl
test
mov
adcb
and
mov
inc
inc
in
adc
sbb
sbb
fsubp
fidivl
in
pop
lods
pop
aad
lea
xchg
xlat
xchg
mov
xchg
daa
cmpsl
jg
pop
pop
and
xchg
iret
mov
jp
jno
push
arpl
rolb
mov
cmp
mov
shlb
or
push
addr16
mov
fisubrl
in
stc
mov
sti
jmp
cmp
scas
pop
pop
in
loop
mov
rolb
ds
inc
xchg
xor
xchg
scas
add
push
fwait
lods
lret
popa
nop
adc
push
mov
clc
sbbb
arpl
ds
stc
adc
popa
jg
mov
repnz
inc
cwtl
loope
push
dec
push
push
stos
test
jb
shlb
xchg
jge
push
and
mov
mov
lcall
pop
mov
push
mov
push
sbb
into
or
inc
outsb
pop
rolb
sbb
nop
mov
cmp
adc
sahf
jo
out
lahf
xchg
rcrl
push
dec
jp
das
ds
cli
push
popa
test
sbb
mov
mov
pop
dec
cwtl
push
jge
popf
outsl
inc
cmp
inc
psadbw
fiadds
movsb
cwtl
push
add
bnd
daa
loope
cmp
xchg
adc
add
cltd
aam
rcl
push
cli
out
testb
jb
in
adc
adcb
fwait
pop
in
push
inc
mov
push
outsb
sub
fldl
xor
dec
ss
int3
jl
sbb
inc
rdmsr
mov
aaa
push
aam
jp
jmp
jo
cmp
xor
and
push
push
sahf
loop
sbb
mov
mov
movsb
mov
cs
sbb
fstl
push
mov
xor
out
jle
dec
inc
mov
sahf
and
mov
cwtl
ret
mov
test
lret
or
push
pop
jp
ss
and
push
inc
ds
jge
shll
adcb
inc
outsb
mov
xchg
lods
dec
fstpl
pop
mov
sbb
sbb
faddp
stos
xchg
sbbb
stos
test
lret
add
cmp
cmp
movsl
and
test
and
push
lcall
js
mov
aas
cmp
mov
pushf
inc
cmp
mov
es
pop
lahf
rcrl
outsb
arpl
pushf
mov
inc
bound
xor
pop
add
xchg
and
es
mov
push
clc
mov
or
push
pop
or
outsl
cmpsl
xor
mov
pop
xchg
jbe
pop
add
fnsave
ljmp
cmpsb
subb
mov
fwait
cmpsl
dec
adc
cmp
lcall
push
cs
mov
cli
jb
or
call
add
jmp
nop
or
xchg
mov
sub
inc
xchg
xchg
jbe
and
nop
dec
pop
pushf
cmpb
inc
sahf
js
and
out
xor
mov
cld
jb
aas
mov
jl
and
rcl
jo
addb
pop
mov
std
and
lahf
mov
and
nop
outsl
hlt
cli
adc
pop
cmp
sahf
inc
jnp
pusha
push
jmp
and
out
and
push
dec
dec
leave
pop
ret
push
xchg
or
xor
nop
lds
and
pop
out
inc
fmull
pop
mov
in
mul
cmp
fwait
and
push
lds
fisttpl
movsb
pop
pop
shll
xchg
mov
iret
xchg
dec
xlat
jae
xchg
jns
sub
scas
ss
inc
mov
pop
in
dec
test
scas
mov
lret
movsl
or
cli
push
push
arpl
loop
fisubrs
aad
xchg
es
xchg
mov
xlat
push
pop
aam
cmp
adc
aas
lods
scas
pop
sbb
mov
push
out
mov
pop
sbb
inc
bound
and
push
xor
roll
fidivrl
sbb
and
aam
dec
fwait
call
mov
sbbl
test
and
movsb
mov
ds
dec
mov
sahf
inc
dec
xchg
cmp
ss
xchg
pushf
sbb
sbb
push
inc
ret
mov
mov
dec
mov
jl
aad
adc
xchg
aad
aad
mov
adc
or
pop
inc
aas
xchg
nop
cmp
or
jnp
sub
mov
mov
mov
and
jmp
jo
jl
adc
xadd
cmpsl
arpl
jbe
mov
and
lcall
jmp
xchg
xor
pop
jo
mov
cmp
xchg
cmp
pop
cwtl
mov
mov
push
aam
push
dec
rcrb
pop
in
call
push
push
popa
lahf
jbe
loop
inc
push
call
inc
shlb
jg
add
add
or
hlt
mov
pusha
nop
cwtl
xchg
push
ss
js
dec
negb
cmp
push
fwait
rclb
mov
divb
test
fstpt
scas
sbb
push
addb
mov
mov
push
jbe
push
dec
subb
push
inc
sbb
cmp
jecxz
and
sub
repz
movsb
lcall
cmp
jo
add
xchg
push
mov
jle
adcb
fs
mov
and
popf
push
adc
sbb
js
dec
or
jp
inc
mov
bound
test
pop
fwait
loop,pn
in
cmpsl
push
nop
jbe
jl
ss
call
dec
mov
push
mov
mov
xor
mov
xor
mov
std
in
inc
sahf
loope
fcompl
js
fdivp
loopne
pop
stos
cmp
cmp
pop
cmp
or
dec
inc
push
and
add
push
ficompl
xchg
xchg
adcl
ret
jbe,pt
mov
adc
mov
js
push
mov
popf
push
xor
stos
popa
movsl
and
jb
scas
mov
ficompl
pop
cwtl
dec
xchg
inc
fidivrs
push
jae
push
mov
mov
lcall
push
movsb
xchg
jg
mov
mov
sub
mov
pop
and
push
insl
dec
aad
add
xchg
push
push
jns
mov
dec
mov
cmp
jno
lea
push
cmp
sbb
jb
mov
inc
cmpsb
mov
pop
mov
inc
push
loop
push
out
or
imul
sub
out
insb
insb
cltd
and
sarl
mov
in
popa
xorb
sbb
jo
xchg
lcall
inc
imul
test
or
push
and
adc
in
bound
bound
push
ss
dec
int3
mov
inc
dec
js
push
push
stos
push
push
fs
dec
mov
jo
xchg
adc
and
add
xlat
shlb
movsl
push
js
and
shll
xor
jl
xchg
out
cmpsb
jbe
push
xlat
rcrb
and
push
icebp
and
xor
xchg
or
loop
cmpsb
insl
inc
mov
in
push
xchg
xchg
sub
jl
jp
adc
mov
mov
inc
dec
inc
fisubs
icebp
in
cltd
fsubrs
clc
loopne
and
cmp
or
das
cmpsb
mov
sbb
xor
jmp
dec
push
inc
pop
mov
inc
xor
ds
xchg
lock
dec
adc
jae
jb
push
mov
cmp
arpl
jge
xchg
mov
xorb
aam
aam
ror
popf
out
js
popa
push
xchg
in
inc
pop
cmp
nop
nop
lcall
dec
in
inc
fs
testb
sahf
xchg
inc
stos
dec
cld
movsb
sbb
push
cmp
jp
arpl
or
sbb
stos
inc
out
fcoms
sahf
cld
js
daa
sbb
jno
test
inc
xor
bound
and
or
stos
pushaw
arpl
push
ficompl
push
xor
cmp
arpl
ja
inc
dec
mov
mov
mov
ss
movsb
xchg
mov
loope
in
jno
adc
js
in
cmp
xchg
xchg
inc
popa
std
jle
push
push
mov
and
xor
bound
repz
push
loop
mov
cmp
xchg
lret
inc
sbb
cmp
lahf
ret
cmp
lds
and
mov
xor
mov
in
out
cwtl
stos
sub
and
inc
mov
in
bound
aam
ss
inc
nop
lcall
pushf
push
jb
popa
fdivl
loop,pt
stos
into
jmp
aad
and
andb
lods
in
dec
pop
ss
cmpsl
lret
movsb
jl
loop
sahf
and
nop
in
mov
xchg
inc
sbbl
mov
cmp
in
test
mov
xor
mov
push
js
mov
sub
jle
push
push
in
push
ds
mov
dec
jmp
jb
or
out
or
es
and
jle
push
andb
dec
and
pop
sahf
push
pop
sarb
push
mov
xchg
call
pop
inc
xor
xchg
jb
cltd
in
xchg
pop
js
dec
adc
nop
push
dec
int
cmp
ret
sahf
mov
pop
and
and
sbb
mov
fstpt
mov
dec
test
cld
inc
and
std
mov
inc
adcl
xchg
icebp
es
ret
enter
push
clc
cmp
in
mov
mov
nop
pushf
push
inc
mov
and
sbb
dec
xor
lret
push
pop
pop
sub
cmp
mov
push
shrb
ss
cmp
mov
cmp
addl
ds
xchg
test
vpsrad
cwtl
aam
xchg
test
pop
push
mov
in
mov
cmp
jbe
jle
mov
and
mov
lods
push
mov
pop
fistpl
xorl
iret
aas
sti
push
xchg
push
sbb
xor
xchg
ja
movsb
lds
mov
jb
sub
fisttpl
lea
xorb
rcrb
popa
inc
cmpb
jbe
cli
jp
or
aaa
dec
dec
dec
sbb
add
add
adc
and
aam
or
imul
cwtl
inc
lds
loop
dec
push
pop
jns
inc
dec
daa
out
loope
test
jl
push
iret
xchg
sahf
mov
rolb
iret
out
cmp
sub
into
or
push
ss
push
inc
xchg
push
pop
sahf
ds
and
mov
out
lods
movsb
jle
aad
inc
jnp
addb
mov
cmp
mov
fwait
pop
fucom
push
sub
adc
pop
add
sub
imul
jecxz
adc
aam
dec
pop
cmpsb
pushf
sbb
pop
jp
fcmovne
je
stos
dec
adc
mov
inc
arpl
or
xchg
cmp
ret
jp
push
push
arpl
addb
shlb
subb
aaa
in
inc
in
push
ss
dec
inc
lcall
int3
sbb
outsl
dec
arpl
cmpsb
mov
fisubs
movsb
mov
mov
sbb
cmp
jecxz
jo
lods
and
lahf
push
rclb
push
aas
adc
adcl
adcl
popa
xchg
jl
sbb
dec
xchg
mov
js
in
cs
dec
aam
xchg
arpl
pop
and
mov
in
lcall
rorl
test
stos
imul
push
pop
loop
adc
mov
cmp
xchg
push
mov
mov
lds
pop
jnp
dec
fdivrs
icebp
cmpsb
or
test
cld
es
arpl
dec
inc
das
loop
mov
rcrl
mov
jl
xor
push
pop
xchg
and
aaa
movsb
or
push
mov
iret
mov
mov
in
mov
pop
shrb
gs
mov
inc
loop
or
inc
mov
movsb
dec
ret
mov
jl
lcall
iret
push
cmp
add
sub
push
data16
add
loope,pn
ss
sbb
sahf
mov
inc
fistl
push
arpl
movsb
xchg
subb
ret
sub
adc
hlt
arpl
sub
dec
mov
and
jbe
xchg
jo
adc
cltd
sbb
popa
fwait
leave
push
pop
jl
xchg
pop
cmp
fidivrl
fdivrl
mov
inc
test
jbe
xlat
xchg
xchg
inc
pop
mov
mov
and
cs
cmpsb
mov
outsb
mov
popa
cmp
push
and
cmpsl
lahf
push
mov
push
jo
push
sbb
ja
inc
push
stc
in
les
jp
adc
mov
and
xor
cld
inc
mov
outsb
sahf
rcll
mov
test
mov
push
sahf
push
sub
shrl
mov
cmpsb
sub
cmp
jle
inc
dec
and
popa
inc
mov
xchg
in
push
inc
and
test
cmp
push
jle,pt
cmp
xor
ljmp
jbe
cld
mov
leave
add
jb
pusha
ds
mov
adcb
sub
sbb
fwait
xor
out
movsl
out
and
iret
mov
mov
dec
push
pop
jb
push
and
in
int3
jne
add
in
scas
ss
test
inc
popl
test
push
jp
xor
jo
pop
sbb
mov
sbb
xchg
push
mov
xor
loop
addl
inc
ret
pushf
mov
sbbb
xchg
sbb
sbb
ljmp
rorb
pop
sar
ret
or
mov
outsl
mov
push
mov
test
lcall
jle
aas
or
jno
popa
sahf
mov
push
xchg
pop
jl
jp
push
push
aam
insb
mov
push
jbe
rcrb
inc
shll
mov
data16
out
out
mov
sbb
and
aam
sbb
aam
aam
movsb
mov
js
cwtl
xlat
push
out
jge
xchg
mov
mov
mov
inc
out
stc
mov
cltd
and
dec
cwtl
pop
rorb
mov
push
inc
imulb
jl
cmpb
pop
fidivrl
inc
mov
sbb
mov
mulb
outsb
push
shlb
lock
push
mov
cmpb
sub
cwtl
add
lock
mov
inc
fisubl
jo
push
jb
icebp
sub
and
pop
sahf
gs
lods
cmp
stos
push
inc
sahf
pop
sub
jmp
inc
jp
xchg
fidivrl
xchg
aam
cwtl
iret
push
aam
int3
pop
xchg
mov
flds
test
lret
sbb
jb
adc
negb
or
adc
inc
cmp
xchg
xchg
pop
pop
jbe
push
test
mov
xchg
jo
mov
inc
push
jle
cmp
mov
stos
dec
add
jne
xchg
mov
xchg
movsb
in
inc
std
inc
cli
int
mov
loop
rcrl
mov
data16
sbb
and
pop
xchg
ret
push
xorb
testl
int3
jecxz
stos
cld
xchg
push
mov
sbb
inc
aad
inc
mov
sahf
jge
mov
adc
or
mov
jmp
les
sub
pop
arpl
lea
dec
mov
in
mov
fimuls
rolb
cmpsl
stc
dec
mov
mov
ret
mov
sbb
cmp
lods
movsb
inc
lds
fwait
jp
pop
mov
xor
dec
dec
push
push
subl
inc
cmpsb
push
add
gs
xchg
sbb
cvtpi2ps
out
sahf
lods
bound
sub
lcall
push
jle
mov
cmp
idivl
inc
call
or
cwtl
mov
push
sub
subl
add
outsb
mov
incb
or
orl
sbb
push
jb
push
pop
inc
inc
cmp
cmp
and
mov
mov
jmp
ss
dec
ret
add
and
js
lds
lea
cmc
xchg
adc
and
pop
mov
andb
push
nop
pushf
push
mov
orl
js
jge
cli
jo
mov
xchg
int3
push
jb
mov
jl
cmp
dec
sub
in
xor
loope
pop
in
cwtl
mov
inc
scas
cwtl
pop
sub
mov
or
cld
ss
std
leave
push
dec
jmp
mov
sbb
mov
sbb
mov
dec
push
dec
xor
lret
push
dec
jp
movsl
sarb
test
cld
pop
ja
sbbb
mov
dec
in
pop
popf
mov
imul
add
mov
jno
inc
orl
cmp
les
pop
sub
xchg
jmp
stos
and
mov
fstpl
shlb
les
mov
dec
nop
cmp
and
mov
or
mov
cmp
into
pop
dec
lcall
dec
mov
std
push
mov
mov
jle
loope
out
cmp
sahf
sbb
jp
dec
test
fiadds
xchg
test
loop
fsts
xchg
pushf
xor
fisttpll
cmpsb
arpl
sub
popa
xchg
dec
fstpl
sbb
and
mov
push
cli
out
fidivrl
cmc
push
cmp
mov
push
dec
xchg
fiadds
push
push
push
inc
pushf
pop
rol
cmp
idivb
jo
mov
xchg
sbb
shll
inc
iret
xchg
lret
mov
outsb
shrl
outsb
imul
mov
rclb
push
or
sbb
lahf
inc
popa
lds
ljmp
ret
dec
cwtl
ds
inc
movsb
cmp
mov
dec
pop
addb
cmp
mov
cld
xchg
and
xor
clc
gs
dec
arpl
mov
push
js
decb
lock
mov
ficompl
popa
cmp
int
xchg
pop
mov
testb
pushf
dec
jo
enter
fwait
shr
dec
out
ds
notb
xchg
shll
push
inc
popa
and
cwtl
mov
cmp
pop
cmp
lahf
lcall
addr16
data16
js
mov
ja
push
or
sti
cli
mov
adc
aas
and
pushf
outsl
cmp
int3
cmp
sbb
pushf
aam
lcall
lret
mov
xor
inc
cwtl
jle
push
xchg
mov
test
jno
out
sbb
sbb
pop
push
jmp
pop
push
pop
lds
xchg
test
inc
mov
push
mov
dec
sbb
lret
xor
sbb
adc
or
lret
jl
je
and
xor
xchg
dec
xchg
popa
push
ss
jbe
mov
lahf
das
pop
pop
cmp
xchg
jl
pop
cmp
sbb
stos
pop
and
out
js
xchg
ss
js
xor
mov
cmpsl
sti
adcb
inc
push
xchg
and
jb
rcl
mov
aas
ret
ds
gs
lcall
jp
dec
push
push
stos
rclb
inc
scas
and
dec
jle
xor
xchg
xchg
faddl
dec
outsb
mov
in
and
dec
int3
sub
jmp
cbtw
test
inc
stc
in
sbb
inc
les
mov
inc
sbb
xlat
rorl
mov
iret
mov
push
push
pop
je
push
jle
daa
mov
dec
adc
xchg
xchg
dec
addr16
push
lret
andb
xor
loop
dec
and
mov
pop
in
data16
xchg
cmp
dec
movsl
cli
psrld
arpl
mov
pop
scas
rorb
test
dec
cmp
arpl
xchg
scas
repnz
adcb
das
adcb
cltd
orl
in
ret
pop
and
and
inc
jnp
notb
test
rorb
mov
dec
js
mov
xlat
xchg
aad
add
test
mov
inc
jle
jle
add
mov
xchg
cmp
xchg
push
pop
lcall
or
and
xchg
jnp
mov
push
jb
xchg
xchg
jg
adc
xchg
movsb
sbb
cwtl
dec
jb
xchg
xor
inc
dec
xchg
cwtl
or
movsl
inc
inc
dec
ds
pop
ret
push
inc
inc
arpl
mov
adc
cmp
arpl
xchg
mov
inc
mov
inc
imul
or
xor
iret
mov
sub
xchg
push
mov
jb
cltd
aad
sahf
and
fmuls
cwtl
sbb
add
or
pop
out
sbb
fs
jns
push
jl
push
cmp
xor
out
push
sti
jge
cmpl
scas
ss
push
in
mov
jbe
repz
dec
dec
test
popa
cmp
andb
bound
cmp
sub
pop
aam
enter
inc
dec
xchg
jno
test
jp
arpl
nop
ljmp
imulb
imul
cld
cwtl
mov
sub
push
mov
inc
add
add
push
mov
fdivrl
ds
pop
push
fwait
and
in
jle
addr16
push
out
xorl
les
xchg
fisubs
sbb
sbb
mov
jnp
iret
jg
pop
xchg
cmp
leave
stos
xchg
js
cs
inc
xor
mov
dec
sbbl
sbb
push
jb
cmp
xlat
out
dec
mov
fcompl
pushf
cmp
jp
mov
push
ret
inc
or
int3
pop
cwtl
inc
jle
bnd
inc
jp
adc
dec
mov
loop
ljmp
push
cmp
testl
or
int3
ds
test
clc
jge
insl
ss
pop
xor
push
test
pop
cmc
xchg
aaa
adc
pop
cld
sbb
push
mov
sahf
js
cmp
pop
addb
int3
idivb
sbb
jecxz
mov
sahf
sbb
push
push
in
ficoml
test
roll
pop
jb
popf
jno
popa
pop
pop
push
jge
test
or
lods
dec
in
movsl
in
scas
outsb
mov
subb
xchg
movsl
push
clc
and
push
inc
movsb
xchg
scas
pop
mov
push
rcll
repnz
inc
scas
rorl
mov
cwtl
lcall
sbb
in
and
adc
adc
ds
xor
ljmp
data16
sbb
jo
pop
xchg
inc
dec
jge
adc
pop
ja
xchg
sahf
mov
mov
jo
push
push
cmp
add
mov
or
push
ss
addb
inc
xchg
fwait
ss
outsb
pushf
icebp
mov
inc
push
cmp
cmpsb
jo
jbe
mov
scas
push
adc
sahf
mov
pop
pop
and
pop
xchg
imul
sub
movsb
push
and
jbe
pop
mov
int3
daa
and
cmp
xchg
add
jbe
or
int3
out
pop
in
sub
shlb
and
and
lcall
mov
sbbb
addb
jecxz
jle
gs
mov
xchg
in
or
inc
mov
mov
push
push
push
jb
jle
xor
mov
adc
dec
cwtl
lcall
lock
cmp
and
test
cmpsl
add
adc
jo
sub
aad
cmp
jae
lret
pop
cmp
mov
dec
sti
and
sbb
mov
in
dec
push
lcall
xor
jo
cli
xchg
cld
mov
mov
inc
jp
lahf
mov
fiaddl
mov
cmp
mov
and
xchg
call
cmp
gs
sbb
push
dec
popf
call
mov
pop
mov
adc
and
mov
cmp
dec
inc
lcall
sbb
mov
arpl
in
jnp
loope
xchg
pushf
aad
ss
ss
jb
mov
push
nop
mov
mov
ljmp
push
fmull
xor
pop
inc
sahf
and
jbe
rcrb
sbb
int3
test
jbe
sahf
cmp
orb
std
fcompl
lods
imul
sbb
imul
sahf
xor
cmp
std
aaa
inc
sbb
cld
test
dec
scas
clc
and
clc
mov
add
jbe
cmp
bound
cli
nop
in
sbb
and
dec
loop
push
add
sahf
mov
ds
xchg
xchg
outsl
xor
push
and
xchg
sub
pop
push
jb
inc
xor
pop
and
es
cmpsl
adc
lcall
push
pop
inc
js
les
push
js
inc
dec
xor
dec
push
sbb
mov
aas
push
sbb
dec
ds
sahf
repnz
ret
jl
lds
sub
jb
pop
add
inc
inc
pop
or
int
test
orl
cmp
int
mov
jmp
xor
inc
sarb
fdivrl
cltd
add
mov
cmpsb
and
push
add
popa
or
mov
sbb
dec
push
inc
cmp
int3
std
and
mov
popa
push
cli
jp
orl
fstpt
push
movsb
xchg
sub
cmp
push
jp
sbb
cmp
cmp
mov
pop
cli
mov
dec
popa
leave
lods
std
fnop
inc
sbb
cs
pop
incb
mov
push
ss
das
pop
pop
leave
mov
inc
jae
jb
inc
add
inc
fmul
pop
sbb
or
add
mov
mov
lret
adc
dec
pop
aas
mov
push
or
xor
rclb
push
and
inc
inc
mov
and
jns
xchg
mov
loope
setae
insl
lret
cwtl
jmp
push
jb
jg
adc
push
mov
push
xor
int3
cmpb
rorb
cmpsl
outsl
adc
ss
imul
or
cli
arpl
cwtl
int
outsl
mov
js
std
mov
push
jbe
flds
not
push
xchg
ljmp
in
push
add
adc
or
lds
xor
aas
dec
sbbb
mov
sub
jo
js
mov
push
sbb
mov
dec
cmp
popf
ss
bnd
cmp
lods
and
icebp
add
mov
push
push
pop
test
and
nop
lcall
push
cmp
jle
mov
add
subl
sbb
ret
mov
mov
std
push
lds
outsl
mov
mov
or
gs
push
stc
dec
out
and
cwtl
rcll
mov
aaa
or
inc
sub
push
mov
xchg
mov
mov
and
cmp
sahf
sub
mov
push
inc
xchg
inc
int3
dec
push
and
xchg
and
xchg
arpl
xchg
dec
pop
inc
mov
mov
push
test
in
sbb
cmpsb
jp
push
push
add
push
inc
popa
xchg
or
in
pushf
sub
mov
shl
test
sbb
xchg
add
insb
lds
mov
mov
xchg
into
add
xor
scas
aad
mov
xchg
xchg
push
and
and
popa
adc
adc
inc
jl
mov
in
sahf
sbbl
mov
dec
mov
xchg
cwtl
pop
js
call
mov
outsl
lcall
xor
ret
cwtl
popa
lcall
andb
xchg
cli
sahf
cmp
mov
sbb
dec
cmp
test
aam
mov
fidivl
clc
pop
pop
cmp
bound
stc
xchg
in
push
cmp
aam
push
iret
jns
inc
inc
push
pushaw
pushf
mov
adc
pusha
out
xchg
outsb
jl
dec
dec
arpl
add
fdivrs
jl
rclb
mov
dec
or
add
fs
ret
orb
pop
mov
adcl
loop
ss
in
cwtl
push
mov
mov
sub
jg
mov
or
mov
and
rolb
sbb
mov
mov
add
dec
and
sbb
mov
ret
and
js
xorb
cmp
inc
xor
pop
or
jle
lcall
inc
enter
in
xchg
push
mov
bound
mov
addb
sti
inc
testb
xchg
dec
adc
sub
or
popa
jbe
pop
imul
push
lahf
add
fiaddl
in
cmp
inc
mov
adc
push
sub
fwait
cmp
ret
inc
pop
inc
addl
xor
dec
ja
sub
and
pushf
pop
mov
orl
xchg
sub
push
inc
mov
jae
cwtl
pop
sub
mov
inc
fisubl
and
in
ret
cld
jge
call
push
fidivrs
sbb
ss
xchg
jl
rcr
rcr
in
loopne
sub
movsb
fistl
cwtl
int3
cmp
js
addb
xchg
je
call
dec
negb
dec
movsl
add
xchg
mov
jns
jbe
je
insl
aaa
adc
dec
push
pop
imul
jl
push
sub
inc
lret
push
pop
rcl
jo
xchg
sub
jge
rcrl
mov
inc
mov
dec
pop
jb
cmpsb
or
xchg
pop
xchg
aad
dec
xchg
cld
loop
add
jle
inc
out
pop
mov
and
imul
xorl
and
push
loop
add
es
push
addb
mov
in
add
xchg
push
xchg
cwtl
jb
outsb
push
and
sbb
lea
xchg
aad
aad
sahf
inc
je
and
add
xchg
sahf
dec
adc
ja
cs
scas
add
js
xor
cmp
jb
aam
cld
cs
adc
sbb
mov
repnz
mov
std
xchg
aaa
inc
shrb
mov
js
in
push
jbe
push
push
or
mov
or
cmp
mov
pushf
mov
mov
and
mov
inc
cwtl
and
xchg
js
cli
fimuls
lea
inc
std
dec
mov
fucomip
jg
mov
inc
or
jl
adc
sub
in
icebp
inc
adcb
inc
jb
mov
push
in
orb
inc
enter
xchg
inc
sub
dec
lcall
gs
pop
push
mov
adc
pop
dec
divl
inc
dec
mov
xor
lock
mov
mov
inc
mov
inc
adc
imul
shll
xchg
push
in
push
sbb
sbbb
sbb
enter
mov
mov
dec
cwtl
mov
xchg
daa
rolb
pushf
xchg
roll
adcl
dec
dec
jle
jb
aaa
mov
or
mov
jo
cmp
dec
push
mov
test
or
pop
in
cwtl
jb
push
imul
aad
int3
push
test
jo
mov
scas
inc
mov
add
mov
mov
dec
or
push
imul
and
xor
mov
pop
loope
inc
int3
inc
mov
mov
int3
stc
adc
add
ss
inc
jecxz
and
popa
cwtl
mov
adc
push
pop
mov
rclb
cwtl
leave
pop
or
popa
mov
fstl
push
dec
push
out
push
sbb
xchg
jp
push
or
imul
jbe
push
cwtl
lcall
call
sub
mov
push
sbbl
jb
add
loope
xchg
fwait
int
ds
sahf
pop
inc
mov
aad
mov
mov
cmp
jnp
xchg
lcall
pop
cmp
and
adc
aaa
dec
mov
cmp
fisttpll
jp
cmp
lds
divb
lods
enter
mov
mov
or
xchg
stos
daa
cli
jb
loop
or
mov
aam
imul
mov
aaa
pushf
lahf
inc
inc
jne
pop
aaa
push
jg
mov
xchg
sbb
mov
int
lahf
cmp
dec
and
jp
xchg
mov
fcomps
pop
fwait
fwait
roll
jae
sti
dec
sbb
fisttpll
outsb
int
cmpsb
icebp
mov
repz
inc
lods
nop
lea
lods
push
aaa
ljmp
xchg
sub
lahf
mov
subb
and
std
test
jns
mov
cmp
xchg
sbb
xor
or
cmp
add
xchg
mov
jns
daa
push
push
pop
mov
push
clc
divb
mov
pop
mov
iret
pop
sahf
inc
movsl
mov
ret
xorb
xchg
call
push
inc
inc
in
cli
movsb
mov
sarb
int3
inc
sbb
or
dec
sbb
inc
daa
and
mov
mov
inc
adc
pop
push
mov
lods
push
lods
sbb
xchg
nop
and
ret
cmpb
stos
js
into
pop
mov
mov
nop
ss
adc
and
adc
jno
cli
cmp
mov
stc
ljmp
inc
sub
pop
movsb
jl
mov
push
mov
into
push
xor
mov
pushf
out
xchg
mov
shll
xorb
cwtl
lcall
cmp
xchg
stos
sahf
cltd
xchg
dec
sub
bound
pop
adc
xchg
push
mov
loop
xor
outsl
ret
xchg
jb
dec
lea
pushf
into
mov
jg
sahf
rclb
lcall
js
cmp
jp
push
test
cwtl
jmp
rcrl
mov
fcmovne
sbbb
and
mov
loopne
push
adc
mov
push
pushf
int3
or
lcall
inc
cmp
pop
sarb
int3
lea
inc
loop
add
sub
sbb
clc
inc
pop
gs
pop
inc
jb
xchg
and
pop
mov
iret
cli
push
stos
sbb
cmpsb
xor
xorb
and
xor
pushf
or
mov
adc
lods
mov
jmp
jo
sbb
jge
cwtl
mov
mov
and
arpl
nop
lret
nop
call
mov
pop
gs
push
mov
cmp
fdivl
imul
mov
inc
push
dec
xor
icebp
sub
mov
inc
dec
cmp
ret
jg
xchg
jb
aad
ret
popa
inc
ss
dec
and
shlb
adc
xor
ss
or
cwtl
in
ds
arpl
in
fadds
mov
sahf
push
lcall
and
lods
leave
and
repnz
xlat
xchg
addr16
mov
or
jp
jo
xchg
cmpl
mov
mov
js
ss
shrl
push
pop
cld
pop
jg
incb
xchg
movsb
in
ret
pop
andb
inc
add
pop
sub
inc
cmp
pop
repnz
mov
arpl
jge
pop
cmp
dec
lcall
mov
loop
mov
dec
arpl
cmp
js
mov
sbb
test
pushf
ret
mov
sub
nop/reserved
inc
add
sbb
jmp
mov
and
inc
xchg
mov
insl
jecxz
inc
pop
cmpb
popa
xchg
pop
push
mov
pop
scas
mov
sub
xor
or
jmp
shlb
xchg
icebp
lret
push
ss
popa
jp
cmp
call
push
loope
mov
xor
fcmovnb
imul
adc
mov
jp
aad
scas
push
adc
pop
mov
scas
add
dec
sbb
popa
add
inc
dec
jp
mov
cmp
inc
lods
idivl
push
dec
sub
cwtl
adc
inc
cmp
sbb
push
mov
dec
in
mov
and
inc
pop
aam
dec
dec
pop
int
add
in
mov
lods
mov
or
dec
pop
test
mov
clc
addl
inc
push
and
shll
inc
in
sub
lcall
cmp
jne
push
inc
and
in
push
ljmp
lcall
js
xor
push
popa
cmc
mov
pop
lret
add
dec
jl
popa
xchg
mov
add
xchg
scas
mov
scas
xchg
imul
popa
aad
jns
push
xchg
mov
and
and
fildl
fwait
jbe
inc
mov
pop
inc
ss
daa
fisubs
push
xor
push
negl
lds
das
mov
push
push
fimuls
punpcklwd
mov
scas
mov
mov
dec
test
jl
adc
mov
sub
fmuls
sti
and
xchg
mov
inc
lahf
xlat
ret
xchg
rorl
inc
js,pt
inc
adc
ljmp
cmp
inc
xchg
pop
push
pop
dec
pop
dec
aam
movsb
cmpsb
insl
push
sbbb
cwtl
add
inc
mov
jp
mov
movsl
sbb
mov
inc
xchg
jne
mov
mov
or
fs
push
push
mov
inc
movsb
and
in
cmp
in
push
movsb
xchg
aaa
mov
mov
push
cmp
jge
cwtl
scas
mov
add
push
mov
test
push
cmp
dec
stc
sahf
xchg
mov
faddl
in
mov
mov
inc
and
clc
dec
mov
data16
cmp
test
adc
sbb
ret
pop
add
add
call
push
out
cmpb
xor
sub
pop
mov
and
mov
mov
xor
ja
movsb
sub
add
xor
xchg
mov
xchg
sbb
jle
movsb
mov
popa
mov
loop
cmp
inc
push
sub
and
out
sbb
pusha
or
sahf
mov
inc
add
xchg
mov
cmp
fldl
pop
ret
add
imul
in
sahf
pushf
lds
add
mov
aaa
sub
xor
lret
pop
sarl
and
lods
adc
dec
cmp
orb
lock
mov
mov
adc
pushf
ret
jl
ss
and
push
and
lret
cmc
sbb
dec
dec
adc
lods
inc
into
or
js
mov
inc
mov
in
addb
jae
fisttpll
or
jle
mov
push
sub
icebp
inc
pushf
js
pop
vandnps
mul
sbb
aam
jb
cmc
mov
ljmp
mov
xor
xchg
inc
push
sahf
xchg
xchg
inc
jo
push
ds
sbb
mov
xchg
push
aad
iret
jp
nop
xchg
divb
mov
add
mov
mov
dec
adc
mov
cmp
stc
add
xchg
sbbb
fidivl
dec
jbe
test
js
pop
andb
fwait
inc
call
xchg
push
inc
and
aas
hlt
cwtl
dec
pop
lods
push
and
adc
sub
arpl
test
mull
fcoml
aam
ss
sub
stos
fs
cmpl
and
mov
test
sbb
out
adc
andl
xor
pop
in
in
sbb
test
lock
stos
out
sbb
cmp
push
fdivrl
jb
popa
add
movsb
outsb
pushf
dec
xchg
sahf
out
orb
cmp
mov
adc
movb
outsl
aaa
xor
call
inc
cmp
les
movsb
fidivl
movsb
and
popa
pop
mov
arpl
mov
scas
push
fidivl
mov
dec
lret
lcall
dec
and
icebp
outsl
inc
xchg
mov
fs
sbb
js
insb
popf
dec
mov
pop
imul
and
loope
cmp
mov
loope
jp
jb
or
outsb
jb
movsb
push
cwtl
in
and
mov
fistl
mov
push
push
bound
jbe
cmp
sahf
js
dec
mov
mov
push
daa
andb
push
push
cmp
js
cs
xor
jnp
or
cmp
fwait
pop
dec
sahf
int3
es
mov
xchg
lds
jo
outsb
aad
cs
push
mov
js
xchg
push
ficompl
dec
dec
push
pop
inc
addr16
push
test
or
pop
cmp
adc
lcall
push
dec
imul
jle
arpl
cmp
rcrl
adc
aam
and
and
and
xor
jp
out
jno
cwtl
push
in
lods
inc
mov
lret
mov
addr16
cmp
cli
addb
ret
enter
and
inc
jo
data16
and
dec
xchg
adc
push
xchg
aad
xchg
mov
xchg
fwait
ljmp
pop
dec
mov
popa
out
dec
je
xchg
bound
mov
mov
inc
in
sarw
pop
jb
add
in
inc
xchg
cmpsb
call
push
aam
rcrb
cli
xchg
rolb
gs
and
nop
mov
je
mov
adc
in
lods
mov
add
jp
push
fwait
sbbl
sub
pop
xchg
jmp
cltd
sbb
jge
into
insb
repz
jbe
ror
jo
xchg
xchg
pop
xchg
dec
out
add
adc
sub
pusha
in
lret
andb
movsb
mov
add
ss
into
ljmp
fldl
aam
subb
jb
in
lret
jb
in
outsb
xor
xchg
sbb
jb
paddsw
sahf
mov
xchg
pmuludq
in
sub
in
ljmp
xchg
addr16
in
jmp
sbb
icebp
movsb
subb
sti
xchg
sbb
lcall
mov
imull
sub
scas
adc
test
lods
mov
inc
hlt
push
adc
inc
cmc
xchg
dec
push
and
xchg
pushf
push
inc
daa
and
pop
jle
mov
stc
mov
sbb
pushf
test
or
adc
lret
mov
sbb
cmp
inc
or
jb
in
jp
ds
mov
dec
lret
mov
sbb
in
cwtl
cwtl
shlb
sahf
push
outsl
push
push
int3
nop
pop
xchg
mov
inc
push
jle
pop
stos
sub
jbe
push
mov
mov
and
push
jb
add
pop
arpl
push
imul
push
in
mov
xchg
adc
stc
in
loop
outsb
mov
adc
jb
loopne
movsb
sahf
xchg
and
mov
addb
sbb
adc
clc
cmp
pop
xor
sbb
pop
repz
cmp
or
in
in
stos
push
aam
xchg
push
dec
iret
stos
scas
jl
push
ss
repz
sub
pop
ffree
fcompl
fmuls
push
clc
pop
lods
mov
adcb
mov
dec
sbb
ss
imul
test
jl
rolb
mov
pop
mov
mov
sarb
xchg
xchg
mov
or
mov
lock
js
adc
xorb
mov
mov
xorb
in
popa
lock
sub
loop
dec
or
add
jmp
inc
dec
pop
sub
push
fwait
pop
cmp
aas
movsb
inc
pushl
jmp
jbe
out
ds
leave
out
push
pop
jle
popa
push
test
gs
ds
jnp
pop
clc
xchg
aas
stc
dec
mov
dec
pop
popa
and
fdivr
int
fdivrs
js
push
jl
aaa
mov
rcr
mov
data16
inc
push
mov
push
mov
sahf
mov
pop
jp
sbb
decb
loope
dec
popa
inc
lock
dec
add
jmp
incl
enter
fdivr
sbb
stc
dec
mov
dec
push
sbb
sahf
cwtl
test
adcl
es
mov
sahf
dec
loop
and
lock
mov
xchg
jbe
decb
cmp
or
fsubl
xchg
xor
xlat
push
push
lret
push
mull
xchg
lds
xchg
imul
nop
ljmp
lds
xorb
sbb
inc
mov
sbb
dec
sub
and
and
sub
cmp
mov
xchg
xchg
xchg
daa
lret
jnp
inc
lret
cmp
sahf
dec
out
jo
fstps
aam
arpl
js
xchg
pushf
sub
mov
iret
lcall
popa
mov
xchg
ljmp
dec
faddl
and
cmpsl
jl
js
jo
mov
pop
loope
and
pop
addb
jl
data16
js
jne
or
pop
cli
nop
pop
sub
jb
sahf
outsb
or
push
lret
stos
push
jle
dec
in
aam
and
das
cwtl
lret
aas
cmp
push
sbb
push
push
cmpl
add
fcompl
sahf
rcrb
xchg
negl
clc
scas
arpl
xorl
lahf
pop
push
ss
sub
sbb
idivb
movsb
inc
ret
mov
jmp
mov
pop
xchg
rolb
inc
in
sbb
or
call
xor
ss
and
mov
jle
xchg
cli
pop
push
cwtl
jbe
loop
mov
push
mov
pop
mov
push
pop
xchg
mov
arpl
aam
inc
mov
inc
bound
cmc
push
lods
or
test
ficoml
orb
pushf
aas
test
jbe
mov
adc
orb
jbe
sbbl
dec
data16
decb
mov
jns
xchg
inc
arpl
and
sahf
inc
inc
lea
add
and
dec
mov
daa
aam
pop
push
jl
lea
test
jp
movsl
and
inc
shlb
xchg
add
adc
pop
sahf
cwtl
push
nop
and
xchg
mov
aaa
in
dec
pop
and
dec
xchg
add
test
mov
cmp
out
sbb
inc
xchg
jg
cmp
into
cmp
ds
dec
test
jno
ss
or
pop
aaa
in
jb
mov
repz
jp
sbb
xor
nop
lahf
lcall
gs
xchg
in
inc
mov
cmpsb
in
mov
mov
cli
sbb
movsl
mov
dec
push
mov
pop
sub
rol
test
xchg
adc
cmp
inc
mov
dec
jbe
mov
xor
aad
jge
push
mov
cmp
xor
mov
or
push
sahf
pop
mov
dec
xchg
push
std
in
fdivl
and
mov
movsb
xor
push
sbb
and
ss
add
pop
cmp
push
inc
in
ja
add
data16
js
mov
mov
int3
sahf
push
mov
es
jle
push
inc
push
jg
pop
push
sub
xchg
mov
fwait
push
cmpsb
cmpb
movsb
add
std
pop
in
or
xor
jl
aas
clc
adc
push
mov
mov
or
push
sbb
inc
out
xchg
in
dec
mov
mov
inc
test
or
pop
je
xchg
mov
std
rorb
ja
inc
cmp
mov
and
lret
test
shlb
popa
cli
out
fidivrl
push
mov
or
lock
xchg
ret
inc
cmp
test
test
nop
dec
sub
push
rclb
dec
sub
push
push
ja
xor
insl
fwait
push
sar
inc
gs
ss
jb
inc
dec
mov
mov
fisubs
rcpps
jp
xchg
jl
mov
dec
pop
mov
ret
pop
test
dec
arpl
adc
subb
cmp
cmpsb
sbb
mov
dec
mov
loop
jle
out
xchg
sahf
mov
jmp
and
add
adc
pop
mov
push
add
inc
xchg
popf
xchg
push
jo
cmc
aam
test
sbb
aas
and
push
jl
jmp
dec
and
push
pusha
push
mov
jns
inc
xchg
sbb
mov
mov
insb
mov
in
push
jns
in
loop
mov
ret
addb
inc
sahf
cmp
jl
pop
rolb
mov
xchg
ja
cmpsl
lcall
add
mov
loop
ret
pop
test
lret
push
dec
les
mov
scas
daa
and
cld
or
push
adc
xchg
imul
out
xor
cld
jle
aam
mov
inc
int
mov
pop
lea
pop
lods
mov
popa
add
jecxz
sarb
mov
pop
ds
loope
dec
inc
pop
dec
sbb
sub
rcrb
pop
aas
jbe
mov
jbe
out
mov
add
dec
push
pop
mov
push
mov
cmp
jl
push
push
rcrb
incb
cmp
inc
loop
flds
shll
scas
mov
incb
fmull
add
push
dec
testl
fisubrs
sbb
out
sbb
pop
mov
cmp
xor
mov
add
push
cs
xchg
mov
pushf
fst
mov
dec
pop
add
outsb
push
cltd
add
mov
int
bnd
sahf
es
aas
mov
dec
sbb
xor
xor
sahf
and
inc
shr
out
jns
jb
insl
adc
cmp
jmp
xor
es
jl
in
sbb
int3
jo
mov
jle
mov
jge
cltd
ret
test
das
cmpb
add
and
cli
xor
movsl
or
mov
cmpsb
inc
inc
inc
pop
and
push
add
dec
inc
call
notl
dec
out
aam
pop
iret
repnz
cmpsb
enter
enter
dec
sub
inc
cwtl
dec
std
adc
in
inc
lcall
fwait
les
ret
xchg
and
or
les
xchg
data16
dec
sbb
push
mov
mov
push
xor
test
mov
pop
or
inc
movsl
popf
or
loope
pop
cmpsl
gs
popa
push
fcompl
and
sbb
cmp
sahf
arpl
enter
ds
adc
stc
and
jne
mov
and
dec
rorl
and
mov
ss
stos
xchg
cmp
mov
movsb
fistpl
sbb
ret
test
decb
push
out
sbb
test
fisubs
push
sbb
loop
mov
and
sahf
or
cmpsl
pop
test
dec
inc
cmpsb
ja
sbbb
pop
push
in
sbb
dec
xor
aad
inc
dec
xor
dec
sbb
inc
jnp
lea
mov
sbb
cmp
out
ja
push
and
and
dec
mov
mov
add
push
sbb
cmp
mov
daa
mov
pop
mov
mov
and
push
jmp
adc
dec
and
subb
sbb
push
xchg
mov
cmc
cmc
stos
arpl
test
pop
data16
push
and
ss
pushf
push
sub
xchg
or
stc
dec
inc
andb
and
jbe
jl
jp
inc
xor
xchg
sahf
mov
and
pushf
aas
sbb
roll
sbb
xchg
dec
pop
lds
popa
push
clc
inc
fsubp
dec
icebp
scas
mov
movsb
dec
sbb
jp
jbe
hlt
popa
xchg
jmp
repnz
jb
repnz
in
notb
xorb
stos
stos
xchg
mov
push
push
movsb
outsb
mov
jp
push
inc
in
mov
sbb
es
mov
xor
push
pop
add
in
jb
or
test
cmp
push
and
in
sbb
inc
or
pop
stos
cmp
mov
or
insl
dec
push
arpl
jp,pt
xchg
bound
mov
nop
rolb
pop
jge
mov
xor
or
testb
pop
sbb
int
or
inc
add
fildl
push
in
in
fs
mov
xor
lcall
mov
adc
xchg
popa
jp
or
stc
or
mov
or
in
lock
les
mov
xor
popf
mov
xchg
cmp
test
scas
or
sbb
cmp
adc
leave
cmpsb
and
push
push
add
mov
sub
sahf
push
in
push
insl
popa
mov
jb
es
push
jp
jns
sub
shll
mov
and
and
cmpsb
mov
fstl
cmp
mov
nop
push
sahf
inc
jp
xchg
sbb
xor
popa
out
push
and
cmp
lea
dec
jb
mov
cmc
in
adc
popa
dec
mov
cltd
sbb
sbb
loope
aad
mov
push
inc
gs
mov
mov
push
xor
bound
cmp
mov
dec
scas
repz
lret
fisttpl
loop
xabort
cld
pop
mov
dec
insl
lret
jbe
and
sbb
mov
pop
repz
jmp
push
dec
cmp
popa
rclb
sbb
mov
xor
sub
inc
ja
icebp
jb
xchg
jp
xlat
sub
inc
mov
loope
ljmp
jbe
push
mov
popa
test
push
lcall
or
test
mov
mov
mov
inc
xchg
pop
add
inc
sub
xchg
andb
aas
popa
ds
pop
xchg
or
in
aaa
jo
sbb
pop
lcall
sahf
cli
arpl
push
js
pop
lahf
inc
test
jp
jp
movsb
mov
nop
dec
out
add
adc
inc
aad
jns
pop
jo
and
ds
cmp
jle
rolb
mov
mov
fisubrs
dec
adc
scas
into
imul
out
and
mov
sbb
sbbl
xchg
lcall
and
jl
push
mov
psubw
icebp
and
fcompl
push
push
push
sbb
shrb
arpl
pop
loope
adc
adcb
sahf
arpl
push
jge
xchg
mov
xchg
es
sbb
push
cwtl
dec
and
jo
lods
outsb
push
sub
ja
inc
mov
dec
addr16
push
xor
repnz
aas
fidivrs
inc
jmp
or
test
jp
or
mov
dec
cmpsb
pop
push
jl
mov
push
adc
xchg
std
ss
sbb
cmp
scas
jp
mov
ss
sbbb
out
shlb
enter
mov
es
jle
out
ficompl
lds
and
push
sahf
xchg
movsb
test
pushf
mov
pop
cmp
mov
xchg
popa
jnp
idivb
ficompl
movsb
push
in
adc
fisttps
cmpsb
inc
and
xchg
mov
jo
ficompl
adc
in
dec
jle
push
and
jo
dec
xor
movsb
outsb
ds
in
mov
idivb
jns
in
sbb
js
pop
or
gs
and
ret
adc
pushf
popa
lahf
ds
pop
mov
cwtl
inc
arpl
cbtw
push
mov
aaa
sbb
xchg
and
push
daa
xor
xchg
in
push
mov
mov
jg
cs
mov
pushf
push
push
cmp
mov
mov
cmp
dec
fdivrs
push
aam
push
inc
cmp
cmp
inc
add
cmp
popa
push
test
into
push
test
pop
ljmp
movsb
push
js
sbb
aas
ljmp
or
ret
pop
adc
push
adc
mov
movsb
xor
mov
jbe
arpl
fcomp
inc
adc
test
push
int3
fsubl
movsb
xchg
jle
dec
sub
ds
nop
in
popa
cmpsb
mov
pop
cmp
push
jl
in
cmp
cmp
xchg
xchg
rorl
mov
stos
push
mov
sbb
mov
xchg
cmp
adc
pop
js,pt
leave
arpl
lcall
xchg
inc
xchg
inc
sub
jne
and
adc
xchg
xor
fidivl
lcall
dec
ficompl
loop
cmc
call
push
adc
lret
fdivl
jmp
sbb
push
push
lods
xor
icebp
lret
mov
mov
add
sbb
push
dec
dec
mov
stos
push
xchg
dec
lcall
sbb
mov
xchg
dec
ljmp
mov
clc
data16
jo
add
ds
cmp
sarl
add
aad
jl
movsb
and
pop
sbb
inc
inc
mov
cmp
mov
aaa
inc
or
adc
aam
sarb
cwtl
push
jo
push
sub
insb
aas
popa
ss
std
xor
movsl
outsb
push
fldcw
push
fmuls
push
scas
in
stos
in
inc
jmp
jl
cmp
push
cmp
inc
fcmovne
loopne
mov
mov
pop
mov
mov
xor
inc
push
cmp
in
dec
mov
mov
movsb
push
adc
jo
leave
mull
mov
pop
dec
inc
incb
jb
pop
js
or
ds
fwait
sbb
pop
pop
xchg
rclb
shrb
shl
push
mov
xor
dec
sbb
es
and
or
sbb
jo
mov
mov
cmp
in
call
data16
or
call
add
fcoms
pop
cmp
or
jge
dec
aaa
jns,pt
xchg
xchg
int3
push
xchg
cmp
jg
and
cmp
jge
ret
inc
mov
jno
sti
inc
jnp
sbb
sarb
lcall
mov
push
or
mov
cmp
dec
in
push
aad
push
pushf
pop
pop
call
lcall
push
pop
call
mov
jno
add
add
adcl
mov
rclb
jo
dec
push
cld
mov
iret
ljmp
test
and
push
push
and
bound
adc
jae
nop
lcall
jno
jp
loope
xchg
jnp
xchg
inc
inc
test
mov
xor
inc
push
andl
aas
enter
push
and
cmp
inc
and
sbb
mov
imul
cmpsb
xchg
sbb
sbb
stos
nop
ficoms
mov
mov
inc
mov
mov
inc
xchg
arpl
mov
xorb
and
mov
xchg
movsb
inc
sbb
test
test
push
dec
pop
fwait
and
pop
jb
sbb
mov
pop
sbb
push
dec
xchg
mov
mov
sahf
pop
pop
cmpsl
dec
adc
mov
mov
sub
dec
push
iret
bound
cmp
and
aam
inc
cmpsb
lds
cmp
int3
cmp
mov
pop
frstor
mov
mov
addb
xchg
add
mov
mov
sbb
jmp
sbbb
fcomp
pop
testb
adc
jbe
ss
shlb
or
dec
aad
mov
push
add
pop
push
sbb
xchg
test
test
addr16
test
jge
adc
mov
pop
inc
mov
loop
mov
mov
jmp
dec
xchg
lock
dec
push
sub
aam
mov
and
xchg
dec
dec
inc
jo
cwtl
sbbb
jp
cmp
ret
mov
inc
push
sti
push
ror
pop
test
mov
inc
add
xor
dec
jle
in
jge
inc
js
int3
outsb
es
sbb
sahf
lcall
xor
shlb
push
mov
pop
out
xor
roll
inc
cmpb
mov
cmp
lea
pop
cwtl
xor
push
jnp
mov
popf
cltd
mov
mov
jbe
xchg
ljmp
mov
and
dec
sahf
xchg
test
inc
out
sbb
pop
fucomip
push
push
std
mov
sbb
mov
or
bnd
dec
mov
push
xlat
leave
dec
es
pop
push
scas
pusha
jl
pop
and
xchg
and
xchg
dec
mov
dec
or
sbb
rorb
mov
cwtl
push
add
scas
mov
xchg
xchg
aaa
shl
mov
dec
pushf
arpl
ss
push
add
push
mov
xlat
inc
aam
dec
push
inc
add
es
in
adc
dec
inc
lahf
loop
dec
mov
in
cmpsb
lea
sahf
mov
dec
xchg
jae
into
sbb
dec
jge
jmp
adc
adc
or
in
mov
inc
xor
sbb
pop
sahf
xchg
test
push
xchg
cmp
push
mov
in
mov
testb
mov
inc
dec
aaa
push
xor
sbb
cmp
pop
cmp
aas
xchg
inc
inc
push
push
addl
jle,pn
jb
or
mov
mov
jno
mov
inc
mov
push
icebp
push
inc
mov
mov
cmp
mov
gs
push
jo
arpl
dec
pop
jl
gs
vpaddd
stos
push
in
pop
xchg
sub
test
leave
xchg
adc
push
jle
and
ss
push
push
push
cmpsl
out
xor
push
ror
or
cld
dec
pop
out
addr16
mov
adc
push
xor
sub
xor
mulb
sub
sbb
pop
jo
mov
in
jbe
add
ds
jl
push
inc
icebp
cmp
sub
into
mov
jo
mov
jl
sub
ret
cmp
enter
pop
inc
loopne
adcb
sbb
dec
dec
jle
lock
jmp
xor
cltd
jmp
sbb
mov
jl,pt
xchg
pop
js
push
mov
pop
inc
mov
inc
ss
cltd
inc
xchg
sbb
test
push
testl
push
aaa
sbb
cmpsb
mov
mov
xor
push
pop
mov
or
add
sahf
dec
movsb
inc
scas
and
sbb
push
jp
cmp
jne
addb
jbe
sar
popa
addl
rclb
or
add
inc
lock
and
sbb
mov
cmp
push
scas
xor
popf
mov
or
scas
sarb
xchg
gs
pop
movsl
add
cmp
cli
inc
add
push
mov
sbb
and
mov
or
cwtl
adc
int3
push
and
mov
inc
mov
xor
lods
mov
cmpsb
cmpsl
push
popa
push
jle
xchg
movsb
inc
push
dec
movl
cmp
mov
mov
xchg
jo
int3
jp
jg
xchg
mov
popa
adcb
mov
dec
out
sbb
push
dec
push
pop
mov
test
fsubl
jo
lds
or
mov
and
adc
test
pop
push
push
sub
das
adc
in
loop
into
ds
cs
aam
or
jb
ret
xchg
dec
push
inc
movsb
inc
mov
cmpsb
inc
push
xlat
xchg
xchg
clc
xchg
cmp
sub
pushf
inc
aam
jo
mov
lods
pop
data16
mov
and
mov
pop
cmp
jae
sbb
or
popa
jb
push
or
fimuls
scas
fdivs
inc
or
jnp
xchg
popa
inc
dec
mov
and
xor
jle
pop
jns
add
scas
sbb
aad
sahf
push
jg
outsb
lcall
adc
pop
push
mov
cmp
xor
test
repnz
and
leave
in
adcl
jle
insb
pushf
aam
shrl
and
dec
inc
push
cmp
and
sbb
push
aad
jp
in
xchg
sarb
lcall
jb
or
in
mov
dec
aad
pop
mov
xchg
lea
inc
push
mov
popa
cmp
dec
jecxz
subb
inc
outsl
xchg
push
xor
sub
cmpsb
sahf
inc
and
pop
inc
nop
jnp
pop
shll
int3
jl
mov
sahf
mov
push
pop
pop
cmc
pop
mov
dec
test
scas
aaa
in
inc
xchg
cmp
mov
jle
jp
inc
push
jne
jb
pusha
test
sub
fldenv
lods
cwtl
mov
pop
mov
and
cld
scas
lock
adc
test
les
fwait
xchg
ret
xor
xor
push
and
adc
push
dec
inc
dec
lcall
movsb
cmp
pop
jne
ret
mov
xor
adc
cli
and
adc
mov
xchg
subb
xchg
sahf
cmp
lcall
ss
xchg
dec
xchg
push
movsl
neg
inc
xlat
inc
out
or
aad
es
mov
add
mov
push
lret
arpl
cltd
adc
hlt
inc
in
cwtl
aas
lret
test
ss
xchg
data16
aad
mov
js
lock
xchg
mov
pushf
push
dec
in
fmul
inc
jbe
mov
cwtl
and
push
mov
xchg
mov
xchg
call
mov
mov
test
and
sub
ror
pop
sbb
add
push
mov
push
or
xchg
cwtl
inc
pop
shll
ljmp
mov
xor
fmull
dec
mov
xor
cwtl
jbe
or
cmpsl
sbb
push
jl
and
xchg
cwtl
jp
and
sbb
sbb
fidivrl
fimull
in
loop
add
loop
mov
rclb
push
dec
popa
push
push
mov
scas
sahf
push
pushf
or
sub
enter
mov
icebp
adcb
sbb
std
xchg
sbb
shrb
pop
mov
rolb
jl
aas
rcrb
xchg
and
push
mov
jle
pop
dec
inc
cmp
xchg
inc
nop
mov
out
jle
sub
xchg
xchg
fucom
pop
test
movsb
in
call
mov
xchg
inc
adc
xor
inc
pop
xchg
mov
xchg
sub
fcompl
in
sarb
add
popa
pop
shlb
mov
sub
mov
pop
pop
xor
negb
xchg
fcomip
inc
inc
cmp
sub
inc
ret
call
cmp
addb
jl
outsl
dec
ds
adc
mov
mov
inc
in
in
sub
dec
nop
sub
ficomps
inc
cld
cwtl
mov
adc
popa
orb
in
xchg
mov
push
push
in
and
or
mov
sbb
fwait
movsb
mov
pop
dec
roll
int
sahf
shlb
inc
aam
xorb
xor
stos
push
xchg
cmp
arpl
pop
mov
xor
into
jle
dec
subl
pop
jb
mov
pop
mov
faddl
xor
dec
test
sub
clc
lret
sbb
mov
push
pop
ret
adc
and
push
andl
cmp
mov
push
aaa
movsb
call
and
lcall
test
jl
shr
push
adc
data16
fiadds
dec
push
mov
dec
ficomps
push
xchg
rcrb
shrb
mov
sbb
xchg
mov
sarb
jb
push
mov
jo
shrb
mov
fsts
pop
ss
cltd
popa
int
push
jb
es
inc
pop
pop
lds
sbb
sub
fs
popa
in
les
arpl
andb
mov
ficoms
stos
ficomps
push
mov
mov
and
cmp
inc
movsl
push
call
rolb
int3
clc
mov
or
cmp
mov
rcrl
push
xor
jb
xchg
inc
push
and
push
imul
mov
gs
mov
xchg
cwtl
stos
sbb
pop
xorb
fidivrl
int3
mov
jmp
and
fsts
mov
cmp
cmp
xchg
xchg
shlb
xchg
leave
loop
in
mov
inc
pop
sbb
and
add
xchg
push
mov
push
adc
ret
andb
pop
and
mov
cwtl
cmp
jp
lcall
pop
mov
in
push
test
add
mov
push
dec
icebp
lret
inc
jo
inc
pushf
mov
fistpl
iret
mov
and
push
fidivrl
sbb
lock
and
sarb
jbe
xor
push
mov
jb
xchg
sub
jle
sbb
movsb
ss
mov
push
lret
pop
js
aas
dec
mov
orb
movsb
sbb
xchg
xor
pop
jb
adc
outsl
pushf
dec
lds
mov
mov
jp
sahf
xor
mov
in
and
aas
pop
jle
gs
mov
mov
mov
lcall
sbb
cmp
fdivrs
or
mov
incb
int3
push
and
jp
dec
sbb
xlat
or
cld
push
std
sbb
repnz
and
sti
movsl
out
jb
pop
popa
xchg
jo
es
push
mov
dec
sar
pop
cmpsl
jl
sbb
xchg
mov
cwtl
adc
pop
mov
and
dec
xchg
mov
xchg
js
movsb
in
das
jne
pop
cmp
push
int
leave
mov
ss
push
push
ret
sub
mov
dec
xor
cmp
push
sahf
ss
or
lods
ljmp
scas
cli
lcall
out
dec
push
mov
xchg
fidivs
mov
mov
adc
xor
or
push
roll
mov
movsl
stos
in
inc
jno
fs
stos
iret
fiadds
xchg
sbb
push
mov
movsb
lods
push
aaa
test
push
cmp
mov
ror
pusha
mov
jns
clc
fimull
dec
jle
sbb
mov
popa
xchg
mov
mov
pop
mov
mov
jp
imul
push
ret
test
xor
inc
sarl
dec
mov
scas
in
xor
mov
xchg
and
lds
ret
pop
mov
push
inc
cmp
push
data16
mov
cmpsb
mov
mov
xor
xchg
inc
mov
ret
inc
pusha
daa
sub
call
divb
mov
push
jb
jle
fwait
sti
xchg
in
ds
xchg
movsb
mov
ljmp
sub
add
aad
mov
push
shl
pop
dec
or
inc
addr16
outsb
cwtl
sar
xor
mov
js
nop
xor
mov
lods
enter
push
out
xorb
push
testb
loop
mov
xchg
mov
nop
ljmp
cmp
scas
push
xor
mov
dec
mov
push
outsb
jo
in
nop
and
jge
movsb
mov
out
ss
ss
xchg
pushf
adc
loope
jl
hlt
mov
push
cwtl
int3
pop
push
out
jbe
push
xchg
insb
ljmp
xor
pop
nop
xchg
xchg
sbb
loop
adc
int3
sbb
cmpsb
pop
mov
gs
test
push
and
jbe
sbb
pop
cmp
push
inc
push
push
sbb
cltd
mov
rclb
ds
lods
push
mov
inc
pop
push
pop
jl
lahf
movsl
push
test
dec
pop
cmpb
mov
inc
test
dec
fidivl
call
cltd
shl
or
push
xchg
movsb
mov
add
dec
xchg
jle
jp
xchg
cmpb
fdivrl
cmp
ss
ljmp
xor
pop
adcb
xor
mov
aas
sbb
pop
js
loop
gs
sbb
inc
and
inc
add
sti
xchg
add
movsb
jbe
mov
mov
fmuls
in
push
mov
cmpsl
ret
sahf
inc
jl
inc
or
sbb
dec
cmp
mov
add
dec
in
mov
inc
cltd
lcall
loop
loop
shlb
jo
sbb
dec
pushf
mov
inc
ss
add
andl
test
dec
cmp
mov
jmp
or
loope
jge
push
movsb
mov
ds
sub
xchg
push
inc
test
sbb
loope
sarl
cmp
sbb
inc
mov
jl
movsb
xchg
cli
lcall
pop
inc
inc
cltd
mov
mov
mov
rcrb
mov
cmp
push
cwtl
ds
test
mov
or
loope
or
lods
mov
ds
fisubl
and
mov
jp
mov
push
mov
cli
pop
fildl
dec
cmp
mov
mov
addr16
or
cmp
jle
dec
js
movsb
lcall
lcall
cld
and
clc
mov
pop
or
jp
xchg
cmp
addb
bound
xchg
xchg
cwtl
sbb
push
addb
mov
bound
push
inc
sbb
fnstenv
jle
enter
in
and
cmpsl
push
mov
mov
sarb
mov
sub
sub
inc
adc
ja
jge
and
sahf
mov
std
stos
mov
mov
mov
js
inc
mov
push
push
jg
dec
xchg
add
ds
arpl
inc
xchg
cmp
test
stos
lds
push
dec
fisubl
lds
or
adc
pop
xor
jnp
dec
mov
bound
es
mov
mov
and
jo
pushf
loop
and
adc
sahf
jp
cmc
sbbb
and
cmp
pushf
cmp
xor
xlat
fwait
dec
in
out
dec
mov
cs
sbb
ret
dec
leave
add
test
mov
arpl
sub
mov
push
daa
xor
lcall
rcrl
xchg
cmp
dec
cmp
cmpsb
xchg
mov
cli
xchg
mov
in
data16
cmp
or
xlat
mov
jle
mov
orl
pop
sahf
mov
pop
lret
add
push
inc
imul
pop
icebp
out
sbb
cmp
dec
loop
ljmp
xor
jle
rorb
sbb
outsb
arpl
and
mov
lcall
push
jo
cmp
fsts
or
and
cmp
and
lds
ja
inc
mov
pop
cmp
inc
inc
mov
imul
int
inc
adc
mov
pop
cmpsb
sbbl
stos
mov
sub
lcall
ljmp
cmp
cmp
sbb
or
cmp
add
ret
sbb
cld
jle
sets
inc
rorl
dec
les
test
mov
jg
adc
test
ljmp
mov
dec
shlb
dec
jb
add
test
mov
add
push
cmp
mov
sbb
test
sub
arpl
xchg
add
insl
fiaddl
xchg
dec
inc
inc
fs
mov
shll
cwtl
mov
jo
rorb
push
add
add
jnp
sub
neg
push
inc
and
push
dec
in
aam
sbb
lcall
and
nop
push
loopne
test
sub
push
into
dec
inc
pop
pop
mov
js
mov
mov
int
in
xchg
lds
push
mov
in
push
out
xor
push
adc
dec
and
xchg
mov
xor
aam
test
push
lcall
aas
movsb
inc
dec
and
xchg
jecxz
inc
rolb
mov
cmp
adc
insb
mov
pop
sbb
test
sbb
arpl
cmp
adc
mov
mov
out
cli
lcall
adc
out
pop
cmc
dec
fidivl
push
sbb
clc
mov
add
aam
pop
dec
ss
sbb
push
movsb
inc
ds
mov
mov
mov
mov
xchg
push
out
aam
mov
xor
mov
sahf
jo
ss
mov
dec
pushf
jle
mov
fwait
mov
stos
mov
sbb
cmpsb
add
pushf
cmp
shll
popa
inc
add
sbb
hlt
out
push
sahf
mov
dec
jl
dec
cs
ret
pop
dec
call
in
aaa
jl
mov
inc
rclb
cmp
pop
sbb
push
arpl
cmp
loop
jl
enter
and
es
jbe
mov
dec
sbb
rclb
jb
sar
test
cmp
movswl
out
lcall
mov
movsb
and
cmp
orb
dec
lcall
mov
xchg
movsb
aad
imul
cmp
es
push
jl
cwtl
lods
sahf
cmp
jp
bound
or
pop
dec
pop
rcl
sahf
cmp
ss
inc
bswap
and
add
jb
and
xlat
push
loop
jbe
in
xchg
lret
sbb
rcr
adc
cmp
idivl
sarb
inc
mov
cli
and
add
in
ret
jge
jmp
cmpb
mov
mov
lahf
lret
or
xchg
ss
mov
jo
add
dec
xchg
mov
aad
cmp
sub
sub
push
lahf
in
sub
push
movsb
jbe
adcb
sbb
and
jle
xor
lds
cmp
fisubl
xchg
pop
mov
push
shll
jb
push
cwtl
inc
dec
push
xor
rcrw
inc
mov
fwait
jl
scas
mov
pop
cmp
dec
sub
jle
in
mov
jb
andl
mov
ds
adc
lods
insb
jno
ss
int3
jp
cmp
pop
ss
ds
push
xchg
js
mov
inc
push
and
sub
outsl
inc
mov
rcll
push
xchg
push
adcb
movsb
ds
mov
fists
xchg
cmp
aad
inc
sbbb
iret
dec
mov
sub
scas
sbb
dec
popa
pop
iret
js
fildll
test
in
mov
dec
pop
xchg
and
xor
xorb
push
mov
cld
sahf
sub
jb
xchg
inc
dec
scas
mov
add
inc
jp
mov
ret
inc
hlt
jb
mov
and
xor
scas
xchg
lods
push
push
mov
cwtl
ds
pop
inc
dec
add
sub
mov
std
dec
mov
arpl
mov
mov
js
pop
jb
mov
and
push
push
inc
sub
sahf
loope
jmp
aaa
lcall
fnsave
lret
push
push
adc
cmpsb
enter
sbb
inc
push
mov
and
jb
popa
push
divb
mov
sbb
mov
push
mov
add
orb
push
cld
mov
out
loop
cmp
pop
nop
ss
pop
gs
dec
pushf
test
cli
xor
sub
and
stos
cli
cmp
ret
popa
pop
jp
imul
mov
in
cwtl
lcall
notb
xchg
xchg
adc
ds
xchg
fcompl
pop
xlat
imul
mov
dec
loop
int3
mov
mov
pop
jbe
jge
pop
ja
ficompl
push
data16
fidivrl
dec
in
sub
int
mov
xchg
adc
cmc
xchg
and
mov
inc
mov
rorb
dec
mov
xor
xor
out
and
inc
push
test
shrl
inc
mov
mov
cmp
sahf
and
xchg
jbe
inc
mov
fbld
push
adc
or
and
pop
sahf
push
sbb
inc
jbe
dec
jo
ficoml
adc
pop
push
jbe
dec
ret
xor
test
inc
fs
ficoml
dec
push
and
sbb
xor
mov
jl
sbb
xchg
xor
js
mov
mov
sahf
ss
nop
sbb
in
arpl
xchg
divb
sahf
mov
les
mov
mov
icebp
out
and
jbe
mov
and
sub
jle,pt
push
cmpsl
mov
xchg
inc
push
lds
insl
xor
adc
pop
sahf
dec
adc
add
inc
adc
movsb
test
out
add
add
addb
negb
iret
xchg
mov
pop
cmp
jg
sbb
mov
in
rclb
lret
push
jb
mov
cmpsb
mov
js
inc
inc
daa
cmp
xchg
ja
dec
dec
jae
je
fimuls
jo
ret
sbbb
iret
sub
inc
ret
mov
test
out
sbb
aaa
aas
mov
push
mov
addr16
pushf
inc
mov
mov
lret
fidivl
push
xchg
lods
xor
cmpsl
arpl
sbb
in
ss
dec
add
pop
sbb
cli
stos
loop
in
in
and
rcrl
sub
adc
arpl
xchg
push
mov
ret
pop
sbb
xor
mov
push
push
adc
add
mov
popa
mov
adc
pushf
stos
sub
inc
movsb
pop
hlt
and
sbb
push
shrb
loop
mov
imul
inc
fistps
inc
lods
and
inc
cmp
stos
lea
sub
or
dec
out
jo
push
mov
js
js
cs
pop
mov
cmpsb
push
ds
push
dec
mov
fwait
lret
mov
nop
repz
out
add
pop
cmp
mov
mov
dec
subb
jbe
dec
mov
ss
inc
jo
cmp
fidivl
aam
mov
mov
xchg
mov
cmp
cmp
xchg
js
mov
call
mov
stos
in
andb
cwtl
mov
mov
ds
inc
mov
test
jp
push
pop
dec
push
xchg
push
jecxz
arpl
mov
mov
dec
and
jl
test
test
mov
push
ds
cld
faddl
stc
popa
or
pushf
in
adc
arpl
adc
pop
sbb
sahf
cmp
inc
mov
or
sbb
pop
push
jnp
mov
or
add
fildl
cmp
and
nop
shll
jle
pop
inc
arpl
lock
cmp
int3
push
xchg
outsb
dec
dec
pop
and
inc
add
sbb
ljmp
mov
aaa
mov
sbb
mov
stc
in
pushf
mov
jmp
dec
fdivrl
adc
xor
or
js
cli
inc
mov
neg
rcrb
xor
dec
mov
and
pusha
inc
or
subb
add
outsl
out
ds
or
ret
inc
adc
test
js
and
pop
nop
mov
and
movsb
dec
stc
jb
and
pushf
aam
cmp
xchg
imul
shll
ret
stos
sbb
and
inc
push
imul
pop
push
cmpsl
xchg
mov
inc
and
lret
and
lret
jo
stos
cmp
cmp
popf
push
cmpb
test
mov
mov
jnp
adc
jbe
mov
sub
movl
pushf
jo
in
pop
or
sbb
push
mov
push
and
nop
sub
push
cmp
push
pop
inc
stos
in
data16
dec
cmp
pop
jo
incl
push
cld
mov
das
in
mov
dec
mov
jp
clc
jle
inc
sahf
or
xchg
mov
adc
mov
sbb
xchg
inc
clc
sbb
mov
aaa
mov
push
pushf
jl
and
mov
mov
mov
sub
and
xor
mov
sbb
jb
pop
inc
inc
in
nop
mov
inc
cmp
fcoml
push
xlat
inc
push
les
pop
mov
cmp
jge
mov
inc
imul
jbe
sbb
mov
sti
mov
sbb
pop
int3
pop
nop
push
mov
iret
and
push
dec
movsb
lds
into
movsb
xchg
mov
cmp
pop
sbb
popf
mov
pop
or
jnp
xor
sbb
sbb
cmpb
fmull
jge
test
dec
inc
and
or
mov
enter
pop
mov
in
xor
stc
inc
enter
cmp
cs
mov
jbe
xor
aam
push
iret
es
jg
xlat
mov
dec
jg
cmp
mov
jecxz
arpl
sbb
int3
int
aas
jbe
inc
xchg
inc
hlt
pop
popa
push
mov
movsb
xchg
leave
int3
pop
arpl
mov
inc
mov
and
cmc
icebp
pop
std
push
in
sub
sarb
xor
jle
icebp
adc
insb
aas
xchg
sbb
jne
xchg
mov
push
xchg
xchg
inc
pusha
pop
inc
pop
pop
inc
dec
push
loope
lods
aam
pop
inc
insl
mov
mov
pop
cmp
push
orb
clc
inc
outsb
dec
outsl
inc
mov
and
sahf
xchg
std
aad
rcrl
xchg
push
dec
jle
scas
dec
push
add
dec
cwtl
int3
mov
pop
cmp
pop
arpl
mov
int3
mov
aam
inc
mov
aam
mov
mov
jl
add
xchg
in
mov
lds
push
push
pushf
inc
popa
nop
xchg
jb
outsb
cmp
test
inc
and
sbb
dec
in
mov
mov
out
nop
and
adc
inc
xor
push
insb
pop
mov
pop
jl
in
dec
and
mov
outsl
push
inc
cmp
adc
les
dec
jae
aas
je
mov
inc
mov
mov
test
jge
xchg
and
jge
xchg
in
movb
jle
mov
mov
mov
push
andb
sub
bound
inc
xchg
inc
les
les
sub
pop
xorb
pushf
inc
jecxz
mov
daa
push
imul
inc
or
pusha
fs
and
sub
clc
repnz
mov
test
jmp
mov
inc
mov
inc
lea
pop
jns
fmull
out
mov
out
push
adc
cwtl
loope
or
jg
jp
lret
and
testl
bound
lods
fisubs
je
mov
shlb
sbb
loope
rcrb
sub
push
popa
dec
xchg
in
xchg
orb
dec
and
test
push
mov
lock
xchg
xor
mov
inc
add
pop
cmpb
or
or
repz
xchg
pushf
test
push
jbe
clc
test
sbb
cmp
pop
outsb
inc
aas
mov
in
in
and
ljmp
out
cmc
push
or
xchg
in
and
add
sti
sub
cmp
xchg
mov
inc
jnp
pop
pop
shll
sbb
cmpsb
cmp
dec
cli
lods
xor
and
test
pushf
or
or
xor
call
and
inc
pop
xchg
push
xchg
andb
xor
pushf
and
dec
xchg
js
mov
cs
stos
mov
cmp
push
cmp
mov
icebp
pop
jl
xchg
mov
mov
mov
rcrl
idivb
sbb
cmp
out
sub
mov
lds
jbe
sbb
xor
int3
cmp
movsl
mov
add
push
ds
nop
inc
in
cmp
xor
xor
push
and
mov
mov
inc
mov
dec
inc
lahf
ret
sahf
xchg
test
xchg
nop
cmp
mov
hlt
addl
dec
add
xlat
sbb
xchg
pop
in
inc
and
mov
and
dec
mov
push
popa
test
adc
js
mov
add
cmp
cmp
cld
push
daa
push
mov
testl
and
sahf
daa
mov
push
dec
add
sbb
out
jle
pop
ljmp
cwtl
stc
sbb
xor
dec
adcl
fnsave
xchg
jno
xchg
in
nop
test
pop
cli
sbb
jecxz
js
fwait
arpl
movsb
inc
xchg
stos
jbe
js
mov
bound
mov
arpl
cli
gs
movsb
adc
dec
pop
in
mov
ds
nop
popl
mov
mov
push
jp
xor
int
sbb
push
push
ss
xchg
aad
lds
push
fistpl
mov
xchg
jo
movsb
cmp
icebp
xchg
sahf
mov
jbe
and
nop
stos
lret
pop
lds
sub
dec
mov
push
shl
ss
push
xchg
inc
cmp
inc
into
mov
movsb
xchg
scas
sbb
mov
ret
js
xchg
lods
add
push
lahf
aaa
jno
dec
lcall
jbe
cmp
mov
icebp
lods
mov
cmp
push
lds
jb
push
sbb
cmp
mov
dec
popa
inc
adc
lcall
xchg
jns
cmp
or
aad
stos
pop
outsl
jg
arpl
movsl
or
subb
cwtl
mov
into
inc
ss
xor
outsl
das
imulb
sbb
push
pop
ss
sbb
xchg
lcall
jb
cmp
int
movsl
mov
cmpsl
or
mov
inc
test
faddl
shrl
inc
adc
push
jg
adc
and
xchg
clc
pop
nop
inc
gs
test
out
lret
xchg
dec
fcmovnu
rcl
cmp
mov
xor
inc
mov
xchg
pushf
nop
clc
and
popa
push
mov
xor
popf
cmpsl
dec
push
js
push
xchg
add
pop
dec
push
fimuls
sbb
jl
aam
push
enter
cmpl
in
cmp
jbe
loop
inc
in
mov
xchg
push
lcall
lcall
incb
test
dec
pushl
add
cmp
js
inc
mov
dec
add
adc
mov
jle
sbb
es
xchg
lcall
inc
ret
push
push
dec
pop
push
cmp
mov
xorb
cltd
pop
mov
movsb
add
cmp
rcrl
pop
cmp
xor
push
mov
lret
sbb
dec
test
mov
dec
mov
das
ficoml
adc
ja
push
dec
mov
push
push
cmp
push
vmovaps
jle
cwtl
arpl
pushf
rcl
jmp
mov
push
imul
iret
mov
ret
arpl
xchg
dec
cwtl
sbb
pop
int3
jb
nop
or
pop
sub
xchg
push
and
leave
pop
orb
arpl
out
pop
inc
mov
mov
and
lcall
xor
mov
push
xor
push
jge
or
inc
pop
fisubl
in
adcl
dec
xchg
cld
imul
nop
outsl
sub
xlat
or
rol
sbb
dec
inc
jp
pop
add
nop
ja
xchg
fwait
jle
xor
mov
mov
stos
test
xchg
push
ljmp
cmpb
xor
inc
outsb
mov
jne
mov
mov
push
adc
push
push
dec
cmp
jns
ret
inc
push
pop
and
cmpsb
and
push
sahf
js
imul
lods
rorl
xchg
xchg
mov
dec
inc
rcrl
sahf
scas
aam
lcall
nop
in
mov
jle
aaa
sub
subb
ja
mov
cwtl
mov
out
xchg
stos
inc
aas
in
and
dec
mov
cwtl
jle
popf
in
lret
adc
mov
lcall
xor
push
cwtl
xchg
jb
fidivrs
int3
ds
movsb
imul
push
cmp
mov
arpl
andb
adc
test
cmc
mov
push
stos
loop
xchg
shll
inc
pop
adc
and
mov
sub
movsb
xchg
mov
dec
or
outsl
scas
loop
inc
mov
orb
mov
xchg
push
xchg
lods
mov
jp
adc
cmpl
lea
cmp
repnz
mov
and
push
sub
test
jo
lcall
cmc
inc
inc
add
adc
xchg
push
mov
sbbb
fsubl
mov
jbe
mov
jle
movsb
cld
nop
push
rorb
dec
sarb
movsb
inc
mov
mov
jo
incl
subb
stc
in
and
rcrb
ret
mov
mov
pop
enter
inc
bound
fcmovnu
dec
int3
stos
mov
xchg
adc
ljmp
int3
mov
mov
cmpl
aas
mov
gs
inc
push
jns
lds
dec
inc
xchg
ljmp
jbe
rclb
inc
pop
lret
fidivl
sbb
cmpsl
out
cwtl
mov
arpl
int
jmp
icebp
inc
dec
nop
dec
mov
xchg
pop
mov
inc
and
aaa
rorl
inc
mov
in
adc
std
cmp
dec
in
fimuls
pop
sbbb
outsb
scas
into
xor
push
mov
inc
mov
out
jo
mov
adcb
or
rcrl
inc
dec
cmp
xchg
jb
hlt
popa
xchg
data16
dec
inc
sub
jle
or
mov
sbb
aas
cmp
repz
push
sbb
mov
imul
mov
cmp
jo
rolb
dec
push
or
jg
inc
ss
cli
jle
or
fsubs
inc
mov
mov
sbb
movsb
sbb
fisubs
rclb
sahf
mov
xchg
pop
mov
ljmp
mov
xchg
mov
sbb
mov
arpl
lahf
cmp
or
mov
movsl
cmp
dec
cmpsl
orb
adc
jg
mov
imul
pop
fstps
orb
movsb
inc
orb
hlt
push
mov
shlb
push
inc
push
mov
jl
adc
sahf
inc
sub
inc
adc
dec
test
mov
mov
mov
mov
arpl
jg
rorb
xchg
sbb
cli
or
loope
cmp
cltd
dec
testl
and
rcrl
in
cltd
out
push
aad
lods
xchg
xor
and
outsl
pusha
sbb
jp
cmc
inc
mov
xchg
inc
lds
add
dec
insb
mov
cmp
stos
sbb
lcall
add
cmpsl
loopne
jo
xchg
sahf
pop
cmpsb
fwait
addb
nop
movsb
or
jbe
mov
insl
push
es
pop
dec
call
adc
call
adcl
sbb
aad
lds
mov
out
fwait
jecxz
mov
mov
and
mov
in
or
jp
fbld
adc
jle
out
sub
mov
mov
jbe
rcrb
mov
imul
pop
xchg
jbe
mov
dec
rolb
add
jnp
or
cld
scas
iret
fdivrl
shlb
add
xor
in
shlb
iret
mov
pop
pop
inc
mov
add
pop
dec
imul
out
xor
xchg
and
dec
fiaddl
push
fldcw
imul
pop
sbb
jl
add
pop
sahf
test
jbe
push
addr16
mov
jecxz
inc
into
ja
icebp
pop
scas
push
cs
dec
pop
lea
or
dec
mov
jmp
xlat
ss
push
jl
and
dec
imul
cltd
loop
nop
mov
and
mov
lcall
jb
xchg
and
pusha
inc
sbbl
pop
std
into
gs
sahf
sbb
pushf
mov
pop
inc
jle
sbb
xchg
jbe
mov
movsl
xor
mov
push
in
jbe
movsb
push
aad
dec
and
cmp
xchg
pop
test
lcall
and
gs
xchg
aad
in
jo
fidivl
dec
in
fisubrl
sarb
movsl
addb
test
jp
inc
in
popa
xchg
in
xorb
sbb
mov
dec
add
dec
push
push
jp
jp
inc
ficomps
sahf
aam
sbb
repz
int3
faddl
mov
js
retw
pop
pop
popa
sbb
mov
mov
dec
xor
sahf
repz
inc
in
in
sub
jg
movsb
mov
mov
mov
xchg
jl
loop
shrb
pop
adc
mov
fcoml
cmpsb
aaa
inc
js
add
push
lods
push
ja
xchg
jne
mov
es
inc
jb
divl
cmpsl
dec
inc
dec
adc
xor
push
xchg
in
mov
ljmp
ss
movsb
adc
into
arpl
ret
mov
cmpsb
out
push
jo
push
pop
dec
xchg
or
inc
outsb
inc
mov
pop
dec
inc
cmp
cld
ret
test
mov
sbb
leave
rcrl
xor
adc
daa
mov
dec
push
nop
mov
pop
push
gs
mov
mov
mov
cmp
push
lcall
inc
mov
inc
and
dec
dec
cmp
xchg
sahf
xchg
and
sahf
jle
xchg
sbb
dec
xchg
pop
pop
cmp
ret
push
inc
lahf
mov
jp
std
pop
mov
xchg
inc
mov
movsl
inc
cmp
push
mov
sub
test
arpl
or
lods
loopne
mov
add
pushf
push
cmp
inc
xorb
mov
inc
ret
inc
push
popa
xchg
mov
imul
outsl
movsl
int3
test
orl
gs
aad
ljmp
in
in
lds
push
dec
movsl
xchg
mov
test
xor
adc
xchg
orb
fwait
jge
jno
pop
out
sahf
lds
jl
mov
mov
lock
cli
sbb
mov
insl
mov
lcall
add
push
inc
jge
mov
pushf
push
iret
xchg
mov
jg
js
push
ss
cli
mov
into
popa
push
ret
jb
in
jo
shlb
cmp
or
outsl
jge
inc
test
inc
or
roll
in
sbb
mov
ja
das
ss
cmp
push
movsb
xchg
dec
cmp
mov
into
or
ret
dec
jp
push
or
shll
fcoml
mov
or
mov
inc
jo
add
xor
das
ds
outsb
repnz
jg
fdivrl
xchg
xchg
pop
mov
adc
push
xchg
out
mov
data16
inc
pop
and
or
xchg
pop
ret
test
cmp
mov
and
cli
dec
xchg
xorb
popa
cmp
mov
ljmp
mov
push
int
push
sahf
outsb
mov
sbb
rdpmc
mov
cmp
scas
mov
push
push
jp
pop
mov
sub
ret
arpl
adc
dec
rolb
testb
jo
cmp
test
jp
mov
add
or
test
pop
movsb
rcl
xchg
rorb
outsb
out
lock
addb
xchg
movsl
push
pop
nop
or
or
sub
sbb
xor
push
and
cmp
sbb
pop
and
mov
xor
loop
int3
or
cmp
call
jl
mov
xchg
push
mov
shl
sarb
or
stc
fdivrl
cwtl
xchg
hlt
xor
imul
test
mov
sub
jb
push
nop
push
mov
lock
and
orb
pop
pop
jbe
stos
or
sahf
int3
daa
xchg
adc
push
leave
push
inc
out
pop
jne
and
dec
cwtl
add
pop
xor
mov
sub
cmpsl
inc
dec
pop
jbe,pt
inc
cmp
cmp
es
mov
sbb
push
sahf
pushf
mov
ss
cmp
cmp
inc
pushf
mov
je
notl
xchg
fcmovnb
scas
mov
inc
xchg
jge
int
dec
push
jbe
dec
stc
jb
xchg
movsb
lods
add
push
cmp
nop
pop
pop
push
insl
mov
sbb
push
pop
push
sub
ljmp
int3
shr
sbb
mov
lret
or
inc
jbe
cmp
push
mov
pop
jp
bound
push
xchg
stos
addr16
fdivp
into
inc
fisubs
or
cmp
in
mov
sub
mov
sub
adc
ret
inc
dec
cwtl
jecxz,pt
lcall
inc
testb
jae
out
and
sbb
xchg
inc
shlb
and
and
ds
and
cmp
jl
jo
rcll
push
inc
je
sub
cmp
push
inc
sub
pop
cmp
in
cwtl
jbe
faddp
jnp
cmp
push
mov
into
push
mov
mov
test
shll
push
sub
cmc
xor
int3
xchg
push
or
dec
mov
push
sbb
and
cmp
push
clc
inc
sbb
push
lods
movsb
jb
jg
test
js,pt
arpl
cmp
pop
adc
in
fdivp
sti
aad
ja
jmp
pop
lcall
push
sbb
mov
or
repz
scas
jle
int3
mov
and
testb
cmp
sub
pop
mov
popa
and
inc
unpcklps
fdivrl
jb
inc
adc
loop
mov
fs
adc
cmp
and
mov
mov
sbb
and
or
into
mov
sbb
add
xchg
lcall
lret
popf
ficoms
aam
pop
movsb
shl
and
sbb
jp
inc
jg
mov
cmp
dec
cmp
insl
iret
fwait
lret
ljmp
push
lcall
mov
ss
scas
lahf
iret
movsb
mov
xchg
add
xchg
ficompl
popf
stos
push
loop
cmp
loop
in
loop
mov
cli
stos
xchg
fcmovne
push
ds
adc
sbb
add
dec
jbe
adc
jns
stos
imul
cmpsb
push
xchg
mov
push
cmp
in
xchg
xor
cmc
xchg
jle
idivb
or
outsl
addb
push
push
insl
adc
mov
cli
xchg
mov
or
pushf
movsl
dec
and
xor
arpl
or
shrb
mov
jns
and
pop
push
jno
inc
gs
jb
lock
xchg
cmp
mov
orb
adc
xor
adcl
ret
nop
pushf
movsb
pop
jp
adc
mov
fcmovnu
sub
jo
neg
push
test
ret
push
arpl
xchg
pop
fwait
push
stos
ds
subb
jle
mov
ljmp
les
cmp
xor
pop
movsb
js
push
mov
inc
fists
add
jle
aaa
and
mov
mov
and
jmp
outsb
jb
mov
mov
jle
nop
inc
dec
ss
ja
lret
nop
jbe
in
aam
and
push
lret
adcb
and
out
dec
bound
push
adc
in
daa
inc
pop
lret
push
mov
and
pop
dec
jle
out
mov
mov
add
mov
pop
aas
sub
mov
lds
or
aaa
movl
xchg
jmp
in
or
cmp
mov
rorl
bound
rorl
aad
add
gs
popa
test
xchg
pop
inc
pushf
push
pop
movsl
xchg
cmp
inc
loope
or
xor
push
xchg
sbb
je
fisttpll
and
push
test
es
pop
inc
xchg
jb
dec
xchg
fistps
pop
dec
dec
mov
add
jns
cwtl
dec
push
dec
mov
add
xor
sbb
cmc
add
push
je
data16
orb
push
mov
aam
inc
sub
dec
push
adc
inc
jbe
js
in
arpl
cmp
and
mov
mov
outsb
test
and
ja
push
jb
mov
and
push
pop
cwtl
movsb
aam
push
mov
xchg
pop
xor
push
and
xchg
jl
mov
inc
imulb
andb
js
xchg
cwtl
xor
mov
sbb
mov
sub
leave
out
or
loop
xchg
adc
inc
jle
jbe
inc
push
pop
mov
ret
inc
jo
jle
push
inc
jp
and
jne
jl
sub
jo
xchg
and
test
mov
jl
stos
mov
mov
pop
gs
pop
push
jge
mov
push
mov
sbb
add
into
mov
and
pop
sub
xchg
iret
pop
xchg
push
lret
std
dec
mov
cmpsl
cmp
sahf
jp
ss
scas
lret
inc
jle
cmp
cmpsl
mov
push
inc
xor
rcrb
dec
push
cmp
test
mov
jo
push
xor
push
cwtl
lret
cmp
xchg
imul
fs
pop
in
std
in
loop
int3
add
inc
inc
pcmpgtw
loop
inc
ss
push
pop
push
mov
shl
nop
jbe
imul
pop
aad
add
pushf
aam
cmp
mov
mov
jge
sbb
aam
xorb
les
pushf
add
sbb
mov
jl
sub
mov
sahf
or
fldl
cmc
push
push
imul
pop
mov
and
dec
js
out
mov
fnstsw
xorb
inc
adc
jmp
lret
mov
add
push
addb
mov
push
aad
subb
pop
data16
add
pop
mov
push
ja
loop
mov
dec
push
sahf
xorb
sbbb
mov
jo
or
jmp
jo
ds
xchg
dec
test
adc
mov
inc
dec
pop
push
xchg
or
movsb
and
ljmp
xchg
pop
or
add
xchg
ss
mov
call
lcall
movsb
mov
cli
stos
clc
pop
mov
ret
inc
dec
push
pop
sbb
leave
out
bound
stos
jp
test
mov
pop
mov
push
imul
sbb
xchg
movsb
push
idivl
shrb
push
dec
sahf
test
decl
pop
jle
pop
inc
in
nop
jo
and
in
xchg
push
mov
shl
adc
jp
push
out
cs
rclb
push
out
jb
in
mov
and
xchg
cmp
pop
mov
xor
addb
pop
mov
popa
lcall
dec
push
lds
in
rcll
int3
sbb
mov
cmp
xchg
cmp
scas
inc
add
popf
ficoml
roll
pop
pop
push
dec
dec
stos
je
mov
lret
ret
cmp
sub
pop
sahf
stos
out
js
push
mov
pushf
push
cli
xchg
in
sahf
cmp
sbb
adc
mov
jo
mov
push
imulb
inc
mov
pushf
push
inc
and
sahf
or
dec
lds
push
inc
push
and
xchg
mov
jae
rclb
push
sahf
es
ds
and
inc
lods
xor
dec
add
inc
mov
mov
sbb
rorb
lds
cmp
int
inc
jae
jb
cli
push
test
pop
popa
sahf
and
xchg
mov
pop
sub
mov
sub
jno
fimull
jp
xor
sub
xchg
arpl
push
mov
dec
repz
scas
test
add
push
jle
xchg
int3
movsb
adc
dec
cmpsl
jle
adc
push
dec
aad
cmpsb
insb
inc
popa
mov
and
xor
inc
jl
cwtl
and
in
xchg
adc
fsubs
out
mov
xor
popa
inc
push
inc
xchg
incl
adc
cmp
test
xchg
mov
inc
or
in
jbe
mov
mov
test
popf
push
add
push
lret
inc
mov
xchg
stc
jns
scas
dec
push
clc
mov
mov
cmpb
mov
mov
sbb
push
and
lcall
add
stos
outsb
fisttps
cmpsl
mov
sbb
aad
sahf
cwtl
cmp
bound
aas
sbbl
clc
inc
adcl
ficoml
iret
cli
push
sub
js
mov
inc
pop
xchg
call
mov
lods
adc
dec
add
xor
inc
inc
int3
pop
ret
jbe
and
movsl
and
dec
std
lret
in
arpl
ficoml
add
xor
test
push
insb
jge
mov
dec
pop
jl
jp
shlb
pop
pop
mov
push
cld
dec
pop
aas
push
mov
xlat
xchg
push
xchg
pop
loop
mov
ljmp
imul
aam
xchg
push
shll
cmp
movb
mov
push
push
fldcw
scas
nop
ss
fisubl
mov
incl
push
jbe,pt
in
loope
sub
xor
pop
out
ss
sbb
push
or
rcrl
jp
pop
mov
sbb
fs
or
mov
lds
lds
jl
inc
or
cmp
js
push
sbb
add
adc
cld
nop
jo
xchg
rorb
mov
mov
test
movsl
jo
jno
xchg
xchg
rclb
stos
lods
sub
rcrb
in
leave
cwtl
mov
shrl
inc
aaa
mov
stos
and
adc
nop
cmp
xchg
rcl
ss
xchg
push
imul
cmp
xchg
push
jnp
int3
lcall
sarb
mov
dec
lret
ds
xor
nop
mov
adc
and
js
popa
dec
repz
cli
nop
sbb
imul
inc
ljmp
mov
aam
push
mov
js
lcall
pop
mov
xchg
jl
inc
outsb
push
jg
pop
cmp
ret
scas
xchg
jo
xchg
and
ds
push
les
jl
test
repnz
rolb
push
mov
inc
xor
cmp
sub
cmp
popf
stos
ret
or
lds
dec
pop
cli
in
dec
shrl
jb
out
cmp
xchg
nop
js
std
roll
iret
and
arpl
daa
les
jp
xchg
push
mov
mov
lcall
pop
jge
adc
inc
xlat
pop
inc
add
mov
xchg
mov
ljmp
lcall
pop
mov
inc
inc
sahf
inc
ds
sub
jo
cmp
dec
or
push
pop
mov
cmp
xchg
adc
cwtl
mov
mov
or
test
scas
sahf
push
mov
js
push
ja
push
movsb
test
pop
mov
iret
popl
pop
inc
inc
or
mov
test
jb
lret
sub
or
notb
push
jp
mov
fcoml
add
out
jle
add
inc
shl
add
js
inc
aaa
sbb
aad
mov
mov
popa
dec
rcrl
loope
xchg
aad
jb
aam
mov
das
xor
push
push
or
inc
push
daa
popa
push
stc
cmpsb
aam
push
mov
lock
inc
daa
outsl
xor
loope
in
sbb
ds
ja
cs
inc
mov
mov
push
in
add
push
sbb
lret
and
ret
push
mov
push
jg
jl
and
pushf
sub
mov
pop
sahf
push
jle
cmp
out
dec
xlat
mov
inc
inc
push
mov
xchg
mov
xchg
pushf
lds
adc
or
lds
push
insb
cmp
pop
sahf
lcall
and
leave
sbb
mov
jbe
dec
ss
mov
mov
inc
and
mov
dec
incl
mov
cs
aam
push
lahf
ss
insb
iret
out
pushf
cmpsb
push
jle
xchg
or
mov
xor
xor
daa
xchg
push
xchg
movsb
lods
ds
inc
dec
and
jno
scas
es
push
cmp
xchg
jb
or
xchg
add
aad
ljmp
dec
jg
push
lds
cmp
adc
ficomps
xchg
sub
push
push
idiv
or
dec
dec
ljmp
aas
or
out
nop
aad
int3
push
cmp
mov
pushf
fs
nop
test
xor
sbb
xchg
sub
arpl
cwtl
cmp
stc
aad
mov
jb
movsl
adc
mov
dec
sub
into
nop
mov
dec
and
dec
loop
push
mov
andb
mov
push
int3
mov
inc
fs
ret
test
add
or
mov
pop
jle
addb
mov
inc
in
mov
push
mov
out
lcall
mov
nop
jo
test
ret
mov
sbbb
add
je
inc
and
pop
push
sbb
aaa
push
fidivl
xor
lret
xchg
sub
push
out
cmp
sub
insb
inc
cs
jb
shll
sub
setbe
data16
xchg
xchg
push
test
jbe
lcall
push
cmp
cmpb
cwtl
ds
xchg
xor
lods
pop
mov
or
xchg
ret
aas
mov
shlb
mov
stc
xor
xorl
cmp
push
inc
xchg
roll
cmp
push
data16
mov
and
out
pop
mov
xor
cli
in
jb
lret
xor
jp
xchg
andb
lods
or
mov
ds
out
cmp
idivb
push
sbb
mov
shlb
and
xor
pop
and
xlat
jmp
pop
ret
inc
js
inc
loope
cmpb
insb
adc
mov
mov
incb
lock
ss
sbb
shlb
nop
sub
test
pushf
cmp
ret
jbe
dec
xchg
and
mov
aam
xchg
push
mov
mov
test
or
mov
push
push
add
pushf
or
lds
shlb
mov
cld
mov
jl
addb
jp
lcall
in
push
cmpsl
dec
pushf
lcall
outsl
sti
sahf
mov
cli
and
mov
pop
xchg
inc
inc
adcl
ss
mov
xchg
add
add
insl
aad
ljmp
dec
dec
xchg
stos
jle
push
ds
sbb
pop
or
in
aaa
mov
inc
jl
ss
pop
dec
int3
stos
sbb
mov
jb
mov
js
pop
insl
xor
rclb
movsl
ficompl
dec
pop
pushf
jmp
xlat
inc
sahf
sbb
dec
jne
cmp
lret
mov
cmp
call
and
dec
ja
lds
inc
inc
xlat
and
mov
mov
cmp
ss
stos
ret
and
jmp
push
es
inc
jle
aam
ret
pusha
jo
andl
aaa
adc
cli
mov
sub
jp
xor
or
inc
xchg
sub
sahf
push
test
mov
xchg
sbbb
and
cmc
pushf
lret
enter
or
push
int3
push
loop
cmpsl
cmp
dec
inc
inc
and
dec
mov
mov
cwtl
mov
mov
cmp
sbb
inc
outsb
push
mov
inc
mov
fwait
in
pushf
mov
adc
cli
into
les
jo
ds
inc
cltd
push
fbld
shlb
sbb
insb
rorl
push
xlat
mov
test
jle
dec
cmp
sub
jbe
xor
sar
xchg
xchg
pop
out
mov
inc
mov
add
xchg
and
in
mov
mov
inc
test
lds
and
and
movsb
in
sbb
jb
cmp
ss
mov
mov
bound
popa
ss
jle
xor
push
pushf
dec
dec
push
cs
test
mov
inc
mov
jns
sarb
enter
add
inc
pop
cmpsl
out
mov
inc
pop
stos
push
ja
xchg
movsb
dec
push
push
add
call
xchg
addb
inc
hlt
sbb
sahf
mov
mov
jns
stos
cmc
les
push
push
sub
jbe
mov
and
mov
cmpsl
mov
inc
pop
push
jae
dec
pop
call
push
inc
xchg
call
push
cwtl
test
mov
clc
inc
or
imul
inc
xchg
inc
mov
cmp
dec
cs
cmpsb
cmp
cld
pop
ds
adcl
stos
js
aas
jl
adc
in
cli
inc
sbb
int3
nop
xchg
iret
in
aam
dec
shr
insb
int3
and
xchg
mov
rolb
xor
inc
mov
and
mov
sbb
and
push
adc
lds
fcompl
mov
lahf
cmp
xchg
ds
cwtl
adcb
pushf
push
int
cmp
xchg
test
mov
adc
xor
pop
mov
test
xchg
and
xchg
es
in
push
ja
pop
xchg
sbb
dec
pop
push
inc
pop
inc
pushf
push
inc
adcb
xchg
dec
push
outsb
mov
js
and
icebp
sbb
inc
cmp
adc
and
mov
or
sbb
dec
push
test
lret
mov
xor
inc
and
pop
shlb
outsl
inc
testb
popa
adc
sbb
mov
cwtl
out
roll
test
lcall
sub
fistpl
stc
or
mov
test
into
inc
and
sbb
mov
mov
ret
inc
nop
mov
fcoml
xchg
and
aam
test
or
in
in
push
xchg
shlb
sahf
push
mov
mov
pop
gs
sahf
idivl
xor
nop
cli
and
daa
mov
popa
mov
push
inc
ret
sahf
andb
adc
scas
jp
dec
adcb
pop
or
dec
and
cmp
mov
les
dec
daa
popa
xchg
in
cmpsl
shld
dec
lock
and
nop
add
xchg
or
sahf
mov
es
push
push
mov
jle
shrb
and
add
ret
pop
add
mov
mov
inc
in
xor
in
jp
xorb
sahf
mov
adc
dec
mov
jg
popf
ds
pushf
movsb
cmp
xchg
inc
imul
dec
test
and
push
add
mov
pop
jle
test
call
sub
popa
out
jp
sbb
and
divb
arpl
or
popa
lods
test
cmp
xor
push
dec
mov
rcr
sbb
sub
jmp
pop
push
inc
fistpl
loop
mov
pop
mov
push
jge
push
lret
int
pop
mov
inc
cmp
mov
cmpsb
repz
add
cmpsb
or
jge
jae
imul
imul
cmp
xchg
cmp
imul
les
mov
sbb
pop
push
aaa
gs
movsb
aam
xchg
mov
sti
jns
cmp
and
add
sbb
std
outsb
mov
push
dec
jle
pop
test
push
decb
stos
cli
pop
mov
popa
in
jge
push
lcall
xchg
in
push
push
mov
shrl
mov
les
xchg
xchg
inc
add
and
cmp
shlb
and
push
mov
popa
int3
jg
movl
mov
or
inc
fst
dec
mov
push
mov
or
and
lret
dec
inc
imul
jl
cmpsl
mov
xchg
xchg
xchg
ss
into
sbb
sahf
mov
push
mov
pop
sbb
jb
jl
mov
and
iret
or
out
in
out
sbb
mov
mov
push
aad
vpmullw
push
and
sbb
mov
and
mov
push
movsb
add
in
jo
inc
adc
adc
xchg
aas
mov
push
iret
push
shlb
clc
xchg
andl
cmp
cmc
fwait
inc
or
into
sub
inc
test
aam
push
inc
inc
fistl
gs
jno
je
jae
mov
pop
jle
push
inc
aaa
jbe
fstpl
push
addl
jg
xchg
pushf
mov
sarl
mov
or
xchg
add
fsubp
xor
inc
sbb
mov
jmp
jmp
mov
lea
xorb
or
xchg
sahf
and
inc
and
mov
mov
subb
dec
sbb
fistl
cmpb
adc
inc
jbe
xchg
mov
data16
adc
and
in
adc
push
mov
lea
pop
push
adc
icebp
test
lahf
aad
xor
mov
and
or
push
push
xchg
decl
xchg
adc
mov
inc
dec
mov
mov
mov
jb
push
ss
jbe
in
push
jp
jno
adc
inc
mov
sbb
mov
dec
inc
and
and
cmp
xchg
dec
pop
xor
cmp
and
iret
mov
push
sahf
inc
movsb
mov
bound
dec
or
mov
mov
push
inc
movsb
in
push
sbb
sub
add
push
inc
cmp
dec
push
sahf
cmp
push
inc
and
mov
xchg
sub
in
fmulp
sbb
sbb
movsb
je,pn
rorb
jbe
xchg
push
mov
ret
pop
sbb
ret
xchg
or
and
push
shlb
ds
xor
neg
xchg
lea
xchg
jns
imul
jb
aam
mov
inc
repnz
lret
pop
or
insl
jl
mov
lds
xor
mov
ds
add
pushf
lds
aad
or
xchg
dec
fsubrp
loope
xlat
xchg
push
sbb
or
stc
imul
adc
ss
loop
push
pop
fdivp
test
mov
xchg
push
jle
adcb
xchg
jbe
or
add
and
nop
gs
inc
dec
inc
test
nop
pusha
pop
ja
push
add
iret
cli
shll
lea
xchg
push
aad
dec
inc
imul
adc
cwtl
xchg
call
push
arpl
xor
jl
mov
xchg
les
js
and
inc
cmpsl
arpl
push
nop
adc
xor
and
push
lcall
pop
in
aam
rorb
mov
dec
sar
inc
push
inc
dec
cmp
mov
out
movb
iret
pop
push
cmp
test
xchg
movsb
mov
rcll
mov
push
inc
mov
lcall
push
mov
cld
jle
xchg
jg
inc
negb
jl
lds
out
js
xchg
xor
jbe
jns
jl
mov
xchg
mov
cmp
dec
out
pop
dec
pushf
xchg
adc
in
out
pop
jg
dec
xor
ds
mov
or
pop
in
loop
sub
stos
ret
in
jle
xchg
orl
push
mov
or
dec
cmpsb
mov
jno
sub
arpl
sbb
xchg
mov
aam
scas
add
lahf
cmp
push
inc
push
mov
add
fwait
xchg
push
scas
add
stos
inc
mov
cli
and
xchg
nop
outsb
mov
push
dec
sub
ficompl
fidivs
lods
dec
scas
push
shlb
jo
or
sbb
cwtl
pop
pushf
in
and
lods
cmc
mov
pop
sbb
icebp
xchg
pop
shl
lcall
stc
sbb
ror
cmpsl
aas
inc
mov
xchg
push
pop
in
and
jo
adc
inc
pop
shrb
xchg
mov
mov
ret
inc
pop
arpl
push
pop
dec
sarb
dec
mov
inc
mov
mov
ljmp
mov
sahf
es
pop
jle
out
mov
push
nop
out
lcall
in
xchg
cwtl
push
pop
mov
jmp
std
arpl
fstps
ds
jo
cmc
lcall
cmp
out
lcall
lret
and
dec
inc
and
insb
jl
cwtl
outsb
iret
fcompl
pop
stos
aas
out
push
mov
jo
pop
adc
push
test
xor
sbb
cmp
cmpsb
push
inc
sbb
loop
push
jl
cmpsl
es
push
mov
and
inc
jbe
adc
adc
lahf
add
shl
dec
fwait
inc
jb
addb
leave
in
inc
aad
aad
addb
lcall
cmpsl
pusha
push
jb
inc
adc
inc
push
sahf
popa
xchg
jp
pushf
cmpl
cmpsl
dec
mov
push
xchg
pop
cmp
mov
mov
mov
popa
inc
cmpb
mov
cmp
mov
loop
aas
adc
and
popa
xchg
sbb
xchg
mov
pop
stos
cmp
sbb
int3
movsb
inc
ss
inc
orb
xor
jnp
and
mov
mov
outsl
movsb
xor
jl
rcrb
mov
ret
shrb
js
imul
ds
cmp
pop
or
outsb
lcall
ret
inc
mov
and
sbb
loop
xor
pop
popa
xor
jae
loope
xchg
and
nop
pop
sti
popf
popa
pushf
lds
xchg
sbb
jl
inc
ss
add
aaa
dec
ss
mov
rolb
mov
inc
ss
fwait
dec
xchg
into
mov
dec
adc
jb
and
ss
sbb
add
mov
or
xchg
push
fst
ret
inc
es
push
sbb
pushf
mov
cltd
lds
xor
addb
pop
rorb
pop
jno
lods
loop
lret
sti
cmp
mov
mov
jle
ret
xorl
push
cmpl
push
dec
mov
pop
sahf
outsl
shlb
dec
cmp
jb
push
testb
and
adc
dec
mov
movsl
shl
int3
cld
out
cwtl
mov
jbe
mov
out
inc
add
shl
push
xchg
out
arpl
cwtl
sbb
in
pop
int3
push
mov
fwait
jge
insb
or
mov
and
scas
push
int
mov
cmc
dec
xchg
inc
sbb
aad
sahf
pop
int
xor
data16
inc
ss
insb
pop
in
add
hlt
subb
dec
lret
inc
fs
dec
mov
xchg
js
ret
mov
push
es
push
arpl
jl
inc
cmp
xlat
push
fisttpl
loopne
mov
mov
adc
inc
adc
pop
lcall
mov
mov
shlb
cli
mov
fidivs
ljmp
leave
test
pushf
andb
data16
cmp
pushf
inc
mov
jp
pop
out
mov
mov
loopne
inc
jp
movsb
sbb
or
jle
xchg
icebp
sub
ficompl
jbe
shl
mov
aam
and
cmp
fidivrl
jne
rcrl
call
cs
mov
push
lcall
jo
mov
pop
mov
fptan
mov
add
cmp
inc
ja
movsb
push
dec
fwait
pop
lods
add
movsl
ficoml
sbb
xchg
jl
cmp
pushf
pop
push
jae
mov
lcall
cmp
pop
xchg
fcompl
xchg
sbb
inc
cmp
in
xchg
aas
in
and
jle
xor
jmp
popa
ds
pop
adcl
mov
jnp
lcall
data16
cwtl
lcall
add
xchg
push
mov
mov
das
pop
mov
ret
imul
gs
inc
adc
mov
repnz
xor
push
in
outsb
inc
jbe
push
rcrb
in
mov
jae
outsl
movsl
mov
xorb
sbb
push
xchg
das
or
jge
jae
ror
sbb
sbb
leave
mov
push
in
jo
pop
andb
stos
pop
ljmp
push
cltd
ficompl
push
inc
dec
jp
addb
js
out
cmp
popa
movsb
test
cmpb
gs
push
pop
ss
ljmp
int
imul
or
sbb
imul
and
and
fnsave
stos
mov
mov
in
jnp
sub
xchg
mov
pushf
dec
inc
sub
mov
icebp
dec
popa
push
imul
rcl
pop
mov
and
inc
jb
dec
or
add
fists
push
add
add
push
inc
jle
push
sti
push
lcall
and
sbb
add
mov
push
and
inc
inc
les
pop
into
xor
push
nop
test
xchg
jl
pop
sbb
add
es
lcall
es
cmp
sahf
pop
and
call
lahf
fwait
xor
aad
add
push
imul
icebp
andb
mov
fwait
dec
xlat
inc
pop
push
jmp
jne
into
jb
pop
pushf
clc
test
adcl
lds
ds
adc
ss
data16
xor
sub
mov
push
mov
lds
push
ret
xor
test
push
daa
int3
adc
xchg
sub
dec
lods
mov
aad
fiadds
push
mov
jb
sbbb
call
or
adc
inc
js
add
orb
sub
shll
mov
mov
sbb
jge
outsl
sbb
and
fcoms
nop
shlb
inc
shrb
inc
inc
aad
outsb
pop
aas
jb
data16
mov
add
and
push
pop
dec
lds
arpl
cmp
iret
dec
mov
lods
and
imul
inc
cmp
xchg
inc
dec
cmpsb
push
stos
pop
repnz
push
push
popl
xorb
shll
or
mov
movsl
xchg
dec
jae
popa
pop
push
int3
setl
mov
bound
and
sbb
ja
sub
jmp
lds
iret
es
sub
lods
inc
push
push
adc
or
jo
cmp
cli
mov
outsb
in
cmpsl
ficoms
xchg
push
mov
gs
dec
fcmovne
jle
aam
test
cmp
lcall
xor
mov
sub
mov
sarb
or
arpl
popa
jle
fwait
xchg
aad
loop
jb
adc
fidivrl
dec
mov
lea
cmpsb
ja
push
dec
test
push
inc
jae
inc
push
enter
jbe
fmull
addb
int3
and
nop
jbe
pop
mov
rorl
fwait
cmpsl
xchg
and
or
movsl
cmp
adc
jbe
mov
sbb
movsb
push
sub
cmp
cmp
inc
call
inc
ja
and
cmp
dec
in
fisubs
inc
mov
fmull
add
cmpsb
push
jp
push
dec
ljmp
mov
xchg
loope
inc
sub
popa
and
ds
icebp
cmp
xor
lret
inc
jmp
fbld
in
in
push
adc
cmp
mov
xchg
jb
push
adc
inc
xchg
and
sbb
lods
push
scas
mov
push
mov
call
and
xchg
orb
xor
mov
xchg
jp
insb
jnp
mov
jno
mov
fimull
rolb
test
scas
mov
inc
xchg
xchg
sbb
sbb
xchg
xchg
cmpsl
out
test
push
ss
lods
into
testl
pop
cwtl
mov
pop
mov
andl
or
in
leave
jo
or
mov
aam
inc
popa
mov
or
pop
scas
add
faddl
out
dec
sub
inc
jb
sbb
lods
push
inc
into
pop
in
sbb
lret
push
orb
decb
in
mov
outsb
andb
mov
dec
or
dec
push
sbb
and
pop
arpl
cmp
lret
xchg
cmp
cmc
shll
mov
mov
and
test
aam
push
scas
inc
push
mov
nop
cmp
mov
dec
mov
arpl
dec
inc
push
ret
inc
or
mov
push
movsb
dec
push
mov
icebp
cmpsb
xchg
ss
stos
or
test
jbe
dec
mull
inc
js
xchg
jo
mov
push
push
fwait
repnz
and
call
in
mov
aas
jle
push
cmp
push
addb
shll
inc
cwtl
inc
aad
sbb
fsubl
xor
push
push
inc
inc
inc
push
das
push
xchg
out
inc
xchg
test
jp
inc
test
ret
pop
nop
and
pop
dec
aaa
cmp
push
orb
and
push
cmc
xor
sbb
inc
ss
int3
xchg
inc
dec
andb
jb
cmpsb
mov
push
pop
sub
in
inc
mov
ss
fidivrl
rcrb
or
push
mov
inc
into
pop
push
cmp
inc
mov
inc
sbb
inc
xchg
jnp
out
mov
mov
cs
mov
jl
mov
or
sbb
arpl
int
dec
jbe
mov
pop
push
jbe
and
mov
jb
lcall
popa
movb
jg
add
fstpt
loop
jbe
cmp
out
aas
push
push
mov
pop
aad
fwait
jle
lcall
inc
addb
pop
mov
cmp
in
ss
xor
mov
jno
and
dec
dec
push
push
lods
mov
push
xchg
xchg
andl
popf
lahf
xor
adc
inc
popa
jl
call
sahf
add
imul
jmp
xor
and
mov
test
xchg
dec
out
jp
xchg
or
lods
and
inc
push
add
insb
xchg
lcall
mov
mov
dec
mov
in
movsl
rclb
jle
mov
lds
sbbb
xchg
xchg
loop
mov
pop
cmp
insb
lret
js
shl
push
mov
or
xchg
arpl
jmp
daa
aas
lahf
sbb
dec
lcall
sub
out
sbb
xchg
popl
add
xchg
js
add
xchg
push
xchg
shl
add
dec
sbb
cmp
aas
bound
push
hlt
xchg
inc
fimuls
inc
cli
and
cs
pop
loope
xor
push
out
ja
adcb
movb
xchg
movsb
push
popa
cmp
and
push
pop
xchg
push
mov
popa
test
push
push
shrl
andb
flds
xor
mov
sti
nop
aaa
sbbb
mov
mov
push
inc
inc
add
aas
pop
inc
adc
mov
and
divl
push
notl
lcall
lret
mov
xchg
or
push
push
int3
or
idivl
jb
stos
in
pop
inc
jb
inc
insb
aas
mov
pop
mov
adc
stos
adc
cmp
in
inc
and
and
push
dec
ds
gs
dec
ss
cmp
mov
outsl
xor
push
jo
mov
or
jl,pt
in
es
dec
mov
mov
loop
pop
ss
and
and
mov
dec
mov
gs
push
adc
ds
mov
xchg
dec
arpl
enter
cmpsb
je
cmp
aad
jne
mov
push
dec
mov
inc
pop
inc
add
inc
mov
push
ss
call
xor
andb
sub
jl
mov
fucom
inc
rcr
sbbb
pushf
outsb
pusha
mov
push
into
inc
fs
in
aam
popa
pop
lret
push
fadd
cmp
cmp
minps
push
movsb
in
mov
addr16
push
xchg
dec
les
lea
dec
pop
cld
xchg
push
inc
fisubs
lds
lds
mov
stc
cmp
in
aad
sbb
mov
shlb
inc
rorl
ret
mov
ret
sbb
rcr
dec
lcall
ret
sahf
xchg
push
sub
xor
inc
ficomps
or
ds
sbb
std
jb
dec
adc
shlb
in
mov
or
or
pop
jb
orb
push
xchg
and
push
push
mov
std
or
and
pop
int3
push
mov
cmp
xchg
mov
xchg
mov
test
inc
mov
scas
insb
addl
in
dec
dec
mov
pop
repnz
adc
out
inc
test
orb
pop
cmp
push
pushf
lret
scas
aad
fidivrs
pop
test
sbb
shl
sbb
aad
xchg
push
gs
push
xchg
int3
push
pop
popf
mov
cmp
or
mov
xchg
and
rcl
mov
ss
ja
orb
jns
xor
scas
adc
xchg
sub
lret
inc
movsl
call
jp
jl
adc
inc
sbbb
inc
push
loop
adc
lds
and
pop
inc
push
les
inc
adc
push
push
dec
mov
xchg
insb
ljmpw
jb
loope
mov
push
push
push
mov
icebp
or
dec
call
adc
mov
dec
or
fcmovnu
dec
xorl
xchg
jmp
sahf
push
mov
sbb
sbb
and
in
dec
int3
arpl
arpl
mov
ja
lds
loope
mov
pop
cmp
cmp
or
and
dec
aad
ret
sahf
jp
sbb
pop
mov
sbb
push
inc
stos
jae
lcall
mov
jp
xchg
mov
out
js
iret
mov
shr
inc
fst
cmpsb
pop
mov
loop
dec
cmpsl
mov
dec
jl
xchg
scas
pop
bound
mov
push
xchg
push
mov
jb
pushf
inc
push
ds
dec
dec
les
jp
xchg
xchg
cmc
outsl
push
out
lods
adc
xchg
push
and
mov
pop
cwtl
andl
cli
mov
in
nop
fdivrl
imul
pop
mov
dec
retw
test
dec
mov
and
add
adc
cmp
mov
inc
xchg
jo
cmc
inc
and
inc
int3
in
sbb
mov
sub
pop
decb
enter
add
jl
dec
push
imul
aam
cmpb
push
mov
sbb
arpl
inc
loopne
adc
lret
cmpsb
lcall
jle
inc
dec
push
inc
clc
and
lahf
jle
imul
xchg
rcrb
inc
orb
pop
inc
data16
sub
loop
and
xor
push
lds
mov
xchg
mov
jbe
aam
pop
mov
cmpsb
dec
cmp
and
mulb
xchg
out
inc
stos
mov
pop
scas
pop
inc
dec
inc
pusha
inc
pop
inc
cltd
pop
mov
sar
jle
lds
lcall
inc
push
addb
stos
mov
push
loope
mov
test
mov
sub
cmp
sarl
mov
pop
pop
in
imul
push
sbb
xchg
cmp
adcb
aad
or
inc
xchg
imul
aam
repnz
and
ss
test
or
and
int3
or
jo
sbb
cmpb
xchg
bound
push
mov
arpl
and
outsb
mov
cli
pop
lock
sbb
mov
jle
pop
lcall
pushf
xchg
into
mov
mov
loope
fimuls
push
jb
xor
test
and
dec
mov
mov
xchg
cmp
mov
int
dec
nop
unpcklps
mov
cwtl
arpl
mov
adcb
pop
popa
and
and
cmp
mov
pop
push
push
fimull
jl
imul
push
xor
push
jbe
push
mov
loop
lock
push
inc
out
push
mov
out
iret
push
pop
cmpsl
movsb
and
adc
mov
xchg
sti
stos
or
inc
sbb
mov
sub
xchg
das
inc
mov
mov
les
fisttps
adc
push
dec
mov
dec
dec
roll
jo
mov
xchg
pop
es
jb
and
xchg
inc
shr
pop
sbb
cmpsb
rorl
cmp
out
jmp
sub
ljmp
mov
dec
push
cmc
outsl
idivb
push
ss
push
add
inc
dec
inc
jae
and
adc
dec
into
jle
mov
inc
xchg
inc
or
jo
mov
push
movsb
test
adcb
popa
jo
movsb
pop
push
jo
jb
inc
mov
aaa
inc
sbb
loop
ljmp
ficoml
sti
out
and
loop
xchg
mov
stc
xor
sub
or
test
es
mov
or
jae
aas
pop
dec
fucomi
mov
insl
inc
xor
ds
add
jle
fdivs
push
cmc
xor
push
xor
nop
mul
sub
inc
cmp
mov
iret
rclb
and
xor
ret
mov
inc
mov
int3
mov
xchg
cwtl
push
pusha
pop
pusha
and
or
loope
jne
push
lods
push
mov
pop
mov
ds
lcall
mov
dec
movsb
push
leave
ret
adcb
xchg
inc
into
iret
mov
inc
sti
popa
mov
cmpsb
lcall
push
inc
mov
sbb
xchg
and
and
mov
mov
mov
bound
mov
jb
xchg
dec
mov
orb
mov
inc
xchg
in
add
push
loope
vmovntpd
jp
decl
gs
jbe
cmp
xor
push
imul
mov
and
jnp
clc
mov
scas
pop
jne
jp
pop
push
dec
and
in
shll
addr16
pop
in
gs
inc
sub
xor
push
xorb
fsubs
mov
push
fwait
in
inc
inc
insl
movl
rorb
and
sub
popa
movsb
push
ret
and
aas
inc
mov
mov
push
push
mov
jae
aaa
sub
pop
cmp
jo
lea
xor
fstpl
ds
pop
lret
stc
in
mov
faddl
in
pushf
mov
mov
push
pop
inc
cmp
pop
dec
add
or
sub
fisttpl
ret
and
add
gs
inc
nop
and
mov
sbb
iret
push
or
popa
arpl
test
inc
jle
dec
push
leave
dec
imul
xchg
inc
pop
add
xor
and
jb
cli
mov
adc
jge
add
scas
xor
pusha
out
mov
lret
mov
arpl
andb
jl
imul
scas
adc
xor
xor
orb
xor
push
dec
push
out
pop
push
test
push
enter
sub
in
adc
dec
pop
xor
mov
leave
in
ljmp
scas
mov
jge
inc
xchg
jb
mov
ror
pop
dec
adc
push
xchg
dec
bound
popf
mov
ret
pop
cwtl
mov
cmp
jmp
dec
test
cmp
xchg
xchg
bound
aas
mov
mov
xchg
cs
js
movsl
jp
shlb
pop
mov
fldenv
push
mov
push
cld
test
cmp
gs
xchg
pop
dec
cmpsl
lea
xchg
sbb
mov
and
fildl
popa
pushf
xor
pop
mov
pop
mov
xchg
in
pop
iret
push
jle
ljmp
pop
in
cli
mov
and
push
push
mov
jne
ret
push
sahf
cwtl
andb
sbb
fwait
mov
cmp
sbb
pop
adc
data16
cwtl
sbb
orb
movsb
les
sbb
sahf
ds
push
pushaw
pop
out
loope
cmp
popa
push
adc
decb
test
test
pop
sub
pop
mov
cmp
aam
dec
shlb
sbb
and
pop
unpcklps
nop
pushf
orb
ljmp
sbb
xchg
sarl
and
sahf
in
xchg
mov
xchg
loop
test
mov
ret
jbe
sbb
pop
sbb
and
push
xchg
jge
add
adc
sbbb
dec
popf
push
lods
xor
xchg
dec
and
jle
push
and
and
gs
divb
les
inc
mov
in
push
sbb
aaa
and
sbb
ss
loop
fiaddl
imul
jmp
imul
push
dec
inc
mov
ds
push
cmpsb
add
dec
sahf
mov
mov
inc
clc
gs
push
push
out
inc
jae
push
cmc
aas
jmp
lea
cmpsb
jns
xchg
xchg
or
pop
fscale
and
cli
popa
jg
pop
out
push
mov
loop
ret
mov
dec
xor
xchg
cmp
push
mov
add
cmpsb
or
mov
cmp
add
pop
sbb
not
jbe
sbb
push
push
push
or
fnstenv
inc
mov
sbb
cmp
cli
arpl
xor
adc
int
cmpsl
dec
mov
jo
jp
cmp
lock
shlb
sti
add
cmp
sbb
dec
xchg
lds
inc
push
mov
data16
and
inc
xchg
pop
push
add
cmpsl
jle
xchg
inc
cmp
inc
mov
out
ds
sbb
or
sbb
mov
add
sbb
addb
xchg
pushf
fimuls
xor
push
or
xchg
sbb
mov
dec
push
jbe
sti
scas
sbb
xchg
mov
xor
mov
in
mov
mov
push
pop
xor
inc
mov
sti
cli
rcrb
xor
push
sbb
das
jo
xor
xchg
ja
lcall
cmpsb
inc
cmp
ret
jle
jbe
test
and
repz
mov
or
mov
out
scas
pop
inc
les
gs
add
and
ds
sbb
das
in
nop
mov
cmp
inc
xchg
dec
mov
popa
jne
inc
cmp
pop
subb
int
mov
int3
sub
negl
in
xor
mov
push
and
addb
or
pop
lahf
mov
inc
daa
xchg
nop
and
ss
push
and
mov
xchg
xor
out
ret
mov
shll
sbb
mov
loop
mov
js
mov
sbb
add
fwait
inc
mov
arpl
maxps
xchg
data16
dec
jo
out
bound
add
cmp
jbe
jne
movsl
add
push
sbb
mov
xchg
pop
js
sbb
or
sbb
fmull
cs
inc
fisubl
push
mov
loop
int3
cmpsb
or
xchg
inc
pop
subb
les
lcall
fsubl
mov
repz
add
aad
mov
insb
int3
add
xchg
popf
push
mov
call
sub
inc
adc
test
or
rclb
mov
pop
addl
mov
ret
lods
inc
fstpt
adc
cli
xchg
cmpsb
add
xchg
aad
movsb
test
lcall
inc
and
ret
and
pop
dec
add
xchg
xchg
in
inc
lcall
mov
mov
cmp
inc
pop
push
pop
ljmp
mov
lahf
pushf
mov
pop
cld
lret
jbe
pop
mov
xchg
mov
pop
mov
lret
imul
pop
jb
in
pushf
add
cmp
jg
orb
inc
jge
iret
lcall
ret
imul
xchg
scas
jl
testl
ret
inc
inc
int3
aas
lahf
cmp
out
loop
incl
xchg
inc
jae
int3
outsl
sub
or
aad
aad
jg
add
xorb
mov
pop
stos
mov
push
xor
push
pop
xchg
mov
jp
push
sub
sbb
arpl
push
sub
cmp
inc
lret
es
and
or
dec
adc
xchg
aad
push
sbb
in
popa
rcll
xchg
test
sbbl
movsb
xchg
popa
pop
aad
jnp
mov
cwtl
ss
and
mov
and
push
nop
pop
in
adc
xchg
pushf
push
add
sbb
in
inc
mov
mov
mov
gs
in
or
mov
adc
or
cmp
dec
push
out
movsb
int3
and
jbe
cwtl
and
inc
push
insb
mov
test
andb
pop
lahf
mov
fimull
lcall
dec
jle
or
inc
push
insb
lds
cli
xchg
pushf
sub
adc
popa
jb
scas
nop
cmp
int3
push
mov
cmp
out
ds
call
sbb
push
scas
out
xor
fstpt
lret
or
rorl
ret
push
xchg
inc
cmp
cmp
cld
and
ss
mov
ficompl
sub
push
ret
dec
pop
jb
shlb
cmp
add
aaa
movsb
add
xchg
inc
lret
cs
mov
inc
mov
xlat
mov
dec
push
jns
nop
shll
dec
add
adc
inc
test
ss
movsl
jl
aas
ret
jp
xchg
imul
xchg
ss
push
cmpl
xchg
and
sbbb
mov
pop
adc
ror
test
les
or
mov
push
inc
mov
or
push
mov
xchg
sbb
adc
cmp
cmp
mov
xchg
lcall
push
xchg
in
movsb
sbb
or
cmp
or
sbb
ss
arpl
sub
inc
shll
in
inc
push
adc
xchg
sbb
test
jle
push
cwtl
cmp
push
ljmp
and
rcrl
in
cwtl
sub
push
pusha
arpl
cmp
inc
xchg
inc
dec
mov
and
mov
insb
mov
cmp
iret
lret
xchg
mov
filds
orb
aaa
inc
aad
add
lds
sbb
sbb
xor
lea
push
in
ss
adc
cmpl
add
xchg
sbb
push
ja
cwtl
push
xchg
and
imul
in
jge
jb
out
mov
ret
dec
push
decb
call
xchg
add
add
dec
cwtl
out
inc
mov
xchg
aaa
and
mov
mov
mov
adcl
xlat
sbbb
in
ss
lret
adc
popa
mov
lds
adc
and
jbe
cmp
inc
cmp
test
rolb
mov
cli
inc
in
mov
notl
imul
insb
out
xchg
mov
mov
mov
pop
call
pop
xchg
scas
adc
ds
pop
loop
popa
jp
ljmp
push
jle
mov
out
stos
push
mov
and
xor
mov
xchg
cmp
xor
and
sbb
dec
pushf
inc
popa
out
sbb
test
push
call
mov
fstpt
iret
aad
xchg
add
aaa
inc
push
pop
cwtl
mov
fidivrs
jbe
sub
movsb
mov
into
cmp
xlat
xchg
sbb
andb
cmp
mov
jge
or
sub
sbb
test
jle
sbb
push
and
out
xor
mov
pop
gs
mov
dec
jae
mov
cmpsb
jle
jp
cli
sbb
xchg
sbb
shlb
xorb
jne
push
jg
inc
xchg
dec
stos
mov
jp
cmp
inc
jae
mov
xchg
mov
and
adcb
dec
pusha
or
outsl
iret
pop
mov
sahf
push
cmp
decb
jnp
aam
push
mov
cmp
stos
in
dec
jl
push
push
loope
xor
add
mov
and
cli
push
mov
aam
or
aam
mov
mov
mov
cmp
push
int3
mov
rorb
pop
mov
jp
outsb
push
cli
mov
sub
pop
pushf
dec
and
sub
sub
orb
inc
xor
push
push
xchg
inc
lds
push
push
mov
mov
cmp
jb
jbe
and
pop
cmpsb
jle,pt
lds
mov
loope
in
push
pop
fdivr
pop
in
inc
nop
mov
and
sbbl
jecxz
inc
or
mov
sub
cmp
jl
ror
ror
mov
push
subb
cs
jl
aam
inc
xor
fldl2t
stc
and
xor
xchg
jo
out
mov
jbe
mov
and
push
inc
iret
xchg
mov
mov
sub
scas
shll
pop
nop
add
pop
cmp
cmpsl
sti
push
dec
sbb
and
mov
jo
jb
jp
ficoml
sbb
dec
mov
jp
gs
inc
imul
lock
push
pop
sbbb
sbb
lea
dec
mov
jnp
mov
fstpl
dec
sahf
js
adc
and
inc
lcall
xor
mov
mov
pop
bswap
push
sbb
ss
incb
data16
and
inc
mov
or
fldl
and
dec
pushf
scas
aad
lds
mov
scas
dec
and
inc
pop
pop
imul
lcall
lret
rolb
jmp
cmp
and
cmp
mov
mov
cmpsl
iret
xchg
mov
adc
push
jo
out
fisubs
ljmp
pop
lcall
fnstsw
outsb
dec
xchg
dec
iret
inc
rcrl
mov
adc
dec
push
js
and
inc
add
rclb
mov
push
sub
push
imul
jae
stos
mov
xchg
nop
dec
jge
push
and
mov
or
jmp
mov
in
adcb
mov
mov
push
cmp
jle
adc
pop
xchg
mov
mov
sbb
adc
or
mov
xorb
ljmp
sbb
sahf
jo
mov
push
ss
dec
sahf
jle
pop
sub
jg
dec
sub
movb
adc
push
dec
and
jb
outsb
push
mov
and
dec
aam
xchg
mov
gs
pop
clc
pop
mov
and
and
dec
mov
aas
fsubl
dec
cmp
and
js
jb
sbb
mov
mov
ds
aas
xorb
gs
data16
jle
mov
mov
cmp
mov
mov
rorb
es
mov
arpl
xchg
into
aad
mov
dec
sbb
lods
in
dec
xchg
popf
dec
test
movsb
or
push
xchg
in
sbb
push
xchg
mov
sbb
rorl
or
andb
xchg
subl
adc
addr16
dec
dec
nop
cli
js
ret
push
arpl
adcb
js
cmpsb
xlat
dec
sbb
int3
pop
jo
inc
mov
mov
push
dec
mov
jp
sahf
jp
inc
and
ret
mov
popa
mov
push
push
cmp
js,pt
pop
pop
cmp
aad
xchg
push
mov
jbe
fnsave
ss
negb
and
aas
pop
inc
cmp
mov
sub
sbb
call
lahf
movsl
xchg
and
push
mov
adc
les
mov
xchg
ljmp
cli
cmp
iret
dec
jae
and
lcall
add
sbb
push
cmp
jo
xchg
adc
popa
lds
xchg
inc
xchg
testl
ss
sub
cld
loopne
push
cmp
cli
fwait
les
arpl
js
popa
xor
and
sub
xor
cmp
mov
jno
push
gs
mov
jb
and
mov
js
sbb
aaa
dec
ds
cmp
mov
push
stc
push
lret
in
sub
cwtl
inc
mov
xchg
mov
cmp
ficompl
mov
jns
inc
sub
inc
push
mov
fldenv
push
dec
cmp
divb
nop
roll
push
mov
add
aam
push
pushf
mov
addl
pop
arpl
and
out
dec
jns
add
outsb
cmp
or
pop
fst
push
or
cld
xchg
lods
test
inc
sahf
movsb
pop
loop
pop
popa
fdiv
mov
ds
movsb
addb
pop
push
sbb
lret
sub
sbb
push
dec
adc
sub
dec
fwait
push
pushf
imul
push
dec
ljmp
pop
or
mov
aas
mov
ret
and
pop
dec
cwtl
mov
ror
sbbb
dec
roll
lcall
inc
or
push
dec
mov
jb
jle
push
test
inc
cld
and
andb
push
or
stos
sbb
mov
fwait
jbe
popa
lret
inc
pop
xor
outsb
cli
and
pop
es
xchg
jnp
xchg
add
cmp
and
aas
jp
and
es
jb
pushf
cwtl
mov
test
inc
pop
aas
fwait
push
mov
xchg
in
adc
out
aad
mov
cmp
in
xor
sbb
adc
in
ret
test
mov
adc
xchg
pushf
fwait
mov
sub
lret
js
dec
mov
bound
aam
inc
cmpsl
ficompl
jp
mov
popa
mov
xchg
push
adc
les
cwtl
push
push
push
repz
inc
push
inc
in
inc
inc
jb
xorb
and
inc
inc
push
sahf
push
rolb
dec
adc
idivb
popa
sbb
jl
mov
xor
fs
jle
and
inc
and
xchg
cmpsb
loop
mov
push
push
movsb
mov
test
loop
mov
cmpsb
sti
and
xchg
adc
cmc
mov
and
orl
mov
ja
fidivl
aam
push
mov
mov
cmpb
mov
out
pop
cmp
out
ss
movsb
push
test
mov
in
pop
push
ss
xchg
mov
sbb
jae
lock
push
test
dec
push
scas
sbb
aaa
jl
int3
jbe
mov
imulb
xor
outsl
imul
cmp
sbb
rcrb
jmp
in
lahf
push
adc
pop
xor
lahf
and
popa
call
movl
mov
cmp
sbb
mov
sbb
xchg
sbb
addl
push
adc
mov
push
lds
test
xor
shl
sbb
jb
or
lods
call
test
jp
inc
pusha
mov
adc
imul
pusha
dec
push
xchg
ds
xor
mov
mov
arpl
or
adc
outsb
cwtl
sar
pop
mov
in
adc
sub
fldl
push
cs
js
loop
sbb
int3
scas
dec
sbb
adc
and
pop
xor
shlb
mov
aad
xor
pop
leave
sub
cmp
jb
shr
mov
pop
sbb
push
iret
xchg
shlb
cli
xor
ds
push
lea
dec
xchg
and
push
mov
aad
sub
mov
stos
xor
push
xchg
mov
dec
inc
mov
push
mov
clc
arpl
xchg
dec
daa
sarb
ds
dec
cltd
aas
pop
mov
test
sahf
push
cmpsb
inc
das
mov
sub
pop
in
sbb
scas
in
mov
aam
mov
and
sub
cwtl
mov
ficoms
mov
adc
js
mov
or
out
int3
movsl
xchg
jbe
lock
inc
cmp
inc
jp
and
and
shlb
mov
or
push
dec
mov
jle
pop
nop
sbb
jns
push
inc
mov
pop
jp
xchg
xchg
jp
xlat
mov
nop
push
sub
push
and
loop
aam
jo
lcall
gs
mov
push
mov
add
xchg
push
inc
hlt
push
inc
mov
and
jg
andb
sahf
popa
xchg
cmpsb
ficoml
pop
stc
out
and
loope
jbe
inc
xorb
test
dec
aam
mov
xchg
jl
inc
orb
imul
and
jp
jb
push
test
in
inc
in
inc
sbb
scas
movsb
or
sahf
pop
outsb
test
dec
sub
mov
xor
cmp
xor
dec
lods
push
inc
dec
dec
cmpb
push
mov
testb
imul
sub
xchg
sbb
jb
xchg
subb
push
shlb
push
dec
inc
loopne
dec
iret
cmp
cmpsb
xor
push
push
jo
push
imul
adc
fistps
jle
lret
pushf
fldcw
nop
xchg
mov
cwtl
or
or
jmp
sarb
cmpsb
sarb
inc
sub
add
dec
mov
loop
inc
mov
das
push
push
adc
ret
lcall
mov
sub
xor
xor
push
popa
dec
sahf
mov
add
add
xchg
mov
push
inc
sahf
mov
and
cmp
aam
nop
xchg
roll
cli
xchg
pop
cmc
xor
in
mov
mov
jl
cwtl
std
mov
movsb
dec
pop
gs
xor
xchg
dec
lcall
cmp
addb
inc
xchg
dec
mov
sub
sarl
ds
idivb
mov
and
or
in
ja
popa
xor
cwtl
cmp
jbe
push
ds
xchg
iret
clc
push
fwait
sub
and
dec
mov
sbbb
insb
mov
data16
mov
or
cmp
mov
mov
sti
inc
xchg
subl
arpl
pop
xchg
decl
call
scas
mov
adc
push
mov
pop
inc
movsb
xchg
inc
jle
rolb
jo
sti
testb
ljmp
xor
pop
andb
jne
lret
inc
cmp
call
lret
inc
or
cld
push
jbe
sahf
js
dec
cmpsb
xchg
xchg
dec
popa
ljmp
pop
xchg
push
xchg
mov
arpl
out
push
movsb
inc
lds
dec
sbb
divb
push
inc
fiadds
sbb
jp
mov
jl
sbb
cli
jb
mov
jecxz
test
or
mov
sbb
inc
jle
inc
jmp
pop
mov
sbb
adc
icebp
push
cmp
or
dec
or
sub
and
std
leave
sbb
push
dec
pop
andl
cli
ds
or
clc
pop
shr
jo
loopne
lahf
popf
into
popa
push
lods
nop
xor
pop
cli
pushf
jns
or
cmpb
fistl
orb
arpl
in
dec
push
xchg
popa
test
adc
dec
filds
pushf
jmp
mov
sbb
jo
xchg
in
cmc
adc
push
sub
ss
xor
movsb
cld
inc
adcb
or
mov
lea
stos
movb
push
fwait
call
sbb
jb
inc
push
mov
clc
movsb
inc
adc
stos
into
popa
jp
and
jb
fimuls
adc
ret
sbb
push
sbb
outsb
test
dec
loop
xor
cwtl
add
xlat
jge
sub
gs
ret
dec
cli
pushf
mov
pop
test
aad
loopew,pt
mov
rorl
push
and
orl
lret
inc
les
or
shll
jp
push
add
push
out
and
pop
mov
sbb
and
mov
push
xor
jbe
xchg
mov
cmp
jecxz
enter
out
mov
cltd
mov
rorl
sahf
fbld
and
les
out
push
mov
push
xchg
in
ljmp
mov
mov
aaa
inc
repz
rcrb
lcall
push
pop
cli
dec
push
mov
test
mov
mov
insl
xchg
fidivrs
mov
mov
lea
out
lods
scas
mov
push
imul
add
sub
in
push
fidivl
fcompl
test
push
stos
js
cmpsl
xor
mov
push
test
mov
in
cmp
nop
inc
xorb
or
and
mov
jle
xor
and
mov
popa
pop
mov
xchg
js
fstpt
imul
jmp
inc
jecxz
push
cmc
push
push
adc
push
jb
cmp
sbb
subb
sbb
cmp
lds
jbe
ss
mov
cmp
mov
mov
inc
jo
inc
out
es
daa
movsb
inc
popa
push
mov
aaa
out
xchg
cmp
addb
add
adc
fmull
inc
shlb
jb
mov
mov
cli
imul
aam
cmp
mov
pop
cwtl
adc
inc
iret
scas
mov
and
push
mov
popa
push
cmp
in
frstor
or
loop
lretw
jle
notb
iret
jp
ret
pop
cltd
call
or
lods
fimull
cmp
stos
pop
push
in
mov
int3
les
xlat
mov
xchg
mov
adc
mov
push
or
push
mov
lea
inc
lods
call
stos
fcompl
iret
xor
cmpsl
xchg
xchg
js
push
lods
and
dec
jp
pop
cmp
lcall
pop
decb
inc
mov
cmp
push
xchg
and
ret
cmpsl
mov
popa
pop
adcb
dec
mov
xor
mov
sarb
dec
arpl
outsl
push
cmp
pushf
dec
jle
and
cwtl
out
sbb
test
xchg
sbb
and
in
and
nop
adc
adc
mov
sbb
mov
movsl
jl
dec
sub
adc
mov
cmp
fisttpll
mov
push
jb
cmp
xchg
sbbb
jle
dec
sbb
jl
pop
ficompl
mov
ret
lock
pop
cmc
in
cmpsb
int3
sbb
lods
in
xchg
cmp
flds
jl
add
inc
sub
cmpsb
mov
leave
or
ljmp
scas
leave
imul
stos
mov
movsl
popf
and
xor
ss
cli
std
cld
imul
lods
or
cmp
push
dec
mov
test
push
outsl
cmp
pop
movsl
aaa
xor
or
ss
adc
dec
inc
xchg
into
jb
cmp
jnp
sahf
pop
push
insb
rcll
test
clc
arpl
and
aad
cwtl
jo
inc
push
dec
mov
lods
push
inc
pusha
aad
and
lret
nop
jnp
push
lock
es
adc
cld
adc
push
xor
test
std
and
dec
push
mov
cmp
push
sub
lea
sbb
leave
push
inc
inc
dec
adc
lcall
nop
push
xor
push
xchg
ss
fstl
inc
xchg
xchg
test
or
adc
fwait
xor
aas
xlat
leave
dec
fwait
out
les
or
sbb
out
mov
arpl
into
lret
sbb
jb
jl
inc
push
std
sub
xor
add
lcall
xchg
xor
mov
pop
jbe
cmp
lods
inc
inc
push
imul
push
sarb
adc
lret
push
popf
call
pop
inc
lret
pop
cmpsb
movsb
mov
subb
jno,pn
leave
dec
push
mov
loop
pop
push
mov
test
inc
dec
push
jl
mov
inc
cmpb
inc
adc
ds
and
inc
inc
dec
inc
ss
js
adc
std
mov
adc
sbb
mov
xchg
sub
inc
ds
push
dec
and
pop
adc
lret
jge
push
subb
jp
ss
or
movsl
ja
nop
mov
cli
leave
test
movsb
add
pop
iret
ljmp
cmp
mov
or
dec
dec
adc
cmp
sbb
fs
mov
outsb
push
cmpsb
divb
inc
ficoms
int3
imul
jo
sbb
cmp
mov
and
add
sbb
jle
addb
cmp
roll
mov
mov
mov
add
lods
cmp
sbb
ljmp
outsb
lret
push
push
cmp
pusha
pop
xor
pop
add
or
daa
sarb
cmp
xchg
xor
mov
push
popf
ficomps
stc
push
pop
mov
jle
inc
pop
iret
ljmp
test
cmp
insb
xor
test
mov
mov
pop
xchg
push
adc
push
bound
jbe
insl
pop
cli
in
dec
mov
lods
push
in
in
add
in
add
sub
arpl
test
cmp
mov
xchg
adc
movsb
fmull
xor
push
in
dec
mov
adc
jb
dec
inc
lea
bound
jp
add
scas
xor
pushf
inc
pop
js
std
in
ficompl
enter
gs
popa
and
andb
jbe
push
out
xor
and
inc
jbe
or
out
sbb
scas
sub
adcb
xchg
inc
imul
loop
push
mov
and
cmc
fmull
xor
cmp
in
dec
cmp
pop
mov
insl
push
sbb
mov
mov
shlb
mov
js
jo
rcrw
mov
inc
push
mov
inc
cwtl
loope
les
sub
dec
or
and
test
ss
xor
sub
pop
rcrl
and
cmpsb
mov
inc
and
adc
sub
xchg
and
dec
jne
push
mov
pop
dec
ficomps
es
inc
mov
lcall
cwtl
scas
push
lds
inc
mov
lock
cmp
mov
fwait
popf
mov
pop
gs
test
sbb
popa
aaa
dec
cmp
loop
push
mov
mov
push
test
sbb
faddl
jg
cld
xchg
jp
and
or
fcoms
adcb
sahf
lods
xor
jle
push
mov
xlat
mov
and
stos
inc
and
ljmp
xchg
pop
xor
movsb
cmpb
adc
rorb
xchg
dec
in
mov
loop
lret
lea
jb
das
sub
add
inc
adc
pop
test
mov
push
cld
ss
cli
in
dec
mov
mov
pop
push
movsl
fdivl
test
sti
fwait
xchg
dec
mov
cmp
dec
sahf
js
test
and
sar
push
sub
push
fimull
pop
and
cmp
mov
scas
dec
inc
dec
mov
sahf
mov
xor
dec
clc
in
mov
jne
and
dec
mov
inc
mov
and
pop
mov
ja
and
xchg
inc
ret
lds
rcrb
sahf
jo
in
shlb
adcb
mov
inc
mov
in
nop
adc
inc
jnp
lcall
popa
lods
add
pop
ljmp
push
push
fwait
aas
add
test
sbb
push
mov
xor
push
push
out
mov
sbb
jle
in
jb
lods
call
pusha
mov
jp
pop
scas
lea
pop
mov
popa
adcl
shll
inc
cmp
cmp
adc
jb
ja
jl,pt
push
jp
inc
cmp
xor
fwait
xchg
xor
fistl
flds
cld
aad
mov
inc
in
arpl
aas
mov
out
adc
mov
in
loop
mov
dec
sbb
mov
pop
ficoms
xor
test
mov
dec
pop
push
stc
data16
sub
cwtl
inc
arpl
cmp
jbe
ja
push
cmp
popa
and
xchg
imul
ret
idivl
mov
mov
jae
or
out
ficompl
sbbb
lret
clc
orb
jbe
jl
cli
jb
in
xor
pop
push
stc
xchg
sub
xchg
mov
push
xor
movsb
outsl
xor
cmpsb
xor
call
inc
dec
pop
scas
mov
stc
or
in
in
loop
ret
inc
mov
andb
pop
mov
push
push
sbb
test
push
push
xchg
daa
add
popf
nop
fwait
push
push
pop
inc
lret
push
cmp
imul
addr16
xchg
inc
test
inc
fwait
sarl
inc
mov
shlb
cmp
cmp
test
xchg
mov
nop
cmp
mov
in
jl
mov
shrb
or
cmpb
dec
arpl
adc
jecxz
aam
lcall
mov
inc
jl
push
mov
movsb
and
adc
cmp
or
lds
aas
in
jle
xchg
mov
and
pop
jl
lcall
inc
inc
movsb
lcall
jl
sahf
pop
push
push
lods
call
daa
cli
shrl
xchg
sbb
xchg
add
mov
test
inc
stos
pusha
and
and
and
add
push
mov
aad
jns
outsw
mov
sarb
cmp
or
sbb
push
mov
mov
push
fidivrl
fldenv
jge
movsl
aaa
rcrl
adc
xchg
mov
inc
fidivrs
mov
mov
mov
nop
jp
inc
test
or
add
inc
inc
pop
inc
in
mov
mov
dec
jo
subb
adc
sbbb
pop
xchg
push
jbe
aam
push
jp
shll
js
mov
cwtl
ss
mov
ljmp
lcall
and
dec
sub
hlt
xchg
mov
jp
arpl
cmp
mov
jmp
push
xor
mov
mov
dec
cmp
dec
mov
xchg
aaa
adc
lret
mov
pop
cmp
push
push
push
nop
push
vpor
lret
push
xchg
clc
inc
push
shlb
jp
cmp
or
lret
nop
dec
lret
cmpsb
sbb
mov
cmpsb
jbe
dec
inc
js
inc
fistpl
mov
subb
and
mov
push
stos
cli
jb
jmp
dec
push
mov
lods
in
push
test
fwait
mov
sahf
cmp
cmpsb
dec
mov
mov
popa
out
cmp
dec
xchg
mov
inc
shl
jp
jb
sbb
jne
inc
cld
push
pop
incb
xchg
sbb
je
cwtl
dec
movsb
push
rorl
xor
xchg
xor
js
and
and
push
lcall
mov
sahf
dec
sbb
inc
shll
jo
or
xor
ret
movsl
les
pop
inc
cmp
fisttpll
pop
mov
out
xchg
push
nop
inc
xchg
sarb
inc
ret
dec
inc
xchg
inc
mov
sbb
andb
jl
cltd
lods
pop
and
ss
arpl
sbb
outsl
test
jl,pt
jbe
push
xchg
jecxz
jb
outsb
and
push
inc
gs
sahf
je
push
sub
test
sub
pushf
jo
shrb
xor
inc
jl
insl
shlb
mov
and
xchg
ljmp
pusha
ret
cs
sbb
mov
xor
cmpsl
push
sbb
dec
inc
dec
mov
cmp
adc
repnz
movsb
sub
decb
lret
fldt
rcrb
add
pop
inc
adc
or
dec
arpl
jmp
xchg
or
cmpl
xchg
mov
lods
aam
or
sahf
sbb
inc
push
in
mov
cmp
cmc
aam
cwtl
jb
shll
sbb
cmpb
andl
aaa
and
push
sub
lods
sahf
sub
stc
sbb
mov
incl
push
mov
mov
nop
mov
xorl
pop
adc
jb
xchg
jg
inc
and
xor
cmp
icebp
mov
pop
adc
int3
push
test
movsb
mov
in
dec
mov
shrb
leave
and
sbb
push
mov
mov
outsb
outsb
pop
les
jmp
sub
pop
shlb
in
inc
dec
faddl
pop
xchg
cli
imul
mov
mov
int3
into
sbb
pop
test
xchg
movsb
sub
sub
insl
mov
sbb
xchg
and
dec
cltd
xchg
sbb
pushf
daa
xchg
dec
and
push
mov
cmpsl
xchg
sbb
lods
xchg
fwait
dec
flds
push
push
xor
nop
stos
inc
dec
sbb
scas
cltd
scas
decl
out
jbe
pop
inc
xchg
int3
ss
push
addb
scas
mov
dec
push
xchg
dec
add
inc
inc
cmp
mov
push
dec
or
or
and
insl
inc
adc
cld
dec
sbb
sti
add
xchg
nop
add
ds
sbb
push
loop
loop
sub
jg
lret
pop
mov
xor
jb
inc
mov
mov
cmc
dec
mov
cwtl
mov
inc
dec
pop
pop
popa
call
mov
mov
cwtl
lds
imul
inc
mov
pop
call
outsb
lods
mov
test
pushf
popa
adc
sbb
mov
mov
scas
mov
pop
pop
xor
ret
lcall
rolb
ljmp
and
mov
sbbl
ds
jle
xchg
dec
dec
mov
pop
into
insb
push
and
ss
sub
aad
scas
test
mov
cli
jbe
or
cmp
mov
mov
mov
push
and
test
fwait
cmp
adc
test
mov
push
dec
adc
imulb
es
sbb
ja
push
xor
test
mov
pop
xchg
push
icebp
sahf
pop
adc
mov
arpl
lea
sub
mov
lds
push
jp
jnp
add
js
cmp
adc
jne
mov
arpl
nop
mov
aad
mov
inc
jo
and
push
movsb
data16
inc
jnp
mov
cli
subb
xchg
mov
and
inc
pop
mov
arpl
pop
jae
mov
lds
cwtl
xchg
sbbb
rolb
push
dec
jb
test
decb
stc
jbe
ljmp
ret
andb
adc
je
mov
in
dec
mov
xchg
cmp
dec
imul
add
lds
push
and
cmp
repz
aam
mov
insb
cltd
xchg
add
jmp
adc
in
push
testb
sbb
out
adc
and
sbb
jle
cli
mov
lret
movsb
in
pop
push
mov
inc
sbb
mov
nop
sbb
jmp
push
addl
push
testl
clc
push
pop
push
lcall
ficompl
xchg
hlt
mov
push
aad
daa
subb
xor
pop
mov
pop
push
pop
test
divb
ret
lods
shrl
inc
aam
push
jb
mov
aam
test
lcall
push
inc
sub
jmp
je
inc
sahf
cwtl
ret
xchg
rorl
push
mov
iret
arpl
jb
pop
test
hlt
popa
add
jge
cwtl
imul
jbe
mov
fidivrl
rolb
cs
adc
push
jbe
push
sbb
iret
nop
pushf
mov
shlb
add
movsb
out
inc
push
jl
pop
fstp
or
dec
nop
movsb
cmp
xchg
mov
inc
cmp
inc
xor
xor
iret
popa
mov
in
cmpsl
rorb
mov
jmp
push
mov
cmp
sub
jle
pop
push
xchg
in
mov
pushf
sbb
add
inc
cmp
test
jne
push
push
sbb
mov
mov
push
add
jp
push
mov
or
sbb
sub
in
orb
push
dec
jmp
push
xchg
and
xor
push
roll
js
orb
cmpb
dec
pop
pop
xchg
push
pushf
mov
ds
aaa
mov
es
sbb
mov
xchg
jbe
mov
jmp
push
pop
test
out
xchg
add
orb
movsb
mov
movsb
pushf
popf
in
push
adc
pop
push
pop
mov
cmp
push
inc
repnz
mov
sbb
mov
jbe
lods
js
mov
repnz
add
lods
call
mov
xchg
cli
lret
sbb
mov
xor
aas
and
sbb
push
dec
int3
dec
iret
jl
sbb
push
and
jmp
push
or
fcoml
or
push
lret
cmp
hlt
add
sbb
jl
jb
adc
in
in
jb
jle
sub
sahf
add
xorb
jns
cmp
xchg
divl
cmp
out
pop
cmpsb
mov
xchg
dec
sub
popa
xor
call
sbb
adc
clc
arpl
or
lea
ljmp
push
dec
int3
dec
sbb
gs
cmc
les
std
pop
pop
inc
sbb
adcl
inc
sub
mov
cmc
and
sub
js
into
push
test
push
pop
mov
daa
mov
mov
inc
pop
lcall
test
daa
push
aad
pushf
test
mov
mov
notb
push
push
push
in
out
fists
push
mov
dec
cs
and
dec
jnp
mov
mov
cwtl
and
and
inc
add
fwait
popa
lea
mov
and
and
inc
xchg
cli
inc
xor
cmpsb
lods
ja
mov
jbe
or
sbb
in
adc
cltd
adcb
inc
pop
sub
push
and
push
xchg
sbb
ss
jo
shlb
cld
nop
cmp
jbe
fdivs
rolb
add
mov
adc
xchg
inc
pop
xchg
or
jl
push
xlat
push
sbb
fisttpl
cwtl
rolb
pop
jo
add
cmpsl
popf
mov
add
jo
dec
gs
pop
cli
push
lret
add
sub
sbb
lret
push
jne
push
jp
lret
data16
lea
shll
inc
mov
imul
mov
rcrl
adcl
cmp
out
mov
push
rclb
xor
cwtl
push
ss
dec
cmc
sbb
sbb
mov
pop
je
lods
cmpsl
mov
mov
lahf
mov
in
xor
xor
lea
and
and
movsb
dec
outsl
dec
cmc
orb
mov
sub
dec
cli
push
jns
mov
jp
mov
push
addb
dec
leave
mov
cmp
dec
lret
adc
fimuls
jbe
and
mov
int3
xchg
or
xor
sbb
test
pop
mov
in
xchg
aad
xchg
mov
adc
or
fidivrl
mov
xorb
jo
xor
out
test
xchg
cmp
mov
movsb
test
test
mov
inc
popf
andb
adc
vblendmpd
lds
jge
rcrb
push
fwait
adc
and
arpl
mov
cwtl
xor
adc
pop
and
mov
adc
mov
jle
and
fildl
pushf
cwtl
xchg
push
mov
pop
inc
in
dec
shll
nop
jl
mov
pop
js
xchg
add
push
push
inc
sbb
out
cmpsl
pop
jo
and
stos
mov
inc
and
push
sbb
arpl
ret
push
and
add
cltd
lcall
cmpsb
and
ss
lods
push
gs
test
movsb
inc
fisubs
push
sub
jo
mov
popa
test
pop
ss
mov
ss
adc
push
ret
mov
inc
jns
mov
push
mov
mov
ss
xor
dec
mov
nop
dec
pop
mov
test
fidivs
andb
dec
mov
adcb
and
es
shlb
nop
rcrb
inc
cld
scas
cs
and
pop
dec
pop
incb
jl
dec
push
sbbb
xchg
jp
xchg
ret
sbb
mov
pop
push
rorb
call
lcall
sbb
mov
maxps
or
add
xchg
arpl
adcb
out
rclb
dec
cmpsl
cwtl
jbe
dec
pop
sahf
in
and
inc
js
test
mov
xchg
stos
dec
and
rclb
add
dec
mov
pop
and
data16
push
cmp
mov
push
jb
in
xor
lods
and
sbb
add
inc
jge
mov
clc
push
je
jne
mov
sub
nop
inc
pop
push
icebp
xor
and
orb
push
pop
mov
xchg
arpl
pop
mov
jmp
jl
in
dec
in
inc
push
dec
dec
inc
cmc
jno
push
mov
rcrl
cmp
test
mov
or
sahf
aas
push
into
mov
test
nop
mov
mov
cmp
or
xor
jb
cmpsl
aam
inc
shrb
cmpsb
xchg
xchg
push
cmp
cmp
mov
jp
xor
mov
bound
push
xchg
sub
testl
movsl
aam
sbbb
sub
jp
cmpsl
ficoms
arpl
dec
popa
pop
jbe
dec
inc
pop
mov
xchg
inc
rorb
cwtl
mov
mov
push
xor
pop
dec
push
ret
sbb
xchg
cltd
aam
stos
or
dec
aaa
cmp
lea
sbb
xchg
daa
inc
mov
and
incb
xor
push
cmp
inc
or
in
cmpsl
bound
ss
idivb
xchg
call
mov
add
inc
dec
shlb
sub
sbb
and
sbb
add
xchg
shl
popa
jp
jno
and
sahf
xchg
rclb
mov
inc
inc
xorb
inc
out
pushf
and
pop
lds
cwtl
dec
sbb
test
pushf
jge
add
pop
out
xchg
imul
mov
jb
push
sbb
ret
inc
inc
orl
inc
jmp
xchg
jno
lods
dec
inc
dec
ss
dec
adc
inc
jecxz
in
ret
push
popa
mov
cmpsl
xchg
mov
arpl
mov
test
repz
mov
sbbb
call
pop
mov
mov
dec
pushf
pushw
xchg
lret
test
adc
jbe
or
xor
popf
out
xor
sbb
and
cmpl
pop
and
lods
sahf
dec
outsb
popa
jmp
xor
sahf
inc
xchg
dec
or
inc
push
loop
mov
sub
jbe
std
fldl2e
cmp
dec
jo
mov
popa
clc
jl
nop
fwait
push
mov
in
xlat
lret
lcall
jp
in
push
jbe
rcrb
xchg
dec
fidivrl
adc
std
call
das
mov
ds
xchg
mov
mov
jbe
fcoml
lret
push
dec
pushf
and
push
or
xchg
in
xlat
rolb
dec
repz
jmp
mov
lcall
into
nop
sbb
xchg
inc
popa
imul
movsl
repnz
std
inc
or
pop
int3
jg
mov
ljmp
test
fsts
xorb
push
xchg
shrb
aad
lds
inc
pop
mov
les
les
jge
das
jle
xchg
or
cmp
mov
inc
inc
cmpsb
adc
add
in
sbb
or
xchg
inc
pop
sbb
xchg
lods
mov
inc
cli
ret
cli
popa
sub
and
push
nop
shlb
push
xchg
pushf
mov
fisubrl
push
outsb
mov
js
pop
aad
push
dec
lret
sbb
pushf
pop
push
and
jns
gs
movsb
lahf
orb
pushf
push
xchg
push
repnz
std
xchg
push
inc
xchg
adc
pop
pop
roll
mov
iret
push
sarb
sbb
sbb
jo
and
ror
into
mov
xchg
pop
out
in
cmp
imul
sbb
aam
push
push
iret
cwtl
push
cmp
sub
pop
push
test
mov
fdivrl
movb
jp,pt
jmp
popa
lcall
pop
dec
stos
test
mov
push
or
clc
push
jmp
inc
cmp
jo
decb
push
push
loop
ret
fstl
jle
inc
and
sbbl
add
pop
inc
sbbl
ficoms
cmp
xchg
jp
dec
sub
shll
pop
mov
imul
cmp
dec
dec
mov
sub
mov
popa
pop
mov
rclb
lods
mov
pushf
pop
xchg
and
cmpsl
inc
dec
lcall
inc
jl
jp
in
repnz
imul
mov
mov
xchg
subb
cmp
mov
inc
jno
dec
push
and
ds
inc
mov
lret
in
dec
sub
mov
aaa
fstpt
xor
and
and
inc
nop
andb
test
and
push
sbb
pop
mov
lods
or
adc
sub
dec
push
push
mov
repnz
aas
and
and
mov
out
sbb
shl
push
nop
cmp
rclb
lcall
popa
cltd
jle
sbb
mov
dec
push
addl
mov
cmp
andb
inc
nop
mov
and
xchg
push
cmpsl
cmp
jl
and
push
push
push
inc
loopne
push
gs
out
sbbb
in
mov
fidivrl
pop
mov
test
lds
sbbb
jle
popa
lcall
shrl
push
sub
mov
jl
pushf
insl
mov
or
fucomp
jl
ds
inc
mov
mov
sbb
or
pop
arpl
js
std
push
jb
sahf
lds
mov
mov
mov
in
and
jg
push
add
xchg
lcall
push
stos
sub
xchg
mov
sub
gs
push
sahf
mov
test
pop
orb
js
or
lret
xchg
fst
mov
mov
shlb
jp
ficoms
push
mov
jb
mov
popa
out
jb
cmpsb
fldenv
jg
scas
orb
xchg
jae
addb
pop
divb
pushf
int
jb
or
ja
test
ss
xor
mov
adc
rcl
push
ret
inc
insb
and
and
push
pop
push
cltd
lcall
push
mov
dec
pushf
data16
dec
push
test
lcall
orb
sbb
mov
push
sbb
jle
pop
and
nop
mov
xor
mov
jp
lods
pop
inc
mov
and
jbe
xchg
push
nop
mov
pop
cmp
rcl
loop
scas
and
lcall
inc
movsb
push
sahf
jbe
fiaddl
out
inc
jbe
pop
mov
dec
cmp
cmpsb
test
arpl
add
inc
rcrl
pop
rorb
std
push
lock
mov
push
inc
xchg
jo
and
stos
adcb
jb
or
adc
addr16
jb
sbb
sbb
popa
into
push
dec
inc
push
cmp
dec
cmp
test
sub
loop
add
mov
aad
sub
mov
adcb
cld
outsb
push
shlb
inc
movsb
mov
sbb
scas
pop
jo
fiaddl
movsb
dec
in
push
mov
xchg
sbb
xchg
jb
mov
sbb
fsubrp
xchg
dec
cmp
jp
xchg
cltd
ss
or
cmp
movsb
in
mov
or
mov
dec
sub
imul
push
dec
mov
sub
pushf
dec
inc
cli
push
js
inc
jo
pop
adc
mov
xchg
mov
lcall
mov
jle
lods
dec
adcl
push
inc
add
push
orb
jns
iret
inc
mov
in
ds
rolb
stc
stos
aam
xchg
mov
inc
xor
push
ret
cmp
popa
insb
cmpsl
xor
xchg
mov
xorl
scas
mov
and
lcall
gs
mov
sbb
sti
pop
pop
movsl
mov
mov
jmp
scas
pop
push
nop
or
cmpb
sbb
sbb
out
xchg
cld
jo
mov
push
aaa
cmp
iret
in
or
mov
insl
jge
sub
jne
cmp
sahf
and
lcall
push
movsb
mov
xchg
rcrb
xchg
add
fsubrl
lds
ret
mov
bound
pop
jae
test
test
pop
adc
push
int3
xchg
and
jl
sbb
lea
lods
ret
pop
inc
rolb
cmpsl
xor
mov
cwtl
cmp
pop
rolb
cmp
push
sbb
cwtl
dec
mov
adcl
push
aas
jno
movsl
xchg
xor
sbb
xchg
mov
mov
cmpsb
or
scas
test
ss
negb
sbb
outsb
jl
fiadds
or
sar
cmp
mov
pop
xchg
mov
decb
sahf
push
mov
mov
divb
icebp
and
pushl
mov
push
cmpsb
and
adc
inc
jbe
cmp
mov
mov
inc
ss
inc
lds
push
fisubl
inc
loop
or
aas
clc
push
push
xor
addb
push
pop
leave
adcb
add
mov
stos
ret
cmpsb
push
mov
xchg
pop
inc
test
scas
cs
iret
mov
pushf
xchg
xchg
js
ss
in
mov
pop
jo
or
outsl
xor
mov
mov
std
mov
sahf
fcompl
fildl
decl
pop
adc
fisubrl
ja
jecxz
cwtl
dec
sbb
mov
jae
fistps
dec
xchg
or
mov
lcall
insl
push
test
adc
sbb
lods
adcb
inc
dec
dec
sbb
mov
aam
lret
popf
insb
xchg
inc
inc
aam
inc
cmp
mov
add
push
jbe
outsl
sbbl
push
mov
add
mov
inc
pop
outsb
and
adc
push
jbe
xchg
rcrl
or
xchg
cmp
push
mov
nop
arpl
cmp
xlat
call
dec
aas
mov
loop
and
mov
sub
cmpsb
pop
push
sahf
ds
incb
inc
mov
cmp
mov
push
lock
push
sbb
push
loop
push
sub
ret
aaa
xor
mov
cltd
xchg
ret
dec
imul
ss
sahf
xchg
cmp
sbb
jbe
and
cwtl
inc
push
lods
adc
sbb
scas
lods
mov
aad
ss
push
lods
push
cli
sbb
jp
mov
pop
push
xchg
mov
xchg
adc
jl
shlb
cmp
and
jecxz
mov
ret
and
or
rcll
test
jno
das
pusha
sbb
xor
cwtl
lcall
int3
or
or
dec
adc
inc
or
inc
loopne
dec
sbb
inc
inc
push
push
cmp
mov
pop
mov
push
and
pop
jg
js
xchg
sub
mov
cmpsb
icebp
cmp
jle
jbe
int
inc
add
and
rorl
xorb
inc
mov
rorb
aam
mov
inc
popf
ss
mov
push
inc
sahf
xchg
adc
shlb
xchg
pop
add
dec
or
xchg
xor
loope
imul
sub
pop
cmp
test
dec
cmp
popa
into
incl
aaa
jb
cli
mov
mov
lods
cmpsb
jne
dec
push
adc
test
sub
pop
ret
xchg
es
xchg
sub
adc
push
jae
and
imul
mov
inc
test
xor
lret
pop
fnsave
sbb
lcall
out
pop
jb
aam
dec
movsb
push
rcrb
sbb
jo
add
call
or
jo
pushf
pop
bound
pop
lret
cmp
loop
pop
dec
in
clc
sub
js
loop
adc
dec
ljmp
add
and
inc
cli
xchg
inc
inc
cli
fwait
xor
push
cmp
xchg
push
xchg
aam
mov
xchg
stos
and
test
adc
mov
pop
lods
loop
fidivl
sahf
inc
cmc
xchg
ret
mov
pop
and
ljmp
mov
pop
dec
lock
xchg
or
fmulp
aam
sub
insb
mov
movsl
loop
add
mov
and
mov
pop
xlat
dec
mov
int3
or
and
jo
xor
sarb
cli
push
jmp
mov
jge
and
jb
push
xchg
dec
push
cmp
mov
ret
inc
inc
push
xchg
out
ss
cwtl
adc
mov
orb
mov
pop
test
push
xor
fdivrs
sub
mov
inc
adc
lcall
lods
pop
in
rolb
jnp
pop
jb
pushf
xchg
xchg
dec
xor
push
decb
fmull
clc
push
inc
mov
outsb
sub
mov
xchg
int
and
xor
add
clc
lahf
adc
jle
mov
jo
mov
and
lcall
cmp
inc
ret
and
mov
cmp
lret
push
add
jge
or
inc
mov
stc
lret
cmpsb
fdivrl
mov
sbb
popa
es
dec
push
mov
in
pushf
sbb
xchg
cmp
pop
loope
mov
cltd
addl
out
sub
cmpsb
jge
and
movsb
push
stos
xchg
adc
dec
fisubl
and
xchg
dec
mov
inc
lcall
push
std
pop
mov
mov
in
jge
xchg
cli
pop
testb
inc
push
popf
mov
push
inc
rcl
mov
lds
mov
cmp
cmpsl
mov
push
mov
pop
mov
inc
cmp
popa
and
sbbb
shl
mov
enter
push
push
push
xor
jle,pt
xchg
popf
lret
mov
inc
mov
arpl
mov
lds
es
add
push
cmp
mov
mov
arpl
cltd
pop
push
or
loop
fidivrs
ss
push
andb
and
inc
int3
inc
dec
xchg
pop
mov
jb
cwtl
cmp
push
or
cmpsl
adc
pop
dec
inc
push
xchg
xor
ss
push
sbb
cmpsl
in
cmc
stos
test
dec
and
cmp
inc
dec
inc
inc
js
cmc
mov
outsb
xchg
sahf
or
and
push
out
lods
out
pop
arpl
xor
xchg
pop
add
mov
and
push
lods
jg
xorb
test
cmp
xchg
sub
movsb
pop
lds
js
xor
push
mov
loopne
sub
xor
pop
es
jbe
js
mov
mov
jmp
mov
ds
mov
inc
xchg
or
ret
lahf
push
mov
data16
jo
test
and
pop
xchg
push
inc
cwtl
pop
xchg
jnp
loope
loop
pop
inc
mov
divl
and
dec
xchg
scas
pop
ss
lods
ret
cmpb
inc
push
sbbb
sbb
mov
xchg
jle
mov
push
cmp
lods
clc
xchg
sahf
sahf
xor
lcall
xor
data16
fwait
inc
or
test
xchg
xor
lcall
inc
pop
lds
jp
add
fwait
loope
pushf
data16
pop
xor
inc
or
aas
fcompl
and
in
xchg
pop
mov
cmpsl
push
mov
sbb
mov
cwtl
dec
jbe
bswap
dec
lret
inc
jo
inc
jnp
mov
mov
sbbl
inc
dec
inc
or
lahf
gs
ss
scas
movsb
gs
pop
inc
mov
fisubs
push
push
aam
movsb
mov
aam
test
aas
inc
mov
adc
dec
mov
inc
jp
mov
add
mov
xlat
lcall
leave
push
xchg
or
xchg
scas
dec
ret
xchg
pop
mov
ja
ljmp
nop
jl
or
jecxz
jae
mov
mov
inc
fsts
mov
add
add
xchg
into
mov
pushf
push
xchg
movsl
inc
cmpl
jle
in
inc
dec
adc
ret
mov
inc
mov
lahf
push
push
sbb
loop
push
call
movsb
xchg
mov
dec
js
xchg
and
pop
sbb
popf
xor
sbb
push
push
mov
ss
and
inc
mov
aas
sbb
cwtl
nop
and
xchg
sahf
sbb
fnstcw
push
ljmp
jl
dec
scas
pop
inc
push
addb
inc
sbb
xor
and
movsb
add
adc
push
ret
sahf
gs
ss
and
mov
and
fcmovne
inc
pop
aam
push
mov
mov
xor
sub
sub
inc
pop
test
cmp
cmp
pop
adc
sub
push
dec
test
mov
das
jb
insl
mov
xorb
roll
js
std
cmc
lahf
call
hlt
pop
push
mov
int3
jbe
inc
pop
dec
dec
jo
subb
pop
enter
inc
das
xchg
mov
inc
push
dec
push
ja
dec
popl
and
xor
loope
push
cmpsl
pop
mov
mov
pop
loope
and
loop
loop
hlt
xor
xchg
xchg
pop
xchg
xchg
fwait
inc
lret
xchg
xor
jo
jg
dec
jp
stos
nop
fwait
subb
mov
popf
sub
xor
fwait
and
and
mov
pop
lret
sbb
test
adcl
in
push
or
lcall
and
nop
nop
xchg
pop
xor
jmp
aas
xor
xchg
fcompl
pop
xchg
mov
mov
dec
roll
inc
popa
push
push
mov
mov
sbb
or
mov
cld
and
push
inc
xchg
test
mov
pop
subb
mov
idivb
cmp
ficomps
sbbl
sub
ss
sub
bound
xchg
loop
push
push
aam
mov
bound
gs
pop
mov
das
in
cmpsb
call
dec
xchg
inc
jb
nop
dec
dec
rcr
les
aad
dec
and
xchg
cs
sub
push
icebp
lods
inc
movsb
adc
jp
ret
sbb
cwtl
dec
arpl
mov
aaa
arpl
popa
xchg
pop
push
incb
andb
inc
aas
jo
cmp
ficompl
xchg
jle
hlt
cmp
jl
leave
test
fsubs
dec
jo
fdivs
enter
test
outsl
mov
mov
js
cmp
aam
xchg
pop
inc
mov
ss
into
movsb
pushf
xchg
cld
and
and
push
out
pop
arpl
push
pop
ds
out
push
mov
xchg
sahf
insb
push
sub
decb
test
or
popl
xchg
and
movsb
mov
int
daa
xchg
xchg
pop
adc
pop
sbb
sbb
test
jbe
mov
dec
jae
inc
ss
jne
rcrb
xchg
mov
jmp
loop
mov
push
loope
nop
mov
shlb
sbb
sub
es
pop
icebp
int3
and
pop
inc
movsb
loop
lods
push
lea
dec
aas
pop
mov
fistpl
ret
and
xchg
xor
xchg
inc
mov
xor
mov
jl
xchg
push
mov
ds
cmc
dec
xchg
push
sarb
pop
mov
in
testb
push
inc
in
int3
push
inc
stos
stos
or
out
xchg
push
aad
push
inc
pop
push
loop
mov
inc
test
sub
aam
xchg
mov
sub
sahf
add
imul
movsb
pop
xor
sbb
mov
les
movsb
mov
cltd
ss
sbb
sbb
sub
cmp
jle
mov
outsb
lret
jp
gs
pop
dec
cmp
push
sahf
cmp
loop
push
cmp
xchg
roll
xorl
cmpsb
bound
out
mov
sbb
dec
lahf
mov
jl
loop
call
iret
arpl
mov
divb
mov
enter
xchg
mov
add
inc
sarb
aam
pushf
cwtl
xchg
pushf
xchg
xor
pcmpeqd
push
dec
sbb
js
nop
mov
test
and
out
ss
jp
or
lahf
xchg
jbe
fcmovb
inc
push
dec
mov
pop
mov
xchg
dec
pushf
adc
mov
cs
pushf
dec
mov
subb
push
inc
mov
dec
jo
sarl
or
daa
nop
cmpsl
mov
inc
and
sbb
push
jle
adc
mov
dec
adc
sbb
or
inc
fwait
subl
dec
jb
add
call
cmp
jno
fstps
fisubrl
repz
pop
mov
jo
fists
inc
lcall
rolb
test
mov
jbe
push
inc
js
dec
popa
mov
rclb
sbb
xchg
and
or
arpl
rcrb
sbb
pop
xchg
stos
sbb
xchg
sbbb
out
aad
popa
xlat
cmp
xchg
out
inc
push
js
cld
push
push
and
dec
mov
stos
loop
cmpsl
fbstp
js
inc
xor
push
dec
leave
sub
stc
fnsave
cmp
and
fcmovb
sbb
jbe
push
adc
add
idiv
add
mov
and
rcll
mov
add
sbbb
add
push
pushf
mov
push
pop
cs
jmp
cwtl
les
pop
out
sub
jg
push
stc
sub
jb
xchg
lcall
cmp
xorb
add
ja
push
pushf
call
dec
and
ss
xor
inc
out
mov
jmp
aam
cmp
cmc
jo
push
sahf
std
scas
out
data16
mov
sub
mov
ss
sahf
push
cmp
rolb
cwtl
lret
jmp
lods
fnstcw
int3
mov
pmulhw
dec
aam
inc
jb
inc
sub
ss
inc
push
dec
movb
lds
orl
jl
fs
xchg
dec
in
gs
sbb
movsb
lcall
pop
ja
lret
nop
and
xchg
test
repnz
jle
les
sbb
aaa
pop
cli
ja
ljmp
mov
fs
dec
aam
jo
ret
in
sbb
inc
jle
dec
and
jp
dec
in
xchg
aad
scas
jb
cmp
ficoml
adc
mov
test
sbbb
xchg
pop
jbe
mov
js
movsb
sbbb
adc
out
and
and
sub
xor
push
mov
push
sub
or
loop
rorl
scas
push
add
xchg
push
ficompl
adc
sbb
fisttpll
sbb
mov
ss
push
inc
repnz
out
and
cmp
xchg
sub
add
jb
cmp
ds
lret
xchg
pop
jle
jbe
mov
jl
cmpsl
bound
push
xor
ret
rcrl
pushf
jae
push
daa
ret
aas
jl
sub
adc
sbb
out
pop
orb
and
outsb
push
mov
int3
inc
in
or
and
stos
popa
push
and
testl
mov
ss
jne
roll
pop
mov
lret
mov
dec
adcb
sbb
push
jecxz
loop
out
pop
pop
xchg
je
lret
nop
mov
dec
shlb
inc
jl
andb
dec
xchg
iret
aam
inc
and
into
ror
or
push
lcall
xchg
dec
xchg
test
jnp
mov
xchg
sti
fdivl
add
cwtl
xchg
cmp
mov
aam
add
inc
push
pop
mov
mov
xchg
cmpsb
mov
adc
lcall
sbb
pop
les
js
or
sahf
xchg
jp
xchg
push
cmp
mov
xorb
popf
inc
mov
shlb
movsb
cmp
popa
mov
popa
lods
incl
aas
push
lods
sbb
push
pop
aam
inc
cmp
mov
pop
movsb
xchg
and
out
call
and
ss
dec
sahf
lods
and
mov
gs
gs
mov
ds
jge
imul
js
js
aad
call
mov
cmpb
mov
or
adc
push
mov
cmpsb
dec
sbbb
xlat
inc
adc
test
dec
into
jbe
dec
dec
fimull
jl
inc
jb
push
js
push
shlb
pop
pop
jbe
rolb
or
iret
ja
dec
push
es
or
xor
leave
dec
inc
inc
dec
inc
jnp
lds
addl
sahf
push
push
ds
in
push
xchg
ds
push
in
lcall
call
jle
dec
mov
dec
cmpb
cmp
and
sahf
or
inc
sbb
fwait
int
lcall
test
push
push
pushf
dec
push
sbb
add
mov
xchg
cmp
xlat
push
xchg
aad
add
jg
mov
inc
xlat
inc
sbb
mov
pop
add
subl
arpl
dec
lret
sub
nop
cmp
inc
cmp
ret
inc
dec
lcall
sbb
pop
sub
or
movsl
mov
mov
or
and
test
fisubl
mov
and
aad
jbe
dec
mov
and
cwtl
xchg
mov
and
xchg
sbb
outsb
dec
rorl
pop
push
ljmp
js
and
mov
push
dec
in
fs
mov
lret
mov
mov
je
and
mov
dec
cmp
adc
xchg
jle
lret
rcll
sbbb
test
pop
mov
ss
jae
movsl
sar
cmp
stos
xchg
cs
leave
fisubl
cmpsl
imul
pop
pop
xorb
xchg
cli
mov
nop
and
mov
mov
dec
jl
mov
cmp
aad
dec
arpl
and
dec
cwtl
lcall
pop
mov
pop
arpl
push
push
imul
popa
loope
in
sub
out
movsb
jle
orl
adc
dec
dec
jbe
lret
adc
and
es
pop
dec
sbb
inc
or
xchg
mov
decb
loop
shlb
int
mov
ss
pushf
jo
xchg
mov
sbb
push
mov
inc
jbe
ret
jns
pushf
inc
add
and
rcrl
sbb
lea
or
in
cmc
pop
ds
ret
push
and
pushf
roll
xor
xchg
xchg
xchg
pop
aaa
roll
mov
popf
lcall
mov
push
nop
js
mov
addr16
push
aas
ficoms
or
mov
mov
mov
aad
outsb
test
xchg
ret
jp
ss
mov
adc
add
sti
mov
mov
push
cmp
push
xor
popa
mov
mov
cwtl
xchg
mov
ds
pop
inc
mov
inc
xorb
jbe
sub
cmp
mov
inc
push
insb
jns
cmp
xchg
enter
popa
into
mov
sub
hlt
push
jp
inc
mov
sarb
nop
mov
cwtl
stos
in
inc
sub
dec
or
push
push
adc
popa
xchg
xchg
fcmovne
mov
imul
inc
and
test
sbb
and
ljmp
scas
sub
cmc
in
mov
lds
jmp
and
mov
cmpsb
pop
inc
jb
add
data16
xchg
jp
push
and
mov
sbb
in
xchg
cmc
int3
cli
pushf
mov
inc
cmp
dec
lods
pop
push
sub
inc
mov
cmpsb
rclb
sbbb
xchg
outsl
cmp
jle
inc
aas
js
cmp
imul
stc
mov
sbb
xchg
jg
cmp
push
mov
cmp
adc
jo
es
jb
inc
arpl
pop
mov
cmp
cwtl
xchg
xchg
xchg
sbb
jecxz
or
nop
lret
jo
dec
mov
add
popa
xchg
inc
pop
sbb
jle
repnz
icebp
cmp
decl
mov
dec
xchg
xor
dec
or
mov
push
ja
pushf
repz
pop
fcoml
mulb
pop
inc
notl
movsb
push
jb
fiaddl
inc
xchg
xchg
in
inc
fiadds
mov
arpl
mov
ret
pop
shll
in
dec
lret
jbe
push
adc
cmp
and
inc
aas
dec
pop
mov
ja
addr16
lahf
mov
es
push
scas
fsubs
push
sbb
pop
dec
pop
and
ror
xchg
stos
pop
pop
repz
shlb
in
hlt
lahf
xchg
lock
sub
inc
dec
arpl
orl
inc
push
cmpsl
adc
and
xchg
jo
xor
movsb
ds
push
push
and
mov
xchg
int3
xchg
dec
cmp
or
mov
sahf
addb
sbb
ret
ljmp
dec
popf
arpl
icebp
sub
out
stc
pop
mov
push
or
jp
idivl
sahf
jmp
inc
cli
pop
int3
and
loop
stos
cmp
ss
xchg
xor
shll
inc
adc
inc
test
mov
sti
cld
inc
xor
in
lds
xorb
cli
pop
pop
cmp
faddl
ss
sbb
pop
mov
aad
movsb
mov
nop
inc
inc
test
cwtl
jo
test
xchg
notb
cmpsb
aas
lcall
jae
popa
pop
nop
and
movsb
mov
mov
fiaddl
cmp
sub
lods
or
insb
mul
mov
push
in
xorb
xchg
push
xchg
pop
add
jle
mov
inc
cmp
and
inc
dec
loopne
mov
jb
js
popa
cmpsl
adc
mov
sbb
xchg
cmp
inc
jnp
jge
in
insl
sarb
data16
push
mov
ret
xorb
pop
hlt
arpl
sbb
movb
cmp
sbb
mov
cli
push
xor
cmpsl
mov
jb
popa
test
cmp
lahf
mov
test
andb
mov
in
inc
lods
in
ljmp
mov
pushf
pop
xchg
popa
fcompl
xchg
fcmovu
or
pushf
fiadds
or
inc
ss
stos
movsb
dec
xchg
xchg
or
pop
mov
jbe
test
mov
adcl
fstps
or
xchg
out
outsb
cmp
xchg
dec
adc
push
std
mov
mov
jo
in
pop
sbb
inc
push
push
xchg
gs
aam
cmp
nop
mov
cmpb
push
sahf
inc
push
pushf
pop
stos
ja
xchg
lds
mov
sub
lds
cwtl
test
outsl
bound
xchg
pop
add
mov
sahf
xchg
in
mov
sbb
ret
lret
inc
lea
fimuls
ficompl
mov
jo
leave
fwait
inc
ds
xchg
push
arpl
mov
push
dec
dec
xchg
or
inc
rclb
arpl
mov
dec
push
fwait
mov
dec
sbb
pushf
mov
cmc
jp
jp
in
dec
ret
push
pop
push
pop
sub
sub
aas
insl
fisubrl
mov
loopne
mov
dec
inc
sahf
and
push
arpl
fildll
cmp
mov
bound
outsb
and
lret
and
mov
popa
mov
sbb
aaa
xor
fistl
sub
mov
ficomps
sbb
or
pop
inc
and
jo
xchg
testb
push
adc
lods
loop
fcmovb
cmp
lcall
or
inc
pop
xchg
ret
mov
xchg
push
dec
mov
cmp
cmp
in
push
test
push
call
dec
xchg
mov
cmp
cmp
lcall
and
mov
jns
movsl
mov
and
and
data16
jo
orb
push
mov
subb
sbbb
les
out
jbe
mov
inc
mov
adc
cltd
pop
dec
sbb
push
jnp
fidivrl
sub
fisubs
inc
dec
jmp
jbe
lods
inc
inc
xor
out
ss
dec
dec
push
aam
jb
inc
arpl
shll
mov
test
stos
inc
pop
cmpsb
dec
dec
sbb
xchg
lock
ds
mov
mov
inc
popf
add
add
and
push
mov
stos
jl
push
pop
mov
xchg
sarb
push
sahf
in
sub
cmpsb
js
mov
les
sahf
mov
jge
dec
push
cwtl
jg
push
and
add
cmpb
push
mov
fdivl
xchg
and
stos
add
lcall
cmp
mov
aad
push
push
ljmp
dec
inc
mov
fldcw
imul
push
mov
lds
out
inc
mov
insb
rclb
push
ds
xchg
and
xchg
dec
mulb
sti
aad
xchg
mov
inc
and
aam
inc
dec
dec
add
sahf
push
sbb
pop
push
mov
arpl
xchg
jbe
and
popf
loop
dec
push
lret
sub
mov
pushf
inc
test
lds
inc
pop
pop
sar
lock
sbb
dec
out
inc
push
popa
push
inc
in
in
mov
mov
mov
adc
mov
inc
adc
push
addb
inc
adc
push
mov
pop
loop
loop
data16
fildl
xchg
js
sub
mov
popa
pop
mov
clc
push
mov
lret
test
inc
cltd
mull
lcall
add
arpl
aaa
sti
int3
pop
dec
imul
fiaddl
or
sbb
cmp
sub
incb
mov
insl
shl
test
gs
mov
daa
push
and
and
lds
cli
mov
cld
int3
int3
sbb
rolb
test
rcrb
cmp
cmpb
xchg
cwtl
mov
mov
push
cmp
fldcw
pop
mov
scas
pushf
inc
mov
push
int3
jne
mov
popa
je
in
mov
push
loope
jp
xor
mov
test
iret
in
ss
leave
cmp
jb
rcrb
cmpsb
cs
sbb
sbb
and
and
dec
loop
or
inc
sub
nop
push
ss
data16
and
cmp
dec
mov
mov
clc
jo
ss
mov
dec
or
xchg
stos
or
lock
mov
movsb
sti
push
push
pop
sahf
jle
mov
fs
jne
int3
int
xor
push
pop
arpl
mov
pop
mov
sbbb
mov
sub
and
inc
cltd
inc
int3
out
jb
and
push
mov
pop
ret
scas
sbb
inc
dec
mov
push
mov
les
inc
dec
lcall
test
dec
cmp
nop
mov
leave
push
mov
xor
cmp
mov
xor
popa
ss
test
mov
cli
mov
clc
inc
push
dec
pop
jbe
ret
addl
xchg
fimull
cmp
and
data16
mov
jl
xchg
push
addr16
in
cmc
push
push
push
mov
js
and
cmpl
jb
int
mov
push
cwtl
mov
scas
dec
testb
pop
xor
xor
arpl
ds
mov
jo
mov
fidivl
cmp
mov
std
dec
int3
xchg
pop
test
jb
outsb
jl
ficompl
xchg
mov
aad
jns
jl
aam
inc
js
shl
nop
push
out
sbb
jle
inc
bound
hlt
dec
or
and
mov
push
sbb
xchg
inc
push
in
call
sub
fstpl
dec
iret
xor
adc
push
cmpb
mov
xor
cwtl
sub
lcall
aad
sub
cmp
mov
mov
push
mov
gs
sub
mov
nop
mov
fcmovb
cmpsl
in
push
sbb
add
inc
es
sub
mov
es
cmp
mov
pop
xor
inc
cmp
inc
xabort
inc
cli
sub
jbe
mov
mov
inc
mov
xchg
call
outsl
test
pushf
jb
adc
sbb
sbb
inc
ja
shlb
mov
or
outsl
and
nop
mov
dec
stos
data16
jl
mov
pop
mov
loop
cmp
xchg
mov
add
ja
adc
loop
jb
adc
jg
aas
movsl
ss
add
push
or
pop
jnp
xchg
push
mov
inc
shrl
and
push
testl
cmp
orb
cld
subl
and
popl
insl
fidivl
mov
sub
sbb
dec
push
push
inc
mov
stos
mov
rorb
mov
test
mov
pop
xor
sbb
popa
test
ret
add
or
or
push
mov
sub
cmp
xchg
cmp
test
sbb
pop
mov
lcall
mov
push
ds
lret
mov
sbbl
adc
sub
inc
outsl
xor
jbe
sub
imul
cmp
jge
movsb
cwtl
lds
outsb
inc
and
loop
les
stos
inc
ja
inc
out
mov
push
inc
inc
orl
push
dec
mov
arpl
sbb
mov
adc
mov
push
fdivr
jp
std
loop
loop
xchg
and
mov
xchg
lcall
mov
mulb
dec
lahf
and
popa
mov
in
ss
xchg
in
test
xor
mov
pop
or
xchg
pop
aaa
mov
push
sbb
mov
mov
push
adc
dec
add
aas
mov
jno
out
inc
outsb
pop
test
inc
nop
mov
aad
add
mov
xor
sub
inc
fwait
cmp
mov
ss
mov
mov
fsubr
xchg
sbb
nop
xchg
ret
push
dec
dec
jo
and
out
out
arpl
outsl
sahf
mov
dec
xor
mov
outsl
pushf
push
sahf
push
je
sub
adc
lcall
mov
cwtl
xchg
add
and
pop
jnp
outsb
or
adc
aad
sbb
psrld
subb
ss
push
scas
push
arpl
or
and
xor
jnp
aad
jmp
nop
sub
cmp
or
faddp
sbb
xchg
scas
mov
inc
mov
and
pop
cli
leave
jb
mov
mov
pop
ljmp
lret
and
cmp
aas
mov
int3
nop
xor
cmp
fidivrl
xor
pop
js
mov
fildl
xor
push
jl
cmpsb
jb
jo
lock
xchg
jl
sahf
inc
mov
pop
push
and
rorl
orb
sbb
adc
cmp
mov
aas
xor
mov
arpl
shll
mov
xor
in
dec
jne
sub
sbb
push
into
imull
push
fidivrs
fcmovu
fisubrs
jbe
sub
sahf
inc
test
add
or
push
mul
push
mov
xor
push
push
cli
daa
fstps
movl
jo
mov
mov
cmp
push
inc
js
mov
outsl
mov
pushf
sub
addr16
cli
push
scas
and
xor
aaa
gs
xchg
push
push
jo
push
mov
cld
nop
inc
add
inc
pushf
push
or
enter
leave
pop
lds
sub
ret
push
push
and
cmpb
pop
cmpsb
xchg
lock
dec
inc
sbb
cmp
mov
stc
inc
mov
jns
inc
mov
mov
ficompl
cmp
sub
sbb
or
mov
stos
mov
call
inc
dec
inc
xchg
inc
je
andb
in
dec
mov
xchg
push
ret
test
mov
and
js
push
movsb
push
xchg
push
sbb
xchg
jbe
xor
int3
mov
cld
jo
cmp
es
jp
and
push
xchg
mov
mov
push
mov
mov
push
push
push
adc
pop
fisttps
and
jl
int
pop
push
pop
sbb
sbbb
pop
cmpb
pop
sub
loope
xchg
pop
clc
mov
fsubrl
arpl
mov
and
push
xchg
mov
xchg
sub
and
xor
xchg
and
ljmp
inc
xchg
dec
fidivrs
decb
int3
xor
mov
xchg
stc
jecxz
or
mov
dec
andl
mov
ret
sti
jl
arpl
lret
mov
xchg
cmpsb
in
and
xchg
push
arpl
pop
inc
mov
push
popa
pushf
xor
xchg
scas
sbb
movsb
insl
mov
cwtl
stos
push
test
mov
dec
inc
sbb
adc
sbb
adc
out
pop
sbb
inc
andb
in
and
inc
jg
and
test
lcall
inc
pop
pushf
xchg
ss
or
mov
and
xor
pop
pop
das
ds
and
nop
in
pop
mov
rol
sbb
jl
adc
xor
pushf
out
jmp
cld
gs
out
dec
dec
je
mov
aam
sahf
rcrb
xchg
fistl
clc
mov
dec
jno
sub
lods
adc
push
push
gs
inc
cmp
mov
jmp
xchg
in
xchg
jl
popa
sbb
cmp
dec
and
sub
push
pop
inc
test
mov
inc
aad
jmp
jbe
aaa
aaa
mov
jnp
cmp
sbb
mov
in
and
sarb
popf
jbe
cmp
sbbb
mull
xchg
sbb
es
popa
aam
loopne
mov
and
jo
js
in
jbe
jb
addr16
push
nop
pushf
inc
fldl
mov
pushf
jb
mov
dec
push
push
and
push
outsb
push
dec
dec
adc
or
push
popa
mov
out
jle
lock
push
addb
arpl
sub
push
inc
icebp
bound
mov
push
and
inc
inc
jp
imul
adc
loope
inc
fistpl
and
ds
lock
in
cld
xchg
fistpll
mov
orl
xchg
rolb
sub
scas
inc
sbb
adc
lods
in
pusha
nop
adc
imul
push
push
push
pop
pusha
mov
or
xchg
xchg
lcall
dec
jne
addr16
jle
std
dec
dec
adc
nop
inc
movsl
ret
xor
mov
test
lret
push
mov
mov
cmp
jl
jbe
pop
mov
dec
dec
arpl
ds
mov
jbe
push
jb
sub
push
sub
pop
xchg
or
xor
xchg
mov
mov
xorb
push
dec
push
out
adc
push
mov
dec
xchg
and
mov
jl
jp
scas
adc
mov
dec
or
pusha
in
cli
cmc
addb
mov
pop
negb
cwtl
ds
ss
push
and
mov
xchg
out
add
pop
add
jl
inc
adc
cmp
mov
sahf
adc
js
mov
jl
imul
mov
arpl
out
cmpsb
pop
mov
into
sub
frstor
and
push
insb
mov
es
mov
dec
lahf
xchg
aam
inc
inc
or
add
cmp
sahf
mov
and
pop
mov
cmp
and
inc
jg
lcall
mov
cwtl
sbb
cmp
inc
sub
xor
jnp
push
scas
add
xchg
xchg
cmpsl
dec
sbb
push
push
jle
addb
sbb
cmp
cmp
mov
and
gs
scas
push
pop
cwtl
push
xlat
sar
jp
adcl
ss
fildl
cmpsl
arpl
mov
mov
pop
mov
cmpsl
pop
sahf
pop
ds
pushf
dec
arpl
jb
xchg
inc
lret
repz
dec
in
sbb
cmp
xlat
les
jp
cmp
dec
movsb
sbb
imul
sbb
sub
cmp
push
icebp
lahf
and
inc
jb
inc
push
pop
push
cs
sbb
jb
and
cmpsl
xchg
mov
xchg
sbbb
jp
popa
dec
js
jle
es
push
pop
pop
mov
sahf
dec
cmpsl
adc
and
and
stc
in
push
bound
mov
mov
jo
addb
xchg
lret
andl
push
sbb
push
xchg
pop
loop
js
sub
push
and
dec
cmp
lret
lcall
xorb
sahf
and
sub
push
mov
jle
and
aam
pop
mov
ss
jbe
mov
lret
mov
outsb
mov
out
push
mov
pop
and
scas
inc
pop
lds
push
mov
dec
pop
fnstenv
popa
ficomps
jmp
aad
aad
loop
cmpb
nop
jb
sub
addr16
mov
jne
inc
lret
xchg
mov
test
bound
inc
sub
test
jns
push
inc
xlat
xchg
ljmp
sbb
fidivrl
adcb
xor
jle
dec
mov
mov
cmp
dec
andb
pushf
js
cmpsb
dec
push
nop
push
push
sub
xchg
mov
test
xchg
sbb
shll
jbe
sub
jne
adc
enter
cmp
jl
sbb
fcomps
adc
jne
imul
in
pop
test
int3
xchg
cmp
jb
subb
push
inc
cmp
fwait
jp
jo
push
ss
sti
nop
pop
add
outsl
sbbb
cmpsl
fisttpl
xchg
mov
pop
inc
imul
jle
imul
xchg
out
adc
cmp
scas
out
and
popa
sahf
jb
mov
pop
sbb
or
ret
mov
dec
subl
icebp
mov
sub
in
cmpsl
lcall
mov
xchg
jo
push
stos
mov
or
fldenv
repnz
es
push
ss
push
mov
pop
loope
xor
nop
jp
out
popa
xor
jb
jns
mov
xchg
and
lcall
arpl
scas
cmpsl
mov
push
adcb
pop
insb
push
inc
pop
dec
lcall
adc
sahf
add
or
test
and
clc
or
push
cmc
lcall
call
dec
add
pushf
cmp
and
add
lds
inc
sub
fbstp
push
outsb
inc
daa
ss
ds
jp
pop
fmulp
mov
cwtl
sub
pop
xchg
aad
scas
nop
mov
xor
rcrb
and
mov
jp
dec
push
test
adc
or
je
cltd
xchg
gs
ds
xchg
cmp
into
icebp
flds
push
sti
xchg
divb
inc
pop
jne
cmp
fwait
mov
aad
jmp
lahf
ret
xlat
push
movsl
xlat
adc
xor
aas
fadd
push
xchg
mov
out
pop
aad
add
push
aam
xchg
rclb
outsl
push
pop
out
in
lcall
mov
jge
dec
loop
inc
imul
pop
aaa
inc
rcr
mov
das
jb
mov
in
in
fdivl
xchg
and
je
push
sahf
aas
sahf
mov
push
popf
dec
je
pop
push
mov
test
ds
inc
sbb
fidivl
push
dec
inc
inc
pop
lahf
xor
mov
push
adc
inc
dec
and
arpl
push
inc
insl
mov
daa
ljmp
aam
add
pop
xor
jle
push
notl
sahf
add
data16
xchg
mov
mov
or
jne
stos
icebp
cld
and
pop
jno
or
push
jle
insb
sbb
cs
cmp
inc
and
jo
into
push
sbb
mov
rcr
push
ss
pop
xchg
andl
xor
adc
mov
dec
dec
inc
mov
pop
mov
adc
adc
inc
cmp
pushf
movsl
ficoml
ficompl
in
push
add
push
in
and
sbb
jo
loopne
inc
add
xor
mov
daa
shll
mov
rcr
mov
mov
add
jo
popa
mov
xchg
arpl
stos
pop
adc
mov
fwait
mov
lcall
xchg
cwtl
sahf
movsl
xchg
insb
mov
inc
pop
aas
mov
push
adcl
jbe
push
push
add
sahf
add
cmpb
xor
and
sbb
sahf
dec
mov
jns
loopne
loop
mov
sti
xlat
js
ds
out
ret
mov
out
jo
nop
jmp
push
pushf
ss
lds
nop
mov
rcrl
mov
xchg
in
dec
sub
push
xor
adc
test
dec
jp
int3
pop
push
dec
rolb
inc
loope
ds
dec
mov
inc
jp
test
gs
cwtl
mov
mov
or
pop
xchg
inc
sub
test
xchg
xor
dec
xor
cmp
clc
mov
xchg
dec
xor
aas
js
pop
orb
stos
jmpw
mov
enter
add
ds
mov
orl
mov
lcall
lcall
mov
sub
mov
rcll
and
and
aas
mov
cmp
xchg
dec
xor
test
push
cwtl
pop
xchg
pop
pop
mov
iret
ss
jle
daa
nop
int3
nop
pop
and
xchg
dec
sbb
ljmp
iret
xchg
xor
popf
push
mov
aaa
out
aam
cmp
inc
mov
mov
mov
jp
orb
lcall
jo
add
jle
jl
mov
ror
mov
push
and
pushf
add
dec
in
mov
repnz
sub
mov
push
push
cmp
sub
dec
and
dec
xchg
dec
je
push
lcall
fmulp
push
loop
adc
add
and
inc
rorl
xchg
and
cmp
lock
sbb
repz
les
cwtl
or
sahf
ja
mov
mov
adc
cmpsl
inc
pop
arpl
mov
in
sahf
adc
xchg
aad
push
push
mov
cli
dec
cld
pop
pop
and
js
push
jnp
push
pop
inc
aam
pop
mov
pop
cli
fld1
popa
addr16
dec
cs
push
push
jae
dec
cli
jb
jecxz
shrl
dec
mov
data16
sbb
arpl
adc
inc
jmp
pop
iret
out
mov
pop
dec
sbb
xchg
mov
or
jbe
push
lcall
push
pop
in
sub
xchg
inc
shl
rcrb
cmp
push
loop
mov
pop
dec
cmp
dec
clc
pushf
aam
inc
jl
push
adc
sbb
pop
push
ds
inc
arpl
push
pushf
sbb
stos
cmpl
jg
loop
and
fdivl
or
daa
mov
aam
dec
adc
icebp
nop
in
mov
xchg
xchg
pop
aam
inc
testb
js
sub
mov
or
scas
pop
xor
inc
stos
rcrl
adc
xchg
js
pop
jo
lcall
xchg
push
dec
mov
das
out
aas
addb
mov
popa
push
incb
pop
cmp
push
mov
mov
sbb
and
mov
cmp
lcall
mov
xchg
mov
dec
test
in
cli
js
fimull
push
dec
inc
lock
dec
aaa
push
adc
cmp
hlt
sahf
jg
dec
out
movsb
aad
dec
push
xchg
sarb
and
rclb
subl
xor
popa
sbb
inc
xchg
cld
mov
shlb
cmpsb
ficoml
cmp
mov
push
inc
rorb
dec
jnp
xchg
push
in
jo
xor
jb
inc
cs
push
hlt
mov
fidivs
dec
sbb
aad
fildl
fidivrs
jg
cmp
addb
inc
movsb
cmp
orb
loope
pop
ss
jbe
sbb
mov
stc
jmp
jecxz
xor
ss
pushf
push
popa
xor
sbb
fwait
loope
out
lds
pop
mov
leave
push
jl
inc
jne
cwtl
add
push
pop
int3
loope
dec
jae
and
jecxz
nop
xchg
jl
xor
xchg
add
dec
nop
in
loope
pop
jbe
pop
mov
mov
dec
outsb
pop
dec
addr16
mov
loope
pop
jb
cmp
add
push
jbe
jae
nop
pop
popl
jbe
movsb
cmp
dec
loop
dec
nop
lods
cli
inc
jns
lcall
jecxz
nop
jbe
dec
outsb
inc
inc
inc
pop
sbb
loope
icebp
sbb
mov
dec
cs
ljmp
pop
cmp
jge
mov
xor
aam
inc
xor
addb
lret
pop
and
jle
pop
dec
frstor
pop
ds
xchg
sahf
mov
cwtl
push
dec
lret
cmp
xchg
push
mov
mov
sbb
lahf
mov
popl
imul
push
pop
aam
lret
mov
pop
push
orb
jo
ret
push
jb
insb
in
nop
inc
cmp
jmp
nop
fadds
push
sbb
mov
sub
push
pop
or
movsb
xor
mov
pop
pop
das
dec
add
xchg
xchg
or
pop
inc
xchg
xchg
lods
sbb
sarl
lods
popl
fwait
mov
cmp
cmp
dec
pop
test
test
ss
lcall
popa
push
push
cmpsb
lahf
inc
jp
mov
stc
scas
clc
mov
push
sbb
or
inc
cmp
loop
in
mov
mov
ds
jbe
pop
xchg
push
lcall
js
mov
or
pop
cmp
js
or
xchg
push
js
nop
adc
popa
mov
aam
sbb
xchg
and
dec
mov
jle
dec
jl
push
cmp
ds
jo
dec
mov
mov
fs
mov
mov
inc
jle
cwtl
nop
outsb
or
jp
push
sbbb
fwait
arpl
push
and
mov
adc
pop
int
andb
push
push
cmp
ret
dec
and
mov
pop
pop
mov
jg
movsb
ja
xchg
test
mov
fiadds
mov
xor
pop
cmpsl
dec
mov
push
sbb
fsubl
test
lret
inc
pop
mov
jmp
push
and
xlat
push
cmp
fnstsw
jg
in
inc
inc
ja
push
ljmp
dec
cmp
lds
jl
movsb
xchg
psubusw
sti
dec
and
pop
movsb
mov
dec
mov
ret
jne
jle
mov
mov
pop
cmp
xchg
arpl
call
jb
sbb
pop
ror
sbb
jge
sbb
jbe
dec
push
push
sub
rclb
or
test
sbb
cmc
mov
and
inc
fdivrl
orb
ficompl
mov
hlt
stos
inc
sub
jb
push
inc
in
cmp
sti
jle
cmp
push
xchg
stos
xor
test
push
adc
into
int3
sub
ss
aam
cwtl
pop
cld
xchg
cmpl
popw
pushf
mov
pop
in
dec
add
pop
cmp
movsb
cmp
inc
rolb
sbb
sub
repz
pushw
inc
push
lds
in
and
lahf
aam
pop
cmpsl
aas
mov
movsb
jbe
mov
jl
cmp
xchg
pop
cwtl
sub
dec
sbb
sbb
movsl
mov
scas
and
arpl
mov
lds
add
shr
pop
shlb
call
add
inc
iret
push
gs
push
mov
xor
push
jg
sbb
popf
mov
out
and
sahf
stc
cmc
fidivl
lahf
cmpsl
pop
jle
sbb
jl
jno,pt
std
nop
mov
add
xchg
lcall
inc
lock
popa
sarl
xchg
mov
and
dec
xorb
aad
cwtl
leave
leave
negl
stos
mov
inc
push
dec
ret
jno
jl
ret
pop
dec
jo
xchg
ret
iret
out
shlb
mov
sbb
inc
inc
xchg
cmp
popl
or
push
fdivrl
repz
sbb
rorb
pop
mov
jp
and
mov
in
cmc
icebp
dec
loope
mov
pushf
and
pop
jl
mov
fisubl
cmp
and
mov
outsb
xchg
shlb
aas
movsl
or
xchg
push
lds
lcall
inc
cmpb
ds
ret
rcr
cmpsl
iret
xchg
lcall
sub
iret
jae
lret
repz
cmpsb
lcall
mov
push
pushf
and
int3
insb
pop
push
xor
test
xlat
push
inc
lds
sub
sahf
push
in
cmpsl
pop
ds
cmp
call
test
lret
inc
inc
and
test
adc
xor
cmp
or
inc
shll
dec
cmpl
ret
incb
add
mov
test
sbb
dec
dec
mov
pop
push
aam
inc
insb
mov
inc
cwtl
mov
dec
mov
cmp
pop
push
push
mov
adc
lcall
push
mov
lret
and
dec
add
ss
inc
push
inc
loop
xchg
out
push
mov
pop
pop
xchg
xor
dec
xchg
push
ss
mov
push
cmpb
cmp
add
je
or
fdiv
or
push
sarb
pop
cld
add
das
mov
pop
aaa
inc
aas
test
xor
rcll
adc
mov
xor
nop
and
push
dec
push
xor
xchg
ret
sbb
rcrl
inc
mov
or
cmp
dec
push
test
dec
xor
lret
or
cmp
mov
cmp
xor
jbe
inc
jmp
adc
mov
inc
push
xchg
xor
or
ret
dec
dec
stos
pop
xor
or
repnz
jmp
sub
adc
mov
popa
arpl
cmp
mov
popa
and
xchg
jno
adc
lods
xchg
or
imul
mov
push
jo
lods
dec
cwtl
inc
test
inc
mov
and
inc
pop
sub
sub
mov
mov
ds
sub
jbe
js
icebp
in
in
movsl
lock
xchg
sbb
pop
pop
mov
sbb
mov
push
vpaddusb
fwait
lds
test
outsb
jb
fiadds
popa
inc
mov
dec
xchg
ror
push
ret
nop
cmp
jecxz
cld
inc
repz
dec
cmp
adc
push
out
xchg
ret
sbbb
in
add
mov
in
mov
mov
lcall
loop
sub
inc
insb
mov
inc
adc
ss
cmpsb
xchg
push
and
push
and
adc
jl
pop
mov
jo
pop
mov
fistl
mov
scas
mov
notb
jmp
notb
jbe
mov
push
fsubrs
or
and
inc
outsb
data16
xchg
iret
fidivrl
xchg
mov
stos
nop
push
inc
mov
or
push
rcrb
push
push
push
lods
mov
lds
pop
jl
mov
rorb
fwait
lcall
cltd
cwtl
cli
and
aam
dec
push
pop
push
fs
sub
ss
xchg
movsl
aaa
and
and
inc
push
lock
push
jo
push
in
jb
jmp
sub
sub
dec
sub
cmp
sahf
ss
xor
cmpsb
in
mov
mov
sub
pop
shrb
enter
aaa
xchg
inc
fs
adc
xchg
cmp
jbe
lods
cmp
mov
dec
imul
inc
leave
push
mov
movsb
sub
arpl
sbb
cmpsl
jns
jl
lds
mov
mov
sti
lds
cltd
inc
push
xor
pushf
fistpl
fsub
cmp
fsubrs
lock
ret
sbbb
sbb
push
bound
enter
mov
pop
add
add
sbb
insl
jp
xchg
and
popl
inc
ss
or
dec
pop
movsb
mov
rcrb
inc
inc
xchg
out
xor
dec
es
sahf
pop
inc
aad
mov
dec
cmp
andl
push
or
or
push
push
xorl
push
stos
and
inc
popa
dec
fidivl
cmp
xchg
cld
cwtl
stos
mov
sub
fidivrs
cs
insl
sub
fwait
andb
nop
mov
cmpsb
out
push
cmp
cld
lcall
sbb
xchg
lahf
sbb
xchg
or
ss
nop
imul
mov
scas
rclb
mov
xchg
into
sbb
jnp
adc
rorb
xchg
jp
push
inc
add
sbb
inc
push
lcall
mov
mov
lods
lds
mov
out
fidivl
dec
cwtl
inc
mov
aam
test
xchg
jp
lahf
and
add
pop
sbb
lea
sub
and
mov
popl
xchg
or
xchg
or
push
ret
ds
xchg
cmp
lcall
sub
mov
inc
mov
and
inc
gs
jb
xor
mov
lcall
pop
dec
adc
mov
inc
loop
call
jnp
cwtl
inc
cwtl
xchg
pop
rolb
inc
mov
jmp
dec
inc
dec
push
lcall
push
aam
nop
inc
leave
add
mov
and
fwait
cmp
mov
xlat
xchg
adc
mov
xchg
aam
js
cmp
dec
cmpsb
scas
mov
mov
cmpb
push
xor
inc
pop
scas
lcall
dec
or
dec
ret
jl
inc
push
mov
inc
fs
cmp
inc
cmp
pop
jo
sub
cli
cmp
or
push
push
ja
push
faddp
shrb
dec
push
inc
lcallw
inc
cmp
imul
cli
fucomi
adc
and
pop
xchg
mov
test
jl
rol
sub
sbb
jp
push
jg
popa
pop
cli
adc
into
and
andl
push
mov
fidivrl
dec
fsubs
sub
sbb
fisubs
cmp
jb
jo
push
out
push
jmp
stos
ss
jne
ret
popa
xorb
xchg
push
mov
cmp
jge
pop
js
inc
sbb
popa
mov
dec
jmp
pop
jle
and
push
cmpsl
mov
inc
and
push
in
jo
mov
sarl
dec
xor
in
lret
cmc
jle
sub
pop
mov
xchg
daa
xor
jp
cmpb
sahf
mov
or
sbb
sbb
inc
push
lock
decb
arpl
and
jl
pop
mov
out
or
adc
movsl
cmp
jmp
movsb
outsl
inc
push
inc
push
gs
mov
push
dec
mov
js
fimull
jle
jbe
cs
pushf
add
jg
and
es
xchg
int3
dec
pop
jo
mov
push
lds
sbb
stc
inc
push
cli
pop
sub
jle
pop
imul
fbstp
roll
sub
inc
dec
mov
or
dec
sahf
insb
rclb
push
rolb
mov
arpl
mov
gs
push
inc
dec
or
xchg
adc
imul
mov
cli
push
mov
dec
jo
cmpl
mov
mov
dec
pop
push
and
mov
pop
cmp
and
aad
out
jne
nop
push
cmp
mov
les
push
add
inc
mov
ss
or
pop
and
add
dec
pop
mov
idiv
idivb
add
lds
dec
sbb
test
cwtl
xchg
mov
and
leave
mov
sbb
pop
rclb
cwtl
mov
add
ds
adc
out
cmp
xlat
mov
mov
mov
lds
in
sahf
mov
ja
dec
cmp
faddl
scas
imul
test
cltd
aas
rcrb
mov
dec
int3
sbb
xchg
mov
push
pop
outsb
dec
cld
gs
pop
jl
mov
dec
pop
xor
sahf
and
rcr
jb
jg
push
sbb
cmc
mov
mov
mov
ret
jns
nop
pop
aas
fiaddl
mov
inc
jns
and
sbb
pushf
popa
xchg
push
pop
mov
inc
stos
inc
cmp
dec
mov
arpl
js
orb
test
jnp
cmp
fwait
inc
aad
adcl
jbe
inc
sbb
push
push
ret
loopne
pop
inc
aam
mov
loop
jb
dec
jo
arpl
jns
fdivr
xor
and
in
jb
mov
fwait
push
shll
and
xchg
ror
push
mov
cmp
mov
mov
lods
mov
gs
push
arpl
repz
pop
push
mov
popa
inc
jp
inc
xchg
rcl
pushf
dec
mov
mov
or
std
aas
hlt
mov
xchg
mov
sbb
cmp
xor
pop
jle
cmpb
in
dec
dec
mov
movsb
ss
pushf
scas
dec
ljmp
pop
cmpl
sbb
outsb
pop
push
shl
mov
arpl
cwtl
mov
mov
jl
aaa
inc
loop
ljmp
and
cmp
data16
fistl
and
cmp
inc
jbe
rolb
repz
cmpsb
in
push
lret
push
js
test
cld
lods
jmp
out
adc
xchg
mov
scas
pop
sahf
test
push
js
sub
push
push
sbb
inc
pop
inc
mov
adc
push
jo
jle
pop
and
ja
mov
mov
testb
lods
push
inc
sbb
std
outsl
xor
jl
lret
mov
addb
shlb
push
pusha
mov
into
xchg
pop
jnp
adc
mov
rcrb
and
jmp
inc
imul
test
mov
out
cwtl
les
xchg
ds
pop
and
xor
pop
mov
jg
xchg
jb
pop
mov
jmp
mov
inc
adc
movsb
jmp
sub
push
or
dec
sbb
test
xchg
xchg
add
jb
add
mov
stos
lret
push
push
loop
cmp
sbb
movsb
cwtl
and
iret
mov
inc
ss
andb
lds
xchg
push
iret
push
jl
mov
int3
out
inc
adc
data16
mov
subb
in
lcall
gs
movsb
inc
negl
gs
or
pop
dec
mov
mov
jb
xchg
cmpsb
or
jo
out
test
add
mov
js
inc
divb
sbbb
and
repnz
inc
push
jne
dec
pop
pop
sbb
mov
inc
and
push
stc
jb
lcall
push
mov
push
xchg
insb
jg
popa
stos
in
mov
cmp
mov
push
pop
xlat
push
movsb
mov
xchg
inc
ss
mov
shrb
jo
lds
mov
rclb
aaa
mov
pop
mov
pop
inc
xchg
aad
cmp
fcoml
cmpsl
fcoml
inc
push
dec
sahf
cmp
jle
out
dec
jb
mov
mov
and
call
movsb
sbb
ds
dec
nop
sbb
or
pop
sub
and
hlt
inc
and
sbb
stos
and
nop
push
inc
bound
sub
or
mov
mov
jb
mov
sub
xchg
mov
loope
push
out
adc
mov
cwtl
add
sub
lcallw
cmp
xor
jmp
out
out
and
cmp
inc
push
dec
inc
cwtl
ss
dec
mov
ficoml
ds
xchg
jle
jle
mov
pop
in
cmc
jno
lret
out
jle
push
pop
inc
pop
nop
je
push
fidivrl
add
sahf
mov
xor
imul
sub
push
mov
pop
dec
cmpsb
outsb
inc
push
sbb
inc
cmpxchg
imul
iret
dec
insl
lock
or
loop
push
ror
cmp
inc
and
insb
and
xlat
lds
sbb
xchg
xchg
movsb
fimull
loop
ljmp
leave
rcll
mov
imul
lea
cmp
fiadds
out
and
dec
and
xchg
fidivrl
pushf
in
fwait
dec
cmpsb
and
jp
movsl
and
vandnps
cli
xor
inc
ficoms
aaa
fidivl
mov
push
pop
ljmp
mov
xor
xchg
sub
inc
adc
nop
mov
ja
call
stos
push
jle
movsl
mov
mov
jbe
outsb
sahf
addr16
arpl
fnsave
dec
dec
or
pop
pushf
pop
ss
inc
xor
fwait
mov
inc
outsl
dec
inc
cmp
dec
xchg
lcall
inc
sbb
test
lds
cli
mov
adc
xchg
dec
push
cmc
stos
jb
testb
jo
loop
cwtl
xchg
jnp
sbb
dec
dec
and
ss
popa
sub
mov
mov
shlb
out
dec
adc
add
loop
mov
inc
pop
push
lds
add
movsb
push
adc
aaa
or
jbe
fcompl
jae
mov
sbb
jle
mov
inc
jl
aad
dec
arpl
mov
add
sub
outsb
push
jle
xchg
mov
xchg
shll
and
lds
sbbb
cwtl
add
idivb
sub
pop
pushl
in
mov
jo
mov
dec
hlt
inc
pop
xchg
addb
mov
adc
pop
pop
xchg
jp
pop
lea
mov
lcall
push
sti
ljmp
xchg
xchg
push
shlb
push
adc
nop
pop
iret
loop
mov
ss
out
adc
and
sbb
sbb
mov
sub
mov
pop
mov
jle
jmp
mov
xchg
mov
dec
nop
loope
cs
ds
inc
or
xor
jo
push
and
imul
adc
pop
lcall
push
pop
mov
pop
sbb
xchg
stos
adcl
movsb
inc
push
jl
mov
mov
pop
or
inc
mov
cmp
in
lods
int3
and
aam
enter
mov
jge
dec
movsl
xorl
mov
push
inc
arpl
inc
ss
push
inc
push
mov
xchg
mov
push
sbb
inc
stos
pop
dec
xor
daa
mov
cmp
cli
cmp
xchg
ds
ja
je
cmp
sub
mov
stc
xchg
test
mov
stos
inc
mov
xchg
adc
lret
sbb
cmpl
mov
dec
ss
push
es
jp
mov
mov
pop
pop
push
jl
dec
mov
sbb
push
insl
and
cmp
test
mov
push
mov
dec
and
mov
orb
cmp
pop
scas
xchg
mov
sbbb
jbe
arpl
ljmp
push
dec
imul
in
push
loop
les
jnp
mov
jbe
faddp
ret
push
adcb
mov
arpl
cmpb
sbb
nop
sub
outsl
mov
dec
push
xor
pop
cmp
arpl
aam
jl
add
sub
inc
push
sub
adc
repnz
inc
mov
mov
nop
and
sub
jb
sbb
cmpsb
mov
or
xchg
xchg
pop
imul
out
jo
lcall
push
mov
lahf
and
jl
lock
mov
push
in
pop
pushf
and
fidivrl
aam
jl
test
setnp
xlat
adc
and
test
and
lret
dec
dec
jl
fsubl
aas
cmpsl
test
mov
pushf
nop
pop
mov
or
push
xchg
sbb
mov
add
addb
outsb
inc
int3
sbb
in
jmp
stos
inc
rclb
cwtl
and
js
or
xchg
push
mov
adc
ss
jb
pop
daa
push
push
inc
lcall
mov
aaa
es
nop
mov
mov
fimuls
cli
and
xchg
push
clc
push
mov
out
loope
cld
movsl
mov
dec
and
daa
xchg
pop
in
dec
mov
pop
popa
mov
push
aas
sbb
gs
test
divb
xchg
clc
subb
mov
pop
mov
xlat
jge
sbb
push
cwtl
inc
clc
sahf
jl
sbb
push
mov
jbe
movsb
dec
shlb
int
inc
inc
lds
xor
xchg
jbe
movsl
les
mov
dec
inc
or
mov
in
jg
ja
dec
push
pop
dec
adc
xchg
lcall
mov
mov
negb
sub
sbb
movsl
fisubrs
xor
sahf
scas
jns
insb
ja
mov
sbb
nop
xchg
inc
mov
test
jl,pt
mov
push
out
push
out
mov
and
push
aam
mov
aaa
shr
and
pusha
rolb
gs
push
outsb
pop
push
lcall
xchg
jle
mov
mov
jp
push
setle
iret
in
mov
testl
pushf
pushl
pop
dec
inc
mov
dec
sahf
push
dec
xchg
rolb
pop
shr
movsb
and
push
inc
fs
mov
notl
add
movsb
push
lods
mov
jae
test
test
dec
dec
adc
cli
pop
xchg
sub
mov
xchg
addl
push
loope
pmullw
sarb
in
xchg
xchg
cmp
xor
sbb
es
cmp
bound
es
mov
pop
inc
mov
dec
dec
jl
push
icebp
adc
inc
and
sbb
add
pop
test
and
andb
out
cmp
and
sub
mov
scas
in
jl
fisubs
cmpsl
or
mov
pop
sahf
orb
sub
out
popa
test
les
aas
or
fldenv
rorl
mov
mov
xchg
or
push
or
dec
fdivrl
and
fstpl
out
add
lret
lcall
cltd
mov
dec
dec
jb
cmp
pop
outsb
pop
pop
mov
mov
cmc
scas
inc
inc
leave
movsb
dec
xchg
test
push
in
add
sahf
data16
sbb
xchg
inc
jb
sub
insl
lcall
mov
jle
std
js
mov
jnp
in
xchg
push
sbb
call
sbb
lret
jbe
or
cmp
mov
stos
and
outsb
push
fwait
or
dec
test
add
mov
mov
nop
xchg
cltd
jge
aaa
mov
mov
out
pop
in
mov
cli
test
lret
or
ds
pop
xchg
and
pop
ds
ficoml
les
cbtw
mov
pop
cmp
lret
pop
push
pop
inc
xchg
dec
lds
inc
decb
aam
sahf
lret
sub
dec
adc
jmp
mov
mov
dec
cmpsb
jo
and
add
inc
inc
leave
push
cld
push
and
mov
test
jbe
bswap
sbb
mov
sbb
xchg
dec
push
add
icebp
mov
xchg
mov
addr16
push
fidivl
fiaddl
mov
movsb
and
mov
scas
dec
insb
mov
add
push
adc
nop
test
stos
cmp
sbb
sub
test
addb
dec
sbb
jp
xchg
dec
jb
sub
cmp
lcall
adc
movsl
mov
jnp
sarl
pop
cmpb
ret
test
sub
std
pop
inc
shlb
mov
mov
popw
inc
and
loopne
xchg
std
inc
pop
cmp
popa
in
jo
sahf
rcll
lea
lgs
rolb
call
cmpsb
call
ljmp
jmp
cmp
fcompl
aam
or
or
push
out
mov
adc
pop
shlb
repz
out
js
push
and
insl
ret
inc
addb
clc
iret
mov
inc
jl
pushf
popa
mov
xchg
and
dec
mov
jno
xor
sbb
pop
dec
fmuls
mov
mov
and
pop
push
in
pushf
cmpsb
sbb
adcb
mov
mov
lcall
xchg
mov
ds
les
js
and
test
fisubrs
cwtl
push
ficompl
jp
fidivrs
popa
cmp
push
mov
mov
pop
xchg
gs
jbe
les
faddl
arpl
leave
lret
mov
push
cld
inc
pop
imul
es
andb
dec
lods
aam
push
pushf
xchg
nop
stos
nop
push
stos
mov
iret
sbb
pop
push
ja
mov
sbb
xor
mov
cmp
push
add
addb
and
adc
js
pop
pusha
loope
push
fldt
dec
pushl
gs
icebp
ja
out
cmp
inc
push
dec
inc
test
into
sub
es
mov
movsb
inc
inc
outsl
je
pop
inc
mov
stc
fstpt
notb
and
pop
inc
sbb
cmc
push
mov
aam
pop
pop
shrl
and
or
push
lods
xchg
cmp
outsl
xchg
and
ja
ficoms
adc
push
sbb
test
mov
inc
cld
mov
pop
int3
xchg
pop
out
mov
adc
inc
push
inc
push
jo
mov
stos
dec
add
push
xchg
scas
jo
fcmovnb
ficompl
sbb
aaa
inc
cmp
fwait
cmp
daa
xchg
out
imul
addr16
pop
xlat
aam
jbe
loopne
push
mov
mov
push
dec
sbb
adc
adc
or
mov
notb
or
jbe,pt
mov
push
ds
and
iret
mov
mov
jmp
inc
sbb
pop
mov
xchg
ret
xchg
jb
lods
shrl
pop
jge
scas
mov
std
push
shr
jl
push
and
sbb
dec
push
fs
roll
xchg
mov
push
pop
dec
daa
xor
in
push
lds
sbb
mov
dec
outsl
ss
inc
notl
pop
out
scas
loope
mov
sbb
sahf
lcall
aad
rorb
dec
xchg
jb
jb
adc
incb
sbb
xor
inc
iret
into
inc
and
jo
jg
jp
icebp
jl
mov
push
aaa
sbb
push
inc
xchg
jo
out
dec
roll
inc
cmpsb
leave
push
jbe
lcall
jb
jnp
clc
sbb
les
lcall
sbb
mov
mov
pop
enter
xor
mov
movsb
adcb
push
push
xorb
mov
push
mov
mov
dec
shr
jb
int3
testb
jl
aas
add
mov
sbb
push
stos
in
sub
adc
inc
mov
ss
mov
inc
xor
sub
xchg
pop
pop
mov
mov
sbb
mov
rcl
dec
fwait
inc
xchg
lcall
pop
rcll
jp
pop
js
outsl
adc
cmp
cwtl
add
shlb
scas
cmp
and
pop
cmp
or
subb
ds
inc
out
rcrl
adc
jmp
test
imul
mov
data16
push
orb
test
stc
add
mov
fistps
pushf
cmp
xchg
xchg
subb
mov
notl
jb
xchg
lret
cmp
xorb
push
add
sbb
fs
orb
mov
inc
movsl
inc
repnz
es
stos
push
or
mov
inc
mov
push
xor
mov
xlat
push
in
sbb
inc
in
xchg
cli
icebp
cmp
xor
add
pop
mov
nop
inc
andb
or
mov
mov
decb
dec
pop
mov
dec
addb
jge
repz
sbb
subl
or
stos
cli
into
cmpsb
mov
inc
pushf
pop
jl
pop
xchg
orb
cmp
movb
lea
dec
pushf
add
jmp
rorb
cli
ret
fbstp
inc
nop
cmp
cs
mov
mov
push
and
ds
sbb
sub
jb
insb
mov
sbbl
iret
mov
xchg
mov
xor
and
push
xchg
push
xchg
push
aad
lea
xchg
mov
ret
push
dec
pop
cwtl
sahf
imul
ds
cmpsb
filds
push
jge
adc
subb
push
mov
xchg
xchg
out
jbe
lret
lods
jp
inc
stos
cli
dec
ret
cs
cmpl
pop
cmp
xchg
inc
lcall
pop
jp
sbb
pop
ficoms
lcall
mov
mov
rcl
mov
cltd
js
popa
dec
inc
and
xchg
xchg
push
push
or
subl
lcall
sub
das
loopne
mov
std
test
push
pop
sbb
pop
mov
ret
loop
in
cmpsb
fildl
xchg
cmp
ds
ffree
inc
xchg
and
push
xor
add
xchg
test
ds
test
jbe
jo
xchg
ror
test
in
dec
mov
lcall
outsb
movsb
and
popa
xor
xor
push
pop
inc
popf
daa
xchg
mov
out
sahf
dec
jp
ret
and
pop
iret
mov
test
inc
push
xchg
insl
in
dec
fmull
cmp
sub
push
inc
ret
mov
add
inc
adcb
mov
sahf
dec
push
rorl
push
shll
push
cmp
movsb
iret
adcl
daa
insb
arpl
mulb
xor
push
xlat
aas
int3
inc
xchg
in
faddl
lret
mov
nop
adc
ret
inc
inc
push
xchg
mov
xor
add
dec
mov
cmp
dec
mov
call
mov
loop
sbb
mov
rcrl
push
stos
fimuls
push
out
mov
xor
aad
push
and
sar
sub
xchg
stos
adc
mov
ja
push
jo
mov
push
test
xchg
lods
int3
ds
push
jle
fdivl
mov
repnz
cmc
inc
and
cwtl
pop
push
cli
sub
rclb
movsb
decb
mov
pop
js
mov
outsl
push
ficompl
fdivs
sub
fcompl
inc
cmp
into
mov
mov
cmp
js
mov
stos
mov
inc
mov
mov
inc
fwait
je
adc
fmull
jne
mov
sarb
jb
lret
gs
push
inc
fmull
cmp
ja
inc
sbb
push
js
in
push
mov
loope
xchg
sub
pushf
mov
pop
adc
sbb
xor
cs
xor
cwtl
push
movsb
and
andnps
pop
mov
inc
dec
jl
xchg
mov
sahf
cmp
jbe
insl
insb
mov
xchg
ja
pop
mov
xlat
andb
ret
orl
adc
xchg
rcll
adc
push
ss
aad
jbe
fcompl
xor
nop
dec
cmpsb
jne
push
push
pop
cltd
out
jl
dec
ret
dec
bound
xor
push
sbb
jbe
inc
cmp
cmp
popa
xchg
mov
add
rorb
les
pop
mov
insl
jbe
popa
lcall
ret
out
or
sbb
aad
lds
mov
inc
inc
mov
cmp
dec
mov
jmp
pop
mov
sbb
dec
fs
and
mov
xor
lds
scas
cmp
lods
aam
and
push
push
sub
pop
cmp
adc
sbb
in
push
mov
and
adc
and
add
and
push
push
rolb
andb
jbe
dec
in
jle
cmp
xchg
adc
repnz
jp
pop
mov
xchg
aas
ss
xchg
cld
inc
xchg
scas
lds
push
and
arpl
leave
scas
stos
pop
and
or
cltd
push
inc
inc
push
push
insl
enter
imul
dec
cmp
mov
xchg
std
sbb
shlb
xlat
cmc
les
aaa
movsl
les
dec
daa
ret
cwtl
rcrb
sub
dec
jb
notb
pop
and
push
imul
jne
test
arpl
and
mov
rcr
xchg
xorl
aam
jbe
push
shl
dec
popa
addl
cmpsl
or
and
sub
mov
ss
xchg
and
loope
loop
sbb
mov
ret
es
cmp
cmp
push
aas
pop
xchg
bound
inc
cmp
jg
cmp
sub
or
scas
and
xchg
sbb
jb
fcmovne
inc
lcall
xchg
xchg
fnstsw
lcall
adc
pop
sar
add
dec
push
stos
ss
and
jbe
inc
test
adc
pop
jle
int3
movsb
jb
mov
inc
cwtl
sub
xor
cmp
xchg
cltd
arpl
out
ds
popa
ret
sti
je
mov
xor
das
xchg
dec
and
mov
sub
in
aaa
int
rolb
xchg
fdivrl
jo
lret
jmp
pop
jb
sbb
aam
pushf
mov
adc
dec
xchg
decl
jmp
jbe
push
cli
sbb
cmp
popf
xchg
jp
jge
mov
pop
sub
cmp
push
xor
ljmp
sahf
sbb
jl
les
js
xchg
or
dec
mov
pop
cmp
jno
xchg
sahf
mov
xor
inc
jge
inc
lcall
mov
mov
clc
test
mov
jns
lahf
mov
inc
jle
outsl
rorb
iret
or
cmpsb
movsb
mov
ss
adc
sbb
nop
sub
je
jb
mov
push
push
pop
push
mov
fildl
stos
test
mov
rorb
dec
inc
jl
xlat
and
in
cmp
shr
nop
mov
mov
mov
test
daa
pop
dec
orl
decl
aad
lock
mov
subb
mov
sahf
mov
test
shr
dec
cmp
pop
sbb
sub
jbe
push
arpl
mov
mov
push
mov
mov
stos
addb
mov
jbe
in
test
jo
xor
sahf
scas
push
pop
dec
es
inc
xchg
mov
inc
incl
cs
rorb
push
adc
push
aam
xchg
cmpsl
add
popa
mov
hlt
dec
push
mov
inc
push
mov
scas
push
mov
jg
mov
addr16
xor
loop
mov
mov
sbb
js
insl
push
sub
jmp
into
rcll
int3
xchg
dec
orb
jae
sbb
sbb
js
in
mov
sbb
sub
pushf
jmp
or
les
push
sbb
cmp
xchg
jl
mov
or
jbe
dec
pushf
dec
jb
test
mov
popl
aaa
cmp
cmp
adc
sub
dec
mov
xchg
cmp
add
inc
inc
jmp
repnz
inc
movsb
jg
or
mov
rclb
roll
inc
cmp
inc
sbb
jp
icebp
imul
test
je
pop
aaa
dec
inc
je
jmp
jle
mov
maxps
jg
rorb
adc
lcall
nop
push
cwtl
dec
lret
and
mov
ljmp
shll
mov
push
and
or
jns
xor
sbb
cli
and
sbb
shlb
xchg
pop
mov
jb
xchg
movsb
pop
mov
jo
inc
dec
adcl
sbb
and
dec
inc
and
ds
and
jo
sbb
in
sahf
jb
or
push
xor
test
adc
sbb
nop
test
inc
mov
out
je
and
call
push
inc
sub
inc
clc
inc
push
sbb
lahf
xor
xlat
cli
jp
in
sbb
pop
mov
push
and
movsb
push
mov
ja
aad
movsl
jge
mov
mov
push
sahf
shrl
push
iret
pop
test
and
mov
jb
mov
aam
adc
inc
mov
cwtl
inc
pop
cli
cmp
push
aam
and
test
sbb
push
leave
cmp
cmp
leave
clc
pop
xor
mov
adc
inc
lcall
fs
arpl
lods
dec
lret
push
in
cmp
mov
add
and
mov
cmp
ds
sahf
lcall
mov
or
pop
rcr
xchg
aas
jg
jle
or
inc
in
mov
inc
push
jns
add
mov
gs
xchg
pop
sbb
mov
ds
dec
and
nop
xchg
mov
or
daa
aas
mov
push
pop
fiaddl
ret
int
dec
addb
inc
popa
rorb
push
inc
nop
sahf
sub
adc
lods
jle
je
add
aad
ss
lock
repz
and
js
sbb
or
movsb
outsl
sbb
arpl
test
in
rclb
cli
pop
pop
into
outsb
push
pop
shll
and
mov
mov
ljmp
mov
ret
add
sub
insb
nop
sbb
xor
popa
xor
xchg
cwtl
xchg
sahf
and
pop
xchg
lcall
and
xchg
in
cmp
fldenv
push
test
testl
inc
fiaddl
cwtl
jp
sbb
adc
mov
jmp
push
or
xchg
cmp
pop
push
dec
and
xchg
data16
sbb
dec
and
sbb
lret
mov
xchg
inc
or
scas
and
jle
in
jb
cmp
fcoms
jg
dec
mov
xchg
stc
and
shrb
data16
out
cmp
pop
inc
pop
test
xchg
mov
lcall
popa
xor
nop
or
or
rol
repz
popa
mov
mov
imul
jle
sub
push
test
push
lock
js
bound
and
xor
mov
stos
jle
clc
cmpsl
xchg
xchg
push
adc
pushf
and
in
jp
mov
ljmp
test
gs
xchg
movsb
xchg
adc
into
or
dec
and
xor
push
inc
bound
inc
push
imul
lcall
aas
fistl
jl
rcrb
iret
ja
push
add
jae
test
and
clc
mov
pushf
xchg
inc
dec
sbb
out
xchg
nop
mov
xchg
std
pop
add
aaa
jne
add
sub
call
add
pop
mov
add
ret
popa
mov
cmp
mov
fidivrs
mov
push
sub
inc
inc
shlb
rclb
push
inc
xchg
push
xchg
mov
add
retw
pop
or
jle
sahf
inc
cmp
pop
popa
pushf
dec
push
jb
in
imul
sub
popf
stos
jbe
pop
mov
inc
inc
mov
mov
mov
fbstp
nop
jl
pop
push
xchg
jo
or
push
pop
jp
jbe
mov
pop
and
jg
cmpb
inc
mov
push
sbb
fbld
out
aad
jmp
flds
sbb
xor
fmull
in
mov
mov
into
jae
jbe
test
push
nop
pop
mov
adcl
data16
jo
inc
jle
lds
mulb
mov
or
push
jbe
xchg
test
dec
out
jmp
mov
adc
mov
gs
pop
jle
push
adc
mov
xchg
js
and
pop
adc
dec
in
ja
movsb
aad
imul
imulb
mov
cld
push
mov
or
mov
dec
sbb
mov
cmpsl
pop
popa
mov
push
inc
inc
icebp
mov
jle
xor
push
movsb
xchg
push
or
cs
push
mov
sub
jb
es
dec
inc
jne
mov
xor
add
scas
ljmp
inc
dec
mov
sbb
cmp
xchg
mov
push
out
imul
test
jae
push
or
pop
mov
stos
lahf
sub
mov
movsb
gs
test
pop
push
insb
cmpsb
scas
pop
jp
dec
mov
lcall
xorl
cwtl
push
push
pop
or
mov
and
jp,pt
mov
mov
and
dec
jae
xchg
or
test
add
mov
sbb
dec
inc
jne
jo
jne
ja
fwait
and
lcall
rcrb
push
pop
push
inc
das
dec
dec
jo
movsb
xchg
pop
mov
rcrl
dec
inc
andnps
jle
adc
mov
loopne
adcb
xor
xchg
addb
jle
jnp
test
xor
inc
pop
gs
jl
xor
and
out
xchg
push
mov
sbbb
and
cmp
and
jmp
xchg
bound
or
mov
aad
jnp
out
mov
mov
test
out
inc
fistl
xor
mov
and
cmp
mov
movsb
out
test
js
cmp
add
sub
fdivl
ss
rcl
sbb
sar
adc
sub
lds
icebp
mov
cwtl
lea
les
mov
mov
jl
sahf
adc
jle
xor
sub
jb
mov
inc
inc
sbb
mov
dec
mov
clc
ss
push
pop
fwait
cs
dec
roll
mov
jbe
out
outsb
inc
movsb
or
mov
movsb
arpl
pop
jle
pop
lahf
popa
push
cli
jle
add
mov
inc
sub
mov
pop
cmp
popa
cmp
lcall
mov
inc
xor
xchg
ret
push
pop
push
sahf
or
jge
rol
ret
ljmp
scas
sbb
rcrl
lret
dec
push
test
xor
mov
fdivrl
ret
test
push
jb
cmp
aas
fldenv
test
iret
mov
sbb
out
pop
xor
pop
nop
lcall
xchg
mov
lds
mov
mov
negl
and
xchg
jmp
and
cmp
cmp
cmp
push
sbb
jno
cmp
ficomps
xlat
add
mov
ja
pop
sbb
mov
lret
clc
andl
jle
fxam
xor
test
inc
cmp
fidivs
dec
and
sbb
adcb
pop
xor
and
sbb
aad
cmp
add
push
sahf
test
adc
jl
dec
jnp
push
jl
pop
mov
mov
and
xchg
sbb
dec
and
push
adc
mov
push
lds
cmp
push
adc
aad
add
andl
or
movsl
sub
nop
inc
fisubrl
dec
test
xchg
rorb
lahf
jmp
dec
and
pop
mov
inc
scas
push
inc
outsl
adcb
jae
test
or
or
shlb
out
mov
add
rolb
jp
test
stos
pop
push
lods
push
or
jp
popa
cmp
and
push
mov
cmp
icebp
dec
es
nop
cmp
xchg
popa
dec
orb
inc
pushf
sbb
aaa
pop
jbe
cmpb
test
pop
ror
xchg
xor
mov
cmp
pop
sar
and
jae
rclb
or
xchg
mov
add
push
jb
es
sarl
xchg
pusha
sbb
inc
mov
push
xchg
mov
arpl
fcmovne
jp
mov
arpl
cmp
out
nop
jl
cmpsl
dec
push
cmpb
dec
pop
aaa
adc
bound
inc
adc
ror
mov
inc
mov
push
inc
loop
dec
jle
or
cwtl
push
push
mov
add
add
out
pop
push
orb
std
cmpsb
xor
and
cmp
mov
and
mov
inc
test
movsb
cld
in
push
sub
xor
inc
and
push
sbb
arpl
mov
mov
mov
push
loop
inc
nop
xchg
test
xchg
out
inc
mov
outsb
mov
cmp
pop
mov
inc
int
std
jb
in
adc
or
pop
adcb
inc
ds
cmp
lods
ret
inc
xor
idiv
push
push
add
sahf
jb
push
int3
or
xor
scas
xor
nop
dec
mov
lret
jae
inc
out
inc
fildll
jl
rcrb
int3
push
lcall
push
jle
pop
inc
divb
inc
dec
cwtl
adc
or
mov
dec
ja
popa
jp
dec
into
mov
bound
sub
jb
shl
addb
sbb
in
sbb
mov
ja
dec
call
or
repz
push
testl
push
mov
rcrb
cmp
push
aad
ljmp
nop
cli
and
sbb
lock
cmp
xlat
shrb
mov
aam
out
fdivrl
xor
mov
pop
shlb
mov
and
xchg
push
fidivrs
out
pop
arpl
bound
mov
mov
jmp
or
mov
add
mov
loope
pop
int
js
push
or
push
and
pop
cmp
mov
push
cmp
sarb
inc
daa
sbb
jle
in
testb
mov
push
jb
adc
pop
or
mov
adc
add
xchg
or
xchg
add
ret
int
xchg
mov
adcb
ret
mov
push
dec
sbb
mov
pop
aas
sub
jl
ljmp
movsb
mov
es
sarb
xorl
mov
shlb
inc
jb
add
dec
xor
sbb
arpl
dec
aas
mov
sub
aas
cmpsl
adc
mov
ds
inc
inc
inc
scas
dec
cld
adc
inc
mov
aad
xchg
mov
cmp
xor
sbb
pop
mov
pop
jne
inc
in
mov
stc
mov
sbb
jae
cmp
or
ror
and
sbb
sahf
mov
sbb
inc
inc
lods
cmp
and
daa
adc
js
jo
cmp
xchg
push
lods
loop
test
xchg
pop
xchg
test
test
push
push
inc
pop
test
jmp
movsb
pushf
jp
arpl
push
inc
ss
push
add
sahf
out
adc
adc
mov
mov
sbb
imul
aaa
cmp
sti
aam
mov
xchg
inc
enclu
inc
push
xor
cmpsl
jle
pop
push
mov
push
mov
dec
dec
push
int3
jns
dec
les
mov
cmc
cmp
push
or
cmc
push
or
inc
mov
cmpsb
pop
cmpsl
jle
lcall
nop
mov
es
push
arpl
sub
mov
push
stc
pop
xor
ret
push
jbe
movsb
pop
push
add
js
rcrb
adc
xchg
xor
mov
ret
sbb
jle
and
sbb
xchg
mov
imul
popa
sub
push
jb
xchg
cmp
stos
mov
aad
push
test
and
jb
clc
xor
pop
pop
in
in
inc
lcall
addb
mov
and
sub
js
mov
dec
sti
pop
mov
and
iret
movb
or
sub
aad
push
rorl
jmp
lea
cmp
xor
pop
or
cmp
loop
mov
jmp
push
js
out
lret
cmp
mov
mov
inc
xchg
push
push
sbb
sbbb
inc
mov
sahf
push
sbb
icebp
jnp
mov
xchg
ret
push
add
pop
jle
mov
mov
lock
jb
sbb
movsb
push
push
addr16
ss
in
mov
jge
cmp
mov
push
dec
lcall
adc
ret
mov
pop
push
std
movsb
fdivrs
out
or
mov
inc
xor
movsb
ds
pop
leave
stos
and
shlb
push
mov
cmp
cmp
cwtl
lds
push
inc
fimull
adc
cmp
dec
rcrl
inc
xchg
nop
and
ret
dec
sbb
dec
push
cwtl
pop
push
lret
clc
xchg
popa
mov
push
mov
pushf
mov
mov
push
mov
clc
sbb
push
ret
cmp
add
mov
js
push
adcl
adc
jbe
mov
fadds
imul
xchg
xchg
cmp
push
push
ds
test
jo
push
movsb
mov
stos
mov
add
sbb
and
push
insb
ret
ss
dec
inc
data16
jo
mov
addr16
cmp
add
cld
sahf
andb
or
push
sti
dec
cmp
jl
and
mov
sbb
dec
sbb
jle
pop
add
pushf
inc
inc
inc
xchg
mov
xor
push
nop
and
aam
push
pop
cmp
or
pop
mov
aas
sub
imul
dec
push
enter
and
gs
pop
mov
push
ljmp
je
cmpl
arpl
ret
aam
push
aam
inc
xchg
jbe
decl
cmp
orb
loop
loop
in
mov
mov
mov
ret
sahf
or
xchg
dec
ret
xchg
mov
push
rcll
test
ja
fisubl
adc
pop
inc
cmp
pop
jo
sbb
jle
mov
subb
stc
clc
xchg
push
jl
mov
mov
push
mov
cli
push
lret
ret
push
dec
popa
jp
int
mov
hlt
xor
pop
sub
iret
dec
imul
mov
xor
dec
push
mov
aad
cwtl
dec
lds
inc
ds
mov
push
stc
loopne
mov
inc
mov
and
psadbw
lret
jl
dec
dec
pop
cmp
mov
pop
inc
jle
inc
push
xchg
mov
xchg
pop
nop
lret
sbb
xchg
and
clc
pop
loope
push
xor
cmp
pop
gs
xchg
push
xor
rcrb
shrb
es
dec
jbe
lcall
xor
js
outsl
sub
adc
pop
mov
or
xchg
sbb
ja
push
sahf
jp
shll
push
mov
gs
mov
mov
jno
ret
inc
cltd
aas
push
inc
mov
cmpsl
pop
sbb
and
xor
pop
nop
xor
push
sbb
ja
dec
xchg
inc
push
sbb
sbb
pop
inc
nop
sub
sahf
sub
dec
or
push
adcb
push
push
fstpt
xor
mov
inc
jmp
aad
movsb
push
inc
lahf
dec
xor
gs
mov
fidivl
mov
sbb
or
pop
inc
mov
and
lea
adc
int
push
inc
push
jle
in
fiaddl
jp
repz
mov
cmpsb
inc
pop
mov
cmp
scas
js
add
negb
adc
in
loope
sbb
dec
mov
pushl
xchg
shlb
mov
sahf
push
js
jmp
inc
dec
lds
push
jbe
pushf
adc
mov
movsb
ss
jecxz
imul
std
mov
dec
push
jb
inc
nop
push
and
jb
dec
popl
nop
mov
pop
cmpsl
xor
mov
in
fldl
icebp
in
in
or
pushf
ds
jp
xchg
arpl
jl
jg
push
lcall
push
xor
inc
rorb
rorb
jo
aas
loope
cwtl
les
sahf
dec
movsl
sti
js
adcb
popa
pop
and
push
add
jns
gs
pop
xchg
sbb
and
mov
mov
sbb
xchg
push
testb
xchg
out
inc
dec
cmp
jns
push
lret
mov
sbbl
mov
or
push
arpl
ficoml
dec
dec
jp
sahf
fs
mov
mov
and
mov
push
dec
test
push
xchg
push
inc
scas
push
and
and
jae
pop
rcrb
fisubs
push
add
xor
cld
or
cmpsl
test
jb
and
inc
mov
ss
dec
stos
sbbb
lret
push
jbe
sbb
push
cmp
and
dec
jle
in
pop
cmp
outsb
sbb
clc
dec
lahf
push
fidivrl
xlat
ret
popa
inc
dec
adc
fs
lret
and
push
xchg
xlat
sar
pop
ret
sub
aaa
clc
pop
add
ss
xor
movsb
je
lret
mov
iret
xchg
les
pop
adc
sahf
xchg
cwtl
pop
push
mov
add
ss
xchg
push
ret
push
jbe,pt
inc
dec
inc
andb
mov
or
sbbb
ficompl
xchg
mov
mov
shlb
aam
push
les
nop
adc
int3
dec
pop
mov
sub
mov
add
sti
in
jmp
sbb
dec
xor
push
sahf
jns
add
pop
roll
nop
sbb
sahf
xchg
insl
inc
jl
in
pushf
cmp
jbe
jb
dec
fbstp
and
jmp
jb
cmpsb
pop
cmp
loop
mov
jb
cmpsb
sbb
fiaddl
sub
std
jb
xchg
js
lods
push
in
stos
push
adc
pop
push
xchg
add
inc
out
adc
jp
sbb
lods
push
clc
mov
in
stos
std
sub
xchg
dec
mov
pop
inc
dec
pop
test
pop
xor
xorl
imul
test
das
sbb
or
inc
inc
scas
push
popa
movsb
in
mov
inc
adc
and
cmp
orb
imul
cwtl
xchg
mov
popa
arpl
clc
stos
xor
mov
inc
ret
mov
rcrb
nop
xchg
addr16
sub
in
stos
ret
pop
jbe
nop
push
adc
popa
jbe
je
jns
mov
ds
or
jbe
and
xor
call
stos
cmp
ud0
stos
popa
sub
fbstp
pop
add
adc
paddsw
popa
in
fwait
bswap
mov
in
jecxz
pop
mov
jle
gs
inc
in
dec
or
inc
mov
xchg
mov
pushf
xor
cmp
mov
insb
and
or
inc
inc
and
jmp
imul
ret
or
ja
loop
fisttpll
outsl
lds
jle
push
mov
xchg
xchg
adc
rcrb
mov
pushf
inc
leave
mov
mov
pop
mov
cmpsb
and
mov
inc
or
pop
push
pop
xor
and
movsb
js
lods
into
xor
mov
mov
arpl
movb
in
mov
popf
roll
push
int3
nop
mov
push
and
xchg
daa
push
js
mov
mov
pop
and
sub
push
and
pop
popa
adc
rorl
cmp
icebp
dec
in
cmp
pop
insl
lahf
das
mov
lret
sbb
shrb
cmpsb
daa
xor
mov
mov
in
mov
lret
sbb
sub
cmp
in
pop
movsb
xor
and
mov
push
inc
jae
lcall
out
ljmp
popa
jo
mov
xchg
stos
mov
mov
addb
fsubrp
xor
cmp
cmpsl
pop
push
xchg
and
jbe
sbb
add
inc
movsb
mov
ret
lods
mov
lcall
xchg
add
and
mov
mov
mov
inc
stos
mov
adc
ficoml
inc
lods
out
jg
mov
outsl
push
test
add
push
pop
clc
mov
mov
mov
xchg
add
pop
aaa
ss
jmp
inc
mov
ret
xchg
sbbb
or
scas
and
add
mov
js
pinsrw
faddl
pop
mov
in
cmp
in
dec
in
adc
pop
jl
pop
insl
dec
in
xor
mov
call
xchg
scas
ficompl
jmp
sbb
xchg
dec
mov
test
dec
inc
in
xchg
push
adc
add
cli
cmp
pop
jp
push
pop
mov
test
dec
imul
sarl
aas
cmp
inc
jg
aaa
jbe
stos
mov
xor
andb
loop
mov
cmp
cwtl
jo
inc
inc
in
cmp
out
mov
mov
aad
jbe
inc
js
mov
pushl
xchg
push
pop
sti
in
cld
inc
xor
sbbb
into
xchg
and
cwtl
xor
dec
sub
mov
sub
call
xor
push
andb
mov
gs
cwtl
xchg
aam
dec
nop
cmp
sub
dec
pop
mov
push
xchg
adc
jp
ds
mov
mov
sub
ss
cld
push
xchg
aam
iret
dec
cmp
pop
lret
and
loop
xlat
inc
insb
inc
sub
ds
or
pop
mov
jno
mov
js
int3
sbbb
mov
lcall
jp
iret
aas
shrb
jbe
ret
nop
dec
dec
cwtl
inc
std
daa
cmp
nop
ja
dec
cmpsb
xchg
movsb
jb
push
push
adcb
push
ret
sbbl
dec
gs
inc
sbb
dec
xlat
sarb
scas
mov
lcall
cmp
mov
in
movsb
dec
rorb
push
pushf
test
and
inc
aad
inc
push
or
mov
xchg
or
data16
dec
add
dec
xor
or
sub
divl
sbb
push
mov
sarb
sar
dec
loop
leave
mov
orl
jp
cmp
ss
loop
and
imul
loop
xor
dec
adc
aam
jle
pop
cmpsb
shlb
pop
pushf
mov
jno
aaa
pop
rcr
sahf
fcmovbe
adc
cmp
dec
xchg
sbb
rorl
js
add
pushf
cmp
push
dec
loope
call
inc
notl
inc
adc
cmpsb
add
aam
inc
movsb
sahf
out
jbe
shl
xchg
inc
or
pop
movsb
mov
mov
sbb
iret
pop
xchg
adc
cmp
cwtl
andb
mov
and
mov
mov
shrl
into
sahf
fisttpll
cwtl
mov
pop
in
and
pop
mov
and
add
scas
sub
dec
mov
xchg
mov
es
or
nop
sbb
xlat
xchg
cli
lahf
xorb
and
cmpsl
test
mov
xchg
push
sub
test
cmp
xlat
sbb
stos
outsb
push
cmp
js
addb
xlat
gs
xchg
pop
mov
hlt
cwtl
inc
dec
insl
push
cmpsl
mov
push
ds
pop
andb
xorb
sub
popa
rclb
pop
inc
orb
sbb
pop
movsl
shlb
aas
push
adc
xor
andb
js
sub
xor
push
movsl
sub
mov
movsb
cmc
and
loop
mov
rcrb
xlat
out
jl
jp
pop
std
dec
cmp
cmp
push
popa
jo
xchg
xor
push
xor
pop
insb
sbb
lcall
push
outsl
xchg
sub
movsb
mov
cltd
xchg
push
add
mov
pop
aad
imul
ret
fisttpll
ficompl
hlt
mov
xor
dec
dec
push
into
test
loop
jle
adc
call
lcall
xchg
jle
dec
rcrb
mov
cmpsl
mov
pop
xchg
mov
ja
ja
vpminub
sbb
or
dec
mov
inc
inc
sbb
in
xchg
push
sbb
mov
sbb
arpl
inc
std
inc
ret
xor
pop
stos
push
sbb
mov
loop
in
inc
cmp
in
call
dec
mov
test
jnp
adc
pop
add
jb
arpl
jle
or
mov
jecxz
adc
fcoml
inc
xor
xchg
dec
add
cli
mov
bound
pop
nop
inc
je
xor
in
mov
ss
push
lahf
push
push
jp
or
sahf
in
xor
lcall
jle
pushf
and
call
cmpsb
mov
mov
push
pop
dec
mov
fmull
cmp
popa
adc
fiadds
aad
inc
pop
pop
fwait
lcall
inc
jge
icebp
push
or
bound
push
mov
dec
and
mov
jl
inc
mov
stos
sbb
divb
in
push
cmp
out
fdivrl
sahf
inc
and
rclb
test
cmpsb
stc
test
mov
push
mov
xor
cs
fistl
aam
lcall
xchg
mov
mov
mov
pop
cmp
mov
in
xchg
daa
xchg
xchg
aam
dec
push
flds
mov
js
jmp
jns
andb
sub
ret
movsb
sbb
push
inc
xchg
pop
mov
insl
lcall
mov
pushf
mov
xor
loop
scas
mov
arpl
test
adc
scas
and
lcall
pop
mov
xor
push
jb
mov
dec
shlb
jno
clc
mov
dec
pop
push
cwtl
in
sub
ss
setle
andb
vzeroupper
xchg
aam
jb
xchg
test
jle
ds
mov
mov
call
loop
aas
jmp
and
push
dec
mov
and
and
push
push
or
mov
push
ret
xchg
gs
inc
outsb
cmp
xchg
sarb
arpl
mov
aaa
call
xor
push
sub
leave
mov
xor
mov
cmp
out
and
xchg
pushf
mov
xchg
aas
add
iret
cs
xor
and
xchg
sbb
mov
pop
adc
cmp
xchg
sub
sbb
out
mov
lret
jno
cmp
arpl
push
inc
jns
pop
pop
jb
inc
inc
xchg
push
aaa
xor
ja
in
jle
stos
sahf
ljmp
pop
pushf
cwtl
inc
notb
cmpsb
lods
out
push
lods
sub
mov
mov
cli
sbb
pushf
lret
fs
dec
lret
cmp
cmp
ret
and
mov
xchg
jbe
dec
push
inc
xchg
outsb
loop
rorl
in
inc
pop
add
imul
dec
mov
pop
pop
dec
adcb
sub
sti
in
fadd
bound
outsl
sbb
popa
sbb
pushf
xchg
or
pop
mov
arpl
and
loopne
push
enter
out
bound
aad
pushf
and
insl
push
out
mov
mov
lods
int
inc
add
and
adc
shll
sub
dec
fcoml
mov
pop
xchg
pop
jb
inc
and
xchg
nop
push
jbe
mov
sub
int3
stos
lea
sub
push
sbb
rorl
inc
les
scas
sub
lods
push
pushf
popa
ss
movsb
inc
cli
jae
push
push
popa
xchg
inc
sbb
orb
test
mov
nop
ja
dec
lret
ret
push
jb
dec
imul
adc
rep
dec
cmp
jle
jbe
mov
sbbb
lds
push
cmp
mov
nop
and
add
push
adc
xchg
jbe
scas
cs
inc
imul
mov
and
test
pop
stos
push
inc
push
pop
jl
sahf
scas
clc
test
lret
test
xchg
mov
sti
mov
nop
les
mov
pushf
inc
ficoms
es
ss
mov
mov
push
sbb
push
inc
mov
ss
pop
iret
in
sub
inc
push
mov
mov
jnp
mov
int
inc
inc
imul
imul
sbb
pop
push
adc
sub
dec
faddl
into
jl
lahf
xorb
adc
ds
mov
out
and
inc
jbe
mov
push
xchg
inc
loopne
jp
inc
cmc
xchg
sbb
mov
add
push
sbb
inc
dec
nop
popf
and
push
sub
mov
sti
dec
jecxz
push
jge
int
jb
inc
and
subb
sub
jle
pop
push
fcoml
nop
pop
inc
jle
and
mov
mov
push
aam
jbe
pop
iret
lret
and
xchg
cmp
stos
out
movsb
push
les
push
cmp
lods
mov
je
scas
pop
push
mov
push
movsl
lret
ss
adc
lahf
adc
inc
xchg
inc
sub
pop
addb
xlat
aas
ret
xchg
shlb
jp
inc
mov
aad
outsb
dec
ret
fdivl
and
inc
dec
ss
dec
jecxz
dec
and
mov
push
cmp
into
mov
mov
xchg
mov
popf
aam
dec
xchg
hlt
stos
and
inc
cld
adcb
mov
xchg
lds
cli
inc
inc
arpl
jo
inc
popa
mov
fistps
imul
inc
in
mov
mov
std
sub
xor
push
jbe
pop
jle
movsl
pop
inc
pop
push
test
cli
push
imul
xor
push
push
pushf
mov
push
mov
jmp
jle
outsl
mov
pop
xor
cwtl
ja
adc
cmc
mov
mov
jg
movsl
or
push
shll
arpl
nop
outsb
sahf
xor
movsb
xor
jo
xor
adc
push
cmp
add
loop
std
aad
jne
call
lods
les
push
pop
push
push
scas
add
mov
js
inc
sbb
lods
xchg
xchg
shlb
push
call
dec
pop
leave
or
mov
pop
pusha
xchg
fs
sub
sub
mov
dec
outsl
cmp
pop
sbb
std
push
xchg
nop
sbb
jb
cmp
inc
xchg
sahf
in
mov
mov
mov
les
adc
jo
scas
call
dec
nop
xchg
shlb
dec
inc
rclb
aad
jg
mov
mov
lds
rcrb
leave
lcall
fisttpl
push
push
jo
rcll
sbb
in
popf
adc
orb
scas
and
mov
dec
test
dec
push
sbb
inc
insb
mov
cltd
mov
inc
scas
xor
mov
push
inc
dec
rclb
jecxz
jbe
lret
rclb
js
mov
inc
xor
ss
mov
mov
in
mov
insb
jl
inc
lcall
pop
and
pop
mov
adc
jo
mov
pop
cmpsb
movsl
pop
and
inc
push
inc
cwtl
jae
inc
mov
sahf
sbb
daa
push
inc
test
loopne
nop
add
mov
jb
xchg
xchg
xor
pop
cmp
jle,pn
fnstcw
jl
inc
aam
or
int3
xor
mov
inc
pop
push
lcall
cld
xchg
pop
scas
push
jl
sub
push
xor
lcall
cmp
inc
dec
test
mov
pop
shlb
cwtl
pop
andb
cmp
jl
pop
dec
cmpb
mov
bound
push
adc
mull
bound
xchg
push
mov
sbb
cmp
xchg
pushf
shll
out
rcrb
cld
pop
mov
cmp
push
dec
stos
xor
std
xchg
stos
out
inc
mov
jmp
call
test
push
push
pop
mov
rolb
jle
and
mov
mov
fdivrl
fiadds
mov
inc
add
and
sub
dec
push
in
and
ljmp
lret
mov
pop
outsb
sbb
cmpsb
mov
gs
xchg
mov
cmp
sbb
ss
mov
movsl
mov
inc
ficoml
mov
lds
pop
sub
jbe
inc
mov
pop
cmpb
add
mov
xchg
arpl
pop
and
inc
jecxz
lret
insb
rorb
dec
push
or
sub
mov
daa
outsl
sub
incb
sbb
cmp
js
dec
and
pop
cmp
xchg
pop
or
sbb
cmpsb
out
cmp
push
outsb
xchg
jae
cmpb
arpl
icebp
enter
sub
mov
mov
dec
add
push
inc
out
sahf
lea
xchg
cmp
sarl
mul
inc
jl
adc
pop
outsb
cmp
or
ret
adc
push
pop
scas
gs
inc
mov
sbb
cli
jbe
pop
shlb
pop
pop
clc
inc
in
testl
inc
jbe
dec
mov
dec
gs
mov
out
cmp
mov
enter
cmpb
push
xchg
or
cmp
cmp
mov
popa
mov
mov
xchg
dec
jle
inc
cmpsb
pop
test
push
jne
stos
xchg
in
cwtl
add
push
pop
lcall
jp
lret
mov
xchg
loope
push
mov
xchg
outsb
ds
pop
in
mov
or
andl
inc
inc
int3
mov
lds
aaa
mov
test
adc
dec
push
push
ja
dec
sub
arpl
movsb
push
cmp
xchg
push
inc
leave
mov
in
daa
cmc
xlat
mov
mov
sbb
and
jge
dec
adc
push
push
sbb
xor
cmp
stos
mov
repz
jl
jb
icebp
sbb
movsb
push
insl
mov
jg
inc
fidivs
fisubrs
lcall
aam
add
cmp
js
pop
sahf
mov
and
dec
mov
daa
mov
out
cwtl
adc
nop
mov
lahf
push
xchg
outsl
pushf
xchg
push
dec
jl
sub
xorb
in
sbb
adc
xchg
ret
jbe
push
iret
inc
and
push
add
lret
push
dec
mov
cmc
testb
jns
mov
or
js
movsl
xchg
les
pop
mov
and
jno
mov
push
xchg
sarb
push
inc
mov
mov
or
stos
fcompl
xchg
ret
inc
out
cltd
addr16
xor
jns
dec
mov
cld
pushf
test
sub
xchg
and
dec
xchg
dec
lea
sbb
xchg
ds
cmp
loop
mov
adc
jg
mov
push
jb
shlb
or
loop
ja
scas
mov
jg
daa
les
jb
fidivs
sahf
pop
aam
or
jbe
pop
pop
and
push
pop
pop
roll
adc
push
ss
insb
out
sub
dec
and
push
inc
push
out
xchg
mov
sahf
cmpsb
xchg
mov
nop
ss
in
jbe
add
mov
andb
push
adcl
push
pop
push
aam
mov
mov
jg
add
test
pop
mov
dec
movsb
jg
mov
dec
add
sub
insb
cmpsb
movsb
jp
jle
mov
adc
lods
popa
adcl
cwtl
jmp
fnstcw
stos
inc
xchg
adc
test
ljmp
ss
call
jl
mov
dec
mov
popl
ficoms
mov
lods
cmovg
mov
out
inc
jle
inc
mov
xchg
push
jp
pop
pop
arpl
mov
xor
mov
outsb
xchg
call
nop
and
inc
cmp
in
mov
adc
push
adc
roll
mov
add
dec
and
dec
pop
leave
out
or
xchg
rcrb
aam
arpl
int3
dec
xchg
mov
adc
add
mov
cmp
xchg
fwait
push
cmp
cmp
out
les
adc
xchg
push
sbb
movsb
int3
xor
push
rclb
movsb
xchg
shlb
xchg
mov
pushf
loop
xchg
jo
lods
jbe
cld
push
mov
ja
ljmp
cs
out
inc
data16
lea
ja
inc
int3
pop
jbe
inc
out
xor
pop
ljmp
mov
fadds
jle
add
mov
and
jbe
cwtl
xchg
inc
sbb
cmp
in
arpl
jl
push
mov
pop
in
pop
ss
ret
mov
ds
mov
mov
fidivrl
dec
in
jle
rol
pop
popa
lcall
out
cmp
mov
cltd
push
jbe
outsb
jl
xor
cmp
out
pop
pop
mov
dec
jbe
dec
lock
rcrb
sbb
jo
xchg
pushf
sbb
dec
in
test
dec
mov
sarl
add
mov
popa
mov
mov
insl
sbb
xorb
push
cmp
sarb
jle
and
sbb
add
mov
cwtl
push
and
jne
pop
iret
rol
xchg
adc
inc
int
mov
daa
cli
xchg
adc
inc
inc
mov
clc
pop
jg
sbb
sti
or
xchg
mov
cwtl
adcb
cs
data16
or
xchg
dec
ja
ljmp
xor
mov
clc
jo
jp
jp
shlb
push
sbb
popa
insb
repz
in
xchg
in
mov
scas
cmp
scas
cmp
push
ljmp
and
push
pop
arpl
jmp
stos
cmp
xchg
lcall
xchg
sbb
cmp
push
mov
andb
incb
rorb
out
push
scas
pop
mov
mov
daa
test
out
fdivl
enter
push
xchg
or
sahf
popa
rolb
jecxz
jp
ret
mov
and
mov
stos
pop
cmp
dec
in
xchg
mov
leave
lods
out
movsb
pop
orb
inc
xor
decb
arpl
clc
push
dec
enter
jbe
cmp
mov
push
test
xchg
adc
inc
jle
lea
pop
cmpsb
lea
bnd
dec
dec
and
mov
mov
pop
movsb
mov
sbb
pop
lds
mov
pop
adc
push
xor
stos
aas
dec
test
jns
je
loop
sahf
sub
jle
and
mov
mov
pop
jle
mov
xor
push
push
adc
and
xchg
mov
push
fcompl
jno
hlt
jbe
cli
mov
mov
mov
das
sub
mov
push
xchg
inc
jp
adc
cmp
sahf
cmc
inc
scas
mov
mov
add
xchg
test
xchg
nop
popf
cmp
out
jo
stc
pop
insl
lret
popf
sub
and
inc
pushf
and
fucomip
fsubl
cmp
pop
movsb
mov
fidivs
lds
cmp
in
faddl
mov
nop
jns
fcoms
lds
popa
mov
mov
mov
out
aas
lcall
ja
mov
gs
xchg
sbb
xor
cli
push
iret
cld
int3
dec
imul
push
push
sbb
lods
inc
aad
ss
inc
loope
bound
adc
daa
and
push
subl
daa
mov
int3
lahf
mov
hlt
testl
sahf
cli
sub
stos
sbb
pusha
xchg
xchg
xchg
popf
push
dec
xchg
shlb
js
pop
or
call
jns
jnp
inc
ja
ficompl
in
and
mov
scas
pop
leave
inc
push
or
fiadds
pop
icebp
in
push
jo
inc
sti
jecxz
or
xchg
sbb
out
int
push
out
xor
or
out
sahf
arpl
inc
popf
sbb
xchg
stos
push
ss
mov
push
inc
loop
imul
cwtl
mov
inc
sub
inc
out
xchg
adc
dec
push
out
mov
mov
cltd
sti
mov
into
popa
cwtl
mov
cli
sbb
lds
lahf
push
in
or
pop
jbe
scas
pop
cmp
push
push
addb
push
pop
rclb
movsl
adc
je
and
add
jmp
mov
push
xchg
sahf
addr16
mov
pop
mov
mov
loope
push
sbbb
lock
cmpsb
orb
imul
cs
ds
sbb
pushf
jo
push
sbb
test
and
sti
push
sbb
mov
inc
adc
out
adc
ficomps
das
xor
jle
mov
pop
cmp
inc
jo
dec
lret
cmp
fstpt
mov
scas
inc
jo
insb
push
xlat
imul
sbb
and
or
inc
movsb
aas
test
mov
mov
pop
and
andb
cmp
shlb
xchg
popa
push
and
mov
loope
es
pop
aam
or
mul
in
cmpsl
popa
orb
dec
ss
aam
enter
sbb
inc
inc
pop
mov
push
popf
jmp
add
adcb
lcall
inc
in
cmp
movsl
stos
lret
dec
movsb
jl
inc
cld
ss
mov
es
xchg
xchg
daa
push
and
pop
sbb
cmpsb
nop
sahf
dec
push
inc
incb
push
mov
jb
pop
xor
mov
mov
jb
idivl
mov
adc
sbb
dec
jecxz
inc
lds
std
repz
stos
sti
mov
ja
xchg
subb
insl
cwtl
aad
dec
jb
xorb
in
dec
popa
and
jbe
fisttpll
aam
jo
cli
push
ds
pop
jb
mov
cltd
popf
and
out
nop
arpl
sub
and
pop
in
ja
call
push
mov
sarl
ljmp
jp
call
sbb
mov
ds
mov
sbb
jg
jnp
cmp
repnz
mov
lret
out
jle
std
daa
es
cmp
push
push
fst
mov
inc
dec
xchg
mov
ds
shlb
lcall
sarl
mov
mov
xchg
cld
scas
imull
sub
ret
fisubl
nop
push
or
jge
or
lcall
push
into
and
sahf
xchg
scas
push
add
xor
sbb
mov
push
ret
jo
or
negl
dec
mov
and
ljmp
stos
mov
pop
or
sahf
xchg
jmp
xchg
in
dec
cmpsb
push
mov
inc
sbb
aad
add
stos
mov
xchg
movsl
jge
and
stos
insl
popa
test
mov
das
cld
pop
mov
push
mov
mov
sbb
mov
xchg
lahf
sub
dec
pop
cmp
ds
icebp
in
sbb
sti
arpl
pop
pop
sub
push
cwtl
add
push
and
loope
push
test
aam
inc
xchg
mov
ss
sarb
pop
cwtl
movsb
imul
mov
rorb
pop
mov
lahf
push
jl
push
xchg
mov
in
arpl
faddl
std
subb
mov
inc
adc
inc
sub
inc
pop
in
in
dec
and
jp
and
inc
inc
xor
push
sbb
push
subb
or
cmp
negl
in
mov
pop
sub
lret
fidivrl
lahf
dec
xchg
dec
and
movsb
add
fildl
lcall
shlb
mov
sbb
dec
xorb
xchg
mov
out
push
sbb
js
in
jp
push
inc
and
div
inc
add
test
pop
mov
arpl
cwtl
inc
pop
aad
and
mov
xchg
mov
mov
call
push
lahf
xor
or
sbb
ljmp
xchg
add
and
jnp
iret
sbb
mov
jle,pt
cmp
and
or
dec
pop
mov
sahf
xor
jge
cld
adcl
nop
mov
mov
jg
cs
mov
pop
inc
ja
loop
mov
or
sahf
das
incb
adc
pop
lahf
add
ret
xor
ret
mov
xchg
push
mov
adcb
clc
movsb
xchg
xchg
mov
xchg
nop
mov
lret
sbbb
mov
sarb
cmc
add
es
mov
push
movsb
clc
pop
or
lods
xchg
std
in
rol
xchg
addb
dec
mov
mov
jp
mov
cmp
and
fisubs
ljmp
mov
xor
push
stos
cld
push
and
push
and
xchg
scas
dec
ds
inc
mov
icebp
pop
movsl
ret
cltd
jle
gs
mov
push
push
cmpsb
repnz
movsb
dec
fidivl
cmc
dec
sbb
fwait
xor
and
push
jmp
std
test
sub
gs
sahf
dec
not
loop
popa
cmp
insb
jmp
push
lcall
jl
and
cmp
sbbb
loop
sbb
jnp
inc
mov
push
cmp
dec
push
xor
mov
cs
popa
std
int3
cwtl
push
outsl
repz
addr16
adc
lret
and
adc
sbb
scas
push
pop
mov
jp
jo
mov
cmp
lcall
pop
adc
mov
jl
mov
pushf
xor
outsb
jecxz
call
sbb
xchg
or
jecxz
xchg
loop
outsb
subl
mov
push
popa
aam
push
mov
jp
scas
es
cmpl
or
pop
dec
movw
ret
inc
push
mov
push
sbb
pop
xorb
mov
movsl
jne
lcall
push
push
scas
testb
cmpsb
movsl
inc
mov
xchg
mov
pop
and
cmp
mov
xor
pop
add
mov
pop
inc
pop
mov
arpl
mov
cmp
pop
inc
sbb
aad
fnstcw
xor
push
cmpsl
and
arpl
dec
sbb
xchg
jl
aad
pop
pop
cmpsb
xor
rolb
push
dec
xor
pusha
mov
xchg
and
adc
andb
mov
inc
mov
pop
mov
push
push
sub
idivb
mov
fwait
dec
xchg
ss
inc
sti
je
xorb
cld
sahf
inc
lcall
outsb
mov
or
sbb
jg
nop
jg
cmp
cld
inc
pop
mov
popa
xchg
mov
cmpsl
inc
jo
jle
inc
pushf
xchg
clc
lret
mov
lea
lea
xor
sahf
inc
or
xchg
in
mulps
jp
repnz
push
movsb
sub
adc
jmp
mov
mov
inc
push
dec
inc
and
fnstcw
xor
dec
loope
mov
or
sbb
imul
ss
push
sbb
push
jle
inc
dec
mov
in
popa
ficompl
mov
sti
pop
pop
cmp
dec
clc
mov
cmp
and
mov
imul
and
test
bound
adc
mov
dec
outsl
xchg
mov
popa
xchg
xor
lret
popa
pop
movl
xchg
jmp
imul
sbb
cmp
push
jge
iret
adcb
mov
outsb
inc
into
scas
push
ficompl
rclb
shl
push
and
mov
cwtl
lcall
pop
xchg
scas
push
cld
inc
cltd
push
xor
movsb
pop
aad
scas
dec
dec
push
fcomi
inc
fnsave
mov
jp
push
movlps
or
push
jo
push
xor
popa
sbb
dec
xchg
dec
inc
jle
and
mov
fstpt
mov
test
push
outsb
jb
call
sub
inc
ss
mov
xor
mov
lds
sbb
aad
cli
push
cmp
cli
cmpsl
dec
push
pushf
mov
adc
mov
push
and
lcall
xchg
out
sbb
sahf
lods
cmp
sbb
xchg
push
push
movsl
and
jno
pop
nop
jo
int
lret
mov
out
dec
add
loop
push
shl
arpl
les
nop
inc
and
jne
in
ds
inc
sbb
out
mov
and
mov
leave
cmp
ljmp
jecxz
jne
in
push
cmp
jp
pop
lcall
mov
cmp
adcb
ss
push
fisubrl
mov
xchg
movsb
jp
pop
jbe
jle
cmp
or
movb
sarl
push
mov
and
add
and
pushf
add
mov
in
push
mov
inc
jle
add
sbb
inc
push
pusha
mov
stos
imul
aad
mov
sbb
dec
pop
xchg
ss
dec
nop
dec
sahf
arpl
pop
mov
push
in
movsb
push
ljmp
cmpsb
fists
sahf
inc
add
sahf
pop
push
loop
mov
movsb
stos
cmp
movsl
gs
cwtl
pop
stos
xchg
jp
and
div
cmc
stos
lcall
cmpsb
and
pop
mov
pop
add
aam
dec
sarl
inc
loope
subb
adc
rolb
shll
mov
rolb
out
int3
xchg
cmp
mov
push
push
pop
xor
mov
jl
inc
and
or
movsb
stos
push
or
ret
jecxz
jb
inc
test
and
jle
in
cmc
pop
mov
cmp
sbb
pop
loope
mov
mov
stos
add
xchg
or
nop
in
pop
add
pop
xor
dec
jl
inc
jns
cmp
cmpsb
jg
sbb
mov
orb
sub
jae
mov
jb
cwtl
mov
and
inc
test
test
dec
xchg
mov
in
push
mov
push
push
out
jbe
pop
and
and
push
push
ja
fdivrl
dec
cmp
dec
xor
dec
mov
jg
mov
pushf
inc
addb
cmp
push
push
sbb
ja
mov
lret
fimuls
mov
out
jo
in
xor
push
dec
sbb
bound
and
xchg
imul
jl
or
nop
scas
shlb
pop
mov
mov
orb
xchg
aaa
ljmp
das
lret
jmp
inc
sbb
popa
cli
into
xchg
ds
push
call
andb
inc
jnp
aas
dec
mov
inc
dec
sarl
int3
push
push
test
rorl
sbb
jge
into
jbe
and
cs
out
lds
inc
sahf
out
push
bound
xchg
mov
jo
mov
xchg
mov
inc
aas
jns
mov
mov
sarb
nop
mov
inc
in
fiadds
js
cmp
push
pop
adc
mov
ret
adcb
pop
or
inc
stos
cmpsl
and
and
xor
pop
ficoml
sti
dec
mov
icebp
ss
dec
adc
add
mov
dec
pop
jmp
addb
xchg
and
pusha
cwtl
ss
push
and
dec
test
inc
stc
and
xchg
lds
int3
outsl
in
mov
mov
dec
push
xlat
ss
fimull
in
xchg
add
decb
ljmp
jl
jno
mov
cmp
stc
data16
push
mov
inc
clc
push
push
sarb
stos
ret
aas
cmp
xchg
mov
dec
stc
mov
and
and
mov
mov
sbb
sbbb
out
ss
mov
pop
outsb
inc
rolb
sub
mov
dec
pop
pop
mov
test
pop
ja
dec
scas
pop
out
and
stc
add
lret
stos
mov
jle
jle
push
insl
jns
jecxz
fisubl
pop
inc
jo
dec
cwtl
and
test
cmp
inc
mov
mov
js
in
ds
shlb
dec
ret
inc
jge
add
push
add
mov
xor
dec
ljmp
dec
lods
push
popa
ss
js
pop
mov
push
sbb
movsb
adc
push
xor
mov
ds
nop
dec
es
lods
int3
dec
jle
xchg
nop
int3
outsl
push
and
pusha
stos
outsb
call
jmp
lods
mov
fsubl
lcall
inc
andl
xchg
fisubl
inc
jne
in
and
inc
aaa
or
dec
mov
sarl
sahf
push
mov
out
mov
mov
mov
cmp
mov
insl
scas
inc
push
loopne
push
dec
sbbb
jle
push
push
mov
mov
lcall
mov
jl
push
dec
cmpsb
push
fidivrs
es
incl
call
ja
mov
push
iret
mov
xchg
pop
cmp
popa
sahf
pop
lea
lds
xor
push
push
aam
sbbb
pop
jb
js
out
sbb
cmp
xor
popa
cmp
test
lock
adc
dec
inc
addb
jmp
scas
xchg
aad
sub
xchg
or
das
xchg
rcrb
arpl
ficompl
das
push
sbb
mov
cltd
dec
mov
mov
jl
jbe
sahf
out
cmp
jp
mov
jns
shlb
fcmovu
add
stos
pop
movsb
pushf
lahf
mov
xor
aad
sarb
shlb
jo
popa
lret
mov
push
cmp
jmp
inc
jg
pushf
sarb
inc
imul
fidivrs
jp
ss
imul
mov
and
inc
nop
arpl
xor
dec
js
vpaddusw
cmc
inc
ret
inc
xchg
push
sbb
sbbb
cmpsb
push
xchg
mov
sbb
ljmp
adc
or
xchg
xchg
popa
mov
or
loope
pop
and
insb
adcb
inc
mov
sub
std
jl
xor
pop
cmp
push
jb
test
cmp
push
mov
sbb
cmp
sub
lds
inc
outsb
stc
int3
xor
pop
sbb
push
jl
inc
inc
bound
or
push
lcall
movsb
mov
cmp
jbe
cmpsb
dec
nop
inc
mov
out
pushf
popa
push
bound
call
cwtl
ja
ss
cwtl
in
push
mov
sbb
mov
aam
cmp
lret
mov
and
sub
lds
aam
push
mov
mov
imul
inc
adc
ret
sbbb
stc
mov
aad
sar
mov
aad
or
lret
dec
mov
cmp
pop
jecxz
jo
pop
mov
pop
xchg
mov
out
mov
sahf
cmp
mov
clc
outsb
or
cmpsb
inc
cmp
subb
lcall
mov
adcb
pop
inc
outsl
and
movsb
ficoms
fisttpl
aaa
pop
fisubs
sub
cwtl
jb
pop
shl
push
xchg
xchg
movsb
jmp
jle
pop
lock
sar
nop
mov
rolb
or
pop
dec
cmc
xor
pop
push
dec
xor
subb
popa
mov
aad
sub
dec
test
data16
movsb
cmp
mov
add
ret
push
cwtl
mov
mov
pop
inc
cmpsb
inc
test
out
jbe
clc
or
mov
scas
cmp
adc
in
cltd
jo
jle
xchg
inc
xchg
cld
jae
int
in
js
xorb
lds
pop
loop
push
xchg
ror
mov
pop
cmp
adc
mov
cmpsl
jp
mov
sbb
dec
incb
fimull
das
sbb
int3
xor
les
mov
inc
xchg
pop
aam
movsb
push
es
cmp
xorb
xor
push
mov
dec
sbb
lcall
lds
inc
pop
inc
or
sub
mov
popa
outsl
loop
int3
mulb
inc
sub
aaa
inc
in
pop
and
lret
inc
out
inc
sarb
mov
mov
popf
fisubl
cmpsl
stos
mov
test
push
stc
push
mov
dec
xchg
fstpt
fidivrl
add
sub
cmp
and
lods
xchg
adc
xor
sub
js
movsl
fcoml
mov
rorb
pop
mov
xor
xchg
sub
push
movsb
fiaddl
fiaddl
xchg
int3
pop
pop
std
inc
mov
mov
sbb
leave
push
jl
test
inc
lds
ss
jl
or
add
sahf
mov
push
sahf
lcall
and
cmpb
ficompl
jle
fwait
mov
pop
fiadds
mov
push
pop
lahf
ss
and
inc
jge
dec
sbb
xchg
inc
xor
mov
pop
mov
nop
jb
mov
test
mov
insb
out
xor
pop
icebp
or
dec
adcl
sbbl
jns
mov
sbb
fiaddl
mov
nop
cli
sti
in
movsb
imulb
sub
test
cli
jae
pushf
out
imulb
inc
cwtl
leave
push
arpl
aam
cmp
pushf
mov
dec
movsb
jbe
jb
xor
fistpl
out
inc
adc
scas
int3
pop
dec
mov
pop
push
mov
in
stos
or
jo
mov
dec
push
sbb
mov
addb
fs
in
mov
sub
or
js
test
pop
adcb
jbe
rolb
repz
push
push
xchg
rcl
jo
rorb
mov
pop
or
jp
mov
push
and
mov
and
lret
ss
inc
inc
pop
fidivl
nop
or
xchg
cmp
jo
sti
adc
xchg
stos
add
push
push
adc
push
dec
or
sbb
icebp
cmc
les
push
test
add
rcl
in
lods
cs
pop
dec
cmovge
adc
sbb
das
pop
js
ret
test
sbb
pop
xchg
xorb
cs
adc
sbb
sahf
mov
mov
push
sub
fs
adc
repz
ficoms
iret
cli
jns
sbbb
ds
pop
cwtl
outsb
mov
ljmp
xchg
mov
lea
cmp
jl
xor
push
nop
pop
test
cwtl
mov
in
ret
cmpsl
pushf
adc
push
mov
dec
push
pop
mov
mov
nop
lcall
push
mov
inc
push
ficompl
cmpsb
xor
mov
testb
xchg
xchg
ss
sti
push
mov
jnp
mov
nop
jle
adc
dec
addr16
shrl
add
push
adc
xor
aaa
inc
pop
cmp
es
movsl
data16
jle
lds
mov
aaa
lea
lcall
mov
xchg
cmc
push
imul
popf
push
xor
pop
push
inc
rcrb
outsl
testb
cwtl
push
mov
push
loope
dec
jb
aad
leave
inc
jge
inc
xchg
sarl
xchg
mov
inc
inc
jmp
inc
bound
push
mov
adc
cwtl
in
mov
push
jb
cmp
inc
out
mov
cmp
nop
jne
push
dec
mov
jp
fiaddl
pop
push
jb
sub
adc
sbbb
dec
sar
jle
push
scas
mov
aam
cmp
inc
mov
int3
cmp
inc
push
pop
pop
xlat
inc
ds
sub
movsl
adc
adc
int
push
js
jp
adcb
ret
cmp
and
mov
pop
mov
pushf
push
sub
dec
mov
stos
dec
add
add
lcall
rcr
push
out
push
popa
xchg
js
inc
lret
test
push
push
in
mov
inc
divb
or
inc
inc
in
push
sbb
mov
jo
lock
sbb
gs
xor
jb
sbb
xor
int
cmpsb
arpl
jmp
jb
in
xchg
dec
xchg
faddl
inc
pushf
pop
js
bound
and
movsl
stos
sahf
dec
rol
ss
negb
clc
push
or
lcall
out
mov
std
mov
ds
add
ss
inc
add
inc
push
lcall
inc
dec
mov
inc
cmp
or
dec
sub
inc
dec
fildl
jle
stc
inc
in
in
adc
addps
cmp
das
stos
das
rclb
lcall
daa
notb
arpl
in
into
in
push
pop
push
sbb
fldenv
dec
adc
add
dec
data16
inc
jg
inc
fwait
push
push
jl
xchg
rorb
dec
or
xchg
sbbl
addl
mov
ds
shr
jns
cmp
push
xchg
mov
sahf
sar
inc
pop
ret
lock
hlt
cmp
and
pop
mov
push
pop
or
xor
push
in
inc
test
orb
popa
mov
jle
push
mov
jp
jbe
mov
iret
mov
add
gs
push
lds
sub
and
add
popa
shl
mov
jge
outsb
in
lcall
or
mov
lret
inc
sbb
push
test
iret
popa
adc
mov
pop
add
adc
push
mov
pop
lret
imul
jle
mov
popa
lea
sti
inc
dec
cmp
iret
in
inc
xchg
mov
lret
xchg
out
jmp
stc
das
divb
adc
inc
jg
dec
xchg
fcmovnb
pop
push
mov
mov
dec
mov
lahf
inc
inc
inc
cli
dec
push
xor
or
push
jg
in
pop
xchg
push
mov
xchg
ds
jge
fdivs
nop
insb
push
inc
iret
add
scas
sub
xchg
rorb
xor
sti
ficoml
in
push
test
push
xchg
xor
and
pop
cmp
insb
repz
mov
bound
jl
lds
shrb
and
push
or
negb
nop
scas
jo
or
cli
add
loopne
nop
adc
iret
and
and
mov
cmp
xchg
pushf
lcall
jb
lcall
imul
jle
mov
cltd
in
in
int3
movsl
dec
xorb
push
in
mov
inc
jbe
out
push
in
adc
push
fisttpl
jb
xchg
xchg
rorb
inc
ficompl
xor
in
mov
inc
aad
loop
orb
adcb
xor
mov
jle
outsb
inc
out
mov
in
sarl
xor
lcall
aam
out
cmp
and
pushf
jg
cli
and
ss
mov
int3
iret
sbb
push
sbbb
fstl
sbb
cmp
xor
pushf
or
in
ret
clc
ds
insb
and
dec
pop
imul
sbb
push
lcall
mov
mov
icebp
fnstcw
push
sbb
mov
popl
sub
lret
mov
lcall
adc
or
jbe
cli
insl
push
mov
jp
push
sub
shlb
xor
mov
call
inc
lret
and
andb
test
addb
fisubl
jb
dec
mov
xor
sbb
lahf
dec
xchg
mov
mov
inc
xchg
jb
rcl
xorb
adc
xchg
out
jecxz
push
xchg
and
inc
scas
mov
fwait
jmp
fisttpll
pop
cmpb
and
mov
dec
gs
cmp
out
and
clc
cmp
ds
out
jle
dec
adc
pop
or
cld
xchg
call
mov
fldcw
and
jb
cli
or
ret
mov
orb
js
dec
test
cmp
jmp
and
in
stos
fcoml
in
scas
pop
push
mov
and
iret
xchg
push
dec
push
inc
fwait
pop
and
in
mov
ret
push
test
lret
sbb
jle
imul
rcl
jl
enter
dec
iret
ss
push
xor
ficompl
iret
xchg
sbb
sbb
mov
aad
add
hlt
and
sahf
aad
and
outsb
mov
rcll
push
xchg
test
inc
aad
sub
jp
or
and
dec
sbb
xchg
xor
arpl
xchg
mov
pop
cli
mov
je
inc
sub
push
call
or
mov
mov
loop
and
xor
cmp
push
cwtl
lods
dec
cmp
dec
jb
clc
test
jecxz
mov
js
dec
mov
mov
mov
mov
sbb
ja
or
jl
js
sbb
mov
xor
ljmp
repz
inc
jb
push
xor
push
mov
inc
fistpll
jecxz
pushl
dec
movsb
outsb
jl
test
inc
test
mov
cwtl
into
mov
shlb
lret
mov
xchg
pop
xchg
cmc
mov
sub
dec
jno
cmpsb
loop
and
lods
rcrb
sub
dec
jle
sbbb
mov
sahf
aad
fidivl
xchg
mov
cmp
cmpsb
pop
pushf
inc
scas
mov
aam
nop
jl
and
inc
scas
arpl
push
jmp
mov
mov
cmp
push
mov
dec
mov
inc
in
and
jmp
lcall
call
movsl
lret
lcall
push
in
sub
xor
cmp
dec
jg
sub
imul
in
popl
dec
xor
inc
cmpb
out
sbb
mov
mov
ret
add
fs
pop
push
sub
pop
lcall
sbb
rcrb
arpl
mov
scas
pushf
mov
push
push
inc
in
rolb
dec
lock
mov
repnz
dec
test
mov
push
pop
bound
mov
pop
pop
out
mov
sahf
dec
pop
and
pop
popa
cwtl
jb
xchg
pushf
push
inc
in
mov
nop
push
lret
out
cmp
nop
aad
sub
aam
pop
cmpsb
loop
mov
dec
aad
mov
lods
mov
in
pop
leave
ret
lret
fs
int3
pusha
xor
xchg
mov
stos
inc
outsb
adc
mov
inc
cmp
cld
and
lcall
jb
lret
and
aam
xor
pushf
sub
mov
shrb
arpl
jmp
sbb
push
test
ds
nop
pushf
dec
sbb
and
mov
pop
push
lods
call
push
clc
mov
lahf
in
push
jle
pushf
mov
out
pop
push
mov
negl
out
daa
inc
sbb
sbb
push
lret
mov
insb
jp
mov
fdivrl
xchg
inc
int3
jmp
jp
testl
inc
fcoml
enter
cli
cli
ss
aas
fiaddl
dec
dec
pop
sub
ret
pushf
push
sahf
jge
push
or
ljmp
insb
test
test
inc
jnp
dec
pop
inc
dec
jbe
cmpsl
int3
xchg
cmp
out
and
push
pop
xor
subb
aad
push
and
ret
cld
sub
sahf
inc
fidivrl
jle
mov
dec
shll
mov
dec
or
mov
push
adc
xor
jb
sub
fimull
into
idivl
mov
pop
inc
fs
pop
test
mov
pop
stos
inc
mov
pop
dec
out
xchg
stos
xchg
cmp
fmull
js
lcall
mov
inc
dec
movsl
adc
test
in
movsb
in
fsub
xchg
mov
data16
mov
sub
dec
outsb
mov
xorb
jge
loope
cmpsb
xor
mov
push
fsts
mov
push
arpl
aam
adc
mov
in
sub
pop
movsl
lods
lods
mov
and
adc
xchg
inc
mov
in
inc
mov
push
pop
aam
jp
addr16
fucomp
js
mov
ds
push
nop
cwtl
add
jbe
mov
add
ss
xchg
inc
ss
cmp
push
jp
ds
cmp
cltd
sbb
std
cmp
dec
push
in
xchg
cmpsl
xchg
jnp
jl
jnp
xor
jb
jo
mov
mov
sbb
js
stc
leave
and
dec
in
cmpl
sbb
mov
inc
outsb
push
scas
scas
es
mov
cmp
leave
dec
es
mov
jg
testb
mov
and
fldcw
int3
rclb
inc
outsb
mov
jle
stos
push
out
in
cmp
aam
inc
pushf
cwtl
mov
test
jp
or
mov
dec
cmp
stos
nop
pop
push
push
js
mov
in
xorb
incl
push
sub
int
rclb
pop
mov
sbb
sub
push
sub
dec
xchg
jl
push
inc
mov
mov
push
insl
stos
pop
dec
arpl
ss
rcrb
inc
mov
mov
push
pop
int3
insb
les
in
ret
add
add
jl
sarb
sbb
ss
sbb
outsb
xchg
test
ljmp
cwtl
mov
ret
pushf
inc
roll
dec
inc
cmp
fldl
loop
push
xor
dec
sbb
mov
inc
push
sahf
mov
jle
push
scas
test
dec
lcall
adc
shlb
leave
sbb
push
cmp
sahf
xor
xchg
add
push
adc
sahf
cmp
pop
xchg
call
adc
lret
addb
sbb
jb
pcmpeqb
jbe
lahf
loope
dec
mov
push
pop
es
push
sub
cmpb
pushf
sahf
push
and
in
dec
pop
pop
ss
iret
mov
jge
cmc
sbb
dec
or
push
inc
sub
adcl
xchg
mov
push
jle
sub
mov
nop
mov
mov
pop
fcompl
push
sbb
jbe
mov
jmp
adc
cmp
aas
imul
push
mov
sbb
cld
mov
pop
jns
imul
and
rcr
jb
push
inc
inc
pop
gs
cmp
adc
dec
sbb
or
jbe
lret
inc
pop
sahf
mov
outsl
inc
xchg
xchg
jl
jb
orb
mov
add
pop
gs
sub
rolb
pop
mov
lock
ret
and
dec
inc
bound
adc
inc
mov
mov
rorl
adc
jle
out
push
mov
inc
lds
pop
and
aam
sbb
lcall
jne
push
mov
ffree
insl
mov
ss
xchg
dec
dec
adc
fnstenv
add
arpl
mov
nop
in
inc
adcl
push
jns
out
mov
adc
lods
movsl
jns
out
lcall
mov
pop
cmpsl
pop
jbe
inc
jo
test
ret
ljmp
movsb
int
pushf
xchg
cmp
mov
cmp
pop
insb
xor
or
clc
popa
adc
cs
inc
mov
aas
adc
jo
aad
aad
js
or
lahf
mov
mov
rolb
sbb
shll
sbb
mov
mov
mov
int
jp
xchg
popf
adc
mov
xor
shll
imul
sbb
and
push
xor
cli
jno
stos
sbbl
adc
sub
cli
push
pop
loopne
cmc
xchg
or
or
jge
push
pop
fcmovbe
cwtl
and
data16
sbb
fadd
inc
loop
arpl
daa
popa
jbe
xchg
cli
ficoml
das
lds
lret
jb
add
or
addb
sub
cmpsb
pop
inc
sbb
mov
push
cmp
dec
scas
std
push
mov
or
xchg
fdivrp
push
and
jbe
ret
into
test
pop
cmp
ja
call
cmpl
add
aad
xchg
test
pop
cmp
test
fmull
pop
jle
scas
cwtl
icebp
movsb
in
inc
pop
sar
and
cmp
xchg
rcl
iret
adc
das
pop
sbb
js
mov
cwtl
cmpb
adc
cmpb
or
xchg
sahf
xor
cwtl
mull
loop
in
cmp
dec
scas
in
sbb
in
mov
popl
mov
iret
enter
stos
and
add
outsb
cmp
scas
dec
stc
dec
mov
cwtl
in
mov
jp
insb
mov
sbbb
icebp
ss
cmp
push
add
jo
cmp
mov
inc
das
pop
push
push
jb
pushf
cmp
dec
cmp
jl
std
dec
aaa
fmul
fisttpl
cmpsl
arpl
lcall
jb
mov
jbe
pop
pop
sbb
jno
and
mov
push
pop
les
sbb
ds
sub
popa
rcl
jo
leave
mov
mov
mov
inc
lret
lods
cmp
fisttps
pop
dec
push
loop
jp
aas
lcall
cmovbe
in
arpl
adc
lds
mov
push
fsubr
xchg
inc
mov
jmp
cmp
jle
cmpsl
cwtl
cmp
cmp
decl
movsb
lods
test
sbb
inc
inc
jbe
sbb
inc
rorl
push
test
jmp
mov
ja
push
mov
into
mov
fdivrs
sbb
push
jmp
scas
dec
pop
test
sub
and
sti
ret
jo
dec
and
dec
inc
int3
mov
sub
fcoml
outsb
pop
dec
mov
movsl
mov
xchg
loop
push
mov
cmp
lods
cmpsl
or
xorb
lods
cmpsb
cmc
pop
push
mov
cld
lret
in
pop
loop
mov
inc
sti
daa
out
jns
push
rorl
lcall
bound
mov
imul
sub
fcmovbe
loop
int
xchg
mov
xchg
daa
sub
pop
arpl
dec
sbb
pop
xchg
addr16
xchg
pop
and
jb
and
xchg
inc
jle
fstpl
push
push
iret
push
rorb
mov
test
push
jmp
or
cmp
movsb
pushf
add
js
pushf
add
jge
in
sbb
mov
mov
ds
outsl
push
addl
pop
push
imul
loop
mov
cmc
pop
and
inc
cmc
sbb
cmp
int3
mov
inc
pop
mov
test
ret
or
test
push
pop
data16
dec
cmp
mov
inc
inc
jbe
ds
mov
dec
ret
dec
and
pop
mov
lahf
push
mov
daa
inc
jo
and
pop
rcll
xor
pop
es
inc
inc
xor
jbe
xchg
dec
inc
dec
add
jge
pop
adc
pop
mov
cmp
push
aam
xchg
push
mov
imul
in
xchg
nop
loop
or
sti
imul
jo
stc
out
iret
mov
rcrb
pushf
outsl
pop
mov
mov
dec
mov
aam
xor
js
inc
mov
ret
xor
mov
jne
and
xchg
inc
mov
xchg
in
sahf
push
sbbb
inc
pushf
shlb
and
aam
mov
movsb
cmp
sbb
xchg
cmp
leave
push
mov
push
push
cwtl
inc
imul
xor
lds
sbb
inc
loopne
add
mov
inc
xchg
mov
std
jbe
out
sti
dec
aas
sahf
mov
inc
fs
inc
jl
and
push
jl
sarb
js
inc
popf
out
jne
inc
and
inc
xor
lret
ss
push
or
pusha
push
loope
xchg
aam
pop
jnp
sub
aad
in
test
xchg
push
ds
pushf
lods
int3
out
arpl
movsb
sub
xchg
stos
stos
push
lea
or
push
inc
jg
push
sub
inc
adcb
lock
int3
arpl
outsb
bound
push
std
add
jb
fcompl
inc
ja
xor
lcall
xchg
ror
mov
shlb
push
call
sti
sarl
jbe
add
mov
sbb
stos
aam
js
cmpsb
pop
mov
push
xchg
add
xchg
arpl
popa
sahf
icebp
jnp
pop
push
xor
sahf
xor
jl
pop
imul
xchg
aas
out
fstl
cmpsl
sbb
dec
mov
push
push
arpl
add
leave
lahf
roll
pop
aam
mov
lcall
xor
cmpsb
xor
xchg
test
cmp
inc
mov
enter
in
pop
xchg
test
mov
inc
jae
fsts
cmp
jo
sahf
lret
andb
or
xor
sti
inc
fldl
xor
sbb
mov
cmpsl
inc
mov
aam
push
pop
sbb
ds
mov
xchg
in
lahf
in
sub
dec
xchg
les
mov
jp
cmp
fidivs
jge
inc
add
jae
shl
mov
or
shlb
test
in
nop
aam
xchg
mov
jle
ret
adc
xor
mov
or
mov
sbb
into
sbb
or
test
lcall
sahf
mov
adc
xchg
xchg
jge
out
pushf
ret
popf
pop
sbb
inc
and
xchg
adc
jbe
call
add
mov
push
or
es
push
outsb
xchg
dec
mov
inc
push
sbbb
or
sbbb
int3
pop
cwtl
mov
out
pand
cmp
inc
sbb
sti
jbe
cmpl
dec
pop
out
mov
push
push
sub
cmp
ds
push
in
xchg
cmp
pop
clc
lahf
mov
inc
and
sbb
clc
mov
dec
dec
sahf
bound
inc
push
leave
mov
aam
jle
cmpsl
jb
mov
push
dec
adc
sahf
dec
mov
pop
push
ss
dec
pop
mov
stc
ds
xor
pop
cmp
xchg
pop
jbe
adc
xchg
sbb
mov
jnp
jns
pop
mov
arpl
add
test
mov
sbb
arpl
xchg
lds
mov
xchg
out
mov
in
push
mov
add
mov
cmp
and
mov
jo
movsb
mov
es
jbe
fistl
ja
mov
addb
xlat
cmp
dec
or
rcll
mov
dec
pop
fiadds
aad
xchg
aad
lcall
xor
je
mov
popa
xor
pop
push
inc
cwtl
push
xor
outsb
and
ljmp
sarb
addb
pop
test
pop
in
into
and
push
jb
dec
pushf
jle
jp
outsl
push
jo
sub
fisttpll
jb
movsb
mov
cmp
shl
push
cmp
imul
stc
jp
mul
push
pop
xchg
push
and
lds
push
push
decb
dec
in
mov
jp
test
scas
daa
inc
lret
sbb
xor
dec
jb
divl
ret
xor
js
jae
inc
cwtl
subb
in
mov
sub
xchg
cld
sbb
fnstsw
xor
mov
adc
popa
aaa
sub
sbb
addb
xchg
inc
mov
add
mov
inc
ficoml
movsl
out
mov
negb
xchg
inc
or
das
or
push
xchg
dec
adc
call
sbb
adc
and
mov
dec
mov
xchg
imul
mov
mov
pop
adc
and
push
roll
js
lods
ret
aas
xor
xchg
and
fsubl
ss
mov
push
cmp
jo
xchg
sbbb
cltd
jle
rcll
and
xchg
inc
pop
cmp
je
cmc
inc
lret
lcall
dec
jp
xchg
adc
lods
loope
inc
lea
insb
out
stos
inc
loop
loop
mov
pop
aas
loopne
pop
cmp
js
push
push
push
or
dec
iret
sti
cld
push
push
gs
ljmp
lret
lret
sbb
subb
inc
xor
ret
test
sahf
pop
dec
in
ds
push
jle
xor
pusha
inc
push
pop
in
dec
add
ss
push
or
mov
test
push
cli
dec
pop
jge
xchg
mov
in
int3
sub
push
inc
and
and
movl
push
popa
push
arpl
mov
mov
and
lret
outsb
jnp
call
or
jl
scas
inc
ds
mov
mov
test
push
push
fdivs
push
sbb
test
ret
push
pop
mov
xchg
push
std
push
inc
xchg
cmp
imul
cmpl
inc
ds
test
ja
inc
push
pop
xchg
loop
fiaddl
xor
fstpl
fidivs
inc
add
pop
xchg
lcall
sub
xchg
popa
sub
cwtl
dec
push
and
daa
sarb
push
mov
sub
std
fmull
ret
adc
jp
loopne
xor
or
sbb
mov
dec
lahf
fidivrl
pop
fidivl
cmc
sub
dec
add
add
push
inc
dec
sub
jmp
push
or
push
jmp
pop
pushf
aam
test
sbb
aam
jo
ret
mov
idiv
int3
cmp
sarb
mov
and
pop
aad
mov
popf
xchg
inc
ret
dec
dec
jl
and
movsb
push
push
dec
aaa
mov
push
and
aad
push
nop
insb
or
nop
dec
sbb
ss
mov
outsb
lahf
jmp
scas
cli
jbe
out
call
push
cmp
mov
rcrb
pop
cmpsl
cmp
dec
cmp
jbe
xchg
jb
and
mov
mov
int3
aad
cmp
mov
iret
movsl
cltd
xchg
push
lcall
xorb
or
fisttps
xor
movsb
cmp
cli
push
pop
mov
in
mov
arpl
mov
mov
ret
in
mov
jbe
adcb
adc
cmp
push
out
sub
shlb
inc
sub
mov
sbb
loopne
or
push
mov
fidivs
dec
in
in
mov
and
out
mov
cwtl
mov
pop
ficompl
stc
ret
adc
push
movsb
ds
orb
vunpckhpd
push
mov
adc
sub
mov
in
outsb
jno
jno
lcall
inc
insb
out
sbb
insl
push
sbb
movsl
sarb
dec
js
pminub
cmc
dec
imul
jle
lret
mov
ljmp
ret
fisubs
push
xor
ja
cmp
sbb
loope
out
push
rcrb
mov
iret
into
fidivrs
push
inc
jp
pop
cld
inc
add
rorb
ss
stc
mov
xor
mov
xchg
add
pop
lret
dec
mov
ficoml
popa
pop
mov
inc
adc
inc
addb
mov
mov
or
out
pop
iret
push
popa
mov
dec
inc
lds
dec
out
or
inc
or
xchg
ds
in
arpl
inc
fistl
lret
or
popa
das
fsubrl
scas
inc
in
scas
mov
jnp
mov
push
in
xor
fbstp
pop
mov
mov
in
mov
ss
jbe
fbstp
sahf
int
in
adc
std
jp
in
mov
sbb
fwait
insl
jg
in
cs
popa
sbb
in
call
inc
in
scas
mov
jnp
mov
sbb
mov
lds
pop
mov
mov
in
fdivs
and
ss
jbe
fbstp
sahf
int
pusha
in
scas
scas
mov
loop
shrl
cli
jl
xchg
xchg
addr16
jae
pop
adc
sahf
loope
push
xor
outsl
jo
call
push
inc
xchg
push
and
and
jp
cmp
fstl
fidivrl
ljmp
mov
movsb
jle
js
jbe
cmp
xchg
sub
xor
xorb
sarb
jae
pusha
lret
data16
push
cwtl
inc
mov
idivb
test
xor
sbb
dec
push
mov
and
cmp
leave
mov
popa
stos
aas
adcb
inc
idivb
pushf
push
mov
mov
sub
ds
push
stos
fidivs
jne
fnsave
ss
cmp
sahf
mov
pop
notb
pop
dec
out
adc
and
dec
mov
xchg
or
xor
and
jns
jp
jbe
loope
or
inc
pushw
pop
fcoms
call
dec
push
out
cmp
jle
lea
mov
mov
push
mov
sbb
ja
out
pop
adc
rep
push
insb
mov
push
inc
pop
cwtl
mov
lcall
mov
sub
mov
incb
in
cli
dec
mov
cwtl
movsl
mov
xchg
stc
add
fdivr
in
mov
lea
jg
and
sub
dec
sbb
stos
std
sub
cmp
ret
xchg
and
rclb
jb
jmp
inc
sbb
in
adc
stc
cwtl
insl
insl
pop
test
inc
idivb
xchg
call
lret
sbb
cwtl
rclb
push
int3
jbe
dec
mov
inc
mov
test
pop
jp
in
add
std
cli
mov
stc
adc
pop
jae
in
call
xor
out
shll
inc
mov
jnp
in
std
int3
cmpsb
adc
fwait
outsb
lret
sub
push
adc
lcall
cwtl
jo
push
loope
ret
enter
jae
fidivrs
mov
cwtl
rclb
xchg
jmp
rep
inc
in
mov
leave
idivl
sub
and
jg
xor
mov
in
xlat
jnp
jge
imul
inc
in
dec
jbe
adc
sbb
sbb
notb
decb
mov
movsb
fs
jg
in
cwtl
xchg
pop
imul
mov
add
in
mov
ficoml
icebp
fcmovnu
data16
lcall
inc
fistps
pop
or
imul
js
ds
cli
xor
push
xchg
push
dec
sub
enter
push
test
pop
push
sbb
dec
sbb
pop
inc
push
sub
imul
and
mov
push
cmp
push
test
push
sarl
inc
in
jl
xor
mov
jo
lea
scas
nop
fimull
push
pushf
cmpsb
jo
cwtl
mov
orb
and
imull
inc
xchg
pop
je
sub
std
ljmp
push
lahf
sbb
cwtl
test
test
xchg
pop
xchg
stos
jmp
or
shll
test
in
movsb
sub
sub
cwtl
les
push
pop
add
sbb
rclb
mov
ds
pop
mov
js
popf
call
sub
popf
xchg
sub
loope
js
mov
sub
lcall
xchg
cmp
inc
ss
add
es
xor
mov
arpl
inc
clc
pop
stos
dec
pop
and
or
and
xchg
xchg
dec
push
ds
push
mov
sbb
js
lods
add
jp
xor
loope
enter
bound
cs
rol
xchg
fiadds
mov
xchg
mov
mov
mov
mov
xchg
dec
gs
sahf
rolb
data16
out
loop
and
and
lds
adc
sbb
shlb
add
fidivrs
add
or
push
mov
push
inc
push
sbb
pop
inc
sbb
push
fsub
xor
and
outsl
pushl
adc
sbb
push
adc
cli
xor
imul
lds
daa
push
fadd
push
sub
or
sbb
push
aam
xor
cmp
and
and
fisttpll
sbb
imul
jns
adc
add
mov
aam
and
inc
push
xchg
imulb
sbb
or
adc
fidivs
aam
and
inc
push
mov
mov
or
adc
fidivs
aam
and
and
push
fadd
sbb
daa
lret
xor
gs
push
adc
inc
xor
pop
mov
or
sbb
sbb
sbb
push
iret
and
cmp
dec
js
cmp
and
mov
js
cmp
add
sbb
es
xchg
jns
ds
pop
ret
add
xorl
ret
cmp
dec
testb
inc
xchg
lret
push
pop
inc
xor
icebp
leave
jp
push
jl
dec
inc
sub
mov
or
mov
sti
dec
jl
ds
and
add
add
add
add
add
inc
stc
ret
sbb
jmp
add
and
dec
add
mov
push
jb
ss
mov
enter
pop
repnz
loop
lret
shlb
mov
stos
pop
out
scas
popa
js
dec
fistpl
fistl
outsl
mov
dec
cli
cmp
js
push
fistl
sbb
fildl
add
test
push
or
push
cwtl
adc
dec
mov
sbb
and
sar
push
and
and
or
dec
cmp
cmp
xor
arpl
mov
mov
push
mov
jecxz
fwait
ss
das
jp
mov
and
into
xchg
cmpb
jns
ljmp
push
fadd
push
mov
cli
push
or
push
push
daa
bound
lods
sbb
lcall
out
loop
dec
push
fnstcw
and
xchg
or
outsb
out
sti
sbb
cwtl
sti
cmp
push
fadd
push
sub
sub
or
and
and
jb
jbe,pn
or
inc
adc
nop
fs
sbb
sbb
jns
ret
mov
and
add
sbb
xchg
sub
sub
cmpl
and
inc
jg
pop
es
push
out
loop
cmp
push
js
addr16
add
push
xchg
xchg
addr16
scas
pushf
mov
jae
rcll
pop
push
in
std
push
jo
imul
xorb
imul
sub
dec
mov
out
or
push
loopne
js
leave
adc
out
lahf
cmc
xchg
sub
mov
repz
lds
movsb
div
mov
idivl
mov
or
shll
shll
jmp
and
loope
push
xchg
or
and
push
add
ja
fcmovnu
imul
clc
and
shlb
es
out
clc
push
lcall
fsts
cmc
lret
sbb
mov
dec
cmpsb
xor
lret
fmull
add
push
push
lret
sub
not
pop
sub
add
jle
iret
push
cmp
xor
into
mov
mov
pop
mov
mov
cmpsb
add
out
lret
jl
rorb
lock
rorl
loope
dec
push
clc
sbb
fdiv
stos
out
dec
fnstcw
imul
fdivs
lds
mov
fistps
push
sbb
sbb
and
or
shlb
mov
outsl
lret
inc
imul
mov
mov
sbb
cld
rorb
xor
int
and
adc
stc
arpl
mov
xlat
in
add
or
push
xor
mov
loope
jb
out
mov
cmc
mov
daa
js
fmuls
adc
push
jbe
jg
xor
cld
and
add
add
arpl
cwtl
mov
mov
mulb
push
push
dec
lret
repnz
mov
add
ficoml
scas
or
fsubrs
cmp
dec
outsl
cmpsb
xorb
mov
loop
sahf
cmp
out
gs
lds
clc
xchg
cmpsl
or
fnstsw
stc
mov
rolb
pop
sbb
or
jmp
push
ss
iret
je
stos
xchg
cmp
decb
popa
and
push
push
adc
scas
frstor
push
pop
shll
jbe
les
pop
popa
jno
mov
imul
adc
push
clc
sarb
idivb
outsb
xor
fldenv
add
and
in
out
fisubs
and
std
cmp
cs
dec
vdivpd
in
fstl
xchg
push
dec
mov
dec
ja
insl
pop
das
js
es
out
xor
lahf
std
cmp
fs
xchg
push
aad
fimuls
in
xchg
sub
fimull
lret
mov
adc
inc
add
push
jmp
cmc
lret
dec
ret
xor
rorl
lds
mov
popa
xchg
adc
push
ss
push
iret
or
lock
cmpsb
shlb
outsb
clc
popa
xor
mov
jle
cmc
jg
stos
stc
stos
push
ljmp
mov
inc
sbb
and
popa
adc
mov
push
dec
lahf
inc
inc
xor
dec
repnz
es
jl
xlat
push
xor
repz
ds
mov
sbb
push
sub
lds
inc
mov
data16
out
mov
pushf
add
push
xchg
ja
inc
popa
enter
xlat
jbe
stos
nop
dec
fisubrl
divb
push
out
and
in
es
sti
jbe
fnsave
mov
pop
sbb
inc
jmp
sbb
push
adc
mov
push
push
pop
std
sarb
ds
sub
jno
push
outsb
dec
and
cmp
ss
fisubl
mov
jle
out
clc
dec
test
cmp
mov
adc
mov
mov
dec
push
dec
push
push
pop
xchg
adc
lds
jg
inc
aad
add
and
and
jg
jecxz
gs
fld
cmpsb
push
fisubs
pop
js
jbe
cmpb
stc
mov
jecxz
std
in
inc
inc
adc
mov
jns
out
push
jmp
dec
leave
push
sbb
inc
sbb
sti
xchg
pushf
out
aad
jl
out
ss
cmp
xor
arpl
stos
push
loop
scas
add
xlat
into
pop
pop
dec
dec
push
jle
notb
scas
mov
dec
mov
aad
push
jecxz
std
stc
pushl
add
cmpsl
jae
lea
mov
xor
dec
fidivl
mov
lcall
leave
movsb
mov
or
mov
xor
xor
dec
cs
xchg
shl
pop
mov
xchg
es
pop
xor
xor
jecxz
icebp
or
gs
push
cmpsl
int3
leave
pop
mov
imul
push
push
loop
jno
jp
jnp
out
movsb
jo
loope
mov
and
sbb
adc
orl
mov
dec
imulb
stc
jbe
cmp
and
adc
push
ss
push
cmpsl
mov
hlt
lds
xchg
popf
push
pushf
and
and
mulb
outsb
cmc
and
jns,pt
sbb
sbb
mov
stos
fxtract
dec
fistl
dec
iret
push
xor
push
nop
xlat
xchg
dec
jle
divb
xchg
push
arpl
fidivl
mov
push
add
inc
and
push
sbb
jbe
xchg
or
data16
bound
mov
dec
mov
arpl
jmp
stc
push
mov
mov
lods
repnz
scas
movsb
jnp
push
cwtl
push
bnd
enter
in
pop
jnp
push
gs
xrelease
xchg
loope
xchg
out
aas
fmuls
imul
cld
cli
push
push
jle
dec
stos
pop
cli
push
popa
fcmovnbe
mov
cwtl
xchg
xchg
mov
ds
push
adc
dec
gs
dec
mov
inc
pop
loopne
cmpsl
in
jp
jbe
pusha
ret
xor
cmp
push
xor
push
sahf
into
jnp
mov
int
dec
push
dec
dec
in
push
xchg
inc
jo,pn
dec
flds
jecxz
movsb
inc
cs
cmpsb
mov
sbb
rorl
jns
dec
ss
push
xor
clc
xchg
adc
pop
ffreep
and
xor
push
repz
aaa
sbb
cmc
xchg
popa
imul
arpl
pop
and
adc
dec
imul
adc
outsb
or
je
jns
add
mov
sbb
les
jnp
push
dec
ljmp
push
mov
mov
jg
cs
lods
in
subb
push
ret
loope
and
jnp
mov
pusha
sahf
mov
std
minps
and
dec
pop
jmp
nop
push
fimull
loope
mov
orb
jg
ja
push
inc
dec
pop
fadd
fcomip
repz
push
popa
inc
push
rcll
ljmp
push
dec
mov
mov
pushf
mov
fldenv
call
mov
push
dec
cli
sub
ja
inc
fcomps
xor
or
fmull
mov
mov
push
aam
imul
push
pop
xchg
push
mov
loope
das
stos
push
and
pop
inc
add
xchg
enter
and
sbb
loopne
jbe
mov
sti
imul
out
xchg
in
pop
arpl
jbe
jle
cmp
push
sbb
stc
push
imul
pop
xor
push
or
xchg
in
adc
fsts
sahf
cmp
push
stos
test
jno
notb
ss
fsubrl
outsb
shrl
fidivl
sbb
dec
ljmp
cltd
xchg
sub
add
mov
sub
push
lret
int3
push
call
mov
xor
cld
or
loop
xlat
adc
popa
and
loope
and
mov
subl
mov
ret
leave
sub
xchg
lods
mov
and
ret
push
fcomp
sbb
mov
inc
imul
ja
es
jp
mov
sub
sbb
mov
lret
daa
lods
aaa
xchg
jge
daa
mov
scas
mov
jo
mov
push
and
and
loope
mov
dec
pop
mov
cmp
sbb
out
neg
adc
jo
mov
fld
xor
push
mov
out
xchg
push
mov
sbb
and
sub
insl
xor
sbb
and
aam
xlat
cmp
jb
mov
adc
and
xor
imul
dec
xchg
fstps
mov
in
popa
push
xor
imul
adcb
rol
data16
adc
pop
jl
xchg
dec
sbb
sub
push
inc
scas
jno
jns
mov
std
pop
and
lret
and
jo
push
mov
jbe
push
imul
sub
js
or
add
mov
jo
rclb
or
fstps
ja
jns
jle
jae
mov
jnp
push
sbb
js
dec
add
je
sbb
repnz
or
cmc
mov
push
push
dec
orl
jmp
dec
into
pop
push
adc
adc
sub
and
rcrl
mov
mov
movb
xchg
in
cmpb
push
imul
mov
aaa
inc
mov
outsl
fs
ljmp
mov
mov
outsl
push
push
xor
jge
iret
and
out
ret
xchg
mov
int
push
outsl
jl
sub
sahf
je
shl
push
popa
add
ljmp
je
push
rclb
push
mov
icebp
in
pop
or
inc
cmp
push
arpl
xchg
fldcw
jb
popf
lahf
xchg
adc
fiaddl
and
sbb
aam
aam
mov
sbb
jae
fisubrs
xor
or
sbb
or
cs
xchg
push
mov
fistpll
icebp
shlb
mov
or
in
sbb
enter
cli
dec
and
in
pop
cwtl
xchg
lods
imul
inc
sub
sbb
dec
dec
push
sbb
dec
icebp
arpl
imulb
insl
outsb
lcall
add
sar
push
sub
mov
inc
pop
or
lret
sbb
pusha
lds
imul
popa
stos
mov
insl
lret
out
jbe
inc
out
or
out
jbe
pop
jmp
imul
push
lahf
bound
scas
mov
popf
imul
imul
ret
push
out
ja
pop
dec
bound
mov
add
pop
inc
xor
shll
or
sbb
scas
xchg
cmp
xchg
leave
int3
repnz
pushf
in
shll
sub
pusha
push
in
pop
mov
dec
pop
xor
push
pusha
cs
vucomisd
je
jp
sbb
push
push
xor
mov
repz
dec
movsb
or
fimull
fisttpll
sbb
sub
cmpsb
sbb
push
and
out
push
js
mov
push
fdivrs
test
sbb
jg
dec
leave
scas
jo
mov
mov
cmpsl
dec
je
dec
imul
jns
fwait
and
jg
cs
push
je
fsubr
imul
or
imul
es
sub
ljmp
inc
xchg
arpl
jno
fadds
fiadds
lds
test
xchg
test
js
push
sbb
xor
and
lcall
adc
jne
add
xchg
push
loop
data16
imul
dec
sbb
xchg
jne
in
leave
cmp
pusha
xor
ja
mov
dec
pusha
and
imulb
jo
xchg
inc
or
ss
scas
jns
std
outsl
or
xchg
xchg
in
es
sbb
sub
stc
loop
push
mov
lret
mov
je
lahf
push
and
ss
push
mov
gs
mov
sbb
or
ficomps
sbb
clc
jmp
out
push
cli
sbb
jb
mov
sbb
mov
mov
fwait
cmpsl
push
push
mov
mov
cwtl
jge
lds
jne
inc
fistl
push
inc
lea
pop
mov
dec
vmovaps
xchg
xor
out
rcr
imul
out
roll
jecxz
or
lret
jne
add
inc
or
loop
fimuls
push
loopne
and
xor
sub
or
ss
je
pop
push
cmp
mov
fsubs
es
inc
jg
jnp
push
xor
cmp
lea
stos
ljmp
fldcw
push
mov
iret
je
inc
rcll
mov
jno
out
mov
mov
xchg
xor
xor
mov
scas
in
mov
xchg
shrl
daa
ret
push
mov
xorb
and
jmp
repz
jbe
and
imul
andl
pop
out
fcomi
jbe
jg
push
mov
adc
out
in
push
mov
in
jbe
adc
outsb
mov
cmpsb
dec
push
adc
cmp
shrl
cmpsl
adc
scas
loopne
pop
jl
cmp
sub
cli
xchg
ljmp
push
push
xchg
dec
xchg
sbbb
out
push
cs
imul
and
xor
adc
sbb
xchg
push
jno
clc
out
std
and
out
xor
shl
je
mov
xchg
adc
and
mov
adc
ss
dec
bound
inc
shl
jecxz
les
fldt
shll
push
push
dec
push
popa
push
outsl
mov
in
xor
inc
jle
push
mov
push
ss
int3
lret
inc
popa
dec
inc
inc
loop
ja
icebp
pop
cmp
sti
xchg
fldenv
dec
repnz
jo
sti
push
mov
xchg
lret
orb
cmpsl
jo
fcoml
hlt
outsb
loope
mov
xlat
xor
ffreep
sub
out
adc
lds
bswap
xor
inc
mov
xchg
xchg
test
mov
add
shl
bts
or
shr
shrd
or
rcr
neg
mov
mov
cmp
add
not
bswap
pusha
movsbl
mov
call
lea
je
cmc
stc
test
add
clc
bt
cmp
cmp
call
or
jnp
pushf
fsubl
mov
push
xchg
sarl
arpl
aas
aaa
daa
addr16
xor
mov
cld
dec
dec
sub
imul
jnp
imul
hlt
pop
jno
pop
push
stos
dec
mov
push
test
dec
repnz
pusha
mov
pop
or
dec
aas
shrb
leave
aad
pushf
fadd
dec
xchg
push
test
test
pushf
shlb
adc
aaa
xlat
scas
scas
inc
inc
push
inc
stos
inc
rolb
loop
add
sub
pusha
mov
mov
push
dec
loop
pusha
paddw
movsl
out
add
mov
imul
inc
aas
sub
jb
mov
inc
sbb
outsl
popa
pop
jnp
mov
stos
jle
mov
add
push
popf
or
mov
xlat
pop
les
cmp
aam
arpl
sub
xor
mov
imul
divl
xchg
and
dec
cltd
dec
popf
fistpl
iret
leave
cli
iret
enter
sahf
testl
cli
ljmp
adc
movl
pusha
pusha
pushf
pushl
lea
jmp
lcall
push
loop
data16
add
xorb
addb
test
divl
push
test
or
ret
push
adc
xchg
adc
mov
out
js
pop
and
cmp
sahf
loop
dec
push
aas
pop
imul
adc
cmc
movw
not
call
cmp
pusha
call
jmp
mov
fldt
fmull
rcrb
xor
add
pop
test
stc
popw
repnz
lret
mov
sti
mov
imull
xor
mov
pop
push
insl
xchg
andb
insl
jo
jle
lds
pop
jno
xorl
fldt
aaa
push
test
bt
add
jmp
not
bswap
lea
pushf
mov
push
movb
movl
pushf
lahf
movb
lea
mov
pusha
jmp
clc
cmp
movb
push
lea
jmp
mov
fcompl
push
outsb
jbe
mov
ret
mov
cmp
inc
scas
and
mov
insb
pusha
cwtl
jmp
xor
mov
push
pop
icebp
mov
loope
inc
stc
xchg
or
pop
sahf
cmpsb
cmp
iret
int
xlat
xchg
inc
add
scas
jecxz
lods
gs
or
mov
jnp
scas
lds
jne
ljmp
jmp
popa
mov
xor
pop
mov
jge
push
mov
movzbw
sub
shl
sub
btr
and
bt
mov
cmc
stc
sub
call
lahf
pushl
lea
jmp
add
add
cmp
shld
call
pushf
call
xchg
pop
call
cmc
add
bt
test
pushf
mov
test
jmp
test
std
stc
pushw
popfw
call
pusha
lea
je
pusha
pusha
call
jmp
aam
popa
imul
mov
dec
bound
cwtl
mov
js
push
sbb
loopne
mov
mov
sbb
out
push
and
xchg
ja
mov
nop
insl
jo
imul
orb
ret
insl
mov
and
and
mov
clc
cmc
call
loop
and
pushf
faddl
test
in
push
fdiv
sub
mov
adc
push
in
aam
inc
inc
push
push
sub
fistpll
or
loopne
movsb
dec
push
sahf
or
xor
scas
dec
dec
mov
imul
jne
xchg
adc
fimull
cli
test
mov
pop
dec
out
pop
cmp
mov
lcall
cmp
fsubrs
addr16
sub
inc
mov
mov
pop
aam
lret
outsl
pop
xor
jmp
pop
or
fbld
orl
rcrl
jno
das
out
push
fs
shrb
sti
jmp
inc
and
repz
movl
push
pushl
call
jmp
cwtl
push
stc
mov
shrd
bsr
stc
sub
and
mov
and
push
adc
movsbw
rol
push
stc
neg
sar
push
bsf
bts
shl
shr
push
neg
mov
stc
test
je
je
shrd
or
jne
push
mov
jmp
jmp
push
or
cmp
outsb
adc
sbb
stos
xor
or
inc
xor
rcl
mov
sbb
and
mov
xlat
sti
aad
lret
xor
cmpl
das
mov
and
pop
imul
inc
fldl
or
xor
test
addr16
xor
repnz
sub
in
dec
loop
adc
mov
inc
gs
add
jecxz
stos
loop
push
cmp
lcall
insl
cmc
movb
rol
stc
cmc
pushl
jmp
mov
fdiv
cmp
or
leave
push
test
sbbl
std
loopne
lock
sub
xchg
lea
lds
push
test
enter
pop
push
adc
repz
icebp
mov
pushf
xor
dec
mov
add
imulb
pop
js
pop
cwtl
aad
push
mov
fs
sbb
mov
mov
mov
test
aaa
fcom
or
push
cmp
xor
inc
fcmovnu
in
flds
jns
adc
rorl
push
dec
movsb
jo
xchg
or
movzwl
add
mov
shl
rcr
shl
mov
push
bt
bt
call
test
pushfw
fsubr
xchg
cmpsl
out
jmp
mov
or
dec
pop
inc
test
push
xchg
lods
and
dec
xor
pusha
stos
dec
out
test
add
nop
lahf
shll
mov
enter
cli
inc
dec
divl
xor
adc
test
mov
xchg
sub
mov
inc
mov
fwait
xchg
aaa
jg
xor
sub
mov
jns
insb
adc
inc
aas
stc
call
imul
aaa
mov
icebp
lea
sbb
inc
mov
inc
stos
or
xchg
xor
stc
out
nop
add
and
mov
jno
and
jo
xor
xchg
and
jne
and
fbld
cli
mov
pop
decl
rolb
lret
and
push
cmp
and
xorb
mov
or
movsl
mov
inc
cmp
call
ret
sub
cmp
das
push
inc
and
jo
xchg
sahf
insl
jo
rolb
adcl
icebp
xor
mov
jle
repnz
sbb
mov
pushf
faddl
ss
fsubp
sub
push
outsb
or
jbe,pt
out
lret
das
xlat
insb
jns
sub
imul
das
inc
xlat
out
push
pop
fildl
and
cmpsb
push
cmp
sub
adc
fstl
rolb
in
outsl
sbb
mov
pop
or
xor
add
rol
adc
mov
sar
cmpsb
push
mov
xchg
loope
and
call
add
dec
iret
btc
movsl
fisttpll
jmp
pop
loope
flds
mov
xchg
jmp
xor
xchg
push
push
add
call
imul
ja
push
in
xlat
cltd
fnstcw
pop
movsl
pop
fisubrl
add
jo
insb
mov
scas
loopne
cmp
int3
das
cld
mov
pop
mov
mov
rcrl
mulb
mov
mov
fs
jne
lea
pushf
movb
push
lahf
not
seta
mov
jmp
xor
mov
iret
daa
inc
stos
sti
fbstp
pop
jg
xor
cmp
jmp
rorb
stos
cmp
cmp
aam
insb
imul
mov
jmp
inc
sub
add
lds
stc
push
aam
inc
clc
pushf
movw
lea
jle
pusha
mov
call
xor
pushf
jmp
movw
pusha
lea
je
push
pushf
push
pushf
lea
jmp
cwtl
pop
dec
arpl
sbb
test
rcl
cmp
mov
mov
inc
inc
and
dec
daa
mov
pop
mov
das
addr16
inc
jl
jbe
pop
gs
sbb
mov
sahf
and
clc
or
fmull
sti
mov
and
ja
push
popf
dec
test
rcrl
jne
push
inc
mov
adcb
call
jbe
mov
in
andl
popa
add
pop
xchg
std
ljmp
push
repz
sahf
push
sbbl
in
inc
movsl
popa
inc
jge
sarb
push
or
jmp
rol
or
and
pop
xchg
cmp
xor
pop
movsl
mov
inc
jmp
imul
call
pushl
push
pushf
fmull
dec
xchg
and
or
in
add
lds
mov
sub
jp
push
adc
es
ficoms
add
out
push
rorl
stc
mov
js
cmc
fdivrl
cmp
push
pop
shrb
add
or
les
and
xor
cmc
pop
loope
pop
cltd
xchg
adc
pushl
lea
je
test
clc
add
pushf
clc
push
cmp
mov
lea
jmp
mov
call
lea
jne
sar
sar
mov
cmp
bt
pusha
or
mov
lea
je
movsbw
setae
lea
movzbl
xchg
movzwl
movsbw
pusha
lea
push
lea
mov
pusha
lea
call
pusha
pusha
jmp
lods
call
jb
hlt
pusha
pushf
fsubrl
mov
sbb
mov
xor
sub
in
mov
xchg
sbb
fmuls
sub
out
bound
pop
fisubs
push
push
mov
cmp
mov
sti
mov
stc
aas
jmp
inc
xchg
add
pop
icebp
sub
and
mov
xchg
inc
sbb
cmp
stos
mov
jae
push
rolb
xlat
mov
dec
nop
mov
mov
cli
rclb
mov
xchg
xchg
arpl
push
jge
and
int3
fisubl
es
fmulp
xor
pop
or
or
xor
vextractf64x2
mov
sbb
mov
inc
scas
incb
cmp
pusha
pushf
fcoml
popa
mov
test
stos
sahf
aam
out
stc
push
mov
add
shll
scas
sbb
stos
ret
cmpsb
mov
pop
inc
ljmp
andb
insb
repz
pop
jp
pop
cmp
adc
scas
outsl
data16
popf
pusha
ds
pusha
scas
push
out
in
or
add
mov
jmp
in
pop
imul
adc
out
ficoms
push
out
mov
jg
pusha
cld
inc
jb
mov
ljmp
testl
pop
and
push
arpl
lret
mov
pop
and
push
jecxz
test
and
jo
test
mov
mov
mov
push
dec
cs
shlb
and
sub
lock
jo
or
in
adc
fmull
out
insb
pop
into
mov
daa
movsb
pop
leave
nop
xchg
cld
insl
xor
add
mov
insl
ja
pop
test
push
xchg
bound
lret
mov
mov
shll
cmp
pop
dec
mov
addb
push
in
push
mov
mov
repz
mov
bound
scas
loop
xlat
and
dec
dec
jp
cwtl
pop
fwait
xor
pusha
push
mov
das
xor
imul
sbb
cmp
std
pop
push
mov
mov
mov
ds
push
cs
sub
popa
dec
arpl
testb
push
inc
cmp
inc
fimull
xlat
and
mov
pop
pushf
fsub
mov
ljmp
xchg
sbbb
adc
loope
lods
sub
mov
xor
pop
mov
out
imul
subl
int
insl
jo
fnstenv
cmp
sbb
fcoms
mov
aas
cmp
mov
lea
ja
rcl
push
add
shl
adc
mov
call
push
jmp
pusha
jmp
xchg
add
cmc
imul
inc
aas
cmpsl
cmpsl
pop
addr16
jg
xchg
daa
or
push
fisubl
cmc
dec
inc
sbb
sub
clc
enter
add
cmc
fisttpll
xor
lret
sbb
sub
add
jbe
jbe
sub
xchg
inc
fwait
iret
data16
jle
pop
pushf
fmull
pop
push
mov
std
or
shll
add
mov
movsl
into
loope,pt
inc
xchg
jns
sub
stc
inc
cmp
lret
or
fdivp
xor
sub
mov
js
lret
or
mov
push
pop
call
xor
sbb
push
push
jbe
imul
add
pop
shl
movl
push
jmp
pushf
lea
ja
pushf
jmp
pushf
call
cmp
push
lea
ja
shl
call
call
repz
call
outsl
xchg
fcoml
mov
adc
mov
fmull
xchg
fistps
es
lcall
pop
aas
outsl
repz
stos
push
mov
pop
fwait
aaa
mov
ret
add
add
lret
push
inc
std
sti
mov
shrl
popa
mov
cmp
aas
jp
je
mov
jbe
sbb
mov
cmp
gs
je
pop
pushf
faddl
ja
repz
cmc
call
adc
pop
pop
cld
cmp
clc
mov
jb
cmp
out
into
pop
xor
mov
jno
loope
jge
std
nop
pushf
movl
jmp
pusha
mov
mov
push
pushl
ret
jmp
fs
dec
pop
pushf
fcompl
adc
xchg
mov
sbb
lods
add
push
movsl
popa
dec
jecxz
popf
and
xor
sbb
sbb
imul
adc
pusha
push
sub
lret
mov
outsb
stc
xor
cs
sbb
pop
pushf
fsubl
xchg
roll
dec
in
mov
bound
movb
loop
xchg
rorb
stc
inc
mov
ja
popf
daa
and
or
jp
add
hlt
xchg
iret
pop
pop
in
xchg
les
mov
jp
push
je
sbb
adc
aaa
mov
in
repz
pop
in
cmpsl
xor
xlat
in
insl
std
pop
stos
add
ret
rcll
test
arpl
cmp
pop
fistpl
in
jmp
scas
out
in
cs
addr16
pop
les
lock
inc
sbb
shrb
push
nop
jge
push
mov
mov
insl
mov
jae
in
mov
inc
mov
add
enter
jbe
outsl
mov
outsl
fisubs
repz
or
sbb
push
dec
mov
es
addb
xchg
inc
pop
out
pusha
push
lea
je
bswap
mov
cwtl
lahf
not
push
mov
pusha
lea
call
pusha
mov
lea
jno
pushf
mov
pushf
pusha
lea
call
jmp
or
pop
pushf
fcompl
insl
jns
shll
jb
add
lret
notl
push
sub
orl
ror
pop
aas
icebp
mov
adc
pop
aad
fistl
cmc
jecxz
push
imul
inc
scas
cmp
mov
lock
xchg
add
imul
jge
aam
push
lret
pop
add
mov
and
mov
mov
out
xor
out
xchg
or
popf
inc
xor
add
test
not
jmp
mov
pop
call
rol
call
shl
mov
bt
jmp
jne
gs
xor
fs
insb
add
es
pushf
fdivl
pop
clc
jo
enter
mov
add
sar
leave
mov
in
outsb
js
jbe
and
imul
mov
inc
mov
jo
in
js
ds
out
out
and
clc
sahf
mov
push
aas
sbb
jo
aam
xchg
lea
add
test
leave
out
add
sbb
mov
fcoml
mov
les
xchg
in
adc
add
repnz
jp
je
jbe
mov
and
sub
mov
mov
in
xchg
insb
roll
xchg
out
jbe
jb
outsb
xor
rcr
push
cmp
insb
scas
cmp
stc
roll
lret
mov
pusha
sti
scas
pop
inc
dec
fsubrl
xchg
dec
in
xlat
inc
cmp
movsb
jle
or
lea
lcall
daa
nop
pushw
mov
fisubrl
pop
push
cmp
mov
loopne
scas
add
mov
push
insl
inc
adc
mov
lock
pop
sbb
mov
xchg
pop
fsubrl
cmpsb
nop
pushf
mov
adc
les
not
shrb
hlt
and
rcl
jp
mov
loopne
in
subl
jnp
fists
add
xchg
cmovge
outsl
scas
lahf
add
xor
sub
pushf
mov
push
mov
lea
je
jmp
clc
add
stc
movzwl
adc
shr
pushf
mov
test
cmc
add
push
mov
bt
bt
mov
stc
call
add
inc
gs
outsl
fs
gs
imul
add
add
push
mov
or
call
call
jmp
ds
pop
pushf
faddl
pop
push
cmp
sbb
xor
adc
mov
inc
push
fwait
dec
push
out
and
sarl
sub
sbb
inc
mov
popa
cmp
cmp
dec
cmp
add
icebp
lods
pop
pushf
fsubr
mov
sub
push
mov
pop
sub
xor
fsubs
xor
scas
js
inc
ja,pt
push
into
sub
movsb
sbb
gs
mov
icebp
xchg
mulb
aam
mov
mov
pop
and
mov
mov
xchg
push
mov
and
inc
xor
mov
cmp
fld
jno
sbb
adc
dec
sbb
jo
mov
mov
pusha
std
jne
scas
cmp
scas
and
outsl
bound
mov
cmp
xchg
add
xorb
mov
lock
pop
cmp
push
icebp
mov
and
stos
push
inc
mov
push
loopne
stos
xor
jl
movsl
inc
push
lcall
mov
jecxz
arpl
sbb
in
sub
dec
stos
call
clc
lock
adc
jne
out
sbb
mov
cmp
dec
in
jmp
fucom
cmpsb
mov
aaa
icebp
pushf
jecxz
dec
sbb
leave
call
xchg
test
xchg
cmp
sub
xor
pop
adc
fldcw
pusha
xchg
add
xor
pop
arpl
adc
js
in
jns
mov
push
dec
xchg
je
inc
jg
jae
adc
or
and
bound
or
jo
jl
and
push
leave
pop
outsb
jno
xchg
cmp
mov
xor
jmp
xlat
jns
adc
jmp
sti
dec
sub
jo
sbb
or
test
add
bt
jmp
sub
pushl
rol
cmp
jmp
cmc
pushf
sub
lea
push
mov
pushf
inc
lea
pusha
pusha
lea
call
js
push
pusha
adc
pushl
call
lea
jb
pushf
mov
movl
push
jmp
mov
lea
ja
push
jmp
shrd
xor
mov
mov
clc
call
add
cmc
mov
call
push
enter
dec
adc
stc
cmp
pushl
jmp
aam
mov
xor
ss
popa
scas
xor
cmp
outsb
roll
mov
jo
fnstcw
sarb
insb
and
and
nop
js
out
mov
inc
cmpsb
cmp
xor
clc
inc
xchg
xor
push
jl
xor
lahf
push
lea
lods
sub
jmp
xchg
xor
inc
mov
fdivr
cmp
cs
scas
lea
mov
and
test
loope
and
std
popf
push
push
mov
fcomi
loop
push
inc
push
xchg
je
insb
sbb
lcall
xor
cs
popa
mov
pop
mov
add
dec
add
cmp
cmp
sarl
dec
push
jmp
fcomps
jp
add
and
xchg
xchg
push
mov
cmpsb
in
daa
clc
cmc
add
pushf
test
or
jmp
and
lods
mov
ss
inc
sub
cwtl
inc
mov
mov
mov
jns
fsubr
sbb
cmp
mov
hlt
add
sub
movsl
xor
pop
mov
push
xchg
jg
dec
jle
testl
push
ss
scas
scas
sbb
mov
outsb
out
sub
int3
out
out
pop
mov
rcr
inc
and
dec
jnp
jns
jno
add
add
add
addb
add
and
sbb
add
add
mov
cmpsl
adc
add
mov
add
in
adc
add
add
jmp
jmp
pushf
cmc
jmp
sti
push
pop
push
pushf
fsubl
and
scas
shrl
shlb
or
cmp
push
insb
mov
aaa
arpl
daa
inc
mov
xchg
inc
pop
pop
rorl
dec
enter
bound
jb
push
mov
cmp
pushf
pop
in
mov
std
sub
outsb
or
ret
mov
sbb
fsubrs
imul
lahf
fldl
rol
js
enter
mov
roll
inc
rolb
dec
and
adc
in
rorl
insl
icebp
inc
lea
cmp
leave
mov
lea
jne
mov
push
bt
mov
cmc
call
lea
je
test
add
pushf
cmp
jmp
movw
pushf
shr
jmp
in
jno
pushf
faddl
divb
mov
pop
scas
pop
data16
pop
sbb
imul
lret
sti
fstpl
cmp
jmp
cmp
adc
xchg
fs
cltd
jbe
ret
xchg
fs
ss
fcmovu
mov
aas
jbe
xor
jmp
movb
mov
push
push
pushl
ret
pusha
lea
jae
cmc
jmp
cmp
push
pushf
fsubrl
push
movsb
sub
lock
add
add
mov
add
int
xchg
xorb
cwtl
lods
fadds
pop
xor
test
xor
imul
std
cmp
stos
sbb
repnz
lock
push
stos
inc
dec
ds
sub
jl
pop
popf
mov
sbb
shll
add
dec
jns
jmp
ja
xor
das
mov
dec
ficoms
fisttps
test
stc
pushf
or
movb
jmp
rcll
lea
fsubrl
push
dec
cmpsb
sbb
pop
mov
lds
or
pushf
iret
sub
push
and
icebp
popa
or
jno
daa
shll
idivl
popf
adc
fidivl
dec
jbe
adc
jl
xor
hlt
les
mov
pop
sub
ret
cwtl
and
das
iret
xor
sti
popf
cmp
sub
and
mov
or
in
push
dec
mov
por
or
lcall
stc
dec
mov
test
jns
pop
les
sbb
jnp
pop
xchg
push
dec
jmp
push
xchg
mov
dec
cmp
pusha
shl
pushf
push
jmp
mov
sar
sub
add
bsf
rcl
mov
pusha
stc
stc
pusha
sub
pushf
cmp
pushl
popl
call
mov
fcoml
jle
es
fidivrl
out
xor
pop
push
sub
arpl
sbb
adc
jp
jne
and
mov
rcrb
cld
jp
xchg
mov
xorb
cwtl
test
loopne
lods
push
inc
sahf
enter
cltd
xchg
scas
dec
aas
adc
cltd
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
cmp
mov
lea
ja
add
stc
ror
or
sub
sub
neg
sar
cmp
add
bswap
mov
push
mov
test
pushf
test
repnz
call
bswap
mov
movsbw
movl
push
pushf
lea
pushf
lea
ja
pushf
push
movl
push
pusha
pushl
popl
pushf
pushl
push
movb
pushl
ret
cmpsl
out
push
pushf
fsub
outsl
xchg
aas
xchg
jbe
mov
lods
mov
adc
sub
inc
sbb
inc
push
rcrl
lock
inc
insb
rcrb
nop
jbe
jg
inc
cmp
imul
mov
mov
mov
mov
lret
sbb
or
das
push
ljmp
xor
incb
adc
aaa
xchg
mov
sbb
mov
mov
push
testl
in
inc
jb
mov
dec
es
or
fistps
das
mov
shlb
dec
pushf
inc
jb
rcr
ss
fcompl
fistps
insb
add
adc
fdivrl
inc
push
mov
jb
neg
jbe
repnz
mov
ds
jnp
stos
ljmp
lds
lahf
cmpsl
aam
and
or
out
mov
xor
xor
aaa
cli
shlb
popf
lds
cs
pushf
dec
pop
mov
xor
sbbl
fmul
mov
ja
imul
jle
hlt
aad
adc
inc
ret
jmp
inc
jns
outsb
mov
ja
mov
movzwl
movzbw
movsbw
adc
mov
pusha
jmp
push
lea
bswap
mov
mov
mov
mov
call
lea
ja
pusha
sub
bts
and
bswap
sub
add
setl
ror
pushf
rcl
mov
cmp
sub
push
mov
stc
pusha
repnz
movw
pushl
lea
jne
pushf
mov
bswap
pop
movb
movsbw
push
movzbw
lea
jmp
test
xchg
dec
pushf
les
push
pop
mov
enter
mov
aas
fadds
aaa
xchg
and
inc
xchg
cmp
in
lock
pop
outsl
in
mov
sub
or
es
jl
ds
dec
add
sbb
xor
push
mov
movsb
xorb
add
push
add
mov
cmp
not
test
pushf
bt
cmc
sub
call
jmp
add
dec
gs
popa
addr16
outsl
js
add
jmp
add
cmp
mov
data16
adc
cmp
mov
adc
xchg
lcall
lock
bound
aas
flds
scas
jno
push
lea
mov
add
mov
adc
das
push
pop
aas
aas
pop
xchg
stos
outsl
aam
cmp
gs
adc
cmp
add
jae
or
jb
popf
call
jmp
bt
cmp
pushl
lea
jb
pushf
jmp
movsb
aam
dec
pushf
fsubr
sub
in
leave
sub
jmp
xor
jg
sbb
and
mov
xchg
mov
stos
jno
mov
out
mov
stos
aad
mov
cmp
inc
scas
jge
dec
aas
rdtsc
cmp
lea
movsbl
not
bswap
pop
mov
movzbw
pop
push
mov
mov
mov
pushl
pushf
pushl
ret
jmp
jmp
jmp
jmp
add
lahf
adc
and
lods
testl
loope
fldenv
ds
cli
mov
push
mov
jl
lret
add
pop
lods
and
mov
xor
shlb
xor
cmp
es
lret
sbb
jo
mov
jnp
mov
stos
inc
xlat
das
scas
sbb
jle
jno
daa
add
icebp
fs
adc
dec
daa
pop
and
pop
stos
jmp
es
dec
mov
ds
push
pop
mov
or
pop
lods
pop
int3
popf
ja
pop
xchg
aam
xor
dec
ljmp
out
xchg
push
xlat
roll
inc
inc
pop
int3
jl
in
out
jle
xor
jno
mov
jp
push
xor
sub
xlat
test
cmpsb
inc
loope
xlat
mov
or
std
push
sbb
stos
jns
mov
int
cmpsl
popf
or
cli
push
ret
sbb
sbb
sahf
mov
push
inc
mov
jne
inc
sbb
pushf
movl
mov
lea
jmp
push
push
mov
dec
pushf
cmc
cmc
bt
cmp
movw
lea
cwtl
movsbw
lahf
mov
call
mov
fmull
in
add
xorb
mov
sub
pop
int
jo
popa
jne
int
leave
xor
mov
outsb
cmpsb
cmc
lret
stc
inc
loop
adc
sub
push
sti
adc
aad
mov
inc
leave
mov
addr16
daa
jns
lds
dec
xchg
mov
ret
mov
js
mov
pushf
push
pushf
lea
jmp
call
filds
test
imul
sbb
imul
aaa
data16
rol
add
dec
mov
dec
dec
xchg
out
push
and
cwtl
xor
rclb
dec
fcoms
gs
jbe
or
cmp
cmp
aam
sbb
jnp
pop
push
lea
push
add
add
push
ljmp
jecxz
and
popf
stos
sub
dec
xor
jge
mov
out
movsb
fadds
pushf
not
test
rcr
mov
adc
rol
xor
push
inc
stc
test
bsr
push
and
test
btr
push
sub
sub
btc
push
xchg
dec
setbe
mov
bt
test
rcr
cmp
mov
bts
mov
clc
cmp
bt
or
jmp
pushf
call
jmp
loope
movsb
dec
pushf
fcoml
ja
add
jg
and
push
call
mov
ss
pop
mov
insl
jno
inc
inc
push
push
je
inc
pushf
in
jne
or
add
test
adc
push
sub
sbb
mov
jo
sbb
addr16
push
mov
je
jne
mov
gs
out
lds
add
andl
insb
inc
call
mov
movsb
pop
jo
or
fsubrs
int3
popf
pusha
mov
movl
pusha
movl
mov
movb
lea
jmp
xchg
mov
stos
cmp
inc
repz
xchg
and
sahf
jns
xor
mov
xchg
jecxz
xlat
daa
arpl
imul
iret
cmpsl
or
pop
lods
loop
dec
leave
nop
popf
fnsave
test
int
inc
mov
mov
aad
mov
dec
jg
bt
rol
stc
sub
stc
stc
rol
stc
mov
jmp
lea
ja
call
mov
cmp
bt
pushl
jmp
jne
test
pushf
fcoml
dec
xlat
dec
push
fistl
lret
mov
jecxz
jg
xor
inc
pusha
xchg
outsl
and
jge
pop
xchg
adc
mov
jo
mov
mov
adc
frstor
bound
cld
mov
pop
mov
xchg
imulb
lcall
bound
insb
sbb
aam
aas
mov
insl
push
inc
stos
push
mov
xchg
sub
pop
ret
sub
xlat
xchg
jmp
dec
in
adc
inc
pop
or
ficoms
xchg
jle
outsl
shll
dec
lcall
movb
add
cmp
test
movb
movw
movb
jmp
pusha
lea
call
call
pop
mov
inc
pushf
fsubl
frstor
and
xchg
push
int3
lcall
aas
mov
pop
lods
xor
pop
int3
dec
js
addl
jo
arpl
jnp
cltd
xlat
jmp
aaa
fnsave
popa
in
adcl
jle
jmp
mov
push
lea
jmp
lea
call
pushf
movb
lea
jmp
fnsave
inc
pushf
fsubl
pop
mov
push
lcall
cmp
or
les
mov
pop
daa
pop
cmp
lcall
js
ret
shll
jo
mov
daa
mov
xlat
cmp
cmp
pop
test
jg
aas
movsb
xor
sahf
mov
lea
jne
jmp
cmp
pushf
push
or
pushf
pushf
call
movb
call
inc
rcr
inc
pushf
fsub
or
sub
jb
pop
pop
cmc
test
add
es
adc
mov
mov
jb
out
pop
xchg
lock
push
lcall
lahf
fidivl
rcr
mov
jge
adc
xchg
loope
lds
sub
add
cmp
lret
xchg
fidivrl
jge
cmp
lods
xchg
adc
pushf
addb
pop
arpl
xchg
mov
lcall
das
aad
inc
mov
test
sbb
dec
or
or
faddl
xchg
divl
xchg
filds
sti
jae
mov
loope
cmp
jno
clc
pusha
adc
inc
aam
pop
scas
andb
ret
jmp
or
mov
jo
aad
lahf
lret
jp
fmull
and
test
stos
jne
test
ja
jg
cmc
into
sub
dec
cwtl
stos
adc
outsb
xor
faddl
andl
mov
lldt
int
pop
loopne
pop
inc
push
cmc
iret
mov
arpl
mov
and
fwait
stos
shl
pushf
pop
cmc
hlt
loop
mov
sti
insl
adc
out
xchg
ss
jg
push
mul
push
inc
adc
adc
xlat
push
cmc
std
int3
lcall
and
add
dec
xchg
lock
stc
insl
jmp
pop
cltd
cwtl
push
mov
push
jo
popf
xchg
xchg
mov
mov
ja
jae
stc
mov
xchg
std
mov
pushf
scas
dec
bound
out
hlt
ds
hlt
sub
xor
add
fsubl
push
xchg
lock
std
jecxz
in
pop
incl
pop
and
fs
cli
inc
data16
xchg
sti
ljmp
push
adc
xlat
adc
dec
std
cltd
insb
dec
imul
xchg
ret
lea
out
mulb
dec
inc
push
dec
ss
inc
sbb
add
jg
mov
repz
fs
sarl
es
jns
mov
push
sti
sub
test
dec
das
sbb
iret
mov
xor
pop
lret
fs
fsts
fsubr
scas
cli
jmp
inc
and
jge
fistpl
stc
jmp
in
pusha
pushl
jmp
call
lea
pusha
pushf
movl
jmp
out
lret
movsb
in
out
outsb
mov
insl
je
dec
lret
sub
ja
out
xchg
call
cmp
mov
lret
mov
popf
loop
cmp
cmpsl
scas
in
cmc
daa
int3
xor
inc
mov
mov
and
xchg
mov
mov
cmp
jne
scas
sbb
mov
inc
sub
jle
ss
into
lcall
clc
inc
sub
mov
addb
cmpsb
cmpsb
int3
xor
ret
xchg
bound
mov
jnp
jae
ret
loop
daa
cmpsl
pusha
mov
cmp
enter
push
call
lcall
fadd
call
out
into
adc
les
inc
stos
xor
arpl
je
ss
data16
inc
jl
into
push
imul
cmp
repz
js
lret
subb
mov
add
outsb
out
xchg
das
addl
pop
push
jb
inc
cmpsb
sbb
mov
dec
push
jge
mov
insl
cwtl
mov
mov
lea
mov
rolb
add
jp
mov
mov
jp
jno
test
mov
test
jae
xchg
mov
out
insb
mov
clc
cmc
movsl
clc
cmpsb
cmpsb
sub
movsb
scas
int3
and
jo
outsb
xchg
push
mov
loopne
popa
adc
xchg
decl
jp
je
scas
lret
lods
pop
aaa
sbb
jnp
mov
mov
gs
pop
xor
aad
sbb
mov
out
adc
into
popa
stos
xor
inc
int3
cli
pop
and
ss
je
cmpsl
mov
js
sti
mov
xchg
fimull
shr
cmpsl
mov
lcall
dec
and
sub
fisubl
xchg
lcall
or
jge
ficoms
mov
mov
sahf
in
and
movsl
mov
pop
jns
mov
pop
cmp
push
loopne
push
push
outsl
imul
mov
shl
mov
xchg
cmpsb
sbb
imul
movsl
sbb
mov
pop
xor
lds
jns
mov
in
xlat
inc
out
mov
mov
cmpsb
leave
sub
and
ficomps
test
sub
adc
inc
mov
mov
into
stos
into
int
mov
movsl
sbb
mov
jg
cmp
scas
push
xchg
cmp
xor
fsubrs
dec
loopne
sub
xor
into
ret
cmc
mov
mov
test
rol
ficoms
add
ret
jg
jo
or
ret
scas
jmp
push
outsl
cmpsb
jnp,pt
mov
rclb
add
popa
inc
cmp
cmpb
jne
scas
loopne
fsubrp
xor
add
cmpb
mov
xchg
jp
adc
ds
mov
add
jg
lret
loop
push
xor
jbe
sahf
fadd
imulb
int
aam
mov
ja
inc
add
add
in
lcall
rcrb
and
mov
lahf
xchg
test
into
adc
fwait
loopne
pop
mov
lock
inc
mov
add
repz
cmp
ds
xchg
std
jle
mov
loopne
out
inc
jle
shl
inc
mov
cmp
mov
mov
pop
mov
jae
fmulp
pusha
xor
pop
mov
fidivl
loop
inc
cmp
mov
mov
dec
push
leave
mov
cs
fnstsw
lock
lahf
mov
rcrb
xor
xor
mov
push
and
mov
clc
cs
shl
dec
cs
push
add
sbb
jg
out
jg
fiadds
cmp
cmp
test
gs
mov
gs
push
enter
out
aas
sub
mov
outsb
out
pushl
loopne
mov
outsl
mov
push
nop
add
push
out
std
pop
and
rcr
jp
out
add
sahf
xor
jle
add
in
fst
mov
or
xchg
dec
xchg
popa
std
in
sbb
loopne
repnz
and
inc
add
rclb
cmp
dec
push
cmpsb
mov
xor
mov
inc
test
loopne
xorl
mov
scas
popa
scas
add
cmpsb
or
mov
xor
add
outsb
xchg
iret
in
loopne
test
loopne
sbb
xchg
in
push
fadd
popl
testb
divb
in
xchg
xor
out
push
add
pop
mov
ret
mov
sub
scas
roll
inc
inc
push
faddl
jle
jbe
outsl
outsl
xor
push
cmpl
xchg
iret
mov
cmp
inc
push
decb
scas
sbbb
xchg
xchg
jecxz
push
incb
gs
jg
xor
aad
cmc
mov
loopne
pop
mov
inc
out
scas
adc
in
ret
and
push
push
xor
fstpt
add
cmp
dec
inc
cmp
cmp
das
mov
ficomps
dec
enter
ds
add
mov
xchg
mov
aaa
jo
sarb
lock
xchg
mov
sbb
popf
popa
sbb
mov
push
pop
data16
cmc
les
testb
sbb
rol
mov
cmp
and
cltd
int
popl
jg
in
mov
jo
outsl
ljmp
and
mov
mov
push
xor
push
pop
gs
mov
test
inc
mov
in
xor
jge
sbb
ror
fstpl
into
jg
lret
mov
add
inc
out
adc
ret
push
add
sub
pusha
adc
jg
xor
lahf
adc
and
lock
hlt
ret
dec
ffree
jne
lock
xor
in
lds
cli
ljmp
cmc
jno
xchg
mov
out
push
dec
xor
xchg
scas
in
or
mov
cmpsb
and
in
mov
add
aam
lahf
test
cmp
lds
mov
or
ds
jle
jo
mov
pop
imul
jecxz
add
into
push
add
ss
jge
into
pusha
popf
into
cmp
inc
push
mov
mov
push
dec
mov
ret
ja
jbe
ret
scas
inc
mov
xchg
adc
data16
xor
xor
cmp
loopne
push
fnstsw
mov
sarb
orl
leave
add
dec
loopne
xor
pop
dec
cmpsb
leave
cmp
loopne
push
mov
jg
mov
int
scas
add
mov
push
cmp
mov
add
cmp
xor
out
cmp
add
sub
xchg
aaa
mov
jg
dec
rcl
call
add
out
ljmp
mov
push
cmp
pop
push
jns
mov
or
mov
pop
jle
jg
ss
dec
iret
shrb
mov
push
rol
out
dec
rclb
and
mov
dec
mov
ljmp
cmpsl
push
cs
jecxz
xchg
adc
movsl
jle
outsb
xor
cs
sub
loop
sbb
movsb
shrl
mov
test
fmul
mov
pop
stos
test
pop
add
inc
int
jb,pn
lea
adc
shl
or
jge
mov
es
clc
rclb
inc
outsl
mov
mov
cltd
in
jae
jo
repz
stc
cs
lahf
int3
mov
jge
push
mov
iret
push
cmp
add
jl
shlb
ja
mov
jb
xor
sbb
ss
sahf
sarb
icebp
ljmp
cmp
inc
pop
sub
mov
out
loopne
pop
pop
outsb
mov
inc
fidivrs
push
jmp
mov
mov
mov
loop
inc
cli
sbb
int
pop
xchg
gs
fs
mov
aad
and
inc
and
ss
and
in
sub
sahf
jb
testb
lods
mov
lea
into
sub
in
outsl
mov
mov
add
int
insb
pop
mov
dec
mov
adc
mov
data16
ja
shl
in
push
mov
jp
add
ds
aam
add
sarl
scas
bound
push
rcll
jp,pt
sub
jg
sbb
fidivs
loope
fiadds
sub
xor
or
pop
rorb
out
int
adc
inc
and
mov
data16
dec
call
pop
jno
push
xchg
repz
loopne
or
sahf
js
jno
js,pn
push
mov
and
xor
xorl
push
or
jg
pop
lds
das
cmpsb
pop
jl
loop
scas
decb
push
into
or
in
cmp
mov
ffree
not
aaa
popf
data16
cmp
xchg
dec
dec
xor
sbb
sbb
sbb
insl
push
fdivr
pop
mov
pop
ficomps
push
outsl
mov
bnd
push
mov
xchg
je
xorb
mov
pop
sbb
mov
xlat
and
and
iret
xchg
cs
in
push
int
sahf
cmc
in
push
sbb
push
out
add
imul
push
ss
clc
ficomps
cmpsb
mov
push
sub
int
aas
lahf
outsl
jo
lods
push
pop
mov
nop
mov
aaa
shrb
mov
or
ss
mov
pop
loopne
dec
xchg
push
out
es
test
mov
pop
mov
add
cmp
out
sbb
mov
inc
add
dec
and
or
add
mov
faddp
sahf
pop
iret
pusha
fistpll
cmp
call
into
fimuls
mov
cmp
into
pusha
push
cmp
inc
pusha
imul
xor
sbb
dec
jp
repnz
cld
mov
dec
rcl
mov
sub
cld
fimuls
inc
lahf
into
jle
and
jg
outsl
add
cs
jbe
or
into
lock
inc
mov
xor
leave
push
cmp
clc
cmpsb
in
out
dec
push
mov
xor
into
insb
outsl
cmp
cli
xor
dec
mov
adc
cmp
outsb
lock
scas
push
lock
dec
mov
jbe
call
lds
jl
xor
pop
inc
out
in
jg
add
or
cmc
not
inc
lahf
es
outsl
mov
cmpsb
inc
ss
jno
aas
in
in
std
sub
lret
dec
lahf
popl
sbb
js
loopne
dec
inc
push
loopne
mov
and
scas
add
lds
xorl
add
jmp
out
push
js
nop
and
pop
push
jl
aad
nop
adc
cmc
cmpsb
lock
mov
testb
mov
mov
fbld
int3
and
lock
push
mov
cmp
ds
mov
mov
mov
lahf
inc
int
cmpsb
bound
lods
rcrl
xchg
es
movsw
aaa
mov
mov
add
movsb
out
sbb
out
out
mov
and
cmp
and
mov
fldz
inc
adc
xchg
mov
xchg
mov
lds
mov
lret
das
mov
adc
pop
mov
pop
sub
movb
adcl
mov
outsl
loop
outsb
cmp
or
iret
stos
sbb
push
mov
pop
std
mov
mov
mov
mov
idiv
mov
out
mov
out
loopne
shrb
push
adc
int
loopne
xor
scas
fs
push
pop
shl
scas
test
add
cmc
xchg
mov
out
jp
loopne
and
rol
xchg
cmp
sarb
jle
rorl
and
pushf
ja
inc
mov
jb
mov
rol
adc
cmc
mov
sarb
push
mov
mov
out
loopne
rorb
sahf
in
cmp
fimuls
jo
stc
cmpsb
clc
repnz
into
fchs
jo
push
mov
loop
cmp
in
mov
or
sub
jb
fucomp
gs
dec
and
outsl
bound
mov
jbe
add
data16
dec
dec
outsl
push
inc
jnp
fildll
adc
outsl
jae
fmulp
add
inc
scas
add
pusha
into
jae
xor
mov
ss
push
scas
xchg
and
xor
push
popa
testb
ja
add
ss
add
mov
push
jo
mov
jbe
and
xchg
push
fildl
cld
mov
fildl
cmpsb
mov
ja
lahf
icebp
roll
inc
ds
loopne
cmpsl
insl
test
divl
mov
adc
and
sti
inc
inc
stc
push
mov
xchg
cmpsl
jmp
xor
push
out
lret
push
sti
add
mov
mov
fimuls
pop
sbb
add
dec
or
aaa
loop
cmc
enter
mov
into
clc
push
inc
ds
inc
in
js
push
cwtl
jge
les
pop
scas
mov
adc
add
mov
std
push
adc
inc
cmpsb
mov
and
repz
ret
das
sub
mov
scas
es
rcrl
lcall
adc
push
inc
test
fdivs
cmpsb
stos
add
and
popa
loopne
ret
cmpsb
jns
out
test
mov
and
jmp
cmpsb
movsb
push
lds
xchg
flds
scas
dec
inc
movsl
cmpsl
dec
stos
sub
imul
ffree
insb
pop
roll
mov
mov
shrl
add
loopne
and
mov
les
cmp
movsl
inc
clc
add
mov
loop
lds
out
mov
inc
test
jno
mov
or
mov
popf
incb
or
mov
out
fists
push
dec
mov
call
jbe
xor
stos
mov
add
aam
pusha
mov
mov
out
lret
dec
fwait
into
std
mov
cmc
mov
enter
dec
movl
add
dec
insb
dec
xchg
ss
push
out
cmp
out
mov
into
in
cmp
dec
cmp
ss
in
loope
in
pop
pop
adc
inc
jp
pop
out
mov
sbb
push
imul
out
inc
pop
shlb
push
xchg
dec
push
ja,pt
push
xlat
call
fstl
mov
adc
out
lret
rcr
dec
stos
cmp
sahf
mov
std
es
dec
inc
xor
loopne
scas
and
sbb
jo
std
dec
sub
lock
pop
sbb
lds
in
add
fbstp
mov
add
outsb
dec
iret
outsl
loop
scas
ds
cltd
mov
fists
add
fwait
jno
rolb
cmpsb
inc
ss
add
outsl
iret
loop
add
xchg
outsb
lds
loopne
xchg
aad
xor
imul
in
data16
adc
loop
outsl
imul
sarb
xchg
fdiv
ret
cmp
clc
cmpsb
pop
cmpsb
scas
mov
mov
scas
cmp
daa
mov
mov
inc
push
stos
aad
ss
or
xchg
lock
loop
add
hlt
js
pop
xchg
data16
dec
rclb
push
es
dec
pusha
push
subb
das
and
cld
shlb
iret
enter
mov
and
popa
fst
push
dec
into
jo
int3
sub
into
cmp
push
into
cmp
inc
mov
push
pop
out
dec
add
fsubs
out
lds
xabort
pushl
xchg
push
sbb
into
xchg
or
xchg
int
push
xchg
sub
adc
lret
out
into
cmpsb
inc
fcmove
jle
addl
mov
into
cld
mov
mov
fidivs
loopne
jp
outsb
push
aam
dec
repz
std
mov
mov
nop
adc
and
cs
lcall
cld
lds
cmp
gs
add
pop
push
push
cld
dec
mov
fisubrs
nop
jg
decb
loop
sub
push
inc
and
dec
fs
cmpsl
cmp
lcall
loopne
test
jnp
sahf
pop
out
xchg
mov
lods
lock
mov
lcall
dec
push
out
subb
fimuls
jle
scas
int
xor
ss
adc
lahf
out
dec
adc
aad
fiadds
rclb
mov
cmp
outsb
clc
pop
push
push
jbe
xor
vpsrlw
pop
or
adc
inc
adc
fbld
lahf
and
loopne
adc
ss
and
outsl
rcl
pop
jle
loopne
dec
out
push
rorb
sub
rorb
adc
dec
ror
adc
xchg
adc
or
sahf
aaa
inc
ja
fs
outsb
dec
adc
addl
jp
gs
in
mov
push
in
push
xchg
cs
dec
jbe
dec
subb
mov
mov
cmp
mul
mov
ljmp
cs
inc
dec
shrl
pusha
adc
jae
cmp
lds
dec
jae
push
xchg
xchg
ljmp
cli
xor
inc
dec
into
in
lods
jg
pop
into
cmp
daa
mov
push
rorl
cmpsb
lcall
ds
es
fildl
cmpsl
in
jge
dec
fistpl
fs
rclb
fcmovnbe
dec
stc
sbb
mov
mov
out
in
clc
ja
jbe
ficoms
mov
fnsave
adc
scas
jp
ja
or
push
inc
dec
jbe
or
in
cs
fs
push
push
xchg
push
stos
dec
mov
xchg
loopne
jecxz
data16
inc
jl
dec
add
dec
mov
std
stos
fldl
push
in
popa
lds
mov
lock
and
in
add
movl
jg
addl
std
jo
pop
iret
sbb
dec
in
dec
iret
adc
mov
stos
mov
clc
dec
in
dec
pop
cmp
inc
mov
pop
mov
into
push
cmp
test
sbb
push
lods
es
es
push
es
outsb
es
lahf
and
xchg
sti
ret
pop
pop
lods
std
scas
dec
aad
add
out
jp
dec
inc
int3
mov
mov
es
gs
xchg
addb
ficoms
mov
cmp
xchg
xor
outsl
push
mov
inc
mov
xor
adc
fidivrl
sbb
fmulp
add
repz
push
xchg
out
add
inc
inc
outsb
push
out
rcll
into
ja
add
adc
leave
into
mov
lods
mov
out
out
adc
xor
iret
and
mov
ror
outsb
addl
or
nop
test
inc
cmp
mov
into
xchg
xor
fbstp
dec
scas
add
and
outsl
rclb
dec
push
push
outsl
sbb
scas
sub
gs
xor
sbb
mulb
push
scas
gs
mov
inc
addb
out
push
dec
ja
std
adc
fneni(8087
movsb
ficoms
jno
adc
and
push
test
inc
and
and
mov
xchg
adc
shr
or
push
dec
decl
xor
xor
add
jbe
iret
cmpsb
loop
aad
adc
cmpb
insl
and
adc
xor
xchg
cmp
mov
cs
loopne
rcrb
gs
scas
ss
in
add
ds
xchg
add
xchg
mov
add
ds
jbe
xchg
loop
aad
std
filds
outsl
iret
loop
add
lea
push
stos
iret
inc
in
and
outsb
loopne
add
xchg
ds
sbb
fistpll
lahf
adc
aad
mov
not
icebp
dec
pop
xor
push
mov
clc
incb
andb
push
in
mov
add
shrb
cmc
loop
xor
add
fdivrp
iret
push
loop
incb
into
loopne
inc
addr16
fidivrl
int
aad
mov
cmp
fsubr
ss
mov
imul
sub
mov
push
mov
add
pop
mov
xchg
xchg
mov
and
jp
out
cwtl
in
nop
sbb
shl
ret
push
jo
aad
and
sub
xchg
or
es
scas
jp
mov
out
pop
pop
lods
mov
push
mov
js
push
dec
adcl
jg
pop
and
out
add
out
add
out
add
add
mov
xchg
sub
xchg
inc
outsl
and
adc
push
cmc
call
and
push
push
inc
sbb
inc
xor
inc
jo
aad
xor
lret
call
into
push
dec
lret
arpl
into
pop
xlat
cmp
sub
int3
push
adc
mov
xor
xchg
mov
push
inc
lret
inc
pop
xchg
inc
xchg
inc
sub
out
scas
jg
jle
inc
mov
add
mov
outsl
push
mov
repz
sbbb
mov
dec
dec
jmp
jnp
in
ja
clc
lock
jle
fs
mov
stos
push
lds
dec
out
mov
ret
into
dec
xchg
dec
jg
xchg
sub
movsl
adc
out
fstl
into
jle
cmp
jns
out
and
mov
push
xor
push
add
mov
loopne
in
aas
sarb
rcl
rcrb
jnp
mov
orl
mov
pop
mov
jnp
add
cmpl
arpl
testb
cld
in
pop
mov
cmp
outsb
jge
pop
fld
add
mov
cmp
aaa
ds
cld
scas
add
mov
dec
lret
mov
frstor
inc
xor
mov
into
arpl
jle
adc
gs
cmp
or
outsb
jbe
adc
mov
loopne
fidivs
lock
aas
fdiv
idiv
push
mov
sub
mov
ss
pop
into
cmpsb
add
cmp
andb
xchg
aad
fnsave
testb
sahf
add
inc
int3
inc
pop
jg
mov
lahf
sbb
out
in
data16
mov
ss
jge
jle
fnsave
jle
xor
cmp
mul
data16
je
outsb
idivl
and
loop
jg
sar
mov
push
sub
data16
inc
mov
jle
sbb
rcll
fcmovnbe
ss
loope
aad
ss
push
sbb
dec
push
icebp
bound
xchg
jle
cs
cmp
xchg
insb
out
loope
pop
aad
mov
inc
lahf
inc
pop
pop
jle
ds
xchg
push
pop
ss
jg
pop
scas
outsb
fisttpll
dec
inc
popf
dec
int
idivb
mov
rcr
iret
adc
sub
fs
lods
int3
inc
add
sbb
pop
in
and
xchg
and
outsb
pop
dec
sahf
data16
push
jno
push
fnsave
jbe
push
mov
arpl
xorl
out
adc
gs
std
or
mov
dec
cmp
or
je
sbb
into
jl
push
push
fidivs
loop
arpl
fstps
ficomps
outsb
fiadds
inc
shll
negb
push
icebp
outsb
sbb
inc
mov
rcr
int
rcl
adc
lret
into
mov
inc
pop
aaa
std
jle
sbb
sti
push
addr16
fisttps
movsl
mov
popaw
sbb
fs
out
sbb
dec
add
stc
scas
loopne
scas
fcmovnbe
sbb
lock
jp
jp
mov
dec
inc
mov
out
loopne
shlb
iret
pop
loop
decb
add
in
in
mov
xor
sbb
mov
cmpsb
dec
test
xchg
adc
out
rclb
lock
xor
mov
gs
cs
xor
add
or
cmpsb
int
cs
add
lock
mov
mov
inc
jl
rorb
push
pop
xchg
sbbb
add
jo
shrb
rcrb
shrb
cmc
in
xor
adc
lock
aad
sar
and
dec
add
and
ss
mov
ret
fidivrl
add
out
push
lock
and
push
decb
add
ds
xchg
add
mov
fbstp
add
xchg
outsl
ss
mov
iret
push
loop
incb
mov
xchg
add
ds
iret
push
loop
add
mov
ss
cmpsb
ds
iret
sub
ds
push
add
jbe
iret
fucom
in
sub
mov
add
ds
jbe
sahf
loop
decb
dec
divb
jle
rcrb
out
ds
es
pop
loop
decb
add
ds
push
sbbb
data16
fsubp
iret
push
loop
outsb
ss
scas
add
sub
ss
mov
shl
add
ds
iret
gs
cmpsb
ss
add
fdivrl
add
ds
ds
inc
loop
sahf
ss
fldl
in
or
data16
lahf
je
jle
shl
ss
fists
add
push
jle
xchg
loop
fnsave
in
or
ja
scas
loopne
enter
xor
faddp
sbb
rcl
push
dec
add
pop
es
cmp
out
nop
movsb
es
xor
roll
into
adc
clc
push
jle
adc
push
cmp
adc
in
mov
aad
movsb
add
enter
push
or
push
insl
mov
jbe
into
sbbl
inc
push
out
add
xchg
or
mulb
into
ja
add
mov
xlat
xchg
leave
into
sarl
into
testb
inc
movsb
fiaddl
mov
pop
faddl
testb
cmpsb
xchg
adc
out
pop
push
sbb
cmc
into
cwtl
fmuls
arpl
xchg
xchg
popa
pop
cmpsb
cmp
scas
cmp
je
cmpsb
push
pop
mov
adc
xchg
in
mov
pop
jns
mov
ja
dec
dec
inc
fwait
dec
jge
cmp
dec
dec
negb
sub
fidivl
and
or
adc
movsb
xor
xor
push
sbb
jmp
outsl
lahf
inc
sub
jmp
mov
push
jg
sbb
int
cmp
jne
jns
sahf
gs
mov
mov
fnstcw
ret
mov
mov
mov
xchg
mov
inc
lds
scas
in
xchg
ja
gs
lds
push
out
mov
fildll
mul
cs
jg
mov
in
xchg
out
not
int3
add
fucom
inc
testb
ret
mov
sub
idivb
mov
push
fisttps
mov
mov
int
xchg
mov
out
cs
negb
dec
cmpsb
ror
pop
add
fistpll
outsb
leave
inc
ss
clc
rorb
inc
outsb
mov
in
cld
xor
dec
test
and
cmp
popa
sbb
push
or
add
lds
xchg
inc
xchg
mov
mov
and
out
aad
and
and
push
jle
mov
pop
out
pminsw
fcompl
push
repz
and
out
nop
stos
sbb
or
adc
pop
aad
mov
js
push
sarb
push
fiadds
push
push
aam
js
addb
fiaddl
ret
cmp
xlat
aad
aam
out
jo
jle
push
fisubs
daa
iret
loopne
je
xlat
scas
lds
clc
dec
jo
xor
aas
loopne
mov
and
xchg
pop
push
shl
cmc
setg
in
loopne
out
jle
inc
push
xchg
and
int
pop
sub
xchg
adc
out
jp
loopne
sarb
sbb
orb
in
and
outsl
shlb
lahf
outsb
fadds
into
ds
dec
push
loopne
jae
dec
pop
pop
fs
aad
cs
out
fstpt
and
fadds
lds
loopne
mov
inc
xchg
or
andb
dec
fsubs
in
mov
js
enter
out
loopne
shrb
dec
aaa
cmc
jno
in
and
adc
add
in
sub
jno
divl
jnp
subb
pop
mov
iret
js
xor
incl
cmp
clc
xor
sahf
jnp
dec
or
fidivs
out
and
xchg
xor
or
mov
jnp
pop
or
imul
mov
ror
or
jg
dec
push
and
jle
ror
cmp
push
or
es
fists
adcb
popa
daa
and
mov
mov
outsb
dec
lock
shl
xor
imul
dec
cmp
xor
cmp
add
test
mov
mov
jmp
cmc
push
in
sub
mov
pop
ss
cmpsb
ds
cmp
jg
mov
xchg
dec
divb
shll
cmp
ja
insb
in
loopne
outsb
jge
and
dec
shrb
mov
mov
mov
lret
add
sub
arpl
jl
sbb
push
add
mov
imul
pop
ss
fildll
iret
dec
push
sahf
pop
push
lcall
aam
xchg
ds
int3
inc
xchg
ljmp
jp,pt
cmpsb
minps
test
pop
fldcw
adcl
ficomps
cmp
cmp
mov
xorl
cmp
cmp
pop
cmp
cmp
aad
das
clc
mov
xchg
addl
cmp
bound
fidivrs
int
rclb
idiv
and
loopne
xor
and
dec
rolb
lret
sarl
mov
xor
sbb
jle
scas
add
jb
inc
dec
loope
dec
ljmp
aam
xchg
cmpsl
jb
ds
aam
cmp
mov
int3
xor
fidivl
mov
add
cmpsl
aam
adc
mov
xor
jno
jp
arpl
rcr
pop
push
sbb
add
lods
mov
into
cmp
loope
mov
das
aas
ljmp
mov
mov
add
lock
shl
loop
incb
ss
fcomip
add
and
mov
loopne,pt
iret
in
mov
xor
and
sbb
and
enter
hlt
or
adc
cmp
jp
mov
inc
out
clc
and
push
dec
ret
cmp
sbb
push
xor
gs
dec
inc
arpl
dec
pop
dec
lcall
mov
test
or
push
js
pop
rcrb
xchg
push
push
loopne
add
ss
jecxz
jns
cmpsb
aad
loopne
xchg
adc
shlb
scas
std
movsb
jmp
ss
aaa
mov
xchg
jb
inc
push
mov
out
cmpsl
inc
stc
divb
and
movsl
pop
xchg
jnp
and
mov
lds
xchg
xor
xchg
xchg
addr16
push
fcmove
dec
cmpsl
jecxz
push
hlt
out
jl
shll
out
std
mov
mov
sbb
push
inc
adcw
xor
push
test
ds
push
inc
adcl
xor
mov
push
dec
dec
cmp
pop
mov
mov
jg
in
movsb
int3
adcb
cmp
aas
sub
lret
ret
es
out
push
shrb
xchg
lock
cmpsl
aaa
faddl
fimull
mov
and
in
roll
out
leave
and
cli
xchg
push
stc
femms
push
mov
fiaddl
xchg
cmpsb
pop
sbb
pop
jbe
rcrl
ss
mov
cmpsb
int3
fadd
or
lcall
shlb
cmpsl
xor
adc
dec
mov
adc
inc
loopne
pop
pop
pop
es
sub
mov
xor
pop
mov
mov
into
stc
jl
push
std
push
imul
in
gs
ret
inc
cmp
imul
mov
mov
addb
into
lock
std
rorb
nop
loope
dec
ja
into
sbb
sbb
sarl
cmpsl
mov
not
inc
ds
and
and
pop
scas
mov
sbb
stc
mov
lcall
addb
call
ss
outsl
push
sahf
mov
out
dec
pop
clc
shlb
cmpsb
mov
fwait
shl
movb
sub
adc
dec
lods
mov
xor
out
in
loopne
inc
stos
pop
cmpsl
cwtl
inc
mov
mov
add
pop
rcrl
cmc
xchg
inc
and
inc
das
and
andb
pop
cmpsl
adc
movsb
dec
cmpsl
std
imul
jbe
xchg
sbb
mov
test
mov
push
inc
push
push
sahf
das
sbb
lock
into
and
inc
push
mov
mov
push
xor
push
int
and
cmp
cmp
and
test
pop
push
lret
push
xchg
and
nop
scas
sbbb
sub
mov
jle
push
jle
xor
jg
cs
testb
int
lahf
js
mov
mov
enter
cmpsb
mov
nop
mov
fisttpll
push
mov
lret
add
outsb
cld
mov
scas
jnp
cmp
fidivs
in
sti
sahf
push
jg
dec
fidivs
es
movsw
xor
out
push
jae
jle
scas
and
mov
sub
mov
push
xor
xchg
aas
loopne
rol
and
rcrb
dec
jae
out
in
sti
ss
mov
popf
mov
je
out
mov
ja
adc
dec
loop
inc
xor
xor
shlb
xor
cmp
sub
dec
pushw
mov
das
sarl
cmp
lea
sbb
jle
pop
out
fstl
ss
mov
scas
jle
or
sub
mov
inc
mov
inc
xchg
sub
push
mov
fcoms
std
and
pop
inc
xor
mov
imul
es
iretw
push
jbe
out
cmpsb
and
xchg
pop
pop
jle
adc
scas
dec
leave
cltd
int3
lods
stc
idiv
mov
fdivl
aam
testb
js
mov
mul
in
fucom
outsb
inc
addl
cmp
in
pop
popf
mov
aad
leave
push
outsb
jnp
add
inc
inc
add
pop
fnstsw
pop
ja
push
pop
sbb
loopne
jle
in
aas
stos
and
gs
fisttpl
gs
rorb
test
and
cmp
insl
xchg
xchg
std
clc
jns
push
and
fwait
popa
cs
mov
rcll
mov
push
lcall
or
fldl
dec
lods
jns
push
sbb
outsl
mov
outsb
stc
push
adc
out
push
mov
pop
or
jns
xchg
push
mov
dec
push
gs
out
sub
scas
fidivrl
add
ficoms
jp
in
out
lods
push
aaa
pop
push
cmc
or
sti
clc
das
or
jb
fsubp
aaa
cmp
sbb
ficoms
rorl
pop
popl
jp
xchg
leave
mov
in
cmp
cmp
lret
jo
mov
ret
pusha
mov
sub
stos
jle
shl
ss
rcrl
pop
jo
mov
mov
std
xchg
xchg
pop
ss
inc
rorl
shrl
cmp
and
ret
or
xchg
cmp
stc
loope
dec
cmpsb
or
or
mov
xor
out
into
mov
std
push
mov
jbe
movsb
add
dec
mov
mov
movsb
aaa
mov
sahf
lret
in
in
ss
lahf
mov
mov
sahf
mov
inc
aam
lahf
sahf
push
aam
jne
aam
inc
mov
rcll
js
vrsqrtps
mov
int3
adc
xor
nop
jg
mov
dec
jg
pop
cmp
xchg
xchg
imul
or
ljmp
sbb
enter
int
add
xchg
xor
rorb
test
pushf
ds
iret
and
cmp
insl
outsb
push
aad
shlb
int3
rcll
xchg
gs
out
mov
sti
sub
push
outsb
lds
div
mov
xchg
aad
test
aaa
ja
repz
das
xorb
add
push
mov
mov
xchg
add
sub
fnsave
mov
pusha
mov
add
mulb
mov
enter
push
mov
cmp
mov
fidivrs
mov
inc
nop
inc
push
pop
fcoms
fiadds
fiadds
mov
mov
lock
and
or
xchg
int
in
mov
ljmp
push
cmpsl
scas
es
dec
cmp
mov
sahf
adc
fidivs
fs
fistpl
jg
add
fsubrs
or
clc
loop
mov
xchg
xchg
adc
lods
mov
inc
fdivr
loopne
push
and
and
sahf
push
outsl
loopne
clc
lods
push
cmp
out
divb
dec
nop
push
loopne
inc
dec
sub
push
test
cs
mov
jns
dec
xor
dec
repnz
adc
xlat
cmp
mov
daa
dec
mov
cli
outsl
or
ficomps
int
in
inc
idivb
arpl
lahf
dec
mov
pop
in
sub
test
mov
jns
enter
jmp
sbb
out
jb
subb
mov
test
jmp
fs
ret
xchg
jg
xor
inc
inc
into
cmp
pop
sbb
neg
or
fwait
jg
scas
pop
inc
sbb
dec
int
push
inc
shlb
xchg
lds
imul
stc
inc
je
idiv
out
add
mov
cmpsb
lret
pop
dec
in
mov
mov
xchg
lds
in
popl
scas
cmpsb
push
mov
dec
fnsave
sahf
mov
lock
pusha
mov
imul
xchg
mov
ret
jno
test
jle
shr
dec
pop
xor
in
cld
xor
dec
cmp
fsin
pop
js
or
xchg
out
mov
gs
jg
jg
pop
ds
sub
pop
xor
or
rcrb
sub
mull
xchg
scas
into
scas
int3
xchg
out
pusha
push
fstpl
adc
mov
into
fucomip
pop
shrb
pop
cmpsl
xchg
out
pop
or
ret
adc
stos
pop
inc
mov
adc
mov
adc
mov
cmp
add
inc
or
lret
sbb
jg
adc
push
dec
add
pop
mov
xor
lahf
pop
pop
mov
scas
cmpl
fisubs
cmp
cmp
cmp
mov
cmp
jbe
int
loopne
stc
jmp
cmp
adc
push
mov
jmp
adc
lahf
shl
into
aas
jb
mov
add
fidivl
shlb
push
in
loopne
ret
cs
stos
cmc
jp
sarb
mov
scas
and
movd
loopne
out
dec
inc
mov
push
outsl
push
imull
aas
push
add
out
shl
aas
cs
scas
ret
std
fs
jl
loopne
push
cmp
pop
push
cmpsb
ds
shlb
pusha
mov
dec
loopne
mov
cmp
scas
dec
lds
mov
inc
xor
popf
add
ss
mov
lds
sbb
not
int
push
or
xchg
ret
mov
scas
and
std
mov
or
pop
out
jne
push
icebp
bound
addl
or
fcomp
mov
fidivrs
aaa
xor
adc
rcrl
mov
push
iret
mov
and
out
xchg
pop
out
mov
inc
pop
inc
push
sbb
sub
add
iret
mov
inc
pop
repnz
xchg
sbb
push
lds
mov
add
rcr
std
push
sahf
push
loop
jle
int
int3
loopne
rcl
sub
mov
dec
inc
dec
shrl
jno
mov
adc
roll
outsl
inc
sub
jg
xchg
scas
push
cmp
dec
or
lds
inc
sub
pop
fnstenv
or
and
into
int3
loopne
int
mov
xchg
mov
inc
ljmp
adc
loop
cli
int3
adc
rcrb
imul
xchg
into
stc
outsb
clc
sbb
test
es
xor
mov
push
xor
out
loopne
xor
scas
arpl
pop
push
leave
mov
inc
daa
aam
shl
cmpsb
addr16
xor
ficoms
xchg
or
sbb
lahf
mov
adc
mov
adc
adc
fstpl
jns
mov
scas
je
jle
xor
mov
mov
clc
inc
mov
sbb
pop
in
jae
imul
mov
xlat
aaa
mov
xlat
mov
sbbb
push
mov
jp
mov
mov
ds
dec
mov
leave
sbb
xorl
cmp
arpl
or
add
outsb
add
clc
in
subl
inc
outsb
sub
cmp
insl
test
jg
ja
repz
pop
or
cmpsb
shrl
pop
pop
pop
mov
iret
ss
sub
mov
in
cmp
fisttpl
mov
pop
xor
test
mov
mov
xor
mov
jmp
jle
or
mov
js
pop
outsb
fcos
pop
xor
or
je
lock
loopne
out
jno
rorb
movsl
out
stos
std
cmc
outsb
dec
mov
hlt
add
lret
repnz
cmp
out
mov
inc
ss
es
gs
or
lea
outsl
ds
das
cmpsb
push
adcl
sbb
inc
xlat
add
xchg
push
add
scas
sahf
in
out
ds
fxch
add
fstpl
mov
dec
dec
notb
fdivp
fnstcw
jno
mov
add
aad
js
fnsave
divb
int
outsl
ret
pop
out
push
jle
pop
hlt
jbe,pn
scas
sahf
jns
and
xor
int3
add
adc
push
xchg
pop
rcr
loop
aad
xor
cmp
aad
mov
jbe
sub
or
int3
ss
jg
or
add
out
fidivl
arpl
add
jg
mov
mov
lret
data16
or
out
jbe
or
out
add
sarb
xchg
outsb
icebp
xlat
jns
vandps
push
jbe
fdivs
xchg
dec
scas
adc
repz
push
pop
lock
int3
loopne
repz
arpl
inc
add
aad
pop
inc
ret
inc
mov
enter
fisttps
jmp
add
ja
or
ja
ret
clc
lds
aaa
out
and
pop
jge
movsb
in
fisttpll
push
in
adcb
cli
aad
test
in
sub
imul
and
cmp
add
adc
and
inc
mov
scas
mov
xlat
cmpsb
xchg
xor
int
mov
hlt
jmp
inc
loop
xchg
lods
add
xor
loop
add
jmp
in
ss
cmp
je
mov
xchg
shlb
arpl
mov
inc
gs
fstl
fisttps
xorl
mov
frstor
jle
aad
dec
aaa
mov
and
mov
push
ja
lcall
loope
ficoms
gs
dec
push
out
push
gs
pop
arpl
xchg
adc
add
rcll
addr16
es
lds
neg
mov
mul
fistps
pushf
fiadds
or
xchg
jbe
add
xchg
pop
jmp
inc
xor
xchg
push
xchg
adc
fdivrl
xlat
jle
fimuls
sub
fbstp
cmpsb
adc
cs
icebp
outsl
sbbl
fiadds
inc
fiaddl
loope
sbb
adc
repnz
push
insb
in
adc
in
or
rcll
idivb
push
in
mov
cmc
rol
negb
shll
js
nop
inc
jnp
cmp
dec
xchg
mov
lds
adc
mov
das
cmp
ror
or
out
adc
lds
lret
loop
push
fcomp
xchg
pop
push
mov
adc
pop
push
shlb
mov
mov
daa
scas
mov
pop
mov
rcrl
dec
push
out
push
dec
mov
gs
sub
frstor
scas
push
nop
mov
divl
cwtl
pop
mov
push
jecxz
jle
or
fisttpll
popf
scas
div
fisubrs
pop
mov
or
jl
scas
or
mov
gs
add
ficomps
mov
daa
xor
pop
das
push
out
cmp
out
mov
jmp
cld
cmp
bound
fistpl
mov
lods
test
lahf
clc
inc
sbb
cmp
sarb
negb
rcrl
jle
xchg
mov
int
cmc
push
lock
cld
dec
es
in
add
ja
lahf
xor
je
add
push
pop
mov
lock
adc
xor
pop
xor
gs
shrb
and
sub
scas
adc
cmpb
sahf
dec
test
push
pusha
sahf
inc
and
xchg
dec
add
pop
jno
inc
int
push
repnz
loopne
jb
test
xchg
idiv
loopne
es
lcall
mov
fwait
cmp
cmpsb
aaa
out
mov
aad
mov
mov
lods
push
pop
orb
add
out
and
push
inc
xchg
gs
and
push
mov
out
push
pop
sbb
mov
mov
pop
mov
cmpsb
and
outsb
je
add
fdivs
fcoml
add
jb
pop
sub
fcoml
scas
dec
movzwl
scas
xchg
mov
add
push
xchg
add
pop
inc
add
enter
ja
out
jg
sub
in
mov
in
mov
adc
aas
add
test
cmp
lahf
xchg
mov
lahf
cmp
cmp
lds
mov
or
aaa
sub
xchg
cmpsl
int
pop
and
loop
fdivrl
out
ja
cs
dec
or
lcall
pop
cmp
xchg
mov
in
pop
xchg
int
pop
jbe
xchg
cs
in
jg
mov
or
ljmp
call
in
stos
add
ja
adc
cmc
pop
add
lcall
mov
push
and
cmp
mov
loopne
mov
or
in
or
jg
mov
or
inc
xor
jb,pt
shl
adc
inc
jecxz
jnp
add
add
push
pop
dec
pop
fisubl
mov
addl
in
mov
cs
jns
into
in
andb
shlb
scas
mov
adc
scas
pop
mov
in
das
xchg
int3
fcmovbe
and
in
xchg
xchg
cli
or
jle
and
mov
or
and
pop
stc
cmpsl
cmp
mov
sbb
ljmp
js
cli
in
xchg
mov
push
lret
cmp
add
adc
push
push
pop
jmp
add
ljmp
in
jbe
mov
pop
pop
sbb
ds
aad
addl
sbb
sbb
or
xchg
hlt
add
sbb
shlb
cmp
iret
mov
adc
sub
fs
mov
sbb
add
sbb
push
ss
out
mov
out
fsubrl
scas
sbb
adc
add
jbe
sti
mov
rcrl
neg
xlat
lahf
lahf
push
inc
mov
loope
or
mov
ss
movsl
push
xor
mov
push
xchg
jo
out
std
or
mov
sub
xchg
roll
dec
sahf
pop
loope
ss
cmp
pop
frstor
xor
mov
sub
addl
gs
jb
push
cmpsb
jbe
xlat
cmc
lods
adc
pushf
lds
aad
mov
xorl
dec
loope
push
ficoms
popa
aad
popl
jecxz
push
and
into
stos
cmp
sti
add
mov
push
dec
lcall
gs
sbb
push
mov
fnstenv
sahf
aaa
sbb
sub
xchg
or
cmc
mov
shl
gs
dec
mov
cmc
repz
jo
dec
data16
push
mov
pop
or
jl
ss
jo
xor
jae
mov
arpl
dec
dec
push
mov
fidivs
aam
jo
inc
gs
pop
pop
inc
push
out
sbb
xchg
aad
ficomps
mov
aaa
sbb
js
nop
xchg
pop
xlat
jo
push
ja
sbb
push
outsl
add
fcomps
aaa
jbe
lds
sti
repnz
jo
aam
sub
pop
pop
adc
out
sbb
mov
das
roll
mov
dec
add
data16
sub
cmpsl
inc
std
or
push
pop
rclb
call
mov
sarb
ret
shlb
ds
adc
push
push
in
xchg
or
cld
dec
sahf
les
inc
in
mov
pusha
push
scas
iret
fsubp
mov
inc
cs
cmp
outsl
xor
gs
push
cmp
faddp
dec
push
ret
push
lock
adc
cs
in
adc
test
loopne
add
xchg
ds
cmp
mov
xor
jl
mov
addb
inc
out
add
repnz
inc
fs
fidivrs
mov
vcvtss2si
cmp
jg
ss
add
lock
addl
inc
cmp
mov
cmp
inc
cld
add
in
xchg
jg
jp
aas
ds
js
addb
xchg
jbe
int
jo
jp
mov
jo
jbe
dec
addb
sbb
frstor
outsl
cmpsb
es
push
xor
xchg
leave
int
scas
jge
mov
xrelease
int
xor
mov
pop
inc
cs
jns
mov
fistpll
dec
loop
inc
mov
icebp
push
cs
inc
mov
stos
sub
enter
jbe
bound
insl
incw
gs
jbe
mov
scas
add
js
adc
and
push
pop
push
and
data16
lds
aas
inc
and
cmpb
and
gs
fbld
ss
xchg
inc
das
cmp
aaa
shl
and
subb
and
sub
addl
push
mov
inc
loopne
out
cli
rcl
int
fucom
pop
push
add
add
testb
dec
out
push
push
pop
cmpsb
and
jne,pt
mov
xchg
inc
or
adc
jg
xchg
pop
push
int
fstl
jg
push
nop
jle
lock
push
ss
and
mov
in
ret
rorl
or
mov
xor
adc
lds
in
dec
loopne
shrb
push
jbe
mov
arpl
cmpsb
ror
cmp
mov
mov
mov
inc
sbb
cmp
dec
test
inc
pop
xchg
clc
in
dec
cwtl
adc
test
sbb
inc
orb
shlb
js
inc
mov
xor
out
mov
test
addb
xchg
lahf
xchg
push
push
cwtl
xchg
sbb
mov
mov
mov
mov
xchg
inc
inc
xor
cmp
daa
lret
cmp
or
mov
mov
stos
cwtl
cwtl
sahf
stc
insl
out
mov
addb
cmp
test
xchg
xor
pop
and
out
jp
loopne
into
ret
pcmpgtb
pop
adc
movsb
push
dec
out
popf
pushf
push
mov
add
lret
mov
cmp
fwait
inc
in
mov
xadd
es
and
adc
ljmp
mov
sbb
xchg
jp
xchg
xor
stos
mov
pop
inc
sub
adc
out
test
xor
shlb
dec
dec
ds
dec
cmp
movsb
mov
sahf
js
and
and
movsb
jle
mov
pushw
inc
aas
ds
jnp
add
push
and
shll
mov
dec
dec
out
adc
out
loop
mov
xchg
shlb
cmpsb
and
sub
jbe
sti
push
push
cmpsl
pop
and
pop
jle
in
inc
mov
mov
cmp
fs
add
push
out
lds
out
pop
jp
cmp
arpl
dec
jle
mov
inc
xor
aam
or
pop
fbld
xor
data16
inc
cmp
and
mov
sarl
aam
std
out
mov
mov
mov
gs
mov
js
hlt
pop
out
push
cmp
out
js
insl
je
dec
mov
xchg
adc
xchg
mov
in
js
and
or
mov
cmpsl
mov
insl
lret
jg
jns
data16
popa
jae
mov
fiadds
outsl
push
lock
out
add
rolb
fsubs
xchg
dec
jae
cld
push
fs
bound
jbe
xor
dec
cwtl
xchg
dec
xchg
mov
inc
popa
mov
pop
mul
aad
mov
out
sub
or
mov
adc
jb
jl
push
xor
sbb
push
push
shlb
aas
andb
movsb
push
clc
test
popa
pushf
dec
mov
in
dec
int
xchg
mov
sbb
loope
sub
rolb
sahf
push
add
jae
cltd
ds
mov
shll
outsb
repnz
mov
sahf
call
sbb
push
jns
adc
into
mov
cmc
ja
mov
rcl
cmp
into
xchg
push
outsb
aad
out
mov
in
lods
jge
push
dec
in
stos
mov
mov
es
loop
mov
cmp
fs
push
enter
ret
stos
jle
inc
inc
int
rcr
aam
ficoms
ds
xchg
xor
mov
push
mov
jle
lret
scas
ljmp
ret
into
movsl
data16
inc
adc
cmp
xorl
arpl
add
into
jecxz
rolb
mov
sti
push
sub
aaa
cmp
nop
ja
push
cmp
mov
mov
mov
mov
pmulhw
cmp
cmp
mov
xchg
cmp
loopne
and
rorl
inc
in
movsb
cmc
inc
gs
arpl
mov
adc
add
lock
in
fmull
scas
loope
dec
dec
dec
push
or
repnz
dec
inc
out
mov
inc
std
cld
and
idivb
sub
push
cmp
fldl
js
ss
jae
mov
lret
jg
dec
xchg
imul
popa
in
xchg
lds
mov
mov
stc
cmp
outsl
mov
in
mov
sbb
mov
xor
arpl
xchg
outsb
out
pop
lahf
cmpl
into
cmp
mov
cmp
xchg
dec
mov
jg,pt
adc
jbe
scas
push
loop
in
dec
mov
sahf
nop
jp
push
xchg
js
fiadds
mov
push
cmp
dec
lds
gs
push
rol
mov
mov
aam
mov
mov
add
mov
icebp
stos
call
orb
cwtl
cs
jl
icebp
dec
nop
arpl
add
ds
push
lret
stc
lahf
insl
dec
lahf
push
push
sti
ss
sbbl
iret
ss
add
iret
sbb
call
mov
xchg
dec
lcall
jo
push
aaa
xchg
jbe
or
adc
lret
jg
icebp
cmp
xchg
push
add
ds
cmp
iret
hlt
and
dec
mov
jle
dec
inc
movsl
cmp
and
movsb
std
pop
cmp
add
mov
jle
add
pop
fistpll
cs
adc
in
fucomip
xor
add
xchg
sbb
mov
mov
leave
arpl
add
ds
enter
mov
sbb
mov
dec
adc
cs
mov
fildl
fmull
lds
add
add
out
cmp
pop
js
cmpsb
stc
nop
lcall
jae
push
xchg
out
in
cmc
sbbl
hlt
scas
jg
pop
es
into
cmp
or
ss
cmp
sarb
not
std
mov
gs
jbe
mov
jnp
add
and
pop
and
mov
ds
cmp
mov
lock
out
mov
mov
mov
mov
faddp
cmp
mov
xorb
push
sbb
push
inc
mov
dec
cmp
rorb
fdivr
cli
cmp
rcrl
jns
and
ja
inc
xchg
xor
ja
inc
loope
mov
jg
jbe
mov
inc
push
mov
mov
out
push
movsl
pop
push
ret
adc
pavgb
loopne
ljmp
rcll
or
movsl
out
mov
aas
shlb
adc
test
outsl
mov
or
call
cli
filds
imul
lret
imul
pop
add
xlat
aad
out
ret
sbb
cmpsb
or
lods
scas
mov
mov
sahf
push
icebp
divb
jno
push
iret
cmp
mov
jb
into
mov
and
sahf
pop
dec
ja
inc
lahf
mov
add
mov
dec
out
sbb
inc
xor
push
hlt
cmp
mov
push
jge
cmp
cmpsb
cmp
mov
jle
sbb
xlat
faddp
and
repz
sub
xlat
jnp
or
mov
cmpsl
push
push
adcb
in
inc
mov
jle
inc
mov
sahf
add
jno
aas
adc
mov
in
out
movsl
xchg
push
pop
mov
pop
cmpsl
movsb
xor
cltd
std
mov
jp
xchg
cmp
in
stc
sarb
test
int3
jne
pop
js
aaa
inc
cmpsl
mov
inc
cmp
pop
xchg
outsb
bound
sahf
sbb
scas
rcl
ss
xor
push
pop
mov
in
jns
pop
pop
shl
movsl
loope
lods
int
rorb
ret
getsec
scas
mov
fst
rcl
loop
in
add
adcl
pop
adc
arpl
mov
cmc
es
add
dec
leave
loop
into
jecxz
dec
arpl
fisubs
push
push
leave
cmp
jg
or
adc
push
xchg
inc
rorb
jb
mov
mov
int
jg
cs
mov
jno
outsb
and
dec
pop
jmp
jp
out
push
cmp
pop
pop
fwait
cmp
enter
inc
dec
jle
dec
push
ljmp
xlat
mov
mov
pushf
cs
mov
push
jne
cmpsl
lahf
enter
cmp
mull
pop
sbb
cwtl
int3
adc
push
out
mov
sub
pop
xor
mov
cmpsl
icebp
hlt
fcmovnb
int
xchg
data16
mov
mov
jle
out
push
mov
and
bnd
jl
stos
insb
xchg
fsubrs
xor
imulb
dec
sahf
sub
lods
test
dec
jecxz
mov
nop
push
movsl
sahf
orb
push
mov
test
push
es
call
cld
insb
xchg
cmp
insb
and
sahf
cmpsl
push
insb
out
jmp
fimuls
stos
mov
jnp
add
lcall
arpl
dec
mov
mov
xchg
std
mov
push
or
scas
pop
fs
mov
jmp
rcrb
js
or
test
popa
push
xchg
jmp
and
add
in
push
sbb
in
andb
xchg
popa
and
mov
xor
mov
jmp
or
sbb
mov
xchg
pop
sahf
in
push
push
imul
inc
cltd
cld
ljmp
nop
pop
sub
ss
add
mov
not
arpl
dec
nop
mov
dec
push
into
mov
pop
scas
xchg
cmpsl
shlb
push
dec
sub
rorb
jl
inc
sbb
cmpsl
lock
data16
mov
dec
pop
arpl
pop
jl
inc
ret
mov
dec
inc
fcmovnbe
lds
ror
add
ret
and
mov
mov
cld
cmp
icebp
je
lret
mov
rcrl
movsl
mov
dec
inc
out
sub
ss
push
jb
push
xchg
push
fidivrs
jle
lret
adc
push
ljmp
rorl
ret
push
jg
or
mov
loope
pusha
cmc
imul
push
sbb
je
mov
in
jb
pop
add
xor
jg
mov
jg
xchg
ja
cmpb
push
fisttpl
mov
and
pop
inc
popa
push
dec
shll
xorb
sbb
bound
mov
mov
mov
loop
nop
fcomps
aaa
scas
mov
jle
dec
je
jbe
cs
or
loopne
popa
push
into
fidivl
arpl
xchg
jb
jbe
jns
fidivs
xor
add
or
aad
negb
ret
mov
mov
divb
jo
fs
lcall
pop
pop
cli
mov
adc
mov
repz
out
and
dec
lcall
out
out
call
mov
cwtl
lock
stos
mov
push
mov
enter
push
addb
add
jbe
or
mov
and
sbb
sub
mov
xor
ret
push
jecxz
in
and
pop
into
xor
ss
dec
lret
es
pop
lds
adc
mov
inc
pop
mov
jbe
jl
jp
test
adc
mov
sub
xor
mov
push
jmp
jmp
fst
repnz
ss
sub
push
mov
adcb
dec
xchg
cmp
dec
andb
mov
lret
js
pop
rcrl
lret
out
decb
out
shr
data16
addb
jle
cmp
cmpsb
subb
pusha
arpl
enter
inc
or
iret
xchg
jo
or
cmc
jae
mov
gs
lds
repz
movb
push
lods
mov
dec
arpl
into
divb
mov
add
push
mov
mov
into
mov
mov
and
push
out
pushf
add
in
adc
mov
in
movb
push
xchg
icebp
aaa
pop
out
rorb
movsb
sbb
in
mov
adc
xchg
arpl
and
subl
or
xchg
add
ss
add
cmc
outsb
mov
cmpsl
rclb
inc
dec
scas
ror
cmpsb
mov
fiaddl
stos
shl
pop
dec
lods
xchg
scas
rorl
push
in
ret
pop
mov
es
xchg
mov
push
sahf
int
je
clc
or
mul
je
push
in
loop
rcll
lcall
fstp
cmc
pop
inc
rcrl
shlb
repnz
sub
jo
xchg
cmp
popl
fimull
pop
pop
je
int
outsb
push
es
add
es
inc
mov
and
inc
lret
repnz
and
push
pop
iret
cmp
jg
pop
push
jg
ljmp
lcall
push
xchg
pusha
ffreep
inc
imul
mov
inc
cwtl
mov
sahf
adc
dec
mov
mov
lcall
push
cmp
push
movsb
jmp
repnz
dec
cmp
add
ds
mov
in
mov
push
jbe
mov
cli
mov
out
mov
sahf
jle
mov
mov
mov
movb
and
fdivs
adc
and
out
cmp
push
mov
gs
jbe
mov
cmp
jl
into
test
out
xchg
insb
fidivs
inc
addl
ds
push
jg
dec
and
mov
pop
mov
jg
jnp
push
jae
sarb
sub
jbe
loopne
mov
idivb
mov
mov
outsb
in
adcb
push
add
push
xchg
ss
ss
jbe
mov
pop
sbb
ss
jbe
mov
insl
jg
inc
mov
lds
lret
jo
xchg
inc
std
daa
mov
mov
sub
or
dec
or
mov
aad
stos
test
ljmp
dec
out
push
insb
xor
jp
inc
mov
lds
pop
fisubrl
and
into
shld
mov
and
imul
mov
cmp
push
add
jecxz
or
test
ss
fcomip
add
add
inc
subb
rol
scas
cmpsl
jle
sbbb
es
mov
push
pop
push
inc
int
xchg
fbld
mov
inc
dec
bound
insl
push
push
es
sti
mov
jne
cmp
mull
mov
mov
cmp
dec
aam
dec
loope
jg
push
and
bound
sahf
clc
test
push
ss
push
xchg
outsl
or
push
and
push
out
fcoms
cmp
mov
sahf
adcb
loop
jb
add
sbb
inc
mov
sub
fldenv
add
sbb
fcmovnbe
dec
outsl
clc
xor
inc
push
cmpsl
insl
jbe
andb
mov
std
stos
xchg
in
push
push
fbstp
mov
icebp
es
out
shlb
mov
frstor
enter
dec
pop
xorl
std
dec
cmp
xchg
and
cmp
gs
inc
ss
push
loopne
sahf
ds
mul
in
mov
push
dec
pushf
out
cmpsl
pusha
inc
jge
inc
icebp
arpl
sarl
lds
xor
inc
add
xchg
adc
adc
cmp
push
mull
inc
mov
mov
into
sbb
dec
push
dec
notl
fldt
mov
and
adc
ret
js
mov
je
and
cmpsl
out
jmp
dec
mov
hlt
xchg
in
mov
dec
movsb
jle
ja
dec
inc
add
js
lret
fbld
out
cmpsl
adc
cmp
or
lret
cmpsl
outsb
rclb
sub
cmpsb
cs
lods
jmp
inc
cs
lcall
jbe
dec
gs
out
push
outsb
add
xor
add
cmpsl
sbb
mov
mov
lcall
cmp
repz
pop
loop
fnstenv
mov
sbb
imul
xor
xor
xchg
fstpl
jle,pt
sbb
cmpsl
adc
cld
mov
sahf
inc
mov
lahf
pop
mov
loopne
sahf
sub
push
jbe
or
fwait
pop
in
xor
dec
cmpsl
lahf
jp
js
pop
or
or
popa
nop
adc
enter
add
ret
pop
outsb
dec
mov
pop
xchg
cmpsl
mov
mov
mov
mov
pop
xchg
fiaddl
mulb
outsl
xor
testb
sbb
jb
sarb
nop
adc
inc
gs
pop
ja
cmp
jl
shlb
notb
cmpsb
jb
inc
xchg
arpl
adc
stos
pop
pop
mov
and
push
cmp
xchg
movsb
pop
out
mov
lahf
xlat
inc
dec
mov
push
in
xchg
jno
out
pop
outsb
fcmovb
test
mov
ja
fistpll
int
out
je
movsl
pushf
push
icebp
stc
imul
movsl
jbe
xchg
mulb
add
inc
push
cmpsb
fsubl
mov
rorl
sarb
mov
fnstcw
into
push
add
lds
cmp
mov
adc
and
push
out
inc
jp
in
scas
ret
mov
add
ret
fnstenv
scas
out
add
add
daa
lods
loope
out
add
out
add
repz
push
inc
mov
add
inc
sbb
add
jg
cs
mov
adc
mov
xchg
jbe
inc
sbb
repnz
mov
jp
mov
stos
add
cmpsl
pusha
fucomip
fstl
out
fstpt
bound
std
andb
or
popf
pushf
inc
xor
ss
stc
mov
pusha
jmp
lcall
cwtl
pop
adc
scas
pop
ficoms
dec
push
out
repz
rclb
xchg
outsb
add
add
mov
adc
cwtl
test
test
mov
xor
in
add
arpl
cmp
inc
jbe
jl
push
ret
pop
ret
mov
mov
movsb
shl
jmp
ret
ja
inc
inc
mov
cmpsl
fisubl
mov
sbbb
push
aad
loop
imull
mov
push
imulb
pop
cmp
repnz
popa
mov
out
inc
push
mov
adc
inc
imul
rorb
cmp
jp
testl
jle
fidivs
mov
aad
add
sbbl
lcall
jb
es
cli
mov
push
sarb
ja
ficomps
punpcklwd
mulb
in
pushf
push
inc
add
cmp
int
ret
es
inc
add
mov
into
and
out
lds
shr
jmp
xchg
sahf
mov
adc
cmpsl
sub
add
stos
es
xchg
orl
push
ds
add
sbb
inc
in
dec
gs
movsb
xchg
out
es
es
xor
push
jb
cmpsl
push
fsubr
and
sub
push
adc
std
cmpsb
lock
or
mov
xor
aaa
adc
mov
mov
xchg
xchg
xor
popa
and
insb
or
scas
xor
js
sbb
out
dec
lds
into
js
sahf
xchg
jle
in
in
and
fcos
imul
loopne
mov
ret
fstpt
xchg
ret
lods
pop
sbb
aam
ret
shlb
int
ds
xchg
pop
xchg
negb
and
shrb
imul
and
xor
iret
sub
scas
clc
ss
push
add
add
in
cmp
pop
mov
cmc
gs
arpl
or
push
idivb
jbe
int
outsl
out
popf
scas
gs
mov
mov
mov
repnz
cmp
xor
mov
push
cs
outsb
push
clc
push
iret
or
inc
mov
test
nop
jecxz
xchg
inc
out
push
and
lret
shlb
rcrb
aas
ret
mov
mov
and
ds
push
cmp
les
enter
stos
and
push
pop
adc
push
pop
aas
into
push
push
dec
clc
jb
data16
push
mov
test
push
jle
xor
fsubp
je
rorl
xor
shll
dec
movsb
mov
sarb
mov
cmc
faddp
test
push
imul
out
cmp
fwait
adc
stos
loop
and
int
mov
in
ds
adcb
adc
push
out
pop
fidivrl
out
filds
lods
in
push
sbb
push
jl
loope
sti
xchg
sti
mov
out
mov
popa
lret
push
add
out
cmp
int3
fisttpll
ds
xor
mov
data16
out
add
stc
add
popa
out
in
jmp
or
int
es
out
out
scas
mov
mov
xchg
imul
cmpb
xor
popa
pusha
ss
mov
cmp
dec
jp
jno
outsb
mov
outsl
inc
or
neg
out
or
push
push
lcall
divb
into
jecxz
mov
xlat
out
inc
or
mov
mov
dec
negb
cmp
inc
adc
push
add
mov
loop
mov
jp
mov
mov
in
and
fldt
jp
mov
ret
fstpl
lret
sbb
int
addl
or
add
mov
push
sti
and
popa
push
push
fldcw
and
ds
shll
mov
pop
inc
aad
rol
push
sbb
or
loop
rcr
mov
ret
test
add
push
sbb
jno
hlt
sbb
mov
mov
ds
or
push
mov
out
mov
aas
and
repnz
jbe
aas
mov
lods
and
js
push
mov
int
ret
cmp
lds
push
mov
cld
xor
in
add
jmp
ds
cmp
es
push
push
inc
sbb
mov
add
inc
sbb
and
xchg
orb
in
inc
and
push
rcll
dec
jno
je
add
js
jmp
push
mov
gs
mov
push
jb
xchg
inc
pop
js
add
push
ss
mov
push
push
bound
lcall
push
add
cli
and
lcall
xlat
js
xor
mov
cmp
and
mov
inc
gs
repz
pop
loopne
push
daa
nop
int
xchg
mov
mov
in
pop
push
and
je
fnstcw
negb
stos
mov
xor
mov
lcall
fiadds
mov
xor
cmp
ficomps
movsb
ss
mov
movsb
movsb
sahf
adc
test
mov
xor
lret
mov
jge
push
cmc
sub
or
or
scas
mov
dec
inc
sbbb
pop
push
lahf
mov
add
mov
mov
xor
cmpsl
push
fstpt
ret
jecxz
ret
mov
sub
movsb
add
push
clc
mov
push
shl
movsb
mov
jg
push
jbe
mov
pop
gs
and
mov
imul
push
xchg
pop
mov
ficoml
push
aas
xor
cmpsb
imul
rcl
or
loop
pop
addb
imul
imul
cwtl
fisttps
xchg
jo
roll
enter
and
dec
pop
orl
cmpsb
xchg
lret
adc
mov
push
sti
stos
fwait
mov
cs
cmpsb
fldenv
pop
ret
fldt
popa
ret
icebp
in
cmpsb
popw
frstor
int
dec
repnz
int3
outsb
mov
add
fmulp
cli
jmp
scas
mov
popa
stos
sub
clc
mov
fisubs
jl
dec
adc
xor
mov
scas
adc
adc
inc
pop
sub
sbb
sbb
xlat
out
push
mov
adc
in
ficomps
aad
jmp
sbb
shrl
inc
adc
popa
and
imul
mov
xchg
js
nop
or
rorl
int3
aam
js
xchg
loop
adc
orb
pop
leave
scas
sbb
mov
mov
loop
xchg
mov
rclb
push
cmp
xor
test
cli
mov
out
jmp
shlb
adc
push
in
lods
push
fcompl
jl
push
aaa
imul
push
arpl
faddp
fcmovne
ss
mov
pop
xchg
pushf
push
pop
aad
jb
push
sub
xchg
shl
clc
arpl
imul
fisttps
rcll
xchg
addl
mov
xlat
push
add
aaa
loop
jbe
jb
mov
icebp
divb
movb
mov
rcrl
add
or
outsb
pop
nop
jg
cld
sub
lods
iret
div
mov
pop
jo
rolb
scas
fisubs
dec
jno
xchg
pop
or
pop
add
ss
ss
inc
jp
or
nop
push
mov
into
arpl
cmp
pop
pushf
adcl
xchg
xchg
jae
popa
push
int
sahf
imul
mov
push
gs
ror
leave
lods
mov
adc
popa
mov
xor
gs
sahf
outsb
mov
push
sti
dec
inc
jl
xor
call
aam
mov
xchg
loopne
outsl
subb
shl
xor
gs
sub
outsb
ficoml
xchg
dec
dec
jae
pushf
push
sbb
lret
out
idivb
addb
mov
into
mov
adc
popa
adc
rorb
insl
pop
out
dec
jmp
jmp
imul
pop
fidivs
push
rol
xchg
adc
sub
mov
pushf
push
jo
inc
ja
in
movb
xchg
mov
mov
and
adc
xchg
jns
aaa
adc
mov
fsqrt
fsubp
mov
xchg
mov
and
divl
lock
mov
and
mov
cmp
pop
daa
negb
mov
fdivrp
aaa
mov
dec
push
push
push
lret
lret
mov
and
sub
pop
push
leave
xor
pop
inc
jne
out
cmpsl
dec
jl
inc
imul
data16
xchg
cli
mov
xchg
jbe
out
push
xchg
dec
into
mulb
imul
fwait
ja
jecxz
out
pushf
pop
jb
push
daa
push
dec
and
loopne
fiadds
mov
mov
popa
fistl
jle
aam
jle
or
pusha
jmp
andl
inc
cmp
fimuls
xor
movb
pusha
push
icebp
imul
fisubrl
dec
scas
fisubl
testb
dec
aad
dec
inc
pop
js
adc
inc
scas
jno
dec
push
jecxz
add
pop
dec
outsb
cmp
aas
idivb
push
mov
mov
jp
or
imul
filds
inc
mov
mulb
cwtl
xchg
and
cwtl
cmp
neg
mov
inc
fidivrs
in
push
lds
mov
out
cmp
push
jb
and
mov
pop
cmp
repz
clc
ss
cmc
pop
push
rol
adc
js
mov
jl
imul
stc
cs
ljmp
in
imul
cmp
adc
notb
push
dec
inc
and
fsubrp
sbb
sub
inc
dec
mov
in
xor
out
ficoms
outsb
clc
push
jb
mov
jl
xchg
push
jp
mov
inc
sti
lds
jg
fwait
loopne
adcl
ja
addr16
test
ror
mov
outsb
mov
pop
mov
bound
fsubs
or
fstpt
mov
mov
lahf
mov
pop
adc
sahf
sub
xlat
in
cwtl
push
mov
clc
cmc
scas
fidivs
into
mov
outsl
lret
imul
push
div
push
and
leave
push
xchg
jbe
cs
outsb
or
cwtl
rolb
mov
inc
addr16
mov
cmc
shl
div
cmpsl
cmp
out
xchg
incl
aam
push
test
imul
push
cmp
pusha
out
mov
out
ds
test
inc
push
fimuls
mov
ss
lds
jl
stc
jbe
in
into
in
fstl
popa
fcomp
fisttps
jmp
push
sbb
into
shrb
inc
sti
lock
data16
outsb
dec
xchg
inc
imul
gs
lcall
aam
fmull
mov
or
shr
movsb
test
push
mov
in
je
fsubs
dec
jp
shl
ss
aam
icebp
jmp
data16
and
jl
outsb
into
push
fdivrp
jbe
iret
movb
or
mov
popa
vunpckhpd
fcmovu
fldt
gs
les
pop
push
out
mov
mov
movl
outsb
xor
pop
sbb
loop
mov
inc
push
ret
js
sahf
dec
cmpsl
loope
fldenv
aaa
mov
cmpsl
rol
cmpsb
int
add
push
jge
aas
flds
xchg
in
les
cmpsb
adc
sub
std
push
lods
mov
xorb
outsb
jl
xchg
sbb
outsb
pusha
fbstp
pop
lcall
mov
lods
rcr
popf
jl
inc
stos
fchs
leave
jns
adc
testl
xchg
pushl
push
or
push
mov
js
data16
xchg
out
mov
mov
ret
or
arpl
fstl
nop
jle
rcr
addr16
xor
out
push
jle
adc
je
arpl
xor
lds
mov
adc
iret
mov
addb
jae
js
push
mov
ficoms
xchg
xchg
cmc
in
jp
mov
jo
jge
and
fisttpll
int
pop
ret
in
fisttpl
arpl
outsb
aad
inc
jmp
data16
shl
call
jo
out
jno
dec
jb
ss
mov
repnz
mov
movsb
cltd
jbe
push
add
and
add
dec
mov
ret
arpl
mov
jo
paddq
pop
ret
jb
mov
mov
pop
xchg
ret
pop
sub
cmp
mov
dec
inc
dec
cmp
inc
lods
dec
push
sbbl
xor
mov
add
repnz
clc
or
bound
pop
scas
or
push
int
adc
mov
fsubs
xchg
fisubs
lds
testl
daa
and
int3
sbb
inc
jb
sar
sbb
imul
icebp
int
shlb
aaa
push
mov
and
push
cmp
in
neg
mov
sbb
ret
push
mov
dec
fisubs
xchg
out
mov
jl
rclb
cmpsb
test
ret
xor
dec
cs
sub
pop
into
cmpsb
inc
push
mov
push
movsl
push
jle
adcl
pop
xchg
inc
ffree
dec
pop
push
pop
pop
std
adc
lods
loop
and
ret
fcmove
fldl
add
lahf
sbb
sahf
fldl
lds
rcrb
in
xchg
imul
fmull
pslld
adc
push
jb
sbb
fstpl
cld
cmp
pop
adcl
push
or
clc
jle
fcomip
in
mov
loope
in
js
sub
push
inc
mov
nop
push
sbb
outsl
cld
jl
ljmp
sbb
sar
dec
in
or
xchg
imul
in
mov
add
insl
cltd
iret
into
mov
mov
jg
pop
cmc
push
aas
int
aas
sarl
popa
outsb
adc
imul
repnz
fidivrs
mov
out
sub
mov
dec
out
jo
stos
das
pop
mov
cld
push
dec
outsb
sti
es
arpl
fisubrl
imulb
mov
jbe
dec
adc
in
cmpsl
pop
pop
in
out
mov
jg
sub
icebp
sub
xor
bound
dec
and
pop
and
out
xchg
fxch
mov
sub
lret
pop
or
push
dec
iret
xor
xchg
push
outsb
cli
ret
pusha
lret
mov
jns
stc
dec
ds
outsb
es
ss
pop
fsubl
imul
dec
push
loop
sbb
push
push
shrl
andb
and
pop
or
shrb
roll
sub
arpl
in
mov
inc
inc
mov
mov
sbb
xchg
mov
xor
adc
xchg
ss
out
mov
cli
mov
mov
mov
mov
cmp
out
mov
cltd
sbb
ret
cmp
push
ja
inc
mov
cs
test
push
and
push
jae
negb
neg
loop
int
jle
or
xchg
cs
bound
mov
cmp
mov
mov
sub
es
jl
xor
add
fisubrs
aad
out
or
and
jmp
jg
pop
ja
push
cld
mov
add
mov
fmull
ss
gs
jb
int
mov
popf
mov
popa
fwait
push
ja
or
lret
fst
push
std
mul
lock
adc
cmpsb
and
fst
mulb
stc
mov
mov
push
sub
orb
sub
mov
outsl
jl
sahf
rorl
push
jb
lcall
cli
out
mov
ret
jno
aas
les
repnz
gs
in
sarb
mov
inc
xor
xchg
imul
push
mov
cmp
ja
push
decb
jmp
dec
js
xlat
cmp
out
xlat
jmp
aad
test
cld
daa
lods
cmp
out
cs
push
pop
cwtl
sbb
int
scas
pop
dec
aad
subl
rorl
cld
jo
xchg
sahf
cmp
xchg
lcall
aad
filds
test
fwait
loop
lods
xlat
idivb
pop
into
in
incb
stos
ret
and
pop
test
stos
mov
or
jno
or
fdivs
mov
aaa
mov
enter
inc
call
jmp
sub
dec
fs
out
sbb
cmc
clc
fcmovu
and
adc
rorl
xchg
fnstcw
in
or
jbe
ljmp
mov
fsubrl
pop
cmp
es
orl
movsb
jle
sbb
ret
mov
jnp
data16
jbe
lock
add
iret
xchg
push
or
out
fsubrp
inc
mov
push
jp
lret
jne
cmp
test
nop
fsubs
adc
add
daa
shlb
and
dec
out
loop
xor
sbb
lock
jmp
xor
out
xchg
lock
clc
add
and
xchg
aas
repnz
mov
push
cld
mov
adc
shl
lods
rorb
xor
mov
ds
inc
gs
mov
int
fnsave
cmp
dec
test
jbe
repnz
in
arpl
xchg
lcall
into
dec
sbb
shl
test
ret
push
out
xchg
into
mov
cwtl
xorl
insl
inc
xchg
cld
int
decb
mov
inc
dec
aad
inc
lea
mov
mov
popl
aad
cmp
and
and
nop
data16
loop
lahf
rorb
add
and
adc
int
cld
adc
push
adc
dec
and
mov
in
cmp
sbb
test
call
je
push
loope,pn
into
add
mov
sahf
pop
in
inc
cmp
adc
es
movsb
or
int3
push
aam
rorb
pop
jbe
in
and
inc
xchg
lds
fdiv
cmc
mov
in
mov
ret
out
mov
dec
in
lret
into
in
out
and
arpl
mov
ja
out
inc
dec
neg
loop
lcall
jecxz
mul
push
popa
add
push
mov
mov
arpl
out
xchg
addr16
jle
leave
dec
inc
push
adc
dec
scas
push
and
inc
iret
test
jbe
xor
add
jge
lahf
inc
mov
mov
outsl
decb
xchg
fisubrs
push
fcoml
aad
add
mul
mov
adc
std
inc
cmc
mov
fisttps
into
sbb
data16
inc
cmpl
repnz
fs
lret
sarl
repz
add
xchg
cli
lds
lock
xor
mov
iret
gs
les
ficoms
into
loopne
lret
mov
in
sub
cmpsb
fnstsw
sbb
es
and
inc
dec
in
xor
cmp
xchg
fbstp
int
out
or
stos
push
into
or
xchg
adc
and
ror
mov
aad
ret
into
and
jle
test
in
xchg
sbb
popl
mov
shlb
fdivp
cmpsb
in
xchg
faddl
and
dec
notb
rolb
cmpsb
int3
stos
and
xor
shl
cwtl
ret
jb
pop
cli
popa
xchg
inc
lds
test
cs
cmpsb
mov
mov
xchg
xchg
push
in
mul
cmpsb
lock
xor
sub
repnz
sahf
push
inc
imul
mov
inc
adc
jne
add
cld
ss
lcall
lret
rcll
in
rolb
mov
or
and
cmp
dec
add
mov
call
adc
cmpsb
movsl
popf
xchg
jle
mov
repz
cmp
imul
mov
fsub
push
aas
and
mov
push
mov
lock
ror
in
cmpsb
sbb
and
sub
icebp
and
xchg
mov
pop
or
addb
cmc
sbb
dec
mov
or
push
out
push
pop
xchg
pushf
sub
in
fwait
or
outsb
gs
bound
cld
mull
xor
mov
push
pop
fdivp
or
test
xor
inc
rcl
shrl
outsb
sbb
sbb
in
sti
icebp
cmpsl
mov
push
jg
jae
cmpsl
jl
mov
cmpsl
mov
cmpsb
xchg
mov
in
lock
in
mov
inc
push
fs
js
mov
or
movsb
mov
cmpsb
orl
mov
rcrb
jae
mov
push
adc
divb
mov
sub
inc
mov
jmp
outsl
outsb
cltd
lea
stos
mov
or
cmpsb
movsl
dec
cmpsl
cmpsb
rolb
inc
xor
dec
mov
jb
out
sbb
outsl
and
inc
arpl
mov
mov
std
iret
cwtl
jp
in
lret
adc
adc
push
add
cmpsb
int3
scas
lds
cmpsl
push
ds
jl
cwtl
ret
jp
push
push
push
stos
mov
jnp
out
pop
nop
aaa
rorw
ret
dec
lcall
out
and
movsb
leave
add
cmpsb
or
and
sub
je
xchg
xor
cmp
icebp
mov
inc
jge
lea
in
mov
mov
sbb
add
dec
subl
add
mov
cltd
mov
stc
add
in
in
fsubrs
or
mov
push
jmp
fwait
mov
push
push
mov
mov
arpl
mov
and
pop
shrb
ret
and
out
arpl
pop
test
mov
outsl
cmc
lea
ss
pop
push
daa
loop
in
out
mov
lods
jb
stos
mov
mov
out
pop
arpl
mov
cltd
pop
or
push
ljmp
xchg
aaa
and
mov
fldenv
or
iret
sbb
repnz
mov
sbb
cmpsl
ret
lret
mov
cmc
adc
es
out
lods
and
enter
divl
pop
iret
aaa
dec
xchg
mov
pop
cs
cmpsb
mov
aad
mov
and
dec
jl
enter
fmuls
rol
mov
shll
iret
mov
decb
pop
ficompl
fbstp
push
sub
into
cmp
loopne
mov
fld
push
in
xor
and
push
pop
div
mov
ret
mov
dec
mov
les
sub
pop
push
fdivp
jmp
out
sbb
hlt
inc
dec
sub
pop
mov
aas
sub
add
push
repnz
xchg
push
lods
sbb
mov
sbb
mov
aad
andb
fbld
in
rorb
sub
ret
call
fbstp
sub
dec
popl
out
push
sarl
add
or
dec
push
and
xchg
lods
mov
xchg
and
inc
ret
or
mov
adc
add
out
ret
sarb
mov
shr
out
xor
mov
loopne
into
loop
sarl
ret
or
and
test
data16
jb
cmp
sbb
sub
movsl
hlt
lods
add
lock
rolb
mov
xor
inc
test
cld
rolb
pusha
out
roll
sbb
push
mov
adc
ss
and
inc
sbb
pop
fwait
rol
sub
pop
pushf
push
sti
loope
mov
rcl
push
fists
cwtl
movsl
dec
xor
into
push
push
cs
pop
lahf
adcb
cmp
cmp
enter
outsb
ret
xor
out
mov
cmpsl
inc
pop
pop
mov
fwait
dec
cmp
adc
mov
xor
mov
cmp
xchg
mov
inc
mov
xchg
inc
mov
sbb
cmp
sar
jl
adc
in
jbe
cmc
pop
mov
sub
sbb
das
stc
jnp
pop
add
push
add
imul
outsl
out
mov
pop
int
test
cwtl
mov
mov
loopne
ret
cmpsb
lods
mov
inc
push
inc
ret
inc
mov
mov
repnz
hlt
in
fidivrl
ljmp
sub
cli
shll
push
jg
add
push
ja
mov
push
insb
jbe
and
loopne
push
idivb
ret
in
ret
pop
or
rol
mov
int3
stc
add
lcall
rcrb
mov
xchg
in
xchg
add
xor
daa
repnz
movsl
stos
dec
sub
in
xchg
sub
xchg
cmp
add
cmp
nop
mov
shlb
shll
lret
sbb
cmp
mov
mov
call
rcrl
cmp
outsl
or
lea
stos
rcll
mov
popw
call
push
dec
sub
into
in
adc
inc
in
in
outsb
and
mov
ror
mov
push
dec
inc
inc
add
clc
xchg
jecxz
sub
ss
pushf
outsl
dec
add
mov
cmp
mov
cld
cmp
in
sarb
sub
aad
out
iret
add
cmp
test
pushf
push
mov
fs
test
fcomip
cld
add
adc
add
push
lock
incb
xor
fbstp
ret
int3
fwait
movsb
aas
pop
xor
inc
or
lret
fld
xor
cs
dec
xchg
and
mov
lret
sbb
enter
and
out
cmp
mov
push
adc
inc
std
shll
repnz
ljmp
xchg
stos
and
dec
dec
sbb
sbb
out
dec
xchg
mov
cmpsl
test
loop
rolb
stos
adc
dec
sub
fisubs
incb
frstor
cmp
sub
mov
dec
sbb
int
rclb
outsb
or
rclb
dec
rcr
adc
push
fcmovnu
leave
jg
lret
sub
cmp
mov
pop
test
decb
imul
lret
jne
mov
enter
jns
dec
inc
pop
roll
and
ret
pop
sub
xor
xchg
mov
cltd
cmp
inc
out
push
iret
loopne
mov
into
mov
mov
es
mov
mov
dec
sahf
jbe
decl
inc
icebp
loop
int3
pop
mov
mov
push
into
lods
mov
iret
mov
shll
rol
adc
stos
cmp
mov
mov
in
add
jmp
or
and
idivl
jg
sar
outsb
ds
mov
loopne
aam
mov
mov
daa
mov
cmp
xchg
js
addl
mov
xchg
inc
and
push
testl
push
dec
sbb
inc
testl
push
call
and
jle
mov
mov
mov
or
imul
ja
pop
in
inc
and
adc
mov
mov
cmp
adc
mov
outsl
dec
sub
push
xchg
pop
and
xchg
mov
mov
ret
sbb
imul
jmp
dec
stc
push
sub
imul
xor
xchg
adc
mov
call
mov
in
dec
adc
mov
cmpsl
mov
dec
mov
push
dec
jo
gs
lea
stos
cs
add
imul
imul
filds
dec
xchg
and
out
jns
and
ret
mov
push
ret
mov
ret
ljmp
clc
fldl
into
lahf
or
fimuls
stos
icebp
shrb
shlb
lret
inc
mov
add
or
mov
into
push
mov
ljmp
ret
jge
out
loop
jle
popa
in
arpl
das
mov
dec
loopne
daa
add
pop
dec
add
out
ss
xchg
and
aas
mov
mov
jno
jbe
into
out
dec
add
sbb
lock
sarb
scas
push
jbe
lods
and
inc
jle
mov
mov
mov
mov
jg
push
lahf
xchg
adc
xor
lea
mov
dec
adc
and
cmp
or
arpl
rolb
pop
loope
xchg
and
mov
das
incb
add
popf
and
movsl
push
or
inc
push
cmp
jg
ret
inc
std
jle
imulb
cmp
mov
mov
into
shlb
insl
fistpl
or
enter
xor
loopne
fiadds
ret
int3
into
int3
jmp
xchg
cmp
sarl
out
fmulp
xor
shrl
fisttps
mov
mov
push
mov
mov
sub
ret
std
sarb
and
sbb
xor
jp
test
xorl
in
xorb
rcr
mov
cmpsl
inc
pop
aas
fsubs
xchg
into
and
mov
sub
repnz
clc
cli
cld
notb
adc
sbb
xor
mov
push
cmpsb
fs
pop
pop
cmpsl
push
jo
test
jp
fdivl
xchg
cmpsl
or
mov
mov
mov
iret
cmpsl
shl
jecxz
xlat
aad
out
icebp
add
std
idiv
sti
cmpsl
cmc
movups
and
adc
cmp
xor
pop
cmpsl
pop
pop
pop
push
jno
addl
xchg
cmpsl
mov
fwait
xchg
xchg
adc
les
ret
jae
push
mov
pop
jnp
std
push
push
ficompl
pop
mov
mov
mov
fiadds
jae
cmpsl
rolb
popa
xchg
shlb
push
adcl
jae
jno
pop
ret
aam
inc
push
fnstcw
inc
cmc
aas
sub
xchg
insl
jge
cmpsl
cmp
sub
insb
aaa
or
or
sbb
pop
notl
sub
int3
fistl
and
es
dec
mov
out
mov
push
stos
inc
lds
call
mov
cmp
ds
sub
scas
adc
aad
pop
lahf
cmpsl
out
mov
or
cmp
mov
pop
mov
push
pop
popf
into
inc
cmpsl
dec
filds
xchg
mov
xchg
adc
ljmp
jl
xor
cmc
xchg
pop
mov
out
mov
clc
sbb
cli
fbld
add
mov
shl
xor
mov
sbb
xchg
and
out
xchg
cmpsl
imul
pop
cli
jmp
bound
bound
push
enter
mov
xchg
cmpsl
cwtl
and
fisttpl
ja
add
rcll
das
mov
pop
inc
jl
and
std
ljmp
or
cmp
stos
pop
int3
in
xor
dec
shll
test
ja
or
push
shlb
in
lahf
mov
ror
adc
or
aas
push
sarl
mov
subl
into
push
inc
testl
and
pop
add
and
out
mov
cmp
rorl
cmpsl
xchg
into
inc
xchg
inc
mov
ljmp
inc
fwait
je
cmpsl
cmp
push
test
mov
fisttps
mov
pop
cmpsl
rolb
fsubrp
xorl
inc
cmpsl
loop
and
cli
xchg
pushf
inc
sbb
cwtl
add
cmpsl
pop
insl
xchg
lret
fistpl
fwait
daa
imul
push
push
cmpsl
add
cmpsl
sbb
mov
cmpsl
cmp
mov
adc
cmpsl
imul
cwtl
pusha
ljmp
and
testl
adc
lcall
test
mov
scas
cmc
add
int3
lods
xchg
mov
pop
sub
inc
cmpsb
xor
repnz
out
scas
mov
dec
sub
cmpsl
mov
out
ficoml
imul
in
lods
lcall
inc
mov
lea
rcl
or
out
jns
repz
xchg
lcall
scas
mov
mov
out
pusha
out
testb
cmp
push
repz
ss
jne
sub
stos
dec
cmpsl
sub
scas
mov
cmpsl
cmp
sub
out
nop
call
adcb
jne
das
es
adc
mov
and
push
jmp
pop
jb
inc
cmpsl
nop
sub
pop
jge
xchg
sub
jbe
sub
aad
cmpsl
sbb
cmp
in
leave
andl
xor
mov
lcall
popf
sarb
dec
and
mov
inc
jp
dec
rorl
repz
or
outsl
jno
out
out
push
add
scas
adc
je
test
xor
sub
rcrb
mov
int
aam
sbb
xorl
andb
leave
stc
dec
cmpsl
js
iret
jmp
and
cmpsl
mov
imul
repnz
out
aam
cmp
lret
rclb
daa
cmpsl
push
hlt
xchg
or
addr16
cmpsb
pop
icebp
dec
sub
in
clc
inc
decb
sub
mov
cmpsb
test
subl
xor
cmp
mov
mov
pop
pop
pusha
imul
aas
xor
cmpsl
mov
add
and
es
repz
pop
xchg
test
xchg
sub
adc
push
aad
insl
xchg
fsubrl
or
fsubr
aaa
cmpsb
dec
loop
mov
adc
xor
in
cmpsl
add
xchg
call
cmpl
gs
hlt
cmpsl
dec
lock
outsb
cmp
xorl
mov
iret
mov
push
or
scas
adc
call
sbb
cmpsb
xchg
outsl
fdivrl
xchg
pop
scas
sbb
sub
xchg
mov
cmpsb
popf
mov
pop
cmpsl
cs
rorb
sar
cmp
dec
add
cmp
pop
cmpsb
inc
inc
lock
enter
mov
mov
mov
dec
mov
xchg
dec
scas
xor
push
or
xchg
cmpsb
inc
mov
daa
pop
sti
mov
cmpsl
icebp
mul
mov
ret
mov
aam
and
outsl
cmpsl
enter
jnp
xchg
mov
or
push
cmpsl
xchg
jecxz
outsl
jb
pop
cmpsl
stc
dec
xchg
sub
lods
push
mov
inc
shlb
cmp
loope
xor
jbe
repnz
repz
stos
push
clc
jmp
lret
andl
test
lods
nop
and
fnstenv
push
outsb
cmp
cmpsl
or
pop
out
icebp
in
pop
cmpsl
aas
repnz
xchg
rolb
sbb
lahf
insl
push
inc
ret
and
xor
xchg
sbb
insb
gs
jg
daa
ror
out
cmp
pushf
adc
sbb
jle
lcall
in
adc
mov
jae
push
pop
mov
sbb
adc
enter
inc
pop
sbbl
mov
cmpsl
xchg
xchg
add
cmp
or
jnp
or
sbb
jno
xor
lea
mov
arpl
adc
fs
ret
push
nop
fnstenv
sahf
xchg
cmpsb
cmp
cmovg
push
cmpsl
pop
fsub
int3
and
mov
jle
inc
add
xchg
push
ja
pop
test
pop
and
pop
jae
movsb
jmp
cmpsb
ret
lds
push
jns
fistl
fwait
ret
scas
xchg
imul
adc
or
lret
cwtl
mov
cli
cmpsl
repz
outsb
jbe
andb
mov
add
adcl
adc
leave
cmp
in
add
sub
sub
xchg
sub
aas
mov
in
lods
into
xchg
dec
aaa
in
cmpsl
enter
cltd
sbb
sarl
fcoml
lahf
adc
cmpsl
push
int3
out
aad
push
dec
cmpsl
fnstsw
test
shrl
xchg
sbb
xchg
push
jmp
cmpsl
xchg
or
sbb
mov
popa
cmp
cmpsl
or
jg
idiv
cmpsb
shlb
sbb
mov
int3
mov
dec
and
rorl
enter
scas
addr16
cmpsl
inc
loope
nop
cwtl
rcll
dec
jmp
in
jae
test
inc
mov
or
in
cmpsl
setb
pop
cmp
cmpsl
jl
outsb
push
pop
inc
outsl
add
xor
test
addr16
mov
testl
push
add
arpl
out
push
loop
mov
adc
mov
out
cs
in
rcll
xchg
lret
int3
clc
lods
mov
das
int
addb
scas
lret
mov
rol
xchg
ret
mov
test
push
into
mov
cmpsb
stos
shl
sbb
sbb
or
daa
out
ss
mov
mov
je
xchg
subl
movsl
xchg
mov
inc
cmp
data16
movsl
je
fists
push
and
fwait
shlb
outsl
out
xor
clc
jae
sbb
repnz
inc
leave
mov
cmp
cmp
insb
pushl
in
add
mov
sub
mov
ja
pop
ss
in
mov
mov
mov
hlt
stos
mov
inc
inc
mov
mov
rclb
or
add
sub
and
mov
testb
pop
mov
adc
and
loopne
sbb
adc
mov
mov
into
insb
pushl
idivb
sahf
mov
hlt
stos
mov
push
mov
insl
lahf
add
std
and
cmp
insb
pushl
adc
mov
int3
sbb
push
mov
not
lods
sub
or
sbb
and
lock
rolb
mov
and
adc
shl
lahf
cltd
ret
cmp
xchg
test
in
idivb
ljmp
add
in
adc
out
das
and
in
ja
out
addb
fidivrs
add
int3
mov
inc
outsb
loop
sub
cmp
mov
fiaddl
add
inc
faddl
jo
mov
in
jb
xor
pusha
mov
repnz
xor
lock
lret
mov
jo
sbb
out
imul
sbb
inc
outsb
loop
sbb
inc
ljmp
inc
push
mov
scas
inc
in
jbe
jo
and
push
call
mov
cmpsl
xor
add
ds
mov
pop
ret
xchg
push
mov
push
ds
repnz
mov
roll
mov
push
mov
xor
dec
mov
cld
mov
or
daa
imul
fmuls
fcoml
xchg
and
cmpsl
scas
cli
test
dec
mov
out
inc
push
pushf
ret
cmpsl
jg
sbb
push
dec
xor
loope
imul
jbe
out
cmpsl
les
cmp
fcompl
into
push
xor
sbb
leave
jnp
repz
or
rcll
inc
sbb
cmpsl
jge
popf
push
add
ds
ljmp
outsl
js
jmp
xor
in
stos
cmpsl
scas
mov
shrl
orl
scas
pop
or
jp
in
movsb
mov
or
mov
mulb
cmp
lods
fwait
es
mov
nop
sub
ja
cmpsb
fwait
setb
sbb
mov
ds
int3
iret
mov
cmpsl
lea
push
sub
pop
cmpsl
xor
fldcw
cmpsl
fs
repnz
ja
jnp
cmpsl
test
je
ficoml
fs
dec
xor
int3
ss
sahf
cmpsl
cli
bound
sbb
frstor
add
outsl
mov
mov
js
jb
inc
dec
cmpsl
mov
pop
jge
cmp
push
inc
mov
cmpsl
sub
pop
sahf
cli
cmpsl
rep
jb
mov
insl
sarl
mov
popf
cmpsl
sub
and
sub
jae
mov
add
cmpsl
scas
mulb
mov
bound
pop
jg
int3
cmp
das
and
je
xor
mov
std
pop
aad
pop
int
mov
shll
outsb
in
or
lret
dec
lea
cmpsl
xchg
stos
out
sub
cmpsb
test
popa
jmp
sbbl
mov
xlat
cmpsl
push
and
mov
mov
sbb
mov
cmp
stos
shlb
inc
lds
push
mov
in
mov
test
fmull
mov
dec
and
mov
lret
fmul
shr
outsl
add
ret
jne
data16
jo
std
pop
out
loopne
adc
cmp
outsl
push
xchg
jo
or
rcrb
jge
add
dec
in
mov
imul
push
mov
mov
loope
stos
iret
push
lock
adc
adc
mov
sarb
shr
jecxz
xor
imul
loopne
cmp
pusha
add
mov
loope
add
push
xor
sub
out
cmpsb
add
movsb
scas
in
fwait
psubsw
add
dec
fwait
mov
sbb
movsl
cmpsl
cli
mov
mov
mov
lea
xor
sar
ljmp
dec
test
mov
xchg
push
sub
test
sbb
inc
dec
dec
loop
dec
cs
sub
pop
xor
add
ja
dec
scas
jbe
rorl
loopne
andl
add
inc
out
sti
cmp
jmp
sub
add
sub
mov
add
shr
int
push
add
pop
cltd
or
pusha
outsl
popa
mov
cmp
sub
and
sub
push
cmp
inc
sbb
out
orl
loop
das
test
mov
shll
mov
fucom
je
adc
sub
loope
ljmp
mov
lahf
and
lock
adc
pop
cmp
adc
or
gs
call
and
es
lret
mov
or
rcll
cmp
aam
in
dec
add
mov
bswap
sti
ja
in
mov
lret
out
push
jb
push
inc
ds
jg
add
mov
into
sbb
add
pop
imul
push
bound
add
sub
mov
imul
arpl
xor
pop
imul
rorl
negb
ret
stos
jge
popf
jb
or
mov
imul
lds
je
clc
lds
aam
mov
pop
fsubl
add
sbb
mov
mov
lds
adc
or
pop
cld
cmpb
pop
ja
call
cli
ljmp
pop
inc
outsb
cli
rol
adc
mov
and
test
xor
out
leave
arpl
ds
inc
sub
jae
test
xchg
push
out
fwait
imul
int
mov
divb
ror
inc
xchg
pop
lahf
dec
insb
das
push
clc
pop
pop
scas
xor
daa
add
xchg
push
mov
inc
sbb
loop
rcl
sub
pop
fwait
daa
call
push
pop
mov
rcrb
sub
loope
cmp
pop
mov
dec
mov
push
jbe
mov
shrl
sub
pop
gs
movsb
mov
dec
subl
adc
mov
jg
sbb
pop
jg
xchg
push
movb
pop
or
inc
je
cmpsl
sub
mov
jg
clc
xor
add
cmpsb
fisubl
in
dec
loop
add
rcll
xor
out
mov
or
lock
push
scas
inc
mov
pop
cmpsb
mov
xor
sbb
sahf
mov
cmc
add
arpl
mov
stos
pop
push
mov
jle
bound
mov
pop
bound
js
xor
cmp
pop
xor
jbe
sarl
push
subb
sbb
mov
pop
lahf
mov
incb
cmp
or
jmp
loop
lcall
cmpsl
inc
shlb
pop
cltd
xor
mov
push
rclb
sub
loop
sbb
add
into
mov
pop
xchg
dec
add
dec
fdivp
dec
stos
incl
sub
rolb
push
call
or
sbb
rcrb
int3
js
sbb
add
mov
ljmp
cmpsb
jns
add
dec
sub
cmpl
jp
ss
test
sbb
in
in
pop
inc
sub
imul
cmp
sar
mov
out
movsl
or
loop
bswap
jg
or
stos
shlb
or
inc
xchg
pop
sbb
loop
sub
aaa
jne
fidivl
jmp
incl
mov
xchg
rcrl
cs
push
out
or
adc
pop
xor
inc
adc
xchg
mov
test
arpl
leave
jb
and
andl
mov
and
rclb
or
stc
incb
test
jb
subl
lcall
mov
pop
roll
data16
and
sub
js
dec
filds
decb
dec
mov
cld
push
in
shl
dec
scas
cmpsb
add
std
dec
ss
cmpsb
pop
mov
insl
jno
push
cmp
inc
and
push
addb
stc
rcrl
test
pop
xchg
jmp
sub
aam
mov
fldenv
pop
and
popa
adc
pop
test
scas
mov
or
jg
mov
repz
xchg
icebp
mov
pop
jo
xor
adc
mov
aam
loop
pop
lret
adc
loope
mov
rcl
lods
ds
sub
pop
loop
shlb
mov
xor
je
lea
add
rcr
lock
fcmovbe
jo
jnp
push
fcompl
cld
sarb
mov
adc
jo
arpl
stc
push
or
sahf
mov
loopne
xchg
mov
sbb
cmp
cmp
jecxz
sub
fidivs
clc
push
dec
push
out
xchg
es
mov
shrb
and
mov
loopne
mov
into
imul
aad
sub
xor
es
pop
das
sahf
movsl
cmp
lock
shlb
loop
push
ss
sbb
sbb
push
sbb
mov
push
ret
sbb
and
add
es
arpl
mov
pop
sbb
out
push
sbb
mov
push
test
gs
pop
scas
mov
adc
outsb
pop
sti
pop
ljmp
mov
sarb
pop
dec
cmc
and
mov
mov
std
pushf
pop
je
xchg
pop
sbb
mov
pop
ret
ljmp
in
jo
sbb
pop
add
jno
fdivrs
paddusb
gs
pop
insl
cwtl
fcmovbe
cmc
out
gs
outsl
scas
or
cld
lods
inc
cmc
jne
mov
ss
sbb
mov
icebp
add
lret
mov
aaa
push
dec
adc
pop
add
rolb
cmc
push
daa
cmp
mov
ds
aam
and
aam
enter
push
test
dec
shrl
mov
test
xor
push
sbb
int
js
xor
shlb
dec
push
lds
cmp
inc
popa
loope
sarl
inc
cmp
fldt
adc
loope
in
dec
sarb
int
shlb
lds
je
in
push
or
xor
push
clc
enter
push
enter
push
push
fisttpll
test
push
inc
loope
adc
addr16
mov
ds
xor
push
int3
lds
pop
mov
add
in
nop
adc
sub
cli
cmc
add
test
andb
sti
xchg
xor
sahf
sub
and
std
pushf
xor
cs
inc
or
xchg
add
pop
inc
lods
ja
mov
cmpsl
lods
add
pop
loope
cmc
cmpsl
cmp
pushl
sbb
and
xor
jle
dec
lret
adc
inc
xor
test
fldt
mov
xor
mov
xor
jae
shrl
pop
imul
xorb
out
adc
cmp
arpl
decl
push
in
in
cmpsl
scas
jp
mov
inc
jae
jl
repz
pop
js
xor
xor
sub
mov
or
shrl
mov
xor
fwait
ud2
testb
jle
push
jp
into
addr16
xchg
js
icebp
mov
adc
lcall
std
push
out
cmp
mov
sub
fwait
xchg
mov
ljmp
mov
sbb
cmp
pushf
inc
sub
adc
iret
out
jle
lods
rorb
xchg
movsb
lcall
mov
ss
cmpsb
test
out
hlt
cmpsl
out
dec
pop
lods
dec
scas
inc
mov
repnz
les
xchg
jb
ja
jmp
mov
mov
jno
je
imul
outsb
ds
ljmp
dec
in
test
int3
cmp
or
fisubrs
push
pop
sahf
mov
pushf
adc
dec
fs
xor
cmpsl
mov
fiaddl
jg
push
cmpsl
in
push
adc
in
adc
lods
cwtl
xchg
pop
and
das
mov
cmp
xor
rclb
aaa
in
jb
sbb
popa
cmpsl
mov
push
push
cs
es
fdivl
jg
repnz
out
aaa
insb
inc
imul
addl
dec
inc
addr16
es
imul
cmpsl
mov
mov
scas
push
cmpsl
cmp
push
lds
stos
adc
test
xor
mov
inc
repnz
cmpsl
mov
bound
insb
ja
cmpsl
push
sbb
push
shlb
mov
push
adc
sbbl
xor
mov
cmpsl
dec
rolb
bnd
movsb
stc
aas
int3
js
xchg
stos
out
mov
dec
repnz
or
cs
mov
decb
cmpsl
jne
sbb
lock
call
in
and
xor
insb
je
dec
pop
xchg
call
cmp
and
or
outsl
jno
and
mov
mov
or
xchg
or
icebp
jne
inc
mov
fidivs
sub
mov
sub
sub
cmpsl
mov
xchg
cmpsl
add
push
xor
icebp
push
sbb
jne
add
pop
ret
mov
adc
aas
cmp
test
inc
icebp
cmpsl
fnstenv
fsubrs
sti
xchg
repz
orl
nop
cmpsl
add
xor
aaa
shl
mov
lahf
test
hlt
cmpb
pop
in
cmp
dec
scas
cmpsl
xor
pop
mov
std
fdivrl
pop
or
out
or
cmp
bound
inc
and
shll
aad
sub
je
pop
inc
data16
push
push
pushf
ss
cmpsl
mov
les
sahf
nop
cltd
sub
xor
xchg
rorb
ficoml
pop
cmpsl
xlat
loope
jl
jns
xor
nop
int
test
push
int3
xchg
bound
popa
add
and
or
mov
je
cld
int3
out
jmp
into
mov
les
mov
xchg
mov
push
or
cmp
int3
xchg
nop
es
clc
testb
loopne
test
and
movsb
adc
sbb
enter
decb
jge
add
jmp
add
mov
out
cs
sub
dec
pop
push
in
fimull
sub
dec
pop
negb
lods
push
insb
sub
test
sar
clc
inc
mov
leave
inc
pop
stos
xor
dec
xchg
inc
fldl
mov
add
ss
test
xor
jb
mov
mov
pushl
dec
jle
mov
loopne
add
test
mov
dec
imul
push
mov
loopne
mov
push
ja
add
or
and
pop
repz
ds
fidivs
scas
xchg
inc
mov
sub
jae
inc
xor
ret
push
pop
scas
sub
mov
lret
ja
std
and
xchg
das
xor
test
mov
ds
mov
lods
mov
out
in
pop
aam
push
xlat
jo
ds
mov
scas
push
xor
js
add
daa
mov
jle
xor
sarb
scas
daa
mov
test
lods
mov
mov
scas
cmp
ds
sub
mov
cld
push
out
callw
xchg
daa
lcall
push
sbb
aam
add
sub
lahf
lods
pop
aaa
jmp
cmp
loopne
out
xchg
ret
mov
shll
mov
aad
xchg
fdivl
add
dec
movsl
dec
add
mov
aaa
sbb
cwtl
pop
scas
xchg
imul
test
leave
xchg
jp
rorb
push
cmpsb
xor
es
das
ss
mov
pushf
add
sbb
add
iret
call
mov
push
mov
movsl
lods
cmp
subb
mov
cltd
in
and
push
test
xchg
notb
sbb
pop
push
pop
int
loopne
imul
sbbb
xchg
mov
cmp
mov
lock
inc
out
adc
mov
mov
movsl
jge
adc
imul
addl
xor
lock
mov
mov
stos
into
adc
add
mov
pop
loopne
dec
sarb
ret
cltd
cmp
imul
cmc
lods
aam
cmp
and
cmpsl
arpl
stos
faddp
or
push
lea
enter
test
cmpsl
lcall
lret
and
and
xchg
shll
xor
mov
sub
xchg
cmp
ss
mov
sub
xchg
stos
enter
cmpsl
lret
cmp
jns
push
js
cli
xchg
rcrl
psllw
jb
ret
stc
adc
and
and
and
shrl
lret
dec
mov
stos
mov
repnz
cmpsb
cmp
xchg
jae
loope
cs
adc
dec
sti
imul
hlt
std
cmpsl
cmp
imul
ljmp
into
sub
insl
hlt
jge
xor
repnz
repz
icebp
mov
or
mov
jnp
lds
ss
cmpsl
dec
mov
push
adc
movsb
aaa
sbb
into
cmpsl
lods
in
xchg
cmp
popa
fs
test
push
mov
sbb
xor
cmpsb
aaa
shl
cmp
cmpsl
sbb
hlt
cmp
loope
xor
pop
dec
aad
adc
pushf
xchg
dec
dec
fldl2e
add
dec
pop
xchg
adc
xchg
out
lret
push
xor
xchg
mov
push
sahf
mov
repnz
dec
mov
js
in
clc
fists
cmpsl
stc
fidivrl
int
adc
hlt
imul
lahf
ljmp
dec
cmc
xchg
mov
dec
cmpsl
pusha
imul
cmpsl
fwait
rcll
sbbb
cmpsl
fstps
mov
repz
sub
clc
mov
mov
imul
ret
lods
sub
cltd
or
mov
jno
out
aaa
xlat
mov
and
lea
inc
cmpsb
push
push
pop
cmpsb
lret
in
lds
pusha
cmp
cmpsl
xorl
xchg
cmpsl
jecxz
lods
loopne
mov
out
sub
ret
ret
mov
les
cmp
sub
shl
int
cmpsl
cmp
xor
outsl
inc
fwait
and
adcb
mov
jae
negl
icebp
roll
cmpsl
mov
daa
js
xchg
push
cmp
rcll
scas
xor
pop
jb
jmp
ss
cmpsl
pop
sahf
dec
push
aas
lahf
lret
cs
cmp
cld
mov
daa
jmp
jnp
xchg
imul
dec
leave
jo
sahf
test
lcall
aaa
mov
sub
test
cli
or
cmpsl
call
fyl2x
lea
cmpsl
stc
dec
xor
jae
dec
add
outsb
cmp
xchg
outsl
or
cmpsl
push
loop
pop
fists
fs
lret
lock
ja
jecxz
leave
push
push
sub
cmpsl
lods
jle
dec
stos
in
sub
mov
dec
xor
push
addb
adc
stos
cmpsl
jb
pop
dec
scas
xor
cmpsl
and
mov
rcrl
lods
cmp
insb
mov
ja
loopne
lret
rcrl
in
mov
jno
aad
and
dec
cmpsb
mov
add
or
es
pop
movsb
mov
dec
xor
ljmp
ss
jg
xor
addr16
cmpsb
mov
insb
mov
mov
sub
leave
icebp
stos
data16
sub
mov
jae
data16
mov
scas
dec
cmc
sub
imul
xchg
ljmp
mov
dec
lock
test
in
push
mov
cmpsl
in
adc
mov
aas
sarb
movl
hlt
gs
sahf
xchg
out
cmpsl
add
fildll
gs
add
nop
lea
jns
pushf
les
ret
jecxz
add
fbstp
stos
pop
xchg
xchg
cmpsl
aaa
jmp
sahf
daa
inc
inc
xor
inc
clc
adcl
xchg
arpl
jb
mov
or
sbb
adc
std
testb
cmpsl
xchg
mov
mov
imul
xchg
sbb
rcrl
outsl
adc
bound
pop
jp
cmpsl
sbb
mov
sub
fnstcw
pushf
add
pop
mov
iret
pop
xchg
push
add
lds
jp
cmpsl
lods
imul
cmpsl
sub
mov
cs
add
outsb
lea
cwtl
test
jbe
mov
push
xchg
adcl
adc
rcll
xchg
xchg
mov
sbbl
in
fs
test
push
in
nop
cli
lods
es
data16
cmpsl
aam
cmp
mul
jge
shrl
push
fwait
movsb
test
jae
insb
int
push
cmpsl
mov
repnz
std
je
cmpsl
dec
xor
cmp
jns
push
adc
pop
sbb
pop
cmpsb
cwtl
mov
mov
cmc
cmp
bound
std
xchg
cmpsb
imul
jb
mov
mov
loope
push
push
stos
jnp
pop
cmpsl
xor
imul
cmpsl
sbb
dec
mov
std
mov
movsb
cmp
cs
cmpsl
or
out
jnp
cs
int
push
in
fsubrs
xor
sub
pop
es
xchg
sub
fbld
out
fistpl
je
push
mov
push
out
stos
test
jl
lcall
jmp
shrl
push
cwtl
lahf
repz
lods
cmp
popf
shlb
pop
xchg
cmpsl
mov
mov
insl
outsl
addr16
xchg
xchg
out
mov
cmpsl
xor
dec
cmp
out
leave
std
inc
mov
ret
in
add
jbe
cmpsl
sbb
xchg
add
xchg
fistl
lods
xchg
mov
mov
mov
pop
cmpsl
cld
jno
iret
push
jge
cmpsl
popa
dec
adc
fwait
cmp
mov
aas
imul
or
cmpsl
xchg
icebp
popf
cmp
fisubrl
jo
cmpsb
dec
or
incl
xchg
adcb
int3
sub
pusha
fildl
cmpsl
cmp
in
aaa
ss
ret
negl
push
add
stos
repnz
sti
xchg
jae
mov
sub
lahf
sbb
mov
flds
add
lret
inc
mov
pop
jmp
popa
add
cmp
mov
rolb
sbb
lods
adc
xor
mov
push
cmp
jbe
stos
inc
or
ja
adc
sarl
cmp
push
sbb
enter
and
into
xor
dec
ja
call
lea
pop
out
mov
hlt
mov
or
cmpl
pop
cmpsb
mov
es
rclb
lret
lea
rcrl
imul
mov
int3
cld
cmpsb
xor
daa
jecxz
cmpsl
sbb
mov
fistpll
xchg
xor
mov
inc
adc
or
jmp
adc
mulb
pop
std
jne
adc
cmpsl
sbb
jo
loopne
jb
push
push
test
xchg
jle
mov
addr16
out
sub
xor
sbb
jge
ds
cmp
jmp
stos
or
cmp
shrl
mov
dec
mov
aas
out
cmp
or
adc
mov
xchg
addr16
in
roll
pop
ja
je
mov
jecxz
adc
test
sbb
es
inc
sub
mov
pop
jmp
sub
fmull
push
xor
jne
jno
sbb
popf
add
and
stos
fs
adc
insb
xchg
cmpsl
test
sub
inc
or
sub
inc
mov
mov
aam
dec
push
dec
leave
inc
cli
inc
cmpsl
js
call
push
cmpsl
pop
sbb
scas
lods
mov
jns
cltd
cmpsl
xchg
stos
loop
lahf
test
jo
jbe
push
stc
xchg
pop
add
cmp
adc
mov
je
and
cmpsl
mov
int3
out
mov
cmpsl
fstpt
cmpsl
scas
fs
mov
adc
mov
sbb
cmpsl
xchg
pop
icebp
push
daa
fcmovnu
out
rorb
mov
call
jecxz
out
xchg
cmpsl
xchg
enter
mov
xchg
inc
in
cmpsl
sbb
cs
or
bound
xchg
cmpsl
shll
pop
call
sti
cmpsl
js
pop
push
out
jnp
cmpsl
ss
add
inc
inc
add
mov
push
xor
xchg
sub
add
gs
pop
das
stc
push
mov
or
nop
js
cmpsl
mov
pop
aam
scas
shrb
cmp
cmpsl
das
jge
mov
jle
sbb
into
cmpsl
xchg
sbb
sbb
cwtl
mov
aaa
repnz
mov
cmpsl
push
xchg
jae
mov
xlat
push
call
div
xchg
stc
mov
stos
xor
adcl
xchg
cmpsl
sbb
jb
sbb
repnz
movsb
cmp
popa
push
cltd
cmp
or
sarl
daa
pusha
int
jnp
lods
dec
cmpsl
push
scas
cmc
inc
cmp
into
xchg
push
inc
jmp
sub
xchg
iret
scas
cmpsl
cmp
xchg
repnz
pop
dec
adc
ljmp
das
ljmp
loope
cmc
ds
mov
cmpsb
sbbl
jmp
lods
pop
add
xchg
repnz
call
mov
xchg
daa
cltd
les
mov
push
lcall
push
mov
and
mov
xor
cli
cmpsl
cmc
sahf
jmp
dec
xorl
xchg
fwait
mov
insb
insl
mov
cld
mov
in
and
divb
xlat
testl
cmp
call
or
pop
mov
mov
pop
inc
xchg
fcmove
popa
jbe
xchg
and
in
repz
or
dec
adc
xlat
fbld
push
mov
inc
cmpsl
lods
mov
or
cmpsl
test
pop
rorl
adc
jnp
out
mov
fbstp
aam
pop
jae
das
mov
mov
mov
fldt
sub
lods
cmpsl
enter
sbb
out
cmpsl
pop
cmp
dec
ljmp
and
ret
lret
jne
cmpsb
icebp
xor
cld
mov
cmpsl
push
cs
fmul
test
xchg
xchg
cmpsl
js
xlat
cwtl
andl
test
clc
and
das
push
mov
dec
mov
lret
mov
push
stos
push
mov
push
adc
lret
cmp
cmpsl
jae
mov
cmpsl
jb
pop
xchg
sbb
cmpsb
mov
adc
jg
sbbb
stos
lock
or
testl
xor
xlat
in
pop
xor
jnp
cmpsl
iret
push
jge
in
jb
mov
jle
mov
dec
push
cmp
insl
sahf
in
out
out
lea
xor
hlt
or
mov
cltd
pop
cmpsl
lods
mov
les
cmp
fs
and
cmpsl
mov
pop
rolb
push
jno
xchg
xor
add
jnp
dec
adc
icebp
rcll
push
imul
adc
loopne
repnz
lret
shlb
push
adc
enter
mov
dec
arpl
xor
cmpsl
jb
pop
add
sbbb
push
fistpll
int3
cmp
push
loope
cmpsl
cs
sbb
jae
arpl
and
jle
or
sbb
mov
dec
cmpsl
mov
and
xchg
shll
mov
shlb
xchg
xor
lods
addb
pop
sub
dec
pop
andl
shll
sbb
or
and
movsb
jnp
int
mov
mov
je
push
jmp
mov
adc
in
sbb
sub
push
data16
cmpsl
xor
cmp
cmpsl
dec
in
sbb
sub
push
call
jne
sarb
aaa
loopne
sti
in
enter
sbb
call
and
pop
cltd
out
inc
je
sub
in
mov
lods
and
mov
sbb
into
adc
stos
mov
cmpsl
sub
insl
aas
cmpsl
sub
rorl
add
pop
pusha
push
cmpsb
aam
nop
inc
cmpsl
fwait
and
outsb
jno
fstpl
xor
popa
cmpsb
dec
inc
ss
push
nop
fisubs
paddd
pop
cmpsl
rorb
loop
clc
test
sub
lret
mov
ljmp
push
cmpsl
jecxz
and
mov
loope
ss
pushf
aad
push
pop
add
ret
cs
sbb
and
rclb
sbb
lcall
xchg
ret
xor
push
into
lock
ret
fbstp
iret
lret
loop
adc
in
fwait
or
lods
ret
and
stos
dec
and
aas
cwtl
cmpsl
add
mov
insb
xchg
mov
pop
inc
mov
cmpsl
lds
and
rolb
cmpsl
loope
scas
and
cmpsl
mov
pop
xchg
imul
lahf
cmpsl
int3
bound
and
fnstenv
sbb
rcr
pop
fs
dec
push
push
lods
ds
loopne
in
dec
dec
dec
es
pop
jne
pop
adc
scas
xchg
fs
or
xchg
nop
mov
dec
ror
aaa
pop
xchg
pop
aam
hlt
std
fbld
push
orb
mov
sub
out
lret
mov
inc
and
fdivl
into
stos
add
popa
mov
call
cmp
outsl
push
lret
test
sub
cmpsl
ret
sbb
mov
mov
fwait
cmpsl
pusha
cmp
sbb
mov
movsb
in
test
add
pop
cmpsl
subl
pop
rcrl
jg
mov
jb
into
lea
cmp
add
outsb
xor
shl
and
ret
jecxz
test
mov
push
xor
cmp
cmpsl
lcall
or
cmp
test
ficoms
inc
pop
jo
add
mov
rcl
adc
inc
jecxz
scas
cmpsl
leave
mov
addr16
mov
lods
int3
mov
pop
jmp
xchg
xchg
jmp
data16
enter
cld
in
addr16
inc
xchg
mov
test
mov
mov
pop
or
test
into
cmpsl
mov
and
jns
pop
cmp
mov
xor
in
loop
cmpsl
xchg
data16
out
ljmp
notl
fmulp
adc
mov
and
inc
cmpsl
ss
pop
in
push
cmp
lods
dec
cmpsl
mov
mov
das
cmpsl
stc
stos
pop
jb
iret
lret
sub
cli
mov
addl
adc
push
cld
mov
repz
shll
jae
cmpsl
into
and
out
or
jp
pushf
mov
and
dec
inc
jo
rorb
xor
or
lret
fisubrl
jle
ds
add
and
fidivl
cmpsl
test
lea
cmpsl
dec
push
test
push
ljmp
mov
cmpsb
ljmp
cli
mov
xchg
jg
mov
ljmp
shrl
cmpsl
popf
jbe
xchg
xor
fidivl
cmpsl
sbb
push
pop
pop
cmpsl
mov
nop
add
leave
int3
jle
or
cmpsb
popf
call
jmp
ja
in
cmp
cmpsl
test
pop
mov
je
xchg
jnp
gs
push
cmp
or
sbb
jmp
jg
jns
xchg
lock
cmpsl
fcmovu
lods
sbb
add
mov
aas
mov
incl
sbb
lds
dec
vcvtdq2pd
adc
daa
cltd
rcrl
ljmp
andl
lock
pusha
cld
ret
insl
shlb
ljmp
mov
fsubrs
mov
fildll
frstor
xchg
jmp
mov
cmpsb
dec
in
mov
push
jno
cmpsb
or
sub
cmp
pusha
call
jns
cmp
mov
inc
pushf
inc
scas
push
inc
mov
xchg
les
mov
and
mov
xchg
bound
inc
push
ljmp
xchg
or
and
je
fs
push
sti
push
cmpsl
or
inc
arpl
sub
stos
push
lret
cmpsl
ss
mov
xor
push
cmpsl
arpl
xchg
in
loopne
cmpsl
pop
insl
xor
lcall
jp
aaa
xchg
cmpsl
push
inc
ds
inc
in
insl
pushf
lret
cmpsl
xchg
pop
mov
cmpsl
fwait
repnz
stos
mov
sbb
mov
ds
mov
cmpsl
loope
repnz
dec
ficomps
das
mov
outsl
lcall
fs
shr
lods
insb
push
inc
jmp
jg
roll
les
mov
cmp
sbb
test
or
je
push
cmpsl
sti
dec
pop
imull
sub
cmpsl
ds
push
mov
jl
imul
repnz
sti
in
stc
cmp
add
cmc
rcrb
sub
and
sub
xor
sub
sub
imul
movb
sub
inc
int3
insb
idivb
sub
incl
cs
pop
ljmp
cmp
or
inc
and
xor
and
cmp
jg
inc
lret
clc
xor
ja
in
mov
push
mov
mov
mov
and
push
xchg
sbbl
jae
sbbb
inc
roll
jle
in
stos
sarl
scas
loop
je
pop
insb
cs
sub
mov
andl
or
clc
add
push
int3
movsl
or
xchg
int3
xor
aam
or
fwait
pop
out
out
add
in
out
stos
je
xchg
repnz
dec
add
ret
cmp
cmpsl
dec
jae
popf
cmpsl
inc
sbb
add
sub
or
cld
push
sti
pop
imul
test
mov
ret
sbb
xor
sbb
sbb
shl
jb
daa
sbb
add
insb
pop
movsb
es
xchg
ficompl
or
push
xor
sahf
into
test
cmc
add
add
loopne
adc
jo
cmpsb
sbb
mov
ret
lret
or
push
push
cmpsl
dec
test
adc
xor
addr16
outsl
push
cmp
aam
pop
int
mov
jmp
adc
das
xchg
clc
pop
sar
fsubs
cmp
test
cmpsl
inc
lea
pop
std
pop
sbb
clc
mov
sarb
pop
js
dec
inc
sbb
push
in
test
inc
sbb
into
pop
dec
xor
push
fistpl
gs
inc
push
jmp
push
pop
into
scas
sub
fisttpl
jo
or
xlat
imul
loop
test
jb
ret
adc
add
sub
xor
mov
pop
xor
dec
sti
test
clc
mov
pop
shlb
jge
mov
hlt
xchg
adc
mov
and
adc
add
arpl
xchg
push
into
pop
loopne
shlb
adc
sarl
push
jb
std
or
push
imul
mov
imul
aam
mov
pop
add
mov
add
andl
rolb
fldenv
out
mov
stos
push
push
xchg
lret
inc
mov
stos
out
mov
aaa
push
in
bnd
ss
cld
pop
xlat
repnz
mov
mov
mov
cmp
pop
pop
mov
sub
jae
pop
cmp
dec
mov
xchg
and
rcl
pusha
and
pop
sbb
mov
es
cmp
in
mov
mov
fsubl
inc
out
cmp
gs
inc
inc
lea
and
fidivl
push
fisubrl
or
jg
adc
pop
push
xchg
rcr
fcmove
jnp
fldenv
fsub
mov
mov
je
lret
out
jmp
push
daa
push
xor
lock
inc
jnp
cmp
loopne
lret
and
ljmp
mov
ror
add
dec
faddl
dec
sbb
lret
mov
pop
mov
loop
ljmp
sub
loop
cwtl
fs
loopne
push
inc
xchg
mov
aaa
mov
ret
iret
leave
fisttpll
mov
jbe
xor
cmp
xor
mov
int3
add
jg
sub
mov
dec
inc
mov
int3
scas
mov
lds
hlt
cmp
sub
ja
mov
cs
fsubrl
pushf
push
pop
cmp
cmp
nop
lock
mov
xchg
aaa
mov
loopne
xor
adc
inc
mov
mov
cmp
jbe
int3
adc
mov
mov
mov
mov
mov
repnz
pushf
push
mov
jge
add
call
js
inc
fcmovb
std
jbe
and
dec
adc
cmp
lret
loop,pn
outsl
cmpsb
jns
mov
pop
je
mov
outsl
add
popa
mov
mov
pop
out
mov
add
scas
and
cmp
mov
cmp
push
jle
idivb
addr16
and
mov
dec
jns
jnp
pusha
les
fisubrs
clc
ficomps
or
int3
mov
and
fisttpll
inc
enter
mov
js
adc
mov
loop
or
mov
ds
add
negb
outsb
lods
xchg
ss
mov
sub
pop
mov
pop
pop
cmpsb
xor
andl
push
fwait
cmp
dec
jae
inc
sub
cs
push
in
xchg
inc
inc
sbb
xor
jb
push
ret
call
lret
sbb
lahf
cmpl
fadds
dec
lods
imul
scas
cmp
sbb
imul
popa
in
shll
out
test
cmp
into
mov
sbb
std
xchg
sysexit
adc
xchg
in
push
push
xorl
dec
sahf
dec
jns
loopne
ret
add
sbb
leave
inc
addb
loopne
add
test
inc
cld
pop
outsl
add
push
xor
daa
pop
scas
fnstcw
inc
sti
inc
push
mov
outsl
mov
shlb
in
in
adcl
cmp
scas
inc
pushl
push
and
push
cmp
adc
xchg
sub
cmpsl
or
xor
push
xor
rol
in
adc
cs
xchg
push
pop
gs
je
ljmp
bound
push
inc
xor
pusha
adc
add
ljmp
into
push
mov
rcrb
ret
mov
add
aaa
lds
ss
mov
insb
or
fdivp
cmc
into
pop
xor
out
bound
add
and
or
shlb
das
es
push
cli
aaa
jg
and
add
mov
inc
dec
cmp
adc
dec
sbb
mov
imul
mov
repnz
movsb
pop
mov
xor
repnz
lods
call
fcompl
je
dec
jp
imulb
jne
jecxz
sti
cmp
sub
sbb
mov
sti
pop
jnp
pop
mov
imul
ret
leave
fadd
cmp
imul
stos
jle
or
sbb
dec
xchg
loopne
or
cld
pop
fmulp
xlat
cmp
mov
mov
enter
dec
mov
add
push
jae
aaa
enter
insl
xor
dec
and
loop
lea
push
inc
push
loopne
ds
es
lock
cmp
mov
addr16
cmpsl
imul
push
sbb
push
es
aaa
test
mull
stc
std
cmp
shrl
stos
mov
popa
sub
cmpsl
loope
lcall
or
cli
repz
mov
ljmp
imul
pusha
mov
lods
adc
pop
pop
or
dec
cmpsl
aaa
scas
mov
xchg
mov
mov
out
sub
iret
cmpsl
sar
add
pop
fwait
push
andl
cmpsl
movsb
cmc
addr16
jno
out
mov
cmp
popf
add
cmpsl
shll
jae
push
in
cs
adc
fwait
cmpsb
daa
xchg
pop
insl
aas
and
cmpsl
ja
repnz
adc
mov
add
cmp
dec
mov
mov
cmpsb
mov
ficoms
pop
aas
fnsave
test
xor
pop
xchg
xchg
mov
or
aam
cmpsl
push
int3
push
mov
aad
mov
dec
stos
or
repz
sub
cmpsb
cli
out
js
cmpsl
mov
xchg
lds
sbb
or
adc
addr16
fisubs
movsb
sti
out
xor
push
mov
adc
sub
xchg
int
movsl
and
mov
ljmp
arpl
mov
ja
andl
sbbl
mov
sti
dec
cmc
cmpsl
dec
scas
lock
addr16
pop
scas
mov
dec
inc
lret
mov
shl
add
imul
jp
out
repz
rcrl
xchg
mov
loope
cmp
push
sub
push
ja
test
mov
test
int3
gs
fldt
jnp
mov
or
loopne
jg
aad
mov
push
dec
shrl
mov
cmpsl
dec
mov
push
pop
adc
inc
mov
imul
dec
scas
ror
inc
sbb
ja
out
inc
outsl
jmp
dec
xchg
lret
lret
adc
jns
ds
adc
call
fsubr
subb
inc
ljmp
pop
dec
out
sub
and
jbe
pop
sahf
addl
movsb
jge
cmp
inc
mov
sbb
cmp
mov
push
push
loopne
popa
data16
shlb
ret
mov
lea
jae
rcll
xchg
cltd
dec
lret
sar
sub
dec
stos
push
lcall
mov
enter
lret
leave
mov
push
lret
cmp
add
and
mov
test
jnp
ds
dec
shlb
push
xchg
push
icebp
and
loopne
cmp
xor
jl
mov
push
sti
pop
pop
fimull
data16
push
cld
sbb
pop
push
iret
nop
ss
jnp
xchg
loop
or
and
sbb
jo
or
sbb
add
lods
test
subl
into
add
dec
sbb
in
xchg
sub
adc
lahf
mov
add
std
repnz
and
dec
fldl
inc
sarl
sub
andb
loop
push
push
in
add
fld
gs
push
sbb
call
lret
mov
fmulp
dec
add
ljmp
hlt
inc
cltd
push
mov
mov
sbb
push
mov
pop
mov
xor
stos
rclb
fs
push
mov
jmp
repz
gs
or
das
aad
sbb
jp
push
mov
push
jl
mov
out
pcmpeqd
rcl
dec
js
mov
iret
xchg
mov
test
xor
lret
and
out
xlat
mov
or
icebp
sti
imul
fs
xlat
subb
mov
xlat
mov
loop
out
je
insl
and
sub
push
ds
cmpsb
pop
mov
imul
sbb
cltd
pop
cmpsl
lret
aam
adc
cmpsl
fwait
mov
jbe
in
jo
out
es
notb
aad
out
sar
cmpsl
fcomps
cmpsl
xchg
fwait
sbb
cmpsl
imul
xor
sub
add
or
sbb
sub
lret
mov
and
cld
shrl
sbb
and
mov
rcll
std
dec
lcall
inc
ss
or
js
cmpsl
int3
in
or
xchg
cmpsl
push
add
sbb
test
movsb
pop
in
jb
cmpsl
pushf
scas
lret
xchg
orl
pop
cmpsl
cmp
enter
icebp
lret
add
push
add
repnz
mov
out
cmpsb
stc
and
xchg
mov
and
call
xchg
mov
dec
test
es
and
rol
push
or
ror
lds
push
sub
pcmpeqd
lea
mov
or
ljmp
dec
stos
mov
fmul
movsl
adc
mov
xchg
cmpsl
nop
in
sahf
cmp
mov
test
loop
out
int3
pop
pop
addr16
add
test
aam
pushf
das
in
inc
sbb
mov
dec
cli
popa
fisubl
sbb
cmpsl
test
mov
cmpsl
lods
adc
dec
in
pop
adc
sbb
push
sub
xchg
push
sub
push
xchg
fnstsw
sub
outsl
push
mov
out
leave
std
cmp
push
addb
idivb
inc
rol
jl
jle
sub
xchg
popf
dec
int3
sub
pop
add
test
mov
js
mov
push
subl
ja
cmp
cmpsl
xchg
movsb
popa
lret
dec
sbb
cmpsl
or
push
xchg
push
cld
mov
mov
cmpsl
stos
pop
add
loope
out
shlb
pop
scas
sarb
arpl
andl
cmpsl
xchg
push
xchg
flds
push
cli
jmp
jg
adc
or
cmp
shl
cmp
adc
nop
ja
mov
cli
xchg
mov
in
sbbl
repz
cmpsl
fs
pop
das
mov
cmp
les
push
out
fsubl
fs
arpl
inc
xor
outsb
jns
call
and
cmpsl
jno
adc
dec
imul
xchg
aaa
adc
push
repnz
cmp
and
xor
in
scas
scas
push
cmpsb
sub
dec
jne
sub
xchg
cmpsb
andl
push
sbb
rclb
loopne
push
shll
mov
xor
in
sub
lret
dec
int
add
dec
mov
mov
mov
adc
xchg
add
lcall
push
int3
inc
and
cmp
jb
adcb
jecxz
pop
stc
mov
fwait
pop
das
jmp
cmpsl
fisttpll
pop
pop
in
adc
pop
or
jbe
stos
sub
shl
or
scas
lahf
push
inc
and
add
mov
rcll
mov
aam
shrb
mov
cmp
pop
cltd
pop
out
lods
mov
hlt
test
lret
inc
pop
out
and
out
cmpsl
pop
daa
lcall
push
push
jmp
cltd
fldenv
mov
inc
xor
es
mov
cmpsl
inc
dec
jae
push
cmpl
cmpsl
cmpb
push
bound
cmpsl
xor
sahf
aaa
ret
cmpsl
shrb
popa
push
out
mov
pop
sbb
loopne
and
ret
pusha
push
int
sar
xchg
cmpsb
inc
jbe
or
cmpsl
stos
negb
inc
in
fwait
shl
repnz
mov
cmpsl
inc
pop
pop
sbb
shl
call
sbb
mov
push
fwait
pushf
gs
sub
cmpsl
scas
fadds
inc
mov
cmp
adc
or
inc
inc
sub
inc
pop
js
add
into
cmp
sbb
sarl
rcll
shl
or
cmpsl
pusha
jnp
cmp
insl
xcrypt-ofb
cmpsl
push
sarb
cs
mov
cmpsl
pop
cmp
sub
lret
clc
cmp
cmovge
jb
mov
mov
mov
inc
push
stos
in
jae
cmpsl
mov
mov
cmpsl
jmp
xchg
repnz
mov
jae
cmp
sub
and
pop
jle
jecxz
fsts
gs
mov
gs
mov
mov
inc
jb
xchg
mov
cmpsl
jnp
cmp
lods
jle
cmpsl
lret
add
and
adc
fisttpl
daa
pop
cmpsl
fiaddl
jl
sub
insb
lret
mov
movsb
and
pop
xchg
inc
cmp
mov
imul
cmpsl
rolb
or
scas
repz
fstps
push
rorl
mov
jg
repnz
mov
or
cmpsl
scas
inc
sbb
lds
daa
out
test
mov
outsw
push
je
ret
cmpsl
sbb
mov
sbb
cmpsl
sti
shrl
or
hlt
jo
xor
enter
cs
add
xor
mov
lea
nop
imull
sub
dec
xor
cmpsl
xchg
cmpsl
je
ss
or
or
fwait
hlt
inc
push
inc
pushf
push
sbb
jo
sub
into
andb
je
ret
dec
cmpsl
dec
ret
mov
sar
cmpsl
xor
insb
cs
leave
push
arpl
xor
mov
sub
or
nop
lods
xchg
jp
data16
scas
dec
sub
cwtl
cmpsl
outsl
insl
dec
sub
lret
ret
sti
je
cmpsl
mov
mov
or
sti
cmp
arpl
cmpsl
rolb
outsb
xchg
fcmovb
stc
jnp
test
jb
inc
xor
xor
in
rol
jle
mov
mov
mov
xchg
cmpsl
or
jae
icebp
sub
dec
push
mov
add
stc
cmp
cmpsl
fistpll
ret
mov
and
cmpsb
sub
scas
lock
test
lea
imul
xchg
data16
icebp
popf
push
cmpsl
sbb
add
cmpsl
and
sahf
out
fsts
shrl
xchg
stos
clc
pop
pushf
mov
sub
xchg
adc
cmpsl
or
or
iret
cmpsl
clc
pop
bound
inc
push
pop
cmpsl
add
cmp
cld
loope
xchg
dec
xchg
test
sub
outsb
fistps
jmp
pop
xchg
xchg
pop
cmp
int3
lock
lret
sbb
and
je
pop
jnp
cmpsl
js
cmp
mov
dec
and
cmpsl
cmp
loopne
jo
adc
inc
pop
pusha
add
in
call
lods
or
adc
pop
xchg
adc
out
dec
in
in
xchg
insb
cmpsl
leave
sub
les
mov
cmp
shrl
hlt
adc
jns
cmpsl
mov
icebp
mov
cmpsl
pop
sti
and
js
cmpsl
repnz
jae
shll
test
mov
cmpsl
jbe
in
bound
pop
inc
lcall
fsub
je
lcall
mov
out
xchg
andl
ja
outsl
pusha
cmp
imul
dec
ret
shl
lcall
jnp
bound
and
mov
leave
push
fldt
addr16
test
and
inc
ficompl
jmp
adcb
sbb
mov
xchg
add
mov
pusha
adc
aas
pop
xor
adc
xchg
inc
std
xchg
aaa
out
add
jae
stos
xorl
xchg
ret
and
xchg
iret
and
out
jbe
es
mov
ds
insb
jmp
lret
pushf
mov
add
inc
rolb
add
pop
cltd
or
xchg
out
sbb
test
add
testb
loopne
pop
nop
repz
xchg
stc
push
lcall
loop
dec
cmpl
inc
pushf
mov
mov
add
test
cmpsb
jae
sbb
cmp
sub
xchg
cld
sbb
jle
cmp
monitorx
sbb
stc
mov
jl
testl
nop
mov
add
cmc
nop
mov
test
jmp
aad
mov
sbb
and
aas
xchg
lods
and
and
xchg
and
or
adc
daa
add
adc
adc
stos
and
sbb
push
adc
lret
adc
out
cmp
aas
dec
pop
push
stc
ret
sub
out
push
pop
adc
push
adc
pop
push
xor
dec
inc
stos
int
push
out
mov
push
gs
gs
test
adc
gs
adc
or
fisubs
icebp
adc
push
or
mov
add
adc
adc
sti
rorl
rclb
outsb
into
std
mov
cmc
shl
adc
mov
test
jg
and
adc
lcall
mov
mov
mov
xlat
mov
cmpsl
inc
inc
cld
push
in
push
fwait
movsl
add
jg
lock
xor
bound
cli
cmp
cmp
cli
cld
icebp
addr16
jl
cs
xor
sar
jb
xlat
mov
pop
xor
or
lods
and
fisubl
cs
pop
push
push
pop
femms
adc
addb
sbb
ljmp
xchg
jecxz
and
and
test
push
and
inc
jl
or
xor
jbe
and
jmp
shl
loopne
in
aad
pop
cs
ds
push
rorl
push
insb
in
inc
push
ds
add
cltd
jns
xchg
int3
rolb
mov
mov
mov
lret
add
mov
pop
arpl
cltd
push
lret
dec
xor
xchg
xor
fmul
cmpsb
xor
adc
ljmp
push
es
loope
xchg
cmpsl
rcll
sub
mov
repnz
int
into
clc
pop
mov
push
fsts
out
sbb
cmpsl
or
ret
lds
cmp
cmpsl
add
push
shl
int
cmpsl
mov
scas
cltd
or
mov
inc
addr16
dec
rcrl
cmp
jg
sbb
pop
lds
jecxz
mov
push
lcall
fucom
push
jns
push
lock
into
xchg
hlt
mov
cmpsl
lods
inc
loopne
xchg
add
xchg
pop
mov
cmpsl
mov
sbb
mov
or
cmpsl
cwtl
mov
adc
mov
mov
aad
jge
sub
sub
lret
pushf
cmpsw
xchg
cs
push
inc
xchg
cmc
ror
jl
fs
je
ret
fucom
add
push
cmp
stc
popf
pop
cli
push
repnz
add
jp
sub
pop
dec
inc
jmp
aas
jle
xchg
les
cmpsl
nop
adc
dec
cmc
xchg
xor
aaa
movsb
out
cmpsb
or
cmp
cwtl
fisubs
jbe
and
cmpsl
fs
jo
aad
inc
mov
lods
xchg
sub
mov
add
cmpsl
les
ja
cmpsl
leave
push
pop
dec
pop
or
cmpsl
fldcw
jge
bound
xchg
jnp
icebp
cmpsl
mov
stc
push
aam
and
lret
or
xor
andl
icebp
cmpsl
enter
xchg
fmull
cmpsl
sub
xor
mov
aas
scas
dec
nop
mov
add
sbb
out
jmp
mov
mov
add
or
leave
or
xchg
icebp
jmp
test
adc
stos
mov
movsb
mov
andl
dec
fildll
jno
shlb
shlb
lret
mov
cmpsl
push
cs
pop
cmpsl
mov
inc
fcmovbe
xor
cmpsl
repz
cmpsl
cmp
pop
sub
outsb
iret
mov
mov
pop
popf
dec
push
add
jnp
and
lahf
lods
mov
mov
ficoms
xchg
and
aam
cmp
xchg
sarb
push
mov
test
mov
fwait
cmp
jae
loope
lret
sti
add
or
aas
or
imul
xchg
cmpsl
jl
test
sti
cmpsl
ss
inc
hlt
fbstp
lcall
cmpsl
leave
inc
stos
jo
or
lret
negb
mov
out
lret
je
movsb
gs
nop
adc
lock
cmp
mov
or
ret
leave
in
sub
sbb
push
cmpb
adc
test
sarl
scas
xchg
test
cmpsl
xchg
push
inc
imul
cmpsl
adc
or
pop
repz
mov
shl
jns
dec
cmpsl
movsb
mov
mov
mov
ret
lods
jge
sbb
xchg
inc
inc
mov
cmpsl
sbb
sub
imul
sub
lods
out
inc
mov
cmp
push
ds
inc
cmpsl
sub
mov
aam
rcll
outsb
hlt
sub
cmpsl
fsubrs
sub
stc
cmpsl
mov
xor
jno
addr16
and
push
mov
inc
enter
mov
adc
insl
pop
xchg
stc
pop
cmpsl
ljmp
or
inc
repnz
sbb
into
sub
mov
cmpsb
je
ja
dec
cmpb
popa
mov
das
push
dec
push
mov
fcmovnbe
push
xor
gs
xchg
clc
cmpsl
push
fwait
push
dec
mov
cmp
fnstcw
adc
loopne
xchg
mov
jnp
inc
adc
dec
andb
imul
daa
xchg
lea
loop
jmp
popf
xchg
jo
jg
lods
fisubs
icebp
aas
loope
cmpsl
rcrb
dec
ljmp
add
aam
popf
jnp
cmpsb
fists
and
xchg
lea
xchg
adc
mov
mov
leave
fstl
or
sbb
cs
cmpsl
test
xchg
add
add
repz
scas
cs
ret
mov
xchg
mov
jge
add
rcll
repnz
jmp
xorb
sbb
ds
mov
out
ja
and
test
jecxz
rcll
xchg
outsl
loope
in
mov
jnp
sets
or
jb
stos
inc
cmpsl
mov
dec
gs
mov
cmpb
mov
cmpsl
mov
ret
cmpsl
ret
inc
inc
aad
std
cmpsl
aas
sahf
fildll
lret
les
or
fmulp
out
imul
or
sti
mov
out
mov
sub
adc
orl
popa
out
je
dec
or
fsub
pop
add
adc
jns
or
push
cmpsl
xchg
in
mov
addr16
cmpsl
loope
fiadds
in
stc
adc
cmpsl
int3
push
push
or
mov
std
ljmp
pop
test
push
sbb
clc
out
add
xor
pushf
mov
mov
dec
and
mov
dec
mov
inc
mov
test
inc
jbe
test
dec
in
adc
mov
lock
ljmp
push
pop
lret
test
pop
pop
inc
and
mov
dec
cmp
sbb
out
xchg
sub
cs
shl
push
mov
nop
mov
and
xchg
sub
adc
test
mov
mov
mov
cmp
cmp
fsubp
sahf
mov
mov
lea
jmp
daa
bound
sbb
or
pushl
leave
lock
add
cmpsb
xor
mov
cmpsl
negb
inc
push
dec
inc
out
jnp
cmp
jle,pn
leave
cmp
std
rcrl
jmp
inc
push
dec
cld
hlt
mov
cmpsl
pop
push
xor
arpl
pop
cmc
inc
push
push
and
or
out
data16
jbe
stos
js
mov
ss
hlt
xchg
fstpl
leave
mov
dec
fadd
leave
inc
enter
fidivrs
dec
jg
fs
pop
xor
ret
pop
mov
sbb
mov
and
cmp
push
insb
cmc
add
and
or
test
pop
mov
push
dec
mov
sbb
pop
pop
in
lahf
mov
and
add
hlt
stos
mov
mov
insl
cltd
loopne
or
stos
add
or
out
idivl
dec
sti
xchg
sub
pop
shll
sub
mov
jg
jecxz
test
add
outsl
adc
and
or
fwait
mov
xadd
lds
mov
out
inc
xor
mov
call
or
xor
out
aam
cwtl
lock
imul
pushf
cmp
push
or
data16
xor
roll
gs
mov
sbb
pop
and
jb
cwtl
sbb
iret
gs
orb
xor
add
test
in
xor
or
sbb
sub
add
or
lret
cmp
pop
cmp
imul
push
cmp
mov
out
cmp
test
and
xor
pop
es
imul
add
jbe
mov
mov
loop
aaa
sub
mov
scas
and
lods
cmp
lret
sub
mov
mov
pop
test
push
std
clc
pop
sub
xor
aam
out
int3
es
cmpb
scas
sub
movsl
push
inc
lea
repz
int3
scas
ror
xchg
mov
fists
xor
sti
jl
pop
pop
shl
into
dec
inc
lret
jae
sub
push
outsb
dec
mov
mov
inc
cmp
jl
movb
loop
jle
mov
fiaddl
and
fs
bound
jle
inc
sbb
je
mov
ficoms
nop
shlb
clc
loop
aam
xchg
jne
jl
mov
inc
pop
movsl
loopne
sbb
mov
jecxz
add
dec
fwait
or
cmc
fsub
loope
sub
lock
add
lods
jle
in
add
add
cmp
mov
mov
mov
shlb
lret
rol
pop
jno
jae
test
sbb
and
fmulp
dec
or
cmpsl
jae
push
int3
cld
mov
mov
fbstp
sbb
rcrl
loopne
xchg
shlb
rclb
pop
je
movsl
and
repnz
stos
ret
lods
cmp
xchg
push
lar
or
aam
cmpsl
in
shlb
push
push
pusha
adc
aam
jle
and
scas
test
sub
arpl
and
xchg
push
clc
imul
mov
lods
dec
in
mov
xor
pop
inc
sbb
mov
fimull
sub
lea
not
mov
lahf
clc
mov
add
dec
enter
repz
mov
sbb
lret
or
lods
dec
outsb
ret
push
cmpsl
outsb
pop
bound
dec
sbb
jl
sahf
lcall
pop
push
mov
fcom
xlat
fisubrs
inc
sbb
sbb
push
mov
push
sarb
mov
lods
aad
out
pop
into
lahf
jmp
mov
mov
add
dec
xchg
das
xchg
decb
xchg
inc
push
shl
add
jmp
std
xor
mov
jmp
mov
mov
sbb
mov
dec
adc
insb
decl
and
repnz
lcall
mov
add
rolb
mov
mov
iret
sahf
fimuls
cmp
jmp
xchg
mov
neg
sub
in
xor
fadd
mov
cltd
xchg
in
jle
mov
add
out
inc
mov
jecxz
add
fmul
mov
nop
and
lret
add
push
cmp
mulb
enter
cld
sub
arpl
in
and
fdivl
inc
lret
out
adc
xor
sti
fwait
xlat
jbe,pt
adc
push
gs
roll
push
dec
inc
mov
mov
stos
loope
in
dec
in
sub
xchg
shll
ljmp
in
iret
adc
lds
es
mov
mov
jne
outsb
aam
xor
push
and
cmpl
xchg
mov
mov
roll
aas
mov
lods
ret
sub
sbb
mov
dec
mov
sar
dec
push
inc
mov
clc
pop
js
inc
arpl
sub
fdivl
in
xor
xchg
jno
xchg
and
xor
and
cld
ljmp
push
arpl
xor
shrb
sub
push
ror
call
mov
adc
add
into
in
out
add
dec
push
pop
mov
push
mov
out
inc
ret
mov
adc
lods
pop
adc
pop
and
call
scas
loop
xchg
xchg
in
xor
cwtl
xor
pushf
adc
out
mov
mov
popf
pop
xlat
xor
loop
dec
mov
fwait
sbb
into
popa
lret
ffreep
sbb
sti
enter
cmc
mov
insl
lahf
add
into
sbb
in
pop
sarb
enter
jg
and
sbb
cmp
insb
pushl
push
add
out
mov
ret
rcl
enter
push
mov
push
into
xor
lods
mov
cmp
lcall
add
dec
mov
mov
push
lea
fwait
cmp
adc
lock
shlb
mov
mov
leave
xor
imul
sbb
dec
loopne
mov
xorl
mov
loope
sbb
mov
jle
test
sbb
adc
add
cmp
mov
inc
inc
in
add
mov
dec
rolb
mov
or
aam
pushl
scas
loopne
sub
fidivl
add
sbb
add
in
mov
jnp
mov
insl
lahf
add
into
inc
mov
inc
sbb
lock
push
xor
or
and
clc
adc
adcl
loop
mov
jmp
dec
fxch
mov
fisttpll
mov
jo
jge
fldl
inc
and
xchg
lret
gs
mov
add
mov
nop
mov
cmp
xchg
jle
push
mov
jle
clc
daa
lock
repnz
add
in
outsb
jo
mov
mov
lret
pusha
out
mov
inc
mov
jle
call
jb
jo
mov
ljmp
mov
lcall
andb
inc
mov
add
jno
rolb
jb
inc
imul
sub
add
mov
mov
xor
lock
mov
jbe
negl
incb
and
pop
enter
add
fadd
clc
out
pop
jbe
je
jne
loopne
sbb
pushf
mov
loopne
enter
sub
jg
cmp
add
mov
pop
das
cmp
xchg
shr
loop
sbb
imul
sub
jl
mov
js
lods
and
fwait
cmp
rcr
fimuls
jmp
dec
insb
jge
inc
es
mov
xchg
shlb
sub
mov
mov
mov
mov
mov
inc
rcl
or
add
test
into
push
pop
xchg
mov
shl
adc
add
mov
movsb
xchg
stc
add
faddp
shrb
rolb
scas
pop
out
call
out
mov
inc
movsl
ret
xchg
mov
cli
mov
or
shrb
lret
dec
jo
loope
scas
push
rol
sub
movsl
or
test
lods
je
mov
fwait
dec
push
xchg
mov
xchg
push
outsb
adc
fucomip
lods
xor
lcall
pop
add
stos
mov
cmp
push
jb
push
adc
pushf
pop
lea
fdivs
lea
outsb
lcall
fadd
repz
imul
jo
scas
inc
lock
xchg
push
aam
test
mov
idivl
mov
lcall
aad
sub
popa
in
rcr
dec
mov
repnz
cmp
hlt
stos
mov
lock
lret
mov
repnz
cmp
test
divl
mov
jns
fmul
sbb
out
xchg
jle
not
sub
inc
add
mov
cmp
test
sub
add
push
pop
orl
inc
aaa
cmp
adcl
pop
cmp
xor
dec
mov
mov
ss
sbb
aam
insl
dec
xchg
mov
cmp
lcall
pusha
jbe
rclb
jnp
rcrl
out
jg
lahf
inc
ds
aad
fdivl
cmp
aam
mov
cmc
mov
shlb
repz
inc
sbb
mov
mov
adc
xor
cmp
fdivl
push
inc
xor
cmp
ss
lcall
add
pusha
jo
int3
fisttpl
jo
push
inc
xor
cmp
outsb
push
nop
mov
bound
xor
ror
xor
mov
push
or
shl
inc
imul
sbb
mov
repz
mov
jge
xchg
imul
cmp
xchg
js
mulb
in
ret
adc
push
mov
into
and
mov
dec
fs
xchg
pusha
adc
fidivrs
lea
push
push
mov
pusha
add
jle
and
or
test
cs
dec
mov
rorb
push
cld
shr
fnstsw
dec
sti
push
imul
testl
xor
mov
mov
cmpsb
mov
mov
jmp
and
test
jbe
andb
mov
xchg
in
aad
fbstp
cmp
pop
ret
dec
mov
cmp
iret
enter
xchg
adc
cli
and
sahf
mov
test
sbb
xlat
leave
loopne
inc
into
mov
sbb
fs
jle
ret
cmp
movsl
imul
shrl
in
inc
inc
and
pop
jmp
pop
repnz
popa
pop
adc
enter
ja
push
pop
adc
adc
repnz
adc
in
pushl
repnz
hlt
call
adc
push
lret
repnz
out
or
mov
mov
sbb
mov
idivl
in
and
mov
cmp
mov
mov
inc
dec
jmp
add
fidivrl
fsub
mov
loopne
faddl
dec
adc
mov
mov
ljmp
or
xlat
loopne
fdivrl
sbb
in
push
pop
pop
mov
adc
mov
push
push
cwtl
test
in
mov
push
loopne
jecxz
daa
adc
movsl
push
push
pop
xlat
push
mov
adc
xor
cltd
adc
xchg
push
test
out
ret
fmulp
hlt
ljmp
or
xchg
add
mov
lret
mov
mov
enter
adc
adc
aas
jmp
gs
enter
adc
dec
xor
cmp
xchg
dec
mov
adc
add
push
ret
icebp
stos
addr16
shrb
adc
lock
stos
pop
mov
push
call
sub
aam
pop
lods
mov
adc
adc
call
arpl
sub
jo
ss
and
movsl
pop
jp
enter
fsubr
imull
and
fistps
fcomp
adc
jns
add
adcl
data16
mov
es
inc
enter
lds
js
nop
jp
xlat
addr16
cs
cwtl
cmpsb
xchg
and
ss
out
sbb
xchg
sti
into
mov
loope
sahf
outsb
inc
and
and
adc
adc
sub
mov
push
scas
leave
inc
and
in
loop
jle
or
pop
inc
add
cmp
stos
jp
inc
lret
mov
xchg
jle
into
enter
xchg
xor
mov
into
mov
adc
inc
xor
lock
xlat
or
and
out
jge
test
out
jb
vpcmpeqw
sbb
and
lret
into
rorb
dec
dec
adc
sbb
outsb
cmpsb
mov
sar
fcompl
xchg
popa
sub
sub
mov
lea
cmp
inc
sbb
adc
out
je
and
lret
ret
mov
shr
or
cmp
ss
lods
in
jbe
mov
xor
cmp
fisttpl
cs
mov
cs
add
loopne
mov
ss
ds
mov
sarl
lock
out
push
les
sarb
inc
or
ret
mov
add
dec
sbb
sbb
jge
xor
pop
cwtl
inc
cmp
ds
aam
xor
fnstenv
push
mov
bound
or
add
lds
mov
mov
pop
push
lds
in
mov
jecxz
pop
nop
sbb
push
sti
mov
cmp
or
lods
xchg
stc
in
or
repnz
insb
push
xor
push
sbb
mov
cmpsl
cli
insl
test
mov
sub
jne
cmpsl
lahf
enter
cmp
test
pop
sbb
inc
mov
cwtl
imul
roll
ljmp
testl
cwtl
sahf
mov
jl
mov
jp
xor
repnz
out
ret
arpl
jle
mov
gs
cmp
lcall
adc
mov
lahf
mov
movsb
dec
adcb
dec
mov
cmp
movb
jns
cmp
incb
lcall
shlb
xor
fdivl
cmp
mov
insb
ret
xchg
loopne
rol
lods
in
add
lods
mov
fcoms
decl
mov
ljmp
mov
lock
inc
mov
adc
js
lds
arpl
xchg
dec
mov
sbb
arpl
addr16
mov
jg
mov
fcoms
ss
aam
mov
cld
call
push
rcrb
sub
movsl
sarl
outsl
xchg
mov
xchg
movsl
fbstp
sarb
int
cli
ret
mov
iret
or
adc
add
ret
ljmp
fimull
int
mov
lcall
cmpsl
pop
or
or
adc
jb
cmpsl
add
mov
andb
es
push
lret
jle
sti
push
popf
rolb
mov
int3
insl
jge
and
xchg
rcrb
cld
cmpsl
scas
clc
icebp
int3
jno
loop
cmpsl
mov
enter
pop
fwait
jecxz
aam
mov
inc
lock
test
cmpsl
lret
mov
mov
adc
xchg
sti
es
mov
fsts
push
xchg
rclb
lcall
unpckhps
cmpsl
scas
cld
xchg
ret
xchg
imul
ret
sbb
data16
fwait
into
cli
push
jno
fisttpll
push
repz
push
cmp
lcall
cmp
rol
ljmp
sub
cmp
cmpsb
jne
insb
mov
add
or
dec
icebp
mov
dec
daa
inc
shll
cmpsl
pushf
pop
mov
popa
cmpsl
aaa
or
int
cmpsl
imulb
loopne
ret
stos
fwait
ret
daa
mov
and
notb
jb
sub
cmpsl
pop
arpl
xchg
fmuls
sbb
mov
adc
jp
test
add
sub
push
out
or
ljmp
cmpsl
lret
cmc
xchg
icebp
mov
lods
cmp
cmpsl
dec
inc
xchg
sbb
pop
push
push
xchg
mov
aam
dec
aad
fisubrs
and
mov
push
orl
fstpt
cwtl
sub
push
xchg
movsl
cmpsl
in
hlt
xor
cmpsl
push
jns
je
sbb
iret
or
loop
or
out
sub
cmpsl
sub
and
shll
pop
xchg
sub
jle
fsubl
fidivrs
mov
mov
cmpsl
xchg
stos
add
call
mov
loopne
xor
cmpsl
adc
mov
jp
fs
cmpsb
shlb
pop
ljmp
jo
in
xchg
cmc
cmpsl
adc
push
jg
mov
pusha
nop
jecxz
lods
push
cmpsl
iret
fimull
dec
or
cmpsl
outsl
cmc
std
and
sub
stc
xchg
sti
dec
sbb
pushf
add
lods
pop
ret
cltd
mov
jne
pop
jge
fdivp
pop
popf
dec
call
fldenv
test
jo
dec
cmpsl
cs
xchg
xchg
sbb
xchg
xor
out
jmp
enter
xchg
cmpsb
test
push
sbb
jmp
cmpsl
aas
data16
cmp
sbb
ret
and
pop
mov
insb
int
jnp
cmpsl
jno
cli
push
mov
je
jg
mov
cmp
pop
lret
jnp
mov
inc
sbb
out
pop
jg
dec
jbe
mov
aam
call
aas
popf
xchg
imul
sub
int3
xchg
and
cmpsl
mov
or
test
lret
xor
add
add
repnz
fcmovne
inc
cmpsl
int3
std
adc
or
push
cmpsl
ficomps
es
shl
in
ret
mov
mov
adc
add
dec
xchg
xor
scas
movsb
mov
sbb
and
xchg
mov
pushf
andl
rorl
or
pop
and
js
mov
pop
inc
dec
pushf
or
push
or
jnp
repnz
mov
dec
rorl
cmp
int3
dec
gs
xchg
cmpsl
lea
les
daa
lahf
enter
push
pushf
xchg
dec
and
and
pushl
in
int
sub
dec
int3
cmpsl
arpl
hlt
lods
cmpsl
lret
movsb
xor
test
ljmp
cmpsl
mov
jb,pn
mov
cld
fadd
jp
dec
popf
dec
jmp
sub
scas
inc
mov
and
pop
pop
in
addr16
mov
je
cmpsl
hlt
push
sbb
xor
adc
add
mov
cmpsl
sbb
xor
sub
sbb
mov
push
xchg
mov
mov
pop
mov
cmpsl
inc
adc
rclb
loope
mov
fcoml
mov
cmpsl
add
jo
mov
pop
cs
or
inc
mov
stos
out
mov
sub
cmpsl
rcrl
aaa
pushf
sub
add
inc
sbb
or
jl
or
xchg
cmpsl
lods
and
cmc
scas
mov
insb
ror
mov
inc
jecxz
xor
pop
sub
push
dec
imul
mov
sub
icebp
jl
js
pop
fldenv
popa
dec
leave
mov
cmp
scas
jb
jo
lret
xchg
sub
cs
sahf
push
push
insl
cmc
sub
or
xor
jns
in
mov
add
push
mov
xor
push
sub
scas
jl
mov
xchg
les
jg
roll
popl
jno
loope
stos
popa
imul
outsl
push
push
inc
cmp
sbb
sbb
ret
sub
cmpsl
enter
or
cmpsl
adc
or
jmp
shr
push
out
shlb
mov
outsb
lods
shlb
scas
stos
jne
xchg
lods
mov
push
lods
xchg
clc
ja
rorl
mov
stos
jmp
xor
pop
mov
dec
mov
dec
fimuls
cmp
sbb
lret
aas
int3
int
add
or
cmp
and
sub
sahf
pop
pop
mov
movsb
push
dec
jle
xchg
mov
insb
stos
cmc
xor
sbb
inc
add
test
arpl
cmpsl
lods
in
scas
adc
sti
cmpsl
mov
or
cmpsl
fs
mov
xor
mov
aad
fnstenv
pop
pop
mov
cmpsl
out
lret
hlt
leave
and
in
mov
sahf
push
add
and
insb
stc
cmpsl
xchg
mov
cmpb
scas
in
andb
mov
xor
add
ret
pop
sti
jo
in
mov
and
sbb
in
inc
faddl
mov
push
fiaddl
adc
mov
and
push
pop
loope
mov
sbb
mov
clc
test
imul
push
repnz
push
and
push
push
mov
push
lods
mov
mov
and
and
jp
push
call
and
loopne
dec
pop
sub
push
push
lcall
test
pop
mov
and
mov
or
stos
call
negl
mov
repz
pop
mov
mov
lcall
js
xchg
xchg
mov
into
cmp
insb
pop
imul
dec
int3
sar
fmul
mov
ja
or
or
xchg
mov
loopne
lret
loop
cltd
add
push
xchg
or
jb
xchg
or
mov
jb
adc
xorl
adc
cmp
xchg
xchg
pop
ja
mov
or
lea
xchg
lcall
fsubrp
clc
test
fisubrl
sub
inc
cmp
scas
iret
or
push
or
push
mov
inc
sbb
inc
cmc
push
pop
pusha
fdivrl
ljmp
into
and
xor
fidivrs
dec
dec
call
pop
xor
pop
pop
fs
dec
sbb
xor
test
or
out
push
push
and
jne
pop
gs
mov
and
hlt
cmp
xchg
aaa
push
mov
mov
sarb
cld
das
lock
into
mov
test
mov
loop
pop
testb
adc
shrb
push
jnp
inc
jmp
mov
jg
mov
and
aas
pop
int3
push
popa
inc
pop
add
dec
leave
pop
loop
bound
fdivrl
mov
sbb
sbb
imul
inc
das
mov
sti
or
lods
repnz
shlb
adc
aam
lds
mov
pusha
cli
aas
pop
out
add
dec
aam
gs
cwtl
add
out
out
fiadds
das
lods
mov
stc
ss
and
add
lds
mov
pusha
enter
inc
lds
cmp
mov
mov
loopne
ljmp
lods
int
pop
in
xor
mov
faddl
xor
pop
inc
add
push
ret
int
loopne
sbb
mov
cmpsb
arpl
ror
ficompl
mov
xchg
ror
push
sbb
inc
and
dec
cmp
inc
bound
mov
cmp
je
cmp
mov
xor
mov
lret
sub
ja
mov
dec
mov
and
lcall
sbb
test
jmp
sahf
inc
mov
inc
sbb
iret
lods
lods
mov
rol
icebp
cs
std
jmp
dec
cltd
sub
jmp
enter
dec
repnz
rcr
and
sub
jno
dec
idiv
rolb
imul
add
and
lret
xor
adc
enter
loop
push
movsl
bound
aam
mov
fs
mov
movsl
pop
loopne
mov
cmpsb
std
rol
popa
fwait
stos
shl
fs
add
mov
push
pop
sub
xor
xchg
jle
stc
pop
fadd
out
jns
lea
jne
out
in
add
repz
pop
daa
inc
mov
push
sub
sbb
jmp
jp
arpl
jmp
pop
add
dec
sub
inc
stc
jge
pop
jmp
and
add
cmp
loope
and
rorb
cmp
push
ds
xor
std
push
cltd
lret
aas
add
pop
add
loopne
incl
std
sbb
ljmp
mov
loop
lahf
jo
mov
fsubrs
push
xor
lcall
mov
in
sub
mov
lods
out
cs
or
mov
or
test
ret
jge
int3
fistpll
lods
add
or
push
outsl
add
lods
cmp
pop
cmp
stc
push
clc
push
mov
xor
pop
adc
test
push
push
jg
xor
cmp
mov
xchg
fisubrl
dec
in
push
mov
adc
call
lea
xchg
jmp
pop
and
cmp
loopne
ret
and
cmp
lret
insl
lahf
ss
mov
lret
loop
fidivrs
jmp
lds
dec
pop
or
add
dec
mov
sti
ja
push
jecxz
mov
adc
adc
sbb
mov
adc
gs
les
popa
aam
mov
and
adc
test
loopne
into
in
clc
xorl
mov
sarl
out
fcomp
fsub
inc
int3
or
mov
pop
fisttpl
or
es
or
xor
insb
test
fisubl
mov
cmpsl
add
in
or
fstps
add
lahf
lds
cmpsb
mov
mov
movsl
fs
rol
ret
and
test
outsb
frstor
push
pop
mov
stos
xor
push
shll
lock
sbb
push
mov
fs
sub
and
jbe
roll
push
into
test
insl
ds
add
cli
and
aam
sbb
mov
loop
adc
or
in
mov
pop
xchg
sbb
sti
lea
mov
pushf
mov
sbb
jl
cmpsl
xchg
add
loop
xorl
ret
js
daa
aad
mov
lret
and
mov
nop
jg
cmpsl
pop
lret
rcll
add
mov
stos
pop
mov
fnstcw
lcall
pop
sub
test
cmpl
aad
int3
ficoms
jl
dec
movzwl
mov
aas
imul
vpshld
in
loop
cmpsl
xchg
push
int3
loopne
push
or
scas
sub
mov
fbld
fscale
and
sub
cmpsb
mov
es
pop
ds
push
or
and
jno
mov
andl
or
stc
cmp
lea
sbb
imul
xchg
jb
lret
pop
aad
aas
jmp
insl
sub
lahf
or
les
imul
push
pop
ja
rcrl
adc
pop
shll
scas
sbb
mov
and
int3
and
ss
inc
cmpsl
dec
cmp
or
sahf
jmp
fisubrl
pop
scas
lret
add
test
mov
cmp
mov
aas
fsubr
popa
and
cmpsl
loop
loopne
pop
js
xchg
mov
jno
xor
sub
xchg
callw
sub
insl
popf
roll
pop
pop
lods
cli
aam
mov
inc
jae
adc
xlat
lds
stc
jg
inc
cwtl
cld
cmpsl
mov
inc
and
mov
icebp
ss
lret
enter
cli
pop
in
mov
aad
push
jbe
sub
mov
xchg
test
nop
mov
xchg
xchg
stos
or
lcall
repz
ja
adc
and
mov
mov
xchg
xor
jle
in
arpl
sub
mov
sbb
les
lea
mov
cmpsl
std
xchg
pop
icebp
jmp
mov
xchg
mov
sti
cmpsl
loope
outsb
push
mov
cs
dec
fwait
iret
rol
cmpsl
ret
cmp
sbb
mov
sub
iret
ljmp
push
add
testb
jb
hlt
lods
adc
int
jmp
insb
xchg
inc
and
and
push
pop
and
lods
sbb
xchg
or
fidivrl
jo
cmpsl
ds
push
add
add
inc
mov
out
mov
rorb
pusha
push
lcall
addl
cmpsl
push
push
loopne
subl
sbb
cmp
imul
les
sub
mov
adcb
mov
aas
fsubl
sbb
ja
ds
ljmp
lock
sub
and
jns
adc
cwtl
add
or
xchg
add
pop
arpl
cmp
push
inc
pop
cmpsl
or
lahf
dec
push
xor
fdivr
idiv
ficompl
outsl
inc
or
lret
mov
adc
and
cmpsl
inc
sub
icebp
sub
scas
xchg
push
xchg
sbb
and
stos
and
sbb
cmp
push
mov
cmpsl
pusha
je
push
les
fidivrl
int3
pop
fisttpll
push
and
sbb
imul
xor
xchg
icebp
lret
cmpsl
xchg
xor
push
dec
stc
and
fwait
pop
pop
mov
push
mov
mov
test
sub
cmp
imul
pop
jmp
inc
mov
or
push
push
in
incb
pop
cmpsb
fnstenv
or
inc
mov
push
cmpsb
mov
xchg
lret
sbb
jns
adc
test
dec
das
inc
pop
cmp
jnp
cmc
xchg
inc
xchg
adc
mov
push
adc
daa
xchg
inc
mov
sub
lods
js
push
push
and
or
adc
pop
xchg
inc
repz
sub
pop
scas
cld
shl
mov
xchg
inc
outsb
xor
dec
scas
jp
out
mov
lret
loop
out
cmp
cmpsl
or
xchg
mov
pusha
sub
int3
shlb
lods
gs
fsubr
sbb
cmpsb
cmp
outsb
xchg
sbb
push
inc
sti
dec
cmpsl
jbe
stos
dec
shrl
sbb
pop
and
mov
or
dec
sahf
xchg
pop
scas
dec
adc
test
pop
bound
out
iret
cwtl
jge
pop
mov
cmp
cmpsl
adc
add
scas
sbb
repnz
adc
int3
mov
in
mov
cmpsl
push
xor
jb
je
arpl
or
mov
or
pop
sub
sub
jg
cmpsl
in
into
and
mov
aaa
icebp
cmpsb
push
aam
cmpsl
mov
imul
xchg
or
push
mov
or
sub
add
into
adc
or
mov
rcrb
jae
xchg
test
cmpsb
or
inc
and
mov
clc
mov
mov
mov
shrl
xchg
sub
inc
orl
aad
sarb
stos
out
mov
cmpsl
sbb
cmp
jno
mov
sub
and
les
push
scas
xchg
ss
dec
cmpsl
xor
cmp
shr
mov
lret
lahf
lods
shr
dec
cmpsb
cs
pop
jbe
int3
rcrl
push
out
fidivl
out
xchg
xchg
clc
pop
add
mov
cmpsl
jno
jge
and
cmpsl
imull
shll
cmpsl
subl
add
mov
stc
cmpsb
sbb
or
mov
xchg
in
cld
cmp
cmpsl
or
cmp
sub
push
adc
adc
arpl
movsb
lcall
or
lods
jle
push
and
push
sbb
cmp
scas
xchg
mov
subb
stc
mov
mov
dec
add
mov
sbb
xchg
lret
je
jg,pn
cmpsl
out
test
cmpsl
add
jl
cmpsl
loope
jmp
out
test
rol
push
shl
add
in
enter
xchg
addb
push
mov
shlb
jge
sbb
aaa
or
loopne
mov
cltd
pop
cmpsl
lods
movsb
jge
aaa
pop
sbb
cmpsl
test
sub
cmpsl
xor
ljmp
fsub
js
and
insl
cmpsl
push
mov
mov
lods
cmp
mov
inc
repnz
cmp
int3
mov
sti
rcrl
mov
xchg
xchg
lret
push
dec
es
sub
stos
inc
mov
xor
stc
mov
imul
cmpsb
aas
sbb
jae,pn
out
cmpsl
ljmp
insb
stos
mov
adc
cmc
mov
mov
mov
cmp
cli
sti
mov
sbb
or
pop
cmpsl
test
xchg
mov
push
rcl
inc
mov
out
leave
pop
sbb
je
inc
out
cmp
jmp
fcomi
add
mov
jg
pop
sub
pop
sub
add
push
pop
push
sub
sbb
adc
push
stos
xor
inc
popl
sub
cmpsl
fwait
int3
shrb
stos
or
nop
sub
inc
xchg
scas
cmpsl
add
jae
or
lea
jnp
add
iret
sbb
cld
dec
in
mov
mov
aam
mov
xchg
call
mov
int
sbb
or
cmpsl
mov
mov
call
dec
sub
jo
rcll
je
scas
outsl
adc
cmpsl
out
sbb
and
xchg
shlb
test
lods
sbb
jb
jp
data16
and
pop
mov
lock
push
test
push
clc
and
adc
je
add
aad
dec
jl
push
mov
sahf
mov
xchg
pop
xor
and
into
add
dec
fwait
pop
leave
in
addb
xorl
jg
daa
movsb
lea
lods
gs
inc
daa
sbb
mov
sub
mov
push
sti
sar
ss
mov
imul
cmpsl
jg
xchg
fidivs
adc
jbe
and
or
fistpl
sahf
jne
xlat
mov
adc
jnp
cltd
cmp
cmp
mov
cmpsl
pop
outsl
mov
repz
sbb
inc
jnp
inc
push
mov
imul
imul
cmpsb
insl
loopne
jbe
xchg
cmpsl
std
inc
jae
mov
cmpsl
push
orl
jmp
inc
in
add
shll
cmpsl
test
shll
fadd
mov
jge
jg
adc
dec
mov
sbb
and
mov
push
call
mov
repz
cmpsl
aam
xlat
push
in
cld
cmpsl
adc
rol
jg
sub
sub
cwtl
cmpsb
ja
dec
pop
scas
out
in
or
fbstp
push
sub
push
fs
fistl
and
int
divl
cmpsl
xor
shrb
fsubl
int3
scas
mov
sub
fstpl
in
or
es
xor
cmpsl
xor
cmp
push
and
cmpsl
add
mov
push
cmpsl
mov
push
adc
rolb
cmpsl
and
mov
bnd
pop
sarb
fmuls
mov
enter
xchg
mov
pop
cmp
or
lods
mov
inc
sub
dec
int3
cmpsb
and
xchg
add
or
push
and
aaa
dec
push
adc
cmpsl
int
cmpsb
xor
fsubrs
mov
cld
ja
jmp
push
shrb
xor
xchg
sbb
add
dec
or
stc
and
sbbl
into
push
aas
push
mov
movsb
jp
xchg
xor
lahf
insb
mov
int3
mov
dec
lods
sub
lds
icebp
hlt
push
pop
add
loope
in
jnp
sbb
sub
cmpsl
sbb
adc
cmp
fld
cld
sbb
jl
jae
insb
cmpsl
cltd
jo
cwtl
dec
mov
push
push
pop
dec
stos
jmp
insl
xor
mov
shl
cmpsl
push
cmp
cmpsl
pop
and
xor
scas
movsb
xchg
orl
pop
mov
add
insl
je
jp
or
push
sbb
xchg
jo
and
adc
dec
sub
into
adc
sahf
aam
dec
test
and
sbb
stos
gs
shrb
sub
mov
je
in
jp
ss
adc
pop
push
lds
aam
pop
call
mov
inc
dec
shll
mov
movsl
mov
test
les
call
ljmp
lret
adc
sub
jbe
in
pop
cmp
sti
addr16
fidivrs
adc
cmpsl
mov
ret
jecxz
jb
fdiv
xor
insb
mov
xchg
ret
jge
cmpsl
mov
ja
push
shrl
and
pop
enter
cltd
dec
and
aaa
sbb
adc
mov
andl
outsl
je
cmpsl
test
lret
adc
bound
xor
mov
imul
inc
pushf
stos
or
pop
xchg
mov
cmpsl
je
xchg
test
ss
in
fimuls
mov
jo
popa
call
sub
or
imul
dec
cmp
xchg
fsubrl
sbb
loopne
outsl
out
arpl
xor
cmpsl
cmp
xor
xchg
sub
in
fistps
stc
or
jmp
stos
cmpsl
out
scas
and
inc
sbb
cmpsl
test
aaa
add
add
fnstcw
mov
hlt
push
popf
cmp
mov
xchg
jl
inc
lret
add
cmp
and
push
std
repnz
lret
cld
xchg
in
sub
xchg
stc
jmp
cmpsl
lods
out
lds
in
sbb
cmpsl
push
adc
xor
add
ror
xor
testb
and
cmpsl
and
xor
cmpsl
jmp
jnp
stc
jbe
add
gs
jmp
xchg
cs
mov
insb
cmpsl
jnp
sbb
into
out
mov
cmp
mov
mov
cmp
nop
xor
lret
adc
xchg
jmp
outsl
mov
xor
or
ficoml
into
aaa
add
xlat
sarb
loop
mov
in
or
js,pn
xchg
ret
inc
inc
adc
xchg
es
push
xchg
outsb
pop
cmc
cmpsl
push
xlat
sbb
cwtl
shll
cmp
adc
int
aad
push
mov
xchg
sbb
adc
ret
xchg
movsb
daa
stos
adc
push
push
adcb
jle
imul
push
mov
ljmp
fcom
xor
dec
roll
rcll
fildl
call
ja
push
xchg
xchg
push
ret
cmpsl
addl
faddl
xrelease
jae
push
mov
movl
mov
mov
mov
int
fsts
addr16
xor
sbb
rcll
cmpsl
cmc
mov
stos
jne
sbb
pushf
fsubrl
sarb
push
movsb
lret
xor
into
jno
sub
xchg
js
pop
push
fnsave
dec
popa
and
mov
iret
fsubrp
lods
cmpsb
xchg
ficompl
push
pop
lret
push
mov
jb
cwtl
sub
hlt
fistl
jmp
scas
cmpsl
rolb
sbb
fisubs
inc
adc
push
mov
sbb
xchg
and
out
add
lock
xchg
loope
scas
and
cmp
xor
fcmovb
dec
lods
inc
fwait
divl
les
cmpsl
cmp
adc
add
xchg
rorl
stos
ja
sub
jae
jb
adc
cmp
ret
push
mov
and
sub
jno
fsubl
sbb
sub
cmp
cli
out
adc
jae
cmp
sub
lea
idiv
je
add
fcomi
in
lea
add
xchg
mov
ja
and
adc
push
inc
xor
push
mov
xor
jns
cmpsl
fldenv
mull
xchg
inc
arpl
scas
cmpsl
fwait
jecxz
inc
xchg
inc
into
test
push
adc
lock
and
aam
mov
pop
cmpsl
or
mov
je
cmpsl
into
loope
test
leave
cmp
cmpsb
cmc
mov
xchg
cmp
imul
int3
cltd
dec
lret
cs
addr16
enter
xor
cmpsl
xchg
and
nop
jl
cmpsl
dec
pop
sub
or
cmp
add
clc
testb
aaa
cmc
iret
cmpsl
jmp
cmp
pushf
cmpsl
mulb
lods
cli
fwait
or
cmpsl
jo
pop
bound
mov
mov
stc
inc
fildll
sbb
dec
cld
sbb
int3
and
mov
dec
lods
push
rcll
sbb
mov
cmpsl
pop
pop
addr16
mov
xor
aas
mull
gs
cmpsl
xchg
inc
inc
and
dec
out
cmpsl
ja
adc
xor
xchg
mov
unpckhps
sub
sarl
pusha
pop
test
xor
and
js
leave
pop
cmpsl
rcrl
push
add
inc
mov
sahf
jb
or
icebp
mov
push
inc
lret
fsubs
cmp
cmpsl
lret
sti
xchg
add
sbb
push
jb
cmpsb
push
loopne
inc
jg
add
push
int3
add
fldcw
sub
loop
mov
mov
cmpsl
sbbb
or
push
sub
ja
cmpsl
xchg
ficompl
xor
add
or
fcompl
js
inc
fcmovnb
mov
mov
cmp
repnz
xor
jmp
pop
and
repnz
push
cltd
dec
lret
mov
sub
add
ror
and
cmpb
xlat
icebp
enter
xor
ja
clc
repnz
mov
in
jge
mov
adc
jno
xlat
int3
jae
xor
int3
pop
in
mov
movb
and
and
enter
dec
bound
daa
and
and
insb
push
fs
mov
cmpsl
xchg
sub
addl
lahf
pop
cmpsl
xchg
pusha
push
cmc
popf
jo
and
insl
jge
sti
ret
dec
fsts
mov
sbb
fdivrl
mov
push
cwtl
stc
push
and
in
push
and
cmpsl
sub
pusha
mov
out
aas
jne
jle
push
fcoml
xchg
sbbl
pop
inc
pop
ss
scas
js
call
xlat
cmpsl
jns
add
push
cmpsl
and
xor
cli
jno
push
cmpsl
xchg
push
adc
iret
lock
sub
sbb
mov
scas
lret
sti
or
and
xchg
mov
push
cmpsl
adc
add
pushf
fcmovnbe
fwait
mov
addr16
sbb
cmpsl
push
or
popf
pop
enter
xor
dec
sbb
xchg
sbb
cmpsl
jl
inc
daa
test
addr16
insb
ss
mov
test
imul
mov
or
addl
aas
cmpsl
insb
repnz
sbb
or
sahf
jp
incb
cmpsl
xchg
les
and
or
add
arpl
pop
push
pop
push
jbe
loop
outsl
cmp
cwtl
and
dec
shr
sarb
jb
jmp
sub
adc
jecxz
jne
pop
or
xchg
test
fwait
rorl
cmp
sbb
cmpsl
jne
loopne
lock
mov
xchg
jl
mov
sbb
adc
xor
or
cmpsl
pop
data16
mov
cmpsl
cmpl
jmp
mov
cli
add
pushf
fs
mov
fwait
cmp
popa
dec
cs
cmpsl
and
movsb
je
xchg
add
xor
mov
mov
and
ja
push
lds
mov
mov
jnp
ss
scas
mov
push
sub
cwtl
mov
xor
fs
xchg
or
push
pop
adc
ficomps
pop
xchg
mov
lret
add
cmp
or
jecxz
sbb
fs
fildl
dec
mov
push
decl
cld
push
cmpsl
and
push
pop
stos
clc
xchg
or
xchg
cmpsl
or
mov
sub
mov
dec
pop
push
jbe
cmpsl
add
sbb
dec
cmpsl
daa
or
je
clc
shll
adc
mov
jne
roll
jg
sbb
mov
popf
and
mov
mulb
dec
push
lcall
xchg
mov
std
push
mov
dec
stc
jecxz
subl
es
fstps
sbb
cmpsl
std
push
mov
flds
fldl
jns
xor
jmp
fldt
in
movsb
pop
cmpsl
add
scas
gs
cmp
rclb
mov
mov
jns
outsb
daa
cs
and
adc
xchg
iret
cmpsl
loope
inc
mov
mov
enter
fildl
and
test
cmpsl
scas
subb
cmpsl
scas
push
fbstp
movsb
xchg
xchg
mov
and
std
fldenv
inc
ss
pop
into
mov
mov
scas
push
jge
mov
mov
int
push
stos
repnz
jo
lods
testb
roll
dec
clc
cmpsl
jp
fwait
jl
loopne
ror
pop
mov
das
mov
imul
mov
cltd
mov
and
inc
xor
je
cmpb
adc
xor
push
dec
jl
cmpsl
xchg
sbb
inc
cmp
adc
stos
dec
orl
test
inc
sub
cmp
mov
shll
inc
mov
cmpsl
imul
pop
pop
test
cmp
lods
add
js
enter
cmc
scas
cmp
sbb
hlt
test
cmpsl
adc
push
inc
or
js
sub
xchg
sub
xchg
repz
xchg
imul
or
sub
mov
mov
cmpsl
or
pop
mov
out
sbb
fdivrl
shll
cwtl
cmp
jl
lret
vpmacsswd
cmpsl
pop
sbb
xor
mov
mov
inc
inc
aam
cmp
dec
pop
mov
sbb
lret
push
pop
and
insl
adc
adc
andl
shlb
mov
cmpsl
cmp
adc
sbb
mov
mov
push
dec
cmpsb
sbb
adc
sub
cmp
jb
stos
push
aas
bound
dec
adc
cmpsl
inc
cmpb
jmp
adc
rcrb
cmp
scas
cld
mov
cmpsl
jp
aam
and
jle
xor
aas
xor
int3
cltd
xchg
cs
and
jo
cmp
xchg
in
enter
mov
ja
cmpsl
inc
mov
pop
std
pop
loope
cmpsl
add
imul
xchg
xchg
cmpsl
and
and
adc
enter
dec
mov
jbe
push
cmpsl
gs
ficoms
cmp
aam
and
xor
sub
leave
addb
inc
roll
loop
fidivrl
jo
dec
and
push
or
mov
bound
xor
sub
cmpsb
mov
jae
dec
xchg
sub
jbe
sub
mov
rclb
loop
pusha
rcrl
in
enter
pop
sbb
and
inc
hlt
jo
enter
loopne
mov
divl
shll
lret
in
imul
or
out
sub
or
lea
fldenv
xchg
lcall
cli
stc
jne
in
aam
add
leave
stos
dec
or
jmp
fsubrp
mov
add
adc
or
idivb
insl
lahf
xor
out
inc
xchg
fistl
insb
sub
dec
insb
jecxz
inc
cmp
push
xchg
clc
lods
dec
adc
mov
stos
loop
out
jmp
repnz
xor
movsb
add
mov
shr
test
jge
ret
inc
outsl
inc
loopne
cmpsl
inc
loopne
int
mov
test
adc
cmp
add
loop
sahf
cmpsb
es
movsl
sub
sbb
mov
lds
popf
in
test
cwtl
cmpsl
test
dec
cmpsl
mov
lds
fwait
mov
pop
jmp
mov
or
dec
lods
cmc
sub
push
push
and
es
hlt
mov
cmpsl
ds
push
jmp
add
inc
in
in
or
jbe
in
mov
dec
add
hlt
xchg
movb
movsl
jecxz
adc
xor
xchg
sbb
pop
dec
cld
mov
aad
sub
ss
fsubl
cmp
aas
jl
repnz
mov
lretw
xchg
cmp
mov
adc
or
cmpsl
or
cmp
and
sub
cmpsl
ja
sbb
or
mov
outsb
sbb
push
mov
xlat
inc
mov
std
pop
sbb
popf
xchg
xchg
add
xchg
lods
inc
and
stc
test
jae
jno
scas
sub
dec
sub
push
mov
subl
adc
cmpsl
cmp
sbb
cmp
jl,pn
popw
add
in
cmp
sub
cmp
or
add
cmpsl
adc
mov
inc
mov
in
xchg
fsts
cmpsl
mov
cwtl
imul
inc
jge
scas
lock
xchg
mov
pop
icebp
or
dec
sbb
cs
push
pop
inc
cmpsl
addr16
rcl
dec
cmpsl
cld
xor
cmp
jne
xor
xchg
inc
xor
cmp
mov
pop
test
lcall
and
mov
dec
sbb
cmpsl
fdiv
ss
inc
mov
mov
ret
sub
negb
ljmp
adc
push
pop
jg
loope
jbe
or
cmpsl
outsb
adc
arpl
out
inc
xchg
lret
nop
mov
stos
dec
cmpsl
cmp
cli
rorl
cmp
mov
divb
je
and
dec
mov
aad
andb
stos
pusha
int3
xor
push
xchg
lret
sub
imul
mov
mov
scas
add
mov
shrb
dec
fwait
cmpsb
int3
dec
sbb
xor
pop
jecxz
and
cmpsl
std
aad
clc
sbb
loopne
jmp
jmp
rcrb
lods
push
fiaddl
cmpsl
dec
dec
or
cmp
addr16
out
sub
jg
cmpsl
loopne
mov
mov
idivl
jbe
xor
push
cmp
xchg
and
outsl
in
xchg
cmpsl
loope
repz
cmp
cmpsl
call
das
xor
ljmp
add
mov
daa
pop
pushf
jne
lret
inc
lret
push
mov
cmpsl
test
scas
sub
int3
xchg
je
pop
sbb
insb
cmp
or
mov
addr16
jg
xchg
cmpb
xor
jo
repz
mov
xchg
cmp
mov
lea
stos
inc
mov
stos
out
jae
mov
cmovs
clc
orb
loope
mov
fisubs
out
jb
stos
mov
add
xchg
cmp
mov
lret
and
cmpsl
inc
mov
ljmp
aas
data16
xchg
ret
or
cmpsb
mov
cmpsl
repnz
xorl
cmp
lcall
or
scas
cmpsl
xchg
xchg
mov
in
cmpsl
std
fistpl
popf
xchg
xor
shrl
movsl
in
mov
pop
nop
add
inc
add
lcall
insb
mov
outsb
fwait
or
xchg
sbb
incl
cmpsw
pop
bound
push
out
xchg
loopne
jnp
sbb
mov
sbb
pop
mov
shll
test
xor
jl
jmp
les
or
cmpsb
xchg
je
cs
and
adcb
cmpsl
or
mov
leave
enter
inc
mov
sbb
mov
repnz
inc
mov
sbb
icebp
aam
sahf
imul
call
cmp
jp
or
sbb
cmpsl
into
pmaxsw
movsb
js
ficoms
sbb
mov
jo
inc
xor
test
fdivrl
negl
cwtl
xchg
lahf
xor
pop
call
sbb
in
clc
loope
mov
cmpsl
imul
fldcw
inc
dec
mov
xchg
cmp
sti
cmp
push
cmpl
outsb
mov
jmp
cmp
xchg
popf
ret
cmp
fwait
lock
cli
adcl
mov
jno
sub
pop
cmpsb
xor
mov
jne
or
pop
xchg
lret
xor
orl
pop
cmpsl
pop
jmp
pusha
stos
mov
ret
jp
xor
in
cmpsl
adc
or
insb
xchg
sub
and
cmp
jbe
push
aam
mov
sbb
iret
cli
lea
cwtl
inc
fdivrs
loop
cltd
or
inc
gs
andl
pop
ret
push
aas
dec
mulb
enter
sti
push
adc
sub
pop
popf
push
dec
push
hlt
rcr
inc
ja
hlt
adc
ljmp
cwtl
cmp
and
mov
lret
bound
jg
mov
add
inc
aaa
dec
add
jg
dec
cs
sub
sahf
push
add
cmp
ret
and
fst
cmpsb
pop
pop
cmp
daa
dec
adc
fimull
mov
test
and
inc
and
dec
push
push
mov
xchg
fcmovu
lds
xor
add
adc
inc
es
inc
loopne
loop
add
loopne
add
shlb
cli
cmpsl
xchg
add
sub
pop
inc
sarl
ss
into
mov
cmp
dec
mov
inc
addl
jne
lods
cmp
mov
in
aaa
add
test
mov
les
push
loope
loope
addr16
imul
cmpsb
ja
sbbl
push
mov
pop
aas
sub
decl
inc
add
xchg
mov
xor
add
jo
mov
movsl
push
in
adc
push
sub
dec
xchg
xlat
xchg
sbb
mov
loop
mov
fwait
push
adc
push
adc
or
out
orb
push
jp
mov
jo
mov
jle
and
test
icebp
mov
rcll
mov
idivl
into
adc
test
or
es
int3
js
loop
and
ds
adcl
loopne
bound
rorb
sub
sub
loopne
mov
cmp
mov
lods
rcrb
or
mov
sub
or
sbbl
xchg
jae
inc
bound
sbb
loope
ljmp
and
fcoml
jl
ss
cmpsl
mov
cs
cmpsl
mov
jno
cmpsl
cmc
jo
xor
aad
cmpsb
cmpsl
xchg
pop
int3
xchg
push
jbe
mov
sub
lret
adc
cmpsl
mov
jbe
push
dec
jp
leave
xor
rcll
sub
sub
fs
ror
fwait
or
outsb
xchg
dec
and
cmpsl
movsb
lock
push
stos
outsb
idivb
push
das
into
fimuls
xchg
and
inc
or
lea
sub
cmpsb
fsubs
shlb
cmpsl
repnz
xor
cmpsl
add
xchg
xlat
je
scas
mov
orl
int
insl
xchg
lods
int3
aad
ds
jne
pop
mov
cmpsl
xor
ss
inc
subl
subl
sahf
data16
pop
mov
mov
stc
xchg
jo
cmp
sbb
sbb
jge
repz
pusha
xchg
push
mov
fsubrs
out
xchg
icebp
lret
cmpsl
sub
cmp
dec
mov
test
xor
mov
and
sbbb
je
add
cmpl
push
insb
inc
cmpsl
mov
xchg
sub
xor
shll
data16
xchg
push
jg
icebp
movsb
cwtl
cmpsl
loopne
out
cmp
cmpsl
cmp
inc
add
adc
pop
adc
leave
aaa
mov
sbb
dec
mov
lods
aas
into
test
insl
push
xlat
ds
data16
push
scas
mov
lods
inc
fcomps
cmp
xor
and
or
cmp
pop
out
frstor
cmpsb
xor
sbb
adc
jp
in
call
out
jge
mov
pop
fidivl
or
out
sbb
jge
mov
pop
xor
sub
mov
mov
adc
ja
insl
lahf
xor
dec
push
xorb
inc
jne
enter
addl
mov
in
mov
ret
mov
insl
cltd
mov
rcrb
jg
mov
sub
into
out
ja
mov
lock
inc
ret
inc
rclb
xchg
arpl
sub
aam
jnp
pop
xchg
fdivl
fidivl
jns
adc
je
push
cmp
jmp
sub
rol
jg
and
adc
negl
aad
ret
lret
aas
scas
jo,pn
mov
sti
sub
and
cmp
adc
cmp
pop
cmpsl
adc
cmp
loope
enter
repz
inc
scas
dec
lcall
sub
stc
aad
sti
in
cld
pop
cmpsl
sbb
je
and
cmp
cmp
or
jmp
mul
movb
xchg
and
aam
jo
jae
push
sbb
sbb
xor
pop
cmpsl
or
sub
xor
cmpsl
fwait
push
aas
outsl
stos
mov
or
mov
lds
roll
jnp
mov
cmp
int3
pop
pusha
scas
dec
rorb
test
cmpsl
ficoml
das
xor
cmpsb
adc
lods
sub
xor
stos
gs
ret
jle
mov
dec
lods
sub
or
mov
xchg
mov
pop
cwtl
mov
faddl
je
jmp
imul
push
pop
dec
push
jo
cmc
mov
cmpsl
inc
jl
clc
iret
bnd
in
cltd
xor
cmpsb
xchg
out
in
mov
and
scas
cmp
dec
pop
cmpsl
push
xchg
mov
fstpl
nop
mov
sbb
push
mov
fwait
cmpsl
jmp
jecxz
sub
mov
dec
rcll
jmp
arpl
cmpsl
sub
adc
mov
test
mov
push
push
inc
je
ret
jnp
and
aam
jle
out
shl
cmpsl
xor
cmp
stos
dec
in
cmpsl
ret
clc
xchg
int3
in
imull
mov
in
testb
mov
push
cmpsl
add
loop
push
hlt
cmpsl
push
xor
outsl
mov
push
cmpsl
adc
mov
nop
mov
lret
test
pushf
outsb
jmp
mov
into
jle
sub
or
fcmovb
adc
xchg
push
xor
mov
jmp
xor
mov
iret
mov
push
or
lret
inc
lret
pop
cmp
adc
pop
add
cmpsb
sbb
add
push
jae
adc
aaa
jbe
pop
pmaddwd
xchg
sar
rclb
lea
adc
nop
mov
jmp
adcb
push
sarb
xchg
push
push
add
cmp
sub
xchg
inc
pushf
aaa
fcmovnu
hlt
sbb
es
int3
jno
loop
movsl
and
or
adc
enter
fcmovnb
push
sbb
or
out
enter
arpl
lret
and
loopne
in
ja
add
inc
in
mov
aaa
loop
sbb
jle
cmc
xchg
mov
aad
insb
repnz
ret
mov
outsb
imul
or
repnz
into
pop
scas
cmpsb
cld
addr16
xor
mov
negl
push
inc
xlat
jg
es
inc
or
negl
orb
pop
js
loopne
jns
mov
xor
pop
shll
flds
jle
shl
fists
and
mov
mov
adc
enter
dec
xor
loop
in
fisubs
lds
push
dec
dec
jns
es
mov
xor
cmp
in
lds
jmp
dec
repnz
out
dec
dec
loop
mov
inc
notb
sbb
gs
add
loop
out
mov
lcall
ds
mov
mov
mov
or
push
push
faddl
sub
mov
xchg
fcmovnu
push
nop
push
js
loopne
sbb
aad
clc
jbe
mov
cmp
js
cmp
pop
out
dec
mov
push
pop
jmp
stos
cmpsl
mov
adc
pop
shrb
or
pop
lea
repnz
hlt
xchg
jg
xchg
test
scas
mov
xchg
cmc
out
or
seta
xchg
scas
cmp
mov
dec
jmp
sub
fwait
dec
pop
jmp
mov
pop
das
std
sbb
addl
jno
push
dec
pop
sbb
xchg
cmpsl
jge
les
out
mov
dec
inc
xor
and
inc
push
mov
mov
ja
push
mov
orb
int3
adc
mov
icebp
mov
xor
stc
ljmp
xchg
stc
mov
jb
or
or
cs
and
inc
xchg
ficoml
or
cld
cwtl
inc
cmp
test
sar
xchg
roll
adc
das
addr16
add
loopne,pt
mov
mov
bound
xor
ljmp
add
movsb
xor
scas
cld
test
cli
jl
mov
addb
mov
clc
lret
hlt
sub
cmc
fmul
push
mov
aaa
or
add
dec
xchg
xlat
push
in
dec
inc
pop
pusha
sbbl
out
mov
add
out
xchg
cld
mov
loopne
out
fisubrs
fs
into
xchg
dec
aam
pusha
insl
aas
and
loopne
hlt
stos
ret
cwtl
mov
sub
mov
sbb
ja
push
lock
rolb
mov
movb
adc
mov
sbb
mov
sub
mov
mov
or
stos
mov
sbb
mov
popa
arpl
cmp
loopne
jne
into
es
pop
dec
mov
push
jno
hlt
stos
cmpsb
sbb
mov
push
add
push
arpl
out
ljmp
cwtl
sbb
dec
pushf
divb
ret
ds
mov
pop
push
imul
cs
bound
test
in
xchg
lods
loopne
mov
mov
pusha
in
and
jnp
xor
das
rcrb
popf
push
mov
mov
push
roll
mov
and
cs
pop
pop
ds
ja
dec
xor
push
stc
pop
movsl
push
xor
mov
test
mov
jle
push
iret
lea
iret
cmp
mov
scas
dec
add
cltd
mov
cmp
inc
mov
jmp
cmpsb
xor
sbb
ds
fldt
xor
add
mov
ljmp
ds
cmc
pushf
cmp
mov
outsl
mov
pop
push
pop
sub
or
xor
sbb
sbb
sarb
or
test
enter
inc
lods
imul
xchg
xor
sub
xor
sub
mov
mov
ror
mov
mov
add
add
mov
cmpsl
shlb
loop
loop
push
movhps
stos
mov
insl
lahf
fidivrl
xor
lds
sbb
cltd
sub
faddl
cmp
xchg
pop
in
test
stos
std
push
and
mov
cmp
and
push
cmp
mov
jle
cmpsb
stos
shll
loop
loopne
repnz
orl
lea
jns
or
lcall
loop
loop
stos
xchg
sbb
mov
std
mov
push
mov
inc
add
dec
ja
lds
sub
fidivrs
call
sbb
cld
loop
mov
mov
mov
aam
xchg
push
int3
arpl
clc
insb
pushl
mov
mov
stos
cmpsb
cmpsb
mov
push
loopne
rclb
add
mov
insl
cltd
mov
ret
cmp
and
adc
sbb
mov
and
cld
nop
cmp
sub
dec
ss
sbb
mov
mov
xchg
push
test
mov
jb
mov
sbb
sbbl
ljmp
mov
or
push
adc
dec
js
int3
cmp
mov
mov
aam
and
lret
fcomps
add
mov
jle
mov
lea
mov
cmp
adc
loop
lcall
sbb
lds
mov
inc
xchg
lock
rolb
and
cmp
test
xchg
or
dec
sub
xchg
and
push
cmp
sub
jbe
mov
add
inc
xor
movsb
int3
sbb
mov
pextrw
ja
fldt
mov
lret
xor
ljmp
arpl
push
mov
mov
lea
and
ljmp
sahf
mov
cmp
xor
push
lret
lret
das
inc
sub
insb
pop
jle
enter
ljmp
xchg
sub
cld
add
mov
ret
xor
aam
lods
lret
out
lahf
aad
sar
arpl
iret
cld
ror
into
aas
mov
lds
xlat
clc
mov
mov
shr
jnp
add
mov
incb
and
frstor
cld
add
pop
clc
add
jns
add
fidivl
xorb
inc
add
in
lahf
out
and
push
pusha
lcall
sub
loopne
call
repnz
aam
sahf
test
movsb
push
push
pop
mov
data16
mov
aad
call
sahf
and
mov
ret
pusha
sar
adc
push
or
inc
mov
aam
cmp
inc
nop
cmpsl
cltd
xor
rclb
pop
adc
inc
push
cwtl
add
repnz
shlb
incl
outsb
aas
cmpsb
or
lock
ds
add
or
pop
inc
enter
adc
mul
sti
andl
sub
negb
stos
add
and
add
mov
fcmovbe
mov
pop
pop
add
pop
jo
fsubr
aam
sbb
mov
or
mov
faddp
xor
sahf
pusha
fisubl
std
mov
xor
ja
cmp
sahf
and
mov
in
sub
mov
ss
add
xchg
call
ds
das
cmpsb
pusha
pop
or
rorb
lods
jge
push
loopne
repnz
in
test
daa
xchg
add
insb
pusha
inc
dec
ss
std
sbb
mov
loopne
ret
mov
sarl
mov
shlb
clc
jle
mov
xor
inc
and
ljmp
mov
pop
pop
into
ljmp
movsb
nop
pop
or
and
movsl
mov
and
scas
int
movsl
jg
mov
aam
outsb
pop
mov
int
mov
lahf
jl
dec
into
mov
inc
jp
mov
jp
pop
and
add
ljmp
out
inc
sbb
jo
hlt
stos
mov
sbb
out
stc
add
enter
dec
inc
mov
and
addr16
mov
mov
mov
insl
cltd
xor
add
fidivrs
push
insb
cmc
nop
add
adc
test
mov
nop
add
test
add
icebp
mov
ja
sarb
sub
inc
pop
outsb
inc
and
sti
out
sti
dec
je
pop
dec
decl
mov
je
mov
jb
sbb
jb
std
shll
cmc
aas
stc
aaa
jo
lds
push
inc
push
in
cltd
pop
pop
sub
adc
add
lds
sbbl
bound
sbb
sub
pop
dec
add
outsb
cmpsl
add
in
push
inc
loop
fcompl
fstl
lahf
inc
fisubrl
pop
std
dec
pop
add
inc
mov
lcall
ds
mov
leave
mov
insl
lahf
cs
loopne
sbb
dec
daa
inc
xor
push
dec
fucom
xor
mov
stos
in
pop
adc
or
jg
loope
lret
jmp
mov
cmp
ret
movsl
int3
add
addr16
xor
jmp
jg
adc
sbb
aad
inc
and
rorb
and
clc
pop
mov
jb
mov
xchg
lret
dec
jmp
push
fsts
pusha
pushl
outsb
push
or
mov
push
xlat
push
out
lret
xor
int3
fs
aas
and
scas
out
mov
out
pushf
inc
jae
sub
jo
ds
aam
dec
xor
or
or
cli
xchg
repz
jmp
lds
loopne
xor
pushl
sub
mov
movsl
pop
add
sbb
inc
adc
cmp
xor
movsl
add
loop
pop
arpl
hlt
stos
shlb
push
bound
fsubrs
mov
mov
insl
lahf
mov
enter
imul
imul
stos
rolb
imul
pop
xorl
mov
sbb
add
dec
lahf
pop
scas
or
aad
iret
inc
mov
rol
lock
cmc
std
out
xor
outsl
cwtl
pop
pop
lock
push
nop
add
lret
and
cmpsl
fs
dec
xor
xchg
scas
push
dec
xor
xchg
nop
les
push
mulb
and
add
pop
jle
add
xchg
sub
sub
cmp
out
roll
fidivrl
rcrb
lds
jbe
sub
jecxz
and
xlat
inc
std
ss
fidivl
sub
ret
sarb
mov
lcall
jle
not
sub
push
dec
into
fidivl
in
roll
arpl
test
xchg
xor
adc
jae
lret
cmp
das
call
sub
pop
adc
mov
stos
push
sub
in
cmpsb
test
rorb
enter
pushf
fnstsw
dec
in
dec
inc
stos
mov
rclb
fdivp
cmp
insb
cmc
clc
pushf
and
mov
sub
mov
add
dec
pop
sbb
shl
repz
mov
daa
ds
mov
mov
sarb
idiv
sub
aas
int3
into
aad
loopne
sbb
add
fcomi
cld
sub
out
inc
loopne
fnstcw
int
stos
shrl
sub
xlat
and
int3
mov
mov
pushf
pushf
xor
push
popf
into
jecxz,pn
inc
mov
mov
lret
sbb
mov
in
add
mov
push
mov
loopne
mov
and
loop
mov
lret
imul
mov
xchg
adc
mov
shl
leave
adc
ss
mov
enter
mov
and
mov
pop
loopne
mov
and
sub
xor
push
mov
xor
int
or
mov
dec
arpl
mov
push
xchg
out
jo
jl
xchg
inc
sub
das
adc
mov
fcoml
scas
jg
pop
xchg
movsl
js
out
push
inc
mov
test
fsubrl
xorl
pop
pop
mov
push
or
notl
popa
mov
pop
jle
cwtl
pop
mov
pop
mov
bound
jle
sbbb
aam
int3
or
rorb
or
and
inc
gs
or
adc
dec
sub
and
imul
ds
sub
and
inc
or
cmovb
inc
cmp
shrb
rorl
sbb
scas
ret
in
mov
notb
xor
sub
aam
sarb
cmc
sbb
loop
xlat
std
push
or
add
rolb
mov
push
das
or
mov
inc
stc
sti
ds
xor
pusha
test
xchg
xor
pop
jno
xor
jmp
test
sbb
or
dec
jg
xor
movsb
xchg
add
lcall
mov
xor
out
popa
sbb
ja
pop
or
insl
lret
shll
adc
insl
cmpsb
dec
into
aad
add
mov
loopne
sti
or
clc
popa
xchg
cmpsb
xchg
add
js
fadd
pop
jnp
xchg
cs
mov
dec
aad
adc
sub
xchg
in
rol
push
xchg
imul
int3
hlt
stos
clc
inc
aad
cmp
xor
hlt
stos
in
icebp
aam
xchg
pushl
div
sub
orb
mov
repnz
in
mov
je
ror
lock
mov
add
into
mov
loopne
sbb
mov
push
outsl
xor
cmp
rolb
test
out
cmc
sbb
dec
mov
xor
addb
popf
ret
fdiv
mov
ror
mov
inc
repz
and
std
popa
inc
inc
loop
shll
mov
mov
testl
or
sub
adc
inc
inc
mov
add
push
push
andb
or
rolb
fisubs
outsb
in
push
xor
mov
mov
rolb
faddl
or
cmp
mov
cli
or
jo
inc
jbe
cltd
out
loop
cmp
shlb
loop
cwtl
fldcw
insb
pushl
rolb
mov
int3
cmp
lock
cmp
loopne
aam
inc
testl
cmp
clc
lret
sub
insb
aad
frstor
cmp
je
jns
adc
into
insl
lahf
mov
repnz
lods
xor
sbb
mov
mov
mov
fisttps
add
ds
sbb
inc
jo
xor
rolb
repnz
jp
inc
loop
pop
pop
cld
inc
mov
gs
cmp
push
in
cmpsl
or
stos
call
jae
daa
inc
mov
cmpsl
xchg
and
subl
jae
sbb
lcall
pop
ss
mov
sub
je
adc
lods
sub
jmp
and
loop
mov
pop
and
sub
mov
push
aas
into
xor
sbb
xor
mov
dec
into
and
jb
test
cmpsl
sbb
mov
popa
stos
inc
inc
repz
dec
and
cmp
mov
and
jb
add
test
or
jbe
sub
sbb
ret
incl
mov
into
jae
cmpsl
jle
nop
mov
mov
mov
fcoml
push
inc
jae
cmpsl
mov
out
loope
push
push
cmpsl
xchg
inc
lods
lret
mov
hlt
ds
xchg
ficoms
addb
dec
sub
pop
jl
sub
in
xchg
mov
inc
inc
ret
jae
pop
and
adc
or
call
dec
xchg
rorb
jae
loopne
jl
cmpsl
mov
gs
or
xor
and
mov
repnz
jnp
ljmp
sbb
fld
mov
cmp
jae
nop
mov
push
cmp
cmpsb
es
jnp
mov
inc
nop
ljmp
in
aaa
std
pop
mov
pop
icebp
push
inc
js
pop
sub
dec
cmpsb
sbb
adc
mov
lods
mov
cmp
mov
stos
bound
hlt
xchg
ret
fwait
dec
inc
pusha
xchg
or
sub
and
mov
or
ss
mov
ret
mov
fbld
fcoml
sbb
push
cmpsb
sbb
stos
hlt
int3
shll
in
rorl
push
mov
cmpsl
jecxz
enter
jae
jg
cmpsl
popf
or
mov
out
add
rcrl
add
sbb
stc
push
ret
mov
sub
jge
shrl
jp
sub
ret
and
dec
movsb
cwtl
mul
push
sbb
test
dec
hlt
mov
cmpsl
out
fdecstp
insb
xchg
cmpsl
loopne
pop
pop
adc
repnz
jmp
jae
scas
or
add
pop
cmpsl
testl
pop
call
or
pushf
adc
leave
mov
sbb
test
dec
cmpsl
pop
adc
stos
nop
or
and
push
jb
movsb
icebp
jle
std
mov
es
imul
mov
mov
and
mov
and
and
bound
test
add
add
fldl
leave
rcr
push
inc
pop
push
jne
sbb
imul
push
imul
pop
je
push
push
push
fidivl
xor
pop
js
adc
dec
wbinvd
and
aad
iret
and
and
mov
insl
lahf
out
lret
or
ret
adc
loopne
movsl
jbe
ret
xor
mov
shrb
insl
data16
into
in
mov
mov
xchg
xor
mov
das
xor
lahf
aam
shlb
in
ror
sbb
ss
test
cmc
pop
or
cmp
imul
dec
repz
mov
or
ret
cmp
loop
sub
sub
out
ljmp
pop
jg
jbe
adcl
cmpsl
leave
mov
dec
mov
addr16
fucomip
sbb
adc
push
loop
jb
and
shrb
movsl
ret
lret
jns
fcmovb
sub
sub
cli
lods
shlb
mov
dec
mov
cld
push
push
imul
pop
aam
test
mov
mov
call
mov
stos
rolb
mov
push
stos
pop
fnsetpm(287
cs
lods
add
aaa
rorb
xchg
fwait
adc
adc
aaa
sub
xor
std
pusha
push
outsl
test
nop
mov
jo
sub
pop
jae
push
mov
pop
pop
dec
loop
add
jb
leave
mov
cli
mov
mov
ljmp
outsl
test
sbb
push
add
jns
jne
clc
xor
lret
and
xchg
jle
cmpsl
push
mov
mov
xor
pop
add
mov
cmpsl
int3
push
rcr
lret
loop
dec
rcll
cmpsb
mov
lods
mov
add
mov
jbe
adc
popa
and
lret
fs
rcr
lret
test
jo
fidivrl
add
dec
repz
push
jae
mov
xchg
scas
pop
xor
insl
clc
std
dec
pop
incb
push
or
xlat
push
movsl
ficomps
or
push
push
or
sub
and
push
outsb
add
and
outsl
or
out
push
outsb
ljmp
sub
fcoms
orl
cmpb
movsb
das
loopne
shrb
movb
dec
xchg
mov
mov
lret
push
mov
daa
pop
mov
xchg
dec
cmp
inc
arpl
mov
add
mov
cld
push
pop
push
xchg
jl
loope
adc
push
rcl
lcall
pop
adc
es
out
sbb
mov
or
fists
jg
pop
repnz
or
jp
dec
sahf
divb
sub
fldenv
xchg
fdivl
add
dec
xchg
mov
pop
adc
and
enter
push
sarb
sub
push
jne
mov
insl
lahf
add
aaa
dec
popa
and
ja
ja
in
and
clc
add
sbb
push
call
leave
sar
jno
jbe
jle
mov
mov
pop
jle
adc
adc
ja
inc
rolb
mov
sbb
adc
clc
loope
movlps
xchg
push
dec
add
jg
sub
repnz
mov
into
sbb
xchg
setbe
lahf
push
cltd
out
and
je
push
pop
and
push
dec
shll
pushf
repnz
push
add
pushf
hlt
adc
push
dec
lds
xchg
or
repnz
and
dec
outsb
mov
or
lock
pop
jae
and
and
mov
cld
ret
xchg
sub
repz
lcall
xor
and
cmpsl
and
sbb
pop
sbb
push
xchg
add
lea
lds
xor
jo
ljmp
pop
dec
mov
push
push
inc
or
push
and
xor
sbb
mov
sbb
push
arpl
push
cs
fisttpll
or
lret
in
jl
scas
pop
cmp
and
daa
add
iret
pop
cmp
or
add
ds
jp
aaa
ljmp
and
or
imul
xchg
mov
mov
test
dec
mov
add
and
mov
push
mov
insb
mov
jecxz
daa
shlb
jno
ret
rcr
rorb
pop
jg
cmp
add
cmpsl
xchg
mov
sti
enter
loop
out
mov
cmp
mov
jp
fbstp
lret
rcll
push
mov
mov
cmp
or
movsb
cmp
push
mov
fmull
and
cmp
jmp
mov
mov
loopne
xchg
mov
ljmp
addr16
popf
scas
cld
test
mov
shr
lods
mov
jb
mov
cmp
jo
and
movsl
mov
inc
sar
lods
daa
fildll
sub
loope
sub
rcrl
sub
jle
cmp
mov
push
mov
std
scas
es
mov
imul
clc
inc
clc
je
lock
mov
ret
outsl
leave
mov
cld
mov
arpl
stos
loopne
inc
lock
loopne
ljmp
cmp
inc
sbb
shlb
and
push
fistps
add
cmp
adc
and
push
ret
sbb
and
add
jmp
lret
mov
mov
jbe
jmp
jmp
cmp
xchg
jle
divb
out
inc
add
push
ds
stos
loop
test
mov
xchg
stos
push
call
mov
xchg
inc
jp
lock
rclb
add
dec
xchg
lret
jne
inc
dec
mov
mov
popf
scas
add
loopne
jne
cmp
ss
jnp
sbb
sbb
in
push
int
sub
mov
xor
jae
mulb
add
or
lea
cmpsl
lret
dec
and
ds
sbb
bound
fsubrs
fdivs
loopne
sub
mov
inc
sbb
fcmovne
in
loop
xor
inc
add
pushf
out
sbb
mov
mov
test
mov
rcr
pusha
cld
and
or
add
ja
mov
shr
imul
sub
xor
call
addl
test
jle
scas
dec
sub
sbb
or
pushl
mov
sbb
negb
mov
stos
in
mov
mov
iret
mov
ja
xchg
mov
dec
shrb
mov
adc
mov
rorl
cmp
adc
mov
in
cmp
loop
inc
cmp
mov
inc
sbb
js
sub
mov
add
mov
insl
lahf
add
mov
rcrl
cmp
inc
inc
adc
add
cmp
out
inc
movsl
add
fistpll
dec
loopne
mov
shl
cmp
repz
pop
nop
das
rcrl
pop
test
call
mov
xor
fbld
out
add
push
add
bound
xor
xchg
into
and
mov
push
ds
or
inc
in
scas
add
add
dec
icebp
push
clc
push
adc
push
shr
sarb
mov
sarb
fiadds
mov
push
pop
rolb
mov
mov
mov
fimuls
inc
mov
pop
mov
mov
adc
adc
loop
or
add
inc
rcrb
push
xchg
je
adc
cmp
adc
cld
nop
rcrb
lds
dec
mov
or
fistpl
in
ljmp
mov
jns
mov
mov
fildl
filds
in
mov
add
mov
or
mov
popf
scas
add
mov
cmp
jmp
data16
or
dec
mov
pop
mov
shrl
xor
rcrb
testb
pusha
jne
dec
arpl
cmp
mov
inc
mov
mov
jo
aaa
cli
jbe
ret
lret
sub
adc
adc
lods
jle
mov
pop
cmp
lret
clc
ljmp
mov
je
xchg
push
push
xor
xor
or
mov
ljmp
pusha
in
xor
fiadds
std
bound
mov
sub
rorb
test
jns
mov
xor
inc
lret
in
push
push
xor
loopne
lock
add
popf
cmp
push
shlb
inc
push
cltd
and
inc
loopne
loopne
ds
push
sbb
mov
push
mov
scas
push
aam
aaa
push
or
enter
lock
add
mov
and
fbld
xor
stos
sub
xchg
enter
jne
add
mov
lcall
insl
or
sub
dec
or
sbb
push
scas
mov
out
mov
dec
fmuls
out
bound
cmpl
int3
push
in
mov
add
mov
lock
xchg
adc
stc
cld
ss
icebp
add
push
cmp
hlt
pop
stos
add
xor
stos
inc
repnz
pop
inc
incb
lock
jo
hlt
stos
mov
dec
loopne
mov
mov
add
jg
mov
hlt
stos
mov
rcr
cwtl
cmp
rolb
cmp
arpl
cmpsb
ss
or
mov
xchg
ret
dec
fs
mov
fisubl
mov
fists
fsub
call
dec
shl
pop
mov
cmp
mov
enter
outsl
adc
lret
clc
test
xchg
inc
adcb
lret
ljmp
fs
icebp
adc
fdivrl
push
aaa
in
adc
mov
scas
fnstsw
fwait
pop
pop
out
shll
andb
push
push
xchg
out
out
add
ja
xchg
imul
rcrl
fwait
dec
cld
arpl
icebp
dec
lods
xchg
nop
pushl
mov
aas
inc
lock
lods
rcr
orl
cmc
cmpsl
int3
rclb
and
xchg
mov
xlat
popf
inc
mov
dec
xadd
mov
out
icebp
inc
mov
dec
in
imul
faddp
mov
loop
sub
pop
or
loop
mov
int
or
push
push
push
lods
push
stc
add
mov
cmp
inc
nop
test
and
pop
xchg
cmp
pusha
cmp
sub
test
inc
ret
cmpsb
xor
nop
jp
inc
in
xor
out
mov
adc
sbb
hlt
into
jne
aaa
mulb
inc
or
enter
mov
fiadds
nop
ret
push
std
inc
adc
add
cmpb
jbe
sahf
xchg
arpl
nop
mov
adc
or
aad
and
insl
fcmove
xchg
mov
mov
outsl
adc
lods
scas
imul
jne
pop
mov
fs
out
stos
cli
xor
or
jo
fnsave
gs
mov
dec
insl
neg
or
inc
imul
xchg
adc
mov
rorb
stos
call
lods
xor
push
shrl
push
ror
std
xchg
jne
repz
into
mov
jg
and
in
stos
pop
push
xchg
sub
aaa
mov
xchg
or
sub
push
sbb
out
daa
aad
push
cld
mov
into
and
xor
add
loop
cmpsb
inc
pop
and
mov
fimuls
fsubs
andb
inc
mov
cmpsl
loope
xchg
cmpsl
fiaddl
and
cli
jecxz,pt
cmpsl
jle
inc
add
push
cmpl
mov
jge
cmp
xchg
jg
notl
aaa
pop
cmpsl
jns
pop
jp
mov
cmp
fwait
sbb
pop
cmpsl
jl
mov
pop
bnd
loopne
test
dec
neg
mov
ret
loop
in
mov
and
lcall
mov
rol
loope
mov
mov
mov
sbb
bound
push
rcrb
sahf
js
les
ret
les
mov
dec
sahf
or
das
cmp
out
cmp
int3
lods
add
es
mov
cmpsl
pop
sahf
lods
inc
fldt
sub
pop
mov
das
jb
add
in
cmpl
mov
cmpsl
outsl
inc
clc
dec
xchg
cmpsl
fimull
testl
pop
lea
insl
aas
mov
mov
xchg
gs
mov
xchg
inc
sub
sbb
cmp
lea
cmpsl
xor
jno
sarb
cmpsl
add
and
popl
ds
adc
fnstenv
xchg
test
cmpsl
dec
push
test
lcall
roll
cmpsl
cmp
imul
cmpsl
and
pop
dec
cltd
aas
jnp
dec
lcall
fisubrl
and
mov
inc
cmpsl
aaa
test
arpl
cmpsl
int
ds
push
sarl
mov
cmp
push
sbb
cwtl
push
pop
repnz
int3
mov
inc
dec
les
pop
or
mov
pop
scas
dec
jg
sub
stc
lahf
xchg
sahf
popl
ja
xchg
cmpsl
cwtl
int
mov
or
lcall
mov
jp
int
jecxz
dec
ja,pt
push
mov
repz
dec
cmpsb
mov
cmp
popa
sub
xor
jl
test
fldcw
mov
xchg
fisttpl
aad
push
bound
cmpsl
adc
cmp
aaa
cmpsl
leave
lret
xchg
rclb
scas
and
mov
cmpsb
dec
mov
push
cmpsl
mov
fisttpl
add
je
xor
cmpsl
jecxz
and
insl
mov
mov
pop
repz
ret
pop
sbb
push
test
lods
adc
and
inc
or
ds
shlb
shll
sbb
xor
xlat
jns
scas
xchg
and
in
pop
ljmp
pushf
mov
stos
sub
inc
cmp
xchg
lods
aas
mov
idivb
popf
es
push
cmp
jae
shll
mov
mov
inc
pop
mov
sti
xchg
fsubrs
jmp
cmp
and
out
pop
rcrl
xor
mov
sbb
xchg
pop
mov
sbb
cwtl
je
mov
arpl
mov
jb
xor
cmpsl
std
mov
push
stc
xor
jecxz
inc
test
dec
out
sub
scas
cmp
cltd
daa
or
mov
aas
testb
inc
stos
and
insb
cmpsl
fs
cli
push
sti
addr16
push
sbb
mov
fsts
pop
cmpsb
mov
cltd
lock
cmpsb
mov
or
cmpsl
sub
in
mov
movsb
or
mov
call
lret
dec
jnp
outsl
insl
mov
jge
cmpsl
cwtl
es
lea
adc
pushf
cmpsl
mov
mov
out
scas
fwait
push
sbb
xchg
pop
mov
imul
cwtl
lret
mov
loope
xchg
or
xchg
cmpsl
in
cmp
adc
jecxz
cwtl
cmpsl
sbb
in
and
insb
cmpsl
js
xlat
lcall
cmp
jecxz
test
ljmp
test
sti
rorl
and
daa
push
push
ljmp
repz
dec
pop
push
out
mov
cmp
xor
lret
fwait
pop
xchg
sub
lahf
and
cmc
cmpsb
mov
fs
or
inc
push
daa
int
cwtl
fldcw
dec
pop
cmp
jmpw
cmpsl
push
sbb
sub
pop
pop
inc
test
push
push
fsubl
ret
and
stos
push
mov
aad
into
cmp
adc
cmp
shll
sub
pop
out
jmp
fnstsw
mov
fiaddl
in
add
cmp
lcall
lea
leave
and
xor
cmc
mov
or
imul
ret
jle
sub
int3
pop
lock
test
das
bound
pusha
lods
push
lahf
imul
mov
out
sbb
int
mov
pop
test
xchg
out
sbb
and
push
mov
pop
lahf
shrl
push
aad
dec
mov
jp
sub
lret
testl
sbb
cmpsl
dec
fstpl
out
shr
pusha
push
cmpsb
lahf
sub
xchg
fldt
jl
pop
and
cmpsl
enter
movsb
iret
pop
ja
mov
std
dec
lock
repnz
sbb
int
sub
and
cwtl
cs
pop
int3
push
pop
cmpsb
sub
inc
popf
cmpsl
insb
arpl
push
out
jne
xor
xchg
stos
xchg
push
mov
out
cmpsl
xor
xorb
jnp
cmpsl
stos
popa
push
adc
repz
ljmp
xchg
into
push
inc
jg,pn
mov
cmpsb
cmp
mov
rcrb
adc
in
xor
insb
mov
stos
push
ja
xor
arpl
xchg
push
cmpsl
jo
dec
ret
insb
dec
lret
dec
cmpsl
test
fdivs
mov
cld
out
in
insb
xchg
adc
push
push
jae
mov
xchg
scas
test
jge
cld
or
push
js
dec
cmpsl
or
cmp
push
pop
roll
repz
cmpsl
cmpsb
loope
or
aam
xorb
int3
mov
xor
cmpsl
pop
mov
sub
call
in
adc
pushf
stos
cmpsl
enter
push
mov
ret
cmp
in
mov
or
cmp
cmp
fisubs
sbbb
loope
sub
pop
pusha
leave
inc
lods
xchg
cmpsl
mov
jno
dec
insb
dec
scas
outsb
mov
outsl
cmpsb
inc
arpl
out
adc
js
shlb
fs
addr16
xlat
cmpsb
or
jge
xchg
fwait
outsl
mov
xor
sub
icebp
jne
jge
xor
insb
lahf
sub
in
xchg
call
pop
test
test
xchg
mov
es
xchg
cmpsl
sahf
int3
add
mov
jp
inc
jmp
fwait
mov
adc
xchg
enter
cmpsl
in
iret
jns
aad
mov
sub
add
cwtl
or
lods
mov
shrb
push
dec
add
cmpsl
in
mov
je
cmpsl
out
test
call
daa
sub
jg
ret
jbe
push
cli
ret
or
mov
sbb
js
andl
cwtl
xchg
mov
fs
ja
mov
lods
or
fnstcw
push
sub
test
in
cmpsl
cwtl
adc
pop
das
int3
sub
mov
out
pop
shrb
daa
mov
sbb
sub
mov
rorl
mov
push
jo
xlat
cmpsl
fs
aas
xor
xchg
sbb
cmpsl
test
add
or
cltd
fucom
mov
mov
xor
dec
or
test
inc
cmpsl
fs
lret
test
popa
int3
bound
data16
insb
dec
test
les
imulb
mov
push
or
xor
sub
imul
mov
lret
pushf
cmc
cmp
mov
test
pusha
push
xlat
xchg
cwtl
cmpsl
dec
js
sbb
in
pop
sub
mov
cmpsb
cld
test
mov
fnstcw
push
mov
cmpsl
push
fbld
ror
test
mov
cmp
push
lods
sbb
dec
stos
imul
daa
jmp
mov
nop
sti
pusha
cltd
push
out
test
pop
int3
iret
loope
fwait
inc
mov
inc
mov
pop
xor
imul
pop
jg
scas
faddl
inc
mov
cmpsl
mov
rorl
inc
dec
fmuls
pushf
cmpsl
fwait
jo
jl
add
int
in
and
push
cltd
sarl
lcall
scas
mov
out
mov
jecxz,pn
leave
xchg
or
data16
inc
cltd
fld
repz
sub
das
aad
xor
jnp
jnp
mov
mov
mov
cwtl
sub
cmpsl
cmp
and
mov
lcall
hlt
add
mov
shll
lret
popa
add
jne
insl
push
cmpsl
out
loop
movsb
sbb
add
jae
negl
and
cmc
insl
pop
and
into
pop
and
aas
mov
data16
pop
cmpsl
xor
lret
bound
sbb
sbb
push
push
in
cmpsl
bound
cmp
lods
cli
enterw
or
mov
and
mov
lahf
pusha
popf
cmpsl
push
or
mov
jnp
cmpsl
pop
mov
repz
push
clc
cmp
dec
xchg
sub
stos
cmpsb
outsb
jae
fldz
mov
neg
inc
lret
mov
idiv
rcl
and
rep
test
js
dec
in
nop
push
sahf
cmpsl
ror
push
lret
in
insl
mov
iret
pop
sub
or
jle
roll
mov
add
cmpsl
push
lcall
push
cmp
add
jae
sub
pop
cmpsb
in
pop
pop
and
hlt
addr16
imul
ja
or
jo
lods
js
sbb
sbb
adc
mov
cmpsl
xchg
dec
test
lods
call
fdivl
and
cmc
pop
cmpsl
fs
cmp
sbb
mov
dec
loope
mov
xchg
cmpsl
jns
pop
or
sub
cmp
sub
jo
mov
adc
push
cmp
xor
cmpsl
ds
int3
adc
fisttpl
movsb
popa
mov
pop
in
and
pushl
int3
jmp
cld
pop
jge
push
pop
sar
ret
rcll
adc
pushf
sub
or
into
jp
andb
fistpl
shll
push
add
mov
jno
xchg
in
cmpsl
pop
mov
ja
adc
pop
or
pop
lds
sub
lods
mov
loopne
mov
repz
cmpsl
psubusw
pop
xchg
lahf
pop
adc
test
test
sub
xchg
inc
mov
dec
mov
sub
sub
pop
icebp
cmpsb
loope
cltd
fisubs
and
cmp
mov
push
adc
jns
cmpsl
js
out
out
push
shrb
addb
jb
jo
aaa
pop
call
scas
jecxz
jmp
inc
imul
cltd
push
pushf
mov
adc
test
cmpsl
push
mov
pop
and
cmp
mov
lock
mov
xchg
sahf
cmpsl
stc
jle
jge
sub
cmpsl
push
bound
mov
cmpsl
dec
sbb
and
sbb
outsl
stos
cmpsl
mov
loop
pop
pop
cmpsl
pop
add
nop
lods
dec
mov
je
push
xchg
cmpsl
jg
sub
sti
sub
lods
cmpsl
mov
ds
cmpsl
insl
add
es
xchg
or
lcall
nop
pusha
mov
loop
es
and
cmp
push
popf
fidivl
cli
cmpsl
imul
call
cmpsl
fwait
aam
xor
mov
pop
jo
and
pop
pop
cmpsb
stc
aam
iret
nop
stos
notb
jge
mov
stos
mov
sub
jg
push
and
je
push
pop
int
mov
cmp
xchg
pop
jmp
fsts
loopne
test
fnsave
cmpsl
xchg
loop
and
cmpsl
jp
add
mov
and
in
push
mull
outsb
pop
inc
ljmp
mov
imul
mov
das
dec
cmpsl
adc
push
mov
scas
jge
dec
mov
in
daa
xchg
cli
xlat
cmpsl
std
push
cmpsl
imul
rorb
sub
cmc
dec
xchg
imul
subb
push
and
test
xchg
inc
outsb
push
push
sbbb
addr16
adc
mov
mov
jno
pop
cmpsb
lock
push
xchg
jnp
ljmp
adc
sbb
rcl
mov
imul
cmpsl
and
cwtl
pop
sub
shll
jo
sub
add
cmpsl
in
jle
js
into
cmpb
fldcw
movsb
call
and
mov
test
into
sbb
mov
pop
xchg
loop
jae
cmpsl
in
ja
xchg
stos
lods
jnp
cmpsl
in
cmpb
insl
out
sub
jg
imul
and
adc
dec
out
mov
orl
sbb
mov
pop
bound
arpl
cmpsl
jne
insl
aam
and
inc
cmpsl
jb
adcb
push
std
jbe
lahf
test
cmpsl
and
sub
mov
mov
out
aad
lahf
out
roll
shlb
sub
push
test
dec
cmp
fwait
and
lret
mov
jge
sbb
insl
xchg
mov
dec
jae
stc
lahf
jmp
idivb
push
stos
out
pop
jbe
es
sbb
cmp
test
push
sub
fistpl
stc
mov
bound
ds
pop
jno
mov
sub
cmc
test
roll
cltd
out
cld
sbb
jle
cmpsl
scas
jmp
pop
leave
out
fdivs
stc
rcl
out
lea
gs
ficoml
cmpsl
pushf
stos
mov
pushf
pop
sub
xchg
imul
je
push
and
movsb
sbb
sub
cmp
mov
or
ja
fdivl
or
cmpsl
sub
std
addr16
cmp
aaa
mov
inc
rcr
daa
dec
pop
lret
mov
add
and
lea
daa
inc
or
cmp
lahf
push
int3
sub
rcrl
pop
stos
inc
int3
mov
movsl
in
sbb
cmpsl
mov
aad
xlat
lods
mov
xor
xchg
hlt
xor
dec
push
rcrl
iret
inc
push
outsl
andb
jmp
movsb
dec
adc
gs
jns
cmpsb
fistl
cmp
into
xor
xchg
cmpsl
jle
and
icebp
mov
popf
inc
or
stos
aad
xor
push
cmpsb
push
lahf
jo
cmpsl
push
or
mov
add
and
orl
push
test
sbb
outsl
mov
sbb
leave
jl
cmp
push
cmpsl
sub
sbb
push
push
mov
cmpsl
xchg
sbb
mov
lds
js
dec
pop
test
or
insl
and
imul
test
jne
sub
outsb
cmp
leave
lret
mov
or
es
pop
jns
lds
xchg
jo
pop
inc
jg
sub
lods
cmpsb
inc
int3
xchg
xchg
jle
xchg
cmpsl
inc
scas
bound
fadds
xlat
cmpsl
gs
sti
pop
cmp
cmpsl
mov
imul
shrb
rorl
adc
bound
test
aad
xor
fcomps
call
pop
cmp
mov
jmp
sub
aas
cmpsl
mov
cmp
pushf
test
fnsave
mov
mov
cmpsl
sub
sbb
jmp
arpl
pop
xchg
movsb
push
and
cmpsl
mov
cwtl
insl
xchg
push
cmp
cmpsl
mov
cmpsl
out
fwait
mov
sarb
inc
xchg
push
or
mov
aas
ljmp
ds
push
cmpsl
lcall
cmpsl
mov
pop
and
adc
xchg
hlt
mov
test
add
loop
dec
sahf
cmpsl
push
cmp
test
jne
shlb
mov
sub
mov
jae
cmpsl
pop
inc
movsb
adc
and
popf
mov
sti
leave
sub
inc
pop
and
mov
insl
lcall
cmp
push
popf
cmpsl
mov
pop
mov
pop
mov
dec
adc
cmc
mov
nop
insl
inc
sbb
cmpsl
dec
and
mov
repnz
cmpsl
sarl
sub
jmp
ljmp
cmpsl
or
lret
lea
decb
and
aad
in
fidivrl
cmpsb
add
sub
xchg
cmpsl
xor
sub
mov
push
imul
xchg
fcmovb
mov
mov
inc
mov
jle
cmpsb
mov
sbb
cmpsl
and
mov
mov
xchg
dec
lods
adc
and
test
sub
xor
cmpsl
jbe
add
sub
push
cmp
xchg
mov
add
cmpsl
pop
scas
dec
lds
inc
cmpsl
outsb
in
xchg
stos
les
addr16
push
stc
rcll
mov
cmpsl
in
loope
mov
pusha
insl
lret
es
or
cli
sub
out
insb
shll
pop
sbb
negl
daa
aam
adc
lret
inc
mov
int3
cmp
cmpsb
or
mov
dec
scas
cmpsl
xchg
sub
aaa
xor
cmp
iret
pop
add
das
and
xchg
xchg
cmpsl
arpl
adc
cmc
cmpsl
xor
add
jge
in
cmp
out
jae
inc
xor
bound
rol
pop
pusha
test
jo
pop
mulb
aas
jge
stos
jno
and
popl
pop
add
jl
mov
jl
cmpsb
xchg
out
mov
jb
int
mov
pcmpgtw
push
lds
adc
shll
mov
push
rorb
cltd
mov
cmpsl
dec
jne
bound
mov
adcb
cmp
jmp
adc
mov
and
outsl
xchg
jno
add
cmpsb
in
pop
push
bound
test
mov
adc
cmc
leave
lret
mov
out
jp
sti
push
cmpsl
and
in
cmpsl
pop
push
lods
add
jne
cmpsl
daa
stos
sti
scas
repnz
mov
sbb
cmpsl
pop
pop
cli
push
lcall
cmpsb
mov
jae
fwait
jle
cmpsl
stos
xchg
and
mov
cmpsl
bound
negb
ljmp
sbb
cmpsl
pop
dec
xor
mov
lods
negl
subl
ljmp
mov
lock
mov
jns
cmpsl
jg
xchg
pop
cmpsl
sub
mov
outsb
popf
jl
cmpsl
add
jb
sbb
js
out
lret
shll
push
or
dec
cmpsl
xor
dec
cwtl
mov
jo
stos
mov
insl
sub
xor
sti
ljmp
mov
push
push
ret
mov
mov
xor
stos
leave
or
or
jl
cmpsl
cmp
xchg
das
fucom
orb
inc
fmull
push
cmpsl
jns
cs
imul
sbb
out
addr16
push
sub
cmc
test
xor
mov
cmpsl
push
lahf
lcall
dec
xchg
daa
add
sbb
mov
xor
leave
movsb
push
rorl
mov
sub
push
movsb
dec
cmp
mov
inc
mov
cld
jae
pop
notb
cmpsl
pop
cltd
jmp
dec
sub
pop
add
outsl
xor
dec
in
iret
js
daa
or
push
and
cmpsl
or
or
cmpsb
fs
movsl
sahf
inc
sub
std
push
dec
cmpsl
add
in
xor
cltd
cmpsl
xor
push
cmp
push
fwait
and
sahf
stos
cmpsl
cmp
test
enter
aaa
inc
mov
xchg
xchg
cmpsl
lea
lret
mov
mov
cmpsl
out
xchg
cmpsl
test
mov
outsb
xchg
inc
popf
mov
mov
push
push
xor
push
jmp
stos
aam
cmpsb
inc
mov
adc
outsb
fwait
dec
data16
pop
xor
scas
lret
inc
pop
mov
addr16
insb
fistpl
sub
mov
mov
push
jnp
mov
cmpsl
sub
pop
xor
repnz
xorl
test
cmpsl
daa
lahf
push
mov
xchg
cmpsl
jp
test
aad
gs
cs
push
mov
or
push
jae
lods
clc
and
std
or
ljmp
lret
mov
insb
xchg
int3
adc
test
loope
lds
test
jmp
inc
andb
les
xchg
mov
lods
jl
inc
mov
mov
daa
sbb
sub
sub
mov
popf
sbb
and
cmpsl
and
fbstp
shll
jnp
imul
mov
jne
xor
xor
mov
cmpsb
cmp
icebp
hlt
mov
adcb
jle
insb
push
pop
sub
fbld
mov
mov
stos
mov
test
lods
xchg
mov
and
jle
in
mov
push
out
scas
jl
xor
inc
cmpsl
add
xor
ret
popf
lods
cmp
rol
add
push
xor
test
push
cmpsl
pop
and
mov
push
in
test
roll
xor
jg
xor
push
cmpsb
xchg
sub
fs
fwait
jecxz
shrl
push
and
stos
cmpsb
test
fs
lret
inc
cmpsl
repz
sahf
cmpsb
out
cmp
pushf
adc
xorb
pop
mov
scas
sbb
rep
arpl
add
cmc
xor
out
lods
push
insl
push
lods
cmpsl
dec
outsb
inc
lcall
add
push
insb
lods
insl
mov
shlb
mov
sarl
sti
enter
ss
pushl
icebp
es
pop
mov
cmpsl
lahf
test
jae
stos
mov
cmp
aad
jp
pop
cmpsl
push
scas
pop
sub
cmc
mov
cmpsl
xchg
or
decb
daa
in
cli
roll
sbb
cmp
inc
xor
push
pop
mov
popf
lret
pop
mov
data16
shrb
dec
rcll
lea
cmpsb
xor
pop
cmpsl
fwait
popf
xlat
cmp
aam
es
pop
sub
xor
xchg
push
sti
lock
lret
popf
imul
loope
popa
loop
insb
sbb
int3
scas
cmp
xlat
inc
pushf
xor
jno
mov
push
daa
out
and
push
cmpsl
push
inc
dec
inc
mov
mov
mov
sbb
push
repnz
push
cli
and
out
adc
sbb
shr
popa
lock
rol
sbb
rcrb
enter
lds
mov
cltd
and
rorb
and
mov
mov
out
inc
icebp
push
and
add
lds
jg
pop
xchg
js
ja
inc
shll
pop
add
loopne
ret
es
mov
sbb
repnz
shll
push
pop
mov
stos
jl
pop
test
ret
fcmovnb
fimuls
aam
ffreep
push
inc
mov
cmp
mov
cwtl
mull
xchg
sahf
popa
and
iret
pop
sti
js
inc
mov
dec
js
jp
cmp
cmc
mov
jl
divl
out
repz
cwtl
js
pop
mov
iret
rorl
mov
mov
enter
outsb
jo
jns
inc
out
jmp
xor
inc
mov
fmulp
cmp
adc
inc
add
sbbb
mov
aad
mov
movsl
dec
or
int
loop
repnz
mov
cmpsl
pop
mov
pop
cmp
dec
test
loop
inc
movsb
jl
mov
xchg
cmp
lret
sahf
mov
movsb
mov
sub
lock
mov
inc
or
hlt
mov
jl
adc
int3
shll
fmull
mov
addr16
rorl
jbe
or
pop
enter
inc
scas
psubusw
loopne
inc
cmp
lock
dec
mov
pushl
ss
icebp
sub
fisttpll
fcmove
add
fstpl
aam
jge
jbe
jecxz
inc
mul
push
lods
sub
adcl
mov
into
inc
cwtl
dec
and
sarb
fsubl
data16
jo
sub
aas
addr16
or
loope
add
arpl
jne
int3
mov
mov
mov
mov
mov
mov
mov
mov
shlb
add
fs
inc
jmp
repnz
inc
and
andb
sahf
add
xor
mov
jl
pop
mov
sbb
leave
fsubr
out
test
js
out
daa
cmpsb
dec
sub
test
sahf
sub
pop
sbb
lds
call
arpl
xchg
push
xor
sub
sub
cs
xor
xchg
mov
out
mov
addr16
mov
add
xchg
mov
insb
fcompl
adc
and
or
cs
push
cld
jp
mov
pushf
mov
mov
inc
jle
xor
popa
cmp
call
pushf
ret
or
xchg
jl
hlt
xor
clts
and
sbb
cmp
and
mov
push
adc
push
fistl
fs
push
mov
mov
das
adc
out
imul
pop
in
mov
sbb
in
and
push
xor
push
fwait
js
and
rolb
scas
bnd
cld
js
mov
repnz
pushf
out
mov
iret
arpl
aas
sub
and
repz
cs
out
add
out
xor
fmull
jbe
or
push
inc
outsb
repnz
jbe
jo
mov
jo
sbb
test
dec
add
test
and
iret
xor
sub
js
sub
ss
sbb
movhlps
cmp
sub
sbb
nop
cmpsb
int3
xor
xchg
js
ljmp
lahf
mov
add
mov
psubusb
lret
leave
add
ja
jg
sub
jo
mov
sbb
or
jb
xchg
call
adc
cmp
or
sub
mov
lds
xor
push
repz
into
movsl
js
hlt
adc
sub
inc
mov
fdivs
wrmsr
sub
adc
outsb
sbb
jle
adc
decl
xor
mov
icebp
inc
jae
cs
pop
mov
mov
iret
push
push
xchg
mov
dec
popa
sub
icebp
rolb
dec
pusha
xchg
mov
xchg
push
and
xlat
add
push
push
xor
cs
lds
sarb
or
xchg
cmc
add
loop
push
and
neg
pusha
add
adc
stos
sub
shrb
je
mov
ficompl
add
mov
xchg
add
cmp
js
mov
pop
inc
aad
imul
add
repnz
cmpsl
mov
mov
shrb
hlt
aam
test
test
sbb
mov
lods
subl
movsl
sahf
mov
sub
cwtl
xchg
loop
or
add
and
cmpsl
inc
and
rcrb
fisubl
popa
mov
inc
lcall
xchg
cmpsl
push
mov
sbb
cmpsl
andl
cmpsl
pop
movsb
cmp
sbb
test
sub
cmpsl
repnz
andl
mov
cmpsl
jge
push
jp
cwtl
adc
imul
pop
imul
sub
cmp
inc
imul
fildl
xor
fwait
xor
sbb
loopne
push
outsb
and
dec
fmull
loop
and
in
and
inc
rolb
fsubs
sbb
rcrb
inc
decb
inc
ret
mov
push
push
mov
sbb
pop
sbb
cmpsl
jle
shlb
add
pop
sbb
mov
adc
sbb
imul
mov
sub
jbe
xchg
mov
cmc
adc
xchg
xor
nop
mov
out
cmpsl
comiss
xchg
mov
xor
shl
adc
fcoml
xchg
mov
xchg
adc
sub
cmpsl
push
push
pop
shl
sti
out
xchg
mov
push
mov
sbb
lods
xor
cmpsl
test
mov
ret
rclb
xor
setg
xchg
stos
addr16
jns
lods
dec
cmpsb
mov
mov
rolb
out
fadds
and
jns
jge
xor
mov
and
inc
into
inc
cmp
test
xor
xchg
mov
test
sarl
jmp
flds
cmp
dec
imul
fwait
add
jecxz
cmpsl
cmp
repz
adc
icebp
xor
cmpsl
stc
or
mov
cmpsl
sbb
jns
pop
mov
or
subb
fisubrl
xchg
add
pop
es
cli
out
cmp
inc
mov
fsubrl
pop
jl
roll
cmpsl
aaa
push
cli
adcb
pop
scas
mov
and
and
sbb
push
inc
shll
xor
data16
pop
cmpsl
mov
hlt
test
dec
push
add
mov
jbe
ja
jb
add
cltd
data16
or
mov
outsl
push
sub
push
cmpsb
jmp
fwait
mov
pop
dec
pop
pop
outsl
mov
adc
mov
push
pop
cmpsl
shl
ficompl
xchg
out
cmpsl
jg
mov
inc
vphaddbw
mov
lahf
sbb
cmpsl
mov
sahf
lock
sbb
scas
int3
out
jge
imul
add
fs
arpl
sub
cmp
mov
ret
or
push
je
fcmovne
xchg
sbb
xchg
mov
xor
in
icebp
jmp
cltd
test
je
xchg
sbb
mov
and
popf
xchg
cmpsl
cmp
jno
lret
pop
andl
pop
mov
mov
cmpsl
push
pminub
add
xchg
push
cmpsb
test
sarb
aam
sar
dec
jno
cmpsl
push
add
xchg
daa
je
and
pop
fisubrs
rclb
push
mov
pop
aad
shll
and
idivl
cmc
xchg
jle
or
sbb
cmpsl
fdivr
lock
mov
nop
test
jns
out
cmpsl
stc
push
xchg
or
sbb
pop
cmpsl
popa
mov
lret
out
jns,pn
adc
mov
cmpsl
mov
or
data16
cmpsl
xchg
or
jns
jg
xchg
stos
cmpsl
and
fnstcw
sti
or
cmpsl
mov
mov
or
cmpsl
cmp
jnp
addr16
stc
jno
aad
mov
push
adc
ror
xchg
aaa
add
cmpsb
jp
mov
sbb
cwtl
sbbl
out
cmovle
mov
or
and
jg
cmp
dec
fucom
ret
dec
pop
stos
pop
cmpsl
dec
lea
xor
ror
mov
mov
in
mov
loope
test
cmpsb
fcmovbe
add
ret
out
cmpsl
call
cmpsl
movsb
mov
dec
xchg
imul
add
shr
cmp
subb
jl
outsl
cmpsl
push
aam
mov
and
add
scas
xor
cmpsl
lret
xlat
jg
mov
push
js
in
push
imul
cmpsl
dec
add
mov
cmpsl
ret
dec
lcall
outsb
xor
cmpsl
mov
fcomps
push
cmpsl
pusha
add
in
xchg
jp
adc
sbb
cmpsl
fbstp
stos
inc
movsb
cmpsb
cmpsl
imul
cmpsl
pop
movb
dec
js
sub
or
cmpsl
ja
pushf
popa
lcall
out
push
andb
cmpsl
dec
push
in
dec
jle
mov
nop
fcomip
add
push
cmpsl
adc
sub
adc
cmpsw
int3
test
push
imul
loopne
mov
ds
sub
out
scas
test
repz
push
nop
jnp
test
inc
cmpsl
dec
cmp
cs
lret
and
addr16
xor
mov
addb
das
repz
sbb
cltd
push
outsl
or
jecxz
or
cmpsl
mov
push
mov
andb
cmpsl
mov
pop
ret
sub
cld
pop
sub
js
shll
out
xlat
inc
cmp
inc
push
lahf
xchg
push
adc
aas
lods
mov
outsb
mov
mov
xchg
xor
cmpsl
outsb
loop
push
cmpsl
jg
bswap
dec
pop
push
lcall
sub
stos
data16
or
fscale
push
pop
cmpsl
aas
icebp
sbb
cmpsl
xchg
fs
adc
inc
xchg
aam
sub
mov
stos
inc
imul
mov
sub
and
pop
cmpsl
inc
pop
xchg
jle
jp
xchg
cmpsl
mov
ljmp
fistpl
icebp
sbb
mov
mov
mov
dec
adc
pop
cmpsl
xor
jae
js
mov
mov
scas
cmpsb
cmpsb
jbe
insl
xchg
mov
mov
inc
scas
daa
outsb
push
mov
arpl
and
mov
pop
push
ja
xchg
ffree
cmpl
cmpsl
mov
je
xor
int
orl
imul
jmp
jne
sub
cmpsl
ret
add
xchg
adc
imul
pop
xchg
xor
dec
sbbb
adc
scas
or
cmpsl
add
inc
nop
mov
adc
ret
xchg
add
das
cmpsl
push
push
sbb
push
test
mov
adc
mov
scas
insb
jl
je
cmpsl
mov
inc
call
cmpsl
push
fs
jge
lods
aaa
shr
adc
jg
mov
scas
push
movl
shrb
popa
pop
cmpsl
mov
pop
mov
loope
in
sti
sub
add
or
stos
stos
cmpsl
xor
pop
lods
rcr
fwait
cmpsl
jecxz
je
mov
jno
icebp
stos
jmp
jl
jge
lds
cmpsl
push
pop
sbb
cmp
mov
xor
xchg
xor
add
mov
dec
mov
mov
xchg
xor
push
jnp
xlat
or
push
lret
push
cmp
aaa
inc
cmpsb
pop
lods
sbb
and
out
inc
lods
xchg
mov
lret
xchg
sub
push
jl
cs
jns
fs
lahf
jnp
mov
pop
cmp
mov
xchg
push
cmpsl
mov
addr16
mov
aas
add
jmp
and
cmpsl
pop
mov
xor
lret
sub
push
mov
mov
cmpsl
mov
xor
jge
or
daa
pop
insb
cmpsl
insl
inc
clc
stos
fstps
mov
subb
sahf
outsb
pushf
sti
aaa
mov
sub
cmpsb
sbb
cmpsl
leave
push
clc
cli
pop
testl
jmp
imul
lea
xor
cmpsl
cwtl
cld
push
push
es
cmpsl
fs
dec
loop
dec
or
add
fldenv
mov
test
int
js
fimull
or
loope
cmove
mov
lock
dec
jne
divb
pushf
ret
jbe
jg
xor
and
hlt
xorl
jmp
and
rcr
lcall
or
arpl
call
sbb
popa
aaa
je
cmpsl
xchg
leave
ficompl
pop
mov
iret
dec
hlt
js
dec
cmpsl
incb
popf
xcrypt-ofb
cmpsl
in
push
daa
xor
mov
mov
mov
loopne
cmp
pop
cmpsl
or
leave
sub
jns
int
xor
fdivl
adc
negb
xchg
dec
mov
mov
fists
in
xchg
jle
mov
adc
cmpsb
dec
dec
xor
inc
xlat
mov
add
xor
xchg
fnstcw
xchg
add
cmc
pmaxsw
arpl
mov
adc
cmpsl
repz
sbb
call
push
iret
test
fisttpll
cwtl
add
shlb
test
cmpsl
icebp
out
mov
and
xchg
dec
inc
and
sbb
jae
sbb
sahf
pop
popa
cmpsl
mov
mov
scas
lret
inc
lahf
cmpsl
xchg
int
jnp
icebp
dec
jmp
neg
mov
leave
or
into
and
pop
ret
das
dec
push
jmp
push
push
cmpsb
inc
cmp
mov
jecxz
mov
cmpsl
push
add
fs
mov
and
jg
cmpsl
call
scas
jg
cmpsl
sahf
mov
mov
add
adc
jno
cltd
into
jl
mov
les
ds
push
push
and
push
lods
adcb
lcall
push
sbb
mov
scas
lcall
mov
dec
fisubs
adc
movsb
mov
dec
cmpsb
cltd
dec
adc
cmpsl
test
mov
enter
mov
mov
testl
fsubs
mov
lods
repz
mov
aaa
sub
push
cmpsb
mov
or
nop
inc
popa
inc
ljmp
mov
and
jo
sbb
lods
inc
out
loope
arpl
adcl
out
pop
cmpsl
mov
out
mov
aad
ljmp
pop
push
dec
xcrypt-ctr
cmpsl
fisubrl
mov
cmpsl
sub
push
pop
stos
loop
inc
into
arpl
pop
in
stos
cltd
mov
or
inc
or
ss
ds
cmp
pop
rcll
add
xor
imul
mov
add
xchg
adc
lea
imul
push
mov
xor
cmpsl
ss
xchg
pop
cmp
push
lds
rcrl
xor
outsl
xor
cs
fs
mov
pop
bswap
fmul
mulb
ret
mov
push
sbb
pushf
cmpsl
adc
xorb
rcrl
cmp
sub
adc
mov
inc
xchg
push
cmp
cmpsl
cmp
test
cmpsl
jns
push
jae
cltd
js
cmpsl
mov
mov
pop
insb
adc
gs
cmpsl
ficompl
stos
sbb
pop
inc
and
xchg
stos
jne
fwait
bound
or
mov
clc
fisttps
cmc
aad
cmpsl
cmp
cs
in
cmpsl
test
insl
dec
pop
add
repnz
push
out
pop
jnp
xchg
mov
cmpsl
push
pusha
xchg
scas
inc
ret
insb
mov
out
and
cmpsl
fwait
leave
loop
xor
push
pop
jns
cld
add
jne
stos
les
push
xchg
fcomps
jo
rcr
inc
stos
pop
cmpsl
in
imul
roll
into
dec
dec
add
adc
cld
shl
xchg
dec
cmpsb
pop
jno
xchg
cmpsl
loope
imul
mov
lret
xor
es
push
dec
loope
push
jg
or
out
fisubs
and
fistl
adc
fistps
jg
mov
fisubs
cmpsl
into
bnd
les
adc
cmpsl
shll
pop
push
pop
test
out
daa
cmp
test
imul
insb
push
mov
dec
xor
dec
cltd
jg
popa
or
cmpsl
adc
idivl
jle
loop
rorl
out
jb
dec
ja
dec
inc
dec
popf
adc
cmp
stos
jno
insl
andl
pushf
leave
cmpsl
in
sub
dec
out
mov
cmpsl
jl
dec
xchg
cmpsb
xchg
pop
mov
mov
lds
stos
xor
in
and
inc
dec
pop
js
mov
sbb
test
notb
xor
scas
and
sbb
jmp
pop
imul
fdiv
or
push
push
mov
inc
lods
ja
cmpsl
sahf
xor
inc
daa
or
mov
icebp
pop
xchg
cmpsl
push
into
cmp
mov
xchg
fists
sub
xchg
leave
sarl
inc
enter
add
add
sbb
pop
push
cmp
cmpsl
nop
add
les
cmc
das
lds
and
jbe
outsl
mov
mov
and
jb
jecxz
fisttps
push
mov
cmpsl
cmp
adc
sub
cmp
cmpsl
xchg
test
cmc
stc
or
cmpsl
pop
bsf
adc
mov
xor
ret
ljmp
ds
leave
pop
cmp
cmpsl
push
push
cld
andl
mov
fbld
cmpsl
mov
sub
leave
cmp
pop
int
out
adc
cmpsl
adc
xor
fbld
aad
cmpsl
jns
sbb
lret
mov
jg
out
pop
or
add
ret
mov
repz
cmpsl
imulb
cld
jbe
jmp
fs
lret
rol
xchg
adc
jge
xchg
jmp
cs
call
xchg
sub
mov
test
xchg
es
mov
inc
add
pop
mov
jg
add
or
sbb
lretw
sub
es
sub
cmp
rol
scas
dec
mov
sub
pop
ja
pushf
cmpsl
jmp
mov
or
inc
xchg
test
mov
outsl
fwait
push
gs
je
arpl
push
dec
ljmp
daa
pop
cltd
cmpsl
sbb
outsl
xchg
insl
adc
cmpsl
rcl
push
shlb
jecxz
or
pop
mov
cmpsl
bound
int
push
pop
inc
pop
and
push
andb
mov
shll
or
cmp
aaa
fimuls
push
push
add
sub
xor
jae
lret
fwait
jecxz
out
popa
fsubp
dec
cmpsl
fldenv
sbbl
popf
das
inc
add
mov
push
cltd
sub
ret
mov
jp
addr16
lods
outsb
mov
movsb
inc
das
jb
cmp
jmp
ret
shr
icebp
jg
sbb
mov
add
dec
rorb
sbb
push
xchg
xor
repz
sbb
cmpsl
movsb
mov
stos
add
test
sub
cmp
jge
in
cmpsb
dec
pop
adcb
jno
pop
jb
std
sahf
push
cmpsl
into
pop
lahf
fs
inc
inc
cmpsl
push
and
xor
cmpsl
push
mov
mov
mov
add
inc
cs
jne
jns
jo
dec
stc
mov
out
push
cmp
cmpsl
mov
gs
jae
adc
iret
imul
testb
inc
sbb
lds
adc
jecxz
test
dec
sub
cmpsl
sahf
scas
xor
je
pop
xor
fs
and
sub
mov
and
jb
into
push
mov
cmpsl
ja
mov
int
add
mov
pop
sbb
clc
mov
or
pusha
pop
std
lea
and
inc
jg
cmpsl
add
xor
addr16
mov
lret
push
test
loopne
imul
mov
or
and
in
xchg
pop
mov
ror
sub
stos
lods
movsl
inc
rorl
dec
cmpb
and
jl
dec
sub
outsb
addl
repz
jns
sbb
mov
sbbl
jl
mov
int
lea
xor
test
cltd
loop
notl
std
fs
push
cmpsl
aad
outsb
xlat
add
jg
mov
inc
cmpsb
fldenv
outsl
int
sbb
inc
push
clc
lods
jp
sub
inc
test
sub
add
mov
jg
xor
xor
cmpsb
leave
aad
icebp
repz
push
mov
push
cmpsl
cwtl
xchg
jae
stos
pop
cmc
lcall
nop
adc
or
mov
mov
aad
int3
dec
adc
in
in
and
and
std
sarb
dec
pop
xchg
pop
sti
into
cwtl
adc
cmpsl
mov
mov
jbe
ljmp
cmpsl
andl
xchg
or
arpl
les
sub
ss
stos
clc
cmpsb
nop
pop
les
cmpsl
cwtl
jo
or
into
test
add
cmp
jmp
fwait
sahf
ljmp
dec
adc
sub
fisubrs
pop
sub
mov
or
test
and
cmpsl
dec
cmp
mov
push
cmpsl
xchg
stos
lahf
xor
insl
imul
push
and
andb
cld
cmp
sbb
lahf
xlat
or
cmpsl
arpl
mov
mov
mov
lods
cmpsl
lret
sub
jecxz
mov
xor
fldl
je
xchg
jl
clc
test
cmp
mov
rcrb
movsb
pop
inc
test
ja
xchg
mov
mul
dec
fwait
cmpsl
inc
imulb
cs
jecxz
mov
imul
push
ljmp
inc
inc
cmp
cmpsl
adcb
mov
ficoms
aam
dec
cmpsb
test
subl
in
adc
adc
in
iret
cmpsl
cmp
outsb
mov
ljmp
sub
repnz
cmpsl
in
imul
cmp
xchg
xchg
cmpsl
xor
cmc
fmull
leave
inc
cmpsl
sub
mov
lds
dec
mov
fisubrl
or
or
mov
cs
idivb
adc
mov
cmpsl
push
and
andl
in
sub
cmpsl
push
mov
into
frstor
ret
idivb
inc
mov
je
fs
mov
ss
enter
sbb
cmpsb
fninit
push
flds
push
cmpsl
fistpll
sahf
add
mov
cmp
and
or
test
add
inc
xor
cmc
loope
mov
dec
inc
lret
sti
cld
jmp
pop
outsl
das
and
shll
imul
clc
test
cwtl
mov
xchg
dec
cmpsl
test
cltd
in
fcomps
sbb
cmpsl
jle
sub
icebp
cmpsl
cmc
rcrl
push
xlat
lss
cld
out
cmp
stos
sbb
lret
add
sub
push
sbb
jecxz
push
mov
cmp
xor
dec
stos
jnp
andb
mov
insl
inc
lods
xor
cmpsl
mov
dec
loope
push
mov
cmpsl
jns
push
pop
dec
aad
lret
add
es
std
jecxz
mov
test
cmpsl
mov
mov
cmpsl
arpl
sarl
jbe
push
push
pop
xor
in
mov
or
stos
jns
test
icebp
jecxz
cmp
rorl
or
stos
lret
dec
xchg
bound
nop
cmpsl
jae
das
jecxz
cltd
pop
fisubl
pop
xor
or
mov
xor
add
test
mov
scas
lods
push
pusha
loopne
in
iret
call
sbb
mov
xor
imul
test
mov
popa
push
outsl
mov
cmp
jb
insl
dec
dec
lods
fs
call
lea
out
pop
fistpll
cs
mov
pop
hlt
cmp
int3
mov
push
int3
cld
xchg
sub
scas
sub
shlb
into
or
adc
movb
lock
sbb
in
lcall
jl
outsl
push
test
pop
or
cs
sti
rolb
mov
lods
xchg
and
dec
arpl
adc
cmpsl
xchg
cltd
pop
pop
cmp
jmp
jecxz
jp
sub
push
cmpsl
cwtl
out
nop
inc
stc
inc
and
and
xor
xchg
pop
cld
insb
sbb
dec
add
or
mov
in
xchg
jge
cwtl
inc
dec
sahf
sub
cmpsl
or
mov
cmpsl
adc
popf
mov
xor
sbb
mov
and
fcomps
mov
lock
sahf
test
pop
mov
jmp
and
mov
lcall
pop
xor
cmpsl
test
fwait
lods
adc
cmpsl
push
jno
nop
jg
push
adc
std
mov
cmpsl
int3
xchg
scas
pusha
cmp
pop
ret
sbb
cmp
int
sahf
push
adc
or
sbb
pop
inc
int3
dec
and
cmpsl
push
jno
rol
push
aam
cmpsl
inc
out
inc
mov
dec
es
xchg
jno
or
fs
scas
icebp
mov
lret
mov
fwait
cmc
xsha1
cmpsb
int3
roll
cmpsl
bound
fisttpl
inc
stos
or
lods
xchg
lret
dec
das
frstor
addr16
loop
and
shl
push
dec
cmpsl
fildl
fimull
mov
push
fiaddl
push
insl
xchg
test
mov
mov
jmp
popa
dec
sbb
sarb
inc
aam
xor
lret
in
inc
andl
add
pop
cmpsl
xchg
sbb
mov
cli
rcll
mov
add
pusha
lds
mov
dec
repnz
aam
dec
and
leave
xchg
out
ficomps
shll
je
mov
inc
add
lods
cmpsl
jno
leave
pop
sbb
push
cs
movsb
ljmp
cld
out
mov
into
cmpsl
xlat
mov
jl
add
lods
cmpsb
xchg
xor
mov
mov
jbe
cmpsl
sahf
push
jle
cmpsl
fcmovnb
cmp
clc
jae
imul
test
stc
inc
jp
es
cwtl
test
push
ljmp
pop
cmc
aad
fsubl
insl
dec
push
mov
insb
cmc
jbe
stc
in
push
ret
cmpsb
xlat
push
enter
stos
insl
mov
sbb
scas
int3
mov
push
data16
imul
cmpsl
dec
movsb
in
je
xchg
int3
cmpsl
jmp
push
xchg
inc
inc
mov
std
out
xchg
jnp
lret
ljmp
test
xor
mov
inc
push
pusha
sbb
lret
dec
pushf
cmpsb
mov
loopne
push
mov
test
mov
jecxz
pop
mov
out
mov
fwait
loop
sbb
cmpsl
and
pop
divl
out
cmpsl
cmp
cmp
cmpsb
adc
push
stos
mov
push
fnstenv
jl
push
outsl
insb
sub
push
sub
repnz
ficoml
add
insl
pop
and
bound
push
addr16
mov
aad
xor
mov
push
loopne
sub
outsb
cmp
mov
in
mov
cmpsl
imul
jo
clc
es
js
push
add
filds
int3
cmpsl
adc
and
jo
testb
pop
jbe
and
mov
in
jnp
lahf
ljmp
daa
out
mov
mov
push
pop
mov
lahf
fisubs
mov
mov
push
faddl
pop
ss
iret
mov
fwait
in
repz
and
mov
fildll
xchg
mov
cs
je
rcrl
ds
cltd
inc
test
dec
cmpsl
jle
popa
or
out
scas
sahf
cmpsl
add
and
cmpsl
add
push
shlb
push
xchg
mov
andl
xchg
or
int
fnstcw
xor
in
std
and
jne
stos
xor
fwait
push
pause
cmpsl
fistps
mov
cmp
addr16
pop
incb
jno
adc
cmp
push
sub
int
push
cwtl
rorb
xor
das
js
ret
xor
cmpsl
cmp
sub
cmpsl
push
test
inc
icebp
mov
and
aad
sti
push
cmpsl
popa
adc
repnz
add
mov
inc
loopne
inc
in
in
sbb
aad
movsb
bound
push
subb
push
push
fsubl
aad
iret
xchg
cmpsl
dec
stc
push
in
push
fcompl
and
int3
pop
call
lcall
mov
jo
mov
mov
mov
mov
and
inc
shll
adc
mov
xchg
hlt
aad
inc
adc
cmpsl
gs
adc
clc
cmpsl
mov
test
adc
mov
sbb
insl
push
jbe
std
cmpsl
loope
push
adc
lods
movsb
cmpsl
push
mov
pop
mulb
mov
adc
jb
mov
sbb
mov
cmpsl
fisubl
je
xchg
mov
icebp
mov
jmp
push
pop
sub
cmpsb
cmp
jne
iret
lret
push
cmpsb
push
lret
jl
mov
stos
mov
adc
shll
in
pop
and
pop
stos
jle
cmpsl
sub
dec
push
fistpl
dec
cmpsl
mov
pop
xor
mov
jb
cmovnp
dec
cmpsl
out
adc
xchg
daa
dec
sub
inc
mov
xor
idivl
shll
popf
pop
and
cmpsl
dec
vpsubd
into
inc
xor
mov
lret
sbb
sahf
xchg
add
xchg
mov
push
hlt
cmpsl
rcr
into
fdivl
mov
or
cmpsl
adc
xchg
cmp
pop
mov
cld
inc
dec
out
sbb
clc
sbb
mov
sub
daa
mov
xchg
jb
fcmovu
cmpsl
fwait
adc
inc
push
test
daa
xor
fisubrs
jle
loope
xchg
cli
and
xor
mov
sbb
add
es
dec
arpl
pop
xchg
cmpsl
adc
cwtl
adc
imul
cmpsl
mov
pop
adc
push
shl
sbb
mov
sub
test
add
enter
pop
fisttpll
popf
call
push
and
ds
push
js
cmpsl
in
dec
cmp
and
ds
bound
cmc
cmpsl
ja
jmp
or
xchg
leave
sti
out
jp
xor
fwait
cwtl
pusha
daa
data16
adc
ret
pop
cmpsb
sbb
cmp
subb
mov
mov
cmpsb
stos
mov
xchg
cmpsl
addr16
sub
mov
mov
outsl
rcl
int3
mov
out
dec
jg
fsin
rolb
out
dec
cmpsl
cmp
mov
dec
xchg
adc
xchg
xor
jbe
imull
sahf
aad
clc
mov
je
mov
flds
outsl
fiadds
nop
push
cmpsl
mov
test
pop
ret
popf
arpl
dec
adc
and
ret
psubusw
sub
jmp
hlt
ret
push
jmp
mov
cmpsl
movsb
sbb
ljmp
in
rol
and
ret
push
out
rcll
pop
xor
xor
inc
add
push
cmpsl
mov
stc
dec
push
cmpsl
sbbl
adc
jno
mov
scas
es
inc
loopne
xor
popa
and
std
xor
cmp
xor
xchg
mov
movsl
cmpsl
mov
sti
jnp
dec
cwtl
push
cmpsl
insl
icebp
fs
add
cmp
lods
and
xchg
scas
sub
adc
push
fbld
nop
rolb
icebp
cltd
inc
test
push
imul
dec
loop
sub
add
shlb
mov
test
inc
rorl
xor
loopne
push
cmp
stos
jg
adc
sub
jo
and
mov
jmp
adc
les
lret
push
std
cmpsl
mov
push
in
pop
sbb
cmpsb
cmp
lret
cwtl
add
cmpsl
sbb
arpl
jp
pop
ret
fsub
cmp
aas
test
mov
addr16
mov
in
outsb
lods
jmp
imull
jne
pop
orl
pop
cmpsl
scas
pop
jb
pop
loop
ja
and
cmpsl
stos
sub
movl
mov
sbb
xor
cmpsl
add
loope
stc
in
mov
fwait
xchg
int3
es
daa
fisubs
div
cmpsb
stos
addl
cmpsl
call
imul
or
cmpsl
repnz
loopne
jnp
mov
cmpsl
xchg
aam
xchg
cmp
cmp
mov
push
sbb
cmp
addr16
shll
pusha
cmc
repnz
lahf
cmpsl
stos
push
scas
ljmp
insb
sbb
xor
mov
pop
mov
call
icebp
push
jbe
cmpsb
cmp
lods
pop
or
dec
mov
add
fs
jmp
mov
scas
inc
cmpsl
pop
xor
std
xlat
shll
dec
icebp
pop
inc
push
test
cmpsl
movsb
or
lret
das
sub
or
or
les
pop
pop
mov
jb
in
shrb
adc
adcl
pop
mov
or
mov
lret
sti
sub
lds
es
pushf
insl
jp
adc
inc
popf
js
icebp
cmpsl
jle
mov
fcompl
xorb
test
lea
cs
in
es
inc
sbbl
cmpsl
aad
inc
repnz
inc
push
cmpsl
dec
dec
sub
scas
lods
int3
push
mov
test
inc
or
mov
daa
sbb
ffreep
mov
cmpsl
sbb
ljmp
ds
cli
fidivrs
cmpsl
pop
add
stos
push
jno
int3
insl
test
mov
sbb
je
loopne
dec
xor
lret
outsb
mov
stc
or
and
adc
ljmp
data16
mov
insl
arpl
xor
cs
or
ret
cmpsb
and
aaa
adc
cmpsl
and
inc
pop
les
mov
shll
jns
pop
scas
in
add
sar
pop
jg
in
xchg
cmpsl
mov
out
repz
jge
cmpsl
and
mov
repnz
adc
mov
mov
insl
out
adc
lock
sbb
push
mov
test
pop
enter
in
out
loopne
ret
insb
fildll
mov
shll
out
or
jge
xchg
xor
cmp
stos
dec
mov
movsb
push
adc
add
test
mov
xchg
mov
jnp
ret
mov
inc
fists
loop
inc
cmpsl
push
lods
or
mov
aam
pop
mov
cmpsl
mov
jns
movsb
mov
inc
cmpsl
mov
cmpsl
pop
xor
loopne
push
mov
inc
in
push
insb
out
ret
xor
xor
sbb
jae
pusha
jbe
adc
inc
es
dec
push
xchg
or
xchg
cmpsl
aam
push
mov
lods
lret
mov
adc
cmp
xchg
push
xchg
ret
in
cmpsl
jecxz
iret
or
push
out
cmpsl
xor
sbb
int
inc
lds
cmp
enter
push
inc
fists
ljmp
mov
int
xor
mov
xchg
pop
cmpsl
ficoms
cmp
cmpsl
adc
cltd
fsubrs
pop
mov
lret
mov
inc
xchg
jle
insb
cmpsl
push
jne
fwait
add
test
cmpsl
jns
pop
pop
jecxz
pop
jno
inc
cmpsl
insl
mov
aas
xchg
mov
cmp
cmpsb
jl
aaa
mov
push
jns
lods
das
pop
loope
lret
sub
or
cmpsl
xchg
cmpsb
jo
or
mov
ret
inc
rol
xchg
pop
cmpsl
sahf
testl
sub
out
arpl
xor
cmp
fstl
or
sub
fcoml
rorl
out
negl
cmpsl
or
ss
jmp
out
mov
orl
adc
mov
dec
shll
icebp
sub
xlat
cmpsl
pop
out
cmp
pop
imul
sbb
push
jecxz
xor
dec
cmpsb
hlt
inc
stos
repnz
mov
lods
rcr
xor
lds
and
iret
lea
mov
cmpsl
mov
mov
add
loope
push
es
jnp
pop
mov
xchg
xor
cmpsl
ficompl
pop
xchg
movsb
dec
add
fwait
jmp
clc
push
pop
push
filds
cmpsl
jo
inc
mov
xchg
dec
leave
cmpsl
xor
or
or
adc
jns
add
dec
or
lret
ja
insb
in
stos
mov
mov
adc
pop
popa
stos
fdivrs
or
mov
cmpsl
mov
sub
jle
jecxz
or
cmp
cmpsl
mov
mov
and
decb
push
adc
and
xchg
inc
stos
jg
cmpsl
bound
add
dec
inc
or
jle
jno
sbb
rcrl
cmpsl
test
push
in
mov
mov
xor
cmpsl
dec
jne
lods
test
jg
out
pop
lcall
leave
add
xlat
pushf
out
push
mov
lret
xchg
lods
sub
inc
cmpsl
push
test
lret
cmpsb
divl
adc
sub
xchg
inc
cmpsl
popf
lods
nop
repz
lahf
js
cmpsl
pop
adc
dec
mov
stos
cmpsl
inc
icebp
gs
mov
cmc
adc
jmp
mov
or
inc
xchg
xchg
ja
mov
fadd
and
cmpsl
xorl
jp
fsqrt
jl
mov
incl
mov
pop
adc
lahf
test
sbb
pop
sub
xchg
lods
cmp
adc
jp
xchg
sub
aaa
sbb
scas
push
imulb
inc
xor
inc
cs
push
or
es
daa
rcr
dec
jno
push
cmpsl
outsb
or
push
in
les
push
xchg
or
sbb
xchg
gs
jns
dec
mov
test
in
pop
mov
test
push
int
add
push
lods
ss
scas
add
rcrb
dec
inc
xchg
in
sub
popa
loope
notl
sti
mov
and
sahf
lods
fsubs
lahf
fdivr
scas
rorl
mov
bt
in
cltd
and
sub
mov
scas
dec
rorb
cmpsl
repnz
adc
ja
cmpsl
lods
iret
fwait
mov
movl
nop
mov
sbb
pop
cmpsb
cmpsl
jns
stos
dec
in
lret
jo
stc
arpl
cmp
stos
sti
shll
push
adc
bound
popl
out
mov
push
in
stos
call
and
ss
pop
mov
in
mov
cwtl
lcall
cmpsl
dec
dec
je
pushf
sahf
int3
fs
jb
gs
dec
pop
mov
inc
bound
sbb
fadds
mov
cmpsl
push
jb
mov
in
inc
mov
pop
out
lods
push
adc
dec
je
mov
das
jo
lds
cmp
mov
lahf
add
or
push
mov
cmpsl
cwtl
sub
xor
ror
sub
or
pop
mov
mov
push
les
popf
out
daa
std
push
call
cmpsl
adcb
pop
lret
adc
inc
out
mov
pop
pop
add
fisttpl
enter
js
cmp
cmpsl
pop
or
xor
aam
rorl
xor
jne
and
dec
dec
pushf
hlt
fldenv
push
push
shll
xchg
add
imul
outsl
mov
cmp
mov
inc
pop
sbb
or
imul
xchg
xchg
loope
push
pushf
out
add
sbb
pop
jno
sub
push
nop
cmpsl
dec
add
cs
cmpsl
push
push
mov
mov
adc
pop
jbe
out
jmp
jnp
mov
in
js
push
push
rep
shrl
ficoml
mov
mov
ljmp
push
sbb
mov
leave
push
jno
sub
pop
or
adc
dec
stos
push
les
cmpsl
into
xor
leave
sub
xlat
ret
scas
mov
xchg
push
jg
and
pop
out
pop
loop
cmpsl
and
jl
mov
xchg
xchg
lcall
ljmp
mov
pop
xor
mov
pop
cmp
mov
clc
cmc
fdiv
xor
pop
mov
repnz
add
or
xor
mov
inc
scas
les
in
insb
mov
ret
in
sub
xchg
cmpsl
cs
lods
adc
adc
sub
mov
push
cmpsl
pusha
dec
fldl
cmpsl
adc
push
das
cmpsl
mov
and
mov
push
add
into
xchg
jnp
std
lea
cld
add
pop
jg
cmpsl
ljmp
cmpsl
pushf
cli
test
imul
in
fstl
mov
outsl
aaa
xchg
adc
aad
mov
lock
pop
push
mov
sub
insb
push
es
pop
cmp
out
mov
jb
enter
sub
cmpsl
sbbb
sbb
jno
popf
mov
jnp
mov
dec
decb
in
cmpsl
rcll
scas
jb
xchg
sub
mov
mov
pop
cmp
mov
push
pop
cmpsl
leave
mov
test
test
cmpsl
cmc
jle
into
or
out
test
cmpsl
adc
repz
lods
lret
pop
lcall
aaa
mov
push
and
xchg
fists
cmp
or
outsb
jo
in
jne
sub
inc
jae
sub
sbb
or
es
scas
and
int3
shll
jge
imul
aam
mov
int
adc
jge
in
and
insl
leave
cmpsb
jo
shlb
pop
test
fbld
int3
enter
popa
cli
sbb
call
jo
cmpsl
xchg
pop
pop
mov
adc
cmpsl
mov
jnp
or
xor
xchg
scas
mov
stc
cmp
jb
push
mov
xor
cmpsb
dec
outsb
or
adc
or
mov
xchg
jns
sub
call
cmpsb
outsl
jae
test
movsb
je
call
mov
inc
negb
cmp
outsl
push
cmovle
pop
cmp
cmpsl
sbb
mov
jp
sbb
fiadds
push
cmpsl
sbb
adc
fisttps
or
inc
push
fcomps
push
roll
in
or
mov
sahf
sub
inc
mov
imul
xor
or
in
lahf
cmpsl
sub
das
ja
inc
mov
cmpsl
pusha
int
dec
xchg
data16
or
xchg
cmp
mov
xchg
lret
cmp
cmpsb
jbe
mov
mov
mov
or
cmpsl
sbb
push
cmpsl
gs
ret
lds
jmp
pop
jmp
sbb
bound
jae
xchg
push
mov
cltd
add
mov
jmp
xor
scas
xlat
sub
mov
pop
mov
sbb
push
clc
fwait
or
lcall
out
mov
or
ds
xchg
ljmp
sarl
int
fucom
mov
roll
xlat
fwait
cmpsl
push
jbe
push
mov
repnz
xor
subb
loope
dec
add
lcall
fnstcw
jo
and
cmp
repnz
insl
cmpsl
pop
popa
rcll
shll
push
das
loopne
shr
pop
or
test
jns
push
or
sti
fisttps
in
sub
test
inc
pop
ljmp
fidivs
sbb
mov
pop
shll
int3
jo
cmpsl
push
sub
sbb
cs
cli
pop
sub
pop
out
mov
xor
in
sub
mov
sub
mov
mov
lret
insl
cmpsl
push
outsb
test
pop
jnp
rolb
jmp
and
cmpsl
fwait
or
shll
push
mov
lret
pop
in
popf
lahf
int3
xchg
xchg
mov
sti
repz
cld
dec
mov
out
insb
sub
les
dec
add
mov
movsb
adc
push
add
cmpsl
popf
push
lret
cmp
test
leave
mov
mov
pop
sbb
imul
idivb
lea
mov
ljmp
popf
sub
sti
stc
cmp
mov
imull
ja
push
push
cmpsl
lods
push
or
mov
hlt
inc
cmpsl
sub
mov
sbb
jno
cmpsl
lea
jb
in
inc
int3
push
or
ljmp
cmpsl
fnstsw
inc
daa
mov
mov
mov
lcall
cmpsl
lock
nop
call
cmpsb
fsubrs
jp
mov
push
les
jno
icebp
mov
cmpsl
inc
ljmp
and
xchg
addr16
push
mov
sti
cld
cmpsl
add
cmc
in
xlat
cmpsl
and
insb
mov
jge
xchg
mov
pop
mov
and
xor
fsubs
mov
cmpsl
mov
imul
xor
pop
cmpsl
sbb
je
mov
pop
out
hlt
inc
dec
xchg
imul
mov
cmpsl
aas
mov
pop
cmp
test
lret
lret
rclb
cmpsb
testl
add
sub
cmc
mov
cltd
and
or
nop
mov
icebp
cmpsl
cmp
sub
mov
mov
push
stos
lods
mov
xchg
and
push
fs
jae
and
stos
jne
xchg
les
lods
cmp
mov
sbb
or
and
outsl
xor
sub
jne
aaa
addr16
xchg
call
or
push
enter
testb
xchg
outsl
xor
mov
mov
and
jne
mov
test
mov
mov
and
std
inc
int3
bound
add
and
in
sbb
cmpsl
sbb
xor
xchg
mov
mov
mov
pushf
xor
cmpl
add
shr
or
jnp
dec
dec
push
pop
jg
mov
jg
sahf
jp
cmpsl
je
mov
pop
icebp
jae
sub
push
jb
push
or
pop
sub
jmp
cmc
xchg
inc
fnstenv
lahf
sahf
dec
push
xchg
sbb
xchg
cmpsl
push
adc
cmpsb
mov
xor
jecxz
cmpsl
or
add
adc
js
mov
push
jg
shl
xchg
xor
roll
ret
jne
mov
cmpsl
rcrb
jns
int3
aam
add
push
xchg
sar
jb
fcoms
mov
mov
and
cmp
mov
bound
cmpsl
int3
in
ficomps
cmp
jmp
xor
shll
fndisi(8087
pushf
cmpsl
rcll
repnz
inc
add
cmpsl
adc
sahf
int3
xchg
jl
in
cmpsb
lret
cmp
clc
xor
xchg
cmpsl
mov
jnp
sub
sub
shrl
mov
and
popf
pusha
aaa
arpl
cmp
add
nop
jp
lods
xchg
sahf
enter
push
push
arpl
mov
roll
push
cld
gs
mov
push
ret
sbb
adc
in
cmpsl
xchg
outsb
lahf
push
xor
cmpsl
cmp
stos
icebp
dec
aad
sti
mov
hlt
xchg
lods
xor
sbb
outsl
lahf
pop
jo
mov
sub
jle
js
mov
cmpsl
in
add
enter
adc
add
test
cmpsl
cwtl
inc
adc
mov
in
push
icebp
out
fs
lea
test
push
or
xor
mov
xor
int3
push
jno
mov
mov
mov
cmpsl
adc
and
test
cmpsl
sbb
shl
mov
push
push
bound
fnstsw
inc
cmpsb
sbb
mov
jmp
pop
loop
loopne
cmpsl
in
xlat
outsb
in
mov
shll
and
cmpsl
icebp
sub
jle
mov
je
jl
push
dec
fchs
fs
mov
daa
in
orb
jl
add
jo
pop
inc
sti
lea
ret
inc
pop
fisttpl
sbb
pop
out
xor
and
lret
pusha
pop
es
xlat
test
fwait
cltd
xor
aad
pop
cmpb
xchg
cmpsl
unpcklps
dec
push
sub
dec
int3
and
stos
adc
mov
cmpsl
out
mov
in
mov
pop
or
out
push
sub
aas
adc
std
fsubl
or
xchg
rcr
pushf
adc
out
jbe
jp
shll
and
inc
mov
cmpsl
xchg
in
xchg
push
popf
push
and
inc
add
jmp
test
out
sbbb
push
adc
cltd
xchg
addr16
mov
cmp
xor
pop
shrb
mov
adc
cmpsl
jbe
mov
inc
pop
dec
repnz
in
fsubrl
jae
int3
in
inc
lods
out
test
add
stc
mov
jmp
sahf
cld
out
lds
mov
movsb
cli
and
pushf
mov
in
icebp
pop
jle
sti
cmpsl
sub
pop
jge
fsubrl
xor
push
cmpsl
cmp
cld
aaa
inc
jl
popa
lcall
pop
je
std
cmpsl
fisttpll
movb
andb
fs
push
test
cmpsl
xor
je
dec
outsb
jnp
aad
pop
das
inc
xchg
mov
sbb
ja
rorl
loope
inc
pop
subb
icebp
lcall
xor
inc
cmpsl
adc
adc
int3
jnp
cmp
out
or
mov
aas
inc
add
add
repnz
mov
mov
cli
data16
bound
stos
sti
leave
sahf
mov
xor
sbb
pop
imul
cmp
xchg
pop
lret
mov
xor
insl
mov
xor
sbb
cmpsl
aad
outsb
ficompl
add
ja
lcall
cmpsl
sbb
mov
test
jp
jbe
mov
addr16
cmpsl
and
add
jmp
mov
pop
int
fdivs
stos
mov
cmpsl
jno
movsb
test
jnp
daa
cmpsl
push
sbb
cmpsl
or
adc
push
pop
cmp
ss
sarb
cs
sub
ficompl
aad
std
fcmovne
aas
pop
xchg
inc
fs
mov
stos
ss
lds
jns
adc
push
xor
push
iret
icebp
leave
mov
clc
cmpsl
xchg
mov
lcall
inc
andb
lods
cmpsl
xor
mul
cli
adc
ja
stc
out
ss
mov
push
jne
insb
mov
push
pushf
adc
cmpsl
adc
cmc
xlat
mov
jge
test
cmp
dec
ss
push
cmpsl
sub
or
cmp
lea
and
sahf
xchg
rol
or
out
out
outsl
or
loope
dec
cmpsl
stos
test
lret
jecxz
sub
in
imul
jmp
cmpsl
cmp
imul
push
iret
add
xor
dec
fidivs
mov
insb
jae
sub
cmpsl
push
lahf
ja
add
dec
xchg
mov
cltd
sub
nop
out
push
cmpsl
xchg
inc
jmp
imulb
xor
push
mov
lods
test
lds
pop
ret
sub
xchg
stos
sub
pop
or
in
mov
cmpsl
or
mov
xchg
inc
and
scas
lods
cmpsl
sbb
fwait
addr16
inc
push
ja
cmp
xchg
cli
cmp
lods
push
fwait
push
xor
mov
sbb
mov
ljmp
rcrb
push
cmp
cmp
das
daa
inc
loope
stos
push
and
jne
jae
cmc
add
cmpsl
xor
insl
aam
out
aaa
mov
cmp
es
mov
icebp
cwtl
iret
jg
scas
sbb
cld
mov
cmpsl
mov
in
inc
mov
fidivs
pop
addl
jmp
xor
cld
cmpsl
outsl
mov
call
cmpsl
push
dec
and
adc
or
sbb
jb
fmul
inc
shlb
jp
cltd
push
xor
pop
jg
cmpsl
push
xchg
fwait
insl
dec
or
cmc
push
sub
lods
les
inc
out
stos
mov
add
imul
scas
push
andb
cmp
scas
xor
hlt
mov
shlw
jne
in
pop
js
movsl
sbb
fsubl
repnz
and
cmpsl
dec
js
bound
out
push
cmpsl
adc
and
into
sahf
jns
pop
cmp
das
mov
mov
cmpsl
enter
insl
idiv
les
xchg
pop
stos
pop
cmpsb
mov
cmpsl
test
lret
push
fisttpll
mov
test
cmp
ss
cmpsl
jae
mov
shlb
pop
inc
hlt
adc
in
shrb
add
mov
aas
mov
lods
jno
sub
adc
lretw
sbb
and
cmpsl
enter
inc
add
xor
nop
in
pushf
push
in
dec
cli
fcompl
cmp
push
push
and
jmp
mov
xchg
inc
mov
cmpsl
jecxz
dec
jbe
pop
movsb
das
notb
and
jecxz
ret
and
jae
lds
push
fildll
jl
dec
andb
pusha
das
imul
stc
js
pop
sub
xor
pop
adc
std
dec
pop
scas
repz
xor
sub
push
mov
imul
adc
ja
xor
cmpsl
arpl
xchg
popf
xlat
jecxz
mov
jo
aad
dec
cmpsl
adc
pop
dec
inc
cmp
in
das
pushf
push
fcmovnb
mov
insl
cli
out
sbb
rorb
inc
mov
stos
push
dec
inc
inc
aad
lds
push
call
inc
es
inc
cmpsl
testb
push
rcrl
outsb
out
insb
jns
mov
mov
loopne
cli
xchg
sbb
scas
mov
rorl
mov
repz
popa
aaa
clc
cmpsl
test
lods
cmp
nop
cmc
adc
addb
jbe
cld
cmp
cmpsl
xor
xchg
insl
add
rcr
loopne
inc
xor
stc
cmpsl
mov
xchg
lods
mov
sbb
xor
shlb
dec
repnz
jecxz
sub
in
xchg
call
aad
cmpsl
mov
cltd
subb
jge
inc
les
fisttpll
cmc
sbb
insl
daa
incl
lret
xor
cmpsl
sbb
lea
shlb
test
outsb
or
pop
xor
cld
cmpsb
cmpsb
mov
fsubrs
ret
aad
loop
mov
ror
mov
fisubs
dec
pusha
pop
pop
cmpsl
xor
imull
jg
xor
out
cmpsb
mov
scas
enter
push
or
testl
out
out
jg
int3
cmpsl
es
xor
mov
testb
fwait
sub
insb
cmpsb
inc
mov
mov
sub
push
cmpsb
mov
xchg
enter
scas
lret
insl
xor
jle
xchg
nop
cli
mov
cmpsl
iret
dec
jnp
fsts
sbb
push
pop
loop
std
mov
and
aad
sarl
cmpsl
cmp
ror
inc
mov
jl
sub
in
sub
mov
cmpsl
xchg
xor
setp
jae
mov
sub
pop
hlt
push
lods
or
shrl
xor
cmpsl
xor
pop
add
cmpsl
cmp
cld
pop
mov
mov
lret
loope
jmp
and
add
xor
cmpsl
sbb
jle
nop
mov
or
mov
push
inc
bound
pop
cmp
pop
mov
lret
xor
or
mov
fisttpl
cmpsl
out
fwait
cmc
clc
cmp
cmp
ja
mov
in
dec
fwait
jno
xor
lcall
cmpsb
pop
repnz
cmpsl
in
aas
dec
add
loope
cmpsl
sti
icebp
mov
adc
ret
pop
cmp
popa
cmp
sbb
push
pushf
aaa
and
mov
push
xchg
dec
push
out
loope
shll
xchg
xor
cmpsl
stos
lea
adc
cmpsl
pop
aam
adc
lds
cmpsl
pop
leave
adc
lods
int
call
cmpsl
adc
js
dec
fsubrl
and
data16
adc
jnp
test
cltd
mov
lahf
push
int
cmpsl
mov
hlt
not
ret
cmp
lods
add
cmpsb
push
mov
fbld
inc
add
ds
mov
rorl
cmpsl
idivl
inc
fldcw
jb
test
lods
stos
push
ds
cmpsl
stos
sbb
xchg
cmp
cmpsl
mov
sarl
jne
push
cmpsl
movsb
adc
stc
push
xor
fs
jbe
cmpsl
mov
adc
mov
dec
mov
sub
xchg
mov
stos
mov
in
adc
aam
jge
stc
pop
cmpsb
xchg
pop
pop
pop
xor
insb
push
mov
cmpsl
sbb
or
inc
jge
mov
push
mov
jo
mov
js
xor
icebp
jmp
jb
mov
daa
mov
pop
pop
push
out
adcb
mov
fnsave
data16
mov
fcoml
sbb
adc
mov
cmpsl
imul
and
cmpsl
sub
push
mov
pop
pop
sbb
loop
xchg
in
xchg
test
aam
cltd
out
cmpsl
cmpsb
test
fdivrl
pop
pop
lds
jne
push
mov
xchg
int3
testl
jg
sbb
push
fcompl
lods
pop
cmp
in
sbb
inc
pop
xchg
outsl
ret
or
popa
cwtl
cmpsl
mov
pop
stos
xchg
cmpsl
sbbb
in
out
loope
mov
adc
jge
cmpsl
arpl
daa
xor
add
sbb
rcll
xor
sub
jle
add
leave
xchg
mov
outsl
add
cmpsl
jne
mov
icebp
sub
or
cmpsb
mov
inc
out
mov
sahf
cmpsl
in
sbb
test
outsl
or
ja
cmpsl
repnz
call
mov
xchg
stc
aad
jg
shll
hlt
cmp
cmpsl
enter
or
pop
lock
std
ss
lahf
xchg
ja
or
in
sarl
dec
fildl
cmpsl
mov
sbb
ret
cmc
and
dec
clc
gs
repnz
aas
shlb
pop
mov
sbb
incb
test
stos
cmpsb
mov
andl
fcmovu
add
sub
stos
mov
add
rcll
loope
cmp
fdivs
push
cwtl
xchg
call
stos
push
fwait
ret
mov
mov
mov
or
loopne
jmp
mov
fs
jge
pop
out
sbb
mov
and
shr
es
push
stos
cmpsl
jecxz
xor
sbb
or
mov
adcb
jecxz
and
je
adc
adc
lahf
ret
jmp
outsl
add
pushf
bound
pop
adc
or
mov
inc
jl
addr16
in
out
fwait
adc
in
push
inc
adc
roll
lret
testl
cmpsl
sub
jp
xchg
push
int
std
fiadds
push
cmpsl
mov
call
out
negl
je
cmpsl
xchg
jecxz
jno
les
mov
cmpsl
daa
sbb
mov
mov
xchg
cld
aad
jnp
aad
stos
mov
inc
inc
pop
fsubrp
lahf
xchg
jmp
fsts
mov
jl
jae
pop
mov
sub
sbb
mov
pop
cwtl
push
push
adc
rcr
jno
jno
and
int3
js
stc
mov
aam
ret
xor
sub
out
jne
imul
cmpsl
outsl
dec
mov
dec
ret
cmpsl
pop
pop
sub
fistpll
fwait
movsl
cmpsl
push
jg
pushf
in
adc
mov
loop
stc
out
inc
pop
out
aas
mov
cmpsl
ljmp
xchg
arpl
sub
adc
pop
loopne
aaa
dec
or
cmpsl
jge
cli
adc
bound
xchg
scas
xchg
cmpsl
pop
sub
jp
mov
sub
adc
cmpsb
out
adc
ret
add
xchg
popa
sbb
fs
mov
mov
sub
aam
dec
xchg
xchg
pop
ret
mov
movsb
push
test
addr16
cmpsl
lahf
mov
pop
mov
jne
mov
adc
xor
fidivs
pop
cmpsl
xchg
push
ljmp
jae
leave
pop
xor
mov
mov
and
cli
mov
ljmp
mov
xchg
cltd
clc
xchg
icebp
push
cs
mov
add
xchg
add
jg
stos
xchg
ljmp
cmpsl
leave
sbb
jmp
cli
sub
jp
mov
mov
mov
mov
mov
mov
adcl
cmpsl
fcoml
dec
js
mov
jg
mov
push
jb
mov
cmp
cmpsl
pop
dec
mov
les
shll
into
cltd
gs
cmpsl
and
add
icebp
shlb
xchg
ret
fisttps
je
stos
cmpsl
xchg
repnz
pop
adc
xor
cmp
and
gs
enter
int3
dec
mull
push
mov
cmpsl
addr16
add
xchg
inc
cwtl
and
cmp
cmpsl
jp
adc
dec
test
mov
fdivrl
lods
incl
mov
out
cli
das
icebp
cmpsl
insb
inc
aaa
jbe
push
jmp
cmpsl
in
lods
sub
cltd
push
cmp
cmpsl
test
pop
or
aas
cmpsl
jge
int
and
push
test
sbb
dec
pop
or
call
not
sbb
add
sub
jno
cmpsl
xchg
push
pop
pop
and
sub
dec
inc
enter
and
sbb
cmpsl
dec
push
pop
movsb
mov
sarb
add
int3
sbb
dec
add
jbe
adc
lds
lock
stos
cmpsl
sub
outsl
rorl
sbb
pusha
sub
aam
incb
jg
lods
cmpsl
cs
pop
dec
scas
sbbl
pop
inc
or
push
mov
push
cmp
jne
cmpsl
cltd
add
insb
and
pop
lock
out
or
mov
add
ss
add
xchg
fdivl
out
or
movsb
cmp
lcall
cmp
add
mov
lea
jl
jns
cmpsl
inc
jno
sbb
mov
push
xor
push
outsl
pop
xlat
xor
adc
aad
push
cmp
fs
es
jae
cmpsl
imul
inc
jge
nop
ret
cmpsl
aas
sbb
push
test
dec
dec
fsts
cmpsl
jb
mov
jge
jle
outsb
or
lods
int3
sub
movsb
aad
cltd
fwait
repz
push
jo
xchg
cmpsl
outsb
fimull
bound
icebp
cli
out
push
lock
shll
mov
jns
mov
lds
sub
cmpsl
fsubrl
sub
cmpsl
cltd
or
mov
out
into
out
adc
scas
mov
cld
adc
cmpsl
add
pushf
sub
lock
push
dec
test
cmpsl
subb
inc
jb
mov
ljmp
mov
in
cmpsl
les
cmpsl
stos
dec
mov
mov
aad
jecxz
aas
push
lods
dec
inc
fdivrl
daa
std
xor
shlb
fwait
jecxz
int3
mov
cmpsl
pushf
js
les
cmpsl
mov
cmp
cmpsl
xor
data16
aas
jg
or
mov
pusha
jg
cmp
arpl
popa
loopne
cmpsl
xchg
in
test
push
cs
scas
and
push
cmp
inc
loopne
fwait
inc
outsb
fs
repz
cmp
mov
mov
cmpsl
test
lcall
sbb
cmpsb
lea
cmpsl
push
outsb
lretw
add
cmpsl
enter
mov
xchg
mov
out
ret
daa
repnz
mov
sub
rclb
imul
test
and
movsb
ljmp
mov
jecxz
cmpsl
nop
jns
mov
sahf
adcl
cs
stos
add
cld
adc
xchg
mov
cmpsl
ffreep
sbb
mov
add
sbb
rcll
pop
rclb
jp
cmp
mov
add
in
cmp
jo
test
fadd
and
cmpsl
mov
mov
xor
pop
imul
mov
int3
into
out
in
test
cmp
pop
notb
aaa
adc
ja
or
cmpsl
push
cmc
and
xchg
stos
dec
bound
cmp
shll
imul
cmpsl
rcr
cmc
call
lods
out
pop
sub
roll
xchg
arpl
arpl
scas
cmp
pop
jnp
push
or
fcmovnb
je
push
fstl
or
sti
push
gs
out
jg
xor
cmpsb
dec
popa
rclb
inc
lea
aaa
cmpsl
push
and
or
cwtl
cmpsl
mov
fcompl
sub
test
jno
cmp
mov
ffree
xor
cmp
pop
out
shlb
xchg
mov
xor
arpl
cmpsl
bound
and
scas
cmpsl
adc
fildll
xchg
pop
jns
push
jl
fsubrs
push
and
test
xor
shll
inc
out
ja
cmpsl
cmp
push
xchg
sbb
sbb
lret
and
repnz
test
mov
jg
mov
mov
scas
fidivl
fsub
cmpsb
insl
bound
shl
jg
shll
mov
inc
cmpsl
data16
inc
dec
mov
cmp
mov
sub
jg
adc
adc
cmp
dec
andl
mov
fbld
cmpb
cmpsl
fxch
popa
inc
sbb
xor
mov
or
fisttpl
jl
dec
push
cmpsl
cmp
dec
jecxz
test
ret
ljmp
xlat
mov
fsubrl
cmpsl
repnz
xor
andl
in
movsb
jle
add
bound
test
fimull
popf
dec
cmpsl
push
cwtl
jnp
cltd
xor
mov
mov
popa
push
clc
dec
leave
pusha
rol
xlat
hlt
sub
insb
lods
cmpsl
ds
int3
lds
mov
mov
xchg
daa
xor
fldt
test
sub
or
jge
hlt
and
shll
jmp
xor
jg
into
or
cmpsl
cmp
xchg
aaa
cmpsl
popf
hlt
jmp
movl
push
xor
dec
int3
mov
cwtl
pop
cmpsl
or
lock
push
mov
add
push
mov
cmpsl
sub
dec
xchg
push
arpl
jbe
out
jmp
sub
leave
fmull
sub
cmc
loopne
imul
cmpsl
push
jge
out
int
cmpsl
std
mov
cmc
xchg
pop
mov
in
pop
test
and
into
lret
lea
test
lods
icebp
cmpsl
inc
sarb
xchg
inc
cmpsb
mov
andl
repz
insl
sbb
cmpsl
jb
rorb
mov
shll
std
xchg
out
xor
cmpsl
xor
or
cmpsl
and
rcl
test
xor
stos
addr16
xchg
cmpsb
mov
rcrl
ja
out
dec
jmp
in
pop
mov
sub
cmpsb
pop
jecxz
push
cmp
cmp
repnz
data16
cmpsl
pop
rorl
mov
mov
mov
decb
adc
mov
cmpsb
jg
cltd
cmpsl
add
insl
pop
mov
xchg
cmpsl
cwtl
js
sar
es
and
aad
cmpsl
mov
scas
jnp
jmp
mov
adc
cmpsl
xchg
jns
push
push
insl
inc
dec
mov
pushf
mov
cmpsb
jno
icebp
xchg
ljmp
jbe
adc
cwtl
mov
cmpsl
add
sbb
in
loope
pop
cwtl
ja
cmp
repz
add
mov
mov
outsl
notb
cmpsl
push
add
in
int
movsb
cmpsb
fmuls
cmpsl
test
inc
ror
arpl
cmpsb
cwtl
xor
fwait
test
pop
inc
aam
or
push
outsl
add
xor
push
leave
pop
cmpsl
inc
cwtl
cmp
mov
mov
enter
pop
mov
or
shll
in
cmpsl
mov
mov
adc
outsl
outsb
mov
or
and
int3
call
jmp
arpl
mov
addr16
lock
int3
adc
ljmp
enter
pushf
mov
cmp
mov
ficoms
int3
leave
add
out
mov
outsl
out
mov
xchg
in
frstor
cmc
rol
ret
push
repnz
mov
iret
push
outsb
cmp
icebp
pop
orb
cmpsb
mov
push
mov
les
pop
xchg
loopne
out
rcrl
imul
cmpsb
sbb
cmpsl
aaa
loope
movsb
jne
xchg
xchg
aad
cmpsl
add
out
sahf
sbb
mov
test
cmpsl
adc
push
in
mov
popf
or
std
lret
add
mov
call
sub
enter
mov
imul
repnz
stos
imul
cmp
pop
fistpll
mov
arpl
sub
gs
fidivrs
fwait
push
les
cmpsb
xorl
mov
and
scas
push
cmp
cmpsl
scas
mov
pushf
repz
cmpsl
jbe
dec
mov
ret
mov
bound
mov
in
test
lds
loope
pop
push
cmpsb
sbb
jae
xchg
cmpsl
shrl
daa
mov
aaa
push
aad
sahf
cmpsl
adc
push
or
push
lea
out
jg
sbb
sbb
xchg
inc
cmpsl
pop
adcb
add
pop
pop
cmpsl
sub
sbb
fsubrp
popf
cli
scas
or
imul
mov
lcall
movsb
mov
jne
cmpsl
repnz
fwait
add
jp
gs
inc
and
dec
jl
xchg
xlat
clc
adc
inc
cli
sbb
out
int3
push
mov
cmpsl
or
cmp
loop
out
mov
sbb
sub
add
outsb
fimuls
sbb
pop
orl
inc
mov
fsubrs
cmpsl
cmp
add
aad
daa
cmpsl
icebp
inc
nop
sub
mov
or
dec
scas
imul
mov
jns
pop
and
dec
adc
jne
inc
shlb
pop
adc
sub
and
cmpsl
outsl
pop
mov
dec
lahf
cmp
ret
dec
shll
xor
mov
mov
inc
jo
popa
stos
cld
push
jne
cmpsl
pop
lods
or
push
mov
mov
cmp
sub
popa
pop
loopne
data16
ret
inc
mov
push
shl
sub
out
test
cmpsb
dec
xchg
mov
enter
roll
inc
sbbl
cmp
mov
cwtl
push
scas
cmpsl
adcl
cmp
fs
cmpsl
jg
stc
pop
ja
mov
lcall
popf
sub
mov
xchg
adc
mov
ja
shlb
add
mov
daa
jnp
dec
cmpsl
jo
addr16
mov
scas
and
mov
stos
and
jo
cmpsb
xor
fsts
loop
mov
rcrb
cs
push
lods
sub
sub
sub
jl
ret
adc
shlb
fistpl
test
in
mov
and
mov
outsl
dec
cmpsl
mov
fwait
xchg
test
inc
pop
mov
or
pop
xchg
push
xor
rorb
adc
enter
mov
jne
pop
push
mov
sub
add
cld
test
sbb
and
jns
lret
mov
or
pop
jg
cmpsl
or
repnz
in
push
cmp
cmpsl
pop
test
xchg
or
outsb
push
and
stos
out
imul
push
or
int3
mov
popa
fwait
push
inc
cmpsl
gs
dec
pop
and
ret
and
sub
orl
movsb
xchg
xor
cmp
adc
adc
aad
lahf
or
imul
shll
xchg
mov
xor
in
adc
mov
loope
jge
out
add
push
mov
adc
cmpsl
insl
enter
push
fstps
push
or
lods
push
dec
test
mov
push
popf
mov
loop
adc
dec
les
shl
pop
mov
jno
out
xchg
in
cmpsl
pusha
repnz
push
cmpsl
roll
mov
pop
leave
pop
adc
es
xchg
cmpsl
xorl
mov
dec
lds
ja
xor
daa
cli
sarl
cmpsb
mov
stos
cmpsl
xchg
arpl
dec
ds
fsubs
adc
jns
mov
mov
dec
std
push
jp
jae
cmpsl
push
fidivl
iret
or
sub
and
mov
push
jne
inc
cmp
inc
xor
mov
mov
jmp
repz
jp
lcall
les
fists
xor
loop
cmp
std
int3
jle
pop
sub
movsb
ficompl
insl
mov
lret
sbb
loopne
pop
fwait
mov
mov
cmpsl
cmc
loop
fsub
cld
cmpsl
pop
pop
xchg
test
mov
repz
jns
xchg
cmp
iret
mov
sub
xrelease
cmpsl
int
mov
cmpsb
inc
fnstenv
sub
jmp
repnz
clc
daa
cmpsl
cmpl
cli
xchg
cmpsl
aaa
lods
out
mov
and
and
or
sarl
push
popa
addr16
jl
das
and
xor
loop
xcrypt-ctr
cmpsl
push
jge
pop
das
call
pushf
fimull
fwait
and
mov
jns
add
ja
sub
push
mov
cmp
sbb
cmpsl
mov
push
jge
inc
cmpsb
out
adc
cmpsl
and
inc
mov
mov
jns
test
push
mov
xlat
out
sbb
mov
cmpsl
out
jg
jb
into
cwtl
cmpsl
cmpsb
es
in
addr16
cmpsl
xor
jne
xor
mov
cmpsl
push
fcomps
xor
and
je
loope
cmp
xchg
push
and
jnp
stc
sbb
xor
stos
sub
mov
ja
xchg
popa
inc
lock
scas
mov
es
subl
add
sahf
xor
inc
testb
test
daa
shrb
push
in
cmpsb
jecxz
cmp
imul
cmpsl
jmp
jge
imul
andb
sbb
cmp
lea
daa
push
mov
cmpsl
mov
fs
dec
out
cmp
ret
mov
in
and
cmp
cmp
xchg
inc
add
test
inc
stos
movl
dec
sbb
mov
mov
or
or
sub
insl
test
pop
mov
je
mov
cwtl
ljmp
jno
mov
int3
push
cmpsb
shll
divl
fwait
cmp
ljmp
cmp
pop
cmpsl
aaa
push
pop
inc
mov
mov
mov
sub
idivl
fstps
pop
mov
iret
ljmpw
cmp
push
inc
dec
cmpsb
aaa
push
mov
in
fldt
cmpsl
loope
add
jge
orl
paddb
cmpsl
loop
lret
fdivp
pop
push
loope
sbb
fsubr
pop
ss
shll
repz
pop
push
idivb
mov
and
out
sub
sub
cmp
loop
rcrb
mov
fwait
inc
mov
out
cmpsb
cwtl
aam
mov
and
data16
lods
scas
cmpl
inc
mov
pop
aad
adc
cmc
xchg
out
subl
icebp
loope
cwtl
pop
sbb
dec
push
or
sub
jo
push
jmp
lcall
imul
fistpl
sti
sahf
cmpsl
ljmp
stos
lcall
aas
push
add
cmpsl
or
inc
jmp
cmpsl
loope
fcoms
les
and
cltd
outsb
cmpsl
push
lcall
cmpsl
leave
jb
push
scas
imul
push
cmp
ss
pop
mov
push
outsb
orl
gs
cmp
mov
imul
push
jge
mov
cmpsl
xor
insb
mov
mov
cmp
cmc
cmpsl
adc
lods
loopne
enter
xor
insb
adc
in
out
xor
jg
jmp
adc
adc
lret
test
lcall
js
and
push
mov
lds
imul
mov
add
dec
dec
ja
cmpsl
ficoml
mov
add
aam
mov
in
adc
push
xor
lret
sbb
lods
jp
xor
lcall
push
ret
jne
lret
and
fldt
sub
xor
jecxz
mov
outsl
pop
subl
bound
push
test
cmpsl
je
mov
pop
fs
aas
mov
and
mov
adc
sbb
or
xchg
cmpsl
add
xchg
pop
xlat
ret
lret
dec
pop
es
cmpsl
jb
pop
mov
cmp
das
gs
loop
xchg
cmpsl
pop
adc
inc
inc
js
stos
jb
or
xchg
mov
daa
add
mov
add
sub
mov
dec
aam
notl
cmpsb
ss
sbb
pop
xor
cmp
pop
cmpsl
or
sti
testb
loope
call
stos
jnp
cmpsl
pop
icebp
push
add
je
lahf
ja
xchg
and
popf
sti
ret
push
std
fcmovne
adc
cli
mov
out
mov
cmpsl
popf
xchg
rcrl
pushf
dec
fcoml
scas
cmpsl
cld
enter
loope
repz
jecxz
frstor
cmpsl
call
inc
or
fistpll
shlb
add
fistps
jno
gs
xlat
aad
daa
rcrb
rcll
outsb
into
shl
sub
roll
jp
mov
ror
cmpsl
lods
adc
lock
sbb
sbb
xor
out
dec
cmpsl
stc
and
icebp
cmp
xchg
mov
subb
mov
sbb
arpl
inc
inc
repz
cmpsl
sub
or
xor
setb
inc
sbb
std
loopne
and
mov
ja
pop
pop
rcll
pop
and
mov
adc
jmp
cmpsl
popf
cwtl
aaa
cltd
in
sbb
inc
fsub
fisubs
mov
pop
push
jo
add
cmp
mov
addr16
jo
push
cmpsb
ret
inc
cmpsl
inc
or
mov
and
jb
iret
cld
inc
xor
cmpsl
into
add
xchg
jmp
push
mov
push
sub
cmpsl
jb
push
pop
bt
rcrl
aaa
cmpsl
sbb
fiaddl
fmuls
lds
cmpsl
lods
add
jne
xchg
imul
daa
adc
lods
test
sub
jno
leave
dec
cmpsl
mov
pop
pop
cmpsl
pop
jmp
inc
jge
jbe
cmpsl
mov
test
arpl
mov
or
ds
movsb
or
mov
daa
lret
cmpsl
aad
sub
lea
nop
cmpsl
pop
inc
jo
mov
mov
mov
adc
cld
sub
sub
pop
int3
and
scas
jne
cmpsl
or
push
insl
jne
popf
cmp
xchg
lcall
out
sbb
outsl
repz
cmp
das
cmpsb
pop
or
cmpsl
xchg
aas
push
into
mov
dec
mov
sahf
andb
cmpsl
cs
adc
out
rcll
adc
push
add
push
cmc
xchg
cmpsl
jge
lods
xor
pop
cmp
add
bound
out
jg
cmpsb
scas
cmpsl
rolb
jp
cld
mov
or
sti
outsl
nop
mov
push
cmpsb
mov
and
pop
imul
push
cwtl
xcrypt-ctr
cmpsl
sbb
dec
dec
mov
outsl
shll
out
int
in
xchg
repz
jo
insl
mov
add
shll
lret
cmc
cmovns
and
or
mov
pusha
sbb
push
adc
mov
mov
cmp
mov
leave
push
cmp
cmpsl
out
pushf
adc
dec
mov
je
jmp
mov
int3
jbe
dec
sub
in
pop
addr16
inc
mov
hlt
cmpsl
pop
out
leave
aaa
jns
mov
imul
shll
mov
xor
xor
mov
or
out
lods
jg
xor
sbb
ret
dec
clc
data16
ret
xchg
xor
ret
std
loop
xor
adc
sbb
sub
test
jns
scas
mov
mov
in
ss
xchg
nop
xchg
imul
push
xchg
out
mov
sub
jbe
cli
cmp
mov
inc
add
fxch
and
fwait
cmpsl
rcr
orl
cmpsl
xchg
jge
mov
lods
mov
mov
into
cmpsl
loop
jecxz
fwait
ret
sbb
lret
rorl
fdivr
mov
test
aaa
xchg
cmpsb
sub
jnp
xchg
outsb
xchg
pusha
mov
adc
int3
aas
ror
loope
leave
fstpt
lahf
xchg
sbb
js
xor
ficoms
jmp
push
push
adc
clc
fdivrs
mov
xchg
jnp
ja
aaa
mov
test
fwait
jge
test
xor
aam
xor
pop
mov
loopne
cmpsb
stc
mov
cmpsl
jl
sahf
out
cltd
mov
push
dec
in
cmpsl
je
cmc
scas
rol
mov
mov
and
push
dec
push
mov
cmpsl
sbb
or
push
pop
push
pusha
jl
icebp
jmp
mov
push
push
cmp
in
mov
fsubl
adc
jg
xchg
lds
in
aas
sub
les
xchg
cmpsl
ss
xchg
insb
xchg
enter
inc
push
lahf
or
fcomps
rolb
cmpsl
cmp
xor
push
leave
mov
jbe
adc
cmp
mov
fs
in
in
mov
xor
clc
cmpsl
cmc
fcoml
das
xchg
cli
sbb
cmp
lock
mov
mov
sbb
shll
jge
or
jl
cmpsl
mov
out
inc
dec
loop
cmpsl
cmp
pop
clc
pop
sahf
loope
fsubrs
loopne
cmp
and
mov
gs
mov
roll
std
rol
fistl
ss
data16
cmpsb
cmpsl
jne
test
jbe
data16
outsl
sbb
and
cmpsl
pop
inc
adc
cmp
call
icebp
in
nop
jns
mov
sbb
out
data16
filds
add
mov
das
xorl
shlb
leave
add
ja
loope
daa
push
enter
hlt
cwtl
das
repnz
ror
jb
insl
scas
ljmp
add
mov
adc
arpl
mov
mov
ret
mov
mov
xor
jnp
cmpsl
xchg
mov
repnz
aad
dec
or
push
cmpsl
fwait
pop
fistpl
icebp
inc
cmpsb
lods
shlb
out
add
cmpsl
adc
push
sub
ljmp
xor
imul
dec
fldl
and
mov
adcl
jg
loop
movb
daa
cmp
jmp
mov
push
ror
pop
call
outsb
scas
sbb
loope
lds
outsb
mov
iret
ret
fdivrs
mov
lahf
movsl
cmpsl
pop
mov
inc
dec
pop
add
xchg
push
cmp
add
pop
js
imul
inc
mov
mov
adc
mov
jg
mov
xorl
sbb
rcrb
jmp
cmpsl
xchg
aam
cmp
jae
out
imul
mull
cmp
mov
cmpsl
xor
cmp
inc
sbb
cmpsl
inc
or
xchg
pop
dec
shrl
push
lcall
int3
ret
data16
in
cmpsl
push
cmp
pop
dec
sub
inc
insl
add
adc
xchg
cmpsl
mov
scas
ds
inc
nop
xor
aaa
std
into
add
mov
jmp
shrl
in
imul
pop
mov
mov
clc
jmp
xchg
fs
push
mov
mov
jle
mov
hlt
sbb
out
add
cmpsl
or
lods
dec
icebp
cmpsl
scas
shl
test
int3
xor
jne
out
jns
xchg
fwait
mov
scas
ss
push
sbb
cmpsl
mov
pop
mov
add
mov
xchg
inc
mov
cwtl
mov
loope
xor
pop
dec
pop
scas
int
cmpsl
push
push
inc
sub
or
ret
gs
lahf
mov
and
test
mov
js
mov
jne
mov
push
std
and
lds
fstpl
les
push
add
loop
and
in
sub
lcall
cmpsl
faddl
es
mov
dec
cmp
repz
loop
jecxz
inc
mov
sahf
and
xchg
gs
aad
cmpsl
adc
adc
cwtl
cli
out
call
stos
aaa
dec
xor
cmpsl
test
nop
jp
sti
cltd
add
addb
mov
xor
cmpsl
xchg
out
dec
das
xor
repz
in
mov
test
push
xor
into
popa
mov
gs
pop
push
cmp
stos
mov
cmp
dec
jl
call
das
push
pop
xor
loop
jecxz
cmpsl
and
sbb
mov
or
sub
aam
popa
filds
cmpsb
mov
cmpsl
insl
jecxz
mov
jnp
cmpsl
in
sub
sub
mov
mov
cmp
jg
fwait
cmpsl
adc
dec
lea
movsb
aam
test
lods
int3
arpl
push
loop
ret
mov
or
stos
mov
mov
hlt
in
loopne
cmpsl
adc
clc
jns
aam
xor
mov
sti
inc
and
imul
cmpsl
push
andnps
cmp
fisttpll
int3
lahf
mov
cmpsl
into
pop
iret
push
mov
cmpsl
mov
add
sbb
xchg
push
jp
cmpsl
loopne
outsl
ljmp
gs
pop
fwait
xor
sbb
mov
psadbw
mov
mov
sahf
push
cmpsl
rorl
rolb
cmc
adc
xchg
leave
inc
lret
cmpsl
jge
pop
cwtl
pop
shll
mov
sahf
mov
stos
dec
push
ljmp
and
les
cmpsl
into
ficomps
out
inc
in
int3
dec
divl
jae
sbb
sbb
stos
or
jp
andl
mov
in
lods
test
ja
add
dec
cmp
xchg
and
sub
mov
test
fisttpl
enter
mov
pop
add
call
stos
sub
jne
shll
add
mov
or
cmp
mov
ljmp
popa
in
inc
es
shll
in
cmpsl
scas
dec
add
jmp
pop
rol
dec
in
cmp
jle
cwtl
cmpsl
adc
inc
jmp
xor
ljmp
cmpsb
test
cmpsb
std
hlt
shrl
adc
inc
in
imulb
fimuls
sarl
cmpsl
shlb
adc
mov
cmp
pop
dec
cmp
mov
sub
fldt
insl
lret
leave
pop
gs
imul
dec
mov
test
data16
ficoml
dec
cmpsl
pop
js
lds
inc
cmpsl
shl
push
or
icebp
cli
cmpsl
int3
add
bound
cmp
je
das
sbb
cmp
xchg
cld
xchg
es
std
or
cmpsl
adc
subl
or
cmpsl
addb
mov
xor
mov
push
push
loopne
stc
stos
mulb
pop
cmpsl
dec
push
insl
enter
std
cmpsl
cmpsb
fiadds
fstp
add
adc
cmpsl
cwtl
push
and
or
ret
nop
mov
cmpsl
hlt
or
pop
push
rclb
sub
pop
inc
and
add
ljmp
loop
mov
call
lds
fwait
mov
sbb
sub
pop
xchg
out
inc
xor
les
pop
dec
xchg
push
cmpsl
outsb
loopne
imul
mov
das
cmpsl
mov
xor
test
into
mov
cmpsb
lods
cmp
dec
call
jmp
jg
add
xorl
and
jno
ljmp
sub
stos
mov
xchg
das
jp
sub
cltd
test
incb
or
notb
ljmp
fwait
push
push
jo
and
out
push
add
test
sti
pop
inc
sub
rcll
cmpsl
popf
lods
mov
ja
lcall
frstor
sub
xor
mov
les
leave
gs
or
xchg
cmpsl
scas
imul
cmpsl
ret
int
daa
jp
ja
cmpsl
mov
js
shrl
out
scas
loope
loopne
cwtl
dec
popf
xor
jecxz
sbb
rcr
ss
rolb
mov
cmpsl
sbb
mov
cmpsl
insl
push
pop
sub
fwait
mov
cmpsb
pop
push
aaa
ljmp
out
aad
andl
rcll
pushl
jbe
xor
pminsw
mov
mov
lcall
and
jmp
andl
mov
imul
stos
sahf
ja
xchg
roll
push
cmpsl
divl
jge
cmp
out
repnz
pop
lods
movsb
sahf
cmpsl
mov
mov
sub
int3
sub
flds
daa
les
xchg
xchg
nop
jbe
cmp
stc
ret
repnz
cmpsl
std
pandn
dec
mov
sbb
pop
movsb
mov
addr16
or
mov
push
dec
iret
mull
lahf
jns
cmpsl
mov
jg
dec
lret
mov
movsl
aas
sbb
pop
and
mov
xor
mov
repz
cmp
imul
insl
mov
cmp
dec
dec
faddp
inc
dec
push
push
cmpsl
push
es
incb
inc
mov
stos
cltd
jae
outsl
add
ret
inc
add
cmp
into
shrb
pop
lret
fcomps
cmpsl
lahf
xor
xstore-rng
cmpsl
test
lds
xchg
jp
mov
mov
inc
and
imul
xchg
or
dec
enter
xor
jo
cld
adc
in
rolb
mov
inc
aaa
out
rcll
push
cmpsl
xchg
jb
xchg
shlb
cmpsl
push
jns
scas
mov
notb
lret
cmp
aaa
mov
cmpsb
in
mov
mov
pop
cmpsl
cltd
lock
mov
pushf
push
xor
add
xchg
stos
stos
mov
lahf
data16
sub
imul
lcall
faddl
les
push
mov
scas
sbb
jo
or
mov
pop
push
in
loopne
xor
cmp
cmp
or
sbb
inc
ss
cltd
xchg
out
in
addr16
gs
arpl
mov
push
or
mov
pop
call
add
mov
rcr
mov
xchg
mov
cs
xchg
and
mov
mov
xor
js
push
xor
jbe
inc
cmp
adcl
ja
inc
cmpsl
stos
dec
pop
adcb
es
lods
sbb
scas
arpl
xchg
addr16
mov
cmpsb
cmpsb
aad
cli
and
gs
icebp
fsts
mov
mov
cmpsl
sysenter
xchg
hlt
imul
daa
gs
aam
mov
mov
jno
ja
or
test
cmpsl
jge
mov
jle
pop
cmpsb
ja
lcall
push
ss
inc
gs
int3
jmp
insl
cmp
addr16
idivl
cld
mov
xchg
xor
pushf
ficomps
cmp
push
dec
sub
cmp
adc
push
cmp
push
dec
js
fwait
sbb
stos
cmpsb
add
sub
cmpsl
pop
pop
ret
repnz
sub
or
sar
movsb
loop
push
leave
mov
dec
or
xchg
inc
sbb
call
pop
sub
sbb
xor
dec
and
xor
shll
fisubrs
lret
push
andl
cmpsl
push
shrb
pop
sbb
cmp
ljmp
xchg
aas
inc
out
xchg
mov
stos
popa
and
fdivr
popf
fwait
leave
and
pop
push
pop
fistl
cmp
lods
insl
sub
cmpsl
ja
loop
out
cli
nop
cmpsl
xchg
vaddpd
inc
sub
movsb
aas
fcmovnbe
jg
in
cmpsl
dec
sbb
ficompl
imul
pop
xor
mov
or
cmpsb
pop
into
hlt
aam
mov
mov
xchg
sub
cmpsl
sbb
pushf
xor
mov
scas
add
std
es
arpl
cmpsl
cmp
mov
sarl
pop
iret
push
addr16
mov
mov
sbb
adc
cmpsl
mov
mov
xor
aaa
xchg
cmpsl
lods
sub
mov
test
xchg
cmpsl
into
out
inc
jbe
fld
fsubr
ss
cmpsl
jle
lock
inc
mov
cmpsb
push
xor
sbb
cmpsl
pusha
sti
iret
dec
mov
adc
mov
fbstp
mul
int3
cmpsb
adc
clc
adc
jecxz
push
sbb
mov
outsl
push
cmpsb
test
xchg
xchg
scas
mov
mov
loope
xor
cmp
inc
pop
cmpsl
sbb
cmpsb
fdivl
mov
cmp
lret
loope
cmpsb
js
mov
loopne
in
sub
or
fstpt
pop
add
into
pop
cmpsl
mov
outsl
sub
pop
cmpsl
pop
mov
call
cmpsl
mov
ficoml
cmpsl
mov
sub
pop
mov
enter
inc
jg
inc
mov
push
daa
inc
cmpsl
pop
cmp
jge
loopne
mov
sbb
hlt
adc
fcoms
adc
data16
stos
pop
cmpsl
sub
pop
int
lods
sub
add
mov
jbe
mov
cmpsb
cmp
out
inc
cmpsl
ficoms
stos
sub
pushf
push
dec
popa
aad
sbb
cmpsl
and
arpl
inc
mov
pop
es
xchg
test
pop
cmpsl
jge
dec
out
and
test
lds
or
call
pop
xchg
dec
lods
pop
cmpsl
lea
outsl
jnp
cmpsl
fldenv
out
xchg
cmpsl
mulb
pusha
push
cmpsl
fcmovnb
push
insl
mov
into
cmpsl
push
data16
repnz
mov
bound
xor
sub
dec
push
imul
cmp
cmp
jae
je
sbb
loopne
xchg
in
mov
jno
push
cmpsl
aaa
inc
je
jns
adc
xor
imul
cmp
or
cmp
mov
iret
movsb
cmpsl
rorb
add
fdivl
mov
out
or
or
push
mov
test
cmpl
pop
sub
xor
pop
adc
fisttps
daa
xchg
cmpsl
mov
movsb
mov
cmpsl
mov
xchg
mov
shl
fiadds
dec
jmp
negl
sub
decb
test
scas
sbb
pop
adc
lods
jp
inc
xor
xor
adc
call
sarb
shlb
push
mov
mov
les
out
adcb
mov
jp
push
push
ljmp
adc
cmpsl
jge
insb
or
test
and
pop
in
inc
mov
aad
jecxz
cmpsl
fistpll
pusha
fwait
cmpsl
stos
mov
xor
mov
filds
jnp
pop
pop
mov
push
dec
shll
fldenv
fsubs
lea
cmpsl
ret
sbb
pushf
mov
and
ror
repz
sbb
mov
repnz
cld
aaa
int
mov
movsl
pop
pusha
sub
adc
or
jbe
call
scas
fisttps
cmpsl
and
leave
cwtl
ret
sub
mov
push
sbb
loope
inc
mov
int3
imul
mov
sub
cmp
add
mov
mov
ljmp
and
push
sub
xor
sbb
mov
push
push
rorl
in
loop
pop
and
mov
push
aaa
xchg
lret
int
cmpsl
mov
jl
lods
ret
or
call
xlat
push
xor
int
dec
test
cmp
fisttps
cmpxchg
shrl
hlt
ret
scas
sub
std
mov
roll
cmp
cmp
pop
stos
lret
adc
enter
cmpl
nop
sarl
jbe
xorb
mov
xor
cwtl
sbb
adc
aam
mov
mov
push
jmp
outsl
mov
adcl
jne
cmpsb
in
mov
xor
mov
inc
mov
int
push
fmul
call
fstpl
bound
add
cmpsl
movsb
sbb
dec
and
cmp
lock
push
mov
in
fwait
dec
or
cmpsl
adc
roll
ljmp
cmpsl
and
cmpsl
aaa
in
jmp
cmpsl
test
out
mov
cmpsl
popf
test
mov
dec
adcl
fmuls
xor
inc
inc
es
cmpsl
dec
shrb
stos
sti
jne
fs
lcall
mov
lret
mov
pop
or
call
or
push
mov
aad
cmpsl
push
repz
inc
and
cmpsl
lret
sub
fisubrl
dec
and
mov
xchg
cmp
or
ret
data16
mov
sbb
mov
xchg
and
inc
ret
popf
push
bound
sub
lahf
inc
pop
mov
clc
gs
xor
mov
push
lods
shlb
cmp
push
pop
add
cmpsl
mov
xchg
mov
push
sbb
add
insl
sarb
data16
pop
stos
bound
leave
xor
notl
cmpsb
dec
jne
in
jle
sub
push
jg
and
mov
mov
cmpsl
cld
fdivl
push
mov
sldt
push
mov
add
sbb
cmpsl
mov
push
int
xor
iret
call
faddl
orb
dec
pop
cmp
cmp
pop
mov
inc
push
dec
add
rclb
or
fldcw
imul
lcall
xchg
cmpl
aaa
mov
xchg
cmpsl
fwait
xor
lret
xchg
pop
ret
sub
nop
cs
cmpsl
mov
js
dec
and
setae
adc
pop
pop
cmp
sub
mov
mov
int3
test
sub
mov
and
mov
jb
ja
inc
mov
push
bound
add
idivl
push
push
or
cmpsl
inc
inc
dec
adc
sbb
mov
mov
xor
imul
mov
inc
pop
adc
out
lret
dec
pop
mov
cmpsl
test
jno
repnz
call
cwtl
testb
xchg
and
pusha
sub
dec
les
frstor
int3
nop
insb
jns
sbb
sti
ds
jmp
ret
mov
in
data16
fsubl
cmpsl
pusha
jns
xor
cmpsl
inc
in
pop
lret
fwait
mov
cmpsl
cmp
aam
jno
or
fwait
out
cmpsl
mov
cmpsl
dec
adc
addr16
out
xchg
add
movsb
xchg
out
inc
xchg
mov
push
adc
bound
cwtl
inc
jmp
lods
arpl
or
push
pop
pop
loope
add
mov
sbb
push
inc
pop
mov
cmpsl
adc
mov
cmpsl
add
dec
stc
mov
cmp
lods
rorb
shll
cmpsb
out
cmpsl
lods
pop
xchg
pusha
stos
pop
pop
dec
mov
stc
sbb
fadds
mov
cmpsl
mov
lock
cmp
mov
pushf
es
mov
loop
scas
dec
and
je
sbb
arpl
xchg
xchg
out
push
adc
push
mov
mov
iret
mov
stos
dec
movsb
xor
lods
cld
call
cmpsb
cs
sbb
clc
cmpsl
pop
lret
es
call
insb
pop
mov
movsb
lret
push
cmpsl
push
ret
inc
mov
bound
xor
fcompl
out
xor
lcall
mov
and
jp
add
test
mov
pushf
jmp
adc
cmpsl
sbb
dec
ljmp
sbb
in
test
cmpsl
inc
push
dec
pop
adc
into
sub
jns
ljmp
jmp
leave
daa
ljmp
cmpsl
inc
test
out
sbb
push
lret
shll
sbb
insb
in
cmpsl
add
pusha
lcall
int3
inc
pop
sub
adc
stc
nop
cmpsb
xchg
pop
ficomps
mov
stos
push
cmpsl
aad
pop
imul
adc
and
cmpsl
arpl
int3
fisttpll
test
in
out
jl
push
addr16
inc
cmpsl
jb
add
dec
dec
mov
cmpsl
adc
test
mov
scas
js
mov
adc
fldenv
mov
les
out
cltd
scas
lock
push
sbb
adc
push
mov
push
call
shlb
cmpsl
mov
pop
pop
ret
loop
jg
orb
arpl
lret
rcrb
inc
mov
jl
mov
fdivrl
add
pushf
sahf
in
xchg
xchg
aas
in
and
cltd
movsl
xchg
lods
jne
imul
jmp
and
cmpsl
cmp
jnp
cmpsl
lea
and
pop
test
cmpsl
das
outsl
test
sbb
inc
cmc
jecxz
mov
add
loope
push
jmp
xchg
sbb
push
cmpsb
je
jl
sbb
cmpsl
inc
mov
mov
inc
fnsave
in
and
cmpsl
insb
fists
mov
icebp
push
into
out
insl
outsb
lods
cltd
int3
iret
ljmp
sbb
push
xchg
add
sub
and
testl
faddp
dec
mov
push
push
inc
mov
test
xor
push
cmpsl
fstpt
pop
xchg
or
lods
jecxz
pusha
mov
push
xchg
dec
cmpsl
sub
jmp
cmc
cmpsl
divl
xor
rolb
sbb
cmpsl
jmp
cmp
lds
cmpsl
add
andb
mov
cmpsl
mov
fbld
inc
cs
iret
cmpsl
mov
pusha
dec
xor
mov
sbb
push
push
adc
scas
cmp
sti
dec
fwait
jne
mov
jmp
sub
cmp
push
into
pop
lahf
or
js
fcomps
scas
sub
pop
xchg
adc
lret
fpatan
in
popf
movsb
shrl
ss
mov
cmpsl
push
mov
ret
data16
sub
and
out
lcall
int3
xchg
jns
mov
cmpsl
inc
pusha
mov
sbb
or
cmpsb
sbb
xchg
add
push
loopne
push
dec
aas
push
mov
push
pop
pop
int3
inc
pop
add
or
cmpsb
cmp
es
ret
and
cmpsb
xchg
shr
xor
and
push
mov
dec
mov
enter
xchg
cmpsl
pmaddwd
xor
cmpsl
lahf
jb
mov
push
int3
sub
daa
xchg
ljmp
adc
cmp
in
cmpsl
fs
imul
fcomps
ret
lret
push
lahf
decb
jne
inc
in
cmpsl
mov
sahf
sarl
lcall
mov
push
sub
jbe
in
cmpsb
fmul
jle
call
aaa
pop
pop
or
xchg
and
into
sub
mov
js
ja
pop
xchg
aad
cmpsl
pop
shll
add
inc
push
push
imul
cld
dec
ja
stos
cmpsb
aam
push
icebp
lcall
rcrl
cmpsl
adc
and
push
aad
cmpsl
mov
outsl
mov
lcall
fsts
mov
addl
or
inc
mov
ret
pop
lcall
data16
daa
dec
iret
and
mov
loope
mov
frstor
jns
lret
sahf
add
cmpsl
cmp
dec
test
addr16
popf
in
outsb
dec
and
jno
lock
add
sti
data16
cmpsl
jge
fcmovnb
mov
sub
les
adc
xor
cmpsb
stos
mov
jmp
sub
cmpsl
movb
pop
pop
cmpsl
popa
std
rolb
and
dec
xchg
mov
lock
cmpsl
pop
push
jl
pop
insl
xlat
in
in
mov
repnz
adc
enter
xor
pop
arpl
jg
jnp
adc
das
cwtl
in
shll
jge
popl
cmpsl
push
sbb
scas
out
jl
cmpsl
or
sbb
push
inc
pop
xchg
cld
mov
cmpsl
cmp
jmp
out
lret
arpl
push
cmp
andl
cmpsl
push
fdiv
fcmove
ss
test
mov
sbb
rcll
test
ds
aam
rcll
mov
mov
pop
std
idivb
inc
inc
mov
lods
cmpsl
mov
sub
cmpsl
cmp
stc
mov
in
cmpsl
push
pop
mov
pop
mov
sbb
lret
shl
out
mulb
inc
cmpsl
and
std
adc
bnd
dec
insb
adc
cmpsl
cs
das
js
pop
xchg
cmpsl
repz
popf
andb
mov
outsl
add
cmpsl
push
lret
or
xlat
jl
mov
mulb
adc
cmp
push
repz
or
or
addr16
clc
sbb
cmp
mov
hlt
dec
xchg
jo
test
xchg
cmpsl
jae
inc
sbbl
loop
sub
cmpsl
and
inc
xchg
push
enter
insl
or
add
ja
fwait
mov
cmpsl
push
rcrb
ljmp
mov
and
cmpsl
scas
xor
stos
inc
cmpsl
mov
dec
bound
sbb
je
adc
fwait
jnp
jmp
in
imul
je
enter
out
lock
pop
cmp
or
lret
jl
mov
sub
fxtract
lds
mov
pop
imul
push
rorb
fisubl
lcall
js
pop
push
mov
fimuls
jmp
xor
dec
cmpsb
in
into
xchg
jae
xor
mov
in
xorb
lret
cmc
push
out
jo
mov
xor
lds
int3
ljmp
dec
cltd
cmpsl
movsb
mov
xchg
mov
push
rcl
ja
lcall
icebp
ss
cmc
or
pop
pop
imul
scas
mov
out
sbb
rolb
sub
cli
sbb
adc
xor
jns
stc
xor
jo
inc
mov
loop
add
cmpsb
xlat
shlb
mov
fucomi
and
mov
fisubs
sti
out
mov
cmc
sub
hlt
push
jge
adcl
cmp
add
cmpsl
xchg
ja
mov
jg
cmpsl
fsts
pop
mov
bound
gs
sbb
fisttpl
xlat
ret
lea
adc
loop
jae
cmpsl
adc
daa
jbe
cmpsl
out
jl
clc
cmp
cmpsl
test
push
rcrl
sub
cmpsl
mov
ret
push
in
dec
imul
gs
in
addl
aad
and
cs
adc
mov
xchg
cmpsb
xchg
or
data16
push
mov
movsl
ljmp
test
stos
sub
sub
ret
movsb
inc
or
sbb
es
test
or
sti
push
sub
jp
in
cmpsb
stos
jmp
sub
mov
in
mov
xchg
sti
nop
fisubs
mov
and
sbbb
out
lea
neg
loope
dec
popa
cmpsl
jge
hlt
sti
into
enter
fs
xchg
pop
popa
lea
mov
jo
sahf
js
lret
pusha
push
loope
cli
das
jnp
out
sbb
xor
sti
xchg
push
or
pop
lgs
push
jl
mov
cmc
jle
pop
sbb
rcl
mov
cmpsl
mov
das
inc
hlt
mov
xchg
adc
cmp
in
lods
inc
adc
cmpsl
fs
in
orl
sbb
xlat
std
cld
adc
inc
lret
and
jno
cmpsl
aam
mov
imul
cmp
jb
gs
loopne
fnstsw
pop
sub
call
jnp
fistl
jecxz
es
cmpsl
mov
ljmp
pop
loop
adc
mov
fdivrl
dec
xchg
xchg
pop
lahf
xorb
jle
mov
push
loopne
es
in
mov
sbb
mov
stos
bound
daa
imul
dec
aad
pushf
mov
cmpsl
mov
adc
add
test
fiadds
dec
cmpsl
mov
in
push
or
push
dec
cmpsb
pushf
lock
cmpsl
cld
jbe
mov
xchg
stos
lods
fsub
sarb
out
jge
arpl
dec
pop
cmpsl
ja
outsl
insl
jmp
out
pop
rclb
jno
divl
ja
shl
mov
and
lret
and
sub
sub
cmpsl
dec
jge
mov
aad
cmpsl
or
xchg
adc
adc
sub
daa
mov
xchg
cmpsl
pop
lock
adc
cmp
cmpsl
mov
test
mov
outsb
push
or
jbe
xor
cmpsb
and
fs
shlb
in
test
pusha
cltd
xor
aas
mov
insb
dec
dec
outsl
lods
push
cltd
pop
sti
cmp
xchg
and
insb
cmpsl
scas
stos
sub
rcr
add
outsl
bnd
loop
test
jle
int3
data16
in
mov
sub
shrl
cmp
xor
out
xchg
dec
out
in
mov
sub
push
cmp
test
mov
mov
iret
mov
icebp
pop
lcallw
cmpsl
fcomps
mov
out
ja
mov
leave
push
sbb
aam
cmpsl
xor
and
cmpsl
push
mov
int3
fwait
jns
shll
add
icebp
imul
cmc
xchg
int
sbb
mov
xorl
mov
or
dec
xor
adc
sbb
cmpsl
faddp
push
std
pop
sbb
shr
rdtsc
mov
shlb
sub
add
dec
fwait
jg
sbb
cmpsl
mov
int3
mov
xor
or
out
or
xchg
mov
js
arpl
lcall
xor
and
jle
cmpsl
sbb
jg
ret
pop
mov
fiadds
push
and
cmpsb
jecxz
cmpsl
sarl
and
popf
or
mov
lea
xchg
lods
cmpsl
rcrl
jge
pop
jmp
aad
in
dec
mov
push
push
ljmp
repnz
cmpsl
push
or
adc
cmpsl
push
andb
sbb
rcll
jp
push
test
pop
fldenv
pop
push
push
cltd
lds
push
ds
icebp
mov
daa
and
ss
adc
adc
cmpsl
mov
test
xchg
mov
mov
xchg
outsl
ss
add
subb
push
dec
xor
jl
cmpsl
inc
or
pusha
mov
lcall
adc
xor
dec
aas
ljmp
lret
add
pop
lret
stos
cmpsb
mov
and
sbb
adc
mov
and
seto
call
insl
push
das
xor
in
lcall
cmpsl
mov
testl
loope
jl
mov
test
rcr
and
cmpsl
iret
ljmp
cmpsl
pop
mov
mov
cmpsl
inc
mov
push
popa
sar
or
sbb
adc
push
inc
pop
ror
into
icebp
jmp
push
mov
insb
add
imul
xchg
mov
add
or
repz
ret
cli
mov
jecxz
data16
or
xchg
sar
test
mov
shll
push
ljmp
imul
fsubs
jno
mov
mov
ficomps
add
subb
cmp
and
stc
mov
xchg
xor
push
mov
cmpsl
xor
fwait
xor
pop
fidivs
cmpsl
loop
hlt
inc
push
pop
lds
sti
dec
inc
cmpsb
lea
shlb
add
inc
or
and
jae
jge
mov
repnz
cmpsl
jne
mov
push
lock
add
or
cmpsl
sub
out
sbb
lods
mov
fldcw
scas
xchg
lret
jns
and
inc
out
push
cmpsl
das
xor
movsb
arpl
cmpsl
push
jno
stc
cmp
dec
mov
xchg
add
add
cmpsl
ja
sbb
jle
adc
push
pop
scas
xor
lods
pop
xor
sarb
and
mov
push
inc
fisubrl
leave
sti
cmpsl
xchg
bound
mov
ja
dec
or
js
in
xlat
fwait
sub
push
sarl
pop
xchg
mov
inc
inc
push
and
mov
sahf
cmpsl
bound
pushf
adc
push
inc
cmpl
das
jg
mov
push
sbb
and
xor
icebp
cmpsl
jle
add
cmpsl
ret
shlb
in
repnz
jae
lods
sub
arpl
push
clc
mov
and
cmpsl
xlat
or
sbb
popa
cld
stc
lds
imul
pop
shll
cmpsl
jno
xchg
or
cmpsl
dec
or
mov
outsl
push
cmpsl
mov
add
pop
cmpsl
dec
add
movsb
sub
xor
jge
push
adc
inc
out
cmpsl
divb
push
mov
pop
inc
mov
cmpsl
dec
loop
mov
cmpsl
icebp
lret
jb
jmp
jne
sar
outsl
push
mov
cmpsl
xchg
and
in
or
inc
cmpsl
les
daa
mov
arpl
pop
lcall
fstp
and
add
jb
push
loope
add
add
sbb
dec
xchg
aas
popf
sti
cmpsl
dec
xor
cmp
into
divb
xchg
xchg
lret
ja
cmpsl
jb
adc
inc
xor
cmpsl
decl
push
cmpsl
mov
cwtl
fsubs
lcall
test
mov
or
xchg
jo
es
mov
adc
jne
pop
fbld
bound
mov
out
inc
xchg
cli
xchg
fidivl
jmp
stos
xor
or
leave
jae
hlt
lods
or
js
pushf
std
arpl
push
jmp
jnp
pop
sbb
in
cmp
ret
sti
popf
cmp
jge
aad
sbb
lret
pop
adc
xchg
inc
cmpsl
mov
xchg
sub
push
orb
pop
mov
push
mov
mov
fsubp
or
jne
mov
leave
sbb
xor
add
repz
inc
adc
inc
dec
adc
cmp
psraw
out
mov
push
stos
xchg
push
ss
add
cmpsl
mov
std
dec
cmpsl
sub
jecxz
rorb
imul
dec
xor
cs
ds
sub
cmpsl
pop
out
fstl
and
out
push
pop
test
pop
jae
addr16
push
cmpsl
stos
test
ss
sti
push
lret
out
sub
or
add
jmp
ror
imul
lahf
sub
adc
je
jle
sbb
mov
xor
adc
and
push
jle
in
pop
pop
push
adc
imul
push
push
je
cmpsl
and
cmp
ret
int3
cmpsl
xor
lods
push
ljmp
cmpsl
mov
and
mov
cmpsl
dec
xchg
outsb
jg
mov
lock
sbb
call
jno
dec
fsubrp
dec
cmp
outsb
jns
cmpsl
inc
outsb
inc
jne
jmp
cld
add
xchg
sbb
js
int3
jo
fsubs
cmc
mov
lock
pop
push
pxor
pop
outsl
repz
fsubrl
cmpsb
sbbb
cmpsl
les
or
das
push
out
cmpsl
ret
bound
cmp
cmp
push
pop
push
mov
sub
pushf
shrb
call
mov
pop
addr16
rorl
pop
aaa
imul
inc
mov
cwtl
stos
or
cmpb
mov
cmpsl
sub
lods
adc
cmpsl
sbb
cmp
enter
jg
cmpsl
rcll
xchg
lahf
cmpsl
in
ficoms
adc
sbb
out
es
sub
loopne
or
in
lahf
cmpsl
stos
add
mov
bound
test
lahf
pop
addb
dec
ja
inc
arpl
or
mov
fmuls
rcll
popf
fstps
mov
mov
inc
shlb
sub
and
sub
xchg
loop
push
aas
loopne
cmpsb
mov
mov
call
cmpsl
sub
jmp
notb
xchg
scas
cld
cmpsl
in
insl
sub
jecxz
mov
dec
jns
mov
lret
mov
sbb
push
mov
pop
xchg
cmpsb
mov
mov
mov
cmpsl
xorl
sub
enter
stos
nop
cmpsl
mov
jb
arpl
mov
jns
scas
cmp
pop
sub
daa
int3
or
sysexit
shll
stos
inc
push
push
dec
sahf
lret
cmpsl
pop
push
sbb
xor
add
or
mov
cmpsl
stc
jge
or
cmpsl
and
xchg
mov
cmpsb
dec
sar
jmp
out
push
sahf
mov
pop
data16
sbb
cs
xor
enter
dec
mov
std
sarl
inc
sub
push
jp
bound
ret
add
movsl
inc
pusha
pop
fldcw
lods
fcoml
cld
rcrl
xchg
mov
lahf
or
cmpsl
arpl
mov
lea
xor
gs
outsb
lret
pop
xor
fwait
in
mov
mov
cmpsl
mov
cmp
pop
shl
xlat
jnp
rolb
decb
cmp
jno
xchg
into
cmpsl
inc
shrb
xchg
mov
cmpsl
sbb
int
dec
xchg
sahf
cmp
in
frstor
jns
lret
es
push
hlt
xchg
cmpsl
aam
mov
sub
dec
loope
jnp
jae
out
xor
lds
jo
mov
sbb
sti
inc
pop
cmpsl
shrb
aad
rclb
and
lods
cmpsl
je
mov
xchg
push
adc
in
cmpsl
lods
jmp
or
cmpsl
pop
ss
cmp
daa
cs
and
stos
lcall
pop
xchg
test
xchg
aam
inc
push
sbbb
insl
push
mov
cmpsl
sub
outsb
fistpl
pushf
push
notl
loop
test
xchg
cmpsl
mov
cmpsl
cmpsb
add
jp
outsl
imul
ss
add
jno
rorl
xchg
mov
loope
lret
flds
lods
mov
xor
out
jp
jne
xor
dec
or
inc
dec
mov
sub
in
cmpsl
ficomps
lds
lcall
and
outsl
mov
or
cmc
ret
mov
lods
mov
adc
test
mov
push
mov
dec
cmpsl
mov
popa
pop
mov
stos
int3
sbb
cmpsl
add
jle
mov
sbb
scas
test
dec
ret
in
pop
jae
inc
cmpsl
mov
insl
push
lret
jge
out
lods
orl
dec
arpl
xchg
stos
cmp
shrl
in
jb
pop
mov
aad
shrl
gs
mov
jno
jle
mov
push
into
std
ret
inc
add
test
in
jge
fwait
addr16
jmp
xor
cmpsl
jbe
inc
and
jb
push
cld
rcrl
cltd
cli
aaa
inc
in
push
cld
sahf
pop
inc
push
lods
xchg
icebp
ds
lret
or
fisttpll
arpl
or
repnz
popf
popa
push
cmpsl
in
ret
sbb
mov
sahf
stos
cmpsl
add
adc
cmpsb
cmpsl
shll
mov
sbb
pusha
stos
out
add
es
dec
jmp
and
jbe
mov
inc
adc
push
pop
and
daa
cmpsl
inc
lock
or
adc
mov
mov
stos
cmpsl
iret
sbb
loopne
mov
ret
mov
out
or
inc
cld
mov
in
arpl
mov
cmp
fsts
push
mov
cmpsl
jle
sbb
xor
cmp
stos
and
aaa
xchg
lret
cmpsl
cs
jb
and
cli
mov
push
adc
test
adc
dec
add
and
mov
cmp
lcall
inc
loop
leave
mov
xor
ds
and
cmp
inc
mov
xor
int
mov
repz
sub
cmpsl
aaa
pop
xchg
inc
mov
in
jp
jnp
add
cmpsl
movsb
push
in
sub
sbb
out
add
enter
adc
stos
xchg
inc
sbb
and
in
cmpsb
xchg
sbb
cmpsl
sarb
outsb
add
jns
cmpsl
mov
andl
mov
pop
cli
gs
push
add
push
ljmp
sbbb
and
xor
jb
out
out
pop
stos
cmpsl
inc
jl
pop
sub
in
push
rorl
sub
hlt
sub
cmpb
mov
dec
dec
in
cmpsl
push
xchg
fsubl
push
leave
rcll
cmpsl
adc
cmpsl
inc
int3
add
mov
sbb
es
and
fdivs
adc
les
xor
mov
shll
xlat
or
cmpsl
jae
test
lret
imul
lods
jecxz
sbb
ja
lret
cmpsl
cld
cli
inc
sti
aaa
arpl
outsl
cmpsl
lock
xchg
adc
fcomip
cltd
cmpsl
pop
xchg
loope
push
or
fwait
xlat
add
sbb
in
ret
les
xchg
or
inc
adc
cmp
mov
in
xor
cmpsl
mov
or
push
jo
push
cmpsl
je
insb
outsl
insl
les
cmpsb
ja
pop
xor
push
shr
mov
push
or
cmp
xchg
jge
in
mov
push
jecxz
pop
ljmp
inc
negl
cmpsl
fidivrs
mov
mov
push
das
rcl
aaa
bound
inc
ljmp
cmpsb
lods
loopne
inc
dec
jg
cmpsl
push
adc
pop
sarl
pop
push
adc
faddl
sbb
cmpsl
orb
and
push
push
adc
sbb
lds
fisttpll
xchg
hlt
cmpsl
into
test
mov
fmull
cmpsl
jo
vpmuludq
repz
ljmp
xchg
rcrl
add
push
lcall
in
xor
pop
cmpsb
dec
dec
adc
push
mov
jge
ret
jne
cmpsl
enter
iret
xchg
jg
jo
aad
xor
cmpsl
sbb
shll
push
andb
push
clc
or
sub
mov
cmpsl
in
sub
cmpsl
pop
add
rcll
fnstenv
int
outsb
or
cmpsl
push
mov
cmpsl
xor
sub
int
add
push
and
lods
jns
inc
mov
xor
cld
pusha
pop
lahf
mov
and
cmpsl
dec
cmp
xchg
sbb
inc
pop
mov
and
stc
push
adc
adc
sub
sbb
mov
sub
add
scas
pop
pop
inc
loope
mov
ss
mov
sbb
mov
aaa
sub
cld
aas
int
cmpsl
pop
aad
mov
adc
inc
movsb
sub
enter
mov
sub
subl
shll
xchg
and
shl
xchg
and
adc
icebp
mov
pop
mov
jae
loope
and
cmpsl
jnp
loop
aam
rcrl
fsubs
adc
incb
je
adcl
inc
sub
dec
sub
cs
mov
cmp
pop
data16
mov
insl
lods
insb
cmpsb
sbb
push
int3
cmp
mov
push
sub
xchg
leave
or
adc
and
arpl
cmpsl
xor
sub
sbb
mov
lods
movsb
sub
int
cmpsl
loopne
push
jle
imulb
xor
lcall
sub
cmpl
in
cmpl
popf
sahf
lods
call
jl
stos
in
sub
mov
mov
mov
cmpsl
jl
test
sbb
cmp
cmpsl
sti
xchg
cmpsl
lahf
sbb
xchg
dec
jmp
sbb
pop
dec
jne
ret
pop
shrl
cmpsl
aaa
fisubl
sbb
mov
inc
adc
cmp
idivb
cmpsl
sbb
pusha
push
mov
or
gs
and
lret
xchg
sub
bound
mov
popa
cmpsl
movl
mov
mov
xchg
pop
lret
mov
dec
jne
cmp
imul
stc
push
cmpsl
cmpb
into
ret
hlt
repz
xor
js
xor
mov
xchg
data16
push
mov
das
and
mov
rcr
leave
cli
xor
sbb
insb
pop
pop
cmpsl
bound
sbb
das
stos
shlb
fyl2xp1
shr
cmpsl
mov
in
loope
shlb
adc
or
push
push
aad
mov
test
adc
out
xlat
jge
mov
mov
xchg
xchg
mov
fisttpll
popl
icebp
ss
sbb
push
pushl
add
pop
icebp
sub
cmp
dec
pop
jns
mov
pusha
xchg
outsb
frstor
and
xchg
pop
cmpsl
jo
push
sbb
lret
or
mov
sub
sbb
cmpsl
sbb
std
jge
xor
adc
pop
cmpsl
js
xor
mov
mov
push
push
movsb
andl
xchg
and
dec
cmp
lcall
cwtl
and
cmpsl
push
scas
jp
mov
and
jae
cmpsl
pusha
aad
aam
or
sub
mov
adc
cmpsb
into
jbe
add
xor
xor
mov
cmpl
das
out
push
mov
cmpsl
arpl
sub
sbb
push
push
cmpsb
xchg
outsb
pop
inc
xor
repnz
jmp
cmpsl
lret
iret
aaa
cmp
sub
sbb
xorb
loopne
xor
daa
lcall
outsl
inc
fs
pop
pushf
popa
aaa
cmpsb
push
cmpsl
jge
fidivs
dec
addr16
ljmp
loop
pop
sbb
mov
test
sbbb
in
addl
int
pusha
popa
test
repz
ror
sub
xchg
loope
adc
cmpsl
or
cld
ljmp
push
inc
adc
xchg
jbe
loope
aad
cmpsl
incb
push
das
int3
outsl
push
jns
test
mov
jge
cmc
mov
stos
out
sbb
cmpsl
mov
pop
ret
or
jo
aas
enter
call
mov
adc
dec
xchg
xchg
cmpsl
pop
lods
aaa
mov
xlat
mov
jecxz
xchg
pop
push
sub
cmp
cmpsl
inc
push
xor
mov
int3
ret
push
pop
cmp
test
or
pop
cmpsl
lea
ss
push
repnz
jmp
test
or
mov
fwait
rorl
xchg
mov
xor
xchg
sub
lret
cmpsl
xchg
loop
in
shlb
into
out
pop
movsb
mov
sub
jmp
jo
push
dec
mov
jmp
repnz
lret
lret
out
xchg
push
mov
cmp
add
cmp
mov
mov
jge
xchg
dec
wrmsr
jl
ds
mov
mov
adc
mov
sub
lock
mov
test
sbb
xlat
push
dec
cwtl
call
mov
cmpsl
lods
push
test
mov
dec
aaa
mov
push
xchg
bound
nop
pop
push
arpl
cmp
or
outsl
jge
aad
xchg
cs
mov
and
cmpsl
and
lods
hlt
cwtl
cltd
cmp
xchg
sbb
lds
mov
cmp
testl
aam
sbb
test
xchg
pop
insl
pop
shlb
push
inc
mov
pop
and
call
xchg
rol
imul
add
or
cmp
dec
scas
jecxz
lcall
sbb
cmp
imul
sbb
mov
insb
xor
xchg
cmpsl
out
or
les
fwait
push
cmc
xchg
test
cmp
addb
repz
jne
xchg
add
outsl
call
inc
fdivs
ret
sbb
mov
cmpsl
pusha
pop
or
fsubs
je
adc
xor
jmp
ret
das
add
stos
scas
xchg
cmpsl
shll
sub
cmpsl
insb
push
xor
mov
xor
data16
je
andl
lret
insb
adc
ret
jne
cmpsb
push
rorb
mov
lock
insl
lods
mov
dec
cmpsl
stos
dec
imul
inc
test
std
push
add
fld
push
mov
cmc
pop
sub
inc
adcl
xor
cmpsb
popf
push
mov
cmpsl
repnz
incl
lods
or
push
xchg
cmp
mov
test
jg
jmp
mov
or
lret
cmpsl
xchg
int
movsb
jg
addb
sbb
aas
aad
push
call
cmpsl
cmp
pop
mov
mov
pop
cld
gs
fs
je
cmpsl
cmp
out
cmpsl
fdivrp
xchg
mov
loop
cmpsl
addr16
cmp
cmpsl
aaa
sbb
jb
ljmp
or
out
mov
sbbl
push
loop
mov
loopne
mov
jmp
scas
je
cmc
push
or
aad
and
popa
aam
dec
xor
push
and
mov
lret
lahf
adc
fdivs
push
inc
xchg
add
inc
aaa
nop
imul
in
xchg
cmpsl
xor
xchg
jne
andl
fcomi
lret
xor
xlat
fldenv
lret
out
and
enter
push
adc
fidivrs
data16
xor
icebp
xchg
stc
mov
cwtl
loopne
jmp
adc
popa
jbe
pop
scas
xchg
movsb
insl
cmpsl
and
push
adc
mov
insb
sbb
mov
daa
scas
fmul
pop
push
out
test
sbb
or
ljmp
inc
push
arpl
fs
jg
mov
jb
jo
xchg
jge
movsb
and
adc
cli
xchg
enter
insl
fwait
xor
pop
cmpsl
data16
cmp
jecxz
fildll
xor
fiaddl
in
dec
data16
cmp
les
sti
mov
test
sub
das
xor
push
push
mov
shlb
data16
jbe
cmpsl
dec
aas
bound
cmpsl
jo
pop
xchg
push
addr16
jl
testb
adc
jno
outsl
shl
jge
fcoms
cmp
mov
int3
and
sub
cmp
pop
inc
sub
cmpsl
add
shll
inc
sti
dec
je
addr16
das
pushf
insl
scas
xor
xchg
lds
cmpsl
pop
jecxz
dec
xor
mov
push
inc
data16
xchg
loopne
pushf
cs
cmpsb
mov
or
cmpsl
lock
in
outsl
push
cmpsl
push
popa
inc
js
aam
sti
add
arpl
cmpsl
jg
xchg
cmc
repz
fmul
xor
std
mov
fwait
test
add
mov
lods
mov
xchg
and
rcr
xchg
lahf
sbb
adc
sub
jae
xchg
outsb
cmpsl
sbbb
lods
bnd
mov
mov
imulb
or
addr16
mov
shlb
push
in
cmpsl
scas
add
lods
sti
sbb
mov
faddl
sub
les
imul
divl
adc
shrb
jg
inc
cmpsl
mov
cmpsl
icebp
pop
decl
ret
cmpsl
mov
ljmp
test
roll
addr16
stos
in
xlat
cmpsl
sbb
and
push
and
fisubs
inc
test
ret
add
aas
dec
mov
cmc
mov
nop
lahf
cmp
push
mov
adc
sbb
shll
repz
mov
gs
bound
stc
std
stos
js
test
imul
jp
notb
ja
cltd
pushw
loope
cmpsl
adc
loop
inc
pop
and
in
jbe
lcall
cld
cld
cmpsl
rol
jmp
mov
mov
cmc
and
faddl
cmp
push
push
ret
sub
dec
mov
cmpsl
jmp
jmp
lret
scas
aad
cmpsl
inc
repnz
cltd
insl
sti
mov
in
div
cmpsl
xorb
cmc
mov
sahf
cs
in
mov
cmpsl
arpl
adc
mov
sub
insb
xor
inc
ret
popf
test
cmpsl
sarb
sbb
xchg
imul
in
shrl
sbb
xlat
pop
dec
jp
sbb
lods
orb
enter
insl
mov
sahf
inc
mov
or
cmpsl
inc
pop
call
jmp
dec
xor
sub
cmp
sbb
push
scas
inc
xchg
and
cmpsl
mov
cmp
xchg
mov
aam
and
cmpsl
daa
cs
dec
outsl
sti
dec
scas
lds
nop
lods
js
das
mov
add
push
and
xchg
dec
jl,pn
push
sbb
cwtl
push
and
xchg
daa
mov
inc
or
pop
cmpsl
mov
and
fnstenv
fbld
imul
pop
rcrl
ficoml
and
addb
xchg
jmp
pop
ljmp
jns
stos
outsl
leave
lock
sbb
dec
sub
inc
cs
cmpsb
and
stos
sets
andb
shlb
and
cmpsl
add
cltd
lods
push
mov
shll
adc
jl
ds
mov
jb
mov
cmpsl
retw
outsl
in
cli
mov
lcall
jns
or
mov
adc
jne
test
pop
cwtl
sbb
pushf
pop
xchg
pop
cmpsl
push
and
stos
in
sub
jno
push
jmp
mov
pop
or
xchg
pop
jmp
lea
test
mov
inc
rcrb
pop
cli
ret
cmpsb
mov
dec
rol
lcall
pop
mov
dec
cmpsl
mov
arpl
mov
leave
sbb
push
ljmp
call
adc
test
xor
mov
stos
mov
cmpsl
aad
int3
enter
inc
push
jae
pop
dec
in
andl
loope
fisttps
push
mov
cmc
cs
not
push
sub
stos
shl
push
test
jno
adc
cmpsl
out
ljmp
mov
stos
imul
cmpsl
adc
or
flds
test
clc
ljmp
test
neg
mov
cmpsl
mov
cli
pop
mov
aaa
jge
cmp
dec
mov
mov
in
js
int
adc
test
add
cmpsl
cmp
dec
rcll
mov
xor
test
test
in
xchg
insb
ljmp
xchg
add
dec
mov
and
and
xor
test
ljmp
add
repz
pop
mov
idivw
movsb
jle
icebp
jmp
enter
jge
aas
out
inc
insl
loope
xchg
jne
cltd
and
fldcw
cmpsl
sub
push
rorl
mov
iret
orl
and
add
push
or
cmpsl
and
dec
cs
mulb
xchg
clc
shl
mov
xor
push
lods
lds
fucomip
imul
xchg
jmp
mov
push
fidivs
and
lret
test
paddb
fnstcw
cmpsb
mov
or
sbb
cmp
mov
insl
inc
popa
pop
dec
push
xorb
push
mov
notl
jns
movsb
xchg
mov
xchg
xchg
cmpsl
or
ss
adc
cmpsl
xchg
fldt
test
cli
xlat
push
ja
test
and
push
xor
cmpsl
sub
adc
mov
lcall
jge
cmpsl
insl
xor
iret
inc
mov
in
push
inc
pusha
es
push
pop
jae
push
or
add
push
jecxz
je
pusha
cmpsl
cmp
aad
cmpsl
or
pop
test
shr
cmpsl
test
ljmp
sbb
scas
cmpsl
adcb
dec
ss
aam
lods
lret
or
cmpsl
btr
mov
jno
das
sbb
dec
xor
mov
repz
or
jg
cmp
pop
adc
stos
cmpsb
jo
call
aam
outsl
push
jns
cmpsl
mov
mov
or
aam
adc
pop
data16
dec
call
fs
jg
mov
mov
mov
xchg
jle
imul
subl
movsb
pop
bound
sar
mov
dec
pop
andb
and
movsl
dec
sbb
pop
sahf
pop
stos
cmpsl
adc
xor
lret
std
or
push
je
and
jl
lds
push
ret
les
stos
mov
cmp
push
jno
adcb
cmp
inc
push
cmpsl
push
nop
out
mov
in
enter
js
and
xor
cmpsl
jecxz
mov
pop
push
jle
notb
xchg
sbb
xchg
mov
cmpsl
push
and
cmc
xchg
pop
xchg
dec
pop
and
cmpsl
pop
or
shrb
repz
adc
mov
mov
jb
cmpsl
in
mov
aas
popa
dec
pop
imul
cmpsw
xor
and
sub
leave
mov
add
fdivs
push
into
cmpsl
mov
mov
cmpsl
je
cli
pop
outsl
lods
dec
mov
std
xchg
test
adc
cmp
mov
cmpsl
mov
xchg
loope
adc
inc
xor
mov
cmpsl
add
cwtl
adc
outsb
inc
push
mov
pop
sub
mov
iret
add
stc
sahf
adc
jmp
add
mov
out
push
xor
xor
out
pop
imul
aad
cmpsl
add
push
cltd
push
pop
movsb
or
push
sbb
sarb
sarb
mov
jno
aam
cmc
push
sub
leave
loope
sub
fpatan
xor
cmpsl
jg
mov
mov
jb
lods
and
es
dec
jl
push
enter
clc
lret
call
rcll
scas
mov
xchg
imul
lret
cmpsl
out
pop
sbb
sbbb
dec
pop
or
js
mov
cmpsl
lret
das
mov
daa
shll
add
fists
bound
pop
idivl
cmpsl
out
movsb
pusha
or
or
adc
fmul
int3
lods
fwait
sub
ljmp
mov
sbb
cmpsl
inc
imul
addr16
mov
in
movsb
jle
xchg
cmpsl
pop
mov
imul
das
lcall
dec
cmpsl
leave
adc
out
jg
cmp
cmpsl
add
fwait
push
and
cwtd
sbb
inc
push
lret
xchg
and
pop
filds
stos
mov
test
popf
fwait
and
enter
jge
adc
stos
cmpsl
mov
cmp
lea
aam
test
pop
sbb
aaa
les
adc
cmpsl
imul
std
mov
ret
fsts
hlt
adc
mov
sub
in
call
inc
sub
es
cmpsl
mov
jmp
mov
adc
mov
pop
mov
pop
pushf
hlt
arpl
adc
and
mov
mov
aaa
fidivrl
out
movsb
insl
aam
xor
push
call
mov
aaa
data16
cmpsl
int
jle
and
and
mov
loope
cmpsl
sbb
add
outsb
or
mov
cmpsl
rcr
shlb
cmpsl
adc
int3
jno
iret
notl
push
cmp
xor
nop
pop
cmpsb
ss
push
pop
sarl
fidivrs
xchg
pusha
cmpsl
das
mov
sbb
xchg
mov
push
popa
add
mov
push
andb
call
dec
mov
jge
xchg
rorb
jae
mov
nop
xchg
into
testl
push
pop
push
cmpsl
ljmp
scas
pop
push
lods
cmpsl
xor
jo
jmp
pusha
daa
dec
push
scas
and
fs
sbb
xchg
adc
aas
aam
jg
sub
mov
push
xchg
fidivl
cwtl
and
cmpsl
and
in
jb
mov
shll
rcrl
cmpsl
popa
data16
mov
cmpsl
pop
xchg
scas
test
in
dec
lods
fistpll
mov
stos
cmpsl
inc
mov
jb
cmpsl
pop
cmp
addr16
imul
cmpsl
add
cmp
rolb
sbb
cmpsl
mov
dec
xchg
jns
lock
jne
jle
cmpsl
cmp
sbb
pop
xor
les
xchg
fisubl
cmpsl
pop
mov
test
pop
dec
lahf
sub
or
mov
mov
outsb
sub
ljmp
int3
lods
nop
cmpsl
xor
lahf
xchg
push
cltd
stos
shll
lock
mov
int3
movsb
sub
lcall
lds
mov
cmpsl
mov
jmp
lods
xchg
cmpsl
mov
and
cwtl
test
outsb
lret
test
cmpsl
out
sbb
mov
sbb
pop
and
cmpsl
cmp
data16
add
dec
add
inc
sub
aaa
mov
movsb
cmp
mov
inc
mov
push
ret
xor
inc
jge
xor
xor
xlat
add
aas
cmpsl
lods
mov
mov
popl
rorl
in
stos
out
orb
cmp
xchg
xor
test
mov
hlt
dec
cmpsl
shll
ljmp
mov
mov
cmpsl
add
inc
test
ljmp
repz
inc
cmpsl
daa
imul
xchg
add
fdivr
jnp
cmpsl
xor
notb
mov
inc
mov
test
mov
les
jbe
inc
shll
jb
leave
into
out
inc
cmp
cmpsl
popa
scas
push
adc
or
jno
scas
cld
enter
test
or
cmpsl
push
pop
push
cltd
cmp
mov
pop
pushf
call
xchg
sbb
dec
lods
mov
cmpsl
cmp
push
mov
xchg
outsb
xor
push
in
test
xlat
pop
xchg
push
test
pushf
enter
andb
fwait
xchg
jp
sub
xor
jbe
insl
jmp
mov
and
adc
mov
cld
rcl
fidivs
fistpll
jns
call
push
add
cli
int3
aad
push
cmp
xor
inc
cmpsl
adc
test
in
rcrb
stos
cmpsl
pop
addr16
insl
je
xchg
mov
enter
cld
fisttps
pop
dec
cwtl
ficoml
lea
test
push
sahf
push
sub
mov
cmp
jl
xchg
cmpsl
int
push
arpl
lret
lds
mov
xchg
mov
popf
pop
push
jno
cmpb
inc
jnp
push
sbb
pushf
cmpsl
js
loop
lahf
jb
imul
insl
cmpsb
inc
mov
cmpsl
or
std
xor
mov
rcll
xchg
push
cmpsl
pop
sub
fdiv
clc
mov
pop
dec
movsb
cmpsl
lcall
and
inc
mov
sbb
scas
lds
mov
out
mov
sti
and
pushf
pop
xor
cmp
jecxz
prefetch
or
shrb
insl
loope
or
lea
fcmovb
hlt
or
xor
pop
dec
filds
pop
pop
and
popa
roll
push
jno
push
cmp
or
pop
jnp
mov
sbb
cmpsb
sub
xor
cmc
mov
add
movl
inc
cmp
pop
lcall
shl
divl
cmpsl
sbb
aaa
cmpsl
out
loope
imul
scas
sbb
inc
jb
std
mov
push
lcall
pop
mov
sbb
mov
or
inc
fwait
pushf
inc
jl
enter
mov
nop
adc
adc
ds
fcompl
decl
jae
andb
mov
cmpsl
add
mov
fists
cmpsl
stos
adc
cwtl
push
stos
xor
dec
adc
mov
sub
jae
int
notb
xor
clc
sbb
sahf
cmpsb
fnstenv
out
mov
imul
jno
cmpsl
dec
dec
movsb
mov
push
pushf
es
mov
pop
lock
mov
aad
aam
dec
inc
xor
lods
xchg
mov
scas
lods
ja
xchg
mov
sub
mov
jo
cmpsl
mov
mov
mov
shll
shlb
sbb
mov
fisubrl
push
cmpsl
mov
in
test
fdivs
out
sub
mov
sahf
lret
movsb
das
ljmp
lahf
repnz
cmp
insl
or
jbe
decb
stos
je
adc
out
movsb
xchg
or
loope
cli
cmpsb
lret
repnz
test
jg
fwait
popf
sbb
mov
dec
fwait
cmp
xor
mov
mov
cwtl
fidivrs
mov
mov
jno
ljmp
mov
aad
xchg
push
cmpsl
clc
sbb
or
xchg
adc
adc
mov
jns
leave
loop
pop
inc
cmpsb
push
sub
shlb
mov
sub
inc
cmpsl
sbb
dec
arpl
cmpsl
jle
mov
shrb
rolb
mov
pop
leave
in
inc
insb
icebp
cmpsl
jnp
jne
sbb
mov
fstpt
movsb
push
clc
pop
cmpsl
xor
test
rclb
push
cli
shll
push
es
and
out
ss
icebp
hlt
pop
sbb
scas
data16
int3
cmpsl
ljmp
mov
bound
aas
cs
cmpsl
or
insl
addr16
and
mov
testl
sub
sub
inc
das
cmpsl
adc
dec
test
rcll
pop
pop
icebp
int
add
test
popa
cmpsl
inc
mov
mov
cmpsl
outsl
sbb
push
cmpsl
cmp
aas
popf
mov
cs
jmp
pop
dec
dec
mov
jg
fists
mov
adc
clc
cmpsl
lods
cmp
inc
cld
cmp
bound
es
dec
mov
imul
clc
xor
test
lds
or
outsb
scas
mov
push
lea
loope
xor
pop
aas
sti
dec
es
mov
test
data16
cmpsb
mov
jb
dec
int
cmpsl
and
cmp
add
pop
mov
sbb
cmpsl
dec
mov
icebp
sbb
pop
cmpsl
out
test
orb
add
xor
test
sbb
ficomps
jg
mov
dec
adc
push
insl
lea
mov
imul
cmpsl
dec
into
pop
jns
or
adcl
rcll
jmp
push
negb
push
lock
xchg
lret
int
int3
lcall
mov
cltd
cmpsl
mov
push
lea
sbb
cmpsl
sub
aad
mov
mov
cli
xchg
xchg
jnp
lret
dec
test
jl
mov
mov
or
and
xchg
fldl
stos
inc
push
pop
std
cwtl
cmpsl
lret
cs
dec
outsb
jge
fisubrl
jg
cmpsb
das
xchg
add
loop
dec
insb
in
jmp
rol
mov
fcompl
in
sbb
or
dec
jmp
rcr
repz
jge
jbe
aam
add
xchg
ja
sub
inc
cs
cmpsl
loop
sbb
jmp
adc
ja
lods
inc
scas
daa
or
push
aam
jae
jle
rorb
cld
scas
arpl
cmpsl
mov
adc
imul
cmpsl
fwait
loopne
cltd
popf
xor
pushf
xor
sbb
pop
aas
in
mov
dec
ret
icebp
out
adc
adc
add
mov
int
dec
adc
sub
insl
inc
cmpsl
ret
repnz
push
xchg
cmpsl
scas
iret
lahf
stos
test
mov
push
and
fnstcw
mov
push
je
cmp
repnz
outsl
mov
out
paddw
int
addr16
fiaddl
sahf
test
call
pop
aas
cmp
cmp
ret
and
push
push
push
add
cmpsl
pop
and
xor
andb
sub
adc
or
cmpsl
outsl
pop
dec
imul
aad
cmpsl
push
jne
cbtw
pop
xor
lods
cmp
daa
ljmp
scas
xor
test
outsb
push
jp
cmpsb
test
scas
decb
std
ret
mov
jmp
push
jg
cmpsl
mov
insb
mov
cmpsl
and
push
cmpsl
add
dec
cmp
idivb
mov
cltd
or
fmull
and
out
mov
icebp
mov
xchg
xchg
cmpsl
cmc
fwait
stc
cmp
ret
add
jae
scas
es
jbe
cmpsl
push
test
cmpsl
xchg
js
jb
mov
paddsb
mov
outsb
int3
cmpsl
add
xor
mov
fsubl
mov
fnstenv
cmc
xchg
shrl
pop
ljmp
lods
arpl
cwtl
aas
dec
sbb
ds
cmpsl
test
das
push
mov
and
ljmp
out
in
test
xor
js
loope
aaa
in
mov
inc
arpl
mov
insb
std
xchg
out
sbb
lods
dec
xchg
pop
cmpsl
popf
sbb
xorb
loope
mov
pushf
sub
insl
lret
jl
shll
jo
jb
cmp
cmp
adc
pushl
jne
sub
clc
fsubrs
push
xor
push
jnp
mov
and
mov
cld
ss
sub
out
int3
or
mov
dec
subb
jg
and
adc
or
les
mov
cmpsl
add
lods
mov
mov
mov
in
popw
mov
jle
cltd
cmpsb
pop
mov
out
pop
cmpsl
lret
mov
mov
cmc
cwtl
jbe
push
dec
and
push
rcrl
cmp
jmp
cmpsl
mov
xchg
mov
cmpsl
cwtl
sub
je
sahf
lcall
sub
fwait
pop
test
mov
and
dec
pop
pop
pop
xchg
push
scas
mov
cmp
int
pusha
outsl
jnp
mov
add
inc
lea
cltd
loop
mov
xchg
ret
and
mov
rcll
mov
rclb
sahf
outsb
stos
xor
stc
xor
mov
dec
loop
xchg
outsl
cmp
out
imul
negb
pop
mov
inc
std
imull
fdivr
arpl
push
cmpsl
popf
xchg
add
aad
or
cmpsl
jbe
jmp
lds
lcall
pusha
add
mov
int
add
inc
mov
pop
sbb
mov
cmpsl
xlat
mov
ss
mov
jg
aad
gs
arpl
ja
cmpsl
mov
jb
mov
jmp
lret
cmp
cmp
lret
loop
in
cmp
inc
pop
inc
stos
movsb
push
inc
cmpsl
outsl
lods
mov
sarb
mov
roll
dec
cmpsb
and
pop
lods
pop
jbe
mov
pop
insb
pop
dec
xchg
adc
lahf
shlb
pop
outsl
sahf
cmpsl
das
cs
mov
ret
mov
add
imul
pop
lods
je
pop
mov
ret
aaa
lret
sub
subl
ficomps
cmpsl
leave
stos
xor
mov
in
sub
das
stos
xor
push
lret
lahf
out
mov
imul
ljmp
or
mov
mov
push
jle
xor
mov
lods
and
cmp
enter
add
lods
cmpsb
sbb
xchg
stos
imul
xor
fs
mov
out
fstps
xchg
pop
and
in
xor
enter
mov
cmpsl
dec
or
je
in
lahf
xchg
out
cmp
les
push
mov
shl
and
cmp
int3
adc
add
pop
or
stos
push
mov
je
mov
mov
in
cmp
fsubrl
cmpsl
dec
push
push
cmpsl
hlt
in
mov
cmpsl
mov
popa
jnp
mov
in
dec
mov
xchg
cmpsl
das
and
lcall
xor
sti
les
out
lods
jge
mov
cmp
pop
insl
add
inc
loop
pop
jl
mov
es
ret
xor
lret
out
xchg
adc
aas
sbb
cld
cmpsl
popl
ss
lret
xchg
sub
leave
sub
scas
pop
cmpsl
in
rorl
mov
add
psubsw
pop
test
sbb
push
xchg
sbb
int3
mov
sub
cmpsl
or
mov
aam
outsl
out
das
sbb
cltd
fsubl
jge
fildl
pop
jmp
es
scas
mov
rsm
mov
insl
or
in
daa
mov
cmpsb
dec
pop
ret
dec
pop
xchg
dec
cmpsl
cld
dec
sub
mov
jae
mov
pusha
sysexit
mov
aas
jecxz
mov
out
pop
mov
movsb
pop
cmpsl
xchg
ss
push
xor
arpl
inc
enter
outsl
xor
adc
adc
pop
insl
out
push
fsubrl
adc
gs
mov
lret
cmpsl
push
jl
stos
shrl
dec
ljmp
mov
lock
cmpsl
jae
cmp
fsubs
jle
sub
mov
lods
mov
ss
jbe
fldenv
xchg
add
das
and
les
cmpsb
stc
vcvtsi2sdl
js
jbe
cmp
or
jge
fiaddl
sbb
cmpsl
pop
incb
xchg
xchg
cld
mov
mov
test
sbb
jne
mov
lcall
push
xchg
imul
cmpsl
out
pop
out
pop
mov
adc
pop
inc
dec
out
push
and
and
lock
test
xor
adc
cmpsb
jns
sti
clc
jge
ljmp
and
mov
and
das
sub
sub
mov
mov
inc
sti
mov
or
scas
aad
xchg
push
lods
cmp
cmpsl
push
test
xchg
xor
mov
and
add
pop
mov
cmpsl
popa
pop
mov
cmpsl
mov
mov
loop
cmp
ror
jne
lret
mov
sbb
cmpsb
cmp
cmpb
sub
lret
pop
mov
adc
lcall
sbb
lahf
stc
xchg
cmpsl
pop
or
shlb
insl
inc
cmp
ror
pop
xchg
push
daa
lahf
roll
and
push
lahf
sahf
xcrypt-ctr
cmpsl
sbb
gs
xor
adc
popf
dec
std
xchg
testl
inc
push
adc
lods
ljmp
das
es
dec
xchg
lods
mov
scas
sbb
dec
out
out
insl
popf
int3
es
je
sti
jg
cmpsl
fs
xchg
xor
in
or
jbe
mov
mov
enter
push
cmpsl
gs
or
mov
pop
popa
pop
sub
push
pop
out
xlat
sbb
mov
enter
lahf
xor
mov
add
pusha
and
outsw
ja
cmpsl
dec
mov
jp
mov
cmpsl
cmp
sbb
outsl
inc
push
or
imul
cmpsl
sub
out
xchg
mov
sti
push
mov
imul
lods
inc
mov
andl
mov
cmpsl
xchg
mov
test
sar
sub
shll
lahf
fwait
pop
cmpsl
cmpsb
xchg
inc
mul
and
lret
jns
sub
fisubl
lods
xor
jae
fmuls
pop
xor
adc
jmp
adc
subl
add
adc
cmpsl
insl
and
sub
mulb
fadd
shr
in
es
scas
icebp
jbe
sbb
pop
mov
xchg
out
lods
loopne
cmpsl
add
xor
aam
sub
sar
push
mov
jl
sbb
outsl
jno
mov
mov
scas
lods
cmpsl
cwtl
sbb
xor
mov
cmpsl
mov
cmp
mov
jne
mov
insb
xor
fwait
mov
or
popl
push
sbb
jle
jecxz
mov
test
je
imul
mov
out
insl
ret
push
inc
cmpsb
test
rclb
mov
sbb
cltd
loop
outsl
push
cmpsl
filds
and
mov
add
adc
mov
or
mov
iret
and
cli
pushf
fisubrl
out
dec
mov
adc
fnstcw
cmpsb
dec
sub
cmpsl
mov
test
test
inc
mov
pushf
mov
push
and
cmpsb
cmpsb
sbb
sbb
mov
sub
aaa
jae
jne
dec
test
sti
cmpsb
insl
jge
insb
and
sbb
clc
sub
leave
lods
jle
es
lea
lds
mov
inc
es
int3
aad
rorb
xchg
lret
in
add
add
pop
pop
lret
cmpsl
or
imul
sub
xor
push
adc
xor
loop
pop
cmc
cmpsl
fnstenv
ss
jg
jle
xchg
mov
or
xor
outsl
dec
scas
sbb
call
push
cmpsl
xchg
adc
add
xor
cmpsl
into
lcall
cmpsl
iret
jg
push
in
pusha
loopne
jmp
les
inc
mov
xlat
das
cmpsl
arpl
or
add
push
rep
mov
cmpsl
pop
sbb
xlat
sbbl
leave
testb
loope
cmpsl
or
pushf
push
daa
cmpsl
jns
mov
sbb
add
mov
xchg
rcll
mov
xor
into
rol
fisubrl
cmpsl
adc
sbb
imul
jecxz
sub
mov
jmp
popa
xchg
jns
rorl
divl
xchg
cmpsl
jl
daa
scas
pop
pop
fs
cmpsl
enter
jmp
mov
sbb
xchg
cltd
and
dec
mov
imul
sub
push
es
fwait
daa
jmp
int
lret
aam
outsl
push
in
or
mov
das
cmpsl
mov
xlat
inc
lret
dec
cmpsl
rol
adc
insb
test
mov
mov
adc
mov
insl
mov
setb
aad
xor
or
dec
loope
cmp
or
ljmp
dec
inc
push
es
fwait
push
xor
aam
cmpsb
adc
jbe
pop
shrl
fidivrl
inc
out
adc
mov
aaa
into
lret
outsl
frstor
xchg
scas
bound
stos
decb
push
lds
scas
or
jp
rcll
icebp
adc
xchg
mov
test
popa
ss
push
mov
sub
leave
inc
ja
dec
pop
call
sub
lahf
test
add
mov
add
call
mov
lods
shlb
mov
test
mov
ljmp
das
roll
jns
pop
and
scas
push
xor
jae
call
xchg
xchg
int3
int
fstpt
lods
daa
data16
mov
enter
pop
adc
xor
push
xor
push
dec
ja
mov
ret
and
mov
outsl
lods
lret
xor
jnp
mov
fstl
adc
jmp
jbe
ljmp
xchg
add
push
push
int3
ret
out
dec
pop
bound
dec
gs
jno
xor
je
jp
cmp
fsub
in
cmpsl
xor
push
les
rorl
imul
mov
stos
jo
sub
lods
push
cmpsl
mov
xor
mov
adc
or
cmpsl
loop
inc
in
out
addr16
mov
sub
inc
sbb
xchg
xor
cmpsb
mov
iret
jb
xchg
cmpsl
inc
not
mov
cmpsl
out
ret
dec
push
sub
cmpsl
xor
dec
dec
inc
cmp
in
sbb
mov
pop
insl
hlt
cmp
push
sub
sub
clc
pusha
repz
xor
cmpsl
jp
cltd
into
xor
jb
xchg
jmp
dec
add
lea
xchg
cmpsl
adc
sbb
pop
sub
lock
mov
mov
pop
insl
dec
pushf
jnp
mov
cmpsl
xorl
stos
adc
xor
rclb
or
jae
icebp
imul
jbe
inc
cmpsb
xor
int3
jns
cmp
in
pop
mov
adc
or
mov
cmpsl
lret
outsb
aad
mov
cmpsl
push
push
xchg
mov
dec
rcpps
int3
and
in
push
sbb
aas
cmpsl
inc
scas
xchg
cwtl
jl
xor
cli
or
cmpsl
add
std
stos
cld
aad
adc
xor
inc
xor
cmpsl
lods
mov
test
mov
dec
paddsw
cmp
std
cmpsl
adc
xor
mov
xor
icebp
cmpsl
pop
out
sbb
mov
movsb
sub
xchg
mov
sti
arpl
scas
sahf
shlb
xor
leave
xlat
ljmp
jl
adc
xor
mov
lahf
scas
shlb
sahf
xchg
fsubl
repnz
fldenv
imul
mov
mov
mul
sahf
cmp
aaa
lock
mov
add
std
cmp
jmp
push
mul
fmull
xchg
stos
pushfw
jb
popf
cmpsl
pop
sbb
sub
fwait
mov
in
in
sbbl
pop
imul
xor
mov
cmpsb
out
xor
mov
gs
fstl
cmpsb
test
daa
pusha
cmpsl
xor
divl
mov
jmp
pop
mov
push
adc
push
jno
xchg
push
push
cmpsl
imul
mov
cmpsl
out
sbb
cmpsl
fwait
push
adc
xor
mov
xor
push
dec
cmc
out
out
loop
mov
pop
xchg
in
stc
scas
js
jl
movsb
sub
cmpsb
jecxz
cs
fistl
pop
les
mov
add
out
jge
test
outsl
xor
cmpsl
sbb
pop
fisubs
inc
imul
sub
mov
sahf
cmpsl
sbb
mov
push
push
cmpsl
icebp
sbb
inc
pop
in
cmpsb
popl
sub
mov
aad
xchg
jle
jno
mov
outsl
dec
and
push
lods
inc
mov
lahf
mov
jge
call
inc
pop
popa
dec
in
lret
mov
jbe
xchg
mov
and
sbb
dec
fcompl
stos
gs
push
subb
lods
lods
cmpsl
jmp
xor
jo
shlb
addr16
lahf
sub
push
gs
stc
pop
outsb
dec
es
es
mov
cmp
dec
cltd
ljmp
roll
ja
mulb
mov
fcompl
xor
ja
xchg
mov
repz
cmpsl
mull
inc
cli
repnz
pushf
add
cmpsl
sub
push
mov
cs
rcll
out
mov
mov
xor
or
mov
cltd
out
mov
daa
pop
cmpsl
mov
dec
sub
cmc
jns
jbe
inc
fldl
mov
cs
cwtl
repz
or
jg
jle
out
jno
xor
inc
cmp
bound
mov
inc
add
pop
cmp
shlb
sub
jne
arpl
jno
inc
or
xchg
sarl
sbb
add
xchg
mov
cwtl
sub
insb
test
mov
xchg
mov
push
std
pop
mov
fisubs
add
xchg
mov
and
in
fst
mov
or
or
xchg
cmpsl
test
adc
cltd
ret
popf
cmpsl
fsubrl
or
leave
jl
loope
int3
aas
lds
out
cmp
add
and
jmp
cmpsl
lock
sub
xor
adc
cmp
sbb
cmpsb
ret
adc
outsb
test
jae
cmpsb
movsl
fistpl
mov
inc
in
mov
mov
cli
loope
and
mov
cmpsl
cmp
jne
pushf
fisubrl
or
jg
int3
roll
jmp
rcrl
jnp
cmpsl
or
sub
jne
nop
cmpsl
inc
cmp
popa
dec
shrl
add
in
lods
outsl
cmpsl
dec
pushf
bound
loope
mov
fcoml
loopne
rorb
mov
stos
scas
cmpsl
lods
pop
jne
je
push
cmpsl
cmp
or
stos
mov
xchg
dec
roll
gs
dec
xchg
pop
cwtl
cwtl
inc
push
outsb
clc
cmovp
adcl
out
fsubrs
int
cmpsl
hlt
mov
sbb
jns
cmpsl
scas
insl
dec
or
push
cmpsl
mov
in
mov
cmpsl
shlb
in
shrl
cmp
nop
cmpsl
iret
fcompl
outsl
lret
inc
call
pop
xchg
inc
aam
int3
sahf
jge
ljmp
lret
jbe
and
leave
cmpsl
cmp
push
cmc
pop
adc
adc
mov
test
aas
mov
stos
shrb
pushf
mov
int3
jne
stos
add
cmpsl
cmp
mov
cmpsl
test
ja
sbb
and
in
adc
dec
xorb
cmp
and
test
cmpsl
ja
fistps
xor
mov
dec
imul
je
fistpl
frstor
cmpsl
cmp
fmul
dec
jecxz
std
cmpsb
popa
xchg
inc
fiaddl
cmpsl
or
out
mov
jnp
sbb
lods
cltd
pop
imul
lds
lret
xor
cmpsl
mov
shrl
mov
outsl
je
or
ss
pop
cmpsl
sti
insb
jo
adc
ss
lods
into
sbb
mov
stos
pop
cmpsl
fimuls
addr16
or
clc
sub
out
aam
inc
adc
sbb
mov
testb
rcl
adc
push
xchg
and
stos
cwtl
cmpsl
fcmovnu
xchg
shlb
push
add
cmpsl
pop
negl
cmc
sbb
mov
push
xor
cmpsl
sbb
lock
mov
cmpsl
jno
and
ljmp
or
pusha
or
lret
jbe
push
aad
jb
xchg
mov
push
cld
fnstenv
xchg
inc
movb
pop
and
cmc
pushf
mov
lret
cmp
js
cmpsl
add
inc
call
lahf
push
test
pop
inc
fs
insl
cltd
es
call
pop
nop
push
fiaddl
jbe
jl
cmpsl
xor
leave
mov
mov
daa
xorl
mov
inc
lret
add
cmpsl
test
pop
push
stos
add
cmp
xchg
pop
fs
sub
hlt
ret
dec
lods
iret
cmpsl
lret
nop
fwait
cmp
nop
jge
pushf
orb
pop
pop
jmp
ss
test
push
fiaddl
stc
push
cmpsl
fmuls
pop
cmpsb
jge
jle
adcb
cmp
ds
es
fisttpll
test
xchg
lock
dec
cmp
leave
xchg
cmpsl
cmpsb
dec
push
pop
xor
mov
cmc
sbb
jge
aad
call
fwait
or
jle
ret
lock
stc
fsubl
cmpsl
lret
adc
lea
sub
cltd
cmpsb
adc
mov
adc
push
jle
cmpsb
fidivl
mov
xor
sub
rorl
mov
mov
mov
enter
scas
mov
or
arpl
je
cmpsl
fs
stc
push
cmpsl
pusha
inc
push
imulb
sub
cmpsl
push
daa
fiadds
cmpsl
fadd
or
cmpsb
xor
cmpsl
push
les
add
add
mov
sti
xchg
cmp
cmpsl
push
push
sub
cmp
fldenv
jne
mov
mov
xor
pusha
pop
add
xchg
xor
icebp
add
stos
mov
or
xchg
in
xchg
cmpsl
mov
xlat
sbb
cmpsl
ret
arpl
int
repnz
and
rclb
stos
mov
xchg
and
pop
xor
mov
cmpsl
mov
cmp
ds
mov
dec
xchg
enter
dec
sahf
mov
adc
jl
push
xchg
mov
mov
cwtl
and
mov
xchg
cmpsl
mov
imul
ss
cmpsl
sti
mov
aad
sbb
mov
sarb
fwait
sahf
aad
push
or
push
cmp
pop
cmpsl
lret
mov
adc
lret
push
push
mov
insl
vsubsd
aaa
test
xor
and
adc
paddw
mov
mov
mov
cmpsl
clc
loop,pt
lods
jl
push
xor
push
mov
cmpsl
adc
xchg
hlt
adc
inc
cmpsl
adc
sbb
mov
cmpsl
imul
xor
dec
fistl
xchg
cmpsl
inc
mov
sbb
cmpsl
add
xchg
cmpsl
sub
aam
xchg
outsl
mov
mov
pop
pop
add
pushf
add
adc
fwait
jo
sub
mov
adc
mov
add
lret
mov
xor
inc
fists
cld
push
cmp
or
mov
outsb
xchg
jge
pusha
or
sar
jmp
dec
popf
sahf
scas
sub
jb
aaa
jne
push
test
sar
cmpsl
push
das
mov
stc
into
ljmp
cmpsl
sti
icebp
adc
sub
sub
das
pop
xchg
mov
jae
adc
bound
scas
adc
add
mov
lahf
ja
int3
pop
pop
cli
add
inc
mov
pop
movl
mov
ljmp
iret
jle
popa
mov
cmpsl
jg
jmp
inc
bt
jnp
xchg
sbb
loop
jbe
mov
pop
iret
jae
jl
gs
cmp
gs
out
jle
repz
in
lds
repnz
jo
rclb
and
movsb
fimuls
fstl
std
cmp
mov
fidivrl
outsb
dec
lock
rcll
inc
cmpsl
xchg
lcall
out
inc
call
push
fcomp
xor
out
cmpsl
adc
cli
mov
iret
inc
cli
jb
cmpsl
mov
clc
or
mov
lret
cmpsl
cmp
ds
push
xchg
mov
cmc
dec
fs
xor
es
negb
cmpsl
xchg
mov
inc
cmp
and
movsb
fwait
ljmp
js
pop
jne
fucompp
xor
dec
out
jge
add
mov
push
rclb
xor
mov
pop
sub
je
in
mov
shrl
mov
add
je
rcrb
outsl
mov
addr16
and
sarl
nop
idiv
cmpsl
jbe
outsl
mov
mov
call
cmpsl
adc
loope
pushf
decl
lret
fildll
inc
cmpsl
scas
fistl
ds
push
lock
mov
mov
jnp
lret
or
adc
fmuls
scas
xchg
enter
jp
in
aas
pop
cmpsl
incl
shll
es
mov
cs
cwtl
cmp
and
cmp
cmpsl
mov
adc
cmpsl
inc
ja
cmp
lock
shlb
push
push
or
mov
stc
cmpsl
iret
fisttpll
lods
fistl
push
fsubrl
mov
movsb
daa
and
push
cli
push
arpl
add
mov
shrl
jecxz
xchg
xor
aam
add
out
sub
and
xchg
je
ret
push
ljmp
jbe
movsl
pop
mov
cmpsl
add
jnp
xchg
dec
sub
data16
ljmp
and
inc
push
and
sbb
mov
adc
lods
sub
stos
jmp
aaa
outsb
adc
das
popw
and
push
lret
sahf
loope
inc
mov
addl
cltd
and
pop
loop
clc
int3
push
push
xchg
xchg
mov
cmpsl
pushf
jbe
dec
clc
push
fsubl
imull
shll
cmpsl
dec
lods
pop
test
cmpsl
fnstenv
pop
test
push
or
jge
push
mov
lea
inc
cmpsl
push
hlt
push
xchg
mov
jmp
test
into
xor
cmpsl
scas
in
push
sbb
loop
mov
incb
jns
into
aam
fwait
sbb
push
pop
cmpsl
cli
in
dec
jne
pop
xor
lds
xchg
insl
xor
lcall
push
jno
push
cmpsl
rol
pop
cltd
pop
jge
shll
out
sbb
cmpsl
jmp
ret
push
mov
test
pushf
jmp
in
daa
bound
jnp
ja
movsb
fistps
cmp
push
nop
mov
sbb
sar
lds
push
int
mov
sub
and
rorl
xlat
lcall
push
orl
pop
push
insl
outsl
int3
imul
sti
xchg
mov
push
mov
mov
aaa
mov
xor
adc
int3
in
cmpsl
sub
inc
jne
xor
mov
pushf
je
js
pop
cmpsl
pop
out
pop
jg
and
pop
sub
cmpsl
adc
add
adc
cmpsl
jnp
add
clc
cmpsl
cmp
add
enter
dec
cltd
mov
and
push
pop
xchg
testb
inc
test
cmpsl
sbb
jbe
out
mov
cs
pop
cltd
out
cmpsl
call
mov
in
stos
xchg
lea
push
jge
les
inc
cli
inc
iret
adc
mov
repnz
mov
push
push
out
dec
cmpsb
push
mov
dec
pop
mov
test
insl
adc
cmp
das
outsl
fbstp
inc
inc
sar
jo
cmpsl
cmp
addr16
xor
jp
daa
fstps
mov
loope
cmpsl
iret
jecxz
or
add
cmpsl
loop
pop
in
stc
shlb
lds
jns
test
adc
jno
cld
mov
xchg
call
movsb
lcall
pop
dec
pusha
pop
jg
jns
cli
test
adc
adc
rorl
adc
or
and
notb
test
cmpsl
sbb
jl
movl
xor
cmpsl
leave
repnz
cmp
pop
adc
push
adc
and
mov
push
dec
rcll
mov
jns
dec
push
test
aam
or
cmpsb
lret
hlt
nop
adc
int3
aad
cld
sbb
push
cmp
pop
add
adc
aam
xlat
mov
dec
std
in
enter
mov
add
jne
cld
lret
push
mov
jge
pop
jg
cmpsl
cmp
pop
pop
hlt
or
in
rol
call
movsb
clc
push
popa
dec
aad
sub
test
mov
in
sti
push
pop
xor
sbb
mov
pop
imul
cmpsl
int
cli
in
jae
loop
jns
xor
mov
add
sub
into
xor
push
cmpsb
outsl
std
cmpsl
and
push
gs
xor
xlat
cmpsl
mov
add
mov
inc
mov
sbb
fisubrs
and
mov
xchg
lods
xchg
xor
mov
lods
movsb
mov
xchg
mov
or
and
sub
adc
leave
xlat
cs
add
cmpsl
sub
lods
int3
movsb
mov
test
mov
dec
scas
xchg
das
insb
jl
pop
inc
mov
cmp
and
mov
leave
data16
aad
sbb
mov
xor
mov
mov
fidivrl
cmpsb
inc
stc
and
cmc
or
sub
adc
test
ret
enter
mov
cmpsl
jecxz
jo
adc
inc
clc
mov
mov
push
xlat
fiadds
shll
sbb
jae
cmpsl
int
sahf
and
daa
jmp
roll
push
icebp
decl
std
out
xor
cmpsb
cmp
push
xchg
pushf
mov
rcrl
cmpsb
pop
sbb
cmpsl
push
sbb
cmp
ds
mov
jle,pn
cmpsl
test
idivb
adc
cmpsl
mov
xchg
ret
int3
hlt
and
lods
es
dec
mov
dec
sub
mov
pop
pop
jg
cwtl
or
cmpsl
adc
dec
mulb
jb
mov
aam
fidivrs
cltd
cmpsl
push
stc
insl
lcall
outsl
leave
inc
fsts
dec
push
repnz
cmpsb
mov
cmpsl
stc
cmp
ss
pop
out
ja
cmpsl
mov
mov
cmpsl
push
decb
aas
rcll
stos
mov
aaa
mov
jecxz
in
fs
xchg
jg
inc
push
test
xor
outsb
push
jp
cmpsl
leave
sar
mov
mov
cmpsl
mov
or
cmpsl
repnz
ja
jge
outsb
pop
cmpsl
flds
jo
arpl
xchg
test
test
jg
daa
dec
fs
jnp
fistps
cmp
inc
loop
cmpsl
xor
inc
ret
sbb
sub
sbb
and
push
outsl
aaa
dec
scas
popf
mov
cmpsl
or
ret
sbb
push
sahf
inc
xchg
and
push
shr
fsubs
sbb
outsb
pop
cli
cmpsl
ljmp
xor
movsb
ret
cltd
jo
popf
jl
mov
mov
int3
mov
cmp
nop
pusha
xchg
sbb
mov
js
les
lods
sti
test
mov
mov
cmpsl
pop
movsb
mov
fidivs
mov
xor
jecxz
push
cmpsl
push
push
call
and
pusha
xchg
xor
mov
cmpsl
sbb
xchg
mov
cmpsl
mov
inc
arpl
xchg
mov
ljmpw
inc
scas
adc
mov
insl
sahf
sarb
inc
cmc
mov
jno
and
sbb
mov
sbb
mov
imul
loop
xchg
inc
shlb
mov
push
push
adc
sbb
call
movsb
insb
mov
shrl
hlt
pop
xlat
lahf
cmpsl
in
aaa
nop
pushl
add
fldt
mov
jno
lds
cmc
mov
test
pop
std
and
shlb
cmpsl
mov
loope
jle
leave
xchg
rcrl
xor
mul
cmp
addr16
dec
popf
scas
and
ljmp
ret
loopne
rorb
inc
gs
sub
and
lret
rolb
icebp
ja
xlat
shll
push
sub
mov
mov
cmpsl
sbb
push
add
cmp
jg
cmpsl
repnz
pop
int
xor
dec
cli
push
mov
mov
inc
xchg
das
adc
and
cmpsl
jbe
xor
ffreep
into
push
cmpsl
lock
rcrl
inc
cltd
je
dec
fisttpll
cmpsl
pushf
andl
push
pop
cltd
iret
fdivp
dec
cmpsl
or
pusha
lea
dec
lock
cmpsl
push
out
mov
mov
xchg
sub
cmpsb
mov
nop
shrb
xor
gs
aas
sub
cmpsb
popf
cli
pop
adc
sub
inc
insl
mov
aaa
movsb
cmpsl
mov
mov
xor
test
pop
call
adc
aad
or
push
in
inc
cmpsl
repnz
repz
cmpsl
sahf
int
loopne
dec
in
cmpsl
mov
mov
xor
cmpsl
das
mov
fistpl
sbb
andl
in
inc
push
cmpsl
sub
sub
mov
imul
cmpsl
xchg
stos
xor
sarl
adc
cmpsl
mov
xor
mov
mov
pop
cmpsl
ret
mov
cltd
test
popa
xchg
xchg
call
out
repnz
bound
mov
xchg
fs
push
mov
rcr
cmpb
popa
sub
pop
lret
in
in
cmpsl
insb
inc
mov
std
cmpsl
cwtl
mov
mov
mov
sub
cmpsb
inc
mov
mov
sbb
inc
imul
mov
xchg
outsl
inc
ss
add
movsb
fs
xchg
rcr
cmp
mov
bound
inc
movsb
cmpsl
mov
mov
outsl
stc
and
cmp
xor
push
cltd
pop
stos
cmpsl
outsb
dec
xor
out
addr16
sub
or
adcb
stos
adc
scas
xor
fsubs
test
popf
mov
dec
popa
push
push
mov
xchg
out
ret
mov
call
mov
out
aaa
repz
or
fisubs
mov
in
mov
sub
sahf
sub
cmpsl
jnp
lods
xchg
xchg
test
push
mov
sbb
cmpsl
and
imul
inc
cs
mov
mov
shll
xchg
cltd
ja
shll
lret
dec
arpl
push
cmc
stos
subl
jns
cmpsl
push
jmp
mov
mov
leave
xor
push
cmpsl
ja
js
fcoms
rcll
sbb
and
movl
dec
inc
pop
jg
ret
jmp
sub
fdivs
inc
test
jnp
inc
es
adc
inc
push
je
and
push
cmpsl
add
push
cmpsl
mov
mov
cmpsl
mov
push
add
popa
aaa
push
fnstsw
es
xchg
lahf
test
cwtl
xor
push
lcall
call
cmpsl
pop
pop
mov
inc
mov
notb
mov
cmp
cmpsl
push
aad
add
mov
mov
dec
jp
cmp
cmp
cmpsl
pop
dec
mov
sub
sbb
std
clc
frstor
cs
cmpsb
sbb
ret
rcll
mov
mov
jnp
movsb
je
aaa
jbe
icebp
xor
cmpsl
add
out
js
xchg
mov
cmp
adc
sbb
outsb
mov
aam
insl
das
outsl
xchg
cmpsl
dec
daa
xor
mov
sub
and
add
cmp
mov
mov
out
lahf
cmpsl
pop
fadds
push
dec
jecxz
mov
lret
mov
cmp
push
out
mov
jle
scas
arpl
cmc
aam
mov
push
mov
inc
push
jnp
insb
sahf
mov
sbb
jmp
dec
mov
ret
lcall
shlb
cltd
shrl
jle
sahf
adc
sti
cmc
invlpg
lds
stc
xlat
cmpsb
adc
in
test
cmpsl
imul
dec
int
mov
cmpsl
pusha
adc
ret
inc
jae
dec
adc
cmpsl
repnz
push
popa
sub
jb
mov
scas
add
adc
popf
fdivl
xchg
cmpsl
nop
imul
mov
or
xlat
cmpsl
xchg
sub
jae
xor
cmpsl
lock
push
ret
push
add
outsl
inc
sarl
sub
sub
imul
popa
inc
or
add
cmpsb
lret
pop
jmp
pop
jns
test
aad
lret
mov
and
jb
ljmp
sbb
aam
pop
inc
cmpsb
insl
mov
inc
lret
daa
jno
mov
xor
movsb
test
cli
fimull
pop
out
bsr
mov
mov
bnd
stos
inc
jecxz
das
and
mov
sbb
in
push
cmpsl
cmp
sbb
outsb
sub
adc
iret
push
jl
nop
fwait
cmpsl
stos
dec
rclb
push
aaa
scas
adc
xchg
push
gs
push
stos
cmpsl
jnp
fs
fadds
icebp
cmpsl
cmc
std
adc
jg
xchg
jle
add
stc
out
adc
jnp
cmpsl
jno
sbb
popa
shrb
and
jmp
push
shll
pop
loopne
out
fistps
addr16
lret
aad
gs
sbb
mov
cmpsl
cmp
fsubrs
ljmp
cmp
lcall
int
xchg
stc
xchg
push
ffree
cmpsl
dec
in
inc
nop
ds
call
sub
add
cmpsl
int
bound
pop
push
and
fisttpl
and
sub
cmpsl
sahf
push
fstl
xchg
push
out
iret
lret
dec
jg
out
xchg
into
cmpsl
sahf
jno
inc
cmp
jmp
cmpsl
lret
fsubrs
leave
and
pop
shll
ljmp
das
inc
pop
mov
push
shlb
inc
or
xor
xchg
iret
sbb
push
lods
xor
jecxz
sti
push
and
sbb
cmc
pop
lea
jnp
jns
std
xor
ror
fildl
adc
nop
cmpsl
pop
int3
xorl
and
push
call
enter
dec
or
cmpsl
add
fnstsw
notb
lea
shlb
xor
inc
in
dec
inc
jnp
mov
cmpsl
call
nop
jns
cmpsl
pop
fwait
pop
int
stc
add
rcrl
cmp
cmp
cmpsl
outsl
lods
add
push
int
mov
and
cltd
push
scas
lret
and
jl
xchg
ret
inc
or
or
jle
inc
cwtl
jns
adc
mov
fisttpl
in
mov
add
and
xor
das
ljmp
data16
sti
cmp
jae
es
xchg
lret
loope
gs
mov
cmpsl
cmp
sub
add
in
sbb
inc
mov
clc
fstps
in
sbb
std
popa
std
ljmp
scas
sbb
clc
aas
jmp
mov
pop
bound
push
enter
xor
cmpsb
jg
cmp
mov
call
inc
jmp
cmpsl
push
lods
aas
sub
xchg
cmpsl
mov
loop
inc
pop
test
cmpsl
push
or
jno
outsl
xor
cmpsl
jb
or
sbb
pop
cmpsl
inc
dec
ss
sbb
insb
ficoms
divl
jle
ret
pop
push
daa
aaa
pusha
data16
cmpsl
xchg
gs
adcb
jb
mov
push
subb
add
shll
aad
cmpsl
shrd
nop
sub
mov
insl
sub
dec
filds
lahf
stc
pop
xor
nop
test
mov
iret
neg
fucom
in
pop
xor
cmpsl
out
push
aad
mov
dec
push
rcrl
cmpsl
cmp
loopw
sbb
cmpsl
jo
outsl
out
jno
hlt
repz
fwait
dec
pop
repnz
cli
lods
xchg
cmpsl
aad
sub
cs
lods
cmpsl
mov
cmp
jge
insl
cmpsl
adc
xor
jp
cs
push
sbb
jne
cmp
and
dec
jle
cmpsl
roll
mov
mov
cmpsl
nop
jl
gs
push
jge
imul
mov
xor
adc
cli
idivl
lret
mov
cmpsl
adc
xchg
add
jl
or
outsb
enter
test
jno
data16
jne
test
fnsave
mov
sti
and
xor
push
mov
pop
cmpsl
sub
hlt
add
ja
jmp
rolb
stos
sarl
outsl
xor
cmpsl
dec
enter
cld
in
cmpsl
int3
push
inc
cmp
negl
cli
fxch
aad
es
cmpsl
mov
mov
insb
mov
enter
cmpsl
cld
jbe
in
ja
inc
lcall
scas
mov
dec
jmp
loop
stc
xor
pop
pop
mov
jmp
xor
aad
int3
pushf
fiaddl
add
mov
push
pop
and
inc
mov
jb
flds
int3
popf
adc
mov
xor
inc
shl
inc
ficomps
cmpsl
loop
test
gs
mov
jne
and
adc
stc
cmpsl
xor
rcrb
ret
inc
jl
mov
movsl
cmpsb
mov
dec
scas
shrl
sub
sbb
scas
sbb
push
mov
int3
mov
ret
dec
inc
jae
ret
cld
rcrb
lock
scas
sub
les
jge
leave
xlat
mov
cmpsl
dec
sub
push
js
lcall
adc
je
inc
imul
mov
popa
cltd
dec
inc
mov
push
ss
ljmp
cmpsl
in
xchg
push
fcmovbe
fsubs
repnz
test
mov
lods
mov
dec
and
mov
enter
int
call
daa
jecxz
scas
push
ja
iret
shrl
and
sahf
lret
jmp
in
fisubrl
mov
mov
insb
dec
in
aas
pop
sbb
pop
repz
xchg
sub
inc
xor
mov
mov
js
jmp
loop
push
popf
or
movsb
xchg
and
clc
add
cmpsl
and
cwtl
imul
cmpsb
dec
pop
pop
xchg
ja
call
scas
jecxz
push
and
push
popa
imulb
cmpsl
ret
add
mov
cmpsl
bnd
lock
jecxz
mov
sti
xchg
cmp
outsb
jmp
mov
mov
ret
xchg
adc
call
xchg
inc
dec
insl
inc
add
lret
pop
in
dec
lods
xchg
push
test
or
dec
arpl
and
gs
adc
out
mov
test
xor
mov
sbb
xchg
inc
cmpl
dec
adc
pop
sbb
lock
fidivrl
data16
mov
cmpsl
addr16
imul
punpckhwd
jne
pop
mov
xor
cmpsl
cmp
jmp
shrl
pop
pusha
jns
and
mov
pop
test
rcrb
call
and
mov
sub
stos
rcll
mov
out
not
ds
enter
jnp
cmpsl
fcompl
xchg
xchg
sub
mov
mov
and
push
pop
iret
lods
jecxz
ret
cmp
imul
nop
xcrypt-cbc
cmpsl
adc
hlt
je
out
popa
cmpsl
sbb
das
mov
lock
fwait
mov
sub
clc
mov
mov
call
call
out
sub
add
sbb
mov
aas
sub
cmp
mov
xor
mov
jl
out
adc
or
lds
push
inc
mov
andl
cmpsl
mov
sub
mov
pop
cmpsl
adc
sbb
dec
inc
inc
aad
mov
sub
repnz
push
bound
mov
stos
mov
fdiv
cmp
rorl
cwtl
xchg
cmpsl
mov
lcall
mov
std
fildll
mov
scas
mov
xchg
sarb
rcrb
xchg
mov
wbinvd
loop
cmpsl
lock
stos
out
inc
loope
inc
fcomps
nop
or
and
cmpsl
adc
stos
jbe
imul
lahf
xchg
out
shrl
ficompl
jle
test
push
inc
pop
dec
cmpsl
hlt
mov
jno
cmpsl
cs
sub
mov
dec
sbb
xor
lcall
xchg
ficomps
sbb
or
imull
mov
and
sbb
lds
ljmp
fnstcw
loope
cmpsl
test
cmpsl
es
scas
lea
lods
cmpsl
xchg
stos
xchg
lods
int3
cld
push
sti
and
dec
repz
xor
pop
call
enter
jb
lock
cmp
push
mov
cmpsl
adc
jl
add
cmpsl
jno
repz
test
cmpsl
mov
adc
push
inc
mov
jae
push
pop
aas
mov
loope
jmp
pop
mov
addb
cwtl
jmp
pusha
sbb
mov
mov
or
cmc
cmpsl
mov
fst
stc
mov
mov
iret
loopne
fmul
das
cmpsl
jl
ficoms
jg
cmpsl
mov
stos
xor
out
test
mov
cmpsb
sub
sbb
repnz
test
jb
andb
cmpsl
gs
imul
push
das
sbb
clc
xchg
ljmp
outsl
sbb
mov
in
push
filds
sbb
and
dec
mov
mov
mov
outsl
mov
insl
xchg
fcmovb
insb
push
sbb
fildl
bound
roll
jo
cmpsl
xor
push
test
mov
cmpsl
testb
and
ja
cmpsl
fldcw
mov
js
fs
cmp
adc
dec
cmc
or
jle
dec
shlb
inc
cmpsl
xor
or
movsb
mov
xor
pop
dec
pop
insl
je
aam
int3
jno
cmpsl
fistpl
sbb
cmpsl
nop
dec
sar
outsl
bound
cmpsl
mov
mov
cmpsl
fnsave
push
and
xor
mov
outsl
insb
lcall
jo
sub
mov
out
sbb
and
outsl
jecxz
cmp
cmpsl
mov
xlat
mov
int3
or
mov
mov
je
jg
inc
dec
mov
jno,pt
mov
lock
je
cmpsb
int
fiadds
add
jecxz
dec
add
mov
push
mov
addr16
pop
xchg
fbld
mov
sbb
inc
xor
inc
stos
mov
mov
repnz
and
and
xchg
or
arpl
cwtl
cmpsb
js
jne
push
cmpsl
gs
mov
xchg
inc
lret
mov
mov
jl
mov
and
xchg
gs
cmpsl
mov
jge
les
rcrb
mov
cmc
mov
in
in
mov
aad
adc
cmp
pop
shr
adc
pop
mov
imul
outsb
sub
data16
aaa
mov
xor
cmpsl
adc
push
lods
and
mov
fcmovnbe
jge
daa
cmpsb
pop
push
cmp
or
cmpsl
mov
jae
data16
mov
movsb
add
xlat
xchg
aam
mov
jl
addr16
in
fldcw
jle
jmp
aaa
sub
or
je
push
cmpsl
out
repz
out
ds
push
cmpsb
stc
and
cltd
rcl
mov
push
test
adc
sbb
push
in
cmc
and
push
shll
loopne
sarl
mov
inc
xchg
scas
push
andl
fcomps
je
adc
out
sbb
cmpsl
and
addr16
add
mov
xor
movsb
pop
sub
lret
adc
mov
jne
dec
fildll
ljmp
repz
cmpsl
gs
xor
or
cmpsl
mov
and
jb
push
cmpsl
adc
stos
jmp
sub
inc
sub
cmpsl
mov
adc
cmpsl
imul
int
test
inc
push
cmpsb
loopne
out
or
jge
cmpsl
push
ficomps
cmp
mov
cmc
loop
xlat
ja
insb
sarl
lods
cmpsb
jg
xor
jnp
mov
push
or
cmpsl
jmp
jno
repz
inc
xor
insb
enter
lods
icebp
fucomi
mov
or
mov
nop
cmp
rcrb
push
sub
cmpsl
mov
pushf
xor
lods
jecxz
insb
cmpsl
jp
mov
in
mov
push
pop
and
jmp
jae
cmpsl
cmp
xorb
lret
out
and
mov
xor
cmpsl
mov
mov
cmpsl
add
out
loope
nop
std
cmpsl
adc
mov
cmpsl
fimuls
fimull
add
test
shll
cmpsl
mov
repnz
adc
test
pop
inc
pop
shll
scas
xchg
mov
cmpsl
test
sub
cmp
mov
out
cmpsl
adc
scas
inc
cwtl
jl
jbe
mov
setge
cs
cmpsl
xchg
repnz
cmpsl
dec
adc
xor
push
orl
sub
cmp
fiaddl
in
leave
mov
mov
and
and
pop
xchg
mov
shr
xchg
adc
std
inc
cmpsl
xor
lcall
in
cmpsl
cli
aaa
push
sbb
pop
mov
jb
xchg
and
les
or
mov
bound
pushf
push
out
cmpsl
lock
movsb
or
sub
fptan
rcrl
jp
leave
mov
insl
jl
sbb
pop
loopne
loop
xor
es
inc
add
in
pushf
cmpsb
cwtl
and
cmpsl
xchg
fnsave
lahf
into
jns
stos
out
scas
jmp
shlb
dec
inc
fisubrl
jno
pop
jg
insl
xor
mov
adc
sbb
adc
sub
mov
mov
scas
mull
pop
ret
cmpsl
lods
add
mov
int3
js
mov
sbb
loope
adc
bound
sarl
cmpsl
inc
or
call
cmpsl
outsl
test
adc
push
insl
into
pushf
sbb
pop
arpl
or
mov
mov
fnstsw
cmpsl
notl
inc
stos
aad
mov
stos
jp
lret
das
ret
lods
int3
xchg
sbbl
cltd
mov
push
test
mov
mov
mov
xor
dec
aad
push
cmpsl
pop
jns
out
cld
lret
mov
cs
push
cmpsb
sub
insb
cmpsl
cwtl
jbe
mov
cmpsl
mov
hlt
imul
cld
leave
push
fdivl
cmpsl
push
imul
add
and
shrl
pushf
dec
cmpsl
scas
enter
xor
lods
push
add
and
sbb
divl
cli
add
mov
jnp
cmpsl
mov
push
imul
addr16
aam
xchg
cld
mov
cmpsl
and
jecxz
jge
pop
cmpsl
fistpll
mov
cmpsl
cmc
clc
xchg
mov
or
mov
subb
out
mov
faddl
cmpsb
in
cmc
adc
into
rcrb
push
mov
adc
xor
cmpsl
lods
in
scas
adc
add
cmpsl
xchg
ljmp
int3
dec
out
mov
sbbb
les
popf
test
fcoml
sbb
jp
jo
adc
adc
cmpsl
sub
inc
xchg
pop
hlt
jge
in
and
js
dec
gs
adc
xchg
sbb
mov
xchg
out
lock
psadbw
mov
add
test
or
jnp
sub
jge
cmpsl
sbb
popa
mov
add
mov
xlat
sub
cmp
cmpsl
fwait
addl
aad
popa
lret
sbb
xstore-rng
cmpsl
adcl
adc
dec
push
mov
adc
aam
int3
add
push
pop
test
ljmp
pop
add
std
mov
ret
mov
ss
mov
lds
fnstcw
jno
or
scas
xlat
pop
adcb
popa
jge
jnp
jae
aam
inc
enter
and
shll
and
idivb
and
cmpsl
stos
imul
subl
dec
or
or
lods
mov
dec
push
rcll
loop
cmpsl
shr
into
mov
mov
mov
addr16
xchg
sub
jge
xchg
clc
mov
push
cmpsb
push
scas
sbb
adc
rcrb
or
mov
lret
ljmp
in
das
mov
push
mov
data16
xlat
xchg
cwtl
ret
sti
xchg
xor
lods
lods
cmpsl
mov
cmpsl
mov
pop
bound
adc
in
aaa
nop
imul
or
mov
pop
xchg
jb
dec
mov
dec
mov
cmc
idivl
stos
lahf
push
arpl
mov
call
cmc
add
cmpsl
bswap
or
pop
jns
addr16
cld
in
das
xchg
hlt
and
shll
pop
sti
das
adc
sarl
xchg
and
fstpl
ret
in
stos
lahf
stos
cmpsl
mov
je
jnp
aam
sub
pop
aad
andl
cmpsl
es
fisubrs
jbe
cmp
daa
call
cmpsl
sub
mov
mov
sub
jg
orb
xchg
adc
mov
push
pop
fstpt
test
cmpsl
pop
ss
jg
lods
imul
cmp
outsb
adc
xor
push
hlt
sbb
pop
ds
adc
push
mov
sub
cmc
nop
inc
dec
cmpsl
add
gs
out
jecxz
sub
mov
cmp
addr16
xchg
ds
cmpsl
or
dec
jle
mov
xchg
or
lods
js
pop
or
push
push
xlat
movsb
pop
cmovl
cmpsl
and
add
ss
pop
inc
out
jno
stos
sub
mov
rcrb
ja
shl
cmpsl
add
sbbb
jns
lret
ljmp
out
and
loope
cmpsl
in
or
scas
ror
jmp
rorb
ds
repnz
cmpsl
mov
mov
push
ret
xchg
mov
data16
dec
cmpsl
out
cmp
mov
and
or
dec
std
push
iret
xor
mov
and
cmpsl
xor
lcall
dec
xor
mov
dec
add
jbe
add
cltd
arpl
call
mov
pusha
sub
je
jecxz
fisttps
lret
clc
outsb
cmpsl
das
in
js
mov
andb
xor
xchg
xchg
and
in
rorl
leave
push
mov
je
inc
mov
fiaddl
pop
cmp
inc
cmpsl
sarl
call
addr16
mov
divl
cmc
sub
pop
data16
ret
clc
lret
out
test
push
xchg
rcrl
inc
lret
popf
jg
stos
lock
adc
insb
add
lea
cwtl
push
and
pop
jo
clc
lds
inc
mov
xor
icebp
push
fildll
mov
push
cmp
fcmovnbe
and
mov
jle
ds
ja
mov
mov
hlt
cmpsl
inc
xchg
jnp
dec
and
jns
leave
push
stc
lret
push
imul
mov
repnz
outsb
xchg
sbb
cmp
stc
or
dec
and
imul
cmpsl
jno
adc
outsl
popl
push
xchg
stos
shrl
mov
insl
out
pop
loope
fdivrs
and
cmpsl
sbb
pop
lods
shll
das
cmpsl
add
jecxz
cltd
adcl
push
cmpsb
addr16
rdmsr
push
pop
cmpsb
int
stos
loope
lock
cmpsl
test
sbb
cld
cmpsl
jo
cmp
add
cmpsl
mov
add
sbb
pop
shlb
push
push
add
and
dec
xlat
push
xchg
in
dec
or
mov
leave
bound
cwtl
data16
outsb
mov
sub
adc
mov
inc
xchg
sarl
mov
cmpsl
into
in
repz
fcmove
pop
adc
ret
nop
cmpsl
xchg
addr16
push
dec
mov
ja
int
push
lods
fidivrl
xor
jmpw
cmp
push
fldenv
mov
xor
mov
cmpsl
inc
dec
push
test
mov
cmpsl
mov
inc
push
add
rcrl
out
pushf
les
sub
cmpsl
pushl
jecxz
pop
xor
jl
bound
pop
iret
cmpsl
dec
jmp
xchg
ljmp
push
fistpll
xor
cmp
mov
scas
mov
adc
das
mov
rol
sub
out
cmpsl
push
ss
scas
imul
ja
or
aad
cmp
or
ficoml
test
and
cmpsb
mov
pop
push
adc
push
pop
cmpsl
pop
sti
and
cmp
mov
sbb
inc
sbb
std
dec
dec
fmull
dec
mov
push
cmpsl
xchg
mov
cli
cs
data16
mov
cmpsl
lds
lods
fimuls
hlt
xor
sbb
shr
mov
es
xorl
fisubs
dec
daa
cmp
leave
int
les
loopne
jne
int3
jp
add
cmpsl
xor
inc
loop
cmpsl
xchg
jno
adcl
ret
cmpsl
scas
sub
inc
ljmp
mov
push
inc
je
call
fsubrs
jno
test
cwtl
mov
cli
add
xchg
daa
mov
jns
inc
adc
ja
jbe
sub
clc
cmpsl
or
lods
jb
mov
sub
fucomp
push
mov
pop
jno
notb
cmpsl
insl
das
inc
add
cld
cltd
mov
jb
add
gs
mov
cmpsl
movsb
loopne
clc
dec
or
mov
inc
jmp
shll
adc
call
inc
adc
jecxz
mov
adc
or
mov
xor
test
xchg
push
pop
add
lods
popf
mov
lahf
in
and
cli
xchg
inc
testb
stos
cmpsl
jg
inc
pop
scas
add
imul
fwait
push
inc
lret
jg
out
mov
cmc
lcall
mov
test
or
mov
push
rolb
ss
sbb
cmpsl
js
pop
lea
push
sbb
or
je
sub
leave
add
hlt
lcall
adc
mov
ret
mov
cmp
adc
insb
fisubrs
xchg
cmpsl
ror
pop
dec
jecxz
enter
repnz
cmpsl
ret
int
mov
shrb
adc
sub
xor
mov
inc
cmpsl
inc
fildll
testb
int
cwtl
sub
fs
cmpsl
adc
jge
mov
lock
or
add
inc
push
hlt
out
dec
mov
mov
call
out
sbb
push
push
dec
push
xchg
cmpsl
mov
pusha
lock
cmpsl
sbb
jo
sub
jae
xchg
sahf
mov
ret
mov
icebp
fucomip
outsl
and
leave
shlb
vpmaddwd
cmp
pop
cmp
into
nop
bswap
repnz
or
pop
mov
insb
lds
or
mov
sbb
shll
cmpsb
ror
mov
jne
or
mov
in
cmpsl
cld
push
jmp
adc
lret
out
push
inc
repnz
dec
mov
flds
jns
bound
pop
aas
add
dec
sarl
mov
test
dec
lods
cmp
loope
stos
jnp
arpl
cvtdq2ps
dec
sub
fcomip
push
aam
call
jge
jmp
push
lds
cmpsl
xor
shll
adc
inc
mov
xchg
into
pop
aad
push
cmpsl
imul
xchg
lcall
outsl
prefetch
or
repz
jae
sar
daa
pushf
jp
push
mov
cmp
or
jecxz
gs
push
or
gs
adcb
dec
xchg
push
and
scas
std
adc
call
out
call
xor
pop
cmp
jbe
ljmp
push
pop
sub
pop
cld
sub
jge
xchg
fs
adc
fisttps
cmpsl
pop
aaa
loope
pop
push
mov
mov
fcom
bound
out
icebp
sub
pop
aad
cmpsl
mov
cmp
cmpsl
dec
jne
nop
cmp
jp
cmpsl
icebp
adc
cli
sub
xor
sub
insb
sbb
mov
jbe
sub
push
cmpsl
jae
push
mov
scas
xchg
dec
cltd
add
jl
xor
cmpsl
xor
popf
rorb
daa
imul
cmc
out
ret
cmp
xchg
and
xchg
cmp
pop
cs
scas
mov
mov
adc
mov
sbb
cmc
xchg
cmpsl
bound
mov
lds
xchg
fwait
cwtl
int3
sbb
jg
sti
cmpsl
push
xchg
test
fisubl
push
ljmp
mov
jp
imul
ret
mov
insl
xchg
jne
mov
sbb
addl
push
int
push
push
dec
aad
shl
jl
push
shll
xor
jae
leave
dec
outsl
cmpsb
cmpsl
pusha
iret
sbb
out
adc
es
test
in
cmpsl
jbe
push
fldt
hlt
insl
sub
xor
mov
xchg
dec
xchg
cmpsl
in
call
shlb
es
fsubl
mov
cmpsl
ss
cmp
lods
iret
mov
mov
scas
ret
push
insl
sub
adc
fst
stos
cmpsl
sbb
dec
add
xor
pop
cmpsl
mov
lcall
xchg
jg
lret
or
jecxz
adc
cmpsl
sbb
mov
into
sub
cmpsl
mov
je
mov
xchg
sbb
dec
repnz
iret
sti
cmpsl
arpl
aas
test
cmpsl
xchg
hlt
jmp
sub
push
divl
adc
xor
cmpsl
jo
incb
cli
out
sbb
pop
movsb
call
daa
cmpsl
dec
jno
lret
mov
outsl
mov
popf
cmp
stos
dec
out
mov
mov
ds
data16
rorl
outsb
adc
test
xchg
add
dec
adc
fistpll
push
cmp
int
shl
xor
push
cmp
xor
inc
cmpsl
sbb
xchg
pop
ds
cmpl
movsb
cmc
imul
sub
mov
aad
test
jbe
inc
repz
sbb
jle
insl
mov
cmpsl
sbb
xchg
cmpsl
test
xchg
mov
cmpsl
iret
ss
sti
stc
or
cmpsl
rclb
gs
outsb
push
in
lahf
sti
cmpsl
xor
and
xor
jno
fldenv
lcall
jmp
xor
sbb
bound
lret
mov
loope
jge
cmpsl
dec
das
stc
mov
jnp
inc
addb
sub
lds
and
je
fimuls
push
movsb
cmpsl
dec
mov
pop
adc
iret
lea
scas
xchg
mov
inc
xchg
out
or
loope
fstl
ret
jbe
dec
jmp
sarb
pusha
scas
cmpsl
cld
cli
or
sarl
xchg
jp
adc
push
in
stos
cmpsl
popf
adc
mov
cmpsl
lret
mov
pusha
shlb
jle
mov
repnz
mov
and
cmpsl
fcoms
mov
ss
das
pop
mov
and
iret
rolb
jb
xor
cltd
leave
outsb
xlat
sub
popf
ljmp
pop
out
inc
lods
dec
mov
and
rorl
push
cmpsl
cmp
faddl
mov
push
cmpsl
aaa
sar
pop
test
mov
xchg
pop
fwait
sarl
adc
ret
dec
adc
lock
call
pop
lahf
cmpsb
mov
dec
rcr
cmpsl
jl
fsub
pop
add
dec
xor
mov
jns
adc
test
or
or
lea
dec
aam
xcrypt-cbc
cmpsl
adc
mov
and
jne
or
daa
push
aad
test
in
mov
xor
cmpsl
aaa
add
xlat
test
sbb
sub
cmpsl
xor
mov
aas
mov
jmp
in
adc
xor
xchg
push
jb
int3
mov
pop
pushl
ret
cmpsb
push
sub
push
jecxz
xchg
cmpsl
inc
sarb
vpsllvd
aaa
mov
ljmp
test
out
sub
adc
rclb
pop
loop
xor
mov
scas
fildll
push
or
pop
dec
aam
mov
stos
in
sbb
pop
lods
loopne
and
insb
dec
mov
stos
cmpsb
lahf
mov
add
data16
and
adc
cmpsl
mov
mov
fadds
xlat
cmpsl
inc
push
xchg
jle
push
cmp
cmpsl
ja
mov
fdivs
js
sbb
xor
bound
jns
daa
cmpsl
sbb
push
inc
cmc
in
ftst
nop
outsl
loopne
inc
add
mov
pop
repz
mov
cmpsl
scas
and
rclb
cmpsl
mov
dec
cmpsl
sbb
addr16
shrl
out
and
outsl
sbb
filds
ror
lahf
xor
rolb
mov
mov
daa
cmpsl
and
lahf
push
xor
cmpsl
dec
ja
or
adc
dec
out
loope
add
les
pop
stc
call
mov
mov
sbb
out
mov
xor
ja
sbb
divb
cmpsl
incb
out
cwtl
mov
mov
fcomp
xchg
outsb
arpl
mov
insl
xor
lds
xchg
sbb
sub
cmpsl
std
insb
pop
xchg
xorl
mov
or
and
sbb
mov
fildll
cmpsl
add
mov
xor
dec
stos
add
or
cmp
imul
loope
xchg
adc
dec
and
pop
cmpsl
xor
sbb
lds
sarl
outsb
mov
int
cmpsb
mov
cmpsl
add
testb
xchg
in
mov
mov
stos
hlt
sbb
xor
mov
cmpsl
cmp
push
xchg
adc
or
xor
popf
mov
js
adc
xor
mov
inc
xchg
pop
mov
jge
and
jmp
inc
cmp
pop
test
xchg
ds
cmpsb
jge
call
mov
add
mov
dec
bswap
iret
stos
cmpsl
test
ret
mov
pop
hlt
cmc
pushf
gs
movl
ret
cmpsl
cmp
subl
cmpsl
xor
mov
stos
inc
mov
aad
cmpsl
mov
xchg
cwtl
cli
jne
dec
je
dec
adc
cmpsl
outsb
or
fildll
icebp
sub
enter
lea
xorb
push
xor
mov
add
push
cmc
jo
lret
push
sub
les
ljmp
push
insb
mov
outsl
mov
cmp
lds
in
fidivrs
std
cmpsl
jnp
addr16
and
repz
xchg
stos
inc
push
mov
mov
inc
jns
ljmp
sub
repz
pop
inc
cmpsl
out
mov
adc
sbb
aam
roll
sub
lret
xor
cmpsl
xchg
fildll
jle
bnd
pushf
cmp
inc
in
cmpsl
mov
push
xchg
imul
sbb
and
lcall
insw
and
fisubl
loop
push
in
push
mov
push
imulb
pop
mov
cli
sbb
dec
sub
insb
lret
inc
sub
jnp
inc
mov
repnz
jg
sbb
xlat
cmpsl
pop
sub
jecxz
adc
pop
outsb
cwtl
xchg
cmpsl
and
mul
es
das
popl
lods
sub
fisubl
and
cmpsl
inc
cmpl
loope
pusha
movsl
xchg
std
mov
popa
sub
fidivrl
mov
mov
insl
cmpsl
fcomi
xchg
xor
pop
add
or
clc
push
pop
outsl
cmpsb
jb
daa
fld1
cmpsl
adc
add
aad
push
lret
sbb
test
pop
cmpsl
sahf
notl
in
popa
xor
mov
cmpsl
pop
stos
cltd
pushl
add
push
cmpsl
ljmp
push
cmpsl
stos
xor
push
insl
mov
out
sbb
mov
popf
incl
cmpsl
ljmp
xchg
lret
xor
repz
adc
and
mov
ret
push
aaa
push
mov
or
pop
xor
montmul
cmpsb
xchg
je
jb
push
stos
pop
movsb
mov
pop
push
sub
and
lds
scas
push
mov
fidivl
xor
in
int3
leave
mov
mov
xchg
cmpsl
jg
dec
mov
mov
arpl
cmpl
xchg
mov
repz
push
xchg
cmpsl
inc
fwait
das
push
shl
jb
mov
aaa
mov
repnz
cmpsl
fadds
sti
rcr
xchg
aad
mov
fbld
rorb
inc
mov
cmp
sbb
xchg
test
sahf
pushf
mov
sub
adc
lret
push
pop
push
cmpsl
pop
adc
xchg
push
sub
aad
cmpsl
fstps
cmp
mov
fwait
adc
push
pusha
mov
mov
decl
or
and
ja
sub
mov
icebp
cmpsl
mov
xchg
add
xor
cmpsl
push
scas
and
stos
fldt
das
jg
addr16
ret
popa
inc
pop
xor
cmpsb
xor
js
into
pusha
dec
mov
cmpsb
sbb
arpl
mov
ss
cmp
jmp
cmp
out
cmpsl
sub
push
or
mulb
dec
mov
cmpsl
les
jne
test
cltd
sub
xor
movsb
mov
imul
xchg
xchg
mov
lock
cli
and
insl
lret
pushw
cmpsb
into
cwtl
and
rorl
in
push
mov
jg,pn
imul
addl
fisttps
icebp
cmpsl
inc
or
sub
cmpsl
pop
out
in
and
cltd
mov
mov
mov
dec
xchg
dec
mov
xor
xor
push
dec
dec
push
xor
push
add
fsubrl
mov
sub
inc
sbb
mov
aas
add
xor
jnp
add
mov
inc
inc
cmp
sub
adc
mov
dec
jle
cmpsl
pop
insl
dec
mov
dec
int3
adc
pop
cmpsl
mov
cmpsl
in
add
push
inc
mov
and
or
cmpsl
push
push
cld
inc
cwtl
xor
mov
hlt
lods
int
shl
loopne
mov
and
cmc
or
cmpsl
ret
daa
xor
call
scas
sbb
dec
js
lret
lahf
es
xchg
cs
cmpsl
into
sahf
pop
cmp
push
out
cmpsl
sub
mov
inc
xor
mov
addl
mov
addb
mov
insb
sbb
cmp
rcll
cli
dec
ficompl
insl
outsb
adc
sub
ja
add
and
sbb
mov
push
push
fistps
dec
fdivl
add
cmpsl
pop
icebp
cmpsb
into
mov
mov
sbb
jbe
sub
push
rol
sbb
aaa
and
stos
repnz
cmpsl
jae
adc
jo
adc
cmpsl
fstpl
imul
dec
inc
ret
adc
aas
mov
int
inc
add
fadd
xchg
jmp
mov
test
test
outsl
outsb
daa
pushf
adc
pop
aam
bnd
cmp
sbb
mov
dec
fmul
xor
insb
mov
cmpsl
pop
sbb
daa
cwtl
add
test
sbb
sarb
js
cmp
sbb
pushf
cmp
dec
lea
insb
fcomps
cmpsl
sbb
pushf
ret
pop
mov
lea
cwtl
fsubr
sbb
jne
hlt
sub
sbb
ret
cld
add
nop
movsb
pop
lret
pop
jo
xchg
insb
mov
cmpsl
cmp
nop
adc
push
dec
insl
mov
sbb
ret
mov
ficompl
or
call
addb
int3
out
adc
sbb
inc
lea
dec
cmp
fcmovb
or
xchg
xor
cmpsl
cmp
daa
dec
les
sub
mov
sbb
push
notb
sub
sub
cmp
xchg
sbb
cmpsl
mov
push
jg
sti
add
dec
lret
sbb
mov
fsubrs
sbb
mov
cmp
push
dec
in
pop
int3
ds
test
out
dec
xchg
lods
pop
dec
cmpsl
xor
push
andl
insl
xlat
lods
repz
fsubr
cmp
lock
rcll
push
into
sub
cmpsl
sbb
or
in
pop
jne
into
push
ret
lcall
sbb
addr16
adc
xchg
pop
push
clc
mov
sub
std
fwait
xchg
movsb
mov
add
repnz
mov
add
frstor
int3
sbb
mov
scas
les
fcompl
mov
cltd
je
cwtl
cmpsl
push
sbb
jmp
sbb
fidivs
mov
push
popa
pop
movsb
cmpsl
pusha
gs
fldcw
fcomip
lret
pop
jge
dec
lcall
daa
cmpsl
pusha
cs
cmpsl
adc
sbb
fnstenv
pop
pop
cltd
rcr
sub
mov
adc
pushf
pop
mov
cmpsl
out
insl
jl
and
push
lret
add
stc
divl
xchg
fwait
pop
arpl
or
jp
jle
lahf
sub
mov
mov
push
and
roll
out
jns
push
dec
sti
jne
mov
pop
fsubrl
jg
mov
or
test
nop
pop
repz
cmpsl
sbb
mov
sub
sbb
jp
test
mov
adc
push
stc
and
cmpsl
sbb
mov
jg
pushf
enter
dec
dec
sahf
mov
and
movsbl
int3
or
out
gs
sahf
cmpsl
pop
scas
xchg
dec
adc
outsb
xacquire
cmpsl
xor
in
dec
sarl
lock
add
dec
mov
ret
or
xor
mov
pop
push
cmpsl
push
popf
xlat
inc
in
mov
add
nop
ret
lods
and
sarb
adc
arpl
in
adc
std
cld
mov
cwtl
pop
jmp
scas
clc
lret
jg
imul
adc
and
loope
lcall
dec
mov
std
inc
xchg
ss
and
sahf
push
out
and
iret
outsl
fdiv
aam
cmpsl
cli
ret
stc
pop
push
jae
inc
pop
in
popl
lret
cmpsl
cmp
je
push
mov
cmpsl
mov
or
add
fmul
xchg
lods
cli
andl
push
in
adc
xor
jno
mov
pop
pop
jne
mov
mov
gs
push
inc
and
insb
xchg
cmpsl
sbb
lcall
shrl
xchg
imul
shlb
std
mov
daa
or
adc
xchg
push
fists
mov
test
stc
jo
lea
data16
push
push
cmpsl
in
sti
push
bound
mov
pop
mov
negb
mov
mov
lahf
div
lret
xchg
ljmp
add
sti
in
arpl
lods
dec
pop
xor
and
dec
scas
scas
ficoml
mov
testl
mov
adc
mov
cmpsl
insl
pop
push
adc
mov
enter
add
xor
sub
mov
jmp
fxch
mov
inc
shll
mov
out
sub
jne
cmc
and
pushf
fisttps
cld
cmpsl
pop
sub
int3
in
sbb
outsb
inc
addl
pop
sti
cmpsl
mov
push
out
xorl
in
cmp
andb
mov
test
stos
sub
mov
popa
test
cmpsl
call
jmp
aad
movsl
or
inc
cmpsb
sbb
xchg
mov
jnp
lods
dec
mov
push
and
dec
adc
test
out
cmp
cmp
in
adc
add
icebp
sbb
leave
dec
cmpsl
notl
dec
push
hlt
or
cmp
pushf
and
xchg
call
add
mov
jnp
addb
andb
je
aam
out
jnp
push
xchg
loop
cmpsl
inc
dec
out
in
mov
push
mov
ret
inc
cmp
int3
clc
mov
cmpsl
jbe
jb
mov
mov
mov
sbb
cmp
aas
cmpsl
std
push
das
int
jae
popa
add
jecxz
out
mov
out
sti
dec
arpl
aas
das
cmpsl
adc
and
pusha
xchg
xchg
jbe
pusha
xlat
les
jns
outsl
inc
sub
cmpsl
std
int
cmpsb
scas
rcrl
cmpsl
xor
cmpsl
ret
xchg
arpl
in
out
das
cmpsl
cmpb
mov
inc
sti
push
shlb
cmp
jle
xor
cmpsl
xor
loopnew
add
mov
push
scas
xorl
int3
inc
gs
je
clc
cmpsl
ficompl
cltd
push
inc
mov
cmpsl
dec
sti
inc
mov
cmpsl
gs
out
jecxz
aas
test
stos
out
cltd
popf
xor
call
fcmovu
sar
shrb
inc
enter
add
movsb
adcb
mov
outsb
pminub
aam
pop
xchg
cmpsb
sbb
cmp
cmpsl
stos
insb
outsl
cmp
fcompl
push
mov
fists
mov
cmp
jmp
loope
sub
in
into
sbb
stos
cmp
shlb
std
lret
lret
shrl
daa
xchg
pop
cmpsl
mov
cs
es
cmpsl
fisttpl
mov
mov
stos
jns
pop
repnz
xchg
nop
icebp
xchg
je
ss
dec
cmpsl
pop
int3
cmp
xor
hlt
sub
fcompl
pop
cmpsl
inc
js
cmc
and
mov
dec
inc
clc
push
leave
ljmp
imul
insl
ss
les
gs
cli
aam
cmp
adc
xor
cmpsl
dec
jbe
arpl
mov
pop
cmpsl
pop
sbb
lods
imul
jns
mov
fmull
mov
add
mov
leave
cmp
xchg
jl
and
adc
adc
ror
or
das
cmpsb
push
jmp
cli
cld
in
arpl
out
sbb
cmp
clc
lods
cmpsl
movntq
out
inc
stos
push
addl
stos
mov
mov
and
xchg
xchg
xor
aaa
std
jmp
add
pop
mov
and
jg
mov
mov
rcrl
xchg
lock
rep
test
adc
out
mov
push
fmuls
cmp
es
sbb
js
xchg
jle
cmpsl
mov
push
addr16
mov
adc
inc
ds
xchg
xchg
and
dec
push
pop
pop
ret
pop
jg
ja
iret
push
roll
lret
xor
xor
fisubrl
pop
dec
imul
cmpsl
cmp
mov
int
cmpsl
loop
xchg
cmpsb
iret
pop
mov
rcll
test
xor
je
pop
pop
mov
lds
sub
and
xchg
push
ja
repnz
cmp
lret
push
cmpsl
cmc
lcall
fidivrs
call
cmpsl
mov
jo
mov
dec
mov
aam
cwtl
arpl
jecxz
mov
imull
mov
cwtl
sahf
sarb
adc
push
ret
jno
call
or
sub
xor
iret
mov
cmc
mov
jecxz
add
pop
mov
pop
lea
mov
cmpsl
fnsave
xchg
cmp
mov
insl
add
jo
push
add
out
es
repz
sbb
mov
das
and
mov
mov
cmpsl
out
mov
add
popl
push
jl
paddd
call
popf
add
pop
rcll
push
inc
daa
jg
mov
push
cwtl
icebp
cmpsb
dec
pusha
pop
or
insb
iret
mov
push
jecxz
shrb
xor
cmpsl
popf
test
jno
test
divl
adc
into
inc
enter
push
pop
adc
mov
sahf
scas
sbb
push
jle
push
fldcw
pop
test
pop
push
jo
arpl
sbb
fistl
incl
dec
fdivrl
lock
xor
imul
fstpl
pop
cmpsl
mov
fisubs
mov
and
lret
and
stc
push
cld
insl
xor
jnp
fwait
cmpsl
ds
je
sbb
inc
mov
xor
out
nop
cmpsl
xchg
cmc
add
mov
dec
cmpsl
jg
pop
lods
and
mov
icebp
add
push
movsb
push
mov
andb
dec
mov
jb
xlat
push
lahf
push
xor
push
cmpsl
pop
lods
fists
test
lods
scas
cmpsb
xor
lcall
frstor
loope
mov
pop
cmpsl
ret
test
jecxz
sbb
pop
shll
add
xor
outsb
mov
mov
popf
add
sub
in
rorl
push
jnp
out
mov
popf
das
out
jbe
sbb
mov
or
insl
pop
mov
clc
cwtl
mov
cmpsl
cmpsl
xchg
jge
push
cmp
sub
test
daa
movsb
dec
cmpsl
or
inc
fstps
hlt
movsb
sbb
jb
mov
out
cmpsb
jne
cli
lret
and
gs
mov
jns
fs
sbb
jle
or
mov
add
test
std
dec
adc
movsb
out
in
scas
ss
cmpsl
enter
xchg
test
push
sub
cmpsl
out
mov
sbb
outsb
push
andb
sbb
ljmp
mov
negb
adc
lret
mov
push
sub
push
leave
mov
lret
pop
mov
je
das
jmp
lds
cmpsl
mov
dec
inc
add
lcall
cmc
jnp
test
push
jno
int3
inc
and
mov
cmpsl
test
cmp
mov
cmpsl
into
imul
cmpsl
fimull
xchg
inc
xchg
loope
cmpsl
es
and
fcoml
ficomps
loop
cmpsl
push
add
xchg
test
mov
cmpsl
xor
xchg
inc
jge
cmpsl
mov
or
pop
sahf
mov
mov
bound
or
mov
out
mov
mov
cmp
hlt
push
arpl
pop
xor
mov
clc
and
inc
mov
dec
mov
std
pop
les
ja
cmpsl
insl
sub
cmp
je
nop
mulb
xor
sbb
iret
cmp
cmc
cld
pop
push
lods
mov
test
sbbb
inc
dec
and
cmpsl
insl
hlt
je
pusha
adc
push
push
int
arpl
dec
loope
aaa
cmpsl
mov
sbb
icebp
cmpsl
add
push
div
inc
out
popa
xor
pop
cmpsl
xchg
adc
ljmp
push
mov
into
mov
sbb
jg
cmpsl
adc
cmp
cmpsl
inc
push
and
xchg
fwait
inc
aad
jne
cmpsl
stos
popa
sbb
push
cmpsl
or
jno
jle
jge
sub
mov
push
cmp
mov
in
pusha
lock
pop
and
cs
fcomps
mov
xchg
sbb
xor
xor
lahf
add
push
es
or
push
stc
cmp
lods
ss
jae
pop
inc
inc
dec
and
outsl
ret
lret
xor
call
sbb
into
cmp
popa
cwtl
add
dec
cmpsb
imul
cmp
add
gs
xlat
test
subl
sarb
loope
add
sarb
jno
pop
cmpsl
sbb
int
mov
xchg
data16
nop
xchg
adc
popf
sahf
jmp
cmpsl
std
cmp
addl
shl
cmovg
cmpsl
call
cli
jmp
pop
adc
xor
repz
insb
cmpsl
or
je
dec
cli
inc
cmpsl
lret
mov
push
leave
lcall
and
inc
cltd
adc
mov
adc
jno
inc
mov
out
cmpsl
mov
out
aas
enter
shrb
mov
xor
test
xor
out
adc
cld
jge
push
sbb
jo
xor
jp
ret
daa
cmp
push
les
mov
cld
out
gs
insb
jmp
cs
mov
xchg
out
loop
mov
mov
mov
adcb
subl
aad
adc
jnp
cmpsl
or
fsubl
inc
jp
xchg
inc
in
outsl
add
jns
pop
pop
shlb
add
pop
mov
repnz
jle
cmpsl
push
sbb
mov
loop
sbb
imul
loopne
pop
cli
notl
aam
sub
adc
imul
std
cwtl
cmpsl
jp
dec
test
xor
jle
jmp
adc
add
dec
repz
ret
test
xchg
mov
sbb
push
prefetch
mov
cmpsb
dec
cwtl
pop
mov
and
inc
and
pusha
sbb
pop
push
imul
aaa
shrb
sub
jbe
fstps
cmpsl
shrb
in
mov
xchg
lret
fs
lret
lods
or
popf
sub
cmp
xchg
stos
cmpsb
or
push
stos
cmpsl
test
xorl
das
push
fisubl
or
rol
cmp
dec
sti
and
aam
or
je
xor
pop
dec
jne
dec
out
cmpl
cmp
push
cmpsl
ljmp
cmpsl
lea
out
fistpl
cli
ret
cmpsl
and
scas
std
pop
cmpsl
jle
mov
xchg
scas
lods
int3
out
mov
cli
mov
or
imul
jo
pushf
cmpsb
adc
cmpsl
or
dec
lahf
push
test
fs
stos
loope
add
out
add
gs
inc
cmpsl
pusha
pop
in
mov
sahf
cmpsb
xchg
cmpsl
stos
out
js
ljmp
jl
push
in
inc
jg
mov
dec
test
adc
jp
pop
fimuls
xchg
adc
mov
aam
popa
mov
loopne
jecxz
dec
shrb
ja
rcrl
or
pop
add
xor
cwtl
bnd
add
push
clc
jle
pop
mov
xor
pushf
sub
cmpsl
pop
jae
enter
cmpsl
inc
pop
icebp
fsubrl
or
cmpsl
inc
pop
push
mov
imul
pop
in
cmpsl
dec
dec
movsb
pop
jp
mov
inc
out
push
and
data16
mov
cmp
int3
inc
andl
adc
and
pop
js
add
dec
cmpsl
shll
ljmp
push
cli
addb
cmp
pop
inc
cmc
xor
mov
ret
cmpsl
mov
mov
ror
adcl
in
xlat
xchg
xor
cmpsl
mov
daa
push
cmpsl
out
imul
mov
or
fld1
cmpsl
mov
xchg
adc
jnp
mov
stos
insl
inc
push
or
repnz
rorl
jg
push
xchg
sub
and
sbb
std
popa
push
and
das
out
out
rclb
fiadds
rcrl
cwtl
jecxz
cmpsl
addr16
xor
lret
clc
push
add
adc
test
ret
add
mov
jbe
cs
into
xchg
cmpsl
outsb
lcall
mov
cmpsl
jns
inc
dec
add
loope
stos
mov
jns
sarl
pop
fsubrs
in
xchg
rol
push
mov
mov
cmpsl
outsl
sbb
repnz
cmpsl
imul
cwtl
mov
cld
loop
xchg
pusha
dec
test
leave
test
xor
mov
aad
push
mov
pop
les
inc
rcrl
dec
es
stos
xchg
jne
and
lds
dec
pop
cltd
mov
adc
and
jp
mull
adc
mov
lret
xchg
std
cmpsb
sar
mov
inc
add
jge
leave
mov
cmpsl
inc
inc
push
adc
or
imul
sub
lcall
out
or
pop
inc
jl
cmp
aas
rolb
andl
inc
xchg
xchg
inc
sub
mov
xchg
pushf
push
adc
cli
jge
outsl
cmc
xor
sub
sub
nop
mov
imul
mov
sbb
xor
mov
insb
inc
sub
and
stos
xor
push
cmpsl
xchg
adc
cmpsl
stc
fsts
lds
cmpl
fwait
pop
cmpsl
jecxz
xor
fcomps
in
es
cmp
xchg
mov
shll
psubd
add
pop
cmpsl
cmp
fcomi
sahf
xchg
mov
and
dec
daa
cmpsl
leave
in
je
enter
std
mov
int3
test
pop
and
js
mov
ret
inc
cmpsl
cmp
fisubrl
mov
push
enter
pop
push
adc
fldenv
mov
scas
pop
cmpsl
sub
enter
mov
xchg
xor
jmp
fnstsw
jb
sub
cmpsb
and
cmp
dec
xlat
outsl
push
sarl
scas
pop
xchg
leave
push
push
sbb
sub
dec
and
mov
xor
gs
rcrl
and
jg
not
add
hlt
movsb
mov
lahf
inc
cmp
cmpsl
pop
into
mov
xchg
icebp
add
or
xorl
adc
cmpsl
stos
and
bnd
testl
mov
dec
cmpsb
add
or
adc
lods
jecxz
lret
aad
cmp
je
add
ja
cli
pop
pop
xchg
out
sub
jo
inc
lret
sub
sbb
sub
mov
pop
lret
sbb
adc
test
arpl
xchg
push
mov
lods
xor
mov
add
or
jae
mov
push
cmp
inc
push
outsl
roll
ret
notb
jb
gs
mov
sub
jnp
arpl
lret
in
mov
sti
mov
and
adc
cmpsl
cmpsb
sbb
fucom
roll
arpl
jge
fnsave
mov
sbb
push
aad
inc
shll
divb
xor
fwait
mov
adc
das
out
leave
sbb
push
push
dec
movsl
in
lea
shlb
out
lahf
pop
daa
cmpsl
jo
sbb
sub
fnstenv
iret
popa
cmpsl
nop
sbb
dec
cmpsl
mov
out
jb
ljmp
xchg
mov
mov
shll
sub
cwtl
mov
test
rcrb
cmp
je
in
mov
and
pusha
pushf
mov
cli
in
aad
push
mov
repnz
add
cltd
mov
aam
jne
cmp
cmpsl
rorb
adcl
cmpsl
pop
dec
mov
mov
inc
icebp
es
or
and
pop
xchg
adc
cmpsl
int
lret
mov
add
pop
stos
ret
or
imull
mov
adc
cmp
mov
cmp
fsubl
inc
push
jmp
nop
sub
jg
cmpsl
daa
clc
scas
push
rclb
xor
lods
das
mov
push
xor
out
or
scas
insl
inc
clc
xchg
pop
cmpsb
xchg
in
mov
pop
popa
repnz
imul
xor
push
stos
push
es
mov
popf
inc
pop
mov
shll
adc
xor
cmc
int3
jmp
outsl
adc
jb
fwait
gs
ljmp
aad
adc
push
sbb
cli
pop
out
cmpsl
cmpsb
das
add
push
inc
pop
mov
push
ljmp
mov
sbb
pop
xchg
adc
lds
mov
rcrb
cmpsb
sbb
je
mov
or
adc
xchg
imul
cmpsl
xchg
mov
and
mov
push
fcmovbe
lds
daa
pop
gs
mull
leave
push
and
push
and
imul
ja
mov
dec
test
sub
and
out
cmpsb
sub
cmp
cmpsl
jb
fdivr
loopne
ucomiss
mov
outsl
pop
dec
shl
cmpsw
xor
xor
push
ret
add
jno
mov
lret
cmp
ja
aaa
aam
push
mov
and
ds
out
imul
ljmp
das
push
push
aam
aad
cmpsl
out
jnp
mov
insl
cmpsl
imul
aam
fbstp
mov
int3
adc
inc
fsubrs
cwtl
cmpsl
push
repnz
ds
sub
and
int3
stos
stos
jecxz
in
xchg
test
cmpsl
xchg
ror
sub
dec
push
movsb
int3
xor
hlt
lret
pop
lods
cmpsl
mov
add
fwait
cmpsl
jmp
adc
mov
jnp
in
xor
cmpsl
lcall
repz
lods
xor
mov
cli
in
push
mov
dec
or
mov
xor
add
push
das
cmpsl
movb
adc
imul
es
clc
ss
mov
iret
add
lds
dec
inc
mov
inc
xlat
iret
add
movsb
push
pushf
or
enter
ljmp
push
mov
cmpsb
andb
fiaddl
xor
cmpsl
mov
mov
packuswb
lds
fwait
xchg
or
bound
sbb
pop
aaa
aad
jmp
popf
fistpl
outsl
testl
xchg
cmpsb
rclb
movsb
jge
push
mov
outsl
mov
sbb
pop
rolb
fcmove
mov
jge
popf
ja
jg
test
ljmp
cmpl
lret
xorl
xchg
loop
movsb
sub
pop
fsub
gs
xor
cmpsl
js
sahf
cmpsl
jp
test
mov
mov
mov
adc
jns
cmpsl
hlt
loope
aas
das
or
sarl
jnp
aaa
xor
mov
jbe
ficoms
shll
cmc
xchg
dec
xor
and
jno
les
data16
and
sub
clc
add
shll
jle
and
aam
jl
xor
mov
bound
lea
pop
lods
sbb
xchg
dec
lock
and
sub
ret
lahf
xchg
xor
outsb
popf
or
hlt
iret
cmpsl
push
dec
mov
cmpsl
fcoms
mov
mov
cld
mov
jne
sub
cmp
lds
shll
xor
cwtl
jns
scas
cmpsl
xlat
out
inc
jge
adc
cmp
pop
sbb
mov
cmpsb
outsb
mov
pop
sbb
jg
xor
cmpsl
stos
pushf
ljmp
out
push
fwait
iret
jbe
cmpsl
pop
mov
jnp
cmpsl
sarb
adc
scas
cmpsl
xor
fwait
push
push
sub
mov
sbb
movsl
cmpsl
lods
xchg
add
shlb
imul
pop
rcr
or
cmc
pmaxsw
gs
inc
sbbl
addr16
or
xor
xchg
lcall
push
ret
nop
cmpsl
xchg
fs
sarl
cmpsl
jbe
je
push
movsb
popf
sub
xchg
lods
pushf
sub
or
sub
fisubl
add
insl
lds
and
jecxz
std
repnz
pop
les
adc
pop
pop
insb
shrl
stos
inc
fwait
in
pop
and
je
pop
das
sub
dec
sub
test
sarb
into
add
cmp
adc
fnstsw
pop
mov
add
jo
push
shl
inc
cwtl
movsb
mov
xlat
pop
xor
dec
arpl
notb
adc
push
mov
stos
bound
not
mov
andb
testb
pushw
pop
out
xorl
push
aas
imul
cmpsl
outsb
inc
jg
cwtl
push
xchg
nop
stos
or
jae
std
and
mov
push
add
lock
add
pop
outsl
and
cmpsl
in
mov
mov
inc
psllw
pop
mov
shll
sbb
xor
and
and
and
loopne
cmpsl
mov
cwtl
hlt
loop
add
loope
mov
mov
fcoms
stos
aad
push
sub
lods
ret
add
cmpsl
test
daa
popf
mov
dec
stos
out
cmpsl
fisttps
xchg
push
lret
in
cmpsl
fs
int
mov
mov
cmpsl
push
pop
popa
sti
negl
sub
es
std
call
insl
mov
stos
cmpsl
xor
xor
adc
ficomps
jb
in
cmp
fldln2
xor
pop
adc
nop
fisttps
stos
push
in
push
pop
bound
mov
cwtl
icebp
cmpsl
gs
mov
push
lar
fcompl
pushf
frstor
xor
adc
es
ja
jno
loop
cld
sub
into
lret
sahf
pop
int3
cmpsl
shrb
and
sbbl
sbb
adc
xchg
outsb
gs
ret
repnz
mov
jle
shll
cmp
or
clc
inc
xor
add
xor
push
test
adc
or
stc
out
out
inc
stos
cmpsl
push
mov
lds
das
fistpl
cmp
cmpsl
mul
loope
xchg
adc
push
out
jmpw
lods
jae
daa
insl
jnp
adc
sub
xchg
dec
inc
cmp
jne
aas
jle
loop
push
nop
pop
cmpsl
enter
xor
xchg
jecxz
mov
negb
ja
ja
cmpsl
mov
add
iret
dec
ljmp
push
xchg
cltd
es
sbb
cmpsl
push
push
cwtl
fistpll
push
or
cmpsl
xor
inc
sub
add
mov
xor
lret
cmpsb
or
stos
push
scas
insb
ljmp
es
xor
rolb
ss
out
pop
fstl
xchg
pushf
mov
pop
inc
adc
test
popf
mov
jle
inc
or
rcrb
cmpsl
mov
adc
cmpsl
jb
js
lods
sub
in
lret
test
push
jnp
cmpsb
pop
sbb
fistpl
adc
xor
push
ja
in
or
cmpsl
pop
lret
testb
pop
bound
and
test
aam
imul
sbb
test
cmpsl
insl
je
cmp
ret
cmpsl
push
dec
jp
sub
imul
int
arpl
sti
mov
orb
xor
mov
jg
mov
aaa
jl
add
xchg
cmpsl
mov
fadds
dec
cwtl
jb
pop
ja
stos
dec
sub
cmpsl
divb
repz
inc
out
hlt
arpl
or
mov
aas
mov
sarb
sbb
cmc
mov
xchg
int3
out
js
jl
adc
mov
cmpsb
fucomip
jne
mov
cmp
lcall
add
rcrl
mov
adc
cmpsl
push
mov
sbb
aaa
jo
cmpsl
dec
and
jmp
sub
cmp
cmpsl
adc
pop
addr16
int
fistpll
mov
into
mov
mov
aaa
inc
jge
cmpsl
lahf
xchg
leave
jno
jmp
sbb
dec
es
jecxz
pop
cmpsl
pop
adcb
dec
pop
dec
lds
ss
out
cmpsl
out
cmpsl
mov
mov
and
stc
cmc
out
mov
paddd
cmpsl
mov
adc
cmpsl
sub
in
push
stos
popa
pop
cmpsl
mov
decb
test
xor
arpl
mov
inc
outsl
cmc
jbe
dec
aam
pop
push
push
les
cmp
add
adc
pop
arpl
shl
xchg
mull
sbb
sub
std
jb
mov
test
cmp
inc
jmp
out
mov
pop
cmp
aad
jno
inc
pop
or
mov
outsl
or
sub
out
cmpsl
mov
push
loop
pop
xchg
fcoml
or
inc
mov
pop
jge
lahf
insl
sub
ja
inc
adc
daa
pop
repz
pop
cmpsb
loopne
pushf
shll
adc
jg
cmpsl
pop
mov
mov
mov
cmpsl
pop
push
mov
lds
iret
out
cltd
xacquire
push
lret
xlat
mov
or
add
jne
data16
add
leave
or
fidivrl
jle
mov
sub
mov
xor
imul
outsl
jb
dec
stc
inc
cmpsl
inc
push
cli
push
scas
xor
cmpsb
lcall
stos
loop
jmp
enter
scas
cmp
cmp
xchg
mov
cmpsl
out
test
repz
inc
loope
or
inc
rcl
push
shll
xchg
outsl
or
cs
ret
cmpsl
sti
lds
xchg
cmpsl
repnz
imul
push
mov
fstl
outsl
push
cmpsl
loop
mov
iret
cmpsl
pop
adc
les
mov
mov
sub
cmpsb
insb
xchg
lret
fwait
and
sbb
mov
xchg
call
push
push
cmpsl
orl
int3
call
xchg
arpl
pop
scas
cli
fdivl
cli
jno
ja
mov
push
mov
arpl
orl
rcll
pop
mov
cmpsl
bound
shl
and
mov
sub
xchg
and
rcrl
jo
mov
call
rorl
outsb
in
pop
sti
cmpsl
icebp
stos
mov
mov
fwait
xor
xchg
add
pushf
mov
pop
jg
inc
hlt
xor
cs
cmpsl
fs
shrl
clc
sbb
iret
push
add
rcll
pop
push
arpl
xor
jmp
roll
mov
les
cmpsl
jmp
sbb
and
pop
lret
iret
in
cmpsb
pop
repnz
sar
into
mov
test
mov
ljmp
sub
shrl
xor
mov
mov
or
mov
cmpsl
adc
repnz
out
and
pushf
mov
ja
ret
in
sti
mov
cmp
mov
pop
js
enter
scas
movsb
cmpsl
adc
mov
cmpsl
add
outsl
rcll
cwtl
adc
stos
pop
iret
je
scas
daa
mov
fstps
lret
add
std
leave
ret
aad
shr
addb
setp
je
mov
dec
jle
push
and
and
mov
pop
fisttps
pop
jge
icebp
out
fsqrt
shr
cmpsl
addr16
stc
push
lods
xlat
lea
sub
dec
in
aaa
cmp
and
jo
or
cmpsl
xlat
in
orl
daa
and
add
push
push
rorl
and
pop
cmpsl
jle
inc
cmp
push
int
lahf
xchg
mov
jg
add
xchg
insb
mov
fstpt
mov
mov
data16
adc
repz
dec
or
and
or
and
mov
cli
into
cmc
xor
pop
cmpsl
sub
mov
loope
xchg
out
push
repz
mov
shrb
jbe
dec
imul
stos
mov
xchg
cmpsl
push
add
cmpsl
pop
sbb
enter
mov
ja
cmp
pop
sbb
mov
mov
int
and
data16
inc
aam
mov
in
pop
ficoms
aas
xchg
mov
or
cmp
push
cmpsl
add
inc
xchg
cmp
cmpsl
xor
cwtl
push
das
enter
mov
and
cmpsl
adc
es
in
xchg
imul
mov
imul
mov
xchg
dec
lahf
cmpsl
rorb
sbb
sub
adc
clc
popf
cmp
sub
stos
xchg
pop
mov
push
cmpsb
adc
add
test
adc
jnp
cmpsl
lds
rol
loope
sub
cld
shl
push
inc
adc
data16
imul
addl
or
fcomps
dec
lahf
out
adc
inc
cmp
xor
xor
sub
arpl
repz
test
iret
cmpb
push
mov
add
sub
add
in
mov
push
incb
mov
cmpsl
inc
int3
and
outsl
outsb
loop
xchg
inc
int3
popl
imul
jne
test
xor
jae
cli
xchg
stos
and
cmpsl
mov
out
ja
jne
scas
gs
cmp
cs
aas
cmpsl
repz
xor
mov
cs
mov
addr16
mov
adc
cmp
sub
call
sbb
es
push
adc
cmpsl
adc
fisubs
cmp
sbb
scas
pop
push
fwait
je
cmp
sbb
and
push
inc
call
cmpsl
inc
adc
and
out
pushf
pop
push
xor
test
lds
pop
fstl
out
mov
les
je
fwait
xor
mov
cwtl
sub
xor
dec
add
je
shr
sarl
and
or
push
dec
in
jnp
dec
test
lock
pop
out
inc
rolb
jl
inc
mov
dec
cmpsl
inc
pop
mov
mov
lret
adc
or
icebp
push
mov
sub
mov
jge
cmpsl
call
inc
addl
stc
add
ret
push
ficomps
mov
adc
lds
fwait
add
mov
cmp
popa
adc
iret
mov
cmc
xchg
lods
scas
out
andb
les
cwtl
addr16
and
push
xchg
mov
push
mov
pushl
test
cltd
shll
inc
inc
push
inc
jnp
cmpsl
loopne
adc
add
in
sahf
cmpsl
ljmp
fsubl
or
dec
push
outsb
add
call
mov
dec
push
lahf
sbb
out
cmp
mov
push
out
dec
mov
test
aad
lds
int3
or
ret
lret
lahf
repz
mov
ret
into
sub
and
mov
cld
mov
js
xor
in
cmpsl
or
stos
es
jmp
cmp
negb
mov
mov
aaa
sub
shrl
mov
mov
outsb
sbb
mov
mov
mov
iret
jbe
aas
fnstsw
pop
bound
dec
push
jmp
sbb
xchg
add
insl
leave
dec
jns
cmpsb
je
and
cmp
mov
cmpsl
xchg
xor
mov
lods
mov
movsb
in
out
imul
jnp
cmpsl
jo
nop
pop
ret
ficomps
jb
xor
shrb
jo
es
inc
mov
dec
lret
in
lock
stos
imul
push
or
mov
adc
inc
sub
cmpsl
push
or
jl
and
rclb
xchg
add
lahf
lds
cmc
inc
cmpsl
shlb
out
fldl
insl
rcl
mov
xchg
rorl
dec
scas
push
aad
jge
test
lcall
pop
insl
aad
dec
adc
lods
mov
push
and
call
cmpsl
push
cli
push
add
dec
test
sbb
popa
xor
xchg
xor
dec
ffreep
cmpsb
mov
xor
rorb
in
loopne
add
push
inc
and
cmpsl
xchg
dec
mov
sbb
pop
cmpsl
sub
jmp
jae
mov
pusha
rcl
lods
ret
cmpsb
xor
cmp
fstl
push
mov
jge
clc
cmpsl
out
test
mov
mov
xchg
stos
cmpsb
aas
push
dec
cmpsl
adc
cmpb
in
cmc
popf
mov
inc
sub
sub
ja
loop
scas
and
mov
sub
lods
cmpsl
dec
pop
pop
insl
cmp
int3
mov
pop
out
int
jl
in
shll
dec
cmpsb
sbb
scas
int3
loop
pop
xor
push
cmpsl
aas
adc
cld
mov
mov
aaa
cmpsl
xorl
fwait
cli
cmpsl
mov
sarb
add
cmpsl
aas
pop
lret
fsubrs
cmpsl
iret
into
mov
sub
or
mov
scas
cmpsl
mov
aaa
mov
decb
mov
jbe
xchg
std
xchg
in
push
lock
cmpsl
int
pop
fs
cmp
adc
faddp
aas
and
cs
mov
aad
xor
enter
jns
dec
sbb
cmpsl
sub
fildll
ljmp
aas
add
cmpsl
nop
xor
test
push
outsb
pushf
cmpsl
pushf
es
out
mov
sub
cmp
into
outsl
and
pop
in
aad
dec
cmpsl
add
dec
repnz
cmpsl
scas
inc
pusha
jle
cwtl
jl
mov
jb
cmp
mov
xchg
loop
lods
push
push
cmpsl
test
jb
sub
cmpsl
mull
lods
ljmp
scas
mov
sbb
int3
cmpsl
xchg
je
inc
sub
jns
out
mov
mov
xchg
cmpsl
insl
hlt
inc
ds
ret
cmpsl
stc
pop
out
sbb
repz
sub
iret
sarl
cmpsb
xor
cmpsl
pop
and
shrl
mov
int3
mov
pusha
aaa
cmpsl
rol
jo
jmp
popa
cmpsl
sub
ljmp
xchg
sti
inc
loopne
adc
xor
in
jno
mov
jbe
sub
lahf
in
repz
push
cmp
cmpsl
xor
fs
addr16
lret
aas
cmpsl
mov
sub
sub
and
sbb
jecxz
ss
in
sub
dec
cld
jge
stc
add
sbb
mov
pop
mov
arpl
mov
lcall
xor
mov
pop
aas
push
ret
push
cmp
lret
cmpsl
outsl
mov
pop
push
int3
loop
es
sbb
icebp
cmpsl
jmp
dec
ss
pusha
xchg
mov
je
xchg
or
cmpsl
adc
pop
sbb
cmpsl
rcrb
push
cmp
xor
insl
ljmp
mov
jge
mov
cmpsl
repz
test
loope
push
jle
push
addr16
insl
push
fmulp
sbb
dec
in
inc
pop
mov
dec
arpl
mov
gs
jo
jecxz
fldcw
mov
dec
repz
mov
shrl
push
inc
enter
mov
dec
xor
pop
cwtl
cmpsl
dec
ljmp
cmpsl
pop
mov
loope
push
arpl
and
cmpsb
add
sbb
fs
sub
push
cmpsl
pop
aaa
push
fnsave
movsb
and
out
mov
cli
add
adc
and
mov
inc
inc
push
cmpsl
and
xchg
pop
mov
cmpsl
mov
cld
mov
mov
addb
loopne
inc
cmpsl
pop
mov
jmp
cmpsl
xor
fildll
push
sbb
test
insl
cmpsl
or
je
mov
adc
shll
mov
mov
cmpsl
imul
ja
inc
jno
lods
ljmp
lahf
and
test
adc
adc
lahf
and
jo
sarl
fstps
sub
push
cmpsb
and
cmp
push
jl
shlb
dec
jns
xchg
fwait
lea
fld
test
xchg
xor
push
adc
or
cmpsl
inc
xchg
pusha
mov
cmp
sub
stos
sub
jmp
cmpsl
or
clc
mov
xor
ja
out
in
lahf
cmpsb
mov
xchg
cmc
sub
ret
scas
cmpsl
xchg
and
push
xchg
ficoms
pop
push
and
jae
mov
in
mov
lret
xchg
pop
cmpsb
hlt
pop
and
arpl
sbb
cmpsl
inc
rcr
inc
add
fmul
pop
das
mov
push
sub
filds
jnp
outsb
mov
cmpsl
in
adc
sahf
mov
shl
std
aaa
cmpsl
pop
jle
hlt
sbb
jb
pop
cmpsl
mov
cmc
leave
add
clc
in
pop
ljmp
mov
sub
sub
dec
cmpsb
mov
dec
movsb
inc
mov
sar
ret
movsb
les
sbb
lcall
test
mov
inc
sbb
and
push
lret
lds
es
negl
cli
pop
gs
and
outsl
xchg
daa
cmp
pop
int
cmpsl
cwtl
sbb
fwait
shll
mov
fwait
in
cmpsl
dec
fistpll
and
mov
mov
adc
out
loopne
test
popa
jbe
decb
stos
jb
xchg
repz
mov
push
xor
xchg
fisubs
adc
mov
adc
cmp
cmpsl
jle
inc
leave
xlat
mov
fldcw
mov
or
rcrl
sub
push
out
mov
aam
xlat
and
add
frstor
cmp
xchg
dec
xchg
jae
jge
mov
sti
push
int
mov
jns
cmp
cmpsl
and
pop
out
sub
mov
das
adc
scas
xlat
fwait
cmpsl
fadd
sbbb
mov
xor
in
in
mov
mov
jmp
add
rcrl
in
push
leave
shl
popa
adc
xchg
pcmpgtb
adc
mov
xor
cmpsl
xor
push
add
mov
pop
dec
mov
nop
jmp
xchg
pop
in
call
pop
cmpsb
cmp
jns
push
cmpsl
push
pop
push
out
inc
mov
adc
add
pop
ret
sbb
out
dec
xchg
pop
pop
cmpsl
inc
or
adc
mov
inc
cmpsb
enter
xor
out
xor
jl
jne
inc
aad
pop
stos
mov
cmp
mov
cmc
ljmp
mov
mov
sbb
outsl
lods
cmpsl
je
shll
cmpsl
mov
add
cmp
push
aam
sbb
xchg
inc
nop
out
sub
push
repz
adc
mov
lods
les
mov
mov
jnp
sahf
lock
out
adc
mov
repz
jmp
dec
cmpsl
mov
leave
outsb
xchg
lret
jg
out
lret
lcall
and
cmpsl
push
jg
dec
jb
out
jle
lret
cmpsl
or
aas
inc
cmp
xchg
lret
push
in
sbb
dec
push
stc
cmpsl
aas
das
cmp
cmpsl
pushf
hlt
adc
in
cmpsl
dec
fcomip
mov
shlb
xor
lret
fidivs
jbe
test
pop
add
aad
aam
fldpi
dec
xchg
cmpsl
or
and
aam
rcll
and
aad
aam
jno
pop
cmpsb
cmp
cmpsl
clc
add
xchg
ror
lods
push
mov
xchg
les
scas
aam
stc
mov
mov
cmc
cmpsl
ficomps
mov
adc
sahf
cmpsl
testb
xchg
dec
xchg
iret
cmpsl
sub
mov
jp
std
int3
out
loope
data16
sub
scas
cmpsl
mov
mov
jns
mov
push
lret
cwtl
fimull
and
hlt
cmpsl
pop
pop
pop
pop
inc
jg
in
stc
add
fnstsw
mov
lods
sub
test
xorl
adcb
in
cmpsb
mov
cmp
in
roll
das
xor
cmpsb
sub
xor
fwait
mov
insb
scas
jb
dec
lods
mov
inc
js
cmpsl
std
pop
jge
add
or
cltd
add
stos
arpl
lret
pop
sub
cmpsl
je
xchg
jne
inc
dec
scas
movsb
fstpt
aam
data16
repz
mov
or
add
imul
outsb
or
dec
mov
out
mov
push
inc
inc
imul
out
add
xor
gs
pop
sub
test
add
pop
cmpsl
push
push
dec
pop
mov
jns
sub
cmpsl
cmp
test
cmpsl
add
jns
mov
arpl
cmpsl
ds
cmpsl
int3
mov
jo
ss
cmpsl
sbb
lret
dec
dec
out
xchg
loope
jp
dec
adc
repz
push
fbld
std
jg
rcl
dec
in
mulb
mov
cmpl
xchg
popf
mov
xchg
cmpsl
aad
fdivrs
ror
rcrl
popf
cmp
cwtl
inc
adc
shll
jnp
xor
xchg
jg
xorl
cmpsl
jge
xor
mov
xor
cmpsl
sti
pushf
sbb
mov
xor
and
mov
jns
cmc
cmp
pop
int3
dec
imul
mov
cmpsl
repz
hlt
lahf
jecxz
movsb
out
xchg
xor
pop
and
sbbb
pop
cmpsl
scas
call
inc
sub
mov
fisttpl
out
arpl
or
sub
pop
rcll
shlb
add
mulb
pop
sub
scas
xchg
ja
outsl
mov
fsubrl
sysret
and
movsb
push
call
lcall
inc
mov
mov
pop
fwait
sub
fsubs
cmpsb
pop
xchg
mov
mov
lret
out
cmpsb
pushf
push
jnp
cmpsl
dec
dec
xchg
mov
ss
mov
jmp
mov
mov
xor
cmp
mov
push
sub
mov
cmp
arpl
xchg
es
pop
ret
pop
xor
xor
cmpsb
mov
iret
ja
xor
pop
xor
test
sub
xchg
xor
jno
cmpsl
mov
push
cmp
icebp
pop
push
fdivp
cmpsl
in
dec
adc
or
push
and
inc
arpl
loop
nop
cmpsl
xchg
mov
adc
mov
loope
cmpsb
or
push
sti
mov
jmp
in
fwait
sub
jmp
mov
sbb
outsl
ja
cmpsl
push
test
pop
icebp
xchg
clc
mov
mov
mov
jno
mov
jl
cmpsl
fcompl
aam
cmpsl
pushl
push
xchg
mov
sub
cmpsl
int
and
call
cmc
xchg
push
mov
cmpsl
mov
insb
cwtl
cmpsl
xor
insl
jno
pop
test
xor
mov
cmpsl
popa
bound
lds
mov
cmpsl
sbb
push
shl
xchg
mov
mov
dec
jb
cmpsl
pushf
sub
pusha
sarb
cmp
and
loope
inc
mov
test
xchg
js
pushf
pop
cmpsl
push
mov
lods
sbb
mov
js
mov
jecxz
loop
cli
notl
mov
mov
sti
pop
ss
vshufpd
sbb
mov
cmpsl
daa
xchg
jecxz
cmp
add
fs
in
clc
mov
fisubl
and
push
and
fistpl
lods
sbb
rcr
mov
push
outsb
mov
lret
sbb
xchg
mov
scas
stos
pop
daa
cmpsl
push
xor
sbb
insl
mov
cmp
nop
push
test
mov
fdivr
in
inc
fstl
cmc
or
jmp
stos
icebp
dec
orl
dec
ljmp
and
into
mov
imul
cld
xor
mov
cmp
mov
sbb
int3
sbb
movsb
pop
lret
cmc
xchg
mov
cmpsl
mov
inc
cmpsl
out
loopne
xor
outsl
or
inc
xchg
mov
jp
xor
xlat
mov
les
cmpsl
iret
out
test
xor
mov
adc
add
sahf
mov
nop
jnp
scas
cmpsl
xor
out
ljmp
or
pop
popf
vmovaps
fwait
lret
mov
pushf
cmpsl
aaa
orb
cmpsl
loop
jo
xchg
cmpl
fs
cli
int3
pop
mov
mov
inc
outsb
es
ja
test
add
popa
and
dec
fimuls
push
push
js
stos
lds
cmp
aas
cmpsl
and
je
outsl
jp
lret
add
in
fistps
int3
das
sbb
cmp
dec
cmpsl
xorl
inc
in
lods
jl
cmpsl
pop
sbb
ja
stos
loop
jge
adc
xchg
adc
pop
mov
sub
and
cmpsb
ret
jg
push
xchg
int3
leave
arpl
and
hlt
cmpsl
add
imul
out
jecxz
mov
test
adc
sti
jae
cmpsl
xchg
scas
leave
movsb
call
xchg
mov
and
movsb
cmpsl
fbld
hlt
aas
shrl
dec
or
out
lds
out
test
es
add
arpl
in
jnp
shrl
je
jl
stos
insb
popf
dec
and
jnp
data16
adc
mov
cmpsl
add
mov
repz
popf
aam
jge
mov
stos
cmpsl
sub
push
dec
cmpsl
lcall
inc
cmpsl
std
mov
lds
cmpsl
test
dec
jb
cmp
sbb
lret
add
inc
mov
lahf
lods
stos
push
insl
lcall
shlb
shrb
cmpsl
or
xchg
out
ja
out
lea
fsts
cmpsl
ljmp
xor
cmpsl
xor
scas
popf
push
dec
jmp
filds
or
xor
xor
jmp
and
push
mov
pushf
cld
sbb
inc
pop
repz
cmpsl
test
fst
das
insl
add
sarl
sub
enter
adc
inc
mov
loopne
test
insb
imul
xchg
pop
sbb
and
cmpsl
add
cmp
cmpsl
and
sub
mov
out
dec
scas
and
cmpsl
das
sbb
sbb
xor
fisubl
ss
jp
sub
roll
mov
cmpsl
and
pushf
mov
mov
sub
std
or
pop
cmpsb
fsubrl
adc
outsb
mov
push
jno
add
cmc
std
lods
jbe
scas
mov
push
push
and
cmpsl
popf
fucomip
loope
aam
cmpsl
fwait
out
pop
icebp
adc
mov
xlat
es
js
lods
std
mov
sub
sbb
movsl
inc
movsb
dec
cmpsl
sbb
mov
insl
out
jo
fnstcw
pop
dec
in
movsb
pop
out
ret
out
shl
lret
push
pop
mov
cmpsl
pop
push
aas
or
nop
mov
lea
cmc
fistl
cmpsl
pop
pop
sbb
cmpsl
dec
adc
loop
icebp
add
pop
rorb
adc
arpl
pop
subb
shrl
nop
xchg
clc
cmpsl
fnstenv
lahf
cmpsb
and
mov
or
shll
out
shlb
push
sub
daa
cmpsl
or
idiv
into
push
loope
adc
cmpsl
jle
xor
pop
stos
cmpsl
andl
div
int3
dec
lcall
cmpsl
inc
pop
out
cmp
ja
mov
aas
push
pop
jl
sbb
lock
pushf
lds
cmpsl
jg
or
stc
les
cmp
and
arpl
xor
sahf
or
cmp
js
mul
mov
xor
repnz
orl
loope
adc
lcall
in
mov
add
xor
xor
cmpsl
push
adc
insl
outsl
sahf
fs
cmovle
mov
js
sbb
pop
popa
cmp
push
mov
lock
xor
xor
enter
cld
adc
inc
int
jno
cmpsl
inc
cmp
roll
jmp
add
push
lahf
cmpsl
icebp
jb
testl
xchg
adc
insl
stc
xor
cmp
or
sbb
mov
scas
rorl
out
ret
lods
add
mov
jg
adc
data16
in
sub
clc
or
inc
sub
cmpsl
pop
insl
jno
push
je
ret
sub
xlat
cmp
test
mov
rorl
cs
mov
xor
int3
jne
push
lods
cmpsb
mov
cmpsl
xor
mov
repz
lds
xor
rcll
test
mov
jns
jl
lds
cmp
divl
clc
ret
mov
out
hlt
test
xchg
lcall
daa
int3
fs
lods
cmpsb
clc
dec
cmp
cmpsl
insl
sub
pop
xchg
push
scas
lods
mov
in
test
cmpsl
pop
xor
adc
xchg
mov
fnstenv
hlt
call
add
jmp
mov
dec
mov
adcb
clc
push
jg
sti
cmc
mov
int3
enter
movsl
cmp
push
in
xchg
and
and
mov
std
sbb
cmpsl
shrl
cmpl
pop
push
or
movsb
cmpsl
ret
out
sub
lret
cmpsl
sti
outsl
je
xor
pushf
jp
mov
adc
cmpsl
negl
dec
test
pop
push
mov
aas
mov
jns
ret
or
cmp
sub
cmc
stos
and
mov
insl
push
cmp
and
popa
xchg
icebp
mov
cmpsl
mov
outsb
inc
outsb
shlb
mov
ljmp
pop
pop
loop
adc
xchg
mov
sbb
or
mov
xchg
ret
jp
inc
clc
movsb
lods
insb
cmpsl
inc
push
ljmp
cmpsl
lock
jecxz
es
and
xor
jns
stos
frstor
adc
test
adc
cmp
push
lret
mov
push
mov
pusha
fisttpll
pop
iret
cmpsl
xor
xor
cmpsl
imul
push
bound
lahf
in
das
cmpsl
adc
xchg
fmul
inc
sub
and
lds
in
pop
adc
cmp
ja
in
cmpsl
cmp
fidivl
push
adc
sbb
mov
and
push
and
test
outsl
or
push
pop
shlb
lret
ja
nop
in
add
and
leave
cmp
fsubl
sub
or
xor
push
arpl
add
js
mov
ja
push
mov
test
mov
adc
cmpsl
or
jns
and
push
cmp
lcall
or
jbe
fildl
and
and
cmc
push
cmpsl
inc
leave
add
nop
inc
in
add
and
sbb
push
cmpsl
or
hlt
repnz
mov
xchg
ljmp
mov
sahf
mov
cmpsl
pop
push
xor
xchg
adc
push
std
insl
cmpsb
cmp
stc
pop
jl
xchg
adc
adc
add
pusha
cmpsl
and
jbe
in
sub
mov
jnp
fwait
and
xchg
lods
into
sub
fisubrl
adc
loope
cmpsl
dec
or
mov
push
push
mov
xor
cmpsl
cld
xor
mov
loope
xor
cmpsl
clc
mov
cmp
mov
rcrl
add
adc
mov
cmpsl
lds
mov
mov
mov
mov
cmpsl
mov
out
mov
bound
jnp
jo
shll
push
fcoms
lea
sub
cmpsl
fidivl
insl
lret
ret
add
push
sub
in
adc
mov
push
shrb
cli
jmp
inc
pop
sub
bound
roll
cmpsl
sub
and
cmpsl
lods
xlat
test
xchg
cmpsl
popf
dec
lahf
jb
xchg
cmpsl
pop
jg
insl
xchg
push
mov
sbb
stos
andb
mov
push
data16
pop
popf
cmpsl
or
fs
xor
clc
push
xor
cmpsl
add
and
das
add
shr
popf
test
je
inc
sbb
cmpsl
mov
mov
cmp
cmp
testl
xchg
cmpsl
rclb
ficompl
mov
dec
aas
lcall
iret
in
cmpsl
leave
dec
pop
aam
icebp
mov
rcrb
pop
mov
in
insl
sub
int
cmpsl
pop
mov
mov
cmpsl
lods
arpl
xchg
inc
pop
das
cmpsl
mov
pushf
cmp
outsl
adc
inc
sbbl
test
cmpsl
add
clc
sbb
enter
nop
cmpsl
into
and
cmpsl
inc
and
sub
fwait
int3
mov
and
sub
das
addr16
cmpsl
or
test
pop
into
shll
and
jae
mov
sub
mov
dec
test
addps
mov
cmpsl
and
jb
jle
push
mov
cmp
lret
pushl
in
pop
loope
aaa
addl
xor
fcoms
cmpsl
jg
gs
xchg
sti
mov
imul
lret
sub
lret
dec
out
shl
mov
outsl
sahf
lods
scas
push
sahf
sub
mov
aaa
sbb
mov
xor
repz
int
pop
mov
xchg
sarb
cmpsl
push
sbb
shrl
mov
test
test
xchg
ja
out
lret
rcrb
jno
inc
scas
mov
aam
loop
and
data16
movsl
dec
sbb
mov
mov
loopne
pop
ffreep
out
cmp
mov
loopne
out
out
shl
mov
shlb
push
cmp
cmpsb
cmp
jno
pop
mov
mov
ret
mov
mov
aaa
mov
ret
in
rcrb
mov
xor
xchg
xor
inc
xchg
xchg
fs
adc
xchg
bound
push
mov
pushl
pushf
add
pop
andl
lods
arpl
xchg
in
xchg
iretw
and
ss
lock
stos
sbb
sarl
mov
push
dec
add
xchg
mov
pop
mov
call
rcrl
cmpsb
jo
add
sub
daa
test
mov
cmpb
add
sarl
pop
outsl
sub
ret
mov
push
cmpsb
movsl
in
data16
and
mov
pop
sahf
cmp
dec
jns
ret
mov
mov
mov
jp
jl
ds
movsl
out
mov
xchg
fisubrl
movsb
enter
mov
xchg
jmp
mov
xor
leave
mov
dec
inc
sarb
xor
push
add
mov
loopne
mov
jns
pop
das
insb
and
gs
rcl
xor
loop
xor
and
out
ret
test
pop
lock
into
inc
mov
or
push
or
or
ret
add
sbb
std
movb
push
jl
mov
negb
jne
cmp
js
lcall
mov
dec
loopne
test
adc
outsb
inc
push
cld
jb
fnstcw
mov
mov
mov
mov
mov
mov
mov
mov
es
push
cmp
ja
sub
mov
and
decb
adc
cmp
cs
or
and
out
lret
add
mov
xchg
lret
jl
adc
andl
nop
mov
mov
mov
mov
aaa
mov
bound
add
testb
add
xor
aas
jg
cmpsl
push
das
fs
xor
sub
jp
mov
insl
stos
mov
in
fdivl
call
sub
andb
adc
add
mov
into
in
xchg
cld
rclb
add
call
add
add
mov
dec
mov
inc
cwtl
sahf
aaa
stos
sarl
es
mov
mov
dec
imul
jl
pop
movsl
rolb
or
add
inc
add
loopne
hlt
push
mov
push
mov
clc
ret
add
fs
dec
mov
mov
dec
insl
rolb
adc
mov
sub
into
shlb
mov
pop
mov
mov
insl
pushf
fidivs
ret
into
int3
fsubrl
sub
inc
cmp
mov
xchg
dec
fmulp
gs
jmp
xchg
cwtl
pusha
xchg
out
lret
mov
adc
pushf
mov
sbb
stc
inc
sbb
jb
ret
xor
dec
sub
loopne
loop
and
in
cmpsl
xorb
fbld
pop
aas
fsubs
pusha
xchg
and
mov
sub
lock
cli
cld
cltd
and
sbb
xor
inc
cmp
push
and
rcll
test
jp
xor
sbb
iret
les
loope
cwtl
jno
iret
add
cwtl
jno
iret
and
cwtl
jno
iret
inc
inc
cwtl
jno
iret
bound
cmp
ss
mov
push
jbe
ss
clc
pop
js
add
loopne
mov
and
pushf
mov
pop
mov
mov
mov
fiadds
jae
pop
rolb
popa
out
fadds
pop
rcrb
cmp
jbe
imul
jae
inc
jno
push
jg
ja
xchg
cmpl
mov
sub
or
xchg
cmc
je
sbb
or
mov
push
subl
loopne
les
push
dec
fimuls
fisubrl
sub
cmp
stos
incl
mov
jnp
data16
int3
cmpsl
sub
sbb
repz
xchg
cmpsl
and
add
mov
xchg
pop
jno
mov
cmpsl
outsl
xchg
xchg
int3
sub
or
sahf
leave
dec
arpl
lahf
iret
sbb
dec
fisttpl
push
or
mov
mov
xchg
clc
cmpsb
push
cmp
sahf
cmpsl
xchg
popa
int
pop
or
ret
cmpsl
das
shr
jno
fdivl
cmpsl
xor
adc
xchg
cmp
xchg
mov
xchg
jg
cli
mov
mov
aam
and
adc
and
mov
mov
push
dec
mov
lret
imul
xchg
lret
cmpsl
pop
popa
mov
pop
jle
jmp
mov
bound
in
es
cmpb
push
dec
cmp
cmpsl
xchg
hlt
mov
pop
repz
mov
xchg
or
aaa
test
repnz
repnz
mov
nop
jne
outsl
or
aaa
push
xlat
ss
xor
scas
cmpsl
lods
xchg
ljmp
imul
loope
adc
cmpsl
std
fs
lods
jo
push
je
push
aaa
or
pushw
or
mov
jge
xor
and
sarl
mov
xchg
xchg
orl
nop
rcr
pop
insl
or
mov
dec
xorb
cmpsl
jl
dec
and
jmp
jb
fmuls
adc
movsb
iret
ror
es
dec
subb
cmpsl
inc
inc
daa
cmp
inc
loop
add
lock
mov
lods
ljmp
loop
ds
mov
sbb
xchg
add
or
rcrl
xchg
aam
mov
push
adc
loopne
lahf
testb
fists
jmp
and
movsb
mov
push
inc
fcmovbe
and
push
xchg
push
add
fisttps
loop
mov
call
mov
jge
xchg
cli
loopne
ret
mov
xchg
idivb
aad
out
and
pop
pop
adc
jae
sbb
dec
mov
adc
add
cmp
push
adc
inc
lods
add
add
stos
mov
sahf
cmp
inc
cmp
cmpsl
shrw
sbb
jl
mov
inc
int
lret
inc
mov
adc
mov
dec
and
fwait
mov
or
lret
or
pop
outsb
hlt
or
fcmovb
insl
or
dec
mov
add
sbb
mov
addl
inc
test
add
out
scas
ret
std
adc
adc
dec
xorb
out
add
ret
and
addr16
jg
cmpsb
cmpsb
in
sub
inc
das
adc
inc
jge
ljmp
mov
add
mov
add
rol
ja
dec
pop
push
shll
loopne
je
pushf
daa
movsl
sbb
and
cmp
ret
ds
int3
cltd
adcb
lods
adc
jo
movsl
adc
repnz
jbe
stos
inc
lods
sbb
mov
mov
xorb
and
js
andl
out
inc
cwtl
cmp
in
push
cmp
outsl
push
cmp
aas
pushf
mov
mov
mov
and
inc
in
lahf
stos
mov
xchg
gs
sahf
or
notb
jle
shrb
loope
outsl
fisubl
sub
clc
ds
ljmp
cmp
xchg
xor
lret
adc
mov
loop
arpl
mov
shrb
pop
iret
mov
jne
mov
sub
add
arpl
xor
ret
sbb
icebp
pop
lcall
in
mov
mov
stos
call
leave
lcall
shl
inc
andl
shlb
cld
pushf
out
dec
lcall
or
pop
mov
movsb
mov
xchg
sahf
adc
cmp
xor
es
cmp
outsb
repnz
ffreep
sti
push
inc
mov
sbb
rcl
adc
cmc
sarb
cmp
adc
mov
mov
divb
aaa
push
inc
aam
js
and
push
cmp
cmp
lea
add
shr
jns
fistpll
insb
dec
adc
mov
cmp
xor
sub
int
mov
test
shl
test
hlt
ja
xchg
inc
mov
push
push
mov
xchg
ds
mov
ss
out
add
icebp
gs
out
inc
sub
add
cs
sub
add
dec
and
adc
mov
mov
ret
or
adc
lds
push
mov
test
sar
mov
repnz
mov
jbe
out
mov
sbb
call
mov
pop
rcll
adc
fistpll
xchg
cmp
mov
in
pusha
roll
dec
loopne
rcrb
and
dec
es
stc
adc
mov
into
inc
rcrb
lds
mov
push
jno
cmpsb
inc
leave
scas
and
cmc
jo
scas
inc
jmp
lahf
dec
movsl
fbld
addb
sti
adc
sub
into
sub
shll
xchg
inc
xor
sarb
pop
add
xchg
mov
in
cmpl
std
push
arpl
adc
es
add
push
pop
inc
mov
ja
cmpsb
cmp
and
sbb
cmpsb
mov
in
fbstp
ror
mov
xor
sub
dec
dec
ret
cmp
xchg
scas
js
cmp
subl
and
add
cmp
ja
lahf
adcl
xchg
ja
cmp
push
mov
add
and
dec
es
inc
jmp
cmpsb
mov
cmpsl
outsb
mov
fsubs
cmp
fdivrp
mov
and
jle
test
insl
sub
hlt
rorb
xchg
jno
push
mov
xor
imul
dec
out
or
lret
les
out
cli
lds
fisubrs
pop
ficomps
into
cmp
sbb
ficoms
call
mov
repnz
rorb
rolb
inc
test
fnsave
adc
into
lock
pop
iret
cmp
cmp
add
lds
dec
cs
out
cli
push
lds
sub
hlt
mov
gs
shll
push
pop
mov
popa
xchg
hlt
mov
mov
xchg
fbld
jle
mov
ss
mov
add
jbe
ficompl
je
fdiv
imulb
or
cwtl
and
lock
movsl
mov
mov
ret
enter
fs
add
jle
mov
ss
clc
add
jl
jbe
nop
loopne
mov
inc
aad
dec
inc
out
sarb
mov
jo
fists
cwtl
push
repnz
push
inc
lcall
mov
adc
cli
adc
add
or
movsl
lds
movsl
add
jle
mov
ds
mov
mov
shl
or
pop
jne
mov
scas
cs
mov
cltd
mov
lcall
fisubrl
ss
out
xchg
dec
loop
int
lret
scas
idivb
out
subl
and
pop
imul
fs
cs
fnstcw
adc
es
in
dec
xor
push
fnsave
ljmp
std
lret
out
popa
cs
add
mov
daa
fs
or
cs
in
repz
pusha
mov
loop
xchg
cwtl
nopl
rorb
pop
sahf
fisubs
push
cmp
lcall
jle
and
call
mov
mov
out
push
lret
nop
stos
insl
jo
xor
push
outsb
popf
lods
ret
jb
push
inc
out
repnz
mov
push
fdivr
das
mov
loopne
xor
test
shrl
ja
lods
mov
jmp
test
sbb
movsb
outsl
sbb
jno
xchg
xor
aad
jne
push
test
sahf
pop
insl
sbb
push
repz
fldl
or
hlt
adc
cmpsb
int
mov
cli
adc
pop
call
dec
fists
mov
mov
movb
dec
dec
cmc
mov
xchg
not
xchg
ja
movsl
xlat
inc
xor
sub
xchg
cmp
inc
mov
mov
mov
fwait
aam
repz
sbb
pop
push
cmp
inc
test
cmc
into
mov
fsubrl
fcoms
scas
fwait
mov
xlat
push
cs
out
gs
push
subps
push
rcr
aaa
dec
fisubrl
add
cmp
cmpsb
stc
xor
out
mov
in
dec
es
hlt
arpl
gs
mov
imul
lock
cmp
adc
outsb
jnp
nop
lahf
pop
mov
push
out
cli
repz
add
repnz
gs
xor
shrb
push
inc
push
pop
in
and
and
cltd
adc
or
in
aam
scas
sub
cmpsb
mov
loop
lods
jg
sub
mov
sar
xchg
enter
sbb
jecxz
fisubrl
mov
jb
jb
popa
dec
testb
ret
jbe
mov
mov
jbe
cmp
or
fldl
mov
es
dec
fwait
or
aad
mov
mov
xlat
out
cmp
ret
cltd
ret
ret
lods
int
lahf
adcl
jo
test
bound
adc
test
dec
mov
push
fisubs
rcll
and
loope
fxch
xchg
lret
jg
and
or
cmpl
and
mov
mov
std
mov
popa
inc
mov
mov
mov
jns
aad
shrb
inc
dec
repnz
movsb
cmpsb
ss
stos
out
inc
clc
add
jbe
ds
std
push
add
mov
mov
jbe
cmp
push
rcrb
sbb
sub
fbstp
dec
sti
fidivrl
or
enter
out
aaa
jge
inc
push
aaa
jg
push
movsl
cli
lahf
lret
mov
xchg
mov
dec
loop
and
xchg
push
cmp
cltd
lahf
rcll
outsb
and
push
inc
adc
pop
cs
sahf
cwtl
pop
ljmp
push
lock
ljmp
or
fimuls
ljmp
inc
fdivs
or
add
outsb
or
push
cmp
mov
dec
cli
push
push
lock
push
xchg
jne
pop
or
add
popa
jle
cmp
xchg
test
xor
out
jl
mov
lods
in
hlt
call
jb
sbb
jle
jne
nop
loop
lds
aad
loop
mov
loopne
push
add
outsl
pushf
cltd
jecxz
shl
fadds
mov
out
push
push
std
in
or
inc
aam
push
add
xchg
cs
lahf
jge
inc
mov
mov
orl
sarb
mov
mov
fstl
sbb
lock
mov
sahf
pop
out
std
jae
xchg
imul
ss
mov
mov
dec
inc
cmp
mov
dec
mov
xor
lods
add
loope
stc
pop
repz
mov
adc
or
sahf
push
icebp
arpl
and
je
dec
ficoms
cs
movsb
in
fmuls
adc
mov
ljmp
dec
ja
pop
movb
push
or
mov
inc
cmpsb
std
mov
rcl
mov
cmp
adc
add
push
adc
xchg
sub
adc
loop
or
fidivrl
std
into
sbb
sub
fiadds
nop
pop
cs
in
lret
imul
pushf
and
hlt
es
ret
jb
sbb
add
nop
testb
ds
loopne
clc
fistpl
hlt
in
push
js
repnz
in
in
or
jno
test
push
divb
xchg
adc
shrl
testb
fists
and
jbe
scas
js
push
lcall
popa
jno
or
or
inc
shl
or
and
adc
outsb
adc
ljmp
or
idivb
push
jmp
cmp
cmpsb
idivb
data16
fisubrl
cmp
enter
jl
or
xor
filds
lret
cs
xchg
popa
xor
lds
cmp
das
rorl
rorl
leave
ret
lea
xchg
cmpsl
mov
enter
outsb
adc
and
addl
addr16
ja
cmp
je
sub
ret
cli
movsb
js
cld
bnd
jl
push
sti
jbe
add
adc
dec
cmp
divb
ret
mov
pop
pop
pop
stos
add
dec
inc
loop
xchg
shl
mov
js
loopne
or
scas
xchg
outsb
rcl
jle
and
imul
xor
jl
or
dec
sbb
pushf
ret
add
subl
enter
xchg
out
cmp
xor
or
dec
les
lds
popa
ret
ret
cmp
push
mov
fdivrl
mov
lock
mov
push
jl
mov
sub
jle
rcrb
mov
in
cmp
pusha
mov
call
daa
shr
mov
or
add
in
mov
mov
add
add
lret
je
adc
hlt
or
int
mov
sbb
outsb
or
mov
jne
roll
mov
mov
mov
or
out
add
push
mov
clc
mov
ret
outsl
inc
ret
test
vpmaxsw
push
push
jnp
int3
rcr
shl
ljmp
mulb
rcl
add
cmp
pop
js
cmc
adc
mov
mov
push
cmp
pop
mov
cmp
cmc
hlt
mov
push
or
es
mov
push
out
jg
sub
adc
jbe
gs
scas
test
jmp
inc
push
loop
dec
push
ds
add
sarb
lods
loop
int3
push
out
dec
jp
mov
inc
jbe
fisttpll
inc
xchg
sbb
and
loop
cwtl
in
js
dec
dec
dec
and
fisttpll
clc
shl
arpl
cmc
adcb
repz
testb
inc
mov
inc
jle
sbb
push
dec
dec
pop
in
imul
iret
test
push
rolb
cs
dec
fnstcw
shlb
adc
aaa
dec
pop
mov
inc
outsb
mov
bound
or
aam
push
push
in
add
cmc
xchg
push
cwtl
jg
dec
je
js
aam
enter
cmp
enter
out
mov
mov
jo
into
call
mov
mov
aad
cmp
mov
inc
mov
out
jo
outsl
xchg
push
mov
divl
push
and
mov
push
cmpb
ss
mov
stc
loopne
jo
out
mov
add
push
xor
call
cmp
fsubr
cmp
add
mov
fsubrp
pop
fneni(8087
mov
cltd
pop
leave
and
xchg
fimull
mov
push
adc
cmp
inc
mov
std
shll
jg
sti
fwait
pop
jb
ret
xchg
mov
pop
adc
inc
stos
cwtl
lahf
and
sahf
scas
mov
jp
testb
int3
ret
lea
leave
out
adc
shlb
push
out
out
popa
in
sbb
mov
lea
inc
cli
gs
fwait
inc
outsb
inc
ss
dec
jecxz
or
inc
sahf
mov
fdivl
jbe
aad
ret
scas
pop
stc
scas
shlb
test
ss
lock
cld
into
hlt
lahf
imul
jnp
ja
ss
xchg
mov
hlt
and
out
ljmp
insl
jecxz
decb
std
ds
xchg
xlat
and
xchg
lcall
jg
test
das
push
loope
lcall
ficoml
sbb
ljmp
push
inc
cmp
xchg
sub
ficomps
out
mov
jg
lcall
out
push
sar
ds
mov
call
repz
cli
jae
and
or
push
inc
jmp
and
cmc
mov
ss
lret
mov
push
cmp
push
xchg
sbb
in
mov
and
push
pop
or
add
bound
jae
dec
add
mov
mov
sbbb
aam
push
ljmp
ljmp
adc
xchg
cmc
scas
es
aad
imul
lods
clc
in
push
andb
es
mov
in
scas
scas
call
jecxz
into
cmp
jmp
notb
cmpsb
cld
dec
dec
idivb
outsb
mov
push
out
fwait
outsl
push
jae
push
aam
push
dec
push
sub
scas
ret
fiaddl
imul
mov
xor
adc
jle
xor
mov
scas
mov
xchg
dec
jno
imul
test
sub
lcall
xchg
pop
in
dec
add
pop
adc
divb
sbb
jbe
push
pop
cld
hlt
loopne
shl
fdivrp
jmp
adc
lock
stc
push
inc
gs
popa
mov
scas
jl
fidivl
cli
cltd
xor
fdivp
jle
jmp
fldl
shlb
inc
lock
inc
fs
out
je
add
jl
lock
loopne
movsb
dec
loopne
xor
arpl
lock
movsb
shlb
pop
inc
popf
fmuls
pop
js
movb
test
inc
pop
push
mov
in
cld
mov
mov
adc
nop
push
hlt
mov
mov
ds
jmp
and
jle
enter
or
fistl
jecxz
jae
xor
jge
leave
ss
pop
pop
mov
cli
aam
shll
jbe
dec
iret
cwtl
pop
push
rcr
es
add
data16
out
scas
mov
in
adc
cmp
sbb
ds
andb
and
jecxz
es
jmp
aad
ret
xchg
sahf
pop
mov
in
jecxz
and
sbb
cmpsb
or
imul
xlat
mov
mov
push
ljmp
dec
shr
mov
pop
and
xchg
lcall
xchg
cmp
fsubl
fisubs
rcrb
insb
jle
push
xor
gs
mov
jg
outsb
rclb
hlt
aam
cmc
loope
pop
push
pop
sahf
fimuls
add
hlt
adc
cmp
js
pop
or
or
cmc
fcompl
gs
ljmp
pop
cmp
cmpsb
ljmp
sub
ds
inc
out
cmp
mov
cmp
xor
inc
xchg
loopne
scas
adc
or
loop
add
cmp
loopne
lods
xchg
ja
mov
ss
hlt
and
pop
nop
ljmp
mov
and
lret
or
ljmp
sbb
clc
xchg
mov
arpl
cmc
push
push
loopne
fcmovne
add
hlt
push
mov
and
sbb
jae
jo
cs
jo
xchg
fldt
push
push
and
std
outsl
gs
adc
call
ljmp
mov
dec
dec
sbb
or
ss
cmpsb
es
enter
lock
nop
push
xchg
stos
dec
movsl
daa
mov
push
mov
xor
out
jbe
add
add
sbb
outsb
shlb
mov
pop
mov
shll
push
mov
rcr
divl
fmul
js
ljmp
in
sub
xchg
cmp
or
out
inc
inc
inc
int
ret
or
xchg
fsubp
sarl
mov
fidivs
or
sbb
or
lcall
xchg
rorb
jg
mov
fistpl
mov
in
insl
cmpsb
aaa
lds
jmp
movsb
push
mov
rclb
adcl
jb
xlat
aaa
xchg
push
loop
arpl
sub
dec
mov
fmull
test
sbb
or
mov
cmp
out
stc
push
fidivl
insl
jno
pusha
xor
mov
loopne
in
sarl
cmp
inc
adc
bound
lret
xchg
adc
lret
rcrb
out
xchg
cmp
sahf
rorl
out
das
jns
fcmovbe
bound
mov
lahf
loopne
jbe
jg
adc
lret
cmp
sbb
cmp
scas
ja
pop
cmp
mov
xor
and
mov
fsts
jb
mov
jno
scas
fsts
loop
negb
inc
fdivl
int3
or
loope
adc
mov
mov
addr16
jb
aad
lret
dec
outsb
test
push
pop
add
or
mov
outsb
jg
inc
jg
mov
scas
inc
xor
push
cltd
aad
out
mov
push
xchg
xor
mov
cmpsb
leave
loopne
sub
jae
add
sub
ret
and
lods
jecxz
ja
and
mov
xchg
addl
out
rorb
pop
ja
jbe
ljmp
imul
ret
stos
jp
imul
inc
icebp
push
hlt
es
testl
int
out
cmpl
sub
pop
xchg
call
mov
js
push
lea
out
mov
push
mov
sub
add
xorb
dec
pop
divl
mov
aam
mov
xor
inc
mov
notl
call
jno
into
mov
or
ss
bound
jl
and
int
xchg
sbb
jle
into
mov
xchg
das
inc
movsl
pusha
insl
mov
xchg
xchg
ds
push
pusha
xchg
arpl
lds
jmp
aam
xor
clc
mov
xchg
xchg
jle
jle
lods
xchg
xchg
insb
testl
xacquire
out
push
mov
cmp
lcall
lods
lret
inc
dec
addr16
sahf
push
out
test
push
icebp
or
dec
fisttps
pop
cld
sub
ljmp
and
inc
add
loope
pop
fimuls
dec
xchg
inc
gs
inc
mov
cmp
divb
fdivl
jg
enter
loopne
cmp
push
in
push
test
mov
out
out
int
lcall
popa
xor
inc
fcompl
loope
push
cmovge
xchg
cmp
rolb
and
adc
mov
shl
adc
lret
mov
xchg
imull
mov
mov
testb
xor
mov
stos
out
add
or
inc
xchg
fsubr
add
inc
test
int
sbb
into
fisttpll
mov
jecxz
jb
jnp
dec
fstps
cli
andl
mov
int3
sbb
mov
push
testb
movsl
dec
je
sti
xchg
mov
out
sub
in
jle
scas
in
cld
fnsave
fs
pushf
or
mov
push
ss
ljmp
mov
std
dec
mov
out
stos
test
mov
sub
adc
fsts
fs
xor
cmp
lahf
or
xchg
mov
or
repnz
add
mov
push
inc
gs
or
loopne
loop
xchg
ds
pop
and
sarb
out
pusha
push
fidivrs
sbb
into
imul
fbstp
and
pop
jb
jnp
push
fbstp
das
or
js
and
add
push
cli
cmc
iret
int
aam
push
int
rorb
fisubrs
push
js
pop
ds
inc
add
mov
jo
push
daa
stos
loop
scas
push
mov
adc
pop
fsubs
mov
cmpsl
pop
cmp
push
call
ljmp
ljmp
cmp
sub
ds
mov
loop
dec
push
out
frstors
xchg
mov
push
sbb
orb
out
mov
std
cltd
xlat
adc
lcall
xor
add
mov
into
mov
pop
aaa
sub
movsb
data16
je
jge
ja
push
add
enter
push
es
fmul
inc
ds
lcall
or
and
jns
nop
hlt
enter
mov
add
fdivl
add
fsubrl
inc
push
sbb
fistpl
push
jg
xchg
mov
scas
mov
loope
insl
mov
rorb
cli
in
outsb
cmc
arpl
add
stos
movsb
ret
or
xor
popl
push
and
push
adc
ret
sbb
mov
sbb
js
jle
or
scas
nop
push
movsl
mov
mov
or
or
pop
mov
push
mov
mov
dec
xchg
imul
cmpsb
adc
pop
test
fdivp
mov
sub
cs
xor
fcomp
sbb
mov
xchg
lds
jp
jecxz
pop
jp
aad
inc
in
daa
xor
mov
mov
into
lock
in
bnd
mov
out
jbe
outsl
sti
int3
push
in
and
xchg
in
sbb
test
scas
mov
in
sub
adcl
popf
push
xchg
sti
push
add
xor
es
mov
sahf
xchg
out
pop
ss
sti
lock
xchg
clc
js
es
inc
bound
fdivr
orl
fsubs
sbb
mov
xchg
fists
push
in
mov
ss
jns
jb
jbe
sub
loope
mov
sbb
sbb
push
out
ficoms
adc
mov
adc
jne
dec
dec
outsl
add
ss
sub
scas
ja
shrb
ja
xor
out
cmp
add
add
push
je
cld
arpl
fucomip
or
int
ret
inc
cmpsb
add
int3
jecxz
clc
xchg
mov
inc
lds
inc
scas
mov
leave
ljmp
jle
xchg
test
shlb
ljmp
popa
bound
pop
lahf
xlat
cmp
test
outsb
dec
sahf
bound
leave
popa
cmp
cmpl
jae
stos
jl
ror
dec
lfs
gs
push
lds
xor
addr16
mov
cli
push
shl
push
loopne
rcr
scas
fidivs
out
cs
clc
add
cli
sub
cmp
fs
into
push
xchg
leave
mov
imul
pop
repz
ljmp
aad
leave
ljmp
jle
xchg
jo
xchg
pop
mov
or
ss
aad
xchg
push
fiaddl
ljmp
push
xor
xor
outsl
lahf
pop
loope
incb
push
fcmovnu
data16
add
jns
add
clc
mulb
invd
mov
repnz
dec
gs
mov
pop
sbb
add
fimuls
inc
xor
or
fsubrp
fbld
idivl
not
rcr
loop
popa
stos
test
push
cli
jmp
mov
ss
cmp
xchg
sbb
aam
xor
es
pop
invd
das
push
mov
cs
insb
fld
rcl
pusha
add
jbe
aam
dec
pop
sbb
sbb
lret
push
jle
loop
xor
pop
mov
push
ja
sbb
repnz
movsl
add
pusha
add
stc
test
add
fsubp
stos
mov
call
bound
push
rclb
sub
iret
outsb
dec
mov
inc
movsb
mov
mov
adc
lahf
inc
push
cld
mov
jle
rorb
fstl
hlt
lea
cmc
jp
fimull
jle
mov
mov
inc
and
aam
adcb
popa
push
fsubs
mov
mov
loopne
pop
out
push
rcrb
sbb
push
add
imul
fisubrs
mov
inc
aas
imul
adc
jp
in
loope
mov
loop
int3
inc
sbb
fildl
shlb
add
push
lea
push
push
lahf
arpl
push
out
fstl
dec
pop
and
je
shrb
pop
lret
jb
lock
add
sbb
adc
leave
ja
mov
fwait
outsl
add
lds
cltd
loop
idivb
sub
in
lods
push
push
sbb
stos
test
scas
mov
and
cmp
sarl
lods
and
dec
xchg
adc
insl
mov
cltd
and
fsts
cmpb
rcr
push
repnz
mov
ds
sub
jle
cmp
xor
adc
nop
popa
cmc
sub
add
fstpt
jg
push
mov
jns
testl
repnz
adc
sbb
jp
push
ljmp
xor
adc
pmulhuw
lock
xor
mov
xchg
dec
rol
unpcklps
mov
xor
dec
gs
cmp
fcmove
stc
imul
mov
in
pop
inc
std
ja
push
ja
std
or
push
mov
ds
dec
movsl
jle
push
dec
inc
out
xchg
clc
fs
jle
gs
adcl
adc
clc
or
jg
in
mov
nop
loop
pop
cld
xor
jle
and
movsb
aam
cld
fs
pop
add
add
iret
rcll
into
jne
test
cmp
push
popa
push
shl
fisubs
fcomip
clc
mov
and
add
jmp
gs
push
ljmp
xchg
jmp
or
xchg
sbb
jp
and
movsb
es
push
lea
lods
jnp
jns
inc
ficomps
sbb
xchg
xchg
push
dec
push
inc
cmp
jl
ja
ds
out
stos
rolb
xchg
xchg
pusha
scas
jl
sahf
imul
adc
stc
cmp
jp
push
xor
arpl
rcll
mov
out
test
pop
jl
xchg
pop
push
mov
js
cli
jecxz
lret
jo
sbb
cmp
dec
jno
icebp
jb
push
repz
mov
sub
repz
imul
pop
mov
fwait
dec
sub
enter
test
fnstcw
lret
ljmp
xor
xchg
lahf
rcll
push
inc
and
imul
xor
or
outsl
rorb
sub
pop
iret
iret
and
push
push
mov
jle
mov
dec
fidivl
fsubl
rclb
loope
cli
lods
sbb
js
or
dec
imul
push
mov
sbb
inc
inc
ja
popa
stc
das
mov
inc
daa
repz
or
icebp
sbb
push
iret
jecxz
imul
cs
xlat
dec
jbe
rorl
xor
scas
std
and
aaa
divb
ss
js
imul
rorb
mov
ds
and
cmc
push
xor
or
cmp
ljmp
mov
int3
and
lcall
xchg
test
or
dec
in
ret
iret
ljmp
push
mov
rcrb
mov
lahf
je
sbb
test
push
loop
call
in
pop
cmpsl
test
aad
inc
mov
fdivrl
fistl
sbb
jb
ficoms
push
les
sub
cld
shlb
or
sbb
ss
adc
sti
nop
aam
repnz
lahf
jbe
stos
cs
and
js
and
dec
add
xor
outsb
in
cmc
jl
mov
mov
jbe
leave
test
out
bound
cld
cli
push
ljmp
fdivp
aad
and
ljmp
xor
repz
into
mov
mov
out
add
jg
and
mov
mov
jmp
sbb
sbb
jle
push
xchg
daa
pop
nop
push
sbb
into
sbb
adc
imul
iret
test
or
xor
push
in
mov
int
aas
popf
push
inc
fimuls
sbb
adc
push
push
movl
leave
mov
gs
cmp
sbb
push
scas
imul
scas
xchg
js
mov
into
out
daa
and
push
movsb
push
xchg
icebp
or
insl
xchg
mov
insl
xor
enter
fisubs
data16
dec
sbb
mov
add
mov
inc
sub
add
jp
pop
add
sbb
mov
das
adc
imul
xchg
aam
cmp
mov
sbb
incb
lods
icebp
and
or
idiv
into
movzbl
jne
push
ss
sbb
aad
sub
jo
into
add
adc
lock
jbe
xor
xor
daa
sbb
negb
repnz
jle
push
loope
inc
insb
fidivrs
push
mov
jae,pn
std
inc
rcll
mov
pusha
scas
add
pop
dec
scas
notl
outsb
imul
dec
push
cs
out
call
negl
jnp
jb
add
sbb
cld
stos
outsb
jle
and
push
cmp
loop
mov
in
pop
cmp
out
inc
adc
mov
lock
test
shlb
jp
jmp
mov
insb
mov
cmp
frstor
xchg
jno
mov
inc
movsb
mov
pop
mov
mov
xor
aad
xchg
rol
outsb
pushf
and
loope
scas
ljmp
inc
in
xor
into
outsb
jl
loop
inc
xlat
out
inc
fsubp
and
out
cmp
sub
mov
lcall
fnstcw
or
stos
leave
dec
clc
test
or
sbb
out
fldl
jmp
into
xor
pop
lcall
mov
sbbl
xchg
cmc
lods
sti
push
iret
adc
xchg
insl
mov
jb
fdivr
scas
push
mov
inc
cs
loop
and
mov
jp
add
push
mov
mov
pop
or
loop
mov
adc
pushf
add
out
adc
jo
jle
jns
decl
sub
adc
jae
xor
into
addl
rolb
sbb
adc
lret
ret
movb
and
popa
push
xor
mov
out
loop
mov
fnstenv
pop
movsl
call
add
dec
pop
bts
adc
push
fdivp
lock
int3
cltd
lods
sub
scas
lcall
xchg
push
ds
or
repz
add
cmp
sub
mov
ret
ficomps
lea
inc
cltd
mov
mov
jg
or
add
sahf
loop
shlb
sub
pop
into
lret
mov
sbb
dec
adcl
or
cmp
adc
mov
adc
ds
out
add
jno
xchg
imul
push
sbbl
ljmp
out
das
xchg
fwait
outsl
jae
mov
mov
int3
lds
inc
ds
fwait
mov
out
popa
sub
mov
stos
lahf
cmp
xchg
mov
mov
mov
jae
aaa
out
pop
cltd
cmpsl
in
ljmp
mov
scas
adc
out
or
into
imul
loopne
clc
lods
jg
cmp
cld
mov
jmp
pop
push
mov
mov
sbb
mov
cs
or
jle,pn
gs
jb
sbb
imul
pushl
dec
or
or
mov
jne
ljmp
outsb
mov
adc
cmp
in
fcmovnu
adc
std
popa
xchg
hlt
fstpt
cmp
dec
cmc
push
cmp
stos
jge
xor
push
sarl
inc
rcl
lock
mov
bound
add
lea
mov
out
les
loope
xlat
inc
ljmp
fistps
mov
dec
test
aam
les
std
movsb
sbb
sub
push
popf
rorl
xor
fiaddl
jmp
pop
lahf
cs
xor
push
sbb
mulb
out
pop
jno
or
dec
nop
mov
clc
dec
mov
xlat
pop
pusha
inc
cmpsb
into
mov
hlt
leave
rolb
push
std
test
dec
jae
add
and
imul
pop
rcl
sbb
sub
sub
ret
loop
gs
cltd
xor
mov
mov
sar
idivb
es
mov
jp
push
loop
pop
notb
in
cmc
or
mov
sbb
test
fwait
sub
in
outsl
into
and
dec
enter
xor
aam
and
shll
movsb
cmp
loope
test
adc
jb
mov
shll
scas
cmp
popa
and
test
push
movsl
ret
push
scas
out
ds
mov
xlat
outsb
sub
rclb
popf
or
add
xchg
push
inc
out
cli
loop
stos
outsl
mov
mov
jle
jle
xchg
mov
out
adc
pop
fcmovbe
sarl
push
scas
add
sub
repnz
sbb
in
pop
add
std
sar
std
mov
sub
mov
fildl
or
fidivrl
sarl
cmp
ja
push
adc
inc
shrb
popa
adc
pusha
mov
call
ficomps
sbb
imulb
dec
push
mov
and
cmpsb
add
rorl
outsb
clc
xchg
push
cmp
cld
cmp
push
clc
loop
movsl
or
sub
in
mov
sub
jle
cltd
or
ds
push
out
loopne
push
das
jo
sub
ds
inc
mov
in
xor
pusha
pop
jne
nop
movsb
cld
pop
cmp
loope
push
sub
adc
in
jp
xchg
jne
jl
aad
out
data16
jle
add
pop
sarl
ljmp
int3
pop
in
ljmp
ss
xor
push
scas
js
cmpsb
and
lcall
mov
rorb
cmpsb
test
sbb
std
lret
int
lods
enter
or
or
repz
mov
adc
and
lret
ds
fists
lock
jle
lods
push
push
rcrl
push
push
mov
inc
movsl
fcmovne
out
test
dec
cmc
aad
mov
push
icebp
push
inc
ret
mov
shlb
jle
and
mov
cld
ret
dec
jle
and
push
mov
fsubs
mov
push
fdivrs
push
fdivr
mov
fcoms
popf
jle
push
fsubs
mov
inc
ret
xor
inc
shrb
cmc
jg
subl
inc
xor
adc
and
ret
add
add
xchg
sub
jb
pop
data16
or
sbb
inc
enter
scas
jno
repz
mov
xor
repnz
sbb
shlb
cmpsb
sub
fcmovu
mov
xchg
lahf
in
lea
test
loope
bnd
nop
pop
punpckldq
movsl
pop
lret
aam
inc
mov
xchg
insl
mov
lahf
cmpsb
popa
loop,pt
lahf
cwtl
fwait
lods
mov
dec
sub
push
inc
xor
mov
add
inc
popf
xchg
cmp
les
cmpsb
xchg
es
xchg
lahf
in
test
arpl
test
es
inc
rcll
movsb
shrl
pushl
mov
or
pop
add
jns
addl
adc
mov
enter
imul
sbb
js
lea
fstpt
int
xchg
or
push
jle
xor
mov
push
mov
mov
sarl
jg
sub
jo
ret
jns
ljmp
cld
scas
jo
shrb
sbb
outsl
mov
lock
xor
rorl
xor
push
xor
xchg
jmp
lock
testb
sti
xchg
push
jo
cmp
out
ficomps
je
es
leave
inc
ds
or
or
add
loop
icebp
and
iret
pop
cmp
imul
jb
mov
and
ss
scas
scas
add
xor
int3
inc
sbb
arpl
jb
pop
xchg
pop
mov
iret
rcll
inc
into
sti
mov
popa
mov
shrl
dec
fwait
lds
imul
push
cmp
loopne
ret
push
sbb
movsb
dec
into
jle
add
out
xchg
jne
iret
into
jno
in
aam
xchg
add
inc
push
ja
xor
cmp
lret
xor
mov
push
jle
or
rcl
out
leave
dec
pusha
scas
popa
cmc
push
roll
cmp
mov
ljmp
mov
sbb
or
pop
xor
in
and
pushf
jmp
jne,pt
push
leave
mov
sub
pushf
sub
xor
rorb
shrl
or
out
jae
sub
xchg
aam
test
xchg
fadds
aam
adc
sarl
test
inc
lods
outsb
add
jae
push
or
jg
out
mov
push
or
mov
insl
outsl
fst
cld
loop
xchg
pop
mov
pop
mov
cmpsl
mov
frstor
movsb
outsb
jg
call
cli
push
mov
add
pop
mov
sbb
movsb
push
mov
lea
and
sbb
sub
mov
imul
in
add
ss
add
or
xchg
xchg
scas
ficoml
movsb
jbe
xchg
sbb
lcall
sub
or
and
movsb
jle
adc
ss
xchg
adc
in
and
dec
loop
ds
rclb
sbb
mov
jecxz
out
in
fiaddl
push
ffreep
xchg
jmp
sarl
je
jo
cmp
loope
inc
cmp
fsubrl
or
clc
faddp
enter
cwtl
inc
xchg
dec
add
jno
or
cli
or
adc
movsb
loope
mov
or
ds
aas
outsb
dec
dec
xchg
xchg
sub
xchg
fidivrl
push
out
push
fisubl
dec
jle
stos
mov
loop
fdivr
adcl
sub
jo
ljmp
mov
push
pop
in
jle
xchg
cs
push
mov
cld
lods
into
psubusb
jp
push
rcl
jg
insb
push
inc
push
jo
ds
adc
popf
imul
fimull
pushf
repz
mov
mov
dec
ja
in
nop
out
test
out
jne
inc
les
imulb
push
rcll
into
cwtl
nop
lahf
adc
out
cli
stc
adc
xor
mov
rcl
je
cmp
ds
inc
iret
out
adc
std
es
out
mov
hlt
test
shll
pop
jle
pop
cs
mov
lcall
xor
sbb
ret
mov
or
test
aam
xchg
lahf
cmc
pop
xlat
or
shll
outsl
je
inc
insb
ljmp
fcmovb
into
scas
cmp
xchg
inc
fidivs
fildl
mov
jmp
pop
inc
mov
inc
add
std
int
cmp
scas
lret
stos
daa
dec
sahf
xchg
insb
in
in
loop
xor
out
push
jne
mov
or
add
leave
adc
xchg
fcoml
cmp
leave
loope
stos
pop
inc
or
cmc
jmp
nop
jp
push
add
mov
push
je
xchg
fistl
mov
jbe
pop
or
scas
inc
mov
clc
stos
pop
sbbb
cs
pop
jo
into
ja
or
jg
inc
and
jb
js
xor
test
or
out
lahf
fidivrl
jmp
mov
dec
lds
rorb
or
jge
js
leave
adc
aam
add
sbb
mov
test
xchg
je
jnp
jg
dec
or
inc
xlat
push
std
movsl
sahf
adc
pop
mov
add
sahf
cld
mov
aas
mov
mov
add
jmp
dec
or
mov
adc
jle
scas
pop
shl
sub
mov
test
push
loopne
into
incl
enter
repnz
xor
ljmp
int
test
lret
int3
out
enter
ss
pop
inc
jnp
jb
add
mov
sub
std
std
sub
fildll
xchg
icebp
fldl2t
cmp
dec
pop
sbb
out
pusha
andb
les
mov
das
rorl
dec
sub
push
or
stos
push
mov
adc
js
push
mov
pop
fildl
rolb
ljmp
adc
adcl
jbe
movsb
cli
pop
out
gs
lea
rcll
push
int
cmp
adc
dec
bound
lahf
insl
outsl
mov
push
fistps
cld
push
mov
adc
iret
sub
mov
pop
ret
loop
sub
sbbb
mov
test
jns
adc
data16
sbb
hlt
paddusw
sub
and
push
xor
jp
cmp
cld
mov
cltd
sar
pushl
push
lods
clc
stos
int
mov
sub
testl
popf
jbe
jle
jbe
into
pop
add
mov
xlat
jmp
cli
in
push
iret
adc
lods
push
js
movb
jo
adc
mov
xor
ret
movsl
jnp
xor
push
or
mov
dec
jb
xchg
push
pop
sub
hlt
adc
cmp
push
mov
jecxz
outsl
cmp
adc
lds
filds
ss
dec
add
fistpll
add
lds
cmp
fsub
push
cmp
add
sub
or
and
out
imul
adc
push
sbb
lcall
adc
dec
inc
sti
lds
jae
je
cmp
daa
jg
fsts
sahf
add
sarl
jmp
push
pop
outsb
lret
inc
cs
addb
loop
shr
scas
mov
dec
outsb
cmc
jnp
daa
aam
movsb
mull
out
sahf
into
mov
jg
sbb
jae
stos
dec
scas
aaa
sub
in
mov
xlat
inc
and
fbstp
xorl
lock
mov
mov
ds
pop
add
xchg
adc
adc
into
and
flds
js
andb
adc
lock
push
ret
aam
mov
adc
cmp
inc
sbbl
sub
loop
lea
shll
or
std
xchg
push
in
cld
call
aas
or
subb
jg
pop
data16
push
or
dec
flds
xchg
dec
out
jo
adc
rorb
sbb
out
xor
test
dec
mov
addl
mov
lahf
mov
pop
bound
popf
jecxz
jmp
and
pop
ret
test
cld
arpl
gs
cld
mov
mov
push
pop
mov
lcall
and
aam
sbb
dec
xchg
imul
fisttpll
ret
fdivl
sbb
xchg
lods
sbb
mov
cmp
pop
dec
sarl
sub
adc
icebp
pop
call
mov
scas
mov
repz
into
push
clc
mov
in
and
sbb
xchg
cs
xchg
or
ficoms
push
add
inc
out
not
xor
add
adc
add
mov
into
in
mov
sahf
adc
pop
sbb
in
jmp
inc
out
inc
push
fld
rcrl
xor
ret
pop
repz
cmp
cmpl
dec
xchg
mov
pop
add
mov
jg
out
or
rcrl
sub
mov
inc
out
lods
add
insb
jle
adc
ja
add
movb
xor
jnp
bnd
mov
xor
and
jg
mov
inc
repnz
jle
gs
push
push
cltd
adc
cmc
push
sarb
ds
fildl
mov
hlt
shrl
mov
xor
ja,pn
xor
dec
xor
adc
es
lahf
or
pop
test
add
movsl
lahf
rorl
sbb
jo
movsl
jo
into
push
sbb
or
mov
or
xchg
imul
jl
mov
and
push
sbb
add
imul
cld
mov
shl
ficomps
popf
aam
pop
cli
mov
clc
scas
sub
cltd
lods
popf
inc
lea
mov
push
mov
arpl
int3
stc
popf
dec
adc
int3
pop
adc
cmc
sahf
sbb
push
sti
pop
xchg
jno
fdivl
push
mov
sub
scas
xchg
or
rcrl
int3
push
movsl
push
mov
adc
popa
in
es
mov
push
cli
mov
ljmp
lahf
bound
outsb
pop
jp
les
mov
and
dec
imul
cmp
jbe
test
in
or
or
mov
jnp
sbbb
sbb
cs
loopne
sbb
sbb
ss
ljmp
iret
inc
outsl
jmp
adc
dec
mov
cld
dec
pop
push
inc
clc
xor
push
sarl
enter
add
popa
out
or
adc
push
push
mov
push
jl
aam
push
pop
arpl
dec
add
and
stos
outsb
out
dec
ret
out
dec
pop
adc
mov
pop
dec
test
ja
sbb
fmull
outsb
loop
jge
push
mov
es
rorl
sub
add
test
inc
add
ss
jbe
dec
or
popf
xor
les
mov
inc
ret
dec
loop,pt
outsb
xor
dec
das
lcall
and
into
adc
cmc
hlt
std
pop
aad
out
jns
xlat
clc
ds
push
pop
xchg
fst
xchg
or
and
and
out
push
iret
or
shr
push
ja
enter
cmp
je
xor
sahf
ss
outsl
inc
push
add
testl
adcl
and
mov
sub
or
pop
mov
jne
sbb
mov
adc
dec
mov
gs
add
mov
shrl
adc
test
cmp
mov
lods
pop
mov
js
std
cmp
test
add
cmc
ja
jb
ds
div
jbe
mov
push
in
shll
inc
dec
imul
jbe
sub
daa
mov
sub
hlt
sub
mov
es
push
pop
callw
fiadds
dec
xor
lret
out
mul
in
mov
xchg
cwtl
aam
rolb
into
loopne
adc
inc
jo
pop
in
lock
pop
mov
pop
shrl
dec
push
xchg
mov
dec
into
rorl
push
cmp
xor
pop
add
faddl
or
popa
loop,pn
jge
fs
clc
shl
arpl
mov
xor
jmp
fstpt
pop
inc
in
xchg
nop
mov
loope
das
mov
sub
or
mov
or
lret
ret
scas
enter
mov
jp
push
jp
imul
ljmp
cmp
jbe
subb
rclb
xchg
test
js
jl
jmp
cmp
notb
mov
push
jo
lods
pop
dec
popf
inc
dec
sub
arpl
lds
xchg
jle
cmp
push
push
rcrl
and
mov
lock
rcrl
lds
or
pop
mov
imul
std
cmp
adc
mov
popf
repnz
mov
inc
fsubp
mov
sbb
cs
push
push
leave
ds
push
int
testb
es
sar
mov
sub
std
jno
pop
pop
insl
and
push
and
jl
xlat
sbb
push
lahf
inc
es
sti
outsb
or
push
cmpsb
pop
xor
out
out
push
mov
ret
adc
shlb
lock
aas
mov
mov
mov
add
push
inc
fldenv
add
mov
outsb
dec
add
pushf
in
jp
cmp
or
xchg
xor
shll
mov
in
jno
in
out
push
sarl
mov
xor
push
lret
out
test
fcmovnbe
ficompl
cli
sbb
lcall
dec
js
mov
mov
loop
xchg
ficompl
hlt
je
add
lret
sbb
sbbb
in
ficomps
inc
movswl
jmp
shlb
adc
pop
pop
xor
idivl
mov
in
xlat
mov
pop
rcl
push
adc
test
jmp
popa
or
scas
loope
xchg
xchg
dec
or
pop
cmp
xor
lea
ljmp
mov
or
les
add
ret
push
insb
loop
or
aaa
push
xchg
nop
mov
stos
push
notb
lahf
mov
dec
out
mov
push
xchg
dec
sbb
adc
and
repnz
out
mov
add
scas
and
call
xor
out
and
sbb
xchg
movsb
mov
push
push
jbe
sbb
inc
mov
out
es
data16
test
addr16
rorl
xor
dec
jmp
aaa
and
xchg
test
pushf
dec
add
or
lret
push
addr16
pop
in
pop
push
iret
adc
iret
or
jle
rcrb
pop
jp
testb
inc
mov
add
pop
test
xchg
push
cmp
sub
add
in
xor
pop
aas
push
mov
ds
test
xor
je
sub
adc
ds
test
xorl
scas
testb
pop
xchg
popa
cld
jge
fimull
add
ja
stos
mov
enter
repnz
sbb
sub
into
mov
stos
adcb
das
or
loope
rclb
cwtl
jp
mov
stos
shll
add
lods
in
cs
jmp
dec
pop
ret
sub
lret
sbb
addr16
inc
inc
in
xchg
jnp
es
jmp
ret
mov
iret
hlt
xchg
mov
jno
mov
sar
add
xchg
out
sti
xor
cmc
jno
mov
rcrb
add
mov
mov
loopne
and
sbb
out
cmp
xor
dec
or
fiaddl
out
cmp
xor
sub
mov
testb
jo
pop
sub
ficoml
gs
jmp
in
mov
cmp
pop
ret
rol
pop
sbb
cwtl
xor
das
lcall
int3
push
mov
out
cmpsb
daa
push
and
mov
sub
lahf
cwtl
lea
dec
test
je
repnz
rcl
outsb
mov
xor
repnz
inc
call
sub
mov
sub
push
inc
mov
daa
nop
loop
mov
push
adc
in
in
and
ret
dec
push
jle
sub
rcll
lahf
sub
fbstp
faddp
outsb
roll
ret
clc
loopne
into
aam
shr
rcrl
adc
vpsubusw
addl
das
pop
lock
push
lret
jne
popa
movsl
fmuls
push
lret
pop
xchg
add
mov
out
icebp
xor
pop
cmp
stos
lock
jle
outsb
sahf
add
lahf
push
adc
or
inc
push
or
inc
mov
xchg
lcall
mov
fs
pop
push
into
ss
and
nop
inc
stos
lods
cld
pop
inc
adc
xchg
int
ljmp
inc
adc
sbb
adc
in
adc
push
ret
or
xchg
movsl
aam
insb
in
pop
sub
mov
pop
mov
xor
cmp
sub
je
mov
and
in
lds
sarb
les
out
sbb
adc
mov
scas
es
mov
scas
es
mov
scas
es
mov
scas
es
lret
mov
iret
mov
shrl
push
mov
fs
or
dec
mov
ss
gs
jg
sub
ljmp
xchg
sub
imul
xchg
int
js
add
sti
mov
arpl
lds
fnstenv
lds
push
xor
ficompl
aaa
call
lret
inc
and
cld
popa
clc
mov
lret
aas
aaa
int3
ret
mov
loopne
cmp
jmp
jns
jle
push
cs
aad
pop
mov
out
push
stos
out
outsb
pop
mov
insl
or
dec
movsb
xchg
outsl
pop
popa
cltd
fsubrs
or
mov
cmc
jle
jo
lods
jae
mov
ret
add
lea
scas
arpl
add
pop
push
pop
add
hlt
imul
cmp
ret
xor
xor
push
stos
mov
mov
lds
xchg
jne
jg
adc
add
pop
movsl
nop
mov
mov
push
or
jge
push
mov
inc
jge
push
add
ljmp
or
cld
testb
mov
lea
outsl
rolb
out
stc
inc
push
cld
pop
hlt
jno
jp
mov
lds
inc
sar
stos
xor
mov
xor
jl
mov
lcall
and
add
clc
aaa
jle
xor
fcmovnbe
imul
push
add
xchg
test
mov
iret
ss
cmp
mov
into
jmp
jg
shlb
dec
cld
pop
lea
pop
cmp
das
cmpsb
push
pop
inc
adc
xor
in
push
ss
add
in
ds
lret
add
decb
adc
mov
cmp
adc
pop
sarl
aam
cld
xor
mov
xchg
fisubrs
outsl
out
rol
imul
or
dec
mov
or
inc
shll
and
and
pop
cmp
loope
mov
sbb
push
mov
adc
or
inc
and
cmp
jecxz
xor
test
aam
inc
fwait
cld
jp
fldt
cld
rcrl
fidivrs
jl
outsl
adc
outsl
xor
out
pusha
lods
or
shll
int3
push
out
jno
in
in
lock
hlt
mov
mov
xor
mov
es
ljmp
xchg
sbb
xchg
std
loopne
adc
rcr
aam
dec
ss
daa
and
lahf
and
imul
jne
movsb
xlat
jp
push
ss
mov
imul
cmp
sbb
push
loope
xlat
scas
es
into
leave
jmp
hlt
xlat
repnz
fidivrl
push
aam
add
loopne
jg
fimull
push
push
mov
ds
outsl
cltd
ss
mov
fisttpll
sub
push
inc
loopne
mov
out
and
inc
push
shr
sbb
and
in
and
scas
push
es
cmp
int3
add
inc
xchg
xchg
jbe
cmp
adc
dec
inc
mov
mulb
int
out
into
push
movsb
ss
ds
stos
out
inc
sub
jb
lcall
lock
jmp
mov
xchg
cmp
dec
loope
divb
mov
mov
dec
pop
ja
psadbw
jmp
cmpsl
inc
xchg
out
stos
jae
push
popf
out
stos
xor
loop
jno
and
mov
sti
ss
pop
insb
arpl
mov
dec
les
ficomps
jnp
inc
jle
out
push
int
popa
push
fstl
or
aaa
and
mov
jo
outsb
xchg
repz
shlb
or
sub
iret
stc
mov
in
mov
xlat
orb
jo
or
repnz
pslld
jle
or
sub
push
and
imul
repnz
test
data16
shlb
repnz
cltd
push
pop
mov
xor
out
mov
mov
rorl
cmp
cmp
les
adc
enter
cltd
adc
stos
add
aam
int
dec
mov
fcmovu
in
pusha
loop
iret
inc
lret
mov
or
ret
pop
cli
rcrb
add
vpsadbw
test
mov
lods
imul
enter
push
pop
daa
sbb
call
or
lahf
or
in
xchg
in
xchg
or
push
outsb
xchg
dec
sbbb
iret
out
push
jb
fs
in
leave
or
outsl
aam
cmp
aaa
out
and
jae
pushf
sub
cli
movsl
popf
adc
lea
aam
push
roll
mov
ja
adc
push
add
mov
push
add
xchg
xor
mov
repnz
outsl
ret
jbe
add
push
pop
data16
xlat
mov
pop
dec
outsb
add
rol
idiv
int
adc
pushl
xchg
mov
std
adc
inc
shl
cmc
sbb
sahf
or
loope
xor
ret
or
mov
ja
sub
lea
xchg
pushf
xlat
jbe
dec
lds
fidivs
mov
jb
js
jno
mov
pusha
mov
mov
mov
scas
rcrl
xchg
scas
xchg
icebp
sub
or
sub
inc
shl
push
or
in
or
int
adc
xchg
or
movsb
rcl
mov
xor
xor
lods
push
mov
shrb
cmc
sahf
fwait
sbb
mov
cmp
dec
jae
sub
mov
add
dec
shl
sub
fcmove
fidivrs
arpl
or
test
or
sub
push
xor
jg
test
scas
jle
xor
movsl
xor
and
int3
inc
mov
jle
push
mov
xorb
subl
icebp
ljmp
dec
sti
in
push
loopne
sub
jo,pn
repnz
pop
sbb
jge,pn
lock
loopne
jbe
push
lret
push
out
cmc
repnz
in
cmp
jbe
repnz
in
fbstp
or
into
aam
subl
je
idivl
mov
jno
loop
fnstsw
add
ss
cmp
inc
sub
pushf
and
js
cli
sbb
int
inc
sbb
sbb
vucomiss
push
add
scas
xlat
pop
and
adcl
outsb
mov
jp
sub
lods
loopne
sub
mov
adc
inc
cmpsb
add
ds
or
xor
jbe
mov
mov
inc
add
ds
push
lea
sbb
pop
mov
scas
rcl
mov
xchg
sbb
sub
icebp
lods
out
nop
aad
dec
lcall
xor
ret
mov
xlat
sub
xchg
inc
sbb
jae
nop
adcb
roll
stos
test
js
mov
sbb
ja
je
cli
fcmovbe
mov
cmpb
push
mov
mov
jmp
repz
add
scas
inc
jle
movsl
nop
lods
inc
lock
inc
adc
test
jp
adc
add
xchg
test
out
mov
rclb
inc
cmpsb
shrl
into
push
push
out
stc
in
mov
push
cmp
cwtl
out
test
rorl
in
xor
insl
test
pop
xor
cmp
push
add
xor
and
lcall
mov
xor
adc
mov
mov
mov
push
xlat
cmp
idivl
xchg
jns
ss
add
adc
test
mov
out
je
push
xorb
ss
popf
cltd
xor
add
push
adc
mov
adc
into
cmp
sub
flds
lock
out
fadds
xchg
and
push
mov
sbb
mov
bound
jle
rorl
xchg
cld
inc
aam
xlat
sbb
outsl
cmp
or
jmp
insl
addl
imull
test
push
jmp
push
jmp
ljmp
lret
adc
add
pop
jg
loope
xlat
lcall
sbb
add
pop
push
fiadds
cmp
stc
orl
adc
add
in
ficoms
shl
mov
jbe
mov
cmpsb
imul
push
addr16
jmp
mov
xchg
stos
punpcklwd
dec
xchg
rcl
push
pop
or
testl
dec
mov
pop
xchg
push
pop
cmp
std
adc
push
adc
mov
out
mov
xchg
divb
mov
push
negb
js
mov
mov
dec
out
mov
add
mov
push
mov
fadd
enter
inc
lret
pop
into
sti
mov
fadd
loop
pop
pop
inc
fiadds
pop
fmul
mov
or
lock
add
inc
movl
mov
and
fldl
in
rorl
adcb
sub
push
es
mov
out
cmp
cmp
mov
scas
inc
roll
add
mov
mov
stos
xchg
clc
add
jmp
into
mov
repnz
subl
cmp
rcrl
add
pop
add
xchg
fadds
ss
sbb
ds
test
and
jbe
inc
repnz
add
out
ljmp
add
or
insb
ds
mov
je
push
pop
scas
nop
std
sub
pop
je
add
int3
in
test
mov
shl
lcall
clc
scas
sub
mov
out
inc
rcrb
aam
iret
xor
fs
mov
pop
aad
aam
shl
popa
pop
testl
imulb
fcomp
nop
inc
jns
scas
into
mov
add
cli
pop
sti
lods
fmul
adc
imul
ficomps
dec
addr16
fisubrs
push
lock
sbbb
data16
repnz
lret
out
cmc
shll
hlt
in
or
pop
lea
xor
push
ja
icebp
je
and
icebp
fdiv
sub
lock
push
nop
imul
pop
or
enter
enter
sahf
jmp
mov
or
sub
scas
lahf
dec
push
sar
outsb
sahf
sti
jo
mov
pop
lahf
xlat
mov
call
and
pushf
cmpsl
popf
ja
lea
ss
data16
xlat
jg
xchg
ret
sbb
jle
lds
and
xchg
loop
mov
xlat
jns
orl
mov
scas
cvtpi2ps
enter
ret
inc
dec
jbe
cmc
in
jmp
loopne
lret
repnz
mov
test
mov
filds
mov
push
mov
sarb
mov
pop
out
xchg
push
fsubp
les
sahf
jo
fbld
and
or
jo
ds
fisttpl
aam
rclb
loop
xchg
gs
clc
jo
jl
mov
adc
outsl
push
fisttpl
lahf
jecxz
in
adc
dec
mov
adcb
jg
mov
add
imul
push
test
cmp
sqrtps
roll
push
addr16
into
mov
push
push
fstpt
jg
mov
cmp
xchg
fidivrs
movsb
jecxz
btc
add
sbb
mov
fcoml
jnp
int3
lret
inc
dec
ljmp
cld
jle
mov
cmp
mov
mov
or
fnstenv
mov
daa
jp
int
mov
jmp
cmpsb
push
es
mov
sub
es
daa
arpl
xor
les
jbe
repnz
cli
xchg
push
pop
repnz
sbb
cs
push
cld
xor
add
in
adc
pop
xor
cwtl
movsl
lcall
in
push
or
add
push
adc
and
mov
dec
adc
mov
pop
sub
jecxz
dec
mov
sti
sahf
pop
sbbl
ljmp
filds
in
push
mov
mov
out
fildll
sbb
popf
push
or
inc
loop
xchg
ja
shll
mov
ror
shrl
push
mov
add
push
pop
cmp
push
pop
jo
stos
and
loop
test
xor
mov
std
int3
push
adc
negb
out
aam
je
push
xchg
repnz
ss
loopne
xor
dec
add
imulb
lods
inc
sub
jle
int3
xchg
ds
aam
mov
pop
data16
int
lds
ss
and
daa
mov
mov
adc
cltd
xor
pushf
cmc
popf
jae
sub
imul
aad
sbb
dec
pop
sbb
inc
shlb
ficoms
jbe
ret
ja
jecxz
cmp
cmc
jecxz
cmpsl
imul
cmpsb
sbb
outsl
dec
inc
sahf
into
daa
outsb
aad
xor
aas
aad
out
sarb
pop
push
in
xor
inc
adc
cmpsb
and
outsb
adc
lahf
out
xchg
rclb
scas
dec
into
or
cmp
jg
mov
inc
inc
jle
lock
inc
jg
add
dec
inc
xor
mov
js
cwtl
call
xor
xorb
pushf
dec
cmp
xchg
push
xchg
mov
fcoms
movb
push
pop
fsubrp
into
xor
dec
outsl
lock
cmpsb
jle
lock
pop
pop
into
mov
jle
lock
pop
out
int
lock
stc
ss
pop
cmp
and
lock
push
ret
pop
int3
pusha
fimuls
test
roll
pop
fld
rcrb
lret
mov
add
idivb
sahf
ljmp
ss
jl
adc
test
addl
xor
adc
and
xorb
mov
mov
xchg
mov
jg
push
push
jns
movb
hlt
js
popa
out
sub
nop
add
mov
jle
daa
loop
xchg
jnp
je
mov
popf
mov
sub
test
mov
out
lcall
sub
pop
iret
insb
pushf
jge
mov
dec
xor
scas
or
ljmp
popaw
cmpsb
int3
inc
daa
sub
sbb
outsl
mov
gs
jp
mov
jnp
add
push
ljmp
mov
int3
mov
sahf
push
or
orb
dec
out
or
sub
cmp
add
sahf
jo
pusha
mov
cmp
lods
clc
test
sub
push
in
aam
rcrl
and
mov
cmp
jae
rolb
loop
xor
mov
pop
rcll
mov
rcrl
movsl
add
pop
mov
mov
xor
pop
pop
mov
push
sbb
in
mov
pushf
mov
mov
sahf
ret
xchg
ret
lret
jp
push
sbb
xor
cld
push
pop
ljmp
mov
push
aad
in
cmpb
jmp
lods
iret
sbb
jle
movb
jbe
mov
outsb
xchg
ret
and
ror
xchg
and
sbb
sbb
jp
stc
arpl
push
lock
or
xchg
push
clc
add
lds
sbbl
cwtl
sahf
fstps
xor
nop
scas
ds
cmp
mov
es
lock
shl
ljmp
test
push
imul
cli
xchg
imul
paddw
pop
jl
in
test
lods
lea
je
imul
inc
lods
mov
out
ja
cmp
push
jmp
xor
mov
sbb
inc
inc
ss
div
das
test
loope
add
icebp
leave
bnd
sbb
xor
arpl
push
cmp
adc
jb
movsl
imul
cmpsb
in
xchg
cmpsb
pusha
iret
negb
jb
lock
mov
push
sub
iret
mov
xchg
frstor
xchg
ds
stos
scas
mov
sbb
fprem
call
loopne
popa
or
sbb
push
push
adc
xor
mov
div
cli
cmpsb
subb
lret
push
jo
sarb
and
std
push
insb
cmc
gs
imul
mov
faddl
add
out
mov
jle
sarl
dec
std
xlat
or
ds
movsl
cmpb
mov
jecxz
mov
fldt
jle
adc
and
popf
xchg
std
orps
test
cmp
movsl
or
pop
aaa
mov
mov
cltd
push
jae
or
clc
fcoms
daa
mov
jno
shlb
push
fdivrs
adc
cmp
xchg
out
ljmp
fadd
mov
dec
pop
sbb
adc
nop
lcall
mov
inc
xchg
in
push
dec
dec
adc
jb
dec
jb
fiadds
popa
out
je
push
iret
je
jb
inc
stos
push
outsb
int
mov
stc
mov
mov
jmp
cwtl
mov
fcoms
jg
stos
insb
mov
fwait
mov
xor
outsb
es
ds
mov
outsb
aad
ret
sub
insb
sbb
pop
popf
notb
lahf
sti
add
leave
call
adc
js
adc
mov
lea
push
xchg
add
and
imul
cs
test
cmp
loop
divb
shl
sarb
fsts
push
and
stos
inc
addr16
pop
pop
stos
sbb
stos
lahf
jbe
xchg
mov
into
shrb
icebp
fs
push
mov
fwait
cmp
adc
data16
fidivrl
add
dec
js
dec
jmp
int
mov
and
and
or
and
pop
add
xor
testb
sbb
add
stc
push
les
xlat
add
adcl
notb
dec
repnz
pop
cmc
cmpsb
dec
roll
stos
rorl
add
push
jnp
shrl
jns
das
gs
push
lret
incb
jle
xchg
kmovb
mov
dec
ljmp
mov
aaa
push
or
jo
jp
and
sbb
lea
push
std
sarb
mov
adc
cmp
push
xchg
pop
xlat
mov
cld
cli
aaa
cltd
push
push
test
inc
inc
rcll
jge
cld
mov
mov
sti
ss
faddl
fdivrl
xlat
mov
xchg
in
push
xor
lcall
mov
add
cmc
frstor
imul
out
mov
xchg
cltd
ret
jbe
loopne
mov
nop
leave
mov
sub
inc
leave
cwtl
pop
mov
jecxz
cmp
xchg
mov
xor
test
jmp
pop
cltd
inc
sub
and
or
insl
pop
add
xchg
fstpt
shr
inc
out
clc
jno
aam
mov
out
inc
mov
fcoms
or
jg
js
loopne
test
scas
add
inc
push
repz
cmp
sbb
out
cltd
je
and
mov
mov
lahf
int3
sarl
xor
and
scas
xchg
xchg
inc
mov
mov
js
cld
daa
adc
adc
sar
push
fisttpll
mov
add
push
orb
hlt
imulb
outsb
adc
outsl
pop
cs
iret
ss
adc
xlat
push
dec
jns
fadds
adc
dec
rcrl
sarb
add
or
leave
mov
mov
rcrl
xor
dec
mov
jbe
out
andl
loop
push
fwait
dec
or
aaa
rol
ljmp
fcmove
xor
dec
ljmp
insl
loopne
mov
dec
fisubrl
add
cs
or
aad
push
jmp
lds
mov
testb
jecxz
push
jge
pop
lcall
stos
nop
pop
xor
sub
push
pop
iret
cmc
fwait
jb
out
jb
push
mov
adc
mov
nop
mov
movl
xchg
and
or
xor
dec
inc
jbe
inc
cmp
push
js
inc
mov
cmc
std
data16
inc
ljmp
loop
pop
add
sbb
lret
js
push
in
icebp
xchg
outsb
ret
out
jbe
dec
pop
mov
jg
add
cmp
lea
add
or
movsl
iret
pop
andb
ljmp
repz
adc
adc
push
rolb
or
or
or
movb
and
inc
sbb
cs
fdivr
push
fs
mov
roll
ja
ficomps
scas
rcrb
loopne
sbb
data16
jnp
in
loop
xchg
mov
and
shl
or
ffreep
mov
inc
xchg
mov
jmp
mov
lcall
or
repnz
fs
bound
mov
aam
jg
popf
push
inc
in
mov
adc
push
mov
test
decl
sar
sahf
imul
jl
cld
or
imul
data16
mov
cmp
fimull
js
faddl
iret
mov
nop
xchg
mov
xchg
mov
mov
out
push
aas
nop
in
add
and
dec
ror
loopne
sub
push
mov
out
stos
test
xchg
mov
jae
inc
mov
imul
imull
lahf
in
inc
sub
imul
mov
rol
jae
cli
insl
in
inc
rcll
jo
fistpl
cmp
idivl
ret
xchg
lret
loopne
lods
mov
adc
ret
cltd
jl
adc
sbb
dec
call
push
hlt
sub
adc
cmp
shlb
mov
adc
sub
in
jle
add
jecxz
adc
jb
jmp
frstor
sub
push
in
fldl
pop
pop
outsb
fcmovb
mov
push
or
sahf
movnti
lock
inc
divl
mov
dec
jmp
mov
xor
xor
ret
and
mov
mov
xchg
jb
ss
lock
imul
pop
sub
xor
cmp
add
cmp
cmc
inc
into
adc
out
sub
cltd
mov
js
gs
push
pop
push
pop
add
push
stos
or
mov
xor
jmp
mov
dec
sahf
xchg
add
imul
mov
into
popl
fidivrl
outsl
xchg
scas
data16
xchg
int
add
or
cmp
mov
jae
cltd
mov
loop
stos
mov
mov
add
adc
inc
and
xchg
aad
js
out
test
add
jmp
jb
dec
in
ds
xor
push
push
bound
inc
push
sti
push
and
mov
and
outsl
movsl
dec
xchg
or
imul
xchg
pop
lea
mov
push
lahf
subb
cmp
ret
pop
mov
cmp
xchg
outsl
mov
push
push
aas
cmp
repnz
sub
subl
add
filds
xor
sbb
lahf
cmp
daa
sbb
push
cltd
adc
jge
push
inc
mov
pop
pusha
jo
loop
test
test
push
out
cmp
push
and
in
testl
or
push
insl
inc
movsb
movsl
cmp
xor
and
repz
popf
cld
push
add
dec
add
xchg
fwait
and
lret
fidivs
sbb
pop
cld
js
inc
movsl
jp
daa
add
mov
into
popa
sbb
inc
pop
jle
test
lahf
xchg
ret
out
mov
add
into
sub
fiadds
xor
jno
jo
push
xor
cmp
clc
xor
scas
sub
js
or
xor
aam
cwtl
lock
repnz
stos
imul
xor
lea
cmp
inc
xor
dec
inc
xor
xor
lds
mov
push
test
test
adc
ret
mov
in
dec
call
mov
pop
and
jl
int
ljmp
inc
es
dec
stc
in
cmp
mov
lcall
ror
xor
add
jg
cs
mov
mov
int3
add
mov
mov
fstpt
loope
inc
out
lds
imull
jns
imul
jo
popa
sbb
mov
int3
vmovupd
mov
popa
push
and
or
pop
lcall
and
jle
and
out
int3
mov
popa
sub
push
or
add
shll
inc
rcrb
in
in
pop
xor
sub
push
out
fcmove
ret
ja
xor
stos
loope
add
xor
lods
cmp
jl
into
adc
mov
xlat
jle
fistpl
jle
imul
nop
test
sub
mov
roll
add
lret
mov
cs
sbbb
jg
stos
jno
fs
add
rcll
push
in
mov
sbb
adc
das
pop
add
loop
pop
insl
mov
aaa
jle
sub
out
fadd
notl
push
shll
jo
lea
dec
loop
mov
mov
loopne
or
outsb
idiv
push
mov
pop
push
or
mov
dec
rcll
mov
dec
xor
pop
lret
push
ret
stos
pop
fildll
rcrb
imull
int
fwait
rclb
loope
fmulp
int
and
xor
call
ljmp
leave
ret
pop
push
rol
filds
jle
mov
out
push
ret
popf
test
roll
ret
ljmp
adc
test
movsb
mov
push
andl
mov
aaa
lahf
add
or
in
dec
mov
xchg
xor
xchg
adc
mov
xor
bound
es
iret
out
out
push
mov
lret
mov
mov
ds
mov
in
push
out
xchg
pop
imul
mov
ds
pop
ljmp
xchg
lcall
ss
mov
mov
out
cltd
xchg
nop
cmpsb
ficoms
xchg
loope
mov
xchg
sub
jo
cmp
pop
stos
std
add
sub
jle
sub
sub
jnp
xchg
push
ss
sbb
push
add
jle
shlb
fisttpll
inc
push
cmp
out
shll
rol
inc
and
fiaddl
out
pop
jb
int
out
or
cmp
cmp
inc
inc
inc
icebp
addr16
loopne
rorl
and
xor
hlt
ret
and
adc
into
into
sbb
jo
jno
fidivs
sbb
fisubrs
out
aaa
sub
ds
lret
mov
mov
mov
ret
or
sub
xchg
adc
outsl
iret
aam
push
imul
or
xchg
push
aaa
dec
in
aas
add
sbb
test
imul
mov
in
cs
cmpl
push
lds
out
inc
lahf
jmp
aad
gs
mov
ja
in
mov
decb
in
xchg
jg
adc
out
movb
mov
mov
in
cli
or
sti
pop
adc
dec
or
movsb
pop
sub
rolb
and
push
leave
mov
mov
xor
cmc
out
jne
loop
xor
adc
and
les
xchg
aaa
jnp
mov
cmp
stos
jne
add
sbb
cli
mov
movsb
daa
xchg
sbb
les
mov
add
aam
ret
push
cmp
imul
fdivrs
out
sbbl
into
xchg
mov
adc
fnsave
ja
inc
pop
mov
sbb
fsubr
negb
out
sub
xorb
mov
daa
fidivs
mov
sub
mov
movsb
cs
inc
mov
mov
es
adc
sarb
xchg
mov
inc
push
inc
mov
dec
movsb
inc
push
mov
pop
adc
int3
xor
lods
into
sarb
cmp
mov
daa
push
and
and
repnz
sahf
sti
cld
pop
jmp
fsubrp
fidivs
stos
stc
gs
mov
ss
rorl
js
mov
loop
inc
sbb
imull
or
jle
mov
pop
dec
out
cmp
cmp
insl
bound
mov
adc
rcll
push
nop
aas
mov
sub
out
popf
xor
mov
mov
in
xor
pusha
out
fstpl
xor
mov
pop
cmp
popl
push
mov
mov
dec
pop
dec
mov
clc
popa
ja
fsubrp
lea
push
mov
mov
xchg
xchg
popa
xchg
push
ds
pushf
mov
scas
ljmp
mov
add
loope
xor
je
es
dec
jb
and
xchg
mov
pop
inc
test
push
mov
jmp
imul
fucomp
inc
mov
in
mov
fld
sbb
cmpsb
mov
jb
mov
mov
mov
shlb
lahf
cs
aad
push
mov
mov
jle
sub
in
out
je
add
lds
mov
xlat
xor
shl
jae
sahf
and
mov
pop
push
subb
mov
jb
out
sub
or
inc
add
fstps
mov
leave
cmp
inc
push
loop
lret
push
mov
pop
fdecstp
jle
jbe
ficompl
cld
mov
aaa
pusha
pop
and
jmp
inc
cmp
mov
adc
push
xor
cmp
push
int
enter
outsl
hlt
rorl
push
xor
ret
adc
adc
mov
aam
movsb
fcmovnbe
ffree
in
mov
je
testb
rorl
xor
sahf
xabort
pop
pop
dec
imul
push
xchg
lock
mov
sub
jbe
jb
out
fimuls
push
pop
cmp
iret
mov
sub
add
cli
int
inc
jecxz
mov
in
shr
mov
aas
and
fdivrl
movsb
mov
xchg
sub
sub
std
jge
fcompl
popf
xchg
fiadds
pop
fbld
dec
movsl
push
fsubrs
aad
jo
imul
mov
dec
aam
add
stos
movsb
xchg
test
pop
rclb
jle
pop
jb
movsl
cld
ret
xchg
lods
sahf
clc
jnp
xchg
push
aaa
aas
adc
std
push
mov
fiaddl
fsubr
mov
jecxz
out
lret
jge
clc
out
inc
incb
lods
inc
loop
add
and
ret
pop
mov
inc
ljmp
stc
es
into
mov
int3
xchg
add
sub
aam
addr16
sti
pop
das
in
sub
push
dec
cmc
lahf
inc
out
enter
mov
bswap
xchg
test
add
aam
mov
lods
cltd
or
leave
rolb
rclb
fcmove
dec
loope
cltd
std
cmp
ret
out
imul
xchg
cmpb
rol
hlt
sbb
nop
ss
mov
loop
test
mov
adc
xchg
mov
pop
jmp
dec
xor
sbb
clc
scas
out
outsl
add
jae
fsubrl
mov
sbb
shlb
add
pop
into
into
sti
mov
fadd
lret
pop
inc
int3
add
cmp
xor
add
lds
cmc
in
inc
ss
lock
fdivrs
adc
fcmovb
cmc
fdivrl
lock
mov
jle
adc
or
xchg
cmc
sbb
sbb
fcompl
sub
mov
lock
shlb
add
shl
inc
mov
lock
dec
adc
inc
sub
sub
data16
imul
xor
dec
sti
mov
inc
xchg
add
cmp
or
ret
mov
mov
add
jecxz,pt
aam
lods
or
mov
pop
mov
lahf
sahf
pop
test
and
mov
add
ret
loopne
add
fstps
inc
mov
jecxz
cmp
mov
imul
push
inc
cltd
fmull
cld
stos
push
subl
push
pop
push
xor
mov
and
scas
push
popa
push
pop
lock
aam
daa
xchg
mov
loop
ret
or
xlat
xor
mov
mov
fdivrl
adc
mov
dec
pushf
xor
push
lcall
add
jno
lret
int3
push
sti
xor
divb
mov
sahf
mov
mov
out
jg
sub
mov
xor
popa
popa
imul
out
add
hlt
fisubrl
jb
dec
sbb
out
push
or
movsb
fcmovbe
add
mov
push
mov
pop
clc
push
enter
dec
cli
and
pop
xchg
mov
pushf
clc
test
sahf
and
sbb
ficomps
out
mov
inc
cmp
adc
mov
mov
mov
pop
pop
jno
es
mov
es
sbb
test
and
std
ss
jp
sti
mov
xor
pop
outsl
in
jb
mov
dec
rorl
shrl
push
adc
mov
int
scas
xor
mov
mov
std
lods
adc
ret
aas
ds
lods
cmp
fiadds
jbe
stos
fbstp
cmp
push
and
adc
push
bound
cmpsb
adc
mov
dec
add
outsb
sbb
mov
je
aam
shll
lods
fucomp
xchg
stc
movsl
dec
xor
mov
iret
pop
xor
test
ret
pop
adc
mov
xchg
loope
lahf
mov
addb
sarb
or
leave
jp
pop
sbb
adc
dec
mov
xor
mov
adc
sbb
es
lret
jle
cs
bound
fisttps
lret
jns
inc
mov
mov
mov
je
inc
imul
aam
and
sbb
mov
dec
rclb
jmp
movsb
jmp
cwtl
and
jle
mov
mov
out
xchg
cmp
loope
leave
lea
pop
mov
lret
mov
in
xor
pop
mov
in
pop
ss
scas
out
cltd
adc
iret
lods
jns
loope
xor
adc
mov
pusha
inc
rclb
pop
jl
sub
or
dec
bound
cmp
push
dec
xchg
arpl
cmp
push
or
in
mov
and
out
data16
inc
into
rclb
adc
in
mov
push
mov
rcrl
testb
clc
insl
rcll
push
ljmp
add
in
icebp
fiaddl
bswap
inc
lcall
inc
inc
mov
inc
ret
cmp
rolb
fisubl
push
out
cmp
bound
add
mov
rcl
jne
into
sar
or
sub
fwait
lods
jle
pushf
sbb
dec
jne
cwtl
mov
inc
loopne
xor
jp
ds
test
mov
ret
inc
cwtl
mov
adc
shr
pop
mov
orl
aaa
or
adc
xchg
out
push
cmp
sahf
or
jg
jg
sbb
mov
ffreep
add
sti
pop
mov
movsl
xor
int3
jnp
add
mov
mov
inc
sub
into
xor
add
mov
cmp
ljmp
lds
xor
add
mov
cmp
mov
test
inc
push
adc
push
call
addr16
test
out
fiadds
dec
mov
fimull
cmp
and
dec
movsb
rolb
mov
pop
sub
pop
cmp
dec
lahf
inc
and
push
mov
mov
ds
data16
repnz
and
cmp
test
inc
push
out
sbb
add
ljmp
outsb
push
lahf
arpl
loopne
mov
sbb
pop
ret
sub
push
jb
and
inc
popa
xchg
mov
or
mov
fisttps
addl
mov
push
mov
out
cmp
cld
imul
test
int
sub
and
aam
add
push
je
push
xor
imul
loope
xchg
outsb
mov
adc
stos
xor
and
orb
addl
addl
inc
or
movsb
bound
or
adc
jbe
pushf
push
in
push
push
add
mov
mov
sbb
mov
push
scas
mov
inc
dec
arpl
mov
in
into
or
push
sahf
push
movsl
std
pushf
jbe
loop
cmp
push
inc
adc
dec
sarl
bound
shrb
mov
out
cwtl
mov
es
push
adc
notl
popa
ljmpw
leave
outsl
add
mov
sahf
dec
mov
andb
lds
andl
es
sbb
xchg
stos
iret
aam
jp
decl
dec
mov
cmp
dec
ret
js
add
leave
dec
in
dec
shr
fadd
lds
lret
pop
xlat
push
cltd
cmp
lock
dec
jecxz
ret
lea
xor
push
pusha
cmp
push
mov
ljmp
ds
push
mov
popl
call
pop
dec
pop
loopne
jg
lds
nop
sahf
sub
stc
sbb
roll
xor
mov
add
arpl
push
rorb
mov
imul
sub
inc
loope
inc
stos
ret
push
xor
inc
arpl
aam
or
mov
mov
mov
mov
jle
mov
xor
sub
test
add
mov
stos
xor
addb
inc
cmp
lahf
fcoms
add
mov
call
add
stc
dec
int3
call
sar
pop
xor
push
stos
xchg
sub
xor
mov
sbb
lahf
mov
push
mov
push
or
or
imul
mov
cld
imul
push
cld
fwait
mov
xchg
stos
imul
arpl
outsl
les
mov
lods
shr
test
inc
cmp
loopne
test
ja
xor
mov
xor
fwait
cld
mov
mov
inc
idivb
in
push
xchg
xchg
es
mov
cmpsb
push
and
push
inc
out
jne
jle
test
pusha
repz
scas
cltd
mov
xchg
jg
mov
xchg
sbb
or
aad
fstps
cmp
sbb
jle
or
jg
xor
int3
inc
out
shlb
xor
mov
jmp
dec
hlt
mov
ret
pop
or
mov
mull
sbb
pushf
cltd
dec
sub
xchg
xchg
sarb
data16
ret
popa
sahf
scas
sbb
add
or
mov
mov
pop
cmp
js
in
xchg
rorb
inc
in
mov
out
cmpb
pop
xchg
idivl
mov
mov
cmc
jle
int
popa
lret
mov
sarb
cwtl
pop
shrb
test
je
dec
adc
jecxz
dec
cs
cli
icebp
outsb
fbld
dec
cltd
jae
out
test
in
int3
in
shll
psrld
pop
mov
lods
aaa
or
mov
shlb
loopne
add
ds
iret
jbe
ss
divb
mov
push
sbb
jmp
lahf
pop
clc
popf
cmpsb
les
ret
cld
fmuls
sahf
addr16
jle
faddl
fwait
jge
inc
xchg
cld
inc
imulb
or
sbb
xchg
shll
bound
mov
xchg
xorb
push
div
adc
mov
imul
ds
xchg
mov
loop
ret
cmp
push
lcall
lahf
stos
int3
add
out
sarl
ss
fnstsw
sub
push
lret
daa
pop
test
shll
mov
jl
cli
fnsave
mov
fisubrl
jle
gs
inc
sbb
js
out
adc
imul
add
gs
add
cmp
xor
xchg
insb
movsb
push
and
adc
and
inc
loop
movsl
addb
mov
jl
dec
fistl
dec
or
jnp
clc
jg
in
cmp
iret
fnsave
xchg
add
addr16
addr16
ss
inc
xchg
push
add
leave
je
jge
int3
cmp
adc
cld
idivl
mov
cld
ss
cmp
mov
mov
jae
jbe
ror
jo
lods
fldenv
push
inc
test
adc
test
lea
mov
mov
inc
dec
push
stos
sbb
xchg
shlb
inc
mov
pop
mov
notb
and
pop
enter
dec
mov
cli
out
xchg
and
insl
xchg
loop
adc
or
inc
ret
mov
add
xor
cltd
pop
dec
test
loop
ds
loop
rorb
popa
mov
popa
jg
jl
adc
jl
adc
sub
cmp
daa
popf
dec
cs
js
and
call
sarb
mov
mov
dec
push
add
aaa
push
mov
mov
adc
pop
frstor
out
sbb
or
pop
stos
fidivrs
fimuls
aad
gs
dec
mov
loope
stos
adc
sub
jbe
adc
test
bound
bound
lahf
and
ret
sbb
sub
loope
add
push
pop
fisubs
push
into
negl
nop
pop
push
movsl
cmp
out
jle
loope
fsubrs
mov
sbbb
out
fucomi
mov
inc
push
inc
repnz
ljmp
jle
in
je
cltd
cmp
shrb
clc
inc
xor
es
mov
arpl
sub
sub
mov
es
push
push
pop
sub
addb
cmp
dec
cmp
mov
in
or
dec
inc
cld
jbe
notl
adc
pop
arpl
inc
inc
inc
jae
fiadds
xor
clc
xlat
test
and
in
std
push
daa
in
jb
gs
int
mov
inc
push
repnz
out
jne
ss
adc
dec
iret
out
and
add
dec
cs
pushf
mov
inc
arpl
ds
push
jb
out
push
imul
das
std
out
jmp
xchg
jp
xchg
sbb
adc
inc
sbb
jb
es
push
daa
jle
pop
scas
adc
sbb
and
outsb
fiaddl
mov
push
imul
jle
imulb
mov
pop
call
fistps
mov
lahf
xor
repz
push
pop
jl
clc
pop
rep
int
cltd
mov
inc
push
aam
add
notl
stos
jle
and
mov
push
push
and
notl
incb
dec
dec
or
int3
or
popa
pushf
js
jbe
pop
inc
into
test
arpl
ficomps
pop
or
std
mov
fcoml
adc
cs
xchg
and
imul
jo
or
mov
mov
fisubl
cmc
sbb
jl
mov
xor
sbb
mov
pop
pushf
cmp
mov
sbb
pop
mov
scas
xchg
dec
jg
xchg
into
lret
xor
adc
add
jp
mov
nop
shlb
or
mov
test
mov
cmpsb
mov
or
imul
mov
or
mov
xchg
push
mov
in
mov
xchg
mov
mov
clc
jb
adc
add
cmp
add
dec
pop
aad
sbb
cmp
xchg
pusha
dec
fs
lcall
dec
mov
ja
lods
outsb
or
repz
mov
pop
dec
xchg
jecxz
addb
inc
mov
ss
enter
shll
xchg
push
scas
leave
popf
jnp
repnz
xorb
lret
xchg
pop
add
fists
in
add
adc
mul
ds
lret
sbb
inc
rolb
mov
xchg
and
mov
xchg
xchg
mov
addl
mulb
out
inc
lret
sahf
cmp
fwait
lcall
bound
mov
gs
push
dec
push
int
movsb
or
pop
pop
lret
ret
test
sub
ja
imul
mov
cmp
xor
jo
sti
lcall
shlb
adc
shll
insb
xlat
jle
or
push
push
or
in
out
mov
test
and
pop
pop
xor
push
sub
xor
outsb
and
outsb
xor
xchg
fsubp
je
dec
sbb
push
int
hlt
jle
mov
xchg
pushf
ror
cmp
repz
out
push
repnz
push
jle
mov
lcall
pushf
pop
cli
ljmp
fisubs
aam
ret
lds
ffreep
pusha
loopne
jb
dec
ficoml
pop
jne
cld
jb
out
int3
adc
sarb
add
popf
xchg
push
test
xchg
sub
movsl
add
mov
xchg
pop
mov
call
xchg
repnz
pop
in
sahf
jae
outsb
aam
fnstenv
xor
out
pop
out
jb
pop
ret
jecxz
lds
mov
ret
cwtl
adc
and
cmp
mov
js
int3
in
loop
adc
loopne
lea
add
das
or
aaa
inc
aam
cld
rcrb
shl
aad
loop
or
in
or
push
std
pop
adc
mov
jp
inc
fadds
jae
fdivrs
loop
xor
int
in
inc
pop
cmp
push
or
xchg
mov
movsb
ds
in
int
mov
icebp
jns
xor
divb
es
xorl
mov
xor
out
hlt
and
fwait
imulb
add
inc
into
dec
dec
mov
mov
mov
hlt
test
or
cmp
cltd
pop
pop
lds
mov
jg
mov
movsb
sbb
pop
xchg
and
cmpsb
sub
mov
xchg
sbb
jp
inc
cltd
add
sbb
negl
jp
shll
sbb
mov
gs
pop
daa
add
jo
into
jno
jbe
or
push
fsubp
inc
mov
mov
push
push
add
mov
jle
jb
push
and
aad
dec
shll
pop
into
gs
jle
lret
dec
fidivrs
lock
mov
jbe
roll
fisttpl
mov
or
xor
push
mov
inc
or
mov
fsts
xor
hlt
mov
imul
sub
push
jno
negb
orl
push
inc
xchg
mov
shl
mov
loopne
pop
inc
cmp
push
mov
mov
pop
sub
push
xchg
int
mov
mov
mov
pop
add
icebp
cs
loop
out
ds
and
scas
lods
fdivrp
cli
add
stos
ljmp
and
sub
or
mov
outsb
lock
push
xor
push
leave
sbb
std
push
lahf
pop
xchg
pop
lds
scas
mov
addr16
push
mov
movsl
jbe
cmp
mov
and
outsl
test
ljmp
js
shlb
mov
jmp
shll
sbb
cmc
push
rcl
sbb
and
sbb
icebp
mov
inc
mov
test
outsl
sub
dec
dec
out
loop
mov
into
loopne
cmc
int3
cmp
daa
add
mov
mov
popa
add
daa
out
inc
push
add
sbb
mov
imul
fdivrs
or
fisubrs
icebp
clc
aad
movsl
ja
shrl
mov
and
icebp
icebp
pop
iret
lahf
imul
outsl
sub
mov
dec
loop
cld
push
push
mov
xchg
lock
out
pop
sub
push
subl
outsb
cmp
xchg
mov
pop
imul
jb
cmpsl
sbb
pop
aas
dec
add
mov
mov
pusha
out
aad
add
sti
cmp
adc
inc
cmpsb
xchg
imul
nop
jo
sarb
in
and
xchg
out
addr16
loope
ret
mov
xchg
fsubrl
jns
adc
xorl
in
or
lods
inc
pusha
or
mov
cmp
mov
mov
outsb
add
or
sbb
sbb
icebp
xchg
lods
push
push
outsb
shrb
cmp
mov
or
xchg
shrb
push
test
scas
xor
dec
loope
pop
lods
rorl
xor
push
cs
pop
out
inc
or
xor
add
dec
or
pop
mov
lret
inc
idivb
rol
add
imul
andl
ja
and
mov
dec
cmp
mov
ja
xor
test
sub
mov
nop
outsb
test
adc
sbb
call
add
into
ds
jg
and
mov
loopne
mov
rolb
enter
test
cmp
mov
lret
sbb
out
cld
vminss
lods
mov
jmp
loopne
mov
jnp
and
scas
pop
and
stos
cli
jle
in
lea
jnp
popf
cmp
cld
xchg
es
xchg
jno
in
ret
frstor
adcb
in
rcrb
mov
cmpsb
xchg
dec
out
lea
es
ja
out
pop
inc
in
hlt
test
testb
jmp
ret
push
inc
shlb
mov
or
in
je
add
mov
xchg
push
icebp
cmpb
or
sbb
pop
pop
xchg
jl
mov
loop
add
sarl
mov
mov
fdivs
pop
aas
fiaddl
test
inc
nop
lret
adc
jno
aam
iret
lcall
jbe
mov
cmp
sbb
sub
add
inc
pop
movsl
aam
movsb
xor
lret
mov
aam
imul
cmp
stos
mov
loope
pop
call
xor
cmp
push
call
push
into
jl
shrb
in
inc
sarl
cmp
ljmp
lods
aam
sub
sti
lds
jnp
out
mov
xor
pop
or
mov
push
add
push
and
sarb
in
insb
popa
add
lods
fstps
ja
push
jle
in
je
sub
push
je
div
pop
pop
loop
add
int3
mov
aam
or
or
or
mov
in
mov
mov
loope
rcll
mov
pop
inc
inc
ss
mov
std
test
in
test
adc
ffree
pop
sub
jb
adc
jmp
xlat
imulb
push
jmp
xlat
cmc
sbb
gs
inc
mov
push
mov
rclb
sub
arpl
pop
jg
mov
loopne
xor
jbe
stos
push
lret
xor
stc
mov
sar
das
xchg
into
and
inc
cmp
loop
xchg
aad
and
lock
out
in
dec
imull
cmp
in
iret
cltd
mov
inc
jle
sub
sbb
cmp
imul
pop
cmp
adc
xchg
cld
xchg
loop
push
jno
dec
pushf
mov
aaa
ja
jno
stos
sub
jp
ljmp
inc
aaa
ret
mov
xchg
jo
cld
sbb
movsl
and
cmp
icebp
push
stos
inc
sti
mov
fisubs
add
mov
leave
aam
pop
loop
adc
lret
push
ss
js
idivl
cltd
or
inc
dec
add
lcall
and
cld
or
scas
imulb
add
sbb
inc
push
loop
add
stos
pop
jo
add
and
sub
sbb
add
mov
xchg
or
xchg
adc
daa
out
inc
push
lret
negl
sub
sub
movsl
and
je
jo
add
mov
rcll
push
ret
aad
or
fstp
xor
lcall
ror
pop
or
add
cltd
pop
in
adc
xchg
push
std
in
imul
ret
mov
shrb
mov
and
movsb
mov
mov
sub
mov
xchg
xchg
into
addr16
mov
jnp
movl
and
jmp
xchg
fstpl
and
cltd
sahf
in
cmc
out
or
das
push
daa
adc
xlat
mov
sbb
push
popa
pop
push
or
sbb
arpl
cmc
pop
clc
mov
pop
scas
jl
hlt
fstpt
pop
cs
add
sub
ret
pop
mov
cld
cltd
or
pop
and
loop
ljmp
cmp
lcall
int3
pop
xor
push
inc
jmp
rol
jno
rcrl
out
into
mov
mov
test
in
lea
jge
push
mov
rorb
mov
push
push
and
mov
out
in
jl
mov
adc
shlb
inc
mov
js
xor
ja
fisubs
cld
push
xor
je
xchg
and
mov
ret
imul
xchg
int
push
fwait
int
jbe
ja
pop
sub
outsl
sub
or
add
rolb
xchg
into
ss
mov
adc
mov
loopne
mov
xor
addb
ss
int3
dec
and
push
test
or
push
push
push
in
int3
js
push
cmp
cmp
out
rclb
xchg
ja
movsb
add
rclb
icebp
push
negl
pop
sub
sub
daa
shrl
sbb
mov
imul
sub
sbbb
or
mov
cmp
or
pop
push
ljmp
add
fcmovbe
lahf
mov
push
mov
outsl
nop
loop
mov
icebp
lret
dec
pusha
cmp
sbb
or
clc
dec
aad
sub
inc
addb
outsl
shll
scas
popf
cmp
ja
jnp
pop
jo
aam
scas
ret
mov
scas
insl
inc
add
mov
mov
loop
je
stc
pusha
push
imul
sub
sub
add
nop
cli
sti
notb
jbe
add
lahf
cmp
pop
xchg
push
cmp
dec
ret
es
sahf
cmp
cmp
insl
sbb
in
mov
inc
mov
loop
push
rolb
adc
or
jl
cwtl
mov
hlt
xchg
sbb
cs
dec
ret
xchg
jo
push
jne
out
jmp
dec
pop
popl
int
dec
cmp
pop
and
repnz
out
ljmp
dec
and
cmpl
mov
xor
fdivp
and
and
or
xor
push
fwait
adc
cli
clc
sbb
test
ret
mov
jmp
xchg
sbb
aaa
push
in
inc
sbbl
add
push
stos
xchg
out
or
or
or
mov
mov
ja
cmp
imul
stc
js
inc
stos
lret
popf
cli
cmp
pusha
push
pop
push
stc
and
loop
or
hlt
outsb
imulb
inc
movsb
xchg
push
fsubp
jmp
mov
jle
jo
call
in
adc
xorb
dec
arpl
xor
sahf
pop
pop
out
sbb
sub
adc
add
xor
ljmp
jbe
push
mov
or
mov
iret
out
cmp
add
cld
pop
pop
ss
test
pop
decb
sbb
lahf
cmp
xchg
lods
ret
inc
and
pop
shll
mov
push
mov
movsb
in
dec
mov
sbb
adc
jae
mov
clc
ret
stos
test
cmp
jmp
popf
stc
pop
cmp
adc
mov
cltd
mov
and
pop
pop
xchg
outsb
scas
gs
stc
shrl
push
sbb
loopne
or
push
leave
xchg
fwait
movb
or
inc
cmp
adc
mov
mov
xchg
repnz
dec
scas
xchg
mov
adc
dec
sbb
jno
negl
and
pop
inc
dec
lret
aas
ljmp
mov
idivl
ret
loopne
mov
mov
xor
xor
adc
imul
jp
in
cvtps2pd
xchg
add
test
inc
in
or
cmp
jge
sahf
insb
mov
cmp
lahf
mov
loop
mov
loop
jle
hlt
jp
xor
in
or
imul
mov
aam
jbe
mov
in
lods
loop
add
out
jo
stos
jmp
mov
adc
mov
stos
add
inc
push
shlb
or
mov
adc
imulb
idiv
cwtl
jle
inc
xchg
or
pop
fwait
insl
or
cltd
je
xor
xlat
mov
pop
test
leave
adc
ljmp
movsb
out
arpl
or
sti
inc
pop
sar
je
or
sub
or
xor
rcrb
mov
dec
orl
mov
idivl
sub
hlt
xchg
movsl
into
push
into
pushf
fdivp
fstp
aas
adc
loop
mov
push
mov
loop
adc
cmp
push
movsl
dec
frstor
fwait
xchg
mov
inc
test
push
mov
ret
push
sub
cli
push
pop
stc
sub
adc
or
add
loope
test
cld
adc
gs
sub
lret
int
adc
leave
inc
adc
inc
ret
test
xor
or
fdivrl
mov
outsb
in
add
stos
imul
sub
popl
xchg
shrb
mov
jbe
repnz
imul
ficompl
mov
pop
or
push
and
xchg
and
mov
in
adc
dec
mov
cmp
stos
aam
out
imul
fcomps
loopne
leave
ja
inc
pop
push
add
sub
or
xchg
sarl
popa
pop
out
rcrb
pop
mov
adc
inc
xchg
imul
jmp
add
ds
lds
add
and
push
mov
int3
ds
ss
mov
fadds
push
jge
add
cs
mov
xor
sarb
mov
jne
pop
or
sbb
or
lahf
dec
into
sbb
mov
adc
adc
mov
sub
sbb
ss
inc
ss
scas
in
test
mov
xor
andb
and
repz
mov
adc
sbb
lds
xor
add
xchg
mov
movsl
dec
roll
xchg
out
xor
add
mov
es
loop
aad
loopne
xor
inc
mov
imul
sahf
in
mov
outsb
addr16
in
mov
ret
and
fmulp
pop
sub
mov
in
pop
pop
imul
ret
push
std
mov
mov
shrb
ss
ds
in
in
loop
addr16
popa
mov
mov
push
and
push
xorl
xchg
out
push
rcl
ljmp
in
aam
test
xchg
dec
xor
adc
shl
mov
mov
pop
xlat
mov
nop
sub
inc
addr16
fiaddl
test
mov
adc
pop
clc
push
cld
push
adc
adc
in
cs
movb
add
and
xor
std
cs
scas
mov
and
sbb
dec
sbb
mov
push
cli
or
out
add
repnz
fisubrs
lock
loop
jbe
jle
or
sub
movsl
cmp
ret
shl
pop
test
pop
movsb
iret
mov
sti
sub
mov
inc
out
sub
mov
je
lds
sub
cmp
ds
adc
push
xchg
sbb
cld
dec
cmpsl
add
jno
dec
aaa
add
jae
call
hlt
scas
adc
mov
movsl
add
and
jo
js
jle
add
xor
dec
sub
clc
ret
addb
pop
mov
cli
fcmovnu
inc
arpl
mov
ds
ror
iret
fisubrs
sbb
pop
push
negl
in
test
dec
out
adc
dec
test
cmp
in
xor
sub
mov
xchg
cmp
jmp
or
mov
imul
clc
cld
sahf
insl
stos
push
gs
pop
movsl
js
int
cs
fidivrs
inc
adc
or
and
cld
cs
out
and
sub
sbb
adc
fs
jbe
xor
jecxz
sub
dec
and
lcall
pusha
in
adc
xchg
inc
push
jge
cmp
xchg
jl
shrl
xchg
lods
push
xchg
mov
inc
bound
sub
and
dec
fcomps
lret
bound
lods
add
cmp
stos
pop
mov
pop
fwait
xchg
jb
dec
jg
sub
cli
lcall
sbb
sub
insb
rcr
xor
xor
stos
lret
jno
in
rcr
lcall
mov
inc
test
mov
mov
mov
fcoml
lock
loopne
mov
push
out
dec
out
fisubs
push
stos
lret
jno
in
fldl
xor
ljmp
sbb
fs
push
ss
push
mov
lahf
pop
mov
push
mov
cmp
in
inc
sub
and
into
push
cmc
push
addl
xor
xor
add
sahf
movsb
rol
sub
push
aaa
pop
ss
lds
jb
movsl
int
sbb
rcrb
cmp
rorb
int
out
dec
and
add
cwtl
cli
stc
divb
sub
push
pop
mov
negl
outsb
jnp
movsl
mov
and
repz
xlat
call
or
adc
push
sub
and
jl
ja
in
mov
add
sub
and
fmull
pop
push
fldz
data16
xchg
xor
cltd
jle
jbe
test
cmp
mov
pop
fimull
outsb
rcrb
ljmpw
xor
out
shr
mov
sub
cmp
sarl
mov
ret
or
out
fimuls
and
xchg
sbb
dec
sarl
inc
ret
inc
hlt
mov
pop
dec
int
rclb
cmp
push
outsl
adc
inc
lods
aaa
mov
inc
lock
mov
or
mov
or
outsb
cmp
frstor
jno
pop
mov
adc
sti
push
add
cmp
sbb
mov
push
jg
fidivl
push
insb
mov
inc
andb
add
int
ljmp
xchg
sbb
into
enter
sbb
sbb
sub
jns
ja
dec
lret
mov
mov
loope
sub
outsl
xor
jb
sahf
out
jg
adc
loop
jp
mov
inc
sub
pop
jo
clc
cwtl
xchg
xchg
pop
sub
sub
test
fdivp
das
jnp
pop
es
push
xchg
stc
pop
xchg
cmp
iret
push
sahf
sub
stos
aas
fiaddl
sbb
xor
sub
jg
cs
push
add
mov
dec
pop
or
fdivl
pop
loopne
sahf
mov
sarl
pop
push
push
mov
pop
mov
dec
icebp
leave
dec
pushf
outsl
mov
out
jnp
jle
test
ds
jmp
sub
sub
inc
or
xor
mov
adc
add
imul
xor
or
mov
stos
call
mov
cld
pop
cmp
mov
pop
movsb
adc
and
push
into
inc
movsl
ret
adc
into
jmp
outsl
push
lea
push
mov
pop
xbegin
xchg
lods
lods
and
hlt
add
inc
out
inc
movsl
filds
jno
mov
sub
dec
ret
fiadds
je
je
mov
jo
cld
lds
in
addr16
xchg
cmpsb
adc
insb
jae
fs
push
mov
cmp
imul
mov
adc
out
cmp
or
movb
fstpt
mov
aam
scas
punpcklbw
jb
xchg
cmp
scas
cmp
mov
add
into
push
xchg
add
jo
push
fptan
or
fmulp
jne
xchg
ss
sbb
loop
das
insl
repz
mov
jbe
push
inc
bnd
xchg
mov
negl
inc
mov
jb
dec
cmpsb
stos
dec
adc
mov
scas
outsl
stos
repz
cmp
nop
jp
sbb
cmp
iret
xchg
xchg
fisubrs
add
and
ficomps
cmpsb
stc
js
push
movsl
sub
aam
dec
outsb
lahf
xchg
testb
cmp
mov
fidivrs
inc
arpl
mov
sti
cltd
mov
lds
cli
pop
dec
mov
pushf
out
mov
push
cmc
nop
out
jmp
imul
stos
push
mov
mov
popa
mov
lock
cld
cwtl
adc
push
add
xchg
push
mov
cli
or
xchg
ds
cld
fsubrl
inc
cmp
mov
stos
test
or
push
sub
movsb
adc
inc
rclb
mov
push
leave
out
int3
popl
push
ret
cmpsb
idivl
ds
imul
stos
outsl
push
mov
ljmp
xor
fisttpl
lret
popa
lods
lods
inc
ret
mov
in
lds
cmpsb
in
es
add
lcall
cmp
sub
adc
mov
rcll
subl
adc
and
rcr
adc
xchg
rorl
push
and
sbb
or
mov
inc
jmp
imul
stos
inc
mov
xchg
lret
mov
out
dec
add
xchg
into
fisubrs
sub
dec
xchg
lea
push
push
test
outsb
sub
xlat
fcoms
stc
push
divb
sti
cld
or
lcall
xor
out
mov
mov
mov
fadds
add
xchg
adc
faddl
fiadds
outsb
int
es
jg
add
nop
xchg
fistpl
pop
and
push
jecxz
push
adc
rorl
jge
ret
ljmp
aaa
ljmp
push
cld
lcall
movsb
sarb
lret
dec
ficomps
gs
sub
mov
jbe
inc
jb
mov
movsl
cli
int
out
inc
bnd
cmp
dec
push
jle
mov
jbe
jae
xor
rorl
loopne
xchg
and
sahf
cmp
adc
cltd
mov
ret
and
into
adc
pop
not
les
sub
adc
fwait
jle
sarl
pushf
insl
push
mov
pop
jo
sbb
mov
or
pop
adc
leave
mov
pop
push
dec
mov
sbb
adc
sti
cwtl
ds
xlat
stos
pop
dec
push
inc
in
mov
dec
jmp
jp
or
adc
jmp
mov
cmp
shl
dec
mov
mov
dec
loopne
ret
aam
inc
inc
out
inc
mov
adc
mov
rcl
adc
in
popa
add
cltd
into
fsubl
out
stos
popfw
xchg
in
movsb
sar
pop
mov
fwait
popf
inc
in
xor
out
pop
mov
shr
add
dec
add
jg
add
mov
rorb
pop
js
fimuls
pcmpgtb
sar
rcrl
mov
je
xchg
pop
push
dec
add
dec
fcomi
mov
fs
pop
ret
in
addr16
jnp
inc
cmp
inc
push
imul
cmp
mulb
into
push
in
mov
es
popf
dec
mov
fiadds
int3
add
jle
sarb
xlat
icebp
mov
mull
cmp
mov
sub
cli
clc
push
xlat
inc
add
mov
mov
nop
aad
lahf
cmp
push
mov
notl
xchg
mov
cmp
shl
loopne
fsubr
inc
aam
mov
push
xor
mov
mov
inc
ds
lods
and
out
inc
mov
mov
fdivp
out
mov
mov
loopne
mov
cltd
cmp
adc
lret
dec
test
notb
int3
add
jg
cli
popf
iret
push
mov
enter
ss
test
or
dec
and
ss
mulb
int3
add
test
jmp
fcoms
jbe
daa
mov
je
ret
aam
cs
xlat
dec
ds
xchg
outsb
or
add
sahf
xchg
sbbl
push
test
enter
xchg
je
adc
bound
and
testb
out
push
mov
or
pop
sub
pop
repnz
mov
inc
divl
int3
mov
xchg
icebp
xor
sar
pop
enter
cld
cmc
or
imul
into
pop
aad
sub
aad
cld
jbe
adc
push
cmp
fstpl
movsl
or
ficompl
je
and
mov
enter
cmp
stos
mov
cmp
dec
push
cmp
push
rcll
add
fidivs
fisubs
es
jg
add
mov
mov
push
mov
imul
pop
push
xchg
cli
out
jo
cmp
gs
inc
mov
sbb
sbb
insl
sbb
lods
loop
push
mov
cld
js
sbb
pop
xchg
fsubrl
push
dec
lods
xchg
mov
addl
std
in
mov
or
sbb
adc
push
push
out
sub
jle
in
ret
cld
mov
lahf
mov
xchg
cmc
sub
cmp
out
xchg
sub
nop
and
push
lock
out
call
and
mov
cmp
sub
or
dec
jmp
push
sub
adc
push
sub
ja
push
insl
sub
int
mov
test
stos
xchg
jb
mov
lahf
stc
gs
push
call
mov
sahf
iret
ret
xchg
jno
pop
imul
jns
jle
or
ret
out
movsb
scas
pop
aaa
js
xor
aad
outsl
stos
into
frstor
push
int
sub
fwait
mov
push
sub
int
sbb
xchg
fstl
rcrb
lds
test
xor
mov
ds
fwait
jb
mov
loope
hlt
shlb
insl
or
add
aam
mov
daa
pop
ficompl
enter
cltd
pop
jle
adc
push
hlt
ss
or
lret
ss
jecxz
add
pushf
mov
aad
enter
les
insb
test
gs
xchg
jbe
dec
or
jg
xchg
inc
mov
test
or
push
fmull
shr
cwtl
jp
jmp
and
or
movsl
repz
cmp
ret
lods
imul
addb
das
inc
add
mov
xchg
leave
mov
dec
fcomps
xchg
or
jmp
aam
fistpl
jne
bound
sti
jp
cmp
test
in
dec
into
or
add
loopw
loop
andl
xlat
mov
ficompl
dec
dec
xor
jno
clc
mov
add
not
add
insl
clc
cmpsb
inc
std
xchg
stos
inc
inc
pop
mov
mov
mov
cmp
jmp
mov
loop
inc
xchg
dec
movsb
ss
ret
jne
outsb
leave
jb
dec
sbb
push
mov
shlb
or
or
xor
inc
outsl
pop
notl
lea
cmp
imul
cmpsl
popa
fcoms
cmp
or
jb
mov
push
lcall
icebp
and
data16
lock
xchg
ds
clc
mov
push
inc
mov
jecxz
cmp
out
pop
sbb
adc
xor
xchg
xchg
jmp
jmp
cwtl
push
cmpsb
jbe
jbe
flds
inc
outsl
add
out
push
xchg
fsts
in
adc
cwtl
nop
or
sub
cli
lcall
mov
mov
loopne
repz
hlt
cmp
cmp
pop
mov
sbb
inc
jp
repz
call
iret
scas
inc
cmc
jb
add
push
lcall
dec
in
or
jg
inc
pop
lock
push
scas
pop
or
stos
jo
or
insl
push
xor
push
scas
repnz
add
sbb
fsub
push
mov
xor
xor
add
mov
test
sbb
adc
cltd
xchg
xchg
xor
out
pop
arpl
cs
imul
sbb
fdivrs
mov
jle
bound
repnz
rcl
push
xor
ret
mov
bound
test
jnp
dec
shlb
negb
pop
leave
lds
pop
ljmp
aam
test
push
or
loop
mov
sahf
mov
rcl
icebp
lahf
pop
xor
clc
loopw
xchg
shll
pop
sbb
iret
xchg
pushf
aaa
ja
nop
mov
mov
lods
cld
push
add
xchg
shlb
insl
hlt
loop
push
jb
shlb
mov
fidivrl
xor
int3
je
fsubr
das
pushf
leave
inc
xlat
jg
cs
aam
mov
lret
push
mov
pop
inc
pushf
inc
fs
aam
add
push
sub
shlb
sub
inc
enter
icebp
pop
cmp
mov
sahf
rol
popf
adc
in
pop
adc
and
into
pop
xchg
push
clc
push
push
movsl
adc
mov
add
push
jg
push
or
and
movsb
push
fsubs
cmp
xchg
push
jae
daa
add
pop
imul
outsl
push
add
pop
cmp
jbe
cmc
mov
inc
push
loopne
mov
mov
jno
out
icebp
fdivl
cmp
out
sbb
xor
loopne
lds
popf
sbb
push
lods
into
and
sahf
adc
out
shl
movsl
fcoms
cli
xchg
ficoml
ret
mov
loop
movsl
aas
ljmp
and
push
pusha
mov
daa
cmp
movsl
ret
jns
out
ljmp
xchg
mov
jbe
mov
out
push
mov
mov
mov
stos
inc
push
pop
and
mov
xchg
xchg
out
lret
xchg
push
mov
into
jae
mov
or
cmp
xchg
out
rol
lcall
int3
jnp
sub
lret
into
add
test
push
mov
cmp
ljmp
adc
sar
into
mov
lret
rcrb
push
mov
push
mov
lea
int
int3
jle
aam
data16
mov
fildl
add
add
je
js
fcoml
dec
mov
cmp
mov
sub
cmp
jle
rolb
dec
ret
mov
push
movsl
pop
xchg
cmp
xor
dec
ret
inc
out
xchg
xchg
cld
or
popf
push
call
mov
mov
push
in
ljmp
rorl
inc
fisubs
mov
cli
xchg
aaa
push
xchg
xchg
sbb
iret
push
mov
or
mov
enter
ds
stc
xchg
adc
pop
icebp
in
mov
jle
nop
adc
mov
fsubrl
stos
jle
add
xchg
stc
push
add
inc
stos
and
imulb
js
inc
cld
push
jns
test
lods
cmpl
insb
out
ror
into
rcl
adc
mov
add
leave
or
inc
stos
icebp
mov
or
cmp
inc
dec
movsl
push
sbb
mov
dec
insl
ss
xor
mov
push
lret
in
stos
lcall
jb
mov
popa
push
jnp
decl
inc
cmp
dec
jg
lret
xchg
sbb
inc
mov
or
scas
lock
popa
lret
inc
imul
sbb
xchg
jnp
jne
clc
stos
mov
sub
add
add
in
enter
jg
jle
das
out
cmp
jns
andl
fcoms
negl
pop
stos
cmp
int
pop
cmp
cmc
lret
sbb
xor
cmp
sub
popa
pop
js
add
lock
push
jmp
out
int
aas
into
enter
or
xor
inc
enter
ret
fnstsw
test
ss
pop
inc
in
mov
inc
scas
adc
stos
cmp
mov
lds
add
jbe
cmp
sbb
jle
insb
dec
sbb
adcb
sahf
cmp
add
nop
cmpsb
int
add
movsb
cmp
ficoms
push
jg
mov
ret
ret
mov
push
shrl
pushf
lock
ss
insl
testb
pop
sti
push
xor
sbb
sub
pop
test
in
int
scas
xchg
jnp
or
scas
mov
and
xchg
xchg
jge,pn
hlt
dec
push
stos
lret
fsubp
out
popf
ret
mov
test
mov
push
sub
xor
xor
test
loopne
mov
mov
popa
cmp
lret
mov
sbb
notb
aad
hlt
lock
sub
fcoml
out
popa
cmp
push
ret
pop
mov
hlt
mov
sar
inc
into
xchg
out
pop
adc
sti
push
stos
sbb
clc
pop
subl
clc
scas
hlt
xchg
jns
mov
mov
enter
push
leave
jne
mov
je
stos
dec
push
jb
cwtl
lret
push
pusha
out
adc
cmp
fmul
mov
stos
movsl
popf
and
push
cmp
push
push
add
pop
xor
and
imul
jle
ret
and
inc
or
das
or
stos
mov
and
mov
and
lahf
dec
out
cld
and
pop
fidivrl
mov
notb
mov
stos
gs
rcrl
into
pop
pop
scas
fidivrl
jp
push
push
jmp
mov
and
cltd
pop
in
ret
mov
mov
mov
call
aam
loope
add
sbbb
stos
decb
mov
ja
in
andb
and
dec
arpl
xchg
add
sub
cld
gs
clc
jo
cmp
pop
push
inc
aad
fnstenv
int
aad
fdivrs
ss
sahf
xchg
inc
fcmovbe
repz
fdivrl
dec
pop
jmp
push
filds
loopne
adc
mov
xor
dec
lods
mov
scas
inc
rorl
fucomip
lahf
in
dec
xorl
dec
cltd
sbb
and
stos
mov
iret
xchg
stc
idivb
add
mov
mov
cmp
dec
inc
xor
jmp
add
test
sbb
dec
add
iret
inc
mov
pop
fistpll
mov
jmp
stos
in
or
fisubrs
cs
push
iret
stos
jno
adc
pop
adc
ds
into
push
test
out
mov
loope
mov
or
lcall
jg
pop
adc
xchg
ja
outsb
mov
lds
push
xor
ds
sbb
add
xor
xchg
testb
xor
andl
sub
fiadds
pop
fcomp
rolb
out
sbb
fstpl
push
test
push
imul
ret
and
sbb
adc
ret
or
xor
aaa
and
js
pop
out
sub
or
sahf
outsb
pop
fisttps
sub
mov
inc
add
imul
or
gs
cmpsb
mov
fcomip
outsl
cmpl
add
loop
dec
mov
add
inc
sub
lahf
test
inc
mov
sub
push
xchg
in
out
pop
in
cmc
leave
inc
adc
add
vsqrtpd
fidivs
in
cmp
push
fldenv
adc
out
push
add
mov
xchg
push
bound
arpl
dec
loope
adc
jle
call
int3
mov
cltd
in
test
frstor
push
fldcw
out
xchg
fcmovnb
sbb
fisttpl
cmp
sub
sub
and
loope
shrb
cltd
bound
mov
mov
inc
movsl
lahf
fisubs
push
movsl
not
mov
in
test
pushf
sahf
xlat
ret
cmpsb
add
loope
jbe
cltd
movsb
cmp
xchg
loopne
xor
fdivrl
inc
inc
add
lcall
repnz
mov
lds
int3
inc
cmpsb
out
mov
mov
push
mov
mov
sub
leave
mov
jnp
xor
cli
mov
dec
cmp
adc
call
divl
ret
stc
jb
fisttpll
mov
test
lea
push
fcoms
lock
dec
push
xor
loope
in
fldt
jp
rol
sbb
clc
in
mov
push
test
jl
rclb
pop
push
jecxz
mov
mov
push
out
adc
adc
sub
cmp
test
das
dec
xor
dec
pusha
add
stos
mov
mov
fldt
jae
fdivs
aas
xor
fisubs
ffreep
lret
sahf
scas
cmp
mov
cmp
lret
scas
decb
mov
mov
cmp
push
xor
push
pop
rorb
lret
daa
arpl
cmp
movsl
sub
sbb
es
jae
out
scas
loope,pn
adc
out
stc
and
shlb
fidivrs
enter
movsb
icebp
popf
pop
repnz
fldl
pop
mov
pop
xchg
lret
rcrb
dec
out
popa
scas
push
hlt
mov
pop
mov
jmp
mov
ret
adc
pop
jnp
or
js
mov
sub
out
add
fstpt
push
pop
jbe
push
call
mov
ljmp
jecxz
sahf
jmp
fidivrs
stos
jecxz
insl
push
cmp
mov
out
pop
rcr
add
int3
lods
fnstsw
in
inc
jne
mov
mov
test
in
shlb
mov
mov
aas
out
cmp
mov
push
pusha
loop
pushf
sbb
insb
loopne
into
add
jae
push
movsb
sbb
cmpb
inc
fisubrs
xchg
ja
out
into
xor
push
sahf
fadd
and
out
cmp
xor
fmull
out
idivl
mov
repz
lret
jbe
ljmp
and
jne
out
mov
inc
lods
dec
ja
mov
sarb
repnz
and
lods
cmp
out
xor
inc
adc
jne
push
and
fidivs
adc
cmp
jns
and
loopne
fcmove
pop
mov
fbstp
jo
dec
cmp
loopne
and
int3
sub
fdivp
xchg
dec
inc
test
jb
add
mov
sub
xchg
stc
int
inc
xchg
aaa
lahf
cmc
add
aam
pop
fucomp
mov
mov
lds
test
daa
mov
mov
mov
fnstcw
shll
xlat
loope
sub
loopne
aas
stos
aas
push
sub
sbb
pop
jno
mov
fstpt
cmpl
cltd
cmp
rcrl
int3
dec
daa
pusha
stos
bound
aad
arpl
cmp
jae
pushf
icebp
jno
hlt
or
cltd
mov
xor
inc
negb
mov
cmp
neg
std
jae
xchg
cwtl
test
popa
mov
fs
push
push
pusha
sbb
lcall
xchg
push
loopne
cmp
dec
pop
push
sbb
inc
add
or
sti
or
movsl
fdecstp
ficoms
int3
xchg
and
xchg
pop
mov
es
loop
mov
or
out
push
lret
icebp
mov
in
decb
nop
fadd
mov
add
pop
xor
mov
inc
jecxz
fnstsw
fadds
lcall
or
inc
dec
push
in
jne
xor
mov
push
stos
movl
ja
out
xchg
pop
cmp
sbb
add
ljmp
jae
dec
dec
rcr
jle
ret
int3
cld
push
mov
mov
leave
in
aam
jmp
sbb
fadds
sub
sub
cli
fistps
out
ficoml
add
jg
andl
out
clc
pop
jle
xchg
stos
inc
cmc
xchg
push
aam
pop
test
push
adc
inc
sbb
test
mov
int
sub
inc
cmp
and
outsb
outsb
aas
sub
in
out
ds
sub
cmp
lods
cmp
xchg
ss
lahf
sbb
pop
ret
jne
push
in
lea
mov
addl
inc
int3
xor
adc
adc
lret
lret
int
adc
cmpsl
push
or
push
es
pusha
mov
out
pop
data16
addl
or
pop
or
add
test
into
adc
push
clc
sar
add
leave
mov
stos
push
mov
xor
ljmp
lods
ret
cmp
pop
incb
fnstsw
add
xor
jo
cmp
cmc
jg
push
fbstp
pop
push
stos
cmp
pop
sbb
or
icebp
out
mov
cwtl
mul
push
push
mov
pop
xchg
mov
xor
jg
inc
sub
push
cld
inc
sbb
add
xor
jmp
ljmp
xchg
cs
pop
mov
daa
sti
lahf
outsb
adc
mov
dec
rorb
pop
pop
and
inc
cwtl
outsb
dec
jp
sbb
lret
jle
jp
shl
shrl
inc
jbe
lahf
test
testb
scas
movsb
ja
cmp
dec
pop
lods
sub
or
lds
ret
leave
shr
ret
divb
add
mov
mov
testb
add
filds
das
mov
mov
mov
mov
imul
push
cmpl
outsl
inc
mov
das
mov
mov
testb
adc
test
stos
lret
scas
xchg
pop
inc
add
mov
test
nop
inc
cmp
jae
out
movsl
push
scas
mov
imul
stos
cs
lock
lock
adc
mov
faddp
movsl
mov
sub
mov
adc
xchg
mov
sbb
add
dec
out
jmp
xchg
insl
data16
pop
fwait
cmp
add
fsubr
data16
mov
out
inc
mov
lret
push
xchg
pop
xchg
iret
sub
sub
mov
shrb
mov
sub
pop
sbb
into
in
jne
clc
pop
mov
andb
and
jbe
sub
xor
xchg
movsl
add
loope
adcb
cmc
nop
lods
jge
mov
movsb
cld
cwtl
adc
rclb
jnp
adc
sub
popf
add
int
ror
xlat
bound
push
or
mov
idivb
inc
mov
rorb
xchg
inc
lds
dec
ret
test
int
or
or
sahf
xchg
imull
aad
out
xchg
divl
xor
lret
rorl
cmp
jl
cwtl
inc
mov
sbb
xchg
jg
pop
jecxz
ljmp
mov
iret
push
in
ja
imul
and
jecxz
dec
add
clc
pusha
test
aas
jg
mov
rorl
daa
jecxz
mov
xor
out
jb
addr16
cmp
add
xchg
push
mov
sahf
mov
ljmp
inc
mov
lods
dec
mov
mov
cmp
rorb
mov
sbb
adc
sbb
mul
or
adc
andb
pop
inc
ljmp
sbb
sbb
cmp
and
into
mov
jbe
pop
mov
aad
adc
cmp
or
les
xchg
mov
les
add
xchg
xor
inc
arpl
cmp
jg
mov
dec
loope
or
cmpb
add
inc
ja
mov
mov
arpl
xor
mov
jg
xor
mov
loop
loope
addr16
mov
or
sarl
xchg
xchg
aad
jb
mov
pop
inc
mov
imulb
shlb
push
mov
inc
adc
push
and
xchg
imul
std
mov
mov
adc
pushf
adc
xor
ljmp
mov
or
je
rol
clc
mov
subb
sub
call
jo
inc
aam
dec
loop
repz
sub
in
inc
dec
mov
pop
stos
aam
outsb
pushf
aaa
rorb
cmpsl
xchg
sbb
jle
orl
jmp
pushf
jb
cltd
dec
bound
mov
mov
push
shr
sbb
or
sti
int3
incb
push
dec
movsl
and
arpl
xchg
pop
mov
lcall
adc
xchg
cld
or
cmp
int
inc
iret
sub
fisubrl
or
in
ja
stos
int
jle
add
hlt
mov
inc
insl
das
xchg
scas
lds
adc
dec
dec
addr16
or
add
loop
jns
call
mov
pop
loope
sbb
jmp
sub
xor
xchg
mov
std
adc
pop
xchg
int3
stos
push
or
out
xor
mov
push
les
cmp
add
out
jle
popf
loope
popa
shr
insb
out
ror
dec
xchg
repz
cltd
push
and
loop
jecxz
mov
dec
imul
xlat
rcl
lea
scas
push
pusha
lods
repnz
adc
inc
loopne
push
test
cmp
je
push
repnz
inc
inc
xchg
jle
mov
pop
adc
mov
jp
or
mov
ficomps
mov
es
push
jmp
pusha
mov
mov
insl
arpl
movsl
sub
xchg
fidivrs
jle
lds
push
loopne
stc
xor
lds
or
mov
jnp
mov
push
leave
push
loopne
rol
ss
aaa
cli
lea
inc
xchg
mov
xchg
add
scas
push
mov
dec
mov
fcoml
in
adc
int
imul
cmp
xchg
add
into
lcall
fwait
das
aaa
push
sub
jg
mov
cld
push
stos
xchg
sub
xlat
pop
mov
xchg
pop
mov
push
add
cmp
adc
bnd
aaa
out
and
xor
add
pop
loop
cmp
fwait
dec
mov
ficompl
rol
nop
jp
cld
aam
sbb
aad
sbb
data16
mov
adc
lret
ret
je
in
cwtl
cmp
in
and
fdivl
sbb
dec
xor
fildll
rcll
std
into
test
sub
fisttpl
mov
mov
adc
stos
mov
mov
lock
mov
pusha
push
cltd
cmc
aad
mov
ret
pop
stos
push
popa
mov
leave
mov
out
je
sbb
cmp
rcr
ret
jno
add
ret
call
mov
popa
jo
fmuls
jo
jo
dec
scas
mov
dec
mov
jle
lea
rcl
or
cmp
mov
in
ds
rol
fs
ja
out
lcall
clc
mov
cmp
divb
push
dec
jle
push
jg
xor
jne
mov
sbb
aaa
xchg
lahf
push
loopne
dec
clc
push
jmp
push
pop
fs
ljmp
out
mov
add
test
aaa
ljmp
or
test
ret
pop
movl
adc
mov
in
mov
jge
cld
xchg
test
jp
mov
jo
data16
lret
and
lret
jbe
sub
psubd
xor
repnz
pop
pushf
cmp
iret
daa
pop
xchg
js
andl
es
cwtl
xchg
not
mov
push
mov
pop
aaa
pop
mov
rcrb
dec
xchg
data16
jge
nop
arpl
scas
sub
mov
xor
add
sub
sbb
xchg
adc
pop
je
and
xor
enter
xor
xor
pop
adc
cmp
ficoml
mov
and
stc
daa
clc
mov
sbb
sbb
add
pop
mov
lcall
or
push
movsl
and
dec
loop
cmp
push
or
aaa
mov
inc
pop
xlat
add
mov
inc
out
rclb
imul
push
mov
in
ret
aad
xchg
or
pop
or
ds
push
aad
repz
or
dec
pop
neg
pop
scas
inc
ss
mov
xor
xchg
ret
iret
adc
jo
popf
push
lcall
cmp
fistpll
xor
mov
add
rorb
mov
notl
jle
mov
pop
pushf
loopne
out
inc
push
jmp
inc
scas
inc
outsb
jmp
mov
movsb
rolb
outsl
neg
jo
loopne
xor
fiadds
xchg
mov
add
mov
aam
jns
rorb
ret
sbb
dec
xchg
std
out
inc
ss
jne
stos
sub
enter
popa
aam
fnstenv
testb
add
in
fists
out
je
sbb
xor
in
mov
rcrb
arpl
jb
mov
pop
sbb
xor
and
mov
ss
arpl
and
push
out
pushf
out
dec
xlat
pop
out
in
or
push
les
stos
mov
adc
ja
clc
ljmp
jmp
inc
fisubrl
in
daa
aaa
mov
aad
ret
fimull
repnz
sbb
movsl
pop
sbb
jl
mov
push
mov
xor
pop
aas
movsl
addr16
movsb
pop
pop
or
js
fnsave
cmpsb
dec
es
mov
pop
loopne
subl
cmp
mov
movsb
popf
jl
lret
lods
jle
push
adc
addl
ss
imul
test
test
mov
ljmp
fwait
push
pop
daa
scas
mov
in
insb
sbb
or
push
ja
sbb
movsl
repnz
pop
dec
hlt
sbb
loop
xor
hlt
scas
xor
xor
inc
sti
sub
inc
shrb
hlt
out
adc
pop
cld
cltd
bound
sub
sub
xchg
push
fwait
dec
and
xchg
bound
ja
xlat
das
mul
dec
loope
in
out
mov
sbb
push
in
aam
imul
and
ds
adc
loope
add
jmp
sahf
gs
inc
jmp
add
inc
cmp
out
je
mov
repz
inc
xchg
cltd
int
lea
das
jecxz
lea
lahf
addb
lock
loop
inc
stos
push
inc
scas
rcrb
lock
adc
sbb
sbb
mov
or
push
cli
xchg
xchg
mov
aaa
mull
shl
jge
popa
xchg
and
es
sbb
mov
add
out
xchg
fwait
jne
xor
xchg
add
loop
mov
jecxz
cmp
shlb
pop
leave
push
out
push
mov
ret
std
ljmp
fcomi
sarl
add
cmp
push
in
ret
mov
push
arpl
ds
int
stos
int
sub
movsb
dec
test
pop
adc
scas
adc
adc
push
pushf
jno
gs
jl
ret
inc
shll
add
dec
into
out
dec
clc
into
scas
xchg
loopne
je
and
inc
ss
scas
test
cmp
lret
push
sub
sahf
shl
jae
jle
shr
xor
mov
adc
rol
test
or
xor
and
rcll
jp
imul
xor
out
dec
push
cwtl
and
repz
jle
push
orb
test
adc
jle
gs
sbb
outsb
shrb
popa
dec
sub
push
dec
es
movsl
inc
leave
aas
hlt
cltd
adc
mov
dec
xchg
mov
fucomi
addb
cmp
ds
rorl
frstor
invlpg
mov
in
fsubrl
inc
in
and
in
in
add
bound
psrlw
inc
sub
xchg
popa
bound
adc
ja
ljmp
fisubs
dec
lods
popl
cs
cmp
orl
jmp
vcvtsi2ssl
inc
ret
leave
push
mov
sbb
test
movsl
js
in
mov
into
mov
push
add
lret
shlb
push
loopne
xor
mov
mov
and
cltd
pop
dec
fbld
into
push
xor
outsl
stos
jmp
cmpsb
xchg
cs
mov
mov
xchg
test
adc
test
outsb
and
es
and
sbb
pop
dec
loop
jns
xchg
jns
into
mov
or
add
push
mov
fisubrl
dec
mov
stc
in
xchg
movsl
out
mov
add
pop
and
pop
icebp
mov
xchg
xchg
sbb
xchg
sub
gs
sbb
pop
adc
daa
fisubs
or
cld
aam
pop
je
lods
push
sbb
push
mov
jle
sbb
xchg
sti
cwtl
fidivl
add
push
lds
nop
outsl
xchg
xlat
xchg
call
dec
sub
aad
and
adc
xchg
enter
cmc
xchg
into
fldt
jo
adc
xchg
fsts
push
mov
pop
sbb
ja
popa
scas
mov
insb
mov
add
xchg
pop
es
movsb
lret
nop
test
xchg
filds
pop
pop
hlt
sbb
lods
ja
pop
fs
mov
loopne
push
pop
or
rcll
dec
sbb
cmp
mov
pop
movsb
mov
sarb
cwtl
mov
sahf
in
lea
mov
jle
loope
shrl
xor
mov
and
loop
adc
test
mov
ficomps
movsb
clc
pop
mov
ds
push
js
ficoms
leave
pop
popa
sub
loop
jo
ljmp
popf
arpl
sub
out
movsb
ret
jecxz
stos
dec
lock
sub
lods
arpl
fisttpll
ss
mov
cmp
push
ss
inc
mov
pusha
push
sub
popf
arpl
enter
movsb
mov
adc
sbb
cmc
loope
fisubrs
fs
adcl
loop
fmuls
std
xor
int
sahf
push
adc
clc
mov
mov
in
inc
std
icebp
and
mov
cltd
mov
stos
sub
or
cmp
pop
in
push
fildll
adc
sbb
loopne
mov
fwait
sub
dec
js
icebp
mov
mov
push
cmp
adc
bound
sti
lahf
loope
jbe
lods
push
mov
pop
adc
mov
sub
data16
mov
or
out
scas
jl
rcrb
jge
mov
dec
mov
mul
lods
sbb
add
out
xor
iret
shrb
add
or
outsb
fbld
enter
xchg
and
jne
push
jl
test
push
cwtl
xor
dec
ljmp
popa
ret
jae
mov
sahf
push
enter
ja
mov
add
cmp
mov
loopne
hlt
xchg
stos
out
lret
xor
adc
xchg
ss
push
push
inc
incb
mov
cmc
add
and
xchg
lret
das
push
jp
cmp
loopne
xchg
mov
fwait
cmp
insb
dec
sub
dec
pop
and
cmp
cmp
xor
sbb
enter
faddp
and
mov
xorl
imulb
or
or
mov
adc
hlt
pusha
cltd
shlb
out
mov
xor
insb
in
xor
mov
es
or
lret
popa
add
xlat
out
push
push
jbe
insl
imull
or
clc
fucomp
sbb
imul
fadd
pusha
jne
dec
sbb
push
mov
loop
aaa
dec
shl
loop
mov
out
push
rcr
add
fnstsw
sub
or
push
push
add
ds
jecxz
push
insb
aam
imul
enter
outsb
pop
ja
icebp
add
jmp
mov
ss
sbb
movsl
shll
inc
addl
ja
lret
shrb
mov
cltd
and
cmpsl
mov
sub
lcall
jle
dec
idivb
shlb
xor
jl
jg
movsl
inc
mov
and
inc
js
mov
adc
addl
fld
or
loop
inc
or
es
fisubs
out
data16
imul
movb
cmc
push
aaa
sbb
mov
push
pop
inc
push
inc
add
mov
and
mov
inc
xor
not
int3
loope
dec
and
jp
mov
insb
fwait
push
clc
inc
xchg
imul
xchg
cs
inc
shll
adc
push
cltd
mov
filds
out
icebp
scas
jg
dec
rol
adc
mov
std
outsb
cmp
leave
cs
dec
lock
xchg
xor
inc
and
outsb
inc
mov
mov
movsb
push
mov
movsl
lods
push
pop
imul
cs
cmp
lea
cmp
pop
push
xchg
mov
int
sti
adc
nop
push
dec
out
pop
movsl
xchg
add
addr16
imul
jnp
push
pop
or
movsl
add
jbe
notb
pop
divl
push
and
jne
subl
ljmp
out
sbb
stos
insl
idivl
mov
dec
std
rorb
hlt
pop
shl
dec
pop
push
arpl
into
sub
pop
jb
mul
ficoml
lret
push
cld
rol
pop
lock
mov
out
mov
mov
rcl
push
xchg
lock
dec
cmc
adc
sbb
xlat
cltd
iret
sbb
mov
adc
pop
jmp
stc
pop
ljmp
mov
xlat
ljmp
xorl
pop
scas
ss
dec
insl
xor
mov
cs
iret
jle
jl
rolb
dec
rcrl
shll
inc
pop
rcr
insl
vcvtsd2si
or
stos
jle
xchg
in
ret
ljmp
lahf
aam
ret
mov
and
push
out
cld
mov
sub
mov
xor
rolb
repnz
xor
mov
jecxz
lret
std
or
lods
out
lahf
push
or
mov
popf
inc
sti
and
jno
add
nop
push
out
repnz
stc
fcmovnbe
cmp
out
filds
xor
add
mov
xor
pushl
mov
fdivrs
out
adc
in
jmp
int
sbb
and
sbb
aam
sbb
mov
mov
lea
mov
scas
pop
out
movsb
cltd
fimuls
and
scas
mov
ljmp
mov
fucomp
inc
dec
mov
mov
mov
inc
dec
fidivrl
sub
mov
mov
mov
sub
addr16
jge
add
out
fcomps
or
ss
and
or
inc
inc
cmpb
loop
hlt
icebp
push
icebp
push
push
cmc
dec
out
xchg
out
aad
xchg
clc
lds
ja
outsb
xor
mul
sub
mov
loope
adc
imul
push
push
mov
jns
inc
lods
mov
mov
or
sahf
push
push
pop
movsb
push
jnp
push
push
stc
push
std
jle
adc
xor
inc
jbe
push
mov
push
mov
push
std
mov
ret
hlt
ret
aam
cmp
rcrl
xor
add
mov
enter
jbe
loopne,pn
mov
lock
xor
call
jb
push
cs
es
ja
cmp
out
inc
push
mov
fidivs
push
jno
loop
pop
das
jmp
adc
ficompl
xchg
into
and
pop
shll
push
lds
push
jl
lods
push
enter
out
sbb
cwtl
dec
movsb
xor
outsl
sti
jle
in
pop
imul
addb
in
push
clc
or
js
jbe
loop
adc
and
mov
pop
in
lods
dec
pop
xor
cltd
lahf
mov
pop
sbbb
std
push
ljmp
pop
jne
xorl
lret
call
and
jbe
into
push
shlb
sub
fbld
adc
mov
mov
xchg
repnz
stos
inc
cmp
mov
es
rolb
xchg
cs
cmp
mov
out
dec
in
push
cmp
ljmp
push
dec
in
jns
jp
pop
push
sub
sub
leave
xchg
scas
rorb
int3
daa
inc
aaa
inc
or
pusha
or
in
cs
shl
lret
mov
out
inc
xchg
push
cmpl
pop
dec
pop
ss
lret
das
dec
mov
pop
into
mov
lret
mov
es
out
sarl
icebp
insb
dec
cmc
lods
bound
mov
push
dec
sarl
jbe
dec
xchg
and
dec
outsl
in
cmpsb
fstps
mov
mov
out
adc
dec
cmpsb
inc
or
sub
xchg
mov
xchg
test
mov
inc
lds
cmp
pop
push
jp
pop
push
push
push
adc
rolb
sub
jp
data16
testl
sub
mov
ljmp
and
or
in
shlb
repz
inc
adc
xor
shrl
scas
loop
mov
lret
out
movsb
ficoml
dec
nop
cmpsb
cmp
pop
cs
push
xchg
int3
ret
xchg
out
sbb
mov
dec
sub
lret
xchg
inc
fisttpl
out
addr16
mov
dec
add
lret
add
movsl
jecxz
mov
les
clc
cmp
ret
out
and
enter
les
jb
sub
in
inc
and
pop
gs
addr16
outsb
shlb
loopne
dec
lods
sub
mov
lret
rorl
aad
ss
push
jae
mov
inc
outsb
das
cwtl
cmp
inc
aas
pusha
adc
adc
sahf
mov
mov
out
xorl
jge
mov
push
pop
jg
dec
xlat
pushf
ffree
lret
sbb
sub
sbb
sbb
movsb
or
ljmp
iret
mov
dec
aad
cs
enter
lea
xor
cmpsl
test
and
sbb
fildll
rcr
xlat
insb
aad
fs
adc
arpl
pop
jle
sub
imul
cltd
test
add
mov
inc
inc
outsb
add
pop
push
mov
lahf
mov
popf
push
addb
mulb
and
sub
imul
xchg
lahf
xor
mov
sbb
dec
push
or
cmc
xchg
lods
mov
insl
xchg
and
insl
mov
xchg
dec
xchg
out
sub
es
fldt
xchg
leave
and
sarb
loop
stos
popf
orl
pusha
xor
dec
ret
xor
cld
addr16
and
xor
aaa
sub
sub
leave
xor
lcall
out
sbb
mov
push
sub
jb
xor
mov
pushf
or
outsb
sub
daa
sahf
inc
xorl
lahf
xor
jg
add
inc
dec
rcl
lahf
jle
out
mov
mov
xchg
cs
jb
hlt
into
sbb
push
xchg
aam
jnp
cld
jno
lcall
jno,pt
aam
push
rolb
data16
inc
cli
clc
enter
jle
xchg
fwait
lds
cli
add
inc
out
ja
jl
fsubrl
bound
bswap
mov
lds
fdivrp
or
ja
testl
sar
mov
cmp
aam
loop
mov
hlt
inc
lret
aas
and
imul
fldl
push
movsb
mov
mov
mov
and
mov
and
test
mov
fsubrs
fmull
cltd
push
or
loopne
sub
mov
loope
adc
and
cli
ret
dec
ret
and
or
xchg
sbb
cli
ficoml
push
mov
test
mov
and
add
mov
out
out
js
cli
imul
out
xchg
mov
mov
push
xor
cmc
or
fdivs
popf
addl
negb
cmpsb
ds
in
mov
cmp
jbe
add
mov
dec
or
xor
cli
loop
test
nop
dec
push
cmp
and
cli
mov
sub
sti
xchg
loopne
idivl
xor
rclb
sub
lahf
add
ret
jmp
idivl
cmp
pop
adc
jnp
add
cmp
push
mov
ret
sti
ret
loope
ret
test
aam
and
adc
rol
fidivl
fisubl
outsb
lds
outsb
cld
dec
sbb
xchg
xor
in
out
fsubrl
shrb
xchg
jnp
dec
xchg
mov
add
in
or
inc
jecxz
in
xchg
jnp
dec
stos
stos
pop
pop
and
scas
cwtl
pop
popf
outsb
out
rclb
jp
shrb
lahf
lea
mov
cltd
in
test
or
inc
xor
paddq
or
iret
decl
xor
dec
push
loope
dec
sub
dec
inc
push
test
xor
mov
cli
push
aaa
scas
jno
rol
push
sub
or
and
mov
cwtl
fucom
xlat
loope
cs
sahf
ds
repnz
sahf
loopne
ret
xor
xor
pushf
push
sahf
scas
pop
mov
sub
ficompl
sahf
mov
add
mov
jl
mov
rolb
cli
imul
add
into
sbb
iret
xor
or
pop
pop
data16
sbb
adc
adc
push
bound
xlat
lahf
pop
ret
mov
leave
lds
cmp
popf
mov
push
aad
mov
ret
ret
adc
mov
jb
xchg
pop
mov
mov
mov
fstpt
pop
add
js
add
sahf
xchg
pop
div
into
cmp
fucomp
sahf
jecxz
rolb
sub
aad
out
movsb
out
incb
mov
das
or
loop
mov
mov
fsubrp
add
adc
cmp
es
or
shrl
fstl
sbb
ljmp
cmc
inc
out
push
dec
cmp
lds
or
out
mov
fidivrl
push
lock
enter
xchg
mov
mov
cwtl
mov
mov
fs
jne
jae
xor
cmp
ss
in
cmpsl
dec
lods
mov
xor
or
jecxz
add
xor
out
fists
ret
pop
mov
ds
and
ret
popf
mov
mov
das
jno
sarl
sahf
adc
cmpsl
xor
lcallw
dec
cs
add
shl
add
rcrl
push
sub
das
lahf
push
push
movsb
aam
popa
inc
xorb
rorl
cmpb
lcall
adc
hlt
and
jg
or
int3
leave
popf
mov
fistpll
mov
cmp
mov
adc
push
ret
xchg
mov
cwtl
jb
jno
xchg
cmpsb
inc
es
cmp
add
sahf
mov
daa
insl
push
cmpsb
in
movl
jle
lea
mov
dec
pop
stc
and
inc
popa
and
rol
repnz
and
push
jge
imul
mov
and
fiadds
inc
test
sub
cmp
mov
inc
ljmp
int
es
cmp
es
leave
lcall
inc
push
ds
jb
xchg
int
iret
nop
mov
test
cs
test
lods
jo
ror
repnz
and
add
into
mov
add
and
pop
cli
jp
cmpsl
je
adc
mov
rolb
dec
cmpb
ds
daa
movsb
push
idivl
jp
out
fisubl
push
hlt
mov
ljmp
call
lock
fidivrl
mov
cmp
cmpl
ds
sbb
dec
loop
outsb
in
or
bound
xchg
fldcw
sarl
pop
fwait
dec
subl
js
int
pmaxsw
arpl
sahf
sbb
sarb
ss
out
push
jb
add
mov
rcr
or
sub
iret
push
inc
push
push
call
xchg
sub
test
out
mov
popf
xor
sbb
mov
jbe
out
fimuls
iret
fcomps
adc
xlat
mov
cwtl
jno
ret
in
call
in
sbb
ljmp
xor
add
lds
insb
and
xor
arpl
jecxz
ss
mov
rcrb
gs
rcl
jbe
gs
shrb
fcmovb
es
push
xchg
pushf
iret
pop
sti
xor
cmp
xchg
adc
ljmp
mov
lock
adc
adc
loope
ret
mov
pop
sbb
cmpl
inc
out
and
jg
repz
inc
sub
add
jbe
mov
je
cmp
mov
jp
sarb
ret
xor
ljmp
xchg
jb
inc
mov
add
xchg
aaa
ljmp
test
xor
out
dec
stos
cwtl
dec
int3
pop
jae
jmp
push
pop
and
iret
gs
mov
fwait
and
and
add
sub
ret
shr
add
pop
loop
lahf
cmp
add
jb
aaa
pop
out
ret
inc
xor
clc
mov
stc
hlt
sti
rcl
fidivs
push
mov
stc
add
mov
add
mov
loopne
rolb
jbe
fdivl
popa
xchg
and
loopne
rol
inc
dec
fadd
rorl
cmp
movb
mov
jg
and
idiv
jle
add
pushf
cmp
cmp
cmpsl
mov
outsb
mov
test
add
mov
mov
add
call
aam
adc
in
add
fwait
je
out
aam
push
test
xlat
add
repnz
lock
ja
jle
divb
sarl
out
not
cmp
add
xchg
outsl
sbb
and
dec
xor
rorb
hlt
icebp
and
inc
adc
inc
lahf
mov
and
iret
aam
test
mov
adc
mov
outsb
sarb
jbe
sti
xchg
mov
scas
fs
inc
inc
rcll
fstp
lds
adc
sahf
sahf
test
mov
or
mov
jle
dec
out
or
ss
insb
mov
mov
loop
mov
mov
leave
push
dec
outsl
out
fstpt
cmp
movsl
xchg
sub
fidivrl
es
lcall
cmp
mov
sarl
les
xchg
mov
cmp
xor
mov
mov
adc
aam
add
das
push
xor
sub
fdivs
rcrb
lea
or
mov
insb
fwait
gs
jle
cmp
xor
movsb
cwtl
pop
xlat
jle
adc
sar
sub
shl
push
xor
mov
dec
ss
cmp
push
mov
fstpt
mov
ret
pop
pop
push
cmp
inc
in
sub
rcrb
xchg
cmc
jle
dec
sar
push
inc
das
leave
jbe
aam
pop
into
adc
int
mov
int3
pop
pop
xor
in
xchg
xor
push
outsl
xor
push
or
repnz
sub
out
leave
repz
dec
xchg
inc
mov
dec
fidivrl
jne
mov
test
push
dec
repnz
repnz
cmp
mull
mov
stos
pop
std
lock
xlat
sahf
or
test
mov
lods
adcl
notl
cmp
mov
push
fisttps
pop
dec
lods
sbb
or
push
push
add
fsubrl
xor
test
add
jp
xor
mov
stos
mov
int
out
jns
add
inc
and
jbe
and
cmp
icebp
pop
mov
pop
mov
pop
cmp
jp
jmp
dec
sub
loop
in
ss
in
adc
popf
inc
into
add
repnz
push
call
inc
mov
lcall
loope
packsswb
aaa
fimull
hlt
fsubrs
inc
jle
cmp
mov
xlat
or
fisubl
add
mov
fadd
adc
sbb
notb
inc
mov
xor
stos
aad
cmc
idivb
push
or
jp
out
cwtl
out
pushf
xchg
pop
bound
cmp
hlt
mov
fiadds
rcr
mov
adc
mul
rorb
adc
adc
movsb
inc
das
inc
sub
xorl
push
push
hlt
ss
sbb
pop
outsb
into
dec
orl
inc
jecxz
or
lods
inc
or
mov
cwtl
inc
into
inc
mov
cwtl
sbb
in
in
push
adc
add
add
inc
mov
call
sub
subb
lock
ljmp
das
ja
xor
lret
lcall
addr16
rcl
out
test
add
and
push
mov
stos
mov
fucomip
clc
lret
fistl
pop
sti
subb
pusha
xchg
mov
xor
and
scas
ret
xchg
push
sub
add
aad
jmp
mov
xchg
xor
jmp
cld
mov
xchg
fbld
jmp
mov
sub
fdivl
or
adc
dec
arpl
xlat
mov
fs
inc
popa
pop
sbb
pushf
cmp
data16
mov
repz
in
loope
adc
iret
push
test
lret
out
adc
add
push
imul
cltd
mov
cmpsb
nop
out
loope
shl
loope
and
nopl
aam
xchg
or
adc
dec
and
incl
mov
push
mov
bnd
rcl
lods
lods
nop
push
mov
shr
popa
pop
out
cmp
pop
ljmp
dec
out
mov
jno
ss
xor
lods
inc
mov
in
cli
aam
push
test
cmc
mull
repz
add
lahf
xor
pusha
idiv
fisttpll
xchg
xor
push
mov
add
jecxz
mov
mov
bound
movsl
and
subb
pop
mov
rcr
or
fsubl
std
jmp
imul
div
ss
mov
mov
add
rcrl
mov
in
scas
shr
cmp
add
jmp
imul
jo
cmovge
add
dec
adc
and
fs
sub
in
and
mov
jge
jb
lahf
dec
pop
pop
sub
nop
mov
xor
dec
xlat
loopne
fs
fdivr
push
push
mov
sub
sub
cld
inc
fnstenv
dec
loopne
js
jg
fistl
pop
lock
ss
pop
sub
sub
test
adc
loope
lods
fidivrs
nop
fisubrs
mov
addr16
sbb
xchg
pop
mov
pop
xchg
pop
inc
xchg
pop
pop
push
sbb
test
movsb
jmp
xchg
push
push
jns
loop
sub
in
push
push
pop
dec
dec
arpl
lcall
cmp
rcr
add
sbb
in
mov
stc
sti
lods
sub
mov
pop
out
mov
cmpsb
xor
mov
inc
shr
hlt
push
pushf
icebp
imul
dec
or
push
inc
pop
push
xor
insb
sbb
sub
fisttps
inc
jb
push
outsl
hlt
bound
dec
leave
sti
adc
push
outsl
cmp
ja
push
cmpl
xchg
dec
ds
jne
dec
test
dec
or
out
cmp
or
and
mov
inc
jb
stc
shl
out
ret
call
jbe
dec
cmpsb
into
dec
out
testb
into
mov
imul
sub
shrl
xor
into
mov
xchg
out
cmp
lcall
in
jp
push
enter
orb
jb
pushf
arpl
lock
sub
or
push
jp
pop
fidivs
ret
xchg
add
and
pop
cmp
push
cmp
adc
cwtl
pop
dec
aaa
xchg
shll
push
add
inc
and
popa
mov
and
aas
das
sbb
shrl
leave
js
ljmp
mov
test
cmp
pop
cwtl
pop
imul
sub
adc
aad
pushf
pop
cwtl
ret
push
cmp
call
aam
dec
sub
jae
jne
xor
lea
sarl
mov
rol
xchg
add
add
cltd
lret
cltd
outsb
sbb
out
cld
lods
or
clc
into
imul
iret
sub
bnd
mov
xchg
dec
mov
and
nop
test
das
fcomps
push
movsl
jbe
lods
insb
lds
mov
mov
mov
mov
out
sarl
xor
clc
add
cmpsb
mov
jae
ret
ss
ds
or
push
pop
movb
ds
mov
jg
xchg
outsb
add
imul
jecxz
sbb
js
mov
cmpl
test
movsl
mov
rcr
hlt
lds
cvtpi2ps
clc
xchg
sbb
lret
adc
cmp
and
outsl
dec
jo
and
scas
insb
inc
mov
insb
sti
aaa
lret
out
or
cltd
mov
and
lds
push
push
sub
add
xlat
mov
je
or
fcoms
push
jecxz
dec
inc
popf
pop
cmp
test
loope
xor
mov
out
sub
xor
sub
orb
mov
push
or
sbb
sarb
push
hlt
mov
mov
adc
pop
imul
out
call
fidivrs
jmp
iret
lock
fnstcw
add
fmull
dec
inc
or
loopne
rcl
stc
fimuls
dec
mov
push
lret
sbb
cmp
xchg
mov
pop
jle
or
in
push
mov
or
jnp
ljmp
or
lret
test
mov
ljmp
imul
jbe
sub
mov
xchg
jmp
out
push
cld
fidivrl
xlat
je
negl
cmpsb
in
sub
xchg
mov
jle
mov
cmc
cli
add
jp
out
pop
shlb
adc
cmp
xchg
gs
jle
mov
jg
adc
pop
add
sub
data16
lcall
fistl
fsubs
pop
into
cld
enter
imul
ds
idiv
js
add
inc
outsl
or
lahf
add
clc
pushf
inc
inc
xor
mov
clc
xor
mov
xor
pop
outsl
mov
pop
push
push
mov
fiadds
in
mov
adc
jmp
ret
lea
fcomps
cltd
jmp
mov
adc
ret
cltd
cmp
add
ss
push
clc
sub
dec
push
add
arpl
addr16
add
mov
mov
adc
data16
mov
nop
ss
sub
jle
scas
add
stos
fnstcw
outsb
insl
lcall
jle
test
push
pushf
lahf
push
movsl
enter
fnsave
adc
ret
out
sbb
mulb
jle
fwait
sbb
ret
jp
adc
mov
lods
enter
std
loop
dec
out
outsb
leave
pop
loop
pop
mov
jns
out
mov
ret
pusha
mov
adc
imulb
dec
cmp
daa
mov
mov
xor
in
mov
sbb
leave
sbb
sarl
bound
mov
nop
mov
mov
fimuls
icebp
es
insl
push
lea
mov
add
out
push
ret
mov
stc
xor
mov
pop
adc
and
mov
daa
lock
dec
xchg
pop
std
loop
sub
pop
test
mov
add
jne
pop
popf
sub
rclb
jno
int
imul
incb
in
xchg
pop
xor
xorb
mov
lcall
es
mov
lds
sbb
mov
cmp
pop
in
leave
push
mov
das
scas
loopne
rolb
xor
ss
mov
loopne
mov
std
je
insl
xchg
mov
aaa
pop
mov
jns
add
xchg
mov
mov
add
push
pusha
add
xor
jle
ret
fstpl
nop
mov
ss
dec
in
pop
mov
push
xchg
sub
inc
xchg
mov
orl
je
push
test
pop
out
stos
dec
cs
lcall
out
xchg
imul
xor
mov
sbb
adc
mov
pop
mov
xchg
cli
out
pop
mov
and
mov
movsb
lcall
leave
arpl
xchg
ror
dec
lods
mov
int
hlt
push
mov
iret
int3
aad
ror
cmp
cltd
hlt
int3
scas
cli
repnz
push
jle
mov
cmpsl
in
add
push
jo
adc
outsb
scas
clc
pushf
jnp
push
sub
mov
adc
or
pop
dec
cmc
jge
loop
int3
inc
sbb
mov
cmp
ljmp
jae
pusha
sbb
pop
rcl
loopne
push
and
pop
or
imul
mov
in
daa
mov
imul
fwait
out
lahf
pop
adc
scas
jo
ficomps
lcall
fidivs
mov
mov
rorb
push
push
push
sub
xchg
add
pop
aaa
out
out
les
test
cld
clc
add
test
ds
adc
fcoml
outsb
mov
push
ret
mov
lds
pop
mov
adc
cli
cmpsb
imulb
lock
subb
or
notb
sbb
mov
ljmp
xchg
iret
call
ljmp
ja
in
repnz
mov
mov
cmpsb
es
in
out
movb
lods
inc
push
aas
jne
hlt
add
push
loopne
pop
xchg
rcl
jb
jecxz
icebp
aam
cmp
dec
add
es
aaa
clc
mov
into
pop
pop
fldenv
test
aaa
and
and
sub
sahf
test
test
add
cld
inc
and
adc
or
adc
sub
mov
cmp
lahf
lods
dec
cmp
scas
movl
xor
ja
dec
fldl
dec
lock
mov
sub
add
arpl
int3
push
pop
in
cli
mov
mov
repnz
add
inc
mov
scas
and
or
push
test
inc
inc
and
and
jns
test
mov
aas
movsb
shr
push
mov
adc
addr16
loope
out
ficoml
incl
cld
pop
test
loop
mov
jo
aam
inc
arpl
loop
shll
scas
mov
adc
pop
and
xlat
lahf
insb
movsl
fmulp
mov
adc
pop
pop
sti
xor
xchg
test
push
and
cmc
xor
mov
shlb
and
jo
in
adc
shlb
out
std
mov
mov
push
sahf
inc
fsubp
sub
in
fidivrs
pop
mov
pop
push
adc
push
mov
ja
sbb
adc
jp
hlt
mov
cmp
cmp
lock
push
or
xor
add
lods
popf
mov
cltd
int
sub
lahf
es
pop
das
mov
fisubrs
xchg
dec
cmp
lahf
ds
jge
or
mov
in
ljmp
pushl
out
push
pop
ljmp
sahf
mov
or
stos
dec
bound
mov
fwait
cwtl
add
out
push
mov
add
fidivl
lret
mov
jl
xchg
out
testl
and
in
stos
shl
sub
pop
lock
shll
cmp
std
cld
andl
pop
outsl
cmp
test
pop
out
movsl
mov
pop
fidivs
cli
loop
hlt
ds
jecxz
outsb
adc
ret
in
outsb
adc
pop
je
sti
push
fidivrl
shlb
dec
clc
nop
dec
ljmp
loop
ret
sub
shr
fwait
ret
jp
lret
lds
mov
cmp
push
adc
pushf
rol
mov
pop
lods
add
jns
and
jb
sub
popa
jle
or
pop
mov
mov
pop
or
pop
in
imul
push
int
jg
cltd
daa
adc
mov
xchg
addb
lahf
ret
or
adc
pop
mov
jnp
push
mov
push
loopne
sbb
mov
ljmp
aam
cltd
xchg
mov
pop
mov
xor
push
loope
int
push
mov
jo
mov
adc
mov
sub
mov
add
movsl
in
fmuls
adc
in
fiadds
pop
enter
xor
fiadds
rorb
mov
bound
xor
lods
xor
mov
jb
movsl
or
adc
in
addb
scas
out
lahf
test
ds
shll
fs
sbb
ds
in
pop
xor
fiadds
push
or
mov
or
cmp
aaa
leave
mov
xor
cwtl
lret
rcrl
push
push
add
xor
mov
add
daa
inc
ficoms
inc
inc
jne
pop
gs
loop
clc
aam
and
push
rolb
pop
into
inc
push
jo
pop
aam
adc
shll
inc
add
mov
add
xchg
ret
mov
divb
push
xchg
fwait
cmp
sbb
out
mov
loop
clc
nop
push
fs
xchg
out
mov
xlat
outsb
inc
cmp
mov
pusha
xchg
stos
push
cmpsb
fcmovb
lahf
xor
push
pop
out
pop
add
movsl
mov
pop
adc
xchg
xchg
adc
jle
cmp
cmp
push
gs
pop
push
sub
mov
xorl
aad
lret
push
xlat
lods
jp
sbb
mov
loopne
repnz
nop
rcl
xchg
push
adc
pusha
out
sbb
repnz
je
xchg
sub
inc
es
or
mov
and
pop
and
mov
or
sbb
ja
xlat
test
fiaddl
add
out
stos
test
adc
and
orb
sub
mov
add
push
into
sbb
jle
stos
add
fbld
xchg
idivb
pop
mov
jg
outsb
pop
xor
out
jne
jl
mov
add
mov
add
xchg
mov
cmc
mov
stos
xchg
fldenv
test
mov
movsb
fld
and
jp
dec
sbb
add
roll
imul
push
int3
sarb
inc
push
mov
scas
in
rorl
adc
dec
out
jb
xchg
adcb
inc
push
or
inc
cmp
lds
and
sbb
jecxz
mov
sbb
into
cltd
out
jle
lea
sbb
push
aaa
or
ljmp
fisubs
sahf
stc
jp
movntps
inc
cld
push
sub
in
add
andb
movsb
icebp
loop
and
add
xor
addb
add
xor
lods
sub
lods
repnz
sbb
loopne
inc
and
sub
cld
push
add
sarb
dec
pop
rorb
pop
mov
fsubp
lret
mov
or
shl
cmp
sub
lea
arpl
stos
lods
add
dec
scas
enter
inc
les
jmp
mov
cmp
mov
jecxz
fisubrs
adc
mov
jnp
mov
or
adc
pop
fsubrp
push
push
mov
xchg
pop
call
jbe
mov
push
int
test
mov
mov
push
dec
xor
inc
scas
lock
sahf
add
push
shll
stos
mov
jno
push
xor
jle
and
or
dec
addr16
imul
adc
pop
out
loop
repnz
jno
test
dec
adc
stos
fdivs
std
add
loopne
mov
stc
das
shlb
cmp
daa
and
xor
sub
push
pop
and
loope
das
cltd
sbb
xchg
ficomps
stos
mov
fst
mov
fwait
cmp
jle
stos
add
es
ret
roll
mov
dec
in
fbld
jp
pop
sbb
adc
mov
xchg
jle
push
repnz
inc
inc
aam
xor
inc
into
dec
mov
jle
mov
push
and
pop
dec
sbb
mov
loope
and
sub
adc
mov
aam
inc
lret
ret
cmpl
fsubs
das
adc
adc
add
jle
push
subb
stos
push
test
cmpsb
add
lret
repnz
or
xchg
mov
xor
bound
int3
and
inc
fistps
add
and
hlt
cmp
sbb
pop
cmpb
or
pop
jae
loopne
mov
ss
mov
loope
into
into
or
js
dec
fdiv
inc
filds
scas
frstor
push
adc
add
mov
out
cmpl
inc
ljmp
pushf
ss
xor
xchg
add
loope
mov
jg
fstl
cmp
cmc
push
out
push
pusha
cmp
mov
lahf
out
add
ljmp
add
mov
divb
xchg
pop
xchg
or
jbe
test
pop
xlat
rclb
scas
cmp
jmp
imul
lds
push
in
sbb
jae
xchg
inc
into
inc
pop
or
es
ljmp
jl
in
jno
out
push
dec
loop
mov
add
imul
or
test
jmp
mov
and
lret
div
and
in
jmp
cltd
push
stos
fmul
push
xor
popa
testb
jle
lahf
inc
jle
push
jl
mov
pop
push
and
in
mov
stos
outsl
sub
xchg
stos
inc
fadds
int
push
into
outsl
push
ret
test
ret
sbb
hlt
jg
add
fists
imul
sub
stc
mov
sbb
push
or
mov
stos
pop
sbb
imul
outsb
outsl
scas
xchg
mov
mov
jo
push
addr16
cmp
mov
adc
stos
pop
push
test
or
test
lcall
adc
mov
mov
pop
mov
xchg
sarb
mov
pushl
lods
fiadds
sbb
out
push
push
mov
shl
lods
stos
and
leave
push
xor
mov
jae
pop
negb
xchg
inc
cwtl
into
fisubs
xor
jmp
inc
mov
test
xchg
lods
mov
sub
push
xor
lret
add
lahf
mov
arpl
cmpsb
pusha
fildll
inc
cmc
pop
ja
jmp
int
in
lds
data16
aad
cmp
mov
add
add
pop
add
cmpsb
lret
out
adc
ljmp
mov
leave
mov
sbb
shll
add
mov
mov
push
add
adc
xor
mov
mov
xchg
popa
push
xor
cmp
jecxz
ds
mov
mov
push
mov
pushf
mov
xlat
and
inc
fucom
xchg
inc
pop
mov
sahf
fildl
ret
int
mov
xor
cmc
xor
inc
pusha
imul
insb
sahf
mov
iret
xor
hlt
add
cs
je
mov
stos
mov
lock
add
lock
sahf
cmp
add
cwtl
out
cmpsb
int3
and
push
xor
xor
xchg
cmp
outsl
addb
divl
fisttps
mov
inc
add
jg
mov
mov
push
inc
into
popa
test
mov
mov
test
pusha
mov
pushf
jg
mov
mov
dec
mov
push
xor
jbe
xorb
add
ret
mov
add
add
push
jo
mov
pop
hlt
add
decb
xor
in
xor
and
and
jae
inc
lahf
aaa
lahf
mov
xor
mov
test
sbb
scas
les
jp
inc
test
sbb
xor
mov
ja
add
mov
pop
and
mov
jp
sahf
push
mov
and
cmp
imul
sbb
adc
aad
xor
outsl
fdivrl
push
xor
out
rorl
flds
shr
cmp
xor
mov
aam
mov
cmp
loopne
int3
out
lock
pop
pop
pop
nop
inc
out
cmpsb
cmp
push
loopne
xor
out
jo
cltd
dec
adc
cmpsb
fisubrs
test
mov
xor
jae
cs
lock
fisttpl
sub
pop
add
jle
add
sub
sub
pushl
pop
ficompl
jb
jmp
cmp
popa
mov
out
jne
add
mov
aas
dec
int
mov
movsb
sbb
push
inc
jbe
jp
push
cmp
in
test
cmp
mov
aaa
hlt
inc
in
ficompl
rcrl
mov
jg
sarb
out
mov
out
sarl
shlb
pop
arpl
inc
shll
lahf
and
mov
fiaddl
ficompl
loop
out
fidivrl
cmc
cmpsb
leave
nop
or
shrb
jbe
je
jbe
jle
js
icebp
loopne
imul
call
rolb
leave
into
shl
loopne
roll
push
rcl
mov
mov
cmp
or
and
pop
xchg
add
out
outsb
aad
pop
pop
mov
mov
cld
jns
cld
push
sbbb
iret
mov
in
adc
cld
outsl
push
aad
fildll
lahf
std
or
leave
aad
mov
addr16
scas
xchg
fildl
lret
or
clc
pop
xchg
jne
mov
or
and
mov
or
fisttpll
mulb
insb
and
imul
mov
or
jg
scas
mov
cmp
fldcw
mov
sub
push
mov
outsl
cld
pop
repz
mov
cmp
scas
push
or
aad
dec
mov
sub
ja
int3
xchg
enter
loop
mov
ljmp
add
scas
dec
lret
rolb
mov
les
mov
cmp
mov
jne
cli
loop
mov
mov
mov
adc
call
rcrb
mov
and
xchg
repnz
faddl
mov
pop
dec
fsts
stos
jp
call
arpl
lahf
stos
dec
add
jmp
or
jnp
mov
xchg
xor
push
arpl
icebp
inc
and
dec
lods
pop
mov
jbe
ja
sbb
and
fsubs
jle
lret
clc
jle
push
lds
or
adc
fnstenv
mov
push
mov
rcr
out
out
push
fsubr
scas
pop
or
fistps
xchg
mov
cmc
je
adc
add
faddl
mov
dec
pop
out
mov
jmp
fwait
mov
mov
push
lds
xchg
push
mov
mov
push
shlb
pop
daa
std
jle
mov
scas
call
sbb
push
mov
add
sbb
mov
loop
or
sub
dec
icebp
sbb
stos
or
xchg
xor
fiadds
popf
dec
dec
and
mov
mov
fimuls
rcll
ljmp
or
sub
cmc
fwait
popa
cld
js
es
sub
iret
pushf
mov
cs
xor
pop
rclb
inc
push
outsl
pop
outsl
inc
and
cltd
ret
mov
inc
imul
or
fidivrl
sbb
lcall
cltd
test
adc
mov
das
cmp
movb
adc
jbe
jl
sub
pop
aam
test
and
dec
cli
cmc
mov
mov
or
jecxz
ja
jno
in
sbb
add
sub
loop
div
lret
mov
mov
push
stos
mov
xor
cmc
ds
out
fcomip
cmp
inc
mov
nop
addb
sbb
mov
inc
cmp
mov
test
cld
pop
cmp
xor
fwait
rcr
les
cld
aam
addr16
cld
or
sbb
addr16
test
pushf
jns
mov
shlb
rorl
outsl
sahf
mov
cmc
cmp
xor
mov
mov
mov
into
lahf
int
pushf
cmp
stos
or
xchg
dec
outsl
pop
iret
push
xchg
scas
cmpsl
and
testb
cld
inc
pop
dec
and
jp
jnp
fisttpl
xchg
push
mov
adc
outsl
mov
shlb
iret
xchg
jp
daa
dec
push
iret
out
aad
cld
push
aam
mov
es
mov
ds
cli
rclb
outsb
add
stos
iret
loope
fidivs
aad
add
or
enter
adc
addr16
clc
push
ret
sub
test
adc
iret
filds
sub
fimuls
inc
sub
pop
jne
popl
test
xor
call
out
push
in
es
in
js
int3
scas
lret
sbb
jmp
mov
into
and
jp
repnz
imul
sbb
subb
and
fucomp
and
js
aaa
jbe
jg
rcrl
mov
movl
ja
inc
and
lcall
sub
pop
adc
paddusb
repz
jno
repnz
mov
push
orl
jo
dec
or
jns
xor
push
clc
lahf
sub
mov
inc
push
ja
cmp
and
add
aam
sahf
pop
rolb
lods
out
outsl
lds
lods
and
in
xchg
leave
cmp
loop
xorl
in
dec
out
subl
fstpl
call
mov
pop
stos
je
imul
cmp
mov
ds
arpl
in
inc
and
and
iret
xchg
cmpb
repz
inc
fcomip
cmp
lea
sahf
xlat
clc
sti
pop
push
sub
lcall
push
inc
pop
scas
in
mov
lods
mov
ljmp
movsb
cmpsb
sub
inc
rolb
xchg
push
push
shr
mov
idivl
pop
mov
sbb
lret
rcl
mov
mov
push
fmul
sub
inc
push
sub
fcmovbe
xchg
mov
sub
nop
ljmp
pop
adc
jecxz
push
aam
or
loop
loope
icebp
cmp
aam
call
add
rcl
mov
gs
ljmp
lret
andb
mov
adc
insl
pop
fcom
rcrb
push
pusha
cmp
lock
out
outsl
sub
fnsave
mov
rol
mov
shlb
sbb
popf
dec
stos
ljmp
mov
mov
mov
adc
sbb
push
adc
negl
andl
sbb
push
sbbl
xchg
js
push
fucompp
cmp
push
insb
in
jmp
leave
addr16
sub
jl
fisubrl
shrl
bound
sbb
sbb
ss
and
add
scas
ficompl
in
or
loope
or
jae
jne
lds
push
data16
int
jae
mov
xor
or
testl
xorl
mov
ljmp
jne
or
scas
push
scas
in
shlb
add
and
push
mov
rorb
adc
or
push
lahf
lds
into
pop
imul
imul
daa
stos
leave
aas
scas
xor
aad
xor
inc
pop
jb
mov
lods
cmp
insb
or
and
insl
shrl
inc
sub
mov
jl
adc
fstps
xor
cmp
sub
insb
cmp
fimull
xchg
and
out
dec
enter
and
fcompl
imul
xlat
pop
test
in
aaa
lock
xor
sti
push
pop
jo
movsl
adc
xchg
fsubrl
push
mov
mov
jae
cmp
mov
mulb
mov
mov
push
repnz
adc
clc
test
stos
sub
pop
jno
pusha
push
aam
imul
fs
icebp
out
xor
sub
push
loop
hlt
divb
jo
ds
aaa
push
mov
movsb
xchg
dec
es
jl
mov
jo
arpl
lret
into
jmp
fimuls
mov
pop
hlt
jno
into
push
jbe
jno
dec
cmp
hlt
xchg
mov
add
or
mov
jo
push
sahf
enter
jo
fcoms
dec
notl
sub
add
ficompl
cld
mov
xchg
mov
icebp
in
xor
or
cmc
lock
les
mov
sub
sbb
adc
adc
pop
mov
aad
mov
aas
dec
mov
xor
mov
mov
fisttps
jmp
adc
mov
shl
mov
adc
pusha
pop
push
mov
call
fsubrs
mov
pop
or
inc
lahf
add
adcb
outsl
shll
sbb
test
xchg
in
pop
insl
pop
repnz
inc
add
das
mov
mov
push
sbb
rol
in
push
addl
aaa
aaa
sub
push
add
push
repz
push
loop,pn
lcall
jne
and
loope
repz
loope
or
push
mov
adc
jae
xchg
repnz
popf
mov
sarb
xchg
sbb
jecxz
fwait
sub
mov
pop
sub
loope
scas
dec
xchg
dec
notb
push
pop
dec
cld
in
mov
push
imul
out
incb
xlat
adc
or
xchg
mov
sub
xchg
xor
adc
fmul
jns
add
out
adc
out
inc
scas
hlt
cmp
sti
stos
jae
mov
shll
imul
fwait
mov
dec
mov
add
inc
loope
sbb
std
sub
pusha
push
adc
lret
pop
shrb
or
aam
adc
outsb
in
cltd
adc
aas
sub
adc
mov
rcrb
jno
enter
add
mov
lds
iret
fimuls
pop
out
dec
divb
lea
int
add
lods
icebp
dec
pushf
mov
cs
pop
jp
mov
test
outsl
stc
fisubs
add
jb
in
test
out
inc
cwtl
add
sub
mov
leave
mov
add
xor
ss
cmp
into
inc
and
test
mov
test
jle
mov
sub
movb
int
sahf
add
sub
mov
leave
mov
add
xor
ss
arpl
into
inc
pushf
push
scas
cmp
in
lds
cmp
testb
or
sub
mov
leave
mov
add
cmp
mov
test
out
inc
sbb
sub
rolb
sub
mov
testb
sub
mov
in
call
lcall
add
push
es
inc
mov
push
ret
pop
loopne
call
xchg
inc
scas
mov
cmp
in
cltd
cmp
mov
orl
test
or
call
jo
scas
pushf
mov
mov
nop
loopne
push
es
inc
mov
push
ret
push
loopne
call
popa
inc
scas
mov
cmp
in
cltd
pop
mov
negb
cmp
xchg
iret
or
call
push
ds
pushf
mov
mov
jle
outsb
push
es
mov
cmp
xchg
iret
push
ret
dec
loopne
call
mov
test
scas
add
roll
testb
push
es
xchg
iret
int
mov
scas
call
mov
outsb
pushf
mov
dec
add
cs
es
and
into
ret
jp
scas
xchg
int
in
add
roll
divb
sub
dec
mov
int
pop
loopne
call
push
outsb
pushf
mov
dec
add
loopne
push
scas
push
mov
sbb
xchg
mov
or
adc
daa
xchg
lds
dec
roll
mulb
add
add
mul
add
mov
movsl
out
ret
subl
sub
pop
ret
jmp
ffreep
jne
jno
pop
lds
cmp
das
lds
lds
out
iret
lds
nop
lds
lds
dec
lds
adc
cld
fadd
rol
mov
scas
test
mov
or
add
int3
mov
mov
cmp
dec
inc
aas
into
xchg
inc
orb
incl
lret
add
lods
andb
pop
nop
out
pusha
dec
jno
orl
lock
into
xchg
scas
test
lcall
mov
xchg
add
jno
pop
add
imul
pop
subl
lods
xchg
push
mov
cmpb
ljmp
stc
cmp
cs
addr16
call
rorl
pop
cld
mov
rol
xchg
inc
mov
jo
into
xchg
dec
or
insl
dec
shrb
lds
fistl
repz
fwait
inc
pop
lods
mov
jmp
cld
inc
cltd
scas
loop
addr16
in
mov
dec
rclb
clc
lret
push
xor
or
ret
pop
cmp
pop
shl
or
scas
out
das
sti
loop
enter
fiadds
into
ficoms
filds
mov
test
ja
xchg
aad
shrb
ret
fisttpll
pop
popf
ds
and
sbb
cld
cmp
add
jae
gs
push
mov
xlat
sbb
inc
notb
jb
not
adc
push
jl
cs
pop
cld
je
sbb
or
clc
add
mov
lds
out
inc
or
pusha
dec
fistpll
sbb
xorl
mov
mov
out
push
sarl
movsl
adcl
or
mov
sarb
add
testb
push
jbe
outsl
rorb
lcall
jle
shr
ss
stc
ja
shlb
cmp
jg
add
mov
jg
add
push
sub
scas
sarl
add
mov
jg
add
lods
bound
scas
sarl
add
mov
jg
add
sahf
sarl
xor
fildll
mov
xor
mov
add
mov
jg
add
mov
xchg
fdivl
sub
scas
sarl
add
mov
jg
add
xchg
bound
scas
sarl
add
mov
jg
rcl
mov
lret
sarb
inc
add
movsl
push
jge
mov
lock
cmc
int
aaa
je
sbb
imul
int
je
cmp
mov
loop
mov
cmp
out
fisubrs
cmp
ds
mov
push
add
push
scas
fiadds
cltd
mov
fidivs
mov
test
or
and
mov
cmp
sbb
mov
fldl
jo
mov
xchg
mov
pop
ret
push
loopne
call
fs
sub
rcrb
scas
cltd
pop
mov
mov
xor
pushf
mov
sbb
push
fnsave
iret
sahf
ret
mov
jle
cmp
mov
ds
mov
push
add
ficomps
lods
call
mov
sub
aaa
cmp
sbb
push
fnsave
cmp
xchg
iret
sahf
ret
popa
loopne
call
jbe
ds
mov
push
add
push
fimuls
lods
call
mov
push
jo
negb
sbb
xor
ss
cmp
sahf
inc
inc
add
sub
rcrb
ss
movb
loopne
fiadds
test
popf
loopne
mov
and
jg
jp
shl
add
mov
cmp
sbb
xor
push
fisttpll
cmp
xchg
iret
sahf
ret
mov
pop
mov
ds
mov
push
add
ficoms
lods
call
pop
lret
jl
mov
testb
cmp
sbb
std
leave
mov
add
sbb
pop
inc
inc
add
sub
cmp
fiadds
lcall
xchg
sub
testb
cmp
sbb
fnstsw
cmp
xchg
repnz
cmp
sub
pop
or
add
in
loopne
int3
ds
mov
insb
pusha
inc
dec
mov
inc
or
inc
lret
mov
push
inc
sbb
sti
ss
iret
ss
ss
ss
jo
pop
ss
ss
xor
sbb
adc
cld
ss
shlb
mov
mov
xchg
ficoms
pop
mov
push
int3
push
sar
cli
mov
cli
insb
cli
pusha
cli
dec
cli
aas
cli
sub
pop
cli
or
cli
jmp
lret
cli
sar
cli
mov
cli
imul
cli
dec
cli
inc
cli
sub
jle
insb
faddl
or
mov
pop
jg
test
test
dec
ficomps
ficoml
fidivl
pop
ficoml
cmp
das
ficompl
fimull
int3
sti
ds
mov
jbe
xchg
mov
data16
scas
test
aam
gs
in
jp
adc
rolb
xchg
movsb
sbb
push
ljmp
xchg
push
add
mov
xchg
test
jmp
stos
stos
or
aam
in
enter
in
imul
sbb
jp
fimuls
mov
adc
push
xchg
push
int
faddp
jne
dec
jno
cltd
nop
in
fiadds
call
inc
sbb
inc
jno
xlat
data16
jno
leave
inc
xchg
fwait
and
rclb
pop
sahf
pop
fnstcw
enter
mov
call
ljmp
xlat
fdivrp
out
ficomps
mov
roll
push
imul
outsl
mov
mov
test
xchg
xchg
or
mov
mov
mov
jne
pushf
dec
cmp
fisttpl
xchg
dec
loope
cli
cld
push
fbld
shlb
int3
fmuls
call
ficomps
cli
xchg
in
outsb
xor
jg
ret
sub
data16
in
xchg
std
inc
add
call
jne
in
sbb
std
jle
sbb
push
lahf
xchg
pop
dec
loop
ret
mov
mov
shrl
cmpsl
in
mov
femms
add
jle
mov
ljmp
enter
sbb
mov
aaa
scas
push
into
scas
in
lods
stos
scas
or
push
in
mov
int
rcr
iret
mov
xchg
fdivl
fildll
mov
xor
fildll
xor
orl
sarl
add
mov
jg
add
xchg
sarl
add
mov
jg
add
mov
std
imul
cmp
jg
add
mov
xchg
fdivl
fildll
mov
xor
fildll
xor
orl
sarl
add
mov
jg
add
xchg
sarl
add
mov
dec
stos
pushf
aaa
jmp
inc
out
lahf
adc
adc
test
loopne
fwait
xchg
cmp
mov
push
fistpll
inc
and
and
les
sub
addr16
xor
xor
scas
popf
pop
cmp
xor
add
cmp
mov
cmp
pop
and
pop
mov
fisttps
push
imulb
push
lea
or
mov
adc
int
adc
ljmp
nop
mov
movsl
dec
xor
and
dec
mov
inc
iret
shlb
std
jne
cltd
inc
les
mov
out
jnp
sub
pop
push
inc
add
call
cmp
push
dec
xchg
ja
cmp
mov
cmp
out
out
pop
iret
and
int
mov
hlt
loop
dec
fnstenv
and
imul
bound
inc
int3
add
test
push
orl
pop
ret
out
sub
roll
int3
push
mov
ffreep
xchg
xchg
mov
inc
add
lods
xor
shl
or
sub
push
in
imul
inc
mov
dec
mov
pop
stos
jge
mov
dec
cmp
and
mov
dec
jecxz
cmp
xchg
test
inc
movsl
in
rorl
mov
pop
in
in
jp
ljmp
push
imul
mov
pop
loopne
arpl
lea
sti
inc
imul
sbb
push
fsubs
mov
mov
lret
shlb
outsb
ret
aaa
mov
add
cmpb
add
fcos
mov
scas
jmp
add
cmp
add
dec
stos
outsl
ljmp
inc
roll
insb
push
pop
imul
sub
ja
or
mov
aad
xor
xor
fistpl
push
je
popa
xchg
sub
pop
push
cltd
inc
add
loope
xor
ss
and
cmp
sub
pop
int3
mov
lcall
push
cmp
jecxz
cmp
stc
sahf
ret
arpl
mov
dec
lds
out
push
mov
negb
ja
iret
adc
jge
xchg
xchg
xlat
pop
mov
mov
imul
ret
bound
push
push
in
xor
fidivs
lds
jmp
mov
std
mov
bnd
push
loope
insl
add
fcompl
nop
aam
jbe
loop
in
clc
xorb
push
xchg
js
into
lds
inc
dec
push
mov
inc
fnstsw
inc
es
jp
adc
or
pop
pop
or
test
pop
fcmovu
lahf
mov
ret
xor
fwait
mov
mov
or
push
dec
inc
fwait
mov
xchg
mov
jl
out
fmuls
insl
js
mov
mov
pop
cmp
popa
add
push
cwtl
dec
pusha
pop
je
in
dec
fstl
test
std
pop
test
cmp
dec
lret
sub
ss
inc
repz
add
out
ja
hlt
jnp
test
xlat
lock
repz
lahf
jnp
fisubl
jle
test
ret
dec
xchg
outsb
shll
cld
in
test
cmc
mov
push
pop
mov
mov
dec
loopne
mov
lret
xchg
inc
ja
gs
outsb
push
rclb
mov
dec
and
xchg
adc
jae
jne
push
mov
gs
pop
push
imul
jg
sarb
jmp
push
test
repnz
lret
rcr
faddp
jns
xchg
adc
cmpb
sub
push
or
cwtl
stc
insb
fadd
push
cld
jbe
sbb
insb
cmp
cld
cwtl
es
xor
add
pop
inc
iret
dec
fdivs
in
xor
stc
es
dec
push
out
cli
fmull
shll
mov
rcll
fidivrs
mov
mov
out
mov
mov
push
aam
sub
push
mov
stos
ret
pop
scas
int3
lds
mov
mov
sarb
pop
adc
shll
sahf
lds
or
inc
leave
out
repnz
cld
cmp
sbb
orb
nop
dec
out
out
mov
dec
mov
xor
xor
push
fisttpll
mov
movsb
shl
jecxz
sbb
or
ret
mov
jle
push
xor
mov
in
adc
fdivrl
ret
fucomip
xor
std
sbb
mov
inc
ror
repnz
lds
int
xchg
daa
int
ja
mov
xchg
adc
mov
mov
inc
add
jne
test
pop
jno
movl
in
pushl
ret
add
mov
fidivs
mov
ss
lret
lods
hlt
lahf
cmc
push
popa
lods
xor
arpl
lods
cmc
repz
es
lret
sti
push
sahf
out
movsb
pop
out
clc
out
ficomps
mov
mov
or
sub
test
loop
cltd
mov
arpl
cmp
js
jg
mov
xchg
inc
add
lods
clc
mov
out
xorl
xlat
mov
test
or
scas
fadds
shrl
call
push
out
adc
fcoml
outsb
mov
notb
pop
mov
sub
xchg
dec
push
fs
push
fmull
mov
mov
leave
cltd
push
rorl
call
add
sub
push
sahf
loopne
out
cmp
nop
ss
sahf
outsb
mov
frstor
imul
out
movsl
clc
jg
sarb
mov
sub
ja
idivb
repnz
scas
jp
in
sub
cs
xchg
shll
mov
add
loop
xchg
in
pop
testl
add
fsubl
sbb
fsubr
sarl
test
sub
mov
mov
mov
rcrl
mov
into
or
repnz
shrl
mov
shrl
mov
repnz
xchg
add
cld
or
jae
xchg
lret
test
pop
shrl
fisubrl
shlb
adc
jl
jle
call
adc
or
sbb
call
out
inc
push
clc
in
ret
ret
cmp
jae
and
mov
fildll
xchg
dec
inc
jmp
lds
or
cmc
into
pushf
fadds
fwait
cmp
and
aaa
int
fsts
loop
jl
lods
push
push
jle
fisubrl
mov
sti
pop
or
dec
cmp
push
mov
ds
aam
inc
cld
pop
testl
cli
rclb
stos
lret
icebp
fnstenv
jae
daa
xor
xor
jle
scas
fxch
mov
cltd
adc
int3
fldt
mov
arpl
sar
aam
sbb
mov
mov
add
jbe
mov
loope
push
xchg
cs
shlb
rorb
cmc
gs
pop
push
cmp
movsl
mov
int
xlat
pusha
add
cmp
add
ds
and
pop
mov
mov
push
stos
mov
ficoml
cmc
or
add
lcall
push
pop
test
cs
mov
mov
mov
nop
push
mov
daa
sbb
sbb
imull
push
jne
dec
stos
and
movsb
mov
out
jecxz
int3
xchg
mov
lods
cs
cs
jb
push
xor
push
adc
push
dec
jle
push
lret
and
into
jb
popa
das
jp
or
rcr
mov
xchg
xlat
loop
push
fidivrs
mov
or
or
cltd
ret
mov
pop
popf
or
xor
arpl
or
cld
aam
insb
icebp
mov
mov
pop
mov
mov
sbb
jns
mov
jl
adc
or
rclb
mov
mov
mov
and
xor
pop
clc
push
add
pop
sub
fs
mov
imul
add
sbb
mov
js
jmp
add
mov
dec
ret
notl
fistl
lcall
add
add
jle
xor
mov
fbstp
js
repz
push
add
push
push
imul
push
xor
xor
outsb
push
xchg
dec
fsubr
cmc
mov
sahf
cmp
and
xchg
xor
sbb
or
idivl
out
jne
ss
pop
jle
data16
subb
mov
sub
sti
push
imul
imul
mov
loope
and
dec
mov
es
stos
sarl
jl
add
xchg
test
movsl
dec
adc
sbb
in
xlat
mov
cmp
mov
jge
lods
cs
stos
ja
sahf
push
stos
hlt
pop
cli
sbbl
test
out
mov
and
xchg
add
lahf
jmp
mov
stos
clc
aam
outsb
idivl
cltd
or
cmc
shrb
pop
xchg
ss
cli
jns
rorl
cmp
lahf
and
xchg
pop
sbb
lock
and
aam
jno
gs
jp
js
jb
cld
in
mov
add
inc
fnstcw
or
mov
outsb
dec
ljmp
sub
mov
inc
or
jb
xor
lcall
or
addl
jo
adc
cli
out
add
ficomps
mov
inc
adc
xchg
xor
aad
or
xchg
lret
fstp
adc
stos
out
xchg
daa
sahf
pop
or
ficoms
add
ja
out
sub
cmp
mov
mov
lods
jp
das
add
or
fimull
push
jecxz
cltd
cmp
lock
sbb
loopne
bnd
in
test
dec
repz
pop
aam
push
cmp
mov
adc
int
sbb
cli
pop
sbb
lcall
pop
loope
sbb
test
call
adc
sub
lcall
rcrb
out
ret
fsubrp
cmc
shll
sahf
sbb
test
adc
inc
movsb
jge
or
pop
fstpl
add
icebp
push
test
push
sub
inc
adc
or
mov
xor
gs
sub
rol
xlat
iret
or
and
ljmp
mov
out
clc
add
ret
pop
stos
xor
aaa
fsubp
mov
jl
dec
imul
mov
sub
inc
mov
mov
sbb
lret
inc
and
mov
in
jne
jmp
faddl
mov
leave
hlt
adc
rol
push
mov
loopne
roll
mov
test
or
xor
hlt
mov
in
addr16
dec
fsub
sbb
push
out
cli
arpl
and
call
mov
out
xor
mov
ss
pop
mov
inc
push
adc
or
mov
mov
mov
pop
out
scas
aam
adc
pop
lahf
add
incb
sbb
or
sbb
cwtl
sbb
inc
icebp
cld
fildl
push
push
cld
pop
popa
cmpsl
pop
mov
pop
inc
cli
pushf
cmpsb
imul
loopne
fsubrp
data16
mov
xchg
jl
nop
icebp
iret
pop
std
daa
rorl
xchg
stc
popf
fimull
push
mov
cmp
subb
loop
dec
mov
xchg
lret
jmp
push
vphaddbd
push
inc
rolb
mov
rcl
enter
ret
mov
inc
cmpsl
in
jnp
sbb
out
push
sarb
and
push
rcr
mov
dec
fstpt
mov
cmp
mov
jl
cmc
pop
mov
dec
outsb
mov
mov
loopne
ret
andl
mov
mov
and
rcrb
rcr
mov
push
cs
sbb
or
cs
xchg
ja
or
fstps
pop
outsl
cmp
pop
movsb
repnz
pusha
movsb
ljmp
inc
cmp
jne
je
adc
or
cld
outsb
fmul
and
rcrb
inc
pop
xor
cmp
sub
cs
cmp
mov
inc
aam
loopne
aam
hlt
sub
mov
and
inc
repnz
sub
sbb
ror
xor
xchg
testl
repnz
int
outsl
aam
in
lods
scas
jmp
es
in
outsl
aam
jle
mov
mov
xor
loop
dec
mov
push
add
xor
adc
pushf
jne
in
push
jns
aad
mov
dec
aam
lahf
test
not
cmc
test
cmp
or
negb
notb
xchg
idivb
cmp
movsb
jae
out
in
sbb
fcomip
rol
ret
adc
lcall
jbe
stos
inc
mov
mov
hlt
push
in
mov
inc
jne
outsb
inc
fadds
inc
jb
pop
mov
cmp
push
enter
pop
fsubr
loopne
mov
enter
scas
inc
fwait
xchg
hlt
lock
loope
sub
ljmp
adc
repnz
mov
xor
inc
call
jo
fwait
inc
xor
add
loopne
mov
dec
xchg
subb
mov
popa
inc
cmp
or
add
push
or
inc
xchg
lea
or
imul
cmp
xchg
pop
mov
cmp
loopne
mov
dec
inc
leave
lahf
ficomps
das
push
or
cmp
mov
mov
push
lds
ret
or
std
and
orl
mov
outsb
inc
or
fdivl
sub
or
rclb
mov
lret
stos
add
aam
out
or
sbb
clc
popf
sbb
aam
push
lahf
dec
jno
xchg
sbb
rorb
into
movsb
imul
sbb
or
sub
js
adc
dec
test
xchg
or
cmpsb
in
or
shrl
sbb
dec
fsubrp
dec
enter
movb
fadd
cmpsb
mov
jle
pop
adc
aaa
out
pushf
mov
fiadds
rclb
rcr
cltd
mov
xchg
dec
sbb
loopne
add
inc
js
cs
mov
mov
ret
fadd
cltd
ret
sub
adc
push
sub
add
inc
shrl
test
popl
mov
lds
mov
fadd
adc
cltd
mov
inc
daa
addl
push
iret
mov
mov
dec
cli
cmp
mov
sarl
and
sarb
jo
or
rcl
lods
push
es
sarl
dec
adc
adc
mov
in
test
pop
inc
aam
mov
fdivr
mov
inc
mov
int
ret
sti
inc
cmp
xor
mov
bound
inc
out
jns
in
shl
xchg
and
cltd
sarb
stos
hlt
cmpsb
add
leave
pusha
cmp
sub
and
fidivrs
mov
idiv
js
xchg
mov
mov
lds
mov
lds
mov
incb
jns
inc
mov
xchg
out
xchg
lcall
fnstsw
jmp
xlat
cli
mov
pop
je
repnz
repnz
in
lcall
mov
pop
mov
sub
mov
outsb
cmp
fcmovnbe
out
xchg
iret
push
in
jg
add
repnz
inc
push
inc
pop
mov
adc
fidivs
test
mov
mov
mov
jo
out
icebp
divb
adc
mov
lcall
mov
sub
inc
pop
jo
shlb
mov
mov
in
loope
jo
loope
mov
mov
and
out
gs
mov
add
inc
ds
add
jo
inc
or
loope
mov
cli
ret
sbb
inc
jmp
stos
mov
xor
std
outsb
cmp
insb
adcb
push
cmpsb
mov
jmp
pop
xchg
into
sub
inc
pusha
rcr
iret
mov
mov
push
jp
cli
pop
mov
dec
jp
in
in
mov
or
mov
add
shlb
rolb
jbe
pusha
inc
jno
mov
pop
rolb
mov
mov
shlb
iret
inc
popa
hlt
add
js
sarb
sub
mov
sub
mov
mov
pop
sub
mov
inc
adc
mov
mov
add
testl
int
push
mov
mov
imul
adc
lods
or
js
dec
cmpsl
aam
mov
mov
pop
inc
sti
fdivrs
into
test
into
popa
inc
cmpsl
cld
cli
mov
sbb
into
mov
cmc
add
xor
je
cmp
outsb
add
mov
lock
mov
ret
jnp
cli
inc
shlb
in
push
cmc
mov
imul
or
add
adc
into
push
in
inc
pop
out
xorl
pop
testb
sarl
outsb
push
xor
into
cltd
xor
inc
sub
lock
ss
daa
dec
jp
sub
and
sub
repnz
add
enter
xlat
push
bound
adc
sub
mov
dec
mov
pop
clc
mov
popf
mov
popf
xchg
rclb
push
fs
aam
push
sbb
out
push
mov
inc
sahf
pop
insb
pusha
pop
dec
scas
add
lret
push
sbb
cs
adc
dec
sbbb
inc
movsl
jo
sub
pop
neg
xchg
jns
loopne
aam
stos
stc
mov
scas
repz
out
in
hlt
add
add
ljmp
lret
sbb
ss
nop
shl
sub
jmp
and
xchg
xchg
xorb
push
cwtl
cld
sahf
outsb
lahf
push
arpl
int
jae
mov
add
enter
dec
sbb
sub
mov
out
orl
jnp
ss
push
xlat
mov
dec
cmpsb
lods
test
xchg
adc
ss
ds
test
add
or
pop
dec
add
mov
jo
repz
scas
orl
add
in
xor
aad
dec
inc
mov
jae
or
out
fistpl
sub
pop
decb
loop
in
dec
lock
add
imul
push
inc
xchg
jo
xchg
dec
mov
xlat
into
scas
stos
xor
mov
sbb
mov
push
lret
std
jl
sub
inc
jmp
outsl
adc
repz
test
orb
loope
jae
mov
loope
push
push
fistpl
in
fstl
in
xor
ret
int
loope
xchg
dec
xor
dec
xor
rorb
aam
call
mov
push
stos
add
mov
sbbb
xchg
push
bswap
jle
loop
jno
mov
iret
xor
ds
adc
addl
sbb
and
sahf
push
out
fldt
aam
aam
insb
push
xor
mov
aam
or
inc
mov
add
out
cmp
dec
pushf
add
pop
dec
mov
lock
jl
in
pop
jno
push
sbb
push
ss
inc
push
shr
or
dec
xchg
sub
sub
cli
sbb
mov
push
loop
and
adc
and
pop
cld
shlb
mov
aad
sub
dec
jge
lahf
push
inc
mov
out
pop
xchg
push
push
mov
pop
lahf
sbb
sub
cmpsl
nop
stos
js
std
out
xchg
inc
mov
xchg
inc
adc
sbb
fstpt
imul
js
jbe
stos
lds
hlt
jg
pop
or
hlt
push
fisubrs
aam
sarl
insl
in
scas
jo
or
outsl
or
dec
inc
dec
aam
sbb
mov
or
sahf
mov
rcr
adc
shl
fidivs
pop
ror
mov
adc
es
out
fs
add
scas
pop
xor
andl
push
sarl
xchg
cmp
adc
pop
add
mov
out
jp
inc
stc
xchg
xchg
adc
mov
mov
add
sbb
dec
iret
pop
jbe
lcall
and
int3
fstl
push
inc
test
cmp
adc
xchg
fdivp
cltd
xlat
jo
mov
shl
rorb
loop
mov
mov
inc
cltd
stc
lahf
xchg
add
sbb
rcll
adc
insl
push
out
and
jp
imul
mov
loop
and
mov
dec
add
lret
roll
add
sahf
mov
jp
andb
out
push
adc
mov
pop
fstl
int
aaa
jg
shll
loopne
pop
les
pushf
lahf
mov
in
xchg
add
pop
cmpsb
js
xor
outsb
adc
sbb
xchg
aaa
clc
loopne
cmp
shl
int3
fwait
sbb
mov
mov
inc
xchg
loopne
cwtl
sarb
push
or
hlt
xchg
inc
pop
icebp
mov
or
stos
dec
in
sub
inc
data16
cltd
lret
lds
inc
outsb
xlat
je
mov
sub
push
into
or
push
sbb
inc
inc
lahf
rorb
push
test
add
mov
cwtl
xlat
jmp
and
cwtl
roll
loop
fmul
ljmp
or
inc
dec
inc
add
loopne
mov
mov
sub
ljmp
mov
push
mov
ds
clc
push
dec
cwtl
or
mov
push
shrb
adc
jmp
iret
mov
mov
sub
or
cmc
sub
rol
xchg
outsl
cmpsl
xor
inc
ret
insl
ret
rcl
je
leave
rcrb
test
cli
xchg
sbb
mov
mov
dec
mov
in
mov
mov
adc
ds
test
push
mov
cltd
jl
ja
add
mov
or
mov
adc
mov
cmp
stos
jae
inc
cmp
aam
mov
pop
adc
cmp
cmp
sub
out
popa
sbb
sarb
jg
lret
adc
inc
mov
cld
cli
out
addb
and
rcr
out
das
dec
jecxz
inc
jg
xchg
mov
mov
cmpsb
push
mov
fs
pusha
mov
test
pop
fimull
not
mov
push
fldl
sub
mov
into
popf
rcr
xchg
cld
xor
xlat
mov
ja
inc
rol
jmp
out
vmovss
outsb
mov
pop
cwtl
scas
jne
add
mov
xchg
xchg
pop
movsl
mov
mov
in
mov
lret
and
inc
mov
mov
add
das
loope
lss
cmp
adc
mov
fildl
ss
rolb
sub
rcll
add
inc
xor
andl
cwtl
pop
mov
out
out
adc
test
xchg
xor
mov
into
rolb
adc
orl
mov
jnp
sub
loope
enter
adc
xor
iret
ret
inc
loop
inc
data16
jmp
lret
imul
leave
inc
call
adc
shr
cs
xlat
fs
and
mov
cmp
lcall
push
stc
dec
or
push
sbb
repnz
jo
mov
fists
adc
push
mov
cli
aaa
out
xchg
dec
ss
cmp
push
inc
push
lretw
sbb
cmp
fidivrl
loop
lcall
xchg
faddp
fsubrs
xchg
dec
scas
adc
adc
xchg
cli
xchg
jne
stos
push
cmp
adc
ss
jle
mov
dec
lcall
xlat
inc
repnz
or
inc
and
pop
lret
pop
jns
popf
pop
push
pop
loopne
int3
jmp
xlat
pop
cmpsb
mov
out
sahf
dec
ss
aad
adc
and
orl
cmc
pop
stc
sub
mov
add
adcb
cmp
push
xchg
scas
dec
mov
ret
lock
stos
aas
lea
and
clc
pop
push
loop
jmp
and
add
pop
dec
call
repz
cld
arpl
pop
add
adc
push
sub
mov
lret
dec
push
sbb
push
jg
mov
mov
lret
testb
sub
add
loopne
pop
push
loop
int3
pop
popf
inc
punpcklwd
ret
cmc
in
inc
stos
xchg
into
popa
fwait
add
stos
scas
pop
inc
popa
lods
loopne
stos
movsl
add
aaa
rorb
push
adc
cmp
daa
outsb
adc
lods
in
sub
inc
jmp
inc
jae
loope
add
mov
stc
fnsave
adc
enter
aad
add
xchg
iret
int3
lret
test
mov
fistl
in
mov
lahf
inc
fsubrp
subl
fmul
mov
mov
pop
jae
or
and
loopne
stos
xor
fnstsw
dec
fldl
xor
jno
ret
lock
xor
lds
lds
call
lds
leave
fistpll
int
push
int
lods
int
xor
cmc
int
sub
vcvtdq2pd
inc
push
add
mov
inc
mov
out
mov
mov
lret
push
mov
daa
add
mov
xchg
in
or
mov
aam
mov
mov
lret
push
mov
daa
add
jbe
test
sahf
in
mov
adc
push
push
dec
outsb
loop
movsl
or
fisttpll
lds
lea
lock
jo
bound
scas
sahf
mov
in
cmp
sarb
out
sarb
lret
jo
in
iret
adc
fwait
fs
mov
inc
es
outsb
stos
loopne
xlat
mov
push
push
out
sbb
out
fistpl
pop
pop
loopne
aam
mov
aaa
into
shl
xor
lahf
and
cltd
sbb
xor
ret
jne
add
mov
add
faddl
shll
and
xor
jne
mov
mov
ret
dec
xchg
sbb
es
jne
mov
in
testb
mov
ja
cmp
lock
stc
cli
cmp
fiadds
rcrb
cmp
into
into
enter
test
sti
in
rcrb
and
jno
jecxz
outsb
cli
pusha
mov
mov
mov
fbstp
fidivrl
stos
mov
push
mov
rorb
push
mov
dec
in
out
adc
sbbl
cmp
adc
ja
push
cmpb
out
test
cmpsb
push
pop
cmp
aam
test
js
cmp
sbb
out
mov
mov
xor
push
test
push
mov
add
popf
mov
sbb
jae
adc
in
mov
inc
icebp
out
loop
ret
int3
cltd
mov
ffreep
jb
sbb
out
push
out
add
jg
dec
loopne
stos
daa
aam
clc
loop
jns
xor
add
sub
out
lahf
mov
ds
fcomi
idivb
xchg
addr16
mov
pop
jo
rcl
mov
add
cld
adc
aas
mov
fsubl
pop
inc
inc
test
stos
rcl
dec
lods
sbb
and
xchg
push
test
mov
pop
push
test
sti
sub
cmp
ljmp
adc
inc
cltd
sub
jnp
and
adc
xchg
sahf
mov
dec
cld
roll
hlt
pop
push
pop
sub
test
dec
lods
mov
mov
cmp
shr
push
pop
lods
rorl
ljmp
mov
call
push
test
jg
scas
mov
js
xor
andl
sbb
add
jns
popa
mov
lret
ds
outsl
sbb
add
lds
daa
cmp
arpl
mov
jg
cli
not
lahf
mov
sarb
aam
popf
scas
mov
subl
jg
int
sti
shrl
cmp
dec
cli
mov
adc
xchg
sbb
xor
adc
out
je
clc
mov
sub
repz
cli
sbb
sahf
adc
aam
inc
out
jns
cmc
mov
aam
fsubrp
out
mov
pop
sub
into
lds
dec
xchg
es
cmp
sub
push
aaa
sub
aam
jno
or
hlt
xorb
lock
imul
sbb
jbe
mov
jbe
adc
mov
mov
test
adc
sbb
dec
mov
cs
push
in
sbb
inc
inc
adc
out
out
jmp
mov
enter
inc
daa
inc
push
enter
fdivl
push
mov
jp
jno
pop
sbb
dec
lret
lds
bound
push
add
mov
pop
ljmp
ds
mov
and
mov
andl
fidivs
test
mov
inc
mov
pop
lds
add
jle
out
jge
pop
xor
sub
adc
cmp
sbb
out
aad
lret
push
imul
insb
jno
ss
add
xor
dec
adc
out
rclb
xchg
ret
addr16
sarl
outsb
push
pusha
mov
ret
in
inc
sbb
add
xchg
push
movsl
push
aam
test
push
subb
push
cmp
mov
gs
iret
pop
in
jg
and
adc
mov
dec
inc
into
testb
xchg
push
mov
pusha
in
mov
inc
out
clc
adc
push
inc
push
push
jb
mov
and
into
sbb
aam
sub
fdivl
leave
es
push
movsl
inc
and
mov
lea
mov
adc
aas
rorl
loop
pop
test
repnz
cmp
fs
lods
mov
idivl
les
fistpl
fistpl
or
aad
clc
cmp
cltd
dec
das
adc
sbb
and
in
sub
cmp
test
sar
loope
pop
push
pop
jp
pop
cmp
rcl
xor
mov
jge
sub
sbb
xor
pop
mov
std
bound
jle
xlat
adc
out
xchg
mov
in
stc
xchg
xchg
xor
clc
dec
lret
cltd
sbb
xchg
add
add
lock
rclb
pop
pushl
int
fldt
cmp
lret
jg,pt
lods
movsl
or
xchg
push
mov
cmp
mov
inc
outsl
and
rcll
fneni(8087
movl
jne
pop
sarb
and
aad
js
fisttpl
std
lret
mov
dec
std
rcr
inc
xchg
mov
incb
sbbb
mov
push
lahf
int3
clc
outsb
cltd
mov
mov
xchg
push
bound
cmp
imul
jle
mov
shll
in
lahf
bound
popf
jge
daa
or
mov
mov
jg
pop
mov
out
inc
mov
mov
fstl
mov
ret
test
push
divl
outsb
movsb
leave
es
ss
ffree
movsb
leave
cmp
into
outsl
test
dec
ja
inc
mov
xor
out
mov
sbb
mov
frstor
add
loopne
movsl
mov
mov
movsl
sarb
cmp
and
adc
adc
bound
cmp
inc
cmpsb
sbb
out
and
outsl
mov
ffree
and
push
xchg
mov
adc
inc
faddl
icebp
lahf
cwtl
popf
sbbb
dec
jmp
mov
js
push
je
adc
stos
xchg
and
aam
ficomps
xchg
mov
out
testb
loope
mov
and
pop
cmpsb
idivb
xor
int3
insb
inc
fiaddl
pushf
jnp
int
xchg
testb
enter
or
or
ret
lods
stos
add
in
adc
pop
adc
jne
out
xchg
ljmp
leave
mov
sarl
stos
lods
test
test
mov
xchg
inc
fisubs
cmp
dec
inc
cmp
mov
mov
cmp
mov
jle
leave
sarl
rcrb
pop
in
mov
push
outsl
out
lods
outsb
cmp
push
sbb
push
fstl
pop
fisttps
sbb
cmp
adc
aam
sub
jb,pt
mov
out
cli
shr
jmp
mov
sub
pop
test
outsl
mov
sub
jle
in
sahf
jmp
mov
dec
stos
pop
jo
shl
cld
call
sbb
xor
lods
mov
mov
fcomip
mov
cli
loop
push
dec
shr
sbb
or
stc
mov
add
fistps
cmp
testb
add
mov
es
mov
adcb
sbb
jp
inc
jle
sub
inc
in
xor
jo
mov
imul
nop
mov
sbb
adc
ja
or
call
and
xchg
jns
push
sub
sbb
cmp
mov
or
call
jge
ja
data16
jbe
or
pop
cmp
fst
and
push
das
lds
inc
cmc
and
lock
ljmp
scas
es
xchg
iret
lahf
adc
adc
add
addl
push
cmp
shr
add
add
cmc
pop
dec
mov
jg
lahf
push
jo
or
xor
mov
ret
pop
shr
jo
aam
add
push
dec
jg
xchg
add
lret
jg
sarl
daa
movsb
pop
sbb
inc
dec
push
jle
loope
mov
mov
int3
xchg
mov
fsubrs
in
xchg
arpl
or
mov
xor
mov
aam
jnp
gs
in
out
call
jecxz
out
shll
test
jg
push
fistpl
dec
popa
rcrb
loope
cwtl
or
jbe
inc
pop
negb
arpl
push
push
or
cmp
inc
arpl
jno
mov
sbb
mov
fadds
lret
popf
inc
xchg
aaa
aam
mov
xor
or
inc
into
scas
and
dec
sub
inc
mov
push
das
into
adc
out
add
dec
jle
push
enter
cmp
cmp
xchg
enter
enter
cmpl
jns
and
int3
scas
mov
stos
cmp
mov
aas
mov
sub
mov
iret
mov
lcall
mov
mov
cs
sub
push
mov
jle
into
jns
popa
add
pop
movsl
push
out
mov
xlat
jns
inc
imul
ret
jbe
out
pop
popa
inc
dec
aad
shl
push
add
imul
ret
fsts
push
mov
out
out
cmp
or
lahf
mov
adc
shl
subb
or
and
sub
fadd
lea
jbe
fimuls
shrl
cld
aam
jp
jmp
adc
sub
jbe
cmp
aam
adc
mov
push
sbb
test
push
xchg
sub
sbb
mov
aam
aaa
xchg
sbb
lds
cmp
rolb
pop
dec
xor
mov
pop
je
push
inc
lds
xlat
loop
insl
jo
xlat
in
addb
mov
sbb
lds
loope
loopne
sbb
ss
cmp
hlt
adc
js
push
es
iret
popa
je
loopne
in
dec
ret
mov
out
mov
rorl
jl
cld
cwtl
jl
ftst
or
adc
loopne
hlt
popa
jbe
or
imul
cltd
orl
pop
mov
fcmovu
push
jle
push
lods
push
into
mov
push
imul
mov
push
xchg
xor
lock
std
jnp
fwait
xor
mov
loope
out
loope
inc
cmp
dec
test
fidivl
push
sub
and
and
mov
loope
into
loope
xchg
lds
fucomp
jge
lds
cmpsb
loope
mov
jge
jbe
arpl
out
inc
gs
xor
push
or
repnz
fcomi
pop
dec
pop
pusha
mov
cmp
push
sub
pop
xlat
pop
outsl
jnp
jg
pop
mov
fs
xchg
jecxz
nop
ja
xchg
shr
mov
sbb
sbb
and
out
jmp
push
lods
or
outsb
mov
ds
loope
out
xor
call
pop
test
fidivrs
fidivrs
mov
and
inc
xchg
loope
imul
jo
dec
sub
fwait
mul
cmp
sub
ficomps
mov
sbb
sbbb
loop
mul
pop
rcrl
push
ljmp
jle
loop
xor
and
lock
mov
iret
inc
hlt
in
test
jae
jle
pop
out
and
fisubrs
shl
push
adc
out
inc
fucom
mov
sahf
mov
out
out
iret
sbb
cmp
test
idiv
mov
in
inc
mul
adc
sbb
fcomps
jg
outsb
cs
test
inc
add
push
mov
sub
cs
push
sub
xor
ja
jg
inc
pop
inc
std
aad
std
hlt
dec
xor
add
icebp
push
mov
mov
sub
aad
xchg
mov
lcall
loop
test
enter
cs
lea
out
loop
or
inc
mov
jg
outsl
mov
aad
jne
xor
adc
pop
outsb
loopne
adc
in
stc
mov
imul
pop
xchg
push
ret
scas
add
outsl
test
mov
aad
in
xchg
add
jae
into
xchg
outsb
sub
cmp
daa
ljmp
xchg
std
or
inc
mov
jecxz
mov
sbb
in
std
pop
ds
pop
xlat
push
dec
pushf
jns
cli
lods
insl
inc
loop
test
fsts
andl
add
push
jb
jo
iret
orl
addr16
mov
imul
sbb
cld
stos
stos
push
pop
pop
jp
mov
imul
shl
jp
es
or
mov
jmp
fwait
daa
push
sub
xchg
jns
lret
adc
loopne
pop
js
mov
inc
xchg
frndint
insb
or
mov
jge
movsb
xchg
fsts
sbb
mov
ja
mov
iret
fmul
aam
btr
pop
dec
fisubrs
sbb
pop
xor
cmpsl
repnz
into
notb
mov
mov
into
sahf
pop
mov
pushf
orl
into
lods
dec
push
mov
push
pop
mov
pop
ljmp
dec
pmuludq
je
and
push
dec
fnsave
xor
ljmp
scas
lods
lret
mov
jno
adc
out
cli
or
fisubrs
pop
popa
push
mov
movsl
xchg
pop
fs
in
jb,pt
jbe
nop
jmp
cmp
dec
dec
and
jge
jbe
and
sbb
sub
in
dec
xchg
cli
cwtl
mull
outsl
mov
imul
fsubrp
rclb
adc
fisubs
or
xor
cwtl
jae
or
out
push
or
or
pushf
mov
jge
xor
or
push
pop
or
mov
jl
adc
sub
jmp
push
rorb
xorl
ret
in
adc
pushf
and
ficomps
dec
in
scas
jg
ss
jle
push
jg
mov
push
insb
pusha
outsl
jecxz
sub
test
loopne
lods
push
push
test
mov
out
push
sahf
inc
mov
mov
xchg
push
lock
shll
adc
lods
add
movsl
sbbb
in
or
mulb
mov
inc
add
subb
call
int
aam
mov
out
inc
in
fidivrs
sbb
and
sbb
cmp
cltd
add
pop
lds
roll
jmp
push
sub
and
jle
add
sub
sub
pushl
pop
ficompl
jb
jmp
cmp
imul
mov
divl
ret
movsl
arpl
out
xor
inc
hlt
inc
in
pusha
arpl
inc
in
jne
cmp
test
enter
cltd
and
push
out
jge
or
cmp
jbe
sarl
push
cmp
push
push
call
sub
push
mov
sarl
shrl
cmp
cmp
loop
mov
sub
fwait
cmp
aad
hlt
sbb
or
mov
std
add
sub
or
ljmp
call
sbb
inc
adc
loopne
orl
mov
add
js
ss
paddusb
insl
fcomps
sbb
and
mov
fisttpl
and
imul
rcl
out
dec
mov
and
das
mov
ljmp
xchg
push
adc
jmp
lret
add
mov
mov
push
dec
js
add
hlt
push
outsb
mov
fcomps
dec
rorl
scas
dec
movsb
shrl
xor
mov
mov
scas
mov
aas
xor
push
mov
imul
push
push
mov
cmp
subl
aad
rorb
cs
imul
es
imull
ds
adc
aas
add
sbb
sahf
hlt
xor
dec
repnz
arpl
les
mov
ljmp
leave
dec
or
loope
and
pop
xchg
push
out
mov
aas
sbb
sbb
cmp
add
mov
clc
push
mov
imul
movsl
popa
xor
mov
inc
aam
out
ds
out
fidivs
mov
cli
and
cld
push
inc
in
mov
push
shll
pop
ds
call
ds
out
mov
std
aaa
inc
fldcw
xchg
push
adc
mov
das
jg
fstl
aaa
mov
cmpsb
push
and
sub
sub
mov
jecxz
outsl
mov
sahf
push
fwait
cmp
aas
mov
or
out
ss
or
mov
into
fnstsw
daa
ret
filds
and
xchg
pushf
fcomip
inc
bound
pop
popf
xor
outsb
or
xchg
pop
inc
mov
ret
das
pop
arpl
jno
hlt
and
subb
jne
rcrb
in
dec
pop
mov
clc
pop
test
sbb
pop
push
imul
mov
rorl
mov
inc
outsl
pusha
sub
cmp
repnz
mov
adc
lds
lret
pop
mov
stos
rorb
jbe
pop
inc
loope
mov
lret
mov
clc
pop
mov
ja
jle
incb
cld
int
xchg
push
ret
pop
xchg
icebp
pushf
in
mov
xchg
in
loop
adc
mov
incb
mov
mov
xchg
adc
pop
dec
out
and
clc
inc
leave
sub
xlat
imul
mov
xchg
data16
das
xlat
imul
xchg
and
roll
add
jg
jns
out
inc
popa
into
or
out
stos
push
or
lods
mov
bound
shll
dec
mov
jne
add
lret
and
sbb
leave
sub
dec
xor
sbb
sub
call
xchg
ror
adc
iret
add
stos
sahf
iret
js
mov
mov
enter
mov
pop
dec
add
fmull
mov
xchg
adc
mov
add
jbe
ds
add
pusha
out
hlt
sbbb
mov
cmc
fcoml
in
push
jle
ss
mov
ror
lret
insb
adc
add
mov
sub
sbbl
and
ds
mov
pop
outsl
adc
inc
xchg
sbb
xor
push
xchg
shll
add
push
outsl
adcb
ds
test
mov
int3
leave
add
jns
popf
mov
cmpsl
cmp
ds
push
popf
sub
les
add
ljmp
lock
jo
sub
sahf
hlt
push
fwait
or
fldt
jecxz
or
adc
add
jg
dec
call
xchg
shr
rol
test
mov
outsl
clc
imul
out
mov
push
xor
push
scas
mov
xchg
push
mov
in
inc
aam
mov
cmp
les
sub
sub
add
xor
loopne
mov
nop
mov
lods
xchg
ds
and
mov
loopne
in
mov
xlat
test
adc
fsubl
mov
xor
add
rcrb
adc
hlt
jl
hlt
jae
cmpsb
xchg
aam
imulb
cmp
dec
pushf
mov
out
mov
xchg
pushf
or
add
pop
add
jno
jne
mov
inc
mov
mov
xchg
add
cltd
loopne
das
push
xchg
movsb
adc
in
fsub
hlt
ret
sbb
sub
jl
std
lds
rcrl
xchg
jle
cld
adc
add
in
and
dec
or
sbb
pusha
imul
mov
adcl
cmp
cmpsb
hlt
mov
push
loopne
insb
int
lcall
test
jns
push
aam
jo
push
mov
repnz
mov
xchg
xchg
sub
lock
loopne
movsl
cmp
push
ds
es
inc
out
ljmp
jle
loopne
adc
rolb
pop
jo
js
and
outsb
sub
xchg
mov
aas
mov
jo
adc
push
jg
scas
mov
sti
inc
sub
jae
mov
cld
push
pop
dec
ret
movsl
iret
mov
mov
mov
call
lock
divb
push
test
out
inc
xor
or
aad
mov
call
pushf
ds
pushf
mov
ss
neg
push
test
or
xchg
test
scas
add
roll
xor
jo
xorb
mov
cmp
mov
test
out
inc
mov
sub
es
leave
mov
loopne
scas
icebp
or
xlat
sbb
loopne
xor
sub
jle
sbb
mov
mov
mov
xchg
push
es
mov
mov
ficoms
leave
mov
lret
xchg
mov
mov
test
jle
mov
adc
and
mov
data16
xor
jle
pushf
mov
ss
es
leave
mov
inc
fiadds
xchg
mov
shl
jg
pop
push
stc
fisubs
cs
cmc
loope
pop
aad
fidivrs
pushf
mov
jbe
js
push
push
arpl
jle
push
sub
cmp
xchg
shrl
mov
cmp
in
dec
data16
orl
insb
add
cmp
call
outsb
xchg
repz
mov
test
out
inc
jp
push
sub
mov
leave
mov
xchg
dec
fsub
jno
lahf
push
inc
fiadds
ds
add
aad
add
mov
mov
jbe
notb
mov
add
xor
dec
not
outsl
rcl
fimuls
mov
xchg
jbe
in
dec
data16
add
cmp
ficoms
aad
mov
call
mov
lds
inc
xchg
push
fisubrs
xor
or
fwait
dec
fsub
inc
cltd
add
jg
mov
aam
and
push
mov
mov
xchg
dec
insl
push
or
mov
pop
pusha
cmp
sub
cmp
fdivrp
jmp
fistpll
lret
faddp
lods
pop
mov
imul
dec
fiadds
pop
and
or
add
add
mov
mov
cli
sbb
adc
cld
cli
lock
fdivr
sar
mov
mov
xchg
xchg
jne
jno
pop
push
cmp
das
sbb
paddd
out
iret
mov
nop
jl
aad
test
sbb
lret
add
lods
andb
imul
subb
orb
sub
loopne
int3
fnstsw
test
pusha
inc
dec
xchg
cld
movsw
pushf
data16
xor
cld
mov
xchg
aam
push
pop
scas
in
push
jecxz
or
xchg
test
xor
dec
aad
mov
xchg
dec
jbe
push
bound
xchg
add
xchg
lods
ds
adc
dec
or
mov
inc
es
out
adc
sahf
mov
fwait
fwait
fwait
xor
scas
popf
mov
push
xchg
xchg
jle
lea
mov
notb
in
push
gs
inc
clc
mov
sti
pop
xor
adc
lock
push
mov
cmp
and
popf
pusha
out
mov
enter
xor
int3
push
cmc
fwait
loop
adc
sub
cmc
stc
inc
cwtl
loopne
loop
or
xchg
outsb
ficoms
pop
dec
ds
cmp
cmp
ret
pushf
in
loopne
add
inc
gs
aaa
cmpsb
sbb
pop
xchg
in
fidivrs
outsl
out
mov
pop
ds
data16
std
sbb
pop
mov
jg
testb
pop
mov
jb
add
jno
imul
cmp
pop
push
adc
cmp
inc
das
pop
or
xor
cmp
nop
inc
push
sbb
shl
xchg
push
mov
adc
mov
leave
jp
movb
xchg
mov
std
adc
xor
push
cmp
jne
in
dec
js
lock
dec
sub
lds
push
jmp
or
fdivr
icebp
divb
adc
jg
ja
sbb
es
stos
test
inc
or
pop
rolb
test
or
insl
mov
mov
iret
dec
mov
push
nop
mov
mov
fs
shl
mov
dec
cmc
sub
cmp
dec
jle
fwait
sti
xorb
adc
das
lahf
arpl
push
out
inc
fimuls
punpcklwd
js
mov
int3
pop
sub
hlt
movsl
mov
mov
ds
rcll
outsb
out
xchg
icebp
cmp
loop
jbe
cmp
sbb
lahf
out
ficoml
out
sub
mov
ljmp
dec
mov
ds
jne
add
decb
mov
aas
out
loope
call
lcall
loopne
inc
testb
fbstp
inc
sarl
and
ret
inc
out
xorb
in
enter
data16
pushf
icebp
fucomip
ficomps
mov
mov
push
push
scas
mov
mov
mov
add
xor
sahf
push
mov
push
jle
rolb
sub
popf
fimull
in
adc
xchg
out
or
enter
gs
in
lret
xor
test
fwait
std
loop
dec
rcll
popa
pushf
rcl
jl
insl
xor
pushl
shll
add
das
jle
dec
jbe
and
push
push
loope
mov
mov
ret
sarb
xor
sarb
pop
xchg
push
lock
xor
dec
out
imul
sahf
jno
clc
cmp
and
pop
call
push
xor
fmul
cs
pop
cmc
addr16
pop
mov
mov
ja
cmp
jle
rclb
aad
mov
xchg
shlb
push
mov
mov
test
aad
xchg
iret
ja
rclb
xor
aad
mov
xchg
ss
push
add
ds
test
loop
add
scas
sahf
rcl
imul
fdivl
fildll
mov
xor
lods
add
sub
mov
jg
add
mov
mov
ss
scas
sarl
add
mov
jg
add
mov
or
scas
sarl
add
mov
jg
add
pop
or
test
jg
add
mov
jg
add
sahf
sarl
xor
fildll
mov
xor
fwait
add
fistpl
fidivl
push
in
fdivr
xchg
or
in
dec
addl
mov
pop
mov
mov
scas
aaa
or
imul
std
repnz
jge
cwtl
dec
rclb
les
fisttpll
jae
sub
pop
aaa
je
and
sub
fwait
mov
iret
mov
outsl
mov
xor
imulb
ljmp
imul
sbb
outsl
out
sub
and
pop
into
xor
pop
aad
sbb
out
outsl
in
mov
lahf
mov
cmpsb
xchg
lret
add
scas
cltd
inc
pop
arpl
mov
adc
or
xor
push
push
rolb
ffreep
mov
adcb
inc
xlat
cmp
xor
negb
sbb
rcl
xchg
scas
push
mov
sti
pushf
cmc
fs
pop
shrb
std
into
repnz
sbb
out
lret
dec
push
pop
enter
in
fwait
int3
pop
outsl
add
mov
aam
repz
lahf
loop
jnp
dec
sub
add
movsb
ror
inc
clc
or
mov
and
push
adc
stos
movsl
je
sarl
jp
cmp
xchg
dec
jl
pop
loop
xchg
pop
adc
dec
ficoml
sub
jbe
add
movsb
pop
xchg
hlt
nop
jb
add
pop
nop
enter
and
push
pop
push
fsub
lock
jnp
imul
out
sbb
mov
push
arpl
inc
in
mov
iret
pusha
xchg
sub
push
inc
cmc
imul
es
xchg
aam
sbb
test
pop
mov
hlt
aam
clc
and
pop
lods
push
mov
mov
les
stos
loopne
add
lds
addb
inc
in
cmp
add
and
and
out
imul
and
push
outsb
mov
xor
inc
cs
mov
adc
dec
mov
fwait
xor
mov
sbb
pusha
or
stc
aam
inc
in
jae
ficompl
mov
popa
pop
mov
dec
mov
cmp
vpmaxub
pop
stos
mov
jbe
dec
mov
and
mov
lods
adc
jne
xchg
cmpl
push
and
jle
scas
dec
aaa
rolb
js
les
cs
mov
xchg
sarb
sub
cmpsl
aaa
lcall
dec
jle
sub
clc
mov
jmp
push
jg
stos
pop
lock
test
xchg
dec
jle
push
mov
ljmp
sbb
test
lret
sub
out
cmp
test
imul
fidivrs
pop
add
dec
rolb
inc
add
out
pop
sbb
sub
cmp
ret
mov
insl
gs
push
clc
imulb
in
out
mov
in
mov
rol
push
scas
andl
mov
adcl
add
mov
lret
inc
out
lahf
shlb
lret
imul
xchg
pop
xchg
push
loope
mov
or
jb
pop
sbb
mov
push
pop
sahf
add
sub
xor
jb
ljmp
push
sbb
ficompl
xor
outsl
add
rorb
sub
imul
not
iret
in
pop
in
xor
push
ljmp
cs
pop
and
leave
sub
in
js
int
xor
cld
mov
add
imul
pop
cli
outsb
xchg
and
fsubrl
or
ja
push
jns
sub
leave
mov
xchg
xchg
movsl
repnz
adc
fldcw
xchg
shlb
push
xor
cmp
lahf
mov
aas
stos
xor
ss
roll
ss
jbe
scas
jns
nop
and
fdivl
xchg
fimuls
inc
ret
popl
mov
nop
mov
jmp
pop
inc
sbb
aas
dec
test
scas
inc
xchg
inc
xchg
xor
or
outsl
add
mov
pop
sbb
adc
xor
popa
jl
jecxz
sub
add
inc
jecxz
fisttpl
std
fistl
int3
outsl
xor
jb
pop
mov
jecxz
mov
push
mov
or
in
mov
popa
es
std
lret
testl
mulb
adc
mov
adc
inc
cli
incb
ret
loopne
xor
test
mov
sahf
mov
ret
mov
mov
xlat
movsb
sahf
decb
mov
cs
xchg
popf
dec
inc
popf
hlt
fnstcw
divb
adc
lea
sub
test
shrb
lret
cmp
test
push
popf
stc
pop
int
dec
cmp
jae
sub
or
cmp
mov
jle
pop
int3
pop
aad
outsb
in
ja
xchg
nop
cmp
and
sbb
sbb
pop
push
jecxz
inc
aas
fsts
adc
mov
repnz
rclb
lahf
mov
ficoml
xchg
sub
mov
xchg
and
xchg
fbstp
jns
ror
rcll
pop
jb
mov
movsb
cmpsb
or
fstl
rorl
cmc
arpl
mov
loopne
push
je
cmp
push
cmp
ljmp
xchg
xor
pop
push
mov
mov
dec
xor
or
jae
inc
imul
stos
adc
inc
fdivrl
mov
push
iretw
mov
cmp
add
dec
mov
addr16
adc
cmp
push
xor
mov
add
adc
xor
dec
xor
out
out
ror
dec
inc
xor
xor
icebp
dec
lock
decb
insl
push
adc
loopne
jecxz
jbe
movb
adcb
dec
jmp
pop
mov
xchg
add
mov
mov
in
cwtl
imull
cmp
jno
pop
jecxz
xorb
dec
cli
lds
mov
mov
sub
push
push
adc
sbb
or
sbb
add
pop
outsl
sbb
scas
sub
jae
lcall
stos
popa
out
xlat
or
mov
jae
xlat
insl
jb
lds
int
cld
mov
into
je
dec
push
fnstcw
loopne
add
imul
imul
lods
incb
pop
cmp
or
sbb
push
ss
pop
inc
into
ljmp
fsubp
mov
fsubs
fcoms
imul
ljmp
sub
fisttpl
adc
divl
xor
and
mov
cmpsb
repz
mov
mov
les
testl
mov
popa
and
in
mov
repnz
xor
das
addl
lock
or
repnz
adc
clc
push
je
jle
in
int3
mov
sbb
aam
adc
inc
mov
scas
cmp
bound
mov
pop
out
aas
call
imul
mov
dec
mov
data16
mov
mov
das
outsb
push
mov
dec
mov
cmpl
lret
pushf
push
es
nop
adc
rolb
sub
fmuls
mov
loope
xchg
test
sti
imul
xchg
lea
adc
xlat
lock
mov
ret
mov
adc
or
push
fdivs
test
mov
mov
fwait
pop
or
xor
xor
xchg
loop
or
xchg
stos
xor
ror
and
insl
pushf
jle
jb
or
int3
loopne
stos
jbe
mov
push
imul
ss
aam
add
je
or
ljmp
adc
fdivs
mov
cwtl
dec
xor
cmpsb
cmp
shl
andl
inc
hlt
cld
push
sbb
fisubrs
notb
pop
repz
pop
add
or
dec
pusha
mov
fists
sbb
aam
pop
push
sub
add
lds
arpl
sub
idivl
push
sarl
scas
xchg
int3
fincstp
pop
add
idivl
scas
lahf
add
add
addr16
add
mov
fbld
pop
adc
fildl
dec
xor
xlat
iret
jecxz
mov
shrl
test
sub
int
iret
int3
mov
scas
mov
sub
sub
cmpb
sbb
or
pop
punpckldq
loope
mov
arpl
mov
add
jo
rcrl
adc
xor
fisubrl
fcmovb
enter
inc
pop
fcmovb
xchg
mov
adc
repnz
pop
mov
jecxz
inc
lret
jge
push
ret
xchg
jle
test
inc
jle
push
push
out
jb
gs
ljmp
mov
clc
cmp
mov
je
xchg
jg
xchg
fwait
push
adc
aas
outsb
dec
movsl
or
divl
mov
sbb
int3
mov
jno
shlb
mov
sbb
stos
cs
mov
ds
ror
loopne
add
cmp
sub
enter
lret
ds
lret
ja
rcrb
mov
mov
ret
in
es
fmulp
lds
fdivrs
mov
lods
in
mov
pop
mov
cmc
mov
xchg
cltd
repnz
int3
cltd
hlt
fdivrs
mov
cltd
call
ljmp
ret
lahf
and
mov
sub
in
jl
jmp
xor
lahf
and
es
jmp
jecxz
sub
in
jl
add
in
xor
in
out
inc
xor
inc
in
out
inc
xor
inc
in
out
inc
xor
inc
cmp
xchg
inc
xor
inc
add
jbe
incb
in
fiaddl
inc
hlt
in
repz
in
loop
inc
hlt
in
out
add
in
out
add
in
out
add
in
ret
cltd
lock
mov
cltd
hlt
mov
shr
mov
call
ljmp
stos
shlb
fwait
dec
dec
movsl
imul
jl
popl
iret
adc
mov
mov
xor
aas
lcall
test
imul
lods
imul
mov
fists
ljmp
lds
outsl
int3
es
dec
iret
into
ret
sub
pop
push
cmpsb
lods
fucomp
mov
orb
stos
inc
or
test
std
xchg
pop
and
outsl
inc
jle
mov
js
and
call
es
mov
testb
es
sbb
ja
into
enter
stc
push
pop
ret
repnz
out
ss
cmp
stc
repnz
mov
pop
call
inc
ficoml
popl
repnz
scas
cltd
add
mov
mov
repnz
push
cmc
int3
and
cmp
push
aad
nop
lods
add
inc
or
cmp
in
je
jge
and
sbb
sub
test
into
cmc
add
loopne
xchg
lods
add
pop
jecxz
aad
mov
leave
inc
mov
int3
and
sbb
add
rcll
ss
adc
es
and
inc
loopne
adc
dec
lret
call
mov
sbb
fneni(8087
xchg
pop
shlb
pop
add
rol
es
ds
mov
sarb
int3
sbb
mov
lods
fs
cmc
jnp
dec
addl
pop
mov
sbb
fwait
cmp
inc
lahf
mov
es
jb
mov
mov
and
sbb
xchg
add
xchg
mov
sub
dec
adc
fcoms
mov
inc
mov
inc
rcrb
mulb
loop
in
add
and
mov
into
push
add
ss
or
ret
sub
cmp
insl
sbb
push
sub
push
xor
xchg
sub
enter
cwtl
repz
mov
call
mov
push
test
fistpll
mov
lods
add
inc
xor
pop
jno
cmp
in
out
insl
inc
jnp
int3
es
scas
add
mov
js
or
pop
mov
add
lahf
lds
pop
mov
movsl
adc
adc
or
pop
pop
ret
sti
add
adc
int3
shl
push
in
stos
xchg
xor
add
scas
ss
or
rolb
je
in
idivb
xchg
mov
sub
lahf
test
pusha
addr16
inc
dec
stos
add
mov
jnp
movsl
int3
and
jbe
test
enter
loopne
dec
lods
lcall
mov
sbb
daa
sub
bound
cmc
ffreep
fs
movsl
add
into
xchg
ret
jae
sahf
stc
fsubrs
stc
in
out
sbb
in
inc
inc
sub
jmp
insb
test
jge
sub
lret
sub
ja
stos
fadds
int3
cmp
outsb
fldt
stos
in
repnz
rcrl
sbb
enter
pop
fidivl
out
lock
in
bound
mov
lock
loopne
popa
es
sahf
xchg
push
outsb
xor
cmpsb
push
cld
aas
pop
mov
push
pushf
mov
out
mov
outsl
adc
adc
mov
pushw
cmp
add
sub
in
iret
leave
mov
and
fisubs
leave
mov
call
jno
inc
repz
mov
call
and
jg
pushf
mov
lds
xchg
gs
cmp
add
sub
out
iret
call
cmp
cmp
sbbl
mov
inc
mov
and
inc
fiadds
mov
clc
push
and
xor
dec
cltd
and
jecxz
lea
ss
jg
pushf
mov
add
add
fbld
std
xchg
arpl
xchg
iret
inc
ret
xchg
es
js
out
mov
xchg
outsl
add
xchg
std
lret
data16
or
xlat
xchg
and
add
sub
mov
mov
test
jle
or
es
push
push
inc
jle
pushf
mov
test
push
jo
out
add
cmp
call
jp
xor
cltd
mov
cmp
roll
xor
jb
lock
incb
mov
ds
mov
movb
push
cmp
iret
xchg
sbb
add
sub
and
in
mov
call
repz
mov
test
out
repz
cmp
sarl
xor
cltd
sahf
mov
push
xchg
cltd
inc
mov
inc
cltd
sub
jg
mov
cltd
add
add
cmp
call
es
mov
push
cld
stos
daa
inc
ret
rorl
mov
pop
and
lods
fisttpl
lods
pop
test
fidivs
xchg
ficomps
pop
cld
cmp
rcrb
mov
inc
jne
jno
pop
push
inc
cmp
movsl
mov
ss
ss
ss
xchg
add
add
add
add
add
add
add
addb
add
dec
inc
lahf
cmp
or
add
in
in
test
pop
push
dec
push
cmp
mov
sbb
adc
faddl
mov
xchg
aad
aad
aad
aad
aad
aad
xorl
sbb
iret
cmpb
mov
jecxz
add
lds
dec
xchg
jne
jne
jne
jne
jne
mov
iret
xchg
jl
mov
aam
mov
gs
js
cwtl
movb
adc
add
lods
or
and
mov
movsb
mov
aam
mov
xchg
fistps
inc
mov
sub
or
mov
add
inc
and
and
out
push
call
imul
push
popa
mov
cld
xor
sti
scas
cmpl
adc
cmpsb
mov
cmpsl
stos
test
xchg
pop
loopne
xchg
adc
test
add
xchg
adc
or
imul
mov
xchg
aam
in
stc
pop
repnz
or
sbb
cmp
outsb
and
jo
mov
pop
dec
stos
cmp
xchg
pop
adc
ret
lret
jbe
fisubrs
mov
ret
stos
ret
gs
gs
adc
addb
add
ficompl
cmp
repnz
lods
subb
jp
jmp
subb
xchg
mov
dec
push
idivb
movb
es
xchg
mov
insb
ds
xchg
mov
pop
gs
in
fwait
cmp
mov
aas
add
outsb
rep
aam
fadds
roll
int
enter
xchg
push
mov
mov
xchg
ficomps
push
test
add
mov
data16
adc
pop
fadds
data16
icebp
xchg
fidivrs
jbe
cltd
push
cltd
mov
sub
ljmp
ljmp
out
dec
rcl
push
push
mov
dec
mov
inc
fneni(8087
and
add
hlt
mov
test
xor
arpl
int
xchg
fistpll
test
or
mov
inc
and
stos
sub
xchg
and
xchg
imul
mov
xchg
ja
movsb
inc
addr16
loop
jle
sub
iret
clc
push
or
sbb
sbb
inc
add
roll
fcompl
mov
arpl
repnz
add
push
add
fnstenv
or
or
sub
xchg
fisubrl
ss
cltd
inc
js
sbb
dec
xchg
cmpsb
test
rcl
loope
xor
loop
daa
test
add
adc
and
jno
mov
xchg
push
idivb
sub
mov
repnz
jne
push
dec
lret
int
test
jg
adc
xor
in
fsubr
insl
pop
add
lock
insb
loope
repnz
and
in
pop
insl
popa
inc
lahf
mov
aam
add
push
adc
test
lds
lock
into
in
fdivrl
xchg
mov
imul
dec
outsb
repnz
iret
pop
loop
clc
jle
fisubl
ret
incb
inc
lock
fsubp
shl
xor
je
or
fiadds
push
pop
push
inc
adc
cmpsl
push
add
lds
gs
out
rolb
loop
inc
outsb
clc
fwait
mov
and
in
lds
incb
filds
add
cmp
inc
add
scas
sahf
rcl
imul
fdivl
fildll
mov
xor
lods
add
sub
mov
jg
add
mov
mov
ss
scas
sarl
add
mov
jg
add
mov
or
scas
sarl
add
mov
jg
add
sahf
sarl
xor
fildll
mov
xor
xchg
add
sub
mov
jg
add
or
out
xor
xchg
aas
or
xor
push
push
clc
pop
mov
xor
xorb
adc
mov
and
rclb
js
pop
xchg
dec
sbb
mov
dec
mov
imul
push
hlt
xchg
xchg
inc
push
jne
ficomps
jne
xchg
push
xor
push
xchg
dec
push
fnstsw
movsb
add
mov
mov
or
push
es
fs
mov
add
dec
hlt
testb
mov
jo
lret
mov
push
sahf
movsl
ret
nop
inc
cwtl
jle
push
out
inc
push
add
push
shrb
cmp
adc
outsb
jl
mov
xor
loope
xchg
ficoml
movsl
adc
lcall
sub
cmp
cli
jnp
cld
sub
scas
out
push
fsubrp
outsb
push
adc
into
jae
pop
sahf
outsl
adc
xchg
bnd
sub
outsb
ljmp
jae
xor
push
loopne
cs
xchg
sub
lret
dec
or
aam
jbe
xchg
jo
ret
outsl
mov
cld
jg
adc
stos
es
lcall
pop
xchg
mov
es
push
sbb
push
scas
fists
pusha
mov
lret
and
inc
fsub
sub
out
popa
shlb
out
xchg
lret
push
rclb
mov
leave
data16
lock
cmp
or
daa
ja
cmpsb
push
mov
daa
fcompl
rcrl
pushf
out
test
mov
lret
mov
ja
pop
mov
or
dec
hlt
es
popf
insb
push
idivb
lcall
xlat
int
inc
mov
cwtl
int3
loop
mov
cmp
out
out
lcall
out
push
inc
rolb
dec
or
enter
pop
xor
iret
aad
jmp
movl
mov
mov
stos
cmp
jns
sti
fisttpll
notl
nop
test
loop
xchg
out
arpl
mov
in
jle
push
ret
loopne
xchg
jns
cs
ss
fmull
inc
add
mov
pop
or
loope
jl
repnz
mov
shlb
out
cmp
jo
int3
mov
or
jl,pt
stc
push
jae
mov
jl
repnz
xchg
fisubrl
in
popf
aas
ds
call
add
jmp
sbb
inc
repz
cmp
sub
leave
es
cmp
adcb
data16
repz
testb
mov
aam
jno
filds
pop
js
adc
adc
inc
and
ds
rolb
and
mov
dec
jl
lret
loopne
mov
fmull
xchg
rorb
std
into
and
es
fnstcw
sub
dec
ss
dec
xchg
dec
inc
out
es
stos
pop
imul
sbb
stos
loope
xor
loop
into
adc
ja
xor
into
loop
lea
push
pop
jbe
test
out
push
sub
inc
ss
stos
hlt
dec
int
and
mov
insl
testb
dec
pop
cmp
xor
out
loopne
popa
and
shlb
sbb
jle
arpl
dec
cld
lds
jecxz
add
jge
fidivrl
call
rcr
and
cmp
xchg
outsb
pop
inc
jo
loope
jo
inc
in
sub
xchg
lods
test
jge
xlat
mov
xor
push
pop
out
insl
cmp
jnp
push
lret
inc
in
adc
dec
push
cmp
out
adc
or
jle
test
xchg
lahf
pop
add
sub
stos
inc
pop
popl
in
add
jle
mov
push
cmpsl
jle
or
shrb
jns
fidivrl
aam
mov
lock
pusha
inc
cmp
jnp
cmpl
repnz
cld
loopne
clc
mov
sub
out
push
inc
add
shr
mov
mov
push
jg
mov
mov
das
fs
pop
sbb
sub
mov
cmp
xor
leave
fmulp
cmp
mov
incb
and
ss
jg
push
into
mov
add
push
adc
xor
cli
add
sbb
inc
sti
ja
arpl
movsb
mov
pop
inc
mov
jo
jg
mov
fdivrl
jg
fs
pop
cmp
add
pop
push
ss
cmp
add
xor
and
dec
clc
sar
pop
mov
xor
outsl
lea
leave
in
fdivs
lds
enter
adcl
rorl
mov
addr16
lods
push
je
inc
std
stos
mov
mov
out
in
mov
out
aad
addr16
out
imul
jp
jb
push
pop
clc
push
aad
cmp
pop
xor
inc
mov
mov
xchg
pushf
popf
and
imul
dec
lods
mov
pop
sbb
and
cmp
inc
add
repz
dec
adc
xchg
xor
jnp
les
idivb
mov
mov
sahf
dec
lea
mov
mov
clc
repz
or
inc
ja
rcr
cmpsl
insl
fsts
and
mov
pop
push
aas
jecxz
rorl
xor
mov
adc
jp
and
out
sub
cmovp
push
aad
stc
icebp
cld
sbb
mov
rcr
fisttpl
std
lods
lock
push
mov
jbe
loop
add
pop
testb
sahf
shlb
adc
mov
cmp
dec
mov
fnstcw
int3
jg
lock
dec
test
das
ds
inc
adc
orb
push
adc
sub
imulb
sub
fnstsw
mov
mov
adc
push
test
out
mov
cmp
and
xchg
lret
add
push
adc
xor
push
in
ljmp
xor
or
pop
inc
int
dec
rorb
xchg
std
shl
push
out
stos
cmc
xchg
iret
lds
cmp
jns
sbb
push
pop
aad
gs
loop
mov
es
cmc
stos
dec
lods
aad
in
iret
aad
mov
cmp
mov
ret
outsl
fnstsw
test
adc
gs
inc
mov
or
movsl
jg
ret
push
fdivp
or
xor
fwait
jb
xchg
cwtl
mov
rcl
pop
jne
loope
inc
popa
pop
shlb
into
nop
stos
mov
sbb
fdivp
hlt
or
sub
cltd
out
cmp
out
cmp
mov
out
mov
fidivrs
push
cld
xlat
jg
jnp
jae
repnz
cmp
inc
xchg
notb
mov
mov
out
xchg
push
mov
mov
sbb
cmp
imul
jo
hlt
and
jge
xchg
cmp
out
in
xor
pop
add
sub
lahf
add
ds
xchg
cmp
negl
cmpsb
mov
pop
cmpsl
push
jmp
jmp
out
dec
fcmovbe
mov
js
mov
and
cli
cmp
mov
cmpsb
out
loope
es
add
sub
enter
hlt
inc
dec
into
jmp
or
xor
jg
mov
and
out
inc
jbe
adc
xor
xor
or
xchg
lock
test
cltd
push
adc
xchg
xor
push
hlt
gs
xchg
sbb
cmp
mov
ret
and
mov
adc
mov
sub
jbe
imul
dec
push
loope
mov
cmp
xor
ficomps
pop
xor
movsb
mov
pop
xchg
sahf
divl
sahf
inc
xor
sub
push
scas
frstor
fwait
subl
loope
xor
cmp
xor
roll
int3
inc
out
outsb
in
sub
jb
mov
sub
and
jo
into
sbb
cmpl
sub
add
pusha
pop
add
ljmp
stos
cld
inc
inc
lahf
adc
mov
push
push
and
cs
out
inc
out
adc
sti
pusha
inc
and
lahf
mov
cld
ret
scas
scas
pop
jbe
ds
fimuls
ds
dec
in
loop
enter
lret
xchg
mov
push
xchg
es
mov
xchg
cmp
inc
ret
into
arpl
add
nop
fsub
ja
ds
leave
ret
inc
cmpsb
scas
dec
lret
dec
pop
jecxz
push
rclb
ret
shrb
dec
push
ret
sbb
out
sbb
add
jg
push
dec
ret
and
call
dec
lret
dec
popf
or
xor
mov
push
jmp
pop
cltd
lods
aas
xor
sahf
fists
andl
jmp
call
inc
arpl
sub
sub
or
pop
inc
push
add
xchg
mov
rcrl
cmp
xor
mov
lods
dec
aad
or
inc
sahf
mov
lea
dec
push
dec
lds
rcrb
bound
ss
jo
scas
cld
push
adc
movsl
xchg
pop
les
ret
lods
pop
fiaddl
adc
js
leave
xor
or
insb
fcomi
sbb
aam
pop
pop
dec
pop
xor
inc
push
cld
test
clc
add
or
jns
push
fwait
jle
shrb
ret
mov
gs
push
sub
mov
pop
dec
xchg
lret
mov
imul
shlb
pop
jle
gs
rcll
and
adc
xlat
cmc
aam
mov
push
inc
arpl
test
clc
adc
mov
out
sub
push
inc
push
test
mov
xor
stc
int3
or
fstpl
push
pushf
inc
cltd
out
mov
loop
push
add
pusha
les
adc
add
cmp
mov
ljmp
mov
pushf
inc
xor
fadds
loopne
push
sbb
neg
jbe
enter
adc
dec
cmp
aam
int3
sbb
fcmovb
loop
movsl
sbb
push
nop
je
mov
shlb
notb
lahf
mulb
sbbl
leave
jo
push
cmc
enter
adc
imul
sahf
arpl
mov
add
lods
mov
in
or
adc
outsl
cld
cmp
aaa
jb
adc
sbb
adc
and
add
loope
pop
in
pop
and
cmp
cmc
inc
push
dec
xor
adc
add
jns
mov
cmp
xchg
push
add
fcmovnu
aas
sub
sbb
lret
roll
je
movsb
rorl
mov
ret
push
and
ss
lcall
inc
scas
cmp
call
test
aad
test
iret
xor
mov
pop
data16
je
cmp
push
jbe
aam
gs
jbe
das
inc
cwtl
mov
xchg
outsb
punpckhdq
push
or
xchg
inc
or
push
sbb
xor
mov
std
sub
mov
test
mov
cld
fcoms
jb
pop
sbb
xor
add
repnz
pop
idivl
faddl
dec
pop
fdivrl
fsubrl
ret
sbb
ret
dec
and
xor
add
lock
inc
scas
hlt
fistps
push
dec
lock
dec
imulb
test
lock
cmp
es
or
lahf
push
sub
mov
arpl
mov
cmovo
mov
lods
mov
hlt
popa
pop
ret
stos
lods
dec
push
jle
hlt
sub
imul
pop
imull
pop
lock
pop
gs
popf
mov
push
mov
mov
pop
in
cmp
loopne
or
pop
call
sti
cmpb
push
jne
and
ljmp
ljmp
addr16
inc
call
cmpb
int3
add
sub
adc
xchg
add
lds
add
adc
push
das
mov
ds
adc
outsb
outsb
cmp
sarb
notb
pop
pop
push
jle
push
push
dec
outsl
dec
push
xor
out
scas
scas
jo
adc
das
inc
sahf
jne
jbe
and
push
in
inc
lcall
cmp
jp
sbb
and
inc
ds
xor
add
adc
and
nop
add
mov
jl
push
ds
sub
out
pop
ljmp
data16
ljmp
jle
xorb
movsb
leave
inc
xor
sar
mov
jbe
pop
jmp
movb
mov
sub
jge
or
and
xchg
or
popa
aas
add
loopne
mov
movsl
lret
fcmovb
cmc
adc
adc
imul
sub
in
out
imul
je
adc
in
sbb
pop
fcomip
push
pop
mov
mov
mul
out
ja
xchg
add
insl
in
push
sbb
lcall
add
pop
lds
adc
mov
mov
mov
mov
mov
cmpsb
pop
mov
pop
jb
cmp
mov
sbb
ljmp
sahf
stos
ret
inc
sahf
scas
xor
mov
movsb
mov
or
mov
or
jbe
jne
sahf
jbe
pushf
sub
iret
ss
scas
sub
sti
popa
pop
daa
cmc
out
xor
cli
push
loope
mov
or
add
or
inc
mov
inc
mov
movsl
inc
adc
mov
addr16
mov
fnstenv
cmp
dec
inc
in
lods
jg
sub
cmp
mov
push
call
pop
mov
cmp
adc
test
jbe
into
mov
mov
adc
call
pop
mov
dec
loopne
add
mov
xchg
popa
fdivs
movsb
adc
movsb
stos
cmp
cltd
scas
xchg
std
adc
lods
arpl
mov
inc
mov
adc
adc
loop
repz
mov
jb
push
mov
int3
dec
pop
in
adc
call
inc
pop
pop
popf
test
arpl
mov
jle
xor
loope
lret
add
push
add
imul
lods
xchg
fbstp
add
loopne
sub
out
movsb
aam
jle
push
adc
xor
or
sub
test
out
out
sti
in
shr
and
mov
shll
imul
popa
lret
fisubrs
or
xor
jmp
leave
into
mov
in
sub
mov
cmc
repnz
and
into
cli
repnz
shl
enter
or
div
lahf
xchg
sbbb
fidivrs
sub
adc
negb
ja
fadd
scas
xchg
out
ds
pop
insb
mov
loopne
or
adcb
sbb
scas
push
lret
mov
add
call
lret
scas
push
mov
movsb
push
stos
push
mov
mov
or
inc
xor
mov
cmp
hlt
pop
rcrb
ljmp
hlt
lods
outsb
mov
out
pusha
mov
outsb
sbb
sbbb
add
cmp
rcrl
enter
adc
ss
and
or
into
std
sbb
fldenv
xor
mov
out
movsb
and
mov
out
adc
xchg
in
adc
mov
pop
mov
add
cmp
jo
shll
adc
jo
inc
imul
lret
jo
push
outsb
pop
mov
mov
pop
jne
xchg
das
testl
fidivrs
xchg
pop
push
jg
mov
jmp
sbb
sti
inc
insb
adc
push
or
sahf
or
andb
fcmovnu
dec
cmp
pop
cmp
xchg
mov
jl
xchg
cmp
inc
and
mov
dec
jnp
ret
add
cmp
lret
mov
out
shrb
push
lcall
jae
adc
std
cmp
mov
rorb
mov
mov
fisubl
jmp
das
jae
popf
sbb
pop
frstor
in
loopne
lret
jne
sub
aad
out
fucom
inc
pop
out
ss
stos
jno
lret
push
int
imul
jb
push
sbb
push
adc
adc
es
sub
sbb
mov
cmp
dec
inc
out
jmp
lret
out
jge
pop
lods
adc
ret
rcrl
xchg
lds
lods
mov
push
pop
sub
xchg
pop
or
hlt
out
jne
scas
rorb
pop
leave
inc
fs
lock
mov
mov
ds
mov
outsl
push
inc
push
outsl
test
pop
loopne
mov
mov
into
in
pushf
aad
xchg
test
sub
ss
or
int
lret
mov
dec
sbb
movb
cltd
lock
lret
dec
mov
jl
add
je
jmp
int
insl
stos
scas
xorb
push
dec
fdivrl
scas
or
fildl
sub
add
stos
pushf
dec
sbb
xchg
stos
dec
sbb
mov
repz
jle
sub
xor
scas
sbb
test
sbb
push
scas
out
sbb
push
out
sbb
push
stc
sbb
push
xchg
xlat
sbb
push
js
pop
leave
push
out
sbb
js
sbb
test
xor
ljmp
divl
or
sbb
xor
mov
loop
call
adc
sub
cmp
jg
movsl
sub
scas
not
mov
hlt
sbb
or
mov
adc
in
xchg
in
mov
std
mov
mov
int
rorb
fiaddl
arpl
rorb
out
jle
lock
mov
loop
mov
inc
fisttps
ds
sub
ds
inc
iret
cs
push
push
shlb
inc
decb
and
lds
cmpsb
push
scas
adc
dec
and
sarb
xchg
mov
jle
push
mov
js
fisttpl
dec
or
aad
push
or
and
mov
mov
mov
push
cmp
in
mov
inc
inc
inc
pop
cmc
out
mov
push
ror
leave
cmpsb
loop
inc
shl
or
mov
fnstcw
pop
popa
mov
rol
out
loopne
rcrb
mov
and
ds
in
add
loopne,pt
iret
or
sub
push
pop
dec
xchg
cmp
xor
loop
in
dec
int
pop
es
mov
ss
pop
push
jle
shl
js
sarb
jbe
nop
ds
add
cmp
out
xchg
cmpsl
in
jle
inc
xchg
add
xchg
mov
jl
mov
out
xchg
daa
js
testb
es
ds
and
es
mov
ret
pop
cmp
mov
lret
adc
jnp
mov
adc
xchg
in
lret
mov
mov
lret
mov
jb
popa
push
jo
jnp
mov
imul
adc
les
aaa
mov
mov
enter
neg
jne
add
pop
ss
bswap
lahf
mov
call
xor
jne
cwtl
fsubl
leave
lods
test
stc
inc
cmp
fdivrs
leave
add
lret
add
aam
out
or
lods
lods
adc
push
dec
insl
xchg
cmp
pop
ja
jo
jne
loope
leave
fbstp
dec
movsl
dec
jne
or
lock
mov
pop
push
push
push
jmp
push
mov
not
mov
pusha
movzbl
mov
mov
movw
pusha
movb
pushl
ret
leave
mov
jne
fsubrl
test
arpl
dec
xchg
jge
stos
movsb
std
xor
loop
or
gs
mov
sti
and
jmp
aad
stos
out
mov
bswap
push
mov
movb
mov
seto
lods
call
sub
fdivrl
and
lds
mov
add
ja
push
mov
inc
imul
repz
notl
pop
jno
in
cltd
gs
lret
sahf
imul
je
fsub
push
stos
es
mov
out
test
mov
xor
nop
mov
jg
scas
cs
xor
and
adc
ret
jns
mov
cmp
arpl
pop
cmp
cmp
jg
fisttps
sbb
fistps
xchg
cmc
dec
cmp
sbb
adc
ja
ss
pop
aas
xchg
sahf
inc
filds
cmp
movsl
xchg
shrl
push
mov
mov
jg
xor
pusha
loopne
inc
data16
xchg
idiv
or
adc
sbb
mov
push
sti
rep
je
fcoml
pop
js
pusha
or
aas
fistps
dec
les
jge
lock
xchg
sahf
pop
lret
adc
outsl
and
pop
or
mov
dec
cmc
pop
sub
inc
adc
xor
out
and
pop
adc
out
pop
xchg
mov
pop
add
movaps
add
ss
int3
lds
inc
inc
dec
je
fcoml
out
jb
test
xchg
popa
es
jnp
sub
add
xor
mov
jo
cmp
ljmp
ret
filds
xchg
imul
lahf
sub
testl
js
stc
enter
pop
or
adc
hlt
or
pop
test
push
xchg
imul
fisttpll
dec
add
adc
not
mov
call
pushf
lea
je
pusha
pushf
movb
lea
jmp
pushl
lea
je
pusha
pushf
lea
jmp
call
mov
fdivl
and
xor
setp
xchg
pop
sub
sbb
test
int3
jo
fsubl
or
pop
cmp
scas
add
orl
orb
out
lods
daa
mov
push
dec
clc
xchg
inc
jnp
xlat
mov
mov
call
sub
mov
mov
adc
xchg
ss
fisubrl
into
loopne
pushf
xor
repnz
std
pop
push
xor
pushf
pushl
jmp
rol
lea
jb
push
pusha
pusha
dec
test
bt
stc
cmc
cmp
lea
lea
not
not
mov
movw
pushf
call
movl
push
push
pusha
push
lea
jmp
cmp
test
push
pushl
pusha
jmp
jle
jle
push
xchg
sbb
subb
pop
pop
sbb
ljmp
dec
add
mov
sti
les
insb
add
das
push
mov
and
cmpsl
cmp
fisttpl
scas
xchg
push
js
jecxz
inc
push
lahf
jp
test
cli
shlb
add
ss
mov
shr
aad
push
shlb
cltd
popf
stc
cli
clc
cmp
xlat
sbb
pop
dec
ja
iret
in
inc
leave
pop
iret
fwait
jle
frstor
shll
cmc
inc
inc
and
sbb
movl
and
jne
test
pusha
pushf
push
lea
jmp
cmc
xchg
movsbw
mov
clc
sub
pusha
pushf
mov
call
pushf
movw
lea
jne
shld
xadd
jmp
jmp
loopne
jle
cwtl
fsub
xchg
mov
dec
aaa
fucomip
lahf
out
stc
test
jp
gs
inc
cmpsl
xor
adc
cltd
and
add
pushf
in
daa
pop
rol
fisubl
adc
cmpsl
cmp
jbe
or
mov
mov
mov
adcb
sbb
fwait
jmp
push
push
jno
fsubl
pop
dec
mov
push
iret
push
popf
sub
mov
push
and
int
jmp
icebp
cld
ljmp
xchg
rcll
pop
insl
xchg
push
jle
xchg
movsl
outsl
cmp
dec
mov
lods
ret
mov
sub
push
dec
iret
fdivl
pop
push
mov
jbe
cwtl
fsubl
cwtl
cmp
faddl
push
cmp
sub
mov
mov
call
iret
ffreep
ja
cmc
js
mov
sti
jae
cmpsl
mov
in
in
leave
xor
dec
inc
call
idivl
jo
fsubrl
cld
in
dec
mov
loopne
aam
pop
xor
add
lret
shll
mov
or
test
and
push
das
adc
xchg
iret
fldenv
js
pushl
xchg
xlat
cmp
popf
and
aas
inc
mov
jne
shrd
sub
lea
call
jmp
lea
jne
pusha
movb
mov
jmp
jmp
not
mov
shr
xor
and
mov
add
sbb
cmp
adc
shl
mov
movw
test
pushf
cmc
test
mov
lea
je
pusha
sub
cmc
cmp
pusha
jmp
aad
push
mov
jbe
les
shlb
mov
adc
push
ud1
shlb
bound
ds
mov
or
lods
cli
inc
push
das
addr16
jnp
pop
push
jmp
cmp
sbb
js
sarb
xchg
pop
xor
push
inc
scas
sarl
push
mov
jb
pop
rorl
push
jnp
outsl
mov
xchg
out
icebp
lret
pop
fbld
test
lods
xchg
and
call
xchg
popf
dec
jge
inc
cltd
mov
insl
pop
fnsave
and
popf
cld
mov
sbb
lods
mov
ljmp
mov
and
lret
test
movsb
dec
jnp
jbe
in
inc
out
sbb
inc
xor
dec
and
sub
in
sbb
sub
fildll
in
and
nop
pop
pushl
pushl
lea
jb
jmp
add
pop
mov
pusha
mov
not
call
bswap
mov
pushf
lea
jmp
mov
stc
stc
cmp
movzbl
cwtl
lea
movzbw
jmp
mov
movb
pushf
pushf
pushf
lea
jmp
pushf
jmp
call
test
not
jmp
movb
movl
movw
pushl
popl
mov
movw
pushl
pushl
ret
mov
mov
push
pusha
lea
call
pusha
pushf
mov
pusha
movw
pusha
pushf
lea
jmp
shl
pushf
pusha
lea
je
call
push
lea
jne
pusha
pushf
call
fdivl
and
enter
and
hlt
pop
pop
mov
mov
dec
es
inc
mov
jge
and
sbb
jmp
lahf
stc
mov
push
test
xlat
xchg
mov
test
test
es
mov
mov
lcall
out
les
xchg
ljmp
lea
insl
pop
mov
mov
loop
sbb
pushf
xchg
adc
movsb
ljmp
sub
push
cld
push
rorb
mov
pusha
pushf
pushl
lea
jmp
push
inc
inc
add
sub
cmc
xchg
neg
shrd
btr
bts
mov
seta
mov
movl
stc
pushf
stc
xchg
ror
pushl
mov
pushf
sub
jmp
cmp
ror
mov
jmp
add
add
adc
add
add
add
adc
add
adc
add
add
add
mov
adc
add
add
add
loopne
add
mov
add
push
push
jmp
push
jmp
call
lea
je
pusha
sub
pushl
clc
cmc
pusha
cmp
call
dec
jo,pn
cwtl
faddl
xlat
imul
sub
adc
ja
dec
es
insl
push
or
in
pop
or
js
or
les
ljmp
dec
pop
xchg
stos
jb
sbb
cmp
and
dec
xchg
nop
pusha
xor
jp
lahf
xchg
xor
dec
sub
or
stos
incb
push
insb
cwtl
fmull
mov
das
shll
in
mov
fisttpll
out
xorl
sti
mov
ret
aaa
xchg
dec
dec
fdivrl
mov
or
daa
sbb
xchg
shlb
scas
cmp
xor
popa
sbb
sub
call
pop
lods
inc
push
mov
int
int
pop
or
test
cltd
lret
and
add
aad
movsb
in
or
mov
sub
sbb
fcompl
pop
add
stc
insl
popf
clc
and
mov
push
xchg
pop
or
sub
jge
iret
jne
je
cltd
pop
fldl
loopne
ror
inc
or
ljmp
jl
cmp
in
pop
sbb
dec
mov
rcll
jge
add
pop
mov
mov
sbbb
je
jecxz
dec
add
in
cmpsl
cmp
pop
out
in
pop
in
sbb
xor
out
jge
das
out
sub
lock
mov
call
inc
jmp
mov
lea
jne
shrd
bswap
mov
stc
stc
pusha
cmp
add
bt
call
shr
pusha
movb
pushf
lea
je
call
push
call
mov
fdivl
cld
js
jns
in
cmp
cwtl
mov
adc
into
xchg
mov
cmc
cmc
pop
lods
in
gs
in
lret
jb
vpunpckhbw
sub
cmp
loopne
sub
adc
dec
call
cltd
movsb
fidivrs
push
inc
loopne
sahf
lock
outsb
jae
cmpsl
cmp
pop
es
jb
xchg
pop
mov
pop
jle
hlt
stos
push
pusha
into
mov
lock
scas
adc
pop
inc
xor
out
ljmp
out
imul
push
sbb
repz
adc
jno
pop
lahf
and
das
mov
lea
sbbl
addl
and
jl
cmc
sub
jmp
mov
push
lea
mov
movw
xchg
bswap
pushl
jmp
pushf
lea
lea
lea
mov
call
shl
jmp
incl
imul
adc
imul
ja
pop
testl
adc
sbb
jp
push
xor
inc
jb
ficomps
insl
xchg
jg
jns
insl
jo
lock
dec
jmp
ret
jmp
inc
xchg
popa
mov
in
js
out
mov
xor
sbb
and
daa
in
lods
out
out
sub
jb
cmp
imul
pop
popf
stos
add
mov
cmp
js
or
push
add
loope
lret
jno
mov
pop
dec
movsl
ja
gs
fsubrs
mov
loope
in
mov
rclb
repnz
cwtl
xchg
push
int
inc
xor
loop
inc
inc
xor
jg
movsl
adc
sbb
pop
push
mov
add
jg
mov
xor
addb
adc
push
popa
cmp
pop
loopne
push
or
push
mov
or
xchg
mov
fucomip
push
jp
repz
jg
inc
inc
rcl
and
in
into
cwtl
or
xchg
xchg
push
icebp
or
mov
cltd
mov
mov
jo
rclb
jno
jb
loopne
loopne
push
cmp
pop
insb
jmp
scas
pop
aas
cmp
das
cmc
mull
dec
mov
jp
sarb
in
mov
dec
fimull
sbb
adc
stc
sbb
mov
dec
ds
add
mov
sbb
ret
push
dec
pushf
mov
jp
in
inc
inc
xlat
mov
js
cmpl
sbbb
xchg
sbb
int3
sub
stos
and
mov
stc
shl
neg
or
mov
cmp
cmpb
push
pushf
jmp
lods
lock
jbe
int
pop
ja
adc
rcr
push
push
sarb
mov
pop
shlb
imul
pop
stos
loop
pop
or
push
pop
xorl
insb
push
cmp
aad
xchg
add
arpl
jae
inc
out
or
arpl
sub
stc
pop
gs
mov
cmp
mov
iret
mov
setnp
push
jl
inc
scas
idiv
in
jmp
inc
inc
aad
fldl
pop
and
orb
in
movsl
test
movsb
pop
js
out
aad
lock
mov
iret
add
and
out
data16
fwait
lds
xor
jb
cmp
dec
ret
stc
test
lea
nop
push
dec
mov
lahf
mov
xorl
add
cwtl
adc
xchg
ret
movsb
nop
xchg
xchg
pop
pop
xlat
dec
sbb
and
lret
ficoms
pop
in
call
call
mov
push
pushf
pushf
push
lea
jmp
movb
lea
jne
dec
sub
add
shrd
call
lea
jne
shl
bsr
jmp
pushf
inc
push
push
pusha
lea
jmp
lea
jne
add
sbb
mov
stc
or
call
mov
jmp
fcompl
mov
push
mov
adc
jns
mov
push
dec
fists
repnz
andb
and
out
in
sub
mov
out
and
lea
leave
sub
movsb
sub
push
inc
xorl
in
mov
jns
addl
sbb
adc
cmpsb
mov
mov
jns
in
pop
ja
int
push
adc
pop
mov
and
repnz
outsb
mov
lcall
and
fstl
cld
std
and
gs
fsubrl
pop
xor
mov
xchg
cmovnp
out
or
xchg
push
pop
xchg
cmpl
aas
jmp
jnp
xor
insl
sbb
sbb
fwait
stos
sub
xchg
insl
jo
and
xor
outsl
test
scas
cmp
ret
jle
mov
xchg
jmp
and
jne
jmp
jmp
pusha
movb
sub
push
pushl
push
lea
jne
jmp
mov
jbe
cwtl
faddl
lods
test
insl
jne
jmp
push
adc
push
cmpsb
and
sub
popa
cmp
dec
add
movsb
test
lahf
and
andl
pushf
xchg
lahf
jge
adc
jmp
aaa
fs
jge
xchg
and
andl
and
and
cwtl
xchg
jecxz
jge
add
inc
into
fisubs
faddl
addr16
pop
or
and
jne
imul
cmpsb
dec
inc
or
movsl
xor
dec
and
or
sub
or
push
cmc
add
andl
subb
xlat
jle
call
out
sub
sub
das
sub
pop
mov
mov
pop
xchg
inc
jp
jnp
les
mov
scas
jno
sahf
lahf
adc
or
jle
pop
icebp
xchg
xchg
jp
jno
jecxz
leave
and
cli
mov
push
movsb
ds
addr16
sbb
sahf
or
lahf
into
daa
hlt
mov
xchg
in
arpl
out
mov
nop
pop
aas
lods
push
test
dec
gs
cmp
jge
pop
es
xor
mov
rolb
mov
mov
jp
fists
push
out
inc
popa
dec
pop
fcmove
fs
lcall
or
adc
push
test
mov
xchg
inc
inc
ds
cmp
jecxz
pop
push
dec
loope
enter
call
mov
repz
pop
jns
mov
out
ljmp
or
sti
adc
fists
and
mov
lods
loope
sub
inc
loopne
and
sub
cmp
xchg
inc
test
lds
sub
pusha
insb
insl
push
cmpsl
sahf
lock
xchg
test
aad
sahf
iret
push
sbb
ss
outsl
es
inc
sbb
ss
add
push
pop
xchg
or
jg
sti
mov
xchg
fsincos
cltd
xchg
jnp
fwait
xchg
xchg
sub
lea
ja
jmp
lea
je
pushf
add
bt
movl
cmp
pushf
pushl
pushl
lea
jmp
pushf
lea
je
push
mov
cmp
cmc
add
cmc
clc
movb
test
cmp
lea
ja
pusha
lea
jb
cmc
pushf
test
cmp
cmp
pusha
lea
jae
pusha
shl
bsr
xchg
mov
rcr
btc
movsbw
mov
cmc
mov
bt
cmc
jmp
mov
fsubs
fsub
sbb
std
jmp
cmp
lock
cwtl
adc
and
leave
rorl
jno
push
es
inc
ret
or
out
cmp
add
pushf
push
pushf
jmp
and
cmpsb
popa
cwtl
fcoml
or
in
gs
or
dec
mov
imul
clc
mov
push
jns
jbe
inc
adc
cli
push
push
jge
cmp
jmp
pop
push
xchg
cmp
xor
outsl
shrl
mov
imul
out
out
adc
cltd
test
mov
and
push
sbbb
push
mov
xor
pop
rcl
mov
bt
jno
bt
stc
cmpb
pushf
pushl
call
movb
jmp
jmp
lea
jmp
xchg
pushf
call
push
push
pushl
mov
pusha
mov
mov
pusha
lea
jmp
cli
fcmovb
pusha
cwtl
fsubl
rcrl
xlat
inc
mov
add
shlb
inc
cmp
push
adc
add
push
jl
push
mov
loope
or
rcrl
push
aad
adc
sbb
test
dec
in
adc
bswap
fildll
xor
enter
test
gs
add
shll
sub
mov
sbb
imul
and
xchg
sub
or
enter
cmp
xchg
in
xor
jne
mov
inc
shr
cmc
sub
pop
movsbw
neg
cmc
add
sar
ror
mov
mov
cmp
jmp
jne
push
mov
mov
lea
jmp
aad
jo
cwtl
fsubrl
sbb
repnz
push
inc
cmpsb
cld
rcrl
push
jne
fildl
outsb
rcrl
cmp
push
std
inc
je
push
dec
sbb
jb
jo
cmpsl
mov
mov
jne
gs
adc
stos
jp
aas
test
pushf
sub
bt
cmc
pushl
rol
stc
mov
cmc
xor
movb
stc
pushf
sub
mov
call
pushf
movl
pushf
lea
jmp
add
xchg
neg
das
mov
bt
adc
pushl
bt
mov
cmc
pushf
jmp
add
pushf
push
push
lea
jmp
jmp
bswap
bswap
lea
movsbw
not
pop
xchg
movzwl
movsbl
bswap
movsbw
pushf
lea
jmp
movl
movb
pushf
lea
jmp
movb
jmp
cmc
dec
pusha
pop
cwtl
fcoml
sti
xor
addr16
mov
test
out
add
call
and
push
dec
and
scas
mov
je
pop
mov
xchg
cmpsl
add
mov
xor
js
iret
pop
inc
orl
cmp
xor
dec
cli
pop
cmp
dec
mov
jle
popf
xor
js
add
mov
inc
scas
sub
cs
xchg
add
pop
mov
in
jne
cli
addb
stos
pop
fsubrl
cmpsb
jge
stos
pop
lods
add
aad
sbb
mov
push
test
inc
dec
cs
inc
xor
jne
xor
sbb
imul
cmp
in
stc
mov
xchg
pop
lds
daa
fs
fisttpl
jnp
sub
mov
mov
xchg
inc
sbb
lret
push
mov
jecxz
sub
adc
je
mov
js
inc
mov
push
adc
cmp
jmp
fsubl
adc
and
repnz
outsl
in
mov
fwait
sub
mov
inc
mov
mov
push
push
sub
adc
shrb
stos
fwait
lcall
and
sti
in
push
dec
in
add
loop
imul
fdivrl
and
test
jb
and
cmp
fcoml
outsl
popa
mov
outsl
imul
ret
xchg
pushf
pop
int
adcb
shrb
adc
xchg
sbb
aaa
xchg
push
nop
add
jecxz
bound
les
mov
aad
jbe
lret
or
push
out
sbbb
aaa
sbb
mov
pop
ret
shr
xchg
out
dec
movsl
xor
add
adc
push
pop
outsb
cs
sbb
and
addr16
xor
adc
cmc
nop
adc
faddl
ret
test
insl
shll
jge
jnp
dec
mov
sbb
or
out
cmpsl
enter
mov
jge
cmp
adc
shll
shrb
ret
into
sub
fdivs
push
sbb
or
int
jle,pn
inc
sub
jbe
outsl
dec
out
push
or
mov
jmp
fistpll
xor
xchg
lret
sub
mov
inc
inc
fdivrl
aad
loopne
push
push
sbb
std
insl
jne
adc
inc
fisubrl
dec
mov
sbb
push
incb
push
fnstsw
fwait
and
jecxz
pop
sub
push
sbb
mov
cmpsb
push
add
pop
xchg
push
pop
mov
pop
dec
out
js
inc
dec
lods
inc
sar
iret
data16
daa
addl
cmp
insl
add
cmp
adc
test
inc
pop
mov
or
lret
inc
lods
push
shrb
jne
call
cmp
push
fs
addl
sub
test
mov
stos
push
fistpll
adc
jg
lahf
mov
rcr
dec
xor
popf
mov
lods
in
das
test
lea
add
fimull
call
lods
insb
jae
xor
sub
mov
mov
iret
in
ficoms
jp
stos
movsb
mov
leave
cmp
jmp
mov
cmp
add
mov
or
mov
in
inc
cmpsl
cwtl
dec
test
pop
inc
movsl
das
cmp
mov
sub
hlt
dec
xchg
shll
popf
jp
cwtl
aaa
xor
mov
arpl
inc
ret
add
add
pop
out
outsb
push
mov
dec
mov
addr16
xchg
mov
dec
les
mov
xor
sbb
inc
gs
orl
jg
pop
xlat
adc
cmp
push
push
je
dec
bswap
test
hlt
ds
push
jl
loope
add
test
fistps
stos
and
cmp
mov
in
jle
add
pop
aam
cmpsb
gs
pusha
cmc
sub
sbb
imul
pushf
dec
push
insb
lcall
jle
aam
dec
movsb
push
jbe
mov
fwait
dec
nop
push
jmp
adc
mov
test
dec
loope
and
nop
adc
push
cmpl
pop
lock
stos
stos
adc
shr
dec
in
sbb
aas
test
jecxz
mov
add
int3
pop
test
add
mov
mov
data16
sbb
es
lret
ds
xor
shlb
push
fidivrs
push
in
mov
loopne
int
or
sbb
cmp
imul
ljmp
inc
inc
xor
mov
movsl
xor
fs
dec
into
jl
inc
mov
mov
ficomps
clc
shlb
adc
aaa
rol
lcall
lods
sub
jg
inc
fwait
outsl
imul
xchg
pop
cmc
ss
mov
mov
int3
jnp
add
sub
daa
mov
or
pop
dec
cmp
jg
icebp
mov
adc
xchg
jne
popa
int
sub
xchg
shrl
ret
sbb
xchg
popa
pop
inc
pop
ret
imul
sahf
clc
push
sub
sub
out
or
lds
adc
les
in
xorb
movsb
sub
fs
jmp
stos
sbb
lock
xor
pushf
cs
push
fdivrs
xlat
dec
xchg
lds
xor
in
add
mov
in
lea
ja
pusha
lea
jb
pusha
pushf
clc
cmpb
call
sbb
pop
cwtl
fsubrl
xor
mov
xchg
aam
and
add
add
mov
push
or
ljmp
lds
lahf
and
clc
push
stc
out
imul
xchg
rcll
sbb
outsl
jecxz
outsl
mov
mov
add
outsl
scas
ret
inc
aas
add
fcompl
test
pushf
pushfw
popw
movb
dec
or
mov
pushl
test
cmp
pushf
sub
pusha
pushf
rol
sub
jp
pusha
pusha
sub
call
pusha
mov
pushf
movl
pushf
pushl
pushf
jmp
push
lea
jns
pushf
pushf
mov
stc
cmp
mov
call
out
outsb
pop
cwtl
fmull
stc
sub
les
inc
lods
adc
sti
daa
and
xchg
adc
jns
dec
leave
adc
sub
push
or
sets
jge
and
xchg
inc
and
dec
sub
add
sti
imul
sbb
and
clc
xchg
addb
pusha
dec
loop
adc
push
push
hlt
mov
pop
in
sub
xor
xchg
call
lcall
mov
pop
inc
push
push
cwtl
fsubl
sbb
push
sbb
add
add
aad
sub
popa
jno
adc
stc
inc
mov
mov
insl
addr16
fs
js
adc
mov
and
xor
mov
jecxz
push
call
inc
sub
jne
push
mov
sub
dec
out
stos
adc
lret
fdivs
nop
sub
insl
xchg
mov
sbb
shl
mov
std
mov
pop
popf
cmp
and
push
push
lea
ja
cmc
rol
sub
shl
add
or
mov
clc
mov
call
jmp
push
pusha
push
pushf
lea
je
stc
mov
neg
rol
movzbw
add
add
adc
cmc
rcr
mov
jmp
adc
mov
movb
pusha
lea
jmp
pushl
popl
mov
bt
cmp
pusha
lea
ja
push
sub
push
add
add
xor
mov
sbb
adc
mov
pusha
clc
repnz
pushf
jmp
pusha
mov
lea
jae
setle
sar
test
dec
mov
bsr
mov
xor
mov
stc
clc
push
xor
cmc
repnz
push
lea
ja
jne
mov
bts
jmp
pushf
lea
jne
lea
lea
call
jmp
pushf
movb
movl
pusha
mov
lea
jmp
pushf
lea
jne
call
dec
pusha
jmp
pop
mov
das
jae
jge
repnz
add
jne
sbb
jg
fldt
fs
scas
inc
add
mov
push
mov
xor
scas
sbb
pop
mov
inc
out
push
mov
pushf
cltd
fisttpll
nop
and
jbe
jns
testl
add
sbb
ficomps
cwtl
fmull
adc
orb
fiaddl
ljmp
in
mov
add
xchg
das
mov
fnstsw
lods
inc
dec
stc
decb
adc
adc
inc
out
cmp
nop
aaa
shrb
stos
dec
mov
push
mov
enter
mov
lcall
frstor
jmp
imul
xchg
xchg
push
xchg
cmp
mov
pusha
cmc
cmpb
pusha
lea
jne
aad
sub
xor
bts
btc
mov
call
mov
mov
not
movzbl
push
bswap
pushf
lahf
lea
call
call
pushl
movl
push
pushf
pushf
movb
pushl
popl
pushf
movw
pusha
mov
pushl
ret
mov
mov
stc
test
pushf
test
call
sub
cmp
nop
in
in
loopne
cld
sub
mov
fldt
int3
ret
movsl
in
sbb
popa
insb
adc
int
cmpb
lods
std
movzbl
pop
cltd
test
add
or
xchg
rcrb
hlt
insl
or
pop
mov
ret
sub
mov
jb
lock
in
sub
test
data16
mov
pop
shrb
mov
pop
push
int3
repnz
cmp
push
jmp
pushl
push
movl
movl
pushf
push
lea
jmp
push
mov
bswap
mov
jmp
cmp
pusha
lea
jl
ja
jmp
movb
movb
lea
ja
bt
xor
cmp
sub
btc
inc
stc
stc
add
shl
mov
mov
mov
pusha
stc
stc
repnz
jmp
jmp
jecxz
cwtl
fdivrl
adc
and
jnp
jecxz
jb
faddl
cmpsl
dec
sbb
cmpsb
fiaddl
mov
push
mov
fwait
push
mov
mov
push
xchg
cmc
pop
xor
jecxz
jp
notb
insl
imul
incb
adc
sub
fdivl
sar
imull
adc
std
jp
jecxz
mov
mov
xchg
cmpsl
dec
in
mov
xchg
sbb
ds
lods
mov
xchg
sub
xchg
xor
jmp
mov
jmp
adc
mov
mov
adc
mov
scas
pop
push
xor
sarb
lret
jmp
sbb
repnz
into
call
scas
pop
repz
adc
mov
jg
cltd
or
movsl
dec
fisubrl
push
call
mov
mov
mov
mov
pushf
lea
jne
push
pop
mov
pushf
pushf
pusha
lea
jmp
test
fstl
fdivrl
xchg
cmp
cwtl
mov
push
push
gs
ret
and
xchg
mull
lret
or
lock
mov
sub
mov
in
imul
add
lret
inc
pop
in
test
clc
cmpsb
push
mov
js
loopew
pusha
gs
sub
xorl
mov
pop
adc
xchg
adc
fs
jb
and
xor
pusha
or
cmc
repnz
test
push
lds
test
push
jecxz
dec
push
xchg
or
jmp
mov
push
mov
xor
mov
and
jae
push
pushf
bt
cmp
pushl
lea
ja
mov
jmp
lea
jne
not
btr
dec
neg
mov
shl
bsr
and
sub
movzbw
shld
inc
mov
pusha
clc
call
pushf
push
lea
call
jmp
add
ror
movzbw
mov
btr
add
adc
movzbw
movl
sbb
push
pushl
btr
mov
sub
bt
cmc
cmp
pusha
mov
mov
lea
jbe
cmp
and
not
sub
inc
mov
cmp
cmc
mov
shr
add
bt
cmp
and
shr
bsf
mov
sar
sbb
add
jmp
mov
cmc
test
pushl
jmp
mov
mov
cwtl
faddl
jne
insl
test
fldenv
sub
js
adc
jnp
loop
push
nop
cld
cld
int3
dec
sahf
lods
addl
lds
sub
cli
or
out
clc
add
icebp
xchg
mov
fwait
lret
sub
or
pop
shl
add
jl
jo
sub
mov
push
cli
mov
dec
push
ja
pop
push
stc
mov
or
pushf
pushl
lea
jne
dec
mov
test
cmp
pushf
pushf
or
pusha
pushf
jmp
call
lea
jne
pusha
movsbw
movb
push
mov
setge
lea
jmp
mov
fmull
js
lods
xor
mov
lods
xor
cmp
sub
cmp
lcall
mov
test
mov
mov
outsb
in
jle
jmp
xchg
or
imul
dec
hlt
stos
sbbb
popa
mov
xchg
add
jmp
pushf
or
add
adc
mov
cmc
dec
fwait
stc
das
push
push
cltd
repz
mov
add
inc
jp
mov
sbb
mov
pusha
jmp
inc
mov
call
jmp
clc
cwtl
push
dec
cwtl
fcoml
jo
pusha
dec
pushf
cmp
push
cmpsb
sub
loopne
mov
test
xlat
nop
fmull
sbb
and
aaa
std
inc
arpl
sahf
jle
xchg
inc
or
out
aas
sti
imul
mov
test
jno
sbb
dec
aas
mov
es
call
xor
movw
pusha
movl
push
pushf
pushl
pushf
movl
push
mov
mov
lea
jmp
lea
call
clc
ror
dec
cwtl
fmul
adc
jo
cmp
loopne
cmp
aam
and
cmpsl
out
stc
and
xchg
sub
and
je
push
roll
in
imul
pop
jmp
and
jno
xor
ja
aad
mov
aas
sbb
call
adc
xor
add
add
add
add
adc
ret
pop
push
arpl
je
pop
or
and
add
pop
xor
pop
xchg
arpl
adc
pop
les
aam
pop
adc
je
test
and
xchg
les
xchg
les
inc
xor
pop
or
pop
movb
lea
je
mov
cmp
sete
aam
sub
btr
mov
clc
mov
rcr
sar
ror
shr
btc
shl
inc
pusha
mov
clc
pusha
cmp
or
mov
lea
je
movsbw
sub
adc
add
bsf
sbb
shld
sub
xadd
shr
cmp
test
xchg
shrd
mov
sar
add
sar
shl
test
sub
add
je
mov
cmp
stc
cmp
clc
shr
pusha
jmp
lea
movb
movsbw
push
call
movw
lea
jne
inc
mov
btc
btc
mov
shl
sub
sub
or
cmp
mov
test
bt
sub
cmc
clc
pushl
test
cmc
push
jmp
clc
push
xor
push
pushf
movw
lea
call
pushf
pushf
pushf
lea
jae
bt
call
pushl
popl
movb
movw
pushl
ret
lea
jne
rcl
dec
clc
mov
shl
sub
lea
movsbl
mov
stc
sub
pushf
bt
test
pushl
popl
bt
cmp
call
inc
pop
jg
cwtl
fcompl
xchg
test
push
into
in
push
shrb
sti
cmp
sbb
pop
xlat
mov
andb
stos
nop
mov
out
xchg
cltd
cmp
sbb
fs
cwtl
mov
cwtl
or
addr16
dec
mov
dec
or
test
and
ret
mov
fdivrl
std
jno
addb
hlt
mov
dec
int3
pop
call
push
xchg
add
pop
scas
ds
push
lcall
cmp
fucomp
dec
incb
or
popf
mov
scas
dec
cwtl
fsubr
sub
sbb
pushf
cwtl
lods
fadds
dec
movsb
loop
mov
out
or
jge
lret
aad
cmp
cmp
mov
push
and
dec
dec
jmp
jp
jo
int
push
pushf
ret
test
es
es
out
xchg
orl
int
cltd
inc
jo
and
pusha
stc
add
movl
push
pushf
lea
jmp
call
call
call
lea
movb
movb
movl
call
push
sbb
dec
cwtl
fmull
ljmp
push
cmpsb
adc
lcall
test
nop
mov
scas
ds
sbb
push
imul
inc
adc
push
inc
mov
mov
xor
in
mov
cmp
rcll
adc
pusha
pushf
push
lea
jmp
jmp
push
jmp
pusha
pushl
ret
sub
pusha
jmp
clc
call
lea
jne
setns
movzbw
jae
push
movb
setbe
mov
movsbl
call
add
add
cmc
or
pushf
pusha
pushl
jmp
rep
bswap
call
setnp
pusha
setg
mov
inc
movb
add
shrd
shl
mov
pushl
test
call
jmp
pusha
add
movb
push
lea
jmp
pusha
cwtl
lea
call
jmp
pushl
popl
movsbw
lea
call
pusha
pusha
pushf
movl
jmp
rol
jmp
lea
je
pusha
pusha
cmc
sub
pushf
cmp
call
push
inc
inc
mov
lea
bswap
inc
movzbl
mov
jmp
pusha
lea
jne
sub
xor
shl
mov
cmc
or
pusha
lea
je
pusha
pusha
lea
lea
xchg
movzwl
bswap
lea
call
jmp
lea
jne
shr
bsr
test
shl
mov
clc
push
clc
add
pusha
test
pushf
pushf
movzwl
bswap
mov
cmc
cmp
clc
bt
add
cmc
call
pushf
mov
dec
cwtl
fsubrl
stc
cmc
dec
fnstcw
popa
icebp
add
mov
mov
mov
dec
mov
or
mov
sti
sbb
insl
lods
faddp
sbb
in
rcr
mov
inc
jl
cmp
jge
mov
lea
mov
pushf
lea
jmp
add
call
movl
pushf
setb
call
pushl
movl
jmp
lea
jle
inc
push
push
push
lea
jmp
call
pusha
setb
lea
push
call
lods
movb
clc
jmp
dec
sbbb
faddl
loop
lret
lock
scas
push
or
jbe
cmp
mov
xchg
aas
pop
jae
out
imul
xorl
test
sbb
addl
stos
jno
push
aad
mov
stos
fcmovnbe
mov
stc
adc
cltd
add
and
and
idiv
mov
pop
fldcw
xor
stos
xchg
xlat
inc
mov
fcoml
add
imul
and
int3
push
ljmp
jnp
mov
icebp
cmp
adc
adc
push
xchg
sbb
mov
add
push
popa
jns,pt
inc
push
in
lahf
sbb
into
pop
in
loop
test
cmp
shrl
pop
enter
push
lahf
jae
in
popa
mov
ss
in
add
sarl
aad
pop
push
jle
jnp
rcr
push
mov
mov
mov
jp
addr16
xchg
and
jo
sahf
xor
mov
lcall
sub
arpl
fwait
push
mov
test
lret
push
cmpsl
rcrl
bound
xchg
ljmp
xor
das
ret
dec
inc
jp
rolb
call
push
dec
rcl
inc
out
inc
mov
lea
cmc
ljmp
cld
mov
jmp
call
jmp
dec
jmp
mov
mov
pushl
ret
add
clc
rol
pushf
jmp
jmp
movb
movb
call
sbb
mov
fdivl
jge
cltd
in
vaddsubpd
adc
stos
jl
inc
xor
sbb
push
pop
in
dec
mov
in
mov
push
push
addr16
test
add
gs
lahf
in
mov
popa
pop
rcrl
pop
movsl
rcll
xchg
mov
cli
mov
adc
hlt
into
xor
adc
mov
pushf
cs
and
mov
inc
push
das
shll
lahf
stc
inc
cmp
adc
mov
or
faddl
cmp
pop
cmc
lcall
fsub
repnz
and
adc
popa
aas
fdiv
mov
faddl
mov
xor
es
sub
xchg
arpl
cmp
out
jns
sbb
outsb
ret
jg
cmp
out
rcll
mov
mov
sbb
mov
push
mov
lods
stos
mov
or
js
mov
fwait
and
fisubrl
leave
jecxz
pop
mov
aaa
and
jbe
inc
pop
lods
cmp
cmp
add
push
into
push
adc
xor
or
xlat
xor
mov
add
bound
rcrb
js
fstpt
dec
shlb
faddl
sbb
jb
xchg
int3
aas
in
lock
sub
cmp
bt
or
pushf
jmp
push
movl
pushf
movl
push
push
movb
lea
jmp
push
lea
jb
call
jmp
mov
faddl
ja
xchg
or
rclb
ror
add
pusha
cmp
xchg
lods
inc
leave
mov
push
push
daa
ret
adc
cmp
jae
aam
jne
mov
cmp
sbb
push
outsb
movswl
xchg
jb
sub
xchg
jmp
dec
cmp
out
mov
movd
insl
inc
roll
sub
test
fs
test
pop
leave
or
sub
popa
dec
or
das
mov
pop
gs
mov
insb
lock
push
enter
fstl
out
fisttpl
cld
xchg
sub
xchg
int3
and
cmp
push
jle
jp
inc
call
xchg
xor
sub
jp
inc
cwtl
fsubrl
xor
dec
les
dec
xchg
inc
xor
movsl
cmp
decb
add
inc
push
insb
idivb
mov
jle
add
sbb
sub
add
xchg
pop
dec
sti
xchg
imul
push
out
or
outsb
stos
rcll
pop
notl
cmpsb
lods
ss
out
or
adc
lret
mov
fnstsw
je
dec
fldl2e
repnz
cltd
imul
mov
pop
fwait
fwait
jno
mov
sub
jmp
call
mov
push
push
adc
pushf
lea
call
pushf
mov
lea
jb
push
pushl
ret
lea
je
pushf
pusha
push
movb
lea
jmp
pushl
mov
bswap
call
test
stc
add
stc
movzwl
call
adc
xor
je
xchg
pop
or
pop
and
add
pop
xor
pop
xchg
arpl
adc
pop
les
aam
pop
adc
je
test
and
xchg
les
xchg
les
inc
xor
pop
or
pop
movl
pusha
pusha
pushf
mov
lea
jmp
ficompl
test
fcompl
cmpsb
mov
add
jp
gs
mov
xor
push
push
lcall
je
imul
imul
sub
mov
imul
vmaxpd
add
xor
and
inc
pop
inc
cwtl
faddl
jbe
imul
js
xor
daa
xchg
insb
jle,pn
lcall
add
and
add
xor
adc
rorb
fdiv
outsb
pop
nop
mov
mov
rorb
testb
jne
push
in
jne
push
loope
pop
jge
je
adc
mov
jle
into
cs
movsb
add
cltd
jo
xchg
fcomps
fmull
pop
xor
testl
lret
dec
mov
jge
cmpsl
mov
orl
xor
loope
jg
fistpll
jle
testl
into
jp
push
pop
push
stos
and
std
jmp
div
ror
add
dec
inc
gs
or
cmp
and
stos
incb
add
arpl
movsb
or
jae
pop
inc
cmc
std
inc
mov
or
outsb
shl
adcb
push
fwait
enter
jnp
jbe
xchg
leave
cmpsb
pushf
or
imul
cmp
fsubl
mov
xchg
pop
dec
adc
in
test
pop
and
ja
xchg
xchg
push
enter
mov
movsb
add
mov
rorb
jle
lea
add
xor
aam
inc
jle
sahf
js
add
int3
push
decb
sti
call
popf
cpuid
nop
push
mov
call
jecxz
dec
inc
cwtl
fdivl
sbb
add
lods
push
stc
test
sarb
call
sbb
or
int
push
in
mov
jl
and
outsl
dec
dec
fimull
outsl
mov
mov
icebp
in
jp
subb
sti
pop
ret
push
insl
inc
adc
add
mov
jbe
mov
fisttps
push
pop
push
mov
mov
xlat
popf
cltd
and
pop
leave
daa
cmp
out
mov
testb
je
and
shl
jmp
jmp
push
cmp
cmp
pusha
pusha
jmp
xchg
adc
cmp
mov
mov
icebp
or
test
mov
and
mov
or
dec
adc
andl
fistpl
dec
out
shrl
pop
leave
pop
dec
addr16
movsb
mov
lods
call
inc
repnz
arpl
data16
dec
adc
pop
pop
lea
popa
lea
test
fisubrl
cltd
pop
fwait
out
aas
xchg
repz
sub
inc
mov
cltd
mov
mov
in
xchg
hlt
sub
and
mov
jmp
adc
mov
hlt
push
jg
ds
jo
mov
sarl
sbb
xchg
cmp
js
and
jecxz
cmp
adc
sbb
test
mov
test
or
outsb
adc
rcrb
js
xlat
add
jecxz
mov
stos
sbbb
fmuls
cmpsl
jp
ds
test
cmp
int
dec
mov
and
add
cmc
repz
jno
jecxz
aad
iret
outsb
xchg
fsubrs
sub
inc
pop
mov
mov
imul
or
insl
dec
dec
mov
adc
fs
movsl
out
mov
movsbl
bswap
pushf
mov
mov
mov
call
lea
jb
push
pushf
pushf
cmp
lea
jl
jae
shl
mov
xchg
btc
sub
mov
adc
cmc
pushf
shld
mov
pusha
sub
call
pushl
movl
jmp
push
test
jmp
lea
jne
sub
movzbw
btr
mov
stc
jmp
call
js
movsl
cmp
adc
or
iret
clc
sidtl
inc
push
pushl
lods
inc
mov
insl
sbb
mov
xlat
imul
clc
mov
hlt
out
negb
pop
sub
adc
jge
shrb
add
xchg
sbb
adc
adc
and
out
fst
ret
mov
lock
ja
stc
push
aas
sub
int3
mov
or
test
pushf
adc
popf
roll
dec
dec
inc
push
popa
mov
push
pop
popa
jne
pop
mov
adc
int3
loopne
cwtl
fdivrl
out
pushf
xchg
dec
add
mov
add
mov
lcall
lcall
cmpsb
sub
push
int3
xor
dec
add
add
shlb
jo
xor
cwtl
sahf
fcoml
rorb
dec
in
xchg
jne
pop
mov
or
pusha
call
and
shrd
mov
call
pushf
lea
jne
jmp
lahf
cmp
pushl
stos
das
adc
and
test
pop
data16
into
lods
cmp
xchg
push
stc
mov
mov
popa
outsl
dec
xor
xor
sub
idiv
mov
xchg
mov
out
repnz
icebp
adc
push
lcall
sub
divb
mov
lods
lods
stos
out
inc
xchg
sbbl
or
pushf
and
jmp
inc
call
sbb
inc
sbb
push
loope
xchg
dec
shlb
or
dec
pusha
push
jp
imul
js
andb
sub
sub
mov
sub
sub
stc
inc
and
out
std
push
ror
mov
sub
cmp
pusha
pushw
popfw
call
daa
movzbl
neg
mov
clc
clc
call
mov
fdivl
xchg
cltd
rcrl
inc
dec
add
jge
jg
cltd
lret
or
ljmp
push
mov
push
mov
aad
jle
sbb
push
scas
cwtl
loop
add
loop
inc
sub
xor
movsl
ja
jge
mov
or
push
cmp
lods
xchg
popf
popa
in
cli
add
pop
cli
out
sbb
adc
in
arpl
adc
push
rorb
test
jnp
xor
add
pushf
call
sub
mov
pop
jg
lret
and
out
pop
outsl
std
in
xchg
and
fcmovbe
xchg
lods
sub
in
xor
xor
mov
xchg
imul
das
imul
popf
cltd
test
imul
and
jmp
mov
pushl
pushl
ret
push
jmp
add
movzbw
btc
adc
bsf
mov
bt
test
pusha
lea
je
adc
cmp
shl
add
bswap
shr
mov
push
bt
jmp
call
adc
mov
fisttpl
mov
mov
cwtl
repz
test
adc
lret
xchg
lea
int
cmp
or
xor
movsl
fs
repz
xor
movsl
fistpll
fdivl
sbb
lahf
std
xor
and
mov
out
or
aaa
xchg
insl
or
inc
ja
xchg
xchg
jne
xor
call
enter
jb
iret
scas
add
hlt
jle
mov
xchg
sbb
pop
adcl
pop
jl
add
jg
xchg
mov
fidivs
lret
pop
mov
jmp
push
adc
aam
mov
das
xor
and
cltd
mov
lods
loop
pop
jmp
cmp
clc
cs
mov
icebp
push
test
pop
mov
fsubrl
cmp
leave
bound
push
fs
jle
push
lea
je
push
pushf
lea
jmp
sbb
pop
add
fsts
inc
add
lock
adc
and
mov
frstor
cmp
ja
sub
sarb
lods
daa
mov
sahf
cld
jbe
sbb
and
add
mov
xor
fbstp
jae
aad
sti
pop
stos
sbb
cmp
cmp
cwtl
cmp
xchg
sbb
in
cmp
mov
sbb
xor
sarl
sbb
outsl
mov
lret
das
pop
add
inc
inc
lret
rolb
data16
stc
xlat
pushf
cmp
lahf
mov
xor
add
imul
idiv
mov
pushl
pusha
pushf
pushf
xchg
cwtl
mov
push
cwtl
call
clc
call
call
mov
push
mov
lea
jmp
lea
jae
jmp
pop
jmp
pushf
add
push
push
pushl
lea
jmp
cwtl
pushl
movl
movw
lea
call
cmpsb
clc
ss
fdivrl
xlat
jae
jecxz
mov
jg
loopne
lret
int3
mov
shlb
cmp
sub
je
sahf
insl
xchg
mov
insl
jo
jle
and
inc
out
or
mov
adc
dec
aas
add
fs
jae
call
popf
rdtsc
nop
push
pushf
movb
jmp
in
jno
cwtl
fsubrl
popf
or
popa
fnsave
imulb
leave
jae
fs
shll
add
add
orb
sbb
cmp
daa
lock
push
mov
shlb
out
xor
xchg
adc
push
scas
fs
in
or
mov
popa
adc
adc
test
cwtl
mov
cltd
popf
jmp
jae
xor
out
mov
aaa
and
jmp
jmp
push
lea
call
sbb
jle,pn
cli
mov
jae
push
enter
mov
fdivrs
test
addr16
fwait
andl
fildl
mov
or
pop
das
popf
inc
imul
or
sahf
jb
mov
aam
dec
fsubrs
mov
cmp
fisttpll
and
or
mov
jae
sub
adc
add
mov
movsb
in
dec
popa
cmp
aam
cmp
incl
xchg
mov
mov
test
das
rcrl
rorl
ja
pop
leave
mov
es
sti
and
cli
xchg
jo
cmp
icebp
sbb
push
add
ljmp
sbb
pop
push
dec
add
in
pop
xor
aas
xor
out
mov
inc
pop
ljmp
xor
dec
push
dec
xchg
pusha
shlb
call
fxch
je
mov
out
mov
sahf
lods
mov
mov
cli
aad
sub
dec
cwtl
inc
add
leave
mov
mov
add
pop
jae
mov
or
adc
ret
mov
jge
movsl
rorb
out
sbb
jo
dec
loop
stc
mov
xchg
int
out
mov
mov
cltd
fnstcw
or
test
rolb
push
lock
xchg
pop
push
and
fistpl
pop
mov
sbb
xor
xchg
je
icebp
lods
inc
decl
jnp
xor
js
test
inc
int3
out
mov
pop
and
push
jbe
mov
shll
sub
and
inc
dec
lea
movsl
pop
in
jle
mov
or
push
in
sub
data16
iret
pop
adc
xchg
inc
and
jne
setne
sets
call
dec
xchg
or
fdivl
lret
pop
ja
jecxz
daa
stos
mov
pop
adc
jge
sub
xor
xor
enter
sahf
or
movsb
adc
and
xchg
sub
adc
je,pt
cld
add
cmp
push
scas
dec
aas
jb
test
and
jb
call
mov
movzbw
jmp
inc
dec
not
inc
lea
jg
inc
bt
add
xchg
movsbl
add
bswap
mov
sar
or
jmp
lea
ja
push
bt
call
call
not
lods
call
cmp
xor
mov
jo
sbb
loop
repnz
or
cli
jl
inc
cmp
gs
ljmp
jo
sub
mov
sub
sti
xlat
jne
cmpsl
aaa
das
ljmp
jmp
in
jl
jecxz
inc
sbbl
stos
insb
movsb
mov
fsubrl
or
movsb
and
push
mov
add
xchg
pop
push
in
jl
out
movsl
cmp
cmpl
inc
cmp
mov
ficoms
push
les
cwtl
jbe
cmp
jle
arpl
lret
add
jge
popa
in
scas
inc
fmull
outsl
cmpsl
sub
cli
loopne
and
sub
pop
loopne
push
push
sahf
cmp
mov
js
std
in
jb
je
into
roll
testl
addr16
and
out
es
in
movl
outsl
repz
xor
cwtl
mov
mov
and
pushf
and
add
adc
movsb
adc
push
jb
loopne
xor
xchg
jg
dec
outsl
adc
jno
mov
or
xchg
adc
mov
pop
scas
pushl
pushl
pop
adc
in
out
cmp
sbb
mov
bound
pop
push
ficoml
ss
lea
outsl
stc
and
cli
in
mov
fists
fldl
dec
pop
notb
mov
cs
loope
sub
enter
enter
pushf
cwtl
pop
inc
xchg
insb
mov
and
fsubs
mov
mov
add
sub
nop
mov
pop
and
mov
mov
cmp
fstl
lods
repz
pop
cmp
test
loopne
mov
inc
pusha
lea
jae
ror
clc
pusha
pusha
sub
cmp
call
repnz
jmp
not
mov
pop
pushf
pushf
pushl
ret
call
jmp
movl
movw
movb
call
call
pushl
jmp
movw
repz
popl
lea
ja
pushf
push
mov
mov
pushf
pusha
call
pushl
jmp
mov
test
add
pushf
pushf
movb
pushf
lea
jmp
movsbw
mov
movsbw
not
mov
pusha
push
jmp
aaa
das
mov
rcr
mov
clc
jmp
mov
jmp
push
mov
push
pushf
pushl
mov
lea
jmp
jmp
jmp
mov
call
shl
xadd
sub
bt
pushf
lea
lea
cmc
sbb
mov
mov
call
pusha
mov
pushf
call
jmp
mov
pusha
mov
call
call
pushf
pushl
popl
mov
pushf
movb
movb
lea
jmp
and
bsf
shrd
mov
cmp
test
sub
jo
pushf
mov
mov
pusha
pushl
pushf
lea
jmp
call
rcl
bsf
mov
pusha
test
shl
test
mov
pusha
pushf
call
movw
mov
push
mov
call
add
test
sub
mov
push
stc
cmc
jmp
pushf
jmp
xor
mov
movzbw
bsf
mov
pusha
add
mov
call
repz
popl
bsr
xchg
shl
shl
bt
mov
shl
shl
xchg
add
btc
rcl
sub
mov
push
shl
pushl
sbb
movsbl
cmc
push
clc
btr
mov
btc
movsbl
btc
shr
neg
sete
rcr
sub
not
sub
sar
rcr
inc
cmp
bswap
rcr
bts
push
lea
call
mov
push
pushf
movb
movw
pushl
ret
sub
cmc
pushf
lea
jl
rol
clc
cmp
cmp
call
call
pusha
mov
bsr
setp
ror
add
mov
lea
jp
add
pushf
mov
pushf
lea
jmp
sub
aaa
push
shr
mov
pushf
movsbw
mov
rcl
push
mov
mov
jmp
mov
push
lea
jmp
pusha
push
mov
pushf
pusha
xchg
movzbl
mov
setp
mov
pushf
movb
jmp
or
lahf
mov
test
cmp
add
pusha
push
clc
bswap
jmp
pushl
popl
movb
lea
jmp
push
xor
and
mov
movb
call
mov
movb
mov
lea
jmp
mov
push
push
lea
jmp
jmp
bt
clc
shrd
mov
push
mov
mov
call
push
call
pushf
popl
jmp
pushf
pusha
pushl
popl
mov
lea
jmp
movb
mov
pushf
mov
jmp
bsf
neg
mov
test
push
add
pusha
pushf
call
mov
pushf
mov
push
repz
popl
call
push
movl
call
movw
mov
jmp
mov
push
pusha
movw
pushf
lea
jmp
shrd
bswap
push
cltd
rdtsc
pusha
sub
push
mov
push
mov
mov
pushf
push
push
pushf
lea
jmp
add
call
rcr
rcl
mov
jmp
mov
call
mov
jmp
add
adc
xor
shr
movzbl
jmp
sub
clc
bt
pusha
push
shl
push
mov
push
pushf
mov
mov
jmp
mov
xadd
mov
sub
bt
mov
clc
stc
push
stc
sub
push
pushf
bt
shr
jmp
pushf
popl
push
movl
pushl
popl
pushf
lea
jmp
sub
pushf
pusha
pushf
pushf
mov
pushl
pushf
inc
pushf
movw
mov
push
lea
jmp
test
push
call
mov
jmp
repz
popl
jmp
mov
call
jmp
mov
mov
pushl
mov
push
pushf
pushf
lea
jb
pushf
pusha
push
pusha
pushl
popl
movw
pushf
lea
jmp
mov
push
jmp
pusha
movl
sub
pusha
stc
bt
test
shl
push
movw
mov
call
mov
mov
mov
lea
jmp
cmc
mov
pusha
jmp
pusha
pushf
call
inc
clc
mov
push
jmp
jmp
pusha
push
mov
pushl
mov
pushf
mov
pusha
movb
movb
mov
call
mov
pushf
push
jmp
shr
add
shrd
clc
mov
cmc
push
cmc
add
pusha
pusha
movw
lea
jmp
add
lea
jae
pushf
mov
mov
movw
mov
pushf
lea
jmp
pushf
pusha
mov
pushf
push
movb
mov
lea
jmp
add
pushl
stc
pushf
bt
sub
pushl
mov
movb
lea
jmp
clc
shl
pushf
mov
clc
pusha
sub
cmp
add
pusha
pushf
popl
push
jmp
lea
mov
push
pusha
pusha
rcr
add
jmp
jmp
push
mov
pusha
mov
pusha
repz
popl
jmp
bts
clc
and
sub
or
adc
mov
cmp
cmc
clc
clc
add
jmp
mov
add
jmp
cmp
cmp
cmc
add
movb
mov
mov
pushf
movw
lea
jmp
mov
pushf
movb
push
pushf
lea
jmp
jmp
pusha
mov
push
pushf
mov
call
sbb
xchg
xor
not
mov
shr
inc
mov
stc
sub
test
call
xchg
cmp
not
mov
dec
mov
test
bt
add
pushf
mov
pushf
pushf
push
lea
jmp
mov
pushl
push
lea
jmp
pushf
mov
push
pushl
pushl
lea
jmp
sbb
movzbw
neg
mov
jmp
movl
mov
mov
movb
jmp
mov
jmp
pushf
movb
mov
pushf
movb
call
jmp
pusha
dec
call
rcl
sar
rcl
mov
sub
mov
clc
call
call
xor
call
pusha
push
mov
pushl
movb
lea
jmp
pop
setl
pop
push
pusha
pushl
movb
pushl
ret
push
bt
xor
jmp
jmp
push
movb
jmp
cmp
mov
movzbw
rcr
sub
movsbw
dec
add
neg
xor
shrd
shr
sub
dec
add
clc
add
clc
pushf
sub
pusha
bts
pushl
mov
stc
bt
clc
add
pushf
jmp
mov
mov
mov
lea
jmp
pushf
mov
jmp
pushf
mov
pushf
mov
lea
jmp
pushf
popl
movb
call
pushf
popl
pushf
jmp
mul
pusha
jmp
push
or
pushf
lea
jns
pushf
pushf
lea
je
stc
xor
clc
push
stc
xchg
stc
cmc
cmp
mov
pusha
pushf
clc
pushf
sub
jmp
push
push
call
pushf
mov
push
pusha
push
pushf
lea
jmp
push
pushl
popl
pushf
pushl
lea
jmp
mov
mov
repz
popl
push
jmp
call
pusha
jmp
mov
push
mov
movb
mov
lea
jmp
call
pushl
mov
mov
pusha
pushf
jmp
mov
call
pushf
call
cmc
test
add
pusha
lea
jmp
jmp
mov
mov
movb
call
not
test
pusha
test
add
cmc
test
sub
push
call
movl
mov
call
jmp
xchg
lea
das
mov
rcl
test
sar
mov
clc
sub
cmp
bt
jne
cmc
shl
call
sub
pushf
mov
push
movb
push
lea
jmp
lea
das
mov
sub
mov
cmc
clc
clc
not
call
mov
pushf
pushf
movw
lea
jmp
pushl
pushf
popl
jmp
push
mov
push
lea
jnp
repz
jmp
or
inc
mov
and
sbb
mov
mov
push
sub
cmc
shr
jmp
jmp
mov
jmp
bt
test
bt
not
stc
push
xor
call
cmc
not
notl
movzbw
mov
aas
or
mov
pushf
clc
pushf
pusha
sub
cmp
and
movl
call
cmc
push
rcl
mov
shl
inc
rcr
mov
ror
add
dec
mov
call
mov
mov
movb
pushf
popl
jne
pushf
push
pushl
popl
pushf
lea
jmp
pusha
call
sub
test
bt
add
push
pushf
popl
push
jmp
cmc
stc
sub
cmp
clc
mov
pusha
cmc
pushf
push
add
push
pushf
sub
push
call
sbb
mov
jnp
cmp
test
cmc
add
push
lea
jmp
pushl
mov
mov
mov
pushf
mov
mov
movb
pushf
pushf
lea
jmp
ror
btc
xadd
add
add
test
rol
and
mov
xor
btr
cmp
sub
rcl
not
bts
add
rol
pushf
sbb
neg
bts
rcl
bswap
sub
pusha
movzbl
pop
mov
jmp
or
mov
pusha
bt
sub
movb
pushl
mov
push
pushf
movw
lea
jmp
pushf
mov
mov
mov
lea
jmp
lea
jne
push
pushf
bt
mov
xor
call
lea
bswap
mov
not
mov
lea
jl
pop
setno
movsbw
pop
movzbl
movzbl
call
call
mov
pushf
pushf
popl
pushf
call
pushl
popl
pushl
mov
lea
jmp
cmc
cmp
stc
pusha
shl
call
mov
call
mov
mov
movb
mov
jmp
add
pusha
mov
lea
jmp
cmc
jmp
jmp
pushf
pusha
call
mov
mov
mov
mov
mov
lea
jmp
not
cmp
mov
cmp
sub
pushl
clc
call
mov
jmp
jmp
sub
call
pushf
pushf
popl
movl
push
movb
movb
pushl
popl
pushf
pushl
lea
jmp
repz
popl
movb
mov
call
shl
mov
cmc
call
jmp
lea
jge
pushf
push
pusha
mov
call
lahf
btc
movzww
bt
push
push
xor
cmp
stc
sub
mov
cmp
cmp
neg
cmp
bt
movw
mov
not
movb
xor
cmc
pusha
cwtl
stc
sub
call
cmpl
movb
mov
jmp
mov
movb
mov
movb
movb
lea
jmp
push
mov
pushf
push
pushf
popl
pushf
jmp
xchg
pushf
pusha
jmp
pusha
pushl
mov
pushf
call
mov
call
pushf
call
movb
mov
movb
movb
pushf
mov
mov
call
call
neg
clc
add
test
sub
pusha
mov
jmp
mov
push
movb
call
push
push
mov
pushl
jmp
not
mov
pushf
pusha
pushf
mov
pushl
ret
jmp
bt
movb
add
push
cmc
cmc
test
sub
push
call
adc
inc
das
mov
ror
not
shl
mov
stc
cmc
jmp
test
add
push
pushf
rol
sub
jbe
cmc
cmp
test
sub
push
test
mov
pushf
cmp
pushf
jmp
sub
movb
pushl
call
call
movb
mov
pushf
popl
movb
jmp
pusha
pushf
clc
add
call
call
pusha
movw
lea
ja
pusha
rdtsc
lea
movzbw
lea
shl
sub
or
bsr
lea
or
and
sbb
xor
bsf
sub
lea
pop
pushf
mov
mov
pushf
pushf
popl
not
cld
push
pushf
std
push
mov
std
bswap
cld
lea
pushf
mov
mov
pusha
pushf
mov
push
cld
pushl
pushl
jmp
bts
rol
shld
mov
neg
add
bsr
add
push
sub
sub
bts
call
mov
push
push
movw
mov
mov
mov
push
call
dec
movsbw
sbb
mov
rol
rol
rcr
neg
add
call
pusha
pushf
call
xadd
mov
jmp
bt
add
movb
mov
movb
pushf
lea
jmp
not
movzbw
mov
stc
neg
mov
bt
not
test
pushf
pushf
not
pushf
cmp
bt
sub
jmp
pushf
inc
cmc
neg
pushf
call
btc
movzbl
mov
call
stc
push
call
pushf
rep
add
shl
mov
pushl
xor
mov
movb
pushl
popf
pushf
movb
lea
jmp
call
call
mov
pushf
mov
push
mov
push
pushf
lea
jmp
pushf
call
movsbw
movzbw
pusha
mov
pushl
push
lea
call
cmp
rcl
dec
stc
mov
sub
push
ror
mov
cmp
call
stc
cmp
neg
call
pushf
jmp
pushf
movzbl
not
sub
pop
add
movzbw
bts
cmp
mov
neg
sub
inc
sbb
bt
not
cmc
sub
inc
movzbl
call
call
mov
movb
lea
jmp
bts
sub
ror
xor
dec
bt
add
rcr
movsbw
stc
rol
add
mov
sub
shl
cmc
pushf
sub
movzbw
not
cmp
mov
call
pushl
popl
push
push
pushf
pushf
lea
jmp
pushf
sub
mov
movl
pusha
div
movl
mov
call
push
call
mov
movb
lea
jmp
jmp
jmp
cmc
call
movl
pushl
popl
pushf
pushf
lea
jmp
call
pushl
mov
push
push
lea
jmp
cmc
add
pushf
pushf
mov
pushf
lea
jmp
lea
jne
rol
add
bsf
xorb
pusha
pop
lea
mov
pusha
lea
jmp
push
mov
pushf
call
call
neg
cmp
push
mov
test
push
jmp
cbtw
mov
bt
stc
cmp
xor
cmp
sub
pusha
jmp
call
call
mov
pushf
movb
call
pusha
movb
pusha
mov
call
lea
je
cmp
xor
pusha
jmp
clc
jmp
bt
add
call
test
sub
mov
call
btr
shrd
xor
not
sub
rcl
neg
inc
neg
sbb
stc
bswap
movzbw
and
clc
test
and
mov
jmp
pusha
pushf
sub
call
mov
pushf
call
cmc
cmp
bt
cmp
add
pusha
mov
pusha
movb
mov
pushf
lea
jmp
mov
repz
popl
call
pusha
and
pushf
cmp
call
cmp
and
call
bt
add
pusha
mov
push
push
lea
jmp
clc
push
not
movw
movl
cmc
and
mov
mov
pushl
pushf
popl
push
movb
pusha
pushl
popl
pushl
pushl
lea
jmp
pushl
mov
lea
jno
pushf
mov
call
cwtl
jmp
pushf
jmp
mov
jmp
cmp
add
call
xchg
pushf
mov
movl
mov
mov
movb
mov
push
mov
movb
mov
pushl
ret
pusha
mov
mov
lea
jmp
call
cmp
add
jmp
jmp
mov
sbb
mov
sbb
jl
mov
inc
push
mov
ljmp
adc
pushl
mov
pushl
mov
decl
mov
decl
mov
jmp
mov
incl
sbb
inc
push
mov
decl
mov
ljmp
adc
inc
push
mov
pushl
mov
incl
mov
inc
push
mov
ljmp
mov
jg
mov
pushl
or
mov
call
sbb
mov
add
decl
adc
decl
mov
lcall
or
mov
lcall
mov
decl
add
ljmp
adc
pushl
and
incl
pop
mov
lcall
mov
incl
mov
call
or
mov
decl
mov
inc
push
mov
mov
add
incl
mov
incb
mov
decl
adc
mov
pushl
mov
push
add
jmp
or
mov
decl
add
incl
and
clc
sbb
decl
mov
incl
push
mov
pushl
adc
mov
jmp
sbb
incl
mov
jl
mov
jmp
std
mov
ljmp
mov
call
pop
mov
call
mov
pushl
mov
clc
sbb
inc
push
mov
jmp
cli
mov
mov
push
mov
decl
mov
clc
sbb
pushl
mov
call
pop
incl
mov
decl
add
jmp
cli
mov
call
sbb
ljmp
adc
clc
sbb
lcall
mov
incl
mov
incl
and
incl
mov
jg
mov
call
add
incl
mov
pushl
mov
fcoml
incl
add
decl
mov
incl
and
incl
and
call
mov
inc
push
mov
incl
mov
pushl
mov
jmp
cli
mov
pushl
adc
mov
pushl
mov
call
mov
jmp
cli
mov
jg
mov
call
pop
mov
inc
push
mov
cmp
mov
decl
mov
jg
mov
decl
push
mov
incl
mov
pushl
add
lcall
mov
incl
mov
decl
or
decl
lcall
mov
decl
mov
incl
sbb
call
mov
and
mull
aaa
lock
lcall
or
add
and
pushf
pusha
lea
jmp
mov
call
inc
aaa
bts
mov
clc
jns
bt
add
call
push
mov
mov
pushf
pushf
lea
jmp
clc
clc
pushf
mov
pusha
mov
clc
push
sub
jmp
mov
push
lea
jmp
pushl
cmp
add
mov
pushf
pusha
call
mov
jmp
clc
sub
pushf
lea
jno
pushf
dec
cmp
pushf
cmc
mov
neg
cmp
jmp
pushf
mov
movb
mov
jmp
push
jmp
pushf
mov
pushf
pusha
push
movw
lea
jmp
mov
bswap
mov
push
push
push
pusha
mov
mov
movw
mov
pushf
push
pushf
movb
lea
jmp
clc
add
pushf
lea
jmp
xchg
mov
cmc
mov
mov
test
cmc
clc
sub
pushf
lea
jne
cmc
test
jmp
movb
mov
mov
lea
jmp
repz
popl
pushf
push
mov
mov
pushf
pushl
mov
push
mov
pushf
call
test
sub
call
pushf
add
jmp
sub
cmc
stc
test
jp
mov
push
sub
pusha
movw
pusha
mov
call
call
movb
jmp
sub
movb
pushf
mov
pusha
lea
jmp
movb
pushf
popl
lea
jo
pusha
movb
pushl
popl
pusha
lea
jmp
movb
pushf
mov
push
pushl
push
lea
jmp
jmp
push
pusha
add
jmp
movb
jmp
shl
call
setge
pushl
call
mov
jmp
jmp
lea
jle
push
pusha
mov
push
lea
jmp
cmc
pusha
mov
cmp
jmp
mov
pushf
popl
mov
call
mov
mov
pushf
lea
jne
not
btc
mov
pushf
call
mov
call
pushf
call
jmp
mov
call
pushf
sub
movl
mov
movw
movb
lea
jmp
pushf
call
mov
call
mov
pushl
popl
mov
movw
pushf
pushf
lea
jmp
mov
mov
mov
push
pusha
pushf
lea
jmp
mov
movw
mov
call
pusha
push
jmp
adc
rol
cmc
shr
mov
jmp
repz
popl
jmp
mov
pushf
pushf
test
add
push
pusha
push
mov
lea
jmp
pushf
pushl
popl
pushf
mov
movb
lea
jmp
mov
jmp
jmp
jmp
shr
call
mov
movb
movb
inc
mov
push
pushf
lea
jmp
mov
pushf
movb
mov
lea
jmp
xchg
cld
movsbw
jmp
shld
not
mov
add
test
setge
cmc
mov
jmp
bswap
pusha
movsbw
pusha
mov
pushl
lea
jp
lea
pushf
call
jmp
neg
mov
pushf
add
movb
pushf
push
lea
jmp
pushl
popl
pusha
pushf
push
pushf
lea
jmp
pusha
call
jmp
pushf
pusha
pushl
mov
pushf
mov
movb
pusha
pushl
mov
call
call
pushf
movw
mov
mov
pushf
divl
movl
mov
jmp
lea
pushf
pop
bswap
pop
movsbw
mov
rdtsc
jmp
pushf
lea
cpuid
cmp
pusha
sub
pushf
cmc
pushf
call
push
mov
mov
pushf
lea
jmp
cmp
jmp
pushf
call
bswap
mov
lea
pop
pushl
lea
jmp
push
mov
bswap
call
mov
jmp
call
call
movb
mov
mov
mov
movw
lea
jmp
jmp
jmp
repz
popl
jmp
pusha
mov
mov
pusha
call
mov
call
movb
pushf
popl
mov
pushf
pushl
popl
movw
mov
lea
jmp
call
pushf
setl
cwtl
pusha
mov
bswap
push
lahf
mov
pushf
jmp
pushl
pushl
popl
push
lea
jmp
pushf
pusha
mov
mov
mov
call
mov
pushf
jmp
mov
push
call
add
add
call
add
pushf
bt
jmp
call
cmc
bsf
push
or
xor
bswap
ror
neg
inc
sub
bsr
shl
rcr
ror
neg
btr
call
cmp
add
push
movb
cmp
neg
stc
test
clc
add
bt
not
cmp
sub
call
jmp
aas
movsbw
mov
bsf
btr
shld
mov
clc
cmp
stc
sub
call
pushf
mov
cld
cld
mov
rep
shld
adc
mov
shl
movzbw
shl
mov
cmp
clc
cmp
test
pushl
popf
mov
mov
movb
lea
jmp
mov
pushl
mov
lea
jmp
call
push
repz
popl
push
pushf
pusha
mov
jmp
xor
rdtsc
mov
ror
mov
stc
shr
and
mov
cmp
stc
cmp
add
bt
test
shld
jae
pushf
mov
mov
movl
pushf
popl
push
pusha
push
pushl
popl
push
lea
jmp
pushl
call
cmc
add
pushf
pushf
pushf
lea
jmp
call
push
mov
mov
call
mov
pushl
popl
pushf
lea
jmp
lea
jne
ja
pushf
mov
pushl
mov
pusha
lea
jmp
or
mov
shr
clc
sar
push
mov
jmp
lea
mov
pusha
jmp
call
pushf
mov
push
jmp
call
pushf
mov
pushf
push
mov
movb
movb
pushf
repz
popl
pushf
pushf
jmp
push
mov
jmp
pushf
seta
neg
pop
mov
stc
pop
rol
shrd
xadd
pop
test
pushf
clc
mov
cmp
mov
cmc
pushl
rcl
mov
rdtsc
mov
lea
stc
sub
pushl
popf
call
shr
call
mov
repz
popl
pushf
movb
mov
call
pushl
popf
pushf
push
pushf
lea
jmp
mov
jmp
mov
pushf
lea
jmp
call
pushf
popl
pushf
pusha
movb
call
push
mov
call
movb
movb
mov
movb
mov
pushf
movw
mov
lea
jmp
pushf
mov
pushl
pushl
ret
cbtw
cmc
call
jmp
mov
mov
pushf
mov
pushf
push
pushf
lea
jmp
push
jmp
pusha
mov
bt
movl
pusha
sub
mov
call
pushf
pushf
pushf
popl
push
mov
mov
pushl
popl
movb
lea
jmp
pusha
lea
jmp
movb
mov
pushf
push
jmp
mov
pusha
lea
jmp
neg
stc
add
js
pushf
add
push
clc
movb
clc
sub
pushf
push
mov
pushf
pushf
lea
jmp
shr
sub
ror
mov
pusha
bt
sub
movb
add
call
or
cmp
pushf
xor
push
pusha
pushl
inc
jmp
mov
push
pusha
pushf
mov
pushl
mov
lea
jmp
inc
mov
mov
lea
jmp
mov
pushl
call
rol
push
cmc
movw
neg
movb
movw
jmp
pushl
popl
mov
pushf
mov
pushl
lea
jmp
jmp
jmp
mov
call
mov
call
call
mov
mov
call
jmp
sub
jmp
shrd
lea
pusha
cmp
lea
je
pushf
mov
pusha
lea
ja
sbb
shr
rdtsc
aad
mov
rcl
cmc
shld
lea
das
sub
xadd
aas
adc
rcr
lea
adc
and
not
bsr
sub
pushf
mov
pusha
pushf
popl
pusha
pushl
jmp
push
push
call
stc
call
mov
pushf
movw
push
lea
jmp
pushf
jmp
pushf
pushl
popl
movb
movb
push
push
lea
jmp
jmp
pushf
mov
pusha
mov
pusha
call
push
rcr
movsbl
add
mov
test
add
movb
mov
lea
jmp
mov
jmp
pusha
call
pusha
push
mov
call
