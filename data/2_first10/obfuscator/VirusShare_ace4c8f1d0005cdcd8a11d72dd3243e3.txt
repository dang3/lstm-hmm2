push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
mov
add
movzbl
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
pusha
mov
push
push
call
call
test
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
je
mov
xor
jmp
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
push
lea
push
call
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
movzbl
cmp
je
int
xor
jmp
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
popa
mov
pop
mov
add
push
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
add
add
adc
inc
add
je
arpl
inc
insl
gs
inc
jb
add
popa
fs
push
jns
sub
add
popa
fs
push
jns
or
add
arpl
fs
in
dec
popa
outsb
cmc
insb
gs
adc
add
shlb
popa
frstor
imul
pop
je
adc
add
arpl
add
jno
imul
add
add
je
data16
je
popa
outsb
insl
insl
gs
adc
add
or
add
in
add
add
add
inc
add
xor
inc
add
add
dec
fs
add
inc
in
fs
add
add
insl
popa
frstor
jb
jb
inc
add
fnstcw
add
ljmp
xor
fs
insb
adc
add
movsb
jno
arpl
insb
add
lods
arpl
lods
je
add
arpl
insl
add
fs
arpl
add
aas
push
je
bound
insl
outsl
arpl
add
add
jb
inc
bound
insl
outsl
arpl
add
add
insl
popa
and
add
push
dec
inc
clc
insb
gs
imul
add
bnd
add
gs
jo
insb
insb
outsl
repnz
add
insb
xor
out
fs
insb
adc
add
gs
mov
outsl
dec
gs
add
adc
rolb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
or
sbb
adc
add
adc
add
adc
add
adc
add
stos
std
call
adc
add
push
call
std
call
and
add
or
add
adc
add
add
adc
add
adc
add
adc
add
add
jmp
adc
sub
and
add
cmp
cmp
cmp
clc
add
add
add
add
js
add
add
clc
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
js
add
push
add
add
add
js
add
push
add
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
outsl
mov
nop
add
ljmp
add
adc
fsubrp
add
adc
add
adc
add
adc
add
xor
pusha
popa
cmp
push
pop
add
ljmp
adc
xchg
add
ljmp
adc
add
adc
add
push
iret
jno
cmc
push
arpl
adc
jecxz
adc
jmp
popf
adc
jmp
add
add
add
add
add
add
inc
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
js
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
ljmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
cwtl
add
cs
add
push
cwtl
add
call
xchg
add
ret
adc
nop
add
es
add
dec
nop
add
dec
nop
add
insb
nop
add
jle
add
outsb
nop
add
mov
nop
adc
in
adc
icebp
nop
adc
ret
nop
adc
lds
adc
pop
xchg
adc
icebp
nop
adc
jno
adc
adcl
add
adc
xchg
adc
daa
xchg
adc
dec
xchg
adc
inc
xchg
adc
sti
xchg
adc
lahf
xchg
adc
xchg
xchg
adc
popf
xchg
adc
jns
adc
dec
xchg
adc
dec
adc
jmp
cmpsb
adc
lods
cmpsb
adc
pop
cmpsl
adc
in
cmpsb
adc
frstor
adc
test
adc
add
adc
add
lods
jmp
inc
lods
lcall
add
mov
decl
lods
pushl
lods
incl
decl
incl
insl
mov
insl
decl
je
incl
insb
call
mov
std
call
std
cmp
std
in
test
call
jge
inc
movsl
std
pushl
mov
std
incl
std
jmp
cmp
mov
add
mov
add
lea
add
mov
add
add
sahf
mov
add
mov
add
add
sbb
add
stos
mov
add
mov
add
mov
add
add
mov
add
ljmp
add
xchg
add
cmpsb
xchg
add
add
aam
add
movsb
xchg
add
cwtl
xchg
add
inc
xchg
add
cs
add
xor
add
adc
xchg
add
nop
xchg
add
rclb
adc
xchg
add
mov
xchg
add
sbb
add
cld
xchg
add
pop
xchg
add
inc
xchg
add
xor
add
ss
add
cmp
add
add
add
add
repnz
adc
add
stos
xchg
add
xchg
add
sahf
xchg
add
xchg
add
mov
add
mov
xchg
add
bnd
adc
addb
add
jg
add
jg
add
adc
imul
cmp
add
adc
xor
add
jle
add
jle
add
jle
add
adc
xchg
jle
add
add
jle
add
jle
add
adc
xlat
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
adcl
add
das
nop
add
cmp
add
adcl
add
push
nop
add
and
add
add
aad
add
call
add
out
add
adc
add
scas
movb
aaa
mov
add
scas
add
xlat
cmpsb
add
lret
sahf
add
lahf
xchg
add
test
xchg
add
inc
jnp
add
jbe
add
addb
jmp
sbb
add
push
cltd
add
push
cltd
add
add
test
add
cmpsb
add
andb
add
test
add
fisubl
add
add
push
mov
add
mov
add
add
lods
jnp
add
jnp
add
add
cmpb
test
add
dec
jl
add
add
lods
jge
add
jle
add
add
jge
add
jge
add
adc
add
and
add
mov
adc
add
xchg
fiaddl
add
mov
add
push
mov
adc
add
adc
add
and
adc
mov
adc
xchg
add
cmpsb
xchg
add
mov
adc
add
xchg
xchg
add
add
adcb
aam
add
rclb
adc
mov
adc
mov
adc
sbb
adc
decl
adc
mov
add
mov
add
adc
imul
add
lea
add
lea
add
adc
adc
add
adc
cmp
adc
mov
mov
add
mov
add
mov
add
adc
out
adc
ja
adc
inc
mov
add
mov
add
sub
cli
cmp
fiaddl
lcall
mov
lcall
call
cmp
repnz
cmp
loop
ljmp
dec
mov
jmp
call
pushl
lcall
incl
mov
decl
mov
jmp
decl
cmp
push
test
lcall
jl
add
add
mov
jnp
add
jnp
add
add
jnp
add
add
pop
xchg
add
clc
nop
add
call
jns
add
jns
add
popl
add
add
aam
add
push
mov
add
mov
add
add
add
pop
mov
add
mov
add
push
mov
add
mov
rcrb
add
adc
add
lahf
add
ficompl
add
xor
add
inc
movsl
add
inc
movsl
add
fiaddl
add
cmpsb
movsl
add
leave
add
xchg
aad
add
fldl
add
sub
xchg
sbb
add
jp
add
dec
movsl
add
add
xchg
or
add
push
cmpsb
add
add
rolb
add
out
add
xchg
add
add
cmp
add
xor
cmpsb
adc
jecxz
adc
fldenv
adc
cli
add
addl
add
add
sahf
adc
sti
popf
adc
in
popf
adc
out
popf
adc
stc
popf
adc
repz
adc
pop
sahf
adc
adc
popf
add
adc
sub
adc
cmp
adc
or
adc
pop
sahf
adc
addr16
adc
add
add
push
popl
add
jg
add
scas
add
sbb
add
inc
xchg
add
jmp
lods
add
or
add
push
jne
add
add
in
add
jmp
add
adc
add
adc
add
xor
pop
sub
adc
popf
daa
pusha
pop
scas
xor
imul
rclb
jnp
out
push
popf
daa
pusha
fcmovnu
std
hlt
cmp
adc
add
xchg
pop
jecxz
add
sbb
mov
mov
inc
mov
mov
hlt
cmpsl
xor
into
fiaddl
push
or
movsl
or
push
insb
dec
jg
lahf
jbe
add
jecxz
cmc
mov
dec
fadds
sbb
aam
sbb
stc
mov
sti
or
jo
cmp
add
jo
cmp
inc
jle
and
mov
mov
adc
add
add
dec
jbe
or
and
or
mov
pop
je
jmp
jo
lods
mov
outsl
icebp
sbb
add
pushf
int
imul
push
cs
add
adc
lods
inc
adc
stos
inc
adc
add
adc
add
adc
add
adc
push
jne
mov
add
fiaddl
add
aam
adcb
adc
xchg
pop
jge
xchg
out
add
sbb
test
xor
sbb
sbb
sub
cmp
add
xor
push
loope
jmp
orl
or
add
in
imul
loopne
adc
call
add
add
add
add
add
add
add
add
or
in
or
add
add
flds
or
mov
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
inc
add
adc
add
addl
loope
and
imul
addl
test
or
add
test
inc
das
cs
adc
add
sbb
add
sbb
jmp
or
sti
add
sbb
add
sbb
jmp
add
idiv
call
or
add
add
add
jmp
push
cmc
filds
dec
testl
add
popl
dec
idivl
add
divb
sub
aaa
add
cmc
iret
add
adc
cmp
add
mulb
add
cmc
scas
add
cmc
pop
add
add
cmc
xchg
call
hlt
out
add
testb
clc
cmc
push
add
cmc
adc
loop
lret
imulb
add
cmc
xor
test
movl
mov
cmc
and
test
cmpsl
add
fmuls
add
fmuls
test
fmuls
inc
adc
or
adc
or
adc
or
or
fmuls
cwtl
adc
or
fmuls
jl
add
fmuls
cmp
fmuls
fcoms
or
adc
or
or
fmuls
mov
adc
or
ljmp
adc
or
ljmp
adc
or
adc
or
ljmp
adc
or
add
or
add
or
add
or
add
add
or
push
add
or
add
or
add
or
add
or
fisttpl
add
jmp
or
add
or
add
or
add
or
add
or
add
or
jmp
or
add
or
add
or
jmp
or
add
add
fcomps
adc
jmp
or
add
sbb
pop
add
or
add
sbb
or
jmp
or
call
pcmpgtb
jmp
or
add
sbb
cld
call
or
add
sbb
verw
or
add
sbb
add
add
jmp
or
push
sbb
call
test
xor
mov
pop
or
test
popa
add
or
add
push
or
js
loop
dec
pop
push
add
pop
add
sbb
cmp
cmp
sub
jns
sub
cmp
cmp
adc
add
sub
imul
clc
or
add
or
add
or
add
or
add
push
add
call
or
add
fildl
sub
call
or
adc
or
call
or
adc
or
adc
or
adc
or
add
call
or
adc
or
call
or
adc
or
call
or
adc
or
adc
or
adc
or
add
or
add
or
add
add
add
or
jmp
or
add
add
add
or
add
or
add
add
or
add
or
add
or
flds
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
fsts
xor
jmp
add
sbb
add
adc
push
add
sbb
jmp
adc
fs
sbb
jmp
or
jmp
sbb
adc
or
jmp
sbb
call
adc
jmp
sbb
jmp
adc
call
sbb
add
adc
add
or
jmp
clc
push
dec
add
or
call
push
adc
mov
lcall
add
push
xor
mov
decl
add
push
and
js
mov
add
addb
push
inc
add
loope
cmp
add
add
push
sbb
cmp
cmp
add
sub
js
cmp
cmp
cmp
adc
sub
push
add
or
add
call
or
adc
or
adc
or
or
aad
jecxz
xlat
add
adc
or
or
call
add
adc
or
call
or
call
adc
or
or
adc
or
or
call
add
call
or
call
add
adc
or
jmp
or
add
or
add
or
add
add
add
or
jmp
or
cli
add
add
or
add
or
add
add
or
add
add
add
or
add
or
add
or
jmp
or
add
or
add
add
or
add
or
add
or
jmp
or
add
or
fistl
hlt
call
sbb
add
or
add
sbb
add
add
or
add
adc
call
sbb
ljmp
adc
jmp
sbb
add
or
add
adc
add
sbb
jmp
or
call
sbb
add
or
or
jmp
sbb
call
aaa
bound
jmp
cmp
add
add
add
add
sbb
clc
or
clc
or
add
add
push
add
or
add
add
mov
or
add
or
add
or
add
xlat
or
js
popa
add
and
push
or
add
addl
push
xlat
add
add
add
or
cmp
sbb
sub
cmp
call
or
adc
or
adc
or
call
or
adc
or
adc
or
adc
or
adc
or
call
or
adc
sub
call
or
adc
or
add
call
or
adc
or
adc
or
adc
or
add
or
jmp
cld
ret
add
or
jmp
cld
daa
add
or
or
jmp
or
jmp
or
or
add
cld
adc
jmp
or
add
add
or
add
cld
repz
or
add
or
add
or
add
cld
sbb
jmp
or
add
or
add
or
add
or
add
dec
sti
call
or
call
sub
pop
add
or
add
or
call
or
add
add
or
jmp
or
jmp
int
call
or
ljmp
lods
push
add
sbb
or
jmp
lea
add
sbb
jp
add
jne
add
push
call
push
aam
add
or
cmp
pop
add
xlat
push
add
aam
add
add
arpl
cmp
jle
sub
add
aam
add
pop
sbb
clc
outsb
add
cs
aad
add
push
add
mov
call
aad
add
or
add
or
add
or
adc
or
add
or
mov
add
or
add
add
jl
and
je
add
adc
or
add
adc
or
or
or
adc
or
adc
or
or
or
adc
or
pop
mov
popa
adc
or
mov
add
aam
xor
aam
add
or
or
test
add
mov
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
jmp
adc
dec
add
xor
js
in
insl
fdivrs
out
ja
jb
jnp
add
dec
push
neg
cmp
popa
stos
inc
imul
push
rorb
leave
call
int
mov
pop
mov
inc
lahf
test
mov
add
pop
cwtl
xchg
fst
es
test
pushf
cmp
lret
std
mov
adc
pop
pusha
pop
add
jg
lea
gs
dec
int
pusha
aad
ret
cwtl
outsb
add
mov
roll
sti
movsb
mov
mov
mov
sub
lods
mov
add
mov
cmpsb
pop
mov
adc
mov
xchg
and
push
imul
mov
jl
xchg
and
fsts
iret
fidivs
mov
icebp
sub
pop
pop
jnp
sti
mov
daa
inc
outsl
das
imul
pusha
shrl
fdivl
xor
add
cwtl
adc
aam
loope
mov
outsl
push
xchg
fdivrs
call
inc
mov
or
roll
push
insb
or
fs
jmp
adc
imul
insb
sbb
cmc
test
insb
rcrl
or
out
mov
push
add
xchg
daa
icebp
fdiv
nop
and
sbb
dec
roll
add
inc
gs
popf
xor
sub
mov
cmp
jbe
fadds
xlat
imul
mov
add
test
add
aas
or
and
inc
jb
add
enter
and
cld
cwtl
push
icebp
loopne
data16
out
add
movl
cmpl
vmovss
daa
push
das
mov
rorb
test
push
loope
add
mov
fimull
and
pop
push
sti
clc
mov
or
sti
inc
sub
in
int
jo
popf
adc
aaa
outsb
push
dec
lods
jo
add
sarl
mov
adc
dec
ret
movsb
xor
aam
gs
add
addps
mov
mov
mov
cmpsl
adc
mov
mov
adc
nop
pusha
shll
mov
lods
push
test
dec
mov
cld
mov
and
xlat
sub
add
cmp
scas
lahf
fdivr
xor
stos
in
pusha
fists
arpl
lock
jne
popa
lret
add
pop
and
add
or
mov
add
mov
add
mov
sub
xlat
ret
shlb
inc
insl
ficomps
ret
push
mov
in
add
in
push
jb
insl
add
icebp
or
jb
push
add
sbb
mov
jnp
fidivl
xchg
cmc
js
in
cmpsb
fdivrl
fisttpl
sub
roll
adc
xchg
xchg
cs
and
es
inc
mov
cli
sub
setle
clts
add
das
pushf
incb
and
push
xchg
jno
bound
lret
movsb
mov
or
or
add
xchg
xchg
add
cmp
outsb
xchg
icebp
pop
popa
and
push
outsb
out
or
sub
addr16
fadds
cltd
mov
mov
mov
add
lds
sub
test
adc
xchg
out
add
xlat
xor
enter
das
mov
xor
jmp
cs
push
push
mov
jns
mov
pop
ficoml
sbb
add
add
adc
out
popw
rsm
xor
mov
and
dec
outsl
mov
sarb
icebp
jge
mov
arpl
es
mov
cmp
add
add
test
mov
xor
int
jnp
fsubs
adcl
sbb
xchg
test
add
fwait
xor
push
mov
int3
pop
movsb
das
push
out
out
call
or
dec
imul
mov
jge
lret
mov
rcll
mov
movb
adc
or
xchg
pop
xchg
test
pop
outsl
add
push
jbe
pop
and
sub
int3
lret
in
sti
sbb
dec
repnz
fistpll
pop
mov
sub
pop
lods
sub
jne
sbb
movsb
mov
lahf
pop
xor
push
sbbl
repz
or
push
add
aam
inc
mov
push
jns
xor
jmp
jbe
push
fstpt
dec
adc
lea
xchg
cmp
in
mov
and
pop
lahf
xchg
sbb
lea
roll
int3
pop
adc
cli
jg
xor
pop
test
mov
mov
pop
lea
push
pushf
int3
into
ljmp
add
mov
mov
fnstsw
push
xchg
push
rcll
dec
call
loope
adc
xor
ja
std
hlt
mov
cld
lret
or
xlat
jp
xchg
adc
mov
loop
leave
mov
cmc
xchg
mov
mov
andb
std
xchg
sbb
pop
dec
mov
sarb
add
dec
push
push
xchg
cmp
in
sbb
std
cmp
dec
xor
daa
popa
daa
shlb
xchg
je
stos
int3
mov
mov
jno
lods
mov
scas
cwtl
xor
repz
pusha
mov
cs
add
mov
and
repz
aas
ljmp
dec
fsubrs
lods
or
lods
sahf
add
add
jno
mov
push
xor
pop
out
push
adc
push
push
call
cmp
mov
repz
mov
inc
mov
xchg
inc
aam
pop
mov
not
xchg
cld
lods
xchg
add
mov
ja
pushf
add
add
imul
or
xlat
fstps
ljmp
enter
sbb
call
dec
lea
test
xor
lahf
lahf
sub
pop
fdivrp
and
call
xor
mov
cmpsb
sahf
mov
testl
xor
add
push
sub
stos
xor
pop
cmp
jo
jge
imul
inc
jp
jno
arpl
test
lret
addr16
loope
adc
mov
xor
push
xchg
data16
out
addr16
test
mov
adc
das
cmp
xchg
add
sub
pushf
dec
outsb
xlat
insb
push
outsl
cwtl
mov
bound
enter
mov
test
add
filds
push
lods
sahf
hlt
dec
lods
xor
bound
ret
push
loope
mov
loope
icebp
or
int3
repz
lea
and
call
aad
xlat
and
fsts
loop
sar
and
nop
or
push
inc
pop
in
clc
add
fsubrp
mov
imul
nopl
add
into
dec
nop
rcl
loop
ror
mull
pop
shll
adc
jne
add
sbb
push
repnz
scas
ds
pushf
and
adc
or
rclb
jno
mov
mov
push
add
jmp
mov
add
xchg
cmp
movsl
add
movsl
testl
jnp
jae
fs
xor
outsb
or
movswl
push
or
mov
jecxz
sahf
or
out
cmpsb
pop
add
and
xchg
add
sbb
lods
sbb
mov
sbb
sub
xor
adc
lods
mov
adc
xor
add
adc
add
pop
mov
adc
xchg
mov
pop
dec
dec
dec
cmp
xchg
leave
cmp
jae
aas
and
mov
cmp
pop
add
jmp
adcl
xchg
in
shlb
lea
adc
pop
imul
nop
test
daa
icebp
pop
sub
and
test
and
add
pushf
out
lds
shlb
sub
jo
cld
sub
push
jno
jmp
mov
push
lret
cmc
das
std
fs
es
lcall
pop
push
ret
fcmovnb
movsl
call
push
lahf
sti
mov
movsl
in
aad
loope
mov
mov
and
jne
cmp
imul
add
add
lret
cwtl
out
mov
xor
mov
cli
daa
aam
mov
arpl
xor
mov
repnz
icebp
ds
and
les
sbb
sub
daa
pop
sub
dec
mulb
daa
pop
loop
push
cmp
dec
mov
add
dec
test
add
jns
sbbl
push
inc
test
nop
inc
sub
pop
push
inc
ret
movsl
dec
inc
int3
sub
push
movb
push
pop
addb
jle
jne
test
push
add
cmp
push
adc
loopne
outsl
shll
pop
fs
mov
stos
out
xchg
leave
sub
pop
imul
add
hlt
loopne
add
loop
scas
xor
and
dec
mov
in
pop
cmp
loope
jecxz
out
repnz
in
or
in
out
xchg
scas
jmp
sub
sub
pop
dec
adc
es
cld
ja
xchg
incb
add
sbb
mov
xlat
sti
push
sahf
stc
pop
cs
clc
shlb
add
cmpsl
add
lock
inc
icebp
int3
aas
or
fldt
div
jge
neg
pop
js
pushl
cld
fisubl
bound
fistl
mov
jp
hlt
fisttpll
aaa
or
xchg
in
pop
fsubr
aam
xor
shrb
cmc
in
add
jge
lds
cltd
pushf
les
add
aam
fxch
pusha
inc
sbb
cmc
push
push
sarl
call
push
stos
adc
insb
dec
pop
cmp
dec
jmp
leave
dec
sbb
or
add
push
data16
rolb
add
xchg
scas
mov
add
mov
and
push
xchg
and
loopne
pusha
ret
mov
lahf
cmp
cmp
add
int3
sub
js
jle
jp
aam
stos
add
icebp
cltd
mov
pop
dec
lea
mov
mov
xchg
xchg
mov
xchg
or
mov
stos
jle
or
jle
je
cmpl
movl
sbb
shll
push
cmpsl
ljmp
jne
inc
cmp
imul
call
imul
insb
add
inc
arpl
push
jl
sub
cmpsl
arpl
inc
sbb
inc
cltd
cmp
dec
mov
les
xchg
xor
pusha
fnstcw
cmc
lret
mov
and
mov
or
xchg
xor
mov
out
rorb
xchg
xchg
fidivrl
mov
xchg
mov
inc
lock
bound
stos
mov
sbbb
sti
fidivl
xchg
mov
rcrb
jae
or
lods
jbe
call
push
cmp
dec
jge
push
fwait
icebp
fsubp
es
sbb
lods
movsb
call
leave
jl
inc
loopne
jnp
add
lea
imul
jne
ljmp
test
sub
dec
sbb
stos
mov
int3
pushf
lds
out
sub
mov
xchg
loope
or
xchg
sub
in
xchg
dec
je
test
in
leave
addb
adc
dec
faddp
jmp
pop
sub
in
mov
pop
add
inc
popf
fucomi
push
add
leave
mov
xchg
dec
add
and
push
sahf
mov
daa
dec
push
pop
or
into
insb
pusha
inc
fs
cld
hlt
outsl
rcrl
test
sbb
mov
jecxz
adc
and
pop
adc
inc
mull
loopne
scas
mov
add
enter
add
sbb
ret
invlpg
unpckhps
int
cld
inc
insb
lahf
rcl
mov
cmp
dec
ds
or
es
xor
mov
imul
pop
mov
mov
push
mull
mov
mov
outsl
das
cmpsl
mov
adc
jle
out
notl
arpl
hlt
push
add
mov
ljmp
andb
mov
and
insb
clc
push
add
push
jae
scas
cmpsb
xchg
out
jo
out
push
push
lcall
dec
mov
lahf
out
dec
leave
mov
cmpsb
cmp
xor
push
ja
sar
cli
out
rcr
mov
scas
push
in
inc
mov
dec
add
test
lcall
mov
adc
insb
inc
repz
test
dec
cltd
inc
pop
mov
xor
scas
push
in
aas
bound
inc
mov
movsl
incl
les
xchg
fildll
enter
jo
mov
sub
push
nop
daa
inc
in
ret
cmp
cmpsl
mov
xor
mov
xchg
mov
mov
add
jmp
test
pop
jb
cmc
scas
fnclex
and
adc
cwtl
push
xlat
xchg
and
hlt
js
push
dec
sarb
std
ror
adc
je
xchg
notl
sbbb
sub
ljmp
cs
xchg
push
stos
stos
mov
xchg
cmp
mov
mov
dec
arpl
add
or
push
cmp
mov
mov
mov
push
or
and
inc
jb
push
ljmp
int
push
in
fsts
adcl
sbb
movsl
xchg
xchg
sbb
jp
or
jecxz
lret
mov
mov
inc
cli
lods
inc
adc
out
mov
and
fs
rcl
roll
sbb
mov
dec
outsb
ficompl
outsb
insl
gs
push
or
loope
out
dec
pusha
inc
push
jp
mov
mov
loop
insl
pop
fistpl
xchg
sti
xor
test
sbb
addr16
cmp
inc
decb
test
sahf
cli
mov
js
jno
add
lds
movsl
and
int
inc
push
xchg
push
fsubr
jge
int3
xor
cmp
mov
jl
jo
les
adc
repz
int
or
dec
mov
adc
stos
xor
enter
mov
or
enter
gs
xchg
in
ds
sub
add
js
mov
add
iret
jo
sbb
frstor
sti
sub
sbb
outsl
push
mov
xchg
mov
mov
fisubrs
std
inc
pop
xor
mov
adc
sbb
hlt
shl
movsb
xor
mov
mov
push
xlat
add
into
xor
sbb
sbb
fs
repnz
sbb
dec
xor
inc
fidivs
mov
mov
jmp
test
jnp
cwtl
push
xchg
or
es
daa
leave
gs
add
or
add
cmp
and
pop
ficomps
adc
insb
and
jl
jno
add
pop
aam
add
incb
int
test
jne
insb
leave
in
outsb
stc
push
insb
lret
insb
mov
rcrb
pop
add
xor
roll
jmp
xlat
push
xchg
jle
popa
clc
ja
les
insb
xchg
cwtl
xor
push
add
add
cltd
clc
cs
cmp
cld
imul
mov
and
add
aaa
sub
in
pop
rcl
nop
call
shl
insb
mov
jne
js
jne
push
push
outsl
cmc
shrl
pop
fsubs
add
cmc
jle
mov
mov
jle
push
sbb
icebp
and
push
sub
add
sbb
std
pop
xor
insb
sub
enter
aas
aad
movsb
pushf
loop
lods
sub
imul
xor
add
push
mov
mov
out
push
jl
popa
or
aam
fmull
bound
gs
pop
pop
and
add
lock
fisubs
cld
ficoml
insl
lcall
push
add
cld
inc
aaa
jns
mov
imul
mov
mov
sub
sbb
cmp
adc
xchg
fwait
std
mov
or
mov
sbb
test
push
in
lahf
push
mov
leave
cwtl
mov
xlat
test
jno
cmp
cmp
pop
insb
lods
inc
sbb
and
xor
or
xor
lcall
ja
in
mov
push
sbbl
pop
fnstcw
test
or
add
pop
test
stos
into
or
popf
mov
scas
daa
movsl
add
xchg
inc
das
lods
mov
repnz
add
push
in
daa
addr16
rcrl
add
jbe
xlat
sbb
xor
sub
leave
jp
or
pop
add
mov
outsb
out
cmp
je
sarb
mov
mov
add
lahf
adc
ret
int
arpl
outsl
push
jbe
jbe
aam
jno
pop
ret
lret
cmp
sbb
add
fadds
jp
arpl
out
rclb
fbld
mov
add
and
popf
and
ret
pusha
mov
call
or
pop
push
push
aaa
fsubrl
imul
fld
ja
add
add
aam
arpl
dec
icebp
lret
xchg
int
or
int
and
pop
push
jb
jmp
mov
pop
sar
inc
ljmp
inc
push
jl
pop
jg
insb
pop
adc
fnsave
jmp
test
jg
push
into
lcall
mov
lahf
inc
ror
clc
out
add
pop
jle
push
in
loop
movb
loope
jecxz
ja
gs
out
pop
sbb
adc
leave
clc
adc
mov
add
pop
imul
and
js
sbb
out
daa
adc
adc
outsb
ret
jecxz
cltd
xor
mull
adc
dec
out
or
fistl
push
dec
rol
fsubrl
lret
out
add
add
scas
push
sahf
sbb
jg
xor
jmp
loop
ret
xor
cmpsb
xchg
int
add
xchg
mov
sub
mov
jns
xor
dec
mov
push
push
sub
mov
mov
insl
add
lea
std
call
cld
xor
scas
popa
adcb
push
ret
push
or
add
add
aaa
cmpsl
xchg
inc
xchg
mov
mov
cltd
call
fimull
dec
or
push
test
je
adc
lret
shrb
inc
mov
scas
outsb
out
into
mov
jg
or
test
push
repnz
xor
cmpsb
pop
insb
add
adc
add
jg
jae
mov
xor
ja
imul
xorl
inc
inc
scas
pop
and
sbb
les
shl
push
leave
fstpl
loop
sbb
fiaddl
jmp
mov
inc
push
jae
xor
xor
in
lock
push
outsb
pusha
pop
add
subb
mov
push
pop
outsl
sub
jne
call
xchg
fwait
leave
data16
or
xchg
leave
sti
in
sub
xchg
cmp
aaa
cmp
mov
and
add
inc
add
cmc
leave
ret
mov
dec
jecxz
pop
cli
dec
into
and
lock
pop
jnp
mov
add
insl
push
lret
inc
push
mov
out
js
notl
es
stos
shlb
mov
pop
xchg
and
imul
jl
filds
out
and
sbb
cmp
fisubrl
sbb
ds
pop
fucomp
arpl
jmp
daa
lahf
loop
inc
int3
and
sbb
pusha
add
inc
loopne
cmp
iret
out
inc
adc
insb
sub
adc
sub
sahf
js
mov
sbb
sub
lcall
jo
fucomi
xor
test
negb
mov
and
mov
cli
mov
pop
mov
rolb
cmp
jg
dec
add
or
or
mov
push
lret
mov
xchg
pop
inc
fsubrl
aas
aam
rorl
xchg
push
nop
inc
and
pop
sbb
jb
inc
xchg
inc
out
dec
adc
in
xor
or
rorl
ljmp
fstps
dec
pop
xchg
in
jge
repnz
cmp
mov
add
xorl
add
loop
push
bound
hlt
cli
shll
add
pop
pushf
pop
jne
in
fs
mov
js
lcall
adc
cmp
pop
mov
cmp
mov
fucomip
jno
popf
loop
rcrl
sbbb
test
dec
mov
scas
test
push
out
fwait
jl
imul
movsl
jnp
sbb
cmpl
jno
cld
and
out
in
das
mov
xor
inc
lods
add
jg
mov
outsb
ja
ja
dec
mov
loope
int3
leave
mov
cmovp
fimuls
push
insl
xor
gs
mov
out
inc
inc
add
push
pop
fmul
jecxz
roll
and
test
bound
add
cmpsl
rcrb
mov
pop
lcall
fmull
sbb
das
pop
cltd
pop
cld
dec
fdivs
lods
and
mov
xchg
mov
aam
pop
xchg
mov
sub
xchg
ss
fnop
into
fdivp
in
aaa
fadd
lods
dec
xor
lahf
das
add
adc
push
test
mov
pop
jns
aas
inc
dec
movsl
push
sub
sub
cmp
lea
adcl
mov
push
jae
aas
cvttps2pi
mov
mov
pusha
ja
int3
fsubrs
cmc
fistps
adc
xor
cmp
add
cmc
sahf
and
out
mov
test
xchg
outsl
lods
dec
mov
int
int3
ret
mov
push
push
mov
mov
xchg
movsl
js
out
ss
mov
std
clc
xor
movsb
subl
add
gs
mov
sbb
mov
add
mov
mov
add
inc
leave
cli
cwtl
test
data16
adc
jno
hlt
aam
loope
ficomps
sbb
sbb
push
mov
adc
mov
pop
push
dec
fdivr
mov
xor
add
es
jg
xor
mov
imul
mov
mov
add
stos
mov
sub
xchg
addr16
mov
lahf
pop
out
fcmovne
or
fmull
cs
or
xchg
adc
shl
mov
inc
shll
jno
add
repz
push
ret
movl
mov
pop
inc
cmpsb
negl
cmp
ds
in
aaa
sbb
sub
add
cwtl
jp
daa
pushf
mov
dec
adc
or
or
xchg
adc
xchg
repz
popa
lret
lret
std
aad
out
scas
int3
and
xchg
pop
cwtl
fidivrs
inc
cmp
pop
push
mov
add
cmp
fwait
rcll
mov
rcll
xlat
aam
out
jecxz
mov
imul
add
inc
push
lret
and
mov
dec
xor
cld
add
lret
xor
mov
cmc
sbb
movsl
dec
lcall
inc
dec
imul
andb
scas
xor
pop
jae
dec
out
jmp
mov
mov
pop
sbb
jnp
rclb
pop
adc
js
jle
shll
add
cmp
jecxz
pop
push
and
xchg
stos
xchg
fnstsw
cli
adc
inc
mov
leave
xlat
sbb
enter
adc
inc
ret
sahf
fldcw
pop
addr16
sbb
or
sahf
pop
sbb
in
loope
jno
mov
jg
mov
fs
mov
add
push
jne
jp
aaa
pop
push
cli
push
in
inc
mov
dec
aas
xor
push
sbb
dec
sbb
xchg
sbb
mov
loop
inc
icebp
cld
or
je
enter
mov
dec
push
into
rcrb
and
pop
inc
xor
lahf
mov
mov
repz
push
jle
xchg
xchg
xor
mov
push
lods
mov
add
add
push
mov
pusha
sbbl
cltd
insb
adc
jbe
pop
sub
fwait
adc
mov
fisttpl
sbb
fdivr
sub
mov
test
lds
and
repnz
xchg
sub
sbb
adc
js
jae
jns
popf
ja
out
jp,pn
add
fwait
push
xor
repnz
jne
lds
sbb
aad
xchg
insb
sbb
and
out
add
inc
mov
dec
loop
sarl
mov
pop
out
pop
loope
iret
lds
in
jecxz
neg
icebp
add
mov
and
stos
fmull
out
pop
fcmovbe
add
mov
int3
push
mov
movsl
arpl
push
jb
mov
popf
mov
into
xchg
cmp
jle
js
lods
adc
out
adc
and
push
mov
das
adc
daa
inc
push
aas
push
dec
fwait
sub
dec
fldl
inc
pop
std
mov
jl
jae
jae
sbb
inc
cmpsl
scas
jb
int
adc
or
sbb
pop
mov
push
mov
test
das
notb
xor
inc
mov
fists
call
add
adc
insb
test
enter
scas
testl
mov
pop
in
inc
mov
mov
lods
push
jmp
mov
push
mov
mov
mov
xor
add
mov
aam
and
out
push
pop
inc
fwait
push
hlt
in
stos
imul
mov
mov
inc
sbb
mov
jnp
mov
out
aad
pushfw
data16
push
ja
enter
adc
xor
sbb
scas
add
ja
fwait
adcb
push
xor
sub
ss
or
xchg
jg
mov
cltd
inc
pop
push
mov
lock
aad
jecxz
mov
or
pop
insl
mov
mov
out
dec
call
daa
mulb
xchg
xchg
sbb
pop
jge
sahf
rcrb
mov
dec
sub
clc
xor
mov
jmp
loopne
fstps
add
testl
call
mov
add
test
inc
out
push
loope
ret
pusha
test
jo
mov
mov
cmp
ret
out
add
jg
or
push
mov
or
mov
pop
xchg
sub
xor
xchg
cmc
adc
call
sahf
pop
aaa
sbb
add
daa
dec
fdivrp
aas
sub
sub
xor
xchg
push
not
jg
dec
js
imul
hlt
xor
nop
adc
out
cltd
add
in
adc
pusha
cmp
scas
dec
test
jge
iret
jnp
jno
movsl
fucom
mov
sarl
cs
outsl
adc
inc
das
outsl
jb
addb
out
mov
lahf
add
xchg
fiaddl
addr16
mov
pavgw
aaa
dec
jae
push
jg
das
call
int
cwtl
hlt
sub
into
out
pop
movsb
addl
enter
and
js
pop
mov
mov
add
cmp
xor
xor
push
into
test
lods
dec
fnstenv
and
mov
xchg
lods
jns
add
test
imul
dec
test
sbb
cld
lcall
mov
movsb
inc
jo
in
xchg
ret
cmp
jge
iret
inc
sti
loope
jae
and
jmp
pop
mulb
dec
jg
cmp
mov
insl
mov
lods
jmp
jge
xchg
add
nop
repnz
cli
add
mov
add
mov
cmpsl
dec
jmp
or
aaa
inc
or
loop
jno
shr
fyl2x
sub
jae
jb
out
aas
pop
mov
inc
and
aam
or
and
test
sahf
or
ficomps
mov
test
dec
lock
imul
sbb
or
adc
add
add
fwait
add
icebp
and
xchg
xchg
inc
std
sbb
test
push
inc
out
push
mov
dec
lea
call
stc
or
xor
cmpsl
mov
shll
mov
mov
outsb
push
bound
imul
hlt
movsl
xor
xor
push
fnstcw
cld
in
iret
jo
add
push
ja
add
adc
stos
cmp
andl
push
loop
adc
popa
pushf
pop
sbb
cmp
jns
test
xor
shll
loop
into
stos
and
test
push
adc
inc
es
sub
mov
loopne
aad
leave
fs
push
negl
nop
xchg
mov
push
arpl
lds
fcomps
pop
incb
add
push
arpl
or
out
push
out
sub
mov
lods
jno
sti
and
sub
nop
pop
addl
add
scas
push
cs
add
and
jecxz
lods
daa
mov
xor
call
or
or
xchg
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
jmp
add
or
add
cmc
adc
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
inc
add
add
add
xor
xor
add
and
add
and
add
xor
add
xor
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
push
add
add
add
add
jnp
add
adc
add
adc
or
add
adc
add
adc
or
test
or
mov
or
movsb
add
adc
or
je
or
cld
add
adc
add
adc
adc
or
mov
add
adc
add
adc
add
adc
or
mov
adc
add
adc
add
adc
or
stos
add
adc
add
adc
add
adc
or
add
add
add
add
add
sbb
repz
add
or
mov
add
add
add
add
or
addl
add
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
or
roll
add
add
add
or
das
add
add
add
add
or
or
xchg
add
add
add
or
add
or
stc
lcall
or
stc
ficoms
stc
call
stc
push
adc
ljmp
stc
jmp
adc
stc
decl
stc
incl
add
adc
adc
jmp
adc
lcall
stc
call
adc
stc
lcall
or
stc
jmp
adc
jmp
stc
jmp
or
stc
inc
adc
incl
stc
incl
or
stc
ljmp
pop
add
incl
add
add
pop
add
add
pop
add
incl
add
add
incl
add
pop
add
incl
add
pop
add
incl
add
pop
add
incl
add
incb
add
incb
add
pop
add
incb
add
add
or
inc
add
or
mov
pop
add
add
add
or
aad
pop
add
or
adc
add
adc
adc
add
adc
add
adc
or
in
add
adc
or
lods
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
or
std
add
adc
add
adc
or
xor
add
adc
adc
add
adc
add
adc
cmp
add
add
sbb
mov
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
add
sbb
bound
add
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
push
adc
cli
incl
cli
incl
cli
pushl
adc
inc
adc
inc
adc
pushl
adc
cli
jmp
adc
jmp
adc
call
cli
call
cli
in
adc
jmp
adc
ljmp
add
cli
ljmp
adc
ljmp
adc
dec
adc
inc
adc
decl
cli
incl
cli
decl
cli
incl
cli
dec
adc
inc
adc
filds
or
filds
or
dec
add
add
add
add
cld
or
filds
or
iret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
daa
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
daa
add
add
or
inc
cld
or
adc
add
or
cmpsl
add
adc
add
adc
add
add
add
aas
add
adc
add
adc
or
push
add
or
inc
add
adc
add
adc
add
adc
add
adc
add
adc
add
pop
adc
pop
adc
add
adc
add
adc
pop
adc
add
adc
add
adc
add
adc
add
add
add
push
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
sub
add
add
add
add
add
or
jmp
add
loope
or
roll
adc
in
add
cmc
add
add
in
or
in
add
jmp
or
fildl
adc
add
adc
call
adc
out
adc
push
adc
jmp
adc
out
adc
jmp
adc
call
adc
fists
dec
adc
jmp
push
adc
jmp
adc
jmp
jmp
adc
jmp
adc
call
adc
in
adc
push
adc
call
add
adc
add
ds
add
xor
add
loope
cld
pop
loope
cld
pop
lock
or
or
or
or
or
clc
stc
or
add
or
xrelease
or
mov
or
mov
or
mov
or
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
add
pop
mov
jge
or
insl
mov
pop
mov
lea
push
lea
push
lea
push
push
lea
push
adc
cmc
or
pop
xchg
cmc
or
cpuid
cmc
or
pop
xchg
adc
pop
fwait
adc
push
mov
push
mov
nopl
adc
push
mov
adc
push
xchg
adc
push
fwait
adc
push
mov
adc
push
xchg
adc
push
fwait
adc
push
mov
adc
push
xchg
adc
push
cwtl
add
and
pop
adc
lods
sbb
pop
stos
sbb
incl
sbb
ljmp
sbb
lock
jmp
or
loopne
or
iret
sbb
out
sbb
out
sbb
call
repnz
sbb
loop
or
loop
or
rcrb
sti
out
push
sub
add
sub
icebp
push
sbb
icebp
push
sbb
loope
or
loope
or
rcrl
cli
in
push
cli
in
pop
sub
add
sub
hlt
pop
sbb
in
pop
or
add
in
int
in
add
es
sbb
push
sbb
sbb
push
sbb
sbb
negb
add
es
sbb
in
push
sbb
aam
sbb
sbb
cld
daa
push
sbb
in
pop
push
sbb
faddl
push
sbb
add
add
sbb
sbb
cld
daa
push
sbb
in
pop
pop
add
or
or
push
or
xor
or
xor
adc
push
notl
psubb
adc
clc
adc
adc
adc
adc
adc
adc
adc
adc
lret
adc
adc
adc
int3
pop
adc
mov
push
adc
add
add
push
adc
adc
jle
push
push
dec
sbb
push
sbb
push
aas
sbb
pop
aas
sbb
pop
dec
sbb
pop
aas
sbb
pop
adc
sbb
jb
sbb
bound
sbb
bound
sbb
push
sbb
stc
push
sbb
sub
sbb
sub
sbb
sbb
sbb
jno
sbb
popa
sbb
or
sbb
push
sbb
clc
push
sbb
add
sub
sbb
sbb
jb
sbb
jb
sbb
bound
sbb
bound
sbb
push
sbb
sti
push
sbb
sub
sbb
sub
sbb
sbb
sbb
jae
sbb
arpl
sbb
arpl
sbb
push
sbb
cli
push
sbb
sub
add
sub
add
sbb
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
dec
add
add
add
add
jmp
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
fsts
add
test
adc
add
add
sub
add
jmp
adc
add
adc
add
adc
add
push
add
jmp
or
add
push
add
jmp
sbb
add
add
xor
add
and
add
js
ljmp
mov
js
add
js
add
js
add
js
add
js
add
aas
add
incl
add
incl
add
decl
add
decl
out
call
add
lcall
add
add
cmp
jmp
push
add
add
jae
cmp
mov
add
decl
decl
add
jp
adc
jp
adc
pop
add
adc
adc
pop
add
adc
adc
ja
adc
ja
adc
jle
adc
jbe
adc
pop
add
adc
dec
adc
add
adc
add
add
adc
pop
adc
or
add
adc
sbb
dec
add
adc
add
adc
adcl
imul
add
push
ret
add
add
adc
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
xchg
push
add
add
add
add
add
xchg
push
add
add
cmc
xchg
push
add
add
add
xchg
push
add
xchg
push
add
add
add
popa
adc
add
sar
adc
add
sar
adc
inc
add
pop
adc
incl
add
cmp
push
add
sar
adc
add
sar
adc
sar
adc
add
adc
add
mov
add
mov
std
pushl
adc
add
adc
add
mov
add
stc
mov
or
in
sar
std
or
rorb
xchg
add
add
std
pop
add
std
add
rolb
add
xor
sbb
and
adc
inc
add
or
and
inc
add
std
sbb
cmp
push
add
xchg
imul
add
inc
add
add
add
xchg
inc
add
add
xchg
inc
add
inc
add
mov
popl
fildl
pop
adc
add
adc
mov
and
mov
nop
add
adc
pop
adc
inc
adc
add
adc
or
scas
popl
mov
or
mov
add
adc
add
add
adc
add
adc
adc
or
js
inc
adc
add
adc
adc
add
adc
inc
adc
mov
add
add
add
add
add
add
add
roll
push
add
add
roll
cmpsl
add
add
roll
xchg
add
add
roll
fadds
or
add
add
iret
ljmp
add
add
roll
add
add
push
add
add
add
push
add
xchg
push
add
push
add
xchg
push
add
rcll
and
lcall
add
ljmp
add
pop
or
sar
or
sar
adc
add
add
add
and
sar
or
sar
adc
jmp
sar
adc
ljmp
sar
adc
add
add
out
push
add
mov
add
xchg
mov
ljmp
or
incl
nop
inc
add
incl
add
nop
inc
add
mov
inc
add
add
jle
add
jle
add
das
add
jge
add
inc
add
jge
add
lldt
jle
add
adc
or
add
std
push
add
inc
add
and
and
add
or
cld
jl
add
add
hlt
jl
add
std
add
or
inc
add
and
add
adc
inc
adc
add
adc
xchg
push
add
adc
xchg
cs
adc
add
adc
inc
adc
add
adc
test
xchg
add
adc
xchg
cltd
add
adc
xchg
or
adc
inc
adc
add
adc
test
xchg
add
adc
inc
adc
test
or
add
movb
add
adc
xchg
stos
add
xor
inc
adc
and
pop
add
add
add
xchg
jne
push
add
xchg
add
add
add
add
push
add
adcl
xor
add
add
roll
aam
adc
add
add
add
add
add
add
add
add
add
add
adc
add
adc
jo
sbb
or
adc
add
xchg
sar
adc
sar
adc
sar
adc
sar
adc
sar
adc
sar
adc
add
adc
add
add
sar
adc
add
adc
add
adc
add
sar
adc
add
xchg
sar
adc
add
mov
inc
adc
add
adc
add
movb
lods
lock
add
add
in
aas
add
lock
add
add
mov
add
add
lock
add
add
add
add
lock
add
pop
add
add
add
out
aas
add
out
aas
add
add
or
cwtl
out
aas
add
add
add
add
add
add
aas
add
in
aas
add
mov
jge
adc
jge
adc
adc
jl
adc
jl
adc
add
adc
add
adc
add
mov
add
adc
jge
adc
add
adc
jge
adc
jl
adc
add
adc
add
adc
inc
adc
or
jp
inc
adc
add
adc
add
adc
adc
inc
add
add
jge
add
jge
add
sidtl
add
add
add
add
add
add
push
add
add
cmpl
add
add
add
jp
add
or
add
or
add
add
add
jns
add
add
add
add
jns
add
jns
add
adc
add
notl
add
pushl
cwtl
sar
or
sar
or
sar
adc
add
insb
sar
adc
add
sar
adc
jmp
adc
add
sar
or
sar
adc
incl
add
cmp
sar
or
sar
adc
add
in
sar
adc
incl
fadd
incl
cli
fmul
sar
aas
add
add
in
aas
add
or
add
add
add
jmp
or
add
add
add
add
adc
add
add
add
add
add
add
call
or
xchg
call
or
push
in
aas
add
in
aas
add
add
add
adc
sbb
aas
add
aas
add
stos
add
adc
inc
adc
test
xchg
add
adc
add
adc
test
inc
add
add
adc
add
adc
add
adc
test
int
pop
adc
add
adc
add
adc
inc
adc
test
sbb
adc
inc
adc
test
mov
pop
adc
aas
add
add
roll
jge
sub
add
add
push
add
roll
js
sbb
popa
test
add
xchg
add
add
loope
push
add
add
add
test
sti
add
add
xchg
mov
xchg
sub
or
sub
add
add
xchg
incb
or
add
add
add
add
add
add
mov
adc
dec
nop
sar
adc
sar
adc
sar
adc
sar
adc
sar
adc
sar
adc
sar
adc
incl
incl
adc
sar
adc
sar
adc
sar
adc
decl
add
adc
pop
xchg
sar
adc
sar
adc
add
sar
ret
add
inc
add
std
add
or
ljmp
cmp
cmp
ljmp
std
ljmp
std
cmp
cmp
ljmp
std
ljmp
std
clc
sbb
es
call
or
add
add
sub
ss
lock
add
mov
popa
addr16
imul
jae
jno
ja
pop
jns
test
pop
pop
adc
fisubs
rcr
imul
sub
jno
sub
jmp
adc
add
adc
add
pop
add
adc
add
pop
add
adc
add
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
ss
addr16
outsb
push
push
addr16
push
push
addr16
push
mulb
push
adc
in
adc
lock
xlat
pushw
push
sbb
pcmpgtd
push
scas
data16
cs
out
ss
add
cs
fdivp
gs
mov
or
test
inc
out
gs
mov
out
ljmp
out
lcall
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
test
add
mov
add
add
add
add
add
js
add
push
add
add
add
js
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
jmp
std
add
stc
std
add
stc
std
add
jmp
std
add
mov
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
pop
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
or
sbb
dec
mov
adc
or
ds
or
jg
ret
cli
repnz
and
xchg
decb
cltd
ja
movsl
add
lahf
out
inc
jo
inc
and
inc
jg
push
in
mov
inc
adc
mov
add
out
jb
pop
int3
sbbl
sub
and
aas
pop
mov
or
pop
inc
mov
mov
xchg
dec
cmpsb
cmp
out
rorb
fcmovb
fwait
or
int3
xchg
cmpsl
push
xor
enter
movsl
shufps
lock
in
jae
movsb
dec
xor
mov
mov
ss
adc
pop
scas
xor
mov
or
xor
and
std
jae
jp
dec
adc
addr16
mov
or
cwtl
push
cld
shlb
push
inc
jo
mov
test
stos
mov
and
movsb
mov
fnstcw
pusha
in
dec
enter
push
add
push
bound
add
jmp
bound
jno
cltd
jle
out
xchg
jns
inc
dec
test
out
jge
mov
mov
push
dec
jp
lea
call
addr16
mov
push
sub
cmp
in
add
mov
cmc
cmpsl
lahf
into
insl
test
add
or
mov
rol
add
push
adc
sub
mov
ret
out
adc
in
movsl
pop
add
mov
sbb
jmp
push
nop
js
sub
lret
fsub
call
aas
or
hlt
enter
add
adc
push
adc
subb
shrl
ss
add
add
xchg
push
test
int
fistpl
cmp
fisttps
or
mov
jmp
sbb
add
js
rorb
pop
stos
or
jmp
cmp
test
ret
push
and
std
mov
das
sahf
xchg
sbbl
std
fldt
adc
insb
and
or
es
push
int
mov
mov
imul
push
xchg
xor
xor
ffree
pop
sahf
imul
xor
cmp
in
inc
add
xor
mov
rorl
or
and
into
aad
adc
xor
mov
mov
clc
fwait
xor
clc
stos
xor
stc
mov
push
add
cmp
and
fstpt
loope
enter
lods
mov
sbb
ret
xor
stc
lret
xor
clc
add
clc
cmc
jns
enter
gs
int
inc
test
pop
sbb
test
inc
cmp
stc
xchg
cmp
push
cmp
cli
cmp
ret
mov
sbb
push
into
xchg
mov
out
add
adc
mov
stos
mov
aad
imul
rorb
push
add
push
add
mov
add
test
mov
lds
mov
cmc
xor
inc
dec
push
jl
into
daa
xchg
jle
mov
imul
fwait
in
sbb
int3
adc
out
add
fistl
add
sbb
sbb
add
loopne
mov
fstps
pushf
sbb
sbb
sbb
pop
sbb
add
inc
push
lods
rcl
lds
dec
lods
mov
sbb
xchg
es
scas
clc
clc
ficoml
lea
add
cmpsb
push
insl
push
xchg
pop
sbb
xchg
inc
add
les
add
and
popf
cmp
pop
mov
sahf
mov
call
add
adc
adc
adc
mov
repz
or
jp
add
sbb
pop
adc
loop
out
xor
and
pop
and
xor
adc
pushf
pop
add
or
sahf
dec
je
sbb
iret
imul
cmp
push
aaa
add
cmp
inc
or
sti
fwait
cmp
or
cmp
pop
push
mov
aam
sbb
push
popa
lock
cld
sarb
sub
aas
jmp
adc
cmp
negl
sahf
fldt
jb
lods
aad
mov
aaa
jnp
icebp
sub
icebp
out
xor
icebp
and
pusha
adc
int3
add
jnp
pop
jae
xchg
lods
data16
mov
test
adc
insb
jns
sub
add
cmp
sti
and
ja
mov
mov
nop
daa
gs
jge
push
adc
push
inc
aas
negl
in
test
add
add
add
inc
xor
rclb
and
mov
push
jne
add
iret
and
mov
adc
test
in
jg
sbb
test
lcall
dec
je
inc
lea
inc
jmp
jle
push
rclb
pop
pusha
push
cmp
arpl
adc
add
adc
stc
lock
fiaddl
mov
add
jg,pn
and
pop
pop
add
dec
adc
adc
adc
push
iret
adc
loopne
push
test
arpl
jl
decb
aad
lock
fisubrl
mov
mov
adc
adc
iret
adc
and
loope
xchg
aad
sahf
push
and
cwtl
mov
sbbl
sbb
add
test
into
mov
out
sbb
ja
cmp
mov
xchg
add
cmp
and
stos
inc
dec
cmpsb
mov
adc
add
adc
add
adc
add
adc
add
adc
add
aas
std
push
icebp
or
or
pop
pop
psubw
icebp
adc
das
in
push
loope
stc
sbb
pop
cmc
push
leave
xor
and
pop
pop
daa
adc
add
sub
or
add
xor
cli
sbb
std
daa
pop
aas
test
xchg
stos
call
outsb
cltd
ret
shlb
iret
int3
jbe
nop
cmp
lods
pop
pop
cwtl
arpl
xchg
aaa
gs
imul
sub
les
jne
shlb
jns
or
jge
mov
jg
xchg
orl
add
mov
lret
xchg
xchg
movsb
iret
xchg
xchg
mov
cltd
fwait
insb
fcomps
mov
mov
cmpsl
scas
scas
mov
mov
outsl
mov
nop
jae
mov
clc
mov
leave
lret
cld
int
adc
xor
mov
repz
popw
gs
sti
pusha
out
das
insb
ljmp
jbe
push
repnz
push
negb
pop
cli
dec
xchg
pop
incb
add
adc
push
push
or
sbb
push
pop
hlt
adc
dec
lock
sub
clc
sbb
xor
and
cs
cmp
sub
ss
adc
and
adc
push
add
ds
stos
in
xor
loopne
add
call
add
and
xchg
rcrb
sbb
mov
mov
sarb
xor
fadd
sub
aam
cmp
mov
xlat
cmp
shrl
xchg
andb
jl
mov
test
xorl
jg
popa
jnp
ja
ja
jae
mov
scas
fwait
xchg
stos
mov
mov
xchg
popl
add
xchg
jge
xchg
ret
and
pop
inc
lret
sub
loop
shll
dec
aaa
fistpl
repnz
jecxz
pop
out
sti
data16
out
out
fld
dec
repz
dec
test
fists
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
out
add
fists
add
jmp
adc
add
mov
ljmp
incb
mov
ljmp
js
js
ljmp
ljmp
pushl
incb
js
ljmp
ljmp
cmp
incl
add
ljmp
ljmp
cmp
incl
ljmp
clc
std
clc
std
call
std
incb
jbe
incb
adc
add
push
add
adc
add
push
push
ljmp
repnz
lcall
push
add
adc
add
push
adc
add
arpl
outsb
pop
push
jmp
push
fisubs
add
push
add
adc
add
push
push
add
push
add
adc
add
pop
add
adc
add
xlat
push
push
pop
add
adc
jmp
add
sub
add
add
add
add
add
add
add
adc
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
imul
in
in
out
sub
in
inc
push
jmp
in
sbb
shr
or
cli
cmc
add
cli
cmc
add
cli
cmc
add
cli
cmc
and
and
call
add
cld
jmp
adc
in
adc
fdiv
adc
icebp
adc
mov
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
in
inc
inc
push
movb
add
inc
inc
cmc
enter
icebp
mov
add
cs
push
inc
dec
repnz
lret
add
xor
jne
iret
test
jle
sbb
xor
or
jecxz
dec
test
lea
pop
inc
xlat
mov
sahf
out
adc
mov
shll
cwtl
outsb
and
outsl
or
and
pop
cmp
jno
pop
or
jns
lods
ss
ljmp
pop
or
in
sti
lcall
add
push
or
loop
inc
cmpb
clc
pop
in
and
xor
data16
sahf
imul
pop
arpl
je
xchg
push
pop
sbb
jle
insb
mov
cs
ds
mov
mov
cmp
out
xchg
insl
pop
mov
ljmp
dec
cld
enter
jge
popf
add
jo
stc
call
jae
mov
or
push
fisubrl
in
push
rclb
cwtl
lock
roll
pop
add
add
adc
int3
add
add
add
add
std
pop
dec
add
adc
flds
add
std
inc
dec
or
adc
mov
imul
add
fwait
adc
add
int3
adc
add
add
or
add
les
add
jge
add
mov
dec
decl
adc
add
adc
add
sub
call
cmp
lcall
cmp
decl
lret
lock
add
adc
add
pop
or
out
adc
add
pop
or
fistl
add
add
or
stc
adc
add
adc
clc
aaa
aas
add
incl
cld
aaa
aas
add
stc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
imul
insl
add
and
add
jnp
add
imul
add
add
adc
add
pop
add
adc
add
pop
push
add
pop
push
add
xchg
add
adc
inc
adc
dec
inc
adc
dec
inc
adc
inc
adc
dec
inc
adc
add
adc
dec
inc
adc
add
adc
adc
add
adc
inc
adc
add
adc
add
adc
inc
adc
add
adc
inc
adc
add
adc
inc
adc
mov
dec
roll
mov
add
add
add
add
add
add
add
add
adc
mov
add
add
add
add
add
add
add
adc
lahf
add
add
add
add
push
add
add
add
add
adc
repz
or
add
rolb
inc
add
add
fildl
push
add
add
inc
or
fldl
xchg
adc
add
adc
add
adc
jp
ret
add
add
add
lods
add
inc
add
loop
push
adc
add
lret
add
add
adc
add
adc
add
adc
add
or
daa
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
pop
add
or
add
add
invlpg
adc
test
add
movsl
add
nop
add
xchg
add
arpl
jno
outsb
add
outsl
add
add
cld
and
xchg
cld
das
add
cld
xor
sub
add
cld
and
xor
xor
add
repz
push
add
lods
add
adc
add
and
lock
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
push
adc
add
mov
adc
and
je
adc
dec
adc
add
sbb
add
pop
add
adc
xor
add
add
add
cmp
add
add
add
call
add
decl
add
dec
add
add
add
inc
add
add
add
mov
add
ljmp
add
lahf
add
pop
add
add
and
adc
dec
lcall
adc
adc
adc
adc
pushl
cmp
insl
adc
jns
add
xchg
pop
xor
pop
xor
aas
xor
dec
xor
mov
xor
data16
xor
push
lcall
adc
xor
add
adc
xor
adc
adc
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
loop
iret
xor
add
xor
add
xor
add
xor
aaa
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
inc
call
xor
inc
jmp
jae
in
xor
repnz
inc
lcall
inc
or
arpl
push
push
inc
push
push
mov
inc
and
stos
inc
and
cld
inc
and
in
inc
and
adc
and
pop
adc
daa
add
movups
sub
push
sub
pop
sub
or
sub
adc
sub
pop
call
std
xor
out
xor
out
xor
test
xor
lea
xor
jnp
or
pop
or
pop
outsb
or
psignw
jns
inc
pcmpeqd
inc
pop
ja
inc
or
or
jp
inc
add
pop
jae
inc
jo
push
or
push
or
inc
or
cmp
pop
sti
push
or
or
inc
or
cmp
loope
pop
or
cli
sbb
jecxz
inc
or
cld
dec
or
cld
dec
or
cld
inc
or
cld
dec
or
lea
fdivrp
nop
or
cld
jg
fdivr
orb
cld
xchg
or
cld
mov
mov
add
add
pop
or
loop
or
add
cmp
adc
add
push
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
jge
or
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
add
sbb
add
or
add
sbb
add
or
add
incb
mov
incl
mov
or
add
mov
inc
add
or
jne
inc
add
or
add
or
add
or
or
loop
aaa
add
or
cld
or
std
or
push
or
add
iret
or
or
cs
or
add
or
add
or
add
or
add
or
push
or
add
or
add
or
add
or
add
or
add
or
into
or
add
or
add
cltd
or
adc
mov
or
or
mov
push
or
add
rorl
sub
ret
or
adc
cmc
or
adc
out
sub
lret
adc
pop
mov
int3
pop
mov
lds
stos
adc
pop
mov
rolb
adc
pop
adc
push
adc
adc
push
scas
adc
pop
lret
add
add
mov
add
aam
inc
pop
lret
pop
mov
add
pop
mov
add
pop
jl
das
pop
xchg
es
jle
and
test
add
pop
fwait
add
pop
lcall
pop
test
aaa
pop
jg
cs
jbe
sbb
jno
sbb
jo
mov
push
insl
add
add
je
mov
outsl
add
push
imul
add
add
pshufw
pop
jne
test
jbe
pop
jae
xchg
je
adcl
jp
push
pop
ja
push
vmread
inc
pop
jge
cmp
jle
push
pop
jnp
dec
add
pop
inc
add
cmovb
sbb
inc
add
add
add
cmovbe
call
add
or
add
adc
add
or
add
add
add
add
or
mov
and
movsb
and
cmpsb
and
fwait
and
sahf
and
mov
and
or
and
or
and
add
or
and
or
and
or
pop
and
cmp
inc
or
aam
push
or
popa
and
or
and
or
andl
pop
sub
jne
sub
adc
repz
sub
push
or
repz
xchg
adc
nop
xor
xor
xchg
xor
or
sub
mov
xchg
add
sub
or
cmc
xchg
or
orl
cmc
int3
or
in
iret
or
mov
or
in
lret
or
lds
adc
cli
or
adc
mov
xor
or
sub
or
xor
sbb
cmp
and
xor
xor
add
or
adc
xchg
adc
mov
adc
mov
or
add
mov
push
loope
push
or
dec
push
or
push
push
sbb
aas
push
std
loopne
push
add
push
push
xor
dec
push
mul
inc
push
in
loopne
push
loopne
push
pop
loopne
push
inc
loopne
push
aas
loopne
push
inc
loopne
push
cmp
jbe
call
fbstp
adc
popa
push
and
pop
push
cmp
push
push
aaa
add
sub
sub
mov
sub
add
fsubl
daa
pand
mov
fbld
mov
push
movsl
adc
and
mov
inc
and
cltd
adc
and
add
and
adc
and
add
pop
mov
adc
and
inc
add
and
ss
and
dec
add
and
dec
adc
and
add
add
and
pop
sbb
pop
push
adc
and
add
push
mov
adc
push
es
arpl
pop
pop
es
pop
gs
pop
and
cmp
and
pop
pop
and
lret
push
adc
les
pop
daa
lds
outsl
es
push
insl
xchg
inc
addb
addl
adc
and
cmp
sub
add
pop
push
and
add
sub
addl
movsl
and
push
sub
and
or
ss
pop
add
in
sbb
push
or
movsb
repz
lret
in
sbb
sub
inc
or
repz
or
rep
or
repz
or
repz
pop
pop
xor
rorb
pop
rcll
pop
rorb
pop
roll
add
pop
aam
test
aad
jle
or
pop
xlat
adc
pop
fmuls
pop
fsts
pop
fimull
push
fistl
push
fmull
push
fimuls
push
fists
push
loopne
stc
push
loope
cli
push
loop
add
pop
jb
adc
insl
cld
sbb
je
push
pop
outsl
cld
std
push
ss
add
cmp
out
push
sub
repnz
sub
xchg
adc
mov
add
adc
mov
adc
test
or
pop
xchg
sysret
mov
push
pop
orl
sbb
push
or
pop
inc
or
pop
cmp
or
dec
or
pop
inc
or
pop
cmp
and
cwtl
or
pop
fwait
or
pop
lcall
push
jl
and
ja
pop
pop
add
push
push
jno
sbb
pusha
sbb
push
arpl
sbb
push
add
or
push
dec
or
push
aas
sbb
push
or
push
sub
loope
test
loopne
stos
sbb
or
movsl
or
or
cmpsl
sbb
or
mov
sbb
or
mov
or
or
scas
sbb
or
cltd
or
or
cmp
out
or
xor
add
or
or
push
push
or
push
pop
or
push
and
cmp
rorl
cmp
rorb
cmp
or
push
daa
or
push
sbb
inc
push
sbb
inc
push
or
inc
push
or
inc
push
pop
cld
inc
push
dec
cld
inc
push
dec
cld
inc
push
dec
cld
inc
push
loopne
inc
push
loope
dec
push
sar
dec
push
sar
dec
push
test
dec
push
xchg
sti
dec
push
js
dec
push
jns
push
push
add
dec
cld
push
push
dec
cld
push
push
cmp
push
push
cmp
cld
push
push
aas
cld
push
push
adc
push
pop
pop
roll
pop
pop
mov
xor
push
xor
push
xor
push
xor
lds
ss
add
cmp
roll
cmp
mov
add
cmp
loopne
add
inc
inc
mov
inc
mov
inc
inc
mov
inc
inc
lods
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
loopne
movsb
add
dec
lock
add
loope
daa
add
jecxz
sub
vmovntps
out
sub
add
call
add
out
and
int
mov
out
scas
add
out
mov
add
lcall
lock
add
movzwl
stos
movsbl
stos
cmpxchg
jge
mov
add
add
adc
inc
adc
aas
adc
adc
dec
adc
dec
adc
adc
dec
add
adc
inc
adc
or
js
pop
adc
push
adc
add
jne
adc
je
adc
jae
add
jb
std
adc
aam
inc
adc
adc
adc
adc
mov
adc
xor
adc
xor
adc
add
add
adc
add
add
add
and
add
push
add
js
cwtl
and
and
and
and
and
and
and
and
and
and
and
and
and
icebp
jmp
add
add
icebp
push
add
add
icebp
in
add
add
lock
dec
add
add
add
lock
fildl
add
adc
xor
adc
add
adc
add
adc
xor
adc
add
imul
add
insb
xor
adc
add
adc
add
adc
add
adc
add
cmp
add
jo
add
cmp
add
xor
adc
add
adc
add
inc
add
adc
adc
add
adc
add
mov
add
adc
xor
adc
add
adc
adc
adc
ljmp
add
add
add
adc
lock
add
add
add
add
adc
flds
adc
jnp
adc
fadds
adc
pop
xor
add
xor
add
xor
add
add
add
add
adc
les
adc
pop
xor
add
add
add
adc
movb
add
add
add
adc
or
add
adc
or
add
push
add
or
add
in
adc
add
add
mov
out
add
iret
adc
add
add
add
add
rclb
add
test
add
add
mov
add
int3
adc
add
adc
add
add
mov
add
mov
add
cmp
add
mov
add
cmp
add
mov
add
lcall
add
or
decl
add
outsb
decl
add
aas
decl
add
incl
add
add
jmp
add
ljmp
mov
ljmp
add
sub
mov
lcall
jge
add
cld
lcall
mov
jmp
fdivrp
pushl
bound
add
add
jno
add
mov
sub
add
outsl
sub
add
sub
cld
add
adc
add
sub
add
fs
add
repz
adc
sub
adc
sub
add
or
add
out
add
movsl
add
adc
sub
adc
add
add
mov
sub
adc
lret
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
add
add
sub
adc
jmp
adc
sub
adc
call
add
add
mov
add
in
add
add
mov
sub
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
out
add
mov
jo
lcall
incl
fcmovbe
lcall
mov
add
cs
jmp
ror
fstp
xor
adc
add
outsb
sahf
sbb
mov
cmp
add
adc
add
pushf
sub
stos
jnp
insl
les
out
stos
cmpsb
lcall
movsb
xchg
insb
mov
arpl
lods
lods
pusha
nop
test
jb
jl
data16
jae
outsb
xchg
std
cmp
add
sub
jmp
add
add
dec
add
decl
arpl
test
dec
mov
add
sbb
je
jae
jp
bound
and
loop
add
aas
add
add
incb
inc
add
jno
jo
dec
ja,pn
jae
bound
cs
mov
add
add
jae
bound
ja
jae
addr16
data16
xchg
dec
bound
jge
ds
aas
adc
scas
aas
adc
add
addl
add
add
roll
je
fiadds
push
adc
add
adc
add
adc
lds
ffree
inc
pop
loope
dec
dec
add
aad
gs
rcll
icebp
int
xor
lahf
fs
negl
insb
aaa
pushl
je
inc
stos
js
or
xor
out
xor
sbb
add
sbb
add
outsb
fbld
xor
add
add
test
lods
lret
fmul
fcomip
fadd
fcomip
out
ret
movsb
mov
enter
les
xor
pop
into
or
xor
add
pop
enter
les
leave
inc
mov
inc
mov
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
adc
add
mov
fimuls
decl
adc
add
jg
sub
sarb
jae
adc
mov
push
das
sarb
sub
push
add
sarb
jno
jl
mov
adc
add
mov
sub
jmp
mov
and
add
push
add
add
add
add
add
add
cmp
pop
add
add
add
dec
add
dec
add
add
std
ja
push
std
and
pop
std
incl
add
std
das
add
std
ja
call
std
in
mov
punpcklwd
adc
jb
or
imul
pusha
push
push
pushf
pop
jno
popf
jo
mov
jno
push
adc
jae
bound
push
lock
pusha
rcll
mov
rorl
les
pop
lahf
push
add
mov
jb
fs
lods
sbb
add
rcrl
jae
mov
xchg
bound
sahf
jno
pop
fwait
jns
sbb
add
fistpl
jae
cmc
mov
bound
sahf
jno
sbb
add
fistpl
jne
loope
pusha
testb
iret
test
ret
add
add
add
xor
pop
inc
mov
pop
add
lret
jmp
lret
xlat
mov
int3
add
add
scas
push
and
addb
add
add
add
add
stc
adc
add
testb
loop
adc
int3
stos
and
jecxz
and
pusha
push
add
add
add
add
add
add
sub
out
mov
adc
add
jl
dec
mov
mov
fdivr
mov
adc
add
adc
lcall
adc
jns
add
je
popf
jno
jl
sub
sub
mov
outsb
aas
mov
xchg
outsb
dec
scas
and
sub
add
test
jae
subb
push
adcl
ja
call
pop
or
adc
imul
sbb
insl
repz
imul
and
push
outsb
jae
sbb
decl
pusha
add
bound
sbb
or
xchg
push
pop
das
jbe
and
sub
incl
add
add
add
add
jae
or
outsl
add
add
add
sub
dec
sub
push
jmp
push
outsl
adc
scas
fs
cli
mov
push
push
mov
sub
add
adc
mov
loope
scas
imul
mov
jecxz
movsb
arpl
pop
mov
mov
sub
add
add
add
add
adc
sub
adc
insl
adc
jo
dec
add
sub
add
dec
add
adc
add
adc
stos
insl
jne
fwait
sub
out
lret
add
sub
add
in
add
sub
add
and
je
add
add
add
add
add
scas
pop
leave
add
add
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
xchg
add
add
add
add
cmpsb
add
ja
dec
add
add
jo
inc
add
add
add
add
add
add
bound
add
lods
incl
mov
unpckhps
or
ret
adc
call
adc
mov
adc
add
mov
adc
inc
adc
add
adc
add
ret
ljmp
popa
mov
fs
push
jmp
mov
cwtl
inc
jmp
add
mov
jno
lods
xchg
fs
insb
jno
dec
imul
jb
fs
std
jno
jb
jb
arpl
jns
jne
jae
dec
push
outsb
jb
fs
xchg
jb
bound
add
add
push
fs
dec
push
jae
mov
jmp
arpl
pushl
inc
add
lea
insb
test
outsb
mov
add
add
add
add
push
add
fildl
inc
adc
add
out
dec
adc
add
xlat
add
or
je
fiadds
push
adc
add
adc
add
adc
add
dec
add
incb
pop
adc
add
cmp
jb
inc
add
add
inc
add
add
push
add
dec
add
jbe
push
adc
outsl
adc
adc
imul
add
adc
jb
fwait
add
add
add
add
add
je
sbb
add
add
add
xchg
add
out
cld
stc
stc
inc
rcrl
loopne
pop
adc
add
add
sbb
xlat
xchg
add
jle
rcl
jbe
rcl
outsb
sbb
shlb
lds
push
sbb
xchg
inc
sbb
xchg
ds
add
jmp
add
jmp
or
loope
or
pop
repz
pop
add
nop
push
push
mov
outsl
and
sbb
enter
clc
add
rorl
push
rcrb
mov
push
mov
add
or
dec
adc
sbb
mov
lea
imul
mov
ss
lods
dec
adc
sbb
push
rorb
pop
xor
arpl
scas
repnz
or
or
add
mov
add
ljmp
add
dec
add
add
add
add
dec
add
add
cmp
mov
cmp
cld
add
add
std
fildl
add
add
push
add
std
jne
push
std
imul
std
data16
ljmp
add
pushf
std
cmp
imul
add
dec
add
das
add
push
add
jnp
dec
adc
cmp
push
add
adc
push
adc
add
adc
pop
inc
adc
add
sub
add
leave
test
insl
xlat
test
outsb
inc
dec
stos
bound
in
xchg
jno
push
add
adc
mov
ss
leave
dec
mov
adc
movsb
jno
std
xchg
pop
add
call
sub
fs
sub
add
bound
push
loop
mov
jno
dec
pop
movsb
add
xchg
mov
cmpsl
jle
lods
mov
call
mov
mov
sub
jae
pop
stos
bound
cmp
xor
ds
sub
add
loope
nop
xor
and
shrl
mov
lret
sbb
rol
lds
pop
shrb
loopne
test
xchg
mov
mov
decl
movsb
xchg
jno
push
mov
inc
movsl
dec
ret
pop
stos
dec
lds
rol
push
jmp
test
pusha
jge
mov
jno
add
lods
xchg
fs
cmc
test
je
jl
jb
cmpsl
popf
pop
inc
sahf
mov
pushl
gs
inc
and
lds
dec
and
push
incl
stos
mov
stos
mov
jno
lods
xchg
insl
or
insl
je
imul
ja
fs
insb
jmp
inc
pop
add
jno
push
inc
je
inc
pop
mov
inc
push
pop
mov
dec
inc
pushf
dec
incl
jne
push
arpl
dec
gs
jb
bound
or
fs
dec
pusha
jno
lock
inc
pop
loope
push
inc
hlt
inc
inc
pop
lock
inc
inc
in
push
pop
push
inc
dec
inc
dec
js
add
xor
pop
arpl
pop
jno
pop
test
pusha
ja
adc
jae
add
cmp
add
push
mov
out
mov
inc
shrb
inc
adc
jne
subl
xchg
lahf
insl
test
add
adc
inc
pop
popa
lds
jbe
inc
dec
in
inc
dec
in
dec
inc
sub
add
shll
icebp
fcoms
jb
fsubrs
adc
mov
loope,pt
push
push
test
add
out
clc
mov
jecxz
mov
in
int3
dec
into
sub
add
add
movsl
fsubl
fsubs
add
movsb
int3
shlb
call
movsl
movsb
mov
cwtl
cmpsb
orb
mov
mov
lds
int3
push
mov
lds
call
cmpsb
pop
mov
push
movsl
add
inc
call
mov
mov
movb
push
mov
lds
call
cmpsb
add
adc
repnz
mov
add
and
lods
inc
mov
mov
mov
jnp
pop
mov
scas
dec
or
jae
insl
lahf
jmp
dec
lods
inc
lods
dec
mov
inc
sahf
into
adc
nop
lods
mov
add
stos
sahf
pop
mov
orl
fs
test
inc
sub
add
call
outsl
mov
push
pop
and
dec
leave
pushf
popf
jno
mov
outsb
push
dec
inc
pop
xor
push
inc
pushf
inc
inc
pop
cmpsb
push
push
push
mov
dec
add
popa
sbb
arpl
jne
add
inc
push
pusha
data16
and
jae
test
bound
pop
arpl
bound
and
jb
pop
data16
dec
inc
pop
sub
push
cmc
dec
pop
inc
ds
inc
jmp
dec
dec
out
cld
jmp
pop
outsb
and
pop
insl
jns
jne
popa
adc
jno
push
lea
push
jecxz
hlt
cld
mov
add
jecxz
lahf
outsb
fiadds
test
in
cmpsb
jae
inc
add
adc
inc
out
enter
mov
jno
push
xlat
jae
push
adc
jno
mov
fs
movsb
jae
jns
pop
test
cmpsb
jae
xchg
jae
mov
mov
ss
push
push
out
mov
inc
pop
jmp
inc
pop
fldl
add
fwait
add
icebp
add
mov
and
std
mov
cmc
loopne
movsl
ljmp
test
repnz
ret
xchg
ret
mov
int
cmpsb
pushf
lret
xchg
mov
mov
lods
loopne
mov
cltd
loopne
movsb
jp
mov
lcall
push
mov
lds
push
test
add
push
pushf
insl
loope
mov
xor
dec
lahf
es
decl
movsb
pop
dec
jb
imul
mov
push
and
scas
addr16
mov
incb
movsb
call
jp
pop
jo
les
fs
lahf
movsb
pop
lret
imul
mov
push
add
add
jmp
int3
scas
mov
jnp
xchg
pusha
test
movsl
pop
push
mov
addr16
mov
fs
andb
dec
bound
dec
bound
sbb
imul
push
inc
pop
jmp
pop
push
sub
imul
arpl
push
insw
dec
pusha
jae
dec
arpl
add
pop
arpl
sbb
imul
pop
jnp
pop
pushw
insw
lea
add
and
insl
pop
arpl
fs
sahf
bound
lea
jmp
push
inc
pop
sub
jne
stos
lahf
inc
mov
fs
mov
pop
inc
aad
jno
notl
data16
cli
movsb
imul
movsl
pusha
add
clc
or
inc
fcmovb
pop
loopne
test
call
xor
fs
inc
popf
pop
sarl
addr16
cmp
mov
dec
test
adc
inc
mov
rcrl
xchg
adc
xor
pop
test
pop
jae
cmpsb
push
jno
dec
mov
sub
aas
mov
add
xor
add
mov
lods
sub
inc
sahf
inc
xchg
and
add
adc
sbb
add
xor
or
mov
adc
mov
jecxz
stos
mov
scas
lahf
rcl
lcall
mov
lahf
mov
push
or
loopne
cmpsl
mov
mov
mov
add
pusha
les
stos
stos
les
lahf
mov
jmp
mov
inc
cmp
push
lcall
into
mov
lcall
mov
sub
cmp
dec
cmp
inc
and
mov
inc
jmp
movsb
mov
jmp
cltd
mov
add
adc
add
add
adc
add
adc
add
int3
scas
ljmp
shrl
push
add
pushl
lcall
insl
outsb
push
pusha
jae
ljmp
clc
outsb
outsb
js
sub
dec
imul
outsb
outsb
test
lcall
insb
insl
je
imul
arpl
je
jmp
outsb
add
imul
arpl
aas
bound
push
jmp
data16
bound
data16
inc
arpl
push
arpl
pop
imul
lcall
jge
add
inc
add
insb
add
jbe
push
adc
add
mov
gs
add
sbb
add
or
gs
add
sbb
add
fildl
insb
add
adc
add
stc
add
add
adc
add
testl
pop
adc
add
adc
int3
adc
dec
lods
lods
jne
test
jns
add
dec
nop
out
xchg
jne
dec
xchg
dec
mov
inc
mov
insl
popf
add
nop
pop
add
call
pop
mov
loope
add
mov
sbb
fcmovbe
add
test
fdivr
fstl
add
add
out
cmc
or
fsqrt
sar
add
add
ss
inc
sarb
ss
sub
inc
mov
adc
dec
popa
mov
inc
dec
outsl
pop
jl
movsb
dec
jmp
add
or
add
movsb
adc
add
mov
mov
dec
mov
add
out
add
mov
add
or
sub
rolb
aaa
cmp
std
sbb
fimuls
inc
sarl
cmc
aas
int3
lret
or
cld
mov
fildll
lret
cmpsb
in
cmp
roll
fdivl
push
and
mov
fnsave
shll
inc
inc
std
daa
movsb
lahf
fsubs
mov
add
fdivl
add
movsb
insl
test
mov
cmpb
popf
lea
jge
xchg
add
inc
dec
inc
mov
insb
xchg
pusha
js
pop
arpl
popa
jns
jl
imul
decb
dec
cld
outsl
inc
push
testl
add
push
js
pop
jae
imul
add
add
xor
push
cs
add
scas
cmpsb
lods
shrb
lcall
sbb
cmp
das
sub
cmp
std
hlt
fsubs
lock
sub
push
mov
mov
add
aas
sbb
add
pop
mov
or
inc
adc
dec
stos
popf
mov
inc
mov
stos
jp
lods
ja
push
cwtl
add
outsb
push
mov
cmpsl
jp
mov
pop
cmpsb
xchg
mov
add
in
rcll
cmp
jo
sbb
jnp
cmc
mov
insl
add
movsb
sbb
add
xchg
repz
stc
aad
scas
cld
lret
test
cld
add
test
sti
add
in
iret
ss
xlat
roll
call
add
add
add
subl
jl
push
adc
push
inc
sarb
sub
add
or
mov
ficompl
inc
test
iret
inc
jne
lahf
sub
sbb
add
add
roll
int
xor
addr16
lods
bound
outsb
add
add
bound
dec
stc
pushf
fimull
lcall
mov
dec
add
rclb
in
fldcw
xor
xor
fmulp
cmp
mov
int3
cmp
fwait
enter
int3
xor
sarl
push
pop
dec
mov
pop
or
cltd
popa
adc
rorb
movsb
mov
mov
xor
add
add
aad
xlat
mov
cs
mov
mov
add
add
ret
jmp
mov
hlt
cmpsb
mov
cld
mov
mov
stos
sahf
in
clc
vpinsrw
out
ror
shlb
mov
ror
rol
add
fwait
mov
nop
popf
js
sbbb
mov
cltd
lea
xor
mov
and
incl
add
or
nopl
or
adc
in
pop
fdiv
scas
push
ret
in
ret
call
add
adc
mov
jg
popa
mov
push
jo
mov
popf
dec
mov
adc
dec
mov
ret
pop
test
mov
fnsave
add
hlt
and
ss
xor
stc
in
add
adcl
fwait
cwtl
test
lods
mov
add
adc
add
or
icebp
roll
adc
pushf
push
das
add
mov
add
add
pushf
js
xchg
xchg
lcall
aad
mov
push
sarb
and
add
and
cmp
aaa
fildl
sub
jmp
outsl
push
outsl
jle
imul
inc
jb
add
add
xchg
imul
lret
mov
mov
popf
cld
pushl
jns
jmp
inc
movsl
mov
inc
test
scas
inc
mov
test
push
xchg
stos
aas
test
add
pandn
ret
add
fsubl
mov
adc
add
lea
mov
test
nop
cmpl
adc
add
jp
addr16
add
and
out
fadd
sbb
jge
mov
andl
xchg
jbe
pushl
xchg
lcall
pop
or
and
fs
add
add
dec
inc
add
pop
pop
popa
xor
dec
adc
add
pop
xor
add
lods
xchg
sub
sbbb
cmpsb
stos
mov
clc
add
add
jae
js
push
add
pop
inc
push
scas
push
js
insl
jp
pop
popa
arpl
fs
sarb
es
subb
pop
pop
push
add
adc
push
dec
dec
call
adc
or
pop
or
or
push
jmp
push
push
adc
and
stc
cmc
and
lock
sub
sub
clc
leave
jno
rolb
and
in
push
pop
frstor
sbb
jecxz
add
loop
adc
rorb
adc
lahf
mov
mov
add
add
jo
test
adc
mov
adc
jmp
and
adc
adc
push
or
add
add
adc
loop
cmp
repz
add
push
adc
leave
and
jecxz
sti
sbb
add
add
mov
adc
sbb
and
and
or
sbb
cli
or
sbb
push
xlat
pop
adc
or
sbb
add
xchg
in
jo
mov
dec
lods
mov
push
add
add
in
mov
push
ret
cli
stc
add
movsl
mov
stos
mov
mov
lock
sar
popf
movsb
mov
gs
aam
mov
movl
scas
cmpsl
out
dec
add
stos
mov
sub
cmc
add
scas
out
cmp
and
adc
add
adcb
adc
add
add
repz
add
in
cli
sti
and
and
repz
in
out
add
cld
ljmp
fcmovnbe
xchg
and
rol
fadd
repz
lret
roll
mov
add
add
aas
js
sbb
pop
push
pop
ss
inc
add
pop
jae
or
popa
push
loopne
fistpll
jmp
dec
dec
inc
sub
dec
mul
jecxz
hlt
std
imulb
xlat
lret
fbstp
iret
hlt
in
rol
xor
in
xor
jmp
adc
clc
out
adc
or
and
add
add
or
rcll
and
sbb
cmp
jmp
xor
out
stc
sub
adc
daa
sub
cmp
add
adc
pushf
mov
xchg
leave
xlat
cmp
add
adc
sub
std
out
add
testb
out
add
loope
inc
xlat
out
add
sbb
ss
dec
js
int3
jae
adc
sub
les
add
add
ret
pusha
insl
jl
mov
add
and
sub
mov
addb
inc
in
hlt
scas
out
int
fld
mov
mov
add
add
add
add
rorb
call
mov
test
clc
daa
xor
aad
adc
add
add
out
add
jl
pusha
cli
cs
out
ss
cmp
stc
xor
cmp
xor
adc
pop
mov
add
jns
iret
int3
ds
aad
xor
add
sub
mov
clc
jp
mov
xchg
clc
mov
push
rcrl
mov
pop
xchg
lea
add
add
stos
mov
push
lcall
cmp
add
imul
add
cld
add
adc
push
or
add
add
add
cli
cli
call
lret
int
push
mov
cmpsl
test
lahf
mov
dec
sahf
mov
iret
leave
fsub
mov
cltd
jne
xor
inc
add
mov
ljmp
leave
cmpsb
ljmp
dec
inc
push
pop
pop
pop
push
and
add
cltd
jecxz
cmpsl
movsl
mov
jle
add
cs
sub
add
sbb
add
add
pop
pop
adc
add
adc
sbbb
push
adc
and
and
jns
sbb
add
inc
mov
mov
push
add
adc
adc
mov
pop
xor
or
cmp
fistl
es
sub
decl
aas
or
add
adc
cli
inc
xchg
rcll
aam
scas
nop
nop
lcall
stc
std
pushf
aas
mov
hlt
dec
cmp
xor
mov
push
imul
int3
cmp
add
adc
xor
mov
div
xor
adc
cld
xor
inc
jmp
jne
fs
shl
lret
sub
mov
and
rol
and
rcl
add
add
movsl
mov
and
dec
xor
or
addps
add
add
adc
sub
lds
adc
jmp
addl
jp
pop
jle
xchg
jno
adc
add
jecxz
xchg
xchg
lods
mov
arpl
stos
loop
arpl
mov
fisttpl
stos
xchg
idiv
mov
xchg
add
mov
out
add
ret
cmp
je
mov
mov
fdivs
rolb
jo
ret
stos
mov
test
hlt
hlt
sub
and
pushl
adc
mulb
and
adc
add
and
jp
pop
cmp
data16
add
aad
mov
int3
fdivrl
fcmovnbe
add
add
mov
out
dec
mov
lcall
xchg
lds
icebp
stc
repnz
mov
add
sbb
insb
fwait
je
add
outsb
js
dec
jne
jle
push
jg
fisubrl
jl
ja
pop
leave
push
outsb
cmp
dec
shll
and
pop
push
push
push
dec
out
cs
pop
addr16
rorl
dec
push
leave
or
mov
mov
push
pop
adc
mov
in
lods
mov
add
add
add
adc
dec
dec
or
dec
pop
push
push
pop
adc
sub
add
es
cmc
stos
pop
and
sti
sub
and
cs
sbb
mov
mov
sbbl
xchg
jns
cmp
fisubrl
pop
lret
jne
jo
pusha
push
jp
jne
push
pop
or
add
inc
cld
arpl
imul
adc
dec
pop
inc
cwtl
cmp
xor
scas
xor
sub
inc
adc
int
decb
add
dec
rorl
es
jmp
lods
jg
imul
sbb
daa
or
cli
testl
and
add
add
add
add
addb
xchg
test
pop
mov
add
inc
insl
repz
adc
test
bound
out
mov
popa
jo
pop
arpl
push
pop
dec
enter
clc
push
jo
xchg
data16
std
push
push
loope
sti
incl
jp
fs
cmp
add
fstps
or
sbb
xor
and
addr16
and
add
jnp
sbb
add
push
je
xor
add
pop
pop
dec
pop
out
or
add
das
dec
inc
cmp
add
pop
arpl
add
sub
add
movsl
mov
pop
xchg
cmpsb
push
mov
mov
add
inc
lea
orb
mov
mov
adcl
xchg
shlb
sbb
mov
adc
int3
mov
adc
or
sbb
lret
adc
sbb
add
adc
jp
out
jo
lret
and
outsb
gs
sti
push
lods
pop
push
jbe
scas
cmp
mov
addr16
push
push
pop
fadds
add
adc
or
cs
add
adc
adc
std
in
or
or
repz
sbb
mov
cld
adc
into
std
and
adc
push
push
inc
add
decl
push
sub
das
daa
sbb
sub
add
cmp
push
scas
mov
sahf
dec
cmpsb
push
out
adc
cmp
push
add
inc
jo
push
sub
iret
dec
sub
movsb
pop
sub
dec
sbb
les
lret
push
mov
pop
stos
push
test
adc
jnp
xchg
mov
mov
mov
outsl
cmpsb
pushf
test
inc
mov
movsb
inc
mov
jp
outsb
xorb
sub
push
rcl
mov
lcall
xchg
xlat
mov
jle
pop
add
cld
mov
mov
ja
ljmp
fwait
cwtl
adcb
cmc
lods
inc
repnz
outsl
sahf
loope
aas
jmp
mov
stos
imulb
out
arpl
repnz
add
cld
dec
sarb
shll
fwait
imul
cmp
jg
lret
xor
mov
cmpsb
jbe,pt
mov
add
sub
stos
cmpsl
pop
popf
stc
mov
mov
mov
jae
mov
add
lret
enter
jl
pushf
icebp
push
rolb
xchg
test
iret
mov
push
pusha
jb
cmp
jae
push
es
data16
or
js
mov
imul
add
push
cmpsb
cmp
add
pop
push
mov
pop
push
mov
inc
mov
sbb
sbb
pusha
insl
sti
iret
and
hlt
jae
pop
aas
les
xor
fstps
dec
or
add
sbb
loope
push
adc
or
rorb
add
rorb
add
add
push
pop
daa
jl
cmc
xor
stos
mov
xchg
jmp
add
add
scas
mov
jae
jecxz
dec
ret
cmp
ljmp
mov
fstp
xor
fcmovbe
push
fdivrl
add
scas
xchg
adc
stos
ljmp
ss
mov
fs
jg
orl
mov
add
ret
mov
dec
mov
add
add
rcrl
repz
sub
sub
daa
mov
ss
ja
sub
push
cmc
std
lock
or
pop
int3
mov
inc
lods
stos
add
pop
pop
jnp
ja
mov
add
shr
lods
cli
cs
jmp
gs
add
inc
pop
push
inc
rolb
xchg
ja
lahf
mov
mov
mov
ret
inc
iret
sti
mov
sar
lds
out
lea
loopne
xchg
or
cmp
in
push
add
repnz
jge
adc
add
out
cmp
jmp
xchg
jge
jno
mov
xchg
dec
std
jmp
mov
add
outsb
lea
add
or
outsl
mov
aas
sub
notb
add
cmc
nop/reserved
add
loop
inc
out
out
add
popf
mov
mov
mov
ficompl
add
or
sub
adc
sub
inc
icebp
cld
push
pop
sub
bound
fiadds
and
add
pop
imul
push
sbb
fiaddl
add
loope
jmp
mov
add
out
add
inc
loope
mov
flds
add
sti
ret
das
mov
push
lret
ss
dec
xchg
dec
add
shlb
aaa
inc
sbb
push
pop
fldcw
cs
pop
arpl
cmp
es
jns
flds
add
lds
and
add
sub
push
paddsw
adc
lret
pop
sti
or
and
or
fdivr
or
add
dec
adc
jns
test
test
lcall
cmpsl
mov
cmp
lea
inc
in
mov
popa
int
lret
popf
jne
mov
mov
rol
jge
in
out
shll
mov
dec
shlb
addl
pop
leave
movsl
xchg
scas
lret
mov
mov
aas
int3
xchg
aad
lret
les
adc
popa
mov
mov
leave
add
repz
and
cld
adc
in
or
sbb
clc
sbb
pop
dec
adc
or
jmp
inc
push
dec
cmpsl
push
xor
lret
push
loopne
or
or
add
adc
jg
outsl
frstpm(287
incb
add
add
mov
add
popa
mov
lock
jns
lcall
jae
inc
adc
xor
pop
sub
std
or
cld
sub
cli
repnz
and
sub
inc
push
cmp
push
push
push
cmc
cmp
inc
sbb
add
add
cmp
push
push
ds
adcl
add
add
add
aad
lods
sbb
fwait
cmpsl
fcoms
jmp
sub
add
cmpsl
int
xchg
xchg
pushf
cmc
je
lcall
mov
out
add
std
add
out
add
inc
gs
sbb
incl
adc
add
xchg
mov
lret
mov
xchg
add
adc
push
push
iret
and
add
out
cmp
sti
insl
xchg
add
adc
mov
adc
aad
inc
cmp
dec
popf
add
adc
add
adc
iret
jecxz
test
fldcw
repnz
int
test
gs
adcl
mov
mov
movsb
adc
add
ja
add
adc
mov
into
mov
xchg
mov
test
stos
mov
cwtl
nop
cmp
out
nop
mov
jecxz
stos
mov
xchg
xchg
mov
inc
add
add
add
add
add
add
add
add
in
push
add
add
jp
cld
or
loope
roll
fs
push
movaps
cmp
mov
add
jmp
cmp
in
add
ret
lret
popa
adc
das
mov
dec
sbb
mov
jmp
mov
jnp
stc
jbe
xchg
out
jl
aad
adcl
push
push
loope
add
xchg
pop
mov
add
add
rorb
inc
ret
dec
mov
nop
aad
jmp
inc
je
xor
mov
mov
adc
fsts
test
mov
int3
nop
inc
inc
add
xlat
add
jb
or
cmp
in
fmull
in
cmp
inc
add
in
mov
nop
mov
add
jno
cmp
insl
mov
in
gs
les
or
add
add
ss
dec
in
mov
test
inc
test
mov
les
fstps
adc
add
fadds
adc
add
fcompl
loope
int3
xchg
adc
outsl
add
xchg
stos
push
sbb
add
outsb
lcall
push
or
int3
addb
mov
mov
add
pop
adc
fidivrs
mov
xor
mov
mov
call
test
add
lcall
test
insl
push
fsub
jle
dec
inc
gs
je
add
cmc
mov
test
insb
popa
or
fistps
mov
mov
aad
cmc
cwtl
push
cltd
clc
sub
add
sbb
out
push
jmp
pop
dec
imul
lea
outsb
loope
imul
jmp
mov
jmp
cwtl
call
or
mov
fisubrs
loopne
fisubrs
sbb
adc
add
add
add
xchg
cmpsl
cmp
add
or
lock
lcall
jmp
adc
lea
mov
adc
test
or
sahf
xor
sbb
mov
sub
dec
lock
lcall
and
mov
sub
mov
js
add
icebp
push
test
add
mov
lcall
mov
fimuls
jge
sbb
xchg
or
push
ljmp
or
push
dec
aad
push
mov
in
js
add
jno
or
add
add
add
add
mov
mov
mov
adc
pop
mov
add
aas
add
xor
test
std
jne
mov
pushl
dec
arpl
dec
lea
xchg
jmp
aam
lea
add
push
aam
pop
or
dec
in
adcl
loop
xchg
movsl
pop
xchg
lods
ljmp
push
mov
ret
jae
dec
or
sbb
hlt
xchg
add
add
adc
mov
mov
inc
add
ljmp
pop
daa
sbb
xchg
out
inc
inc
dec
push
enter
mov
gs
jae
rcll
cwtl
lods
xchg
sbb
cmpsb
push
adc
dec
jne
imul
push
push
xor
pop
add
add
mov
add
cmp
cmp
mov
sbb
add
cmp
xor
repnz
leave
pop
scas
push
adc
nop
out
push
xor
or
mov
sub
fwait
aas
icebp
xor
rcrl
adc
xor
in
ret
adc
jmp
fstpl
mov
fldt
dec
mov
add
xchg
mov
mov
add
push
arpl
or
dec
or
jmp
sbbl
fs
or
into
scas
xlat
fcos
in
jl
ljmp
push
loope
sub
test
out
mov
es
push
sbb
nop
pop
push
inc
out
mov
fxam
or
jmp
add
daa
dec
out
mov
add
lret
test
notb
or
stc
and
push
add
out
xchg
std
incl
int
inc
jge
ljmp
add
push
mov
mov
jmp
std
jae
sti
jmp
paddsb
ljmp
out
mov
add
dec
call
sbb
sti
add
ja
std
jae
mov
call
push
clc
inc
daa
clc
add
fcmovb
sbb
add
cmp
cmp
int3
add
je
and
dec
or
movsl
fadds
cwtl
popf
into
ljmp
fnstcw
pop
push
setae
fsin
sahf
push
std
adc
mov
sarl
std
ret
roll
and
adc
cs
add
cmp
jo
xor
add
lcall
and
and
aam
mov
sbb
adc
faddl
push
and
sbb
nop
mull
mov
add
adc
jmp
lock
aaa
mov
out
in
xor
xor
pop
jge
add
add
add
inc
clc
add
jg
add
add
fsubr
mov
xor
cmp
cli
inc
adc
jnp
xlat
call
inc
cmp
popf
jg
dec
sub
les
and
jle
dec
add
roll
loop
inc
pop
add
mov
cmc
or
push
dec
fs
sti
dec
cs
add
pop
xchg
je
test
je
imul
cltd
add
mov
dec
jmp
iret
xchg
jae
lea
add
adc
cmp
add
int3
out
push
add
jb
xor
popa
add
adc
inc
push
add
out
call
adc
inc
pop
neg
insl
inc
push
sbb
sbb
mov
inc
jae
out
rolb
mov
out
pushl
call
test
inc
or
mov
add
lret
mov
adc
push
mov
or
or
pushl
mov
nop
mov
xchg
stc
push
push
or
pop
cmp
or
fsubr
jmp
arpl
add
divl
push
mov
adc
jnp
xchg
sbb
pop
pop
stos
add
popa
ss
cwtl
pushf
jmp
mov
lea
xor
jmp
sbb
scas
mov
add
shlb
movsb
sbb
add
pop
ds
cwtl
cmp
mov
and
cwtl
pop
mov
inc
ljmp
loope
xor
jmp
add
inc
imul
add
xchg
push
mov
cs
int
sbb
mov
enter
mov
adc
lcall
stc
pushf
inc
adc
flds
call
push
adc
in
and
add
test
sti
jno
sub
add
in
jb
cwtl
or
sti
rolb
lea
cmc
xor
mov
mov
add
mov
pop
fs
pop
sbb
add
in
fistl
lea
mov
jmp
ja
jbe
stos
dec
push
jmp
lods
mov
ret
mov
cmp
mov
fwait
cmp
adc
inc
sar
call
dec
fisubrl
cmp
or
add
in
push
cmp
add
add
push
lea
push
call
jae
push
mov
xchg
adcl
iret
add
lods
jae
aaa
jecxz
adc
mov
mov
in
movsb
mov
mov
js
cmpb
lret
mov
inc
pusha
or
add
xchg
ja
adc
inc
clc
cmp
add
cmp
adc
xchg
mov
pop
mov
or
lds
push
outsl
out
mov
xchg
cmpsl
pop
push
data16
adc
sbb
aad
xchg
inc
arpl
mov
mov
inc
clc
mov
add
dec
aas
add
je
add
and
push
pop
mov
fcompl
add
xchg
out
sar
add
rclb
popf
rcrl
adc
add
insl
jge
xchg
into
es
movl
out
lcall
pop
push
adc
add
xor
leave
aad
call
mov
xor
add
mov
sarb
jno
sbb
jb
adc
fs
pop
cmp
push
add
lds
push
dec
leave
ret
push
in
cmp
sarb
fldt
shlb
add
popa
push
sbb
in
into
add
pop
push
inc
add
adc
pop
rclb
mov
inc
loope
rorb
mov
push
pop
mov
adc
call
arpl
iret
pop
paddsb
mov
add
outsb
int
cmp
jp
icebp
jne
mov
into
jmp
push
stc
mov
iret
subl
xor
cmp
mov
jl
cmp
pop
xor
aas
adc
hlt
add
cld
mov
test
xchg
das
add
push
aad
push
add
in
orb
jmp
add
add
mov
cmp
add
std
int3
out
outsb
mov
mov
mov
pop
rol
add
jmp
jl
push
push
xorl
sbb
ret
sub
dec
call
xor
jb
sbb
out
test
rorl
test
cmpl
mov
mov
adc
add
cmp
or
dec
mov
xchg
pop
xlat
jmp
shll
mov
lds
jle
jl
push
xchg
dec
sbb
call
add
int3
rclb
push
fiaddl
cli
jmp
dec
aam
out
xchg
push
mov
add
xchg
sbb
adc
stc
in
jg
inc
add
add
sub
pop
pop
cmp
xor
loope
add
fmuls
int3
fidivrs
add
sub
jmp
sti
clc
add
add
clc
rcrl
lds
push
or
add
js
fcmovne
jae
add
adc
or
add
addb
adc
add
stc
icebp
and
cli
inc
add
orl
push
adc
insl
jg
lret
call
icebp
out
add
stos
add
mov
xchg
lret
jmp
xchg
pop
dec
lret
out
xor
and
add
mov
insl
add
push
divl
inc
pop
adc
cli
enter
shl
add
movsb
add
popa
into
out
jmp
add
xchg
call
adc
push
add
popa
dec
movb
xor
jmp
int
lret
push
cwtl
add
rcr
adc
mov
sbb
pop
inc
mov
jmp
je
push
lea
inc
incl
icebp
inc
lock
add
icebp
mov
inc
enter
sub
decl
add
jge
mov
or
sbb
add
insl
mov
lcall
leave
mov
jnp
add
testl
inc
pushl
loop
mov
jo
push
mov
repnz
test
sahf
cs
add
mov
aam
subb
adc
lds
lcall
mov
cmp
xchg
dec
adc
fdivs
jns
mov
add
and
add
or
cld
outsl
cmc
aas
adc
push
push
ret
mov
addb
gs
and
adc
shlb
adc
push
add
lahf
add
jg
dec
in
rorl
jle
std
decl
push
out
sbb
cs
xchg
add
mov
daa
jns
jne
adc
mov
or
add
enter
or
cmc
dec
enter
rcr
lock
repz
inc
into
add
fldenv
jo
add
push
sub
mov
adc
pop
jnp
add
call
inc
adc
mov
movb
jbe
test
fistps
clc
mov
jno
jmp
adc
add
rcll
shlb
lds
ss
sbb
mov
lahf
call
in
aas
jmp
push
push
and
cmpb
adc
inc
mov
push
ret
mov
stc
sbb
add
icebp
push
xchg
outsl
mov
fcompl
arpl
divb
pop
int
mov
jp
incb
pusha
push
movsb
add
add
mov
adc
out
lea
movsl
add
rclb
mov
add
mov
mov
ret
movsl
inc
jmp
adc
jg
jl
add
mov
add
idiv
jmp
mov
ds
xor
adc
and
cmp
in
inc
add
cmp
push
incl
add
add
and
push
in
mov
add
add
out
xlat
fisubl
das
fadds
push
repnz
and
xlat
add
mov
push
aas
and
popa
jg
jne
add
add
cwtl
xchg
push
adc
fwait
push
sbb
xchg
mov
add
cwtl
fwait
push
adc
or
inc
add
fists
fistl
aad
adc
imul
or
addr16
rorb
cwtl
js
cmc
jnp
in
pop
cmc
adc
in
enter
and
jmp
jl
add
mov
sub
add
add
push
mov
mov
rclb
cmp
inc
sub
jmp
mov
adc
lcall
lret
imul
add
roll
jmp
jp
fxch
lds
insb
lds
jmp
xor
mov
mov
inc
jmp
testl
add
jmp
adc
je
decl
jno
daa
fnstcw
cwtl
xlat
ret
xor
call
xchg
xchg
jbe
outsb
mov
popa
adc
add
sbb
jmp
sbb
jae
sbb
incb
jnp
add
push
cmc
mov
fdivrp
cmp
push
sbb
or
add
loopne
call
testb
in
sbb
push
gs
dec
inc
and
or
jbe
mov
adc
inc
mov
clc
mov
and
les
rcrl
test
decl
insl
mov
xchg
add
add
ret
dec
pop
jl
cmpsb
jmp
into
shl
lods
add
add
mov
imulb
cmp
setne
test
and
std
ljmp
clc
inc
int
adc
xchg
jmp
out
sarb
ja
jns
add
pusha
pop
ja
and
jo
cmp
sub
adc
fcmove
outsl
lahf
adc
fmuls
fstpt
add
lret
jle
mov
les
dec
hlt
inc
pop
or
push
push
std
xchg
add
jae
fdivl
jns
sar
jle
cmpsl
push
imul
je
data16
xor
add
adc
call
ficompl
add
pusha
cmc
xor
or
dec
add
pop
sub
xor
neg
imul
or
push
in
push
xlat
imul
test
jae
in
push
push
mov
inc
pop
bound
stos
push
xchg
mov
add
add
adc
push
mov
mov
push
sbb
adc
out
loopne
add
adc
sbb
rol
jg
pop
add
aad
sub
add
jmp
lret
add
mov
sub
adc
icebp
rorl
mov
push
push
mov
or
xor
sub
ret
xchg
out
adc
add
jo
scas
aas
pop
ret
push
push
jb
cmpsl
and
adc
mov
sbb
fs
xor
mov
add
push
addb
mov
xlat
mov
mov
xchg
adc
stos
ljmp
jns
push
add
add
jno
cld
addl
mov
je
cmp
add
or
add
lods
jb
test
add
cmp
call
add
add
std
push
pop
push
push
ljmp
adcb
je
adc
inc
add
mov
or
test
push
and
dec
push
dec
in
or
adc
pop
inc
adc
xchg
mov
test
cmp
aad
add
cmpsl
add
mov
push
jne
nop
ljmp
sub
fisubs
or
popl
outsl
inc
or
test
xchg
adc
test
adc
cmovb
scas
enter
sar
cmpsl
lea
push
push
push
dec
adc
xchg
mov
inc
mov
test
adc
inc
jmp
enter
cmp
add
add
push
mov
mov
sub
inc
icebp
push
xchg
sar
xchg
xchg
mov
xchg
ds
add
adc
add
aam
mov
sbb
push
rcll
stc
pop
mov
adc
push
add
scas
xor
push
sub
call
sub
push
add
jl
out
cmp
out
repnz
stos
push
add
push
push
sbb
xor
and
pop
cmpsb
dec
or
cmp
inc
push
push
cli
adc
xchg
mov
mov
push
gs
xlat
fs
or
push
adc
add
adc
inc
stc
ud0
add
adc
add
add
je
cmc
dec
cld
push
repz
or
jp
or
inc
cld
lcall
adc
sub
inc
cld
mov
inc
clc
mov
jl
dec
xor
ss
stc
mov
enter
add
cmpb
arpl
add
push
push
fisttpll
push
inc
mov
leave
or
out
or
nop
add
sbb
inc
mov
adc
adc
inc
add
and
mul
cld
popa
add
inc
call
rorl
jge
jmp
or
push
xlat
push
jmp
mov
push
mov
test
mov
mov
add
push
and
decl
test
mov
rorb
adc
in
mov
clc
sbb
adc
mov
in
and
add
cmp
popl
mov
mov
or
jmp
mov
mov
rolb
out
imul
add
out
mov
lods
mov
dec
xor
push
inc
adc
roll
insb
ret
ret
inc
and
sub
add
mov
mov
jmp
mov
push
add
push
testb
push
push
add
inc
mov
in
stos
insl
call
pop
push
stos
or
dec
add
sub
inc
dec
push
data16
aam
mov
test
inc
inc
xor
lea
imul
stos
mov
stc
xchg
sub
and
loopne
mov
push
lcall
bound
in
mov
test
pop
sub
add
lret
sub
roll
cmp
pop
cmovle
shl
dec
mov
and
mov
pop
adc
clc
cld
mov
cmpb
pop
in
je
add
aas
jnp
test
add
sbb
adc
push
aas
mov
mov
or
cmp
cmpsb
push
lea
dec
push
into
jp
add
in
mov
ret
jae
mov
or
data16
add
add
nop
inc
add
push
js
clc
mov
std
mov
dec
push
leave
ret
and
sub
cld
add
adc
mov
aad
add
aas
cld
popa
add
repz
or
jo
inc
xchg
aam
jmp
push
inc
adc
mov
inc
jne
xor
add
xor
int3
or
leave
mov
sbb
roll
mov
test
decb
mov
pop
mov
test
mov
add
data16
rorl
dec
mov
sbb
mov
jno
push
add
xchg
cmp
adc
icebp
mov
div
sub
jne
test
cs
stos
mov
shr
cs
jb
lea
sub
pop
pop
sub
mov
cld
popa
sarb
sahf
stos
add
fs
jmp
pop
pop
ret
mov
addl
push
das
fnsave
adc
push
lds
je
pop
mov
jmp
adc
sub
adc
adc
push
mov
mov
dec
stos
adc
mov
add
push
and
adc
mov
clc
mov
sub
imul
add
mov
mov
cld
mov
mov
add
sti
mov
rclb
push
mov
jnp
or
mov
pusha
fnstsw
add
add
in
js
in
jo
push
push
or
add
pop
cld
jle
cmp
add
adc
jb
in
cld
push
add
adc
mov
imul
jge
mov
imul
movsl
ja
je
dec
pop
pop
add
add
popf
xchg
push
mov
or
lcall
add
rolb
gs
add
pop
out
jg
call
aas
clc
inc
sbb
inc
arpl
or
adc
les
push
lods
and
add
mov
mov
pop
push
test
mov
int
aam
push
push
xchg
push
incl
mov
xchg
inc
add
pop
aas
adc
mov
ljmp
add
push
pop
push
leave
push
movsb
add
xchg
mov
or
je
mov
fnsave
sbb
roll
call
add
sub
pop
cld
adc
jmp
call
xchg
mov
sub
cmp
push
je
xchg
cmc
cs
in
sub
sbb
xchg
mov
inc
adc
dec
lcall
lock
clc
stos
pop
add
push
mov
dec
hlt
add
add
mov
insl
dec
idivl
adc
push
pop
jae
fiaddl
lret
push
insl
popf
mov
jmp
into
jnp
shll
cli
inc
adc
adc
jae
adc
test
add
sub
jnp
fldcw
adc
fprem1
sub
je
sbb
add
ja
out
cld
in
inc
inc
add
clc
add
frstor
mov
push
pop
inc
fwait
lahf
fistl
enter
jae
xchg
jo
add
lds
add
add
add
add
jmp
push
push
iret
call
adc
push
sbb
cmpl
mull
call
add
scas
sub
sbb
adc
stc
push
xorb
cld
test
add
das
jmp
add
js
mov
leave
sub
in
add
push
push
xor
mov
ds
push
rcrl
add
lahf
cmc
inc
add
rolb
mov
mov
add
jmp
push
push
mov
loopne
int3
sahf
cwtl
add
sahf
cwtl
add
cltd
push
leave
shlb
or
test
sbb
call
sbb
out
xlat
fildl
add
int
mov
fists
fsubs
pop
add
adc
scas
pop
and
jae
add
inc
test
mov
inc
jmp
add
add
lods
fcmovne
add
sbb
add
mov
add
inc
adc
xchg
push
std
adc
add
sarb
sub
pop
into
adc
ret
pop
test
call
adc
jnp
push
ret
in
dec
test
imul
adc
add
and
enter
lahf
mov
add
jmp
push
insl
jae
xchg
in
daa
int
add
pop
mov
stos
adc
push
out
int
sub
xor
add
imul
subb
adc
scas
lods
out
imul
pop
add
dec
std
dec
iret
movsb
xor
add
jbe
lds
clc
adc
fsubl
lods
je
mov
sbb
rolb
andl
bound
js
pop
leave
sub
add
pusha
and
cmp
add
push
lea
mov
cmp
lea
dec
lcall
lea
jmp
pop
andl
adc
push
push
nop
add
add
add
add
cwtl
es
mov
js
jne
addb
dec
lea
dec
in
cwtl
and
fsubl
and
cld
pop
add
add
int
sbb
mov
ss
jne
pop
adc
mov
mov
out
mov
pop
dec
gs
adc
out
lcall
mov
and
add
pop
mov
fsub
add
cwtl
push
call
out
adc
out
stc
dec
jmp
and
and
jae
das
cmp
das
aad
adc
in
test
lods
add
xor
jl
adc
jmp
cwtl
insb
call
rcrl
ret
mov
dec
sub
add
dec
push
jb
loope
insb
inc
cmp
popf
push
lods
das
test
cmp
jle
scas
adc
cmp
jmp
push
jmp
out
test
fdivrs
int3
repz
jmp
inc
adc
cmp
xor
icebp
jle
push
add
add
stos
test
jl
sub
cmp
or
dec
push
add
mov
pop
incl
pop
out
cli
inc
mov
fiadds
adc
jne
pop
pop
stc
out
cmp
add
and
jne
add
pop
push
test
sti
fisubrs
inc
or
int3
sti
mov
add
dec
jge
movsb
jp
dec
xchg
add
xor
xchg
das
decl
mov
repnz
mov
decl
add
push
xchg
test
pop
std
ljmp
add
ret
jg
pop
leave
ljmp
push
popf
inc
cld
push
cmp
loopne
pop
std
mov
cmp
cld
mov
add
cli
cmp
iret
pop
jge
mov
dec
push
and
int
or
add
rclb
jl
inc
orb
stos
mov
call
inc
pop
dec
leave
push
fs
xchg
cmp
add
adc
mov
xchg
pop
out
mov
cmc
leave
lcall
lea
lea
add
lcall
stos
int3
dec
mov
mov
add
adc
add
out
lods
or
push
cwtl
add
pop
dec
mov
or
sub
add
add
push
aaa
push
mov
in
sbb
jmp
add
jge
add
add
por
mov
adc
movsl
sti
mov
inc
jmp
add
add
inc
test
add
fcoml
add
jbe
imul
jb
cmpsb
pop
aas
adcl
ret
scas
cmpsl
arpl
adc
insb
jle
cmpsl
aad
pop
je
pop
jmp
lds
mov
jmp
mov
push
mov
movsl
jmp
adc
mov
add
clc
insb
xlat
nop
push
pop
in
add
push
add
jno
cmpsb
mov
push
call
insb
xlat
insl
cld
ss
call
jae
movsl
call
fisubrl
in
mov
jb
pop
add
push
popf
inc
adc
getsec
xorb
cmp
inc
pop
mov
test
add
es
mov
add
mov
test
fsubrs
xorb
xor
incl
jge
jo
inc
add
xchg
adc
xlat
pop
mov
rcr
scas
add
inc
nop
js
add
add
insl
nop
dec
push
nop
std
mov
inc
add
add
jge
cld
push
stc
ficoml
mov
decl
dec
popa
rcll
push
aas
push
clc
incb
and
pop
push
push
xchg
jo
scas
mov
mov
cltd
and
popf
sub
sti
lds
out
xor
jbe
adc
rcrl
lcall
test
mov
add
sub
cld
loope
mov
insb
sub
movsl
mov
adc
jae
cs
cld
jnp
sbb
lcall
add
sti
ds
movsb
out
add
mov
fcoml
add
cmpb
adc
xchg
in
rclb
call
mov
movsb
push
call
push
add
jmp
jbe
push
jns
push
movsl
addr16
addr16
sbb
roll
roll
adc
imul
pop
jbe
or
pop
shrl
pop
add
cwtl
out
add
add
push
add
das
stc
out
in
mov
pop
in
mov
jmp
push
add
ds
out
fcmovb
jecxz
jmp
add
aas
insl
jecxz
jne
out
cmp
fs
adc
jmp
xchg
jae
lods
mov
sti
push
lods
cltd
out
adc
jbe
jb
cltd
pop
adc
subl
in
imul
imul
and
lcall
cmp
ljmp
cmp
call
adc
clc
xchg
add
mov
aam
test
jg
mov
aad
mov
test
push
lea
aad
cltd
dec
add
std
push
inc
clc
mov
pushl
jno
mov
push
mov
inc
or
clc
je
xlat
out
xor
lea
add
divl
call
mov
incl
add
enter
inc
adc
add
sub
outsl
mov
clc
cmp
rol
xchg
pushl
jl
mov
cmp
mov
mov
pop
stc
jle
mov
cld
or
add
add
stos
add
shrl
cld
fidivrl
ljmp
pushf
test
gs
mov
push
lahf
jno
sbb
call
lret
out
sahf
push
pop
jnp
lods
inc
rcrb
jbe
sub
inc
lcall
jmp
jmp
sbb
push
adc
mov
add
sbb
xchg
lds
mov
data16
popa
xchg
xchg
xchg
sar
test
stos
mov
test
jo,pn
mov
adc
push
mov
sub
inc
push
add
fildl
add
arpl
pop
push
rcrl
call
mov
dec
shl
call
add
pushf
ret
add
shr
xor
mov
adc
sbb
mov
jmp
test
call
fs
cld
outsb
mov
or
adc
lea
add
bound
call
ljmp
inc
mov
inc
cmp
add
cmp
add
pop
cld
ret
add
and
xorl
push
gs
sti
jl
stos
cld
add
mov
cmpsb
xor
mov
add
add
aam
leave
cmp
nop
push
push
cmpsl
mov
pushl
mov
jl
add
cmc
dec
clc
push
adc
lahf
dec
lcall
fildl
add
xchg
add
lcall
test
add
scas
adc
popf
mov
pop
clc
pushf
in
pop
push
fisubrl
add
mov
fnstenv
add
pushl
bound
lcall
iret
int3
rcll
or
cmpsl
sarl
add
push
call
push
push
add
sarl
addl
cwtl
call
fidivrl
xor
out
adc
mov
ret
pop
test
add
add
sbb
arpl
xor
ficomps
bound
add
add
test
stc
xchg
add
jecxz
imul
aam
addl
xchg
imul
adc
jge
adc
test
cld
jmp
imulb
add
or
push
sub
stos
adc
ja
inc
mov
cmp
cltd
adc
add
ljmp
or
out
or
adc
rolb
add
sbb
adc
call
sti
mov
mov
xchg
shrb
lret
pushf
jge
out
sub
dec
add
int
pop
idivb
sbb
fwait
mov
int
add
push
iret
xchg
dec
adc
mov
negl
shr
popf
sbbb
add
jl
lea
insb
ret
add
jne
adc
ret
jns
inc
clc
add
dec
inc
add
xor
jnp
or
int
add
add
push
or
add
push
cmp
icebp
add
xor
stos
xchg
jno
stos
adc
or
pop
lods
xchg
out
add
insb
cltd
incb
lret
cmpb
or
lcall
xlat
imulb
je
push
stos
test
adc
xor
out
jns
ret
xchg
mov
inc
xor
stos
out
mov
test
cltd
incb
xor
hlt
add
adc
push
add
add
adc
xchg
call
stos
clc
mov
and
lds
mov
sub
cmpsl
xchg
movsb
mov
xor
test
cwtl
aaa
xchg
stc
mov
lds
pushf
das
xchg
aad
scas
roll
call
scas
inc
test
mov
fsubrl
add
lds
loop
aad
push
popa
cmp
add
push
sub
add
add
repnz
jmp
mov
xor
ret
pop
daa
cmp
shl
test
mov
mov
data16
mov
dec
jge
repnz
test
mov
inc
std
xchg
je
jge
xrelease
dec
jb
jle
add
xchg
mov
add
add
push
int
call
lods
popf
pushf
fisubrl
or
add
ret
cld
xchg
js
push
inc
aas
call
lods
add
mov
fildl
add
add
or
js
in
shl
jge
add
out
out
test
ljmp
cmpl
lea
add
mov
push
jne
mov
push
add
add
add
icebp
push
xor
addr16
add
add
call
ret
adc
xchg
je
movsbl
test
in
xchg
mov
arpl
test
add
adc
mov
add
add
outsl
xchg
ret
xchg
sbb
mov
mov
add
mov
mov
mov
cli
adc
add
lahf
sub
outsb
pop
adc
cwtl
fs
test
sub
inc
adc
or
mov
sti
lods
add
call
cwtl
mov
sbb
add
jle
xchg
xchg
xchg
popf
adc
xchg
jg
jl
test
dec
jg
lcall
outsb
cmpsl
sub
xor
call
or
adc
pop
xchg
or
add
test
push
sub
jno
and
adc
add
jl
xchg
out
xchg
jmp
mov
test
mov
xchg
shlb
adc
insl
pushf
xchg
xor
test
push
bound
jmp
loopne
mov
into
lock
jmp
mov
add
test
or
test
dec
inc
jle
or
cltd
lcall
outsb
xchg
xchg
add
add
adc
popf
stc
cmpsb
adc
add
rorb
mov
gs
call
mov
and
mov
insl
jae
adc
jmp
mov
pushf
xor
test
mov
ret
jg
mov
je
popl
hlt
call
sub
ljmp
iret
push
push
fst
notl
add
cmp
repnz
insb
mov
out
incb
mov
jb
mov
clc
push
mov
mov
int3
div
jne
jae
adc
fdiv
cmpb
lea
xor
add
in
aas
adc
enter
pop
or
sub
ljmp
fwait
mov
cltd
add
cmp
add
aad
jmp
add
lcall
push
es
add
lcall
adc
lcall
and
ret
cwtl
add
xchg
xchg
adc
rcrb
das
dec
sbb
adc
lds
imul
xor
jle
xor
rol
fldl
add
mov
mov
xchg
mov
push
add
jl
jle
cwtl
push
loope
addr16
mov
call
dec
jns
jmp
xlat
pop
cmpl
jbe
sbb
call
pop
or
add
add
add
loop
test
pop
mov
push
lcall
add
add
jp
insb
mov
cld
testb
sar
fiadds
push
mov
inc
mov
sbb
cltd
push
or
mov
lret
repnz
gs
pop
mov
call
arpl
stc
xchg
xor
jno
mov
jae
stc
ljmp
add
add
add
js
out
mov
rcr
movsb
add
push
inc
mov
call
imul
and
add
inc
add
add
xorb
mov
fistps
ret
jnp
cmp
push
fmul
ret
push
mov
cld
push
adc
ljmp
cmpsl
lock
jo
lock
in
addr16
repz
cld
mov
sub
stc
fildll
rclb
lods
add
les
adc
mov
adc
ljmp
add
rol
xor
shll
xor
sub
es
mov
test
pop
mov
lret
int3
xchg
cmc
xchg
dec
sbb
clc
xor
jno
or
add
mov
add
sub
push
add
cltd
lcall
mov
adc
adc
roll
inc
loope
in
enter
cmc
add
sbb
mov
xchg
shr
int
fnsave
jg
popl
cwtl
clc
inc
ljmp
sub
jg
out
sub
add
add
shl
leave
cmp
adc
adc
inc
in
sbb
jmp
inc
repnz
in
add
pop
rcll
out
push
popa
inc
or
cmc
mov
repz
clc
lcall
std
mov
adc
mov
inc
xor
repnz
jae
test
inc
jo
cld
sbbl
xchg
aaa
fadds
add
lods
inc
jo
std
xor
rorl
aas
jmp
lea
call
testb
fmul
lock
jmp
adc
xor
sbb
orb
adc
je
decl
and
call
sub
push
cmpsb
sub
mov
ud0
add
add
mov
stc
mov
out
incl
add
clc
icebp
add
call
jge
add
int
push
iret
call
adc
ss
hlt
or
orl
inc
hlt
or
arpl
incb
sub
add
add
add
jmp
or
dec
out
pop
jl
mov
je
cmc
jae
add
mov
cmp
adc
adc
cmp
xchg
filds
lea
mov
add
jmp
mov
xchg
inc
add
push
push
mov
mov
jg
adc
fistpll
pushf
sub
lcall
ljmp
mov
pop
sub
mov
sbb
orl
pop
cli
or
add
add
sub
cld
mov
incl
lock
adc
rorb
xchg
adc
rolb
jmp
ret
imul
test
ds
ret
out
aas
mov
stos
xchg
fidivs
mov
mov
mov
adc
cltd
push
fiadds
mov
ret
push
out
add
add
dec
push
je
inc
jmp
rolb
jge
mov
xchg
jg
jnp
ret
aam
scas
add
add
cltd
add
sahf
xchg
lea
test
popf
fldenv
xchg
fwait
xchg
mov
insb
rorl
add
add
das
adc
add
je
pop
pop
xchg
jae
add
loopne
clc
adc
xchg
les
push
add
ficoms
jne
cmp
mov
call
cld
sbb
add
push
ss
push
adc
add
in
dec
cli
push
add
sbb
rorl
int
lods
lret
cld
decl
mov
add
sbb
add
jnp
cmp
push
push
mov
or
add
add
add
adc
call
jno
testl
call
push
inc
add
lock
xor
push
add
add
call
enter
push
inc
mov
adc
fwait
das
lods
mov
xchg
int3
fimull
adc
add
cwtl
add
xchg
in
dec
add
add
push
mov
lcall
xchg
add
mov
ss
es
sahf
daa
adc
mov
add
sub
lcall
jg
sbb
dec
ljmp
xor
pop
mov
push
and
jnp
add
cmp
call
dec
data16
inc
adc
pop
inc
or
je
mov
xchg
mov
xor
outsb
pop
iret
add
js
orl
addl
add
pushf
add
jge
clc
pop
adc
jbe
inc
ret
sub
add
shl
add
jns
cli
add
dec
xor
pop
xor
pop
sub
jmp
xchg
xor
daa
mov
jmp
adc
cwtl
lcall
clc
cmpb
ds
cmpsl
jge
xlat
popl
inc
jp
lahf
jmp
inc
sbb
scas
inc
cltd
sbb
fnstenv
push
adc
add
in
dec
fcmovbe
add
add
add
cmpsb
dec
pop
push
fwait
add
adc
mov
mull
pop
xor
call
ljmp
jmp
lcall
fs
repz
std
jmp
push
incl
out
and
decl
inc
test
rcl
add
test
cmp
inc
add
inc
test
fistl
incl
add
mov
lea
aam
mov
pop
cmp
lds
add
ljmp
or
out
mov
sub
jg
xor
or
mull
or
sbb
int
ret
and
mov
add
cwtl
add
addr16
in
addl
mov
inc
ja
add
mov
sbb
or
add
ljmp
movsb
pop
sbb
fimull
shrb
shl
mov
add
sub
fst
add
xchg
aam
dec
mov
sti
sbb
dec
and
mov
lcall
in
je
in
jecxz
das
test
add
rolb
add
adcb
or
cmp
pop
roll
fwait
mov
jmp
cltd
icebp
ds
jns
or
mov
jb
mov
movsb
jle
or
iret
add
insb
and
add
mov
jge
xchg
mov
cmpl
add
nop
aad
mov
add
add
imul
outsb
add
jne
jg
call
or
adc
ds
repz
sar
sub
mov
xchg
mov
enter
push
jb
sub
push
or
cmp
test
call
and
imul
imul
add
add
test
nop
cmp
add
xchg
cmp
xchg
dec
jg
fstpl
xor
push
nop
jg
jmp
xchg
jle
add
pushl
mov
call
loope
incl
mov
jne
xchg
inc
mov
jnp
push
fisttpll
inc
test
not
mov
sbb
push
cld
ret
rol
popf
add
add
lea
sbb
std
call
jecxz
testb
sub
add
add
adc
jmp
xor
xorl
add
jecxz
imul
popa
add
push
divb
xor
cmc
xor
pop
sti
ficoms
mov
movsb
jp
add
lcall
mov
in
je
cmc
test
movsb
pop
jg
test
inc
xor
mov
pop
mov
std
pop
jle
or
int3
jmp
push
rorl
mov
adc
mov
bound
pop
dec
jnp
push
cmp
add
in
jecxz
out
jg
cmp
cmc
mov
or
jnp
jnp
add
push
adc
add
incb
out
loop
sub
jle
jl
push
dec
mov
jmp
imul
cmc
jg
sub
add
add
adc
add
pop
mov
pop
into
jp
insb
rcrb
fmulp
dec
stos
or
popa
jo
gs
test
sub
sti
or
sar
push
add
pop
xchg
ficoms
xchg
out
xchg
aaa
add
adc
adc
jp
icebp
jp
es
sbb
rclb
add
jmp
sarb
xchg
pop
das
fistl
sbb
add
mov
rcrb
or
mov
rcr
dec
cltd
jp
adc
jecxz
je
jnp
call
add
adc
andb
mov
sahf
mov
lret
std
add
sbb
sub
decl
decl
test
xor
sub
out
sbb
adc
daa
xchg
call
jns
inc
clc
jne
cmp
jmp
das
leave
sbbl
setne
add
mov
out
sar
push
add
xchg
cmp
jae
lea
sbb
mov
xor
decl
js
mov
push
mov
push
pop
je
cmc
and
pop
insb
xchg
xchg
push
jl
lcall
sbb
pop
sbb
shlb
cld
sar
add
adc
and
pop
fisubs
add
add
xchg
adc
and
push
pushf
add
ud0
or
stos
sub
mov
lret
xchg
mov
iret
add
pushf
and
sbb
add
call
bound
pop
loope
call
add
add
add
xchg
cmp
cmp
push
inc
testb
add
mov
fcompl
push
inc
in
add
cmp
jmp
adc
mov
push
jmp
rcrb
pop
add
or
mul
subl
in
or
jnp
add
aaa
add
xchg
inc
ds
fidivs
cmp
imul
cltd
mov
or
inc
fiaddl
add
push
push
add
or
je
cwtl
mov
call
push
or
rcrl
jp
out
jp
out
fs
rorb
push
inc
lret
rolb
jmp
dec
testl
jmp
js
cli
cmp
cmpsb
adc
jl
jecxz
ja
jb
or
sub
mov
roll
or
add
testb
lret
jle
jo
mov
jecxz
sbb
outsl
jmp
and
xor
add
stos
pusha
cli
add
fldl
add
mov
push
push
std
adc
jae
or
loop
mov
mov
addb
add
xchg
xchg
ret
pushl
add
ljmp
xchg
add
mov
jge
or
inc
mov
adc
pop
notl
push
mov
push
rorl
mov
clc
mov
xor
adc
cmp
xchg
inc
sub
lret
add
insb
push
adc
daa
jns
in
imul
or
push
adc
add
jl
add
clc
testb
adc
inc
push
adc
adc
inc
cmc
jae
mov
mov
jmp
sbb
test
sahf
add
xchg
mov
add
add
jmp
jno
outsb
sub
adc
out
testl
adc
push
mov
jecxz
rcrb
jmp
add
add
repnz
mov
sub
add
jmp
ficomps
mov
or
adc
jmp
add
mov
js
mov
add
mov
jmp
in
call
xchg
int
fmuls
jl
je
inc
or
std
sbb
jmp
sbb
insl
or
pop
add
add
aas
xor
sar
pushl
lcall
sub
iret
push
xchg
mov
add
sahf
xchg
pop
add
push
imul
jp
notl
push
add
fwait
std
mov
pop
jmp
sub
rcrl
add
ljmp
add
lock
imul
dec
dec
ljmp
and
in
add
mov
fistl
pop
repnz
adc
cli
mov
inc
inc
jb
loopne
pop
xorl
push
arpl
jae
ljmp
cmpsl
in
pushl
inc
adc
setne
xchg
push
and
cmp
add
jno
call
mov
cli
out
or
jne
xchg
sub
pop
test
into
adc
jle
adc
shll
fistl
stos
push
faddl
sub
adc
jg
adc
or
add
repz
repz
out
jnp
add
jo
je
add
iret
sahf
cld
push
lret
mov
sub
add
lock
push
cmp
add
mov
sarl
add
popa
jl
jmp
std
je
jmp
in
je
mov
lods
adc
add
adc
bswap
lds
pop
push
sub
shrb
lock
enter
movb
add
adc
add
inc
xchg
mov
fwait
in
int3
or
std
cmc
lods
dec
add
sbb
xchg
mov
fsubrl
fldcw
daa
adc
push
push
es
outsl
adc
or
ljmp
sti
ljmp
iret
shl
mov
rcl
lahf
int3
add
stc
add
mov
inc
call
insb
pop
sbb
ljmp
mov
je
call
pop
outsl
adc
pop
sar
pop
cld
test
sbb
out
xor
add
ja
scas
cli
js
dec
fisubrs
add
inc
add
testb
inc
push
push
xor
xchg
mov
add
add
or
xchg
dec
mov
push
xchg
pop
pop
xor
dec
xchg
test
fcompl
mov
out
push
clc
jecxz
push
push
dec
xor
push
push
mov
dec
push
or
in
ljmp
add
mov
pop
pop
jno
add
leave
push
push
mov
sbb
scas
jge
test
push
add
cwtl
lods
es
push
dec
adc
jge
or
bound
in
aaa
add
fldl
push
xchg
add
dec
pop
adc
das
add
pop
add
or
add
pushf
adc
pop
or
adc
mov
stc
push
dec
and
and
subl
rcll
rolb
cmp
cmp
rcll
and
push
outsb
call
add
mov
lgdtl
test
clc
xor
xchg
jo
jp
daa
add
push
repnz
jnp
ret
cmp
sahf
jnp
sub
push
stc
push
test
sub
hlt
ss
fnstsw
mov
add
dec
std
push
std
jne
pop
mov
pop
mov
int3
daa
mov
andb
aad
push
movzwl
sub
xor
dec
lock
xchg
insb
jmp
pop
or
test
cmp
ret
negb
mov
push
cmc
call
push
rclb
pop
ds
jmp
adc
cld
add
adc
test
xchg
mov
in
std
fsubrp
aad
test
xor
jmp
adc
push
xorb
clc
cld
lcall
cmp
je
inc
mov
push
jmp
push
inc
add
push
push
jle
pop
inc
adc
inc
rorl
add
push
arpl
push
mov
push
push
andl
jae
add
ljmp
inc
ja
inc
test
push
fidivl
lret
cmc
std
jne
out
call
xor
cmp
and
psubsb
call
repz
xor
push
push
jmp
push
std
pushl
mov
rorb
pop
xlat
mov
jo
je
jmp
les
sbb
test
dec
add
push
dec
imul
insl
xchg
adc
cmpl
adc
inc
xor
inc
jnp
dec
inc
inc
or
mov
jmp
fisttps
inc
xlat
imul
or
cwtl
add
cld
jae
idivb
sti
mov
outsb
cmp
mov
and
faddl
aas
mov
push
add
add
add
xchg
jae
adc
imul
testl
push
inc
sub
mov
iret
sar
call
rcrb
notl
jbe
jns
imul
js
jnp
sub
and
push
insl
call
inc
scas
call
add
jbe
mov
jmp
and
in
js
add
pop
cld
popf
add
rcl
imul
xchg
mov
repnz
shr
jbe
jecxz
in
jbe
adcb
movl
in
jae
push
jl
data16
cmp
imull
push
jmp
and
call
adc
popf
mulb
lds
push
add
xlat
xor
push
mov
dec
jnp
scas
adc
call
push
test
pop
mov
adc
mov
js
call
push
cmp
bswap
pop
repnz
ret
cmp
or
pop
push
sbb
sbb
loopne
jnp
cs
shll
arpl
addl
or
add
and
adc
shrb
out
adc
arpl
add
aad
jne
fidivl
lods
ficoml
les
decb
push
and
lds
add
pop
add
or
push
add
imul
fisubrl
mov
push
imul
fsubrl
add
push
gs
call
xchg
cwtl
out
or
out
and
pop
add
push
add
inc
repz
or
fisubrl
cmp
imul
push
lcall
fldl
mov
lahf
sbb
pop
jg
add
cmp
dec
imul
aas
inc
adc
cmp
fwait
jo
jge
jl
lock
push
jp
mov
shr
inc
xor
aas
in
int3
adc
push
jno
das
das
xchg
push
fwait
dec
pop
clc
sti
adc
or
orb
add
shll
imul
add
pushf
cld
mov
out
cmpsl
in
add
mov
pop
adc
sub
insb
lret
adc
mov
jge
in
iret
jl
cmp
ret
sahf
addb
sbb
add
adc
mul
jp
out
inc
data16
jb
je
adc
repnz
test
cmp
add
sbb
xlat
sbb
adc
sarb
lret
adc
hlt
mov
inc
jmp
inc
cmp
fwait
loope
mov
and
loope
subb
fiadds
test
daa
sarb
add
push
mov
mov
and
mov
insb
jg
leave
mov
andb
fiadds
add
cmpsl
ja
lahf
adc
mov
add
dec
push
call
sti
and
rcll
fisttpl
fisttpll
stos
pop
ja
imul
iret
inc
cmp
rcr
call
add
cmp
sbb
jb
lock
inc
xor
enter
add
stos
mov
or
jae
adc
add
adc
pop
cmp
rorl
xchg
je
jmp
mov
or
testb
pop
int
int3
push
sub
push
xlat
decw
jns
and
bound
mov
ljmp
or
out
pop
lcall
frstor
call
sub
fs
aas
cmp
sbb
push
icebp
mov
mov
lock
out
push
push
sub
je
or
pop
lret
add
inc
add
add
pop
lcall
bound
jp
mov
add
sbb
xchg
lea
jg
add
add
fadds
mov
jbe
jns
jne
jnp
sub
out
iret
jne
int
or
adc
add
into
mov
inc
test
arpl
inc
subl
sbb
stos
mov
sub
jae
add
lea
mov
ja
repz
push
call
add
add
mov
jg
jl
jg
mov
lahf
fidivl
jmp
adc
mov
push
imul
leave
mov
enter
mov
jbe
xchg
push
pop
add
xchg
cmp
cmpb
or
pop
lcall
xlat
mov
push
add
lods
jbe
push
push
cmp
push
add
jmp
push
and
or
jmp
jl
test
or
jge
cmp
mov
sahf
add
insb
jg
std
jae
call
fstpt
inc
stc
mov
clc
mov
testl
inc
bound
inc
adc
sub
push
sub
xor
mov
std
jmp
inc
inc
addb
inc
mov
pushl
dec
cmp
cli
out
cli
std
push
decl
nop
movsl
mov
nop
or
cwtl
pop
adc
mov
cmp
adc
aas
adc
pop
mov
add
or
adc
aaa
popa
inc
imul
mov
popa
mov
add
inc
insl
or
and
mov
inc
int
adc
cs
pop
stos
mov
sub
add
jmp
mov
xchg
inc
add
dec
in
mov
and
xorb
adc
out
push
orb
or
sbb
in
xchg
inc
ljmp
gs
jb
ficomps
add
xchg
pop
vunpckhps
popa
xor
fsub
insl
and
pop
or
add
push
adc
add
pop
shlb
sti
cmp
add
mov
or
nop
push
outsl
add
adcb
push
add
inc
add
inc
rcr
and
add
sub
xchg
int3
imull
and
xor
test
pushf
add
rolb
push
addr16
mov
in
sti
out
icebp
mov
in
test
rcrl
decl
shr
scas
popf
notl
lea
call
push
pop
pop
add
sahf
mov
add
mov
stos
sbb
pop
hlt
popa
fwait
idivb
popf
or
xchg
dec
testb
lea
jne
decb
add
addl
je
xchg
test
or
or
adc
jbe
jmp
add
daa
jmp
mov
movb
xchg
std
adc
mov
or
xchg
add
out
cmp
test
add
cmpl
jbe
pop
jnp
mov
inc
xchg
push
pop
jmp
call
add
mov
adc
dec
mov
clc
mov
jmp
or
repz
in
adc
mov
negl
insl
or
lcall
add
add
nop
inc
pop
adc
xlat
repz
inc
ljmp
dec
ss
push
push
add
mov
fwait
pop
popa
rorb
xchg
leave
aam
mov
aad
adc
jg
out
call
adc
sarl
into
pop
call
add
add
ret
scas
jg
pop
sbb
add
pop
xchg
and
or
cmp
mov
dec
fs
add
das
pop
sub
cmpsl
xor
dec
push
outsb
imul
pop
arpl
imul
ficomps
cltd
cwtl
int
pusha
dec
push
mov
push
repnz
xor
push
test
adc
inc
fcoml
xchg
adc
aaa
in
es
sbb
inc
test
add
push
dec
test
jp
jb
push
xlat
loop
mov
movsl
sbb
sub
sub
mov
ljmp
xor
test
pop
in
andb
push
test
inc
or
test
adc
xor
sub
push
mov
adc
cmp
cmpl
jae
daa
je
sldt
outsl
repz
sbb
cmpb
imull
nop
cmp
cmp
jmp
lods
xchg
std
shll
inc
push
mov
jnp
push
das
pop
push
notl
mov
mov
xor
and
dec
xor
xor
jg
jle
add
sbb
cmpl
add
inc
cmp
mov
jmp
xor
add
push
push
sahf
test
mov
or
mov
jae
cmp
cmc
or
popa
jle
test
sbb
rcl
or
movsb
iret
adc
push
loopne
fdivs
or
add
sub
mov
mov
push
bound
jle
jmp
dec
sub
push
jns
lock
add
rorb
push
iret
sti
ret
adc
cmp
jmp
add
pop
in
adc
mov
jns
ret
ss
test
pop
into
dec
test
or
xchg
mov
pxor
add
sbb
negb
add
mov
push
fisttpl
push
repz
and
call
add
add
aas
in
adc
fnsave
xchg
int
pop
jns
call
mov
sahf
mov
jno
pushf
mov
je
popl
mov
sbb
fsubrp
mov
dec
push
aas
jge
cmp
jl
xor
push
xor
call
adc
call
pop
pop
das
dec
inc
push
jb
mov
add
add
push
cmpsb
add
lea
push
mov
dec
js
pop
int
push
loopne
call
mov
add
mov
imul
fxch
mov
jle
cld
adc
repz
out
test
cmp
jmp
mov
add
xor
mov
test
pop
add
jno
or
outsl
out
out
adc
add
xchg
out
add
xchg
orl
and
pop
arpl
clc
gs
and
xor
jmpw
add
rol
std
jmp
add
mov
std
adc
add
mov
imul
or
out
and
cmp
addb
pop
cmp
or
out
pop
lds
push
mov
push
adc
mov
out
add
push
inc
add
mov
xchg
test
fisttpll
sub
push
push
or
aaa
push
mov
out
mov
jae
mov
add
repz
xchg
add
jne
ljmp
add
push
add
push
cld
call
push
orl
mov
and
imul
add
sbb
mov
int
xchg
or
cmp
rorb
hlt
jmp
pop
enter
notb
test
or
rcl
push
iret
cmpsb
mov
mov
gs
mov
jmp
mov
add
add
or
pop
mov
jmp
push
call
int
dec
sbb
dec
decb
xchg
adcl
fsts
jl
jmp
pop
adc
mov
add
pop
call
inc
pop
mov
sbb
sbb
push
cmc
test
int
lahf
push
cli
jae
add
pop
mov
ljmp
jg
ljmp
les
add
aad
adc
arpl
add
mov
test
xor
cmp
pushf
mov
inc
test
jae
call
jge
or
pusha
clc
dec
adc
xorb
lods
mov
cmc
pop
cmp
add
cld
test
lods
std
inc
push
xchg
imul
pop
jge
or
rclb
lods
jle
add
mov
mov
add
std
mov
add
push
jmp
mov
js
inc
hlt
outsl
mov
clc
adc
mov
jl
dec
inc
cmc
dec
add
dec
jo
push
movsl
sbb
add
jbe
push
mov
push
mov
shrl
push
xchg
push
add
das
push
ret
mov
inc
xchg
std
ss
fstpl
aam
iret
shlb
adc
pop
add
add
xlat
cwtl
daa
in
ljmp
jl
aad
leave
orb
fucomip
inc
push
loop
out
add
jge
jmp
rclb
dec
movsl
push
add
das
icebp
mov
push
lahf
sarb
xchg
dec
sub
add
inc
mov
lock
call
pusha
shll
push
cmp
jle
clc
xchg
mov
aad
push
mov
add
jle
test
int3
out
rcrb
add
jmp
cld
test
pop
fmuls
stos
nop
or
add
mov
dec
es
add
add
shll
mov
push
fcoms
add
mov
mov
js
bound
pop
xor
xchg
pop
pop
addb
push
xchg
daa
sub
push
data16
cld
scas
lock
jmp
iret
incb
sbbl
dec
adc
aas
push
add
adc
mov
lods
iret
add
add
incb
sbb
mov
test
adc
push
add
xchg
cbtw
in
mov
push
inc
mov
loope
sti
scas
test
add
lods
push
inc
mov
les
add
jle
js
push
push
sub
jle
add
gs
inc
js
inc
hlt
push
les
add
in
lea
test
test
or
in
dec
jmp
xchg
hlt
mov
mov
cmp
aam
add
dec
aad
jnp
out
cwtl
sbb
pop
sqrtps
inc
mov
iret
adc
push
mov
dec
inc
loope
fucomi
push
xlat
pop
sub
add
push
addr16
add
mov
mov
jle
dec
sbb
repz
adc
inc
jae
inc
lods
repz
jnp
inc
aas
mov
mov
out
enter
inc
dec
sarb
mull
sub
dec
je
in
rorl
adc
ja
adc
fs
orb
dec
sahf
dec
gs
jge
shl
sub
aad
dec
add
sbb
mov
stc
test
call
fldenv
fiadds
ds
dec
fistpl
push
aam
dec
add
aad
dec
add
jbe
pop
mov
add
adc
or
pop
mov
add
ja
jp
inc
mov
push
mov
in
adc
pop
loop
subb
add
sbb
jns
mov
mov
fildl
dec
cmp
adc
add
dec
lcall
add
and
decb
push
jl
jge
dec
and
and
pushl
xor
push
add
in
andl
inc
jmp
mov
inc
jmp
adc
jl
add
xchg
dec
outsb
jmp
add
cmpsb
cmc
xchg
add
inc
add
and
xor
enter
std
mov
lock
roll
cmpb
sti
add
aam
dec
lcall
aas
xor
pop
xor
mov
add
inc
pop
pop
add
ret
stos
std
pop
mov
add
in
inc
add
mov
cmp
decb
sbb
push
cmp
xor
push
out
mov
jg
push
mov
push
dec
cmp
inc
cltd
aas
push
mov
push
jns
inc
inc
adc
jecxz
sbb
and
lock
adc
inc
je
fcomip
andl
add
adc
add
lret
shlb
mov
adc
sub
call
or
add
loop
fildl
lcall
add
repz
rcrb
add
pop
aas
sub
into
repnz
orb
xchg
inc
cmp
dec
pushf
inc
push
add
addr16
add
add
scas
popf
aaa
lods
mov
lea
add
test
dec
xlat
scas
jno
iret
xor
cmpsl
adc
mov
adc
repnz
mov
jmp
inc
push
sti
scas
jns
dec
adc
push
jl
sub
aad
icebp
test
and
iret
xor
xchg
and
idivl
enter
mov
add
adc
out
lret
inc
mov
sub
jno
imul
add
add
scas
mov
xchg
pop
adc
pop
int
shrl
cmpsb
ja
mov
inc
test
adc
aas
inc
lea
mov
add
aas
inc
dec
xchg
sarb
jmp
into
push
add
js
fsts
push
push
outsl
add
jmp
repnz
mov
add
ds
call
add
add
cmpsl
add
add
je
ret
inc
in
mov
xchg
mov
roll
xor
add
cmp
incb
faddp
shrl
mov
and
cmp
std
incl
mov
mov
repz
jne
les
ret
xor
pop
mov
out
test
add
mov
push
je
add
scas
inc
or
xor
call
adc
dec
lock
into
sbb
jno
push
cmp
dec
loop,pt
or
inc
gs
xchg
adc
push
test
jp
sbb
adc
nop
xchg
lcall
lock
jp
adc
pop
mov
jnp
cmc
push
push
add
or
das
add
aaa
loope
je
mov
testl
mov
push
inc
sbb
adc
dec
jbe
push
add
clc
pusha
arpl
jmp
into
pop
rolb
nop
push
testb
idivb
or
sar
ja
clc
lea
jmp
test
imul
jmp
add
or
mov
push
stc
out
cltd
hlt
sbb
add
push
cld
xchg
dec
pop
rcrb
cmpb
sti
imul
cmp
cmp
hlt
call
ror
test
test
dec
movsb
pop
sbb
add
jnp
jb
cmpsb
shl
scas
mov
adc
push
lahf
jg
imull
pop
packssdw
inc
in
add
adc
movd
movsb
pop
fs
or
lahf
incl
push
jmp
aaa
ss
cmpsl
push
inc
add
adc
test
fnstenv
je
dec
std
jle
pop
jae
adc
mov
ret
fidivs
lea
rcr
movl
sbb
push
lods
xor
dec
out
inc
std
pushl
add
cmp
add
gs
addl
out
cmc
test
xor
push
inc
xor
data16
adc
push
dec
jmp
xor
mov
sub
mov
mov
pop
pop
mov
push
add
movhps
std
test
cld
loop
sub
decl
mov
decb
aam
sbb
dec
mov
add
add
incl
jne
pop
push
clc
mov
mov
subl
pop
or
mov
daa
ja
and
ret
xchg
repnz
lock
cmp
push
fmull
pop
lods
mov
aam
push
sub
pop
cmp
pop
add
add
imul
xchg
outsl
in
push
push
ljmp
push
cmpsb
pop
dec
add
dec
push
in
add
push
cmp
dec
aam
mov
add
mov
movsl
push
add
int3
sti
fwait
pop
mov
dec
inc
mov
xchg
push
add
mov
dec
mov
jge
mov
sub
repnz
xchg
inc
pop
or
add
shl
xchg
inc
xor
xchg
aas
cmp
pop
sub
or
jb
fists
notl
jno
popa
fdivs
xchg
ss
sti
push
repz
stos
pushl
adc
add
lcall
cmp
add
ret
adc
nop
sub
xchg
inc
push
lea
out
add
je
mov
rorb
mov
mov
push
rcpps
mov
inc
inc
jmp
pop
ret
call
push
adc
ss
cmp
test
jp
jmp
pop
ret
pushl
jmp
jmp
movb
pop
std
adc
xor
out
mov
mov
add
outsl
mov
mov
incl
inc
clc
push
out
sub
std
test
js
jne
jle
aas
add
mov
int
out
call
fimuls
push
mov
sub
sub
push
adc
call
cmp
movl
push
inc
add
push
sbb
jne
outsb
push
fidivrl
add
add
into
sub
lds
push
jne
sub
dec
sub
add
pop
pop
adc
daa
lods
js
testl
inc
push
mov
add
jnp
mov
or
out
jmp
mov
ret
test
fdivrl
sbb
add
aaa
and
adc
add
add
inc
inc
out
imul
push
cmp
sbb
shr
rorb
fs
mov
cmp
rcr
das
inc
adc
push
xor
cmc
jns
mov
test
mov
mov
lret
jecxz
imul
adc
sub
mov
adc
dec
jmp
add
add
add
add
daa
and
xchg
cmp
mov
jge
addr16
jge
add
jecxz
jmp
sbb
pop
jmp
adc
add
adc
lret
mov
push
or
test
push
faddp
icebp
adc
sbb
incl
out
add
cmc
xchg
cmp
mov
xor
jne
xlat
add
jmp
add
xchg
cmp
xchg
push
mov
jle
lea
test
adc
je
lea
es
adc
jle
lea
sub
adc
add
jmp
add
add
or
pop
mov
add
clc
ljmp
inc
and
je
andb
or
push
xor
clc
mov
xor
rorb
mov
add
sub
adc
push
cbtw
jle
addr16
adc
add
mov
xor
aaa
fdivl
add
sti
mov
cmp
decl
fcomps
add
push
std
nop
inc
add
push
push
aaa
xchg
push
add
sub
mov
sti
pusha
shrb
push
sub
incb
lods
inc
je
ffree
jmp
arpl
sbb
call
sbb
movsl
mov
jmp
ja
gs
aaa
mov
pop
lcall
movsb
sub
mov
scas
sti
mov
sar
rcrb
pop
lcall
jmp
or
push
out
inc
inc
dec
daa
sub
add
jae
movsb
jecxz
sub
add
or
test
dec
mov
add
int
xor
mov
lock
xchg
cmp
xchg
adc
pop
dec
data16
xchg
mov
jmp
or
test
aaa
cmpsl
scas
in
push
cmp
mov
mov
ret
xchg
lock
aam
rcll
hlt
adc
les
in
add
arpl
dec
shlb
add
add
test
inc
ret
cmpsb
sub
add
iret
cltd
or
jb
rcll
xchg
cmp
jmp
popf
add
jmp
nop
push
jae
xchg
pop
rcrb
mov
xor
je
lahf
adc
jmp
enter
or
sbb
lcall
fiadds
push
add
add
xchg
imull
aaa
call
or
jno
sar
sbb
dec
push
lea
ljmp
add
mov
xchg
pop
rolb
mov
sub
cmp
sbb
push
jae
sub
addb
mov
push
xor
adc
dec
and
jno
xor
pop
pop
pop
push
add
fimuls
add
add
jns
add
add
vandps
xor
stc
push
inc
inc
iret
add
jge
add
repnz
std
inc
das
mov
jmp
sub
adc
je
das
jo
sub
mov
pop
xchg
into
clc
xchg
dec
add
add
add
jne
or
mov
daa
fs
into
sub
dec
fcoml
cmp
loope
imul
nop
stc
sub
mov
and
add
das
pop
mov
mov
mov
add
add
adc
add
jo
mull
pushf
cs
outsl
cmp
jg
mov
cld
mov
push
sub
mov
add
mov
mov
jo
adc
faddl
push
jl
cmp
xor
fimull
sub
aas
faddl
cmp
xchg
test
cmc
out
push
or
mov
push
cmpsb
xor
shl
sub
leave
inc
dec
fs
std
imull
or
arpl
sub
les
ret
jbe
add
or
jae
mov
add
lret
jg
xchg
jno
ret
inc
std
and
cmp
pop
cmp
inc
fists
cld
cmp
adc
mov
insb
aas
mov
jae
sub
mov
and
test
fwait
stc
popa
shlb
mov
fnstenv
mov
jmp
aas
xchg
test
add
orb
dec
jge
xlat
and
or
aam
inc
hlt
loopne
or
incl
xor
cmp
sti
adcl
inc
repnz
pop
pop
loope
push
add
out
mov
xchg
andb
jne
test
dec
pushl
push
xor
ljmp
push
mov
je
clc
jmp
out
add
mov
mov
xchg
or
loopne
hlt
ret
andb
data16
test
je
add
std
adc
adc
inc
add
lea
enter
dec
dec
mov
std
scas
mov
call
sub
mov
add
adc
mov
dec
mov
mov
lahf
cmp
in
xor
xor
add
add
sahf
or
std
push
mov
std
fwait
push
add
push
imul
xchg
xor
push
and
add
in
decl
into
dec
fcmovu
enter
mov
cmpsl
sub
and
jae
add
adc
popa
inc
mov
inc
loope
xor
add
mov
mov
xchg
mov
aaa
inc
xor
or
add
xor
movsl
std
mov
cmp
pop
clc
pop
mov
lret
sbbb
mov
mov
jno
fwait
inc
rcrb
xor
sub
fwait
out
pop
jl
sub
xor
or
aas
test
ret
sbb
stos
fisubrs
incb
popa
jnp
jb
daa
aaa
push
cmp
add
jp
or
dec
mov
adc
inc
push
mov
rorl
add
fwait
add
cmp
lock
add
jns
add
xchg
test
mov
sti
out
and
insb
dec
mov
jb
jecxz
insb
adc
add
jl
xchg
inc
adc
add
push
iret
pop
stos
lods
das
mov
add
mov
dec
inc
je
xchg
add
rclb
out
fdivp
std
jmp
repnz
or
out
std
jo
scas
les
push
jmp
push
ret
ret
and
std
mov
movb
jmp
push
adcl
je
mov
and
or
out
insl
jae
cmp
add
iret
repz
add
add
jmp
push
add
mov
enter
std
ljmp
outsb
or
mov
jge
mov
xchg
call
pop
push
mov
inc
out
mov
inc
push
mov
jge
fstps
mov
add
push
sbb
mov
xor
mov
and
pop
xor
xchg
fdivs
sete
mov
add
mov
jge
cli
pop
fcoms
add
inc
pop
rcrb
pop
add
pop
push
js
ficoms
andl
fwait
inc
add
insb
inc
inc
adc
cld
mov
push
dec
push
add
add
std
sbb
push
shr
sbb
test
mov
repz
push
cltd
add
out
add
add
dec
sub
adc
mov
push
mov
movsl
std
mov
lds
shrl
pop
roll
dec
push
add
push
jne
sub
inc
push
or
inc
roll
mov
jns
roll
add
cmpsl
add
fsubrl
inc
inc
jmp
shrb
push
loopne
jmp
cmc
adc
std
jbe
push
add
inc
cmc
mov
hlt
stos
adc
aam
ljmp
loopne
jmp
outsb
add
add
mov
cld
xchg
inc
jmp
lods
sbb
addr16
pop
jae
sbb
fs
mov
ds
into
ret
rorb
add
mov
push
repz
cmp
add
add
subl
or
insb
inc
mov
pop
ret
push
jl
or
pusha
incl
cmc
xor
adc
je
add
je
add
cmp
jle
or
ret
inc
decl
add
or
pop
faddl
sub
push
decl
adc
sub
in
pop
mov
pop
sbb
and
rcll
jmp
cmc
and
mov
mov
push
cmp
ret
cmp
addr16
pop
aaa
push
push
add
ljmp
push
sub
ljmp
out
xor
rcll
add
or
ret
mov
fcom
push
add
cs
or
xor
add
adc
rorl
jb
or
jmp
add
add
in
pusha
popf
adc
sbb
sub
add
jl
cmp
test
jbe
je
xchg
rcl
stos
mov
cltd
pusha
add
add
add
rol
add
or
adc
sti
or
push
add
add
cld
pop
add
or
outsl
add
jmp
cmp
sbb
sbb
pop
mov
cld
cmp
cmpb
iret
gs
gs
call
je
negl
or
mov
scas
ret
loope
add
rorl
sbb
sar
jle
lcall
bound
mov
popa
adc
add
push
fucomi
imul
aad
inc
test
mov
push
cld
call
insb
testl
ljmp
add
test
call
cwtl
std
pop
pop
mov
test
sbbl
call
incb
mov
test
std
mov
dec
hlt
ret
mov
push
add
add
inc
nop
jo
incl
jmp
insl
clc
dec
xchg
pop
in
jno
call
jmp
push
inc
jne
fidivl
fldl
push
ja
fwait
in
or
std
adc
call
sbb
call
add
xchg
fdivs
repz
idivb
rcrl
mov
inc
das
push
mov
add
mov
cmp
mov
add
mov
mov
add
adc
cld
sbb
je
xchg
pcmpgtb
pop
add
pop
mov
divb
das
jo
dec
mov
pop
add
fwait
test
adc
dec
cli
std
int3
add
subl
stos
sub
rcl
or
cwtl
sub
cmc
scas
or
jae
testl
fisubrs
fildll
jmp
add
enter
clc
mov
adc
add
add
jge
cmc
pop
mov
mov
repnz
fwait
mov
jl
js
clc
add
mov
icebp
inc
cltd
mov
pop
jg
es
sub
and
pushl
adc
test
stc
es
in
add
add
sub
push
dec
cmp
icebp
adc
mov
xchg
movsl
or
push
pop
mov
cmc
xchg
daa
mov
xor
jb
js
aad
mov
out
add
in
insl
push
mov
jb
js
std
adc
jge
std
and
in
add
int3
mov
and
push
cmp
mov
mov
mov
roll
add
mov
or
cmp
mov
add
pop
pop
mov
pop
ret
push
mov
std
jne
stos
jae
add
jnp
std
xor
add
out
fildl
jne
xchg
std
and
push
addr16
mov
add
out
fistpl
aaa
mov
lea
mov
sti
push
adc
inc
add
test
mov
mov
adc
rcll
xchg
fcoms
cmp
stc
push
mov
add
xor
pop
icebp
mov
add
push
inc
inc
ljmp
cli
je
scas
mov
add
test
dec
sub
in
filds
stc
jp
ficoms
idiv
gs
push
push
lcall
jae
xchg
inc
add
std
cli
cmpsb
cmpl
or
int3
cmc
xlat
adc
out
scas
jle,pt
cli
out
scas
and
andb
daa
add
and
scas
sti
push
lods
loopne
fldenv
inc
es
lods
cmp
aam
xor
sti
jae
sti
cs
popa
dec
cs
adc
movd
add
notl
loope
mov
je
out
stos
in
int3
frstor
leave
ds
into
ljmp
mov
jbe
sub
cld
lock
stc
out
add
stos
inc
ss
lods
int3
cmovb
jge
xor
adc
call
or
fnsave
cmc
out
hlt
and
jb
jl
mov
jl
mov
stos
decb
in
adc
mov
adc
imulb
mov
test
imul
bound
test
push
add
ja
call
adc
test
sbb
in
sahf
loop
mov
adc
ret
or
add
sub
pop
fnstcw
dec
pop
outsl
or
test
ljmp
jne
mov
sti
push
jmp
add
lret
jmp
mov
cmc
shrl
or
je
andl
add
sbb
std
lock
andl
cwtl
les
mov
sti
jae
push
cmp
iret
cmp
adc
xor
xchg
mov
add
sub
xor
sub
mov
xchg
int3
pop
mov
sti
mov
mov
xor
push
ljmp
lea
xchg
adc
add
push
cmp
mov
in
sub
mov
scas
decl
sub
mov
sub
or
push
mov
mov
xchg
rorl
mov
jnp
cmp
cmp
incb
clc
aas
adc
push
or
rclb
mov
and
add
jo
movb
call
lods
xchg
inc
cmp
popf
lcall
ds
fs
ret
add
sub
add
inc
arpl
add
add
mov
xchg
in
mov
lea
and
sub
sbb
sbb
xchg
sbb
sbb
mov
cmp
add
mov
cld
and
mov
mov
fsubrs
pop
cmp
sarl
stos
gs
push
sub
orl
mov
inc
psrld
insb
sbb
pop
ss
pop
lds
and
ljmp
test
lds
inc
aas
fucom
sbb
jmp
out
xchg
add
add
mov
xor
sbb
aaa
and
into
mov
add
sbb
mov
pop
mov
sub
add
add
dec
into
cmp
xchg
mov
test
add
inc
or
pop
push
call
mov
sbb
test
jge
add
jb
lea
add
out
hlt
mul
cmp
push
mov
jae
out
sti
std
insl
call
add
clc
cmp
out
aad
mov
xor
mov
mov
adc
bound
dec
xchg
out
dec
mov
adc
shll
and
sub
jl
bound
aas
adc
cwtl
sbb
add
and
push
test
pop
xor
sub
add
mov
cmp
cmpl
mov
mov
rcll
add
or
jecxz
cmpsl
das
or
add
add
bound
push
or
clc
xchg
inc
cmp
xor
xchg
or
add
xchg
cmp
test
add
xor
pop
ret
out
mov
stc
outsl
ret
out
mov
std
pop
ret
out
mov
hlt
imul
mov
push
add
xchg
mov
imul
int
sub
cmpsl
fdivs
loop
aas
jmp
dec
push
andl
add
or
cmp
sub
ret
or
lcall
add
sahf
sub
jge
cltd
mov
stc
mov
xor
sub
orl
jns
adc
std
out
cld
sbb
fs
add
pop
add
aad
mov
push
sbb
sbb
cli
sarb
pop
sub
mov
mov
add
mov
add
cmc
xor
mov
out
pcmpeqd
clc
cld
mov
and
or
add
rclb
clc
cld
push
push
or
push
outsl
outsl
sbb
cmpsb
sub
js
jae
lahf
int
rcrb
add
push
push
or
push
fildll
jmp
call
in
or
add
outsb
sbb
inc
rorb
add
sub
je
mov
add
pop
dec
cmc
aad
mov
add
mov
outsb
or
jmp
icebp
divb
loop
or
mov
shll
push
cmp
scas
dec
or
push
sub
sub
or
nop
rcll
iret
repz
add
pop
add
outsb
or
fdivrl
mov
pop
or
cld
fpatan
aas
adc
popl
cli
mov
adc
mov
hlt
cs
fcompl
or
movsb
inc
sbb
mov
dec
sar
call
and
mov
xchg
in
add
test
fcomps
inc
mov
cmp
dec
int
xchg
inc
cmp
jmp
add
mov
hlt
lahf
int
xchg
push
adc
imul
xor
jmp
or
aaa
sbb
fisttps
adc
sbb
sub
adc
push
cmpsb
fidivrs
lea
cmp
jl
push
scas
call
out
or
test
push
mov
bound
mov
fsts
sarb
das
add
xlat
adc
lds
adc
orl
ret
jmp
bound
ret
sbb
sub
insl
adc
scas
mov
inc
mov
mov
sbb
lcall
mov
inc
mov
mov
clc
push
fists
mov
cmp
pushl
sbb
mov
call
cmp
or
test
add
add
cmp
xor
push
call
dec
clc
cmp
pop
and
je
sub
je
xor
push
shl
xor
test
lea
dec
mov
and
call
xor
xchg
cmp
xchg
je
sub
je
xor
or
xor
orl
add
add
push
and
cmp
aaa
pushl
sub
mov
incl
xchg
ljmp
sub
mov
push
sub
data16
push
xchg
test
mov
adc
cmp
nop
insb
pushf
in
push
inc
mov
aad
mov
fistpll
mov
adc
add
sub
inc
sub
inc
mov
aas
adc
mov
shl
in
adc
inc
cld
push
adc
outsb
mov
fldt
mov
testb
fbstp
call
sbb
pop
fucom
ljmp
lods
filds
add
mov
repnz
mov
add
lock
repnz
jmp
cld
pop
jg
pop
lahf
adc
repnz
sbb
sub
cmp
fidivrl
outsl
int3
imull
jns
pop
test
cld
ss
add
adc
xchg
ficomps
push
adc
push
pop
mov
add
pop
icebp
inc
call
jae
inc
sbb
cmp
adc
cwtl
ds
jb
mov
in
lods
mov
add
xchg
sbb
stc
in
orb
call
cld
add
push
lods
mov
nop
sbb
stc
in
or
cli
pop
cld
mov
push
xchg
or
scas
push
adc
cmpsl
add
shrb
add
xorb
fistpll
or
jbe
decb
test
ret
mov
scas
add
add
popa
mov
mov
std
push
xor
xchg
jp
mov
cmc
cmp
jmp
adc
add
add
cmc
adc
mov
jne
fistpll
lea
or
pop
cmc
add
nop
add
js
lea
cmp
repz
adc
add
add
jns
lock
mov
loop
jge
inc
cmpsl
adc
call
adc
cmp
jmp
sahf
inc
jae
or
push
dec
and
std
nop
mov
dec
jmp
movsl
inc
jae
push
into
fcmovnb
pop
add
shrl
jp
adc
roll
scas
ds
fidivrl
xor
add
sahf
dec
xorb
fmull
add
add
add
or
adc
negb
add
rcll
add
add
cmpsb
cmpsb
leave
inc
add
mov
xchg
mov
sbb
subl
into
andl
punpcklwd
adc
pop
cmp
arpl
mov
clc
add
and
test
xchg
or
add
push
push
cli
arpl
mov
cmpsl
push
sbb
addr16
in
and
lods
mov
scas
pop
mov
adc
mov
xlat
xchg
call
or
and
call
jecxz
call
pushf
into
inc
adc
fiaddl
outsb
pop
adc
insb
add
and
xchg
stc
rorb
adc
rorb
push
fisubs
test
jp
insb
sbb
add
cmpsb
imul
add
mov
pop
imul
jns
out
cld
std
ljmp
imul
cmp
std
mov
loopne
add
push
push
das
mov
add
add
mov
loopne
arpl
cmp
hlt
aad
std
inc
rolb
push
push
bound
call
add
pop
ljmp
jne
lea
sahf
test
add
dec
mov
add
xchg
add
in
add
push
paddd
inc
leave
pop
add
adc
scas
pop
ficoml
push
lcall
push
xchg
xchg
and
jb
mov
cmp
fs
ds
inc
jae
mov
jno
sbb
xchg
outsb
out
sub
call
insb
jl
push
and
ljmp
or
inc
mov
out
mov
sbb
sbb
test
xchg
ljmp
add
push
out
pop
in
sbb
call
stos
mov
rcrl
in
add
push
out
outsb
fldl
push
out
shll
roll
push
hlt
loop
xchg
mov
push
pop
loopne
or
shrb
adc
mov
call
fwait
dec
xchg
test
sub
mov
pusha
sub
add
add
add
out
jle
add
add
inc
xchg
out
cmpsb
mov
mov
hlt
jo
push
add
jge
cltd
call
pop
cmc
mov
rorb
push
stos
imul
jmp
lea
ljmp
push
adc
test
adc
mov
pop
iret
mov
pop
sarb
insl
aas
push
add
mov
out
and
call
add
adc
add
mov
sbb
incb
and
jmp
stos
or
push
or
jb
pop
inc
dec
add
mov
sti
std
call
inc
jb
pop
push
addr16
decl
data16
adc
pop
repnz
sti
add
cmp
add
inc
cli
push
and
sub
js
xor
ss
std
incl
add
les
fldl
dec
jmp
adc
dec
mov
push
std
rcrb
mov
jmp
push
pop
push
pop
leave
sub
call
jg
adc
add
dec
ja
add
ret
outsl
cwtl
shufps
loop
inc
or
push
jge
aad
sbb
scas
aaa
or
add
sub
add
movsb
jge
xchg
pop
xchg
adc
or
test
addl
std
mov
lock
or
sub
add
adc
ret
xchg
sbb
int3
mov
adc
add
jae
add
mov
cmc
das
xchg
cmp
sbb
in
cltd
mov
cmp
mov
mov
adc
jge
add
add
bound
lods
lods
adc
pop
jle
add
add
or
int3
movsl
xchg
mov
adc
sbb
fsub
test
pop
rcrl
ret
cmp
add
add
out
ljmp
xchg
inc
je
outsl
mov
inc
loop
sbb
sbb
fcmovnb
push
adc
jb
es
sub
psubb
in
dec
mov
inc
add
xchg
out
push
rclb
sub
add
add
pop
outsb
xchg
test
jmp
add
mov
mov
add
jl
test
adc
dec
xchg
inc
je
es
jae
pusha
out
ljmp
sti
push
call
sbbb
push
jno
repnz
call
testb
idiv
xor
rolb
add
cli
shl
cmc
test
add
in
popa
push
add
dec
xchg
js
add
aam
std
mov
and
add
sub
add
js
mov
adc
inc
call
xchg
popf
iret
std
dec
mov
mov
repnz
out
jl
fstps
or
nop
sti
add
adc
nop
or
pop
cmpsl
mov
jnp
add
movsl
das
stos
xor
xchg
pop
add
test
adc
jl
sti
sbb
sarb
jle
push
mov
into
ret
call
movsl
testl
mov
int3
lea
popf
mov
sub
add
lea
shl
lea
push
pop
add
sbb
call
or
ja
sti
inc
stos
xchg
jbe
cmpl
add
add
inc
test
add
ja
int3
inc
or
sbb
mov
add
mov
cmpsb
add
xchg
cmpsb
sbb
xchg
jbe
fcompl
add
hlt
arpl
outsl
add
add
sbb
jbe
sbb
inc
pop
dec
iret
test
in
scas
inc
adc
add
pop
cmpb
add
arpl
add
test
pusha
mov
lock
jmp
mov
mov
dec
call
push
mov
mov
xchg
or
jne
jg
in
sti
subb
mov
or
adc
aas
jae
or
or
cmp
pushf
xor
lea
jb
jle
jmp
mov
add
pop
jne
jmp
inc
xacquire
in
ljmp
cmp
adc
jne
xchg
call
jae
repnz
cmpl
hlt
jl
cmp
jno
mov
sti
std
inc
adc
push
mov
sti
jae
ja
out
loope
std
call
add
repz
testb
sti
std
jmp
das
std
cmp
cld
pushl
sbb
add
cmpl
inc
movb
xchg
pop
ljmp
pop
ja
sbb
leave
aaa
push
pushf
push
and
repnz
adc
jmp
xor
std
arpl
push
pushf
xchg
sbb
push
cmp
decb
out
mov
ljmp
add
out
movsb
gs
push
aaa
sub
xchg
push
cmpsb
rclb
loop
ljmp
mov
add
fcmovnb
call
push
pop
jecxz
sbb
dec
add
push
sbb
add
rcll
or
add
mov
andb
fdiv
mov
js
or
mov
adc
jge
jb
out
or
push
testb
in
add
ljmp
pop
dec
cmp
or
xorl
xlat
inc
mull
cmpsb
jmp
mov
jb
popf
call
inc
shl
es
fmul
test
bound
in
mov
sbb
adc
push
aaa
mov
mov
adc
adc
sbb
mov
add
jb
or
jmp
jmp
mov
jge
fstps
add
jmp
adc
addr16
mov
adc
out
std
negb
test
jmp
mov
std
xchg
dec
and
adc
mov
mov
sbb
add
je
dec
adc
xchg
adc
in
stc
add
cmp
cmpsl
add
pop
shl
add
sub
or
mov
call
movq
push
call
gs
add
sub
clc
nop
test
add
inc
and
push
call
mov
orl
and
add
inc
test
inc
and
lea
sub
inc
xor
cld
mov
push
cbtw
or
and
and
sub
jmp
sub
das
cmc
inc
add
xchg
mov
adc
in
mov
outsb
decl
in
testl
push
push
adc
shr
xchg
out
xor
or
push
std
add
and
addr16
xor
std
mov
add
sbb
movsb
mov
inc
mov
add
add
fwait
or
inc
mov
mov
adc
out
lret
stc
pop
xchg
aam
ljmp
mov
mov
lock
xor
adc
imul
add
fs
loope
sbb
xchg
inc
aas
enter
add
add
jmp
rorb
or
mov
roll
xlat
adcl
aas
add
pop
ficoms
mov
xlat
push
mov
mov
idivb
das
insl
dec
je
fisubs
rcrl
add
clc
std
and
outsl
lods
fiadds
mov
pop
cmc
jbe
rorl
jecxz
or
or
jae
adc
mov
pop
cmc
ss
jae
iret
cli
pop
nop
dec
add
rcrb
outsb
or
out
outsb
xchg
imul
stos
das
rcrb
repz
add
iret
outsb
arpl
push
adc
inc
addb
gs
out
mov
pop
outsl
std
add
ret
cmp
mov
jbe
xor
mov
push
pop
add
in
orl
push
rorb
outsl
add
repz
pop
call
in
or
call
adc
sti
sti
adcl
std
mov
add
fucom
add
xchg
test
add
or
cld
pop
cmovo
call
std
sbb
cld
adc
inc
add
add
push
ds
ret
das
shrb
mov
lea
xor
sti
std
int3
xchg
mov
push
add
nop
add
xchg
jg
je
pop
dec
je
arpl
nop
aad
call
mov
les
add
ret
jp
jmp
adc
add
push
add
pop
dec
adc
daa
or
insl
ret
pop
cmp
divb
aad
stos
add
stos
push
cwtl
in
inc
or
jmp
das
js
dec
cmp
leave
scas
ljmp
out
push
in
jecxz
adc
out
sub
inc
add
add
add
rolb
add
out
push
mov
and
test
xchg
rcl
cmp
call
adc
add
adc
in
adc
add
inc
scas
push
mov
add
pop
ljmp
push
or
jmp
push
cmp
pop
lods
xor
sub
push
inc
xchg
add
jmp
push
dec
std
xor
add
inc
add
cmp
in
cmp
std
xchg
cmp
jae
ret
cmc
adc
dec
cmc
pop
ret
jl
jmp
push
hlt
call
add
xchg
test
jno
add
cs
push
inc
jmp
jle
xchg
xchg
cld
mov
sub
rolb
add
sti
add
add
add
push
mov
xchg
call
in
shll
ret
cmp
xchg
push
jg
cmpsl
ljmp
add
mov
push
inc
add
cmpsl
cli
add
in
cld
call
imul
in
cli
std
xchg
das
cli
call
add
lods
or
adc
call
pop
pop
shll
inc
std
adc
std
ds
ret
push
mov
inc
or
call
idiv
shll
jns
idiv
pop
arpl
je
cmpsl
insl
or
fs
sti
inc
xchg
push
call
dec
stos
or
mov
push
lcall
std
popf
mov
test
or
pop
addr16
dec
or
outsl
adc
push
mov
les
jno
sbb
test
hlt
mov
bound
out
test
jmp
xor
add
add
jl
jmp
bound
add
add
push
mov
or
clc
and
adc
outsl
adc
push
sub
and
mov
addb
sbb
add
data16
hlt
lret
jmp
cmc
cmc
std
lahf
cli
sti
sub
ret
ds
je
aas
jmp
rolb
call
je
dec
jo
orl
out
roll
xor
cmp
add
dec
push
into
cld
out
ret
add
gs
insb
or
jecxz
add
or
bound
mov
xchg
in
add
decl
dec
xchg
out
outsl
ljmp
pusha
clc
sti
ljmp
incb
shlb
jg
inc
mov
in
rolb
add
add
cmp
and
xor
add
dec
ljmp
test
inc
cmc
cmc
stc
decl
call
subl
push
mov
add
rcrb
clc
std
cmp
test
sub
sub
push
push
ss
dec
xor
add
xlat
lcall
aas
xor
xor
cmpsl
ret
es
mov
movsb
cmc
std
pop
pop
jo
inc
stos
divb
mov
push
rep
or
pop
stc
orl
jg
jbe
push
mov
fwait
push
std
fsubp
hlt
adc
aad
add
cld
push
xchg
add
loope
hlt
aas
and
hlt
mov
add
icebp
cld
pop
shl
dec
add
mov
bound
test
ja
call
add
add
or
and
add
push
outsl
sub
inc
mov
std
popa
aas
lods
push
lods
lret
mov
mov
mov
out
stc
cld
pop
inc
adc
hlt
lahf
and
mov
sub
idivb
add
jnp
cld
jp
inc
jmp
adc
and
sub
inc
add
lds
sbb
inc
add
sub
stos
adc
std
aas
jp
jbe
adc
xor
pushf
inc
add
cmc
test
sti
sub
push
add
sub
es
add
sub
add
push
add
je
aad
add
jp
push
ficomps
pop
adc
adc
add
add
sbb
inc
cmp
adc
push
mov
inc
cmp
or
inc
add
repnz
mov
sahf
adc
repz
cs
add
in
dec
adc
push
xor
adc
rolb
mov
out
mov
in
std
jmp
mov
js
push
jmp
test
add
ds
test
mov
fadds
test
test
or
adc
pop
add
fadds
std
and
push
inc
adc
or
push
mov
adc
lods
std
push
outsl
jb
pop
int3
addb
and
xor
cwtl
pop
or
popf
and
or
cwtl
add
adc
repnz
shr
push
fadds
add
push
fbld
outsl
adc
pop
icebp
adc
add
add
inc
adc
ljmp
add
sbb
pop
add
daa
add
xor
std
pop
add
add
add
icebp
add
mov
les
clc
sbb
xchg
loope
icebp
jmp
dec
jb
dec
sarb
js
mov
inc
out
int3
jbe
leave
push
in
out
out
es
add
test
mov
add
in
jl
xchg
shll
test
add
adc
add
jl
jmp
add
adc
jae
in
aas
clc
fs
call
insl
push
jne
add
js
cmc
adc
jne
sahf
cmpsl
cld
mov
sar
xchg
call
call
outsb
xchg
mov
add
inc
je
std
dec
cmp
gs
sub
rol
cli
ds
adc
mov
add
adc
xor
pushl
lds
enter
in
sti
addb
ljmp
jae
aaa
int
fisttps
mov
int3
mov
dec
fisttpl
leave
jp
std
push
mov
jge
xor
add
sti
addl
jg
push
mov
loope
sub
add
sbb
add
addr16
lea
std
dec
ficoml
add
jne
stc
decl
call
test
push
pop
mov
aaa
push
mov
in
adc
stos
ret
inc
sahf
fcomp
fcoml
inc
lock
sbb
out
ja
jbe
mov
rcl
jl
imul
cmpl
jnp
dec
pop
pop
or
adc
int3
xchg
in
add
add
xlat
add
test
lcall
add
sti
adc
sbb
push
fadds
je
and
adc
lock
add
aaa
aam
out
aas
flds
int
jmp
push
jns
jmp
out
or
inc
adc
les
adc
push
cmp
cmp
stc
sub
and
jbe
jle
in
ret
adcl
add
es
cmp
jecxz
scas
shr
push
jmp
lcall
sub
push
sbb
and
fs
push
shrb
int3
insl
in
inc
inc
mov
std
repnz
adc
pusha
shl
call
clc
xchg
cmc
daa
xor
add
inc
lds
fs
test
sarl
loope
add
in
fidivrs
inc
scas
roll
je
mov
std
mov
adc
push
jb
add
push
jp
sub
inc
add
pop
icebp
ljmp
pop
in
in
adc
jae
add
lret
or
add
mov
sbb
je
push
add
inc
out
inc
add
mov
pop
pop
mov
dec
xchg
fwait
cwtl
inc
cmp
dec
lcall
adc
jle
or
adc
add
test
jns
cmp
add
std
in
lret
sti
test
ljmp
add
xchg
sti
test
add
imulb
cmpsl
insl
push
test
js
add
stos
loope
js
inc
mov
adc
call
jl
or
add
dec
lea
jno
fbstp
push
push
xchg
add
add
fsubrs
mov
mov
add
push
or
add
test
ljmp
or
fcompl
ja
data16
ficoms
outsl
sar
or
fstl
pop
push
call
in
xchg
add
mov
add
inc
out
sbb
adc
adc
adc
adc
add
hlt
and
dec
ljmp
ljmp
test
add
notb
add
add
enter
mov
cld
ljmp
iret
repz
jl
outsl
inc
inc
stos
push
push
cmp
inc
adc
jmp
gs
cli
in
int3
stc
insl
and
lret
pop
call
dec
mov
popf
std
inc
mov
cmovo
dec
inc
ret
fstps
add
add
add
imul
inc
jmp
pop
push
out
jns
lock
pusha
insl
sbb
in
repz
sbb
xchg
add
jmp
cmp
std
shrl
std
cmpsb
shl
mov
lret
in
xchg
pop
inc
add
and
push
adc
cmc
psubq
fdivs
outsl
repz
adc
add
test
xchg
gs
push
xor
mov
inc
std
push
call
jmp
in
out
fdivr
mov
cmp
cwtl
call
mov
jne
push
sti
jne
fs
jg
sbb
in
push
inc
or
inc
in
adc
mov
sbb
js
inc
test
cld
pushl
dec
xor
divb
adc
sub
pop
and
xor
outsl
and
out
xor
fstl
jge
std
into
xchg
sbb
movsb
into
pop
mov
mov
in
aas
sbb
sahf
lea
std
sbb
out
sbb
push
hlt
sbb
add
sub
addb
fdivrs
jle
in
out
or
test
add
dec
mov
push
mov
shl
jae
rolb
xchg
jp
movl
xor
and
or
jb
or
imul
in
imul
in
out
out
aad
inc
adc
pop
xchg
rcl
xchg
ljmp
adc
outsl
inc
jbe
xor
jnp
outsl
dec
es
ljmp
movsb
and
add
jns
xchg
imul
adc
jl
insb
insb
push
jmp
out
fsubp
rclb
ret
call
aam
pop
inc
add
imull
jmp
dec
call
cmc
push
or
js
sbb
dec
cmp
sbb
mov
push
and
ficoml
ret
es
roll
enter
pop
sbb
mov
cld
sub
aas
jmp
int
and
aad
popa
roll
lds
adc
mov
ffreep
je
fmuls
and
or
aas
push
call
add
dec
call
ja
call
orl
data16
add
in
add
popa
hlt
add
call
dec
push
mov
pushl
xchg
insl
out
je
shrb
push
push
dec
call
test
outsb
sub
push
and
or
outsb
fisttps
or
fsubl
sahf
pop
jno
das
pop
clc
add
add
fs
xchg
adc
jmp
pop
loope
xor
add
scas
lds
ljmp
or
lcall
push
call
pop
test
mov
les
call
mov
call
mov
imul
add
cmp
loope
pusha
dec
add
pushf
insl
lock
xchg
xor
and
cmc
aas
adc
hlt
test
add
add
rclb
add
nop
xchg
in
loop
xor
cwtl
aaa
xchg
xchg
in
mov
add
shll
stos
pushl
sub
ss
clc
dec
repz
orl
xor
add
push
fnclex
bound
mov
add
inc
negl
addl
cmc
add
loop
loope
inc
add
adc
sub
inc
ficomps
loop
incl
add
push
ret
loop
or
sub
adc
fdivl
dec
lahf
aas
add
call
gs
push
data16
or
xor
or
xor
and
xchg
fs
aad
fisttpll
add
sub
jae
cmc
fstp
outsb
lock
je
add
call
insb
jmp
sub
js
std
jmp
call
add
mov
xor
push
jae
std
arpl
cwtl
sti
jmp
lds
add
or
adc
sbbl
pop
imul
sub
sti
cmp
aaa
in
xchg
test
pushl
in
add
add
cmpsb
cld
bnd
sbb
call
sbb
add
jno
outsl
shll
push
cmp
call
mov
and
and
loope
je
mov
call
fwait
mov
xor
push
inc
and
jp
ss
push
and
xor
dec
adc
jmp
mov
ljmp
lcall
std
fsubrs
jle
adc
cmpb
jae
pop
inc
and
xchg
inc
or
test
pop
sub
mov
clc
add
and
adc
out
pop
and
mov
jb
aas
and
xchg
inc
jg
or
lcall
add
daa
sub
fucomp
add
addb
sarl
add
icebp
xchg
imul
xor
adc
mov
adc
hlt
sbb
testb
ret
mov
fidivl
push
in
and
adc
adc
xchg
in
fnstenv
inc
adc
fmulp
xor
jne
add
xchg
add
or
lods
fnstcw
adcb
ss
dec
or
mov
out
outsl
jb
cmp
out
push
push
jns
adc
pop
rcll
adc
call
jb
mov
in
or
and
sbb
or
mov
jmp
xchg
fldl
push
or
add
adc
sbb
xorl
rorl
in
mov
add
ret
in
and
je
sar
mov
adc
jge
adc
mov
pop
aas
or
push
jl
inc
js
les
mov
mov
clc
push
loop
mov
adc
lea
sbb
jo
add
or
jno
addr16
or
out
mov
test
icebp
xor
mov
mov
ljmp
jno
addr16
out
jl
add
push
mov
xor
faddl
mov
ficoml
popa
mov
push
in
xchg
loope
filds
inc
adc
xchg
repnz
xor
cmp
push
loope
push
lcall
sbb
add
jbe
imul
dec
and
add
pop
ret
aad
pop
je
push
and
fisttpll
subl
add
es
xchg
icebp
cmp
call
outsl
add
call
add
adc
add
push
popa
add
mov
jge
push
cmp
adc
add
mov
pop
add
add
roll
cmp
aad
in
xlat
ficompl
push
mov
pushf
xchg
adc
shr
mov
bound
add
lock
shufps
cmp
add
andl
add
enter
hlt
aad
ret
gs
jno
sub
mov
and
add
sbb
or
fisttpl
shlb
cld
lcall
mov
or
roll
fcmovb
mov
cmp
or
jmp
jp
inc
jmp
pop
and
pusha
sbb
push
rorl
jmp
dec
dec
or
add
dec
sub
dec
push
pop
push
sbb
ja
mov
and
adc
jne
je
imul
or
inc
inc
subb
add
das
or
push
in
inc
mov
sbb
je
movmskps
rorl
jmp
adc
sub
adc
pushf
hlt
or
pop
jecxz
adc
add
and
add
pop
inc
and
pop
repnz
cli
cld
decl
mov
push
jae
pop
test
inc
add
adcl
out
adc
mov
or
notl
jmp
xchg
call
popw
add
imul
mov
push
insb
fcoms
or
sub
xor
adc
push
cmp
roll
mov
or
adc
fcmovnu
orb
inc
adc
push
xor
jb
shr
cs
add
repnz
adc
rclb
add
pushf
mov
jp
movsb
aad
roll
sbb
nop
sbb
mov
adc
push
xlat
add
bound
cwtl
cmp
dec
dec
dec
cld
mov
imul
add
icebp
inc
adc
loopne
adc
cs
push
icebp
cmpsb
add
mov
mov
sbb
cs
cmovnp
jg
dec
jecxz
push
out
mov
icebp
pop
adc
cmp
sub
repz
mov
std
ljmp
add
out
cmp
add
inc
xor
sbb
shll
mov
add
add
shl
jp
adc
std
hlt
push
aam
icebp
out
std
hlt
cmpsb
add
pop
int3
fdiv
rolb
pop
mov
xor
add
sbb
pop
outsb
add
cmp
add
pop
repnz
dec
in
mov
out
rcrl
clc
mov
mov
loop
push
loope
inc
std
add
add
and
out
je
cmp
scas
adc
adc
add
jmp
lea
call
inc
add
fnstsw
add
dec
cld
push
pop
pop
add
loopne
punpckhbw
clc
mov
mov
out
lcall
shl
int
add
mov
in
je
push
lea
call
incl
add
pop
xchg
inc
aas
or
or
sti
ljmp
call
std
lea
call
inc
add
lahf
xor
or
cs
pop
in
adc
add
mov
dec
or
int3
icebp
out
adc
xor
cmp
jmp
mov
push
ds
pop
xchg
test
add
and
add
faddl
push
pop
fadds
push
xchg
fs
mov
xchg
push
das
test
roll
nop
enter
rcrb
inc
fbstp
sbb
out
rolb
sub
scas
add
cld
push
sti
fldt
flds
in
sub
movb
adc
mov
add
jp
enter
cmp
adc
pop
cmpsl
pop
call
orb
call
jle
into
xchg
sti
fmulp
cmp
clc
scas
jle
fnstenv
adc
arpl
lds
jnp
ljmp
and
ds
pop
stc
fadds
test
or
into
dec
bound
add
imul
ret
lret
mov
jmp
pop
add
out
adc
je
fadds
fcompl
jp
xchg
pop
shr
fs
dec
cmp
mov
ret
push
or
mov
push
jmp
bound
in
add
xchg
pop
push
pushl
stos
decb
pop
pop
icebp
ret
add
fwait
orb
add
pop
jg
sub
inc
not
lock
out
mov
stc
cld
sub
std
add
add
sarb
or
lds
lcall
std
xorl
shrb
jg
das
xor
xor
sub
mov
pop
repz
xor
repz
idivb
add
adc
mov
dec
sarb
mov
or
xor
fcoms
add
sub
subb
or
loopne
aaa
cmpsb
in
cmp
or
cmp
push
sub
push
push
ret
scas
sarb
hlt
cmp
or
std
fisubs
je
sbb
mov
into
push
inc
cli
inc
push
idiv
es
sub
sbb
add
xchg
xor
jb
mov
jnp
dec
lret
inc
rcrl
xlat
into
aam
addb
leave
cmp
push
or
pop
fcoml
adc
xor
mov
add
loopne
mov
ss
inc
std
ja
int3
mov
mov
jnp
test
int3
dec
jle
hlt
jge
fcmovb
dec
sub
sar
out
add
loopne
or
adc
iret
mov
jmp
rorl
dec
leave
push
sbb
or
xchg
jle
iret
adc
jp
cld
jmp
int3
sub
nop
or
std
push
cwtl
shll
ds
enter
pop
dec
jmp
stc
call
pop
js
ror
mov
mov
add
jae
cmp
fnstenv
mov
sub
sti
inc
scas
adc
ds
lea
js
sbb
das
push
adcl
sbb
xlat
lret
jae
mov
ja
add
incl
inc
jmp
mov
in
pop
in
mov
in
mov
test
add
std
mov
or
lods
push
ret
dec
push
or
incl
lods
movsb
add
add
sti
test
add
fcoml
and
std
xchg
pop
jnp
test
out
inc
cmp
add
int3
call
adc
or
rcr
push
push
push
inc
inc
adc
add
js
push
inc
incl
xchg
ror
jmp
adc
lcall
cmp
cld
mov
mov
xor
cmove
in
cli
mov
add
mov
fsubs
dec
loopne
pop
push
fcmovu
sbb
dec
inc
or
push
adc
dec
inc
or
jno
jmp
or
jns
xchg
mov
shl
int3
jmp
add
adc
pop
enter
repnz
add
test
cmp
add
and
add
and
add
and
add
and
add
test
mov
jnp
test
xor
xor
iret
push
add
lret
popa
sub
add
xor
outsl
rcr
insb
push
jo
in
in
aam
pusha
inc
leave
jl
push
add
jp
scas
aad
inc
jmp
cwtl
test
mov
mov
inc
jmp
pop
bnd
rolb
push
stc
push
loopne
dec
icebp
call
adc
jmp
enter
dec
les
cmp
jmp
add
sti
mov
adc
fstp
ret
jae
mov
sbb
pop
insb
dec
mov
jg
ret
std
push
hlt
andb
add
fs
mov
mov
xor
fcoms
cmp
add
or
xchg
dec
push
push
cld
dec
push
pusha
add
add
dec
adc
aas
shll
add
add
mov
jne
mov
add
aas
add
call
xchg
xchg
or
inc
cmp
push
jmp
push
jmp
js
inc
call
ret
stc
idivl
add
xchg
adc
adc
adc
adc
test
add
in
jb
pop
jge
test
push
mov
add
and
test
pusha
and
std
jle
jl
nop
je,pt
adc
xor
mov
jecxz
call
add
jne
dec
add
std
rorl
call
lcall
aas
adc
cmpsb
stos
loope
jae
adc
loopne
fadds
jg
push
mul
jp
inc
inc
lock
xchg
add
jmp
add
sub
test
ret
fidivrs
add
add
ret
pop
jge
jne
mov
dec
inc
out
shl
inc
add
add
ret
xchg
jbe
mov
enter
out
ss
cmpsb
add
cmp
fidivrs
add
add
ret
xchg
jbe
mov
test
es
or
add
add
add
add
push
das
imul
sbb
adc
std
sahf
sbb
add
pusha
push
roll
insl
or
dec
cmp
adc
repnz
inc
push
ds
jmp
xor
xchg
ret
add
mov
jne
jmp
dec
inc
adc
mov
cmp
loope
push
pop
add
rcr
push
lahf
add
jae
dec
out
dec
fcmovnbe
add
mov
dec
call
mov
pop
push
cmp
mov
add
jae
or
scas
inc
testl
int
adc
jge
sti
test
or
sub
push
call
cmp
xorl
test
and
cmp
test
sti
pushl
xor
lcall
adc
dec
adc
adc
inc
hlt
and
push
call
adc
pop
mov
movb
add
shr
and
add
test
add
fstpt
or
sub
add
add
or
and
push
sahf
ficomps
lret
ret
jne
in
loopne
hlt
mov
mov
mov
mov
icebp
or
icebp
je
pop
pop
rep
pop
cmpsl
xchg
lock
push
mov
faddl
repz
mov
cmc
or
adc
icebp
adc
mov
gs
xchg
fmuls
cmpsl
or
movd
add
hlt
add
movsl
shlb
mov
lock
and
push
and
sbb
js
or
shlb
fildl
jbe
adc
es
sahf
inc
out
hlt
pop
inc
pop
add
or
ds
sbb
das
pop
data16
js
adc
shrb
lock
adc
int
in
ret
adc
add
sub
add
mov
lcall
xlat
mov
push
mov
mov
jno
incb
lret
bound
add
add
or
mov
pop
stos
and
push
jb
sub
aas
push
push
mov
lahf
jle
mov
xchg
xchg
push
fsubs
movsb
aaa
pushf
push
or
jb
add
rorb
xchg
add
xchg
xchg
jo
mov
fs
jge
xchg
or
mov
sti
cmp
or
push
sti
xor
add
jge
mov
jno
hlt
mov
mov
xchg
jecxz
adc
mov
rorb
aaa
jge
std
icebp
dec
arpl
push
add
and
mov
aaa
jge
inc
decl
enter
adc
jl
inc
out
jmp
filds
jecxz
adc
lods
jne
cmp
popf
adc
in
je
sub
in
iret
shrb
push
xor
cld
mov
out
push
sbb
mov
or
outsl
mov
pop
in
and
ljmp
loopne
add
jecxz
jae
pop
dec
add
adc
nop
mov
stos
add
dec
inc
test
stos
mov
fisttpll
mov
dec
mov
imul
sbb
mov
and
push
add
les
insb
push
inc
pop
and
aaa
jg
push
xchg
add
inc
clc
sub
rolb
filds
add
mov
mov
mov
rcrb
add
rorl
xchg
adc
pop
pop
add
dec
fnstsw
inc
popf
add
mov
cld
dec
shl
rorl
adc
or
ja
inc
hlt
inc
add
sar
inc
aad
lea
push
mov
dec
xor
add
pop
pop
xor
mov
lea
icebp
fwait
inc
sbb
pop
orb
inc
adc
mov
leave
add
loop
sub
add
and
add
test
aad
mov
add
rcr
push
xchg
test
bound
adc
push
mov
or
jmp
add
bound
shrb
pop
test
mov
arpl
jns
roll
insl
lret
movsl
incl
daa
xor
aaa
xor
mov
or
stc
repz
call
seta
hlt
mov
jle
in
jle
loopne
nop
cmp
cs
add
inc
stc
mov
inc
jo
inc
ljmp
add
ret
inc
cld
test
jge
in
clc
add
adc
add
int3
dec
cmp
outsb
insb
movsl
jmp
adc
int3
jmp
mov
mov
sbb
aam
mov
or
shll
inc
fcoms
xor
sahf
jmp
add
fs
lcall
or
scas
test
fwait
in
mov
add
test
stos
mov
in
add
push
data16
xchg
cmpsl
incl
mov
mov
call
or
xchg
stos
add
xchg
xlat
or
fwait
add
sbb
ss
add
dec
divb
adc
fwait
mov
mov
pop
sbb
mov
mov
mov
lods
mov
mov
mov
sbb
adc
xorb
add
jle
ss
mov
xor
in
mov
movsb
dec
ret
mov
lea
out
mov
pop
inc
mov
imul
push
jle
mov
test
add
inc
in
stc
mov
push
rcll
adc
rorb
xchg
inc
call
add
add
les
loop
js
insl
int
std
push
fsts
daa
int3
mov
mov
mov
mov
sbb
jle
int
push
hlt
pusha
pusha
aad
dec
mov
xchg
and
jle
leave
pushf
dec
lock
adc
out
aaa
call
mov
test
or
add
add
ss
adc
test
add
int
sti
mov
std
ljmp
xchg
arpl
jge
xchg
roll
insl
fiaddl
sbb
icebp
dec
mov
dec
adc
xchg
xchg
mov
jns
add
pop
or
in
jne
test
popa
stc
repz
stc
repz
add
add
mov
in
sbb
inc
jmp
movsb
xchg
cmpsl
mov
stos
int3
decl
aas
cmp
xor
mov
dec
out
dec
jge
aam
shll
push
call
mov
adc
les
or
or
pop
call
pop
and
cwtl
xchg
popf
sbbb
add
or
add
fs
add
cmp
shrl
xlat
sbbb
pop
sahf
or
add
mov
jmp
lods
rorl
in
sub
xchg
lret
adc
ljmp
mov
pusha
aas
imul
dec
fidivl
loop
jo
add
sub
mov
adc
or
sub
mov
inc
push
sub
dec
fsts
cwtl
inc
idivl
cmc
xchg
sbb
popf
push
ret
std
and
mov
mov
jl
xchg
imul
add
xchg
ds
xchg
push
outsb
leave
mov
mov
jno
mov
mov
add
pop
sub
add
sub
sub
fistl
mov
iret
or
adc
add
mov
adc
dec
cmp
movsl
cmp
adc
sub
mov
or
inc
inc
test
ret
into
or
jecxz
test
decw
add
in
enter
orl
dec
fdivrs
mov
jne
inc
inc
mov
jge
test
repz
fmuls
jg
in
pandn
mov
jbe
jne
fs
jbe
dec
xor
inc
hlt
mov
add
loopne
add
or
mov
mov
test
je
inc
int
inc
rolb
add
bound
adc
cmp
adc
std
or
mov
push
aad
outsb
add
iret
inc
fcompl
sbb
sbb
rol
int3
lret
in
sbb
int3
inc
xor
int3
add
fs
add
xor
pop
aad
xchg
mov
add
add
mov
outsb
push
in
cmp
adc
jo
aad
in
sub
xor
sbb
add
shrl
push
mov
mov
jns
les
sbb
add
mov
add
xor
add
or
repnz
outsb
add
sti
int3
mov
int3
push
mov
or
inc
sbb
add
jns
add
ss
jnp
jmp
mov
or
je
lcall
out
das
leave
std
pop
mov
std
push
mov
lods
add
pop
shll
xor
out
cmp
test
jbe
mov
sbb
jns
push
insb
add
xchg
js
xchg
cmc
jle
jns
in
add
lret
das
mov
das
loop
aas
sub
inc
lock
mov
push
mov
or
cs
inc
in
stc
mov
push
mov
or
add
dec
pop
mov
push
add
cld
cs
sub
dec
push
xor
lds
hlt
popa
dec
fmull
in
mov
add
test
lods
xchg
sub
loopne
inc
adc
lahf
addb
cld
sub
add
arpl
push
add
test
jg
push
aaa
call
mov
popf
inc
adc
cmp
jns
adc
in
or
sarl
enter
fs
push
add
dec
jecxz
adc
inc
cmp
dec
or
fldl
das
hlt
dec
fwait
jl
mov
fdivrp
cmp
sub
subl
in
fiadds
mov
or
sub
and
iret
rcrb
push
jne
pop
hlt
sub
mov
int3
inc
cwtl
insb
leave
or
mov
out
jle
add
pushf
jo
cmp
pusha
pop
sub
scas
add
pop
js
adc
cmp
scas
lahf
jmp
mov
push
int
das
sub
sarb
pop
add
jbe
scas
cltd
sbb
fiadds
inc
hlt
jmp
aas
test
mov
or
mov
outsl
mov
or
mov
lret
mov
jmp
pusha
test
mov
shlb
cld
ljmp
in
cwtd
jmp
add
cmpb
xor
jb
cltd
mov
pop
loope
mov
cmp
adc
sub
stos
dec
shll
jl
popa
aas
cld
bound
add
adc
sbb
std
mov
lods
std
mov
push
lret
add
aaa
mov
or
push
fnstsw
or
pop
int
add
ret
pop
cmpsb
cmp
ret
cs
push
mov
pop
mov
push
push
mov
out
mov
push
xchg
adcl
xor
inc
clc
les
clc
sub
mov
add
add
and
enter
jmp
daa
push
or
cmp
mov
pusha
aaa
shlb
es
int3
jmp
daa
inc
int3
adc
test
xchg
mov
hlt
adc
inc
enter
add
aas
std
mov
aas
lods
jae
lret
jbe
cmp
stc
out
or
std
mov
or
add
mov
loopne
xorl
xorl
cmp
fld
add
cwtl
fdivl
dec
xchg
ret
inc
loope
ret
inc
and
cmpb
cmp
mov
cmp
pop
cmp
xchg
mov
in
mov
aam
cli
add
int3
fcoml
inc
inc
scas
fcmovbe
push
add
or
sub
lcall
lods
cmpsl
fiadds
xor
mov
sub
cwtl
ss
cmpl
aaa
adc
mov
std
adc
or
or
push
into
jnp
ret
mov
ret
mov
add
ds
add
adc
cld
xchg
arpl
add
sub
add
add
and
add
or
and
gs
adc
xchg
lret
jb
push
push
call
add
mov
add
push
add
push
cmpsb
ljmp
cld
call
lods
movsl
add
je
pop
std
push
leave
movsl
jae
movsl
xor
cmp
shr
movsb
std
mov
add
ljmp
test
push
test
lock
movb
add
lock
call
jecxz
mov
enter
xor
push
call
add
addb
sub
mov
rorb
out
incl
inc
call
sarl
mov
insb
mov
cmp
or
push
xchg
jae
or
cmc
or
xchg
lcall
push
xchg
pushl
stos
mov
pop
movsb
lock
mov
movsb
mov
lret
push
mov
cmpsb
xacquire
mov
fadds
inc
or
leave
cmp
mov
or
rcrb
jge
xchg
inc
add
mov
jno
and
mov
add
pop
inc
cmp
scas
jmp
test
jnp
mov
xor
stc
or
dec
decb
push
adc
or
fcomip
xchg
inc
add
jg
cmpsb
add
and
inc
out
push
adc
push
cwtl
xchg
jb
or
addb
mov
add
shr
jg
add
add
fadds
scas
jmp
ljmp
add
cli
pop
shlb
dec
push
jb
adc
ljmp
mov
pushf
xchg
mov
jle
js
mov
rcll
inc
dec
mov
and
mov
decl
hlt
jne
mov
add
test
jge
adc
pushw
add
mov
out
sub
mov
es
lods
stos
ljmp
jo
int3
xchg
das
in
push
divb
and
dec
hlt
inc
adc
mov
lcall
out
fildl
jmp
scas
add
call
jmp
insb
into
out
popa
xor
add
push
hlt
cld
fisubrs
or
jne
test
ja
cld
inc
clc
mov
ret
pop
test
fdivp
ljmp
mov
inc
mov
js
mov
jg
add
mov
pushl
xchg
lds
test
xchg
mov
adc
addr16
mov
stos
andb
add
aas
shl
mov
or
insl
jbe
adc
std
call
cmp
enter
or
adc
cmp
add
xchg
sarl
shl
push
mov
movsb
adc
das
shr
lock
ficoml
les
sub
jmp
add
cmp
mov
push
cltd
add
xchg
push
add
add
adc
mov
sub
cwtl
add
sub
mov
adc
or
out
mov
mov
xor
outsl
icebp
jb
pop
les
add
clc
or
out
adc
jl
notb
cmpsl
add
add
andb
test
and
jp
movsb
pop
aas
jle
outsl
inc
add
jne
and
cwtl
xor
aad
fidivrl
les
fwait
mov
push
adc
out
rclb
push
xor
sub
sbb
pusha
adc
mov
mov
outsl
mov
insb
mov
pushf
mov
mov
cmp
mov
dec
xor
push
dec
add
je
insl
adc
sbb
add
sbb
stos
push
mulb
aas
xor
inc
sbb
jg
arpl
ds
jae
fadds
mov
jnp
std
inc
gs
jae
mov
cwtl
mov
xchg
std
js,pn
cld
pushf
dec
mov
mov
clc
bound
dec
mov
xchg
add
test
push
shlb
add
add
sbb
out
fmulp
lea
or
cmc
js
inc
in
inc
in
xlat
or
insl
fs
mov
jp
std
outsl
fs
jp,pt
xor
stc
add
gs
arpl
stos
fwait
arpl
sub
adc
gs
jne
fs
rclb
cmp
shlb
add
add
add
imulb
out
fucomi
adc
push
and
pop
dec
arpl
ljmp
incl
lea
daa
xchg
and
or
or
sbb
mov
inc
idivb
push
repnz
inc
cmp
inc
adc
pushf
mov
divl
call
lcall
sub
or
add
adc
lcallw
lahf
adc
ss
xchg
xchg
adc
pop
push
or
add
hlt
inc
add
clc
mov
sub
out
in
adc
nop
dec
cmc
xchg
nop
push
or
mov
xchg
fiadds
cwtl
sbb
sub
dec
fildll
push
test
mov
add
shr
pop
push
or
fldt
adc
push
or
inc
fstl
fwait
inc
in
mov
fildll
repz
xchg
outsl
dec
lock
out
sub
and
adc
xchg
adc
lds
movb
add
jmp
repz
scas
push
or
jmp
add
jno
lds
movb
add
jmp
mov
sbb
std
sahf
xchg
inc
sub
mov
cmp
std
jle
inc
sub
mov
sbb
std
pop
div
push
fs
jmp
inc
fcomps
add
mov
mov
inc
or
xchg
inc
or
mov
stc
add
add
aad
sti
pushl
sbb
pop
nop
cld
ss
fstl
test
test
add
lods
leave
inc
ljmp
pusha
sti
adcb
jne
pusha
jbe
addr16
rcll
add
call
imul
inc
aas
push
leave
stos
add
ljmp
sti
ss
fstl
sub
adc
dec
aas
add
pop
fwait
in
adc
std
add
ss
out
sbb
call
mov
in
push
lcall
std
sbb
repnz
adc
xchg
and
test
add
lahf
ret
sub
mov
imul
or
imul
std
add
test
test
sti
cmpb
push
add
outsb
popf
or
imul
xchg
add
add
sarl
mov
out
rolb
and
daa
fldt
imul
cltd
imul
test
pop
adc
popl
mul
sub
test
imul
test
push
adc
inc
or
pop
push
fldcw
subb
add
inc
out
or
sahf
xchg
rcr
pop
add
add
lods
and
sarb
out
add
mov
test
inc
add
adc
lods
jns
mov
lahf
and
sub
push
shr
pushf
std
ds
and
sub
jle
out
adc
mov
xchg
and
jmp
mov
movsl
xchg
scas
xchg
push
in
mov
fimull
jle
adc
lret
mov
adc
aad
jne
or
mov
out
push
mov
or
dec
orb
adc
add
test
add
mov
inc
int3
sub
pop
sub
shld
aas
ja
add
mov
mov
add
int3
out
add
add
sbbb
xchg
ret
pop
test
push
test
out
add
mov
xchg
or
xor
push
add
aas
mov
inc
popa
sti
incl
pop
sbb
adc
pushf
adc
inc
add
rolb
mov
and
add
shlb
and
push
mov
mov
mov
dec
sbb
ret
rorb
scas
and
lcall
mov
jmp
xchg
rorb
icebp
mov
jmp
or
shlb
inc
mov
cwtl
mov
xlat
xchg
fsubrs
data16
pop
or
imul
inc
mov
add
adc
imul
cmpsl
or
jl
adc
sub
hlt
or
and
add
jge
or
mov
cld
inc
out
sbb
out
push
xchg
out
adc
lods
mov
hlt
xchg
addl
adc
jo
xchg
push
xor
sbbl
add
cltd
pusha
adc
push
insl
mov
adc
add
rorl
push
ficoml
sub
adc
adcl
popa
xchg
adc
or
add
jmp
push
or
mov
adc
and
inc
in
xchg
std
cltd
add
adc
xchg
xchg
je
add
and
jmp
push
movsl
mov
cmpb
or
adc
fiadds
or
into
mov
test
lods
add
test
add
xorl
cmovo
divl
jns
clc
jmp
add
in
nop
mov
or
shl
jp
jp
incl
add
mov
jge
call
pop
adc
in
decl
test
jp
pushl
add
std
mov
inc
clc
sbb
pop
jp
jge
out
ja
ljmp
xor
fildll
add
mov
or
adc
add
lcall
push
es
adc
add
add
adc
push
test
mov
add
mov
ljmp
pop
test
test
jge
adc
dec
cld
js
xchg
js
add
add
test
mov
mov
adc
mov
mov
stc
shl
add
adc
test
sbb
leave
or
add
mov
out
jg
std
out
jns
jp
jl
xchg
cmpl
out
rorl
repnz
imul
pop
lea
jecxz
adc
and
add
xchg
inc
lods
loop
ds
cwtl
adc
sub
rolb
imul
inc
add
movhps
add
adc
out
add
xchg
cmp
or
rolb
mov
xchg
mov
fisubs
jle
inc
mov
adc
ds
cmp
sbb
sub
or
pop
adc
cmp
mov
jo
aaa
mov
push
add
xor
adc
mov
cli
subb
test
cli
inc
fmuls
add
pop
jne
mov
aad
or
mov
jae
sbb
ror
adc
je
mov
xchg
shll
cli
sub
or
mov
xchg
or
imul
adc
test
add
cmp
adc
xor
hlt
mov
jg
mov
testb
jae
add
adc
jl
sub
decl
inc
lock
add
add
add
pop
inc
aad
inc
and
out
jp
sti
xorps
out
push
test
mov
adc
xor
mov
xchg
push
sub
icebp
cli
xchg
mov
addb
lcall
mov
and
call
sbb
xchg
adc
push
sbb
push
mov
push
inc
adc
mov
adc
mov
push
js
and
pop
add
or
inc
add
xor
or
or
rcll
mov
add
sub
invlpg
add
jg
push
adc
out
xchg
inc
xor
aaa
shlb
stc
test
add
push
mov
subl
out
add
mov
mov
jmp
dec
jne
cmpsl
or
push
xchg
add
dec
nop
shl
fisttpl
jg
mov
cwtl
cmp
pop
push
clc
pop
sbb
mov
adc
push
add
push
add
lahf
jnp
imul
add
mov
add
call
jae
jp
sub
adc
call
sbb
add
movsl
push
shr
call
jmp
push
dec
int
pop
dec
jmp
adc
add
pop
clc
mov
sets
or
jmp
imul
fcmovbe
ja
push
add
int
std
push
xchg
rorb
clc
call
push
decb
jns
push
cli
sub
clc
test
in
call
mov
mov
mov
xchg
xlat
daa
dec
adc
add
xor
xchg
imul
or
mov
or
cmpsb
mov
mov
add
cmp
pop
push
mov
jne
pop
inc
dec
movl
data16
jb
outsb
add
adc
inc
dec
lcall
and
lahf
mov
or
call
ret
lahf
mov
push
xchg
add
sbb
mov
nop
push
cmp
inc
add
add
cltd
jp
and
ret
jbe
pop
add
lcall
pop
jb
popa
cmc
cltd
lcall
xchg
in
ljmp
adcb
add
xchg
bound
lcall
sbb
popa
cltd
loop
testb
push
popf
loope
lcall
pop
repz
addr16
add
test
jnp
xchg
or
add
ret
fildll
outsb
inc
mov
push
or
idiv
mov
jl
pop
loope
sub
mov
push
outsb
mov
jno
movsl
sarl
sub
nop
or
add
out
pushl
cmc
cld
aam
lock
jmp
jp
lods
push
xchg
inc
aas
xchg
std
inc
add
xchg
or
std
ss
es
xchg
or
clc
cwtl
std
pushf
fisubl
pop
cmpsl
sti
rol
adc
mov
mov
test
into
jb
clc
pop
ret
sub
inc
mov
pusha
dec
xorb
xchg
aaa
es
push
or
inc
inc
mov
xchg
xchg
xor
or
add
add
mov
jae
add
sarb
xchg
mov
mov
xchg
jae
mov
ljmp
add
ret
jge
call
pop
adc
sub
or
ljmp
fsubs
mov
iret
mov
sarb
push
in
shlb
ljmp
push
mov
add
or
repz
inc
add
sub
call
outsl
ja
sbb
inc
add
sar
out
pop
mov
mov
sti
or
jecxz
mov
cltd
or
cld
mov
lcall
outsl
adc
or
getsec
adc
sti
mov
lock
clc
into
ja
adc
daa
aaa
adc
mov
clc
into
das
and
adc
add
iret
ss
dec
ret
sti
mov
mov
clc
into
mull
xor
pop
cmp
mov
ljmp
clc
into
out
add
pop
clc
push
cmp
jnp
ret
leave
mov
mov
jo
sbb
cmp
ret
or
push
pusha
xor
and
mov
cltd
or
push
ret
loope
add
outsl
js
out
xchg
stos
xchg
fmull
sub
rcrb
cmpsb
std
mov
popa
cmp
xchg
or
mov
sub
sub
sub
fstl
xor
jmp
dec
test
jmp
mov
sbbl
add
add
les
or
adc
add
add
adc
adc
adcl
sub
mov
loopne
rolb
call
mov
add
std
into
fwait
xor
call
push
iret
gs
cli
pushl
add
lea
decl
or
sbb
inc
cvttps2pi
lods
cmpsl
jp
add
sbbb
jp
lea
push
call
push
xchg
addr16
inc
loopne
pusha
push
inc
adc
hlt
or
lods
xchg
lods
jl
add
inc
or
out
inc
cld
push
test
add
in
mov
in
pop
push
movb
adc
testl
jbe
pop
std
jbe
cmp
push
xchg
frstor
out
mov
add
or
adc
in
jp
nop
jle
add
lcall
mov
lcall
rolb
jbe
ljmp
call
fdecstp
adcl
add
add
push
mov
adc
xor
sahf
add
pushf
ss
add
jmp
add
sub
push
std
pop
xchg
sbb
sbb
and
xchg
stos
sub
int3
add
mov
test
add
mov
sub
mov
xor
add
add
add
add
ret
lahf
xor
add
lods
call
incb
sarl
popa
jbe
jnp
mov
xchg
in
add
jg
repnz
std
jmp
lahf
jg
call
lods
xorb
ds
cmpsb
rolb
adc
jmp
jmp
add
cmpsb
rolb
adc
or
jb
add
adc
adc
jle
call
push
xor
xchg
pop
call
inc
pop
adc
cld
ds
xor
cmp
mov
add
xchg
mov
or
loopne
stos
adc
cmp
mov
imul
out
std
cltd
cld
lcall
rorb
ja
add
jns
add
or
cld
mov
mov
or
fdiv
lfs
add
mov
lea
int
and
std
incl
clc
add
montmul
cmpsb
shl
insb
add
das
xchg
push
cmp
xchg
lea
aas
adc
shlb
cmc
adc
add
push
rorl
fsubrp
or
mov
dec
xchg
xchg
leave
inc
adc
gs
xchg
xchg
mov
jb
test
cmc
or
jne
adc
imul
add
incl
shlb
lret
adc
aas
jns
sbb
sub
ss
sbb
dec
push
add
jmp
add
inc
lret
cmp
push
iret
jp
stos
add
sub
cmova
adc
dec
jnp
jmp
jbe
mov
ret
adc
stos
movb
fs
sarb
jg
cmc
testl
fbld
push
inc
jecxz
dec
lds
jne
add
xchg
and
add
out
rorl
movsl
add
lods
mov
adc
add
sbb
fcmovnbe
jle
mov
push
movsb
xchg
add
push
mov
add
jmp
out
mov
jge
out
aad
hlt
repnz
mov
fs
add
add
adc
xchg
jl
push
xchg
adc
add
add
test
adc
pushw
sub
data16
das
std
jbe
repnz
xchg
test
fs
push
add
daa
adc
mov
or
xor
pop
sbb
js
xchg
sar
jo
out
inc
hlt
add
add
js
jno
add
add
push
addr16
push
push
nop
idiv
push
xchg
add
das
add
add
in
ja
mov
cmpsb
cmp
mov
int
in
test
lret
cmpsb
cmp
sub
add
ja
sbbl
xor
add
lret
testl
out
imul
shll
addb
mov
jae
add
adc
hlt
sbb
add
adc
std
and
nop
cmp
jg
push
sub
add
or
lea
add
xchg
and
das
std
push
stos
aam
mov
xor
sub
add
and
hlt
shr
testb
mov
add
add
add
xchg
sub
addl
add
loop
xchg
xchg
test
mov
cwtl
test
jg
jnp
xchg
jl
subl
adc
jnp
orb
iret
clflush
xchg
insb
sub
add
sub
out
xchg
sbb
out
and
roll
xor
fadds
in
mov
add
rorl
shll
int
inc
xchg
jge
push
xchg
sti
xchg
adc
in
mov
xchg
std
inc
xchg
mov
push
pop
xchg
sub
dec
push
daa
sbb
test
adc
or
add
and
call
daa
or
orl
gs
add
out
fs
decb
cwtl
xor
les
imul
add
add
decb
pcmpeqb
clc
or
cmp
mov
std
decl
dec
add
nop
xchg
cld
pop
cli
dec
call
testb
add
dec
dec
mov
add
mov
test
adc
test
subl
stos
testb
push
or
sarb
and
xchg
ss
jne
pushf
jnp
xchg
pushl
nop
jle
adc
dec
add
mov
call
sub
xlat
shl
xor
jle
ja
mov
adc
add
dec
das
jle
cwtl
in
xor
pop
jle
int
sbb
sbb
add
ljmp
adc
add
mov
sti
mov
cmp
std
rcrl
add
cmpsb
std
push
les
pop
mov
pop
sbb
nop
testb
sub
mov
ret
call
insb
xchg
jne
jge
add
pop
jge
sbb
ret
fnsave
and
mov
ja
or
add
ja
mov
psadbw
add
mov
push
lods
pop
arpl
cmpsl
ja
xor
cmpl
pop
inc
flds
icebp
mov
push
and
testb
movsb
jge
jl
ja
cmp
fnstsw
add
std
scas
add
sub
ljmp
or
jne
lea
sar
pop
imul
xchg
mov
jmp
popl
call
gs
add
xchg
adc
add
inc
mov
jae
es
fnstcw
adc
mov
sbb
mov
test
push
add
je
add
je
fidivs
fistpl
movl
jmp
aad
sti
incl
sti
les
stos
ja
pop
mov
add
fs
call
into
add
add
sti
call
mov
dec
in
stc
cli
push
mov
push
xor
jmp
cli
jne
add
mov
inc
push
jg
jo
xchg
adc
adc
lret
xchg
lds
adc
jp
xchg
test
xchg
movl
ds
mov
lock
mov
ret
addl
jns
in
push
sar
stos
or
mov
call
add
jmp
add
cli
push
xchg
fidivs
add
adc
xlat
clc
pop
ret
mov
adc
adc
inc
sahf
imul
jl
ds
and
je
push
ror
mov
adc
iret
lods
hlt
add
mov
cmp
nop
jae
or
je
fs
insb
add
and
jns
jns
jns
in
xor
push
push
pop
insb
pusha
and
add
mov
dec
stc
ljmp
pop
mov
add
mov
pop
je
or
xchg
test
adc
mov
add
out
rcl
push
adc
jmp
out
cld
into
add
flds
lds
add
and
add
cmp
sub
call
repz
std
hlt
jb
push
jbe
cli
out
xorl
jb
repnz
pop
mov
adc
push
je
out
mov
mov
add
xchg
dec
imul
movsb
sbb
add
ljmp
aas
idiv
ljmp
vpunpckhwd
aas
jo
call
in
or
jg
push
mov
and
testb
mov
dec
mov
dec
cld
jne
xor
call
sti
cli
adc
jne
jae
jnp
cli
jmp
ljmp
add
pop
xchg
xor
xor
jmp
jle
clc
mov
loope
cmc
mov
pop
pushf
pushf
insl
push
xchg
or
aam
add
xor
add
and
inc
mov
aas
adc
adc
cmp
inc
rorb
lret
push
loop
aaa
add
push
push
xchg
push
push
imul
mov
or
add
add
add
lea
lock
sbb
pop
add
std
bnd
cmp
inc
lret
pop
sbb
add
lods
jl
and
add
add
cld
sub
jl
out
push
adc
push
scas
pop
out
inc
jae
loope
leave
inc
and
mov
add
jl
add
add
add
mov
mov
add
jg
cmc
je
shrb
addb
jne
test
jbe
add
add
push
cli
in
push
xchg
mov
aam
popf
xchg
sar
pop
pop
std
aam
adc
das
inc
je
in
hlt
mov
xor
push
add
jne
jp
aad
jbe
cli
add
jmp
fildl
push
add
fs
fs
shll
mov
out
mov
adc
cmpb
inc
inc
mov
adc
add
std
jnp
cltd
clc
outsb
dec
jle
or
sub
add
fwait
ret
mov
jecxz
adc
add
mov
lds
dec
out
test
add
add
adc
add
sub
cli
je
cmc
jo
mov
and
incl
add
in
add
push
push
in
sbb
lock
faddl
sub
jg
addr16
ret
inc
jg
out
sub
add
inc
add
in
adcl
mov
push
push
dec
push
call
add
arpl
jle
adc
pop
push
popa
call
lcall
add
xchg
jb
cmpsb
fidivl
and
lcall
pop
pop
sbb
add
loop
loop
loopne
rcrl
cmpsl
jl
inc
aas
aaa
sbb
pop
jle
xchg
inc
jb
lea
jno
ds
add
movsb
xchg
fistpl
sub
add
jb
sbb
pop
addr16
fcompl
adc
or
shld
dec
add
iret
popa
add
addr16
add
or
orl
mull
xor
cmp
cld
jnp
test
mov
jge
or
pop
push
add
add
sarl
adc
out
add
ret
pop
jae
or
add
push
shll
aas
daa
pop
push
daa
add
cs
dec
rolb
out
out
gs
shl
sbb
add
icebp
inc
sub
mul
pop
ret
imul
addb
dec
pop
ret
ret
das
push
popa
stos
adc
push
dec
adc
out
add
fbld
andb
jns
icebp
sbb
and
sbb
push
bound
add
ds
pop
js
push
adc
call
add
jmp
and
ljmp
pusha
sub
mov
rcrb
sar
inc
sub
cmpsl
pop
popa
movb
add
fcoml
sub
mov
cwtl
inc
add
call
incb
add
decl
xchg
adc
xor
jmp
mov
lock
push
dec
cld
adc
jmp
or
jg
pop
je
jg
in
adc
sar
sbb
mov
imul
jbe
push
add
adc
push
stc
incl
push
pusha
jl
lcall
add
add
imul
adc
mov
add
sbb
adc
xor
push
dec
add
aam
add
inc
test
adc
inc
cmp
mov
jp
push
int
rcll
sub
sbb
bound
lods
add
add
iret
pop
mov
dec
inc
imul
add
lea
add
cmpsl
add
sbb
daa
add
add
stos
jp
test
jge
add
inc
push
out
daa
push
out
pop
push
daa
testl
push
cmpsl
add
into
jno
push
push
lahf
add
add
rcrl
cltd
addr16
outsb
loope
loop
adc
jg
add
insb
add
outsb
loop
lods
pop
in
out
adc
cmpsl
and
out
push
out
repz
dec
mov
aad
add
ret
shlb
inc
dec
sbb
inc
inc
rcll
leave
rclb
leave
shlb
repz
adc
ljmp
mov
push
divb
repz
add
push
inc
push
fiaddl
flds
add
inc
or
xchg
xchg
sub
xchg
xor
rcr
sbb
rcl
mov
sub
out
fcos
fstpl
xchg
gs
sbb
ljmp
lock
in
fs
ss
loopne
call
mov
sbb
add
clc
cli
xor
les
ret
ret
add
in
add
inc
sub
mov
xlat
call
sub
jae
shlb
pop
call
sub
jae
cmpsl
lods
incl
xchg
adc
xchg
lds
cmp
cmp
sti
loope
push
sbb
xor
inc
adc
sarb
sar
lods
xor
push
add
movsl
insl
pop
mov
add
xchg
test
incl
pop
or
sbb
adc
jae
aad
iret
popa
jecxz
or
push
add
push
jecxz
lods
dec
std
and
push
incl
leave
pop
ljmp
lock
sbb
jl
ja
pop
add
adc
add
cmp
cmpsl
out
enter
xor
arpl
mov
scas
add
mov
orb
ds
adc
fmull
shl
shr
incb
sbb
cli
push
arpl
mov
shr
loop
scas
push
add
ret
sahf
ja
pop
enter
in
cld
fwait
add
and
out
push
les
jge
add
adc
push
subl
pop
call
shl
sbb
jle
mov
xor
idiv
mov
fiaddl
cmpsb
xor
test
call
push
outsl
add
imul
imul
stc
gs
jmp
pop
cmp
loope
mov
add
callw
data16
gs
lock
push
add
test
adc
jae
stc
mov
xor
rolb
and
add
icebp
mov
pop
inc
hlt
ljmp
add
scas
std
ljmp
out
pop
fdivr
xor
out
and
ficoml
pushf
add
jge
incl
add
pop
dec
push
pop
fcoms
enter
push
adc
cli
cmp
push
or
mov
clc
les
xor
adc
je
inc
and
call
mov
push
fildl
fimull
xor
cld
add
or
dec
adc
and
or
fisttps
jae
gs
fisttps
cltd
add
mov
cmovo
addr16
pop
mov
lret
out
push
xor
fildll
add
dec
jmp
inc
jmp
std
add
push
inc
adc
inc
jle
push
dec
sub
mov
push
add
cwtl
add
loop
add
sbb
fldcw
and
add
cltd
mov
loopne
adc
fs
add
std
rolb
add
add
mov
out
out
mov
in
lds
icebp
cmc
add
data16
cmpsl
pop
cmp
dec
sub
jnp
iret
jno
stc
movsb
fwait
data16
sub
mov
fisubrs
cld
cmpsb
js
pop
lret
pusha
cld
sti
push
add
inc
or
jp
push
add
inc
or
pushf
jp
test
inc
mov
popf
add
sbb
mov
sbb
mov
add
jmp
lret
sub
cld
mov
push
pusha
test
je
add
clc
cmp
push
inc
sbb
hlt
adc
aas
jmp
adc
sub
or
sub
ljmp
popl
add
shr
out
add
and
aam
insb
pop
fisubrs
adc
inc
or
add
and
pop
xor
fistpl
test
out
bound
cmc
add
cli
push
out
and
rolb
sti
je
or
sti
xor
adc
adc
jmp
cli
bswap
dec
mov
jmp
or
jo
ret
es
sti
jbe
fcom
ljmp
in
test
add
mov
add
mov
add
mov
adcl
std
shl
rorb
xlat
inc
hlt
adc
cld
adc
adc
dec
sbb
add
mov
in
inc
je
jecxz
or
lock
or
add
cmpl
gs
push
add
push
sti
add
aad
add
ds
bound
jg,pn
rcrb
fdivrp
adc
std
test
lcall
inc
pop
enter
inc
shrl
cmc
imul
inc
clc
mov
stc
mov
cmp
pause
push
push
mov
adc
out
mov
fimuls
push
call
leave
cmpsb
lock
pop
cltd
icebp
out
test
push
stc
add
add
cmp
inc
cmpsl
dec
push
add
mov
adc
daa
xchg
lret
ret
fsubrp
in
or
cmp
xor
shl
dec
stc
cmpsb
ret
dec
inc
jecxz
shlb
and
inc
sub
mov
sbb
mov
clc
out
es
push
xchg
add
jmp
push
std
insl
push
aad
or
stos
add
adc
dec
test
mov
dec
pop
ret
xor
fcmovnu
rcrb
ss
out
in
std
jb
add
add
push
sub
push
xchg
adc
mov
repz
pop
push
cmp
data16
mov
adc
hlt
push
pop
push
jmp
cld
xchg
push
mov
shl
mov
xchg
mov
and
push
shl
cmp
sub
add
push
les
cltd
cld
adc
sbbb
jnp
jo
pusha
cmpsb
repz
shlb
in
inc
std
daa
jns
std
lds
push
incl
lea
mov
mov
decl
aas
std
mov
xor
xor
ja
and
cwtl
push
push
int
stc
push
add
or
mov
daa
xchg
xchg
mov
lahf
sbb
adc
inc
out
push
add
push
push
add
ffreep
sti
or
js
mov
es
inc
xchg
mov
js
jae
sbb
pop
inc
ja
cld
add
pusha
mov
aad
jle
or
jo
pop
std
cwtl
lods
or
fdivr
pop
adc
add
sar
lods
or
outsb
dec
ret
mov
cmp
stos
sar
mov
push
cmp
adc
pop
adc
ss
insl
popa
push
add
add
pop
xchg
mov
aam
inc
adc
ret
fisubs
sbb
inc
in
arpl
mov
cld
aas
and
out
mov
push
mov
rcr
mov
roll
aam
cmp
add
add
imul
pushf
or
stc
add
out
jle
ffreep
out
loop
clc
cli
out
cmpsb
add
inc
add
cmp
xor
and
add
add
imul
enter
test
addr16
cmpsl
cld
rcrb
test
adc
rcrb
mov
dec
imul
add
js
inc
loope
roll
leave
xor
xor
fldenv
adc
subl
or
inc
adc
add
xchg
in
jmp
adc
xlat
cltd
mov
push
add
inc
dec
adc
adc
or
jmp
add
clc
sub
add
add
sub
inc
jmp
or
add
pop
nop
xchg
clc
mov
add
out
cli
adc
sub
std
decl
test
inc
sbb
inc
hlt
rcrl
add
js
dec
adc
lret
jae
add
push
adc
jo
jle
je
cmp
add
add
mov
cld
jne
mov
adc
int
mov
ds
push
fidivrs
adc
ljmp
icebp
lahf
out
imulb
pop
adc
push
sar
sbb
cmpsb
ja
xlat
cmc
jmp
add
add
add
inc
cmp
gs
sbb
movsl
inc
adc
test
adc
out
pop
pop
adc
sar
sub
dec
add
dec
imul
in
out
add
call
pop
push
jmp
mov
js
jae
addr16
and
daa
add
add
add
push
insb
pop
daa
push
into
inc
rorb
adc
sar
inc
dec
push
adc
push
inc
push
orb
scas
pop
leave
loop
jecxz
push
push
call
ja
push
jbe
dec
dec
out
pop
mov
push
pop
add
add
movsb
pop
inc
xlat
add
jno
in
mov
adc
add
cmp
out
shrl
lods
pop
lcall
push
inc
and
mov
call
push
cwtl
xor
xchg
out
fstpt
adc
rcl
jle
loope
int3
and
testb
adc
add
aas
jmp
fadds
mov
add
sbb
push
pop
mulb
mov
sar
adc
std
sbb
pop
pop
push
sbb
adc
std
cld
mov
aas
jmp
out
push
std
jmp
xchg
in
fildl
add
fldl
bound
loope
add
mov
jne
cmc
mov
cli
jne
ret
cmpl
add
cmp
add
dec
mov
xor
out
rolb
fs
cmp
mov
push
add
mov
movb
in
subl
decl
jno
notb
lret
imul
jmp
testl
cld
jo
jmp
pusha
ljmp
mov
andb
std
in
aas
add
add
push
ret
call
out
sub
std
ds
into
push
clc
int3
fdivr
cs
push
dec
fs
shrb
call
push
xchg
pop
jge
aas
add
decl
loopne
std
adc
cmpl
std
fwait
addl
adc
cmc
loope
jle
lret
push
data16
dec
inc
adc
inc
and
sbb
push
pop
mov
data16
add
add
rolb
mov
mov
add
clc
ret
data16
sbb
pop
out
popf
xchg
dec
rolb
aaa
add
push
mov
dec
rolb
sbb
push
fiadds
fisttpl
mov
fnsave
jmp
mov
movsb
fmul
cmp
cmpsb
ret
out
sbb
inc
xchg
idivl
push
add
ret
add
shll
add
dec
fisubrs
idivl
adc
and
les
mov
cld
aam
out
aas
jmp
push
push
ret
add
stos
adc
jae
jg
adc
push
push
push
testb
test
out
mov
out
les
gs
push
scas
adc
pop
sub
add
ret
mov
adc
ss
enter
push
dec
mov
decb
je
enter
xchg
pop
ret
movl
add
inc
std
mov
add
inc
std
jg
add
inc
push
push
call
sarb
add
inc
std
aaa
add
xchg
lds
add
sbb
xchg
popf
push
sbb
repnz
push
push
test
add
pop
call
add
add
add
std
cld
cli
adc
inc
mov
incb
xor
add
xchg
or
inc
adc
cld
sbb
push
jae
jo
adc
sub
call
pop
stos
cld
add
add
repnz
adc
push
jmp
popa
push
jae
add
decb
mov
push
mov
scas
mov
push
lods
and
pop
mov
loop
lods
push
push
xchg
out
sub
or
call
cmp
popf
dec
sar
push
or
fnstcw
test
sbb
in
jmp
sbb
roll
fucomi
add
pop
into
xor
pop
mov
loop
push
aam
mov
cli
jmp
adc
xchg
lods
insl
hlt
and
add
sbb
sarl
jge
dec
jne
cmp
mov
inc
movsl
out
jno
push
or
leave
or
push
add
out
push
and
fld
js
cld
cmpsb
inc
in
jbe
addr16
mov
sbb
add
repz
push
add
cmp
shl
shrl
call
cs
mov
cltd
inc
je
mov
mov
push
dec
mov
or
aas
jmp
ss
imul
jecxz
and
jecxz
and
jecxz
pand
test
adc
stos
and
jb
jg
in
add
mov
scas
xor
rolb
mov
cld
adc
adc
jns
xchg
pop
mov
orb
lret
aas
movl
inc
lods
dec
push
sub
sub
inc
test
shlb
clc
repz
jmp
or
add
push
incl
cmovo
jae
add
xor
adc
std
test
nop
shr
add
stos
jl
sub
add
xchg
mov
fists
in
cmovo
xchg
cmc
clc
pushl
div
incl
fmuls
popa
add
pop
or
sbb
sti
cmpsb
loop
or
stos
dec
or
xor
cld
push
jl
mov
mov
pop
add
jb
add
pop
mov
pop
add
push
dec
or
sub
adc
pop
test
lods
cmc
inc
nop
sub
add
pop
rcll
push
inc
or
call
sar
pop
pop
out
cmp
jb
pop
pop
testl
gs
push
enter
add
ss
out
adc
mov
jmp
out
adc
mov
test
cmpsb
add
movsb
mov
jbe
jmp
adc
pop
mov
es
imul
sub
xchg
dec
push
xlat
out
dec
jl
mov
outsb
inc
inc
testb
loop
adc
out
mov
out
es
inc
cmp
push
jle
call
add
sbbb
adc
add
orb
mov
divl
or
jge
gs
aam
push
sbb
lods
cmpb
into
add
shrb
xor
ret
loop
sbb
dec
ret
adc
add
adc
testb
inc
or
jb
jg
pop
in
cld
jge
add
call
cld
pop
jmp
std
adc
adc
je
add
dec
lds
sub
pop
mov
mov
add
add
push
jmp
push
inc
xor
pushl
jne
test
add
rol
xchg
add
orb
and
add
and
jle
add
aaa
add
cmp
xor
and
std
add
int
mov
test
add
cld
popf
dec
xchg
or
movsl
outsl
in
std
adc
dec
xchg
xor
mov
in
dec
push
inc
lahf
cmc
jnp
sbb
xchg
ljmp
jle
test
dec
pushl
lret
dec
mov
mov
pop
sti
xchg
cmpsb
mov
and
out
aas
adc
inc
jae
sarl
jmp
iret
jb
ret
mov
and
scas
adc
add
addb
adc
dec
je
cmp
sar
dec
cmp
add
shll
dec
and
ret
jge
mov
insb
stos
dec
add
fld
out
pusha
inc
cmp
add
add
jno
repnz
cmp
arpl
mov
and
fld
mov
ja
cmpsl
int3
call
add
or
int3
xchg
cli
js
adc
mov
ja
dec
add
fld
subw
loop
nop
add
inc
hlt
jmp
shl
push
pop
jmp
in
inc
jae
mov
add
nop
incl
stos
mov
add
mov
js
push
dec
jg
movsl
add
jmp
xor
dec
bound
mov
int
in
adc
add
int
pop
xchg
sbb
jmp
add
shll
or
pop
repnz
fcmovnbe
inc
mov
inc
std
aad
jp
or
fisubrl
sti
inc
lret
mov
jp
or
xor
add
adc
call
add
popa
in
gs
lock
sub
adc
dec
and
test
out
popf
test
or
dec
cld
fbstp
call
call
shlb
cld
adc
and
add
push
cmp
clc
leave
inc
std
test
or
push
mov
in
stc
stos
arpl
add
dec
push
xchg
leave
andl
decl
xor
sbb
ljmp
push
fsubp
ss
js
cmc
popa
mov
lea
aad
adc
cld
cld
jmp
mov
std
push
fiadds
pop
jl
icebp
daa
sar
test
jae
or
jmp
and
idivb
adc
clc
addb
loopne
add
pushf
sbb
dec
std
sahf
fldl
mov
add
iret
mov
adc
pop
into
or
sbb
inc
pop
xchg
cmc
add
push
or
add
out
inc
or
ja
sbb
mov
in
jbe
out
add
clc
lods
or
clc
js
sub
in
and
and
icebp
bound
int
movb
push
add
jmp
int3
push
dec
les
and
lock
cmp
fsubr
add
mov
mov
cmpsb
inc
out
ror
mov
sbb
out
adc
out
sub
push
jbe
pop
sbb
out
jne
aam
add
jmp
inc
out
cld
pushf
inc
inc
jae
fxch
pop
add
inc
std
push
mov
inc
je
add
ss
adc
and
add
cmp
inc
std
fsubp
sbb
adc
or
pop
pop
stos
stc
inc
push
bound
sub
push
mov
or
movb
xchg
xlat
cmpb
rcll
sub
cwtl
fcmovnbe
inc
push
outsb
out
jae
or
or
andl
lret
xor
test
xor
add
insb
cld
jmp
js
xor
jns
lods
mov
je
jnp
lds
daa
mov
xor
inc
mov
mov
jl
out
or
sub
jp
jmp
ss
and
or
je
jb
push
nop
imul
adc
pop
pop
pop
push
mov
outsb
add
jne
fisubrl
cmpsl
adc
pop
xlat
loopne
add
push
sub
data16
xchg
add
push
icebp
adc
adc
sub
mov
scas
mov
xchg
adc
sub
push
loop
mov
push
cmp
js
and
gs
mov
mov
push
push
inc
mov
sub
xchg
sub
add
add
inc
adcb
mov
jmp
adcb
scas
xchg
daa
xchg
in
sub
adc
pop
xchg
xchg
add
sti
adc
iret
push
mov
mov
dec
inc
pop
cmpsl
stos
cmp
iret
or
out
xchg
dec
push
pop
imul
iret
push
mov
mov
aas
out
xchg
dec
negb
stos
in
inc
iret
ds
add
adc
cltd
cmc
fimuls
inc
lret
bound
inc
aam
jbe
sbb
jl
add
add
add
test
push
sub
add
pop
and
fnstcw
cmpl
inc
pop
jo
push
call
sub
jmp
lods
jl
call
adc
cld
cld
cmp
jmp
add
xchg
inc
or
add
add
je
add
fwait
ret
jnp
lahf
iret
inc
fs
mov
insb
pop
mov
mov
jge
pop
enter
adc
out
ds
fmuls
pcmpeqb
rorl
jmp
add
std
ljmp
add
push
in
mov
incl
les
add
push
adc
add
mov
add
xchg
call
mov
out
outsb
adc
sub
mov
add
add
jmp
imul
mov
std
xorb
cli
mov
push
push
xchg
shlb
ljmp
mov
imul
aas
push
add
lahf
inc
call
push
repz
or
xchg
scas
test
push
sub
xchg
lahf
dec
push
push
push
lcall
stos
call
in
dec
push
sbb
shrl
xchg
or
sahf
sub
cmp
xchg
mov
scas
xor
stc
dec
cmp
push
out
jno
rolb
sbb
add
les
fisubl
rclb
stos
jge
into
sub
xchg
add
mov
mov
scas
cmp
sub
mov
sub
cld
push
nop
dec
outsb
sub
test
jmp
outsl
test
sub
test
jb
push
mov
mov
js
add
add
push
xchg
add
mov
in
jl
add
lea
add
inc
mov
mov
hlt
mov
pop
or
ds
cmc
adc
fidivrs
out
adc
push
pop
aas
cmp
cmpsb
push
sub
adc
add
into
or
add
testb
or
pop
mov
push
cmp
sub
add
dec
aad
lea
call
add
adc
mov
lret
adc
mov
mov
aaa
adc
add
sbb
std
fmull
jmp
stos
cmc
push
insb
loop
andb
add
add
cmp
lea
add
add
xchg
push
incl
jns
xor
or
xchg
add
add
clc
add
add
nop
add
std
decl
shlb
jns
decl
dec
mov
test
aad
in
sbb
add
std
decl
dec
mov
cmp
enter
push
stc
add
lea
cld
call
insl
add
adc
add
imul
add
add
rorl
adc
sbb
jg
mov
mov
add
ljmp
pop
push
adc
sbb
pop
frstor
mov
into
ret
stc
out
mov
subl
sub
xor
cwtl
repnz
mov
cmp
mov
orb
mov
add
inc
add
add
xor
stc
add
add
xor
mov
iret
jecxz
aam
iret
imul
iret
movsl
xchg
aaa
out
xchg
jne
test
outsb
pop
pop
or
call
mov
cmp
or
aaa
fdivl
add
out
push
mov
ljmp
fwait
sldt
mov
fiaddl
lods
loop
jge
lods
dec
push
add
icebp
push
sub
cltd
and
sbb
movl
dec
in
mov
shl
ss
std
insl
push
lods
or
or
cmp
jo
or
shlb
js
sbb
test
push
std
aam
adc
mov
and
or
add
add
add
aaa
dec
dec
pop
std
adc
push
xor
push
inc
jbe
push
add
or
jg
cmc
inc
int
push
pop
jns
add
add
in
adc
or
add
ret
and
dec
push
test
xorps
cs
cmp
push
cld
jne
test
inc
js
jmp
add
jle
incl
dec
mov
out
mov
add
push
or
jbe
jmp
test
in
adc
jno
pushl
incl
stc
cli
mov
xchg
sub
hlt
movsb
adc
push
call
dec
cs
outsl
inc
je
scas
cmp
ret
sub
std
add
mov
jnp
movsl
cmp
ss
cmp
lahf
xchg
sub
mov
cmp
mov
xorl
mov
dec
ret
iret
push
mov
ljmp
jp
adc
cli
test
dec
outsb
xor
xchg
leave
add
and
lret
mov
ret
add
push
jge
mov
cmpsl
out
add
add
sbb
movups
daa
add
mov
cmp
cmp
ret
lret
jns
daa
add
inc
mov
mov
or
loopne
orl
push
add
out
test
add
add
outsb
cmp
jno
incb
push
cmp
inc
aam
mov
ret
add
movsb
push
add
pusha
fwait
jmp
adc
mov
std
push
inc
ret
cld
cld
out
cmovo
mov
jns
loopne
mov
std
out
loop
jae
sub
cld
hlt
shlb
cmp
mov
addb
std
cmp
mov
jecxz
xchg
std
sahf
rolb
cmp
cmp
std
jmp
add
add
pusha
cmpsl
test
aad
sub
push
insb
scas
xor
andb
ret
push
mov
jle
or
call
dec
add
inc
xor
dec
add
mov
je
sub
mov
in
xchg
iretw
call
sub
add
cmp
xlat
jmp
std
incl
add
jmp
xchg
jns
add
outsl
or
call
jmp
inc
or
inc
cmc
sbb
push
mov
add
popf
jle
push
ret
mov
dec
sar
out
adc
fimull
test
add
pop
dec
in
add
insb
sub
inc
jmp
addl
std
and
std
stc
in
std
out
inc
jae
loopne
adc
sub
out
cld
mov
xchg
rorb
add
ljmp
push
ss
sahf
fwait
cmp
sbb
or
or
push
xchg
adc
add
fcoms
out
pop
xor
adc
add
ret
inc
cmp
add
jbe
add
lds
sbb
add
mov
repnz
cmpsb
imul
dec
test
das
nop
inc
add
cmp
fisttpll
mov
inc
push
or
cmp
shl
int3
das
bound
mov
add
scas
or
jle
xchg
das
xchg
adc
add
out
ljmp
add
mov
jb
sar
mov
adc
push
or
call
arpl
add
dec
shrl
add
adc
in
out
cs
bound
jns
push
sub
insb
xlat
sub
sbb
sbb
and
sub
loope
shl
sbb
sub
je
add
xchg
mov
sti
bound
sar
add
std
xchg
es
dec
or
outsb
cmc
pop
cmc
shll
inc
add
leave
sub
mov
mov
or
stc
mov
dec
dec
decl
andb
xchg
mov
adc
push
test
call
mov
stos
cmc
je
dec
cld
je
add
adc
add
add
inc
add
fldl
push
daa
dec
cld
push
or
jne
add
push
push
adc
rolb
je
dec
jle
out
shrl
mov
or
cmpsb
sarl
xchg
xlat
mov
mov
div
fmulp
clc
xor
sbb
xchg
inc
or
xchg
jle
shlb
pop
push
push
xor
add
add
cmpsb
sti
adc
aam
fs
add
fsubrp
fildl
xor
add
or
mov
and
add
jg
js
xchg
mov
loop
outsb
mov
pop
sub
sub
inc
inc
repz
cltd
out
ss
cmp
mov
mov
cmc
dec
sbb
jle
aam
xor
loopne
dec
cwtl
add
dec
or
sub
aam
rclb
ja
into
inc
lret
scas
inc
add
xor
in
aaa
aad
js
pop
and
out
mov
es
repz
int
ficomps
lahf
imul
or
jecxz
jg
add
shrl
and
rcr
jae,pn
aad
std
fdivr
sbb
jmp
out
addl
push
mov
clc
mov
push
rclb
push
arpl
test
popf
adc
adc
jmp
jp
je
or
sub
inc
shll
xor
add
in
hlt
cli
stos
call
fisttpl
sub
ljmp
subb
js
movb
mov
dec
mov
dec
xchg
cmpsb
jo
loope
icebp
decl
add
lods
add
ljmp
lods
inc
hlt
adc
jmp
jae
shrd
ljmp
push
stos
jg
icebp
xchg
jecxz
or
lock
add
out
stc
jge
add
sbb
jne
jb
lea
iret
repz
cmp
adc
mov
and
or
jb
add
ss
sti
daa
add
xlat
loope
push
jge
stos
andb
repnz
ret
jge
mov
mov
int3
iret
shll
ds
push
ss
jns
rcll
mov
add
pushf
jno
jb
mov
std
mov
imul
sbb
mov
mov
mov
adc
add
add
jle
cmpsb
setbe
jle
outsb
add
sbb
lds
sub
mov
scas
roll
stc
test
outsb
jle
jp
sub
cli
cltd
stc
push
das
add
into
clc
outsl
mov
or
mov
push
jecxz
inc
and
cmp
cli
inc
xchg
cmp
stc
out
loop
xor
push
and
lods
add
jl
ret
outsl
cmp
add
cmp
push
aam
aad
adc
jo
inc
mov
mov
mov
cmp
pop
pop
dec
data16
add
into
dec
and
or
testl
pop
js
push
or
sub
fldcw
add
adc
mov
je
test
das
sub
call
mul
xlat
jb,pn
mov
addl
std
add
add
jle
mov
add
cmp
add
call
add
xor
std
add
test
add
addr16
ljmp
add
add
push
cld
add
repz
inc
jg
lods
add
xchg
stc
ljmp
je
out
ds
mov
inc
je
push
cmp
stos
or
adc
call
call
sub
add
add
adc
pop
test
ja
add
js
or
jge
cmc
mov
daa
mov
mov
jge
or
add
sbb
jae
sbb
jae
mov
xor
add
les
mov
testl
add
ret
ljmp
pushf
rorl
add
or
call
lcall
hlt
xlat
sbb
add
add
cmp
movsb
sub
js
fcoml
ljmp
and
in
addr16
and
sarl
xor
add
inc
shlb
inc
js
test
rclb
mov
arpl
cld
fadds
mov
add
add
cltd
out
adc
ret
rorl
jle
sub
lods
xor
jl
xor
test
jmp
add
add
bound
mov
sub
notb
dec
add
jl
ljmp
mov
mov
or
inc
jp
jo
inc
xchg
sbb
xlat
call
jg
jmp
add
add
xor
jp
inc
adc
std
cmpsb
xchg
inc
or
call
jecxz
add
adc
test
adc
std
fsubl
jp
roll
incl
daa
std
dec
xchg
inc
or
cmp
ja
test
out
data16
ljmp
test
cmp
mov
add
cmpsb
jo
imul
punpckhdq
incb
cmc
std
jmp
mov
mov
or
pop
sti
aad
pmaxsw
cld
ljmp
mov
add
mov
mov
mov
je
sbb
push
adc
xor
push
pushf
pop
add
add
sbb
sub
sbb
add
sub
lahf
cmp
out
sbb
jecxz
and
into
ret
sbb
inc
mov
aas
clc
dec
pushf
testl
aas
mov
rcrb
jl
xchg
js
fisttpll
jp
sub
sbb
les
add
add
push
inc
scas
in
xchg
add
add
jl
je
pop
ficoms
insb
test
and
insb
push
and
sbbl
test
cld
idivb
inc
bound
imul
mov
add
pop
subl
push
and
fs
and
jb
ret
dec
pushf
xchg
lret
mov
mov
and
imul
jns
es
cld
adc
lcall
sub
add
lret
fwait
pop
daa
push
sbb
popa
adc
inc
push
adc
add
mov
ret
out
fidivrs
add
test
jns
xlat
add
lahf
cld
push
imul
xor
jmp
add
rcrb
add
adc
cmp
pusha
std
cmp
adc
je
mov
sbb
sbb
sub
insb
push
add
inc
xchg
xor
repz
adc
mov
mov
cld
incl
pop
mov
into
push
pushl
filds
mov
test
lcall
add
cmc
sub
xchg
push
cmp
test
mov
std
sbb
call
inc
icebp
jne
cltd
dec
cmp
ja
sbb
push
pushl
jae
and
mov
mov
mov
sub
std
push
mov
cmp
pop
jp
ja
jmp
lcall
out
in
xor
xchg
sbb
std
ds
cld
add
mov
mov
xchg
pop
mov
push
mov
out
push
and
cwtl
outsb
jmp
cld
dec
xor
and
add
ljmp
push
adc
and
or
adc
adc
sbb
sub
sbb
xor
adc
cmp
push
inc
mov
loop
addl
add
cmp
mov
mov
imul
add
xchg
call
call
add
icebp
mov
mov
mov
xor
add
adc
out
jno
iret
push
add
sbb
push
sbb
xchg
or
pop
adc
out
iret
xchg
xchg
js
pop
or
orb
add
xchg
jmp
and
sbb
jmp
mov
and
sub
add
flds
ret
cld
jle
shl
rorb
add
or
jmp
repz
rorb
std
ss
inc
jae
mov
cld
push
xchg
xorl
inc
out
or
add
test
push
imulb
and
lock
clc
add
push
adc
mov
fmull
dec
jmp
loope
inc
pop
cld
incl
inc
loope
and
test
jmp
dec
and
jne
xchg
xchg
or
push
xor
cli
mov
shlb
or
add
fimuls
xchg
jmp
cmp
add
add
arpl
mov
loopne
lds
cmp
mov
add
rorl
adc
xor
mov
xor
xchg
in
jbe
sahf
int
xchg
and
cmpl
sub
mov
ja
sbb
clc
test
sub
add
fs
adc
push
xchg
jnp
jnp
jecxz
ret
adc
add
sub
mov
cmp
fs
stos
mov
xchg
pop
mov
or
insb
adc
std
xlat
pop
adc
add
ret
mov
sub
inc
sbb
push
cwtl
lret
rolb
enter
sbb
mov
sub
add
sub
leave
push
and
jg
push
fs
mov
loop
jae
sbb
and
sbb
pop
sub
mov
cwtl
ret
push
aam
outsl
mov
push
mov
xchg
nop
and
mov
lcall
pop
dec
out
push
sbb
mov
jge
push
mov
add
sub
aas
in
je
psrlq
stos
push
add
out
jmp
sbb
add
adc
sbb
lods
addr16
pop
or
adc
adc
sbb
jmp
sbb
andb
xor
pop
sub
add
add
jle
mov
mov
xor
add
ret
test
push
subl
mov
out
add
repz
enter
or
ret
mov
inc
std
movsl
xlat
adc
mov
inc
xor
add
add
cld
ljmp
lock
push
shl
add
and
cld
push
mov
mov
mov
fucomp
xchg
ds
jmp
aas
add
add
out
ljmp
xchg
call
rolb
xchg
pop
mov
sti
das
hlt
push
call
adc
cs
xchg
jmp
adc
or
js
jnp
sti
inc
call
lea
inc
mov
shl
xlat
jns
mov
mov
jecxz
sarb
add
out
mov
sbb
mov
das
push
movsl
add
mov
mov
sarl
or
xlat
sbb
fstpl
test
jge
sti
fildll
ljmp
sub
push
or
sub
push
adc
jmp
xchg
push
push
pop
or
stos
testb
fiadds
aaa
xlat
push
mov
sbb
push
stos
xchg
sbb
add
out
or
add
nop
adc
repz
mov
jmp
cmp
mov
dec
adcl
out
push
adc
mov
sbb
mov
sbb
inc
and
adc
or
add
sti
xchg
pop
xchg
adc
movsb
stos
sub
test
mov
adc
bound
cli
mov
out
push
clc
imul
sub
jae
sbb
inc
enter
in
fiadds
in
enter
ret
aad
dec
sbbl
add
jo
pop
out
cmpsb
jae
jmp
ss
or
add
add
clc
popa
ss
xchg
mov
call
mov
incb
notl
outsb
push
incl
imul
test
inc
call
cmpsl
stc
jle
test
popl
mov
push
mov
arpl
dec
push
and
les
fsubl
mov
add
mov
rolb
add
inc
and
call
or
adcl
imul
push
mov
push
std
popa
shr
adc
sub
out
fistl
dec
jmp
out
ljmp
rclb
imul
sub
xor
inc
mov
xlat
ficoml
std
xchg
pop
add
add
add
rolb
push
clc
push
jae
lea
out
leave
pop
std
mov
or
adc
dec
inc
adc
sub
mov
add
cmp
push
es
jae
mov
inc
mov
add
test
out
sbb
lods
sbb
ljmp
mov
test
out
adc
out
or
add
xchg
add
in
arpl
sti
jmp
mov
ljmp
mov
fsubrs
lret
stos
popf
pop
xchg
mov
arpl
adc
rolb
mov
mov
sbb
jb
fdivr
or
xor
jmp
sarb
stos
ljmp
or
add
add
xchg
loope
jnp
xchg
sub
jge
add
mov
pop
mov
xchg
mov
jmp
adc
orl
lcall
push
hlt
xlat
fistl
arpl
mov
or
and
ljmp
xchg
xor
filds
add
add
push
pop
mov
clc
aam
add
add
mov
shlb
cmpb
jo
loop
push
andw
ja
cmp
cmp
jb
push
call
fsts
test
sti
jae
jp
or
add
in
fwait
idiv
mov
cli
sysenter
test
mov
xchg
push
push
cld
adc
jmp
or
mov
jno
mov
add
push
cld
call
ja
jno
jg
push
sbb
add
stos
sub
std
leave
mov
imul
cmpsl
adc
stc
cli
cmpsl
incb
xchg
mov
mov
mov
jle
test
pop
mov
inc
rcrl
jne
sbb
inc
mov
pop
pop
std
and
stos
push
inc
enter
inc
adc
add
xchg
enter
jge
cld
xchg
imul
lcall
adc
out
push
fldcw
or
mov
sbb
in
rorb
add
or
out
adc
fsubrl
stc
or
adc
pop
lods
sbb
xchg
divl
in
test
adc
movsb
sbb
xchg
repz
dec
int
mov
jp
fistl
lcall
adc
mov
into
jg
sbb
test
sbb
dec
inc
add
adc
pop
push
cmc
push
aaa
rorb
ss
mov
call
adc
mov
adc
adcb
aam
test
adc
hlt
mov
sub
imul
les
and
incb
imul
dec
jmp
cmp
nop
pop
jno
or
sub
add
std
cmpsl
or
add
idiv
push
in
js
inc
adc
mov
push
addl
sub
testb
add
test
cmpsl
mov
lods
out
jae
lods
mov
add
iret
mov
call
orl
fimull
mov
inc
jl
arpl
adc
sub
orb
in
mov
lea
xor
outsl
cld
ljmp
xchg
adc
xchg
out
xchg
cs
jno
inc
xchg
repz
test
add
dec
jns
xchg
cld
pop
outsb
icebp
jne
mov
push
xchg
adc
adc
loop
xchg
test
flds
adcl
xorb
jp
and
and
push
out
cld
pushf
push
leave
cld
dec
prefetcht0
test
pop
outsl
dec
cmp
sub
sarl
mov
add
lahf
pop
subl
xchg
loop
cltd
leave
popa
or
inc
lods
jne
jo
jle
adc
cmp
push
add
imul
ds
mulb
repz
inc
jecxz
push
cli
bound
add
adc
adc
lret
fnsave
inc
es
test
adc
addr16
add
add
js
pop
mov
test
mov
push
and
or
lock
jbe
bound
mov
fimuls
mov
xor
jge
xchg
popf
imul
jmp
out
bound
sbb
cmp
or
dec
loope
sub
mov
insb
pop
pop
push
sbb
out
add
push
or
icebp
mov
subl
dec
cmc
add
dec
cld
call
fildl
out
pop
push
std
jae
add
ret
mov
add
in
adc
push
mov
pop
xchg
mov
sub
jb
cmp
aaa
or
sub
stc
jo
adc
add
add
fidivs
rclb
mov
cli
jbe
cld
add
lock
push
add
enter
pop
testl
das
jo
sbbl
inc
hlt
cwtl
addb
jmp
adc
or
std
cmp
sbb
sub
add
mov
mov
add
and
or
xor
rclb
jmp
pop
sbb
pop
jb
mov
adc
or
mov
jg
rcrl
or
and
cmp
and
xor
popf
inc
or
adc
les
push
fwait
and
adc
js
std
pushf
xlat
lds
push
add
mov
mulb
add
adc
out
aam
rcrb
jl
std
xchg
dec
out
adc
mov
and
ss
xchg
add
lock
mov
cmc
push
add
adc
clc
stc
cmp
adc
add
repz
ljmp
icebp
aam
push
subl
or
xchg
push
or
add
in
sub
in
call
xchg
cmp
adc
jle
dec
mov
add
sbbl
lods
sbb
mov
cli
jnp
jmp
push
or
bound
push
in
mov
bound
add
push
or
maskmovq
notl
add
mov
add
cmp
sub
xchg
sbb
cld
outsb
xchg
sar
mov
add
in
or
push
mov
test
jno
in
scas
sbb
xchg
incl
jmp
jne
sub
ljmp
or
push
adc
mov
js
jne
repz
or
dec
in
add
inc
idiv
test
add
mov
adc
pop
test
pop
hlt
ret
pop
or
clc
cs
jg
cmp
add
aaa
jle
add
add
inc
je
test
adc
add
fsubr
jae
lcall
mov
roll
cwtl
push
and
xchg
aaa
push
adc
add
add
adc
jne
movsl
xchg
loope
mov
clc
adc
jbe
gs
push
jae
sahf
cmp
int3
or
inc
bound
test
add
int3
jge
jae
roll
adc
sbb
xchg
and
add
cli
sti
in
jb
dec
or
lret
cmp
add
add
add
add
jbe
jg
out
or
push
mov
cmp
add
sbb
int
add
or
aad
jg
out
xchg
jo
add
cltd
dec
cmp
ds
es
ret
xchg
or
clc
mov
push
sbb
jle
mull
add
jne
mov
add
repnz
or
jne
add
mov
sbb
inc
test
aad
in
movsl
add
gs
lea
push
fnstsw
gs
mov
leave
stos
adc
adc
push
hlt
jecxz
aaa
inc
jmp
adc
inc
lds
sub
push
jne
enter
adc
sar
push
sbb
jge
enter
or
sahf
stc
cli
xor
inc
in
in
mov
leave
sub
add
adc
jp
dec
or
jbe
sbb
imul
sti
jbe
sbb
imul
sti
jbe
sbb
imul
sti
jbe
sbb
imul
sti
jbe
sbb
imul
cmc
je
add
ss
ss
pop
ret
dec
mov
call
lahf
mov
dec
fwait
sti
ljmp
or
push
fwait
sti
call
stos
lods
mov
gs
je
pop
jns
stos
ja
add
rcrl
into
push
addr16
dec
test
pop
call
mov
in
xchg
dec
or
adc
cwtl
lods
cld
inc
out
ja
add
cmc
aad
rclb
jl
adc
add
mov
int
call
xchg
cld
jle
adc
mov
loopne
push
nop
mov
push
rcll
adc
fadd
jmp
pusha
shlb
add
lret
fisubl
hlt
xchg
xchg
out
adc
adc
popf
and
add
jge
sbb
add
testb
cmc
xchg
imul
sti
mov
mov
faddl
out
adc
fidivrl
xchg
jge
lds
push
imulb
dec
push
add
enter
test
mov
jno
fwait
inc
jne
add
jne
mov
es
rorl
lret
inc
and
pop
rorl
push
mov
add
xor
subl
fs
or
les
or
imul
mov
add
lock
jbe
or
and
aas
inc
and
in
mov
cld
subb
gs
adc
and
adc
or
xlat
cld
pop
cmp
call
add
add
sti
cld
add
js
jo
mov
inc
and
in
lcall
jne
cld
sub
adc
call
mov
repz
adc
sti
push
push
jns
and
jo
mov
insl
sti
jmp
and
test
outsb
loopne
incl
mov
dec
push
pop
call
insb
add
mov
push
jno
stos
xchg
inc
and
push
mov
push
push
adc
inc
sub
ljmp
xchg
fldl
xchg
mov
jae
imul
adc
dec
push
es
fs
jmp
add
jne
inc
add
mulb
cld
adc
incb
testl
std
add
cmp
add
addr16
sub
je
fucomp
in
sbb
pop
dec
xlat
rcrb
pusha
ret
add
call
cld
std
lds
dec
add
je
add
sub
pop
call
and
pop
inc
xor
and
shlb
pop
cmp
add
pusha
dec
cmc
and
lea
add
roll
cli
and
jl
jb
xor
cmp
ja
cli
testb
adc
dec
in
sbb
cmp
sbbb
sbb
cmp
outsl
lea
and
incb
lcall
movsl
sub
into
and
cmp
call
mov
sbb
dec
std
mov
add
jecxz
push
pop
mov
or
adc
add
out
push
fistl
xchg
xchg
bound
lcall
dec
dec
mov
and
cwtl
cmp
lcall
add
or
mov
lods
add
add
shlb
stc
rcrb
cmc
divl
add
aam
cmp
jo
repz
ror
sub
inc
cmpl
mov
jnp
or
jae
add
push
jg
sub
cld
clc
mov
je
mov
rolb
add
les
mov
mov
data16
mov
jne
add
cmp
call
push
aam
push
ljmp
push
outsb
aas
mov
leave
inc
adc
pop
aam
sub
bound
xchg
ljmp
adc
es
out
sub
scas
mov
int
std
mov
inc
push
gs
sbb
sub
add
aam
incl
divps
stos
pop
ret
mov
add
mov
xor
sbb
or
pop
mov
mov
jmp
jb
stos
add
ret
or
rcl
iret
mov
js
inc
or
test
jns
test
test
sbb
std
ds
add
add
mov
or
adc
mov
bound
xor
push
xchg
out
adc
add
cwtl
jns
mov
add
rcr
jp
jbe
out
call
adc
out
les
sub
xor
ret
pusha
push
test
add
loope
mov
cli
jmp
call
bound
call
push
pop
or
xchg
in
repz
testb
out
and
and
add
in
call
push
add
repz
scas
adc
rcrl
dec
push
jb
pop
std
jno
add
ljmp
jmp
test
into
cli
pcmpgtd
hlt
je
ljmp
imul
std
dec
and
ss
adc
inc
insl
or
std
jmp
aas
cmp
aaa
pop
test
jmp
fldl
add
leave
aas
add
cli
add
sbb
aas
add
les
loopne
push
mov
adcl
jo
mov
add
jp
clc
je
cmp
ss
call
and
movl
lds
cwtl
les
add
pusha
incl
cmp
adc
inc
add
movsb
push
pop
add
rclb
test
adc
dec
push
push
scas
jae
sbb
push
mov
pop
jg
lcall
push
sti
fists
and
adc
or
sub
add
aaa
xchg
rcrl
lods
inc
std
cld
inc
shlb
ds
jl
push
pop
xor
cs
sub
pop
or
dec
add
lcall
adc
jl
adc
out
lcall
cli
add
stc
inc
adc
inc
add
add
cmp
insl
pop
pop
mov
loopew
and
call
jo
pop
filds
out
shl
out
sbb
sub
test
int3
into
data16
mov
in
push
inc
stc
fistps
cld
add
aas
add
ss
xchg
push
mov
stc
mov
ss
and
fadds
xchg
std
bnd
jbe
call
jmp
cld
mov
adc
cld
cltd
std
ljmp
not
dec
cs
cmc
pop
adc
xchg
cmp
cld
xchg
imul
jae
lock
movb
out
imul
sbb
jae
cmc
push
icebp
test
sbb
cmc
mov
cld
cmpsb
cmp
sahf
sbb
sbb
add
cld
add
ljmp
sar
pushl
or
mov
sbb
decl
push
pop
add
addl
add
pop
mov
jp
in
xchg
repz
in
lods
decl
dec
xchg
adc
fdivr
outsl
cmpb
notb
jl
cmp
push
loop
add
std
aas
lea
dec
sti
adc
adc
cld
xchg
xchg
hlt
or
jno
add
pop
push
test
pop
xor
add
push
in
pop
adc
dec
mov
adc
dec
aas
clc
popa
xchg
mov
cmc
jb
daa
into
adc
sub
adc
outsl
sub
add
pinsrw
add
arpl
mov
loope
push
pop
push
lock
cmc
aad
lcall
adc
in
frndint
movsb
popf
cmc
adc
stc
inc
add
adc
adc
adc
add
sub
xrelease
push
jg
ret
out
insl
push
mov
push
jb
xchg
fdivrl
inc
adc
lcall
mov
add
pop
push
outsb
push
add
adc
shl
xchg
add
add
cmpl
mov
inc
adc
jle
add
add
add
fadds
cld
xchg
out
cmp
xlat
jno
cs
jmp
and
push
pop
mov
xorb
in
push
arpl
out
or
in
andl
imul
adc
jb
mov
dec
insb
push
in
dec
inc
mov
std
dec
nop
ret
aad
pushf
sub
sbb
or
jb
lods
fdivr
push
pushf
in
jb
add
jge
bound
jl
add
adc
std
jge
pop
xchg
leave
cltd
fiaddl
ss
addr16
pop
inc
add
xchg
add
push
aam
sti
add
adc
mov
mov
or
pop
mov
adc
jae
adc
xchg
mov
sbb
mov
mov
add
test
pusha
popa
push
add
js
test
inc
add
ficoms
mov
in
lock
and
ret
push
sbb
add
ret
mov
inc
add
cmp
dec
jb,pt
dec
ss
cwtl
enter
aad
jmp
add
xchg
dec
call
lcall
add
add
inc
adc
mov
sub
je
sbb
mov
push
fidivl
fstl
iret
in
enter
cmp
mov
mov
push
mov
pop
pop
sbb
add
pop
loopne
insl
xchg
push
push
jmp
push
call
sti
lods
jg
movsl
add
fcompl
fs
dec
mov
jle
add
adc
sbb
push
jmp
lea
in
arpl
sbb
add
cld
dec
js
in
cmp
jbe
xchg
rcr
aam
out
mov
push
cmp
mov
add
jp
xlat
xchg
shr
jl
out
nop
insl
cmp
or
dec
add
jns
addl
cmpsl
add
jl
mov
sbb
add
push
fdivr
cmc
mov
inc
ja
test
outsl
xchg
call
dec
cld
addl
add
lock
in
xchg
dec
add
adc
test
add
pop
fnstcw
adc
jg
ficoms
andb
push
and
inc
fcoml
call
sub
add
xchg
call
xchg
addr16
jmp
adc
addl
idiv
add
js
xchg
imul
fnstcw
ljmp
jp
mov
in
cmp
jmp
cmp
decl
add
sub
pop
in
filds
xchg
mov
decl
add
sub
push
daa
inc
loopne
mov
mov
adc
and
test
jno
push
push
test
lds
jns
xchg
xor
pop
mov
fstps
je
imul
fadds
add
sbb
or
leave
add
mov
cld
decb
pop
dec
std
es
inc
or
mov
out
flds
add
cmp
adc
jns
loope
cmp
inc
outsl
ja
adc
fadd
outsb
inc
in
push
fidivrs
in
sub
sbb
or
adc
dec
add
push
fidivrs
call
cmp
push
imul
jmp
fprem
sbbb
std
fiadds
mov
dec
add
cmp
sub
into
jnp
push
xor
xlat
out
mov
add
mov
aam
mov
divl
jnp
fdiv
inc
cld
out
inc
and
pop
cwtl
cmp
pop
jns
test
fistl
outsb
in
lds
call
xchg
push
dec
out
mov
ret
fistl
clc
arpl
out
xor
cmp
mov
add
out
fs
call
std
jl
out
in
dec
stos
xchg
jmp
stc
jns
loope
in
jae
loop
vmovd
std
into
mov
and
mov
out
cld
scas
adc
jne
mov
enter
xchg
sbb
popf
push
xchg
adc
call
pop
mov
std
fmul
fisubrs
or
add
imul
mov
xor
imul
lcall
xchg
and
mov
clc
mov
aam
inc
pushf
lret
addr16
inc
test
inc
or
inc
add
mov
test
mov
in
mov
mov
mov
repnz
aam
mov
add
xor
jmp
decl
in
push
call
inc
aas
cld
push
inc
mov
jbe
test
jo
clc
mov
jne
sub
jge
movsl
xchg
jb
pop
push
sub
cwtl
add
cmpsl
jmp
push
leave
inc
add
fisttps
push
call
loope
aaa
in
loopne
clc
xor
mov
cs
aas
cld
ljmp
push
popa
insl
add
popa
xchg
enter
jbe
cmc
sub
adc
push
stc
jecxz
ficoms
jb
or
mov
jmp
rcll
outsb
imul
inc
cmc
mov
fs
inc
jmp
sarl
sub
inc
and
dec
mov
add
xchg
add
add
in
lret
dec
inc
out
out
cmpsb
jo
inc
and
insl
jmp
ljmp
dec
outsl
in
clc
mov
add
jmp
aam
dec
xchg
mov
adc
sbb
jmp
jge
outsl
or
scas
leave
aas
add
inc
out
xchg
and
add
stos
dec
std
cld
into
adc
pop
jp
cmpsb
iret
push
push
jb
add
sbb
mov
inc
aad
fcoms
sub
cmp
or
or
test
out
push
jle,pn
inc
jmp
daa
inc
add
pop
out
cld
into
xchg
jmp
cmp
sub
push
mov
lds
sub
dec
shll
push
ret
je
cmp
gs
jo
sub
add
std
inc
js
dec
sti
je
or
sti
add
push
xchg
adc
cmpb
jae
rclb
adc
mov
add
jo
je
push
sub
mov
adcl
jo
adc
cmc
aas
lds
call
cmp
adc
cs
decl
mov
jmp
cli
adc
add
push
les
in
mov
bound
mov
cld
mov
movl
pop
into
loopne
iret
pop
push
shll
adc
aad
mov
sub
xlat
add
inc
mov
or
or
xchg
sub
in
add
cltd
and
xlat
mov
sbb
pushf
push
sbb
add
add
iret
sub
adc
ja
in
repz
mov
inc
sbb
mov
in
mov
and
cwtl
push
and
add
loopne
push
push
and
jb
or
dec
lret
xor
test
inc
in
clc
mov
cmpsl
out
dec
out
shl
fldl
out
sub
fs
push
add
loopne
jne
add
mov
push
loopne
pop
sbb
out
cmc
adc
adc
mulb
add
vmulss
lea
fnstsw
iret
mov
mov
pop
mov
cmp
adc
xlat
fimull
xchg
jmp
cmp
aam
icebp
aas
jmp
ljmp
out
add
ss
call
sub
fidivs
ds
pushf
pop
adc
std
testl
lcall
and
mov
insb
push
and
and
loop
les
fldt
jmp
out
cld
add
push
jle
inc
and
mov
and
mov
add
pop
jno
mov
pop
jns
aam
dec
cmp
add
adc
data16
jp
inc
test
call
mov
incl
jnp
push
lcall
push
incl
add
mov
mov
xchg
inc
outsb
and
mov
sub
pusha
inc
pop
call
mov
adc
add
mov
sub
shrb
mov
or
add
sbb
pop
push
inc
arpl
xchg
or
jge
adc
add
inc
mov
xor
adc
cwtl
lods
call
xor
xor
and
imul
dec
call
add
mov
push
cmp
incl
mov
loope
cmp
popa
jno
add
mov
loopne
inc
lret
in
fcmovnb
jecxz
sbb
pop
sbb
mov
out
shll
jnp
ds
add
call
popa
loope
or
out
aad
fs
shll
pop
dec
mov
shll
push
mov
jg
das
stos
loop
andb
xchg
sarl
add
mov
jno
fisttps
das
in
jle
es
rcll
adc
mov
jmp
cmp
loop
sar
sti
mov
popl
jb
fdivl
ret
push
pusha
ficoml
cmp
adcl
ds
push
or
cld
jmp
pusha
fdivrp
xchg
jp
adc
adc
mulb
repnz
add
add
fdivr
outsb
mov
add
jmp
loop
jne
mov
jnp
push
add
bnd
cld
push
or
pushf
adc
shll
mov
rolb
push
add
std
add
lea
and
repnz
aas
lea
das
ds
cmc
loope
or
mov
mov
xor
loope
pop
xor
add
add
xor
scas
loopne
in
or
jnp
incb
xor
mov
sbb
or
gs
add
or
inc
lods
lea
testb
or
or
mov
xchg
test
xchg
dec
je
aaa
inc
jl
adc
nop
mov
rolb
mov
jecxz
std
mov
add
mov
push
cs
xlat
xlat
mov
dec
in
cmp
xor
cwtl
mov
pop
dec
add
push
ss
cwtl
and
sbb
test
call
add
out
pop
mov
call
push
jnp
adc
xchg
inc
add
clc
pop
test
cld
xchg
sub
mov
add
jb
cltd
inc
sbb
jns
adc
push
xor
loopne
sbb
add
ret
mull
mov
imul
daa
add
sar
ret
fists
ds
pop
stc
mov
or
inc
add
dec
fcoms
lds
shll
adc
mov
mov
ljmp
xchg
rcl
xchg
pop
repz
add
pop
sub
push
roll
add
hlt
out
cmp
cld
cltd
cwtl
jb
xchg
sar
pop
mov
mov
sbb
rcrl
xchg
fwait
mov
cld
gs
push
jecxz
push
ss
inc
push
add
aad
adcb
je
lcall
loope
mov
inc
cmpb
add
xor
insb
rclb
push
aam
jmp
rol
adc
mov
mov
xchg
jmp
pop
xor
arpl
or
add
add
test
jmp
inc
jns
das
sarb
xchg
jmp
adc
cmp
dec
push
lahf
push
test
sub
add
mov
add
add
add
jg
add
add
call
add
add
or
inc
cmc
incl
or
cmp
ljmp
add
mov
call
and
cld
xorl
or
rol
adc
add
or
movb
pop
je
lea
sub
add
push
adc
or
add
pushf
icebp
cmp
call
push
mov
in
sub
jmp
cs
inc
lock
bound
and
and
adc
div
adc
push
push
popa
cmpsl
push
in
stc
fwait
xlat
cld
out
rorl
inc
in
mov
push
jns
adc
add
dec
add
or
xor
xor
dec
push
add
sbb
aad
inc
insl
daa
dec
xchg
out
shl
jno
xchg
add
add
nop
add
add
mov
aad
xchg
in
mov
adc
testl
stc
das
aaa
in
add
fistpl
xchg
jp
push
add
inc
adc
adc
fisttpll
fisubl
mov
ljmp
add
add
jle
xchg
or
push
bound
ljmp
aam
inc
push
test
adc
add
sar
popa
add
sbb
pop
popa
or
fsubl
movsb
bound
out
stos
call
dec
jl
call
shl
push
into
popa
add
pop
dec
add
push
add
aaa
sbb
mov
jo
fldenv
inc
int
pop
xchg
aaa
xchg
xchg
aaa
add
and
je
test
xor
dec
sub
jmp
cmp
mov
test
pop
test
movsl
fildl
push
les
jecxz
jl
push
or
push
aas
test
add
mov
or
cmp
dec
decl
out
push
aas
mov
xchg
test
pushl
movb
and
aaa
fisubrs
xlat
sti
jne
jnp
sub
les
mov
les
pop
cmp
xor
jecxz
xchg
call
jl
adc
add
out
rolb
add
in
xor
in
pop
xlat
cld
mov
mov
popa
inc
jo
movsl
rorb
and
popf
in
mov
lcall
dec
mov
inc
jnp
sbb
xchg
rcrw
add
shl
mov
lea
call
jno
rcl
out
mov
adc
add
movsl
test
ret
add
aas
iret
loop
dec
ljmp
dec
shll
inc
addr16
or
xor
push
sub
pop
mov
jg
rorl
inc
adc
mov
dec
call
push
adc
test
sub
aas
push
mov
popa
inc
xor
inc
xor
inc
dec
mov
aas
and
add
adc
dec
cli
scas
or
aad
ds
inc
lock
sbb
test
int
std
leave
int
jb
int
mov
int
rcrl
fcmovnu
rolb
mov
push
push
cs
lods
adc
loop
cld
push
repz
and
add
xchg
enter
xor
fsubl
aas
jmp
sar
push
add
add
inc
add
sti
pop
add
or
ret
cmpl
or
and
lret
sub
cmc
mov
push
push
mov
cwtl
lret
sti
add
fsubrs
nop
or
int
adc
mov
call
jmp
sti
jne
pop
or
jmp
sti
adc
add
orl
add
add
add
mov
jno
mov
lea
rorl
mov
adc
xchg
push
inc
out
adc
fs
pop
cmp
fsts
rclb
mov
push
xor
add
or
mov
pop
push
insb
adc
jae
bound
push
ljmp
sub
pop
push
add
adc
mov
rcl
rcll
push
stos
inc
add
sub
es
fildl
cwtl
add
push
lcall
mov
in
fwait
pop
fwait
add
or
ds
test
dec
ljmp
fisubrl
pop
push
jmp
int
mov
push
add
cmp
add
add
enter
cmp
outsb
out
mov
das
jb
jmp
jns
xorb
out
add
add
adc
sub
dec
inc
out
lea
sti
pop
adc
arpl
or
add
ss
int
jmp
nop
jo
call
dec
fsts
int
test
add
adc
mov
push
ret
sti
push
add
mov
int
fldl
std
xchg
addr16
int3
cld
jmp
push
add
out
or
call
inc
decb
fstps
inc
pop
jbe
out
adc
enter
inc
dec
or
dec
into
cld
push
outsb
inc
std
pushf
inc
ja
jb
cmp
jno
add
add
inc
and
xor
mov
xchg
in
shrl
mov
iret
scas
push
inc
fwait
push
inc
clc
scas
jno
scas
sub
cmc
int3
sti
adc
cmp
or
sbb
inc
mov
sbb
inc
add
test
inc
and
psubsb
inc
scas
sti
mov
pop
lea
push
fdivr
incl
aas
add
mov
rcll
sbbl
test
cs
xchg
xchg
mov
hlt
cmpsl
adc
test
fadds
mov
rclb
mov
add
xchg
push
sub
pop
jae
into
fdivrs
in
push
add
adc
add
roll
dec
mov
sbb
xor
cld
mov
adc
add
cld
jnp
outsb
fcomp
dec
insb
adc
jg
add
incl
add
dec
lret
inc
lret
add
inc
out
mov
xor
rcrb
hlt
scas
cmc
dec
add
sub
test
add
add
cmp
mov
dec
icebp
popa
inc
add
sub
add
sbb
jmp
dec
sub
sub
scas
fadds
movsl
leave
jne
add
repz
ja
daa
sub
daa
xchg
add
add
leave
call
inc
loop
jmp
adc
jae
add
aam
inc
int3
xchg
xchg
leave
cld
jmp
add
cltd
and
jmp
jge
adc
cmp
int
inc
call
inc
sbb
inc
call
nop
inc
and
add
jb
push
and
lret
jmp
insl
jnp
lds
enter
cmp
fstps
inc
cmc
jle
js
and
xor
call
mov
or
incl
add
std
pushl
inc
and
sub
push
mov
or
or
adc
sub
sbb
das
and
arpl
sti
je
sub
cltd
mov
pushl
and
inc
inc
and
nop
dec
incl
add
shll
or
repnz
jns
rolb
stos
pop
cmp
jo
add
adc
into
mov
cmc
jmp
lea
mov
cmc
cmp
jmp
xchg
and
xchg
jg
add
mov
jns
add
inc
insb
adc
pop
mov
lret
sbb
dec
jmp
arpl
or
cltd
js
imul
xor
mov
or
add
add
sub
outsl
loop
pop
frstor
call
adc
pop
ficompl
mov
inc
repz
add
inc
jmp
ror
stos
enter
push
cwtl
or
sbb
pop
jmp
out
adc
outsb
push
adc
xchg
aas
jp
fisttpl
rclb
add
add
push
das
add
inc
jne
popf
mov
ret
add
add
repz
flds
adc
sbb
stos
cmp
adc
add
pushaw
into
movl
jae
add
imul
pop
adc
xor
mov
iret
call
add
add
pop
mul
adc
repz
sub
dec
out
mov
add
ret
movsb
jmp
push
lahf
pop
or
add
sub
adc
shll
adc
and
add
jbe
push
mov
movsl
js
testb
jae
adc
subl
adc
add
add
ds
data16
cmpl
test
cmp
mov
mov
mov
add
jg
jmp
mov
ret
jnp
and
clc
xor
call
mov
jmp
add
imul
fnstcw
adc
add
and
leave
adc
add
cltd
dec
add
push
lods
add
push
and
pop
adc
ja
or
or
clc
xor
lock
and
pop
std
mov
flds
mov
push
iret
jae
push
dec
or
inc
and
or
aam
jb
stos
in
daa
add
add
roll
cmp
into
cld
add
inc
loopne
adc
add
inc
adc
sub
mov
jp
mov
rcll
push
inc
out
jbe
cs
cmp
rorb
mov
xor
mov
out
pop
in
shl
push
add
cltd
cmp
or
aam
mov
out
or
cmpsb
add
rcl
add
jl
and
add
add
cld
out
mov
imul
jmp
push
pop
leave
add
xlat
inc
adc
add
or
jbe
mov
fadd
adc
mov
dec
add
rcr
dec
fs
aad
outsb
xlat
clc
les
xor
lods
pop
call
bound
add
pop
lcall
push
add
iret
enter
icebp
aas
jmp
pop
out
stos
fcmovnbe
add
call
hlt
enter
mov
inc
mov
add
and
mov
sub
pop
sti
xor
inc
add
test
add
or
adc
add
inc
xchg
cmc
dec
push
add
roll
jge
push
inc
add
push
pop
xchg
or
inc
mov
or
je
cmp
js
jno
jle
adc
xlat
lods
les
pop
psubq
ret
ret
jb
cmp
pop
sbb
dec
call
and
adc
imul
pop
add
test
add
or
out
add
xchg
push
push
mov
out
jb
ds
and
add
push
push
jl
jmp
sub
adc
mov
adc
inc
add
dec
inc
adc
inc
add
les
push
iret
xchg
jmp
mov
call
push
rol
add
ljmp
adc
add
daa
pusha
aaa
lods
dec
sti
sub
ja
imul
incb
push
or
and
inc
aas
ja
mov
ljmp
push
pop
lds
or
out
les
xor
inc
out
xchg
xor
mov
aas
sub
test
add
and
add
enter
mov
push
mov
inc
cmc
fcos
xor
adc
lds
cmc
pop
pop
or
adc
push
inc
add
xor
leave
adc
sbb
mov
je
or
mov
cmp
push
inc
cmc
push
xor
push
xlat
or
sbb
inc
add
or
cmp
inc
ss
mov
test
jmp
inc
and
or
rolb
xchg
sar
adc
jno
repz
mov
add
mov
test
inc
add
clc
aas
add
mov
aas
add
repz
jo
fistpll
add
mov
add
add
test
mov
push
test
ror
sub
decb
sahf
mov
push
push
lea
fisttpll
push
test
adc
inc
add
cmp
jno
mov
jecxz
add
push
mov
mov
push
push
adc
add
lods
add
adc
push
push
cld
or
and
adc
add
adc
aaa
loopne
fmul
adc
rcl
sbb
cld
push
dec
in
in
mov
or
xor
xchg
jb
and
mov
lret
lock
das
inc
add
cs
and
adcl
push
add
mov
es
adc
fisubrl
dec
push
ret
xchg
mov
mov
add
add
out
adcl
aaa
sbb
add
pop
xchg
add
sarl
popa
mov
out
push
adc
push
add
inc
sbb
xor
mov
add
pop
cmp
imul
mov
ffreep
and
imul
mov
lahf
cmp
add
mov
test
cld
push
add
pop
xchg
jp
cmc
xchg
jg
adc
add
add
xchg
jns
in
mov
sub
add
mov
add
cmp
xchg
sbb
sub
sub
mov
in
jmp
and
adcb
cld
sbb
loopne
rolb
mov
cld
outsb
loop
jb
add
lahf
ds
push
cmp
ret
sbb
addb
or
test
out
pop
lea
dec
call
jge
mov
and
inc
incl
adc
insb
mov
call
js
push
inc
cltd
je
call
add
mov
loopne
incl
js
data16
std
incl
add
js
push
adc
jne
js
adc
inc
add
add
ljmp
inc
push
mov
lea
dec
pop
sbb
imul
mov
out
inc
mov
test
mov
mov
bsr
pop
jl
adc
add
adc
mov
hlt
leave
rorb
mov
add
stos
inc
xchg
pop
shll
sub
adc
push
push
test
or
aam
mov
fdivl
mov
xor
mov
add
mov
mov
push
mov
mov
sarl
aad
stos
mov
sbb
cmpsl
add
add
add
sbb
cmp
push
xchg
mov
push
add
std
and
in
add
push
fidivs
fldcw
cmc
push
imul
add
xor
add
std
lods
inc
mov
push
push
mov
mov
cmp
xor
cwtl
mov
fcmovnbe
roll
add
fildll
xor
push
daa
cmp
add
mov
cmp
add
add
loope
stos
pop
xchg
push
push
mov
fiadds
inc
and
mov
dec
hlt
jne
jle
cmc
mov
cmp
sub
and
sub
jmp
pusha
sub
mov
or
xor
inc
mov
lcall
push
clc
add
add
dec
cmpsl
inc
push
imul
rolb
imul
mov
ds
xor
aaa
inc
sub
aad
gs
pop
mov
push
pop
mov
call
xor
push
pop
pop
inc
ret
dec
movsb
into
inc
clc
jnp
je
mov
add
call
sbb
ret
add
inc
add
sbb
sahf
loopne
push
inc
add
inc
mov
shrb
add
mov
cmovo
xchg
mov
test
add
jo
cmovo
xchg
mov
test
add
jo
cmovo
inc
push
mov
stos
arpl
push
mov
add
jno
inc
add
xchg
mov
stos
arpl
cld
jmp
inc
add
push
inc
adc
arpl
ljmp
adc
adc
dec
jae
aas
out
mov
xor
bound
roll
dec
shll
or
fwait
inc
adc
adc
add
fs
add
add
jne
adc
psrlw
dec
adc
out
and
add
pusha
push
sqrtps
dec
rep
ds
orb
inc
adc
adc
mov
out
or
add
and
jg
add
dec
in
inc
jmp
adc
add
dec
popf
insb
inc
jmp
add
or
add
mov
imul
adc
test
int3
add
mov
insl
adc
push
add
dec
lds
jmp
adc
xor
add
insb
inc
jmp
or
cmp
inc
add
push
in
add
call
cmp
inc
add
dec
mov
push
std
sahf
pusha
das
cmp
inc
add
push
or
sbbb
inc
add
push
mov
js
sahf
mov
cwtl
add
pop
xor
inc
clc
and
adc
aas
inc
add
pop
aam
inc
call
add
add
inc
add
adc
jnp
mov
lcall
adc
inc
add
cmovo
cmp
rcrb
add
mov
cmovo
cmp
mov
cltd
arpl
sbb
shlb
mov
call
push
mov
in
adc
ret
rcrl
enter
push
lcall
decb
sub
jns
add
jns
inc
adc
pop
inc
adc
xor
sbb
cmp
push
arpl
imul
add
push
outsl
inc
adc
push
add
mov
mov
xor
out
push
scas
mov
mov
sub
sub
inc
out
add
add
inc
adc
pushf
mov
sub
mov
inc
adc
in
mov
adc
adc
add
scas
roll
imul
adc
xor
mov
loopne
movsb
imul
insl
ds
xor
lods
xor
movl
frstor
inc
add
add
dec
cmpl
adc
add
aam
inc
test
stos
jb
popf
repz
rolb
push
jl
subb
test
jmp
stos
lods
call
lods
xchg
cld
push
int3
sub
mov
add
add
icebp
out
or
add
xchg
call
inc
out
fisttps
iret
js
in
add
sub
outsl
je
mov
jae
call
movsb
mov
outsl
xchg
mov
pop
dec
mov
sbb
mov
test
pushl
add
js
lea
xchg
call
mov
fiadds
pushl
imul
adc
jg
add
add
mov
cld
inc
mov
add
aad
push
push
lcall
mov
jmp
shrb
daa
call
jecxz
fwait
dec
gs
add
or
mov
push
out
outsl
pop
jnp
mov
cmc
push
add
lcall
loopne
lcall
inc
lods
or
rcrl
int
adc
cmc
xor
add
mov
pop
dec
add
sbb
add
add
mov
cltd
and
stos
mov
adcl
xlat
inc
adc
sbb
add
enter
test
cmp
sub
jg
outsl
imul
mov
inc
adc
cmc
add
rclb
mov
sub
mov
adc
out
add
sahf
xor
imul
clc
movsb
out
ret
aam
mov
push
dec
inc
sbb
sub
jnp
loope
cld
popf
dec
insb
push
icebp
adc
push
fcmove
push
push
orl
push
push
sub
cld
aam
sti
aas
jmp
iret
cs
jno
mov
push
bound
push
into
push
adc
sub
outsl
lret
mov
lods
mov
add
adc
mov
cld
sahf
movsl
cmp
shl
shlb
addb
add
mov
lods
jb
orb
clc
rolb
std
aam
lods
adc
loopne
inc
add
mov
call
cmp
ljmp
ss
fisubrs
xor
imul
pop
sti
sub
jmp
mov
add
sbb
xor
mov
mov
int
js
mov
cmp
mov
or
xchg
jmp
rcl
jb
mov
jg
cli
mov
mov
and
cli
pop
cwtl
cmp
dec
xor
mov
movsl
xor
cmp
out
insl
dec
mov
bound
mov
xchg
int3
pop
icebp
sbb
iret
fxch
jecxz
dec
in
adc
inc
pop
cmp
in
push
push
push
data16
call
repnz
cmp
dec
dec
dec
fidivrl
pop
lahf
xor
movsb
mov
cmp
mov
addr16
or
aaa
cmp
cmp
fsubrs
push
pop
mov
add
add
ja
out
sbb
add
cmp
je
cmp
stos
inc
fwait
cmpsb
jno
fwait
push
stc
out
mov
out
pusha
dec
mov
or
inc
cmp
hlt
and
mul
add
xchg
stos
sub
std
inc
adc
sbb
add
sti
fwait
cmp
movsl
dec
mov
out
adc
out
jle
sbb
add
fists
sbb
push
xchg
cmp
daa
add
cmp
jb
xchg
xor
push
push
movsl
cld
pop
xchg
xor
inc
ss
cld
dec
and
cmpsl
fstpt
divl
push
xor
popa
sahf
xor
bound
and
dec
mov
cld
jnp
daa
mulb
jge
sub
ret
xchg
cmp
cmp
add
add
test
out
cwtl
test
leave
cli
test
push
inc
in
push
inc
nop
cmp
dec
push
sbb
push
add
in
pop
and
add
adc
mov
jno
lods
in
repz
mov
push
sti
call
mov
dec
call
test
jmp
sti
adc
add
jnp
sti
je
xor
push
pop
xchg
scas
lret
sti
jne
push
shr
lahf
dec
xchg
xor
pop
cmpl
das
notb
aas
ljmp
insb
cmp
adc
adc
jecxz
test
fstl
ja
lcall
cld
mov
xor
add
xlat
xchg
jb
add
xchg
jg
sub
cld
jl
ja
or
or
xchg
out
xor
xchg
adc
push
push
xlat
pop
sti
ljmp
push
les
loop
mov
pushf
std
imul
shl
fiadds
push
add
jno
push
insb
cmpl
mov
inc
or
arpl
add
jne
cmp
dec
cmp
pop
jle
repz
enter
es
jb
iret
dec
andb
sub
int
adc
mov
adc
or
jl
add
or
clc
cmp
pusha
inc
push
dec
je
or
jle
xor
jb
push
add
ret
inc
jbe
test
pop
add
add
fcompl
mov
rclb
cmp
clc
dec
ds
lods
das
sbb
add
jmp
loope
push
add
dec
call
jb
clc
mov
add
inc
jmp
adc
push
cltd
jl
jmp
nop
sar
adc
cmp
call
adc
add
adc
push
mul
ja
adc
add
or
aam
xchg
mov
sub
lret
jno
add
mov
push
add
in
jge
decl
and
cmp
je
and
jne
adc
je
shrb
or
shr
inc
mov
loop
clc
std
xchg
gs
aam
add
call
adc
xchg
jl
add
sub
push
loopne
xchg
adc
add
std
decl
adc
ret
cmpsl
sarb
jmp
or
pop
jmp
push
inc
addb
cmpsb
fldl
add
push
add
mov
jle
jne
popa
mov
clc
add
or
clc
add
sbb
out
inc
loope,pt
mov
pushf
das
or
loopne
jae
loop
or
roll
sbb
pop
adc
fwait
les
mov
inc
stos
add
and
pop
rolb
push
cld
vprotq
mov
adc
inc
sbb
mov
adc
sbb
insl
or
in
xchg
add
pop
inc
out
cmp
bound
jno
add
es
outsl
push
insl
cmpsl
mov
mov
mov
cmpsl
lds
ds
sti
lahf
inc
push
adc
adc
insb
cltd
sub
adc
jno
out
mov
push
adc
add
out
push
inc
add
bound
xor
xchg
pop
and
add
or
in
add
mov
jmp
movsl
add
mov
mov
aaa
sti
rolb
adcl
adc
pop
adc
pop
les
cmp
dec
mov
es
push
aad
cld
mov
xchg
jmp
xchg
sbb
out
mov
push
add
push
or
ret
inc
in
out
andb
sbb
jo
or
mov
sti
add
dec
cltd
std
mov
rcpps
dec
push
mov
add
add
cmpl
xorl
ret
inc
cld
ret
aad
cmp
aaa
push
cmp
das
shrb
ja
jno
decl
cld
lcall
xchg
cmp
pcmpgtb
adc
int3
out
mov
cld
aas
lock
cmp
sahf
inc
pop
fwait
ljmp
mov
add
xchg
testb
inc
jnp
dec
pop
add
mov
faddl
call
jge
in
out
mov
adc
cmc
adc
or
add
xchg
push
mov
cld
jg,pt
lods
ss
jmp
mov
mov
cld
push
adc
mov
jp
icebp
shr
sbb
fwait
cmp
mov
orb
push
rcll
mov
fwait
in
movb
or
adc
sub
add
inc
scas
pushl
out
fcmovu
popf
mov
or
out
xchg
mov
out
mov
push
testb
mov
pushf
pop
mov
es
or
pushf
push
or
cwtl
ljmp
lcall
sub
sub
movsl
add
rcll
add
repz
adc
cld
mov
dec
call
push
sahf
cld
mov
sahf
aad
mov
std
cmpsb
mov
shlb
xchg
and
sbb
adc
std
mov
push
cmp
mov
gs
test
adc
add
jg
test
leave
cwtl
mov
mov
cmpsl
cld
incl
in
add
in
sti
mov
xlat
jnp
call
repnz
in
dec
pop
sti
push
mov
push
nop
lcall
inc
mov
sbb
or
js
cli
adc
ja
mov
clc
in
clc
push
add
xor
sub
sbb
andb
xor
mov
add
lea
popa
scas
add
sbb
icebp
aas
adc
inc
clc
mov
pop
sbb
xchg
fs
fdivp
mov
popa
jo
and
test
xor
sbb
cld
mov
mov
jmp
iret
mov
xlat
mov
loope
push
std
and
hlt
aas
adc
jae
cmovbe
add
mov
sbb
test
pop
sti
dec
orb
loope
and
test
xor
add
mov
sbb
adc
add
dec
lods
cli
cwtl
xor
stos
iret
xchg
and
push
in
pushf
stc
mov
arpl
scas
scas
mov
mov
xchg
in
xor
jno
inc
cmp
ret
adc
cmp
stos
cmpb
cwtl
ss
xor
cs
test
ds
xor
and
sahf
push
xchg
hlt
mov
cwtl
jge
jle
add
jno
push
pop
inc
mov
subl
sti
imul
sub
and
adc
cld
es
push
jae
ret
push
call
add
add
add
sub
loope
xchg
cld
add
gs
out
cli
add
call
jl
cld
cmp
repnz
rolb
mov
or
jae
mov
xchg
jb
cmpl
pop
xor
inc
add
ret
mov
or
es
mov
out
add
add
add
cli
jnp
add
imul
cld
dec
ret
sahf
fcmovnb
ret
call
mov
xor
les
out
cwtl
ja
mov
jle
je
cmp
xor
push
jmp
in
pcmpeqb
incl
and
mov
jne
mov
hlt
jns
lret
cld
add
mov
sub
cld
imull
xchg
aaa
fwait
push
mov
push
lock
lcall
xor
aas
mov
out
out
mov
push
lock
out
test
cmp
sub
push
push
notb
push
or
adc
add
sub
fwait
cld
mov
add
cmp
add
add
adc
mov
sbb
and
data16
loop
fld
imul
xchg
pop
adc
imul
test
sbb
xor
mov
cli
orb
movsl
add
adc
lcall
fldlg2
xor
outsb
sub
cmp
sbb
xor
adc
jo
add
in
hlt
imul
in
mov
ret
jecxz
fisttpll
cwtl
sahf
sub
adc
mov
rcr
clc
cltd
andb
sgdtl
je
fisttps
adc
lds
int3
add
sub
int3
add
cmc
inc
fsub
mov
or
cld
jmp
push
add
cltd
mov
cltd
or
add
add
mov
push
add
in
fwait
lcall
aas
and
mov
aaa
and
jg
lds
adc
lds
adc
mov
test
jmp
and
addb
in
pusha
cmp
mov
add
mov
and
in
and
ljmp
iret
cli
adc
add
imul
inc
or
call
cmpl
test
idiv
or
das
inc
and
outsl
aam
sub
lea
and
int
add
cmc
pushl
add
test
inc
and
jnp
and
call
lret
cld
cmp
add
sarl
add
add
fcmovb
push
sbb
decb
sub
pop
out
mov
ret
in
mov
or
shl
add
lods
jmp
test
andb
mov
push
xchg
or
cmp
add
jb
push
mov
xchg
push
mov
and
xchg
inc
add
fcompl
inc
nop
jge
push
sbb
ljmp
sbb
sahf
add
adc
add
or
cmp
add
xchg
xchg
fsubl
xor
xchg
add
jle
or
sub
mov
add
mov
test
lea
loop
rcr
and
xchg
sti
xlat
add
jle
adc
loop
adc
fbstp
xor
negb
mov
nop
and
call
add
add
shrb
xchg
sarl
daa
jecxz
lcall
fstl
jns
in
je
xlat
pop
adc
jmp
push
jae
mov
cld
bound
stc
mov
nop
push
jae
cmpsl
loopne
dec
bound
xor
add
mov
xchg
stc
push
mov
loope
add
jb
adc
std
cld
mov
bnd
push
add
jmp
add
notb
push
cmpsb
mov
mov
add
add
pop
test
scas
jbe
mov
into
fcmovnbe
push
mov
fiadds
add
shrb
lahf
mov
sub
sub
xor
mov
add
jbe
add
xchg
jp
test
dec
inc
add
jl
adc
add
push
lods
outsb
mov
clc
shrl
ss
mov
pop
mov
stc
add
xchg
imul
rolb
or
fsubrs
jmp
aas
jge
sarl
cmpb
inc
and
sub
aam
add
add
adc
push
cbtw
test
jmp
add
scas
fdivr
inc
and
adc
outsb
pop
adc
xchg
mov
dec
xchg
adc
mov
lcall
jbe
cwtl
add
pop
out
sub
add
xchg
inc
lea
and
mov
xchg
cmp
jae
add
test
stc
incb
push
adc
mov
mov
mov
call
xchg
aas
mov
mov
mov
hlt
xchg
lea
pop
push
aad
faddl
mov
xchg
cmp
mov
xor
mov
test
mov
fwait
negl
xchg
or
sub
rcll
mov
ljmp
xor
add
xor
fs
in
cltd
mov
out
xchg
mov
insl
rclb
or
inc
inc
and
fwait
inc
and
jns
lds
adc
mov
inc
stc
and
push
sbb
pop
sbb
addl
test
bound
pop
int
sbbl
movsb
and
adc
xchg
add
sbb
xor
or
mov
call
sbb
aaa
ret
popf
add
sbb
push
pop
xor
imull
mov
addr16
xchg
shll
pop
addb
xor
sti
cmp
call
xor
or
jmp
leave
out
imul
adc
jo
add
repz
sbb
lret
and
outsl
adc
imul
lcall
adc
mov
outsb
sti
mov
popl
repz
sti
adc
das
idivb
aaa
call
xchg
dec
in
adc
push
add
incb
xchg
inc
in
xchg
fwait
dec
mov
cmc
fwait
pop
in
cwtl
arpl
mov
in
ret
cld
add
fsub
adc
leave
sub
adc
jp
xchg
mov
sub
add
stos
jge
inc
ds
dec
call
ret
or
jp
jecxz
fadds
std
pushf
cwtl
xchg
mov
sub
neg
out
cmpsb
add
add
ss
pushf
imul
and
out
add
xor
jp
in
add
pop
fnstsw
in
fwait
xchg
xchg
in
nop
xchg
shl
xchg
out
mov
hlt
call
xor
sub
mov
nop
push
test
add
mov
in
cmp
loope
add
cwtl
inc
aam
mov
or
add
mov
cmc
jae
mov
add
call
addb
jmp
loop
push
cs
icebp
add
mov
add
mov
cmp
xchg
adcb
jp
push
jmp
mov
rclb
jae
mov
push
push
or
in
mov
imul
call
bound
add
jnp
add
lea
push
push
daa
and
out
dec
call
lahf
adc
mov
cli
decl
and
pusha
cmp
push
call
jle
out
ja
je
in
cmpsb
cld
decl
fsubl
je
jbe
call
inc
gs
das
pop
jbe
inc
add
pop
pop
add
and
pop
mov
xchg
push
push
daa
jmp
mov
and
pop
pop
sti
push
adc
js
pop
mov
adc
in
dec
jb
and
dec
fistl
jmp
and
mov
or
pop
clc
lea
sbb
pop
clc
out
or
out
testb
add
fwait
loopne
call
ss
pop
pop
fiaddl
fcoml
mov
bound
das
push
pushf
fucomp
dec
data16
aam
xor
enter
xchg
push
mov
add
xchg
cs
sub
test
jge
cmp
insl
pop
add
jmp
cmp
add
test
mov
add
test
jmp
sub
shll
subl
mov
xchg
mov
add
add
test
es
ret
roll
adc
out
pushf
add
add
test
sbb
sbb
or
movsl
clc
cmpsb
lea
aas
jmp
cmpsl
and
lea
add
add
push
jbe
inc
jae
xchg
invd
je
pushf
cli
pop
test
sub
aaa
push
pop
jg
cmp
test
daa
xchg
xor
stos
insl
cwtl
lea
addb
test
fs
adc
jb
test
mov
lock
dec
in
test
rorl
into
call
js
push
loopne
cli
call
add
sbb
pushl
rol
ret
push
mov
inc
cld
clc
into
imul
stc
fstpl
adc
add
cld
jge
jo
or
mov
inc
xchg
into
mov
je
mov
je
jp
pop
popf
add
popa
loope
or
mov
cld
je
fs
mov
add
adc
add
vpermilps
adc
add
push
and
sub
flds
push
cltd
cmc
fists
test
rcrl
int
push
push
inc
lcall
cltd
jge
jns
inc
add
aam
push
imul
test
out
inc
out
ret
pop
sub
clc
mov
out
cltd
add
xchg
dec
fcompl
add
jns
add
adc
and
and
incl
add
movswl
adc
inc
xor
or
imul
jge
add
add
sub
cld
stc
ret
cmp
mov
jnp
fdivr
int3
push
repnz
es
adc
fcoml
ja
ffree
xor
imul
add
add
test
xorl
sbb
xor
out
into
in
cmpsb
add
cmp
add
jbe
fnstsw
add
dec
adc
mov
or
call
cltd
test
frstor
cmp
inc
or
push
fnsave
adc
add
mov
add
add
cmp
mov
icebp
call
cltd
jge
movsl
ljmp
add
push
and
ja
adc
add
jp
ss
shlb
les
notb
xor
push
push
and
std
push
in
jae
les
adc
repnz
and
inc
sub
xchg
add
stc
cwtl
lock
push
call
mov
mov
test
decl
aas
add
add
add
inc
or
add
cmp
idiv
add
test
add
subl
or
jnp
add
mov
add
stos
stos
add
test
ja
iret
test
add
clc
inc
dec
push
jl
add
add
add
jns
loopne
xchg
push
cmp
es
adc
and
push
sub
test
imul
dec
inc
fstpl
cmc
mov
daa
xor
xchg
push
mov
xchg
cmp
xchg
cmp
ds
loop
cld
push
in
mov
imul
adc
das
xor
fidivs
jmp
in
jae
jecxz
js
ss
lds
leave
imul
adc
add
or
js
ret
xor
ret
xor
sub
push
jle
imul
cmc
aad
ret
in
aas
push
jle
sub
aad
add
daa
mov
out
sbb
les
add
nop
inc
or
mov
xor
jno
adc
push
xchg
aam
jbe
jmp
mov
fiadds
fistpl
adc
dec
out
fiaddl
add
orb
in
jae
sti
add
mov
jb
or
hlt
stos
cmovo
leave
les
jo
add
popa
mov
xor
les
cmp
or
adc
push
add
mov
sbb
aas
rcrl
mov
add
test
pop
rorl
stos
xchg
out
imul
add
jg
mov
mov
lcall
bnd
push
mov
mov
add
cwtl
pop
xlat
data16
js
inc
cld
in
les
ds
inc
or
inc
or
mov
cld
jg
adc
jne
mov
mov
sti
mov
add
add
lea
ret
push
mov
jo
call
mov
dec
out
stos
add
das
out
add
call
mov
call
mov
add
in
stc
mov
add
pop
add
mov
xchg
xor
xchg
loopne
adc
jb
lret
cmp
push
jecxz
ds
mov
movsb
dec
jg
push
or
test
jp
push
sbb
cld
pusha
out
pop
test
out
add
add
and
testl
aad
cltd
mov
daa
nop
dec
adc
inc
xchg
ds
adc
pop
or
inc
adc
arpl
loopne
es
loope
xor
adc
xor
popa
pop
xchg
push
pop
sbb
imul
jne
icebp
imul
out
mov
loope
adc
cmpsl
loope
aad
inc
add
adc
xor
sub
out
cltd
fcomi
mov
jbe
fs
add
xor
add
xor
adc
dec
mov
aaa
dec
mov
and
mov
loope
add
push
arpl
call
or
call
int
call
adc
xchg
inc
out
add
nop
jl
sarb
out
pop
jns
inc
xchg
jno
cmp
popa
fnstsw
rorb
les
jb
mov
add
mov
aad
ret
lret
dec
cmpl
push
and
jmpw
xorl
xor
rolb
aad
addb
test
add
add
incl
sub
test
xor
push
fisttpll
push
push
icebp
pop
in
mov
clc
sti
adc
cmp
jg
sub
inc
in
and
add
xchg
mov
orb
icebp
lock
jecxz
fdiv
push
in
jb
jmp
or
out
mov
lahf
insb
add
adc
push
mov
mov
jb
rcl
adc
mov
cld
jp
add
adc
pop
adc
pushf
insb
mov
insl
mov
ljmp
leave
pop
cld
lcall
jge
cmp
and
jge
loop
out
cwtl
sbb
mov
outsl
enter
jl
in
fimull
add
mov
inc
jmp
jbe
add
add
or
roll
cmp
outsl
sbb
jbe
add
mov
call
jle
je
jle
fildll
cld
subl
mov
add
mov
hlt
cli
mov
adc
pop
or
cmp
loope
sbb
and
popl
add
sar
imul
out
xchg
xor
data16
pop
xchg
iret
jge
out
je
cld
std
mov
cmp
xor
add
aam
pop
jbe
cmp
mov
sub
push
cmpsb
std
out
sub
mov
add
add
mov
add
add
lahf
inc
je
popa
or
and
push
jle
je
rolb
add
add
add
ss
clc
cld
imul
add
cld
dec
cmpsl
int
in
mov
lea
or
js
cmp
or
roll
mov
addl
push
in
das
cmc
sti
test
imul
add
je
inc
mov
sbb
jg
mov
dec
inc
adc
push
lea
jb
js
roll
adc
add
jae
adc
inc
in
rorb
adc
call
sub
xchg
push
rorb
adc
call
add
clc
mov
add
mov
ffreep
pop
cmp
fisttpl
cld
xchg
sub
test
add
sub
inc
in
rorb
xchg
shrl
ret
add
inc
cmp
imul
add
adc
jae
imul
or
adc
xor
in
mov
add
sbb
mov
mov
js
xor
dec
es
out
xor
test
fldenv
divw
or
lock
xchg
jp
or
inc
add
add
data16
or
test
push
xchg
jb
es
push
and
sbb
jecxz
rcrb
xchg
add
fldz
pop
shrl
std
push
inc
add
pop
int3
push
jb
push
adc
stos
mov
xor
sub
adcl
jne
xchg
test
xor
mov
mov
loope
lds
add
cmp
shlb
sar
adc
xchg
add
and
add
or
ret
add
out
push
pop
add
adc
mov
xor
in
and
clc
xchg
movsl
out
jo
mov
dec
sub
cld
mov
xchg
subl
clc
add
add
lock
adc
jmp
xor
std
out
xor
sti
push
add
push
jmp
pop
leave
ljmp
in
lods
push
das
fildl
push
clc
cmp
pusha
adc
xorb
jmp
mov
xchg
or
adc
repnz
out
add
add
mov
je
inc
icebp
mov
adc
out
mov
add
arpl
add
cmp
outsl
cmp
inc
data16
xor
lret
shll
or
out
and
shrb
je
or
testl
dec
loope
das
aad
cmc
fimuls
adc
mov
add
outsl
popa
rcrl
fimull
out
add
jnp
cmpb
pop
shlb
cmpsl
rolb
add
adc
add
pop
shrb
cmp
lcall
stc
jno
negb
jne
test
jmp
pop
jp
pop
cmp
roll
add
out
mov
add
call
add
add
aas
pop
cmp
cld
insb
mov
xchg
insl
decb
add
adc
mov
sti
mov
jns
add
xor
jmp
adc
cld
fdivl
aas
jmp
adc
shlb
aas
push
insl
jb
jl
std
imul
call
mov
test
mov
dec
dec
cwtl
fimuls
insb
das
repnz
sbb
xchg
add
js
add
fldl
nop
test
out
xlat
je
sub
jne
cmpb
pushf
cmp
lods
lock
inc
movsl
add
cmp
lods
hlt
jo
cli
test
aad
hlt
call
mov
pop
add
in
repz
mov
jp
in
mov
dec
sti
inc
lea
and
shll
sldt
insb
in
jmp
inc
clc
inc
inc
or
mov
ffreep
xrelease
decb
xlat
rorl
call
xchg
mov
out
cmp
inc
sbb
in
fs
mov
dec
sbb
add
mov
add
add
jae
xlat
out
sti
adc
and
inc
add
pop
stc
and
add
test
jo
lcall
inc
std
fidivrs
out
fdivl
lea
sbbb
fidivl
cmp
add
jle
insl
pop
adc
mov
push
push
jg
push
jl
imul
inc
and
out
sti
add
pop
hlt
adcb
scas
ds
roll
lret
add
ss
movsl
sarl
push
out
xchg
inc
cmp
imul
fimuls
jle
insb
pop
jle
push
imul
push
cld
out
stos
addb
test
jb
push
orl
add
jmp
mov
shrb
pushf
cmpsb
ja
in
or
adc
add
add
mov
out
adc
jge
cmpb
or
inc
gs
xor
and
in
sub
cmp
daa
adc
daa
adc
jg
aad
push
jb
bound
sti
leave
js
add
in
loope
lcall
add
leave
push
out
mov
add
add
in
cmpb
jb
add
pushl
shr
dec
in
fucomip
sti
data16
inc
xor
cmp
push
add
jg
and
test
push
jecxz
add
imul
dec
lods
inc
jg
aas
fwait
sti
cmp
push
mov
sbb
aam
adc
sub
loop
aaa
lret
push
add
dec
adc
or
sub
roll
adc
sbb
out
dec
ds
dec
ss
adc
call
mov
add
rorb
test
mov
cld
jle
les
and
or
cmpsb
add
adc
insb
cld
fnsave
outsl
cld
lcall
adcl
loop
jle
or
std
or
stc
xchg
add
add
or
add
sbb
sarb
test
in
push
mov
repnz
shl
or
dec
cwtl
addr16
pop
lds
out
cwtl
in
add
add
add
mov
xor
xchg
mov
setno
ret
out
jbe
cwtl
outsb
add
gs
repz
out
pop
loop
pushf
pop
and
in
outsb
cs
cmp
push
out
daa
data16
xadd
rcll
sar
or
data16
jmp
es
call
je
and
adcl
addr16
jmp
mulb
adc
stc
add
adc
test
xchg
subb
adc
std
aam
adc
mov
or
lds
orb
add
sub
gs
jmp
adc
add
inc
rcll
out
iret
cld
add
jg
jne
out
and
add
add
call
mov
clc
add
call
test
pop
push
add
push
xor
inc
and
dec
dec
mov
add
xor
add
mov
lea
push
cmc
cmp
dec
test
push
mov
dec
test
in
sub
sti
test
imul
add
and
push
in
adc
sti
je
adc
add
dec
push
cld
popf
sti
or
inc
xchg
les
push
pop
das
rolb
popa
or
adc
add
gs
push
pop
cmpb
add
jae
and
pop
add
test
and
adc
std
jge
insb
mov
or
cmc
or
cld
sbb
imulb
adc
cwtl
add
aad
ret
push
sbb
les
cwtl
add
aad
mov
mov
shl
add
sbb
or
push
cli
sub
and
and
sbb
iret
adc
out
imul
lock
movsb
cwtl
arpl
pop
jge
lea
pop
pop
or
arpl
jg
lds
pop
aaa
push
push
push
adc
mov
pop
sbb
add
out
add
sub
add
add
insb
movl
arpl
mov
dec
ja
lock
push
fs
ret
add
in
scas
loope
call
adc
std
cld
into
dec
inc
jmp
shlb
jmp
add
nop
cs
cld
jmp
jnp
push
sub
scas
fistpll
out
pushf
gs
pop
xchg
pop
cli
data16
sub
push
dec
inc
pop
dec
sub
inc
push
mov
std
mov
push
bound
add
jbe
in
das
mov
in
adc
add
mov
fsub
popf
xor
sti
lea
dec
in
stos
xlat
sti
or
cld
push
movsb
mov
cld
imul
sub
call
add
repz
cld
call
sub
add
push
jb
jmp
jns
mov
push
ja
cmp
call
repz
push
rolb
lock
adc
in
push
dec
xchg
addr16
cmp
cld
jb
les
cs
imul
add
dec
sub
std
cld
mov
jo
lcall
sbb
pop
roll
mov
repnz
insb
add
adc
push
mov
or
addr16
scas
xor
addr16
xchg
dec
incl
out
sar
pop
jl
mov
pop
xchg
jle
cmpl
push
jmp
imul
add
lods
jbe
cwtl
push
int
add
push
inc
add
aam
dec
add
mov
mov
inc
ljmp
aam
into
gs
js
dec
ds
pop
mul
add
pop
out
or
adc
push
mov
popa
mov
mov
push
push
pusha
pop
jns
stc
mov
ret
add
xchg
iret
popf
js
push
jno
outsb
or
mov
mov
dec
je
push
mov
lds
push
negb
fadd
lret
push
inc
push
mov
jb
jmp
add
mov
ret
stc
xchg
push
sbb
xchg
xchg
call
jmp
sub
pushl
or
sahf
or
fwait
pop
cld
jmp
rcrb
add
adc
add
leave
pop
jb
aaa
repz
fcmovnbe
pop
or
stos
pop
jo
mov
adc
pop
push
inc
push
outsb
pop
mov
cmp
scas
pop
dec
ljmp
fildl
push
fldl
sub
mov
dec
dec
ljmp
inc
or
arpl
mov
dec
je
test
add
clc
insl
sbb
fs
add
cmp
or
mov
add
mov
or
jmp
outsb
add
in
sar
decl
lds
adc
int
jge
pop
notl
jle
add
or
adc
inc
xor
gs
push
arpl
add
or
outsb
or
call
xchg
cmpsl
repz
add
clc
or
add
iret
mov
and
int3
and
mov
jg
fisubs
mov
xor
cli
je
cmc
inc
incl
jecxz
adc
out
sub
push
repnz
out
or
and
ret
jle
and
add
out
popa
sub
int
pop
and
jo
mov
xchg
lcall
mov
cmpl
jle
adc
stc
fwait
mov
test
push
push
sti
adc
filds
cpuid
outsl
or
add
dec
push
into
xchg
aad
dec
push
and
out
inc
or
sbb
mov
jno
add
pop
mov
dec
push
cld
push
xchg
push
inc
xacquire
test
out
popa
pop
cld
fs
sbb
pop
cld
insb
dec
pop
sbb
mov
xlat
insb
push
rolb
pop
sbb
ss
movb
cmp
pop
dec
rol
call
pop
xchg
adc
or
sub
add
mov
pusha
mov
pop
addb
cld
dec
jne
xchg
in
loope
sti
push
das
stc
fcmovnbe
imul
adc
sbb
out
cmpl
sti
pushl
cld
decl
pop
pop
push
mov
pop
sub
add
jmp
push
push
aas
xor
lea
mov
call
add
stos
popa
hlt
add
adc
dec
mov
mov
add
sarb
std
lock
xchg
adc
aam
mov
and
mov
push
dec
rorl
mov
out
or
in
pop
jae
in
fidivl
pushf
mov
jle
inc
jb
dec
mov
dec
vpaddusb
mov
gs
add
int3
sti
xlat
dec
dec
movsb
or
dec
cmp
xor
lea
cmp
aam
sti
mov
int3
bound
xchg
pop
adc
testb
fwait
pop
jb
add
mov
xchg
push
imul
mov
mov
sbb
insl
pusha
loopne
dec
in
pop
pop
mov
add
sbb
add
xchg
xor
adc
xorl
mov
loop
pop
out
in
adc
stc
mov
jbe
lods
pop
movsl
xor
loop
adc
xor
ret
mov
xor
ja
xchg
fsubp
in
add
setb
xchg
fisttps
add
add
leave
fisttpll
add
lret
pop
push
fidivrs
inc
push
cmpl
es
xchg
fwait
cmp
cmpsl
rcll
rorl
filds
fs
push
jae
jge
xchg
inc
adc
imul
add
or
ds
add
xchg
dec
ss
cmc
repz
mov
inc
xchg
fs
add
add
jo
inc
orb
stc
call
incl
cmpsb
stos
jae
gs
add
inc
pop
pop
ret
jnp
data16
test
pop
jnp
bnd
mov
xor
inc
cld
xor
mov
je
mov
sub
inc
cld
cmp
pop
inc
sti
mov
lock
mov
and
add
imul
mov
sti
out
add
lods
jge
cmp
cld
xor
aaa
lret
mov
cld
xor
jecxz
ss
adc
inc
xchg
popf
sub
rcrb
pop
call
out
push
mov
dec
daa
xchg
xor
mov
xchg
loope
mov
rclb
xchg
cli
mov
add
xor
xchg
sub
jp
xchg
add
loopne
add
xor
shll
dec
cmc
testb
cwtl
movsl
lock
xor
pop
cwtl
insl
and
dec
test
pop
adc
incb
inc
and
addb
out
sahf
icebp
add
cmc
aad
popf
aad
mov
scas
push
inc
pop
mov
out
aam
lods
mov
daa
add
xchg
dec
repnz
xchg
push
xchg
popa
shl
jle
xlat
roll
out
push
call
xlat
cmp
orb
fmul
sbb
dec
int
xchg
rcrl
add
add
mov
cmp
lahf
cmp
inc
jmp
pop
jnp
stc
inc
sar
stos
inc
push
bound
dec
pop
add
jge
arpl
or
dec
out
sub
add
sti
subl
add
mov
ror
xor
fbstp
mov
aam
mov
fdivrp
jmp
cltd
mov
sti
mov
mov
cmpb
dec
dec
cld
incl
inc
dec
push
fists
inc
sub
push
dec
cmp
loopne
fucomip
and
jo
orl
sarb
std
data16
pop
or
inc
or
hlt
add
inc
out
inc
mov
push
fcoms
call
xchg
jo
cmp
or
movsb
dec
sti
jne
mov
adc
xor
gs
push
inc
mov
leave
sub
push
mov
aaa
frstor
cli
cld
incl
add
data16
iret
adc
repz
adc
mov
sub
clc
sub
add
xor
and
add
or
push
test
add
lcall
rcrb
rcll
lcall
sbb
xor
push
aad
aas
fldl
mov
dec
xor
mov
adc
add
fdivl
jbe
mov
mov
xor
fisttps
add
cmpsl
add
out
mov
adcb
loop
mov
pop
cmp
out
sbb
int3
mov
or
add
cmp
cmp
es
es
or
add
mov
add
jmp
aad
in
in
out
add
push
sti
test
add
lahf
pop
leave
inc
push
and
mov
xchg
or
out
arpl
out
xor
add
ss
dec
or
and
inc
mov
out
cs
push
std
cld
push
repnz
jmp
addr16
jmp
mov
push
xchg
test
pusha
cld
rorb
push
adc
ss
sti
cmp
add
dec
push
jo
dec
cld
lahf
nop
jae
mov
push
xchg
jnp
cld
xchg
xchg
jae
mov
sti
sbb
repnz
pusha
mov
jae
xchg
lret
push
push
mov
pop
add
call
mov
and
cmp
dec
push
ret
icebp
jecxz
push
pop
adc
add
jnp
xchg
mov
add
add
sbb
and
jbe
iret
sub
adc
add
pushl
rolb
add
add
sub
xorb
sbb
imul
subb
test
cmp
cmpsb
push
std
dec
mov
cwtl
adc
incl
push
incb
add
push
mov
stos
ret
add
mov
inc
push
push
lods
iret
push
leave
out
xlat
or
pop
out
mov
adc
lret
push
aad
push
cwtl
and
mov
loopne
imul
add
pop
xchg
inc
filds
add
fadds
mov
fcmovnu
outsl
adc
decl
add
adc
out
inc
jp
out
nop
inc
loop
lret
aam
dec
call
test
negl
add
jmp
mov
dec
jae
ret
add
sub
lods
xchg
lret
jp
add
es
or
mov
pop
insb
in
out
call
inc
push
icebp
fwait
xor
inc
mov
add
add
add
jle
aad
jmp
dec
xlat
ljmp
xor
mov
test
add
test
mov
scas
mov
xchg
sbb
mov
mov
scas
iret
pop
mov
adc
icebp
fwait
mov
inc
mov
cmpsl
jae
ja
add
adc
std
jl
ja
inc
fimull
xchg
out
add
bound
aaa
popa
dec
cld
inc
lods
jle
push
and
add
pop
jb
mov
or
mov
xchg
call
fs
cld
fs
rclb
push
xlat
incl
sbb
add
xchg
data16
addl
add
ret
add
sub
jmp
sub
push
or
push
repz
in
pop
inc
cld
incl
add
scas
jno
lods
sub
mov
in
scas
sti
test
incl
push
xchg
add
sti
jne
lret
inc
call
in
lea
cmpsb
sahf
jg
scas
jg
jg
sbbl
call
dec
das
rclb
filds
cmpsb
imul
inc
test
push
jns
cli
incb
add
mov
add
and
jl
sbb
push
or
and
add
fistpll
mov
iret
jnp
inc
in
or
mov
add
fmuls
add
fsubl
jnp
pop
jnp
icebp
in
or
ja
add
fmuls
add
fdivl
out
push
jnp
cltd
dec
test
push
in
call
push
cmpb
sub
nop
cmp
add
add
mov
push
xchg
inc
cli
adc
mov
xchg
cmpsb
push
gs
jbe
popa
push
jne
scas
test
shlb
lret
dec
dec
push
pop
dec
xor
jl
push
jno
pop
mov
jle
sub
add
dec
push
sub
dec
cmc
test
cmc
imul
imul
add
dec
bound
in
push
cli
jno
push
jl
cltd
sbb
push
std
cmpsb
popa
pop
or
mov
dec
pushl
push
mov
ds
sub
loope
pop
bound
pop
ret
add
mov
incl
jmp
jnp
inc
movl
mov
insl
rcl
arpl
sbb
je
add
cmpsl
xor
roll
inc
cld
testb
xor
movsl
add
add
decl
add
or
repz
sti
test
push
mov
mov
or
movsb
fimull
xchg
jno
or
call
xchg
repnz
jns
jo
in
hlt
std
divl
sti
decl
stc
call
jecxz
jg
sarb
xor
add
push
sahf
mov
lds
and
stos
add
cmp
xchg
mov
and
mov
pop
adc
pop
addb
xchg
push
push
bound
mov
mov
lods
daa
xor
dec
adc
push
pop
xchg
pushf
add
and
inc
xor
adc
push
pop
aad
and
pop
mov
mov
add
sub
add
test
daa
sub
sbb
push
jns
jle
jle
les
cmp
jle
sub
mov
call
inc
in
divl
incb
and
nop
testl
add
les
sub
mov
inc
xor
icebp
outsl
add
jns
mov
jno
xchg
push
inc
mov
add
lret
mov
sbb
or
add
mov
inc
lods
jbe
filds
adc
and
dec
mov
add
add
into
jae
mov
dec
xlat
out
cmpsl
and
cli
mov
fucomi
dec
sub
inc
mov
sub
xchg
fistl
icebp
call
add
adc
hlt
orb
andb
cld
cld
sbb
ds
jmp
rolb
dec
cmpsl
rep
stc
into
add
push
pop
test
adc
inc
adc
std
mov
imul
adc
roll
andb
inc
or
adc
adc
dec
lahf
aad
repz
addr16
cld
cld
inc
out
aas
jmp
cmp
sbb
movntps
test
sti
adc
jne
jno
out
push
test
cmp
cmp
sti
pushl
inc
or
movsb
mov
mov
lcall
adc
cmpsl
xor
jg
add
xchg
cld
cli
jne
movsl
mov
add
jo
add
add
decl
movsl
jle
mov
xchg
pop
pop
and
call
in
inc
jp
and
mov
mov
pop
scas
push
test
iret
dec
cld
loop
adc
push
inc
dec
cld
xchg
push
dec
or
pop
add
adc
imull
rcll
imul
inc
cmp
pop
sub
test
adc
cmp
add
popa
mov
inc
cmc
loopne
out
pop
add
lcall
xchg
xlat
sbb
jg
adc
mov
pop
ds
adc
xchg
add
pushf
sbb
inc
and
dec
jb
add
or
rolb
mov
iret
repnz
mov
stc
lret
cld
dec
add
ljmp
jecxz
fnstsw
add
jge
dec
or
add
repnz
out
xchg
outsl
out
adc
mov
adc
xor
insb
shl
aaa
inc
push
std
out
fstpl
inc
mov
mov
rcrb
jl
xlat
out
jbe
das
dec
gs
pop
sub
repz
mov
rclb
ja
lods
push
add
or
jmp
add
bound
outsl
enter
or
push
dec
cmc
out
cmp
cld
jb
stc
clc
push
cli
cmpsb
ss
std
push
xor
cld
cmp
aad
cld
mov
sub
fisttpll
cld
sbb
icebp
call
std
mov
les
loope
inc
jae
xchg
inc
or
adc
aad
fnstcw
popa
adc
ret
and
add
mov
and
das
je
ljmp
leave
adc
pop
inc
cld
test
dec
push
mov
aaa
ret
jl
bound
and
decl
xor
adc
jne
out
in
jecxz
sti
cmp
pop
call
push
and
loopne
pop
incl
inc
fcoml
test
mov
inc
sbb
jg
addl
nop
jo
arpl
mov
push
xor
gs
je
pop
cld
vmread
mov
add
inc
std
dec
mov
or
jge
or
je
xorb
pop
adc
push
rcll
pop
sub
ret
gs
incb
add
shr
iret
push
sub
mov
sar
in
pop
adc
add
test
adc
test
and
sub
sbb
dec
stc
cld
xchg
stos
inc
cld
add
jmp
imul
add
lock
inc
adc
into
xstore-rng
cmpsl
add
jne
jp
orb
stos
stos
lods
mov
arpl
ds
std
pop
ds
mov
loop
or
pushl
add
xchg
cmp
int
subb
add
lods
mov
aad
mov
mov
roll
sub
jbe
ds
fwait
mov
mov
dec
sarl
sarl
lea
or
push
mov
call
popa
int
pop
andb
or
add
cld
xchg
mov
add
dec
pop
outsb
sub
jb
ffree
sti
loopne
add
push
mov
imul
iret
adc
lods
dec
mov
imul
cmpl
xchg
adc
daa
cmc
shlb
adc
cmpb
cmp
mov
xor
xchg
popf
cmp
fmull
or
cmc
divb
add
mov
sbb
decl
call
jecxz
sbb
and
sti
jne
fdivs
shlb
xor
je
mov
adc
cmp
dec
add
enter
cmpl
ljmp
subl
xor
movb
in
insl
jg
dec
call
add
jmp
mov
scas
adc
cwtl
jecxz
scas
adc
dec
rorl
daa
notl
cmp
repz
cmp
lcall
enter
mov
add
inc
cld
xchg
jmp
add
lcall
cld
mov
mov
shl
add
inc
cld
cwtl
in
out
add
test
shl
dec
dec
pop
dec
and
add
test
add
adc
imul
adc
testb
cld
add
cli
mov
out
out
pop
adc
cmpsb
nop
or
popa
dec
inc
xchg
inc
mov
hlt
sub
cmp
sub
cmp
add
add
dec
clc
ret
push
xchg
out
test
mov
mov
add
dec
test
in
add
lods
enter
sub
cmpsl
in
cmp
push
fsubrl
add
jmp
xor
mov
rcll
enter
leave
pop
and
ljmp
cmpb
cmp
loope
add
push
imul
pop
and
call
rorl
pop
es
or
cld
hlt
push
inc
jmp
adc
test
add
bound
xor
or
std
shr
into
push
stc
rolb
gs
mov
int3
inc
mov
jo
adc
inc
sub
addb
cmpsl
mov
cmp
cli
je
sbb
adc
push
aam
add
pop
add
push
add
fs
mov
rcll
mov
int3
inc
cmp
dec
push
sbb
xchg
test
popf
sub
cmp
or
mov
and
fadd
jo
jo
andb
call
inc
lahf
fwait
movb
add
cmc
pop
add
mov
add
ret
cmpsl
data16
add
adc
xchg
push
mov
jl
out
adc
cmp
mov
fucom
mov
push
mov
cmp
lcall
stc
cmp
cli
ljmp
es
shlb
push
inc
adc
add
pusha
add
add
add
mov
and
push
sub
imul
push
add
ss
and
out
push
frstor
sub
lcall
dec
xlat
adc
adc
jno
scas
fcmovne
add
jge
mov
iret
fnstenv
adc
sbb
add
add
jecxz
mov
rorl
dec
or
sbb
add
push
mov
roll
add
xor
push
rcrl
ss
mov
ds
add
rolb
inc
mov
add
add
pop
int
xor
lret
pop
and
jb
xchg
push
mov
add
loope
adc
shlb
jb
xchg
ret
mov
adc
pop
xor
icebp
popa
ds
add
shll
seto
cld
add
adc
addr16
adc
addr16
push
sub
out
aaa
xor
jb
fsubl
or
mov
cld
add
sbb
inc
clc
add
or
add
add
xor
jne
push
in
mov
sti
cmp
je
cmp
enter
mov
add
and
outsl
insb
and
scas
imul
sub
inc
push
xchg
inc
addl
push
mov
dec
push
out
push
xor
call
jg
iret
push
lea
jmp
mov
fildll
jmp
sti
jne
push
sti
jne
cmc
adc
xor
and
push
lcall
sub
add
add
adc
jl
inc
int
cmc
cmp
xchg
push
sti
jb
cmc
push
push
inc
jae
sbb
jmp
inc
inc
in
xor
decl
adc
push
imul
and
inc
adc
add
adc
cmp
xor
jb
ret
push
jo
push
xchg
add
jecxz
test
stos
filds
add
shll
idivb
adc
cmc
jle
cmp
insb
shlb
add
mov
mov
xor
popa
xor
mov
add
movups
sbb
and
fcmovbe
xchg
or
adc
add
outsb
lret
ret
add
jge
scas
xor
inc
cmovno
adc
imul
xchg
rolb
add
cmp
cmp
xstore-rng
cmpsl
add
shlb
leave
ds
in
adc
mov
adc
xchg
cmc
lock
lret
cmc
mov
inc
aad
or
sbb
cld
pop
and
hlt
clc
xor
data16
pop
into
mov
sub
into
mov
adc
mov
jge
sbb
add
push
cmc
adc
out
dec
jae
mov
cmc
pop
xor
std
jl
dec
mov
ljmp
add
popa
or
pop
add
jne
dec
sti
jne
clc
adc
cld
pop
add
sbb
jl
jo
out
adc
out
or
pop
cld
out
repnz
ljmp
in
sti
jne
add
aas
add
jge
call
cld
ret
jo
ds
mov
push
xchg
xlat
adc
add
in
out
jg
out
sbb
sbb
add
aad
add
fwait
mov
mov
dec
xorl
lods
add
int3
and
cld
and
adc
outsl
pop
cmp
adc
sub
add
mov
mov
or
mov
cld
notl
push
sbb
hlt
ljmp
mov
or
gs
xor
sahf
cld
adc
iret
mov
mov
adc
cld
jb
adcb
sbb
xor
in
push
sahf
cld
hlt
add
adc
add
cld
or
mov
add
mov
add
test
adc
inc
shrl
bound
add
test
mov
shlb
add
fstpt
and
pop
adc
add
aaa
add
ret
mov
add
add
rcrb
add
es
inc
shll
mov
adc
cmpsb
fcoms
out
cltd
sbb
mov
add
adc
push
test
jle
aas
jmp
jle
push
push
stc
out
call
shlb
call
adc
sarl
sub
pop
lret
pop
es
rclb
add
out
sti
cmp
js
insb
inc
fdivrp
cld
lock
cwtl
inc
dec
shrl
cld
mov
add
cltd
adc
or
adc
and
es
inc
add
test
pop
cwtl
mov
loopne
clc
add
js
in
cmp
mov
mov
xor
push
inc
cld
testb
xor
add
mov
test
push
cmp
test
add
fldl
fldt
leave
rolb
cmc
sarb
ja
rcrl
pop
hlt
call
pop
xor
inc
jp
push
adc
int
lcall
fadd
push
lods
pop
flds
push
lcall
push
loop
dec
in
rcrb
iret
xchg
mov
add
mov
lods
add
daa
add
add
rcrb
rcrb
std
jmp
lret
sbb
cld
popa
sbb
repz
jle
sbb
mov
imul
sbb
call
jecxz
jo
xchg
sbb
cld
xchg
aaa
adc
adc
fs
jecxz
push
cmp
out
add
fadd
dec
jl
xor
xchg
out
add
jl,pt
mov
rcrl
sub
repz
push
shl
pop
mov
adcb
pop
mov
sub
push
inc
inc
push
sti
or
data16
mov
shll
pop
inc
jle
add
arpl
cmp
xor
mov
ret
scas
ja
jo
out
fsubrs
cmp
push
push
sub
sub
sub
add
sar
add
std
mov
sub
mov
push
cmp
add
fdivr
push
sub
xchg
add
mov
adc
and
in
fwait
push
inc
sbb
sub
push
xor
stos
adc
ficoml
adc
call
insl
push
scas
insl
out
pop
idivl
sbb
sub
mov
push
add
add
les
and
mov
sti
ljmp
add
sti
je
cmc
push
call
push
cmpsb
sub
inc
cld
ljmp
sti
inc
js
je
lods
or
clc
inc
cld
mov
dec
jg
std
cli
je
std
mov
dec
in
clc
icebp
sti
data16
aas
shrb
ds
in
mov
clc
xor
add
jle
inc
sarb
push
fnstsw
pop
xlat
das
xor
adc
add
notb
adc
call
out
std
inc
das
jae
xor
orb
cmp
das
push
mov
push
inc
adc
faddl
fiaddl
pop
push
push
add
cmpsb
and
cltd
sbb
adc
add
data16
sbb
xchg
incl
add
rcr
daa
adc
test
sbb
or
sbb
andb
push
inc
adc
adc
and
xchg
push
in
iret
push
add
add
imul
das
movsl
add
movsl
lahf
cld
add
insb
mov
xchg
out
into
sub
add
push
xchg
das
mov
cli
mov
add
mov
add
sbb
mov
cs
out
repnz
add
push
ret
push
jl
mov
and
ret
mov
stc
orb
lcall
or
es
lcall
add
std
out
cmp
push
mov
out
inc
and
cld
sbb
add
and
lea
sar
mov
add
xchg
movsl
pop
repnz
mov
dec
jle
cmp
sub
cwtl
call
xor
rorl
call
dec
hlt
and
adc
add
sbb
mov
call
jb
loope
cmp
js
out
add
aas
sub
sub
or
pop
adc
leave
push
stos
dec
inc
test
inc
and
push
in
int
sti
push
iret
or
pop
pop
and
call
push
mov
or
xchg
rcll
jne
cld
pushl
in
cmp
add
sub
add
jnp
or
cli
pop
add
lds
push
das
or
adc
xchg
inc
jae
lahf
inc
inc
pop
sbb
stc
cmpb
pop
adc
rolb
sbb
dec
sub
sub
pop
in
lcall
mov
fcompl
fadds
fiaddl
push
jbe
sub
push
add
dec
mov
dec
adc
sbb
clc
add
mov
les
cld
es
clc
cld
add
adc
pop
ja
sbb
add
sub
adc
out
js
push
mov
or
ret
xor
push
jecxz
out
xchg
push
mov
imul
sbb
rorb
jg
adc
lret
add
popa
ss
fidivrs
lret
add
fdivr
sub
insl
stc
ret
pop
jbe
cmpl
and
cli
jge
fidivrs
fmul
shll
insb
mov
and
clc
daa
aam
add
jg
and
add
sar
dec
scas
add
pop
sbb
rcr
pop
push
and
mov
shlb
data16
fistpll
int
and
bound
idiv
call
add
adc
dec
inc
in
cld
mov
scas
or
ficomps
mov
jno
call
adc
js
xchg
rcr
mov
sub
jae
push
and
adcb
cmc
cmc
or
add
ret
pop
sub
and
incb
call
ljmp
cld
xchg
dec
push
mov
jno
addl
add
push
jmp
mov
sbb
cld
out
mov
pop
lea
sub
xor
ss
sub
mov
aas
push
mov
dec
xor
inc
and
dec
test
test
test
in
sti
test
test
addb
add
push
pushf
leave
sbb
data16
jmp
cmpsb
inc
jae
out
and
xchg
mov
daa
adc
flds
and
lds
jnp
cmc
xor
hlt
mov
xchg
lods
and
repz
jne
mov
xor
add
sbb
push
cld
aad
adc
imul
std
orl
add
add
jne
in
cmp
daa
xor
lods
and
add
data16
sub
sbb
sub
sbb
std
mov
push
dec
inc
mov
outsl
adc
out
and
rclb
and
xchg
das
mov
outsl
leave
ret
mov
adc
xchg
pop
out
xchg
inc
push
add
nop
sbb
notb
and
clc
fwait
lds
add
popa
mov
cwtl
mov
adc
push
adc
add
xchg
test
stos
mov
popf
lret
inc
outsl
xchg
sbb
dec
xor
sbb
cld
je
mov
inc
add
add
jmp
out
sbb
mov
add
cld
orl
out
rcrb
cld
push
ljmp
xor
orl
sbb
pop
xlat
push
push
subl
push
push
mov
adc
mov
fsub
sti
xor
sub
hlt
xor
jmp
ljmp
jmp
call
cli
cli
pop
out
shlb
call
add
call
jmp
mov
lds
lcall
jo
inc
shlb
push
in
and
add
add
inc
call
pop
rcrb
pmaxsw
ljmp
inc
or
inc
add
sub
les
test
push
call
mov
xor
les
jp
push
lods
jmp
add
xor
bswap
dec
push
sbb
push
push
sub
adc
fstpt
xlat
ss
cmc
js
xor
mov
or
lret
add
adc
mov
sub
add
sbb
sarl
mov
fistl
addr16
sbb
or
cmpsl
cmp
add
add
xchg
inc
bnd
cmp
push
mov
scas
data16
pop
ss
add
xchg
add
mov
sub
add
jg
or
nop
js
xchg
mov
inc
in
pop
add
add
popf
add
pop
notb
sbb
lds
jle
or
scas
sbb
js
or
add
adc
mov
and
repz
inc
jmp
mov
mov
jmp
xor
inc
popa
jge
call
adc
and
cwtl
cmp
push
cmp
adc
inc
mov
jnp
lahf
adc
sub
enter
add
xchg
outsl
aam
subl
xor
out
add
ficoms
add
pop
mov
sub
fbstp
jb
and
jnp
bound
shlb
cmpsb
lea
lds
in
sub
mov
lea
add
subl
dec
mov
mov
mov
inc
add
sub
inc
cmp
jp
mov
mov
mov
push
hlt
sar
aaa
mov
arpl
or
movsl
fucom
imulb
ljmp
cmp
je
mov
outsb
inc
sti
add
lods
sbb
dec
xchg
cmpsl
imul
jbe
push
xchg
fistps
push
and
xchg
add
add
aaa
mov
add
dec
shl
ds
sub
pop
dec
fildl
cmp
pushf
mov
orl
xchg
ret
mov
mov
addr16
ret
and
xchg
jb
mov
pop
scas
or
ljmp
movsl
pop
decb
add
fwait
sbb
and
xor
int
add
jbe
mov
adc
shrb
and
ljmp
sbb
mov
sbb
sub
mov
scas
adc
xchg
shl
push
mov
xchg
pop
out
shlb
cmpsb
add
jbe
add
mov
aam
fistl
xchg
pop
scas
mov
sbb
pop
push
add
inc
loopne
aam
scas
ljmp
incb
inc
in
xchg
xchg
adc
push
sbb
repz
push
pop
subl
icebp
aas
jmp
cli
mov
jmp
sbb
pop
adc
add
pop
pushf
scas
adc
mov
sbb
xchg
stos
and
push
fld
mov
add
out
call
cld
push
loop
in
pop
jae
gs
xchg
pop
cs
pop
call
shll
cmpsl
cld
mov
mov
rclb
outsl
jle
pmuludq
sbb
sub
adc
cmp
cld
push
shll
cmp
and
cmp
testl
add
add
cmp
adc
movsl
shll
aas
add
adc
add
testl
test
outsb
push
je
adc
adc
push
call
scas
push
mov
out
and
sub
jae
xchg
inc
mov
test
adc
int
in
cld
aaa
push
adc
stos
and
add
pextrw
cmp
and
mov
jbe
cld
lcall
xor
push
or
jecxz
fistpl
push
xchg
or
in
xchg
ret
inc
xchg
cmpsl
sbb
insb
jle
or
cld
add
icebp
aas
adc
rol
repnz
fildl
in
stos
mov
adc
std
xchg
fnsave
add
xor
in
xchg
inc
push
or
stos
inc
add
sub
sbb
out
es
mov
mov
mov
ficoms
adc
test
dec
out
es
mov
out
adc
mov
and
es
or
in
daa
ljmp
cld
aam
repnz
jmp
add
lea
pop
sub
push
adc
fwait
call
decb
or
pop
out
mov
push
std
gs
and
mov
add
mov
mov
movsb
stos
push
sahf
inc
stos
push
sub
shl
jo
pop
subb
mov
dec
inc
mov
cmp
sub
mov
call
shlb
clc
out
addr16
sub
jne
jg
and
xchg
jnp
or
mov
decl
test
test
adc
ljmp
pop
or
aad
pop
pusha
mov
add
mov
daa
repnz
test
sbbl
add
aad
pop
mov
add
xchg
jnp
or
aas
mov
int3
jmp
cmc
or
xchg
fst
sub
mov
ja
mov
mov
nop
lds
or
sub
push
sbb
adc
cld
cmp
push
mov
jmp
lcall
jp
and
or
sub
scas
add
adc
add
push
out
mov
das
orb
aad
imul
pop
add
out
call
lcall
mov
dec
mov
testl
add
mov
dec
out
dec
repnz
add
xchg
xchg
mov
sbb
adc
adc
mov
xlat
mov
mov
scas
add
into
sbb
sbb
jmp
mov
xchg
or
add
in
push
adc
lahf
xadd
adc
cmpsb
adc
sub
gs
lcall
scas
lds
inc
adc
sbb
and
mov
shl
lret
and
sbb
jmp
xor
fsub
dec
aas
sub
or
sbb
lahf
adc
ret
add
fwait
pop
rcrl
mov
call
cmpsl
or
jno
lret
add
lea
jg
ret
jge
xorb
xchg
pop
ljmp
lcall
inc
in
adc
rolb
and
cmpl
daa
jns
fsts
inc
xchg
xchg
lcall
out
xor
jmp
cmp
jg
add
sub
jne
notl
jne
jo
cmpl
mov
cmpl
push
aad
mov
mov
mov
fisttpl
xor
inc
mov
dec
sbb
rclb
add
or
inc
cld
out
pop
std
dec
lret
test
jge
cld
add
mov
stc
jg
js
aaa
shll
push
jg
pusha
mov
incl
add
jb
in
cmp
xchg
xor
jo
adc
repz
mov
testb
mov
adc
lds
adc
mov
adc
sub
and
rol
inc
sub
dec
incl
orl
jle
sbb
ret
mov
movsl
inc
jae
push
aad
sar
pop
sub
push
das
adc
daa
sub
push
lret
push
mov
pop
mov
popf
inc
jae
call
test
or
sbb
lds
fiaddl
adc
jle
repnz
jne
or
add
add
std
inc
inc
inc
add
add
xchg
mov
shl
push
or
adc
insb
inc
inc
in
add
mov
xchg
adc
int
ret
xchg
test
nop
sbb
in
mov
or
inc
xchg
cmpsl
sbb
cmp
sbb
pop
cld
cmpsb
and
iret
mov
mov
push
cld
jb
jg
cld
push
sarb
pop
add
and
int
sbb
adcl
sti
xchg
mov
inc
repnz
xchg
jmp
adc
push
mov
xchg
add
mov
js
push
or
or
std
out
cltd
inc
pop
inc
rolb
mov
adc
mov
inc
loopne
add
jns
mov
cmp
or
push
lea
add
sbb
adc
into
inc
sub
js
test
in
jae
jnp
and
call
and
es
sti
ljmp
jno
push
imul
add
imul
test
push
into
inc
test
mov
add
push
adc
sbbl
add
lahf
mov
lcall
mov
cld
dec
repnz
adc
and
jecxz
les
adc
rcll
jb
jae
or
cmc
sti
cld
add
xor
jmp
mov
hlt
inc
pop
adc
jl
nop
mov
add
sbb
pop
sbb
fdivr
pop
add
jb
rclb
cld
inc
or
jb
jmp
or
imull
add
ret
push
add
push
nop
sbb
mov
push
inc
sub
add
add
test
add
jle
add
cli
push
push
or
sbb
inc
fldl
xor
popf
idivl
inc
fldl
rcrl
cli
push
or
ss
add
scas
mov
sub
cmc
add
add
jl
jnp
frstor
inc
xchg
xlat
sub
test
jle
int
adc
aas
inc
in
add
xchg
add
add
adc
adc
rclb
cli
add
add
aas
push
add
add
fcomps
or
cmpsb
mov
xor
jg
test
add
aam
jle
add
call
add
ljmp
xchg
adc
adc
std
aam
add
inc
fildll
jb
and
fcmovnbe
pop
pop
xor
inc
sub
pop
js
add
jg
jne
push
sti
and
fwait
dec
xchg
dec
push
inc
or
add
imul
push
add
hlt
incl
notb
cmp
cld
mov
sti
jns
jns
js
jns
je
cmpl
add
jg
call
push
int3
inc
call
adc
inc
clc
jae
stos
add
je
gs
ja
add
adc
xor
cmc
in
inc
idiv
jmp
sbb
mov
xchg
or
add
add
pop
lods
pop
mov
pop
push
or
push
mov
lods
sti
cmpb
leave
push
adc
rolb
sbb
lock
or
xchg
adc
call
jb
sbb
push
stc
inc
cwtl
cld
fwait
inc
jb
inc
sbb
rol
loopne
and
jmp
adc
mov
cmp
add
add
cmc
jae
movsb
cmp
inc
cmp
lods
jno
xchg
adc
orb
out
xchg
mov
jnp
adc
cli
clc
sti
cmpsb
mov
inc
idivl
hlt
inc
jnp
sbb
sub
movsl
lcall
sbb
ss
or
jl
cwtl
sub
in
aam
insl
xchg
add
push
add
sti
mulb
es
adc
es
jmp
aas
ljmp
sbb
jmp
add
gs
out
add
push
pop
add
call
push
add
adc
add
jnp
dec
add
mov
xlat
jle
les
sbb
sahf
or
subb
add
mov
fcmovbe
movsb
pop
xor
inc
add
test
jge
or
add
jl
js
push
adc
cld
jmp
data16
fnsave
inc
test
aas
add
clc
sti
jne
xor
mov
jnp
push
and
inc
test
aas
cld
mov
add
add
add
or
adc
decl
push
mov
sar
cld
push
lcall
test
or
shlb
cld
mov
dec
fs
jbe
call
jne
adcb
mov
cld
pop
cmc
aas
adc
ja
lea
and
push
add
add
jae
adc
add
imul
decl
xchg
movsb
cld
and
push
push
or
int
push
pushf
mov
inc
and
scas
xchg
incl
sbb
or
imul
cmp
adc
sbb
mov
lock
adc
sar
push
js
fists
add
or
adc
mov
mov
jl
shll
add
cmp
js
loopne
js
adc
pushf
jl
in
sbb
jecxz
outsl
aad
dec
in
es
mov
clc
xchg
icebp
out
adc
adc
jne
cli
mov
mov
fs
in
rcl
pop
lds
add
out
or
mov
xchg
roll
ret
xchg
mov
mov
sbb
adc
inc
push
adc
test
adc
int3
repz
inc
xor
add
mov
stos
adc
std
sbb
lea
cli
sti
sbb
testb
sbbb
add
jo
dec
xchg
or
push
je
add
or
mov
jge
call
adc
mov
bound
pop
stos
pop
call
add
jg
mov
aaa
inc
add
sti
adc
add
add
inc
or
leave
or
jmp
ret
sti
mov
int3
hlt
je
mov
adc
and
cmp
movsb
shrl
mov
add
or
jp
pop
jns
add
mov
sbb
push
dec
add
std
adc
roll
hlt
add
inc
arpl
adc
add
inc
adc
add
bound
ret
and
add
mov
inc
or
jmp
cld
ret
or
call
scas
cld
out
mov
add
add
cwtl
add
xchg
stc
mov
adc
decb
aaa
ja
and
jae
cwtl
add
and
out
mov
inc
push
mov
cmpsw
incb
cmpb
sbb
add
scas
lock
add
add
xchg
inc
addb
pop
loope
imul
je
mov
add
adc
jge
add
add
xor
sub
adc
mov
adc
add
imul
mov
push
mov
aam
and
test
add
jmp
cmp
cwtl
inc
stc
dec
movb
add
jl
or
add
mov
push
cmpsl
fmuls
cltd
xor
mov
add
push
int
jb
lds
cmp
dec
jne
bound
or
bound
add
dec
jmp
inc
fistpl
xor
xchg
or
xchg
das
sub
add
adc
xchg
dec
or
adcb
add
adc
rcl
mov
test
cld
aas
test
pushl
mov
add
aaa
or
cmp
orl
add
add
in
decl
xchg
sbb
jns
iret
add
call
fldl
cld
adc
sub
mov
add
cltd
pop
lea
push
incl
add
jp
je
xorb
mov
inc
mov
repz
push
inc
adcb
push
sub
sbb
ljmp
sbb
call
lea
pop
into
push
call
add
rclb
pop
xchg
or
mov
incb
add
sarl
add
or
adc
add
push
adc
mov
jge
lock
lcall
mov
sti
nop
push
xor
cltd
mov
add
xchg
fisubrl
push
shlb
cmp
add
adc
push
roll
fs
movsl
push
cmp
inc
out
add
add
mov
outsb
dec
and
cmp
adc
jmp
add
push
iret
addr16
push
push
stc
fs
inc
or
cltd
mov
call
mov
add
add
popf
daa
adc
dec
adc
add
lds
add
outsb
jns
loope
inc
or
inc
sbb
aas
call
add
test
adc
or
call
mov
add
adc
jne
adc
adc
push
add
insl
push
add
jmp
adc
aam
or
sbb
adc
fs
and
pop
push
sti
aam
or
jns
cmp
es
or
hlt
orb
jmp
aad
pop
add
add
test
inc
js
mov
imul
add
pop
divl
add
adc
inc
add
aas
cmp
cmp
push
pop
add
pop
adc
add
cmp
adc
testb
cld
fildl
push
or
jne
add
lock
sub
testb
mov
inc
and
cld
push
test
add
aas
and
mov
add
sbb
inc
add
push
pop
sahf
add
ljmp
mov
int3
or
jmp
lea
adc
imul
mov
std
daa
push
cmpsb
sbb
std
sub
jg
dec
and
call
or
rcll
sbb
add
daa
add
fldenv
dec
imul
mov
mov
cli
inc
loopne
adc
mov
sub
adc
add
testl
lods
daa
sub
add
js
inc
adc
daa
xor
jmp
into
cmovp
sar
add
sbb
or
add
sub
shl
add
add
add
adc
add
push
ret
data16
xchg
in
out
insl
out
in
or
inc
jmp
inc
or
jmp
push
test
add
inc
mov
add
and
insb
dec
test
add
cli
adc
adc
cli
jne
jg
or
stc
or
fmull
mov
jmp
add
roll
add
sbb
imul
adc
test
int
add
sub
add
and
add
in
fs
in
jle
call
gs
sbb
daa
adc
jbe
adc
icebp
mov
fcoml
push
inc
or
sti
add
notl
xchg
adc
add
cld
pop
sarb
imul
call
test
fcoml
xor
fisttpll
divl
mov
imul
xlat
repz
push
adc
jne
cmc
jne
cmc
jne
addr16
adc
cld
push
pop
mov
in
add
in
dec
xorl
and
and
add
insb
shlb
adc
pushl
add
adc
cmp
out
lods
cmp
out
xor
sahf
mov
push
xchg
lods
pop
sti
and
adc
mov
mov
or
or
incl
mov
enter
ljmp
cld
imul
sti
mov
mov
clc
sti
push
mov
divb
xor
jne
xchg
adc
add
and
cmpsb
adc
inc
outsl
call
aas
adc
push
xchg
and
add
inc
sbb
xor
adc
std
test
je
sub
jbe
and
repnz
pavgw
pushf
pop
jp
loope
add
faddl
push
pushf
lds
jmp
or
jmp
adc
pop
shrl
add
jmp
faddl
fsqrt
pushf
or
dec
sub
sbb
stc
dec
popf
cli
cli
in
cli
jl
mov
dec
xorb
hlt
or
or
push
push
inc
add
push
jp
push
adc
into
stos
adc
push
bound
add
or
mov
bound
add
inc
adc
add
call
add
add
sti
adc
divb
pop
imul
pop
imul
push
int
sub
add
sub
add
in
sarb
scas
pop
call
gs
sbb
aaa
adc
xchg
adc
add
fadd
sti
pop
ljmp
lds
jmp
cld
notb
jle
mov
in
add
out
add
imul
xor
je
fstl
shlb
add
jge
sbb
or
fucomip
idiv
adc
divl
ljmp
pop
pop
or
and
dec
pop
ret
push
mov
or
jle
adc
call
call
lods
jg
add
push
fisubrl
in
or
adc
dec
in
movzbl
pop
sti
and
push
sti
sbb
clc
jne
das
or
cltd
lcall
sbb
add
or
mov
sbb
in
mov
or
adc
fnstenv
jns
or
adc
aas
add
mov
and
add
add
add
fs
jg
add
in
adc
mov
adc
adc
stc
mov
test
jo
jns
add
test
jo
pop
add
cmp
push
mov
js
xlat
test
jbe
xchg
negb
cld
inc
adc
ret
mov
sub
icebp
rcrl
add
dec
mov
add
sti
fsubrs
adc
insl
ret
lds
fs
mov
fstps
imull
out
insb
ret
movsl
adc
ret
jnp
and
dec
call
jo
int
and
push
out
pop
ljmp
int3
scas
add
inc
xchg
push
xor
in
mov
xchg
or
inc
incb
je
nop
bnd
xchg
sub
mov
add
jp
cli
xchg
xor
jp
filds
addr16
and
call
push
mov
sub
add
cmp
sbb
add
add
add
ja
or
loop
add
test
jno
add
jne
jae
or
inc
repz
insl
lds
xor
push
call
add
in
fdivp
incl
fmuls
mov
adc
jbe
mov
push
push
mov
ja
or
sub
lea
lods
ds
add
add
jmp
jns
add
cmpsb
cld
notb
stos
stos
or
adc
movups
push
int
or
test
dec
call
mov
or
fwait
std
sti
push
in
cld
dec
aam
push
push
jb
orb
mov
int
add
push
jne
adc
or
gs
cli
and
adc
popa
cmp
add
mov
inc
std
push
imull
xor
push
fisubrl
aam
sbb
push
mov
aad
and
add
jge
call
sbb
mov
or
pusha
dec
add
ljmp
shll
dec
cmc
mov
xchg
movaps
inc
jns
and
add
adcl
mov
jne
pop
sbb
inc
jl
out
cld
ljmp
push
in
aam
mov
out
sbb
adc
add
push
jne
adc
adc
push
je
xlat
in
jmpw
adc
push
sub
imul
fprem
inc
add
or
faddl
out
inc
mov
push
outsb
icebp
call
ficomps
add
jmp
shrb
addr16
cmc
mov
popf
in
sti
arpl
or
add
loope
adc
or
and
or
lcall
add
sub
jns
call
arpl
jo
not
mov
lds
ljmp
out
bound
push
jnp
and
xlat
stos
mov
or
cmpl
push
es
inc
out
xor
sbb
sbb
sbb
and
orl
add
repnz
sti
into
cmp
idiv
and
adc
sub
outsb
xor
ds
inc
sbb
je
pop
mov
sbb
add
gs
jnp
jecxz
adc
or
rcr
push
push
lcall
adc
aam
dec
sti
pushf
loope
jne
inc
icebp
sti
aas
push
mov
add
add
fisttpl
pop
inc
or
testb
add
push
inc
adc
je
dec
out
adc
push
mulpd
cmp
lock
push
fldcw
sarl
sti
cmp
jmp
mov
das
add
fidivrl
jae
adc
stos
pop
mov
inc
add
xor
xchg
frstor
add
and
faddl
loop
orl
scas
jnp
adc
inc
cmpsb
pop
xchg
aam
loopne
fmuls
and
inc
jmp
xor
fcomp
add
add
jnp
jmp
sbb
ja
mov
jbe
xchg
inc
adc
out
pop
jmp
in
test
jp
and
inc
jmp
inc
adc
sub
mov
outsb
add
add
push
call
insl
push
insb
add
push
fdivs
pop
fcom
mov
adc
add
mov
push
sti
mov
mov
jmp
jns
add
fwait
sub
or
add
out
shrb
push
sbb
sub
cmp
xor
dec
push
mov
jmp
add
cmpsl
shrb
cmp
pop
jmp
xchg
cmp
sti
add
dec
je
mov
sarl
add
into
push
pop
sub
stos
add
lcall
mov
cmp
int
cmp
mov
sarb
add
cmp
cmp
xor
cmp
scas
add
add
ss
leave
stos
stc
call
mov
jecxz
imul
inc
xchg
idiv
sub
je
sub
add
jnp
add
xchg
dec
rclb
xchg
mov
jns
pop
add
andl
mov
jae
and
dec
mov
jmp
add
adc
xlat
cmpsl
fnclex
in
cmp
push
in
sti
jae
fdivrs
add
adc
jne
ret
push
mov
add
lods
scas
mov
fdivrs
adc
jne
add
dec
push
rclb
or
push
ficompl
jmp
ss
int
fiaddl
sti
add
dec
add
test
rcr
add
in
inc
movsb
fst
inc
add
add
fsubrs
jnp
jns
lret
ret
cmpsb
dec
outsb
filds
add
add
inc
sbb
jl
xchg
jge
out
cmp
cltd
pop
adc
pop
pop
push
jmp
inc
adc
jo
das
test
orl
mov
adc
add
testb
lcall
pop
in
adc
je
leave
in
jmp
push
add
stos
or
fcoms
lea
sti
pop
inc
fnstcw
sub
add
pop
into
stos
adc
xchg
sub
in
push
adc
inc
icebp
adc
jle
jmp
ret
jmp
or
js
icebp
mov
xor
inc
add
test
adc
lea
sti
mov
adc
sbb
mov
outsl
inc
add
ljmp
test
add
inc
sbb
aas
dec
add
jns
std
aas
xlat
call
test
push
or
cmc
pusha
lret
bound
adc
call
mov
jb
ret
movsl
in
shrb
fwait
cmp
int
sub
or
xor
jae
test
cld
fisttps
clc
add
pop
add
mov
leave
stos
add
push
jae
sub
sub
in
inc
add
pop
pop
inc
loope
add
loop
mov
push
ja
mov
cmp
stos
jmp
in
aas
rclb
popa
mov
aam
adc
call
add
sbb
sti
std
call
sti
dec
arpl
push
mov
add
add
push
mov
sti
cs
call
sti
mov
out
std
push
aas
call
mov
call
outsb
push
add
inc
loopne
inc
pop
inc
jmp
xor
adc
xor
jmp
push
rolb
jmp
and
testl
fbstp
add
add
lea
xchg
test
out
fistpll
adc
mov
mov
pop
inc
jmp
in
sbb
adc
xor
mov
xor
addr16
push
sarl
in
sti
scas
lds
cmpsb
testb
lahf
pop
sti
mov
ret
sub
push
add
add
cmp
sub
sar
pop
xor
ficoml
add
jmp
out
and
test
loope
jg
out
aas
jmp
ficompl
addb
xor
xchg
dec
push
add
adc
ss
call
sahf
inc
add
pop
sbb
incl
add
out
test
mov
dec
push
sbb
adc
mov
repz
icebp
outsl
adc
inc
add
push
lret
js
bound
lock
mov
sbb
jmp
aas
add
out
push
add
aaa
into
lea
dec
push
adc
je
daa
add
sbb
or
pop
cmp
stc
sti
fisubrs
je
fucomip
jne
push
push
data16
inc
into
push
ljmp
xchg
in
rclb
in
mov
es
sub
in
jns
jecxz
jle
les
lea
imul
addr16
or
add
repz
add
push
lcall
arpl
mov
shl
cs
in
sarl
add
sub
push
add
and
add
add
push
pushf
test
fists
add
push
mov
add
ret
aas
jmp
add
out
jne
call
adc
push
outsb
sbb
pusha
out
fldt
or
test
inc
loope
mov
in
push
add
add
fildl
fdivs
stos
call
pop
push
aaa
pop
xchg
cltd
in
stos
or
push
jb
pop
in
mov
and
adc
push
push
mov
add
shll
jmp
in
dec
sahf
mov
andb
add
add
pop
mov
in
jne
orl
stos
adc
push
cmp
jmp
lea
adc
add
aam
or
xchg
test
jmp
or
icebp
lea
add
je
xchg
adc
xor
aas
add
mov
pop
mov
ljmp
add
loopne
in
in
std
call
cmp
rcr
cli
call
xor
lahf
clc
adc
jmp
addl
js
sti
add
fisttpll
jmp
push
mov
sub
fidivs
fisttpll
push
iret
cmp
call
in
dec
cwtl
push
push
std
addr16
sbb
incl
or
call
push
pop
add
stos
add
sti
add
cmc
aas
adc
je
lods
jg
adc
push
or
repz
and
add
shrl
mov
cli
xor
or
mov
adc
cmp
int
loope
add
les
fwait
mov
cmp
xor
mov
push
or
das
repz
stos
incl
add
push
jmp
xchg
dec
clc
or
add
cmp
add
add
std
in
out
add
mov
add
xor
xlat
mov
loope
fdivs
pushf
sbb
in
add
out
mov
dec
fstps
xor
fdivrs
add
add
mov
adc
jp
add
test
xlat
push
rorl
loope
xlat
pop
push
jno
cmpsb
add
fdivrs
push
add
dec
ljmp
iret
fstpt
les
dec
adc
jmp
stc
fistl
adc
fdivr
testb
or
js
sti
adc
mov
jmp
push
add
mov
shrb
add
add
test
jmp
std
addl
ret
in
add
iret
in
mov
push
add
hlt
stos
cltd
imul
adc
call
bound
stc
adc
xchg
add
add
sub
cmc
xchg
daa
mov
push
testl
notl
jg
pop
mov
adc
lods
mov
jnp
test
mov
jmp
push
add
add
decl
or
or
sbb
add
call
xor
add
add
mov
push
out
ljmp
mov
add
dec
pop
lea
mov
mov
jns
scas
add
gs
jo
roll
insl
nop
inc
add
popf
xchg
xor
shll
ss
xor
shl
mov
pushf
mov
xor
lea
jmp
adc
sti
xchg
mov
je
inc
jb
stc
fdivl
pop
pop
insb
imul
call
in
imul
xchg
mov
mov
inc
faddl
adc
out
shr
dec
pushf
add
add
arpl
cmp
adc
inc
push
xchg
aam
xchg
jmp
std
and
dec
dec
lea
shll
xchg
dec
test
scas
adc
mov
jmp
enterw
inc
insl
cmp
adc
fwait
clc
add
add
mov
add
xor
gs
adc
imul
add
xor
add
adc
testb
sub
add
out
std
scas
add
or
mov
add
test
dec
fcompl
mov
push
sbb
sti
jmp
mov
mov
adc
movl
adc
xlat
call
push
ret
es
jo
test
out
xor
adc
xlat
sti
jb
push
stc
add
xchg
sti
inc
aaa
sarb
cs
adc
dec
icebp
sbb
xchg
mov
cwtl
cmp
add
ljmp
or
add
cmp
inc
xor
jne
sti
imul
mov
idiv
hlt
mov
ljmp
call
and
decl
add
stc
mov
orl
jne
pop
sarl
inc
lock
mov
addb
cmp
add
cld
call
jae
cld
mov
cmp
cmp
clc
add
iret
divb
jo
add
adcb
jnp
sysret
sub
int
add
bound
dec
jecxz
add
mov
jbe
inc
lock
add
add
iret
push
mov
lcall
pop
sbb
test
or
dec
or
sti
cmp
sti
push
dec
push
cld
test
sub
jmp
and
add
iret
pop
ss
fcomps
call
dec
imul
jmp
fnstcw
rcrb
inc
jl
or
add
enter
shr
jle
push
or
fnstcw
mov
fsubrs
push
lods
inc
iret
cmp
add
cmp
out
push
sub
adc
adcb
test
pop
sub
push
add
into
fcmovu
jmp
jnp
or
sub
jmp
add
jnp
xchg
dec
mov
clc
cmpsl
fxch
push
sahf
inc
icebp
xchg
out
mov
lret
test
push
call
leave
stos
or
jb
sub
mov
adc
add
repz
add
cli
imul
xchg
movsb
int3
fcomps
pop
std
rolb
pop
mov
out
jg
pop
push
sbb
inc
aaa
fisubl
das
test
cmc
mov
add
mov
gs
add
idiv
sub
call
sub
je
xor
testl
ret
mov
xor
dec
lcall
mov
fcoml
add
mov
sarb
jl
jnp
push
in
call
incl
add
call
mov
das
call
lcall
dec
lea
idiv
notl
push
not
adc
sub
xor
rcr
call
test
mov
lcall
gs
iret
scas
cli
mov
mov
call
stos
shlb
aas
adc
or
add
jns
into
rcl
lods
loopne
fdivr
or
jno
pop
adc
dec
daa
mov
aas
into
aas
es
enter
or
out
sahf
add
add
pop
cmp
int
sub
add
icebp
mov
add
push
push
jle
clc
in
ret
int
aad
push
loope
push
add
add
add
add
add
add
add
add
pop
ret
imul
add
push
scas
es
push
in
jmp
insb
pop
aad
push
loope
add
adc
cltd
mov
int3
imul
push
in
incb
adc
imul
cmpsb
add
notl
push
jb
jmp
sbb
pop
lret
mov
daa
test
cmp
add
cmp
fs
int
mov
jp
xchg
mov
in
fadd
pop
in
jg
repnz
xchg
and
sti
xchg
push
int
add
add
stc
int
adc
add
gs
cmc
mov
rolb
scas
call
sub
cmpl
cs
je
clc
dec
push
shrl
cmp
lock
add
dec
shlb
incl
jmp
cmp
jge
hlt
std
mov
scas
negl
js
jle
adc
add
mov
mov
call
xor
mov
mov
adc
add
add
scas
adc
dec
in
or
cmp
add
fstpt
decl
sub
jmp
or
rcpps
and
push
mov
add
in
jle
call
xchg
pop
pop
adc
xlat
adc
fcmove
call
mov
cwtl
jp
cmp
xlat
aam
ret
rcll
adc
add
inc
ds
aaa
loope
je
pop
aaa
cmp
mov
dec
fdivr
je
dec
cmp
cmp
mov
jo
mov
sti
outsb
out
mov
insl
push
fldt
imul
cwtl
loope
adc
adc
rcr
test
adc
mov
xor
adc
adc
pop
sub
call
rolb
data16
enter
xor
lock
jmp
roll
add
mov
sub
scas
leave
cmp
mov
aad
sahf
enter
adc
cmp
add
sbb
fstpt
pop
pop
rorl
cmp
or
clc
cltd
cmp
stos
xor
xchg
and
add
jne
fwait
inc
and
xchg
cmp
leave
ljmp
add
add
filds
inc
sbb
adc
std
add
adc
call
insl
sar
addl
add
jbe
add
mov
sar
xchg
pop
cmp
add
aad
aas
jmp
rolb
mov
adc
ljmp
aas
jmp
cmp
jne
pop
xor
add
pop
iret
ret
adc
mov
cmp
push
test
cld
call
bound
je
jge
or
cmp
and
clc
add
call
insb
mov
and
mov
mov
pushl
add
call
lret
mov
mov
std
push
lods
lret
js
outsl
or
call
add
adc
js
add
adc
or
add
xor
int
adc
roll
sbb
cmc
aas
adc
aaa
push
insb
std
push
push
rcl
xor
aas
adc
call
testb
xlat
adc
adc
cmpsl
clc
movl
call
xlat
mov
fdivr
adc
xor
add
lretw
mov
ss
cmpsb
cmpl
fdivr
mov
xlat
das
ret
icebp
pushl
test
sub
xor
push
add
mov
mul
movsb
add
out
and
sub
mov
fiadds
lretw
adc
jnp
jmp
add
fsubr
add
push
call
xor
add
push
push
clc
fmuls
fcmovb
pop
dec
cmc
adc
fcoml
fwait
jmp
lea
add
add
bswap
sarl
mov
push
dec
ljmp
mov
add
pop
out
rolb
out
nop
pop
and
adc
jne
push
push
or
loopne
xchg
es
jmp
adc
pop
cmp
add
sti
pushf
sbb
add
xchg
pop
into
stos
adc
xchg
jbe
and
adc
add
mov
sti
fidivrs
pop
add
jbe
or
int3
mov
sti
xchg
xchg
shlb
and
mov
sbb
pop
add
cmp
cmpsb
inc
add
xchg
cmp
gs
jl
int
jae
mov
or
add
ror
inc
cmp
imul
jmp
scas
sbb
orb
test
add
jne
sarb
cmpsb
gs
add
pushl
add
divl
addl
adc
shl
out
int3
mov
test
test
test
jmp
divb
and
pop
shr
cld
test
jbe
add
add
mov
xchg
pop
into
rcl
js
sub
pop
mov
cmp
jl
sub
movsb
add
mov
add
push
inc
and
xor
and
and
fdivr
inc
out
call
rcrb
inc
and
shlb
or
push
data16
and
push
sbb
adc
xor
pop
add
add
sbb
shll
sbb
sub
add
xrelease
sub
into
movb
lret
sbb
xlat
inc
adc
jmp
test
lret
testl
inc
jmp
dec
adc
mov
lret
or
mov
and
jmp
dec
adc
adc
out
lret
inc
and
sarl
xchg
fcmovne
int
leave
xchg
inc
add
jge
pop
cmpsl
cld
push
outsb
fsubs
adc
jge
push
mov
cwtl
test
jmp
adc
mov
rolb
lea
push
das
xchg
pop
push
and
rolb
push
data16
in
push
test
pop
xor
jp
mov
add
inc
iret
xchg
stc
sub
adc
inc
jmp
add
add
ss
leave
xchg
rolb
clc
lcall
sti
hlt
add
inc
jmp
dec
add
add
test
adc
add
lret
mov
xor
inc
stos
push
ja
xchg
call
add
xchg
sahf
push
add
cmp
insb
cmp
add
shlb
push
mov
ret
jae
add
xchg
rol
add
orb
pop
mov
repz
and
testl
sbb
add
push
lods
fistl
sub
sub
adc
or
sub
aas
adc
mov
add
mov
jl
lea
add
lcall
xlat
std
lret
push
repz
push
xchg
inc
push
and
sahf
add
push
xchg
cmpsl
daa
push
aad
cmp
sub
push
add
data16
movsb
std
push
leave
mov
dec
aaa
lcall
cmp
dec
add
inc
jns
add
adc
call
rclb
fdivrl
scas
ljmp
xchg
mov
out
cmp
pop
ret
fmull
adc
das
fisubl
push
sbb
add
sti
inc
adc
sub
in
int3
fsubs
inc
xchg
ficoms
push
sbb
shl
add
add
add
ret
clc
outsl
jmp
sub
ljmp
adc
mov
and
xor
inc
fsts
mov
mov
inc
lock
mov
mov
fidivs
cs
mov
xchg
jbe
pop
mov
mov
mov
push
aam
cli
pop
add
push
inc
sti
aam
push
call
fidivrs
xor
rorl
add
int3
addl
add
add
mov
mov
pop
addl
mov
cmp
cmp
sti
jae
divl
inc
out
jmp
jge
push
mov
mov
mov
in
leave
mov
add
sarl
js
dec
pushl
mov
adc
call
hlt
mov
repz
mov
inc
in
or
jbe
stc
pusha
or
fs
cmc
xorb
je
jmp
test
adc
jae
cwtl
or
adc
lock
mov
imul
mov
add
add
aas
add
lods
std
adc
ret
cmpsb
xchg
arpl
leave
xchg
fwait
leave
ja
mov
leave
xor
or
mov
inc
sub
cmp
cmp
iret
lcall
cld
adc
and
outsl
or
sub
sbb
std
fbstp
add
or
std
mov
cmp
out
test
popl
pop
mov
pop
out
jo
movsl
mov
cwtl
cmp
push
or
imul
add
pop
outsb
aad
cmp
or
icebp
ret
adcb
add
nop
sbb
std
jmp
add
mov
ret
add
sbb
daa
ss
cmp
jmp
bnd
or
xor
add
imul
add
jmp
adc
add
xor
test
adc
ret
add
jnp
add
inc
or
fistl
push
xchg
and
shll
cli
call
add
adc
inc
jbe
or
and
or
mov
inc
mov
push
in
test
mov
sbb
call
lods
mov
testl
pop
inc
testl
mov
jne
push
inc
cmp
pop
dec
cmp
pop
cmp
cmp
in
cmpsl
addb
mov
add
add
insl
and
push
lea
add
push
pop
adc
std
test
insl
push
addl
inc
lock
leave
add
dec
or
sar
call
gs
mov
dec
mov
test
pop
out
mov
daa
stos
inc
or
les
jbe
lock
fstpt
and
cmpsl
mov
add
mov
or
cmp
xlat
movsb
out
es
aas
test
loope
add
add
cmc
daa
mov
stc
dec
femms
loopne
test
or
or
xchg
xorl
shrb
loope
add
sbb
jnp
cmp
imul
sbb
pop
ret
imul
add
sar
fsubr
add
jno
inc
add
inc
add
out
stos
out
adc
xor
outsb
mov
sar
loop
pop
ret
loope
mov
inc
inc
sub
mov
mov
mov
aaa
xor
mov
mov
out
cmpsb
push
cmpsl
or
dec
add
xor
adc
add
cld
or
aam
mov
add
mov
in
xchg
sbb
jmp
roll
mov
or
fdivrs
aam
dec
lcall
cli
testb
je
enter
and
push
stc
incb
dec
add
ss
out
aaa
xor
das
push
scas
inc
mov
cmpsb
ds
hlt
add
fiaddl
inc
jmp
cltd
ds
add
add
cmp
pop
loopne
fnstenv
mov
pop
dec
pop
leave
ret
jnp
cmp
jne
mov
clc
mov
and
mov
or
mov
shll
xchg
xorb
outsl
or
or
stc
or
ljmp
inc
jbe
jmp
fadds
jnp
add
mov
repz
adc
mov
push
clc
inc
push
add
clc
sub
mov
in
xchg
lods
call
sbb
incb
sbb
push
jl
push
or
addr16
lcall
xchg
and
xchg
cltd
dec
push
pop
adc
lods
ret
push
push
test
jne
add
and
lcall
repnz
push
xchg
mov
push
sti
and
push
inc
adc
rorb
mov
shl
add
xchg
in
xchg
arpl
fsts
inc
mov
in
subl
adc
mov
mov
clc
adc
repz
dec
bound
and
jmp
out
add
movsl
mov
mov
cld
adc
inc
adc
mov
mov
icebp
xchg
add
cmp
mov
mov
xchg
pop
enter
fs
xchg
sub
mov
mov
mov
sbb
jo
popf
mov
mov
pusha
shll
xor
fmuls
out
xchg
add
adc
je
add
lods
call
pusha
sarl
jmp
sub
fucomip
dec
dec
dec
loope
sti
fdivrl
shlb
in
ss
and
cmpsb
out
je
lahf
push
cld
fidivrs
or
push
pop
push
or
fistpll
or
pop
push
push
ljmp
idiv
add
sub
sti
add
divl
ret
add
dec
imul
sub
les
jle
or
sti
notb
testl
sub
fdivrl
hlt
add
pop
xorb
pushl
inc
or
dec
leave
ret
push
mov
push
andl
decl
loopne
mov
push
test
jmp
clc
ljmp
loopne
cmpsb
xlat
shlb
push
cwtl
in
sti
xor
cld
test
sti
std
xchg
pop
sub
jns
cli
jle
xlat
test
jmp
push
ret
les
jne
test
out
inc
mov
repz
add
and
fwait
lds
iret
inc
pushf
mov
sub
shr
add
xchg
leave
shll
jle
add
push
data16
scas
pop
xlat
pop
mov
or
add
sub
sub
add
mov
ret
xor
mov
push
pop
add
cmp
cld
sbb
rcrb
cmp
int3
clc
pop
mov
fs
add
scas
bound
adc
jmp
mov
leave
mov
xor
mov
fisubl
mov
jns
pop
push
push
jo
inc
xorb
mov
test
add
jge
mov
rolb
push
mov
cld
pushl
in
into
in
pop
mov
icebp
add
mov
push
jg
setns
fcoml
add
hlt
adc
in
sbb
ja
popa
mov
mov
adc
xlat
call
push
ret
inc
cmp
mov
sub
std
lds
jmp
cltd
aas
add
adc
add
jg
or
out
pop
push
scas
cld
jecxz
call
add
sub
in
or
push
and
add
jg
push
std
jp
je
adc
jmp
call
clc
jne
adc
inc
add
pop
sub
add
add
xor
testl
mov
xchg
idiv
jno
sti
cmp
faddl
xor
pop
je
lea
incl
add
mov
push
aaa
xlat
sub
mov
sub
sub
dec
mov
lcall
adc
jle
mov
push
fidivrs
es
call
cmc
mov
add
roll
int3
xchg
add
sbb
add
xor
mov
mov
push
clc
or
jb
das
push
clc
cli
inc
jle
xchg
and
add
add
cwtl
decl
xor
lcall
incl
jmp
push
shrb
loopne
inc
lods
adc
shrb
add
xchg
stos
loop
outsb
dec
cmp
mov
int
sub
add
add
add
mov
or
inc
adc
pop
dec
add
add
out
ret
incb
lret
sar
call
dec
adc
and
or
inc
test
jmp
mov
xor
cs
call
xor
shlb
rolb
add
mov
in
xor
andl
test
cltd
rorb
iret
and
ss
mov
push
adc
movsbl
std
test
sti
arpl
jne
lcall
cltd
mov
adcb
movsl
sti
xchg
sub
pop
fidivrl
insl
loop
xlat
jns
movsl
xchg
sub
insb
arpl
add
dec
mov
sti
mov
mov
testb
popa
add
mov
out
je
cmpl
mov
add
movsl
orb
divl
pop
add
mov
test
xor
imul
or
sub
cmc
in
mov
or
subb
hlt
xchg
sti
jne
dec
call
mov
or
mov
in
imul
jbe
and
lea
in
add
xchg
outsl
add
mov
add
push
mov
xchg
adc
outsb
or
adc
int3
out
sbb
fwait
iret
sahf
mov
pop
mov
cmc
jmp
mov
rorb
mov
test
push
call
xchg
aam
add
mov
mov
push
push
push
mov
add
xchg
jns
adc
jge
add
or
out
out
add
mov
jo
push
mov
add
adc
jmp
inc
in
push
inc
outsb
lcall
iret
es
add
dec
stos
jmp
lods
mulb
scas
cmpsb
jmp
add
scas
dec
in
out
adc
into
je
mov
mov
out
repz
rolb
idiv
jae
gs
insb
dec
inc
push
xchg
sbb
movaps
mov
jp
cmp
fs
push
loop
data16
push
leave
and
fiaddl
cli
sbb
add
rorl
das
sub
and
jo
jno
stc
xchg
in
mov
jg
adc
push
add
adc
addr16
mov
add
test
mov
add
ficoms
pop
xor
sti
mov
push
push
pop
sub
insl
jle
test
lods
jmp
inc
test
call
cmp
cmpsb
jg
cmp
add
test
idiv
movsb
roll
push
jge
in
xor
push
mov
mov
mov
push
xor
jmp
pop
mov
add
popf
test
xchg
add
add
push
lea
push
notl
sub
adc
mov
xor
out
fsubr
add
mov
movsl
cli
jne
pop
neg
adc
mov
les
lahf
imul
inc
hlt
xchg
sub
add
lcall
add
test
icebp
mov
call
dec
ds
outsl
and
jp
stc
imul
xlat
or
je
shll
inc
jns
js
adcb
push
add
movsb
adc
push
lcall
pop
fdivrl
push
cmp
fwait
outsb
jno
jmp
addr16
call
add
ss
mov
add
cmp
test
add
lods
insb
jge
add
add
cwtl
shrb
dec
add
shlb
repnz
ds
jbe
fwait
or
cmp
sub
and
lods
fidivrl
js
mov
jmp
cld
xor
repnz
stos
xchg
jg
dec
stc
adc
mov
mov
jbe
jge
add
pushf
mov
cmp
sub
sub
repz
call
test
sti
hlt
push
cmovo
xchg
mov
or
xchg
mov
aaa
hlt
sub
addb
jp
adc
xchg
cltd
sbbl
cwtl
jno
mov
cwtl
lds
cmpsl
cli
pushf
cwtl
pop
dec
jnp
xchg
add
pop
mov
inc
jp
push
push
dec
aas
inc
jp
icebp
pop
incb
jmp
add
add
call
cmp
decl
test
jp
sub
inc
out
hlt
dec
mov
pop
notl
stos
loopne
add
dec
add
aad
jnp
pop
call
push
add
fwait
imul
sub
test
jl
testb
mov
cmp
add
lock
lock
mov
test
test
add
adc
notl
and
call
adc
hlt
adc
mov
inc
push
scas
das
push
hlt
std
popa
mov
outsl
pop
pushf
cmc
insl
out
jp
pop
xchg
int3
xlat
adc
int
ja
xor
test
test
inc
bound
push
popa
mov
popa
rorb
popa
sbb
sbb
aas
xor
test
decl
clc
cmpl
ljmp
mov
bound
push
popa
mov
cs
ret
lock
jbe
ljmp
rcrl
add
add
inc
jmp
test
lsl
hlt
test
rcpps
loope
cld
shrl
aas
fisubrs
xchg
inc
xor
add
sahf
push
jg
adc
outsb
dec
add
add
fwait
jmp
and
xchg
inc
or
dec
xchg
xchg
jmp
adc
jbe
stc
xchg
test
mov
data16
add
add
adc
rolb
jg
jns
sarb
adc
fistps
add
or
push
sub
push
sbb
jbe
jne
outsb
inc
hlt
insb
adc
cmp
or
ja
sti
push
add
lods
lea
test
mov
xchg
pop
adc
mov
add
scas
repz
sti
push
add
xchg
pop
or
xchg
adc
inc
add
inc
test
jne
pusha
mov
jne
push
stos
mov
dec
pop
inc
sti
cmova
mov
jne
in
push
andb
dec
cmpl
testl
sub
bound
add
lock
add
mov
add
incl
roll
call
pop
inc
hlt
arpl
fwait
hlt
add
jge
testl
dec
clc
jmp
imul
and
cli
ljmp
nopl
clc
mov
or
sahf
dec
aad
testl
test
les
cld
lcall
cli
les
testb
xchg
add
jne
idiv
jecxz
jnp
cmpl
lcall
pop
sub
movsb
stos
or
dec
inc
leave
rclb
lock
fwait
in
adc
pop
add
push
mov
in
add
xchg
sub
mov
jns
test
add
add
and
mov
push
cmp
icebp
pop
cmp
dec
mov
test
inc
mov
add
add
fwait
dec
push
ret
movsb
xchg
cwtl
imulb
xchg
inc
lods
sbb
shlb
int
or
ss
cmpsl
out
dec
cmp
movsl
sub
scas
movsl
popf
fldenv
adc
dec
push
lcall
cltd
adc
js
test
aas
testl
push
xchg
pop
add
testl
lcall
in
mov
int
insb
xchg
das
test
dec
xor
lds
sbb
popf
cmp
sbb
sub
inc
mov
and
sub
gs
rcrl
adc
mov
out
adc
adc
shll
inc
cld
sub
add
cld
mov
enter
xor
add
add
push
jmp
sub
jno
sti
cmp
pop
sti
mov
sbb
add
mov
or
std
jp
mov
shlb
inc
cld
cmp
add
mov
fcmove
ret
dec
push
repz
inc
inc
mov
push
mov
cmp
and
out
xchg
pop
testl
add
nop
add
pop
mov
inc
pop
mov
orl
xchg
mov
add
jne
fwait
mov
loopne
push
adc
cmp
sub
sti
add
lds
stos
add
ljmp
in
mov
or
aas
sub
or
sub
add
sub
add
clc
adc
add
addr16
push
mov
in
and
mov
lcall
inc
popf
sub
jmp
pop
mov
push
es
adc
mov
fisttps
pop
fistpl
lret
xor
sbb
fwait
mov
mov
dec
mov
xchg
testl
add
les
add
mov
push
les
fst
nop
push
mov
jns
ret
jl
push
push
mov
or
add
sub
mov
mov
adc
mov
jg
lods
fnstenv
scas
push
adc
data16
sahf
aaa
xchg
mov
mov
and
std
jmp
xchg
test
add
sub
jmp
adc
out
xchg
adc
push
jb
jle
jne
test
mov
into
xchg
sti
fimuls
push
out
fwait
dec
add
cmp
cmp
test
mov
shll
add
dec
push
shl
add
int
push
pusha
cli
add
adc
add
fdivr
push
pop
mov
add
lret
mov
mov
clc
add
mov
gs
pop
jbe
leave
cli
or
push
xchg
push
pop
push
jbe
inc
mov
mov
pushl
cmp
lret
out
push
inc
jbe
adc
add
mov
mov
add
mov
add
iret
sbb
add
testl
adc
ljmp
jmp
add
mov
sarb
xchg
lcall
es
or
mov
add
pop
sti
dec
xchg
addr16
dec
mov
stos
jle
sbb
mov
icebp
jnp
ds
adc
pushl
xchg
xor
add
adc
and
mov
inc
and
stc
pushf
adc
xchg
add
in
loopne
sbb
cmp
mov
or
mov
mov
lock
icebp
jae
xor
xor
push
jmp
add
cmc
lds
or
cmp
and
sbb
in
mov
ffree
add
push
xchg
call
cmp
mov
mov
xchg
xchg
pop
push
xchg
in
out
sar
dec
les
add
mov
fcoms
lods
rorb
pushf
outsb
cli
push
jl
xor
mov
adc
out
xchg
sti
das
push
sub
or
call
fadds
loope
cmp
mov
bound
add
lea
cmpsb
test
data16
cmp
mov
xchg
in
adc
push
add
push
jl
andl
jg
movsl
ss
mov
std
pushl
lcall
sub
jns
or
in
cld
std
pop
push
ja
and
nop
movlhps
cld
jp
xor
shlb
movl
add
pop
add
pop
jnp
xchg
push
ret
add
outsb
sub
xor
add
cmp
lock
gs
xor
enter
adc
out
scas
icebp
idivb
je
cmp
sbb
mov
ljmp
adcl
aas
dec
adc
xor
add
xchg
ret
out
in
cmpsl
aad
bound
dec
or
xchg
sti
es
out
mov
imul
int3
pop
das
sti
and
icebp
aas
adc
mov
add
cmp
pop
lea
mov
into
xlat
sarl
test
sbb
xchg
push
cmpsb
xchg
ja
push
lcall
add
xchg
cltd
push
lcall
cltd
mov
test
xchg
outsb
ret
enter
test
lods
xor
sbb
push
xor
jp
or
xorl
pushf
sbb
xor
cmc
lock
add
lcall
fdiv
add
push
add
sbb
lcall
or
sub
sub
jmp
add
int
daa
aam
add
mov
ds
xlat
sti
rolb
addb
adc
xor
je
in
cmpsl
aad
add
adc
stos
push
sub
into
ljmp
add
sub
out
cltd
mov
mov
mov
adc
push
add
push
xchg
fsub
rolb
in
adc
xchg
ret
jmp
fwait
inc
push
fwait
inc
xor
test
mov
push
icebp
xchg
mov
imul
add
stos
sbb
clc
mov
rorb
arpl
mov
rorl
mov
inc
add
sub
addb
les
jl
and
in
cmp
std
adc
call
js
and
jbe
data16
and
rclb
dec
jmp
mov
inc
mov
rcrl
iret
xor
rcll
vmovsd
push
cwtl
sub
pop
pop
push
pushf
gs
dec
popf
cli
fs
pop
pop
fadds
jg
add
sbb
adc
into
mov
das
sti
pop
ret
xlat
mov
add
data16
bound
mov
sbb
and
das
lea
das
sti
fdivrl
or
movsb
add
or
cmp
sti
loop
mov
bound
add
add
add
sbb
adc
repz
out
fsubr
inc
add
mov
and
cmpsl
adcl
sub
mov
dec
add
into
lea
xchg
fimull
xor
clc
jg
out
popf
inc
push
lea
xor
add
dec
add
ret
icebp
clc
rcrb
stos
iret
add
neg
mov
xor
add
mov
fldl
mov
mov
popa
loop
push
mov
ds
push
adc
test
push
into
popa
push
mov
mov
aam
xchg
lret
jmp
adc
call
gs
adc
cmpsb
pop
lea
xchg
test
or
cltd
xchg
push
xchg
scas
test
leave
sub
mov
or
push
xchg
popf
hlt
add
fisttpll
cwtl
ja
and
push
dec
jno
jne
shlb
out
or
xor
and
jl
adc
nop
jecxz
fwait
outsb
notl
jmp
call
jmp
adc
add
in
mov
imul
idiv
mov
mov
mov
out
clc
std
incl
jle
add
repnz
clc
std
jp
jae
das
notb
xlat
inc
jne
sub
mov
and
cwtl
jle
push
lcall
sbb
and
call
xchg
cli
fwait
cmpsb
inc
cwtl
jle
add
orb
iret
repnz
xrstors
fldl
hlt
out
sti
out
sarb
push
mov
mov
adc
sar
mov
mov
mov
mov
lret
add
sbb
hlt
call
lahf
pop
inc
jmp
cmp
aam
add
and
cmp
add
xor
outsb
lahf
push
xchg
fnstenv
inc
sbb
mov
cwtl
jg
adc
xchg
subb
sbb
ss
sub
rcrl
and
cmp
or
adc
test
cs
ret
lret
sub
subl
pushl
pushf
or
dec
add
jl
scas
add
pop
cmp
and
jne
cmp
add
dec
lods
jno
inc
mov
jle
cltd
aaa
ds
cltd
das
jle
and
mov
pop
xchg
mov
mov
inc
push
bound
add
insb
xchg
mov
mulb
mov
mov
push
into
mov
xchg
jg
cs
bound
stc
xchg
add
jmp
xor
or
fs
sti
add
or
jg
dec
test
add
mov
pop
dec
clc
cltd
add
jae
mov
jno
sub
add
add
aas
clc
mov
in
push
shl
xchg
sub
add
cmc
shll
aas
cld
cmp
push
addl
cmp
jl
pop
jns
je
xor
ja
or
add
dec
push
or
push
ret
outsl
or
test
pop
mov
push
xchg
pop
mov
fsubrl
mov
xchg
push
sbb
mov
imull
sar
jmp
push
cwtl
aas
call
ds
or
lds
dec
cld
xchg
fiaddl
dec
inc
push
lahf
lcall
or
add
xor
lcall
push
or
xor
jne
adc
or
push
cli
xor
mov
ds
sti
xchg
out
push
leave
and
adc
add
pop
hlt
imul
and
inc
sbb
and
jne
cld
popa
sub
push
adc
jle
sbb
out
add
inc
icebp
mov
adc
jmp
shll
lea
mov
push
stc
fwait
jae
adc
sbb
add
js
ss
loope
push
movsl
mov
cmpsl
in
insl
add
cmpl
ljmp
ss
xchg
push
jmp
and
mov
or
add
or
add
jmp
imul
push
and
sub
and
mov
add
push
aad
shlb
test
enter
call
bound
je
add
xchg
mov
xchg
or
lret
cmpsb
iret
push
inc
jmp
add
mov
xchg
add
sub
std
addr16
pop
pushl
or
iret
notb
or
push
xchg
into
pop
call
xor
cmp
out
add
adc
aas
push
jnp
rolb
repz
push
leave
jmp
sub
bound
decb
jg
add
test
dec
lea
iret
divb
or
mov
add
notb
jnp
je
andl
in
cmp
aaa
int
add
pop
mov
cli
adc
mov
xchg
es
xchg
cmpsb
xchg
test
cmp
add
xchg
pop
xchg
lods
and
xchg
inc
js
xchg
sub
sbb
cmp
add
mov
adc
pushf
adc
cld
cmpsb
shlb
push
xchg
iret
xchg
adc
xchg
lcall
push
jle
out
push
jbe
out
test
sti
jle
xchg
incl
pop
das
ficoml
and
jl
unpckhps
mov
pop
inc
jns
jl
pushf
cmp
adc
sub
jle
sbb
test
call
cli
add
push
js
mov
lds
jle
cmc
in
pop
imul
push
hlt
jle
and
xor
test
imul
call
fwait
xchg
fisttpll
stos
lods
cli
out
mov
pop
rcll
cli
fiadds
imul
das
in
dec
mov
int
insl
test
add
adc
dec
pop
loopne
mov
int
push
subb
cli
mov
mov
test
test
or
add
out
mov
cwtl
sarb
insb
int
test
adc
add
mov
loop
or
aad
test
adc
add
hlt
add
jmp
jge
push
add
decl
incb
add
push
js
jl
add
mov
mov
add
xor
decl
sbb
dec
fnstenv
shlb
pop
test
or
xor
mov
mov
mov
std
pop
push
cmp
mov
pop
add
push
adc
inc
je
stos
mov
adc
add
mov
sti
mov
jae
jle
xchg
hlt
or
push
incl
adc
stos
xchg
push
ja
cmp
mov
int
out
movsl
jno
cmp
cmp
mov
ret
cmp
push
jge
push
push
push
mov
movsb
aad
sti
xchg
stos
hlt
cli
fs
jbe
jmp
add
mov
jle
aad
jg
into
adc
dec
mov
cmpsl
movsb
mov
and
imul
pusha
adc
insb
inc
mov
orb
add
divb
gs
jmp
adcl
inc
push
roll
add
shll
shlb
js
sbb
add
add
add
out
push
jmp
adc
loope
lods
repnz
inc
sbb
jge
test
jne
pmaxsw
mov
fwait
lea
pushl
loop
icebp
ljmp
adc
mov
push
mov
dec
adc
cmc
jnp
cld
out
mov
and
test
cmp
add
xchg
cmpsl
aad
sbb
ja
fstpl
jbe
cmpsb
mov
jmp
add
addb
mov
pop
jb
jns
lods
or
mov
hlt
ror
sub
sub
cltd
mov
jmp
bnd
inc
push
jne
xor
lea
adc
add
add
sub
cmp
and
cmc
sub
rep
dec
push
aaa
out
xchg
add
incl
push
xchg
push
movsb
push
test
add
aas
push
pop
add
sub
xchg
les
clc
decb
aas
clc
jl
aas
clc
out
push
add
idiv
ljmp
bound
cmp
pop
pusha
jle
jmp
dec
push
inc
jbe
shll
add
add
dec
push
mov
call
out
sbb
movsl
mov
sti
jbe
test
int3
adc
imul
sti
push
in
add
push
loopne
clc
xor
je
out
sub
add
mov
clc
and
loope
imul
cli
jl
mov
inc
push
adc
add
jge
cmp
xchg
inc
mov
outsb
pop
mov
cs
inc
mov
test
loope
hlt
mov
cmc
xchg
dec
push
cmp
mov
clc
icebp
xchg
into
inc
inc
js
leave
dec
repz
ss
gs
and
mov
jle
sub
cmp
test
add
add
mov
ror
xlat
or
hlt
nop
dec
push
ss
push
inc
adc
data16
out
flds
imul
outsb
leave
dec
mov
sar
mov
jnp
sarl
jl
xchg
sub
outsl
je
mov
adc
into
repz
aaa
sbb
or
sbb
add
inc
or
dec
jbe
cmpsl
mov
enter
test
mov
add
push
xchg
xchg
inc
call
push
adc
cltd
add
idiv
in
out
add
out
roll
out
addl
cmp
idiv
gs
out
addl
add
add
lret
push
lock
js
dec
lea
inc
cld
lcall
sbb
fwait
sbb
das
jg
jecxz
add
xchg
push
inc
les
mov
lock
out
jle
add
add
push
adc
adcl
lods
imul
xchg
aad
repz
arpl
or
in
pop
xchg
mov
pop
test
jecxz
repz
es
loope
adc
mov
repnz
xchg
mov
pop
adcl
jmp
sbb
les
insb
fs
incl
mov
into
dec
push
fsts
mov
add
jmp
mov
mov
dec
jno
add
test
xchg
imul
leave
mov
pop
mov
ret
sarb
add
jl
stc
add
orl
add
mov
push
adc
fsubrl
ds
mov
or
bound
fld
inc
jnp
notl
fbld
adc
jmp
sbb
iret
dec
cmp
js
fldcw
cmp
adc
fldenv
cmp
outsb
inc
js
pop
sub
pop
pop
aaa
jle
adc
xlat
gs
or
cmpsl
test
push
xlat
inc
popf
mov
idivl
add
fwait
aas
push
bound
call
gs
std
not
fisubrl
dec
push
pop
shrl
xchg
add
xchg
ret
mov
cld
call
shlb
push
test
push
in
mov
orb
dec
addb
pop
cld
push
testb
sub
jae
aaa
insb
repz
jnp
inc
in
mov
add
divb
in
cmpsb
cmc
cmpb
addb
or
push
add
jo
stos
add
dec
sub
lock
add
ljmp
rolb
rclb
mov
adc
sti
xchg
test
ljmp
adc
push
decl
add
sti
out
mov
add
add
push
jnp
into
fistpll
call
add
aaa
ret
push
fsubl
clc
cmpsb
push
sbbl
in
fucomip
loopne
jmp
fwait
add
in
shl
push
pushf
in
cli
add
dec
mov
ja
in
mov
adc
insl
inc
roll
add
cs
add
jg
jnp
mov
xor
ja
je
out
cmp
sbb
ret
out
movsl
or
jae
mov
add
shlb
mov
mov
jmp
enter
cld
mov
mov
lret
sbb
sub
xchg
inc
adc
jmp
inc
lock
lcall
add
inc
add
adc
push
bound
add
cmp
cmp
pusha
lcall
add
xchg
filds
js
jnp
mov
subl
cld
std
call
inc
add
call
cmp
sbb
shlb
lods
inc
cmp
jmp
mov
add
imul
addl
jmp
iret
add
add
dec
lea
push
lea
push
lcall
add
add
jge
loopne
cld
mov
push
mov
push
dec
mov
lock
add
jl
loopne
std
mov
push
mov
push
gs
jmp
push
aas
push
xor
add
push
add
or
add
xor
jl
aam
std
mov
push
arpl
js
add
push
xor
jns
add
or
lret
mov
cli
loopne
jp
push
fnstsw
adc
inc
sub
push
les
dec
push
push
sub
test
jp
adc
xchg
pop
add
or
add
icebp
shl
lcall
mov
xor
xchg
adc
mov
inc
or
jmp
ret
nop
rcrl
adc
lock
in
xchg
jo
aas
jmp
aas
call
mov
sub
leave
aad
dec
push
movsb
jnp
or
pop
jnp
insb
add
orl
sub
jns
test
add
add
aad
add
cmp
insb
inc
test
ja
imul
insl
fs
push
pop
sarl
outsl
pop
inc
pop
inc
mov
gs
inc
imul
insb
leave
mov
insl
push
ret
outsl
les
in
push
pop
fisttps
lcall
out
push
jp
loope
push
sar
ret
out
jb
dec
xchg
add
in
inc
or
nop
xor
push
movb
cwtl
mov
xchg
inc
push
icebp
fwait
ret
shll
sar
cmp
not
jb
sar
sbb
stc
dec
cmpsb
lds
and
test
cmp
pop
fnstenv
adc
add
out
inc
push
sti
cld
data16
aas
jmp
add
push
xchg
jns
add
cmp
pop
inc
sti
addr16
aas
add
fwait
push
incl
ja
mov
in
mov
cmp
bound
jo
pop
adc
add
pop
push
int
push
call
mov
jp
cmp
or
test
sub
notb
ljmp
clc
js
mov
push
sbb
add
test
test
mov
test
pop
nop
das
pushf
add
std
dec
call
test
lcall
iret
adc
lcall
out
ret
adcl
cli
and
inc
or
mov
inc
sub
sti
sarl
stc
add
push
inc
addr16
pop
fnstsw
or
out
mov
mov
dec
test
push
sti
into
adc
adc
dec
dec
mov
jne
sbb
int
sbbb
lcall
je
or
lods
mov
xor
gs
hlt
cmc
adcb
lods
or
imul
addl
add
inc
fs
lds
fs
push
jae
jge
jae
mov
shll
inc
push
adc
inc
push
or
shr
lea
stos
jae
mulb
pop
cmc
jecxz
fcos
sbb
fcmovnb
mov
push
mov
jp
xchg
ret
js
stc
dec
outsb
les
xchg
xor
dec
push
mov
orl
add
aad
inc
xor
clc
or
data16
es
std
push
push
cmp
fmul
jmp
dec
popa
repnz
ret
pop
cmp
fisubs
jecxz
shlb
push
cli
mov
stc
je
scas
dec
dec
mull
arpl
cmp
mov
orl
test
gs
mov
ss
arpl
cwtl
mov
cmp
push
aas
lret
mov
in
hlt
rorl
lea
inc
outsl
mov
mov
add
and
add
dec
not
loope
mov
subl
push
dec
lea
in
call
je
jae
das
cs
xor
add
adc
clc
add
jecxz
repz
pop
out
sub
mov
xor
scas
mov
outsl
adc
cmp
rcll
shrb
pop
inc
rcrb
xor
inc
mov
pop
pop
sbb
xchg
pop
dec
mov
stc
lret
out
loopne
add
xchg
push
hlt
mov
add
sahf
in
icebp
mov
push
push
cltd
adc
dec
sbb
rcr
adc
jbe
stc
jecxz
mov
rolb
aam
in
in
jle
insl
add
ret
call
pop
or
cmp
pop
es
popa
subb
mov
xchg
sub
je
pop
jns
pop
sub
xacquire
add
add
clc
mull
jge
jg
add
shrl
fcomip
outsl
sub
add
add
cltd
adc
add
add
add
fneni(8087
outsb
cmp
stos
ret
xchg
jnp
xor
xchg
cmp
gs
call
or
push
jmp
loop
pop
adc
sbb
cmp
fldl
add
xor
lods
xor
add
stc
adc
add
shll
call
scas
inc
aas
jmp
testb
inc
orl
or
and
in
call
or
jmp
into
and
add
clc
add
inc
insb
pop
inc
push
call
add
lds
jnp
insb
pop
pop
add
mov
mov
add
lea
mov
js
push
mov
sahf
shll
push
addl
or
adc
jl
add
add
ljmp
push
gs
mov
adc
mov
adc
call
pop
decl
add
mov
add
adc
xchg
pop
incl
insl
je
cli
jp
xor
adcl
and
add
rorl
ja
adc
push
scas
and
xchg
sbb
aam
cld
lds
inc
adc
inc
je
fmulp
and
out
inc
call
xchg
sbb
ds
test
je
jbe
out
addb
test
and
add
in
sbb
xor
inc
add
mov
adc
insb
inc
mov
pop
notb
lret
jmp
jge
mul
arpl
or
inc
je
xor
jmp
cld
xchg
adc
daa
add
bound
cli
fwait
in
add
jns
jae
mov
stos
mov
insl
data16
aam
in
les
xorb
add
into
mov
dec
pushf
mov
hlt
or
shr
dec
cmc
mov
popf
in
lcall
pop
outsl
push
adc
fs
jmp
inc
insl
fsts
call
shlb
push
insb
shlb
fs
test
call
push
data16
out
mov
test
add
data16
sbb
ds
outsb
add
or
popa
gs
imul
cmc
cld
inc
ljmp
mov
jmp
xchg
mov
jp
es
pop
pop
jmp
out
add
sub
mov
add
in
hlt
pop
out
mov
dec
cmp
fs
call
adc
add
dec
push
add
or
inc
clc
clc
cmp
push
sub
lea
mov
xchg
add
push
or
lret
js
add
dec
jecxz
shr
imul
sub
clc
rcl
pop
dec
pop
pop
xor
push
mov
test
add
add
push
adc
mov
xchg
stc
push
incl
add
in
rorb
roll
sbb
gs
xchg
test
add
shl
insl
jp
sub
rorb
jl
cmp
test
psubq
cli
scas
call
repnz
cmp
mov
fs
cli
xchg
out
mov
xor
jbe
sarb
pop
pop
sub
xchg
push
and
add
cwtl
imul
add
jl
adc
jnp
pop
mov
jmp
andps
pop
pop
clc
popf
mov
es
dec
in
int3
lock
imul
cmp
insl
push
add
pop
cs
sub
jmp
paddb
add
mov
dec
add
inc
pop
ljmp
aam
jnp
pusha
shrl
add
rcl
mov
cltd
jmp
pop
dec
jb
mov
lret
pusha
push
push
dec
or
add
or
or
jmp
mov
xor
fidivs
add
adc
call
popa
add
call
cmp
add
add
gs
jmp
or
cwtl
jle
adc
call
insb
xorb
push
add
inc
sub
add
js
je
nop
addb
push
add
add
add
pop
mov
add
add
add
jg
mov
inc
les
add
dec
not
insl
rolb
dec
add
add
add
add
jecxz
cld
inc
inc
iret
push
or
movsb
lock
add
push
add
popf
in
dec
push
jmp
adc
mov
test
insb
pop
call
cmp
int3
cli
in
int
mov
stos
incl
and
inc
sti
popa
test
mov
add
add
mov
bound
orb
mov
cli
test
jns
add
test
out
in
sti
xchg
lods
adc
rcrl
push
xchg
xchg
inc
pop
jge
mov
fs
adc
mov
push
xchg
popf
fs
xchg
ljmp
mov
pop
aad
fs
push
test
das
inc
or
pushf
js
jg
insb
nop
insb
icebp
add
add
shl
or
scas
insl
dec
cmp
sub
sti
push
jecxz
pushf
lds
orb
cli
aam
shr
inc
int3
fs
pop
ficomps
cmp
inc
inc
or
addb
inc
mov
cld
add
xchg
les
jne
stc
adc
adc
xchg
or
push
mov
inc
mov
add
xchg
sbb
je
jmp
adc
dec
jb
mov
insb
cmp
push
inc
lea
inc
adc
add
mov
jmp
jmp
daa
dec
mov
into
jb
xchg
add
out
add
push
pop
cwtl
pop
mulb
xor
mov
mov
mov
add
jge
inc
test
idivb
popf
mov
add
std
aaa
mov
add
daa
mov
js
mov
iret
mov
rclb
add
jo
mov
mov
add
in
xchg
sub
mov
mov
popf
xchg
fimuls
add
add
mov
add
add
inc
enter
call
std
pushl
add
mov
sbb
clc
out
mov
dec
scas
dec
sqrtps
shlb
cli
in
push
std
dec
pushf
sbb
cld
jle
scas
out
scas
pop
sti
and
jmp
sti
pop
pop
aas
push
sarl
add
dec
jp
outsl
fisubrs
add
adc
or
push
lahf
cmp
fcompl
je
int
push
ss
mov
stc
lret
jno
adc
rol
cltd
roll
add
inc
mov
adc
xchg
add
xchg
mov
popa
mov
push
mov
add
add
push
pop
mov
roll
add
add
pop
jp
mov
idivl
add
mov
xchg
sub
push
data16
add
in
dec
add
add
jmp
data16
or
int
imul
pusha
pop
mov
dec
scas
lods
pop
outsl
gs
int3
les
adc
pop
adc
xchg
add
pop
das
test
mov
jmp
imul
adc
xchg
or
mov
pop
cmpl
cltd
test
xchg
ret
sub
push
pop
sti
insl
rorb
test
or
add
or
jae
mov
pop
fs
sbb
jmp
xchg
pop
sti
fiadds
add
jmp
jecxz
add
inc
add
add
addr16
int
mov
mov
sarb
jae
test
mov
sub
push
das
xchg
dec
push
lock
pop
cmp
push
notl
test
push
mov
test
test
test
jmp
test
addr16
add
add
and
add
add
mov
mov
incb
mov
add
or
add
add
adc
lcall
cmp
add
rol
and
rorb
mov
inc
scas
mov
push
ljmp
in
and
adc
adc
mov
push
mov
std
pop
mov
add
jns
outsl
add
int
and
push
xchg
mov
push
incl
pop
adc
xchg
sub
test
push
lcall
decl
add
add
add
pop
gs
sub
neg
lock
inc
loop
mov
jmp
jnp
add
mov
out
arpl
repnz
mov
add
add
xor
and
mov
add
jl
add
add
jns
add
mov
pop
in
or
fisubrs
test
xchg
inc
popf
xlat
test
adc
jmp
daa
stc
test
mov
in
push
add
add
push
out
push
adc
out
push
sub
fdivl
add
mov
cmp
add
repnz
je
stos
jnp
xchg
mov
push
sti
jmp
ret
imul
jge
out
jnp
icebp
movsl
jnp
inc
or
stc
dec
xchg
inc
je
mov
add
or
rcll
add
fs
cmc
stos
sub
pop
add
aam
jne
ljmp
pop
sub
leave
xchg
out
xchg
pop
mov
xchg
and
mov
in
cmpl
sub
pop
inc
repz
clc
mov
sbb
or
add
cld
decl
std
jmp
push
xchg
add
mov
lea
mov
add
sti
ljmp
std
jp
rdtsc
and
adc
into
and
mov
js
cli
push
push
lcall
aas
adc
jg
ljmp
sti
fdivp
mov
jne
xorb
pop
addr16
pop
incl
or
dec
sbb
inc
dec
lret
adc
inc
jge
push
lea
add
mov
outsb
ss
call
add
stc
dec
loop
mov
push
fwait
jmp
add
mov
aaa
add
push
stos
xchg
add
aas
dec
scas
hlt
shlb
jl
pop
imul
add
add
loopne
dec
lret
push
cmp
mov
scas
adc
add
movsl
orl
adc
ss
push
xor
adc
insb
ret
pop
cmp
loope
jp
sub
xchg
add
push
jmp
loop
pop
shlb
or
imul
add
adc
adc
shlb
pop
fs
and
addl
add
and
adc
add
out
add
call
lods
add
jmp
push
int
std
aas
dec
or
dec
sti
jmp
test
jmp
adc
xchg
xchg
mov
lret
dec
nop
pop
adc
add
test
add
bound
jl
add
dec
push
pop
xchg
pop
test
clc
test
sub
add
add
xchg
add
add
iret
mov
sub
and
jge
lea
dec
push
out
xchg
add
add
je
sbb
shll
and
lods
andb
lea
mov
mov
ja
add
inc
pop
or
std
mov
dec
mov
sar
ljmp
shlb
je
or
xchg
lea
add
mov
mov
add
out
fcmovnu
and
addr16
xchg
adc
out
aad
add
pop
mov
mov
out
scas
cli
mov
fldl
add
iret
and
sub
xlat
test
call
xor
adc
inc
in
sub
and
inc
iret
sub
inc
jae
xchg
add
adc
test
or
ss
sti
mov
gs
and
bound
arpl
sub
lea
add
jecxz
adc
test
adc
out
xor
adc
mov
aam
sbb
aad
fstp
adc
notl
neg
add
subb
add
nop
int3
add
fisttpl
add
mov
add
add
call
dec
rorl
xchg
add
mov
adc
stc
ja
push
add
mov
shlb
add
in
jge
lret
ret
add
inc
jp
mov
pop
push
inc
pop
and
pop
mov
faddl
sub
cli
scas
ss
je
cmc
pop
imul
hlt
out
push
inc
sti
push
loope
sbb
add
hlt
shll
pop
inc
push
add
cli
out
lds
in
mov
dec
mov
lock
mov
in
cmpb
fisubrs
or
cmpsb
cmp
addb
or
in
pop
add
dec
dec
lcall
std
push
pop
cmp
push
mov
fwait
sub
loope
add
dec
push
in
cmp
mov
add
loopne
addb
jns
push
ja
hlt
dec
mov
dec
gs
sbb
inc
sbb
sti
call
std
lcall
push
cmp
testb
xchg
push
push
iret
sub
fstpt
sbb
xchg
adc
fldl
xchg
in
push
lea
jbe
mov
fcmovb
jle
push
aad
sbb
shl
mov
subb
pop
push
adc
dec
out
sbb
idivl
outsl
je
push
mov
in
nop
inc
incl
adc
cli
adc
push
test
add
out
push
scas
out
leave
push
sti
mov
add
das
adc
sti
fwait
movsl
add
mov
mov
push
cwtl
or
mov
lcall
jmp
sarb
xchg
xorl
les
test
out
adc
add
fcomi
push
cld
test
cs
aam
adc
call
jl
pop
into
dec
sbb
add
xor
addr16
jge
add
add
inc
ficoml
mov
inc
jle
add
inc
mov
movsb
sub
data16
mov
dec
cmp
pop
call
jle
adc
popa
lea
xor
add
jmp
xlat
add
xchg
push
jge,pn
jmp
jns
add
lret
jmp
add
adc
pop
adc
add
pop
add
jo
push
add
pusha
xor
in
jg
aad
decb
out
int3
inc
adc
add
sub
sti
test
test
add
mov
in
mov
std
sbb
call
call
mov
testb
testl
add
lods
fimull
mov
xchg
addb
ja
sub
mov
jl
incl
add
add
ret
daa
js
add
add
inc
fs
mov
mov
inc
cld
adc
inc
clc
imul
mov
push
cwtl
mov
mov
jbe
movsl
aas
and
pop
jl
cltd
fimull
add
push
aam
add
pop
push
mov
adc
inc
insl
fadd
xlat
rolb
dec
mov
sub
push
cmpsb
mov
cwtl
xchg
daa
sti
sbb
out
aas
adc
inc
jne
outsb
dec
jne
fmul
add
xorb
dec
arpl
pop
push
call
bnd
inc
mov
xchg
out
push
dec
test
add
outsl
iret
imul
add
jnp
add
fdivs
into
sarb
sbb
test
subb
jecxz
xor
imul
and
sub
enter
mov
dec
dec
loope
mov
inc
aam
in
add
add
clc
lock
mov
xchg
inc
adc
into
or
add
and
fadd
testb
outsb
cld
adc
jge
dec
dec
sti
out
pop
call
adc
jb
cmp
fistl
add
jmp
adc
lea
icebp
inc
into
fistl
mov
push
mov
xchg
push
add
adc
dec
pop
pushf
inc
adc
cmp
xchg
inc
adcl
je
jmp
add
adc
lea
sti
ss
call
insl
int
jnp
push
jl
xchg
pop
ret
mov
adc
add
xchg
cmp
ss
mov
jle
pushl
mov
ljmp
mov
push
cmp
mov
mov
ret
dec
or
dec
add
lahf
mov
daa
out
xor
xor
add
sub
mov
push
imul
mov
lock
test
xor
cmpsb
ljmp
adc
pop
mov
push
pop
inc
rolb
adc
ljmp
outsb
imull
lret
jecxz
push
mov
addr16
pop
ljmp
pusha
inc
xor
scas
sub
or
add
push
pop
jl
mov
insb
add
add
pop
jl
jno
dec
add
pop
jl
dec
pop
dec
add
pop
jl
cmp
fiaddl
ja
decl
aaa
add
pop
jg
int3
or
add
fcomps
mov
mov
jmp
add
mov
inc
or
cmp
add
mov
add
sub
adcl
jns
add
add
fs
add
jl
xor
ds
dec
mov
inc
mov
dec
std
test
ret
jbe
test
add
aam
mov
lea
rorl
mov
fiadds
or
les
dec
mov
add
jmp
add
sahf
rorb
ret
adc
adc
sti
out
dec
add
adc
mov
jmp
orl
dec
cmp
sbb
sti
rcll
movsl
call
inc
cmp
insl
mov
add
adc
add
jmp
out
mov
fiadds
push
bound
add
sti
jo
aaa
jg
enter
int3
mov
add
out
dec
call
lods
les
test
dec
lea
sti
incl
jne
inc
adc
test
cmp
enter
xor
mov
add
pop
adc
push
push
mov
lock
test
aam
jge
leave
je
add
divb
add
add
lret
sti
std
adc
cmc
jbe
call
mov
jle
xor
repz
loop
jb
sub
inc
sti
shl
jmp
jne
ret
push
loopne
add
sub
pop
cmp
or
dec
sti
out
inc
sti
add
out
aas
adc
mov
pop
stos
jbe
add
mov
aas
xchg
mov
dec
fadd
adc
pushl
jns
sub
jle
cld
cli
cld
sbbl
inc
pop
loop
mov
fsubrl
das
add
mov
out
and
es
sub
pusha
sbb
jo
cmp
pop
scas
xchg
xchg
lds
add
js
add
mov
enter
jmp
gs
or
repz
push
mov
jns
in
mov
jmp
add
mov
adc
rcrl
mov
mov
js
in
mov
incl
lds
adc
ljmp
and
adc
add
fisubl
dec
add
xlat
test
mulb
in
icebp
lahf
cmp
lea
fisttps
mov
test
push
insl
lds
leave
xchg
cmp
out
pop
adc
and
adc
data16
dec
idivb
cld
lret
jmp
push
mov
add
adc
sbb
and
adc
jg
jmp
add
test
cmpsl
add
out
in
add
test
add
loopne
jp
sub
je
adc
jg
cmp
decl
push
sbb
pcmpeqd
xor
mov
inc
and
pop
xor
fistpll
xorb
jns
pop
or
xor
add
mov
push
mov
loopne
incl
add
pop
sub
jns
xor
inc
and
lds
mov
aad
out
int
fisttpl
in
and
xchg
addr16
xchg
and
sub
cmp
push
call
jmp
lea
call
cmpsl
mov
inc
xor
xor
jle
sbb
inc
xchg
out
add
adc
out
xor
inc
add
mov
rcl
jle
sub
sti
xchg
cs
sahf
add
in
cmp
adc
ret
out
in
mov
in
mov
sbb
adc
jle
xchg
mov
push
mov
cmp
adc
jle
out
add
adc
add
cmp
add
adc
add
add
xor
jnp
push
fucom
sbbl
jge
xchg
add
inc
cmp
std
sbb
cmp
add
testl
idiv
sbb
sub
sub
sbb
and
std
jbe
xchg
outsb
loopne
std
adc
add
add
je
sub
ljmp
stc
dec
cmp
or
bound
sub
ss
cmpsl
push
cmp
int
jle
inc
int
or
push
cmp
testb
cli
out
mov
and
cli
dec
mov
push
xchg
cmp
negb
lods
add
fistps
add
mov
add
mov
shlb
aaa
cmpb
add
add
icebp
lea
dec
push
aas
jecxz
cmp
add
insl
out
add
add
clc
rcll
inc
sti
subb
pushl
sar
rorb
shll
pop
notb
sub
pop
push
lea
add
hlt
dec
push
adc
add
lods
shl
test
daa
and
inc
inc
xchg
pop
add
dec
and
jge
add
adc
ja
adc
jmp
xchg
inc
jne
rolb
mov
xlat
fistps
jmp
xchg
sub
dec
mov
adc
cli
and
push
inc
adc
jns
or
adc
dec
aas
adc
adc
mov
mov
adc
jmp
add
call
or
mov
mov
add
add
nop
in
inc
js
add
sub
sub
xchg
stos
mov
add
jmp
fdivrl
add
jmp
test
add
jns
add
add
nop
add
nop
dec
xor
arpl
inc
test
cli
sbb
add
mov
add
adc
dec
cmp
test
ret
sub
sti
sbb
add
adc
aas
mov
add
inc
test
inc
test
add
add
aaa
sti
sbb
xlat
call
cli
aaa
or
add
jmp
cmpsb
add
jmp
cmpl
push
leave
aaa
call
jo
sub
daa
or
sarl
add
xor
push
pop
dec
iret
push
cmp
cmc
dec
mov
shl
out
cld
decl
add
in
jp
iret
js
cmp
or
rorb
mov
dec
mov
clc
mov
mov
mov
subl
idiv
cmp
insl
add
push
push
xorb
out
cmp
dec
inc
ljmp
cmpl
add
sub
dec
jmp
cmpsl
inc
adc
add
lret
mov
je,pt
push
ret
outsb
rorb
testl
sti
loope
mov
jle
aas
ret
int3
pop
add
adc
cmp
leave
aaa
mov
test
cmp
dec
sub
adc
adc
test
loope,pn
jmp
xor
add
sub
adc
jmp
add
lahf
push
cmp
ljmp
and
xor
fmull
pop
inc
inc
test
mov
das
adc
jmp
add
fwait
pop
xchg
js
xor
add
dec
jnp
mov
mov
jmp
mov
fwait
outsl
rcrl
or
rolb
mov
shll
jmp
add
add
mov
adc
inc
outsl
adc
ret
mov
mov
mov
jge
sti
jmp
mov
add
rorb
popf
cltd
inc
call
xor
mov
mov
pusha
shll
je
sti
inc
xchg
mov
call
add
mov
inc
push
ljmp
sub
push
bound
pop
mov
jl
add
jmp
stos
inc
popf
jmp
pushf
push
add
inc
scas
mov
into
jl
mov
jnp
add
popa
mov
lods
mov
call
lods
mov
ss
xor
mov
add
pop
jl
mov
test
mov
lods
aas
xchg
pop
mov
add
data16
outsl
mov
add
jl
mov
xor
push
lods
jo
cmp
pop
mov
mov
add
outsl
mov
adc
inc
inc
xchg
aas
pop
adc
mov
jnp
sbb
popa
mov
mov
add
outsl
mov
rcrl
xchg
jge
sbb
flds
fstpl
and
add
aaa
mov
pop
add
mov
cli
adc
sbb
sar
pop
jmp
in
mov
out
mov
enter
xchg
lock
adc
mov
jnp
xchg
jmp
add
add
cmp
mov
sub
jno
dec
add
mov
mov
jmp
xor
adc
repnz
sub
mov
popf
mov
sarb
call
cmp
ja
add
cmpsl
pop
sarl
int3
outsb
sub
popa
movb
popf
add
mov
call
add
jns
or
pusha
push
add
ret
add
lods
jns
icebp
mov
addr16
or
sbb
clc
mov
pop
add
popl
mov
inc
fnstcw
mov
movsb
add
mov
add
rcll
mov
inc
add
pushf
adc
pushf
jns
sar
in
or
adc
imul
pusha
push
or
add
jle
push
rol
lock
ja
data16
sbb
push
jge
and
lea
add
lcall
lods
dec
mov
gs
cmp
mov
xchg
popa
xchg
out
add
add
lods
mov
mov
jmp
inc
sub
ja
cmp
dec
xchg
add
mov
cmpsl
lock
pop
mov
add
mov
dec
add
dec
add
sbb
inc
shll
ja
sbb
jb
inc
xchg
adc
add
adc
popf
mov
inc
mov
jmp
pop
leave
mov
xor
ljmp
mov
add
jp
inc
dec
sarb
adc
popf
mov
sahf
cmpsb
sbb
popa
mov
int
js
push
mov
icebp
jle
xchg
scas
fisubl
int3
add
sbb
jmp
fiaddl
mov
addl
add
add
mov
lret
stos
add
popf
mov
enter
jmp
mov
adc
jg
out
sub
mov
mov
add
popf
mov
cmpb
call
test
adc
cmp
adc
dec
jge
fwait
mov
test
and
ja
mov
jns
lret
adc
lods
popa
jo
out
ret
jae
lods
add
xchg
mov
mov
mov
sub
jl
jmp
es
imul
jbe
dec
inc
sub
cs
jge
mov
sub
mov
and
in
or
mov
push
sbb
push
lods
xchg
mov
movsl
mov
cmpsl
dec
das
test
push
inc
out
push
mov
leave
mov
fcomip
addl
and
pushf
mov
cli
ret
mov
mov
jle
inc
and
das
mov
push
sar
popa
add
pop
sub
out
jmp
repnz
ss
mov
add
in
mov
add
push
mov
cld
call
cmpl
call
sub
push
test
mov
sub
lds
jl
xor
xchg
xor
js
add
test
pop
xor
rcll
fadds
ja
pop
gs
push
or
mov
into
dec
push
test
adc
add
xchg
cmp
inc
std
mov
mov
dec
out
mov
test
inc
xorb
cwtl
imul
xchg
ljmp
sub
jne
fwait
cmp
lcall
test
add
xchg
lods
xchg
imul
inc
add
jp
xor
rcrl
iret
shlb
add
add
mov
add
js
jns,pn
xor
jmp
add
jp
das
mov
pop
out
insl
pop
inc
sarl
xchg
test
jmp
xchg
stos
inc
sbb
cmpsl
sbb
cwtl
mov
mov
mov
jmp
outsl
adc
xchg
and
out
dec
add
pushf
mov
jmp
adc
lds
jle
ret
je
mov
sbbl
sti
jb
je
popf
inc
jle
sbb
add
insb
int
or
enter
mov
sti
pusha
enter
jne
divl
adc
cs
xchg
adc
loopne
testl
xchg
add
adc
cmpb
insb
stc
scas
roll
pop
addl
push
rolb
jb
jge
lcall
mov
jmp
out
add
outsb
mov
add
dec
jmp
push
inc
hlt
pop
or
push
sarl
add
jle
cmpsl
je
add
dec
imul
bound
roll
inc
in
je
and
jne
adc
sub
add
jne
adc
out
push
sub
xchg
or
sti
add
sbb
inc
cmp
or
push
pop
mov
sar
shll
pop
sbbl
call
jle
cmc
adc
incl
add
or
sbb
iret
cli
cld
add
inc
adc
dec
cli
mov
mov
or
call
imul
add
add
je
pop
jns
jmp
mov
and
imul
xor
add
jle
dec
fldt
js
sub
jo
jbe
and
add
cwtl
mov
and
sub
add
in
add
add
sub
insb
push
jge
sub
std
divb
imul
jp
add
orb
fucom
xchg
inc
aad
inc
je
cmp
and
rorl
or
fcmovnbe
and
clc
and
sti
push
xchg
ds
outsl
and
imul
add
fs
jmp
or
cmp
into
push
stc
cli
cmp
sbb
pop
dec
cmp
or
and
in
add
add
and
sti
xchg
sbb
mov
and
sti
push
mov
jnp
push
sub
iret
push
sub
add
mov
jmp
add
xor
add
inc
mov
dec
and
out
sbb
pop
test
push
add
dec
mov
aas
or
lahf
dec
or
fildll
mov
push
and
push
ficomps
mov
bound
dec
push
roll
xor
mov
cmp
sti
lcall
xor
sbb
jp
add
add
jbe
xorl
jnp
in
repnz
adc
adc
lret
inc
adc
jle
sub
inc
sbb
mov
xchg
fs
stos
sbb
inc
rclb
and
jecxz
push
insl
jle
mov
jns
push
je
aas
jo
hlt
lods
inc
je
stos
sub
in
clc
mov
sub
add
dec
shrl
ss
inc
call
push
and
add
push
mov
into
cs
add
push
jge
jmp
cmp
adc
scas
or
mulb
cs
rcrl
cmpsl
sub
xchg
repz
rorb
jo
mov
push
sbb
test
test
mov
xorl
add
cmpb
add
or
jnp
mov
cmp
test
cmc
inc
shlb
adc
cmp
and
pop
add
push
cmp
push
pop
fisttpl
bound
xchg
push
out
push
xchg
lock
xor
ja
push
cmc
pop
jle
leave
adc
mov
xchg
adc
mov
adc
adc
mov
and
jle
adc
pop
stos
xchg
loopne
inc
jne
mov
aad
int
call
std
sar
aad
js
fcmovne
dec
adc
cli
cld
xchg
or
je
add
mov
xor
add
or
jecxz
insb
or
test
push
cmp
add
mov
dec
lea
in
pop
and
adc
call
push
ud0
in
lock
je
inc
sti
test
push
or
adc
out
aas
add
pop
idiv
xor
jae
cmpsl
push
pop
add
mov
popf
push
or
inc
imul
push
mov
mov
aas
jl
ljmp
add
es
aam
iret
adc
cwtl
jnp
sub
adc
xchg
jmp
sub
and
insb
das
push
ficoms
xor
and
jmp
and
push
cltd
sub
jne
add
push
rcrl
testl
pusha
ds
aad
in
sar
xor
add
sub
mov
sti
loope
add
add
add
xchg
lock
test
push
pop
shr
sbb
je
rcll
bound
jge
arpl
ljmp
and
test
mov
xchg
sbb
mov
popf
inc
sbb
icebp
jbe
mov
outsl
add
cwtl
rcrb
movsb
add
add
icebp
ljmp
sbb
push
shr
int3
sbb
int
int3
shr
inc
scas
push
sbb
cli
leave
ret
mull
es
sbb
sbb
jns
cmc
cmp
je
add
adc
adc
jne
sub
add
adc
pop
bound
sbb
sub
add
xor
pop
in
adc
sti
xchg
fldcw
out
in
adc
bnd
scas
push
negb
or
pop
pop
pop
mov
xlat
xor
sti
add
ds
xor
pop
add
pop
notl
add
call
mov
js
add
pop
jmp
call
add
rolb
cmp
in
addl
or
dec
lea
add
mov
out
mov
mov
jg
add
jecxz
xor
xor
sbb
xchg
adc
add
inc
jo
mov
call
sub
adc
pop
aad
mov
dec
daa
jp
dec
push
test
addl
add
sub
xchg
adc
add
or
adc
daa
mov
sub
push
bound
jne
mov
pop
add
repnz
jnp
dec
inc
jnp
jne
iret
imul
sbb
and
je
div
ja
push
dec
cmpsb
or
adc
mov
sti
mov
push
adc
add
jbe
cmp
xchg
inc
pop
or
leave
add
pop
faddl
cld
shr
in
pop
cmp
or
sbb
sub
fwait
and
pop
sbb
sub
xchg
clc
fiadds
outsl
sbb
in
add
imul
ljmp
mov
mov
adc
add
mov
ret
mov
add
mov
hlt
adc
jmp
divb
repz
mov
inc
je
movsl
out
cmp
mov
sub
icebp
jmp
fstl
out
icebp
jmp
std
push
push
xchg
pop
jg
push
hlt
dec
pop
pop
jg
adc
sbb
xchg
cmp
sti
rclb
mov
add
adc
add
cmp
sti
mov
mov
fwait
mov
or
adc
jne
icebp
jmp
cmc
rclb
or
add
data16
jbe
add
sub
sub
or
add
jl
imul
pop
test
inc
inc
repz
sbb
sbb
add
inc
dec
add
add
jp
es
and
sbb
enter
in
call
add
push
mov
add
pop
mov
xchg
arpl
mov
xchg
push
or
mov
nop
inc
test
ss
dec
sti
sbb
jne
and
mov
ljmp
fstl
test
push
add
push
aad
sti
and
idivl
adc
movsl
aas
sub
xchg
das
enter
sahf
lcall
fiaddl
out
xchg
xchg
jmp
adc
xchg
sti
notb
adc
mov
push
mov
mov
dec
push
lock
pop
push
shlb
jno
sarb
fdiv
cmp
jmp
inc
sbb
add
jle
add
add
enter
add
iret
mov
and
call
pop
jmp
add
sub
inc
int3
adc
add
add
adc
jmp
and
jmp
notl
sbb
push
fsubs
adc
jmp
lods
adc
jmp
fimuls
add
add
add
add
mov
jle
pushf
pop
fwait
loope
add
adc
sub
add
jmp
adc
xchg
sbb
bound
xchg
mov
jo
pushf
add
adc
add
push
pop
inc
ficoml
jmp
pusha
mov
jb
in
xchg
adc
adc
je
xchg
adc
je
xchg
adc
jne
test
cli
add
or
add
xor
mov
mov
or
gs
mov
adc
push
divb
hlt
adc
imul
add
stc
push
in
adc
add
jp
cld
sub
test
sub
decl
add
insb
add
cmp
scas
pop
sub
scas
mov
outsl
adc
cld
shl
mov
mov
jb
ljmp
arpl
call
inc
ljmp
xchg
or
ss
jne
repnz
call
xchg
jne
cli
add
daa
push
xchg
push
mov
xor
adc
add
sbb
or
fwait
sbb
pop
cmpsb
push
add
sbb
jle
sbb
sbb
sbb
call
out
in
jae
incl
sbb
jae
push
pop
add
sbb
add
add
lahf
jmp
jl
or
add
add
add
ret
mov
inc
mov
add
dec
jmp
pushf
jecxz
sbb
adc
jmp
lods
jnp
jae
jbe
and
jmp
lods
pop
sbb
add
jmp
push
push
mov
notb
add
sbb
sub
lods
add
add
test
xchg
add
jmp
add
adc
int3
movsb
jmp
testb
jmp
adc
call
adc
aas
jmp
sub
out
data16
add
adc
test
cmpsl
cli
repnz
sti
jmp
xchg
cltd
xchg
xor
add
cmc
cmpb
xchg
cmp
mov
idiv
mov
cs
sbb
add
repz
sti
add
add
test
call
icebp
add
fimull
aas
jmp
add
xor
incl
add
test
addb
inc
and
add
add
xorl
jmp
add
ja
adc
push
icebp
js
xor
push
add
xchg
add
add
adcb
cmc
add
jg
sti
idiv
outsl
outsb
xor
das
and
adc
sti
test
adc
lock
call
pop
lahf
daa
jg
scas
push
lcall
cli
mov
hlt
add
sbb
add
lahf
enter
sub
lcall
repnz
sti
jae
add
jo
push
out
ss
jp
xchg
mov
getsec
dec
lods
add
fiadds
aas
xchg
xchg
xchg
push
add
lcall
mov
jmp
mov
mov
sub
jg
call
subb
adc
incl
add
xchg
push
adc
sub
js
push
cwtl
lods
adc
xor
leave
adc
es
add
cltd
push
adc
jns
adc
in
sbb
adc
cmpsb
hlt
ret
push
inc
jbe
sub
cmpl
add
add
jmp
mov
out
mov
addb
add
push
jg
in
xor
add
aas
jmp
rorb
shr
xor
sbb
xor
add
in
xchg
xchg
movzbl
repz
std
push
or
es
sbb
sub
cmp
jg
std
pop
inc
pop
jo
jl
xchg
gs
inc
lret
loop
popa
add
js
call
add
out
ljmp
repz
ljmp
jae
dec
hlt
adc
fdivrl
pop
test
add
imulb
jbe
cld
decl
add
cmpb
popa
add
dec
clc
jmp
mov
paddsb
push
pop
mov
incl
add
adc
pop
cmp
xorl
jae
femms
mov
or
hlt
push
dec
xchg
nop
notl
aad
push
sub
jecxz
adc
mov
inc
or
inc
enter
hlt
or
sbb
sbb
add
xor
sbb
out
ror
pop
add
adc
jb
add
sbb
cli
add
addl
mov
push
sti
xchg
add
ljmp
add
aas
or
push
pop
mov
out
mov
mov
cwtl
addb
add
cld
adc
jmp
enter
cwtl
cli
jnp
sbb
or
outsb
xchg
mov
add
adc
ds
sarb
mov
adc
sub
inc
or
jg
or
aam
out
adc
add
jmp
adc
sti
pop
add
or
les
jo
or
mov
adc
je
xchg
xor
mov
sti
out
add
imul
mov
sahf
add
cld
push
or
lds
push
cmc
in
lret
jmp
xor
ds
inc
je
and
push
or
std
add
adc
mov
or
and
add
adc
js
add
cli
cmp
add
testb
js
es
sbb
test
sbb
cmp
add
enter
jno
add
call
sarl
hlt
add
rclb
cmp
incl
sarb
add
push
in
cwtl
dec
icebp
add
push
mov
mov
mov
add
add
test
adc
ret
incl
add
sbb
mov
addr16
adc
pop
sbb
adc
mov
mov
or
sti
repz
adc
push
loop
dec
js
xlat
add
push
arpl
sti
pop
aam
mov
imul
jbe
fisubrs
testl
das
sarl
push
pop
or
pushf
adc
add
adc
add
mov
rorb
and
test
inc
shr
xchg
cmc
out
adc
test
fidivs
mov
adc
lret
rcrb
icebp
sub
inc
cmpsb
push
xor
repz
push
push
in
sti
int3
mov
sub
add
add
jp
lea
rcr
lock
push
add
cltd
xor
add
add
in
push
icebp
add
add
loope
sahf
pmaxsw
rolb
test
test
mov
xor
mov
stos
adc
inc
lcall
push
mov
aam
mov
std
push
add
cmp
lcall
jnp
or
je
xchg
push
je
add
std
pop
fwait
push
add
xor
sbb
jg
push
test
inc
ret
lea
add
adc
aad
jns
sub
add
jo
ljmp
mov
push
dec
cltd
ficoms
add
pop
sbb
push
adc
mov
dec
jecxz
daa
hlt
testb
decb
in
sbb
push
addr16
sbb
add
pop
sbb
pop
sbb
hlt
adc
dec
ds
mov
jecxz
inc
cmc
testb
push
mov
jne
dec
divb
hlt
je
cmpsl
push
lcall
mov
notl
inc
idiv
mov
push
mov
in
jle
je
adc
jne
mov
adc
adc
cli
add
repnz
add
adc
or
xchg
inc
adc
dec
js
xor
mov
xchg
jg
out
lcall
jp
out
out
sub
and
sbb
jp
sahf
ret
das
ljmp
adc
je
decb
int3
sbb
adc
sbb
shrl
stos
pop
aas
lods
sti
decl
add
test
cld
ret
xchg
add
adc
out
inc
mov
fwait
jle
orb
jmp
out
jecxz
push
jg
ljmp
xor
sti
sbb
sar
pop
sar
mov
shrb
and
inc
mov
rorb
icebp
xchg
call
rorb
mov
add
add
mov
jmp
push
mov
dec
jo
scas
es
mov
sub
pop
ret
mov
mov
add
push
sti
shrl
xchg
add
jmp
pop
dec
insb
jo
fwait
xchg
out
inc
push
push
fisttps
ret
inc
inc
int
lods
jb
sub
out
add
loopne
add
sbb
or
out
rorb
push
mov
rorl
ret
std
cltd
es
and
mov
xor
add
mov
ss
add
mov
mov
add
dec
xor
add
cli
ljmp
out
sub
jnp
jbe
dec
add
add
add
xchg
stc
jle
imul
add
add
cmp
aam
jns
rorb
decl
cmpsb
mov
add
sti
or
cmp
add
adc
jmp
vpshad
pop
jne
ja
pop
mov
push
add
fs
sbb
call
and
inc
or
xchg
xlat
call
movsb
std
call
notl
adc
sub
or
sub
sub
mov
xchg
mov
add
pop
push
gs
out
stc
lods
out
adc
incb
add
xor
adc
push
add
add
shl
loopne
add
movsb
cmp
gs
mov
cld
sub
xchg
inc
aad
push
in
sbb
jnp
adc
pop
inc
adc
jmp
shll
pop
shll
fisttps
mov
inc
addr16
add
adc
inc
les
mov
or
loopne
insb
add
stc
add
xchg
push
in
adc
call
adc
jg
and
aaa
das
aad
mov
shl
cli
and
mov
inc
adc
xchg
sbb
dec
inc
in
push
sti
xchg
aas
and
shr
jle
adc
mov
cmpsl
cmp
nop
mov
orb
add
les
sub
or
sub
shll
bound
add
pushf
pop
jg
xchg
add
pop
scas
add
jmp
or
getsec
daa
sub
dec
aas
add
dec
inc
add
add
xorl
ss
idivl
add
jp
jmp
jl
or
adcl
decl
loop
divl
jns
dec
out
mov
mov
lcall
loop
add
inc
add
jmp
add
add
test
ja
and
pop
add
mov
cli
add
loopne
stc
mov
pushl
decl
lods
in
call
call
jp
adc
jle
mov
jle
mov
add
daa
xchg
add
call
and
jp
repz
or
xor
push
add
fldt
incl
pop
mov
mov
dec
icebp
ret
and
dec
aam
inc
xor
jno
xchg
add
aam
jbe
sbb
ja
popa
mov
push
jg
in
xchg
add
adc
adc
mov
or
add
jnp
adc
or
ret
pop
lcall
ss
in
cli
ficomps
inc
cwtl
ds
jns
cmp
sub
mov
and
cwtl
jns,pt
dec
or
je
mov
in
les
cmp
push
sbb
sub
loope
mov
jnp
loope
roll
rcrb
mov
stc
adc
or
sub
pop
sub
add
add
sub
hlt
xlat
repnz
cmp
leave
or
and
xor
xchg
cmpsl
call
scas
dec
in
add
adc
ljmpw
adc
or
dec
add
aaa
arpl
mov
pop
add
adc
add
dec
or
cmp
adc
add
add
jmp
je
xchg
add
roll
cmc
lea
or
jecxz
or
add
inc
push
mov
lock
or
mov
mov
jmp
mov
sub
test
or
or
test
adc
incl
adc
cwtl
decl
movl
adc
mov
add
cmpl
inc
adc
ds
inc
pusha
jmp
sti
das
add
mov
add
add
add
negl
lea
dec
adc
mov
mov
je
jae
cli
movsb
jecxz
je
rol
push
movl
cli
jge
cmpl
sahf
decl
xchg
push
and
adc
mov
add
add
xlat
mov
pop
sbb
push
je
orb
dec
fadds
push
push
repnz
call
jne
push
jbe
add
outsb
push
push
add
or
shl
out
mov
adcl
test
jo
and
push
std
cmp
pop
inc
in
inc
cmp
imul
popf
sbb
dec
lret
add
mov
jns
jmp
gs
adc
inc
or
xchg
decl
jge
and
add
pop
int
jns
divb
hlt
das
hlt
push
ljmp
insl
fiadds
hlt
dec
decl
jle
daa
adc
ljmp
inc
daa
insl
cld
push
sub
stc
jg
mov
pop
mov
or
add
ret
sbb
lock
aaa
push
jne
repnz
or
test
push
repz
adc
ds
mov
sti
push
test
fnstenv
inc
jge
jle
xor
add
cmp
outsl
mov
pop
js
in
cmp
jmp
adc
or
mov
dec
add
idiv
add
inc
xchg
adc
xchg
jecxz
or
and
cmc
mov
xchg
sub
add
or
inc
sti
or
scas
dec
sub
lods
cmp
or
cmp
cltd
adc
test
call
jnp
add
hlt
cmc
incl
add
jmp
hlt
mov
hlt
adc
adc
inc
add
call
jo
sbb
cmovno
stc
outsb
sbb
lock
cli
fisttpl
sbb
xlat
sti
je
cmp
testl
test
cmp
add
imul
add
adc
mov
adc
mov
adc
push
xchg
ret
xchg
test
add
push
in
push
cmp
add
xchg
stos
test
add
lock
inc
cmpl
mov
mov
xchg
or
xchg
or
dec
xor
pop
std
cmp
arpl
mov
add
cwtl
cmp
jno
xchg
sbb
stos
sub
xchg
jp
sbb
inc
add
iret
push
fiaddl
mov
insl
adc
sbb
fidivl
push
lret
cli
cmp
fcos
fdivrl
sti
test
in
add
jb
adc
add
rolb
sarb
daa
jne
pop
sub
jmp
in
adc
add
jmp
and
rclb
jmp
jmp
loope
push
test
sti
je
in
je
cmp
repnz
test
jmp
or
mov
pop
ret
pop
ret
xchg
sub
fsub
pushf
fucomi
inc
cli
mov
adc
mov
sub
shl
inc
add
xor
orl
add
push
sti
or
adc
jno
pushl
jmp
test
sti
test
add
jmp
ja
lods
inc
cmp
lods
dec
sub
fimull
xor
stc
idivl
fstpt
jmp
pop
mov
pop
shl
inc
mov
mov
je
mov
jge
mov
add
sub
jmp
xchg
std
repz
out
or
jg
roll
pop
add
xchg
push
pop
or
pop
notl
mov
clc
int3
into
jp
or
jg
scas
push
xchg
adc
xchg
jae
add
divl
aas
or
and
hlt
mov
call
fdivrs
push
add
and
add
call
fsubr
sub
bound
cmp
cmp
xchg
adc
mov
jns
push
sbb
pop
jo
xchg
add
inc
mov
inc
fnstcw
subb
mov
mov
test
outsl
dec
sub
std
std
pop
mov
inc
stc
ret
mov
jno
out
repz
add
inc
jmp
js
js
adc
cld
outsl
inc
stc
xlat
popa
out
sbb
pop
inc
and
rorl
push
xor
push
test
out
loope
adc
push
ljmp
mov
out
xchg
and
lds
jmpw
sbb
inc
in
dec
mov
pop
out
cmc
add
xchg
push
data16
cli
ss
lods
or
add
sbb
adcb
xor
insb
jp
adc
mov
pop
or
or
jmp
cmpsb
bound
push
push
add
sub
decl
sbb
xor
out
pop
sbb
jmp
or
push
mov
mov
incl
add
pop
add
xchg
sbb
cmp
jp
decl
pop
sub
addr16
js
jp
jns
or
test
add
inc
adc
push
push
mov
cmp
fmull
adc
cmp
adc
dec
push
cmp
addb
inc
add
or
jae
ds
mov
sbb
iret
xchg
call
daa
leave
mov
or
ss
lods
add
xchg
pusha
pushl
pop
inc
add
cmpl
stos
add
pop
pop
adc
fdivrs
rcl
popa
mov
jge
iret
out
jns
flds
push
inc
adc
fsubrs
add
rorl
add
hlt
xchg
shl
inc
adc
add
pop
outsb
cmp
enter
add
jmp
sub
test
or
add
adc
mov
mov
or
add
mov
mov
cmc
fwait
jmp
data16
and
jmp
hlt
cmp
cmp
insb
add
add
rorb
insb
ret
loop
mov
jnp
pop
xchg
mov
stc
jge
jae
pushf
push
js
test
or
jmp
mov
jle
add
jne
mov
add
and
sub
add
lret
nop
jnp
cli
jle
dec
push
addb
pop
loope
add
add
rcll
mov
dec
cmp
mov
add
dec
or
pop
mov
out
mov
loope
cli
cs
jns
add
movswl
shr
add
stc
rcl
jp
jmp
add
cs
add
repz
jp
mov
loopne
repnz
jmp
and
sbb
movsb
divb
fnstcw
adcb
mov
cmc
test
add
jmp
push
xor
ja
orl
adc
xor
ss
in
test
fsubrs
hlt
fiadds
xchg
sub
loopne
add
lock
cmpl
cmpsl
sub
sbb
mov
fists
ja
insl
jecxz
or
add
push
test
in
cli
scas
ret
push
insb
and
ds
inc
or
adc
dec
sub
or
fwait
clc
add
aam
cmpl
cli
push
out
push
mov
dec
add
add
inc
sti
pop
sbb
adc
mov
scas
in
pop
sub
out
enter
or
jmp
cmp
out
in
push
fsubrs
lret
in
push
xor
in
add
inc
jae
sbb
jle
xchg
ss
sub
cmc
gs
mov
pop
add
add
xchg
add
in
lock
repnz
imul
or
das
and
jmp
out
and
jmp
and
cli
mov
adc
cs
cltd
icebp
cld
out
int
out
mov
mul
jg
fdiv
test
in
mov
pop
add
cmpsb
out
aas
add
adc
aas
mov
outsl
sub
data16
clc
lock
jle
sub
repnz
jmp
cli
ljmp
jle
and
or
add
in
clc
jmp
xor
and
add
subb
sbb
sub
cmpb
cmc
cmp
idivl
std
out
cmp
std
decl
jl
std
incl
add
call
cmp
pop
sbbl
cmc
pushl
idiv
sti
pop
shll
jle
and
cmc
andl
add
sti
xlat
sbb
adc
cld
jbe
xor
ljmp
fcmovu
dec
dec
sbb
cmp
mov
sti
cld
ss
push
icebp
fsin
or
add
lods
sbb
adc
stc
cmp
in
cli
inc
and
adc
sbb
mov
cmp
call
jmp
insb
push
push
xlat
cld
into
fwait
cld
mov
pop
xor
mov
in
sti
adc
push
add
adc
xorb
sbb
add
repnz
jg
dec
das
cmp
jmp
lock
loop
jle
add
sub
jmp
repnz
in
or
fdivrp
lods
jp
in
sub
decl
jnp
call
push
loop
cld
xchg
pop
fsubrp
sti
and
and
add
test
shr
sbb
add
repnz
out
in
sbb
and
shl
loopne
sar
test
sar
outsl
inc
mov
arpl
bound
add
in
xchg
jp
fs
cld
cmp
sbb
dec
dec
mov
jp
cmp
sbb
dec
loope
jmp
xor
outsb
fs
jmp
loope
cmp
jne
jo
in
or
in
pop
enter
jmp
push
dec
cld
pusha
push
fnstenv
add
cli
sahf
sub
hlt
push
add
mov
sub
push
mov
fdivrl
add
jp
mov
sbb
mov
fdivl
mov
adc
pusha
sub
pop
in
sub
push
push
adc
sahf
jbe
rsqrtps
mov
pop
rorl
ljmp
add
out
pop
je
call
ljmp
xor
sbb
mov
in
xor
mov
ljmp
xchg
dec
or
adc
cld
mov
xchg
mov
lds
jle
push
xchg
cmp
roll
push
cmpb
ljmp
ds
ja
add
adc
and
movb
popf
cmp
xchg
aaa
jae
mov
mov
dec
out
mov
adc
mov
cwtl
std
xlat
or
sar
movl
enter
add
mov
or
stos
fimuls
jnp
fldenv
adc
shll
addb
mov
add
test
add
out
bound
pop
mov
adc
lret
jmp
outsb
ret
mov
aad
aad
in
fwait
lret
fidivrs
test
or
fwait
add
enter
loopne
inc
fsubp
pop
fnstsw
icebp
inc
lea
imulb
cmp
hlt
jns
sub
add
test
das
in
lcall
cmc
or
icebp
call
sti
inc
and
dec
je
jmp
and
adc
adc
test
mov
notb
cmp
jno
cmp
xchg
dec
inc
aaa
sub
mov
aam
add
lahf
and
call
xor
add
scas
add
mov
inc
loopne
xlat
mov
stos
mov
std
aam
mov
add
jp
add
shl
xlat
mov
mov
mov
sti
popa
cld
add
inc
lock
add
es
js
inc
lock
sbb
rolb
lock
add
mov
add
sbb
jno
in
pop
sbbb
pop
mov
adc
cmp
fldcw
or
jge
leave
mov
aas
sbb
push
push
hlt
push
outsb
cmpsb
jmp
lods
or
xchg
rorb
test
jge
and
das
cs
cmpsl
and
pop
add
mov
dec
add
add
lods
or
cmpsl
sub
sarb
cmp
loope
aam
jne
and
cld
and
in
push
aam
jl
call
std
add
mov
call
cwtl
dec
cmc
sub
insl
or
xchg
aad
pop
adc
lods
sbb
lock
mov
cmc
adc
scas
negl
sbb
push
sbb
add
mov
add
roll
icebp
je
fcomps
out
pop
pop
add
test
xlat
pop
inc
push
or
inc
fidivl
jns
and
jp
and
outsl
in
test
pop
adc
fwait
pop
mov
or
xor
outsl
add
jae
or
ljmp
test
adc
aaa
xor
push
sarb
cli
pop
dec
cld
cmpsb
pmaddwd
jmp
add
adc
loop
insl
or
fdivr
xchg
popf
popl
sub
dec
hlt
notb
sbb
jle
inc
fisttpll
dec
cld
mov
cmc
jns
sub
or
in
push
xchg
pop
in
jmp
xlat
scas
push
jmp
stc
enter
ss
lcall
hlt
pushf
pop
sbb
movsb
push
sbb
xor
loop
repnz
inc
jl
les
ret
aas
or
add
out
enter
pop
cmp
in
orl
push
xor
clc
pop
cld
fistpll
imull
addl
jecxz
and
pushf
add
in
sbb
in
adc
cmp
push
or
or
jecxz
dec
cmc
mov
cli
call
inc
cld
jae
out
idiv
jecxz
pop
jl
jp
lock
sldt
movb
notb
movsl
testb
rorb
push
adc
xchg
add
or
scas
clc
cmp
cli
out
cwtl
inc
adc
std
sbb
inc
add
pop
dec
ror
push
pop
rclb
cld
xchg
sahf
add
mov
decl
xor
push
sbb
xchg
cld
push
mov
pop
push
lcall
push
push
cmp
add
jp
andb
inc
popa
call
jmp
mov
sbb
scas
pop
sbb
mov
shlb
dec
adc
xor
test
or
cmp
add
add
or
ljmp
adc
jo
fs
jmp
aas
push
add
mov
outsl
inc
test
add
cltd
mov
fwait
push
jo
mov
xor
ror
sub
adc
dec
add
add
and
fwait
adc
adc
mov
int3
insl
dec
dec
inc
jo
sbb
and
ljmp
or
icebp
call
ret
adc
aas
and
rclb
insl
jno
cli
out
icebp
cmp
jb
aad
sub
push
aad
int
test
add
in
cli
push
in
outsl
push
in
or
add
mov
loop
push
cmp
push
outsl
repz
or
push
cmp
push
and
mov
in
jnp
jge
xchg
gs
pop
loope
or
add
inc
mov
hlt
rorb
xor
jmp
jl
lock
test
gs
xorb
cmc
incl
add
cmp
jge
adc
add
jne
mov
cmp
int
jne
mov
or
clc
loope
xchg
adc
test
xor
xor
jmp
xor
cld
in
fdivr
js
jnp
jns
and
es
pop
xorl
add
xor
movups
hlt
push
inc
fildl
push
cld
add
or
or
addr16
in
adc
adc
gs
adc
ljmp
inc
mov
or
gs
sbb
cs
sti
pop
inc
jl
test
or
xlat
lret
inc
mov
aas
aaa
ror
mov
sbb
decb
mov
aas
cld
push
push
jle
xchg
lea
bound
mov
imul
dec
pop
sub
inc
pop
and
mov
cmp
jmp
jmp
icebp
mov
mov
cmpsl
lods
decl
add
add
ret
inc
call
icebp
or
lret
xchg
shrb
adc
in
cwtl
add
add
mov
add
mov
add
add
loopne
or
mov
fdiv
aad
push
adc
mov
fnstenv
jle
add
fdivr
sub
add
jmp
ds
out
add
aas
pusha
shl
cmp
enter
mov
cmp
or
decl
push
in
mov
es
roll
jmp
call
jp
push
add
add
push
add
inc
add
lcall
mov
int
jp
push
push
movsl
mov
jl
ficomps
jp
xchg
xor
outsl
jl
adc
mulb
lock
inc
add
add
rorl
jmp
lock
inc
mov
insb
cmp
add
pop
std
incl
sbb
add
cmpsb
int3
mov
jns
call
les
jmp
cld
jmp
adcb
mov
test
adc
sub
in
hlt
add
lods
test
out
inc
sub
adc
xchg
jno
sti
int3
lods
sbb
shlb
push
fdivr
lcall
and
add
add
decl
ljmp
flds
ljmp
cli
push
out
push
push
pop
fiaddl
xchg
lret
xchg
roll
jp
pop
fimull
fsin
incl
pop
arpl
into
mov
add
cli
mov
lock
sarb
fidivrs
add
and
sti
adc
inc
fmull
add
add
adc
pop
cmp
call
xchg
aad
ficompl
xchg
cmc
inc
lret
xchg
and
fidivrl
subl
sbb
fnstsw
jmp
or
or
or
test
out
adc
data16
insb
hlt
aam
call
add
add
fiaddl
xchg
aad
ss
fistps
jle
in
push
or
mov
cli
test
cmc
cmp
dec
aad
insl
add
jmp
adc
add
add
insl
popf
add
jmp
lea
mov
int
mul
repz
push
cli
mov
cli
push
adc
andl
cli
push
ds
cmp
add
jmp
adc
add
add
gs
add
jmp
movl
cli
mov
mov
test
xorl
or
stos
addl
add
test
push
adc
cmp
or
add
leave
inc
loope
adc
cli
clc
mov
add
jmp
add
hlt
leave
inc
adc
insb
btc
or
or
sarb
sbbb
add
call
or
lods
fdivrl
adc
clc
cmc
leave
inc
popa
adc
stos
add
push
adc
mov
pushl
insb
push
push
ljmp
pop
sub
repz
jns
or
jnp
adc
sbb
pop
jno
ljmp
or
adc
sbb
mov
cmp
or
insb
push
push
mov
adc
add
fwait
scas
repz
stc
add
mov
cli
push
repz
adc
movsl
ljmp
adc
sbb
mov
fsub
adc
ds
ss
add
push
xor
sub
add
in
in
out
movl
lret
cltd
inc
and
stos
jge
cs
es
mov
add
scas
sbb
cld
call
mov
adc
pop
and
in
cld
arpl
and
xor
int
out
inc
add
getsec
inc
cwtl
xor
sbb
dec
mov
inc
sub
in
add
add
aaa
or
adc
xchg
loope
out
jecxz
into
in
inc
fstpl
inc
adc
push
dec
mov
rorb
aaa
in
cmpsb
nop
dec
in
jmp
adc
xchg
dec
mov
push
testl
call
orb
push
cmc
ss
dec
xchg
in
jp
adc
ret
adc
jno
add
mov
mov
inc
inc
cli
push
xchg
clc
add
rolb
cmp
cmp
mov
out
sub
add
mov
std
xor
cmp
iret
or
std
shlb
rcll
and
xor
mov
lret
cmp
cmp
sarb
cmc
mov
or
lock
pop
cmp
add
lods
cli
push
mov
fdivrp
iret
call
sbb
out
mov
inc
adc
mov
mov
and
pushf
add
aaa
sbb
adc
aam
sbb
dec
or
dec
pop
call
dec
pop
mov
call
and
cld
inc
xchg
out
mov
fnstenv
or
and
jp
sub
iret
cwtl
push
add
xchg
movsb
add
sbb
fadds
push
test
or
and
xor
add
icebp
fsts
xchg
fs
jae
pop
lret
fldl
incl
push
pop
sti
cs
inc
sti
int3
movsl
or
xchg
nop
call
or
pop
sbb
cltd
pop
test
cld
sbb
shr
gs
mull
loope
les
adc
insb
sbb
or
dec
rcr
shrl
clc
gs
fwait
mov
int
dec
clc
xchg
dec
add
add
mov
enter
inc
scas
fisubrl
pop
push
jmp
loop
addr16
dec
rorb
aad
and
jmp
xor
adc
daa
jecxz
jle
push
cld
cmpl
add
lret
cli
push
cmc
or
enter
int3
test
adc
or
enter
inc
aaa
test
mov
sahf
jecxz
cli
adc
push
or
enter
xchg
push
push
cld
jae
int3
push
sbb
fsubrp
jle
jle
or
inc
jge
call
inc
lret
cli
sub
or
jg
pusha
lret
mov
dec
cli
dec
add
pusha
cvtps2pd
inc
add
out
cmc
setle
adcb
decb
cld
add
inc
daa
ds
xchg
int
fiadds
inc
idiv
out
inc
adc
ret
stos
scas
cmc
push
adc
and
jmp
add
idivb
cmc
jmp
testl
xchg
out
cmpsb
mov
mov
inc
adc
add
xchg
mov
pop
adc
jnp
in
cmc
nop
adcb
decb
cmp
test
adc
inc
adc
mov
jnp
xor
cld
push
push
jbe
std
sarb
cli
push
loopne
insb
push
push
mov
div
pushl
out
add
push
leave
cld
sarl
sti
push
or
es
call
mov
jg
add
movsb
or
aas
ds
jle
xchg
lret
and
xchg
lods
aam
and
stc
test
jp
adc
adc
cmp
and
jbe
sarb
les
sub
les
pusha
add
in
in
repz
hlt
bound
and
ds
or
in
xchg
lods
jmp
repz
hlt
xor
add
adc
or
cmpps
add
sbb
and
shl
loopne
sar
rolb
outsl
int3
into
fwait
repz
mov
pop
ss
mov
inc
jge
lahf
or
in
icebp
jg
add
add
enter
stc
ret
ret
adc
dec
push
and
inc
cmc
jnp
add
repnz
out
add
lret
sti
pushf
cli
ret
shll
mov
dec
or
cmp
cli
xchg
xorb
out
out
fdiv
test
movsb
aas
add
pushf
aaa
cmpsl
mov
push
test
leave
or
add
jg
ret
sti
shrb
push
adc
adc
test
add
add
std
push
es
arpl
std
cli
testl
add
sub
gs
jne
or
jne
mov
or
sub
call
movsl
mov
cli
incl
dec
dec
and
or
test
dec
ret
cmpsb
push
call
cmc
jne
mov
or
mov
fistpll
mov
mov
pop
and
and
xor
mov
psubd
add
add
cli
call
fsubr
mov
or
or
dec
push
and
jbe
or
push
xor
or
sti
mov
pop
pusha
inc
adc
push
or
out
iret
stc
xchg
fdivrp
xor
xor
lret
xchg
jmp
je
mov
pop
push
xor
jo
add
call
stos
je
xor
mov
push
ret
jle
insl
inc
sub
loopne
xchg
adc
sti
out
ja
les
sbb
mov
mov
pop
push
add
add
sub
out
add
jns
or
aas
outsb
out
mov
test
add
cli
xor
or
adc
je
and
push
loop
ljmp
or
lods
stos
stos
mov
lods
cld
sahf
mov
pushl
pop
xchg
jno
call
xor
xor
testb
sti
cld
cmp
adc
cmpb
faddl
add
cmpsl
subb
mov
xor
add
push
mov
cli
jmp
adc
sti
jl
or
out
mov
pop
lods
mov
adc
mov
or
rorb
push
ds
add
pop
jo
test
call
enter
add
push
imul
mov
leave
jae
addr16
jp
dec
inc
add
pop
stos
stc
outsb
leave
jae
cmp
jne
cmp
loop
es
mov
add
mov
out
loopne
add
dec
and
push
jne
mov
inc
add
xlat
dec
sbb
ja
sti
add
and
jnp
xchg
hlt
idiv
add
lods
outsb
movl
xchg
cli
js
fsqrt
pop
xor
and
imulb
add
pop
leave
je
ficoms
or
mov
je
stos
mov
incb
dec
or
ffreep
je
inc
pop
jecxz
mov
adc
enter
enter
mov
mov
jnp
adc
xor
add
fcoms
mov
xor
or
mov
call
mov
in
mov
loopne
aad
out
adc
mov
into
and
lds
inc
or
lea
mov
js
mov
sbb
scas
add
or
sarl
push
sub
mov
icebp
fcomi
fstl
rclb
or
add
jmp
inc
cmp
adc
mov
adc
mov
adc
loopne
fwait
xchg
notb
stos
adcb
dec
adc
leave
mov
in
adcb
cmp
pusha
into
adc
and
daa
xor
adcb
cmp
pusha
add
push
cmpl
mov
fnsave
sbbl
jmp
push
push
sti
mov
xlat
xor
mov
pushf
cli
mov
adc
arpl
jne
ret
jae
adc
fdivr
scas
cmp
mov
les
pop
mov
sbb
fdivp
je
adc
push
je
cmp
add
add
incl
es
cmp
dec
xchg
mov
add
add
stc
pop
mov
push
addl
sbbl
lds
sbb
inc
jmp
or
cli
fisttps
dec
add
arpl
adc
cld
push
shll
pop
roll
frstor
cmp
add
pop
lcall
fldenv
xor
mov
imul
cmpsl
jne
popa
sub
rcrb
cmpsl
ja
and
mov
mov
xchg
decl
stc
mov
xor
cmp
ja
push
mov
sti
sbb
xchg
adc
cmp
mov
dec
add
test
xchg
fists
lcall
testb
repz
add
js
adc
xor
ds
jns
andl
and
les
mov
sub
in
pop
fwait
les
outsl
js
aaa
inc
jmp
ret
std
adc
iret
jnp
rcrl
cs
ret
lcall
mov
addb
add
lea
sub
add
adc
repnz
test
sbb
adc
jmp
mov
or
or
adc
add
call
int
pop
loop
mov
pusha
dec
loope
jmp
dec
or
push
sarb
xchg
mov
mov
notb
mov
jg
mov
fsubrl
stc
jbe
out
cmc
or
jno
or
or
add
rolb
xchg
add
ljmp
or
adc
mov
imul
inc
dec
and
popf
push
inc
push
out
pop
cmp
push
faddp
rolb
add
test
add
cmp
inc
jo
roll
adc
xchg
out
shl
pusha
test
xchg
out
mov
shr
cmc
ljmp
cld
cmp
ljmp
divl
add
add
int
xchg
xor
lcall
je
out
or
or
cli
out
les
add
pop
add
int
dec
adc
lock
xor
xchg
je
xor
xchg
iret
and
sahf
into
cmpl
lcall
fsubrl
mov
and
jae
mov
sti
pop
or
push
das
push
out
inc
in
or
jb
cld
push
add
xor
test
int
dec
ss
add
mov
pop
xchg
enter
dec
sub
add
stos
jo
adc
rcr
xor
call
sti
pop
mov
aad
mov
shrb
jmp
mov
setnp
mov
or
test
mov
pusha
push
leave
pop
jo
xchg
mov
mov
je
sub
add
and
out
enter
pop
mov
fwait
mov
add
mov
ljmp
or
pushf
cli
cs
cmp
es
gs
mov
mov
sti
je
mov
fsubr
outsl
jl
pop
cs
mov
ljmp
inc
jmp
cli
add
pusha
xor
out
ret
fnsave
lods
rclb
ret
jae
shll
inc
adc
dec
clc
jl
data16
testb
inc
push
xor
in
add
dec
mov
dec
fdivrp
aas
mov
cld
out
adcb
aas
jae
inc
aam
mov
jae
and
lret
add
stc
sbb
cmpsb
jae
adc
add
je
test
test
decl
push
cld
jae
data16
mov
jp
pmuludq
fdivrp
scas
mov
vmovups
mov
test
cmpb
lahf
or
mov
aaa
push
inc
xlat
in
inc
mov
test
inc
and
aas
in
xchg
inc
add
std
stos
mov
aaa
jl
jg
cld
mov
xchg
or
push
lods
or
sahf
fcoml
sti
sbb
add
mov
push
sti
cld
xlat
mov
or
push
fistpl
arpl
loop
jg
dec
mov
mov
fsubrl
mov
fcompl
test
jmp
ljmp
add
sbb
mov
cmpsl
or
add
add
mov
mov
sub
or
icebp
mov
push
or
and
icebp
stos
pusha
leave
icebp
mov
mov
jl
loopne
jns
loopne
fwait
stc
mov
test
inc
and
mov
mov
dec
insb
fimuls
sti
mov
add
xchg
xor
rolb
sub
idivb
stos
inc
and
or
sar
aam
xchg
mov
inc
std
cli
mov
mov
pop
call
jb
in
jo
in
add
inc
adc
mov
jnp
pop
test
xor
lahf
pop
lock
cli
addl
add
add
adc
add
lock
repz
divl
push
or
cmpb
sub
xchg
cmp
cld
mov
iret
cmp
fadds
clc
cmp
addr16
pushl
insb
cmp
jp
or
cmc
andl
jnp
inc
sbb
add
mov
add
ret
ss
mov
mov
call
xlat
lods
and
out
daa
dec
add
jb
xor
adc
xchg
insl
mov
add
fsubp
or
xor
push
testb
xor
sub
pop
andl
adcl
mov
out
incl
es
testb
mov
pop
adc
add
adc
mov
pusha
push
and
movsl
stos
adc
push
or
call
push
sbb
stos
mov
test
or
andl
arpl
call
or
add
xor
jmp
cmpsb
sbb
fidivs
or
sti
jle
lods
call
or
fldt
testb
insl
dec
std
mov
or
cmp
lahf
add
shlb
add
call
xorl
xlat
hlt
icebp
in
sbb
out
mov
xor
adc
pmaxsw
mov
xchg
jle
inc
cmc
xchg
je
fwait
iret
cli
cld
or
data16
cli
aam
cltd
add
mov
test
cmpsb
out
cmp
sub
stos
mov
test
out
xchg
in
jmp
in
push
xchg
in
jge
cmp
jl
cmp
add
cltd
xchg
cmp
sub
cmp
sbb
cmp
pushf
xchg
cmp
pushf
cmp
push
xchg
cmp
mov
add
xchg
cmp
cmp
cmp
xchg
cmpb
cmpb
jl
add
cmpb
nop
cmp
daa
jge
add
xchg
jb
cmp
mov
cmp
and
add
jl
add
add
jl
add
lea
adc
xchg
cmp
adc
xchg
cmp
adc
fwait
cmp
adc
cltd
cmp
adc
cwtl
cmp
adc
cmp
adc
cmp
adc
cmp
adc
xchg
adc
cmp
add
adc
pop
cmp
adc
cmpb
sub
cmp
adc
pop
pusha
or
out
add
cmpsl
pop
cld
add
hlt
add
pop
in
add
xchg
faddl
and
add
add
add
in
or
imul
pop
adc
cli
fcoms
enter
add
and
repnz
pop
out
sbb
pop
out
sbb
or
loop
ffreep
loop
faddp
fucomip
loop
in
fsts
in
cs
jmp
dec
cmp
dec
cmp
lcall
out
xor
mov
jmp
mov
cmpsb
in
mov
fidivrs
nop
shlb
mov
out
pop
mov
out
roll
lcall
and
ljmp
mov
incl
and
call
and
push
and
shll
imul
je
call
out
lcall
pop
cmp
add
cmp
push
cmp
mulb
cmp
add
add
and
add
cmp
add
sbb
add
cmp
add
and
add
cmp
add
and
add
and
add
cmp
add
and
add
and
adcl
dec
add
std
aaa
orb
dec
aad
push
xchg
pop
das
ret
jns
pushf
pop
lods
mov
push
leave
and
mov
mov
inc
shll
ss
lahf
andb
cwtl
imul
cmp
cmpsl
xor
cmp
pop
or
add
fcoml
pop
add
scas
ja
sub
mov
ss
ja
add
or
daa
mov
data16
or
push
add
jp
aam
mov
ja
hlt
jmp
inc
jge
loope
push
shll
stos
pop
ret
mov
sarb
and
jmp
inc
popa
sub
add
mov
mov
movsl
cwtl
jl
cwtl
pop
xchg
mov
pop
or
movsb
mov
hlt
add
push
jns
cld
xchg
mov
mov
test
ljmp
gs
pop
dec
pop
js
int3
sbb
add
in
xor
lcall
loope
outsb
shl
mov
clc
stos
xor
jo
icebp
jnp
nop
ljmp
mov
inc
xchg
bound
rclb
aam
test
rorl
sub
sti
push
sub
add
cmp
sti
out
mov
pushf
sbb
push
jns
pop
cmpsb
cmpsl
cli
xlat
clc
rcl
add
jo
adc
mov
jnp
mov
jl
cmpsb
jbe
add
adc
add
and
mov
xchg
add
push
cmc
jmp
push
xchg
es
movsb
orl
push
pushf
and
cmc
mov
inc
sti
incl
add
jae
stc
test
mov
add
or
ljmp
or
pop
and
cmp
test
add
cli
lcall
std
jae
sbb
jmp
cmp
and
cmp
push
or
jmp
mov
or
sub
inc
adc
call
cld
in
xchg
stos
pop
mov
inc
sti
add
push
adc
mov
stos
cli
mov
xchg
and
sahf
inc
out
into
jmp
fdivs
jo
jmp
out
and
out
xor
xchg
inc
or
xchg
jnp
xor
xchg
inc
mov
push
addl
into
and
dec
das
lds
push
dec
repz
scas
mov
add
hlt
add
push
lcall
mov
jmp
clc
sbb
loop
call
and
call
js
adc
and
arpl
or
pop
xorl
data16
jge
pop
outsl
fisubs
mov
je
adc
ljmp
add
insl
in
sbb
std
pop
jge,pn
lods
aaa
das
jbe
mov
inc
iret
pushl
imul
insl
stc
xchg
clc
cli
push
std
ss
scas
xchg
cli
jbe
sbb
icebp
scas
sahf
outsb
push
hlt
push
inc
std
imul
cli
jmp
mov
mov
or
cli
push
add
mov
add
sub
pop
dec
or
mov
cld
xchg
sub
mov
add
mov
mov
mov
mov
push
inc
int3
mov
or
sbb
adc
adc
inc
in
mov
jns
popa
fadds
jmp
xchg
repnz
mov
call
mov
xchg
add
lret
inc
jnp
mov
out
sbb
popf
jg
dec
insb
insb
mov
imull
lea
and
pushl
xor
test
shrl
jmp
push
inc
xchg
push
cmpb
ja
xor
fisttps
addb
orb
mov
je
sub
pop
movsl
add
mov
jg
inc
outsb
movsl
jae
out
ljmp
movsl
icebp
mov
add
call
sarb
popf
push
cltd
adc
xchg
lock
cli
xchg
jo
or
inc
hlt
push
sub
jmp
test
mov
push
add
test
call
push
add
addl
push
cld
ljmp
call
xchg
test
push
and
jle
jmp
sbbl
add
sahf
shrl
jo
push
dec
adc
jge
pushf
mov
inc
sub
mov
sbb
test
dec
stos
mov
test
out
or
ja
sahf
inc
test
push
or
and
popf
sbb
push
add
cmpsl
out
cmc
xor
add
js
jle
sbb
pop
aas
out
test
push
mov
jmp
or
xor
or
add
aam
push
mov
sbb
cli
jnp
jl
sub
hlt
xlat
dec
cltd
out
cmp
xchg
or
in
mov
dec
rcrb
jno
sti
dec
push
aam
ficoms
or
add
add
dec
cmp
cli
ss
xchg
sbb
adc
aam
out
xor
mov
mov
jmp
cmp
ljmp
jg
add
mov
sbb
xor
adc
jg
mov
stc
idiv
dec
out
mov
mov
sub
push
cmc
incl
add
pop
sbb
add
addl
push
add
add
push
outsb
pop
xor
cld
decl
test
je
pop
icebp
mov
incb
cld
mov
repnz
decl
mov
sbb
pushf
rol
mov
inc
popf
dec
sti
add
lds
popf
bound
jp,pn
mov
cli
push
orl
mov
push
test
xchg
movaps
jge
js
fimuls
rcrb
test
divb
push
cmpsb
adc
adc
fidivrs
call
cmpsl
dec
cmp
xor
aad
stos
add
add
imul
aaa
orl
ds
pop
sub
pop
jle
inc
sub
data16
adc
in
cmp
sbb
lds
inc
lcall
jmp
cmp
icebp
fildl
lds
push
movsl
inc
xor
push
mov
mov
add
jne
cli
push
push
gs
adc
hlt
mov
mov
bnd
jae
or
inc
adc
test
jle
add
or
cltd
cli
jmp
fcomip
mov
leave
dec
clc
add
or
jmp
insl
mov
cmp
add
lret
jg
mov
mov
cli
sbb
xor
fwait
jle
add
ljmp
loope
pushf
adc
call
pop
push
cmp
jns
xor
pop
push
pop
orl
imul
cwtl
pop
cmc
js
add
sub
mov
dec
repnz
add
mov
xchg
sub
test
mov
test
addl
rolb
pop
add
jno
or
fldl
divb
scas
rcll
testl
pushl
or
mov
repz
mov
xchg
xchg
xchg
jae
add
sbb
push
dec
inc
pop
pop
shl
imul
inc
pop
xor
aas
adc
dec
or
jmp
pop
jmp
fstps
add
or
add
cld
popa
hlt
aas
adc
sti
adc
jmp
out
ss
add
cmc
aas
adc
sahf
adc
fwait
add
jecxz
mov
in
sub
out
add
ss
xor
push
add
inc
cmc
add
aam
cmp
fdivrs
das
add
clc
push
lock
cwtl
cmp
int
pop
cltd
or
add
xchg
fsub
add
test
sub
rcll
adc
mov
sub
cld
out
adc
test
add
fcmovu
pop
inc
inc
jmp
add
shrb
sbb
fsubr
test
jge
lahf
or
inc
and
cld
movsb
push
push
aas
cmp
push
mov
or
ret
add
pop
xchg
cli
jmp
stc
sub
in
add
cld
mov
movsl
ss
add
jmp
outsb
loope
xchg
stos
inc
out
mov
xchg
mov
test
decb
xchg
pop
ret
ds
jno
dec
add
in
inc
ret
ds
loop
or
push
aaa
mov
mov
dec
add
aam
mov
subl
push
jle
mov
adcl
orl
cmc
inc
adc
cmc
inc
aam
xchg
popa
outsb
and
push
jle
add
mov
push
adc
cmc
inc
test
lcall
int
je
add
adc
mov
add
add
add
cmc
jg
and
outsl
push
aaa
jl
xchg
add
cli
push
adcl
sbb
adc
pop
dec
pop
test
and
test
add
je
jno
aam
xchg
imul
adc
inc
or
cwtl
add
mov
icebp
std
xchg
test
jmp
test
jbe
test
add
into
out
push
mov
test
cmp
out
pushf
or
cli
inc
cmp
adc
es
push
and
inc
rolb
xor
sub
sbb
dec
push
pop
test
loop
rolb
jmp
mov
or
or
cmpsl
std
call
subb
xor
push
rcr
jl
pop
push
sub
add
or
in
icebp
and
xor
mov
ds
mov
mulb
in
sbb
cli
push
add
or
sub
push
add
sbb
jns
cli
push
jge
sbb
jl
adc
xor
lods
xchg
jp
push
pop
push
jmp
adc
mov
jae
add
adc
iret
aam
pop
cmp
es
xor
enter
test
inc
movsl
das
lea
jg
cli
sahf
push
sti
push
lods
aaa
pop
sub
add
call
fcomps
call
test
out
or
hlt
mov
cmp
push
xchg
cli
add
sub
call
add
mov
cld
call
add
push
add
pusha
jns
in
dec
or
jp
push
pop
jp
ucomiss
mov
mov
lret
ja
idiv
mov
or
ja
add
add
jp
mov
mov
testl
inc
jo
add
dec
jns
or
iret
repz
xor
xchg
cld
notb
loop
cmp
add
cltd
nopl
adc
test
or
pop
call
popf
insl
add
mov
insl
in
subb
adc
test
dec
addb
mov
mov
aaa
shrb
add
add
insl
into
inc
in
cmp
xchg
test
push
add
xchg
add
and
jle
popf
cmpl
adc
ss
add
mov
add
xor
add
add
adc
cs
and
mov
imul
ljmp
add
adc
sub
xchg
inc
pop
add
push
in
mov
add
adc
xor
lcall
ret
cmpsl
mov
mov
cwtl
pop
cmp
arpl
jp
add
jbe
call
fst
add
test
adc
pushl
cwtl
mov
out
les
arpl
xchg
aam
adc
xchg
test
cwtl
mov
test
add
add
test
inc
lock
xchg
rorb
inc
xchg
inc
hlt
push
mov
ss
test
call
mov
adc
lea
cli
push
cmp
mov
add
les
pop
dec
std
daa
mov
addl
adc
xchg
jl
mov
add
mov
mov
pop
loope
mov
imul
rorl
pcmpeqb
decl
pushf
cmp
jae
xor
mov
imul
mov
imul
cmp
clc
andl
cmc
mov
divb
iret
notb
adc
cmp
cmp
or
add
fildl
pop
call
add
or
gs
add
loopne
mov
adc
inc
mov
aam
mov
inc
mov
in
es
sarl
adc
inc
mov
in
dec
testb
lcall
fidivs
jl
cwtl
test
mov
add
inc
int
xchg
xchg
adc
scas
add
add
and
push
lock
cwtl
inc
sbb
add
cs
bndstx
cli
adc
jnp
rorb
mov
clc
xor
stc
cmp
add
cs
xchg
popf
cld
pusha
cmp
xchg
pushl
sub
call
xchg
sbb
jbe
or
add
cltd
adcl
add
fisttpl
pop
lock
test
xchg
or
add
test
adc
add
mov
sub
jae
int3
inc
psubsb
adc
or
pop
rcll
lcall
push
out
data16
movaps
jl
mov
pushf
cmp
and
cli
cmp
xlat
rclb
push
jo
add
cli
hlt
into
stc
aas
jmp
cld
mov
adc
in
lcall
and
or
std
xchg
insl
je
call
pushf
stc
mov
cltd
push
adc
adc
lea
je
push
pop
mov
notb
adc
in
inc
pop
mov
icebp
shr
jne
add
add
fnsave
inc
fcomi
adc
sti
orl
mov
cmc
push
addr16
jmp
add
sbb
xchg
cmp
add
call
aaa
idivl
adc
pop
push
mov
mov
push
lcall
enter
lahf
pop
mov
add
insl
stc
cmp
add
jmp
or
outsb
add
lcall
fldl
cli
inc
lret
xor
adc
lea
add
mov
imul
add
adc
and
shlb
xchg
bnd
xorb
pop
fisttpll
xor
push
add
add
dec
and
jle
jge
sbb
add
lret
stos
pop
and
into
inc
inc
cltd
iret
aad
xchg
or
jle
in
dec
or
hlt
mov
fwait
adc
xchg
ds
leave
adc
sti
ret
xor
clc
scas
in
sub
es
push
add
or
mov
add
das
outsb
pop
in
clc
xor
ss
adc
daa
xchg
psraw
xchg
and
jl
pop
add
pop
lret
pop
cld
mov
push
lcall
or
mov
aaa
lcall
push
xor
add
jae
jp
pop
mov
mov
jns
adc
mov
sbb
add
je
js
adc
es
cli
pop
adc
jmp
clc
shl
sahf
or
add
lock
xor
xor
fmull
aas
jmp
adc
repnz
mov
jmp
stc
std
jae
imul
rcl
cmc
xor
das
mov
rcl
xor
out
pop
mov
fs
push
fisttps
push
ret
out
add
movl
incl
add
mov
jl
cmp
incl
adc
jle
je
mov
add
test
add
add
or
dec
pushl
sarb
or
les
cmpsb
adc
stc
int
sti
ficomps
mov
jnp
xlat
add
sbb
in
aas
adc
adc
and
sarl
sahf
dec
loop
add
xchg
movsl
mov
mov
insl
in
add
arpl
add
push
sub
mov
bound
bound
or
rcrb
add
int
pop
or
xchg
jae
inc
hlt
mov
lea
xor
mov
adc
out
bsf
ljmp
inc
adc
jmp
add
add
pop
mov
cmc
inc
adc
push
sbb
inc
std
adc
push
inc
jmp
jnp
cwtl
repz
xor
stc
mov
test
lret
daa
movsb
rorl
xchg
jp
mov
sti
pop
aas
jmp
cld
loopne
pop
pushf
ret
sub
mov
int
mov
add
sub
add
je
xchg
sbb
fldl
or
flds
sub
or
or
mov
add
clc
xchg
in
dec
ds
and
adc
sti
lahf
jp
mov
add
adc
or
dec
out
cmpsb
push
sub
add
idiv
cmp
add
add
jg
mov
das
jp
je
out
dec
mov
out
sub
cmp
stc
std
decl
insb
xor
call
std
jmp
insb
pop
clc
jmp
gs
aaa
je
mov
add
call
jae
test
insb
movsl
ss
mov
add
je
push
nop
add
push
adc
je
inc
jbe
mov
lret
dec
lcall
adc
cmpb
adc
jne
imul
cmp
push
push
inc
add
jnp
test
push
inc
add
cs
mov
xchg
xor
pop
jns
sarl
incl
add
sub
push
cli
and
adc
pop
add
aad
sbb
out
aas
adc
mov
mov
sub
xchg
jle
push
out
dec
add
out
add
mov
testl
call
inc
adc
cmc
inc
adc
scas
hlt
xor
add
add
stc
into
adc
divb
xchg
ret
call
fisttps
push
std
add
add
or
ret
call
mov
add
xor
jmp
mov
add
mov
add
idivl
inc
sub
cmp
fwait
hlt
test
jge
mov
aas
scas
fs
stos
loope
jmp
add
xchg
push
mov
stos
mov
scas
mov
mov
jne
repz
adc
add
pop
push
jns
xchg
or
aam
cmovo
xchg
mov
mov
lcall
popf
sbb
out
jno
cli
fs
idiv
cs
out
jbe
cli
jno
jns
in
push
xchg
std
cli
add
add
xor
pushl
nop
inc
hlt
pop
adc
fstpt
aas
sarl
or
or
imul
inc
hlt
inc
ficoml
repz
dec
lcall
jge
jne
mov
je
sar
test
or
mov
dec
outsb
out
clc
add
rcr
stos
add
mov
test
adc
imul
ja
push
add
add
push
call
das
adc
pushl
mov
addb
scas
mov
call
mov
shll
mov
adc
cli
ret
adc
jns
add
hlt
jg
or
call
imul
out
rolb
ret
call
fwait
sar
cld
test
out
xlat
cmpl
repz
add
push
aas
inc
mov
jg
outsb
lea
sti
cld
lods
ljmp
into
cs
ret
call
xor
cmp
add
xor
mov
out
push
adc
fwait
sub
aas
loopne
in
cld
xorl
gs
or
xor
mov
lock
inc
call
xchg
adc
xchg
add
xchg
add
mov
lock
enter
add
add
jecxz
push
sbb
bnd
add
add
movntq
call
xor
lcall
dec
jg
pushf
dec
addb
mov
call
sub
lret
xchg
adc
mov
add
push
pop
push
out
test
jmp
mov
sti
aas
add
bound
ja
out
xchg
out
and
gs
adc
and
push
sub
lret
mov
push
push
mov
scas
call
rorl
notl
jnp
xchg
icebp
cmp
add
mov
sub
mov
dec
cmc
cmp
adc
rolb
incl
inc
insb
out
aaa
or
insb
push
clc
ljmp
push
adc
add
dec
push
jae
mov
sub
cmc
adc
mov
or
xchg
aaa
push
mov
add
add
pop
add
add
mov
adc
or
lcall
mov
pop
mov
shll
inc
adc
paddw
jns
cmp
push
mov
push
or
jle
arpl
pop
es
pop
push
jl
or
push
sbb
dec
mov
clc
push
popa
loope
clc
out
jne
or
add
sbb
cld
or
and
fidivrs
mov
outsl
cli
mov
js
jp
jne
jmp
in
shll
out
cld
cmp
and
idivl
loopne
push
imul
daa
je
rcrl
hlt
sysret
jmp
xor
ja
out
mov
lcall
shr
data16
add
add
add
enter
xchg
xlat
ret
push
into
mov
add
pop
pop
stc
ljmp
sbb
mov
adcb
loope
mov
sar
adc
je
xchg
or
sti
shlb
arpl
enter
push
lcall
push
sahf
mov
inc
cli
scas
sbb
cli
hlt
mov
shlw
add
or
rolb
das
jb
and
push
aaa
outsb
ljmp
data16
in
rorb
sub
sub
test
sub
jg
shrl
inc
cli
daa
add
add
add
arpl
and
out
pop
cmpl
je
add
add
push
cmc
jne
fs
push
cs
js
inc
cld
sti
stc
pushl
xchg
lahf
pusha
mov
adc
je
lods
dec
ficoml
push
mov
js
lea
dec
cmc
adc
rolb
dec
push
inc
xchg
sub
int
jns
outsb
and
adcb
ljmp
inc
adc
jae
pop
in
ljmp
push
adc
adc
and
add
shrl
push
cmpsb
je
or
stos
imul
lcall
sti
loopne
std
adc
repz
cwtl
movsb
jp
pop
insb
rorb
shll
mov
and
dec
out
ret
outsb
icebp
or
decl
mov
repnz
std
je
out
pop
add
adc
push
jg
bound
gs
aad
jo
jmp
mov
je
test
mov
jge
push
cmp
and
push
dec
xor
gs
out
incb
int3
push
mov
jae
mov
xor
sbb
ret
push
mov
inc
xchg
add
inc
add
ss
roll
add
jg
or
scas
inc
or
xor
sub
aaa
xorl
nop
push
jns
ljmp
add
imul
int
sub
into
gs
mov
mov
or
out
adc
add
cmp
xor
repz
cltd
cld
cmp
ja
jno
ja
sub
into
mov
add
sar
pushf
add
lret
in
or
xor
fdivrl
add
mov
test
push
mov
pop
stc
push
jae
cmpsb
aaa
aam
stc
adc
xchg
mov
mov
dec
dec
push
dec
dec
push
mov
add
sbb
adc
cld
test
mov
repz
daa
jns
push
aaa
jns
incl
add
push
inc
add
mov
divb
repnz
cli
mov
push
mov
add
out
jmp
repnz
push
inc
add
dec
notb
xlat
dec
ljmp
push
cmc
jne
cmc
sub
jne
pop
mov
inc
je
icebp
ljmp
jae
inc
sti
and
lcall
add
fstpl
jae
fmul
sti
pusha
cmp
or
repz
in
je
ffreep
jp
out
ret
movsb
jbe
sbb
repnz
xor
inc
adc
ret
ds
mov
push
mov
dec
loope
clc
and
sti
xor
sbb
push
inc
adc
xchg
push
adc
sbb
cmp
add
add
pop
inc
pop
inc
in
mov
roll
pop
add
add
and
call
cmp
jnp
psllw
repnz
hlt
daa
or
add
add
cli
loope
arpl
jmp
or
pusha
in
cmpsb
adc
call
mov
add
popa
sbbl
icebp
or
incl
add
xor
cli
jmp
lea
ficoms
out
rcrb
clc
push
sbb
data16
addr16
mov
inc
loope
in
jne
inc
out
clc
mov
in
imul
je
xchg
push
clc
push
adcl
aas
cmc
or
sub
jl
out
ja
out
mov
iret
imul
push
cli
push
mov
mov
adc
push
inc
cmp
jne
test
sbb
pop
push
jmp
out
mov
andb
je
inc
push
jmp
andb
xor
inc
jp
cli
push
data16
mov
add
push
jno
jmp
sti
lods
shrl
lods
mov
je
pop
sbb
xchg
cmc
call
xor
movsl
mov
iret
and
push
inc
push
in
sbb
imul
lcall
dec
lcall
fstpl
add
aad
add
int
add
lds
add
add
fstpl
add
aad
add
mov
addr16
lcall
rorb
and
and
sbb
and
sbb
xchg
inc
sbb
push
scas
mov
ljmp
push
shrb
adc
pop
jns
fcompl
jae
add
dec
repz
mov
cmp
movsb
or
add
incb
sbb
subl
sub
ret
icebp
insb
mov
jns
adc
inc
sub
cld
call
aaa
clc
cmc
in
pop
and
in
dec
and
les
std
hlt
enter
int3
aaa
add
add
sub
hlt
aaa
pop
cmc
clc
aaa
es
fdivl
and
lock
or
idiv
in
add
mov
adc
and
jo
and
lret
dec
or
add
add
jb
and
arpl
out
pmaxsw
andl
clc
subb
add
arpl
mov
adc
jle
and
add
scas
xor
jp
sbb
addl
add
imul
stc
call
xlat
add
push
add
idiv
jae
jmp
mov
test
dec
test
ret
add
jmp
test
or
push
add
lds
sub
leave
test
or
cmp
jg
xor
test
inc
ds
cmp
adc
insl
ja
or
mov
push
adc
cmp
adc
cmp
adc
jne
incl
add
js
pop
int3
jmp
pop
xor
jg
stos
push
movzwl
jp
sbb
add
lods
repz
call
fdivs
push
in
push
adc
negb
pop
jp
or
ror
es
xchg
pop
or
xchg
push
std
call
fdivrp
mov
push
in
push
adc
inc
adc
jle
add
pop
gs
cwtl
ret
mov
sub
fistpll
lcall
je
and
call
in
mov
inc
in
dec
add
jne
pop
and
lods
pop
push
jbe
pop
lds
xchg
mov
push
mov
pop
stc
jne
or
add
cmp
mov
mov
enter
or
in
xor
out
loopne
jp
stc
mov
loope
gs
or
xor
sbb
lcall
stc
fldl
mov
add
pop
in
add
aas
ljmp
adc
cmp
lds
pop
mov
adc
shl
sub
and
adc
sbb
and
test
jg
loop,pn
mov
negb
jp
loopne
ret
insb
adc
lcall
mulb
or
rcrb
imul
dec
ret
ja
aaa
stos
adc
cmc
adc
xchg
fscale
test
sub
inc
idivb
adc
ret
jg
lds
add
cld
addl
add
add
cmp
adc
cmp
inc
xchg
aas
or
js
icebp
push
gs
add
push
add
cli
loop
clc
xlat
inc
pmaddwd
and
idivb
adc
idivb
stc
add
cmp
adc
and
cmp
add
stos
inc
push
ljmp
jge
or
inc
add
ss
add
add
and
xlat
dec
pcmpgtw
mov
test
cmp
and
test
pop
dec
push
add
call
fst
add
pop
dec
inc
adc
rorb
pop
jg
addr16
test
sahf
add
push
add
push
mov
scas
ficoml
mov
enter
add
add
sub
imul
adc
xchg
or
jg
pop
lock
sub
jl
add
add
das
add
out
fisubrs
push
test
add
shl
push
pop
add
jge
push
int
sbb
jg
sbb
jmp
sti
add
stos
inc
ret
xor
jp
adc
lret
adc
aas
xor
add
cmpl
pushf
cli
push
mov
fiadds
adc
push
ljmp
fsubrp
sbb
inc
test
xor
push
movsbl
or
shr
or
out
mov
ret
pop
jno
jmp
adc
repz
xchg
clc
sbb
in
add
pop
outsb
fstl
add
sub
xchg
fs
xchg
jecxz
stc
jnp
call
fbstp
sub
cmp
inc
sub
cli
imul
xor
pop
lods
shll
arpl
imul
add
inc
jns
add
jg
loop
addl
add
std
daa
jmp
sub
add
mov
inc
pop
int3
nop
push
sbb
test
icebp
or
js
jg
andb
cmp
jg
add
jo
jns
rolb
aaa
orl
jp
or
incl
mov
cmp
repnz
xchg
cmpsl
outsb
inc
jnp
cmp
outsb
sub
add
stc
jae
movsl
outsb
sbb
xlat
push
add
mov
xchg
pop
cmc
call
lcall
dec
dec
sti
out
xchg
les
adc
add
push
lcall
dec
dec
pop
out
xchg
les
sbb
stos
repnz
flds
dec
jae
mov
test
outsb
call
adc
cmp
inc
daa
push
push
adc
add
adc
cmp
inc
incl
add
sub
daa
push
inc
inc
adc
add
add
insl
xchg
inc
jmp
add
ds
or
lods
and
or
mov
ss
stos
adc
subb
jns
jmp
add
jge
add
add
or
add
out
mov
adc
adc
imul
add
cmpl
jmp
add
repnz
sub
stc
test
ljmp
add
xchg
push
dec
pop
cli
inc
inc
imul
imul
imul
adc
imul
call
add
add
int3
repnz
subb
jns
adc
xorb
test
js
cli
das
dec
jno
clc
call
adc
and
jmp
rcll
jmp
aad
das
dec
repnz
push
loopne
test
test
adc
ret
testb
les
jg
ficoms
xor
jae
mov
adc
rorl
cmp
add
pop
sbbl
pop
add
ljmp
lock
loopne
add
fidivrs
mov
orb
arpl
js
cmp
pop
jle
jo
add
mov
pop
jne
fidivrs
and
fdivrl
and
sbb
orb
mov
pop
mov
test
mov
sub
addb
add
adc
adc
inc
add
decb
or
icebp
lods
or
push
push
jg
push
ljmp
inc
inc
jg
ljmp
call
inc
inc
adc
pop
add
fmull
dec
call
rorb
rol
add
pop
and
in
add
push
inc
jae
jecxz
and
jecxz
and
repz
add
sub
add
lea
cmc
call
cmc
int3
ljmp
test
or
fbstp
and
pop
popf
add
or
xchg
je
add
or
cld
pop
stos
ret
iret
xchg
add
add
fnstcw
pop
mov
and
orl
ret
adc
or
add
cmpl
jle
pop
pop
imul
loope
adc
pop
push
push
add
inc
out
add
cmpsl
push
lret
or
xchg
xchg
mov
xchg
add
pop
add
jmp
addr16
imul
out
adc
lea
pop
sbb
out
add
loop
addr16
loop
xchg
loop
mov
pop
aas
inc
call
adc
addb
add
add
add
xchg
push
add
push
jmp
push
jg
rcrl
test
cmc
pushl
push
or
out
inc
pushl
adc
add
pop
mov
addb
shl
mov
add
call
or
arpl
push
sbb
movsl
mov
inc
mov
cld
jae
sub
loop
cld
hlt
inc
cvtps2pi
ljmp
mov
mov
pop
outsb
inc
mov
pop
cli
call
sub
std
adc
mov
adc
mov
iret
cmpl
cmp
add
adc
or
add
lock
ds
decl
add
lea
mov
cmp
mov
stc
sbb
call
xor
roll
and
xor
adc
pop
fs
imul
xlat
gs
call
jg
incl
sbb
bnd
add
jmp
sub
jl
ret
dec
or
pop
call
xorb
add
out
cmp
stos
add
icebp
icebp
jle
add
add
xchg
pop
sub
gs
out
or
pop
call
ss
in
pop
push
cmc
subb
cmpl
push
repnz
adc
ficomps
add
add
std
ljmp
lock
fs
shlb
xchg
inc
jle
adc
ds
add
jmp
fcmovnb
add
adc
ljmp
jb
and
cmp
adc
push
imul
call
dec
stc
add
adc
paddsb
add
add
daa
adc
jmp
imul
roll
cli
lods
and
adc
xchg
xchg
movsbl
push
add
lret
enter
mov
pop
adc
push
push
lock
or
jg
xchg
push
comiss
push
clc
fdivrl
adc
add
push
cli
ljmp
push
inc
add
add
mov
add
jmp
xchg
jmp
adc
sti
sbb
adcl
pop
test
or
add
cltd
push
adc
add
xchg
rolb
mov
sti
adc
dec
negl
sbb
or
lcall
xor
testl
add
inc
stc
mov
push
push
xchg
push
loop
adc
rol
and
pop
xchg
push
or
insl
inc
repnz
jmp
call
dec
inc
adc
push
push
outsb
sar
mov
or
fsubs
dec
or
dec
iret
add
push
fstpl
add
orl
push
xchg
push
call
inc
mov
adc
add
insb
movb
adc
push
mov
jge
mov
inc
dec
inc
push
call
dec
rolb
jecxz
insl
add
add
loope
js
push
xor
or
in
adc
stos
add
push
loope
pop
add
sbb
pop
or
push
call
adc
or
add
or
xor
leave
or
xchg
int3
call
in
cmc
or
push
cli
jmp
or
subl
add
or
or
xlat
or
adc
or
push
jg
cli
jmp
inc
push
jp
or
or
pop
cli
out
xor
jmp
jno
jg
add
sbb
test
or
push
or
fcoml
jmp
loope
clc
add
sub
subl
stc
mov
loope
outsw
dec
ljmp
test
out
add
testb
dec
add
mov
pxor
lods
shll
add
test
mov
mov
sub
inc
add
mov
inc
add
cmp
add
scas
popf
sti
jmp
icebp
lods
shl
jge
subl
cmc
js
pop
cld
call
in
add
push
jg
pop
or
push
int3
sar
inc
repz
je
adc
or
xchg
push
jg
pop
imul
jg
push
imul
jg
pop
imul
adc
ror
sub
loope
lcall
push
test
in
test
push
decl
pop
sub
cli
sub
and
inc
adc
addr16
add
arpl
cli
rcr
or
push
outsb
lds
sbb
jbe
mov
add
push
mov
push
ljmp
add
loop
call
inc
imul
stos
adc
fs
fmuls
pop
lds
xchg
or
cmc
mov
inc
pop
adc
fs
ret
bound
add
aaa
jl
inc
stos
add
or
mov
out
adc
insl
dec
out
fucom
add
jl
sub
sbb
jle
add
jb
add
mov
test
push
push
cs
dec
mov
mov
sahf
in
sbb
int3
pop
bound
adc
sbb
and
lcall
jmp
fwait
sarl
dec
or
lret
add
jg
js
scas
sbb
add
stos
or
jmp
add
shll
add
add
jbe
mov
push
inc
call
test
cmp
sti
sbb
test
out
xor
mov
add
bound
shl
jnp
or
mov
add
std
adc
fcmovnu
add
cmp
std
test
push
test
or
xchg
add
iret
lods
addl
xchg
je
test
and
jmp
inc
add
fisubrl
xchg
inc
sub
pop
rorl
ja
cltd
sbb
add
inc
mov
cmc
push
je
rcl
and
rcl
and
jecxz
pop
ljmp
xchg
inc
out
mov
pop
push
mov
inc
out
xchg
add
rorb
out
or
lahf
mov
jg
push
add
cli
dec
lahf
add
clc
xchg
sbb
mov
add
cmc
loop
and
loop
and
add
dec
popa
jp
pop
test
rclb
mov
or
rorl
xchg
or
fcomip
call
int
or
add
add
inc
sub
add
and
or
movb
in
in
outsb
ret
test
xor
and
jns
pop
and
das
mov
aas
push
xor
fstps
xchg
std
loop
shl
ds
repz
xchg
loope
es
outsb
pop
or
and
and
add
into
and
ret
xchg
cmp
test
shlb
in
jns
mulb
adc
test
mov
icebp
and
xor
jle
and
lea
push
jb
dec
iret
fs
add
or
inc
imulb
test
dec
cli
push
and
add
cmp
add
add
push
or
orl
enter
mov
pop
fdivl
or
or
ret
out
pushl
mov
add
inc
or
jmp
xor
and
add
jmp
add
and
add
jmp
loop
or
jmp
jle
pop
add
dec
enter
das
test
in
cwtl
or
push
imul
out
and
xor
and
pop
xchg
dec
add
pop
jns
jge
mov
xor
repnz
rcl
pop
out
xchg
sbb
out
xchg
aas
mov
cmpl
mov
push
cli
fwait
and
and
xor
add
andl
xchg
or
and
and
xor
or
or
mov
cmpsb
add
cmp
add
cmpsb
add
cmpsb
add
xor
add
xor
add
add
xor
add
add
das
es
cs
xor
es
xor
es
xor
es
xor
es
xor
es
xor
aam
adc
or
stos
adc
stos
adc
aam
adc
stos
adc
aam
adc
stos
adc
leave
stos
add
adc
shrl
adc
stos
adc
aad
adc
sub
sub
sub
cltd
aad
or
scas
fldt
or
fmulp
sub
stos
aad
or
mov
mov
sub
not
cli
add
xlat
jp
inc
xlat
push
imul
add
push
xchg
xlat
jp
xchg
xlat
jp
xchg
xlat
push
xchg
xlat
push
dec
mov
mov
add
rcll
xor
push
jae
gs
in
ljmp
pushl
jg
push
and
out
je
jnp
rcl
test
in
mov
jns
add
or
addb
pop
les
jmp
pop
xadd
add
pop
mov
movups
bound
popa
dec
add
es
das
push
sbb
or
push
out
mov
cli
push
and
mov
jecxz
sbb
mov
shlb
adc
push
call
das
ret
fcmovbe
and
fsubrl
add
mov
add
push
inc
add
add
aam
adc
push
or
xchg
add
ja
inc
sahf
test
xor
bound
push
inc
js
sti
xchg
cld
call
pusha
and
jmp
push
out
or
and
jmp
jne
pop
popa
mov
flds
pop
rolb
sti
inc
mov
inc
je
pusha
in
inc
or
add
pop
jb
inc
insb
inc
inc
rclb
push
mov
repz
inc
push
in
mov
arpl
inc
pushl
jecxz
gs
mov
jge
xchg
ret
dec
dec
cmp
or
jmp
add
mov
imul
add
sbb
cmp
dec
mov
rorb
in
add
ret
in
mov
rolb
xor
or
rolb
call
out
xor
aas
push
push
jb
jne
in
dec
je
arpl
pop
ss
int
roll
into
and
test
xlat
sub
fisttpll
dec
jle
cmp
test
sbb
dec
lcall
movb
lods
insl
inc
push
mov
addl
jl
test
ss
cmc
jne
xchg
lcall
loop
sub
jo
scas
cmc
jne
mov
enter
pop
aad
or
mov
popa
push
lea
mov
jmp
dec
cli
pushl
mov
fstpl
inc
test
inc
cld
sub
call
pop
mov
add
pop
out
popa
incl
add
pop
jnp
loope
sar
outsb
test
xchg
cmc
das
mov
pop
ljmp
cmc
decl
inc
dec
inc
dec
dec
cli
addr16
out
test
cmp
inc
dec
push
lea
out
pop
xchg
dec
xor
popa
shr
jge
or
gs
add
push
push
cli
sub
adc
jne
mov
inc
cli
add
inc
add
dec
cmp
mov
pop
lods
inc
leave
dec
lea
mov
hlt
add
mov
das
arpl
sub
into
mov
pop
xchg
hlt
loop
sar
imul
dec
adc
fdivrl
or
ret
inc
sar
fisubrs
dec
ret
lahf
cmp
or
cmp
pop
push
sub
cli
inc
sti
popl
add
call
inc
push
add
cmp
jmp
test
jg
and
sub
pop
cli
pop
push
pusha
cli
or
cmp
pop
pop
and
movsl
aad
pop
aaa
test
lcall
cli
jecxz
mov
jecxz
cmp
inc
test
rol
mov
inc
dec
mov
cmp
push
mov
ljmp
add
pop
rcll
pop
inc
jge
xor
lahf
mov
out
mov
xchg
push
adcb
dec
mov
rorl
mov
add
out
lock
mov
jecxz
xchg
jne
fldt
mov
cmp
fisttpl
lcall
lahf
fwait
adc
xor
push
ja
fbstp
ficoms
jbe
flds
add
jecxz
xlat
jmp
inc
and
ss
add
inc
and
lock
jno,pt
fildl
imul
insl
lock
filds
sahf
pop
and
xor
xchg
push
mov
clc
inc
xor
sub
inc
pop
cmp
push
hlt
in
xor
aam
outsl
loop
aas
inc
add
cmc
sti
mov
pop
fsub
inc
dec
mov
aas
pushf
sahf
lcall
xchg
jp
mov
insl
xchg
test
add
add
dec
nop
xchg
add
mov
in
mov
jmp
les
call
fwait
mov
jns
call
out
roll
imul
sbb
push
pop
test
jle
add
sub
or
test
aas
lahf
int3
ret
pop
xchg
push
rorl
inc
push
cmc
popl
pop
les
stos
out
cmpsb
add
mov
push
cltd
pop
push
lea
pop
aas
mov
orb
add
pop
add
into
aas
shl
add
call
adc
sbb
dec
mov
mov
or
out
sub
movsl
fldcw
adcb
ja
mov
arpl
fwait
jl
loop
outsl
push
pop
pop
addr16
ss
adc
xor
jnp
push
and
cwtl
data16
movsb
or
dec
push
pop
fbstp
dec
addl
mov
loop
or
dec
mov
inc
imul
dec
add
dec
jl
adc
dec
sub
lds
fdiv
sub
push
or
inc
xchg
sub
jle
mov
iret
add
mov
bound
and
repnz
test
xor
sub
data16
push
xchg
gs
inc
add
sub
cli
mov
push
dec
into
or
push
ret
dec
je
push
mov
jnp
push
push
and
cmc
es
dec
out
mov
push
das
xchg
arpl
rcrb
outsb
mov
int
pop
sbb
dec
movl
nop
push
rolb
adc
mov
lcall
je
scas
inc
rcll
add
ret
lcall
add
aas
adc
dec
mov
ret
incl
jl
movsl
ret
add
stc
ljmp
aas
dec
adc
add
hlt
aas
adc
jae
mov
mul
lods
jno
cmp
inc
push
mov
dec
adc
dec
dec
sbb
mov
add
rcll
push
shr
mov
mov
add
add
rcrb
out
xchg
test
dec
popf
test
lret
cmp
inc
mov
adc
add
inc
push
out
xchg
lds
mov
sbb
cmpsb
aaa
mov
outsb
call
sub
lock
inc
in
xchg
icebp
lcall
add
add
out
add
and
cmp
add
add
jbe
gs
cmp
movsb
outsb
lret
lret
js
negl
insl
mov
es
pop
adc
jae
sbb
call
adc
xor
gs
mov
mov
adc
lea
leave
xchg
jno
jmp
push
cmp
jmp
add
adc
xchg
test
cmp
mov
sbb
push
nop
sub
ljmp
mov
cmc
push
insl
adcl
call
ja
aas
mov
mov
mov
add
orl
add
fcos
mov
push
cli
mov
add
je
add
das
mov
mov
nop
mov
jns
clc
xor
inc
adc
inc
cli
inc
cmp
cli
and
out
aas
adc
or
pop
orb
inc
cli
movsb
lahf
inc
adc
aaa
mov
jl
aam
add
daa
jp
imul
inc
mov
fadds
imul
add
add
sub
jns
inc
jns
add
jp
test
inc
dec
xchg
movsl
data16
int3
call
sahf
jae,pt
sbb
mov
pop
pop
push
and
adcl
add
cltd
add
fistpl
subb
jmp
adc
sbb
push
insb
inc
sub
hlt
les
cmp
push
cmp
aas
inc
pop
xor
add
out
or
inc
sti
mov
addl
call
sub
cmpsb
sbb
arpl
lret
pop
mov
aas
cwtl
inc
loopne
mov
adcb
ficompl
test
and
inc
add
dec
inc
aaa
fstpt
push
inc
jmp
rolb
xorl
add
cmp
cwtl
jbe
cli
add
xchg
addl
bound
addr16
sbb
push
test
or
pushl
negb
push
mov
cli
push
fnstsw
shll
stc
push
mov
cli
out
ret
je
data16
adc
add
add
jmp
push
ret
cmc
push
add
in
ret
ret
dec
in
test
mov
or
ljmp
xchg
mov
mov
out
sti
mov
aas
add
cmp
cmc
adcl
jae
loop
notl
inc
mov
cld
aaa
ret
dec
call
xchg
push
mov
add
add
pop
sub
inc
or
call
clc
inc
je
mov
cmp
jbe
adc
imul
push
fwait
inc
jae
stos
mov
sti
les
je
mov
cmp
call
adc
movsb
aaa
aas
adc
cmp
jae
pop
cmp
js
sub
fsubr
pop
add
add
scas
das
jle
cmp
push
lcall
bound
lods
add
sar
sbb
xchg
push
add
add
pusha
jle
mov
lret
pop
ficoml
sub
lock
adc
adc
cld
or
xor
shll
inc
shll
aad
scas
in
inc
movsl
cmp
lea
or
add
scas
pop
inc
inc
sbb
adc
mov
mov
out
cld
and
jmp
xor
xchg
mov
or
into
arpl
into
call
hlt
outsb
test
arpl
xor
dec
push
test
or
subl
add
cmpl
jp
mov
add
sar
test
decb
ficoml
mov
cli
jbe
ss
add
ljmp
scas
cmp
cld
push
inc
ret
stos
sahf
mov
xor
shlb
rorl
or
pushf
xchg
mov
add
sbb
js
test
and
or
add
outsl
jns
call
das
push
test
xor
je
sar
add
adc
add
push
push
and
xlat
lea
cli
cmc
ljmp
ljmp
push
pop
xor
sub
sub
xor
cmp
jmp
aas
andl
push
imul
je
divl
nop
mov
add
adc
cmp
test
lea
push
pushf
lods
cs
and
push
ljmp
xor
aam
mov
call
out
aas
adc
inc
xchg
fucomp
dec
xchg
mov
lret
dec
mov
xor
push
mov
shll
fistpl
pusha
cmp
mov
pop
pop
jecxz,pn
inc
popa
add
cmp
outsl
sbb
jae
fwait
dec
lock
mov
std
std
xor
mov
aaa
sbb
inc
adc
call
adc
iret
fiadds
mov
out
dec
stc
add
xlat
xlat
pop
mov
or
movsl
sbb
or
rep
movsl
das
sub
push
xor
movsl
das
sub
cmpsb
cltd
in
and
add
pop
rcrb
lock
cmpsl
pop
psrlq
mov
jl
or
fdivrs
fsubr
sti
stc
cmp
shll
sti
scas
mov
add
sbb
sub
rorb
dec
jb
pop
lock
mov
xchg
ljmp
pop
popl
cwtl
add
xchg
mov
add
sti
mov
ljmp
cli
xor
sub
loope
sar
test
pop
jbe
out
popf
int3
sti
shrb
mov
cmp
enter
or
adc
inc
out
inc
push
sub
push
xchg
cli
call
jp
inc
mov
push
xchg
jge
pop
incl
add
add
mov
push
loop
imul
push
jns
sub
push
xchg
ljmp
lods
push
bound
xchg
inc
cli
sti
xor
out
cli
add
inc
pop
mov
cmp
inc
fstpt
mov
cli
jae
clc
jmp
imul
adc
xor
push
mov
inc
out
add
cmp
inc
mov
sbb
movups
daa
pop
jle
dec
xchg
xchg
xor
adc
sbb
add
pop
ljmp
or
in
and
hlt
std
cs
mov
mov
mov
add
nop
adc
ds
addb
mov
imul
jg
add
popf
cmp
cmp
shrb
dec
jle
stos
insb
ret
cli
adc
add
fmuls
adc
inc
push
pop
js
fcmove
aas
loopne
inc
js
test
xor
mov
add
jo
sub
mov
aam
into
or
mov
rcrl
cli
pop
sub
rol
loopne
add
roll
sbb
pop
call
mov
scas
shrb
ss
incl
test
cld
imul
add
cmp
dec
sub
xchg
sub
cmpsb
mov
test
adc
add
lret
jmp
add
jmp
fwait
mov
adc
sbb
jmp
add
rcr
insb
mov
add
jecxz
es
call
mov
cmpsb
jae
inc
or
insb
cli
jmp
lods
sub
jmp
loopne
outsb
jae
cmp
test
imul
mov
call
rep
and
cmp
adc
arpl
mov
jg
or
ljmp
add
pop
repnz
test
add
mov
decb
jle
add
insl
cmc
ja
jbe
push
pop
pop
inc
mov
push
orl
repz
adc
jns
and
mov
add
xlat
push
mov
fistpl
mov
int
or
sub
out
add
cli
xlat
stos
sub
add
or
mov
push
popf
call
inc
jno
add
jge
or
incl
jns
adc
adc
push
or
xor
stos
and
mov
out
jns
xchg
movups
mov
cs
push
leave
push
mov
jb
sahf
mov
jae
add
aas
mov
stos
xor
cmp
add
out
add
sbb
cmpsb
sbb
arpl
dec
or
xor
adc
inc
inc
sub
cmpsb
enter
iret
insl
mov
jnp
mov
or
sbb
lret
arpl
mov
stos
inc
lods
test
test
ljmp
cmp
sub
jp
movsb
ja
add
add
mov
pushl
pop
dec
cmp
pop
imul
cmpsb
fisttps
cmp
jmp
cltd
rcrl
sub
add
dec
pop
xor
ret
adc
mov
add
test
ja
jle
add
call
sti
mov
add
ret
mov
jmp
shrb
jle
pop
int3
pop
stos
or
push
bound
cmpsl
jmp
aas
rcll
jecxz
xor
sar
addr16
push
lds
call
mov
repnz
test
sub
add
out
add
stc
add
push
das
int3
pop
pop
in
adc
jns
add
add
int3
dec
mov
add
inc
cld
push
ret
testl
call
jecxz
std
pop
cmpsb
ret
push
fs
lret
int3
push
testl
stc
mov
dec
jns
jp
shl
sbb
xor
and
inc
dec
xchg
or
lods
repz
mov
sbb
lods
push
jne
xchg
xchg
dec
or
add
mov
out
or
imul
cmp
inc
subb
incb
repnz
rorl
sbb
adc
adc
idivl
push
aad
sub
add
sbb
sti
imul
insl
scas
rcrb
and
jge
and
inc
or
sbb
xor
add
pop
jnp,pn
mov
fwait
lcall
into
mov
cmp
sub
ds
outsb
call
lret
stos
das
mov
pop
lret
js
frstor
jge
sub
pop
lret
mov
push
push
add
xor
mov
cltd
fadds
rcll
sar
or
cmp
add
leave
lods
adc
adc
iret
out
or
int3
out
and
or
icebp
mov
push
lea
push
adc
adc
cmpl
std
cli
mov
shlb
xchg
cli
ljmp
mov
and
adc
incl
dec
cli
cs
arpl
add
cli
adcl
xchg
into
out
lock
jmp
shrl
shrb
loop
dec
icebp
cmc
push
push
xchg
cmc
std
dec
jg
ljmp
xor
jnp
sub
jl
stc
ljmp
dec
push
push
and
cmp
jo
aas
cli
add
imul
nop
mov
outsl
addb
xchg
add
add
incb
mov
pushf
cmovo
cmp
mov
ljmp
movsl
rclb
lahf
jno
repz
mov
mov
mov
inc
push
call
incb
xchg
cmp
into
adc
jecxz
push
xchg
sbb
add
out
cmp
adc
or
dec
xchg
lods
pop
pop
mov
inc
or
sub
jae
lahf
les
sbb
mov
mov
pop
jecxz
xor
ljmp
aaa
dec
in
add
pop
sub
shl
out
and
xchg
call
and
and
xor
aam
cmp
add
rcrb
sub
jp
cld
outsl
int
jbe
clc
mov
roll
rcr
push
adc
sub
stc
adc
or
sti
sub
negl
testb
sub
out
shrb
int
dec
or
mov
and
fcom
arpl
sub
pop
fistl
sbb
loop
adc
add
flds
add
pop
add
sub
xchg
pusha
add
adc
inc
insl
xchg
mov
lea
lahf
adc
fsubl
repz
jmp
rclb
sub
xchg
or
fisttpl
mov
or
test
std
incb
cmc
jno
add
fistl
sbb
in
js
pop
pusha
ljmp
add
add
xchg
clc
incb
jge
insl
jmp
inc
add
mov
jb
in
jae
xchg
fistl
test
addb
push
leave
mov
clc
jns
inc
xchg
adc
pop
addl
sahf
ds
sahf
cmp
popf
ds
xchg
fidivrs
mov
and
push
and
notl
add
test
aas
add
add
add
outsb
pop
xorl
test
add
adc
icebp
mov
jp
ret
xlat
adc
and
xchg
jg
sbb
lods
cmp
cli
pop
into
out
add
jnp
xor
movsl
es
data16
add
sbb
mov
mov
bswap
cli
sbb
adc
add
adc
sbb
push
cmc
mov
sub
jae
adc
gs
xchg
icebp
out
ret
push
add
xor
add
dec
into
add
xor
mov
sbb
or
addr16
repnz
or
into
mov
xchg
jle
mov
leave
add
push
mov
cmovns
sub
sahf
adc
and
test
push
sbb
subb
sbb
jmp
sub
sub
sbb
loop
push
leave
sti
sub
roll
sar
leave
mov
jmp
or
call
push
je
jmp
into
adc
movsb
jmp
lret
xchg
add
or
jg
out
push
aas
call
sub
sub
sub
jae
xchg
or
out
sbb
pop
data16
sbb
sbb
inc
xchg
lods
sbb
pop
stc
adc
adc
mov
lret
mov
adc
lahf
xchg
call
iret
and
add
mov
jg
adc
sub
add
add
mov
xchg
popa
addl
sti
pusha
sar
mov
bound
pop
call
cli
ljmp
test
rolb
jge
pushl
repz
add
add
add
shl
cmc
test
aaa
push
cwtl
inc
loopne
cwtl
in
call
int
lret
dec
clc
incl
add
cmc
adcb
and
cmpsb
fsqrt
push
test
mov
or
cwtl
add
sbb
mov
mov
pushf
lods
add
mov
je
mov
hlt
mov
jbe
inc
jmp
notl
into
out
mov
mov
jbe
push
movsl
add
jbe
jbe
shll
push
inc
push
and
lods
mov
add
add
sahf
sub
lea
xchg
fstl
sbb
and
mov
xchg
les
popf
add
add
iret
sbb
insb
adc
pop
mov
xchg
add
mov
jmp
fwait
ss
call
sbb
mov
sar
hlt
inc
dec
dec
mov
sbb
adcb
js
adc
and
add
into
xchg
pop
es
adc
subb
fnstsw
pop
dec
xchg
xor
jmp
sub
shlb
leave
jns
adc
mov
lcall
test
repz
and
push
xchg
shll
jo
sub
and
xchg
add
adc
adc
xor
add
mov
in
cli
push
hlt
into
mov
add
add
fsts
outsl
push
dec
rcll
adc
repnz
xchg
push
loopne
or
out
sbb
daa
sub
mov
add
cli
imulb
add
out
and
sbb
xor
mov
add
hlt
std
ja
add
in
in
dec
xor
sar
ja
mov
push
jl
push
pop
add
rol
jmp
icebp
out
cmp
push
decb
pop
adc
test
jnp
mov
mov
jmp
cmpsl
movsb
cmp
in
jle
xor
jl
orl
aas
sbb
cmp
ja
ljmp
pop
sub
insb
adc
adc
idivb
and
loope
pop
rorl
jmp
xchg
shlb
fldcw
test
out
andl
sub
jge
ss
or
xchg
hlt
xchg
fildl
xor
push
pop
mov
int3
xchg
aaa
call
xchg
jg
and
je
xchg
add
push
and
loope
notl
add
pop
push
xchg
xlat
inc
lock
xchg
mov
and
shrl
pop
adc
test
mov
adcl
add
push
cld
or
pop
cmpsl
and
mov
repz
imul
adc
dec
and
mov
ret
in
add
mov
scas
cltd
and
add
mov
sahf
adc
clc
and
add
cwtl
push
mov
sub
jmp
mov
xchg
jp
cmp
fwait
pop
rorl
in
pop
notl
jge
and
inc
sub
imul
push
sti
rorb
ret
enter
lds
add
xchg
add
movsb
cli
cld
aas
jmp
leave
lods
popa
pusha
lret
mov
jg
int
jb
shlb
repnz
popa
loop
sahf
jg
fcomp
mov
push
lods
cli
add
adc
jge
or
ds
repz
pop
pop
rcll
sbb
dec
sub
sub
je
mov
loope
or
add
xchg
addl
jmp
add
jne
loopne
cld
pop
imul
hlt
jmp
mov
out
dec
add
add
call
ss
and
fs
vpaddw
test
xor
xor
es
and
push
nop
mov
xchg
shrl
test
xlat
pop
test
iret
aad
stc
add
xchg
xor
inc
int
adc
out
dec
and
lcall
xor
pop
sbb
rcrl
les
add
fcmove
out
push
adc
data16
bnd
movsb
inc
jae
xchg
outsl
mov
pushf
inc
je
popl
data16
ds
aas
outsl
dec
mov
fucom
pusha
xor
add
add
ficoml
rcr
dec
lea
add
add
adc
dec
imul
fcoms
sbb
push
add
dec
test
adc
xchg
mov
call
xor
loop
push
fldl
add
lcall
add
cmp
sub
adc
push
jl
xchg
cltd
jge
or
add
xchg
repz
call
push
sbb
mov
ret
cmc
xchg
xchg
or
sahf
pop
data16
pop
lea
pop
dec
lods
dec
push
and
adc
add
je
in
out
fisttpll
in
cli
into
lea
test
push
jmp
add
scas
cmc
cli
sahf
cwtl
xchg
lsl
jle
testl
add
mov
lcall
cli
cld
fidivs
inc
or
pop
clc
gs
jmp
cli
add
xchg
out
ljmp
incb
clc
es
cmc
call
jecxz
out
in
cmc
push
repz
inc
push
dec
mov
push
in
fmuls
shr
sub
inc
pop
into
adc
add
add
rcr
jg
pop
add
add
ja
idivl
add
shll
mov
pop
and
arpl
add
std
jns
andl
pop
jns
mov
sub
sbb
xchg
sar
xchg
xlat
call
movsl
sar
inc
mov
cli
xchg
adc
sbb
ljmp
test
add
xchg
xor
imul
call
ja
gs
add
add
adc
push
test
das
push
lcall
jle
push
add
lcall
adc
jg
adcb
sbb
outsb
inc
out
ret
in
add
add
xchg
add
ret
stos
add
sub
jmp
inc
ja
insl
inc
das
in
mov
add
or
mov
roll
nop
or
rolb
pop
shll
or
pop
aad
loopne
outsl
adc
cmpsb
mov
add
pushf
sub
les
or
fwait
call
xor
push
sbb
arpl
add
pusha
add
jns
pop
pop
rorl
dec
mov
mov
adc
push
xchg
pushf
xchg
cmpb
or
les
or
push
xchg
jl
cld
clc
or
out
lcall
xchg
add
dec
lret
int3
or
popa
jne
adc
mov
cli
scas
add
mov
pushf
mov
pop
cli
pop
mov
popa
pop
dec
dec
cld
add
test
test
inc
dec
decb
pop
test
testl
mov
repz
imulb
adc
add
mov
std
pop
ljmp
jecxz
divb
sub
add
ret
mov
push
mov
add
dec
pop
jmp
add
jp
add
movsb
add
add
sub
je
mov
je
push
cmp
add
mov
lock
inc
lret
lret
aad
inc
lret
int
inc
lret
lds
lods
xchg
scas
xchg
lahf
rorl
and
adc
add
orl
iret
fcomi
fidivrs
andl
loop
lods
cli
fmull
jge
or
lahf
xor
movsl
sub
xchg
mov
mov
ret
sbb
lods
jmp
jno
cld
xchg
cmc
out
or
xor
adc
sbb
or
pop
sbb
mov
add
pop
jbe
mov
fidivrl
sub
lret
pop
in
cmp
jp
call
mov
sbb
nop
xor
roll
add
call
test
ds
call
sub
or
push
cmpsl
inc
fdivl
push
mov
popa
mov
jle
add
jae
pop
cmc
or
add
rorb
push
jmp
pop
or
adc
call
push
in
pop
mov
push
mov
jmp
or
incb
repz
leave
add
xchg
jmp
das
jecxz
fisubl
psllw
push
addb
adc
cld
and
fistps
jle
and
add
add
call
mov
push
cmc
push
cld
cmpl
mov
out
cmc
jmp
adc
dec
cmc
push
faddl
js
inc
pop
or
jo
cmc
jmp
inc
adc
push
cmc
push
insb
cmpl
mov
jp
call
inc
icebp
jo
add
imul
divb
mov
in
push
adc
movl
cmp
sub
ss
push
ljmp
xchg
pop
xchg
out
sbb
cvtpi2ps
jp
jmp
cmp
mov
call
mov
and
inc
inc
mov
add
pop
sub
add
push
test
push
mov
xchg
jns
fdivr
xlat
repnz
xchg
mov
push
push
sub
mov
cli
inc
sbb
xchg
in
sbb
sbb
nop
push
int3
lret
jnp
in
shrb
dec
sbb
jmp
sbb
sbbb
nop
push
jp
adc
or
testb
arpl
movsb
add
pop
jg
or
push
std
notl
std
adc
dec
jmp
roll
and
mov
add
push
adc
cltd
mov
iret
inc
xchg
mov
cltd
push
js
xchg
push
sbb
and
ss
lahf
in
xchg
jns
fs
jmp
mov
pop
xchg
or
or
mov
add
stc
pop
mov
mov
sti
xchg
and
cli
bound
ja
and
xchg
add
push
dec
sbb
jle
push
adc
cli
ss
or
mov
jb
std
cs
pop
push
jae
push
movsb
or
pop
pop
cmp
testl
dec
push
add
fwait
dec
dec
call
mov
out
pop
pop
in
mov
sar
inc
or
jne
icebp
jae
es
adc
add
call
test
addl
push
push
clc
cld
mov
add
test
lea
dec
inc
adc
jne
icebp
jae
inc
jns
decl
mov
int3
fwait
dec
dec
mov
add
push
mov
pop
loop
les
push
shlb
rcrl
mov
call
mov
rol
cwtl
fsubp
pop
lods
mov
incb
imul
aam
mov
jle
pop
xchg
ss
jae
das
adc
daa
shlb
in
setp
jne
or
and
adc
lcall
or
lcall
call
pop
pop
jns
hlt
jle
dec
arpl
add
test
mov
aas
pop
mov
adc
call
add
add
mov
lock
push
or
add
jnp
call
cmp
or
test
mov
mov
lods
int3
repz
push
add
add
inc
gs
call
inc
in
xchg
push
add
jle
add
in
cmp
cltd
mov
pop
cmc
inc
aaa
es
stc
inc
shl
cli
pop
pop
rol
mov
sbb
call
adc
mov
mov
in
lods
xchg
arpl
incl
add
sbb
mov
xchg
and
shlb
push
adc
cli
push
negb
add
mov
ss
lods
push
ss
bound
lods
xchg
adc
dec
jb
in
push
bound
jp
add
cmp
add
cmp
add
decl
push
mov
add
incl
add
xchg
cmp
sub
repnz
or
cmp
idiv
clc
pop
shrd
ljmp
orb
inc
testb
jp
sbb
in
ret
pusha
addl
fwait
clc
add
add
push
mov
jbe
cld
jbe
mov
adc
add
enter
cltd
or
incl
mov
test
into
leave
jp
add
jb
negl
mov
add
xor
jg
and
incl
stc
aaa
dec
popf
stc
xchg
in
js
or
cmp
add
jae
repz
aas
cmpsl
xchg
std
call
ljmp
cmp
insb
icebp
xor
jle
cmp
ds
xchg
pop
imul
dec
movups
add
add
arpl
cli
add
mov
out
inc
push
mov
mov
jmp
and
xor
lcall
js
adc
mov
xchg
push
or
out
js
add
cmp
or
or
or
mov
pop
into
push
clc
fdivr
xor
xchg
inc
mov
dec
or
add
testb
sti
mov
loopne
sbb
arpl
inc
or
mov
lret
enter
lock
add
sti
and
mov
push
adc
mov
push
test
ljmp
les
add
fidivl
inc
int3
add
shlb
sbb
add
lret
add
adc
aam
mov
or
int
add
sbb
nop
xlat
std
arpl
lds
or
mov
sub
aas
add
add
xchg
stc
mov
add
mov
cld
lcall
and
aas
inc
add
mov
add
mov
mov
js
add
lock
stc
or
gs
add
cmp
imul
test
push
idiv
fscale
test
fdivrl
imulb
or
or
stc
addr16
repnz
mov
add
sar
sbb
inc
call
stos
in
aas
adc
cmp
int
cmp
lds
inc
cmc
aad
mov
add
sbb
jnp
cmc
stc
jl
in
in
int
pop
jnp
lcall
out
mov
packsswb
sub
arpl
stos
jl
lcall
or
add
xlat
sbb
jl
push
dec
loopne
lcall
loope
cltd
xchg
or
push
loopne
data16
or
add
loopne
add
jae
mov
daa
push
ret
out
not
into
mov
repnz
sub
cmpsb
xchg
jl
xchg
test
rorl
adc
or
flds
cld
adc
pop
add
push
xchg
out
clc
mov
mov
add
pop
mov
add
add
or
shrb
xchg
scas
add
lock
jns
or
mov
sti
cli
add
divl
jge
jmp
push
cmp
dec
out
es
cmp
cmp
test
stos
cli
je
sub
call
adc
dec
loope
call
stos
xchg
cmp
mov
notl
in
cmp
push
and
neg
mov
cli
pop
stc
push
add
push
jnp
loope
jbe
cmpsl
imul
push
push
test
or
lds
loope
inc
fcomps
dec
cmp
orl
add
cltd
or
subb
arpl
jle
fsubl
add
daa
push
js
add
rolb
push
sahf
mov
jp
je
imul
add
repnz
cmp
jmp
add
cs
inc
adc
mov
sti
stc
push
mov
fdiv
add
dec
adc
adc
cmp
cmpb
adc
test
dec
add
rcl
cli
gs
mov
mov
and
add
enter
arpl
jle
pop
incl
add
add
int3
jno
sti
inc
sbb
sbb
ja
or
int
cmp
stc
mov
dec
pop
repz
push
sahf
adc
std
bound
jge
add
add
into
xchg
jecxz
sbb
jmp
adc
dec
ret
mov
add
hlt
push
add
adcb
cmp
and
fsubrl
add
and
enter
xchg
cmp
push
lcall
hlt
mov
mov
rol
scas
imul
adc
add
dec
testl
add
cmp
hlt
sub
mov
icebp
ret
dec
imul
mov
add
out
hlt
add
adc
fldl
test
pop
pop
sbb
dec
call
mov
xchg
jg
jge
stc
jmp
adc
cmc
test
push
sub
flds
sti
xchg
cli
stc
outsb
mov
xchg
mov
dec
adc
xchg
stc
ds
mov
xor
add
sti
xchg
stc
test
xchg
stc
push
inc
jae
dec
add
inc
inc
add
pop
dec
push
idiv
or
cmc
in
testb
in
or
add
fisubs
orb
mov
mov
inc
mov
mov
inc
xchg
out
das
add
or
add
fprem1
out
test
paddusb
add
push
inc
pop
ja
adc
jo
inc
add
adc
mov
cli
ss
mov
adc
incl
xchg
cld
or
pushw
ret
push
pop
inc
or
stos
sub
add
xchg
insl
in
sti
into
xchg
incl
mov
jnp
xchg
stc
cmpsb
popa
mov
pushf
arpl
xchg
stc
mov
enter
out
loope
incl
jl
jge
or
xchg
inc
add
in
or
add
dec
fldcw
cmp
loop
adc
out
mov
idiv
sub
out
ljmp
idiv
sbb
jmp
add
add
out
test
call
add
mov
call
add
fmull
add
test
jg
or
out
mov
sti
gs
mov
insb
add
repz
adc
sbbb
inc
pop
pusha
xchg
sub
push
or
jmp
adc
sub
add
mov
cmp
mul
sbb
add
call
ja
adc
and
outsb
and
je
in
mov
stc
mov
fdivrp
or
add
xchg
xchg
pushf
xabort
orb
jmp
scas
clc
gs
cmpb
fs
out
adc
add
sahf
xchg
ljmp
push
push
andb
pop
test
add
repnz
sub
loopne
xor
jg
bound
jnp
test
and
call
jnp
lock
out
adc
mov
jnp
lock
cmpsl
repnz
enter
jb
cmp
sub
sub
jmp
jns
add
cwtl
add
mov
mov
sub
jge
add
js
inc
mov
dec
cli
stc
jbe
cli
stc
js
add
adc
popa
or
in
or
aam
or
les
xchg
outsl
add
adc
add
movsb
push
or
jno
sar
sti
or
add
adc
add
mov
mov
subl
fdivr
scas
xchg
xchg
stos
outsl
sti
xchg
sbb
xchg
add
or
adc
jp
dec
mov
jle
fcompl
xor
call
sbb
add
add
mov
pop
in
adc
imul
daa
lock
sbb
daa
add
add
test
adc
data16
jne
dec
dec
jne
dec
pop
jne
dec
pop
add
add
adcl
mov
add
out
data16
sub
lcall
insb
jmp
stc
pop
mov
mov
notb
add
ret
push
jmp
add
sahf
out
stc
jmp
xor
add
insb
mov
add
xchg
jnp
hlt
sbb
add
adc
out
or
icebp
sti
cli
xor
jmp
cwtl
icebp
sti
mov
adc
push
call
stc
xchg
cmp
mov
ljmp
add
cmc
jge
cld
add
pop
test
incl
jmp
or
jge
in
ljmp
out
sarl
ljmp
dec
out
stc
mov
ja
ljmp
cmp
sbbl
idiv
fistpll
dec
pcmpgtw
add
xchg
std
lahf
ljmp
add
pushf
call
pop
mov
call
add
adc
hlt
movsb
xchg
push
mov
xchg
jbe
call
xchg
sbb
rorl
call
push
adc
pop
xor
stc
push
fs
inc
es
adc
mov
cwtl
fs
es
in
call
push
pop
mov
sti
add
push
in
ret
mov
pop
divl
sahf
repnz
aaa
dec
fmuls
jle
inc
gs
sti
movb
add
add
or
mov
sub
adc
out
arpl
xchg
adcb
data16
out
ret
stc
push
mov
addr16
pop
out
sub
mov
cmp
adc
in
out
add
or
sbb
insb
push
push
jp
inc
xchg
mov
rclb
out
stc
jo
mov
test
adc
data16
jb
jmp
stc
jmp
mov
stc
sahf
mov
sbb
xchg
cmp
addl
push
pop
or
stc
jmp
jns
andb
add
loopne
push
imul
sbb
lock
ds
add
call
lock
cmp
fs
stc
push
sbb
add
xchg
jg
add
jmp
add
mov
call
dec
add
xchg
call
xchg
repnz
add
call
call
inc
xor
push
jmp
test
add
sahf
add
test
xchg
call
ret
call
cs
stc
ljmp
notl
mov
icebp
testl
data16
in
icebp
testl
mov
cmc
call
decb
pop
fdivrl
cmc
repnz
adc
incl
add
pop
cli
clc
movsb
fwait
clc
stc
outsb
mov
int3
mov
stc
jl
clc
stc
mov
fs
sti
scas
xchg
xchg
pusha
sbbb
dec
stc
les
stc
xchg
jl
repnz
loope
mov
call
xchg
sbb
adc
sbb
xlat
repnz
fsincos
es
xchg
add
outsb
add
idiv
pop
repz
push
and
cmc
or
out
xchg
mov
and
add
enter
lea
popl
or
add
add
cmc
lock
add
call
insb
cmc
js
out
adc
bound
xchg
test
xchg
mov
add
xchg
int
cmc
dec
xor
out
cmc
push
jle
idivl
call
add
adc
add
jle
testb
add
cld
cmpsl
leave
outsb
adc
fidivrs
stos
inc
int
cld
or
in
shlb
cltd
inc
bound
fchs
jg
mov
daa
icebp
sti
mov
sarb
add
push
std
xor
add
lock
xchg
mov
pop
pop
mov
jmp
add
lock
inc
pop
add
bound
stc
pop
gs
jmp
cmp
stc
push
adc
add
sub
adc
fidivrl
cmp
cmc
dec
jae
mov
cmc
dec
mov
push
cmc
incl
add
insl
repz
std
outsl
repnz
xor
addl
dec
push
push
daa
out
icebp
jnp
or
cmp
lods
std
iret
icebp
cmp
mov
push
cmp
mov
sahf
mov
gs
and
jbe
jge
adc
std
decl
out
mov
in
out
stc
add
test
sarb
lret
xor
aas
iret
and
mov
test
add
push
ret
das
inc
aaa
icebp
sub
xor
mov
stc
sahf
test
in
ret
sbb
or
xorl
stc
mov
outsb
inc
fiaddl
fcoms
add
fdivrl
and
inc
pusha
mov
cmp
out
jge
add
lock
out
xchg
pop
call
repz
add
adc
out
test
and
cmp
lcall
xchg
int
icebp
fcomps
into
std
jbe
xor
sarl
out
mov
shll
adc
rcrb
test
mov
pop
aam
in
cli
xchg
icebp
insb
icebp
js
fistpl
add
push
in
xchg
out
icebp
les
fdivl
cmp
les
sub
ljmp
cmpsb
jg
adc
ljmp
in
mov
incb
out
cmp
jmp
adc
fsubp
cld
jb
cmp
sbb
fadd
shr
push
leave
jmp
jl
jp
stc
cmpsb
adc
push
add
sti
xchg
mov
and
sub
stc
jbe
jg
insb
sub
mov
mov
push
mov
mov
cmp
shlb
in
jmp
jl
adc
jp
std
pop
icebp
je
pop
stos
movsb
std
pop
icebp
test
jne
hlt
call
jnp
lods
std
rolb
pop
add
cmp
sbb
xlat
shl
jmp
shrl
mov
cmc
pushl
jge
test
imul
sub
jmp
jge
fcoms
imul
test
out
idiv
insb
push
push
stos
dec
and
adc
scas
bound
jmp
mov
adc
stc
sbb
cmp
xchg
std
jl
dec
out
stc
add
push
fmuls
aaa
out
stc
push
outsl
scas
fdivr
ljmp
xchg
lret
out
mov
out
lret
into
stc
adc
ret
fdivr
incl
cwtl
dec
push
inc
sub
mov
stc
sahf
in
adc
push
push
out
push
out
insb
ljmp
push
jno
xchg
add
or
pop
loope
mov
add
inc
out
mov
cmp
sub
cmp
xchg
pop
mulb
add
or
add
cmpsb
add
cmpsb
add
add
loopne
jns
test
and
mov
loopne
ja
enter
loopne
insl
lods
sub
in
test
mov
pop
or
add
add
add
add
add
xor
push
loope
add
pop
push
cmc
jl
je
data16
in
mov
or
mov
in
jae
mov
in
ds
sbb
stc
bound
shrb
xor
outsl
adc
lods
out
pop
sub
cmc
push
pop
jno
out
pop
in
out
dec
loopne
adc
add
jmp
dec
sbb
fdivr
call
mov
sahf
in
cmp
pop
das
fdivrs
movl
sbb
sbb
inc
add
jae
dec
mov
jecxz
and
icebp
sbb
mov
subl
dec
push
pop
mov
mov
int3
fcompl
int3
int3
mov
dec
mov
inc
or
push
add
xor
add
je
sub
popf
roll
xor
out
mov
cmp
or
mov
int3
pop
cltd
int3
int3
insb
cltd
int3
int3
adc
push
lcall
cmp
nop
cmc
mov
mov
jae
and
dec
mov
iret
add
test
mov
jmp
or
or
icebp
sub
add
mov
mov
shlb
xchg
dec
pop
rolb
inc
add
inc
add
adc
cld
adc
add
push
call
out
cmp
je
arpl
cli
lods
dec
push
test
lock
adc
sbb
test
loope
ret
mov
mov
mov
xchg
inc
mov
mov
ss
sbb
add
add
shl
sahf
mov
mov
ret
dec
ljmp
out
adc
xor
in
mulb
mov
int3
sub
xor
icebp
in
mov
orl
aas
xor
icebp
out
loopne
outsb
int3
mov
cld
shll
les
jecxz
scas
add
xlat
icebp
incl
lock
add
fidivl
jmp
shll
pusha
jmp
and
shlb
push
push
mov
mov
or
rclb
call
inc
dec
push
inc
cld
inc
sub
stc
jo
fmuls
jmp
pushf
inc
lock
add
pop
aaa
push
jb
aaa
dec
sub
leave
fnstenv
stc
dec
adc
outsl
or
aad
mov
jmp
loopne
in
ja
les
add
pop
in
push
ficomps
or
jmp
add
test
cmpb
adc
scas
incl
add
jp
fs
jnp
out
inc
add
jmp
adc
lcall
add
jmp
loop
adc
test
imul
add
fisubl
dec
add
addb
ds
fsubp
andl
push
add
popa
inc
cld
js
add
adc
cmp
xor
shrl
and
jae
jae
jo
sub
xchg
test
daa
jbe
icebp
adc
out
dec
ret
rcll
std
call
xor
les
add
addl
cwtl
stos
icebp
in
adc
or
jmp
insb
test
jbe
xchg
lahf
add
cmovg
sbb
add
xor
addr16
push
fiadds
pop
clc
fpatan
dec
push
push
add
adc
inc
outsb
inc
add
mulb
stos
push
sarl
popa
stc
inc
adc
std
ret
sub
add
ficoml
mov
jns
or
mov
pop
push
jmp
and
inc
adc
and
jmp
push
add
or
sbb
and
rorb
testl
add
add
push
add
ja
jge
out
jl
in
fimuls
jb
or
or
cmp
stos
add
jns
and
pop
inc
add
sub
test
or
stc
inc
jle
cmc
cmp
jb
or
orl
jle
in
fnsave
dec
subl
sbb
in
add
loopne
fdivrs
sub
push
roll
jb
xchg
mov
pushl
fwait
xor
mov
mov
push
bound
addl
int3
jge
add
clc
add
mov
push
scas
add
add
xor
jnp
adc
or
je
sub
inc
je
xor
in
jp
push
push
sbb
stc
fcoml
or
movsl
idiv
fcoml
mov
aad
shlb
add
addl
not
mov
incl
je
pop
inc
and
add
fmul
and
test
pop
cmp
gs
and
push
cmp
inc
xlat
iret
jge
loopne
push
std
bound
cmp
sub
es
mov
push
ss
push
sub
push
add
push
sahf
jns
les
mov
or
push
pextrw
inc
sbb
push
dec
jge
push
aas
mov
add
pop
fstpl
sub
add
ror
push
xchg
mov
mov
sbb
cmpsl
jmp
push
add
daa
cmp
lret
jecxz
push
cmc
pop
inc
sbb
outsb
adc
incb
out
pop
sbb
inc
icebp
insl
or
mov
mov
outsb
stc
lea
fistpll
dec
xor
add
add
mov
mov
sub
inc
les
iret
push
les
mov
adc
pop
lds
add
cmp
push
aam
ret
mov
or
fnsave
call
jb
inc
test
and
add
or
add
and
add
arpl
int3
fdivrp
sbb
cmp
adc
jb
inc
test
jns
cli
push
shll
stos
out
and
je
cs
std
jns
add
sbb
or
add
jmp
or
das
or
cmp
inc
call
add
dec
je
jg
jnp
sub
repnz
test
cld
outsb
cmp
add
pop
addl
das
stc
xor
push
aas
push
jno
dec
and
sub
mov
lock
loopne
mov
rorb
mov
mov
insb
add
and
mov
jle
add
pushl
je
add
orb
sti
int
std
dec
call
mov
add
or
xchg
sahf
les
adc
ret
insl
out
sarl
out
call
scas
lds
add
cmp
lds
jns
inc
jmp
fnstcw
mov
mov
sar
jmp
mov
in
pop
or
or
xchg
flds
adc
cmc
ficompl
movsb
sub
pop
inc
je
add
jo
cli
push
test
les
lea
add
add
inc
mov
stos
aas
xchg
sub
rorb
adc
je
testb
dec
lock
xchg
push
xchg
cmp
mov
out
in
aad
ja
into
les
xchg
jmp
adc
add
outsb
push
inc
mov
rcr
mov
pop
add
add
cmp
inc
sbb
in
cwtl
xor
add
add
adc
pop
mov
iret
add
out
shrl
sbbl
push
stc
lea
inc
lret
aam
dec
fwait
out
jl
and
or
stc
xlat
and
push
mov
xchg
jecxz
dec
mov
enter
inc
cmp
add
int
mov
mov
or
aas
test
inc
es
cmp
add
bound
cs
xchg
push
icebp
out
mov
push
shl
lock
xchg
lret
add
inc
pop
das
fisttpll
add
mov
xchg
test
push
hlt
add
pop
sti
mov
int3
in
mov
int3
jne
in
push
adc
and
incl
add
add
pushl
add
add
scas
testl
clc
add
jne
pop
test
lds
test
add
add
lods
sti
jno
jp
dec
xor
xorl
loopne
out
in
push
mov
aam
xor
cmp
mov
pusha
inc
dec
out
push
add
notl
outsb
add
mov
jo
ficoms
xchg
add
push
dec
dec
mov
imul
xchg
cld
test
lds
jg
fdivrp
call
jecxz
jno
mov
sub
add
jns
fisttpl
hlt
fdivr
ljmp
push
inc
insb
aaa
repz
jo
dec
movsb
adc
fmuls
movsb
pop
fdivr
or
pop
xchg
add
add
add
jp
movsb
and
out
insb
xchg
adc
pop
into
ljmp
aaa
daa
add
incl
add
add
test
inc
add
mov
add
add
push
fsts
or
mov
xchg
jle
mov
or
cmp
jae
push
sbbl
mov
push
int
rcll
jno
out
mov
or
jp
mov
xchg
addb
adc
push
lret
outsl
cmp
test
or
insb
jb
pop
test
lds
cmp
mov
stos
test
shlb
mov
nop
add
out
mov
sahf
push
pop
xchg
inc
cli
mov
add
jbe
dec
mov
xor
add
mov
adc
add
jge
adc
jmp
adc
insb
jb
sub
cs
cli
mov
stos
ja
dec
jnp
pop
mov
add
rcrl
push
mov
cmp
insb
mov
in
addl
add
mov
cmc
in
data16
inc
mov
add
jge
cwtl
add
mov
cli
sahf
mov
stc
jmp
jb
data16
push
jg
clc
decl
call
add
and
sarl
push
call
test
stc
pop
fs
out
cvttps2pi
mov
gs
js
dec
inc
cmp
cltd
in
incb
mov
aas
add
pusha
pop
xor
imul
add
add
pop
inc
insb
cwtl
and
test
push
mov
stc
dec
pop
or
test
sar
mov
sub
lcall
test
add
mov
inc
out
cli
adc
dec
xor
xor
add
inc
gs
inc
pop
lcall
idivb
push
cmpsl
sbb
add
and
jecxz
add
ss
data16
sub
fisubrl
sub
mov
add
mov
xor
xchg
dec
out
lcall
pop
inc
mov
lret
pop
fldcw
lret
popf
jg
pop
lret
movd
pop
lret
stc
push
test
adc
ja
pop
aas
add
dec
jbe
cmp
add
lods
orl
dec
clc
adc
or
xor
es
in
in
out
inc
xchg
inc
pop
test
aad
xchg
loopne
dec
cmp
daa
inc
or
inc
test
aad
push
and
mov
xor
lcall
jmp
add
jo
dec
xchg
xchg
shlb
sub
add
add
fwait
xor
adc
add
adc
xor
mov
adc
add
jne
pusha
cmp
mov
cmp
push
dec
sbb
sub
outsb
add
ss
mov
and
jns
imul
xchg
add
add
jp
insb
push
sbb
add
ret
add
pop
sub
add
lea
mov
pop
mov
jns
mov
cmp
push
add
js
cwtl
testb
sub
jnp
sbb
fisttps
call
fnstenv
or
fs
push
ficompl
lcall
test
stc
lcall
fscale
mov
fscale
incl
add
rol
insl
or
sub
sbb
push
cmp
lahf
pop
pop
dec
rcr
pop
ljmp
fimull
cli
sbb
call
fimull
mov
adc
jge
push
xchg
add
sbb
out
dec
add
xor
jp
addr16
jp
xchg
ds
mov
pop
xor
add
or
cltd
pop
lock
data16
cmp
repnz
daa
push
std
or
sarb
jg
cmp
int
pusha
or
mov
add
add
add
or
pop
dec
movsl
mov
out
push
movl
or
das
xchg
mov
mov
jl
icebp
add
movswl
jmp
mov
push
mov
adc
test
f2xm1
xchg
jecxz
test
xchg
dec
adc
adc
pop
das
inc
push
and
inc
jns
or
add
lret
push
test
sbb
jnp
dec
pop
vpunpckldq
adc
pop
les
bound
jl
mov
add
push
jne
repnz
call
fdivrp
fwait
xchg
pop
add
add
xchg
call
push
push
add
jecxz
cmp
push
add
sub
mov
testl
mov
pusha
bound
add
xorb
inc
aas
pop
add
jp
pop
test
cmc
cmpsl
mov
vmwrite
insb
incl
add
sub
jno
cmpsl
dec
incl
mov
je
adc
les
push
push
push
inc
aas
cmp
pusha
dec
pop
pop
jg
daa
test
xlat
bound
cmp
jmp
dec
jg
pop
xchg
mov
les
xchg
push
jno
adc
jbe
add
sub
pop
mov
or
push
scas
add
inc
push
jno
ret
dec
cmp
xor
sub
inc
mov
dec
pop
mov
test
and
bound
daa
or
lock
xchg
ret
mov
cmp
jmp
fnstenv
and
sub
cmp
mov
add
add
jbe
sti
std
mov
mov
pop
outsb
inc
sbb
js
out
xchg
aaa
sti
jl
stc
outsl
cmp
mov
out
xchg
stc
outsl
cmp
js
add
sbb
cmp
cmp
jl
add
jl
cld
out
push
inc
fildl
xchg
add
jl
push
add
xor
sub
ret
adc
add
lea
adc
stc
inc
adc
pushf
sar
pushl
stc
and
int3
sub
pop
aad
pushf
lret
xor
test
xor
bound
sbb
ljmp
cmpsb
in
sbb
jge
and
imul
scas
push
add
idivl
sub
mov
add
cmp
xor
mov
and
inc
or
inc
and
mov
mov
jl
lock
aas
xor
add
add
push
and
lock
idiv
into
jmp
pop
sub
jg
mov
int3
in
jg
int3
xchg
cmp
mov
dec
xor
or
add
xchg
jge
add
test
add
add
cmp
jae
insl
or
inc
cmp
adc
sub
sub
sub
les
sub
call
out
and
jb
add
or
push
imul
jge
mov
cmc
fs
sub
cltd
adc
sub
or
add
add
cli
cmpsb
cmpsb
js
xchg
ret
mov
sbb
xchg
inc
sbb
stos
std
dec
emms
mov
add
pop
leave
pop
mov
testl
dec
int3
stos
mov
fnsave
iret
inc
adc
cmpsl
aaa
push
add
add
mov
xor
les
in
add
add
mov
add
std
push
xchg
js
sbb
mov
fnstenv
js
in
xor
js
add
add
jecxz
dec
mov
int3
xlat
subb
shll
sub
add
add
pop
outsb
loope
shl
ds
add
rorb
pop
xor
call
aam
xor
in
xchg
and
inc
sub
dec
das
sub
or
pop
add
add
xor
dec
call
bound
jl
or
inc
stc
adc
add
pop
rcrl
pop
mov
movsb
into
repz
rolb
rcpps
cltd
bswap
dec
fwait
lret
out
orl
les
pop
xor
iret
or
add
dec
sub
push
push
out
daa
addl
lods
mov
jle
ljmp
mov
push
ret
ret
aas
sub
out
xor
push
inc
out
adc
add
add
jae
add
mov
ljmp
lea
in
mov
out
jl
out
hlt
adc
xor
add
mov
add
xor
insl
or
add
dec
add
adc
std
jl
scas
dec
add
icebp
ljmp
jl
adc
xchg
jnp
add
inc
add
push
daa
cmp
cltd
jnp
fildll
dec
cmp
in
xchg
cmp
adc
out
mov
repnz
incb
orl
cmc
adc
cld
rclb
std
call
adc
sldt
adc
and
push
add
lea
ljmp
pushf
roll
jg
sti
xchg
push
iret
add
jg
repz
fidivrl
or
mov
jl
add
testl
out
rcrb
std
add
mov
jl
sbb
cmp
add
mov
sub
pop
rolb
adc
out
adc
outsb
inc
xor
stos
repz
out
xchg
rcrl
enter
push
or
clc
xchg
nop
out
adc
xor
outsb
mov
mov
sbb
sbb
adc
icebp
fcoms
lret
or
cmp
icebp
fimuls
test
inc
sbb
inc
add
lret
aas
and
add
pop
add
or
add
shl
orb
mov
add
repz
ret
adc
or
loope
dec
clc
sub
imul
sbb
jmp
arpl
lds
lock
pop
lods
stc
incl
icebp
pop
cmp
adcl
push
fadd
adc
jp
dec
dec
sbb
in
or
cmp
sti
mov
jnp
mov
ret
adc
cmp
adc
xor
add
mov
je
cmp
xchg
movsb
inc
add
scas
mov
jmp
pop
test
inc
add
or
in
mov
add
jecxz
cmp
mov
mov
lds
and
sbb
stc
fcomi
push
stos
std
test
shll
mov
sti
std
push
stos
std
in
sub
and
lret
cmpb
hlt
andl
std
clc
aam
ja
inc
mov
jge
mov
push
or
dec
fimull
jne
xchg
int3
inc
add
add
adc
aam
ss
scas
or
fisubl
ret
sub
jae
mov
dec
add
pop
xor
movups
add
push
test
insl
mov
add
lds
xor
sbb
adc
add
or
cmp
js
roll
jp
mov
pushf
mov
push
cmp
shr
lret
clc
add
add
loope
shlb
or
adc
add
pop
in
sub
or
aas
push
in
jno
test
push
add
push
clc
jo
sbb
out
push
add
jmp
push
add
xor
daa
pop
jge
add
push
add
insl
jae
add
and
xchg
loopne
test
pop
or
push
adc
xchg
jo
inc
subl
mov
mov
mov
stc
adc
adc
jmp
jecxz
mov
mov
xchg
mov
popf
mov
jns
inc
mov
aam
sahf
pushw
mov
jle
sbb
mov
add
add
lret
push
or
pop
test
dec
inc
mov
rolb
sub
js
rclb
add
add
je
xchg
mov
aam
inc
in
xor
adc
push
sbb
dec
jb
call
mov
mov
jp
inc
add
frstor
movsl
dec
fiaddl
mov
push
test
arpl
jae
das
push
hlt
lcall
push
loopne
mov
adc
inc
sbb
gs
clc
loop
xchg
popa
cmpl
adc
push
jecxz
add
stos
std
rclb
std
call
sub
adc
out
add
add
mov
add
add
test
out
xchg
xor
add
lock
push
add
jns
adc
dec
icebp
mov
lea
mov
insb
lret
sbb
clc
sahf
jecxz
add
push
xchg
cltd
cld
in
rcl
pop
push
jns
dec
test
sub
incb
jb,pn
rclb
out
adc
sbb
mov
mov
mov
sbb
push
cmp
add
mov
xchg
cmp
roll
mov
cmp
dec
clc
out
scas
or
adc
sub
add
test
adc
inc
test
leave
add
jmp
add
adc
adc
test
add
push
mov
ficoms
in
insb
sub
jmp
cld
add
sub
add
xchg
jle
cmp
pushf
inc
aam
push
sub
xor
enter
cmc
push
aas
inc
mov
clc
cmp
add
cmp
jb
imul
jmp
dec
clc
jae
sbb
dec
call
mov
xchg
add
add
jle
in
test
scas
mov
push
add
and
sub
mov
jmp
std
pushl
jle
adc
movsl
xchg
adc
inc
cld
adc
orl
movsl
mov
int
fdivrl
xor
adc
cli
and
fisttpl
cmpsb
adc
cmc
add
mov
test
xchg
cmp
fnstcw
xchg
xchg
fidivrs
xor
lcall
sti
cltd
movsl
add
mov
push
jns
inc
sbb
mov
call
rcll
adc
fnstsw
mov
adc
add
jne
scas
sbb
mov
mov
add
add
subl
iret
outsb
leave
xchg
ret
sub
add
add
jnp
ret
jmp
out
mov
mov
out
mov
mov
lock
hlt
mov
add
adc
jecxz
sbb
dec
add
add
imul
fisttps
pop
movl
add
add
add
jmp
or
add
add
or
std
call
ficoms
lcall
add
adc
jge
adc
push
adc
xchg
jmp
shrd
fimuls
clc
mov
jne
cld
fdivrl
jo
test
std
jp
test
sbb
add
scas
jle
push
xchg
xchg
test
and
in
test
inc
push
add
out
sub
or
add
call
ret
call
sub
add
pop
sti
call
sub
call
add
clc
xchg
add
add
call
inc
sbb
add
scas
or
add
pop
sti
call
and
ljmp
movsb
jl
je
pop
test
call
cmpsl
outsl
addr16
test
popf
ds
gs
fcoms
xor
test
aam
cs
std
call
or
adc
ljmp
xchg
mov
add
add
lcall
adc
std
decl
out
jg
push
es
add
lcall
adc
les
mov
das
les
push
es
push
adc
out
lret
dec
imul
lods
sub
ret
inc
mov
shrb
and
test
rolb
sbb
repz
adc
imul
add
add
mul
add
jae
mov
aam
movsl
test
clc
outsl
dec
fcos
push
test
cli
mov
mov
push
pushl
ret
adc
pop
lds
add
fiaddl
imul
add
xlat
or
dec
or
add
add
dec
or
mov
mov
xchg
scas
jns
inc
adc
add
jmp
in
cmc
dec
and
xchg
inc
add
lods
outsb
lret
xchg
es
jmp
adc
or
lea
ret
dec
clc
ljmp
test
out
mov
test
add
jae
bound
and
jo
ljmp
imul
jb
sub
xor
in
sbb
addr16
and
pushl
clc
dec
lock
add
push
adcl
inc
push
enter
insl
inc
insb
mov
jl
dec
jge
lock
std
dec
lea
add
call
ljmp
mov
gs
adc
adc
or
adc
cmp
mov
xchg
xchg
cmp
fldt
or
pop
inc
push
cltd
cwtl
std
call
xchg
sbb
mov
out
mov
cwtl
in
xor
pushf
jnp
or
add
xchg
imul
fidivs
test
aas
jge
mov
xlat
test
jmp
test
mov
jb
mov
leave
fldcw
int3
xchg
ds
fdivs
sub
adc
xlat
xor
jnp
les
loope
push
in
divl
inc
pushf
ljmp
add
pop
add
jg
stc
out
sbb
mov
add
movsb
pop
dec
mov
outsl
dec
sub
mov
lods
loop
dec
in
xchg
xor
clc
cmp
xchg
aas
psrlw
xchg
xor
stos
xor
aas
iret
stos
push
add
add
pushf
lods
jae
inc
adc
sbb
insl
aad
add
mov
pop
and
adc
add
movsb
add
push
cmp
jmp
mov
add
loopne
into
les
push
clc
cld
rorb
xor
cs
mov
adc
jno
jmp
in
sbb
imul
dec
lea
cmpsl
call
pop
nop
scas
psadbw
lods
mov
movsb
ss
and
in
mov
add
add
out
sti
add
add
flds
mov
insl
inc
cld
xor
inc
sti
arpl
add
jg
add
ss
cmp
rcl
inc
es
shrb
hlt
test
jb
jmp
test
xchg
jmp
cld
cmp
test
testb
rcrl
jle
or
mov
dec
clc
add
xor
fldcw
xchg
jns
xlat
clc
xchg
in
subb
adc
js
movsl
inc
in
cwtl
std
decl
and
adc
xor
adc
std
jae
xor
jp
addb
ds
cwtl
sarl
inc
ficomps
jge
arpl
jb
and
adc
and
add
into
paddw
mov
or
cld
cmpb
ret
orl
adc
fs
gs
jl
xor
out
dec
js
and
mov
out
mov
push
das
add
sbb
add
xchg
jo
pop
jle
add
js
and
add
push
fs
popa
jmp
add
jne
dec
loope
outsb
inc
mov
out
adc
out
rcrb
jg
xor
push
mov
jle
jmp
out
aad
jo
jmp
les
jge
test
test
add
out
das
add
adc
add
adc
add
movsb
add
pop
movsb
stc
jmp
lcall
add
add
lock
dec
cmc
test
mov
push
in
ret
jnp
in
ret
and
xor
adc
aas
or
hlt
test
and
xor
cwtl
test
movsl
inc
add
push
clc
jl
adc
dec
clc
add
inc
std
call
outsl
jno
jmp
jae
push
mov
add
mov
pop
mov
ljmp
popf
mov
dec
and
xchg
outsl
sub
mov
aas
cmp
sar
add
mov
mov
push
inc
cld
repz
lret
loopne
loope
inc
mov
adc
lret
loope
mov
push
dec
and
add
adc
mov
mov
add
xor
cmp
mov
rcll
stc
sbbb
ret
and
aam
and
mov
xchg
inc
in
pop
leave
mov
ret
dec
lods
pop
fidivrs
fcomps
enter
test
arpl
pop
xchg
or
cmpb
out
add
add
lcall
cld
adc
sbbl
or
jp
int
jp
mov
out
or
jl
movsl
loop
add
imul
out
int3
mov
sub
xchg
ss
cmp
push
fwait
or
int
rcrl
mov
test
or
jne
add
cmpsl
inc
xchg
pop
sbb
rclb
insb
in
idivl
adc
jne
add
and
out
sub
mov
lret
mov
stos
dec
inc
gs
adc
scas
adc
call
adc
test
ds
shrb
call
aam
add
or
add
xchg
dec
adc
shrl
test
in
add
jg
add
sub
cs
call
xchg
shlb
insl
sar
fs
adc
add
popf
add
mov
add
adc
mov
movsl
dec
cld
bound
or
shll
add
jo
ljmp
ljmp
add
loopne
push
dec
and
jns
mov
aas
mov
adc
add
clc
vunpckhps
add
mov
add
rcrl
sbb
inc
pop
addl
add
xor
jmp
and
cmp
sarl
nop
sti
out
sti
add
leave
add
pop
mov
insl
inc
cld
repz
lret
loopne
fcoml
jmp
or
push
sub
std
int3
xor
xor
dec
repnz
add
and
add
dec
adc
hlt
fisubrl
mov
shll
out
adc
aam
fidivrs
mov
stos
cmp
mov
adc
jns
mov
loop
loop
jns
movsl
call
js
mov
test
fstpt
jge
fwait
or
faddp
std
push
ret
sub
cld
adc
out
add
or
jle
mov
jle
mov
out
or
jl
movsb
loop
dec
add
add
cmp
subb
sbb
xchg
fwait
or
in
rcrl
mov
test
or
jno
add
or
enter
mov
aaa
add
adc
ljmp
add
bound
je
idivl
movsb
dec
inc
in
add
or
test
or
add
test
icebp
jl
cmp
dec
scas
adc
call
xchg
shlb
insl
lret
lea
cld
jmp
adc
or
pop
lcall
push
push
ret
xor
ljmp
cld
mov
sahf
cli
pop
call
int3
stos
dec
or
fwait
inc
movsl
lds
call
adc
jge
ret
add
stc
js
inc
loopne
shr
mov
xlat
and
rcr
cmp
mov
rcrb
decl
mov
stc
cmp
xor
mov
orl
inc
sub
repz
add
xchg
and
sti
fldcw
mov
sbb
fstpt
stc
iret
or
stc
jl
mov
inc
inc
mov
addl
shr
cmp
iret
cld
mov
pop
cmp
xchg
idivl
push
scas
mov
aam
jne
rcrl
xor
sub
xchg
pop
xchg
or
cmpsl
js
adc
aaa
aam
mov
int3
scas
jl
rcrl
hlt
cwtl
in
fwait
jae
daa
and
xchg
cmpb
test
rorb
std
call
xor
jnp
cmpsl
repnz
fwait
xchg
jne
push
cmp
lock
insb
xchg
rcll
std
call
xor
scas
cmpsl
jle
sbb
std
call
loop
and
add
jg
jmp
add
add
push
in
ficompl
adcb
push
dec
std
mov
xchg
inc
fcmovbe
nop
outsb
cmp
add
adc
inc
sarl
fs
popf
out
cmp
mov
or
in
sahf
cmpb
push
inc
or
out
in
jle
fcompl
outsb
push
leave
mov
cmpl
out
push
xchg
jo
mov
xor
add
call
pop
pop
adc
xor
or
add
jmp
adc
xor
sbb
push
into
inc
shll
add
inc
add
sub
shr
add
jmp
and
add
and
add
jmp
repz
test
add
out
add
sbb
jge
cmp
jl
lds
push
adc
fiaddl
adc
sbb
jl
inc
or
inc
sbb
jg
js
incl
or
call
pop
idiv
addr16
push
ret
addl
inc
call
cmc
dec
adcl
loopne
adcb
outsl
cmp
sbb
cmp
add
and
push
mov
xchg
aam
sahf
push
lcall
clc
add
sub
add
pop
scas
xlat
xlat
std
aaa
pop
testl
add
mov
xor
jl
add
out
lahf
jbe
inc
insl
or
sub
or
test
pop
js
or
int3
in
add
xchg
mov
test
call
rcrb
cs
aas
mov
or
inc
sarb
out
test
pop
and
idiv
dec
pushf
cmpb
mov
xchg
aam
mov
add
add
mov
pop
dec
sbb
xor
or
add
xchg
inc
jecxz
inc
stc
std
into
fidivs
movhps
add
clc
pop
dec
inc
mov
xchg
jp
push
cmp
add
add
xchg
je
push
cmp
add
out
enter
sbb
push
mov
lahf
daa
xchg
or
js
add
iret
jg
adcl
out
add
loopne
push
mov
mov
mov
pop
adc
add
xchg
rorb
sbbl
add
pop
cmc
push
jae
pop
bound
mov
and
pop
bound
mov
es
pop
jb
cmp
jle
aad
push
js
mov
imul
ret
cmp
decl
sub
jmp
aas
aad
divl
aad
jnp
aad
lahf
cld
aam
jo
aad
addl
incl
add
add
jmp
mov
cmp
push
mov
add
scas
cmp
scas
lods
cmp
push
scas
cmp
push
lods
cmp
cmp
add
mov
cmp
xor
cmp
dec
mov
add
cmp
pop
mov
cmp
lea
in
push
mov
pop
test
xor
testb
rcl
test
add
shll
xor
mov
sub
pusha
leave
xorl
sub
pop
inc
and
sahf
rclb
mov
call
test
mov
adc
stc
mov
movsb
std
lret
enter
enter
enter
mov
lcall
push
mov
mov
stc
outsb
test
jl
add
adc
lahf
mov
stc
adc
xchg
stc
adc
xchg
stc
adc
xchg
stc
adc
hlt
pop
sbb
test
pop
mov
sbb
xchg
mov
lcall
ret
data16
and
es
or
nop
jne
out
adc
loop
adc
push
inc
movsb
cwtl
scas
sbb
add
add
adc
addb
add
pop
out
and
sbbb
lds
int
pop
mov
xchg
or
add
sub
mov
adc
outsb
outsb
and
xchg
cmp
int
mov
add
xchg
cmpsb
mov
adc
mov
insb
cs
in
repz
mov
adc
pop
push
push
jmp
cwtl
std
mov
adc
push
in
adc
push
in
adc
push
out
adc
push
out
adc
push
loope
cwtl
std
and
push
push
lock
push
jecxz
cwtl
std
and
push
push
repnz
push
in
cwtl
std
mov
and
lods
push
add
testb
add
add
add
add
cmpl
idiv
xchg
sub
sub
out
loope
pop
pop
imul
cmp
dec
mov
fcmove
push
insb
testl
ja
xor
aaa
outsb
jge
xchg
jnp
push
add
mov
call
add
xor
repnz
lods
push
sub
icebp
add
pushf
add
adc
lcall
addr16
add
adc
mov
popf
add
adc
mov
sahf
add
adc
mov
lahf
add
adc
mov
mov
or
addr16
add
adc
or
adc
or
adc
or
adc
or
add
out
add
adc
or
adc
or
adc
jg
and
inc
or
fs
adc
lahf
inc
sbb
adc
dec
cmp
lcall
clc
add
and
test
or
xchg
or
mov
jns
cmp
sarb
add
ja
out
fnstsw
andl
add
lds
aad
mulb
sub
fbld
movsl
fdivl
or
stc
jmp
adc
test
lock
mov
add
adc
scas
adc
add
outsl
sbb
add
push
add
sub
jmp
push
sub
add
test
xchg
dec
mov
jmp
xchg
jmp
sub
add
jmp
jne
jmp
dec
in
jo
std
pushf
xor
testl
mov
es
cmp
mov
mov
roll
jecxz
add
add
testl
jne
push
inc
clc
mov
popf
loopne
cmp
jae
mov
popf
mov
cmp
aad
add
test
or
add
rorb
mov
mov
add
test
add
jo
cmp
repz
mov
ljmp
pushl
je
sbb
adc
test
add
fsubrs
sbb
pop
std
jle
xchg
std
call
inc
stc
xchg
sbb
inc
add
fdiv
test
stos
adc
sbb
test
cwtl
jle
negb
jb
cmp
add
and
and
cwtl
std
incl
mov
sbb
push
std
sub
xchg
mov
sahf
cwtl
std
incl
add
pop
std
test
stos
or
add
aam
insb
ljmp
out
aam
insb
push
add
dec
add
add
add
sti
jmp
out
outsb
loope
inc
sub
in
mov
mov
hlt
clc
addr16
out
xchg
hlt
push
cld
xor
test
mov
add
into
cli
js
xlat
es
test
stos
add
sub
sarb
loopne
add
mov
add
into
cli
orb
cmpsb
add
das
push
mov
aas
hlt
repz
add
jbe
subb
ljmp
stos
clc
jle
xchg
add
inc
std
lcall
dec
in
arpl
lcall
xchg
jmp
sub
aas
jmp
jns
stc
push
add
sbb
add
jle
cli
adc
mov
sahf
adc
add
dec
sbb
push
add
push
adc
cmp
aas
jmp
stos
aad
je
out
jmp
js
sub
and
mov
mov
test
notl
nop
ja
or
sbb
cmp
shll
sub
add
mov
inc
sub
rcrb
mov
in
mov
clc
jl
dec
xchg
and
fmuls
mov
insl
negl
clc
dec
sbb
pop
and
sub
xor
ljmp
push
roll
adc
dec
mov
cwtl
movsl
flds
add
and
je
inc
sbb
fwait
inc
test
mov
and
and
adc
insb
xchg
add
fstps
mov
mov
xchg
mov
out
test
std
loopne
adc
sub
adc
js
aam
sbb
dec
xchg
add
push
adc
and
lahf
dec
pop
sbb
pop
cmc
mov
and
mov
add
inc
fdivl
out
push
fwait
out
mov
out
or
sarb
and
fists
notb
pop
lret
stos
filds
or
mov
cld
insl
pop
cmc
loopne
xchg
mov
loope
sub
push
add
add
xchg
jle
shl
pop
inc
or
jle
shl
push
lret
ljmp
add
andb
push
ret
jecxz
enter
inc
jmp
mov
fsin
imul
jl
mov
rclb
stc
jmp
outsb
int
popf
jbe
xor
and
test
sarb
lds
adc
jne
stc
push
mov
jle
lds
jle
jns
inc
jnp
scas
or
in
setno
add
add
std
or
sbb
xchg
negb
test
stc
call
xchg
std
jge
pop
add
xchg
test
mov
jg
add
pop
iret
sarl
insl
divb
push
dec
movsb
sbb
in
pusha
insl
push
jmp
fs
xchg
loope
insb
add
andl
and
pusha
popa
mov
pop
jb
pushf
jo
shr
gs
pushf
sub
and
int3
int3
lods
ror
insl
jnp
add
pushl
push
insl
fldenv
add
cmpsl
xchg
bound
rcll
repz
jl
adc
std
sub
mov
xor
and
or
cmpsb
std
call
adc
xchg
bound
push
adc
cltd
cwtl
std
call
je
jle
popf
std
incl
fidivl
stos
std
decl
lcall
mov
pop
adc
lcall
aad
mov
int3
in
inc
pop
insl
push
std
add
add
push
or
push
insl
mul
add
add
test
add
add
lea
and
out
jne
mov
mov
repnz
sbb
push
or
or
in
out
xchg
dec
outsl
das
or
out
mov
cmpb
jne
jnp
cmc
out
xchg
sub
jmp
jns
popa
in
fsubrl
pop
cmp
add
out
aas
gs
cmp
call
fnstsw
jns
cld
call
adc
test
mov
jnp
insl
and
mov
fwait
cmp
mov
jnp
dec
or
or
jnp
stc
xchg
jmp
pop
sub
fs
pop
cmp
mov
mov
sbb
push
mov
sub
add
push
mov
pushf
stos
xchg
jge
dec
jl
in
jecxz
pop
jb
clc
xchg
pop
test
sbb
dec
mov
aaa
cmpl
ret
test
rol
je
lret
cmp
test
orl
mov
jnp
jmp
cld
dec
or
orl
push
add
sti
push
adc
add
xchg
loopne
add
cmp
data16
mov
ret
sti
push
adc
add
idivb
push
fdivs
mov
cmc
add
add
addr16
adc
mov
push
push
in
enter
fmul
adc
lock
js
mov
or
ja
push
mov
jp
add
sub
mov
mov
xchg
jns
loop
in
movb
and
shl
arpl
sub
ja
jno
xlat
mov
mov
and
test
push
std
test
adc
cld
mov
add
adc
ljmp
add
js
jge
push
stc
andb
jle
mov
add
or
insb
dec
dec
cmp
sbb
push
out
dec
dec
cmp
fs
cmp
idivl
and
cwtd
xchg
rolb
andl
addr16
mov
jge
dec
jle
mov
sub
insb
xchg
mov
test
sbb
jmp
mov
add
xchg
stc
repz
xchg
jge
add
adc
add
jge
sbb
sti
jmp
loop
imul
pop
mov
xor
cmc
mov
xor
call
test
mov
stc
std
adc
mov
cmpl
icebp
fildll
mov
push
xchg
add
roll
cld
mov
int3
int3
test
jmp
sbb
dec
push
xlat
std
lock
ja
inc
cli
push
lret
xor
xchg
pop
insl
push
add
test
or
cmp
xchg
add
incb
cmpsb
adc
mov
std
je
and
or
add
call
test
mov
xor
lods
jl
ret
movsb
and
lods
jle
add
jle
or
add
das
adc
mov
clc
mov
jecxz
push
adc
stc
xchg
cs
call
dec
jmp
pop
outsl
push
jg
or
in
int3
xchg
and
stos
jae
loope
add
push
outsb
adc
xor
add
adc
mov
push
lcall
call
push
outsl
xchg
out
cld
adc
jmp
cwtl
pop
push
xor
mov
in
xchg
cmp
outsb
xchg
sbb
jl
inc
movsb
xchg
cmp
mov
add
aas
sbb
add
xchg
add
add
add
add
test
clc
xchg
xor
add
jle
add
xor
mov
mov
out
mov
push
rorl
enter
add
mov
lahf
mov
jp
inc
jge
mov
or
xchg
sbb
push
das
jns
pop
pop
adc
out
mov
out
adc
add
sarl
lret
jmp
adc
and
movsb
add
sub
add
lock
pop
pop
test
or
verw
pop
mov
xchg
out
stc
jb
adc
inc
fucom
scas
cwtl
jo
jns
jb
adc
sbb
cmp
scas
fstps
stc
jmp
mov
test
fiadds
jmp
sbb
jnp
add
js
pop
ror
sbb
nop
loopne
stc
cmp
xchg
sbb
call
pushf
or
std
jl
aaa
stc
ret
std
xor
outsl
jge
clc
add
setg
scas
jle
add
mov
add
xchg
addr16
scas
jl
add
mov
cwtl
pop
rcrl
shl
add
mov
mov
test
adcl
jg
jle
add
int3
mov
add
lcall
call
call
adc
push
jnp
imul
test
add
or
nop
push
push
std
lcall
mov
cwtl
pop
outsl
jecxz
mov
je
ljmp
fwait
test
add
mov
std
call
and
jmp
xchg
mov
aaa
idiv
sahf
cs
call
add
jle
push
mov
dec
xorl
jns
or
xor
push
out
xchg
sar
jns
mov
jmp
lea
pop
or
mov
add
add
outsl
out
or
out
push
call
fists
jbe
or
add
mov
xor
out
fisubrs
pop
or
jmp
sub
mov
je
stc
ljmp
add
jmp
add
xchg
hlt
mul
or
xchg
add
enter
pop
loopne
mov
push
add
add
add
adc
jmp
or
test
adc
jmp
mov
bound
mov
bound
mov
loope
stos
add
data16
pop
or
mov
add
mov
add
add
xor
ljmp
adc
js
jnp
bound
xchg
imul
mov
stc
rorl
rolb
sub
jle
adc
add
fiadds
in
push
nop
mov
cmp
addb
cld
or
mov
js
xor
mov
push
add
add
fisttps
and
add
add
add
jmp
xchg
sti
mul
mov
ljmp
in
cmp
mov
mov
test
jl
mov
adc
push
add
out
test
fs
xchg
int3
repz
pop
add
cwtl
sbb
bound
fidivrl
push
std
filds
xchg
pop
call
sbb
add
push
mov
adc
pop
jp
mov
dec
repz
inc
test
or
add
mov
add
out
testb
add
xchg
pop
sbb
add
sub
clc
add
add
add
mov
adc
lock
pop
mov
or
add
jmp
pop
add
mov
dec
push
mov
mov
jno
add
jb
push
xchg
verw
lcall
and
jnp
aad
leave
pop
arpl
mov
lea
test
jno
cmc
mov
add
jmp
popf
sbb
xchg
verw
into
sti
xchg
add
leave
cmp
sub
mov
push
add
clc
cli
mov
daa
add
ljmp
add
fwait
mov
stos
idivl
mov
push
mov
test
inc
dec
frstor
lea
push
mov
add
or
inc
mov
push
adc
jne
mov
mov
add
dec
or
sbb
mov
xchg
cmp
mov
daa
ret
loope
ret
nop
mov
mov
mov
adc
xchg
mov
shr
mov
and
imul
xchg
mov
or
add
lahf
enter
std
ljmp
pusha
mov
rorb
adc
or
addr16
call
lahf
enter
std
call
lods
or
fistl
fistpll
lea
pop
mov
mov
add
sbb
mov
pop
jle
or
shlb
or
int3
add
repz
adc
cli
jo
add
out
inc
stc
pop
xchg
add
add
pop
xchg
jle
out
xchg
out
cli
mov
insl
stos
js
or
xchg
dec
push
adc
call
sub
xchg
insb
add
je
mov
out
xchg
adc
push
jno
out
test
inc
in
mov
add
jl
jl
add
aad
jnp
out
bound
and
lods
xchg
push
push
mov
roll
jae
test
add
adc
adc
mov
jmp
cltd
mov
mov
add
add
call
call
in
mov
fists
add
xchg
test
adc
shll
mov
mov
xlat
adc
test
add
push
insb
jge
push
jmp
cltd
push
bound
mov
dec
add
cmp
mov
cmpsb
stc
addl
push
adc
add
or
inc
jl
adc
xor
stc
pop
add
movsb
mov
sub
int3
call
ss
addb
adc
add
sti
ret
add
push
adc
mov
add
add
add
cmp
into
mov
fisttpl
popa
lcall
adc
mov
add
lahf
hlt
mov
adc
push
or
adc
into
and
or
mov
dec
sbb
outsb
adc
jg
push
add
leave
or
lret
cld
push
call
adc
adc
fdivl
movsl
insb
std
ljmp
add
mov
ret
aas
adc
mov
add
inc
push
fisubrs
adc
add
mov
cmp
insb
bnd
mov
jnp
adc
outsb
inc
stc
mov
sbb
dec
jle
mov
add
mov
pop
repz
imul
lea
inc
fnstsw
dec
aad
cmp
lods
jg
adc
js
or
dec
adc
aas
xchg
inc
adc
add
jg
add
add
loopne
add
bound
mov
add
add
out
cmp
mov
add
ja
sbb
jo
xorl
js
call
add
jo
add
out
rcl
jmp
adc
jmp
fbstp
scas
call
pushf
bound
lret
popf
mov
loopne
test
push
std
pushf
mov
cmc
add
cmc
test
mov
test
sti
popa
push
clc
test
verw
jmp
and
mov
out
push
inc
out
adcb
ja
mov
lods
add
add
aad
add
cli
leave
adc
call
cmp
add
lcall
adcl
mov
add
es
jle
add
add
into
call
add
push
push
or
inc
pop
add
add
adc
dec
xchg
mov
shrl
adc
sub
testl
fildl
add
cltd
xor
add
add
add
pop
std
popa
ret
push
adcl
mov
adc
sbb
push
les
adc
iret
sti
cwtl
and
mulb
pop
xchg
mov
inc
jbe
pop
add
shl
jnp
fisttpll
pop
lret
push
mov
sbb
out
add
mov
cmpsl
nop/reserved
out
leave
clc
pop
sti
and
push
mov
bnd
xlat
sub
fidivs
xchg
fimuls
add
or
push
rcr
mov
push
adc
out
xchg
js
push
adc
sub
jp
add
add
stc
icebp
lods
mov
and
jle
add
mov
mov
add
add
cwtl
insl
mov
or
movsl
in
jmp
js
fists
add
add
jg
cmp
cmp
or
insl
and
cmp
dec
icebp
in
popl
add
out
mov
cmp
jns
clc
rcll
lret
xchg
stos
scas
adc
adc
mov
adc
adc
std
add
arpl
es
xor
mov
call
jns
cld
push
jp
mov
adc
or
jns
mov
rcr
xor
sti
into
sarl
sub
cmpl
push
or
add
add
cmc
lods
fadd
inc
stc
mov
stos
adc
clc
add
divl
ret
jne
add
push
out
data16
mov
or
add
add
mov
or
adc
cmpsl
cwtl
mov
lcall
sbb
repz
dec
mov
cmp
out
imul
lcall
cmc
xchg
ret
adc
mov
adc
xchg
add
fistpll
adc
pop
jge
outsb
outsb
stc
push
sub
test
mov
out
cwtl
add
icebp
or
cld
add
pop
out
mov
js
cld
pop
xchg
jmp
adc
outsb
shll
ja
stos
and
out
or
js
pop
xchg
mov
stc
add
add
js
jae
or
roll
adc
jle
std
cmp
lret
xlat
or
pusha
xchg
int
out
jae
aaa
stos
and
out
shlb
adc
mov
js
sbb
add
jge
lds
pop
adc
dec
push
mov
inc
sti
data16
fists
add
mov
adc
or
std
call
add
leave
push
add
dec
jl
sbb
xor
xor
stc
jp
inc
mov
add
jmp
xlat
arpl
cmp
ss
sar
into
inc
xchg
push
jl
insl
add
jmp
xchg
cmpsl
mov
jl
fistpll
add
jmp
sub
ja
call
xchg
sub
push
adc
jl
add
imul
jnp
sub
ljmp
and
int3
imul
add
std
mov
rcll
and
int3
and
int3
int3
mov
mov
adc
ja
daa
test
mov
mov
orl
sbb
idivl
adcl
scas
cwtl
push
or
add
add
push
jge
data16
dec
lock
adc
jne
push
call
imul
mov
stos
adc
pop
jl
insl
inc
std
decl
inc
int3
int
inc
int3
lds
jne
loop
jne
mov
pop
mov
push
rclb
std
call
dec
mov
push
sbb
pfrsqrt
adc
add
test
sar
or
out
jmp
lcall
mov
shr
adc
push
push
mov
add
shrb
sti
pop
mov
dec
mov
xchg
lcall
push
mov
cltd
sar
xchg
cmp
data16
xor
dec
fwait
aas
dec
dec
mov
inc
dec
stos
aas
pop
dec
sbb
add
jne
jnp
ret
fsubl
dec
lahf
add
add
sbb
adc
mov
mov
je
add
popa
dec
sarl
ret
xchg
pop
ljmp
fadd
inc
mov
add
cwtl
add
shl
xchg
aas
pop
stc
dec
dec
add
jp
movl
mov
add
popf
test
shll
bound
test
xchg
inc
stc
mov
ljmp
jmp
adc
mov
add
adc
add
fs
xor
xchg
sbb
jmp
cmp
jb
std
adc
xchg
mov
inc
or
mov
clc
fld
jmp
adc
data16
addb
add
sub
mov
stos
outsl
dec
adc
jne
stc
xlat
mov
pushl
xor
push
test
add
push
add
data16
jle
hlt
add
push
jns
add
xchg
je
pop
mov
stos
jmp
xchg
push
adc
add
jnp
fiaddl
add
add
ret
xchg
cwtl
adc
adc
pop
mov
xchg
add
jnp
jnp
ret
pop
stc
adc
incl
jns
mov
outsb
js
cmc
addr16
call
jecxz
push
add
in
movl
std
dec
loopne
push
sbb
sarl
lcall
int
push
out
xorb
xchg
and
movsb
xchg
or
adc
jne
add
in
add
push
sti
add
mov
and
out
xchg
mov
jle
test
mov
mov
out
jmp
xchg
add
xchg
mulb
into
scas
imul
out
sbb
add
add
mov
mov
imul
hlt
add
mov
pop
pop
pop
insl
pop
push
inc
jmp
jnp
repnz
push
js
pop
cmp
mov
popf
push
add
bound
xchg
bound
mov
ret
data16
negb
pop
sbbb
cmp
xor
pop
stos
add
stc
dec
int3
mov
dec
int3
lods
jmp
push
test
push
add
pop
xchg
mov
jle
repnz
mov
add
jmp
call
push
add
bound
push
test
jge
cmp
ljmp
mov
test
lcall
fdivrl
inc
add
clc
pusha
jl
add
call
nop
mov
cmp
lcall
pop
mov
xlat
cmp
pusha
jl
ds
insb
xor
mov
xorl
cmp
imul
push
ret
and
dec
inc
cmp
test
sti
test
add
imul
push
out
std
add
xchg
lods
mov
adc
push
xor
aad
xor
int
jl
mov
add
out
or
aam
mov
or
cltd
fcmove
mov
mov
mov
fildll
push
pop
clts
rorb
clc
rcll
dec
and
imul
fcmovnb
adc
add
jbe
test
add
addb
out
mov
jg
adc
cltd
lret
cmp
sub
jae
mov
jae
add
jl
out
out
mov
fstl
jno
push
adc
pop
rcrl
jmp
pop
cmpsl
pop
fisubl
cmp
fwait
aaa
fldl
aaa
aad
stos
aaa
int
sbb
add
movsl
mov
jnp
lock
or
xchg
add
add
mov
shrb
add
xlat
adc
idiv
push
je
ljmp
or
adc
push
inc
outsl
pop
stc
inc
test
add
jmp
stc
cs
cmp
jb
imul
jg
repnz
call
adc
jge
fcom
mov
daa
add
insl
push
mov
push
push
mov
add
add
adc
pop
or
sub
mov
cmp
mov
lods
sbb
add
into
aam
ljmp
or
sbb
test
into
mov
jge
into
dec
add
jmp
jle
xor
fisttps
add
jbe
push
add
dec
scas
sahf
pusha
pop
add
jae
add
les
sahf
and
add
xor
sbbl
add
push
lock
add
shl
aam
push
js
pop
mov
stos
push
add
or
fwait
pop
bound
into
movsb
adc
push
jb
jmp
test
jecxz
mov
push
std
incl
add
push
mov
stc
push
in
mov
push
mov
adc
test
out
and
imul
jg
add
push
std
decl
push
notl
mov
mov
int
aaa
popa
ja
jmp
or
fwait
adc
push
decl
xchg
sub
or
and
out
fucomi
pop
mov
xchg
outsb
cmp
push
push
jb
and
xor
lea
fistps
imul
shlb
mov
jmp
add
icebp
add
jmp
jg
and
out
shrl
pop
fcoms
sbb
loop
xchg
push
push
or
cmpsb
push
lret
mov
stos
dec
lds
sbb
test
or
adc
cld
pop
stos
inc
int3
mov
inc
int3
lods
movb
test
mov
std
sahf
pop
stc
push
cld
pop
sub
inc
int3
sbb
into
inc
int3
sub
mov
add
mov
mov
call
add
cmpl
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
cld
call
inc
std
pushl
icebp
call
and
add
loope
call
loope
inc
loope
pushl
loope
add
loope
add
loope
add
loope
add
add
loope
add
loope
add
testb
loopne
pop
aaa
loopne
loopne
pop
pop
loopne
aas
pop
loopne
jg
loopne
jg
dec
push
fs
inc
mov
je
push
test
inc
cwtl
std
mov
bound
xchg
ds
push
add
xchg
add
test
aaa
mov
das
data16
push
insb
jg
imul
xchg
add
cmp
test
repz
rol
and
ror
and
push
pop
dec
mov
adc
lcall
popl
inc
cmp
iret
das
lcall
xchg
or
test
nop
mov
add
repnz
shl
in
or
inc
adc
mov
add
add
fs
cmc
mov
xchg
dec
inc
cmpsb
insb
fdivs
cmc
pop
fdivs
in
jge
popa
cmp
add
add
repz
inc
pop
push
roll
ss
dec
insb
xchg
aam
and
in
lea
mov
jg
add
out
xor
je
aas
adc
fcoms
daa
emms
cmp
xor
jnp
add
sbb
lods
aam
push
fsubs
jg
mov
sub
divb
call
push
add
out
add
xchg
add
sti
cld
shr
popf
cmp
jmp
xor
add
js
push
shrl
jo
add
jl
inc
subb
cmp
adc
lcall
add
add
xor
in
jge
int3
shrl
ds
push
aam
sub
movsl
add
das
sbb
add
add
je
push
jo
loope
std
mov
push
or
push
or
jecxz
je
jmp
jae
jns
xor
test
call
push
cmp
fstps
lret
adc
add
add
push
xor
data16
mov
test
call
jae
sbb
add
js
roll
or
inc
cmp
in
loop
test
push
subl
sti
lock
push
mov
adc
aaa
jge
lds
arpl
les
xor
flds
xor
std
inc
jae
xchg
add
inc
sub
sub
aas
or
ror
and
jecxz
and
mov
add
pop
add
loopne
decb
pop
push
movsb
lcall
stc
testb
pop
out
aam
sbb
mov
iret
xor
insb
add
pop
out
push
add
mov
inc
jmp
ja
iret
pop
add
test
jg
or
add
jno
add
mov
stc
insl
add
push
pop
pop
push
test
add
xor
pop
mov
cld
insl
add
dec
pop
dec
xchg
les
adc
daa
outsb
shlb
or
inc
sbb
pop
pop
add
ljmp
jae
aaa
mov
sbb
add
mov
decl
and
sub
mov
test
negl
and
cmp
push
aad
cmc
sqrtps
and
inc
sbb
sbb
xor
xor
test
movsb
test
pop
in
sqrtps
add
mov
out
mov
test
add
jnp
repz
and
fimuls
daa
cmpsl
cmp
or
jnp
setbe
and
xchg
push
outsb
movsb
jmp
cmova
push
out
icebp
jp
and
cmpsl
adc
add
outsl
adc
out
jl
ljmp
roll
dec
stc
jne
addr16
mov
mov
stc
gs
push
add
add
mov
jl
dec
or
icebp
xor
adc
pop
std
decl
jo
or
xlat
arpl
jge
or
rclb
push
push
and
or
push
int
xlat
push
and
or
sub
cmp
sub
mov
or
lahf
or
add
xor
jns
jl
rolb
dec
cltd
insb
adc
jno
push
shr
lea
or
arpl
movl
add
or
ljmp
mov
adc
or
out
adc
mov
adc
insb
add
ja
add
push
add
add
mov
movsb
pop
iret
repnz
mov
cwtl
dec
rorb
mov
jle
add
mov
insw
insb
subl
mov
std
gs
or
and
insb
adc
push
xchg
dec
add
clc
orb
testl
sub
cld
and
add
add
insb
xor
pop
jle
adc
add
push
cli
or
dec
cli
jns
repnz
xor
add
or
dec
jle
popa
cmp
clc
out
jle
jb
jle
or
pop
and
add
stc
jge
adc
add
lret
lds
add
mov
cwtl
sti
aaa
jb
sub
in
inc
fwait
push
and
cmp
mov
mov
add
jnp
and
jmp
jbe
add
and
add
sub
enter
and
sbb
aaa
mov
adc
sbb
jmp
call
jmp
leave
repz
jnp
sub
jns
repz
jns
and
jp
and
fisubl
decb
mov
xor
mov
push
sbb
add
add
mov
push
arpl
call
cmp
inc
and
call
xor
movsl
cmp
sar
add
adc
add
fadds
inc
adc
fistl
pusha
mov
pop
mov
mov
push
and
dec
fists
inc
xchg
and
push
in
inc
mov
add
hlt
out
jb
add
sub
mov
and
push
and
pop
mov
std
add
movsb
add
add
xor
xchg
add
in
push
notb
add
and
scas
or
repnz
sbb
xor
imul
xor
popa
std
pop
mov
icebp
fnsave
hlt
int
add
push
inc
call
mov
les
adc
out
adc
repz
movsb
cmp
jge
mov
push
push
cmc
jno
mov
add
sahf
jl
cmc
ffree
mov
sub
jge
pop
dec
lea
test
adc
jmp
add
stos
cmc
cmp
arpl
dec
test
or
jae
testl
add
inc
or
dec
jns
jl
std
pop
cmp
and
jg
push
hlt
jge
std
psllw
and
add
ljmp
orl
add
icebp
inc
jl
insb
mov
add
add
rclb
add
cld
ljmp
repz
jl
pushf
add
aaa
xor
cmp
cmpb
stc
call
pop
sbb
push
mov
in
sub
aaa
cmovb
push
jbe
ret
dec
or
push
je
sub
push
xor
push
mov
xchg
mov
inc
adc
mov
xchg
in
add
int
and
pop
std
incl
fsubp
cld
lret
jge
push
out
fstl
dec
push
shl
mov
test
fsubs
scas
adc
ljmp
test
push
push
ret
idivl
add
push
xchg
fnsave
pop
push
pop
outsb
mov
pop
xchg
repz
je
rorl
add
popf
sub
pop
cwtl
std
rorb
push
add
jp
pop
into
adc
leave
sbb
add
pop
mov
add
addr16
out
shlb
jb
call
jp
pusha
pusha
pop
cmp
add
out
xchg
mov
and
xchg
mov
jl
inc
lahf
add
add
xor
or
jo
ljmp
add
add
pusha
into
ja
aaa
xchg
mov
test
call
add
push
fldl
mov
add
repnz
inc
stc
jmp
xchg
jbe
jmp
pusha
xor
int
xor
adc
jl
shll
popa
sbb
aas
inc
stc
adc
cmp
mov
mov
jp
icebp
stos
mov
popa
add
push
stc
popa
jo
repz
push
les
leave
and
pusha
enter
dec
out
jb
xchg
fwait
inc
stc
jmp
sbb
jb
xor
je
add
add
lea
sub
mov
dec
clc
std
jns
mov
mov
mov
add
add
cmp
lock
cmpl
cmp
add
jns
mov
jns
pcmpeqb
add
clc
mov
or
cld
jae
dec
and
push
xchg
into
idiv
inc
pop
lds
adc
jl
aad
fcom
push
scas
in
clc
scas
ds
popf
mov
mov
cmp
andl
std
mov
sbb
xlat
push
lods
ss
cmp
add
mov
cld
jbe
mov
mov
mov
sti
mov
loop
rcrb
hlt
jle
adc
jle
xchg
add
adc
idivb
rorb
nop
add
add
add
ds
inc
jno
add
mov
jns
adc
gs
mov
mov
insl
mov
jle
pusha
cmpsw
pop
mov
push
jmp
adc
and
push
mov
mov
sub
xchg
sbb
pop
mov
js
dec
movb
xlat
or
and
mov
cli
js
repnz
add
add
pop
jp
sub
stc
mov
pop
xbegin
jmp
fiadds
nop
cmp
rcll
dec
incb
ss
lock
xchg
fiadds
xchg
jmp
jp
inc
int
rcll
es
roll
test
test
add
sub
sub
jnp
adc
sahf
add
adc
push
jb
loopne
jo
loopne
fs
lar
push
add
and
push
jae
cmc
lods
idiv
test
cmp
mov
add
shlb
mov
add
test
pop
pop
cmp
ret
ja
aas
push
cmp
test
or
add
sub
xor
lahf
aad
fadd
jnp
or
aad
rcll
arpl
adc
fstpt
enter
insb
hlt
pop
roll
and
lahf
xor
push
push
lock
es
comiss
insl
push
pop
mov
dec
add
jns
push
outsl
inc
adc
add
add
stc
cmpsb
sub
call
adc
xchg
sub
call
and
stc
xchg
cmp
je
cmp
sub
call
inc
inc
stc
data16
mov
adc
call
arpl
inc
xor
cmp
adc
std
call
addl
mov
adc
std
call
add
or
dec
ds
dec
ss
add
add
add
call
add
inc
push
add
add
add
dec
enter
incb
mov
add
add
dec
test
addr16
push
add
push
add
add
add
dec
mov
mov
add
add
add
dec
push
add
xchg
push
add
add
add
xchg
incb
mov
add
add
iret
add
faddl
add
inc
cld
call
adc
add
adc
add
lret
dec
adcl
jmp
adc
push
jmp
adc
psubsw
mov
jmp
adc
push
jmp
adc
push
jmp
adc
push
jmp
adc
adc
jmp
add
adc
psubsw
adc
push
jmp
adc
push
add
std
inc
adc
std
call
sub
sti
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
adc
les
push
add
adc
in
push
add
adc
add
adc
add
adc
add
adc
sub
fildl
sub
popa
add
std
ret
add
std
jg
sub
jnp
sub
ja
sub
jae
sub
andl
std
mov
add
std
mov
add
std
or
sub
pop
add
and
std
add
sub
jmp
sub
sti
add
std
testl
sub
ret
add
std
mov
and
std
mov
sub
mov
sub
scas
add
std
stos
add
std
cmpsl
add
std
das
add
std
sub
sub
daa
and
out
cmc
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
push
out
jmp
push
out
loope
out
mov
adc
add
push
out
imul
add
out
push
push
out
xchg
adc
add
push
out
sub
out
push
push
out
lods
push
out
test
push
out
popf
push
add
adc
jmp
adc
jmp
add
adc
jmp
adc
or
adc
or
adc
or
adc
jmp
adc
or
adc
adc
psubsw
inc
psubsw
dec
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
add
adc
or
adc
or
push
add
phaddw
cmp
sub
sub
and
sub
and
cmp
sbb
cmp
sbb
sub
adc
sub
adc
clc
add
clc
add
psubsb
add
clc
add
push
clc
add
push
call
add
add
mov
add
test
loopne
mov
add
add
push
test
aam
js
or
js
enter
les
push
sub
mov
cvtpi2ps
mov
sub
mov
sub
scas
pop
sub
stos
cvtpi2ps
cmpsl
pop
sub
mov
pop
sub
fwait
cvtpi2ps
xchg
pop
sub
fistps
sub
fistl
sub
xlat
cvtpi2ps
roll
sub
iret
pop
sub
lret
pop
sub
movl
add
sub
ret
pop
sub
aam
sub
rclb
sub
mov
sub
arpl
sub
sbbl
sub
mov
push
sub
imul
std
dec
pop
sub
nop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
out
test
out
aaa
sbb
add
out
mov
pop
out
lds
add
add
add
add
add
add
add
add
add
add
jmp
adc
or
adc
jmp
adc
jmp
adc
jmp
add
adc
or
adc
jmp
adc
jmp
adc
psubsw
lret
psubsw
xchg
or
adc
or
adc
jmp
adc
adc
adc
adc
adc
jmp
adc
or
adc
or
adc
jmp
adc
or
test
push
or
add
js
dec
or
push
std
xchg
vmread
sub
push
std
pop
or
sub
pop
or
cmp
prefetch
std
or
sub
add
clc
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
mov
add
add
push
mov
sbb
xor
push
sbb
sub
adc
sbb
mov
sbb
mov
sbb
scas
adc
sbb
cmpsl
add
sbb
scas
adc
sbb
cmpsl
add
sbb
lahf
adc
sbb
icebp
pop
sbb
in
pop
sbb
mov
nop
aam
add
std
fstpl
sbb
fsts
sbb
aad
sbb
roll
sbb
int
sbb
pop
adc
sbb
push
add
std
out
inc
std
out
dec
std
out
dec
std
out
aad
out
sar
out
cmp
std
out
and
std
out
sub
std
out
cmc
cld
out
icebp
cld
out
sbb
std
out
add
add
std
out
or
std
out
adc
std
out
std
cli
out
stc
cli
out
in
out
loope
out
in
cli
out
jmp
cli
out
mov
call
adc
jmp
adc
jmp
adc
add
jmp
adc
jmp
adc
jmp
add
adc
jmp
adc
jmp
adc
jmp
adc
psubsw
lea
jmp
adc
jmp
adc
add
jmp
adc
jmp
adc
add
mov
add
or
add
mov
add
add
or
nop
or
mov
push
add
push
add
cmp
je
cmp
and
sub
sbb
sub
sbb
cmp
adc
cmp
adc
sub
or
sub
or
clc
add
clc
add
or
add
or
add
or
add
or
add
or
sbb
jmp
add
sbb
out
sbb
jecxz
sbb
out
or
std
jmp
sbb
out
sbb
rcrl
sbb
inc
or
std
lret
or
std
xor
std
sub
or
std
lret
or
std
sbb
std
mov
sbb
and
sbb
stos
or
std
and
std
mov
or
std
fwait
or
std
xchg
sbb
std
xchg
sbb
std
or
std
mov
sbb
xchg
add
sbb
sbbl
std
jg
sbb
mov
sbb
jmp
add
add
out
popa
mul
add
out
cmp
out
sub
mul
add
out
dec
mul
add
mul
add
out
fdecstp
out
pop
cli
out
loope
out
vcvtdq2pd
fdecstp
out
int
out
shl
out
adc
mul
add
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
idiv
call
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
jmp
adc
jmp
adc
pop
jmp
add
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
pop
jmp
adc
pop
jmp
adc
add
std
orl
std
jg
call
std
ja
clc
std
jae
call
std
imul
std
or
or
add
std
push
or
std
dec
or
std
inc
or
inc
or
aas
or
cmp
js
aaa
or
xor
push
std
xchg
or
std
lea
cmp
mov
sub
xor
sub
orl
cmp
jns
sub
and
adc
std
and
sbb
jno
sbb
sbb
sbb
imul
add
sbb
popa
sbb
std
pop
or
std
out
or
std
jmp
sbb
out
sbb
dec
or
std
testb
std
repnz
std
out
sbb
std
ljmp
std
loop
sbb
xor
sbb
sub
or
std
rcrb
sbb
into
sbb
std
lret
std
sbb
sbb
adc
sbb
std
or
or
std
mov
sbb
scas
add
sbb
out
push
out
outsb
stc
out
mov
out
add
out
lcall
add
clc
out
mov
out
mov
out
xchg
clc
out
inc
stc
out
cmp
out
ds
out
and
out
sar
out
pop
cli
out
pop
cli
out
cli
out
ret
cli
out
scas
cli
out
stos
cli
out
mov
out
mov
out
add
jg
out
jnp
out
cmpsl
cli
out
mov
cli
out
mov
call
adc
add
jmp
adc
add
jmp
adc
add
jmp
adc
add
jmp
adc
add
jmp
add
adc
add
jmp
adc
add
jmp
adc
add
jmp
adc
push
jmp
sub
or
sub
push
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
stos
or
cmpsb
or
mov
or
lcall
sbb
xchg
sbb
std
xchg
or
std
lea
sbb
mov
sbb
test
sbb
orl
sbb
jns
sbb
jne
add
sbb
jno
sbb
insl
or
std
imul
sbb
popa
or
std
pop
or
std
pop
sbb
std
push
sbb
std
push
or
std
dec
or
std
dec
sbb
std
inc
sbb
std
inc
or
std
cmp
sbb
std
xor
or
std
sub
sbb
std
and
or
out
idiv
out
sub
out
pop
cli
out
add
and
out
pop
cli
out
sbb
out
psubd
add
cli
out
pop
stc
out
or
out
clc
out
add
out
out
out
sti
clc
out
out
clc
out
repz
out
mov
out
jmp
out
out
jecxz
out
xbegin
out
iret
clc
out
sar
out
push
clc
out
lret
clc
out
mov
clc
out
add
cmpsl
clc
out
mov
pop
or
adc
jmp
adc
or
adc
or
adc
jmp
adc
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
adc
adc
pop
jmp
adc
pop
jmp
adc
pop
jmp
push
and
or
sbb
or
adc
or
decb
or
es
cmp
and
sub
std
pop
sub
stc
pop
clc
std
cmc
pop
clc
std
icebp
pop
call
std
jmp
pop
add
clc
std
loope
call
std
flds
mov
std
roll
test
int
test
leave
pop
mov
std
roll
std
mov
pop
js
mov
adc
std
mov
sbb
mov
sbb
lods
push
sbb
fs
std
pusha
adc
std
pop
or
std
pop
adc
std
push
or
std
push
adc
std
dec
or
std
and
std
mov
sbb
test
add
sbb
orl
sub
xor
sub
xor
std
sub
sub
sub
std
imul
sub
popa
push
sub
pop
push
sub
pop
push
sub
push
push
sub
push
push
sub
dec
push
sub
add
sub
add
std
cld
or
or
add
out
inc
or
add
out
aas
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
out
or
out
pop
pop
out
add
out
incl
out
sti
push
out
testl
out
out
push
out
jmp
out
out
out
jecxz
out
filds
out
mov
jmp
adc
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
dec
push
mov
add
add
add
add
ss
push
add
push
js
sub
js
es
push
add
push
cmp
sbb
cmp
push
push
sub
adc
sub
push
push
cmp
or
cmp
push
push
sub
add
sub
incb
clc
add
add
add
call
add
add
clc
add
add
call
add
add
adc
std
aad
sub
rcll
std
int
sub
leave
adc
std
lds
std
rcll
mov
adc
std
mov
sub
mov
sub
lods
or
std
test
or
std
mov
or
std
cltd
adc
std
xchg
add
or
std
xchg
adc
std
lea
std
mov
std
test
std
adcl
std
jns
sub
jne
sub
jno
sub
insl
or
std
imul
std
popa
adc
out
addr16
out
pop
push
out
pop
push
out
inc
push
out
push
push
out
dec
push
out
dec
push
out
roll
out
cmp
out
aas
push
out
add
and
out
aaa
push
out
sub
out
das
push
out
repz
out
sbb
out
pop
push
out
add
out
pop
push
out
or
out
clts
out
adc
out
pop
add
out
incl
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
jmp
adc
add
adc
add
adc
add
adc
add
clc
imul
add
gs
popa
add
pop
add
pop
add
push
add
push
add
decb
mov
incb
test
inc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
decb
add
incb
add
add
incb
add
std
std
add
std
stc
add
std
cmc
add
sub
cmc
adc
std
icebp
adc
std
in
adc
std
jmp
adc
std
loope
sub
fstl
sub
fsts
sub
aad
sub
rcll
sub
int
sub
push
adc
std
sbb
sub
push
adc
std
adc
sub
or
adc
std
cmp
sub
add
sub
adc
std
cli
add
adc
std
notb
sub
repnz
std
in
adc
std
ljmp
std
loop
sub
ficoms
sub
ficoml
sub
adc
out
loop
out
movl
out
into
add
add
add
add
add
add
out
addb
add
out
jp
out
outsb
add
add
out
cmp
mov
add
shl
out
rolb
movl
adc
out
adc
ds
cmpsb
add
add
and
std
push
ljmp
xor
sub
or
adc
xchg
ret
push
fcoms
jmp
adc
add
hlt
or
push
and
adc
add
pop
stc
jmp
inc
les
add
add
pop
je
xchg
ret
adc
shll
jle
out
dec
and
call
adc
mov
mov
cld
clc
cmp
jge
lret
inc
call
cli
adc
mov
xor
or
inc
jmp
and
add
repnz
je
xorl
sub
add
lcall
add
jnp
loop
mov
jne
cmpl
mov
stc
inc
or
testb
jp
or
mov
jne
cli
aaa
fdivrl
add
xorb
addr16
xor
idiv
pop
push
sbb
add
cmp
jp
mov
push
pusha
and
ljmp
shl
add
adc
aas
jge
sub
jnp
stos
mov
inc
xor
inc
jge
sub
sbb
imul
xchg
add
stos
mov
or
and
dec
dec
inc
jge
sti
ret
jb
fidivrs
jmp
or
mov
movsl
clc
mov
sub
rcl
jbe
inc
stc
aam
inc
jge
add
cmp
sbb
pop
fistpll
dec
hlt
jb
add
add
inc
mov
or
cld
shll
and
cmovo
out
xchg
les
cmp
mov
mov
je
mov
out
sar
jno
test
in
sub
mov
cmp
add
add
and
cwtl
adc
lahf
add
add
xchg
inc
in
mov
movsb
out
inc
mov
cmp
jmp
adc
mov
out
sub
fcomip
sbb
pop
push
je
ljmp
fsts
mov
jp
rorb
push
stos
mov
jp
add
loop
add
hlt
cld
test
cltd
jl
scas
mov
sub
add
iret
lock
sub
inc
add
adc
lods
adc
out
sub
adcb
stc
add
fistpll
jne
out
das
loope
call
jnp
jne
clc
imul
mov
jge
add
add
push
xorb
sbb
stos
mov
insl
adc
test
xor
inc
nop
imul
sbb
sbb
sub
lds
call
ret
sti
pop
inc
or
mov
ret
cmc
call
jmp
jnp
sub
stc
dec
out
sub
add
sub
mov
mov
sbb
jge
and
rcrl
test
daa
inc
addb
sti
negb
call
shrb
inc
jge
push
mov
stc
mov
cmp
in
shll
or
sub
pop
stc
xchg
fs
push
scas
popf
cli
xchg
addl
xor
inc
call
push
adc
add
xchg
or
mov
gs
and
ljmp
sub
cmpsb
mov
mul
enter
jecxz
mov
out
xchg
and
adc
add
adc
mov
in
add
in
leave
cmc
push
cmpsb
orl
cwtl
adc
add
mov
add
out
or
inc
aas
mov
jns
inc
pop
or
rolb
add
jmp
idiv
mov
push
dec
jge
pop
pcmpeqb
sub
clc
push
testb
dec
cmove
xchg
les
rcrl
push
in
pop
or
dec
icebp
or
push
repnz
push
pop
sbb
into
testl
and
mov
adc
and
or
push
add
sbb
xchg
decl
mov
xchg
in
jl
mov
mov
data16
in
pop
pop
mov
or
stc
add
ret
jb
cmp
add
fdivl
add
testb
xorb
jl
cmp
add
mov
cltd
incb
add
mov
je
xorb
std
jl
clc
add
addl
push
push
addl
clc
fidivrl
xchg
mov
je
xorl
mov
out
idiv
imul
add
cli
je
push
and
mov
cld
sbb
inc
imul
jnp
and
add
add
sbb
push
fstpt
daa
push
xchg
or
inc
and
mov
pushf
or
xchg
pop
xchg
mov
cmpb
xchg
or
and
stc
negb
add
data16
lcall
inc
xor
inc
call
mov
lcall
mov
fs
inc
outsb
movb
loopne
add
sbb
mov
xor
adc
sub
push
mul
xchg
adc
dec
push
dec
or
in
adc
inc
push
cmp
ljmp
or
jecxz
adc
pop
sbb
or
jmp
sbb
or
push
out
sar
sub
aam
jg
add
or
xchg
out
adc
add
xchg
mov
call
stc
or
sub
sti
out
and
stc
push
push
std
mov
or
mov
xchg
adc
cmp
or
jl
and
add
or
add
insl
mov
or
pop
and
jb
ljmp
inc
add
add
jae
sub
divb
pop
xchg
or
push
sbb
xchg
sti
or
push
and
add
cmp
add
add
loope
out
ret
sub
add
call
ret
jmp
lar
out
subl
mov
jmp
mov
je
xlat
test
add
add
jmp
std
je
xlat
xchg
stc
das
jmp
je
push
sti
ffreep
jp
out
outsb
push
loopne
cld
mov
add
subb
jg
jne
adc
mov
mov
push
sub
mov
push
aaa
test
push
inc
call
xchg
xor
and
mov
add
std
sbb
mov
in
and
jge
sbb
std
call
lock
adc
xor
add
xchg
std
push
mov
out
xor
stc
xchg
mov
sub
std
dec
sbb
out
push
test
add
mov
sbb
pop
fmuls
cmpsb
test
jecxz
adc
jnp
mov
repz
add
add
sbb
xchg
adc
shr
scas
sub
mov
mov
repz
ds
imul
in
or
daa
sbb
or
sub
jne
std
aas
lds
adc
fs
push
xchg
repz
xchg
add
jle
add
add
xchg
or
mov
xchg
add
or
adc
sahf
xchg
mov
jmp
sbb
stc
stos
xchg
mov
jmp
repz
add
cld
in
xchg
lahf
call
push
or
mov
and
push
or
sbb
je
sub
hlt
push
incb
xchg
cmp
jae
cli
shl
push
es
jge
and
jae
cli
in
out
incl
adc
push
xchg
add
push
add
push
pushl
jo
call
stos
xorb
outsb
add
lods
div
call
out
test
inc
adc
std
and
add
ljmp
imul
rcr
out
testb
fcmovnb
cli
daa
out
mov
je
add
add
out
jp
xor
insl
cmp
mov
call
ret
jp
pop
add
adc
jne
sub
call
adc
jnp
sbb
stc
negb
pop
call
shlb
not
addr16
test
inc
repnz
repnz
mov
jmp
cli
add
mov
cmc
add
mov
add
adc
add
iret
xor
int3
sbb
lcall
inc
stc
int3
cmp
inc
repz
nop
sbb
add
adc
push
xchg
rolb
add
sbb
add
add
andb
adc
enter
movsl
adc
loop
mov
or
adc
jns
loope
add
dec
out
jb
aam
jno
call
xlat
jns
loopne
or
movsb
add
dec
filds
hlt
inc
jecxz
inc
lods
add
inc
sub
add
ret
push
ds
lds
add
mov
mov
and
jp
sub
add
pop
lea
add
jno
sbb
jo
adc
in
nop
or
aad
nop
add
lds
std
xchg
sbb
inc
call
adc
je
ja
call
cmp
inc
stc
lods
outsl
or
xchg
mov
mov
mov
mov
add
adc
stc
add
add
mov
cmp
test
sbb
mov
out
icebp
out
test
cmp
cmpsb
pop
xchg
cli
incl
stos
out
cmp
scas
cmp
subb
icebp
clc
out
mov
mov
addb
jp
movsb
out
iret
ret
aaa
cmp
add
decl
test
xor
add
js
jle
out
imulb
out
jp
push
divb
and
inc
call
mov
aad
addb
inc
rcl
std
call
sbb
adc
adc
dec
add
sbb
stc
out
xchg
mov
adc
xchg
jl
sub
jp
jo
clc
into
arpl
rcrl
std
cmp
outsb
or
add
xchg
mov
jb
xchg
add
sbb
mov
std
jb
xchg
add
std
adc
mov
pop
rol
push
add
inc
int3
pop
loope
adc
rorl
cmp
test
cli
jnp
cmp
adc
or
mov
sbb
or
adc
sbb
pop
or
pop
and
and
jne
add
out
out
out
add
xchg
mov
out
mov
out
dec
lock
ret
add
xchg
cld
sbb
test
cmpsb
into
pop
add
add
push
jecxz
jge
add
push
fsts
loop
dec
inc
pusha
add
ss
cmc
fidivrs
out
sub
stc
sub
push
hlt
push
and
adc
std
sub
mov
add
add
or
or
call
jl
out
je
xchg
jl
out
xchg
jge
filds
jns
sub
imul
sar
adc
jo
shl
and
jge
fistpll
jge
lea
push
insb
repnz
clc
std
aam
call
test
jae
lock
das
adc
ret
and
in
jmp
jl
sbb
leave
sbb
out
leave
adc
sub
mov
pop
mov
push
xor
jg
sbb
push
jnp
into
push
jbe
sar
jmp
add
jl
jl
shll
pop
andl
out
jmp
inc
call
mov
ljmp
add
jp
mov
call
ljmp
adc
dec
add
ljmp
dec
push
adc
hlt
jl
incl
jns
add
out
decl
stc
push
mov
mov
mov
inc
out
jno
jge
out
jg
or
loopne
push
stc
pop
adc
out
jle
push
cmp
or
rclb
jbe
add
sbb
rcrl
shrl
cld
decl
sub
cmp
add
add
jle
sbb
jnp
add
and
cmp
shl
adc
jp
rorb
shlb
orb
or
push
jne
sbb
idiv
or
jmp
pop
and
sub
test
mov
add
std
out
xchg
inc
push
std
mov
add
add
mov
orb
lea
push
mov
add
add
ljmp
lea
lahf
jmp
dec
daa
clc
clc
sub
jmp
mov
fsts
jl
icebp
xchg
psubsb
daa
clc
clc
sub
add
jl
icebp
xchg
jmp
cmp
clc
clc
sub
fwait
in
out
sbb
sbb
test
xchg
clc
jmp
adc
add
popf
inc
clc
jmp
adc
add
clc
add
clc
cmp
add
add
sahf
addr16
ljmp
clc
in
jl
js
js
add
pop
pusha
sti
lcall
jl
sti
cmp
add
sub
add
mov
repz
cld
jl
ljmp
add
add
add
add
sti
decl
sti
call
inc
fs
call
clc
jmp
cmp
mov
gs
call
pop
in
ljmp
jmp
adc
cld
call
cmp
mov
incl
jmp
cld
call
pop
std
pop
in
lcall
jnp
push
jmp
cld
call
jbe
std
ds
pushl
xorl
ljmp
push
shl
decl
xchg
je
push
jmp
cld
call
scas
pop
std
out
loopne
jmp
and
std
fsubrp
cld
incl
add
call
pop
std
movb
icebp
mov
add
add
add
add
add
add
add
add
add
insl
test
push
insl
jl
in
je
cli
insb
cli
addr16
addr16
cli
stos
addr16
cli
les
cli
mov
inc
cli
jo
cmp
inc
push
sub
xor
cli
adc
cli
loop
adc
into
data16
or
mov
addr16
stc
sub
stc
xor
stc
dec
addr16
outsb
data16
pop
data16
decl
das
cld
clc
mov
cld
clc
mov
cmp
clc
pop
cmp
clc
adc
cld
clc
std
sub
clc
pop
clc
sti
clc
dec
clc
sti
clc
in
sti
clc
jmp
cmc
sti
clc
or
cmc
sti
clc
in
in
sti
clc
cmp
add
lods
sti
clc
gs
clc
xchg
lods
sti
clc
jmp
mov
clc
test
sti
clc
jns
idiv
mov
clc
mov
idiv
stos
insb
idiv
xchg
mov
add
sti
jmp
ljmp
pop
sti
decl
pop
sti
pushl
add
add
decl
sti
fisubrs
stos
insl
sti
call
add
jle
sti
call
outsb
sti
incl
outsb
sti
jmp
insl
sti
call
sti
ljmp
sti
dec
insl
sti
inc
insl
sti
incl
outsb
sti
decl
outsb
sti
lcall
insl
sti
jno
fidivl
lcall
jae
ljmp
jae
call
outsb
std
out
outsb
std
fidivrs
outsb
std
imul
pop
outsl
std
jge
std
mov
add
mov
cmpsb
pop
je
sahf
jmp
std
xchg
loope
std
mov
insl
std
xchg
insl
std
jbe
insl
std
outsb
leave
insl
std
shrw
pop
outsb
std
push
push
outsb
std
dec
jg
std
inc
sbb
outsb
std
adc
cs
push
std
push
mov
push
std
incb
inc
jo
mulb
add
testb
fdiv
mov
aam
jo
imulb
pop
idiv
pop
mov
imul
pop
lods
notb
pushf
mulb
je
imulb
je
divb
jae
testb
je
ljmp
idivb
jne
notb
dec
testb
cmp
jo
xor
fs
notb
add
add
xchg
lods
je
idivb
jge
clc
in
hlt
clc
fnstsw
shll
mov
fs
clc
mov
push
inc
hlt
clc
popa
cmp
clc
aaa
inc
hlt
clc
adc
hlt
clc
inc
daa
hlt
clc
and
hlt
clc
int
hlt
clc
mov
add
clc
repz
jmp
hlt
clc
push
push
clc
cmp
fcomip
clc
cltd
add
out
clc
fcomip
clc
popa
repz
gs
repz
xchg
mov
repz
scas
lahf
repz
shll
outsb
sti
out
imul
ljmp
push
xchg
sti
fcoms
sti
incl
xchg
sti
pushl
xchg
sti
nop
sti
decl
sti
push
nop
sti
clc
nop
sti
call
test
call
mov
sti
decl
sti
decl
mov
ljmp
add
cmp
sti
pushl
stos
sti
ljmp
add
data16
addb
xorb
add
sub
add
lcall
cld
push
les
adc
pushf
cld
push
loopne
cld
jecxz
cld
test
cld
out
mov
cld
out
popf
cld
ficomps
popf
cld
add
into
xchg
popf
cld
pop
sahf
cld
mov
adc
cld
cmpsb
pop
popf
cld
sahf
int
cld
xchg
lds
cld
xchg
cld
jle
sahf
cld
jbe
lahf
cld
outsb
das
lahf
cld
lea
call
pop
popf
cld
inc
jmp
xchg
cld
add
fwait
and
repz
or
add
repnz
in
repnz
in
movsb
cltd
nop
cltd
aad
mov
vsubss
mov
push
cltd
lods
repnz
pushf
movsl
repnz
pushf
popf
repnz
pushf
xchg
bnd
repnz
pushf
test
fcomps
jne
and
gs
repnz
fwait
dec
repnz
fwait
inc
repnz
add
lcall
sub
mov
clc
sbb
clc
lea
clc
xchg
lods
hlt
clc
popf
movsl
hlt
clc
cltd
popf
hlt
clc
test
mov
clc
pop
test
clc
jge
clc
jecxz
hlt
clc
ret
lods
hlt
clc
out
hlt
clc
push
lcall
lds
clc
test
jg
clc
hlt
clc
mov
add
sahf
hlt
clc
mov
jg
clc
mov
hlt
clc
popf
jns
clc
add
sti
jmp
cwtl
sti
jmp
sti
pushl
cwtl
sti
cmp
sti
decl
cwtl
sti
push
xchg
sti
call
jmp
sti
jmp
sti
call
sti
pushl
sti
decl
sti
decl
sti
push
xchg
sti
call
sti
call
xchg
sti
ljmp
mov
pushl
mov
incl
add
sti
pushl
mov
cld
mov
jmp
mov
ds
call
jmp
pushl
sti
jmp
mov
lcall
mov
cld
dec
or
cld
inc
inc
xchg
cld
xor
cld
cs
cld
es
cld
push
call
mov
cld
push
scas
cmpsl
cld
inc
cmpsl
cld
test
cld
out
int
cld
add
out
mov
cld
andl
pop
mov
cld
mov
test
scas
sbb
cld
sahf
in
mov
cld
mov
popf
cld
jle
sahf
cld
jbe
sahf
cld
outsb
add
add
add
mov
adc
out
adc
loope
adc
movsb
mov
add
sbb
out
jb
or
cmpl
adc
cmp
adc
push
add
and
add
sub
add
or
mov
xchg
out
testb
and
add
cmp
adc
sub
add
push
mov
clc
pop
add
scas
in
clc
dec
jbe
clc
out
insb
in
clc
fnstenv
shrl
pop
ja
clc
aad
in
clc
xlat
je
clc
test
mov
clc
fwait
lods
in
clc
xchg
mov
clc
mov
in
clc
scas
in
clc
addr16
clc
jnp
in
clc
jae
in
clc
lea
je
clc
jne
in
clc
mov
insb
in
clc
mov
insb
in
clc
jmp
add
adc
add
or
sti
ljmp
mov
sti
pushl
ljmp
add
popf
add
pop
insl
movsb
pop
gs
pop
imul
add
push
popa
insl
xchg
dec
outsb
xchg
aaa
data16
jb
popa
je
outsb
clc
add
aaa
bound
je
gs
push
popa
insl
push
add
and
jno
dec
jno
jb
jb
je
fs
insb
jmp
pop
je
pop
data16
xchg
call
add
mul
push
addr16
add
imull
repnz
cld
push
or
rcrl
fstp
cld
fstl
mov
arpl
pop
cmp
mov
pusha
dec
lods
jbe
scas
jnp
lods
or
mov
adc
xchg
insb
pop
jo
push
arpl
imul
cld
jmp
xor
inc
outsb
cmp
imul
push
arpl
imul
cld
adcb
es
bound
popa
push
jae
push
push
out
addb
divb
out
cld
addr16
mull
cmp
insl
repnz
shll
add
add
gs
jne
je
data16
pop
xchg
pusha
int3
je
push
add
jbe
cmp
add
xchg
jbe
outsl
mov
inc
out
push
add
jbe
outsl
inc
je
pop
sub
add
jbe
sbb
outsl
dec
jbe
add
popa
outsl
add
pop
inc
inc
cmp
jbe
sub
add
jne
das
cli
pop
arpl
or
insl
insl
adc
popa
insb
or
add
insl
bound
pop
insl
jmp
mov
dec
enter
fstpt
movsl
xlat
je
mov
pop
arpl
or
cmp
outsb
adcb
cmpsb
notl
jge
dec
jo
push
add
sub
push
insl
push
pop
dec
imul
add
push
insl
add
jb
gs
push
add
leave
ljmp
add
dec
dec
cmp
jae
outsl
in
insb
je
inc
jno
or
pop
insb
je
inc
jno
sbb
popa
pop
inc
inc
pop
push
mov
pop
insb
inc
push
pop
add
jae
push
pop
jae
outsl
push
pop
outsb
mov
outsl
jge
je
stos
add
add
pop
arpl
push
data16
add
add
add
push
push
adc
cld
int
and
inc
or
aas
and
mov
je
sub
xchg
std
inc
hlt
clc
jae
add
pop
add
xor
inc
in
in
dec
outsb
cli
pop
insl
loop
pop
pop
loope
cld
leave
adc
pop
insl
mov
sub
insb
cmp
lods
frndint
call
add
popf
mov
popa
mov
insb
jnp
add
xchg
ljmp
outsb
outsl
pop
jl
insb
push
adc
pop
jb
bound
adc
hlt
add
imul
inc
pop
xor
sbb
jb
push
or
add
add
pop
add
pop
cld
pusha
in
sub
cmp
jo
dec
add
add
rcrb
dec
repnz
xlat
cmp
add
mov
int3
inc
out
les
add
add
pop
enter
ret
pusha
adc
fs
pop
fwait
dec
mov
xchg
push
outsb
insl
jg
adc
ret
add
pop
xchg
pusha
pop
pop
mov
push
add
sbb
insb
dec
inc
pop
imul
sub
sub
push
push
pop
outsb
dec
xor
inc
das
daa
ja
xor
adc
adc
imul
add
out
addr16
filds
push
or
insb
inc
add
popa
aas
cmc
out
push
addr16
out
arpl
fldl
add
lcall
mov
inc
addr16
add
lock
mov
mov
bound
adc
jmp
stos
pop
addr16
add
fs
js
es
insb
gs
std
icebp
add
inc
insb
add
dec
jo
dec
cmc
jo
js
add
add
inc
je
dec
pop
fs
add
jae
popa
and
outsb
push
jo
jb
insl
jno
js
sbb
dec
dec
push
popa
jbe
push
jno
fs
gs
jle
add
gs
imul
jne
dec
add
es
insb
adc
imul
adcl
cmp
jne
je
sahf
outsb
insb
aaa
js
inc
popa
push
add
mov
js
xor
outsb
xor
add
or
inc
pusha
arpl
mov
inc
in
add
push
addr16
hlt
inc
js
xchg
pop
push
clc
out
jae
in
insb
in
popa
add
xlat
add
mov
pop
outsb
lods
mov
imul
add
sub
inc
mov
inc
movsl
add
jecxz
stos
push
push
pop
xchg
push
push
pop
jnp
jbe
test
push
pop
outsl
outsb
push
imul
and
ss
push
inc
push
dec
pusha
xor
xlat
sub
push
adc
imul
push
or
in
adc
add
dec
out
sbb
push
aad
ret
popa
shrl
outsb
ret
push
les
insb
lcall
cmp
outsb
mov
xchg
fwait
gs
pop
test
add
and
mov
arpl
addr16
push
jmp
ss
cmp
inc
cmp
pop
cs
fs
sbb
add
pop
pop
inc
sbb
add
out
inc
fiaddl
sbb
insb
add
adc
xor
or
inc
outsb
lock
dec
push
sbb
aaa
arpl
mov
std
cmp
pop
je
jl
insb
push
pop
insb
jo
sub
cltd
insl
imul
add
outsl
ds
cmp
data16
data16
jg
dec
add
pop
outsl
dec
dec
aaa
popa
insb
dec
std
int
or
inc
popa
fistpll
pop
inc
push
popa
pop
add
cmp
pop
je
cs
insb
gs
pop
pop
push
js
out
sub
jo
adc
pop
and
pop
add
out
dec
lods
jno
mov
push
outsb
lods
mov
add
stos
cmp
add
pop
arpl
pop
arpl
pop
arpl
cld
cltd
adc
bound
lea
pop
pop
jno
pop
push
arpl
xor
cld
xchg
or
xor
xor
outsb
sub
addr16
sbb
aad
insl
je
sti
insl
imul
cld
insw
in
aad
jb
pop
js
adc
incb
add
popa
add
out
stos
pop
fsubrl
add
mov
pop
ret
pop
mov
add
push
jb
adcl
out
ljmp
fs
jne
jb
outsl
add
add
pop
aas
push
pop
gs
fs
adc
stc
or
push
js
xor
jae
data16
lcall
add
add
popa
add
outsb
sti
push
mov
sbb
push
push
add
arpl
shrl
aad
pop
je
adc
movsl
mov
cmp
fs
andb
jns
jae
imul
movsl
jns
cmp
xor
imul
add
insl
insb
inc
add
xor
add
dec
outsl
arpl
sub
push
add
dec
arpl
loopne
imul
out
add
gs
inc
insl
dec
push
je
push
pop
insl
push
xor
aas
gs
inc
popa
insb
push
inc
je
pop
cmp
push
imul
add
movsl
add
xchg
cmp
push
add
clc
add
inc
gs
push
mov
jb
popa
pop
jae
sbb
add
popa
outsb
pop
pop
pop
push
inc
push
pop
popa
push
add
pop
popa
inc
dec
gs
cmp
push
push
jecxz
pop
arpl
fisubrl
cs
add
cwtl
adc
outsl
insl
add
cmp
mov
add
add
aaa
incl
xchg
popa
outsb
movsl
pop
gs
xor
imul
adc
incb
jbe
outsb
jne
pop
gs
inc
arpl
bound
pop
jno
adc
ljmp
ss
and
pop
aas
adc
cmp
insb
sbb
add
adc
add
jecxz
or
add
pop
out
push
jo
add
xor
pop
mov
divb
add
push
fcoms
pop
lret
pusha
mov
add
int3
outsl
ficomps
pop
mov
push
mov
jbe
push
pop
dec
gs
mov
mov
push
bound
cmp
outsb
mov
dec
xchg
pop
xor
insb
push
pop
cmp
push
xor
add
popa
and
add
pop
push
inc
lcall
or
aam
je
hlt
insb
dec
adc
push
sub
add
stos
cmovnp
mov
outsb
scas
pop
insl
pop
imul
push
add
xor
mov
pop
aad
push
mov
cmp
add
inc
sub
iret
push
insl
insb
jmp
dec
insb
je
jno
insl
mov
push
jmp
add
adc
fwait
sub
push
jae
pop
inc
arpl
add
add
push
dec
outsl
fistpll
push
js
pop
add
cmp
push
imul
addr16
sub
das
cmp
cmp
push
pop
add
inc
jb
push
inc
arpl
add
fldl
imul
js
push
ds
xor
jae
add
push
mov
sar
push
cmpsl
cmp
call
cmp
dec
push
jb
cmp
pop
add
adc
inc
sub
outsb
xor
arpl
out
cld
inc
in
adc
arpl
negl
pop
push
insl
adc
in
add
out
or
rcl
pop
out
cld
sbb
daa
pop
insb
add
lods
lcall
mov
in
cld
cmp
mov
push
test
pop
imul
pushf
pop
popa
push
stos
push
pop
bound
add
xchg
dec
insb
xchg
inc
test
inc
dec
push
xor
out
cltd
add
popa
xor
cmp
xor
inc
out
movsl
add
popa
repz
pop
loope
adc
add
add
jo
push
sti
push
loope
pusha
add
pop
or
int
es
mov
lret
push
cmpsl
addr16
dec
adc
outsb
add
pop
rorl
lret
push
mov
inc
out
jb
xchg
pusha
insl
pop
mov
cmp
mov
jb
pushf
pusha
insb
push
mov
inc
out
das
add
scas
xor
stos
push
pop
add
adc
arpl
dec
dec
arpl
cmp
dec
add
fisttps
fs
imul
in
add
jae
inc
arpl
push
push
loop
add
inc
arpl
in
je
ret
adc
inc
loope
add
push
adc
insb
enter
les
add
loope
inc
arpl
popa
addr16
add
adc
movsl
jno
inc
add
popa
je
dec
ss
je
xor
push
std
add
imul
add
add
inc
jo
cs
outsb
dec
data16
aad
arpl
add
out
inc
gs
pop
push
pop
aaa
push
jb
pop
cmp
in
inc
gs
inc
insb
sbb
arpl
addb
aaa
je
pop
push
je
add
cmp
add
mov
inc
popa
outsb
aam
outsl
inc
stos
add
ss
imul
jnp
js
call
pop
je
test
xor
push
adc
inc
xor
dec
jo
dec
jo
inc
aas
push
add
and
inc
hlt
or
arpl
sbb
hlt
sub
adc
push
push
out
sub
sub
add
or
mov
dec
add
pop
call
in
push
addr16
pop
arpl
stos
std
inc
lods
mov
arpl
ret
dec
je
mov
adc
je
dec
addr16
add
pop
dec
pop
xchg
jo
pop
mov
data16
lcall
sub
jb
fs
push
cmp
cmp
add
push
pop
cmp
add
mulb
jae
inc
inc
jb
sub
add
pop
or
dec
add
arpl
jb
add
push
mov
out
xchg
add
push
shrb
test
out
sahf
add
push
insl
addr16
adc
arpl
arpl
cmpl
imul
add
cmp
mov
or
pusha
push
or
addr16
insw
dec
cli
pop
push
jmp
call
bound
lcall
adc
addr16
adc
adc
fs
test
cmp
add
and
xor
sub
fldt
imul
add
call
imul
imul
call
imul
pop
je
test
or
lcall
inc
push
pop
imul
gs
jmp
sub
imul
popa
cmp
gs
push
and
outsl
pop
std
out
add
pop
arpl
or
inc
gs
sub
add
add
pop
je
pop
push
insl
dec
cmp
gs
adc
arpl
std
inc
je
dec
arpl
cld
add
jl
push
arpl
imul
daa
adc
arpl
movsb
popa
insl
cmp
callw
adc
bound
inc
push
add
push
add
sub
arpl
inc
outsl
pop
add
je
adc
adc
cld
inc
add
hlt
repz
arpl
in
inc
je
cld
inc
inc
adc
inc
mov
xor
cld
pop
fs
push
gs
add
add
lods
dec
int3
push
shlb
js
mov
je
enter
out
sub
lcall
mov
push
mov
pusha
jns
adc
cmp
aaa
sub
bound
push
push
push
add
adc
sub
push
xor
push
hlt
push
push
push
adc
dec
add
out
inc
imul
or
push
or
pop
stc
add
add
push
mov
repz
test
das
je
mov
push
jmp
cmpsb
pop
insl
les
push
ja
dec
mov
push
addr16
add
adcl
arpl
add
imul
jle
je,pt
pop
push
add
cmp
pop
cmp
pop
out
add
clc
sub
je
adc
push
push
inc
jmp
sbb
pop
add
mov
cmp
add
dec
gs
popa
outsb
adc
outsl
push
aas
xor
add
aas
add
xor
data16
xor
add
add
imul
cmpsw
add
xchg
pop
outsl
cmpsl
cmp
add
je
mov
pop
outsb
and
pushf
add
gs
inc
pop
outsl
aaa
adc
in
xor
sub
popa
outsb
inc
adc
outsb
les
add
bound
pusha
je
adc
mov
cld
pop
je
add
je
fwait
add
push
inc
lods
mov
add
test
push
add
ja
inc
push
mov
dec
pop
outsb
jge
add
int3
decb
jg
pop
cmp
inc
xchg
push
insb
inc
jno
insb
sub
pop
data16
push
insl
adc
or
add
cmp
divl
pop
lock
clc
or
cld
ljmp
loopne
and
rolb
add
adc
or
leave
pop
imulb
pop
cmc
bound
push
loopne
movsl
aas
push
mov
pop
mov
xor
add
add
mov
gs
les
bound
push
jb
fwait
add
push
ds
jnp
add
das
data16
cmp
add
dec
pusha
push
and
dec
inc
pop
fldenv
insb
adc
scas
add
dec
inc
push
std
cmp
dec
pop
inc
dec
shrl
sahf
adc
jo
jmp
outsb
push
mov
insl
sbb
pop
gs
add
push
or
arpl
out
fs
sub
fmul
pop
imul
adc
popf
bound
popf
push
arpl
add
push
xor
add
daa
fs
pop
pop
imul
adc
ljmp
aaa
pusha
push
sub
pop
sub
inc
cli
push
add
push
outsb
add
gs
sbb
addr16
xor
sub
imul
add
filds
outsl
pop
pop
insl
jo
xor
and
addr16
add
cmp
imul
gs
push
push
ficomps
gs
popa
imul
cmp
je,pn
int
popa
data16
popa
xchg
jne
popa
dec
add
std
cmp
je,pn
lea
inc
and
pop
jb
pop
add
bound
je
adc
imul
xlat
cld
mov
pop
push
ja
or
add
loop
push
imul
arpl
inc
ret
insb
mov
imul
lods
xlat
cld
xor
sbb
aad
popaw
movsl
scas
xor
xlat
cld
imul
addr16
lds
bound
dec
outsb
js
pop
dec
js
das
add
jns
dec
insb
addl
orb
movsl
push
push
adc
cmp
test
sub
adc
pop
push
inc
fs
inc
std
pop
push
pop
int3
arpl
add
xor
push
push
arpl
push
sub
dec
out
push
sbb
arpl
gs
dec
out
cmp
pop
mov
dec
add
inc
add
mov
pop
aad
outsb
fs
add
aaa
enter
xchg
pop
dec
dec
mov
pop
dec
mov
add
add
cmpsb
push
cmp
push
mov
fs
ss
add
arpl
inc
pusha
jo
cs
push
dec
inc
fs
pop
jecxz
je
shll
dec
jecxz
jo
notb
jmp
lock
dec
or
push
outsb
adc
dec
inc
or
and
imul
adc
dec
dec
add
push
outsb
rol
dec
inc
les
add
outsb
shlb
fildl
pop
aad
adc
lcall
je
dec
fs
cmp
add
std
push
arpl
pushf
xor
nop
push
add
push
add
xchg
adc
pop
insb
jne
inc
js
js
incl
xor
adc
js
cmp
push
dec
pop
icebp
and
add
outsb
jbe
add
xor
jb
pop
je
pop
std
add
xor
popa
outsb
and
cmp
cmp
push
popa
in
inc
jae
adc
add
cwtl
pop
je
mov
data16
insb
gs
gs
add
push
outsb
pop
inc
sub
and
push
adc
dec
xor
and
imul
add
dec
add
lock
xor
ds
push
adc
add
lock
push
mov
hlt
jo,pn
cli
pop
insl
cld
je
call
pop
je
ljmp
jo
mov
cld
dec
jge
aas
imul
cld
dec
jo
fs
pop
mov
pop
pop
insb
add
add
fwait
imul
jns
add
sub
bound
add
pusha
jae
inc
pop
push
add
in
push
push
adc
dec
add
push
dec
das
sti
pop
ss
mov
add
add
dec
adc
dec
incb
and
les
movsl
push
xor
add
int3
dec
cmc
xor
add
pop
insl
pop
rcrl
jb
out
mov
add
aaa
dec
arpl
adc
mov
bound
inc
sahf
adc
add
ds
mov
pop
insl
push
hlt
push
push
cmp
dec
push
inc
leave
pop
push
les
push
adc
add
xor
pop
insb
or
fstpl
std
leave
dec
arpl
enter
add
or
inc
arpl
enter
jns
push
enter
jmp
jae
imul
popa
fs
shll
xlat
cmp
addr16
push
add
mov
cmp
mov
insb
add
or
sub
insl
lea
js
test
dec
fldt
push
sub
fs
aam
jge
sub
pop
popa
sub
dec
je
pop
pop
insl
add
aaa
pop
dec
inc
adc
pop
popa
and
sti
pop
cmp
pop
je
icebp
pop
imul
gs
imul
pop
dec
outsb
adc
je
pop
insb
imul
jmp
cmp
gs
insb
js
addr16
pop
fdivr
pop
adc
inc
outsb
ss
je
sbbl
and
lcall
add
dec
xchg
push
aaa
cmp
insb
adc
add
hlt
push
pop
imul
pop
repz
call
xlat
cld
das
adc
push
arpl
les
lock
insb
lods
sbb
adc
add
ret
popa
pop
test
mov
outsl
pop
push
adc
dec
add
pop
mov
outsl
pop
push
adc
cmc
add
les
add
stos
inc
pusha
add
add
fwait
inc
xor
xor
mov
add
add
pop
andl
mov
add
push
inc
in
dec
out
dec
jmp
addr16
xor
dec
ss
add
push
repnz
xor
aaa
and
pop
test
out
scas
xor
mov
cmp
add
lcall
mov
arpl
add
or
arpl
inc
and
fnstsw
push
adc
lods
outsb
sub
inc
cs
cltd
aaa
xor
jo
fs
js
adc
mov
out
sub
adc
test
and
dec
or
add
repnz
popa
adc
pop
fs
ret
daa
push
mov
add
and
lods
and
sbb
add
sub
or
cmp
sub
pop
je
dec
outsb
gs
pop
add
rolb
dec
push
mov
push
dec
gs
sub
clc
add
add
pop
gs
lds
outsl
mov
jbe
pop
je
test
pop
add
cmp
daa
push
sub
outsl
jnp
push
mov
dec
add
add
cmp
data16
and
add
add
inc
insb
outsl
sub
cmp
add
repz
adc
fs
add
inc
add
inc
adc
cmp
mov
dec
je
mov
outsb
lods
test
data16
jge
insb
je
addr16
ja
pop
pop
pop
int
outsb
outsb
int
je
jp
add
xchg
cld
cmp
lcall
cmp
cmp
push
imul
cmp
cmp
std
ds
arpl
pop
pop
outsb
hlt
cmpsl
cld
sub
jmp
outsb
in
pop
jae
ljmp
repnz
pop
arpl
loopne
dec
mov
add
add
and
pusha
scas
and
pop
mov
add
popf
daa
or
and
inc
rcll
cmp
add
add
push
add
js
mov
xor
mov
push
cmp
add
add
sub
xchg
pop
and
and
adc
cmpsb
xor
push
fwait
adc
out
sbbb
inc
add
xor
push
xor
inc
cmp
aas
out
out
add
pop
frstor
add
out
and
sub
mov
aas
jmp
iret
xor
sbb
and
add
and
aam
je
insb
daa
push
jmp
pop
xor
je
ja
cmpsl
dec
sub
ljmp
insb
and
xor
imul
inc
dec
jo
cmp
arpl
and
roll
add
in
arpl
and
lock
fs
push
imul
push
push
je
sub
data16
and
or
add
sbb
je
push
pop
outsb
cmp
je
ficompl
je
push
addr16
negl
int3
push
pop
add
inc
outsb
pushf
and
fisttpll
jne
push
jno
cwtl
dec
popa
outsl
xchg
pop
add
push
lea
gs
outsl
add
xchg
pop
pop
inc
js
push
inc
push
je
ficoml
je
out
pop
repnz
outsb
in
call
dec
je
push
pop
push
pop
pop
outsl
les
je
loope
add
cmc
add
adc
pusha
dec
lods
mov
aas
js
test
lods
adc
je
push
arpl
pop
je
aam
je
ja
pop
gs
bound
mov
adc
inc
das
pushf
pop
outsb
daa
test
and
push
ja
mov
push
cmp
mov
hlt
cmpsl
cld
lahf
adc
je
add
repnz
pop
into
and
pop
cmc
and
push
add
add
xor
push
fsubl
inc
pusha
xlat
and
dec
mov
sbb
adc
push
add
sub
pop
mov
add
int3
and
xor
pop
repz
jl
or
pop
or
add
add
mov
push
and
pop
jb
rorl
cmp
add
dec
inc
xor
push
and
dec
pop
and
pop
xor
jbe
adc
xchg
cmp
inc
add
out
add
cmp
aas
xor
in
sub
jmp
mov
push
cmp
sub
loope
push
fadds
add
add
xor
push
bound
outsb
or
add
jl
dec
arpl
aaa
es
aas
sub
adc
mov
push
inc
sbb
ljmp
adc
mov
adc
pop
cltd
dec
add
adc
sub
jmp
jge
gs
dec
add
fdivrp
push
jne
inc
addr16
add
add
add
dec
insl
jb
and
sbb
outsb
add
and
pop
add
int
addr16
cld
fwait
add
push
insb
je
push
add
adc
push
ja
push
popa
add
and
jb
add
fstl
add
push
outsb
arpl
inc
es
dec
add
xchg
pop
jb
and
add
add
jl
pop
mov
mov
add
outsl
pop
imul
pop
dec
push
cmp
push
xchg
adc
add
adc
pop
je
cmp
add
push
pop
imul
cmp
pop
imul
sbb
test
pop
imul
adc
ja
add
pop
pop
insl
insb
lds
daa
or
dec
or
add
pop
add
fiadds
pop
cmp
je
jno
xchg
xchg
dec
je
add
xor
push
ss
addb
fsubrl
xor
sub
daa
add
sbb
loop
push
pop
sti
sub
push
call
add
arpl
cmp
popa
mov
sbb
and
sub
push
adc
inc
add
add
sbb
jnp,pn
or
and
push
pop
subl
aad
cmp
stos
pop
pop
and
push
inc
push
iret
bound
sbb
sub
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
add
add
add
add
add
add
cmp
js
js
add
in
movsb
cmp
cld
movsb
cmp
sbb
mov
js
add
push
add
add
cld
cmp
cmp
add
add
cld
incl
cld
ljmp
incl
add
add
jmp
clc
clc
call
stos
pop
std
push
stos
cld
call
stos
cld
call
stos
les
add
push
stos
cld
call
stos
cld
call
stos
mov
call
stos
cld
call
push
or
test
cld
call
lcall
adc
mov
shrl
cld
call
test
cld
push
and
cld
call
stos
add
shrl
enter
rorl
enter
add
sub
outsl
inc
aaa
pusha
fcmovu
dec
sbb
dec
inc
mov
adc
test
jb
inc
xor
adc
test
push
inc
pop
sbb
xlat
adc
push
inc
mov
pop
test
orb
xchg
mov
mov
sti
mov
mov
cwtl
sarl
outsb
iret
cmp
lcall
add
loope
xor
iret
adc
mov
sahf
mov
imul
inc
add
lahf
enter
rorb
mov
inc
in
adc
xchg
jg
mov
push
popf
mov
jno
cmpsl
dec
mov
lahf
pop
push
xor
push
out
pop
out
dec
insl
jno
inc
mov
jl
bound
pop
jo
add
test
sub
xor
pop
mov
dec
dec
fidivs
adc
add
inc
lods
cmp
push
pop
roll
pop
hlt
xor
cmpsl
and
xor
jo
in
aas
sub
and
loope
push
pop
cmpsl
shr
aas
sub
sbb
sbb
aas
js
scas
imul
add
add
jp
aas
mov
addr16
iret
leave
fistpll
sub
into
mov
fnstsw
call
loope
mov
sarl
mov
lds
mov
xchg
and
movsl
push
leave
mov
mov
xor
stc
test
stc
push
push
shrb
jne
cs
test
lea
push
clc
mov
mov
insb
push
jl
or
push
out
xor
jno
push
xchg
jle
sub
and
push
mov
sub
xchg
test
outsb
test
mov
out
daa
arpl
or
inc
shll
aad
jmp
xor
add
sahf
das
xchg
mov
add
shll
mov
dec
popa
ret
repz
cmpsl
adc
mov
ja
fisttpll
dec
cmc
fcoml
clc
dec
push
or
or
sub
stos
rorb
push
cmpsb
xchg
dec
xchg
xchg
ljmp
dec
xor
adc
cltd
pop
loopne
or
or
pop
mov
rorl
adc
inc
sti
out
adc
out
adc
out
adc
aas
inc
roll
out
inc
add
roll
call
add
add
out
add
ror
add
inc
add
adc
add
adc
add
adc
add
adc
add
push
inc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
in
clc
fiadds
jne
in
call
fiadds
popa
nop
in
ljmp
in
incl
add
xchg
in
js
in
incl
xchg
in
incl
in
cmp
in
call
nop
in
cmp
cmp
inc
cmpb
dec
cmpb
and
cmp
lods
cmpb
nop
cmpb
mov
cmp
pushf
cmpb
mov
cmp
lods
cmpb
test
cmp
loopne
cmp
je
cmp
addb
add
add
cmp
rolb
add
cmp
in
cmp
loopne
cmp
cld
jle
add
jle
add
cmp
push
jg
add
cmp
cmp
cmp
adc
aas
adc
test
adc
aas
adc
test
adc
test
adc
xor
adc
inc
adc
xor
inc
add
adc
xor
adc
inc
adc
inc
adc
xor
inc
adc
xor
inc
adc
ss
adc
ss
adc
inc
adc
ss
adc
ss
adc
ss
adc
ss
adc
jecxz
roll
mov
roll
cmp
add
roll
aas
cmp
add
roll
sub
add
roll
lret
cmp
add
cmp
add
aaa
push
add
aaa
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
adc
out
adc
out
adc
jb
filds
out
adc
out
adc
out
adc
fldcw
adc
out
adc
add
adc
add
add
add
jmp
adc
add
jbe
call
adc
add
adc
add
jmp
call
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ljmp
adc
add
adc
add
ljmp
add
adc
add
adc
add
adc
add
test
ljmp
js
js
decl
cmp
push
std
cmp
jmp
std
cmp
cmp
jmp
stc
cmp
sub
clc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
cld
incl
add
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
out
adc
out
adc
out
adc
xor
aaa
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
adc
out
adc
out
adc
addr16
adc
out
adc
out
adc
sbb
testl
out
adc
add
adc
add
movntq
out
call
adc
add
adc
add
add
push
in
call
adc
add
adc
add
in
call
adc
add
adc
add
dec
in
call
adc
add
adc
add
push
in
call
adc
add
adc
add
shl
call
adc
add
adc
add
shl
call
adc
add
adc
add
jecxz
incl
add
add
add
ret
cmp
js
add
js
add
push
cmpb
js
add
js
add
push
cmpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpb
clc
add
add
add
add
add
cmpb
mov
add
add
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
cld
incl
add
lcall
adc
cld
call
lcall
adc
cld
call
lcall
adc
out
adc
out
adc
out
adc
cmp
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
das
roll
aaa
das
push
add
das
push
add
das
push
add
das
push
add
das
push
add
das
push
add
das
push
add
sbb
incb
mov
inc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
clc
std
call
std
mov
add
std
ljmp
std
mov
std
ljmp
std
js
ljmp
ljmp
js
js
ljmp
ljmp
cmp
cmp
ljmp
std
ljmp
std
cmp
cmp
ljmp
std
ljmp
std
clc
add
add
add
add
add
add
add
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
cld
call
stos
or
adc
cld
call
jbe
outsl
es
add
mov
in
or
jmp
stc
inc
in
arpl
add
test
add
adc
in
in
fimull
arpl
in
dec
add
jmp
fcompl
lock
fsubl
sbb
lock
push
lock
fsubl
lock
push
lock
lock
loop
add
ljmp
lock
fisubs
lock
lock
frstor
add
sbb
icebp
mov
push
icebp
mov
frstor
icebp
fisttpll
icebp
xor
shl
inc
fstp
lock
loop
add
ljmp
fdivrp
in
rcr
jmp
xor
or
out
adc
sbb
cld
jb
insl
hlt
bound
push
in
push
cmp
mov
mov
cmp
add
in
repnz
add
mov
cmp
cmpsl
inc
cmp
ja
cmp
cmpb
jg
cmp
bound
push
outsl
push
cmp
aas
mov
or
sub
cmp
and
clc
jmp
adc
add
sub
add
cmp
adc
sbb
and
cld
xchg
xor
sub
inc
xor
fs
xchg
je
add
insb
xchg
test
cmp
xchg
xor
xor
xchg
mov
in
xchg
les
cld
xchg
aam
pop
xchg
in
cmp
hlt
xor
adc
sbb
and
jl
xor
lods
xchg
inc
xor
xor
xor
xchg
test
mov
xchg
movsb
xor
xchg
mov
insb
xchg
les
jl
aam
adc
in
jmp
mov
sti
loopne
out
or
add
mov
sbb
out
sub
out
cmp
in
dec
inc
in
pop
and
out
imul
in
jnp
cs
mov
ss
fwait
add
stos
add
out
mov
add
out
fninit
dec
out
jmp
xor
out
or
mov
sbb
out
sub
out
cmp
out
dec
inc
push
out
pop
and
out
jnp
lock
ss
add
add
stos
add
out
mov
dec
shlb
idivl
rcl
negl
shr
out
or
shr
sub
or
cmp
repnz
cmp
sub
dec
aad
lock
aad
lock
adc
pop
aad
lock
push
lock
aam
lock
xor
mov
add
divb
sarb
negb
shlb
sahf
iret
push
testl
add
aad
out
lret
out
lret
out
cli
aam
out
fcmovbe
push
mov
push
lock
aam
dec
inc
xor
inc
push
xor
ds
int
cmpsl
xor
cs
clc
jmp
adc
divb
or
mov
xor
loope
xor
in
aaa
jge
jbe
jmp
add
adc
xchg
jge
xor
stos
jo
loope
xor
imulb
cmp
stc
cmp
jns
cmp
push
cmpsl
dec
aas
lret
aas
cld
cmpsb
enter
clc
ljmp
push
stc
lcall
mov
xor
xchg
loopne
cld
xchg
push
gs
fnsave
jmp
sub
add
mov
pop
xor
inc
sub
cmp
lods
xchg
cmp
lods
cmp
lods
sbb
cmpsb
push
cmp
cmpsb
push
iret
cmpsb
cwtl
cmp
cmpsb
or
popa
stos
sbb
jp
arpl
add
add
xchg
sbb
ljmp
push
loopne
add
or
in
cmc
lahf
loopne
add
in
loop
arpl
outsl
loope
faddl
out
xlat
shl
jno
and
inc
or
cmp
ss
insb
out
push
std
call
mov
repz
in
stc
add
in
push
add
jle
adc
mov
adc
xchg
loopne
in
mov
inc
fucomi
testb
or
inc
add
stos
rcll
add
or
into
xchg
in
int
out
and
xchg
icebp
lret
icebp
pop
iret
cmpsb
lock
iret
push
out
jne
jmp
fmuls
in
fcmovu
imul
push
ficoml
jmp
fcmovnb
jmp
fcmovne
out
aad
call
lods
aad
in
xlat
sub
out
xlat
out
mov
data16
add
repz
roll
add
rol
hlt
mov
pop
cmc
dec
rcl
repnz
aam
lds
jmp
fdivrl
xor
popa
test
icebp
popa
hlt
xor
xor
in
xor
das
enter
cmp
push
shll
cmp
aaa
inc
sub
add
fdivr
sub
xor
ss
hlt
xor
arpl
in
xor
cli
jns
mov
add
out
mov
fdivrl
in
push
mov
cmp
loop
clc
leave
adc
add
mov
stos
das
clc
popf
loop
add
lea
xor
nop
xor
nop
push
xor
xchg
pushl
mov
movsl
repz
xchg
jnp
in
nop
cmp
mov
jge
or
out
xchg
test
cmp
test
pop
aas
push
pushf
clc
call
cld
pushl
xchg
adc
xor
jge
pop
xchg
popf
xor
xchg
lds
mov
xchg
inc
xor
push
xor
shr
jecxz
out
xchg
inc
and
mov
call
out
in
int3
in
std
and
out
cmp
pop
out
push
and
insb
add
add
out
mov
call
out
aad
lods
out
in
loop
out
std
loop
call
sub
call
lret
call
pop
and
call
mov
or
clc
pop
lods
jmp
push
paddsb
incb
in
stc
inc
in
jmp
fldenv
jmp
fldenv
jmp
fldcw
jmp
fsts
jmp
ljmp
cmp
pushf
ljmp
xchg
out
fldenv
fisubrl
ljmp
mov
call
add
aad
loope
loop
xchg
out
push
xchg
inc
add
add
aad
rclb
aad
shrb
mov
dec
aad
rcrl
test
rcll
aad
into
mov
adc
nop
fsubs
into
inc
add
aaa
xor
lds
push
mov
insl
xor
outsb
sahf
xor
sub
pop
or
fbstp
cmp
jo
cmp
jb
clc
jmp
adc
cmp
outsl
gs
add
das
ljmp
das
push
push
sub
out
jno,pn
insl
sub
inc
fldpi
xor
add
enter
leave
mov
adc
popa
xor
aaa
cmp
in
aaa
cmp
mov
cmp
mov
cmp
mov
cmp
mov
popf
cmp
mov
cmp
out
lahf
xchg
xor
xor
aas
out
xchg
aas
lret
aas
out
mov
hlt
sahf
sarl
lahf
into
aas
and
in
add
inc
mov
stc
incl
sti
lods
add
out
lods
sbb
or
lods
aas
xor
lods
dec
xor
pop
xor
jle
adc
aam
add
pop
add
int
add
int
loopne
int
loopne
int3
cmp
mov
out
cmp
in
inc
cs
inc
and
mov
not
xlat
inc
dec
shl
and
rcrl
add
and
lcall
ror
add
rolb
std
xchg
shl
in
sarl
int
push
and
rol
inc
push
rcrl
aas
and
aam
std
insb
ds
andl
fcomp
push
add
xchg
leave
dec
fistl
mov
pop
lret
dec
lret
loopne
or
repz
int3
cld
fists
fstp
add
mov
and
jns
repnz
iret
or
xor
cli
loope
iret
popf
loope
into
mov
push
iret
inc
loope
sarb
dec
nop
lcall
shlb
inc
aam
aam
aam
shll
aam
shrl
aam
roll
aam
rorl
aam
xlat
adc
in
xlat
or
fcmovb
and
mov
mov
sarb
ja
lahf
add
call
dec
xor
loop
clc
lds
add
sub
push
xor
mov
mov
ss
pop
and
jno
cmp
clc
movsl
adc
add
bound
mov
and
inc
xor
xor
shlb
imul
int
xlat
in
jno
iret
add
call
stos
push
cmp
scas
cmp
scas
pop
ds
scas
clc
call
add
and
js
xor
call
mov
xor
mov
xor
mov
xor
mov
xor
xchg
xor
scas
aad
push
mov
xor
mov
xor
mov
xor
mov
xor
add
mov
xor
test
xor
adc
sub
adc
shll
xchg
filds
rcrl
ds
sarb
ss
push
xchg
aam
sbb
fdivl
or
or
out
jbe
stc
stc
mov
aam
call
mov
outsb
fsubs
aad
dec
mov
aad
add
cmp
dec
sub
jnp
sbb
or
or
in
cli
lods
fcomps
enter
scas
fnstenv
in
fstps
add
ja
xchg
fsubp
into
fdivrp
into
int
push
lret
fcmovu
pop
lret
add
cmp
in
fstl
sbb
fidivs
or
inc
lret
or
fisttpll
dec
fldl
add
xor
fs
lahf
lret
inc
fnsave
lret
push
fstpl
int3
cmc
fsubl
int3
pop
fnsave
int3
scas
fdiv
lret
scas
fcompl
int3
out
push
mov
adc
not
in
shlb
rol
shrb
jl
decl
inc
xchg
out
xlat
cs
inc
das
js
pop
cs
in
sub
xchg
aad
dec
add
mov
pop
sub
mov
shlb
cmp
push
xor
mov
xor
shl
mov
xorl
shr
mov
cltd
xor
xor
out
sbb
aaa
jae
jecxz
stos
dec
xor
inc
add
ds
cmp
lods
cmp
imul
cmp
bound
xchg
cmp
add
add
test
and
inc
cmpsb
jp
ja
clc
call
add
add
or
sub
cmp
popf
xor
mov
xor
mov
xor
mov
xor
mov
ss
aad
inc
lods
lods
mov
cmp
adc
cmp
leave
test
add
ret
cmpsl
test
ds
stc
mov
sub
jl
es
call
sarw
roll
psrlq
cmp
mov
into
add
pop
cmpsb
into
aaa
pop
mov
into
jnp
sbb
stos
decb
pop
jmp
pop
fcmovne
fnstenv
fs
aam
add
dec
and
adc
cmp
jle
sub
xchg
sub
adc
add
xlat
sahf
int3
add
cli
lret
mov
cmp
outsb
lret
and
in
leave
nop
fadd
enter
enter
enter
enter
mov
jae
mov
adc
out
add
std
sar
rcl
roll
add
and
arpl
sub
xor
adc
roll
iret
int
iret
pop
int
iret
int
iret
jne
ljmp
into
mov
loope
mov
mov
pushl
dec
push
sbb
and
cmpsb
push
aaa
push
push
ss
sbb
in
inc
xor
mov
inc
adc
add
dec
out
cmp
adc
push
add
jbe
mov
dec
cmp
mov
in
sarb
inc
mov
or
cmp
mov
cmp
xor
add
mov
nop
das
ljmp
sub
arpl
sub
xor
mov
xor
cmp
test
mov
xor
mov
xor
add
pop
mov
xor
mov
mov
xor
pushl
ss
mov
mov
ss
out
fdivl
test
jle
sti
aaa
mov
pop
cmp
stos
and
mov
movsb
cmp
sarb
xchg
stos
sbb
aad
dec
cmp
movsb
mov
cmp
arpl
pop
cmp
xlat
or
add
not
dec
sub
pop
sbb
sbb
xlat
and
movsb
shlb
in
push
rorb
push
push
aad
shrb
sub
jno
and
jg
adc
fcoms
and
jge
lods
adc
pop
xlat
roll
xlat
aad
push
xlat
jecxz
jo
jmp
add
in
fdiv
fisttpll
std
aad
rorl
dec
add
and
std
push
les
xlat
sub
stc
and
call
sub
movsl
ret
mov
ljmp
scas
ret
fwait
mov
ret
outsl
xlat
cwtl
ret
push
xlat
xchg
push
xlat
je
inc
xlat
mov
popf
mov
cltd
ret
enter
add
test
in
mov
lret
aad
ret
in
aad
ret
sti
aad
ret
jmp
aad
ret
out
pushl
cmp
mov
fs
pop
sha1rnds4
cmp
cmp
cmp
cmp
dec
cmp
pop
mov
ss
cmp
pop
lea
fldl
cmp
cmp
test
jmp
add
ret
push
adc
add
loop
das
dec
in
xor
insl
das
xchg
lds
sarl
sub
inc
mov
ret
filds
jbe
dec
sub
nop
movl
pop
xor
test
fnstenv
stos
push
xor
and
jp
loope
mov
cmp
mov
cmp
add
mov
popa
mov
cmp
mov
cmp
mov
cmp
mov
sarl
lea
mov
aas
push
scas
clc
clc
mov
incl
lods
xor
imulb
mov
pop
stos
mov
adc
xlat
test
frstor
xlat
jle
jno
or
js
add
xchg
aad
inc
jge
mov
add
test
sub
iret
lea
shlb
push
cwtl
lods
incb
std
call
test
scas
jecxz
shlb
loop
rorl
loop
shr
inc
mov
std
inc
mov
or
cmp
adc
sbb
stos
daa
push
mov
pop
inc
aad
incl
add
mov
jo
lods
leave
pop
int3
enter
mov
or
adc
int
movb
outsl
or
dec
and
push
rolb
les
rorb
loop
sbb
add
sbb
ret
scas
into
mov
xchg
into
mov
ret
pop
iret
jo
xor
out
ds
into
add
fmulp
repnz
add
imul
mov
mov
scas
aas
lcall
jg
jge
add
add
fcompl
sub
mov
push
xor
mov
bound
js
cmp
pop
addr16
xor
dec
xorb
pop
jge
cld
dec
cli
ss
stos
sub
adc
ss
jbe
out
cmp
add
pop
fnstenv
fs
pusha
xor
xchg
fldl
xor
loope
cmp
rorl
shll
cmp
movsb
push
lock
sub
ds
dec
xchg
ds
dec
into
jne,pt
cs
push
dec
push
aas
adc
aas
lods
dec
aas
aad
clc
ljmp
stc
call
mov
push
xchg
xor
push
mov
xor
push
loopne
pop
push
out
xor
push
adc
xor
pop
xor
push
xchg
pop
push
xchg
xor
add
adc
adc
add
pusha
and
into
jne
mov
mov
cmpsb
into
icebp
add
sub
cs
add
int
loop
int
loop
int
add
loop
shrb
out
xchg
inc
cmp
pop
ds
and
cmp
lret
and
sbb
lds
sbb
enter
iret
popa
cld
test
ret
rolb
mov
test
addr16
std
push
inc
add
adc
inc
inc
in
test
ja
stos
xor
shll
roll
add
das
mov
push
xor
add
cmp
pop
xor
rorb
xor
ja
stos
sarl
fcmovbe
cmp
sub
repnz
fdivs
xor
fadds
int
dec
xor
xlat
insl
xor
xlat
sbb
or
cld
ss
aad
ss
ss
sbb
sub
xor
test
add
imul
aaa
scas
lret
iret
ss
lret
insb
fistpl
ss
jne
fmul
xor
das
fndisi(8087
xor
xchg
test
pop
enter
fadds
xor
aad
xor
enter
pop
scas
xor
pop
push
xor
dec
add
pop
fidivrs
outsb
push
cmp
inc
jo
xlat
pop
and
repz
push
fdivrs
ret
dec
cld
cmp
cmp
pop
push
adc
cmp
dec
or
add
dec
es
dec
outsl
jo,pt
mov
aas
pop
dec
pusha
aas
outsb
dec
nop
aas
stos
inc
lds
mov
call
lcall
add
rorl
nop
push
mov
xor
push
xor
out
dec
xor
push
xchg
xor
add
push
movsb
xor
mov
xor
push
xor
push
loop
or
xor
push
cli
xor
push
push
xor
adc
push
push
and
adc
imul
int3
sarb
inc
or
fiadds
rcll
adc
dec
and
in
mov
sti
enter
enter
iret
adc
add
add
xor
and
iret
pop
in
iret
data16
iret
xchg
mov
inc
pop
into
inc
aas
mov
dec
daa
mov
into
mov
pop
sbb
flds
into
out
cmp
testb
int
incb
sti
shl
xor
rcl
xor
rclb
inc
shrb
xor
roll
add
dec
int3
arpl
push
int3
int3
cmp
lret
sti
lret
cmp
cmp
gs
xchg
aaa
inc
lret
outsb
aaa
cmpsb
lret
aaa
test
int
aaa
int
ss
int3
mov
xor
jne
push
cmp
cld
cmp
mov
cmp
and
dec
or
add
add
pop
mov
cmp
fmuls
jmp
adc
adc
push
inc
mov
jno
sbb
jecxz
cs
out
sub
jno
lcall
les
mov
jle
mov
arpl
gs
leave
inc
cs
inc
mov
xor
add
dec
push
xor
std
xor
jg
dec
xor
mov
xor
and
ss
push
xor
rcll
add
cmp
dec
push
cmp
mov
cmp
dec
adc
and
dec
loope
push
dec
push
cmpsb
add
fidivrs
inc
aas
pop
inc
clc
mov
cld
mov
add
dec
cmp
call
xor
push
xor
xor
push
test
or
adc
test
in
leave
push
push
test
mov
ror
clc
sub
inc
sti
rol
leave
jmp
sub
mov
clc
ficoml
iret
aad
adc
mov
outsl
inc
fcmovnb
fwait
cmp
cmpsb
xor
mov
and
repnz
ret
jmp
packssdw
or
push
add
adc
int3
shl
int3
fsubp
test
repz
rcr
loopne
into
xor
int
inc
outsl
int
inc
in
enter
iret
or
daa
das
ror
cmp
lret
or
jno
jl
repnz
or
xor
shll
adc
cmp
sbb
cmpsl
xor
jle
adc
rcl
xor
aam
add
ret
xor
add
rcl
sub
inc
rcll
sub
cltd
rcl
sub
iret
mov
xchg
iret
mov
loopne
xchg
cmpsl
into
loope
mov
lret
dec
cmp
int
ret
leave
aas
cmp
enter
and
xor
pop
xchg
xor
pop
test
dec
dec
arpl
insb
dec
jne
jmp
adc
add
add
bound
xor
bound
xor
cmp
push
inc
loope
pop
inc
add
fisubs
xor
loope
xor
int3
scas
xor
lds
xor
icebp
ss
xchg
ss
cld
xor
pop
fdivrs
clc
jmp
adc
add
lds
inc
shlb
into
inc
xor
les
xor
pop
shll
add
inc
mov
add
cltd
inc
iret
ss
add
adc
aaa
mov
xchg
aaa
pop
dec
cmp
ja
ljmp
cmp
inc
std
cmp
and
je
push
cmp
inc
scas
cmp
out
cmp
dec
jg
dec
movsb
cmp
dec
ja
mov
shl
imul
mov
ljmp
std
incl
add
das
push
xor
imul
mov
adc
xor
inc
xor
inc
pop
xor
inc
mov
inc
and
xor
icebp
xor
add
xor
add
xor
add
adc
sti
xor
xchg
xor
jle
ret
loop
xor
inc
xorb
aas
or
adc
xorb
pop
add
add
push
add
adc
cmp
and
pop
cld
shll
fwait
pop
add
cmp
add
mov
adc
xchg
xor
sbb
scas
aaa
add
sbb
lea
cmp
sub
cmp
pusha
cmp
cmp
cmp
das
cmp
mov
inc
xchg
xor
cltd
xor
xorl
jns
jnp
jno
dec
inc
mov
xor
inc
mov
xor
inc
fnstenv
sbb
xor
inc
icebp
xor
inc
mov
xor
inc
adc
add
push
or
fstl
cmp
push
sbb
std
push
and
int
sub
mov
sarl
cmp
ror
cmp
rcr
cmp
add
shl
cmp
shr
cmp
sar
cmp
rorb
cmp
cwtl
cmp
add
jmp
or
or
xor
and
xor
and
lds
and
aam
add
xor
xor
xor
insb
xor
xor
xor
xor
xor
xor
xor
add
xor
lock
shlb
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
aaa
cmp
cmp
jbe
mov
sub
cmp
sub
cmp
sub
cmp
sub
dec
cmp
xchg
cmp
jb
or
add
ds
cld
movsb
loope,pt
lods
ds
out
and
push
out
cmp
and
xchg
xlat
cmpsb
cmp
dec
pop
cmp
inc
cmp
cmp
mov
cmp
adc
std
push
pop
add
adc
sbb
add
xor
loope
xor
loope
xor
dec
xor
inc
lods
xor
mov
jl
add
xor
and
xor
and
cli
and
cld
xor
xor
xor
xor
js
imul
cltd
xor
xor
xor
xor
aaa
and
shlb
xor
adc
repnz
aaa
in
pushf
aaa
adc
and
lret
xor
movsb
xor
cmp
xor
cmp
aaa
divb
add
ss
inc
xor
fnsave
dec
ss
xor
ljmp
sub
je
mov
aaa
fcoms
xor
adc
mov
ss
cli
xor
jo
xor
ret
xor
jge
mov
shll
cmp
cmp
add
das
sti
cmp
daa
adc
rcrl
or
or
and
adc
sbb
push
pop
add
jmp
or
push
xor
faddl
xor
fst
xor
xorb
dec
pushl
add
bound
mov
push
data16
outsb
sub
ss
mov
inc
cs
ds
add
cs
cs
ds
cs
sarb
scas
fidivrl
xchg
loop,pn
mov
ljmp
sub
add
cs
adc
cs
and
push
sub
es
cmp
mov
inc
aas
adc
push
movsb
cmp
test
data16
add
add
pop
pop
std
jge
add
in
xor
add
cmc
add
xor
daa
xor
loopne
xor
movsl
xor
jecxz
xor
inc
xchg
xor
inc
jno
dec
cmp
adc
pop
sbb
shlb
ds
aas
jbe,pn
xchg
cmp
sub
jmp
idivb
das
fldcw
flds
or
add
test
cmp
cs
mov
cmp
sub
es
or
xchg
aaa
xchg
shll
sub
cmp
sub
cmp
add
jae
push
add
add
xor
stos
xor
xor
das
pushl
test
cmp
add
push
cmpsl
ss
mov
outsb
cs
fnsave
mov
and
xor
inc
xor
sbb
cmp
xor
divb
dec
pop
data16
push
pop
cmp
or
jecxz
jmp
cmp
cmp
adc
or
ret
loop
cs
inc
test
cmp
sub
inc
shll
or
xor
ds
xor
jns
and
and
mov
add
xor
add
les
jmp
xor
sbb
xor
mov
xor
ss
xor
aaa
jl
mov
aaa
lcall
cmp
sub
cmp
jp
add
dec
sub
add
cld
pushl
jb
xchg
cs
xor
xor
sub
xor
pop
ljmp
push
movsb
xor
aam
and
adc
mov
sub
das
sub
mov
jne
jecxz
dec
in
movl
cld
incl
add
stos
xor
or
and
cs
or
pop
sub
mov
shrb
pop
sub
pop
cmp
fcomps
adc
dec
cmp
dec
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
push
cmp
push
cmp
add
cmp
sub
cmp
sub
cmp
sub
cmp
add
sub
mov
arpl
iret
and
or
adc
cmp
and
cmp
mov
dec
and
cmp
pop
cmp
and
cmp
and
cmp
daa
adc
out
xor
aas
daa
dec
ss
daa
arpl
bound
mov
adc
out
jne
out
add
add
add
jns
fbstp
sbb
cmp
push
jb
jmp
adc
aam
fs
xor
fcmovu
xor
push
dec
cmp
inc
sarb
aas
repz
repnz
mov
add
addr16
xchg
sub
mov
xor
out
xor
and
sub
mov
sbb
add
les
dec
out
xor
ds
imul
test
dec
es
xor
movsl
xor
mov
adc
sti
lcall
add
dec
xor
or
and
adc
cmp
mov
xor
je
push
xor
das
test
jo
mov
mov
xchg
xor
xor
sub
mov
push
xor
add
sub
les
lock
xor
xor
xor
xor
xor
xor
xor
hlt
xor
xor
xor
adc
xor
adc
xor
xor
adc
sub
stos
sub
sbb
inc
add
test
sub
sub
sub
sub
sub
sub
add
sub
subb
cmp
ret
sbb
ret
sbb
and
int3
std
xor
aaa
adc
cmc
ss
sbb
ss
fnsave
xchg
fdivl
mov
sahf
ss
add
cmp
sub
cmp
sub
jge
dec
cmp
add
dec
cmp
jecxz
sbb
sub
cmp
sub
cmp
sub
cmp
sub
sub
sub
sub
sub
jne
aaa
sub
sub
sub
sub
sub
sub
add
add
jmp
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
test
ljmp
std
js
ljmp
ljmp
js
js
ljmp
ljmp
cmp
cmp
ljmp
std
ljmp
std
cmp
cmp
ljmp
std
ljmp
std
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
incl
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
call
add
add
add
add
add
add
add
add
add
add
js
add
push
add
add
add
js
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
incl
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
clc
std
clc
std
call
std
clc
std
incl
add
std
call
std
mov
std
ljmp
std
mov
std
ljmp
std
js
js
ljmp
ljmp
js
js
ljmp
ljmp
cmp
cmp
ljmp
std
ljmp
std
cmp
cmp
incl
add
push
cld
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
incl
add
push
call
push
call
push
call
push
call
push
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
cmp
add
sub
add
sub
add
cmp
add
cmp
add
sub
add
sub
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
push
add
add
add
js
add
push
push
cld
call
push
cld
incl
add
push
cld
call
push
cld
call
push
cld
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
incl
add
push
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
push
js
js
ljmp
ljmp
cmp
cmp
ljmp
ljmp
cmp
cmp
ljmp
incl
add
clc
std
clc
std
call
std
clc
std
clc
std
call
std
mov
std
ljmp
std
mov
std
ljmp
std
call
push
cld
call
push
cld
call
push
cld
call
push
cld
incl
add
push
cld
call
push
cld
call
push
cld
call
push
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
pop
cld
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
cmpsl
ja
data16
fucomp
mov
fbstp
push
test
mov
jle
mov
jb
cmp
lahf
aaa
sub
ja
inc
repz
add
testl
popf
in
mov
stos
and
and
and
lea
push
lcall
inc
add
dec
je
fcom
stos
mov
xor
or
xor
nop
xor
test
call
add
xchg
data16
xchg
mov
int
test
js
mov
imul
test
scas
iret
ficompl
in
cmpsb
fldt
lea
loopne
sahf
push
daa
push
cmp
mov
or
push
xorb
add
adc
jae
jge
js
mov
stc
mov
sbb
addr16
cltd
mov
js
mov
stos
cmp
lea
popfw
adc
bnd
aaa
jge
imul
and
or
inc
xchg
das
inc
pop
adc
ret
push
and
sbb
xor
lret
jle
add
xor
loopne
push
ret
repz
mov
je
xor
push
xor
aas
into
cli
aaa
mov
jecxz
mov
xchg
add
or
mov
xorb
out
pusha
sub
rolb
in
add
push
inc
lret
dec
cwtl
mov
nop
or
leave
jbe
push
cli
inc
push
popa
int
outsl
push
add
add
or
cmp
cmpsl
mov
imulb
into
mov
arpl
pop
lcall
subl
dec
push
inc
xorl
mov
lret
movsb
ja
dec
in
or
mov
xchg
mov
add
sub
les
push
stos
mov
mov
fbld
pop
jb
cmc
pop
call
add
scas
dec
inc
adc
mov
int3
int
lret
int3
lds
int3
inc
js
push
lcall
decl
ja
push
fbstp
outsb
xor
in
test
jp
cld
mov
pop
mov
cmpl
aas
fcmovbe
std
ljmp
mov
xorl
inc
loopne
mov
fs
cld
push
inc
js
in
leave
cld
dec
sbb
clc
lcall
inc
or
call
pusha
and
push
or
lock
testl
repz
add
jmp
jbe
hlt
xchg
aas
decb
jns
dec
hlt
sub
push
lock
cld
inc
or
fdivrl
add
sar
int3
sub
call
xchg
inc
or
les
sub
mov
popa
js
in
lcall
add
std
inc
or
sti
test
jge
add
mov
rorb
cmp
int3
int
lret
int3
lds
int3
inc
jbe
xorl
clc
mov
inc
jns
out
xchg
addl
push
add
and
mov
aas
add
repz
rolb
popf
sub
mov
jmp
std
aas
add
repz
call
cmp
cld
adc
add
sub
test
test
cmpl
xor
lcall
push
mov
and
push
add
cmc
pop
cmp
add
stos
xor
aad
lret
int3
int
lret
int3
lds
jmp
xchg
pop
cmp
aas
jl
xor
mov
lret
int3
dec
xor
lret
int3
in
jmp
int3
hlt
dec
mov
clc
dec
lcall
mov
int3
dec
xor
lret
int3
fs
xor
add
push
incb
add
call
clc
imul
clc
popa
pop
mov
movb
or
cld
mov
or
mov
sti
mov
jmp
dec
mov
add
or
xchg
inc
decb
pop
or
loop
test
add
cld
push
std
mov
hlt
cld
dec
xor
inc
jae
add
imul
add
inc
adc
mov
movsb
mov
int3
int
lret
int3
lds
jmp
or
add
jne
push
mov
out
adc
int3
int
lret
int3
lds
jmp
mov
test
xorb
testb
aam
test
and
pusha
pop
xchg
jp
or
add
push
rolb
add
adc
mov
inc
jl
adc
cld
mov
inc
lcall
mov
mov
cmc
add
inc
std
jns
lock
mov
inc
nop
clc
movups
xchg
jns
or
jp
clc
lcall
dec
or
or
lock
ja
or
add
jp
or
ret
add
jle
clc
mov
int3
les
xorl
inc
or
in
mov
mov
pop
cld
push
add
mov
call
js
lock
ret
out
add
jge
add
add
lock
scas
fisttps
and
or
add
mov
cld
push
add
sbb
pop
cmp
mov
jl
adc
push
mov
push
or
jns
jno
dec
or
mov
in
mov
cld
inc
add
hlt
mov
cld
adc
dec
call
add
adc
int
mov
pusha
jl
adc
add
int3
dec
call
add
add
add
jg
add
ja
xor
int3
sbb
sub
clc
decl
test
mov
mov
inc
clc
or
xchg
push
sbb
mov
std
push
lcall
jle
ret
or
push
test
jns
mov
dec
jl
or
mov
adcl
dec
add
sub
pusha
jl
add
repnz
lcall
ja
pop
push
xor
int3
fs
xor
addr16
sbb
call
clc
jns
cld
aas
adc
clc
inc
pop
cmp
into
inc
jl
sbb
cld
mov
push
lcall
mov
lret
int3
in
jmp
xchg
pop
cmp
push
add
add
sbb
out
adc
add
movsb
mov
int3
in
jmp
xor
mov
ds
mov
dec
hlt
lcall
dec
stc
jne
clc
mov
add
mov
inc
xchg
ret
testl
mov
jne
sbb
stos
pop
jne
jbe
clc
add
lcall
push
cltd
jne
adc
add
add
test
jne
mov
dec
test
add
sub
push
in
and
in
cmp
lret
int3
dec
xor
int3
inc
xor
int3
les
xorl
xor
adc
add
add
dec
jmp
test
or
add
dec
clc
inc
mov
dec
jmp
rorl
adc
hlt
jb
out
adc
lcall
mov
jmp
mov
add
sar
aam
add
add
add
add
add
adc
add
sub
les
add
add
add
mov
mov
add
adc
call
out
adc
test
shl
popf
in
aas
clc
or
test
adc
pop
mov
push
mov
fnstsw
inc
mov
mov
inc
or
or
add
adc
dec
lret
int3
inc
dec
lret
int3
les
rolb
adc
add
mov
cwtl
aam
test
add
cmp
aad
mov
and
mov
adc
push
xor
inc
call
adc
call
into
hlt
out
add
cwtl
out
push
test
push
push
ds
lock
jecxz
pop
and
sbb
test
shl
rcll
add
add
roll
add
adc
push
mov
xor
rclb
inc
hlt
lcall
cmp
out
leave
adc
je
mov
xchg
mov
test
mov
mov
cld
mov
test
icebp
int
cmp
push
icebp
or
test
mov
adc
adc
shl
mov
inc
add
adc
cmp
test
cmpl
in
sub
cld
mov
and
add
dec
jns
cmc
jmp
ret
or
test
jae
lcall
fcompl
mov
mov
push
test
das
adc
test
rolb
add
pusha
cmp
lock
out
adc
adc
test
test
iret
gs
out
mov
xchg
incb
push
add
jne
cmpsl
aas
push
mov
sti
push
sub
stc
push
andl
dec
jne
dec
fmuls
pop
cld
inc
and
into
fisttps
aam
dec
mov
out
add
xor
or
mov
adc
add
popf
stc
test
xchg
adc
xchg
xchg
mov
out
adc
cmp
inc
adc
call
adc
dec
mov
call
xchg
inc
or
dec
sub
adc
daa
mov
cmp
mov
in
sahf
inc
jns
decl
or
dec
mov
out
adc
out
cmp
or
inc
cmp
idiv
push
jg
add
mov
decl
adc
out
clc
cmp
adc
xchg
xchg
inc
jmp
fisttps
adc
inc
sub
adc
mov
sti
incl
add
mov
shl
add
mov
cmp
shll
out
adc
clc
push
inc
sub
sti
push
cmp
mov
mov
int3
inc
dec
lret
int3
les
test
fdivrl
fs
push
pop
rolb
mov
pop
call
pop
sub
add
fistl
dec
lret
int3
fs
push
cmp
add
pusha
imul
add
jge
clc
call
cmp
add
add
in
test
aam
lret
int3
les
rolb
add
adc
fmul
add
add
repz
add
int3
cmp
call
add
inc
sub
xchg
add
mov
pusha
call
cmp
mov
sub
clc
add
lods
or
or
out
adc
add
adc
inc
adc
add
adc
jmp
roll
add
add
add
jne
stos
and
out
adc
rolb
test
mov
out
cld
mov
adc
mov
sub
cmp
jmp
cld
aas
add
push
xor
rolb
popf
insb
stc
ret
inc
or
out
adc
pop
add
add
add
mov
les
fs
push
add
adc
jb
out
adc
call
gs
call
xor
add
adc
clc
orl
fs
decl
adc
call
lods
das
clc
call
xor
cld
ljmp
loopne
mov
shrb
sti
push
aaa
jl
sbb
call
subl
jnp
push
add
inc
cmc
roll
adc
sti
push
mov
add
int3
repz
push
lods
mov
mov
inc
lea
jo
rolb
xchg
sub
call
add
or
std
xchg
mov
or
fs
incl
fdivrl
test
adc
mull
adc
clc
nop
aas
out
adc
test
add
insl
sub
adc
divl
sbb
call
flds
sub
decl
adc
mov
enter
repnz
mov
aam
inc
adc
dec
testl
ret
idivl
nop
daa
incl
adc
test
jmp
out
adc
call
adc
cmp
mov
add
out
sbb
add
shrl
and
inc
adc
addr16
sbb
call
sub
xor
mov
mov
pop
rolb
int3
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
xor
xor
test
adc
add
jmp
cmp
cmp
into
cmp
cmp
pop
aas
sbb
cmp
cmpl
adc
add
inc
add
add
xor
xor
das
out
xor
or
sbb
pop
xor
xor
add
shll
push
xor
xor
cltd
xor
xor
xor
xor
xor
xor
xor
or
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
loop
inc
xor
lea
xchg
xor
addr16
xor
or
and
add
das
aaa
cmp
pop
aaa
inc
fdivl
pop
lods
ss
scas
ss
mov
ss
mov
popf
ss
mov
ss
xor
aaa
pop
xor
aaa
jne
xchg
xorb
mov
test
aaa
les
aaa
mov
cmc
aaa
xor
cmp
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
outsl
xchg
and
cmpsl
in
aad
cld
jge
jno
mov
mov
leave
push
dec
xchg
aad
test
push
jmp
rcll
fidivl
add
cli
loope
nop
push
fdivs
cmp
adc
lret
lret
hlt
fsubr
add
repz
scas
mov
lahf
dec
mov
xchg
cld
lods
cmp
and
sbb
xchg
shlb
lcall
jno
add
add
clc
int3
std
mov
or
pop
push
lock
push
push
push
outsb
loop
push
les
mov
int
sti
pop
cs
sbbb
xor
ja
add
xlat
fisubrl
loopne
cmpsb
arpl
loopne
into
adc
push
dec
inc
mov
fcomi
push
sbb
fisubl
inc
mov
mov
mov
hlt
xchg
sbb
mov
sub
xchg
cmp
add
outsb
add
dec
xchg
or
and
test
mov
jo
push
pusha
clc
es
push
add
cmp
add
fstpt
push
es
out
outsb
add
mov
push
je
out
or
lods
jmp
lock
test
push
adc
pop
and
js
shrl
and
xor
cwtl
mov
mov
or
pushf
add
sub
orb
lds
in
bnd
lods
mov
cwtl
jle
data16
add
mov
adc
adc
mov
mov
adc
dec
inc
mov
xor
test
sbb
pop
repz
insb
push
jle
xor
push
pop
mov
fstp
dec
stos
int
shll
sub
insl
out
punpckldq
mov
dec
mov
ret
shrl
ds
in
mov
repz
dec
dec
push
dec
fiaddl
pop
ret
mov
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
