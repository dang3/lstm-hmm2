add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
push
add
pusha
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
or
add
ja
pop
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
rolb
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pushf
add
add
add
add
add
add
xor
xor
bound
xor
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
cmp
or
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
outsl
add
outsl
add
je
add
jno
insb
add
add
jbe
add
add
add
outsl
add
push
add
je
add
jo
insb
add
jb
add
jne
imul
add
outsl
add
jb
arpl
add
add
add
add
sbb
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
dec
pop
jne
bound
addr16
sub
xor
add
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
data16
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
inc
push
pop
push
imul
outsl
add
jae
sub
push
add
sub
and
das
data16
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
xchg
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
insl
add
arpl
jb
outsl
add
outsl
add
je
add
jno
insb
add
add
jbe
add
add
add
outsl
add
push
add
je
add
jo
insb
add
jb
add
jne
imul
add
outsl
add
jb
arpl
add
add
add
add
adc
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
dec
add
add
add
jbe
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
std
ljmp
mov
sbb
mov
stos
cmpsl
inc
push
pop
lret
mov
les
in
or
jno
jbe
loope
xor
mov
pop
xor
xchg
xchg
pop
mov
out
pop
loopne
mov
mov
test
inc
add
sub
cltd
out
dec
dec
or
inc
jmp
mov
ret
cwtl
lds
aam
cmc
xor
hlt
pusha
shl
xchg
in
mov
push
scas
aad
popa
mov
scas
stos
andl
roll
mov
mov
fldenv
jns
dec
push
into
sarl
xchg
jae
push
shrb
push
add
repz
orb
sub
add
sbb
xchg
dec
sti
pop
loope
into
hlt
adc
rcll
xlat
iret
mov
int
aam
iret
mov
xor
pop
mov
jmp
out
lods
lock
rcl
cmpxchg
mov
aaa
movsb
xchg
dec
iret
mov
lret
and
lds
loopne
movsb
testb
sub
cli
je
test
push
popa
xorb
xorl
jge
cmpsl
jb
push
add
add
adc
jb
out
pop
or
mov
leave
jno
call
or
xchg
or
imul
prefetch
xor
and
xor
mov
rcrl
push
pop
ret
xor
repnz
outsb
sub
xchg
pop
aas
ret
mov
jae
gs
in
xor
pop
scas
sub
mov
lock
xchg
add
loope
mov
fstpl
ret
mov
mov
insl
mov
pop
rolb
je
mov
fsub
push
mov
icebp
jecxz
data16
out
sbb
pop
adc
loopne
lods
or
shll
mov
xorl
adc
push
stos
sbb
pop
cld
arpl
push
or
lcall
shll
dec
push
pop
sub
mov
loope
xchg
je
outsb
cs
or
xchg
jno
inc
sbb
jbe
lock
xchg
lock
movsl
leave
jnp
ljmp
mull
data16
jge
std
addr16
setge
clc
dec
bound
push
xchg
adc
jo
jmp
xor
jnp
cmc
fmull
mov
push
push
and
and
xchg
push
bound
mov
mov
and
inc
jge
imulb
mov
rcrb
add
hlt
sbb
mov
or
xchg
ss
sbb
mov
push
in
cld
mov
icebp
xchg
or
and
sti
and
and
gs
daa
sub
mov
jns
adc
mov
inc
and
and
call
faddl
stos
ret
ljmp
cmpsl
jbe
int
hlt
and
mov
mov
call
add
xlat
ss
mov
fdivp
orl
dec
in
int3
mov
fcompl
vmovupd
pop
cmp
or
stos
mov
mov
sbb
dec
es
cmpsl
inc
jle
push
ja
pop
cmpsl
leave
insb
sbb
inc
cmp
and
sti
or
inc
jo
scas
mov
push
mov
pushf
test
xchg
fmulp
mov
fdivrl
in
das
popf
daa
sbb
add
mov
inc
pop
pop
xchg
sbb
mov
mov
dec
xchg
sub
dec
mov
jne
mov
adc
jb
pop
iret
mov
insb
out
jmp
cld
dec
ss
push
aam
int
call
pop
mov
mov
js
xchg
shlb
xchg
je
push
adc
fdivl
xor
test
inc
sti
movsl
fs
inc
out
aam
pop
cmp
js
mov
sub
dec
movsb
cmpsl
inc
outsl
pop
xor
fidivrl
into
dec
dec
icebp
sub
jb
xlat
lret
lcall
outsl
adc
es
mov
cmp
or
pushl
inc
or
mov
repnz
in
test
add
cmp
lock
ror
cld
dec
xchg
movsb
and
adc
lock
sub
inc
inc
jp
jge
mov
mov
xor
pusha
push
push
and
stos
call
push
pop
mov
enter
sub
sub
dec
stos
mov
push
int3
push
mov
xchg
hlt
hlt
into
jae
in
test
lds
pop
sub
in
mov
stos
adc
int
mov
inc
mov
les
pop
into
mov
jnp
adc
jmp
icebp
xchg
xchg
lret
aam
fisubrl
and
dec
pop
cmp
ljmp
mov
test
push
enter
dec
pusha
outsl
and
fwait
std
iret
ds
mov
pop
xor
jae
mov
lods
sub
in
jno
pop
dec
sahf
xchg
push
push
push
xor
movsb
push
cwtl
rolb
cmc
push
sbb
lea
mov
jmp
xchg
jle
cltd
and
mov
rolb
mov
arpl
rcr
ret
pop
outsb
cmp
into
adc
and
inc
aam
add
imul
and
cmp
or
fsubr
add
mov
cmp
fstps
pop
popa
or
inc
fucomip
cmpl
push
mov
sahf
dec
xor
roll
dec
xchg
daa
sub
cli
push
sbb
fistpll
pop
iret
or
mov
push
sbb
movswl
fmuls
mov
lds
in
daa
cmp
in
aas
sub
lahf
cmp
inc
dec
pop
popl
sub
jno
inc
shl
testl
sub
pop
rcll
xlat
pop
dec
mov
dec
mov
or
lret
dec
rclb
cmpsb
sti
or
sub
pop
push
addb
shlb
test
cwtl
in
mov
mov
sarb
mov
mov
movsb
cmp
cmp
iret
clc
daa
andl
dec
sub
jns
inc
repz
call
sbb
es
in
jl
fists
mov
jle
cmp
es
sbb
push
inc
mov
cwtl
xchg
and
xchg
decl
enter
aas
scas
clc
addr16
adc
push
fwait
and
jge
sarb
in
ljmp
pop
lahf
adc
pop
je
jb
pop
push
jae
rolb
add
jbe
or
pop
mov
pop
enter
pop
flds
or
ret
popl
push
in
out
adc
mov
aad
jmp
sbb
dec
cmp
pop
data16
push
hlt
inc
scas
ficompl
cmp
push
push
adc
adc
adc
lret
inc
daa
mov
pop
push
sti
dec
dec
enter
pop
jns
push
mov
addb
iret
out
test
mov
adc
sti
bound
rcl
sti
xchg
pop
into
jae
mov
nop
xchg
loop
cmp
mov
fs
ss
push
popf
fldt
xchg
inc
xchg
mov
jp
icebp
lahf
das
out
std
cmpsl
std
or
loop
mov
jmp
cmp
stos
jns
jbe
cmc
test
nop
adc
stos
std
gs
imul
inc
test
push
xlat
popf
repnz
pop
dec
inc
push
gs
ret
push
mov
pop
sahf
mov
dec
fisttps
dec
push
push
mov
imul
leave
sub
ret
xor
adc
test
jno
fists
mov
cmp
call
adc
push
dec
cli
in
pushf
imul
push
lods
push
push
push
push
and
mov
mov
fidivrs
je
mov
mov
imul
xor
dec
sbb
iret
imul
push
dec
and
pushf
sbb
insl
das
hlt
and
aaa
xchg
ds
fmul
gs
clc
pop
cwtl
sbb
sub
je
mov
mov
xchg
cmp
test
loop
or
and
es
sub
iret
rol
jo
xlat
sub
imul
gs
mov
shr
test
push
sahf
out
push
je
out
mov
jns
add
jge
in
rcrb
or
ret
xchg
in
sbb
xchg
mov
stc
in
xor
pushf
test
test
std
xor
push
and
negb
roll
lods
xchg
nop
cmp
jmp
mov
push
jo
in
outsl
loop
dec
cwtl
pushf
scas
pop
add
stos
pop
adc
cmp
pop
lret
cmp
mov
decb
fwait
notl
dec
shrb
in
jl
loopne
ret
or
cmp
insb
mov
mov
pop
repnz
inc
insl
mov
push
dec
mov
jno
imul
mov
leave
nop
push
call
std
push
test
jmp
stos
sub
lret
sub
pop
jmp
sub
inc
test
jbe
fs
xor
inc
xchg
test
cmpsl
jp
inc
xor
add
aam
lahf
xchg
fiadds
rorl
pop
fsub
mov
push
xorl
test
jno
or
adc
pop
push
sti
push
xchg
inc
negl
gs
daa
js
inc
xor
aas
out
loop
jmp
cmp
fcmovnbe
iret
jae
add
repnz
mov
mov
ret
adc
add
inc
arpl
nop
push
jecxz
push
shr
in
mov
imul
ss
jmp
mov
stos
jno
lcall
push
dec
mov
scas
popf
aam
imull
out
pop
or
imul
mov
push
xchg
add
ficoms
out
int3
sbb
xchg
inc
dec
outsl
pop
cld
out
stos
clc
sarb
shr
mov
and
loope,pn
cmp
stos
xchg
adc
insl
cmp
sahf
stos
mov
jno
sbb
lock
jno
push
pop
mov
aad
jo
inc
lds
mov
jp
nop
sub
nop
clc
rol
dec
push
jecxz
sub
out
dec
xchg
clc
inc
inc
or
stc
movsb
mov
lds
lds
leave
push
ljmp
add
inc
sbb
test
ljmp
aas
jno
adc
cmp
ljmp
sub
notl
lret
add
sahf
movsl
fiadds
and
cmpsl
lahf
inc
icebp
nop
loopne
loope
mov
icebp
push
fsubs
mov
xorl
add
daa
stos
adc
xchg
and
repnz
cmp
popf
jg
icebp
xchg
inc
out
rclb
sub
mov
rorb
push
hlt
adc
sub
ljmp
mov
icebp
dec
inc
out
cmp
pop
mov
dec
xchg
inc
roll
and
dec
mov
ret
or
push
sbb
mov
out
push
mov
xor
cmp
sarl
sbb
push
out
loopne
jl
aad
pop
xchg
insb
xor
dec
xchg
lcall
sub
lea
jle
incl
call
stc
shlb
sbb
popf
cwtl
xor
ficoms
xor
les
sahf
jo
je
sbb
push
mov
inc
sbb
sbb
push
push
inc
loope
mov
clc
mov
data16
in
clc
pop
xchg
aad
divb
ret
lret
pop
push
std
xor
sub
cmpb
icebp
mov
insb
push
xchg
bound
les
stos
push
mov
dec
loope
dec
jecxz
pop
movsb
jle
mulb
fsubr
popa
cmpsb
or
test
adc
xlat
mov
dec
sub
mov
xchg
repnz
mov
ja
and
sbb
push
movsl
mov
pop
adc
es
mov
push
dec
xor
sub
stos
jo
adc
and
fcoms
xchg
sub
xor
mov
sbb
dec
mov
mov
jo
ljmp
rcll
and
out
xor
outsb
inc
or
cmp
jmp
and
aas
aad
stos
push
sub
stc
enter
or
stos
xlat
insb
dec
fwait
insl
jle
call
xchg
faddp
xor
adc
pop
ficomps
xor
add
stos
or
leave
pop
xchg
or
lods
dec
leave
in
or
mov
out
push
icebp
data16
cli
aad
cmp
popa
and
out
icebp
push
dec
outsb
mov
out
dec
aad
mov
push
lods
in
push
xor
jg
inc
inc
daa
dec
cmp
popf
sub
cmc
cmc
clc
add
mov
cmpsl
pop
mov
fldt
mov
push
shlb
jmp
rclb
xlat
mov
bound
push
subps
jmp
lock
or
and
leave
dec
icebp
pop
sbb
mov
in
mov
ret
adc
mov
lret
aas
sbb
mov
jnp
test
movsl
addr16
pop
add
int
scas
fsubs
fsubp
xchg
ss
sub
mov
popa
adc
outsl
mov
rcrl
lods
lret
sbb
and
pop
push
faddl
pop
cmc
test
pop
jne
mov
mov
sub
xchg
mov
dec
pop
lods
push
in
cmp
imul
and
into
aad
xor
cltd
mov
pop
hlt
sub
lea
jno
pop
loop
push
ds
pushf
cmpsb
cmp
lahf
add
lret
les
shll
sbbb
das
dec
sarb
lret
lret
lret
in
sbbb
ret
sbb
pop
leave
into
aam
cmp
dec
sbb
arpl
ds
fsubr
lcall
jnp
ret
cmp
pop
lahf
imul
mov
outsl
sarb
dec
stos
xchg
jb
cmp
aas
dec
pusha
sbb
out
out
daa
rcrb
cmp
jecxz
lcall
fldt
rol
push
lock
jge
push
inc
call
push
das
xlat
rclb
cmp
leave
ret
test
jae
sbb
add
mov
push
push
mov
bswap
or
xlat
jle
enter
std
aaa
imul
fwait
jb
adc
mov
icebp
call
push
xchg
jae
sbb
sbb
shrl
popf
in
insb
sub
ss
dec
pusha
mov
outsb
sub
cltd
call
jecxz
xor
dec
lret
or
and
negb
jecxz
xchg
dec
or
jo
dec
sbb
push
cli
jg
hlt
sbb
mov
pushf
mov
xchg
clc
loope
jp
push
xor
xchg
loopne
xor
pop
push
jns
int
shlb
rol
pop
cwtl
xchg
and
dec
cmp
xorl
push
lea
cli
arpl
push
sbb
out
in
push
mov
ds
leave
imul
je
popa
pop
and
movb
mov
mov
dec
inc
cltd
insb
sti
pop
std
mov
dec
out
scas
enter
pop
xchg
cmpsl
out
enter
rorb
or
enter
pop
insb
add
sbb
mov
int
mov
and
mov
xchg
xchg
cmp
adc
add
sub
clc
jle
jmp
dec
pop
into
call
lea
mov
mov
xor
imul
mov
xchg
mov
pop
mov
push
jno
mov
sub
push
push
mov
or
sbb
dec
dec
in
scas
cmp
popf
jb
idivl
aam
add
or
pop
lods
cmp
pop
out
inc
adc
int3
cmp
push
or
sbb
mov
test
in
and
push
xlat
rcrl
in
negb
mov
mov
movsb
mov
aas
gs
and
cltd
sub
insb
xchg
cld
adc
mov
fwait
push
cmp
or
mov
rcrb
fidivrs
incb
xchg
mov
test
mov
ljmp
imul
jb
push
push
xchg
pop
sub
test
and
test
mov
cmpsl
pop
imul
popf
inc
cmpsb
leave
mov
pop
call
cwtl
push
add
push
fstps
incb
cmp
cmp
mov
xchg
lcall
scas
nop
adc
fadds
jnp
xor
pop
scas
mov
hlt
dec
mull
xor
push
jnp
in
lds
cmp
jl
push
aad
mov
mov
enter
clc
push
sub
push
loop
inc
js
fiadds
insl
inc
or
andb
cli
scas
insb
pop
adc
lods
cmpsl
xchg
jno
insl
out
jle
repz
cmp
sarl
imul
mov
or
adc
mov
enter
mov
jae
pop
shrl
pandn
pop
mov
and
xor
adc
lahf
loop
xchg
popa
fs
xchg
icebp
movsl
dec
jo
adc
dec
dec
cltd
sbb
cmpsl
xor
jno
test
push
add
inc
pop
stos
popf
mov
in
dec
mov
test
data16
inc
loop
sbb
cmp
in
mov
dec
inc
dec
jae
sub
out
in
or
clc
sub
pop
add
shll
pop
divl
out
jecxz
mov
icebp
or
push
icebp
bnd
mov
cli
add
pop
dec
add
ret
mov
push
or
iret
jge
mov
das
pop
adc
insb
cli
in
leave
rorl
xor
sbb
xchg
test
clc
incb
movsb
push
xor
neg
push
inc
or
xchg
fbstp
ret
and
test
cli
dec
stc
out
mov
jo
sbb
dec
inc
xchg
in
mov
ror
sahf
and
push
mov
daa
cmc
cmp
mov
ret
movsb
and
data16
mov
mov
and
and
sbb
push
outsl
xchg
inc
and
pop
and
add
fadds
jae
aad
xor
aam
mov
add
pop
mov
and
jle
in
xor
and
sarb
int3
addl
jmp
sub
and
pop
cmc
std
pop
repnz
pop
ss
jbe
into
filds
cmp
rcrb
sbb
sbb
outsb
mov
pop
stos
addl
je
adc
movsl
jnp
ss
and
add
sub
sub
dec
lahf
cmp
push
shr
cmpsb
out
dec
movsl
shlb
xchg
stc
out
or
jns
int3
leave
movsl
mov
test
sub
cmc
popa
cld
mov
jns
and
or
inc
fwait
xor
js
jecxz
ds
sub
xlat
nop
inc
add
jmp
rcrl
or
cmpsl
outsb
inc
push
sbb
jmp
pushf
jecxz
out
lsl
push
push
pop
mov
sbb
pop
sbb
aad
stc
shl
les
jmp
mov
popa
lret
sub
shr
jge
push
pop
dec
jle
or
mov
jg
push
pop
int
push
sarb
fistpl
cmpsb
or
lahf
jo
ror
ja
std
sbb
loopne
xchg
xchg
jmp
push
pop
pop
mov
jecxz
in
outsl
jge
stos
jg
pop
xlat
vpsllw
test
sbb
imul
pop
pop
inc
lcall
aas
jl
arpl
mov
sbb
js
lahf
push
out
adc
movsl
enter
xor
fcomps
fnstsw
cmp
leave
loopne
sbb
test
jb
cld
mov
jnp
nop
mov
std
fwait
mov
mov
arpl
lods
in
cmpsb
sbb
cwtl
sub
mov
push
cmpsl
mov
addb
cltd
jge
xchg
sub
sbb
xchg
or
icebp
daa
dec
into
sbb
shrb
sub
or
sub
mov
es
xchg
xchg
loop
jp
inc
inc
mov
sbb
cmp
mov
ret
cwtl
out
gs
dec
sub
jle
push
inc
movb
lret
dec
test
loope
daa
jb
faddp
leave
popf
fdivl
mov
inc
insb
adc
jle
fdivp
mull
lahf
xor
lods
clc
scas
xchg
nop
jne
or
int
imul
mov
aas
test
rorl
sahf
xchg
push
mull
clc
imull
fistl
mov
dec
lahf
xchg
shll
jo
inc
dec
push
call
xor
imull
xchg
movsb
jne
mov
test
add
outsb
jmp
and
mov
fdivr
cli
mov
xchg
pushl
mov
mov
cmp
rorb
lds
mov
xchg
inc
xor
push
into
std
adc
ds
fisubs
mov
mov
pop
pop
xor
push
gs
hlt
popf
or
lret
fcomps
ficompl
push
clc
daa
shlb
dec
filds
enter
aam
sbb
mov
sarb
inc
cltd
insl
and
rcrl
jle
inc
imull
fwait
adc
push
push
and
jb
jmp
add
inc
dec
pop
sar
add
loope
mov
sbb
mov
jnp
inc
cmp
cmp
std
imul
xor
lcall
pop
mov
xchg
jns
dec
lods
in
jg
stc
enter
sub
das
sahf
cld
dec
adc
push
es
dec
push
adc
pop
jno
xchg
ds
test
and
lret
pushf
mov
push
push
pop
adc
mov
pushf
shrl
add
dec
xchg
aam
sub
xchg
push
pop
out
imulb
gs
mov
add
clc
fcmovb
in
push
hlt
cmc
in
test
lods
and
cmp
or
mov
in
and
nop
pop
aas
pop
pop
adc
dec
cs
stos
mov
add
pop
jnp
push
aas
test
loop
mov
dec
sbb
gs
push
cmp
mov
movsl
inc
lahf
lcall
sub
neg
movsb
hlt
cmpsl
ljmp
aad
sbb
jno
out
cmp
xchg
sbb
and
fcompl
mov
pusha
lret
pop
dec
das
mov
inc
xchg
mov
dec
inc
test
sbb
and
mov
pop
adc
int
fisubrl
lods
scas
lahf
lea
pop
xchg
je
inc
leave
push
dec
ljmp
arpl
int3
xlat
shl
test
imul
test
lea
call
fiaddl
or
daa
test
mov
sti
push
xor
clc
enter
xchg
test
addr16
inc
shlb
dec
jle
ljmp
fisttpll
andl
les
pop
jnp
in
notl
std
andl
lret
mov
decb
rcrl
std
xchg
or
cmp
mov
adc
mov
push
imul
sarl
add
jle
mulb
jmp
insl
inc
and
ret
fisubrs
insl
inc
pop
dec
imul
sbb
mov
xor
std
lret
sub
xchg
and
or
test
andl
add
mov
ficoms
and
jp
mov
or
xchg
jne
xor
pop
pop
sub
or
mov
lds
repz
gs
scas
adc
sbb
imulb
xchg
jecxz
stc
dec
addb
add
call
mov
mov
ljmp
lret
out
dec
xchg
pushf
mov
lret
iret
movb
aaa
sub
fldt
pop
sbb
mov
daa
js
push
xor
xchg
jo
inc
jmp
add
out
add
xchg
adc
ret
add
dec
or
add
lret
add
lahf
out
or
sub
add
sub
mov
adc
cli
mov
into
jb
outsb
push
das
dec
ljmp
mov
inc
inc
dec
push
jmp
push
adc
add
mov
cmc
out
push
xchg
and
cltd
mov
stos
jo,pn
ffree
inc
cwtl
cmp
pushf
push
pop
stc
mov
add
fidivl
mov
stos
cmp
lock
lret
inc
xor
cmp
sub
inc
lcall
cmc
sbb
add
dec
sbb
sbb
jbe
mov
add
test
add
cmc
pusha
xchg
sub
sub
mov
cli
pop
mov
jmp
mov
jae
inc
pop
jae
inc
sbb
sub
repz
push
subl
cmovl
jbe
sub
aas
jns
jno
lahf
pmaddwd
incl
sti
xchg
cld
pop
or
lret
pop
push
and
xor
inc
and
fs
dec
in
imul
jb
and
mov
out
cmpsl
jp
daa
ss
sub
jmp
inc
xchg
sti
adc
add
fs
mov
cmp
into
mov
mov
cmpsl
sbb
jge
inc
or
xchg
cmp
mov
lods
and
mov
int
add
insb
dec
int3
cmc
mov
repz
xchg
pop
jge
mov
cmpsb
daa
sub
test
pop
pop
mov
stos
cwtl
pop
test
jmp
cmpsl
jg
pop
in
leave
pushf
pop
mov
dec
mov
fisubrl
mov
das
add
sbb
out
lret
dec
lret
mov
dec
movsb
iret
call
scas
js
and
in
xchg
sbb
aaa
push
test
or
addl
stc
fisttpl
sbb
pop
je
ljmp
mov
lret
imul
sbb
fdivrp
or
enter
bound
push
add
push
daa
pop
jne
mov
sub
mov
or
mov
mov
add
and
inc
test
sub
mov
mov
test
lret
adc
shrl
popa
fildl
mov
mov
pop
mov
ja
movsl
or
shrb
sub
inc
or
ret
pop
adc
repnz
mov
test
jg
stos
test
jae
ret
shl
lock
pushf
shll
ds
cmp
pop
pop
jo
xor
push
push
jecxz
pop
movsl
push
les
std
stc
and
shll
cmp
push
lret
cli
inc
cli
call
inc
jecxz
rcrl
sbb
test
imul
or
or
dec
adc
std
scas
inc
pop
imul
bound
dec
sbb
inc
aas
fucomip
clc
push
cltd
jne
popf
iret
in
scas
cmp
xchg
iretw
pop
push
cs
insb
pusha
loop
sarw
in
mov
mov
add
adc
daa
paddusw
stc
sti
shrl
testb
xlat
jmp
loop
xchg
out
incl
dec
or
sub
and
outsl
int3
js
sti
cmc
cmp
lahf
loopne
or
addb
lods
ljmp
adc
mov
sahf
daa
call
stos
insl
push
mov
xchg
jle
add
fmull
inc
stos
push
pop
out
xchg
mov
cmpsb
test
xor
int3
inc
stc
adc
ficomps
sub
ret
cmp
int
mov
push
in
add
mov
inc
mov
cmp
add
bound
cmpsb
movsl
ret
inc
push
add
xor
out
cli
pop
jmp
jmp
cld
nop
fucomi
mov
inc
add
jnp
jp
xchg
leave
push
and
notl
dec
mov
jo
mov
lds
cmp
into
mov
add
nop
xchg
fidivs
in
nop
jp
sahf
loopne
mov
repz
pop
mov
pop
ljmp
sbb
inc
lahf
push
cld
jbe
movsl
dec
sbb
mov
or
xlat
out
mov
imul
inc
push
mov
mov
fnstenv
scas
dec
add
push
fs
incl
movb
mov
rcrl
push
jp
mov
mov
sub
mov
or
andl
daa
inc
jp
xchg
gs
jg
lods
add
dec
cmpsl
mov
lods
pop
ja
lret
xlat
lahf
scas
movsl
xor
mov
call
ret
lds
jmp
adc
jmp
pop
add
fcomps
les
lret
ja
jl
test
push
in
cmp
imul
ret
imul
sti
ret
dec
jl
pop
jns
jae
call
add
and
shr
call
insl
push
add
dec
sub
push
pop
adc
cli
pop
dec
xchg
sbb
scas
jo
in
jo
sarb
sub
rorb
sub
fadds
jb
cmp
mov
jno
fcomi
inc
fstps
ds
sbb
bound
leave
leave
arpl
mov
push
sub
pop
ja
out
fcoml
pop
mov
test
push
sub
pushf
jmp
push
icebp
in
inc
fldenv
jl
gs
and
pop
sub
push
push
sub
sbb
in
stc
xor
in
sbb
pop
sbb
imul
xchg
push
jle
das
and
lret
pop
add
sbb
daa
push
mov
shll
add
fdivrl
shl
mov
and
and
arpl
cmpsl
hlt
hlt
aas
iret
adc
ja
sub
pop
jbe
adc
and
fldl
mov
sub
xchg
mov
popa
mov
mov
in
jg
and
hlt
aaa
std
dec
add
push
xchg
push
ljmp
mov
dec
fdivrl
cmp
lock
pop
xchg
jb
or
frstor
adc
dec
push
dec
mov
add
ds
test
lock
subl
sbb
sub
pop
inc
xchg
scas
inc
imul
mov
mov
bound
jg
sbb
stc
aaa
mov
push
mov
xor
mov
int
inc
lret
sbb
int3
es
fildll
sarb
cmp
xor
cmp
dec
and
sti
xor
sbb
dec
inc
add
mov
and
stos
imul
shl
lods
cmpsb
mov
nop
add
jno
lock
xor
lock
sahf
inc
movsb
loop
test
cwtl
sbb
jecxz
mov
jb
imul
dec
jns
arpl
mov
pusha
inc
and
xchg
cmp
mov
in
fistpll
loopne
dec
movsb
pop
les
xor
fists
pusha
jg
mov
andb
inc
ret
and
jb
inc
or
adc
out
xchg
mov
mov
jmp
das
repnz
pop
scas
sbb
mov
inc
xchg
jne
push
xorb
adc
cmc
dec
pop
dec
jne
sub
sub
aaa
mov
push
or
std
sub
ret
adc
push
in
mov
sbb
out
lahf
sbb
add
rclb
jmp
xor
mov
rolb
or
add
mov
fisttpl
mov
add
leave
jl
or
fcmovnbe
stos
inc
out
ror
ljmp
ret
push
jbe
mov
xchg
xchg
cmp
mov
outsl
sbb
loope
xor
movsl
sub
pop
inc
or
repz
imul
xor
stos
ret
pop
test
adcb
mov
mov
cs
insb
adc
shrl
add
add
aad
add
insl
loope
or
push
ds
inc
sbb
out
cld
pushf
andl
fnsave
sbb
jbe
and
fdiv
inc
ja
mov
mov
outsb
inc
sahf
inc
lret
arpl
iret
sbb
popa
insb
cltd
hlt
mov
pop
insl
pop
fldl
cs
lea
pop
xor
imul
lods
aam
mov
pop
insl
ja
cmc
push
sbb
bound
cmpl
add
outsb
or
ret
sub
mov
test
in
outsl
adc
xchg
mov
inc
movsb
xor
cltd
ficoml
cmp
insb
xchg
adc
das
or
lcall
aad
imul
in
leave
ss
and
xchg
push
or
mov
sahf
pop
adcl
lea
pop
lods
push
sti
call
xchg
mov
and
and
daa
add
stos
push
les
xchg
mov
mov
cmpsb
jae
xchg
inc
out
out
lret
fisubrl
in
fimull
pop
fs
sub
hlt
mov
out
int
call
pop
test
sbb
out
mov
mov
adc
jbe
pop
jns
testb
mov
idiv
fs
sbb
mov
fdivrl
movsb
cmp
dec
xor
js
xor
ljmp
shlb
and
mov
stos
inc
pop
xchg
adc
movsl
push
xor
insl
xchg
cmp
and
push
mov
jecxz
and
fdivrs
clc
testb
stos
cmp
mov
cld
mov
cmpsl
jl
ja
sub
dec
ss
push
cmp
leave
mov
mov
dec
rolb
mov
ljmp
cld
adcb
cmp
stos
lods
push
popa
pop
ret
pop
leave
adc
shl
cli
mov
repnz
aam
cmp
iret
mov
pop
and
ret
out
rclb
and
clc
aam
and
add
xchg
push
int
lret
xchg
sarb
packsswb
dec
cmp
pusha
mov
sbb
xchg
cmc
or
sbb
pop
popf
int3
or
and
and
lock
roll
add
add
add
data16
pop
mov
push
fwait
mov
test
jb
cmpsb
add
fucomp
adc
fcompl
lock
aad
lret
xchg
jnp
or
mov
pop
and
cmpsl
imulb
ja
cld
sbbb
push
inc
and
jno
cmp
sub
mov
int
pop
and
pop
xor
or
sahf
and
cmp
leave
enter
inc
cmpsb
xchg
mov
mov
inc
push
pushf
repz
jge
or
adc
idivb
fwait
inc
aaa
push
das
les
les
and
scas
fwait
scas
xor
jo
push
xchg
nop
jbe
xor
out
daa
loope
and
jp
inc
movsb
adcb
xchg
dec
test
sub
dec
xor
dec
push
insb
pop
pop
jnp
flds
and
mov
scas
mov
push
dec
adc
shrl
sbb
repz
inc
int
in
in
pop
lea
dec
movsb
dec
push
sub
inc
fnsave
xchg
or
cwtl
push
jns
fsts
aaa
shrl
insb
mov
lock
sub
ljmp
sbb
cld
imul
xorl
and
adc
jae
movsb
lret
xor
lds
addl
jno
arpl
xchg
mov
movsb
outsl
push
cmc
fs
rorb
pop
mov
adc
cmp
and
sub
test
jl
xor
rep
imul
clc
dec
add
adc
pop
mov
push
ds
aad
dec
push
and
fwait
sub
xchg
inc
inc
sbb
jbe
xor
sub
mov
jl
imul
outsb
loope
repz
mov
lds
in
push
mov
jle
popf
push
cld
push
movsl
rolb
or
xchg
test
movsb
int3
jnp
rorb
mov
stc
mov
cmp
pop
hlt
icebp
mov
xchg
mov
iret
iret
rclb
jnp
out
xlat
pop
sbb
jmp
jmp
cmp
into
jne
mulb
sub
push
or
hlt
in
xchg
or
scas
addr16
dec
sbb
cmpsb
inc
dec
aaa
jbe
daa
ljmp
data16
in
push
ficomps
push
xorl
leave
adc
inc
sub
scas
mov
mov
andb
push
popf
std
jne
dec
mov
test
inc
les
mov
ficoms
mov
inc
inc
pop
pop
ja
out
mov
pop
xchg
sar
xchg
mov
xchg
in
clc
add
cmpsb
mov
lods
jbe
in
in
out
or
mov
sub
and
xchg
fcomps
ror
repz
addb
mov
xchg
sbb
jecxz
out
pop
adc
push
out
jns
mov
inc
sbb
leave
les
push
popl
jmp
subl
add
lcall
clc
out
les
gs
inc
iret
xchg
clc
sub
mov
mov
das
cwtl
pop
jns
and
imul
enter
xchg
outsl
scas
push
add
cmc
or
xor
mov
mov
icebp
mov
mov
push
xchg
dec
inc
xor
mov
adc
movsb
lods
dec
or
js
xor
push
daa
aas
adc
xchg
into
cltd
jge
fwait
mov
adcb
jae
gs
jns
inc
outsb
pop
mov
sub
mov
filds
ret
dec
xchg
aas
cmc
call
push
and
mov
jecxz
daa
cmp
fnstenv
mov
outsb
and
repz
cmpsl
scas
jmp
jle
into
sahf
fimull
enter
pusha
fisttpll
les
cmp
bound
pop
xor
in
pop
xorl
add
ljmp
out
or
xor
mov
dec
mov
fsubrs
cwtl
arpl
into
scas
gs
and
mov
fdivrl
add
or
and
cmpsb
lea
xchg
dec
inc
bound
jo
mov
in
pop
mov
dec
inc
aas
cli
jns
push
sbb
out
push
adc
in
js
js
mov
sbb
sarb
loop
push
pop
or
sahf
jb
lods
adc
cs
adc
mov
add
notl
mov
ret
dec
mov
adc
sub
loope
jg
dec
fiaddl
adc
inc
addr16
in
lock
jne
loopne
bound
or
xor
cmpsb
popf
add
cmp
ret
stos
in
lds
and
mov
jg
enter
or
jno
lock
popa
popa
jmp
jg
es
mov
fisttpll
movsb
arpl
std
popa
push
stos
adc
fs
icebp
int
mov
sub
out
aad
push
sti
jbe
int
aam
dec
push
sub
addr16
addr16
cld
pop
push
xor
mov
jge
mov
mov
sahf
cmp
push
cld
sbb
loopne
and
or
and
adc
xor
pop
icebp
dec
into
add
mov
push
and
daa
sub
push
loopne
out
mov
mov
testb
bound
pop
sbb
mov
std
jnp
ret
imul
sbb
pop
sub
leave
xchg
testl
add
xor
inc
pop
loopne
mov
add
push
add
cld
mov
mov
jp
xor
shrl
mov
fnsave
lods
xchg
and
or
scas
das
jns
loope,pt
cmpsb
sub
mov
leave
out
inc
aas
and
fsubl
mov
xchg
push
cld
inc
xchg
pop
addl
bound
add
mov
mov
outsb
sbb
rorb
sbb
pop
sbb
cld
data16
test
int
xlat
popa
test
sbb
push
ret
int3
loopne
sarb
and
arpl
imul
jl
in
outsb
dec
sub
imul
lret
cmp
out
rcrl
sti
mov
jno
cmp
push
rorl
in
jnp
or
notl
xor
mov
mov
rclb
xor
imul
loope
xchg
iret
data16
negb
dec
mov
fsub
or
inc
arpl
dec
loope
popf
aaa
ret
inc
xor
xchg
add
mov
outsl
adc
int
xor
xor
xlat
xchg
stos
and
int
add
dec
cmpsl
pop
push
les
decl
scas
jmp
push
xor
sub
xlat
movsl
dec
inc
leave
cwtl
jle
mov
adcl
stos
sub
jge
aaa
sbb
sbb
out
xchg
mov
push
out
jg
or
mov
hlt
pop
bnd
inc
mov
inc
addr16
mulps
in
jns
out
in
sub
arpl
pusha
mov
push
imul
cmp
nop
test
repz
mov
arpl
das
movsl
aaa
ficoml
ds
lret
xor
aam
movsb
mov
sub
dec
clc
sbb
jecxz
inc
cmpsl
xchg
into
lcall
icebp
pusha
pop
fisttpl
sub
int3
aaa
and
mov
fldenv
sub
mov
mov
ret
xor
mov
into
movsb
lods
pop
xor
and
negb
loope
int
out
cmp
lods
enter
mov
ret
sbb
mov
std
xor
cmp
call
xchg
lea
sbb
xlat
lcall
mov
pusha
push
jae
rorl
and
jno
outsl
lds
xchg
cli
aaa
arpl
push
sbb
aas
mov
push
popf
lds
adcl
frstor
dec
loope
cmp
ljmp
ret
jge
mov
cld
fcoms
mov
fisubrs
add
and
imul
xchg
aaa
pop
or
lods
cmp
imul
or
mov
lods
push
gs
mov
dec
repnz
mov
aas
sbb
fmull
jmp
in
add
aam
imulb
por
sarl
decb
pop
ss
or
test
lcall
jnp
in
xor
test
out
daa
out
and
adcl
push
jbe
dec
add
pop
pop
jecxz
mov
loop
insb
fwait
pop
mov
push
es
mov
das
movsb
movsb
sbb
popf
rcll
ja
mov
daa
imul
test
sub
aaa
sbb
push
fildl
mov
popf
xchg
in
sbb
lds
xor
cmpsb
pop
stos
mov
inc
fldt
xchg
repz
fs
cmp
jnp
adc
pop
aam
rcl
loope
sbb
insb
pop
icebp
push
mov
jne
add
mov
sub
push
push
sarb
repz
testl
cwtl
out
pop
mov
ret
inc
ds
mov
lret
mov
mov
popa
xorl
xchg
mov
std
add
jle
sbb
das
stos
mov
mov
sbb
push
in
popf
cmp
cmp
repz
loope
fisubrl
es
add
in
pop
ret
lahf
and
clc
imull
jp
adc
inc
push
sub
and
sub
fimuls
adc
repz
loopne
std
jle
fsubrl
inc
or
aaa
jo
popf
icebp
adc
dec
jl
lock
insb
mov
sbb
cmp
lock
out
xor
jno
xchg
xor
add
cmpb
clc
rolb
andl
imul
sub
imul
cmp
popa
sbb
xor
leave
pushf
sbb
sub
xchg
xchg
dec
xor
push
push
imul
rorb
add
imul
mov
inc
inc
fsubr
xchg
xchg
jle
leave
cmp
in
ss
aam
fisubrs
jecxz
enter
shl
popa
or
in
xchg
push
inc
test
pop
xchg
mov
dec
repz
call
adc
aad
mov
dec
int3
xchg
mov
rcll
lahf
lock
push
push
inc
aaa
dec
sbb
fstl
lds
lods
xorl
xor
mov
dec
popf
and
out
rorl
dec
ljmp
push
imul
pop
jmp
xor
pushf
fsubrp
xor
out
add
jl
stc
out
jbe
inc
dec
add
xchg
outsl
mov
std
shl
xor
dec
rclb
xor
xchg
sbb
sub
sub
push
cmp
gs
cld
outsb
fmull
out
out
push
icebp
cwtl
push
and
pop
fsubrl
pop
int
jp
mov
xor
mov
xchg
mov
push
mov
inc
jno
pushl
pushl
call
sbb
or
fiadds
adc
jge
loopne
stc
out
inc
inc
jns
xchg
xor
mov
cmp
mov
and
scas
pop
call
mov
fstpl
test
shrl
mov
in
push
xor
icebp
lods
orb
xchg
sti
adc
fdivs
mov
xlat
sbb
jge
add
pop
cmp
mov
movsl
xchg
cmc
cwtl
daa
popf
ret
mov
sbb
cmc
addr16
jmp
jg
arpl
enter
pop
fsubl
pop
mov
xchg
ljmp
sub
pop
dec
scas
cmpsb
cwtl
adcb
mov
imul
loope
pop
pop
mov
pop
jo
and
push
pop
cmp
dec
stos
in
jg
sub
jp
inc
jne
gs
ret
es
mov
jne
nop
cmp
jae
sbb
push
fcomps
pushf
bound
xor
cmpsl
out
scas
dec
or
jns
in
sarl
xor
aam
or
into
js
jnp
dec
notl
ljmp
push
adc
inc
xchg
inc
xchg
add
pop
jne
and
shll
stos
mov
adc
dec
mov
fcomps
and
je
jns
es
imul
popa
inc
jl
cmp
push
and
mov
cmp
sub
xchg
sub
lods
nop
mov
push
int3
jnp
push
or
ret
adc
push
adc
dec
jbe
ret
negl
lahf
insl
mov
scas
in
xchg
in
mov
lret
inc
push
mov
mov
daa
jmp
pop
mov
push
add
or
movsb
xor
shll
pop
aad
int3
inc
cmp
cmp
out
lods
shl
out
xchg
and
nop
gs
cmp
or
rolb
aad
xor
fnsave
sbb
dec
jnp,pt
shrl
test
lcall
dec
pop
fs
lds
cltd
inc
xchg
xor
pop
popf
in
xchg
scas
imul
push
cltd
inc
add
adcb
mov
mov
lods
sub
setle
stos
popf
mov
or
xchg
push
sarl
test
mov
pop
scas
jecxz
loope
jmp
call
jo
outsb
mov
iret
test
insl
mov
hlt
int
bound
hlt
imul
pop
fdivs
ja
mov
mov
sahf
fiaddl
in
pop
aam
orl
mov
dec
leave
sub
sbbl
lods
mov
jecxz
inc
xor
idivl
sub
mov
cmc
sub
insb
pushf
lods
movsb
xchg
lea
pop
out
insl
mov
mov
push
push
sbb
jbe
lret
lcall
ljmp
and
insl
xchg
cwtl
stos
out
aad
das
repnz
js
notb
jge
cli
jecxz
jnp
push
dec
pop
xchg
pop
xor
mov
or
repnz
out
fsubrs
mov
mul
jecxz
fwait
lds
lahf
sbb
pop
addr16
cmp
or
cltd
into
insl
in
dec
adc
xor
cmp
mov
hlt
lods
inc
mov
int
mov
jle
adc
lahf
adc
test
dec
popf
adc
push
push
mov
sub
push
xchg
sub
daa
add
mov
scas
popa
aas
inc
test
push
jmp
xchg
and
test
cmp
jmp
rclb
nop
jnp
sbbb
stos
cmp
add
dec
loop
movsl
or
fcompl
mov
adc
int3
mov
fyl2xp1
inc
ss
scas
pop
cmp
add
sub
test
and
xchg
scas
ss
xlat
jmp
cmp
lock
mov
cmp
out
mov
mov
fidivrs
loopne
js
nop
js
cmpsl
bound
pop
sbb
add
sbb
hlt
cmp
repz
icebp
push
and
jo
mov
outsl
cltd
test
push
adc
ss
out
jo
sbb
pop
mov
std
popa
fsubr
mov
jne
out
popa
out
lods
fcomps
rcr
roll
xor
mov
jmp
push
xlat
dec
add
dec
and
inc
lock
inc
xchg
xchg
sub
cmp
arpl
xchg
jne
popa
in
cmp
daa
ret
add
mov
aas
icebp
push
popa
inc
jl
or
mov
inc
jne
pop
pushf
mov
pop
out
cmc
fidivl
mov
ret
scas
dec
insl
fcoml
add
and
sub
rcr
mov
daa
into
xchg
sbb
sarb
xchg
jne,pn
xchg
pop
jge
adc
adc
jb
test
nop
xor
add
sbb
pushf
es
clc
mov
orl
push
testb
js
loopne
mov
outsl
pop
add
sbb
in
pop
sub
jns
dec
jmp
dec
adc
dec
sbb
aad
or
jecxz
xor
xchg
pushf
xchg
test
lods
xchg
cmp
or
adc
aad
sbb
xor
movsl
lahf
mov
cmp
sub
lock
nop
mov
mov
xchg
dec
dec
divl
popf
xor
call
add
daa
push
outsb
lock
mov
icebp
cli
cmpsl
xor
and
es
rclb
pop
int
and
pushw
lret
fwait
clc
jge
lea
mov
test
enter
sbb
jmp
dec
or
inc
aam
jmp
lcall
int
and
enter
add
adc
arpl
mov
mov
jae
sbb
pop
jp
push
or
loope
jns
or
loopne
inc
pop
ja
fs
frstor
xchg
loopne
dec
xchg
lds
bswap
lods
xchg
push
cwtl
aaa
movsb
push
das
gs
push
in
out
cmp
adc
iret
push
orb
movsb
ss
lea
push
lcall
inc
into
xor
repnz
sub
stos
xchg
jo
add
or
jns
jge
xor
pop
int
les
cwtl
aad
mov
out
out
mov
push
adc
jnp
sub
inc
sbb
mov
jae
imul
jns
mov
push
aad
cmp
push
add
aam
and
rcrl
mov
add
ljmp
jecxz
loop
fcmove
cli
jbe
in
bound
test
dec
cmpl
dec
cltd
insb
and
mov
bound
movsb
int
mov
cmp
mov
cmpsb
out
mov
test
iret
xchg
mov
inc
in
fsubs
cmp
idivl
ret
cld
adc
pop
cmp
jne
insl
leave
mov
or
aaa
movsb
or
mov
dec
dec
or
xlat
mov
nop
or
cmpxchg
push
or
or
mov
fisubl
das
bound
rorl
andl
jb
pop
cwtl
sti
aas
movsb
xor
sbb
xor
repz
pop
push
jnp
xchg
mov
inc
call
stc
rorl
push
repnz
mov
inc
adcl
sub
dec
ficoml
dec
xlat
pusha
insb
push
ffreep
jae
dec
jp
mov
fimull
aam
inc
jnp
insb
ret
iret
mov
sub
or
cmpsl
push
xchg
mov
inc
inc
mov
gs
es
mov
decb
ja
stos
cmpsb
in
shrl
push
fidivl
lea
mov
and
dec
fidivl
cmp
mov
test
pop
inc
sub
mov
orb
dec
movsl
cmpsl
rcrl
test
enter
sub
mov
xchg
adcb
outsl
dec
cs
shlb
mov
jmp
jmp
pop
adc
push
cmp
gs
add
pop
test
fcomp
jecxz
inc
mov
push
imul
fsubs
xchg
movsb
lea
outsb
cmp
dec
repz
pop
xor
sub
ret
jle
xchg
mov
and
sub
jae
xchg
call
pop
xchg
inc
pop
movl
mov
scas
add
pusha
call
rorl
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
xchg
add
