mov
mov
add
mov
imul
add
or
imul
mov
ja
ret
sub
mov
imul
add
mov
or
jmp
repnz
adc
inc
cld
push
add
cmp
cmp
pop
or
fstp
jl
cmp
or
mov
inc
sub
add
mov
icebp
neg
ds
sub
mov
push
inc
add
mov
cmp
cmp
xchg
mov
idiv
or
dec
mov
and
enter
cwtl
xchg
fucomi
cs
mov
push
sbb
add
push
mov
add
pop
clc
add
mov
sub
mov
sub
add
sahf
push
int3
clc
cmp
inc
sbb
mov
sbb
mov
mov
rcr
rorb
sbb
sbb
enter
pusha
cmp
xor
into
movzbl
jo
add
fsubrp
mov
sub
scas
fdivr
sbb
sbb
pushf
or
xchg
orb
das
or
ljmp
test
je
push
mov
push
or
mov
add
aaa
je
jae
mov
mov
hlt
mov
or
sbb
ret
jbe
fidivrl
clc
add
mov
mov
rcr
mov
jbe
incb
or
out
jg
add
call
repnz
mov
jbe
mov
mov
rorb
pop
rcl
mov
sub
push
mov
inc
popa
sbb
mov
dec
fnstenv
in
mov
sbb
add
and
mov
mov
cli
xchg
icebp
shl
jl
cmpsb
insl
pop
ret
or
pop
push
mov
sbbl
mov
pusha
pop
sub
mov
adc
sub
mov
mov
out
mov
loope
jl
mov
imul
je
je
fs
fsubs
mov
shll
push
or
push
cmp
sbb
and
dec
in
fucomi
mov
shll
mov
lock
sbb
jns
lods
adc
ret
dec
push
in
pop
cmp
push
mov
inc
insl
popa
push
or
and
adc
mov
sub
mov
lock
pop
xor
sahf
xor
rcrb
sub
imull
sbb
add
adc
mov
push
mov
and
sub
mov
je
enter
or
sbb
sarb
sbb
in
push
movnti
mov
fistpll
inc
add
in
mov
movsb
add
rcrb
mov
push
rorb
adc
or
add
icebp
shrb
xor
jl
clc
push
push
pushf
jnp
shlb
add
mov
jle
mov
je
pop
dec
jo
or
dec
sbb
xchg
jle
sub
or
loopne
xor
call
or
roll
mov
inc
cli
jmp
pop
testb
add
rcr
pusha
cld
out
sbb
push
jo
mov
dec
or
adc
out
or
call
test
pop
mov
sbbb
jmp
js
rolb
inc
clc
rclb
mov
das
cmp
xchg
jo
adc
push
pop
push
repnz
xlat
sarl
mov
or
sub
data16
stc
add
pop
jo
dec
mov
jl
add
mov
pop
add
lret
mov
cs
push
lods
scas
sbb
lods
jle
push
xor
rorb
xor
or
mov
and
lods
fldl
add
pop
call
push
and
sti
xor
les
lods
inc
or
cmp
fisttps
mov
mov
jb
mov
and
outsb
inc
or
xchg
ss
jl
loop
add
cmp
mov
or
test
add
mov
add
shll
ret
push
out
push
movsb
sbb
mov
cmp
add
pop
mov
inc
outsb
add
add
add
mov
sbb
je
cmp
pop
push
clc
ljmp
or
into
pop
int
jae
call
neg
cmp
pinsrw
scas
sbb
add
movl
lcall
shlb
bound
xchg
sbb
mov
push
mov
mov
pop
cmp
cmp
or
scas
push
ud1
pop
mov
xorl
or
pop
in
add
mov
mov
insl
add
cmp
mov
ds
mov
imul
ret
or
sarb
sub
mov
lret
sbb
push
mov
sbb
fimull
ljmp
sbb
faddl
in
movsb
push
fadd
ljmp
adc
pop
lcall
mov
lock
jne
push
mov
or
rol
loopne
rcl
clc
sub
flds
jbe
movsb
into
ret
sbb
and
mov
pop
dec
xor
sbb
xchg
or
pop
rorb
adc
adc
add
jno
sbb
pop
or
adc
jnp
clc
fdiv
dec
lock
add
cmp
or
dec
cmc
loop
icebp
mov
pusha
lock
andl
pop
or
mov
sahf
ss
rcr
rcl
dec
add
push
push
test
rclb
rorb
or
adc
push
loop
rcll
sub
ret
mov
adc
js
mov
sbb
jl
jp
pusha
push
popa
mov
jo
mov
xor
adc
cmp
mov
xor
rol
cmp
sbb
jo
mov
mov
add
stc
add
fcomps
sub
xor
sbb
orl
push
leave
or
insb
sbb
fldcw
add
mov
mov
out
cmp
sub
adc
sbb
sahf
pop
test
sub
pop
ljmp
loop
call
dec
mov
fucom
fcmovbe
mov
or
rclb
scas
inc
adc
add
pop
xor
push
cmp
sbb
mov
andl
faddp
imul
jo
push
mov
ds
pop
test
or
ljmp
test
cwtl
je
into
js
pop
lea
mov
push
or
inc
test
xchg
inc
xchg
adcb
inc
or
insl
out
add
push
testb
pop
push
pop
jbe
sbb
xor
inc
jbe
or
adc
out
adc
into
adc
jle
sbb
mov
or
call
je
data16
dec
rol
xchg
shll
cmp
sub
push
ret
jge
test
add
stos
mov
mov
inc
adc
dec
lcall
sub
sbb
jmp
inc
mov
hlt
jno,pn
mov
es
adc
cmp
or
add
xor
pop
or
pop
xchg
mov
rclb
nop
jle
inc
pop
je
pop
outsb
lock
and
cmp
push
or
icebp
pop
decb
dec
mov
stc
adc
sbb
mov
pop
loopne
out
cmp
lret
xor
les
push
and
data16
jo
insl
in
cmpsb
push
call
cwtl
rcrl
adcb
and
out
mov
sbb
and
or
jo
mov
js
mov
adc
push
aas
lds
pusha
in
adc
mov
fsubrl
cmp
or
cwtl
lock
or
cmp
pop
push
push
add
vmread
addr16
pop
sbb
add
or
and
sahf
in
lret
xchg
aad
lahf
pusha
pop
mov
jo
into
scas
cmpsl
jle
jb
pusha
gs
jecxz
pop
mov
jo
divb
int
adc
adc
adc
icebp
or
lret
fs
clc
sbb
mov
dec
mov
mov
add
lret
repnz
cmpsl
xchg
ret
adc
lcall
rcr
std
adc
leave
add
xchg
adc
mov
and
sbb
sbb
adcl
adc
hlt
icebp
mov
adc
stos
rcrb
lds
mov
mov
clc
adc
add
fwait
or
add
mov
sbb
in
xor
das
sbb
into
rcll
xor
sub
scas
mov
data16
or
fstl
mov
cwtl
loopne
imul
inc
adc
sarl
cli
aam
cltd
sbb
out
inc
mov
pop
sub
mov
push
inc
daa
pusha
sbb
mov
lahf
inc
stos
ss
cwtl
pop
call
xor
aam
repnz
rolb
sbb
mov
negb
stos
mov
shlb
mov
pop
cmp
mov
jl
adc
or
add
int3
hlt
orb
sbb
icebp
sub
rorl
adc
xor
jmp
daa
jmp
cmp
mov
cli
test
xchg
inc
mul
and
leave
ret
xchg
pop
incl
mov
pop
outsb
lea
push
jo
push
fcoml
push
add
enter
fs
ret
adc
inc
mov
rclb
stos
add
pop
xchg
sub
int
push
sbb
mov
pop
push
js
sbb
and
mov
xor
push
aam
pop
in
pop
sarb
add
adc
and
sub
scas
or
cwtl
leave
push
cltd
in
filds
enter
negl
push
push
or
cmp
or
mov
adc
adc
ror
push
sub
lock
nop
jp
jae
push
pop
mov
stc
punpckhbw
add
jns
and
mov
add
and
pop
ret
arpl
xchg
in
sahf
loop
pop
or
or
idivb
mov
xlat
mov
lcall
pop
popa
xor
je
adc
lds
pop
sub
test
fcmovnb
and
addps
mov
push
jae
insb
mov
sub
ds
mov
pop
mov
push
mov
push
js
cmp
xchg
lock
leave
aad
jmp
and
cmp
or
das
popf
jo
adc
adc
insb
cmp
and
fbstp
xchg
test
or
rorb
in
ja
nop
mov
adc
xor
dec
xchg
xor
jp
sbb
and
cwtl
movntps
dec
rcll
xchg
lock
aad
fmuls
sbb
mov
mov
sbb
xchg
rcrl
sarb
mov
adc
push
test
mov
mov
pop
pop
ss
push
add
push
js
sarb
push
imull
push
pop
sub
inc
dec
adcl
push
pop
adc
sbb
outsb
aad
or
dec
or
and
mov
adc
jno
add
xor
add
lods
arpl
ror
mov
mov
aaa
inc
es
scas
jno
out
and
pop
jb
add
fildl
nop
loopne
or
dec
sub
or
mov
jge
out
dec
cmp
cmpl
fcoms
push
jg
xchg
or
add
mov
mov
cmpsl
out
push
mov
push
pop
push
pusha
adc
xor
inc
ljmp
push
jbe
ret
push
bound
stc
push
iret
mov
inc
jp
push
jb
test
pop
jno
jmp
fwait
hlt
mov
or
orb
sahf
je
mov
ds
mov
fsubr
scas
inc
shlb
scas
lock
and
leave
cmp
lods
adc
sarb
adc
es
push
cli
push
test
mov
and
pop
and
lea
shrb
push
mov
add
stos
movsb
inc
or
push
push
clc
push
test
xchg
sbb
sbb
fwait
popa
aas
sbb
scas
inc
mov
cld
repnz
cs
fcomip
add
pop
and
xor
add
adc
inc
popf
pop
test
rcl
xor
lahf
sarl
add
das
cmp
sbb
lock
outsb
test
dec
adc
imul
mov
lods
das
lock
push
call
mov
ucomiss
pop
push
mov
dec
xchg
push
push
mov
je
or
push
pop
rorb
rol
xchg
add
das
mov
mov
jge
insb
fdivrl
mov
push
xor
leave
adcb
test
pop
add
jnp
xor
fstps
mov
ja
push
xchg
ret
stos
pop
xchg
mov
stos
jb
add
jmp
insb
pop
call
add
mov
add
push
movsl
nop
xchg
mov
cmp
shr
sar
adc
roll
pop
adc
sub
inc
sub
cmc
cmpsl
cs
call
fsubp
xchg
notl
into
mov
sub
les
push
jle
or
inc
leave
in
add
jge
ret
leave
mov
xchg
mov
push
repnz
lock
test
pusha
repnz
add
fcoml
loopne
idivb
ret
xchg
dec
lods
xchg
mov
dec
push
lahf
aam
notl
sbb
rcl
mov
sbb
lods
jbe
jg
ljmp
in
mull
cmpsb
fcomps
mov
cmpsb
sbb
sbb
push
push
stos
mov
clc
mov
jmp
inc
adc
jne
add
hlt
inc
rcrb
mov
or
or
jmp
push
push
ljmp
loopne
fsubs
push
pop
mov
arpl
movsl
lss
push
or
jo
jnp
mov
mov
push
ret
gs
pop
rolb
into
push
pusha
xchg
xor
mov
insb
loopne
stc
mov
pop
push
ja
lahf
loope
mov
push
lds
ret
xor
pop
sub
sbb
sub
rol
sub
or
adc
mov
push
je
push
out
test
cmp
adc
shrl
xor
in
jp
adc
pop
mov
inc
popl
push
notb
sbb
adc
das
sub
les
adc
enter
add
add
cmc
ret
fidivs
push
push
pop
adc
test
cmp
loope
jp
stc
inc
pusha
add
xor
adc
in
xchg
cmp
mov
push
insl
leave
push
lret
sbb
xor
inc
daa
add
adc
cmp
sbb
lcall
xor
bound
call
sbbb
sbb
mov
jo
adcl
adc
xor
inc
shr
push
faddp
push
repz
fadds
inc
mov
cmpsb
ret
or
and
fsubrp
or
push
or
or
inc
outsb
js
adc
mov
sbb
xchg
adc
sub
jl
loopne,pn
scas
sbb
xchg
mov
add
xchg
lret
adc
jo
add
aad
and
or
pop
movsl
add
xor
in
add
aam
or
mov
cli
add
adc
mov
pop
clc
das
repz
mov
bound
jne
push
popf
test
movb
mov
pop
ficoms
lock
fadds
pop
clc
jecxz
sbb
loope
fcmovb
dec
lret
sub
inc
cmp
mov
imul
ret
push
int
jbe
pop
mov
push
add
push
inc
cmp
and
mov
mov
aaa
dec
sbbb
push
add
testb
inc
shr
leave
and
adc
add
xchg
or
pop
rorb
jb
int3
add
cwtl
loopne
sbb
mov
loopne
iret
cmp
mov
dec
shlb
shlb
push
loop
sbb
push
sbb
cmp
clc
push
mov
test
outsb
adc
or
fs
xchg
test
mov
add
add
xor
jmp
adc
lods
test
mov
adc
sub
inc
adc
add
push
scas
addr16
cmpsl
jp
mov
mov
jb
ret
push
mov
test
out
shl
fs
ret
dec
or
shrb
mov
js
loopne,pn
scas
mov
js
inc
sbb
icebp
cmp
add
dec
dec
mov
lods
dec
lret
mov
push
sub
dec
push
xor
push
clc
or
mov
or
pop
cmp
test
or
cmp
adc
call
pop
adc
sub
or
insl
aad
xchg
cmpsb
push
cs
fs
call
add
ds
leave
mov
or
movsb
shl
mov
cmp
jb
push
rcl
jno
xchg
and
or
push
inc
test
ljmp
movsl
xchg
pop
and
xchg
in
add
addb
add
adc
pusha
add
mov
call
testb
xchg
mov
sbb
sbb
mov
add
out
mov
popf
rcl
and
cli
pop
sub
lock
pushf
inc
in
icebp
lcall
jo
xchg
ds
cmp
js
add
loopne
sub
sbb
pop
outsb
repnz
push
movsb
push
mov
cmp
adc
pusha
movsb
daa
xchg
add
loop
or
loop
sub
sbb
adc
sbb
jbe
orl
repnz
push
xor
push
push
jl
push
testb
or
add
int
in
cmp
fs
ret
jno
ja
hlt
hlt
stos
add
lahf
into
rcrb
lods
les
pop
neg
or
inc
js
mov
push
adc
push
rcll
xlat
sub
je
adc
cmp
les
ret
push
cmp
ret
adc
pop
xor
add
add
sbb
mov
cmpsl
sub
pusha
repnz
ret
inc
jno
push
xchg
mov
mov
and
pop
inc
loop
leave
xchg
push
jmp
je
cmp
pop
cltd
add
dec
xchg
adc
jg
mov
push
jbe
lret
push
or
adc
icebp
or
and
xor
inc
fnstcw
push
mov
lods
and
inc
inc
test
push
adc
das
and
repnz
sahf
je
insb
or
adc
aam
ret
popa
add
adc
push
je
pop
rcrb
cmp
shl
es
ss
sub
mov
adc
add
bound
fdivrs
xor
add
mov
es
sbb
inc
shrb
mov
loop
xor
dec
js
mov
add
push
ss
roll
pop
test
das
dec
mov
push
je
sbb
add
pushf
jl
add
xchg
scas
inc
inc
pop
cwtl
and
test
sbb
mov
orl
test
in
pushf
cmpsl
or
push
add
add
ja
aas
sbbb
movsb
xor
push
sbb
int
test
jl
ljmp
add
add
push
ss
int3
mov
xchg
or
push
loope
lods
movsb
mov
jno
sbb
stos
adc
xchg
leave
je
fisubs
adc
add
aam
adc
xor
js
jbe
ss
lods
add
rolb
or
add
aam
jo
jns
jno
add
adc
iret
jno
and
shlb
adc
inc
and
add
adc
test
icebp
clc
mov
ficoml
add
std
hlt
cmc
add
mov
movb
mov
cmpb
or
inc
in
sar
rolb
adc
icebp
mov
aad
stc
push
or
fistps
mov
xor
jo
push
xlat
out
xchg
jb
sahf
add
test
mov
xchg
lock
jg
das
mov
adc
jno
movsl
stos
out
leave
notb
repnz
lods
inc
mov
outsb
faddl
clc
stc
push
mov
sub
or
push
call
xor
add
xor
push
clc
push
add
or
add
rolb
loopne
mov
push
faddp
ljmp
jmp
dec
mov
bound
es
dec
rcll
adcl
fcoms
rol
dec
aad
cmp
add
adc
pop
or
js
in
cs
rcll
mov
cmc
sar
add
inc
sbb
mov
or
push
sbb
ss
jp
cmp
scas
or
js
test
pop
jp
adc
fimull
ret
movsl
dec
jp
outsb
mov
pusha
inc
cmp
movsl
icebp
mov
fwait
rcrb
add
inc
test
iret
mov
mov
clc
mov
push
fmuls
fisubl
movb
cli
push
fcomi
jns
js
mov
xor
add
sbb
nop
push
mov
leave
or
or
sub
sub
ss
orb
js
rol
push
cmp
ret
fsubl
sbb
mov
cmp
adc
push
add
add
add
sub
pop
call
xchg
test
jne
clc
aad
mov
aam
add
add
std
mov
scas
sub
add
add
adc
push
mov
outsb
movsb
sub
pop
push
push
or
repz
repnz
dec
lret
and
sbb
add
je
sbb
mov
aam
push
sbb
scas
xorl
je
xor
fidivrl
test
or
loope
xchg
insb
rcll
sbb
imul
xor
les
mov
dec
adcb
push
pminub
or
test
add
adc
out
add
out
or
fidivrl
mov
sbb
rorl
lcall
sbb
mov
rclb
xor
xchg
dec
sub
clc
mov
sub
imul
shrb
push
inc
ss
xor
sub
cmp
and
idivb
rcl
push
jg
stc
mov
movsbl
lret
adc
lock
call
loope
sub
in
sub
mov
mov
outsl
insb
mov
inc
cmp
punpcklwd
mov
jo
rcl
sub
sahf
scas
pop
sbb
add
nop
add
data16
or
dec
pop
jo
in
push
orb
cld
cmp
xor
cs
pop
pop
lret
in
and
scas
mov
movsb
mov
ret
or
xchg
inc
or
push
xchg
mov
test
cmpsl
test
ljmp
inc
pop
cmpsl
call
adc
shl
push
add
and
add
jno
les
ret
jno
call
jmp
jo
adc
into
shll
lock
stc
push
or
lods
loope
in
jo,pn
dec
mov
idivb
mov
or
ret
xchg
cmp
icebp
xor
jmp
add
mov
lock
xorb
cs
movsl
jecxz
mov
enter
mov
pusha
adc
loopne
inc
mov
pop
mov
add
outsl
ret
or
das
xor
cmpsb
ljmp
fisubrs
into
cmc
jae
dec
push
push
mov
or
shl
cmpl
xchg
sahf
push
aas
inc
add
push
or
int3
jle
dec
movsl
stos
sbb
outsl
movsb
dec
ret
pop
mov
mov
test
or
xchg
sbb
and
mov
test
fsubl
mov
xchg
adc
repnz
sub
mov
rolb
or
add
mov
pop
push
out
fnsave
sub
les
nop
test
pop
push
loop
inc
mov
and
ret
xchg
xor
jmp
shll
jo
pusha
lock
rcll
int3
sahf
mov
cmp
ret
cmp
dec
fs
push
mov
addb
in
orl
jp
jl
lods
xchg
shl
rcl
out
mov
iret
or
cmp
test
push
test
mov
scas
inc
loopne
mov
mov
movsb
xchg
iret
mov
cmpsl
sub
jns
std
sub
mov
lea
mov
sbb
dec
loopne
pop
jnp
jg
dec
inc
and
outsl
dec
adc
cmp
ljmp
or
mov
pushf
sbb
xchg
or
push
test
cmpb
cmp
or
popa
nop
scas
mov
in
loop
pop
lret
rorb
sbb
fmuls
cmp
shrl
or
sbb
jno
je
popa
rcrb
or
adc
push
cs
adc
mov
xlat
jne
sbb
pop
add
idivb
hlt
in
inc
push
push
pop
inc
lock
repnz
aam
scas
jmp
shlb
cmp
les
ror
dec
push
xor
sbb
js
cmpsl
stos
adc
faddp
adc
enter
push
cmpl
sub
mov
pop
and
jo
sbb
adc
or
pop
push
ret
push
pop
mov
clc
sbbl
shr
push
mov
addr16
add
add
shll
loopne
xchg
mov
movsl
outsb
sub
fs
stos
mov
adc
pop
cmp
add
sbb
push
or
push
push
mov
jb
push
sahf
and
dec
dec
ds
shrl
pusha
mov
adc
imul
aaa
into
dec
push
stc
inc
adc
cmp
jb
jo
inc
test
rolb
cmp
push
and
adc
call
andl
and
inc
loopne
sbb
loopne
fcoms
or
mov
and
mov
popa
mov
adc
pusha
sub
push
pop
inc
xchg
mov
adc
mov
loop
pop
lret
push
ficoms
je
cmpb
sbb
sbb
pop
addr16
cltd
mov
mov
mov
mov
fs
dec
or
sbb
inc
mulb
mov
outsb
inc
call
cs
jo
push
dec
add
add
subb
adc
div
repz
jo
sub
jo
rcl
or
dec
inc
xadd
pop
stc
into
push
or
fisubrs
jmp
sbb
dec
xchg
mov
add
ret
mov
scas
mov
arpl
mov
call
loop
adc
mov
xor
mov
cmpsl
sbb
test
imul
test
sub
cmpsl
dec
rclb
adc
iret
rcrl
outsb
add
leave
add
adc
inc
scas
sub
insl
sbb
sbb
rcl
adc
dec
mov
pop
inc
xor
paddq
sbb
jecxz
push
out
rol
or
or
xor
dec
mov
mov
sub
mov
jle,pt
icebp
hlt
les
xchg
inc
enter
loopne
lcall
mov
rclb
xlat
stos
loop
shrl
push
roll
fdivr
push
scas
test
mov
sub
adc
add
jge
push
sbb
into
dec
out
cltd
push
dec
pop
movsl
cld
lret
sti
sub
jecxz
rorl
add
popa
jbe
and
add
clc
dec
dec
adc
into
mov
js
mov
sbb
cs
daa
les
sub
outsb
jl
and
push
push
pusha
addl
mov
add
cli
mov
ret
pusha
call
cmpsb
mov
mov
aas
add
cld
sbb
rolb
mov
ja
push
inc
bound
test
push
call
add
aad
mov
inc
sbb
inc
and
pop
sti
push
js
xor
add
add
add
loopne
add
inc
je
or
les
fiadds
loopne
bound
mov
dec
xor
push
mov
adc
pop
add
and
bound
loopne
push
sbb
ret
mov
inc
mov
adc
xchg
sbb
adc
inc
sbb
das
push
or
cmp
jne
or
xchg
or
and
addb
jle
test
mov
inc
repnz
add
inc
cmp
imul
and
mov
add
push
inc
sti
inc
push
push
jge
mov
call
add
jnp
jmp
lea
test
aam
rcrb
addl
mov
testb
mov
pop
add
mov
pop
ret
add
push
mov
push
mov
icebp
in
and
inc
dec
mov
cmp
popa
push
sarb
stc
enter
icebp
cmc
jo
enter
jp
je
or
add
call
ficomps
mov
jmp
loopne
or
adc
add
pop
push
orb
enter
popf
scas
or
sti
sbb
lock
ret
outsl
mov
xchg
sub
sbb
popa
sbb
leave
mov
sbb
xchg
rcrl
jae
enter
sahf
out
ret
mov
mov
sbb
pop
es
mov
movsb
add
jp
jecxz
xchg
cmc
pop
repnz
ret
in
shl
cld
and
xor
dec
js
add
xchg
popa
js
xor
pop
mov
mov
cmp
xor
mov
and
decb
mov
rcrl
daa
andb
mov
cmpsl
ljmp
loop
clc
fdivl
push
cmpsl
push
out
pop
dec
xchg
inc
mov
sbb
push
add
mov
sbb
call
lods
sbb
inc
pusha
jbe
imulb
fs
sbb
xor
xor
push
sbb
and
mov
and
xchg
and
or
or
roll
insb
sbb
xor
sbb
out
push
int
xlat
push
imul
lock
add
ret
push
and
shl
adcb
push
sbb
mov
mov
in
cmp
cmp
mov
mov
cmpl
pop
arpl
ret
pop
add
and
or
notb
or
test
pop
lock
pcmpgtw
loope
pop
cld
je
pop
mov
mov
leave
or
add
push
mov
push
add
imul
call
sahf
cmp
or
adc
or
pushf
or
push
ret
cwtl
in
cmpsb
and
aas
cltd
mov
enter
in
test
sbb
sbb
fwait
call
lret
inc
roll
sub
pop
jge
pop
rorb
into
stos
and
imul
fimuls
movsl
xchg
pushf
and
adc
lret
sub
sbb
shl
adc
jmp
cld
test
inc
cmp
sbb
out
sbb
scas
or
lock
loopne
add
cli
sbb
pop
inc
arpl
inc
loop
cmpsl
mov
mov
add
mov
das
dec
in
movb
add
sbb
push
clc
js
inc
push
sbb
add
mov
pop
pop
inc
push
and
push
pop
sbb
cmp
sub
mov
rclb
test
enter
push
and
ljmp
and
outsb
das
stc
rolb
rclb
stos
and
push
or
push
pcmpeqb
adc
jno
dec
adc
add
shll
add
je
cmp
mov
insb
push
push
test
ficoml
add
cmp
pop
das
pusha
xchg
jne
es
or
inc
sbb
add
mov
adc
bound
xor
add
add
in
or
js
cmp
xor
jp
pop
test
push
fiadds
xchg
inc
imul
jge
test
and
rclb
repz
sub
push
push
push
fwait
xor
and
clc
mov
js
mov
pop
je
aas
mov
mov
xchg
push
mov
cs
sub
push
xor
adc
in
testb
sub
jge
fwait
jl
cmp
push
arpl
call
pop
aas
loope
sbb
push
mov
mov
xchg
jp
ret
jo
xor
mov
push
dec
pushf
cmp
rcrb
add
push
jno
xor
aaa
sub
xor
pop
loop
sub
push
fs
or
pop
mov
rolb
mov
stos
add
daa
xor
out
mov
cmp
push
into
rorb
xchg
adc
loop
bound
sub
dec
xchg
mov
lds
xchg
fdivrs
adc
adc
orl
sbb
adc
sbb
or
into
shlb
xchg
and
cmp
mov
mov
adc
pop
push
sbb
add
or
push
rclb
aam
xor
xchg
imul
sub
cmp
aam
lock
or
insb
xor
xor
insl
and
xor
call
sbb
ret
pusha
push
jp
in
shrb
mov
jbe
js
dec
adc
cs
and
push
adc
sbb
inc
shr
rorb
loopne
sbb
and
jge
pop
pop
pop
cwtl
sub
push
or
in
push
push
dec
out
loope
sub
lcall
enter
pop
addb
stc
es
cmp
sub
ret
or
xchg
rcr
mov
or
std
adc
bound
cld
test
add
ss
or
add
add
imul
lcall
icebp
jno
and
xor
scas
or
iret
fcomps
cmp
push
xchg
rolb
lods
xor
mov
cmp
pop
mov
cmp
stos
and
pushf
adc
cmpb
push
cwtl
pop
push
popa
mov
mov
sbb
mov
adc
adc
cwtl
addl
test
inc
enter
stos
movsl
adc
hlt
mov
sbb
and
mov
dec
loope
stos
orb
test
popl
push
out
mov
sbb
mov
sahf
rclb
loope
les
fmull
in
or
negb
push
add
aas
insb
sbb
dec
data16
sub
subl
cli
cmp
ljmp
stos
add
loopne
jnp
shrb
cmp
or
shll
test
xor
push
push
shrl
sub
sbb
fistl
and
or
push
mov
into
jp
pusha
lods
mov
inc
push
stos
push
dec
or
jo
sbb
push
xchg
mov
cmp
aaa
xor
rclb
xchg
xchg
push
callw
mov
pop
cwtl
pop
push
rcrl
add
arpl
lock
movsb
or
lret
jo
cli
sbb
popf
xchg
push
aam
mov
pop
cwtl
adc
inc
dec
scas
rolb
and
push
popf
jp
sahf
das
mov
lods
mov
in
xor
xchg
push
popa
movsb
cmp
or
fcoms
mov
push
push
cmpl
adc
icebp
push
sbb
add
inc
adc
sbb
into
in
mov
push
lock
arpl
add
out
push
loop
sub
sbb
out
push
lock
push
push
aam
rolb
sub
or
sbbb
daa
pusha
jecxz
call
adc
sbb
jo
fisttpll
xchg
popfw
bound
xor
and
inc
add
sbb
cmp
js
sub
mov
lcall
scas
imul
mov
dec
inc
pushf
loop
ret
call
add
sbb
jp
jne
push
pop
push
dec
mov
fimull
cmp
adcb
adc
rolb
cli
adc
jecxz
dec
popf
sbb
test
sbb
xlat
mov
scas
add
and
fs
inc
mov
mov
orb
test
adc
test
test
push
andl
inc
add
mov
cmp
inc
mov
je
pop
dec
scas
clc
add
push
sbb
and
mov
scas
fwait
push
inc
testb
add
sbb
mov
ds
pushf
cmp
popa
and
jbe
and
inc
sub
out
xor
inc
dec
loop
mov
xchg
add
push
or
sbb
aaa
or
mov
cmpb
ljmp
lds
xor
shrb
or
adc
testb
or
cmpsb
mov
or
or
outsb
mov
sahf
mov
gs
or
sarb
xchg
sbb
outsl
ret
inc
pop
adc
cmp
jp
rolb
sbb
jns
xchg
dec
pop
cmp
push
pop
or
jno
lods
test
or
call
popa
pop
cmp
and
es
shrb
push
cmp
callw
jno
sti
das
lods
and
fcoms
adc
addl
adc
adc
mov
dec
xchg
ficoml
mov
push
push
aas
jb
cmc
hlt
or
mov
fs
mov
stos
sbb
outsb
and
gs
je
mov
or
add
hlt
clc
ret
repnz
leave
add
rolb
or
mov
pop
lock
clc
into
xchg
inc
sbb
negb
adc
cmp
sub
sub
cwtl
sub
push
lea
cmp
icebp
lea
push
or
and
cli
call
lock
xchg
out
sbb
in
mov
mov
sub
jo
sbb
push
loope
jp
nop
sub
or
jl
ljmp
fmull
sub
rorb
push
aam
push
sub
mov
mov
adc
lret
or
or
mov
das
sahf
das
sub
call
or
shrb
xor
aad
jecxz
mov
pop
or
test
cltd
test
leave
sbb
mov
cmc
dec
addb
test
out
clc
or
popa
add
cli
cmp
cmp
and
out
pop
dec
or
mov
xchg
lret
repnz
ljmp
cmp
call
add
sub
sti
movsb
adc
push
or
jmp
xchg
test
or
xor
xchg
dec
pop
sbb
xchg
adcl
dec
cmp
mov
cmp
mov
cltd
dec
pushf
pop
mov
arpl
adc
mov
bswap
dec
mov
xor
clc
cmp
sub
push
cltd
daa
test
push
loopne
jp
xchg
ret
and
xor
leave
dec
lock
push
add
mov
popa
push
mov
rclb
dec
call
add
dec
mov
mov
jmp
lahf
sbb
inc
lods
mov
loop
sarb
mov
push
bound
andb
sahf
ljmp
mov
fs
and
and
push
fcompl
jnp
cmpsb
stos
xlat
lods
push
push
leave
push
cmp
jb
and
arpl
add
and
popa
aaa
lcall
xchg
repz
test
sarl
jecxz
ficoml
rclb
pop
and
popa
sub
lret
mov
loopne
sub
xor
push
add
dec
inc
add
cltd
js
ret
add
adc
cmpsb
shll
sbb
xor
pop
mov
xchg
mov
xor
sub
test
pop
dec
xorl
stos
cmp
jbe
pop
lret
mov
rorb
add
push
pop
sbb
sbb
scas
and
push
imul
pop
mov
ljmp
sbb
mov
hlt
xchg
lock
ret
xchg
sahf
into
jle
nop
rolb
cmpl
push
sub
lock
xor
push
shll
mov
adc
and
icebp
jp
or
pop
xor
mov
xlat
roll
mov
cwtl
mov
js
mov
push
push
push
mov
mov
fs
shlb
je
xor
sub
or
pop
outsb
mov
push
push
or
or
or
and
dec
inc
dec
cli
or
lods
mov
xchg
scas
mov
or
mov
loop
je
mov
add
jp
pushf
hlt
andb
adc
sbb
cmp
addl
enter
jbe
dec
mov
add
mov
or
lock
xadd
ljmp
shrb
cmp
lea
call
xor
xchg
je
test
xlat
bound
mov
pop
cmp
add
mov
push
aas
ret
es
or
testl
cs
shlb
dec
insb
mov
outsl
cld
call
mov
mov
sub
push
js
rcl
lret
xor
add
cmp
xchg
ror
sub
adc
pop
sbb
movsb
or
stc
add
push
std
sbb
sub
sbb
mov
mov
in
sub
mov
mov
call
clc
add
sbb
fs
and
add
js
lahf
imul
adcb
or
push
push
add
pop
mov
sub
add
rorl
mov
call
mov
icebp
gs
call
cmp
or
xlat
sbb
call
shlb
pop
and
add
mov
or
ret
or
imul
push
adc
call
lock
cmp
mov
dec
push
pushf
repnz
pop
andb
pop
xchg
push
cmp
in
int3
push
dec
jmp
xchg
dec
cltd
and
dec
ds
lock
hlt
add
loopne
adc
jg
jmp
add
mov
popf
stc
dec
jo
inc
or
add
dec
pop
sbb
ljmp
pop
out
mov
push
fmul
push
add
out
and
sub
sarb
sbb
sub
jo
adc
mov
rcl
sti
push
push
repz
push
and
and
and
or
hlt
cmpsl
out
cmpsb
leave
and
dec
mov
rol
mov
cwtl
loop
adc
jecxz
mov
pushf
sub
shl
iret
lcall
subb
repnz
rcrb
cmp
mov
sbb
or
inc
icebp
xchg
or
add
fidivrl
jp
aam
add
subb
jge
push
test
cmp
xor
loope
ret
or
sub
sbb
cmp
add
ret
cwtl
push
out
fcmovu
jmp
sarb
stos
inc
xor
or
icebp
push
or
shr
bound
mov
and
dec
push
lods
sarb
add
push
add
or
lret
add
xor
mov
xor
or
mov
daa
xor
and
jnp
imul
cmp
mov
xchg
dec
sbb
cmp
lods
test
jmp
push
ljmp
idivb
adc
ljmp
jne
push
or
sbb
int3
sbb
pop
push
lea
inc
lock
push
pushf
and
jl
adcl
push
sub
sbb
imul
subl
push
mov
sbb
sbb
push
rorb
inc
hlt
stos
push
inc
lods
lea
cmp
add
xchg
dec
mov
stos
loope
rorb
pop
adc
fistl
mov
bound
ror
stos
addl
add
dec
sarb
inc
mov
push
popa
test
add
jnp
movsl
jo
mov
jo
shr
lret
jo
inc
add
aad
dec
or
cld
pushf
add
add
pusha
rclb
adc
scas
sbb
lret
add
pop
inc
test
adc
dec
bound
les
mov
ret
dec
outsb
int3
cltd
movsb
movhps
inc
or
pop
movsb
pop
shlb
sub
xchg
icebp
or
jmp
push
cs
into
or
outsl
loopne
mov
cli
testl
pop
inc
and
rolb
xchg
test
cmpsl
mov
ljmp
cs
sub
outsl
dec
or
xor
push
cwtl
adc
lods
dec
clc
cmp
ror
sbb
rorl
pop
cmp
ret
sub
cli
enter
and
testl
repz
sbb
sbb
sbb
mov
gs
fnstsw
aam
popf
rclb
sub
std
pop
mov
js
cld
and
call
loop
shr
push
leave
hlt
mov
adc
push
adc
outsb
pop
movsb
sbb
clc
lret
ret
in
mov
or
and
inc
imul
mov
lock
mov
stos
mov
ljmp
and
cmp
push
in
xchg
or
or
ret
push
loop
jne
imul
imul
mov
lret
fisubs
pushf
mov
rorl
ret
push
push
subb
add
mov
mov
or
shl
dec
pop
arpl
xchg
push
push
mov
loope
dec
fnstenv
inc
push
or
rolb
js
negb
test
je
sbb
jecxz
sub
inc
mov
or
sar
and
das
decb
dec
cmp
sbb
mov
enter
push
push
test
jo
stos
push
or
lret
or
and
xor
rcll
pushf
inc
adc
cs
jb
daa
clc
les
rclb
add
pop
xor
inc
leave
xchg
or
movsb
or
jne
dec
inc
testb
cmp
add
push
test
movsb
adc
decb
pop
outsl
lods
cmpsb
sahf
push
or
mov
pop
test
loopne
add
mov
xchg
push
jae
xchg
xlat
popf
data16
or
icebp
sub
loop
aam
push
pop
test
cmp
cs
ds
leave
jno
das
add
cmp
test
inc
or
xchg
test
ss
clc
adc
xor
mov
rorb
pop
xchg
xchg
adc
xor
mov
mov
mov
mov
mov
sbb
test
adc
xor
loopne
das
aam
or
xchg
push
push
iret
aad
sbb
faddp
push
xchg
jg
inc
xchg
push
pop
cwtl
xor
push
sti
rclb
rorb
gs
pop
sbb
inc
leave
mov
popf
mov
push
push
pusha
xorb
bound
jo
xchg
fldt
jl
andl
pop
push
sub
ss
hlt
rclb
push
pop
test
call
mov
sahf
dec
push
inc
test
nop
push
xor
add
mov
add
adc
adc
stos
rolb
sub
push
cmovp
daa
adc
or
xor
rolb
jo
mov
cmp
rorb
flds
xorl
dec
lods
rol
xchg
fst
push
mov
je
lahf
sub
mov
push
sbb
push
sbb
shll
lcall
cmp
arpl
andl
push
xchg
sbb
ror
dec
ljmp
dec
ret
sbb
pop
pop
or
out
xchg
and
inc
cmpsb
das
mov
adc
adc
jbe
push
mov
mov
add
clc
cmp
push
add
xchg
add
dec
in
icebp
add
mov
dec
pop
sub
adc
int3
sbb
stc
xor
stos
xchg
jne
inc
mov
xor
sbb
sbb
js
lods
ds
cmp
adc
pusha
shll
sub
movsb
pushf
lahf
or
je
and
push
pop
aas
nop
sbb
or
adc
out
xor
push
fidivs
lock
pop
dec
or
imul
and
pop
es
or
test
jp
adc
out
inc
adc
xlat
shlb
fmul
sub
xchg
push
add
push
add
fdivl
lea
inc
test
and
out
sahf
dec
jb
mov
sbb
enter
movsl
les
xchg
pop
dec
xor
adc
sbb
mov
cwtl
sbb
leave
or
mov
or
push
mov
adc
rcrb
jg
fsubl
shrl
xorl
out
test
test
sub
clc
enter
insb
lret
aam
jnp
pop
cmp
inc
notb
push
mov
push
pop
sbb
mov
loopne
xchg
clc
push
ljmp
add
inc
sbb
sti
imulb
mov
jge
sbb
ret
js
xor
mov
cmp
push
insb
cmp
gs
inc
adc
rcrl
test
add
mov
call
pminsw
je
mov
jo
shlb
out
adc
and
rolb
cltd
push
add
push
pop
rcl
cld
clc
mov
sarb
mov
push
xchg
or
xor
loopne
pop
shll
add
add
push
mov
and
push
lcall
jle
outsb
xor
push
dec
xchg
add
sub
add
rclb
int
test
and
or
cmpsb
pop
add
xor
push
xchg
sbb
add
sbb
add
mov
enter
mov
ss
insl
faddp
push
lods
push
or
test
cmp
mov
test
add
adc
sbb
push
sub
faddp
push
or
pop
shl
sbbb
pop
cmp
repnz
sbb
shlb
pop
aam
jb
das
mov
mov
cmp
mov
add
xor
or
test
das
jmp
repnz
popa
xor
mov
cltd
pop
sbb
pop
cmp
add
or
jb
cmp
xor
ljmp
sbb
jl
push
movl
adc
cmp
call
or
add
rolb
push
or
cmp
add
cli
test
je
and
cld
subl
adc
cli
xor
scas
into
test
xor
mov
cld
sub
sbb
sub
mov
test
clc
mov
mov
rclb
adc
rolb
xchg
add
mov
inc
enter
mov
aaa
lret
pop
ficomps
jns
push
push
mov
or
inc
enter
add
ret
xorb
and
jmp
sbb
imul
and
and
adc
jo
cwtl
pop
add
lock
push
nop
xor
clc
repnz
and
insb
arpl
cs
ds
mov
int
dec
inc
movsb
pop
sbb
jl
aam
subb
cmc
pop
sub
jnp
add
stc
daa
mov
and
bound
or
add
pushf
rol
xorb
nop
xlat
roll
push
jg
test
lock
push
add
loop
shrl
stc
push
sub
mov
ret
lcall
imul
cli
push
rolb
shll
push
mov
mov
outsb
xchg
loopne
outsb
mov
loopne
jp
movsb
pop
jmp
lcall
add
mov
cmp
scas
xchg
sbb
outsb
loopne
mov
fst
add
orb
push
adc
mov
je
or
or
mov
push
ja
lea
sbb
sahf
add
or
or
stos
out
je
add
push
pop
fnstenv
dec
aas
lret
and
sbb
ds
gs
add
dec
push
lock
inc
mov
rcl
add
inc
dec
pop
aaa
jg
shl
adc
aam
inc
adcb
or
or
loop
xor
into
sbbl
lcall
nop
fidivrs
adc
ret
sar
adc
enter
sbb
push
lods
push
and
or
xchg
adc
mov
into
lret
shl
adc
pop
lock
pop
das
sub
cmpsl
or
sub
push
movsb
xchg
xor
jnp
loop
add
jecxz
push
int3
or
push
inc
add
adc
shll
imul
xor
bound
sub
or
or
inc
push
pusha
enter
out
add
jp
jae
cwtl
loopne
mov
xchg
in
jb
stos
ret
es
loopne
inc
ret
and
ret
loopne
or
ret
mov
adc
sub
xchg
sub
bound
mov
dec
sahf
insb
fcomps
outsl
call
ljmp
or
sub
or
test
push
adc
push
and
sbbb
inc
sahf
imul
mov
rorb
jbe
outsb
jmp
repnz
ljmp
mov
sub
andl
or
jb
mov
mov
test
mov
lock
in
fidivs
arpl
mov
ret
jno
cmp
push
push
push
push
add
test
inc
loope
jo
xchg
rolb
pusha
pop
dec
pop
lds
adc
push
or
add
ret
arpl
jno
into
out
adc
enter
push
mov
mov
idivb
stos
data16
push
xchg
push
nop
xor
jl
cltd
subb
mov
add
je
jecxz
pop
leave
push
shlb
les
sbb
cmc
movsl
arpl
lods
dec
add
outsb
mov
and
mov
adc
sbb
jp
mov
adc
nop
sbb
xlat
pop
loopne
scas
add
sbb
pushf
add
add
mov
pop
cmp
ret
add
add
push
push
inc
mov
or
dec
lods
adc
cmpsb
sub
in
or
and
jno
xor
pop
cmp
sahf
mov
jl
fdivp
rol
daa
std
xor
or
push
lods
xor
inc
movsb
mov
dec
pop
es
nop
mov
add
xlat
xchg
push
or
adc
or
mov
outsl
xor
or
push
data16
fs
and
cmp
in
stos
cmp
adc
js
hlt
div
sarb
mov
ds
int3
sbb
lock
add
idiv
xchg
cmp
test
add
lock
add
test
fcompl
cmp
negb
mov
or
push
popf
lret
sbb
xlat
repz
hlt
icebp
orl
loope
or
mov
divl
sahf
mov
sbb
add
dec
popf
jno
ds
sbb
pop
pop
inc
stos
aam
mov
add
mov
jp
into
xchg
out
cmp
xor
roll
dec
sub
sbb
shlb
add
cmp
fadd
add
icebp
test
cld
cmpsb
push
xchg
notb
frstor
icebp
aam
dec
sbbb
clc
mov
pop
js
xchg
lock
rol
jb
and
fs
movsl
mull
lea
rclb
es
jmp
popa
add
lret
pop
push
rclb
jb
jb
mov
jb
lods
clc
push
and
shrb
adc
or
js
add
xchg
nop
mov
loop
lock
mov
mov
orb
lret
mov
and
jge
cmpb
add
inc
push
hlt
sbb
xchg
sahf
push
in
rolb
cmp
lea
sarl
or
rclb
sbb
mov
xchg
push
push
sub
fmuls
jo
adc
xchg
inc
mov
mov
subb
mov
xchg
push
inc
xor
jp
add
sti
stos
ds
nop
jp
fcoml
or
jne
and
shr
add
lret
xchg
or
xchg
and
add
pop
sbb
rcrl
inc
nop
cli
test
and
and
pop
push
daa
push
mov
insl
leave
add
dec
iret
jle
rcll
mov
dec
or
sbb
pusha
loopne
push
push
outsb
sub
push
daa
mov
shrb
imul
or
pop
jp
imul
pusha
fildl
ds
add
lcall
int
adc
shrl
xor
lods
test
je
pusha
repnz
push
inc
aas
xchg
xchg
adc
das
push
inc
and
adc
sbb
ret
add
nop
pusha
and
xor
out
jae
scas
andb
frstor
push
add
sbb
jb
jne
into
jo
dec
popa
ret
xchg
push
inc
ret
cmpsl
stc
xchg
or
push
leave
cmp
mov
add
add
mov
mov
ljmp
shll
pusha
das
xor
mov
or
push
push
adc
mov
cli
sub
lea
into
add
inc
dec
loope
sbb
sub
popf
outsb
mov
xchg
aaa
mov
mov
dec
test
daa
cs
push
bound
daa
ds
dec
loopne
enter
cmp
pop
pushf
xchg
sbb
lret
push
and
inc
fs
adc
rcl
xchg
push
jmp
pop
pusha
nop
xor
add
roll
and
cmp
loop
test
push
xor
jmp
adc
repz
in
sub
jnp
mov
push
mov
repz
movb
and
sub
push
sub
mov
jo
lea
scas
push
push
shrl
xor
aaa
leave
addr16
loopne
push
push
leave
add
or
dec
mov
xchg
subb
dec
js
sbb
inc
mov
int3
cmp
lock
mov
popf
xchg
jmp
cmp
cmp
adc
dec
aam
shlb
adc
loopne
pop
xor
jns
mov
push
push
rolb
dec
insl
mov
mov
hlt
pop
ret
sub
inc
rolb
push
push
add
mov
outsl
jne
arpl
outsb
lret
dec
pushf
adc
jo
push
cmp
adc
leave
add
pop
lret
push
divb
call
shlw
sbbl
cld
outsb
add
dec
orb
aam
pop
into
xlat
es
push
push
mov
pop
mov
les
jmp
jae
outsb
movsb
xchg
lods
mov
mov
pusha
ljmp
cli
inc
cmpsl
and
mov
lock
mov
adc
jne
loopne
inc
cmp
xor
test
ret
es
push
cmpsb
or
jg
add
push
dec
push
fldl
or
ficoms
lock
push
inc
pop
adc
nop
inc
and
hlt
push
pushf
or
xor
daa
shll
fadd
push
dec
jge
inc
jp
mov
push
cmp
sbb
cld
push
xchg
push
mov
push
jp
pop
push
mov
adc
ja
push
push
test
cmc
scas
outsb
das
sbb
xor
add
shl
xor
dec
inc
popf
test
cmpsl
pop
cmc
and
or
dec
testb
push
adc
clc
call
jne
lret
into
jnp
pushf
andb
ss
jb
sbb
loop
mov
daa
ljmp
icebp
mov
sbb
adc
rcrb
ljmp
cltd
ljmp
or
shlb
lret
pop
dec
adc
test
movsl
loope
in
sbb
mov
mov
push
push
push
and
jns
pop
data16
sbb
mov
insl
sbb
clc
and
into
push
push
lret
movsl
in
adc
cld
pop
popa
cmp
call
imul
xchg
xor
cwtl
lods
pop
add
adc
insl
pusha
jo
rol
mov
out
mov
pusha
rclb
out
pop
adc
xor
aas
sub
repz
or
push
push
pop
sub
or
xor
lock
loope
lcall
lock
pushf
mov
imul
sub
push
aas
sub
sarl
jl
cmp
js
ficomps
fimuls
adc
pushf
call
popa
lcall
pusha
les
cmp
pop
leave
or
push
xchg
hlt
aad
xchg
shlb
imul
sbb
or
push
pop
incb
cmpsl
icebp
or
jle
lods
add
mov
les
pop
and
push
into
lret
or
and
push
movsb
cld
rol
push
int3
push
add
or
test
add
adc
inc
add
cli
clc
sub
mov
sub
or
push
es
shll
xchg
sub
fcomps
xchg
or
fildl
sbb
and
loopne
mov
push
jmp
aad
js
fadds
cmp
push
cwtl
enter
and
jns
adc
jp
shrb
test
je
push
mov
push
je
mov
sub
cmp
cmp
xchg
adc
push
dec
mov
lret
inc
in
fadds
ret
mov
in
mov
add
or
inc
rclb
sbb
cmp
sbb
adc
or
or
jle
icebp
inc
cmp
push
fcoml
out
cli
ret
push
imul
mov
rorb
sub
dec
adcb
pop
jmp
addr16
mov
pop
adc
roll
inc
xlat
sub
mov
shlb
add
adc
shl
add
leave
cmc
or
cmpl
and
lods
mov
cmp
ljmpw
stos
add
or
jp
into
scas
push
pop
pop
sub
fisttps
loop
es
or
pop
leave
dec
add
cs
jo
loop
loope
ret
xchg
xor
out
call
cli
cmp
rcll
adc
jne
adc
push
jl
mov
mov
mov
fsubs
scas
loopne
push
push
push
fisttps
movsb
inc
repnz
movsb
les
sbb
add
fcomi
fcompl
add
loopne
or
and
ret
punpckhbw
add
push
push
jnp
movsl
or
lea
pop
imul
pop
cmp
aas
jne
popa
pusha
pusha
push
pop
shll
push
je
popf
pop
mov
adc
push
or
sbb
jo
and
faddl
mov
sbb
or
inc
sub
jb
and
notb
leave
dec
test
mov
imul
and
push
ret
ret
pop
sbb
dec
pusha
cmp
test
adc
pop
lcall
cmp
push
add
add
xor
push
imul
add
add
inc
pop
dec
dec
pop
cwtl
adc
and
sarb
inc
dec
inc
jmp
and
or
adc
and
mov
sbb
orl
cmc
icebp
push
adc
push
rorl
push
add
mov
movhps
sbb
sar
out
inc
rol
mov
dec
xor
in
rcll
xchg
push
sub
orb
sahf
bound
add
ljmp
xor
add
icebp
and
mov
enter
sub
js
mov
add
mov
or
inc
lea
fwait
imulb
ror
xor
mov
jbe
pop
or
pop
xorps
cltd
pop
add
adc
leave
push
test
push
push
shl
js
inc
rolb
push
push
out
shrl
xorl
out
push
inc
push
stos
jg
int3
mov
cmp
ljmp
cmp
ljmp
loope
mov
push
pop
sub
jns
daa
inc
cmp
push
mov
cmpb
pop
pop
or
out
sbb
lcall
xchg
lock
xor
pop
sub
adc
xchg
add
sub
mov
adc
ret
pop
ficoms
mov
daa
push
push
loopne
dec
mov
push
ret
sbb
repnz
adc
sbb
jge
jecxz
jp
fcomps
pop
adc
mov
dec
xor
lods
data16
adc
stos
lea
loopne
rolb
lds
test
je
and
cmp
dec
bnd
in
movsl
add
add
pop
in
xlat
push
pop
aas
and
daa
gs
xchg
sbb
inc
mov
sbbb
ja
sub
mov
mov
push
jne
and
jecxz
jne
mov
rcl
mov
mov
add
fsubs
fsubrl
lock
movsb
add
dec
cmp
mov
add
cmpsb
sbb
sbb
or
add
dec
lock
imul
pop
rcrb
ljmp
shll
ljmp
ljmp
hlt
and
and
lods
xorl
rcrb
push
in
or
push
or
add
add
sbb
ret
ret
ljmp
pop
andl
mov
cwtl
add
ficoml
sub
add
jb
or
popa
gs
add
jne
lock
es
rcrb
add
rolb
mov
add
pop
dec
sub
cwtl
mov
mov
push
pop
pop
jmp
in
mov
add
icebp
push
push
test
cmp
adc
push
inc
push
push
clc
xor
add
in
sbb
lahf
adc
jo
or
faddl
or
rorl
jecxz
hlt
adc
inc
outsl
adc
lods
mov
mov
push
incl
nop
mov
fucom
push
pusha
int
xorl
rclb
out
cwtl
push
inc
scas
xchg
add
sub
ret
jle
je
inc
sbb
shl
xchg
lods
and
pusha
dec
pop
ret
mov
sti
push
pop
push
sbb
or
xor
pusha
xchg
mov
sub
enter
rclb
sub
and
sbb
lcall
or
add
enter
popa
movsl
mov
pop
outsl
loop
xchg
add
das
and
xchg
inc
loopne
stc
cmp
mov
or
rorb
dec
push
test
pop
add
jge
mov
arpl
sahf
add
lods
pop
shlb
js
and
shrl
or
outsb
pop
fimuls
dec
mov
and
fdivrs
cmp
addl
add
andb
daa
dec
adc
inc
js
dec
aas
movsl
pop
push
mov
push
insb
or
or
cmc
dec
lods
lcall
lods
test
in
xlat
scas
jbe
cmp
dec
adc
jp
ret
rcll
pop
test
loop
mov
add
add
xchg
mov
shlb
sub
pop
sahf
add
or
push
dec
push
mov
cli
xchg
cli
xchg
or
cmpsb
sub
loop
push
or
cli
mov
push
arpl
sub
adc
add
idiv
add
enter
push
out
imul
inc
inc
lret
mov
aas
dec
hlt
and
pop
add
pop
inc
xchg
adc
mov
or
orb
add
mov
xchg
in
sbb
jne
adc
and
add
jp
mov
mov
test
mov
stos
pop
add
ss
rclb
sub
pop
cmp
popf
xor
and
sbb
add
pop
cmpsl
jp
push
scas
outsl
sbb
cmp
jl
loop
add
popa
icebp
test
outsl
cwtl
xchg
mov
ret
ficomps
dec
mov
pop
arpl
sub
and
rorl
pop
ret
sbb
push
jg
sbb
mov
dec
loop
rclb
fadds
lret
dec
add
cmc
shr
push
sub
adc
push
or
dec
mov
lock
sbb
ror
into
and
adc
pop
inc
pusha
mov
jmp
sbb
repnz
or
xor
mov
xor
and
jo
test
sbb
jnp
loopne
dec
cmpsb
push
and
mov
dec
cmp
sar
popa
aad
pop
sub
enter
mov
cmp
inc
cmp
imul
jo
sub
and
test
ds
fiaddl
jno
shrb
push
push
and
pop
dec
sbb
inc
scas
pop
cmp
ds
mov
sub
mov
hlt
es
ljmp
jp
xchg
pop
push
pop
sub
andb
in
sbb
or
mov
mov
aas
orb
bound
test
mov
push
pop
in
enter
fiadds
rorb
xchg
push
add
jo
xchg
icebp
cmp
loopne
loopne
jmp
pop
pop
pop
loopne
mov
mov
push
ret
insb
pop
cltd
jmp
jp
sub
dec
int
test
loopne
xor
inc
inc
push
dec
cld
mov
sub
inc
imul
inc
sbb
gs
xor
push
push
or
pusha
arpl
jbe
push
pop
or
rcrb
call
stos
or
jl
leave
and
or
add
inc
xor
scas
or
shlb
mov
mov
sbb
add
es
lods
stos
sbb
call
fdivrp
push
aam
fs
mov
arpl
push
or
ljmp
xchg
pusha
or
outsb
adc
dec
cmpsl
dec
dec
rol
ret
push
call
test
xor
mov
pop
cli
fs
xchg
add
jp
add
and
pop
adc
and
push
mov
jp
pop
and
sbb
and
xchg
push
ljmp
data16
icebp
mov
lock
js
and
aam
inc
and
jecxz
cmc
stos
xor
ss
sbb
xchg
inc
clc
sbb
pop
sub
jle
stos
push
push
adc
xor
dec
pop
mov
bound
sub
cltd
andb
fcomps
bound
xchg
test
repnz
loope
sbb
es
fcmovu
pushf
xor
lret
rorb
cld
mov
push
jo
iret
mov
addl
inc
or
xchg
mov
rcrb
loopne
pop
adc
rclb
xchg
push
xlat
test
push
jge
lock
xor
pusha
mov
adc
pop
test
pop
xor
popa
and
pusha
inc
fwait
pop
shl
push
sahf
scas
lock
sub
push
pop
push
or
add
sahf
push
les
push
cs
cmp
jne
sbb
push
sbb
mov
ljmp
int3
cli
or
rorb
loop
sbb
dec
jo
lods
push
or
push
and
sub
rcll
xlat
notb
sarb
jb
shrb
shl
pop
sub
cmc
xchg
lcall
and
cwtl
pusha
lods
addb
popf
pop
jo
sbb
lret
cmp
add
inc
mov
add
sbb
movb
push
imul
out
jno
mov
adcb
inc
idivb
sub
stos
cmp
and
push
pop
cmc
rcl
sbb
hlt
xor
push
lcall
mov
cmp
push
lret
add
loope
cwtl
insb
push
adc
jp
add
hlt
fmull
stc
movsb
add
and
add
inc
sub
out
shll
adc
sbb
lock
enter
add
sbb
adc
rclb
mov
in
mov
sub
les
nop
xor
or
mov
add
cmp
lods
xchg
jg
shrl
mov
and
sbb
mov
or
adc
into
push
test
sub
mov
mov
in
xor
adc
jb
pop
cmp
dec
cmc
test
or
out
add
sahf
scas
pop
fsts
pop
or
shrb
adc
cld
aad
sbb
mov
leave
push
xchg
sub
adc
add
or
sub
cmp
rcl
jb
mov
sbb
add
dec
lret
jns
cmc
ret
sbb
or
or
sub
adc
xchg
clc
mov
mov
sbb
aad
clc
enter
push
cwtl
les
nop
sub
lods
xchg
test
bound
ffree
adc
icebp
mov
mov
test
ljmp
icebp
xor
add
call
hlt
stos
clc
inc
enter
adc
sub
sub
cs
add
test
xchg
ss
adc
loopne
mov
mov
bswap
xchg
add
rolb
ret
push
xchg
shll
pop
test
push
call
enter
les
daa
shl
cmp
cmp
outsb
adc
push
pop
das
or
push
imul
add
jo
test
stos
repnz
mov
lret
out
stc
loopne
dec
loopne
inc
cmp
mov
mov
mov
and
adc
sub
inc
and
inc
daa
add
pusha
gs
mov
icebp
je
loopne
and
mov
cltd
movsb
and
dec
outsb
mov
and
xchg
sub
rol
mov
sub
lret
xchg
jp
ljmp
mov
je
push
add
outsb
pop
xchg
loope
or
cmp
lods
enter
cltd
jb
cmp
or
or
aas
xor
inc
imul
jecxz
pop
ret
and
push
push
or
lret
adcb
sbb
adc
dec
or
mov
xor
bound
std
sbb
fimull
std
xor
add
or
mov
loop
dec
push
lods
adc
pop
stos
xchg
testl
popa
adc
ds
sbb
or
jbe
test
ds
cmp
xchg
imul
and
jbe
mov
dec
push
mov
push
out
ja
pusha
imul
jno
push
inc
dec
stos
sub
cs
inc
or
sub
addb
sbb
iret
add
je
jb
sarb
adc
add
adc
xchg
xchg
push
mov
iret
jb
lret
xor
lret
cmpb
xor
adc
ds
pop
adc
icebp
sbb
adc
dec
pop
stos
enter
add
mov
inc
addb
rorb
push
arpl
sbb
fldcw
pusha
shlb
xor
rcl
sub
aam
adc
in
pop
test
cmp
or
jb
dec
add
loop
popf
dec
add
movsl
sbbl
shrl
cmp
inc
pop
mov
lods
add
jmp
sbb
sub
loopne
rol
sub
dec
cmpsb
das
jmp
xchg
and
mov
jp
jge
sbb
sub
cmp
push
sub
xchg
hlt
inc
leave
shlb
pushf
mov
fldl
push
test
negb
sbb
add
mov
add
dec
test
inc
mov
cmp
cmpsl
rcl
cmp
inc
ret
jecxz
mov
or
and
lock
aad
push
aam
les
mov
sbb
jg
addl
and
cmp
or
add
hlt
push
xor
sbb
das
push
sbb
sarb
or
inc
pop
sbb
sbb
xor
cs
mov
movsb
rorb
out
call
xor
mov
and
push
sbb
add
or
mov
xor
mov
add
jecxz
and
rcrl
imul
lock
jg
push
push
mov
adc
mov
jo
pop
adc
mov
stos
push
sbb
jno
jb
sbb
or
divl
and
push
rclb
icebp
mov
loopne
inc
push
mov
mov
pop
inc
sbb
pop
add
adc
add
adc
cmc
fdivs
xchg
rolb
rclb
cmp
sbb
add
div
cmp
sub
les
inc
adcb
out
push
add
add
stc
les
js
cmp
dec
cmpb
dec
cmpsl
in
ret
lcall
adc
mov
ret
mov
inc
pop
pusha
aad
hlt
mov
pusha
sbbb
fidivs
movb
jmp
mov
cmp
push
and
push
jge
or
out
sbb
or
ds
and
test
rcll
sub
pop
mov
mov
loope
jns
aad
add
rol
xor
push
icebp
enter
mov
sbb
and
mov
jo
dec
icebp
sub
dec
and
push
mov
mov
sub
mov
mov
movb
adc
shr
pop
xchg
xor
test
push
mov
mov
ds
and
or
pshufb
pop
repnz
sbb
test
inc
lcall
seta
jp
sahf
pushf
out
push
jmp
sbb
cmpsl
sub
dec
ljmp
push
mov
mov
add
push
pop
and
xchg
or
cmpsl
xchg
fstps
mov
xchg
gs
loop
adc
adc
ret
pop
popa
mov
adc
out
stos
rcll
xchg
lcall
fcomps
xchg
push
jb
adc
push
cvttps2pi
rolb
push
ja
rorb
add
ret
les
out
loope
dec
xor
jp
mov
test
xchg
mov
aas
pop
loopne
outsb
push
leave
push
mov
lcall
ss
imul
adc
adc
cmp
sbb
add
cli
xchg
jne
inc
data16
push
xchg
int
sub
nop
adc
bound
insl
rolb
adc
leave
and
mov
push
in
push
push
hlt
cli
cli
je
inc
adc
add
pop
in
xchg
xchg
jo
dec
fisubl
cmp
jle
push
mov
jp
add
sbb
in
shll
mov
movsb
lret
mov
rcll
adc
xor
adc
mov
rcrb
or
inc
jg
cmp
or
mov
outsb
pop
outsb
in
add
add
testb
hlt
and
push
ja
xchg
pop
pusha
and
shrb
cmp
add
mov
in
and
stc
sbb
adc
or
inc
pop
dec
adc
sbbl
jnp
cmpsl
lock
add
das
test
mov
mov
cmc
adc
push
cs
add
xor
gs
or
push
lret
jo
jb
mov
orb
xchg
mov
inc
les
stos
das
add
lret
enter
or
orb
dec
movb
test
adc
cmpsb
daa
and
pop
pop
mov
imul
popfw
xor
roll
stos
or
inc
sub
xor
shl
pop
pushf
dec
ret
cwtl
pusha
js
and
push
ret
pusha
add
adcb
push
add
jmp
addb
mov
mov
lcall
rcrb
sar
push
jo
shll
decb
and
test
and
or
sahf
enter
pop
pop
push
mov
sub
add
jb
rorb
lcall
xor
sub
inc
or
call
pop
mov
sbb
sahf
icebp
adc
cs
jns
inc
insb
mov
imul
sbb
ss
scas
and
pop
push
dec
add
lock
test
add
ret
add
mov
shrl
mov
jbe
mov
or
cmp
lcall
xlat
clc
add
and
mov
rcll
andb
add
adc
and
mov
add
pusha
xlat
test
rolb
sbb
pop
pop
and
call
push
push
pop
adc
pop
insb
adc
popa
cmc
sub
jp
and
push
and
push
or
push
pop
lahf
test
ljmp
loope
lret
and
sub
lahf
sub
push
test
cli
mov
push
xchg
push
add
lret
xor
clc
dec
add
icebp
jmp
or
mov
or
inc
cmp
xchg
rorl
test
push
scas
adcb
xchg
sub
test
inc
mov
pop
das
test
psubb
nop
adc
sub
hlt
mov
cmp
push
xchg
ret
and
aaa
push
add
mov
mov
add
daa
or
pushf
jp
mov
mov
test
push
sbb
push
mov
js
call
inc
cmp
int3
mov
pop
adc
js
jb
cmp
rorb
inc
and
pop
ss
mov
and
imul
sbb
inc
cmpsb
or
dec
xchg
ret
mov
fadd
sub
jl
mov
adc
sbb
aad
xchg
add
push
subl
jbe
lods
cld
xor
push
and
adc
sub
ret
ret
inc
notl
and
enter
leave
aas
popf
push
aam
jp
sbb
pop
inc
add
push
lods
mov
or
mov
sub
sub
cli
push
add
xor
bound
pop
push
mov
mov
dec
cmp
shr
add
in
mov
mov
lret
fimuls
xchg
xor
xor
lods
mov
xchg
shl
inc
inc
jne
cmp
push
or
xchg
cmp
push
xlat
mov
or
sbb
mov
adc
inc
fs
push
xor
push
sti
ljmp
sti
push
mov
dec
adcl
outsb
test
sub
fwait
das
test
popf
pop
sub
rcrb
lret
xlat
or
loopne
int3
dec
add
xorb
sub
adc
sbb
sbb
je
adc
fstps
lcall
push
pop
rcrb
or
xchg
les
push
or
xor
mov
nop
dec
pusha
pusha
mov
mov
cmp
add
ds
xlat
shll
push
add
xor
and
sarb
cmp
xchg
or
into
mov
xlat
test
cmpb
ljmp
leave
xor
xor
lret
mov
imul
sbb
aam
xor
adc
adc
ret
out
jmp
push
xor
pop
sub
je
or
gs
add
xorl
ret
xor
add
or
sub
or
and
shl
ret
pop
and
mov
push
mov
push
call
adc
cmp
cmp
in
add
mov
jnp
push
pushf
sbb
inc
push
xchg
out
ret
clc
add
jecxz
mov
jmp
pop
adc
test
mov
jecxz
jl
or
adc
mov
mov
push
cmc
and
add
and
adc
out
inc
dec
adc
aas
int3
pop
mov
xor
add
jl
jle
fdivrp
or
push
sub
and
dec
jecxz
xor
add
fwait
mov
rorl
add
and
push
push
pop
test
cli
add
and
add
add
enter
arpl
sahf
jmp
push
jno
test
out
lret
je
add
jo
ds
into
les
cmpsl
adc
add
scas
or
in
or
js
or
loopne
dec
add
lret
mov
fsubs
jno
inc
not
xor
mov
inc
mov
faddl
or
and
ror
push
inc
shr
nop
or
inc
mov
imul
mov
sub
sbb
test
dec
enter
sti
xor
and
rcl
or
inc
subb
fs
dec
aam
bound
push
push
sbb
nop
out
pop
sbb
xchg
insb
dec
sub
andb
hlt
sub
mov
call
stc
mov
dec
or
jae
test
fidivs
add
into
cmp
ret
and
stos
mov
or
sub
dec
sub
scas
ja
xchg
ds
push
jp
ficoml
inc
mov
inc
out
incl
xor
cmpsb
push
push
push
addb
inc
lret
rolb
mov
xchg
aam
clc
push
mov
pusha
sbb
adc
js
movsb
push
sub
push
jnp
lods
or
mov
inc
pushf
add
or
push
js
mov
inc
bound
idivb
add
pop
mov
and
and
fs
sbb
xor
jl
xor
ficoms
andb
fs
or
aad
dec
push
lock
cs
lock
push
addr16
rcrb
mov
or
rolb
add
xor
fs
or
pop
fisttps
sub
lock
jo
psrlw
pop
in
pusha
cmp
je
pop
in
mov
add
shl
dec
cmp
shr
and
pop
pop
lock
and
inc
adcl
shlb
adc
or
push
pusha
dec
daa
or
jne
cmp
jno
adcb
mov
and
push
cmp
adc
sbb
add
cs
add
adc
fwait
pop
cmpsb
or
fs
inc
outsl
inc
adc
push
push
arpl
sbb
or
mov
push
push
sub
pop
cli
je
hlt
jg
sbb
lods
rolb
or
js
add
sub
in
push
cld
sbb
and
loopne
in
push
pushf
ja
pop
adc
adc
insb
fmuls
hlt
sub
jb
push
out
mov
adc
ljmp
pop
add
outsb
pop
repnz
add
and
and
dec
sbb
sbb
insb
inc
cmpsb
int3
nop
mov
xchg
rorb
sahf
cld
shlb
pop
mov
jl
div
rolb
sahf
add
je
cwtl
jnp
mov
add
rol
mov
hlt
cmp
sbb
jo
out
push
inc
lcall
cmp
inc
or
popf
or
or
adc
icebp
lea
xchg
push
push
sbb
pusha
add
xchg
or
xchg
fimuls
mov
ret
rorb
dec
jmp
dec
xorl
pop
mov
aam
xchg
add
adc
cmp
and
xor
jle
adc
jns
imul
pop
rcrl
ret
js
fsubrp
dec
fsub
lret
test
rol
hlt
xchg
add
rolb
mov
jne
mov
imul
aas
lods
shl
clc
adc
jg
add
loopne
popa
or
mov
push
dec
xchg
mov
jmp
dec
lret
test
daa
arpl
mov
stc
adc
add
jp
lret
cmp
cld
push
out
repnz
addb
or
xor
add
xchg
mov
mov
xor
leave
push
add
jb
cmp
rorb
ret
mov
mov
mov
and
sarb
pop
cmp
stos
and
rclb
mov
jmp
mov
pushf
aam
add
pop
fcompl
sarb
subl
inc
sbb
lret
js
push
adc
sub
push
dec
repnz
lods
pop
ds
leave
add
sub
push
adc
nop
adc
ficoms
mov
mov
jp
cmp
or
rolb
push
cmp
lods
arpl
add
ss
jp
xchg
cmc
test
sub
xchg
adc
rcrb
mov
mov
cmp
jmp
and
xchg
loopne
mov
xor
inc
rol
pop
lahf
sbb
pop
aad
add
push
inc
xor
or
pop
int3
adc
mov
and
das
or
add
addb
roll
pusha
jo
out
ret
movsb
les
push
inc
jmp
les
into
movb
outsl
xchg
or
daa
pop
adc
movsb
add
iret
dec
cmp
scas
rolb
and
inc
jmp
xchg
or
pop
mov
pusha
pop
sarb
out
lret
sbb
mov
into
js
pop
and
cmp
dec
popf
and
data16
add
cwtl
pusha
inc
out
stc
inc
popa
mov
jo
loope
and
cmpsb
sbb
rorb
cmp
inc
push
mov
or
popa
push
lea
les
jl
lods
xchg
inc
jb
adc
xor
or
outsb
in
push
xchg
adcl
or
rcll
ljmp
mov
add
pop
inc
pop
sbb
cli
hlt
dec
ljmp
push
call
idivb
imul
cmp
pusha
and
push
push
inc
jne
cmp
xor
adc
add
xchg
add
sub
jl
and
inc
pop
push
xor
sahf
push
or
cmp
lock
adc
pop
fsubp
adc
cmc
mov
pop
sbb
enter
mov
mov
mov
sbb
call
aas
mov
and
shll
mov
insl
mov
pop
ret
push
mov
sbb
adc
sub
sbb
and
lock
or
sbb
and
mov
leave
addb
subb
or
subl
lods
sub
sub
or
orl
dec
push
pop
add
shl
pop
xlat
jmp
add
jnp
and
adc
push
pop
insl
sub
gs
jle
popa
or
inc
aaa
incb
into
push
test
push
outsl
mov
or
loop
lret
in
dec
or
and
push
imul
add
fsubrl
jns
es
mov
lahf
xor
cmp
je
adc
xor
inc
ret
bound
cld
push
loop
xchg
mov
xchg
mov
mov
cmp
cmp
lock
rorb
sbb
clc
or
inc
jo
in
fidivrl
mov
out
nop
and
fs
test
aam
sub
lods
lods
insb
mov
imul
idivb
adc
dec
test
xchg
je
adc
pop
add
add
mov
jb
je
and
add
test
and
adc
imul
cmp
or
rcrl
push
mov
pop
add
inc
pusha
movsd
dec
xchg
inc
test
je
jns
outsl
mov
in
mov
lret
aam
call
insb
cwtl
loope
bound
inc
rorl
imul
adc
test
andb
mov
xchg
push
xchg
outsl
ljmp
pusha
mov
call
dec
add
pop
push
gs
ljmp
xor
or
movb
push
sub
popa
sub
fdivrs
fcomps
or
mov
rcl
inc
or
adc
stos
xlat
add
cmp
aas
sarb
or
mov
adc
or
or
mov
xchg
loope
xchg
jmp
pop
scas
rorb
in
imul
dec
lods
jno
adc
js
shl
sbb
stos
out
push
ljmp
mov
push
mov
ret
pop
sub
add
sbb
aaa
ds
mov
dec
xchg
push
notl
rorl
test
and
cmp
jno
pop
call
rorl
inc
js
and
loopne
add
popa
inc
lods
pop
push
add
cmp
scas
leave
shr
and
fdivrl
loop
ljmp
pop
and
fiaddl
bound
dec
fsubs
push
lahf
pop
mov
repnz
inc
sbb
sbb
xchg
sbb
pop
adc
adc
push
outsl
into
ficomps
xchg
outsl
inc
lea
adc
xor
jecxz
sbb
inc
les
ds
into
mov
cld
xchg
data16
ljmpw
mov
ds
dec
shrb
insb
xchg
pop
pushf
xor
aas
push
icebp
sbb
les
push
adc
mov
rorb
pop
cmp
lock
daa
or
mov
push
ret
cli
sbb
and
jb
push
addb
push
adc
popf
cs
sbbl
rclb
add
push
or
call
sub
add
scas
pop
js
jb
aaa
bound
adc
sbb
fnstcw
adc
xchg
scas
shl
fsub
clc
or
fidivs
adc
test
xor
nop
lcall
push
enter
pop
add
sarb
adc
clc
in
push
pop
push
and
addr16
pusha
data16
inc
loopne
scas
adc
addb
adc
and
cs
add
leave
xchg
pop
je
mov
mov
jp
adc
pop
adc
jge
xor
mov
dec
push
jno
mov
dec
inc
adc
nop
inc
or
push
shrb
dec
mov
or
outsb
stos
push
and
cli
adc
or
or
test
cmp
inc
sbb
xchg
vaddss
daa
ret
loopne
mov
dec
sbb
adc
add
clc
or
pop
adc
sbb
fcomps
ss
into
faddl
cltd
insb
cmp
pop
and
call
cmp
popa
push
add
xorb
push
dec
and
ret
cli
add
pop
xchg
jp
pop
add
mov
push
cs
or
cmpsb
push
xor
out
jl
or
cmp
pusha
rcrb
das
into
add
or
cltd
pop
icebp
shlb
add
dec
push
cs
push
dec
mov
subb
push
faddl
or
jp
lret
sbb
or
inc
adc
sub
jmp
clc
cmpsl
into
cmp
sbb
lods
into
adc
stos
addb
cmp
inc
loope
dec
ret
lock
add
out
or
push
in
bound
das
sub
fiaddl
sub
dec
or
cmpsb
js
ret
rcrb
inc
clc
addl
or
cli
mov
outsl
lods
sub
pop
xor
cmp
sbb
mov
lea
bound
movd
subl
sbb
and
out
data16
loop
call
add
jo
mov
jp
mov
xor
add
push
in
xchg
lods
add
iret
push
add
pop
cmpb
popa
lcall
cs
sbb
ror
rorb
les
cmpl
test
or
lods
dec
cs
pusha
mov
pop
repnz
movsb
js
push
mov
pop
mov
aas
push
mov
mov
push
and
add
rcll
mov
mov
push
push
scas
or
push
sbb
mov
js
fadds
push
mov
mov
mov
xorb
cmp
xor
sub
xchg
outsb
jp
or
rcrb
rcrl
jns
je
or
mov
sahf
xchg
dec
push
call
fdivrl
or
addr16
inc
lret
and
push
add
push
push
pop
mov
or
mov
mov
jl
inc
fcoms
adc
push
sub
pop
pushf
popa
or
mov
inc
or
and
dec
and
mov
jl
in
and
cli
test
andb
subl
xchg
out
and
cwtl
push
call
out
pushf
dec
lods
cmc
cltd
in
dec
inc
pop
xchg
adc
push
adc
leave
sbb
stc
mov
jno
sub
push
clc
or
xchg
hlt
or
add
cmp
add
rorb
fimull
push
inc
pop
sbb
imul
test
add
sub
push
push
mov
scas
dec
or
inc
adc
xor
push
outsb
insb
ds
clc
jb
lret
xlat
ret
rcrl
dec
mov
gs
dec
mov
pop
loopew
jo
push
nop
push
rclb
mov
dec
ret
clc
push
jle
insl
sub
sbb
ret
scas
sub
pop
jp
ret
sbb
or
push
adc
hlt
fsubr
jecxz
mov
or
roll
dec
xchg
sub
add
cmp
cmp
movsw
mov
enter
add
bound
in
je
mov
icebp
add
or
clc
cmpsl
adc
add
lock
add
loopne
loop
rcr
js
push
mov
pop
dec
push
push
incb
mov
cmpsl
jbe
and
aaa
jp
roll
ds
add
mov
push
mov
or
push
add
and
and
imul
aas
jno
xchg
leave
or
or
xchg
pop
or
add
push
nop
mov
adc
adc
adc
test
dec
sub
inc
xchg
xchg
jmp
mov
push
lods
data16
jb
xchg
movsb
mov
cmp
sbb
add
adc
inc
or
adc
pop
lds
js
sbb
cli
scas
jl
fcmove
mov
adc
pop
notl
push
xchg
ret
popa
jl
pop
insb
not
add
xor
sbb
push
clc
pop
jp
push
push
in
cmp
and
mov
mov
xchg
xchg
pusha
pop
or
jae
pop
jo
or
sbb
mov
mov
sub
mov
jo
subb
mov
rcrl
cmpsb
lea
pusha
jne
lret
sub
jno
dec
and
test
or
sbb
imul
jo
xchg
repnz
cli
into
xor
push
add
popa
cmp
mov
sbb
cmpsb
loope
insl
iret
sub
xchg
push
inc
or
pop
cmc
xor
ljmp
and
sub
sbb
dec
rolb
sbb
cmpsl
test
or
and
mov
bound
pop
sbb
mov
shll
repz
xor
add
adc
lea
sbb
sub
sbb
pop
inc
add
jp
dec
dec
push
add
test
inc
inc
jns
jb
ret
jecxz
sahf
xor
mov
in
ret
jnp
adc
mov
sbb
push
mov
xlat
and
push
sub
xor
cmc
hlt
sub
ja
and
ret
dec
or
gs
cmc
and
push
pop
cli
es
movsl
sbb
unpckhps
add
xor
popa
sub
cmp
pop
das
xchg
cs
test
loopne
xor
daa
mov
icebp
mov
add
mov
add
inc
adc
mov
or
or
inc
and
stos
adc
daa
pop
dec
adc
rorb
add
ficoml
inc
mov
aam
or
clc
push
pop
pop
sub
cs
jl
jecxz
push
ret
add
mov
ljmp
movsl
lock
adc
loopne
into
mov
jp
dec
lods
shrl
adc
call
ss
add
cmp
out
inc
or
fcomps
xchg
fnstcw
or
or
rclb
js
mov
lock
divb
in
pop
lret
adc
icebp
xor
sbb
decb
and
sbb
je
cmovl
or
cmp
mov
dec
sub
push
inc
iret
push
out
insb
je
imul
jp
mov
adcb
rorb
cmp
shll
or
pushf
push
loopne
mov
xchg
dec
cmp
mov
and
push
jp
add
adc
cmpsl
mov
mov
andb
xor
hlt
xor
callw
pop
pop
mov
ds
jo
push
push
scas
add
out
fldcw
adc
and
xchg
movb
dec
dec
loop
stos
pop
in
cmp
push
shlb
push
sub
inc
cmp
scas
pusha
push
sbb
enter
aam
stc
adc
mov
pop
sbb
inc
jg
ds
adcb
test
lock
lret
pop
popf
jns
ret
insl
cmp
inc
cmp
cltd
enter
jl
adc
or
push
repnz
sbb
xchg
icebp
fidivrl
lods
push
movlps
dec
cmp
pop
or
mov
gs
punpckldq
ss
ret
lret
ficomps
es
lods
arpl
sbb
add
xchg
or
or
out
jmp
push
push
xorb
mov
lock
sbb
sbb
sub
arpl
inc
sbb
xor
pop
dec
popf
inc
sbb
sbb
jo
out
fwait
xchg
jo
pusha
add
mov
lods
sub
jge
jp
icebp
mov
test
jmp
ds
xor
pop
xorb
dec
cmpb
lret
jmp
push
or
shlb
sub
mov
jb
ret
jmp
mov
jns
sbb
cld
stc
add
mov
je
mov
cmp
add
ror
cmpsb
add
les
dec
jns
les
rolb
mov
xor
add
push
push
aam
shlb
xchg
popa
push
shrb
pop
add
cmp
clc
dec
rcr
lock
dec
push
int3
js
call
movb
cmp
jg
insl
xor
sbb
or
lock
xchg
adc
adc
or
pop
xchg
js
xchg
push
test
lret
mov
int3
and
mov
sbb
loope
dec
mov
stos
dec
add
aam
add
push
pushf
push
addl
ret
sub
scas
clc
and
pop
test
pop
les
into
leave
add
mov
adc
lea
cwtl
and
and
mov
inc
sub
adc
or
sbb
cli
and
bound
mov
faddp
dec
or
sub
je
xor
dec
icebp
jae
cmpsb
xor
lods
xor
cmp
mov
cmpb
movsb
aas
and
movsl
sahf
sahf
add
mov
mov
pop
pop
ret
inc
rolb
addb
ret
lret
testb
adc
nop
adc
or
pop
cmpsb
pop
adc
cmp
pop
in
mov
stc
add
sbb
aad
or
xchg
mov
or
rol
push
test
adc
cltd
or
lock
jecxz
ljmp
ret
lret
push
add
loopne
loopne
stc
rclb
cwtl
subb
shrb
nop
push
xor
pop
add
jbe
es
ret
lret
mov
outsl
mov
mov
cmp
add
sbb
das
add
dec
rcrb
or
pop
push
mov
mov
or
mov
test
adc
leave
push
jb
jo
fs
rcll
dec
mov
xchg
sbb
mov
pop
imul
out
imul
test
or
sub
mov
cltd
mov
sub
add
in
aaa
ljmp
rolb
iret
ret
mov
jmp
outsl
adc
addr16
adc
fidivrl
push
in
or
add
push
cmpsb
add
cli
or
or
shlb
test
add
fs
or
cmp
mov
sub
jb
lods
and
push
dec
or
nop
dec
in
mov
test
loopne
ljmp
loope
dec
adc
clc
xchg
ret
rcrl
mov
lahf
rcrl
mov
cmc
aas
loopne
daa
shl
adcl
sbb
jecxz
loopne
and
adc
pusha
and
and
xlat
cmp
jo
cmp
imul
jno
mov
fucom
loop
loope
pop
lret
cli
mov
loope
in
sub
dec
xor
sbb
sub
inc
nop
mov
jge
lock
pop
xchg
add
and
add
push
adc
or
jo
clc
repnz
mov
cmp
es
es
cli
mov
sbb
int3
push
adc
mov
enter
add
jo
pop
ret
mov
inc
not
jp
loopne
jnp
push
imul
adc
movsl
leave
and
movsb
or
in
int3
sbb
das
bound
push
pop
dec
mov
fmulp
push
movsl
mov
dec
lods
repnz
dec
dec
ret
inc
sbb
lahf
or
loop
rcr
movsb
xor
pop
push
sti
ret
nop
jp
ret
jge
sub
xor
scas
or
sbb
loop
or
rcrb
cmp
imull
mov
add
dec
add
pop
pop
mov
mov
push
xor
xchg
enter
mov
add
mov
inc
loopne
int3
xchg
pop
cmp
ljmp
sub
sub
or
ds
roll
mov
inc
xchg
and
sbb
sbb
inc
and
push
out
adc
mov
sbb
push
sub
sbb
add
sbb
in
add
mov
dec
sub
fldenv
iret
add
add
mov
mul
sbb
mov
js
or
cltd
pop
sbb
sbb
mov
aad
mov
sub
sub
jnp
adc
rclb
pop
cmp
jno
add
call
and
fldl
shld
daa
lock
add
add
xchg
ficoms
inc
sbb
jo
or
push
xchg
xor
mov
out
sbb
lcall
shl
push
inc
jmp
jge
jmp
add
mov
jmp
xchg
xor
sarb
out
fxch
mov
inc
or
ds
and
fnstcw
int3
lea
testb
push
aam
cwtl
push
fs
in
push
mov
push
pop
and
mov
xchg
loopne
xchg
movb
scas
dec
jno
sarl
mov
jl,pn
add
loop
sbb
mov
mov
lock
inc
ljmp
inc
aaa
sarb
mov
jb
int3
or
pop
cmp
inc
popa
add
mov
push
xor
sahf
push
or
mov
xchg
mov
sbb
sbb
sub
les
cli
xchg
sahf
shl
pop
and
add
xlat
inc
inc
lods
movsb
imul
or
mov
lea
push
mov
imul
xchg
dec
add
push
mov
pusha
sbb
loopne
popf
rolb
inc
sahf
mov
cmp
cmc
mov
add
push
inc
jo
jne
shr
data16
push
xchg
mov
cmp
and
push
cmp
test
pusha
hlt
hlt
push
push
jns
xchg
in
mov
pop
adc
push
xchg
push
push
imul
movsl
ret
out
pop
mov
daa
ret
sbb
xchg
or
add
sbbb
rorb
add
cmp
rol
repnz
jne
or
or
push
dec
loop
je
cmp
lods
add
cmp
adc
add
mov
repz
adc
mov
sbb
inc
pop
push
loope
cs
iret
mov
sbb
jmp
sbb
jnp
mov
int
mov
stos
sahf
loope
adc
inc
add
js
arpl
ret
and
lock
or
dec
ss
scas
in
ljmp
cmp
inc
pop
pop
and
sbb
cmp
pop
or
xchg
or
add
or
sbb
loope
cmc
inc
inc
push
adc
nop
cmp
add
dec
movsl
or
enter
and
lds
adc
add
dec
rolb
cmp
pusha
aam
je
and
pop
push
add
out
mov
dec
bound
std
in
sub
movsb
out
sub
adc
mov
or
mov
cmpb
pop
lret
mov
inc
call
mov
and
orb
adc
js
scas
out
ja
nop
pop
repnz
loopne
jo
jl
add
push
jl
cmp
add
dec
inc
cmpsb
lret
or
jecxz
rclb
sub
cltd
adc
ljmp
dec
aad
mov
mov
popf
sbb
inc
pop
add
mov
cmc
in
adc
pushf
mov
xor
scas
lods
imul
int3
or
push
pop
int3
push
mov
ret
test
pusha
mov
dec
mov
ret
or
into
jno
xor
rol
sbb
lea
lock
scas
mov
push
imul
hlt
xchg
ret
scas
or
add
out
jbe
push
push
shlb
mov
lahf
add
cs
test
push
xchg
xor
nop
mov
aam
jmp
xor
adc
cmp
push
push
cmp
cltd
adc
rcrb
sub
into
dec
fs
negb
outsb
rorb
movsl
adc
movsb
mov
xchg
sbb
cmp
ret
adc
sbb
cmp
xchg
cli
add
push
pop
or
adc
add
jo
xchg
idivb
out
fdivrp
mov
xchg
xchg
mov
adc
or
xchg
scas
mov
dec
adc
es
pusha
add
sysret
mov
and
arpl
imul
shrl
subb
inc
call
ficomps
and
push
jecxz
and
add
inc
jo
pop
jmp
jo
xchg
adc
icebp
lods
addl
dec
popa
mov
ljmp
xchg
push
pop
repnz
imul
aam
cmpsb
ds
aam
loop
or
add
scas
dec
dec
movb
pop
push
pop
test
adc
out
mov
gs
rolb
mov
sub
mov
mov
cmp
cmp
mov
icebp
insl
loopne
push
add
mov
mov
push
stc
sbb
stos
loop
out
cmp
test
and
lods
mov
orb
daa
push
faddp
fs
test
mov
push
jo
jne
insl
loopne
xor
adc
xchg
xor
call
inc
xchg
push
ret
xchg
imul
popf
mov
pop
stos
fwait
mov
inc
or
sahf
loope
add
inc
int
test
pusha
or
and
cmpsb
in
push
cli
mov
outsl
hlt
loopne
icebp
xor
lods
adc
clc
xchg
sbb
jmp
pop
push
push
loop
fs
rcr
mov
mov
xchg
push
mov
movl
sbb
arpl
dec
and
sbb
and
test
das
cwtl
add
lret
adc
add
sbb
sub
dec
push
mov
sbb
jp
stos
test
fldcw
or
inc
and
dec
adc
lods
push
testb
pop
xchg
nop
mov
imul
pop
sub
inc
cltd
aam
addl
mov
add
cmp
adc
xor
loopne
add
push
dec
mov
cli
sub
js
test
or
push
nop
jb
or
fwait
xchg
and
push
adc
sahf
clc
gs
mulb
push
add
int
sahf
adc
mov
add
mov
aaa
pop
inc
sub
stos
shll
mov
dec
mov
orb
push
sbb
in
sbb
sub
inc
pop
popa
gs
stc
pop
imul
pop
ljmp
imul
loope
or
xor
or
or
xchg
push
add
push
dec
mov
mov
rorb
test
pop
ret
idivb
push
dec
pop
push
shrb
mov
sarb
ljmp
add
adc
lcall
out
xchg
roll
and
roll
ror
popf
test
xchg
fidivs
push
imul
rcl
mov
ljmp
call
sahf
lock
xchg
sub
jmp
mov
sbb
xor
gs
sub
pop
test
repz
add
sbb
push
or
cmp
push
lock
adc
fs
aaa
scas
mov
icebp
mov
xlat
test
ffree
pusha
sbb
movsb
xchg
jecxz
push
jl
xorb
add
cmp
adc
mov
and
int3
es
add
fs
inc
testl
cwtl
les
adc
and
add
and
clc
add
and
test
nop
loopne
mov
popa
popf
push
jo
lret
and
add
sbb
out
rorl
nop
daa
andb
mov
scas
mov
xchg
sbb
ret
andl
imul
data16
inc
andl
mov
lret
xor
sbb
or
inc
sub
es
sub
in
pop
mov
sbb
mov
je
inc
cmpsl
cmpsl
aad
fisttpl
add
lret
sbb
push
pop
xchg
push
inc
shl
test
jp
add
lock
lea
insb
sbb
roll
dec
adc
push
scas
lods
mov
or
aaa
int3
ljmp
xor
aas
xchg
jno
outsb
or
push
sub
push
mov
mov
mov
sub
mov
les
mov
mov
test
add
lahf
adc
push
push
sub
mov
lret
cmp
xchg
sbb
push
push
push
or
push
mov
rclb
inc
add
xchg
leave
js
aam
leave
dec
addb
or
in
push
and
cmc
movsl
dec
cmp
sub
andl
adc
push
cmp
inc
pop
adc
cmp
xlat
mov
jmp
loopne
lret
out
cs
push
jns,pn
cmc
mov
sub
and
push
stc
hlt
dec
xchg
hlt
sahf
adc
mov
shl
mov
sbb
or
or
jb
push
mov
pop
pop
mov
sbb
jp
and
out
push
add
or
les
sbb
xor
inc
mov
movl
ljmp
aaa
lock
and
sub
push
das
imul
dec
test
pop
data16
adc
insl
fmul
xor
jb
inc
leave
sbb
jg
inc
outsl
xbegin
jmp
addb
pop
shll
sbb
clc
psrlw
frstor
sbb
lcall
js
addl
sbb
loop
mov
dec
inc
fstpl
and
negb
sbb
sub
ret
dec
pop
sbb
sbb
loope
sbb
pop
jp
and
insl
mov
push
mov
mov
adc
lods
cli
dec
and
or
mov
arpl
inc
push
sbb
xor
xor
adc
sub
ds
sub
cld
dec
js
cli
adc
or
push
push
dec
mov
fs
in
fbstp
ficomps
jg
jl
ds
mov
mov
jo
push
dec
xchg
add
sbb
add
add
call
push
or
adc
push
addr16
adc
cs
roll
fdivs
push
outsl
or
inc
or
mov
lea
cmp
into
pop
add
push
sbb
addl
cmp
sub
rcr
pushf
andb
xor
stos
or
test
inc
mov
outsl
pop
xor
add
cmp
and
and
cmovno
es
adc
or
mov
add
js
test
repnz
rcrb
pop
adc
sahf
xor
cmp
sub
or
shlb
mov
orps
xchg
mov
pop
sbb
mov
popa
sub
jmp
sub
jo
arpl
rcr
insl
loope
pusha
mov
test
lods
ss
sub
rcrb
push
into
or
mov
mov
inc
xchg
stos
pop
jle
sarb
mov
leave
adc
push
or
shrl
cmp
jo
and
adc
adc
or
inc
imul
pushf
mov
xlat
jmp
mov
outsb
mov
xor
int
adc
into
cwtl
push
test
mov
dec
inc
je
fs
dec
fs
sbb
cmp
iret
mov
fmuls
add
roll
js
in
inc
xchg
inc
add
cmp
jns
clc
and
ret
mov
pop
stos
sbb
jl
jo
arpl
test
sbb
sbb
lahf
clc
aas
or
inc
add
mov
sti
inc
or
push
lea
mov
pop
sbb
arpl
shl
pop
push
arpl
fsubrs
pop
addr16
orb
xor
jns
adc
pop
dec
je
push
rclb
pushf
ds
out
mov
mov
loope
ss
mov
nop
push
adc
mov
cli
push
dec
bound
sbb
add
or
rcl
and
add
dec
rcl
mov
sbb
sbb
and
pop
inc
mov
inc
mov
orb
dec
fadd
mov
mov
popa
cmp
jl
ds
sbb
sbb
rdmsr
sbb
cs
gs
mov
fists
sbb
adcb
add
sub
add
push
rcrb
sete
or
pop
ret
loopne
push
shrb
xchg
in
xchg
rcrb
push
pop
xor
cmpsb
into
and
lods
push
or
dec
cvtps2pi
cli
inc
lahf
es
sti
movsl
push
xchg
cmp
pusha
adc
ret
add
pusha
mov
pop
mov
mov
cmpsb
rcll
imul
xchg
jp
or
push
clts
jecxz
les
sbb
in
ljmp
icebp
and
test
mov
mov
adc
ficoml
add
lods
out
add
xor
add
and
dec
sbb
inc
outsl
sbb
in
inc
pusha
or
pop
dec
dec
push
add
fsubs
sahf
outsb
fadd
mov
push
push
test
xchg
daa
xor
ret
add
inc
adc
and
loope
shl
movsl
adc
or
add
loope
nop
mov
shr
rol
fadd
ret
mov
test
inc
mov
rcll
into
ljmp
push
testl
in
pop
xchg
pop
add
nop
adc
push
dec
clc
test
stc
repnz
push
and
push
mov
cmp
mov
rol
sub
rolb
js
lret
mull
test
inc
jg
pop
xor
lea
adc
sbb
sbb
int3
or
inc
sbb
mov
jae
push
push
ljmp
dec
sbbl
in
push
icebp
sbb
dec
or
inc
fistpll
ljmp
pop
xchg
popa
js
add
popf
jbe
aam
in
or
shl
rcll
addb
or
xor
push
les
insl
mov
jne
jp
xor
and
or
inc
cld
ret
or
and
or
test
pop
pop
dec
pop
or
es
sub
and
xor
sub
leave
inc
push
dec
sub
mov
push
leave
jo
addl
ret
add
mov
mov
stc
push
in
or
xchg
stc
das
popa
adc
mov
sbb
inc
inc
loope
jns
je
sub
inc
or
stos
shll
add
cmp
jb
mov
dec
mov
xor
stc
xor
sbb
pop
inc
sub
popf
sbb
xor
sbb
dec
add
inc
sar
adc
push
fisttpll
add
sbb
push
int3
lea
loope
int3
in
cmp
roll
jecxz
adc
dec
cmpsl
cwtd
adc
lcall
shrl
jno
shr
dec
sub
push
pop
adc
add
cmp
push
sbb
sbb
jp
mov
into
movsl
shrb
popa
or
jmp
ret
pop
out
popa
add
rorl
test
pop
fwait
adc
cmp
test
mov
xchg
lock
negb
mov
or
test
fdivl
cmp
stc
sbb
mov
cmp
cwtl
hlt
data16
push
pop
push
push
add
jns
cltd
xor
inc
xor
mov
je
and
cwtl
inc
jnp
out
and
sbb
cltd
pusha
movb
inc
les
adc
ljmp
roll
and
movsl
test
ljmp
imul
hlt
loopne
in
add
fsubs
arpl
test
jne
xlat
mov
inc
js
mov
and
out
icebp
mov
repnz
flds
pop
loopne
xor
enter
push
rcl
ret
jns
aas
dec
fstl
loopne
jmp
repz
enter
ret
je
idivb
into
ljmp
idivb
pop
and
sbb
jo
or
xlat
stos
add
push
add
add
add
sarl
jge
mov
pop
aam
mov
and
test
jo
sub
shll
add
loop
dec
out
push
aas
loope
mov
push
add
js
pop
mov
add
mov
or
stos
and
ror
or
stos
mov
or
stos
pop
ret
and
mov
dec
push
nopl
ret
and
dec
sbb
or
push
popa
jecxz
dec
dec
and
add
mov
adc
or
add
dec
jae
out
push
lods
or
aad
sbb
push
jnp
loop
adc
mov
les
add
imul
je
jl
sbb
sbb
dec
dec
sub
mov
pop
pop
adc
add
orb
aaa
push
sbb
js
lret
mov
lock
cmp
push
adc
adc
cs
add
sub
inc
es
dec
sahf
cli
rclb
cmp
xchg
push
or
xchg
in
xor
xor
lahf
movb
call
pop
dec
mov
test
pop
loopne
push
loop
push
cmpsl
movsl
nop
jo
fcompl
cmp
je
pop
xchg
xchg
push
loopne
enter
test
inc
clc
sbb
dec
xor
adc
inc
push
adc
xor
xchg
mov
shll
inc
inc
shll
mov
adc
imul
adc
xor
pop
mov
cwtl
in
into
fldenv
or
cwtl
or
push
push
shrl
nop
push
cld
adc
roll
les
repnz
sub
enter
or
jb
ljmp
push
mov
movsl
incb
cs
add
fs
xor
xchg
dec
int3
sub
mov
push
cmp
and
and
inc
mov
test
pushf
test
lock
pop
inc
mov
rorl
dec
dec
rcll
dec
test
fwait
lea
pop
inc
jp
mov
mov
pusha
push
sub
test
pop
push
pop
dec
dec
pop
xor
adc
xor
dec
rcll
and
xor
or
icebp
cmovl
sbb
sbb
cmp
xchg
jb
jo
sbb
mov
jl
ror
dec
ljmp
shlb
ss
mov
and
push
mov
adc
mov
les
push
mov
add
testb
lock
and
call
fmuls
jb
aam
or
push
loop
or
ret
adc
jmp
xor
pop
sti
cmp
andl
push
fs
pop
js
ljmp
cli
sub
je
loope
inc
aam
or
inc
pop
dec
dec
orps
loop
xchg
rorb
mov
fsubrs
or
shl
pop
and
push
push
push
lret
pusha
mov
push
rorb
shll
cs
cmpb
ficoms
and
pop
jno
and
jp
test
clc
xchg
rclb
pop
lock
and
mov
mov
fnsave
sub
add
into
ljmp
lea
jo
mov
adc
or
push
and
adc
or
sahf
jns
cmp
pop
xchg
adc
dec
pop
adc
add
or
sub
and
outsb
lea
add
cmp
jb
pop
aaa
lret
mov
shlb
clc
mov
adc
mov
inc
sbb
sub
mov
adc
sub
adc
popa
out
xor
xchg
aad
jnp
mov
pop
pop
pop
pusha
sbb
cmovne
or
push
sbb
dec
and
xorb
cs
add
xor
shlb
outsl
adc
pushf
je
cli
xor
push
into
imul
sbb
outsb
or
xchg
and
call
mov
adc
pusha
inc
clc
adc
push
cmp
stc
jl
and
imul
popa
xchg
mov
bnd
aas
sarl
add
jo
add
pop
or
int
in
pop
into
fistps
or
dec
add
adc
pusha
pusha
insl
mov
stos
mov
shll
mov
test
sahf
test
testb
add
jl
pop
xchg
xlat
dec
pop
lret
lods
and
pushf
pusha
and
test
jno
ljmp
push
outsl
movsb
loop
and
rclb
pop
dec
test
xchg
xor
fcompl
sbb
add
popa
push
sbb
or
push
push
in
sbb
sahf
es
movsl
mov
or
xor
jg
pop
out
adc
add
lcall
adc
push
adc
add
cmp
mov
loop
into
or
dec
testl
xor
shrb
dec
sbb
add
or
lcall
or
xor
imul
and
xchg
jno
jg
xor
sbb
sub
insb
mov
outsl
loopne
iret
xor
adc
xchg
xorb
sub
sbb
add
cmpb
xor
pop
jo
loopne
xchg
mov
jp
nop
adc
test
cli
inc
mov
add
pushl
rol
fsubrs
mov
test
and
es
jmp
mov
shr
cli
mov
sbb
mov
adc
rolb
aad
inc
pop
xor
adc
or
xor
sahf
lret
dec
cmp
or
bound
movb
add
daa
and
xchg
les
movsb
adc
push
mov
mov
mov
cmp
mov
mov
incl
cwtl
das
pop
push
sub
adc
sti
cmpsb
mov
pop
repnz
xor
mov
mov
aam
xor
adc
shlb
sbb
add
push
dec
rorb
push
arpl
leave
mov
adc
mov
and
inc
mov
nop
add
jb
inc
dec
push
pusha
cmpsl
lcall
or
xor
call
sbb
and
insl
outsl
or
ficompl
xchg
add
jbe
add
clc
addb
sbb
out
pushf
adc
pop
and
add
sbb
mov
pushf
jno
sub
sbb
int3
incb
or
call
inc
dec
and
sar
sti
adc
scas
pusha
xor
les
and
push
add
loope
jbe
mov
addl
mov
arpl
popa
inc
mov
dec
push
test
push
adc
mov
test
add
jge
cli
cmp
mov
push
test
mov
fs
mov
hlt
sub
fdiv
clc
sbb
movsl
jne
mov
ret
xchg
mov
add
aam
sbb
push
add
cmp
cmp
and
adc
jns
stos
rol
in
mov
or
test
enter
xchg
repnz
scas
enter
arpl
dec
cltd
cwtl
enter
popf
push
or
sarl
loopne
push
imul
sti
cmpsb
pusha
jo
rcrl
push
xchg
add
mov
mov
rcrb
push
push
out
enter
or
ljmp
lods
mov
daa
or
bound
shrb
sbb
jge
dec
push
nop
mov
jg
sub
sar
pop
push
inc
pop
loopne
cmp
mov
je
cmc
sbb
movsb
imul
sbb
nop
sbb
mov
add
push
cmc
xchg
pusha
and
pop
je
mov
sbb
and
and
sub
into
dec
jns
lret
sbb
addl
xchg
fs
rol
sub
dec
inc
inc
int
lock
push
mov
pushf
add
imul
mov
addl
and
pop
lock
sub
push
loop
adc
mov
mov
lods
adc
loop
cmp
sahf
jl
aaa
mov
pop
adc
push
dec
popf
jo
or
and
dec
scas
push
call
in
and
cmp
or
or
mov
dec
pop
sub
sub
rolb
cmpsb
jmp
enter
xchg
jp
adc
testb
push
xor
mov
jo
insl
roll
add
xor
jge
and
adc
sbb
adc
fdivrs
add
xchg
or
cmp
cmp
xchg
pop
pop
subb
jmp
pop
mov
clc
add
aaa
idivb
arpl
int
or
test
gs
push
dec
sbb
mov
int
adc
into
mov
mov
pop
or
inc
and
mov
mov
mov
sub
mov
lock
enter
lea
inc
or
shlb
pop
inc
add
sub
cmpsl
xchg
push
movhps
les
add
lock
xlat
clc
in
das
adc
lock
lock
ljmp
cli
and
out
int
adc
subb
cs
or
cmpsb
jne
xor
cli
push
inc
dec
sar
das
sbb
mov
sub
jmp
push
mov
and
mov
and
adc
dec
add
mulps
pop
push
or
daa
mov
scas
xchg
sbb
aaa
dec
xor
mov
bound
ror
cwtl
lret
js
push
lds
dec
adcb
adc
rorb
test
add
inc
xchg
hlt
ret
out
sbb
fistl
push
jnp
add
js
daa
ret
mov
add
add
push
and
cmp
pop
lea
inc
mov
cwtl
jmp
sbb
xchg
mov
pop
sti
arpl
mov
mov
cli
cmp
dec
or
lock
xchg
push
fiadds
cmp
xor
xor
dec
movsb
push
roll
cmpsb
cmp
xchg
mov
mov
scas
push
lock
xchg
xchg
jo
adc
jb
sahf
pusha
mov
ss
adc
cmc
dec
cmp
testb
or
xor
lcall
add
inc
call
loope
orl
in
mov
mov
inc
lods
mov
lock
sub
pop
mov
enter
shll
inc
push
call
lock
push
ret
rorb
jb
rcrl
lock
pop
lods
inc
ret
data16
int
mov
add
test
in
outsb
jbe
sbb
stc
add
ja
mov
inc
les
test
or
ret
pcmpeqw
sbb
mov
and
jo
or
push
add
or
adc
dec
add
sbb
daa
xor
jne
cmp
jle
or
dec
xlat
jmp
clc
jmp
lret
adc
xchg
sahf
ds
dec
je
sahf
addr16
movsb
sub
or
xchg
arpl
test
pop
add
adc
add
inc
fimull
jnp
push
adc
add
loope
mov
ret
or
adc
mov
test
xchg
mov
mov
js
outsl
cmc
mov
hlt
and
cmc
pop
sub
inc
pop
repnz
lea
sub
push
adc
push
adc
data16
and
mov
push
push
ds
int
test
mov
inc
leave
ljmp
add
loopne
sbb
cmp
sub
mov
push
nop
es
sbb
in
clc
enter
pop
xchg
arpl
xor
lahf
into
pop
dec
ds
push
sarb
sbb
xor
sbb
and
dec
ss
mov
fsubl
dec
and
hlt
adc
loopne
add
push
dec
insb
sti
sub
mov
push
adc
mov
dec
test
lock
out
rcr
sub
and
dec
js
push
pop
fcompl
aaa
pop
sbb
or
dec
test
mov
xor
ljmp
lods
and
pusha
aad
add
add
xor
pop
and
mov
addb
or
and
push
mov
nop
loop
sbb
jb
pop
lret
mov
mov
jo
adc
push
adcl
dec
push
test
jge
adc
sub
rol
lods
xor
and
pop
or
lock
rolb
loop
dec
jno
enter
xchg
xchg
adc
xchg
call
or
test
inc
mov
popa
loope
into
lods
mov
xchg
andb
xchg
and
sub
mov
jb
clc
lret
les
and
pop
js
cmpsb
movsl
ja
push
push
icebp
daa
jmp
leave
adc
icebp
adc
jo
adcb
shll
cmp
insl
inc
mov
out
andl
push
sar
push
or
add
xlat
loopne
mov
cld
xchg
sarl
int
sbbb
push
pop
sti
out
mov
add
loope
dec
pusha
mov
cmp
push
inc
pop
ja
rorb
push
adc
add
fdivs
pushf
mov
lret
or
cmpsl
mov
sub
mov
and
sbb
push
shlb
rcrb
jo
rcrl
arpl
inc
ret
sbb
sbb
and
cmp
or
sarb
add
jp
icebp
sti
cwtl
test
aam
adc
bswap
in
push
test
js
sub
lock
loop
ljmp
loop
sti
adc
mov
fcoml
jmp
aam
hlt
add
and
mov
icebp
jecxz
nop
sbb
addl
xchg
sbb
vdivss
jge
xchg
push
add
mov
test
lds
test
add
rol
add
add
rcrb
push
mov
repz
adc
dec
adc
cld
mov
addr16
adc
test
aam
pop
icebp
insl
inc
mov
pusha
jge
or
movsl
stos
mov
and
or
lahf
xchg
and
cmp
or
andb
pop
pop
pop
add
and
test
cmp
sbb
cmp
rolb
or
adc
rclb
add
ljmp
sbb
mov
std
das
pop
loope
push
insb
sbb
xchg
lcall
sub
outsb
push
sbb
test
adc
sbb
rcr
jl
sbb
sbb
cmp
fsubs
sbb
in
imul
repz
sub
jecxz
test
xorl
mov
sbb
sub
mov
sbb
inc
rol
jl
jo
mov
jb
scas
or
arpl
roll
pop
adc
add
sbb
sbb
sbb
add
mov
cmpl
sarb
nop
fs
mov
push
pop
mov
add
fisubl
push
mov
adc
or
cmc
mov
cmp
dec
arpl
and
jb
jb
inc
dec
and
test
inc
dec
call
inc
les
test
pop
enter
push
movsb
ret
add
sbb
movsb
xorb
xchg
je
js
push
and
mov
popa
sbb
pop
mov
sarb
add
and
lea
shrb
inc
or
push
lock
sbb
movntps
lods
sbb
fistpll
cmpsl
push
inc
test
mov
dec
scas
and
dec
cli
and
insb
mov
stc
jecxz
mov
rol
mov
mov
push
rclb
sub
test
and
rcl
mov
imul
aam
lret
adc
mov
popf
rclb
bound
xchg
sub
js
cltd
ret
inc
add
xor
ret
sbb
je
mov
lods
jne
ficomps
bound
nop
inc
out
pop
jle
push
mov
mov
call
sbb
aam
dec
sbb
sahf
add
or
jmp
push
and
call
sub
and
jno
mov
sahf
ss
xchg
mov
je
add
dec
cwtl
adc
mov
sbb
or
fmuls
pop
xor
sbb
and
adc
and
adc
iret
push
push
inc
cmp
int
push
xchg
inc
call
outsl
ljmp
xchg
pop
shlb
mov
pop
push
sbb
ret
mov
inc
pushf
sahf
cmp
sti
mov
jecxz
add
mov
test
and
data16
jo
sbb
js
dec
pop
or
cmpl
and
enter
scas
xchg
test
hlt
dec
arpl
aaa
mov
mov
and
xor
or
insb
lahf
inc
sub
fs
or
sbb
mov
add
mov
inc
sbb
test
mov
popf
push
je
les
inc
add
cmpsb
push
inc
sbb
adc
dec
adc
mov
mov
shr
int3
push
pop
push
sub
int3
insb
das
adc
pop
and
pop
add
mov
sbb
int3
lds
rorb
fs
mov
mov
adc
dec
jp
into
jnp
ret
sbb
xor
loop
mov
or
notl
xor
sub
xor
dec
xchg
xchg
and
jo
cmpsl
lea
sub
enter
cli
inc
jl
insb
mov
ret
outsb
cltd
mov
insb
inc
xchg
adc
lret
fs
mov
rcl
push
push
loop
push
mov
mov
sub
adc
cmp
adc
in
add
nop
or
shll
daa
pop
in
xchg
add
add
adc
nop
shlb
cli
add
xor
mov
push
and
movsb
pop
adc
fsubs
lock
mov
pop
mov
add
lods
ror
push
lret
rcll
stos
mov
sbb
adc
xor
xor
or
add
addr16
ret
lcall
and
add
subl
sub
icebp
adcb
inc
repnz
mov
rorl
hlt
cmp
loopne
or
cmp
push
std
jo
cmp
adcl
push
cmp
sbb
xchg
add
fs
push
cmp
push
and
dec
xchg
pop
test
cli
add
or
jno
mov
cmc
aam
mov
dec
test
or
inc
mov
pop
mov
push
stc
push
outsb
std
js
rorb
mov
add
lock
add
and
add
adc
test
test
enter
test
sbb
cmpsb
fwait
jmp
mov
xchg
lea
mov
mov
pop
adc
adc
adc
push
clc
inc
cmp
push
call
jae
or
jecxz
and
lea
and
dec
or
lcall
add
cmc
lret
loope
add
rolb
xchg
jo
imul
inc
sbb
ret
inc
add
inc
push
sbb
movnti
xor
mov
cmp
js
mov
sbb
aas
scas
add
or
mov
icebp
pop
xor
jmp
fdivs
stos
push
aam
sbb
sbb
addl
mov
xor
test
dec
pop
and
add
pop
ret
jecxz
call
jmp
daa
lret
insl
add
sbb
cwtl
cld
je
gs
mov
and
cmp
and
push
cltd
dec
and
xchg
in
shrb
sub
cli
sarb
bound
adc
mov
mov
mov
dec
js
adcl
rcrb
push
stos
sarb
movsl
or
fcom
js
es
fimull
imul
pop
cld
sbb
les
movsl
cmp
sub
shlb
dec
inc
sbb
sbb
ja
pop
movsb
mov
mov
fs
inc
int3
pop
add
add
add
or
mov
nop
adc
sbb
ret
adc
sbb
es
pop
inc
scas
enter
dec
xorl
xor
add
dec
add
and
and
das
loope
mov
jbe
xchg
or
push
mov
je
xchg
or
add
stos
movlps
mov
cmc
leave
lock
jno
bound
or
inc
jge
decl
jp
sbb
jl
push
sbb
repz
inc
fadds
mov
pop
mov
into
push
adc
movsl
pop
push
mov
sbb
pusha
arpl
orb
lods
test
mov
in
cmpsl
icebp
mov
fadds
loopne
adc
mov
sub
or
dec
test
lock
in
pop
push
xchg
icebp
sarl
xlat
test
lret
cmp
jecxz
xchg
les
fcoml
mov
push
fidivs
xchg
lods
sub
gs
or
or
or
push
sbb
mov
mov
orb
hlt
pop
sub
pop
test
shrl
xchg
inc
mov
fisubs
jb
fistps
adcb
pusha
push
mov
push
or
or
or
dec
cmp
loop
js
ljmp
push
pushf
sbb
sbb
shlb
pop
lret
sbb
sbb
xor
or
and
and
push
cltd
jno
and
into
sbb
lods
mov
fs
xchg
push
pop
fldt
mov
sub
in
lock
sbb
mov
push
and
ss
push
dec
cs
test
adc
or
shlb
fwait
lret
add
lods
pusha
je
pop
fwait
pop
add
xchg
lret
cmp
jne
xor
sahf
sbb
sbb
enter
add
adc
pop
imul
leave
mov
aaa
clc
or
int3
popa
pop
and
inc
inc
sbb
mov
cmp
es
sbb
and
cmp
ljmp
cmp
xor
mov
add
jecxz
pop
imul
inc
outsl
add
punpcklwd
stos
add
adc
cmpsb
xchg
jo
adc
or
enter
add
mov
ljmp
test
xchg
dec
cmp
sbb
and
das
fmuls
inc
push
xchg
cld
or
nop
loope
cmp
mov
arpl
sbb
shr
js
in
pop
cmpsb
lret
xchg
shlb
cmp
mov
adc
shr
mov
xchg
stos
dec
adc
push
mov
out
std
adc
daa
dec
pop
adcb
ret
jge
add
into
jle
mov
ret
mov
sub
ja
xchg
or
dec
push
inc
and
xor
pop
and
adc
sbb
add
inc
xor
int
or
add
loope
mov
lahf
add
mov
pop
sbb
cs
push
stc
add
xor
inc
mov
mov
adc
adcl
enter
subl
lea
add
popf
sbb
aaa
mov
repnz
adc
mov
add
mov
cmp
mov
jmp
std
pop
fwait
jg
subb
sbb
pusha
and
jno
mov
add
mov
cmpsb
sub
mov
xchg
or
dec
in
push
push
add
or
lock
mov
jo
nop
xor
sbb
and
sub
xchg
add
sub
insb
adc
mov
jmp
add
sbb
mov
adc
sub
adc
adcb
or
pushf
insb
jmp
jne
and
or
xor
mov
aam
jb
sub
pushf
jbe
xor
mov
add
jl
leave
jae
pusha
popa
leave
mov
js
inc
sbb
pop
pop
or
cmp
loopnew
mov
out
pop
adc
jmp
mov
comiss
inc
ss
shlb
xchg
or
movsl
gs
rorb
dec
push
shll
push
mov
xor
mov
in
mov
mov
dec
test
pop
and
and
test
or
cmpsl
popa
stos
xor
outsl
enter
mov
add
jmp
xchg
mov
fimuls
pop
xor
adc
jecxz
mov
imulb
and
dec
or
adc
inc
js
insb
or
xor
es
sbb
xor
sbb
cmp
ret
xchg
pop
jmp
enter
les
sbb
sub
push
pop
js
jp
dec
sub
outsl
jl
int3
cmp
jbe
shll
xchg
jno
imul
add
out
mov
adc
ret
test
pop
lcall
bound
mov
dec
xlat
addb
sbb
mov
jge
sub
pop
les
or
dec
add
sub
test
test
mov
ret
pop
jle
sbb
inc
out
push
hlt
arpl
add
jle
popa
cmpb
sbb
addb
xchg
pop
lods
sbb
stos
or
fmull
push
or
rcll
dec
and
xchg
push
dec
int
roll
out
push
fwait
out
shrl
sub
inc
adc
adc
data16
je
or
sbb
mov
inc
xor
mov
mov
sub
mov
iret
mov
mov
stc
adc
push
sbb
lods
aam
jae
cmp
xchg
js
loopne,pt
jo
jl
adc
or
test
cmp
ja
xchg
repnz
and
inc
push
push
cs
adc
sbb
rclb
movsl
push
les
lock
sarl
adc
and
enter
cld
or
jne
pop
inc
roll
push
sahf
adc
sbb
mov
test
add
mov
cs
mov
pushf
push
dec
or
and
jne
je
add
xchg
sbb
mov
inc
clc
mov
inc
testb
ljmp
and
in
adc
rolb
cmp
jge
lock
jnp
pop
push
sub
decb
push
ret
pop
adc
arpl
movsb
scas
call
mov
push
dec
ss
and
adc
ret
enter
push
xchg
add
mov
jns
lret
sti
inc
pop
aas
movsb
adc
mov
sbb
je
fwait
nop
mov
adc
adc
lods
and
aam
in
sbb
adc
rolb
dec
sbb
or
ret
clc
sbb
mov
test
adc
add
dec
mov
xor
ret
pop
in
cmpsl
xor
and
adcb
lods
and
sbb
fnsave
or
xor
clc
sbb
inc
ret
mov
cmpsb
jns
leave
je
lock
mov
scas
and
pop
mov
and
xchg
and
sbb
cs
xor
inc
or
dec
xchg
cmp
sbb
add
inc
outsl
scas
sbb
sbb
xchg
dec
add
fsubs
mov
pushf
sbb
fadds
xor
enter
rorb
pop
mov
insl
call
push
test
push
sub
xchg
and
andl
js
dec
xor
push
dec
lret
push
push
enter
add
mov
rcl
pop
fadds
jp
sub
es
sbb
sub
sti
sub
dec
lret
pop
sbb
rcrl
nop
aaa
mov
xchg
inc
xlat
mov
add
mov
pop
test
arpl
push
sub
roll
sbb
imul
inc
dec
push
imul
out
insl
add
adc
adc
cli
or
in
pusha
nop
shll
push
inc
xchg
sbb
loopne
sbb
ror
sbb
sub
rclb
shl
dec
adc
loop
repz
int
int
push
js
fmull
aam
movsl
and
jl
and
repnz
shr
dec
cmp
cmp
dec
shrb
cmc
or
cmp
sub
or
rcrb
sub
es
sbb
jb
mov
sbb
leave
test
cmp
je
mov
push
jb
dec
mov
hlt
push
add
cmpsb
scas
sub
cmp
mov
hlt
cmc
insb
leave
add
inc
call
fwait
sbb
mov
insb
psubusb
push
lahf
rcrb
or
inc
pop
adc
dec
xor
xor
adc
cmpsb
adc
test
lods
push
xor
enter
test
cwtl
nop
inc
rorb
cli
adc
inc
clc
cmpsl
xchg
mov
in
mov
and
push
scas
shlb
add
lock
xor
push
dec
inc
add
pop
test
mov
in
addb
cmp
cmp
loop
leave
les
lcall
jo
xor
pop
or
sbb
test
hlt
and
nop
ret
insl
jl
cltd
xchg
add
xchg
nop
xor
push
pop
xchg
jmp
movsl
imul
cs
add
and
add
lds
stos
adc
pop
and
add
jbe
push
ss
data16
orb
mov
sahf
xor
sbb
test
cmp
xor
rclb
push
test
xlat
add
cmp
sub
push
mov
jo
dec
rclb
or
cmp
cmp
inc
sub
jns
inc
push
mov
rolb
xchg
add
inc
inc
jbe
iret
es
inc
scas
pushf
and
pop
js
pop
inc
sub
or
out
les
push
ret
adc
adc
insb
lock
dec
pop
add
cwtl
ret
push
adc
pop
xchg
or
cmp
push
pop
push
push
dec
fcmovnbe
rclb
and
inc
push
inc
test
mov
dec
rorl
push
jo
into
sbb
xchg
cmc
push
pop
pop
fdiv
cmp
icebp
lret
adc
push
mov
add
pusha
xor
jo
imul
fmuls
or
adc
jo
and
cs
jae
and
stos
adc
notb
addl
sub
cmp
cwtl
lea
inc
aam
movsb
xor
inc
mov
add
add
or
sar
adc
scas
adc
sub
jo
test
sbb
icebp
or
sbb
inc
insb
or
adc
mov
pusha
push
add
adc
arpl
adc
hlt
or
mov
pusha
ljmp
dec
jo
and
stc
push
imul
adc
sahf
mov
psrlw
roll
orb
sub
fsts
mov
mov
test
xchg
scas
inc
cmp
scas
pop
xchg
pop
pushf
mov
scas
jmp
jmp
xchg
addb
sub
xorl
hlt
loopne
cmp
js
xchg
loope
fcmovne
outsb
cmp
pushf
or
dec
les
mull
add
inc
iret
repnz
pop
mov
rclb
std
add
sub
lea
lock
pinsrw
mov
push
addb
sbb
adc
lcall
popa
lock
and
add
xchg
clc
cmc
scas
adc
fnstenv
lock
adc
adc
in
jecxz
cmp
int3
jmp
aam
mov
imul
sbb
adc
mov
push
pop
es
into
jo
xor
popa
sub
push
imul
dec
pop
test
lcall
mov
cwtl
mov
fiadds
sub
je
adc
inc
jle
cld
cli
mov
add
adc
cli
outsl
out
cmp
or
xor
and
lea
movsb
push
jle
push
js
mov
cmp
pop
adc
mov
addb
sub
add
adc
cmpps
scas
push
or
repnz
and
push
lahf
cli
dec
out
loope
adc
cwtl
test
test
mov
notb
int
fisubs
imul
out
cmpsb
sbb
data16
out
andb
into
xor
test
insb
inc
dec
push
jo
ret
sbb
test
dec
sarl
cmp
lahf
aam
shll
jbe
push
and
ret
pop
call
sarb
mov
rcrl
push
data16
cmpsb
push
xor
or
sbb
les
sub
or
sarb
icebp
dec
sbb
js
cmpsl
and
mov
fidivs
mov
fmul
inc
add
test
mov
icebp
sbb
and
mov
sub
push
xor
jne
push
js
mov
mov
or
add
or
cmc
xor
push
or
and
lods
xor
scas
movsb
leave
mov
mov
loopne
loopne
aad
les
jge
ja
add
rcll
ds
and
pop
jp
stc
prefetch
stos
mov
loopne
mov
xor
mov
outsl
sbb
icebp
inc
rclb
cmp
add
enter
inc
xchg
sub
jmp
repz
pop
shrb
lock
sbb
fdiv
mov
mov
and
sbb
dec
into
nop
loopne
inc
sbb
insb
cld
mov
add
pop
pop
mov
dec
adc
arpl
pop
cmp
xor
and
inc
push
out
add
mov
outsl
adc
cmpl
das
dec
xchg
nop
test
xchg
xchg
enter
adc
inc
inc
test
sub
adc
push
sub
scas
les
stos
loope
xorb
out
pop
jno
nop
fcoms
add
dec
pop
lock
pop
mov
adc
insl
or
or
sbb
sbbl
or
add
pop
adc
pop
dec
ljmp
icebp
cmp
js
insb
mov
dec
and
inc
ret
jmp
push
fsts
push
test
in
mov
arpl
fcomi
or
subb
add
sbb
repz
pushf
loope
gs
jo
sub
inc
cmp
jb
sbb
sbb
sbb
xor
adc
push
push
leave
or
inc
push
fwait
addb
addr16
ret
or
dec
sbb
jb
movsb
jno
lret
pop
pop
test
add
add
je
jp
sub
dec
pop
loope
cmp
sbb
push
pop
sbb
cmp
add
push
imul
and
insl
shl
push
loop
repnz
rol
and
inc
icebp
movsb
lahf
pop
inc
cmp
jmp
pop
pusha
mov
sub
pop
and
sbb
xchg
pop
adc
xor
pusha
mov
mov
adc
or
pop
in
jb
mov
lock
jb
add
addr16
add
repnz
inc
mov
mulb
or
shrb
inc
lock
xchg
sbb
cli
imul
xchg
pusha
and
leave
test
in
add
dec
or
lock
movsl
push
test
daa
pop
push
outsl
test
cmc
or
ds
shrb
clc
lcall
fcomps
rcrb
pop
cmp
or
xchg
cmpsl
ds
rcll
cmp
shrl
ficompl
sbb
negb
enter
add
inc
ret
sbb
stc
sbb
rcll
push
addl
das
add
loopne
jl
inc
call
adc
push
inc
shlb
mov
sub
xor
outsl
or
add
mov
add
test
mov
sub
cmp
aam
rolb
lea
lods
mov
arpl
cmp
cmp
das
lahf
add
jp
push
mov
or
add
and
dec
test
push
or
in
rorb
test
hlt
xchg
push
shlb
sub
fdiv
hlt
add
adc
push
test
test
xchg
cmp
sub
xchg
mov
cmp
xchg
push
jne
sbb
inc
xor
stos
or
mov
xchg
shll
fstps
data16
xor
jbe
ss
add
xor
bnd
lods
adc
test
imul
add
adc
inc
sub
orl
push
ljmp
jb
cwtl
cmp
add
dec
xor
and
xor
outsl
xchg
pop
test
sbb
inc
or
or
sbb
inc
and
pop
pop
add
xor
cmpxchg
dec
or
xchg
add
push
inc
scas
xchg
sub
rclb
sbb
mov
daa
dec
mov
addl
inc
and
jae
enter
xor
sti
cmp
sbb
add
xchg
pushf
lock
or
sbb
test
dec
pop
movb
sbb
xchg
pusha
aam
jle
shlb
cmc
dec
push
shll
mov
popa
test
xchg
mov
pop
jo
test
sbb
jae
xchg
inc
rclb
out
repnz
add
cli
call
push
ret
pmullw
push
fcmovnb
ljmp
pop
inc
loop
repnz
mov
rcr
dec
cmp
adc
mov
pop
jecxz
sub
test
dec
inc
arpl
lods
das
push
sub
nop
mov
cs
popf
mov
sub
xchg
mov
and
rcrl
outsb
les
mov
fdivrp
fwait
xchg
or
sbb
jo
lret
xor
push
or
js
adc
xchg
lods
data16
sub
inc
neg
lock
add
test
and
jb
fbstp
bound
cmp
and
adc
xor
mov
pop
xchg
cmp
sbb
mov
cmpsl
push
clc
and
testb
push
ret
add
loope
call
outsl
or
and
js
jbe
adc
adc
pop
pop
push
dec
js
xchg
hlt
push
lahf
xorb
scas
test
cs
gs
push
mov
jo
xor
icebp
xchg
pop
loopne
or
pop
pop
push
or
inc
pop
push
lret
xor
cmp
jecxz
adc
ror
cmpsl
adcb
or
jmp
xorb
push
push
sbb
adc
and
mov
sbb
rol
in
push
je
pop
rolb
adc
or
enter
sahf
gs
andb
inc
jecxz
add
and
or
ret
dec
enter
push
xor
jo
mov
jge
sbb
adc
lret
mov
pop
cmpsl
shlb
dec
aad
loopne
sub
adc
cmp
jmp
mov
in
push
mov
addr16
add
lret
xor
jl
js
add
push
sbb
aas
cmp
call
dec
int3
push
and
xchg
addr16
xor
mov
rclb
popa
ret
inc
loope
js
pop
sbb
cmp
out
addr16
pop
cmp
mov
pop
pop
inc
lahf
pop
pop
adc
sub
dec
lods
xor
inc
gs
add
or
xchg
cmp
mov
mov
or
jecxz
enter
in
hlt
in
cmpb
nop
sbb
jo
sbb
jne
add
xchg
sub
sahf
pop
sbb
into
sub
rclb
or
mov
popa
test
inc
dec
scas
rcrl
pop
dec
or
sub
ret
inc
adc
push
stos
xchg
test
add
inc
jmp
pop
lea
xchg
jae
lahf
pop
add
push
mov
adc
and
jecxz
pop
xchg
jb
lea
jp
dec
or
push
adc
xor
push
shrl
adc
jo
and
xchg
jp
mov
xchg
or
cld
cmpb
jg
push
inc
sbb
and
jae
mov
xchg
adc
rorb
jp
pusha
dec
ljmp
or
add
sbbb
ljmp
mov
leave
shl
ret
dec
lcall
push
bound
sbb
or
lea
add
gs
mov
sub
into
loopne
add
ret
test
dec
mov
or
scas
test
pusha
dec
lret
inc
lods
les
idivb
jb
or
mov
inc
rcll
mov
mov
cmp
add
adc
cmpsb
and
sbb
hlt
mov
and
into
lea
scas
add
xchg
push
rcll
or
lods
inc
rcll
xor
sbb
cmp
fadds
popa
pusha
xchg
pop
add
mov
lea
sbb
rcll
cmp
rolb
inc
bound
pushf
cmp
mov
add
cmp
add
push
adc
repnz
pusha
mov
push
xor
and
dec
inc
lods
xchg
dec
lret
or
sub
push
popa
jne
adc
and
jmp
imul
aam
jbe
out
xchg
sbbb
xchg
cwtl
push
add
aas
xor
sub
dec
mov
pop
mov
pusha
ret
into
sub
fcompl
cld
into
or
bound
stos
xor
mov
xchg
movhps
cmp
adc
popl
sarl
mov
jno
inc
and
stc
adc
pop
lds
pusha
and
push
inc
xorl
mov
xchg
or
stc
add
inc
adcb
inc
cmp
sbb
rcrl
js
scas
stc
and
jne
fdivl
sub
pop
add
out
repz
pop
testb
rcrl
imul
xchg
inc
aam
xchg
dec
mov
jle
ret
or
arpl
adc
rcl
adc
imul
xchg
and
out
xchg
hlt
xchg
rolb
adc
mov
xchg
mov
cli
dec
imul
add
or
jecxz
cmp
aam
and
or
pushf
jmp
mov
loope
and
dec
sahf
test
add
decl
je
icebp
les
or
rolb
pop
add
outsl
cmp
cltd
xor
add
or
mov
ljmp
xchg
sarb
inc
sbb
test
sub
scas
mov
mov
or
add
or
push
js
lock
mov
dec
notb
inc
cmp
push
cmp
pushf
sub
mov
cld
add
test
out
sbb
pushf
mov
xorb
bound
push
ret
adc
test
cli
push
aaa
cli
sbb
aam
cmpsb
or
or
or
pop
pop
dec
hlt
out
add
hlt
mov
or
stos
rcl
test
cmp
andl
push
test
daa
pop
cmp
push
inc
add
mov
add
cli
dec
fcompl
or
fistps
mov
popa
xchg
sbb
out
xchg
arpl
sbb
lods
insb
or
sbb
inc
mov
xor
push
push
jbe
push
mov
in
push
aas
inc
bound
cmp
push
cmp
movsl
mov
push
add
inc
push
inc
rcrb
inc
pop
aam
enter
adc
xchg
push
xor
shrb
lret
sub
shll
xchg
push
inc
push
cmp
addb
nop
inc
aam
sahf
mov
pop
int3
add
cmc
mov
sbb
rcll
xor
daa
jge
clc
rorb
dec
add
dec
les
adc
dec
xor
dec
add
lcall
pop
rep
stc
and
add
add
inc
inc
arpl
lahf
mov
mov
shld
mov
or
mov
cmp
or
lret
or
and
shrb
xchg
movsb
pop
sahf
jns
sub
enter
sbb
mov
lds
into
sub
mov
push
or
shll
jl
shll
xchg
push
call
idivb
push
dec
mov
xor
mov
shr
pop
rclb
mov
enter
inc
push
pop
add
adc
arpl
sub
push
and
adc
add
repz
mov
rolb
sbb
lds
les
sti
push
rcrb
mov
sbb
push
jb
mov
inc
xor
add
lds
mov
sbb
sub
or
add
adc
add
cmp
adc
cwtl
mov
xchg
mov
fwait
sub
sub
add
sbb
mov
movsb
nop/reserved
pop
sub
push
pop
mov
and
out
xchg
jp
add
inc
loopne
loopne
fsubrs
loopne
popa
cld
out
sub
push
push
xlat
clc
rcr
shrb
rolb
push
jne
sbb
fnstenv
flds
pushf
push
inc
lahf
int3
push
lret
out
adc
inc
pusha
pop
mov
add
sub
jae
mov
add
mov
add
mov
mov
cs
inc
sbb
jl
or
mov
lds
mov
jecxz
pop
mov
cltd
icebp
mov
sub
push
push
push
dec
adc
nop
add
xchg
dec
sbb
aam
push
push
adcb
fadds
loop
arpl
test
out
pop
adc
and
rolb
lock
push
and
sub
add
rclb
out
pop
xchg
lcall
sets
scas
xor
sub
es
add
push
fmull
sbb
mov
rcll
stc
add
andl
xlat
pusha
or
or
je
pusha
dec
lds
out
std
adc
fsubrs
test
inc
jo
insb
adc
test
or
pop
popf
jmp
jnp
test
inc
pop
mov
and
addb
adc
jl
add
nop
or
sbb
lds
test
pop
add
pop
outsl
sbb
loop
xchg
xor
jmp
pop
cmp
sub
xor
sub
adc
mov
pusha
je
add
mov
loopne
mov
and
das
push
push
push
xchg
call
addb
inc
pop
pop
imul
stos
rcl
mov
fsubs
ret
rorb
dec
stos
dec
push
sub
add
pop
add
add
push
icebp
or
sub
add
inc
adc
popf
cli
jnp
and
or
add
jns
and
aad
mov
adc
inc
cmp
add
and
push
fwait
shll
icebp
mov
into
rcrb
rcrb
aaa
lock
lret
dec
pop
or
stos
popa
cwtl
and
add
xchg
loopne
pop
cmp
les
or
fiadds
or
rol
and
and
push
add
adcb
test
add
call
shl
adc
inc
pop
push
rcrb
psrad
shll
ss
pop
cs
jo
sbb
fs
add
push
test
addb
add
popa
imul
loop
arpl
mov
call
xor
inc
and
jmp
nop
xor
cs
sbb
lock
or
ret
fdivs
inc
imul
sub
popf
ds
or
adc
jp
xchg
arpl
lods
inc
or
cmp
mov
push
adc
mov
lcall
das
rcrb
mov
push
ret
adc
cmpsb
movsb
xor
push
sub
dec
cltd
in
icebp
loope
sub
push
sbb
push
push
inc
outsb
loope
call
xor
dec
or
xchg
and
enter
lock
shlb
cmp
lcall
xchg
mov
push
or
fmuls
pop
dec
jae
sarl
repnz
xchg
popl
pusha
and
adc
imul
aad
popf
pop
or
out
push
pop
add
xorl
sbb
xchg
jp
or
insb
sub
push
loope
mov
std
inc
inc
cmp
push
push
push
push
push
sbb
xor
rclb
ret
mov
lock
add
ljmp
pop
or
and
ss
and
test
adc
jnp
mov
insl
mov
add
movsb
sarb
gs
addr16
mov
arpl
sub
rcrb
out
setbe
loopne
inc
mov
outsb
in
pop
or
cld
fs
xchg
pusha
and
js
dec
lea
faddp
and
mov
stc
jle
or
dec
bound
pop
das
pop
int
sbb
xchg
fwait
sub
pop
adc
jp
inc
push
or
xchg
sbb
push
jb
cmp
mov
adc
ficompl
add
fstpl
mov
pop
xchg
or
popa
inc
dec
rolb
push
mov
mov
push
mov
shl
jmp
ds
and
or
or
or
das
lods
ds
test
das
popa
or
or
cmpsl
test
ret
sbb
pop
inc
mov
ror
lea
add
mov
mov
in
mov
rol
or
xchg
adc
jl
shrl
pop
cmc
adc
or
pop
clc
xchg
mov
aam
mov
fmuls
testl
or
sub
sahf
mov
stos
jno
sub
mov
es
clc
inc
popf
fs
cmp
stc
adc
mov
inc
mov
push
js
or
xor
xchg
scas
mov
sub
dec
insl
xor
pop
xchg
lahf
out
add
dec
jbe
int3
cmp
lods
mov
mov
pusha
cld
lea
cmp
sub
mov
pop
out
pop
das
stos
sti
aas
sbb
sbb
sub
push
mov
add
psubb
pop
push
rorb
ds
mov
psllw
lret
add
add
push
jp
je
mov
mov
popa
imul
ljmp
add
lea
dec
push
sbb
mov
int3
fists
aas
dec
stos
test
clc
sbb
loopne
jb
lcall
lock
add
fucomi
lea
add
sbbl
les
lods
das
call
xchg
shll
or
push
inc
adc
push
add
sub
loope
xchg
mov
jmp
dec
dec
cmc
frstor
stos
pop
mov
sub
xchg
pop
es
movsb
lock
fldcw
test
repnz
nop
pop
lcall
lcall
ljmp
or
sarb
dec
adc
f2xm1
sarb
add
mov
xor
pusha
jo
push
insb
test
test
pop
add
add
fildll
add
xor
lea
mov
pop
xchg
adc
ds
add
pop
mov
pop
jp
inc
dec
adc
and
add
ret
add
pop
call
fcomip
sbb
jecxz
inc
std
add
adc
jle
mov
ss
jge
in
lock
adc
cmpsb
inc
adc
mov
add
xor
punpckhdq
push
add
mov
push
ds
rorb
add
orb
xchg
dec
and
nop
je
shlb
add
jo
call
adc
dec
cmpsl
adc
sbb
pop
inc
loopne
fwait
mov
and
adc
inc
adc
das
enter
xor
cmovo
adcl
mov
push
aam
sub
or
mov
daa
mov
add
rol
sahf
lea
je
lock
xchg
addl
cmp
in
add
out
lods
pop
cli
or
push
mov
dec
out
cmp
xor
mov
inc
xchg
inc
sbb
or
cli
out
adc
fisubrs
mov
sbb
push
cmp
fmuls
daa
xor
nop
mov
or
xor
movsb
add
jnp
pop
dec
xchg
mov
sbb
xor
aam
dec
insb
pop
pop
icebp
jo
test
sbb
cmp
and
outsb
cmp
mov
ds
xchg
je
xchg
adc
mov
fwait
inc
sbb
stos
and
adc
pop
adc
rclb
ret
xchg
pop
cmova
movsb
loop
loopne
popa
and
push
leave
mov
or
inc
mov
loopne
adc
dec
lret
or
idiv
jl
movsb
cmp
mov
ret
adc
push
test
clc
fisttpll
lea
sti
jo
test
int3
sbb
mov
icebp
adc
sbb
and
xchg
cmp
push
les
in
xchg
aam
xor
jnp
sub
aam
mov
mov
hlt
and
mov
call
adc
xor
pop
lret
shll
xchg
lea
call
mov
add
jb
add
mov
in
or
mulb
cmc
mov
mov
xor
cmpsl
mov
adc
mov
test
or
sbb
or
mov
mov
mov
cmp
jne
add
dec
push
pop
mov
add
enter
lods
leave
mov
addb
add
jmp
add
xor
add
xor
fcoml
push
push
add
mov
dec
push
roll
sub
inc
sub
or
popa
mov
push
mov
fstl
push
or
arpl
mov
cmpb
push
push
lock
push
popl
pop
rcrb
js
adc
sub
call
push
test
xorb
xor
adc
aaa
xchg
ror
push
jo
out
mov
data16
xchg
xor
inc
es
inc
fmuls
or
addb
dec
dec
sub
adc
dec
bound
mov
and
dec
lret
push
mov
jb
add
push
pop
fimuls
aam
jl
lret
adc
call
pop
clc
add
repz
push
xor
nopl
push
jle
inc
addb
pop
or
jo
sub
cmp
mov
and
dec
xchg
pusha
dec
je
pusha
outsl
insb
cmp
pop
in
adc
filds
adc
add
cmp
rcrb
mov
mov
das
addr16
dec
pop
inc
test
sub
push
psllw
lret
sub
push
mov
xchg
and
jb
push
rolb
adc
dec
mov
mov
sbb
or
loope
mov
lock
dec
loopne
push
jo
push
jo
sahf
adcb
ret
add
fwait
dec
jge
js
out
movlhps
pop
or
push
xchg
mov
xor
in
je
popf
addb
push
loop
lock
js
cmp
or
xor
xor
jb
adc
add
aam
lods
rcrl
loopne
adcb
add
pop
pop
hlt
pop
aad
ficomps
xor
add
ret
add
or
jecxz
leave
fcomip
add
rcrb
adc
mov
lock
mov
adc
je
mov
enter
mov
inc
push
adc
add
cmovle
or
mov
or
sub
testl
mov
or
adc
iret
add
movsb
push
mov
inc
dec
dec
push
xchg
jle
test
push
xchg
push
xchg
mov
setbe
lret
cmp
clc
sbb
sti
jo
jo
jmp
clc
loope
mov
mov
shrb
lock
lcall
inc
dec
clc
pop
and
movsl
ds
xor
ret
js
push
push
les
dec
iret
adc
cwtl
xchg
scas
out
daa
xor
pop
pop
shlb
push
rclb
inc
fbld
push
and
in
jmp
or
inc
mov
lret
orl
and
cli
addb
imul
test
sub
jo
mov
scas
and
cmp
jl
adc
pcmpeqd
pop
dec
xor
inc
inc
and
xlat
test
adc
sbb
inc
andb
hlt
sub
mov
pop
adc
jns
mov
sub
sbb
lods
xchg
shlb
stos
sbb
into
push
sub
dec
cmp
adc
and
mov
jg
push
sub
xor
scas
lcall
aad
loop
jecxz
jl
pop
ret
lret
add
imul
loopne
fs
in
loope
fiadds
cmpsl
test
sub
cmc
orb
jmp
or
mov
mov
mov
aas
ret
pop
test
dec
xchg
cmc
add
and
push
and
es
mov
cmp
mov
add
test
or
inc
mov
mov
bound
pop
add
xchg
or
xor
push
es
loope
add
mov
loopne
cs
rorl
in
mov
jmp
mov
or
adc
daa
push
mov
lock
add
call
push
push
rcll
push
in
push
push
fidivs
lret
or
rclb
mov
mov
pusha
sarb
gs
xcrypt-ofb
cmpsl
outsl
test
sarl
mov
sub
rcrl
adc
mov
xchg
xchg
aaa
mov
insl
lret
aad
cmp
leave
push
push
sbb
xchg
mov
dec
rolb
lods
iret
mov
or
add
sub
sbb
scas
cs
aad
arpl
xchg
setp
or
adc
push
ljmp
xorb
mov
out
add
mov
pusha
dec
lret
sub
sbb
sub
outsb
xchg
xor
jno
sub
ljmp
mov
mov
sahf
inc
popa
gs
fsubs
sub
loopne
jae
or
mov
adc
mov
ror
rorl
ret
and
es
or
adcb
jl
cmp
aam
sbb
arpl
mov
daa
addl
sub
cmp
loopne
or
xchg
ss
or
push
mov
into
leave
jo
cmp
inc
negb
pop
addl
test
push
jle
repnz
ss
sbb
pop
cmp
jo
inc
sbb
push
dec
or
out
dec
and
dec
adcl
adc
xor
fldcw
add
js
loopne
add
std
nop
push
rcl
fidivs
ret
lods
push
mov
and
mov
xor
pop
pop
dec
cli
lret
pop
sbb
cwtl
outsb
push
pushf
lret
adc
popa
pop
cmp
in
sbb
shlb
and
adc
loopne
adc
adc
cltd
pop
or
xor
scas
daa
lods
ret
jmp
push
aas
xor
push
xchg
xchg
jne
cmp
adc
mov
adcl
ret
addb
out
add
je
or
jmp
pop
xor
dec
shl
loop
adc
les
cmp
or
push
inc
xor
or
dec
mov
mov
jb
loop
imul
jp
mov
cmp
pop
and
mov
sbb
and
test
add
cmp
sub
fmuls
mov
sbb
sbbl
addr16
inc
aaa
sub
mov
int3
movsb
imul
mov
or
xor
clc
pop
mov
ds
pop
add
mov
add
addl
je
adc
or
mov
sbb
add
adc
dec
inc
ret
fcoms
pop
xor
inc
pop
jae
cmp
outsb
imulb
sbb
test
imul
jns
pop
push
mov
dec
out
push
pop
dec
wbinvd
inc
dec
xchg
addb
repnz
sub
adc
jmp
push
and
rorl
mov
mov
jne
mull
sub
pusha
or
jb
sbb
test
pop
shll
or
aam
xor
cltd
into
cwtl
inc
cmp
xor
jp
sbb
pop
fcomi
xor
cmp
sub
or
ret
test
sbb
shrl
arpl
cwtl
rcll
mov
rolb
pusha
cmp
stc
mov
xchg
bound
sub
sbb
jp
add
sub
add
dec
leave
add
test
test
xchg
or
add
test
sbb
pop
sbb
ljmp
inc
push
or
lods
icebp
prefetch
add
xchg
inc
pop
cmpsl
imul
mov
add
push
daa
mov
mov
dec
or
into
adc
negb
sbb
sbb
xor
push
call
xlat
xor
test
rcll
cld
shlb
mov
mov
jmp
push
leave
and
sub
add
jmp
and
inc
in
aaa
mov
push
xor
inc
addb
push
sbb
out
shlb
push
in
int3
sbb
adc
dec
pop
cmp
sub
rclb
sbb
mov
sub
push
icebp
push
sub
jmp
xor
fnsave
add
sbb
cmp
jecxz
and
adc
shlb
adc
xchg
outsb
hlt
xchg
loopne
fsub
push
xchg
pusha
popa
xor
ret
mov
shr
dec
ljmp
les
aam
ss
ss
or
inc
sub
popf
movsl
sub
add
inc
cmp
enter
push
mov
cmp
xor
xchg
mov
aaa
lds
popa
and
sub
filds
add
stos
adc
adc
add
cs
push
sub
sbb
mov
inc
sarb
mov
cmp
add
outsb
popf
xor
add
xor
xchg
inc
pop
add
mov
mov
mov
scas
xchg
cmpsl
jo
in
clc
inc
jmp
mov
shlb
iret
cmp
lock
xchg
pop
ret
mov
push
inc
inc
rclb
xor
je
ffreep
add
add
xor
add
fbld
pushf
sbb
clc
sub
std
jne
pop
lods
and
lock
je
roll
popf
and
les
push
fistps
push
aam
inc
xchg
jp
or
mov
scas
sahf
js
cmp
insl
sub
pushf
ss
push
jbe
push
es
ljmp
adc
add
push
pop
inc
mov
cltd
fidivrl
jb
xchg
xchg
aas
cmp
adc
and
push
inc
sbb
pop
xchg
push
rcr
lock
rcll
xchg
xor
dec
adc
adc
inc
repz
in
push
add
out
adc
and
sub
test
aad
or
in
sbb
mov
xor
div
push
push
mov
add
scas
stc
push
das
xor
pop
les
enter
xchg
mov
push
add
and
scas
js
enter
mov
cmp
lea
sbb
xchg
xchg
popa
aam
repnz
xor
cs
xchg
shlb
mov
gs
ret
mov
pop
pop
xchg
adc
dec
pop
add
jmp
inc
push
or
in
pop
adc
out
cltd
dec
add
add
sbb
leave
push
movsb
mov
add
mov
imul
dec
sbb
dec
add
pop
adc
cwtl
sbb
addb
or
sub
adc
shl
mov
mov
mov
inc
shr
int3
or
inc
das
inc
enter
and
repnz
lock
lods
mov
xorl
fwait
lock
rcl
sarb
fs
fmul
xor
dec
mov
mov
sbb
or
imul
cmpsl
sub
aas
into
adc
ficoms
sbb
aam
out
lods
stos
nop
add
loope
lea
pusha
or
and
mov
daa
shll
or
inc
mov
push
jp
pop
cld
xor
jmp
mov
and
out
xchg
je
arpl
dec
pop
subl
repnz
and
mov
add
dec
in
sub
adc
dec
xor
xchg
add
pop
cmp
es
sbb
fldl
popa
pusha
lcall
out
and
jbe
xor
lock
ljmp
ret
lahf
mov
lea
push
push
ret
mov
mov
sahf
into
xor
mov
mov
les
loopne
adc
mov
jmp
rcrb
js
pop
add
sbb
cmp
jmp
or
cmc
jp
nop
xlat
add
scas
inc
sub
cmc
mov
mov
test
adc
push
sti
out
ljmp
clc
mov
jae
push
clc
pop
sub
adc
and
cmp
dec
test
xchg
add
in
dec
jecxz
movsb
sbbl
jmp
add
or
add
add
add
or
arpl
das
sbb
adc
daa
faddl
int3
fucomip
xchg
push
xchg
lods
jo
fstp
mov
add
rorb
aaa
js
sub
hlt
andl
std
shlb
loope
xchg
lahf
dec
add
test
pop
pop
jne
lds
lods
dec
ret
inc
ljmp
xchg
cs
and
in
mov
sbb
aad
mov
xchg
or
ds
xor
rorb
rorl
jp
push
cmp
dec
fs
cld
divb
and
sub
scas
sti
or
aas
shr
leave
ja
je
out
fadds
or
out
mov
jns
idivb
popa
pop
push
mov
push
pop
imul
shll
pop
imul
jp
lock
or
xchg
add
jg
mov
cli
push
pushf
or
add
call
add
sbb
dec
or
or
adc
loop
mov
inc
in
xchg
inc
push
enter
or
and
inc
adc
inc
inc
mov
mov
and
test
ja
lods
xor
and
dec
pop
xor
out
xor
shl
pop
jl
pop
push
xchg
xor
ss
sub
sbb
jns
rcr
movb
add
pop
popf
test
dec
mov
or
xchg
int3
shlb
out
shr
and
jbe
pop
mov
nop
add
xor
lcall
jns
lea
pop
les
inc
stc
and
movsl
mov
push
adc
loop
pusha
push
int3
dec
rorb
ljmp
dec
faddp
cmp
mov
or
repnz
and
inc
add
mov
sbb
nop
movsb
push
push
lods
pop
or
popf
inc
outsl
inc
scas
or
into
fdivs
push
xchg
xor
push
leave
and
bound
loopne
sarl
add
in
ret
adc
xchg
add
sbb
aaa
mov
add
xor
and
add
out
pop
lret
push
sub
sub
into
cmpsb
or
stos
mov
sub
xchg
mov
xor
shrb
mov
push
jbe
add
adc
dec
push
wrmsr
rcll
xchg
hlt
inc
jmp
mov
mov
mov
xchg
jno
lret
and
sbb
movsl
arpl
dec
sub
loopne
addb
fldt
bound
pushf
outsl
or
loope
pop
jbe
xlat
sbb
js
xor
leave
lods
das
sbb
fldcw
addb
push
loop
inc
aas
sub
fmuls
xchg
push
pop
js
leave
sbb
adc
movsl
rorb
cmpsl
push
mov
xor
repnz
test
jle
inc
mov
fwait
push
jecxz
and
sbb
sbbb
ret
xor
jns
xchg
and
pop
dec
add
adc
dec
adc
add
sub
aaa
sbb
cmpsl
in
aaa
mov
scas
cmp
add
adcl
adc
movhps
jb
sbb
cmp
inc
sub
cltd
js
cmc
mov
inc
mov
mov
aam
out
dec
jg
push
add
mov
cmp
sti
push
jmp
dec
add
xor
xchg
lea
lods
das
xchg
mov
or
test
scas
pop
out
pop
insb
adc
pop
jl
ret
xor
andl
sbb
or
add
push
lahf
cs
rol
mov
dec
inc
xchg
out
lods
lahf
lock
shlb
rol
or
lods
andb
add
imulb
lock
mov
xor
cmp
sahf
shr
aam
mov
adc
cmp
mov
je
cmp
lods
xor
sub
ljmp
cmpl
inc
je,pn
push
dec
or
in
iret
es
lds
imul
punpckldq
push
jp
lock
push
add
dec
das
icebp
mov
into
mov
sub
push
pop
bnd
rcll
outsb
pop
in
xor
sbb
sbb
cmp
popf
dec
cmp
imul
sub
adc
lret
sub
sbb
adc
sub
loope
mov
push
push
jecxz
push
sbb
sub
test
fadds
jecxz
jae
bound
xchg
ret
movsl
out
cmpsb
pop
xchg
or
rolb
inc
xchg
sahf
add
les
sbb
or
int
xchg
leave
cs
ret
or
leave
addb
or
xchg
push
lods
dec
fsubl
pop
dec
sbb
es
bound
xchg
and
inc
mov
mov
inc
add
movsl
sub
pop
or
lock
clc
sbb
sub
cmp
xchg
inc
mov
dec
pop
sub
xor
sbb
cmp
movsb
mov
test
cwtl
sbb
pop
jl
push
dec
sbb
int
dec
bound
xor
and
ds
es
mov
pop
add
add
and
pusha
jnp
or
cmp
and
xor
mov
push
fdivs
inc
es
cld
dec
mov
push
adc
jne
and
punpckhdq
mov
adc
and
ds
push
lret
nop
xchg
dec
push
adc
hlt
add
jle
cmpb
leave
loopne
cmpl
icebp
inc
add
adc
mov
inc
ret
test
pushf
mov
notl
push
pop
mov
xor
push
rclb
xor
push
incl
cmp
test
adc
mov
push
mov
sbb
cli
xchg
or
into
mov
push
rol
push
outsl
pop
cmpsl
mov
mov
test
lock
push
icebp
xorb
test
sbb
cmp
xlat
inc
pop
scas
inc
gs
jmp
rorb
icebp
mov
mov
aad
repnz
jb
dec
sbb
add
push
and
sbb
mov
roll
leave
sbb
xchg
mov
jo
xor
jbe
rep
push
popfw
mov
push
dec
rcll
inc
popf
aam
dec
repnz
sub
daa
pop
sbb
push
adcb
push
ss
notl
js
push
and
jmp
je
sub
cmpsb
out
sbb
jl
or
fstps
or
enter
add
dec
cmp
add
and
pop
popf
lea
mov
jb
jp
rclb
mov
xor
pushf
aam
jo
cmp
test
jnp
or
les
ljmp
lock
and
inc
or
sarl
aam
mov
aaa
xorb
mov
scas
sub
clc
fcoms
inc
adc
ficoml
dec
popf
xor
or
push
and
pop
or
adc
rorb
movsl
add
nop
or
adcl
add
push
push
sbb
push
mov
mov
and
and
ficompl
cmp
add
or
adc
mov
mov
sub
and
add
adc
xor
push
or
inc
aam
dec
arpl
mov
je
icebp
out
and
mov
inc
and
shrb
ljmp
add
or
clc
clc
pop
push
rcrb
or
cmp
cs
or
or
cmp
loopne
shlb
adc
ljmp
mov
push
push
imul
mov
mov
xchg
and
or
push
adc
push
and
xchg
scas
dec
stc
or
dec
xor
and
and
ret
sbb
or
push
xchg
add
and
lock
hlt
cli
movl
mov
loop
adc
mov
int3
js
inc
mov
sbb
insb
outsb
xchg
loope
stos
mov
push
icebp
xchg
add
fsts
mov
jmp
cs
sbb
cltd
jg
rorb
les
and
mov
add
cmc
pop
int
mulb
inc
ret
pop
sub
pop
add
pop
test
push
es
or
or
xchg
sbb
les
cmc
pop
or
les
clc
sbb
push
push
jbe
rclb
lods
fmuls
sbb
sbb
rcrb
test
mov
shlb
or
testb
mov
add
push
jb
stos
insb
xor
and
adc
loope
sbb
scas
mov
inc
loop
adc
pop
adc
mov
into
push
inc
aad
pop
mov
mov
sub
xchg
loope
scas
shlb
jb
jmp
shlb
mov
ret
rolb
jns
aam
pop
ret
xchg
movsl
jo
jo
je
lea
mov
outsl
bound
or
mov
add
call
xchg
scas
mov
ret
mov
pop
adc
xor
adc
jb
icebp
sbb
lock
xchg
gs
popa
fstl
pop
test
cmp
sub
fidivl
call
shr
add
add
loopne
mov
add
push
or
mov
ljmp
cld
push
scas
xchg
mov
mov
cmpsb
push
sbb
and
push
inc
mov
jo
push
pop
dec
or
and
xchg
xor
or
jmp
xor
dec
add
ss
outsb
call
add
mov
fistpl
prefetch
xor
xchg
sub
addr16
notl
add
mov
add
fistpll
lods
sub
xor
adc
mov
mov
mov
lods
push
push
mov
sub
adc
sub
loope
in
sbb
hlt
fs
xchg
notb
and
mov
xor
scas
push
mov
lds
push
xchg
bnd
inc
dec
sbb
lret
fidivrs
ret
inc
test
fsubrs
js
push
xor
sbb
ljmp
sbb
ljmp
or
pop
rolb
xlat
daa
dec
jbe
jb
push
clc
jo
pop
es
cmp
cmc
or
pop
sub
icebp
ret
push
jecxz
int
ror
shr
shrl
loope
push
mov
fwait
les
mov
clc
mov
jecxz
dec
mov
das
or
push
lret
mov
mov
fldcw
jo
push
xchg
mov
sbb
xchg
or
mov
imulb
jecxz
les
xchg
insb
call
or
jbe
loop
add
push
xorb
and
mov
sbb
movsb
push
ret
adc
pusha
movsl
push
in
mov
ss
loope
pop
cmpsl
push
ret
shl
mov
sbb
sbb
or
lret
mov
sub
call
xchg
cmp
jo
inc
lret
lock
jmp
and
dec
add
add
cmpb
je
out
popf
clc
xchg
sbb
rol
orl
adc
into
pop
int
cmp
pop
mov
pop
sbb
xor
mov
push
lods
sahf
xchg
mov
je
loope
jmp
dec
xchg
or
mov
cmp
xor
pop
fs
xor
mov
sahf
sbb
mov
mov
add
jmp
xor
jecxz
inc
adc
cmp
mov
push
lea
sbbl
dec
jp
imul
test
enter
mov
stos
outsl
jge
xchg
andl
out
lcall
push
dec
push
or
add
pop
jp
mov
xchg
mov
movsl
push
mov
mov
jo
adc
or
pop
mov
addps
jmp
pop
leave
test
mov
je
push
inc
jl
or
xor
jbe
ret
mov
dec
add
or
popf
bound
fsts
cmpsl
daa
or
add
jl
arpl
or
mov
pusha
sub
negb
xchg
out
daa
cmp
cmpsl
xchg
daa
jo
cltd
xchg
dec
adc
add
roll
outsl
fwait
rolb
loopne
dec
mov
imul
inc
xchg
mov
xchg
xor
ret
mov
or
xchg
mov
iret
cwtl
xchg
mov
aaa
fucom
enter
sbb
xor
bound
mov
xchg
gs
xlat
mov
sahf
adc
mov
test
xchg
mov
sar
sbb
aam
js
faddp
mov
scas
in
divl
fcomps
or
mov
push
mov
pop
pop
push
es
mov
cmpsl
push
inc
call
or
adc
andb
sub
scas
mov
or
orb
movsl
test
cmpsl
ret
xor
lods
pop
dec
pop
dec
pusha
rcll
lahf
in
dec
jns
adc
aam
pop
pop
loop
or
mov
adc
adc
add
and
pop
nop
enter
push
or
sbbl
sbb
add
sub
daa
add
add
je
adc
cmp
mov
or
repnz
outsl
shlb
pop
sbb
dec
loope
adc
cmp
jp
xor
push
mov
xchg
pop
out
and
pop
push
mov
daa
mov
or
addr16
sar
add
adc
cli
stos
or
jne
pusha
push
lret
loop
inc
add
inc
and
push
mov
popa
test
test
jg
add
in
std
into
xor
fldenv
jo
gs
mov
call
add
jecxz
adc
js
xchg
inc
nop
add
xchg
shl
es
cmp
pop
cltd
mov
sub
pop
pop
pop
rorb
les
pop
push
xor
es
adcb
pusha
mov
popa
sbb
add
jmp
push
jl
mov
lahf
adc
bndstx
mov
sbb
pop
dec
push
insl
jmp
or
cmp
cmpsb
hlt
insl
mov
xor
dec
mov
push
push
loopne
push
inc
in
inc
fiadds
sarb
sahf
add
adc
loope
ret
lods
push
out
gs
addr16
dec
or
orl
add
mov
inc
loopne
pop
jge
push
push
cmp
imul
push
ret
inc
push
or
or
or
hlt
dec
inc
or
inc
push
cmp
rcrb
cmp
sbb
xchg
ljmp
cld
xchg
jecxz
cli
xor
lahf
xor
gs
bound
gs
in
hlt
cli
adc
je
xor
mov
add
lods
test
bnd
hlt
sub
dec
lock
xor
out
and
sbb
jb
cmp
insb
inc
loopne
inc
and
adc
repz
adc
mov
jg
sbb
insl
idivl
call
add
ret
sbb
adc
jo
xchg
movsb
mov
sbb
daa
nop
pushf
test
jle
xor
scas
and
nop
lcall
dec
cwtl
inc
ret
clc
xor
adc
stc
xchg
les
cmpl
pop
loopne
sub
adc
sbbb
insl
clc
cltd
test
push
pop
dec
or
cwtl
inc
inc
clc
xchg
lods
adc
fmulp
arpl
add
or
pop
mov
xchg
push
dec
ljmp
pop
push
or
pop
lcall
dec
or
daa
mov
scas
xor
mov
andb
add
in
loopne
mov
push
inc
adc
adc
and
lahf
sbb
push
fdivs
add
xorb
add
shlb
and
mov
lods
xchg
mov
fimull
pop
mov
sub
cli
or
jl
hlt
add
xorl
rorl
rcrb
and
xchg
icebp
adcb
add
test
pop
movb
adc
inc
cmp
mov
dec
lods
clc
xchg
nop
sbb
dec
xchg
sbb
jle
pop
dec
cmp
pop
dec
xlat
add
sbb
adc
inc
sbb
test
add
xorb
pop
sbb
mov
and
mov
jo
int
sbb
iret
les
test
mov
adc
mov
dec
out
test
push
inc
loope
add
jecxz
sub
outsl
cmp
call
mov
push
pop
test
xchg
mov
cmp
pop
into
or
mov
fimull
sub
mov
jo
mov
add
mov
mov
adc
sub
aaa
jo
cmp
mov
aad
sbb
test
pop
adc
movsl
add
xchg
xchg
mov
rolb
inc
test
loopne,pn
xor
inc
mov
pop
popf
jp
out
in
hlt
cmp
fadds
jp
lret
out
push
add
jne
inc
les
sbb
fmuls
sub
out
adc
sarb
rcl
movsb
ret
add
popf
cs
gs
cmpsb
dec
inc
ljmp
pop
sahf
sub
aaa
test
imul
inc
cwtl
jo
nop
mov
dec
cmpsb
dec
scas
mov
aaa
or
sbb
inc
daa
loopne
test
sbb
jp
mov
push
and
pop
jmp
mov
push
xchg
mov
stos
pop
addr16
int3
call
hlt
xlat
mov
js
jle
les
mov
add
sbb
mov
add
movsl
scas
pop
push
iret
les
call
cs
xchg
stc
ds
addl
and
add
mov
or
xchg
shrb
mov
in
clc
and
inc
jmp
rcrb
pusha
ljmp
sub
bswap
jno
inc
mov
push
dec
add
pop
jecxz
xor
cmp
nop
inc
data16
or
test
or
add
outsb
mov
pop
sub
or
adc
fistpl
pop
or
notl
test
cmp
mov
andb
push
stos
xchg
ss
add
push
push
pushf
add
add
inc
dec
sbb
xlat
push
mov
dec
fs
add
addb
lock
aas
sub
xor
leave
jo
sbb
xchg
aad
mov
jl
pusha
popa
sbb
cs
ja
xchg
push
push
stos
push
inc
add
adc
adc
test
jo
test
subps
sub
push
cwtl
sarb
mov
pusha
and
cltd
cli
or
cmp
test
arpl
popa
es
xchg
cmp
lock
push
xor
xchg
and
leave
popa
jl
sbb
push
cmpsb
sbb
add
inc
push
mov
dec
sbb
aaa
jl
xor
xchg
call
test
mov
pop
ljmp
fidivl
jecxz
push
or
les
ret
fdivl
popf
aam
inc
adc
test
sbb
mov
sbb
aam
cmp
sub
jbe
add
mov
icebp
xchg
pop
mov
dec
loope
adc
aaa
and
cli
in
mov
dec
jge
adc
push
fidivrs
es
test
adc
sub
inc
sbb
cmp
lret
and
adc
js
push
sub
cmpsb
ret
xor
sbb
cmp
push
or
cmc
push
fstps
test
arpl
rol
pop
dec
pushf
cs
lret
inc
add
and
xor
jns
in
add
fiaddl
xor
mov
dec
xor
or
fcmovb
rorl
jp
sbb
cltd
mov
mov
ss
mov
add
sbb
push
fbstp
cmp
lret
adc
pop
xor
xor
es
test
sbb
xchg
flds
adc
mov
mov
mov
popa
add
clc
xor
cmc
cmpsl
dec
pop
mov
inc
jb
sarl
test
push
lds
adc
and
imul
jp
lock
or
xchg
frstor
jp
inc
mov
bound
cmovge
push
das
pop
mov
and
or
sub
ret
push
bound
xor
pop
or
enter
dec
dec
pop
inc
and
push
dec
push
inc
je
cli
push
enter
adc
mov
jle
jmp
test
aaa
mov
pushf
add
or
sbb
xor
and
or
adc
push
sub
daa
mov
push
add
ror
add
aam
sbb
out
inc
jmp
add
leave
cli
pop
mov
fbld
sahf
inc
adc
rol
jp
sub
and
adc
dec
adc
cmp
dec
and
shlb
dec
inc
bound
leave
divb
add
mov
adc
mov
repnz
enter
lods
xchg
scas
or
lock
stos
xor
inc
call
push
and
bound
inc
daa
loopne
arpl
push
jne
cmp
insb
loopne
les
xchg
cmp
cmp
and
out
xchg
mov
lock
sub
push
subl
clc
push
mov
inc
loop
icebp
push
and
cs
ret
inc
xchg
or
imul
push
push
mov
inc
fs
add
push
ss
enter
sbb
ret
add
loop
or
rcl
ljmp
or
or
stos
pop
push
jnp
das
add
popa
and
js
rcrl
mov
jecxz
xor
add
adc
leave
pop
jp
xchg
pop
xor
pop
inc
mov
or
adcb
test
add
data16
insl
lods
scas
jno
div
ss
dec
mov
sbb
xchg
add
or
leave
jo
push
or
sbb
sbb
sti
push
push
mov
dec
adc
dec
addb
xor
repnz
std
ja
mov
pop
fs
lock
pusha
pusha
imul
or
push
ret
adc
xchg
add
xchg
add
loop
or
loopne
push
and
and
push
push
out
add
adc
outsb
dec
adc
inc
adc
push
aad
js
cmp
xor
lret
push
or
stos
adc
dec
push
rolb
cmp
pop
sbb
sbb
cmp
push
xor
push
sbb
and
pop
add
icebp
add
fstpl
jbe
sub
loop
stc
push
add
xchg
xchg
test
fisttpll
add
xchg
and
dec
rcll
sbb
adc
daa
xchg
rcl
mov
mov
dec
xchg
stos
je
jp
test
sbb
lahf
pop
lret
loopne
jmp
xor
adc
addr16
mov
jae
jle
add
and
ds
inc
les
and
push
mov
popa
mov
push
inc
sub
xchg
in
cmp
movsb
xchg
add
mov
adc
jo
push
and
pavgw
addl
pop
mov
push
lock
ss
push
lods
imul
into
and
jnp
mov
fistps
pop
nop
enter
nop
dec
and
lods
fs
xor
pop
cmpsl
sbb
mov
adc
push
sbb
xlat
push
cli
add
or
cmp
aad
sbb
mov
leave
adc
jb
add
dec
xchg
jo
sbb
add
dec
push
cs
push
or
or
cmp
rolb
mov
sbb
mov
in
jg
das
or
mov
mov
cmpsb
cmp
xor
dec
mov
rcll
xorb
leave
jmp
dec
test
lret
xchg
sub
dec
sub
add
rcr
xchg
adc
or
out
add
sbb
add
adc
rolb
mov
mov
pop
xchg
jmp
loop
adc
pop
leave
inc
and
xchg
pop
push
jo
es
mov
or
or
jo
stos
lock
pop
xchg
lcall
shlb
nop
push
lds
cmp
lods
and
add
aam
and
dec
jne
sbb
aaa
outsl
dec
pop
test
clc
ret
push
inc
push
mov
mov
adc
ret
cmc
shrl
mov
sub
mov
pop
pushf
out
push
pop
call
or
pop
ljmp
pop
dec
mov
mov
cwtl
xor
fdivrs
xchg
les
or
and
mov
or
inc
addr16
outsb
sub
or
int3
es
shr
insl
sub
aaa
mov
cmpsl
mov
inc
ret
loop
lea
mov
and
dec
mov
insb
popf
push
test
or
and
lcall
je
sub
push
into
andb
nop
xchg
rep
test
adc
or
sbb
scas
ret
popa
add
xor
or
stos
pop
adc
cmc
in
je
cmpsl
add
test
bnd
xor
mov
inc
out
insb
and
pop
push
or
adc
test
push
or
jbe
jne
pushf
xor
push
rorb
jo
fs
add
mov
lods
lods
inc
mov
std
adc
inc
mul
pop
xor
push
add
ljmp
mov
dec
mov
fs
pop
adc
pop
test
xor
repnz
cwtl
js
loope
addb
or
test
sbb
icebp
in
shll
icebp
cld
xchg
nop
dec
out
in
inc
push
rcrb
fstpt
call
or
ljmp
arpl
aam
dec
jb
loopne
dec
ret
jp
xorl
adc
clc
add
rol
mov
or
cld
jbe
in
and
sbb
mov
adc
or
das
stos
inc
dec
add
mov
pop
mov
pushf
and
mov
iret
and
xchg
dec
or
cmp
jo
mov
incl
test
and
push
adc
push
push
dec
push
cmp
dec
push
pop
xor
mov
sub
push
fnstcw
rorl
or
sbb
xor
lahf
pop
rolb
rcr
fsubs
daa
push
pusha
popa
cmp
inc
or
popa
fnsave
nop
xor
loop
cli
or
enter
jecxz
arpl
notb
pop
clc
sbb
out
xchg
jo
or
int3
add
fidivrs
and
push
int3
adc
iret
sub
cmp
add
rcrl
mov
cmp
and
cmp
inc
sub
mov
gs
cmp
mov
sub
xor
add
mov
xchg
shrb
mul
fs
push
xchg
inc
push
or
inc
mov
add
rclb
dec
xor
inc
add
icebp
nop
les
leave
jmp
mov
add
aad
jge
and
sbbb
adc
inc
xor
aam
sub
mov
fcmovb
arpl
push
sub
pop
mov
inc
sub
or
arpl
dec
je
insb
shlb
mov
ret
enter
cmc
nop
sbb
push
adc
daa
adc
sub
std
ret
or
nop
imul
cli
rclb
xchg
mov
imulb
pushf
aam
push
jae
push
xor
sub
mov
pop
sbb
je
rcll
push
pop
xchg
or
cltd
aam
shrb
xchg
push
xchg
cmpsl
mov
dec
aaa
jo
ret
rcl
mov
lock
outsb
sub
jge
lret
mov
sahf
mov
dec
movsl
aam
pminub
jo
sub
aaa
push
adc
mov
sbb
lock
fstpt
lahf
and
js
push
insl
movsl
xchg
or
xchg
or
cmp
inc
ss
mov
ljmp
push
mov
loop
hlt
or
popa
inc
lea
ljmp
adc
xlat
add
stos
cmpsl
sbb
mov
addl
test
mov
ja
movsl
mov
add
adc
mov
rolb
pop
jne
adc
inc
loop
pop
adcl
or
les
es
adc
push
data16
dec
pop
out
jb
add
es
adc
insl
sbb
sub
add
xchg
jo
sub
and
jne
inc
ffreep
int3
or
das
adc
adc
sub
adc
and
mov
push
mov
and
xlat
mov
sbb
sbb
sbb
jmp
pop
inc
imul
popa
jno
inc
imul
sbb
xchg
add
add
xor
lea
adc
dec
into
orb
sbb
repnz
pop
or
jle
movsb
pushf
xchg
jb
addb
pop
lgs
sub
dec
lods
add
cmpb
xchg
push
negl
inc
lods
sub
mov
addl
cli
push
dec
fadd
adc
paddd
xor
sub
cs
adc
adc
sbbb
sbb
dec
hlt
mov
cmp
outsb
cwtl
ret
xor
ret
sbb
jp
adc
push
cs
or
shlb
out
faddl
icebp
rcll
xor
mov
adc
push
sahf
rorl
cmp
xor
test
xor
imul
data16
movb
xchg
mov
adc
aam
sub
les
test
ret
dec
xor
sub
outsb
jp
mov
push
add
call
shrl
and
push
jno
inc
lret
and
pop
mov
sbb
mov
dec
xor
add
pop
inc
push
test
mov
mov
push
pop
imul
lea
mov
lock
bound
xchg
scas
not
ljmp
iret
es
sub
or
gs
and
test
push
aaa
andl
sbb
inc
cli
cli
mov
adc
push
cmp
inc
mov
pop
aaa
mov
inc
pop
mov
pop
xchg
fnstcw
push
and
out
test
mov
cwtl
push
xchg
jp
shlb
dec
or
inc
nop
in
or
push
je
das
lret
add
push
pusha
or
ss
bound
cmp
and
cmp
cwtl
adc
dec
stos
adc
adc
xor
pop
or
mov
fs
adc
push
mov
sub
dec
dec
sahf
cmc
dec
test
and
testl
insb
ss
ret
inc
andb
adc
push
ret
jnp
in
cli
push
push
inc
inc
add
add
and
dec
or
push
shlb
jnp
jle
adc
xor
adc
or
lcall
dec
mov
icebp
inc
ret
push
daa
xchg
xor
fadd
or
sarl
lock
cmc
add
mov
cmp
mov
mov
cltd
push
movsl
nop
mov
push
rcrl
lcall
jle
fldcw
inc
push
inc
mov
out
inc
out
xchg
leave
call
inc
int
jmp
rcrb
jno
jno
xor
in
mov
cld
sbb
sbb
sbb
sti
lcall
push
int
or
sahf
add
es
dec
iret
inc
icebp
int
jl
test
push
sbb
mov
sbb
xor
dec
shlb
push
test
mov
adc
pushf
jp
es
cmp
repnz
add
mov
mov
xor
pop
dec
jg
leave
sub
cmp
dec
rol
or
dec
mov
sbb
inc
loopne
add
ror
mov
shrb
test
fsubl
rorl
pop
add
and
fcoml
xor
push
icebp
rcrl
and
mov
sub
xor
jno
and
jp
je
dec
adc
dec
add
push
enter
xor
ljmp
inc
jg
inc
dec
or
and
dec
sbb
jb
add
mov
mov
lds
pop
cmpsl
pop
cmc
and
fsubrl
xor
js
adc
les
or
add
jne
insb
fs
arpl
cmp
sahf
mov
xchg
xor
adc
lret
je
mov
dec
lea
xorb
dec
and
cmp
rolb
jo
addb
push
rol
sub
rclb
fsubl
pop
jnp
pop
loopne
push
add
or
test
mov
cwtl
or
and
inc
jne
sub
inc
bound
gs
into
jo
sbb
sbb
rcrb
outsl
mov
xchg
movsb
jbe
mulb
mov
cmp
jo
mov
add
aam
sarl
xor
stc
fs
rcll
xor
mov
and
or
gs
add
push
bound
ror
ljmp
imul
rcrb
dec
cmp
icebp
adc
push
inc
inc
jge
dec
add
mov
test
mov
rol
outsb
fwait
dec
push
mov
mov
or
sbb
push
jo
adc
popa
shl
sub
xchg
or
jmp
cmpsl
fdivrs
sbb
sbb
xor
dec
inc
test
hlt
sub
hlt
or
sub
add
roll
test
sbb
leave
test
das
loope
xchg
out
push
lock
sbb
bnd
cmp
sbb
push
orb
and
pop
into
jo
mulb
xor
movsl
orl
mov
daa
ljmp
lret
pop
jecxz
sub
dec
jecxz
cmp
int3
and
mov
and
mov
loopne
sbb
iret
sub
xchg
dec
loop
int
loopne
jo
sub
into
adc
jo
popf
mov
out
sbb
les
inc
xchg
and
sbb
mov
adc
adcl
cmp
aam
adc
ss
add
add
pop
cs
into
rorb
sub
in
cmp
shl
adc
sbb
push
loope
xchg
lret
and
cmc
out
xor
insb
add
inc
cmpsl
out
adc
jl
rorl
push
syscall
insb
imul
pop
sahf
mov
hlt
dec
mov
rcrl
xor
imul
xchg
inc
pop
xchg
ret
jae
iret
fldl
mov
addb
movsb
je
cmp
push
ds
inc
cmp
mov
lock
dec
or
data16
add
fsts
sahf
sub
sbb
push
adc
mov
lea
mov
cmp
test
popa
jb
mov
hlt
loope
lret
mov
jns
mov
enter
jb
or
cmc
sbb
sub
jge
inc
sbb
xchg
and
jecxz
mov
push
mov
hlt
inc
inc
mov
inc
mov
mov
stos
rolb
cmovns
xchg
cmp
push
lcall
scas
out
push
ret
jbe
rcl
lock
or
add
jo
pop
xchg
bound
ja
js
or
mov
dec
adc
into
pop
inc
inc
shlb
or
sbb
mov
sbb
fnsave
dec
cld
sbb
enter
daa
add
add
cld
pop
add
mov
push
xor
test
ret
mov
add
in
adc
xchg
sbb
mov
imul
scas
mov
pusha
and
fmulp
xor
push
push
aam
xor
xor
mov
pop
sahf
lret
sbb
rcrb
pop
data16
add
xor
pop
les
mov
dec
xor
imul
add
sub
adc
pop
ffreep
dec
movsb
cmp
and
into
add
pop
pushf
sbb
pop
dec
pop
rorb
ret
cltd
js
xorl
adc
inc
scas
inc
mov
bound
mov
cmp
cmp
adc
dec
dec
add
push
icebp
stos
shlb
add
shlb
aam
ja
add
mov
push
js
push
cmp
loope
movsb
out
ret
addb
gs
idiv
adc
rcrb
pop
adc
xchg
sub
xchg
xor
mov
push
pop
fwait
jl
dec
mov
enter
add
adcb
or
mov
inc
dec
push
xor
icebp
loop
add
movb
std
mov
cmp
lods
mov
repnz
adc
sbb
or
imul
push
adc
mov
dec
rcrb
push
adc
jmp
cld
and
outsb
sbb
fstl
push
and
dec
cmp
push
and
jle
outsb
cld
inc
mov
into
cmp
sbb
lcall
or
sub
dec
sub
pop
outsb
popa
arpl
push
jmp
dec
outsl
lret
cmc
insl
popa
adc
lock
por
add
sbb
mov
lock
pop
aam
sbbl
cli
cltd
cs
popf
or
pop
inc
call
xor
push
pop
inc
pop
xchg
neg
sbb
or
loop
sbb
cmp
cmp
or
pop
daa
sub
jne
js
aas
incb
js
or
cld
and
pop
or
sbb
push
mov
hlt
cmp
and
loop
and
aam
mov
jge
dec
mov
push
bound
lret
mov
imulb
push
and
sbb
sub
inc
ljmp
push
pop
imul
add
jmp
mov
push
mov
mov
pop
sarb
outsl
adc
or
gs
sbb
mov
bound
inc
and
xor
dec
in
arpl
xchg
lret
inc
push
inc
mov
or
nop
scas
mov
sbb
fmulp
das
sub
call
aaa
mov
lods
push
push
rcl
xchg
hlt
fst
idivb
int3
lret
addr16
sub
pop
insl
insb
pusha
sub
adc
pusha
adc
pop
mulps
aam
fisubrs
mov
inc
je
shrb
gs
loopne
push
test
jno
add
insl
and
push
sub
sub
add
lret
and
add
sub
push
push
insb
sub
and
jle
xchg
add
mov
mov
inc
sbb
or
lea
push
inc
mov
sub
adcb
out
or
imul
adc
and
test
mov
mov
add
push
pop
andl
scas
push
pop
lods
jo
pusha
sub
xor
fdivrs
inc
mov
insb
test
xchg
shl
retw
test
test
adcb
lods
xchg
ret
in
aam
cmp
test
incb
fcomps
js
cwtl
mov
or
add
sbb
ret
sbb
pop
in
and
jmp
add
inc
mov
or
mov
stos
mov
push
or
fadds
xor
mov
jp
sahf
adcb
mov
sbb
gs
add
andl
mov
fdiv
and
inc
sbb
mov
arpl
pusha
sbb
sbb
enter
xchg
test
pop
xor
pop
xor
sbb
mov
mov
sti
aam
add
icebp
jnp
rcr
cli
mov
inc
xor
cmp
hlt
rol
iret
orb
lret
pop
orb
dec
inc
xchg
adc
mov
hlt
je
jbe
xchg
cmpb
and
nop
cmp
or
inc
dec
adc
cmp
imul
sbb
cld
push
sub
mov
adc
or
push
jecxz
testb
xor
mov
xchg
add
int
insl
ljmp
xor
stos
ds
dec
bound
bound
cmpsl
xor
scas
out
shll
or
outsl
adc
pop
jb
adcl
inc
mov
mov
lock
adc
or
sbb
add
push
add
adc
sbb
mov
icebp
cs
lcall
popa
jne
add
sbb
clc
test
sbb
daa
lcall
xor
outsb
lret
mov
sbb
dec
leave
test
cmpb
mov
add
leave
sbb
add
sahf
sub
mov
mov
movsl
ret
jmp
outsl
cmp
push
add
inc
mov
faddl
dec
xorl
ret
bound
ljmp
or
inc
cmp
orb
xor
inc
rcl
dec
shrb
ret
and
push
and
loope
pop
mov
aad
xchg
fmull
mov
push
and
push
test
xor
xor
xor
ss
xor
sub
iret
adc
dec
test
roll
sbb
inc
cmp
int3
lock
pop
adc
outsb
push
fwait
outsb
push
push
loop
pushf
in
sub
shr
sbbb
out
adc
mov
inc
dec
sbb
dec
bound
xor
in
movsl
mov
cwtl
push
adc
das
add
imul
aam
es
push
dec
or
jmp
lret
pop
das
push
lahf
xchg
cmp
ss
add
xor
xor
sbb
adc
cmpsb
leave
push
or
add
sbb
cltd
lret
sbb
sbb
js
notb
roll
lea
mov
cltd
add
pop
fldenv
xchg
rcl
outsl
lods
dec
jl
sbb
or
or
adcb
out
add
das
mov
repnz
mov
inc
cmp
test
hlt
popf
cmp
test
sahf
and
ret
add
push
push
enter
xor
mov
sbb
xor
inc
add
ficomps
adc
jp
ja
xlat
adcb
adc
add
pop
ror
xor
or
inc
ljmp
sub
outsb
xor
and
inc
jb
fsubrl
lock
mov
fdivr
add
pop
jb
cmp
pushf
lahf
subl
or
xor
mov
xor
cwtl
pop
cmpsb
cmpsb
push
clc
push
adc
push
xchg
jns
lcall
int3
cmp
sbb
rorb
mov
pop
fs
in
push
imul
mov
rclb
sub
mov
cmp
inc
jmp
sbb
mov
add
and
test
mov
sub
xchg
or
fmuls
or
pop
adc
popl
mov
rolb
enter
inc
and
inc
mov
inc
pop
cwtl
jns
push
mov
dec
pusha
inc
mov
add
or
jb
jo
js
test
imul
rcl
push
mov
sbb
mov
add
adc
mov
inc
push
sbb
jns
mov
push
inc
nop
lods
mov
and
cmp
xchg
shr
enter
leave
mov
or
xchg
jne
sub
inc
add
cmp
rol
and
xchg
xorb
adc
xchg
cwtl
push
push
rorb
pop
movsl
les
mov
xor
shl
ss
test
pop
xor
pop
es
mov
arpl
adc
mov
push
push
and
fcmovbe
and
jb
cmp
loop
call
xor
push
dec
cli
adc
sti
test
clc
sub
pop
shlb
xor
mov
and
or
dec
push
xchg
fmull
sbb
mov
loopne
pop
imul
std
cltd
sbb
rorl
cmc
adc
rcll
shlb
xchg
inc
add
cmc
jmp
test
or
mov
pop
pop
sbb
enter
mov
or
sbb
aam
mov
mov
or
in
sar
add
mov
push
cmp
inc
lar
adc
cmp
rol
gs
cmp
push
call
popf
pop
add
pop
es
add
pop
fidivl
outsb
sub
andb
mov
mov
push
loope
mov
scas
das
sbb
sbb
cld
rorb
and
fucomip
adc
push
and
xor
fwait
inc
mov
xor
dec
push
and
dec
insb
out
insb
add
jo
jbe
adc
test
mov
or
mov
xor
xor
inc
bswap
adc
mov
loopne
add
xor
outsb
lcall
jnp,pn
out
inc
addps
pop
lock
shlb
or
rclb
inc
lret
inc
fisttps
and
cmp
mov
pop
sbbb
fiadds
or
or
pop
jae
pushf
arpl
jno
pop
mov
inc
lods
add
or
sbb
mov
sahf
fiadds
inc
xor
cmp
and
les
pop
sbb
adc
sbb
or
sub
out
jle
popf
test
mov
test
jge
ljmp
add
into
xchg
sbb
lahf
dec
jecxz
pusha
jecxz
mov
push
in
or
orb
ret
fwait
or
sbb
sbb
test
xor
xchg
push
add
nop
lea
nop
push
int
inc
sub
and
push
mov
data16
rorl
and
lret
orb
and
mov
adcb
pop
pusha
add
lock
orb
pop
fsubr
hlt
rolb
xchg
dec
movsl
and
and
sub
or
out
xchg
mov
cmpb
inc
shll
push
or
call
add
fmulp
cmpsl
clc
dec
mov
into
sbb
xor
lahf
jo
xchg
loope
push
jge
frstor
rcl
lret
adc
test
or
add
mov
addr16
cld
ret
imulb
scas
mov
sub
push
mov
je
adc
add
jne
sahf
mov
add
pop
testb
xchg
or
pop
push
add
out
xor
adc
mov
and
or
inc
or
stc
bound
imul
fst
push
xchg
loop
push
pop
cli
sahf
mov
xchg
add
out
ljmp
pop
push
xor
mov
scas
and
mov
dec
sbb
xchg
and
cmp
stos
in
add
scas
dec
or
cmp
hlt
sbbl
xchg
push
pop
adc
sub
lds
pop
lret
push
test
nop
or
or
mov
sbb
dec
movsb
xchg
bnd
xchg
in
sbb
xor
and
mov
xor
add
adc
mov
push
nop
mov
push
loope
xor
outsb
test
rcrb
or
ljmp
hlt
xor
sub
adc
cli
or
imul
adc
cmp
add
pop
fisubrl
sbb
mov
xlat
nop
and
mov
lea
fnsave
mov
mov
sbb
rcrb
movsb
es
mov
push
and
sub
adc
cwtl
pop
into
mov
and
pop
testb
dec
jg
sbbb
push
dec
add
push
cmpsl
push
or
xor
inc
adc
cwtl
mov
or
dec
data16
sbb
sbb
nop
push
das
cmp
mov
roll
test
xor
mov
loopne
adc
fidivl
or
dec
sbb
lods
fwait
ja
push
add
mov
cmp
jo
dec
and
or
jle
pop
add
ret
je
test
aad
jg
js
cmp
movsb
add
imul
inc
loope
popf
popf
ret
bound
mov
or
sarb
ljmp
mov
or
adc
dec
sbb
sti
cs
ss
daa
xchg
mov
cmc
out
shrb
jg
dec
add
sub
popf
inc
adc
xchg
punpckldq
add
xchg
shll
addb
xor
mov
push
les
sbb
add
aaa
adc
pop
dec
fisubrl
add
jne
cmp
ret
dec
pop
dec
adc
or
mov
cmp
cmp
fiadds
lods
das
or
pop
dec
jb
loop
push
add
js
and
or
in
pop
daa
jmp
ds
testb
mov
or
scas
out
shrb
es
add
jge
push
into
mov
repnz
cwtl
inc
push
ret
or
lret
daa
int3
or
add
mov
fidivl
mov
inc
js
shl
mov
pop
add
inc
inc
lcall
loopne
les
jb
adc
imul
sbb
adc
or
pop
add
inc
cmp
mov
cmp
xor
or
add
mov
mov
sub
cwtl
push
cmpb
adc
and
movsb
mov
nop
jo
add
sbb
ds
repz
cmp
add
stos
test
inc
mov
sbb
add
xor
cmp
adc
inc
rcrb
mov
addl
sub
in
clc
adc
dec
adc
xchg
loopne
jmp
cs
and
add
test
jnp
scas
xchg
lea
cmp
or
iret
pop
xchg
xorb
add
mov
inc
jl
adc
pop
adc
cmp
clc
punpckldq
hlt
imul
adc
push
push
push
dec
adc
mov
sbbb
mov
ret
subl
or
sbb
push
push
cwtl
or
inc
mov
cwtl
inc
shrb
rol
mov
sbb
shll
stos
aam
clc
popa
or
in
enter
cmp
push
and
repz
pop
mov
mov
or
and
test
repz
push
cmp
adc
sbb
sbb
xchg
leave
add
cmp
sbb
or
mov
add
and
inc
pop
cmp
sbb
mov
pop
xchg
push
mov
rcrb
fidivs
inc
loope
jecxz
jbe
and
hlt
subl
inc
data16
mov
out
add
les
xchg
movsl
test
push
pop
fistpl
cmpsl
hlt
test
and
add
xchg
jb
mov
dec
push
adcb
js
adc
pop
adc
or
add
inc
iret
xor
outsl
pop
push
sahf
iret
sbb
push
ret
push
sbb
jecxz
pop
mov
and
and
dec
clc
std
dec
add
jbe
xor
mov
sbb
test
cli
adc
inc
or
and
mov
mov
xchg
sbb
dec
add
jmp
xchg
adc
cmp
push
test
or
mov
xchg
xchg
or
sbb
sbb
out
leave
icebp
mov
xor
cs
xchg
das
in
sti
ret
mov
sbb
inc
loope
inc
imul
xor
cmp
jno
add
push
mov
movsb
addr16
and
pop
cmp
shl
adc
cmp
sub
pop
cmp
and
sub
jbe
and
test
rolb
or
adc
inc
mov
int3
adc
mov
es
xor
push
popf
cmp
dec
dec
or
scas
add
les
and
pop
add
push
les
sbb
xor
sbb
adcb
inc
sbb
and
mov
pop
cmp
rorb
cmp
mov
add
jle
cs
adcb
cmp
mov
scas
add
sub
adc
sbbl
and
mov
mov
loope
jo
test
jae
sbb
pushf
sub
xchg
jno
xor
mov
jp
pop
mov
push
sub
mov
mov
xchg
and
push
pop
pop
cld
dec
mov
pushf
jg
out
hlt
pop
dec
add
js
pop
inc
js
jmp
mov
jmp
inc
push
test
movsl
lret
sbb
mov
shrl
xor
movsb
ror
and
and
js
and
lods
or
mov
je
sbb
dec
cmpsb
xchg
xor
push
aam
cmpl
mov
mov
jge
daa
jp
add
and
inc
add
push
jg
mov
bound
ret
cmp
inc
xchg
inc
and
loopne
and
mov
mov
or
push
pop
adc
ljmp
push
adc
gs
testl
and
sub
and
outsb
call
jbe
loopne
clc
add
and
cmp
xor
xchg
test
cmp
mov
cmp
ja
cbtw
push
mov
pop
add
add
and
add
arpl
and
mov
popl
insb
dec
mov
ljmp
adc
add
mov
arpl
and
jno
and
neg
nop
push
rolb
mov
shl
pop
push
xor
gs
lret
sub
and
negb
push
inc
xor
mov
lock
dec
loope
aaa
les
inc
add
sub
sbb
aaa
dec
pop
pop
xchg
lods
pusha
mov
data16
or
mov
and
or
decb
adcl
nop
pusha
push
push
stc
xchg
pop
fadds
movsb
adc
xchg
lock
loopne
sbb
fcoms
cmpb
test
out
push
out
enter
js
xchg
or
adc
push
test
jnp
xchg
push
mov
les
or
xchg
out
dec
and
push
movsl
and
xor
das
cmp
fdivs
aaa
movsl
dec
dec
popa
pop
int3
jns
mov
and
cmp
adc
loope
rorb
or
sbb
add
add
outsb
sub
or
or
lret
ret
jl
sbb
lahf
inc
push
lods
imul
stos
mov
push
mov
inc
pop
gs
pop
add
xor
sbb
sub
mov
lock
popa
xor
cmp
movsb
pushf
jo
push
test
add
addb
stc
add
add
adc
popa
pop
rol
cmp
xchg
stos
xchg
adc
cmp
js
cmp
xchg
mov
or
mov
mov
in
xchg
fistl
add
insb
jecxz
sbb
push
shr
arpl
es
test
out
inc
add
mov
insb
mov
sbb
cld
notb
imul
lds
mov
dec
sub
enter
pop
sbb
xorb
icebp
inc
jb
in
enter
cmp
int3
sbb
ret
popf
into
adc
mov
sbb
out
push
inc
cmp
bound
in
xchg
sub
movsl
xchg
or
adc
mov
jecxz
inc
mov
in
or
push
test
mov
mov
jb
dec
or
add
adc
addb
and
dec
and
bound
mov
xrelease
xchg
xor
mov
test
inc
insb
mov
mov
xchg
mov
in
push
adc
xor
mov
xor
add
mov
test
or
mov
sahf
fnsave
notb
or
adc
or
cs
xchg
mov
xor
mov
xor
fiadds
ljmp
ret
mov
movsl
outsl
cmp
pop
scas
pop
sbb
mov
ljmp
push
adc
popa
or
push
cmp
mov
lock
or
pop
es
jno
gs
rcrb
imul
test
imul
dec
mov
jne
push
mov
or
stos
hlt
adc
or
mov
or
xchg
mov
hlt
test
lock
push
push
push
test
shl
lock
jne
out
cmpsb
or
dec
or
inc
outsl
subl
cmp
inc
add
jmp
or
sahf
inc
inc
mov
sbb
push
add
orl
into
mov
or
rcll
nop
pop
shrl
inc
inc
movsb
mov
and
jo
mov
pusha
mov
bound
mov
mov
sbb
aas
repz
push
psubusw
xchg
or
and
pop
cltd
icebp
repz
jb
push
push
xchg
cmp
adc
jne
into
fsubrs
pop
sbb
push
or
sbb
jne
test
mov
nop
outsb
mov
jg
and
xlat
imul
push
subl
lock
leave
push
push
enter
add
pop
pop
xchg
sahf
es
push
gs
sub
add
insl
sub
data16
adc
add
push
dec
push
push
pusha
push
pop
les
sbb
imul
xor
mov
lea
cmp
sbb
pop
jp
movsb
dec
mov
sahf
js
lret
add
popa
ja
movsl
pop
lret
jp
cli
jge
dec
or
xchg
out
lcall
inc
cmp
jbe
clc
mov
mov
jnp
pop
ret
gs
jl
jo
inc
inc
lods
dec
ret
fistpl
ret
add
ja
push
and
xorb
or
sarb
cli
ret
lret
push
and
or
push
loopne
cmpsl
xchg
pop
xor
sbbl
or
addl
adc
shl
dec
push
xchg
clc
sbb
sbb
sub
or
cmp
inc
fisubrl
or
bound
or
or
sub
jecxz
xchg
es
xchg
or
mov
jmp
punpckhbw
fcoml
xor
fiadds
mov
insl
rorl
xchg
add
sbb
out
push
mov
mov
and
pop
cmpsb
out
jecxz
push
insl
adc
jmp
jg
jg
and
xor
lds
mov
daa
push
or
pop
lar
pop
add
aam
test
add
add
lds
push
cmp
orb
pop
js
test
lea
js
jmp
push
mov
movsb
rorb
push
fldt
ds
ds
test
sbb
dec
setb
popf
and
call
and
add
push
dec
es
add
test
movsl
push
aad
int3
adc
xor
data16
sbb
inc
pop
daa
add
and
enter
pop
movsl
cs
sub
mov
add
fmulp
mov
mov
pusha
mov
xchg
roll
repnz
sub
xchg
pop
pop
push
xchg
and
jns
mov
lret
sbb
sub
adc
insb
jns
or
nop
scas
enter
adc
not
add
xlat
adc
cltd
push
or
mov
push
pop
inc
adc
push
add
sti
movsb
fcoms
mov
and
mov
add
push
cmp
dec
add
sub
hlt
cmp
push
rolb
xor
clc
add
aam
pop
cmpsl
loopne
jmp
mov
mov
xor
stc
addb
pop
jo
lea
xlat
ljmp
sub
dec
ljmp
ret
xchg
repnz
mov
dec
and
mov
clc
clc
cmpsb
jmp
js
and
stos
arpl
and
xor
test
xor
pop
dec
sbbb
divb
or
pusha
adc
adc
cmpsb
adc
loopne
mov
movsl
adc
jge
sbb
or
push
or
sbb
stc
and
nop
add
data16
lret
nop
popa
jbe
iret
xchg
rclb
movsl
adc
jnp
jge
outsl
out
add
lret
pop
pop
pop
xor
dec
add
add
mov
mov
xchg
test
pop
pop
in
jg
mov
push
movsl
test
mov
add
and
or
lcall
or
push
jmp
iret
sub
ret
or
sbb
imul
ret
orl
rclb
cmpsl
imul
fnsave
test
jo
enter
and
mov
jo
sbb
subl
push
outsb
ljmp
in
or
jmp
sbb
adc
add
add
fs
and
xchg
inc
dec
adc
push
test
int3
fnstcw
sub
nop
sbb
xchg
ljmp
xchg
aaa
xchg
or
ret
pusha
cmp
inc
push
fmul
inc
inc
test
daa
test
add
mov
dec
mov
pop
add
jb
push
f2xm1
jno
sbb
adc
push
push
cmp
add
and
rol
xchg
shlb
or
jl
jne
dec
stos
sbb
add
push
repnz
clc
ret
xor
jecxz
cmp
push
push
call
sbbb
mov
fstl
pop
mov
sti
lret
cmp
adcb
push
sub
or
sub
cld
lcall
fwait
pop
sub
cmc
insl
add
or
dec
test
push
mov
call
je
mov
or
sbb
jecxz
ret
int
push
pop
inc
lret
pusha
loop
sub
push
aam
adc
pop
adc
sahf
xor
or
cmpsb
inc
popf
xor
stos
pop
xor
push
add
jmp
inc
lret
xchg
dec
rol
jmp
fs
sub
and
mov
xor
and
enter
mov
daa
popa
push
jmp
jb
mov
mov
mov
xchg
add
shrl
mov
push
xchg
mov
inc
lea
js
pop
push
cltd
push
and
bswap
hlt
and
mov
adc
inc
xchg
or
in
inc
imul
push
pop
xor
cmovb
jnp
dec
ret
add
fnstcw
fcmovne
add
or
mov
xor
call
pop
jge
add
negb
cmp
lock
jbe
sbb
int
jl
push
mov
xchg
add
xor
and
subb
cmp
aaa
or
xchg
pusha
ffree
popf
test
lock
rol
jp
sbb
xchg
add
test
mov
add
cld
test
cmp
cli
add
cli
pop
mov
lock
dec
xor
in
cmp
pop
and
dec
xchg
or
add
cmp
shl
push
es
das
les
inc
mulb
or
xchg
push
fdivs
add
jmp
mov
pusha
push
xchg
test
out
adc
and
ret
add
stos
xchg
loop
je
xor
gs
mov
sbb
mov
add
scas
ret
sub
mov
cmp
add
pop
hlt
push
add
adc
jg
leave
shrb
cltd
sbb
mov
and
adc
pop
fbstp
sete
shlb
push
hlt
movsb
test
imul
pushf
pop
ds
fwait
xchg
or
pop
xlat
data16
daa
mov
xchg
cli
add
ss
dec
sub
or
xchg
lock
sub
sbb
push
lods
and
lret
mov
test
or
adc
out
or
sub
mov
sub
push
pushf
push
sbb
pop
popa
sub
cmpsl
sbb
mov
pop
pop
add
dec
mov
sbb
sbb
add
das
adc
inc
xor
sub
adc
mov
adc
mov
dec
adc
lock
push
mov
subl
and
out
push
xor
ret
pop
cmp
mov
inc
js
fstl
pusha
mov
push
mov
push
sbb
sub
clc
andb
inc
inc
rorb
popf
push
xchg
push
jae
iret
shlb
subb
mov
insb
inc
ret
mov
sub
sbb
or
rolb
add
fs
mov
add
cmpxchg
nop
addl
nop
mov
inc
xor
xor
mov
dec
sub
add
loopne
loope
rolb
pop
xor
pop
cmpsb
mov
push
out
lcall
stos
rolb
xchg
xchg
outsl
ss
pop
fiaddl
push
add
shl
fimuls
and
jl
mov
cmc
fsubr
or
cltd
xchg
ret
rolb
and
adc
aam
mov
movsb
xchg
inc
ficoms
and
popa
lock
mov
adc
mov
jno
rcr
or
js
mov
jmp
dec
aad
dec
xchg
loope
push
cld
cmp
loopne
xchg
xchg
adc
test
pop
xchg
add
adc
sbb
mov
inc
cmpsl
pop
mov
add
inc
outsb
or
push
push
inc
sub
test
inc
add
pusha
or
fwait
rol
pop
sbb
jnp
or
jbe
loopne
jo
or
rcrb
or
mov
xor
cmc
or
adc
mov
pushf
sbb
flds
and
ret
adc
xchg
push
adc
lods
pop
rorb
outsl
cmp
add
sahf
push
mov
or
push
or
push
sub
fwait
or
sarb
pop
inc
test
pop
xlat
push
or
rolb
mov
or
mov
cmp
or
ljmp
inc
push
pop
les
pop
add
cmp
cmpsl
loopne
insl
cmp
jns
push
sbb
test
repnz
subb
loopne
xchg
adc
sub
cs
mov
fistl
mov
add
ror
icebp
lock
jno
movsb
es
rorb
loop
shll
adc
push
mov
mov
sahf
andb
add
push
fiaddl
icebp
mov
xor
add
and
in
ret
insb
addb
and
push
imul
shll
cli
hlt
leave
push
sbb
add
cmp
lret
les
enter
int3
mov
roll
loop
jae
pop
push
fstl
sbb
icebp
fs
les
sarl
sbb
and
cld
mov
rorl
mov
dec
inc
push
or
daa
push
add
call
pusha
push
jge
or
sub
loopne
adc
in
or
test
popa
js
imul
add
stos
adc
xchg
sbb
xchg
or
or
add
push
mov
mov
or
and
or
leave
jecxz
pop
or
adc
xor
inc
dec
rol
mov
hlt
rorb
cmpsb
into
jl
xor
imul
imul
clc
mov
rorl
cld
cmp
pop
int
xchg
hlt
ljmp
xor
or
xor
pop
push
sbb
mov
mov
inc
sti
pop
dec
cmp
or
lea
dec
or
data16
dec
pop
mov
jge
jmp
outsb
pusha
ret
dec
mov
mov
or
cmp
sub
cmc
pop
or
sbb
sub
out
dec
leave
inc
fwait
pop
add
sbb
clc
mov
adc
popa
sub
inc
add
js
mov
push
add
stc
jp
int3
adc
or
push
stos
test
xchg
daa
and
sahf
arpl
adcl
cmp
adc
and
mov
mov
and
and
cmc
push
int3
lret
scas
fmul
lods
and
mov
out
jbe
xchg
rcrb
mov
and
fbstp
adc
or
icebp
add
loopne
rorb
xorb
je
pop
cmp
jo
mov
dec
or
sub
mov
or
jle
not
or
mull
daa
adc
pop
or
add
or
stc
pop
jp
jb
jbe
push
xor
sub
mulb
outsb
test
xchg
pop
dec
dec
bswap
mov
movsb
jno
push
ret
inc
das
adc
add
xchg
ret
aam
mov
inc
push
add
enter
push
sub
pushf
insb
sbb
dec
imul
clc
mov
pusha
dec
pop
or
test
inc
mov
pusha
loopne
insb
scas
dec
shlb
repnz
add
cmp
fbstp
imul
mov
push
lock
arpl
mov
add
daa
shlb
add
popf
xor
mov
scas
inc
mov
ret
out
cmp
and
push
jns
cmp
sub
ljmp
cmp
ds
xlat
mov
sbb
inc
sbb
cmpsb
bound
pushf
mov
and
xor
push
xchg
sahf
mov
add
lods
or
call
or
xchg
add
mov
movsl
into
mov
sahf
xor
xchg
and
cmc
je
add
and
push
mov
inc
js
inc
insb
pusha
insb
ret
inc
imul
adc
pop
mov
adcb
xchg
xlat
mov
hlt
les
xlat
cmp
and
or
dec
ret
dec
push
je
sub
xchg
inc
bound
pop
push
dec
sbb
fidivs
sub
das
mov
and
add
cmp
xchg
add
movsb
imul
inc
leave
jno
insb
shll
and
pop
jmp
ja
dec
pusha
mov
xchg
or
push
inc
adc
sbb
inc
add
or
les
fsts
sbb
roll
and
das
push
xchg
push
xchg
or
sbb
shr
push
fcmovb
add
hlt
shlb
and
aaa
sahf
pop
cmpsl
or
lret
shrb
inc
pop
add
sub
jl
mov
sbb
or
stc
push
shrl
stc
fdivl
and
xlat
movsb
daa
daa
mov
mov
or
idiv
mov
add
adc
xchg
daa
leave
test
adc
loopne
sbb
adc
xchg
xchg
sbb
xchg
mov
aam
cltd
inc
add
pop
mov
or
push
sbb
add
faddl
aaa
jp
or
dec
sub
js
or
xor
je
pusha
add
dec
sbb
rolb
mov
leave
cmp
fidivrs
add
cmp
hlt
push
sub
lock
and
sbb
add
push
cmp
sub
xchg
mov
or
jno
loop
imul
ljmp
xchg
push
aam
and
inc
and
jo
mov
push
loopne
push
mov
mov
aas
popa
mov
insb
jo
cmp
or
in
and
popa
mov
test
mov
mov
gs
jmp
imul
sbbb
push
push
lret
and
popf
dec
imull
rorl
repz
roll
aas
data16
xor
mov
adc
xchg
jnp
mov
popa
and
bound
lea
xor
imul
adc
cmc
sub
cltd
pop
ja
dec
cmc
imul
ret
xor
lock
add
mov
clc
cmp
sub
cmp
daa
mov
dec
pop
xchg
loopne
ret
jbe
wbinvd
je
adc
push
mov
lcall
out
xchg
lods
je
mov
inc
or
aas
imul
pop
rclb
arpl
leave
aaa
xchg
push
inc
inc
lahf
test
xor
in
add
leave
jp
push
add
add
sbb
cmc
and
lods
mov
loopne
xchg
pop
add
add
push
es
cmp
rcrb
loope
je
outsb
adc
mov
sub
mov
pop
sbb
sti
stc
sbb
dec
push
fimuls
repz
mov
imul
jns
les
lock
sbb
in
loopne
dec
pop
dec
loopne
add
mov
pop
maxps
xor
popf
sbb
addr16
subl
inc
add
shl
insb
mov
sti
xor
jo
add
xchg
add
jmp
or
or
test
mov
js
popa
and
xchg
fstl
push
leave
mov
xchg
fs
pop
data16
dec
cwtl
adc
imul
loop
arpl
pop
dec
popa
inc
or
daa
or
add
sub
mov
je
or
cmpb
sub
jmp
into
pinsrw
icebp
fs
xchg
pusha
dec
dec
test
insl
cmp
push
sbb
mov
mov
and
xor
mov
cli
mov
in
adc
mov
dec
mov
test
xor
push
push
gs
adc
pop
push
push
test
adc
and
shll
fimuls
cltd
dec
or
pop
and
jns
xchg
sbb
lods
dec
jge
rorb
fnstenv
pushf
cmp
popf
cmpb
adc
jmp
mov
pop
cwtl
or
nop
movsb
dec
xchg
jle
es
dec
add
cmp
dec
subb
or
rorl
add
enter
mov
loop
push
sbb
xchg
add
xchg
add
pushf
xchg
adc
cwtl
sub
adcl
dec
push
xchg
hlt
sub
daa
push
mov
lods
pop
ss
sub
fisttps
xchg
sbbb
popa
sbb
test
sbb
add
mov
nop
mov
pop
addb
mov
int3
inc
or
xchg
or
adc
movsl
mov
sbb
ljmp
scas
das
push
pop
add
and
mov
mov
daa
cmpsb
testl
ret
dec
sub
pop
outsb
pop
rcll
loope
test
jo
dec
add
mov
mov
or
mov
adc
orb
insb
add
je
mov
inc
out
sbb
xor
lret
adc
jo
popa
roll
adc
test
pop
cmp
popaw
sarb
pop
shl
sbb
jl
sub
jp
mov
sbb
stos
xchg
cmp
insb
mov
pop
xor
enter
fidivrl
dec
lods
rclb
scas
adc
stos
es
jp
sbb
sbb
mov
xor
inc
mov
sbb
push
add
inc
or
push
push
add
repnz
sbb
ljmp
push
mov
cmp
jp
jmp
push
xor
mov
in
fisubs
sub
dec
or
das
lock
addb
addr16
sbb
or
sbb
bound
sbb
and
dec
rcrb
data16
xchg
inc
mov
or
xor
adc
adc
adc
push
pop
sub
mov
mov
mov
lret
cwtl
aaa
jne
or
sub
ret
in
lea
shll
adc
adc
jnp
adc
adc
xor
xchg
push
sub
or
lods
inc
add
sub
inc
stc
sarb
loopne
adc
fs
add
std
xor
fcoms
lods
xchg
lods
push
lahf
cmpsl
aaa
or
arpl
clc
mov
inc
movb
sub
push
ret
test
jmp
add
adc
mov
add
or
negb
jle
adc
cmp
sbb
or
add
xchg
add
cmpsl
ret
or
clc
push
inc
lea
rcl
mov
cli
add
mov
xor
jno
and
adc
nop
xchg
add
push
mov
ljmp
or
or
lods
lds
mov
or
mov
mov
les
adcl
adc
jo
ljmp
call
daa
bound
cmp
je
sub
cmp
jl
jns
js
dec
mov
or
addb
stos
cli
add
int
or
jno
xor
icebp
adc
inc
cmp
loope
shl
sbb
sti
bound
pop
cmp
lods
popa
pop
call
dec
cltd
into
mov
rcl
pushf
cmpsb
inc
inc
sbb
ror
sbb
call
popf
dec
pop
xchg
xor
je
hlt
inc
add
push
lcall
inc
es
das
pop
mov
rcl
sub
cmpb
in
adc
ja
xor
xlat
imul
xchg
push
pop
mov
and
adc
and
mov
imul
jbe
inc
repnz
pop
es
push
cli
orb
adc
or
or
xchg
test
das
push
outsl
outsb
cmp
adc
test
loop
mov
jl
pop
pop
pop
jmp
push
push
or
je
mov
inc
mov
loop
sbb
popa
sub
test
or
xchg
mov
lea
mov
int
ss
ret
add
enter
repnz
add
loopne
loope
cmp
or
add
sbbb
pop
jmp
jne
push
push
adc
jp
loope
cmpsl
adc
or
es
push
mov
or
movsl
rclb
add
clc
jmp
or
jle
lea
add
andb
popf
or
sbb
out
imul
clc
pop
ljmp
mov
sub
test
push
add
and
cmp
inc
inc
and
test
xor
push
xlat
jo
clc
mov
lock
dec
notb
xchg
in
jl
push
cmp
mov
add
enter
sub
dec
nop
addb
outsb
pusha
sbb
adcl
loopne
adc
dec
cmc
or
je
mov
cmpsl
and
push
add
add
mov
js
cmp
aam
pop
or
add
nop
add
xorl
or
push
cmpsb
out
sbb
pop
inc
je
xchg
inc
dec
and
mov
jo
rcrb
ss
adc
xor
mov
push
inc
popf
insb
cltd
push
xchg
or
inc
pusha
jg,pn
sbb
adc
push
out
movsb
xor
and
jge
test
sub
rorb
and
loopne
aam
rol
jo
jecxz
xor
push
lods
or
sub
add
scas
or
xor
and
pop
pop
test
inc
rorb
insb
pusha
and
xor
xor
xchg
hlt
xor
or
lahf
adc
sbb
fs
push
xchg
adc
cmp
mov
push
or
cwtl
ret
pop
nop
clc
xchg
cli
push
aas
cmp
iret
adc
loopne
inc
inc
movhps
sub
pop
dec
lock
sub
dec
dec
sbb
add
lods
xlat
das
dec
dec
popf
mov
push
loopne
test
jne
insl
cmp
sbb
in
ret
orb
and
shrl
test
adc
add
and
inc
jo
xor
stc
clc
jo
mov
add
or
cwtl
lock
ljmp
jbe
ljmp
mov
in
subl
daa
rcl
in
clc
pop
divps
pop
mov
cmp
hlt
addl
arpl
sbb
fadds
add
jbe
stc
push
and
adc
add
add
pop
pop
sbb
aam
dec
cs
and
scas
rcrb
loopne
punpckhbw
js
call
enter
insb
push
xchg
ss
pop
xchg
cmpsb
pushf
inc
cmovs
lret
inc
mov
or
sbb
scas
mov
ret
mov
add
hlt
imul
push
mov
repz
xchg
rcl
and
sbb
push
mov
adc
push
clc
mov
daa
movsl
rclb
ljmp
add
add
test
cwtl
push
shll
rorl
push
mov
test
inc
mov
stos
inc
inc
inc
mov
push
popf
xchg
jno
hlt
dec
lea
sbb
cmp
shlb
xchg
add
cmc
xor
inc
pop
add
adc
or
jns
enter
movsl
adc
inc
sbb
push
pop
xor
adcb
push
ret
and
insb
test
rolb
inc
or
inc
fildl
rorl
pop
sbb
test
pop
push
ret
mov
and
dec
cmpsb
mov
cli
push
dec
js
pop
adc
pusha
bound
dec
mov
add
inc
popf
mov
or
rcll
fidivrs
pop
push
add
pop
dec
popa
popl
sub
jns
fdivrp
ret
rolb
sub
mov
rorb
and
adc
mul
cmpsb
sbb
add
pop
add
sbb
cmc
repnz
outsb
xlat
jle
cmpsl
loope
mov
push
das
xchg
jb
pop
add
push
or
ljmp
ror
xchg
sbb
inc
mov
cli
into
dec
aad
and
sbb
jg
dec
add
mov
jle
pop
in
jmp
movl
add
push
pop
loop
mov
cmc
test
push
repnz
lret
inc
mov
xlat
add
sub
mov
arpl
lret
jecxz
scas
mov
xor
xchg
scas
sub
mov
and
hlt
inc
mov
lret
xchg
xor
sub
sub
test
sarl
mov
mov
dec
shr
lret
scas
mov
std
in
sub
jge
pop
push
cmp
repnz
mov
lahf
sbb
fnsave
or
loope
mov
addl
arpl
jnp
std
repz
outsl
mov
in
push
pop
add
mov
leave
enter
xchg
push
pop
jns
push
sub
rcr
sub
add
jns
mov
mov
mov
lods
call
jns
xchg
adc
les
mov
stc
xchg
jns
xchg
push
mov
aas
addr16
mov
rcrl
in
push
pop
jno
inc
sti
mov
stc
sub
xchg
push
pop
jns
in
inc
jle
inc
cmp
push
inc
pop
jns
pop
cli
js
sub
jne
nop
or
xlat
mov
es
fisubl
cwtl
lock
enter
scas
xor
fnsave
mov
scas
mov
cmp
scas
lcall
iret
repz
inc
cltd
pop
xor
enter
pop
stc
xchg
sahf
mov
pop
or
jno
pop
xchg
push
pop
jns
adc
in
push
adc
sbb
push
pop
jns
dec
cmc
call
lock
push
icebp
pop
jns
xchg
test
dec
jb
loop
pop
push
mov
cmpsb
mov
gs
fndisi(8087
std
mov
sub
movlhps
add
stos
ret
jmp
xlat
pop
stc
repnz
out
push
cmp
xlat
fiaddl
pop
js
in
push
xchg
sbb
pop
cmpsb
push
daa
in
push
pop
sub
sub
push
test
pop
jns
ja
mov
push
mov
popa
fwait
inc
mov
jmp
mov
mov
sub
clc
outsl
subl
sub
pushf
xchg
pop
movsl
jl
sbb
mov
xchg
loop
fs
mov
jge
repnz
xchg
mov
jecxz
xor
and
lret
mov
add
adc
shrb
pop
insl
and
jb
fwait
add
xor
or
push
rcll
xchg
arpl
fdiv
outsl
sub
mov
xor
sbb
mov
add
dec
xor
xchg
mov
pop
and
lret
xchg
sub
lcall
bound
fists
mov
js
pop
add
scas
mov
adc
ret
addr16
scas
xlat
pop
in
scas
mov
or
hlt
mov
mov
pop
inc
jo
lahf
iret
mov
cmp
popf
push
shlb
cmpb
cmp
inc
mov
pop
sub
pop
ss
rorb
push
hlt
mov
cld
xchg
jle
repnz
jge
adc
pop
mov
out
scas
fdivr
xor
scas
lods
sbb
and
jnp
popa
popa
mov
insb
sub
mov
rcr
imull
shrb
bound
sahf
xor
mov
scas
mov
loope
lret
jmp
shrl
scas
mov
and
mulb
or
inc
mov
inc
stos
pop
pop
icebp
add
out
lret
sub
dec
addr16
cmp
mov
lahf
sbb
data16
ljmp
mov
or
sbb
jns
subb
xor
fisttps
mulb
mov
pop
gs
in
lahf
pusha
iret
in
xor
xchg
push
pop
jns
stos
inc
mov
and
pop
jns
sbb
fstl
push
out
jge
das
iret
pop
jns
xchg
mov
imul
sbb
xchg
push
xchg
cltd
push
pand
mov
lret
mov
ret
sti
aam
jae
scas
mov
fwait
test
mov
data16
jecxz
mov
adc
lock
jmp
in
jg
xor
pop
mov
iret
or
jns
ds
lret
xor
dec
mov
repnz
jno
xor
das
push
push
inc
outsb
mov
jns
xchg
sub
sub
pusha
inc
stos
repz
xchg
ja
jmp
dec
int
sbb
xchg
push
pop
sub
push
test
les
fmulp
pop
and
adc
sbb
pop
jns
xchg
dec
pop
and
sub
fstl
xchg
rorl
inc
fistpll
cmp
jb
stos
lea
inc
push
fs
sar
mov
hlt
subl
dec
mov
lret
pop
loop
mov
inc
cmpsb
jp
enter
lret
mov
xor
or
mov
mov
int
iret
in
xor
xor
ret
repnz
push
scas
leave
and
aam
or
psubusb
das
xchg
xor
push
scas
mov
sbb
mov
stc
mov
lret
out
xchg
push
mov
lret
sbb
fwait
adc
sbb
or
shl
pop
and
scas
mov
mov
push
aad
movsl
dec
scas
mov
mov
add
out
mov
cltd
mov
cltd
out
iret
jno
mov
repnz
xchg
or
and
xor
mov
jns
jecxz
adc
hlt
fsubrs
jg
mov
aas
shrl
jb
xchg
mov
push
in
inc
or
out
fwait
in
aas
repnz
lret
pop
outsb
nop
xor
sbb
sbb
sub
xor
lock
repz
adc
scas
mov
ffreep
loope
pusha
jne
xchg
test
lret
mov
sti
push
insl
sahf
and
mul
out
push
ret
jbe
int3
xchg
or
fiaddl
pop
lock
les
inc
jno
int
mov
cmp
pop
mov
xor
xchg
sbb
lret
inc
jp
lods
and
jae
lret
mov
lods
mov
addb
pop
jno
scas
mov
out
mov
aas
shr
sub
scas
mov
xchg
arpl
int
xor
sti
in
sub
cmp
jne
sub
iret
sub
pop
cld
push
jmp
mov
push
mov
test
mov
xchg
in
cmp
or
cmpsl
dec
xchg
xor
mov
scas
mov
test
ds
lahf
sub
mov
aas
or
dec
lock
mov
sbb
inc
cs
sub
cmp
sbb
push
cmp
scas
mov
stos
xor
gs
jmp
xchg
ja
xchg
sbb
repz
lock
push
pop
jns
add
add
inc
push
push
mov
fcompl
in
cltd
movsb
fidivrl
lret
pop
lret
iret
int
mov
xchg
push
mov
fcom
imul
push
push
repnz
fimuls
push
mov
sub
pop
cmp
mov
mov
icebp
sbb
es
dec
repnz
in
xor
jmp
test
scas
mov
iret
cwtl
fdivs
scas
mov
xor
cmp
ss
jo
and
dec
aas
inc
scas
push
jl
sub
pop
jns
orb
xlat
mov
and
push
jne
pop
fldenv
ret
in
in
push
pop
in
into
cwtl
out
stos
stc
push
lds
xchg
push
pop
jns
adc
enter
cmp
jns
outsl
popa
adc
out
out
jns
fstl
movnti
add
xchg
push
pop
xchg
cs
cmpsb
sbb
push
iret
ja
pop
jns
jge
add
and
or
jb
xchg
mov
push
pop
xchg
jg
xchg
push
fdivrp
fdivr
orb
lret
call
push
pop
jns
jns
movsb
jecxz
lcall
push
pop
jns
out
and
mov
and
cli
scas
lock
xchg
xchg
fdivr
popa
out
dec
cmp
repz
je
inc
insb
aad
das
inc
lcall
scas
pop
stc
dec
cs
mov
aas
mov
pop
jns
xchg
sbb
mov
imul
in
push
push
add
fdivl
or
in
push
pop
push
test
seto
dec
in
xchg
ss
pop
jns
dec
fmul
shrb
adc
call
out
es
jns
xchg
add
mov
ja
pushf
jno
repz
sub
loope
fsub
xchg
lds
push
pop
jns
mov
push
add
add
das
out
stos
nop
test
and
rcrb
lock
scas
fcompl
mov
cmp
dec
push
jbe
aas
sbb
fwait
repnz
mov
ficompl
push
jmp
sub
shlb
imul
jmp
outsl
lret
jg
adc
ja
rcrl
sub
js
popf
add
pop
sbb
enter
inc
test
lock
cld
stc
and
xchg
cmpb
lahf
aas
jg
ja
repz
test
cld
stc
repz
rorl
adc
popf
xchg
push
fidivrs
lcall
test
mov
repnz
fldcw
inc
add
ja
js
movsl
lret
push
pop
ret
lods
mov
in
dec
pop
and
jns
xchg
ja
repnz
movsb
scas
cmp
sub
xchg
push
pop
push
push
lret
mov
mov
fdivr
jb
cmp
fwait
push
scas
cs
inc
push
push
jns
xchg
ja
xchg
out
xchg
imul
lods
mov
xchg
push
pop
cmpsl
cmc
push
lahf
es
xchg
push
pop
jns
or
or
ficompl
iret
icebp
lret
mov
push
dec
in
out
jns
cld
stc
repz
pop
pusha
cmp
push
scas
or
insb
mov
subb
cld
enter
scas
test
sbb
cld
les
pop
mov
pop
out
lea
popa
and
lret
fs
pop
addr16
xchg
cmp
mov
sub
adc
stc
sar
imulb
scas
mov
imul
pop
mov
mov
in
dec
rcr
negl
je
xchg
push
fidivrs
push
leave
mov
cltd
dec
xor
aad
xchg
push
pop
jns
aad
mov
shrl
repz
pop
jns
insl
dec
mov
loop
or
push
xchg
in
insl
cld
rcrl
mov
test
pop
mov
jge
fstps
xchg
push
pop
jns
jl
outsl
fld
popa
loopne
in
hlt
mov
push
pop
jns
push
push
rorb
mov
repnz
pop
jns
xchg
mov
jno
scas
call
mov
xchg
push
nop
dec
and
test
inc
mov
call
mov
es
mov
cmc
xorps
std
repnz
iret
sub
repnz
or
das
mov
mov
mov
mov
rcll
lods
xchg
xor
sub
push
rcll
sub
in
sub
xor
insb
aas
jg
rcl
lods
mov
pop
call
cmp
xchg
xchg
es
ficomps
push
loopne,pn
lock
into
cld
adc
in
pusha
xchg
test
xchg
dec
xor
lods
shrb
repnz
cmp
mov
mov
adcb
pushf
push
jns
pusha
imul
lahf
test
pop
cmpsb
mov
mov
sub
outsb
xchg
push
pop
jns
push
loope
sbb
inc
add
dec
ret
jns
and
lret
mov
inc
cmc
lea
stc
cld
stc
repz
outsb
or
cmc
sub
jns
or
test
inc
movsb
cmpsb
mov
or
fists
and
lret
iret
jecxz
adc
call
lret
mov
sub
mov
out
jle
repnz
inc
fildll
jmp
movsl
adc
popa
or
ds
jo
dec
std
int
cmp
lods
addb
sub
fwait
inc
fs
mov
lret
lret
test
jne
leave
pusha
in
sti
push
inc
es
xlat
mov
fbstp
dec
sbb
repnz
jnp
test
jmp
pop
cmp
push
inc
ret
inc
xchg
neg
popf
cmp
repnz
ret
and
and
rorb
pushf
mov
fsubrp
mov
movsb
dec
cmpsb
fadds
xor
xchg
loopne
pop
xor
call
aas
lret
push
ds
xchg
arpl
mov
push
into
or
pop
pop
int3
jge
push
lret
jle
xchg
mov
out
out
aaa
push
mov
xchg
adc
push
decl
jmp
mov
and
pop
into
into
or
jle
dec
cmpsw
repnz
lret
sub
popa
cmp
pop
rcl
js
lret
mov
ss
scas
dec
adc
mov
fisubrs
add
xchg
xor
mov
lods
lock
push
add
push
or
push
mov
out
leave
mov
testb
sahf
stc
repz
xchg
fimuls
and
jg
cld
arpl
ficomps
out
xchg
sub
jecxz
out
lahf
nop
adc
insb
in
cmp
cld
stc
out
xor
mov
xor
lahf
aas
mov
xchg
shll
rorl
pop
pop
jns
fsubrl
inc
lret
stos
sbb
fsubrp
lret
sub
xchg
jns
mov
cmpsl
orps
push
mov
in
push
sbb
mov
aas
mov
push
pop
pop
std
std
and
out
in
loope
dec
loopne
outsl
xor
lret
inc
adc
xchg
arpl
repnz
in
stos
ffreep
mov
loopne
push
loopne
sti
in
mov
or
cli
mov
dec
xor
mov
pop
sub
jo
mov
push
scas
mov
out
in
insb
mov
movsl
mov
int
or
lods
add
pop
je
xchg
mov
aas
aas
ret
movb
add
je
out
lahf
fstpl
shll
mov
stc
mov
lods
shrb
jo
cmp
outsb
dec
in
das
push
mov
jle
dec
jmp
adc
push
pop
jns
test
test
aad
jns
cmpsb
lds
lahf
lock
les
push
rcrl
shll
xor
push
adc
in
repnz
jle
cmpsl
and
scas
or
les
xor
sub
pop
inc
cwtl
test
jge
or
mov
in
lds
in
ud1
das
subl
sub
xchg
gs
test
repnz
xchg
iret
cmpsl
in
shrl
arpl
imul
addr16
icebp
inc
mov
out
jle
repnz
mov
and
pop
adc
das
sbb
xchg
sub
in
xor
adc
jg
ds
in
push
les
push
mov
cmp
loopne
jle
adc
xchg
mov
adc
jg
cmp
mov
dec
dec
sub
movsl
sub
jp
lret
dec
jg
lds
aas
mov
jns
mov
pop
mov
repnz
lret
sub
insl
pop
enter
cmp
popa
mov
mov
and
cmp
jae
cmp
mov
into
cmp
int3
mov
mov
iret
jns
lret
fwait
jnp
xor
mov
sub
sub
sbb
xor
mov
scas
mov
inc
xor
es
scas
pop
sbb
dec
xor
mov
ret
lock
mov
cmpsl
mov
repnz
test
sub
adc
sbb
pop
pusha
xchg
mov
test
dec
mov
outsl
cmc
adc
cwtl
ljmp
mov
fidivl
xchg
pop
outsb
adc
jns
xchg
shl
test
sarl
cs
and
stos
add
pop
add
push
in
ja
outsl
cmp
out
mov
cmp
scas
dec
inc
ljmp
pop
out
clc
in
ja
cltd
push
cltd
loope
mul
cmp
out
insb
in
inc
aaa
pop
out
lock
and
mov
loop
xchg
testl
xor
repnz
xchg
sub
push
jp
ljmp
lret
mov
add
clc
mov
scas
mov
out
out
inc
xlat
nop
popa
dec
in
mov
and
inc
outsl
xchg
push
pop
jns
push
and
xor
pop
jns
push
pusha
mov
jns
dec
bound
test
pop
jns
xchg
fldcw
aad
jle
xor
ret
jns
xchg
push
sub
insl
mov
push
pop
outsb
mov
ficoms
dec
xchg
ja
xchg
jne
add
fcmovu
dec
pop
cmc
sbb
adc
ds
sbb
enter
cmc
and
in
mov
jmp
sti
les
ljmp
int3
pop
in
sub
mov
jl
pop
scas
mov
mov
dec
lret
aas
jle
sbb
das
jg
sahf
xchg
cld
scas
repnz
lahf
aas
jg
lret
adc
mov
pop
mov
out
lret
js
xchg
and
mov
add
cmp
sub
mov
gs
and
sub
lds
ret
into
xchg
int
popf
inc
scas
mov
and
xor
test
cwtl
jg
mov
outsl
ja
scas
ja
cmp
mov
jnp
out
lahf
aas
adc
lea
add
inc
xor
mov
daa
stos
call
repnz
mov
aad
repnz
aad
and
pop
pop
and
ja
add
test
int
dec
int
mov
or
call
inc
movsl
ss
das
cmp
stos
ret
inc
inc
mov
lds
mov
jecxz
sub
mov
jg
out
lahf
repnz
mov
sbb
into
mov
or
pop
jns
cmp
push
cmpsl
addl
ja
das
sbb
xor
mov
and
mov
mov
repnz
lods
xor
sbb
inc
insb
dec
call
sub
jg
test
jecxz
repnz
js
jecxz
outsl
fisubrs
sbb
pop
pop
scas
lret
mov
jle
push
xchg
sbb
shlb
xchg
rorl
mov
sar
or
test
lods
jne
pop
push
lea
rclb
add
pop
test
cmp
mov
cld
adc
mov
dec
dec
xor
es
into
mov
xchg
setle
jb
inc
lahf
aas
jg
cmp
push
add
std
jl
cmpsl
loopne
or
iret
rclb
sahf
push
sub
add
jns
test
mov
push
mov
out
jle
nop
push
arpl
mov
scas
inc
sti
mov
scas
mov
sub
popf
call
sbb
repnz
fidivrl
mov
push
repz
sub
fists
push
mov
cmpsl
inc
std
xchg
push
fsubp
mov
daa
xchg
push
fcoml
dec
push
pop
jns
cmp
dec
xchg
sub
sbb
xchg
mov
popf
insb
cmp
xchg
xadd
xchg
push
prefetch
jecxz
incb
in
push
pop
sub
mov
xchg
rcrl
pop
pop
mov
adc
lahf
add
cmp
dec
mov
sbb
stos
dec
subb
jle
iret
mov
push
mov
ljmp
aam
stc
adc
es
or
sub
idivl
repz
sub
stos
mov
mov
movsl
jge
repnz
outsl
insl
loopne
push
mov
loop
cmp
incl
das
lcall
xorl
out
lahf
sbb
jecxz
into
pop
mov
sub
adc
jns
cld
das
add
mov
lret
int3
jg
jecxz
ss
jle
lret
mov
xchg
add
clc
and
mov
push
shrb
pop
scas
mov
mov
fsubl
lret
sub
repnz
xchg
mov
repnz
jecxz
outsl
inc
mov
out
mov
insl
pusha
repnz
jns
and
sub
lret
pop
jecxz
mov
or
sub
fidivs
mov
cmp
or
mov
dec
xor
or
push
mov
mov
lret
lods
lcall
pop
scas
or
jmp
icebp
pop
sbb
scas
mov
mov
mov
scas
mov
out
nop
xor
stc
mov
sub
in
adc
jo
sbb
test
lret
fistl
xorb
dec
sub
cld
adc
frstor
loope
add
addr16
xchg
iret
lahf
aas
jg
in
outsl
sahf
rcrl
adcb
test
pop
sar
sahf
sub
adc
leave
in
push
pop
sub
adc
mov
lahf
xchg
push
pop
jns
int3
mov
add
push
pop
ds
ret
fildll
push
lahf
add
repnz
repz
out
push
pop
mov
std
dec
ficomps
lods
pop
lahf
dec
std
bound
inc
push
pop
jns
mov
les
xchg
inc
idivl
xorl
bound
pop
jns
xchg
fsubrl
nop
sbb
imul
dec
cmc
fmul
fbstp
lret
push
and
mulb
cmp
je
pop
sub
push
mov
xchg
leave
pop
and
sub
scas
mov
pop
fdivs
xchg
and
lret
jne
push
addr16
mov
lcall
outsb
sbb
pusha
xchg
xchg
mov
sub
or
xchg
fs
insl
das
int
xchg
bound
dec
push
negb
lahf
mov
inc
adc
aas
ret
lahf
xchg
push
int3
outsb
arpl
add
aas
stos
in
cwtl
rol
aas
outsb
xor
rcll
std
jge
movsl
stc
jg
jnp
pmulhuw
lods
pop
jns
inc
icebp
lret
cmp
fstps
dec
dec
iret
dec
test
sub
mov
jmp
inc
icebp
sub
push
fmulp
sub
cli
mov
outsl
hlt
xlat
dec
jno
pop
and
pop
jnp
lret
insb
scas
mov
inc
mov
rorl
mov
fnsave
loop
dec
ds
repnz
mov
sbb
idivl
jg
or
mov
mov
mov
adc
adc
aam
cmp
fstp
lret
push
mov
mov
add
cmc
out
mov
mov
cld
shll
jmp
lret
fildll
outsl
inc
iret
iret
jb
xchg
mov
inc
testb
rcrb
aas
int
arpl
outsl
ror
mov
outsl
cwtl
imul
jge
lods
ljmp
mov
enter
lcall
ret
in
push
pop
inc
std
mov
aam
sarl
pop
pop
jns
sbb
or
cmp
pop
pop
jns
xchg
sub
js
shrl
loope
push
fiadds
pop
rclb
mov
ret
sbb
aas
ret
jae
pop
orl
inc
inc
fstpt
bound
jle
outsl
or
sbb
sub
mov
iret
mov
lds
mov
xchg
pop
stos
jmp
pop
fdiv
lret
outsl
js
pop
mov
adc
adc
lret
mov
sub
lock
ret
mov
dec
or
sbb
lar
pop
jns
or
mov
jge
and
xchg
pop
dec
push
sub
in
mov
pop
inc
inc
pop
lods
arpl
loopne
and
xchg
jecxz
adc
stos
xchg
sub
stos
aad
rcrb
lock
xchg
ja
pop
xchg
dec
roll
arpl
fisubrs
cld
cld
stc
xchg
ds
aaa
ret
pushf
jle
push
iret
lahf
aas
scas
stos
jae
lea
ror
in
jp
ds
repz
loop
pop
bound
nop
ret
cld
stc
out
push
cli
dec
push
jbe
sub
add
pop
out
lahf
aas
jg
ret
add
outsb
pushf
out
or
cld
stc
repz
pushl
sub
dec
shl
xor
mov
lahf
aas
jg
in
and
loope
mov
lock
lret
out
add
subl
rcrl
pop
ljmp
fdivrp
adc
and
add
xchg
dec
mov
xchg
and
mov
lret
jg
sar
mov
imul
imul
mov
jne
xchg
repnz
aaa
sbb
shrb
sbb
add
and
jb
mov
sbb
fdivrl
aas
sbb
sbb
mov
mov
sbb
sbb
test
dec
sbb
and
sbb
sbb
das
sbb
sbbl
sbb
or
pop
sbb
jmp
gs
jg
mov
pop
xchg
lcall
sbb
enter
sbb
jmp
lods
outsb
sbb
outsl
into
aas
sbbb
sbb
sbb
jb
dec
scas
fmuls
sahf
outsl
sbb
cli
jo
ret
sbb
loopne
xor
in
mov
aas
sbb
shrl
pop
pop
outsb
jns
sbb
cmc
loope
xchg
sbb
sbb
lret
mov
cmp
out
sbb
sbb
or
inc
jo
ret
sbb
sub
out
fildll
cli
jo
leave
sbb
sbb
loopne
sbb
cmp
iret
sbb
xchg
pop
push
out
sbb
loope
adc
lods
sub
cli
jo
enter
mov
sbb
sbb
add
adc
rcrb
fdivr
jo
out
sbb
sbb
or
pop
jp
jge
sbb
sbb
in
pop
fcompl
sbb
pop
mov
or
rcrb
fcompl
mov
lahf
testb
test
sbb
sbb
mov
push
jo
iret
sbb
or
test
sbb
pop
outsb
cmp
dec
pop
xchg
sbbb
cmc
fdivl
sbb
sbb
ret
mov
sahf
jo
fistps
and
xchg
sbb
sbb
mov
loopne
sbb
sbb
mov
pop
lahf
cld
repnz
add
loopne
add
sbb
sbb
cmp
fistps
xchg
pop
pop
scas
sbb
pop
mov
sbb
outsb
cmp
outsb
sbb
sbb
xchg
pop
movq
pop
mov
sbb
outsb
jns
outsb
sbb
sbb
xchg
pop
pop
nop
add
sbb
dec
mov
mov
pop
iret
sbb
sbb
loopne
test
sbb
sbb
cmp
aas
sbb
jo
inc
out
sbb
out
mov
es
mov
pop
sbb
sbb
pop
mov
jg
lcall
xchg
pop
sbb
loopne
and
aas
mov
adc
es
mov
pop
ret
xchg
mov
jge
cmc
loope
out
sbb
sbbb
sbb
sbb
mov
dec
sbb
mov
ljmp
shrl
pop
dec
lahf
sbb
sbb
shrb
fnstsw
sbb
sbb
iret
xchg
pop
outsb
pop
push
outsb
sub
daa
fdiv
test
sbb
shrb
push
outsb
pop
dec
sbb
adc
jp
sbb
sbb
mov
fistps
pop
outsb
cmp
sub
pop
test
pop
sbb
adc
jg
aas
xchg
pop
jo
lahf
sbb
mov
loope
sbb
sbb
into
lahf
add
je
inc
sbb
ret
lods
bswap
sbb
sbbb
sbb
sbb
push
fdivl
daa
mov
iret
outsb
jns
sub
sbbb
sbb
fdivl
sbb
loope
test
mov
sbb
sbb
mov
out
lahf
and
mov
lahf
sbb
add
dec
sbb
jo
or
dec
sbb
sbbb
sbb
in
xor
outsb
sbb
lcall
sbbb
sbb
add
nopl
mov
sbb
jo
sbb
sbb
loopne
xchg
pop
sbb
sbb
pop
mov
out
sbb
inc
outsb
pop
ret
sbb
sahf
jb
dec
sbb
mov
xchg
sbb
sbb
mov
iret
sbb
pop
outsb
jge
sbb
fdivl
sbb
sbb
mov
iret
sbb
lret
pop
sbb
nop
pop
movd
sbb
xor
xor
mov
sbb
sbb
jb
leave
sub
xchg
pop
push
iret
sbb
jmp
lods
out
jg
fbld
mov
push
fimuls
add
fbstp
pop
subb
push
cltd
xor
or
and
xchg
fsubrs
out
jle
xchg
inc
imul
xchg
addr16
mov
mov
dec
mov
mov
adc
jo
lret
je
rorl
jns
xchg
stmxcsr
xchg
das
scas
mov
loope
inc
fldl
addr16
pop
jns
loope
dec
jb
aaa
xchg
mov
pop
jns
xchg
insl
int3
mov
or
xor
xor
jns
xchg
push
push
push
cmpsb
push
imul
adc
ret
xchg
push
pop
out
push
hlt
cmp
xchg
icebp
lods
fdivrp
jge
fnsave
inc
sbb
xchg
call
ror
aad
or
test
jp
in
lret
mov
mov
subl
jns
cld
or
and
ret
sti
andb
and
aas
jg
jg
adcb
xchg
cld
stc
repz
popa
pushf
gs
cmp
iret
mov
lds
push
fidivrs
cmp
xor
pop
jns
lret
push
and
pop
fisttpll
cld
and
in
push
push
mov
dec
lods
inc
adc
xor
xchg
push
pop
xor
in
out
pop
pop
sbb
ret
hlt
lret
sarl
scas
pop
dec
inc
xor
out
push
cs
shrb
aam
cmpl
std
repnz
inc
fists
out
dec
inc
mov
stc
aas
xchg
lds
movsl
pop
rolb
mov
mov
mov
mov
mov
jp
and
and
adc
xchg
ret
fsubrp
sbbl
pop
jno
mov
ds
mov
lahf
aas
mov
ret
clc
mov
dec
stc
stc
repz
clc
popa
push
jnp
xchg
sub
lods
pop
mov
inc
push
imul
out
aaa
aas
jg
pop
das
aad
lret
call
inc
repz
lahf
xchg
sbb
mov
mov
pop
out
jg
cld
stc
jge
fsin
mov
jmp
sub
mov
out
lahf
aas
jne
pop
jmp
lcall
repz
cmp
mov
lods
aas
cs
ja
jl
mov
testl
sbb
fidivrs
in
inc
arpl
pusha
xchg
scas
xchg
ret
test
lahf
aas
add
mov
scas
dec
jo
sbb
add
stos
or
leave
mov
dec
jne
xor
cld
xchg
out
lret
lods
sbb
aas
jg
shll
mov
in
jnp
dec
mov
rolb
fs
sbbb
js
out
repnz
pop
jle
cmp
in
scas
jb
xor
ds
sahf
test
mov
fcmove
lahf
aas
jg
das
jb
shll
add
cmp
xchg
loop
sbbb
ljmp
sbb
in
pop
jae
pop
cmc
out
scas
mov
mov
mov
repz
and
mov
dec
rclb
fisttps
pop
jns
xor
add
clc
das
in
div
in
out
in
fcmovnbe
or
psubd
xchg
icebp
push
cmp
in
ja
std
lea
int3
mov
xchg
sbb
test
push
pop
aaa
cwtl
mov
movsl
loop
subb
popl
push
fwait
or
scas
mov
add
push
cs
push
sbb
repnz
push
popf
jg
pop
cmpsl
cld
and
pop
aad
lret
sub
cltd
mov
lock
pop
bsf
sti
in
lds
fistpll
subl
inc
sub
scas
cmp
movsb
adc
add
in
push
fimuls
cmp
xchg
cmc
repz
push
fdivrp
jb
xor
cltd
stc
cmp
divb
lock
mov
mov
das
mov
mov
lret
lahf
test
jmp
sub
test
cmp
repnz
fwait
andl
repz
clc
aad
out
out
orb
lds
out
out
clc
enter
push
dec
dec
shlb
cld
stc
repz
jbe
ss
in
pop
aaa
pusha
daa
xchg
push
xor
xchg
xchg
ja
jle
cmp
cmp
test
bound
pop
jns
gs
je
lds
mov
mov
xchg
test
xor
jp
repnz
mov
ss
lret
lahf
int
fildl
cs
mov
inc
jbe
stos
xor
mov
and
sbb
pop
jns
dec
ds
push
es
push
filds
xchg
orl
adc
into
pop
cli
push
aam
rorb
jge
leave
adc
xchg
mov
test
clc
or
mov
push
cmp
add
pop
push
mov
push
jnp
xchg
sbb
repnz
lret
test
jl
lret
loope
int
cmp
mov
and
scas
mov
sbbb
add
and
pop
pop
jns
outsl
inc
push
imull
cmpsl
daa
cmc
js
dec
iret
lahf
pop
or
scas
jmp
stc
repz
sbb
cmpsl
jp
mov
mov
out
jle
movsb
mov
dec
sbb
out
xor
sti
pop
cmc
or
repnz
pop
clc
imul
mov
xorl
add
inc
fdivs
pop
add
arpl
aas
in
das
aas
sbb
outsb
dec
pop
push
repnz
scas
cld
das
mov
pop
mov
bswap
sub
mov
lea
mov
cltd
jne
out
int3
mov
out
int
push
iret
aas
mov
aad
mov
mov
out
jns
mov
pop
mov
bnd
sub
leave
sahf
mov
or
lret
and
dec
add
push
dec
xchg
jle
mov
pop
jns
mov
fsubs
inc
and
jns
clc
shl
dec
int3
cld
sbb
loope
popa
or
and
push
pop
mov
mov
ja
inc
test
js
mov
push
pop
jns
test
loopne
jb
cwtl
dec
out
ss
pop
jns
cmp
and
sbb
dec
shlb
out
out
shrb
imul
in
sub
cld
stc
repz
jmp
inc
mov
lahf
aas
jg
fidivs
mov
or
mov
leave
pop
repz
ret
scas
int3
pop
pmulhw
fimuls
lcall
mov
rcll
lret
lea
mov
mov
int3
out
mov
frstor
leave
cmc
aas
repnz
sub
cmpsl
test
movsl
mov
aad
lock
das
xchg
jne
dec
jbe
lcall
dec
sti
jnp
pop
push
test
pop
lahf
push
sbbl
fwait
cld
in
push
pop
push
leave
cltd
stc
test
addr16
jl
js
push
pop
jns
call
jne
test
jb
push
pop
jns
jmp
movsb
mov
shll
mul
xchg
fidivl
out
aas
imul
jp
xor
jle
lods
sti
xchg
shlb
lret
iret
lahf
aas
and
sbb
sti
iret
lahf
jg
xchg
push
movsl
xchg
xchg
movsl
hlt
enter
out
and
sub
mov
iret
scas
or
ffree
or
dec
mov
push
pop
inc
in
jle
hlt
idivl
jl
mov
out
push
stc
repz
sbb
mov
pusha
insb
jmp
sahf
pop
fidivrs
or
int
mov
jge
jns
xchg
ja
push
lock
jae
xlat
andl
push
pop
mov
popa
ds
fwait
das
push
pop
jns
mov
loope
pop
mov
syscall
lret
pop
xlat
es
add
jns
xchg
ja
pop
outsb
fistpll
sub
aas
in
push
pop
jg
imul
push
ret
std
and
jge
lds
dec
gs
jmp
cld
and
sub
mov
inc
imul
push
pop
lahf
pop
jle
sti
or
lock
iret
das
lock
cmpsl
into
jle
add
pop
push
loope
in
cmpsl
insl
xchg
sub
incl
mov
inc
pop
fsub
cltd
jg
mov
cmp
xchg
push
ficomps
push
push
cmp
test
inc
mov
ja
pop
jns
mov
das
sub
test
lret
xchg
das
add
sahf
push
cmp
fbld
lcall
jne
xor
dec
jg
pusha
push
fidivs
fistps
pop
and
in
jge
jns
aas
nop
or
notl
xchg
push
mov
movsl
loop
stos
in
mov
iret
adc
test
out
and
ja
iret
xchg
jg
xor
movsb
add
or
cli
in
xchg
add
and
lds
dec
mov
sti
test
pop
mov
sbb
dec
dec
mov
out
jg
fcoml
lret
lods
movsl
adc
or
jns
and
mov
iret
push
push
bnd
subb
icebp
sub
mov
sub
pop
pusha
sub
out
push
push
xor
insl
cld
fldt
push
sbb
in
in
ret
imul
lret
lcall
sbb
pop
xchg
jmp
mov
std
scas
cmp
add
jno
mov
mov
push
dec
and
pop
jg
cmpl
in
enter
pop
repnz
outsb
in
iret
lahf
lea
ss
es
sbb
stc
add
add
fidivrl
mov
fnsave
aas
jg
cmp
dec
data16
pop
mov
in
outsl
loopne
mov
out
insb
loope
dec
pop
jns
in
into
call
inc
fldenv
cld
mov
xchg
ja
cld
add
adc
movsl
push
cld
stc
and
push
xor
pop
adc
test
jle
push
push
mov
decb
dec
mov
xchg
adc
mov
cmc
in
push
pop
cmp
cli
and
xor
repz
jb
scas
mov
xchg
cmp
cmpsb
imul
adc
outsl
cmp
xchg
inc
lock
mov
scas
pushl
popf
rdtsc
test
or
lret
clc
ds
nop
outsl
jbe
xchg
ja
mov
jo
pop
inc
or
repnz
jnp
or
fcmove
out
push
jl
cld
stc
mov
and
ret
mov
pop
mov
jb
jg
scas
das
out
dec
mov
sub
inc
mov
mov
lret
push
insl
rcr
jmp
lahf
xor
std
or
shrb
sub
shll
and
stc
sahf
xor
mov
cld
jno
jne
lahf
aas
jg
fwait
js
cmp
test
scas
cwtl
out
icebp
repnz
inc
es
mov
lahf
ret
pop
pop
gs
adc
push
popf
daa
xor
shlb
mov
bnd
mov
mov
jg
jle
cwtl
icebp
sahf
pop
add
jmp
repz
lahf
add
hlt
jae
arpl
cld
stc
cmpsl
xchg
shrb
sbb
std
push
mov
push
lahf
push
cmp
push
clc
mov
bound
pop
pop
jns
mov
adc
mov
or
push
arpl
lock
xchg
mov
addr16
iret
jae
adc
lahf
incb
jl
push
mov
fmul
cmp
scas
iret
lahf
aas
jg
pop
jmp
xchg
jmp
cli
dec
inc
jns
xchg
out
bound
pop
seta
loopne
das
push
pop
shl
push
loope
add
push
mov
aas
jg
lods
mov
jecxz
cmc
das
sub
out
lret
iret
pop
lss
pop
lock
dec
aam
cli
in
jae
push
das
test
jmp
adc
cld
push
lret
ss
xorl
xchg
popf
out
jle
lret
iret
lahf
xchg
call
push
xchg
ljmp
call
pop
mov
mov
cmp
xlat
push
pop
mov
pop
xchg
jno
or
cmp
adc
jge
jge
mov
iret
dec
mov
add
ret
and
mov
aas
jg
cld
mov
mov
mov
outsl
or
ret
or
mov
lret
pop
fsubp
cld
stc
repz
ret
lods
or
js
sti
imul
inc
lahf
aas
jg
lahf
add
clc
jp
in
push
and
inc
adc
xadd
mov
push
and
inc
stos
dec
pop
jns
in
adc
jno
popa
into
addr16
mov
add
into
cmpsl
pop
dec
ficoms
jns
xchg
cmp
sub
movsb
push
pop
jns
fadds
adc
loop
out
lods
aad
add
jp
sbb
push
iret
test
push
pop
jns
int3
mov
mov
lcall
repz
negl
sub
or
dec
fld
gs
lret
rclb
add
push
shlb
into
test
call
push
gs
out
sahf
xor
xchg
push
inc
lods
pop
sub
jo
pop
pop
push
stos
xchg
push
pop
or
mov
fcoml
jbe
xchg
push
pop
jns
inc
lahf
test
test
xor
push
pop
jns
jbe
mov
cld
or
test
xor
aaa
mov
das
or
push
mov
xchg
and
push
ljmp
cltd
iret
mov
lahf
in
shrl
inc
enter
mov
jle
fnstenv
inc
fildll
scas
mov
jecxz
sarb
mov
mov
xchg
sarl
clc
aas
and
repnz
clc
jo
dec
mov
mov
aas
jae
xchg
ror
xorb
lahf
pop
loop
nop
lcall
outsb
test
lret
out
rorl
jecxz
pop
mov
jnp
cmpsl
scas
imul
in
out
cmp
out
mov
mov
int3
inc
leave
dec
pushw
pop
and
scas
xchg
mov
stos
pop
inc
pop
aas
mov
inc
push
mov
xchg
inc
test
iret
lahf
rclb
ret
xor
iret
les
bswap
or
cld
stc
repz
insl
out
or
lahf
aas
jg
sahf
push
mov
mov
add
adc
cmp
xor
dec
and
xchg
mov
movsb
lret
sub
call
xlat
jb
div
std
jno
das
daa
jne
dec
mov
repz
pusha
inc
gs
inc
arpl
mov
push
add
cld
or
mov
data16
les
mov
lahf
add
lahf
mov
das
mov
add
ja
mov
sub
popa
lds
stos
es
xchg
push
pop
icebp
and
inc
dec
lods
sub
cli
lretw
sub
out
hlt
sbb
hlt
lahf
out
mov
xchg
push
fiadds
pop
cs
sarl
sub
loop
adc
jns
scas
gs
pop
jb
pop
pop
sbb
pop
jns
xchg
loope
push
scas
mov
mov
inc
pop
mov
in
cmp
das
jle
cmpsl
jno
repnz
rclb
adc
mov
sub
or
dec
mov
jmp
xchg
push
loopne
out
lahf
lcall
loop
mov
sar
cld
cmc
push
std
cmc
aas
hlt
hlt
pop
sbb
sbb
lahf
pop
inc
scas
mov
jns
inc
xor
stos
stc
stc
repz
xchg
jne
shlb
pop
mov
and
xor
dec
pop
jle
sub
pusha
adc
jnp
inc
sub
std
adc
xchg
sub
shlb
xchg
xchg
loopne
jmp
das
rorb
ljmp
stc
loop
enter
and
mov
push
nop
hlt
data16
fdivrp
scas
movsl
das
out
scas
icebp
adc
and
mov
ffreep
das
or
adc
out
into
testl
repz
aaa
loop
jg
icebp
imul
lods
and
xor
push
lret
dec
loop
inc
mov
rcl
cmp
stc
mov
mov
xor
cmpsl
js
cli
cmpsb
push
sub
sub
inc
mov
add
sbb
mov
out
jge
pop
stos
mov
jne
xchg
push
pop
jns
fld
iret
les
xchg
dec
adc
pop
jns
imul
add
shlb
lods
pop
jns
xchg
dec
fwait
ss
aam
es
or
shrb
push
adc
sti
mov
pop
stc
repz
pop
sub
and
or
jl
cmpsb
mov
cwtl
adc
pop
notb
cmp
in
push
ficomps
pushf
xchg
jmp
sub
jb
ret
pushf
mov
loopne
fnstsw
pop
jle
and
es
gs
in
ja
stos
pop
cmpsb
xlat
movsl
testl
pop
jne
leave
lret
hlt
out
mov
out
push
stc
xor
divl
stc
sbb
adc
adc
addr16
or
out
push
outsl
ficomps
pop
stc
xor
dec
adc
lahf
aas
jg
roll
cmp
pop
iret
dec
lds
and
inc
in
add
aad
inc
popf
pop
cld
mov
jl
psubsb
cmp
push
pop
jns
loop
push
pop
popf
test
jg
lcall
mov
nop
std
adcb
mov
outsl
loop
lret
xchg
push
fimuls
pop
subb
lock
push
pop
jns
push
mov
jno
lret
sbb
and
push
pop
jns
xchg
cmp
sti
jle
sub
push
loope
das
push
xchg
pop
or
push
aad
sbb
mov
repnz
addr16
test
stc
push
das
mov
adc
cmp
xchg
pop
pop
sbb
out
lahf
aas
push
jecxz
jb
ja
mov
jnp
repz
addl
test
lahf
iret
pop
mov
mov
shll
pop
stos
popf
inc
outsl
mov
sbb
add
dec
jne
mov
pop
scas
outsl
push
inc
push
mov
push
pop
jns
bound
mov
inc
push
test
cmp
jb
xchg
xor
leave
lret
cmp
mov
scas
mov
outsl
push
outsb
ss
test
xchg
iret
hlt
fidivs
mov
lcall
popa
shl
mov
dec
xchg
push
stc
repz
sbb
pop
aaa
sbb
js
out
mov
jg
pop
fs
mov
inc
movsb
lods
out
mov
mov
lahf
mov
or
dec
pop
mov
fcomp
into
cmc
jecxz
pop
ja
jg
testl
jnp
imul
pop
pop
jns
xchg
sti
mov
fnstcw
mov
push
add
fmull
lret
mov
dec
add
xchg
jg
mov
adc
aas
ja
fld
pop
xor
and
lret
xchg
push
lahf
imul
movsb
dec
frstor
aas
jg
add
sub
loope
xchg
daa
ror
pop
movsb
das
mov
les
xchg
imul
cmp
out
lret
pop
jecxz
cld
cld
stc
xchg
or
mov
xchg
xor
mov
sar
ret
and
pop
dec
pop
repnz
fidivs
lret
xlat
les
daa
pop
repnz
fildll
lahf
and
adc
xor
inc
mov
call
shrb
lea
repnz
xchg
clc
out
fists
sbbl
dec
ret
xchg
insl
jns
mov
iret
mov
xchg
add
jnp
and
fsubs
push
inc
lret
xchg
icebp
inc
xor
pop
mov
repnz
sbb
jae
mov
push
loop
inc
mov
mov
push
mov
fnstsw
xchg
lahf
aas
add
mov
stc
adc
sub
in
fistps
dec
mov
xor
repnz
pop
cmc
cs
aas
mov
movsb
fdivrl
inc
cld
dec
es
mov
in
inc
addr16
out
lahf
aas
test
popa
pop
jae
outsb
mov
cld
stc
repz
cld
inc
pop
add
cltd
pop
filds
jg
pop
lret
scas
lret
nop
cmp
hlt
lret
frstor
jno
cld
scas
mov
addr16
cmp
or
xchg
mov
lret
sub
stos
mov
push
xlat
lods
jl
stc
rep
call
lretw
popa
xchg
cld
sbb
mov
pop
pop
in
repz
lahf
ja
or
push
lret
insl
mov
push
ds
stc
lock
inc
sub
cld
daa
xchg
and
lret
dec
or
rorb
mov
outsb
sub
cmc
scas
pop
jp
adc
dec
in
mov
enter
mov
imul
jo
stos
push
in
lret
sub
outsl
iret
shl
lahf
fwait
jge
ret
clc
xchg
cli
pusha
stc
jbe
mov
mov
pop
sub
cli
mov
mov
cs
adc
jns
lcall
cwtl
mov
xchg
repnz
jno
adc
pop
scas
adc
in
push
mov
outsb
push
mov
divl
repz
std
daa
aaa
jb
dec
xchg
jl
lock
jl
cld
scas
mov
and
cmp
lahf
aas
adc
or
pop
repnz
div
in
stos
ret
fcmovnbe
inc
xor
cltd
nop
fcomip
scas
loopne
push
repz
outsl
dec
cmpsl
mov
pop
rorb
xchg
es
jge
je
daa
out
jecxz
scas
mov
inc
test
mov
mov
fcomps
js
or
pop
scas
fstpl
je
jb
les
mov
jns
imul
out
jle
adc
cmp
pop
or
mov
xchg
xor
loop
xor
aaa
xor
lods
fs
outsl
int3
sahf
add
loope
sub
popf
mov
sahf
stc
stc
repz
outsb
clc
stos
push
mov
mov
int
mov
insl
add
iret
mov
xchg
ds
pop
scas
mov
aas
cmpsl
fsubrl
inc
mov
mov
jp
xchg
lahf
aas
jg
mov
cmc
les
mov
or
iret
int3
in
push
xchg
and
or
jle
repnz
in
mov
ret
or
add
cmc
mov
mov
or
mov
scas
jg
inc
shll
addr16
pop
repnz
or
ljmp
mov
xchg
pop
pop
dec
lret
xchg
ja
xor
or
xor
repz
xchg
scas
pop
inc
rorb
fisubrs
aas
jg
inc
mov
sbb
arpl
xor
aad
sahf
stc
loope
incb
jg
xchg
sub
cmp
push
int3
xchg
test
testl
out
fists
iret
mov
in
inc
xchg
sub
sbb
in
mov
and
loop
mov
sub
call
out
iret
lods
iret
aas
call
pop
aaa
jo
cmpsl
cmovs
jb
movsl
cmc
in
nop
in
out
push
inc
and
stc
and
dec
xchg
psubw
inc
pop
pop
sub
push
aaa
outsl
scas
jl
rcrb
jmp
and
xchg
in
out
or
inc
fstpl
add
rcl
imul
pop
pop
out
sbb
cltd
adc
out
xchg
sub
popa
das
popa
cmp
mov
xchg
iret
sub
pop
add
pop
sub
pop
and
loope
pushl
scas
mov
clc
cs
js
pusha
aaa
movsl
outsl
mov
lret
mov
iret
icebp
mov
or
repnz
sbb
mov
fs
stos
sahf
mov
push
rolb
or
mov
gs
lds
scas
mov
jnp
jbe
repz
push
sti
jnp
lret
xchg
sub
push
mov
jle
inc
testb
dec
mov
out
daa
xchg
adc
inc
fsubp
xchg
sub
fadds
push
xchg
push
sub
pusha
rcrl
pop
aaa
or
movsl
aas
shrb
lret
jge
and
scas
mov
and
dec
add
cmp
adc
lock
das
mov
pop
pop
jns
xchg
lds
lahf
xor
clc
jno
dec
enter
in
push
and
jb
adc
pop
in
insl
pop
and
push
pop
mov
pop
dec
cmpsb
sub
insl
cwtl
out
sbb
pop
jns
or
fsub
and
cmpsb
xacquire
or
jne
mov
xor
in
jmp
xlat
dec
jle
xchg
cmp
nop
add
stc
mov
push
dec
sahf
into
xchg
loopne
inc
dec
mov
cmp
nop
inc
add
stos
or
inc
fdivrs
pop
and
in
push
adc
decl
cmp
cmp
mov
iret
stos
out
push
ret
popa
jae
in
lahf
mov
jl
pop
into
push
push
in
push
sub
int3
filds
jns
or
push
pop
jns
inc
out
cmp
sbbl
aas
pushf
gs
js
cmp
lret
psubusw
jle
pop
loop
bound
xchg
das
das
scas
data16
and
addr16
lret
lahf
aas
out
fsubp
outsb
pop
cs
rorl
pop
insb
and
in
mov
mov
int3
pop
cmpsl
into
jg
cld
stc
cmc
iret
ljmp
fwait
and
or
out
lahf
aas
adc
adc
sub
in
inc
mov
repnz
repz
mov
pop
fcoml
rorl
fsubrl
xor
jb
push
movsb
sbb
add
mov
mov
cs
jbe
mov
fmul
imul
and
repnz
outsb
test
sub
add
iret
push
enter
jns
lods
pop
lds
outsl
out
xchg
jle
mov
sub
add
arpl
jl
xor
repz
mov
adc
mov
and
leave
inc
dec
outsb
lret
movsb
dec
mov
loop
push
jne
scas
jge
add
lret
push
pop
fdivrl
mov
lret
das
jl
jmp
rcrb
jnp
enter
out
jle
mov
sti
cltd
pop
dec
mov
cmp
lret
add
adc
pop
aas
inc
sahf
sbb
call
or
lea
add
mov
xor
push
sub
scas
mov
lods
mov
or
scas
movsl
pop
loope
sub
iret
decb
pop
mov
jp
inc
lds
pmaddwd
frstor
mov
stc
outsl
test
jae
push
mov
fdivrp
jb
insl
cwtl
xchg
out
xchg
scas
pop
sbb
xor
sahf
pop
inc
mov
xor
pop
jns
fstl
cmp
loop
jmp
dec
insb
clc
mov
push
sub
xor
adc
jno
and
dec
pop
sahf
sahf
bound
push
fdivrp
repnz
invd
in
pop
jo
inc
pop
jns
lret
xchg
aad
sahf
pop
cltd
loop
pop
pop
and
movsl
je
jg
dec
shlb
adc
jle
sqrtps
in
jns
repz
mov
ds
lods
fsubrl
pop
stc
jg
cs
in
in
mov
sbb
fisubrs
xchg
aas
push
pop
mov
in
push
ds
enter
ret
xor
mov
stc
repz
cld
fsubrl
aam
pcmpeqd
xchg
cld
sbb
lods
pop
icebp
jg
xchg
pop
push
mov
xor
pop
fidivrs
jg
movsl
mov
cltd
fmull
xchg
lahf
test
mov
inc
cmc
add
out
push
int
in
jns
je
cld
jb
inc
push
fisubrs
mov
fisttpll
cld
stc
repz
movsl
rcrl
mov
cmp
mov
add
adc
iret
or
pop
paddb
repz
outsl
push
jbe
adc
ljmp
addr16
aas
jg
inc
in
stos
or
mov
push
in
xchg
xchg
scas
in
add
mov
jns
in
aas
dec
outsl
mov
cmpsl
adc
rcrl
pop
jns
ja
xor
pushf
mov
inc
adc
iret
lahf
aas
push
cmp
cmp
out
stc
movsl
icebp
lret
rolb
xor
mov
mov
fstl
mov
ja
lea
mov
popf
subl
lcall
imul
xor
fidivs
cmpb
aas
jg
jns
xchg
hlt
es
inc
mov
hlt
xchg
out
sbb
xchg
and
stc
cltd
mov
push
mov
fistpl
pop
sbb
ja,pn
sub
out
sub
outsl
jle
out
cld
stc
repz
pop
inc
or
or
adc
lahf
aas
jg
in
adc
push
cmp
cmp
repz
jbe
jge
mov
inc
mov
inc
loopne
inc
xor
pop
mov
add
add
sub
dec
iret
popa
sub
in
ja
cltd
bound
mov
in
push
pop
jo
test
mov
popf
mov
xchg
push
pop
jns
test
or
emms
loopne
popa
lret
lret
push
pop
mov
lahf
adcb
out
jle
repnz
loope
shr
add
iret
fstps
iret
scas
mov
mov
dec
pusha
cld
stc
repz
inc
daa
or
pop
aad
sub
clc
pushf
mov
jg
jno
popf
dec
fucomi
mov
nop
out
ror
out
and
xchg
repnz
or
xchg
push
dec
das
mov
sarb
and
push
test
push
ja
lahf
aas
aas
adc
cmp
imul
out
in
iret
and
fs
add
movsl
frstor
mov
call
sub
cmpsl
scas
dec
mov
xchg
sub
cmpsl
inc
repnz
mov
stc
mov
or
cld
leave
and
jns
icebp
sbb
repnz
xchg
lahf
jg
fstpt
and
jns
fldl
outsl
push
std
pop
sub
scas
sub
cmp
aas
dec
pop
mov
mov
in
jp
call
mov
mov
dec
mov
fiadds
clc
shlb
jg
ds
cmp
bound
push
fisubs
clc
arpl
mov
lret
jle
xorl
pop
push
pop
lock
subl
mov
test
add
push
lret
cmp
xor
cmp
cld
div
in
sub
fnsave
lock
or
ficomps
aas
cli
or
idivl
push
iret
lret
test
push
les
scas
mov
bound
sub
mov
mov
js
cli
xchg
repz
mov
repz
adc
jg
cld
stc
aas
in
popf
push
sub
xchg
rep
popf
sbb
jne
outsb
call
bound
push
push
pop
jns
enter
cmp
or
dec
mov
mov
xor
mov
jg
je
out
test
pop
outsl
loop
arpl
mov
cmp
inc
mov
shr
testl
pop
jle
push
xchg
sub
pop
cld
push
cli
dec
inc
rclb
push
pop
cwtl
test
outsl
in
lahf
aas
jg
mov
insb
pop
jl
stos
xor
xchg
mov
subb
jns
jl
mov
push
inc
out
imul
pushl
sahf
inc
aaa
jge
das
pop
lods
jg
inc
lahf
ret
adc
call
or
mov
scas
stos
das
inc
sahf
je
jns
cmp
push
aas
sub
popa
ljmp
push
pop
add
sub
jl
xchg
jno
shrl
pop
jns
aam
add
bound
outsl
mov
and
rcrl
jmp
mov
out
clc
in
sub
jo
repnz
add
dec
call
in
sub
aas
xor
dec
fimuls
sti
scas
mov
jecxz
das
cwtl
test
stos
pop
mov
add
sub
and
pop
out
cltd
push
cmc
lret
xchg
ja
xorb
mov
push
or
stc
add
iret
cmp
pushf
test
orb
in
aas
sbb
jg
add
stos
enter
mov
lahf
or
gs
and
dec
push
fnstenv
sti
in
jecxz
loope
xchg
dec
std
sub
insb
push
jg
lret
mov
inc
jne
fcompl
popa
das
add
lret
mov
sbb
repz
or
inc
pop
test
add
cld
push
jp
sbbl
iret
lahf
aas
jg
jg
sbb
ret
leave
mov
je
stos
xor
pop
xor
mov
lret
pushl
repnz
loopne
jle
out
cmp
cld
mov
iret
inc
xor
test
sbb
pop
jle
mov
push
mov
ljmp
inc
xor
pop
dec
mov
cld
stc
mov
test
push
mov
in
ja
aad
xchg
lds
cmc
push
out
mov
push
pop
jns
cmp
cltd
adc
jge
in
lods
jnp
sbb
jle
push
sub
push
and
das
jge
or
mov
xchg
aaa
shrb
or
add
test
in
ficompl
test
sbbl
mov
in
push
mov
shlb
lret
xchg
push
pop
shrl
daa
sbb
sub
xchg
outsb
push
imulb
lea
rsm
mov
das
aas
jg
cmp
hlt
adc
sbb
push
xlat
repnz
xchg
mov
orb
xchg
xchg
xor
test
inc
adcl
iret
divps
xchg
pop
xchg
rol
sbb
mov
pop
ds
add
out
lahf
aas
popf
push
xor
outsb
pop
mov
mov
repz
jae
movl
ja
loop
sbb
popa
iret
lahf
aas
jg
jmp
rcrb
or
repz
out
mov
xlat
and
jle
mov
pop
movsl
mov
lahf
aas
cmp
or
in
cli
repnz
and
jnp
pop
pop
scas
mov
wrmsr
mov
push
rorl
push
jle
mov
inc
mov
mov
out
lahf
out
lock
loope
bswap
clc
push
hlt
daa
pop
cld
stc
sub
pop
mov
movmskps
sbb
sub
jg
icebp
mov
lcall
idivl
hlt
mov
jb
jg
cld
into
or
lcall
xchg
dec
in
fs
out
lahf
aam
js
pop
inc
mov
jmp
jg
cld
stc
xchg
inc
les
repz
pop
push
push
fwait
test
lahf
aas
sub
push
push
cmp
jns
jnp
repz
data16
jns
in
dec
add
das
repnz
ss
iret
or
mov
xor
sti
or
fistps
fcoml
outsb
add
imul
sarb
cmp
fstpt
in
sbb
cmp
mov
adc
aas
jg
inc
add
pop
shlb
cmc
lret
fstl
jg
fisubl
sub
fadds
add
aam
dec
xchg
xchg
push
ficomps
xchg
shlb
mov
psubusb
scas
repnz
jo
nop
dec
jbe
xchg
push
out
popf
mov
int3
adc
sbb
xor
add
jmp
aas
jp
xchg
fildll
mov
iret
rcl
in
cli
fiadds
loope
mov
push
xchg
jnp
frstor
cld
fstpt
ror
ror
iret
testl
jl
pop
les
xchg
bound
aam
pop
jns
push
mov
fdivp
imul
loopne
das
xchg
jb
loop
ret
shl
cmp
aas
in
aas
mov
pop
jle
fnsave
jg
mov
outsb
std
pop
xor
pusha
inc
cmpsl
add
jnp
jae
lret
jmp
outsl
lret
mov
mov
mov
add
xchg
repnz
popf
ret
mov
testl
lock
adc
jecxz
imul
mov
aas
daa
cmp
xchg
mov
pop
jns
pop
std
popl
incl
inc
sub
mov
jne
dec
cli
jnp
sub
les
push
pop
inc
ret
push
sahf
push
inc
xlat
cmp
xchg
ja
clc
stos
scas
mov
jmp
cld
stc
xor
or
leave
call
sub
push
out
adc
adc
in
add
or
or
rcr
scas
mov
insb
push
pop
jns
mov
mov
inc
jmp
sbb
cmp
iret
pop
and
xor
pushf
mov
outsb
fcomps
cmp
aas
pushl
out
stc
dec
orb
adc
xchg
iret
lahf
icebp
clc
loopne
pop
dec
sub
and
adc
mov
sub
leave
shlb
repnz
int
repnz
mov
les
add
jmp
and
or
inc
in
das
lahf
pop
sahf
mov
sbb
fbstp
push
pop
jns
cmc
pop
and
test
push
je
cli
imul
sub
sbb
jg
push
pop
jns
xchg
pusha
pop
mov
cld
cld
pusha
ret
outsb
loope
xchg
ja
mull
popf
lahf
mov
jle
jge
enter
jno
adc
out
rcrl
mov
jae
cmp
cli
in
sub
rcll
into
in
out
out
adc
andb
sti
sar
mov
outsl
jbe
ds
insb
mov
repnz
bnd
or
dec
and
shrd
out
pop
adc
pop
fisubrl
fidivrs
icebp
in
das
insb
lock
and
es
pop
xor
js
and
int3
pop
adc
inc
push
pop
sub
inc
xor
mov
cmc
ja
scas
mov
lret
inc
pop
xchg
add
fisubrs
sub
data16
mov
in
imul
push
sub
and
pushf
pop
push
insl
inc
xor
push
xor
mov
addb
fistpll
pushf
or
pop
test
push
pop
jns
int3
and
out
gs
inc
inc
pop
mov
adc
in
xchg
clc
or
inc
jnp
repz
lahf
je
inc
ds
stc
xchg
mov
cmpsb
jg
cld
stc
ror
pop
push
in
mov
pop
sbb
cmp
out
lahf
aas
ds
popf
iret
loope
cmpsb
stos
insb
mov
push
cli
in
xor
lock
mov
jg
cld
into
imul
ret
mov
jg
repz
lahf
lcall
pop
mov
push
adc
jg
cld
stc
testl
adc
jmp
iret
lahf
aas
lods
cwtl
stos
mov
mov
sti
jnp
repz
jmp
imul
mov
aas
fsub
push
in
das
inc
inc
cltd
sar
sbb
inc
repnz
xchg
sub
in
lahf
add
insl
cmpsl
xchg
sub
mov
imul
out
out
lcall
fbstp
add
pop
sub
or
mov
adc
call
lret
sub
sti
bound
mov
mov
jle
shll
fcoms
or
cmp
iret
lahf
aas
aas
jle
and
rorl
cld
or
cld
stc
repz
pop
fisubrl
push
adc
test
mov
fld
das
jbe
repnz
push
sub
pop
jns
xchg
std
imul
mov
mov
fidivl
aas
aas
shlb
mov
xchg
mov
stos
jns
pop
jno
stos
lahf
lods
pop
mov
pop
xchg
or
pop
stos
and
arpl
pusha
sub
aam
jbe
mov
mov
mov
sub
sbb
in
or
jl
ja
sbb
fidivrl
pop
sarl
xchg
push
add
sub
xor
xchg
push
pop
dec
and
cmc
iret
mov
push
mov
data16
popa
jb
out
cmp
and
add
sbb
sarb
pop
shlb
scas
clc
cltd
stos
sti
jg
cld
stc
push
inc
mov
call
push
pop
mov
lret
ds
daa
push
fadd
in
fisttps
mov
sti
and
in
push
cwtl
pop
mov
mov
mov
ret
push
arpl
adc
mov
dec
xchg
movsl
or
mov
xchg
lods
mov
mov
pop
xchg
std
mov
mov
dec
repnz
fistpll
push
adc
lret
mov
xchg
rcrl
les
cld
das
scas
mov
adc
clc
repnz
mulb
iret
lods
sub
xor
shufps
scas
loope
mov
fstpt
fcmovne
sub
jnp
pop
jge
icebp
jae
pop
sub
mov
insb
mov
sub
in
test
xchg
and
mull
cld
cld
into
ja
dec
std
andl
jg
cld
stc
out
test
add
jno
sub
pop
push
adc
iret
lahf
aas
aas
and
scas
insl
push
in
ret
sbb
sbb
jg
pop
cmp
sbb
jno
mov
aad
in
sub
fsubs
data16
xchg
pop
scas
mov
push
scas
stos
gs
cwtl
adc
lock
fildll
or
adc
jg
mov
mov
cld
stc
adc
andl
incb
xchg
and
push
addb
add
lahf
aas
push
dec
aad
and
mov
mov
cli
in
in
or
cs
daa
fsubs
mov
test
cld
icebp
sub
lret
pop
xor
mov
out
cmp
mov
lock
dec
cld
stc
repz
and
shr
fnstcw
sti
cmp
aas
jg
xor
adc
inc
jbe
stc
repz
lcall
dec
es
stc
imull
push
pop
jle
add
mov
pop
mov
lahf
pop
sahf
jg
out
pushf
sahf
movsb
imul
ficoml
jns
insl
xor
iret
mov
mov
jb
cmp
xchg
cmpsb
mov
jne
add
aas
sbb
pop
mov
pop
mov
push
das
andl
aas
cmpsb
cli
ds
data16
dec
mov
jae
xor
insl
adc
sub
jg
leave
iret
les
or
cld
stc
mov
out
mov
lret
sbb
iret
lahf
aas
jg
dec
adc
fs
lock
stc
repz
mov
std
xchg
pop
mov
insl
or
dec
push
jg
mov
outsb
test
ficompl
and
push
and
in
out
xchg
sbb
lret
sbb
stc
repz
popa
les
jle
loop
jp
mov
aas
sub
pop
outsl
dec
sub
fbld
sub
icebp
dec
test
or
sub
arpl
outsl
leave
data16
aad
scas
mov
lret
imul
xlat
fdiv
outsl
jecxz
pusha
adc
nop
cs
cld
mov
push
cmp
or
mov
das
fbstp
sub
lcall
jns
jmp
enter
mov
sub
insb
mov
cwtl
icebp
mov
dec
aam
or
adc
sub
out
adc
pop
sbb
iret
insl
xchg
push
pop
stc
popf
popa
jmp
push
test
dec
mov
lret
jmp
pop
push
adc
aam
pop
jle
cld
and
into
cwtl
insl
in
je
or
iret
aaa
aaa
mov
jl
gs
mov
lret
out
push
xlat
or
cltd
cmp
out
repz
iret
lahf
aas
loope
lret
push
fisubrs
xchg
xor
popf
push
cmp
out
inc
nop
sub
clc
mov
repz
jns
mov
cld
in
inc
clc
mov
std
mov
sub
push
mov
sbb
xchg
sti
fmull
out
lahf
aas
scas
shlb
scas
adc
dec
fdivr
cld
stc
repz
sub
jo
mov
das
mov
push
mov
aas
mov
dec
and
repz
lahf
sti
test
negl
xchg
in
add
int
cld
or
repnz
callw
push
fs
inc
aas
mov
imul
mov
lret
lahf
aas
pop
ja
in
jae
inc
iret
cmp
out
pop
ds
mov
fidivrs
mov
cld
lcall
or
lahf
aas
jg
inc
shr
lret
lods
scas
js
xchg
in
ja
repz
jb
lret
and
je
cs
inc
out
out
lret
xchg
in
and
adc
shll
leave
or
mov
pop
cmp
mov
je
mov
aas
jno
sub
rorl
jb
test
push
jl
movsl
xchg
jg
pop
xor
and
dec
cmp
dec
cld
std
pop
push
out
cmp
scas
lahf
dec
xlat
rcrb
pop
adc
repnz
pop
mov
lock
repnz
dec
sbb
cmp
and
test
sub
sub
mov
mov
sti
cmp
jno
mov
xchg
orl
lret
jbe
mov
movsl
xor
lret
scas
ds
stc
mov
sbb
es
adc
in
lret
mov
out
imul
mov
aas
jg
js
lock
lods
lock
lahf
inc
push
scas
push
xchg
pop
rclb
push
movsb
lods
jo
fsubp
out
icebp
jmp
lahf
adc
inc
dec
push
xchg
add
sub
pop
mov
pop
les
lods
ja
cmp
fcmovne
iret
lahf
aas
mov
mov
daa
mov
loope
lock
mov
sbb
stc
ret
comiss
mov
int3
into
and
rclb
dec
mov
ret
sbb
bound
movsb
push
pop
jns
push
ss
dec
aad
mov
cmpsb
cmp
pop
cmc
lret
xchg
out
sbb
shl
lods
mov
shufps
int3
or
stc
rep
ljmp
inc
cmpsl
bound
cld
mov
dec
ss
lods
stos
mov
iret
lahf
ret
lcall
jecxz
outsl
loope
xlat
dec
jg
mov
xchg
cmp
clc
in
pop
pop
pop
ss
ret
sub
popf
test
syscall
xchg
shrl
cmp
test
cwtl
or
scas
mov
pop
sub
into
and
lea
clc
enter
int
mov
dec
fnstsw
cld
cmpb
cmp
outsb
icebp
pop
xor
cmp
add
stc
sahf
xchg
mov
dec
sbb
pop
add
rclb
dec
cmp
repnz
dec
sbb
mov
jno
mov
sub
fld
adc
adcb
ja
cli
aad
jl
std
add
jg
cmp
inc
lret
leave
movsb
fisubl
clc
repnz
and
repz
ds
pop
xchg
jge
adc
call
iret
sub
dec
xor
hlt
push
pop
jns
inc
shrl
mov
pop
icebp
adc
lret
xchg
inc
pop
mov
repz
pop
into
inc
pushf
int
pusha
lock
jno
dec
or
xor
mov
sub
repz
into
fcoms
and
fbstp
push
jg
cld
stc
mov
or
loope
jbe
dec
insl
inc
pop
lahf
out
lahf
aas
outsl
push
hlt
xor
push
inc
lock
and
mov
lds
jge
stc
repz
lock
xlat
xchg
arpl
data16
sbb
cltd
lahf
aas
jg
sub
sbb
mov
hlt
inc
loope
repnz
lret
iret
push
adc
xor
shlb
mov
scas
daa
test
jnp
ja
cmp
add
jg
jns
inc
cmp
jns
dec
xorb
or
and
jns
stos
mov
rclb
fisttps
stc
repz
pop
sub
pop
or
stc
cld
fwait
js
or
les
aas
xor
jmp
xor
je
movsb
jbe
xchg
xchg
ja
push
mov
mov
loopne
aas
pop
pop
mov
push
mov
inc
loopne
iret
lahf
mov
scas
pop
or
imul
repz
jmp
ret
push
ds
pop
nop
sub
jle
push
jmp
xor
push
fwait
jns
pop
into
pop
enter
push
pop
dec
clc
cltd
or
rclb
sbb
xlat
and
fldt
push
iret
lahf
stos
push
mov
and
imul
ss
lods
sarl
cmc
hlt
mov
fcoms
out
lahf
aas
mov
adc
push
lods
out
xor
stc
stc
repz
jae
cli
sbb
pop
dec
pop
insb
inc
mov
sahf
push
cltd
mov
shll
iret
lahf
mov
mov
mov
jl
cld
stc
leave
jno
sbb
sub
dec
mov
sbb
fs
dec
jp
fwait
cmp
mov
xchg
inc
mov
pop
pop
pop
mov
cmp
cld
pop
jg
sub
call
cli
in
xchg
pop
add
inc
push
popl
jns
xchg
testl
in
mov
mov
ficomps
dec
aaa
leave
into
jl
sub
test
or
cmpsl
leave
pushf
mov
scas
stc
lret
jg
les
insl
aad
push
mov
iret
pop
repz
shrl
test
popa
hlt
bnd
cli
outsl
xchg
ds
jns
lahf
iret
lahf
pop
lret
pop
push
and
inc
or
jg
xchg
jg
imul
add
lock
lods
and
loopne
loope
adc
or
incb
jns
push
xor
push
into
cmpsl
lahf
mov
mov
aaa
sbb
adc
jg
out
mov
ja
push
hlt
jno
shll
jle
adcb
inc
pop
aas
pop
scas
mov
aas
in
iret
dec
hlt
daa
mov
mov
push
out
das
lods
adc
mov
incb
push
xlat
pop
jns
in
mov
push
mov
cli
loop
lcall
push
js
jmp
sub
jnp
pusha
iret
add
loop
mov
push
fldl
xor
pop
dec
out
inc
je
out
pop
jns
xchg
and
mov
jo
mov
in
int3
out
adc
sub
repnz
fwait
shlb
loop
fidivrl
lea
and
out
insb
shrb
cmpsb
in
repz
add
test
dec
jl
cld
stc
xor
sbb
xor
loope
xchg
ja
or
stc
decl
adc
test
test
add
je
ja
push
mov
int3
dec
divl
sbb
pop
call
fcmovnbe
cmp
insl
mov
xor
push
pop
jns
xchg
notb
fsubs
adc
lret
cmp
mov
cli
pop
std
repnz
pop
cs
dec
popa
cmp
dec
rclb
sub
cmp
frstor
xchg
ja
jo
mov
xchg
int
out
and
cld
stc
mov
push
outsl
jp
push
dec
dec
push
jge
stc
sti
iret
lahf
aas
jg
fs
shrl
push
adc
push
add
mov
inc
loopne
cld
stc
movsl
push
or
adc
aad
insb
jp
dec
push
sahf
out
lahf
aas
push
mov
sub
or
hlt
repnz
push
mov
cmpb
cld
int
pop
insl
adc
aam
out
dec
inc
sub
loop
loopne
ror
fsubrs
shl
shl
sahf
push
repnz
mov
mov
mov
out
cld
scas
arpl
in
sbb
sti
xor
and
pop
daa
cmp
imul
ja
clc
xchg
pop
dec
add
jg
mov
fs
mov
fldl
add
mov
mov
pop
cmp
adc
in
fldenv
insl
pop
into
sub
fs
ret
scas
dec
call
mov
adc
jne
repnz
dec
inc
lret
xor
rcr
ljmp
scas
mov
cmc
or
int
rcl
mov
push
lahf
ss
das
movsb
insb
xlat
mov
push
je
repnz
subb
sub
je
mov
mov
sahf
pop
pop
das
add
into
push
jg
cld
pop
outsb
ds
sub
mov
lcall
outsb
pop
sub
mov
add
ja
gs
dec
jb
xor
call
lea
pop
jns
xchg
fiaddl
sub
xor
push
jb
popf
pop
sub
and
sub
repnz
cs
lret
lahf
aas
sub
jnp
jne
fnstcw
in
rcrb
ret
add
clc
mov
das
fisttpl
pop
out
jle
pop
jg
scas
test
cwtl
insl
test
sbb
loopne
dec
leave
jg
jmp
jnp
cmp
test
dec
vrsqrtss
pop
out
lcall
movsl
and
push
lahf
aas
jg
ficoms
adcb
xchg
repz
mov
mov
sub
sub
lcall
pop
or
xor
enter
pop
aas
jne
xchg
pop
mov
mov
scas
mov
pop
outsb
aam
repnz
pop
call
in
in
xor
mov
jae
sub
rcr
andl
pop
inc
addr16
mov
test
pop
jle
cld
imul
clc
push
mov
jnp
cwtl
scas
ja
movsl
push
das
out
jle
stc
sbb
in
mov
iret
pop
in
out
jne
popf
stc
in
mov
and
xor
cmp
pop
or
push
mov
movsb
pushf
xchg
repz
fistps
aas
lds
movsl
adc
lret
sub
or
mov
hlt
push
mov
icebp
in
ljmp
cmpsb
pop
mov
pop
mov
push
mov
mov
popa
movsl
imul
das
pop
or
lcall
and
sti
in
mov
popaw
sub
xchg
xchg
jae
xor
xchg
sub
ret
aaa
dec
fs
and
cmp
inc
shlb
lahf
or
cli
scas
mov
iret
lahf
out
adc
lods
and
std
jb
dec
repz
xor
push
not
sbb
pop
push
inc
mov
pop
scas
or
das
pop
shr
xor
jo
aaa
xor
repz
push
or
push
mov
cld
mov
push
mov
mov
leave
mov
lahf
aas
jg
cmp
inc
rolb
orb
data16
imul
xor
sbb
stc
xchg
push
cmp
pop
outsb
lahf
adc
xchg
push
insb
push
aas
jg
cld
and
loopne
sarb
sbb
cmp
out
lahf
pop
sub
sub
scas
mov
enter
mov
mov
or
imul
fadds
ffreep
scas
mov
scas
jns
cmp
mov
add
test
out
gs
scas
mov
sbb
dec
popa
dec
into
xor
jns
pop
scas
mov
push
fildll
pop
movsb
cmp
add
roll
jb
das
sub
or
sbbl
imul
fwait
adc
addr16
jmp
aas
jg
cld
adc
sbb
fisubs
or
push
repz
lahf
xor
jae
lret
cmp
std
lds
mov
sahf
in
jb
and
loop
pop
jg,pt
decb
lret
pop
popa
jl
das
dec
push
adc
xchg
push
or
mov
inc
clc
repnz
and
pop
inc
adc
mov
or
mov
cli
pop
mov
test
jl
adc
loopne
jb
pop
inc
adc
pop
lcall
jae,pt
jo
push
enter
mov
cli
adcb
inc
cli
imul
cmova
ljmp
jns
fiadds
jmp
das
jg
mov
xor
int
lcall
aas
xchg
jl
mov
mov
insb
jmp
lret
iret
lahf
in
jne
inc
xchg
push
in
adc
call
xchg
ja
pop
das
xor
int
sti
and
lret
add
mov
cmpsb
repnz
lcall
mov
repz
ror
inc
adc
scas
mov
sub
lret
pop
out
xchg
fistpl
dec
ret
xor
lret
sub
icebp
fwait
jae
loopne
dec
icebp
aam
repz
call
xchg
push
ret
mov
lock
out
add
and
sahf
push
mov
push
mov
jb
pop
jecxz
cmp
mul
out
cmp
push
xchg
pop
int
insl
rsm
or
push
jl
or
das
lods
inc
das
jo
push
movsb
repnz
pop
jle
rol
out
fsubr
jmp
cmp
jns
jno
lods
add
das
inc
jns
sbb
xchg
push
pop
and
pop
ljmp
pop
pop
jns
cs
add
or
sar
repz
sbb
sti
jp
jns
jge
inc
jle
out
push
stos
idivb
inc
or
cmp
mov
jle
add
or
repnz
lret
iret
or
inc
call
iret
mov
lcall
dec
inc
or
movsl
pop
pop
mov
scas
mov
data16
repz
call
mov
inc
rcrb
in
cwtl
stc
xchg
mov
roll
in
mov
cld
lahf
adc
cmc
mov
lds
inc
xor
lahf
int
fidivs
dec
ret
out
into
rcrb
cmpb
push
jp
push
pop
jae
xchg
mov
mov
jne
test
shld
ja
repnz
mov
dec
sbb
inc
dec
jbe
jb
xchg
in
or
pop
es
das
ja
mov
xor
cs
sti
in
lret
mov
xchg
or
mov
imul
ss
cmc
push
das
scas
mov
ljmp
jno
cld
mov
rcrb
ja
jg
dec
dec
mov
cmpsb
xchg
pop
and
dec
scas
mov
jb
mov
or
mov
sub
jp
cmp
inc
aas
sarl
jae
jb
xchg
adc
xorl
xchg
repz
cli
mov
negb
lret
mov
lds
cmp
repz
in
sbb
mov
cld
pop
cli
repnz
inc
cmp
scas
lahf
cwtl
pop
adc
lea
pop
jne
ret
fcmovu
out
in
iret
push
xchg
push
cmp
dec
dec
dec
insb
das
pop
jg
test
jl
test
push
lret
mov
repz
jmp
push
cmp
incl
sub
cmp
adc
cmpsb
adc
fcmovbe
cli
in
push
outsl
aaa
loopne
push
push
or
lods
pop
cld
sahf
add
frstor
dec
das
loopne
pop
jns
sub
out
adc
adc
hlt
xor
pop
jns
xchg
das
ficoml
push
lods
mov
jl
jns
xchg
push
jp
inc
bound
ljmp
pop
cmpsl
les
inc
scas
int3
mov
xorb
fs
lahf
dec
xchg
inc
mov
scas
mov
int
sub
jne
scas
mov
sbb
fcmovbe
cmp
lret
inc
in
out
lods
nop
pop
jle
lahf
aas
aas
aam
scas
cmc
outsb
lahf
and
or
iret
imul
fs
or
xor
jg
cld
loope
fdivrp
jge
pop
sbb
aaa
fisttps
lret
lahf
push
mov
std
mov
stc
repz
movb
pop
hlt
pop
pop
lods
mov
decb
sub
xorl
icebp
aas
sbb
inc
dec
mov
mov
fnstcw
lret
sub
ja
jg
cld
jle
out
test
dec
inc
xor
clc
repz
lahf
xchg
inc
inc
jb
sbb
loop
mov
data16
cld
stc
mov
cltd
adc
adc
out
js
and
orl
xchg
stos
push
xchg
or
aas
jg
pop
out
aad
daa
mov
xor
repz
push
inc
pop
ljmp
in
lock
scas
cld
inc
lods
dec
push
push
add
cli
mov
adc
xor
xchg
inc
lds
xchg
push
fwait
or
cld
stc
je
loop
adcl
fbld
in
add
scas
push
pop
pop
pop
xchg
push
pop
jns
pop
negb
clc
push
jmp
push
loop
shlb
out
rclb
out
mov
repz
jb
addr16
adc
or
gs
xchg
ja
jo
jg
stos
ror
sub
mov
sub
jae
or
cmp
fst
sbb
stc
repz
test
jb
push
into
mov
test
cld
std
dec
xlat
pop
and
jg
cltd
out
add
xchg
sub
push
xor
lret
inc
mov
repz
scas
adc
sub
aas
mov
loope
push
lods
dec
mov
out
lret
mov
pop
out
pop
mov
xchg
in
cwtl
pop
fwait
mov
stos
iret
mov
iret
repz
jns
lret
mov
punpcklwd
pop
mov
fucom
xchg
lahf
jbe
lock
cmp
mov
outsl
sarl
mov
out
lahf
mov
fstpl
std
orb
mov
scas
mov
mov
push
and
clc
inc
cltd
ss
loope
sub
and
cmp
jle
inc
cmp
jp
lret
push
out
xchg
iret
in
outsl
add
xlat
fisttps
cmpsb
ss
sub
mov
popf
sub
ds
inc
mov
mov
fidivrs
push
mov
cmpsl
paddusw
scas
mov
in
push
loope
mov
sbb
lahf
test
sub
jae
fs
cld
stc
repz
daa
gs
jp
mov
in
jae
lret
lahf
aas
jg
and
cmp
mov
jne
lret
out
out
and
aam
fsts
mov
mov
int3
outsl
sbb
push
iret
and
or
jge
push
out
leave
mov
lcall
cmp
dec
pop
sahf
out
xchg
pop
xorl
out
mov
popa
out
push
test
cmp
repnz
jnp
jns
rol
ret
xchg
jae
add
outsb
xor
add
push
decl
hlt
in
je
jno
repz
cld
cltd
clc
mov
mov
mov
lahf
aas
jg
inc
mov
out
in
fcmovbe
jo
push
cmp
dec
filds
add
daa
pop
iret
lahf
aas
mov
add
cltd
xchg
lea
or
jns
in
jge
mov
ljmp
mov
jl
sbb
outsb
lods
push
dec
icebp
aaa
out
sub
pushl
dec
sub
add
out
scas
mov
addr16
mov
xlat
ds
mov
lret
das
es
mov
jge
adc
lret
mov
data16
jg
popa
push
lret
sub
mov
cmp
xchg
mov
ja
insb
sbbl
nop
jl
dec
scas
and
jnp
pop
xor
lods
pushf
xchg
insb
sbb
aas
mov
cld
testl
pop
push
lahf
pop
loopne
filds
sub
movsl
and
push
aam
scas
mov
push
stos
push
lds
repz
jmp
ficoms
imul
push
inc
fwait
sub
lret
in
rorb
lahf
aas
mov
push
jno
popa
leave
cltd
adc
jns
fstl
pop
jecxz
ja
mov
adc
xchg
push
pop
test
or
js
cmp
fldl2t
in
push
pop
pop
jns
xchg
loop
jns
dec
in
ss
inc
mov
out
iret
sbb
out
aas
into
push
rclb
mov
scas
mov
mov
lret
out
mov
sar
mov
jnp
or
ret
ret
scas
testb
scas
fidivrs
lahf
and
xchg
pop
loop
xchg
lahf
aas
jg
cltd
sub
frstor
pop
lods
mov
aas
in
fistpll
sarb
jl
nop
fcomps
mov
inc
mov
mov
adc
push
fdivrp
mov
add
iret
mov
fsubrl
jns
xchg
test
fistps
adc
mov
pop
adc
push
imul
push
test
or
xchg
push
pop
xor
ljmp
mov
pop
jns
popl
cwtl
sbb
xor
out
xchg
cmpps
test
imul
iret
sub
push
movsb
inc
and
stc
xchg
shll
lret
out
fsubs
adc
insb
scas
mov
xchg
mov
xchg
fisubs
addr16
repnz
iret
popl
mov
sub
leave
xlat
aaa
mov
or
lahf
aas
jg
and
mov
in
add
repz
xchg
sub
xchg
lock
xor
jle
repnz
add
jg
cld
pop
and
lcall
adc
dec
fists
mov
mov
lret
jg
jbe
dec
ljmp
cmpsl
mov
pop
insb
clc
pop
fs
arpl
cmpsb
mov
cmp
test
iret
lahf
aas
mov
int
out
sub
cld
stc
repz
pop
fldt
add
cld
and
sub
jle
xor
push
das
inc
mov
scas
mov
xchg
lock
pushf
jge
fcoml
xchg
sub
mov
dec
inc
jg
jg
ds
cmp
xor
repnz
aas
mov
mov
ds
stos
cltd
scas
dec
stc
lret
mov
inc
push
adc
pop
scas
mov
ficoml
mov
jmp
fldt
dec
cmc
repnz
lret
mov
mov
pop
cmpsb
and
xchg
jle
add
xor
or
mov
iret
lahf
aas
or
cmp
icebp
mov
jg
mov
cld
stc
repz
cmp
es
xchg
cmp
popa
sbb
in
lahf
aas
jg
fs
fmuls
xlat
add
test
sbb
icebp
scas
call
repnz
fdivrp
mov
pop
inc
das
jg
ficomps
les
scas
pop
les
jne
pop
lret
repz
mov
pusha
int
js
movsb
cld
pop
cli
and
jp
push
fbld
xchg
ja
jl
cmp
test
aas
insl
jo
test
mov
popf
divl
pop
pop
jle
add
pusha
lret
adc
or
mov
ja
mov
les
inc
push
mov
or
pop
mov
jge
jmp
bnd
or
jns
inc
jb
insb
and
inc
dec
jg
dec
addb
scas
cs
lods
pop
cmp
faddl
loope
loope
cli
jb
pop
xor
fisubl
hlt
repnz
sahf
jb
mov
les
scas
cmc
jecxz
pop
leave
lock
inc
inc
and
outsb
aam
pop
mov
repz
inc
outsl
in
xchg
outsl
lock
mov
jbe
call
imul
pop
adcb
in
jge
cmc
fiaddl
inc
addl
test
lret
xchg
xor
int3
sbb
push
test
mov
xchg
add
mov
iret
add
adc
ja
movsl
jle
rorb
scas
jmp
into
mov
into
imul
jmp
test
sbb
ret
fdivrp
lahf
dec
push
add
xchg
in
pop
sbb
mov
js
xchg
aas
std
jb
xchg
fcomps
sbb
inc
jle
dec
std
out
mov
fimuls
xchg
or
daa
cld
dec
pop
and
negl
int
rorb
mov
jg
aaa
add
imul
in
ds
lods
mov
and
xchg
mov
xor
in
push
ficomps
outsb
mov
es
cmp
les
and
mov
aaa
adc
jnp
cli
sbb
int3
sti
nop
mov
pop
sahf
imul
lret
mov
loopne
pop
mov
jns
xchg
aas
movsb
xor
fnstenv
ds
mov
xchg
push
pop
jns
jle
inc
and
xor
sub
mov
mov
or
mov
adc
loope
std
outsb
out
lret
cmp
int3
cmp
fstl
add
push
cmp
pop
mov
aam
in
push
xor
pop
mov
inc
push
lds
fisttps
stos
lahf
aas
mov
mov
icebp
cwtl
dec
push
jle
mul
out
xor
ds
push
rcrb
iret
in
std
jb
adc
ss
repnz
cmc
dec
les
mov
out
cli
and
fists
sahf
sti
push
out
cld
stc
repz
dec
inc
inc
pop
aad
loopne
das
clc
ss
in
iret
lahf
aas
jg
inc
fistl
imul
andb
data16
jg
mov
xchg
sbb
cmpsl
xchg
fwait
lahf
aas
jg
pop
xchg
and
cs
xor
lea
xchg
inc
jnp
push
test
or
mov
jns
push
out
int3
mov
popf
push
sarl
cld
jg
push
jg
scas
mov
mov
jg
ret
pop
pusha
repnz
and
das
jg
decl
icebp
test
add
add
lahf
pop
push
mov
push
fldenv
in
aas
xchg
dec
xchg
mov
or
mov
lret
pop
and
das
gs
aam
insb
jo
sub
push
jo
inc
pop
jbe
sarb
lret
imul
je
addr16
adc
jecxz
sub
xchg
mov
xchg
push
cs
cmp
push
ret
repnz
rcrl
add
jp
jg
or
js
mov
insb
negb
stos
das
aas
in
cmpsb
sub
push
jmp
pop
jbe
sti
push
push
mov
fs
stc
cld
adc
pop
and
xor
sub
xlat
adc
jl
cmpsb
in
scas
mov
xchg
mov
push
cltd
mov
and
push
rcrb
stc
repz
inc
in
rolb
mov
push
lds
and
in
ficomps
mov
das
mov
dec
jl
mov
ret
add
repz
jmp
xchg
adcl
aas
jg
cld
push
repnz
inc
int
scas
push
repz
lahf
pop
and
cmpsl
scas
xchg
push
stc
outsl
test
pop
loopne
mov
cwtl
lcall
adc
sahf
dec
adc
push
pop
jns
sti
adc
push
mov
push
adc
jns
lret
xchg
lret
jns
or
aas
fidivl
das
push
pop
push
mov
push
mov
pop
add
aam
jg
mov
sbb
sub
or
inc
enter
lret
aas
sbb
cmp
sub
pop
cli
in
bound
into
inc
inc
lods
inc
lahf
aas
jg
jl
add
stos
insl
scas
cmpsb
adc
stc
repz
mov
test
stos
imul
inc
shll
jg
cld
pop
outsl
sub
dec
rcll
into
in
lds
rclb
jb
pop
dec
repz
rorb
mov
jbe
scas
mov
fildll
xor
push
fdivrp
or
mov
jg
nop
loop
xor
mov
in
aaa
dec
and
cld
stc
repz
shll
inc
lods
fldenv
test
cmp
inc
jl
jg
popf
mov
popf
cli
addr16
sahf
lahf
push
call
xchg
ss
jge
add
or
cltd
dec
lahf
pop
adc
adc
push
sbb
rorb
and
inc
adc
sahf
popa
push
dec
cmp
clc
repnz
sub
inc
cs
je
pop
add
jns
aas
cmc
enter
dec
mov
das
outsl
jp
cld
stc
repz
insl
jmp
call
je
ja
aas
jg
inc
aas
cmc
xchg
imul
out
xchg
cmpsl
mov
popa
loopne
jo
push
lea
dec
arpl
iret
test
aas
sbb
movsl
iret
mov
jg
jns
adc
out
data16
inc
jmp
jg
inc
fwait
pop
jns
xchg
inc
add
jnp
jg
jg
jns
xchg
push
jno
sbb
mov
push
inc
lahf
xor
or
or
jecxz
stc
xor
repnz
call
cmp
outsl
xor
daa
cld
stc
repz
outsb
pop
mov
rclb
subb
data16
lahf
aas
jg
aad
negl
icebp
adc
in
repnz
and
addr16
mov
shrb
hlt
in
mov
xor
push
mov
lea
roll
daa
lret
fwait
adc
mov
mov
pop
cs
xchg
in
repz
daa
dec
xchg
xchg
in
out
or
and
pop
in
repz
std
repnz
scas
outsl
ret
rdmsr
jg
cld
stc
or
cmp
test
fiadds
das
mov
add
xor
mov
mov
icebp
or
pop
cmc
das
scas
mov
pop
leave
push
faddp
fcompl
jmp
mov
lret
lahf
test
rcl
jecxz
dec
cld
or
dec
popl
fwait
cld
stc
daa
icebp
dec
jae
loopne
mov
xlat
add
sbb
je
inc
pop
pushf
mov
out
xchg
mov
loop
cwtl
dec
mov
imul
aad
ret
inc
jmp
jg
test
int
scas
push
pop
dec
pusha
sbb
mov
push
inc
push
insb
pop
fmull
mov
iret
arpl
sub
adc
icebp
adc
jns
xchg
push
pop
ds
jnp
loop
mov
xchg
push
pop
loope
cmpsl
fadds
add
jns
rcrb
push
outsb
xor
adc
push
pop
jns
push
call
lods
inc
loopne
add
sub
pop
das
jnp
mov
mov
adc
push
stc
cmp
cs
lret
mov
jmp
lcall
inc
out
push
in
int3
dec
sub
bnd
movsl
adc
push
ss
lret
imul
sbb
sbb
jg
lods
lret
jnp
push
data16
xchg
inc
out
mov
jns
ljmp
ja
int
insb
std
dec
jg
dec
pop
dec
aas
jbe
iret
lahf
aas
jg
jle
imul
ret
mov
fistl
cmp
mov
scas
mov
dec
aas
sub
iret
repz
lds
aas
mov
pop
ret
les
lock
lds
push
div
in
ret
gs
in
sub
xchg
add
mov
mov
push
pop
loop
xor
lahf
icebp
cmp
out
or
popl
lret
mov
jle
ds
jg
gs
jne
out
inc
pop
pushf
inc
pop
jns
in
out
lahf
aas
push
mov
sbb
xchg
push
jne
mov
in
imull
pop
push
outsl
call
jns
js
push
xchg
push
pop
and
data16
xor
mov
lods
int
jb
xor
flds
rcrb
sub
lods
mov
stos
xor
test
lret
iret
lahf
add
jno
rcrb
iret
fwait
iret
lahf
aas
ljmp
pop
push
shll
in
ret
orb
push
pop
jns
ljmp
add
fwait
mov
jns
xchg
jne
cmc
clc
popa
arpl
mov
sub
push
lret
pop
inc
fmuls
pop
jecxz
lret
xchg
push
pop
loope
xor
lods
sbbb
inc
idivl
pop
cmc
sahf
xchg
cwtl
lcall
jg
insb
call
cld
les
mov
popl
js
ss
xchg
repnz
xor
iret
ds
mov
lahf
insl
lret
mov
jnp
in
cs
das
scas
mov
iret
jae
ljmp
data16
mov
aad
test
imul
lcall
lret
jle
das
push
pop
jns
mov
loop
subl
ss
fcoms
cmpl
pop
mov
in
fbld
lret
iret
cwtl
xlat
inc
and
xchg
fwait
aas
jg
and
es
inc
xchg
inc
cmp
ret
and
fs
cld
or
and
call
and
aas
jg
xchg
lods
pop
mov
pop
pusha
sti
sub
xchg
bnd
iret
clc
push
mov
cli
sub
outsl
stos
sub
lds
pop
cli
inc
add
in
mov
mov
push
out
jg
jg
cld
push
cmp
hlt
push
imul
xchg
lods
mov
pop
repz
lahf
push
fcompl
fisttpl
and
adc
dec
add
cld
stc
jno
pushl
and
loope
popa
xlat
aad
das
lahf
aas
jns
dec
js
sbb
out
adc
out
lret
xchg
ds
cmp
scas
mov
cmp
bound
lcall
pop
sub
lds
int3
mov
test
fwait
repnz
lret
sub
mov
fnsetpm(287
lret
mov
jb
push
gs
xlat
and
scas
mov
and
mov
mov
rclb
jg
es
into
mov
jge
jecxz
push
mov
mov
pop
add
decb
pop
sbb
inc
xor
jg
icebp
add
out
dec
aas
lret
push
and
push
sarb
cld
ret
scas
lahf
inc
pop
sub
xchg
sahf
sti
fwait
les
loopne
mov
push
pop
lret
mov
in
scas
cld
stc
adcl
into
jl
jbe
imul
sub
lcall
mov
loop
iret
xor
adc
cltd
je
in
sti
and
mov
jge
xchg
or
aas
test
mov
lock
jp
sbb
imulb
jb
sub
sbb
fyl2xp1
repz
out
psubq
cli
jmp
imul
cld
or
shlb
sbb
mov
ret
insb
xor
lods
outsl
repz
sbb
and
mov
mov
sub
jge
mov
out
pop
jns
in
aad
sub
ret
out
push
addr16
fstpt
xchg
ja
or
mov
xchg
jmp
or
aas
mov
sbb
jg
data16
sti
cwtl
das
lret
cmpsb
loope
outsb
jns
xchg
ja
out
and
std
and
pop
pop
sbb
daa
aas
xchg
mov
pop
jns
mov
cwtl
mov
pop
sbbl
ret
jle
and
push
es
xchg
adc
xchg
push
lret
push
loope
xor
push
jge
in
push
pop
rolb
and
in
stos
fwait
clc
lds
sub
jno
sub
bound
or
pop
pop
in
push
ss
out
aam
shrb
test
sahf
cld
stc
repz
shlb
pop
cwtl
add
sub
mov
lahf
aas
jg
je
or
xor
cwtl
jo
sub
jp
repz
jns
pushl
cmpsb
repnz
cld
xchg
ficoms
inc
add
into
rcrl
mov
scas
nop
inc
xor
mov
jle
loop
pop
mov
in
cmpsb
add
xor
in
lahf
aas
jbe
dec
dec
movsb
mov
push
pop
jns
jb
push
or
fisttpl
in
push
adc
push
mov
call
in
xchg
push
pop
mov
out
arpl
sbb
adc
popa
inc
jns
inc
loop
mov
jno
mov
dec
xchg
push
fidivrs
sbb
jg
xchg
aas
jno
inc
xchg
inc
inc
push
pop
jns
insb
in
pop
cwtl
pop
dec
sbb
jns
mul
xchg
push
loopne
sub
fs
out
push
sub
fldl
pop
movsb
xchg
jns
psrlw
lret
jns
js
sub
cwtl
in
mov
pop
decb
jle
clc
push
mov
pop
mov
repnz
push
xchg
mov
pop
cmp
sub
mov
test
cld
iret
es
stc
pop
cli
int3
das
popf
mov
pop
jecxz
push
loop
push
mov
pop
xchg
push
pop
jns
neg
or
fs
push
pushf
loop
add
in
sbb
jb
aaa
out
add
and
ds
aas
dec
iret
lahf
aas
jg
mov
sti
std
or
inc
jg
repz
mov
data16
jmp
das
push
push
push
mov
mov
mov
mov
outsb
scas
mov
sbb
outsl
pushf
add
data16
out
repnz
dec
xor
mov
lret
push
xchg
sub
mov
in
cmp
clc
dec
iret
lahf
aas
loopne
mov
adc
mov
out
push
sbb
pop
pop
dec
enter
jle
std
jnp
fmuls
popa
dec
divb
lock
mov
das
das
add
cld
dec
sahf
xchg
test
lahf
cwtl
call
mov
push
pop
jge
cld
sub
stc
repz
imul
into
mov
addr16
xchg
aas
jg
addr16
out
mov
cs
adc
inc
xchg
sub
out
in
mov
lahf
scas
fcomps
mov
cmp
sbb
arpl
dec
push
mov
mov
dec
sahf
pop
xchg
jl
mov
out
lahf
aas
add
daa
enter
inc
push
mov
stc
repz
pop
xorl
orb
insl
xor
fdivr
out
mov
das
lahf
sahf
ja
adc
pop
mov
pop
ljmp
add
and
pop
xchg
fistpl
xor
cmp
push
dec
out
in
jns
fstl
iret
out
or
popf
in
push
pop
cmp
inc
dec
cmp
pop
xchg
jle
xor
mov
ja
push
sbb
aas
jle
rcrl
xchg
int3
scas
stc
repz
ret
ds
push
cwtl
mov
jns
sbb
fildll
cmp
lret
and
jnp
in
ja
and
daa
bound
jbe
leave
fstl
mov
sbb
bsr
std
jb
add
pop
cmp
cwtl
sar
fisttps
stc
fnstsw
das
mov
dec
mov
jp
ret
jns
pushf
dec
arpl
pop
out
sbb
lret
repnz
iret
daa
movsb
call
in
xor
xchg
sub
xor
rol
sub
inc
jecxz
xchg
mov
in
xor
cld
andl
test
jg
sbb
lods
and
sbb
loopne
aaa
out
mov
mov
pop
sbb
jb
mov
imul
jg
scas
mov
jecxz
lcall
mov
cmp
and
dec
dec
mov
and
aam
repnz
lret
sub
mov
test
das
fiaddl
call
jle
cld
inc
lcall
int
jle
repnz
push
xchg
lds
out
mov
lret
addb
scas
mov
repz
int
je
and
in
pavgw
sub
or
out
stc
mov
repnz
jo
unpckhps
das
xchg
add
cld
cmp
stos
mov
jmp
adc
jb
or
imul
scas
push
jg
rcr
pop
pop
jl
psubusw
stc
repz
icebp
mov
in
rorb
iret
lahf
pop
subl
adc
add
ja
out
mov
inc
push
aad
jg
aas
pop
out
ret
or
outsb
jno
adc
scas
jge
mulb
mov
dec
xchg
aad
mulb
arpl
xchg
sub
mov
es
cltd
or
cld
stc
repz
mov
out
loope
addr16
popa
test
mov
jle
dec
inc
mov
cltd
test
lahf
and
jne
enter
cmc
nop
mov
movsl
inc
inc
pop
jns
xchg
dec
inc
rcrb
rolb
xchg
ja
push
aas
and
push
pop
jns
test
mov
sub
xchg
jns
aad
adcb
insb
xchg
icebp
xchg
sub
xor
in
lcall
movsb
cld
addr16
dec
aas
out
in
push
test
iret
std
iret
dec
aas
out
scas
icebp
popf
xor
pop
loopne
push
jmp
out
mov
and
or
addr16
xchg
sub
xchg
js
lock
fildll
in
push
adc
and
outsb
in
push
pop
nop
aaa
push
cmp
adc
cmp
push
pop
jns
int
dec
loope
push
leave
scas
and
jns
xchg
jmp
and
stc
pop
cmpsb
faddp
pop
pop
jns
xchg
andl
mov
and
imul
jg
aam
and
call
lret
stos
clc
jne
shlb
test
lret
add
outsl
iret
mov
es
out
mov
sbb
mov
in
aas
cld
repnz
dec
clc
in
sub
std
das
das
sti
ljmp
lahf
aas
sarb
int
aam
shlb
repz
pusha
fdivs
mov
gs
lahf
aas
jg
jg
jns
lds
mov
lret
js
stc
repz
int3
cmp
push
cmp
adc
cmp
fisubrl
out
cld
xlat
je
or
cmpsl
lock
gs
pusha
push
xchg
push
fdivrp
out
pcmpeqd
in
divb
pop
scas
push
lea
fnsave
aas
jp
ret
xlat
jne
mov
in
ja
cmpl
cmp
jl
insb
jge
push
mov
rcrl
imul
jg
pop
jle
sub
pop
out
fidivrs
iret
xchg
adc
mov
mov
stc
fisubrl
push
test
mov
mov
cwtl
sub
fists
jmp
shrl
scas
mov
dec
cmpsb
lret
dec
data16
push
scas
dec
and
mov
outsl
repnz
ja
jbe
and
loopne
sub
sub
mov
cli
mov
pop
scas
and
cmp
movsb
mov
aam
stc
push
pushl
xchg
pop
pop
ljmp
xor
dec
mov
out
lahf
mov
aaa
pop
mov
fidivrs
pop
jg
cld
stc
push
jno
pop
ja
xlat
lock
push
adc
ret
mov
das
aas
jmp
mov
sarb
pmulhw
stc
aaa
test
pop
daa
mov
fstps
lods
andb
mov
jne
subl
dec
pop
lods
stc
dec
jns
xchg
ja
pushf
movntps
cmpsl
dec
adc
jle
in
adc
cmp
adcl
jb
xchg
ja
pop
in
js
popf
mov
fsubp
sub
leave
icebp
sti
mov
repnz
and
mov
jns
xchg
push
push
cmp
sti
sarb
jbe
nop
pop
pop
xor
or
lock
cld
pop
fidivs
or
aas
lods
pop
out
das
lret
les
xchg
jae
icebp
repnz
inc
mov
adc
in
sub
mov
cs
mov
mov
lds
mov
sub
mov
sbb
pop
insl
les
mov
mov
xchg
add
jns
dec
mov
mull
js
add
enter
cli
cld
stc
daa
jle
pop
pop
mov
lock
pop
xor
aas
jg
fdivl
cmpsl
repnz
dec
xchg
lahf
fisubl
mov
jge
in
jnp
packuswb
incb
mov
sub
imul
stc
dec
clc
das
jg
fwait
jno
push
mov
mov
imul
cmpsl
loop
aaa
mov
push
pop
jns
lret
imul
xor
cmpsb
or
mov
xlat
outsb
or
sahf
shlb
dec
ret
scas
mov
mov
and
popa
std
jb
daa
add
mov
xor
decb
jb
lea
in
add
in
mov
stos
dec
push
fldenv
repz
clc
roll
pop
jle
xor
repz
into
cmc
push
jg
cld
stc
sarb
mov
cmpsb
dec
pop
push
lods
push
loopne
xchg
aas
mov
aas
out
mov
mov
int
push
repnz
inc
repz
scas
mov
lahf
ljmp
sub
adc
iret
aas
test
jle
adc
mov
in
and
mov
dec
sbb
lds
test
push
inc
jecxz
push
xchg
push
pop
jns
inc
mov
dec
inc
outsl
xchg
adc
test
mov
andb
pop
add
pop
push
cmp
repnz
int3
out
inc
sahf
push
test
xchg
dec
xor
iret
xor
pop
out
jmp
push
test
sub
sub
lcall
and
pop
jo
push
jns
pop
mov
push
jo
dec
xchg
pop
stc
repz
sahf
push
divb
push
sub
fisubs
stos
call
or
push
testl
pminsw
sub
lock
mov
ss
mov
aaa
pop
ja
jnp
adc
jle
jno
fs
out
enter
out
loope
mov
cmp
lods
xchg
lret
mov
add
jmp
add
cli
repnz
and
dec
mov
sub
mov
xchg
incl
sbb
repnz
js
pop
cmp
in
pop
jns
mov
jecxz
repnz
sahf
test
in
push
sbb
mov
out
xchg
pop
pusha
test
xor
sti
mov
in
fcompl
sar
out
xchg
jg
popw
jnp
inc
movsb
adc
out
pop
cld
sbb
dec
leave
or
and
inc
cmp
repnz
or
sar
loop
push
mov
sub
jnp
sbb
push
mov
ficomps
lret
jecxz
icebp
and
pop
sub
fucomi
enter
pop
imul
pop
notb
xchg
mov
ljmp
cld
stc
repz
and
cld
mov
lret
pop
iret
lahf
aas
jg
sbb
js
mov
in
pop
xchg
xchg
pop
stos
inc
push
inc
push
sar
lods
sarb
sub
sub
scas
xor
das
aas
jg
loopne
sub
mov
pop
jg,pt
jle
jo
cmp
arpl
sub
jl
scas
imul
loopne
stos
lcall
xor
xor
repnz
sbb
stc
les
stos
add
cld
stc
pop
scas
inc
adcl
lea
aas
jg
ljmp
stos
scas
movsb
mov
mov
cmpsb
movsl
sub
cmp
inc
and
das
aas
jg
dec
das
add
scas
push
mov
lret
das
repnz
dec
mov
test
inc
jns
and
sub
mov
repnz
scas
mov
pop
fbstp
cmp
arpl
in
repnz
into
pushf
int3
lahf
rorb
and
inc
xor
mov
jmp
scas
int3
in
push
fmulp
pop
je
pop
jns
les
in
cli
jp
push
pop
jns
jno
shlb
adc
test
cmpsl
and
aaa
sbb
insb
popf
fistpll
mov
or
inc
ljmp
mov
mov
inc
inc
mov
jle
cld
stc
icebp
mov
outsl
add
shlb
dec
lret
iret
lahf
aas
ljmp
or
loop
push
rcrb
or
mov
out
mov
add
lret
out
pop
xchg
mov
pop
add
xor
push
pop
jns
adc
cli
pushl
sbb
fldl
xchg
cmpsb
mov
jge
stos
insl
fistpll
pop
jns
in
push
outsl
xor
test
xor
icebp
jns
xchg
push
pop
jmp
scas
ret
in
xchg
arpl
mov
lret
mov
dec
mov
stc
cmpsl
cmc
scas
test
lret
out
xchg
cmp
clc
push
mov
cmp
inc
in
iret
cld
lods
lock
sbb
aam
iret
xor
lret
sti
repz
jg
or
inc
dec
cmp
rcrb
fnstsw
pop
xor
iret
lahf
aas
sbb
sarl
dec
cwtl
es
pushf
dec
gs
leave
repz
test
sub
iret
scas
lods
nop
fiadds
or
and
cmp
sti
fwait
cmp
and
add
push
andl
jns
mov
sub
add
xor
or
jg
mov
enter
pop
pusha
pop
inc
and
lahf
aas
mov
inc
int3
cmc
test
jo
pop
stc
repz
add
xor
lods
xor
xor
cmpsl
es
lahf
aas
jg
add
addr16
aas
xchg
pop
rol
bound
push
pop
xchg
inc
std
sti
dec
out
dec
xchg
jge
aad
xchg
push
fidivrs
cld
scas
lcall
sbb
jns
ljmp
add
jg
mov
add
scas
xchg
cli
cmc
inc
out
adc
push
xchg
ja
mov
outsl
mov
insl
xchg
repz
les
scas
or
stc
fldcw
sti
repnz
ret
push
lock
jle
jns
xchg
push
test
xor
mov
mov
dec
jg
pop
pop
stos
jb
dec
aad
mov
repz
lahf
adc
out
mov
mov
inc
mov
stc
das
cwtl
sbb
out
and
and
push
iret
lahf
aas
or
inc
jge
into
mov
repz
mov
push
inc
lods
test
cmp
in
dec
cmp
and
cs
ss
push
mov
fcoms
xchg
or
ret
iret
lahf
push
scas
sub
cmpsl
insl
sbb
aaa
mov
mov
out
add
fildl
fidivrs
mov
cmpsl
std
push
iret
jns
and
jns
xchg
push
cmp
jo
sub
pop
add
addr16
fs
cmp
jae
in
lcall
out
add
in
cmp
jg
sti
and
jno
pop
adc
jecxz
jge
sbb
into
out
out
aas
in
out
es
jle
in
xchg
push
push
mov
push
ret
cld
cmp
sar
iret
jns
xor
mov
mov
lea
movsl
orl
lret
pushl
and
dec
and
leave
cli
repnz
movsl
rorl
out
out
or
jg
dec
mov
sub
dec
and
mov
inc
test
cld
xchg
movd
pushf
mov
add
in
mov
dec
gs
out
out
es
stc
pop
mov
lea
mov
sahf
fs
int
aas
jg
cld
adc
out
enter
loopne
shr
out
out
lahf
pop
into
mov
jnp
jno
daa
push
pop
mov
cltd
clc
mov
lahf
add
sub
jle
out
pandn
xchg
clc
in
cmp
pop
scas
jg,pt
cld
fiadds
shlb
lcall
or
fbstp
pop
test
stc
xchg
iret
cwtl
enter
mov
pop
lret
mov
dec
mov
add
sub
repnz
dec
xchg
int
add
mov
lret
mov
and
xchg
outsb
icebp
enter
test
mov
mov
and
mov
cld
insl
pop
adc
scas
cmc
pop
dec
ror
iret
lahf
scas
cltd
sbb
sarb
xacquire
mov
iret
dec
into
shll
inc
jl
scas
popa
scas
outsl
out
pushl
iret
fdivrp
sti
jb
bound
xor
pusha
loop
jge
push
lock
xchg
push
js
xor
shlb
lds
stc
xor
cwtl
mov
call
xchg
ja
jg
inc
dec
push
scas
lea
push
sub
call
out
sub
pop
jecxz
popa
cwtl
lret
mov
or
mov
pop
jecxz
rorb
jle
imul
out
in
lahf
movsl
loop
in
fcomip
outsb
sub
mov
inc
inc
outsl
mov
sub
iret
mov
iret
call
or
xchg
hlt
repnz
pop
sbbb
dec
jle
addr16
mov
fisubs
dec
test
lods
cmpb
aas
das
test
psllq
iret
aas
fidivrs
insl
cmp
faddl
jg
cld
stc
cld
inc
mov
jge
mov
push
cmp
dec
mov
pop
jle
das
sub
push
cmp
mov
das
cmp
jg
xchg
repnz
push
imul
cmp
psraw
mov
push
jle
je,pt
adc
cmp
add
es
or
scas
mov
in
scas
loop
pop
pop
in
cli
mov
jns
xchg
push
sub
test
insl
or
fstl
incb
sub
jmp
push
pop
jns
xor
fmuls
sbb
xchg
sub
jb
lret
xchg
popf
push
sti
push
pushf
mov
jmp
std
mov
notl
dec
jg
in
jns
xchg
push
xor
dec
jns
aaa
jle
ret
icebp
add
xchg
ja
pop
pop
test
mov
sbb
icebp
test
pop
jns
fwait
ljmp
insb
xchg
cltd
or
sub
cld
stc
inc
push
scas
and
jle
aaa
nop
pop
push
or
push
jbe
mov
dec
xor
sub
inc
stc
repz
es
mov
push
call
fisubrl
inc
pop
jle
cld
pop
cld
mov
or
pop
add
das
pop
pop
mov
mov
scas
mov
xchg
orl
out
lret
mov
pop
iret
int
repnz
das
out
clc
repnz
mov
stc
xchg
cld
stc
repz
mov
call
jmp
push
aas
mov
jg
or
bound
ret
mov
sbb
dec
mov
fnsave
das
mov
ror
fdivrp
xchg
movsl
rolb
push
lret
das
adc
addl
shl
jp
xorl
in
lret
aas
inc
inc
and
xlat
or
lcall
push
and
das
scas
mov
or
pop
push
jbe
ljmp
lahf
mov
scas
push
movhps
cld
stc
repz
mov
jge
es
xor
bound
or
adc
pop
jle
jl
pop
bound
dec
pop
push
mov
mov
repnz
clc
repnz
inc
icebp
and
mov
scas
filds
add
add
cli
out
lahf
aas
nop
inc
fisttpll
shr
cmpsl
and
cld
stc
repz
fisttpl
loopne
pushf
dec
pushf
add
pop
jle
call
push
ja
xchg
sti
lahf
aas
jg
ret
test
cwtl
icebp
cmc
call
pushf
cld
hlt
repnz
lret
iret
jl
push
leave
subb
cmp
sti
cmp
inc
lahf
dec
jmp
xor
jl
scas
mov
sub
mov
cmp
icebp
cmp
scas
jge
aas
mov
repnz
pop
scas
mov
add
rcl
rolb
mov
cmpsb
jl
and
lock
mov
mov
lret
lds
outsb
mov
leave
ret
lcall
sub
mov
mov
mov
ret
sbb
gs
and
lds
in
sub
sub
pop
jle
mov
sahf
call
xchg
push
pop
jns
cld
popf
ds
pop
sub
fidivs
or
aad
addr16
lahf
pop
push
or
into
sbbb
cld
stc
repz
rorl
es
push
and
aas
jg
jp
dec
cmp
movsb
mov
pop
jp
repz
and
scas
std
mov
xchg
jno
add
inc
jp
pop
loop
lahf
aas
jg
out
mov
cmp
jno
xor
cmp
stos
xchg
xor
scas
mov
jge
push
push
pop
jns
jg
jg
das
js
jmp
imul
outsb
movsl
stc
mov
stc
cld
stc
repz
iret
repz
add
lods
das
out
jle
mov
dec
dec
cmp
jecxz
lahf
outsb
repz
ds
sahf
clc
cmpsb
lret
ljmp
cld
stc
fcmovb
push
stos
mov
cmp
call
jle
adc
mov
outsl
arpl
adc
inc
bound
jns
xchg
push
pop
repnz
sbb
xor
test
jge
scas
idivb
adc
daa
in
pushf
push
xor
jns
imul
iret
push
outsl
fisubrs
popl
in
push
push
outsl
xchg
mov
repnz
scas
int
dec
popf
shll
xchg
ficoms
pop
push
cld
push
into
pop
aaa
rorb
cld
stc
repz
movsl
push
mov
mov
fdivl
jbe
out
dec
in
pusha
cmc
cmp
push
fsubrp
pop
mov
mov
dec
in
testl
pop
pop
sub
push
inc
cld
adc
mov
adc
rcl
add
xor
outsb
sbb
int3
xor
cld
sub
iret
or
aam
test
lock
sti
mov
sub
ds
daa
mov
cmpsb
insb
jns
dec
sub
pop
jle
outsb
pop
and
std
xor
mov
imul
dec
jp
aas
dec
or
xor
xchg
ja
mov
xchg
or
push
fdivrp
jb
mov
inc
call
fmul
xchg
fnstenv
xchg
sub
mov
testl
cltd
dec
out
pop
dec
mov
pushf
lcall
mov
jecxz
loope
mov
pop
fidivrs
imull
jg
dec
lcall
jl
repnz
aas
push
pop
sti
sbb
pop
mov
das
iret
das
hlt
inc
filds
imul
cld
stc
repz
cld
ds
or
mulb
lods
pop
jg,pt
outsl
sahf
sub
cmp
lret
arpl
jg
mov
push
sbbl
cmpl
jg
js
mov
jle
out
xor
push
push
sbb
loopne
aas
pop
leave
lea
jns
xchg
push
in
xor
in
adc
xchg
push
es
stos
push
fdivrl
adc
lea
cmpsb
push
out
stc
repz
into
adc
add
cmpsb
fcoms
sub
jg
and
mov
xor
mov
rol
dec
addb
mov
lahf
fsubl
sub
sarb
iret
and
aad
lret
lret
or
cmp
mov
pop
std
pop
mov
jge
pop
scas
mov
pop
popf
dec
xchg
cmpsb
bts
fildl
dec
cmp
in
sub
js
test
out
data16
cld
xchg
jle
sbb
cmpsl
jo
add
out
lahf
aas
push
pusha
decl
test
or
jg
sahf
lcall
pop
adc
xlat
jnp
iret
jg,pt
cld
push
lock
push
popf
cmp
out
lret
mov
dec
das
sub
fs
into
out
jle
sti
repnz
cli
outsl
stc
xchg
mov
inc
jg
repz
or
out
push
lods
stc
repz
dec
popf
dec
adc
mov
push
jg,pt
cld
ljmp
cmp
xchg
jle
movsb
pop
sbb
aas
inc
ret
jmp
cld
push
pop
lods
mov
push
jnp
jl
test
mov
cmpsl
mov
push
fnstcw
test
mov
lahf
push
out
lahf
aas
cmc
xorl
cltd
lock
xchg
dec
loope
ja
repz
jae
sub
fildll
lahf
mov
mov
add
shll
scas
inc
sub
insb
aam
jbe
sbb
shrl
lea
sahf
sbb
lods
mov
sbb
inc
pop
arpl
lret
sub
sub
xchg
cld
stc
repz
imul
add
dec
hlt
aam
pop
lahf
xchg
push
pop
pop
ljmp
aas
mov
mov
cwtl
cmp
mov
imul
repz
jb
inc
mov
pop
mov
fdivrp
pop
std
mov
xchg
pop
testb
pop
jle
or
pop
or
sbb
pusha
mov
add
push
mov
pop
jle,pn
cld
stc
xchg
mov
add
enter
lahf
aas
mov
in
stos
fld
ljmp
jnp
aas
xor
sbb
data16
xchg
aas
jg
cld
out
imul
sbb
sub
iret
lahf
aaa
and
loope
sub
jne
xor
cli
repnz
pushf
out
mov
jp
lahf
aas
jg
cmp
mov
test
cli
mov
repz
notl
popf
lcall
mov
sarb
cld
xor
cmpb
imul
pop
loope
adc
pop
ret
mov
daa
sub
lahf
aas
jmp
jmp
fs
and
rcr
xchg
js
mov
repnz
call
or
mov
push
out
or
lds
cld
fdivrs
jle
mov
sub
sub
pop
in
mov
cli
test
jg
mov
push
and
arpl
jne
lret
cmp
in
inc
dec
inc
out
and
movsb
push
out
xchg
sub
out
imul
and
insl
mov
jns
pop
in
jb
mov
pop
xchg
popa
mov
xchg
lahf
jg
mov
jl
mov
lahf
aas
jg
jle
mov
mov
cmovp
mov
test
mov
out
push
inc
lahf
iret
push
shrb
jg
cli
pushf
sub
mov
stos
daa
dec
mov
pop
jns
xor
shlb
sub
jge
pop
jns
xchg
mov
xlat
daa
jae
push
arpl
in
push
into
add
in
xchg
xchg
arpl
outsl
jmp
test
fsubr
cmp
adc
cmp
sbbb
mov
xor
popf
ljmp
lods
pop
scas
pop
and
ficomps
jns
fstl
jg
js
imul
test
adcl
or
mov
scas
dec
repz
int
arpl
sub
imul
mov
adc
pop
pop
dec
fbld
lret
or
fldt
mov
mov
or
or
bnd
inc
jmp
je
aas
dec
out
cmp
scas
mov
in
add
inc
out
pop
jge
mov
mov
loope
iret
mov
push
adc
mov
in
push
fdivrp
data16
xor
adc
pop
fidivrs
arpl
xor
or
mov
adc
jg
cld
pop
pop
inc
pop
rcr
sarb
lea
jge
xchg
sub
int3
stos
fnstcw
jno
xchg
push
fimuls
push
sub
add
add
stc
repz
mov
mov
adc
imul
outsb
push
std
rcrl
pop
xor
jg
mov
jg
push
punpckldq
pop
jns
pop
loopne
outsl
addr16
dec
faddl
negl
aaa
xor
dec
shl
lret
lods
add
xchg
jb
xchg
pusha
gs
sub
dec
iret
xchg
cmp
push
insl
bound
push
pop
push
pop
stc
in
mov
xchg
push
or
mov
xchg
rcll
pop
fsubs
pop
add
in
push
mov
mov
add
pop
pop
dec
add
xor
lcall
out
lahf
jno
clc
and
jb
mov
lock
stc
sub
ficoms
push
out
lahf
pop
mov
push
andl
shlb
adc
mov
cmp
aaa
movsb
iret
lahf
aas
jg
add
repnz
popf
adc
ret
cld
stc
repz
jl
jo
aaa
sub
enter
jo
aas
jg
pop
mov
aaa
int3
into
std
mov
pop
les
out
adc
cld
stc
repz
sbb
fstpt
loope
aas
jg
jle
jo
data16
cmpsb
and
adc
mov
clc
sub
icebp
cmp
stos
add
push
adc
cmp
push
inc
sarb
or
mov
add
outsb
enter
fildll
scas
mov
jg
lcall
testl
loope
lock
stc
repz
pop
adc
in
add
cltd
test
jle
subl
mov
xor
in
lahf
aas
stc
adc
fimuls
sbb
lods
iret
or
scas
push
ret
out
jl
movntps
xor
pop
cmp
ja
js
clc
repnz
test
cs
stc
repz
push
jecxz
and
movl
std
cmp
pop
cmp
daa
neg
jl
fsubrp
fsubl
jp
pop
lds
xchg
push
scas
xchg
aaa
cmp
out
lret
sub
das
rclb
daa
add
sbb
mov
dec
sahf
add
call
inc
enter
in
jmp
stos
hlt
xorb
repnz
sar
push
xlat
sahf
cmp
rcrl
mov
dec
lret
mov
jae
repnz
inc
out
ljmp
es
fisubl
lret
rcl
mov
mov
iret
insb
shrl
in
sub
popa
adc
arpl
clc
cmp
movsl
stc
jge
stos
jb
pop
jns
shll
sub
pop
sbb
mov
mov
xchg
xchg
lahf
aas
jg
dec
pushf
jecxz
leave
out
xchg
jno
pop
mov
aam
pop
aas
push
mov
dec
ja
lahf
aas
aas
push
mov
sbb
rcl
int3
out
aam
out
dec
cmc
jl
mov
lahf
lock
mov
out
jmp
fcmovu
cmp
mul
fisttpl
or
movsl
lea
add
jns
xchg
push
sbb
movsb
push
pusha
sbb
adc
out
cmp
xchg
push
pop
mov
ljmp
faddl
adcl
in
pop
scas
mov
mov
mov
popa
jb
sub
aas
mov
enter
lcall
out
imull
sbb
jmp
int
bound
mov
pushf
in
lods
aad
add
ja
sub
mov
sub
gs
add
jno
mov
out
and
jo
inc
mov
cmp
mov
nop
sub
lcall
lock
shrb
daa
cld
imul
mov
lcall
jg
and
stos
int
xor
loopne
jnp
je
stc
repz
and
lcall
paddsb
stc
xchg
shrl
lahf
fisubs
outsl
add
push
enter
pop
jns
fnsave
cmp
ficompl
lret
xchg
push
inc
sub
pop
xor
sbb
out
lahf
dec
jno
jmp
mov
jg
cld
stc
sbb
rcll
inc
push
scas
push
ds
mov
and
xchg
pusha
jge
mov
pop
movsb
dec
fidivrs
adc
dec
mov
pop
jns
pop
jo
test
cmp
jns
xchg
adc
ljmp
jne
pop
cmc
mov
or
and
fidivrs
stc
les
js
mov
ds
in
ja
xchg
hlt
or
mov
push
mov
xchg
push
pop
jns
adc
in
cmp
lahf
pusha
sbb
outsl
icebp
in
ds
dec
cmp
repnz
mov
fwait
pop
and
pop
push
xor
lcall
jle
mulb
push
stos
cld
jb
xchg
inc
fisttps
ljmp
repz
add
xor
dec
cmp
push
jle
and
scas
xchg
push
fisubrs
mov
cmpl
pop
jns
sti
shrb
inc
test
cmp
jo
pop
jns
xchg
sub
cmc
ret
push
fwait
es
xchg
push
xchg
mov
in
lret
nop
data16
fdivrp
adc
outsl
into
lds
mov
and
pop
out
js
pop
into
enter
xchg
das
cltd
hlt
mov
pushf
jno
jo
pushf
lret
xchg
lret
pop
gs
ds
je
stc
repz
dec
xchg
outsl
jnp
fidivrs
jg
cld
inc
ss
mov
lcall
out
lahf
and
dec
js
sbb
mov
jge
stc
cwtl
jl
adc
pop
and
ja
and
cld
add
jl
out
shlb
xor
lahf
aas
jg
sarb
insb
lds
fisubs
out
mov
int
icebp
lcall
outsb
pop
pop
fidivrl
lret
push
aas
aas
xchg
jle
ret
inc
les
fcoml
pop
jns
xchg
cld
add
inc
inc
jbe
lock
xchg
push
enter
pop
cltd
fsubrs
xchg
push
pop
jg
out
imul
mov
push
pop
jns
insl
mov
testb
sub
xchg
test
and
fnstenv
outsl
or
in
jns
xchg
popa
outsl
push
jg
xor
sbb
xchg
sti
in
ja
mov
subb
push
push
ja
pop
jns
aaa
fdivrl
inc
fdivrs
in
xchg
fisubs
imulb
out
iret
mov
add
mov
sbb
ficompl
jle,pt
cmp
out
lods
fcoms
pop
in
aaa
cltd
sbb
cld
rsqrtps
lea
std
dec
mov
bound
out
ss
fildll
lret
mov
inc
dec
xor
lods
mov
dec
fisttps
jg
pop
orl
xchg
mov
pop
aad
arpl
lret
xchg
out
cwtl
repz
stos
sahf
test
fistps
outsb
sub
jg
fs
push
stc
cld
ds
and
notl
adc
outsl
es
ja
repnz
fcompl
cltd
mov
mov
jmp
jmp
test
sbbl
xchg
push
fidivrs
inc
aam
outsb
sub
iret
cltd
xchg
stc
adc
ds
or
div
lods
push
or
xor
cld
pop
mov
mov
inc
pop
adc
inc
lret
fsubrl
and
or
in
add
jns
insb
xchg
test
push
call
in
leave
pinsrw
cld
stc
test
cmp
pop
gs
jl
xorl
int3
fadds
mov
dec
ljmp
jns
cwtl
mov
test
pop
iret
lahf
aas
jg
shl
jb
insb
pop
push
sbb
outsl
loop
stc
repz
addb
sbb
jne
ds
dec
jge
shlb
outsb
fnstenv
das
lahf
aas
insb
sahf
outsl
flds
in
jp
xor
repz
into
nop
cmp
mov
lock
add
jge
cld
pop
and
sub
jg
ret
sbb
pop
inc
xor
or
out
popf
dec
cmpsl
inc
out
and
popf
xchg
shrb
stc
mov
lahf
xchg
lret
imul
nop
mov
adc
mov
lcall
jne
scas
inc
inc
out
shl
nop
rclb
xchg
adc
sub
jmp
push
cs
mov
jg
dec
enter
mov
popa
mov
xor
test
cltd
add
sub
aas
call
mov
pop
ror
sub
orb
sbb
mov
mov
cmp
push
cld
or
aas
lcall
mov
xor
inc
cmpsl
push
cld
cwtl
shrb
scas
adc
pop
jmp
add
mov
dec
out
mov
cs
lret
mov
mov
scas
les
mov
xchg
sbb
test
repz
jmp
mov
outsb
fidivrs
cld
stc
loopne
ret
push
inc
push
int3
xlat
and
leave
jg
push
sub
push
iret
add
fildll
xchg
ja
sbb
jp
in
rolb
push
pop
jns
push
xor
dec
pop
push
add
in
fwait
leave
push
dec
and
add
mov
aam
in
ja
mov
adc
pop
in
adc
stc
adc
fidivrs
mov
mov
aas
jg
test
mov
pop
and
aas
aam
or
into
sahf
or
sub
repz
lahf
ljmp
jmp
ds
sub
stc
mov
dec
lahf
and
mov
loop
aas
aas
add
xor
adc
in
iret
mov
lods
fisubl
js
sub
push
pop
jns
into
jge
test
mov
and
jns
js
enter
mov
fidivrs
inc
fnstsw
xchg
std
cmp
xchg
clc
push
pop
jns
test
shr
push
lret
jle
inc
lock
xchg
aad
icebp
mov
daa
push
pop
jns
dec
sub
dec
movq
iret
sbb
std
jb
xchg
out
lea
test
add
inc
lods
push
mov
pusha
sahf
ds
fistps
scas
xor
popf
loope
pop
jns
pop
adc
loopne
movzbl
jl
or
rorl
aad
ror
cs
dec
cmp
pop
jns
fisttpll
cmp
xor
sub
lahf
jg
pop
movsb
cmp
add
stc
repz
dec
cmpsl
scas
add
fists
repz
mov
into
sub
scas
pop
fwait
xchg
dec
cld
inc
jp
sbb
jp
pop
movsb
nop
aaa
cli
sbb
dec
pusha
shl
pop
jmp
lret
or
daa
push
mov
scas
mov
mov
sbb
jne
jle
insb
cmp
scas
mov
xchg
sbb
mov
jle
pop
scas
stos
stc
aam
stc
scas
div
lret
cs
std
inc
jb
lret
test
mov
and
and
or
add
jle
mov
aaa
dec
push
aam
pop
mov
adc
xchg
inc
mov
xchg
imulb
out
cmc
xchg
xchg
data16
jl
cmp
lret
mov
nop
sti
mov
sub
mul
adc
das
scas
sbb
repz
push
aas
xchg
pushf
aaa
or
jecxz
imul
ds
adc
xchg
daa
movlps
pop
repz
lahf
dec
fdivrp
adc
add
cld
stc
fs
das
jbe
sti
cmp
sub
popa
imul
out
out
lahf
aas
push
jecxz
dec
loop
stos
cmpl
repz
movl
test
scas
inc
jo
jecxz
pop
push
pop
cmp
cs
lods
pusha
pop
daa
insb
popa
lahf
aas
mov
push
and
or
lret
out
dec
scas
push
dec
mov
pop
sub
das
das
push
pop
jns
jnp
xor
inc
mov
jo
add
sub
sub
jno
in
inc
and
lret
mov
mov
jns
icebp
inc
add
dec
and
ja
jle
ds
int
sub
mov
dec
js
out
das
xchg
outsb
push
mov
repz
cld
stc
repz
pop
sarl
or
inc
int3
mov
mov
aas
aas
adc
sbb
in
inc
pop
mov
out
out
lahf
or
and
pop
inc
in
mov
jl
test
shll
mov
out
in
sub
pop
sub
push
stos
sbb
cld
nop
clc
sbb
mov
push
mov
movhps
mov
cli
aad
xchg
inc
hlt
xor
iret
lahf
mov
rcrl
push
push
mov
je
lahf
jg
cld
stc
inc
into
std
mov
jae
mov
imul
xchg
iret
lahf
aas
addr16
movb
inc
scas
mov
add
insl
dec
push
cli
cmpsb
add
cmpsl
ja
shld
jns
pop
ja
push
loope
jns
jmp
icebp
fiadds
mov
xchg
ss
loope
dec
cmpsb
xlat
lahf
aas
jg
into
pushf
jne
roll
fld
pop
xchg
lahf
ret
fnstsw
fimuls
xchg
and
outsl
shlb
pop
jns
rolb
push
adc
je
pop
push
dec
pop
jns
xchg
cmp
add
stc
jbe
xor
jns
xchg
push
jg
push
inc
fs
ja
in
push
pop
push
leave
or
out
int3
les
or
inc
pop
in
stc
arpl
enter
or
les
jle
lock
movsb
outsl
jecxz
js
outsl
fdivrl
imul
cmp
sub
adc
loop
aas
xchg
mul
push
sbb
mov
das
out
int
rorl
push
pop
pop
jns
xchg
push
cmpb
imul
decb
outsb
aas
adc
cmp
cwtl
pop
jns
mov
iret
adc
je
je
in
push
jnp
pusha
outsb
int3
es
testl
mov
lret
loop
xchg
pop
ret
das
and
repnz
cmp
cmpsb
les
mov
xchg
movhlps
xlat
jmp
pop
fists
pop
inc
in
lahf
aas
xchg
call
xchg
jg
add
out
cs
inc
into
aaa
enter
iret
lahf
aas
gs
lret
ret
ss
lds
cld
stc
repz
xchg
lods
loopne
outsb
bound
push
push
add
negl
jl
add
sub
fbstp
xchg
and
push
push
adc
pusha
sti
imul
push
mov
insb
shl
fistpll
dec
inc
popa
loopne
aas
cmp
xor
sub
inc
movsl
mov
mov
repnz
fsubrs
jne
xlat
push
je
insl
ret
clc
in
lret
sbb
sub
iret
ds
xchg
jp
sub
pop
pop
dec
vunpckhps
aas
jg
or
out
out
cmpsl
pushf
jge
or
in
xchg
lahf
pop
cltd
lods
adc
mov
stc
pop
icebp
dec
les
mov
out
decl
enter
pop
incb
xor
lea
cs
xor
mov
jg
pop
push
xor
test
js
jnp
shrb
repz
push
outsb
lahf
push
subb
xchg
repnz
mov
mov
lea
outsl
inc
or
decl
lea
into
dec
jnp
test
xchg
mov
xchg
out
jg
push
fdiv
out
out
lret
jle
or
mov
jg
lds
mov
cmpsl
adc
out
mov
mov
sub
mov
in
dec
mov
movsb
jmp
fldenv
dec
sbbb
int
loopne
inc
ljmp
push
sti
gs
stc
loope
fisubl
cmp
lea
push
aas
or
adc
repnz
mov
cli
pop
push
call
pop
jns
cld
scas
int3
adc
sbb
nop
lea
add
in
lret
ret
mov
xchg
push
fidivrs
popf
loop
imul
ljmp
jns
jge
inc
sbb
bnd
es
pop
mov
das
enter
mov
pop
jns
fstpl
fcomps
leave
js
jge
jbe
jns
sub
lahf
jg
mov
push
mov
mov
repz
inc
ffreep
adc
mov
xor
cmp
sahf
lea
xlat
adc
mov
adc
cld
stc
repz
lds
lahf
and
out
into
xor
js
push
push
iret
lahf
aas
jg
dec
cmp
push
subl
repz
add
jno
cmp
leave
cli
in
xchg
aas
jg
fs
pop
xor
popa
mov
push
fdivrp
lea
cld
xor
lahf
lahf
push
ss
or
fs
push
pop
jns
in
lret
xor
das
xchg
mov
pop
jns
xchg
je
dec
addr16
iret
and
popa
hlt
pop
dec
jg
dec
addr16
mov
stos
sub
lahf
jg
movsl
jle
jnp
fisubrs
in
repnz
mov
sarb
iret
mov
or
test
inc
repz
xchg
iret
lahf
into
jno
enter
nop
ret
push
in
mov
pop
xor
daa
mov
int3
iret
lahf
add
jmp
test
stc
repz
stos
adc
pop
repnz
ficoms
scas
in
fwait
mov
and
out
test
mov
mov
decl
adc
jg
cld
stc
fs
call
mov
and
aas
mov
mov
cmpsl
jecxz
ljmp
lahf
rcr
mov
outsb
scas
inc
mov
outsl
xor
mov
mov
xchg
pop
bound
lods
repz
das
sahf
aam
maskmovq
imull
pop
aas
mov
mov
inc
jg
cld
stc
mov
test
mov
mull
aas
cwtl
mov
lret
mov
push
repz
dec
repz
fistpll
jg
loopne
xchg
sahf
mov
sbb
pop
cld
stc
pop
mov
adc
insl
cwtl
scas
adc
pop
jns
mov
rcrl
add
lds
loope
out
ret
inc
pop
pop
dec
mov
jb
in
imul
lret
outsl
xchg
movsb
jecxz
out
not
cld
dec
mov
aam
jecxz
sahf
pop
and
xchg
adc
dec
inc
dec
imul
pop
nopl
shl
jmp
jle
cld
stc
repz
movsb
dec
stc
sbb
iret
lahf
aas
jg
and
pop
inc
jne
mov
mov
flds
ret
popf
xchg
push
fwait
shrl
iret
jg
add
xor
jae
iret
lahf
aas
idivb
xchg
hlt
stos
fs
in
cli
in
aas
cmp
mov
sbb
or
gs
xchg
aas
push
jl
popf
popf
in
push
pop
adc
cs
jecxz
inc
dec
aas
sbb
lahf
aas
mov
jns
dec
neg
dec
pop
aad
in
iret
and
outsl
stos
fists
stc
pop
xchg
sar
stc
cmpl
jbe
fsubl
repnz
pop
jle
mov
paddusw
lret
pop
inc
test
stos
xor
ds
loopne
int3
xor
in
shl
jns
or
andl
test
xchg
mov
pop
clc
sub
dec
mov
jg
inc
scas
xor
or
or
push
cmc
aas
jmp
leave
cmp
ds
pop
fs
xor
shrb
lahf
cmp
mov
cld
cs
inc
xor
js
ss
aas
push
outsb
fwait
mov
mov
dec
jge
ss
jg
inc
icebp
in
iret
sub
inc
and
daa
scas
lock
cld
stc
aaa
outsb
sti
pop
inc
dec
cmp
in
fnstsw
push
lret
sub
mov
jp
and
cmp
mov
lahf
jg
aad
sarb
iret
cli
repz
repz
leave
sbb
mov
and
es
aas
jg
cwtl
add
test
lcall
pop
mov
shlb
sub
pop
jmp
jne
jge
stc
jae
sbbb
cwtl
add
das
fstl
leave
mul
xchg
push
or
mov
cmovae
jns
test
fwait
rorb
fnstenv
repz
insb
pop
repz
jp
repnz
jecxz
dec
cmpsb
scas
mov
lahf
aas
repnz
mov
adcb
sub
xchg
lock
or
dec
int3
push
jbe
repz
adc
cmc
stc
test
adc
das
lahf
aas
jg
jmp
adc
push
aam
sti
jb
fstpl
outsl
dec
ret
adcb
mov
cltd
or
lds
jno
cmp
scas
adc
fwait
decb
mov
lahf
sbb
out
cmp
scas
mov
push
pop
fs
cmp
cld
stc
int3
lahf
imul
pusha
int
stos
mov
xor
shrb
lahf
aas
stos
lods
fistpl
lock
fsubrp
lret
pop
mov
int3
jg
inc
lret
rcll
mov
adc
test
icebp
mov
scas
adc
adc
stos
cld
add
mov
mov
aas
jg
sbb
incb
or
jne
je
sbb
mov
cmp
dec
in
ja
lahf
lret
lahf
inc
sbb
cli
sub
pop
jns
out
js
mov
jnp
jp
pop
jns
ret
push
lds
loop
pop
lods
out
test
in
add
lds
pushf
scas
sbb
push
in
and
movsb
data16
or
xchg
jl
ja
pop
daa
xor
mov
std
jecxz
mov
test
push
sbb
mov
bswap
fs
ljmp
sbbl
add
repnz
loop
dec
sbb
repz
mov
push
into
mov
popl
push
mov
mov
popa
inc
js
push
test
and
scas
popf
pop
imul
iret
rorb
sub
imul
test
sub
xor
in
push
push
lock
dec
insl
xchg
pop
iret
push
sbb
sbbl
pop
jns
outsb
clc
pop
sahf
xchg
sub
mov
mov
push
out
bound
repz
mov
or
gs
mov
or
lods
aas
nop
icebp
mov
and
fdivrp
sbb
mov
repnz
out
jns
xchg
push
cmp
jne
sahf
sbb
mov
sbb
xchg
lock
idivb
xadd
mov
movsb
mov
cld
stc
repz
mov
lahf
cmp
addr16
lret
mov
sbb
xor
insl
cld
enter
jge
stos
mov
ficomps
jno
jl
aas
jg
add
inc
adc
mov
inc
fdivp
repnz
je
test
push
xchg
xchg
push
pop
jns
xor
sub
or
rolb
or
arpl
mov
lret
xor
add
xor
cmpsb
scas
xchg
pop
scas
cld
int3
add
test
mov
and
adc
and
repnz
out
out
fldcw
aas
jg
jle
neg
inc
sbb
roll
cmp
pushf
loope
stc
repz
into
sub
mov
pop
addb
jnp
and
lret
repnz
adc
fdivrl
jnp
sub
sub
sub
ja
dec
xchg
outsb
shl
out
pop
data16
inc
test
dec
ffree
xor
in
adc
mov
ret
xor
inc
inc
xchg
xlat
aam
lahf
test
gs
out
inc
decb
out
and
outsl
adc
popf
test
lret
ret
xor
cld
push
mov
xchg
add
sub
sbb
stc
rep
loopne
lea
cs
lcall
pop
jle
cld
and
out
cmp
push
mov
xor
fcomip
scas
repnz
lahf
jb
fneni(8087
ficomps
rolb
jp
lds
push
xchg
fcomps
int
outsl
lret
mov
lods
add
pop
push
jno
repnz
in
adc
cmp
das
pop
clc
sbb
js
test
pop
dec
fisubrs
add
lret
out
cmp
jl
pop
pop
or
iret
cli
push
cs
cli
add
jl
cmc
hlt
lret
out
push
pusha
cmpl
push
jmp
and
push
lahf
aas
aas
mov
sub
or
sbb
in
and
imul
in
push
pop
xor
out
cmp
lods
cltd
adc
std
jb
xchg
xchg
ja
pop
pushw
into
cmp
inc
jns
xchg
ja
popl
ficompl
int3
dec
popa
in
push
pop
lahf
xchg
adc
andb
mov
arpl
cld
stc
xchg
ret
dec
sub
mov
xlat
jno
xchg
aas
jg
les
test
jge,pn
mov
cltd
add
pop
xchg
repnz
enter
mov
or
lret
das
call
test
or
repnz
jecxz
mov
leave
cwtl
jae
cmp
scas
mov
pop
dec
test
mov
mov
jle
repnz
mov
inc
hlt
test
aas
or
lret
sub
outsl
rolb
push
jmp
adcb
xchg
mov
stos
pusha
out
lret
sub
dec
and
fdivrl
outsl
or
repnz
fs
push
imull
mov
decl
add
int3
js
sbb
loop
call
pop
mov
adc
push
push
sub
aas
aas
and
jno
aad
and
cld
pop
shrb
pop
jg
push
jle
mov
nop
stos
mov
xchg
in
jb
aam
in
ja
add
fcmovne
insl
imulb
jnp
xchg
push
pop
add
mov
push
inc
pop
js
xor
pop
jns
dec
mov
xor
mov
addr16
xchg
jno
fcompl
out
punpcklbw
xor
fwait
shlb
dec
cmp
add
xchg
sub
jecxz
rorb
cmp
push
lds
and
aas
jg
sbb
and
imul
mov
mov
call
aad
push
inc
les
repnz
jmp
fstpl
xlat
mov
fidivrs
cmp
pop
in
in
push
sub
and
push
push
fldl
in
push
pop
outsl
dec
lock
rcr
jns
in
adcb
fcmovne
jp
pop
stos
loopne
dec
stos
in
inc
fidivrs
ljmp
jns
frstor
lcall
and
sbb
pop
sbb
loopne
and
xchg
pop
jle
fidivs
jo
mov
repz
lock
bound
push
test
push
repnz
cld
push
fmull
dec
jmp
lock
push
decb
jp
ja
test
cmpl
aas
jg
push
out
pop
sbb
in
add
jecxz
iret
add
stc
xor
in
dec
xchg
clc
and
add
out
push
stos
std
mov
scas
call
repnz
popa
subl
jns
sub
pop
and
adc
dec
jp
repnz
push
mov
pop
pop
fistpll
movsl
lods
xor
scas
mov
mov
sbb
mov
lret
iret
scas
test
pop
sub
repz
pop
sti
out
inc
pop
mov
sub
repz
sbb
inc
sti
repnz
lret
popa
jbe
adc
fistps
push
in
sti
dec
fcomps
sub
or
inc
pop
lods
dec
repnz
clc
in
popf
loop
sbbl
outsl
mov
inc
test
lret
adc
sbb
outsb
lea
lahf
aas
mov
add
push
lahf
or
mov
cmp
ljmp
cmp
lahf
mov
in
push
and
and
mov
mov
in
push
pop
shrb
push
inc
imul
xlat
aas
jge
pop
dec
fs
lahf
aas
jg
add
or
mul
out
mov
and
in
or
push
pop
in
push
pop
movsb
mov
decb
hlt
mov
jae
dec
lret
imul
out
lahf
adc
cltd
and
mov
mov
xor
in
ret
or
mov
pop
jns
frstor
inc
or
es
inc
adc
fs
mov
bound
iret
xchg
mov
jnp
inc
clc
fcomip
pop
push
jb
sub
mov
dec
mov
jg
in
ja
jo
lahf
and
leave
pusha
xor
stc
xchg
mov
pop
adc
mov
fs
ret
sbb
push
mov
jb
sbb
pop
in
sub
and
lret
sub
aas
scas
fisubs
cltd
in
mov
jle
jle
shl
jl
hlt
pushf
cmp
mull
iret
lahf
mov
sahf
mov
pop
or
out
lods
cmp
test
out
pop
mov
lea
in
push
and
pop
push
adc
pop
out
aas
int3
cli
push
pop
jns
lock
xlat
adc
icebp
cwtl
je
xor
and
pop
jns
xchg
jno
aaa
push
in
lea
cmp
xchg
push
jmp
insl
lock
iret
scas
scas
data16
inc
enter
cmp
sbb
cld
stc
xor
scas
xor
push
hlt
sub
cli
leave
fwait
out
lahf
aas
cld
bt
xor
jne
add
push
decb
or
incb
sbb
flds
test
mov
or
loope
das
fdivl
dec
sub
mov
jp
push
push
pop
push
jg
mov
fwait
push
push
in
mov
inc
sbb
push
mov
ds
call
test
jle
das
pop
mov
hlt
fistl
aas
jg
cld
cld
mov
les
jmp
mov
iret
lahf
pop
mov
out
sub
xlat
lret
cld
mov
repnz
std
or
out
sub
push
adc
ror
movsb
sbb
repz
ljmp
mov
dec
shr
jns
xchg
push
pop
mov
ret
dec
mov
xchg
push
pop
ret
jge
ljmp
mov
aas
mov
dec
cld
mov
out
in
and
std
mov
dec
cwtl
mov
decb
cmp
mov
inc
push
mov
pop
cld
sar
in
test
mov
adc
jle
xchg
das
aas
jg
je
addr16
cmp
ss
jns
inc
add
push
mov
jb
ja
xchg
mov
cmp
jp
or
aam
add
push
mov
push
divb
adc
lret
imulb
and
mov
dec
ja
add
sbb
incl
in
mov
enter
jge
int
jg
fisubrs
mov
push
lahf
sarb
push
data16
mul
lret
xchg
cmp
pop
shl
jg
cld
subl
pop
inc
mov
jbe
jb
iret
lahf
aas
push
pop
notl
lahf
ss
insl
and
cld
stc
repz
ss
push
pop
cli
ss
pop
sub
loop
pop
mov
lahf
aas
jg
fs
add
push
daa
call
stc
repz
xor
jmp
mov
mov
das
aas
jg
out
jl
and
popa
ficoml
push
lret
mov
in
aad
nop
mov
lock
cmp
mov
mov
mov
jns
inc
fcomip
jno
lcall
scas
add
and
repnz
lock
adc
mov
repnz
addr16
lcall
xor
mov
repz
in
dec
arpl
inc
sbb
xchg
jle
repnz
push
fldcw
mov
push
mov
jmp
sub
packuswb
in
pop
in
add
sbb
cmp
cld
dec
clc
negl
jno
les
mov
test
and
inc
inc
das
jg
and
or
subl
shlb
testb
dec
lret
push
cmp
out
xchg
iret
lahf
ret
mov
sbb
and
scas
mov
jns
lea
and
cmpsl
cli
iret
inc
mov
mov
add
icebp
test
in
xchg
or
pop
rorb
jbe
jmp
pop
je
and
inc
cli
in
out
aad
xchg
out
mov
iret
lahf
fsts
pop
jnp
sub
fsubrp
js
inc
pop
cmp
and
scas
dec
lret
and
addb
pop
or
adc
lret
iret
lahf
add
cmpsb
cmp
fildll
dec
ss
stc
xor
je
mov
mov
mov
shll
jg,pn
fisttpll
jmp
mov
clc
outsl
std
das
jecxz
jb
mov
cld
push
pop
lret
fwait
pop
mov
std
scas
lahf
or
out
xchg
iret
lahf
nop
fiadds
fwait
inc
add
call
or
repnz
and
mov
je
cld
or
ss
mov
dec
std
mov
pop
jle,pt
sti
outsl
stc
repz
add
ja
test
repnz
out
cld
xor
repnz
rolb
mov
cld
or
jg
push
pop
sbb
cs
iret
lahf
push
lock
push
sub
das
subl
out
clc
inc
push
mov
outsl
mov
stos
inc
xor
ds
das
mov
sub
insb
pop
cs
dec
cltd
out
xchg
sub
scas
mov
adc
cld
dec
add
in
mov
mov
sti
jg
xchg
mov
push
lret
sub
sub
sbb
mov
in
sahf
push
xchg
mov
xor
test
pop
or
mov
repz
mov
lods
xor
aam
dec
and
popf
lea
repnz
jge
or
or
xchg
add
fmull
lahf
movsl
mov
push
xor
iret
lahf
aas
or
mov
pop
lods
cmc
jg
jbe
stc
repz
or
rol
rclb
fdivr
adc
stos
movsl
xor
divb
push
inc
stc
repz
cwtl
sar
cmpsl
push
flds
mov
stc
cld
jle
fwait
outsb
jmp
incl
pop
addr16
imul
push
fsubp
lret
mov
pop
pop
std
adc
decb
push
dec
fildll
inc
sarb
sub
sub
lods
and
sbb
and
lret
data16
mov
adc
jp
mov
das
scas
mov
ljmp
repz
lods
out
dec
or
addr16
jne
stc
cld
stc
cmpsl
dec
cmp
repnz
pop
and
pop
xchg
insb
out
pop
repz
xor
fnstcw
aam
push
mov
cli
test
movsb
mov
in
or
ds
stc
sahf
or
hlt
mov
xchg
jnp
out
pop
hlt
rcrb
pushf
negl
jg
xchg
pop
loope
xchg
in
lahf
pushf
sub
xrelease
fisubrs
push
add
sub
jns
lods
mov
ljmp
pop
mov
jle
jg
imul
push
cs
scas
jmp
lret
mov
mov
out
das
dec
jne
sbb
sub
jg
adc
cwtl
jp
xor
sub
fcomi
dec
jl
into
mov
xchg
sahf
stos
fucom
dec
xor
pop
ss
out
sbb
push
pop
jns
loopne
jg
inc
fs
stos
cmp
pop
jns
xchg
cmp
popf
aad
lods
shrl
repnz
dec
jno
jno
fucom
mov
xchg
sti
lret
mov
mov
mov
insb
out
jle
repnz
ud1
cmp
pusha
in
cmpsl
pop
cli
repnz
mov
test
fcmovnu
daa
les
movd
pop
cmpsb
push
ja
aas
jg
imul
aas
outsl
or
jge
inc
in
ljmp
jp
int3
or
stc
add
repnz
nop
mov
push
lods
push
ret
pop
jle
cld
adc
pop
je
daa
lcall
lcall
dec
and
rcrb
popa
popa
ja
xchg
push
pop
jns
mov
mov
sahf
fs
jns
imul
jb
push
repnz
jns
xchg
rorb
pop
mov
mov
rclb
int
sub
fidivrs
aaa
cwtl
sub
and
mov
in
push
mov
leave
mov
pop
push
pop
dec
cmp
imul
repz
pop
jns
jecxz
dec
repz
jle
push
xchg
ss
shll
jae
icebp
mov
push
sbbl
scas
sbb
fidivrs
and
test
outsl
mov
idivb
enter
ja
stc
aaa
inc
loopne
xchg
add
xor
jno
xchg
push
pop
insl
out
push
ljmp
sub
jns
pop
into
es
je
xor
xor
in
icebp
and
mov
ret
lahf
jb
xchg
push
cmpsl
push
jecxz
fdivrl
cmp
jge
decb
dec
sahf
xor
call
out
push
pop
out
lahf
aas
out
xlat
jp
lods
pop
xchg
fnstsw
repz
mov
push
add
adc
mov
or
push
adc
adc
and
out
lret
iret
lahf
cmp
dec
movsl
xor
in
pop
scas
mov
cmp
insl
ret
add
xchg
dec
std
xchg
out
insl
pop
rcll
mov
sub
ret
sti
out
scas
icebp
orb
cli
in
lret
je
std
xchg
or
sbb
imul
cld
enter
lret
insb
repnz
test
aas
mov
leave
cs
addr16
repz
mov
in
dec
inc
cmp
dec
push
call
push
lcall
xchg
bound
mov
enter
cmp
stos
daa
jl
stc
enter
ret
push
sbb
call
repnz
loope
push
jle
ret
sbbb
repnz
xlat
xlat
jbe,pt
jns
fstpl
int3
pushf
cli
lea
dec
repnz
pop
pop
push
scas
lods
hlt
dec
xor
daa
lret
mov
shll
cmc
jb
push
sub
or
enter
xlat
mov
scas
int
xchg
repz
lahf
xchg
push
jg
inc
dec
xlat
popa
fidivrs
mov
mov
push
mov
pop
bnd
jb
in
push
into
cmp
test
pop
mov
das
aaa
mov
daa
xchg
fs
mov
xchg
push
pop
inc
mov
negl
stos
dec
sti
xor
ljmp
shrl
mov
int3
subl
stc
repz
xchg
repnz
dec
mov
ficoms
cmc
ret
stc
add
jns
and
loopne
sub
sbb
fstps
and
sub
jnp
pop
lods
inc
psraw
pop
insl
outsl
lea
jecxz
jge
xorps
xlat
mov
scas
push
mov
mov
xchg
popa
pop
dec
fwait
enterw
push
jge
cmpl
and
outsb
xchg
jo
jecxz
and
das
push
pop
adc
aaa
ljmp
imul
cmovns
add
cmp
in
push
pop
repz
lcall
dec
sub
xchg
push
pop
jns
loopne
ret
adc
loop
inc
mov
jns
cli
push
or
fimuls
lea
xchg
inc
iret
lahf
aas
dec
fiadds
push
es
dec
loopne
repz
pop
lcall
loope
jne
ret
shlb
lahf
aas
scas
cld
xchg
mov
cmp
push
repnz
in
loope
sub
sbb
cmp
push
mov
cmp
shl
mov
out
les
mov
int3
jl
dec
lods
jbe
mov
iret
add
nop
pop
jge
mov
jl
in
xor
inc
xchg
pop
popa
lahf
aas
jg
mov
test
cli
rolb
stc
repz
sbb
fxch
add
xchg
imul
into
adc
cld
test
sub
loope
push
mov
aas
int
cmpsb
cmpsl
jnp
push
pop
jns
je
in
jno
ret
jmp
sbb
or
or
xor
push
in
orb
adc
lods
push
lahf
pop
sbb
es
in
jg
lret
iret
sub
xor
push
adc
out
lahf
cmc
jno
cmc
jmp
out
xor
fdivrs
cld
stc
mov
jns
adc
mov
mov
rol
iret
lahf
aas
xor
stos
js
push
out
inc
popf
sub
rep
xchg
cmp
or
dec
push
insl
cwtl
addr16
cmp
jae
int
adc
dec
in
aas
lea
or
xor
ljmp
sub
push
pop
add
dec
jle
mov
jnp
pop
das
scas
cmp
sbb
lock
sub
out
das
mov
test
ret
xor
mov
mov
das
mov
addb
jb
mov
std
inc
and
inc
fnstsw
aas
jg
and
sbb
mov
lahf
mov
adc
imul
mov
jmp
or
mov
std
jnp
movsb
pop
pop
or
iret
add
iret
pop
inc
scas
jmp
add
loope
leave
mov
mov
psrad
cld
jb
mov
fs
roll
lahf
aas
jg
push
daa
pop
and
scas
inc
cmp
jno
sub
and
and
or
je
inc
shrl
jg
cld
adc
out
push
xchg
leave
adc
dec
mov
pop
lock
dec
movsl
mov
mov
movsl
push
out
fdivrs
cld
sbb
lahf
out
int
add
cs
pop
mov
jle
cs
aad
mov
jg
xor
std
je
lahf
jnp
aas
in
lahf
jg
ss
insl
aad
push
repz
loope
push
scas
mov
out
clc
int
xchg
mov
subl
test
jo
push
addr16
mov
stos
inc
filds
jns
xchg
ja
mov
mov
mov
mov
xchg
push
pop
sub
mov
xchg
push
push
addb
fnstcw
das
loope
push
mov
and
cmp
mov
paddb
push
in
push
fisubrs
imul
sub
jge
notl
ror
icebp
push
sub
adc
inc
aad
inc
das
mov
adc
insb
push
or
xor
push
gs
jb
or
gs
ficompl
xchg
add
aas
jg
cs
push
mov
imul
outsb
lret
jns
and
gs
cld
stc
repz
das
out
xor
inc
cs
sti
icebp
mov
lahf
aas
jg
mov
aaa
int3
rorb
jl
push
or
je
imul
ljmp
in
sub
adc
jl
stos
in
sbb
mov
icebp
lret
inc
call
in
or
ds
cld
stc
xor
daa
mov
cli
jns
pop
enter
aas
jg
jns
jecxz
imul
xchg
pop
loopne,pt
cmp
je
jno
jo
xor
lods
dec
jle
shll
sar
jle
cld
lea
pop
stos
or
aam
jae
icebp
stc
test
jmp
mov
fsubrl
movsb
out
in
jle
mov
aaa
push
fnstcw
aaa
sahf
and
cld
inc
mov
mov
into
inc
dec
mov
aas
stos
dec
stc
inc
orb
xchg
lock
xchg
ja
adc
jp
fidivrl
stc
stc
sbb
into
shl
xchg
lret
or
mov
sub
cwtl
mov
repnz
lahf
loopne
fnstenv
into
aad
out
pop
jns
hlt
lahf
push
loope
outsl
mov
movsl
in
jg
cld
adc
pop
sti
stos
fidivrs
push
int3
ljmp
and
outsb
or
cld
stc
xrelease
mov
dec
scas
pushf
pop
fldenv
aas
jg
mov
xor
lahf
pop
loope
sahf
imul
ds
sbb
sbb
test
iret
xor
cmp
fcompl
jecxz
mov
mov
jle
out
syscall
mov
adc
in
incb
fildll
push
in
fwait
cmpl
jns
or
pop
mov
cmp
push
pop
jns
or
loopne
test
adc
addr16
mov
and
rcrl
aam
xchg
push
ss
pop
je
push
dec
push
cmc
push
in
push
pop
loopne
push
xor
mov
mov
ja
jmp
scas
imul
sbb
jo
push
mov
mov
xchg
fistpl
fprem
repnz
std
sub
into
adc
loop
out
lahf
dec
and
inc
lea
jb
push
out
adc
scas
movsl
and
jg
pop
xor
cli
sbb
repz
test
jmp
and
jg
cld
stc
mov
sub
mov
adc
lahf
aas
adc
ret
or
pop
xchg
ja
cmp
jmp
fbstp
hlt
push
push
mov
div
lret
xchg
add
jp
adc
mov
xchg
push
pop
int
cltd
insl
adc
lret
xchg
xchg
jno
aas
mov
scas
mov
cmpsl
jp
push
sbb
repnz
popa
outsb
dec
push
cmc
add
clc
adc
dec
loope
aam
inc
std
sbb
out
out
fistps
iret
mov
aaa
push
arpl
mov
cld
stc
mov
aad
pop
sub
sbb
mov
sub
addr16
push
outsl
enter
repnz
mov
jnp
mov
xchg
pushl
jle
adcb
mov
fwait
out
mov
out
lahf
aas
mov
push
xchg
pop
xchg
ss
and
insl
stc
cld
stc
rep
insb
fwait
mov
xchg
cmpl
cmpb
inc
lahf
sahf
lahf
fcom
adcb
lahf
aas
inc
incb
in
inc
rclb
push
arpl
div
out
out
push
icebp
jmp
pushl
das
push
pop
rorl
dec
adc
add
xchg
mov
mov
sbb
lret
mov
jns
push
cwtl
out
in
mov
mov
or
sub
push
js
mov
fs
sbb
add
js
fstpt
jg
inc
fimuls
push
mov
repz
lahf
adc
pusha
jbe
pushf
cmp
dec
std
repnz
push
ss
mov
cld
lahf
aas
jg
mov
clc
pop
inc
mov
add
and
popa
das
mov
imul
into
es
pop
jle
cld
add
lahf
xchg
push
xchg
int
add
adc
cld
push
into
int3
outsl
scas
sarb
lahf
cmp
out
lahf
aas
outsb
lds
sbb
ret
cld
stc
repz
mov
jne
frstor
testl
sub
test
push
movsb
adc
and
cld
stc
repz
mov
add
out
pop
dec
gs
xor
call
add
sub
repnz
das
stos
pop
aas
sbb
add
das
and
in
xchg
in
mov
and
add
aas
aas
rclb
out
insl
stos
test
or
sbb
out
lahf
add
mov
leave
sbb
es
pop
jns
inc
lret
in
pop
in
inc
out
rorb
out
push
mov
sbb
sub
outsl
dec
rclb
push
sub
fidivrs
sub
pusha
xchg
push
pop
dec
decl
jb
jb
stc
repz
ds
scas
insl
xchg
ss
xlat
or
fidivrs
scas
inc
xchg
lcall
imul
xchg
cmpb
gs
aam
sub
and
or
icebp
cmp
push
mov
push
jb
add
or
jp
cld
push
pop
fisubrs
outsl
out
add
pop
in
jns
aas
jg
push
addr16
inc
rep
popf
bound
out
cmp
inc
push
icebp
inc
sbb
jg
cld
nop
mov
cmpsb
lahf
rorb
jne
out
lret
mov
fdivrp
mov
into
xchg
lret
das
lahf
mov
pop
push
xchg
popf
mov
xchg
sbbl
shll
dec
imul
push
or
mov
js
lea
jno
dec
aad
cld
stc
jo
cs
scas
lods
or
inc
cld
lahf
pop
push
mov
jle
rcr
imul
lock
lcall
mov
push
pop
pop
mov
hlt
jmp
clc
arpl
repz
jle
adc
out
mov
xor
add
repnz
rclb
push
nop
xor
lahf
aas
jg
mov
test
mov
cmc
lret
out
je
xchg
outsl
push
pusha
push
gs
inc
jge
stc
xor
jmp
in
jle
dec
std
je
outsb
les
or
xchg
pop
in
sub
pop
sub
dec
add
inc
and
cld
cld
dec
cli
and
sarl
in
mov
enter
repnz
daa
mov
xor
ljmp
pop
xor
ds
mov
into
add
repz
pushf
daa
add
sbb
adc
neg
divps
inc
dec
inc
into
sahf
outsl
lods
lret
mov
sub
into
dec
scas
mov
pop
jge
xchg
jecxz
mov
sti
in
sub
enter
mov
cmpsb
pushf
jl
iret
lret
mov
pop
mov
jg
sub
lods
nop
mov
out
or
daa
scas
mov
mov
hlt
repnz
in
push
je
out
lret
sub
sub
insl
dec
daa
pop
xorl
adc
sub
lret
outsb
adc
inc
pop
scas
mov
negl
pushl
das
andl
inc
clc
sbb
icebp
out
repnz
push
mov
cld
stc
inc
push
add
lock
in
mov
jae
das
mov
fdivrp
mov
mov
pop
cmp
dec
ret
push
pop
jns
subb
fs
imul
ja
popf
jns
lret
xchg
insb
xor
inc
mov
in
push
pop
sti
and
mov
loopne
mov
lahf
shll
mov
shrl
sahf
enter
ja
jne
xor
pop
lock
pop
jns
test
rclb
add
cmpsb
mov
stc
repz
pop
test
jle
enter
jmp
mov
mov
mov
ljmp
mov
xchg
push
pop
jns
jo
jge
insb
bound
mov
pop
jns
xchg
and
mov
mov
mov
leave
cmpb
jns
xchg
push
cld
mov
mov
jge
ja
pop
mov
mov
scas
sahf
jp
rorb
inc
pop
fidivrs
in
arpl
cli
popa
mov
ja
mov
mov
test
pop
cwtl
stc
and
dec
pop
mov
lea
push
mov
add
jg
cld
adc
scas
pop
aad
xchg
shlb
mov
stos
jno
or
int3
jg
daa
mov
ss
aam
sbb
xor
sub
dec
int
push
cmp
cwtl
outsb
adc
and
repnz
cmpsb
mov
and
sub
out
cs
sub
sbb
pop
pop
dec
jne
push
add
xor
lahf
aas
jg
ljmp
rol
sti
lods
in
loop
fdivrl
jno
pop
jo
imul
xchg
ret
pop
adc
out
jnp
std
sti
pop
lret
mov
fdivl
das
sub
mov
jbe
pop
xor
push
aas
pushl
mov
dec
outsl
and
repz
pop
enter
push
stos
inc
mov
aas
jg
cld
in
jo
or
mov
adc
lahf
test
mov
fcmovb
jecxz
icebp
add
cltd
in
loop
js
shrb
xchg
std
push
pop
jns
icebp
ja
mov
scas
pusha
mov
fstpt
xchg
ficomps
mov
add
push
fdivrp
shlb
pushf
mov
push
and
incb
pop
in
jno
cmp
mov
pop
push
xor
adcb
xor
lret
sbb
dec
sbb
or
shll
xchg
scas
frstor
fisttps
and
test
ret
divb
cmp
popa
push
out
mov
mov
sub
add
out
dec
std
jbe
cmpb
push
and
and
push
add
pop
mov
fcmovnbe
mov
or
aas
jg
xor
dec
sbb
stc
repz
stos
test
adc
xlat
jne
lret
push
jle
jl
ret
ret
mov
cwtl
inc
dec
jno
iret
lahf
aas
nop
mov
arpl
mov
hlt
push
mov
jge
xchg
dec
push
pop
jecxz
aas
adc
aad
repnz
sbb
mov
sbb
sub
cli
push
fwait
pop
ret
jns
scas
mov
mov
adc
mov
xor
test
lahf
adc
mov
add
pop
push
jle
cld
stc
loop
and
movsb
jp
loope
fwait
mov
incb
dec
mov
mov
cs
shrb
push
stc
repz
repz
movsb
lret
pusha
jnp
pop
cmp
pop
aas
jg
cld
out
add
std
mov
cmp
pop
push
xchg
iret
lahf
inc
lret
ds
add
and
cld
stc
repz
dec
cs
ljmp
add
out
or
and
subb
pop
test
pop
xchg
cld
stc
repz
loopne
jnp
xor
push
adc
pop
jle
popa
jb
aas
inc
sub
push
iret
lahf
pop
sbb
mov
cltd
sub
repnz
xchg
push
pop
push
les
mov
cmp
sub
mov
js
dec
dec
out
outsl
add
mov
push
dec
pop
xchg
in
rorl
xor
sub
jg
bound
pusha
inc
repnz
test
and
jo
int
sub
fs
stc
pop
pop
das
scas
mov
push
clc
mov
insb
leave
mov
repnz
outsl
dec
lea
data16
mov
jmp
pop
scas
lods
fsts
test
xrelease
dec
les
cmp
jle
outsl
mov
ja
jl
adc
data16
in
shl
add
aad
into
jl
mov
sbb
outsb
and
aaa
lahf
jmp
into
push
xchg
cld
icebp
xchg
gs
xchg
aas
mov
addb
mov
jo
mov
in
das
je
jp
sub
xlat
mov
das
push
sub
cli
outsb
leave
inc
add
lock
mov
es
mov
fstps
fsubrl
inc
xchg
jg
pop
iret
lea
ds
je
mov
lret
mov
out
js
dec
cli
cmp
ljmp
mov
pop
je
out
mov
adc
pop
lods
outsb
add
mov
subps
repnz
stc
cmpsl
jle
or
xchg
dec
pop
and
mov
loop
iret
push
or
sbb
cli
pop
stc
repz
jmp
loope
push
cmpsl
xchg
nop
popf
test
mov
out
pop
outsb
push
pop
jns
dec
pop
aas
arpl
and
inc
add
and
jns
xchg
icebp
or
scas
xor
scas
popa
inc
movsb
cmp
sub
cmp
das
aas
jg
xor
jg
mov
xlat
dec
ret
loopne
cmpsl
jle
pop
or
push
push
pop
ret
shrl
dec
orl
jp
popf
cmp
repnz
ror
ret
mov
jle
repnz
inc
add
iret
xchg
lods
lahf
aas
aas
mov
fstpl
add
fisubrl
add
iret
dec
pop
cmp
test
sahf
je
pslld
das
mov
movsb
hlt
sahf
jbe
dec
jns
cld
pop
stc
inc
inc
jbe
xor
sub
dec
jp
add
movsl
pop
out
xchg
mov
xorl
xchg
das
mov
and
repz
shlb
testb
cmp
cld
stc
out
jp
mov
fistpll
push
dec
xchg
push
fdivrp
cmpsb
mov
dec
pushl
adc
lock
jb
cwtl
sub
jg
shrb
repnz
mov
shrb
jle
sub
push
mov
mov
jg
or
loopne
cwtl
and
jle
mov
mov
xor
pop
mov
sti
movsb
jg
movsbl
sbb
scas
gs
rorb
out
fwait
inc
pop
pop
xchg
cld
stc
repz
lahf
das
movsb
stos
loopne
dec
push
pop
leave
out
loop
xorl
or
xchg
pop
les
pop
jns
xchg
lret
cmpl
cmp
and
mov
mov
push
sbb
lods
in
lret
xchg
push
pop
std
sbb
aam
loope
enter
stc
xchg
out
das
sbb
sbb
dec
mov
sub
cwtl
xchg
inc
xchg
ja
xor
mov
jae
fcompl
push
or
jns
pop
mov
inc
scas
dec
pop
das
jg
scas
xor
into
jno
sub
gs
out
lods
sbb
sbb
lahf
aas
jg
push
leave
bound
jae
jl
inc
int3
stc
bnd
out
out
mov
std
rep
mov
adc
pop
popa
cmp
dec
jmp
lock
iret
cs
ds
dec
cwtl
jb
sub
mov
push
pop
push
outsb
xor
movsb
pop
pop
add
inc
sub
pop
jns
fstl
aas
mov
mov
xor
inc
les
cmp
add
mov
out
pop
sub
xlat
outsb
packssdw
jg,pt
cmp
sbb
pop
push
pop
xchg
jg
pop
mov
aam
sbbb
jbe
pop
cld
stc
mov
fsubr
das
xchg
mov
mov
mov
nop
and
iret
xor
test
daa
fwait
loope
dec
sti
push
pop
hlt
lret
out
stos
fs
imul
scas
mov
mov
xchg
cmp
test
inc
outsl
out
ljmp
lret
sub
inc
and
pop
aam
jle
dec
iret
jge
roll
imul
or
ror
sarl
ss
pop
cmpsl
mov
mov
repz
xchg
in
pop
push
sbb
das
cld
sub
inc
pop
ss
in
jle
push
ljmp
mov
pop
jns
in
mov
adc
or
mov
pop
add
sbb
inc
mov
mov
cmpsl
cld
out
xchg
in
sub
andl
in
stos
out
in
dec
rcrb
scas
mov
push
pop
jns
mov
arpl
push
pop
and
out
shlb
dec
iret
push
cld
stc
and
mov
daa
nop
or
jns
into
int3
push
das
jg
adc
jo
jne
jl
jae
popl
loope
and
stc
repz
mov
rcrb
push
jne
jbe
push
xchg
sub
das
iret
jle
xchg
aam
mov
out
push
inc
andl
pop
mov
or
popf
add
add
repnz
rcrl
and
pop
stos
hlt
add
pop
lods
das
scas
mov
jnp
dec
ljmp
divps
sub
cmpsl
test
cld
stc
push
jo
and
dec
fdivrs
pushf
lods
cmp
iret
lahf
push
les
push
fs
aam
ret
push
std
repnz
repz
mov
ljmp
bound
ljmp
jno
cld
iret
lahf
aas
jg
insl
enter
sub
sti
sbb
stc
repz
ja
shrb
out
xor
and
hlt
push
cmp
and
repz
repz
nop
xchg
in
fprem1
mov
aad
pop
pop
cld
sub
xor
mov
cmp
out
push
mov
out
cmp
into
insl
add
rcrb
out
in
add
sbb
jg
js
push
jl
into
dec
aas
xor
je
stc
repz
stos
js
inc
cmp
sahf
jl
xor
jle
movsb
lock
aaa
pop
imul
adc
ja
lret
iret
or
xchg
xor
addr16
jl
in
outsl
xor
in
out
jecxz
or
lret
sar
stc
repz
into
icebp
fdivrl
cmc
js
pop
lret
mov
daa
and
loop
push
cmp
ljmp
push
arpl
out
mov
mov
std
jle
add
cmp
add
idiv
push
sbb
push
jo
xchg
dec
add
jl
xor
enter
insb
aam
in
iret
inc
pushf
into
test
and
mov
and
inc
pop
xchg
ss
and
dec
jg
xchg
ds
mov
jg
cld
cmp
or
cmp
subl
out
lahf
inc
mov
pop
add
int
mov
outsl
inc
movsl
addr16
xchg
push
aaa
cmc
lock
xchg
sub
adc
fdivrp
and
clc
repnz
inc
push
pop
inc
enter
in
ja
xchg
dec
sahf
pop
inc
or
sarb
stos
fstl
xchg
punpcklbw
cmp
or
dec
push
jp
mov
std
arpl
jg
cld
pop
stos
outsl
inc
outsb
pop
loopne
movsb
and
pop
jns
xchg
inc
fidivl
test
and
cmp
jns
xchg
push
mov
mov
lods
loopne
sbb
test
and
jbe
or
jle
test
push
aas
scas
and
mov
mov
pop
jns
test
pop
inc
adcl
jo
sahf
out
mov
in
lods
clc
mov
out
addr16
repnz
sahf
pop
push
sbb
scas
ror
xchg
lret
mov
xchg
adc
imul
push
mov
clts
pop
stc
push
push
pop
xor
xor
xor
cld
stc
repz
popa
inc
add
rclb
jg
hlt
xlat
xchg
lahf
aas
jg
cmp
and
daa
jns
or
jl
pop
bound
lods
leave
lahf
aas
jg
lods
sub
sub
dec
mov
mov
out
cli
lahf
pop
movsl
mov
clc
in
sub
jg
sbb
data16
cld
inc
pop
push
mov
shlb
iret
lahf
aas
lahf
loope
jbe
sbb
popf
mov
repz
push
inc
mov
sahf
ljmp
xchg
int3
aas
jg
pop
lahf
stos
fmulp
lahf
cmp
inc
mov
lahf
adc
scas
loope
jecxz
stc
repz
inc
sbb
cltd
jle
mov
inc
xchg
pop
pop
jle
cmp
add
dec
lods
rclb
adc
cmp
pop
stc
repz
into
pushf
jmp
add
lahf
mov
cld
cli
in
fidivs
ret
imul
sahf
or
cmp
jae
shll
cmp
sub
mov
lcall
pop
cli
in
sub
mov
ljmp
sub
jns
or
xlat
jae
lcall
xorps
std
cmp
dec
out
or
adc
jns
xchg
xchg
push
jnp
dec
add
lret
xchg
push
cmp
cltd
das
and
push
pop
jns
and
or
adc
scas
std
jbe
repz
mov
icebp
mov
lret
andb
repnz
sbb
sub
sub
iret
lahf
repnz
cmc
inc
pop
mov
pop
jb
adc
cmp
lock
test
xchg
xchg
sbb
add
jle
repnz
mov
test
movsl
repnz
push
cmc
pop
addr16
add
lret
mov
push
outsl
je
pop
out
or
sub
sti
das
andl
sarb
mov
push
imul
inc
jmp
pop
and
mov
daa
jecxz
sub
xchg
jae
inc
cli
in
out
jbe
lret
sbb
mov
cld
stc
repz
push
cmp
inc
jmp
xor
stc
inc
or
or
jp
cmp
cmp
aas
mov
sbb
les
out
push
les
sar
xor
insb
mov
cmpsb
jl
out
loopne
cmp
jns
imul
mov
gs
cwtl
mov
ficomps
and
xchg
into
push
pop
jns
and
mov
cmp
sbb
and
in
cltd
lcall
out
testb
sti
repnz
js
xor
fwait
mov
pop
aas
out
lret
mov
fwait
out
js
and
xchg
add
lock
scas
pushf
fistpll
push
mov
bound
bound
lahf
aas
mov
rol
xchg
mov
in
filds
xor
out
shrb
out
cmp
pushf
mov
lret
inc
push
in
loop
cmp
dec
notl
leave
xor
jnp
call
punpckldq
add
leave
inc
test
push
xor
jp
mov
xchg
push
pop
jns
jg
fnstenv
iret
mov
sbb
mov
cwtl
jno
push
push
iret
insb
mov
cmpsb
mov
cmp
stc
lret
insl
lahf
pop
lods
lahf
cmp
pop
pop
mov
lods
out
out
jg
orl
inc
outsl
mov
aas
mov
jecxz
push
mov
popa
cld
stc
repz
out
push
sub
mov
fildl
xor
jg
mov
pusha
std
mov
dec
lods
mov
dec
adc
mov
pushf
inc
mov
jae
mov
push
lcall
mov
sub
lods
push
loop
cmp
lret
iret
comiss
dec
mov
stc
repz
push
notb
dec
cmpsl
adc
jmp
test
jg
stos
sbb
dec
adc
repz
pop
mov
and
add
jg
jp
lahf
push
lock
iret
lahf
pop
ficompl
int3
mov
aaa
xchg
mov
stos
int
fldl2t
push
hlt
lcall
out
dec
test
popa
push
out
mov
jb
pop
cmp
into
out
cmc
scas
sbb
or
in
inc
mov
and
or
repnz
rcll
cld
stc
sbbl
lahf
scas
fldl
inc
sub
lahf
aas
jg
pusha
mov
sub
fidivl
out
jle
mov
dec
mov
inc
sub
jle
push
repz
mov
bound
and
mov
or
lcall
jns
cmp
pop
inc
cwtl
in
sbb
in
push
jecxz
lahf
pop
movsb
adc
cmp
push
pop
out
outsl
xchg
push
mov
xchg
mov
outsl
jecxz
out
shrb
jb
xchg
cmp
cli
divl
xchg
lahf
test
gs
jle
pop
lods
iret
lahf
lret
mov
xchg
das
call
dec
mov
imul
ret
in
push
or
mov
and
outsb
inc
clc
rcpps
mov
outsl
pop
das
stc
repz
sub
mov
sarb
mov
cld
mov
xchg
adcl
pop
jo
cltd
xchg
mov
and
xchg
sbb
int
xor
repz
dec
jo
cmp
js
adc
cli
outsl
ljmp
aas
jg
cld
pop
xchg
cmp
add
ret
lret
out
lahf
in
sti
push
scas
inc
mov
shlb
mull
ficoms
cli
mov
mov
pop
jle
outsb
jns
fwait
arpl
cld
cld
xor
outsl
aaa
scas
mov
or
stc
cld
jno
in
js
dec
icebp
lahf
pop
or
push
stos
lret
je
push
imul
iret
lods
and
int
inc
lahf
ficoms
pop
je
dec
mov
dec
cmc
push
inc
jb
sbb
addr16
int3
fistpl
add
cld
cld
outsb
and
je
add
out
inc
jmp
xchg
inc
pop
into
add
fcoml
pop
stc
repz
das
repnz
sub
outsb
sub
lahf
aas
jg
imul
mov
pop
lods
icebp
lahf
aas
jmp
daa
xchg
and
repz
xchg
xor
leave
out
sub
lds
cld
push
push
enter
add
movsb
add
incb
gs
push
fstpt
out
lahf
adc
jbe
sti
inc
daa
or
outsl
mov
stos
mov
test
adc
cmc
dec
cmc
repnz
ljmp
dec
imul
push
pop
ds
repnz
jb
sub
dec
jmp
iret
ret
mov
pop
jns
in
daa
dec
jbe
or
aad
arpl
mov
inc
stos
fdiv
mov
popa
hlt
fldenv
in
push
pop
mov
xchg
mov
movsl
nop
sub
sbb
lcall
fstl
addr16
add
lock
popf
pop
pop
ret
dec
mov
aas
lret
mov
or
mov
jle
repnz
mov
cmpsl
adc
shll
loopne
repnz
xchg
sub
je
inc
aam
sbb
cmpsl
das
scas
mov
lret
roll
and
sub
je
sub
fcmove
dec
jmp
mov
movsl
fsub
cmpsl
push
aam
pop
xchg
sub
dec
xchg
imul
lret
gs
push
pop
pop
and
pop
enter
mov
stos
add
test
clc
in
lock
add
ss
das
mov
fbld
jmp
lahf
ret
test
hlt
lcall
mov
or
icebp
push
add
mov
daa
add
dec
cmc
hlt
xor
dec
scas
imulb
pop
iret
inc
mov
xchg
iret
scas
pop
pop
ror
in
mov
in
iret
lahf
jg
push
iret
pop
and
add
pusha
cmc
es
in
or
repnz
cs
nop
inc
and
jg
pop
loope
rcrl
lret
pop
shll
pop
push
popl
es
aas
mov
aas
add
into
insl
jne
pop
lret
icebp
dec
cli
in
cmc
push
jmp
lcall
lret
jbe
je
daa
outsl
push
adc
das
push
dec
mov
add
dec
xor
jecxz
sub
sub
and
xor
fdiv
lahf
pop
call
inc
push
mov
hlt
in
arpl
repz
lods
sbb
out
jle
lods
pop
mov
int
aas
jg
cld
call
fs
je
fildll
fstl
mov
jmp
pop
pop
jns
cs
ja
jle
aad
test
outsl
int3
aam
stc
repz
add
cmp
cmpsb
mov
inc
lds
cmp
dec
shlb
cmpsl
inc
pop
pop
jns
xlat
lcall
into
push
mov
pop
jg
mov
sbb
leave
icebp
jg
test
xchg
mov
cmp
mov
mov
enter
jle
mov
jle
repnz
sbb
in
call
adcl
fdivl
sub
cmp
fucom
lret
sub
mov
pushf
je
xchg
cld
inc
cli
sti
aas
mov
cmpsb
pushl
test
andl
stc
and
adc
mov
dec
ret
mov
dec
sti
add
add
pop
repnz
inc
pop
wrmsr
sbb
call
push
pusha
mov
mov
adc
aad
add
adc
scas
mov
lret
xchg
xlat
pop
sub
hlt
sub
es
mov
sbb
pop
lcall
pop
aas
repnz
lret
sub
fiaddl
mov
mov
or
pop
pop
push
adc
test
into
out
inc
pop
mov
lock
cmpb
scas
mov
push
dec
fs
sbb
into
mov
mov
push
dec
std
jb
jg
das
out
mov
sub
es
stos
push
ljmp
test
inc
shll
mov
outsl
push
jl
cld
stc
dec
mov
fdivl
in
outsb
mov
mov
pop
jb
pop
insb
sbb
sahf
aas
push
js
out
icebp
lret
xchg
adcb
or
adc
push
sub
xchg
mov
mov
xchg
cmc
xor
inc
cmc
mul
and
js
das
xlat
mov
mov
jae
mov
dec
loop
cmpb
or
jae
mov
test
outsl
dec
jb
mov
stos
fidivrs
mov
fisubs
mov
and
loop
mov
call
gs
mov
or
aad
mov
arpl
imul
loopne,pt
outsl
push
movsl
and
xchg
iret
lahf
jle
jmp
add
push
pop
bound
dec
cmp
lahf
sbb
dec
sbb
xchg
iret
lahf
and
sahf
xchg
cmp
shl
arpl
xchg
pop
push
in
cli
in
lret
dec
out
cmpsl
das
scas
xchg
inc
pop
repz
and
sub
lret
repz
shlb
xlat
mov
bound
movsl
cld
pop
clc
in
addb
into
cmp
enter
push
mov
and
and
lret
out
call
icebp
aas
mov
sbb
jmp
aas
sbb
jmp
pop
jns
inc
xchg
or
dec
cltd
mov
jb
sarl
mov
das
das
scas
mov
push
fidivrs
dec
mov
cld
stc
adc
xorl
sahf
aas
jg
mov
daa
mov
lock
mov
das
stc
xchg
aam
das
mov
mov
sbb
pop
cmpb
or
sbb
xchg
int3
lahf
sub
xchg
pop
scas
xor
fst
push
jl
mov
cmp
jns
dec
dec
sub
inc
cmp
dec
test
in
test
add
daa
xor
bound
push
popa
pop
cli
mov
stos
and
les
push
pop
mov
adc
mov
lret
out
push
test
repz
lods
push
pop
mov
fdivrl
imul
xchg
xchg
push
mov
xchg
addr16
repz
addr16
das
sub
js
mov
xchg
jge
adc
fwait
aas
call
jbe
or
mov
js
dec
shll
repnz
lahf
cli
mov
ret
jo
mov
xor
pop
and
xor
inc
out
push
jle
mov
fidivl
fisubl
jmp
iret
lahf
aas
or
pop
cmp
data16
dec
ds
and
push
lahf
movsb
hlt
push
xchg
cmp
insl
outsl
xor
mov
fistps
or
mov
mov
mov
cld
mov
sbb
sub
js
jns
out
pop
jge
push
aad
in
lret
mov
ljmp
cmp
cld
sbb
imul
aas
mov
mov
test
in
mov
adc
mov
loopne
mov
jg
jne
push
push
in
lahf
mov
scas
movsl
ds
int
sub
adc
arpl
lret
test
mov
jl
mov
pop
jecxz
mov
fisubrs
inc
jg
and
and
pop
pop
cltd
pushf
out
inc
dec
mov
aas
sub
pop
push
sub
sbb
stc
stc
repz
dec
aad
in
out
pusha
shrb
stos
addr16
jle
add
test
dec
shlb
lahf
jg
outsb
jmp
loope
insl
icebp
inc
loopne
pop
ret
cmp
repz
dec
aas
inc
and
out
xor
mov
movb
outsl
lods
push
push
adc
in
sub
cs
dec
cmova
clc
sti
inc
out
push
pop
out
lahf
jg
xchg
push
repnz
cwtl
stos
push
adc
sbb
repz
jle
mov
cltd
sub
lahf
out
sbb
repz
xor
cmp
cld
stc
cmp
sub
pop
je
cmpsb
jno
lahf
add
adc
mov
mov
sbb
sbb
out
xchg
and
cld
stc
repz
lds
cmp
dec
inc
or
aas
jg
in
fisubl
fwait
adc
jo
repnz
stc
repz
cmpsb
dec
loop
or
sub
into
xlat
outsl
push
xchg
lahf
aas
jg
cmp
sbb
cmpsb
pop
sbb
mov
out
adc
sti
hlt
daa
test
jnp
out
cmc
adc
cld
rcrb
mov
andl
pop
mov
xor
cmp
inc
imul
mov
pop
cld
stc
mov
movsl
ficompl
dec
fbld
or
jg
out
sbb
pop
mov
fistpll
or
lods
popa
push
clc
sti
enter
jecxz
mov
out
jle
cltd
mov
pop
iret
pop
push
lret
sti
in
sub
jl
push
stos
cmc
shrb
xchg
sub
out
xchg
les
aad
frstor
push
in
test
out
movsb
loop
jns
out
pop
out
out
lret
mov
cmp
test
data16
jae
inc
pop
popa
mov
dec
inc
fldcw
scas
inc
daa
in
jle
enter
dec
roll
mov
repnz
sub
iret
rclb
add
dec
jmp
or
adc
popf
cmpsl
stos
fildll
mov
add
pop
mov
inc
lahf
xchg
xchg
or
in
add
addr16
stc
repz
dec
inc
nop
scas
inc
sbb
iret
aas
jg
cld
nop
sbb
push
pop
jg
mov
adc
lahf
int3
xorb
or
jg
out
aad
mov
std
sahf
arpl
std
jb
jno
scas
lcall
out
dec
daa
scas
mov
data16
jmp
jbe
mov
xchg
negb
jns
enter
je
push
adc
lret
xchg
ja
add
loope
popf
and
pop
adc
jg
dec
sub
iret
lahf
aas
aam
in
xchg
cmp
in
push
cmp
cld
stc
repz
in
mov
jmp
pop
out
pop
lahf
loop
iret
lahf
aas
jg
xchg
sub
jnp
repz
aas
pop
daa
mov
test
dec
pmulhw
es
sub
jns
or
aam
add
sub
inc
inc
sub
lret
loopne
sub
mov
sti
stos
es
pop
pop
stc
xchg
icebp
repnz
cld
clc
push
cltd
in
cmp
mov
jg
cld
int3
mov
inc
jb
jne
fstl
ret
or
xchg
ret
pop
jns
adcb
and
call
and
xchg
jnp
add
out
stos
xor
loopne
repnz
repz
lods
add
xchg
xchg
push
fimuls
pop
call
inc
rorb
push
pop
jns
cmpsb
movsb
test
cmp
dec
jle
push
pop
jns
inc
sub
pop
popf
dec
push
mulb
test
cmc
in
out
cmpsl
add
xchg
push
test
repnz
add
pop
jns
lret
xor
jo
push
sbb
add
ds
repnz
mov
fists
xor
pop
xchg
xchg
aam
push
mov
jo
repz
sar
cmp
pop
sub
jle
jnp
pop
xchg
das
fisubs
pushf
mov
ljmp
sub
je
addl
repnz
lret
sub
mov
xor
iret
lahf
pop
push
jno
adc
jge
std
or
cld
stc
repz
insl
das
mov
xchg
cs
pushf
stc
mov
lea
das
loop
push
push
dec
mov
enter
fldcw
xchg
push
into
aas
aas
jg
cld
out
pop
mov
sbb
in
and
outsb
gs
lahf
sbb
sbb
bound
xchg
dec
pmaxub
repnz
aad
jnp
insb
inc
mov
adc
adc
and
in
push
mov
jmp
psubw
and
dec
jno
cs
jle
cld
mov
out
idivb
icebp
scas
adc
lret
lahf
pop
inc
push
scas
mov
leave
cmp
pop
sar
ret
add
and
mov
lahf
aas
jg
sti
sub
imul
jmp
xor
enter
cmp
dec
cmp
adc
scas
mov
sub
push
iret
push
xchg
ja
xchg
arpl
arpl
dec
push
sub
jns
stc
fisttpll
xlat
xor
sbbb
pop
jle
sbb
dec
rolb
icebp
lret
out
data16
cs
mov
cld
stc
cmpsl
enter
stc
lret
mov
out
in
pop
jp
mov
mov
movsb
hlt
in
lret
aam
cld
cli
scas
leave
fnstenv
mov
stc
xchg
mov
out
xchg
and
mov
lcall
dec
cmp
arpl
std
mov
and
sti
das
push
pop
jns
lcall
icebp
xchg
daa
out
adc
out
imul
jno
mov
mov
push
iret
repz
outsl
xor
inc
out
lret
iret
divps
jmp
adc
mov
out
jle
bnd
out
pop
push
lock
cmp
jg
bound
mov
in
es
stos
and
mov
scas
sub
mov
lret
mov
xor
mov
pushf
mov
mov
fldenv
mov
int3
mov
mov
add
add
out
lret
fwait
out
xchg
sub
out
divl
scas
mov
fcmove
xor
or
ss
jne
clc
or
aas
fildll
pop
jns
fnstsw
out
lock
or
stc
mul
xchg
push
pop
pop
fucomi
inc
subb
jle
jl
stos
xchg
push
pop
jns
pop
js
jnp
inc
pop
or
or
in
test
sbb
fcmovnu
mov
jns
xchg
mov
aam
je
mov
and
scas
insl
push
pop
jg
cmc
xchg
mov
vmaxpd
and
cmp
repz
mov
jmp
gs
jg
cld
mov
xchg
jo
pop
mov
xchg
iret
lahf
aad
and
jg
stos
paddb
repz
mov
mov
xchg
lcall
inc
fbld
fistps
pop
stos
fmul
sub
aas
jne
adc
jge
or
leave
sbb
sub
test
ljmp
pop
jns
sbb
mov
adc
and
call
das
or
daa
test
pop
pop
sbb
mov
sub
lds
pop
xor
xor
scas
mov
in
sbb
into
mov
scas
and
jg
cld
dec
sub
dec
sbb
fwait
pop
int3
cmp
push
leave
in
das
lahf
shrl
lock
test
movsb
dec
mov
mov
sub
sub
fstl
fcmovb
mov
subb
scas
repnz
ret
arpl
or
rclb
daa
ljmp
aas
jg
cld
outsb
adc
int3
hlt
mov
repz
and
iret
pop
lea
xchg
test
push
and
dec
push
adc
sbb
xorl
cld
stc
jns
push
dec
sub
xchg
lahf
js
sbb
xchg
fldl
xchg
ja
das
sarb
pop
outsl
or
jb
mov
and
inc
inc
mov
inc
push
mov
cld
sbb
hlt
ljmp
cmp
dec
mov
sub
lods
das
lahf
aas
aas
push
push
inc
je
xor
jmp
dec
outsl
out
sahf
sub
ds
movsb
arpl
stc
repz
into
popf
loope
insl
or
jp
xor
lahf
aas
jg
pop
in
aam
ss
frstpm(287
add
repz
inc
outsb
xlat
hlt
mov
ljmp
mov
outsl
jae
das
adc
pop
adc
jne
xor
sti
push
pop
iret
lahf
aas
jg
xchg
fdivr
fsubrl
fstpt
loope
in
inc
hlt
cld
stc
repz
or
push
movsl
xchg
pushf
scas
je
xchg
lahf
aas
jg
out
xor
mov
call
iret
mov
jb
scas
imul
jg
cld
mov
std
xchg
mov
xchg
rorb
push
in
and
lahf
add
xor
pushl
iret
sti
xor
lret
iret
pop
cmp
pop
jle
dec
stc
repz
dec
push
mov
jge
push
sti
sbb
add
test
hlt
mov
cld
add
xchg
imul
aas
jg
xchg
mov
inc
shlb
dec
jp
in
inc
movsl
rorb
adc
nop
add
jns
andb
mov
dec
jnp
pop
add
mov
lret
xchg
push
fimuls
fcompl
mov
in
push
xchg
mov
pop
mov
inc
loope
jns
sub
jns
xchg
push
imul
sbb
jns
xchg
push
xchg
repnz
add
mov
in
cli
cld
setns
xchg
push
pop
jns
adc
mov
add
jecxz
std
mov
std
in
sbb
mov
mov
jge
movsl
xchg
pop
jns
xchg
jo
nop
repnz
pop
add
sbb
xchg
push
mov
mov
addr16
in
push
pop
fadds
mov
push
push
cmpsb
or
add
jbe
jp
aad
jle
cld
cld
stc
adc
adcb
mov
sub
fistpll
mov
pop
aas
mov
mov
pop
repnz
fsts
inc
ds
dec
lcall
cmpsl
adc
ret
mov
add
jns
outsl
out
pop
jle
jbe
fldt
or
pop
das
aas
test
rcr
mov
shrb
scas
mov
hlt
fnstenvs
test
xorb
jle
xchg
shlb
rorb
add
dec
and
cs
jns
enter
in
ljmp
jecxz
xchg
sub
pop
rclb
icebp
push
cmp
mov
sti
repnz
adc
cmp
mov
push
into
repz
or
lds
mov
mov
scas
aam
or
rclb
dec
cmp
pop
jbe
je
out
lret
mov
fcmovu
lret
sub
adc
repnz
dec
lea
or
into
mov
xchg
repz
lahf
mov
aaa
xor
imul
leave
subl
sti
push
loop
ret
iret
rol
out
lahf
aas
ret
and
hlt
xchg
imul
enter
je
stc
repz
std
xchg
mov
mov
lahf
jg
aas
jg
dec
adc
xrelease
repnz
xchg
iret
out
cmp
jg
xchg
imul
add
mov
stc
cld
dec
push
cld
or
aad
cmp
sub
aas
jle
sbb
aam
sahf
fcmovnu
ja
in
adc
jmp
jge
lahf
jne
fidivrs
test
imul
sahf
cmp
call
xchg
sbb
cmc
mov
mov
iret
jl
cmp
lods
jbe
daa
sbb
aas
jg
cld
cli
fisubrs
lahf
dec
adc
repz
lahf
stc
mov
pop
test
ret
sub
in
and
stc
stc
or
fildl
mov
in
das
scas
mov
fs
push
imul
jg
fildll
scas
lods
xor
push
mov
mov
ret
sahf
rcr
pop
hlt
popf
insb
adc
outsl
adc
fs
jg
dec
std
cmp
out
out
and
ficoms
ja
jg
mov
inc
pusha
xchg
adc
mov
pop
in
lock
movsl
mov
iret
jle
scas
mov
imul
movsl
mov
dec
push
jae
mov
add
fcmovnb
iret
xchg
outsb
repnz
out
pop
push
cmpsb
jno
sbb
inc
inc
sub
sub
xchg
aaa
or
lahf
insl
out
jle
repnz
test
lret
mov
jmp
xchg
mov
pop
movsbl
repnz
out
inc
out
mov
xor
jnp
and
nop
cmp
adc
add
pop
and
cltd
cmp
lret
cld
das
test
into
jb
xchg
lea
cs
sub
in
sbb
repnz
out
fdivrp
repnz
xrelease
push
jg
cmpsb
fcompl
bound
decb
sbb
fbld
fwait
sbb
mov
fstps
mov
lret
inc
jg
in
push
pop
push
inc
add
aas
cld
mov
xchg
push
pop
inc
push
aam
inc
cmp
stos
xor
push
pop
jns
jmp
repz
dec
jp
jb
jne
push
int3
xor
pop
in
xchg
test
aaa
repnz
sub
xchg
sbb
testb
xchg
sub
jg
push
sub
pop
and
push
icebp
scas
mov
pop
js
vcvttss2si
cli
mov
push
inc
in
cmp
repnz
xor
add
fisubl
aaa
in
jle
push
mov
gs
xchg
xchg
push
pop
jns
js
in
loopne
push
xor
cmc
enter
mov
ja
decb
xor
xchg
lds
and
into
pop
dec
pop
jle
icebp
movsl
xorb
repnz
mov
mov
jnp
inc
mov
aam
iret
lahf
aas
pop
push
jle
jg
fadds
aas
ss
sub
in
hlt
cwtl
pop
push
push
lds
aas
cltd
inc
adcb
jb
add
inc
mov
xchg
jmp
out
fdiv
lret
roll
bound
das
enter
mov
pop
ret
jb
add
scas
mov
mov
test
pop
imul
scas
mov
xchg
std
and
jo
clc
in
sub
orb
repz
cmp
pop
mov
xor
inc
clc
pushf
aam
outsb
fisubrs
pop
stos
dec
into
mov
cld
dec
pop
jle
add
cs
jnp
xchg
jg,pn
pop
xchg
mov
inc
idivb
fstps
stos
movq
mov
fistpl
shrb
jg
cld
cwtl
dec
xchg
enter
daa
imul
or
cmp
ret
out
jg
inc
add
pop
in
sbb
out
lahf
aas
inc
mov
testb
fisttpl
repnz
pause
fs
lret
stc
in
imulb
in
ja
jle
aas
shlb
stc
adc
pop
fidivrs
or
ds
hlt
lds
in
or
repnz
stos
mov
xchg
push
dec
and
dec
push
ja
jl
mov
pop
fsubr
ljmp
fstl
out
cmp
cmp
fidivrs
mov
ja
mov
sub
or
xchg
ja
xor
data16
aam
mov
cld
sub
jge
lret
rep
dec
push
fists
cpuid
dec
pusha
xlat
and
xchg
push
fidivrs
divb
pop
sub
mov
lret
dec
lods
pop
ljmp
scas
mov
shrl
shl
jecxz
stos
xchg
repz
jecxz
les
arpl
cld
stc
dec
mov
adc
outsb
imul
add
dec
das
stc
jns
fimull
arpl
imul
push
mov
outsl
mov
sarb
outsl
pop
jns
lret
mov
push
stos
or
jb
hlt
les
jns
xchg
push
lods
mov
sub
xchg
push
fidivrs
inc
pushf
jg
clc
out
fs
test
pop
pop
pop
jns
notb
movsb
shlb
xor
cld
pop
pop
aas
shrl
pop
popa
testl
mov
push
fistl
add
in
xlat
sahf
call
mov
mov
jns
or
inc
sub
mov
sub
jl
outsb
mov
jns
xchg
ja
loope
outsb
lods
mov
or
pop
push
sbb
mov
testl
clc
sub
mov
fs
push
inc
iret
jb
das
push
rcll
in
mov
lret
sbb
sti
rsm
sub
das
pop
jmp
movsb
jle
sbb
dec
xchg
lahf
dec
jbe
jmp
lcall
negl
add
pop
cmp
xchg
idivl
pop
jns
xchg
jne
sub
in
or
inc
and
pop
pop
ja
add
outsb
ja
aas
jg
push
xchg
aaa
inc
mull
out
aam
or
mov
outsl
pop
mov
cmp
lahf
cwtl
out
rol
mov
pusha
xchg
ret
pop
or
mov
loop
ret
sahf
stos
lret
aas
push
outsb
jmp
int
xor
out
jle
repnz
and
test
rorl
test
scas
cltd
out
pop
jmp
pusha
inc
dec
shlb
cld
and
push
pop
jle
in
cli
loope
les
mov
pop
jns
or
and
jb
mov
jns
clc
fsubl
loope
xchg
scas
out
pop
insb
iret
lahf
jg
scas
test
pop
add
stc
fnstsw
out
xor
mov
jno
loopne
mov
jmp
arpl
clc
in
imul
out
mov
and
cld
mov
sub
mov
xchg
lahf
aas
adc
sub
pop
jns
sbb
or
add
mov
xchg
int3
sti
test
pop
ret
ret
enter
loop
xlat
aaa
std
iret
dec
adc
jg
adc
mov
jecxz
scas
aas
in
out
stos
cmp
repnz
dec
bound
and
outsb
and
mov
add
jp
stc
repz
sahf
sub
dec
xor
cld
pop
sub
hlt
dec
cwtl
pop
fisubs
test
cmpsl
inc
clc
sbbb
hlt
jb
maxps
sub
add
insl
inc
mov
adc
in
pop
cmc
lds
outsl
stc
repz
loopne
sbb
mov
sub
std
push
add
inc
jge
pop
mov
xchg
mov
or
dec
pop
jle
jb
imul
in
push
test
imul
stc
repz
inc
dec
fildl
outsb
and
jns
xorl
mov
or
adc
lret
jnp
jns
scas
mov
xchg
lret
ds
in
loop
sahf
push
std
std
adc
jno
jmp
out
or
cmp
iret
pcmpgtb
cmp
dec
inc
add
push
shl
cld
mov
aas
repnz
add
cmp
sub
sbb
das
test
popl
sub
jns
xchg
push
cwtl
inc
sbb
popf
jl
mov
ja
pop
push
or
jecxz
add
jg
lea
jns
xchg
in
jo
test
mov
xchg
pop
cmc
cmpsl
fiadds
fidivrs
stc
adc
cli
mov
stos
pop
lret
inc
aaa
bnd
xchg
push
call
adc
jl,pn
jno
das
ja
pop
daa
adc
enter
out
repnz
fcomps
pop
jns
minps
nop
fnstcw
sub
dec
push
andl
xchg
sbbb
insb
mov
mov
call
mov
lret
jle
adc
mov
xchg
ja
fisubrs
pop
hlt
mov
cmc
add
in
iret
mov
mov
cmc
daa
dec
lods
xor
into
mov
pusha
jg
mov
addr16
movb
xor
pop
jno
mov
call
inc
xchg
jge
stc
subl
movsl
jmp
stos
test
jg
dec
out
pop
mov
mov
les
lods
out
sarb
ljmp
cld
stc
repz
xchg
cmp
pop
jbe
xor
test
jg
dec
sub
pusha
int3
and
fldt
imul
repz
repnz
mov
popf
pop
sarb
mov
lret
das
xor
xor
mov
jecxz
lret
add
ljmp
mov
scas
mov
repnz
xor
repz
loop
xchg
mov
in
loope
mov
jg
cld
dec
fldenv
mov
out
sahf
mov
aam
lahf
jo,pt
add
xor
or
xchg
ja
dec
push
sbb
push
fidivrs
mov
orb
xor
jl
in
add
icebp
adc
filds
pusha
aas
mov
in
push
fimuls
clc
dec
xchg
push
lahf
xchg
sub
mov
cmp
jbe
enter
pop
pop
jns
jp
lret
xchg
and
shll
stc
lret
ja
pop
jnp
jbe
aas
mov
push
inc
stc
repz
push
sti
xor
test
leave
pop
jecxz
push
aas
jg
cld
sbb
add
fbld
pushf
lcallw
in
lahf
dec
insl
sub
xor
loop
cmc
repnz
sahf
das
jmp
pop
fisubrs
pop
jle
cld
stc
aaa
addb
fsts
dec
push
lahf
push
in
ja
and
dec
push
pushf
enter
lods
fsubs
jb
jge
movsl
pop
loopne
shrb
icebp
out
in
addr16
pop
das
mov
or
push
dec
cli
ja
jp
mov
push
pop
out
xchg
cmpsl
aas
jg
cld
sahf
jle
cs
cmpsb
push
mov
adc
shl
iret
lahf
sbb
xor
into
imul
or
jle
sbb
cmp
or
mov
sub
sbb
das
pop
cs
xchg
fsts
mov
cld
stc
repz
and
pop
ret
lahf
aas
jg
dec
sbb
pop
sar
or
repnz
cmp
leave
dec
push
sub
adc
repz
cli
sbb
mov
mov
mov
jg
cld
stc
insb
loop
repnz
push
lds
dec
sbb
mov
push
cs
aaa
xchg
adc
lahf
flds
dec
repnz
scas
je
out
fcompl
out
int3
icebp
paddd
mov
clc
js
aaa
jg
jge
in
std
in
sub
outsl
jmp
or
jecxz
ja
ja
xor
mov
bound
icebp
inc
imul
stc
sub
adc
sbb
repz
mov
testb
cld
pop
fsubs
repz
int3
outsb
scas
mov
fs
adc
pop
jne
add
mov
repnz
or
decb
lret
sub
aaa
mov
shrl
mov
push
mov
aas
mov
test
lock
gs
stc
repz
add
inc
aaa
movsb
fisttpl
and
out
pop
movsl
mov
lea
inc
lods
cmp
scas
mov
and
adc
mov
mov
add
mov
ja
mov
scas
loopne
push
add
mov
jg
shl
cmpb
or
inc
adc
aas
outsl
inc
jge
ret
mov
aam
inc
ds
lahf
mov
jns
push
cmp
sub
hlt
jp
outsb
push
jbe
gs
xchg
popa
mov
popf
call
into
loope
cmp
aas
jg
cld
lcall
adc
push
push
nop
ret
ret
mov
inc
out
xchg
iret
lahf
xchg
push
dec
sub
mov
jle
out
mov
sbbb
dec
push
fsubr
mov
and
sub
cmp
scas
clc
ja
repz
das
xor
mov
jg
cld
adc
scas
js
cli
sbb
rolb
jl
popa
push
lret
aas
mov
cwtl
jle
or
scas
mov
sbb
mov
jo
repnz
lds
xchg
lds
clc
push
scas
sti
iret
mov
test
push
pop
dec
arpl
xlat
data16
jmp
arpl
mov
stc
and
jns
jo
mov
fildl
push
lahf
aas
jg
cmp
ja
or
mov
ror
aaa
jmp
int
cmp
insb
pop
lcall
stos
xchg
iret
jp
sbb
dec
aaa
mov
inc
repnz
stos
lar
es
dec
ja
sub
mov
outsl
dec
push
jg
inc
mov
cmovno
out
shrb
lahf
sub
out
das
inc
mov
hlt
mov
mov
testb
dec
xor
das
jmp
repnz
dec
dec
mov
fs
sahf
mov
repz
dec
jle
and
cltd
test
jmp
or
and
jp
xchg
adc
iret
lahf
mov
mov
cld
stc
and
fmuls
insb
roll
cmp
aaa
js
push
mov
sbb
stc
repz
jmp
or
pop
sub
cmpsl
cmpsb
test
dec
jg,pt
stc
cmp
adc
movsb
mov
fiaddl
lret
ret
dec
push
adc
cld
cmp
sub
dec
js
xchg
pop
insb
enter
mov
imul
mov
jne
fisubrs
or
cwtl
outsl
push
add
xchg
push
shrl
inc
fisubs
inc
mov
xchg
pop
and
jl
jge
aas
and
mov
pop
sub
dec
imul
lahf
aas
fistps
push
dec
adc
pop
jns
lret
clc
addl
movsb
dec
scas
test
lea
cs
sbb
push
pop
jns
mov
jl
xchg
mov
xlat
xor
in
dec
xchg
jmp
sti
cmp
in
dec
ret
jae
scas
lahf
int3
outsb
fildll
fmul
ret
xor
jg
call
stc
repz
dec
stos
cmpsl
addr16
adc
jg
dec
cld
xor
fadds
insl
push
clc
dec
pop
in
ja
mov
out
mov
fwait
or
std
jb
pop
cmpsl
xchg
pxor
mov
lahf
aas
jg
push
aas
dec
or
sub
cmpsl
pop
movsb
and
test
xlat
adc
jg
xor
stc
shl
sbb
sbb
inc
lods
movsl
lods
or
jge
or
mov
inc
flds
repnz
jg
call
xlat
mov
out
lret
sub
sbb
repnz
aaa
ficomps
repnz
fcomp
mov
add
push
cmp
idivl
sub
loopne
pop
and
out
pop
mov
test
xchg
xchg
imul
cld
cld
movsl
aam
scas
lods
aam
xchg
out
ds
scas
xchg
pcmpgtw
mov
daa
ljmp
repnz
jge
stc
repz
loopne
adc
stc
repz
dec
clc
inc
scas
int3
sub
push
cli
sbb
jge
lods
fisubl
addr16
cmp
add
ja
ret
out
ret
jb
adc
pop
shrb
push
pop
lret
jne
cld
xor
fldl
inc
pop
jl
repz
dec
fsubrl
xor
pushf
aas
jg
cld
add
xchg
xor
mov
mov
jb
shrb
lahf
loopne
push
xchg
cld
stc
repz
mov
mov
pop
sbb
and
cmp
in
insl
sub
aad
call
xchg
lret
aam
or
repz
pop
inc
shll
repnz
sub
mov
pop
outsl
jae
cwtl
ret
inc
mull
addb
mov
in
in
aas
ret
dec
into
inc
pop
in
repnz
add
jb
inc
sbb
push
repnz
and
xchg
int3
mov
mov
out
cmp
ds
mov
out
mov
jb
cmp
mov
mov
int3
fdivr
in
and
inc
mov
jecxz
mov
inc
jp
sbb
jne
iret
lahf
aas
lcall
into
arpl
push
aaa
lahf
pop
call
mov
and
lods
pop
aam
jmp
push
xor
pop
arpl
mov
das
stos
sbb
mov
lahf
out
jl
push
int3
dec
call
cmpl
add
or
or
adc
lahf
pop
push
rcll
xchg
lahf
aas
cs
dec
jnp
cmp
mov
aaa
lahf
bound
popa
jg
dec
xchg
in
push
pop
sbbb
insl
into
ds
int3
mov
dec
sub
aaa
sub
inc
xchg
push
pop
jns
rorb
lock
mov
fistpll
cmp
mov
pop
xchg
iret
lahf
pop
push
push
xchg
jne
mov
add
pop
mov
ret
pmaxub
push
out
add
or
out
iret
cmp
hlt
lods
mov
sub
add
pop
jge
push
pop
stc
lcall
xchg
dec
push
dec
push
sub
jl
imull
and
pop
jbe
outsl
mov
std
repnz
repz
clc
ficomps
xlat
in
or
xchg
push
fidivrs
mov
xlat
and
shr
hlt
iret
cli
add
adc
scas
lret
ja
pop
push
incl
adc
test
stc
pop
cmc
mov
shll
mov
adc
pop
iret
dec
jbe
aad
xor
lret
xchg
ja
xor
sbb
sbb
add
repnz
fcmove
jp
push
out
stos
jg
cld
or
and
add
mov
scas
out
mov
out
inc
xor
stc
in
test
and
out
out
fmulp
push
test
xchg
out
lahf
aas
or
cld
push
push
xchg
imul
sarl
cld
stc
repz
sub
mov
stc
xor
es
xchg
mov
push
xchg
cmovle
or
xor
inc
dec
cli
repnz
push
inc
adc
mov
iret
sub
in
mov
mov
jg
dec
int
add
imulb
pop
shrb
aas
mov
movsb
jmp
lahf
jg
jle
and
cltd
mov
out
sbb
int3
adc
mov
pop
into
sub
lods
adc
fildll
cmp
in
sahf
sbb
out
leave
daa
jmp
daa
rcr
sbb
add
repz
or
enter
adc
jg
cld
pop
cmpsl
sub
cmp
popl
repz
lahf
out
inc
fistps
popf
mov
clc
bnd
and
mov
push
fdivrp
jge
and
pop
ror
jae
cs
mov
fdivrp
jb
bound
xchg
lahf
aad
aas
and
ja
fnstsw
lock
sbb
cld
jb
cmpl
cli
mov
jb
in
pop
jle
cltd
ss
pop
xor
cld
dec
js
jae
mov
and
ja
jg,pn
jmp
or
shrd
pop
jns
xchg
repz
fldt
mov
aaa
push
arpl
nop
ror
and
lret
mov
popa
lahf
inc
or
push
mov
call
mov
pop
jle
das
popw
mov
data16
lret
mov
aad
jne
jmp
mov
jl
xor
mov
add
stc
repz
into
movsl
xor
pusha
stos
aam
jle
std
daa
inc
pop
adc
int3
push
loop
out
lahf
aas
jno
push
cmp
sbb
xor
call
cld
push
mov
ds
sbb
inc
movsl
enter
lahf
pop
add
loope
ret
inc
cmp
jns
push
rcrb
jnp
pop
dec
xlat
xor
movsb
jl
in
test
ret
pop
mov
jle
dec
mov
and
jg
cld
add
or
pushf
ljmp
aas
stos
movsb
jg
mov
fst
xchg
or
lret
mov
icebp
jecxz
jmp
std
xchg
add
mov
movsb
sub
in
cwtl
jg
cld
pop
sbb
xor
xchg
pop
rol
fstl
jg
and
out
sub
iret
mov
or
mov
stc
cld
stc
repz
mov
sbb
outsb
inc
push
or
jo
nop
iret
lahf
aas
jg
mov
jl
jle
add
jns
lret
out
sarb
mov
cmpsl
les
in
push
pop
es
shll
mov
je
push
pop
jns
sbb
sbb
cld
std
inc
push
pop
jns
fwait
pop
jmp
pop
or
lock
jb
xchg
jnp
addl
pushf
fidivl
cld
outsl
mov
jl
lods
xor
push
or
sub
cmp
jg
xor
int
pop
aam
cltd
mov
lahf
add
aad
test
out
lahf
fdivrp
adc
xchg
mov
push
pop
jns
add
dec
xchg
packuswb
je
push
jg
das
mov
scas
outsb
xchg
mov
dec
lahf
pop
inc
ror
outsb
mov
in
iret
mov
ljmp
cld
stc
xor
cltd
stos
lods
sub
iret
lahf
aas
jg
add
pop
or
add
fsubrs
into
lock
out
ror
int
imull
fdivrl
out
scas
mov
inc
out
add
fwait
leave
adc
daa
lock
xlat
lds
push
into
negb
jg
xor
mov
adc
cmp
lods
addb
pop
fmull
lret
aas
jno
pavgw
push
lret
sub
cli
lret
scas
mov
das
pop
aam
imul
pop
jno
mov
xchg
mov
scas
mov
out
or
xchg
xor
push
jl
sub
push
mov
out
xchg
test
xchg
js
popa
andl
xchg
sub
dec
adcb
push
sti
in
arpl
sub
adc
sub
mov
mov
scas
mov
xchg
subl
dec
add
in
sub
mov
imul
cmp
adc
mov
pushf
push
scas
cltd
cmp
mov
jmp
int
das
jmp
mov
ja
lret
mov
call
sub
cmpsb
fcomi
adc
sub
popf
sub
push
stos
hlt
scas
adc
dec
pop
inc
jg
lret
cwtl
aas
mov
mov
iret
lahf
jg
repnz
iret
push
and
iret
lahf
jg
inc
jno
dec
mov
pop
out
mull
mul
out
mov
ss
inc
mov
mov
xchg
cmp
xchg
push
pop
pop
sbb
aaa
mov
adcl
mov
push
add
dec
push
in
push
scas
mov
sub
mov
or
cld
mov
mov
les
pop
sbb
fnsave
addl
mov
jecxz
sub
popl
sbb
sub
sbb
out
lahf
adc
dec
lret
add
mov
or
sbbb
and
mov
push
dec
jb
inc
pusha
fisttpll
mov
jmp
cmpl
xor
lret
out
gs
sahf
adc
cmpsb
daa
hlt
xor
cmp
mov
mov
sbb
mov
mov
lods
pop
or
xchg
into
dec
inc
enter
lahf
scas
pusha
int
jmp
cld
stc
cs
push
mov
push
sub
push
pop
xor
aas
loopne
jb
cmc
aam
push
notl
stc
repz
mov
mov
sahf
jmp
aaa
nop
out
jle
and
scas
jle
cwtl
xor
lahf
aaa
imul
mov
and
lahf
jno
stc
repnz
lahf
jle
mov
dec
sub
push
lret
pop
repz
sub
fldcw
mov
jnp
movsb
das
das
movsl
dec
mov
cs
stos
sub
shrb
lea
and
adc
mov
push
sub
popa
clc
aaa
and
dec
imul
scas
xchg
out
in
js
rep
out
push
ret
adc
and
sarb
cld
nop
sahf
fcmove
je
outsl
inc
int3
fs
push
pop
aas
subb
std
clc
mov
mov
pushl
out
xchg
iret
jb
mov
fwait
lret
push
out
ljmp
scas
mov
jmp
rclb
cld
add
in
out
lret
cmp
xchg
sbb
mov
bts
lret
dec
test
cmpsl
divb
scas
mov
cli
fisttps
add
lods
lods
pop
or
lahf
lea
ret
cltd
jae
xor
out
lret
sbb
lcall
in
push
pop
test
sbb
pop
xor
xchg
push
pop
jns
enter
mov
les
pop
jns
cmp
jbe
mov
imul
sbb
out
inc
in
sbb
repz
push
sbb
jb
cwtl
iret
mov
stc
adc
sub
aad
jnp
pop
mov
jg
fcompl
dec
fnstsw
lods
movsl
shrl
rorl
lcall
rcr
jae
xchg
ret
jmp
popa
sahf
cmpl
sub
jmp
repz
lahf
mov
add
repnz
imul
es
aas
jns
in
pop
cs
int
xchg
cmpsb
or
sti
sub
movsl
fstl
test
addr16
fwait
inc
mov
pop
jns
test
xor
cwtl
sub
jg
jns
xchg
xor
jbe
or
jmp
arpl
lcall
clc
hlt
add
outsl
dec
lods
int3
insb
js
icebp
in
push
pop
in
cmpsb
and
jns
gs
outsb
xchg
pop
jns
pushf
test
xor
inc
loopne
stc
fildll
scas
mov
sub
push
mov
or
xchg
aad
sub
aas
pop
sbb
inc
fidivs
xchg
sub
mov
das
mov
and
in
lea
or
repz
into
lds
or
xchg
jge
repz
push
sahf
jl
cld
cmp
aam
ss
sbbl
fstps
mov
sub
fld
or
das
push
je
push
add
jle
cld
mov
sbb
sahf
pop
dec
cld
leave
add
mov
std
test
and
xor
push
dec
cmpsl
cli
insb
movsl
lahf
mov
cmp
push
shrl
je
repnz
out
push
mov
push
pop
jns
cld
jg
cli
pop
ljmp
jge
in
sbb
fdecstp
jecxz
jge
jle
popa
sahf
or
lcall
jg
xchg
adc
fcmovnbe
xchg
xchg
sub
rcrb
mov
pop
push
mov
lret
inc
sub
xchg
sub
adc
pop
sahf
inc
push
pop
imul
jnp
scas
pop
or
insb
and
jg
cs
xchg
and
ja
push
fwait
xchg
pop
fnstcw
cmpsb
mov
incl
jo
mov
insb
dec
mov
loopne
xor
scas
mov
mov
shrb
repnz
push
lret
stc
jb
movsb
and
sub
jecxz
cli
fistpl
aam
test
stc
repz
pusha
pop
lds
call
mov
jle
cld
rcrb
push
jg
dec
sub
pop
stc
adc
adc
aaa
sub
push
pop
adc
jg
insl
mov
pop
pop
fisubs
iret
lahf
dec
repz
xor
les
pop
sub
pop
push
xchg
pop
popa
pop
xchg
icebp
pop
shrb
add
cld
stc
dec
mov
aas
mov
movsb
fucomp
hlt
xor
aam
ja
mov
pop
iret
cwtl
sbb
add
aas
jg
xor
es
lcall
iret
out
push
adc
mov
dec
das
jg
mov
xchg
outsl
cs
lret
iret
lahf
pop
mov
aam
fcomi
or
daa
stc
repz
cmp
repz
popa
fldcw
add
js
fdivrl
fsubrs
rcrl
pop
jg
dec
add
sub
lea
cmp
sub
ljmp
inc
sarb
pop
add
aas
jg
cld
dec
loope
inc
mov
loop
pop
xchg
pop
cmc
xor
iret
lahf
jecxz
enter
dec
fisttps
popa
mov
fs
repnz
pushf
adc
stos
inc
hlt
inc
stc
sarb
stc
scas
inc
ljmp
dec
aaa
ds
pop
jns
das
sbbl
jmp
stc
repz
test
setnp
dec
xor
inc
dec
cld
jge
mov
jle
dec
ja
lahf
aas
jg
into
sbb
jo
push
lods
mov
jge
add
or
clc
add
cmp
lahf
xor
mov
fwait
mov
pop
add
out
jmp
test
mov
cld
stc
repz
mov
sub
jge
dec
lcall
jle
in
jmp
test
pusha
dec
mov
cmpps
or
push
mov
cld
stc
repz
stos
dec
neg
lcall
lahf
aas
jg
stos
sbb
das
jle
loopne
add
pop
jns
frstor
push
push
adc
cmp
inc
ljmp
sub
xchg
cmpsl
movsb
jp
jg
add
scas
mov
in
incl
lcall
fbld
out
fisttpl
loop
dec
mov
mov
filds
xor
cltd
fbld
jns
fbld
cmp
shlb
mov
add
jg
inc
mov
push
stc
repz
push
xchg
pop
hlt
js
sub
dec
pop
jns
out
jns
stos
orl
in
lahf
pop
jle
pop
loopne
in
mov
pop
clc
repnz
mov
mov
mov
pop
lret
scas
mov
adc
lahf
pushf
push
jns
xchg
ja
test
mov
cmp
std
inc
mov
push
push
shrb
movsl
aam
das
lahf
aas
jg
psubusb
fwait
mov
sbb
std
xchg
mov
rclb
and
push
notl
mov
jl
or
cmp
xchg
outsl
xchg
push
pop
jns
pop
jle
xchg
xor
xor
aaa
xor
xor
xor
jle
cld
cmp
cmpxchg
cmp
cmp
mov
sbb
jl
fdivr
jo
lret
xor
mov
xchg
sub
inc
push
fwait
int
pusha
mov
mov
popf
xchg
inc
pushf
cmp
inc
lds
in
pop
jbe
fprem1
add
mov
das
loopne
lret
lret
pop
adc
cmp
sub
sti
mov
push
popa
mov
sarb
js
add
insb
adc
pusha
daa
add
lret
dec
and
frstor
es
movsb
pop
imul
mov
pusha
lock
cli
xor
repnz
xorb
imul
aas
or
ds
push
and
lret
test
out
shld
sbb
bound
mov
cmp
scas
cmc
mov
add
cld
jnp
aas
adc
inc
nop
js
mov
jo
pop
iret
in
push
fidivrs
push
add
dec
push
lret
call
mov
jns
xchg
mov
lds
outsl
mov
and
lcall
jl
cmc
add
std
adc
cmp
inc
xor
pop
mov
test
iret
xchg
mov
rorl
imul
add
scas
in
pop
hlt
push
cld
lret
cli
cmp
cmc
ds
js
dec
cmpsb
push
loope
iret
lahf
aas
jg
xchg
lock
or
mov
push
lret
xchg
and
mov
jg
dec
inc
scas
iret
mov
jl
lock
dec
insl
in
xor
enter
mov
sbb
psubb
cwtl
cli
imul
in
and
jae
aas
jg
cld
mov
mov
mov
add
mov
ror
repz
lahf
pop
xchg
or
xchg
or
into
js
leave
adc
mov
and
mov
xchg
pxor
insl
test
in
push
loopne
iret
adc
xor
mov
push
pop
mov
or
jmp
pop
jns
adc
xlat
sbb
ds
inc
cld
stc
repz
cmp
push
ljmp
pop
jg,pt
jae
fcmove
pushf
js
jle
std
jae
push
sahf
jbe,pn
pop
pop
xor
inc
mov
cld
stc
rolb
out
inc
jbe
mov
pop
lods
and
jns
sub
outsl
insb
sub
fstl
mov
jb
cmp
dec
push
fisttps
push
pop
jns
nop
sti
dec
cwtl
push
sti
add
fnstcw
xchg
xor
movsl
jae
mov
pusha
pop
cld
jns
mov
lcall
xor
add
aas
jg
adc
adc
cwtl
mov
jns
lret
out
fcmovnbe
cmpsb
insb
push
and
out
ja
fsubs
imull
jnp
jae
enter
jg
and
xlat
ret
scas
sub
cmp
stos
xorb
xor
jle
out
insb
dec
mov
sti
cmc
jg
inc
jp
lahf
aas
mov
cwtl
aaa
or
dec
push
mov
push
lret
out
jp
pushf
add
mov
fbld
setp
out
lahf
cs
jg
add
cwtl
arpl
and
dec
mov
stc
mov
repz
cmp
lods
and
stc
cld
push
in
sbb
cmpsl
pop
out
test
sti
scas
jg
pop
and
cltd
pop
jg
lahf
sub
ss
mov
repz
cmp
cmpsb
pop
jmp
xchg
loopne
aas
jg
cld
call
push
mov
out
mov
dec
xor
out
lahf
cwtl
mov
xor
adc
scas
jmp
stc
cmp
imul
in
call
inc
jae
pop
push
lods
push
mov
lahf
aas
jg
dec
lahf
mov
negl
daa
sub
mov
dec
adc
jp
pop
and
jle
repnz
xor
incb
jb
insb
jge
hlt
subps
out
mov
addr16
imul
jno
sahf
in
das
lahf
das
sahf
cmp
dec
movsl
scas
mov
imul
inc
std
jb
cmp
fbstp
scas
orb
jg
hlt
nop
mov
in
loopne
sahf
or
repnz
in
push
mov
sarb
lret
mov
shll
or
nop
cltd
fsts
repnz
mov
repnz
mov
xchg
push
fidivrs
push
out
jb
daa
jne
sub
std
jb
mov
icebp
aam
movsl
imul
xchg
push
fdivrp
cmp
ljmp
xor
xchg
lret
jb
std
push
out
pushf
or
sub
xchg
dec
stos
pop
xchg
into
jle
repnz
add
ds
lahf
out
and
pop
pop
ds
lret
mov
mov
add
mov
xor
mov
sbb
call
repnz
sbb
lret
lret
mulb
insb
sti
pushf
roll
incb
pop
and
aas
sbb
cld
cld
or
fsubrp
jmp
sbb
xchg
dec
je
mov
mov
std
jb
lods
fwait
adc
inc
scas
aas
imul
icebp
lea
mov
pop
daa
dec
adc
repnz
jno
inc
aas
jg
cld
cs
aas
mov
fnsave
sbb
lret
lahf
aad
jo
pop
shl
movb
xor
out
loop
mov
out
fisubrs
fucomi
mov
mov
push
pop
jns
int
push
sub
pop
adc
stos
clc
clc
out
pop
jns
xchg
nop
shlb
insl
lcall
repz
jns
mov
cld
dec
js
jle
es
pop
notl
sbb
lds
inc
xor
jae
jae
in
in
push
jne
push
pop
outsl
xchg
aas
iret
les
in
idiv
push
cmpsb
test
sti
sub
mov
mov
dec
add
sahf
sahf
add
lret
out
lahf
add
stc
nop
aad
insl
add
test
jns
jnp
pop
mov
arpl
mov
pop
jns
xchg
dec
jb
and
pcmpgtb
imul
xchg
push
sub
xchg
stc
movsl
hlt
push
push
cmpsl
sub
sbb
adc
jle
adc
inc
rorb
lahf
jg
inc
pop
paddb
xor
scas
imul
pop
sbb
fs
data16
cld
xchg
cli
in
jo
adc
mov
subl
sbb
test
jg
cmpl
out
sub
pop
pop
out
lahf
aas
loope
pusha
xchg
jl
mov
ret
adc
inc
pop
jns
popf
and
lods
or
aaa
mov
in
push
cmp
pop
mov
inc
cmp
lcall
scas
and
jg
lahf
aas
jg
sahf
add
mov
jge
push
inc
jmp
iret
add
dec
pusha
out
das
in
loopne
jl
dec
xchg
aas
jg
cld
pop
sub
cs
sbb
push
mov
dec
int3
repnz
mov
stc
sub
pusha
jbe
adcb
outsb
mov
add
mov
sub
mov
ret
mov
outsl
adc
mov
xchg
push
inc
xchg
jb
mov
sti
sti
in
rcl
fstpt
incb
inc
adc
adc
iret
lret
mov
popw
mov
into
dec
loop
aad
or
out
loope
or
es
add
ds
cs
pop
and
inc
jl
popf
push
mov
sarl
gs
mov
dec
fnstcw
pop
sbb
mov
xchg
push
outsb
inc
pushf
enter
fsubp
in
pop
lret
lock
repz
pop
aas
insb
or
xor
enter
stc
sbb
or
mov
cld
stc
xchg
scas
jae
ss
sub
cmp
lahf
aas
jg
jbe
add
pushf
aam
add
mov
in
clc
lcall
pop
cmpl
stos
push
add
loopne
rclb
add
adc
stos
test
lahf
aas
jg
pop
int3
mov
or
adc
enter
aas
in
fists
out
sbb
sbbl
addr16
sbb
jns
icebp
sahf
ret
pop
sbb
shll
lahf
pop
dec
pop
jg
mov
mov
das
shll
aaa
jp
xchg
enter
mov
sahf
outsb
mov
mov
fcmovne
insb
xchg
addr16
xchg
ja
cs
lahf
pop
pop
cli
into
int
je
decb
jge
or
lcall
jl
das
lahf
aas
jg
int3
mov
mov
mov
inc
rol
mov
sti
fiadds
mov
repnz
sub
jnp
loop
ds
lret
inc
xchg
cmc
rcrl
xor
les
add
cld
sar
inc
xchg
xor
adc
pushl
lods
pop
int
sbb
jg
cld
stc
xchg
pusha
cwtl
sub
andb
push
in
scas
push
lahf
sbb
iret
lahf
aas
call
jb
push
cld
stc
repz
addr16
lods
and
int3
adcb
mov
lahf
aas
jg
shlb
push
in
iret
lahf
aad
imul
lds
add
lret
push
jg
neg
xchg
stc
repz
les
rcrb
popa
movsl
or
mov
cld
lock
adc
out
mov
addb
jae
push
iret
lahf
aas
push
push
xor
xlat
cmp
mov
shr
psubb
nop
pause
lds
es
xchg
lret
or
push
les
fucomip
pop
or
xchg
mov
lahf
mov
pushf
repnz
xchg
push
pop
jns
xchg
cmpl
cmp
imul
sbb
sahf
sbb
pop
cli
hlt
cmpb
push
imul
test
adc
mov
xor
mov
xor
mov
std
fstpl
pop
or
push
dec
arpl
mov
dec
outsl
xor
fcomps
jg
or
frstor
lret
jbe
mov
mov
insb
aaa
sti
xchg
sub
cmp
mov
leave
ss
mov
stos
faddl
dec
daa
push
mov
sub
jg
flds
loop
inc
leave
inc
loop
sub
mov
pop
xchg
lret
iret
lahf
pop
mov
shll
lahf
xlat
add
mov
ja
mov
push
cld
cld
cmp
int
out
insl
negl
push
sub
out
nop
mov
sahf
pop
dec
and
cld
stc
repz
add
sbb
push
cmpsl
loop
repnz
mov
and
ds
add
enter
push
sbbb
bts
in
hlt
or
or
inc
xchg
sbb
pop
scas
mov
jge
fidivs
pop
mov
dec
push
pop
movsb
sub
mov
pop
xchg
mov
inc
sub
lret
pop
mov
xchg
jmp
lock
repnz
cmpsl
fisubl
stc
sbb
scas
aaa
arpl
pop
push
mov
stc
repz
mov
pop
fisubrs
jmp
cltd
rcrb
iret
lahf
aas
jg
lahf
dec
pusha
and
mov
pushf
inc
mov
loop
adc
inc
jno
and
pop
jns
xchg
jp
and
int
sbb
out
sti
cwtl
xor
xchg
push
inc
mov
adc
insl
scas
jl
stos
aam
ljmp
mov
repnz
outsl
clc
xchg
dec
lods
dec
mov
xor
lods
lds
and
inc
lret
mov
loopne
loopne
mov
imull
pop
sbb
lods
ja
pop
sar
jb
xchg
js
xchg
cwtl
adc
add
jl
and
jg
test
cmovb
incb
je
inc
mov
and
scas
mov
sub
xor
lods
xchg
fstl
iret
adc
xchg
add
inc
xchg
ja
pop
xor
jmp
or
cmp
repnz
lret
adc
mov
mov
push
mov
cld
cs
ss
jg
aas
push
jmp
push
in
insb
repnz
jns
fst
fcomip
jp
mov
in
lret
das
adc
adc
cwtl
test
xchg
push
pop
and
test
dec
sbb
std
mov
inc
adc
js
xchg
push
fidivrs
mov
push
cltd
pop
in
jmp
mov
stos
cmp
jns
xchg
add
test
mov
shll
roll
and
out
cmp
push
iret
clc
mov
scas
xchg
push
pop
jns
sbb
push
sbb
inc
jp
dec
arpl
jb
lret
xor
cld
adc
cmp
out
lahf
pop
mov
pushl
icebp
addr16
mov
shr
cmp
scas
aas
jmp
out
and
rcll
sarl
cld
div
lret
lahf
sub
push
push
fucomi
leave
xor
inc
pop
cld
dec
cli
les
fs
dec
push
mov
mov
mov
orb
sbb
pop
aas
mov
jmp
dec
aaa
xchg
mov
mov
push
inc
lahf
cmp
jns
lcall
fwait
in
adc
loope
cmc
in
rcrb
sub
mov
sti
xacquire
out
xor
adc
inc
clc
hlt
sub
mov
aaa
addr16
in
fildll
push
and
test
or
jns
arpl
mov
leave
pop
push
dec
mov
xchg
xor
cmp
xchg
mov
xchg
push
push
in
loopne
imul
iret
lahf
pop
sahf
xchg
adc
xor
push
and
cmp
sbb
pause
aas
call
jb
popl
dec
inc
xchg
mov
mov
fistps
xchg
add
cld
jb
cld
lea
fisubs
push
cmc
cmp
jl
popa
lds
inc
jg
add
sbb
mov
jne
fwait
push
adc
lret
repnz
cmpsb
jns
call
mov
sarl
mov
test
out
sbb
mov
xlat
gs
xchg
stc
repz
andb
push
push
repz
fmulp
hlt
pusha
cmpsb
je
ret
cmp
mov
add
sub
push
iret
xchg
aas
mov
scas
mov
out
scas
gs
xchg
in
out
sbb
cltd
ja
push
in
and
lret
mov
or
aad
int3
xor
pop
mov
in
or
push
cli
outsb
lret
ljmp
fs
outsb
push
popf
pop
push
cmp
stc
rep
ficoms
lds
lret
jp
testl
jge
jae
scas
icebp
jns
out
jb
call
adc
jmp
inc
scas
mov
arpl
insb
fimull
outsb
mov
popl
outsb
out
sbb
mov
and
xchg
out
mov
gs
stc
repz
into
ljmp
jno
adc
or
jg
cld
mov
gs
add
sub
cmp
daa
jl
lahf
insb
add
pop
outsl
jns
and
aad
scas
cwtl
dec
mov
cmpl
jp
dec
pop
mov
std
push
ljmp
jae
or
push
je
jns
mov
xor
int
in
fs
add
in
je
mov
nop
dec
aas
iret
popf
cmpsb
mov
in
and
jae
lret
lahf
aas
out
jae
sbb
jbe
into
inc
push
scas
pop
scas
mov
iret
push
outsb
ret
adc
jg
inc
xor
jno
or
jg
adc
lret
lahf
aas
sbb
inc
and
stc
repz
mov
cmpsb
xor
jl
lods
jle
jg
cld
shll
aaa
xchg
addl
ret
aas
inc
jns
jg
stc
push
outsl
in
mov
outsl
icebp
jbe
rclb
jnp
int
clc
xchg
jns
in
mov
or
test
cmp
cmp
and
in
push
outsb
lret
sub
loope
sub
ret
mov
gs
comiss
pop
jl
aas
jg
sub
jecxz
mov
cmp
in
jecxz
popf
mov
pop
lret
cmp
stos
xor
stos
sbb
xchg
fs
ds
pop
jmp
sub
adc
in
iret
lahf
push
xchg
push
daa
arpl
jg
icebp
adc
or
lahf
popf
outsb
lahf
ss
mov
lods
or
add
or
add
sbb
out
push
into
pop
xchg
int
popf
inc
lods
mov
or
sbb
dec
jg
cld
stc
add
cwtl
sub
outsl
ja
ja
cmp
mov
movsl
das
aas
add
lea
inc
add
call
xor
mov
cli
in
repz
out
mov
push
arpl
xchg
pop
and
repnz
push
cli
test
sbb
xchg
cld
int
dec
int
repnz
mov
push
mov
out
cmp
imul
mov
pusha
mov
sbb
or
lahf
mov
lea
scas
test
repnz
mov
jg,pt
cld
sbb
into
mov
or
xchg
cmp
lods
orl
repnz
stc
add
mov
outsb
and
gs
cmp
iret
push
ficomps
xor
mov
das
xor
sbb
inc
mov
in
insb
dec
call
sbb
lahf
aas
aas
jg
test
jecxz
js
jecxz
outsl
fidivs
xor
out
pop
pop
scas
pop
jle
repnz
bnd
xchg
shlb
adc
xchg
push
jle
outsb
sar
or
test
lods
daa
pop
push
lea
push
xchg
add
out
test
adc
mov
sbb
lds
xchg
cmp
pop
repz
mov
jb
cld
stc
aad
inc
cmp
push
add
std
jl
cmpsl
loopne
or
iret
lahf
aas
ljmp
pop
jl
push
lret
and
es
push
test
mov
or
outsb
out
adc
add
mov
lret
pslld
mov
imul
sbb
jle
ret
sbb
jp
mov
mov
repz
sub
jge
cmp
into
fbld
xchg
cmpsl
inc
push
std
mov
and
out
xchg
push
fcoml
dec
scas
jg
cld
stc
xchg
sub
sbb
pop
hlt
popf
xchg
iret
lahf
aas
insb
cmp
xchg
xadd
or
push
sbb
push
stc
cld
jns
or
mov
sbb
sbb
add
enter
add
lret
mov
mov
sbb
stos
pop
scas
mov
scas
add
mov
push
mov
xchg
fucomip
addr16
xor
jle
xor
or
pop
push
fsubrp
in
idivl
pop
out
pop
into
jg
mov
mov
mov
scas
test
or
push
lea
loopne
or
adc
das
scas
mov
in
jmp
arpl
sbb
push
aas
loop
mov
mov
mov
out
lea
lods
xlat
fs
xchg
daa
pop
add
add
lea
in
lahf
jo
xor
fs
pusha
jns
andl
mov
xchg
or
pop
adc
test
fidivs
xchg
lahf
scas
pop
shlb
lret
repnz
repz
xchg
lock
jecxz
adc
adc
insl
outsl
sbb
mov
shlb
orl
adc
int
aad
stc
into
or
stc
repz
lock
fidivs
cmp
lds
rorl
inc
jg,pt
jg
mov
or
scas
mov
or
imul
cld
stc
repz
mov
mov
insb
cmovae
jg
cli
mov
stc
cld
stc
repz
out
imul
nop
xor
das
out
push
mov
in
adc
jo
repz
pop
out
sbb
test
push
movsb
xorb
dec
sub
stc
stc
or
frstor
sbb
testl
inc
sahf
pop
testl
pop
jns
ja
adc
call
clc
mov
sahf
sub
fsubl
test
jns
xchg
adc
cmpsb
and
add
xor
pop
sbb
inc
dec
lahf
fists
mov
jns
xchg
pop
mov
std
dec
ficomps
xchg
push
lods
pop
dec
std
bound
das
xchg
push
pop
jns
les
xchg
inc
idivl
xorl
bound
xchg
movsl
in
fsubrl
scas
mov
imul
iret
mov
repnz
dec
jle
and
mulb
dec
das
subb
pop
pop
out
jge
mov
xchg
das
sbb
pop
ds
jecxz
fdivs
or
xchg
pop
out
in
aas
push
push
addr16
jge
fxam
or
outsb
sbb
pusha
xchg
push
pop
jns
xchg
mov
push
lea
xchg
fs
int
das
int
xchg
fprem
repnz
add
push
negb
mov
adc
cld
dec
pop
jne
cld
xchg
push
int3
arpl
add
bound
mov
aas
xor
ja
dec
xchg
roll
stc
jnp
adc
in
in
lods
pop
jns
pop
cmp
repz
scas
pop
dec
dec
iret
pop
dec
test
sbb
pop
jmp
jle
shlb
icebp
sub
fs
jo
mov
xchg
lret
jns
xchg
xor
inc
mov
rorl
push
pop
int3
gs
in
pop
jb
loop
xor
mov
ljmp
imul
insb
pop
pop
lcall
mov
mov
mov
repnz
pop
lcall
lret
mov
xchg
iret
lahf
stos
stc
push
movsl
inc
add
sbb
subb
push
fisubrs
pusha
outsl
dec
lds
fildll
push
cmc
pop
cmpsb
daa
inc
iret
iret
inc
testb
mov
pop
sbb
int
int3
add
pusha
sbb
aas
enter
pop
lods
xor
jne
or
inc
mov
into
leave
mov
repnz
mov
xorb
pop
push
xchg
sub
cmc
mov
mov
cmp
repnz
sub
js
roll
xchg
sub
adc
push
lret
sbb
push
mov
and
sbb
gs
cvttps2pi
mov
loope
jne
loop
outsl
or
lds
mov
pushf
jns
enter
dec
jb
daa
iret
lds
mov
xchg
ja
pop
stos
jmp
push
xor
js
jg
cld
sahf
into
pop
mov
adc
adc
mov
inc
inc
repz
lahf
sub
lock
ret
mov
push
loope
loopne
mov
and
shll
jbe
inc
and
xchg
pop
dec
stc
mov
mov
lods
arpl
jge
jmp
xchg
jecxz
adc
stos
gs
cld
cmp
mov
pop
scas
dec
roll
out
scas
xchg
arpl
fisubrs
dec
aaa
ret
pushf
jle
cld
cld
stc
popf
push
dec
stos
jae
in
cmp
ds
mov
inc
bound
sbb
sbb
push
mov
jg
add
pop
jg
push
scas
mov
mov
pusha
das
out
or
adc
in
dec
pushl
sub
dec
rcr
jg
cld
stc
loop
imul
loope
mov
pop
cmp
mov
mov
repz
out
push
shll
pop
ljmp
and
jns
cld
aad
jno
xchg
dec
mov
mov
leave
pop
and
mov
das
push
lahf
xchg
mov
outsl
jecxz
les
stos
sbb
sbb
pop
aaa
sahf
xor
ja
xchg
sbb
cld
addl
popa
je
jns
sub
cmp
jge
xor
lahf
nop
inc
sub
jg
cld
dec
insb
in
cmp
xor
mov
in
lahf
jmp
mov
out
aaa
mov
pop
push
lds
sbb
out
ficompl
inc
lahf
sub
faddl
stos
pop
adc
cld
stc
sbb
in
jns
mov
shlb
cmp
insb
mov
in
aas
mov
dec
ds
std
and
xchg
lahf
aas
scas
inc
mov
loopne
dec
pushf
jg
out
lret
xchg
loope
or
mov
dec
subl
pop
bound
mov
repnz
pop
push
jecxz
push
insl
out
push
fiadds
or
lret
popf
xor
or
pop
push
sbb
mov
dec
movb
xchg
inc
out
subl
pop
add
mov
nop
mov
and
push
lds
sbb
lahf
lods
shrb
fcomps
mov
cmp
jns
jne
push
pop
adc
jmp
sub
sahf
mov
cld
stc
push
jns
cmpsb
lds
les
out
mov
cmpl
xor
mov
sbb
cld
stc
repz
pop
in
repnz
xchg
pop
cmpsl
lahf
aas
jg
and
mov
ss
fnstsw
inc
xor
push
xchg
iret
shll
in
pop
sbbb
mov
sub
ret
shl
mov
lret
js
sub
pop
ror
push
xchg
gs
shll
repnz
push
mov
enter
sbb
jle
and
fdivp
lcall
cld
stc
repz
mov
and
pop
adc
inc
sbb
in
sbb
in
jae
lds
fdivrl
add
iret
inc
mul
repz
das
out
pop
jle
xchg
mov
hlt
adc
sahf
inc
cmp
jae
movsl
sub
lret
dec
mov
sbb
sbbl
jns
dec
stc
sbb
mov
pop
sbb
shrl
xor
aas
loopne
add
sbb
sbb
daa
mov
iret
sbb
pop
sub
aad
nop
out
lods
out
sbbl
iret
popf
cmp
aam
test
jmp
outsb
cmp
fnstsw
pop
sbbb
scas
sbb
sbb
push
fdivl
sbb
sbb
cmp
or
mov
sbb
outsb
popf
sub
and
dec
jo
out
sbb
aaa
fdivr
jb
scas
sbb
aas
ss
sbb
inc
mov
cmp
sbb
mov
incl
sbb
mov
jg
mov
dec
xor
sub
inc
cs
jne
sub
push
sbb
sbb
add
cmp
jg
pop
jb
or
scas
sbb
xchg
pop
xchg
sbb
loopne
mov
sbb
sbb
push
out
lcall
cmp
sub
js
or
mov
add
dec
das
sbb
jb
add
fistps
sbbb
sbb
loope
add
sbb
sbb
pop
mov
outsl
sbb
jb
ret
sbb
loopne
test
iret
sbb
push
mov
fistps
pop
push
outsb
lods
lahf
sbb
adc
jb
sbb
sbb
mov
loopne
sbb
sbb
aam
and
sbb
cmp
aad
dec
jae
adc
das
sbb
mov
sbb
iret
sub
sub
scas
sbb
push
outsb
pop
lret
sbb
sbb
fdivs
mov
movd
fdiv
sbbb
out
mov
in
sbb
sbb
mov
mov
sbb
sbb
xchg
pop
push
pop
sbb
and
jne
sbb
sbb
mov
mov
dec
mov
add
leave
sbb
sbb
mov
nopl
popf
js
incl
outsl
sbb
mov
fildll
pop
mov
out
jo
adc
mov
or
pop
loopne
and
pop
out
es
movb
mov
in
sbb
sbb
mov
pop
dec
mov
adc
cmp
out
sbb
jb
or
scas
fdivl
pop
sbb
sbb
inc
mov
pop
sbb
scas
arpl
sbb
popl
push
jo
ret
lods
sbb
sbb
scas
fdivr
pop
sbb
sbb
shrl
pop
pop
outsb
sbb
sbb
ret
lods
out
sbb
sbb
popa
jne
sbb
outsb
rcrb
jo
mov
sbb
sbb
mov
lcall
loope
mov
mov
lods
or
jp
cmp
sbb
sbb
loopne
mov
sub
sbb
mov
pop
iret
sbb
sbb
outsb
sub
sbb
cmovae
mov
fdivrl
sbb
sbb
mov
dec
xchg
cmp
sub
out
ret
lods
or
into
jo
sbb
ds
nop
sbb
sbb
cmpsl
xor
mov
aas
cli
test
pop
cmp
aas
sbb
je
dec
outsb
sbb
sbb
adc
mov
sbb
jle
lods
repz
push
lea
sbb
pop
jo
sbb
inc
cmp
fdivrl
jmp
iret
sbb
loopne
adc
sub
cld
jne
outsl
sbb
scas
jns
test
outsb
pop
mov
cli
jb
dec
sbb
sbb
out
add
push
inc
sti
outsb
cmp
sbb
sbb
outsb
sbb
outsl
sbb
fdivrl
sbbb
sbb
push
mov
outsl
sbb
jne
push
in
sub
or
mov
add
lcall
xchg
push
faddl
cmp
jns
lods
enter
jo
or
outsl
sbb
movsl
fdivrl
mov
sbb
jo
lret
dec
sbb
je
add
push
mov
and
test
lods
das
lahf
sbb
sbbl
das
mov
loope
sbb
sbb
mov
das
mov
mov
push
jecxz
sbb
ret
lods
pop
das
sbb
xchg
pop
pop
outsb
sbb
sbb
mov
pop
sbb
mov
mov
sbb
sbb
jo
dec
dec
sbb
loopne
xchg
pop
sbb
sbb
push
mov
pop
sbb
aas
jo
dec
movsl
lahf
sbb
jae
add
pop
iret
sbb
sbb
dec
into
pop
mov
iret
sbb
mov
pop
sbb
mov
outsl
lea
outsb
sbb
sbb
pop
mov
or
ret
sub
sbb
pop
outsb
sbb
sbb
push
fdivrl
das
stc
pop
push
mov
sub
outsl
xchg
out
sbb
mov
pop
mov
mov
scas
jns
sbb
shrl
pop
pop
outsb
sbb
sbb
jo
jns
into
outsl
lock
xchg
fdivr
pop
sbb
add
sbb
lahf
aas
outsl
iret
push
jmp
cmpsb
push
lahf
testb
mull
stos
sub
inc
fcmovne
adc
cld
mov
jo
jae
jmp
stc
subb
scas
in
sub
inc
sub
jge
jle
xchg
out
jp
clc
or
lahf
aas
jg
in
fsts
negl
out
repnz
addr16
push
and
movsb
stc
repz
dec
loop
dec
outsl
adc
mov
out
pop
pop
xchg
adc
cld
jbe
stos
aad
call
dec
sti
sbb
pushf
lods
lods
std
pop
fwait
psubb
out
lods
das
scas
mov
sbb
xor
iret
mov
xor
lock
mov
aaa
cs
adc
cmpsb
jne
pop
shrb
pop
lock
sahf
icebp
lahf
hlt
repnz
push
sbb
xchg
lret
cld
adc
out
add
pop
int
adc
cs
stc
sarl
ds
sub
stc
lods
mov
rcll
mov
cld
sbb
fnstenv
test
lods
dec
dec
xor
out
adc
jo
jle
xor
hlt
jns
shl
loop
mov
mov
mov
cmp
cmpsl
insb
scas
xor
test
push
int3
jge
pop
xor
cmove
test
mov
stc
repz
and
dec
cld
mov
pushf
insl
jnp
test
adc
add
jle
lret
out
mov
add
and
or
pop
lahf
or
xchg
mov
ss
cmp
out
lret
xchg
ja
fnstenv
pop
push
lahf
shlb
xchg
lahf
add
shrb
jg
cld
stc
repnz
dec
dec
pop
pushf
jle
fwait
das
ret
aas
imulb
push
lahf
mov
hlt
mov
cli
dec
out
imul
mov
ds
xor
hlt
jne
lret
mov
inc
mov
cld
stc
mov
cmp
mov
repz
dec
mov
scas
gs
fdivrs
cld
stc
dec
out
sbb
lock
arpl
testb
lahf
aas
es
jnp
pop
aaa
je
jecxz
pop
jecxz
iret
outsb
mov
pusha
les
repz
lahf
xlat
sbb
out
leave
and
jg
cld
stc
test
inc
or
cmp
aas
xchg
inc
rep
xlat
js
xor
test
stos
and
mov
in
mov
mov
lahf
in
pusha
pop
dec
out
fsub
lret
mov
and
lret
jb
les
sub
gs
push
cmp
stos
repnz
jge
lahf
fstpl
mov
scas
mov
adc
xchg
mov
std
mov
call
jmp
mov
out
aas
dec
fimuls
dec
mov
xchg
sti
jnp
rep
jp
fmuls
icebp
pop
sbb
aas
repz
mov
dec
pop
adcb
outsb
pop
jg,pt
out
dec
adc
mov
inc
push
fmull
sbb
xchg
cmp
xor
mov
cmpsl
daa
daa
vpmaddwd
stos
or
iret
out
push
addl
jne
iret
lahf
aas
data16
ja
insb
nop
fiaddl
adc
repnz
gs
jmp
inc
or
lea
notl
out
loop
cmp
test
ficomps
pop
scas
mov
jp
addr16
shlb
iret
sbb
sbb
repnz
sub
jb
jne
xor
stc
rep
mov
push
lahf
ljmp
enter
jg
stos
pop
outsl
adc
sbb
enter
leave
out
loope
cli
push
les
fildll
scas
mov
or
add
push
sbb
out
scas
test
outsb
pop
pop
bswap
adc
imul
mov
cmp
scas
mov
aas
lcall
movl
mov
dec
stc
dec
sbb
stc
mov
mov
mov
gs
sbb
push
aad
cltd
pop
pop
std
lcall
out
fnstenv
xor
test
ljmp
jbe
mov
std
out
dec
push
filds
xchg
stos
dec
test
cmp
jo
dec
arpl
loopne
or
jno
jnp
es
pop
jns
xchg
stc
pushw
out
sub
stos
push
in
jae
in
push
or
enter
dec
add
push
rclb
sti
in
mov
xor
jge
in
fistpll
pop
out
test
xchg
int3
das
ljmp
dec
out
std
and
mov
loopne
lods
aas
dec
addr16
aas
pushl
cmc
cmp
mov
inc
jae
repz
lahf
aaa
xchg
inc
pushf
cmp
lahf
jg
cld
stc
loope
jnp
add
loop
mov
sub
lret
iret
lahf
aas
lahf
or
mov
cmpl
out
scas
cmp
mov
mov
das
xchg
mov
dec
sub
mov
mov
bound
mov
outsl
ljmp
xchg
dec
mov
mov
insw
adc
lock
jbe
lret
sub
jle
pop
xor
mov
push
inc
int3
aas
icebp
in
loopne
movsb
sub
mov
push
repnz
jg
inc
mov
out
into
pop
icebp
ljmp
in
nopl
and
push
dec
sub
popa
decl
fstpl
xchg
fstpt
repnz
out
add
dec
mov
cld
push
pop
js
mov
xchg
enter
fwait
addb
jmp
cs
cmc
in
jle
pop
movsb
test
je
fbld
mov
call
pop
sub
popl
inc
cli
repnz
xchg
imul
in
movsl
push
adc
scas
mov
mov
out
lret
mov
mov
in
in
mov
and
arpl
fucomip
sti
adc
and
jl
sbb
jg
cld
stc
insb
xchg
dec
jno
sbbb
mov
mov
pusha
mov
or
das
loop
ss
ljmp
mov
arpl
pop
jns
mov
mov
lret
das
lahf
aas
dec
iret
out
insb
xchg
dec
inc
push
cld
fxch
mov
xor
sbb
iret
lahf
aas
pushf
gs
loope
mov
jmp
vpsllq
inc
push
and
push
jle
fisttps
pop
dec
test
shl
iret
lahf
xor
lods
imul
cld
stc
lret
cmpsb
xchg
call
sbb
ja
pop
insl
mov
adc
iret
aas
mov
dec
rol
pusha
xchg
in
cld
stc
pause
xchg
mov
filds
dec
inc
push
mov
push
outsb
dec
ret
pop
mov
cld
stc
subb
pushf
xor
daa
popf
cmp
dec
mov
lahf
aas
push
jecxz
sar
adc
add
shr
into
gs
in
imul
pop
xchg
push
loop
hlt
test
fnstenv
leave
sbb
pop
xor
sbb
xlat
xor
sub
aas
xor
insl
push
cld
add
ss
out
lahf
aas
cmpsl
or
push
adc
jae
nop
js
repz
jg
push
outsb
fld
div
aas
jg
cld
sbb
lds
push
adc
out
lahf
std
in
jno
test
xor
push
ficoml
stc
sti
mov
fstpt
cmp
or
shrb
lahf
aas
mov
xor
cmp
mov
fs
lret
out
inc
repz
jbe
add
jns
add
scas
or
sbb
sub
ret
mov
dec
aas
hlt
in
pop
and
jns
das
test
mov
xor
out
out
fdivr
repz
mov
shlb
sbb
push
inc
fisubl
repnz
es
push
das
iret
lahf
aas
jg
call
or
dec
mov
pop
push
cmp
mov
pop
push
clc
bound
cmp
ret
es
aas
jg
xchg
sub
jp
sete
mov
ja
repz
sub
cmpsl
daa
mov
xlat
out
jg,pt
mov
cmp
cmc
fwait
pop
add
in
mov
icebp
das
xor
push
xchg
aas
lcall
data16
movhps
adcl
in
sub
testl
push
test
mov
lret
mov
pop
sub
push
adc
repnz
or
pop
lahf
cmpl
lahf
aas
mov
movsb
cltd
pushf
push
into
les
out
sarb
pop
sahf
dec
outsl
loopne
push
ds
in
pusha
xchg
inc
ds
jns
lret
jbe
lds
jecxz
iret
mov
lret
pushf
add
aas
fs
repnz
stc
xchg
incb
inc
subl
rorb
incl
pop
das
jg
dec
mov
mov
iret
lahf
mov
adc
inc
lcall
jl
cld
cld
stc
popa
sti
imul
xor
std
gs
stos
jb
push
out
lahf
aas
jl
jmp
mov
sbb
arpl
cld
stc
repz
es
hlt
ret
inc
xchg
leave
mov
out
shrl
aas
jg
movsb
sti
cmpsl
jle
ss
add
dec
cmp
out
lret
out
mov
mov
pop
pop
lahf
cmp
call
push
cmp
aas
in
jmp
addb
nop
dec
jge
in
nop
addr16
cmc
les
xchg
pop
inc
jle
fimuls
mov
aaa
jne
and
and
cmp
or
scas
mov
pop
jns
jmp
psadbw
imul
jg
pop
push
mov
scas
pop
popf
push
mov
lahf
sub
cld
lret
xor
push
subl
das
scas
mov
stc
jg
cwtl
pusha
das
mov
jle
repnz
fwait
cld
int3
push
lock
hlt
push
pop
jns
daa
repnz
push
fimuls
cmc
cmp
in
lret
cmpsl
addr16
jne
scas
sti
data16
mov
stos
cs
and
loopne
inc
out
fiaddl
mov
mov
xor
fcoms
fldt
sub
scas
pop
int
lahf
les
and
shrl
mov
cmpb
lcall
mov
jp
pop
sub
mov
lret
jo
sbb
jl
out
xor
xchg
jle
pop
push
fistpll
mov
jno
pop
inc
pop
rcr
loopne
ret
mov
lcall
lret
imul
das
subl
shlb
or
imul
dec
in
repz
outsb
mov
pop
mov
jno
add
clc
in
popa
and
repz
cld
stc
repz
out
fdivl
mov
aas
js
mov
jg
rcll
pop
stc
sbb
sub
addr16
inc
push
pop
je
push
nop
das
inc
clc
repnz
xor
ficomps
stc
repz
xchg
and
nop
stos
cld
stc
repz
fildl
adc
sbb
jg
call
mov
rolb
sbb
jg,pt
mov
push
inc
xor
lahf
push
xchg
repnz
mov
lahf
push
pop
jle
dec
fdiv
lret
popf
ljmp
lock
jo
xchg
push
pop
jns
add
test
or
jns
sbb
sbb
ret
mov
psrld
stc
pushf
inc
and
jns
push
iret
scas
popa
loopne
aad
push
or
rorl
cld
stc
repz
xchg
es
mov
mov
loopw
pusha
scas
xchg
rolb
or
outsb
out
xchg
or
jo
pop
cli
sti
in
cmp
xchg
jp
idiv
sbb
testl
repz
sahf
pop
aas
hlt
lret
repnz
jnp
push
aas
jg
cld
insb
adc
int
mov
fdivrp
jp
enter
in
xchg
lahf
cmpsl
ret
out
iret
pop
out
xor
pop
pop
jns
mov
inc
jnp
mov
iret
lahf
pop
outsb
in
jmp
cltd
lock
xchg
test
fsubl
iret
mov
adc
jns
in
push
mov
ficoml
and
xchg
push
pop
icebp
dec
mov
adc
push
cmp
xchg
inc
jbe
cmp
pop
iret
nop
pop
jns
fnsave
jmp
mov
push
fbstp
xor
jno
lret
sub
in
fucompp
push
repnz
call
jns
out
adc
and
cmpsb
push
mov
in
mov
jns
xchg
imull
adc
rcrb
push
mov
cmp
inc
sub
repnz
clc
jp
hlt
adc
mov
iret
lahf
aas
jg
pusha
cli
or
stos
and
repz
adc
hlt
dec
std
aaa
dec
fxtract
xor
mov
xchg
inc
add
jmp
cmpsb
xchg
aas
fs
scas
into
cld
jb
repnz
leave
sub
sub
jns
sahf
out
add
roll
jns
lret
xchg
aad
cmpsb
adc
iret
and
push
movb
enter
push
xchg
push
pop
jns
push
sub
sub
jg
rcll
push
pop
jns
mov
mov
dec
stos
add
xchg
sub
lods
mov
dec
sahf
jg
cld
stc
rorl
push
xor
xor
and
adc
cmp
lret
hlt
mov
fwait
ret
cld
stc
repz
pop
mov
mov
or
mov
lahf
aas
jg
lret
pop
insl
addl
cld
stc
repz
rclb
imulb
dec
test
rclb
jl
popf
popf
fsubrs
roll
das
movsb
xchg
pop
ds
out
mov
mov
jle
jb
cmpsl
jge
fdivrp
cld
stc
repz
mov
push
mov
addb
jg
in
dec
mov
inc
das
fnstsw
and
lret
arpl
cmpsb
mov
inc
dec
clc
into
mov
mov
mov
mov
ljmp
das
aas
mov
pop
mov
push
out
nop
or
pop
dec
setge
gs
sysenter
dec
outsb
add
ret
pop
xchg
lahf
aas
or
addr16
add
repnz
adc
cs
addr16
cmp
mov
sar
mov
scas
sbb
pop
sarb
or
sti
repz
test
sub
xchg
and
pop
xchg
fnstsw
dec
fld
jecxz
jg
mov
cmp
push
sbb
or
cwtl
cmp
lahf
imul
addr16
ds
in
mov
pop
stos
mov
cld
test
repnz
or
add
pop
movsl
push
add
mov
xor
jl
pop
jns
iret
loop
arpl
jns
outsb
lea
mul
iret
das
lods
jbe
sti
mov
aam
iret
lahf
pop
jmp
mov
in
shlb
lds
out
jge
inc
decb
js
sbb
out
lds
in
pop
enter
xor
pop
xchg
out
inc
jecxz
xchg
cs
hlt
sbb
cwtl
and
cld
adc
and
es
xor
push
decb
icebp
test
lahf
pop
or
push
hlt
push
fwait
and
mov
fists
imul
pop
pop
fs
mov
push
and
mov
repnz
xchg
ja
add
js
sub
jle
pop
xchg
xchg
jno
push
das
cmp
mov
add
sub
xor
mov
cmp
jg,pn
cld
stc
ds
pop
jo
icebp
addl
out
lahf
aas
mov
xor
jne
or
xor
out
sbb
adcl
xchg
scas
fisubrs
movsl
cmp
sub
outsl
loope
lahf
rcll
fsubl
iret
in
lret
lahf
into
xor
movsbl
dec
popa
xchg
push
pop
jns
cmp
test
dec
mov
into
push
pop
jns
aaa
movsl
fisttpll
in
push
add
cmpsl
dec
xchg
movsb
pop
jns
xchg
ss
shll
outsl
sub
or
mov
int
stc
add
jg
or
stos
push
rorb
mov
or
xor
cld
add
movsb
adc
add
mov
or
test
mov
dec
movsl
out
scas
mov
inc
inc
mov
inc
lret
gs
push
push
mov
shl
push
cs
inc
loopne
inc
movsl
xchg
popf
jle
cmpsl
mov
or
and
mov
push
cmpsl
xchg
iret
lahf
aas
sbb
or
or
out
xchg
push
dec
xchg
popa
pop
xchg
dec
loop
cltd
faddl
andb
inc
xchg
dec
push
loop
lahf
pop
or
add
pop
cmp
pop
jbe
xchg
das
dec
mov
std
out
mov
imul
mov
mov
in
mov
pop
lea
scas
jmp
xchg
xchg
in
dec
sbb
loope
aas
aas
nop
cmpsb
lahf
pop
into
lods
icebp
scas
push
mov
xchg
lahf
push
cld
jno
mov
test
xor
push
pop
jns
fldenv
lahf
rorb
cld
jge
push
push
pop
jns
ss
ja
addr16
frstor
rcrb
jmp
adc
popf
xor
ja
pop
pop
sub
insl
pop
push
incl
lret
xchg
mov
mov
xor
jae
sbb
add
aaa
push
outsl
adc
popf
shll
and
dec
cld
and
dec
out
outsb
mov
aas
into
insb
sub
fs
das
sub
sub
clc
sbb
and
loop
je
fstpl
pop
stc
add
cmp
in
aas
movsb
mov
jbe
fnstcw
out
call
sbbb
xchg
push
sub
iret
popl
pop
out
xor
popa
jecxz
cld
stc
repz
fwait
sub
push
fisttps
cmp
enter
mov
mov
ja
sbbb
in
aas
mov
in
mov
dec
cmp
out
lahf
es
bound
xchg
mov
iret
aas
hlt
nop
mov
lcall
in
lock
aad
pop
lds
je
sub
data16
xlat
out
push
add
sub
out
xchg
inc
mov
dec
push
hlt
lret
xchg
jno
test
mov
pushf
in
out
pop
xlat
cmpsl
cmpsb
out
test
sub
out
xchg
iret
mov
ljmp
incb
add
outsb
jmp
mov
xor
in
lahf
aas
ret
sub
nop
or
jecxz
jmp
shr
push
sbb
in
lahf
mov
outsb
cmp
pop
test
repnz
xchg
push
sub
or
jg
iret
das
std
and
mov
xchg
hlt
repz
lahf
mov
pop
and
divb
cli
sti
in
mov
lds
jp
pop
cld
out
add
movb
cmpsl
jo
test
call
or
xchg
ljmp
push
movl
pop
sub
pop
xchg
fwait
clc
jge
out
stc
movsw
push
mov
mov
cli
jg
jmp
lahf
sbb
aas
test
shrb
scas
adc
repz
lahf
xchg
mov
out
test
test
fidivl
dec
mov
mov
test
sub
lret
lahf
aas
test
xlat
mov
ljmp
scas
mov
pop
jmp
rclb
xchg
js
stc
repz
add
mov
popf
je
mov
xchg
adc
sbb
xchg
pop
cld
inc
adc
mov
inc
mov
das
out
pop
pop
sub
ds
push
out
pop
inc
cs
stc
inc
and
in
hlt
repnz
sub
cmp
stc
movsl
hlt
negl
mov
xor
in
out
pop
cld
or
mov
lcall
dec
bound
push
fistpl
adc
mov
xchg
out
sbb
scas
mov
xchg
leave
cmpsb
out
sti
in
icebp
aas
outsb
jae
outsb
sbbl
ljmp
out
jle
les
rcr
lcall
fs
repz
dec
and
add
das
jnp
daa
lret
jle
push
cwtl
add
jb
adc
movsl
fdivrs
scas
mov
retw
fisttpl
push
sbb
mov
lock
repnz
xchg
stc
orl
xor
shlb
push
pop
ja
fnstenv
and
aas
jg
frstor
mov
daa
sbb
inc
mov
xchg
fisttps
fmull
mov
jg
dec
sbb
lret
dec
das
xchg
out
dec
mov
and
scas
mov
loopne
inc
test
pmulhuw
sbb
shl
out
xchg
sub
jo
test
xor
lret
mov
pop
inc
xor
loope
cmp
dec
xchg
cwtl
loop
out
pop
xor
xchg
mov
scas
xchg
xchg
les
ret
daa
pop
das
scas
pop
cmp
xchg
adc
fidivrs
stc
repz
imull
ficomps
and
fmulp
mov
stc
cld
cmp
rep
sub
addps
movsb
pop
jge
aas
sti
iret
out
loopne
iret
mov
mov
cmp
in
dec
outsb
mov
insb
pop
pop
bound
cld
sbb
lock
ljmp
addl
sub
daa
mov
push
loope
outsl
call
pandn
fstpt
je
dec
loopne
lahf
add
out
daa
jecxz
jno
cld
cld
stc
adc
mov
fbstp
pop
and
repnz
aas
mov
add
mov
sbb
lret
mov
and
insl
jmp
xor
bnd
push
push
dec
sbb
xchg
filds
lahf
aas
jg
xlat
pmuludq
ljmp
lods
sub
cmp
xchg
ficomps
in
push
pop
stos
fdivl
cmpsl
lea
add
xchg
push
pop
jns
push
push
daa
ja
dec
cmp
cmp
xor
stos
xchg
push
xchg
mov
std
repnz
sbb
lock
shl
cmc
jns
lret
xchg
or
mov
dec
aas
xor
sub
jl
mov
dec
xlat
mov
lret
iret
lahf
aas
iret
pop
push
loopne
dec
bound
into
sub
fsubp
cmp
fstpt
cmpsl
xchg
mov
and
sbb
sub
push
nop
inc
xchg
lret
pop
dec
dec
push
jne
sbb
stc
stc
repz
cmpsb
pop
int3
jg
repz
sub
inc
jge
mov
push
mov
pushf
mov
lret
aas
rcr
sbb
cmp
pop
sub
jno
lods
inc
pop
call
std
sbb
scas
dec
jb
outsb
fmulp
cmp
pop
stc
repz
scas
int
add
cmp
lock
stos
repz
ja
clc
mov
sti
sar
inc
xadd
xchg
mov
xchg
jo
movsb
jns
xor
aam
jg
inc
scas
mov
mov
push
ficoml
addr16
in
sub
and
sub
or
sub
jle
rcrb
pop
das
jp
in
or
mov
jp
mov
cmp
push
mov
jmp
or
mov
repz
inc
aas
push
pop
aas
sub
test
testl
jmp
pop
stos
iret
adc
pop
bsr
or
mov
xchg
push
fisubrs
pop
cld
mov
xchg
push
fidivrs
adc
inc
jo
inc
and
test
jb
xchg
push
sahf
hlt
mov
push
adc
cld
stc
cmpsl
and
iret
xchg
and
outsb
test
cld
sub
ja
out
fs
aas
jg
mov
test
popa
popa
add
aas
mov
cmp
xchg
adc
add
aad
cld
stc
repz
mov
cmpsb
xor
rclb
jle
cmp
xchg
jle
mov
cld
out
lods
iret
lahf
aas
jg
int
xor
jmp
int
testb
roll
ret
add
sahf
jg
cld
stc
push
lea
sub
xchg
lret
in
ja
pop
cmpsl
out
inc
cmp
cmpsb
pop
addr16
in
xchg
push
pop
jns
insl
dec
lahf
sbb
gs
imul
imul
in
popf
data16
aaa
fildll
cmp
outsl
sqrtps
insb
pop
lcall
adc
mov
mov
dec
out
lahf
aas
xlat
test
jge
pushf
sbb
std
repnz
repz
std
aas
js
leave
add
add
pushl
repz
jle
aas
gs
xor
adc
jg
cld
push
xchg
jl
xor
scas
inc
bound
xchg
into
arpl
inc
das
lahf
out
mov
test
das
out
outsl
push
jmp
push
outsl
loopne
fnstcw
jg
or
push
push
add
xchg
add
pmulhw
iret
lahf
xchg
mov
stos
test
rolb
std
jb
out
jle
scas
push
mov
jle
fmul
iret
and
movhps
imul
jg
out
clc
xchg
mov
mov
icebp
lret
out
js
adc
xchg
inc
fwait
add
xchg
sub
pop
or
rolb
mov
xor
cld
push
or
mov
push
lret
lahf
aas
jg
hlt
ljmp
push
inc
rolb
enter
and
cld
push
push
fimuls
sub
aad
test
or
notl
mov
sub
mov
enter
sbb
inc
lahf
popf
cmp
ds
xor
add
cld
dec
mov
jne
fisttps
inc
jge
mov
sbb
std
pop
sub
and
mov
fwait
sub
inc
sahf
insb
test
out
sbb
out
or
jb
or
mov
or
xchg
sub
fucomip
stos
jle
cld
cld
stc
dec
aad
mov
popf
mov
pop
pop
sbb
test
cld
stc
mov
out
ret
adc
mov
cmpsl
push
add
stc
loopne
js
jl
aas
inc
adc
iret
mov
in
mov
push
or
cmp
mov
push
xor
testb
cld
xchg
jg
mov
mov
sub
outsb
cmp
aam
cmp
cld
pop
jbe
scas
mov
inc
idivl
and
xchg
fcoml
out
sbbb
test
sbb
mov
jle
pushw
dec
pushf
das
std
add
outsl
mov
ret
shrb
repz
push
pop
inc
push
cmpl
mov
sbb
xlat
je
rcrl
and
stc
scas
cld
and
mov
pop
pop
enter
jo
insl
jl
test
addr16
cwtl
jl
je
lret
mov
sub
or
lret
into
mov
lds
inc
and
mov
mov
jno
push
push
mov
jg
ds
jno
push
jle
jle
cmpsl
cmp
mov
iret
in
inc
daa
mov
add
leave
sub
notl
ret
jl
cld
stc
insb
sub
pop
xor
ja
jp
ret
adc
lret
xchg
ja
dec
clc
ror
pop
test
sbb
nop
lock
xor
fdivrp
push
push
or
push
std
outsb
or
and
dec
push
pop
pop
jno
insl
cmpxchg
xchg
mov
je
out
pop
xchg
push
cmpsl
mov
dec
pop
or
dec
divb
outsl
pop
jns
xchg
jae
cmc
je
or
mov
test
sbb
mov
jg
and
out
cmp
xor
xchg
lahf
aas
mov
push
adc
jp
cld
dec
jle
stc
jg
and
cs
cld
stc
andl
shll
daa
addl
sbb
lret
mov
mov
leave
je
dec
lret
and
clc
in
fstpl
pop
mov
lods
je
pop
pop
mov
dec
xchg
cs
nop
movsl
into
sbb
lcall
das
scas
mov
rcll
fisttpl
lcall
push
sub
lret
mov
sbb
outsl
daa
mov
xor
pop
jns,pt
orl
repz
movsb
scas
repnz
mov
mov
mov
stc
or
fsubrs
jle
mov
das
push
add
xlat
imul
adc
xor
inc
ds
push
jp
pop
jns
xchg
imul
arpl
or
pop
imul
jle
stos
inc
mov
aas
jg
cltd
das
mov
std
jg
lret
scas
outsb
jl
pop
xchg
lock
cs
adc
das
cld
adc
fdivp
shl
lahf
aas
jg
push
sahf
fldcw
movl
out
scas
cmp
add
movsl
adc
fdivr
or
push
repnz
cs
push
repnz
into
fstpl
cli
pop
lcall
das
sub
mov
lds
add
or
jl
lret
sub
pop
pop
xor
pop
rcrl
stos
inc
jo
loopne
cs
cmp
repz
dec
cmp
orb
lahf
cmpl
mov
shrl
mov
addb
and
aas
add
sahf
dec
adc
push
loope
out
in
fidivl
repz
mov
add
jp
mov
or
cmp
push
mov
add
lods
arpl
and
lds
mov
and
test
jg
loopne
add
jl
lock
stc
out
jo
adc
add
repnz
mov
jecxz
sub
repz
lret
pop
jp
into
jl
mov
daa
dec
adc
xchg
incb
mov
cld
stc
lahf
orb
xlat
outsl
jae
ljmp
push
dec
inc
lret
mov
repz
andb
arpl
test
aam
aas
jg
mov
out
mov
icebp
adc
adc
mov
sbbl
repz
sub
into
jg
cld
stc
testb
or
push
fdivl
cmpsl
ret
aaa
lods
iret
and
lahf
aas
outsl
pop
in
jo
inc
dec
or
dec
lods
andb
jp
push
bound
out
jle
dec
ret
or
xor
lret
mov
ficoml
sub
popa
mov
into
popa
enter
dec
mov
das
cld
mov
fisttpll
sbb
arpl
sub
idiv
repnz
cmp
dec
insb
int3
aas
iret
int
push
sub
aas
inc
pop
pop
add
ror
sbb
out
lahf
aaa
mov
and
aad
jb
xchg
xchg
jo
test
dec
pop
incb
andl
or
cld
stc
xchg
into
xchg
adc
in
xor
adc
jg
pusha
pop
dec
mov
test
out
lahf
mov
cmpsb
mov
cld
stc
sbb
sbb
add
mov
mov
lret
ror
das
xchg
mov
repnz
push
jae
insb
sub
mov
inc
fs
repnz
fbld
xor
inc
cmpsb
cmp
sub
adc
sub
push
pop
outsb
shrl
enter
js
mov
stos
jmp
out
pop
and
stc
repz
or
mov
rcl
xor
adc
repnz
iret
insl
adc
jne
jmp
stc
mov
adc
fs
enter
mov
adc
pop
lds
aaa
lea
lahf
shlb
lahf
aas
add
cld
jecxz
lods
cmpsl
je
lock
ficomps
shlb
stc
mov
popf
out
dec
ret
outsb
insb
sahf
outsl
cmp
jg
jp
ss
imul
fwait
push
repz
repz
popa
push
dec
push
in
pushf
pop
stos
xor
leave
scas
icebp
add
mov
cmpsl
sbb
push
repz
imul
shlb
sbb
fdivrp
jnp
cmpsl
es
pop
outsl
cmp
es
das
aaa
pop
ficoms
mov
push
jno
adc
jmp
stos
jg
adc
push
pop
jns
lret
stc
nop
xlat
xlat
in
mov
out
push
xchg
push
dec
fs
push
xor
fildll
in
push
pop
jge
pushf
add
sbbl
mov
xchg
push
pop
jns
movsl
outsl
mov
int
jecxz
adc
jns
filds
call
les
inc
jne
in
mov
lods
add
lock
jnp
and
outsb
std
out
pop
lret
sti
jns
mov
mov
push
decl
sub
aam
movsl
push
mov
fisttpll
cs
repz
aaa
movb
sbb
hlt
pop
das
ds
push
jo
out
pop
xor
aas
out
hlt
mov
push
xchg
sub
repnz
repz
dec
xor
sub
out
icebp
sbb
cli
in
or
or
out
adcb
out
lret
sbb
cmp
imul
dec
mov
aad
aad
mov
aas
ljmp
sbb
cmpsl
repz
lahf
dec
push
cmpsb
dec
test
repnz
imul
mov
test
mov
sub
popl
repz
std
jecxz
mov
jno
clc
addr16
mov
add
addl
fistps
in
mov
adc
mov
fadds
jg
and
pop
jae
pop
sub
ds
repz
lahf
stos
popl
rorb
sbb
pop
cld
stc
sbb
loopne
mov
lret
xchg
das
out
aas
xor
xchg
jecxz
call
pop
jns
test
addr16
mov
lcall
das
push
jbe
sti
cmpsb
push
jge
and
in
in
dec
add
ljmp
push
sarl
xchg
ja
and
cmp
push
daa
ret
data16
or
loop
jle
mov
fisubs
iret
lahf
aas
cld
outsl
shll
lret
imul
stc
repz
cmp
jg
mov
and
dec
pop
xchg
les
lahf
aas
jg
jbe
mov
movsb
or
dec
and
repnz
push
movsb
sub
and
lret
mov
mov
fdiv
cs
lods
lret
enter
pop
mov
repnz
sub
jns
push
imul
pop
js
in
test
jne
cld
in
lret
dec
lds
aad
popf
push
sbb
sti
push
jge
out
mov
push
iret
lock
cmp
les
xchg
sti
push
stc
cld
stc
sbb
push
stc
adc
jle
aad
out
mov
jl
sbb
jge
add
or
push
pop
sahf
das
xor
stos
pop
scas
sbbl
out
movsl
sub
dec
nop
in
ds
jne
stc
insl
outsl
xor
pop
shr
aam
mov
pop
pusha
int3
xor
out
jle
repnz
outsl
xchg
xchg
adc
jg
test
mov
test
repz
fisubrs
dec
mov
push
in
sub
inc
popa
std
xor
mull
nop
popa
iret
and
loopne
jl
mov
aas
xor
sbb
movsb
das
lret
cld
out
pusha
movsl
mov
iret
sarl
push
into
outsb
cld
push
inc
cmp
inc
repnz
test
imul
or
scas
mov
cmpsl
pop
fxch
scas
sbb
popa
sub
popf
aas
js
mov
push
mov
mov
and
es
ds
jle
aaa
jmp
iret
xchg
sbb
das
fstps
mov
psubsw
cmp
in
xor
add
xchg
sarb
das
jg
sahf
pop
pop
daa
xor
outsl
xor
outsl
js
fwait
bound
test
fs
out
stc
repz
mov
mov
cmp
cld
ret
cli
ljmp
cs
outsb
stc
repz
lahf
movsl
mov
lea
sub
rol
cld
mov
lcall
pop
pushf
aam
jecxz
jg
add
mov
inc
lock
lahf
inc
push
xchg
inc
sbb
jle
sti
in
rorb
repz
jmp
lods
jns
lret
lahf
arpl
es
fstl
or
adc
aas
jg
icebp
fs
ss
sub
jo
mov
xchg
les
xchg
out
pop
fsubrs
leave
inc
jle
mov
lret
out
add
fcmovnu
call
pop
cld
stc
aas
lahf
inc
repnz
movsl
jge
jnp
xlat
mov
sbb
iret
or
ret
aaa
jecxz
jp
fidivrs
xchg
push
xchg
xorl
cmp
ja
fnstcw
loop
iret
or
dec
cmpsb
jae
pop
sub
mov
imul
adc
pop
jmp
cmovs
lea
adc
pop
cli
jecxz
cmp
into
mov
out
scas
test
sub
jl
cmp
mov
jb
mov
loopne
sbb
sbb
mov
lea
push
cld
sbb
in
movsl
xchg
adc
cmpsb
in
jno
lahf
aas
jg
mov
rep
jne
mov
addr16
adc
sub
sar
or
cld
stc
repz
arpl
arpl
lret
leave
push
clc
gs
lahf
aas
jg
rolb
std
das
aad
enter
out
inc
push
push
xchg
in
inc
mov
mov
repnz
mov
movsl
insl
push
cli
inc
in
sub
add
sub
fldcw
scas
mov
lsl
cmp
cwtl
cmp
bound
jmp
jle
fwait
sbb
inc
test
or
pop
jg,pt
ds
movsb
cmp
pop
xchg
push
mov
push
daa
gs
shrb
in
add
scas
leave
scas
test
mov
add
out
pop
incb
and
out
outsl
cli
add
jns
das
jg
mov
sub
fdiv
lret
ja
sbb
data16
push
mov
imul
lret
lahf
aas
out
stos
popl
into
pop
mov
fwait
dec
dec
pop
mov
adc
mov
scas
mov
push
test
mov
push
add
xchg
mov
lock
or
cld
nop
cli
repnz
jp
push
or
mov
inc
mov
sahf
lods
stos
xchg
outsl
xlat
les
sbb
das
ja
cmp
and
jg
cld
mov
int
sti
sbb
or
in
iret
lahf
dec
jno
lcall
xor
push
pop
jns
cmpsl
cmpsb
popl
int3
incl
jg
js
jns
xchg
xchg
stos
out
out
aas
push
lock
sahf
lahf
aas
adc
subb
add
xchg
adc
jg
fnstsw
das
mov
adc
lret
dec
sub
lds
sbbl
aas
and
ret
das
mov
mov
push
out
orl
pushf
dec
add
sub
mov
iretw
lahf
pop
push
cs
mov
stos
cs
stc
repz
mov
cs
jg
jle
aas
jg
sbb
out
add
imul
jg
test
jb
pop
or
xchg
in
xchg
lahf
mov
lods
mov
fs
or
inc
ljmp
orl
xchg
adc
repnz
outsb
mov
gs
daa
cmp
cld
push
in
jle
or
cltd
add
test
mov
outsl
lcall
out
scas
mov
lahf
lods
out
push
jl
mov
fisubrl
fdivrs
mov
stos
imul
cmpsb
repnz
xchg
sub
lds
nop
xchg
and
sub
jbe
int3
mov
push
scas
mov
pop
lock
insb
mov
jge
insb
jmp
sub
jmp
arpl
jns
sub
pusha
mov
inc
pop
pop
mov
and
out
pop
push
fwait
loope
iret
lahf
lcall
mov
das
in
push
fisubrs
xchg
add
fwait
xchg
inc
lcall
rorb
mov
imul
pop
jns
sub
inc
shr
or
lods
scas
movnti
out
imul
jmp
or
scas
jo
aad
std
jb
inc
outsb
int3
or
add
movsl
xchg
pop
icebp
push
cmp
push
cmpsl
adc
mov
std
jb
or
xchg
dec
sub
pop
inc
shlb
jne
lret
xchg
push
mov
mov
inc
lahf
call
outsb
jg
dec
popl
test
fsubl
xchg
jmp
dec
jmp
jae
inc
test
pop
icebp
lret
pop
test
imul
int
idivl
jg
cld
cmp
mov
and
add
inc
jg
test
inc
push
xchg
add
iret
lahf
aas
and
jl
in
movntq
mov
sbb
xchg
or
jnp
std
xor
mov
aas
jg
ss
popl
xchg
push
pop
jns
fstl
in
cmpsl
push
in
cmpl
xchg
jle
and
lahf
and
xchg
iret
sti
stos
cmc
test
mov
xor
mov
sub
xchg
adc
dec
sub
dec
shlb
repz
jecxz
xchg
jmp
je
jge
cmp
aaa
adc
dec
dec
jb
fisttps
in
repnz
pop
mov
daa
mov
push
fdivrp
jle
daa
xlat
pop
inc
push
pop
cltd
xor
gs
rcrl
jns
fldl
push
inc
cmp
pop
ret
pop
push
inc
popa
lret
lahf
jg
outsb
push
stos
sub
shrb
lods
in
cwtl
inc
push
test
sbb
into
fildll
lock
jmp
xchg
pop
jne
mov
lret
lock
fisubrs
xor
scas
mov
add
mov
mov
lods
jbe
pop
stos
xchg
popa
mov
add
repz
lahf
rcll
test
cld
dec
lds
jg
cld
stc
add
adc
pop
in
cmp
cmp
lret
lahf
aas
subb
roll
xchg
lret
scas
lret
mov
aas
add
aad
jbe
fstpl
mov
into
add
fistpll
jne
fucomi
push
xor
mov
js
aas
adc
mov
jp,pt
push
hlt
repnz
rcl
loop
repz
cmp
xor
shll
fstps
xchg
push
push
mov
jg
cmc
ja
jno
ljmp
popl
inc
cmpb
rcll
jnp
sub
aad
pop
out
mov
iret
and
ljmp
pop
scas
mov
test
push
mov
sti
repnz
pop
hlt
leave
imul
out
jae
js
dec
rcll
out
ljmp
mov
ret
pop
pop
cli
sbb
sub
add
and
pop
repz
mov
pop
push
mov
cltd
repnz
mov
leave
cmp
iret
mov
add
dec
mov
add
rcll
jmp
stos
jecxz
push
scas
enter
rorb
mov
out
stos
xchg
push
aas
dec
xchg
dec
les
pop
jns
adc
ja
cmp
sbbb
xor
mov
es
call
xchg
icebp
adcl
div
sub
pop
in
repz
lahf
dec
lahf
mov
inc
mov
js
inc
xorb
lret
jle
mov
lcall
cld
stc
add
mov
nop
in
fstps
adc
cmp
ret
filds
cli
data16
mov
das
shrb
jno
xchg
mov
test
lret
test
dec
cld
inc
clc
sti
cs
cmp
pop
mov
push
fcompl
inc
mov
and
jae
mov
shrb
pop
or
cs
loope
fsin
cld
stc
repz
lock
in
sbb
aas
jg
xor
mov
push
daa
ss
mul
out
jae
outsb
mov
js
sub
pop
ror
cmc
nop
inc
mov
add
enter
aas
jg
pop
cmpsl
mov
jg
mov
repz
and
lahf
movsl
xchg
lret
sbb
pop
sbb
das
scas
mov
dec
dec
xor
add
lods
out
jno
icebp
cwtl
out
and
dec
ret
mov
fs
adc
movsb
mov
in
gs
xor
repnz
ds
stc
repz
scas
cs
mov
scas
cmp
push
xchg
popl
cmpl
jl
insl
loope
scas
pop
dec
stos
aad
xchg
je
dec
loope
sahf
mov
and
mov
repnz
aas
hlt
imul
xchg
jmp
push
lret
mov
movsl
inc
sbb
xchg
in
add
or
in
inc
loop
movntq
mov
xchg
inc
ret
mov
test
imul
test
ds
jne
scas
mov
fcompl
xchg
xchg
jge
or
in
jl
xchg
sub
push
xor
pop
xor
cli
push
sbb
mov
leave
iret
lahf
aas
or
in
jo
cmpsl
pop
lcall
mov
push
mov
test
lahf
sub
aam
sahf
cmp
aas
pop
mov
stc
repz
push
daa
scas
test
jg
adc
pop
jle
jne
js
imul
fucomp
mov
inc
cmpsb
xchg
je
adcl
hlt
div
pop
lahf
jno
xchg
je
mov
repz
mov
xor
cwtl
rcl
xchg
out
shr
mov
into
dec
out
arpl
mov
stc
subl
or
mov
insl
mov
cmpsb
cmp
lahf
cmp
std
or
negl
mov
mov
lea
fcmovne
inc
inc
pop
jnp
sub
cld
stc
sub
addr16
cli
sbb
jl
jb
pop
jle
mov
ds
jle
popf
movsb
cmpsb
lock
jo
mov
icebp
xlat
rol
iret
maxps
orb
ds
mov
fnstcw
mov
pavgb
arpl
add
push
es
movb
jns
lcall
mov
sbb
in
xchg
mov
cmp
decl
push
xor
xchg
push
add
inc
jbe
pop
test
pop
push
or
ljmp
cmc
adc
and
xchg
out
enter
cwtl
insb
and
jg
.byte
cltd
inc
.byte
mov
mov
add
mov
imul
add
or
imul
mov
ja
ret
sub
mov
imul
add
mov
or
jmp
repnz
adc
inc
cld
push
add
cmp
cmp
pop
or
fstp
jl
cmp
or
mov
inc
sub
add
mov
icebp
neg
ds
sub
mov
push
inc
add
mov
cmp
cmp
xchg
mov
idiv
or
dec
mov
and
enter
cwtl
xchg
fucomi
cs
mov
push
sbb
add
push
mov
add
pop
clc
add
mov
sub
mov
sub
add
sahf
push
int3
clc
cmp
inc
sbb
mov
sbb
mov
mov
rcr
rorb
sbb
sbb
enter
pusha
cmp
xor
into
movzbl
jo
add
fsubrp
mov
sub
scas
fdivr
sbb
sbb
pushf
or
xchg
orb
das
or
ljmp
test
je
push
mov
push
or
mov
add
aaa
je
jae
mov
mov
hlt
mov
or
sbb
ret
jbe
fidivrl
clc
add
mov
mov
rcr
mov
jbe
incb
or
out
jg
add
call
repnz
mov
jbe
mov
mov
rorb
pop
rcl
mov
sub
push
mov
inc
popa
sbb
mov
dec
fnstenv
in
mov
sbb
add
and
mov
mov
cli
xchg
icebp
shl
jl
cmpsb
insl
pop
ret
or
pop
push
mov
sbbl
mov
pusha
pop
sub
mov
adc
sub
mov
mov
out
mov
loope
jl
mov
imul
je
je
fs
fsubs
mov
shll
push
or
push
cmp
sbb
and
dec
in
fucomi
mov
shll
mov
lock
sbb
jns
lods
adc
ret
dec
push
in
pop
cmp
push
mov
inc
insl
popa
push
or
and
adc
mov
sub
mov
lock
pop
xor
sahf
xor
rcrb
sub
imull
sbb
add
adc
mov
push
mov
and
sub
mov
je
enter
or
sbb
sarb
sbb
in
push
movnti
mov
fistpll
inc
add
in
mov
movsb
add
rcrb
mov
push
rorb
adc
or
add
icebp
shrb
xor
jl
clc
push
push
pushf
jnp
shlb
add
mov
jle
mov
je
pop
dec
jo
or
dec
sbb
xchg
jle
sub
or
loopne
xor
call
or
roll
mov
inc
cli
jmp
pop
testb
add
rcr
pusha
cld
out
sbb
push
jo
mov
dec
or
adc
out
or
call
test
pop
mov
sbbb
jmp
js
rolb
inc
clc
rclb
mov
das
cmp
xchg
jo
adc
push
pop
push
repnz
xlat
sarl
mov
or
sub
data16
stc
add
pop
jo
dec
mov
jl
add
mov
pop
add
lret
mov
cs
push
lods
scas
sbb
lods
jle
push
xor
rorb
xor
or
mov
and
lods
fldl
add
pop
call
push
and
sti
xor
les
lods
inc
or
cmp
fisttps
mov
mov
jb
mov
and
outsb
inc
or
xchg
ss
jl
loop
add
cmp
mov
or
test
add
mov
add
shll
ret
push
out
push
movsb
sbb
mov
cmp
add
pop
mov
inc
outsb
add
add
add
mov
sbb
je
cmp
pop
push
clc
ljmp
or
into
pop
int
jae
call
neg
cmp
pinsrw
scas
sbb
add
movl
lcall
shlb
bound
xchg
sbb
mov
push
mov
mov
pop
cmp
cmp
or
scas
push
ud1
pop
mov
xorl
or
pop
in
add
mov
mov
insl
add
cmp
mov
ds
mov
imul
ret
or
sarb
sub
mov
lret
sbb
push
mov
sbb
fimull
ljmp
sbb
faddl
in
movsb
push
fadd
ljmp
adc
pop
lcall
mov
lock
jne
push
mov
or
rol
loopne
rcl
clc
sub
flds
jbe
movsb
into
ret
sbb
and
mov
pop
dec
xor
sbb
xchg
or
pop
rorb
adc
adc
add
jno
sbb
pop
or
adc
jnp
clc
fdiv
dec
lock
add
cmp
or
dec
cmc
loop
icebp
mov
pusha
lock
andl
pop
or
mov
sahf
ss
rcr
rcl
dec
add
push
push
test
rclb
rorb
or
adc
push
loop
rcll
sub
ret
mov
adc
js
mov
sbb
jl
jp
pusha
push
popa
mov
jo
mov
xor
adc
cmp
mov
xor
rol
cmp
sbb
jo
mov
mov
add
stc
add
fcomps
sub
xor
sbb
orl
push
leave
or
insb
sbb
fldcw
add
mov
mov
out
cmp
sub
adc
sbb
sahf
pop
test
sub
pop
ljmp
loop
call
dec
mov
fucom
fcmovbe
mov
or
rclb
scas
inc
adc
add
pop
xor
push
cmp
sbb
mov
andl
faddp
imul
jo
push
mov
ds
pop
test
or
ljmp
test
cwtl
je
into
js
pop
lea
mov
push
or
inc
test
xchg
inc
xchg
adcb
inc
or
insl
out
add
push
testb
pop
push
pop
jbe
sbb
xor
inc
jbe
or
adc
out
adc
into
adc
jle
sbb
mov
or
call
je
data16
dec
rol
xchg
shll
cmp
sub
push
ret
jge
test
add
stos
mov
mov
inc
adc
dec
lcall
sub
sbb
jmp
inc
mov
hlt
jno,pn
mov
es
adc
cmp
or
add
xor
pop
or
pop
xchg
mov
rclb
nop
jle
inc
pop
je
pop
outsb
lock
and
cmp
push
or
icebp
pop
decb
dec
mov
stc
adc
sbb
mov
pop
loopne
out
cmp
lret
xor
les
push
and
data16
jo
insl
in
cmpsb
push
call
cwtl
rcrl
adcb
and
out
mov
sbb
and
or
jo
mov
js
mov
adc
push
aas
lds
pusha
in
adc
mov
fsubrl
cmp
or
cwtl
lock
or
cmp
pop
push
push
add
vmread
addr16
pop
sbb
add
or
and
sahf
in
lret
xchg
aad
lahf
pusha
pop
mov
jo
into
scas
cmpsl
jle
jb
pusha
gs
jecxz
pop
mov
jo
divb
int
adc
adc
adc
icebp
or
lret
fs
clc
sbb
mov
dec
mov
mov
add
lret
repnz
cmpsl
xchg
ret
adc
lcall
rcr
std
adc
leave
add
xchg
adc
mov
and
sbb
sbb
adcl
adc
hlt
icebp
mov
adc
stos
rcrb
lds
mov
mov
clc
adc
add
fwait
or
add
mov
sbb
in
xor
das
sbb
into
rcll
xor
sub
scas
mov
data16
or
fstl
mov
cwtl
loopne
imul
inc
adc
sarl
cli
aam
cltd
sbb
out
inc
mov
pop
sub
mov
push
inc
daa
pusha
sbb
mov
lahf
inc
stos
ss
cwtl
pop
call
xor
aam
repnz
rolb
sbb
mov
negb
stos
mov
shlb
mov
pop
cmp
mov
jl
adc
or
add
int3
hlt
orb
sbb
icebp
sub
rorl
adc
xor
jmp
daa
jmp
cmp
mov
cli
test
xchg
inc
mul
and
leave
ret
xchg
pop
incl
mov
pop
outsb
lea
push
jo
push
fcoml
push
add
enter
fs
ret
adc
inc
mov
rclb
stos
add
pop
xchg
sub
int
push
sbb
mov
pop
push
js
sbb
and
mov
xor
push
aam
pop
in
pop
sarb
add
adc
and
sub
scas
or
cwtl
leave
push
cltd
in
filds
enter
negl
push
push
or
cmp
or
mov
adc
adc
ror
push
sub
lock
nop
jp
jae
push
pop
mov
stc
punpckhbw
add
jns
and
mov
add
and
pop
ret
arpl
xchg
in
sahf
loop
pop
or
or
idivb
mov
xlat
mov
lcall
pop
popa
xor
je
adc
lds
pop
sub
test
fcmovnb
and
addps
mov
push
jae
insb
mov
sub
ds
mov
pop
mov
push
mov
push
js
cmp
xchg
lock
leave
aad
jmp
and
cmp
or
das
popf
jo
adc
adc
insb
cmp
and
fbstp
xchg
test
or
rorb
in
ja
nop
mov
adc
xor
dec
xchg
xor
jp
sbb
and
cwtl
movntps
dec
rcll
xchg
lock
aad
fmuls
sbb
mov
mov
sbb
xchg
rcrl
sarb
mov
adc
push
test
mov
mov
pop
pop
ss
push
add
push
js
sarb
push
imull
push
pop
sub
inc
dec
adcl
push
pop
adc
sbb
outsb
aad
or
dec
or
and
mov
adc
jno
add
xor
add
lods
arpl
ror
mov
mov
aaa
inc
es
scas
jno
out
and
pop
jb
add
fildl
nop
loopne
or
dec
sub
or
mov
jge
out
dec
cmp
cmpl
fcoms
push
jg
xchg
or
add
mov
mov
cmpsl
out
push
mov
push
pop
push
pusha
adc
xor
inc
ljmp
push
jbe
ret
push
bound
stc
push
iret
mov
inc
jp
push
jb
test
pop
jno
jmp
fwait
hlt
mov
or
orb
sahf
je
mov
ds
mov
fsubr
scas
inc
shlb
scas
lock
and
leave
cmp
lods
adc
sarb
adc
es
push
cli
push
test
mov
and
pop
and
lea
shrb
push
mov
add
stos
movsb
inc
or
push
push
clc
push
test
xchg
sbb
sbb
fwait
popa
aas
sbb
scas
inc
mov
cld
repnz
cs
fcomip
add
pop
and
xor
add
adc
inc
popf
pop
test
rcl
xor
lahf
sarl
add
das
cmp
sbb
lock
outsb
test
dec
adc
imul
mov
lods
das
lock
push
call
mov
ucomiss
pop
push
mov
dec
xchg
push
push
mov
je
or
push
pop
rorb
rol
xchg
add
das
mov
mov
jge
insb
fdivrl
mov
push
xor
leave
adcb
test
pop
add
jnp
xor
fstps
mov
ja
push
xchg
ret
stos
pop
xchg
mov
stos
jb
add
jmp
insb
pop
call
add
mov
add
push
movsl
nop
xchg
mov
cmp
shr
sar
adc
roll
pop
adc
sub
inc
sub
cmc
cmpsl
cs
call
fsubp
xchg
notl
into
mov
sub
les
push
jle
or
inc
leave
in
add
jge
ret
leave
mov
xchg
mov
push
repnz
lock
test
pusha
repnz
add
fcoml
loopne
idivb
ret
xchg
dec
lods
xchg
mov
dec
push
lahf
aam
notl
sbb
rcl
mov
sbb
lods
jbe
jg
ljmp
in
mull
cmpsb
fcomps
mov
cmpsb
sbb
sbb
push
push
stos
mov
clc
mov
jmp
inc
adc
jne
add
hlt
inc
rcrb
mov
or
or
jmp
push
push
ljmp
loopne
fsubs
push
pop
mov
arpl
movsl
lss
push
or
jo
jnp
mov
mov
push
ret
gs
pop
rolb
into
push
pusha
xchg
xor
mov
insb
loopne
stc
mov
pop
push
ja
lahf
loope
mov
push
lds
ret
xor
pop
sub
sbb
sub
rol
sub
or
adc
mov
push
je
push
out
test
cmp
adc
shrl
xor
in
jp
adc
pop
mov
inc
popl
push
notb
sbb
adc
das
sub
les
adc
enter
add
add
cmc
ret
fidivs
push
push
pop
adc
test
cmp
loope
jp
stc
inc
pusha
add
xor
adc
in
xchg
cmp
mov
push
insl
leave
push
lret
sbb
xor
inc
daa
add
adc
cmp
sbb
lcall
xor
bound
call
sbbb
sbb
mov
jo
adcl
adc
xor
inc
shr
push
faddp
push
repz
fadds
inc
mov
cmpsb
ret
or
and
fsubrp
or
push
or
or
inc
outsb
js
adc
mov
sbb
xchg
adc
sub
jl
loopne,pn
scas
sbb
xchg
mov
add
xchg
lret
adc
jo
add
aad
and
or
pop
movsl
add
xor
in
add
aam
or
mov
cli
add
adc
mov
pop
clc
das
repz
mov
bound
jne
push
popf
test
movb
mov
pop
ficoms
lock
fadds
pop
clc
jecxz
sbb
loope
fcmovb
dec
lret
sub
inc
cmp
mov
imul
ret
push
int
jbe
pop
mov
push
add
push
inc
cmp
and
mov
mov
aaa
dec
sbbb
push
add
testb
inc
shr
leave
and
adc
add
xchg
or
pop
rorb
jb
int3
add
cwtl
loopne
sbb
mov
loopne
iret
cmp
mov
dec
shlb
shlb
push
loop
sbb
push
sbb
cmp
clc
push
mov
test
outsb
adc
or
fs
xchg
test
mov
add
add
xor
jmp
adc
lods
test
mov
adc
sub
inc
adc
add
push
scas
addr16
cmpsl
jp
mov
mov
jb
ret
push
mov
test
out
shl
fs
ret
dec
or
shrb
mov
js
loopne,pn
scas
mov
js
inc
sbb
icebp
cmp
add
dec
dec
mov
lods
dec
lret
mov
push
sub
dec
push
xor
push
clc
or
mov
or
pop
cmp
test
or
cmp
adc
call
pop
adc
sub
or
insl
aad
xchg
cmpsb
push
cs
fs
call
add
ds
leave
mov
or
movsb
shl
mov
cmp
jb
push
rcl
jno
xchg
and
or
push
inc
test
ljmp
movsl
xchg
pop
and
xchg
in
add
addb
add
adc
pusha
add
mov
call
testb
xchg
mov
sbb
sbb
mov
add
out
mov
popf
rcl
and
cli
pop
sub
lock
pushf
inc
in
icebp
lcall
jo
xchg
ds
cmp
js
add
loopne
sub
sbb
pop
outsb
repnz
push
movsb
push
mov
cmp
adc
pusha
movsb
daa
xchg
add
loop
or
loop
sub
sbb
adc
sbb
jbe
orl
repnz
push
xor
push
push
jl
push
testb
or
add
int
in
cmp
fs
ret
jno
ja
hlt
hlt
stos
add
lahf
into
rcrb
lods
les
pop
neg
or
inc
js
mov
push
adc
push
rcll
xlat
sub
je
adc
cmp
les
ret
push
cmp
ret
adc
pop
xor
add
add
sbb
mov
cmpsl
sub
pusha
repnz
ret
inc
jno
push
xchg
mov
mov
and
pop
inc
loop
leave
xchg
push
jmp
je
cmp
pop
cltd
add
dec
xchg
adc
jg
mov
push
jbe
lret
push
or
adc
icebp
or
and
xor
inc
fnstcw
push
mov
lods
and
inc
inc
test
push
adc
das
and
repnz
sahf
je
insb
or
adc
aam
ret
popa
add
adc
push
je
pop
rcrb
cmp
shl
es
ss
sub
mov
adc
add
bound
fdivrs
xor
add
mov
es
sbb
inc
shrb
mov
loop
xor
dec
js
mov
add
push
ss
roll
pop
test
das
dec
mov
push
je
sbb
add
pushf
jl
add
xchg
scas
inc
inc
pop
cwtl
and
test
sbb
mov
orl
test
in
pushf
cmpsl
or
push
add
add
ja
aas
sbbb
movsb
xor
push
sbb
int
test
jl
ljmp
add
add
push
ss
int3
mov
xchg
or
push
loope
lods
movsb
mov
jno
sbb
stos
adc
xchg
leave
je
fisubs
adc
add
aam
adc
xor
js
jbe
ss
lods
add
rolb
or
add
aam
jo
jns
jno
add
adc
iret
jno
and
shlb
adc
inc
and
add
adc
test
icebp
clc
mov
ficoml
add
std
hlt
cmc
add
mov
movb
mov
cmpb
or
inc
in
sar
rolb
adc
icebp
mov
aad
stc
push
or
fistps
mov
xor
jo
push
xlat
out
xchg
jb
sahf
add
test
mov
xchg
lock
jg
das
mov
adc
jno
movsl
stos
out
leave
notb
repnz
lods
inc
mov
outsb
faddl
clc
stc
push
mov
sub
or
push
call
xor
add
xor
push
clc
push
add
or
add
rolb
loopne
mov
push
faddp
ljmp
jmp
dec
mov
bound
es
dec
rcll
adcl
fcoms
rol
dec
aad
cmp
add
adc
pop
or
js
in
cs
rcll
mov
cmc
sar
add
inc
sbb
mov
or
push
sbb
ss
jp
cmp
scas
or
js
test
pop
jp
adc
fimull
ret
movsl
dec
jp
outsb
mov
pusha
inc
cmp
movsl
icebp
mov
fwait
rcrb
add
inc
test
iret
mov
mov
clc
mov
push
fmuls
fisubl
movb
cli
push
fcomi
jns
js
mov
xor
add
sbb
nop
push
mov
leave
or
or
sub
sub
ss
orb
js
rol
push
cmp
ret
fsubl
sbb
mov
cmp
adc
push
add
add
add
sub
pop
call
xchg
test
jne
clc
aad
mov
aam
add
add
std
mov
scas
sub
add
add
adc
push
mov
outsb
movsb
sub
pop
push
push
or
repz
repnz
dec
lret
and
sbb
add
je
sbb
mov
aam
push
sbb
scas
xorl
je
xor
fidivrl
test
or
loope
xchg
insb
rcll
sbb
imul
xor
les
mov
dec
adcb
push
pminub
or
test
add
adc
out
add
out
or
fidivrl
mov
sbb
rorl
lcall
sbb
mov
rclb
xor
xchg
dec
sub
clc
mov
sub
imul
shrb
push
inc
ss
xor
sub
cmp
and
idivb
rcl
push
jg
stc
mov
movsbl
lret
adc
lock
call
loope
sub
in
sub
mov
mov
outsl
insb
mov
inc
cmp
punpcklwd
mov
jo
rcl
sub
sahf
scas
pop
sbb
add
nop
add
data16
or
dec
pop
jo
in
push
orb
cld
cmp
xor
cs
pop
pop
lret
in
and
scas
mov
movsb
mov
ret
or
xchg
inc
or
push
xchg
mov
test
cmpsl
test
ljmp
inc
pop
cmpsl
call
adc
shl
push
add
and
add
jno
les
ret
jno
call
jmp
jo
adc
into
shll
lock
stc
push
or
lods
loope
in
jo,pn
dec
mov
idivb
mov
or
ret
xchg
cmp
icebp
xor
jmp
add
mov
lock
xorb
cs
movsl
jecxz
mov
enter
mov
pusha
adc
loopne
inc
mov
pop
mov
add
outsl
ret
or
das
xor
cmpsb
ljmp
fisubrs
into
cmc
jae
dec
push
push
mov
or
shl
cmpl
xchg
sahf
push
aas
inc
add
push
or
int3
jle
dec
movsl
stos
sbb
outsl
movsb
dec
ret
pop
mov
mov
test
or
xchg
sbb
and
mov
test
fsubl
mov
xchg
adc
repnz
sub
mov
rolb
or
add
mov
pop
push
out
fnsave
sub
les
nop
test
pop
push
loop
inc
mov
and
ret
xchg
xor
jmp
shll
jo
pusha
lock
rcll
int3
sahf
mov
cmp
ret
cmp
dec
fs
push
mov
addb
in
orl
jp
jl
lods
xchg
shl
rcl
out
mov
iret
or
cmp
test
push
test
mov
scas
inc
loopne
mov
mov
movsb
xchg
iret
mov
cmpsl
sub
jns
std
sub
mov
lea
mov
sbb
dec
loopne
pop
jnp
jg
dec
inc
and
outsl
dec
adc
cmp
ljmp
or
mov
pushf
sbb
xchg
or
push
test
cmpb
cmp
or
popa
nop
scas
mov
in
loop
pop
lret
rorb
sbb
fmuls
cmp
shrl
or
sbb
jno
je
popa
rcrb
or
adc
push
cs
adc
mov
xlat
jne
sbb
pop
add
idivb
hlt
in
inc
push
push
pop
inc
lock
repnz
aam
scas
jmp
shlb
cmp
les
ror
dec
push
xor
sbb
js
cmpsl
stos
adc
faddp
adc
enter
push
cmpl
sub
mov
pop
and
jo
sbb
adc
or
pop
push
ret
push
pop
mov
clc
sbbl
shr
push
mov
addr16
add
add
shll
loopne
xchg
mov
movsl
outsb
sub
fs
stos
mov
adc
pop
cmp
add
sbb
push
or
push
push
mov
jb
push
sahf
and
dec
dec
ds
shrl
pusha
mov
adc
imul
aaa
into
dec
push
stc
inc
adc
cmp
jb
jo
inc
test
rolb
cmp
push
and
adc
call
andl
and
inc
loopne
sbb
loopne
fcoms
or
mov
and
mov
popa
mov
adc
pusha
sub
push
pop
inc
xchg
mov
adc
mov
loop
pop
lret
push
ficoms
je
cmpb
sbb
sbb
pop
addr16
cltd
mov
mov
mov
mov
fs
dec
or
sbb
inc
mulb
mov
outsb
inc
call
cs
jo
push
dec
add
add
subb
adc
div
repz
jo
sub
jo
rcl
or
dec
inc
xadd
pop
stc
into
push
or
fisubrs
jmp
sbb
dec
xchg
mov
add
ret
mov
scas
mov
arpl
mov
call
loop
adc
mov
xor
mov
cmpsl
sbb
test
imul
test
sub
cmpsl
dec
rclb
adc
iret
rcrl
outsb
add
leave
add
adc
inc
scas
sub
insl
sbb
sbb
rcl
adc
dec
mov
pop
inc
xor
paddq
sbb
jecxz
push
out
rol
or
or
xor
dec
mov
mov
sub
mov
jle,pt
icebp
hlt
les
xchg
inc
enter
loopne
lcall
mov
rclb
xlat
stos
loop
shrl
push
roll
fdivr
push
scas
test
mov
sub
adc
add
jge
push
sbb
into
dec
out
cltd
push
dec
pop
movsl
cld
lret
sti
sub
jecxz
rorl
add
popa
jbe
and
add
clc
dec
dec
adc
into
mov
js
mov
sbb
cs
daa
les
sub
outsb
jl
and
push
push
pusha
addl
mov
add
cli
mov
ret
pusha
call
cmpsb
mov
mov
aas
add
cld
sbb
rolb
mov
ja
push
inc
bound
test
push
call
add
aad
mov
inc
sbb
inc
and
pop
sti
push
js
xor
add
add
add
loopne
add
inc
je
or
les
fiadds
loopne
bound
mov
dec
xor
push
mov
adc
pop
add
and
bound
loopne
push
sbb
ret
mov
inc
mov
adc
xchg
sbb
adc
inc
sbb
das
push
or
cmp
jne
or
xchg
or
and
addb
jle
test
mov
inc
repnz
add
inc
cmp
imul
and
mov
add
push
inc
sti
inc
push
push
jge
mov
call
add
jnp
jmp
lea
test
aam
rcrb
addl
mov
testb
mov
pop
add
mov
pop
ret
add
push
mov
push
mov
icebp
in
and
inc
dec
mov
cmp
popa
push
sarb
stc
enter
icebp
cmc
jo
enter
jp
je
or
add
call
ficomps
mov
jmp
loopne
or
adc
add
pop
push
orb
enter
popf
scas
or
sti
sbb
lock
ret
outsl
mov
xchg
sub
sbb
popa
sbb
leave
mov
sbb
xchg
rcrl
jae
enter
sahf
out
ret
mov
mov
sbb
pop
es
mov
movsb
add
jp
jecxz
xchg
cmc
pop
repnz
ret
in
shl
cld
and
xor
dec
js
add
xchg
popa
js
xor
pop
mov
mov
cmp
xor
mov
and
decb
mov
rcrl
daa
andb
mov
cmpsl
ljmp
loop
clc
fdivl
push
cmpsl
push
out
pop
dec
xchg
inc
mov
sbb
push
add
mov
sbb
call
lods
sbb
inc
pusha
jbe
imulb
fs
sbb
xor
xor
push
sbb
and
mov
and
xchg
and
or
or
roll
insb
sbb
xor
sbb
out
push
int
xlat
push
imul
lock
add
ret
push
and
shl
adcb
push
sbb
mov
mov
in
cmp
cmp
mov
mov
cmpl
pop
arpl
ret
pop
add
and
or
notb
or
test
pop
lock
pcmpgtw
loope
pop
cld
je
pop
mov
mov
leave
or
add
push
mov
push
add
imul
call
sahf
cmp
or
adc
or
pushf
or
push
ret
cwtl
in
cmpsb
and
aas
cltd
mov
enter
in
test
sbb
sbb
fwait
call
lret
inc
roll
sub
pop
jge
pop
rorb
into
stos
and
imul
fimuls
movsl
xchg
pushf
and
adc
lret
sub
sbb
shl
adc
jmp
cld
test
inc
cmp
sbb
out
sbb
scas
or
lock
loopne
add
cli
sbb
pop
inc
arpl
inc
loop
cmpsl
mov
mov
add
mov
das
dec
in
movb
add
sbb
push
clc
js
inc
push
sbb
add
mov
pop
pop
inc
push
and
push
pop
sbb
cmp
sub
mov
rclb
test
enter
push
and
ljmp
and
outsb
das
stc
rolb
rclb
stos
and
push
or
push
pcmpeqb
adc
jno
dec
adc
add
shll
add
je
cmp
mov
insb
push
push
test
ficoml
add
cmp
pop
das
pusha
xchg
jne
es
or
inc
sbb
add
mov
adc
bound
xor
add
add
in
or
js
cmp
xor
jp
pop
test
push
fiadds
xchg
inc
imul
jge
test
and
rclb
repz
sub
push
push
push
fwait
xor
and
clc
mov
js
mov
pop
je
aas
mov
mov
xchg
push
mov
cs
sub
push
xor
adc
in
testb
sub
jge
fwait
jl
cmp
push
arpl
call
pop
aas
loope
sbb
push
mov
mov
xchg
jp
ret
jo
xor
mov
push
dec
pushf
cmp
rcrb
add
push
jno
xor
aaa
sub
xor
pop
loop
sub
push
fs
or
pop
mov
rolb
mov
stos
add
daa
xor
out
mov
cmp
push
into
rorb
xchg
adc
loop
bound
sub
dec
xchg
mov
lds
xchg
fdivrs
adc
adc
orl
sbb
adc
sbb
or
into
shlb
xchg
and
cmp
mov
mov
adc
pop
push
sbb
add
or
push
rclb
aam
xor
xchg
imul
sub
cmp
aam
lock
or
insb
xor
xor
insl
and
xor
call
sbb
ret
pusha
push
jp
in
shrb
mov
jbe
js
dec
adc
cs
and
push
adc
sbb
inc
shr
rorb
loopne
sbb
and
jge
pop
pop
pop
cwtl
sub
push
or
in
push
push
dec
out
loope
sub
lcall
enter
pop
addb
stc
es
cmp
sub
ret
or
xchg
rcr
mov
or
std
adc
bound
cld
test
add
ss
or
add
add
imul
lcall
icebp
jno
and
xor
scas
or
iret
fcomps
cmp
push
xchg
rolb
lods
xor
mov
cmp
pop
mov
cmp
stos
and
pushf
adc
cmpb
push
cwtl
pop
push
popa
mov
mov
sbb
mov
adc
adc
cwtl
addl
test
inc
enter
stos
movsl
adc
hlt
mov
sbb
and
mov
dec
loope
stos
orb
test
popl
push
out
mov
sbb
mov
sahf
rclb
loope
les
fmull
in
or
negb
push
add
aas
insb
sbb
dec
data16
sub
subl
cli
cmp
ljmp
stos
add
loopne
jnp
shrb
cmp
or
shll
test
xor
push
push
shrl
sub
sbb
fistl
and
or
push
mov
into
jp
pusha
lods
mov
inc
push
stos
push
dec
or
jo
sbb
push
xchg
mov
cmp
aaa
xor
rclb
xchg
xchg
push
callw
mov
pop
cwtl
pop
push
rcrl
add
arpl
lock
movsb
or
lret
jo
cli
sbb
popf
xchg
push
aam
mov
pop
cwtl
adc
inc
dec
scas
rolb
and
push
popf
jp
sahf
das
mov
lods
mov
in
xor
xchg
push
popa
movsb
cmp
or
fcoms
mov
push
push
cmpl
adc
icebp
push
sbb
add
inc
adc
sbb
into
in
mov
push
lock
arpl
add
out
push
loop
sub
sbb
out
push
lock
push
push
aam
rolb
sub
or
sbbb
daa
pusha
jecxz
call
adc
sbb
jo
fisttpll
xchg
popfw
bound
xor
and
inc
add
sbb
cmp
js
sub
mov
lcall
scas
imul
mov
dec
inc
pushf
loop
ret
call
add
sbb
jp
jne
push
pop
push
dec
mov
fimull
cmp
adcb
adc
rolb
cli
adc
jecxz
dec
popf
sbb
test
sbb
xlat
mov
scas
add
and
fs
inc
mov
mov
orb
test
adc
test
test
push
andl
inc
add
mov
cmp
inc
mov
je
pop
dec
scas
clc
add
push
sbb
and
mov
scas
fwait
push
inc
testb
add
sbb
mov
ds
pushf
cmp
popa
and
jbe
and
inc
sub
out
xor
inc
dec
loop
mov
xchg
add
push
or
sbb
aaa
or
mov
cmpb
ljmp
lds
xor
shrb
or
adc
testb
or
cmpsb
mov
or
or
outsb
mov
sahf
mov
gs
or
sarb
xchg
sbb
outsl
ret
inc
pop
adc
cmp
jp
rolb
sbb
jns
xchg
dec
pop
cmp
push
pop
or
jno
lods
test
or
call
popa
pop
cmp
and
es
shrb
push
cmp
callw
jno
sti
das
lods
and
fcoms
adc
addl
adc
adc
mov
dec
xchg
ficoml
mov
push
push
aas
jb
cmc
hlt
or
mov
fs
mov
stos
sbb
outsb
and
gs
je
mov
or
add
hlt
clc
ret
repnz
leave
add
rolb
or
mov
pop
lock
clc
into
xchg
inc
sbb
negb
adc
cmp
sub
sub
cwtl
sub
push
lea
cmp
icebp
lea
push
or
and
cli
call
lock
xchg
out
sbb
in
mov
mov
sub
jo
sbb
push
loope
jp
nop
sub
or
jl
ljmp
fmull
sub
rorb
push
aam
push
sub
mov
mov
adc
lret
or
or
mov
das
sahf
das
sub
call
or
shrb
xor
aad
jecxz
mov
pop
or
test
cltd
test
leave
sbb
mov
cmc
dec
addb
test
out
clc
or
popa
add
cli
cmp
cmp
and
out
pop
dec
or
mov
xchg
lret
repnz
ljmp
cmp
call
add
sub
sti
movsb
adc
push
or
jmp
xchg
test
or
xor
xchg
dec
pop
sbb
xchg
adcl
dec
cmp
mov
cmp
mov
cltd
dec
pushf
pop
mov
arpl
adc
mov
bswap
dec
mov
xor
clc
cmp
sub
push
cltd
daa
test
push
loopne
jp
xchg
ret
and
xor
leave
dec
lock
push
add
mov
popa
push
mov
rclb
dec
call
add
dec
mov
mov
jmp
lahf
sbb
inc
lods
mov
loop
sarb
mov
push
bound
andb
sahf
ljmp
mov
fs
and
and
push
fcompl
jnp
cmpsb
stos
xlat
lods
push
push
leave
push
cmp
jb
and
arpl
add
and
popa
aaa
lcall
xchg
repz
test
sarl
jecxz
ficoml
rclb
pop
and
popa
sub
lret
mov
loopne
sub
xor
push
add
dec
inc
add
cltd
js
ret
add
adc
cmpsb
shll
sbb
xor
pop
mov
xchg
mov
xor
sub
test
pop
dec
xorl
stos
cmp
jbe
pop
lret
mov
rorb
add
push
pop
sbb
sbb
scas
and
push
imul
pop
mov
ljmp
sbb
mov
hlt
xchg
lock
ret
xchg
sahf
into
jle
nop
rolb
cmpl
push
sub
lock
xor
push
shll
mov
adc
and
icebp
jp
or
pop
xor
mov
xlat
roll
mov
cwtl
mov
js
mov
push
push
push
mov
mov
fs
shlb
je
xor
sub
or
pop
outsb
mov
push
push
or
or
or
and
dec
inc
dec
cli
or
lods
mov
xchg
scas
mov
or
mov
loop
je
mov
add
jp
pushf
hlt
andb
adc
sbb
cmp
addl
enter
jbe
dec
mov
add
mov
or
lock
xadd
ljmp
shrb
cmp
lea
call
xor
xchg
je
test
xlat
bound
mov
pop
cmp
add
mov
push
aas
ret
es
or
testl
cs
shlb
dec
insb
mov
outsl
cld
call
mov
mov
sub
push
js
rcl
lret
xor
add
cmp
xchg
ror
sub
adc
pop
sbb
movsb
or
stc
add
push
std
sbb
sub
sbb
mov
mov
in
sub
mov
mov
call
clc
add
sbb
fs
and
add
js
lahf
imul
adcb
or
push
push
add
pop
mov
sub
add
rorl
mov
call
mov
icebp
gs
call
cmp
or
xlat
sbb
call
shlb
pop
and
add
mov
or
ret
or
imul
push
adc
call
lock
cmp
mov
dec
push
pushf
repnz
pop
andb
pop
xchg
push
cmp
in
int3
push
dec
jmp
xchg
dec
cltd
and
dec
ds
lock
hlt
add
loopne
adc
jg
jmp
add
mov
popf
stc
dec
jo
inc
or
add
dec
pop
sbb
ljmp
pop
out
mov
push
fmul
push
add
out
and
sub
sarb
sbb
sub
jo
adc
mov
rcl
sti
push
push
repz
push
and
and
and
or
hlt
cmpsl
out
cmpsb
leave
and
dec
mov
rol
mov
cwtl
loop
adc
jecxz
mov
pushf
sub
shl
iret
lcall
subb
repnz
rcrb
cmp
mov
sbb
or
inc
icebp
xchg
or
add
fidivrl
jp
aam
add
subb
jge
push
test
cmp
xor
loope
ret
or
sub
sbb
cmp
add
ret
cwtl
push
out
fcmovu
jmp
sarb
stos
inc
xor
or
icebp
push
or
shr
bound
mov
and
dec
push
lods
sarb
add
push
add
or
lret
add
xor
mov
xor
or
mov
daa
xor
and
jnp
imul
cmp
mov
xchg
dec
sbb
cmp
lods
test
jmp
push
ljmp
idivb
adc
ljmp
jne
push
or
sbb
int3
sbb
pop
push
lea
inc
lock
push
pushf
and
jl
adcl
push
sub
sbb
imul
subl
push
mov
sbb
sbb
push
rorb
inc
hlt
stos
push
inc
lods
lea
cmp
add
xchg
dec
mov
stos
loope
rorb
pop
adc
fistl
mov
bound
ror
stos
addl
add
dec
sarb
inc
mov
push
popa
test
add
jnp
movsl
jo
mov
jo
shr
lret
jo
inc
add
aad
dec
or
cld
pushf
add
add
pusha
rclb
adc
scas
sbb
lret
add
pop
inc
test
adc
dec
bound
les
mov
ret
dec
outsb
int3
cltd
movsb
movhps
inc
or
pop
movsb
pop
shlb
sub
xchg
icebp
or
jmp
push
cs
into
or
outsl
loopne
mov
cli
testl
pop
inc
and
rolb
xchg
test
cmpsl
mov
ljmp
cs
sub
outsl
dec
or
xor
push
cwtl
adc
lods
dec
clc
cmp
ror
sbb
rorl
pop
cmp
ret
sub
cli
enter
and
testl
repz
sbb
sbb
sbb
mov
gs
fnstsw
aam
popf
rclb
sub
std
pop
mov
js
cld
and
call
loop
shr
push
leave
hlt
mov
adc
push
adc
outsb
pop
movsb
sbb
clc
lret
ret
in
mov
or
and
inc
imul
mov
lock
mov
stos
mov
ljmp
and
cmp
push
in
xchg
or
or
ret
push
loop
jne
imul
imul
mov
lret
fisubs
pushf
mov
rorl
ret
push
push
subb
add
mov
mov
or
shl
dec
pop
arpl
xchg
push
push
mov
loope
dec
fnstenv
inc
push
or
rolb
js
negb
test
je
sbb
jecxz
sub
inc
mov
or
sar
and
das
decb
dec
cmp
sbb
mov
enter
push
push
test
jo
stos
push
or
lret
or
and
xor
rcll
pushf
inc
adc
cs
jb
daa
clc
les
rclb
add
pop
xor
inc
leave
xchg
or
movsb
or
jne
dec
inc
testb
cmp
add
push
test
movsb
adc
decb
pop
outsl
lods
cmpsb
sahf
push
or
mov
pop
test
loopne
add
mov
xchg
push
jae
xchg
xlat
popf
data16
or
icebp
sub
loop
aam
push
pop
test
cmp
cs
ds
leave
jno
das
add
cmp
test
inc
or
xchg
test
ss
clc
adc
xor
mov
rorb
pop
xchg
xchg
adc
xor
mov
mov
mov
mov
mov
sbb
test
adc
xor
loopne
das
aam
or
xchg
push
push
iret
aad
sbb
faddp
push
xchg
jg
inc
xchg
push
pop
cwtl
xor
push
sti
rclb
rorb
gs
pop
sbb
inc
leave
mov
popf
mov
push
push
pusha
xorb
bound
jo
xchg
fldt
jl
andl
pop
push
sub
ss
hlt
rclb
push
pop
test
call
mov
sahf
dec
push
inc
test
nop
push
xor
add
mov
add
adc
adc
stos
rolb
sub
push
cmovp
daa
adc
or
xor
rolb
jo
mov
cmp
rorb
flds
xorl
dec
lods
rol
xchg
fst
push
mov
je
lahf
sub
mov
push
sbb
push
sbb
shll
lcall
cmp
arpl
andl
push
xchg
sbb
ror
dec
ljmp
dec
ret
sbb
pop
pop
or
out
xchg
and
inc
cmpsb
das
mov
adc
adc
jbe
push
mov
mov
add
clc
cmp
push
add
xchg
add
dec
in
icebp
add
mov
dec
pop
sub
adc
int3
sbb
stc
xor
stos
xchg
jne
inc
mov
xor
sbb
sbb
js
lods
ds
cmp
adc
pusha
shll
sub
movsb
pushf
lahf
or
je
and
push
pop
aas
nop
sbb
or
adc
out
xor
push
fidivs
lock
pop
dec
or
imul
and
pop
es
or
test
jp
adc
out
inc
adc
xlat
shlb
fmul
sub
xchg
push
add
push
add
fdivl
lea
inc
test
and
out
sahf
dec
jb
mov
sbb
enter
movsl
les
xchg
pop
dec
xor
adc
sbb
mov
cwtl
sbb
leave
or
mov
or
push
mov
adc
rcrb
jg
fsubl
shrl
xorl
out
test
test
sub
clc
enter
insb
lret
aam
jnp
pop
cmp
inc
notb
push
mov
push
pop
sbb
mov
loopne
xchg
clc
push
ljmp
add
inc
sbb
sti
imulb
mov
jge
sbb
ret
js
xor
mov
cmp
push
insb
cmp
gs
inc
adc
rcrl
test
add
mov
call
pminsw
je
mov
jo
shlb
out
adc
and
rolb
cltd
push
add
push
pop
rcl
cld
clc
mov
sarb
mov
push
xchg
or
xor
loopne
pop
shll
add
add
push
mov
and
push
lcall
jle
outsb
xor
push
dec
xchg
add
sub
add
rclb
int
test
and
or
cmpsb
pop
add
xor
push
xchg
sbb
add
sbb
add
mov
enter
mov
ss
insl
faddp
push
lods
push
or
test
cmp
mov
test
add
adc
sbb
push
sub
faddp
push
or
pop
shl
sbbb
pop
cmp
repnz
sbb
shlb
pop
aam
jb
das
mov
mov
cmp
mov
add
xor
or
test
das
jmp
repnz
popa
xor
mov
cltd
pop
sbb
pop
cmp
add
or
jb
cmp
xor
ljmp
sbb
jl
push
movl
adc
cmp
call
or
add
rolb
push
or
cmp
add
cli
test
je
and
cld
subl
adc
cli
xor
scas
into
test
xor
mov
cld
sub
sbb
sub
mov
test
clc
mov
mov
rclb
adc
rolb
xchg
add
mov
inc
enter
mov
aaa
lret
pop
ficomps
jns
push
push
mov
or
inc
enter
add
ret
xorb
and
jmp
sbb
imul
and
and
adc
jo
cwtl
pop
add
lock
push
nop
xor
clc
repnz
and
insb
arpl
cs
ds
mov
int
dec
inc
movsb
pop
sbb
jl
aam
subb
cmc
pop
sub
jnp
add
stc
daa
mov
and
bound
or
add
pushf
rol
xorb
nop
xlat
roll
push
jg
test
lock
push
add
loop
shrl
stc
push
sub
mov
ret
lcall
imul
cli
push
rolb
shll
push
mov
mov
outsb
xchg
loopne
outsb
mov
loopne
jp
movsb
pop
jmp
lcall
add
mov
cmp
scas
xchg
sbb
outsb
loopne
mov
fst
add
orb
push
adc
mov
je
or
or
mov
push
ja
lea
sbb
sahf
add
or
or
stos
out
je
add
push
pop
fnstenv
dec
aas
lret
and
sbb
ds
gs
add
dec
push
lock
inc
mov
rcl
add
inc
dec
pop
aaa
jg
shl
adc
aam
inc
adcb
or
or
loop
xor
into
sbbl
lcall
nop
fidivrs
adc
ret
sar
adc
enter
sbb
push
lods
push
and
or
xchg
adc
mov
into
lret
shl
adc
pop
lock
pop
das
sub
cmpsl
or
sub
push
movsb
xchg
xor
jnp
loop
add
jecxz
push
int3
or
push
inc
add
adc
shll
imul
xor
bound
sub
or
or
inc
push
pusha
enter
out
add
jp
jae
cwtl
loopne
mov
xchg
in
jb
stos
ret
es
loopne
inc
ret
and
ret
loopne
or
ret
mov
adc
sub
xchg
sub
bound
mov
dec
sahf
insb
fcomps
outsl
call
ljmp
or
sub
or
test
push
adc
push
and
sbbb
inc
sahf
imul
mov
rorb
jbe
outsb
jmp
repnz
ljmp
mov
sub
andl
or
jb
mov
mov
test
mov
lock
in
fidivs
arpl
mov
ret
jno
cmp
push
push
push
push
add
test
inc
loope
jo
xchg
rolb
pusha
pop
dec
pop
lds
adc
push
or
add
ret
arpl
jno
into
out
adc
enter
push
mov
mov
idivb
stos
data16
push
xchg
push
nop
xor
jl
cltd
subb
mov
add
je
jecxz
pop
leave
push
shlb
les
sbb
cmc
movsl
arpl
lods
dec
add
outsb
mov
and
mov
adc
sbb
jp
mov
adc
nop
sbb
xlat
pop
loopne
scas
add
sbb
pushf
add
add
mov
pop
cmp
ret
add
add
push
push
inc
mov
or
dec
lods
adc
cmpsb
sub
in
or
and
jno
xor
pop
cmp
sahf
mov
jl
fdivp
rol
daa
std
xor
or
push
lods
xor
inc
movsb
mov
dec
pop
es
nop
mov
add
xlat
xchg
push
or
adc
or
mov
outsl
xor
or
push
data16
fs
and
cmp
in
stos
cmp
adc
js
hlt
div
sarb
mov
ds
int3
sbb
lock
add
idiv
xchg
cmp
test
add
lock
add
test
fcompl
cmp
negb
mov
or
push
popf
lret
sbb
xlat
repz
hlt
icebp
orl
loope
or
mov
divl
sahf
mov
sbb
add
dec
popf
jno
ds
sbb
pop
pop
inc
stos
aam
mov
add
mov
jp
into
xchg
out
cmp
xor
roll
dec
sub
sbb
shlb
add
cmp
fadd
add
icebp
test
cld
cmpsb
push
xchg
notb
frstor
icebp
aam
dec
sbbb
clc
mov
pop
js
xchg
lock
rol
jb
and
fs
movsl
mull
lea
rclb
es
jmp
popa
add
lret
pop
push
rclb
jb
jb
mov
jb
lods
clc
push
and
shrb
adc
or
js
add
xchg
nop
mov
loop
lock
mov
mov
orb
lret
mov
and
jge
cmpb
add
inc
push
hlt
sbb
xchg
sahf
push
in
rolb
cmp
lea
sarl
or
rclb
sbb
mov
xchg
push
push
sub
fmuls
jo
adc
xchg
inc
mov
mov
subb
mov
xchg
push
inc
xor
jp
add
sti
stos
ds
nop
jp
fcoml
or
jne
and
shr
add
lret
xchg
or
xchg
and
add
pop
sbb
rcrl
inc
nop
cli
test
and
and
pop
push
daa
push
mov
insl
leave
add
dec
iret
jle
rcll
mov
dec
or
sbb
pusha
loopne
push
push
outsb
sub
push
daa
mov
shrb
imul
or
pop
jp
imul
pusha
fildl
ds
add
lcall
int
adc
shrl
xor
lods
test
je
pusha
repnz
push
inc
aas
xchg
xchg
adc
das
push
inc
and
adc
sbb
ret
add
nop
pusha
and
xor
out
jae
scas
andb
frstor
push
add
sbb
jb
jne
into
jo
dec
popa
ret
xchg
push
inc
ret
cmpsl
stc
xchg
or
push
leave
cmp
mov
add
add
mov
mov
ljmp
shll
pusha
das
xor
mov
or
push
push
adc
mov
cli
sub
lea
into
add
inc
dec
loope
sbb
sub
popf
outsb
mov
xchg
aaa
mov
mov
dec
test
daa
cs
push
bound
daa
ds
dec
loopne
enter
cmp
pop
pushf
xchg
sbb
lret
push
and
inc
fs
adc
rcl
xchg
push
jmp
pop
pusha
nop
xor
add
roll
and
cmp
loop
test
push
xor
jmp
adc
repz
in
sub
jnp
mov
push
mov
repz
movb
and
sub
push
sub
mov
jo
lea
scas
push
push
shrl
xor
aaa
leave
addr16
loopne
push
push
leave
add
or
dec
mov
xchg
subb
dec
js
sbb
inc
mov
int3
cmp
lock
mov
popf
xchg
jmp
cmp
cmp
adc
dec
aam
shlb
adc
loopne
pop
xor
jns
mov
push
push
rolb
dec
insl
mov
mov
hlt
pop
ret
sub
inc
rolb
push
push
add
mov
outsl
jne
arpl
outsb
lret
dec
pushf
adc
jo
push
cmp
adc
leave
add
pop
lret
push
divb
call
shlw
sbbl
cld
outsb
add
dec
orb
aam
pop
into
xlat
es
push
push
mov
pop
mov
les
jmp
jae
outsb
movsb
xchg
lods
mov
mov
pusha
ljmp
cli
inc
cmpsl
and
mov
lock
mov
adc
jne
loopne
inc
cmp
xor
test
ret
es
push
cmpsb
or
jg
add
push
dec
push
fldl
or
ficoms
lock
push
inc
pop
adc
nop
inc
and
hlt
push
pushf
or
xor
daa
shll
fadd
push
dec
jge
inc
jp
mov
push
cmp
sbb
cld
push
xchg
push
mov
push
jp
pop
push
mov
adc
ja
push
push
test
cmc
scas
outsb
das
sbb
xor
add
shl
xor
dec
inc
popf
test
cmpsl
pop
cmc
and
or
dec
testb
push
adc
clc
call
jne
lret
into
jnp
pushf
andb
ss
jb
sbb
loop
mov
daa
ljmp
icebp
mov
sbb
adc
rcrb
ljmp
cltd
ljmp
or
shlb
lret
pop
dec
adc
test
movsl
loope
in
sbb
mov
mov
push
push
push
and
jns
pop
data16
sbb
mov
insl
sbb
clc
and
into
push
push
lret
movsl
in
adc
cld
pop
popa
cmp
call
imul
xchg
xor
cwtl
lods
pop
add
adc
insl
pusha
jo
rol
mov
out
mov
pusha
rclb
out
pop
adc
xor
aas
sub
repz
or
push
push
pop
sub
or
xor
lock
loope
lcall
lock
pushf
mov
imul
sub
push
aas
sub
sarl
jl
cmp
js
ficomps
fimuls
adc
pushf
call
popa
lcall
pusha
les
cmp
pop
leave
or
push
xchg
hlt
aad
xchg
shlb
imul
sbb
or
push
pop
incb
cmpsl
icebp
or
jle
lods
add
mov
les
pop
and
push
into
lret
or
and
push
movsb
cld
rol
push
int3
push
add
or
test
add
adc
inc
add
cli
clc
sub
mov
sub
or
push
es
shll
xchg
sub
fcomps
xchg
or
fildl
sbb
and
loopne
mov
push
jmp
aad
js
fadds
cmp
push
cwtl
enter
and
jns
adc
jp
shrb
test
je
push
mov
push
je
mov
sub
cmp
cmp
xchg
adc
push
dec
mov
lret
inc
in
fadds
ret
mov
in
mov
add
or
inc
rclb
sbb
cmp
sbb
adc
or
or
jle
icebp
inc
cmp
push
fcoml
out
cli
ret
push
imul
mov
rorb
sub
dec
adcb
pop
jmp
addr16
mov
pop
adc
roll
inc
xlat
sub
mov
shlb
add
adc
shl
add
leave
cmc
or
cmpl
and
lods
mov
cmp
ljmpw
stos
add
or
jp
into
scas
push
pop
pop
sub
fisttps
loop
es
or
pop
leave
dec
add
cs
jo
loop
loope
ret
xchg
xor
out
call
cli
cmp
rcll
adc
jne
adc
push
jl
mov
mov
mov
fsubs
scas
loopne
push
push
push
fisttps
movsb
inc
repnz
movsb
les
sbb
add
fcomi
fcompl
add
loopne
or
and
ret
punpckhbw
add
push
push
jnp
movsl
or
lea
pop
imul
pop
cmp
aas
jne
popa
pusha
pusha
push
pop
shll
push
je
popf
pop
mov
adc
push
or
sbb
jo
and
faddl
mov
sbb
or
inc
sub
jb
and
notb
leave
dec
test
mov
imul
and
push
ret
ret
pop
sbb
dec
pusha
cmp
test
adc
pop
lcall
cmp
push
add
add
xor
push
imul
add
add
inc
pop
dec
dec
pop
cwtl
adc
and
sarb
inc
dec
inc
jmp
and
or
adc
and
mov
sbb
orl
cmc
icebp
push
adc
push
rorl
push
add
mov
movhps
sbb
sar
out
inc
rol
mov
dec
xor
in
rcll
xchg
push
sub
orb
sahf
bound
add
ljmp
xor
add
icebp
and
mov
enter
sub
js
mov
add
mov
or
inc
lea
fwait
imulb
ror
xor
mov
jbe
pop
or
pop
xorps
cltd
pop
add
adc
leave
push
test
push
push
shl
js
inc
rolb
push
push
out
shrl
xorl
out
push
inc
push
stos
jg
int3
mov
cmp
ljmp
cmp
ljmp
loope
mov
push
pop
sub
jns
daa
inc
cmp
push
mov
cmpb
pop
pop
or
out
sbb
lcall
xchg
lock
xor
pop
sub
adc
xchg
add
sub
mov
adc
ret
pop
ficoms
mov
daa
push
push
loopne
dec
mov
push
ret
sbb
repnz
adc
sbb
jge
jecxz
jp
fcomps
pop
adc
mov
dec
xor
lods
data16
adc
stos
lea
loopne
rolb
lds
test
je
and
cmp
dec
bnd
in
movsl
add
add
pop
in
xlat
push
pop
aas
and
daa
gs
xchg
sbb
inc
mov
sbbb
ja
sub
mov
mov
push
jne
and
jecxz
jne
mov
rcl
mov
mov
add
fsubs
fsubrl
lock
movsb
add
dec
cmp
mov
add
cmpsb
sbb
sbb
or
add
dec
lock
imul
pop
rcrb
ljmp
shll
ljmp
ljmp
hlt
and
and
lods
xorl
rcrb
push
in
or
push
or
add
add
sbb
ret
ret
ljmp
pop
andl
mov
cwtl
add
ficoml
sub
add
jb
or
popa
gs
add
jne
lock
es
rcrb
add
rolb
mov
add
pop
dec
sub
cwtl
mov
mov
push
pop
pop
jmp
in
mov
add
icebp
push
push
test
cmp
adc
push
inc
push
push
clc
xor
add
in
sbb
lahf
adc
jo
or
faddl
or
rorl
jecxz
hlt
adc
inc
outsl
adc
lods
mov
mov
push
incl
nop
mov
fucom
push
pusha
int
xorl
rclb
out
cwtl
push
inc
scas
xchg
add
sub
ret
jle
je
inc
sbb
shl
xchg
lods
and
pusha
dec
pop
ret
mov
sti
push
pop
push
sbb
or
xor
pusha
xchg
mov
sub
enter
rclb
sub
and
sbb
lcall
or
add
enter
popa
movsl
mov
pop
outsl
loop
xchg
add
das
and
xchg
inc
loopne
stc
cmp
mov
or
rorb
dec
push
test
pop
add
jge
mov
arpl
sahf
add
lods
pop
shlb
js
and
shrl
or
outsb
pop
fimuls
dec
mov
and
fdivrs
cmp
addl
add
andb
daa
dec
adc
inc
js
dec
aas
movsl
pop
push
mov
push
insb
or
or
cmc
dec
lods
lcall
lods
test
in
xlat
scas
jbe
cmp
dec
adc
jp
ret
rcll
pop
test
loop
mov
add
add
xchg
mov
shlb
sub
pop
sahf
add
or
push
dec
push
mov
cli
xchg
cli
xchg
or
cmpsb
sub
loop
push
or
cli
mov
push
arpl
sub
adc
add
idiv
add
enter
push
out
imul
inc
inc
lret
mov
aas
dec
hlt
and
pop
add
pop
inc
xchg
adc
mov
or
orb
add
mov
xchg
in
sbb
jne
adc
and
add
jp
mov
mov
test
mov
stos
pop
add
ss
rclb
sub
pop
cmp
popf
xor
and
sbb
add
pop
cmpsl
jp
push
scas
outsl
sbb
cmp
jl
loop
add
popa
icebp
test
outsl
cwtl
xchg
mov
ret
ficomps
dec
mov
pop
arpl
sub
and
rorl
pop
ret
sbb
push
jg
sbb
mov
dec
loop
rclb
fadds
lret
dec
add
cmc
shr
push
sub
adc
push
or
dec
mov
lock
sbb
ror
into
and
adc
pop
inc
pusha
mov
jmp
sbb
repnz
or
xor
mov
xor
and
jo
test
sbb
jnp
loopne
dec
cmpsb
push
and
mov
dec
cmp
sar
popa
aad
pop
sub
enter
mov
cmp
inc
cmp
imul
jo
sub
and
test
ds
fiaddl
jno
shrb
push
push
and
pop
dec
sbb
inc
scas
pop
cmp
ds
mov
sub
mov
hlt
es
ljmp
jp
xchg
pop
push
pop
sub
andb
in
sbb
or
mov
mov
aas
orb
bound
test
mov
push
pop
in
enter
fiadds
rorb
xchg
push
add
jo
xchg
icebp
cmp
loopne
loopne
jmp
pop
pop
pop
loopne
mov
mov
push
ret
insb
pop
cltd
jmp
jp
sub
dec
int
test
loopne
xor
inc
inc
push
dec
cld
mov
sub
inc
imul
inc
sbb
gs
xor
push
push
or
pusha
arpl
jbe
push
pop
or
rcrb
call
stos
or
jl
leave
and
or
add
inc
xor
scas
or
shlb
mov
mov
sbb
add
es
lods
stos
sbb
call
fdivrp
push
aam
fs
mov
arpl
push
or
ljmp
xchg
pusha
or
outsb
adc
dec
cmpsl
dec
dec
rol
ret
push
call
test
xor
mov
pop
cli
fs
xchg
add
jp
add
and
pop
adc
and
push
mov
jp
pop
and
sbb
and
xchg
push
ljmp
data16
icebp
mov
lock
js
and
aam
inc
and
jecxz
cmc
stos
xor
ss
sbb
xchg
inc
clc
sbb
pop
sub
jle
stos
push
push
adc
xor
dec
pop
mov
bound
sub
cltd
andb
fcomps
bound
xchg
test
repnz
loope
sbb
es
fcmovu
pushf
xor
lret
rorb
cld
mov
push
jo
iret
mov
addl
inc
or
xchg
mov
rcrb
loopne
pop
adc
rclb
xchg
push
xlat
test
push
jge
lock
xor
pusha
mov
adc
pop
test
pop
xor
popa
and
pusha
inc
fwait
pop
shl
push
sahf
scas
lock
sub
push
pop
push
or
add
sahf
push
les
push
cs
cmp
jne
sbb
push
sbb
mov
ljmp
int3
cli
or
rorb
loop
sbb
dec
jo
lods
push
or
push
and
sub
rcll
xlat
notb
sarb
jb
shrb
shl
pop
sub
cmc
xchg
lcall
and
cwtl
pusha
lods
addb
popf
pop
jo
sbb
lret
cmp
add
inc
mov
add
sbb
movb
push
imul
out
jno
mov
adcb
inc
idivb
sub
stos
cmp
and
push
pop
cmc
rcl
sbb
hlt
xor
push
lcall
mov
cmp
push
lret
add
loope
cwtl
insb
push
adc
jp
add
hlt
fmull
stc
movsb
add
and
add
inc
sub
out
shll
adc
sbb
lock
enter
add
sbb
adc
rclb
mov
in
mov
sub
les
nop
xor
or
mov
add
cmp
lods
xchg
jg
shrl
mov
and
sbb
mov
or
adc
into
push
test
sub
mov
mov
in
xor
adc
jb
pop
cmp
dec
cmc
test
or
out
add
sahf
scas
pop
fsts
pop
or
shrb
adc
cld
aad
sbb
mov
leave
push
xchg
sub
adc
add
or
sub
cmp
rcl
jb
mov
sbb
add
dec
lret
jns
cmc
ret
sbb
or
or
sub
adc
xchg
clc
mov
mov
sbb
aad
clc
enter
push
cwtl
les
nop
sub
lods
xchg
test
bound
ffree
adc
icebp
mov
mov
test
ljmp
icebp
xor
add
call
hlt
stos
clc
inc
enter
adc
sub
sub
cs
add
test
xchg
ss
adc
loopne
mov
mov
bswap
xchg
add
rolb
ret
push
xchg
shll
pop
test
push
call
enter
les
daa
shl
cmp
cmp
outsb
adc
push
pop
das
or
push
imul
add
jo
test
stos
repnz
mov
lret
out
stc
loopne
dec
loopne
inc
cmp
mov
mov
mov
and
adc
sub
inc
and
inc
daa
add
pusha
gs
mov
icebp
je
loopne
and
mov
cltd
movsb
and
dec
outsb
mov
and
xchg
sub
rol
mov
sub
lret
xchg
jp
ljmp
mov
je
push
add
outsb
pop
xchg
loope
or
cmp
lods
enter
cltd
jb
cmp
or
or
aas
xor
inc
imul
jecxz
pop
ret
and
push
push
or
lret
adcb
sbb
adc
dec
or
mov
xor
bound
std
sbb
fimull
std
xor
add
or
mov
loop
dec
push
lods
adc
pop
stos
xchg
testl
popa
adc
ds
sbb
or
jbe
test
ds
cmp
xchg
imul
and
jbe
mov
dec
push
mov
push
out
ja
pusha
imul
jno
push
inc
dec
stos
sub
cs
inc
or
sub
addb
sbb
iret
add
je
jb
sarb
adc
add
adc
xchg
xchg
push
mov
iret
jb
lret
xor
lret
cmpb
xor
adc
ds
pop
adc
icebp
sbb
adc
dec
pop
stos
enter
add
mov
inc
addb
rorb
push
arpl
sbb
fldcw
pusha
shlb
xor
rcl
sub
aam
adc
in
pop
test
cmp
or
jb
dec
add
loop
popf
dec
add
movsl
sbbl
shrl
cmp
inc
pop
mov
lods
add
jmp
sbb
sub
loopne
rol
sub
dec
cmpsb
das
jmp
xchg
and
mov
jp
jge
sbb
sub
cmp
push
sub
xchg
hlt
inc
leave
shlb
pushf
mov
fldl
push
test
negb
sbb
add
mov
add
dec
test
inc
mov
cmp
cmpsl
rcl
cmp
inc
ret
jecxz
mov
or
and
lock
aad
push
aam
les
mov
sbb
jg
addl
and
cmp
or
add
hlt
push
xor
sbb
das
push
sbb
sarb
or
inc
pop
sbb
sbb
xor
cs
mov
movsb
rorb
out
call
xor
mov
and
push
sbb
add
or
mov
xor
mov
add
jecxz
and
rcrl
imul
lock
jg
push
push
mov
adc
mov
jo
pop
adc
mov
stos
push
sbb
jno
jb
sbb
or
divl
and
push
rclb
icebp
mov
loopne
inc
push
mov
mov
pop
inc
sbb
pop
add
adc
add
adc
cmc
fdivs
xchg
rolb
rclb
cmp
sbb
add
div
cmp
sub
les
inc
adcb
out
push
add
add
stc
les
js
cmp
dec
cmpb
dec
cmpsl
in
ret
lcall
adc
mov
ret
mov
inc
pop
pusha
aad
hlt
mov
pusha
sbbb
fidivs
movb
jmp
mov
cmp
push
and
push
jge
or
out
sbb
or
ds
and
test
rcll
sub
pop
mov
mov
loope
jns
aad
add
rol
xor
push
icebp
enter
mov
sbb
and
mov
jo
dec
icebp
sub
dec
and
push
mov
mov
sub
mov
mov
movb
adc
shr
pop
xchg
xor
test
push
mov
mov
ds
and
or
pshufb
pop
repnz
sbb
test
inc
lcall
seta
jp
sahf
pushf
out
push
jmp
sbb
cmpsl
sub
dec
ljmp
push
mov
mov
add
push
pop
and
xchg
or
cmpsl
xchg
fstps
mov
xchg
gs
loop
adc
adc
ret
pop
popa
mov
adc
out
stos
rcll
xchg
lcall
fcomps
xchg
push
jb
adc
push
cvttps2pi
rolb
push
ja
rorb
add
ret
les
out
loope
dec
xor
jp
mov
test
xchg
mov
aas
pop
loopne
outsb
push
leave
push
mov
lcall
ss
imul
adc
adc
cmp
sbb
add
cli
xchg
jne
inc
data16
push
xchg
int
sub
nop
adc
bound
insl
rolb
adc
leave
and
mov
push
in
push
push
hlt
cli
cli
je
inc
adc
add
pop
in
xchg
xchg
jo
dec
fisubl
cmp
jle
push
mov
jp
add
sbb
in
shll
mov
movsb
lret
mov
rcll
adc
xor
adc
mov
rcrb
or
inc
jg
cmp
or
mov
outsb
pop
outsb
in
add
add
testb
hlt
and
push
ja
xchg
pop
pusha
and
shrb
cmp
add
mov
in
and
stc
sbb
adc
or
inc
pop
dec
adc
sbbl
jnp
cmpsl
lock
add
das
test
mov
mov
cmc
adc
push
cs
add
xor
gs
or
push
lret
jo
jb
mov
orb
xchg
mov
inc
les
stos
das
add
lret
enter
or
orb
dec
movb
test
adc
cmpsb
daa
and
pop
pop
mov
imul
popfw
xor
roll
stos
or
inc
sub
xor
shl
pop
pushf
dec
ret
cwtl
pusha
js
and
push
ret
pusha
add
adcb
push
add
jmp
addb
mov
mov
lcall
rcrb
sar
push
jo
shll
decb
and
test
and
or
sahf
enter
pop
pop
push
mov
sub
add
jb
rorb
lcall
xor
sub
inc
or
call
pop
mov
sbb
sahf
icebp
adc
cs
jns
inc
insb
mov
imul
sbb
ss
scas
and
pop
push
dec
add
lock
test
add
ret
add
mov
shrl
mov
jbe
mov
or
cmp
lcall
xlat
clc
add
and
mov
rcll
andb
add
adc
and
mov
add
pusha
xlat
test
rolb
sbb
pop
pop
and
call
push
push
pop
adc
pop
insb
adc
popa
cmc
sub
jp
and
push
and
push
or
push
pop
lahf
test
ljmp
loope
lret
and
sub
lahf
sub
push
test
cli
mov
push
xchg
push
add
lret
xor
clc
dec
add
icebp
jmp
or
mov
or
inc
cmp
xchg
rorl
test
push
scas
adcb
xchg
sub
test
inc
mov
pop
das
test
psubb
nop
adc
sub
hlt
mov
cmp
push
xchg
ret
and
aaa
push
add
mov
mov
add
daa
or
pushf
jp
mov
mov
test
push
sbb
push
mov
js
call
inc
cmp
int3
mov
pop
adc
js
jb
cmp
rorb
inc
and
pop
ss
mov
and
imul
sbb
inc
cmpsb
or
dec
xchg
ret
mov
fadd
sub
jl
mov
adc
sbb
aad
xchg
add
push
subl
jbe
lods
cld
xor
push
and
adc
sub
ret
ret
inc
notl
and
enter
leave
aas
popf
push
aam
jp
sbb
pop
inc
add
push
lods
mov
or
mov
sub
sub
cli
push
add
xor
bound
pop
push
mov
mov
dec
cmp
shr
add
in
mov
mov
lret
fimuls
xchg
xor
xor
lods
mov
xchg
shl
inc
inc
jne
cmp
push
or
xchg
cmp
push
xlat
mov
or
sbb
mov
adc
inc
fs
push
xor
push
sti
ljmp
sti
push
mov
dec
adcl
outsb
test
sub
fwait
das
test
popf
pop
sub
rcrb
lret
xlat
or
loopne
int3
dec
add
xorb
sub
adc
sbb
sbb
je
adc
fstps
lcall
push
pop
rcrb
or
xchg
les
push
or
xor
mov
nop
dec
pusha
pusha
mov
mov
cmp
add
ds
xlat
shll
push
add
xor
and
sarb
cmp
xchg
or
into
mov
xlat
test
cmpb
ljmp
leave
xor
xor
lret
mov
imul
sbb
aam
xor
adc
adc
ret
out
jmp
push
xor
pop
sub
je
or
gs
add
xorl
ret
xor
add
or
sub
or
and
shl
ret
pop
and
mov
push
mov
push
call
adc
cmp
cmp
in
add
mov
jnp
push
pushf
sbb
inc
push
xchg
out
ret
clc
add
jecxz
mov
jmp
pop
adc
test
mov
jecxz
jl
or
adc
mov
mov
push
cmc
and
add
and
adc
out
inc
dec
adc
aas
int3
pop
mov
xor
add
jl
jle
fdivrp
or
push
sub
and
dec
jecxz
xor
add
fwait
mov
rorl
add
and
push
push
pop
test
cli
add
and
add
add
enter
arpl
sahf
jmp
push
jno
test
out
lret
je
add
jo
ds
into
les
cmpsl
adc
add
scas
or
in
or
js
or
loopne
dec
add
lret
mov
fsubs
jno
inc
not
xor
mov
inc
mov
faddl
or
and
ror
push
inc
shr
nop
or
inc
mov
imul
mov
sub
sbb
test
dec
enter
sti
xor
and
rcl
or
inc
subb
fs
dec
aam
bound
push
push
sbb
nop
out
pop
sbb
xchg
insb
dec
sub
andb
hlt
sub
mov
call
stc
mov
dec
or
jae
test
fidivs
add
into
cmp
ret
and
stos
mov
or
sub
dec
sub
scas
ja
xchg
ds
push
jp
ficoml
inc
mov
inc
out
incl
xor
cmpsb
push
push
push
addb
inc
lret
rolb
mov
xchg
aam
clc
push
mov
pusha
sbb
adc
js
movsb
push
sub
push
jnp
lods
or
mov
inc
pushf
add
or
push
js
mov
inc
bound
idivb
add
pop
mov
and
and
fs
sbb
xor
jl
xor
ficoms
andb
fs
or
aad
dec
push
lock
cs
lock
push
addr16
rcrb
mov
or
rolb
add
xor
fs
or
pop
fisttps
sub
lock
jo
psrlw
pop
in
pusha
cmp
je
pop
in
mov
add
shl
dec
cmp
shr
and
pop
pop
lock
and
inc
adcl
shlb
adc
or
push
pusha
dec
daa
or
jne
cmp
jno
adcb
mov
and
push
cmp
adc
sbb
add
cs
add
adc
fwait
pop
cmpsb
or
fs
inc
outsl
inc
adc
push
push
arpl
sbb
or
mov
push
push
sub
pop
cli
je
hlt
jg
sbb
lods
rolb
or
js
add
sub
in
push
cld
sbb
and
loopne
in
push
pushf
ja
pop
adc
adc
insb
fmuls
hlt
sub
jb
push
out
mov
adc
ljmp
pop
add
outsb
pop
repnz
add
and
and
dec
sbb
sbb
insb
inc
cmpsb
int3
nop
mov
xchg
rorb
sahf
cld
shlb
pop
mov
jl
div
rolb
sahf
add
je
cwtl
jnp
mov
add
rol
mov
hlt
cmp
sbb
jo
out
push
inc
lcall
cmp
inc
or
popf
or
or
adc
icebp
lea
xchg
push
push
sbb
pusha
add
xchg
or
xchg
fimuls
mov
ret
rorb
dec
jmp
dec
xorl
pop
mov
aam
xchg
add
adc
cmp
and
xor
jle
adc
jns
imul
pop
rcrl
ret
js
fsubrp
dec
fsub
lret
test
rol
hlt
xchg
add
rolb
mov
jne
mov
imul
aas
lods
shl
clc
adc
jg
add
loopne
popa
or
mov
push
dec
xchg
mov
jmp
dec
lret
test
daa
arpl
mov
stc
adc
add
jp
lret
cmp
cld
push
out
repnz
addb
or
xor
add
xchg
mov
mov
xor
leave
push
add
jb
cmp
rorb
ret
mov
mov
mov
and
sarb
pop
cmp
stos
and
rclb
mov
jmp
mov
pushf
aam
add
pop
fcompl
sarb
subl
inc
sbb
lret
js
push
adc
sub
push
dec
repnz
lods
pop
ds
leave
add
sub
push
adc
nop
adc
ficoms
mov
mov
jp
cmp
or
rolb
push
cmp
lods
arpl
add
ss
jp
xchg
cmc
test
sub
xchg
adc
rcrb
mov
mov
cmp
jmp
and
xchg
loopne
mov
xor
inc
rol
pop
lahf
sbb
pop
aad
add
push
inc
xor
or
pop
int3
adc
mov
and
das
or
add
addb
roll
pusha
jo
out
ret
movsb
les
push
inc
jmp
les
into
movb
outsl
xchg
or
daa
pop
adc
movsb
add
iret
dec
cmp
scas
rolb
and
inc
jmp
xchg
or
pop
mov
pusha
pop
sarb
out
lret
sbb
mov
into
js
pop
and
cmp
dec
popf
and
data16
add
cwtl
pusha
inc
out
stc
inc
popa
mov
jo
loope
and
cmpsb
sbb
rorb
cmp
inc
push
mov
or
popa
push
lea
les
jl
lods
xchg
inc
jb
adc
xor
or
outsb
in
push
xchg
adcl
or
rcll
ljmp
mov
add
pop
inc
pop
sbb
cli
hlt
dec
ljmp
push
call
idivb
imul
cmp
pusha
and
push
push
inc
jne
cmp
xor
adc
add
xchg
add
sub
jl
and
inc
pop
push
xor
sahf
push
or
cmp
lock
adc
pop
fsubp
adc
cmc
mov
pop
sbb
enter
mov
mov
mov
sbb
call
aas
mov
and
shll
mov
insl
mov
pop
ret
push
mov
sbb
adc
sub
sbb
and
lock
or
sbb
and
mov
leave
addb
subb
or
subl
lods
sub
sub
or
orl
dec
push
pop
add
shl
pop
xlat
jmp
add
jnp
and
adc
push
pop
insl
sub
gs
jle
popa
or
inc
aaa
incb
into
push
test
push
outsl
mov
or
loop
lret
in
dec
or
and
push
imul
add
fsubrl
jns
es
mov
lahf
xor
cmp
je
adc
xor
inc
ret
bound
cld
push
loop
xchg
mov
xchg
mov
mov
cmp
cmp
lock
rorb
sbb
clc
or
inc
jo
in
fidivrl
mov
out
nop
and
fs
test
aam
sub
lods
lods
insb
mov
imul
idivb
adc
dec
test
xchg
je
adc
pop
add
add
mov
jb
je
and
add
test
and
adc
imul
cmp
or
rcrl
push
mov
pop
add
inc
pusha
movsd
dec
xchg
inc
test
je
jns
outsl
mov
in
mov
lret
aam
call
insb
cwtl
loope
bound
inc
rorl
imul
adc
test
andb
mov
xchg
push
xchg
outsl
ljmp
pusha
mov
call
dec
add
pop
push
gs
ljmp
xor
or
movb
push
sub
popa
sub
fdivrs
fcomps
or
mov
rcl
inc
or
adc
stos
xlat
add
cmp
aas
sarb
or
mov
adc
or
or
mov
xchg
loope
xchg
jmp
pop
scas
rorb
in
imul
dec
lods
jno
adc
js
shl
sbb
stos
out
push
ljmp
mov
push
mov
ret
pop
sub
add
sbb
aaa
ds
mov
dec
xchg
push
notl
rorl
test
and
cmp
jno
pop
call
rorl
inc
js
and
loopne
add
popa
inc
lods
pop
push
add
cmp
scas
leave
shr
and
fdivrl
loop
ljmp
pop
and
fiaddl
bound
dec
fsubs
push
lahf
pop
mov
repnz
inc
sbb
sbb
xchg
sbb
pop
adc
adc
push
outsl
into
ficomps
xchg
outsl
inc
lea
adc
xor
jecxz
sbb
inc
les
ds
into
mov
cld
xchg
data16
ljmpw
mov
ds
dec
shrb
insb
xchg
pop
pushf
xor
aas
push
icebp
sbb
les
push
adc
mov
rorb
pop
cmp
lock
daa
or
mov
push
ret
cli
sbb
and
jb
push
addb
push
adc
popf
cs
sbbl
rclb
add
push
or
call
sub
add
scas
pop
js
jb
aaa
bound
adc
sbb
fnstcw
adc
xchg
scas
shl
fsub
clc
or
fidivs
adc
test
xor
nop
lcall
push
enter
pop
add
sarb
adc
clc
in
push
pop
push
and
addr16
pusha
data16
inc
loopne
scas
adc
addb
adc
and
cs
add
leave
xchg
pop
je
mov
mov
jp
adc
pop
adc
jge
xor
mov
dec
push
jno
mov
dec
inc
adc
nop
inc
or
push
shrb
dec
mov
or
outsb
stos
push
and
cli
adc
or
or
test
cmp
inc
sbb
xchg
vaddss
daa
ret
loopne
mov
dec
sbb
adc
add
clc
or
pop
adc
sbb
fcomps
ss
into
faddl
cltd
insb
cmp
pop
and
call
cmp
popa
push
add
xorb
push
dec
and
ret
cli
add
pop
xchg
jp
pop
add
mov
push
cs
or
cmpsb
push
xor
out
jl
or
cmp
pusha
rcrb
das
into
add
or
cltd
pop
icebp
shlb
add
dec
push
cs
push
dec
mov
subb
push
faddl
or
jp
lret
sbb
or
inc
adc
sub
jmp
clc
cmpsl
into
cmp
sbb
lods
into
adc
stos
addb
cmp
inc
loope
dec
ret
lock
add
out
or
push
in
bound
das
sub
fiaddl
sub
dec
or
cmpsb
js
ret
rcrb
inc
clc
addl
or
cli
mov
outsl
lods
sub
pop
xor
cmp
sbb
mov
lea
bound
movd
subl
sbb
and
out
data16
loop
call
add
jo
mov
jp
mov
xor
add
push
in
xchg
lods
add
iret
push
add
pop
cmpb
popa
lcall
cs
sbb
ror
rorb
les
cmpl
test
or
lods
dec
cs
pusha
mov
pop
repnz
movsb
js
push
mov
pop
mov
aas
push
mov
mov
push
and
add
rcll
mov
mov
push
push
scas
or
push
sbb
mov
js
fadds
push
mov
mov
mov
xorb
cmp
xor
sub
xchg
outsb
jp
or
rcrb
rcrl
jns
je
or
mov
sahf
xchg
dec
push
call
fdivrl
or
addr16
inc
lret
and
push
add
push
push
pop
mov
or
mov
mov
jl
inc
fcoms
adc
push
sub
pop
pushf
popa
or
mov
inc
or
and
dec
and
mov
jl
in
and
cli
test
andb
subl
xchg
out
and
cwtl
push
call
out
pushf
dec
lods
cmc
cltd
in
dec
inc
pop
xchg
adc
push
adc
leave
sbb
stc
mov
jno
sub
push
clc
or
xchg
hlt
or
add
cmp
add
rorb
fimull
push
inc
pop
sbb
imul
test
add
sub
push
push
mov
scas
dec
or
inc
adc
xor
push
outsb
insb
ds
clc
jb
lret
xlat
ret
rcrl
dec
mov
gs
dec
mov
pop
loopew
jo
push
nop
push
rclb
mov
dec
ret
clc
push
jle
insl
sub
sbb
ret
scas
sub
pop
jp
ret
sbb
or
push
adc
hlt
fsubr
jecxz
mov
or
roll
dec
xchg
sub
add
cmp
cmp
movsw
mov
enter
add
bound
in
je
mov
icebp
add
or
clc
cmpsl
adc
add
lock
add
loopne
loop
rcr
js
push
mov
pop
dec
push
push
incb
mov
cmpsl
jbe
and
aaa
jp
roll
ds
add
mov
push
mov
or
push
add
and
and
imul
aas
jno
xchg
leave
or
or
xchg
pop
or
add
push
nop
mov
adc
adc
adc
test
dec
sub
inc
xchg
xchg
jmp
mov
push
lods
data16
jb
xchg
movsb
mov
cmp
sbb
add
adc
inc
or
adc
pop
lds
js
sbb
cli
scas
jl
fcmove
mov
adc
pop
notl
push
xchg
ret
popa
jl
pop
insb
not
add
xor
sbb
push
clc
pop
jp
push
push
in
cmp
and
mov
mov
xchg
xchg
pusha
pop
or
jae
pop
jo
or
sbb
mov
mov
sub
mov
jo
subb
mov
rcrl
cmpsb
lea
pusha
jne
lret
sub
jno
dec
and
test
or
sbb
imul
jo
xchg
repnz
cli
into
xor
push
add
popa
cmp
mov
sbb
cmpsb
loope
insl
iret
sub
xchg
push
inc
or
pop
cmc
xor
ljmp
and
sub
sbb
dec
rolb
sbb
cmpsl
test
or
and
mov
bound
pop
sbb
mov
shll
repz
xor
add
adc
lea
sbb
sub
sbb
pop
inc
add
jp
dec
dec
push
add
test
inc
inc
jns
jb
ret
jecxz
sahf
xor
mov
in
ret
jnp
adc
mov
sbb
push
mov
xlat
and
push
sub
xor
cmc
hlt
sub
ja
and
ret
dec
or
gs
cmc
and
push
pop
cli
es
movsl
sbb
unpckhps
add
xor
popa
sub
cmp
pop
das
xchg
cs
test
loopne
xor
daa
mov
icebp
mov
add
mov
add
inc
adc
mov
or
or
inc
and
stos
adc
daa
pop
dec
adc
rorb
add
ficoml
inc
mov
aam
or
clc
push
pop
pop
sub
cs
jl
jecxz
push
ret
add
mov
ljmp
movsl
lock
adc
loopne
into
mov
jp
dec
lods
shrl
adc
call
ss
add
cmp
out
inc
or
fcomps
xchg
fnstcw
or
or
rclb
js
mov
lock
divb
in
pop
lret
adc
icebp
xor
sbb
decb
and
sbb
je
cmovl
or
cmp
mov
dec
sub
push
inc
iret
push
out
insb
je
imul
jp
mov
adcb
rorb
cmp
shll
or
pushf
push
loopne
mov
xchg
dec
cmp
mov
and
push
jp
add
adc
cmpsl
mov
mov
andb
xor
hlt
xor
callw
pop
pop
mov
ds
jo
push
push
scas
add
out
fldcw
adc
and
xchg
movb
dec
dec
loop
stos
pop
in
cmp
push
shlb
push
sub
inc
cmp
scas
pusha
push
sbb
enter
aam
stc
adc
mov
pop
sbb
inc
jg
ds
adcb
test
lock
lret
pop
popf
jns
ret
insl
cmp
inc
cmp
cltd
enter
jl
adc
or
push
repnz
sbb
xchg
icebp
fidivrl
lods
push
movlps
dec
cmp
pop
or
mov
gs
punpckldq
ss
ret
lret
ficomps
es
lods
arpl
sbb
add
xchg
or
or
out
jmp
push
push
xorb
mov
lock
sbb
sbb
sub
arpl
inc
sbb
xor
pop
dec
popf
inc
sbb
sbb
jo
out
fwait
xchg
jo
pusha
add
mov
lods
sub
jge
jp
icebp
mov
test
jmp
ds
xor
pop
xorb
dec
cmpb
lret
jmp
push
or
shlb
sub
mov
jb
ret
jmp
mov
jns
sbb
cld
stc
add
mov
je
mov
cmp
add
ror
cmpsb
add
les
dec
jns
les
rolb
mov
xor
add
push
push
aam
shlb
xchg
popa
push
shrb
pop
add
cmp
clc
dec
rcr
lock
dec
push
int3
js
call
movb
cmp
jg
insl
xor
sbb
or
lock
xchg
adc
adc
or
pop
xchg
js
xchg
push
test
lret
mov
int3
and
mov
sbb
loope
dec
mov
stos
dec
add
aam
add
push
pushf
push
addl
ret
sub
scas
clc
and
pop
test
pop
les
into
leave
add
mov
adc
lea
cwtl
and
and
mov
inc
sub
adc
or
sbb
cli
and
bound
mov
faddp
dec
or
sub
je
xor
dec
icebp
jae
cmpsb
xor
lods
xor
cmp
mov
cmpb
movsb
aas
and
movsl
sahf
sahf
add
mov
mov
pop
pop
ret
inc
rolb
addb
ret
lret
testb
adc
nop
adc
or
pop
cmpsb
pop
adc
cmp
pop
in
mov
stc
add
sbb
aad
or
xchg
mov
or
rol
push
test
adc
cltd
or
lock
jecxz
ljmp
ret
lret
push
add
loopne
loopne
stc
rclb
cwtl
subb
shrb
nop
push
xor
pop
add
jbe
es
ret
lret
mov
outsl
mov
mov
cmp
add
sbb
das
add
dec
rcrb
or
pop
push
mov
mov
or
mov
test
adc
leave
push
jb
jo
fs
rcll
dec
mov
xchg
sbb
mov
pop
imul
out
imul
test
or
sub
mov
cltd
mov
sub
add
in
aaa
ljmp
rolb
iret
ret
mov
jmp
outsl
adc
addr16
adc
fidivrl
push
in
or
add
push
cmpsb
add
cli
or
or
shlb
test
add
fs
or
cmp
mov
sub
jb
lods
and
push
dec
or
nop
dec
in
mov
test
loopne
ljmp
loope
dec
adc
clc
xchg
ret
rcrl
mov
lahf
rcrl
mov
cmc
aas
loopne
daa
shl
adcl
sbb
jecxz
loopne
and
adc
pusha
and
and
xlat
cmp
jo
cmp
imul
jno
mov
fucom
loop
loope
pop
lret
cli
mov
loope
in
sub
dec
xor
sbb
sub
inc
nop
mov
jge
lock
pop
xchg
add
and
add
push
adc
or
jo
clc
repnz
mov
cmp
es
es
cli
mov
sbb
int3
push
adc
mov
enter
add
jo
pop
ret
mov
inc
not
jp
loopne
jnp
push
imul
adc
movsl
leave
and
movsb
or
in
int3
sbb
das
bound
push
pop
dec
mov
fmulp
push
movsl
mov
dec
lods
repnz
dec
dec
ret
inc
sbb
lahf
or
loop
rcr
movsb
xor
pop
push
sti
ret
nop
jp
ret
jge
sub
xor
scas
or
sbb
loop
or
rcrb
cmp
imull
mov
add
dec
add
pop
pop
mov
mov
push
xor
xchg
enter
mov
add
mov
inc
loopne
int3
xchg
pop
cmp
ljmp
sub
sub
or
ds
roll
mov
inc
xchg
and
sbb
sbb
inc
and
push
out
adc
mov
sbb
push
sub
sbb
add
sbb
in
add
mov
dec
sub
fldenv
iret
add
add
mov
mul
sbb
mov
js
or
cltd
pop
sbb
sbb
mov
aad
mov
sub
sub
jnp
adc
rclb
pop
cmp
jno
add
call
and
fldl
shld
daa
lock
add
add
xchg
ficoms
inc
sbb
jo
or
push
xchg
xor
mov
out
sbb
lcall
shl
push
inc
jmp
jge
jmp
add
mov
jmp
xchg
xor
sarb
out
fxch
mov
inc
or
ds
and
fnstcw
int3
lea
testb
push
aam
cwtl
push
fs
in
push
mov
push
pop
and
mov
xchg
loopne
xchg
movb
scas
dec
jno
sarl
mov
jl,pn
add
loop
sbb
mov
mov
lock
inc
ljmp
inc
aaa
sarb
mov
jb
int3
or
pop
cmp
inc
popa
add
mov
push
xor
sahf
push
or
mov
xchg
mov
sbb
sbb
sub
les
cli
xchg
sahf
shl
pop
and
add
xlat
inc
inc
lods
movsb
imul
or
mov
lea
push
mov
imul
xchg
dec
add
push
mov
pusha
sbb
loopne
popf
rolb
inc
sahf
mov
cmp
cmc
mov
add
push
inc
jo
jne
shr
data16
push
xchg
mov
cmp
and
push
cmp
test
pusha
hlt
hlt
push
push
jns
xchg
in
mov
pop
adc
push
xchg
push
push
imul
movsl
ret
out
pop
mov
daa
ret
sbb
xchg
or
add
sbbb
rorb
add
cmp
rol
repnz
jne
or
or
push
dec
loop
je
cmp
lods
add
cmp
adc
add
mov
repz
adc
mov
sbb
inc
pop
push
loope
cs
iret
mov
sbb
jmp
sbb
jnp
mov
int
mov
stos
sahf
loope
adc
inc
add
js
arpl
ret
and
lock
or
dec
ss
scas
in
ljmp
cmp
inc
pop
pop
and
sbb
cmp
pop
or
xchg
or
add
or
sbb
loope
cmc
inc
inc
push
adc
nop
cmp
add
dec
movsl
or
enter
and
lds
adc
add
dec
rolb
cmp
pusha
aam
je
and
pop
push
add
out
mov
dec
bound
std
in
sub
movsb
out
sub
adc
mov
or
mov
cmpb
pop
lret
mov
inc
call
mov
and
orb
adc
js
scas
out
ja
nop
pop
repnz
loopne
jo
jl
add
push
jl
cmp
add
dec
inc
cmpsb
lret
or
jecxz
rclb
sub
cltd
adc
ljmp
dec
aad
mov
mov
popf
sbb
inc
pop
add
mov
cmc
in
adc
pushf
mov
xor
scas
lods
imul
int3
or
push
pop
int3
push
mov
ret
test
pusha
mov
dec
mov
ret
or
into
jno
xor
rol
sbb
lea
lock
scas
mov
push
imul
hlt
xchg
ret
scas
or
add
out
jbe
push
push
shlb
mov
lahf
add
cs
test
push
xchg
xor
nop
mov
aam
jmp
xor
adc
cmp
push
push
cmp
cltd
adc
rcrb
sub
into
dec
fs
negb
outsb
rorb
movsl
adc
movsb
mov
xchg
sbb
cmp
ret
adc
sbb
cmp
xchg
cli
add
push
pop
or
adc
add
jo
xchg
idivb
out
fdivrp
mov
xchg
xchg
mov
adc
or
xchg
scas
mov
dec
adc
es
pusha
add
sysret
mov
and
arpl
imul
shrl
subb
inc
call
ficomps
and
push
jecxz
and
add
inc
jo
pop
jmp
jo
xchg
adc
icebp
lods
addl
dec
popa
mov
ljmp
xchg
push
pop
repnz
imul
aam
cmpsb
ds
aam
loop
or
add
scas
dec
dec
movb
pop
push
pop
test
adc
out
mov
gs
rolb
mov
sub
mov
mov
cmp
cmp
mov
icebp
insl
loopne
push
add
mov
mov
push
stc
sbb
stos
loop
out
cmp
test
and
lods
mov
orb
daa
push
faddp
fs
test
mov
push
jo
jne
insl
loopne
xor
adc
xchg
xor
call
inc
xchg
push
ret
xchg
imul
popf
mov
pop
stos
fwait
mov
inc
or
sahf
loope
add
inc
int
test
pusha
or
and
cmpsb
in
push
cli
mov
outsl
hlt
loopne
icebp
xor
lods
adc
clc
xchg
sbb
jmp
pop
push
push
loop
fs
rcr
mov
mov
xchg
push
mov
movl
sbb
arpl
dec
and
sbb
and
test
das
cwtl
add
lret
adc
add
sbb
sub
dec
push
mov
sbb
jp
stos
test
fldcw
or
inc
and
dec
adc
lods
push
testb
pop
xchg
nop
mov
imul
pop
sub
inc
cltd
aam
addl
mov
add
cmp
adc
xor
loopne
add
push
dec
mov
cli
sub
js
test
or
push
nop
jb
or
fwait
xchg
and
push
adc
sahf
clc
gs
mulb
push
add
int
sahf
adc
mov
add
mov
aaa
pop
inc
sub
stos
shll
mov
dec
mov
orb
push
sbb
in
sbb
sub
inc
pop
popa
gs
stc
pop
imul
pop
ljmp
imul
loope
or
xor
or
or
xchg
push
add
push
dec
mov
mov
rorb
test
pop
ret
idivb
push
dec
pop
push
shrb
mov
sarb
ljmp
add
adc
lcall
out
xchg
roll
and
roll
ror
popf
test
xchg
fidivs
push
imul
rcl
mov
ljmp
call
sahf
lock
xchg
sub
jmp
mov
sbb
xor
gs
sub
pop
test
repz
add
sbb
push
or
cmp
push
lock
adc
fs
aaa
scas
mov
icebp
mov
xlat
test
ffree
pusha
sbb
movsb
xchg
jecxz
push
jl
xorb
add
cmp
adc
mov
and
int3
es
add
fs
inc
testl
cwtl
les
adc
and
add
and
clc
add
and
test
nop
loopne
mov
popa
popf
push
jo
lret
and
add
sbb
out
rorl
nop
daa
andb
mov
scas
mov
xchg
sbb
ret
andl
imul
data16
inc
andl
mov
lret
xor
sbb
or
inc
sub
es
sub
in
pop
mov
sbb
mov
je
inc
cmpsl
cmpsl
aad
fisttpl
add
lret
sbb
push
pop
xchg
push
inc
shl
test
jp
add
lock
lea
insb
sbb
roll
dec
adc
push
scas
lods
mov
or
aaa
int3
ljmp
xor
aas
xchg
jno
outsb
or
push
sub
push
mov
mov
mov
sub
mov
les
mov
mov
test
add
lahf
adc
push
push
sub
mov
lret
cmp
xchg
sbb
push
push
push
or
push
mov
rclb
inc
add
xchg
leave
js
aam
leave
dec
addb
or
in
push
and
cmc
movsl
dec
cmp
sub
andl
adc
push
cmp
inc
pop
adc
cmp
xlat
mov
jmp
loopne
lret
out
cs
push
jns,pn
cmc
mov
sub
and
push
stc
hlt
dec
xchg
hlt
sahf
adc
mov
shl
mov
sbb
or
or
jb
push
mov
pop
pop
mov
sbb
jp
and
out
push
add
or
les
sbb
xor
inc
mov
movl
ljmp
aaa
lock
and
sub
push
das
imul
dec
test
pop
data16
adc
insl
fmul
xor
jb
inc
leave
sbb
jg
inc
outsl
xbegin
jmp
addb
pop
shll
sbb
clc
psrlw
frstor
sbb
lcall
js
addl
sbb
loop
mov
dec
inc
fstpl
and
negb
sbb
sub
ret
dec
pop
sbb
sbb
loope
sbb
pop
jp
and
insl
mov
push
mov
mov
adc
lods
cli
dec
and
or
mov
arpl
inc
push
sbb
xor
xor
adc
sub
ds
sub
cld
dec
js
cli
adc
or
push
push
dec
mov
fs
in
fbstp
ficomps
jg
jl
ds
mov
mov
jo
push
dec
xchg
add
sbb
add
add
call
push
or
adc
push
addr16
adc
cs
roll
fdivs
push
outsl
or
inc
or
mov
lea
cmp
into
pop
add
push
sbb
addl
cmp
sub
rcr
pushf
andb
xor
stos
or
test
inc
mov
outsl
pop
xor
add
cmp
and
and
cmovno
es
adc
or
mov
add
js
test
repnz
rcrb
pop
adc
sahf
xor
cmp
sub
or
shlb
mov
orps
xchg
mov
pop
sbb
mov
popa
sub
jmp
sub
jo
arpl
rcr
insl
loope
pusha
mov
test
lods
ss
sub
rcrb
push
into
or
mov
mov
inc
xchg
stos
pop
jle
sarb
mov
leave
adc
push
or
shrl
cmp
jo
and
adc
adc
or
inc
imul
pushf
mov
xlat
jmp
mov
outsb
mov
xor
int
adc
into
cwtl
push
test
mov
dec
inc
je
fs
dec
fs
sbb
cmp
iret
mov
fmuls
add
roll
js
in
inc
xchg
inc
add
cmp
jns
clc
and
ret
mov
pop
stos
sbb
jl
jo
arpl
test
sbb
sbb
lahf
clc
aas
or
inc
add
mov
sti
inc
or
push
lea
mov
pop
sbb
arpl
shl
pop
push
arpl
fsubrs
pop
addr16
orb
xor
jns
adc
pop
dec
je
push
rclb
pushf
ds
out
mov
mov
loope
ss
mov
nop
push
adc
mov
cli
push
dec
bound
sbb
add
or
rcl
and
add
dec
rcl
mov
sbb
sbb
and
pop
inc
mov
inc
mov
orb
dec
fadd
mov
mov
popa
cmp
jl
ds
sbb
sbb
rdmsr
sbb
cs
gs
mov
fists
sbb
adcb
add
sub
add
push
rcrb
sete
or
pop
ret
loopne
push
shrb
xchg
in
xchg
rcrb
push
pop
xor
cmpsb
into
and
lods
push
or
dec
cvtps2pi
cli
inc
lahf
es
sti
movsl
push
xchg
cmp
pusha
adc
ret
add
pusha
mov
pop
mov
mov
cmpsb
rcll
imul
xchg
jp
or
push
clts
jecxz
les
sbb
in
ljmp
icebp
and
test
mov
mov
adc
ficoml
add
lods
out
add
xor
add
and
dec
sbb
inc
outsl
sbb
in
inc
pusha
or
pop
dec
dec
push
add
fsubs
sahf
outsb
fadd
mov
push
push
test
xchg
daa
xor
ret
add
inc
adc
and
loope
shl
movsl
adc
or
add
loope
nop
mov
shr
rol
fadd
ret
mov
test
inc
mov
rcll
into
ljmp
push
testl
in
pop
xchg
pop
add
nop
adc
push
dec
clc
test
stc
repnz
push
and
push
mov
cmp
mov
rol
sub
rolb
js
lret
mull
test
inc
jg
pop
xor
lea
adc
sbb
sbb
int3
or
inc
sbb
mov
jae
push
push
ljmp
dec
sbbl
in
push
icebp
sbb
dec
or
inc
fistpll
ljmp
pop
xchg
popa
js
add
popf
jbe
aam
in
or
shl
rcll
addb
or
xor
push
les
insl
mov
jne
jp
xor
and
or
inc
cld
ret
or
and
or
test
pop
pop
dec
pop
or
es
sub
and
xor
sub
leave
inc
push
dec
sub
mov
push
leave
jo
addl
ret
add
mov
mov
stc
push
in
or
xchg
stc
das
popa
adc
mov
sbb
inc
inc
loope
jns
je
sub
inc
or
stos
shll
add
cmp
jb
mov
dec
mov
xor
stc
xor
sbb
pop
inc
sub
popf
sbb
xor
sbb
dec
add
inc
sar
adc
push
fisttpll
add
sbb
push
int3
lea
loope
int3
in
cmp
roll
jecxz
adc
dec
cmpsl
cwtd
adc
lcall
shrl
jno
shr
dec
sub
push
pop
adc
add
cmp
push
sbb
sbb
jp
mov
into
movsl
shrb
popa
or
jmp
ret
pop
out
popa
add
rorl
test
pop
fwait
adc
cmp
test
mov
xchg
lock
negb
mov
or
test
fdivl
cmp
stc
sbb
mov
cmp
cwtl
hlt
data16
push
pop
push
push
add
jns
cltd
xor
inc
xor
mov
je
and
cwtl
inc
jnp
out
and
sbb
cltd
pusha
movb
inc
les
adc
ljmp
roll
and
movsl
test
ljmp
imul
hlt
loopne
in
add
fsubs
arpl
test
jne
xlat
mov
inc
js
mov
and
out
icebp
mov
repnz
flds
pop
loopne
xor
enter
push
rcl
ret
jns
aas
dec
fstl
loopne
jmp
repz
enter
ret
je
idivb
into
ljmp
idivb
pop
and
sbb
jo
or
xlat
stos
add
push
add
add
add
sarl
jge
mov
pop
aam
mov
and
test
jo
sub
shll
add
loop
dec
out
push
aas
loope
mov
push
add
js
pop
mov
add
mov
or
stos
and
ror
or
stos
mov
or
stos
pop
ret
and
mov
dec
push
nopl
ret
and
dec
sbb
or
push
popa
jecxz
dec
dec
and
add
mov
adc
or
add
dec
jae
out
push
lods
or
aad
sbb
push
jnp
loop
adc
mov
les
add
imul
je
jl
sbb
sbb
dec
dec
sub
mov
pop
pop
adc
add
orb
aaa
push
sbb
js
lret
mov
lock
cmp
push
adc
adc
cs
add
sub
inc
es
dec
sahf
cli
rclb
cmp
xchg
push
or
xchg
in
xor
xor
lahf
movb
call
pop
dec
mov
test
pop
loopne
push
loop
push
cmpsl
movsl
nop
jo
fcompl
cmp
je
pop
xchg
xchg
push
loopne
enter
test
inc
clc
sbb
dec
xor
adc
inc
push
adc
xor
xchg
mov
shll
inc
inc
shll
mov
adc
imul
adc
xor
pop
mov
cwtl
in
into
fldenv
or
cwtl
or
push
push
shrl
nop
push
cld
adc
roll
les
repnz
sub
enter
or
jb
ljmp
push
mov
movsl
incb
cs
add
fs
xor
xchg
dec
int3
sub
mov
push
cmp
and
and
inc
mov
test
pushf
test
lock
pop
inc
mov
rorl
dec
dec
rcll
dec
test
fwait
lea
pop
inc
jp
mov
mov
pusha
push
sub
test
pop
push
pop
dec
dec
pop
xor
adc
xor
dec
rcll
and
xor
or
icebp
cmovl
sbb
sbb
cmp
xchg
jb
jo
sbb
mov
jl
ror
dec
ljmp
shlb
ss
mov
and
push
mov
adc
mov
les
push
mov
add
testb
lock
and
call
fmuls
jb
aam
or
push
loop
or
ret
adc
jmp
xor
pop
sti
cmp
andl
push
fs
pop
js
ljmp
cli
sub
je
loope
inc
aam
or
inc
pop
dec
dec
orps
loop
xchg
rorb
mov
fsubrs
or
shl
pop
and
push
push
push
lret
pusha
mov
push
rorb
shll
cs
cmpb
ficoms
and
pop
jno
and
jp
test
clc
xchg
rclb
pop
lock
and
mov
mov
fnsave
sub
add
into
ljmp
lea
jo
mov
adc
or
push
and
adc
or
sahf
jns
cmp
pop
xchg
adc
dec
pop
adc
add
or
sub
and
outsb
lea
add
cmp
jb
pop
aaa
lret
mov
shlb
clc
mov
adc
mov
inc
sbb
sub
mov
adc
sub
adc
popa
out
xor
xchg
aad
jnp
mov
pop
pop
pop
pusha
sbb
cmovne
or
push
sbb
dec
and
xorb
cs
add
xor
shlb
outsl
adc
pushf
je
cli
xor
push
into
imul
sbb
outsb
or
xchg
and
call
mov
adc
pusha
inc
clc
adc
push
cmp
stc
jl
and
imul
popa
xchg
mov
bnd
aas
sarl
add
jo
add
pop
or
int
in
pop
into
fistps
or
dec
add
adc
pusha
pusha
insl
mov
stos
mov
shll
mov
test
sahf
test
testb
add
jl
pop
xchg
xlat
dec
pop
lret
lods
and
pushf
pusha
and
test
jno
ljmp
push
outsl
movsb
loop
and
rclb
pop
dec
test
xchg
xor
fcompl
sbb
add
popa
push
sbb
or
push
push
in
sbb
sahf
es
movsl
mov
or
xor
jg
pop
out
adc
add
lcall
adc
push
adc
add
cmp
mov
loop
into
or
dec
testl
xor
shrb
dec
sbb
add
or
lcall
or
xor
imul
and
xchg
jno
jg
xor
sbb
sub
insb
mov
outsl
loopne
iret
xor
adc
xchg
xorb
sub
sbb
add
cmpb
xor
pop
jo
loopne
xchg
mov
jp
nop
adc
test
cli
inc
mov
add
pushl
rol
fsubrs
mov
test
and
es
jmp
mov
shr
cli
mov
sbb
mov
adc
rolb
aad
inc
pop
xor
adc
or
xor
sahf
lret
dec
cmp
or
bound
movb
add
daa
and
xchg
les
movsb
adc
push
mov
mov
mov
cmp
mov
mov
incl
cwtl
das
pop
push
sub
adc
sti
cmpsb
mov
pop
repnz
xor
mov
mov
aam
xor
adc
shlb
sbb
add
push
dec
rorb
push
arpl
leave
mov
adc
mov
and
inc
mov
nop
add
jb
inc
dec
push
pusha
cmpsl
lcall
or
xor
call
sbb
and
insl
outsl
or
ficompl
xchg
add
jbe
add
clc
addb
sbb
out
pushf
adc
pop
and
add
sbb
mov
pushf
jno
sub
sbb
int3
incb
or
call
inc
dec
and
sar
sti
adc
scas
pusha
xor
les
and
push
add
loope
jbe
mov
addl
mov
arpl
popa
inc
mov
dec
push
test
push
adc
mov
test
add
jge
cli
cmp
mov
push
test
mov
fs
mov
hlt
sub
fdiv
clc
sbb
movsl
jne
mov
ret
xchg
mov
add
aam
sbb
push
add
cmp
cmp
and
adc
jns
stos
rol
in
mov
or
test
enter
xchg
repnz
scas
enter
arpl
dec
cltd
cwtl
enter
popf
push
or
sarl
loopne
push
imul
sti
cmpsb
pusha
jo
rcrl
push
xchg
add
mov
mov
rcrb
push
push
out
enter
or
ljmp
lods
mov
daa
or
bound
shrb
sbb
jge
dec
push
nop
mov
jg
sub
sar
pop
push
inc
pop
loopne
cmp
mov
je
cmc
sbb
movsb
imul
sbb
nop
sbb
mov
add
push
cmc
xchg
pusha
and
pop
je
mov
sbb
and
and
sub
into
dec
jns
lret
sbb
addl
xchg
fs
rol
sub
dec
inc
inc
int
lock
push
mov
pushf
add
imul
mov
addl
and
pop
lock
sub
push
loop
adc
mov
mov
lods
adc
loop
cmp
sahf
jl
aaa
mov
pop
adc
push
dec
popf
jo
or
and
dec
scas
push
call
in
and
cmp
or
or
mov
dec
pop
sub
sub
rolb
cmpsb
jmp
enter
xchg
jp
adc
testb
push
xor
mov
jo
insl
roll
add
xor
jge
and
adc
sbb
adc
fdivrs
add
xchg
or
cmp
cmp
xchg
pop
pop
subb
jmp
pop
mov
clc
add
aaa
idivb
arpl
int
or
test
gs
push
dec
sbb
mov
int
adc
into
mov
mov
pop
or
inc
and
mov
mov
mov
sub
mov
lock
enter
lea
inc
or
shlb
pop
inc
add
sub
cmpsl
xchg
push
movhps
les
add
lock
xlat
clc
in
das
adc
lock
lock
ljmp
cli
and
out
int
adc
subb
cs
or
cmpsb
jne
xor
cli
push
inc
dec
sar
das
sbb
mov
sub
jmp
push
mov
and
mov
and
adc
dec
add
mulps
pop
push
or
daa
mov
scas
xchg
sbb
aaa
dec
xor
mov
bound
ror
cwtl
lret
js
push
lds
dec
adcb
adc
rorb
test
add
inc
xchg
hlt
ret
out
sbb
fistl
push
jnp
add
js
daa
ret
mov
add
add
push
and
cmp
pop
lea
inc
mov
cwtl
jmp
sbb
xchg
mov
pop
sti
arpl
mov
mov
cli
cmp
dec
or
lock
xchg
push
fiadds
cmp
xor
xor
dec
movsb
push
roll
cmpsb
cmp
xchg
mov
mov
scas
push
lock
xchg
xchg
jo
adc
jb
sahf
pusha
mov
ss
adc
cmc
dec
cmp
testb
or
xor
lcall
add
inc
call
loope
orl
in
mov
mov
inc
lods
mov
lock
sub
pop
mov
enter
shll
inc
push
call
lock
push
ret
rorb
jb
rcrl
lock
pop
lods
inc
ret
data16
int
mov
add
test
in
outsb
jbe
sbb
stc
add
ja
mov
inc
les
test
or
ret
pcmpeqw
sbb
mov
and
jo
or
push
add
or
adc
dec
add
sbb
daa
xor
jne
cmp
jle
or
dec
xlat
jmp
clc
jmp
lret
adc
xchg
sahf
ds
dec
je
sahf
addr16
movsb
sub
or
xchg
arpl
test
pop
add
adc
add
inc
fimull
jnp
push
adc
add
loope
mov
ret
or
adc
mov
test
xchg
mov
mov
js
outsl
cmc
mov
hlt
and
cmc
pop
sub
inc
pop
repnz
lea
sub
push
adc
push
adc
data16
and
mov
push
push
ds
int
test
mov
inc
leave
ljmp
add
loopne
sbb
cmp
sub
mov
push
nop
es
sbb
in
clc
enter
pop
xchg
arpl
xor
lahf
into
pop
dec
ds
push
sarb
sbb
xor
sbb
and
dec
ss
mov
fsubl
dec
and
hlt
adc
loopne
add
push
dec
insb
sti
sub
mov
push
adc
mov
dec
test
lock
out
rcr
sub
and
dec
js
push
pop
fcompl
aaa
pop
sbb
or
dec
test
mov
xor
ljmp
lods
and
pusha
aad
add
add
xor
pop
and
mov
addb
or
and
push
mov
nop
loop
sbb
jb
pop
lret
mov
mov
jo
adc
push
adcl
dec
push
test
jge
adc
sub
rol
lods
xor
and
pop
or
lock
rolb
loop
dec
jno
enter
xchg
xchg
adc
xchg
call
or
test
inc
mov
popa
loope
into
lods
mov
xchg
andb
xchg
and
sub
mov
jb
clc
lret
les
and
pop
js
cmpsb
movsl
ja
push
push
icebp
daa
jmp
leave
adc
icebp
adc
jo
adcb
shll
cmp
insl
inc
mov
out
andl
push
sar
push
or
add
xlat
loopne
mov
cld
xchg
sarl
int
sbbb
push
pop
sti
out
mov
add
loope
dec
pusha
mov
cmp
push
inc
pop
ja
rorb
push
adc
add
fdivs
pushf
mov
lret
or
cmpsl
mov
sub
mov
and
sbb
push
shlb
rcrb
jo
rcrl
arpl
inc
ret
sbb
sbb
and
cmp
or
sarb
add
jp
icebp
sti
cwtl
test
aam
adc
bswap
in
push
test
js
sub
lock
loop
ljmp
loop
sti
adc
mov
fcoml
jmp
aam
hlt
add
and
mov
icebp
jecxz
nop
sbb
addl
xchg
sbb
vdivss
jge
xchg
push
add
mov
test
lds
test
add
rol
add
add
rcrb
push
mov
repz
adc
dec
adc
cld
mov
addr16
adc
test
aam
pop
icebp
insl
inc
mov
pusha
jge
or
movsl
stos
mov
and
or
lahf
xchg
and
cmp
or
andb
pop
pop
pop
add
and
test
cmp
sbb
cmp
rolb
or
adc
rclb
add
ljmp
sbb
mov
std
das
pop
loope
push
insb
sbb
xchg
lcall
sub
outsb
push
sbb
test
adc
sbb
rcr
jl
sbb
sbb
cmp
fsubs
sbb
in
imul
repz
sub
jecxz
test
xorl
mov
sbb
sub
mov
sbb
inc
rol
jl
jo
mov
jb
scas
or
arpl
roll
pop
adc
add
sbb
sbb
sbb
add
mov
cmpl
sarb
nop
fs
mov
push
pop
mov
add
fisubl
push
mov
adc
or
cmc
mov
cmp
dec
arpl
and
jb
jb
inc
dec
and
test
inc
dec
call
inc
les
test
pop
enter
push
movsb
ret
add
sbb
movsb
xorb
xchg
je
js
push
and
mov
popa
sbb
pop
mov
sarb
add
and
lea
shrb
inc
or
push
lock
sbb
movntps
lods
sbb
fistpll
cmpsl
push
inc
test
mov
dec
scas
and
dec
cli
and
insb
mov
stc
jecxz
mov
rol
mov
mov
push
rclb
sub
test
and
rcl
mov
imul
aam
lret
adc
mov
popf
rclb
bound
xchg
sub
js
cltd
ret
inc
add
xor
ret
sbb
je
mov
lods
jne
ficomps
bound
nop
inc
out
pop
jle
push
mov
mov
call
sbb
aam
dec
sbb
sahf
add
or
jmp
push
and
call
sub
and
jno
mov
sahf
ss
xchg
mov
je
add
dec
cwtl
adc
mov
sbb
or
fmuls
pop
xor
sbb
and
adc
and
adc
iret
push
push
inc
cmp
int
push
xchg
inc
call
outsl
ljmp
xchg
pop
shlb
mov
pop
push
sbb
ret
mov
inc
pushf
sahf
cmp
sti
mov
jecxz
add
mov
test
and
data16
jo
sbb
js
dec
pop
or
cmpl
and
enter
scas
xchg
test
hlt
dec
arpl
aaa
mov
mov
and
xor
or
insb
lahf
inc
sub
fs
or
sbb
mov
add
mov
inc
sbb
test
mov
popf
push
je
les
inc
add
cmpsb
push
inc
sbb
adc
dec
adc
mov
mov
shr
int3
push
pop
push
sub
int3
insb
das
adc
pop
and
pop
add
mov
sbb
int3
lds
rorb
fs
mov
mov
adc
dec
jp
into
jnp
ret
sbb
xor
loop
mov
or
notl
xor
sub
xor
dec
xchg
xchg
and
jo
cmpsl
lea
sub
enter
cli
inc
jl
insb
mov
ret
outsb
cltd
mov
insb
inc
xchg
adc
lret
fs
mov
rcl
push
push
loop
push
mov
mov
sub
adc
cmp
adc
in
add
nop
or
shll
daa
pop
in
xchg
add
add
adc
nop
shlb
cli
add
xor
mov
push
and
movsb
pop
adc
fsubs
lock
mov
pop
mov
add
lods
ror
push
lret
rcll
stos
mov
sbb
adc
xor
xor
or
add
addr16
ret
lcall
and
add
subl
sub
icebp
adcb
inc
repnz
mov
rorl
hlt
cmp
loopne
or
cmp
push
std
jo
cmp
adcl
push
cmp
sbb
xchg
add
fs
push
cmp
push
and
dec
xchg
pop
test
cli
add
or
jno
mov
cmc
aam
mov
dec
test
or
inc
mov
pop
mov
push
stc
push
outsb
std
js
rorb
mov
add
lock
add
and
add
adc
test
test
enter
test
sbb
cmpsb
fwait
jmp
mov
xchg
lea
mov
mov
pop
adc
adc
adc
push
clc
inc
cmp
push
call
jae
or
jecxz
and
lea
and
dec
or
lcall
add
cmc
lret
loope
add
rolb
xchg
jo
imul
inc
sbb
ret
inc
add
inc
push
sbb
movnti
xor
mov
cmp
js
mov
sbb
aas
scas
add
or
mov
icebp
pop
xor
jmp
fdivs
stos
push
aam
sbb
sbb
addl
mov
xor
test
dec
pop
and
add
pop
ret
jecxz
call
jmp
daa
lret
insl
add
sbb
cwtl
cld
je
gs
mov
and
cmp
and
push
cltd
dec
and
xchg
in
shrb
sub
cli
sarb
bound
adc
mov
mov
mov
dec
js
adcl
rcrb
push
stos
sarb
movsl
or
fcom
js
es
fimull
imul
pop
cld
sbb
les
movsl
cmp
sub
shlb
dec
inc
sbb
sbb
ja
pop
movsb
mov
mov
fs
inc
int3
pop
add
add
add
or
mov
nop
adc
sbb
ret
adc
sbb
es
pop
inc
scas
enter
dec
xorl
xor
add
dec
add
and
and
das
loope
mov
jbe
xchg
or
push
mov
je
xchg
or
add
stos
movlps
mov
cmc
leave
lock
jno
bound
or
inc
jge
decl
jp
sbb
jl
push
sbb
repz
inc
fadds
mov
pop
mov
into
push
adc
movsl
pop
push
mov
sbb
pusha
arpl
orb
lods
test
mov
in
cmpsl
icebp
mov
fadds
loopne
adc
mov
sub
or
dec
test
lock
in
pop
push
xchg
icebp
sarl
xlat
test
lret
cmp
jecxz
xchg
les
fcoml
mov
push
fidivs
xchg
lods
sub
gs
or
or
or
push
sbb
mov
mov
orb
hlt
pop
sub
pop
test
shrl
xchg
inc
mov
fisubs
jb
fistps
adcb
pusha
push
mov
push
or
or
or
dec
cmp
loop
js
ljmp
push
pushf
sbb
sbb
shlb
pop
lret
sbb
sbb
xor
or
and
and
push
cltd
jno
and
into
sbb
lods
mov
fs
xchg
push
pop
fldt
mov
sub
in
lock
sbb
mov
push
and
ss
push
dec
cs
test
adc
or
shlb
fwait
lret
add
lods
pusha
je
pop
fwait
pop
add
xchg
lret
cmp
jne
xor
sahf
sbb
sbb
enter
add
adc
pop
imul
leave
mov
aaa
clc
or
int3
popa
pop
and
inc
inc
sbb
mov
cmp
es
sbb
and
cmp
ljmp
cmp
xor
mov
add
jecxz
pop
imul
inc
outsl
add
punpcklwd
stos
add
adc
cmpsb
xchg
jo
adc
or
enter
add
mov
ljmp
test
xchg
dec
cmp
sbb
and
das
fmuls
inc
push
xchg
cld
or
nop
loope
cmp
mov
arpl
sbb
shr
js
in
pop
cmpsb
lret
xchg
shlb
cmp
mov
adc
shr
mov
xchg
stos
dec
adc
push
mov
out
std
adc
daa
dec
pop
adcb
ret
jge
add
into
jle
mov
ret
mov
sub
ja
xchg
or
dec
push
inc
and
xor
pop
and
adc
sbb
add
inc
xor
int
or
add
loope
mov
lahf
add
mov
pop
sbb
cs
push
stc
add
xor
inc
mov
mov
adc
adcl
enter
subl
lea
add
popf
sbb
aaa
mov
repnz
adc
mov
add
mov
cmp
mov
jmp
std
pop
fwait
jg
subb
sbb
pusha
and
jno
mov
add
mov
cmpsb
sub
mov
xchg
or
dec
in
push
push
add
or
lock
mov
jo
nop
xor
sbb
and
sub
xchg
add
sub
insb
adc
mov
jmp
add
sbb
mov
adc
sub
adc
adcb
or
pushf
insb
jmp
jne
and
or
xor
mov
aam
jb
sub
pushf
jbe
xor
mov
add
jl
leave
jae
pusha
popa
leave
mov
js
inc
sbb
pop
pop
or
cmp
loopnew
mov
out
pop
adc
jmp
mov
comiss
inc
ss
shlb
xchg
or
movsl
gs
rorb
dec
push
shll
push
mov
xor
mov
in
mov
mov
dec
test
pop
and
and
test
or
cmpsl
popa
stos
xor
outsl
enter
mov
add
jmp
xchg
mov
fimuls
pop
xor
adc
jecxz
mov
imulb
and
dec
or
adc
inc
js
insb
or
xor
es
sbb
xor
sbb
cmp
ret
xchg
pop
jmp
enter
les
sbb
sub
push
pop
js
jp
dec
sub
outsl
jl
int3
cmp
jbe
shll
xchg
jno
imul
add
out
mov
adc
ret
test
pop
lcall
bound
mov
dec
xlat
addb
sbb
mov
jge
sub
pop
les
or
dec
add
sub
test
test
mov
ret
pop
jle
sbb
inc
out
push
hlt
arpl
add
jle
popa
cmpb
sbb
addb
xchg
pop
lods
sbb
stos
or
fmull
push
or
rcll
dec
and
xchg
push
dec
int
roll
out
push
fwait
out
shrl
sub
inc
adc
adc
data16
je
or
sbb
mov
inc
xor
mov
mov
sub
mov
iret
mov
mov
stc
adc
push
sbb
lods
aam
jae
cmp
xchg
js
loopne,pt
jo
jl
adc
or
test
cmp
ja
xchg
repnz
and
inc
push
push
cs
adc
sbb
rclb
movsl
push
les
lock
sarl
adc
and
enter
cld
or
jne
pop
inc
roll
push
sahf
adc
sbb
mov
test
add
mov
cs
mov
pushf
push
dec
or
and
jne
je
add
xchg
sbb
mov
inc
clc
mov
inc
testb
ljmp
and
in
adc
rolb
cmp
jge
lock
jnp
pop
push
sub
decb
push
ret
pop
adc
arpl
movsb
scas
call
mov
push
dec
ss
and
adc
ret
enter
push
xchg
add
mov
jns
lret
sti
inc
pop
aas
movsb
adc
mov
sbb
je
fwait
nop
mov
adc
adc
lods
and
aam
in
sbb
adc
rolb
dec
sbb
or
ret
clc
sbb
mov
test
adc
add
dec
mov
xor
ret
pop
in
cmpsl
xor
and
adcb
lods
and
sbb
fnsave
or
xor
clc
sbb
inc
ret
mov
cmpsb
jns
leave
je
lock
mov
scas
and
pop
mov
and
xchg
and
sbb
cs
xor
inc
or
dec
xchg
cmp
sbb
add
inc
outsl
scas
sbb
sbb
xchg
dec
add
fsubs
mov
pushf
sbb
fadds
xor
enter
rorb
pop
mov
insl
call
push
test
push
sub
xchg
and
andl
js
dec
xor
push
dec
lret
push
push
enter
add
mov
rcl
pop
fadds
jp
sub
es
sbb
sub
sti
sub
dec
lret
pop
sbb
rcrl
nop
aaa
mov
xchg
inc
xlat
mov
add
mov
pop
test
arpl
push
sub
roll
sbb
imul
inc
dec
push
imul
out
insl
add
adc
adc
cli
or
in
pusha
nop
shll
push
inc
xchg
sbb
loopne
sbb
ror
sbb
sub
rclb
shl
dec
adc
loop
repz
int
int
push
js
fmull
aam
movsl
and
jl
and
repnz
shr
dec
cmp
cmp
dec
shrb
cmc
or
cmp
sub
or
rcrb
sub
es
sbb
jb
mov
sbb
leave
test
cmp
je
mov
push
jb
dec
mov
hlt
push
add
cmpsb
scas
sub
cmp
mov
hlt
cmc
insb
leave
add
inc
call
fwait
sbb
mov
insb
psubusb
push
lahf
rcrb
or
inc
pop
adc
dec
xor
xor
adc
cmpsb
adc
test
lods
push
xor
enter
test
cwtl
nop
inc
rorb
cli
adc
inc
clc
cmpsl
xchg
mov
in
mov
and
push
scas
shlb
add
lock
xor
push
dec
inc
add
pop
test
mov
in
addb
cmp
cmp
loop
leave
les
lcall
jo
xor
pop
or
sbb
test
hlt
and
nop
ret
insl
jl
cltd
xchg
add
xchg
nop
xor
push
pop
xchg
jmp
movsl
imul
cs
add
and
add
lds
stos
adc
pop
and
add
jbe
push
ss
data16
orb
mov
sahf
xor
sbb
test
cmp
xor
rclb
push
test
xlat
add
cmp
sub
push
mov
jo
dec
rclb
or
cmp
cmp
inc
sub
jns
inc
push
mov
rolb
xchg
add
inc
inc
jbe
iret
es
inc
scas
pushf
and
pop
js
pop
inc
sub
or
out
les
push
ret
adc
adc
insb
lock
dec
pop
add
cwtl
ret
push
adc
pop
xchg
or
cmp
push
pop
push
push
dec
fcmovnbe
rclb
and
inc
push
inc
test
mov
dec
rorl
push
jo
into
sbb
xchg
cmc
push
pop
pop
fdiv
cmp
icebp
lret
adc
push
mov
add
pusha
xor
jo
imul
fmuls
or
adc
jo
and
cs
jae
and
stos
adc
notb
addl
sub
cmp
cwtl
lea
inc
aam
movsb
xor
inc
mov
add
add
or
sar
adc
scas
adc
sub
jo
test
sbb
icebp
or
sbb
inc
insb
or
adc
mov
pusha
push
add
adc
arpl
adc
hlt
or
mov
pusha
ljmp
dec
jo
and
stc
push
imul
adc
sahf
mov
psrlw
roll
orb
sub
fsts
mov
mov
test
xchg
scas
inc
cmp
scas
pop
xchg
pop
pushf
mov
scas
jmp
jmp
xchg
addb
sub
xorl
hlt
loopne
cmp
js
xchg
loope
fcmovne
outsb
cmp
pushf
or
dec
les
mull
add
inc
iret
repnz
pop
mov
rclb
std
add
sub
lea
lock
pinsrw
mov
push
addb
sbb
adc
lcall
popa
lock
and
add
xchg
clc
cmc
scas
adc
fnstenv
lock
adc
adc
in
jecxz
cmp
int3
jmp
aam
mov
imul
sbb
adc
mov
push
pop
es
into
jo
xor
popa
sub
push
imul
dec
pop
test
lcall
mov
cwtl
mov
fiadds
sub
je
adc
inc
jle
cld
cli
mov
add
adc
cli
outsl
out
cmp
or
xor
and
lea
movsb
push
jle
push
js
mov
cmp
pop
adc
mov
addb
sub
add
adc
cmpps
scas
push
or
repnz
and
push
lahf
cli
dec
out
loope
adc
cwtl
test
test
mov
notb
int
fisubs
imul
out
cmpsb
sbb
data16
out
andb
into
xor
test
insb
inc
dec
push
jo
ret
sbb
test
dec
sarl
cmp
lahf
aam
shll
jbe
push
and
ret
pop
call
sarb
mov
rcrl
push
data16
cmpsb
push
xor
or
sbb
les
sub
or
sarb
icebp
dec
sbb
js
cmpsl
and
mov
fidivs
mov
fmul
inc
add
test
mov
icebp
sbb
and
mov
sub
push
xor
jne
push
js
mov
mov
or
add
or
cmc
xor
push
or
and
lods
xor
scas
movsb
leave
mov
mov
loopne
loopne
aad
les
jge
ja
add
rcll
ds
and
pop
jp
stc
prefetch
stos
mov
loopne
mov
xor
mov
outsl
sbb
icebp
inc
rclb
cmp
add
enter
inc
xchg
sub
jmp
repz
pop
shrb
lock
sbb
fdiv
mov
mov
and
sbb
dec
into
nop
loopne
inc
sbb
insb
cld
mov
add
pop
pop
mov
dec
adc
arpl
pop
cmp
xor
and
inc
push
out
add
mov
outsl
adc
cmpl
das
dec
xchg
nop
test
xchg
xchg
enter
adc
inc
inc
test
sub
adc
push
sub
scas
les
stos
loope
xorb
out
pop
jno
nop
fcoms
add
dec
pop
lock
pop
mov
adc
insl
or
or
sbb
sbbl
or
add
pop
adc
pop
dec
ljmp
icebp
cmp
js
insb
mov
dec
and
inc
ret
jmp
push
fsts
push
test
in
mov
arpl
fcomi
or
subb
add
sbb
repz
pushf
loope
gs
jo
sub
inc
cmp
jb
sbb
sbb
sbb
xor
adc
push
push
leave
or
inc
push
fwait
addb
addr16
ret
or
dec
sbb
jb
movsb
jno
lret
pop
pop
test
add
add
je
jp
sub
dec
pop
loope
cmp
sbb
push
pop
sbb
cmp
add
push
imul
and
insl
shl
push
loop
repnz
rol
and
inc
icebp
movsb
lahf
pop
inc
cmp
jmp
pop
pusha
mov
sub
pop
and
sbb
xchg
pop
adc
xor
pusha
mov
mov
adc
or
pop
in
jb
mov
lock
jb
add
addr16
add
repnz
inc
mov
mulb
or
shrb
inc
lock
xchg
sbb
cli
imul
xchg
pusha
and
leave
test
in
add
dec
or
lock
movsl
push
test
daa
pop
push
outsl
test
cmc
or
ds
shrb
clc
lcall
fcomps
rcrb
pop
cmp
or
xchg
cmpsl
ds
rcll
cmp
shrl
ficompl
sbb
negb
enter
add
inc
ret
sbb
stc
sbb
rcll
push
addl
das
add
loopne
jl
inc
call
adc
push
inc
shlb
mov
sub
xor
outsl
or
add
mov
add
test
mov
sub
cmp
aam
rolb
lea
lods
mov
arpl
cmp
cmp
das
lahf
add
jp
push
mov
or
add
and
dec
test
push
or
in
rorb
test
hlt
xchg
push
shlb
sub
fdiv
hlt
add
adc
push
test
test
xchg
cmp
sub
xchg
mov
cmp
xchg
push
jne
sbb
inc
xor
stos
or
mov
xchg
shll
fstps
data16
xor
jbe
ss
add
xor
bnd
lods
adc
test
imul
add
adc
inc
sub
orl
push
ljmp
jb
cwtl
cmp
add
dec
xor
and
xor
outsl
xchg
pop
test
sbb
inc
or
or
sbb
inc
and
pop
pop
add
xor
cmpxchg
dec
or
xchg
add
push
inc
scas
xchg
sub
rclb
sbb
mov
daa
dec
mov
addl
inc
and
jae
enter
xor
sti
cmp
sbb
add
xchg
pushf
lock
or
sbb
test
dec
pop
movb
sbb
xchg
pusha
aam
jle
shlb
cmc
dec
push
shll
mov
popa
test
xchg
mov
pop
jo
test
sbb
jae
xchg
inc
rclb
out
repnz
add
cli
call
push
ret
pmullw
push
fcmovnb
ljmp
pop
inc
loop
repnz
mov
rcr
dec
cmp
adc
mov
pop
jecxz
sub
test
dec
inc
arpl
lods
das
push
sub
nop
mov
cs
popf
mov
sub
xchg
mov
and
rcrl
outsb
les
mov
fdivrp
fwait
xchg
or
sbb
jo
lret
xor
push
or
js
adc
xchg
lods
data16
sub
inc
neg
lock
add
test
and
jb
fbstp
bound
cmp
and
adc
xor
mov
pop
xchg
cmp
sbb
mov
cmpsl
push
clc
and
testb
push
ret
add
loope
call
outsl
or
and
js
jbe
adc
adc
pop
pop
push
dec
js
xchg
hlt
push
lahf
xorb
scas
test
cs
gs
push
mov
jo
xor
icebp
xchg
pop
loopne
or
pop
pop
push
or
inc
pop
push
lret
xor
cmp
jecxz
adc
ror
cmpsl
adcb
or
jmp
xorb
push
push
sbb
adc
and
mov
sbb
rol
in
push
je
pop
rolb
adc
or
enter
sahf
gs
andb
inc
jecxz
add
and
or
ret
dec
enter
push
xor
jo
mov
jge
sbb
adc
lret
mov
pop
cmpsl
shlb
dec
aad
loopne
sub
adc
cmp
jmp
mov
in
push
mov
addr16
add
lret
xor
jl
js
add
push
sbb
aas
cmp
call
dec
int3
push
and
xchg
addr16
xor
mov
rclb
popa
ret
inc
loope
js
pop
sbb
cmp
out
addr16
pop
cmp
mov
pop
pop
inc
lahf
pop
pop
adc
sub
dec
lods
xor
inc
gs
add
or
xchg
cmp
mov
mov
or
jecxz
enter
in
hlt
in
cmpb
nop
sbb
jo
sbb
jne
add
xchg
sub
sahf
pop
sbb
into
sub
rclb
or
mov
popa
test
inc
dec
scas
rcrl
pop
dec
or
sub
ret
inc
adc
push
stos
xchg
test
add
inc
jmp
pop
lea
xchg
jae
lahf
pop
add
push
mov
adc
and
jecxz
pop
xchg
jb
lea
jp
dec
or
push
adc
xor
push
shrl
adc
jo
and
xchg
jp
mov
xchg
or
cld
cmpb
jg
push
inc
sbb
and
jae
mov
xchg
adc
rorb
jp
pusha
dec
ljmp
or
add
sbbb
ljmp
mov
leave
shl
ret
dec
lcall
push
bound
sbb
or
lea
add
gs
mov
sub
into
loopne
add
ret
test
dec
mov
or
scas
test
pusha
dec
lret
inc
lods
les
idivb
jb
or
mov
inc
rcll
mov
mov
cmp
add
adc
cmpsb
and
sbb
hlt
mov
and
into
lea
scas
add
xchg
push
rcll
or
lods
inc
rcll
xor
sbb
cmp
fadds
popa
pusha
xchg
pop
add
mov
lea
sbb
rcll
cmp
rolb
inc
bound
pushf
cmp
mov
add
cmp
add
push
adc
repnz
pusha
mov
push
xor
and
dec
inc
lods
xchg
dec
lret
or
sub
push
popa
jne
adc
and
jmp
imul
aam
jbe
out
xchg
sbbb
xchg
cwtl
push
add
aas
xor
sub
dec
mov
pop
mov
pusha
ret
into
sub
fcompl
cld
into
or
bound
stos
xor
mov
xchg
movhps
cmp
adc
popl
sarl
mov
jno
inc
and
stc
adc
pop
lds
pusha
and
push
inc
xorl
mov
xchg
or
stc
add
inc
adcb
inc
cmp
sbb
rcrl
js
scas
stc
and
jne
fdivl
sub
pop
add
out
repz
pop
testb
rcrl
imul
xchg
inc
aam
xchg
dec
mov
jle
ret
or
arpl
adc
rcl
adc
imul
xchg
and
out
xchg
hlt
xchg
rolb
adc
mov
xchg
mov
cli
dec
imul
add
or
jecxz
cmp
aam
and
or
pushf
jmp
mov
loope
and
dec
sahf
test
add
decl
je
icebp
les
or
rolb
pop
add
outsl
cmp
cltd
xor
add
or
mov
ljmp
xchg
sarb
inc
sbb
test
sub
scas
mov
mov
or
add
or
push
js
lock
mov
dec
notb
inc
cmp
push
cmp
pushf
sub
mov
cld
add
test
out
sbb
pushf
mov
xorb
bound
push
ret
adc
test
cli
push
aaa
cli
sbb
aam
cmpsb
or
or
or
pop
pop
dec
hlt
out
add
hlt
mov
or
stos
rcl
test
cmp
andl
push
test
daa
pop
cmp
push
inc
add
mov
add
cli
dec
fcompl
or
fistps
mov
popa
xchg
sbb
out
xchg
arpl
sbb
lods
insb
or
sbb
inc
mov
xor
push
push
jbe
push
mov
in
push
aas
inc
bound
cmp
push
cmp
movsl
mov
push
add
inc
push
inc
rcrb
inc
pop
aam
enter
adc
xchg
push
xor
shrb
lret
sub
shll
xchg
push
inc
push
cmp
addb
nop
inc
aam
sahf
mov
pop
int3
add
cmc
mov
sbb
rcll
xor
daa
jge
clc
rorb
dec
add
dec
les
adc
dec
xor
dec
add
lcall
pop
rep
stc
and
add
add
inc
inc
arpl
lahf
mov
mov
shld
mov
or
mov
cmp
or
lret
or
and
shrb
xchg
movsb
pop
sahf
jns
sub
enter
sbb
mov
lds
into
sub
mov
push
or
shll
jl
shll
xchg
push
call
idivb
push
dec
mov
xor
mov
shr
pop
rclb
mov
enter
inc
push
pop
add
adc
arpl
sub
push
and
adc
add
repz
mov
rolb
sbb
lds
les
sti
push
rcrb
mov
sbb
push
jb
mov
inc
xor
add
lds
mov
sbb
sub
or
add
adc
add
cmp
adc
cwtl
mov
xchg
mov
fwait
sub
sub
add
sbb
mov
movsb
nop/reserved
pop
sub
push
pop
mov
and
out
xchg
jp
add
inc
loopne
loopne
fsubrs
loopne
popa
cld
out
sub
push
push
xlat
clc
rcr
shrb
rolb
push
jne
sbb
fnstenv
flds
pushf
push
inc
lahf
int3
push
lret
out
adc
inc
pusha
pop
mov
add
sub
jae
mov
add
mov
add
mov
mov
cs
inc
sbb
jl
or
mov
lds
mov
jecxz
pop
mov
cltd
icebp
mov
sub
push
push
push
dec
adc
nop
add
xchg
dec
sbb
aam
push
push
adcb
fadds
loop
arpl
test
out
pop
adc
and
rolb
lock
push
and
sub
add
rclb
out
pop
xchg
lcall
sets
scas
xor
sub
es
add
push
fmull
sbb
mov
rcll
stc
add
andl
xlat
pusha
or
or
je
pusha
dec
lds
out
std
adc
fsubrs
test
inc
jo
insb
adc
test
or
pop
popf
jmp
jnp
test
inc
pop
mov
and
addb
adc
jl
add
nop
or
sbb
lds
test
pop
add
pop
outsl
sbb
loop
xchg
xor
jmp
pop
cmp
sub
xor
sub
adc
mov
pusha
je
add
mov
loopne
mov
and
das
push
push
push
xchg
call
addb
inc
pop
pop
imul
stos
rcl
mov
fsubs
ret
rorb
dec
stos
dec
push
sub
add
pop
add
add
push
icebp
or
sub
add
inc
adc
popf
cli
jnp
and
or
add
jns
and
aad
mov
adc
inc
cmp
add
and
push
fwait
shll
icebp
mov
into
rcrb
rcrb
aaa
lock
lret
dec
pop
or
stos
popa
cwtl
and
add
xchg
loopne
pop
cmp
les
or
fiadds
or
rol
and
and
push
add
adcb
test
add
call
shl
adc
inc
pop
push
rcrb
psrad
shll
ss
pop
cs
jo
sbb
fs
add
push
test
addb
add
popa
imul
loop
arpl
mov
call
xor
inc
and
jmp
nop
xor
cs
sbb
lock
or
ret
fdivs
inc
imul
sub
popf
ds
or
adc
jp
xchg
arpl
lods
inc
or
cmp
mov
push
adc
mov
lcall
das
rcrb
mov
push
ret
adc
cmpsb
movsb
xor
push
sub
dec
cltd
in
icebp
loope
sub
push
sbb
push
push
inc
outsb
loope
call
xor
dec
or
xchg
and
enter
lock
shlb
cmp
lcall
xchg
mov
push
or
fmuls
pop
dec
jae
sarl
repnz
xchg
popl
pusha
and
adc
imul
aad
popf
pop
or
out
push
pop
add
xorl
sbb
xchg
jp
or
insb
sub
push
loope
mov
std
inc
inc
cmp
push
push
push
push
push
sbb
xor
rclb
ret
mov
lock
add
ljmp
pop
or
and
ss
and
test
adc
jnp
mov
insl
mov
add
movsb
sarb
gs
addr16
mov
arpl
sub
rcrb
out
setbe
loopne
inc
mov
outsb
in
pop
or
cld
fs
xchg
pusha
and
js
dec
lea
faddp
and
mov
stc
jle
or
dec
bound
pop
das
pop
int
sbb
xchg
fwait
sub
pop
adc
jp
inc
push
or
xchg
sbb
push
jb
cmp
mov
adc
ficompl
add
fstpl
mov
pop
xchg
or
popa
inc
dec
rolb
push
mov
mov
push
mov
shl
jmp
ds
and
or
or
or
das
lods
ds
test
das
popa
or
or
cmpsl
test
ret
sbb
pop
inc
mov
ror
lea
add
mov
mov
in
mov
rol
or
xchg
adc
jl
shrl
pop
cmc
adc
or
pop
clc
xchg
mov
aam
mov
fmuls
testl
or
sub
sahf
mov
stos
jno
sub
mov
es
clc
inc
popf
fs
cmp
stc
adc
mov
inc
mov
push
js
or
xor
xchg
scas
mov
sub
dec
insl
xor
pop
xchg
lahf
out
add
dec
jbe
int3
cmp
lods
mov
mov
pusha
cld
lea
cmp
sub
mov
pop
out
pop
das
stos
sti
aas
sbb
sbb
sub
push
mov
add
psubb
pop
push
rorb
ds
mov
psllw
lret
add
add
push
jp
je
mov
mov
popa
imul
ljmp
add
lea
dec
push
sbb
mov
int3
fists
aas
dec
stos
test
clc
sbb
loopne
jb
lcall
lock
add
fucomi
lea
add
sbbl
les
lods
das
call
xchg
shll
or
push
inc
adc
push
add
sub
loope
xchg
mov
jmp
dec
dec
cmc
frstor
stos
pop
mov
sub
xchg
pop
es
movsb
lock
fldcw
test
repnz
nop
pop
lcall
lcall
ljmp
or
sarb
dec
adc
f2xm1
sarb
add
mov
xor
pusha
jo
push
insb
test
test
pop
add
add
fildll
add
xor
lea
mov
pop
xchg
adc
ds
add
pop
mov
pop
jp
inc
dec
adc
and
add
ret
add
pop
call
fcomip
sbb
jecxz
inc
std
add
adc
jle
mov
ss
jge
in
lock
adc
cmpsb
inc
adc
mov
add
xor
punpckhdq
push
add
mov
push
ds
rorb
add
orb
xchg
dec
and
nop
je
shlb
add
jo
call
adc
dec
cmpsl
adc
sbb
pop
inc
loopne
fwait
mov
and
adc
inc
adc
das
enter
xor
cmovo
adcl
mov
push
aam
sub
or
mov
daa
mov
add
rol
sahf
lea
je
lock
xchg
addl
cmp
in
add
out
lods
pop
cli
or
push
mov
dec
out
cmp
xor
mov
inc
xchg
inc
sbb
or
cli
out
adc
fisubrs
mov
sbb
push
cmp
fmuls
daa
xor
nop
mov
or
xor
movsb
add
jnp
pop
dec
xchg
mov
sbb
xor
aam
dec
insb
pop
pop
icebp
jo
test
sbb
cmp
and
outsb
cmp
mov
ds
xchg
je
xchg
adc
mov
fwait
inc
sbb
stos
and
adc
pop
adc
rclb
ret
xchg
pop
cmova
movsb
loop
loopne
popa
and
push
leave
mov
or
inc
mov
loopne
adc
dec
lret
or
idiv
jl
movsb
cmp
mov
ret
adc
push
test
clc
fisttpll
lea
sti
jo
test
int3
sbb
mov
icebp
adc
sbb
and
xchg
cmp
push
les
in
xchg
aam
xor
jnp
sub
aam
mov
mov
hlt
and
mov
call
adc
xor
pop
lret
shll
xchg
lea
call
mov
add
jb
add
mov
in
or
mulb
cmc
mov
mov
xor
cmpsl
mov
adc
mov
test
or
sbb
or
mov
mov
mov
cmp
jne
add
dec
push
pop
mov
add
enter
lods
leave
mov
addb
add
jmp
add
xor
add
xor
fcoml
push
push
add
mov
dec
push
roll
sub
inc
sub
or
popa
mov
push
mov
fstl
push
or
arpl
mov
cmpb
push
push
lock
push
popl
pop
rcrb
js
adc
sub
call
push
test
xorb
xor
adc
aaa
xchg
ror
push
jo
out
mov
data16
xchg
xor
inc
es
inc
fmuls
or
addb
dec
dec
sub
adc
dec
bound
mov
and
dec
lret
push
mov
jb
add
push
pop
fimuls
aam
jl
lret
adc
call
pop
clc
add
repz
push
xor
nopl
push
jle
inc
addb
pop
or
jo
sub
cmp
mov
and
dec
xchg
pusha
dec
je
pusha
outsl
insb
cmp
pop
in
adc
filds
adc
add
cmp
rcrb
mov
mov
das
addr16
dec
pop
inc
test
sub
push
psllw
lret
sub
push
mov
xchg
and
jb
push
rolb
adc
dec
mov
mov
sbb
or
loope
mov
lock
dec
loopne
push
jo
push
jo
sahf
adcb
ret
add
fwait
dec
jge
js
out
movlhps
pop
or
push
xchg
mov
xor
in
je
popf
addb
push
loop
lock
js
cmp
or
xor
xor
jb
adc
add
aam
lods
rcrl
loopne
adcb
add
pop
pop
hlt
pop
aad
ficomps
xor
add
ret
add
or
jecxz
leave
fcomip
add
rcrb
adc
mov
lock
mov
adc
je
mov
enter
mov
inc
push
adc
add
cmovle
or
mov
or
sub
testl
mov
or
adc
iret
add
movsb
push
mov
inc
dec
dec
push
xchg
jle
test
push
xchg
push
xchg
mov
setbe
lret
cmp
clc
sbb
sti
jo
jo
jmp
clc
loope
mov
mov
shrb
lock
lcall
inc
dec
clc
pop
and
movsl
ds
xor
ret
js
push
push
les
dec
iret
adc
cwtl
xchg
scas
out
daa
xor
pop
pop
shlb
push
rclb
inc
fbld
push
and
in
jmp
or
inc
mov
lret
orl
and
cli
addb
imul
test
sub
jo
mov
scas
and
cmp
jl
adc
pcmpeqd
pop
dec
xor
inc
inc
and
xlat
test
adc
sbb
inc
andb
hlt
sub
mov
pop
adc
jns
mov
sub
sbb
lods
xchg
shlb
stos
sbb
into
push
sub
dec
cmp
adc
and
mov
jg
push
sub
xor
scas
lcall
aad
loop
jecxz
jl
pop
ret
lret
add
imul
loopne
fs
in
loope
fiadds
cmpsl
test
sub
cmc
orb
jmp
or
mov
mov
mov
aas
ret
pop
test
dec
xchg
cmc
add
and
push
and
es
mov
cmp
mov
add
test
or
inc
mov
mov
bound
pop
add
xchg
or
xor
push
es
loope
add
mov
loopne
cs
rorl
in
mov
jmp
mov
or
adc
daa
push
mov
lock
add
call
push
push
rcll
push
in
push
push
fidivs
lret
or
rclb
mov
mov
pusha
sarb
gs
xcrypt-ofb
cmpsl
outsl
test
sarl
mov
sub
rcrl
adc
mov
xchg
xchg
aaa
mov
insl
lret
aad
cmp
leave
push
push
sbb
xchg
mov
dec
rolb
lods
iret
mov
or
add
sub
sbb
scas
cs
aad
arpl
xchg
setp
or
adc
push
ljmp
xorb
mov
out
add
mov
pusha
dec
lret
sub
sbb
sub
outsb
xchg
xor
jno
sub
ljmp
mov
mov
sahf
inc
popa
gs
fsubs
sub
loopne
jae
or
mov
adc
mov
ror
rorl
ret
and
es
or
adcb
jl
cmp
aam
sbb
arpl
mov
daa
addl
sub
cmp
loopne
or
xchg
ss
or
push
mov
into
leave
jo
cmp
inc
negb
pop
addl
test
push
jle
repnz
ss
sbb
pop
cmp
jo
inc
sbb
push
dec
or
out
dec
and
dec
adcl
adc
xor
fldcw
add
js
loopne
add
std
nop
push
rcl
fidivs
ret
lods
push
mov
and
mov
xor
pop
pop
dec
cli
lret
pop
sbb
cwtl
outsb
push
pushf
lret
adc
popa
pop
cmp
in
sbb
shlb
and
adc
loopne
adc
adc
cltd
pop
or
xor
scas
daa
lods
ret
jmp
push
aas
xor
push
xchg
xchg
jne
cmp
adc
mov
adcl
ret
addb
out
add
je
or
jmp
pop
xor
dec
shl
loop
adc
les
cmp
or
push
inc
xor
or
dec
mov
mov
jb
loop
imul
jp
mov
cmp
pop
and
mov
sbb
and
test
add
cmp
sub
fmuls
mov
sbb
sbbl
addr16
inc
aaa
sub
mov
int3
movsb
imul
mov
or
xor
clc
pop
mov
ds
pop
add
mov
add
addl
je
adc
or
mov
sbb
add
adc
dec
inc
ret
fcoms
pop
xor
inc
pop
jae
cmp
outsb
imulb
sbb
test
imul
jns
pop
push
mov
dec
out
push
pop
dec
wbinvd
inc
dec
xchg
addb
repnz
sub
adc
jmp
push
and
rorl
mov
mov
jne
mull
sub
pusha
or
jb
sbb
test
pop
shll
or
aam
xor
cltd
into
cwtl
inc
cmp
xor
jp
sbb
pop
fcomi
xor
cmp
sub
or
ret
test
sbb
shrl
arpl
cwtl
rcll
mov
rolb
pusha
cmp
stc
mov
xchg
bound
sub
sbb
jp
add
sub
add
dec
leave
add
test
test
xchg
or
add
test
sbb
pop
sbb
ljmp
inc
push
or
lods
icebp
prefetch
add
xchg
inc
pop
cmpsl
imul
mov
add
push
daa
mov
mov
dec
or
into
adc
negb
sbb
sbb
xor
push
call
xlat
xor
test
rcll
cld
shlb
mov
mov
jmp
push
leave
and
sub
add
jmp
and
inc
in
aaa
mov
push
xor
inc
addb
push
sbb
out
shlb
push
in
int3
sbb
adc
dec
pop
cmp
sub
rclb
sbb
mov
sub
push
icebp
push
sub
jmp
xor
fnsave
add
sbb
cmp
jecxz
and
adc
shlb
adc
xchg
outsb
hlt
xchg
loopne
fsub
push
xchg
pusha
popa
xor
ret
mov
shr
dec
ljmp
les
aam
ss
ss
or
inc
sub
popf
movsl
sub
add
inc
cmp
enter
push
mov
cmp
xor
xchg
mov
aaa
lds
popa
and
sub
filds
add
stos
adc
adc
add
cs
push
sub
sbb
mov
inc
sarb
mov
cmp
add
outsb
popf
xor
add
xor
xchg
inc
pop
add
mov
mov
mov
scas
xchg
cmpsl
jo
in
clc
inc
jmp
mov
shlb
iret
cmp
lock
xchg
pop
ret
mov
push
inc
inc
rclb
xor
je
ffreep
add
add
xor
add
fbld
pushf
sbb
clc
sub
std
jne
pop
lods
and
lock
je
roll
popf
and
les
push
fistps
push
aam
inc
xchg
jp
or
mov
scas
sahf
js
cmp
insl
sub
pushf
ss
push
jbe
push
es
ljmp
adc
add
push
pop
inc
mov
cltd
fidivrl
jb
xchg
xchg
aas
cmp
adc
and
push
inc
sbb
pop
xchg
push
rcr
lock
rcll
xchg
xor
dec
adc
adc
inc
repz
in
push
add
out
adc
and
sub
test
aad
or
in
sbb
mov
xor
div
push
push
mov
add
scas
stc
push
das
xor
pop
les
enter
xchg
mov
push
add
and
scas
js
enter
mov
cmp
lea
sbb
xchg
xchg
popa
aam
repnz
xor
cs
xchg
shlb
mov
gs
ret
mov
pop
pop
xchg
adc
dec
pop
add
jmp
inc
push
or
in
pop
adc
out
cltd
dec
add
add
sbb
leave
push
movsb
mov
add
mov
imul
dec
sbb
dec
add
pop
adc
cwtl
sbb
addb
or
sub
adc
shl
mov
mov
mov
inc
shr
int3
or
inc
das
inc
enter
and
repnz
lock
lods
mov
xorl
fwait
lock
rcl
sarb
fs
fmul
xor
dec
mov
mov
sbb
or
imul
cmpsl
sub
aas
into
adc
ficoms
sbb
aam
out
lods
stos
nop
add
loope
lea
pusha
or
and
mov
daa
shll
or
inc
mov
push
jp
pop
cld
xor
jmp
mov
and
out
xchg
je
arpl
dec
pop
subl
repnz
and
mov
add
dec
in
sub
adc
dec
xor
xchg
add
pop
cmp
es
sbb
fldl
popa
pusha
lcall
out
and
jbe
xor
lock
ljmp
ret
lahf
mov
lea
push
push
ret
mov
mov
sahf
into
xor
mov
mov
les
loopne
adc
mov
jmp
rcrb
js
pop
add
sbb
cmp
jmp
or
cmc
jp
nop
xlat
add
scas
inc
sub
cmc
mov
mov
test
adc
push
sti
out
ljmp
clc
mov
jae
push
clc
pop
sub
adc
and
cmp
dec
test
xchg
add
in
dec
jecxz
movsb
sbbl
jmp
add
or
add
add
add
or
arpl
das
sbb
adc
daa
faddl
int3
fucomip
xchg
push
xchg
lods
jo
fstp
mov
add
rorb
aaa
js
sub
hlt
andl
std
shlb
loope
xchg
lahf
dec
add
test
pop
pop
jne
lds
lods
dec
ret
inc
ljmp
xchg
cs
and
in
mov
sbb
aad
mov
xchg
or
ds
xor
rorb
rorl
jp
push
cmp
dec
fs
cld
divb
and
sub
scas
sti
or
aas
shr
leave
ja
je
out
fadds
or
out
mov
jns
idivb
popa
pop
push
mov
push
pop
imul
shll
pop
imul
jp
lock
or
xchg
add
jg
mov
cli
push
pushf
or
add
call
add
sbb
dec
or
or
adc
loop
mov
inc
in
xchg
inc
push
enter
or
and
inc
adc
inc
inc
mov
mov
and
test
ja
lods
xor
and
dec
pop
xor
out
xor
shl
pop
jl
pop
push
xchg
xor
ss
sub
sbb
jns
rcr
movb
add
pop
popf
test
dec
mov
or
xchg
int3
shlb
out
shr
and
jbe
pop
mov
nop
add
xor
lcall
jns
lea
pop
les
inc
stc
and
movsl
mov
push
adc
loop
pusha
push
int3
dec
rorb
ljmp
dec
faddp
cmp
mov
or
repnz
and
inc
add
mov
sbb
nop
movsb
push
push
lods
pop
or
popf
inc
outsl
inc
scas
or
into
fdivs
push
xchg
xor
push
leave
and
bound
loopne
sarl
add
in
ret
adc
xchg
add
sbb
aaa
mov
add
xor
and
add
out
pop
lret
push
sub
sub
into
cmpsb
or
stos
mov
sub
xchg
mov
xor
shrb
mov
push
jbe
add
adc
dec
push
wrmsr
rcll
xchg
hlt
inc
jmp
mov
mov
mov
xchg
jno
lret
and
sbb
movsl
arpl
dec
sub
loopne
addb
fldt
bound
pushf
outsl
or
loope
pop
jbe
xlat
sbb
js
xor
leave
lods
das
sbb
fldcw
addb
push
loop
inc
aas
sub
fmuls
xchg
push
pop
js
leave
sbb
adc
movsl
rorb
cmpsl
push
mov
xor
repnz
test
jle
inc
mov
fwait
push
jecxz
and
sbb
sbbb
ret
xor
jns
xchg
and
pop
dec
add
adc
dec
adc
add
sub
aaa
sbb
cmpsl
in
aaa
mov
scas
cmp
add
adcl
adc
movhps
jb
sbb
cmp
inc
sub
cltd
js
cmc
mov
inc
mov
mov
aam
out
dec
jg
push
add
mov
cmp
sti
push
jmp
dec
add
xor
xchg
lea
lods
das
xchg
mov
or
test
scas
pop
out
pop
insb
adc
pop
jl
ret
xor
andl
sbb
or
add
push
lahf
cs
rol
mov
dec
inc
xchg
out
lods
lahf
lock
shlb
rol
or
lods
andb
add
imulb
lock
mov
xor
cmp
sahf
shr
aam
mov
adc
cmp
mov
je
cmp
lods
xor
sub
ljmp
cmpl
inc
je,pn
push
dec
or
in
iret
es
lds
imul
punpckldq
push
jp
lock
push
add
dec
das
icebp
mov
into
mov
sub
push
pop
bnd
rcll
outsb
pop
in
xor
sbb
sbb
cmp
popf
dec
cmp
imul
sub
adc
lret
sub
sbb
adc
sub
loope
mov
push
push
jecxz
push
sbb
sub
test
fadds
jecxz
jae
bound
xchg
ret
movsl
out
cmpsb
pop
xchg
or
rolb
inc
xchg
sahf
add
les
sbb
or
int
xchg
leave
cs
ret
or
leave
addb
or
xchg
push
lods
dec
fsubl
pop
dec
sbb
es
bound
xchg
and
inc
mov
mov
inc
add
movsl
sub
pop
or
lock
clc
sbb
sub
cmp
xchg
inc
mov
dec
pop
sub
xor
sbb
cmp
movsb
mov
test
cwtl
sbb
pop
jl
push
dec
sbb
int
dec
bound
xor
and
ds
es
mov
pop
add
add
and
pusha
jnp
or
cmp
and
xor
mov
push
fdivs
inc
es
cld
dec
mov
push
adc
jne
and
punpckhdq
mov
adc
and
ds
push
lret
nop
xchg
dec
push
adc
hlt
add
jle
cmpb
leave
loopne
cmpl
icebp
inc
add
adc
mov
inc
ret
test
pushf
mov
notl
push
pop
mov
xor
push
rclb
xor
push
incl
cmp
test
adc
mov
push
mov
sbb
cli
xchg
or
into
mov
push
rol
push
outsl
pop
cmpsl
mov
mov
test
lock
push
icebp
xorb
test
sbb
cmp
xlat
inc
pop
scas
inc
gs
jmp
rorb
icebp
mov
mov
aad
repnz
jb
dec
sbb
add
push
and
sbb
mov
roll
leave
sbb
xchg
mov
jo
xor
jbe
rep
push
popfw
mov
push
dec
rcll
inc
popf
aam
dec
repnz
sub
daa
pop
sbb
push
adcb
push
ss
notl
js
push
and
jmp
je
sub
cmpsb
out
sbb
jl
or
fstps
or
enter
add
dec
cmp
add
and
pop
popf
lea
mov
jb
jp
rclb
mov
xor
pushf
aam
jo
cmp
test
jnp
or
les
ljmp
lock
and
inc
or
sarl
aam
mov
aaa
xorb
mov
scas
sub
clc
fcoms
inc
adc
ficoml
dec
popf
xor
or
push
and
pop
or
adc
rorb
movsl
add
nop
or
adcl
add
push
push
sbb
push
mov
mov
and
and
ficompl
cmp
add
or
adc
mov
mov
sub
and
add
adc
xor
push
or
inc
aam
dec
arpl
mov
je
icebp
out
and
mov
inc
and
shrb
ljmp
add
or
clc
clc
pop
push
rcrb
or
cmp
cs
or
or
cmp
loopne
shlb
adc
ljmp
mov
push
push
imul
mov
mov
xchg
and
or
push
adc
push
and
xchg
scas
dec
stc
or
dec
xor
and
and
ret
sbb
or
push
xchg
add
and
lock
hlt
cli
movl
mov
loop
adc
mov
int3
js
inc
mov
sbb
insb
outsb
xchg
loope
stos
mov
push
icebp
xchg
add
fsts
mov
jmp
cs
sbb
cltd
jg
rorb
les
and
mov
add
cmc
pop
int
mulb
inc
ret
pop
sub
pop
add
pop
test
push
es
or
or
xchg
sbb
les
cmc
pop
or
les
clc
sbb
push
push
jbe
rclb
lods
fmuls
sbb
sbb
rcrb
test
mov
shlb
or
testb
mov
add
push
jb
stos
insb
xor
and
adc
loope
sbb
scas
mov
inc
loop
adc
pop
adc
mov
into
push
inc
aad
pop
mov
mov
sub
xchg
loope
scas
shlb
jb
jmp
shlb
mov
ret
rolb
jns
aam
pop
ret
xchg
movsl
jo
jo
je
lea
mov
outsl
bound
or
mov
add
call
xchg
scas
mov
ret
mov
pop
adc
xor
adc
jb
icebp
sbb
lock
xchg
gs
popa
fstl
pop
test
cmp
sub
fidivl
call
shr
add
add
loopne
mov
add
push
or
mov
ljmp
cld
push
scas
xchg
mov
mov
cmpsb
push
sbb
and
push
inc
mov
jo
push
pop
dec
or
and
xchg
xor
or
jmp
xor
dec
add
ss
outsb
call
add
mov
fistpl
prefetch
xor
xchg
sub
addr16
notl
add
mov
add
fistpll
lods
sub
xor
adc
mov
mov
mov
lods
push
push
mov
sub
adc
sub
loope
in
sbb
hlt
fs
xchg
notb
and
mov
xor
scas
push
mov
lds
push
xchg
bnd
inc
dec
sbb
lret
fidivrs
ret
inc
test
fsubrs
js
push
xor
sbb
ljmp
sbb
ljmp
or
pop
rolb
xlat
daa
dec
jbe
jb
push
clc
jo
pop
es
cmp
cmc
or
pop
sub
icebp
ret
push
jecxz
int
ror
shr
shrl
loope
push
mov
fwait
les
mov
clc
mov
jecxz
dec
mov
das
or
push
lret
mov
mov
fldcw
jo
push
xchg
mov
sbb
xchg
or
mov
imulb
jecxz
les
xchg
insb
call
or
jbe
loop
add
push
xorb
and
mov
sbb
movsb
push
ret
adc
pusha
movsl
push
in
mov
ss
loope
pop
cmpsl
push
ret
shl
mov
sbb
sbb
or
lret
mov
sub
call
xchg
cmp
jo
inc
lret
lock
jmp
and
dec
add
add
cmpb
je
out
popf
clc
xchg
sbb
rol
orl
adc
into
pop
int
cmp
pop
mov
pop
sbb
xor
mov
push
lods
sahf
xchg
mov
je
loope
jmp
dec
xchg
or
mov
cmp
xor
pop
fs
xor
mov
sahf
sbb
mov
mov
add
jmp
xor
jecxz
inc
adc
cmp
mov
push
lea
sbbl
dec
jp
imul
test
enter
mov
stos
outsl
jge
xchg
andl
out
lcall
push
dec
push
or
add
pop
jp
mov
xchg
mov
movsl
push
mov
mov
jo
adc
or
pop
mov
addps
jmp
pop
leave
test
mov
je
push
inc
jl
or
xor
jbe
ret
mov
dec
add
or
popf
bound
fsts
cmpsl
daa
or
add
jl
arpl
or
mov
pusha
sub
negb
xchg
out
daa
cmp
cmpsl
xchg
daa
jo
cltd
xchg
dec
adc
add
roll
outsl
fwait
rolb
loopne
dec
mov
imul
inc
xchg
mov
xchg
xor
ret
mov
or
xchg
mov
iret
cwtl
xchg
mov
aaa
fucom
enter
sbb
xor
bound
mov
xchg
gs
xlat
mov
sahf
adc
mov
test
xchg
mov
sar
sbb
aam
js
faddp
mov
scas
in
divl
fcomps
or
mov
push
mov
pop
pop
push
es
mov
cmpsl
push
inc
call
or
adc
andb
sub
scas
mov
or
orb
movsl
test
cmpsl
ret
xor
lods
pop
dec
pop
dec
pusha
rcll
lahf
in
dec
jns
adc
aam
pop
pop
loop
or
mov
adc
adc
add
and
pop
nop
enter
push
or
sbbl
sbb
add
sub
daa
add
add
je
adc
cmp
mov
or
repnz
outsl
shlb
pop
sbb
dec
loope
adc
cmp
jp
xor
push
mov
xchg
pop
out
and
pop
push
mov
daa
mov
or
addr16
sar
add
adc
cli
stos
or
jne
pusha
push
lret
loop
inc
add
inc
and
push
mov
popa
test
test
jg
add
in
std
into
xor
fldenv
jo
gs
mov
call
add
jecxz
adc
js
xchg
inc
nop
add
xchg
shl
es
cmp
pop
cltd
mov
sub
pop
pop
pop
rorb
les
pop
push
xor
es
adcb
pusha
mov
popa
sbb
add
jmp
push
jl
mov
lahf
adc
bndstx
mov
sbb
pop
dec
push
insl
jmp
or
cmp
cmpsb
hlt
insl
mov
xor
dec
mov
push
push
loopne
push
inc
in
inc
fiadds
sarb
sahf
add
adc
loope
ret
lods
push
out
gs
addr16
dec
or
orl
add
mov
inc
loopne
pop
jge
push
push
cmp
imul
push
ret
inc
push
or
or
or
hlt
dec
inc
or
inc
push
cmp
rcrb
cmp
sbb
xchg
ljmp
cld
xchg
jecxz
cli
xor
lahf
xor
gs
bound
gs
in
hlt
cli
adc
je
xor
mov
add
lods
test
bnd
hlt
sub
dec
lock
xor
out
and
sbb
jb
cmp
insb
inc
loopne
inc
and
adc
repz
adc
mov
jg
sbb
insl
idivl
call
add
ret
sbb
adc
jo
xchg
movsb
mov
sbb
daa
nop
pushf
test
jle
xor
scas
and
nop
lcall
dec
cwtl
inc
ret
clc
xor
adc
stc
xchg
les
cmpl
pop
loopne
sub
adc
sbbb
insl
clc
cltd
test
push
pop
dec
or
cwtl
inc
inc
clc
xchg
lods
adc
fmulp
arpl
add
or
pop
mov
xchg
push
dec
ljmp
pop
push
or
pop
lcall
dec
or
daa
mov
scas
xor
mov
andb
add
in
loopne
mov
push
inc
adc
adc
and
lahf
sbb
push
fdivs
add
xorb
add
shlb
and
mov
lods
xchg
mov
fimull
pop
mov
sub
cli
or
jl
hlt
add
xorl
rorl
rcrb
and
xchg
icebp
adcb
add
test
pop
movb
adc
inc
cmp
mov
dec
lods
clc
xchg
nop
sbb
dec
xchg
sbb
jle
pop
dec
cmp
pop
dec
xlat
add
sbb
adc
inc
sbb
test
add
xorb
pop
sbb
mov
and
mov
jo
int
sbb
iret
les
test
mov
adc
mov
dec
out
test
push
inc
loope
add
jecxz
sub
outsl
cmp
call
mov
push
pop
test
xchg
mov
cmp
pop
into
or
mov
fimull
sub
mov
jo
mov
add
mov
mov
adc
sub
aaa
jo
cmp
mov
aad
sbb
test
pop
adc
movsl
add
xchg
xchg
mov
rolb
inc
test
loopne,pn
xor
inc
mov
pop
popf
jp
out
in
hlt
cmp
fadds
jp
lret
out
push
add
jne
inc
les
sbb
fmuls
sub
out
adc
sarb
rcl
movsb
ret
add
popf
cs
gs
cmpsb
dec
inc
ljmp
pop
sahf
sub
aaa
test
imul
inc
cwtl
jo
nop
mov
dec
cmpsb
dec
scas
mov
aaa
or
sbb
inc
daa
loopne
test
sbb
jp
mov
push
and
pop
jmp
mov
push
xchg
mov
stos
pop
addr16
int3
call
hlt
xlat
mov
js
jle
les
mov
add
sbb
mov
add
movsl
scas
pop
push
iret
les
call
cs
xchg
stc
ds
addl
and
add
mov
or
xchg
shrb
mov
in
clc
and
inc
jmp
rcrb
pusha
ljmp
sub
bswap
jno
inc
mov
push
dec
add
pop
jecxz
xor
cmp
nop
inc
data16
or
test
or
add
outsb
mov
pop
sub
or
adc
fistpl
pop
or
notl
test
cmp
mov
andb
push
stos
xchg
ss
add
push
push
pushf
add
add
inc
dec
sbb
xlat
push
mov
dec
fs
add
addb
lock
aas
sub
xor
leave
jo
sbb
xchg
aad
mov
jl
pusha
popa
sbb
cs
ja
xchg
push
push
stos
push
inc
add
adc
adc
test
jo
test
subps
sub
push
cwtl
sarb
mov
pusha
and
cltd
cli
or
cmp
test
arpl
popa
es
xchg
cmp
lock
push
xor
xchg
and
leave
popa
jl
sbb
push
cmpsb
sbb
add
inc
push
mov
dec
sbb
aaa
jl
xor
xchg
call
test
mov
pop
ljmp
fidivl
jecxz
push
or
les
ret
fdivl
popf
aam
inc
adc
test
sbb
mov
sbb
aam
cmp
sub
jbe
add
mov
icebp
xchg
pop
mov
dec
loope
adc
aaa
and
cli
in
mov
dec
jge
adc
push
fidivrs
es
test
adc
sub
inc
sbb
cmp
lret
and
adc
js
push
sub
cmpsb
ret
xor
sbb
cmp
push
or
cmc
push
fstps
test
arpl
rol
pop
dec
pushf
cs
lret
inc
add
and
xor
jns
in
add
fiaddl
xor
mov
dec
xor
or
fcmovb
rorl
jp
sbb
cltd
mov
mov
ss
mov
add
sbb
push
fbstp
cmp
lret
adc
pop
xor
xor
es
test
sbb
xchg
flds
adc
mov
mov
mov
popa
add
clc
xor
cmc
cmpsl
dec
pop
mov
inc
jb
sarl
test
push
lds
adc
and
imul
jp
lock
or
xchg
frstor
jp
inc
mov
bound
cmovge
push
das
pop
mov
and
or
sub
ret
push
bound
xor
pop
or
enter
dec
dec
pop
inc
and
push
dec
push
inc
je
cli
push
enter
adc
mov
jle
jmp
test
aaa
mov
pushf
add
or
sbb
xor
and
or
adc
push
sub
daa
mov
push
add
ror
add
aam
sbb
out
inc
jmp
add
leave
cli
pop
mov
fbld
sahf
inc
adc
rol
jp
sub
and
adc
dec
adc
cmp
dec
and
shlb
dec
inc
bound
leave
divb
add
mov
adc
mov
repnz
enter
lods
xchg
scas
or
lock
stos
xor
inc
call
push
and
bound
inc
daa
loopne
arpl
push
jne
cmp
insb
loopne
les
xchg
cmp
cmp
and
out
xchg
mov
lock
sub
push
subl
clc
push
mov
inc
loop
icebp
push
and
cs
ret
inc
xchg
or
imul
push
push
mov
inc
fs
add
push
ss
enter
sbb
ret
add
loop
or
rcl
ljmp
or
or
stos
pop
push
jnp
das
add
popa
and
js
rcrl
mov
jecxz
xor
add
adc
leave
pop
jp
xchg
pop
xor
pop
inc
mov
or
adcb
test
add
data16
insl
lods
scas
jno
div
ss
dec
mov
sbb
xchg
add
or
leave
jo
push
or
sbb
sbb
sti
push
push
mov
dec
adc
dec
addb
xor
repnz
std
ja
mov
pop
fs
lock
pusha
pusha
imul
or
push
ret
adc
xchg
add
xchg
add
loop
or
loopne
push
and
and
push
push
out
add
adc
outsb
dec
adc
inc
adc
push
aad
js
cmp
xor
lret
push
or
stos
adc
dec
push
rolb
cmp
pop
sbb
sbb
cmp
push
xor
push
sbb
and
pop
add
icebp
add
fstpl
jbe
sub
loop
stc
push
add
xchg
xchg
test
fisttpll
add
xchg
and
dec
rcll
sbb
adc
daa
xchg
rcl
mov
mov
dec
xchg
stos
je
jp
test
sbb
lahf
pop
lret
loopne
jmp
xor
adc
addr16
mov
jae
jle
add
and
ds
inc
les
and
push
mov
popa
mov
push
inc
sub
xchg
in
cmp
movsb
xchg
add
mov
adc
jo
push
and
pavgw
addl
pop
mov
push
lock
ss
push
lods
imul
into
and
jnp
mov
fistps
pop
nop
enter
nop
dec
and
lods
fs
xor
pop
cmpsl
sbb
mov
adc
push
sbb
xlat
push
cli
add
or
cmp
aad
sbb
mov
leave
adc
jb
add
dec
xchg
jo
sbb
add
dec
push
cs
push
or
or
cmp
rolb
mov
sbb
mov
in
jg
das
or
mov
mov
cmpsb
cmp
xor
dec
mov
rcll
xorb
leave
jmp
dec
test
lret
xchg
sub
dec
sub
add
rcr
xchg
adc
or
out
add
sbb
add
adc
rolb
mov
mov
pop
xchg
jmp
loop
adc
pop
leave
inc
and
xchg
pop
push
jo
es
mov
or
or
jo
stos
lock
pop
xchg
lcall
shlb
nop
push
lds
cmp
lods
and
add
aam
and
dec
jne
sbb
aaa
outsl
dec
pop
test
clc
ret
push
inc
push
mov
mov
adc
ret
cmc
shrl
mov
sub
mov
pop
pushf
out
push
pop
call
or
pop
ljmp
pop
dec
mov
mov
cwtl
xor
fdivrs
xchg
les
or
and
mov
or
inc
addr16
outsb
sub
or
int3
es
shr
insl
sub
aaa
mov
cmpsl
mov
inc
ret
loop
lea
mov
and
dec
mov
insb
popf
push
test
or
and
lcall
je
sub
push
into
andb
nop
xchg
rep
test
adc
or
sbb
scas
ret
popa
add
xor
or
stos
pop
adc
cmc
in
je
cmpsl
add
test
bnd
xor
mov
inc
out
insb
and
pop
push
or
adc
test
push
or
jbe
jne
pushf
xor
push
rorb
jo
fs
add
mov
lods
lods
inc
mov
std
adc
inc
mul
pop
xor
push
add
ljmp
mov
dec
mov
fs
pop
adc
pop
test
xor
repnz
cwtl
js
loope
addb
or
test
sbb
icebp
in
shll
icebp
cld
xchg
nop
dec
out
in
inc
push
rcrb
fstpt
call
or
ljmp
arpl
aam
dec
jb
loopne
dec
ret
jp
xorl
adc
clc
add
rol
mov
or
cld
jbe
in
and
sbb
mov
adc
or
das
stos
inc
dec
add
mov
pop
mov
pushf
and
mov
iret
and
xchg
dec
or
cmp
jo
mov
incl
test
and
push
adc
push
push
dec
push
cmp
dec
push
pop
xor
mov
sub
push
fnstcw
rorl
or
sbb
xor
lahf
pop
rolb
rcr
fsubs
daa
push
pusha
popa
cmp
inc
or
popa
fnsave
nop
xor
loop
cli
or
enter
jecxz
arpl
notb
pop
clc
sbb
out
xchg
jo
or
int3
add
fidivrs
and
push
int3
adc
iret
sub
cmp
add
rcrl
mov
cmp
and
cmp
inc
sub
mov
gs
cmp
mov
sub
xor
add
mov
xchg
shrb
mul
fs
push
xchg
inc
push
or
inc
mov
add
rclb
dec
xor
inc
add
icebp
nop
les
leave
jmp
mov
add
aad
jge
and
sbbb
adc
inc
xor
aam
sub
mov
fcmovb
arpl
push
sub
pop
mov
inc
sub
or
arpl
dec
je
insb
shlb
mov
ret
enter
cmc
nop
sbb
push
adc
daa
adc
sub
std
ret
or
nop
imul
cli
rclb
xchg
mov
imulb
pushf
aam
push
jae
push
xor
sub
mov
pop
sbb
je
rcll
push
pop
xchg
or
cltd
aam
shrb
xchg
push
xchg
cmpsl
mov
dec
aaa
jo
ret
rcl
mov
lock
outsb
sub
jge
lret
mov
sahf
mov
dec
movsl
aam
pminub
jo
sub
aaa
push
adc
mov
sbb
lock
fstpt
lahf
and
js
push
insl
movsl
xchg
or
xchg
or
cmp
inc
ss
mov
ljmp
push
mov
loop
hlt
or
popa
inc
lea
ljmp
adc
xlat
add
stos
cmpsl
sbb
mov
addl
test
mov
ja
movsl
mov
add
adc
mov
rolb
pop
jne
adc
inc
loop
pop
adcl
or
les
es
adc
push
data16
dec
pop
out
jb
add
es
adc
insl
sbb
sub
add
xchg
jo
sub
and
jne
inc
ffreep
int3
or
das
adc
adc
sub
adc
and
mov
push
mov
and
xlat
mov
sbb
sbb
sbb
jmp
pop
inc
imul
popa
jno
inc
imul
sbb
xchg
add
add
xor
lea
adc
dec
into
orb
sbb
repnz
pop
or
jle
movsb
pushf
xchg
jb
addb
pop
lgs
sub
dec
lods
add
cmpb
xchg
push
negl
inc
lods
sub
mov
addl
cli
push
dec
fadd
adc
paddd
xor
sub
cs
adc
adc
sbbb
sbb
dec
hlt
mov
cmp
outsb
cwtl
ret
xor
ret
sbb
jp
adc
push
cs
or
shlb
out
faddl
icebp
rcll
xor
mov
adc
push
sahf
rorl
cmp
xor
test
xor
imul
data16
movb
xchg
mov
adc
aam
sub
les
test
ret
dec
xor
sub
outsb
jp
mov
push
add
call
shrl
and
push
jno
inc
lret
and
pop
mov
sbb
mov
dec
xor
add
pop
inc
push
test
mov
mov
push
pop
imul
lea
mov
lock
bound
xchg
scas
not
ljmp
iret
es
sub
or
gs
and
test
push
aaa
andl
sbb
inc
cli
cli
mov
adc
push
cmp
inc
mov
pop
aaa
mov
inc
pop
mov
pop
xchg
fnstcw
push
and
out
test
mov
cwtl
push
xchg
jp
shlb
dec
or
inc
nop
in
or
push
je
das
lret
add
push
pusha
or
ss
bound
cmp
and
cmp
cwtl
adc
dec
stos
adc
adc
xor
pop
or
mov
fs
adc
push
mov
sub
dec
dec
sahf
cmc
dec
test
and
testl
insb
ss
ret
inc
andb
adc
push
ret
jnp
in
cli
push
push
inc
inc
add
add
and
dec
or
push
shlb
jnp
jle
adc
xor
adc
or
lcall
dec
mov
icebp
inc
ret
push
daa
xchg
xor
fadd
or
sarl
lock
cmc
add
mov
cmp
mov
mov
cltd
push
movsl
nop
mov
push
rcrl
lcall
jle
fldcw
inc
push
inc
mov
out
inc
out
xchg
leave
call
inc
int
jmp
rcrb
jno
jno
xor
in
mov
cld
sbb
sbb
sbb
sti
lcall
push
int
or
sahf
add
es
dec
iret
inc
icebp
int
jl
test
push
sbb
mov
sbb
xor
dec
shlb
push
test
mov
adc
pushf
jp
es
cmp
repnz
add
mov
mov
xor
pop
dec
jg
leave
sub
cmp
dec
rol
or
dec
mov
sbb
inc
loopne
add
ror
mov
shrb
test
fsubl
rorl
pop
add
and
fcoml
xor
push
icebp
rcrl
and
mov
sub
xor
jno
and
jp
je
dec
adc
dec
add
push
enter
xor
ljmp
inc
jg
inc
dec
or
and
dec
sbb
jb
add
mov
mov
lds
pop
cmpsl
pop
cmc
and
fsubrl
xor
js
adc
les
or
add
jne
insb
fs
arpl
cmp
sahf
mov
xchg
xor
adc
lret
je
mov
dec
lea
xorb
dec
and
cmp
rolb
jo
addb
push
rol
sub
rclb
fsubl
pop
jnp
pop
loopne
push
add
or
test
mov
cwtl
or
and
inc
jne
sub
inc
bound
gs
into
jo
sbb
sbb
rcrb
outsl
mov
xchg
movsb
jbe
mulb
mov
cmp
jo
mov
add
aam
sarl
xor
stc
fs
rcll
xor
mov
and
or
gs
add
push
bound
ror
ljmp
imul
rcrb
dec
cmp
icebp
adc
push
inc
inc
jge
dec
add
mov
test
mov
rol
outsb
fwait
dec
push
mov
mov
or
sbb
push
jo
adc
popa
shl
sub
xchg
or
jmp
cmpsl
fdivrs
sbb
sbb
xor
dec
inc
test
hlt
sub
hlt
or
sub
add
roll
test
sbb
leave
test
das
loope
xchg
out
push
lock
sbb
bnd
cmp
sbb
push
orb
and
pop
into
jo
mulb
xor
movsl
orl
mov
daa
ljmp
lret
pop
jecxz
sub
dec
jecxz
cmp
int3
and
mov
and
mov
loopne
sbb
iret
sub
xchg
dec
loop
int
loopne
jo
sub
into
adc
jo
popf
mov
out
sbb
les
inc
xchg
and
sbb
mov
adc
adcl
cmp
aam
adc
ss
add
add
pop
cs
into
rorb
sub
in
cmp
shl
adc
sbb
push
loope
xchg
lret
and
cmc
out
xor
insb
add
inc
cmpsl
out
adc
jl
rorl
push
syscall
insb
imul
pop
sahf
mov
hlt
dec
mov
rcrl
xor
imul
xchg
inc
pop
xchg
ret
jae
iret
fldl
mov
addb
movsb
je
cmp
push
ds
inc
cmp
mov
lock
dec
or
data16
add
fsts
sahf
sub
sbb
push
adc
mov
lea
mov
cmp
test
popa
jb
mov
hlt
loope
lret
mov
jns
mov
enter
jb
or
cmc
sbb
sub
jge
inc
sbb
xchg
and
jecxz
mov
push
mov
hlt
inc
inc
mov
inc
mov
mov
stos
rolb
cmovns
xchg
cmp
push
lcall
scas
out
push
ret
jbe
rcl
lock
or
add
jo
pop
xchg
bound
ja
js
or
mov
dec
adc
into
pop
inc
inc
shlb
or
sbb
mov
sbb
fnsave
dec
cld
sbb
enter
daa
add
add
cld
pop
add
mov
push
xor
test
ret
mov
add
in
adc
xchg
sbb
mov
imul
scas
mov
pusha
and
fmulp
xor
push
push
aam
xor
xor
mov
pop
sahf
lret
sbb
rcrb
pop
data16
add
xor
pop
les
mov
dec
xor
imul
add
sub
adc
pop
ffreep
dec
movsb
cmp
and
into
add
pop
pushf
sbb
pop
dec
pop
rorb
ret
cltd
js
xorl
adc
inc
scas
inc
mov
bound
mov
cmp
cmp
adc
dec
dec
add
push
icebp
stos
shlb
add
shlb
aam
ja
add
mov
push
js
push
cmp
loope
movsb
out
ret
addb
gs
idiv
adc
rcrb
pop
adc
xchg
sub
xchg
xor
mov
push
pop
fwait
jl
dec
mov
enter
add
adcb
or
mov
inc
dec
push
xor
icebp
loop
add
movb
std
mov
cmp
lods
mov
repnz
adc
sbb
or
imul
push
adc
mov
dec
rcrb
push
adc
jmp
cld
and
outsb
sbb
fstl
push
and
dec
cmp
push
and
jle
outsb
cld
inc
mov
into
cmp
sbb
lcall
or
sub
dec
sub
pop
outsb
popa
arpl
push
jmp
dec
outsl
lret
cmc
insl
popa
adc
lock
por
add
sbb
mov
lock
pop
aam
sbbl
cli
cltd
cs
popf
or
pop
inc
call
xor
push
pop
inc
pop
xchg
neg
sbb
or
loop
sbb
cmp
cmp
or
pop
daa
sub
jne
js
aas
incb
js
or
cld
and
pop
or
sbb
push
mov
hlt
cmp
and
loop
and
aam
mov
jge
dec
mov
push
bound
lret
mov
imulb
push
and
sbb
sub
inc
ljmp
push
pop
imul
add
jmp
mov
push
mov
mov
pop
sarb
outsl
adc
or
gs
sbb
mov
bound
inc
and
xor
dec
in
arpl
xchg
lret
inc
push
inc
mov
or
nop
scas
mov
sbb
fmulp
das
sub
call
aaa
mov
lods
push
push
rcl
xchg
hlt
fst
idivb
int3
lret
addr16
sub
pop
insl
insb
pusha
sub
adc
pusha
adc
pop
mulps
aam
fisubrs
mov
inc
je
shrb
gs
loopne
push
test
jno
add
insl
and
push
sub
sub
add
lret
and
add
sub
push
push
insb
sub
and
jle
xchg
add
mov
mov
inc
sbb
or
lea
push
inc
mov
sub
adcb
out
or
imul
adc
and
test
mov
mov
add
push
pop
andl
scas
push
pop
lods
jo
pusha
sub
xor
fdivrs
inc
mov
insb
test
xchg
shl
retw
test
test
adcb
lods
xchg
ret
in
aam
cmp
test
incb
fcomps
js
cwtl
mov
or
add
sbb
ret
sbb
pop
in
and
jmp
add
inc
mov
or
mov
stos
mov
push
or
fadds
xor
mov
jp
sahf
adcb
mov
sbb
gs
add
andl
mov
fdiv
and
inc
sbb
mov
arpl
pusha
sbb
sbb
enter
xchg
test
pop
xor
pop
xor
sbb
mov
mov
sti
aam
add
icebp
jnp
rcr
cli
mov
inc
xor
cmp
hlt
rol
iret
orb
lret
pop
orb
dec
inc
xchg
adc
mov
hlt
je
jbe
xchg
cmpb
and
nop
cmp
or
inc
dec
adc
cmp
imul
sbb
cld
push
sub
mov
adc
or
push
jecxz
testb
xor
mov
xchg
add
int
insl
ljmp
xor
stos
ds
dec
bound
bound
cmpsl
xor
scas
out
shll
or
outsl
adc
pop
jb
adcl
inc
mov
mov
lock
adc
or
sbb
add
push
add
adc
sbb
mov
icebp
cs
lcall
popa
jne
add
sbb
clc
test
sbb
daa
lcall
xor
outsb
lret
mov
sbb
dec
leave
test
cmpb
mov
add
leave
sbb
add
sahf
sub
mov
mov
movsl
ret
jmp
outsl
cmp
push
add
inc
mov
faddl
dec
xorl
ret
bound
ljmp
or
inc
cmp
orb
xor
inc
rcl
dec
shrb
ret
and
push
and
loope
pop
mov
aad
xchg
fmull
mov
push
and
push
test
xor
xor
xor
ss
xor
sub
iret
adc
dec
test
roll
sbb
inc
cmp
int3
lock
pop
adc
outsb
push
fwait
outsb
push
push
loop
pushf
in
sub
shr
sbbb
out
adc
mov
inc
dec
sbb
dec
bound
xor
in
movsl
mov
cwtl
push
adc
das
add
imul
aam
es
push
dec
or
jmp
lret
pop
das
push
lahf
xchg
cmp
ss
add
xor
xor
sbb
adc
cmpsb
leave
push
or
add
sbb
cltd
lret
sbb
sbb
js
notb
roll
lea
mov
cltd
add
pop
fldenv
xchg
rcl
outsl
lods
dec
jl
sbb
or
or
adcb
out
add
das
mov
repnz
mov
inc
cmp
test
hlt
popf
cmp
test
sahf
and
ret
add
push
push
enter
xor
mov
sbb
xor
inc
add
ficomps
adc
jp
ja
xlat
adcb
adc
add
pop
ror
xor
or
inc
ljmp
sub
outsb
xor
and
inc
jb
fsubrl
lock
mov
fdivr
add
pop
jb
cmp
pushf
lahf
subl
or
xor
mov
xor
cwtl
pop
cmpsb
cmpsb
push
clc
push
adc
push
xchg
jns
lcall
int3
cmp
sbb
rorb
mov
pop
fs
in
push
imul
mov
rclb
sub
mov
cmp
inc
jmp
sbb
mov
add
and
test
mov
sub
xchg
or
fmuls
or
pop
adc
popl
mov
rolb
enter
inc
and
inc
mov
inc
pop
cwtl
jns
push
mov
dec
pusha
inc
mov
add
or
jb
jo
js
test
imul
rcl
push
mov
sbb
mov
add
adc
mov
inc
push
sbb
jns
mov
push
inc
nop
lods
mov
and
cmp
xchg
shr
enter
leave
mov
or
xchg
jne
sub
inc
add
cmp
rol
and
xchg
xorb
adc
xchg
cwtl
push
push
rorb
pop
movsl
les
mov
xor
shl
ss
test
pop
xor
pop
es
mov
arpl
adc
mov
push
push
and
fcmovbe
and
jb
cmp
loop
call
xor
push
dec
cli
adc
sti
test
clc
sub
pop
shlb
xor
mov
and
or
dec
push
xchg
fmull
sbb
mov
loopne
pop
imul
std
cltd
sbb
rorl
cmc
adc
rcll
shlb
xchg
inc
add
cmc
jmp
test
or
mov
pop
pop
sbb
enter
mov
or
sbb
aam
mov
mov
or
in
sar
add
mov
push
cmp
inc
lar
adc
cmp
rol
gs
cmp
push
call
popf
pop
add
pop
es
add
pop
fidivl
outsb
sub
andb
mov
mov
push
loope
mov
scas
das
sbb
sbb
cld
rorb
and
fucomip
adc
push
and
xor
fwait
inc
mov
xor
dec
push
and
dec
insb
out
insb
add
jo
jbe
adc
test
mov
or
mov
xor
xor
inc
bswap
adc
mov
loopne
add
xor
outsb
lcall
jnp,pn
out
inc
addps
pop
lock
shlb
or
rclb
inc
lret
inc
fisttps
and
cmp
mov
pop
sbbb
fiadds
or
or
pop
jae
pushf
arpl
jno
pop
mov
inc
lods
add
or
sbb
mov
sahf
fiadds
inc
xor
cmp
and
les
pop
sbb
adc
sbb
or
sub
out
jle
popf
test
mov
test
jge
ljmp
add
into
xchg
sbb
lahf
dec
jecxz
pusha
jecxz
mov
push
in
or
orb
ret
fwait
or
sbb
sbb
test
xor
xchg
push
add
nop
lea
nop
push
int
inc
sub
and
push
mov
data16
rorl
and
lret
orb
and
mov
adcb
pop
pusha
add
lock
orb
pop
fsubr
hlt
rolb
xchg
dec
movsl
and
and
sub
or
out
xchg
mov
cmpb
inc
shll
push
or
call
add
fmulp
cmpsl
clc
dec
mov
into
sbb
xor
lahf
jo
xchg
loope
push
jge
frstor
rcl
lret
adc
test
or
add
mov
addr16
cld
ret
imulb
scas
mov
sub
push
mov
je
adc
add
jne
sahf
mov
add
pop
testb
xchg
or
pop
push
add
out
xor
adc
mov
and
or
inc
or
stc
bound
imul
fst
push
xchg
loop
push
pop
cli
sahf
mov
xchg
add
out
ljmp
pop
push
xor
mov
scas
and
mov
dec
sbb
xchg
and
cmp
stos
in
add
scas
dec
or
cmp
hlt
sbbl
xchg
push
pop
adc
sub
lds
pop
lret
push
test
nop
or
or
mov
sbb
dec
movsb
xchg
bnd
xchg
in
sbb
xor
and
mov
xor
add
adc
mov
push
nop
mov
push
loope
xor
outsb
test
rcrb
or
ljmp
hlt
xor
sub
adc
cli
or
imul
adc
cmp
add
pop
fisubrl
sbb
mov
xlat
nop
and
mov
lea
fnsave
mov
mov
sbb
rcrb
movsb
es
mov
push
and
sub
adc
cwtl
pop
into
mov
and
pop
testb
dec
jg
sbbb
push
dec
add
push
cmpsl
push
or
xor
inc
adc
cwtl
mov
or
dec
data16
sbb
sbb
nop
push
das
cmp
mov
roll
test
xor
mov
loopne
adc
fidivl
or
dec
sbb
lods
fwait
ja
push
add
mov
cmp
jo
dec
and
or
jle
pop
add
ret
je
test
aad
jg
js
cmp
movsb
add
imul
inc
loope
popf
popf
ret
bound
mov
or
sarb
ljmp
mov
or
adc
dec
sbb
sti
cs
ss
daa
xchg
mov
cmc
out
shrb
jg
dec
add
sub
popf
inc
adc
xchg
punpckldq
add
xchg
shll
addb
xor
mov
push
les
sbb
add
aaa
adc
pop
dec
fisubrl
add
jne
cmp
ret
dec
pop
dec
adc
or
mov
cmp
cmp
fiadds
lods
das
or
pop
dec
jb
loop
push
add
js
and
or
in
pop
daa
jmp
ds
testb
mov
or
scas
out
shrb
es
add
jge
push
into
mov
repnz
cwtl
inc
push
ret
or
lret
daa
int3
or
add
mov
fidivl
mov
inc
js
shl
mov
pop
add
inc
inc
lcall
loopne
les
jb
adc
imul
sbb
adc
or
pop
add
inc
cmp
mov
cmp
xor
or
add
mov
mov
sub
cwtl
push
cmpb
adc
and
movsb
mov
nop
jo
add
sbb
ds
repz
cmp
add
stos
test
inc
mov
sbb
add
xor
cmp
adc
inc
rcrb
mov
addl
sub
in
clc
adc
dec
adc
xchg
loopne
jmp
cs
and
add
test
jnp
scas
xchg
lea
cmp
or
iret
pop
xchg
xorb
add
mov
inc
jl
adc
pop
adc
cmp
clc
punpckldq
hlt
imul
adc
push
push
push
dec
adc
mov
sbbb
mov
ret
subl
or
sbb
push
push
cwtl
or
inc
mov
cwtl
inc
shrb
rol
mov
sbb
shll
stos
aam
clc
popa
or
in
enter
cmp
push
and
repz
pop
mov
mov
or
and
test
repz
push
cmp
adc
sbb
sbb
xchg
leave
add
cmp
sbb
or
mov
add
and
inc
pop
cmp
sbb
mov
pop
xchg
push
mov
rcrb
fidivs
inc
loope
jecxz
jbe
and
hlt
subl
inc
data16
mov
out
add
les
xchg
movsl
test
push
pop
fistpl
cmpsl
hlt
test
and
add
xchg
jb
mov
dec
push
adcb
js
adc
pop
adc
or
add
inc
iret
xor
outsl
pop
push
sahf
iret
sbb
push
ret
push
sbb
jecxz
pop
mov
and
and
dec
clc
std
dec
add
jbe
xor
mov
sbb
test
cli
adc
inc
or
and
mov
mov
xchg
sbb
dec
add
jmp
xchg
adc
cmp
push
test
or
mov
xchg
xchg
or
sbb
sbb
out
leave
icebp
mov
xor
cs
xchg
das
in
sti
ret
mov
sbb
inc
loope
inc
imul
xor
cmp
jno
add
push
mov
movsb
addr16
and
pop
cmp
shl
adc
cmp
sub
pop
cmp
and
sub
jbe
and
test
rolb
or
adc
inc
mov
int3
adc
mov
es
xor
push
popf
cmp
dec
dec
or
scas
add
les
and
pop
add
push
les
sbb
xor
sbb
adcb
inc
sbb
and
mov
pop
cmp
rorb
cmp
mov
add
jle
cs
adcb
cmp
mov
scas
add
sub
adc
sbbl
and
mov
mov
loope
jo
test
jae
sbb
pushf
sub
xchg
jno
xor
mov
jp
pop
mov
push
sub
mov
mov
xchg
and
push
pop
pop
cld
dec
mov
pushf
jg
out
hlt
pop
dec
add
js
pop
inc
js
jmp
mov
jmp
inc
push
test
movsl
lret
sbb
mov
shrl
xor
movsb
ror
and
and
js
and
lods
or
mov
je
sbb
dec
cmpsb
xchg
xor
push
aam
cmpl
mov
mov
jge
daa
jp
add
and
inc
add
push
jg
mov
bound
ret
cmp
inc
xchg
inc
and
loopne
and
mov
mov
or
push
pop
adc
ljmp
push
adc
gs
testl
and
sub
and
outsb
call
jbe
loopne
clc
add
and
cmp
xor
xchg
test
cmp
mov
cmp
ja
cbtw
push
mov
pop
add
add
and
add
arpl
and
mov
popl
insb
dec
mov
ljmp
adc
add
mov
arpl
and
jno
and
neg
nop
push
rolb
mov
shl
pop
push
xor
gs
lret
sub
and
negb
push
inc
xor
mov
lock
dec
loope
aaa
les
inc
add
sub
sbb
aaa
dec
pop
pop
xchg
lods
pusha
mov
data16
or
mov
and
or
decb
adcl
nop
pusha
push
push
stc
xchg
pop
fadds
movsb
adc
xchg
lock
loopne
sbb
fcoms
cmpb
test
out
push
out
enter
js
xchg
or
adc
push
test
jnp
xchg
push
mov
les
or
xchg
out
dec
and
push
movsl
and
xor
das
cmp
fdivs
aaa
movsl
dec
dec
popa
pop
int3
jns
mov
and
cmp
adc
loope
rorb
or
sbb
add
add
outsb
sub
or
or
lret
ret
jl
sbb
lahf
inc
push
lods
imul
stos
mov
push
mov
inc
pop
gs
pop
add
xor
sbb
sub
mov
lock
popa
xor
cmp
movsb
pushf
jo
push
test
add
addb
stc
add
add
adc
popa
pop
rol
cmp
xchg
stos
xchg
adc
cmp
js
cmp
xchg
mov
or
mov
mov
in
xchg
fistl
add
insb
jecxz
sbb
push
shr
arpl
es
test
out
inc
add
mov
insb
mov
sbb
cld
notb
imul
lds
mov
dec
sub
enter
pop
sbb
xorb
icebp
inc
jb
in
enter
cmp
int3
sbb
ret
popf
into
adc
mov
sbb
out
push
inc
cmp
bound
in
xchg
sub
movsl
xchg
or
adc
mov
jecxz
inc
mov
in
or
push
test
mov
mov
jb
dec
or
add
adc
addb
and
dec
and
bound
mov
xrelease
xchg
xor
mov
test
inc
insb
mov
mov
xchg
mov
in
push
adc
xor
mov
xor
add
mov
test
or
mov
sahf
fnsave
notb
or
adc
or
cs
xchg
mov
xor
mov
xor
fiadds
ljmp
ret
mov
movsl
outsl
cmp
pop
scas
pop
sbb
mov
ljmp
push
adc
popa
or
push
cmp
mov
lock
or
pop
es
jno
gs
rcrb
imul
test
imul
dec
mov
jne
push
mov
or
stos
hlt
adc
or
mov
or
xchg
mov
hlt
test
lock
push
push
push
test
shl
lock
jne
out
cmpsb
or
dec
or
inc
outsl
subl
cmp
inc
add
jmp
or
sahf
inc
inc
mov
sbb
push
add
orl
into
mov
or
rcll
nop
pop
shrl
inc
inc
movsb
mov
and
jo
mov
pusha
mov
bound
mov
mov
sbb
aas
repz
push
psubusw
xchg
or
and
pop
cltd
icebp
repz
jb
push
push
xchg
cmp
adc
jne
into
fsubrs
pop
sbb
push
or
sbb
jne
test
mov
nop
outsb
mov
jg
and
xlat
imul
push
subl
lock
leave
push
push
enter
add
pop
pop
xchg
sahf
es
push
gs
sub
add
insl
sub
data16
adc
add
push
dec
push
push
pusha
push
pop
les
sbb
imul
xor
mov
lea
cmp
sbb
pop
jp
movsb
dec
mov
sahf
js
lret
add
popa
ja
movsl
pop
lret
jp
cli
jge
dec
or
xchg
out
lcall
inc
cmp
jbe
clc
mov
mov
jnp
pop
ret
gs
jl
jo
inc
inc
lods
dec
ret
fistpl
ret
add
ja
push
and
xorb
or
sarb
cli
ret
lret
push
and
or
push
loopne
cmpsl
xchg
pop
xor
sbbl
or
addl
adc
shl
dec
push
xchg
clc
sbb
sbb
sub
or
cmp
inc
fisubrl
or
bound
or
or
sub
jecxz
xchg
es
xchg
or
mov
jmp
punpckhbw
fcoml
xor
fiadds
mov
insl
rorl
xchg
add
sbb
out
push
mov
mov
and
pop
cmpsb
out
jecxz
push
insl
adc
jmp
jg
jg
and
xor
lds
mov
daa
push
or
pop
lar
pop
add
aam
test
add
add
lds
push
cmp
orb
pop
js
test
lea
js
jmp
push
mov
movsb
rorb
push
fldt
ds
ds
test
sbb
dec
setb
popf
and
call
and
add
push
dec
es
add
test
movsl
push
aad
int3
adc
xor
data16
sbb
inc
pop
daa
add
and
enter
pop
movsl
cs
sub
mov
add
fmulp
mov
mov
pusha
mov
xchg
roll
repnz
sub
xchg
pop
pop
push
xchg
and
jns
mov
lret
sbb
sub
adc
insb
jns
or
nop
scas
enter
adc
not
add
xlat
adc
cltd
push
or
mov
push
pop
inc
adc
push
add
sti
movsb
fcoms
mov
and
mov
add
push
cmp
dec
add
sub
hlt
cmp
push
rolb
xor
clc
add
aam
pop
cmpsl
loopne
jmp
mov
mov
xor
stc
addb
pop
jo
lea
xlat
ljmp
sub
dec
ljmp
ret
xchg
repnz
mov
dec
and
mov
clc
clc
cmpsb
jmp
js
and
stos
arpl
and
xor
test
xor
pop
dec
sbbb
divb
or
pusha
adc
adc
cmpsb
adc
loopne
mov
movsl
adc
jge
sbb
or
push
or
sbb
stc
and
nop
add
data16
lret
nop
popa
jbe
iret
xchg
rclb
movsl
adc
jnp
jge
outsl
out
add
lret
pop
pop
pop
xor
dec
add
add
mov
mov
xchg
test
pop
pop
in
jg
mov
push
movsl
test
mov
add
and
or
lcall
or
push
jmp
iret
sub
ret
or
sbb
imul
ret
orl
rclb
cmpsl
imul
fnsave
test
jo
enter
and
mov
jo
sbb
subl
push
outsb
ljmp
in
or
jmp
sbb
adc
add
add
fs
and
xchg
inc
dec
adc
push
test
int3
fnstcw
sub
nop
sbb
xchg
ljmp
xchg
aaa
xchg
or
ret
pusha
cmp
inc
push
fmul
inc
inc
test
daa
test
add
mov
dec
mov
pop
add
jb
push
f2xm1
jno
sbb
adc
push
push
cmp
add
and
rol
xchg
shlb
or
jl
jne
dec
stos
sbb
add
push
repnz
clc
ret
xor
jecxz
cmp
push
push
call
sbbb
mov
fstl
pop
mov
sti
lret
cmp
adcb
push
sub
or
sub
cld
lcall
fwait
pop
sub
cmc
insl
add
or
dec
test
push
mov
call
je
mov
or
sbb
jecxz
ret
int
push
pop
inc
lret
pusha
loop
sub
push
aam
adc
pop
adc
sahf
xor
or
cmpsb
inc
popf
xor
stos
pop
xor
push
add
jmp
inc
lret
xchg
dec
rol
jmp
fs
sub
and
mov
xor
and
enter
mov
daa
popa
push
jmp
jb
mov
mov
mov
xchg
add
shrl
mov
push
xchg
mov
inc
lea
js
pop
push
cltd
push
and
bswap
hlt
and
mov
adc
inc
xchg
or
in
inc
imul
push
pop
xor
cmovb
jnp
dec
ret
add
fnstcw
fcmovne
add
or
mov
xor
call
pop
jge
add
negb
cmp
lock
jbe
sbb
int
jl
push
mov
xchg
add
xor
and
subb
cmp
aaa
or
xchg
pusha
ffree
popf
test
lock
rol
jp
sbb
xchg
add
test
mov
add
cld
test
cmp
cli
add
cli
pop
mov
lock
dec
xor
in
cmp
pop
and
dec
xchg
or
add
cmp
shl
push
es
das
les
inc
mulb
or
xchg
push
fdivs
add
jmp
mov
pusha
push
xchg
test
out
adc
and
ret
add
stos
xchg
loop
je
xor
gs
mov
sbb
mov
add
scas
ret
sub
mov
cmp
add
pop
hlt
push
add
adc
jg
leave
shrb
cltd
sbb
mov
and
adc
pop
fbstp
sete
shlb
push
hlt
movsb
test
imul
pushf
pop
ds
fwait
xchg
or
pop
xlat
data16
daa
mov
xchg
cli
add
ss
dec
sub
or
xchg
lock
sub
sbb
push
lods
and
lret
mov
test
or
adc
out
or
sub
mov
sub
push
pushf
push
sbb
pop
popa
sub
cmpsl
sbb
mov
pop
pop
add
dec
mov
sbb
sbb
add
das
adc
inc
xor
sub
adc
mov
adc
mov
dec
adc
lock
push
mov
subl
and
out
push
xor
ret
pop
cmp
mov
inc
js
fstl
pusha
mov
push
mov
push
sbb
sub
clc
andb
inc
inc
rorb
popf
push
xchg
push
jae
iret
shlb
subb
mov
insb
inc
ret
mov
sub
sbb
or
rolb
add
fs
mov
add
cmpxchg
nop
addl
nop
mov
inc
xor
xor
mov
dec
sub
add
loopne
loope
rolb
pop
xor
pop
cmpsb
mov
push
out
lcall
stos
rolb
xchg
xchg
outsl
ss
pop
fiaddl
push
add
shl
fimuls
and
jl
mov
cmc
fsubr
or
cltd
xchg
ret
rolb
and
adc
aam
mov
movsb
xchg
inc
ficoms
and
popa
lock
mov
adc
mov
jno
rcr
or
js
mov
jmp
dec
aad
dec
xchg
loope
push
cld
cmp
loopne
xchg
xchg
adc
test
pop
xchg
add
adc
sbb
mov
inc
cmpsl
pop
mov
add
inc
outsb
or
push
push
inc
sub
test
inc
add
pusha
or
fwait
rol
pop
sbb
jnp
or
jbe
loopne
jo
or
rcrb
or
mov
xor
cmc
or
adc
mov
pushf
sbb
flds
and
ret
adc
xchg
push
adc
lods
pop
rorb
outsl
cmp
add
sahf
push
mov
or
push
or
push
sub
fwait
or
sarb
pop
inc
test
pop
xlat
push
or
rolb
mov
or
mov
cmp
or
ljmp
inc
push
pop
les
pop
add
cmp
cmpsl
loopne
insl
cmp
jns
push
sbb
test
repnz
subb
loopne
xchg
adc
sub
cs
mov
fistl
mov
add
ror
icebp
lock
jno
movsb
es
rorb
loop
shll
adc
push
mov
mov
sahf
andb
add
push
fiaddl
icebp
mov
xor
add
and
in
ret
insb
addb
and
push
imul
shll
cli
hlt
leave
push
sbb
add
cmp
lret
les
enter
int3
mov
roll
loop
jae
pop
push
fstl
sbb
icebp
fs
les
sarl
sbb
and
cld
mov
rorl
mov
dec
inc
push
or
daa
push
add
call
pusha
push
jge
or
sub
loopne
adc
in
or
test
popa
js
imul
add
stos
adc
xchg
sbb
xchg
or
or
add
push
mov
mov
or
and
or
leave
jecxz
pop
or
adc
xor
inc
dec
rol
mov
hlt
rorb
cmpsb
into
jl
xor
imul
imul
clc
mov
rorl
cld
cmp
pop
int
xchg
hlt
ljmp
xor
or
xor
pop
push
sbb
mov
mov
inc
sti
pop
dec
cmp
or
lea
dec
or
data16
dec
pop
mov
jge
jmp
outsb
pusha
ret
dec
mov
mov
or
cmp
sub
cmc
pop
or
sbb
sub
out
dec
leave
inc
fwait
pop
add
sbb
clc
mov
adc
popa
sub
inc
add
js
mov
push
add
stc
jp
int3
adc
or
push
stos
test
xchg
daa
and
sahf
arpl
adcl
cmp
adc
and
mov
mov
and
and
cmc
push
int3
lret
scas
fmul
lods
and
mov
out
jbe
xchg
rcrb
mov
and
fbstp
adc
or
icebp
add
loopne
rorb
xorb
je
pop
cmp
jo
mov
dec
or
sub
mov
or
jle
not
or
mull
daa
adc
pop
or
add
or
stc
pop
jp
jb
jbe
push
xor
sub
mulb
outsb
test
xchg
pop
dec
dec
bswap
mov
movsb
jno
push
ret
inc
das
adc
add
xchg
ret
aam
mov
inc
push
add
enter
push
sub
pushf
insb
sbb
dec
imul
clc
mov
pusha
dec
pop
or
test
inc
mov
pusha
loopne
insb
scas
dec
shlb
repnz
add
cmp
fbstp
imul
mov
push
lock
arpl
mov
add
daa
shlb
add
popf
xor
mov
scas
inc
mov
ret
out
cmp
and
push
jns
cmp
sub
ljmp
cmp
ds
xlat
mov
sbb
inc
sbb
cmpsb
bound
pushf
mov
and
xor
push
xchg
sahf
mov
add
lods
or
call
or
xchg
add
mov
movsl
into
mov
sahf
xor
xchg
and
cmc
je
add
and
push
mov
inc
js
inc
insb
pusha
insb
ret
inc
imul
adc
pop
mov
adcb
xchg
xlat
mov
hlt
les
xlat
cmp
and
or
dec
ret
dec
push
je
sub
xchg
inc
bound
pop
push
dec
sbb
fidivs
sub
das
mov
and
add
cmp
xchg
add
movsb
imul
inc
leave
jno
insb
shll
and
pop
jmp
ja
dec
pusha
mov
xchg
or
push
inc
adc
sbb
inc
add
or
les
fsts
sbb
roll
and
das
push
xchg
push
xchg
or
sbb
shr
push
fcmovb
add
hlt
shlb
and
aaa
sahf
pop
cmpsl
or
lret
shrb
inc
pop
add
sub
jl
mov
sbb
or
stc
push
shrl
stc
fdivl
and
xlat
movsb
daa
daa
mov
mov
or
idiv
mov
add
adc
xchg
daa
leave
test
adc
loopne
sbb
adc
xchg
xchg
sbb
xchg
mov
aam
cltd
inc
add
pop
mov
or
push
sbb
add
faddl
aaa
jp
or
dec
sub
js
or
xor
je
pusha
add
dec
sbb
rolb
mov
leave
cmp
fidivrs
add
cmp
hlt
push
sub
lock
and
sbb
add
push
cmp
sub
xchg
mov
or
jno
loop
imul
ljmp
xchg
push
aam
and
inc
and
jo
mov
push
loopne
push
mov
mov
aas
popa
mov
insb
jo
cmp
or
in
and
popa
mov
test
mov
mov
gs
jmp
imul
sbbb
push
push
lret
and
popf
dec
imull
rorl
repz
roll
aas
data16
xor
mov
adc
xchg
jnp
mov
popa
and
bound
lea
xor
imul
adc
cmc
sub
cltd
pop
ja
dec
cmc
imul
ret
xor
lock
add
mov
clc
cmp
sub
cmp
daa
mov
dec
pop
xchg
loopne
ret
jbe
wbinvd
je
adc
push
mov
lcall
out
xchg
lods
je
mov
inc
or
aas
imul
pop
rclb
arpl
leave
aaa
xchg
push
inc
inc
lahf
test
xor
in
add
leave
jp
push
add
add
sbb
cmc
and
lods
mov
loopne
xchg
pop
add
add
push
es
cmp
rcrb
loope
je
outsb
adc
mov
sub
mov
pop
sbb
sti
stc
sbb
dec
push
fimuls
repz
mov
imul
jns
les
lock
sbb
in
loopne
dec
pop
dec
loopne
add
mov
pop
maxps
xor
popf
sbb
addr16
subl
inc
add
shl
insb
mov
sti
xor
jo
add
xchg
add
jmp
or
or
test
mov
js
popa
and
xchg
fstl
push
leave
mov
xchg
fs
pop
data16
dec
cwtl
adc
imul
loop
arpl
pop
dec
popa
inc
or
daa
or
add
sub
mov
je
or
cmpb
sub
jmp
into
pinsrw
icebp
fs
xchg
pusha
dec
dec
test
insl
cmp
push
sbb
mov
mov
and
xor
mov
cli
mov
in
adc
mov
dec
mov
test
xor
push
push
gs
adc
pop
push
push
test
adc
and
shll
fimuls
cltd
dec
or
pop
and
jns
xchg
sbb
lods
dec
jge
rorb
fnstenv
pushf
cmp
popf
cmpb
adc
jmp
mov
pop
cwtl
or
nop
movsb
dec
xchg
jle
es
dec
add
cmp
dec
subb
or
rorl
add
enter
mov
loop
push
sbb
xchg
add
xchg
add
pushf
xchg
adc
cwtl
sub
adcl
dec
push
xchg
hlt
sub
daa
push
mov
lods
pop
ss
sub
fisttps
xchg
sbbb
popa
sbb
test
sbb
add
mov
nop
mov
pop
addb
mov
int3
inc
or
xchg
or
adc
movsl
mov
sbb
ljmp
scas
das
push
pop
add
and
mov
mov
daa
cmpsb
testl
ret
dec
sub
pop
outsb
pop
rcll
loope
test
jo
dec
add
mov
mov
or
mov
adc
orb
insb
add
je
mov
inc
out
sbb
xor
lret
adc
jo
popa
roll
adc
test
pop
cmp
popaw
sarb
pop
shl
sbb
jl
sub
jp
mov
sbb
stos
xchg
cmp
insb
mov
pop
xor
enter
fidivrl
dec
lods
rclb
scas
adc
stos
es
jp
sbb
sbb
mov
xor
inc
mov
sbb
push
add
inc
or
push
push
add
repnz
sbb
ljmp
push
mov
cmp
jp
jmp
push
xor
mov
in
fisubs
sub
dec
or
das
lock
addb
addr16
sbb
or
sbb
bound
sbb
and
dec
rcrb
data16
xchg
inc
mov
or
xor
adc
adc
adc
push
pop
sub
mov
mov
mov
lret
cwtl
aaa
jne
or
sub
ret
in
lea
shll
adc
adc
jnp
adc
adc
xor
xchg
push
sub
or
lods
inc
add
sub
inc
stc
sarb
loopne
adc
fs
add
std
xor
fcoms
lods
xchg
lods
push
lahf
cmpsl
aaa
or
arpl
clc
mov
inc
movb
sub
push
ret
test
jmp
add
adc
mov
add
or
negb
jle
adc
cmp
sbb
or
add
xchg
add
cmpsl
ret
or
clc
push
inc
lea
rcl
mov
cli
add
mov
xor
jno
and
adc
nop
xchg
add
push
mov
ljmp
or
or
lods
lds
mov
or
mov
mov
les
adcl
adc
jo
ljmp
call
daa
bound
cmp
je
sub
cmp
jl
jns
js
dec
mov
or
addb
stos
cli
add
int
or
jno
xor
icebp
adc
inc
cmp
loope
shl
sbb
sti
bound
pop
cmp
lods
popa
pop
call
dec
cltd
into
mov
rcl
pushf
cmpsb
inc
inc
sbb
ror
sbb
call
popf
dec
pop
xchg
xor
je
hlt
inc
add
push
lcall
inc
es
das
pop
mov
rcl
sub
cmpb
in
adc
ja
xor
xlat
imul
xchg
push
pop
mov
and
adc
and
mov
imul
jbe
inc
repnz
pop
es
push
cli
orb
adc
or
or
xchg
test
das
push
outsl
outsb
cmp
adc
test
loop
mov
jl
pop
pop
pop
jmp
push
push
or
je
mov
inc
mov
loop
sbb
popa
sub
test
or
xchg
mov
lea
mov
int
ss
ret
add
enter
repnz
add
loopne
loope
cmp
or
add
sbbb
pop
jmp
jne
push
push
adc
jp
loope
cmpsl
adc
or
es
push
mov
or
movsl
rclb
add
clc
jmp
or
jle
lea
add
andb
popf
or
sbb
out
imul
clc
pop
ljmp
mov
sub
test
push
add
and
cmp
inc
inc
and
test
xor
push
xlat
jo
clc
mov
lock
dec
notb
xchg
in
jl
push
cmp
mov
add
enter
sub
dec
nop
addb
outsb
pusha
sbb
adcl
loopne
adc
dec
cmc
or
je
mov
cmpsl
and
push
add
add
mov
js
cmp
aam
pop
or
add
nop
add
xorl
or
push
cmpsb
out
sbb
pop
inc
je
xchg
inc
dec
and
mov
jo
rcrb
ss
adc
xor
mov
push
inc
popf
insb
cltd
push
xchg
or
inc
pusha
jg,pn
sbb
adc
push
out
movsb
xor
and
jge
test
sub
rorb
and
loopne
aam
rol
jo
jecxz
xor
push
lods
or
sub
add
scas
or
xor
and
pop
pop
test
inc
rorb
insb
pusha
and
xor
xor
xchg
hlt
xor
or
lahf
adc
sbb
fs
push
xchg
adc
cmp
mov
push
or
cwtl
ret
pop
nop
clc
xchg
cli
push
aas
cmp
iret
adc
loopne
inc
inc
movhps
sub
pop
dec
lock
sub
dec
dec
sbb
add
lods
xlat
das
dec
dec
popf
mov
push
loopne
test
jne
insl
cmp
sbb
in
ret
orb
and
shrl
test
adc
add
and
inc
jo
xor
stc
clc
jo
mov
add
or
cwtl
lock
ljmp
jbe
ljmp
mov
in
subl
daa
rcl
in
clc
pop
divps
pop
mov
cmp
hlt
addl
arpl
sbb
fadds
add
jbe
stc
push
and
adc
add
add
pop
pop
sbb
aam
dec
cs
and
scas
rcrb
loopne
punpckhbw
js
call
enter
insb
push
xchg
ss
pop
xchg
cmpsb
pushf
inc
cmovs
lret
inc
mov
or
sbb
scas
mov
ret
mov
add
hlt
imul
push
mov
repz
xchg
rcl
and
sbb
push
mov
adc
push
clc
mov
daa
movsl
rclb
ljmp
add
add
test
cwtl
push
shll
rorl
push
mov
test
inc
mov
stos
inc
inc
inc
mov
push
popf
xchg
jno
hlt
dec
lea
sbb
cmp
shlb
xchg
add
cmc
xor
inc
pop
add
adc
or
jns
enter
movsl
adc
inc
sbb
push
pop
xor
adcb
push
ret
and
insb
test
rolb
inc
or
inc
fildl
rorl
pop
sbb
test
pop
push
ret
mov
and
dec
cmpsb
mov
cli
push
dec
js
pop
adc
pusha
bound
dec
mov
add
inc
popf
mov
or
rcll
fidivrs
pop
push
add
pop
dec
popa
popl
sub
jns
fdivrp
ret
rolb
sub
mov
rorb
and
adc
mul
cmpsb
sbb
add
pop
add
sbb
cmc
repnz
outsb
xlat
jle
cmpsl
loope
mov
push
das
xchg
jb
pop
add
push
or
ljmp
ror
xchg
sbb
inc
mov
cli
into
dec
aad
and
sbb
jg
dec
add
mov
jle
pop
in
jmp
movl
add
push
pop
loop
mov
cmc
test
push
repnz
lret
inc
mov
xlat
add
sub
mov
arpl
lret
jecxz
scas
mov
xor
xchg
scas
sub
mov
and
hlt
inc
mov
lret
xchg
xor
sub
sub
test
sarl
mov
mov
dec
shr
lret
scas
mov
std
in
sub
jge
pop
push
cmp
repnz
mov
lahf
sbb
fnsave
or
loope
mov
addl
arpl
jnp
std
repz
outsl
mov
in
push
pop
add
mov
leave
enter
xchg
push
pop
jns
push
sub
rcr
sub
add
jns
mov
mov
mov
lods
call
jns
xchg
adc
les
mov
stc
xchg
jns
xchg
push
mov
aas
addr16
mov
rcrl
in
push
pop
jno
inc
sti
mov
stc
sub
xchg
push
pop
jns
in
inc
jle
inc
cmp
push
inc
pop
jns
pop
cli
js
sub
jne
nop
or
xlat
mov
es
fisubl
cwtl
lock
enter
scas
xor
fnsave
mov
scas
mov
cmp
scas
lcall
iret
repz
inc
cltd
pop
xor
enter
pop
stc
xchg
sahf
mov
pop
or
jno
pop
xchg
push
pop
jns
adc
in
push
adc
sbb
push
pop
jns
dec
cmc
call
lock
push
icebp
pop
jns
xchg
test
dec
jb
loop
pop
push
mov
cmpsb
mov
gs
fndisi(8087
std
mov
sub
movlhps
add
stos
ret
jmp
xlat
pop
stc
repnz
out
push
cmp
xlat
fiaddl
pop
js
in
push
xchg
sbb
pop
cmpsb
push
daa
in
push
pop
sub
sub
push
test
pop
jns
ja
mov
push
mov
popa
fwait
inc
mov
jmp
mov
mov
sub
clc
outsl
subl
sub
pushf
xchg
pop
movsl
jl
sbb
mov
xchg
loop
fs
mov
jge
repnz
xchg
mov
jecxz
xor
and
lret
mov
add
adc
shrb
pop
insl
and
jb
fwait
add
xor
or
push
rcll
xchg
arpl
fdiv
outsl
sub
mov
xor
sbb
mov
add
dec
xor
xchg
mov
pop
and
lret
xchg
sub
lcall
bound
fists
mov
js
pop
add
scas
mov
adc
ret
addr16
scas
xlat
pop
in
scas
mov
or
hlt
mov
mov
pop
inc
jo
lahf
iret
mov
cmp
popf
push
shlb
cmpb
cmp
inc
mov
pop
sub
pop
ss
rorb
push
hlt
mov
cld
xchg
jle
repnz
jge
adc
pop
mov
out
scas
fdivr
xor
scas
lods
sbb
and
jnp
popa
popa
mov
insb
sub
mov
rcr
imull
shrb
bound
sahf
xor
mov
scas
mov
loope
lret
jmp
shrl
scas
mov
and
mulb
or
inc
mov
inc
stos
pop
pop
icebp
add
out
lret
sub
dec
addr16
cmp
mov
lahf
sbb
data16
ljmp
mov
or
sbb
jns
subb
xor
fisttps
mulb
mov
pop
gs
in
lahf
pusha
iret
in
xor
xchg
push
pop
jns
stos
inc
mov
and
pop
jns
sbb
fstl
push
out
jge
das
iret
pop
jns
xchg
mov
imul
sbb
xchg
push
xchg
cltd
push
pand
mov
lret
mov
ret
sti
aam
jae
scas
mov
fwait
test
mov
data16
jecxz
mov
adc
lock
jmp
in
jg
xor
pop
mov
iret
or
jns
ds
lret
xor
dec
mov
repnz
jno
xor
das
push
push
inc
outsb
mov
jns
xchg
sub
sub
pusha
inc
stos
repz
xchg
ja
jmp
dec
int
sbb
xchg
push
pop
sub
push
test
les
fmulp
pop
and
adc
sbb
pop
jns
xchg
dec
pop
and
sub
fstl
xchg
rorl
inc
fistpll
cmp
jb
stos
lea
inc
push
fs
sar
mov
hlt
subl
dec
mov
lret
pop
loop
mov
inc
cmpsb
jp
enter
lret
mov
xor
or
mov
mov
int
iret
in
xor
xor
ret
repnz
push
scas
leave
and
aam
or
psubusb
das
xchg
xor
push
scas
mov
sbb
mov
stc
mov
lret
out
xchg
push
mov
lret
sbb
fwait
adc
sbb
or
shl
pop
and
scas
mov
mov
push
aad
movsl
dec
scas
mov
mov
add
out
mov
cltd
mov
cltd
out
iret
jno
mov
repnz
xchg
or
and
xor
mov
jns
jecxz
adc
hlt
fsubrs
jg
mov
aas
shrl
jb
xchg
mov
push
in
inc
or
out
fwait
in
aas
repnz
lret
pop
outsb
nop
xor
sbb
sbb
sub
xor
lock
repz
adc
scas
mov
ffreep
loope
pusha
jne
xchg
test
lret
mov
sti
push
insl
sahf
and
mul
out
push
ret
jbe
int3
xchg
or
fiaddl
pop
lock
les
inc
jno
int
mov
cmp
pop
mov
xor
xchg
sbb
lret
inc
jp
lods
and
jae
lret
mov
lods
mov
addb
pop
jno
scas
mov
out
mov
aas
shr
sub
scas
mov
xchg
arpl
int
xor
sti
in
sub
cmp
jne
sub
iret
sub
pop
cld
push
jmp
mov
push
mov
test
mov
xchg
in
cmp
or
cmpsl
dec
xchg
xor
mov
scas
mov
test
ds
lahf
sub
mov
aas
or
dec
lock
mov
sbb
inc
cs
sub
cmp
sbb
push
cmp
scas
mov
stos
xor
gs
jmp
xchg
ja
xchg
sbb
repz
lock
push
pop
jns
add
add
inc
push
push
mov
fcompl
in
cltd
movsb
fidivrl
lret
pop
lret
iret
int
mov
xchg
push
mov
fcom
imul
push
push
repnz
fimuls
push
mov
sub
pop
cmp
mov
mov
icebp
sbb
es
dec
repnz
in
xor
jmp
test
scas
mov
iret
cwtl
fdivs
scas
mov
xor
cmp
ss
jo
and
dec
aas
inc
scas
push
jl
sub
pop
jns
orb
xlat
mov
and
push
jne
pop
fldenv
ret
in
in
push
pop
in
into
cwtl
out
stos
stc
push
lds
xchg
push
pop
jns
adc
enter
cmp
jns
outsl
popa
adc
out
out
jns
fstl
movnti
add
xchg
push
pop
xchg
cs
cmpsb
sbb
push
iret
ja
pop
jns
jge
add
and
or
jb
xchg
mov
push
pop
xchg
jg
xchg
push
fdivrp
fdivr
orb
lret
call
push
pop
jns
jns
movsb
jecxz
lcall
push
pop
jns
out
and
mov
and
cli
scas
lock
xchg
xchg
fdivr
popa
out
dec
cmp
repz
je
inc
insb
aad
das
inc
lcall
scas
pop
stc
dec
cs
mov
aas
mov
pop
jns
xchg
sbb
mov
imul
in
push
push
add
fdivl
or
in
push
pop
push
test
seto
dec
in
xchg
ss
pop
jns
dec
fmul
shrb
adc
call
out
es
jns
xchg
add
mov
ja
pushf
jno
repz
sub
loope
fsub
xchg
lds
push
pop
jns
mov
push
add
add
das
out
stos
nop
test
and
rcrb
lock
scas
fcompl
mov
cmp
dec
push
jbe
aas
sbb
fwait
repnz
mov
ficompl
push
jmp
sub
shlb
imul
jmp
outsl
lret
jg
adc
ja
rcrl
sub
js
popf
add
pop
sbb
enter
inc
test
lock
cld
stc
and
xchg
cmpb
lahf
aas
jg
ja
repz
test
cld
stc
repz
rorl
adc
popf
xchg
push
fidivrs
lcall
test
mov
repnz
fldcw
inc
add
ja
js
movsl
lret
push
pop
ret
lods
mov
in
dec
pop
and
jns
xchg
ja
repnz
movsb
scas
cmp
sub
xchg
push
pop
push
push
lret
mov
mov
fdivr
jb
cmp
fwait
push
scas
cs
inc
push
push
jns
xchg
ja
xchg
out
xchg
imul
lods
mov
xchg
push
pop
cmpsl
cmc
push
lahf
es
xchg
push
pop
jns
or
or
ficompl
iret
icebp
lret
mov
push
dec
in
out
jns
cld
stc
repz
pop
pusha
cmp
push
scas
or
insb
mov
subb
cld
enter
scas
test
sbb
cld
les
pop
mov
pop
out
lea
popa
and
lret
fs
pop
addr16
xchg
cmp
mov
sub
adc
stc
sar
imulb
scas
mov
imul
pop
mov
mov
in
dec
rcr
negl
je
xchg
push
fidivrs
push
leave
mov
cltd
dec
xor
aad
xchg
push
pop
jns
aad
mov
shrl
repz
pop
jns
insl
dec
mov
loop
or
push
xchg
in
insl
cld
rcrl
mov
test
pop
mov
jge
fstps
xchg
push
pop
jns
jl
outsl
fld
popa
loopne
in
hlt
mov
push
pop
jns
push
push
rorb
mov
repnz
pop
jns
xchg
mov
jno
scas
call
mov
xchg
push
nop
dec
and
test
inc
mov
call
mov
es
mov
cmc
xorps
std
repnz
iret
sub
repnz
or
das
mov
mov
mov
mov
rcll
lods
xchg
xor
sub
push
rcll
sub
in
sub
xor
insb
aas
jg
rcl
lods
mov
pop
call
cmp
xchg
xchg
es
ficomps
push
loopne,pn
lock
into
cld
adc
in
pusha
xchg
test
xchg
dec
xor
lods
shrb
repnz
cmp
mov
mov
adcb
pushf
push
jns
pusha
imul
lahf
test
pop
cmpsb
mov
mov
sub
outsb
xchg
push
pop
jns
push
loope
sbb
inc
add
dec
ret
jns
and
lret
mov
inc
cmc
lea
stc
cld
stc
repz
outsb
or
cmc
sub
jns
or
test
inc
movsb
cmpsb
mov
or
fists
and
lret
iret
jecxz
adc
call
lret
mov
sub
mov
out
jle
repnz
inc
fildll
jmp
movsl
adc
popa
or
ds
jo
dec
std
int
cmp
lods
addb
sub
fwait
inc
fs
mov
lret
lret
test
jne
leave
pusha
in
sti
push
inc
es
xlat
mov
fbstp
dec
sbb
repnz
jnp
test
jmp
pop
cmp
push
inc
ret
inc
xchg
neg
popf
cmp
repnz
ret
and
and
rorb
pushf
mov
fsubrp
mov
movsb
dec
cmpsb
fadds
xor
xchg
loopne
pop
xor
call
aas
lret
push
ds
xchg
arpl
mov
push
into
or
pop
pop
int3
jge
push
lret
jle
xchg
mov
out
out
aaa
push
mov
xchg
adc
push
decl
jmp
mov
and
pop
into
into
or
jle
dec
cmpsw
repnz
lret
sub
popa
cmp
pop
rcl
js
lret
mov
ss
scas
dec
adc
mov
fisubrs
add
xchg
xor
mov
lods
lock
push
add
push
or
push
mov
out
leave
mov
testb
sahf
stc
repz
xchg
fimuls
and
jg
cld
arpl
ficomps
out
xchg
sub
jecxz
out
lahf
nop
adc
insb
in
cmp
cld
stc
out
xor
mov
xor
lahf
aas
mov
xchg
shll
rorl
pop
pop
jns
fsubrl
inc
lret
stos
sbb
fsubrp
lret
sub
xchg
jns
mov
cmpsl
orps
push
mov
in
push
sbb
mov
aas
mov
push
pop
pop
std
std
and
out
in
loope
dec
loopne
outsl
xor
lret
inc
adc
xchg
arpl
repnz
in
stos
ffreep
mov
loopne
push
loopne
sti
in
mov
or
cli
mov
dec
xor
mov
pop
sub
jo
mov
push
scas
mov
out
in
insb
mov
movsl
mov
int
or
lods
add
pop
je
xchg
mov
aas
aas
ret
movb
add
je
out
lahf
fstpl
shll
mov
stc
mov
lods
shrb
jo
cmp
outsb
dec
in
das
push
mov
jle
dec
jmp
adc
push
pop
jns
test
test
aad
jns
cmpsb
lds
lahf
lock
les
push
rcrl
shll
xor
push
adc
in
repnz
jle
cmpsl
and
scas
or
les
xor
sub
pop
inc
cwtl
test
jge
or
mov
in
lds
in
ud1
das
subl
sub
xchg
gs
test
repnz
xchg
iret
cmpsl
in
shrl
arpl
imul
addr16
icebp
inc
mov
out
jle
repnz
mov
and
pop
adc
das
sbb
xchg
sub
in
xor
adc
jg
ds
in
push
les
push
mov
cmp
loopne
jle
adc
xchg
mov
adc
jg
cmp
mov
dec
dec
sub
movsl
sub
jp
lret
dec
jg
lds
aas
mov
jns
mov
pop
mov
repnz
lret
sub
insl
pop
enter
cmp
popa
mov
mov
and
cmp
jae
cmp
mov
into
cmp
int3
mov
mov
iret
jns
lret
fwait
jnp
xor
mov
sub
sub
sbb
xor
mov
scas
mov
inc
xor
es
scas
pop
sbb
dec
xor
mov
ret
lock
mov
cmpsl
mov
repnz
test
sub
adc
sbb
pop
pusha
xchg
mov
test
dec
mov
outsl
cmc
adc
cwtl
ljmp
mov
fidivl
xchg
pop
outsb
adc
jns
xchg
shl
test
sarl
cs
and
stos
add
pop
add
push
in
ja
outsl
cmp
out
mov
cmp
scas
dec
inc
ljmp
pop
out
clc
in
ja
cltd
push
cltd
loope
mul
cmp
out
insb
in
inc
aaa
pop
out
lock
and
mov
loop
xchg
testl
xor
repnz
xchg
sub
push
jp
ljmp
lret
mov
add
clc
mov
scas
mov
out
out
inc
xlat
nop
popa
dec
in
mov
and
inc
outsl
xchg
push
pop
jns
push
and
xor
pop
jns
push
pusha
mov
jns
dec
bound
test
pop
jns
xchg
fldcw
aad
jle
xor
ret
jns
xchg
push
sub
insl
mov
push
pop
outsb
mov
ficoms
dec
xchg
ja
xchg
jne
add
fcmovu
dec
pop
cmc
sbb
adc
ds
sbb
enter
cmc
and
in
mov
jmp
sti
les
ljmp
int3
pop
in
sub
mov
jl
pop
scas
mov
mov
dec
lret
aas
jle
sbb
das
jg
sahf
xchg
cld
scas
repnz
lahf
aas
jg
lret
adc
mov
pop
mov
out
lret
js
xchg
and
mov
add
cmp
sub
mov
gs
and
sub
lds
ret
into
xchg
int
popf
inc
scas
mov
and
xor
test
cwtl
jg
mov
outsl
ja
scas
ja
cmp
mov
jnp
out
lahf
aas
adc
lea
add
inc
xor
mov
daa
stos
call
repnz
mov
aad
repnz
aad
and
pop
pop
and
ja
add
test
int
dec
int
mov
or
call
inc
movsl
ss
das
cmp
stos
ret
inc
inc
mov
lds
mov
jecxz
sub
mov
jg
out
lahf
repnz
mov
sbb
into
mov
or
pop
jns
cmp
push
cmpsl
addl
ja
das
sbb
xor
mov
and
mov
mov
repnz
lods
xor
sbb
inc
insb
dec
call
sub
jg
test
jecxz
repnz
js
jecxz
outsl
fisubrs
sbb
pop
pop
scas
lret
mov
jle
push
xchg
sbb
shlb
xchg
rorl
mov
sar
or
test
lods
jne
pop
push
lea
rclb
add
pop
test
cmp
mov
cld
adc
mov
dec
dec
xor
es
into
mov
xchg
setle
jb
inc
lahf
aas
jg
cmp
push
add
std
jl
cmpsl
loopne
or
iret
rclb
sahf
push
sub
add
jns
test
mov
push
mov
out
jle
nop
push
arpl
mov
scas
inc
sti
mov
scas
mov
sub
popf
call
sbb
repnz
fidivrl
mov
push
repz
sub
fists
push
mov
cmpsl
inc
std
xchg
push
fsubp
mov
daa
xchg
push
fcoml
dec
push
pop
jns
cmp
dec
xchg
sub
sbb
xchg
mov
popf
insb
cmp
xchg
xadd
xchg
push
prefetch
jecxz
incb
in
push
pop
sub
mov
xchg
rcrl
pop
pop
mov
adc
lahf
add
cmp
dec
mov
sbb
stos
dec
subb
jle
iret
mov
push
mov
ljmp
aam
stc
adc
es
or
sub
idivl
repz
sub
stos
mov
mov
movsl
jge
repnz
outsl
insl
loopne
push
mov
loop
cmp
incl
das
lcall
xorl
out
lahf
sbb
jecxz
into
pop
mov
sub
adc
jns
cld
das
add
mov
lret
int3
jg
jecxz
ss
jle
lret
mov
xchg
add
clc
and
mov
push
shrb
pop
scas
mov
mov
fsubl
lret
sub
repnz
xchg
mov
repnz
jecxz
outsl
inc
mov
out
mov
insl
pusha
repnz
jns
and
sub
lret
pop
jecxz
mov
or
sub
fidivs
mov
cmp
or
mov
dec
xor
or
push
mov
mov
lret
lods
lcall
pop
scas
or
jmp
icebp
pop
sbb
scas
mov
mov
mov
scas
mov
out
nop
xor
stc
mov
sub
in
adc
jo
sbb
test
lret
fistl
xorb
dec
sub
cld
adc
frstor
loope
add
addr16
xchg
iret
lahf
aas
jg
in
outsl
sahf
rcrl
adcb
test
pop
sar
sahf
sub
adc
leave
in
push
pop
sub
adc
mov
lahf
xchg
push
pop
jns
int3
mov
add
push
pop
ds
ret
fildll
push
lahf
add
repnz
repz
out
push
pop
mov
std
dec
ficomps
lods
pop
lahf
dec
std
bound
inc
push
pop
jns
mov
les
xchg
inc
idivl
xorl
bound
pop
jns
xchg
fsubrl
nop
sbb
imul
dec
cmc
fmul
fbstp
lret
push
and
mulb
cmp
je
pop
sub
push
mov
xchg
leave
pop
and
sub
scas
mov
pop
fdivs
xchg
and
lret
jne
push
addr16
mov
lcall
outsb
sbb
pusha
xchg
xchg
mov
sub
or
xchg
fs
insl
das
int
xchg
bound
dec
push
negb
lahf
mov
inc
adc
aas
ret
lahf
xchg
push
int3
outsb
arpl
add
aas
stos
in
cwtl
rol
aas
outsb
xor
rcll
std
jge
movsl
stc
jg
jnp
pmulhuw
lods
pop
jns
inc
icebp
lret
cmp
fstps
dec
dec
iret
dec
test
sub
mov
jmp
inc
icebp
sub
push
fmulp
sub
cli
mov
outsl
hlt
xlat
dec
jno
pop
and
pop
jnp
lret
insb
scas
mov
inc
mov
rorl
mov
fnsave
loop
dec
ds
repnz
mov
sbb
idivl
jg
or
mov
mov
mov
adc
adc
aam
cmp
fstp
lret
push
mov
mov
add
cmc
out
mov
mov
cld
shll
jmp
lret
fildll
outsl
inc
iret
iret
jb
xchg
mov
inc
testb
rcrb
aas
int
arpl
outsl
ror
mov
outsl
cwtl
imul
jge
lods
ljmp
mov
enter
lcall
ret
in
push
pop
inc
std
mov
aam
sarl
pop
pop
jns
sbb
or
cmp
pop
pop
jns
xchg
sub
js
shrl
loope
push
fiadds
pop
rclb
mov
ret
sbb
aas
ret
jae
pop
orl
inc
inc
fstpt
bound
jle
outsl
or
sbb
sub
mov
iret
mov
lds
mov
xchg
pop
stos
jmp
pop
fdiv
lret
outsl
js
pop
mov
adc
adc
lret
mov
sub
lock
ret
mov
dec
or
sbb
lar
pop
jns
or
mov
jge
and
xchg
pop
dec
push
sub
in
mov
pop
inc
inc
pop
lods
arpl
loopne
and
xchg
jecxz
adc
stos
xchg
sub
stos
aad
rcrb
lock
xchg
ja
pop
xchg
dec
roll
arpl
fisubrs
cld
cld
stc
xchg
ds
aaa
ret
pushf
jle
push
iret
lahf
aas
scas
stos
jae
lea
ror
in
jp
ds
repz
loop
pop
bound
nop
ret
cld
stc
out
push
cli
dec
push
jbe
sub
add
pop
out
lahf
aas
jg
ret
add
outsb
pushf
out
or
cld
stc
repz
pushl
sub
dec
shl
xor
mov
lahf
aas
jg
in
and
loope
mov
lock
lret
out
add
subl
rcrl
pop
ljmp
fdivrp
adc
and
add
xchg
dec
mov
xchg
and
mov
lret
jg
sar
mov
imul
imul
mov
jne
xchg
repnz
aaa
sbb
shrb
sbb
add
and
jb
mov
sbb
fdivrl
aas
sbb
sbb
mov
mov
sbb
sbb
test
dec
sbb
and
sbb
sbb
das
sbb
sbbl
sbb
or
pop
sbb
jmp
gs
jg
mov
pop
xchg
lcall
sbb
enter
sbb
jmp
lods
outsb
sbb
outsl
into
aas
sbbb
sbb
sbb
jb
dec
scas
fmuls
sahf
outsl
sbb
cli
jo
ret
sbb
loopne
xor
in
mov
aas
sbb
shrl
pop
pop
outsb
jns
sbb
cmc
loope
xchg
sbb
sbb
lret
mov
cmp
out
sbb
sbb
or
inc
jo
ret
sbb
sub
out
fildll
cli
jo
leave
sbb
sbb
loopne
sbb
cmp
iret
sbb
xchg
pop
push
out
sbb
loope
adc
lods
sub
cli
jo
enter
mov
sbb
sbb
add
adc
rcrb
fdivr
jo
out
sbb
sbb
or
pop
jp
jge
sbb
sbb
in
pop
fcompl
sbb
pop
mov
or
rcrb
fcompl
mov
lahf
testb
test
sbb
sbb
mov
push
jo
iret
sbb
or
test
sbb
pop
outsb
cmp
dec
pop
xchg
sbbb
cmc
fdivl
sbb
sbb
ret
mov
sahf
jo
fistps
and
xchg
sbb
sbb
mov
loopne
sbb
sbb
mov
pop
lahf
cld
repnz
add
loopne
add
sbb
sbb
cmp
fistps
xchg
pop
pop
scas
sbb
pop
mov
sbb
outsb
cmp
outsb
sbb
sbb
xchg
pop
movq
pop
mov
sbb
outsb
jns
outsb
sbb
sbb
xchg
pop
pop
nop
add
sbb
dec
mov
mov
pop
iret
sbb
sbb
loopne
test
sbb
sbb
cmp
aas
sbb
jo
inc
out
sbb
out
mov
es
mov
pop
sbb
sbb
pop
mov
jg
lcall
xchg
pop
sbb
loopne
and
aas
mov
adc
es
mov
pop
ret
xchg
mov
jge
cmc
loope
out
sbb
sbbb
sbb
sbb
mov
dec
sbb
mov
ljmp
shrl
pop
dec
lahf
sbb
sbb
shrb
fnstsw
sbb
sbb
iret
xchg
pop
outsb
pop
push
outsb
sub
daa
fdiv
test
sbb
shrb
push
outsb
pop
dec
sbb
adc
jp
sbb
sbb
mov
fistps
pop
outsb
cmp
sub
pop
test
pop
sbb
adc
jg
aas
xchg
pop
jo
lahf
sbb
mov
loope
sbb
sbb
into
lahf
add
je
inc
sbb
ret
lods
bswap
sbb
sbbb
sbb
sbb
push
fdivl
daa
mov
iret
outsb
jns
sub
sbbb
sbb
fdivl
sbb
loope
test
mov
sbb
sbb
mov
out
lahf
and
mov
lahf
sbb
add
dec
sbb
jo
or
dec
sbb
sbbb
sbb
in
xor
outsb
sbb
lcall
sbbb
sbb
add
nopl
mov
sbb
jo
sbb
sbb
loopne
xchg
pop
sbb
sbb
pop
mov
out
sbb
inc
outsb
pop
ret
sbb
sahf
jb
dec
sbb
mov
xchg
sbb
sbb
mov
iret
sbb
pop
outsb
jge
sbb
fdivl
sbb
sbb
mov
iret
sbb
lret
pop
sbb
nop
pop
movd
sbb
xor
xor
mov
sbb
sbb
jb
leave
sub
xchg
pop
push
iret
sbb
jmp
lods
out
jg
fbld
mov
push
fimuls
add
fbstp
pop
subb
push
cltd
xor
or
and
xchg
fsubrs
out
jle
xchg
inc
imul
xchg
addr16
mov
mov
dec
mov
mov
adc
jo
lret
je
rorl
jns
xchg
stmxcsr
xchg
das
scas
mov
loope
inc
fldl
addr16
pop
jns
loope
dec
jb
aaa
xchg
mov
pop
jns
xchg
insl
int3
mov
or
xor
xor
jns
xchg
push
push
push
cmpsb
push
imul
adc
ret
xchg
push
pop
out
push
hlt
cmp
xchg
icebp
lods
fdivrp
jge
fnsave
inc
sbb
xchg
call
ror
aad
or
test
jp
in
lret
mov
mov
subl
jns
cld
or
and
ret
sti
andb
and
aas
jg
jg
adcb
xchg
cld
stc
repz
popa
pushf
gs
cmp
iret
mov
lds
push
fidivrs
cmp
xor
pop
jns
lret
push
and
pop
fisttpll
cld
and
in
push
push
mov
dec
lods
inc
adc
xor
xchg
push
pop
xor
in
out
pop
pop
sbb
ret
hlt
lret
sarl
scas
pop
dec
inc
xor
out
push
cs
shrb
aam
cmpl
std
repnz
inc
fists
out
dec
inc
mov
stc
aas
xchg
lds
movsl
pop
rolb
mov
mov
mov
mov
mov
jp
and
and
adc
xchg
ret
fsubrp
sbbl
pop
jno
mov
ds
mov
lahf
aas
mov
ret
clc
mov
dec
stc
stc
repz
clc
popa
push
jnp
xchg
sub
lods
pop
mov
inc
push
imul
out
aaa
aas
jg
pop
das
aad
lret
call
inc
repz
lahf
xchg
sbb
mov
mov
pop
out
jg
cld
stc
jge
fsin
mov
jmp
sub
mov
out
lahf
aas
jne
pop
jmp
lcall
repz
cmp
mov
lods
aas
cs
ja
jl
mov
testl
sbb
fidivrs
in
inc
arpl
pusha
xchg
scas
xchg
ret
test
lahf
aas
add
mov
scas
dec
jo
sbb
add
stos
or
leave
mov
dec
jne
xor
cld
xchg
out
lret
lods
sbb
aas
jg
shll
mov
in
jnp
dec
mov
rolb
fs
sbbb
js
out
repnz
pop
jle
cmp
in
scas
jb
xor
ds
sahf
test
mov
fcmove
lahf
aas
jg
das
jb
shll
add
cmp
xchg
loop
sbbb
ljmp
sbb
in
pop
jae
pop
cmc
out
scas
mov
mov
mov
repz
and
mov
dec
rclb
fisttps
pop
jns
xor
add
clc
das
in
div
in
out
in
fcmovnbe
or
psubd
xchg
icebp
push
cmp
in
ja
std
lea
int3
mov
xchg
sbb
test
push
pop
aaa
cwtl
mov
movsl
loop
subb
popl
push
fwait
or
scas
mov
add
push
cs
push
sbb
repnz
push
popf
jg
pop
cmpsl
cld
and
pop
aad
lret
sub
cltd
mov
lock
pop
bsf
sti
in
lds
fistpll
subl
inc
sub
scas
cmp
movsb
adc
add
in
push
fimuls
cmp
xchg
cmc
repz
push
fdivrp
jb
xor
cltd
stc
cmp
divb
lock
mov
mov
das
mov
mov
lret
lahf
test
jmp
sub
test
cmp
repnz
fwait
andl
repz
clc
aad
out
out
orb
lds
out
out
clc
enter
push
dec
dec
shlb
cld
stc
repz
jbe
ss
in
pop
aaa
pusha
daa
xchg
push
xor
xchg
xchg
ja
jle
cmp
cmp
test
bound
pop
jns
gs
je
lds
mov
mov
xchg
test
xor
jp
repnz
mov
ss
lret
lahf
int
fildl
cs
mov
inc
jbe
stos
xor
mov
and
sbb
pop
jns
dec
ds
push
es
push
filds
xchg
orl
adc
into
pop
cli
push
aam
rorb
jge
leave
adc
xchg
mov
test
clc
or
mov
push
cmp
add
pop
push
mov
push
jnp
xchg
sbb
repnz
lret
test
jl
lret
loope
int
cmp
mov
and
scas
mov
sbbb
add
and
pop
pop
jns
outsl
inc
push
imull
cmpsl
daa
cmc
js
dec
iret
lahf
pop
or
scas
jmp
stc
repz
sbb
cmpsl
jp
mov
mov
out
jle
movsb
mov
dec
sbb
out
xor
sti
pop
cmc
or
repnz
pop
clc
imul
mov
xorl
add
inc
fdivs
pop
add
arpl
aas
in
das
aas
sbb
outsb
dec
pop
push
repnz
scas
cld
das
mov
pop
mov
bswap
sub
mov
lea
mov
cltd
jne
out
int3
mov
out
int
push
iret
aas
mov
aad
mov
mov
out
jns
mov
pop
mov
bnd
sub
leave
sahf
mov
or
lret
and
dec
add
push
dec
xchg
jle
mov
pop
jns
mov
fsubs
inc
and
jns
clc
shl
dec
int3
cld
sbb
loope
popa
or
and
push
pop
mov
mov
ja
inc
test
js
mov
push
pop
jns
test
loopne
jb
cwtl
dec
out
ss
pop
jns
cmp
and
sbb
dec
shlb
out
out
shrb
imul
in
sub
cld
stc
repz
jmp
inc
mov
lahf
aas
jg
fidivs
mov
or
mov
leave
pop
repz
ret
scas
int3
pop
pmulhw
fimuls
lcall
mov
rcll
lret
lea
mov
mov
int3
out
mov
frstor
leave
cmc
aas
repnz
sub
cmpsl
test
movsl
mov
aad
lock
das
xchg
jne
dec
jbe
lcall
dec
sti
jnp
pop
push
test
pop
lahf
push
sbbl
fwait
cld
in
push
pop
push
leave
cltd
stc
test
addr16
jl
js
push
pop
jns
call
jne
test
jb
push
pop
jns
jmp
movsb
mov
shll
mul
xchg
fidivl
out
aas
imul
jp
xor
jle
lods
sti
xchg
shlb
lret
iret
lahf
aas
and
sbb
sti
iret
lahf
jg
xchg
push
movsl
xchg
xchg
movsl
hlt
enter
out
and
sub
mov
iret
scas
or
ffree
or
dec
mov
push
pop
inc
in
jle
hlt
idivl
jl
mov
out
push
stc
repz
sbb
mov
pusha
insb
jmp
sahf
pop
fidivrs
or
int
mov
jge
jns
xchg
ja
push
lock
jae
xlat
andl
push
pop
mov
popa
ds
fwait
das
push
pop
jns
mov
loope
pop
mov
syscall
lret
pop
xlat
es
add
jns
xchg
ja
pop
outsb
fistpll
sub
aas
in
push
pop
jg
imul
push
ret
std
and
jge
lds
dec
gs
jmp
cld
and
sub
mov
inc
imul
push
pop
lahf
pop
jle
sti
or
lock
iret
das
lock
cmpsl
into
jle
add
pop
push
loope
in
cmpsl
insl
xchg
sub
incl
mov
inc
pop
fsub
cltd
jg
mov
cmp
xchg
push
ficomps
push
push
cmp
test
inc
mov
ja
pop
jns
mov
das
sub
test
lret
xchg
das
add
sahf
push
cmp
fbld
lcall
jne
xor
dec
jg
pusha
push
fidivs
fistps
pop
and
in
jge
jns
aas
nop
or
notl
xchg
push
mov
movsl
loop
stos
in
mov
iret
adc
test
out
and
ja
iret
xchg
jg
xor
movsb
add
or
cli
in
xchg
add
and
lds
dec
mov
sti
test
pop
mov
sbb
dec
dec
mov
out
jg
fcoml
lret
lods
movsl
adc
or
jns
and
mov
iret
push
push
bnd
subb
icebp
sub
mov
sub
pop
pusha
sub
out
push
push
xor
insl
cld
fldt
push
sbb
in
in
ret
imul
lret
lcall
sbb
pop
xchg
jmp
mov
std
scas
cmp
add
jno
mov
mov
push
dec
and
pop
jg
cmpl
in
enter
pop
repnz
outsb
in
iret
lahf
lea
ss
es
sbb
stc
add
add
fidivrl
mov
fnsave
aas
jg
cmp
dec
data16
pop
mov
in
outsl
loopne
mov
out
insb
loope
dec
pop
jns
in
into
call
inc
fldenv
cld
mov
xchg
ja
cld
add
adc
movsl
push
cld
stc
and
push
xor
pop
adc
test
jle
push
push
mov
decb
dec
mov
xchg
adc
mov
cmc
in
push
pop
cmp
cli
and
xor
repz
jb
scas
mov
xchg
cmp
cmpsb
imul
adc
outsl
cmp
xchg
inc
lock
mov
scas
pushl
popf
rdtsc
test
or
lret
clc
ds
nop
outsl
jbe
xchg
ja
mov
jo
pop
inc
or
repnz
jnp
or
fcmove
out
push
jl
cld
stc
mov
and
ret
mov
pop
mov
jb
jg
scas
das
out
dec
mov
sub
inc
mov
mov
lret
push
insl
rcr
jmp
lahf
xor
std
or
shrb
sub
shll
and
stc
sahf
xor
mov
cld
jno
jne
lahf
aas
jg
fwait
js
cmp
test
scas
cwtl
out
icebp
repnz
inc
es
mov
lahf
ret
pop
pop
gs
adc
push
popf
daa
xor
shlb
mov
bnd
mov
mov
jg
jle
cwtl
icebp
sahf
pop
add
jmp
repz
lahf
add
hlt
jae
arpl
cld
stc
cmpsl
xchg
shrb
sbb
std
push
mov
push
lahf
push
cmp
push
clc
mov
bound
pop
pop
jns
mov
adc
mov
or
push
arpl
lock
xchg
mov
addr16
iret
jae
adc
lahf
incb
jl
push
mov
fmul
cmp
scas
iret
lahf
aas
jg
pop
jmp
xchg
jmp
cli
dec
inc
jns
xchg
out
bound
pop
seta
loopne
das
push
pop
shl
push
loope
add
push
mov
aas
jg
lods
mov
jecxz
cmc
das
sub
out
lret
iret
pop
lss
pop
lock
dec
aam
cli
in
jae
push
das
test
jmp
adc
cld
push
lret
ss
xorl
xchg
popf
out
jle
lret
iret
lahf
xchg
call
push
xchg
ljmp
call
pop
mov
mov
cmp
xlat
push
pop
mov
pop
xchg
jno
or
cmp
adc
jge
jge
mov
iret
dec
mov
add
ret
and
mov
aas
jg
cld
mov
mov
mov
outsl
or
ret
or
mov
lret
pop
fsubp
cld
stc
repz
ret
lods
or
js
sti
imul
inc
lahf
aas
jg
lahf
add
clc
jp
in
push
and
inc
adc
xadd
mov
push
and
inc
stos
dec
pop
jns
in
adc
jno
popa
into
addr16
mov
add
into
cmpsl
pop
dec
ficoms
jns
xchg
cmp
sub
movsb
push
pop
jns
fadds
adc
loop
out
lods
aad
add
jp
sbb
push
iret
test
push
pop
jns
int3
mov
mov
lcall
repz
negl
sub
or
dec
fld
gs
lret
rclb
add
push
shlb
into
test
call
push
gs
out
sahf
xor
xchg
push
inc
lods
pop
sub
jo
pop
pop
push
stos
xchg
push
pop
or
mov
fcoml
jbe
xchg
push
pop
jns
inc
lahf
test
test
xor
push
pop
jns
jbe
mov
cld
or
test
xor
aaa
mov
das
or
push
mov
xchg
and
push
ljmp
cltd
iret
mov
lahf
in
shrl
inc
enter
mov
jle
fnstenv
inc
fildll
scas
mov
jecxz
sarb
mov
mov
xchg
sarl
clc
aas
and
repnz
clc
jo
dec
mov
mov
aas
jae
xchg
ror
xorb
lahf
pop
loop
nop
lcall
outsb
test
lret
out
rorl
jecxz
pop
mov
jnp
cmpsl
scas
imul
in
out
cmp
out
mov
mov
int3
inc
leave
dec
pushw
pop
and
scas
xchg
mov
stos
pop
inc
pop
aas
mov
inc
push
mov
xchg
inc
test
iret
lahf
rclb
ret
xor
iret
les
bswap
or
cld
stc
repz
insl
out
or
lahf
aas
jg
sahf
push
mov
mov
add
adc
cmp
xor
dec
and
xchg
mov
movsb
lret
sub
call
xlat
jb
div
std
jno
das
daa
jne
dec
mov
repz
pusha
inc
gs
inc
arpl
mov
push
add
cld
or
mov
data16
les
mov
lahf
add
lahf
mov
das
mov
add
ja
mov
sub
popa
lds
stos
es
xchg
push
pop
icebp
and
inc
dec
lods
sub
cli
lretw
sub
out
hlt
sbb
hlt
lahf
out
mov
xchg
push
fiadds
pop
cs
sarl
sub
loop
adc
jns
scas
gs
pop
jb
pop
pop
sbb
pop
jns
xchg
loope
push
scas
mov
mov
inc
pop
mov
in
cmp
das
jle
cmpsl
jno
repnz
rclb
adc
mov
sub
or
dec
mov
jmp
xchg
push
loopne
out
lahf
lcall
loop
mov
sar
cld
cmc
push
std
cmc
aas
hlt
hlt
pop
sbb
sbb
lahf
pop
inc
scas
mov
jns
inc
xor
stos
stc
stc
repz
xchg
jne
shlb
pop
mov
and
xor
dec
pop
jle
sub
pusha
adc
jnp
inc
sub
std
adc
xchg
sub
shlb
xchg
xchg
loopne
jmp
das
rorb
ljmp
stc
loop
enter
and
mov
push
nop
hlt
data16
fdivrp
scas
movsl
das
out
scas
icebp
adc
and
mov
ffreep
das
or
adc
out
into
testl
repz
aaa
loop
jg
icebp
imul
lods
and
xor
push
lret
dec
loop
inc
mov
rcl
cmp
stc
mov
mov
xor
cmpsl
js
cli
cmpsb
push
sub
sub
inc
mov
add
sbb
mov
out
jge
pop
stos
mov
jne
xchg
push
pop
jns
fld
iret
les
xchg
dec
adc
pop
jns
imul
add
shlb
lods
pop
jns
xchg
dec
fwait
ss
aam
es
or
shrb
push
adc
sti
mov
pop
stc
repz
pop
sub
and
or
jl
cmpsb
mov
cwtl
adc
pop
notb
cmp
in
push
ficomps
pushf
xchg
jmp
sub
jb
ret
pushf
mov
loopne
fnstsw
pop
jle
and
es
gs
in
ja
stos
pop
cmpsb
xlat
movsl
testl
pop
jne
leave
lret
hlt
out
mov
out
push
stc
xor
divl
stc
sbb
adc
adc
addr16
or
out
push
outsl
ficomps
pop
stc
xor
dec
adc
lahf
aas
jg
roll
cmp
pop
iret
dec
lds
and
inc
in
add
aad
inc
popf
pop
cld
mov
jl
psubsb
cmp
push
pop
jns
loop
push
pop
popf
test
jg
lcall
mov
nop
std
adcb
mov
outsl
loop
lret
xchg
push
fimuls
pop
subb
lock
push
pop
jns
push
mov
jno
lret
sbb
and
push
pop
jns
xchg
cmp
sti
jle
sub
push
loope
das
push
xchg
pop
or
push
aad
sbb
mov
repnz
addr16
test
stc
push
das
mov
adc
cmp
xchg
pop
pop
sbb
out
lahf
aas
push
jecxz
jb
ja
mov
jnp
repz
addl
test
lahf
iret
pop
mov
mov
shll
pop
stos
popf
inc
outsl
mov
sbb
add
dec
jne
mov
pop
scas
outsl
push
inc
push
mov
push
pop
jns
bound
mov
inc
push
test
cmp
jb
xchg
xor
leave
lret
cmp
mov
scas
mov
outsl
push
outsb
ss
test
xchg
iret
hlt
fidivs
mov
lcall
popa
shl
mov
dec
xchg
push
stc
repz
sbb
pop
aaa
sbb
js
out
mov
jg
pop
fs
mov
inc
movsb
lods
out
mov
mov
lahf
mov
or
dec
pop
mov
fcomp
into
cmc
jecxz
pop
ja
jg
testl
jnp
imul
pop
pop
jns
xchg
sti
mov
fnstcw
mov
push
add
fmull
lret
mov
dec
add
xchg
jg
mov
adc
aas
ja
fld
pop
xor
and
lret
xchg
push
lahf
imul
movsb
dec
frstor
aas
jg
add
sub
loope
xchg
daa
ror
pop
movsb
das
mov
les
xchg
imul
cmp
out
lret
pop
jecxz
cld
cld
stc
xchg
or
mov
xchg
xor
mov
sar
ret
and
pop
dec
pop
repnz
fidivs
lret
xlat
les
daa
pop
repnz
fildll
lahf
and
adc
xor
inc
mov
call
shrb
lea
repnz
xchg
clc
out
fists
sbbl
dec
ret
xchg
insl
jns
mov
iret
mov
xchg
add
jnp
and
fsubs
push
inc
lret
xchg
icebp
inc
xor
pop
mov
repnz
sbb
jae
mov
push
loop
inc
mov
mov
push
mov
fnstsw
xchg
lahf
aas
add
mov
stc
adc
sub
in
fistps
dec
mov
xor
repnz
pop
cmc
cs
aas
mov
movsb
fdivrl
inc
cld
dec
es
mov
in
inc
addr16
out
lahf
aas
test
popa
pop
jae
outsb
mov
cld
stc
repz
cld
inc
pop
add
cltd
pop
filds
jg
pop
lret
scas
lret
nop
cmp
hlt
lret
frstor
jno
cld
scas
mov
addr16
cmp
or
xchg
mov
lret
sub
stos
mov
push
xlat
lods
jl
stc
rep
call
lretw
popa
xchg
cld
sbb
mov
pop
pop
in
repz
lahf
ja
or
push
lret
insl
mov
push
ds
stc
lock
inc
sub
cld
daa
xchg
and
lret
dec
or
rorb
mov
outsb
sub
cmc
scas
pop
jp
adc
dec
in
mov
enter
mov
imul
jo
stos
push
in
lret
sub
outsl
iret
shl
lahf
fwait
jge
ret
clc
xchg
cli
pusha
stc
jbe
mov
mov
pop
sub
cli
mov
mov
cs
adc
jns
lcall
cwtl
mov
xchg
repnz
jno
adc
pop
scas
adc
in
push
mov
outsb
push
mov
divl
repz
std
daa
aaa
jb
dec
xchg
jl
lock
jl
cld
scas
mov
and
cmp
lahf
aas
adc
or
pop
repnz
div
in
stos
ret
fcmovnbe
inc
xor
cltd
nop
fcomip
scas
loopne
push
repz
outsl
dec
cmpsl
mov
pop
rorb
xchg
es
jge
je
daa
out
jecxz
scas
mov
inc
test
mov
mov
fcomps
js
or
pop
scas
fstpl
je
jb
les
mov
jns
imul
out
jle
adc
cmp
pop
or
mov
xchg
xor
loop
xor
aaa
xor
lods
fs
outsl
int3
sahf
add
loope
sub
popf
mov
sahf
stc
stc
repz
outsb
clc
stos
push
mov
mov
int
mov
insl
add
iret
mov
xchg
ds
pop
scas
mov
aas
cmpsl
fsubrl
inc
mov
mov
jp
xchg
lahf
aas
jg
mov
cmc
les
mov
or
iret
int3
in
push
xchg
and
or
jle
repnz
in
mov
ret
or
add
cmc
mov
mov
or
mov
scas
jg
inc
shll
addr16
pop
repnz
or
ljmp
mov
xchg
pop
pop
dec
lret
xchg
ja
xor
or
xor
repz
xchg
scas
pop
inc
rorb
fisubrs
aas
jg
inc
mov
sbb
arpl
xor
aad
sahf
stc
loope
incb
jg
xchg
sub
cmp
push
int3
xchg
test
testl
out
fists
iret
mov
in
inc
xchg
sub
sbb
in
mov
and
loop
mov
sub
call
out
iret
lods
iret
aas
call
pop
aaa
jo
cmpsl
cmovs
jb
movsl
cmc
in
nop
in
out
push
inc
and
stc
and
dec
xchg
psubw
inc
pop
pop
sub
push
aaa
outsl
scas
jl
rcrb
jmp
and
xchg
in
out
or
inc
fstpl
add
rcl
imul
pop
pop
out
sbb
cltd
adc
out
xchg
sub
popa
das
popa
cmp
mov
xchg
iret
sub
pop
add
pop
sub
pop
and
loope
pushl
scas
mov
clc
cs
js
pusha
aaa
movsl
outsl
mov
lret
mov
iret
icebp
mov
or
repnz
sbb
mov
fs
stos
sahf
mov
push
rolb
or
mov
gs
lds
scas
mov
jnp
jbe
repz
push
sti
jnp
lret
xchg
sub
push
mov
jle
inc
testb
dec
mov
out
daa
xchg
adc
inc
fsubp
xchg
sub
fadds
push
xchg
push
sub
pusha
rcrl
pop
aaa
or
movsl
aas
shrb
lret
jge
and
scas
mov
and
dec
add
cmp
adc
lock
das
mov
pop
pop
jns
xchg
lds
lahf
xor
clc
jno
dec
enter
in
push
and
jb
adc
pop
in
insl
pop
and
push
pop
mov
pop
dec
cmpsb
sub
insl
cwtl
out
sbb
pop
jns
or
fsub
and
cmpsb
xacquire
or
jne
mov
xor
in
jmp
xlat
dec
jle
xchg
cmp
nop
add
stc
mov
push
dec
sahf
into
xchg
loopne
inc
dec
mov
cmp
nop
inc
add
stos
or
inc
fdivrs
pop
and
in
push
adc
decl
cmp
cmp
mov
iret
stos
out
push
ret
popa
jae
in
lahf
mov
jl
pop
into
push
push
in
push
sub
int3
filds
jns
or
push
pop
jns
inc
out
cmp
sbbl
aas
pushf
gs
js
cmp
lret
psubusw
jle
pop
loop
bound
xchg
das
das
scas
data16
and
addr16
lret
lahf
aas
out
fsubp
outsb
pop
cs
rorl
pop
insb
and
in
mov
mov
int3
pop
cmpsl
into
jg
cld
stc
cmc
iret
ljmp
fwait
and
or
out
lahf
aas
adc
adc
sub
in
inc
mov
repnz
repz
mov
pop
fcoml
rorl
fsubrl
xor
jb
push
movsb
sbb
add
mov
mov
cs
jbe
mov
fmul
imul
and
repnz
outsb
test
sub
add
iret
push
enter
jns
lods
pop
lds
outsl
out
xchg
jle
mov
sub
add
arpl
jl
xor
repz
mov
adc
mov
and
leave
inc
dec
outsb
lret
movsb
dec
mov
loop
push
jne
scas
jge
add
lret
push
pop
fdivrl
mov
lret
das
jl
jmp
rcrb
jnp
enter
out
jle
mov
sti
cltd
pop
dec
mov
cmp
lret
add
adc
pop
aas
inc
sahf
sbb
call
or
lea
add
mov
xor
push
sub
scas
mov
lods
mov
or
scas
movsl
pop
loope
sub
iret
decb
pop
mov
jp
inc
lds
pmaddwd
frstor
mov
stc
outsl
test
jae
push
mov
fdivrp
jb
insl
cwtl
xchg
out
xchg
scas
pop
sbb
xor
sahf
pop
inc
mov
xor
pop
jns
fstl
cmp
loop
jmp
dec
insb
clc
mov
push
sub
xor
adc
jno
and
dec
pop
sahf
sahf
bound
push
fdivrp
repnz
invd
in
pop
jo
inc
pop
jns
lret
xchg
aad
sahf
pop
cltd
loop
pop
pop
and
movsl
je
jg
dec
shlb
adc
jle
sqrtps
in
jns
repz
mov
ds
lods
fsubrl
pop
stc
jg
cs
in
in
mov
sbb
fisubrs
xchg
aas
push
pop
mov
in
push
ds
enter
ret
xor
mov
stc
repz
cld
fsubrl
aam
pcmpeqd
xchg
cld
sbb
lods
pop
icebp
jg
xchg
pop
push
mov
xor
pop
fidivrs
jg
movsl
mov
cltd
fmull
xchg
lahf
test
mov
inc
cmc
add
out
push
int
in
jns
je
cld
jb
inc
push
fisubrs
mov
fisttpll
cld
stc
repz
movsl
rcrl
mov
cmp
mov
add
adc
iret
or
pop
paddb
repz
outsl
push
jbe
adc
ljmp
addr16
aas
jg
inc
in
stos
or
mov
push
in
xchg
xchg
scas
in
add
mov
jns
in
aas
dec
outsl
mov
cmpsl
adc
rcrl
pop
jns
ja
xor
pushf
mov
inc
adc
iret
lahf
aas
push
cmp
cmp
out
stc
movsl
icebp
lret
rolb
xor
mov
mov
fstl
mov
ja
lea
mov
popf
subl
lcall
imul
xor
fidivs
cmpb
aas
jg
jns
xchg
hlt
es
inc
mov
hlt
xchg
out
sbb
xchg
and
stc
cltd
mov
push
mov
fistpl
pop
sbb
ja,pn
sub
out
sub
outsl
jle
out
cld
stc
repz
pop
inc
or
or
adc
lahf
aas
jg
in
adc
push
cmp
cmp
repz
jbe
jge
mov
inc
mov
inc
loopne
inc
xor
pop
mov
add
add
sub
dec
iret
popa
sub
in
ja
cltd
bound
mov
in
push
pop
jo
test
mov
popf
mov
xchg
push
pop
jns
test
or
emms
loopne
popa
lret
lret
push
pop
mov
lahf
adcb
out
jle
repnz
loope
shr
add
iret
fstps
iret
scas
mov
mov
dec
pusha
cld
stc
repz
inc
daa
or
pop
aad
sub
clc
pushf
mov
jg
jno
popf
dec
fucomi
mov
nop
out
ror
out
and
xchg
repnz
or
xchg
push
dec
das
mov
sarb
and
push
test
push
ja
lahf
aas
aas
adc
cmp
imul
out
in
iret
and
fs
add
movsl
frstor
mov
call
sub
cmpsl
scas
dec
mov
xchg
sub
cmpsl
inc
repnz
mov
stc
mov
or
cld
leave
and
jns
icebp
sbb
repnz
xchg
lahf
jg
fstpt
and
jns
fldl
outsl
push
std
pop
sub
scas
sub
cmp
aas
dec
pop
mov
mov
in
jp
call
mov
mov
dec
mov
fiadds
clc
shlb
jg
ds
cmp
bound
push
fisubs
clc
arpl
mov
lret
jle
xorl
pop
push
pop
lock
subl
mov
test
add
push
lret
cmp
xor
cmp
cld
div
in
sub
fnsave
lock
or
ficomps
aas
cli
or
idivl
push
iret
lret
test
push
les
scas
mov
bound
sub
mov
mov
js
cli
xchg
repz
mov
repz
adc
jg
cld
stc
aas
in
popf
push
sub
xchg
rep
popf
sbb
jne
outsb
call
bound
push
push
pop
jns
enter
cmp
or
dec
mov
mov
xor
mov
jg
je
out
test
pop
outsl
loop
arpl
mov
cmp
inc
mov
shr
testl
pop
jle
push
xchg
sub
pop
cld
push
cli
dec
inc
rclb
push
pop
cwtl
test
outsl
in
lahf
aas
jg
mov
insb
pop
jl
stos
xor
xchg
mov
subb
jns
jl
mov
push
inc
out
imul
pushl
sahf
inc
aaa
jge
das
pop
lods
jg
inc
lahf
ret
adc
call
or
mov
scas
stos
das
inc
sahf
je
jns
cmp
push
aas
sub
popa
ljmp
push
pop
add
sub
jl
xchg
jno
shrl
pop
jns
aam
add
bound
outsl
mov
and
rcrl
jmp
mov
out
clc
in
sub
jo
repnz
add
dec
call
in
sub
aas
xor
dec
fimuls
sti
scas
mov
jecxz
das
cwtl
test
stos
pop
mov
add
sub
and
pop
out
cltd
push
cmc
lret
xchg
ja
xorb
mov
push
or
stc
add
iret
cmp
pushf
test
orb
in
aas
sbb
jg
add
stos
enter
mov
lahf
or
gs
and
dec
push
fnstenv
sti
in
jecxz
loope
xchg
dec
std
sub
insb
push
jg
lret
mov
inc
jne
fcompl
popa
das
add
lret
mov
sbb
repz
or
inc
pop
test
add
cld
push
jp
sbbl
iret
lahf
aas
jg
jg
sbb
ret
leave
mov
je
stos
xor
pop
xor
mov
lret
pushl
repnz
loopne
jle
out
cmp
cld
mov
iret
inc
xor
test
sbb
pop
jle
mov
push
mov
ljmp
inc
xor
pop
dec
mov
cld
stc
mov
test
push
mov
in
ja
aad
xchg
lds
cmc
push
out
mov
push
pop
jns
cmp
cltd
adc
jge
in
lods
jnp
sbb
jle
push
sub
push
and
das
jge
or
mov
xchg
aaa
shrb
or
add
test
in
ficompl
test
sbbl
mov
in
push
mov
shlb
lret
xchg
push
pop
shrl
daa
sbb
sub
xchg
outsb
push
imulb
lea
rsm
mov
das
aas
jg
cmp
hlt
adc
sbb
push
xlat
repnz
xchg
mov
orb
xchg
xchg
xor
test
inc
adcl
iret
divps
xchg
pop
xchg
rol
sbb
mov
pop
ds
add
out
lahf
aas
popf
push
xor
outsb
pop
mov
mov
repz
jae
movl
ja
loop
sbb
popa
iret
lahf
aas
jg
jmp
rcrb
or
repz
out
mov
xlat
and
jle
mov
pop
movsl
mov
lahf
aas
cmp
or
in
cli
repnz
and
jnp
pop
pop
scas
mov
wrmsr
mov
push
rorl
push
jle
mov
inc
mov
mov
out
lahf
out
lock
loope
bswap
clc
push
hlt
daa
pop
cld
stc
sub
pop
mov
movmskps
sbb
sub
jg
icebp
mov
lcall
idivl
hlt
mov
jb
jg
cld
into
or
lcall
xchg
dec
in
fs
out
lahf
aam
js
pop
inc
mov
jmp
jg
cld
stc
xchg
inc
les
repz
pop
push
push
fwait
test
lahf
aas
sub
push
push
cmp
jns
jnp
repz
data16
jns
in
dec
add
das
repnz
ss
iret
or
mov
xor
sti
or
fistps
fcoml
outsb
add
imul
sarb
cmp
fstpt
in
sbb
cmp
mov
adc
aas
jg
inc
add
pop
shlb
cmc
lret
fstl
jg
fisubl
sub
fadds
add
aam
dec
xchg
xchg
push
ficomps
xchg
shlb
mov
psubusb
scas
repnz
jo
nop
dec
jbe
xchg
push
out
popf
mov
int3
adc
sbb
xor
add
jmp
aas
jp
xchg
fildll
mov
iret
rcl
in
cli
fiadds
loope
mov
push
xchg
jnp
frstor
cld
fstpt
ror
ror
iret
testl
jl
pop
les
xchg
bound
aam
pop
jns
push
mov
fdivp
imul
loopne
das
xchg
jb
loop
ret
shl
cmp
aas
in
aas
mov
pop
jle
fnsave
jg
mov
outsb
std
pop
xor
pusha
inc
cmpsl
add
jnp
jae
lret
jmp
outsl
lret
mov
mov
mov
add
xchg
repnz
popf
ret
mov
testl
lock
adc
jecxz
imul
mov
aas
daa
cmp
xchg
mov
pop
jns
pop
std
popl
incl
inc
sub
mov
jne
dec
cli
jnp
sub
les
push
pop
inc
ret
push
sahf
push
inc
xlat
cmp
xchg
ja
clc
stos
scas
mov
jmp
cld
stc
xor
or
leave
call
sub
push
out
adc
adc
in
add
or
or
rcr
scas
mov
insb
push
pop
jns
mov
mov
inc
jmp
sbb
cmp
iret
pop
and
xor
pushf
mov
outsb
fcomps
cmp
aas
pushl
out
stc
dec
orb
adc
xchg
iret
lahf
icebp
clc
loopne
pop
dec
sub
and
adc
mov
sub
leave
shlb
repnz
int
repnz
mov
les
add
jmp
and
or
inc
in
das
lahf
pop
sahf
mov
sbb
fbstp
push
pop
jns
cmc
pop
and
test
push
je
cli
imul
sub
sbb
jg
push
pop
jns
xchg
pusha
pop
mov
cld
cld
pusha
ret
outsb
loope
xchg
ja
mull
popf
lahf
mov
jle
jge
enter
jno
adc
out
rcrl
mov
jae
cmp
cli
in
sub
rcll
into
in
out
out
adc
andb
sti
sar
mov
outsl
jbe
ds
insb
mov
repnz
bnd
or
dec
and
shrd
out
pop
adc
pop
fisubrl
fidivrs
icebp
in
das
insb
lock
and
es
pop
xor
js
and
int3
pop
adc
inc
push
pop
sub
inc
xor
mov
cmc
ja
scas
mov
lret
inc
pop
xchg
add
fisubrs
sub
data16
mov
in
imul
push
sub
and
pushf
pop
push
insl
inc
xor
push
xor
mov
addb
fistpll
pushf
or
pop
test
push
pop
jns
int3
and
out
gs
inc
inc
pop
mov
adc
in
xchg
clc
or
inc
jnp
repz
lahf
je
inc
ds
stc
xchg
mov
cmpsb
jg
cld
stc
ror
pop
push
in
mov
pop
sbb
cmp
out
lahf
aas
ds
popf
iret
loope
cmpsb
stos
insb
mov
push
cli
in
xor
lock
mov
jg
cld
into
imul
ret
mov
jg
repz
lahf
lcall
pop
mov
push
adc
jg
cld
stc
testl
adc
jmp
iret
lahf
aas
lods
cwtl
stos
mov
mov
sti
jnp
repz
jmp
imul
mov
aas
fsub
push
in
das
inc
inc
cltd
sar
sbb
inc
repnz
xchg
sub
in
lahf
add
insl
cmpsl
xchg
sub
mov
imul
out
out
lcall
fbstp
add
pop
sub
or
mov
adc
call
lret
sub
sti
bound
mov
mov
jle
shll
fcoms
or
cmp
iret
lahf
aas
aas
jle
and
rorl
cld
or
cld
stc
repz
pop
fisubrl
push
adc
test
mov
fld
das
jbe
repnz
push
sub
pop
jns
xchg
std
imul
mov
mov
fidivl
aas
aas
shlb
mov
xchg
mov
stos
jns
pop
jno
stos
lahf
lods
pop
mov
pop
xchg
or
pop
stos
and
arpl
pusha
sub
aam
jbe
mov
mov
mov
sub
sbb
in
or
jl
ja
sbb
fidivrl
pop
sarl
xchg
push
add
sub
xor
xchg
push
pop
dec
and
cmc
iret
mov
push
mov
data16
popa
jb
out
cmp
and
add
sbb
sarb
pop
shlb
scas
clc
cltd
stos
sti
jg
cld
stc
push
inc
mov
call
push
pop
mov
lret
ds
daa
push
fadd
in
fisttps
mov
sti
and
in
push
cwtl
pop
mov
mov
mov
ret
push
arpl
adc
mov
dec
xchg
movsl
or
mov
xchg
lods
mov
mov
pop
xchg
std
mov
mov
dec
repnz
fistpll
push
adc
lret
mov
xchg
rcrl
les
cld
das
scas
mov
adc
clc
repnz
mulb
iret
lods
sub
xor
shufps
scas
loope
mov
fstpt
fcmovne
sub
jnp
pop
jge
icebp
jae
pop
sub
mov
insb
mov
sub
in
test
xchg
and
mull
cld
cld
into
ja
dec
std
andl
jg
cld
stc
out
test
add
jno
sub
pop
push
adc
iret
lahf
aas
aas
and
scas
insl
push
in
ret
sbb
sbb
jg
pop
cmp
sbb
jno
mov
aad
in
sub
fsubs
data16
xchg
pop
scas
mov
push
scas
stos
gs
cwtl
adc
lock
fildll
or
adc
jg
mov
mov
cld
stc
adc
andl
incb
xchg
and
push
addb
add
lahf
aas
push
dec
aad
and
mov
mov
cli
in
in
or
cs
daa
fsubs
mov
test
cld
icebp
sub
lret
pop
xor
mov
out
cmp
mov
lock
dec
cld
stc
repz
and
shr
fnstcw
sti
cmp
aas
jg
xor
adc
inc
jbe
stc
repz
lcall
dec
es
stc
imull
push
pop
jle
add
mov
pop
mov
lahf
pop
sahf
jg
out
pushf
sahf
movsb
imul
ficoml
jns
insl
xor
iret
mov
mov
jb
cmp
xchg
cmpsb
mov
jne
add
aas
sbb
pop
mov
pop
mov
push
das
andl
aas
cmpsb
cli
ds
data16
dec
mov
jae
xor
insl
adc
sub
jg
leave
iret
les
or
cld
stc
mov
out
mov
lret
sbb
iret
lahf
aas
jg
dec
adc
fs
lock
stc
repz
mov
std
xchg
pop
mov
insl
or
dec
push
jg
mov
outsb
test
ficompl
and
push
and
in
out
xchg
sbb
lret
sbb
stc
repz
popa
les
jle
loop
jp
mov
aas
sub
pop
outsl
dec
sub
fbld
sub
icebp
dec
test
or
sub
arpl
outsl
leave
data16
aad
scas
mov
lret
imul
xlat
fdiv
outsl
jecxz
pusha
adc
nop
cs
cld
mov
push
cmp
or
mov
das
fbstp
sub
lcall
jns
jmp
enter
mov
sub
insb
mov
cwtl
icebp
mov
dec
aam
or
adc
sub
out
adc
pop
sbb
iret
insl
xchg
push
pop
stc
popf
popa
jmp
push
test
dec
mov
lret
jmp
pop
push
adc
aam
pop
jle
cld
and
into
cwtl
insl
in
je
or
iret
aaa
aaa
mov
jl
gs
mov
lret
out
push
xlat
or
cltd
cmp
out
repz
iret
lahf
aas
loope
lret
push
fisubrs
xchg
xor
popf
push
cmp
out
inc
nop
sub
clc
mov
repz
jns
mov
cld
in
inc
clc
mov
std
mov
sub
push
mov
sbb
xchg
sti
fmull
out
lahf
aas
scas
shlb
scas
adc
dec
fdivr
cld
stc
repz
sub
jo
mov
das
mov
push
mov
aas
mov
dec
and
repz
lahf
sti
test
negl
xchg
in
add
int
cld
or
repnz
callw
push
fs
inc
aas
mov
imul
mov
lret
lahf
aas
pop
ja
in
jae
inc
iret
cmp
out
pop
ds
mov
fidivrs
mov
cld
lcall
or
lahf
aas
jg
inc
shr
lret
lods
scas
js
xchg
in
ja
repz
jb
lret
and
je
cs
inc
out
out
lret
xchg
in
and
adc
shll
leave
or
mov
pop
cmp
mov
je
mov
aas
jno
sub
rorl
jb
test
push
jl
movsl
xchg
jg
pop
xor
and
dec
cmp
dec
cld
std
pop
push
out
cmp
scas
lahf
dec
xlat
rcrb
pop
adc
repnz
pop
mov
lock
repnz
dec
sbb
cmp
and
test
sub
sub
mov
mov
sti
cmp
jno
mov
xchg
orl
lret
jbe
mov
movsl
xor
lret
scas
ds
stc
mov
sbb
es
adc
in
lret
mov
out
imul
mov
aas
jg
js
lock
lods
lock
lahf
inc
push
scas
push
xchg
pop
rclb
push
movsb
lods
jo
fsubp
out
icebp
jmp
lahf
adc
inc
dec
push
xchg
add
sub
pop
mov
pop
les
lods
ja
cmp
fcmovne
iret
lahf
aas
mov
mov
daa
mov
loope
lock
mov
sbb
stc
ret
comiss
mov
int3
into
and
rclb
dec
mov
ret
sbb
bound
movsb
push
pop
jns
push
ss
dec
aad
mov
cmpsb
cmp
pop
cmc
lret
xchg
out
sbb
shl
lods
mov
shufps
int3
or
stc
rep
ljmp
inc
cmpsl
bound
cld
mov
dec
ss
lods
stos
mov
iret
lahf
ret
lcall
jecxz
outsl
loope
xlat
dec
jg
mov
xchg
cmp
clc
in
pop
pop
pop
ss
ret
sub
popf
test
syscall
xchg
shrl
cmp
test
cwtl
or
scas
mov
pop
sub
into
and
lea
clc
enter
int
mov
dec
fnstsw
cld
cmpb
cmp
outsb
icebp
pop
xor
cmp
add
stc
sahf
xchg
mov
dec
sbb
pop
add
rclb
dec
cmp
repnz
dec
sbb
mov
jno
mov
sub
fld
adc
adcb
ja
cli
aad
jl
std
add
jg
cmp
inc
lret
leave
movsb
fisubl
clc
repnz
and
repz
ds
pop
xchg
jge
adc
call
iret
sub
dec
xor
hlt
push
pop
jns
inc
shrl
mov
pop
icebp
adc
lret
xchg
inc
pop
mov
repz
pop
into
inc
pushf
int
pusha
lock
jno
dec
or
xor
mov
sub
repz
into
fcoms
and
fbstp
push
jg
cld
stc
mov
or
loope
jbe
dec
insl
inc
pop
lahf
out
lahf
aas
outsl
push
hlt
xor
push
inc
lock
and
mov
lds
jge
stc
repz
lock
xlat
xchg
arpl
data16
sbb
cltd
lahf
aas
jg
sub
sbb
mov
hlt
inc
loope
repnz
lret
iret
push
adc
xor
shlb
mov
scas
daa
test
jnp
ja
cmp
add
jg
jns
inc
cmp
jns
dec
xorb
or
and
jns
stos
mov
rclb
fisttps
stc
repz
pop
sub
pop
or
stc
cld
fwait
js
or
les
aas
xor
jmp
xor
je
movsb
jbe
xchg
xchg
ja
push
mov
mov
loopne
aas
pop
pop
mov
push
mov
inc
loopne
iret
lahf
mov
scas
pop
or
imul
repz
jmp
ret
push
ds
pop
nop
sub
jle
push
jmp
xor
push
fwait
jns
pop
into
pop
enter
push
pop
dec
clc
cltd
or
rclb
sbb
xlat
and
fldt
push
iret
lahf
stos
push
mov
and
imul
ss
lods
sarl
cmc
hlt
mov
fcoms
out
lahf
aas
mov
adc
push
lods
out
xor
stc
stc
repz
jae
cli
sbb
pop
dec
pop
insb
inc
mov
sahf
push
cltd
mov
shll
iret
lahf
mov
mov
mov
jl
cld
stc
leave
jno
sbb
sub
dec
mov
sbb
fs
dec
jp
fwait
cmp
mov
xchg
inc
mov
pop
pop
pop
mov
cmp
cld
pop
jg
sub
call
cli
in
xchg
pop
add
inc
push
popl
jns
xchg
testl
in
mov
mov
ficomps
dec
aaa
leave
into
jl
sub
test
or
cmpsl
leave
pushf
mov
scas
stc
lret
jg
les
insl
aad
push
mov
iret
pop
repz
shrl
test
popa
hlt
bnd
cli
outsl
xchg
ds
jns
lahf
iret
lahf
pop
lret
pop
push
and
inc
or
jg
xchg
jg
imul
add
lock
lods
and
loopne
loope
adc
or
incb
jns
push
xor
push
into
cmpsl
lahf
mov
mov
aaa
sbb
adc
jg
out
mov
ja
push
hlt
jno
shll
jle
adcb
inc
pop
aas
pop
scas
mov
aas
in
iret
dec
hlt
daa
mov
mov
push
out
das
lods
adc
mov
incb
push
xlat
pop
jns
in
mov
push
mov
cli
loop
lcall
push
js
jmp
sub
jnp
pusha
iret
add
loop
mov
push
fldl
xor
pop
dec
out
inc
je
out
pop
jns
xchg
and
mov
jo
mov
in
int3
out
adc
sub
repnz
fwait
shlb
loop
fidivrl
lea
and
out
insb
shrb
cmpsb
in
repz
add
test
dec
jl
cld
stc
xor
sbb
xor
loope
xchg
ja
or
stc
decl
adc
test
test
add
je
ja
push
mov
int3
dec
divl
sbb
pop
call
fcmovnbe
cmp
insl
mov
xor
push
pop
jns
xchg
notb
fsubs
adc
lret
cmp
mov
cli
pop
std
repnz
pop
cs
dec
popa
cmp
dec
rclb
sub
cmp
frstor
xchg
ja
jo
mov
xchg
int
out
and
cld
stc
mov
push
outsl
jp
push
dec
dec
push
jge
stc
sti
iret
lahf
aas
jg
fs
shrl
push
adc
push
add
mov
inc
loopne
cld
stc
movsl
push
or
adc
aad
insb
jp
dec
push
sahf
out
lahf
aas
push
mov
sub
or
hlt
repnz
push
mov
cmpb
cld
int
pop
insl
adc
aam
out
dec
inc
sub
loop
loopne
ror
fsubrs
shl
shl
sahf
push
repnz
mov
mov
mov
out
cld
scas
arpl
in
sbb
sti
xor
and
pop
daa
cmp
imul
ja
clc
xchg
pop
dec
add
jg
mov
fs
mov
fldl
add
mov
mov
pop
cmp
adc
in
fldenv
insl
pop
into
sub
fs
ret
scas
dec
call
mov
adc
jne
repnz
dec
inc
lret
xor
rcr
ljmp
scas
mov
cmc
or
int
rcl
mov
push
lahf
ss
das
movsb
insb
xlat
mov
push
je
repnz
subb
sub
je
mov
mov
sahf
pop
pop
das
add
into
push
jg
cld
pop
outsb
ds
sub
mov
lcall
outsb
pop
sub
mov
add
ja
gs
dec
jb
xor
call
lea
pop
jns
xchg
fiaddl
sub
xor
push
jb
popf
pop
sub
and
sub
repnz
cs
lret
lahf
aas
sub
jnp
jne
fnstcw
in
rcrb
ret
add
clc
mov
das
fisttpl
pop
out
jle
pop
jg
scas
test
cwtl
insl
test
sbb
loopne
dec
leave
jg
jmp
jnp
cmp
test
dec
vrsqrtss
pop
out
lcall
movsl
and
push
lahf
aas
jg
ficoms
adcb
xchg
repz
mov
mov
sub
sub
lcall
pop
or
xor
enter
pop
aas
jne
xchg
pop
mov
mov
scas
mov
pop
outsb
aam
repnz
pop
call
in
in
xor
mov
jae
sub
rcr
andl
pop
inc
addr16
mov
test
pop
jle
cld
imul
clc
push
mov
jnp
cwtl
scas
ja
movsl
push
das
out
jle
stc
sbb
in
mov
iret
pop
in
out
jne
popf
stc
in
mov
and
xor
cmp
pop
or
push
mov
movsb
pushf
xchg
repz
fistps
aas
lds
movsl
adc
lret
sub
or
mov
hlt
push
mov
icebp
in
ljmp
cmpsb
pop
mov
pop
mov
push
mov
mov
popa
movsl
imul
das
pop
or
lcall
and
sti
in
mov
popaw
sub
xchg
xchg
jae
xor
xchg
sub
ret
aaa
dec
fs
and
cmp
inc
shlb
lahf
or
cli
scas
mov
iret
lahf
out
adc
lods
and
std
jb
dec
repz
xor
push
not
sbb
pop
push
inc
mov
pop
scas
or
das
pop
shr
xor
jo
aaa
xor
repz
push
or
push
mov
cld
mov
push
mov
mov
leave
mov
lahf
aas
jg
cmp
inc
rolb
orb
data16
imul
xor
sbb
stc
xchg
push
cmp
pop
outsb
lahf
adc
xchg
push
insb
push
aas
jg
cld
and
loopne
sarb
sbb
cmp
out
lahf
pop
sub
sub
scas
mov
enter
mov
mov
or
imul
fadds
ffreep
scas
mov
scas
jns
cmp
mov
add
test
out
gs
scas
mov
sbb
dec
popa
dec
into
xor
jns
pop
scas
mov
push
fildll
pop
movsb
cmp
add
roll
jb
das
sub
or
sbbl
imul
fwait
adc
addr16
jmp
aas
jg
cld
adc
sbb
fisubs
or
push
repz
lahf
xor
jae
lret
cmp
std
lds
mov
sahf
in
jb
and
loop
pop
jg,pt
decb
lret
pop
popa
jl
das
dec
push
adc
xchg
push
or
mov
inc
clc
repnz
and
pop
inc
adc
mov
or
mov
cli
pop
mov
test
jl
adc
loopne
jb
pop
inc
adc
pop
lcall
jae,pt
jo
push
enter
mov
cli
adcb
inc
cli
imul
cmova
ljmp
jns
fiadds
jmp
das
jg
mov
xor
int
lcall
aas
xchg
jl
mov
mov
insb
jmp
lret
iret
lahf
in
jne
inc
xchg
push
in
adc
call
xchg
ja
pop
das
xor
int
sti
and
lret
add
mov
cmpsb
repnz
lcall
mov
repz
ror
inc
adc
scas
mov
sub
lret
pop
out
xchg
fistpl
dec
ret
xor
lret
sub
icebp
fwait
jae
loopne
dec
icebp
aam
repz
call
xchg
push
ret
mov
lock
out
add
and
sahf
push
mov
push
mov
jb
pop
jecxz
cmp
mul
out
cmp
push
xchg
pop
int
insl
rsm
or
push
jl
or
das
lods
inc
das
jo
push
movsb
repnz
pop
jle
rol
out
fsubr
jmp
cmp
jns
jno
lods
add
das
inc
jns
sbb
xchg
push
pop
and
pop
ljmp
pop
pop
jns
cs
add
or
sar
repz
sbb
sti
jp
jns
jge
inc
jle
out
push
stos
idivb
inc
or
cmp
mov
jle
add
or
repnz
lret
iret
or
inc
call
iret
mov
lcall
dec
inc
or
movsl
pop
pop
mov
scas
mov
data16
repz
call
mov
inc
rcrb
in
cwtl
stc
xchg
mov
roll
in
mov
cld
lahf
adc
cmc
mov
lds
inc
xor
lahf
int
fidivs
dec
ret
out
into
rcrb
cmpb
push
jp
push
pop
jae
xchg
mov
mov
jne
test
shld
ja
repnz
mov
dec
sbb
inc
dec
jbe
jb
xchg
in
or
pop
es
das
ja
mov
xor
cs
sti
in
lret
mov
xchg
or
mov
imul
ss
cmc
push
das
scas
mov
ljmp
jno
cld
mov
rcrb
ja
jg
dec
dec
mov
cmpsb
xchg
pop
and
dec
scas
mov
jb
mov
or
mov
sub
jp
cmp
inc
aas
sarl
jae
jb
xchg
adc
xorl
xchg
repz
cli
mov
negb
lret
mov
lds
cmp
repz
in
sbb
mov
cld
pop
cli
repnz
inc
cmp
scas
lahf
cwtl
pop
adc
lea
pop
jne
ret
fcmovu
out
in
iret
push
xchg
push
cmp
dec
dec
dec
insb
das
pop
jg
test
jl
test
push
lret
mov
repz
jmp
push
cmp
incl
sub
cmp
adc
cmpsb
adc
fcmovbe
cli
in
push
outsl
aaa
loopne
push
push
or
lods
pop
cld
sahf
add
frstor
dec
das
loopne
pop
jns
sub
out
adc
adc
hlt
xor
pop
jns
xchg
das
ficoml
push
lods
mov
jl
jns
xchg
push
jp
inc
bound
ljmp
pop
cmpsl
les
inc
scas
int3
mov
xorb
fs
lahf
dec
xchg
inc
mov
scas
mov
int
sub
jne
scas
mov
sbb
fcmovbe
cmp
lret
inc
in
out
lods
nop
pop
jle
lahf
aas
aas
aam
scas
cmc
outsb
lahf
and
or
iret
imul
fs
or
xor
jg
cld
loope
fdivrp
jge
pop
sbb
aaa
fisttps
lret
lahf
push
mov
std
mov
stc
repz
movb
pop
hlt
pop
pop
lods
mov
decb
sub
xorl
icebp
aas
sbb
inc
dec
mov
mov
fnstcw
lret
sub
ja
jg
cld
jle
out
test
dec
inc
xor
clc
repz
lahf
xchg
inc
inc
jb
sbb
loop
mov
data16
cld
stc
mov
cltd
adc
adc
out
js
and
orl
xchg
stos
push
xchg
or
aas
jg
pop
out
aad
daa
mov
xor
repz
push
inc
pop
ljmp
in
lock
scas
cld
inc
lods
dec
push
push
add
cli
mov
adc
xor
xchg
inc
lds
xchg
push
fwait
or
cld
stc
je
loop
adcl
fbld
in
add
scas
push
pop
pop
pop
xchg
push
pop
jns
pop
negb
clc
push
jmp
push
loop
shlb
out
rclb
out
mov
repz
jb
addr16
adc
or
gs
xchg
ja
jo
jg
stos
ror
sub
mov
sub
jae
or
cmp
fst
sbb
stc
repz
test
jb
push
into
mov
test
cld
std
dec
xlat
pop
and
jg
cltd
out
add
xchg
sub
push
xor
lret
inc
mov
repz
scas
adc
sub
aas
mov
loope
push
lods
dec
mov
out
lret
mov
pop
out
pop
mov
xchg
in
cwtl
pop
fwait
mov
stos
iret
mov
iret
repz
jns
lret
mov
punpcklwd
pop
mov
fucom
xchg
lahf
jbe
lock
cmp
mov
outsl
sarl
mov
out
lahf
mov
fstpl
std
orb
mov
scas
mov
mov
push
and
clc
inc
cltd
ss
loope
sub
and
cmp
jle
inc
cmp
jp
lret
push
out
xchg
iret
in
outsl
add
xlat
fisttps
cmpsb
ss
sub
mov
popf
sub
ds
inc
mov
mov
fidivrs
push
mov
cmpsl
paddusw
scas
mov
in
push
loope
mov
sbb
lahf
test
sub
jae
fs
cld
stc
repz
daa
gs
jp
mov
in
jae
lret
lahf
aas
jg
and
cmp
mov
jne
lret
out
out
and
aam
fsts
mov
mov
int3
outsl
sbb
push
iret
and
or
jge
push
out
leave
mov
lcall
cmp
dec
pop
sahf
out
xchg
pop
xorl
out
mov
popa
out
push
test
cmp
repnz
jnp
jns
rol
ret
xchg
jae
add
outsb
xor
add
push
decl
hlt
in
je
jno
repz
cld
cltd
clc
mov
mov
mov
lahf
aas
jg
inc
mov
out
in
fcmovbe
jo
push
cmp
dec
filds
add
daa
pop
iret
lahf
aas
mov
add
cltd
xchg
lea
or
jns
in
jge
mov
ljmp
mov
jl
sbb
outsb
lods
push
dec
icebp
aaa
out
sub
pushl
dec
sub
add
out
scas
mov
addr16
mov
xlat
ds
mov
lret
das
es
mov
jge
adc
lret
mov
data16
jg
popa
push
lret
sub
mov
cmp
xchg
mov
ja
insb
sbbl
nop
jl
dec
scas
and
jnp
pop
xor
lods
pushf
xchg
insb
sbb
aas
mov
cld
testl
pop
push
lahf
pop
loopne
filds
sub
movsl
and
push
aam
scas
mov
push
stos
push
lds
repz
jmp
ficoms
imul
push
inc
fwait
sub
lret
in
rorb
lahf
aas
mov
push
jno
popa
leave
cltd
adc
jns
fstl
pop
jecxz
ja
mov
adc
xchg
push
pop
test
or
js
cmp
fldl2t
in
push
pop
pop
jns
xchg
loop
jns
dec
in
ss
inc
mov
out
iret
sbb
out
aas
into
push
rclb
mov
scas
mov
mov
lret
out
mov
sar
mov
jnp
or
ret
ret
scas
testb
scas
fidivrs
lahf
and
xchg
pop
loop
xchg
lahf
aas
jg
cltd
sub
frstor
pop
lods
mov
aas
in
fistpll
sarb
jl
nop
fcomps
mov
inc
mov
mov
adc
push
fdivrp
mov
add
iret
mov
fsubrl
jns
xchg
test
fistps
adc
mov
pop
adc
push
imul
push
test
or
xchg
push
pop
xor
ljmp
mov
pop
jns
popl
cwtl
sbb
xor
out
xchg
cmpps
test
imul
iret
sub
push
movsb
inc
and
stc
xchg
shll
lret
out
fsubs
adc
insb
scas
mov
xchg
mov
xchg
fisubs
addr16
repnz
iret
popl
mov
sub
leave
xlat
aaa
mov
or
lahf
aas
jg
and
mov
in
add
repz
xchg
sub
xchg
lock
xor
jle
repnz
add
jg
cld
pop
and
lcall
adc
dec
fists
mov
mov
lret
jg
jbe
dec
ljmp
cmpsl
mov
pop
insb
clc
pop
fs
arpl
cmpsb
mov
cmp
test
iret
lahf
aas
mov
int
out
sub
cld
stc
repz
pop
fldt
add
cld
and
sub
jle
xor
push
das
inc
mov
scas
mov
xchg
lock
pushf
jge
fcoml
xchg
sub
mov
dec
inc
jg
jg
ds
cmp
xor
repnz
aas
mov
mov
ds
stos
cltd
scas
dec
stc
lret
mov
inc
push
adc
pop
scas
mov
ficoml
mov
jmp
fldt
dec
cmc
repnz
lret
mov
mov
pop
cmpsb
and
xchg
jle
add
xor
or
mov
iret
lahf
aas
or
cmp
icebp
mov
jg
mov
cld
stc
repz
cmp
es
xchg
cmp
popa
sbb
in
lahf
aas
jg
fs
fmuls
xlat
add
test
sbb
icebp
scas
call
repnz
fdivrp
mov
pop
inc
das
jg
ficomps
les
scas
pop
les
jne
pop
lret
repz
mov
pusha
int
js
movsb
cld
pop
cli
and
jp
push
fbld
xchg
ja
jl
cmp
test
aas
insl
jo
test
mov
popf
divl
pop
pop
jle
add
pusha
lret
adc
or
mov
ja
mov
les
inc
push
mov
or
pop
mov
jge
jmp
bnd
or
jns
inc
jb
insb
and
inc
dec
jg
dec
addb
scas
cs
lods
pop
cmp
faddl
loope
loope
cli
jb
pop
xor
fisubl
hlt
repnz
sahf
jb
mov
les
scas
cmc
jecxz
pop
leave
lock
inc
inc
and
outsb
aam
pop
mov
repz
inc
outsl
in
xchg
outsl
lock
mov
jbe
call
imul
pop
adcb
in
jge
cmc
fiaddl
inc
addl
test
lret
xchg
xor
int3
sbb
push
test
mov
xchg
add
mov
iret
add
adc
ja
movsl
jle
rorb
scas
jmp
into
mov
into
imul
jmp
test
sbb
ret
fdivrp
lahf
dec
push
add
xchg
in
pop
sbb
mov
js
xchg
aas
std
jb
xchg
fcomps
sbb
inc
jle
dec
std
out
mov
fimuls
xchg
or
daa
cld
dec
pop
and
negl
int
rorb
mov
jg
aaa
add
imul
in
ds
lods
mov
and
xchg
mov
xor
in
push
ficomps
outsb
mov
es
cmp
les
and
mov
aaa
adc
jnp
cli
sbb
int3
sti
nop
mov
pop
sahf
imul
lret
mov
loopne
pop
mov
jns
xchg
aas
movsb
xor
fnstenv
ds
mov
xchg
push
pop
jns
jle
inc
and
xor
sub
mov
mov
or
mov
adc
loope
std
outsb
out
lret
cmp
int3
cmp
fstl
add
push
cmp
pop
mov
aam
in
push
xor
pop
mov
inc
push
lds
fisttps
stos
lahf
aas
mov
mov
icebp
cwtl
dec
push
jle
mul
out
xor
ds
push
rcrb
iret
in
std
jb
adc
ss
repnz
cmc
dec
les
mov
out
cli
and
fists
sahf
sti
push
out
cld
stc
repz
dec
inc
inc
pop
aad
loopne
das
clc
ss
in
iret
lahf
aas
jg
inc
fistl
imul
andb
data16
jg
mov
xchg
sbb
cmpsl
xchg
fwait
lahf
aas
jg
pop
xchg
and
cs
xor
lea
xchg
inc
jnp
push
test
or
mov
jns
push
out
int3
mov
popf
push
sarl
cld
jg
push
jg
scas
mov
mov
jg
ret
pop
pusha
repnz
and
das
jg
decl
icebp
test
add
add
lahf
pop
push
mov
push
fldenv
in
aas
xchg
dec
xchg
mov
or
mov
lret
pop
and
das
gs
aam
insb
jo
sub
push
jo
inc
pop
jbe
sarb
lret
imul
je
addr16
adc
jecxz
sub
xchg
mov
xchg
push
cs
cmp
push
ret
repnz
rcrl
add
jp
jg
or
js
mov
insb
negb
stos
das
aas
in
cmpsb
sub
push
jmp
pop
jbe
sti
push
push
mov
fs
stc
cld
adc
pop
and
xor
sub
xlat
adc
jl
cmpsb
in
scas
mov
xchg
mov
push
cltd
mov
and
push
rcrb
stc
repz
inc
in
rolb
mov
push
lds
and
in
ficomps
mov
das
mov
dec
jl
mov
ret
add
repz
jmp
xchg
adcl
aas
jg
cld
push
repnz
inc
int
scas
push
repz
lahf
pop
and
cmpsl
scas
xchg
push
stc
outsl
test
pop
loopne
mov
cwtl
lcall
adc
sahf
dec
adc
push
pop
jns
sti
adc
push
mov
push
adc
jns
lret
xchg
lret
jns
or
aas
fidivl
das
push
pop
push
mov
push
mov
pop
add
aam
jg
mov
sbb
sub
or
inc
enter
lret
aas
sbb
cmp
sub
pop
cli
in
bound
into
inc
inc
lods
inc
lahf
aas
jg
jl
add
stos
insl
scas
cmpsb
adc
stc
repz
mov
test
stos
imul
inc
shll
jg
cld
pop
outsl
sub
dec
rcll
into
in
lds
rclb
jb
pop
dec
repz
rorb
mov
jbe
scas
mov
fildll
xor
push
fdivrp
or
mov
jg
nop
loop
xor
mov
in
aaa
dec
and
cld
stc
repz
shll
inc
lods
fldenv
test
cmp
inc
jl
jg
popf
mov
popf
cli
addr16
sahf
lahf
push
call
xchg
ss
jge
add
or
cltd
dec
lahf
pop
adc
adc
push
sbb
rorb
and
inc
adc
sahf
popa
push
dec
cmp
clc
repnz
sub
inc
cs
je
pop
add
jns
aas
cmc
enter
dec
mov
das
outsl
jp
cld
stc
repz
insl
jmp
call
je
ja
aas
jg
inc
aas
cmc
xchg
imul
out
xchg
cmpsl
mov
popa
loopne
jo
push
lea
dec
arpl
iret
test
aas
sbb
movsl
iret
mov
jg
jns
adc
out
data16
inc
jmp
jg
inc
fwait
pop
jns
xchg
inc
add
jnp
jg
jg
jns
xchg
push
jno
sbb
mov
push
inc
lahf
xor
or
or
jecxz
stc
xor
repnz
call
cmp
outsl
xor
daa
cld
stc
repz
outsb
pop
mov
rclb
subb
data16
lahf
aas
jg
aad
negl
icebp
adc
in
repnz
and
addr16
mov
shrb
hlt
in
mov
xor
push
mov
lea
roll
daa
lret
fwait
adc
mov
mov
pop
cs
xchg
in
repz
daa
dec
xchg
xchg
in
out
or
and
pop
in
repz
std
repnz
scas
outsl
ret
rdmsr
jg
cld
stc
or
cmp
test
fiadds
das
mov
add
xor
mov
mov
icebp
or
pop
cmc
das
scas
mov
pop
leave
push
faddp
fcompl
jmp
mov
lret
lahf
test
rcl
jecxz
dec
cld
or
dec
popl
fwait
cld
stc
daa
icebp
dec
jae
loopne
mov
xlat
add
sbb
je
inc
pop
pushf
mov
out
xchg
mov
loop
cwtl
dec
mov
imul
aad
ret
inc
jmp
jg
test
int
scas
push
pop
dec
pusha
sbb
mov
push
inc
push
insb
pop
fmull
mov
iret
arpl
sub
adc
icebp
adc
jns
xchg
push
pop
ds
jnp
loop
mov
xchg
push
pop
loope
cmpsl
fadds
add
jns
rcrb
push
outsb
xor
adc
push
pop
jns
push
call
lods
inc
loopne
add
sub
pop
das
jnp
mov
mov
adc
push
stc
cmp
cs
lret
mov
jmp
lcall
inc
out
push
in
int3
dec
sub
bnd
movsl
adc
push
ss
lret
imul
sbb
sbb
jg
lods
lret
jnp
push
data16
xchg
inc
out
mov
jns
ljmp
ja
int
insb
std
dec
jg
dec
pop
dec
aas
jbe
iret
lahf
aas
jg
jle
imul
ret
mov
fistl
cmp
mov
scas
mov
dec
aas
sub
iret
repz
lds
aas
mov
pop
ret
les
lock
lds
push
div
in
ret
gs
in
sub
xchg
add
mov
mov
push
pop
loop
xor
lahf
icebp
cmp
out
or
popl
lret
mov
jle
ds
jg
gs
jne
out
inc
pop
pushf
inc
pop
jns
in
out
lahf
aas
push
mov
sbb
xchg
push
jne
mov
in
imull
pop
push
outsl
call
jns
js
push
xchg
push
pop
and
data16
xor
mov
lods
int
jb
xor
flds
rcrb
sub
lods
mov
stos
xor
test
lret
iret
lahf
add
jno
rcrb
iret
fwait
iret
lahf
aas
ljmp
pop
push
shll
in
ret
orb
push
pop
jns
ljmp
add
fwait
mov
jns
xchg
jne
cmc
clc
popa
arpl
mov
sub
push
lret
pop
inc
fmuls
pop
jecxz
lret
xchg
push
pop
loope
xor
lods
sbbb
inc
idivl
pop
cmc
sahf
xchg
cwtl
lcall
jg
insb
call
cld
les
mov
popl
js
ss
xchg
repnz
xor
iret
ds
mov
lahf
insl
lret
mov
jnp
in
cs
das
scas
mov
iret
jae
ljmp
data16
mov
aad
test
imul
lcall
lret
jle
das
push
pop
jns
mov
loop
subl
ss
fcoms
cmpl
pop
mov
in
fbld
lret
iret
cwtl
xlat
inc
and
xchg
fwait
aas
jg
and
es
inc
xchg
inc
cmp
ret
and
fs
cld
or
and
call
and
aas
jg
xchg
lods
pop
mov
pop
pusha
sti
sub
xchg
bnd
iret
clc
push
mov
cli
sub
outsl
stos
sub
lds
pop
cli
inc
add
in
mov
mov
push
out
jg
jg
cld
push
cmp
hlt
push
imul
xchg
lods
mov
pop
repz
lahf
push
fcompl
fisttpl
and
adc
dec
add
cld
stc
jno
pushl
and
loope
popa
xlat
aad
das
lahf
aas
jns
dec
js
sbb
out
adc
out
lret
xchg
ds
cmp
scas
mov
cmp
bound
lcall
pop
sub
lds
int3
mov
test
fwait
repnz
lret
sub
mov
fnsetpm(287
lret
mov
jb
push
gs
xlat
and
scas
mov
and
mov
mov
rclb
jg
es
into
mov
jge
jecxz
push
mov
mov
pop
add
decb
pop
sbb
inc
xor
jg
icebp
add
out
dec
aas
lret
push
and
push
sarb
cld
ret
scas
lahf
inc
pop
sub
xchg
sahf
sti
fwait
les
loopne
mov
push
pop
lret
mov
in
scas
cld
stc
adcl
into
jl
jbe
imul
sub
lcall
mov
loop
iret
xor
adc
cltd
je
in
sti
and
mov
jge
xchg
or
aas
test
mov
lock
jp
sbb
imulb
jb
sub
sbb
fyl2xp1
repz
out
psubq
cli
jmp
imul
cld
or
shlb
sbb
mov
ret
insb
xor
lods
outsl
repz
sbb
and
mov
mov
sub
jge
mov
out
pop
jns
in
aad
sub
ret
out
push
addr16
fstpt
xchg
ja
or
mov
xchg
jmp
or
aas
mov
sbb
jg
data16
sti
cwtl
das
lret
cmpsb
loope
outsb
jns
xchg
ja
out
and
std
and
pop
pop
sbb
daa
aas
xchg
mov
pop
jns
mov
cwtl
mov
pop
sbbl
ret
jle
and
push
es
xchg
adc
xchg
push
lret
push
loope
xor
push
jge
in
push
pop
rolb
and
in
stos
fwait
clc
lds
sub
jno
sub
bound
or
pop
pop
in
push
ss
out
aam
shrb
test
sahf
cld
stc
repz
shlb
pop
cwtl
add
sub
mov
lahf
aas
jg
je
or
xor
cwtl
jo
sub
jp
repz
jns
pushl
cmpsb
repnz
cld
xchg
ficoms
inc
add
into
rcrl
mov
scas
nop
inc
xor
mov
jle
loop
pop
mov
in
cmpsb
add
xor
in
lahf
aas
jbe
dec
dec
movsb
mov
push
pop
jns
jb
push
or
fisttpl
in
push
adc
push
mov
call
in
xchg
push
pop
mov
out
arpl
sbb
adc
popa
inc
jns
inc
loop
mov
jno
mov
dec
xchg
push
fidivrs
sbb
jg
xchg
aas
jno
inc
xchg
inc
inc
push
pop
jns
insb
in
pop
cwtl
pop
dec
sbb
jns
mul
xchg
push
loopne
sub
fs
out
push
sub
fldl
pop
movsb
xchg
jns
psrlw
lret
jns
js
sub
cwtl
in
mov
pop
decb
jle
clc
push
mov
pop
mov
repnz
push
xchg
mov
pop
cmp
sub
mov
test
cld
iret
es
stc
pop
cli
int3
das
popf
mov
pop
jecxz
push
loop
push
mov
pop
xchg
push
pop
jns
neg
or
fs
push
pushf
loop
add
in
sbb
jb
aaa
out
add
and
ds
aas
dec
iret
lahf
aas
jg
mov
sti
std
or
inc
jg
repz
mov
data16
jmp
das
push
push
push
mov
mov
mov
mov
outsb
scas
mov
sbb
outsl
pushf
add
data16
out
repnz
dec
xor
mov
lret
push
xchg
sub
mov
in
cmp
clc
dec
iret
lahf
aas
loopne
mov
adc
mov
out
push
sbb
pop
pop
dec
enter
jle
std
jnp
fmuls
popa
dec
divb
lock
mov
das
das
add
cld
dec
sahf
xchg
test
lahf
cwtl
call
mov
push
pop
jge
cld
sub
stc
repz
imul
into
mov
addr16
xchg
aas
jg
addr16
out
mov
cs
adc
inc
xchg
sub
out
in
mov
lahf
scas
fcomps
mov
cmp
sbb
arpl
dec
push
mov
mov
dec
sahf
pop
xchg
jl
mov
out
lahf
aas
add
daa
enter
inc
push
mov
stc
repz
pop
xorl
orb
insl
xor
fdivr
out
mov
das
lahf
sahf
ja
adc
pop
mov
pop
ljmp
add
and
pop
xchg
fistpl
xor
cmp
push
dec
out
in
jns
fstl
iret
out
or
popf
in
push
pop
cmp
inc
dec
cmp
pop
xchg
jle
xor
mov
ja
push
sbb
aas
jle
rcrl
xchg
int3
scas
stc
repz
ret
ds
push
cwtl
mov
jns
sbb
fildll
cmp
lret
and
jnp
in
ja
and
daa
bound
jbe
leave
fstl
mov
sbb
bsr
std
jb
add
pop
cmp
cwtl
sar
fisttps
stc
fnstsw
das
mov
dec
mov
jp
ret
jns
pushf
dec
arpl
pop
out
sbb
lret
repnz
iret
daa
movsb
call
in
xor
xchg
sub
xor
rol
sub
inc
jecxz
xchg
mov
in
xor
cld
andl
test
jg
sbb
lods
and
sbb
loopne
aaa
out
mov
mov
pop
sbb
jb
mov
imul
jg
scas
mov
jecxz
lcall
mov
cmp
and
dec
dec
mov
and
aam
repnz
lret
sub
mov
test
das
fiaddl
call
jle
cld
inc
lcall
int
jle
repnz
push
xchg
lds
out
mov
lret
addb
scas
mov
repz
int
je
and
in
pavgw
sub
or
out
stc
mov
repnz
jo
unpckhps
das
xchg
add
cld
cmp
stos
mov
jmp
adc
jb
or
imul
scas
push
jg
rcr
pop
pop
jl
psubusw
stc
repz
icebp
mov
in
rorb
iret
lahf
pop
subl
adc
add
ja
out
mov
inc
push
aad
jg
aas
pop
out
ret
or
outsb
jno
adc
scas
jge
mulb
mov
dec
xchg
aad
mulb
arpl
xchg
sub
mov
es
cltd
or
cld
stc
repz
mov
out
loope
addr16
popa
test
mov
jle
dec
inc
mov
cltd
test
lahf
and
jne
enter
cmc
nop
mov
movsl
inc
inc
pop
jns
xchg
dec
inc
rcrb
rolb
xchg
ja
push
aas
and
push
pop
jns
test
mov
sub
xchg
jns
aad
adcb
insb
xchg
icebp
xchg
sub
xor
in
lcall
movsb
cld
addr16
dec
aas
out
in
push
test
iret
std
iret
dec
aas
out
scas
icebp
popf
xor
pop
loopne
push
jmp
out
mov
and
or
addr16
xchg
sub
xchg
js
lock
fildll
in
push
adc
and
outsb
in
push
pop
nop
aaa
push
cmp
adc
cmp
push
pop
jns
int
dec
loope
push
leave
scas
and
jns
xchg
jmp
and
stc
pop
cmpsb
faddp
pop
pop
jns
xchg
andl
mov
and
imul
jg
aam
and
call
lret
stos
clc
jne
shlb
test
lret
add
outsl
iret
mov
es
out
mov
sbb
mov
in
aas
cld
repnz
dec
clc
in
sub
std
das
das
sti
ljmp
lahf
aas
sarb
int
aam
shlb
repz
pusha
fdivs
mov
gs
lahf
aas
jg
jg
jns
lds
mov
lret
js
stc
repz
int3
cmp
push
cmp
adc
cmp
fisubrl
out
cld
xlat
je
or
cmpsl
lock
gs
pusha
push
xchg
push
fdivrp
out
pcmpeqd
in
divb
pop
scas
push
lea
fnsave
aas
jp
ret
xlat
jne
mov
in
ja
cmpl
cmp
jl
insb
jge
push
mov
rcrl
imul
jg
pop
jle
sub
pop
out
fidivrs
iret
xchg
adc
mov
mov
stc
fisubrl
push
test
mov
mov
cwtl
sub
fists
jmp
shrl
scas
mov
dec
cmpsb
lret
dec
data16
push
scas
dec
and
mov
outsl
repnz
ja
jbe
and
loopne
sub
sub
mov
cli
mov
pop
scas
and
cmp
movsb
mov
aam
stc
push
pushl
xchg
pop
pop
ljmp
xor
dec
mov
out
lahf
mov
aaa
pop
mov
fidivrs
pop
jg
cld
stc
push
jno
pop
ja
xlat
lock
push
adc
ret
mov
das
aas
jmp
mov
sarb
pmulhw
stc
aaa
test
pop
daa
mov
fstps
lods
andb
mov
jne
subl
dec
pop
lods
stc
dec
jns
xchg
ja
pushf
movntps
cmpsl
dec
adc
jle
in
adc
cmp
adcl
jb
xchg
ja
pop
in
js
popf
mov
fsubp
sub
leave
icebp
sti
mov
repnz
and
mov
jns
xchg
push
push
cmp
sti
sarb
jbe
nop
pop
pop
xor
or
lock
cld
pop
fidivs
or
aas
lods
pop
out
das
lret
les
xchg
jae
icebp
repnz
inc
mov
adc
in
sub
mov
cs
mov
mov
lds
mov
sub
mov
sbb
pop
insl
les
mov
mov
xchg
add
jns
dec
mov
mull
js
add
enter
cli
cld
stc
daa
jle
pop
pop
mov
lock
pop
xor
aas
jg
fdivl
cmpsl
repnz
dec
xchg
lahf
fisubl
mov
jge
in
jnp
packuswb
incb
mov
sub
imul
stc
dec
clc
das
jg
fwait
jno
push
mov
mov
imul
cmpsl
loop
aaa
mov
push
pop
jns
lret
imul
xor
cmpsb
or
mov
xlat
outsb
or
sahf
shlb
dec
ret
scas
mov
mov
and
popa
std
jb
daa
add
mov
xor
decb
jb
lea
in
add
in
mov
stos
dec
push
fldenv
repz
clc
roll
pop
jle
xor
repz
into
cmc
push
jg
cld
stc
sarb
mov
cmpsb
dec
pop
push
lods
push
loopne
xchg
aas
mov
aas
out
mov
mov
int
push
repnz
inc
repz
scas
mov
lahf
ljmp
sub
adc
iret
aas
test
jle
adc
mov
in
and
mov
dec
sbb
lds
test
push
inc
jecxz
push
xchg
push
pop
jns
inc
mov
dec
inc
outsl
xchg
adc
test
mov
andb
pop
add
pop
push
cmp
repnz
int3
out
inc
sahf
push
test
xchg
dec
xor
iret
xor
pop
out
jmp
push
test
sub
sub
lcall
and
pop
jo
push
jns
pop
mov
push
jo
dec
xchg
pop
stc
repz
sahf
push
divb
push
sub
fisubs
stos
call
or
push
testl
pminsw
sub
lock
mov
ss
mov
aaa
pop
ja
jnp
adc
jle
jno
fs
out
enter
out
loope
mov
cmp
lods
xchg
lret
mov
add
jmp
add
cli
repnz
and
dec
mov
sub
mov
xchg
incl
sbb
repnz
js
pop
cmp
in
pop
jns
mov
jecxz
repnz
sahf
test
in
push
sbb
mov
out
xchg
pop
pusha
test
xor
sti
mov
in
fcompl
sar
out
xchg
jg
popw
jnp
inc
movsb
adc
out
pop
cld
sbb
dec
leave
or
and
inc
cmp
repnz
or
sar
loop
push
mov
sub
jnp
sbb
push
mov
ficomps
lret
jecxz
icebp
and
pop
sub
fucomi
enter
pop
imul
pop
notb
xchg
mov
ljmp
cld
stc
repz
and
cld
mov
lret
pop
iret
lahf
aas
jg
sbb
js
mov
in
pop
xchg
xchg
pop
stos
inc
push
inc
push
sar
lods
sarb
sub
sub
scas
xor
das
aas
jg
loopne
sub
mov
pop
jg,pt
jle
jo
cmp
arpl
sub
jl
scas
imul
loopne
stos
lcall
xor
xor
repnz
sbb
stc
les
stos
add
cld
stc
pop
scas
inc
adcl
lea
aas
jg
ljmp
stos
scas
movsb
mov
mov
cmpsb
movsl
sub
cmp
inc
and
das
aas
jg
dec
das
add
scas
push
mov
lret
das
repnz
dec
mov
test
inc
jns
and
sub
mov
repnz
scas
mov
pop
fbstp
cmp
arpl
in
repnz
into
pushf
int3
lahf
rorb
and
inc
xor
mov
jmp
scas
int3
in
push
fmulp
pop
je
pop
jns
les
in
cli
jp
push
pop
jns
jno
shlb
adc
test
cmpsl
and
aaa
sbb
insb
popf
fistpll
mov
or
inc
ljmp
mov
mov
inc
inc
mov
jle
cld
stc
icebp
mov
outsl
add
shlb
dec
lret
iret
lahf
aas
ljmp
or
loop
push
rcrb
or
mov
out
mov
add
lret
out
pop
xchg
mov
pop
add
xor
push
pop
jns
adc
cli
pushl
sbb
fldl
xchg
cmpsb
mov
jge
stos
insl
fistpll
pop
jns
in
push
outsl
xor
test
xor
icebp
jns
xchg
push
pop
jmp
scas
ret
in
xchg
arpl
mov
lret
mov
dec
mov
stc
cmpsl
cmc
scas
test
lret
out
xchg
cmp
clc
push
mov
cmp
inc
in
iret
cld
lods
lock
sbb
aam
iret
xor
lret
sti
repz
jg
or
inc
dec
cmp
rcrb
fnstsw
pop
xor
iret
lahf
aas
sbb
sarl
dec
cwtl
es
pushf
dec
gs
leave
repz
test
sub
iret
scas
lods
nop
fiadds
or
and
cmp
sti
fwait
cmp
and
add
push
andl
jns
mov
sub
add
xor
or
jg
mov
enter
pop
pusha
pop
inc
and
lahf
aas
mov
inc
int3
cmc
test
jo
pop
stc
repz
add
xor
lods
xor
xor
cmpsl
es
lahf
aas
jg
add
addr16
aas
xchg
pop
rol
bound
push
pop
xchg
inc
std
sti
dec
out
dec
xchg
jge
aad
xchg
push
fidivrs
cld
scas
lcall
sbb
jns
ljmp
add
jg
mov
add
scas
xchg
cli
cmc
inc
out
adc
push
xchg
ja
mov
outsl
mov
insl
xchg
repz
les
scas
or
stc
fldcw
sti
repnz
ret
push
lock
jle
jns
xchg
push
test
xor
mov
mov
dec
jg
pop
pop
stos
jb
dec
aad
mov
repz
lahf
adc
out
mov
mov
inc
mov
stc
das
cwtl
sbb
out
and
and
push
iret
lahf
aas
or
inc
jge
into
mov
repz
mov
push
inc
lods
test
cmp
in
dec
cmp
and
cs
ss
push
mov
fcoms
xchg
or
ret
iret
lahf
push
scas
sub
cmpsl
insl
sbb
aaa
mov
mov
out
add
fildl
fidivrs
mov
cmpsl
std
push
iret
jns
and
jns
xchg
push
cmp
jo
sub
pop
add
addr16
fs
cmp
jae
in
lcall
out
add
in
cmp
jg
sti
and
jno
pop
adc
jecxz
jge
sbb
into
out
out
aas
in
out
es
jle
in
xchg
push
push
mov
push
ret
cld
cmp
sar
iret
jns
xor
mov
mov
lea
movsl
orl
lret
pushl
and
dec
and
leave
cli
repnz
movsl
rorl
out
out
or
jg
dec
mov
sub
dec
and
mov
inc
test
cld
xchg
movd
pushf
mov
add
in
mov
dec
gs
out
out
es
stc
pop
mov
lea
mov
sahf
fs
int
aas
jg
cld
adc
out
enter
loopne
shr
out
out
lahf
pop
into
mov
jnp
jno
daa
push
pop
mov
cltd
clc
mov
lahf
add
sub
jle
out
pandn
xchg
clc
in
cmp
pop
scas
jg,pt
cld
fiadds
shlb
lcall
or
fbstp
pop
test
stc
xchg
iret
cwtl
enter
mov
pop
lret
mov
dec
mov
add
sub
repnz
dec
xchg
int
add
mov
lret
mov
and
xchg
outsb
icebp
enter
test
mov
mov
and
mov
cld
insl
pop
adc
scas
cmc
pop
dec
ror
iret
lahf
scas
cltd
sbb
sarb
xacquire
mov
iret
dec
into
shll
inc
jl
scas
popa
scas
outsl
out
pushl
iret
fdivrp
sti
jb
bound
xor
pusha
loop
jge
push
lock
xchg
push
js
xor
shlb
lds
stc
xor
cwtl
mov
call
xchg
ja
jg
inc
dec
push
scas
lea
push
sub
call
out
sub
pop
jecxz
popa
cwtl
lret
mov
or
mov
pop
jecxz
rorb
jle
imul
out
in
lahf
movsl
loop
in
fcomip
outsb
sub
mov
inc
inc
outsl
mov
sub
iret
mov
iret
call
or
xchg
hlt
repnz
pop
sbbb
dec
jle
addr16
mov
fisubs
dec
test
lods
cmpb
aas
das
test
psllq
iret
aas
fidivrs
insl
cmp
faddl
jg
cld
stc
cld
inc
mov
jge
mov
push
cmp
dec
mov
pop
jle
das
sub
push
cmp
mov
das
cmp
jg
xchg
repnz
push
imul
cmp
psraw
mov
push
jle
je,pt
adc
cmp
add
es
or
scas
mov
in
scas
loop
pop
pop
in
cli
mov
jns
xchg
push
sub
test
insl
or
fstl
incb
sub
jmp
push
pop
jns
xor
fmuls
sbb
xchg
sub
jb
lret
xchg
popf
push
sti
push
pushf
mov
jmp
std
mov
notl
dec
jg
in
jns
xchg
push
xor
dec
jns
aaa
jle
ret
icebp
add
xchg
ja
pop
pop
test
mov
sbb
icebp
test
pop
jns
fwait
ljmp
insb
xchg
cltd
or
sub
cld
stc
inc
push
scas
and
jle
aaa
nop
pop
push
or
push
jbe
mov
dec
xor
sub
inc
stc
repz
es
mov
push
call
fisubrl
inc
pop
jle
cld
pop
cld
mov
or
pop
add
das
pop
pop
mov
mov
scas
mov
xchg
orl
out
lret
mov
pop
iret
int
repnz
das
out
clc
repnz
mov
stc
xchg
cld
stc
repz
mov
call
jmp
push
aas
mov
jg
or
bound
ret
mov
sbb
dec
mov
fnsave
das
mov
ror
fdivrp
xchg
movsl
rolb
push
lret
das
adc
addl
shl
jp
xorl
in
lret
aas
inc
inc
and
xlat
or
lcall
push
and
das
scas
mov
or
pop
push
jbe
ljmp
lahf
mov
scas
push
movhps
cld
stc
repz
mov
jge
es
xor
bound
or
adc
pop
jle
jl
pop
bound
dec
pop
push
mov
mov
repnz
clc
repnz
inc
icebp
and
mov
scas
filds
add
add
cli
out
lahf
aas
nop
inc
fisttpll
shr
cmpsl
and
cld
stc
repz
fisttpl
loopne
pushf
dec
pushf
add
pop
jle
call
push
ja
xchg
sti
lahf
aas
jg
ret
test
cwtl
icebp
cmc
call
pushf
cld
hlt
repnz
lret
iret
jl
push
leave
subb
cmp
sti
cmp
inc
lahf
dec
jmp
xor
jl
scas
mov
sub
mov
cmp
icebp
cmp
scas
jge
aas
mov
repnz
pop
scas
mov
add
rcl
rolb
mov
cmpsb
jl
and
lock
mov
mov
lret
lds
outsb
mov
leave
ret
lcall
sub
mov
mov
mov
ret
sbb
gs
and
lds
in
sub
sub
pop
jle
mov
sahf
call
xchg
push
pop
jns
cld
popf
ds
pop
sub
fidivs
or
aad
addr16
lahf
pop
push
or
into
sbbb
cld
stc
repz
rorl
es
push
and
aas
jg
jp
dec
cmp
movsb
mov
pop
jp
repz
and
scas
std
mov
xchg
jno
add
inc
jp
pop
loop
lahf
aas
jg
out
mov
cmp
jno
xor
cmp
stos
xchg
xor
scas
mov
jge
push
push
pop
jns
jg
jg
das
js
jmp
imul
outsb
movsl
stc
mov
stc
cld
stc
repz
iret
repz
add
lods
das
out
jle
mov
dec
dec
cmp
jecxz
lahf
outsb
repz
ds
sahf
clc
cmpsb
lret
ljmp
cld
stc
fcmovb
push
stos
mov
cmp
call
jle
adc
mov
outsl
arpl
adc
inc
bound
jns
xchg
push
pop
repnz
sbb
xor
test
jge
scas
idivb
adc
daa
in
pushf
push
xor
jns
imul
iret
push
outsl
fisubrs
popl
in
push
push
outsl
xchg
mov
repnz
scas
int
dec
popf
shll
xchg
ficoms
pop
push
cld
push
into
pop
aaa
rorb
cld
stc
repz
movsl
push
mov
mov
fdivl
jbe
out
dec
in
pusha
cmc
cmp
push
fsubrp
pop
mov
mov
dec
in
testl
pop
pop
sub
push
inc
cld
adc
mov
adc
rcl
add
xor
outsb
sbb
int3
xor
cld
sub
iret
or
aam
test
lock
sti
mov
sub
ds
daa
mov
cmpsb
insb
jns
dec
sub
pop
jle
outsb
pop
and
std
xor
mov
imul
dec
jp
aas
dec
or
xor
xchg
ja
mov
xchg
or
push
fdivrp
jb
mov
inc
call
fmul
xchg
fnstenv
xchg
sub
mov
testl
cltd
dec
out
pop
dec
mov
pushf
lcall
mov
jecxz
loope
mov
pop
fidivrs
imull
jg
dec
lcall
jl
repnz
aas
push
pop
sti
sbb
pop
mov
das
iret
das
hlt
inc
filds
imul
cld
stc
repz
cld
ds
or
mulb
lods
pop
jg,pt
outsl
sahf
sub
cmp
lret
arpl
jg
mov
push
sbbl
cmpl
jg
js
mov
jle
out
xor
push
push
sbb
loopne
aas
pop
leave
lea
jns
xchg
push
in
xor
in
adc
xchg
push
es
stos
push
fdivrl
adc
lea
cmpsb
push
out
stc
repz
into
adc
add
cmpsb
fcoms
sub
jg
and
mov
xor
mov
rol
dec
addb
mov
lahf
fsubl
sub
sarb
iret
and
aad
lret
lret
or
cmp
mov
pop
std
pop
mov
jge
pop
scas
mov
pop
popf
dec
xchg
cmpsb
bts
fildl
dec
cmp
in
sub
js
test
out
data16
cld
xchg
jle
sbb
cmpsl
jo
add
out
lahf
aas
push
pusha
decl
test
or
jg
sahf
lcall
pop
adc
xlat
jnp
iret
jg,pt
cld
push
lock
push
popf
cmp
out
lret
mov
dec
das
sub
fs
into
out
jle
sti
repnz
cli
outsl
stc
xchg
mov
inc
jg
repz
or
out
push
lods
stc
repz
dec
popf
dec
adc
mov
push
jg,pt
cld
ljmp
cmp
xchg
jle
movsb
pop
sbb
aas
inc
ret
jmp
cld
push
pop
lods
mov
push
jnp
jl
test
mov
cmpsl
mov
push
fnstcw
test
mov
lahf
push
out
lahf
aas
cmc
xorl
cltd
lock
xchg
dec
loope
ja
repz
jae
sub
fildll
lahf
mov
mov
add
shll
scas
inc
sub
insb
aam
jbe
sbb
shrl
lea
sahf
sbb
lods
mov
sbb
inc
pop
arpl
lret
sub
sub
xchg
cld
stc
repz
imul
add
dec
hlt
aam
pop
lahf
xchg
push
pop
pop
ljmp
aas
mov
mov
cwtl
cmp
mov
imul
repz
jb
inc
mov
pop
mov
fdivrp
pop
std
mov
xchg
pop
testb
pop
jle
or
pop
or
sbb
pusha
mov
add
push
mov
pop
jle,pn
cld
stc
xchg
mov
add
enter
lahf
aas
mov
in
stos
fld
ljmp
jnp
aas
xor
sbb
data16
xchg
aas
jg
cld
out
imul
sbb
sub
iret
lahf
aaa
and
loope
sub
jne
xor
cli
repnz
pushf
out
mov
jp
lahf
aas
jg
cmp
mov
test
cli
mov
repz
notl
popf
lcall
mov
sarb
cld
xor
cmpb
imul
pop
loope
adc
pop
ret
mov
daa
sub
lahf
aas
jmp
jmp
fs
and
rcr
xchg
js
mov
repnz
call
or
mov
push
out
or
lds
cld
fdivrs
jle
mov
sub
sub
pop
in
mov
cli
test
jg
mov
push
and
arpl
jne
lret
cmp
in
inc
dec
inc
out
and
movsb
push
out
xchg
sub
out
imul
and
insl
mov
jns
pop
in
jb
mov
pop
xchg
popa
mov
xchg
lahf
jg
mov
jl
mov
lahf
aas
jg
jle
mov
mov
cmovp
mov
test
mov
out
push
inc
lahf
iret
push
shrb
jg
cli
pushf
sub
mov
stos
daa
dec
mov
pop
jns
xor
shlb
sub
jge
pop
jns
xchg
mov
xlat
daa
jae
push
arpl
in
push
into
add
in
xchg
xchg
arpl
outsl
jmp
test
fsubr
cmp
adc
cmp
sbbb
mov
xor
popf
ljmp
lods
pop
scas
pop
and
ficomps
jns
fstl
jg
js
imul
test
adcl
or
mov
scas
dec
repz
int
arpl
sub
imul
mov
adc
pop
pop
dec
fbld
lret
or
fldt
mov
mov
or
or
bnd
inc
jmp
je
aas
dec
out
cmp
scas
mov
in
add
inc
out
pop
jge
mov
mov
loope
iret
mov
push
adc
mov
in
push
fdivrp
data16
xor
adc
pop
fidivrs
arpl
xor
or
mov
adc
jg
cld
pop
pop
inc
pop
rcr
sarb
lea
jge
xchg
sub
int3
stos
fnstcw
jno
xchg
push
fimuls
push
sub
add
add
stc
repz
mov
mov
adc
imul
outsb
push
std
rcrl
pop
xor
jg
mov
jg
push
punpckldq
pop
jns
pop
loopne
outsl
addr16
dec
faddl
negl
aaa
xor
dec
shl
lret
lods
add
xchg
jb
xchg
pusha
gs
sub
dec
iret
xchg
cmp
push
insl
bound
push
pop
push
pop
stc
in
mov
xchg
push
or
mov
xchg
rcll
pop
fsubs
pop
add
in
push
mov
mov
add
pop
pop
dec
add
xor
lcall
out
lahf
jno
clc
and
jb
mov
lock
stc
sub
ficoms
push
out
lahf
pop
mov
push
andl
shlb
adc
mov
cmp
aaa
movsb
iret
lahf
aas
jg
add
repnz
popf
adc
ret
cld
stc
repz
jl
jo
aaa
sub
enter
jo
aas
jg
pop
mov
aaa
int3
into
std
mov
pop
les
out
adc
cld
stc
repz
sbb
fstpt
loope
aas
jg
jle
jo
data16
cmpsb
and
adc
mov
clc
sub
icebp
cmp
stos
add
push
adc
cmp
push
inc
sarb
or
mov
add
outsb
enter
fildll
scas
mov
jg
lcall
testl
loope
lock
stc
repz
pop
adc
in
add
cltd
test
jle
subl
mov
xor
in
lahf
aas
stc
adc
fimuls
sbb
lods
iret
or
scas
push
ret
out
jl
movntps
xor
pop
cmp
ja
js
clc
repnz
test
cs
stc
repz
push
jecxz
and
movl
std
cmp
pop
cmp
daa
neg
jl
fsubrp
fsubl
jp
pop
lds
xchg
push
scas
xchg
aaa
cmp
out
lret
sub
das
rclb
daa
add
sbb
mov
dec
sahf
add
call
inc
enter
in
jmp
stos
hlt
xorb
repnz
sar
push
xlat
sahf
cmp
rcrl
mov
dec
lret
mov
jae
repnz
inc
out
ljmp
es
fisubl
lret
rcl
mov
mov
iret
insb
shrl
in
sub
popa
adc
arpl
clc
cmp
movsl
stc
jge
stos
jb
pop
jns
shll
sub
pop
sbb
mov
mov
xchg
xchg
lahf
aas
jg
dec
pushf
jecxz
leave
out
xchg
jno
pop
mov
aam
pop
aas
push
mov
dec
ja
lahf
aas
aas
push
mov
sbb
rcl
int3
out
aam
out
dec
cmc
jl
mov
lahf
lock
mov
out
jmp
fcmovu
cmp
mul
fisttpl
or
movsl
lea
add
jns
xchg
push
sbb
movsb
push
pusha
sbb
adc
out
cmp
xchg
push
pop
mov
ljmp
faddl
adcl
in
pop
scas
mov
mov
mov
popa
jb
sub
aas
mov
enter
lcall
out
imull
sbb
jmp
int
bound
mov
pushf
in
lods
aad
add
ja
sub
mov
sub
gs
add
jno
mov
out
and
jo
inc
mov
cmp
mov
nop
sub
lcall
lock
shrb
daa
cld
imul
mov
lcall
jg
and
stos
int
xor
loopne
jnp
je
stc
repz
and
lcall
paddsb
stc
xchg
shrl
lahf
fisubs
outsl
add
push
enter
pop
jns
fnsave
cmp
ficompl
lret
xchg
push
inc
sub
pop
xor
sbb
out
lahf
dec
jno
jmp
mov
jg
cld
stc
sbb
rcll
inc
push
scas
push
ds
mov
and
xchg
pusha
jge
mov
pop
movsb
dec
fidivrs
adc
dec
mov
pop
jns
pop
jo
test
cmp
jns
xchg
adc
ljmp
jne
pop
cmc
mov
or
and
fidivrs
stc
les
js
mov
ds
in
ja
xchg
hlt
or
mov
push
mov
xchg
push
pop
jns
adc
in
cmp
lahf
pusha
sbb
outsl
icebp
in
ds
dec
cmp
repnz
mov
fwait
pop
and
pop
push
xor
lcall
jle
mulb
push
stos
cld
jb
xchg
inc
fisttps
ljmp
repz
add
xor
dec
cmp
push
jle
and
scas
xchg
push
fisubrs
mov
cmpl
pop
jns
sti
shrb
inc
test
cmp
jo
pop
jns
xchg
sub
cmc
ret
push
fwait
es
xchg
push
xchg
mov
in
lret
nop
data16
fdivrp
adc
outsl
into
lds
mov
and
pop
out
js
pop
into
enter
xchg
das
cltd
hlt
mov
pushf
jno
jo
pushf
lret
xchg
lret
pop
gs
ds
je
stc
repz
dec
xchg
outsl
jnp
fidivrs
jg
cld
inc
ss
mov
lcall
out
lahf
and
dec
js
sbb
mov
jge
stc
cwtl
jl
adc
pop
and
ja
and
cld
add
jl
out
shlb
xor
lahf
aas
jg
sarb
insb
lds
fisubs
out
mov
int
icebp
lcall
outsb
pop
pop
fidivrl
lret
push
aas
aas
xchg
jle
ret
inc
les
fcoml
pop
jns
xchg
cld
add
inc
inc
jbe
lock
xchg
push
enter
pop
cltd
fsubrs
xchg
push
pop
jg
out
imul
mov
push
pop
jns
insl
mov
testb
sub
xchg
test
and
fnstenv
outsl
or
in
jns
xchg
popa
outsl
push
jg
xor
sbb
xchg
sti
in
ja
mov
subb
push
push
ja
pop
jns
aaa
fdivrl
inc
fdivrs
in
xchg
fisubs
imulb
out
iret
mov
add
mov
sbb
ficompl
jle,pt
cmp
out
lods
fcoms
pop
in
aaa
cltd
sbb
cld
rsqrtps
lea
std
dec
mov
bound
out
ss
fildll
lret
mov
inc
dec
xor
lods
mov
dec
fisttps
jg
pop
orl
xchg
mov
pop
aad
arpl
lret
xchg
out
cwtl
repz
stos
sahf
test
fistps
outsb
sub
jg
fs
push
stc
cld
ds
and
notl
adc
outsl
es
ja
repnz
fcompl
cltd
mov
mov
jmp
jmp
test
sbbl
xchg
push
fidivrs
inc
aam
outsb
sub
iret
cltd
xchg
stc
adc
ds
or
div
lods
push
or
xor
cld
pop
mov
mov
inc
pop
adc
inc
lret
fsubrl
and
or
in
add
jns
insb
xchg
test
push
call
in
leave
pinsrw
cld
stc
test
cmp
pop
gs
jl
xorl
int3
fadds
mov
dec
ljmp
jns
cwtl
mov
test
pop
iret
lahf
aas
jg
shl
jb
insb
pop
push
sbb
outsl
loop
stc
repz
addb
sbb
jne
ds
dec
jge
shlb
outsb
fnstenv
das
lahf
aas
insb
sahf
outsl
flds
in
jp
xor
repz
into
nop
cmp
mov
lock
add
jge
cld
pop
and
sub
jg
ret
sbb
pop
inc
xor
or
out
popf
dec
cmpsl
inc
out
and
popf
xchg
shrb
stc
mov
lahf
xchg
lret
imul
nop
mov
adc
mov
lcall
jne
scas
inc
inc
out
shl
nop
rclb
xchg
adc
sub
jmp
push
cs
mov
jg
dec
enter
mov
popa
mov
xor
test
cltd
add
sub
aas
call
mov
pop
ror
sub
orb
sbb
mov
mov
cmp
push
cld
or
aas
lcall
mov
xor
inc
cmpsl
push
cld
cwtl
shrb
scas
adc
pop
jmp
add
mov
dec
out
mov
cs
lret
mov
mov
scas
les
mov
xchg
sbb
test
repz
jmp
mov
outsb
fidivrs
cld
stc
loopne
ret
push
inc
push
int3
xlat
and
leave
jg
push
sub
push
iret
add
fildll
xchg
ja
sbb
jp
in
rolb
push
pop
jns
push
xor
dec
pop
push
add
in
fwait
leave
push
dec
and
add
mov
aam
in
ja
mov
adc
pop
in
adc
stc
adc
fidivrs
mov
mov
aas
jg
test
mov
pop
and
aas
aam
or
into
sahf
or
sub
repz
lahf
ljmp
jmp
ds
sub
stc
mov
dec
lahf
and
mov
loop
aas
aas
add
xor
adc
in
iret
mov
lods
fisubl
js
sub
push
pop
jns
into
jge
test
mov
and
jns
js
enter
mov
fidivrs
inc
fnstsw
xchg
std
cmp
xchg
clc
push
pop
jns
test
shr
push
lret
jle
inc
lock
xchg
aad
icebp
mov
daa
push
pop
jns
dec
sub
dec
movq
iret
sbb
std
jb
xchg
out
lea
test
add
inc
lods
push
mov
pusha
sahf
ds
fistps
scas
xor
popf
loope
pop
jns
pop
adc
loopne
movzbl
jl
or
rorl
aad
ror
cs
dec
cmp
pop
jns
fisttpll
cmp
xor
sub
lahf
jg
pop
movsb
cmp
add
stc
repz
dec
cmpsl
scas
add
fists
repz
mov
into
sub
scas
pop
fwait
xchg
dec
cld
inc
jp
sbb
jp
pop
movsb
nop
aaa
cli
sbb
dec
pusha
shl
pop
jmp
lret
or
daa
push
mov
scas
mov
mov
sbb
jne
jle
insb
cmp
scas
mov
xchg
sbb
mov
jle
pop
scas
stos
stc
aam
stc
scas
div
lret
cs
std
inc
jb
lret
test
mov
and
and
or
add
jle
mov
aaa
dec
push
aam
pop
mov
adc
xchg
inc
mov
xchg
imulb
out
cmc
xchg
xchg
data16
jl
cmp
lret
mov
nop
sti
mov
sub
mul
adc
das
scas
sbb
repz
push
aas
xchg
pushf
aaa
or
jecxz
imul
ds
adc
xchg
daa
movlps
pop
repz
lahf
dec
fdivrp
adc
add
cld
stc
fs
das
jbe
sti
cmp
sub
popa
imul
out
out
lahf
aas
push
jecxz
dec
loop
stos
cmpl
repz
movl
test
scas
inc
jo
jecxz
pop
push
pop
cmp
cs
lods
pusha
pop
daa
insb
popa
lahf
aas
mov
push
and
or
lret
out
dec
scas
push
dec
mov
pop
sub
das
das
push
pop
jns
jnp
xor
inc
mov
jo
add
sub
sub
jno
in
inc
and
lret
mov
mov
jns
icebp
inc
add
dec
and
ja
jle
ds
int
sub
mov
dec
js
out
das
xchg
outsb
push
mov
repz
cld
stc
repz
pop
sarl
or
inc
int3
mov
mov
aas
aas
adc
sbb
in
inc
pop
mov
out
out
lahf
or
and
pop
inc
in
mov
jl
test
shll
mov
out
in
sub
pop
sub
push
stos
sbb
cld
nop
clc
sbb
mov
push
mov
movhps
mov
cli
aad
xchg
inc
hlt
xor
iret
lahf
mov
rcrl
push
push
mov
je
lahf
jg
cld
stc
inc
into
std
mov
jae
mov
imul
xchg
iret
lahf
aas
addr16
movb
inc
scas
mov
add
insl
dec
push
cli
cmpsb
add
cmpsl
ja
shld
jns
pop
ja
push
loope
jns
jmp
icebp
fiadds
mov
xchg
ss
loope
dec
cmpsb
xlat
lahf
aas
jg
into
pushf
jne
roll
fld
pop
xchg
lahf
ret
fnstsw
fimuls
xchg
and
outsl
shlb
pop
jns
rolb
push
adc
je
pop
push
dec
pop
jns
xchg
cmp
add
stc
jbe
xor
jns
xchg
push
jg
push
inc
fs
ja
in
push
pop
push
leave
or
out
int3
les
or
inc
pop
in
stc
arpl
enter
or
les
jle
lock
movsb
outsl
jecxz
js
outsl
fdivrl
imul
cmp
sub
adc
loop
aas
xchg
mul
push
sbb
mov
das
out
int
rorl
push
pop
pop
jns
xchg
push
cmpb
imul
decb
outsb
aas
adc
cmp
cwtl
pop
jns
mov
iret
adc
je
je
in
push
jnp
pusha
outsb
int3
es
testl
mov
lret
loop
xchg
pop
ret
das
and
repnz
cmp
cmpsb
les
mov
xchg
movhlps
xlat
jmp
pop
fists
pop
inc
in
lahf
aas
xchg
call
xchg
jg
add
out
cs
inc
into
aaa
enter
iret
lahf
aas
gs
lret
ret
ss
lds
cld
stc
repz
xchg
lods
loopne
outsb
bound
push
push
add
negl
jl
add
sub
fbstp
xchg
and
push
push
adc
pusha
sti
imul
push
mov
insb
shl
fistpll
dec
inc
popa
loopne
aas
cmp
xor
sub
inc
movsl
mov
mov
repnz
fsubrs
jne
xlat
push
je
insl
ret
clc
in
lret
sbb
sub
iret
ds
xchg
jp
sub
pop
pop
dec
vunpckhps
aas
jg
or
out
out
cmpsl
pushf
jge
or
in
xchg
lahf
pop
cltd
lods
adc
mov
stc
pop
icebp
dec
les
mov
out
decl
enter
pop
incb
xor
lea
cs
xor
mov
jg
pop
push
xor
test
js
jnp
shrb
repz
push
outsb
lahf
push
subb
xchg
repnz
mov
mov
lea
outsl
inc
or
decl
lea
into
dec
jnp
test
xchg
mov
xchg
out
jg
push
fdiv
out
out
lret
jle
or
mov
jg
lds
mov
cmpsl
adc
out
mov
mov
sub
mov
in
dec
mov
movsb
jmp
fldenv
dec
sbbb
int
loopne
inc
ljmp
push
sti
gs
stc
loope
fisubl
cmp
lea
push
aas
or
adc
repnz
mov
cli
pop
push
call
pop
jns
cld
scas
int3
adc
sbb
nop
lea
add
in
lret
ret
mov
xchg
push
fidivrs
popf
loop
imul
ljmp
jns
jge
inc
sbb
bnd
es
pop
mov
das
enter
mov
pop
jns
fstpl
fcomps
leave
js
jge
jbe
jns
sub
lahf
jg
mov
push
mov
mov
repz
inc
ffreep
adc
mov
xor
cmp
sahf
lea
xlat
adc
mov
adc
cld
stc
repz
lds
lahf
and
out
into
xor
js
push
push
iret
lahf
aas
jg
dec
cmp
push
subl
repz
add
jno
cmp
leave
cli
in
xchg
aas
jg
fs
pop
xor
popa
mov
push
fdivrp
lea
cld
xor
lahf
lahf
push
ss
or
fs
push
pop
jns
in
lret
xor
das
xchg
mov
pop
jns
xchg
je
dec
addr16
iret
and
popa
hlt
pop
dec
jg
dec
addr16
mov
stos
sub
lahf
jg
movsl
jle
jnp
fisubrs
in
repnz
mov
sarb
iret
mov
or
test
inc
repz
xchg
iret
lahf
into
jno
enter
nop
ret
push
in
mov
pop
xor
daa
mov
int3
iret
lahf
add
jmp
test
stc
repz
stos
adc
pop
repnz
ficoms
scas
in
fwait
mov
and
out
test
mov
mov
decl
adc
jg
cld
stc
fs
call
mov
and
aas
mov
mov
cmpsl
jecxz
ljmp
lahf
rcr
mov
outsb
scas
inc
mov
outsl
xor
mov
mov
xchg
pop
bound
lods
repz
das
sahf
aam
maskmovq
imull
pop
aas
mov
mov
inc
jg
cld
stc
mov
test
mov
mull
aas
cwtl
mov
lret
mov
push
repz
dec
repz
fistpll
jg
loopne
xchg
sahf
mov
sbb
pop
cld
stc
pop
mov
adc
insl
cwtl
scas
adc
pop
jns
mov
rcrl
add
lds
loope
out
ret
inc
pop
pop
dec
mov
jb
in
imul
lret
outsl
xchg
movsb
jecxz
out
not
cld
dec
mov
aam
jecxz
sahf
pop
and
xchg
adc
dec
inc
dec
imul
pop
nopl
shl
jmp
jle
cld
stc
repz
movsb
dec
stc
sbb
iret
lahf
aas
jg
and
pop
inc
jne
mov
mov
flds
ret
popf
xchg
push
fwait
shrl
iret
jg
add
xor
jae
iret
lahf
aas
idivb
xchg
hlt
stos
fs
in
cli
in
aas
cmp
mov
sbb
or
gs
xchg
aas
push
jl
popf
popf
in
push
pop
adc
cs
jecxz
inc
dec
aas
sbb
lahf
aas
mov
jns
dec
neg
dec
pop
aad
in
iret
and
outsl
stos
fists
stc
pop
xchg
sar
stc
cmpl
jbe
fsubl
repnz
pop
jle
mov
paddusw
lret
pop
inc
test
stos
xor
ds
loopne
int3
xor
in
shl
jns
or
andl
test
xchg
mov
pop
clc
sub
dec
mov
jg
inc
scas
xor
or
or
push
cmc
aas
jmp
leave
cmp
ds
pop
fs
xor
shrb
lahf
cmp
mov
cld
cs
inc
xor
js
ss
aas
push
outsb
fwait
mov
mov
dec
jge
ss
jg
inc
icebp
in
iret
sub
inc
and
daa
scas
lock
cld
stc
aaa
outsb
sti
pop
inc
dec
cmp
in
fnstsw
push
lret
sub
mov
jp
and
cmp
mov
lahf
jg
aad
sarb
iret
cli
repz
repz
leave
sbb
mov
and
es
aas
jg
cwtl
add
test
lcall
pop
mov
shlb
sub
pop
jmp
jne
jge
stc
jae
sbbb
cwtl
add
das
fstl
leave
mul
xchg
push
or
mov
cmovae
jns
test
fwait
rorb
fnstenv
repz
insb
pop
repz
jp
repnz
jecxz
dec
cmpsb
scas
mov
lahf
aas
repnz
mov
adcb
sub
xchg
lock
or
dec
int3
push
jbe
repz
adc
cmc
stc
test
adc
das
lahf
aas
jg
jmp
adc
push
aam
sti
jb
fstpl
outsl
dec
ret
adcb
mov
cltd
or
lds
jno
cmp
scas
adc
fwait
decb
mov
lahf
sbb
out
cmp
scas
mov
push
pop
fs
cmp
cld
stc
int3
lahf
imul
pusha
int
stos
mov
xor
shrb
lahf
aas
stos
lods
fistpl
lock
fsubrp
lret
pop
mov
int3
jg
inc
lret
rcll
mov
adc
test
icebp
mov
scas
adc
adc
stos
cld
add
mov
mov
aas
jg
sbb
incb
or
jne
je
sbb
mov
cmp
dec
in
ja
lahf
lret
lahf
inc
sbb
cli
sub
pop
jns
out
js
mov
jnp
jp
pop
jns
ret
push
lds
loop
pop
lods
out
test
in
add
lds
pushf
scas
sbb
push
in
and
movsb
data16
or
xchg
jl
ja
pop
daa
xor
mov
std
jecxz
mov
test
push
sbb
mov
bswap
fs
ljmp
sbbl
add
repnz
loop
dec
sbb
repz
mov
push
into
mov
popl
push
mov
mov
popa
inc
js
push
test
and
scas
popf
pop
imul
iret
rorb
sub
imul
test
sub
xor
in
push
push
lock
dec
insl
xchg
pop
iret
push
sbb
sbbl
pop
jns
outsb
clc
pop
sahf
xchg
sub
mov
mov
push
out
bound
repz
mov
or
gs
mov
or
lods
aas
nop
icebp
mov
and
fdivrp
sbb
mov
repnz
out
jns
xchg
push
cmp
jne
sahf
sbb
mov
sbb
xchg
lock
idivb
xadd
mov
movsb
mov
cld
stc
repz
mov
lahf
cmp
addr16
lret
mov
sbb
xor
insl
cld
enter
jge
stos
mov
ficomps
jno
jl
aas
jg
add
inc
adc
mov
inc
fdivp
repnz
je
test
push
xchg
xchg
push
pop
jns
xor
sub
or
rolb
or
arpl
mov
lret
xor
add
xor
cmpsb
scas
xchg
pop
scas
cld
int3
add
test
mov
and
adc
and
repnz
out
out
fldcw
aas
jg
jle
neg
inc
sbb
roll
cmp
pushf
loope
stc
repz
into
sub
mov
pop
addb
jnp
and
lret
repnz
adc
fdivrl
jnp
sub
sub
sub
ja
dec
xchg
outsb
shl
out
pop
data16
inc
test
dec
ffree
xor
in
adc
mov
ret
xor
inc
inc
xchg
xlat
aam
lahf
test
gs
out
inc
decb
out
and
outsl
adc
popf
test
lret
ret
xor
cld
push
mov
xchg
add
sub
sbb
stc
rep
loopne
lea
cs
lcall
pop
jle
cld
and
out
cmp
push
mov
xor
fcomip
scas
repnz
lahf
jb
fneni(8087
ficomps
rolb
jp
lds
push
xchg
fcomps
int
outsl
lret
mov
lods
add
pop
push
jno
repnz
in
adc
cmp
das
pop
clc
sbb
js
test
pop
dec
fisubrs
add
lret
out
cmp
jl
pop
pop
or
iret
cli
push
cs
cli
add
jl
cmc
hlt
lret
out
push
pusha
cmpl
push
jmp
and
push
lahf
aas
aas
mov
sub
or
sbb
in
and
imul
in
push
pop
xor
out
cmp
lods
cltd
adc
std
jb
xchg
xchg
ja
pop
pushw
into
cmp
inc
jns
xchg
ja
popl
ficompl
int3
dec
popa
in
push
pop
lahf
xchg
adc
andb
mov
arpl
cld
stc
xchg
ret
dec
sub
mov
xlat
jno
xchg
aas
jg
les
test
jge,pn
mov
cltd
add
pop
xchg
repnz
enter
mov
or
lret
das
call
test
or
repnz
jecxz
mov
leave
cwtl
jae
cmp
scas
mov
pop
dec
test
mov
mov
jle
repnz
mov
inc
hlt
test
aas
or
lret
sub
outsl
rolb
push
jmp
adcb
xchg
mov
stos
pusha
out
lret
sub
dec
and
fdivrl
outsl
or
repnz
fs
push
imull
mov
decl
add
int3
js
sbb
loop
call
pop
mov
adc
push
push
sub
aas
aas
and
jno
aad
and
cld
pop
shrb
pop
jg
push
jle
mov
nop
stos
mov
xchg
in
jb
aam
in
ja
add
fcmovne
insl
imulb
jnp
xchg
push
pop
add
mov
push
inc
pop
js
xor
pop
jns
dec
mov
xor
mov
addr16
xchg
jno
fcompl
out
punpcklbw
xor
fwait
shlb
dec
cmp
add
xchg
sub
jecxz
rorb
cmp
push
lds
and
aas
jg
sbb
and
imul
mov
mov
call
aad
push
inc
les
repnz
jmp
fstpl
xlat
mov
fidivrs
cmp
pop
in
in
push
sub
and
push
push
fldl
in
push
pop
outsl
dec
lock
rcr
jns
in
adcb
fcmovne
jp
pop
stos
loopne
dec
stos
in
inc
fidivrs
ljmp
jns
frstor
lcall
and
sbb
pop
sbb
loopne
and
xchg
pop
jle
fidivs
jo
mov
repz
lock
bound
push
test
push
repnz
cld
push
fmull
dec
jmp
lock
push
decb
jp
ja
test
cmpl
aas
jg
push
out
pop
sbb
in
add
jecxz
iret
add
stc
xor
in
dec
xchg
clc
and
add
out
push
stos
std
mov
scas
call
repnz
popa
subl
jns
sub
pop
and
adc
dec
jp
repnz
push
mov
pop
pop
fistpll
movsl
lods
xor
scas
mov
mov
sbb
mov
lret
iret
scas
test
pop
sub
repz
pop
sti
out
inc
pop
mov
sub
repz
sbb
inc
sti
repnz
lret
popa
jbe
adc
fistps
push
in
sti
dec
fcomps
sub
or
inc
pop
lods
dec
repnz
clc
in
popf
loop
sbbl
outsl
mov
inc
test
lret
adc
sbb
outsb
lea
lahf
aas
mov
add
push
lahf
or
mov
cmp
ljmp
cmp
lahf
mov
in
push
and
and
mov
mov
in
push
pop
shrb
push
inc
imul
xlat
aas
jge
pop
dec
fs
lahf
aas
jg
add
or
mul
out
mov
and
in
or
push
pop
in
push
pop
movsb
mov
decb
hlt
mov
jae
dec
lret
imul
out
lahf
adc
cltd
and
mov
mov
xor
in
ret
or
mov
pop
jns
frstor
inc
or
es
inc
adc
fs
mov
bound
iret
xchg
mov
jnp
inc
clc
fcomip
pop
push
jb
sub
mov
dec
mov
jg
in
ja
jo
lahf
and
leave
pusha
xor
stc
xchg
mov
pop
adc
mov
fs
ret
sbb
push
mov
jb
sbb
pop
in
sub
and
lret
sub
aas
scas
fisubs
cltd
in
mov
jle
jle
shl
jl
hlt
pushf
cmp
mull
iret
lahf
mov
sahf
mov
pop
or
out
lods
cmp
test
out
pop
mov
lea
in
push
and
pop
push
adc
pop
out
aas
int3
cli
push
pop
jns
lock
xlat
adc
icebp
cwtl
je
xor
and
pop
jns
xchg
jno
aaa
push
in
lea
cmp
xchg
push
jmp
insl
lock
iret
scas
scas
data16
inc
enter
cmp
sbb
cld
stc
xor
scas
xor
push
hlt
sub
cli
leave
fwait
out
lahf
aas
cld
bt
xor
jne
add
push
decb
or
incb
sbb
flds
test
mov
or
loope
das
fdivl
dec
sub
mov
jp
push
push
pop
push
jg
mov
fwait
push
push
in
mov
inc
sbb
push
mov
ds
call
test
jle
das
pop
mov
hlt
fistl
aas
jg
cld
cld
mov
les
jmp
mov
iret
lahf
pop
mov
out
sub
xlat
lret
cld
mov
repnz
std
or
out
sub
push
adc
ror
movsb
sbb
repz
ljmp
mov
dec
shr
jns
xchg
push
pop
mov
ret
dec
mov
xchg
push
pop
ret
jge
ljmp
mov
aas
mov
dec
cld
mov
out
in
and
std
mov
dec
cwtl
mov
decb
cmp
mov
inc
push
mov
pop
cld
sar
in
test
mov
adc
jle
xchg
das
aas
jg
je
addr16
cmp
ss
jns
inc
add
push
mov
jb
ja
xchg
mov
cmp
jp
or
aam
add
push
mov
push
divb
adc
lret
imulb
and
mov
dec
ja
add
sbb
incl
in
mov
enter
jge
int
jg
fisubrs
mov
push
lahf
sarb
push
data16
mul
lret
xchg
cmp
pop
shl
jg
cld
subl
pop
inc
mov
jbe
jb
iret
lahf
aas
push
pop
notl
lahf
ss
insl
and
cld
stc
repz
ss
push
pop
cli
ss
pop
sub
loop
pop
mov
lahf
aas
jg
fs
add
push
daa
call
stc
repz
xor
jmp
mov
mov
das
aas
jg
out
jl
and
popa
ficoml
push
lret
mov
in
aad
nop
mov
lock
cmp
mov
mov
mov
jns
inc
fcomip
jno
lcall
scas
add
and
repnz
lock
adc
mov
repnz
addr16
lcall
xor
mov
repz
in
dec
arpl
inc
sbb
xchg
jle
repnz
push
fldcw
mov
push
mov
jmp
sub
packuswb
in
pop
in
add
sbb
cmp
cld
dec
clc
negl
jno
les
mov
test
and
inc
inc
das
jg
and
or
subl
shlb
testb
dec
lret
push
cmp
out
xchg
iret
lahf
ret
mov
sbb
and
scas
mov
jns
lea
and
cmpsl
cli
iret
inc
mov
mov
add
icebp
test
in
xchg
or
pop
rorb
jbe
jmp
pop
je
and
inc
cli
in
out
aad
xchg
out
mov
iret
lahf
fsts
pop
jnp
sub
fsubrp
js
inc
pop
cmp
and
scas
dec
lret
and
addb
pop
or
adc
lret
iret
lahf
add
cmpsb
cmp
fildll
dec
ss
stc
xor
je
mov
mov
mov
shll
jg,pn
fisttpll
jmp
mov
clc
outsl
std
das
jecxz
jb
mov
cld
push
pop
lret
fwait
pop
mov
std
scas
lahf
or
out
xchg
iret
lahf
nop
fiadds
fwait
inc
add
call
or
repnz
and
mov
je
cld
or
ss
mov
dec
std
mov
pop
jle,pt
sti
outsl
stc
repz
add
ja
test
repnz
out
cld
xor
repnz
rolb
mov
cld
or
jg
push
pop
sbb
cs
iret
lahf
push
lock
push
sub
das
subl
out
clc
inc
push
mov
outsl
mov
stos
inc
xor
ds
das
mov
sub
insb
pop
cs
dec
cltd
out
xchg
sub
scas
mov
adc
cld
dec
add
in
mov
mov
sti
jg
xchg
mov
push
lret
sub
sub
sbb
mov
in
sahf
push
xchg
mov
xor
test
pop
or
mov
repz
mov
lods
xor
aam
dec
and
popf
lea
repnz
jge
or
or
xchg
add
fmull
lahf
movsl
mov
push
xor
iret
lahf
aas
or
mov
pop
lods
cmc
jg
jbe
stc
repz
or
rol
rclb
fdivr
adc
stos
movsl
xor
divb
push
inc
stc
repz
cwtl
sar
cmpsl
push
flds
mov
stc
cld
jle
fwait
outsb
jmp
incl
pop
addr16
imul
push
fsubp
lret
mov
pop
pop
std
adc
decb
push
dec
fildll
inc
sarb
sub
sub
lods
and
sbb
and
lret
data16
mov
adc
jp
mov
das
scas
mov
ljmp
repz
lods
out
dec
or
addr16
jne
stc
cld
stc
cmpsl
dec
cmp
repnz
pop
and
pop
xchg
insb
out
pop
repz
xor
fnstcw
aam
push
mov
cli
test
movsb
mov
in
or
ds
stc
sahf
or
hlt
mov
xchg
jnp
out
pop
hlt
rcrb
pushf
negl
jg
xchg
pop
loope
xchg
in
lahf
pushf
sub
xrelease
fisubrs
push
add
sub
jns
lods
mov
ljmp
pop
mov
jle
jg
imul
push
cs
scas
jmp
lret
mov
mov
out
das
dec
jne
sbb
sub
jg
adc
cwtl
jp
xor
sub
fcomi
dec
jl
into
mov
xchg
sahf
stos
fucom
dec
xor
pop
ss
out
sbb
push
pop
jns
loopne
jg
inc
fs
stos
cmp
pop
jns
xchg
cmp
popf
aad
lods
shrl
repnz
dec
jno
jno
fucom
mov
xchg
sti
lret
mov
mov
mov
insb
out
jle
repnz
ud1
cmp
pusha
in
cmpsl
pop
cli
repnz
mov
test
fcmovnu
daa
les
movd
pop
cmpsb
push
ja
aas
jg
imul
aas
outsl
or
jge
inc
in
ljmp
jp
int3
or
stc
add
repnz
nop
mov
push
lods
push
ret
pop
jle
cld
adc
pop
je
daa
lcall
lcall
dec
and
rcrb
popa
popa
ja
xchg
push
pop
jns
mov
mov
sahf
fs
jns
imul
jb
push
repnz
jns
xchg
rorb
pop
mov
mov
rclb
int
sub
fidivrs
aaa
cwtl
sub
and
mov
in
push
mov
leave
mov
pop
push
pop
dec
cmp
imul
repz
pop
jns
jecxz
dec
repz
jle
push
xchg
ss
shll
jae
icebp
mov
push
sbbl
scas
sbb
fidivrs
and
test
outsl
mov
idivb
enter
ja
stc
aaa
inc
loopne
xchg
add
xor
jno
xchg
push
pop
insl
out
push
ljmp
sub
jns
pop
into
es
je
xor
xor
in
icebp
and
mov
ret
lahf
jb
xchg
push
cmpsl
push
jecxz
fdivrl
cmp
jge
decb
dec
sahf
xor
call
out
push
pop
out
lahf
aas
out
xlat
jp
lods
pop
xchg
fnstsw
repz
mov
push
add
adc
mov
or
push
adc
adc
and
out
lret
iret
lahf
cmp
dec
movsl
xor
in
pop
scas
mov
cmp
insl
ret
add
xchg
dec
std
xchg
out
insl
pop
rcll
mov
sub
ret
sti
out
scas
icebp
orb
cli
in
lret
je
std
xchg
or
sbb
imul
cld
enter
lret
insb
repnz
test
aas
mov
leave
cs
addr16
repz
mov
in
dec
inc
cmp
dec
push
call
push
lcall
xchg
bound
mov
enter
cmp
stos
daa
jl
stc
enter
ret
push
sbb
call
repnz
loope
push
jle
ret
sbbb
repnz
xlat
xlat
jbe,pt
jns
fstpl
int3
pushf
cli
lea
dec
repnz
pop
pop
push
scas
lods
hlt
dec
xor
daa
lret
mov
shll
cmc
jb
push
sub
or
enter
xlat
mov
scas
int
xchg
repz
lahf
xchg
push
jg
inc
dec
xlat
popa
fidivrs
mov
mov
push
mov
pop
bnd
jb
in
push
into
cmp
test
pop
mov
das
aaa
mov
daa
xchg
fs
mov
xchg
push
pop
inc
mov
negl
stos
dec
sti
xor
ljmp
shrl
mov
int3
subl
stc
repz
xchg
repnz
dec
mov
ficoms
cmc
ret
stc
add
jns
and
loopne
sub
sbb
fstps
and
sub
jnp
pop
lods
inc
psraw
pop
insl
outsl
lea
jecxz
jge
xorps
xlat
mov
scas
push
mov
mov
xchg
popa
pop
dec
fwait
enterw
push
jge
cmpl
and
outsb
xchg
jo
jecxz
and
das
push
pop
adc
aaa
ljmp
imul
cmovns
add
cmp
in
push
pop
repz
lcall
dec
sub
xchg
push
pop
jns
loopne
ret
adc
loop
inc
mov
jns
cli
push
or
fimuls
lea
xchg
inc
iret
lahf
aas
dec
fiadds
push
es
dec
loopne
repz
pop
lcall
loope
jne
ret
shlb
lahf
aas
scas
cld
xchg
mov
cmp
push
repnz
in
loope
sub
sbb
cmp
push
mov
cmp
shl
mov
out
les
mov
int3
jl
dec
lods
jbe
mov
iret
add
nop
pop
jge
mov
jl
in
xor
inc
xchg
pop
popa
lahf
aas
jg
mov
test
cli
rolb
stc
repz
sbb
fxch
add
xchg
imul
into
adc
cld
test
sub
loope
push
mov
aas
int
cmpsb
cmpsl
jnp
push
pop
jns
je
in
jno
ret
jmp
sbb
or
or
xor
push
in
orb
adc
lods
push
lahf
pop
sbb
es
in
jg
lret
iret
sub
xor
push
adc
out
lahf
cmc
jno
cmc
jmp
out
xor
fdivrs
cld
stc
mov
jns
adc
mov
mov
rol
iret
lahf
aas
xor
stos
js
push
out
inc
popf
sub
rep
xchg
cmp
or
dec
push
insl
cwtl
addr16
cmp
jae
int
adc
dec
in
aas
lea
or
xor
ljmp
sub
push
pop
add
dec
jle
mov
jnp
pop
das
scas
cmp
sbb
lock
sub
out
das
mov
test
ret
xor
mov
mov
das
mov
addb
jb
mov
std
inc
and
inc
fnstsw
aas
jg
and
sbb
mov
lahf
mov
adc
imul
mov
jmp
or
mov
std
jnp
movsb
pop
pop
or
iret
add
iret
pop
inc
scas
jmp
add
loope
leave
mov
mov
psrad
cld
jb
mov
fs
roll
lahf
aas
jg
push
daa
pop
and
scas
inc
cmp
jno
sub
and
and
or
je
inc
shrl
jg
cld
adc
out
push
xchg
leave
adc
dec
mov
pop
lock
dec
movsl
mov
mov
movsl
push
out
fdivrs
cld
sbb
lahf
out
int
add
cs
pop
mov
jle
cs
aad
mov
jg
xor
std
je
lahf
jnp
aas
in
lahf
jg
ss
insl
aad
push
repz
loope
push
scas
mov
out
clc
int
xchg
mov
subl
test
jo
push
addr16
mov
stos
inc
filds
jns
xchg
ja
mov
mov
mov
mov
xchg
push
pop
sub
mov
xchg
push
push
addb
fnstcw
das
loope
push
mov
and
cmp
mov
paddb
push
in
push
fisubrs
imul
sub
jge
notl
ror
icebp
push
sub
adc
inc
aad
inc
das
mov
adc
insb
push
or
xor
push
gs
jb
or
gs
ficompl
xchg
add
aas
jg
cs
push
mov
imul
outsb
lret
jns
and
gs
cld
stc
repz
das
out
xor
inc
cs
sti
icebp
mov
lahf
aas
jg
mov
aaa
int3
rorb
jl
push
or
je
imul
ljmp
in
sub
adc
jl
stos
in
sbb
mov
icebp
lret
inc
call
in
or
ds
cld
stc
xor
daa
mov
cli
jns
pop
enter
aas
jg
jns
jecxz
imul
xchg
pop
loopne,pt
cmp
je
jno
jo
xor
lods
dec
jle
shll
sar
jle
cld
lea
pop
stos
or
aam
jae
icebp
stc
test
jmp
mov
fsubrl
movsb
out
in
jle
mov
aaa
push
fnstcw
aaa
sahf
and
cld
inc
mov
mov
into
inc
dec
mov
aas
stos
dec
stc
inc
orb
xchg
lock
xchg
ja
adc
jp
fidivrl
stc
stc
sbb
into
shl
xchg
lret
or
mov
sub
cwtl
mov
repnz
lahf
loopne
fnstenv
into
aad
out
pop
jns
hlt
lahf
push
loope
outsl
mov
movsl
in
jg
cld
adc
pop
sti
stos
fidivrs
push
int3
ljmp
and
outsb
or
cld
stc
xrelease
mov
dec
scas
pushf
pop
fldenv
aas
jg
mov
xor
lahf
pop
loope
sahf
imul
ds
sbb
sbb
test
iret
xor
cmp
fcompl
jecxz
mov
mov
jle
out
syscall
mov
adc
in
incb
fildll
push
in
fwait
cmpl
jns
or
pop
mov
cmp
push
pop
jns
or
loopne
test
adc
addr16
mov
and
rcrl
aam
xchg
push
ss
pop
je
push
dec
push
cmc
push
in
push
pop
loopne
push
xor
mov
mov
ja
jmp
scas
imul
sbb
jo
push
mov
mov
xchg
fistpl
fprem
repnz
std
sub
into
adc
loop
out
lahf
dec
and
inc
lea
jb
push
out
adc
scas
movsl
and
jg
pop
xor
cli
sbb
repz
test
jmp
and
jg
cld
stc
mov
sub
mov
adc
lahf
aas
adc
ret
or
pop
xchg
ja
cmp
jmp
fbstp
hlt
push
push
mov
div
lret
xchg
add
jp
adc
mov
xchg
push
pop
int
cltd
insl
adc
lret
xchg
xchg
jno
aas
mov
scas
mov
cmpsl
jp
push
sbb
repnz
popa
outsb
dec
push
cmc
add
clc
adc
dec
loope
aam
inc
std
sbb
out
out
fistps
iret
mov
aaa
push
arpl
mov
cld
stc
mov
aad
pop
sub
sbb
mov
sub
addr16
push
outsl
enter
repnz
mov
jnp
mov
xchg
pushl
jle
adcb
mov
fwait
out
mov
out
lahf
aas
mov
push
xchg
pop
xchg
ss
and
insl
stc
cld
stc
rep
insb
fwait
mov
xchg
cmpl
cmpb
inc
lahf
sahf
lahf
fcom
adcb
lahf
aas
inc
incb
in
inc
rclb
push
arpl
div
out
out
push
icebp
jmp
pushl
das
push
pop
rorl
dec
adc
add
xchg
mov
mov
sbb
lret
mov
jns
push
cwtl
out
in
mov
mov
or
sub
push
js
mov
fs
sbb
add
js
fstpt
jg
inc
fimuls
push
mov
repz
lahf
adc
pusha
jbe
pushf
cmp
dec
std
repnz
push
ss
mov
cld
lahf
aas
jg
mov
clc
pop
inc
mov
add
and
popa
das
mov
imul
into
es
pop
jle
cld
add
lahf
xchg
push
xchg
int
add
adc
cld
push
into
int3
outsl
scas
sarb
lahf
cmp
out
lahf
aas
outsb
lds
sbb
ret
cld
stc
repz
mov
jne
frstor
testl
sub
test
push
movsb
adc
and
cld
stc
repz
mov
add
out
pop
dec
gs
xor
call
add
sub
repnz
das
stos
pop
aas
sbb
add
das
and
in
xchg
in
mov
and
add
aas
aas
rclb
out
insl
stos
test
or
sbb
out
lahf
add
mov
leave
sbb
es
pop
jns
inc
lret
in
pop
in
inc
out
rorb
out
push
mov
sbb
sub
outsl
dec
rclb
push
sub
fidivrs
sub
pusha
xchg
push
pop
dec
decl
jb
jb
stc
repz
ds
scas
insl
xchg
ss
xlat
or
fidivrs
scas
inc
xchg
lcall
imul
xchg
cmpb
gs
aam
sub
and
or
icebp
cmp
push
mov
push
jb
add
or
jp
cld
push
pop
fisubrs
outsl
out
add
pop
in
jns
aas
jg
push
addr16
inc
rep
popf
bound
out
cmp
inc
push
icebp
inc
sbb
jg
cld
nop
mov
cmpsb
lahf
rorb
jne
out
lret
mov
fdivrp
mov
into
xchg
lret
das
lahf
mov
pop
push
xchg
popf
mov
xchg
sbbl
shll
dec
imul
push
or
mov
js
lea
jno
dec
aad
cld
stc
jo
cs
scas
lods
or
inc
cld
lahf
pop
push
mov
jle
rcr
imul
lock
lcall
mov
push
pop
pop
mov
hlt
jmp
clc
arpl
repz
jle
adc
out
mov
xor
add
repnz
rclb
push
nop
xor
lahf
aas
jg
mov
test
mov
cmc
lret
out
je
xchg
outsl
push
pusha
push
gs
inc
jge
stc
xor
jmp
in
jle
dec
std
je
outsb
les
or
xchg
pop
in
sub
pop
sub
dec
add
inc
and
cld
cld
dec
cli
and
sarl
in
mov
enter
repnz
daa
mov
xor
ljmp
pop
xor
ds
mov
into
add
repz
pushf
daa
add
sbb
adc
neg
divps
inc
dec
inc
into
sahf
outsl
lods
lret
mov
sub
into
dec
scas
mov
pop
jge
xchg
jecxz
mov
sti
in
sub
enter
mov
cmpsb
pushf
jl
iret
lret
mov
pop
mov
jg
sub
lods
nop
mov
out
or
daa
scas
mov
mov
hlt
repnz
in
push
je
out
lret
sub
sub
insl
dec
daa
pop
xorl
adc
sub
lret
outsb
adc
inc
pop
scas
mov
negl
pushl
das
andl
inc
clc
sbb
icebp
out
repnz
push
mov
cld
stc
inc
push
add
lock
in
mov
jae
das
mov
fdivrp
mov
mov
pop
cmp
dec
ret
push
pop
jns
subb
fs
imul
ja
popf
jns
lret
xchg
insb
xor
inc
mov
in
push
pop
sti
and
mov
loopne
mov
lahf
shll
mov
shrl
sahf
enter
ja
jne
xor
pop
lock
pop
jns
test
rclb
add
cmpsb
mov
stc
repz
pop
test
jle
enter
jmp
mov
mov
mov
ljmp
mov
xchg
push
pop
jns
jo
jge
insb
bound
mov
pop
jns
xchg
and
mov
mov
mov
leave
cmpb
jns
xchg
push
cld
mov
mov
jge
ja
pop
mov
mov
scas
sahf
jp
rorb
inc
pop
fidivrs
in
arpl
cli
popa
mov
ja
mov
mov
test
pop
cwtl
stc
and
dec
pop
mov
lea
push
mov
add
jg
cld
adc
scas
pop
aad
xchg
shlb
mov
stos
jno
or
int3
jg
daa
mov
ss
aam
sbb
xor
sub
dec
int
push
cmp
cwtl
outsb
adc
and
repnz
cmpsb
mov
and
sub
out
cs
sub
sbb
pop
pop
dec
jne
push
add
xor
lahf
aas
jg
ljmp
rol
sti
lods
in
loop
fdivrl
jno
pop
jo
imul
xchg
ret
pop
adc
out
jnp
std
sti
pop
lret
mov
fdivl
das
sub
mov
jbe
pop
xor
push
aas
pushl
mov
dec
outsl
and
repz
pop
enter
push
stos
inc
mov
aas
jg
cld
in
jo
or
mov
adc
lahf
test
mov
fcmovb
jecxz
icebp
add
cltd
in
loop
js
shrb
xchg
std
push
pop
jns
icebp
ja
mov
scas
pusha
mov
fstpt
xchg
ficomps
mov
add
push
fdivrp
shlb
pushf
mov
push
and
incb
pop
in
jno
cmp
mov
pop
push
xor
adcb
xor
lret
sbb
dec
sbb
or
shll
xchg
scas
frstor
fisttps
and
test
ret
divb
cmp
popa
push
out
mov
mov
sub
add
out
dec
std
jbe
cmpb
push
and
and
push
add
pop
mov
fcmovnbe
mov
or
aas
jg
xor
dec
sbb
stc
repz
stos
test
adc
xlat
jne
lret
push
jle
jl
ret
ret
mov
cwtl
inc
dec
jno
iret
lahf
aas
nop
mov
arpl
mov
hlt
push
mov
jge
xchg
dec
push
pop
jecxz
aas
adc
aad
repnz
sbb
mov
sbb
sub
cli
push
fwait
pop
ret
jns
scas
mov
mov
adc
mov
xor
test
lahf
adc
mov
add
pop
push
jle
cld
stc
loop
and
movsb
jp
loope
fwait
mov
incb
dec
mov
mov
cs
shrb
push
stc
repz
repz
movsb
lret
pusha
jnp
pop
cmp
pop
aas
jg
cld
out
add
std
mov
cmp
pop
push
xchg
iret
lahf
inc
lret
ds
add
and
cld
stc
repz
dec
cs
ljmp
add
out
or
and
subb
pop
test
pop
xchg
cld
stc
repz
loopne
jnp
xor
push
adc
pop
jle
popa
jb
aas
inc
sub
push
iret
lahf
pop
sbb
mov
cltd
sub
repnz
xchg
push
pop
push
les
mov
cmp
sub
mov
js
dec
dec
out
outsl
add
mov
push
dec
pop
xchg
in
rorl
xor
sub
jg
bound
pusha
inc
repnz
test
and
jo
int
sub
fs
stc
pop
pop
das
scas
mov
push
clc
mov
insb
leave
mov
repnz
outsl
dec
lea
data16
mov
jmp
pop
scas
lods
fsts
test
xrelease
dec
les
cmp
jle
outsl
mov
ja
jl
adc
data16
in
shl
add
aad
into
jl
mov
sbb
outsb
and
aaa
lahf
jmp
into
push
xchg
cld
icebp
xchg
gs
xchg
aas
mov
addb
mov
jo
mov
in
das
je
jp
sub
xlat
mov
das
push
sub
cli
outsb
leave
inc
add
lock
mov
es
mov
fstps
fsubrl
inc
xchg
jg
pop
iret
lea
ds
je
mov
lret
mov
out
js
dec
cli
cmp
ljmp
mov
pop
je
out
mov
adc
pop
lods
outsb
add
mov
subps
repnz
stc
cmpsl
jle
or
xchg
dec
pop
and
mov
loop
iret
push
or
sbb
cli
pop
stc
repz
jmp
loope
push
cmpsl
xchg
nop
popf
test
mov
out
pop
outsb
push
pop
jns
dec
pop
aas
arpl
and
inc
add
and
jns
xchg
icebp
or
scas
xor
scas
popa
inc
movsb
cmp
sub
cmp
das
aas
jg
xor
jg
mov
xlat
dec
ret
loopne
cmpsl
jle
pop
or
push
push
pop
ret
shrl
dec
orl
jp
popf
cmp
repnz
ror
ret
mov
jle
repnz
inc
add
iret
xchg
lods
lahf
aas
aas
mov
fstpl
add
fisubrl
add
iret
dec
pop
cmp
test
sahf
je
pslld
das
mov
movsb
hlt
sahf
jbe
dec
jns
cld
pop
stc
inc
inc
jbe
xor
sub
dec
jp
add
movsl
pop
out
xchg
mov
xorl
xchg
das
mov
and
repz
shlb
testb
cmp
cld
stc
out
jp
mov
fistpll
push
dec
xchg
push
fdivrp
cmpsb
mov
dec
pushl
adc
lock
jb
cwtl
sub
jg
shrb
repnz
mov
shrb
jle
sub
push
mov
mov
jg
or
loopne
cwtl
and
jle
mov
mov
xor
pop
mov
sti
movsb
jg
movsbl
sbb
scas
gs
rorb
out
fwait
inc
pop
pop
xchg
cld
stc
repz
lahf
das
movsb
stos
loopne
dec
push
pop
leave
out
loop
xorl
or
xchg
pop
les
pop
jns
xchg
lret
cmpl
cmp
and
mov
mov
push
sbb
lods
in
lret
xchg
push
pop
std
sbb
aam
loope
enter
stc
xchg
out
das
sbb
sbb
dec
mov
sub
cwtl
xchg
inc
xchg
ja
xor
mov
jae
fcompl
push
or
jns
pop
mov
inc
scas
dec
pop
das
jg
scas
xor
into
jno
sub
gs
out
lods
sbb
sbb
lahf
aas
jg
push
leave
bound
jae
jl
inc
int3
stc
bnd
out
out
mov
std
rep
mov
adc
pop
popa
cmp
dec
jmp
lock
iret
cs
ds
dec
cwtl
jb
sub
mov
push
pop
push
outsb
xor
movsb
pop
pop
add
inc
sub
pop
jns
fstl
aas
mov
mov
xor
inc
les
cmp
add
mov
out
pop
sub
xlat
outsb
packssdw
jg,pt
cmp
sbb
pop
push
pop
xchg
jg
pop
mov
aam
sbbb
jbe
pop
cld
stc
mov
fsubr
das
xchg
mov
mov
mov
nop
and
iret
xor
test
daa
fwait
loope
dec
sti
push
pop
hlt
lret
out
stos
fs
imul
scas
mov
mov
xchg
cmp
test
inc
outsl
out
ljmp
lret
sub
inc
and
pop
aam
jle
dec
iret
jge
roll
imul
or
ror
sarl
ss
pop
cmpsl
mov
mov
repz
xchg
in
pop
push
sbb
das
cld
sub
inc
pop
ss
in
jle
push
ljmp
mov
pop
jns
in
mov
adc
or
mov
pop
add
sbb
inc
mov
mov
cmpsl
cld
out
xchg
in
sub
andl
in
stos
out
in
dec
rcrb
scas
mov
push
pop
jns
mov
arpl
push
pop
and
out
shlb
dec
iret
push
cld
stc
and
mov
daa
nop
or
jns
into
int3
push
das
jg
adc
jo
jne
jl
jae
popl
loope
and
stc
repz
mov
rcrb
push
jne
jbe
push
xchg
sub
das
iret
jle
xchg
aam
mov
out
push
inc
andl
pop
mov
or
popf
add
add
repnz
rcrl
and
pop
stos
hlt
add
pop
lods
das
scas
mov
jnp
dec
ljmp
divps
sub
cmpsl
test
cld
stc
push
jo
and
dec
fdivrs
pushf
lods
cmp
iret
lahf
push
les
push
fs
aam
ret
push
std
repnz
repz
mov
ljmp
bound
ljmp
jno
cld
iret
lahf
aas
jg
insl
enter
sub
sti
sbb
stc
repz
ja
shrb
out
xor
and
hlt
push
cmp
and
repz
repz
nop
xchg
in
fprem1
mov
aad
pop
pop
cld
sub
xor
mov
cmp
out
push
mov
out
cmp
into
insl
add
rcrb
out
in
add
sbb
jg
js
push
jl
into
dec
aas
xor
je
stc
repz
stos
js
inc
cmp
sahf
jl
xor
jle
movsb
lock
aaa
pop
imul
adc
ja
lret
iret
or
xchg
xor
addr16
jl
in
outsl
xor
in
out
jecxz
or
lret
sar
stc
repz
into
icebp
fdivrl
cmc
js
pop
lret
mov
daa
and
loop
push
cmp
ljmp
push
arpl
out
mov
mov
std
jle
add
cmp
add
idiv
push
sbb
push
jo
xchg
dec
add
jl
xor
enter
insb
aam
in
iret
inc
pushf
into
test
and
mov
and
inc
pop
xchg
ss
and
dec
jg
xchg
ds
mov
jg
cld
cmp
or
cmp
subl
out
lahf
inc
mov
pop
add
int
mov
outsl
inc
movsl
addr16
xchg
push
aaa
cmc
lock
xchg
sub
adc
fdivrp
and
clc
repnz
inc
push
pop
inc
enter
in
ja
xchg
dec
sahf
pop
inc
or
sarb
stos
fstl
xchg
punpcklbw
cmp
or
dec
push
jp
mov
std
arpl
jg
cld
pop
stos
outsl
inc
outsb
pop
loopne
movsb
and
pop
jns
xchg
inc
fidivl
test
and
cmp
jns
xchg
push
mov
mov
lods
loopne
sbb
test
and
jbe
or
jle
test
push
aas
scas
and
mov
mov
pop
jns
test
pop
inc
adcl
jo
sahf
out
mov
in
lods
clc
mov
out
addr16
repnz
sahf
pop
push
sbb
scas
ror
xchg
lret
mov
xchg
adc
imul
push
mov
clts
pop
stc
push
push
pop
xor
xor
xor
cld
stc
repz
popa
inc
add
rclb
jg
hlt
xlat
xchg
lahf
aas
jg
cmp
and
daa
jns
or
jl
pop
bound
lods
leave
lahf
aas
jg
lods
sub
sub
dec
mov
mov
out
cli
lahf
pop
movsl
mov
clc
in
sub
jg
sbb
data16
cld
inc
pop
push
mov
shlb
iret
lahf
aas
lahf
loope
jbe
sbb
popf
mov
repz
push
inc
mov
sahf
ljmp
xchg
int3
aas
jg
pop
lahf
stos
fmulp
lahf
cmp
inc
mov
lahf
adc
scas
loope
jecxz
stc
repz
inc
sbb
cltd
jle
mov
inc
xchg
pop
pop
jle
cmp
add
dec
lods
rclb
adc
cmp
pop
stc
repz
into
pushf
jmp
add
lahf
mov
cld
cli
in
fidivs
ret
imul
sahf
or
cmp
jae
shll
cmp
sub
mov
lcall
pop
cli
in
sub
mov
ljmp
sub
jns
or
xlat
jae
lcall
xorps
std
cmp
dec
out
or
adc
jns
xchg
xchg
push
jnp
dec
add
lret
xchg
push
cmp
cltd
das
and
push
pop
jns
and
or
adc
scas
std
jbe
repz
mov
icebp
mov
lret
andb
repnz
sbb
sub
sub
iret
lahf
repnz
cmc
inc
pop
mov
pop
jb
adc
cmp
lock
test
xchg
xchg
sbb
add
jle
repnz
mov
test
movsl
repnz
push
cmc
pop
addr16
add
lret
mov
push
outsl
je
pop
out
or
sub
sti
das
andl
sarb
mov
push
imul
inc
jmp
pop
and
mov
daa
jecxz
sub
xchg
jae
inc
cli
in
out
jbe
lret
sbb
mov
cld
stc
repz
push
cmp
inc
jmp
xor
stc
inc
or
or
jp
cmp
cmp
aas
mov
sbb
les
out
push
les
sar
xor
insb
mov
cmpsb
jl
out
loopne
cmp
jns
imul
mov
gs
cwtl
mov
ficomps
and
xchg
into
push
pop
jns
and
mov
cmp
sbb
and
in
cltd
lcall
out
testb
sti
repnz
js
xor
fwait
mov
pop
aas
out
lret
mov
fwait
out
js
and
xchg
add
lock
scas
pushf
fistpll
push
mov
bound
bound
lahf
aas
mov
rol
xchg
mov
in
filds
xor
out
shrb
out
cmp
pushf
mov
lret
inc
push
in
loop
cmp
dec
notl
leave
xor
jnp
call
punpckldq
add
leave
inc
test
push
xor
jp
mov
xchg
push
pop
jns
jg
fnstenv
iret
mov
sbb
mov
cwtl
jno
push
push
iret
insb
mov
cmpsb
mov
cmp
stc
lret
insl
lahf
pop
lods
lahf
cmp
pop
pop
mov
lods
out
out
jg
orl
inc
outsl
mov
aas
mov
jecxz
push
mov
popa
cld
stc
repz
out
push
sub
mov
fildl
xor
jg
mov
pusha
std
mov
dec
lods
mov
dec
adc
mov
pushf
inc
mov
jae
mov
push
lcall
mov
sub
lods
push
loop
cmp
lret
iret
comiss
dec
mov
stc
repz
push
notb
dec
cmpsl
adc
jmp
test
jg
stos
sbb
dec
adc
repz
pop
mov
and
add
jg
jp
lahf
push
lock
iret
lahf
pop
ficompl
int3
mov
aaa
xchg
mov
stos
int
fldl2t
push
hlt
lcall
out
dec
test
popa
push
out
mov
jb
pop
cmp
into
out
cmc
scas
sbb
or
in
inc
mov
and
or
repnz
rcll
cld
stc
sbbl
lahf
scas
fldl
inc
sub
lahf
aas
jg
pusha
mov
sub
fidivl
out
jle
mov
dec
mov
inc
sub
jle
push
repz
mov
bound
and
mov
or
lcall
jns
cmp
pop
inc
cwtl
in
sbb
in
push
jecxz
lahf
pop
movsb
adc
cmp
push
pop
out
outsl
xchg
push
mov
xchg
mov
outsl
jecxz
out
shrb
jb
xchg
cmp
cli
divl
xchg
lahf
test
gs
jle
pop
lods
iret
lahf
lret
mov
xchg
das
call
dec
mov
imul
ret
in
push
or
mov
and
outsb
inc
clc
rcpps
mov
outsl
pop
das
stc
repz
sub
mov
sarb
mov
cld
mov
xchg
adcl
pop
jo
cltd
xchg
mov
and
xchg
sbb
int
xor
repz
dec
jo
cmp
js
adc
cli
outsl
ljmp
aas
jg
cld
pop
xchg
cmp
add
ret
lret
out
lahf
in
sti
push
scas
inc
mov
shlb
mull
ficoms
cli
mov
mov
pop
jle
outsb
jns
fwait
arpl
cld
cld
xor
outsl
aaa
scas
mov
or
stc
cld
jno
in
js
dec
icebp
lahf
pop
or
push
stos
lret
je
push
imul
iret
lods
and
int
inc
lahf
ficoms
pop
je
dec
mov
dec
cmc
push
inc
jb
sbb
addr16
int3
fistpl
add
cld
cld
outsb
and
je
add
out
inc
jmp
xchg
inc
pop
into
add
fcoml
pop
stc
repz
das
repnz
sub
outsb
sub
lahf
aas
jg
imul
mov
pop
lods
icebp
lahf
aas
jmp
daa
xchg
and
repz
xchg
xor
leave
out
sub
lds
cld
push
push
enter
add
movsb
add
incb
gs
push
fstpt
out
lahf
adc
jbe
sti
inc
daa
or
outsl
mov
stos
mov
test
adc
cmc
dec
cmc
repnz
ljmp
dec
imul
push
pop
ds
repnz
jb
sub
dec
jmp
iret
ret
mov
pop
jns
in
daa
dec
jbe
or
aad
arpl
mov
inc
stos
fdiv
mov
popa
hlt
fldenv
in
push
pop
mov
xchg
mov
movsl
nop
sub
sbb
lcall
fstl
addr16
add
lock
popf
pop
pop
ret
dec
mov
aas
lret
mov
or
mov
jle
repnz
mov
cmpsl
adc
shll
loopne
repnz
xchg
sub
je
inc
aam
sbb
cmpsl
das
scas
mov
lret
roll
and
sub
je
sub
fcmove
dec
jmp
mov
movsl
fsub
cmpsl
push
aam
pop
xchg
sub
dec
xchg
imul
lret
gs
push
pop
pop
and
pop
enter
mov
stos
add
test
clc
in
lock
add
ss
das
mov
fbld
jmp
lahf
ret
test
hlt
lcall
mov
or
icebp
push
add
mov
daa
add
dec
cmc
hlt
xor
dec
scas
imulb
pop
iret
inc
mov
xchg
iret
scas
pop
pop
ror
in
mov
in
iret
lahf
jg
push
iret
pop
and
add
pusha
cmc
es
in
or
repnz
cs
nop
inc
and
jg
pop
loope
rcrl
lret
pop
shll
pop
push
popl
es
aas
mov
aas
add
into
insl
jne
pop
lret
icebp
dec
cli
in
cmc
push
jmp
lcall
lret
jbe
je
daa
outsl
push
adc
das
push
dec
mov
add
dec
xor
jecxz
sub
sub
and
xor
fdiv
lahf
pop
call
inc
push
mov
hlt
in
arpl
repz
lods
sbb
out
jle
lods
pop
mov
int
aas
jg
cld
call
fs
je
fildll
fstl
mov
jmp
pop
pop
jns
cs
ja
jle
aad
test
outsl
int3
aam
stc
repz
add
cmp
cmpsb
mov
inc
lds
cmp
dec
shlb
cmpsl
inc
pop
pop
jns
xlat
lcall
into
push
mov
pop
jg
mov
sbb
leave
icebp
jg
test
xchg
mov
cmp
mov
mov
enter
jle
mov
jle
repnz
sbb
in
call
adcl
fdivl
sub
cmp
fucom
lret
sub
mov
pushf
je
xchg
cld
inc
cli
sti
aas
mov
cmpsb
pushl
test
andl
stc
and
adc
mov
dec
ret
mov
dec
sti
add
add
pop
repnz
inc
pop
wrmsr
sbb
call
push
pusha
mov
mov
adc
aad
add
adc
scas
mov
lret
xchg
xlat
pop
sub
hlt
sub
es
mov
sbb
pop
lcall
pop
aas
repnz
lret
sub
fiaddl
mov
mov
or
pop
pop
push
adc
test
into
out
inc
pop
mov
lock
cmpb
scas
mov
push
dec
fs
sbb
into
mov
mov
push
dec
std
jb
jg
das
out
mov
sub
es
stos
push
ljmp
test
inc
shll
mov
outsl
push
jl
cld
stc
dec
mov
fdivl
in
outsb
mov
mov
pop
jb
pop
insb
sbb
sahf
aas
push
js
out
icebp
lret
xchg
adcb
or
adc
push
sub
xchg
mov
mov
xchg
cmc
xor
inc
cmc
mul
and
js
das
xlat
mov
mov
jae
mov
dec
loop
cmpb
or
jae
mov
test
outsl
dec
jb
mov
stos
fidivrs
mov
fisubs
mov
and
loop
mov
call
gs
mov
or
aad
mov
arpl
imul
loopne,pt
outsl
push
movsl
and
xchg
iret
lahf
jle
jmp
add
push
pop
bound
dec
cmp
lahf
sbb
dec
sbb
xchg
iret
lahf
and
sahf
xchg
cmp
shl
arpl
xchg
pop
push
in
cli
in
lret
dec
out
cmpsl
das
scas
xchg
inc
pop
repz
and
sub
lret
repz
shlb
xlat
mov
bound
movsl
cld
pop
clc
in
addb
into
cmp
enter
push
mov
and
and
lret
out
call
icebp
aas
mov
sbb
jmp
aas
sbb
jmp
pop
jns
inc
xchg
or
dec
cltd
mov
jb
sarl
mov
das
das
scas
mov
push
fidivrs
dec
mov
cld
stc
adc
xorl
sahf
aas
jg
mov
daa
mov
lock
mov
das
stc
xchg
aam
das
mov
mov
sbb
pop
cmpb
or
sbb
xchg
int3
lahf
sub
xchg
pop
scas
xor
fst
push
jl
mov
cmp
jns
dec
dec
sub
inc
cmp
dec
test
in
test
add
daa
xor
bound
push
popa
pop
cli
mov
stos
and
les
push
pop
mov
adc
mov
lret
out
push
test
repz
lods
push
pop
mov
fdivrl
imul
xchg
xchg
push
mov
xchg
addr16
repz
addr16
das
sub
js
mov
xchg
jge
adc
fwait
aas
call
jbe
or
mov
js
dec
shll
repnz
lahf
cli
mov
ret
jo
mov
xor
pop
and
xor
inc
out
push
jle
mov
fidivl
fisubl
jmp
iret
lahf
aas
or
pop
cmp
data16
dec
ds
and
push
lahf
movsb
hlt
push
xchg
cmp
insl
outsl
xor
mov
fistps
or
mov
mov
mov
cld
mov
sbb
sub
js
jns
out
pop
jge
push
aad
in
lret
mov
ljmp
cmp
cld
sbb
imul
aas
mov
mov
test
in
mov
adc
mov
loopne
mov
jg
jne
push
push
in
lahf
mov
scas
movsl
ds
int
sub
adc
arpl
lret
test
mov
jl
mov
pop
jecxz
mov
fisubrs
inc
jg
and
and
pop
pop
cltd
pushf
out
inc
dec
mov
aas
sub
pop
push
sub
sbb
stc
stc
repz
dec
aad
in
out
pusha
shrb
stos
addr16
jle
add
test
dec
shlb
lahf
jg
outsb
jmp
loope
insl
icebp
inc
loopne
pop
ret
cmp
repz
dec
aas
inc
and
out
xor
mov
movb
outsl
lods
push
push
adc
in
sub
cs
dec
cmova
clc
sti
inc
out
push
pop
out
lahf
jg
xchg
push
repnz
cwtl
stos
push
adc
sbb
repz
jle
mov
cltd
sub
lahf
out
sbb
repz
xor
cmp
cld
stc
cmp
sub
pop
je
cmpsb
jno
lahf
add
adc
mov
mov
sbb
sbb
out
xchg
and
cld
stc
repz
lds
cmp
dec
inc
or
aas
jg
in
fisubl
fwait
adc
jo
repnz
stc
repz
cmpsb
dec
loop
or
sub
into
xlat
outsl
push
xchg
lahf
aas
jg
cmp
sbb
cmpsb
pop
sbb
mov
out
adc
sti
hlt
daa
test
jnp
out
cmc
adc
cld
rcrb
mov
andl
pop
mov
xor
cmp
inc
imul
mov
pop
cld
stc
mov
movsl
ficompl
dec
fbld
or
jg
out
sbb
pop
mov
fistpll
or
lods
popa
push
clc
sti
enter
jecxz
mov
out
jle
cltd
mov
pop
iret
pop
push
lret
sti
in
sub
jl
push
stos
cmc
shrb
xchg
sub
out
xchg
les
aad
frstor
push
in
test
out
movsb
loop
jns
out
pop
out
out
lret
mov
cmp
test
data16
jae
inc
pop
popa
mov
dec
inc
fldcw
scas
inc
daa
in
jle
enter
dec
roll
mov
repnz
sub
iret
rclb
add
dec
jmp
or
adc
popf
cmpsl
stos
fildll
mov
add
pop
mov
inc
lahf
xchg
xchg
or
in
add
addr16
stc
repz
dec
inc
nop
scas
inc
sbb
iret
aas
jg
cld
nop
sbb
push
pop
jg
mov
adc
lahf
int3
xorb
or
jg
out
aad
mov
std
sahf
arpl
std
jb
jno
scas
lcall
out
dec
daa
scas
mov
data16
jmp
jbe
mov
xchg
negb
jns
enter
je
push
adc
lret
xchg
ja
add
loope
popf
and
pop
adc
jg
dec
sub
iret
lahf
aas
aam
in
xchg
cmp
in
push
cmp
cld
stc
repz
in
mov
jmp
pop
out
pop
lahf
loop
iret
lahf
aas
jg
xchg
sub
jnp
repz
aas
pop
daa
mov
test
dec
pmulhw
es
sub
jns
or
aam
add
sub
inc
inc
sub
lret
loopne
sub
mov
sti
stos
es
pop
pop
stc
xchg
icebp
repnz
cld
clc
push
cltd
in
cmp
mov
jg
cld
int3
mov
inc
jb
jne
fstl
ret
or
xchg
ret
pop
jns
adcb
and
call
and
xchg
jnp
add
out
stos
xor
loopne
repnz
repz
lods
add
xchg
xchg
push
fimuls
pop
call
inc
rorb
push
pop
jns
cmpsb
movsb
test
cmp
dec
jle
push
pop
jns
inc
sub
pop
popf
dec
push
mulb
test
cmc
in
out
cmpsl
add
xchg
push
test
repnz
add
pop
jns
lret
xor
jo
push
sbb
add
ds
repnz
mov
fists
xor
pop
xchg
xchg
aam
push
mov
jo
repz
sar
cmp
pop
sub
jle
jnp
pop
xchg
das
fisubs
pushf
mov
ljmp
sub
je
addl
repnz
lret
sub
mov
xor
iret
lahf
pop
push
jno
adc
jge
std
or
cld
stc
repz
insl
das
mov
xchg
cs
pushf
stc
mov
lea
das
loop
push
push
dec
mov
enter
fldcw
xchg
push
into
aas
aas
jg
cld
out
pop
mov
sbb
in
and
outsb
gs
lahf
sbb
sbb
bound
xchg
dec
pmaxub
repnz
aad
jnp
insb
inc
mov
adc
adc
and
in
push
mov
jmp
psubw
and
dec
jno
cs
jle
cld
mov
out
idivb
icebp
scas
adc
lret
lahf
pop
inc
push
scas
mov
leave
cmp
pop
sar
ret
add
and
mov
lahf
aas
jg
sti
sub
imul
jmp
xor
enter
cmp
dec
cmp
adc
scas
mov
sub
push
iret
push
xchg
ja
xchg
arpl
arpl
dec
push
sub
jns
stc
fisttpll
xlat
xor
sbbb
pop
jle
sbb
dec
rolb
icebp
lret
out
data16
cs
mov
cld
stc
cmpsl
enter
stc
lret
mov
out
in
pop
jp
mov
mov
movsb
hlt
in
lret
aam
cld
cli
scas
leave
fnstenv
mov
stc
xchg
mov
out
xchg
and
mov
lcall
dec
cmp
arpl
std
mov
and
sti
das
push
pop
jns
lcall
icebp
xchg
daa
out
adc
out
imul
jno
mov
mov
push
iret
repz
outsl
xor
inc
out
lret
iret
divps
jmp
adc
mov
out
jle
bnd
out
pop
push
lock
cmp
jg
bound
mov
in
es
stos
and
mov
scas
sub
mov
lret
mov
xor
mov
pushf
mov
mov
fldenv
mov
int3
mov
mov
add
add
out
lret
fwait
out
xchg
sub
out
divl
scas
mov
fcmove
xor
or
ss
jne
clc
or
aas
fildll
pop
jns
fnstsw
out
lock
or
stc
mul
xchg
push
pop
pop
fucomi
inc
subb
jle
jl
stos
xchg
push
pop
jns
pop
js
jnp
inc
pop
or
or
in
test
sbb
fcmovnu
mov
jns
xchg
mov
aam
je
mov
and
scas
insl
push
pop
jg
cmc
xchg
mov
vmaxpd
and
cmp
repz
mov
jmp
gs
jg
cld
mov
xchg
jo
pop
mov
xchg
iret
lahf
aad
and
jg
stos
paddb
repz
mov
mov
xchg
lcall
inc
fbld
fistps
pop
stos
fmul
sub
aas
jne
adc
jge
or
leave
sbb
sub
test
ljmp
pop
jns
sbb
mov
adc
and
call
das
or
daa
test
pop
pop
sbb
mov
sub
lds
pop
xor
xor
scas
mov
in
sbb
into
mov
scas
and
jg
cld
dec
sub
dec
sbb
fwait
pop
int3
cmp
push
leave
in
das
lahf
shrl
lock
test
movsb
dec
mov
mov
sub
sub
fstl
fcmovb
mov
subb
scas
repnz
ret
arpl
or
rclb
daa
ljmp
aas
jg
cld
outsb
adc
int3
hlt
mov
repz
and
iret
pop
lea
xchg
test
push
and
dec
push
adc
sbb
xorl
cld
stc
jns
push
dec
sub
xchg
lahf
js
sbb
xchg
fldl
xchg
ja
das
sarb
pop
outsl
or
jb
mov
and
inc
inc
mov
inc
push
mov
cld
sbb
hlt
ljmp
cmp
dec
mov
sub
lods
das
lahf
aas
aas
push
push
inc
je
xor
jmp
dec
outsl
out
sahf
sub
ds
movsb
arpl
stc
repz
into
popf
loope
insl
or
jp
xor
lahf
aas
jg
pop
in
aam
ss
frstpm(287
add
repz
inc
outsb
xlat
hlt
mov
ljmp
mov
outsl
jae
das
adc
pop
adc
jne
xor
sti
push
pop
iret
lahf
aas
jg
xchg
fdivr
fsubrl
fstpt
loope
in
inc
hlt
cld
stc
repz
or
push
movsl
xchg
pushf
scas
je
xchg
lahf
aas
jg
out
xor
mov
call
iret
mov
jb
scas
imul
jg
cld
mov
std
xchg
mov
xchg
rorb
push
in
and
lahf
add
xor
pushl
iret
sti
xor
lret
iret
pop
cmp
pop
jle
dec
stc
repz
dec
push
mov
jge
push
sti
sbb
add
test
hlt
mov
cld
add
xchg
imul
aas
jg
xchg
mov
inc
shlb
dec
jp
in
inc
movsl
rorb
adc
nop
add
jns
andb
mov
dec
jnp
pop
add
mov
lret
xchg
push
fimuls
fcompl
mov
in
push
xchg
mov
pop
mov
inc
loope
jns
sub
jns
xchg
push
imul
sbb
jns
xchg
push
xchg
repnz
add
mov
in
cli
cld
setns
xchg
push
pop
jns
adc
mov
add
jecxz
std
mov
std
in
sbb
mov
mov
jge
movsl
xchg
pop
jns
xchg
jo
nop
repnz
pop
add
sbb
xchg
push
mov
mov
addr16
in
push
pop
fadds
mov
push
push
cmpsb
or
add
jbe
jp
aad
jle
cld
cld
stc
adc
adcb
mov
sub
fistpll
mov
pop
aas
mov
mov
pop
repnz
fsts
inc
ds
dec
lcall
cmpsl
adc
ret
mov
add
jns
outsl
out
pop
jle
jbe
fldt
or
pop
das
aas
test
rcr
mov
shrb
scas
mov
hlt
fnstenvs
test
xorb
jle
xchg
shlb
rorb
add
dec
and
cs
jns
enter
in
ljmp
jecxz
xchg
sub
pop
rclb
icebp
push
cmp
mov
sti
repnz
adc
cmp
mov
push
into
repz
or
lds
mov
mov
scas
aam
or
rclb
dec
cmp
pop
jbe
je
out
lret
mov
fcmovu
lret
sub
adc
repnz
dec
lea
or
into
mov
xchg
repz
lahf
mov
aaa
xor
imul
leave
subl
sti
push
loop
ret
iret
rol
out
lahf
aas
ret
and
hlt
xchg
imul
enter
je
stc
repz
std
xchg
mov
mov
lahf
jg
aas
jg
dec
adc
xrelease
repnz
xchg
iret
out
cmp
jg
xchg
imul
add
mov
stc
cld
dec
push
cld
or
aad
cmp
sub
aas
jle
sbb
aam
sahf
fcmovnu
ja
in
adc
jmp
jge
lahf
jne
fidivrs
test
imul
sahf
cmp
call
xchg
sbb
cmc
mov
mov
iret
jl
cmp
lods
jbe
daa
sbb
aas
jg
cld
cli
fisubrs
lahf
dec
adc
repz
lahf
stc
mov
pop
test
ret
sub
in
and
stc
stc
or
fildl
mov
in
das
scas
mov
fs
push
imul
jg
fildll
scas
lods
xor
push
mov
mov
ret
sahf
rcr
pop
hlt
popf
insb
adc
outsl
adc
fs
jg
dec
std
cmp
out
out
and
ficoms
ja
jg
mov
inc
pusha
xchg
adc
mov
pop
in
lock
movsl
mov
iret
jle
scas
mov
imul
movsl
mov
dec
push
jae
mov
add
fcmovnb
iret
xchg
outsb
repnz
out
pop
push
cmpsb
jno
sbb
inc
inc
sub
sub
xchg
aaa
or
lahf
insl
out
jle
repnz
test
lret
mov
jmp
xchg
mov
pop
movsbl
repnz
out
inc
out
mov
xor
jnp
and
nop
cmp
adc
add
pop
and
cltd
cmp
lret
cld
das
test
into
jb
xchg
lea
cs
sub
in
sbb
repnz
out
fdivrp
repnz
xrelease
push
jg
cmpsb
fcompl
bound
decb
sbb
fbld
fwait
sbb
mov
fstps
mov
lret
inc
jg
in
push
pop
push
inc
add
aas
cld
mov
xchg
push
pop
inc
push
aam
inc
cmp
stos
xor
push
pop
jns
jmp
repz
dec
jp
jb
jne
push
int3
xor
pop
in
xchg
test
aaa
repnz
sub
xchg
sbb
testb
xchg
sub
jg
push
sub
pop
and
push
icebp
scas
mov
pop
js
vcvttss2si
cli
mov
push
inc
in
cmp
repnz
xor
add
fisubl
aaa
in
jle
push
mov
gs
xchg
xchg
push
pop
jns
js
in
loopne
push
xor
cmc
enter
mov
ja
decb
xor
xchg
lds
and
into
pop
dec
pop
jle
icebp
movsl
xorb
repnz
mov
mov
jnp
inc
mov
aam
iret
lahf
aas
pop
push
jle
jg
fadds
aas
ss
sub
in
hlt
cwtl
pop
push
push
lds
aas
cltd
inc
adcb
jb
add
inc
mov
xchg
jmp
out
fdiv
lret
roll
bound
das
enter
mov
pop
ret
jb
add
scas
mov
mov
test
pop
imul
scas
mov
xchg
std
and
jo
clc
in
sub
orb
repz
cmp
pop
mov
xor
inc
clc
pushf
aam
outsb
fisubrs
pop
stos
dec
into
mov
cld
dec
pop
jle
add
cs
jnp
xchg
jg,pn
pop
xchg
mov
inc
idivb
fstps
stos
movq
mov
fistpl
shrb
jg
cld
cwtl
dec
xchg
enter
daa
imul
or
cmp
ret
out
jg
inc
add
pop
in
sbb
out
lahf
aas
inc
mov
testb
fisttpl
repnz
pause
fs
lret
stc
in
imulb
in
ja
jle
aas
shlb
stc
adc
pop
fidivrs
or
ds
hlt
lds
in
or
repnz
stos
mov
xchg
push
dec
and
dec
push
ja
jl
mov
pop
fsubr
ljmp
fstl
out
cmp
cmp
fidivrs
mov
ja
mov
sub
or
xchg
ja
xor
data16
aam
mov
cld
sub
jge
lret
rep
dec
push
fists
cpuid
dec
pusha
xlat
and
xchg
push
fidivrs
divb
pop
sub
mov
lret
dec
lods
pop
ljmp
scas
mov
shrl
shl
jecxz
stos
xchg
repz
jecxz
les
arpl
cld
stc
dec
mov
adc
outsb
imul
add
dec
das
stc
jns
fimull
arpl
imul
push
mov
outsl
mov
sarb
outsl
pop
jns
lret
mov
push
stos
or
jb
hlt
les
jns
xchg
push
lods
mov
sub
xchg
push
fidivrs
inc
pushf
jg
clc
out
fs
test
pop
pop
pop
jns
notb
movsb
shlb
xor
cld
pop
pop
aas
shrl
pop
popa
testl
mov
push
fistl
add
in
xlat
sahf
call
mov
mov
jns
or
inc
sub
mov
sub
jl
outsb
mov
jns
xchg
ja
loope
outsb
lods
mov
or
pop
push
sbb
mov
testl
clc
sub
mov
fs
push
inc
iret
jb
das
push
rcll
in
mov
lret
sbb
sti
rsm
sub
das
pop
jmp
movsb
jle
sbb
dec
xchg
lahf
dec
jbe
jmp
lcall
negl
add
pop
cmp
xchg
idivl
pop
jns
xchg
jne
sub
in
or
inc
and
pop
pop
ja
add
outsb
ja
aas
jg
push
xchg
aaa
inc
mull
out
aam
or
mov
outsl
pop
mov
cmp
lahf
cwtl
out
rol
mov
pusha
xchg
ret
pop
or
mov
loop
ret
sahf
stos
lret
aas
push
outsb
jmp
int
xor
out
jle
repnz
and
test
rorl
test
scas
cltd
out
pop
jmp
pusha
inc
dec
shlb
cld
and
push
pop
jle
in
cli
loope
les
mov
pop
jns
or
and
jb
mov
jns
clc
fsubl
loope
xchg
scas
out
pop
insb
iret
lahf
jg
scas
test
pop
add
stc
fnstsw
out
xor
mov
jno
loopne
mov
jmp
arpl
clc
in
imul
out
mov
and
cld
mov
sub
mov
xchg
lahf
aas
adc
sub
pop
jns
sbb
or
add
mov
xchg
int3
sti
test
pop
ret
ret
enter
loop
xlat
aaa
std
iret
dec
adc
jg
adc
mov
jecxz
scas
aas
in
out
stos
cmp
repnz
dec
bound
and
outsb
and
mov
add
jp
stc
repz
sahf
sub
dec
xor
cld
pop
sub
hlt
dec
cwtl
pop
fisubs
test
cmpsl
inc
clc
sbbb
hlt
jb
maxps
sub
add
insl
inc
mov
adc
in
pop
cmc
lds
outsl
stc
repz
loopne
sbb
mov
sub
std
push
add
inc
jge
pop
mov
xchg
mov
or
dec
pop
jle
jb
imul
in
push
test
imul
stc
repz
inc
dec
fildl
outsb
and
jns
xorl
mov
or
adc
lret
jnp
jns
scas
mov
xchg
lret
ds
in
loop
sahf
push
std
std
adc
jno
jmp
out
or
cmp
iret
pcmpgtb
cmp
dec
inc
add
push
shl
cld
mov
aas
repnz
add
cmp
sub
sbb
das
test
popl
sub
jns
xchg
push
cwtl
inc
sbb
popf
jl
mov
ja
pop
push
or
jecxz
add
jg
lea
jns
xchg
in
jo
test
mov
xchg
pop
cmc
cmpsl
fiadds
fidivrs
stc
adc
cli
mov
stos
pop
lret
inc
aaa
bnd
xchg
push
call
adc
jl,pn
jno
das
ja
pop
daa
adc
enter
out
repnz
fcomps
pop
jns
minps
nop
fnstcw
sub
dec
push
andl
xchg
sbbb
insb
mov
mov
call
mov
lret
jle
adc
mov
xchg
ja
fisubrs
pop
hlt
mov
cmc
add
in
iret
mov
mov
cmc
daa
dec
lods
xor
into
mov
pusha
jg
mov
addr16
movb
xor
pop
jno
mov
call
inc
xchg
jge
stc
subl
movsl
jmp
stos
test
jg
dec
out
pop
mov
mov
les
lods
out
sarb
ljmp
cld
stc
repz
xchg
cmp
pop
jbe
xor
test
jg
dec
sub
pusha
int3
and
fldt
imul
repz
repnz
mov
popf
pop
sarb
mov
lret
das
xor
xor
mov
jecxz
lret
add
ljmp
mov
scas
mov
repnz
xor
repz
loop
xchg
mov
in
loope
mov
jg
cld
dec
fldenv
mov
out
sahf
mov
aam
lahf
jo,pt
add
xor
or
xchg
ja
dec
push
sbb
push
fidivrs
mov
orb
xor
jl
in
add
icebp
adc
filds
pusha
aas
mov
in
push
fimuls
clc
dec
xchg
push
lahf
xchg
sub
mov
cmp
jbe
enter
pop
pop
jns
jp
lret
xchg
and
shll
stc
lret
ja
pop
jnp
jbe
aas
mov
push
inc
stc
repz
push
sti
xor
test
leave
pop
jecxz
push
aas
jg
cld
sbb
add
fbld
pushf
lcallw
in
lahf
dec
insl
sub
xor
loop
cmc
repnz
sahf
das
jmp
pop
fisubrs
pop
jle
cld
stc
aaa
addb
fsts
dec
push
lahf
push
in
ja
and
dec
push
pushf
enter
lods
fsubs
jb
jge
movsl
pop
loopne
shrb
icebp
out
in
addr16
pop
das
mov
or
push
dec
cli
ja
jp
mov
push
pop
out
xchg
cmpsl
aas
jg
cld
sahf
jle
cs
cmpsb
push
mov
adc
shl
iret
lahf
sbb
xor
into
imul
or
jle
sbb
cmp
or
mov
sub
sbb
das
pop
cs
xchg
fsts
mov
cld
stc
repz
and
pop
ret
lahf
aas
jg
dec
sbb
pop
sar
or
repnz
cmp
leave
dec
push
sub
adc
repz
cli
sbb
mov
mov
mov
jg
cld
stc
insb
loop
repnz
push
lds
dec
sbb
mov
push
cs
aaa
xchg
adc
lahf
flds
dec
repnz
scas
je
out
fcompl
out
int3
icebp
paddd
mov
clc
js
aaa
jg
jge
in
std
in
sub
outsl
jmp
or
jecxz
ja
ja
xor
mov
bound
icebp
inc
imul
stc
sub
adc
sbb
repz
mov
testb
cld
pop
fsubs
repz
int3
outsb
scas
mov
fs
adc
pop
jne
add
mov
repnz
or
decb
lret
sub
aaa
mov
shrl
mov
push
mov
aas
mov
test
lock
gs
stc
repz
add
inc
aaa
movsb
fisttpl
and
out
pop
movsl
mov
lea
inc
lods
cmp
scas
mov
and
adc
mov
mov
add
mov
ja
mov
scas
loopne
push
add
mov
jg
shl
cmpb
or
inc
adc
aas
outsl
inc
jge
ret
mov
aam
inc
ds
lahf
mov
jns
push
cmp
sub
hlt
jp
outsb
push
jbe
gs
xchg
popa
mov
popf
call
into
loope
cmp
aas
jg
cld
lcall
adc
push
push
nop
ret
ret
mov
inc
out
xchg
iret
lahf
xchg
push
dec
sub
mov
jle
out
mov
sbbb
dec
push
fsubr
mov
and
sub
cmp
scas
clc
ja
repz
das
xor
mov
jg
cld
adc
scas
js
cli
sbb
rolb
jl
popa
push
lret
aas
mov
cwtl
jle
or
scas
mov
sbb
mov
jo
repnz
lds
xchg
lds
clc
push
scas
sti
iret
mov
test
push
pop
dec
arpl
xlat
data16
jmp
arpl
mov
stc
and
jns
jo
mov
fildl
push
lahf
aas
jg
cmp
ja
or
mov
ror
aaa
jmp
int
cmp
insb
pop
lcall
stos
xchg
iret
jp
sbb
dec
aaa
mov
inc
repnz
stos
lar
es
dec
ja
sub
mov
outsl
dec
push
jg
inc
mov
cmovno
out
shrb
lahf
sub
out
das
inc
mov
hlt
mov
mov
testb
dec
xor
das
jmp
repnz
dec
dec
mov
fs
sahf
mov
repz
dec
jle
and
cltd
test
jmp
or
and
jp
xchg
adc
iret
lahf
mov
mov
cld
stc
and
fmuls
insb
roll
cmp
aaa
js
push
mov
sbb
stc
repz
jmp
or
pop
sub
cmpsl
cmpsb
test
dec
jg,pt
stc
cmp
adc
movsb
mov
fiaddl
lret
ret
dec
push
adc
cld
cmp
sub
dec
js
xchg
pop
insb
enter
mov
imul
mov
jne
fisubrs
or
cwtl
outsl
push
add
xchg
push
shrl
inc
fisubs
inc
mov
xchg
pop
and
jl
jge
aas
and
mov
pop
sub
dec
imul
lahf
aas
fistps
push
dec
adc
pop
jns
lret
clc
addl
movsb
dec
scas
test
lea
cs
sbb
push
pop
jns
mov
jl
xchg
mov
xlat
xor
in
dec
xchg
jmp
sti
cmp
in
dec
ret
jae
scas
lahf
int3
outsb
fildll
fmul
ret
xor
jg
call
stc
repz
dec
stos
cmpsl
addr16
adc
jg
dec
cld
xor
fadds
insl
push
clc
dec
pop
in
ja
mov
out
mov
fwait
or
std
jb
pop
cmpsl
xchg
pxor
mov
lahf
aas
jg
push
aas
dec
or
sub
cmpsl
pop
movsb
and
test
xlat
adc
jg
xor
stc
shl
sbb
sbb
inc
lods
movsl
lods
or
jge
or
mov
inc
flds
repnz
jg
call
xlat
mov
out
lret
sub
sbb
repnz
aaa
ficomps
repnz
fcomp
mov
add
push
cmp
idivl
sub
loopne
pop
and
out
pop
mov
test
xchg
xchg
imul
cld
cld
movsl
aam
scas
lods
aam
xchg
out
ds
scas
xchg
pcmpgtw
mov
daa
ljmp
repnz
jge
stc
repz
loopne
adc
stc
repz
dec
clc
inc
scas
int3
sub
push
cli
sbb
jge
lods
fisubl
addr16
cmp
add
ja
ret
out
ret
jb
adc
pop
shrb
push
pop
lret
jne
cld
xor
fldl
inc
pop
jl
repz
dec
fsubrl
xor
pushf
aas
jg
cld
add
xchg
xor
mov
mov
jb
shrb
lahf
loopne
push
xchg
cld
stc
repz
mov
mov
pop
sbb
and
cmp
in
insl
sub
aad
call
xchg
lret
aam
or
repz
pop
inc
shll
repnz
sub
mov
pop
outsl
jae
cwtl
ret
inc
mull
addb
mov
in
in
aas
ret
dec
into
inc
pop
in
repnz
add
jb
inc
sbb
push
repnz
and
xchg
int3
mov
mov
out
cmp
ds
mov
out
mov
jb
cmp
mov
mov
int3
fdivr
in
and
inc
mov
jecxz
mov
inc
jp
sbb
jne
iret
lahf
aas
lcall
into
arpl
push
aaa
lahf
pop
call
mov
and
lods
pop
aam
jmp
push
xor
pop
arpl
mov
das
stos
sbb
mov
lahf
out
jl
push
int3
dec
call
cmpl
add
or
or
adc
lahf
pop
push
rcll
xchg
lahf
aas
cs
dec
jnp
cmp
mov
aaa
lahf
bound
popa
jg
dec
xchg
in
push
pop
sbbb
insl
into
ds
int3
mov
dec
sub
aaa
sub
inc
xchg
push
pop
jns
rorb
lock
mov
fistpll
cmp
mov
pop
xchg
iret
lahf
pop
push
push
xchg
jne
mov
add
pop
mov
ret
pmaxub
push
out
add
or
out
iret
cmp
hlt
lods
mov
sub
add
pop
jge
push
pop
stc
lcall
xchg
dec
push
dec
push
sub
jl
imull
and
pop
jbe
outsl
mov
std
repnz
repz
clc
ficomps
xlat
in
or
xchg
push
fidivrs
mov
xlat
and
shr
hlt
iret
cli
add
adc
scas
lret
ja
pop
push
incl
adc
test
stc
pop
cmc
mov
shll
mov
adc
pop
iret
dec
jbe
aad
xor
lret
xchg
ja
xor
sbb
sbb
add
repnz
fcmove
jp
push
out
stos
jg
cld
or
and
add
mov
scas
out
mov
out
inc
xor
stc
in
test
and
out
out
fmulp
push
test
xchg
out
lahf
aas
or
cld
push
push
xchg
imul
sarl
cld
stc
repz
sub
mov
stc
xor
es
xchg
mov
push
xchg
cmovle
or
xor
inc
dec
cli
repnz
push
inc
adc
mov
iret
sub
in
mov
mov
jg
dec
int
add
imulb
pop
shrb
aas
mov
movsb
jmp
lahf
jg
jle
and
cltd
mov
out
sbb
int3
adc
mov
pop
into
sub
lods
adc
fildll
cmp
in
sahf
sbb
out
leave
daa
jmp
daa
rcr
sbb
add
repz
or
enter
adc
jg
cld
pop
cmpsl
sub
cmp
popl
repz
lahf
out
inc
fistps
popf
mov
clc
bnd
and
mov
push
fdivrp
jge
and
pop
ror
jae
cs
mov
fdivrp
jb
bound
xchg
lahf
aad
aas
and
ja
fnstsw
lock
sbb
cld
jb
cmpl
cli
mov
jb
in
pop
jle
cltd
ss
pop
xor
cld
dec
js
jae
mov
and
ja
jg,pn
jmp
or
shrd
pop
jns
xchg
repz
fldt
mov
aaa
push
arpl
nop
ror
and
lret
mov
popa
lahf
inc
or
push
mov
call
mov
pop
jle
das
popw
mov
data16
lret
mov
aad
jne
jmp
mov
jl
xor
mov
add
stc
repz
into
movsl
xor
pusha
stos
aam
jle
std
daa
inc
pop
adc
int3
push
loop
out
lahf
aas
jno
push
cmp
sbb
xor
call
cld
push
mov
ds
sbb
inc
movsl
enter
lahf
pop
add
loope
ret
inc
cmp
jns
push
rcrb
jnp
pop
dec
xlat
xor
movsb
jl
in
test
ret
pop
mov
jle
dec
mov
and
jg
cld
add
or
pushf
ljmp
aas
stos
movsb
jg
mov
fst
xchg
or
lret
mov
icebp
jecxz
jmp
std
xchg
add
mov
movsb
sub
in
cwtl
jg
cld
pop
sbb
xor
xchg
pop
rol
fstl
jg
and
out
sub
iret
mov
or
mov
stc
cld
stc
repz
mov
sbb
outsb
inc
push
or
jo
nop
iret
lahf
aas
jg
mov
jl
jle
add
jns
lret
out
sarb
mov
cmpsl
les
in
push
pop
es
shll
mov
je
push
pop
jns
sbb
sbb
cld
std
inc
push
pop
jns
fwait
pop
jmp
pop
or
lock
jb
xchg
jnp
addl
pushf
fidivl
cld
outsl
mov
jl
lods
xor
push
or
sub
cmp
jg
xor
int
pop
aam
cltd
mov
lahf
add
aad
test
out
lahf
fdivrp
adc
xchg
mov
push
pop
jns
add
dec
xchg
packuswb
je
push
jg
das
mov
scas
outsb
xchg
mov
dec
lahf
pop
inc
ror
outsb
mov
in
iret
mov
ljmp
cld
stc
xor
cltd
stos
lods
sub
iret
lahf
aas
jg
add
pop
or
add
fsubrs
into
lock
out
ror
int
imull
fdivrl
out
scas
mov
inc
out
add
fwait
leave
adc
daa
lock
xlat
lds
push
into
negb
jg
xor
mov
adc
cmp
lods
addb
pop
fmull
lret
aas
jno
pavgw
push
lret
sub
cli
lret
scas
mov
das
pop
aam
imul
pop
jno
mov
xchg
mov
scas
mov
out
or
xchg
xor
push
jl
sub
push
mov
out
xchg
test
xchg
js
popa
andl
xchg
sub
dec
adcb
push
sti
in
arpl
sub
adc
sub
mov
mov
scas
mov
xchg
subl
dec
add
in
sub
mov
imul
cmp
adc
mov
pushf
push
scas
cltd
cmp
mov
jmp
int
das
jmp
mov
ja
lret
mov
call
sub
cmpsb
fcomi
adc
sub
popf
sub
push
stos
hlt
scas
adc
dec
pop
inc
jg
lret
cwtl
aas
mov
mov
iret
lahf
jg
repnz
iret
push
and
iret
lahf
jg
inc
jno
dec
mov
pop
out
mull
mul
out
mov
ss
inc
mov
mov
xchg
cmp
xchg
push
pop
pop
sbb
aaa
mov
adcl
mov
push
add
dec
push
in
push
scas
mov
sub
mov
or
cld
mov
mov
les
pop
sbb
fnsave
addl
mov
jecxz
sub
popl
sbb
sub
sbb
out
lahf
adc
dec
lret
add
mov
or
sbbb
and
mov
push
dec
jb
inc
pusha
fisttpll
mov
jmp
cmpl
xor
lret
out
gs
sahf
adc
cmpsb
daa
hlt
xor
cmp
mov
mov
sbb
mov
mov
lods
pop
or
xchg
into
dec
inc
enter
lahf
scas
pusha
int
jmp
cld
stc
cs
push
mov
push
sub
push
pop
xor
aas
loopne
jb
cmc
aam
push
notl
stc
repz
mov
mov
sahf
jmp
aaa
nop
out
jle
and
scas
jle
cwtl
xor
lahf
aaa
imul
mov
and
lahf
jno
stc
repnz
lahf
jle
mov
dec
sub
push
lret
pop
repz
sub
fldcw
mov
jnp
movsb
das
das
movsl
dec
mov
cs
stos
sub
shrb
lea
and
adc
mov
push
sub
popa
clc
aaa
and
dec
imul
scas
xchg
out
in
js
rep
out
push
ret
adc
and
sarb
cld
nop
sahf
fcmove
je
outsl
inc
int3
fs
push
pop
aas
subb
std
clc
mov
mov
pushl
out
xchg
iret
jb
mov
fwait
lret
push
out
ljmp
scas
mov
jmp
rclb
cld
add
in
out
lret
cmp
xchg
sbb
mov
bts
lret
dec
test
cmpsl
divb
scas
mov
cli
fisttps
add
lods
lods
pop
or
lahf
lea
ret
cltd
jae
xor
out
lret
sbb
lcall
in
push
pop
test
sbb
pop
xor
xchg
push
pop
jns
enter
mov
les
pop
jns
cmp
jbe
mov
imul
sbb
out
inc
in
sbb
repz
push
sbb
jb
cwtl
iret
mov
stc
adc
sub
aad
jnp
pop
mov
jg
fcompl
dec
fnstsw
lods
movsl
shrl
rorl
lcall
rcr
jae
xchg
ret
jmp
popa
sahf
cmpl
sub
jmp
repz
lahf
mov
add
repnz
imul
es
aas
jns
in
pop
cs
int
xchg
cmpsb
or
sti
sub
movsl
fstl
test
addr16
fwait
inc
mov
pop
jns
test
xor
cwtl
sub
jg
jns
xchg
xor
jbe
or
jmp
arpl
lcall
clc
hlt
add
outsl
dec
lods
int3
insb
js
icebp
in
push
pop
in
cmpsb
and
jns
gs
outsb
xchg
pop
jns
pushf
test
xor
inc
loopne
stc
fildll
scas
mov
sub
push
mov
or
xchg
aad
sub
aas
pop
sbb
inc
fidivs
xchg
sub
mov
das
mov
and
in
lea
or
repz
into
lds
or
xchg
jge
repz
push
sahf
jl
cld
cmp
aam
ss
sbbl
fstps
mov
sub
fld
or
das
push
je
push
add
jle
cld
mov
sbb
sahf
pop
dec
cld
leave
add
mov
std
test
and
xor
push
dec
cmpsl
cli
insb
movsl
lahf
mov
cmp
push
shrl
je
repnz
out
push
mov
push
pop
jns
cld
jg
cli
pop
ljmp
jge
in
sbb
fdecstp
jecxz
jge
jle
popa
sahf
or
lcall
jg
xchg
adc
fcmovnbe
xchg
xchg
sub
rcrb
mov
pop
push
mov
lret
inc
sub
xchg
sub
adc
pop
sahf
inc
push
pop
imul
jnp
scas
pop
or
insb
and
jg
cs
xchg
and
ja
push
fwait
xchg
pop
fnstcw
cmpsb
mov
incl
jo
mov
insb
dec
mov
loopne
xor
scas
mov
mov
shrb
repnz
push
lret
stc
jb
movsb
and
sub
jecxz
cli
fistpl
aam
test
stc
repz
pusha
pop
lds
call
mov
jle
cld
rcrb
push
jg
dec
sub
pop
stc
adc
adc
aaa
sub
push
pop
adc
jg
insl
mov
pop
pop
fisubs
iret
lahf
dec
repz
xor
les
pop
sub
pop
push
xchg
pop
popa
pop
xchg
icebp
pop
shrb
add
cld
stc
dec
mov
aas
mov
movsb
fucomp
hlt
xor
aam
ja
mov
pop
iret
cwtl
sbb
add
aas
jg
xor
es
lcall
iret
out
push
adc
mov
dec
das
jg
mov
xchg
outsl
cs
lret
iret
lahf
pop
mov
aam
fcomi
or
daa
stc
repz
cmp
repz
popa
fldcw
add
js
fdivrl
fsubrs
rcrl
pop
jg
dec
add
sub
lea
cmp
sub
ljmp
inc
sarb
pop
add
aas
jg
cld
dec
loope
inc
mov
loop
pop
xchg
pop
cmc
xor
iret
lahf
jecxz
enter
dec
fisttps
popa
mov
fs
repnz
pushf
adc
stos
inc
hlt
inc
stc
sarb
stc
scas
inc
ljmp
dec
aaa
ds
pop
jns
das
sbbl
jmp
stc
repz
test
setnp
dec
xor
inc
dec
cld
jge
mov
jle
dec
ja
lahf
aas
jg
into
sbb
jo
push
lods
mov
jge
add
or
clc
add
cmp
lahf
xor
mov
fwait
mov
pop
add
out
jmp
test
mov
cld
stc
repz
mov
sub
jge
dec
lcall
jle
in
jmp
test
pusha
dec
mov
cmpps
or
push
mov
cld
stc
repz
stos
dec
neg
lcall
lahf
aas
jg
stos
sbb
das
jle
loopne
add
pop
jns
frstor
push
push
adc
cmp
inc
ljmp
sub
xchg
cmpsl
movsb
jp
jg
add
scas
mov
in
incl
lcall
fbld
out
fisttpl
loop
dec
mov
mov
filds
xor
cltd
fbld
jns
fbld
cmp
shlb
mov
add
jg
inc
mov
push
stc
repz
push
xchg
pop
hlt
js
sub
dec
pop
jns
out
jns
stos
orl
in
lahf
pop
jle
pop
loopne
in
mov
pop
clc
repnz
mov
mov
mov
pop
lret
scas
mov
adc
lahf
pushf
push
jns
xchg
ja
test
mov
cmp
std
inc
mov
push
push
shrb
movsl
aam
das
lahf
aas
jg
psubusb
fwait
mov
sbb
std
xchg
mov
rclb
and
push
notl
mov
jl
or
cmp
xchg
outsl
xchg
push
pop
jns
pop
jle
xchg
xor
xor
aaa
xor
xor
xor
jle
cld
cmp
cmpxchg
cmp
cmp
mov
sbb
jl
fdivr
jo
lret
xor
mov
xchg
sub
inc
push
fwait
int
pusha
mov
mov
popf
xchg
inc
pushf
cmp
inc
lds
in
pop
jbe
fprem1
add
mov
das
loopne
lret
lret
pop
adc
cmp
sub
sti
mov
push
popa
mov
sarb
js
add
insb
adc
pusha
daa
add
lret
dec
and
frstor
es
movsb
pop
imul
mov
pusha
lock
cli
xor
repnz
xorb
imul
aas
or
ds
push
and
lret
test
out
shld
sbb
bound
mov
cmp
scas
cmc
mov
add
cld
jnp
aas
adc
inc
nop
js
mov
jo
pop
iret
in
push
fidivrs
push
add
dec
push
lret
call
mov
jns
xchg
mov
lds
outsl
mov
and
lcall
jl
cmc
add
std
adc
cmp
inc
xor
pop
mov
test
iret
xchg
mov
rorl
imul
add
scas
in
pop
hlt
push
cld
lret
cli
cmp
cmc
ds
js
dec
cmpsb
push
loope
iret
lahf
aas
jg
xchg
lock
or
mov
push
lret
xchg
and
mov
jg
dec
inc
scas
iret
mov
jl
lock
dec
insl
in
xor
enter
mov
sbb
psubb
cwtl
cli
imul
in
and
jae
aas
jg
cld
mov
mov
mov
add
mov
ror
repz
lahf
pop
xchg
or
xchg
or
into
js
leave
adc
mov
and
mov
xchg
pxor
insl
test
in
push
loopne
iret
adc
xor
mov
push
pop
mov
or
jmp
pop
jns
adc
xlat
sbb
ds
inc
cld
stc
repz
cmp
push
ljmp
pop
jg,pt
jae
fcmove
pushf
js
jle
std
jae
push
sahf
jbe,pn
pop
pop
xor
inc
mov
cld
stc
rolb
out
inc
jbe
mov
pop
lods
and
jns
sub
outsl
insb
sub
fstl
mov
jb
cmp
dec
push
fisttps
push
pop
jns
nop
sti
dec
cwtl
push
sti
add
fnstcw
xchg
xor
movsl
jae
mov
pusha
pop
cld
jns
mov
lcall
xor
add
aas
jg
adc
adc
cwtl
mov
jns
lret
out
fcmovnbe
cmpsb
insb
push
and
out
ja
fsubs
imull
jnp
jae
enter
jg
and
xlat
ret
scas
sub
cmp
stos
xorb
xor
jle
out
insb
dec
mov
sti
cmc
jg
inc
jp
lahf
aas
mov
cwtl
aaa
or
dec
push
mov
push
lret
out
jp
pushf
add
mov
fbld
setp
out
lahf
cs
jg
add
cwtl
arpl
and
dec
mov
stc
mov
repz
cmp
lods
and
stc
cld
push
in
sbb
cmpsl
pop
out
test
sti
scas
jg
pop
and
cltd
pop
jg
lahf
sub
ss
mov
repz
cmp
cmpsb
pop
jmp
xchg
loopne
aas
jg
cld
call
push
mov
out
mov
dec
xor
out
lahf
cwtl
mov
xor
adc
scas
jmp
stc
cmp
imul
in
call
inc
jae
pop
push
lods
push
mov
lahf
aas
jg
dec
lahf
mov
negl
daa
sub
mov
dec
adc
jp
pop
and
jle
repnz
xor
incb
jb
insb
jge
hlt
subps
out
mov
addr16
imul
jno
sahf
in
das
lahf
das
sahf
cmp
dec
movsl
scas
mov
imul
inc
std
jb
cmp
fbstp
scas
orb
jg
hlt
nop
mov
in
loopne
sahf
or
repnz
in
push
mov
sarb
lret
mov
shll
or
nop
cltd
fsts
repnz
mov
repnz
mov
xchg
push
fidivrs
push
out
jb
daa
jne
sub
std
jb
mov
icebp
aam
movsl
imul
xchg
push
fdivrp
cmp
ljmp
xor
xchg
lret
jb
std
push
out
pushf
or
sub
xchg
dec
stos
pop
xchg
into
jle
repnz
add
ds
lahf
out
and
pop
pop
ds
lret
mov
mov
add
mov
xor
mov
sbb
call
repnz
sbb
lret
lret
mulb
insb
sti
pushf
roll
incb
pop
and
aas
sbb
cld
cld
or
fsubrp
jmp
sbb
xchg
dec
je
mov
mov
std
jb
lods
fwait
adc
inc
scas
aas
imul
icebp
lea
mov
pop
daa
dec
adc
repnz
jno
inc
aas
jg
cld
cs
aas
mov
fnsave
sbb
lret
lahf
aad
jo
pop
shl
movb
xor
out
loop
mov
out
fisubrs
fucomi
mov
mov
push
pop
jns
int
push
sub
pop
adc
stos
clc
clc
out
pop
jns
xchg
nop
shlb
insl
lcall
repz
jns
mov
cld
dec
js
jle
es
pop
notl
sbb
lds
inc
xor
jae
jae
in
in
push
jne
push
pop
outsl
xchg
aas
iret
les
in
idiv
push
cmpsb
test
sti
sub
mov
mov
dec
add
sahf
sahf
add
lret
out
lahf
add
stc
nop
aad
insl
add
test
jns
jnp
pop
mov
arpl
mov
pop
jns
xchg
dec
jb
and
pcmpgtb
imul
xchg
push
sub
xchg
stc
movsl
hlt
push
push
cmpsl
sub
sbb
adc
jle
adc
inc
rorb
lahf
jg
inc
pop
paddb
xor
scas
imul
pop
sbb
fs
data16
cld
xchg
cli
in
jo
adc
mov
subl
sbb
test
jg
cmpl
out
sub
pop
pop
out
lahf
aas
loope
pusha
xchg
jl
mov
ret
adc
inc
pop
jns
popf
and
lods
or
aaa
mov
in
push
cmp
pop
mov
inc
cmp
lcall
scas
and
jg
lahf
aas
jg
sahf
add
mov
jge
push
inc
jmp
iret
add
dec
pusha
out
das
in
loopne
jl
dec
xchg
aas
jg
cld
pop
sub
cs
sbb
push
mov
dec
int3
repnz
mov
stc
sub
pusha
jbe
adcb
outsb
mov
add
mov
sub
mov
ret
mov
outsl
adc
mov
xchg
push
inc
xchg
jb
mov
sti
sti
in
rcl
fstpt
incb
inc
adc
adc
iret
lret
mov
popw
mov
into
dec
loop
aad
or
out
loope
or
es
add
ds
cs
pop
and
inc
jl
popf
push
mov
sarl
gs
mov
dec
fnstcw
pop
sbb
mov
xchg
push
outsb
inc
pushf
enter
fsubp
in
pop
lret
lock
repz
pop
aas
insb
or
xor
enter
stc
sbb
or
mov
cld
stc
xchg
scas
jae
ss
sub
cmp
lahf
aas
jg
jbe
add
pushf
aam
add
mov
in
clc
lcall
pop
cmpl
stos
push
add
loopne
rclb
add
adc
stos
test
lahf
aas
jg
pop
int3
mov
or
adc
enter
aas
in
fists
out
sbb
sbbl
addr16
sbb
jns
icebp
sahf
ret
pop
sbb
shll
lahf
pop
dec
pop
jg
mov
mov
das
shll
aaa
jp
xchg
enter
mov
sahf
outsb
mov
mov
fcmovne
insb
xchg
addr16
xchg
ja
cs
lahf
pop
pop
cli
into
int
je
decb
jge
or
lcall
jl
das
lahf
aas
jg
int3
mov
mov
mov
inc
rol
mov
sti
fiadds
mov
repnz
sub
jnp
loop
ds
lret
inc
xchg
cmc
rcrl
xor
les
add
cld
sar
inc
xchg
xor
adc
pushl
lods
pop
int
sbb
jg
cld
stc
xchg
pusha
cwtl
sub
andb
push
in
scas
push
lahf
sbb
iret
lahf
aas
call
jb
push
cld
stc
repz
addr16
lods
and
int3
adcb
mov
lahf
aas
jg
shlb
push
in
iret
lahf
aad
imul
lds
add
lret
push
jg
neg
xchg
stc
repz
les
rcrb
popa
movsl
or
mov
cld
lock
adc
out
mov
addb
jae
push
iret
lahf
aas
push
push
xor
xlat
cmp
mov
shr
psubb
nop
pause
lds
es
xchg
lret
or
push
les
fucomip
pop
or
xchg
mov
lahf
mov
pushf
repnz
xchg
push
pop
jns
xchg
cmpl
cmp
imul
sbb
sahf
sbb
pop
cli
hlt
cmpb
push
imul
test
adc
mov
xor
mov
xor
mov
std
fstpl
pop
or
push
dec
arpl
mov
dec
outsl
xor
fcomps
jg
or
frstor
lret
jbe
mov
mov
insb
aaa
sti
xchg
sub
cmp
mov
leave
ss
mov
stos
faddl
dec
daa
push
mov
sub
jg
flds
loop
inc
leave
inc
loop
sub
mov
pop
xchg
lret
iret
lahf
pop
mov
shll
lahf
xlat
add
mov
ja
mov
push
cld
cld
cmp
int
out
insl
negl
push
sub
out
nop
mov
sahf
pop
dec
and
cld
stc
repz
add
sbb
push
cmpsl
loop
repnz
mov
and
ds
add
enter
push
sbbb
bts
in
hlt
or
or
inc
xchg
sbb
pop
scas
mov
jge
fidivs
pop
mov
dec
push
pop
movsb
sub
mov
pop
xchg
mov
inc
sub
lret
pop
mov
xchg
jmp
lock
repnz
cmpsl
fisubl
stc
sbb
scas
aaa
arpl
pop
push
mov
stc
repz
mov
pop
fisubrs
jmp
cltd
rcrb
iret
lahf
aas
jg
lahf
dec
pusha
and
mov
pushf
inc
mov
loop
adc
inc
jno
and
pop
jns
xchg
jp
and
int
sbb
out
sti
cwtl
xor
xchg
push
inc
mov
adc
insl
scas
jl
stos
aam
ljmp
mov
repnz
outsl
clc
xchg
dec
lods
dec
mov
xor
lods
lds
and
inc
lret
mov
loopne
loopne
mov
imull
pop
sbb
lods
ja
pop
sar
jb
xchg
js
xchg
cwtl
adc
add
jl
and
jg
test
cmovb
incb
je
inc
mov
and
scas
mov
sub
xor
lods
xchg
fstl
iret
adc
xchg
add
inc
xchg
ja
pop
xor
jmp
or
cmp
repnz
lret
adc
mov
mov
push
mov
cld
cs
ss
jg
aas
push
jmp
push
in
insb
repnz
jns
fst
fcomip
jp
mov
in
lret
das
adc
adc
cwtl
test
xchg
push
pop
and
test
dec
sbb
std
mov
inc
adc
js
xchg
push
fidivrs
mov
push
cltd
pop
in
jmp
mov
stos
cmp
jns
xchg
add
test
mov
shll
roll
and
out
cmp
push
iret
clc
mov
scas
xchg
push
pop
jns
sbb
push
sbb
inc
jp
dec
arpl
jb
lret
xor
cld
adc
cmp
out
lahf
pop
mov
pushl
icebp
addr16
mov
shr
cmp
scas
aas
jmp
out
and
rcll
sarl
cld
div
lret
lahf
sub
push
push
fucomi
leave
xor
inc
pop
cld
dec
cli
les
fs
dec
push
mov
mov
mov
orb
sbb
pop
aas
mov
jmp
dec
aaa
xchg
mov
mov
push
inc
lahf
cmp
jns
lcall
fwait
in
adc
loope
cmc
in
rcrb
sub
mov
sti
xacquire
out
xor
adc
inc
clc
hlt
sub
mov
aaa
addr16
in
fildll
push
and
test
or
jns
arpl
mov
leave
pop
push
dec
mov
xchg
xor
cmp
xchg
mov
xchg
push
push
in
loopne
imul
iret
lahf
pop
sahf
xchg
adc
xor
push
and
cmp
sbb
pause
aas
call
jb
popl
dec
inc
xchg
mov
mov
fistps
xchg
add
cld
jb
cld
lea
fisubs
push
cmc
cmp
jl
popa
lds
inc
jg
add
sbb
mov
jne
fwait
push
adc
lret
repnz
cmpsb
jns
call
mov
sarl
mov
test
out
sbb
mov
xlat
gs
xchg
stc
repz
andb
push
push
repz
fmulp
hlt
pusha
cmpsb
je
ret
cmp
mov
add
sub
push
iret
xchg
aas
mov
scas
mov
out
scas
gs
xchg
in
out
sbb
cltd
ja
push
in
and
lret
mov
or
aad
int3
xor
pop
mov
in
or
push
cli
outsb
lret
ljmp
fs
outsb
push
popf
pop
push
cmp
stc
rep
ficoms
lds
lret
jp
testl
jge
jae
scas
icebp
jns
out
jb
call
adc
jmp
inc
scas
mov
arpl
insb
fimull
outsb
mov
popl
outsb
out
sbb
mov
and
xchg
out
mov
gs
stc
repz
into
ljmp
jno
adc
or
jg
cld
mov
gs
add
sub
cmp
daa
jl
lahf
insb
add
pop
outsl
jns
and
aad
scas
cwtl
dec
mov
cmpl
jp
dec
pop
mov
std
push
ljmp
jae
or
push
je
jns
mov
xor
int
in
fs
add
in
je
mov
nop
dec
aas
iret
popf
cmpsb
mov
in
and
jae
lret
lahf
aas
out
jae
sbb
jbe
into
inc
push
scas
pop
scas
mov
iret
push
outsb
ret
adc
jg
inc
xor
jno
or
jg
adc
lret
lahf
aas
sbb
inc
and
stc
repz
mov
cmpsb
xor
jl
lods
jle
jg
cld
shll
aaa
xchg
addl
ret
aas
inc
jns
jg
stc
push
outsl
in
mov
outsl
icebp
jbe
rclb
jnp
int
clc
xchg
jns
in
mov
or
test
cmp
cmp
and
in
push
outsb
lret
sub
loope
sub
ret
mov
gs
comiss
pop
jl
aas
jg
sub
jecxz
mov
cmp
in
jecxz
popf
mov
pop
lret
cmp
stos
xor
stos
sbb
xchg
fs
ds
pop
jmp
sub
adc
in
iret
lahf
push
xchg
push
daa
arpl
jg
icebp
adc
or
lahf
popf
outsb
lahf
ss
mov
lods
or
add
or
add
sbb
out
push
into
pop
xchg
int
popf
inc
lods
mov
or
sbb
dec
jg
cld
stc
add
cwtl
sub
outsl
ja
ja
cmp
mov
movsl
das
aas
add
lea
inc
add
call
xor
mov
cli
in
repz
out
mov
push
arpl
xchg
pop
and
repnz
push
cli
test
sbb
xchg
cld
int
dec
int
repnz
mov
push
mov
out
cmp
imul
mov
pusha
mov
sbb
or
lahf
mov
lea
scas
test
repnz
mov
jg,pt
cld
sbb
into
mov
or
xchg
cmp
lods
orl
repnz
stc
add
mov
outsb
and
gs
cmp
iret
push
ficomps
xor
mov
das
xor
sbb
inc
mov
in
insb
dec
call
sbb
lahf
aas
aas
jg
test
jecxz
js
jecxz
outsl
fidivs
xor
out
pop
pop
scas
pop
jle
repnz
bnd
xchg
shlb
adc
xchg
push
jle
outsb
sar
or
test
lods
daa
pop
push
lea
push
xchg
add
out
test
adc
mov
sbb
lds
xchg
cmp
pop
repz
mov
jb
cld
stc
aad
inc
cmp
push
add
std
jl
cmpsl
loopne
or
iret
lahf
aas
ljmp
pop
jl
push
lret
and
es
push
test
mov
or
outsb
out
adc
add
mov
lret
pslld
mov
imul
sbb
jle
ret
sbb
jp
mov
mov
repz
sub
jge
cmp
into
fbld
xchg
cmpsl
inc
push
std
mov
and
out
xchg
push
fcoml
dec
scas
jg
cld
stc
xchg
sub
sbb
pop
hlt
popf
xchg
iret
lahf
aas
insb
cmp
xchg
xadd
or
push
sbb
push
stc
cld
jns
or
mov
sbb
sbb
add
enter
add
lret
mov
mov
sbb
stos
pop
scas
mov
scas
add
mov
push
mov
xchg
fucomip
addr16
xor
jle
xor
or
pop
push
fsubrp
in
idivl
pop
out
pop
into
jg
mov
mov
mov
scas
test
or
push
lea
loopne
or
adc
das
scas
mov
in
jmp
arpl
sbb
push
aas
loop
mov
mov
mov
out
lea
lods
xlat
fs
xchg
daa
pop
add
add
lea
in
lahf
jo
xor
fs
pusha
jns
andl
mov
xchg
or
pop
adc
test
fidivs
xchg
lahf
scas
pop
shlb
lret
repnz
repz
xchg
lock
jecxz
adc
adc
insl
outsl
sbb
mov
shlb
orl
adc
int
aad
stc
into
or
stc
repz
lock
fidivs
cmp
lds
rorl
inc
jg,pt
jg
mov
or
scas
mov
or
imul
cld
stc
repz
mov
mov
insb
cmovae
jg
cli
mov
stc
cld
stc
repz
out
imul
nop
xor
das
out
push
mov
in
adc
jo
repz
pop
out
sbb
test
push
movsb
xorb
dec
sub
stc
stc
or
frstor
sbb
testl
inc
sahf
pop
testl
pop
jns
ja
adc
call
clc
mov
sahf
sub
fsubl
test
jns
xchg
adc
cmpsb
and
add
xor
pop
sbb
inc
dec
lahf
fists
mov
jns
xchg
pop
mov
std
dec
ficomps
xchg
push
lods
pop
dec
std
bound
das
xchg
push
pop
jns
les
xchg
inc
idivl
xorl
bound
xchg
movsl
in
fsubrl
scas
mov
imul
iret
mov
repnz
dec
jle
and
mulb
dec
das
subb
pop
pop
out
jge
mov
xchg
das
sbb
pop
ds
jecxz
fdivs
or
xchg
pop
out
in
aas
push
push
addr16
jge
fxam
or
outsb
sbb
pusha
xchg
push
pop
jns
xchg
mov
push
lea
xchg
fs
int
das
int
xchg
fprem
repnz
add
push
negb
mov
adc
cld
dec
pop
jne
cld
xchg
push
int3
arpl
add
bound
mov
aas
xor
ja
dec
xchg
roll
stc
jnp
adc
in
in
lods
pop
jns
pop
cmp
repz
scas
pop
dec
dec
iret
pop
dec
test
sbb
pop
jmp
jle
shlb
icebp
sub
fs
jo
mov
xchg
lret
jns
xchg
xor
inc
mov
rorl
push
pop
int3
gs
in
pop
jb
loop
xor
mov
ljmp
imul
insb
pop
pop
lcall
mov
mov
mov
repnz
pop
lcall
lret
mov
xchg
iret
lahf
stos
stc
push
movsl
inc
add
sbb
subb
push
fisubrs
pusha
outsl
dec
lds
fildll
push
cmc
pop
cmpsb
daa
inc
iret
iret
inc
testb
mov
pop
sbb
int
int3
add
pusha
sbb
aas
enter
pop
lods
xor
jne
or
inc
mov
into
leave
mov
repnz
mov
xorb
pop
push
xchg
sub
cmc
mov
mov
cmp
repnz
sub
js
roll
xchg
sub
adc
push
lret
sbb
push
mov
and
sbb
gs
cvttps2pi
mov
loope
jne
loop
outsl
or
lds
mov
pushf
jns
enter
dec
jb
daa
iret
lds
mov
xchg
ja
pop
stos
jmp
push
xor
js
jg
cld
sahf
into
pop
mov
adc
adc
mov
inc
inc
repz
lahf
sub
lock
ret
mov
push
loope
loopne
mov
and
shll
jbe
inc
and
xchg
pop
dec
stc
mov
mov
lods
arpl
jge
jmp
xchg
jecxz
adc
stos
gs
cld
cmp
mov
pop
scas
dec
roll
out
scas
xchg
arpl
fisubrs
dec
aaa
ret
pushf
jle
cld
cld
stc
popf
push
dec
stos
jae
in
cmp
ds
mov
inc
bound
sbb
sbb
push
mov
jg
add
pop
jg
push
scas
mov
mov
pusha
das
out
or
adc
in
dec
pushl
sub
dec
rcr
jg
cld
stc
loop
imul
loope
mov
pop
cmp
mov
mov
repz
out
push
shll
pop
ljmp
and
jns
cld
aad
jno
xchg
dec
mov
mov
leave
pop
and
mov
das
push
lahf
xchg
mov
outsl
jecxz
les
stos
sbb
sbb
pop
aaa
sahf
xor
ja
xchg
sbb
cld
addl
popa
je
jns
sub
cmp
jge
xor
lahf
nop
inc
sub
jg
cld
dec
insb
in
cmp
xor
mov
in
lahf
jmp
mov
out
aaa
mov
pop
push
lds
sbb
out
ficompl
inc
lahf
sub
faddl
stos
pop
adc
cld
stc
sbb
in
jns
mov
shlb
cmp
insb
mov
in
aas
mov
dec
ds
std
and
xchg
lahf
aas
scas
inc
mov
loopne
dec
pushf
jg
out
lret
xchg
loope
or
mov
dec
subl
pop
bound
mov
repnz
pop
push
jecxz
push
insl
out
push
fiadds
or
lret
popf
xor
or
pop
push
sbb
mov
dec
movb
xchg
inc
out
subl
pop
add
mov
nop
mov
and
push
lds
sbb
lahf
lods
shrb
fcomps
mov
cmp
jns
jne
push
pop
adc
jmp
sub
sahf
mov
cld
stc
push
jns
cmpsb
lds
les
out
mov
cmpl
xor
mov
sbb
cld
stc
repz
pop
in
repnz
xchg
pop
cmpsl
lahf
aas
jg
and
mov
ss
fnstsw
inc
xor
push
xchg
iret
shll
in
pop
sbbb
mov
sub
ret
shl
mov
lret
js
sub
pop
ror
push
xchg
gs
shll
repnz
push
mov
enter
sbb
jle
and
fdivp
lcall
cld
stc
repz
mov
and
pop
adc
inc
sbb
in
sbb
in
jae
lds
fdivrl
add
iret
inc
mul
repz
das
out
pop
jle
xchg
mov
hlt
adc
sahf
inc
cmp
jae
movsl
sub
lret
dec
mov
sbb
sbbl
jns
dec
stc
sbb
mov
pop
sbb
shrl
xor
aas
loopne
add
sbb
sbb
daa
mov
iret
sbb
pop
sub
aad
nop
out
lods
out
sbbl
iret
popf
cmp
aam
test
jmp
outsb
cmp
fnstsw
pop
sbbb
scas
sbb
sbb
push
fdivl
sbb
sbb
cmp
or
mov
sbb
outsb
popf
sub
and
dec
jo
out
sbb
aaa
fdivr
jb
scas
sbb
aas
ss
sbb
inc
mov
cmp
sbb
mov
incl
sbb
mov
jg
mov
dec
xor
sub
inc
cs
jne
sub
push
sbb
sbb
add
cmp
jg
pop
jb
or
scas
sbb
xchg
pop
xchg
sbb
loopne
mov
sbb
sbb
push
out
lcall
cmp
sub
js
or
mov
add
dec
das
sbb
jb
add
fistps
sbbb
sbb
loope
add
sbb
sbb
pop
mov
outsl
sbb
jb
ret
sbb
loopne
test
iret
sbb
push
mov
fistps
pop
push
outsb
lods
lahf
sbb
adc
jb
sbb
sbb
mov
loopne
sbb
sbb
aam
and
sbb
cmp
aad
dec
jae
adc
das
sbb
mov
sbb
iret
sub
sub
scas
sbb
push
outsb
pop
lret
sbb
sbb
fdivs
mov
movd
fdiv
sbbb
out
mov
in
sbb
sbb
mov
mov
sbb
sbb
xchg
pop
push
pop
sbb
and
jne
sbb
sbb
mov
mov
dec
mov
add
leave
sbb
sbb
mov
nopl
popf
js
incl
outsl
sbb
mov
fildll
pop
mov
out
jo
adc
mov
or
pop
loopne
and
pop
out
es
movb
mov
in
sbb
sbb
mov
pop
dec
mov
adc
cmp
out
sbb
jb
or
scas
fdivl
pop
sbb
sbb
inc
mov
pop
sbb
scas
arpl
sbb
popl
push
jo
ret
lods
sbb
sbb
scas
fdivr
pop
sbb
sbb
shrl
pop
pop
outsb
sbb
sbb
ret
lods
out
sbb
sbb
popa
jne
sbb
outsb
rcrb
jo
mov
sbb
sbb
mov
lcall
loope
mov
mov
lods
or
jp
cmp
sbb
sbb
loopne
mov
sub
sbb
mov
pop
iret
sbb
sbb
outsb
sub
sbb
cmovae
mov
fdivrl
sbb
sbb
mov
dec
xchg
cmp
sub
out
ret
lods
or
into
jo
sbb
ds
nop
sbb
sbb
cmpsl
xor
mov
aas
cli
test
pop
cmp
aas
sbb
je
dec
outsb
sbb
sbb
adc
mov
sbb
jle
lods
repz
push
lea
sbb
pop
jo
sbb
inc
cmp
fdivrl
jmp
iret
sbb
loopne
adc
sub
cld
jne
outsl
sbb
scas
jns
test
outsb
pop
mov
cli
jb
dec
sbb
sbb
out
add
push
inc
sti
outsb
cmp
sbb
sbb
outsb
sbb
outsl
sbb
fdivrl
sbbb
sbb
push
mov
outsl
sbb
jne
push
in
sub
or
mov
add
lcall
xchg
push
faddl
cmp
jns
lods
enter
jo
or
outsl
sbb
movsl
fdivrl
mov
sbb
jo
lret
dec
sbb
je
add
push
mov
and
test
lods
das
lahf
sbb
sbbl
das
mov
loope
sbb
sbb
mov
das
mov
mov
push
jecxz
sbb
ret
lods
pop
das
sbb
xchg
pop
pop
outsb
sbb
sbb
mov
pop
sbb
mov
mov
sbb
sbb
jo
dec
dec
sbb
loopne
xchg
pop
sbb
sbb
push
mov
pop
sbb
aas
jo
dec
movsl
lahf
sbb
jae
add
pop
iret
sbb
sbb
dec
into
pop
mov
iret
sbb
mov
pop
sbb
mov
outsl
lea
outsb
sbb
sbb
pop
mov
or
ret
sub
sbb
pop
outsb
sbb
sbb
push
fdivrl
das
stc
pop
push
mov
sub
outsl
xchg
out
sbb
mov
pop
mov
mov
scas
jns
sbb
shrl
pop
pop
outsb
sbb
sbb
jo
jns
into
outsl
lock
xchg
fdivr
pop
sbb
add
sbb
lahf
aas
outsl
iret
push
jmp
cmpsb
push
lahf
testb
mull
stos
sub
inc
fcmovne
adc
cld
mov
jo
jae
jmp
stc
subb
scas
in
sub
inc
sub
jge
jle
xchg
out
jp
clc
or
lahf
aas
jg
in
fsts
negl
out
repnz
addr16
push
and
movsb
stc
repz
dec
loop
dec
outsl
adc
mov
out
pop
pop
xchg
adc
cld
jbe
stos
aad
call
dec
sti
sbb
pushf
lods
lods
std
pop
fwait
psubb
out
lods
das
scas
mov
sbb
xor
iret
mov
xor
lock
mov
aaa
cs
adc
cmpsb
jne
pop
shrb
pop
lock
sahf
icebp
lahf
hlt
repnz
push
sbb
xchg
lret
cld
adc
out
add
pop
int
adc
cs
stc
sarl
ds
sub
stc
lods
mov
rcll
mov
cld
sbb
fnstenv
test
lods
dec
dec
xor
out
adc
jo
jle
xor
hlt
jns
shl
loop
mov
mov
mov
cmp
cmpsl
insb
scas
xor
test
push
int3
jge
pop
xor
cmove
test
mov
stc
repz
and
dec
cld
mov
pushf
insl
jnp
test
adc
add
jle
lret
out
mov
add
and
or
pop
lahf
or
xchg
mov
ss
cmp
out
lret
xchg
ja
fnstenv
pop
push
lahf
shlb
xchg
lahf
add
shrb
jg
cld
stc
repnz
dec
dec
pop
pushf
jle
fwait
das
ret
aas
imulb
push
lahf
mov
hlt
mov
cli
dec
out
imul
mov
ds
xor
hlt
jne
lret
mov
inc
mov
cld
stc
mov
cmp
mov
repz
dec
mov
scas
gs
fdivrs
cld
stc
dec
out
sbb
lock
arpl
testb
lahf
aas
es
jnp
pop
aaa
je
jecxz
pop
jecxz
iret
outsb
mov
pusha
les
repz
lahf
xlat
sbb
out
leave
and
jg
cld
stc
test
inc
or
cmp
aas
xchg
inc
rep
xlat
js
xor
test
stos
and
mov
in
mov
mov
lahf
in
pusha
pop
dec
out
fsub
lret
mov
and
lret
jb
les
sub
gs
push
cmp
stos
repnz
jge
lahf
fstpl
mov
scas
mov
adc
xchg
mov
std
mov
call
jmp
mov
out
aas
dec
fimuls
dec
mov
xchg
sti
jnp
rep
jp
fmuls
icebp
pop
sbb
aas
repz
mov
dec
pop
adcb
outsb
pop
jg,pt
out
dec
adc
mov
inc
push
fmull
sbb
xchg
cmp
xor
mov
cmpsl
daa
daa
vpmaddwd
stos
or
iret
out
push
addl
jne
iret
lahf
aas
data16
ja
insb
nop
fiaddl
adc
repnz
gs
jmp
inc
or
lea
notl
out
loop
cmp
test
ficomps
pop
scas
mov
jp
addr16
shlb
iret
sbb
sbb
repnz
sub
jb
jne
xor
stc
rep
mov
push
lahf
ljmp
enter
jg
stos
pop
outsl
adc
sbb
enter
leave
out
loope
cli
push
les
fildll
scas
mov
or
add
push
sbb
out
scas
test
outsb
pop
pop
bswap
adc
imul
mov
cmp
scas
mov
aas
lcall
movl
mov
dec
stc
dec
sbb
stc
mov
mov
mov
gs
sbb
push
aad
cltd
pop
pop
std
lcall
out
fnstenv
xor
test
ljmp
jbe
mov
std
out
dec
push
filds
xchg
stos
dec
test
cmp
jo
dec
arpl
loopne
or
jno
jnp
es
pop
jns
xchg
stc
pushw
out
sub
stos
push
in
jae
in
push
or
enter
dec
add
push
rclb
sti
in
mov
xor
jge
in
fistpll
pop
out
test
xchg
int3
das
ljmp
dec
out
std
and
mov
loopne
lods
aas
dec
addr16
aas
pushl
cmc
cmp
mov
inc
jae
repz
lahf
aaa
xchg
inc
pushf
cmp
lahf
jg
cld
stc
loope
jnp
add
loop
mov
sub
lret
iret
lahf
aas
lahf
or
mov
cmpl
out
scas
cmp
mov
mov
das
xchg
mov
dec
sub
mov
mov
bound
mov
outsl
ljmp
xchg
dec
mov
mov
insw
adc
lock
jbe
lret
sub
jle
pop
xor
mov
push
inc
int3
aas
icebp
in
loopne
movsb
sub
mov
push
repnz
jg
inc
mov
out
into
pop
icebp
ljmp
in
nopl
and
push
dec
sub
popa
decl
fstpl
xchg
fstpt
repnz
out
add
dec
mov
cld
push
pop
js
mov
xchg
enter
fwait
addb
jmp
cs
cmc
in
jle
pop
movsb
test
je
fbld
mov
call
pop
sub
popl
inc
cli
repnz
xchg
imul
in
movsl
push
adc
scas
mov
mov
out
lret
mov
mov
in
in
mov
and
arpl
fucomip
sti
adc
and
jl
sbb
jg
cld
stc
insb
xchg
dec
jno
sbbb
mov
mov
pusha
mov
or
das
loop
ss
ljmp
mov
arpl
pop
jns
mov
mov
lret
das
lahf
aas
dec
iret
out
insb
xchg
dec
inc
push
cld
fxch
mov
xor
sbb
iret
lahf
aas
pushf
gs
loope
mov
jmp
vpsllq
inc
push
and
push
jle
fisttps
pop
dec
test
shl
iret
lahf
xor
lods
imul
cld
stc
lret
cmpsb
xchg
call
sbb
ja
pop
insl
mov
adc
iret
aas
mov
dec
rol
pusha
xchg
in
cld
stc
pause
xchg
mov
filds
dec
inc
push
mov
push
outsb
dec
ret
pop
mov
cld
stc
subb
pushf
xor
daa
popf
cmp
dec
mov
lahf
aas
push
jecxz
sar
adc
add
shr
into
gs
in
imul
pop
xchg
push
loop
hlt
test
fnstenv
leave
sbb
pop
xor
sbb
xlat
xor
sub
aas
xor
insl
push
cld
add
ss
out
lahf
aas
cmpsl
or
push
adc
jae
nop
js
repz
jg
push
outsb
fld
div
aas
jg
cld
sbb
lds
push
adc
out
lahf
std
in
jno
test
xor
push
ficoml
stc
sti
mov
fstpt
cmp
or
shrb
lahf
aas
mov
xor
cmp
mov
fs
lret
out
inc
repz
jbe
add
jns
add
scas
or
sbb
sub
ret
mov
dec
aas
hlt
in
pop
and
jns
das
test
mov
xor
out
out
fdivr
repz
mov
shlb
sbb
push
inc
fisubl
repnz
es
push
das
iret
lahf
aas
jg
call
or
dec
mov
pop
push
cmp
mov
pop
push
clc
bound
cmp
ret
es
aas
jg
xchg
sub
jp
sete
mov
ja
repz
sub
cmpsl
daa
mov
xlat
out
jg,pt
mov
cmp
cmc
fwait
pop
add
in
mov
icebp
das
xor
push
xchg
aas
lcall
data16
movhps
adcl
in
sub
testl
push
test
mov
lret
mov
pop
sub
push
adc
repnz
or
pop
lahf
cmpl
lahf
aas
mov
movsb
cltd
pushf
push
into
les
out
sarb
pop
sahf
dec
outsl
loopne
push
ds
in
pusha
xchg
inc
ds
jns
lret
jbe
lds
jecxz
iret
mov
lret
pushf
add
aas
fs
repnz
stc
xchg
incb
inc
subl
rorb
incl
pop
das
jg
dec
mov
mov
iret
lahf
mov
adc
inc
lcall
jl
cld
cld
stc
popa
sti
imul
xor
std
gs
stos
jb
push
out
lahf
aas
jl
jmp
mov
sbb
arpl
cld
stc
repz
es
hlt
ret
inc
xchg
leave
mov
out
shrl
aas
jg
movsb
sti
cmpsl
jle
ss
add
dec
cmp
out
lret
out
mov
mov
pop
pop
lahf
cmp
call
push
cmp
aas
in
jmp
addb
nop
dec
jge
in
nop
addr16
cmc
les
xchg
pop
inc
jle
fimuls
mov
aaa
jne
and
and
cmp
or
scas
mov
pop
jns
jmp
psadbw
imul
jg
pop
push
mov
scas
pop
popf
push
mov
lahf
sub
cld
lret
xor
push
subl
das
scas
mov
stc
jg
cwtl
pusha
das
mov
jle
repnz
fwait
cld
int3
push
lock
hlt
push
pop
jns
daa
repnz
push
fimuls
cmc
cmp
in
lret
cmpsl
addr16
jne
scas
sti
data16
mov
stos
cs
and
loopne
inc
out
fiaddl
mov
mov
xor
fcoms
fldt
sub
scas
pop
int
lahf
les
and
shrl
mov
cmpb
lcall
mov
jp
pop
sub
mov
lret
jo
sbb
jl
out
xor
xchg
jle
pop
push
fistpll
mov
jno
pop
inc
pop
rcr
loopne
ret
mov
lcall
lret
imul
das
subl
shlb
or
imul
dec
in
repz
outsb
mov
pop
mov
jno
add
clc
in
popa
and
repz
cld
stc
repz
out
fdivl
mov
aas
js
mov
jg
rcll
pop
stc
sbb
sub
addr16
inc
push
pop
je
push
nop
das
inc
clc
repnz
xor
ficomps
stc
repz
xchg
and
nop
stos
cld
stc
repz
fildl
adc
sbb
jg
call
mov
rolb
sbb
jg,pt
mov
push
inc
xor
lahf
push
xchg
repnz
mov
lahf
push
pop
jle
dec
fdiv
lret
popf
ljmp
lock
jo
xchg
push
pop
jns
add
test
or
jns
sbb
sbb
ret
mov
psrld
stc
pushf
inc
and
jns
push
iret
scas
popa
loopne
aad
push
or
rorl
cld
stc
repz
xchg
es
mov
mov
loopw
pusha
scas
xchg
rolb
or
outsb
out
xchg
or
jo
pop
cli
sti
in
cmp
xchg
jp
idiv
sbb
testl
repz
sahf
pop
aas
hlt
lret
repnz
jnp
push
aas
jg
cld
insb
adc
int
mov
fdivrp
jp
enter
in
xchg
lahf
cmpsl
ret
out
iret
pop
out
xor
pop
pop
jns
mov
inc
jnp
mov
iret
lahf
pop
outsb
in
jmp
cltd
lock
xchg
test
fsubl
iret
mov
adc
jns
in
push
mov
ficoml
and
xchg
push
pop
icebp
dec
mov
adc
push
cmp
xchg
inc
jbe
cmp
pop
iret
nop
pop
jns
fnsave
jmp
mov
push
fbstp
xor
jno
lret
sub
in
fucompp
push
repnz
call
jns
out
adc
and
cmpsb
push
mov
in
mov
jns
xchg
imull
adc
rcrb
push
mov
cmp
inc
sub
repnz
clc
jp
hlt
adc
mov
iret
lahf
aas
jg
pusha
cli
or
stos
and
repz
adc
hlt
dec
std
aaa
dec
fxtract
xor
mov
xchg
inc
add
jmp
cmpsb
xchg
aas
fs
scas
into
cld
jb
repnz
leave
sub
sub
jns
sahf
out
add
roll
jns
lret
xchg
aad
cmpsb
adc
iret
and
push
movb
enter
push
xchg
push
pop
jns
push
sub
sub
jg
rcll
push
pop
jns
mov
mov
dec
stos
add
xchg
sub
lods
mov
dec
sahf
jg
cld
stc
rorl
push
xor
xor
and
adc
cmp
lret
hlt
mov
fwait
ret
cld
stc
repz
pop
mov
mov
or
mov
lahf
aas
jg
lret
pop
insl
addl
cld
stc
repz
rclb
imulb
dec
test
rclb
jl
popf
popf
fsubrs
roll
das
movsb
xchg
pop
ds
out
mov
mov
jle
jb
cmpsl
jge
fdivrp
cld
stc
repz
mov
push
mov
addb
jg
in
dec
mov
inc
das
fnstsw
and
lret
arpl
cmpsb
mov
inc
dec
clc
into
mov
mov
mov
mov
ljmp
das
aas
mov
pop
mov
push
out
nop
or
pop
dec
setge
gs
sysenter
dec
outsb
add
ret
pop
xchg
lahf
aas
or
addr16
add
repnz
adc
cs
addr16
cmp
mov
sar
mov
scas
sbb
pop
sarb
or
sti
repz
test
sub
xchg
and
pop
xchg
fnstsw
dec
fld
jecxz
jg
mov
cmp
push
sbb
or
cwtl
cmp
lahf
imul
addr16
ds
in
mov
pop
stos
mov
cld
test
repnz
or
add
pop
movsl
push
add
mov
xor
jl
pop
jns
iret
loop
arpl
jns
outsb
lea
mul
iret
das
lods
jbe
sti
mov
aam
iret
lahf
pop
jmp
mov
in
shlb
lds
out
jge
inc
decb
js
sbb
out
lds
in
pop
enter
xor
pop
xchg
out
inc
jecxz
xchg
cs
hlt
sbb
cwtl
and
cld
adc
and
es
xor
push
decb
icebp
test
lahf
pop
or
push
hlt
push
fwait
and
mov
fists
imul
pop
pop
fs
mov
push
and
mov
repnz
xchg
ja
add
js
sub
jle
pop
xchg
xchg
jno
push
das
cmp
mov
add
sub
xor
mov
cmp
jg,pn
cld
stc
ds
pop
jo
icebp
addl
out
lahf
aas
mov
xor
jne
or
xor
out
sbb
adcl
xchg
scas
fisubrs
movsl
cmp
sub
outsl
loope
lahf
rcll
fsubl
iret
in
lret
lahf
into
xor
movsbl
dec
popa
xchg
push
pop
jns
cmp
test
dec
mov
into
push
pop
jns
aaa
movsl
fisttpll
in
push
add
cmpsl
dec
xchg
movsb
pop
jns
xchg
ss
shll
outsl
sub
or
mov
int
stc
add
jg
or
stos
push
rorb
mov
or
xor
cld
add
movsb
adc
add
mov
or
test
mov
dec
movsl
out
scas
mov
inc
inc
mov
inc
lret
gs
push
push
mov
shl
push
cs
inc
loopne
inc
movsl
xchg
popf
jle
cmpsl
mov
or
and
mov
push
cmpsl
xchg
iret
lahf
aas
sbb
or
or
out
xchg
push
dec
xchg
popa
pop
xchg
dec
loop
cltd
faddl
andb
inc
xchg
dec
push
loop
lahf
pop
or
add
pop
cmp
pop
jbe
xchg
das
dec
mov
std
out
mov
imul
mov
mov
in
mov
pop
lea
scas
jmp
xchg
xchg
in
dec
sbb
loope
aas
aas
nop
cmpsb
lahf
pop
into
lods
icebp
scas
push
mov
xchg
lahf
push
cld
jno
mov
test
xor
push
pop
jns
fldenv
lahf
rorb
cld
jge
push
push
pop
jns
ss
ja
addr16
frstor
rcrb
jmp
adc
popf
xor
ja
pop
pop
sub
insl
pop
push
incl
lret
xchg
mov
mov
xor
jae
sbb
add
aaa
push
outsl
adc
popf
shll
and
dec
cld
and
dec
out
outsb
mov
aas
into
insb
sub
fs
das
sub
sub
clc
sbb
and
loop
je
fstpl
pop
stc
add
cmp
in
aas
movsb
mov
jbe
fnstcw
out
call
sbbb
xchg
push
sub
iret
popl
pop
out
xor
popa
jecxz
cld
stc
repz
fwait
sub
push
fisttps
cmp
enter
mov
mov
ja
sbbb
in
aas
mov
in
mov
dec
cmp
out
lahf
es
bound
xchg
mov
iret
aas
hlt
nop
mov
lcall
in
lock
aad
pop
lds
je
sub
data16
xlat
out
push
add
sub
out
xchg
inc
mov
dec
push
hlt
lret
xchg
jno
test
mov
pushf
in
out
pop
xlat
cmpsl
cmpsb
out
test
sub
out
xchg
iret
mov
ljmp
incb
add
outsb
jmp
mov
xor
in
lahf
aas
ret
sub
nop
or
jecxz
jmp
shr
push
sbb
in
lahf
mov
outsb
cmp
pop
test
repnz
xchg
push
sub
or
jg
iret
das
std
and
mov
xchg
hlt
repz
lahf
mov
pop
and
divb
cli
sti
in
mov
lds
jp
pop
cld
out
add
movb
cmpsl
jo
test
call
or
xchg
ljmp
push
movl
pop
sub
pop
xchg
fwait
clc
jge
out
stc
movsw
push
mov
mov
cli
jg
jmp
lahf
sbb
aas
test
shrb
scas
adc
repz
lahf
xchg
mov
out
test
test
fidivl
dec
mov
mov
test
sub
lret
lahf
aas
test
xlat
mov
ljmp
scas
mov
pop
jmp
rclb
xchg
js
stc
repz
add
mov
popf
je
mov
xchg
adc
sbb
xchg
pop
cld
inc
adc
mov
inc
mov
das
out
pop
pop
sub
ds
push
out
pop
inc
cs
stc
inc
and
in
hlt
repnz
sub
cmp
stc
movsl
hlt
negl
mov
xor
in
out
pop
cld
or
mov
lcall
dec
bound
push
fistpl
adc
mov
xchg
out
sbb
scas
mov
xchg
leave
cmpsb
out
sti
in
icebp
aas
outsb
jae
outsb
sbbl
ljmp
out
jle
les
rcr
lcall
fs
repz
dec
and
add
das
jnp
daa
lret
jle
push
cwtl
add
jb
adc
movsl
fdivrs
scas
mov
retw
fisttpl
push
sbb
mov
lock
repnz
xchg
stc
orl
xor
shlb
push
pop
ja
fnstenv
and
aas
jg
frstor
mov
daa
sbb
inc
mov
xchg
fisttps
fmull
mov
jg
dec
sbb
lret
dec
das
xchg
out
dec
mov
and
scas
mov
loopne
inc
test
pmulhuw
sbb
shl
out
xchg
sub
jo
test
xor
lret
mov
pop
inc
xor
loope
cmp
dec
xchg
cwtl
loop
out
pop
xor
xchg
mov
scas
xchg
xchg
les
ret
daa
pop
das
scas
pop
cmp
xchg
adc
fidivrs
stc
repz
imull
ficomps
and
fmulp
mov
stc
cld
cmp
rep
sub
addps
movsb
pop
jge
aas
sti
iret
out
loopne
iret
mov
mov
cmp
in
dec
outsb
mov
insb
pop
pop
bound
cld
sbb
lock
ljmp
addl
sub
daa
mov
push
loope
outsl
call
pandn
fstpt
je
dec
loopne
lahf
add
out
daa
jecxz
jno
cld
cld
stc
adc
mov
fbstp
pop
and
repnz
aas
mov
add
mov
sbb
lret
mov
and
insl
jmp
xor
bnd
push
push
dec
sbb
xchg
filds
lahf
aas
jg
xlat
pmuludq
ljmp
lods
sub
cmp
xchg
ficomps
in
push
pop
stos
fdivl
cmpsl
lea
add
xchg
push
pop
jns
push
push
daa
ja
dec
cmp
cmp
xor
stos
xchg
push
xchg
mov
std
repnz
sbb
lock
shl
cmc
jns
lret
xchg
or
mov
dec
aas
xor
sub
jl
mov
dec
xlat
mov
lret
iret
lahf
aas
iret
pop
push
loopne
dec
bound
into
sub
fsubp
cmp
fstpt
cmpsl
xchg
mov
and
sbb
sub
push
nop
inc
xchg
lret
pop
dec
dec
push
jne
sbb
stc
stc
repz
cmpsb
pop
int3
jg
repz
sub
inc
jge
mov
push
mov
pushf
mov
lret
aas
rcr
sbb
cmp
pop
sub
jno
lods
inc
pop
call
std
sbb
scas
dec
jb
outsb
fmulp
cmp
pop
stc
repz
scas
int
add
cmp
lock
stos
repz
ja
clc
mov
sti
sar
inc
xadd
xchg
mov
xchg
jo
movsb
jns
xor
aam
jg
inc
scas
mov
mov
push
ficoml
addr16
in
sub
and
sub
or
sub
jle
rcrb
pop
das
jp
in
or
mov
jp
mov
cmp
push
mov
jmp
or
mov
repz
inc
aas
push
pop
aas
sub
test
testl
jmp
pop
stos
iret
adc
pop
bsr
or
mov
xchg
push
fisubrs
pop
cld
mov
xchg
push
fidivrs
adc
inc
jo
inc
and
test
jb
xchg
push
sahf
hlt
mov
push
adc
cld
stc
cmpsl
and
iret
xchg
and
outsb
test
cld
sub
ja
out
fs
aas
jg
mov
test
popa
popa
add
aas
mov
cmp
xchg
adc
add
aad
cld
stc
repz
mov
cmpsb
xor
rclb
jle
cmp
xchg
jle
mov
cld
out
lods
iret
lahf
aas
jg
int
xor
jmp
int
testb
roll
ret
add
sahf
jg
cld
stc
push
lea
sub
xchg
lret
in
ja
pop
cmpsl
out
inc
cmp
cmpsb
pop
addr16
in
xchg
push
pop
jns
insl
dec
lahf
sbb
gs
imul
imul
in
popf
data16
aaa
fildll
cmp
outsl
sqrtps
insb
pop
lcall
adc
mov
mov
dec
out
lahf
aas
xlat
test
jge
pushf
sbb
std
repnz
repz
std
aas
js
leave
add
add
pushl
repz
jle
aas
gs
xor
adc
jg
cld
push
xchg
jl
xor
scas
inc
bound
xchg
into
arpl
inc
das
lahf
out
mov
test
das
out
outsl
push
jmp
push
outsl
loopne
fnstcw
jg
or
push
push
add
xchg
add
pmulhw
iret
lahf
xchg
mov
stos
test
rolb
std
jb
out
jle
scas
push
mov
jle
fmul
iret
and
movhps
imul
jg
out
clc
xchg
mov
mov
icebp
lret
out
js
adc
xchg
inc
fwait
add
xchg
sub
pop
or
rolb
mov
xor
cld
push
or
mov
push
lret
lahf
aas
jg
hlt
ljmp
push
inc
rolb
enter
and
cld
push
push
fimuls
sub
aad
test
or
notl
mov
sub
mov
enter
sbb
inc
lahf
popf
cmp
ds
xor
add
cld
dec
mov
jne
fisttps
inc
jge
mov
sbb
std
pop
sub
and
mov
fwait
sub
inc
sahf
insb
test
out
sbb
out
or
jb
or
mov
or
xchg
sub
fucomip
stos
jle
cld
cld
stc
dec
aad
mov
popf
mov
pop
pop
sbb
test
cld
stc
mov
out
ret
adc
mov
cmpsl
push
add
stc
loopne
js
jl
aas
inc
adc
iret
mov
in
mov
push
or
cmp
mov
push
xor
testb
cld
xchg
jg
mov
mov
sub
outsb
cmp
aam
cmp
cld
pop
jbe
scas
mov
inc
idivl
and
xchg
fcoml
out
sbbb
test
sbb
mov
jle
pushw
dec
pushf
das
std
add
outsl
mov
ret
shrb
repz
push
pop
inc
push
cmpl
mov
sbb
xlat
je
rcrl
and
stc
scas
cld
and
mov
pop
pop
enter
jo
insl
jl
test
addr16
cwtl
jl
je
lret
mov
sub
or
lret
into
mov
lds
inc
and
mov
mov
jno
push
push
mov
jg
ds
jno
push
jle
jle
cmpsl
cmp
mov
iret
in
inc
daa
mov
add
leave
sub
notl
ret
jl
cld
stc
insb
sub
pop
xor
ja
jp
ret
adc
lret
xchg
ja
dec
clc
ror
pop
test
sbb
nop
lock
xor
fdivrp
push
push
or
push
std
outsb
or
and
dec
push
pop
pop
jno
insl
cmpxchg
xchg
mov
je
out
pop
xchg
push
cmpsl
mov
dec
pop
or
dec
divb
outsl
pop
jns
xchg
jae
cmc
je
or
mov
test
sbb
mov
jg
and
out
cmp
xor
xchg
lahf
aas
mov
push
adc
jp
cld
dec
jle
stc
jg
and
cs
cld
stc
andl
shll
daa
addl
sbb
lret
mov
mov
leave
je
dec
lret
and
clc
in
fstpl
pop
mov
lods
je
pop
pop
mov
dec
xchg
cs
nop
movsl
into
sbb
lcall
das
scas
mov
rcll
fisttpl
lcall
push
sub
lret
mov
sbb
outsl
daa
mov
xor
pop
jns,pt
orl
repz
movsb
scas
repnz
mov
mov
mov
stc
or
fsubrs
jle
mov
das
push
add
xlat
imul
adc
xor
inc
ds
push
jp
pop
jns
xchg
imul
arpl
or
pop
imul
jle
stos
inc
mov
aas
jg
cltd
das
mov
std
jg
lret
scas
outsb
jl
pop
xchg
lock
cs
adc
das
cld
adc
fdivp
shl
lahf
aas
jg
push
sahf
fldcw
movl
out
scas
cmp
add
movsl
adc
fdivr
or
push
repnz
cs
push
repnz
into
fstpl
cli
pop
lcall
das
sub
mov
lds
add
or
jl
lret
sub
pop
pop
xor
pop
rcrl
stos
inc
jo
loopne
cs
cmp
repz
dec
cmp
orb
lahf
cmpl
mov
shrl
mov
addb
and
aas
add
sahf
dec
adc
push
loope
out
in
fidivl
repz
mov
add
jp
mov
or
cmp
push
mov
add
lods
arpl
and
lds
mov
and
test
jg
loopne
add
jl
lock
stc
out
jo
adc
add
repnz
mov
jecxz
sub
repz
lret
pop
jp
into
jl
mov
daa
dec
adc
xchg
incb
mov
cld
stc
lahf
orb
xlat
outsl
jae
ljmp
push
dec
inc
lret
mov
repz
andb
arpl
test
aam
aas
jg
mov
out
mov
icebp
adc
adc
mov
sbbl
repz
sub
into
jg
cld
stc
testb
or
push
fdivl
cmpsl
ret
aaa
lods
iret
and
lahf
aas
outsl
pop
in
jo
inc
dec
or
dec
lods
andb
jp
push
bound
out
jle
dec
ret
or
xor
lret
mov
ficoml
sub
popa
mov
into
popa
enter
dec
mov
das
cld
mov
fisttpll
sbb
arpl
sub
idiv
repnz
cmp
dec
insb
int3
aas
iret
int
push
sub
aas
inc
pop
pop
add
ror
sbb
out
lahf
aaa
mov
and
aad
jb
xchg
xchg
jo
test
dec
pop
incb
andl
or
cld
stc
xchg
into
xchg
adc
in
xor
adc
jg
pusha
pop
dec
mov
test
out
lahf
mov
cmpsb
mov
cld
stc
sbb
sbb
add
mov
mov
lret
ror
das
xchg
mov
repnz
push
jae
insb
sub
mov
inc
fs
repnz
fbld
xor
inc
cmpsb
cmp
sub
adc
sub
push
pop
outsb
shrl
enter
js
mov
stos
jmp
out
pop
and
stc
repz
or
mov
rcl
xor
adc
repnz
iret
insl
adc
jne
jmp
stc
mov
adc
fs
enter
mov
adc
pop
lds
aaa
lea
lahf
shlb
lahf
aas
add
cld
jecxz
lods
cmpsl
je
lock
ficomps
shlb
stc
mov
popf
out
dec
ret
outsb
insb
sahf
outsl
cmp
jg
jp
ss
imul
fwait
push
repz
repz
popa
push
dec
push
in
pushf
pop
stos
xor
leave
scas
icebp
add
mov
cmpsl
sbb
push
repz
imul
shlb
sbb
fdivrp
jnp
cmpsl
es
pop
outsl
cmp
es
das
aaa
pop
ficoms
mov
push
jno
adc
jmp
stos
jg
adc
push
pop
jns
lret
stc
nop
xlat
xlat
in
mov
out
push
xchg
push
dec
fs
push
xor
fildll
in
push
pop
jge
pushf
add
sbbl
mov
xchg
push
pop
jns
movsl
outsl
mov
int
jecxz
adc
jns
filds
call
les
inc
jne
in
mov
lods
add
lock
jnp
and
outsb
std
out
pop
lret
sti
jns
mov
mov
push
decl
sub
aam
movsl
push
mov
fisttpll
cs
repz
aaa
movb
sbb
hlt
pop
das
ds
push
jo
out
pop
xor
aas
out
hlt
mov
push
xchg
sub
repnz
repz
dec
xor
sub
out
icebp
sbb
cli
in
or
or
out
adcb
out
lret
sbb
cmp
imul
dec
mov
aad
aad
mov
aas
ljmp
sbb
cmpsl
repz
lahf
dec
push
cmpsb
dec
test
repnz
imul
mov
test
mov
sub
popl
repz
std
jecxz
mov
jno
clc
addr16
mov
add
addl
fistps
in
mov
adc
mov
fadds
jg
and
pop
jae
pop
sub
ds
repz
lahf
stos
popl
rorb
sbb
pop
cld
stc
sbb
loopne
mov
lret
xchg
das
out
aas
xor
xchg
jecxz
call
pop
jns
test
addr16
mov
lcall
das
push
jbe
sti
cmpsb
push
jge
and
in
in
dec
add
ljmp
push
sarl
xchg
ja
and
cmp
push
daa
ret
data16
or
loop
jle
mov
fisubs
iret
lahf
aas
cld
outsl
shll
lret
imul
stc
repz
cmp
jg
mov
and
dec
pop
xchg
les
lahf
aas
jg
jbe
mov
movsb
or
dec
and
repnz
push
movsb
sub
and
lret
mov
mov
fdiv
cs
lods
lret
enter
pop
mov
repnz
sub
jns
push
imul
pop
js
in
test
jne
cld
in
lret
dec
lds
aad
popf
push
sbb
sti
push
jge
out
mov
push
iret
lock
cmp
les
xchg
sti
push
stc
cld
stc
sbb
push
stc
adc
jle
aad
out
mov
jl
sbb
jge
add
or
push
pop
sahf
das
xor
stos
pop
scas
sbbl
out
movsl
sub
dec
nop
in
ds
jne
stc
insl
outsl
xor
pop
shr
aam
mov
pop
pusha
int3
xor
out
jle
repnz
outsl
xchg
xchg
adc
jg
test
mov
test
repz
fisubrs
dec
mov
push
in
sub
inc
popa
std
xor
mull
nop
popa
iret
and
loopne
jl
mov
aas
xor
sbb
movsb
das
lret
cld
out
pusha
movsl
mov
iret
sarl
push
into
outsb
cld
push
inc
cmp
inc
repnz
test
imul
or
scas
mov
cmpsl
pop
fxch
scas
sbb
popa
sub
popf
aas
js
mov
push
mov
mov
and
es
ds
jle
aaa
jmp
iret
xchg
sbb
das
fstps
mov
psubsw
cmp
in
xor
add
xchg
sarb
das
jg
sahf
pop
pop
daa
xor
outsl
xor
outsl
js
fwait
bound
test
fs
out
stc
repz
mov
mov
cmp
cld
ret
cli
ljmp
cs
outsb
stc
repz
lahf
movsl
mov
lea
sub
rol
cld
mov
lcall
pop
pushf
aam
jecxz
jg
add
mov
inc
lock
lahf
inc
push
xchg
inc
sbb
jle
sti
in
rorb
repz
jmp
lods
jns
lret
lahf
arpl
es
fstl
or
adc
aas
jg
icebp
fs
ss
sub
jo
mov
xchg
les
xchg
out
pop
fsubrs
leave
inc
jle
mov
lret
out
add
fcmovnu
call
pop
cld
stc
aas
lahf
inc
repnz
movsl
jge
jnp
xlat
mov
sbb
iret
or
ret
aaa
jecxz
jp
fidivrs
xchg
push
xchg
xorl
cmp
ja
fnstcw
loop
iret
or
dec
cmpsb
jae
pop
sub
mov
imul
adc
pop
jmp
cmovs
lea
adc
pop
cli
jecxz
cmp
into
mov
out
scas
test
sub
jl
cmp
mov
jb
mov
loopne
sbb
sbb
mov
lea
push
cld
sbb
in
movsl
xchg
adc
cmpsb
in
jno
lahf
aas
jg
mov
rep
jne
mov
addr16
adc
sub
sar
or
cld
stc
repz
arpl
arpl
lret
leave
push
clc
gs
lahf
aas
jg
rolb
std
das
aad
enter
out
inc
push
push
xchg
in
inc
mov
mov
repnz
mov
movsl
insl
push
cli
inc
in
sub
add
sub
fldcw
scas
mov
lsl
cmp
cwtl
cmp
bound
jmp
jle
fwait
sbb
inc
test
or
pop
jg,pt
ds
movsb
cmp
pop
xchg
push
mov
push
daa
gs
shrb
in
add
scas
leave
scas
test
mov
add
out
pop
incb
and
out
outsl
cli
add
jns
das
jg
mov
sub
fdiv
lret
ja
sbb
data16
push
mov
imul
lret
lahf
aas
out
stos
popl
into
pop
mov
fwait
dec
dec
pop
mov
adc
mov
scas
mov
push
test
mov
push
add
xchg
mov
lock
or
cld
nop
cli
repnz
jp
push
or
mov
inc
mov
sahf
lods
stos
xchg
outsl
xlat
les
sbb
das
ja
cmp
and
jg
cld
mov
int
sti
sbb
or
in
iret
lahf
dec
jno
lcall
xor
push
pop
jns
cmpsl
cmpsb
popl
int3
incl
jg
js
jns
xchg
xchg
stos
out
out
aas
push
lock
sahf
lahf
aas
adc
subb
add
xchg
adc
jg
fnstsw
das
mov
adc
lret
dec
sub
lds
sbbl
aas
and
ret
das
mov
mov
push
out
orl
pushf
dec
add
sub
mov
iretw
lahf
pop
push
cs
mov
stos
cs
stc
repz
mov
cs
jg
jle
aas
jg
sbb
out
add
imul
jg
test
jb
pop
or
xchg
in
xchg
lahf
mov
lods
mov
fs
or
inc
ljmp
orl
xchg
adc
repnz
outsb
mov
gs
daa
cmp
cld
push
in
jle
or
cltd
add
test
mov
outsl
lcall
out
scas
mov
lahf
lods
out
push
jl
mov
fisubrl
fdivrs
mov
stos
imul
cmpsb
repnz
xchg
sub
lds
nop
xchg
and
sub
jbe
int3
mov
push
scas
mov
pop
lock
insb
mov
jge
insb
jmp
sub
jmp
arpl
jns
sub
pusha
mov
inc
pop
pop
mov
and
out
pop
push
fwait
loope
iret
lahf
lcall
mov
das
in
push
fisubrs
xchg
add
fwait
xchg
inc
lcall
rorb
mov
imul
pop
jns
sub
inc
shr
or
lods
scas
movnti
out
imul
jmp
or
scas
jo
aad
std
jb
inc
outsb
int3
or
add
movsl
xchg
pop
icebp
push
cmp
push
cmpsl
adc
mov
std
jb
or
xchg
dec
sub
pop
inc
shlb
jne
lret
xchg
push
mov
mov
inc
lahf
call
outsb
jg
dec
popl
test
fsubl
xchg
jmp
dec
jmp
jae
inc
test
pop
icebp
lret
pop
test
imul
int
idivl
jg
cld
cmp
mov
and
add
inc
jg
test
inc
push
xchg
add
iret
lahf
aas
and
jl
in
movntq
mov
sbb
xchg
or
jnp
std
xor
mov
aas
jg
ss
popl
xchg
push
pop
jns
fstl
in
cmpsl
push
in
cmpl
xchg
jle
and
lahf
and
xchg
iret
sti
stos
cmc
test
mov
xor
mov
sub
xchg
adc
dec
sub
dec
shlb
repz
jecxz
xchg
jmp
je
jge
cmp
aaa
adc
dec
dec
jb
fisttps
in
repnz
pop
mov
daa
mov
push
fdivrp
jle
daa
xlat
pop
inc
push
pop
cltd
xor
gs
rcrl
jns
fldl
push
inc
cmp
pop
ret
pop
push
inc
popa
lret
lahf
jg
outsb
push
stos
sub
shrb
lods
in
cwtl
inc
push
test
sbb
into
fildll
lock
jmp
xchg
pop
jne
mov
lret
lock
fisubrs
xor
scas
mov
add
mov
mov
lods
jbe
pop
stos
xchg
popa
mov
add
repz
lahf
rcll
test
cld
dec
lds
jg
cld
stc
add
adc
pop
in
cmp
cmp
lret
lahf
aas
subb
roll
xchg
lret
scas
lret
mov
aas
add
aad
jbe
fstpl
mov
into
add
fistpll
jne
fucomi
push
xor
mov
js
aas
adc
mov
jp,pt
push
hlt
repnz
rcl
loop
repz
cmp
xor
shll
fstps
xchg
push
push
mov
jg
cmc
ja
jno
ljmp
popl
inc
cmpb
rcll
jnp
sub
aad
pop
out
mov
iret
and
ljmp
pop
scas
mov
test
push
mov
sti
repnz
pop
hlt
leave
imul
out
jae
js
dec
rcll
out
ljmp
mov
ret
pop
pop
cli
sbb
sub
add
and
pop
repz
mov
pop
push
mov
cltd
repnz
mov
leave
cmp
iret
mov
add
dec
mov
add
rcll
jmp
stos
jecxz
push
scas
enter
rorb
mov
out
stos
xchg
push
aas
dec
xchg
dec
les
pop
jns
adc
ja
cmp
sbbb
xor
mov
es
call
xchg
icebp
adcl
div
sub
pop
in
repz
lahf
dec
lahf
mov
inc
mov
js
inc
xorb
lret
jle
mov
lcall
cld
stc
add
mov
nop
in
fstps
adc
cmp
ret
filds
cli
data16
mov
das
shrb
jno
xchg
mov
test
lret
test
dec
cld
inc
clc
sti
cs
cmp
pop
mov
push
fcompl
inc
mov
and
jae
mov
shrb
pop
or
cs
loope
fsin
cld
stc
repz
lock
in
sbb
aas
jg
xor
mov
push
daa
ss
mul
out
jae
outsb
mov
js
sub
pop
ror
cmc
nop
inc
mov
add
enter
aas
jg
pop
cmpsl
mov
jg
mov
repz
and
lahf
movsl
xchg
lret
sbb
pop
sbb
das
scas
mov
dec
dec
xor
add
lods
out
jno
icebp
cwtl
out
and
dec
ret
mov
fs
adc
movsb
mov
in
gs
xor
repnz
ds
stc
repz
scas
cs
mov
scas
cmp
push
xchg
popl
cmpl
jl
insl
loope
scas
pop
dec
stos
aad
xchg
je
dec
loope
sahf
mov
and
mov
repnz
aas
hlt
imul
xchg
jmp
push
lret
mov
movsl
inc
sbb
xchg
in
add
or
in
inc
loop
movntq
mov
xchg
inc
ret
mov
test
imul
test
ds
jne
scas
mov
fcompl
xchg
xchg
jge
or
in
jl
xchg
sub
push
xor
pop
xor
cli
push
sbb
mov
leave
iret
lahf
aas
or
in
jo
cmpsl
pop
lcall
mov
push
mov
test
lahf
sub
aam
sahf
cmp
aas
pop
mov
stc
repz
push
daa
scas
test
jg
adc
pop
jle
jne
js
imul
fucomp
mov
inc
cmpsb
xchg
je
adcl
hlt
div
pop
lahf
jno
xchg
je
mov
repz
mov
xor
cwtl
rcl
xchg
out
shr
mov
into
dec
out
arpl
mov
stc
subl
or
mov
insl
mov
cmpsb
cmp
lahf
cmp
std
or
negl
mov
mov
lea
fcmovne
inc
inc
pop
jnp
sub
cld
stc
sub
addr16
cli
sbb
jl
jb
pop
jle
mov
ds
jle
popf
movsb
cmpsb
lock
jo
mov
icebp
xlat
rol
iret
maxps
orb
ds
mov
fnstcw
mov
pavgb
arpl
add
push
es
movb
jns
lcall
mov
sbb
in
xchg
mov
cmp
decl
push
xor
xchg
push
add
inc
jbe
pop
test
pop
push
or
ljmp
cmc
adc
and
xchg
out
enter
cwtl
insb
and
jg
mov
push
shlb
mov
mov
iret
dec
and
push
xor
mov
arpl
xchg
lahf
js
cs
lahf
jg
hlt
xchg
loop
nop
mov
fs
cld
stc
repz
scas
lods
sbb
in
daa
and
inc
push
jle
dec
dec
mov
nop
pop
fisubs
mov
xlat
adc
jbe
dec
sub
ret
aam
sub
cmp
mov
aas
sub
mov
cmp
aas
xchg
in
sbb
jecxz
xor
jg
and
cld
enter
out
imul
adc
sti
mov
fisubrs
out
mov
cmp
adc
dec
push
jnp
outsl
pop
mov
xlat
les
bound
add
jo
pop
sbb
ja
cli
iret
movsl
jmp
lret
out
mov
mov
bndcl
test
insl
jp
sbb
sbb
stc
cld
stc
call
insl
fcmovnu
xor
testb
data16
aaa
aad
dec
fistpll
jecxz
stc
daa
or
and
push
dec
mov
inc
jle
cld
stos
mov
lock
call
adc
lahf
aas
or
inc
xchg
adc
and
lds
out
stos
fisubrs
stc
xchg
aad
or
dec
mov
ss
push
fidivrs
jne
pop
pop
sahf
imul
sbb
shrb
outsb
and
scas
add
cmp
pop
and
fmull
out
push
pushf
mov
dec
lods
inc
rorb
scas
in
jl
jmp
xor
rcll
mov
leave
lahf
aas
ljmp
loope
add
aas
call
xchg
out
pop
and
pop
sbb
loopne
and
bound
lea
dec
push
and
and
push
cld
stc
add
iret
push
mov
dec
or
jl
pusha
jmp
pop
and
ja
dec
fdivr
or
out
xor
jle
mov
inc
pop
xchg
lock
lahf
cs
ja
in
sarb
mov
cs
mov
pushf
xor
jmp
lret
es
shll
test
data16
cld
sbbl
mov
out
aam
cmp
and
clc
call
fisttps
jo
sub
cmp
mov
popa
push
dec
outsl
pop
jg
and
mov
sti
push
inc
es
out
lahf
aas
xlat
mov
jo
xor
cld
stc
repz
jnp
test
jmp
pop
cmp
lahf
aas
jg
add
xchg
neg
popf
cmp
xchg
fcoms
mov
out
out
and
or
pusha
daa
daa
inc
je
rorb
xchg
pop
outsb
aad
jb
xor
les
or
jp
mov
adc
xchg
pop
push
cwtl
or
dec
loope
jne
pop
jo
pop
pushf
jno
das
push
fidivrs
jno
adc
pop
in
mov
and
ljmp
sbb
cmpsl
cmc
cmp
jbe
test
stc
mov
fisttpl
pop
je
andnps
mov
cld
pusha
mov
sbb
sbb
inc
add
scas
jl
scas
iret
jg
dec
adc
cmp
dec
loopne
iret
lahf
mov
fmull
or
lahf
jg
ret
subl
lds
stos
fcomps
out
mov
inc
fsubp
cmp
jbe
add
mov
lret
jg
lret
ret
or
lcall
lods
fildll
inc
fldcw
out
xchg
jp
movsb
mulb
fstps
mov
mov
rorb
stc
xor
lahf
dec
sbb
xchg
xchg
stc
repz
aad
or
mov
push
and
repnz
insb
popl
sbb
push
ss
ficoms
adc
add
mov
outsb
mov
dec
xorl
sarb
adc
mov
std
inc
cmp
and
xchg
jno
test
fstpt
repz
jmp
jnp
je
push
scas
adcb
popa
pop
jns
in
pop
icebp
dec
iret
jmp
test
jle
mov
push
stos
enter
jnp
mov
xchg
push
pop
clc
movsb
ficoml
mov
cmpsb
jg
int
cmp
loopne
movsb
jae
iret
pusha
mov
push
fs
ret
dec
or
repz
or
xchg
mov
cmp
stc
pop
xchg
roll
gs
pop
jg,pt
xchg
pop
shlb
jmp
pop
rcr
lds
sub
lret
mov
inc
arpl
dec
cld
cld
stc
repz
or
mov
mov
das
mov
sahf
mov
dec
fld1
clc
jle
mov
push
mov
add
sahf
aas
ficomps
mov
das
aas
iret
es
push
jle
push
enter
pop
scas
xor
rolb
incl
add
clc
sub
stc
or
movsb
ret
mull
dec
imul
mov
mov
add
fbstp
lahf
and
scas
push
fidivrs
fbstp
mov
sbb
mov
icebp
sbb
js
in
rorb
loope
sub
dec
into
out
test
test
dec
stc
dec
cld
jb
insl
xor
jns
adc
lock
dec
xor
push
pop
lock
pop
cmp
sbb
lcall
jns
ret
lods
sub
jg
mov
stc
test
addr16
pop
repnz
and
inc
ds
das
and
dec
cmp
outsb
mov
cs
cld
inc
mov
cmp
fstps
repnz
lds
in
mov
pop
aas
loopne
adc
xor
out
lahf
shll
inc
popf
ds
push
mov
test
arpl
shll
pushf
add
ja
inc
das
and
fistps
aas
pop
or
jl
in
ljmp
push
out
out
mov
add
rcll
and
pop
out
dec
xor
cmp
repnz
xor
outsl
xchg
xor
adc
sub
jp
mulb
mov
sbb
inc
lret
ret
cli
jb
popf
pusha
pop
jmp
into
outsl
or
std
dec
scas
and
sbb
add
pop
add
cmp
sub
sub
loope
pusha
inc
mov
lods
mov
adc
mov
cmp
out
pushf
out
mov
cmp
scas
sub
mov
stc
adc
out
adc
stos
add
cmpsb
aas
fcoml
stc
repz
scas
mov
scas
mov
pop
adc
shrb
pop
sbb
lret
pop
add
or
push
rep
je
iret
add
push
roll
push
icebp
in
nop
and
and
xchg
mov
pop
lock
out
mov
jl
and
dec
pusha
rcrb
cld
stc
push
add
scas
cmp
inc
push
add
repz
mov
mov
imul
mov
popf
in
jg
inc
in
adc
xchg
jle
add
dec
add
pushl
test
fstpt
mov
lock
ret
test
ror
xorl
adc
mov
adc
ja
or
lahf
mov
dec
cld
sarl
out
fsubr
lret
pop
fldt
sub
mov
dec
scas
dec
xchg
xlat
and
ret
adc
pushl
iret
add
aas
adc
sub
test
lea
in
dec
incl
loop
mov
push
into
popf
imul
aas
movq
mov
adc
in
mov
push
rolb
and
enter
lahf
aas
jg
ds
or
lret
mov
out
aam
inc
push
sbb
inc
movsb
jnp
lret
shlb
inc
aas
cld
cwtl
cli
into
bound
leave
js
mov
jg
sbb
pop
and
out
fistpl
pop
dec
popa
xor
test
mov
pop
in
leave
jmp
push
icebp
addr16
push
shlb
pop
pop
decb
cmpsb
sahf
jl
das
mov
and
mov
jp
adc
mov
rep
call
bound
mov
jns
mov
lock
cmp
repz
decb
xchg
add
imul
add
xchg
das
pop
jle
cmp
jnp
mov
insl
lea
aas
xor
imulb
pop
orl
ds
dec
movsl
xor
cld
xchg
cmp
sbb
inc
addr16
and
xchg
or
movsl
jg
push
xchg
jne
add
xchg
iret
mov
jl
jge
add
mov
clc
or
xor
enter
incl
push
cmpsb
inc
and
repz
lret
adc
fldenv
jbe
mov
std
mov
nop
sub
jg
mov
sbb
mov
mov
pop
enter
cmp
dec
loopne
mov
sahf
ds
cld
dec
out
lods
fimuls
adc
jle
mov
lahf
lret
filds
sahf
scas
sbbl
daa
clc
das
out
lahf
pop
lcall
jle
cmp
push
out
dec
int3
adc
iret
jl
push
pop
js
stc
cwtl
fs
addr16
lea
pop
dec
std
mov
mov
pop
enter
cld
jb,pn
loopne
and
cmpsb
dec
jno
mov
and
and
shll
sbb
jg
xchg
cmc
jnp
mov
leave
out
nop
xchg
pop
mov
xchg
pop
in
stc
repz
jmp
fwait
mov
jge
lock
pusha
stc
cld
add
mov
mov
lahf
aas
aas
and
outsb
insb
mov
push
xor
sarb
test
inc
les
cmpsb
jo
xchg
sub
pop
rclb
jmp
pmaxsw
pop
shrb
mov
sub
push
dec
xor
out
jno
sbb
out
lret
repz
aas
inc
xor
xorb
lods
ljmp
sub
test
fcomps
xchg
sub
mov
dec
stc
mov
out
mov
pop
pop
add
scas
or
fcompl
sub
sub
adc
mov
into
out
je
dec
lret
push
ret
leave
mov
js
repz
push
fbld
jmp
std
stc
repz
ja
das
adc
out
xchg
cld
jl
fdiv
cld
aas
pop
mov
and
sub
push
mov
repnz
loopne
mov
push
and
fwait
clc
inc
inc
ret
xor
adc
lahf
aas
jg
push
iret
jae
xor
out
shr
mov
push
ds
loopne
icebp
mov
sbb
outsl
leave
aas
jg
cld
pushf
cmp
pop
cmp
lods
sarl
add
out
lahf
dec
aaa
inc
push
jae
ffree
pop
loope
mov
stc
cwtl
sbb
add
sbb
loopne
sbbl
fidivrl
fcomi
jns
jb
sub
inc
leave
jb
mov
ret
jb
movsl
jb
jnp
leave
je
xchg
xchg
jp
jp
out
jb
jle
or
sub
jg
xchg
and
stos
push
aaa
pop
push
pushf
pop
pop
xor
cld
stc
repz
lds
xchg
lods
cs
aam
sarl
mov
fs
sbb
into
cmpsb
outsb
ss
ror
aas
sub
xchg
divl
mov
jle
mov
push
pop
stos
cmp
cmp
cmp
xchg
cmp
cmp
pop
bound
cmp
cmp
pop
adc
pop
cmp
lahf
cmp
mov
out
pop
add
into
decl
lods
pushf
mov
xor
sub
into
shrb
dec
jecxz
cmp
fmulp
add
cmp
cmp
add
imul
sbb
cmp
ljmp
push
stos
mov
aas
cmp
cmp
mov
adc
scas
cmp
ljmp
jmp
mov
and
orl
pop
pop
aad
sbb
or
adc
pop
pop
lahf
jle
adc
lds
iret
lahf
aas
jg
or
mov
or
out
ljmp
test
lods
lcall
ja
fidivrs
cli
mov
rcrb
iret
cmpsb
mov
das
cmc
jo
sbb
je
rcl
test
out
mov
jecxz
fidivrs
mov
lahf
aas
jg
mov
aaa
pop
push
jmp
mov
in
inc
xchg
pushf
push
gs
add
aam
and
iret
lahf
aas
pop
cmp
mov
push
xchg
cld
stc
repz
clc
fcoml
popa
es
or
mov
add
jecxz
sub
pop
cli
mov
xchg
mov
out
or
iret
lahf
les
popl
mov
xor
std
jb
insb
add
fs
jo
fs
xchg
xchg
ja
xor
jg
pop
movsb
inc
dec
jl
in
call
pop
xor
xor
mov
cld
stc
mov
xchg
jb
jg
cmp
cmp
scas
sbb
cmp
sub
iret
and
jnp
push
in
jg
jg
sub
ds
cmp
mul
iret
lahf
aas
fnstenv
fisubrl
xchg
sarb
stc
stc
repz
xchg
hlt
jne
notl
div
out
sahf
insl
int
call
mov
push
pop
pop
jns
add
div
jae
pushf
pop
mov
mov
mov
test
mov
push
repnz
mov
dec
sbb
int3
das
cmp
push
sub
cmp
into
pushl
mov
stc
sbb
jae,pn
mov
xchg
repnz
lret
femms
icebp
xlat
mov
scas
lods
rcll
stc
cld
xchg
cli
ret
into
mov
les
mov
lds
sbb
push
dec
inc
pusha
cmp
ja
adc
add
movsl
jns
xchg
jp
mov
mov
push
fnstcw
inc
cs
dec
repnz
xchg
xchg
mov
test
fidivs
lahf
pop
xchg
clc
stos
add
out
mov
pop
rclb
popf
inc
push
jle
pop
add
and
jecxz
pop
lods
sbb
aas
movsl
stos
dec
dec
mov
jg
mov
and
jg
or
or
pop
lock
jg
sub
lock
mov
sahf
mov
push
mov
insb
jo
pop
mov
arpl
orl
popf
xor
jae
ss
cld
ds
mov
das
lods
dec
adc
mov
iret
sbb
outsl
mov
into
fiadds
dec
das
inc
sbb
test
mov
int3
or
iret
jle
pushf
in
inc
out
mov
je
mov
ret
into
cmp
pushf
push
ficomps
outsl
inc
inc
loope
jnp
outsb
pop
jns
xchg
out
outsl
cmp
divl
or
scas
imul
adc
lods
pop
inc
sarb
mov
pop
int3
gs
in
inc
mov
inc
jg,pt
cltd
mov
jns
mov
mov
mov
and
scas
and
pop
popf
cmp
xchg
ds
mov
ret
xchg
jg
movsl
push
dec
das
adc
repz
pushf
nop
adcl
mov
jge
cmp
outsl
xor
mov
stc
in
mov
xchg
test
jbe
jecxz
in
push
fidivrs
cmp
pop
and
sub
pop
mov
data16
sahf
or
ret
pop
in
ja
iret
mov
pop
jne
leave
pusha
push
xchg
push
pop
jns
sti
push
inc
es
xlat
mov
push
pop
jns
jo
xor
push
jnp
test
jmp
in
and
cmp
add
xchg
neg
adc
xchg
push
popf
cmp
and
mov
dec
popf
lahf
push
pop
jns
adc
shll
or
scas
hlt
lret
xchg
inc
js
dec
add
mov
fsubp
xchg
iret
dec
fsub
dec
mov
test
in
add
push
movl
lea
loopne
sbb
aas
in
iret
scas
addr16
fs
dec
bound
inc
lahf
pop
out
dec
dec
push
jg
int3
mov
xchg
sbbb
outsl
lahf
pop
fsubs
xchg
test
mov
sub
mov
pop
jbe
inc
push
sbb
xor
clc
loop
jmp
push
lahf
and
fs
pop
ljmp
aad
test
stos
stos
push
inc
xchg
aas
jg
repz
cli
out
loope
push
push
mov
xor
fs
adc
js
outsl
push
xchg
daa
pop
jle
inc
in
sbb
cltd
out
push
out
repnz
mov
aam
mov
sbb
and
test
mov
push
mov
mov
pop
loop
scas
dec
out
jo
sub
les
in
mov
add
stc
repz
icebp
xchg
mov
mov
cmp
cld
xor
push
fldcw
into
paddd
mov
cld
stc
add
mov
cmpl
pop
mov
iret
lahf
aas
arpl
adc
push
or
aaa
lcall
mov
fstl
xchg
pop
shll
xchg
pop
popa
dec
sahf
ret
push
aas
aas
cmpb
xchg
movsb
out
fidivrl
lret
cmp
sti
sti
in
xchg
lahf
ds
xor
inc
leave
das
cli
sti
or
pop
inc
jl
shlb
mov
outsb
xor
cltd
pop
and
popa
mov
cwtl
jl
stc
and
push
mov
adc
mov
iret
das
insl
cs
loope
adc
mov
pop
repnz
sar
stos
add
jo
in
out
push
mov
mov
movsb
and
outsl
icebp
xlat
bswap
and
bound
and
bound
sbb
jb
mov
xlat
and
push
fistpll
enter
out
outsb
xchg
xchg
pop
jl
mov
sarb
sub
sub
mov
sbb
sahf
les
dec
push
pusha
sbb
jg
sar
jl
sar
in
jle
nop
mov
add
das
add
into
das
loop
xchg
mov
add
ds
subb
pop
mov
stos
cmc
aas
dec
adc
scas
mov
mov
inc
mov
mov
sbb
mov
icebp
fsubrl
movsb
mov
lahf
outsl
popf
add
out
mov
and
inc
jle
out
xchg
adc
lret
insl
xor
or
daa
lock
and
inc
outsb
cmc
xchg
in
mov
jb
repnz
daa
into
push
xlat
nop
paddsb
arpl
iret
cmp
into
dec
adc
sbb
cld
stc
repz
adc
fwait
and
nop
mov
pop
jg,pt
repz
lret
enter
cmp
jle
jbe
fcomps
in
cwtl
mov
push
out
mov
push
and
mov
inc
mov
popf
xor
lret
insb
push
stc
repz
ljmp
mov
sub
mov
mov
rclb
add
incl
xor
repnz
mov
xor
insl
incl
sti
inc
and
pop
mov
and
jg
mov
fwait
push
mov
dec
ret
lret
sahf
fld
fstps
pop
scas
mov
inc
jmp
cmp
adc
or
mov
ficompl
lahf
jg
adc
pushl
or
stc
xor
aas
jg
test
cmp
dec
pop
repz
lahf
daa
push
addb
add
fistl
stc
dec
dec
mov
data16
scas
adc
sbbb
ret
test
pop
cwtl
xor
hlt
lret
arpl
nop
mov
jl
loope
out
aam
imul
enter
add
push
xchg
sbbb
xor
xchg
add
push
add
and
adc
outsl
cmp
mov
test
fwait
pop
leave
adc
cmpsb
dec
dec
testb
das
add
or
fsubrp
enter
ret
and
sbb
dec
mov
fiaddl
das
ja
xchg
outsl
jmp
inc
fmulp
lahf
pop
push
dec
mov
push
mov
mov
rorb
mov
jp
fnstsw
repz
adc
sbb
xchg
popa
stc
inc
rolb
rorb
in
scas
inc
cmpsl
lods
cmpsl
iret
cmp
jns
cld
mov
pop
or
dec
cmp
xor
cmp
ss
jle
lods
movsb
scas
iret
lret
cltd
sub
cld
lret
add
dec
aaa
xor
sbb
cli
and
gs
aas
jg
cld
into
and
push
and
filds
xchg
repz
lahf
in
popa
sbb
mov
cmp
loopne
ss
dec
jns
shrb
cmp
dec
or
out
push
out
out
test
ds
jg
cld
stc
rolb
adc
push
dec
dec
xchg
lahf
aas
add
out
cmc
ja
scas
mov
cmp
pmuludq
mov
jecxz
sub
jns
xchg
mov
mov
push
cltd
jns
outsl
sub
out
mov
sbb
ds
inc
adc
mov
mov
cmp
ljmp
pop
stos
xlat
mov
mov
outsb
sbb
sub
leave
andl
pop
jns
pop
jbe
adc
das
cmpsb
xor
jg
pop
in
dec
pop
incb
rolb
dec
mov
add
das
mov
scas
mov
out
into
pop
xchg
adc
or
stos
dec
and
loopne
jl
dec
loope
pop
jle
mov
lret
fisttps
rcll
sub
cmp
adc
xor
sub
cwtl
orb
adc
xchg
shrb
popa
subb
pop
scas
dec
in
mov
popf
mov
movsbl
pop
sar
inc
cmpsb
mov
lahf
negb
leave
dec
fwait
mov
leave
lret
dec
jge
in
lret
and
test
mov
aas
aas
popa
add
out
ffreep
mov
jg,pt
ficoms
sarb
leave
cmp
iret
icebp
leave
mov
mov
pusha
outsb
into
push
or
aas
cmp
dec
int3
jge
test
fistps
stc
repz
testl
push
lret
mov
mov
pop
jmp
adc
out
pop
inc
pop
idivb
inc
mov
iret
sahf
inc
push
xchg
iret
pop
andl
cld
push
imul
loopne
inc
hlt
mov
call
orl
pop
jg
xchg
xor
cmpsl
push
fistps
js
jmp
adc
xor
xchg
mov
out
lahf
cmp
sbb
test
lods
in
and
negb
dec
popl
push
add
and
in
out
jecxz
int3
sbb
and
xchg
in
push
pop
mov
pop
mov
pop
push
jmp
sub
jg
mov
pop
add
add
lahf
aas
jmp
roll
inc
cmp
sbb
xchg
iret
test
pop
fwait
or
mov
mov
stc
cmp
adc
xchg
lahf
dec
lods
lret
fisttps
aas
aas
xchg
jo
pop
mov
rclb
ja
insb
enter
scas
adc
and
push
mov
repz
decb
dec
mov
or
push
aaa
cli
in
push
and
out
enter
das
pop
dec
sti
dec
lret
xchg
push
les
push
int3
rcll
push
pop
lds
mov
scas
aas
std
mov
pop
flds
or
sub
das
dec
dec
cmp
xchg
mov
or
movsb
daa
push
xor
dec
xchg
pop
lret
faddl
or
push
stc
inc
sahf
cmp
mov
cmp
aas
inc
sbb
mov
add
in
pop
in
sub
dec
sbb
mov
fiaddl
or
sub
lret
movsb
inc
movsb
jg
aas
pop
scas
xor
incb
lahf
mov
pushf
fistpll
jb
jmp
sahf
fnstcw
mov
cld
rcll
push
jecxz
push
fisttpl
test
sub
inc
cmp
inc
adc
mov
mov
ljmp
out
xchg
aas
mov
cs
stos
xor
pop
js
mov
rorl
adc
stos
sbb
lret
test
popa
or
inc
outsb
in
pop
inc
lret
dec
shl
lret
fdivrl
dec
cld
or
nop
dec
xchg
and
iret
lahf
aas
jg
je
lock
inc
adc
and
ret
rol
repnz
and
push
push
push
fwait
jmp
sbb
scas
xchg
cmp
and
jl
jns
or
dec
sub
push
leave
mov
and
mov
mov
int3
sub
and
iret
das
sub
rcrb
popa
jbe
into
mov
in
mov
into
mov
sub
lds
str
test
mov
mov
ret
xchg
jne
dec
in
pop
aas
jg
cld
scas
in
push
jnp
cmpsb
push
call
adc
shl
out
lahf
adcl
pusha
pusha
inc
cmp
mov
add
xchg
push
xchg
cld
stc
repz
dec
cs
sbb
add
jo
iret
sub
xchg
mov
jp
push
in
ror
fnstenv
ficomps
icebp
inc
push
loopne
iret
cmpsb
rclb
in
insl
decb
in
sahf
insb
pusha
scas
lods
aam
stc
lock
xchg
jg
aam
xchg
rcll
out
add
pop
mov
call
repnz
rclb
setb
cld
sbb
out
idiv
fildl
out
fidivs
aas
jg
fldl
aas
arpl
and
bound
lret
jmp
xor
jp
mov
mov
pop
lods
or
dec
scas
test
jg
cld
mov
cmp
lcall
pop
xchg
outsb
dec
or
aas
mov
adc
xchg
pop
lret
out
mov
hlt
mov
mov
clc
xchg
and
push
push
incl
sbb
xor
mov
stc
cld
stc
repz
pop
dec
adc
mov
cs
movsb
sub
jae
cmp
test
fwait
jl
add
repnz
movq
inc
cld
xor
pop
int3
ds
and
lock
push
testl
jbe
xchg
movsb
inc
jmp
repz
cmc
lds
mov
stc
loope
aas
inc
daa
cld
sarl
inc
cwtl
pop
xchg
fmulp
jl
push
xchg
aas
jg
push
mov
mov
adc
mov
aas
into
push
mov
mov
idivb
adc
int3
cmp
cwtl
mov
pusha
jp
repnz
fisubrs
add
fnsave
mov
and
or
adc
out
adc
lds
push
aaa
pop
lods
scas
mov
lahf
mov
jmp
jb
dec
dec
mov
aaa
inc
pop
lahf
les
cmc
xchg
push
pop
les
mov
test
jle
sub
mov
dec
movsl
jge
out
adc
out
out
stos
iret
push
imul
push
lods
lret
inc
pavgb
mov
sahf
jl
movsl
out
mov
pop
negl
mov
mov
hlt
jbe
xbegin
add
repnz
xchg
and
mov
out
ja
inc
adc
fisubrs
scas
sub
pop
or
iret
sub
pop
test
std
fwait
cld
and
adc
push
push
sub
enter
push
inc
rcrb
iret
lahf
pop
sbbb
push
push
or
in
add
xor
xor
xchg
iret
sbb
add
mov
and
mov
adc
scas
push
push
mov
xchg
push
mov
pop
pop
jle
cld
fsubrp
nop
jb
xchg
jo
cmp
fcmovnb
fsubrl
xor
clc
mov
pop
das
push
fsubrp
test
stc
dec
jg
cmpsb
push
adc
mov
in
pop
out
push
repnz
add
hlt
movsl
jl
aas
mov
lods
ficomps
out
lahf
lret
mov
icebp
icebp
add
jle
or
inc
cmp
jle
repz
cmp
pop
dec
mov
jg
cld
mov
ret
jns
std
dec
into
pushf
pushf
fiadds
pop
leave
mov
cwtl
loope
push
das
into
or
jns
out
das
int
fisttps
jns
bound
rcrb
and
cmp
mov
push
scas
mov
iret
sub
out
imul
repz
add
lahf
xor
or
pop
xor
cld
adc
outsb
and
mov
lahf
aas
jg
ret
loopne
js
js
dec
push
lret
out
add
decl
out
out
adc
insb
pop
cmp
jg
inc
ljmp
nop
stc
pushw
out
lahf
aas
jns
adc
fisubrl
or
sbb
jg
into
movlps
mov
adc
iret
lahf
mov
and
or
cmpsl
xor
popa
fldt
imul
sti
and
dec
dec
mov
je
aas
mov
mov
fists
es
cld
dec
das
adcb
pop
add
sub
jl
pop
fdivrp
sti
push
and
filds
mov
pushf
in
mov
inc
dec
sub
pop
fyl2xp1
cld
stc
mov
and
sti
sbb
or
add
jg
dec
mov
pop
scas
fbstp
jns
ss
or
sbb
scas
and
sbb
jle
ret
pop
jg
dec
nop
test
aas
sub
cs
out
cld
nop
loopne
rorb
ja
loop
cs
into
cmp
xchg
jl
repnz
xor
ds
inc
jne
sbb
enter
xchg
aas
ljmp
adc
test
dec
dec
mov
jmp
ret
pop
dec
rorl
jl
mov
stc
decb
das
jecxz
mov
mov
cld
sbb
pop
add
add
aas
ds
pop
lret
leave
out
cs
sub
les
repnz
adcb
jg
adc
cld
stc
repz
jle
clc
cli
or
fidivrs
shll
scas
loope
push
mov
in
test
mov
mov
loopne,pn
pushf
jg
adc
lahf
aas
pop
outsb
inc
xor
scas
adc
out
testl
lahf
cmpsb
and
sbb
xor
imul
outsl
in
xchg
xchg
mov
mov
and
inc
jle
cld
push
addl
xlat
data16
mov
dec
sbb
sub
lahf
pop
into
jno
outsb
lahf
or
xchg
xchg
cld
stc
repz
xchg
add
cmpb
add
lahf
out
icebp
aad
stc
add
xchg
pop
pop
xor
pop
inc
dec
or
push
aam
lock
mov
jno
ljmp
or
js
pop
scas
adc
inc
xor
js
add
in
rep
mov
movsl
fstpt
push
xchg
push
ficomps
leave
and
and
std
jb
or
outsb
out
cmp
adc
in
push
push
xor
mov
mov
iret
add
jns
pop
or
sbb
xchg
ja
inc
fildll
mov
inc
push
pop
stc
and
movl
imul
popa
scas
repz
and
bound
shlb
fdivs
dec
cmp
sub
xor
xchg
pop
fisubrs
inc
sbb
jle
xorl
add
and
xchg
pusha
push
in
repnz
mov
push
or
mov
ss
inc
pusha
jl
in
xchg
pop
outsb
pop
ror
aas
dec
sbbb
push
pop
jns
int
mov
pop
scas
sahf
int3
cmp
jns
add
ficoml
mov
out
mov
cli
test
out
xchg
dec
call
int3
cltd
add
inc
cmp
add
cmp
iret
out
fldt
sbb
jns
cld
mov
sahf
aaa
inc
mov
andb
or
cmp
lea
cltd
rclb
int
test
push
mov
fwait
dec
or
lret
loop
mov
xchg
mov
push
and
pusha
or
cmp
xchg
lahf
aas
jg
fsubrs
ss
lahf
sub
repz
add
add
push
hlt
pop
add
hlt
sahf
cld
stc
repz
outsl
iret
dec
cltd
push
shlb
sbb
test
loope
sti
or
mov
sbb
push
flds
scas
rclb
and
mov
xchg
popa
adc
nop
add
dec
ror
lret
addr16
dec
mov
xchg
jne
mov
dec
mov
stc
subl
sub
mov
mov
insl
cmp
xor
imul
jg
pop
out
pushf
push
cmp
insl
inc
jle
sub
daa
add
out
cld
inc
jg
in
mov
and
pop
test
jg
sub
xchg
xchg
add
mov
jbe
daa
mov
xchg
ja
stos
es
lcall
xor
aas
ret
outsl
dec
xor
addr16
or
aas
lods
je
pushf
push
scas
adc
pop
roll
pushf
lods
cmovae
jne
sarl
cld
stc
rep
int
push
xchg
jmp
add
mov
and
mov
pushf
dec
fdivrs
sub
fidivrl
xor
lret
subl
xor
shll
pop
or
stos
xor
out
mov
nop
jae
lahf
mov
mov
jl
jmp
ds
rcr
cmp
nop
xchg
lret
ds
inc
sahf
adc
xchg
cli
dec
nop
out
add
in
xchg
cmp
sbb
repnz
ljmp
pop
pop
stc
insl
add
call
mov
sbb
rorb
fcoml
jno
stc
test
push
mov
mov
mov
mov
dec
cld
xor
cmp
out
pop
into
jecxz
iret
lahf
aas
jg
xor
jno
xchg
jno
sub
jp
enter
in
pop
and
sbb
sub
jns
loop
adc
xor
add
jl
outsb
cld
rcrb
stc
cmpsl
insl
repnz
out
fsubrs
enter
std
mov
addb
or
fwait
rorb
das
xchg
sbb
out
stc
xor
push
sahf
in
stos
cmp
inc
clc
cmp
dec
lods
pusha
mov
add
pop
inc
jns
in
mov
out
inc
in
push
je
xchg
dec
add
loope
adc
cltd
lret
imul
sub
aas
jg
andl
fists
mov
mov
mov
movzwl
flds
sub
shrl
cld
sbb
inc
mov
mov
xchg
pop
pop
push
lock
outsb
xor
subb
sub
test
mov
insb
fwait
lock
cld
shr
push
push
jo
and
pop
xor
sub
stos
test
sub
and
mov
cmpsl
inc
mov
mov
cmp
push
shrb
out
sahf
cli
mov
or
mov
cltd
cli
jae
or
subb
mov
adc
fimull
call
inc
clc
sbb
sti
ja
repz
lret
add
test
jecxz
push
add
xchg
loopne
dec
lret
iret
ret
add
pusha
loopne
mov
jg
jecxz
loopne
dec
fwait
xchg
lret
aas
fisubrs
aad
xchg
bound
mov
fwait
sbb
loopne
outsl
mov
sbb
mov
nop
fs
xchg
mov
or
and
sub
push
push
je
adc
adc
ficoml
in
arpl
mov
pop
or
shrb
or
ss
in
mov
movsl
and
jo
xlat
sub
xchg
pop
sub
mov
dec
xchg
out
sbb
sbb
movsl
lods
popa
ret
lock
inc
loop
xchg
and
inc
mov
sbb
dec
push
hlt
fldenv
into
add
sbb
call
mov
sbb
or
into
add
decb
xchg
xchg
sbb
add
xchg
xor
inc
mov
sahf
call
mov
xor
jae
push
dec
xchg
pop
ljmp
leave
add
adc
xor
push
rorl
mov
or
xor
test
shr
xchg
inc
cmp
adc
imul
and
mov
orl
out
testb
xchg
gs
mov
adc
stos
mov
cmpsl
imul
and
stos
adc
rclb
pop
or
adc
or
ret
push
rcrb
adc
inc
lods
rolb
push
jge
sbb
sbb
inc
pop
imul
and
and
sbbl
divb
adc
mov
pop
mov
mov
sbb
insb
sbb
xchg
xor
cmpl
sub
pop
xchg
leave
mov
add
pushf
push
insl
jbe
gs
sub
loop
pushf
push
movsl
rorl
shrb
push
daa
fdivs
cmpsb
cmpsb
test
shrb
fsubs
adc
mov
in
inc
icebp
cmpsb
mov
pop
fbld
adc
dec
and
out
or
push
shrb
sbb
push
adcb
dec
inc
pop
jns
push
xor
mov
mov
adc
inc
push
lahf
mov
fs
xor
sarl
jecxz
pandn
or
cs
fcoml
or
fcompl
pop
adc
movsb
sbb
adc
inc
sbb
and
addb
xor
xchg
dec
mov
push
sbb
cmp
clc
mov
sbb
adc
es
mov
fimuls
push
dec
pop
rol
sbb
shrl
adc
sbb
cs
ret
das
fsubs
pusha
lods
pushf
sub
xchg
popf
mov
jge
or
or
mov
cs
cmpb
rolb
dec
xchg
inc
xchg
int
mov
aam
add
adc
push
test
in
and
incb
mov
or
inc
mov
add
xor
popf
in
gs
ss
push
test
pop
adc
addl
lret
shlb
inc
sub
fdecstp
ja
fs
inc
or
insb
adc
ret
push
lods
inc
lods
pusha
call
test
sub
ret
mov
pop
das
or
aam
mov
adc
jg
mov
ljmp
js
or
popf
push
lsl
adc
adc
sbb
adc
xchg
scas
push
pop
xchg
shlb
mov
pop
push
pop
xlat
xor
pop
jmp
mov
mov
in
or
sahf
dec
in
sub
sub
jbe
pusha
arpl
add
sub
or
or
lret
pop
lods
fiadds
icebp
and
adc
imul
mov
pop
push
push
femms
adc
jg
xchg
sub
jmp
or
or
push
mov
sar
into
sbb
rolb
adc
inc
xchg
mov
cmp
arpl
mov
lock
mov
inc
add
sbb
imulb
rorb
fdivrs
push
sbb
pop
mov
adc
aam
nop
push
xchg
test
add
test
ret
scas
sub
push
cmpsl
adc
daa
or
loopne
xor
jmp
dec
and
ret
cltd
jmp
sti
or
adc
inc
cmp
adc
bound
lret
je
ljmp
add
sarl
add
lock
or
mov
das
dec
mov
ret
js
shrl
pop
dec
int3
loop
or
lret
jecxz
test
inc
loop
adc
adc
es
adc
push
mov
clc
test
cld
cld
xchg
sbb
out
or
adc
sub
sub
sub
shrl
cmp
pop
and
rcrb
inc
into
lock
pop
fdivs
lcall
leave
sub
repnz
and
push
pushf
cmp
or
inc
ss
loope
sbb
icebp
icebp
xor
push
pmaddwd
xor
add
fs
into
rcrb
nop
add
inc
pop
stos
cwtl
or
sbb
dec
shll
adc
jmp
push
sti
into
inc
xchg
lods
shll
cli
rolb
lahf
jl
pop
addl
sbb
movsb
out
adc
inc
das
add
mov
bound
lret
pop
sub
push
data16
das
push
outsb
fprem
gs
sbb
push
sbb
sbb
pop
sahf
stos
xor
xlat
push
mov
lcall
mov
xor
add
adc
adc
xchg
sub
cli
and
ljmp
xor
inc
filds
and
ljmp
ret
mov
cmp
shll
add
add
jmp
and
out
sbb
or
leave
or
xchg
ss
sti
add
add
mov
xor
mov
fbld
push
adc
out
dec
or
lcall
push
sub
in
sahf
call
lock
clc
addb
sbb
mov
adcb
in
push
adc
sub
cmp
cmp
xchg
movb
rcll
loop
in
sbb
dec
andl
pop
xchg
inc
clc
les
repnz
test
cwtl
out
das
leave
mull
jno
inc
fcmovbe
into
fld
loope
out
lcall
push
sbb
cwtl
push
lret
mov
sbb
sbb
jo
or
movsl
xchg
dec
shrb
xchg
xchg
mov
pop
fwait
mov
pop
sub
xor
xchg
outsb
dec
push
or
into
mov
lea
ja
and
or
and
mov
and
popa
sub
cmc
mov
in
mov
push
js
inc
sti
out
mov
adc
icebp
repz
jo
sbb
mov
cltd
fsubr
mov
fcoms
and
inc
lahf
pusha
dec
fs
push
adc
mov
xchg
mov
fstps
addr16
push
push
sub
lea
inc
lea
and
sbb
sub
push
inc
mov
add
xor
mov
leave
pop
popa
ret
xor
nop
or
xchg
roll
cmp
movsb
push
mov
sbb
rclb
mov
or
mov
ret
inc
pop
ja
cli
adc
xor
cli
jo
repnz
test
ret
adc
sub
orl
rcl
sar
sub
inc
pop
jge
mov
and
rolb
dec
mov
je
inc
loopne
jp
or
sub
mov
call
loopne
pop
or
clc
add
pusha
pop
adc
mov
js
cmc
jl
mov
adc
lods
ss
xor
inc
adcb
inc
nop
xchg
pop
lock
pop
aad
adcb
cmp
cli
inc
or
xor
pop
icebp
dec
ret
adc
popf
pusha
mov
fs
js
xchg
sbb
sbb
or
movsb
inc
ret
inc
or
cltd
mov
dec
push
cmovbe
shl
push
push
cmovp
or
icebp
scas
cmpsb
fwait
leave
push
jp
lret
imul
add
xchg
cld
add
test
adc
and
aaa
mov
mov
xor
cltd
adc
mov
mov
repnz
xor
cs
mov
xor
enter
mov
xor
inc
push
arpl
xchg
lcall
or
sbb
sub
icebp
fstpt
mov
mov
jmp
dec
or
hlt
ficomps
add
jae
scas
mov
cmp
seto
iret
lds
and
inc
cs
gs
sub
fldenv
mov
pusha
and
cmp
sbb
jb
dec
mov
cmp
xor
add
daa
xchg
mov
sbb
and
in
xchg
xsavec
rcrl
sti
into
cli
loopne
pop
jp
mov
ljmp
adc
jo
or
mov
shll
mov
push
add
das
cli
xor
or
cwtl
push
mov
or
dec
jp
hlt
add
mov
dec
cmp
xchg
or
stos
in
arpl
xchg
shll
or
add
insl
push
cmp
jo
push
sbb
rol
dec
lcall
in
xlat
or
lret
cld
movsb
je
jns
mov
mov
test
aaa
shrb
leave
adc
inc
xor
movsl
jne
in
or
icebp
dec
fildl
and
clc
push
jmp
push
pushf
dec
cmc
sbb
adc
xor
push
cmp
mov
cmp
sahf
mov
mov
lds
inc
or
cmp
sbb
mov
jle
testb
movsl
jp
and
or
add
cs
cmpsl
in
and
mov
daa
inc
adc
or
mov
sbb
dec
push
cmp
cmpsb
enterw
icebp
pop
inc
pop
push
ret
push
dec
adc
or
pusha
mov
fs
mov
cmp
dec
and
inc
push
cmp
or
lret
call
pop
pop
icebp
xor
div
rclb
lret
inc
fdivl
or
ret
inc
nop
rolb
cli
inc
fwait
fidivs
mov
mov
sub
inc
xor
js
xchg
decb
xor
jmp
rclb
and
or
cwtl
pop
setge
pop
arpl
movl
push
and
push
inc
sbb
testb
and
leave
sbb
in
call
sbb
add
leave
mov
arpl
movsb
mov
fmul
fwait
push
cmc
xor
mov
shlb
mov
push
insb
sbb
mov
int3
adc
inc
es
lcall
repnz
ret
movsl
cmp
add
sarb
in
rolb
mov
out
dec
sbb
push
call
shr
mov
lret
jmp
loop
xor
ljmp
sub
lds
inc
sbb
in
leave
or
loope
jecxz
push
push
add
test
hlt
mov
pusha
push
add
dec
aaa
pop
popa
dec
lods
fcoml
jl
cmpsb
cmp
push
jecxz
xchg
sub
cmp
clc
daa
test
xchg
xchg
insb
push
push
call
jo
push
leave
push
popa
loop
dec
out
jnp
add
cmpsb
adc
pop
repnz
add
push
cmp
rcrl
push
dec
test
jne
fiaddl
cmp
rolb
in
add
aam
int3
xor
pop
push
pop
sbb
movsl
out
mov
push
mov
imul
inc
push
es
and
loopne
mov
or
lahf
das
dec
inc
jp
xchg
push
pop
loopne
sbb
cmp
test
adc
cmp
or
call
in
ret
ret
push
mov
push
push
inc
sbb
fisubs
add
jmp
sub
popa
shrb
xor
inc
cli
js
fwait
and
inc
mov
mov
pop
int3
mov
lret
sbb
dec
cs
pop
xchg
sbb
xchg
pop
xor
pop
add
adc
or
mov
out
nop
hlt
add
pop
ret
push
pop
or
in
jb
aam
mov
xchg
mov
mov
addr16
sub
pop
adc
addl
push
inc
rcrl
jmp
fisubrl
loopne
ljmp
sbb
rcrb
popa
and
or
jmp
shl
fistpll
xchg
push
mov
jl
mov
adc
loopne
addr16
pop
les
lods
cmp
jg
xor
ss
xor
test
call
pusha
push
sub
fisubl
pop
xchg
arpl
adc
xor
pop
or
gs
ja
call
cltd
push
push
jb
js
sarl
xor
rcrb
cmc
popa
dec
pusha
push
cmp
pop
xor
xchg
adc
loope
or
sbb
icebp
xor
xchg
xchg
loop
or
icebp
mov
add
cld
ret
or
pop
xchg
lret
dec
shrb
arpl
lea
cltd
dec
adc
add
and
les
shll
cmp
sub
add
or
jne
imul
sbb
xor
cs
repnz
mov
xchg
adc
and
popa
mov
sub
in
loope
push
lahf
push
sbb
popf
in
or
jecxz
aaa
cli
adc
lds
add
mov
pop
push
pushf
add
pop
int
push
push
stc
mov
rcrl
add
add
jo
ljmp
fsubrl
cwtl
lcall
mov
clc
aam
mulb
cli
out
popa
mov
add
fcoms
mov
mov
out
xorb
or
cmp
xor
jmp
pop
xchg
adc
hlt
jp
lods
dec
enter
pop
inc
rcl
push
jae
xlat
dec
xchg
jp
lock
loop
add
inc
cs
repnz
setge
mov
ret
or
lret
sbb
push
jp
or
xor
pop
shlb
xchg
cli
xchg
das
push
notb
inc
sub
mov
cmp
popf
and
xchg
and
adc
xor
insb
sbbb
cmp
ljmp
or
popf
add
jo
mov
jle
adc
mov
sbb
add
sbbl
cmp
rcr
adc
jo
or
inc
pop
out
cmp
mov
pop
test
or
movsb
mov
repnz
sarl
inc
or
enter
pop
push
push
cs
cmp
lea
xchg
lods
sbb
adc
xor
push
or
and
xchg
add
or
adcl
fimuls
fmul
sbb
inc
daa
cltd
mov
fs
inc
icebp
sub
loopne
clc
xor
adc
jle
fdivs
add
pusha
movsl
cmpb
flds
xlat
repnz
cmp
mov
mov
cmp
mov
stc
mov
xor
sbb
and
push
pop
cli
adc
mov
dec
cmp
xchg
mov
pop
aas
mov
push
inc
dec
xor
dec
and
mov
or
adc
xor
mov
xchg
add
or
lea
xlat
sbb
ret
mov
xor
or
xchg
cwtl
ficomps
add
pop
lret
pop
add
adcb
sbb
adc
cmp
rorb
pop
loopne
addb
adc
push
sahf
xor
sub
mov
dec
ret
sbb
jp
lock
pop
dec
or
push
push
inc
leave
jno
pop
push
test
add
add
mov
xor
test
push
dec
mov
xchg
sbb
jmp
push
xor
sbb
pop
fld
cmp
adc
roll
add
or
xor
push
dec
or
pop
jmp
lock
cmpsb
bound
jl
adc
cmc
inc
add
push
pop
pop
add
mov
icebp
jne
dec
push
lods
int
jnp
mov
adc
sub
ret
je
push
mov
inc
mov
sbb
push
arpl
xorl
adc
je
dec
cmpsl
xchg
push
cmpsl
pop
out
icebp
loop
add
or
pop
fistl
pop
loopne
or
cmp
add
mov
sbb
dec
mov
cmp
pop
adc
std
fdivr
and
test
inc
dec
andb
pusha
hlt
jge
add
shl
or
xor
push
pusha
xor
lods
jmp
roll
popa
out
sbb
mov
xchg
popa
bound
sub
gs
stos
mov
in
mov
jecxz
and
xchg
sahf
fcomps
ds
pop
mov
sbb
nop
or
mov
xchg
mov
jl
and
sub
lds
addr16
scas
and
jge
cmp
inc
cmp
cmp
xor
gs
add
and
push
sbb
hlt
jl
lds
adc
or
ret
pop
push
xchg
mov
jecxz
imul
push
inc
in
mov
xor
push
aaa
fiadds
jne
and
cmp
add
xchg
pop
sbb
dec
insb
push
out
adc
adc
sarb
call
sbb
bound
fdivl
mov
outsb
cli
orb
mov
std
cs
in
pop
push
scas
nop
ljmp
test
add
mov
push
cmpsl
inc
mov
sub
bound
add
and
mov
jbe
push
sub
stos
scas
sub
bound
fsubl
lock
loope
push
dec
inc
mov
sub
sti
sbb
xchg
test
jo
and
inc
or
sahf
int3
xor
mov
out
and
mov
mov
jp
mov
sbb
inc
ljmp
and
orb
cmp
sbb
and
sbb
dec
stos
jnp
jb
push
xchg
mov
add
dec
mov
cltd
push
lret
js
adc
and
push
sbb
rcrb
outsl
xchg
or
or
or
cltd
int
addb
adc
cs
add
leave
sub
enter
mov
sub
xlat
or
cltd
or
push
psubd
push
sbb
and
inc
inc
ret
sbb
movsb
push
adc
mov
js
sbb
mov
ror
sar
fcomps
mov
lea
notb
or
out
pop
shrb
xchg
mov
adc
inc
cmpsl
loopne
xchg
imul
pusha
add
push
or
push
sbb
les
cmp
mov
inc
stos
jbe
add
ret
enter
inc
cmp
mov
fprem
movsb
add
or
sbb
push
push
ret
and
in
mov
mov
pop
xchg
add
add
das
mov
cwtl
lret
or
xor
adc
popa
mov
mov
add
daa
fs
xchg
inc
adc
arpl
sub
mov
scas
pusha
cmp
cs
xor
inc
sbbb
and
stc
loopne
mov
outsl
adc
sbb
xlat
mov
inc
lahf
pushf
mov
rcrb
jne
les
cli
mov
shll
shll
adc
push
push
leave
cwtl
pop
sbb
mov
mov
or
mov
out
and
inc
xchg
add
mov
add
stc
mov
fiadds
jbe
pop
xor
ljmp
mov
rdtsc
aam
ss
mov
lcall
cli
sub
addr16
fcmovnbe
add
test
shl
hlt
ljmp
hlt
dec
cmp
push
mov
repnz
insb
loop
mov
test
xor
adc
or
repnz
mov
and
push
outsl
xor
adcl
jge
aam
lahf
and
cwtl
or
push
rclb
xchg
hlt
lret
inc
mov
inc
sbb
call
lods
mov
or
lods
and
lods
lods
sbb
shlb
dec
sbb
cmp
call
pusha
or
lahf
lcall
push
mov
jo
inc
ror
pusha
mov
fwait
sub
add
gs
mov
adc
push
mov
dec
add
insb
jge
and
mov
xchg
add
pushf
mov
adc
push
ret
notb
xor
push
cld
sub
sahf
xor
repnz
pusha
add
jecxz
jae
fmuls
sahf
add
mov
xlat
and
dec
cmpb
xchg
inc
sbb
push
lds
push
lret
pop
sub
andb
ljmp
push
push
sbb
add
or
sub
and
dec
pop
roll
jne
adc
dec
push
xchg
adc
adc
out
or
mov
push
fmuls
xor
push
pop
hlt
or
sbb
std
ret
dec
lods
and
push
xchg
sub
outsb
and
in
out
push
stos
inc
notb
push
sbb
mov
push
push
add
jne
add
call
xchg
int3
ljmp
lret
rclb
or
in
cmpsb
xor
and
jp
lock
dec
pop
adc
xchg
sub
sbb
mov
addb
ljmp
push
mov
push
xchg
push
inc
mov
movsb
push
or
xchg
popa
and
xor
orb
mov
and
das
push
inc
test
ret
pop
mov
push
xlat
sbb
xor
repnz
sub
cmp
inc
loopne
ss
add
das
jmp
dec
or
and
outsl
mov
inc
fldenv
cmp
dec
popa
stc
out
pop
mov
addb
clc
push
push
mov
push
push
stos
adc
popf
je
sbb
push
and
lods
nop
inc
and
xor
clc
jecxz
add
push
lods
pusha
notb
les
in
js
push
inc
cmp
movsl
aad
repnz
cmpsl
add
rorb
or
pop
lods
out
ret
xlat
xchg
pop
mov
sbb
lea
test
inc
mov
mov
or
stos
jbe
enter
xchg
movsb
sub
mov
pop
mov
out
dec
jl
jno
xor
sbb
mov
dec
xor
adc
xor
sbb
and
loopne
push
push
sub
sahf
and
sti
cmpsb
pop
xchg
and
cmp
add
add
rorb
mov
cmp
in
lea
in
subl
clc
test
or
shr
pop
rolb
scas
stos
or
repnz
cmp
xchg
dec
jge
and
dec
or
ds
jno
jge
ljmp
xchg
daa
pop
dec
cli
jb
stos
push
mov
fisttpl
dec
add
imul
and
fisttpll
or
xchg
mov
sub
dec
test
push
inc
xchg
pushl
inc
cmp
dec
cwtl
sbbl
sbb
cmp
xchg
popa
lret
sbb
and
rolb
sub
in
mov
rolb
push
add
addr16
push
lahf
mov
movsl
dec
pop
sarb
ljmp
fmull
cmc
adc
push
push
xor
enter
icebp
icebp
lahf
aaa
test
mov
cmp
jb
mov
xabort
add
pushf
xchg
dec
or
pop
pop
sbb
or
lret
clc
jmp
popf
pop
sbb
js
jmp
jo
icebp
fidivs
aam
mov
enter
push
in
jne
les
adc
into
push
mov
jnp
sar
repnz
movsb
repnz
add
mov
sbb
cld
add
adcb
jmp
cmpl
lock
in
jb
test
stos
jae
dec
data16
mov
ss
rclb
xchg
dec
nop
leave
addr16
cld
movlps
and
loope
pop
and
aam
inc
add
or
mov
sbb
sub
adcb
loopne
inc
dec
dec
push
lock
dec
sbb
sbb
push
inc
das
rcll
sbb
shrl
inc
cmp
and
cmp
ret
mov
outsb
loope
push
cmpsb
cmp
dec
push
cmp
mov
pop
add
add
outsb
in
popa
push
mov
pop
mov
cmp
loop
sahf
std
ds
js
jp
gs
and
xorb
xor
or
push
js
inc
loop
scas
mov
enter
pusha
push
lods
jle
sbb
or
and
and
cmc
mov
sbb
adc
pushf
dec
dec
pop
mov
ret
xor
xchg
or
add
loop
lds
fimuls
push
jb
sbb
fiaddl
inc
jp
mov
je
into
sbb
cmp
rclb
and
arpl
lods
xlat
push
mov
mov
sub
pushf
jp
cmp
dec
xor
dec
sarl
bound
add
pop
mov
nop
shlb
fcoms
pop
pop
cmp
stos
mov
adc
xor
inc
push
popf
dec
pop
push
enter
movb
or
and
addr16
les
add
or
mov
or
add
rolb
incb
cmp
in
dec
test
jnp
or
sub
insb
mov
int3
ret
hlt
lock
xchg
imul
nop
bound
and
ss
jmp
or
and
bound
ss
into
in
leave
or
add
sbb
xchg
or
pushf
sbb
dec
jp
or
adc
sub
scas
mov
ret
bound
je
mov
inc
gs
push
ret
sub
adc
call
shll
sti
xchg
lea
jecxz
mov
rolb
adc
adc
cs
outsl
add
jecxz
jb
push
inc
adc
adc
cli
pop
or
cmp
push
xchg
ds
fdivrp
movsb
notb
andl
cmp
adc
loope
cmp
jl
shrb
xchg
ljmp
push
lods
mov
add
dec
sarb
xor
fs
xchg
arpl
adc
pop
fidivrl
jno
inc
push
xor
mov
mov
sbb
cmp
add
rorb
lret
jno
sbb
enter
pop
or
adc
lods
and
stc
ss
sub
fimull
aaa
into
sbb
es
xor
roll
lds
xchg
in
push
xchg
andb
bound
and
pop
push
outsl
ja
sub
lret
xchg
cmp
add
lret
nop
pop
daa
fsub
lahf
cmp
mov
push
ret
or
pusha
lret
adcb
sarl
adc
and
push
outsb
and
loopne
xor
mov
xchg
push
stos
mov
fs
loopne
inc
jmp
cmp
push
cmp
inc
adc
popa
sub
push
pusha
pop
adc
jmp
fs
lock
mov
sub
xchg
xchg
sbb
aas
leave
aas
or
loope
inc
inc
xor
ss
mov
iret
mov
jecxz
out
sti
repnz
ds
inc
push
test
xor
adc
mov
dec
push
sbb
mov
and
xchg
push
pop
mulb
xor
mov
xor
loope
or
xor
ljmp
xchg
loop
jp
cmp
push
inc
xor
sbb
push
in
scas
cli
add
pop
icebp
pusha
pop
or
test
pop
sbb
add
stos
rol
or
pop
inc
orb
daa
adc
adc
add
cld
js
adc
push
jmp
sbb
flds
cmp
mov
jo
dec
dec
sbb
outsl
mov
mov
sahf
in
inc
sbb
push
lahf
ss
loopne
sbb
and
cmp
mov
sbb
push
ljmp
shlb
sbb
add
lock
lock
add
sbb
lcall
sub
mov
insb
mov
ret
and
movsl
dec
push
shll
or
shll
push
test
mov
xor
sub
ret
fidivs
pop
xlat
cmp
adcl
lret
jb
icebp
mov
push
enter
mov
mov
add
dec
rclb
cwtl
imul
loopne
or
sub
sbb
fs
ljmp
cwtl
cmp
push
pop
inc
xchg
rclb
jecxz
leave
ss
inc
adc
dec
xor
dec
push
mov
and
mov
nop
jo
jle
lods
pop
push
sbb
popa
sub
loopne
lods
jno
mov
inc
test
sub
push
hlt
loope
rcr
imul
sub
pop
and
adcb
in
addb
adc
sbb
push
add
dec
jo
pop
adc
jl
scas
inc
xorl
add
jne
pushf
sbb
push
xchg
push
gs
call
add
dec
aaa
mov
dec
dec
jge
testl
leave
imul
dec
and
add
add
js
sbb
add
mov
cs
sbb
push
call
xor
xor
mov
pop
sbb
sets
js
sahf
insb
push
or
dec
pop
sbb
sub
lret
add
mov
adcb
lcall
aad
mov
mov
mov
js
mov
cmpb
insl
and
mov
rcl
fbstp
das
sarb
clc
cmp
mov
xor
add
or
xorb
mov
mov
and
or
sub
push
fdiv
push
movb
loope
test
adc
std
mov
mov
sahf
movsl
aad
adcb
xor
add
lods
inc
and
rcl
pop
mov
pop
inc
push
shlb
mov
hlt
xor
adc
int
fs
mov
sbb
cmp
mov
push
and
dec
ja
dec
clc
js
dec
ja
and
ljmp
push
mov
enter
cmp
mov
adc
nop
movb
lahf
sbb
pop
arpl
push
xor
loopne
loopne
pop
adc
je
adc
mov
mov
jl
xchg
dec
dec
pop
fcoms
pop
int
or
pop
cmp
add
sub
dec
insl
les
push
or
repz
or
inc
cltd
and
add
sub
and
sub
out
ret
pop
or
enter
pop
or
push
xorb
sub
lock
icebp
dec
cld
dec
xor
ss
sbb
clc
clc
xor
rcll
jg
jno
sbb
mov
sti
movb
inc
daa
push
inc
test
cmp
xor
xor
xchg
and
popa
add
scas
lock
clc
daa
faddp
test
mov
outsb
mov
and
pop
add
movsl
add
inc
push
xchg
inc
mov
scas
imul
enter
cmp
push
pop
cltd
and
xchg
adc
dec
data16
das
ret
dec
insb
cwtl
push
lock
aas
pop
sarl
or
sub
loope,pn
add
div
js
popa
pop
add
cmpl
mov
jb
mov
jle
or
sahf
sub
push
test
je
add
pop
out
pop
pop
ficompl
adc
ret
cld
add
adc
adc
ret
cs
in
cmpsb
push
or
sbb
and
nopl
or
sbb
push
inc
jne
xchg
dec
add
cmpsb
mov
mov
jle
pop
mov
cmp
xchg
lret
add
mov
inc
dec
pop
ffree
sub
or
dec
or
test
push
mov
in
pop
mov
mov
cmpsl
repnz
pop
loopne
into
fimull
cwtl
push
mov
adc
mov
push
jnp
add
ljmp
sub
and
mov
loopne
test
push
mov
xor
adc
arpl
js
jne
jle
and
inc
jo
xchg
mov
test
and
jp
push
mov
rcll
data16
rcll
inc
xchg
and
cli
jg
xor
or
jb
cmpsb
call
rorl
xlat
outsb
bound
mov
sbb
jl
inc
inc
shl
and
or
xchg
jl
pop
inc
mov
pop
xchg
inc
enter
mov
add
lcall
add
loopne
push
xor
jl
daa
je
sbb
test
add
lea
adc
ret
lcall
enter
into
aam
or
jno
ret
decl
push
mov
push
push
cli
aam
and
sar
xchg
push
xchg
mov
push
xchg
sahf
data16
nop
xor
into
mov
pop
ljmp
test
lcall
pop
push
dec
rolb
add
jp
xchg
cld
out
sbb
faddl
subb
bnd
mov
jne
rclb
xchg
nop
mov
sbb
or
inc
repnz
ret
movsl
in
loopne
lock
rclb
sar
jo
xchg
jle
ja
fidivrl
out
icebp
cwtl
xor
insb
jecxz
push
inc
clc
rclb
scas
xchg
adc
mov
sahf
nop
inc
push
cmp
lea
sbb
xchg
xchg
ret
sbb
push
push
lock
rcrb
and
inc
jge
fs
shrb
jge
test
mov
push
psubb
add
sbbl
mov
stc
or
dec
repnz
insb
sub
add
inc
pop
cmp
or
call
sbb
rorl
mov
dec
sbb
pop
adc
daa
das
fwait
sub
adc
xlat
jno
imul
sbbb
imul
inc
fcmovnu
sbbl
and
rclb
jno
xor
push
sbb
pop
aas
xchg
mov
pop
add
out
dec
or
pop
xchg
cld
add
lret
call
mov
jp
popa
or
fsubl
xor
enter
xor
push
jge
loope
mov
mov
push
jns
loopne
mov
bound
inc
psubsb
lret
push
mov
push
fwait
leave
pop
adc
cmc
orb
jae
subb
scas
push
iret
mov
out
lods
add
cmpsl
mov
test
xor
nop
add
mov
dec
xchg
and
push
or
and
es
push
les
sub
or
icebp
hlt
loope
cmc
add
mov
push
sub
xchg
add
leave
sub
enter
jecxz
push
imul
sub
ds
les
push
sbb
push
inc
pminub
xchg
push
dec
inc
pop
push
sar
xor
inc
pushf
gs
sbb
adc
cli
mov
push
push
inc
mov
sub
xor
inc
ds
sub
je
test
pop
movsl
jo
adc
xor
mov
movsb
push
frndint
rcr
cmp
sub
int3
cs
enter
adc
addb
shrb
or
mov
or
push
hlt
js
push
ja
jge
mov
push
and
mov
mov
adc
pop
add
orl
xor
xchg
sub
addl
les
push
mov
cmp
pop
cmp
addb
imul
fsubs
scas
cmp
add
xor
mov
adc
cmp
lcall
cmpsb
sar
lods
leave
add
insl
dec
sbb
addr16
and
popa
jge
cwtl
rorb
push
jb
ds
pushf
cmpsl
outsl
dec
cmovnp
sub
rolb
ficompl
xchg
or
adcl
mov
rorb
dec
inc
rorb
dec
dec
out
ret
fs
or
shlb
popa
xor
jp
or
or
nop
or
xchg
mov
push
jno
adc
sahf
pop
xor
xor
rorl
dec
pop
add
inc
shrb
add
or
adc
insl
dec
hlt
pop
test
sbb
push
sarl
inc
lods
test
fidivrl
subb
wrmsr
push
or
cmp
pop
cmpl
sbb
push
imul
xor
shlb
jge
or
sar
pop
into
add
loopne
jmp
mov
add
cmp
push
out
call
pop
rorb
mov
shrl
inc
sbb
jle
adc
or
inc
sub
call
or
push
inc
lret
xor
aad
loope
push
pop
lahf
inc
pop
je
sbb
jae
adc
jg
jecxz
in
and
cmp
add
cmp
mov
shll
ret
or
sbb
outsl
add
xchg
pop
lods
repnz
jecxz
repnz
roll
xchg
push
leave
mov
or
inc
into
shlb
addl
add
scas
jnp
jmp
sub
push
testb
icebp
clc
rcl
movsl
inc
sub
fdiv
sub
and
sarl
les
adc
aam
jge
test
fbstp
pop
mov
and
push
rclb
ljmp
xchg
jae
mov
mov
test
or
jo
add
push
popa
sbb
push
aam
push
rolb
pop
xchg
test
pop
xchg
xchg
cmp
movb
fdivl
jo
dec
arpl
sub
rcrb
xor
pop
adc
int
add
sbb
mov
dec
adcl
je
jo
and
negb
push
dec
mov
jnp
fstpl
dec
cli
lock
cmp
in
and
repz
sbb
lods
cltd
subb
jle
into
or
jb
das
xchg
inc
aas
xchg
notb
leave
inc
dec
pop
or
pop
jmp
out
stc
add
sarb
repnz
mov
nop
je
pop
add
hlt
lods
arpl
lret
icebp
inc
pop
adcl
cmpsl
sub
call
out
jmp
xor
mov
test
lods
sbbb
jne
sub
adc
dec
retw
mov
imul
sub
in
iret
icebp
nop
movsl
shl
enter
add
push
jmp
lods
gs
mov
xor
js
shll
dec
jo
xor
ret
sbb
cmpsb
jo
dec
xlat
mov
push
mov
mov
sub
and
bnd
ret
xchg
xor
xor
in
push
add
add
adcb
inc
imul
pushf
stos
pop
mov
lea
movsl
or
or
pop
jnp
cli
adc
and
ret
pop
pop
adc
jle
xor
and
test
mov
outsb
sub
jp
dec
frstor
inc
or
xchg
push
lods
call
adc
bound
test
or
pop
mov
mov
pop
cli
jbe
jmp
jo
addl
add
push
pop
ret
pop
sbb
pop
rolb
cmpsl
adc
loope
dec
divl
xor
sbb
cmpsl
cli
dec
das
popa
nop
out
push
aam
adc
push
ret
jge
rolb
sub
or
mov
sbb
or
imul
jbe
sbb
or
outsb
ljmp
lret
ret
pop
rcrb
call
in
movsl
cmpsb
sub
jo
addr16
into
add
and
sbb
scas
pop
sbb
cmpsb
inc
roll
in
loop
movsb
in
in
aad
out
sub
jp
imul
lods
daa
gs
fisubl
and
mov
or
lea
cli
in
mov
jo
nop
movsl
fnstenv
test
nop
enter
adc
inc
add
bound
xchg
js
jmp
inc
sub
mov
int
cmp
and
fs
mov
cmpl
int
pop
push
mov
sub
mov
mov
inc
cltd
adc
mov
inc
and
iret
xor
pop
add
pop
repnz
inc
test
incb
adc
divb
out
out
adc
repnz
mov
xlat
sbb
sbb
push
lret
imul
dec
push
pop
pusha
sbb
ljmp
xor
cmpsb
inc
inc
loopne
lret
and
pop
imul
add
ljmp
dec
mov
fcmovne
add
addb
ds
adc
js
stos
lock
rclb
cmc
pop
cmp
push
out
xchg
mov
in
shl
dec
xchg
and
or
sub
push
shlb
or
inc
sub
and
jno
cmp
adc
ret
daa
int3
movsl
ja
shlb
pop
xchg
call
lcall
dec
push
and
sbb
cmp
sbb
fcomps
pop
test
push
or
mov
fs
sbb
push
xor
aaa
nop
jge
sbb
shr
and
inc
ss
movb
add
xchg
cltd
sub
sub
nop
mov
stos
and
and
orb
sub
icebp
lret
push
xlat
pop
dec
or
dec
and
jno
sti
pop
push
sub
jns
push
test
and
mov
sbb
pop
push
test
push
add
pop
pop
add
sbb
shl
icebp
push
inc
sub
scas
dec
test
lock
inc
cmp
dec
subb
pop
cltd
cmpsb
aam
addl
clc
addb
mov
pop
aaa
inc
lcall
xor
enter
movsb
push
xchg
xor
or
xchg
jp
push
or
movsb
not
pop
lret
mov
in
pop
andb
xchg
sbb
inc
pop
pop
pslld
sub
jg
out
jno
enter
rcrb
dec
push
pop
add
sbb
push
dec
lahf
dec
or
fsubr
adc
sbb
sbb
stos
adc
push
mov
cmp
cmpsb
add
insb
sbb
stos
into
mov
cmp
pop
inc
outsl
ljmp
insb
icebp
dec
lods
xlat
pop
js
pusha
lods
inc
enter
hlt
sbb
xor
sbb
jno
leave
inc
ret
and
lret
xchg
ds
ljmp
loopne
push
into
mov
pusha
jge
stc
fmul
pop
sbb
adc
adc
sbb
and
outsb
mul
jno
xchg
or
mov
add
inc
dec
pop
add
aas
inc
icebp
movsb
pushf
lods
inc
or
imul
call
and
ja
pop
js
shrl
push
sbb
rolb
mov
mov
cmp
fmul
repnz
call
enter
xchg
rorb
inc
icebp
test
sbb
mov
jp
enter
xorb
xor
lods
add
test
adc
pop
jb
mov
add
andl
loop
or
inc
pop
inc
and
dec
or
addr16
adc
pusha
out
les
fmull
frstor
jge
mov
push
mov
ret
xor
push
iret
jmp
sub
cs
les
mov
cmpsb
inc
push
xor
pusha
push
adc
popa
and
mov
mov
or
imul
and
aaa
jmp
popa
popa
sbb
pop
addb
jecxz
js
pop
scas
jno
adc
nop
inc
pop
sahf
xchg
dec
xchg
or
mov
push
arpl
pop
imul
daa
sub
sti
pop
fistl
popl
enter
mov
mov
adc
add
mov
cmpsl
daa
adc
outsl
lret
cmp
test
dec
pop
and
fs
adc
add
push
dec
and
cmc
je
adc
adc
cmp
push
or
pop
pop
fst
lock
adc
leave
jne
addb
popf
add
xorb
sti
xchg
adc
push
push
push
cmp
cmp
and
mov
nop
push
cs
jmp
rorl
push
stos
ret
or
mov
mov
movsl
insb
pushf
fisubl
push
sbbl
imul
in
sar
or
mov
or
mov
jnp
repnz
in
mov
lcall
adc
mov
inc
mov
cmc
sti
imul
push
xchg
push
lahf
cli
xor
mov
inc
push
or
add
pop
add
inc
mov
lock
lret
fdivl
leave
gs
sbbl
pop
test
xchg
je
dec
dec
xor
sbb
fdivs
pop
fs
mov
or
ret
or
adc
rorb
aad
cmp
in
scas
js
mov
or
ja
aam
add
cmpsl
add
sub
cmp
adc
xchg
adc
aam
add
fdivrl
das
dec
mov
rclb
cmp
es
pushf
mov
inc
shlb
jo
adc
pop
add
orb
sbb
aam
adc
mov
inc
push
xchg
or
adc
pop
popf
mov
adc
or
imul
mov
or
std
push
pop
pushf
lods
pop
pusha
adc
mov
popa
add
leave
add
in
cmp
ljmp
ror
es
jno
dec
hlt
into
cwtl
sbb
adc
add
sbb
add
into
sbb
in
sbb
sbb
mov
xchg
push
in
sarl
shlb
and
in
dec
mov
add
aam
or
loope
dec
incb
enter
arpl
test
cmc
movsb
sbb
iret
call
dec
xchg
mov
inc
pop
lret
dec
add
cli
mov
sub
imull
rcrb
daa
es
fs
in
mov
or
dec
xor
out
loop
lea
fs
lods
lock
or
dec
stos
sbb
dec
popf
mov
mov
xor
xchg
adc
sbb
add
nop
add
push
test
icebp
push
or
rcrb
scas
outsb
pop
cli
test
lcall
stos
jno
xchg
sbb
pop
adc
and
cmpsb
pop
mov
les
adc
rclb
sar
pop
pop
pop
cmp
xor
mov
and
or
adc
sbb
jbe
inc
push
sbb
cli
jp
clc
and
scas
push
jmp
xchg
movsl
lds
push
call
es
or
jo
cwtl
mov
lret
sbb
xor
lea
outsb
lea
adc
aad
icebp
or
shl
inc
xchg
or
jno
sub
cmpsl
jl
push
and
push
pop
xchg
xorl
adc
push
push
push
xor
lds
lahf
or
adc
cwtl
pop
pop
and
xor
sbb
orb
cmp
push
push
mov
arpl
out
mov
lea
pop
xchg
fsubrl
sbb
sub
xor
clc
mov
insl
fdivl
shl
rcrl
mov
testb
cld
sbb
push
push
lock
insl
ret
jecxz
or
adc
inc
test
cmpsb
mov
mov
mov
push
lock
adc
adc
movsl
pop
mov
rcl
scas
roll
xchg
rol
mov
pop
sbb
push
sahf
enter
and
cmpsl
cmp
sbb
xchg
cmp
and
ds
mov
arpl
adc
subb
dec
sarb
xchg
lret
push
mov
cmp
jo
or
add
add
push
inc
push
adc
pushf
cmpsb
movl
adc
pop
cmp
fmul
insb
sbb
adc
aam
mov
mov
loop
or
movsb
xlat
push
scas
mov
cs
bound
lods
lahf
mov
lea
adc
inc
or
sbb
ffreep
mov
sbb
adc
push
xor
lea
pop
shrb
push
dec
lock
mov
shll
add
sbb
mov
sbb
sbb
mov
cmp
cli
adc
clc
adc
add
shrl
xchg
mov
out
xchg
push
sbb
lcall
inc
mov
sbb
add
inc
cld
cmpsl
add
sahf
daa
fs
add
xchg
inc
xchg
mov
pusha
cltd
jb
into
sbb
repnz
loope
lods
cld
insb
or
push
rcrl
shrb
in
popf
xchg
in
rcll
lret
sarb
inc
loopne
dec
add
jns
mov
sbb
adc
cmpsb
orb
add
and
xor
push
jne
mov
xchg
sbb
dec
dec
cmc
push
scas
call
mov
adc
sahf
or
pop
sub
cmp
cmpl
loope
inc
add
fmuls
dec
mov
hlt
xchg
push
nop
dec
bound
cli
and
sub
or
or
mov
jge
and
ljmp
pop
rclb
pop
or
mov
adcl
pop
dec
sar
and
rclb
jmp
or
pop
push
mov
sbb
cmp
and
inc
adc
rorb
xchg
inc
mov
pop
pop
jecxz
out
lock
fisubrl
and
scas
out
ret
push
push
pop
mov
mov
or
adc
ret
mov
push
xchg
and
add
sub
fiaddl
inc
inc
orl
ret
adc
inc
xchg
js
fistpll
push
jmp
imul
in
fadd
popa
mov
sbb
pop
dec
or
xchg
push
fiadds
inc
roll
stc
orl
xchg
rolb
cmpsb
sbb
mov
cmp
and
outsl
dec
sub
scas
xchg
les
jno
and
loope
test
cmc
nop
xchg
or
je
add
inc
fistps
mov
mov
xchg
or
pop
or
aam
cwtl
into
mov
jnp
sub
inc
pop
add
dec
or
sub
add
rcrb
dec
test
sbb
shlb
fadds
mov
push
push
bound
movsl
fdiv
shlb
loop
loope
in
lock
cmp
pop
stc
adc
cs
and
sbb
mov
stc
xchg
or
das
loope
push
popaw
push
into
mov
add
insl
leave
or
outsl
imul
mov
sbb
pop
inc
outsl
loop
xchg
ljmp
push
aam
mov
cmp
xor
sub
push
or
into
adc
pop
out
outsb
js
lret
xchg
push
sbb
adc
lret
and
push
push
or
or
in
stos
adc
mov
inc
dec
push
cmp
aas
adc
add
into
sbb
or
lret
sub
jmp
add
out
xor
mov
add
loopne
mov
adc
adc
lds
push
jp
loope
lock
inc
mov
add
repz
add
sbb
data16
test
js
push
jecxz
mov
cli
in
cmpsl
xor
push
or
ljmp
rolb
clc
add
pushf
dec
push
pushf
dec
in
jl
movb
cmc
ljmp
jnp
or
push
xor
je
lods
xchg
add
mov
cld
jl
test
test
mov
xorb
ret
fadds
xchg
sub
mov
mov
cmpsb
icebp
in
dec
xchg
add
lock
sti
lea
push
inc
mov
lock
jo
aas
and
dec
mov
xchg
fstps
lds
inc
inc
shlb
mov
aad
bts
or
and
pop
setno
and
movsl
mov
outsb
in
aam
lods
ss
jecxz
pop
mov
shlb
xor
pop
rclb
cmp
inc
inc
push
arpl
sbbb
icebp
lock
xor
lods
and
fistpl
fs
or
js
add
xchg
mov
fcoms
aam
jb
add
leave
inc
push
sub
out
rorb
add
dec
sub
dec
fisubs
je
fcoms
call
test
test
lret
pop
cmp
sbb
xchg
inc
push
cmp
push
adc
rclb
outsb
das
or
jle
xor
mov
mov
imul
inc
inc
and
sbb
cmc
dec
push
sub
and
dec
rorb
xchg
adc
jecxz
sbb
push
mov
xlat
pushf
mov
add
shlb
pop
outsb
lock
mov
sarl
inc
add
or
test
push
shlb
dec
jo
push
sbb
addb
ud2
mov
add
push
das
pop
ljmp
ljmp
add
sub
mov
stos
dec
test
cs
mov
pop
ljmp
cli
pop
dec
sbb
sbb
loopne
movsb
ret
mov
into
es
mov
or
sub
mov
shr
jnp
mov
pop
xchg
jp
sbb
stos
outsb
gs
jne
push
and
and
cmp
cmp
aam
dec
or
inc
fidivl
mov
loop
adc
xor
jbe
cmpsl
in
call
test
mov
dec
ljmp
xchg
sarb
adc
adc
or
dec
loopne
xchg
enter
loope
or
lret
aam
loopne
inc
ljmp
mov
dec
lods
add
add
inc
sbb
js
jbe
pop
fiadds
pop
mov
pop
fdivrs
ret
fwait
js
testb
or
and
hlt
rclb
add
inc
shlb
xchg
jo
add
lods
add
lods
test
jp
shrl
xor
das
cmp
popf
clc
cld
ret
lods
sub
dec
xor
cmpsl
xchg
add
add
inc
das
or
rolb
data16
xchg
int3
add
sbb
ret
inc
arpl
pop
bound
scas
jp
adc
js
add
fnstcw
pop
and
sarb
cmp
into
pop
xchg
enter
sbb
adc
ret
cs
sub
dec
and
inc
xor
mov
mov
lds
push
mov
xchg
sub
test
jl
jne
sub
icebp
notl
hlt
pop
cmpsl
clc
pop
pop
push
iret
push
pop
dec
mov
mov
cmpsb
je
inc
inc
imul
jl
jle
and
loope
push
or
aas
call
add
clc
and
mov
data16
fisttps
xorb
popf
lods
xchg
mov
sub
and
push
dec
cmp
and
aaa
adcb
iret
nop
shll
add
cs
das
jmp
fcoml
das
jmp
int3
mov
ljmp
push
inc
addr16
xchg
test
or
push
movb
rolb
add
adc
add
aas
add
rorb
sub
mov
mov
jle
xchg
scas
push
sbb
and
notb
mov
sbb
es
xor
add
adc
xchg
xlat
dec
inc
arpl
adc
lods
inc
imul
jo
cwtl
push
sub
mov
call
mov
jmp
dec
and
adc
imul
adc
dec
jb
and
add
add
movsl
sbb
xor
mov
pushf
or
pop
loop
add
dec
adc
adc
scas
shrl
xchg
and
push
test
mov
ret
sahf
or
or
nop
dec
cmp
filds
sbb
out
cmc
inc
fisttpll
ret
lea
and
orl
and
mov
add
mov
mov
jo
dec
pop
jl
push
sub
lods
pop
sbb
movb
into
push
pop
call
pop
add
dec
sub
ja
sub
clc
jbe
xchg
sub
bound
sbb
popf
mov
imul
pop
pop
dec
mov
pop
sbb
roll
pushf
sbb
in
and
lock
mov
push
push
inc
rcl
fwait
ret
pop
push
push
daa
je
or
add
cmp
adc
fwait
xchg
daa
rorb
and
push
roll
cmc
ficoml
imul
pop
xor
in
inc
rcrb
sbb
sub
or
pop
loop
add
sub
mov
cmp
bound
add
dec
push
pop
inc
push
push
mov
xchg
inc
mov
es
popa
xor
mov
cmp
je
jne
movsl
pusha
mov
dec
imul
in
loope
sub
imul
clc
in
ret
xchg
cs
sub
mov
ret
rclb
shrb
dec
ljmp
mul
or
sub
cli
sbb
xorl
mov
pop
roll
mov
sub
pushf
imul
sub
sub
sub
je
fstl
mov
test
fs
les
scas
pusha
inc
enter
cmpsl
or
incb
mov
xor
pop
mov
scas
cmp
xchg
incl
mov
outsl
cmp
and
test
jl
sub
lods
arpl
es
adc
xchg
dec
mov
xchg
ret
hlt
sub
outsb
mov
adcb
add
mov
push
push
and
add
sbb
imul
xchg
mov
addl
pusha
inc
aas
dec
rorb
or
jae
insb
xor
inc
enter
dec
dec
and
push
inc
dec
sbbl
loopne
mov
ds
mov
adc
ret
mov
xor
mov
mov
inc
dec
repnz
dec
cld
call
sbb
sub
add
into
movsb
and
or
add
xchg
insl
int3
or
and
pop
cmp
push
and
dec
xorl
add
mov
mov
enter
lods
test
or
add
pop
lods
dec
cmp
jb
inc
push
icebp
xorl
hlt
jbe
dec
push
mov
push
sti
and
js
rclb
ret
js
lods
adc
lret
sbb
into
pop
inc
push
mov
lds
lods
add
ja
rol
xor
fs
inc
nop
daa
pop
mov
test
pop
xor
jo
or
movsl
push
mov
movsb
or
or
push
shll
adc
jl
dec
cmp
test
cmp
dec
lret
lea
and
mov
lret
lea
xor
hlt
testl
ret
inc
outsl
cs
dec
push
jmp
or
aam
dec
sbb
xor
dec
loopne
call
adc
ret
mov
ret
sbb
sub
add
add
inc
pop
jl
lret
pop
or
ja
popf
cmpsb
xor
or
or
dec
pop
pop
xchg
adc
sbb
sbb
or
sbb
lods
push
add
xchg
js
mov
adc
ss
gs
add
push
sahf
pop
sbb
add
roll
add
mov
imul
push
call
inc
fs
imul
dec
mov
and
andl
mov
inc
in
andb
mov
jo
xor
or
or
lds
ficompl
mov
jg
xchg
or
and
arpl
rcrb
push
sub
sbb
mov
orb
add
fimuls
sub
mov
roll
inc
or
int3
jne
movsl
test
pminsw
lret
cmp
mov
ja
pop
jo
inc
cwtl
in
xor
dec
lea
mov
add
mov
insb
mov
push
and
mov
rorl
xchg
insb
icebp
and
gs
push
cmp
sbb
addl
and
xor
pop
or
out
sbb
pop
adc
pop
sbb
adc
das
arpl
cmc
jb
cld
cmp
daa
ret
adc
ljmp
push
popa
xlat
dec
jmp
out
dec
or
mov
or
push
push
mov
pop
cli
adc
bound
cmp
es
mov
cmp
xchg
and
das
in
outsl
sbb
jne
adc
inc
add
mov
jns
mov
insb
leave
mov
jo
ss
jo
or
lock
mov
in
sbb
bound
movsb
push
sti
gs
or
and
cwtl
sbb
test
lock
mov
js
mov
cwtl
xchg
mov
stc
add
cmp
rolb
adc
sbb
pop
and
ss
insl
lods
popa
rcl
andb
mov
iret
xchg
xorb
lods
cwtl
jg
adc
and
daa
cwtl
jp
jle
dec
cld
pop
or
add
push
push
mov
mov
adc
inc
xor
add
adc
jle
aas
roll
push
in
jecxz
faddp
imul
fnstsw
sbb
aam
call
orl
xor
mov
push
xor
test
push
pop
ficomps
pop
or
push
lret
mov
add
inc
push
jp
xchg
adc
lock
inc
lahf
mov
adc
out
or
inc
dec
cli
inc
and
add
sbb
xchg
or
inc
jmp
seta
jb
mov
add
arpl
add
enter
adc
xchg
push
adc
loop
add
jb
adc
inc
or
jo,pt
cltd
mov
mov
add
clc
pop
sub
les
pop
adc
cmpsb
mov
xchg
cmp
loope
mov
jmp
mov
or
adc
subb
or
loope
xlat
xchg
sbb
or
cld
out
cmp
mov
lcall
in
xchg
cmp
aam
imul
dec
inc
add
push
adc
pop
cmp
cs
sbb
test
rclb
or
lods
je
test
jecxz
jl
aam
sahf
adc
mov
jl
jnp
push
test
mov
pusha
sbb
call
enter
adc
adc
pop
aad
inc
test
repz
push
dec
sbb
pushf
dec
pop
gs
test
je
push
call
mov
and
stos
data16
movsb
ret
nop
cmpsb
shlb
add
js
xchg
lds
cmp
xchg
sub
xor
pop
aas
cld
jmp
add
push
in
les
cli
jbe
into
or
adc
fs
add
and
sbbl
push
push
rcl
push
lret
cmpb
orb
xchg
popa
mov
inc
pop
inc
in
repz
dec
loope
pop
sub
lret
push
cmp
xchg
fidivrs
inc
call
pop
dec
cmp
popf
ljmp
jge
outsl
push
cmp
mov
adc
push
aam
push
test
adc
jo
cmp
rsm
lock
insl
xor
xchg
xchg
sbb
sub
dec
add
mov
lret
cmp
leave
movsb
cvtps2pi
add
aas
pop
idiv
nop
adc
xchg
mov
mov
popa
inc
ficompl
addr16
jb
out
nop
inc
test
xor
mov
jmp
hlt
lret
push
mov
pusha
aam
dec
jbe
test
std
adc
iret
adc
inc
pop
inc
fsubp
mov
inc
pop
adc
notb
sub
ret
faddl
push
lods
dec
add
add
leave
loop
pop
xor
lock
sbb
add
push
or
jmp
sub
popf
ret
dec
outsl
or
nop
inc
dec
les
inc
add
pop
in
dec
push
add
cmc
ret
mov
unpckhps
roll
push
inc
enter
jnp
pop
shr
mov
xchg
outsb
add
mov
mov
cli
into
sub
imul
sbb
add
dec
sti
out
inc
popf
add
dec
movsl
push
add
xchg
out
into
push
inc
add
cld
les
sbb
fidivrl
icebp
or
pop
sbb
mov
xor
cmc
adcb
loopne
insb
cmp
lock
std
adc
mov
pop
shlb
mov
movsl
push
cmp
sti
movsb
mov
test
rcrl
mov
cmp
aam
or
negb
and
xor
inc
shlb
inc
jl
jno
pop
add
lods
lea
cmpsl
test
loop
jge
or
and
mov
adcb
and
xor
je
xchg
ficoms
jle
push
rclb
es
fdivr
outsb
push
sbb
int
jno
xchg
cmp
mov
out
jno
inc
dec
sarl
adc
xor
xor
mov
mov
push
call
xchg
sbb
mov
sbb
xchg
pop
dec
pop
es
test
add
fcoml
sub
cmc
sbb
xchg
inc
cmp
dec
cmpl
xor
test
mov
xor
leave
scas
aad
mov
jp
jecxz
and
push
shll
push
xor
or
inc
xor
pushf
mov
out
jns
lock
pop
dec
pusha
gs
roll
add
dec
cli
test
cld
or
jmp
sbb
icebp
call
aam
shll
shlb
xor
mov
test
outsl
jb
testb
sbbl
lret
xor
adc
fistpl
das
pop
hlt
mov
stos
sub
clc
bound
je
mov
cmp
test
add
sbb
cmp
push
ret
xchg
adc
push
push
sub
rclb
cwtl
xor
fidivl
inc
xlat
add
rcll
insb
ror
das
and
jne
sub
dec
xchg
cwtl
adc
sub
xor
js
cmp
sarl
scas
xchg
xchg
sbb
xor
or
add
test
je
push
js
call
inc
fmull
gs
jne
call
js
jo
lods
xor
sbb
mov
test
sbb
popa
add
andl
pop
inc
test
mov
insb
scas
les
rcrb
pop
push
in
or
into
push
xchg
stos
xlat
rclb
jp
or
orb
cmp
adc
mov
bound
push
add
sbbl
mov
jbe
rclb
ror
or
pop
sbb
xchg
mov
clc
jbe
pusha
sub
shll
cld
arpl
sbb
rclb
call
mov
xchg
sub
push
pushf
dec
leave
test
in
je
add
xor
cmpl
test
jmp
cmp
js
push
xchg
and
call
add
loopne
je
dec
iret
add
add
loope
jp
and
push
lods
and
sub
adc
andb
insb
push
adc
lock
cs
sub
mov
inc
push
mov
fs
jge
rol
ret
cltd
jmp
cmp
fcmovnu
adc
pusha
dec
dec
sarb
inc
adc
and
icebp
adc
lret
sub
cmp
and
push
movsb
push
test
fldl
lret
push
xchg
adc
inc
or
and
and
add
dec
fmull
xchg
les
xor
repnz
dec
pop
lods
testl
mov
ljmp
inc
dec
sub
adc
xor
xchg
test
mov
mov
sarb
xor
sub
test
push
and
jmp
jb
fcmovbe
rorb
push
push
icebp
js
and
push
aam
lock
add
sbbl
and
sbb
lahf
jno
cs
push
cmpb
jno
pop
fs
mov
mov
or
push
sub
aas
jge
or
ret
ljmp
sbbb
repnz
rcrl
add
dec
and
js
hlt
mov
xchg
dec
sbb
sbb
arpl
adc
push
push
sahf
sarb
inc
xorl
push
xor
add
dec
shlb
xchg
add
or
lret
mov
outsb
push
sbbb
aam
sub
dec
shlb
or
add
push
cmp
xor
dec
scas
push
pop
stos
movsb
mov
notb
adc
add
sbb
push
adc
lret
lods
addr16
stc
lahf
jmp
fimull
arpl
sub
xlat
fxch
add
mov
loope
cs
adc
dec
add
or
idiv
les
and
add
jp
sbb
sti
aad
adc
dec
adc
pop
stos
and
pushf
call
push
adc
add
xor
cmp
rcrb
inc
andb
imul
inc
jb
and
mov
wbinvd
fstpl
fld1
in
jbe
xchg
mov
xchg
jo
lcall
adc
dec
push
jo
gs
lock
sbbb
sbb
insb
jne
xor
dec
jo
cmp
add
sbb
pushf
mov
sarb
pop
sub
pandn
mov
or
mov
loopne
xor
sbb
dec
dec
je
and
xchg
repnz
scas
test
sahf
rcrl
ret
sbb
push
jmp
mov
mov
popa
inc
bound
lea
sub
lahf
sbb
sub
enter
add
jmp
dec
push
movsb
aam
cmp
fstps
sbb
push
cmp
inc
loop
clc
cmpsb
or
rorl
into
xorb
ljmp
add
cwtl
dec
jno
fs
pop
or
pop
scas
and
icebp
in
cwtl
roll
lcall
push
outsb
cmp
rcl
and
movsb
iret
add
jmp
std
in
cltd
cmp
or
mov
adc
fwait
icebp
test
orl
sub
xchg
es
cmp
pop
jo
sahf
mov
pop
rolb
inc
imulb
add
movsl
imul
das
fcomp
sbb
jmp
adc
and
mov
mov
rclb
insb
mov
adcb
imul
and
je
mov
sub
fcomip
adc
push
js
enter
or
loope
and
cwtl
lods
je
out
sbb
adc
ljmp
lds
cwtl
or
push
cmp
mov
mov
mov
ss
mov
jb
xor
fsubs
push
dec
pavgb
out
pop
or
or
les
outsb
clc
jo
mov
lret
in
aam
push
addr16
and
xchg
jl
mov
mov
lock
and
mov
adc
add
cmp
push
dec
bound
sbb
dec
dec
flds
pcmpeqb
cli
cmp
pop
add
add
jbe
mov
aam
cmc
mov
or
jmp
pop
loopne
jp
adc
loop
lret
sbb
ret
add
mov
jo
aam
enter
imul
xor
adc
je
sbbb
ljmp
adc
test
out
or
lea
sub
hlt
insb
inc
mov
ret
subl
xchg
jno
adc
test
xchg
adc
fisubl
rcrb
and
out
xlat
xchg
cmp
sahf
shrb
cmp
es
add
push
mov
mov
lret
push
push
adc
add
sbb
sbb
cmp
fistpl
cmp
or
lock
movsl
fcomp
sbb
cmp
movsb
push
rcrb
xor
je
dec
sub
sbb
hlt
sbb
xchg
test
aam
mov
cmp
test
or
push
jmp
dec
or
add
loopne
mov
leave
cmp
dec
xchg
xor
pop
mov
dec
loope
push
shl
rcll
push
fmuls
xor
orl
mov
or
cmc
insb
jl
mov
mov
push
rol
jg
pop
mov
dec
cs
movsb
fistpll
mov
pushf
add
cli
xor
jmp
push
add
dec
cmc
and
mov
push
inc
out
or
mov
xchg
sbb
mov
jne
jmp
mov
arpl
xor
nop
js
adc
aam
pop
cmp
xor
add
xchg
sbbb
movsl
adc
mov
mov
pop
lea
add
or
jge
mov
std
clc
jo
push
aaa
add
push
pop
or
shld
or
test
imul
imulb
aaa
sbb
faddp
pop
cld
xchg
nop
xor
je
roll
outsl
fmuls
add
pop
xchg
rcl
and
sbb
in
mov
push
add
inc
lods
cltd
add
push
push
xor
fcomps
lds
mov
jmp
into
push
js
in
shl
mov
popf
dec
sbb
push
jmp
dec
sub
shrb
stos
pop
pop
out
lret
inc
pop
cmp
ds
xchg
add
sbb
inc
dec
cs
incb
ret
jle
inc
add
js
and
jo
lods
lods
jnp
pushf
xor
push
pusha
sahf
dec
jb
sbb
xchg
mov
rolb
es
lock
mov
movsb
push
lods
ret
aam
xchg
or
push
mov
cmp
fcmovne
and
fmull
ret
jp
stc
xor
mov
fimuls
or
mov
lret
cmp
mov
and
cwtl
jb
ss
adcb
mov
adc
pop
mov
adc
rorb
and
nop
pop
mov
jp
in
sub
pop
cmc
push
shr
mov
adc
pusha
sub
xchg
xchg
sbb
pop
xchg
mov
pop
cwtl
xor
fcompl
sbb
and
fildl
mov
pop
lods
inc
les
bound
add
ret
add
jbe
xchg
xorl
mov
mov
add
add
push
add
and
dec
and
sbb
push
and
jne
loopne
push
mov
je
lock
ret
pop
push
in
inc
dec
stos
adc
xchg
mov
cmp
jmp
adc
push
les
test
adc
clc
cwtl
and
cmp
shrb
and
jbe
or
fidivs
mov
aaa
and
or
push
or
adc
cltd
jmp
sahf
ljmp
add
inc
push
rclb
shll
mov
roll
les
dec
enter
sahf
rorl
and
mov
mov
pop
jb
inc
test
sbb
xchg
inc
or
push
aam
push
fidivrs
mov
out
add
cmp
dec
adc
pop
dec
xchg
mov
or
mov
insl
add
enter
stos
orb
cmp
test
push
lea
jge
and
sub
mov
lods
xor
or
push
jp
aaa
out
js
inc
xor
or
imul
ljmp
pop
mov
pop
mov
xor
sub
cmp
movsb
mov
lods
adc
and
push
loope
push
les
and
xchg
rcrb
pop
inc
push
and
mov
mov
pop
das
cmpsb
or
adc
dec
fsubr
mov
sbb
jl
add
and
pop
cltd
jmp
fldl
js
xchg
sti
adc
or
push
add
cld
xchg
dec
push
jne
dec
mov
pusha
mov
das
xorl
mov
xchg
jp
fs
xchg
sbb
loop
in
jno
aad
in
mov
push
add
test
push
sub
push
mov
test
popa
cltd
add
jmp
jmp
popa
loopne
dec
loope
scas
loope
or
and
pop
aad
fidivs
mov
xchg
xor
sbb
fisubrs
sbb
mov
call
push
imulb
mov
sbb
xchg
mov
ja
sbb
mov
jae
notl
dec
mov
or
adc
cmp
xchg
mov
test
jmp
inc
fiaddl
xlat
loopne
sarb
mov
mov
cmp
ljmp
pop
inc
add
mov
mov
dec
mov
test
je
cwtl
rcll
add
sahf
xlat
dec
push
dec
add
xchg
enter
pusha
lods
pop
sbb
loopne
and
cmp
loopne
mov
cld
jb
add
lret
xchg
mov
push
xchg
mov
xchg
dec
inc
clc
xchg
push
sbbl
sbb
sbb
pusha
std
cmp
in
mov
les
push
jecxz
ss
sarl
adc
imulb
orb
xor
addr16
xor
int3
cmp
sar
xchg
sahf
and
jl
loopne
ret
inc
or
ret
xlat
stos
scas
mov
add
popa
add
mov
adc
jo
sbb
or
push
ljmp
cmp
repnz
add
outsb
imul
push
or
push
nop
lock
clc
pop
sbb
jmp
adc
adc
lods
xchg
xor
or
repnz
pusha
sub
add
sub
push
aas
insb
jmp
lock
subb
sbb
cmp
call
shlb
daa
xor
or
cmovae
pop
push
mov
and
push
pop
les
mov
fildl
leave
add
adc
sub
pop
ret
push
xor
loopne
xor
dec
push
lods
sbb
mov
sbb
rclb
sarb
scas
dec
mov
out
add
and
repz
hlt
or
cmpsb
imul
stos
sbb
out
push
push
data16
pop
xchg
xor
rol
mov
and
mov
sbb
xchg
subl
bound
std
das
lods
inc
daa
fwait
test
das
sub
dec
mov
test
cmp
add
cwtl
jo
mov
mov
inc
add
daa
dec
add
pop
cwtl
addb
test
push
cmc
dec
push
iret
gs
mov
popa
xchg
mov
pop
and
push
fmuls
adc
pop
daa
ljmp
dec
cmovno
add
or
adc
dec
or
fwait
add
and
stc
sbb
push
rclb
sub
cltd
and
shlb
mov
ror
loopne
iret
push
dec
push
or
pop
sub
out
cmpl
popa
or
aam
sahf
ss
lock
mov
dec
mov
push
imul
adc
lahf
or
mov
stos
xchg
dec
imul
inc
push
add
shlb
pusha
and
mov
mov
adc
push
fcoml
sub
loope
dec
inc
dec
sbb
jp
movsb
aam
paddsb
andb
adc
shll
pusha
mov
popl
adc
arpl
inc
into
daa
dec
xchg
xor
jge
lods
mov
xor
dec
lods
xlat
dec
sub
mov
and
or
mov
cmpb
sahf
repnz
rcll
inc
cmp
pop
xchg
xchg
push
test
cltd
aad
jbe
jnp
jp
xchg
xchg
or
cwtl
or
nop
ret
or
push
nop
sbb
es
sub
mov
imul
aad
and
test
out
mov
inc
xchg
mov
or
and
inc
xchg
mov
jp
ds
xchg
add
iret
inc
add
inc
ret
cli
lcall
dec
sbb
mov
movsl
jo
xor
dec
arpl
movsb
and
adcl
add
adc
inc
movsl
inc
leave
or
movsl
add
dec
add
adc
int
pop
jp
mov
jbe
add
xor
or
xchg
lret
test
les
push
icebp
adc
ljmp
and
aam
mov
dec
mov
inc
popa
rcrb
push
adc
rcrl
fldl
dec
xchg
ja
rolb
into
cmp
mov
out
add
ret
adc
mov
imul
or
mov
inc
and
or
mov
ss
les
ja
cmc
test
lea
or
cmp
xchg
adc
push
xchg
test
push
xor
lret
int
aam
push
sub
fadd
add
rolb
test
xchg
cmp
ljmp
jo
leave
outsb
adc
test
rolb
stos
add
push
and
inc
aam
xor
jmp
scas
xor
xor
jecxz
mov
and
push
sbb
inc
das
xor
xor
xchg
pop
enter
lret
lock
lock
and
adc
add
add
xchg
mov
lea
sbb
int3
pop
push
js
pushf
push
sub
push
jo
lods
mov
ljmp
aad
aam
xchg
shlb
lea
and
movsl
testb
jns
repz
shlb
shlb
ds
dec
jno
push
rclb
xchg
pop
mov
imull
push
pop
pop
jmp
inc
adc
mov
inc
inc
rcll
mov
or
jns
data16
inc
rorb
js
sarb
call
sbb
loopne
adc
xor
push
sarl
jl
sbb
call
lods
adc
nop
fildl
sub
fs
lods
fmulp
inc
outsb
loopne
or
cmp
pop
or
mov
orb
bound
xor
mov
repnz
dec
xchg
cmp
add
push
orl
out
and
loopne
push
nopl
call
cwtl
sub
push
icebp
mov
sbb
sub
lea
inc
inc
xor
movsb
les
push
dec
fsts
jne
fs
push
outsl
xor
rorb
adc
mov
lret
scas
push
dec
shlb
and
and
and
push
lret
sbb
push
dec
ds
dec
lds
adc
aaa
aad
ret
mov
mov
pop
push
loope
jb
jno
insb
loopne
imul
cmp
aam
stos
mov
dec
aas
sbb
pop
add
mov
cltd
jg
push
and
sbb
test
xorb
mov
or
inc
in
ret
mov
add
mov
mov
or
gs
sbb
push
js
aaa
or
adc
rcll
rolb
daa
mov
pop
and
sbb
sbb
jns
repz
add
push
mov
out
aas
add
mov
sbb
rcll
cmpsl
adc
pop
cltd
fcmove
push
add
sbb
fistpll
adc
data16
cmp
and
or
and
add
in
mov
mov
popa
inc
push
mov
xchg
pop
out
inc
prefetch
lea
mov
inc
test
jp
popa
dec
sub
push
enter
lods
jp
and
jae
sarb
xchg
adc
sarb
aad
ss
add
adc
dec
add
das
dec
sub
dec
ret
lcall
jo
jbe
mov
ds
jge
rcrb
test
add
loopne
sbb
mov
add
roll
push
test
and
int
adc
mov
mov
rolb
stc
rclb
cltd
lods
fcom
and
cli
push
sbb
sbb
movsb
add
fldt
arpl
shr
fwait
ret
dec
aam
rcll
mov
push
dec
js
movsb
hlt
xor
add
xor
shlb
lods
pop
add
adc
dec
xor
inc
test
pop
xor
out
dec
cli
movsl
jbe
bnd
xchg
hlt
fcoms
cmp
push
sub
sbbb
cmc
sbb
or
add
adcb
sbb
jp
xchg
adc
in
inc
dec
adc
cmp
and
mov
xchg
pop
push
das
loopne
mov
pop
sub
shr
and
loopne
or
imul
js
int3
dec
cmp
nop
inc
jge
add
xchg
in
cwtl
ja
sarb
push
movsb
outsl
or
pop
adc
rclb
wrmsr
ret
push
in
rolb
xchg
sub
push
xor
adc
adc
orb
repnz
nop
sub
out
sub
pop
mov
sbb
sbb
add
adc
adc
cmp
scas
xor
hlt
sub
jno,pn
test
arpl
pushf
push
movsb
sbb
dec
fdivs
cmp
bound
faddp
adc
fcom
xlat
adc
call
sbb
enter
mov
cs
or
inc
lock
fucomi
push
fsubrs
loop
dec
popa
push
rolb
rcl
sub
scas
or
push
jo
out
or
and
lock
mov
enter
ds
push
rolb
lods
adc
cmp
jmp
sahf
jle
roll
shrb
ds
adc
cmp
loopne
dec
push
jmp
xor
jp
or
call
loop
lds
or
cld
inc
loope
lock
mov
imul
lods
sub
scas
add
ljmp
mov
dec
call
sbbl
sbb
add
andb
outsb
pop
inc
test
sub
fldcw
mov
add
aam
add
fcmovnbe
scas
xor
jnp
jle
adc
pop
push
mov
out
inc
pop
psubsb
push
xchg
or
jge
pop
mov
aam
idiv
dec
or
test
xor
sub
or
shrl
inc
mov
xadd
mov
push
mov
push
mov
and
pop
push
and
or
or
mov
clc
sbb
clc
cmp
or
push
mov
push
add
out
adc
cs
push
sub
push
in
adc
lea
or
add
mov
sbb
and
add
or
lcall
sub
or
pop
in
adc
sub
bound
xor
sbb
dec
jmp
inc
pop
movsb
xchg
mov
nop
xchg
lahf
dec
xchg
rorb
dec
pop
popa
daa
lock
add
mov
adc
bnd
icebp
sbb
gs
pop
xchg
add
dec
sbb
orl
movsb
es
nop
lea
adc
and
or
add
ret
sub
test
jno
ds
lock
shll
cmp
add
and
orl
inc
mov
xor
mov
cmp
mov
or
mov
and
mov
xchg
push
out
in
add
mov
ret
sbb
xchg
dec
or
push
cmp
sbb
in
sbb
aam
inc
pop
scas
and
lea
ljmp
xor
adcb
pushf
add
ret
loopne
sub
mov
gs
addr16
xor
cmpsb
xor
pop
rclb
es
cmp
pop
pop
add
ficomps
adc
dec
mov
ss
rcl
sbb
push
mov
dec
sub
xlat
sbb
dec
inc
or
add
or
aam
cmp
add
cmp
enter
pop
das
mov
cmp
and
ljmp
add
mov
push
repnz
int
mov
or
mov
pop
pushf
mov
add
nop
sbbb
dec
popa
sbb
and
push
or
add
out
mov
into
mov
push
dec
lret
push
rorb
push
lds
or
repnz
mov
pop
cmpsb
int3
in
adc
cmp
inc
xor
arpl
hlt
cmp
jns
mov
push
out
sbb
shr
stos
or
inc
adc
push
dec
push
xchg
jne
pop
repnz
adc
std
mov
sbb
pop
adc
pop
and
add
pop
inc
push
dec
insl
pop
adc
xchg
icebp
push
mov
mov
and
xchg
adc
fsts
cwtl
sbb
mov
sub
cmp
and
inc
flds
jbe
cmp
add
stc
lret
dec
leave
pop
pop
adc
sbb
push
mov
jp
js
aaa
std
lock
mov
enter
adc
divl
push
xchg
mov
loopne
stc
mov
jns
adc
mov
mov
mov
mov
xchg
cld
stc
js
sbb
movsl
test
aas
mov
stc
sbb
insl
dec
test
rolb
push
les
mov
or
xor
cltd
and
push
adc
call
adc
mov
pop
jmp
push
and
and
mov
add
pop
xor
cltd
ret
imul
pusha
xor
dec
mov
xor
mov
inc
popa
test
icebp
arpl
jne
cmp
mov
cmp
in
and
mov
in
dec
pop
shlb
incl
loop
inc
out
outsb
imul
sbb
push
xor
mov
dec
test
jp
cmp
jl
pop
adc
daa
push
mov
std
movsb
push
adc
xor
loop
cmp
aam
jnp
adc
roll
fists
lret
xlat
and
adc
push
mov
mov
sub
push
add
push
mov
popa
fldl2e
roll
or
lret
jmp
dec
mov
js
jle
in
ljmp
loope
aaa
or
scas
add
pop
loope
pop
pop
mov
test
mov
cmpsl
jns
add
cmp
xlat
push
add
sbb
mov
pusha
and
or
test
lret
add
test
shr
enter
sbb
dec
or
les
ja
rclb
les
rorl
add
inc
mov
jle
fists
daa
push
lods
pop
or
nop
add
fadd
push
mov
test
mov
inc
arpl
pop
rclb
loope
pop
jns
push
movsl
pop
je
sub
push
and
inc
sub
jo
movsb
add
xchg
pusha
push
lret
lret
lods
add
ror
scas
cwtl
test
adc
mov
add
loopne
test
inc
rcrb
jo
sub
jmp
rorb
clc
scas
andb
and
adcl
outsb
adc
and
inc
cmp
jmp
test
cltd
mov
loopne
sbbb
mov
andb
or
xorb
outsl
add
or
sub
stos
inc
pop
mov
js
pop
jmp
test
test
or
sarb
shll
pop
dec
call
sbb
cwtl
or
mov
push
ret
imul
cli
test
or
cmp
adc
dec
mov
stc
sbb
popa
jmp
xchg
mov
xor
ss
sub
out
pop
mov
mov
sbb
xchg
add
xor
enter
push
jmp
leave
xchg
je
sbb
ds
mov
sbb
icebp
push
jo
or
cmp
push
ret
add
push
test
push
sub
faddl
rclb
xrelease
hlt
add
xor
or
xor
sbb
or
pop
jge
rclb
push
adc
mov
add
add
call
sbb
inc
lods
mov
cmp
sub
mov
and
or
int
cmp
pop
or
and
punpckhbw
rcll
in
pop
outsb
mov
xorl
or
scas
dec
loopne
push
push
pop
push
insb
cwtl
es
cmp
roll
pop
push
mov
xlat
daa
jmp
push
mov
sub
or
dec
mov
or
outsb
clc
ret
pusha
sub
lret
dec
cmp
es
or
jo
or
inc
push
adc
jo
aam
mov
fincstp
orb
pop
xchg
pushf
sbb
ret
ret
mov
nop
and
sub
insb
inc
mov
stc
cmp
adc
xchg
sbb
fdivs
cs
insl
das
mov
lods
jo
dec
pop
jo
arpl
jp
cmpsb
rorl
lock
les
imul
inc
pavgw
sbb
rorb
cmpsl
enter
loopne
pmulhw
mov
nop
or
add
test
div
xchg
jo
and
popa
inc
movl
bound
or
lock
push
jp
add
shlb
sub
repnz
movb
push
sbb
movsb
xchg
inc
and
pop
shlb
adc
iret
repz
sbb
sbb
loop
mov
into
add
or
or
and
movsl
andl
sub
pop
mov
movsl
js
out
pop
inc
pop
mov
movsl
dec
or
mov
adc
mov
movsl
pop
sbb
dec
xchg
and
clc
orb
mov
stc
jp
pop
push
repnz
sahf
inc
adc
add
cmpsl
dec
pop
fcmovb
sbb
out
sti
mov
xchg
pushf
icebp
popa
sahf
mov
shrb
sbb
xor
pop
and
adc
or
cmp
pop
imul
out
sbb
loopne
add
jmp
push
add
dec
dec
add
or
cmp
je
add
lahf
scas
out
adc
pop
lret
shlb
lods
js
leave
sbb
adc
shld
xchg
mov
daa
inc
sarl
lcall
mov
or
push
pop
dec
push
sarb
test
sbb
or
fcoms
lock
movsb
nop
int3
iret
movsb
xor
dec
out
mov
fsubs
stos
jp
aaa
inc
jns
pop
in
pusha
dec
in
cmp
cmp
push
xor
out
push
dec
xchg
mov
add
sarl
addl
jo
loope
fdivrl
add
movsbl
das
adc
sub
leave
inc
push
pop
or
pop
ret
mov
test
dec
and
jns
push
sahf
add
push
fadd
pop
orl
lock
adc
inc
mov
inc
sbb
mov
sub
pusha
and
pop
stos
insl
adc
pop
mov
loopne
loop
mov
xchg
jmp
arpl
shl
mov
xchg
dec
jl
call
adc
ret
and
test
sbb
or
add
pop
in
xor
shl
sbb
push
jg
faddl
loope
mulb
push
mov
test
mov
xlat
cmp
loopne
xchg
cmc
loopne
cmpsl
pop
mov
push
stos
or
call
sub
adc
add
pop
jl
sbb
loop
add
loope
sbb
or
inc
add
clc
add
sub
fsub
or
adc
cmp
hlt
xchg
or
or
fs
stos
adc
push
cld
push
mov
stc
and
inc
jns
les
pop
push
pop
xchg
pop
or
xchg
xchg
ret
bound
jmp
push
fs
out
xor
push
test
jecxz
stc
xchg
xor
rolb
dec
adc
out
and
in
xchg
mov
bound
xchg
mov
test
andb
sbb
test
mov
mov
push
push
mov
adc
pop
lret
out
and
pop
xlat
sbb
ret
aam
lock
ret
outsl
sarb
int3
ret
sub
pop
pushf
add
or
lea
add
test
mov
push
lret
lret
or
loop
rclb
arpl
xchg
cmp
adc
xchg
and
popf
jp
aaa
or
cmp
stc
adc
add
sbb
jp
cmp
cli
xor
inc
mov
int3
ss
xchg
jb
rol
sbb
add
movsl
mov
sbb
jns
jbe
sbb
and
xchg
and
es
add
add
xor
jne
mov
push
js
mov
jle
cmpsl
or
mov
loopne
roll
jbe
sbb
push
mov
jmp
add
adc
pop
cmpl
movsb
ret
or
leave
mov
pop
xchg
scas
jno
pop
jo
lock
xor
fstps
xor
pop
mov
xchg
lods
push
push
push
add
movsl
cmpl
mov
xchg
mov
test
add
pop
inc
jae
sbb
rcll
jge
out
icebp
in
and
orl
push
sahf
push
cmp
and
inc
push
adc
ja
mov
or
cs
rcrb
pop
pop
push
mov
and
jne
in
ret
movsl
pop
xor
adc
push
jecxz
addr16
pop
lret
inc
je
mov
cli
xchg
pop
movsl
rolb
mov
xchg
pop
ljmp
push
push
and
nop
loope
xor
push
sbb
push
movsl
andl
sub
xor
test
jns
sbb
dec
bound
lock
push
mov
sbb
add
les
sub
sub
dec
inc
movsl
shrb
out
ror
inc
test
nop
sbb
rcrl
dec
lea
pop
sub
jne
imul
ret
and
mov
adc
sti
enter
cmp
mov
add
stc
jl
and
push
test
insl
inc
aaa
push
je
and
sahf
mov
push
xlat
sbb
mov
xor
mov
or
sub
mov
sti
sar
sbb
xchg
and
movsl
loope
xor
outsl
lock
or
popa
daa
inc
shll
pop
js
test
ds
mov
and
inc
pushf
push
xchg
roll
test
popa
mov
add
enter
test
mov
enter
push
hlt
dec
or
movsb
lock
popf
and
cs
mov
dec
insl
pop
sbb
or
rorb
ljmp
lods
das
and
adc
test
sub
fs
push
pop
add
pop
and
es
das
adc
push
mul
cli
mov
pop
add
and
loop
mov
mov
lock
cmp
or
aas
in
rclb
sbb
and
adc
clc
pop
les
jge
mov
test
xchg
push
sbb
out
sub
sub
repnz
sbb
adc
pop
aam
mov
enter
mov
mov
and
cmp
enter
out
andl
and
cmp
rolb
xabort
cltd
xor
pop
pop
mov
lock
sbb
mov
add
int
dec
mov
arpl
mov
or
lret
push
sub
lret
add
mov
adc
mov
or
fwait
push
add
rcl
add
or
dec
add
cwtl
push
or
int3
mov
adc
xor
sbb
pop
add
push
and
das
pop
mov
pop
adc
or
repnz
sbbl
xorb
mov
pushf
out
fxch
out
cs
jo
jl
or
fsts
dec
popf
daa
sub
std
mov
add
in
sbb
cmc
subl
adc
push
rclb
inc
dec
mov
fld
lret
icebp
and
sbb
int3
xor
sbbl
xor
lock
push
jne
mov
dec
pop
hlt
cmpsb
sub
repz
jnp
out
lcall
add
imul
stc
and
fistpl
and
stc
push
dec
shrb
add
xorl
das
lods
lea
cs
jns
sub
and
or
ljmp
or
out
nop
inc
sub
push
andb
scas
mov
inc
or
push
cli
test
mov
cs
shlb
xchg
cmp
loop
jno
pop
test
push
and
mov
pusha
nop
xor
loope
dec
push
stos
shr
add
xadd
dec
adc
pusha
and
adc
mov
xor
or
sbb
mov
sbb
xor
imul
push
test
sbb
sbb
sbb
adc
push
push
aam
dec
rcrb
cmpl
and
in
dec
xchg
stc
cmp
test
lcall
add
sbb
mov
out
and
ss
aaa
sub
ljmp
xchg
ljmp
mov
xor
push
outsb
sbbb
call
or
or
add
add
imul
nop
jle
sahf
xorb
mov
lock
nop
push
inc
mov
cmp
jp
orb
jmp
or
aam
xchg
movsl
xchg
pop
popa
sbb
push
dec
add
add
mov
cs
or
add
ret
xchg
lcall
push
push
or
push
mov
jle
jbe
push
inc
rol
mov
sub
dec
clc
push
mov
xor
push
shll
arpl
add
and
xor
in
in
or
jae
ret
or
loope
fucom
jo
and
pop
jecxz
dec
xchg
cli
push
inc
jp
jae
or
and
pop
mov
add
into
sbb
dec
or
scas
sar
outsb
sahf
add
imul
cmp
bound
dec
jge
out
rcrl
inc
mov
push
jge
test
mov
sub
pop
ret
pop
xor
sbb
push
cmp
add
inc
stc
adc
test
mov
lock
dec
add
imul
sub
movsb
pop
mov
pop
adc
lret
xchg
inc
xor
mov
loop
mov
sub
rolb
sbb
sbb
push
orl
and
fidivs
into
mov
int3
or
aas
repnz
adc
cmp
cwtl
mov
or
or
xor
cmpsb
pop
jecxz
push
fstpl
mov
sub
mov
out
mov
pop
enter
rcll
cmp
xor
ja
push
test
push
inc
or
andb
add
icebp
imul
xor
add
mov
jae
clc
ret
or
int3
inc
nop
test
xor
xchg
in
jl
dec
dec
adc
xor
cld
lock
pop
shr
loope
mov
jp
mov
lahf
outsl
scas
lock
insl
test
add
xchg
sbb
mov
pop
imul
sbb
cmc
sbb
dec
push
push
inc
pusha
pop
test
adc
sahf
adc
rcrl
lcall
pavgb
cmp
jp
rorb
sub
push
pop
hlt
inc
sbb
mov
orb
sbb
adc
xor
test
dec
xor
xor
mov
nop
mov
subb
mov
pop
push
push
or
push
cmp
lret
call
cwtl
xchg
and
movsb
pop
inc
cmp
cmp
adc
icebp
xor
add
pusha
cld
or
loop
or
rclb
loope
push
js
pop
push
je
mov
pop
leave
in
repnz
icebp
adc
or
mov
testl
mov
add
cltd
push
mov
adc
ss
lahf
push
or
sbbl
sbb
mov
xchg
cmpsb
lods
adc
xor
push
nop
test
pop
pop
jp
mov
mov
push
mov
add
repnz
mov
xchg
and
adc
outsb
rcll
adc
xorb
xor
push
insb
add
daa
add
bound
imull
loope
add
bswap
xchg
push
fsubr
adc
icebp
mov
jbe
pop
cmp
adc
push
push
dec
pop
adc
arpl
in
push
push
ret
pop
or
inc
xor
or
add
adc
addr16
dec
add
or
jle
inc
push
cmp
push
test
pop
xchg
mov
mov
sbb
fcmovu
and
adc
aam
cmp
and
addl
repz
xchg
push
mulb
fiaddl
push
adc
xchg
xchg
nop
sbb
mov
inc
cmpsb
mov
add
jge
pop
xor
xchg
loope
arpl
rolb
enter
push
mov
pop
adc
push
or
cmpsl
fdivrl
ret
mov
xchg
dec
test
lcall
loopne
stc
sub
sahf
and
jl
popa
test
cmp
lods
dec
fistps
dec
call
or
pop
pushf
mov
push
dec
insl
shl
mov
sub
pop
call
outsb
add
push
xchg
push
pushf
mov
rcr
or
xchg
add
and
cmp
cmpsl
or
inc
jl
push
es
mov
adc
xor
sbbb
mov
call
ret
xchg
sbb
add
dec
clc
push
xor
aaa
adc
jo
or
ljmp
ficoms
std
or
push
data16
mov
in
inc
push
sbb
jo
pop
outsl
mov
or
jae
or
lods
test
bound
adc
ficoml
orb
sbb
sbb
cmp
pop
xchg
push
jmp
cmp
sub
sbb
dec
mov
jp
lods
mov
ljmp
or
jo
push
and
mov
push
xchg
adc
gs
inc
sbb
inc
dec
lea
loope
rcl
dec
sub
push
nop
push
xor
or
sub
movsb
xchg
adc
rolb
ret
sbb
into
mov
mov
sub
adc
push
scas
sub
repnz
inc
ljmp
rcl
pop
mov
xchg
cmpsb
inc
or
jo
arpl
inc
sbb
inc
les
xchg
orb
mov
pop
sysret
add
or
or
lea
add
xor
mov
dec
pop
sbb
out
push
dec
ljmp
lret
push
stos
pop
mov
and
or
lret
mov
scas
sbb
push
sbb
shlb
xchg
mov
js
movsb
das
outsb
imul
cmp
and
sbb
stc
rcl
adcl
sub
cmpsb
mov
dec
js
gs
adc
clc
imul
push
inc
cwtl
aaa
mov
std
in
or
icebp
dec
mov
adc
mov
ja
mov
loop
dec
bound
sub
or
or
hlt
cmpsb
push
cmp
or
push
sub
orb
sbb
rorb
dec
fldcw
fwait
rorb
inc
or
or
inc
es
sbb
scas
enter
nop
imul
pusha
movsl
or
ret
mov
pop
push
xor
xor
adc
xchg
andb
test
mov
xchg
dec
add
cmp
repnz
push
adcb
sbb
push
push
add
pop
je
popa
dec
dec
outsb
jne
pop
loop
mov
cmp
and
ds
xchg
lock
push
das
add
xor
dec
loop
or
jno
fwait
sub
popa
pop
pusha
jae
adc
push
subb
mov
cmovs
int3
mov
leave
inc
mov
xchg
mov
cmp
mov
pop
xchg
mov
fstpt
idivb
pushl
pop
push
daa
xor
mov
push
fidivl
test
push
sarl
inc
leave
cltd
fadds
aaa
pusha
sti
out
das
cmp
sbb
cs
cmp
loop
int3
jge
scas
xchg
and
dec
sub
lods
jnp
xchg
loopne
and
adc
or
dec
and
sub
aam
xor
pop
pusha
sbb
enter
dec
movsb
add
jmp
shl
dec
mov
push
sbb
and
insb
and
shll
icebp
mov
cmp
mov
lcall
or
sbb
test
sbb
adc
or
inc
in
pop
ror
adc
jmp
cmp
pop
pop
xchg
mov
rclb
movl
add
push
jg
cmovnp
clc
nop
mov
or
push
sbb
jp
inc
and
cmc
testl
lock
dec
iret
or
addl
inc
jge
cmp
or
sbb
mov
push
cmc
into
lock
sub
es
xlat
push
mov
ror
add
xchg
xlat
push
xchg
js
mov
insb
push
pop
or
and
scas
lods
push
inc
cmp
or
pop
shl
popa
sub
call
pop
or
and
push
or
shrb
sbb
sub
cmp
jge
iret
rol
shrb
iret
test
out
aaa
mov
movsb
mov
and
mov
mov
pushf
jl
bound
insl
mov
roll
fidivs
fisttpl
pop
push
stos
push
inc
leave
add
mov
pop
ficomps
sub
repnz
inc
mov
daa
and
test
dec
sub
adc
pop
aad
xchg
dec
add
ljmp
and
pop
sahf
mov
xchg
out
or
mov
and
adc
dec
stc
adc
add
inc
sbb
inc
jne
adc
les
dec
pop
mov
xor
inc
addb
flds
mov
pop
icebp
data16
pop
arpl
xor
rcrl
pop
jmp
cli
and
xchg
cmc
nop
aas
push
jno
jns
jbe
loope
add
fst
and
loope
mov
xchg
mov
pop
jl
pop
pop
adc
mov
out
adc
jge
es
xor
or
sub
sub
mov
mov
push
dec
or
adc
xor
test
fisttpl
xchg
pop
adc
ljmp
pop
inc
lcall
mov
pop
mov
and
push
push
fistpll
test
sbb
and
fwait
stos
out
orb
push
sub
pop
pop
mov
xchg
dec
sbb
xlat
and
hlt
xchg
aas
lfs
xchg
add
rorb
sbb
sub
test
cmpsb
add
adc
fnstenv
scas
in
repnz
ficoms
fsubrl
neg
movsl
and
sbb
test
mov
clc
dec
ror
addr16
sbb
js
sbb
cmp
adc
andb
pop
jecxz
sub
roll
adc
or
loopne
push
es
or
or
dec
cmp
add
dec
cmp
adc
cmp
mov
xor
bnd
jecxz
rolb
add
dec
push
cli
or
imul
mov
or
or
cmc
enter
ret
mov
jp
push
sbb
inc
lahf
nop
mov
rorb
pop
sbb
xor
add
outsl
in
xchg
add
dec
cld
jge
xchg
test
shll
dec
ret
mov
push
push
shlb
lock
mov
or
sbb
xchg
nop
mov
lret
cmp
ljmp
pop
das
outsl
push
adc
xor
lret
jo
movsb
dec
dec
jle
rclb
sub
add
leave
xor
push
and
add
cmpsl
push
addr16
push
clc
je
or
sbb
sub
mov
adc
add
pop
xchg
mov
mov
mov
fdiv
push
call
push
sbb
mov
add
adc
xchg
inc
test
fwait
or
pop
push
xchg
jmp
add
or
jne
sbb
cltd
jo
adc
cwtl
ret
vmwrite
cmp
cmp
push
adc
dec
or
ret
add
push
xchg
lock
ss
dec
repnz
pop
dec
xchg
push
lret
xor
sahf
push
pop
arpl
movsb
pop
xchg
imul
xchg
adc
hlt
movntps
addl
arpl
xchg
flds
xchg
cli
inc
je
and
adc
sbb
mov
jne
movb
rcrl
ret
push
adc
dec
mov
rorl
push
jb
and
adc
pop
lret
dec
add
jmp
pandn
or
push
fsubrp
mov
xor
adc
xchg
inc
or
dec
in
shlb
lret
lret
test
push
jb
mov
dec
jns
fbld
hlt
xchg
sbb
sbb
pop
push
lret
sbb
sbb
add
sub
imul
or
loop
jmp
lea
test
popa
cmp
ffree
cmc
psubusb
sub
sub
or
sbb
jg
mov
flds
adc
imul
scas
ret
mov
ret
inc
movsb
pushf
sub
inc
xor
sub
clc
jg
imul
push
mov
cmp
xchg
add
and
sbb
adc
enter
and
inc
dec
push
fwait
inc
js
adc
call
dec
push
fadds
add
or
push
pop
sub
pop
movb
mov
dec
fwait
adc
cwtl
jo
mov
pop
cwtl
pop
add
test
adc
pop
push
in
and
sub
mov
mov
sbb
xor
jb
add
xchg
inc
sub
loop
mov
cmp
dec
mov
ljmp
rorb
pop
cmpsb
scas
cmp
add
or
loop
call
sbb
test
leave
cmp
andl
dec
mov
adc
test
loopnew
mov
cmp
or
icebp
and
mov
add
sbb
adc
xor
adc
lock
dec
shrl
hlt
fs
cmpsl
xor
cwtl
or
ja
loop
xchg
cwtl
testb
mov
and
rcr
inc
pop
ja
sahf
mov
subl
push
and
rcrb
inc
or
add
ficoml
sbb
add
pop
add
inc
fadds
push
dec
lock
sbb
shlb
inc
push
dec
repz
adc
mov
jb
sub
outsb
sub
mov
pop
call
push
adc
sbb
sub
mov
pand
sbb
mov
sbb
mov
and
xlat
leave
daa
sub
clc
push
adc
fsubs
dec
call
aas
pop
push
insl
sbb
stos
jmp
popa
or
incb
pop
cmp
cwtl
or
push
xlat
pop
rcll
push
add
cmp
subl
inc
jp
mov
mov
fmull
push
mov
or
and
sbb
orl
mov
pop
xchg
xchg
orb
mov
cmp
inc
lods
mov
add
add
cmpsb
stos
movsl
scas
nop
pop
pop
mov
add
push
xor
push
adc
adc
scas
icebp
outsl
andb
cmpsl
or
aam
inc
test
js
stos
sub
daa
ret
icebp
insb
jb
sahf
rolb
and
test
and
psllw
test
mov
sbb
cs
enter
dec
or
jmp
and
inc
out
enter
sub
jnp
ret
pusha
lods
ret
cmc
sbb
ds
test
shlb
aam
or
cmp
ret
xchg
push
dec
imul
int
push
es
mov
xor
test
push
or
push
loope
mov
adc
js
scas
adc
jp
cmc
movsl
iret
xchg
inc
push
cltd
ud2
push
xorb
daa
enter
cmp
push
clc
call
or
adc
inc
inc
and
in
xor
dec
rorl
jb
rcrb
mov
test
adc
cmpsb
push
or
bound
mov
sbb
dec
rolb
aas
dec
je
jmp
add
mov
xchg
shrb
adc
rorl
mov
fdivs
les
add
push
jp
sub
dec
or
ret
xchg
add
test
mov
pop
test
mov
sbb
sahf
into
adc
adc
ror
adc
cmp
incl
aas
xchg
xchg
mov
and
cmpsl
in
pop
push
push
push
mov
call
rorb
out
mov
and
sbb
std
out
adc
mov
xlat
mov
test
jne
add
and
sti
mov
xor
mov
adc
dec
mov
mov
sbbb
adcb
into
or
mov
push
rorb
inc
jle
mov
testb
mov
pop
mov
aam
add
pop
cmp
push
push
inc
adc
out
ss
inc
add
inc
mov
inc
in
mov
mov
mov
push
mul
jg
inc
jge
pop
pop
ret
mov
std
divl
cmpl
sbb
add
mov
in
jbe
push
lcall
pop
pop
jo
arpl
and
mov
add
mov
adc
or
sub
push
add
add
mov
jl
adcl
sbb
pop
cmp
int3
jne
cmp
aad
adc
sub
mov
mov
push
or
sti
imul
lock
lea
adc
push
cmp
dec
movsl
rcr
inc
jae
pop
xor
adc
push
jmp
sbb
fistpl
pop
adc
pop
and
add
int3
in
outsb
inc
ret
mov
in
rcr
mov
nop
jae
loope
add
stos
xchg
mov
test
jo
stc
jno
fdivr
jbe
or
pop
jbe
push
pusha
cli
add
fmull
ds
lahf
add
andl
pop
jmp
push
jl
add
add
lcall
mov
jo
movsb
add
test
inc
sbb
ror
push
cmp
jge
lea
dec
add
jle
bound
inc
cmp
scas
inc
add
cmp
jl
mov
mov
jle
cmp
mov
inc
pop
sbbl
addl
cmp
nop
sub
cmp
icebp
push
scas
or
push
cmp
mov
out
imul
sahf
rcrl
lock
pop
jmp
shll
pop
pop
push
sbb
cld
mov
or
jmp
inc
or
inc
sarl
iret
sub
pop
leave
bound
and
cmp
push
mov
je
clc
scas
test
mov
jae
cmp
jne
push
push
mull
fisubs
or
cmp
sbb
rcrb
div
mov
add
in
in
clc
mov
cmp
jne
mov
inc
push
je
test
xchg
movzbl
pop
jg
mov
sbb
out
jmp
cmpb
or
jbe
outsl
mov
and
push
mov
scas
push
xor
cmp
mov
mov
jp
ljmp
cmp
je
cmp
je
inc
fists
aaa
aas
mov
lea
mov
repz
arpl
cmp
cmp
je
push
push
jae
call
xchg
and
cmp
out
imul
pop
les
lock
std
outsb
jne
pop
decl
sub
push
ss
pop
mov
or
add
test
push
jnp
push
call
add
push
push
out
xor
aas
inc
mov
sahf
mov
adc
push
adc
or
push
push
aas
andb
push
cld
subb
je
lods
iret
ret
inc
or
dec
xchg
mov
imul
adc
mov
cmp
inc
add
mov
cmp
push
and
jne
jge
movl
imul
cld
cli
cld
adc
movl
mov
inc
cmp
fcmovne
push
jl
test
je
shl
orb
pop
mov
mul
mov
mov
inc
inc
pop
aad
into
lret
mov
lcall
add
add
cmp
inc
cmp
imul
mov
testb
lret
fcomi
and
adc
jne
jne
dec
bound
jle
decw
sbb
pushf
add
jl
jmp
mov
dec
add
and
incl
mov
scas
or
add
inc
jmp
and
call
cmpb
fimull
lea
cmp
jmp
outsb
or
add
shlb
sbb
xchg
ret
shr
mov
dec
test
push
or
js
inc
adc
push
pop
inc
bound
repz
mov
cmpl
adc
in
je
push
mov
inc
xchg
aas
aaa
jno
jbe
add
adcl
call
andl
adc
pop
mov
sbb
negb
xchg
dec
aam
jbe
add
inc
shlb
push
aad
repz
mov
xchg
sub
in
mov
sti
cs
mov
or
dec
ret
push
out
gs
inc
inc
adc
jne
or
enter
sar
sbb
add
xor
jmp
and
call
push
jmp
xor
or
adc
push
push
andb
in
cmpsb
push
add
dec
pop
adc
push
cmpl
data16
jmp
or
cmp
mov
je
inc
cmp
sti
or
sub
xor
push
push
sub
imul
or
and
xor
jmp
cltd
lock
pop
pop
xchg
lret
dec
and
mov
mov
push
enter
sbb
leave
loopne
js
stc
gs
lea
push
fiadds
andl
inc
add
shlb
jmp
sarb
mov
ljmp
in
fcoms
cmp
or
mov
jl
adcb
mov
cwtl
in
pcmpeqd
pop
out
mov
repz
andb
inc
mov
jo
enter
add
fwait
mov
lock
mov
push
mov
and
lds
sbb
mov
loop
mov
test
xor
adc
jl
or
push
push
push
inc
and
shrb
push
loopne
or
pop
popa
sub
cmpsl
dec
rolb
enter
and
out
or
cmp
jl
shlb
testl
cmp
dec
test
sbb
pop
mov
pop
jmp
ret
dec
neg
sbb
gs
scas
push
pop
push
pop
mov
arpl
or
xchg
leave
push
cmp
inc
cmpsb
dec
cld
cld
adc
jne
or
add
lea
icebp
or
bound
dec
pop
or
add
pushl
cld
ret
lds
jmp
rorl
outsb
sub
xor
pop
sbb
fsubl
mov
pop
and
jmp
pop
pop
ret
pop
inc
push
jae
push
mov
add
push
pusha
push
flds
aam
adc
int3
push
les
jl
fs
and
xor
adc
and
ficomps
or
fdivr
push
cmp
jl
xor
stos
incb
imulb
xchg
pop
push
leave
enter
jbe
push
mov
inc
sub
xchg
pop
xchg
dec
rorl
popf
movsl
ljmp
dec
divl
imul
je
mov
ja
mov
add
jecxz
notl
push
push
cmpl
test
icebp
xor
push
mov
jbe
push
icebp
push
cmp
sub
jbe
mov
dec
mov
mov
or
jl,pn
call
mov
in
push
pop
mov
xchg
call
ret
popl
lods
add
int3
bound
mov
stos
out
cmpl
or
push
or
push
or
aaa
adc
mov
arpl
adc
ret
inc
add
imul
in
pop
pop
ret
int3
push
inc
xor
pop
inc
xor
jge
cmc
push
push
popa
test
pop
or
testl
outsb
andb
inc
cmp
lock
jae
or
cmpsb
loopne
andl
jbe
je
push
push
lea
out
mov
pop
orb
xor
dec
push
repz
data16
push
sbb
sub
pop
or
mov
push
std
mov
or
mov
jmp
xchg
fstpl
xor
mov
jmp
mov
mov
jg
sub
in
fldt
je
mov
push
push
sbb
ret
pusha
lea
loop
cmp
cld
and
dec
add
in
mov
fcomps
mov
and
lahf
sub
aas
jl
or
leave
mov
je
sti
sti
in
inc
mov
test
icebp
push
mov
shl
cmp
mov
sbb
fstps
push
push
cli
jmp
icebp
xchg
add
test
das
insl
out
aaa
sbb
xlat
xor
das
out
mov
mov
or
push
push
lea
adc
pop
lret
sub
push
es
iret
movsl
clc
sbb
mov
mov
xor
in
fwait
inc
inc
les
push
sbb
shlb
mov
sbb
and
lcall
cwtl
pushf
cmpsl
mov
adc
es
mov
jl
push
push
dec
aas
icebp
cmp
jl
int3
xchg
mov
leave
leave
testl
paddusb
mov
add
test
out
xor
jne
push
push
inc
mov
pushl
adc
decl
loopne
pop
cmpl
push
fcmovu
orb
out
or
cmp
lahf
and
test
sar
sub
push
and
mov
mov
dec
and
mov
xorb
movzwl
repnz
scas
mov
add
jnp
js
or
push
and
decb
sarb
cwtl
pop
or
pop
xor
pop
sbb
test
adc
xor
mov
ret
sbb
inc
ret
pusha
stos
jmp
push
popa
mov
push
inc
andl
pop
jmp
aas
sub
cmp
rep
stos
mov
jge
imulb
pop
mov
test
sbb
jno
inc
lcall
xor
rolb
cld
lods
lahf
divps
xor
lods
add
lea
arpl
mov
sub
push
add
add
cmp
mov
sub
mov
popl
jbe
stos
sbb
lock
inc
cmpb
aam
or
aad
sbb
cmp
add
ror
lods
pop
in
icebp
dec
mov
mov
pop
ret
out
push
jmp
mov
mov
jns
loop
cmp
mov
inc
or
sub
mov
nop
mov
cmpsb
jmp
imul
add
stos
add
push
mov
movl
cmpb
or
sub
mov
testb
inc
sbbl
shll
inc
ljmp
mov
sub
rcr
fwait
and
es
icebp
xchg
cld
sbb
xchg
inc
and
nop
or
jbe
dec
je
cmpsb
mov
xor
sub
push
or
push
jecxz
xchg
or
sahf
pop
or
sub
push
in
push
push
inc
inc
push
cmp
jg
mov
cwtl
mov
jb
mov
movb
and
repz
add
gs
push
sahf
lea
inc
mov
shr
or
and
mov
loope
rep
inc
inc
mov
push
push
in
cli
dec
subb
cmc
or
adc
mov
lret
xchg
sbb
push
imul
xchg
cld
nop
inc
dec
fildll
xchg
lea
test
jbe
jecxz
je
pop
adc
nop
shr
dec
cmpsl
mov
xor
je
and
scas
mov
add
fidivl
pushf
pop
insl
fbstp
fs
enter
mov
divb
ja
popf
cmp
and
loopne
aaa
imul
mov
push
cmp
mov
xor
scas
out
cli
xchg
pushf
je
movb
cmp
xor
movsb
mov
cs
std
je
ret
pop
int3
add
jmp
lea
insl
out
push
test
fld
add
cmp
mov
shll
xor
repnz
je
mov
dec
and
insl
cli
add
or
add
int
shr
or
or
jmp
std
jmp
cld
rorb
rcr
mov
mov
inc
bound
iret
out
xchg
cwtl
dec
xlat
loope
xor
or
test
mov
jo
xchg
jmp
lds
adc
inc
ljmp
cmc
arpl
js
ret
popa
lods
sahf
cmp
add
ja
and
cmpsb
pop
loop
lret
push
scas
mulb
cmp
test
int3
cmp
pop
jb
ja
adc
jo
mov
mov
sbbb
popf
loopne
test
out
adc
mov
adc
pop
adc
push
fstl
jns
sbb
out
and
das
sbb
inc
mov
rol
inc
in
inc
std
cld
call
push
stos
jne
mov
mov
clc
pop
add
cmp
jbe
clc
jb
inc
scas
test
fwait
in
and
sub
movsl
jmp
test
mov
jle
jb
and
cs
popf
jge
add
nop
or
push
cmp
cmp
aas
pusha
and
mov
mov
jb
inc
add
add
cmpsb
fldcw
int3
imul
add
fstpl
inc
inc
inc
inc
jg
iret
jnp
and
push
int3
push
les
lods
movsb
pushf
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
movsl
into
cld
adc
sbb
mov
adc
loope
or
mov
xchg
add
and
pop
mov
push
mov
and
sbb
or
je
into
jl
cld
jmp
repz
or
xchg
xor
sbb
mov
lret
xchg
xor
out
popf
sbb
nop
push
cwtl
push
mov
mov
add
dec
lods
mov
adc
inc
out
add
fisubl
mov
mov
push
pop
add
mov
dec
dec
sbbl
cmp
sahf
out
inc
dec
push
pop
fs
out
ja
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
repz
nop
push
cwtl
test
test
push
add
andl
adc
push
cli
or
faddl
fidivs
mov
mull
ja
push
cmc
dec
out
ficoml
sbb
or
add
sub
cmp
and
sbb
mov
cmp
xlat
jne
test
cld
je
loop
loope
aaa
jmp
push
ss
add
and
or
ja
mov
movsl
adcb
ret
mov
xorps
inc
into
push
ds
xor
push
or
cli
inc
dec
jb
imul
das
and
and
sbb
sub
pop
aas
add
das
sbb
cld
push
shr
jp
imul
add
dec
mov
mov
inc
xor
pop
xchg
or
test
adc
jne
roll
pop
push
or
fdivrl
xorl
dec
loop
inc
add
mov
jo
out
lea
not
and
decb
push
ljmp
jmp
add
cmp
in
mov
push
jns
mov
ficompl
add
sbb
sbb
call
aas
testb
fs
inc
and
in
jne
orl
cmp
dec
mov
pop
out
xorb
cmpb
call
dec
cli
jle
imul
inc
inc
push
jl
jnp
ljmp
push
adc
outsb
inc
xchg
jnp
movsl
dec
xor
sub
jl
pop
add
add
mov
jge
push
or
leave
fwait
mov
lock
xor
out
mov
sbb
or
or
mov
fisubs
mov
inc
mov
jge
mov
jae
cmpb
push
mov
jmp
or
imul
add
bound
sbb
sub
lea
xor
pop
add
cmp
or
mov
mov
iret
ljmp
jo
adc
cmp
jo
pop
inc
dec
or
addb
jnp
insl
or
fidivrs
gs
std
in
jge
push
or
movsb
mov
scas
sti
ret
iret
jle
decb
adc
inc
andl
and
jle
hlt
cmpl
insb
push
pushl
mov
sbb
mov
in
andb
push
ljmp
in
push
lea
push
mov
out
rcr
decl
jbe
fldl
pop
into
sub
jmp
mov
mov
mov
mull
fistl
pop
rclb
cmp
pop
push
dec
aaa
dec
pop
in
lock
out
push
outsb
shr
sbb
mov
hlt
jmp
dec
xchg
popf
push
daa
add
sbb
xchg
mov
sub
mov
cmp
scas
jae
mov
cmp
push
and
jge
decb
iret
jne
add
cmp
jb
push
jne
mov
cmp
mov
xorl
jne
lret
decl
adc
outsb
jmp
ljmp
pop
out
loopne
fadds
and
sti
divb
or
adc
fimuls
sub
shr
idivb
and
inc
scas
mov
mov
mov
pop
mov
add
xchg
aaa
mov
js
ret
inc
sub
inc
or
mov
jne
mov
cmp
int3
and
or
je
or
xor
xlat
xor
mov
in
dec
scas
out
in
into
jne
int
and
pop
test
jl
shl
inc
jmp
mov
stc
cli
jg
insl
xchg
sub
icebp
test
add
cmp
jle
jmp
cmp
ss
test
and
cmp
pop
push
cmp
out
and
mov
decb
jne
mov
ja
stos
push
and
jmp
das
push
into
mov
inc
sub
and
push
insb
cwtl
inc
mov
xor
inc
adc
pusha
repz
add
add
ljmp
adc
xchg
push
push
xchg
or
jl
test
inc
test
shll
decb
jge
mov
or
mov
les
cmp
addb
adc
jmp
push
shl
mov
insl
or
arpl
sub
out
or
aam
icebp
xor
mov
mov
cld
fs
mov
add
ja
fnsave
push
jne,pt
iret
mov
xchg
xchg
add
xlat
and
gs
mov
lea
adc
jge
mov
cmp
jne
mov
scas
ljmp
cmp
je
rorl
xchg
add
jmp
rorb
popa
and
out
outsb
adc
je
push
sbb
cmpsb
fs
xor
or
adc
jbe
leave
je
jnp
loopne
clc
dec
dec
mov
lds
es
pop
je
pop
mov
nop
inc
or
fistpl
sahf
loopne
ret
outsb
imul
add
xor
fiaddl
add
pop
dec
bswap
pop
lock
or
out
add
push
or
negb
jg
pushf
mov
sbb
ja
lea
cld
jge
stos
dec
in
mov
psubsb
inc
cld
lock
out
decl
add
sub
scas
mov
lods
pop
sub
sbb
jbe
and
or
clc
clc
dec
subl
inc
fs
or
push
inc
fs
push
fistpl
mov
mov
clc
ficoml
test
hlt
mov
jne
or
mov
loope
mov
ret
push
insb
push
jae
cmpsl
movl
imul
mov
sub
inc
je
and
pop
cld
push
sub
or
dec
mov
sarb
jb
outsb
je
and
and
popa
pop
lcall
pop
push
jp
jp,pn
push
mov
ljmp
adc
decl
loop
jne
jmp
mov
inc
mov
inc
dec
je
jle
addr16
jmp
cmp
jecxz
je
add
ror
cmp
les
pop
pop
pop
ret
mov
adc
mov
and
xor
mulps
push
jno
movb
movsb
scas
xor
fsubrp
movsb
imul
jmp
out
loop
and
add
lods
or
xor
cmpsl
loop
or
mov
mov
addb
jne
inc
lret
test
jns
inc
sbb
clc
dec
or
pop
jo
inc
push
push
push
pop
push
data16
aad
cmp
adc
ljmp
cmp
adc
and
mov
add
jge
jle
pushl
adc
add
inc
hlt
pop
pop
pop
rcrb
mov
add
aas
push
xor
enter
lahf
lret
pop
rorl
and
inc
cltd
out
add
mov
or
pop
fiaddl
outsb
and
fucomip
or
inc
or
cmp
xlat
ret
add
movsl
pushf
mov
mov
sbb
stos
jmp
clc
mov
dec
and
push
cmp
mov
cwtl
fadd
inc
scas
call
adc
xor
mov
cmp
je
testb
je
pop
mov
lock
stos
jg
push
pop
sbbb
gs
movsb
pop
mov
into
sub
or
daa
movsb
pusha
ss
rcll
fbstp
shll
je
push
data16
add
jne
push
jmp
sbb
and
jo
rcll
cmp
je
xchg
ret
jne
mov
dec
cmc
mov
test
push
lcall
fadds
icebp
dec
and
dec
inc
sar
pop
jne
sub
ret
shlb
jb
sbb
in
clc
and
push
lea
push
mov
cmp
push
dec
mov
sbb
sbb
mov
hlt
jo
push
mov
and
mov
push
in
xchg
add
pop
mov
mov
rclb
pop
push
pop
sbb
loopne
je
lret
xchg
cmp
stc
hlt
js
sub
fdiv
push
push
jmp
lcall
imulb
xchg
loopne
mov
jne
mov
push
jl
emms
and
sahf
inc
lcall
xor
cmp
dec
imul
cmp
push
push
ficomps
je
ror
call
rol
rorl
lret
je
rep
mov
pushf
divl
dec
adc
repnz
mov
add
nop
nop
adc
mov
and
pop
and
jg
iret
repz
push
mov
rep
fs
jg
daa
cmp
mov
int3
jns
xchg
jp
jg
inc
push
push
and
movsb
lock
dec
pop
mov
push
pop
push
js
jg
pop
sbbb
out
sub
cld
sbb
push
or
sahf
out
adc
and
jg
jae
add
or
pop
add
jns
jl
add
mov
cmpsl
std
jbe
sub
pop
sub
jae
popf
les
adc
sbb
imul
add
jb
enter
cs
lret
mov
lret
in
mov
mov
add
add
sub
divb
fadds
add
jg
scas
incl
add
jb
outsb
je
insl
and
jb
mov
outsl
jb
add
or
push
push
and
aas
int
xchg
inc
add
inc
and
push
xor
cmp
mov
xchg
popa
bound
and
imul
push
dec
aaa
outsb
outsl
je
mov
imulb
jne
push
arpl
imulb
imul
or
outsb
outsl
ss
outsl
push
scas
nop
fs
jbe
jb
imul
dec
arpl
arpl
insb
push
mov
and
mov
js
xor
xorl
mov
xor
out
outsl
jo
mov
jae
push
in
xchg
imul
gs
push
cmp
js
cwtl
xor
sti
test
insb
je
push
outsl
arpl
adc
dec
das
imul
pop
add
inc
jb
xor
jnp
jo
addr16
insl
inc
xchg
insl
insb
pusha
and
pop
xor
lahf
and
push
push
pusha
pop
push
cmp
jne
inc
popa
jb
jne
jae
push
sub
add
xor
fsubrl
add
or
lods
loope
je
and
dec
pop
outsl
jno
xor
jb
sub
jae
inc
sub
and
inc
dec
imul
pop
sub
inc
sbb
cmp
orb
add
add
icebp
in
dec
rorb
fdivs
ds
gs
popa
notb
shll
jbe
push
pop
jne
daa
pop
decl
lods
pusha
push
sub
gs
popa
addr16
outsl
js
imul
dec
xor
cs
jg
popf
mov
push
pop
mov
mov
push
mov
add
inc
add
jl
xor
push
jb
xchg
int
sti
imul
add
push
rorb
xchg
pushf
mov
lea
leave
and
nop
and
xchg
xchg
es
pop
js
or
in
adc
inc
adc
add
add
fstl
jo
inc
or
jl
sbb
mov
adc
adc
and
sbb
sbb
call
sbb
js
xchg
and
jns
jp
cld
xchg
cld
in
decl
add
pop
cmp
adc
sub
clc
call
add
add
cmp
pusha
cmpb
das
cmpsb
fisttps
mov
pop
sbbl
mov
pop
mov
scas
cmp
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
xchg
ret
jp
xchg
inc
mov
ljmp
scas
dec
add
test
addl
jg
add
mov
and
sub
subb
mov
push
adc
mov
mov
add
dec
gs
jo
insb
insb
outsl
arpl
mov
fs
gs
popa
outsb
or
iret
mov
popa
data16
outsb
outsw
and
insl
or
outsl
mov
outsb
inc
push
gs
jle
sub
aad
inc
ss
arpl
lods
out
je
push
mov
fincstp
mov
and
push
jo
or
pop
in
imul
and
popa
insl
mov
jb
gs
fnsave
jb
jae
pop
outsl
fistps
push
imul
dec
pop
push
jle
inc
jns
mov
sub
xchg
stc
lret
pusha
mov
add
jmp
jbe
inc
push
jns
sbb
jb
jl
sti
mull
lret
dec
fs
popa
insb
jne
sbb
xorl
push
loope
cwtl
jl
dec
dec
inc
std
inc
stos
imul
inc
gs
dec
jns
sahf
insl
subl
fidivl
adc
insb
shrl
ja
fcoml
mov
pop
in
arpl
aad
adc
lods
stos
in
je
outsb
push
imul
sub
push
lahf
jge
or
inc
push
cmovg
dec
adc
movsl
and
pop
movsb
arpl
jno
inc
fs
adc
jmp
mov
sub
sbb
inc
shll
inc
inc
dec
sub
sbb
popf
pop
roll
lods
bound
ds
call
push
ret
je
inc
inc
je
cmp
inc
inc
out
add
pusha
testb
push
or
je
mov
loopne
outsb
sbb
jbe
and
push
push
mov
lcall
push
dec
fstl
add
xlat
movsb
loopne
je
dec
loop
sarb
push
cmp
int
and
xchg
pop
into
lock
jae
outsb
arpl
jns
add
ss
ss
imul
push
sbbb
xlat
sub
dec
and
es
mov
sub
xchg
addb
add
add
push
lock
add
lock
adc
xchg
push
pop
sarl
mov
mov
or
incb
mov
or
lock
xchg
and
jnp
lock
add
idiv
mov
ss
add
add
lock
addl
fstp
xor
adc
add
in
add
xor
inc
add
or
add
lock
add
idiv
nop
adc
jp
ss
lock
add
insb
add
lret
add
sti
jnp
cli
add
cmp
jbe
arpl
mov
testb
xor
js
pop
mov
lock
jo
jecxz
fistpl
add
add
rolb
pushw
push
jge
movsb
jnp
add
or
ds
mov
je
inc
jnp
fistpl
xor
sbb
add
push
xchg
jbe
sub
fs
add
sub
imul
leave
pop
add
cmpsl
add
fildll
lock
incl
movsl
addb
lock
sbb
add
jl
and
sar
lock
cs
dec
lock
adc
pop
std
neg
addl
adc
aas
add
jb
lock
mov
lock
and
mov
or
cmp
sbb
mov
push
pusha
into
js
ret
jg
inc
aad
enter
aas
lock
mov
sub
xchg
inc
xchg
mov
or
lock
mov
lcall
add
add
dec
adc
add
cmp
lods
addl
jl
ret
mov
mov
inc
jge
fisttps
rolb
mov
add
mov
fidivs
sub
pushf
sbb
add
sar
and
mov
cmpsl
cmp
adc
push
lock
jo
or
mov
pushf
add
fidivl
add
add
testb
inc
jnp
jb
push
mov
add
dec
add
mov
add
ljmp
jne
dec
mov
lock
shll
jne
and
lds
test
data16
mov
lock
add
js
and
int
push
pop
or
cmp
notb
cmpsb
loope
jl
adc
sub
add
lock
pop
js
jb
ss
add
mov
fildll
jle
add
xchg
mov
test
inc
sahf
jp
dec
or
xor
outsl
sub
add
xor
sbb
test
xor
icebp
add
shl
xor
xchg
pusha
cmp
lock
add
std
stc
and
add
leave
add
push
mov
xor
jl,pn
mov
dec
ret
mov
out
add
cmp
push
sarb
jns
adc
xchg
mov
push
mov
aad
cmpsb
cltd
cld
hlt
popf
negb
jg,pt
imul
dec
aad
push
pushl
aas
popw
mov
push
inc
xor
inc
add
push
or
int3
jp
xor
divl
nop
addl
add
je
xchg
jb
lock
pop
lea
cmp
loope
sub
push
pusha
lock
add
mov
insb
push
sub
mov
repnz
mov
scas
loopne
add
sub
dec
rcl
mov
js
mov
ds
mov
cmp
js
xor
or
cmpsl
add
add
sbb
mov
mov
aad
mov
cmp
add
scas
mov
push
mov
add
test
addb
pop
xor
aad
stos
int3
push
daa
add
adc
icebp
outsl
xor
hlt
insl
mov
lcall
jp
testb
roll
add
mov
shll
mov
mov
or
je
loop
lock
cmp
fidivrl
dec
orb
lods
mov
lods
inc
iret
jb
lret
fistpll
mov
stos
xorb
push
ret
in
andb
cmp
lock
fimuls
adc
add
call
xor
cmpsb
inc
xor
lock
inc
and
and
fadd
movsb
lahf
inc
jae
cmp
add
adc
aaa
mov
jo
lock
inc
out
ljmp
lock
scas
dec
xchg
in
hlt
push
adc
jecxz
adc
dec
dec
imul
and
ja
cmp
shll
ljmp
jne
ds
adc
mov
add
mov
inc
inc
add
mov
sub
js
and
push
in
jl
mov
add
bound
outsb
test
loope
sbbb
js
add
fcoms
inc
xor
divb
inc
rcll
adc
add
ss
jge
imul
xchg
jae
js
test
out
xor
out
add
mov
add
add
js
mov
and
roll
inc
icebp
push
inc
test
sub
add
sbb
cmp
addb
fwait
ds
dec
mov
add
xchg
xchg
test
lock
mov
mov
jo
outsl
roll
sub
pusha
js
mov
mov
push
cs
mov
xorb
pop
jae
lea
pushf
jge
inc
int3
ffreep
shll
push
mov
clc
ja
dec
add
enter
movsb
jae
cs
mov
or
xor
or
or
fldt
sbb
add
push
push
push
test
ss
decl
xor
inc
or
adc
or
dec
inc
jecxz
xor
aas
push
adc
xor
pop
mov
in
call
and
push
xor
adc
push
sbb
sbb
in
pop
incl
adc
sbb
sbb
ret
es
inc
adc
or
adc
push
enter
or
xor
xor
insl
sti
cs
mov
and
adc
pop
adc
or
push
inc
adcb
add
add
push
outsl
sbb
adc
cmp
and
push
movups
cmp
push
ret
sbb
pop
cld
dec
incb
sub
sbb
add
dec
push
or
sbb
sub
sub
adcl
or
adc
jg
or
add
push
sbb
adc
or
mov
cmp
inc
cmpsb
lock
add
push
mov
fmull
push
xor
or
cwtl
adc
or
cmp
dec
jbe
adc
pop
jo
dec
call
inc
or
push
sbb
xor
pop
sbb
pop
lods
and
and
sbb
aaa
divl
test
xchg
add
add
cmp
add
add
pop
in
push
les
cmp
or
and
adc
test
add
push
inc
add
add
imul
cmpsb
jbe
or
mov
push
sarb
cmpsl
fmuls
and
jns
push
loop
pop
aas
ucomiss
mov
imul
lods
mov
adc
dec
popa
jnp
push
rolb
xchg
lock
add
inc
mov
je
scas
cmp
and
add
sub
jbe
jo
jb,pn
cmpsb
testb
imul
add
iret
testb
or
push
mov
out
inc
rcrb
loopne
or
sub
jb
xchg
repnz
je
lock
inc
or
lds
mov
push
add
dec
xchg
and
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
