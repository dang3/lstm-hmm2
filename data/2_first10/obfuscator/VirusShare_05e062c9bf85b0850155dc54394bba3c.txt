call
inc
enter
rolb
and
add
mov
and
inc
adc
and
aas
sti
fisttpl
adc
adc
inc
adc
mov
add
adc
aas
sti
dec
and
or
and
adc
add
inc
dec
and
rol
or
inc
idiv
imul
adc
sub
and
and
nop
inc
adc
adc
add
mov
and
dec
rorb
add
adcb
adc
adc
test
outsl
cmp
pop
sub
push
and
and
inc
inc
sub
mov
addb
dec
and
and
inc
inc
mov
adc
inc
inc
inc
adc
insb
in
or
or
rolb
in
dec
or
add
pop
imul
and
add
pop
mov
add
add
and
add
add
enter
mov
inc
andb
pop
or
js
add
js
imul
add
add
adc
in
add
stc
and
push
fcmovbe
lcall
xor
shlb
outsl
ja
mov
adc
sbb
push
xchg
jg
add
pop
mov
sub
pop
xchg
mov
mov
jbe
repz
cs
add
sbb
mov
test
sub
jg
mov
fmull
pushf
push
test
negb
push
dec
xchg
push
jae
dec
pop
add
out
mov
add
imul
or
sub
testb
lock
imul
popl
jno
mov
or
pop
sbb
stos
push
mov
fs
repz
bound
shl
add
cmp
jnp
enter
adc
lock
repz
jno
and
sub
jle
nop
dec
fstps
neg
outsb
mov
add
pop
rclb
jb
fwait
insl
movsl
xor
cld
dec
push
and
cmp
jne
fcmovb
fstpt
mov
je
cmpl
sbb
xchg
xor
and
movsl
mov
adc
int3
pop
sti
pop
outsb
inc
push
mov
push
clc
or
push
mov
ficoml
outsl
push
cld
in
or
mov
mov
or
mov
std
pop
int3
lcall
or
sbb
sub
inc
pop
dec
ss
jnp
into
push
sbbl
or
cmp
push
lret
fndisi(8087
scas
sarl
add
push
dec
mov
sub
or
add
rcrb
or
adc
test
inc
cmp
mov
ret
pop
lds
sub
cmp
out
add
xor
xor
mov
jae
negb
inc
adc
es
popf
jecxz
xchg
aam
int
in
js
shl
into
pop
aam
inc
inc
and
cmp
in
shl
add
icebp
int
pop
loop
mov
pushf
mov
or
fstp
cmp
xor
ja
aam
mov
stos
push
mov
into
sahf
mov
imul
jnp
mov
cmpsb
adc
hlt
mov
dec
outsb
mov
xchg
add
mov
inc
js
js
ficoml
pop
dec
stc
repz
or
mov
test
jo
movsb
mov
imul
mov
in
mov
sahf
add
outsl
jbe
xor
mov
sarl
outsb
pop
negl
xchg
jecxz
lea
push
xlat
xor
enter
mov
in
xchg
inc
shl
mov
and
cmp
out
lea
clc
movsb
mov
mov
cmp
jg
imul
shll
gs
daa
out
cmp
nop
push
fisubrl
test
jge
sbb
and
aas
push
mov
inc
pusha
or
add
push
sbb
das
jns
adc
sub
mov
pop
test
insb
ss
mov
dec
inc
fs
cld
shr
push
sbb
or
xlat
xor
and
cmp
xchg
imul
and
cmp
sbb
inc
mov
out
add
bound
aam
or
ror
xor
imul
pop
inc
dec
lret
inc
dec
pop
mov
decl
push
push
push
cmp
push
add
mov
push
mov
push
or
jg
dec
sahf
je
pop
rcrb
and
or
notl
cwtl
push
sub
or
sbb
xchg
xchg
pop
mov
xchg
pop
cmpsl
aaa
clc
das
shrl
out
push
lock
add
add
testl
adc
xor
jmp
icebp
int
popf
popa
lahf
mov
jbe
or
add
cmp
sub
lock
fstps
xor
and
sbb
or
clc
jmp
and
inc
aaa
sub
daa
dec
add
call
cmp
push
ror
in
add
fiadds
push
scas
out
add
enter
lock
inc
out
push
call
mov
xlat
cmpsl
pop
pusha
sbb
jne
or
sub
std
jne
mov
push
jne
sub
incl
loope
call
int3
dec
sbb
sarb
lds
data16
stc
mov
mov
cmc
ret
mov
insb
iret
or
or
mov
add
test
ja
inc
ja
add
roll
dec
jmp
fwait
sub
enter
sbb
aad
xchg
cmp
or
ds
rolb
push
call
push
jge
mov
jmp
mov
rorl
test
add
or
push
test
fistl
mov
mov
loopne
fisubl
pop
jbe
jmp
jnp
adc
lods
xchg
stos
and
xchg
fldcw
dec
mov
test
push
pop
es
cmp
pushf
mov
lahf
mov
fadds
cmpsl
or
jo
mov
sub
add
mov
inc
push
cmp
xlat
test
scas
adc
dec
stos
adc
push
and
push
cltd
mov
out
in
and
mov
cmp
mov
sbb
lock
or
in
dec
xchg
sbb
adc
push
in
jmp
and
or
lock
fcomps
mov
popl
cmovbe
mov
adc
aad
jmp
add
add
lds
fists
fsubrl
addb
cmc
into
jbe
movl
ds
add
adc
add
push
cmpsb
sbb
loope
adc
adc
push
sbbb
mov
rorb
dec
pop
mov
inc
adc
sub
cmc
pop
je
shrb
mov
jb
stos
push
test
add
hlt
loope
sub
jp
scas
negl
xchg
mov
pop
test
inc
std
flds
dec
cmp
nop
mov
cld
push
test
push
jl
cmp
ljmp
adc
dec
fstl
jl
cmpsb
push
popf
aas
mov
adc
into
mov
dec
stos
jae
stos
add
pushf
loop
xchg
adc
mov
sub
pop
imulb
push
mov
add
or
sub
adc
add
cmp
mov
dec
mov
mov
mov
push
sbb
fisttpll
test
inc
lds
push
ds
cmpsb
inc
andl
xlat
sub
test
daa
mov
scas
adc
shr
jp
xor
adc
out
xor
loopne
pop
je
mov
cmpsl
or
sbb
and
ss
sbb
loopne
jno
dec
rcrl
in
cli
shlb
or
stos
cs
clc
testb
fcomps
pop
aam
pop
jmp
hlt
mov
inc
dec
popf
call
in
pop
cmp
imul
add
cmp
cwtl
pop
jb
cmpsb
cmpb
rcl
je
sub
cmp
js
push
cs
xor
add
xchg
mov
lcall
jno
and
dec
or
lods
push
add
jp
jbe
fucom
repz
push
repz
pusha
mov
loopne
lcall
xchg
lcall
sbb
imul
cmp
filds
adc
shrl
lods
aam
int3
jne
mov
mov
jle
popf
adc
sub
pop
inc
movsl
ds
adc
dec
cmpsl
popa
adc
add
ret
pop
cmp
loopne
sbb
or
pop
scas
mov
add
loop
sbb
xchg
push
loope
mov
mov
inc
pop
mov
daa
fldcw
jg
sub
hlt
inc
insl
imul
sbb
sub
xor
nop
test
xchg
call
sahf
jno
mov
sbb
or
add
sub
mov
and
dec
cmp
adc
push
add
xchg
mov
or
orb
pop
sub
fsubrs
inc
sti
or
nop
or
cmp
loope
xchg
xor
fidivrs
repz
adc
mov
dec
pop
jb
and
sti
push
cmp
cmpb
out
add
ss
pop
clc
or
ljmp
sub
or
aam
sti
js
jle
cwtl
cs
bound
add
jp
ss
mov
push
add
sub
mov
dec
cmp
iret
mov
inc
add
test
xor
fwait
inc
fmull
aas
xchg
mov
scas
ret
mov
sub
pop
push
xor
sbb
aam
inc
fwait
mov
ret
popa
mov
lods
push
lret
add
mov
mov
and
rorl
addl
jo
xor
lcall
fwait
add
scas
add
std
scas
fcoms
mov
out
pop
mov
fldl2t
test
jnp
fmull
push
mov
xor
pop
jo
outsb
mov
xor
enter
mov
lahf
mov
jmp
insl
sbb
shl
jmp
xor
cmpsb
jne
xlat
adc
mov
sbb
cmp
sti
sbbb
add
xor
jo
bound
mov
pop
jl
ficoml
cmp
push
lods
mov
sbb
xlat
ja
mov
mov
scas
mov
bound
rolb
sti
shrl
adc
xor
out
sbb
testl
or
cmp
imul
sbb
pop
mov
sub
push
pushf
and
push
adc
daa
inc
lods
push
lret
jae
add
in
sub
adc
lfs
jle
dec
lret
ret
xchg
js
dec
fimull
outsb
pop
lods
sahf
adc
xchg
mov
dec
mov
mov
xchg
add
fs
popf
fucompp
or
cwtl
fnsave
test
into
fs
hlt
jge
pop
fwait
arpl
mov
dec
loopne
sub
push
jne
ljmp
inc
sub
xor
sbb
pusha
test
mov
out
in
mov
ds
xor
and
cmc
xchg
adc
insb
sub
mov
pop
and
mov
fcoms
inc
sbb
dec
orl
jae
popf
dec
pushf
pop
test
into
and
push
loop
xor
leave
xor
scas
scas
pop
xor
stos
push
mov
xor
js
jo
lret
xchg
mov
mov
xchg
or
cltd
pusha
dec
sbb
dec
cmp
push
loope
mov
outsb
pushf
pop
xor
std
out
cs
inc
cmp
loopne
fcoms
mov
insb
insb
scas
divb
mov
jmp
pop
pop
out
ljmp
inc
dec
aam
scas
movsb
and
mov
in
rol
xchg
jl
mov
add
int
push
xchg
mov
add
jle
xlat
xchg
inc
imull
cld
movsb
test
stos
jnp
or
cmc
js
push
mov
mov
out
pop
cmp
mov
cmpb
xor
mov
xchg
lods
mov
insb
sub
clc
xor
jns
je,pn
rol
add
hlt
mov
xor
sbb
lock
pop
mov
add
cmp
pop
sbb
decb
push
sub
add
loop
push
ja
cmc
inc
repnz
and
test
mov
inc
inc
test
push
into
mov
shl
pop
mov
test
xor
ret
hlt
insb
in
sbb
imul
popa
cmp
jne
adc
jb
stos
mov
pushl
daa
xchg
decb
pop
addr16
push
lods
xchg
jns
inc
pop
add
add
sub
cmp
adc
dec
push
mov
aad
dec
imul
xchg
lods
roll
scas
xchg
mov
adc
mov
sub
sub
mov
adc
cld
arpl
std
mov
hlt
daa
outsb
mov
inc
mov
sbb
xor
scas
dec
and
jb
and
js
push
pop
mov
mov
fbld
dec
push
lock
sbb
jp
inc
shll
inc
mov
int3
les
daa
scas
push
aad
arpl
jne
mov
lods
mov
mov
jae
clc
lods
ficoms
add
imul
cmp
pop
mov
pushf
stos
out
inc
pop
cmp
push
push
xchg
je
shll
andb
add
xor
xbegin
pushf
fadds
sahf
fs
loope
mov
inc
aas
pusha
ret
mov
pop
or
loop
stos
pusha
adc
mov
out
in
and
pop
test
sub
mov
jns
divb
scas
push
fcoml
push
subl
mov
dec
aas
sarl
and
inc
notb
push
pushf
scas
loopne
shll
jle
test
out
jns
test
rcl
adc
xchg
cs
pop
in
repz
mov
xor
enter
imul
xchg
mov
sub
out
repz
or
jp
jbe
int3
lds
dec
lock
test
loop
xor
or
mov
ja
push
cmpsb
add
dec
dec
pushf
adc
cmp
rcrl
jns
xor
inc
xchg
pop
mov
pop
add
sub
jne
sar
mov
add
push
mov
inc
iret
fimuls
and
mov
jbe
push
and
push
dec
xchg
stos
jb
rcrb
stos
sti
or
repz
inc
xchg
and
shll
insl
lods
sub
rorb
ret
adc
and
ss
sub
lea
sbb
bound
popa
mov
mov
sbb
sbb
rolb
lret
orb
ss
imul
aaa
or
popa
add
shrl
movsl
loope
loopne,pt
out
jp
cld
aam
daa
mov
sub
mov
pop
fsubr
lock
mov
xor
mov
das
in
movsb
pop
cmp
push
xor
js
fstps
ret
aad
lock
fiaddl
add
mov
in
xchg
add
sti
cmpsb
cmp
sub
pop
dec
movsl
add
pop
paddusb
push
push
adc
and
roll
leave
test
bound
in
fldcw
lock
jbe
es
je
insb
jnp
mov
xchg
cmpsl
lods
stc
adc
cmp
fbld
sub
xchg
stc
jecxz
in
outsb
pop
fcomp
aas
outsb
push
in
rcrl
fisubs
imul
rcrl
subb
mov
sub
ljmp
mov
sbb
sbb
pop
cmp
icebp
pop
pop
sub
mov
dec
sbb
insb
add
rorl
adc
add
pusha
fs
negl
addr16
dec
push
xor
mov
mov
mov
aaa
rolb
adc
loopne
fwait
aad
push
xlat
and
dec
and
and
sbb
mov
jl
les
pop
mov
arpl
mov
jge
and
adc
insb
mov
push
or
cmc
das
pop
testb
ret
mov
fstpl
jns
das
push
lods
inc
sti
or
cmp
into
mov
push
xor
aad
mov
repz
cmp
popa
int3
js
sbb
movsb
jle
mov
pop
lods
call
sbb
js,pn
push
mov
xor
xchg
outsb
mov
jp
cmp
orb
sti
inc
dec
sar
xor
subb
js
imul
dec
push
add
push
jle
push
mov
data16
cmpsb
xor
cmp
push
jb
clc
jnp
lea
test
jecxz
jl,pn
inc
daa
mov
sub
jmp
mov
fisubrs
push
cmpsb
xchg
or
add
idivb
test
mov
sub
inc
jl
ljmp
mov
test
pop
adc
test
xchg
mov
pop
leave
cs
call
or
dec
enter
add
cwtl
test
test
jecxz,pt
lret
cmp
mov
bound
ds
xor
outsl
mov
inc
orl
nop
jl
int3
sub
aas
mov
fs
add
inc
inc
inc
add
cmp
popa
imul
cmp
lcall
inc
add
fldt
sbb
jbe
push
adc
decb
sub
mov
jns
mov
pop
fnstsw
or
xor
in
data16
repz
cli
jnp
mov
mov
add
dec
sub
sub
and
and
cmpsl
loop
push
insl
dec
and
push
rorl
notl
or
jl
push
imul
or
jge
and
fsubr
inc
cwtl
repnz
outsl
mov
cmp
mov
inc
fsts
jne
outsl
cmc
cmp
xchg
test
pop
icebp
mov
ljmp
mov
pop
push
das
dec
jmp
cli
sbb
shl
jl
andl
cmp
jo
adc
or
loop
fstpl
je
mov
sub
pop
mov
add
and
mov
iret
and
fcom
xchg
xchg
and
enter
jge
rcrl
xor
inc
dec
sbb
sub
ret
push
stos
mov
mov
lods
add
sbb
jae
pshufw
lods
xor
inc
scas
xchg
mov
outsl
arpl
mov
add
sub
or
push
pop
filds
push
inc
push
xor
fnstsw
sub
mov
xor
dec
mov
jbe
js
insb
ss
push
mov
dec
in
aad
loop
adc
pop
clc
pop
cld
fldenv
enter
xor
out
pop
mov
push
adc
or
imul
clc
sahf
jne
cmp
je
les
imul
adc
sub
loopne
mov
push
jnp
lock
pusha
rcll
pushf
std
adc
je
xchg
mov
nop
inc
push
xchg
and
mov
jl
pop
shl
ret
or
mov
das
fsubs
loop
sbb
push
jl
adcb
ljmp
sti
sahf
mov
faddl
push
add
sbb
jl
cld
rclb
sarb
add
das
loopne
mov
adc
push
or
out
loop
loopne
mov
jl
jo
roll
roll
scas
mov
fstpl
decl
mov
ljmp
sahf
push
lahf
sbbb
pop
jecxz
inc
test
sbb
push
int
pop
icebp
push
add
xor
test
movb
sbb
add
jmp
adc
aas
loop
inc
mov
sbb
mov
ljmp
or
mov
out
push
inc
and
cld
mov
fisttpl
and
ds
push
cmp
nop
adc
outsl
mov
and
adc
es
jl
js
sub
xchg
aam
js
ljmp
dec
mov
inc
adc
loope
mov
shlb
mov
repnz
pop
sbb
in
incb
inc
in
ja
bound
mov
push
pusha
inc
shll
fnsave
xchg
inc
push
mov
sbb
in
aaa
cmp
add
mov
xor
cmpsl
dec
jbe
aam
xor
shll
repz
mulb
push
mov
push
in
or
in
dec
frstor
stos
rol
sub
insl
setno
ret
insb
fsubr
or
loop
pop
and
xlat
rolb
fcmovu
xorl
and
push
xorb
push
xchg
movsb
mov
xchg
mov
test
jb
sub
mov
js
add
xor
jmp
hlt
fisubl
push
stos
and
ret
jne
arpl
dec
sub
push
pop
or
and
xchg
sbb
push
sub
movd
and
sbb
mov
adc
fmuls
mov
fbstp
adc
lcall
insl
idiv
cmpb
add
lea
pop
xchg
cmc
pop
faddl
dec
mov
inc
loop
test
mov
mov
xor
dec
sbbl
dec
dec
lea
fisubl
mov
dec
cmc
push
sub
sarb
mov
adcb
std
stos
sub
lret
or
scas
cld
sahf
into
push
adc
sbb
jb
xor
test
mov
sbb
xchg
and
clc
push
lcall
xlat
dec
int3
mov
cwtl
fldenv
jno
xchg
push
inc
sbb
mov
pminsw
sub
add
lea
notb
push
test
enter
xlat
mov
repz
stc
outsb
sub
mov
add
sbbl
push
lcall
or
cli
test
sub
gs
test
cli
adc
fsubrp
and
inc
cld
jg
subb
inc
adc
ja
add
pop
pop
lock
jmp
and
sbb
mov
rorl
jb
xor
or
sbb
cmp
lods
jns
jno
or
and
insl
shlb
add
mov
popa
mov
adc
add
bnd
je
loopne
xor
fdivrs
and
and
xchg
insl
aas
ja
aam
fcmove
lcall
push
jle
xchg
and
xlat
outsb
cli
daa
push
push
adc
fs
ffree
sbb
push
and
stos
loopne
push
test
pop
nop
pop
add
push
lods
orb
sub
test
sbbl
xor
stos
cmp
cld
lahf
outsl
push
in
adc
xchg
xchg
arpl
daa
ss
cwtl
ds
push
jge
rcrl
aaa
pusha
sub
jp
dec
adc
xor
add
jne
push
shrl
neg
jle
cltd
mulb
cmp
cmpsl
jle
repnz
or
enter
lret
cmpsb
pop
fbstp
bound
xlat
lahf
mov
ljmp
pushf
pushf
add
push
adc
adc
or
push
popa
gs
int
sahf
add
insl
lds
ss
js
insb
sbb
inc
inc
push
xchg
push
dec
inc
push
mov
dec
addb
mov
clc
pop
push
dec
mov
ja
xor
add
mov
pop
clc
inc
push
imul
dec
dec
push
or
sahf
mov
or
mov
and
adc
xchg
xor
xorl
lahf
and
data16
or
and
scas
arpl
bound
push
jl
inc
push
lahf
mov
add
shll
mov
lcall
jle
jnp
cwtl
rolb
adc
enter
xlat
ret
dec
divb
push
imul
mov
fdivrs
dec
pop
rorl
mov
mov
cmpsb
adc
sub
psllw
mov
fdivl
xchg
mov
clc
outsl
pop
dec
add
add
add
mov
pop
loop
sub
fcomps
or
mov
adc
xlat
popa
ss
jle
pop
push
xor
cmp
push
pop
cmp
xor
push
cwtl
dec
inc
lods
mov
sub
push
fisubl
gs
sub
xchg
enter
adc
jg
pop
andl
fwait
pop
adc
xorl
gs
mov
add
adc
adc
mov
mov
imul
mov
push
ljmp
push
in
ss
mov
repnz
fmull
inc
add
decb
xchg
fs
mov
es
sbb
sbb
adc
jno
or
mov
add
ljmp
push
mov
mov
test
stos
lea
mov
and
daa
divb
arpl
and
out
fsubl
fnclex
je
cmpsb
inc
ljmp
mov
out
and
dec
fisttpl
in
loopne
das
mov
sbb
jb
sub
mov
add
add
mov
cs
ljmp
aas
add
rorl
lret
inc
inc
rorl
sub
or
cmc
loopne
xchg
xor
pop
or
mov
push
push
push
sti
rcl
jp
dec
sub
mov
and
mov
mov
lods
jne
cmp
jno
xor
aaa
or
scas
add
or
and
xor
vshufpd
mov
jecxz
pop
ret
push
imul
add
sahf
out
jb
mov
cli
lds
test
stc
inc
pop
jnp
nop
hlt
loope
pop
fs
sub
push
loop
xchg
add
xchg
cmp
cmpsb
adc
cmp
hlt
xchg
push
repnz
les
test
push
stos
push
jmp
out
popa
xor
outsl
test
icebp
adc
sub
andb
stos
dec
mov
jp
or
pop
pop
fisubrl
pop
out
mov
mov
and
aas
adc
cli
cmpsl
dec
aad
inc
cltd
xor
jmp
push
test
fs
sbb
shl
jg
int3
xchg
movhps
push
adc
arpl
mov
movsb
je
shrb
rcl
andb
mov
je
ja
dec
sbb
adc
dec
pushf
add
mov
les
test
sub
and
addl
in
xor
sbb
popf
aam
cmp
out
shl
ret
mov
out
mov
cli
aad
aaa
cli
shlb
add
adc
dec
lea
out
fs
fdivs
stos
je
lds
jp
hlt
enter
decl
insl
dec
or
fmuls
pop
mov
mov
sub
push
and
add
leave
or
sbb
mov
dec
mov
aad
incb
icebp
fbstp
pop
mov
iret
add
or
cmpb
es
adc
out
jb
pop
pop
and
fsts
pop
stos
pop
sbb
lea
cltd
cmc
fcompl
test
test
shrb
repz
inc
adc
bound
es
sbb
pusha
ss
aam
packuswb
jp
dec
jbe
test
cmp
pop
inc
push
bound
xchg
aam
mov
dec
dec
xor
jle
and
adc
es
mov
sub
xor
insb
mov
outsb
pop
and
movsl
sbb
lods
getsec
mov
and
mov
rcll
mov
lods
sbb
add
sbb
in
inc
push
xor
sahf
shr
and
xor
adc
dec
jb
add
test
cmp
xlat
stos
repnz
andl
das
ret
insb
mov
cld
stc
int3
test
dec
pop
loopne
cmp
sbb
fs
pop
pusha
arpl
pusha
xor
dec
pop
xchg
testb
js
outsl
mov
add
mov
push
cmp
stos
shll
sub
fldt
sub
mov
scas
cmp
add
dec
pop
dec
frstor
pop
clc
cltd
loop
bound
xor
lret
shlb
leave
mov
mov
mov
movsl
add
or
adc
sub
pop
mov
mov
pop
dec
orb
call
int3
stc
mov
sub
dec
jb
call
outsb
idivl
sub
aaa
js
adc
sarb
ret
or
cmp
push
filds
pop
cmc
or
xor
imul
adc
cmp
loopne
sbb
adc
rorl
xchg
fs
pop
or
mov
push
xor
inc
add
mov
dec
lods
adc
xor
jg
sbb
xor
repnz
fldl
pop
mov
jmp
inc
into
xchg
xchg
add
sub
sbb
rolb
cli
jp
aas
mov
push
clc
pop
fdiv
and
push
mov
inc
lock
test
adc
jo
das
mov
mov
cmp
adc
aam
jecxz
idivb
int
insb
xor
push
lcall
and
jecxz
sbb
xlat
cmp
outsb
arpl
mov
ficoml
loope
aaa
scas
subb
jl
sti
movsl
or
mov
test
jge
push
imul
mov
ret
pushf
iret
mov
icebp
enter
mov
mov
cld
clc
loope
rol
sbb
push
cmpsb
iret
sub
movsl
ret
dec
jl
adc
inc
cld
adc
pop
dec
das
dec
mov
sub
jge
push
mov
shlb
pop
jnp
adc
cwtl
cltd
ss
ret
arpl
xchg
mov
adc
rcll
mov
ja
xchg
mov
or
mov
shl
rolb
xchg
inc
or
sbbb
sbb
pusha
inc
imul
mov
fidivrl
ret
dec
xchg
mov
sub
or
and
add
pop
sub
push
cmpl
sbb
push
jo
loopne
mov
xor
mov
in
std
add
decl
dec
push
insb
or
hlt
inc
mov
or
lods
or
and
in
ret
sarb
xor
stc
jle
jbe
mov
fcoms
xor
and
push
sti
sub
into
mov
pop
mov
mov
aad
jbe
pop
or
sub
push
stc
xor
jo
punpckldq
adc
inc
je
xchg
jp
aam
jl
lds
popa
jmp
jb
out
push
iret
mov
sub
jbe
mov
pop
and
sub
mov
push
xchg
mov
fisubs
mov
pop
mov
call
hlt
jns
mov
push
xor
imul
outsb
scas
xchg
xchg
cmpsb
movsb
test
mov
loope
jo
leave
daa
call
sbb
mov
aam
dec
lret
adc
in
movsl
pusha
inc
push
adcb
ja
jmp
push
enter
jnp
mov
pop
ljmp
loopne
xchg
xchg
adc
adc
lock
fnstsw
popf
jbe
mov
mov
jge
mov
mov
jo
mov
xchg
add
fidivrl
ficompl
mov
cmpsl
fdivs
test
inc
mov
out
mov
xlat
mov
test
push
inc
int
lods
adc
hlt
punpcklwd
fcoms
cmp
push
lcall
mov
sbb
push
bound
popf
mov
pusha
mov
nop
ss
add
fnstenv
enter
add
test
add
sbb
xlat
adc
call
loopne
cmp
icebp
aad
pop
faddl
in
mov
jno
rcrl
sti
out
js
push
dec
loope
rcl
push
pop
lock
mov
sbb
or
fcmovu
xor
dec
jbe
mov
jo
mov
fsts
inc
jmp
push
add
adc
loop
mov
mov
sbb
sti
jle
mov
or
mov
insb
inc
cmp
adcb
loop
push
in
jp
xor
cmp
neg
loope
jl
adc
pop
adc
jae
outsl
rolb
and
cmp
cmp
push
xchg
mov
cmp
or
je
or
mov
jno
lret
and
pop
or
mov
nop
lods
mov
aad
hlt
cmpsb
add
fistpll
test
adc
sysret
cmc
xor
push
mov
pop
daa
add
es
push
jb
xlat
sbb
sub
aas
mov
loop
pusha
movsbl
repz
jge
stos
scas
dec
and
pop
insl
out
pop
js
ret
cmp
adc
pop
or
lock
test
dec
arpl
or
jno
xor
clc
arpl
fdivs
or
mov
in
mov
adcb
lods
mov
add
lea
push
adc
push
jns
incb
fldt
mov
push
insb
mov
jle
out
jno
pop
icebp
inc
sub
pop
sbb
push
pop
lahf
aam
jb
mov
call
dec
aam
ja
jp
inc
int
pop
lock
mov
pusha
adc
ret
lock
aam
cld
push
fistpl
xchg
fadds
fistpl
ds
movsb
loope
pop
mov
cmp
mov
loopne
push
pop
js
xorb
or
push
and
js
cmp
enter
sbb
jo
pop
scas
nop
inc
test
fdivr
lods
ds
rcr
pop
lock
sbb
or
push
xchg
lods
popf
aaa
push
jl
and
sub
pop
nop
leave
and
xchg
xchg
cmp
test
mov
add
mov
jp
je
fldt
add
cmp
lcall
std
ds
hlt
inc
nop
xchg
add
aad
xchg
push
repnz
rcrl
ds
dec
pop
ss
jo
xchg
pop
fildll
negb
nop
fwait
mov
out
push
add
rclb
sar
and
rcll
inc
mov
rcrb
inc
imul
sbb
sbb
dec
ffreep
mov
hlt
inc
repnz
aaa
icebp
fldl
daa
jb
push
scas
push
sahf
add
les
pop
adc
xlat
xchg
shrl
pushf
jo
xor
lock
cmp
jmp
xchg
sub
div
call
adc
sub
sbb
xchg
sub
loope
add
inc
xor
gs
cs
or
jg
mov
pop
cltd
dec
fcompl
test
lock
cltd
sbb
push
mov
mov
mov
pushf
pop
mov
and
nop
jle
cmp
pushf
or
jp
sbb
lcall
jl
mov
movsl
inc
jp
jl
stos
jecxz
inc
sbb
ss
cmpsl
dec
aad
lcall
jo
in
push
js
sub
add
or
std
mov
or
daa
push
inc
mov
call
cs
cmc
pop
clc
or
jecxz
dec
repz
out
push
sub
dec
or
pushl
dec
ficoms
decb
repnz
sbb
cmc
pop
pop
sub
ss
mov
clc
movsl
mov
fstl
divb
jmp
push
jns
and
mov
insb
mov
fsubrs
loope
push
sub
inc
mov
lods
mov
sbb
fmuls
inc
pop
sub
mov
mov
imul
fsts
gs
sbb
xor
mov
popa
xchg
stos
cwtl
ss
data16
out
rcll
fsubs
mov
fadd
push
shrb
aas
xchg
test
mov
adc
pop
sbb
jg
cwtl
push
mov
repz
std
int3
adc
fidivl
mov
aaa
add
inc
outsl
subl
pop
sub
xor
and
cs
push
dec
or
arpl
movsl
push
sarl
je
cmpsl
or
mov
test
xchg
xchg
push
sbb
dec
adc
xor
mov
repz
mov
sahf
idivl
rcl
add
mov
pop
ret
mov
xchg
or
cmpsb
pop
fsub
in
inc
push
push
adc
pop
pop
xchg
or
pop
shlb
and
test
and
popa
add
js
es
pop
aam
dec
ret
mov
clc
add
mov
pushf
mov
mov
out
test
std
icebp
into
fnstenv
jmp
pop
sub
add
rcll
add
cmp
adc
mov
mov
push
and
sub
pusha
mul
pop
or
adc
pop
ret
adc
add
mov
mov
cmp
int3
mov
pop
push
mov
scas
push
cmp
mov
and
xchg
bound
aaa
add
add
cmove
push
xchg
lcall
inc
dec
add
arpl
imul
mov
fiaddl
sbb
movsb
pop
cltd
push
or
add
dec
adc
mov
mov
mov
lods
fld
dec
enter
loopne
cmpb
mov
mov
xorb
adc
loopne
js
jnp
sub
and
add
loope
ljmp
mov
fcmovbe
cmpb
fwait
in
jae
les
or
lcall
lock
xchg
mov
shll
call
movsl
or
int3
mov
jl
adc
push
div
aas
hlt
xorb
and
jno
inc
fs
jp
sub
cmp
std
pop
jle
mov
push
xor
or
pop
or
ffree
add
sbb
lret
mov
sub
call
xchg
mov
das
ret
int3
test
scas
push
insl
sbb
push
add
mov
sahf
sbb
dec
cld
imul
daa
fimuls
push
xor
ror
outsb
mov
loop
push
jne
insl
xchg
or
sbbl
jmp
jo
je
cmp
mov
daa
clc
gs
sub
mov
lock
sub
loop
stos
adc
xchg
popa
pop
clc
add
mov
xchg
push
fsubrl
cld
or
pop
or
cwtl
movsl
sbb
mov
js
push
mov
xchg
pop
adc
push
sub
jmp
or
sahf
mov
jne
leave
scas
lock
scas
jl
out
mov
jo
faddp
stos
pop
add
jecxz
jge
mov
mov
rcrl
fldcw
cmpsb
mov
mov
addb
sub
jmp
sti
call
mov
dec
jne
rolb
cmp
or
jecxz
inc
adc
sub
fs
cmpsl
xchg
movl
out
call
push
push
gs
jno
jo
hlt
mov
sub
arpl
adcb
clc
loope
cwtl
jmp
sub
aaa
mov
and
into
inc
sbb
pop
inc
shrb
pop
push
loop
in
push
ljmp
mov
cmp
or
xor
add
add
cmpsl
sahf
pop
fnstcw
aam
xor
pop
push
mov
dec
and
mov
cld
mov
pop
add
enter
dec
mov
lcall
repz
mov
mov
arpl
stc
sbb
add
xor
in
cwtl
jnp
daa
loop
add
jno
lock
sub
repnz
mov
rcl
sbb
push
pop
in
lock
push
testl
cli
sbb
mov
loop
sbb
aaa
push
shlb
mov
out
pop
or
mov
mov
adc
cli
ljmp
setae
xchg
lea
fisubrs
inc
or
insl
clc
adc
push
mov
mov
mov
sub
cmpb
jle
mov
xchg
jne
icebp
call
inc
aas
lds
subl
scas
les
add
push
iret
jo
mov
lahf
cmp
repz
push
inc
sbb
mov
sub
jl,pn
fwait
mov
loop
dec
or
nop
push
mull
js
inc
movsb
shll
mov
ja
sbb
xor
rolb
fs
aaa
scas
inc
adc
shll
sbb
fiaddl
lods
pop
cld
call
in
ds
adc
jge
mov
shrb
sub
jmp
sub
sub
repnz
xor
mov
loop
jecxz
cmc
test
mov
push
sti
pop
mov
insl
adc
mov
jge
pop
push
mov
mov
repz
pop
imul
xor
repz
cmp
shrl
mov
adc
fsubrs
mov
add
xorb
add
push
sahf
subl
in
imul
xor
mov
shll
in
js
insb
push
cmpsb
sbb
cs
push
imul
sub
ss
push
cmp
mov
push
jp
sbb
pop
popa
ljmp
pop
fadds
mov
lret
test
and
sub
icebp
insl
jb
orl
xchg
ret
cs
out
ret
es
xor
pop
test
dec
mov
rcll
pop
scas
sti
xchg
outsl
sub
arpl
iret
push
add
fldz
pusha
popa
outsl
popa
mov
mov
andb
fcmovnb
inc
jb
jne
daa
rcrl
cmpb
jecxz
aam
sub
std
sub
inc
push
xchg
and
push
push
jae
idivb
xor
xchg
inc
adc
mov
loopne
mov
adc
andl
mov
add
adc
sarb
fstl
or
push
int
pop
or
lods
ret
pop
mov
in
xchg
pop
mov
rorb
stc
cmp
push
cmp
add
lock
mov
movb
xor
jp
inc
xor
ficompl
pop
nop
mov
xor
out
push
sbb
aad
call
rcrl
sbb
std
xorl
subb
pusha
inc
inc
dec
pushf
pop
xor
sbb
cmp
movsb
iret
mov
ds
addl
mov
xlat
inc
and
in
mov
mov
ja
mov
pusha
imul
movsl
ss
mov
mov
add
mov
andb
not
xor
icebp
repnz
sbbb
test
call
sub
outsb
lea
xchg
movsb
cmpsl
imul
jge
lret
in
jo
bound
insb
popf
dec
repz
int3
in
nop
mov
mov
dec
cmp
mov
inc
push
lcall
xchg
inc
push
mov
daa
pop
sahf
aas
mov
jl
xchg
jle
xchg
test
loopne
ret
inc
jle
pop
dec
filds
stos
cmpsb
mov
xor
inc
cmp
sar
mov
xchg
dec
flds
sbb
xor
cmp
orl
adc
jp
sbb
icebp
frstor
and
push
aam
orl
adc
shrb
jo
mov
pop
outsb
stos
cmp
and
jmp
lds
movb
pop
roll
or
imul
inc
movsb
inc
xchg
jl
jno
and
scas
jg
mov
imul
mov
jecxz
dec
inc
cmp
clc
sbb
xchg
clc
lods
mov
scas
or
hlt
mov
cmp
or
int3
pop
clc
test
push
jb
dec
inc
lea
pop
sub
mov
cmp
in
pop
inc
cli
in
dec
adc
mov
add
stos
mov
sub
js
test
push
rcrl
sbb
inc
sbb
push
push
test
test
imul
sbb
push
push
jne
pop
lcall
xor
push
or
cmp
lods
xchg
ret
sub
mov
faddl
sbb
pop
jno
xchg
movl
and
pop
test
movsb
cmc
sbbl
ja
inc
bound
jp
jns
testl
gs
mov
shll
out
lahf
test
out
dec
xor
mov
sti
ljmp
aad
mov
or
pop
pop
xor
and
cli
call
or
jmp
inc
pop
mov
pop
adc
fsubr
aam
push
jnp
add
push
mov
kmovw
ficompl
in
outsw
in
in
loope
mov
inc
popf
dec
dec
or
aas
inc
or
shl
push
dec
lock
cs
lea
inc
mov
mov
lds
adc
xor
dec
aam
inc
push
mov
lods
sbb
outsb
cmp
push
adc
add
rolb
push
jo
mov
dec
mov
sub
test
push
clc
mov
lret
test
mov
jo
je
aaa
sub
push
scas
inc
mov
addb
fbstp
push
jo
fmull
test
icebp
aam
movsl
movsl
cmp
dec
jmp
dec
sub
mov
add
test
aam
adc
jecxz
test
into
sarl
sbb
popa
mov
notb
lahf
xchg
rorb
mov
push
cmp
imul
and
inc
les
lds
fsubrs
push
pop
inc
cwtl
mov
jle
xchg
rcrl
mov
mov
sahf
and
xor
jne
js
shll
cwtl
addb
test
loope
and
dec
push
imul
sub
sahf
les
and
enterw
dec
pop
push
mov
xchg
pop
inc
cmp
mov
les
dec
es
push
fmuls
pusha
dec
cmp
mov
adc
sbb
push
jp
and
pop
sbb
mov
cmp
les
push
adc
pop
cmp
jecxz
xor
lret
cmp
cmp
jmp
mov
pop
xor
jg
sbb
movsb
cli
stos
lods
and
es
jne
xchg
jae
pop
mov
mov
icebp
adc
inc
jecxz
js
mov
cmpsl
adc
xor
sub
data16
insb
mov
scas
negl
push
fsubs
pop
rolb
es
pop
pop
cmp
jecxz
mov
mov
rcrb
pop
test
sub
xchg
mov
lods
loope
sbbl
arpl
movsb
loope
and
push
flds
fmull
test
add
cmp
or
outsb
xchg
push
add
mov
imul
cmc
sbb
je
bnd
je
jg
mov
or
cld
cmp
lret
sbb
pop
cmpsb
jne
push
push
push
xor
sti
sbb
dec
out
push
sub
mov
or
pop
loopne
cmp
mov
sbb
fisubrl
popf
lret
cmpl
cmpsl
inc
or
imul
mov
mov
add
inc
push
stc
pop
test
jge
mov
ret
pop
pop
mov
cmc
test
movsl
jg
cmc
lret
pop
cmp
stos
in
mov
adc
sarl
out
add
in
add
insl
sub
mov
subl
pop
sub
iret
pusha
flds
popf
in
add
pop
jmp
repz
sub
testl
xor
das
movsl
fimull
ss
pop
and
push
mov
fidivl
repz
repz
rorl
cwtl
jl
push
dec
xchg
rcrb
push
adcl
and
jne
or
cmp
es
sub
mov
cmc
je
jp
test
push
out
fisubs
mov
mov
sbb
fsubrl
add
add
sub
sarl
push
enter
addr16
call
negl
or
push
pop
add
lods
push
jl
popa
xor
xchg
divl
leave
mov
in
and
add
add
jo
call
or
jecxz
shll
lods
movsl
jns
ja
xor
dec
addr16
mov
inc
mov
enter
inc
xchg
sbb
call
sbb
jle
inc
sub
cmp
jae
dec
mov
js
ja
ljmp
movsl
or
lock
mov
push
call
mov
jnp
dec
fdivrp
and
add
out
sarb
push
test
push
push
mov
ja
stc
and
sbb
dec
repz
mov
xchg
inc
dec
mov
mov
shll
mov
mov
xor
test
jo
mov
in
cld
cs
scas
mov
inc
js
bound
inc
mov
repnz
cmpsb
sbb
arpl
jae
mov
mov
lds
pop
jno
or
rcrl
std
int3
jge
cmp
adc
addl
add
sbbb
inc
dec
cmp
and
fnstenv
popa
pop
loope
add
inc
add
push
push
rcrb
push
lahf
xchg
sti
jo
dec
xchg
cs
ljmp
data16
adc
into
lret
ss
xor
dec
mov
sub
pop
movl
or
push
xchg
xchg
push
lcall
icebp
add
insb
insl
ds
xor
push
fsts
jecxz
pusha
pop
fstpt
xor
jb
out
int3
data16
popa
outsl
fsubp
and
or
out
adc
jg
ret
dec
dec
push
jle
sub
adc
pop
pop
lret
dec
dec
jg
aaa
ror
xchg
mov
jno
mov
lahf
xor
lcall
inc
or
mov
out
mov
mov
xchg
ficompl
mov
mov
sti
and
data16
aad
scas
jmp
imul
insl
nop
negb
jp
inc
and
xor
mov
subl
add
inc
daa
xchg
push
sub
and
scas
adc
mov
das
inc
insb
jmp
lods
pop
push
mov
lcall
mov
stos
sbb
ret
shlb
xchg
cmp
pop
test
pop
cmp
dec
cmp
inc
sbb
mov
push
orl
mov
mov
fildll
and
add
cmp
js
shlb
mov
int
cmc
sub
js
rolb
ljmp
adc
inc
ja
in
push
mov
inc
testb
jns
dec
mov
push
push
pop
push
add
mov
imul
push
sbb
aad
lds
push
sub
mov
dec
or
in
mov
andl
out
inc
fisttpl
fisubs
add
add
add
xlat
inc
and
xchg
movntq
out
jns
push
enter
or
cmp
pusha
add
sbb
mov
mov
push
push
repz
repnz
ret
nop
out
and
cs
inc
notb
scas
popa
subl
sub
mov
cmpsb
test
shlb
insb
aas
lds
test
push
in
cmpsb
idiv
adc
iret
lcall
jp
inc
pop
aam
mov
test
sbb
mov
jb
pop
cwtl
popf
popa
jbe
jns
mov
add
adc
adc
jns
in
and
insl
or
sbb
push
sahf
lcall
hlt
and
imul
sbb
ss
out
xor
dec
xor
insl
push
add
ret
aas
adc
push
sbb
adc
jmp
lcall
xor
push
sbb
lods
mov
ljmp
add
xor
mov
in
push
lret
sub
in
and
push
lds
test
dec
je
ffreep
xor
jl
lea
sbb
inc
lret
push
jmp
dec
mov
cmp
call
jmp
arpl
inc
fisttps
jp
movsb
or
outsb
ljmp
lcall
add
arpl
imul
sbb
outsl
adc
shlb
pop
and
adc
pop
and
xor
xchg
rorb
sbb
mov
jl
outsb
sub
xlat
into
mov
mov
shrl
jae
add
pop
cmp
in
sub
imul
cltd
out
jae
dec
imul
shrb
daa
imul
adc
cltd
adc
dec
sub
push
nop
inc
sub
clc
dec
nop
and
dec
pusha
fstl
shll
lret
cmp
xor
mov
fcmovb
js
stos
ret
stos
cmp
add
fwait
inc
daa
xlat
shr
adc
push
stc
pop
rcll
ret
push
popf
xor
xor
loopne
je
outsl
loope
sub
sbb
push
ud0
ljmp
mov
mov
daa
add
xchg
mov
and
pop
in
imul
ret
filds
sbb
fwait
xor
mov
sbb
xor
jbe
movsl
xchg
mov
scas
jl
dec
insb
mov
adc
imul
lcall
mov
lods
fadds
add
andl
mov
push
push
sub
pop
lds
mov
dec
push
les
movsb
mov
jne
pop
aam
flds
xor
pop
pusha
mov
loopne
add
xchg
add
pop
push
loop
dec
jecxz
xchg
stc
mov
sahf
push
cmp
push
xchg
dec
pushf
push
push
xchg
fdivl
mov
fabs
xor
adc
lret
and
dec
mov
or
cs
inc
aas
jne
fndisi(8087
push
iret
mov
mov
and
dec
call
lcall
lds
pop
xor
stos
daa
sbb
mov
in
std
pop
push
sbb
xor
jge
sbb
inc
test
dec
and
mov
sbb
sbb
ret
repz
push
aaa
loopne
or
popf
sub
fcomip
dec
sub
mov
pop
fcmovnbe
loopne
cmp
mov
aad
jp
scas
add
hlt
lds
pop
enter
shlb
jmp
faddl
pop
mov
or
repz
ljmp
cmp
xor
daa
lret
imul
xchg
push
mov
pop
jne
fistpl
repnz
mov
outsl
outsl
cmpsb
adc
mov
call
fsts
mov
mov
ret
cli
pop
stos
popf
sahf
fadds
ror
sbb
mov
les
xchg
sbb
int3
pop
test
pop
sbb
and
jne
push
xchg
add
std
std
in
and
mov
rcr
loopne
fistps
popfw
out
ret
pop
and
adc
in
into
pop
scas
inc
in
sbb
movsl
lock
xor
sbb
mov
loopne
repz
clc
stos
cltd
scas
imul
jge
int3
movsl
movsb
push
adc
mull
rclb
inc
or
cld
loop
stos
dec
aaa
mov
and
aad
ret
movsl
adc
jmp
cwtl
jae
lahf
lea
add
test
cmp
inc
pop
inc
daa
mov
or
into
ret
sbb
push
imul
jg
xor
dec
xchg
xchg
xor
loope
pop
insb
push
sbb
and
mov
stos
push
sub
sti
push
movsl
loope
pop
decl
fdivr
bound
scas
add
add
aam
inc
cmp
rorl
cltd
mov
js
pop
inc
rcll
push
in
pop
pop
fisttps
ja
sbb
jp
insb
call
aaa
lret
mov
add
cmp
xor
sub
sub
sti
lret
and
inc
and
mov
mov
cmp
orl
shlb
insb
jmp
xchg
lods
notl
mov
inc
in
push
or
lea
mov
sti
rcll
xor
dec
bound
push
adc
and
sub
push
and
xchg
add
jp
or
aas
push
cmpsb
adc
lahf
pop
jmp
int3
je
imul
mov
adc
in
notb
pop
cmp
pop
scas
xchg
mov
mov
pop
add
sub
xchg
sub
test
mov
jp
imul
mov
scas
mov
jecxz
adc
push
enter
rcll
pusha
ret
xor
cmpl
cmpsb
jmp
repz
push
outsb
sub
jae
mov
and
rorl
and
addl
inc
bound
mov
adc
and
adc
movsl
loopne
ficoml
xor
sarb
xor
in
imul
inc
xchg
std
test
and
dec
shl
add
push
shll
fwait
ds
test
push
mov
out
pop
xchg
xchg
out
mov
and
xlat
and
daa
movsb
pop
sbb
dec
cmpsl
outsl
inc
sbb
sub
xchg
mov
inc
gs
xor
mov
add
push
jno
sbb
outsb
fs
inc
cmp
sub
setnp
movsb
adc
in
jle
aaa
js
adc
out
mov
add
hlt
jmp
mov
mov
shr
adc
dec
lds
mov
inc
in
push
addl
sbb
mov
add
add
mov
ds
cmp
xchg
mov
js
inc
scas
sub
xor
and
or
inc
lcall
or
and
mov
mov
adc
cmp
ret
and
shll
dec
mov
int3
lods
add
fisubs
and
mov
popa
add
xchg
push
xor
ret
shll
arpl
out
rcrb
push
sbb
popf
icebp
imul
pop
add
leave
popf
in
cmp
mov
in
jo
test
and
addl
jb
dec
loopne
inc
pushl
sub
fsubrs
sub
push
mov
sbb
pop
arpl
xor
int
test
pop
aas
aad
test
aaa
xchg
inc
sub
cmp
pop
inc
std
rolb
cmp
jge
push
into
lahf
std
bound
or
pop
lret
push
lea
pusha
mov
push
pop
loopne
lea
popf
std
push
add
dec
inc
xor
cmp
imul
jmp
out
add
pop
jno
jge
or
in
push
sub
loope
in
mov
add
add
mov
lret
lock
imul
mov
or
movsl
je
inc
sahf
dec
jns
adc
pop
sbb
pop
push
fisttpll
sub
mov
pushf
cmpsl
or
movsl
fwait
push
leave
dec
xchg
pop
loopne
mov
outsb
xchg
sbb
jae
mov
jl
inc
popa
xor
jno
cmp
movsb
sahf
mov
adc
push
jne
lock
aad
stos
mov
cmp
rorl
jge
cmpsb
int3
mov
cmpsb
cli
lea
out
icebp
mov
cmp
pusha
adc
scas
and
inc
mov
das
int
mul
inc
sub
cmp
into
mov
mov
inc
mov
and
pop
pop
mov
test
add
movsb
push
xchg
shll
mov
or
add
push
loopne
or
cmp
loope,pt
ret
fcoms
xor
sub
ss
sub
fimull
and
pop
xchg
mov
fists
test
adc
ret
inc
popf
inc
iret
popf
or
dec
lea
sbb
push
insb
push
lods
ret
inc
or
cmp
jecxz
popf
add
cmp
jnp
pop
or
mov
pop
lods
rclb
or
or
ja
push
sub
mov
dec
add
xchg
cld
lret
xchg
fs
sbb
lahf
inc
lods
leave
stos
lret
and
lods
cltd
push
stos
daa
push
jb
pop
fwait
adcb
push
rcrb
or
dec
cmpsl
aaa
cmpsl
out
scas
pop
cmp
lcall
mov
jo
test
jae
movsl
adc
dec
sub
pushl
divb
in
push
adc
push
cli
pop
fwait
xchg
js
shufps
cmp
daa
push
cmc
xlat
movsl
xor
aam
or
sbb
loopne
fsubrl
xor
or
dec
xor
rorl
push
call
imul
adc
jno
add
push
push
inc
pusha
lea
adc
addr16
sbb
mov
das
fcoms
das
add
in
xchg
mov
add
andl
repz
lds
in
bound
mov
stos
push
cltd
outsb
pop
sbb
mov
adc
push
loopne
aas
sbb
repnz
pop
dec
push
lods
adc
popa
xor
adc
mov
lret
adc
les
push
mov
enter
xchg
mov
movsl
inc
add
add
lds
ss
inc
je
jecxz
stc
pop
push
ja
ret
adc
jo
rcll
mov
xor
mov
xchg
push
popa
in
jle
rcrb
inc
lcall
movsl
cmp
xor
shlb
data16
cs
push
dec
shll
sub
cmp
aad
pop
mov
cmp
out
testl
inc
popf
mov
sar
sbb
jbe
gs
nop
jo
jno
test
xor
jbe
xlat
add
jno
xor
or
mov
pop
mov
scas
sub
mov
push
adc
scas
jno
call
sub
mov
pop
sbb
pop
xchg
cmpl
pop
in
xlat
imul
mov
sbb
pop
iret
inc
mov
lret
in
pop
xlat
mov
mov
out
jg
xor
sarb
push
add
dec
or
jmp
rcrl
adc
or
sub
scas
sarl
fdivrl
push
dec
jb
mov
cmpl
cmpsb
sub
pop
cmp
jae
popa
xchg
loop
movsl
lcall
dec
lods
mov
xchg
and
pop
inc
jmp
adc
xchg
addr16
xchg
andl
jmp
arpl
imul
jns
and
jmp
sti
jl
cmpsl
jno
in
cmp
cld
enter
pusha
mov
jb
lds
mov
dec
or
cmc
movsl
adc
shll
test
cwtl
shll
push
arpl
outsl
add
cli
push
push
sub
clc
repz
out
and
mov
lcall
sub
add
sbb
imul
hlt
lock
push
add
dec
clc
push
push
jmp
jecxz
xchg
loope
rcll
in
rcrb
push
xchg
adc
jecxz
push
xchg
fs
push
in
sbb
push
std
mov
outsb
insb
cmp
mov
js
push
test
sti
inc
pop
clc
test
cmp
ljmp
imul
sub
xor
arpl
js
sbb
lahf
add
rcrl
xchg
outsl
xor
push
push
pop
jae
xorl
add
negb
hlt
mov
mov
adc
or
xchg
push
lcall
scas
inc
aam
mov
bnd
xor
add
into
std
push
pop
mov
xorb
std
in
xchg
sbb
rolb
fcoml
out
shlb
cmp
call
sub
xor
lahf
push
movsl
lret
or
jae
imul
mov
loope
push
out
push
mov
hlt
xchg
mov
cmp
mov
add
xchg
mov
xchg
add
repnz
jg
xor
cmpsl
inc
das
push
or
inc
dec
cmp
xchg
xor
cmpsb
loopne
jae
lahf
pop
sub
adc
mov
jge,pt
andb
jnp
dec
dec
xchg
lret
adc
or
fildl
daa
lods
cli
jns
inc
push
add
lret
and
inc
jl
ja
dec
sbb
and
push
sqrtps
in
mov
sbb
icebp
ss
adc
fidivl
lock
leave
mov
mov
inc
cmp
test
out
push
jo
pop
mov
jae
mov
mov
pop
aaa
xor
daa
xchg
jp
cmp
loopne
push
bound
and
mov
add
in
mov
cmp
stos
add
pop
rcl
jns
and
lea
les
test
cmp
test
mov
add
jns
sbb
or
stos
dec
arpl
or
popa
sbb
test
or
call
aad
or
push
xchg
clc
add
pop
scas
dec
in
sbb
rol
inc
out
mov
std
mov
inc
stos
leave
dec
aad
insb
fstps
arpl
stc
dec
paddusb
mov
inc
inc
nop
mov
add
das
xchg
cmp
loop,pt
std
or
xor
xor
leave
cwtl
lods
xchg
out
jle
insl
fidivs
xchg
mov
je
rorl
xchg
mov
bound
or
into
dec
imul
mov
outsl
out
subl
xchg
je
in
cmpsl
loopne
movsl
roll
add
jp
mov
pop
repz
les
inc
flds
xor
xchg
pop
es
mov
cmp
lcall
and
scas
cmp
adc
rcll
jge
adc
mov
jno
movsl
and
lods
pusha
ret
filds
push
mov
xchg
sbb
mov
aam
dec
shlb
rorb
gs
xchg
push
push
cmp
jp
bound
or
mov
iret
and
xor
shlb
mov
adc
adc
lcall
dec
lret
rorl
aas
leave
fstpt
sbb
inc
movsb
roll
imul
cmp
push
jmp
shl
and
out
add
or
les
mov
sti
pop
cmpsl
fdiv
js
mov
add
loope
je,pt
fwait
xor
inc
test
lods
cli
test
dec
test
inc
mov
sbbb
push
mov
test
pop
and
xchg
and
xlat
test
sbb
ljmp
mov
int3
in
xchg
jp
pushf
repz
push
lds
pop
pop
xor
push
rorb
fdivs
xor
or
ljmp
dec
inc
mov
subl
stos
test
jno
dec
cmp
leave
inc
or
add
aad
mov
fcoml
add
push
stos
icebp
cmc
jnp
fidivrl
inc
icebp
aam
js
dec
mov
adc
out
add
cli
mov
call
xchg
popa
jo
pop
mov
add
push
mov
add
les
cld
cmpsb
or
bound
popf
imul
rcrb
fmuls
test
and
sahf
mov
dec
mov
rorb
mov
xchg
pop
lahf
or
inc
cs
cmpb
mov
adc
out
aam
daa
xchg
popf
mov
push
pop
add
pop
adc
xor
push
into
inc
rcll
sbb
mov
xchg
pop
xor
cmc
or
push
ljmp
insl
mov
in
mov
test
pop
cmpsl
daa
in
pop
das
loopne
aaa
mov
test
or
scas
mov
fcmovnu
insb
cmp
lods
rol
cld
pop
es
clc
or
dec
xor
adcl
mov
lcall
out
lret
jp
cmpsl
dec
cmpsl
mov
mov
and
popa
mov
cmp
dec
mov
push
xorl
inc
mov
dec
push
lods
push
shrb
mov
je
roll
out
jnp
jp
subl
fidivl
mov
pop
sbb
xor
push
sbb
adc
push
or
jno
dec
fmull
ds
add
push
pop
cmp
xor
daa
mov
loop
bound
clc
sbb
fdivl
add
movsb
sub
test
shlb
sub
sub
rclb
mov
inc
mov
mov
jle
adc
xor
dec
pop
in
outsl
pop
pop
and
js
pop
mov
lea
pop
call
shrl
push
mov
lret
jne
jp
mov
push
ror
sub
mov
data16
pop
popa
push
pop
adc
xor
xor
jmp
pop
dec
or
jmp
mov
push
jb
jbe
mov
clc
in
push
outsb
scas
pop
out
dec
lea
or
call
push
rclb
outsb
loopne
je
pop
jns
inc
sbb
xor
movsl
push
sbb
or
stos
push
sub
ljmp
test
xchg
roll
insl
or
jl
add
fcomps
pop
add
test
fwait
adc
ret
jae
enter
push
jae
lret
mov
loopne
cmpsb
sti
enter
rolb
sbb
xchg
sub
xchg
fistps
adc
mov
inc
push
int3
cwtl
mov
cwtl
jmp
addb
sbb
js
add
icebp
or
pop
dec
xchg
inc
fildll
jo
lods
push
aam
loope
adc
xchg
in
jne
outsb
adc
rol
mov
pop
inc
or
push
fiaddl
xchg
sbb
loop
jnp
loop
add
sbb
push
inc
das
sub
fimull
sbb
mov
imul
stos
stos
out
or
dec
or
pop
or
lret
aaa
es
sub
arpl
add
sar
dec
jmp
cmc
loopne
xor
mov
int
lcall
xor
xlat
subb
fstps
inc
clc
shlb
mov
cmpsb
lahf
cmpsl
scas
xor
jmp
cmpl
mov
cltd
je
jbe
inc
xor
in
xor
pop
inc
test
inc
xchg
mov
scas
sub
dec
orl
xchg
mov
orl
cmpsl
pop
mov
aas
cmc
scas
and
rorb
cmc
jo
jne
jmp
cmpsb
adc
dec
push
ss
clc
loope
shrl
mov
lret
jne
data16
in
mov
inc
rol
pop
aad
sbb
cmp
xor
adc
out
lds
xchg
out
mov
jnp
fsubr
push
push
inc
jmp
test
sbb
mov
xchg
inc
push
cmp
movb
add
jno
fcompl
push
test
sbbl
icebp
cmp
dec
sub
jle,pt
fst
xor
dec
sbb
pop
ds
xchg
lahf
mov
push
nop
push
dec
lcall
shlb
cmpsb
adc
mov
xchg
stos
std
sbb
jl
in
lock
mov
jmp
mov
aaa
mov
xchg
rcrl
lock
xchg
push
rclb
popa
xchg
test
and
aam
dec
loopne
jge
sub
mov
movsl
adc
cmp
fwait
push
adc
inc
rcrl
add
adc
jae
jne
xchg
imul
adc
testl
sub
mov
dec
adc
and
daa
cmp
add
pop
push
cltd
fimuls
jne
loopne
aas
and
lds
add
cvtpi2ps
ror
push
in
test
das
xchg
dec
mov
mov
pop
arpl
xor
add
push
shlb
fadds
mov
adc
or
lock
jg
arpl
aad
pop
sbb
pop
and
ja
and
in
into
test
outsb
movsb
jne
loopne
push
daa
js
or
hlt
or
xchg
fadds
xor
push
loop
lcall
fucomi
rcl
mov
pop
hlt
sbb
mov
inc
adc
bound
jae
push
ja
stc
into
adc
push
loope
pop
mov
test
or
or
scas
std
clc
xor
inc
sahf
scas
fidivrl
gs
jo
repz
ljmp
lahf
loope
in
lcall
cmpsb
cmp
repnz
mov
shlb
cmpsl
test
xor
sub
shll
in
or
xchg
ljmp
sbb
imul
stos
pop
dec
and
push
mov
clc
adc
hlt
pop
pop
xchg
adc
jns
scas
inc
int
cmc
jno,pt
dec
test
fwait
pushf
jbe
scas
js
mov
in
pop
sahf
in
or
mov
xor
sbb
bound
rcrb
pop
push
sti
or
popf
loope
jae
mov
iret
dec
lds
sub
das
rcrb
sub
push
movsl
lret
loopne
cmp
ja
push
mov
sub
jnp
xor
in
fs
insb
popa
out
xor
mov
sbb
enter
jb
mov
mov
std
or
inc
arpl
rorb
out
inc
daa
and
or
pop
lea
push
sub
mov
push
incb
pop
cltd
and
std
cmc
lock
push
add
mov
out
inc
testl
inc
mov
jle
and
dec
ret
popf
sub
or
imul
adc
adc
dec
push
xor
pop
icebp
aaa
addr16
and
dec
add
movsb
pop
aaa
sbb
js
hlt
cmp
or
mov
setle
xor
cmp
mov
outsb
das
xchg
add
in
int3
pop
push
xlat
jp
ret
sub
pop
adc
lea
xchg
std
jne
inc
mov
loopne
xlat
out
mov
cmc
adc
inc
xchg
and
cli
push
xchg
jmp
sbb
sbb
lock
sub
orb
inc
out
jg
es
orl
adc
inc
pop
pop
sarl
les
pop
push
xor
mov
pop
mov
ljmp
xchg
adc
insb
pop
inc
test
jns
ret
sub
push
pop
xchg
xchg
stos
loop
dec
or
and
movb
outsb
inc
add
dec
mov
add
xchg
add
mov
test
xchg
cli
iret
xor
xor
mov
call
and
ja
mov
orl
pop
jo
fnstsw
ds
jne
aad
test
xchg
xchg
in
addr16
icebp
mov
dec
and
dec
or
in
or
add
cwtl
hlt
lret
add
lds
fisttpll
dec
movups
mov
mov
fisttpll
aad
mov
push
mov
dec
and
jbe
sub
ja
cmpl
push
mov
insl
pop
inc
mov
cmpl
mov
adc
cmp
xchg
or
jne
jns
jbe
out
cli
fisttpll
outsl
test
ds
or
mov
bound
dec
mov
jmp
sub
xor
stos
xorl
test
stos
push
or
or
je
pop
cld
mov
dec
mov
cmp
adc
leave
in
mov
popf
shr
jae
scas
syscall
or
dec
pop
cmp
and
jl
xchg
mov
xor
pop
arpl
sbbb
cltd
lds
imul
cmp
sbb
ret
repz
push
mov
add
mov
je
xor
psrlw
mov
jnp
push
sahf
mov
daa
jne
xchg
repnz
ja
inc
pop
into
xchg
xchg
inc
push
mov
popa
push
loopne
adc
and
xor
add
xor
sbb
fmuls
adc
scas
xchg
cmp
sbb
aas
pop
das
adc
push
mov
in
fiaddl
fsubrs
xchg
and
pop
and
or
inc
cmp
mov
lock
push
mov
testb
in
inc
call
inc
and
xor
popf
inc
test
jle
push
test
or
add
mov
stos
cltd
cmpsl
mov
xor
inc
in
pop
pop
rol
clc
mov
and
sbb
push
inc
push
adc
lea
int
add
xor
daa
or
xlat
add
add
ret
test
sbb
insl
push
inc
daa
cmp
bound
mov
xlat
jg
mov
add
sub
ret
xchg
or
lock
dec
hlt
lods
rcl
addr16
mov
dec
inc
or
mov
jno
inc
dec
dec
fcoms
scas
lods
or
adc
loope
inc
cltd
cmp
lcall
test
lods
push
lahf
and
dec
mov
nop
jb
mov
inc
sub
loope
scas
dec
fcompl
sbb
dec
std
pop
mov
push
loopne
es
push
push
and
xchg
push
loopne
jecxz
pop
push
and
mov
imul
imul
and
xlat
aad
icebp
or
push
adc
lods
and
andb
jmp
pop
dec
fwait
add
arpl
ljmp
popf
mov
sub
rolb
push
adc
or
cli
mov
xchg
int
das
fwait
push
repnz
cld
cmp
aad
scas
mov
test
sahf
push
or
push
xchg
div
mov
push
xchg
push
cmp
xor
fldz
test
arpl
add
cmpsb
mov
mov
das
push
mov
std
pop
test
xchg
jo
push
jbe
pop
rolb
sbb
inc
lods
ret
cmp
shl
push
rolb
in
push
cld
shlb
xchg
pushl
gs
leave
xchg
jo
rorl
inc
clc
mov
xor
ds
aas
or
inc
ss
and
xlat
mov
jecxz
std
add
add
add
cmp
test
sbb
int3
sahf
insl
shlb
inc
gs
add
xorl
push
cmp
scas
inc
add
dec
out
lock
jmp
inc
add
pop
sub
xor
sbb
insl
aas
mov
add
addl
push
xchg
je
mov
orl
xchg
and
push
jg
mov
xchg
cmp
into
add
and
cld
movsl
push
pop
inc
leave
push
or
js
xchg
xchg
test
movb
dec
scas
filds
shll
cmp
xchg
subl
into
dec
iret
stc
fwait
jmp
xor
mov
or
xchg
int
xlat
imul
scas
arpl
xchg
sub
jns
adc
sti
adc
cs
and
add
imul
pop
lcall
mov
js
pusha
fwait
sub
out
xor
push
loope
loope
nop
test
lods
jmp
lea
push
test
pusha
cli
xchg
or
out
xchg
push
jp
sbb
imul
fistl
push
or
scas
scas
jns
cli
shlb
cmpsl
push
pop
push
adc
popa
pushf
jbe
es
psubusb
inc
add
mov
sbb
xchg
sbb
jno
iret
push
inc
out
jbe
arpl
jne
loope
stc
les
ss
inc
cmp
cltd
imul
fsubs
cs
aaa
dec
out
out
pop
mov
pop
pop
call
loopne
dec
mov
cmpsl
incl
xor
arpl
inc
andl
inc
movsl
dec
jnp
sub
mov
adc
aam
movsb
test
fidivrs
push
push
js
or
enter
shll
cmp
mov
mov
lea
xchg
xchg
test
mov
xor
inc
sub
mov
pop
popl
lret
add
clc
test
xor
jp
gs
or
icebp
cmp
enter
xor
mov
cmp
das
nop
push
sub
data16
ds
mov
loop
in
cmp
adc
pop
negl
stos
pop
cmp
adc
xchg
push
fistpl
sbb
testb
mov
xchg
inc
pop
repnz
pop
mov
mov
sbb
mov
sarl
jb
cmc
sbb
or
icebp
inc
sbb
push
fld
int
fcoml
roll
xor
or
into
mov
pop
mov
scas
dec
inc
cmp
es
ret
sarb
dec
dec
push
mov
sbb
pop
fisttps
loope
inc
mov
push
out
shl
mov
lods
adc
mov
jno
mov
icebp
test
mov
cmp
aaa
cmp
add
fwait
push
fdivs
call
push
imul
imul
or
sub
push
stos
xchg
das
sbbb
xor
dec
mov
mov
cmc
sbbl
cmp
xchg
mov
aam
xor
jno
into
cmp
sub
xchg
sarl
insb
scas
dec
mov
pop
jae
test
xor
cmp
in
fcomi
aad
mov
cmp
insl
xchg
cmp
sbb
gs
mov
xchg
fucompp
add
sub
loop
jp
fidivrl
aad
pop
bound
jns
test
adc
fadd
or
jae
leave
cwtl
mov
xchg
jmp
jmp
pop
and
andl
loope
rcpps
das
mov
inc
paddd
sub
mov
xchg
xchg
in
push
or
clc
add
pop
push
mov
rcrl
loope
add
sbb
out
adc
mov
je
lock
lock
dec
adc
movsl
push
inc
dec
add
test
xchg
push
inc
and
loopne
fstpt
out
sbb
xor
pop
hlt
das
cmp
daa
das
sub
lret
movl
or
sub
jo
jecxz
insb
stc
xchg
xchg
jecxz
aas
adc
dec
pop
lock
dec
push
popa
rol
popa
mov
and
das
cmp
xor
int3
push
pop
pop
je
lods
sub
enter
xchg
rcrl
sbb
xor
stos
scas
stos
mov
cmp
mov
imul
test
jne
loopne
xor
sbb
add
adc
pop
icebp
pop
push
fwait
mulb
and
xor
cwtl
je
pop
shlb
jae
jbe
cmpsl
lea
sbb
jno
cmp
jle
mov
insb
or
scas
and
movsb
out
sbb
mov
testb
outsb
pusha
movsb
popa
fldl
jb
mov
push
mov
adc
lds
cwtl
fcompl
into
addl
cld
test
cmp
adc
inc
es
xor
sub
out
pop
jl
mov
in
fndisi(8087
loopne
scas
dec
xchg
rcrb
loope
pop
dec
cli
pop
dec
add
cltd
mov
push
cmc
pop
push
ss
mov
xchg
js
fwait
push
lret
rorl
sub
and
push
jb
cmp
sub
lods
es
add
nop
nop
mov
adcl
cmpsl
dec
push
push
je
inc
or
ret
shlb
dec
sbb
xchg
cs
clc
or
or
sarb
add
loop
push
iret
inc
outsb
js
add
lahf
inc
and
enter
in
into
sub
jp
mov
test
pusha
pushf
mov
vmaxpd
xchg
sar
xor
std
imull
ret
jae
push
popa
adc
loop
addr16
in
mov
sub
std
jnp
sbb
cmc
ds
adc
or
mov
lods
pop
and
test
sbb
loopne
pop
sbb
mov
xor
adcl
rcr
adc
mov
cwtl
fdivs
lcall
loop
mov
addl
fdiv
leave
ficoms
mov
je
jne
sbb
js
jbe
push
repz
ret
or
movsb
sbb
inc
inc
sbb
insl
mov
into
jns
std
into
mov
inc
mov
in
cmp
js
mov
push
nop
dec
jne
repnz
mov
sahf
lcall
cli
data16
shll
sbb
xchg
xchg
sub
xchg
inc
lahf
imul
mov
jle
cmpsl
bswap
scas
mov
bound
xchg
xchg
jmp
xor
idivb
loop
pop
cld
fstpt
rorb
das
and
and
mov
jnp
lret
aas
sbb
and
jg
insl
xchg
dec
inc
sub
inc
mov
lds
sub
add
repz
stos
lock
add
or
jg
mov
xchg
sbb
test
push
pop
and
dec
inc
test
or
jecxz
gs
mov
xchg
std
sub
test
test
mov
add
or
adc
jle
cld
adc
fs
jb
int
add
mov
or
cmp
push
add
mov
dec
std
mov
dec
scas
xchg
sbb
mov
loopne
rcrb
mov
sbb
mov
dec
and
adc
jb
movsl
xor
test
push
jg
mov
repz
ret
out
sahf
jp
dec
or
jo
xlat
scas
jno
xchg
dec
sub
loopew
mov
lret
loop
leave
jl
mov
hlt
push
push
vmread
xorb
call
aaa
test
jae
dec
shr
mov
add
push
cmc
bound
inc
xchg
pop
jecxz
mov
daa
push
jbe
loopne
adc
mov
fidivs
shrl
sbb
adc
pop
pop
inc
cld
xchg
jle
enter
out
ss
pop
shrl
mov
jmp
cs
lds
mov
lods
mov
mov
xchg
push
jp
pop
into
add
adc
mov
ds
mov
adc
call
xlat
mov
mov
mov
sbb
mov
ss
mov
xchg
out
hlt
or
cmpsb
enter
mov
lods
popa
mov
jle
fwait
in
jecxz
cs
xor
sub
ljmp
fistl
mov
inc
mov
push
sahf
imul
rcrb
jbe
outsb
jp
fstps
and
sbb
loop
addr16
shr
int3
mov
xchg
and
add
je
pop
mov
sub
xor
fcomi
sbb
lock
bound
bound
xchg
adc
xlat
sahf
push
xchg
cmp
outsl
ljmp
cmp
add
cs
cwtl
bound
mov
and
lret
leave
mov
xchg
adc
cli
and
inc
aam
sub
out
mov
das
or
pop
jmp
hlt
dec
mov
mov
test
rorl
and
inc
imul
loopne
push
and
push
pusha
xchg
pop
dec
cmpsl
push
stc
js
test
test
mov
cli
xchg
test
mov
sub
mov
add
cwtl
mov
sub
loopne
xor
pop
fs
or
xchg
push
pusha
add
std
icebp
fidivrs
nop
mov
and
js
pushf
sub
dec
pop
adc
adc
cwtl
sbb
subb
lahf
lcall
jg
pop
loop
cmp
mov
pop
fists
out
loope
xchg
test
outsl
ret
pop
mov
cmp
ficoms
stc
ret
jb
addl
jecxz
sub
mov
ret
fcmovnb
push
cld
lcall
out
loop
das
loope
inc
ss
push
pop
ficomps
fwait
es
int3
or
clc
shrb
and
and
sbb
or
push
sub
dec
pop
sub
movsb
lret
outsb
dec
in
in
mov
hlt
add
fwait
cs
mov
inc
sub
data16
push
push
jo
inc
pusha
lods
and
push
ds
in
push
in
shl
jns
loopne
testb
insl
into
push
mov
and
mov
and
in
fs
jl
es
rclb
mov
or
loop
jle
mov
xchg
mov
mov
ficomps
sbb
icebp
loope
pusha
inc
dec
int3
call
daa
mov
jns
push
das
mov
mov
cld
add
in
js
xchg
repnz
dec
mov
mov
and
sbb
jp
add
insl
sbb
fdivrs
cmp
ljmp
mov
pop
imul
push
mov
cmpsb
cs
cmp
push
in
adc
jp
sarb
push
jp
mov
pop
mov
aam
push
push
je
mov
dec
cmp
cwtl
and
push
fldt
mov
pop
nop
cld
push
loope
pop
mov
aad
shr
aaa
adc
out
jl
push
subb
fsubrs
fcmovu
cmpxchg
sahf
push
push
jge
in
add
or
scas
mov
adc
sub
bound
cmp
movsl
mov
addr16
add
adc
daa
movsb
arpl
sub
stos
jo
stos
movsb
and
hlt
orb
outsb
xchg
push
push
add
scas
lock
shl
and
fistps
inc
nop
shll
sarb
xchg
mov
fimull
cmpsl
mov
mov
adc
lret
jb
pusha
dec
inc
rolb
jecxz
jge
and
pop
fs
fcmovb
jnp
loop
cmp
inc
mov
mov
xor
push
call
in
imul
sub
cmpsb
pop
sub
test
repz
icebp
jne
notb
or
loop
vmaxps
inc
or
xor
add
inc
adc
repnz
push
stos
xchg
testb
and
jne
rol
adc
cmpsb
push
lock
cwtl
call
fldcw
push
mov
data16
in
mov
or
je
sub
loopne
push
cmp
cmp
fnstenv
cltd
adc
movsb
shll
fildl
add
sub
fwait
mov
mov
mov
inc
inc
daa
inc
pusha
jae
dec
sti
fwait
jle
add
xor
cmpl
out
adc
stos
loope
inc
add
loop
mov
pop
popf
jp
insl
sbb
dec
sub
stc
fbld
cmc
dec
ljmp
loopne
cmp
xor
mov
nop
lea
jnp
or
dec
mov
sub
clc
outsb
faddl
clc
mov
push
gs
mov
cmc
imul
sub
cmp
mov
test
or
sub
mov
out
pop
loop
adc
rcrb
data16
lock
call
adc
aam
aas
fsubrs
sti
xor
mov
aas
cmc
sub
sbb
dec
xchg
sbb
nop
mov
andb
mov
jmp
ret
pop
adc
cli
movsl
aaa
jo
mov
add
cmp
adc
ret
imulb
pop
sub
or
adc
enter
xor
mov
add
sbbl
outsl
js
mov
add
shlb
xor
mov
dec
cld
mov
in
mov
cltd
rorb
add
sbb
scas
fdivrs
outsb
outsb
xchg
test
pusha
enter
push
adc
pop
dec
xchg
pop
jecxz
in
cltd
dec
cli
dec
push
sbb
insb
adc
sbbl
and
cld
sbb
push
cmc
push
pop
mov
mov
mov
or
add
out
or
push
jl
addr16
nop
lahf
mov
sbb
adc
sub
test
pop
sbb
mov
cmpsb
testb
mov
aas
push
lds
push
add
and
mov
rolb
neg
fidivl
or
xor
xchg
test
inc
lahf
sarb
dec
fisttps
push
push
sbb
pop
je
iret
dec
test
nop
clc
mov
adc
or
jmp
fiadds
lcall
sub
push
test
add
fdivl
les
clc
cmpl
add
and
push
aaa
push
adc
scas
in
sbb
mov
inc
dec
adc
and
lock
dec
mov
fisttpll
and
rorl
inc
stos
imulb
inc
cmp
or
std
adc
loop
xor
es
inc
lods
or
fs
xor
in
push
mov
mov
loopne
push
pop
movsb
push
xchg
cmpsl
mov
sub
movsl
ljmp
push
repnz
jbe
call
pop
jb
mov
add
push
mov
dec
jecxz
test
in
pop
cwtl
cli
pop
mov
or
inc
jbe
pop
cmp
add
popa
push
pop
and
fidivrl
push
loop
lahf
and
leave
loope
stos
loopne
mov
xchg
and
adc
scas
mov
shl
sub
ljmp
xchg
mov
pop
ret
adc
das
add
add
ret
aaa
insb
mov
pop
mov
push
orl
fwait
mov
xlat
push
push
loopne
cmp
sbb
and
dec
xorb
add
in
sub
xchg
cmp
jo
lock
and
cltd
cmp
mov
sub
stc
outsb
dec
hlt
out
pusha
lret
push
subb
mov
shlb
mov
fucomi
cmp
loop
sub
pushl
jno
into
inc
stc
and
sbbl
loopne
pop
inc
in
ja
out
loopne
arpl
lret
imul
ds
imul
xor
nop
orl
popa
mov
bound
inc
out
dec
sbb
ljmp
inc
jle
push
shlb
pop
sub
fwait
rclb
orb
sbbl
jge
test
sub
dec
icebp
push
or
addb
dec
sub
cmp
lret
cmc
pop
and
add
fmuls
lock
dec
jo
cmp
fbld
stos
jecxz
mov
cwtl
test
pop
inc
add
aas
inc
shll
ficoms
or
jns
or
ss
out
add
lret
and
pop
fstpl
adc
hlt
push
inc
inc
push
out
xchg
xchg
push
sub
mov
test
fwait
jo
pop
push
enter
mov
and
sbb
shlb
lods
cmp
loope
jecxz
sub
add
jle
gs
sahf
or
sbb
sarl
dec
and
mov
xor
mov
data16
xchg
filds
cmp
sbb
test
filds
xchg
data16
sti
test
movsb
fdivrp
outsl
sbb
dec
mov
xchg
mov
sub
push
loopne
shlb
cmpsb
pusha
jbe
enter
pop
clc
push
add
aas
rcll
sub
subb
lock
loopne
lods
xor
xor
and
ret
sbb
jp
mov
sahf
rclb
and
mov
push
fwait
cwtl
fistps
mov
mov
lcall
xor
dec
cmp
test
cwtl
pushf
movsl
sbb
data16
xchg
sar
fidivl
pop
lods
shlb
xor
inc
xchg
loopne
sbb
lahf
mov
scas
ror
les
clc
sub
push
xchg
xchg
push
out
inc
movaps
jmp
adcb
repnz
xor
cwtl
lods
or
out
lock
movsb
mov
inc
inc
mov
push
mov
dec
in
pop
push
cwtl
jle
cmc
inc
stc
adcb
push
ljmp
mov
add
jbe
mov
stos
sbb
xchg
mov
out
dec
mov
arpl
jnp
jmp
adc
das
subb
imul
adc
test
rcr
adc
xchg
ja
sbb
leave
je
int3
sbb
int
ss
inc
sahf
sub
pop
push
sub
test
sbb
ret
pop
subb
cmp
push
push
out
pop
sahf
lea
push
roll
push
js
mov
adc
lret
mov
test
lods
aam
jp
movb
sarb
stos
out
mov
or
dec
bound
or
test
popl
mov
popa
inc
cli
call
adc
push
cmpxchg8b
and
je
adc
or
mov
push
push
jne
out
inc
add
test
xor
push
dec
jle
xchg
jmp
xor
movsl
jno
adc
jo
ret
fildl
mov
in
sbb
imul
aam
cmp
in
push
pop
inc
je
cwtl
in
xchg
pop
test
add
and
dec
ret
xor
out
fcomp
ret
adc
shrl
lods
add
fidivrs
cli
xlat
fmuls
mov
bound
jp
push
dec
pop
push
data16
add
paddb
outsb
mov
sahf
fbld
dec
push
shlb
push
push
sbb
pop
add
into
or
fistpl
xor
push
cltd
add
std
in
add
dec
pushf
push
push
rcll
lea
pop
pop
ret
aam
rcll
xchg
xchg
add
ficoml
xchg
mov
roll
push
bound
stos
cld
ds
std
call
adc
xor
mov
push
dec
clc
jg
popa
mov
arpl
repnz
cmc
pop
adcl
inc
pop
xlat
add
hlt
jecxz
push
pop
push
xor
or
ljmp
push
sbb
sbb
sbb
pop
inc
subb
cld
out
jge
cld
or
bnd
mov
sbb
ds
dec
cmp
cmc
mov
inc
stos
inc
jbe
push
pusha
imul
sbb
dec
data16
push
push
cli
aaa
mov
push
notb
pop
imulb
insb
into
loope
inc
stc
out
inc
movsb
xor
jp
rcrl
lods
insb
pop
or
add
push
hlt
and
sub
ljmp
mov
inc
add
shll
fsub
les
mov
push
xor
or
add
pop
mov
imul
es
aas
adc
sub
insb
or
ret
sbb
cmpsl
popa
jp
sbb
sub
sub
sub
sub
sub
loop
add
cwtl
jo
cs
cmp
dec
ret
push
outsl
pop
xor
mov
jmp
nop
roll
jnp
cli
add
add
push
imul
pushl
or
mov
cmp
jge
mov
sbb
sahf
and
sarb
enter
pusha
and
push
adc
lods
jne
adc
in
xchg
out
loopne
data16
mov
mov
pop
cmpsl
dec
mov
aas
dec
or
in
adc
testl
sbbl
rcll
fmuls
adc
rolb
pop
jl
dec
lahf
xchg
mov
add
and
ret
andb
mov
mov
fs
dec
mov
inc
jmp
sub
lods
dec
or
sub
cltd
js
and
jle
add
mov
sti
adc
lods
ss
pop
mov
aad
dec
movb
adc
xor
sub
xlat
outsl
push
call
mov
js
subl
ret
ss
mov
in
dec
dec
jbe
je
nop
sar
sbb
stos
gs
rolb
insb
dec
sub
scas
test
mov
pop
data16
test
adc
push
lock
jg
sahf
aaa
sahf
shl
outsb
and
xlat
subb
movsl
js
sbb
mov
decb
jl
inc
mov
push
shl
lret
or
cmpsl
add
and
pop
movl
mov
scas
adc
in
cmp
push
mov
xlat
test
mov
mov
out
ret
mov
data16
nop
sbb
int
aaa
lret
outsb
out
adc
lds
adc
in
shld
push
cmpsb
inc
inc
jnp
adc
dec
icebp
pushf
xor
fildll
test
add
les
das
push
jno
fadds
bound
cli
add
lcall
jbe
out
aad
sub
es
addr16
lods
mov
fdivrl
push
pop
insb
adcb
mov
dec
rcl
sub
cmp
and
test
xchg
jbe
push
enter
in
jge
pop
jmp
xlat
cld
push
aam
lds
out
sub
int3
les
jle,pt
jno
rcrl
mov
sbb
enter
jle
dec
shll
lea
mov
jo
jge
pusha
mov
rclb
faddl
and
out
mov
test
lods
add
scas
mov
pop
adc
fisubs
out
cwtl
inc
lds
push
fs
rol
ss
push
data16
jg
adc
iret
pop
jno
xchg
jb
shlb
cmp
mov
sub
add
xchg
sahf
inc
push
cmc
out
sub
or
sub
cs
mov
pop
xor
les
orl
ret
fsubl
jmp
mov
adc
shrl
movsb
mov
lds
call
cmp
dec
mov
push
rorl
add
inc
jg
bound
nop
mov
sbbl
test
and
movsb
adc
add
fisttps
aad
inc
les
ljmp
in
and
mov
push
in
scas
test
push
xor
enter
mov
sub
sbb
rcrb
cmp
xchg
jns
int
mov
jl
or
adc
xchg
loopne
push
icebp
add
in
dec
insb
fsubrl
lea
or
pop
cld
adc
fists
jb
loopne
cld
inc
subb
jo
mov
hlt
sbb
push
jne
call
std
sbb
add
loopne
jle
xchg
in
in
lock
adc
mov
fdivrs
mov
or
pop
rcr
js
dec
add
mov
adc
pushf
add
jge
outsb
sub
scas
push
out
scas
in
xor
je
or
lret
filds
insb
ret
jmp
jbe
xchg
dec
divb
out
or
dec
in
or
sub
les
lods
cld
xlat
push
mov
sbb
mov
sbb
std
fildll
hlt
sub
idivb
inc
and
addb
rcrl
or
cmp
dec
push
ja
lods
add
fsubp
xor
pop
or
sbb
cli
dec
jns
in
call
in
fisubrs
xor
es
jmp
adc
divl
jno
jp
pop
xchg
in
sub
sub
xchg
adc
add
test
test
lret
mov
jb
cld
dec
adc
jge
cmpb
aas
pusha
and
push
mov
subl
ja
push
dec
imul
adc
xchg
mov
mov
shll
icebp
shrl
cld
movsb
push
or
fcoml
fwait
sbb
lahf
and
jno
fsubs
fs
mov
mov
or
jbe
inc
sbb
or
mov
xchg
sarb
and
sbb
push
inc
ja
jp
push
loopne
xor
outsb
sub
xchg
inc
and
cmc
das
sub
xor
inc
repz
jp
lcall
sbb
incl
lcall
dec
nop
cmp
dec
or
insb
popa
cmp
das
enter
dec
xchg
cmp
icebp
push
mull
and
sbb
mov
xor
movsb
sahf
add
cmp
adc
and
stos
push
sti
mov
jno
dec
imul
cmp
das
outsl
adc
pop
sahf
fisubl
mov
pop
cmp
or
jne
mov
outsl
push
dec
mov
inc
xor
test
push
loop
test
jecxz
fdivs
xor
test
sub
mov
pop
adc
xor
cmp
cmc
or
pop
pop
adc
popf
xchg
test
xchg
lcall
sub
pop
mov
push
mov
cltd
add
mov
jmp
mov
inc
mov
shrl
or
push
rorb
xchg
cmp
inc
or
sbb
push
pop
push
daa
cmp
in
add
movsb
aas
and
lds
jns
outsb
ret
roll
and
mov
test
sbb
sub
mov
inc
gs
mov
sbbl
dec
push
add
sub
fwait
add
pop
pop
lods
orb
push
cwtl
jae
fadds
popa
into
sar
aas
and
sub
arpl
mov
ljmp
mov
xchg
shlb
mov
mov
dec
push
cmpsb
mov
xor
aaa
push
push
jmp
ret
or
jecxz
add
fdivs
jo
insl
lret
add
and
mov
cwtl
mov
cwtl
fwait
cld
cmp
push
adc
test
mov
sub
or
sbb
mov
outsl
nop
nop
mov
push
jmp
jge
leave
ds
dec
nop
js
mov
jp
daa
stc
mov
dec
push
pop
sbb
test
pop
pop
inc
in
push
dec
dec
clc
loopne
lds
fs
lcall
gs
sub
dec
push
dec
insb
sti
jp
xchg
jl
dec
cmp
das
mov
sbb
add
xor
xchg
jle
inc
in
lds
andl
add
ljmp
js
insb
xchg
cld
cmp
pop
xchg
js
test
ret
cmpl
push
and
fs
fyl2xp1
mov
mov
add
inc
xchg
in
bnd
push
push
movsb
and
lods
xchg
fisttpl
xor
inc
mov
outsb
jmp
sbbl
roll
andl
cmpsb
mov
sbb
stos
xchg
add
xor
xchg
or
lret
addr16
mov
mov
xor
ret
cmp
or
je
cmp
mov
lret
and
scas
dec
aaa
cmp
ret
mov
push
mov
mov
jg
add
rcrb
sub
int3
stos
scas
pop
jno
cmp
insl
and
pop
cmp
in
adc
xlat
mov
push
jno
cwtl
xchg
call
mov
sub
cltd
sahf
push
insl
imul
mov
dec
pusha
in
aam
pop
pop
lock
dec
orb
sbb
insb
loopne
sbb
xor
adc
movb
cmc
fcmove
jge
mov
sti
incb
jb
scas
call
adc
outsb
mov
cmc
xor
sbb
loop
push
loop
add
mov
mov
cbtw
cs
sbb
ljmp
loopne
lds
mov
addr16
shll
fsubs
cmpsb
jne
fst
fwait
rorl
push
push
mov
mov
pop
mov
inc
ljmp
rorl
mov
lret
fwait
sub
adc
mov
dec
sub
movsb
jns
popf
imul
scas
jns
jecxz
arpl
std
and
mov
mov
test
mov
push
add
sbb
jnp
cs
mov
push
jo
test
sbb
or
in
pop
pop
sub
out
sub
call
outsb
pop
pop
arpl
inc
mov
adc
xchg
mov
outsl
push
psrad
push
xchg
xchg
jo
int
mov
je
pop
std
xchg
mov
inc
icebp
inc
mov
xor
out
xor
orb
jmp
inc
fwait
testb
lods
jmp
push
std
sbb
adc
or
sub
and
and
xchg
sbb
and
je
sub
rolb
sbb
insl
loop
sbb
in
push
lea
mov
lods
jl
popa
imul
js
xor
rcrb
pop
mov
cmc
stc
push
mov
les
jo,pt
mov
aaa
out
cld
add
dec
dec
mov
out
lea
dec
test
xorl
inc
jecxz
and
les
mov
loope
loop
add
push
dec
pop
pop
scas
pop
push
imul
push
jae
fwait
test
jle
cmp
aaa
leave
test
lock
sahf
mov
adc
xor
test
pop
lods
outsl
sbb
push
sbb
es
push
xor
shrb
ret
pop
clc
gs
jle
xor
sub
pop
in
mov
in
jg
aaa
push
or
adc
sbb
dec
add
sub
in
dec
stos
lods
out
cs
and
loop
andb
popf
movsb
lods
xlat
ret
lea
hlt
cltd
adc
je
adc
inc
and
sbb
mov
add
test
xchg
xor
lea
mov
cmpsl
out
lods
mov
inc
movsl
sbb
lahf
sbb
xorl
mov
dec
mov
sbb
rclb
and
jo
jecxz
sbb
and
xor
mov
or
idivl
mov
and
xor
sbb
dec
mov
aam
fucomip
cltd
mov
or
mov
sti
dec
sub
out
push
mov
int
xor
dec
and
mov
add
js
loopne
data16
out
into
negl
push
pusha
aad
les
sbb
or
imul
fsubrs
scas
shrl
insb
sarl
enter
xchg
push
test
sbb
ds
test
jl
repz
nop
ds
push
outsb
fldl
insb
in
ss
out
mov
in
pop
pop
cmpl
icebp
push
adc
sahf
popf
adc
adc
mov
popf
rcrb
stos
sbb
push
rolb
fildl
shll
inc
out
mov
rorb
adc
loopne
sahf
popf
sub
sub
pop
mov
mov
jo
insl
nop
adc
hlt
add
fsubrp
jg
xor
jae
lods
sbb
jmp
jmp
push
pop
adc
out
cmp
pop
popa
cmpsb
inc
iret
rcrb
into
mov
cwtl
adc
xor
in
inc
inc
xlat
stos
aas
add
and
add
cld
mov
dec
xchg
add
out
aam
inc
xor
jo
add
jb
mov
xchg
cmp
pop
aaa
xor
pop
push
push
aas
or
sub
in
xchg
movb
mov
std
hlt
mov
xchg
jmp
add
mov
sbb
shll
jecxz
mov
xor
sub
mov
fcmovnb
sub
mov
loopne
add
mov
test
mov
cltd
lds
repnz
jmp
and
xchg
or
punpcklwd
in
push
cmp
add
cmp
scas
rolb
mov
inc
lcall
and
vpunpcklbw
sbb
ret
rcll
arpl
lea
adc
or
jno
nop
shll
add
sahf
shl
out
ret
cli
mov
pop
daa
inc
repnz
cmpsl
mov
ja
xchg
pusha
mov
addr16
popa
int
cmpsl
and
int
jmp
or
xchg
dec
lods
xor
mov
or
vcvttps2dq
ret
cwtl
fnstcw
int
pop
rcrb
xchg
aad
dec
push
add
int3
push
pop
ja
adc
movsl
adc
movsl
mov
mov
jne
fimuls
repz
hlt
lock
pop
int
pop
sbb
sbb
test
sti
stos
sub
xchg
rcl
push
inc
stc
stos
aam
fwait
rcl
xlat
push
add
roll
push
cmp
inc
rorb
pop
fbstp
xchg
insb
pop
fnstsw
pop
push
dec
icebp
cmpsb
mov
and
xchg
js
and
cmp
sub
cmp
or
sub
and
xchg
jl
shll
push
hlt
fdiv
stos
adc
dec
inc
int3
inc
or
jl
dec
pop
out
mov
push
push
ja
mov
mov
inc
aam
xor
jno
push
jmp
cld
inc
add
scas
mov
adc
cmpl
shll
sbb
sbb
out
pushf
test
cmp
sub
sti
les
es
jecxz
pusha
mov
cld
mov
out
nop
icebp
push
cmp
push
std
pop
inc
inc
and
add
data16
xchg
ret
xchg
mov
imul
mov
insl
adc
sub
stos
fbld
dec
std
test
rol
shll
fsts
sub
test
iret
test
push
inc
jo
or
fcmovu
jecxz
or
sub
or
xlat
pusha
pop
pop
shr
sub
je
shl
add
and
jo
adc
jl
enter
adcl
xchg
int3
sbb
and
mov
mov
rolb
js
xor
adc
clc
mov
out
sti
bound
icebp
dec
pop
or
icebp
std
es
movsl
dec
mov
jns
clc
lea
shll
sbbb
mov
xchg
out
es
lcall
push
loop
insl
mov
sub
push
adc
bound
jecxz
mov
mov
stos
lds
pop
pop
jecxz
dec
cld
test
mov
mov
aas
cmp
push
mov
cmc
cmp
or
movsb
dec
movsl
out
iret
add
fwait
mov
ljmp
mov
lahf
push
sub
icebp
pop
mov
jp
addb
push
inc
aas
test
test
jle
adc
add
pop
jge
imul
or
addr16
sub
js
pop
add
push
jle
test
jle
lods
jb
mov
sub
in
add
outsl
pop
addl
roll
insl
lcall
lret
lds
push
cmp
sub
pop
fwait
xor
test
adc
mov
loope
aaa
mov
adc
call
imul
ja
xchg
imul
push
icebp
or
mov
inc
push
cmpsb
test
add
stos
leave
incl
mov
push
in
inc
pop
bnd
ret
std
loope
mov
movsb
lahf
out
out
lds
and
or
push
add
mov
clc
mov
ficomps
or
sbb
aam
add
je
call
xchg
iret
enter
xchg
pushf
mov
mov
mov
xchg
adc
lock
ljmp
xchg
aad
sub
xor
in
or
clc
loope
call
and
enter
add
and
inc
or
cmp
dec
repz
sbbb
push
test
hlt
jg
or
dec
mov
jno
or
xchg
mov
adc
out
push
leave
add
and
mov
inc
and
xor
mov
shlb
or
or
xor
mov
jmp
mov
cmp
iret
into
rcrl
adc
gs
sbb
push
mov
and
add
inc
jnp
mov
aam
sbb
pop
scas
add
mov
clc
mov
fwait
xor
or
or
mov
decl
and
add
xlat
jg
inc
push
bound
adc
insb
in
cmp
test
daa
out
mov
inc
add
dec
jo
jle
lock
add
mov
enter
cmpsl
das
mov
push
mov
mov
sbb
xchg
mov
adc
adc
lock
dec
push
adc
dec
xlat
in
xchg
or
and
or
adc
test
or
add
xor
jo
mov
lea
mov
push
mov
cs
cwtl
aad
pop
jl
cld
cli
iret
pusha
xchg
pop
sbb
rolb
ds
push
and
jl
sub
push
mov
xor
clts
and
push
stos
andb
imul
dec
or
add
lock
push
das
jmp
ljmp
add
clc
mov
enter
rclb
mov
lods
rcll
adc
not
mov
push
xor
pop
lock
lcall
pop
push
call
lods
cld
fiadds
repnz
lock
xchg
sbb
mov
les
adc
xchg
shrl
mov
mov
clc
jae
in
and
fwait
iret
shlb
jl
incb
je
subl
fwait
sbb
inc
mov
in
mov
dec
add
mov
cmp
lret
sub
cmpsb
adc
add
int3
es
cwtl
ja
xor
inc
xor
jp
mov
mov
mov
mov
sub
and
lock
outsl
mov
adc
dec
push
data16
dec
xchg
nop
sbb
dec
mov
sbb
sbb
lret
movsb
pop
sub
cmp
mov
xor
in
lods
jno
or
je
shrb
lcall
rcrl
add
jno
loope
je
lods
imul
adc
or
dec
ss
mov
pop
ror
mov
sbb
cli
sub
mov
add
xor
call
push
adc
subb
icebp
bound
inc
lds
ds
xor
mov
in
test
test
xorb
jle
push
push
mov
dec
push
jge
xchg
imul
outsb
in
pop
and
das
jle
dec
pop
gs
and
lret
sbb
adc
sbb
test
pop
inc
fdivr
imul
mov
scas
cmp
mov
test
rol
lret
push
mov
adc
jns
push
fcomi
test
mov
jmp
push
cld
test
inc
xor
mov
jns
std
adc
adc
data16
push
sbb
inc
pop
push
xor
or
mov
testb
mov
sbb
int
andl
fidivrl
pop
jne
inc
mov
pop
sbb
push
mov
mov
fldl
lock
or
lret
out
inc
mov
je
sub
mov
push
enter
fistl
sbb
cmp
dec
testl
jecxz
add
in
aam
dec
mov
aam
push
dec
xor
jne
mov
jne
pop
adc
ret
lods
xor
clc
add
xchg
sub
repnz
leave
addr16
inc
sbb
arpl
sbb
jmp
push
movsb
in
decb
aaa
xor
andb
inc
xor
addb
add
sub
pop
shlb
dec
das
setnp
mov
rclb
mov
pop
mov
movsl
adc
inc
pop
mov
mov
xlat
movsl
movhps
mov
cmp
dec
enter
je
sbb
lret
push
jne
xor
into
push
jge
xchg
pop
cmp
mov
pusha
mov
or
mov
movsb
push
fnstcw
add
lods
rorb
push
add
cmp
inc
add
aad
imul
adc
ret
and
jg
xchg
mov
dec
push
cmp
or
shlb
pushf
cmpsb
lret
lret
inc
xor
das
out
cmp
sbb
mov
lahf
xchg
mov
mov
daa
push
push
mov
lds
or
push
cmp
and
jg
dec
cwtl
bound
and
cmpsl
mov
inc
inc
enter
inc
shlb
pop
inc
data16
lret
data16
sbbb
push
xlat
lock
or
dec
inc
fs
xchg
lds
movsb
int
inc
scas
mov
push
sti
repnz
xor
notb
fisubs
cwtl
and
je
mov
xor
add
mov
mov
mov
push
aaa
test
lea
pop
push
jle
loop
rorl
loop
mov
mov
dec
mov
sarb
xor
pusha
insb
jbe
test
sbb
mov
je
add
loope
jbe
xchg
pop
outsb
cs
test
adc
mov
idivl
pop
or
xor
out
mov
loope
js
push
out
push
add
mov
loop
adc
cmp
lods
clc
adc
cmpsb
mov
movsb
lods
mov
sub
imul
mov
iret
test
mov
and
enter
outsl
mov
mov
mov
stos
cmc
jbe
mov
fsubrs
icebp
push
jg
sbb
pop
out
fists
mov
stos
testb
and
popf
aaa
push
icebp
lock
sbb
imul
int
jle
lea
int3
mov
sbb
test
mov
inc
or
push
out
mov
xor
cwtl
inc
dec
or
push
adc
scas
aaa
mov
lods
or
and
out
bound
loopne
push
dec
insb
add
cmp
or
xchg
and
pop
fdiv
rcrl
sbb
jbe
inc
sbb
push
lcall
push
dec
mov
cmpsl
push
jnp
shll
cwtl
xor
lea
xor
stos
ds
cmp
xchg
imul
dec
rclb
dec
cmp
jl
jnp
adc
test
loop
jne
pop
int
fcmovnu
pop
cs
and
pop
pop
push
jno
ja
outsl
pushf
lods
sub
lcall
call
test
add
das
inc
loopne
fs
add
cmpsb
cmp
cmp
mov
stos
dec
dec
sub
js
repnz
inc
add
clc
orb
mov
andb
lods
adc
outsb
pop
jge
aaa
push
add
rcrb
cmp
in
scas
call
xor
pop
lock
mov
pop
mov
inc
cmc
and
pop
lahf
gs
jecxz,pt
xor
mov
shr
mov
popa
bound
mov
in
mov
xchg
imul
pop
inc
xor
fwait
and
jmp
ja
xchg
dec
rolb
xchg
add
inc
xchg
adc
lods
cmp
lock
gs
sbb
mov
xorl
xchg
dec
sbb
mov
xor
mov
fisubl
mov
mov
add
movsl
loope
and
lea
or
or
dec
and
js
movsb
add
aaa
push
dec
inc
nop
jbe
or
mov
sbb
lret
enter
mov
sub
or
sbb
por
lea
push
loope
test
push
add
lea
mov
mov
jb
inc
or
loop
push
pop
cld
push
cmpl
rol
insb
add
jg
add
cmp
std
mov
mov
aas
jp
xor
mov
mov
xchg
cmp
bound
mov
jns
cltd
in
mov
jecxz
xor
push
adc
xchg
adc
sahf
xor
adc
pop
pop
mov
cmp
arpl
loop
enter
aad
xor
adc
nop
in
adc
dec
inc
ficompl
mov
stc
orb
inc
std
fsubr
xor
inc
mov
lds
adc
test
lret
sub
push
xlat
and
pop
out
inc
rorl
mov
jge
pop
sbb
mov
sahf
in
mov
pop
adc
push
pop
int
or
orl
sub
push
mov
std
imul
mov
mov
fcmovnu
jmp
jge
test
pop
inc
push
dec
repz
shrl
inc
adc
jb
push
jge
loopnew
or
add
clc
bound
inc
hlt
and
add
icebp
or
aas
cwtl
cmp
or
call
test
lahf
and
mov
cmp
jnp
daa
sti
mov
add
sbb
cld
xchg
sub
push
cwtl
repz
sub
call
jo
mov
add
pop
mov
jmp
adc
flds
outsb
mov
add
imull
or
les
mov
stc
jo
sbb
xor
lret
lods
jb
cmp
sbb
xor
push
push
mov
subb
sub
sahf
sbb
enter
outsb
jecxz
xor
push
cmc
popf
mov
lea
dec
inc
ljmp
enter
adc
in
add
lahf
and
shlb
loopne
out
ss
lahf
lret
cmp
inc
jg
sbb
mov
pop
or
push
push
call
adcl
fdivrl
or
push
insb
push
push
lods
push
push
sub
sub
lcall
ret
outsl
ljmp
xchg
insb
lods
outsb
cmpsb
push
xchg
fwait
sbb
pop
jp
ficomps
shll
cmp
mov
xchg
leave
es
mov
pop
push
xchg
out
inc
das
stc
dec
shrb
and
inc
mov
xor
push
xchg
ds
xor
mov
xor
daa
enter
and
pop
xchg
hlt
fdivl
fs
and
lret
pop
les
sti
sbb
movsb
loop
sbbb
loope
push
push
jmp
roll
mov
gs
pop
nop
sub
test
xor
dec
cli
dec
popa
ret
fdivr
sub
test
int3
shl
call
ds
js
insb
cmpxchg
loop
xor
repnz
mov
pop
mov
pop
dec
mov
pop
dec
js
pop
ret
xchg
jge
dec
dec
xchg
subl
jbe
mov
sub
std
lret
movswl
and
sbb
mov
popf
inc
or
rcrl
push
jno
into
adc
pop
pop
push
inc
loope
shlb
filds
cmc
xor
sub
cmp
in
sarb
sub
mov
js
fistps
inc
iret
cld
mov
enter
adc
test
cmp
add
mov
sub
mov
jo
sub
jmp
sbb
lret
sub
jle
cmc
and
loope
xchg
in
adc
loop
neg
xchg
stc
and
jmp
decl
dec
push
jne
xchg
mov
pushl
dec
mov
jle
mov
push
push
xchg
adc
cli
cmp
cmp
pop
dec
test
dec
jns
add
enter
inc
add
sub
mov
es
fsubs
pushf
adc
xchg
rorb
dec
push
hlt
ds
or
inc
scas
and
add
mov
pop
loopne
call
dec
fildl
fisubrs
lods
inc
jmp
adc
int
loopne
icebp
cli
les
mov
mov
shrb
scas
push
cwtl
mov
in
pop
arpl
add
cmp
pop
popl
mov
mov
fs
out
add
ljmp
scas
pusha
bound
push
test
addr16
and
lret
push
and
in
cmpsb
lret
ret
pop
in
dec
repnz
rorl
add
out
shll
pusha
and
push
clc
subb
movsl
out
fs
test
push
mov
inc
mov
mov
mov
xchg
sarb
xchg
add
fistps
pusha
push
sub
stos
xor
cli
icebp
decb
dec
inc
add
imulb
inc
or
add
lret
aas
xlat
out
movl
cwtl
dec
jg
mov
inc
mov
lret
jae
out
dec
orb
jns
xchg
adc
enter
scas
mov
push
aas
xor
cli
sbb
fcmovu
fucomi
les
es
mov
lret
cs
in
mov
imul
add
mov
add
pop
addr16
mul
add
adc
cltd
fmull
pop
sub
aaa
adc
adc
lahf
pop
inc
lds
xor
push
jecxz
add
test
xchg
pop
incb
push
icebp
fcomps
sub
push
cld
push
aad
test
aam
pop
push
jmp
ret
or
imull
pusha
adc
shrl
push
xor
imul
imul
adc
test
frstor
sub
sub
xchg
cmpsb
sbb
enter
pusha
ret
mov
jge
or
cmp
sub
out
mov
xchg
mov
loope
lret
mov
in
loopne
jecxz
and
bound
push
rolb
test
and
subl
into
lret
adc
mov
jl
test
pusha
shrl
cmpb
inc
pop
cmp
gs
pop
test
call
and
fwait
sbb
mov
mov
mov
mov
fwait
cmc
sbb
xchg
and
pusha
push
xchg
mov
lods
mov
in
sbb
and
adc
fcom
dec
aam
add
mov
jg
inc
lcall
sarl
js
cmp
lock
sahf
xor
lahf
insl
pop
or
inc
repz
fdivrs
mov
adc
jle
imul
loopw
outsl
jno
lock
into
and
cld
cwtl
and
pushf
cwtl
fwait
testb
mov
pop
pop
out
adc
inc
mov
mov
insb
and
sub
sub
ljmp
incl
out
xorb
clc
movl
scas
sbb
and
cmp
shlb
dec
ret
add
fimull
mov
int
into
nop
pop
jne
push
int
test
shll
sbb
add
std
ret
mov
fwait
dec
lahf
ret
pop
xchg
inc
mov
adc
fsubl
ret
cmp
fs
add
fmull
fldl
fwait
std
pop
dec
jecxz
stos
xorl
push
mov
lcall
and
sub
shlb
push
mov
add
mov
in
jb
or
mov
out
data16
xchg
mov
dec
ljmp
out
shl
sbbl
out
mov
adc
dec
inc
push
scas
dec
cmpb
fstpl
scas
shrb
scas
xchg
ret
cmp
mov
inc
shll
test
mov
jno
mov
and
sub
jp
mov
xlat
push
je
xor
ror
test
push
mov
or
inc
hlt
dec
fcoml
aad
mov
jb
mov
push
pop
mov
insb
cli
adc
and
inc
xchg
xchg
popa
out
loopne
cmpsl
fs
push
cmp
sbb
icebp
inc
fnsave
sahf
push
loopne
mov
lock
mov
pop
shlb
subb
fstpl
xlat
dec
mov
sub
stos
mov
rolb
jo
adc
jle
cltd
mul
pop
rcr
icebp
test
jb
push
scas
movsb
jbe
movsl
xor
scas
sahf
test
sbb
test
test
mov
push
scas
orb
xchg
jo
iret
shrb
mov
jp
lock
cmp
xchg
loop
jle
mov
add
enter
popa
and
mov
jge
push
mov
pop
mov
dec
or
into
mov
xor
test
dec
fstpl
scas
mov
ja
hlt
je
cli
mov
insb
cld
push
xchg
lret
jns
sbb
aad
sub
mull
add
and
mov
fmull
nop
xchg
loopnew
icebp
shl
fistpl
rcll
je
mov
inc
ffreep
push
scas
test
icebp
jno
inc
data16
jnp
adc
enter
and
jge
test
adc
xchg
aaa
and
push
add
loope
test
push
push
negl
lret
push
hlt
adc
or
inc
ret
sub
add
test
cmp
in
pop
add
cltd
lods
sbb
fwait
int3
mov
add
fs
push
xor
mov
test
pop
clc
mov
sbb
and
setae
add
inc
sub
cmpsb
lods
and
adc
je
xor
sbb
xor
lock
or
jp
cmp
mov
and
mov
loopne
rclb
mov
les
jg
hlt
stos
fimuls
mov
shl
cmp
mov
pop
cltd
je
jb
mov
std
ljmp
xor
pop
jge
pop
outsb
xor
mov
sbb
rolb
lret
out
or
lock
mov
or
ret
add
aas
loope
ja
mov
adc
mov
leave
imul
xorb
push
test
leave
push
dec
divb
mov
jbe
push
lods
repnz
hlt
cmp
aam
push
icebp
push
sahf
rcrl
inc
daa
jge,pt
fidivs
mov
jo
mov
xlat
out
sahf
inc
addr16
iret
jmp
fdivrl
xchg
scas
je
cmc
es
sub
or
loope
fisubl
ret
add
and
pop
jp
inc
out
lahf
jecxz
push
cltd
shlb
dec
mov
sahf
andb
pusha
inc
fnsave
inc
jl
nop
test
inc
mov
test
hlt
clc
movsl
jnp
fidivl
cli
data16
and
hlt
adc
pop
into
ljmp
jbe
mov
xor
lods
push
scas
pop
sbb
inc
sbb
push
les
mov
daa
lds
nop
in
add
das
fwait
insl
inc
mov
ljmp
adc
dec
inc
pop
add
mov
jle
inc
sbb
or
fiaddl
or
mov
sarb
mov
mov
mov
jp
push
mov
sbb
add
mov
sbb
pop
cmp
aam
add
mov
or
ret
popf
mov
movsb
push
ret
aas
mov
sbbb
adc
sbb
cmp
or
cmpsl
push
loop
push
xchg
insb
cwtl
sahf
and
les
sahf
sub
inc
inc
push
rcl
push
outsb
pop
lcall
push
ss
shlb
movsb
xor
ljmp
jp
stc
lcall
push
in
sbb
jmp
or
dec
pusha
bound
out
shll
or
mov
sub
mov
pop
aam
jo
jb
in
sbb
ret
imul
xlat
daa
movb
aas
pop
dec
push
mov
or
dec
je
nop
ja
orl
mov
movsb
orl
dec
mov
sbb
sbb
jne
sbb
test
insl
sbb
inc
adc
testb
xor
decl
ret
fidivrs
call
ret
pop
shrl
orl
cld
movb
add
or
add
mov
adcb
sahf
sahf
sahf
test
dec
dec
dec
mov
adc
rorl
ficoms
push
imul
sub
pop
loope
popa
jb
add
cmp
sbb
sbb
pminsw
sub
loope
icebp
and
cli
dec
js
out
out
clc
jo
icebp
and
shll
mov
jle
sti
notb
lea
or
mov
xor
xchg
dec
ret
daa
or
mov
pop
mov
clc
andl
fbld
int
in
and
push
and
xor
mov
add
pusha
sbbb
in
je
xchg
xchg
imul
mov
cmpl
outsl
repnz
out
movsb
out
nop
adc
jp
add
dec
mov
or
xor
testl
jb
loopne
cmp
mov
imul
fwait
mov
fs
into
pop
or
and
mov
add
mov
cmp
fdiv
ror
insb
pop
mov
dec
sbb
cmp
loope
sti
lods
sarb
in
push
add
fisubl
fcoms
out
inc
mov
les
arpl
and
sbb
cs
jmp
or
and
add
add
mov
ja
or
inc
cs
adc
cli
aam
jbe
cltd
or
popf
je
lds
xchg
xchg
adc
js
xor
jbe
xor
ret
mov
inc
jecxz
adc
cmp
insb
repz
lock
fwait
ljmp
inc
pop
push
sbb
cmp
cltd
dec
pop
adc
cmc
add
mov
mov
call
jmp
test
mov
xor
xor
mov
xor
adc
stc
scas
imul
clc
push
pop
mov
xchg
sbb
cwtl
roll
or
insl
mov
loop
cmp
pusha
add
das
pop
inc
pop
add
scas
addl
jb
xchg
push
mov
xor
pop
push
std
pop
dec
xchg
mov
sarb
ja
ja
aad
mov
pop
ljmp
cs
mov
fs
test
sbb
cmp
aam
cmpsb
daa
mov
jae
aad
adc
sti
fld
add
and
in
iret
pop
add
fdivrs
outsl
sub
sbb
inc
mov
push
movsb
jne
pop
mov
in
lods
ret
inc
aas
push
push
or
dec
xlat
loope
or
cltd
stos
in
in
push
mov
or
imul
cli
dec
dec
pushf
les
ror
cmpsb
lret
loopne
aam
das
mov
mov
jnp
inc
pop
aam
sbbl
clc
stos
shll
mov
mov
cltd
scas
mov
jl
cmp
das
loope
add
mov
test
flds
lret
cmp
cld
sbb
je
xor
dec
jbe
bnd
cmp
fcoms
hlt
or
nop
or
jmp
lods
sub
fs
bound
inc
mov
pop
dec
sbb
jbe
cli
push
iret
xchg
cs
test
pop
push
aas
dec
pop
push
icebp
rorl
les
fs
sub
add
mov
inc
push
push
dec
pushf
pop
scas
inc
pop
xor
call
fdivrl
cmp
aad
outsb
rcll
ja
shll
std
movsb
mov
dec
stc
jg
push
add
fnstenv
std
mov
inc
push
cmpsb
mov
leave
shll
cmp
imul
incb
add
mov
sub
xchg
pop
inc
push
add
dec
inc
sub
xor
sbb
and
retw
mov
mov
add
fcomps
outsl
mov
fs
add
cwtl
hlt
mov
out
daa
mov
xchg
pop
or
fstps
sub
sbb
or
dec
add
adc
leave
jnp
xor
je
adc
and
add
dec
scas
je
clc
pop
push
adcl
mov
call
sbb
into
fadds
int
out
push
sub
xor
cmp
add
mov
push
lcall
call
jp
xor
push
mov
icebp
adc
enter
mov
fldl
add
and
add
int
push
push
iret
mov
inc
jecxz
sbb
imul
movsl
or
aad
das
cmp
nop
push
mov
lea
leave
inc
leave
mov
popf
outsl
add
fcompl
add
jecxz
in
fnstcw
adc
mov
adc
xchg
cmc
xchg
sub
aaa
sub
mov
mov
rep
mov
addb
rcrb
sbb
jp
cmpsb
cmc
jmp
ret
adc
and
xchg
push
mov
and
arpl
sbb
mull
repnz
icebp
xor
je
mov
mov
or
sub
xlat
add
adc
jae
sti
add
data16
xor
ret
mov
lea
mov
xlat
in
cmpsb
jo
nop
add
cmp
jno
shlb
mov
icebp
jge
push
mov
scas
mov
xchg
sub
mov
add
jne
scas
dec
mov
sbb
xor
add
xchg
pop
jb
jecxz
les
push
outsl
inc
lods
push
jo,pt
mov
add
xchg
mov
cmc
or
repnz
rolb
imul
loopne
or
inc
enter
loopne
xor
pop
icebp
cmpsl
and
jb
add
or
xor
mov
add
or
pusha
xor
inc
test
xor
or
movsb
pop
loopne
mov
inc
movsb
dec
daa
inc
xchg
inc
ja
xor
inc
cmp
aaa
jmp
or
cltd
xchg
nop
and
orl
ja
push
rclb
mov
dec
ret
movsl
sahf
or
mov
sbb
lcall
xor
cli
repz
jp
cmp
mov
addr16
imul
cmp
pop
scas
adc
in
mov
push
xchg
fcmovnb
sbb
and
arpl
cmp
in
andl
bound
pop
push
lods
adc
lcall
sbb
addl
and
popf
mov
enter
divl
pop
xchg
push
addr16
inc
popa
jmp
xchg
mov
jl
mov
incl
aam
ja
mov
cmp
fists
add
fld
jmp
jmp
mov
idivb
inc
movsb
hlt
sbb
cmpsl
adc
mov
sbb
pusha
hlt
cltd
and
or
insb
inc
or
icebp
push
aam
lahf
cmp
and
fstpl
stc
lods
inc
or
add
pop
adc
push
mov
insl
cmpsb
lret
mov
xchg
pop
mov
dec
hlt
lods
psubusb
pushf
aaa
enter
sarb
leave
xor
xor
jmp
movsb
fwait
dec
jnp
aas
push
xor
mov
xorl
or
les
cmp
mov
lods
je
test
or
lret
dec
movsb
scas
dec
cwtl
or
and
fcmovbe
clc
jmp
mov
stc
sbb
dec
or
push
mov
das
jo
js
xchg
ret
rcll
cmp
movsl
mov
dec
ret
sbb
jno
ret
adc
mov
not
pop
test
mov
cs
or
mov
mov
mov
dec
ret
fs
js
cs
adc
clc
icebp
mov
or
sbb
push
lret
and
push
pop
xchg
out
and
adc
fdivs
pop
dec
cmp
out
test
push
cmp
fucomi
inc
xor
arpl
insl
mov
ret
sbb
lods
dec
mov
add
dec
pop
jmp
and
imul
sarl
pop
dec
pop
shll
cmpsl
lcall
mov
and
xorl
test
lahf
loopne
loope
shr
mov
mov
dec
jmp
shlb
rolb
ror
jp
dec
std
lock
push
mov
dec
and
xor
add
fistl
cmp
idiv
rorl
mov
pop
sbb
test
mov
lds
loope
cmp
inc
leave
cmp
out
pop
clc
and
add
arpl
incl
popf
int3
jecxz
push
lret
mov
je
xor
add
or
mul
arpl
icebp
mov
lods
js
inc
sbb
pop
fnstenv
adc
jo
dec
popa
or
fnstenv
push
push
push
lods
pop
test
push
push
sbb
sbb
in
mov
in
inc
add
cmp
mov
pop
push
pop
inc
lahf
xchg
xchg
movl
pop
mov
dec
ret
jae
stos
out
inc
jne
hlt
xor
mov
jl
inc
insl
pop
xchg
mull
fistpl
dec
enter
imul
inc
icebp
add
push
cmp
and
xor
jg
pusha
ljmp
sub
pushf
call
das
xchg
adc
pop
jp
jnp
xchg
adc
test
push
add
sar
arpl
jbe
imul
xor
mov
lds
imul
sarb
cltd
jno
mov
clc
je
cmp
enter
shll
mull
cmp
sarl
stos
icebp
mov
es
test
push
pop
add
pop
adc
xchg
and
cmpb
xchg
pop
cmpl
mov
movsl
lods
lods
jne
pop
scas
jp
shll
flds
inc
sarl
aam
dec
sahf
dec
popa
cmp
push
int
rol
leave
dec
xchg
mov
dec
mov
bound
mov
arpl
cmp
rclb
pop
repz
into
test
jecxz
insl
sub
pop
push
in
jb
push
aas
add
mov
out
lahf
xchg
or
ljmp
loope
ficoml
cmp
sarl
xor
clc
add
js
test
xchg
xchg
sbbl
add
testb
xor
mov
scas
sub
xchg
mov
movsl
icebp
dec
mov
hlt
imul
cli
cmpsb
ret
or
push
sub
dec
xchg
xorb
mov
lret
adc
nop
decb
outsl
dec
and
comiss
int3
cmp
xchg
sbb
mov
or
test
ficoms
sbb
rcll
adc
mov
movsl
aaa
loope
mov
clc
or
adcb
test
jno
add
xchg
lret
mov
arpl
call
les
shlb
movsb
xor
flds
dec
cmp
mov
fwait
outsl
dec
ss
mov
mov
je
lods
clc
popa
aad
adc
fwait
loope
fimuls
lds
mov
test
icebp
and
xor
dec
js
pop
or
lahf
push
xchg
push
aam
roll
fwait
cmp
or
lcall
repnz
psubb
add
nop
and
adc
nop
and
js
lret
decb
and
xchg
jbe
mov
dec
ljmp
sub
movsl
and
out
pop
test
ret
add
insb
adcb
pop
mov
push
shll
push
cli
dec
pop
mov
push
lret
fwait
push
out
pop
js
xchg
add
mov
add
dec
jl
mov
jle
int3
add
sbb
or
add
cmpsb
sahf
push
push
lcall
push
subb
shl
fwait
ja
test
add
mov
push
adc
mov
rorl
in
adc
shlb
icebp
sahf
in
jno
xor
pop
lcall
sti
pushl
inc
test
cmp
or
pmulhuw
jmp
out
rep
sar
or
cmp
enter
and
popa
and
adc
and
pusha
jecxz
sbb
dec
sub
lods
sub
inc
and
mov
xchg
sub
push
shll
inc
fs
push
adc
jg
arpl
pop
pop
nop
loop
cld
or
xchg
push
andl
loopne
fdivr
inc
aam
mov
pop
fs
aas
jns
cltd
xor
inc
in
xchg
pushl
adc
addb
add
pop
or
movsl
fs
mov
shrl
xchg
ljmp
mov
mov
lock
cli
inc
adc
cmp
xchg
dec
add
cmpsb
test
xor
or
mov
ss
daa
push
sub
cs
push
inc
mov
cmc
xchg
mov
sbb
out
dec
lahf
dec
and
lcall
scas
aaa
mov
clc
je
cli
loopne
test
dec
rclb
mov
test
mov
int3
push
call
mov
pop
cmp
xor
jno
in
stos
push
clc
pop
mov
rolb
add
icebp
mov
ss
add
inc
outsb
lcall
das
sbb
aad
in
in
mov
hlt
lcall
sbb
je
xchg
lret
cwtl
sbb
add
xchg
jge
mov
mov
cli
test
loope
sbb
adc
lahf
jle
outsl
and
dec
fcoml
ljmp
rclb
jbe
arpl
testb
cmp
pusha
call
fcoml
out
mov
adc
aam
inc
adc
xchg
add
pushf
or
push
movsl
fs
add
movsl
test
popa
sbb
fcomps
mov
jmp
push
rcrb
addb
sahf
cmp
push
sub
movq
bound
adc
jb
rcll
cmpsb
jnp
and
inc
std
hlt
mov
lahf
and
pop
cmpsb
loop
push
lods
iret
push
cmpsl
inc
data16
dec
subl
mov
orb
fsubrs
pusha
push
push
adc
ljmp
inc
sti
rclb
adc
out
mov
sbb
test
pop
enter
insb
clc
ret
lret
add
or
and
sbb
sbb
shl
out
cmpsb
hlt
sbb
xor
sub
imul
jno
mov
inc
rcll
mov
rclb
scas
out
xchg
push
int
cmp
add
add
imul
cmpsb
pushf
loopne
ja
and
loope
popf
in
ficoml
mov
adcl
pop
test
lock
mov
push
dec
and
mov
mov
lock
or
push
mov
xor
leave
loop
aam
xchg
jmp
roll
push
sub
out
movb
lds
push
sub
pusha
push
ret
adc
test
pop
xchg
push
hlt
call
fs
decb
imul
or
cmpsl
aam
mov
push
lock
mov
out
mov
mov
in
and
je
mov
inc
mov
mov
jb
pop
cli
ffreep
jle
hlt
or
or
aas
sub
aaa
in
adc
repnz
mov
add
icebp
js
fdivs
push
xor
mov
jle
mov
jecxz
adc
into
push
cmc
mov
inc
jmp
das
cmp
mov
pop
cmp
mov
cmpsb
sbb
jno
sub
adc
push
push
pusha
xchg
inc
cmp
add
cmp
mov
test
add
jb
sbb
je
fmul
shrl
enter
loopne
push
pop
pop
nop
pop
hlt
aas
iret
xlat
jmp
dec
push
in
sub
push
fisubrs
icebp
insl
into
pop
jb
jbe
pop
stos
mov
sub
pop
test
jecxz
das
pop
aas
sbb
shll
inc
or
sbb
inc
push
add
orb
pop
pop
mov
fsubl
je
pop
popf
mov
stos
jo
sub
imul
jle
xchg
mov
icebp
test
xorl
out
sbb
mov
scas
cmp
addl
pcmpeqd
mov
sbb
mov
xor
inc
adc
xchg
mov
sbb
mov
jg
mov
dec
ds
push
and
and
roll
ds
sbb
ret
cmpsl
jge
mov
mov
inc
aaa
pop
imul
fidivl
aad
dec
pop
pop
dec
mov
fmuls
out
lods
mov
nop
test
ja,pt
lock
movsb
dec
cld
test
mov
fucompp
add
enter
mov
push
xorb
call
or
imul
mov
dec
sti
je
dec
loopne
mov
push
cmp
mov
iret
enter
rclb
fidivs
loopne
lahf
mov
jl
popa
arpl
sbb
loop
pop
mov
add
add
push
ret
adc
fs
push
icebp
inc
sbb
dec
popf
adcb
lahf
mov
idivb
pop
clc
scas
stos
arpl
jo
les
loop
xor
jnp
mov
push
test
push
dec
and
les
push
les
frstor
insl
lock
pop
add
stos
and
mov
push
into
xlat
xchg
es
ret
push
cmp
sbb
fdivp
daa
std
jge
imul
or
adc
clc
add
cmc
adc
pop
mov
jbe
sbb
nop
dec
movsbl
les
lds
push
pop
mov
pop
sbbb
imul
lods
icebp
icebp
adc
movl
shrb
push
and
fiaddl
and
mov
xlat
scas
cli
mov
ret
repnz
lock
and
sbb
adc
xor
xchg
rcrb
mov
cmp
test
mov
enter
loop
cmp
ficoml
adc
mov
push
hlt
cmpsl
lcall
sbbb
push
rol
imul
mov
adc
ja
lret
cmp
push
pop
sub
sub
adc
lret
ja
adc
pop
loop
cmpsb
stos
lahf
ret
pop
cwtl
scas
ret
adcb
lock
ljmp
addb
out
inc
sahf
inc
mov
adc
pop
or
mov
icebp
sub
je
adc
inc
addr16
cli
in
push
sbb
push
cmpb
or
cs
pop
mov
dec
and
cld
and
scas
xor
mov
push
jne
enter
test
clc
jo
aad
outsl
mov
mov
sub
mov
push
ret
and
push
fimuls
push
loopne
ljmp
in
fsubrl
pop
pop
repz
lods
jecxz
sub
adc
ljmp
jb
mov
sub
jl
loope
mov
mov
push
jmp
sar
or
jmp
push
adc
insl
aas
mov
lret
xchg
pop
aas
mov
insb
jmp
js
fisttpll
and
sbb
out
in
pop
sbb
mov
dec
addl
xchg
xorb
mov
mov
scas
or
movsb
or
in
test
out
fcomps
sbb
xor
or
dec
xor
inc
sbb
cmp
add
sub
loopne
jmp
push
dec
xchg
cmp
push
cmpsl
pop
and
inc
dec
dec
aaa
jge
mov
push
mov
sbb
adc
and
incl
inc
hlt
add
and
sbb
inc
pop
or
add
js
fimull
push
mov
loope
sahf
adc
loop
push
out
rclb
lock
inc
sbb
aam
inc
push
mov
test
jno
cs
jbe
or
inc
bound
add
sub
and
shlb
jb
dec
jmp
sub
pop
test
xchg
jl
jmp
loop,pn
push
inc
push
jge
mov
cmp
push
fwait
and
adc
push
and
jmp
inc
dec
dec
cld
fmull
popf
push
xchg
mov
fisttps
dec
hlt
adc
mov
adc
test
std
and
and
push
pop
pop
popa
push
add
mov
push
jns
cwtl
add
mov
inc
mov
fmul
xchg
ljmp
mov
iret
mov
xchg
movl
sub
cmp
test
lods
xchg
paddsw
jp
push
push
std
jg
jle
and
loop
imul
mov
mov
push
push
clc
pop
mov
into
je
mov
hlt
outsb
add
jp
std
mov
rol
mov
cmp
andb
and
adcb
incl
or
mov
loop
lret
test
and
js
sti
sbb
jo
cs
cld
data16
ljmp
ja
sub
jl
insl
cli
loopne
add
cmp
and
arpl
lock
sbbb
movsl
or
movsb
test
xchg
and
subl
pop
pop
and
ret
mov
outsb
jl
xor
or
test
pop
pop
pop
jmp
adc
push
add
outsl
enter
fimuls
push
mov
dec
jmp
cmp
cmpsb
xor
ss
in
and
fucomi
pop
push
hlt
inc
into
ret
mov
xor
push
jno
lret
jle
sbb
push
add
jle
daa
xlat
dec
shrb
mov
cmp
movsb
pusha
sbb
cli
hlt
jbe
xlat
mov
das
mov
mov
jg
jnp
lds
ret
out
xchg
movsb
cmpsb
rcl
rcll
inc
cwtl
in
iret
js
lods
data16
mov
shlb
push
std
adc
adc
jne
push
pop
popa
lret
adc
mov
mov
mov
scas
divb
mov
out
xchg
scas
es
rcrl
mov
shl
and
pushf
add
mov
std
lret
aaa
add
inc
dec
sbb
leave
clc
pushf
mov
sarl
jmp
mov
cwtl
clc
rcll
dec
adc
add
addr16
sahf
push
xor
sub
xor
or
cmp
jecxz
call
scas
xchg
inc
xchg
fs
lods
push
loope
sub
sbb
fisubl
or
mov
add
and
int3
add
insl
or
adc
loopne
into
jge
lods
jg
cmpsl
xchg
cwtl
mov
push
lds
add
pop
sarb
mov
cmp
cmp
clc
or
jmp
sub
inc
cmp
aam
pushf
mov
lret
mov
push
or
cmp
scas
adc
mov
mov
or
pusha
leave
inc
sbb
and
push
enter
adc
add
iret
addr16
sbb
out
out
pop
cld
pop
push
mov
jg
jecxz
inc
push
cmpsl
inc
sub
or
loopne
push
xor
sahf
sbb
xor
filds
mov
in
insl
inc
mov
mov
add
dec
xchg
jns
push
out
mov
mov
sbb
push
inc
mov
les
xchg
aaa
or
push
ret
xchg
push
loope
movsl
xchg
xchg
dec
rolb
lcall
in
push
pop
ret
inc
mov
jge
icebp
push
mov
mov
or
stos
aam
loopne
fmuls
dec
sub
test
lret
rdpmc
push
fldcw
mov
add
int
xchg
xchg
ret
xchg
jmp
les
xchg
sbb
bound
loopne
outsl
orb
or
shrb
adc
xchg
or
xor
loopne
test
xor
pop
inc
int3
bnd
aaa
mov
inc
dec
add
das
xchg
push
adc
push
fwait
mov
sbb
rorl
in
dec
sbb
in
fisubl
mov
adc
bound
gs
lods
dec
sbb
add
mov
ret
jae
fcoms
jo
rorl
js
add
in
aad
dec
addb
sbb
jecxz
inc
add
jbe
sub
mov
mov
insb
popf
push
not
popa
mov
icebp
push
in
aam
loop
and
push
cmp
cld
cmp
iret
dec
mov
mov
xacquire
addl
ljmp
push
mov
popf
lret
ljmp
adc
cmp
xorb
push
aam
inc
pop
xchg
sahf
ss
jle
push
scas
loopne
add
cmp
ret
push
loope
ljmp
mov
hlt
xchg
and
lods
std
mov
jge
loop
into
mov
mov
adc
clc
xchg
incb
scas
dec
or
adc
cmp
sbb
pop
pop
pushl
and
mov
lcall
int
add
sbb
enter
and
mov
pop
sub
inc
nop
pusha
mov
mov
dec
add
filds
imul
xlat
mov
sub
shrl
pop
cli
jg
ret
lods
cmp
in
sbbb
ljmpw
and
test
scas
call
jp
sti
xchg
mov
adc
enter
ds
mov
faddl
adc
mov
sti
movl
loopne
xchg
test
jl
das
bound
adc
sub
push
xchg
test
pop
adc
mov
xchg
roll
or
out
inc
popa
sti
add
jb
pop
js
or
pop
dec
add
loop
or
mov
and
pop
pop
shll
repz
cmp
push
mov
mov
lock
and
fisubs
mov
adcb
push
ljmp
lret
shrb
scas
mov
das
and
cli
push
movsl
decb
out
stc
mov
pandn
or
inc
cmp
add
movsb
loope
push
mov
int3
dec
outsl
dec
cmp
pop
jne
fcomi
mov
jo
or
iret
lods
mov
sub
push
push
cs
stos
inc
pushf
js
cmp
xor
arpl
bound
jge
inc
je
call
lock
pop
repnz
mov
lcall
dec
les
xor
fsubrl
sbb
xor
sahf
jbe
add
add
or
aam
mov
push
push
pop
cmp
ss
jmp
hlt
and
jmp
cmp
mov
pop
or
repz
mov
test
sub
js
incl
jp
andb
xor
in
ja
xlat
mov
nop
fdivrs
mov
push
outsb
inc
data16
pop
paddb
sbb
push
out
ret
fisubl
or
fisubs
push
pop
outsl
xor
rolb
jg
mov
aam
cli
jo
inc
lret
pop
sub
xlat
repnz
in
std
mov
ror
and
adc
cmc
cmp
mov
test
jg
xlat
insl
xor
dec
inc
xchg
adc
data16
test
mov
lret
cmp
subb
clc
pop
jbe
adc
jb
add
lahf
xchg
mov
scas
mov
mov
mov
bound
in
jns
add
dec
cmp
cmpsb
shr
sub
push
push
push
aam
fistpll
fdiv
mov
outsb
xchg
push
mov
imul
add
sbb
das
inc
and
dec
int
push
ljmp
mov
jo
shr
movsl
movsb
xor
loop
movl
inc
sbb
mov
jg
sub
outsl
and
cli
push
dec
or
push
in
test
xor
push
mov
dec
addr16
pop
addb
xlat
leave
adc
xchg
dec
mov
cld
aaa
mov
push
dec
xchg
cmpsb
push
and
push
cld
or
add
jl
testl
pushl
mov
adc
xor
es
xor
cmpsb
add
ds
es
stos
sub
addr16
or
push
loop
int3
andb
add
sub
sbb
fstpl
jnp
jg
jne
mov
add
and
push
mov
adc
jmp
dec
inc
ret
movsb
es
mov
loop
or
pop
cli
adcl
lds
jge
adc
xchg
jno
or
inc
cmp
inc
pop
cld
sub
push
test
sub
jbe
outsl
imul
aam
xor
cwtl
push
test
outsb
xchg
mov
inc
out
cmpsb
pushf
or
and
inc
popa
xor
pop
je
push
nop
mov
scas
push
mov
cmp
cmpsl
lds
mov
ret
and
adc
mov
rcl
aad
inc
inc
xorb
fwait
shl
sti
stos
dec
jbe
int3
adc
pop
jl
into
or
xchg
pop
lods
sub
movsl
push
dec
pop
add
cmpsl
xlat
loope
outsb
inc
mov
jns
testl
mov
arpl
dec
jecxz
movsb
sub
dec
sub
inc
jle
and
fimuls
adc
push
mov
or
jl
ficompl
add
mov
push
ficoml
pusha
jg
inc
sub
jmp
int
insl
pushf
dec
add
add
stos
sbb
jno
movsb
rcrb
jl
nop
enter
inc
pop
lahf
push
hlt
mov
sarb
add
push
cld
pop
into
adc
inc
dec
cld
sbb
sub
mov
mov
mov
mov
xor
add
pop
inc
push
mov
bound
or
sub
inc
popa
and
stos
shlb
or
stos
pop
sub
or
cmp
cmp
fs
push
lods
mov
dec
push
push
shlb
pop
cmc
mov
jecxz
sub
mov
outsl
std
sub
adc
mov
xor
xor
jb
ljmp
mov
push
sub
or
scas
dec
outsb
push
cld
add
je
adc
out
dec
fcompl
xlat
push
push
add
adc
pop
iret
push
xchg
inc
inc
pop
cmc
aam
mov
shrl
insb
pop
cli
or
popa
loope
clc
push
arpl
mov
mov
and
gs
mov
call
pop
or
push
rorl
adc
dec
jg
inc
outsl
fcoml
inc
mov
fadd
xlat
mov
inc
loopne
ret
pop
mov
inc
scas
in
inc
dec
jno
pushl
lds
sbb
out
lcall
loope
cltd
shrb
repnz
subl
lods
stos
mov
dec
cld
ja
test
imul
mov
add
mov
adc
sbb
jb
or
push
inc
xor
int
bound
cmp
stos
mov
and
hlt
lock
jbe
daa
cmp
push
adc
jle
or
or
mov
lock
cmpl
fisubrs
aas
test
sbb
or
stos
inc
mov
inc
inc
add
popa
mov
add
loopne
sub
dec
fmull
ss
or
decl
xor
inc
fwait
and
leave
outsb
ds
nop
call
mov
and
in
out
js
mov
mov
jle
mov
pushf
dec
add
outsb
pop
sub
jo
mov
jo
sahf
pop
pop
jmp
add
cmp
or
xor
or
jmp
push
push
dec
cmp
cmp
pop
int
imul
jle
adc
add
sub
xlat
cmpsb
test
cld
outsb
push
fiadds
enter
enter
adc
cmp
shl
mov
repnz
add
repnz
loop
xchg
sbb
cli
inc
scas
mov
lods
stc
incb
fcoms
daa
enter
inc
lahf
lea
cmp
push
pop
sbb
fs
orl
push
jbe
sub
cmp
cld
add
mov
sbb
adcb
add
or
jg
mov
into
mov
and
insb
fadds
add
pop
leave
ret
aad
pusha
pop
call
mov
add
add
jne
sysenter
aas
xchg
out
outsb
fiaddl
adc
or
or
and
loopne
add
cmpsl
and
mov
lock
push
imul
ja
dec
xchg
push
mov
test
idivb
inc
adc
or
jecxz
jnp
fwait
xor
orb
sub
stos
or
daa
or
pop
and
jmp
add
shrb
mov
mov
icebp
mov
mov
add
out
data16
push
adc
sbb
jle
mov
jo
iret
movsb
movsl
or
shrb
icebp
sub
lea
push
xor
mov
mov
inc
incl
decb
and
sarl
push
xor
repnz
xor
xchg
insb
pop
loop
mov
xchg
sub
in
push
xor
jae
push
jl
inc
mov
push
push
xchg
add
cwtl
fdivrs
adc
lods
pop
loope
push
xor
fidivrl
aas
and
mov
mov
mov
loopne
insb
add
jae
inc
mov
insl
sbb
pop
pop
adc
add
xchg
mov
ret
lock
icebp
cs
out
int3
addr16
imul
jl
lock
fsubr
lock
dec
aas
lock
adc
xor
aaa
jne
orb
jne
ljmp
cmp
jo
into
xchg
addb
daa
sub
in
or
fimuls
inc
mov
or
push
ret
add
ret
out
add
out
jle
sti
mov
clc
mov
das
mov
mov
dec
push
scas
push
adc
addr16
add
lods
dec
mov
cmpl
sahf
das
mov
aas
push
mov
test
jno
dec
pop
cmp
cli
popf
out
arpl
into
scas
mov
loopne
imul
add
xchg
mov
xor
bnd
pushf
cmpb
pushl
xor
sbbb
xor
push
outsl
jnp
je
inc
cld
add
and
xor
cwtl
outsb
sub
add
or
sbb
loopne
aam
in
mov
cmpsl
movsl
and
loop
sub
cmpsl
and
popa
out
lret
inc
xchg
push
in
nop
mov
pusha
mov
push
inc
scas
push
loope
fsts
or
outsb
nop
pop
fildl
sub
jbe
test
mov
and
xor
in
push
fmuls
fucom
or
out
fwait
xchg
fisubrl
mov
inc
out
jge
stos
lock
or
fwait
xor
fsts
or
mov
jbe
mov
sub
push
fidivrs
xor
inc
mov
js
and
jbe
je
fs
mov
lea
pop
jmp
cmc
negl
add
loope
jecxz
into
push
test
dec
jmp
ret
arpl
or
test
xchg
not
and
fnstsw
repz
add
fadd
inc
scas
xchg
ds
test
or
sub
inc
xlat
sub
in
pop
add
jp
push
pop
lret
or
cmp
push
pop
scas
xorl
mov
inc
mov
or
aas
sub
mov
sbb
cmp
sub
push
mov
loop
add
aaa
popa
iret
push
push
in
test
loope
pop
clc
jmp
aad
push
hlt
pop
lock
sarl
repnz
inc
sbb
jns
aad
xlat
sbbl
rcl
mov
ljmp
pushf
mov
rol
loopne
int3
hlt
notb
rorb
inc
and
cmp
mov
and
xchg
dec
mov
test
xchg
rolb
std
pop
xor
sbb
xchg
pop
and
add
shl
or
arpl
pop
or
xchg
test
jp
shrb
mov
pop
push
or
test
ja
scas
push
sub
ret
dec
jecxz
out
adc
ss
divb
xlat
insl
test
jge
cmpsb
fdivrs
cmp
divl
sub
clc
mov
lock
sahf
xchg
daa
pop
mov
fwait
mov
mov
push
pusha
sti
add
sbb
inc
rcll
js
stos
pop
inc
lods
push
clc
es
lods
ret
pop
add
loopne
pop
adc
sbb
mov
add
or
xor
pop
rol
push
mov
mov
lahf
jbe
or
test
ficompl
inc
mov
fmuls
scas
sarb
mov
jecxz
pop
iret
pusha
aaa
add
adc
push
fimuls
push
test
inc
push
fnclex
movsb
ficomps
inc
je
cld
movsl
push
mov
rolb
not
dec
sbb
mov
add
or
xor
outsb
mov
jne
dec
mov
outsb
lock
xor
sbb
pop
insl
pop
jbe
mov
scas
daa
aam
test
pop
xor
xor
les
push
popl
jp
ret
cmp
xchg
mov
jecxz
stc
test
std
daa
push
movsb
pop
sbb
or
scas
sub
adc
dec
adc
add
fisttpll
bound
insb
lret
fstpt
aam
or
mov
or
inc
xor
aaa
or
push
addb
lods
jbe
loop
mov
add
or
push
adc
mov
sub
and
mov
or
mov
ret
pushf
xchg
pushf
and
push
jo
cs
sbb
xor
mov
fimull
lds
cmp
jl
pop
push
mov
pop
cmpsl
mov
mov
xchg
mov
cmp
xchg
clc
jge
lods
mov
add
sub
loope
sbb
fldpi
in
fiadds
mov
jl
loop
xor
movsb
aad
and
and
mov
pop
or
xorl
sub
mov
dec
aam
xchg
jb
inc
cltd
lea
or
sbb
int
cmp
mov
dec
adc
pop
outsb
push
dec
rolb
roll
pop
cmp
shl
out
add
pop
add
rcl
mov
fs
or
in
xchg
daa
or
dec
or
les
inc
ret
jbe
sub
ss
mov
shlb
cmp
mov
in
dec
add
ljmp
insb
dec
in
shr
mov
mov
sub
sar
sahf
xor
pop
mov
hlt
sarb
stos
xorb
cmc
add
adc
mov
or
loope
mov
cwtl
and
out
and
pop
pop
xorl
stos
movsl
pop
cmp
jge
cld
ret
aas
testl
jecxz
icebp
or
test
jmp
mov
add
xor
xchg
push
call
or
lret
js
rcrl
xor
push
adc
icebp
cmpsb
jbe
aam
jl
inc
aad
je
jmp
mov
adc
inc
jge
adc
ds
mov
popf
mov
add
sarb
test
pop
les
jp
int
fsubl
mov
sub
sbb
mov
jb
or
testb
add
mov
xchg
inc
aad
addb
loopne
and
mov
inc
cmp
or
add
inc
popf
out
insl
movl
mov
or
push
sbb
hlt
insl
roll
rolb
push
popa
inc
lcall
sub
loop
fdivrs
int
fistps
dec
shlb
mov
xchg
adc
push
adc
into
int3
add
movsb
or
rolb
scas
scas
sbb
jo
push
shl
inc
test
jl
push
xchg
pop
sbb
mov
ss
loopne
mov
mov
stos
je
push
lret
mov
rclb
jle
dec
sub
mov
or
jg
icebp
sub
jb
fiaddl
lret
cmpl
push
or
mov
push
or
xchg
rclb
shrb
aam
lds
xchg
and
int3
xchg
lret
inc
jmp
push
jge
push
out
pop
pop
push
test
add
mov
push
and
mov
or
shr
int
iret
testb
shrl
jae
mov
push
hlt
movsl
push
push
mov
add
push
clc
xorb
xlat
fmul
jbe
mov
shlb
cmp
pop
inc
call
mov
push
jb
lcall
mov
fwait
movb
test
push
bound
push
sarl
and
arpl
inc
pop
rorb
sahf
ss
call
pop
je
jns
mov
adc
rorl
lahf
push
push
add
call
sub
cwtl
jo
insb
xchg
or
popf
xor
adc
loopne
pop
adc
sub
insb
pop
xchg
sbb
xchg
fadds
jle
inc
loopne
mov
shll
jbe
arpl
mov
add
adc
xor
cmovbe
loope
adc
sbb
mov
dec
pop
leave
shll
outsl
add
push
xor
inc
test
lods
dec
shrb
decl
xchg
fmul
jnp
in
add
dec
loop
add
mov
cmp
mov
ljmp
ss
out
mov
mov
adc
push
sbb
dec
add
sbb
lahf
inc
stos
mov
outsb
xchg
or
fcoml
jg
or
push
push
dec
jns
out
mov
rolb
pop
mov
or
incl
mov
or
andl
sub
jne
repnz
inc
or
dec
call
loop
mov
es
rorb
jge
push
pop
lea
lods
xchg
data16
or
cmpsl
outsb
insb
sbb
fs
lods
scas
out
fdivrs
sub
loop
lods
adc
movsl
sbb
jbe
mov
xchg
jmp
inc
sub
popl
mov
popa
ss
pop
fs
pusha
dec
aam
insb
sub
fdivr
cmp
notb
fistpl
add
je
je
sbb
jbe
inc
call
test
pop
loop
nop
mov
mov
push
lret
pushf
fbld
mov
pop
xor
out
cwtl
js,pn
clc
mov
xor
sbb
jo
cmp
je
jp
push
cltd
inc
mov
cmp
iret
mov
adc
push
sbb
cld
mov
pop
inc
jo
ljmp
fcoml
loope
sub
andb
cwtl
mov
sbb
push
sti
mov
mov
pop
adc
mov
adc
and
in
cmp
sbb
pushf
mov
push
pop
jle
lahf
cmp
push
sub
std
dec
xchg
dec
lret
xchg
filds
and
xchg
mov
test
sti
popa
pop
push
adc
push
lock
cmp
adc
push
pop
andl
or
sar
mov
in
mov
call
push
mov
jge
movsb
add
pop
sub
in
call
mov
popf
mov
test
dec
pop
fisttpll
mov
dec
xor
aad
jb
les
adc
push
clc
inc
inc
mov
sub
mov
xor
shrb
cmp
sbb
incl
sub
or
mov
mov
add
stos
fsub
inc
cmc
out
call
dec
mov
cmp
rclb
add
loopne
xor
movsb
andl
add
pop
arpl
loop
ja
clc
jae
and
sub
enter
mov
jle
arpl
cmpsb
push
cwtl
fcomip
into
aad
out
sbb
movsl
dec
jo
mov
rcll
or
insl
dec
repz
sbb
out
ficomps
or
jp
dec
mov
and
movsb
jae
in
cmpsl
mov
inc
out
leave
flds
in
ds
xor
jb
mov
sbb
aas
mov
sub
je
dec
fsubrs
lods
es
mov
sbbb
jle
clc
adc
daa
addl
mov
fstps
dec
mov
stos
adc
les
push
in
js
mov
dec
test
jne
xchg
decl
mov
xchg
inc
setae
popa
cmp
cmp
and
jb
jo
test
inc
inc
dec
notl
inc
out
push
mov
fldt
push
mov
incb
cmp
lock
xor
stos
aam
xor
scas
lret
pop
jl
test
fstps
cmpsl
or
aad
sahf
incb
lret
mov
testb
jno
mov
dec
add
push
sbb
insb
push
je
mov
cmp
jbe
cmp
xor
insb
cmp
out
sbb
mov
sbb
add
jb,pt
das
in
mov
ds
add
add
adc
pop
clc
clc
push
roll
pop
sbb
or
movsl
push
jbe
inc
inc
adc
sbb
pop
into
adc
add
or
mov
lret
lock
ret
add
out
aam
adc
fwait
push
mov
ficoml
inc
inc
rclb
cmpl
adc
or
jg
insb
sbb
fimuls
mov
sbb
mov
aad
adc
add
jl
les
mov
xchg
aaa
mov
cmp
cmc
fwait
sar
jo
push
mov
imul
mov
dec
mov
dec
and
out
lock
xchg
ret
not
scas
jae
mov
mov
push
fsub
lds
movsl
scas
and
outsb
jmp
sbb
mov
xor
push
addr16
int3
in
sti
jmp
ss
xchg
adc
aad
pop
mov
js
fldt
stos
js
into
dec
lds
pop
and
add
or
xor
mov
xor
mov
mov
adc
inc
or
jno
je
and
ror
pop
out
or
fsubs
jecxz
in
add
cmp
lock
pop
dec
dec
pop
mov
lds
pusha
mov
roll
inc
fnstcw
addb
icebp
jo
orb
loopne
lods
and
punpcklbw
lock
jl
add
sbb
push
movsb
cmp
inc
shrb
pop
sbb
inc
sti
shrb
icebp
jecxz
aam
data16
mov
jl
mov
add
mov
inc
fmull
and
popa
ret
mov
sub
stos
add
ds
xchg
in
dec
je
inc
sbb
rolb
fwait
jbe
push
sbbl
mov
sbb
stos
dec
cmp
ret
sub
orb
pop
sub
cmp
pusha
push
test
cli
popa
xor
or
cmp
jl
fstpl
sbb
mov
test
xchg
or
jnp
adc
out
test
aas
cmp
xchg
mov
cmp
sbb
cmp
inc
out
cs
out
ja
dec
sub
jmp
xor
repnz
lods
sub
sub
mov
sbb
pop
jmp
add
push
iret
mov
cmc
rclb
imul
mov
test
mov
or
pop
xchg
cld
cs
sub
add
or
cwtl
and
rclb
jecxz
aam
call
ret
subb
lock
or
push
popf
mov
mov
ds
pop
outsl
aaa
add
adcb
nop
mov
jne
in
push
cmc
push
fdivrl
lods
mov
out
and
adc
std
push
fisubrl
add
roll
rolb
push
and
adc
lret
inc
stos
ret
sub
sbb
xchg
call
sub
and
xor
inc
xlat
roll
push
hlt
or
imul
pop
mov
push
aas
xchg
adc
xor
push
cld
jp
icebp
lea
imul
mov
push
test
xchg
jbe
mov
push
std
xchg
adc
dec
cmp
out
jbe
lods
mov
stos
inc
xor
push
pusha
imul
enter
mov
mov
outsb
or
pop
xor
cmpsb
xchg
mov
in
insl
and
inc
mov
jae
pop
loopne
jge
push
adc
dec
lds
mov
dec
cwtl
or
cmpsl
pushf
dec
mov
push
sbb
lock
pop
push
push
jae
jmp
arpl
inc
pusha
and
or
test
inc
ret
add
jbe
popf
movsl
mov
and
mov
cwtl
dec
mov
xor
pop
or
cmp
repz
xor
sub
sbb
inc
pop
pop
push
mov
sbb
or
stos
in
mov
lock
or
lods
jecxz
dec
fs
jmp
loop
mov
insb
adc
or
mov
xsaveopt
lret
adc
clc
pop
mov
push
cld
pxor
into
loopne
add
sub
repz
push
enter
test
stos
push
imul
jg
cmp
jmp
add
mov
out
mov
sbbb
cmpsb
lods
sbb
fldz
in
rolb
sub
pop
dec
scas
or
cld
pop
les
inc
div
aas
addr16
nop
filds
cmp
jnp
and
out
pop
lcall
pop
out
inc
clc
daa
jecxz
xchg
incb
dec
jg
sbb
setge
stos
ret
mov
repnz
jb
dec
ss
lahf
jmp
mov
sub
imul
aad
fisubl
or
and
sbb
mov
sbb
call
cmc
and
aas
ficompl
mov
outsb
jp
popl
xor
jne
xor
lods
dec
loopne
arpl
lea
or
mov
pop
and
sub
adc
in
sbbb
ss
lock
stos
rcl
das
aad
mov
rcr
push
sbb
mov
in
cli
orl
dec
xor
mov
loopne
pop
xor
sub
cmp
fcmovbe
js
pusha
sbb
pop
add
jp
outsb
cmpl
lods
jne
pop
outsl
icebp
xchg
mov
adc
sti
inc
push
stos
add
xchg
inc
shll
in
in
cmpsl
cmpsl
sbb
sbb
outsl
xchg
out
xchg
je
add
mov
aad
dec
pop
ret
je
int3
lahf
enter
dec
lods
addr16
mov
add
ret
leave
shlb
outsb
pop
add
add
cltd
loopne
fidivl
push
and
push
stc
mov
and
sbb
cmc
mov
jno
enter
aas
fcomps
sub
jle
jo
pop
inc
mov
dec
lds
xchg
scas
mov
lods
sbb
sub
inc
and
pop
fistl
mov
cmp
mov
cmp
pop
inc
mov
int3
pop
test
pop
js
xor
lret
pop
or
shr
testb
daa
test
mov
filds
and
icebp
das
add
sub
jns
rorb
cltd
pusha
shlb
sbb
scas
adcb
std
std
xor
fldt
fildl
pushf
add
stos
cs
jno
leave
inc
mov
push
and
inc
pop
sahf
sub
lcall
lret
add
push
jmp
pop
loopne
pop
xor
add
movsl
mov
adc
jp
jp
sub
in
xlat
shll
sarb
scas
loope
imul
jmp
jns
mov
pop
or
test
mov
lret
lea
shl
add
ret
shrl
adcl
lcall
repz
mov
nop
test
psrld
xor
xchg
mov
pusha
mov
les
push
adc
cvttps2pi
add
adcb
pop
hlt
xor
cmp
scas
pmaxsw
sub
and
mov
mov
pop
xchg
mov
sbb
push
test
lea
mov
loope
in
jbe
add
push
adc
enter
clc
xchg
jbe
insb
sbb
and
inc
addb
xchg
mov
push
lock
into
mov
and
pusha
cltd
nop
mov
cmp
out
js
js
inc
adc
cltd
or
scas
inc
das
out
dec
mov
gs
or
or
sahf
and
movsl
nop
pop
ljmp
call
and
int3
fcoml
stos
loopne
sbb
nop
std
push
cmp
push
mov
rcrl
sub
inc
mov
les
iret
cwtl
test
decl
cwtl
jns
mov
lock
mov
xchg
test
fldt
mov
mov
out
les
jg
jne
ljmp
mov
sahf
cmc
testb
xor
mov
push
popf
dec
loop
outsl
movl
fisttpll
mov
mov
mov
push
sarb
addb
push
je
rcl
push
ljmp
loopne
fistpll
ret
xlat
enter
fs
push
sub
fistl
ret
jbe
out
xchg
cwtl
incb
hlt
in
and
jp
adc
and
fs
outsb
cwtl
fidivs
nop
xor
jns
mov
inc
lds
jbe
aam
iret
mov
xchg
ss
hlt
loope
lahf
idivb
insl
adc
and
pop
inc
add
add
inc
jno
mov
rorl
jmp
mov
test
test
scas
pop
sub
out
sbb
enter
mov
mov
mov
cld
in
fwait
mov
mov
test
pop
xor
movsb
or
test
shrl
aaa
dec
inc
mov
jecxz
aam
inc
sub
rcrb
sub
jbe
xchg
loopne
fcompl
pusha
sbb
mov
in
sub
add
stc
mov
jbe
leave
loope
test
shr
lahf
cltd
jbe
call
stos
cld
int3
add
aad
sbb
addr16
es
jecxz
ror
aaa
jns
mov
lret
into
fwait
jp
rcr
testb
cli
test
test
mov
icebp
add
popa
cli
jp
push
rcll
mov
pop
aam
cmp
fsubrs
fcompl
int
jg
jo
je
xlat
aad
inc
add
pop
add
pop
ss
idiv
test
js
mov
inc
movsb
adc
test
rolb
in
sarl
and
std
mov
jne
inc
mov
cld
stos
pop
xchg
in
inc
inc
pop
in
mov
mov
movsb
jmp
in
fs
xchg
dec
sbb
dec
test
inc
outsb
xlat
mov
push
lods
mov
fdivrl
fdivrl
jno
clc
add
inc
jns
stos
xchg
nop
dec
or
pop
repnz
pop
pop
push
cmp
cwtl
scas
jne
sbb
xor
mov
push
cmc
and
mov
js
pop
movsb
inc
sub
mov
adc
push
inc
pop
mov
add
pusha
jp
push
inc
or
test
out
cs
pop
inc
xor
adc
xchg
or
mov
xchg
xchg
cs
mov
push
rcl
test
mov
adc
ror
mov
or
and
aam
test
and
roll
lcall
dec
dec
std
cmc
adc
cmp
stos
mov
hlt
pop
stos
push
cmc
or
dec
pop
and
push
sub
mov
mov
push
loope
or
dec
push
mov
sbb
imul
cmpsl
stos
in
jo
mov
outsl
mov
rolb
pushf
dec
test
rcl
mov
mov
testb
lahf
cmp
addr16
fistps
xchg
lret
mov
leave
and
rcll
and
icebp
xor
add
aad
fmul
dec
rorb
pop
push
paddsw
add
mov
rolb
js
dec
fs
pop
cmc
inc
ss
test
mov
mov
adc
sub
mov
jecxz
scas
scas
dec
dec
aas
push
add
outsb
jo
and
lea
repnz
mov
jne
stc
xor
and
cmp
lret
sub
sbb
xchg
jbe
push
movb
mov
pushf
xchg
push
clc
jns
pop
out
cmc
sub
mov
xchg
mov
sbb
pop
arpl
lods
aas
xchg
fistl
sbb
add
dec
daa
mov
les
icebp
fst
mov
adc
dec
mov
or
dec
cmp
dec
adc
movsl
jns
mov
and
cmpsl
popa
fs
and
push
dec
inc
cmp
mov
incb
xor
and
outsl
jp
mov
cwtl
mov
shrb
mov
cwtl
push
repnz
bound
adc
jmp
loope
xchg
outsb
fiadds
sarb
mov
cmp
shll
popa
add
sub
push
sbb
jg
dec
fwait
inc
or
add
mov
call
mov
sbb
in
int
test
pusha
lods
inc
in
cmp
popf
je
inc
aaa
fnsave
sub
enter
out
ljmp
aam
int3
or
ret
push
mov
in
mov
xor
sbb
les
xor
pop
inc
dec
push
or
outsl
jg
sbb
adc
mov
or
dec
sbb
jle
xchg
dec
fwait
ljmp
les
xchg
scas
and
mov
inc
mov
fdivs
fmul
add
call
mov
ljmp
sbb
push
add
les
cmp
fcmovnb
and
add
aas
xchg
rcr
adcb
jb
into
xor
push
sti
jb
cld
push
xchg
or
xor
pop
xor
shrb
stc
adc
jno
sbb
repnz
fsubl
aas
pop
cld
bound
arpl
loopne
hlt
jo
add
data16
pop
sti
pop
pop
push
outsl
jnp
rcr
push
mov
adc
cli
shrl
mov
add
ds
inc
inc
inc
xchg
cmpsl
mov
or
imul
jb
imul
rolb
outsb
jne
ret
daa
or
rep
rol
dec
sub
mov
sub
adc
pusha
dec
inc
lcall
das
fidivl
inc
fs
adc
push
push
shll
dec
cwtl
out
daa
xor
xor
sbb
sub
dec
imul
loopne
adcb
ljmp
movhps
inc
cli
pop
jne
lods
hlt
pusha
lret
pushf
mov
and
sahf
and
push
lret
insl
rorl
pop
mov
mov
adc
mov
inc
ret
add
in
mov
nop
jb
mov
lock
cli
jbe
inc
or
ret
scas
sahf
pop
roll
imul
js
push
sub
pop
push
inc
pop
mov
adcb
mov
fs
pop
sbb
les
inc
pop
pop
jecxz
xchg
iret
or
adc
cmp
mov
inc
test
call
xchg
repnz
sub
jp
push
in
or
inc
sti
je
add
xor
mov
aad
add
cli
sub
and
mov
mov
mov
lahf
sbb
rorl
imul
lock
pop
insb
mov
rolb
gs
pop
les
lods
cmpsl
pop
fisttps
test
jecxz
andb
sbb
movsb
inc
jmp
push
clc
roll
repnz
sbb
sbb
mov
xor
or
inc
int3
push
sbb
dec
adc
outsl
mov
mov
sbb
out
in
pop
add
psrlw
jl
sti
cld
insl
or
jbe
mov
rcrb
lahf
sub
xchg
add
stos
dec
cmp
fdivl
sub
mov
insb
xchg
nop
mov
inc
mov
cmp
std
lock
mov
adc
scas
cmpsb
jl
jo
mov
mov
mov
adc
pop
scas
cltd
mov
punpckhwd
adc
add
cmp
xor
dec
sbb
movl
imul
fwait
test
jle
int
fidivl
aaa
mov
stc
add
sub
add
ret
bound
xchg
lcall
mov
test
jl
cmpsl
mov
sbbb
lret
stos
fnstsw
inc
adc
fs
push
adc
incl
aaa
sbb
or
rcl
jecxz
test
nop
es
nop
sub
loop
dec
sbb
push
add
cld
clc
push
ret
push
push
lcall
mov
cltd
lods
es
lret
mov
enter
rcll
and
adc
cmp
or
sub
xlat
popa
mov
jne
xchg
xchg
in
cld
push
fcoms
jle
bound
addb
push
jb
xchg
jnp
lret
inc
addr16
jb
incb
ret
pop
mull
sahf
xchg
daa
imul
cmc
inc
popf
fimull
mov
stos
mov
test
xchg
and
push
pushf
fisubrl
in
push
pusha
dec
lcall
pop
sub
jmp
add
test
mov
xor
aam
dec
call
fdiv
adc
repz
add
or
xor
jp
mov
sub
sbb
and
mov
shlb
xchg
push
test
in
imul
scas
lock
inc
shll
or
gs
mov
lahf
and
sub
pop
mov
mov
shll
call
daa
xor
out
aam
popf
sub
pusha
das
jae
mov
ret
clc
push
aas
sbb
push
push
mov
adc
pop
inc
jmp
movsl
ja
lahf
sbb
stos
into
adc
mov
sti
push
push
cltd
aas
mov
repz
lcall
add
pop
mov
inc
cmp
sbb
pop
cs
xchg
cmpsl
add
lcall
sbb
adc
inc
xchg
sahf
sahf
inc
add
dec
je
and
popf
clc
add
roll
movsb
mov
in
cli
fs
std
dec
clc
clc
cmp
pop
aas
mov
mulb
add
mov
push
jg
and
mov
push
push
ret
mov
dec
loopne
mov
inc
jns
cmp
clc
ds
sbb
dec
push
fisubl
in
sbb
mov
adc
cs
mov
stos
add
gs
mov
adc
cmp
push
mov
adc
sub
mov
xorb
pop
decl
fmulp
pop
sub
push
dec
jp
test
sbb
loopne
cmp
mov
js
scas
sub
pop
mov
inc
pop
sub
cmp
fisubrs
lods
and
mov
mov
xchg
pushf
cmp
enter
cltd
lea
divb
ret
cmpsb
outsb
fcomp
test
lret
test
push
adc
mov
outsb
sub
mov
loope
repnz
decl
imul
lcall
pop
adc
mov
jns
cmp
add
imulb
imul
pop
call
push
sbb
xor
jbe
fcmovb
mov
shll
cmpb
push
mov
les
sub
and
mov
sbb
push
lock
call
inc
mov
or
fists
fsts
dec
push
movsl
arpl
or
cmp
or
mov
stos
movsl
test
cli
push
adc
cmp
adc
out
dec
mov
ds
mov
jg
adc
or
loopne
rolb
imul
add
adc
xor
out
nop
mov
rcrb
jmp
xchg
out
pop
fsubl
or
test
gs
xchg
xchg
das
jo
lods
jl
std
or
sti
sub
or
push
cmpsl
or
scas
mov
push
push
add
push
mov
repz
sub
inc
mov
clc
add
mov
sbb
stos
mov
test
jnp
mov
andb
stos
ret
inc
in
dec
test
adc
insb
mov
divb
or
stos
fiaddl
insb
mov
mov
loopne
fisubs
scas
sbb
push
push
sarl
pop
adcb
jbe
jg
push
rorl
and
fmul
mov
adc
mov
movsb
pop
loop
andb
pushf
mov
ss
clc
cmp
jno
shlb
loop
push
xor
xchg
dec
popa
mov
mov
imul
adc
xor
cmp
mov
lcall
in
pop
jbe
loope
movb
je
lret
in
pushf
lock
and
mov
mov
js
hlt
jge
inc
cmpsb
in
adc
dec
insb
popa
sub
lea
pusha
sbb
push
fadds
out
cmp
xchg
orb
cmp
test
or
pusha
and
add
jb
pop
and
ret
imul
shl
fcomps
xlat
xchg
add
jbe
nop
cmpsb
std
ret
icebp
mov
pop
pop
inc
xor
or
dec
jo
rorb
iret
rolb
pop
pop
inc
lock
pop
push
dec
push
mov
fsub
fbstp
sbb
enter
dec
stos
cwtl
and
push
lea
jecxz
jb
clc
fisttpll
shrl
sbbl
cli
or
mov
ret
std
fs
fstl
mov
repnz
mov
data16
sbb
jle
fcmovnu
scas
inc
int3
aam
ja
jno
imul
xchg
and
loop
mov
cmp
into
sbb
jle
adc
mov
mov
mov
and
pop
pop
fisttpll
sub
xchg
lret
pop
mov
xor
and
inc
push
add
ret
or
std
pop
sbb
les
add
cmp
lea
adc
mov
iret
jp
mov
fistpll
ja
dec
push
ds
mov
frstor
mov
jbe
scas
jge
cld
cmp
sbb
xchg
enter
sub
leave
scas
pop
add
lret
push
cmpsb
ffreep
scas
and
xor
mov
cs
and
fbld
add
das
pop
xor
in
mov
xchg
push
pop
mov
cmp
sarl
add
nop
shlb
inc
jecxz
lea
adc
inc
jb
lock
mov
xchg
lods
mov
in
inc
dec
pusha
arpl
aad
cwtl
std
xor
and
adc
imul
dec
lds
lret
les
popa
nop
mov
adc
pop
jecxz
mov
into
or
int
xchg
out
mov
rdpmc
cwtl
push
and
cmc
pop
jno
push
dec
out
stc
push
fisubs
mov
movsb
sub
std
gs
dec
xchg
aam
add
push
xchg
in
inc
inc
adc
add
push
inc
or
dec
and
jmp
dec
inc
inc
out
and
in
sub
cli
fimull
pop
ret
sbb
lods
rol
test
aad
xchg
mov
aam
push
das
popa
adc
lods
fisttpll
fcoml
iret
movsb
push
rclb
mov
nop
cmp
sub
clc
sub
sub
test
loope
enter
bound
jo
mov
addl
xchg
jecxz
or
sbb
adc
push
jb
mov
flds
pop
push
cmpsb
jnp
sub
movsb
or
fisttps
out
add
rorl
stc
xor
mov
mov
and
repnz
enter
js
push
js
add
sahf
cwtl
mov
mov
dec
mov
popa
mov
cmp
sub
movsb
rorl
icebp
pop
sarb
add
cmp
mov
shl
xchg
stc
sbb
jp
push
push
adc
or
inc
mov
mov
or
shl
and
gs
rcrb
out
xor
rorb
fisubrl
aad
or
test
loope
arpl
jae
jp
cli
scas
call
xor
and
xlat
cmp
call
addl
dec
mov
jle
fisubl
aas
adcl
outsl
jo
pushf
mov
lock
addr16
or
xchg
sub
adc
mov
int
xchg
sbb
pop
cmp
shrb
subl
add
jo
or
mov
jbe
nop
or
inc
arpl
jp
mov
jle
mov
punpckldq
mov
fimull
mov
cmp
or
in
ret
shr
cld
imul
sbb
mov
push
out
rcll
test
cmpsb
bound
sbb
mov
lea
push
or
mov
outsl
les
mov
mov
xlat
mov
add
push
jl
jp
mov
xor
inc
dec
sub
js
inc
jmp
or
clc
add
xor
imul
jg
imull
test
jp
pushf
push
dec
or
mov
roll
push
cmp
or
subb
mov
ljmp
les
fadds
xor
test
dec
dec
bound
push
rorl
xchg
mov
mov
jo
mov
mov
dec
imul
xchg
cmpsb
shrb
aad
inc
shl
fs
push
adc
jp
mov
loopne
xchg
lds
popa
xor
sub
test
das
es
aam
mov
add
ret
cmp
push
cmp
loop
data16
in
mov
pop
call
shl
cli
popa
mov
test
adc
push
subb
xchg
add
repnz
xor
xor
loope
fisubrs
lock
mov
or
fists
push
inc
roll
lret
nop
inc
xlat
cli
push
hlt
push
or
push
mov
sbb
aaa
push
xchg
sbb
mov
push
push
movb
cwtl
incb
lret
mov
cmp
sbb
movmskps
out
mov
push
sahf
adc
push
inc
dec
js
inc
pushf
push
stos
cmp
add
cmp
sub
insb
out
mov
add
aam
sbbl
and
call
pop
xchg
enter
imul
add
xor
je
popa
lods
fstpl
cmp
mov
adc
das
sub
addl
cmp
inc
call
in
push
mov
sahf
push
aas
shrl
call
ds
jp
imul
xor
jecxz
int
add
xchg
xchg
sti
xchg
mov
test
lock
mov
mov
xchg
ljmp
add
lock
jl
push
mov
xchg
push
out
pop
jecxz
or
fs
pushf
inc
cmp
movb
div
mov
sbb
sbb
jle
je
dec
mov
add
mov
cmp
rclb
xor
pop
sub
ds
ds
lea
lds
push
jo
pusha
jns
pop
dec
and
jmp
pop
inc
xor
jo
sub
cs
add
xchg
clc
cmpsb
mov
mov
into
inc
aam
or
or
xchg
inc
jl
mov
sub
aaa
fiaddl
xorb
rclb
scas
inc
sbb
mov
pushf
push
inc
ficompl
sti
arpl
lods
add
movsb
flds
xor
aam
mov
lods
add
push
loope
add
dec
mov
repnz
out
jno
sub
add
pop
push
pop
dec
mov
push
mov
lcall
jbe
xchg
adc
adc
mov
nop
add
push
mov
cmpsb
mov
mov
pop
mov
ja
xor
enter
arpl
hlt
mov
pop
sub
add
jl,pn
movsl
or
int
loope
cmc
lret
std
pop
out
sar
add
fstpl
push
stc
push
add
imul
push
in
and
in
xchg
mov
mov
sub
andl
scas
loopne
xor
add
ljmp
int3
cmp
push
inc
notl
es
rcrb
out
and
pop
sti
adc
jbe
pusha
jmp
push
fildl
insb
ljmp
mov
mov
scas
es
push
lea
or
inc
cltd
add
xchg
outsb
shlb
jne
lods
mov
mov
sahf
inc
fisubs
pushf
sub
das
ss
jle
notl
mov
push
data16
and
adc
push
insl
pop
jl
in
sub
lcall
pop
into
push
std
pop
daa
xor
mov
pusha
pop
scas
and
dec
mov
std
inc
aas
adc
gs
lods
inc
adc
jne
aad
and
fsubrp
lret
adc
jnp
in
std
cli
or
inc
add
push
mov
or
ljmp
and
push
xchg
push
lds
les
inc
andb
daa
aad
add
ja
ret
in
dec
call
cli
xchg
inc
inc
or
or
out
popa
jmp
jl
dec
sub
push
push
stos
lret
mov
jg
pushf
divl
int3
outsb
cmp
out
shl
add
or
lcall
icebp
mov
or
lea
test
pop
mov
std
sub
test
dec
push
lods
loop
es
push
jl
lds
pop
fadds
sub
mov
mov
cmp
pusha
add
adc
sbb
jbe
imul
and
ds
rcrb
or
fldt
add
popa
shl
sbb
add
cmp
fs
push
or
pusha
test
je
lret
sub
xor
mov
xchg
and
push
pop
push
subl
adc
ss
mov
fs
nop
cmp
adc
push
cmc
or
jl
test
mov
cltd
mov
adc
lods
shl
ret
xor
and
add
movsb
dec
daa
mov
jmp
test
pop
add
adc
outsl
cmp
pop
lret
popl
xor
je
mov
test
aad
or
pop
fmull
cmp
daa
push
cmp
or
dec
jle
mov
push
std
mov
sub
push
int3
dec
fwait
ja
sti
add
inc
pop
call
leavew
ja
pop
test
dec
data16
pop
and
movsl
lods
mov
mov
sbb
xor
pusha
iret
mov
push
stos
or
dec
es
mov
shl
dec
mov
push
push
ja
sbb
loopne
ds
adcb
adc
in
aad
test
bound
and
scas
je
ljmp
dec
orl
push
ret
ss
push
shr
jmp
inc
xor
ja
pop
orb
cmp
dec
mov
push
pop
cmp
add
dec
pop
stos
mov
outsl
adc
mov
sarb
pushf
lds
movsb
dec
mov
add
ljmp
jbe
ret
pop
push
fisubl
sti
mov
adc
cli
xchg
jge
inc
push
rcrb
bound
mov
or
das
and
and
fmul
cmp
mov
jno
fidivs
mov
jb
insb
stc
shll
cli
or
jg
sub
out
lret
dec
cmp
aas
rclb
fadds
mov
mov
pusha
ret
add
jb
push
push
addr16
and
stos
inc
adc
jle
inc
inc
movl
ret
ss
cmc
inc
dec
pop
dec
pushf
and
gs
cwtl
jno
in
push
push
out
sahf
or
jle
stos
loopne
xor
in
mov
sarl
jno
add
mov
mov
decl
call
outsb
cmp
xchg
mov
mov
out
xchg
and
cmp
cmp
sub
or
or
rolb
or
stos
and
fisubl
xchg
iret
scas
insb
imul
pop
fsts
jmp
pop
stos
popa
mov
aaa
add
add
cwtl
call
xorb
sbb
das
jnp
mov
mov
pop
lock
ljmp
cmp
jp
or
clc
add
push
inc
cmp
mov
loope
aad
dec
je
dec
xchg
std
lea
sub
mov
jae
movsb
adc
push
cmp
fistps
cmp
mov
cmc
inc
mov
mov
push
daa
inc
lods
mov
xor
xbegin
flds
inc
sbb
add
scas
clc
jecxz
pop
orb
clc
mov
into
sbb
in
and
xor
xchg
inc
xor
dec
aam
adc
or
int3
mov
or
imul
cmpsl
popa
xor
sub
push
and
pop
sbb
jle
cld
test
cmp
or
hlt
xor
sub
bound
jle
inc
movsl
mov
dec
loope
cmp
rolb
mov
add
in
add
orl
jne
rorb
out
cmp
pop
test
pop
inc
push
jno
es
xchg
testb
loopne
aaa
call
and
outsl
jb
es
test
cmpsl
insb
inc
idiv
dec
mov
leave
xor
aam
push
cmp
add
and
or
femms
jo
sahf
jae
pop
ljmp
scas
rclb
cs
jle
sub
mov
xor
mov
dec
jg
jle
into
pop
add
lock
dec
add
aaa
pop
dec
lock
addr16
push
and
in
add
inc
sarl
inc
aam
cmp
aam
idivl
mov
lret
jno
rolb
push
push
adc
loopne
enter
mov
insl
pop
push
xor
jmp
or
pop
sub
scas
sub
push
loope
hlt
rorl
xchg
adcl
lds
aad
cmp
and
cmp
test
dec
cltd
iret
lods
push
outsl
push
push
out
or
sub
fists
push
push
jmp
xor
fldt
mov
mov
pop
cmp
lds
dec
in
mov
jg
fs
and
pop
jno
out
lods
add
sbb
std
lahf
lcall
mov
aad
lods
mov
mov
fidivl
push
adc
shll
jl
mov
push
xchg
mov
leave
mov
add
push
push
loopne
sti
aam
lcall
and
call
cld
imul
cmp
dec
mov
jge
xor
shll
mov
loope
push
pop
mov
in
lods
idivb
pusha
mov
sbb
sti
fs
bound
notb
mov
xchg
fadds
movsl
popf
cmp
xor
cltd
into
xlat
outsb
je
mov
sub
and
shld
pop
jb
xchg
xor
lock
jle
push
and
jo
lock
ret
adc
jle
sbb
adc
sub
xorl
jne
mov
icebp
mov
add
aas
push
add
or
mov
inc
mov
loopne
add
pop
jl
lret
lret
lods
jecxz
push
call
das
loop
mov
shlb
push
rolb
mov
ror
mov
out
mov
ret
adc
jno
lock
jno
scas
pop
push
ret
and
imul
xor
shrb
repz
mov
pop
mov
daa
xchg
inc
xchg
lds
inc
pop
ljmp
and
pop
lods
addb
inc
sub
push
mov
xchg
xchg
mov
cwtl
aam
mov
adc
mov
fidivrs
test
adc
stos
push
cli
push
testb
data16
dec
mov
mov
inc
pop
xchg
mov
fnstcw
mov
jne
jb
scas
pop
push
xchg
mov
call
lret
dec
adc
inc
mov
pusha
test
sbb
sub
add
jle
add
push
das
dec
xor
push
ss
pop
mov
dec
outsb
adc
inc
fwait
jecxz
push
adc
cmpsl
sub
loop
fsub
or
or
bound
inc
adc
cmp
mov
fwait
and
jp
mov
js
loope
and
les
aad
xor
pop
out
and
cmp
sbb
rcr
inc
push
mov
imul
or
in
bound
fldt
fs
loop
sbb
loop
mov
add
adc
repz
pop
sbb
mov
jo
inc
mov
mov
mov
inc
ret
sub
es
pusha
cmpsb
xor
push
mov
xchg
xchg
inc
mov
push
push
rorl
push
mov
in
add
push
and
dec
cmp
aam
mov
movsb
sbb
add
and
repnz
jae
add
ficoms
xchg
adc
outsb
xor
add
aas
add
lcall
in
sub
dec
inc
mov
jge
fcmovbe
iret
mov
and
fmull
jp
push
out
ja
push
out
rcll
inc
imul
inc
int3
rorl
or
loopne
dec
insb
sti
test
mov
les
lret
push
out
dec
inc
adc
rcrb
inc
push
pop
dec
push
scas
daa
or
jp
push
add
mov
sub
add
mov
lcall
jnp
cmp
lret
sub
addb
sahf
mov
mov
mov
pop
pop
jmp
divb
or
dec
fiaddl
bound
cli
sbb
add
imul
mov
inc
jmp
xchg
hlt
xchg
sub
or
insb
inc
lahf
ret
sbb
push
sbb
or
pop
sahf
adc
xchg
test
ja
pop
pop
test
movsb
fldenv
mov
daa
imul
pusha
negl
aaa
cmp
xor
push
rclb
call
lock
inc
test
testb
ret
pop
mov
testb
ja
xchg
fcom
loop
xorl
orb
sbb
inc
add
cmpsb
and
sahf
inc
fs
jo
pop
loop
sub
mov
and
call
scas
jge
xchg
adc
lret
popa
mov
lock
add
add
or
mov
push
or
cmp
data16
and
cmp
push
ret
push
xchg
push
ljmp
mov
sub
pushf
jmp
adc
inc
and
dec
add
add
sub
add
or
pop
aaa
mov
imul
cmp
xchg
aaa
mov
sbb
hlt
sub
and
jmp
push
std
push
dec
clc
loop
lock
and
inc
out
dec
add
sbbb
inc
mov
dec
inc
dec
inc
pop
imul
mov
push
call
add
add
xchg
test
and
pushf
mov
mulb
stos
mov
push
inc
push
sar
movsl
and
pop
mov
js
rol
push
mov
pop
mov
push
fstl
fucomp
push
sub
cmp
add
shlb
sbb
out
shlb
cmc
fnsave
aam
jge
pop
je
mov
and
adc
jp
ret
cld
pushf
pop
sbb
mov
dec
daa
clc
dec
push
jle
jle
shll
jmp
cmp
movb
in
outsb
pusha
add
shrb
or
pop
xor
xor
addb
xchg
cld
add
js
hlt
out
or
xchg
dec
add
push
cmpsl
mov
int
or
jnp
stc
rorb
ja
add
in
mov
data16
lods
pop
dec
sbb
dec
or
jp
sarb
mov
add
aam
inc
cmp
add
xchg
dec
or
mov
cmp
and
mov
jb
mov
fidivl
dec
sub
in
or
mov
dec
sbb
xor
inc
add
pop
or
inc
mov
add
and
pop
sahf
les
lret
out
inc
leave
daa
dec
lcall
push
popa
fsubs
fistl
fcomps
shrl
mov
fdivp
bound
shlb
movsb
testb
push
rolb
xchg
xor
xlat
pusha
sti
out
cli
ja
sbb
or
push
sbb
pop
pushf
jle
cwtl
push
dec
xor
punpckhbw
dec
mov
sbb
cli
bound
inc
cltd
dec
dec
add
xor
jnp
ret
pop
sub
pmaxsw
pusha
ljmp
std
pop
jge
data16
insl
fwait
sahf
stos
and
lcall
or
pushf
add
xchg
fdivrl
mov
pop
in
inc
sub
fsubs
xor
sub
aaa
mov
mov
pop
mov
or
push
dec
sub
pop
aad
add
fildl
lret
adc
push
xchg
jl
cmp
push
pop
hlt
sahf
sbb
lret
ds
push
fucom
flds
test
imul
out
cli
scas
inc
or
mov
xchg
cmp
dec
lret
add
movsb
push
and
jl
inc
mov
and
adc
xlat
mov
xor
sub
call
xor
adc
iret
xor
test
mov
cli
mov
out
mov
movsb
sbb
mov
lock
das
mov
loop
inc
fistl
sbb
scas
sbb
gs
sbbl
insl
dec
inc
notl
ss
hlt
popf
in
mov
jecxz
sub
and
add
jno
fcoms
std
mov
stos
cmpsl
loop
push
rol
add
data16
lret
push
sahf
fisubrs
xchg
push
adc
testb
jg
cmc
add
add
jp
mov
ljmp
mov
ss
call
mov
pop
shrl
pusha
fmull
je
dec
pop
push
popf
mov
inc
pop
imul
mov
insl
stos
jl
int
pop
ss
nop
push
js
inc
out
lods
scas
clc
rorl
ficompl
push
data16
mov
pushf
ljmp
insb
xor
push
cmpsb
adc
sahf
inc
insb
ljmp
mov
and
push
pusha
fsubrs
leave
fsubrs
mov
inc
es
lea
in
movsb
mov
inc
loop
popa
ja
in
fwait
add
push
loop
pop
mov
sbb
mov
adc
xor
mov
lock
adc
fbstp
jl
pop
xchg
jne
in
jae
or
sub
nop
rcrl
arpl
rcrb
pop
jno
mov
add
imul
repz
cmp
mov
insb
imul
jecxz
cmpsb
xor
xor
mov
sub
lods
mov
sub
pop
gs
repz
popa
dec
enter
cs
stos
sub
sbb
aad
sub
and
xchg
jp
jne
in
push
cmp
test
ret
pop
dec
lods
mov
inc
call
mov
das
sub
cmc
lcall
and
adc
mov
add
or
xchg
daa
mov
cmp
pop
imul
mov
inc
push
in
xor
ds
xchg
fs
inc
xchg
mov
fisttpl
xchg
inc
nop
mov
adcb
shl
shrb
hlt
sub
add
shrb
push
fsts
mov
mov
mov
inc
pop
cmp
jg
scas
adc
ss
dec
dec
xor
ret
repnz
loop
test
cli
mov
mov
and
ss
aas
sub
mov
mov
es
orl
xchg
sbb
andb
shrl
mov
test
loop
das
je
jbe
xchg
test
adc
mov
je
adc
stos
repz
insb
clc
clc
cmp
sbb
pop
shll
push
adc
jl
scas
outsl
lods
jae
out
cmc
mov
xchg
jmp
mov
xor
push
stos
shll
xchg
jne
inc
cmp
loope
pop
dec
xchg
xor
cltd
fisubrl
bound
mov
or
add
imul
ret
insb
loopne
sbb
out
sbb
inc
dec
fisttpl
xchg
pop
loopne
insl
sbb
out
pop
lock
call
gs
jns
adc
data16
les
inc
mov
mov
test
xchg
test
dec
cmp
stos
and
mov
and
pop
ja
push
lock
mov
xchg
add
jle
in
jge
adc
mov
add
cltd
adc
fcompl
xlat
xchg
enter
cwtl
xchg
inc
and
sbb
mov
cmp
pop
mov
clc
fcmovnb
sbb
popa
pop
inc
clc
pop
andl
faddl
loope
add
dec
sbb
imul
es
pop
push
test
fmull
les
loope
rorb
mov
rcpps
popa
ds
xchg
rcl
mov
cwtl
aas
test
mov
sub
xchg
adc
scas
xor
mov
adc
cmp
sar
mov
mov
int3
mov
icebp
push
imull
rorl
sbb
fwait
dec
mov
xor
push
popf
cli
mov
add
in
insl
mov
sahf
and
mov
roll
leave
mov
shll
aad
jp
mov
push
lahf
dec
jno
adc
scas
es
inc
out
or
inc
or
dec
scas
mov
mov
pop
cs
imul
add
iret
imul
mov
xor
push
mov
cmpsl
sub
add
xchg
add
mov
fs
mov
push
je
lds
int
xor
xlat
ja
xor
pushf
das
seta
scas
mov
push
imul
cs
mov
orb
add
push
iret
lds
int3
mov
orb
dec
in
add
loopne
sahf
push
cmp
daa
lahf
rol
xor
ljmp
xor
dec
rcrl
movsb
movsl
xchg
push
pop
lock
mov
push
and
test
scas
fistps
add
cvtps2pi
lods
pop
push
mov
loopne
sbb
dec
mov
and
ror
sbb
jno
cmp
jne
and
adc
outsb
leave
rcl
and
ljmp
scas
andl
push
sbb
fsts
daa
add
push
loopne
xchg
insl
lods
mov
stc
push
adc
inc
lahf
movsb
push
movsb
pop
jg
xchg
or
mov
imul
fadds
mov
dec
adcl
rolb
jnp
popl
push
cltd
push
sbb
mov
sbb
cmp
test
adc
adcb
data16
mov
das
icebp
or
or
imul
lods
lea
pop
mov
loopne
nop
xchg
ds
fdiv
shll
andl
jecxz,pn
add
mov
and
and
lds
push
xor
sub
and
cwtl
pusha
lds
xor
jbe
add
stc
ss
test
cwtl
pusha
nop
daa
in
lds
ljmp
adc
sub
out
fsubs
jp
push
xchg
xorl
push
test
inc
mov
outsb
mov
shrl
aaa
add
gs
aaa
inc
add
dec
mov
jle
decl
movsl
pop
fidivl
subl
or
subb
jmp
cmp
scas
push
xor
adc
mov
push
je
shrl
icebp
mov
lahf
orb
lea
xchg
sub
xor
aas
cvtdq2ps
leave
inc
insl
pop
or
cmpsb
jp,pn
add
in
sbb
xchg
shrb
jns
mov
add
jno
icebp
daa
add
sub
dec
js
push
out
dec
or
enter
dec
rclb
loope
push
fcoms
and
sbbl
xchg
xchg
fmuls
dec
xchg
outsb
lods
pop
int
or
cmpsl
cmp
pushf
ljmp
into
push
loope
sbb
adc
cmp
jnp
dec
xchg
int3
mov
mov
jb
lret
sub
jp
pop
jne
and
ficomps
lods
in
xor
dec
dec
xor
push
jmp
insb
pusha
mov
fadds
push
cwtl
mov
insb
sbb
or
or
icebp
jns
cmp
jmp
das
inc
arpl
imul
cli
enter
mov
loop
shll
and
jmp
mov
and
in
jecxz
mov
sub
pop
xchg
outsl
xor
aaa
sti
inc
or
leave
jne
xchg
sbb
sub
loop
add
cltd
xchg
out
ror
and
out
ret
fstpl
add
mov
fbld
xor
cmp
movsb
mov
ljmp
mov
add
cmp
xchg
add
jae
mov
jo
add
or
pop
lret
dec
rcl
cwtl
inc
xchg
jmp
int
adc
cltd
test
push
sarb
icebp
inc
pop
xchg
aam
mov
sub
vmulps
jp
cli
and
daa
pop
lods
push
out
and
scas
jno
cmc
mov
movsb
inc
loop
dec
add
ja
add
pop
jp
fwait
addr16
or
xchg
stos
jo
inc
cmp
push
push
xor
or
xchg
sbb
cmp
push
mov
clc
rclb
inc
pop
cwtl
loope
inc
mov
mov
leave
popa
sbb
loope
addr16
mov
repnz
scas
shll
jge
push
rcl
dec
ja,pn
sbb
dec
xchg
mov
stos
mov
nop
in
pop
push
inc
and
mov
adc
xor
adc
lea
sub
dec
mov
jo
lock
pop
pop
mov
pop
test
das
dec
adc
jbe
gs
adc
pop
mov
out
pop
out
enter
jae
jo
push
or
lret
xor
mov
inc
shrl
fucomp
cmp
movb
jg
inc
sub
mov
pop
mov
imul
ds
add
rcrb
fwait
sbb
test
dec
inc
cltd
scas
lods
mov
cs
inc
sub
adc
add
fidivrs
and
int
push
dec
mov
mov
sbb
cmpsl
iret
ror
clc
inc
xchg
jecxz
scas
arpl
dec
and
jns
xor
add
fnstcw
loope
dec
test
sub
push
cltd
lret
xor
add
or
les
adc
rorl
js
lods
add
mov
mov
sub
and
pop
loope
mov
push
add
pop
mov
cmpb
lods
out
jno
jg
loop
push
popa
rcrb
sti
dec
insb
clc
mov
cmpsb
adc
lods
xchg
mov
loop
jl
and
xor
fisttpll
adc
push
mov
dec
shlb
pop
cld
mov
mov
or
sbb
inc
repnz
test
ficoms
stos
lds
add
mov
dec
dec
pop
imul
sub
and
mov
xchg
pop
adc
sbb
hlt
dec
add
push
ja
mov
jns
xchg
inc
adc
in
xchg
adc
mov
dec
cmp
pop
pop
scas
test
and
or
lea
data16
addr16
pop
add
cmp
xor
inc
nop
das
pop
rorl
and
mov
xor
fcompl
stc
shr
imul
mov
cmpsb
xchg
sub
aas
xchg
loopne
test
add
push
sbb
cltd
lods
xchg
dec
mov
jne
fs
pop
push
xchg
pop
std
insl
stos
mul
pop
and
xchg
add
lahf
loopne
push
cmp
sbb
xor
cwtl
and
gs
lds
xchg
icebp
xor
cmp
pop
pop
leave
mov
sahf
push
hlt
sbb
xor
cmp
cmp
mov
repnz
jno
xor
fldl
jg
outsb
fwait
cmc
je
aaa
push
stos
movsb
popa
pusha
mov
lahf
mov
std
mov
lret
fsubrl
inc
jge
mov
jecxz
fwait
push
inc
add
mov
popa
sti
pop
xchg
sbbl
lods
mov
popa
sbb
mov
jmp
adc
ja
cli
stc
iret
out
out
cs
int3
lea
ss
mov
jno
xchg
ja
cli
call
inc
fisubs
loopne
and
outsb
mov
das
jp
add
rcll
mov
mov
sub
aas
sub
ljmp
jb
push
sbb
stc
inc
icebp
ds
mov
xchg
aaa
clc
movsl
xchg
scas
adc
jno
jmp
push
cmc
mov
inc
push
loopne
daa
push
lea
sub
push
and
test
fcompl
push
test
fsts
xchg
push
pushf
cld
fsts
cwtl
sbb
mov
pop
andl
pop
or
cwtl
dec
lret
sub
iret
js
pusha
popa
xlat
sbb
mov
mov
push
mov
aaa
xor
xchg
cs
cmp
in
sub
inc
stos
outsb
adcb
fs
movsb
loopne
call
mov
aad
jno
mov
adc
popf
mov
dec
addr16
dec
sbb
je
icebp
sub
icebp
aam
and
mov
xchg
sarb
jo
cmp
fldt
lock
fs
ja
xchg
pusha
xchg
sub
sbb
cld
jp
sbb
daa
sbb
outsl
adc
jmp
pop
pop
scas
daa
push
loop
and
add
cmp
adc
mov
dec
add
push
pusha
mov
mov
jno
aad
dec
adc
push
loop
xchg
punpcklbw
push
or
test
fistpll
daa
fdivl
mov
pop
mov
jecxz
out
cmp
mov
int3
adc
dec
mov
inc
jmp
ret
into
adc
push
test
stos
xor
push
jmp
fnstenv
ljmp
jno
sbb
dec
jb
jns
sbb
fmuls
mov
popa
push
push
js
cvtps2pd
pop
mov
stos
pop
sub
mov
push
cmc
pop
push
jmp
insl
aad
fistl
xchg
jmp
push
pushf
xchg
push
push
dec
mov
idivb
sub
sarl
push
jae
insl
ljmp
dec
faddl
shlb
xlat
addl
jge
jg
mov
dec
mov
mov
push
jp
aas
inc
in
jge
fprem
stos
mov
adc
shrl
sbb
in
psllw
shrl
pop
xor
ds
inc
xchg
xchg
cmp
cmpsb
aad
cs
add
add
jnp
test
adc
mov
test
loope
imul
add
mov
mov
cltd
and
cld
cmpsb
jno
xchg
sub
idivl
dec
out
testb
fs
mov
addl
fsubr
mov
test
mov
xchg
mov
jo
loope
mov
cli
loope
addr16
push
sbb
aas
mov
stc
cmp
dec
mov
mov
xor
orl
fiaddl
xor
and
fcompl
out
mov
or
pop
pop
add
fcoms
fs
ds
ljmp
imul
jmp
je
push
mov
and
inc
enter
pop
fcoms
jbe
roll
xchg
pop
or
mov
lods
and
cmp
pop
mov
inc
xor
cwtl
test
lods
cmc
bound
mov
icebp
mov
sbb
lcall
xor
aam
and
fnstenv
jbe
push
shlb
add
pop
punpckldq
pop
orps
mov
je
cmp
lods
and
out
adc
dec
mov
or
inc
sbb
mov
cmp
subl
daa
mull
sub
xchg
xlat
push
xor
lret
push
sbb
and
fsubs
inc
cld
adc
mov
ss
cs
add
adc
into
inc
dec
mov
orl
inc
icebp
test
push
int
mov
cmp
xor
sub
cmpsl
cltd
popf
rsqrtps
lret
pop
mov
xchg
ss
jp
xor
in
push
mov
mov
mov
cmp
xchg
pop
push
adc
push
call
dec
adc
subl
inc
push
sub
stc
push
or
or
stos
cmp
dec
push
je
fcomps
and
in
cltd
mov
ret
or
pop
sub
jp
dec
push
test
xchg
push
ret
js
rorl
add
cs
fimull
scas
push
or
test
jno
xchg
fsubrs
push
loope
roll
test
push
pop
loope
inc
cmp
mov
jnp
adc
pop
imul
jl
lock
clc
mov
push
cld
lods
inc
dec
sbb
out
mov
jg
mov
push
or
loope
xor
outsl
sub
push
fmull
sbb
mov
sbb
adc
xchg
addr16
shlb
mov
push
fcoml
insl
push
adc
insb
cltd
jb
in
stos
xchg
enter
icebp
pop
push
add
lret
decl
sarl
push
lea
aas
je
xor
and
loopne
aam
outsl
fimull
out
adc
or
push
lods
daa
call
mov
cmp
mov
in
js
arpl
mov
jl
or
pop
or
pop
lock
mov
adc
shr
or
jno
or
mov
loop
movb
xor
sbb
add
jo
sub
mov
mov
xor
sbb
mov
jno
push
jge
das
mov
sbb
cwtl
pop
mov
xor
clc
mov
cmp
or
ret
bound
and
add
sbb
mov
xchg
test
pop
mov
jnp
pusha
jecxz
mov
imul
nop
mov
imul
add
sub
arpl
lcall
fmull
mov
fcoms
test
fsubrl
mov
xchg
mov
cmpps
shlb
xor
in
pop
cmc
mov
jns
lds
fwait
or
enter
push
jae,pn
icebp
mov
popa
rclb
jae
es
std
lret
iret
insb
push
call
popf
dec
pop
push
pop
add
mov
es
rcll
mov
mov
or
push
mov
test
rcl
bound
sub
pusha
insl
ljmp
jo
outsb
push
test
aaa
jmp
add
sahf
loope
jae
fs
imul
xor
mov
sub
jp
lock
arpl
mov
test
nop
add
mov
mov
add
pop
lret
lea
add
insb
out
cmp
cmp
iret
pop
cli
pushf
push
push
jns
cmp
push
dec
adc
movsb
shrb
dec
ja
movsl
mov
and
aaa
cwtl
pop
and
xchg
inc
mov
lret
lcall
les
test
xchg
xchg
lcall
test
cmpsl
lods
mov
push
dec
bound
ret
js
lods
pop
lock
inc
test
sbb
insl
fistpl
cmc
xchg
fsubr
sbb
inc
mov
mov
call
push
aam
popa
inc
push
inc
jnp
imul
orb
sar
cmp
mov
data16
cli
push
inc
clc
ljmp
cmp
mov
rorb
dec
pop
mov
arpl
pop
sub
sub
push
insl
or
cld
mov
subl
fidivl
mov
mov
add
mov
mov
mov
sbb
pop
add
enter
dec
cmp
adc
loop
jo
mov
mov
sbb
in
dec
sbb
pusha
out
xorb
movsb
fadd
mov
dec
cmpsb
bound
and
je
test
push
mov
inc
inc
gs
mov
aad
test
push
mov
sub
push
into
mov
test
add
cld
lret
shr
push
xchg
sbb
cli
push
loopne
and
push
sbb
xor
add
pop
xorps
sbb
adc
mov
add
imul
sub
xchg
add
mov
dec
push
mov
and
mov
cmp
inc
lock
rorl
push
int3
into
cmp
popa
pusha
dec
jecxz
test
enter
cmpsl
pop
fsubrs
out
xlat
ljmp
inc
mov
pop
xchg
push
dec
dec
pop
repz
xchg
aas
ja
mov
pop
mov
push
mov
ds
call
xor
mov
enter
sbbb
cmp
mov
ljmp
ja
ds
loopne
pop
inc
orl
fistps
adc
cmp
sub
or
ja
ret
fcoms
add
or
pusha
rorb
fildl
sub
fdivl
jns
push
rolb
clc
pop
mov
ja
lods
jp
repnz
sub
iret
push
sub
movsl
jnp
leave
mov
push
sub
xchg
cmpsb
mov
mov
jbe
mov
mov
aas
std
imul
inc
hlt
cmpsl
test
shlb
clc
test
lock
mov
mov
mov
push
xchg
cmpsl
or
fsts
and
and
dec
cmp
pop
dec
and
hlt
or
test
push
jne
mov
test
test
xor
mov
add
jle
rcrl
pop
mov
aas
mov
jecxz
push
lcall
pop
adc
sbb
adc
mov
push
mov
xchg
rorb
clc
add
pop
imul
jle
xchg
mov
das
les
inc
sahf
mov
jo
mov
pop
aam
xor
pop
pop
cld
lods
fisubrs
mov
add
pop
add
mov
movsl
xchg
fdivs
and
pop
adcl
dec
mov
jmp
push
cmp
add
mov
loop
dec
pop
insb
inc
or
add
adc
out
les
fstps
ds
push
xorb
xchg
or
xor
lcall
pop
xchg
pop
pusha
sub
popa
sub
pop
js
add
add
push
mov
testb
mov
out
mov
push
mov
loopne
test
out
cmpb
sub
hlt
xor
inc
and
cmc
iret
and
ficoml
divb
in
jne
add
and
ds
cs
shlb
sub
xchg
jne
jno
dec
xchg
add
insb
jb
bound
lds
or
mov
sub
sbb
mov
push
outsb
pop
push
adc
push
into
add
push
xchg
mov
and
test
fcmovnu
imul
hlt
mov
es
and
stos
mov
hlt
sub
xchg
add
add
mov
scas
jno
add
cmp
push
popa
addr16
mov
mov
stos
out
hlt
ss
jne
lods
movsl
inc
je
inc
mov
test
rorb
add
movsb
ret
sbb
cmp
pop
mov
sub
sahf
mov
jmp
sarb
sub
adc
cmp
ja
sbb
add
insl
xor
xchg
pop
std
xorb
stos
pop
int3
inc
cmp
sub
ss
cmpsb
push
pop
adc
bound
and
and
dec
mov
adc
jnp
jecxz
cs
or
mov
pop
mov
add
mov
cli
push
in
icebp
into
test
nop
add
pop
std
and
notb
jae
insl
or
cmpsb
loopnew
dec
pop
sbb
and
sti
push
imul
xor
mov
aas
mov
aaa
adc
rcll
insb
push
movsb
loop
shl
out
xchg
fs
fadd
rcr
lea
loopne
mov
cld
jb
xchg
mov
rorl
xchg
dec
adc
inc
push
insl
adc
pop
push
mov
rcll
rclb
xor
das
inc
or
jb
pushf
clc
or
and
inc
data16
sbb
add
push
mov
or
pushf
or
int
addl
fmuls
mov
mov
sti
int3
mov
sub
fisttps
mov
or
pop
push
xchg
mov
addb
push
push
lock
cmp
mov
lss
mov
rorl
cwtl
cmpl
xchg
jge
push
fcoml
mov
les
sub
cld
and
loop
popf
ret
neg
ret
fimuls
or
lcall
arpl
mov
into
das
aas
push
mov
pop
xor
mov
jl
movb
insb
addb
mov
dec
mov
and
adc
fdivrl
cmp
pop
sub
mov
dec
inc
xchg
mov
pop
pop
pop
popl
test
push
pop
aas
pop
lods
cmp
ja
hlt
cmc
add
call
or
add
shll
push
stos
icebp
fisttpll
dec
test
inc
fsubs
push
push
push
mov
or
mov
loopne
clc
hlt
mov
inc
sub
in
std
je
mov
popf
add
push
mov
mov
sbb
push
out
imul
pusha
inc
pop
arpl
add
into
and
xchg
cmc
push
lds
add
sbb
jle
inc
sub
xchg
mov
or
arpl
movsb
jno
pop
call
sahf
mov
add
loop,pt
in
into
pop
lret
xor
mov
cmp
repnz
or
cli
xlat
scas
jle
daa
xchg
fwait
or
add
mov
push
mov
in
mov
lods
mov
mov
lret
mov
mov
iret
je
push
ret
aam
repz
adc
mov
xorb
mov
stos
ljmp
pop
xor
jg
pop
lods
lahf
not
inc
icebp
add
inc
and
or
jbe
out
addb
jo
sub
sub
push
rolb
lret
mov
xchg
or
mov
inc
mov
mov
loope
xchg
sub
cld
fs
pop
mov
test
push
cld
nop
cmp
aam
or
in
lcall
mov
mov
jnp
adc
lods
rcl
and
pop
cmpsb
js
aam
jns
dec
push
pop
inc
sub
sbb
lods
add
push
or
jge
inc
push
stos
push
adc
push
mov
cmp
push
inc
cmpsb
ljmp
and
sub
mov
or
mov
sub
sbb
repz
push
xlat
js
out
xchg
data16
rcl
test
mov
sub
sub
loop
pusha
daa
arpl
mov
add
fwait
jle
ds
dec
pop
int3
push
push
in
scas
je
test
lods
es
lock
and
andb
adc
cmp
lock
popa
pop
dec
fst
xchg
out
xchg
pushf
popf
adc
xorb
repnz
scas
jmp
jle
push
insb
pop
mov
aad
xchg
es
xchg
cmp
sub
stos
mov
sub
mov
jbe
push
movb
shl
cs
sbb
loop
gs
sahf
push
icebp
rol
jge
fildl
rcr
aam
xorl
ret
and
fsub
rcl
jg
call
fdivrs
stos
cwtl
out
rolb
jo
cmp
mov
and
fdivl
mov
lods
cli
mov
scas
cmp
call
or
sbb
or
loope
and
cld
sti
and
mov
inc
push
and
xor
fs
pushf
or
jmp
in
push
fadd
mov
imul
into
dec
test
iret
je
stc
push
js
push
dec
testl
jp
subl
push
mov
adc
insb
neg
pop
test
sub
add
push
cmpl
push
jb
fimuls
movsb
jge
lret
jmp
lock
std
add
adc
jl
sbb
arpl
sub
dec
loop
shrb
pop
adc
dec
jp
xor
mov
jl
adc
aaa
icebp
pop
push
mov
sub
aaa
push
adc
bound
inc
push
xchg
lret
cli
ret
jge
pushf
mov
add
stos
mov
mov
push
stos
push
dec
lret
push
add
call
les
push
dec
lea
test
sub
cld
lret
pop
push
cmp
clc
lea
pushf
in
sbb
mov
fs
shrl
clc
jbe
inc
dec
idivb
xor
test
push
inc
xorb
daa
jne
jge
pop
push
or
dec
dec
dec
lea
lds
dec
fwait
es
mov
outsb
mov
mov
scas
inc
xor
cmp
js
inc
add
orl
cs
inc
mov
cmp
mov
sub
jle
in
and
sbb
inc
pop
xchg
gs
adc
nop
sbb
jp
rclb
push
cmpl
jo
xor
mov
outsb
stos
icebp
mov
sbb
dec
push
mov
test
or
xor
dec
cltd
xor
aad
pop
std
ljmp
adc
add
jno
fiadds
insl
jecxz
dec
xchg
pusha
sahf
mov
xor
in
xor
inc
sub
leave
xchg
mov
cmp
push
push
mov
insb
or
test
incb
sub
and
xorb
lea
dec
xchg
push
movsl
xchg
mov
adc
add
mov
pop
mov
cli
js
jae
lcall
leave
and
sub
mov
sbb
cld
push
mov
add
in
insb
hlt
jb
fldenv
mov
aaa
popf
stos
mov
xchg
adc
arpl
jno
test
orps
add
add
dec
aas
inc
in
add
mov
dec
fidivs
cmpsb
jno
or
add
or
sbb
dec
std
pusha
push
and
test
push
cld
mov
mov
cmpsb
mov
test
push
mov
xchg
aam
loopne
stos
cmp
out
or
mov
sbb
outsb
gs
icebp
adc
std
xor
push
dec
xor
icebp
pop
add
outsb
sub
add
push
sub
sahf
bound
cmp
dec
cs
das
or
das
mov
sub
js
dec
push
sub
add
insb
xor
jmp
xor
dec
push
mov
cmp
rcll
mov
dec
jle
addb
jns
jl
inc
sbb
xorl
bound
cmpsb
stos
and
mov
int3
fdivl
lods
out
inc
pop
sti
cwtl
pushf
sub
fimuls
add
loopne
mov
lock
enter
or
mov
mov
and
lret
fs
dec
loope
and
sarb
xor
dec
jb
add
jae
lahf
rclb
mov
fstpt
mov
jge
mov
jecxz
mov
mov
or
es
dec
inc
mov
mov
cli
movsb
push
ds
inc
lret
int
push
jb
inc
jge
rcl
push
sbb
and
ret
push
jg
out
adc
in
mov
mov
addb
and
cmp
push
adc
in
sbb
cmp
lds
inc
orl
nop
xchg
push
movzwl
jno
aam
dec
xor
data16
bnd
ret
das
pop
add
in
push
insb
gs
icebp
cld
sbb
mov
adc
pusha
dec
mov
mov
ds
in
sbb
dec
add
sub
jmp
xchg
push
xor
and
in
stos
or
sbb
aaa
outsb
xchg
cmpsb
mov
mov
xchg
add
cltd
or
pop
xchg
subl
jnp
fxch
cmp
lods
subb
jo
and
je
mov
sbb
fiaddl
push
push
jge
inc
repz
sbb
daa
mov
mov
inc
or
pop
movsl
sub
or
in
or
in
enter
nop
xchg
jl
sbb
push
or
push
outsb
inc
out
test
outsb
xorb
dec
fsub
mov
cltd
jnp
push
xchg
push
dec
jge
xor
pop
jo
cmpsb
das
stc
or
mov
loopne
leave
in
mov
sub
jbe
into
movsl
dec
dec
inc
daa
hlt
rcr
popf
add
dec
shrl
movsl
iret
add
cmc
inc
cltd
movsb
int3
shl
jo
lods
imul
or
adc
addl
dec
mov
fstps
cmp
fstpl
jge
mov
inc
sahf
sarb
ret
jecxz
stos
std
mov
std
rcrl
aad
xchg
test
pushf
data16
scas
ret
push
inc
add
lea
mov
test
mov
jmp
bound
sub
repnz
jp
add
stos
add
lock
int3
aas
popf
movsl
call
jl
jl
lret
cmp
xchg
inc
inc
sti
and
das
mov
dec
or
dec
ljmp
mov
mov
pop
add
scas
pop
and
mov
fisubl
xor
jle
xor
cltd
in
add
pop
mov
adc
xor
subl
arpl
rclb
test
in
inc
or
in
dec
cld
or
ss
pusha
fucomi
lret
in
sub
push
inc
test
xlat
mov
jbe
rorb
jle
movsl
or
insl
mov
orb
rorl
add
mov
sub
lret
push
ljmp
push
std
sub
and
mov
adc
cs
jecxz
add
cs
stc
loop
dec
xlat
ret
outsb
ret
movsl
inc
rorb
gs
cmpsb
lret
dec
mov
or
xor
aam
insb
or
add
nop
loopne
divb
mov
loope
mov
mov
cmp
nop
xchg
aaa
push
and
mov
xchg
mov
jnp
loopne
mov
stos
jo
pop
xchg
into
and
jp
mov
push
adc
jl
lea
int3
into
in
mov
lock
push
inc
push
and
mov
sub
mov
xchg
rorb
enter
push
pop
xor
add
test
cwtl
and
pop
or
scas
pop
pop
ret
lock
pushf
mov
cmpsl
mov
mov
cmpb
data16
insb
fisttps
adc
je
dec
movsl
les
add
cmpl
push
mov
das
pop
shl
adc
shr
pop
test
insb
jle
cmp
lahf
sub
dec
cld
push
fdivrs
pop
xchg
loope
aad
fistpll
push
stos
sbb
imul
pop
movsb
nop
repnz
add
loop
test
mov
lock
mov
push
dec
mov
lock
or
je
add
or
push
mov
aad
push
ja
jo
inc
push
cld
aam
or
xchg
cmp
mov
pusha
mov
jge
inc
in
cmp
add
bound
lcall
dec
push
popf
movsb
inc
push
call
addl
pop
fcompl
xchg
test
lods
add
dec
mov
mov
in
sub
data16
jle
ret
add
cli
es
fcmovnu
jle
inc
mulb
popa
or
lods
and
push
sahf
and
pushf
mov
pop
js
xchg
cmp
or
or
aas
movb
jb
mov
lret
call
cs
inc
mov
stos
bound
mov
cmpl
xor
and
loop
dec
mov
mov
shlb
pusha
xchg
jne
arpl
fsts
pop
or
or
or
subb
shlb
jge
dec
cmp
test
jmp
in
adcl
cld
stos
lret
mov
push
mov
daa
cli
jp
pop
fiaddl
push
sbbl
mov
inc
or
sub
test
xchg
nop
pop
ds
push
inc
sub
xor
sub
mov
mov
pop
push
xlat
fimuls
xchg
xor
push
cmp
dec
xchg
test
dec
pop
in
and
push
mov
ret
enter
mov
add
movsl
add
or
shrb
lock
js
lahf
xchg
or
popa
jo
lcall
pusha
mov
cltd
loopne
movsb
cmp
cmpb
insb
inc
jmp
inc
scas
jp
mov
sub
mov
mov
push
lret
or
mov
pushf
daa
mov
or
test
icebp
xchg
out
or
popf
rcr
stos
pusha
inc
fistpl
xlat
lock
ret
into
inc
add
inc
add
aas
jnp
push
adc
lahf
push
and
push
inc
jbe
push
jmp
inc
and
mov
push
jae
arpl
pushl
loopne
iret
add
and
sub
outsb
clc
sbb
aad
ljmp
push
push
pusha
es
bound
ja
cmp
or
adcl
cld
pop
push
jp
cmpl
xor
push
les
lock
gs
sbb
repnz
std
push
fidivl
cwtl
daa
nop
pop
xchg
mov
js
pop
pop
imul
std
lods
or
jnp
es
cs
jne
out
bound
inc
data16
xchg
cmp
jl
aas
push
je
lds
rorl
push
jne
arpl
mov
pusha
int
sbbl
mov
mov
fmuls
lods
sbb
push
ja
xchg
push
xchg
cs
push
push
sbb
pusha
hlt
mov
and
and
shrb
stos
into
inc
int3
arpl
jnp
jle
mov
les
in
cltd
mov
pop
add
inc
mov
lock
inc
push
stos
inc
adc
push
adc
add
xchg
xchg
dec
jb
inc
and
test
idivb
sub
xchg
push
out
jmp
mov
clc
sbb
dec
icebp
popf
je
push
xchg
daa
or
push
rorb
inc
push
insb
push
jl
sbb
pop
dec
inc
and
lods
adc
lcall
aam
fisttpl
mov
clc
loopne
inc
test
xchg
loopne
push
ljmp
cli
dec
aam
loopne
and
sbb
mov
jo
into
repnz
enter
cld
or
sub
lea
push
dec
push
movsb
mov
call
sub
loopne
sbb
mov
mov
popl
mov
push
mov
in
ret
xor
or
mov
test
cli
ret
xchg
mov
inc
push
adc
jl
or
imul
jo
adc
ljmp
mov
out
dec
roll
dec
lods
inc
inc
loope
stos
dec
lret
je
std
bound
jmp
xorb
push
fwait
in
inc
repnz
lcall
inc
sti
je
xchg
dec
dec
xchg
adc
pop
mov
mov
sti
or
pop
and
sub
fiadds
scas
clc
aas
es
sbb
sbb
shl
mov
rol
lods
fwait
ds
aam
lods
inc
shrl
fdivrl
dec
data16
push
out
cltd
dec
mov
xchg
lahf
cmc
in
cwtl
add
aad
sub
fisubrl
clc
int
nop
aaa
sub
pop
sub
pop
andb
testb
mov
sbbb
enter
shll
mov
cwtl
xchg
inc
cld
dec
mov
pop
jne
xor
jnp
aam
arpl
movsl
lods
or
daa
sbb
loopne
gs
gs
shlb
hlt
mov
push
mov
mov
or
and
mov
inc
popf
cmp
bound
bound
pusha
out
lret
fcmovb
ret
punpckhwd
jnp
out
push
jge
bound
push
arpl
inc
std
mov
stos
sub
push
sub
pop
push
das
mov
cmp
inc
adc
imul
test
fcmovnu
mov
lret
outsb
faddp
popf
cwtl
jae
cmp
call
adcl
cmpl
adc
fists
pop
fstpl
imul
ret
sub
mov
jo
mov
andb
mov
pop
adc
mov
addr16
jecxz
fs
cli
jmp
pushw
push
push
pushf
push
js
jb
ljmp
dec
rclb
call
mov
test
mov
mov
dec
xor
sbb
xor
loope
jno
mov
fdivrs
adcl
push
push
mov
loopne
nop
std
mov
mov
sbb
loope
pop
fneni(8087
mov
cwtl
in
mov
jmp
fdivs
push
pop
xlat
jne
mov
sti
jecxz
inc
out
sbb
push
lock
push
push
aaa
push
jmp
das
call
test
and
fisttpl
lock
mov
add
or
andl
call
test
js
push
adc
xchg
pushf
sub
xchg
pop
test
xor
repz
stc
add
mov
add
bound
sahf
rcl
mov
lds
outsb
mov
inc
xchg
sarb
rorb
adc
adc
nop
mov
lea
aaa
popf
mov
std
jle
push
lret
rcrb
xor
xchg
push
dec
je
xchg
out
jne
lock
cmc
test
lods
shl
jae
dec
push
ret
and
rcrb
out
icebp
lahf
test
mov
rolb
xor
adc
ss
ljmp
dec
jecxz
dec
rorb
and
pop
movb
popa
ret
mov
out
sarb
fcoms
cmc
inc
pop
roll
or
mov
mov
dec
cli
rcl
ret
rorb
cmp
test
jmp
sub
es
push
std
pushf
jb
sbb
pop
xchg
pop
push
loopne
popf
rcrb
cmp
push
call
fdivrl
mov
out
test
add
jbe
pop
dec
decl
cli
movl
lods
mov
insb
cmpsl
mov
pop
mull
inc
fbld
push
and
mov
es
jecxz
sbbl
aam
jbe
hlt
mov
add
cs
sahf
xor
cmc
xor
mov
test
inc
xor
orl
xchg
sbb
cmp
push
pusha
jae
inc
jecxz
push
shl
xchg
pop
ja,pt
in
xor
addr16
or
sbb
es
mov
sbb
push
cmp
sahf
cmpsb
xor
push
xchg
addb
push
mov
outsl
loopne
push
adc
push
movsb
lock
lock
rol
aad
mov
sub
inc
or
mov
cmp
inc
push
add
cmp
mov
test
sbb
arpl
adc
adc
decb
inc
andb
sbb
mov
push
adc
xchg
xor
adc
cli
jnp
inc
mov
cmovg
mov
mov
je
add
imul
je
ja
pop
xchg
push
push
notb
or
scas
out
clc
jo
sbbl
enter
clc
fwait
jae
jl
orb
jg
inc
mov
lods
push
mov
or
mov
push
es
adc
add
imul
sub
ret
add
leave
mov
mov
mov
insl
out
dec
outsb
das
clc
xchg
dec
push
imul
outsb
fucomip
inc
pop
mov
mov
or
fistpl
jns
faddp
pop
xchg
pop
int
xchg
mov
ds
adc
lock
aad
out
push
scas
fsubp
pop
xor
sbb
jge
cmp
cwtl
sbb
xchg
adc
xchg
movsl
and
or
add
jle
push
ss
sub
pop
or
lods
xchg
push
les
shl
dec
fwait
push
add
push
sub
cmp
test
fstl
mov
add
sbb
addb
mov
inc
cmpl
mov
hlt
cli
daa
sub
ja
and
fildl
cmp
int
rclb
leave
push
jge
insl
sbb
ss
dec
imul
push
jg
xor
cmpsl
fldenv
push
xchg
sbb
inc
rorl
clc
xor
jg
mov
mov
fimull
cwtl
and
inc
sub
subb
inc
ljmp
cli
mov
in
add
jge
push
xchg
sbb
xor
push
adcb
add
pusha
inc
mov
sub
mov
pop
and
add
mov
cltd
jae
mov
arpl
and
pop
sub
push
jo
lock
pop
dec
dec
xor
dec
add
hlt
mov
xchg
xor
bound
clc
pop
jmp
repz
test
push
scas
adc
movsb
fistpl
jns
push
mov
movsb
push
push
inc
sub
inc
jnp
xor
int
xchg
xor
dec
sahf
lcall
shlb
sbb
ds
add
pop
in
mov
js
sbb
xchg
inc
mov
cmp
jp
cwtl
jl
cld
clc
enter
inc
push
aaa
mov
aaa
fucomp
js
dec
sbb
movsb
mov
push
leave
popf
xor
pop
rolb
inc
pop
outsb
mov
bound
or
xor
js
sub
sub
pop
inc
ds
dec
enter
jl
xchg
adc
mov
sbb
fimull
cltd
add
sbb
fidivrl
rcll
sbb
ficomps
dec
add
ja
adc
jg
jmp
jbe
data16
push
lret
out
pop
jl
stos
pop
lods
addl
shll
and
cltd
cwtl
loop
xchg
or
lock
xchg
movsb
sbb
dec
mov
push
push
aaa
loopne
xor
sbb
or
ret
and
cmp
rorb
bnd
inc
jnp
filds
jmp
dec
stc
mov
and
pop
seta
or
fisttpl
movsl
scas
mov
pushf
push
scas
aaa
popf
or
inc
or
mov
sub
testb
inc
jle
mov
mov
rcll
lods
mov
xchg
clc
je
jl
dec
push
and
bound
jp
or
ds
pop
inc
and
pop
xchg
or
push
add
loope
test
insl
xorl
or
mov
bound
movsl
ret
loopne
sbb
dec
decb
mov
test
test
jb
insl
inc
jmp
loope
cmpsb
ret
dec
pop
sbb
test
sbb
rcr
sbbb
test
sbb
movsl
loopne
inc
jl
movsl
push
int3
xlat
lods
xchg
xchg
pop
mov
clc
inc
cwtl
pushf
rorb
shr
or
cmp
ljmp
mov
dec
adc
loope
cmp
pop
jge
xorl
push
icebp
push
push
sub
adc
mov
mov
sub
or
inc
sbb
mov
pop
lahf
and
mov
push
arpl
adc
sub
ffreep
dec
and
ja
inc
sbb
mov
inc
adc
pop
test
and
fisttpl
xor
pusha
addb
cmpb
popa
inc
or
dec
jp
cwtl
jle
pop
or
call
shlb
insb
jl
add
jns
std
pop
sub
mov
cmp
out
enter
mov
hlt
mov
dec
push
in
call
cld
push
mov
bound
pop
mov
or
push
and
sbb
xor
mov
faddp
or
push
dec
es
xor
push
push
notb
nop
cmp
mov
and
xchg
push
inc
lahf
push
adc
fsubr
jge
xor
adc
dec
mov
inc
ss
fnsave
adc
mov
jg
outsb
dec
sub
xchg
icebp
mov
sub
inc
jo
and
sbb
loopne
pop
lds
sbb
cmpsb
sub
stos
out
mov
push
ret
xchg
add
inc
das
cld
je
push
pop
fnsave
xor
xchg
idivl
adc
lods
daa
xor
mov
mov
push
sbb
jo
or
inc
mov
sbb
inc
cld
hlt
flds
mov
aaa
icebp
pop
xchg
enter
shlb
cmp
inc
lods
adc
add
movsb
xchg
sbb
xor
fadds
sub
aam
sarb
movsb
fdivl
inc
hlt
rol
mov
adc
mov
in
out
cwtl
imul
add
xor
mov
or
inc
mov
dec
jo
add
lock
sbb
xchg
push
addr16
pusha
add
adc
sbb
shll
test
pop
push
ret
xor
adc
jo
popa
mov
cs
pop
pop
sbb
jp
insl
outsl
outsl
adcb
dec
push
fsubrs
push
dec
rorb
pop
pop
fnstcw
jno
sbb
loopne,pt
cwtl
ret
outsb
mov
mov
add
mov
daa
sbb
cmp
push
cld
addb
fisubrl
orb
fs
pop
out
jmp
inc
add
adc
xchg
adc
push
cmp
popf
fisttpll
xchg
mov
repz
cmp
cli
test
fiadds
cmpsb
mov
cs
push
call
pop
mov
icebp
out
ret
idivl
repz
xlat
pop
nop
aaa
inc
mov
jae
je
inc
and
cmp
sub
mov
rorl
shl
popa
fs
mov
xchg
add
or
inc
inc
les
lods
push
ljmp
mov
add
pop
add
cs
xchg
xchg
hlt
or
mov
mov
pop
jl
fmull
and
pop
insb
ret
pushf
lock
or
shll
aam
xchg
xchg
pop
mov
xchg
xchg
daa
dec
lods
imul
in
sti
or
out
jge
mov
mov
sahf
xchg
sahf
dec
aas
ss
or
shrb
iret
movsl
out
xor
divb
inc
sub
addb
mov
loope
mull
mov
xchg
inc
imul
sbb
insb
mov
and
scas
loopne
cmp
pop
in
mov
push
cs
clc
and
loopne
pushf
inc
loopne
shld
add
addb
push
hlt
mov
xchg
adc
or
lahf
out
ss
mov
fsubs
push
je
and
sbbb
sti
clc
inc
pusha
lea
pusha
insb
lock
test
xchg
cs
add
out
and
js
jl
aad
push
imul
cmpsb
inc
fisttpl
xchg
adc
loop
dec
jbe
xor
jp
mov
mov
add
pop
pop
data16
cmp
cmpsl
push
insl
pop
add
fdivrl
divb
loop
in
or
sub
data16
xchg
insb
add
incb
jb
bound
dec
std
aad
push
jb
sbb
xchg
aam
xor
mov
push
roll
xchg
push
jnp
fcomps
mov
ret
dec
lods
and
inc
add
push
imul
pushf
fildl
cli
sub
jae
mov
popf
jecxz
imul
xchg
mov
out
jae
dec
mov
add
mov
jecxz
je
test
addb
outsb
mov
pop
mov
movsb
adc
out
inc
cmp
and
int
stos
pop
sub
push
movzbl
or
dec
loopne
pop
push
call
sub
mov
sbbl
push
mov
movsl
mov
inc
adc
push
pop
sahf
subb
iret
ljmp
inc
ja
xchg
push
shr
aaa
mov
mov
daa
mov
sar
sbb
data16
insb
mov
or
mov
mov
imul
add
mov
shr
aam
outsb
lock
or
stc
push
and
and
pop
pop
mov
in
adcl
xor
dec
ja
sub
add
mov
std
cs
xchg
pop
outsb
bound
lock
dec
sti
push
or
cmp
sub
and
inc
cmp
or
push
or
push
call
js,pn
shlb
ss
sub
addr16
and
lcall
xor
jge
add
jmp
or
jle
in
cltd
push
leave
add
sbb
loop
iret
int3
dec
sub
adc
jne
aam
sti
incl
pushf
inc
xchg
shlb
je
push
dec
dec
insb
jecxz
sbb
fcmovnb
mov
adc
stos
or
nop
push
cmp
mov
and
in
pop
and
add
xchg
mov
pop
add
mov
inc
int
aam
mov
dec
out
leave
and
cmp
and
add
jbe
cmp
fldt
fsubs
sbb
and
int
rcl
sbb
fadds
sbb
call
shll
lock
adc
xor
xor
into
mov
jp
and
out
add
xor
mov
inc
imul
cmp
mov
adcb
rol
stos
outsl
ja
mov
popf
mov
xchg
mov
ds
pop
shl
xchg
xlat
js
jnp
dec
sub
xchg
mov
or
bound
inc
lock
xor
lods
divb
in
mov
ljmp
mov
xchg
out
std
pusha
sbb
mov
test
movsl
mov
xchg
sub
mov
adc
mov
sahf
stc
dec
inc
dec
sub
dec
mov
fs
jge
xchg
mov
jge
rorb
sbb
push
lock
loopne
loopew
sahf
shlb
sbb
stos
mov
xchg
xor
jg
shll
movsb
add
xor
pop
inc
push
subl
or
in
ud1
fisttpl
sbb
and
fwait
and
xrelease
fldl
movsb
xor
arpl
sub
aam
lock
mov
sub
out
inc
mov
xchg
adc
test
enter
lock
jno
adcl
push
cmpsl
or
js
fwait
imul
scas
test
ljmp
rorb
js
in
js
cmp
shrb
xchg
ret
cmp
lcall
cmpsl
sub
movsb
loope
clc
add
and
js
or
jecxz
test
je
xorb
addr16
shrb
xchg
or
cmpsb
jne
movsl
push
out
inc
aaa
test
jmp
or
sbb
or
and
or
dec
ret
cmc
testb
mov
lock
or
push
sbb
and
jge
cwtl
out
fs
and
xchg
orb
rol
and
jecxz
xchg
adc
aaa
adc
push
lea
sbb
pop
mov
in
mov
xor
or
pop
pushl
sti
arpl
add
mov
pop
cmp
cli
pop
ficompl
mov
ret
push
test
mov
in
nop
push
dec
shll
sbb
stos
mov
xor
ljmp
xchg
lea
mov
jne
xchg
aas
pop
jecxz
push
enter
jmp
mov
or
jle
sbb
push
movsl
jp
push
cmp
cwtl
popa
xchg
in
les
mov
jecxz
or
insl
cmp
in
xlat
aad
mov
cli
addr16
pop
aam
dec
and
out
sar
loopne
sbb
leave
clc
scas
adc
dec
push
inc
dec
imul
jmp
sbb
mov
aas
sbb
aaa
xor
test
mov
inc
mov
loop
cmpsl
sbb
lea
mov
mov
jno
mov
cld
jns
adc
pop
xorb
outsb
int
ret
cmp
xchg
lock
jbe
test
adcb
jge
mov
xchg
inc
scas
icebp
dec
inc
jno
hlt
sbb
cmpsb
xlat
add
adc
ficompl
or
mov
fst
mov
or
je
dec
pop
pop
sbb
out
fwait
sub
jle
mov
mov
dec
inc
cmpsl
jae
or
insl
bound
ret
or
cmp
shll
shlb
and
add
imul
stos
test
cmp
sti
xchg
push
loop
sub
mov
shl
cmpsl
lds
add
jmp
js
mov
and
mov
mov
inc
mov
mov
lcall
pop
jmp
out
dec
mov
jbe
cmp
je
test
or
out
into
sbb
xchg
movsb
cmp
ret
arpl
outsl
and
xor
data16
pusha
add
in
push
bound
out
add
push
sub
int
cmp
mov
pop
test
cmp
jge
jae
fiaddl
ftst
push
iret
pop
aad
int
dec
mov
xchg
mov
xor
mov
insb
hlt
jge
fstpt
insl
cmp
inc
and
fwait
xor
sarl
out
dec
jae
aad
test
push
orl
loopne
and
arpl
push
daa
movsb
jp
inc
test
add
mov
mov
xor
mov
cmp
xchg
fildl
push
xlat
dec
insl
sub
xorb
ret
nop
jb
xor
ret
mov
mov
jmp
cmpl
jne
dec
jmp
imul
ret
and
fcomps
push
iret
inc
xchg
cmc
mov
cmpl
add
cmpsb
aaa
xchg
pop
push
jnp
mov
lcall
and
lret
xor
movsl
add
add
sbb
clc
xor
or
pop
pop
xchg
sbb
mov
jge
inc
daa
les
sub
ds
sar
push
and
xchg
mov
ss
adc
add
sub
stos
int
mov
xchg
xlat
cltd
and
jo
push
loop
jo
pop
push
or
popa
xlat
mov
or
mov
test
rcl
aad
out
mov
cmp
lahf
dec
xchg
xchg
sub
add
movsl
xor
out
out
mov
lahf
enter
addb
mov
scas
and
jb
push
add
fcomps
ja
mov
das
pop
inc
insb
ret
xchg
xchg
stos
and
test
int3
inc
lret
fildl
leave
in
movsl
adc
cmc
cmpsl
cmp
push
rclb
push
stos
inc
stos
and
adc
mov
inc
add
jne
aad
cmp
fisubrs
dec
leave
xor
mov
in
test
adc
jge
or
xorl
pop
add
push
ja
movsl
inc
inc
xchg
and
imul
fldcw
fs
imul
push
iret
imul
push
dec
data16
cmpsl
xor
jmp
cld
leave
or
mov
ret
jne
pop
pop
imul
jns
sarb
in
mov
movsb
das
jmp
out
imul
or
pushf
xchg
and
lods
loop
out
jnp
cmc
add
lea
fists
enter
fstl
push
pop
push
fistps
cmc
mov
push
lea
pop
pop
rcll
sbb
addb
lock
or
xchg
add
sub
cwtl
mov
inc
cmp
ret
sbb
jmp
sub
mov
xchg
mov
scas
testl
add
pushf
les
leave
or
lcall
jp
std
jbe
test
xchg
sarl
and
inc
insl
pop
ret
idivb
dec
sahf
repz
lret
jae
mov
cmp
add
xchg
mov
cmp
inc
push
xor
jg
xor
inc
lock
sti
addr16
mov
push
test
pop
mov
push
xlat
mov
fs
xchg
ret
sbb
ret
mov
cmp
sbb
gs
push
jmp
jmp
sbb
call
leave
mov
cli
mov
pop
iret
mov
push
and
subl
adc
mov
dec
out
mov
cmc
loope
out
fstl
jmp
pusha
jns
push
aad
lds
cmp
push
cmp
xchg
cwtl
cmpsb
add
in
push
inc
cmpsb
loopne
fwait
mov
movsb
inc
adc
or
mov
cmp
pusha
lds
addr16
add
andl
imul
dec
push
bound
push
sbb
imul
rcr
mov
sbb
sub
inc
arpl
insb
sub
enter
orl
xchg
cmp
mov
inc
jb
inc
mov
jae
dec
pop
cmp
mov
lock
scas
xor
inc
cmp
jno
push
filds
adc
jno
rcll
test
add
fdivs
and
gs
scas
lds
adc
pop
pop
sbb
insl
es
insb
mov
mov
jg
pop
sbb
adc
push
loope
sbb
imul
cli
mov
aad
or
std
inc
and
mov
push
ds
fldt
pop
xchg
jmp
adc
or
push
jmp
movsb
lock
jmp
adc
mov
mov
mov
jnp
sahf
icebp
mull
mov
ljmp
push
and
les
rcrl
std
cmp
push
pop
adc
mov
gs
adc
dec
popa
cmp
xchg
outsb
mov
jnp
mov
fsubrl
push
mov
or
add
outsl
push
dec
jl
shlb
subl
scas
mov
pop
sbb
andl
mov
push
pop
xor
add
mov
push
js
pushf
xchg
and
loope
cwtl
mov
arpl
loop
add
jns
fwait
dec
dec
scas
dec
push
cmpl
add
cwtl
push
add
xor
lcall
sbb
pop
bnd
outsl
insl
mov
aaa
mov
xor
mov
cwtl
out
lods
dec
xchg
inc
cmpsb
or
popa
int
outsb
and
outsb
ss
test
or
imull
sub
aaa
mov
sbb
or
test
mov
out
mov
mov
jo
sbb
loop
cmc
or
lods
jmp
cmp
adc
push
push
cmp
or
mov
sub
repz
push
cmp
push
inc
loope
xchg
loopne
cmc
mov
scas
jno
rcl
movzwl
movsl
push
dec
nop
xor
rcll
rcl
stc
and
add
lods
xor
xchg
push
and
and
add
mov
sub
inc
xchg
add
add
fnsave
cltd
lods
sbbl
or
aaa
jno
subb
or
sbb
lds
dec
xor
push
adcb
arpl
or
mov
pop
cwtl
js
mov
and
icebp
stc
jmp
adcl
mov
inc
lds
sahf
andl
call
bound
or
inc
sbb
adc
insl
cli
mov
pop
lods
fisubl
mov
pop
in
insb
jns
lock
sbb
sub
sbb
xchg
jae
clc
test
push
add
sub
loopne
mov
and
cmpb
js
pop
sub
pop
flds
adc
stos
mov
inc
jno
dec
mov
aas
btc
xchg
sahf
cmp
arpl
and
fs
jp
daa
add
push
jecxz
std
adc
cmpsl
sbb
lret
into
lods
add
dec
or
daa
sbb
int
fistps
mov
cmp
inc
sti
add
xchg
pop
push
mov
mov
aad
lods
std
icebp
loopne
push
test
mov
es
ret
cmc
add
push
add
sbb
jecxz
inc
hlt
loope
stos
arpl
push
push
pop
mov
daa
dec
ret
mov
push
incb
sbb
or
mov
out
sbb
xchg
mov
in
sub
out
loope
cmp
inc
aam
inc
stos
addb
or
in
bnd
pop
sbb
je
mov
jl
mov
dec
or
outsb
andl
lods
xor
out
xor
popa
or
stos
cmp
and
fstps
or
and
jle
insl
divl
push
lods
ljmp
hlt
test
xor
icebp
dec
repnz
frstor
out
xor
xor
push
jle
inc
movsl
orb
pop
add
dec
pop
and
andl
scas
jns
test
clc
inc
in
jl
xor
das
loopne
cltd
cmpsl
leave
mov
cmp
push
arpl
out
pop
mulb
clc
in
add
test
pop
xchg
pop
adc
add
aad
xchg
cli
ret
in
fmuls
mov
sub
icebp
xor
rorl
je
in
inc
negb
int3
insl
mov
in
in
adc
sub
or
mov
cmpsb
mov
jecxz
bound
mov
mov
adc
dec
shr
cwtl
pusha
cmpsl
lret
cwtl
push
cmp
ds
xor
scas
lret
jp
xor
es
push
add
inc
sub
and
add
adc
cmp
shrd
bound
cmpsl
stos
cmpb
adc
fwait
les
xchg
arpl
lea
pop
push
popa
dec
add
int3
lock
dec
adc
or
xchg
jbe
dec
fwait
or
mov
enter
cmp
or
inc
push
push
les
andb
inc
sub
add
pop
flds
or
or
pushf
and
cmp
clc
imul
mov
sub
cwtl
iret
leave
sbb
movsl
mov
outsl
in
sbb
mov
jmp
pop
fadd
pop
popa
sub
rclb
xchg
out
mov
jae
dec
es
dec
fwait
adc
push
enter
je
lods
cmp
or
mov
rolb
nop
roll
sub
subl
daa
push
pop
orl
sub
sti
std
sub
ret
jno
test
jmp
or
iret
repz
xchg
cmpsl
lock
cltd
or
mov
shrl
push
sahf
jmp
icebp
movsb
adc
xchg
pop
inc
mov
jno
xor
pop
or
cmp
push
cmpsl
cmp
inc
mov
cwtl
mov
cld
cmc
loope
push
popf
das
xorb
mov
test
adcb
mov
push
mov
push
hlt
xor
mov
jmp
js
mov
push
sbb
xor
cmp
push
mov
clc
mov
push
and
or
push
sti
xchg
mov
pop
in
cmp
jb
rclb
xchg
movsl
pop
int
mov
call
into
jmp
das
mov
add
or
incb
adc
jecxz
sbb
add
aaa
mull
cmp
cltd
fnsave
add
fsubl
cltd
lcall
rolb
push
scas
adc
jmp
sub
mov
bound
leave
movsb
cmc
and
mov
stos
out
adc
and
add
je
add
jmp
cmp
pusha
jo
adc
mov
mov
pop
ljmp
in
push
aam
scas
pop
jp
sub
pop
pop
cmp
mov
fbld
fstps
fs
jmp
aam
jecxz
call
icebp
adc
mov
or
mov
hlt
mov
cltd
cwtl
xor
out
mov
mov
inc
or
mov
push
dec
stc
push
test
jbe
xchg
mov
jmp
or
mov
cmpsb
aam
push
cmp
or
sub
xor
push
push
shll
or
jg
pop
test
frstor
xchg
ss
mov
into
add
jle
or
ljmp
cli
dec
arpl
adc
out
rcll
cmp
or
test
das
push
push
and
mov
lea
call
push
mov
push
jo
out
sub
in
aam
mov
popf
scas
pop
mov
ret
push
psubb
or
pop
push
mov
out
minps
sbb
rolb
pop
dec
adc
scas
loope
and
dec
jnp
es
jns
lea
ret
xchg
xlat
rcrl
fs
or
xor
cmc
in
lahf
and
pop
jecxz
mov
jb
jmp
dec
dec
fwait
xor
mov
xchg
cli
jmp
push
pop
xor
mov
xchg
sub
xor
fcompl
or
inc
mov
mov
jne
or
lds
mov
jecxz
leave
cmpl
mov
test
push
rcll
rcrb
js
in
nop
std
popa
jl,pn
les
or
xchg
sub
mov
inc
mov
aad
cltd
or
lcall
adc
cmp
ja
xorl
mov
and
push
cmp
pop
jmp
and
mov
xchg
rcl
push
pop
cmc
andb
das
mov
mov
mov
jecxz
cmp
and
or
sbb
mov
inc
xchg
pushf
call
std
jge
cltd
bndstx
loope
sub
aas
je
ret
inc
cmp
loopne
sub
xchg
xchg
add
cmp
mov
xchg
jae
mov
push
sbb
push
test
test
add
push
test
sub
loopne
dec
add
sub
hlt
jb
out
jle
sti
dec
or
jle
testb
leave
pop
outsl
mov
into
imul
pop
test
sbb
es
xchg
and
inc
xor
icebp
mov
sub
clc
out
push
hlt
sbb
add
xchg
daa
rcl
pop
pop
sbb
data16
subl
movsl
rdpmc
data16
pusha
scas
mov
push
inc
adc
movsl
std
jnp
adc
mov
and
fdiv
cs
or
cs
jb
pop
sub
xor
sub
mov
mov
sbb
jns
xchg
inc
out
in
mov
inc
or
mov
pop
stos
fucom
int
movsl
inc
jmp
add
or
js
mov
pop
ds
push
fcomps
push
mov
xchg
stc
mov
mov
out
sub
xor
or
sub
mov
lahf
dec
push
aam
aaa
lea
andl
cmpsl
repz
xchg
pop
sbb
jp
fbstp
xchg
loope
pop
daa
mov
pop
in
je
sbb
rorl
and
push
pusha
inc
test
lcall
cs
sub
cli
arpl
mov
stos
jbe
ret
rclb
repnz
xor
loope
push
adc
movl
push
xchg
or
fsubl
lock
cmc
movsb
stos
imul
sbb
scas
mov
mov
out
hlt
subb
and
sub
loope
or
rorl
mov
jmpw
data16
adc
rorb
or
adcb
sbb
addr16
mov
inc
popa
scas
push
subb
inc
adc
adc
repz
xor
insb
sub
movsl
sbb
fs
xchg
test
iret
shl
cmpsl
pusha
mov
xchg
insb
stos
mov
stos
lahf
ljmp
jns
es
rolb
lcall
jno
enter
sub
add
enter
fwait
dec
bswap
sub
jecxz
aaa
lods
sub
mov
shlb
xchg
xor
stc
pop
lods
cmp
repz
jge
jecxz
jge
push
mov
daa
hlt
sub
xor
mov
push
add
mov
and
je
mov
rcll
lcall
push
das
shrl
fcoml
mov
add
loop
or
push
ret
es
imul
shrb
push
lea
sbb
ds
inc
pop
negl
je
jno
xor
mov
test
pop
add
mov
mov
mov
ret
mov
push
fsub
sbb
xor
push
sbb
daa
in
jbe
jp
push
divb
mov
mov
pushf
shl
push
mov
icebp
loop
lds
popaw
or
ret
outsb
dec
mov
jnp
xchg
ret
sub
scas
jmp
xchg
cmp
mov
push
xchg
and
or
add
mov
cmp
ljmp
mov
scas
adc
adc
and
daa
je
push
pusha
aad
push
xor
outsb
roll
ja
xchg
loopne
cmp
xor
add
dec
push
mov
les
cmpsb
jne
dec
ds
inc
sbb
mov
sbb
lods
pop
pop
sbb
mov
pop
dec
repnz
out
orl
pop
dec
sub
fcomps
clc
aad
repnz
movsl
cmp
je
shl
adc
xchg
jne
lcall
push
out
sbb
lret
or
sbb
pop
sbb
and
lods
test
xchg
and
mov
addl
outsb
loope
jle
or
dec
cmp
xor
adc
mov
out
sbb
add
lods
cmpsb
fsubrp
int3
push
dec
xor
xor
push
popa
adc
incb
in
shld
or
push
jne
icebp
pop
jecxz
mov
dec
mov
or
das
cld
or
inc
push
cmpsb
mov
adc
cmc
sub
test
inc
clc
or
mov
adc
cs
frstor
movsl
shll
cli
insl
xor
mov
fldt
mov
jmp
mov
pop
shlb
sub
scas
or
jle
lret
xchg
clc
lock
adc
mov
push
mov
dec
sbb
lock
ret
pop
sub
mov
jnp
or
jne
leave
mov
add
lcall
daa
add
xor
adc
daa
loope
test
sub
pusha
scas
cmpsb
imul
inc
loopne
sbb
lea
fsubrl
xchg
cmp
test
por
jbe
cmc
outsl
sbb
cltd
push
push
mov
mov
out
inc
cmp
xor
jmp
pop
jge
addl
jbe
push
out
add
add
xorb
add
shrl
sub
inc
jbe
mov
or
or
ljmp
bound
ljmp
add
dec
sub
or
fisubl
mov
fcmovu
je
cmp
add
xor
and
mov
in
jo
outsl
and
xchg
jge
cmp
jo
push
pop
or
push
stos
pop
mov
inc
and
in
js
sbbb
outsb
pop
pop
nop
inc
inc
or
sub
pop
icebp
or
test
push
adc
sub
xchg
dec
fldl
push
pop
cmp
sub
push
aad
jl
jg
pop
xchg
in
stos
mov
add
pop
movsb
inc
push
clc
mov
mov
fs
iret
jnp
sti
shlb
rcrb
push
xchg
and
cmp
cli
les
sbbb
cli
mov
mov
mov
push
dec
cmp
mov
int3
mov
rolb
lret
pop
fdivl
movb
test
pusha
stos
mov
arpl
xor
sub
shr
cmp
inc
cmp
lahf
roll
cmp
push
loopne
push
lods
cmp
pop
add
das
movsl
adc
push
jmp
pusha
mov
add
icebp
ret
fwait
adc
mov
push
mov
sbbb
add
pop
sub
adc
sub
incb
mov
fisttpl
in
add
mov
push
scas
lcall
test
mov
pop
xorl
inc
cmc
sub
inc
inc
popf
jo
push
mov
adc
cmpsl
popf
mov
ret
mov
xor
sub
das
mov
stos
mov
in
test
jge
lahf
jle
or
xor
xlat
jo
roll
int3
xor
jno
jns
mov
sub
xchg
mov
jbe
adc
and
mov
jp
test
cmp
push
cwtl
lock
sbb
das
fisubl
or
lcall
jge
add
mov
xor
in
mov
mov
pop
js
iret
ja
je
inc
cld
jp
push
or
fiaddl
ret
cs
repnz
cld
sbb
js
mov
imul
xor
es
cmpsb
sub
mov
test
xchg
fisttpl
pushl
orb
adc
rcll
scas
dec
imul
dec
jo
mov
cmp
adcl
or
popf
flds
rorl
sub
pop
jnp
loope
loop
fadds
lods
out
inc
jns
inc
jl
hlt
add
scas
inc
stos
inc
dec
iret
and
xor
fimull
push
mov
movsl
sub
jl
inc
xchg
in
fistpl
push
out
sub
shlb
dec
aam
stos
push
sbb
popa
nop
sub
fimuls
and
fnstenv
mov
inc
movl
aaa
xor
loopne
aaa
cld
movsl
mov
push
add
pop
iret
jl
add
inc
pop
test
fstpt
in
jmp
sbb
inc
repz
mov
ret
addl
add
pop
cmp
ret
repz
ret
pop
sbb
add
sub
ret
push
xor
pop
shld
xchg
lret
shrb
xor
cli
in
xor
cmpb
xchg
dec
cli
std
movsb
inc
mov
mov
cwtl
or
xor
jno
inc
dec
jle
mov
pop
mov
push
dec
out
cs
xor
jmp
xchg
or
jp
pop
in
jg
sub
dec
cs
adc
popa
fs
pop
jmp
ror
sbb
xchg
jp
sub
popf
xor
xchg
sbb
cmp
cli
jmp
dec
push
add
jle
push
rorl
mov
xor
dec
movsl
pop
adc
pushf
push
add
jl
cs
push
ret
daa
jp
sub
fbstp
jbe
jp
sub
movsb
and
movsb
and
add
into
arpl
xchg
pop
sbb
insb
sbbl
mov
push
mov
ss
pop
pushf
push
test
or
add
ficoms
mov
adc
mov
aas
fs
jae
mov
and
popa
hlt
xchg
sbbl
sbb
ret
xor
or
add
ljmp
mov
sbb
fcomps
push
pop
inc
hlt
lcall
jge
jp
jne
mov
jmp
loope
mov
popf
sarl
adc
and
xchg
xor
pushf
adc
mov
scas
incb
push
sub
call
daa
std
adc
lods
adc
in
push
or
daa
cmp
xchg
add
add
in
adc
and
fwait
or
leave
loope
fcmove
fcomp
jp
sbb
adc
sub
add
add
inc
or
ret
mov
pop
negl
es
sub
call
sub
out
rorl
test
sub
imul
inc
sbb
lock
loop
xchg
sbb
unpcklps
push
and
popa
aaa
mov
adcb
hlt
incb
mov
jg
ljmp
sbb
enter
dec
adc
sbb
sbb
jecxz
mov
sbb
test
adc
mov
sbbl
mov
lds
aam
xchg
ds
test
dec
fwait
adc
adc
jle
xchg
mov
jp
lahf
ds
sub
adc
call
add
ljmp
pop
ljmp
and
orb
push
pushf
mov
ss
loopne
test
pushl
addl
sbb
insb
rcrl
sub
and
std
int
es
ja
xchg
dec
push
jb
bound
jecxz
add
int
sub
jge
xchg
push
fimuls
bound
cmpsb
aas
mov
push
sub
add
mov
sub
sub
mov
aaa
sbb
mov
ljmp
or
xchg
cli
in
or
loope
adc
sub
lret
dec
cld
cmc
dec
cld
push
dec
cmp
insl
sub
cmp
jbe
loopne
xchg
inc
jmp
in
dec
pop
lret
js
cmc
sbb
sbb
pop
enter
fsubrs
inc
int
push
push
mov
scas
pop
bound
push
bound
and
mov
sub
aaa
inc
and
and
push
pop
aam
sub
add
add
dec
test
inc
dec
fisubrl
icebp
sbb
and
add
fidivrs
roll
xchg
cmc
sub
ss
inc
mov
add
sbb
inc
aad
and
xchg
jg
shll
sbbb
inc
jbe
pop
call
sbb
stos
loopne
aas
sbbb
mov
sbb
and
aam
sbb
inc
inc
cld
dec
xchg
pushf
stc
mov
adc
jne
xchg
inc
sahf
scas
mov
push
pushf
add
jp
js
cld
call
mov
pop
pop
sub
pushf
roll
loope
add
subb
add
js
inc
clc
in
ljmp
mov
mov
pop
data16
rorl
fldcw
dec
addr16
cmc
inc
cmpsb
or
mov
mov
jp
leave
inc
ljmp
mov
xchg
mov
cwtl
mov
dec
lods
pop
pop
stos
or
mov
inc
sub
mov
mov
mov
adc
das
and
cs
addl
or
pop
lods
hlt
pusha
stos
fdivrl
and
mov
cwtl
xchg
or
mov
pop
cmpsb
mov
cld
pushf
mov
jmp
lock
push
xchg
aad
lcall
loopne
cmp
daa
std
xchg
jo
das
pop
inc
into
adc
mov
mov
ror
pop
insb
ja
enter
fdiv
add
lock
fists
and
jb
out
push
sbb
cmp
sbb
add
sbb
xchg
adc
fwait
or
push
sti
add
movsb
popa
test
and
jp,pt
das
sahf
in
stos
jp
pushl
sbb
out
mov
inc
inc
cli
cli
test
adc
cwtl
jae
popa
mov
jecxz
loopne
cmp
xor
inc
cli
test
xor
mov
aas
push
xchg
push
push
mov
out
aam
jmp
jne
xor
xor
add
mov
sti
lcall
mov
out
lea
xchg
loope
pusha
sub
lahf
mov
jne
subb
ss
fadds
mov
sbb
pop
xchg
inc
add
cwtl
clc
rcrl
js
stos
push
xchg
call
or
add
and
lret
ret
pop
push
cwtl
jl
mov
not
adc
pop
push
or
inc
jae
xor
fwait
call
inc
cmc
lds
sahf
sub
inc
popa
pushf
testb
and
jecxz
aam
fdivl
jo
pop
cmp
jo
loop
cmc
sbb
and
rorb
jle
add
or
add
in
and
push
inc
mov
pop
call
cmc
imul
push
mov
cmp
and
loop
stos
in
aam
mov
dec
add
pop
sub
inc
add
mov
jecxz
andl
loope
cmpsb
fsub
aas
imul
jg
xor
mov
aam
clc
inc
mov
and
xchg
sbb
mov
and
pop
xor
xor
jbe
jle
inc
and
or
icebp
xor
popa
sub
fsubrl
xchg
inc
adc
fnstenv
and
pop
dec
adc
sahf
test
mov
push
ds
mov
sub
or
test
aas
fs
insl
lods
dec
dec
sahf
pop
iret
xchg
sbb
sbb
das
jno
xchg
push
lret
mov
test
inc
cld
inc
or
bound
gs
hlt
adc
dec
cli
or
in
jle
fmull
dec
xor
lret
pop
mov
mov
nop
das
nop
scas
or
daa
andl
mov
mov
stos
xor
or
lock
das
lahf
pop
aam
test
pop
inc
mov
mov
jge
int
int3
xor
push
adc
xchg
mov
mov
mov
cmp
js
mov
test
inc
xor
inc
jmp
test
jg
and
adc
in
and
ret
aad
rcll
lea
cmc
insb
push
xor
je
xchg
fstl
xchg
jg
in
pop
addl
pop
lods
aaa
mov
addl
cwtl
icebp
mov
rorb
mov
test
mov
and
mov
add
subb
test
pop
ret
out
or
icebp
loopne
rcll
mov
icebp
std
out
push
cld
stos
out
fimuls
or
and
sbb
repnz
mov
pop
xchg
adc
add
popa
ret
aam
add
inc
imul
xchg
sbbb
sbb
aam
push
push
shrb
inc
in
pop
inc
pop
lods
xchg
cli
popf
mov
add
mov
ss
inc
add
sub
clc
jecxz
push
xchg
or
lahf
jl
add
pop
call
push
out
or
mov
adc
sub
sub
test
scas
shl
xchg
cmp
adc
push
add
rolb
cmpsb
es
ja
nop
mov
dec
cmpl
loopne
loopne
dec
dec
popf
add
sbb
ret
mov
outsl
push
jnp
sbb
rclb
fwait
lahf
repz
mov
pushf
cli
adc
clc
sub
add
cli
adc
add
jae
jae
xchg
clc
jg
je
adc
pop
dec
inc
shlb
sbb
lret
mov
test
cmovbe
lds
inc
sub
pop
and
rorl
lcall
and
push
mov
lret
pop
std
mov
mov
adc
mov
lds
xchg
imul
pushf
mov
adc
mov
mov
cmp
xchg
rclb
and
movsb
out
inc
cwtl
fdivs
popf
mov
push
adc
fstpt
adc
in
int
mov
mov
pop
jge
push
mov
xor
adc
rep
arpl
mov
js
aaa
clc
jle
push
sbbb
cmpsb
mov
mov
test
popf
sbbl
popa
jle
popf
rol
jg
mov
adc
loope
mov
cmc
aaa
cltd
dec
in
lcall
mov
lods
jecxz
or
and
pop
or
add
mov
mov
bound
lock
mov
sbb
mov
cmp
jl
nop
pusha
andb
dec
lcall
shlb
and
add
sbbb
scas
int
ljmp
lock
mov
mov
je
aas
rcl
and
lods
jmp
jmp
sub
or
dec
std
mov
adc
test
add
sarb
sar
sub
inc
push
aam
adc
ds
pop
fildl
cmp
xchg
or
jo
pop
pushf
fidivrl
scas
shlb
xchg
test
incb
jg
lds
mov
fmuls
jb
icebp
dec
inc
inc
stos
in
dec
jl
mov
mov
movsl
js
cli
sbbb
inc
les
lcall
add
lds
jmp
ljmp
mov
or
ss
into
addr16
push
push
fcmovb
jl
out
mov
in
cwtl
fisubs
push
dec
shlb
push
sbb
push
cltd
pop
decl
pop
push
sbb
dec
xchg
or
sarb
sub
xchg
flds
ficomps
std
shll
call
orl
lret
sbb
xchg
sbb
lret
test
cmp
mov
test
stos
sbb
dec
xor
loop
cmp
inc
sti
call
ret
movsb
xchg
or
scas
adc
xor
hlt
into
mov
cmp
sbb
stos
out
push
mov
loopne,pt
rcrl
sbb
push
ja
inc
out
orl
mov
data16
ret
jo
add
sbb
xor
sbb
lock
rcrb
inc
out
stos
inc
pop
stos
xor
enter
clc
or
jmp
mov
mov
pop
push
dec
dec
bound
movsb
dec
nop
xor
aad
inc
int
clc
out
inc
sahf
ljmp
addb
mov
xorl
pushf
adc
sub
cli
mov
sti
push
sub
and
pop
or
call
pop
or
shll
lods
gs
pop
js
xor
loopne
fnstcw
nop
inc
mov
or
lret
in
mov
fldl2t
mov
shl
out
mov
xchg
mov
aas
xor
incb
lods
mov
daa
test
imul
inc
std
push
xchg
lds
pop
xchg
int3
popf
inc
mov
or
je
mov
rcrb
pop
out
aam
jg
sub
ret
stc
int
fimull
add
and
push
dec
mov
xchg
outsb
bnd
mov
ret
in
cmp
mov
idiv
jae
cmpsb
stc
sub
push
data16
pop
and
adc
addb
data16
test
call
std
inc
mov
test
pusha
adc
sbbb
movsb
insl
subb
xor
insb
mov
cli
jno
xor
add
insl
inc
hlt
push
stos
adc
sub
popa
jnp
push
xor
cmc
shll
imul
and
mov
pop
jge
loopne
scas
movsl
sub
push
sti
dec
sbb
les
bswap
imul
or
mov
jo
fcomip
les
rol
adc
mov
and
les
jp
shll
pop
nop
std
xchg
mov
add
push
pushf
mov
les
enter
or
test
lock
or
sub
and
loop
aam
mov
sbb
push
sbb
push
dec
stc
mov
js
loopne
add
add
jecxz,pn
jns
cwtl
jle
das
push
or
out
addr16
stc
add
pop
push
test
mov
mov
sbb
rorl
cmc
in
jo
lahf
xlat
or
out
inc
movsl
sub
cs
cld
xchg
rol
jge
enter
fcom
sbb
lock
xchg
sub
pop
dec
xor
inc
jg
fisubrl
or
rclb
xlat
push
test
outsl
call
mov
push
xchg
pop
scas
clc
dec
push
sub
rolb
push
int
xor
mov
aas
mov
andb
xchg
mov
insb
or
lock
into
and
add
lock
jne
mov
cli
and
pop
xchg
rclb
inc
cmp
in
movsb
test
loop
sti
inc
ret
es
sub
sarb
hlt
rclb
daa
fdiv
cli
ret
lahf
dec
rcrl
and
sub
mov
iret
cmpsl
jle
add
mov
mov
sub
mov
mov
es
sbbb
and
and
mov
pop
insb
add
or
add
and
and
jp
sub
shl
push
pushf
jne
push
adc
xchg
iret
pushf
sbb
mov
or
mov
mov
lcall
mov
or
pop
fwait
jl
cli
pop
mov
xorl
inc
sbb
pop
mov
pop
sub
and
dec
rorb
sub
mov
shll
lods
jge
and
shl
inc
loop
notb
or
out
pusha
jb
jb
sub
adc
dec
add
cmp
call
push
sbb
out
push
push
scas
push
xchg
push
xchg
repz
clc
and
pop
call
inc
sbb
orb
cs
pop
leave
mov
jmp
testb
sbb
test
outsb
pop
mov
adc
clc
and
jp
xchg
or
inc
aad
cld
adc
dec
mull
cmpb
cmp
loopne
aas
lods
fimuls
xor
pop
or
dec
cmc
stos
or
cmpsb
icebp
xchg
inc
inc
jnp
icebp
jae
jg
or
sub
test
pop
fs
xchg
lods
pop
fsubrp
test
add
or
call
mov
pop
add
in
rcll
pop
adc
hlt
loope
aaa
lock
pop
cmp
fdivl
js
jecxz
adc
loope
and
lds
or
push
mov
movsb
stos
xchg
inc
in
inc
mov
divb
jae
sub
mov
adc
nop
inc
push
sub
push
jl
orb
dec
push
jecxz
repz
and
mov
push
dec
dec
and
pop
call
cmpsl
push
xchg
pop
inc
jns
ss
adc
call
scas
sub
repz
xor
push
pop
inc
sub
fmul
push
loope
cmp
lret
xor
sub
mov
ret
subb
dec
lods
pop
mov
cmp
movsl
test
pop
xchg
fsub
or
or
inc
lods
rol
pop
xchg
imul
pop
stos
shlb
nop
test
sub
adc
loope
adc
cmp
and
mov
cmc
popf
call
aaa
adc
aaa
icebp
rclb
popa
sti
sub
int3
mov
mov
pop
xchg
inc
rorb
pushf
les
pop
daa
push
sub
cmc
and
adcb
lcall
enter
mov
sbb
mov
sub
inc
jnp
sbb
or
cmpsl
add
inc
or
inc
pop
sbb
xchg
popf
cmp
xchg
mov
out
stc
mov
lods
js
jno
adc
loopne
mov
sbb
pop
xor
inc
inc
xor
nop
bound
xor
out
les
ror
daa
popf
data16
adc
add
fcomi
sub
add
sbb
jo
inc
xchg
pop
sub
lcall
jb
sub
cmc
push
pusha
add
jne
xchg
pop
imul
shlb
loop
mov
dec
adc
sbb
or
xor
shl
jle
add
push
xchg
or
xchg
outsl
pop
push
sti
cmp
pop
xor
lods
push
and
pop
stos
or
pop
or
lret
mov
inc
loop
fs
jl
inc
lret
addb
xor
inc
mov
dec
bound
inc
inc
fistl
cmp
xchg
aad
inc
push
sbb
xchg
mov
cmp
push
jecxz
jae
or
ds
cltd
xor
loope
adc
and
mov
mov
push
lods
fstps
push
cmp
mov
call
pop
add
lret
jmp
scas
lock
mov
add
notl
push
ret
add
cmp
dec
mov
je
xchg
adc
insb
clc
ljmp
cs
cwtl
lcall
xchg
sbb
or
shrb
xchg
data16
push
fdivrs
adc
data16
adc
push
or
mov
aam
or
cmp
mov
mov
loope
les
fucomip
pop
cmpb
flds
or
sub
das
sbb
dec
adc
pusha
add
in
shrl
jmp
enter
out
xor
dec
inc
inc
mov
add
pop
fidivrs
out
int3
inc
pop
ds
adc
adc
mov
pop
mov
and
jo
lea
xor
pusha
mov
mov
pop
jbe
out
inc
xor
rcrb
push
lock
sti
inc
movsb
daa
jecxz
enter
imul
std
lods
cmove
fdiv
adc
push
and
ret
cmp
jmp
jne
mov
or
cmp
dec
loope
gs
sub
fs
adc
outsl
xchg
test
repnz
pop
loop
xchg
js
adc
fld
pop
dec
fucomp
mov
outsb
sarl
ss
ret
pusha
lahf
addr16
add
stc
add
js
lahf
lahf
mov
push
int3
loope
lcall
out
insl
mov
sbb
clc
into
dec
cmp
push
and
daa
push
or
xlat
js
or
addr16
aad
sbb
jl
bound
lock
push
test
dec
sub
cmp
icebp
int
addl
adc
scas
lock
dec
ja
in
sub
xor
mov
data16
sub
add
jne
js
into
mov
jecxz
xchg
and
cmpsb
adcl
loope
imul
push
sub
test
js
lock
aam
push
aas
pop
mov
popf
cmc
cli
push
mov
pop
ficoms
clc
dec
js
sub
les
pop
jb
sbb
mov
pop
cld
ss
cmp
mov
ljmp
mov
aad
data16
nop
rol
push
lcall
rcrb
add
xor
jo,pn
mov
inc
or
sbb
mov
pop
adc
adc
das
pop
mov
gs
es
inc
pop
mov
imul
mov
dec
xor
inc
push
xchg
mov
add
add
testb
inc
rcrl
mov
cmpsb
xchg
xlat
js
nop
jmp
enter
jbe
mov
xor
or
fs
sti
xor
cmp
test
pusha
or
ret
cmpsl
pop
les
dec
lahf
mov
push
cs
ret
and
das
mov
and
lds
and
into
cmp
lock
mov
adc
rcrb
adc
outsl
adc
stos
add
sub
cmp
cwtl
popa
push
adc
in
aas
inc
xor
jecxz
bound
pop
fnstsw
andl
xor
xchg
shr
cmp
iret
daa
shrl
mov
jnp
mov
pusha
adc
fs
test
xchg
nop
ret
arpl
mov
and
jo
push
lds
mov
cmp
ss
inc
cld
lahf
orb
xchg
stos
les
loop
test
add
dec
fldcw
out
sub
popf
push
cli
cmpsl
popf
inc
rcll
add
rolb
inc
adc
dec
lds
shlb
sub
dec
sub
js
movsb
fs
mov
inc
std
adc
mov
cli
cmp
paddusw
dec
sub
xchg
jne
add
adc
lcall
loop
dec
mov
movsb
icebp
int3
test
dec
add
fs
out
sbbb
pop
cmp
in
rclb
xor
xchg
mov
pop
jbe
sub
pop
adc
mov
push
push
in
mov
add
push
sbb
imul
int
or
mov
dec
pushf
mov
jnp
scas
jo
add
in
pop
mov
xchg
insl
in
push
lds
lods
cmp
stos
cmp
inc
lods
cmp
loopne
gs
dec
imul
mov
arpl
decb
adc
xor
mov
add
outsb
sbb
lock
stos
jns
mov
icebp
xchg
test
lret
clc
sbb
pop
test
sahf
push
stos
lcall
divl
cmp
fwait
xor
pop
or
add
or
ds
inc
sbb
addb
inc
push
dec
cmpsl
mov
fs
out
mov
cmpsl
dec
cli
loop
pop
xor
inc
out
dec
addl
or
repnz
push
push
mov
les
jl
test
pop
push
loopne
jne
lret
sbb
nopl
push
clc
inc
mov
dec
or
adc
pop
je
xchg
cmp
arpl
dec
fcompl
or
loop
push
add
subl
shrb
hlt
mov
hlt
jp
dec
xchg
add
xor
xor
xor
xor
ja
mov
cmp
and
cmpsl
sub
ja
xchg
fbstp
jg
adc
mov
jecxz
cwtl
divb
cmp
lods
jmp
push
ret
flds
iret
or
lahf
or
push
lods
jg
dec
lds
and
repnz
inc
sub
jmp
push
iret
stos
lcall
and
lea
out
stos
xchg
push
sbb
adc
dec
fwait
mov
jle
insl
fisubs
mov
gs
ret
xchg
sub
mov
mov
mov
pop
adc
jne
fidivrl
push
int3
hlt
push
adcb
inc
out
sbb
mov
jae
addl
cmpsl
dec
cmp
add
push
push
push
cmp
pop
shlb
int3
mov
inc
rsqrtps
mov
clc
cmp
hlt
mov
xchg
push
fbstp
pop
lret
pusha
cwtl
adc
mov
inc
rcll
jo
ficomps
movsb
inc
cmp
mov
cmp
lea
and
nop
das
dec
xor
icebp
test
fnstsw
sbb
mov
mov
int
or
adc
pop
mov
adc
hlt
mov
xchg
mov
jge
mov
xor
xor
rolb
jle
packsswb
xor
xchg
xor
lret
dec
scas
daa
out
dec
pmullw
xchg
enter
cmp
fldenv
adc
or
dec
mov
iret
cmp
pop
out
push
ss
fdivl
add
mov
cwtl
pop
xor
andl
loopne
add
jbe
cmp
jo
xchg
out
sti
dec
push
sub
xchg
out
add
arpl
bound
jb
add
ror
lahf
or
xor
pop
jl
cmp
jmp
jae
and
and
mov
sub
mov
push
mov
or
adc
jp
pushf
nop
clc
pop
push
or
or
adcb
fildll
and
push
jl
cmp
cmp
push
ljmp
sbb
adc
push
das
pop
int3
popa
and
add
cli
sbb
mov
add
addr16
dec
mov
ret
xchg
inc
int
and
mov
stos
rcr
mov
adc
xlat
sbb
cld
xchg
jno
jl
or
mov
jp
in
xchg
icebp
icebp
sbb
loope
sbb
or
add
xor
or
sar
shll
xchg
xchg
pop
bound
movl
mov
xor
mov
rolb
xchg
jnp
mov
add
loop
mov
daa
out
inc
out
mov
les
inc
cld
push
popf
push
pop
jmp
pop
cltd
scas
mov
adc
or
adc
pop
loop
arpl
jecxz
sbb
sti
clc
insl
push
xchg
movsb
push
fwait
cmp
sub
xchg
cmp
cmp
hlt
stos
insl
jne
arpl
dec
mov
pop
insl
mov
cmpsb
sub
adc
mov
inc
pop
xlat
or
mov
int3
mov
orl
sbb
aad
js
in
sub
sahf
fs
mov
in
lcall
mov
or
xchg
pop
add
aaa
cltd
add
cmp
jmp
dec
jg
je
dec
pop
orb
les
dec
aaa
lcall
std
or
xchg
movsb
mov
mov
add
cltd
mov
pop
repz
aam
dec
mov
fcmovu
js
cmp
push
repz
filds
add
loopne
cwtl
cmp
add
and
test
cs
movsb
xor
test
cmp
es
aas
stos
push
push
imul
call
mov
cmp
push
mov
pushf
jge
or
inc
mov
out
push
jnp
or
dec
pop
adc
dec
shll
gs
js
fwait
out
push
pop
adc
stos
fdivrl
or
mov
sti
mov
lock
sarb
arpl
imul
and
mov
ljmp
and
jmp
add
aas
cmc
jg
or
jae
add
push
push
pop
jnp
pop
mov
and
mov
dec
push
sti
cli
lret
pop
cmp
scas
inc
cmp
movsb
jbe
insl
lret
mov
daa
push
loope
pop
push
push
adc
cwtl
loop
stos
pop
sub
or
push
aam
loop
mov
add
into
cmp
in
mov
or
sbb
sub
movsl
icebp
mov
out
pop
imul
rclb
jmp
xchg
and
inc
adc
fstp
inc
das
cmp
pop
cmp
and
dec
popa
jge
ret
push
aad
movb
subl
aas
rcrl
push
into
pushf
sub
push
jg
push
stos
sarb
pop
xor
sbb
sbb
push
and
inc
push
mov
inc
out
and
pop
popa
lds
and
mov
icebp
jmp
andl
xlat
sbb
frstor
mov
js
mov
aam
std
imul
push
cmp
inc
xchg
or
mov
pushf
testb
aaa
pop
lock
into
push
inc
jp
inc
dec
cli
mov
rclb
and
daa
mov
sbb
inc
mov
add
stos
xchg
cmp
aad
dec
inc
ds
aad
pop
stos
dec
aaa
outsl
ja
add
out
jle
pop
imul
dec
jne
or
divps
push
xor
cmp
pop
sbb
push
lea
add
std
cmc
push
sti
pop
fcoml
stos
sbb
ljmp
cmp
enter
pop
add
dec
push
and
hlt
iret
push
inc
adc
rcr
jl
cmp
ss
ret
mov
jnp
outsl
fcmovnb
cmp
inc
add
dec
lods
cmc
xchg
xchg
jno
dec
and
mov
cmpsl
sti
ror
addl
dec
js
imul
mov
add
xor
xor
vfrczsd
jecxz
xor
push
xor
mov
pop
aas
pop
jbe
data16
inc
lds
insb
and
xchg
lcall
inc
leave
dec
mov
add
scas
ds
leave
lea
mov
lahf
lahf
rclb
cmp
dec
adc
lcall
sub
mov
mov
das
inc
ds
jge,pt
out
mov
adc
mull
mov
jae
scas
pop
pop
arpl
mov
mov
jo
xchg
dec
addb
or
xor
pop
call
xchg
or
rcr
dec
push
cmpl
sbb
xchg
pushf
pop
push
push
cmc
scas
mov
jo
call
enter
mov
xchg
mov
sbb
jl
outsb
sub
dec
push
ljmp
hlt
xchg
push
inc
movsl
mov
mov
fiaddl
lds
dec
xchg
add
bound
lcall
lea
xor
push
decb
mov
cmp
or
xchg
mov
mov
in
jle
in
mov
xchg
cmpsl
fbstp
pop
xlat
into
test
mov
lret
push
mov
inc
and
in
aam
sub
sub
call
ss
bound
iret
or
add
and
mov
in
xor
cli
sub
je
push
insl
fs
sbb
xor
jb
mov
pop
and
in
fbld
xchg
inc
xchg
decl
add
cmpsl
push
clc
pop
pusha
jnp
and
mov
movsb
or
idiv
shlb
mov
and
fisubrl
aaa
call
and
dec
push
xchg
cli
adc
outsb
repz
or
dec
push
pop
movsl
jnp
and
outsb
mov
jle
jae
xchg
jl
sbb
je
xor
je
invd
cs
sbb
inc
movsl
xchg
icebp
jmp
into
sarl
shll
inc
in
inc
pop
out
cmp
insl
or
adc
inc
fs
adc
lea
sub
jle
lret
dec
mov
pop
add
xchg
cmp
dec
jne
rcl
sbb
ds
and
pop
xchg
sub
mov
faddl
rorl
mov
mov
rclb
ss
and
shlb
mov
inc
xchg
fildll
xor
imul
add
ret
mov
mov
sub
mov
sahf
jle
or
clc
in
xchg
lock
sbb
rorb
lods
fimull
loop
shlb
mov
pushl
inc
js
shll
ljmp
ficoms
adc
add
add
inc
sbb
push
addr16
inc
add
xor
and
aas
testb
cs
ljmp
cs
sub
ds
mov
push
mov
sub
lcall
push
cmp
cmpsb
lret
mov
push
mov
add
mov
push
lcall
shll
cmp
adc
jle
and
mov
sub
pop
icebp
lds
aam
mov
mov
sbb
test
inc
jmp
xor
adc
jmp
fimull
pop
pop
mov
sbb
dec
sub
cmc
icebp
mov
adc
jmp
pop
inc
push
imul
inc
popf
add
dec
or
mov
sub
dec
pop
sbb
icebp
pop
inc
push
pop
lock
sahf
and
push
and
mov
scas
stos
xchg
insl
xchg
test
sub
xrelease
icebp
add
mov
add
sbb
inc
sti
ss
scas
sub
jle
out
and
movsb
lret
dec
ret
stc
loope
adc
mov
mov
cmp
fmuls
lret
jbe
xchg
ret
in
fcompl
push
xchg
jge
adc
test
jmp
pop
jge
mov
shll
pop
lock
cltd
je
cmpsl
dec
push
in
dec
into
mov
rorl
mov
fstpl
daa
ret
int3
sub
sbb
int
stos
roll
mov
mov
loopne
or
or
mov
imul
adc
dec
pop
icebp
jge
adc
les
inc
lods
fs
scas
js
xchg
push
into
aas
and
insb
adc
out
mov
mov
adc
push
inc
add
gs
xlat
xor
mov
loop
mov
lea
dec
mov
adc
sub
mov
out
or
xlat
pop
xor
dec
adc
test
scas
hlt
mov
jo
push
sbb
jl
scas
shl
mov
inc
dec
adc
xor
dec
add
and
adcb
and
adc
rclb
cmpsb
les
push
mov
push
mov
ljmp
call
mov
leave
cld
add
nop
push
cmpl
inc
sbb
jle
mov
adc
insl
jbe
inc
mov
push
or
adc
bound
add
xchg
cmp
and
push
xlat
xchg
mov
mov
adc
pop
scas
aaa
sbb
inc
or
lcall
xchg
je
out
aas
push
sub
dec
subb
xchg
inc
push
mov
hlt
or
push
cmc
mov
lea
adc
fcmovnb
mov
fwait
lock
test
stos
loop
out
xchg
cmpl
or
sub
faddl
cmpsb
add
adc
jns
int3
dec
outsl
or
or
nop
add
pop
fisttpll
mov
sub
push
fcompl
push
test
inc
sub
push
mov
push
pop
cmpsb
sub
test
mov
pop
stos
cmpsb
sbb
ljmp
inc
sub
cmp
fsubr
mov
call
or
addb
lcall
loop
mov
cmp
push
mov
mov
xor
and
ret
push
xchg
loopne
loop
daa
cmp
fisubs
push
or
andb
and
repnz
dec
xchg
xchg
mov
imul
stos
pusha
inc
push
push
sub
lcall
mov
subl
xchg
out
or
mov
ds
mov
icebp
in
and
aaa
sub
inc
shlb
sarb
mov
in
sbb
add
push
movsb
jp
xchg
xor
cli
jmp
push
add
out
pushf
cmp
fadds
mov
leave
mov
and
sbb
adc
jle
cld
and
fcomps
jge
inc
cmp
sub
insb
jge
clc
rorl
lcall
cwtl
mov
jp
mov
flds
add
hlt
xchg
pop
add
add
dec
lcall
fcmove
daa
or
add
jge
push
fidivs
faddl
insb
test
sub
jmp
imul
bound
into
or
movsl
and
sbb
adc
std
pop
outsl
cwtl
aam
cmpsb
add
mov
iret
stos
adc
shlb
or
lret
cmp
pop
mov
and
xor
orb
inc
mov
sahf
dec
add
and
sbbb
movsb
es
xor
stc
out
das
fidivs
adc
subb
out
fsts
aas
inc
sbb
lods
mov
shlb
inc
or
stos
test
les
mov
xor
rolb
je
rcrb
mov
movsl
cld
mov
or
push
jbe
lock
pushf
rolb
out
movsl
mov
push
ljmp
arpl
cmpsb
and
jo
call
and
mov
dec
push
ljmp
test
cmp
add
aaa
pop
pop
push
pop
adc
jbe
fadds
add
push
stc
sahf
pop
pop
push
dec
fs
xor
cmp
dec
or
pushf
incl
loopne
ret
lods
adc
sub
cwtl
popf
in
leave
rcrb
and
cli
push
rolb
push
sbb
scas
cmpsb
cmp
cmp
loope
adc
mov
mov
pop
jae
mov
sub
sahf
lahf
cltd
fucomip
push
and
mov
gs
lea
sbb
push
xchg
sbb
mov
adc
dec
push
cwtl
mov
stos
ja
cmp
or
hlt
addb
mov
mov
popf
icebp
das
movsb
int
add
std
ret
sbb
jp
jnp
cs
or
iret
popa
sbb
pop
sbb
cmpsl
add
or
lret
pop
jno
cmp
xlat
nop
inc
inc
dec
cmp
add
add
adc
inc
pop
test
imul
dec
push
fs
icebp
daa
loope
cmp
ret
arpl
cmp
fsubrs
push
or
lods
repnz
pop
lret
mov
and
sbb
sub
dec
jo
lret
hlt
jle
ljmp
jb
dec
adc
fwait
sbb
inc
dec
pop
insb
dec
cmpsb
repz
xchg
aam
jnp
pop
jmp
movb
xor
jp
clc
icebp
mov
loope
jne,pn
outsb
pop
add
fisubs
loope
int3
inc
clc
mov
mov
push
push
and
xchg
sbb
xlat
bound
pop
pop
inc
adc
pop
fcomps
mov
xchg
pop
test
into
rclb
mov
adc
push
inc
inc
bound
movsl
push
cmp
mov
push
gs
and
dec
rcrb
ret
ljmp
dec
ud2
clc
mov
fs
xchg
andb
das
icebp
clc
loopne
lea
add
in
loopne
sti
jo
pusha
idivl
jge
cmc
fbstp
pop
mov
adc
cmp
neg
or
outsb
mov
mov
and
inc
pop
test
sbb
cli
orl
pop
push
fisubl
scas
in
mov
cwtl
jp
data16
ret
rolb
fstps
inc
lds
push
cltd
mov
arpl
add
ss
cmp
pusha
test
insb
mov
pop
inc
fucomp
pusha
jbe
jmp
mov
test
sub
call
jbe
fprem1
pop
clc
fs
cmp
mov
mov
or
fdivs
sub
or
xchg
ret
fists
add
inc
xor
xor
cmpsl
mov
inc
cld
dec
jmp
sbb
jg
cmp
add
mov
clc
and
mov
test
adc
jp
cmp
out
test
push
pop
movsl
in
jmp
xchg
dec
je
out
roll
bound
mul
pop
cmp
js
cmp
imul
sub
call
pop
out
adc
lods
pop
pusha
push
sahf
sbb
fbld
inc
bound
push
mov
mov
lock
sub
mov
cmp
push
nop
dec
push
mov
test
lahf
test
push
ja
and
ss
xchg
lock
lods
bound
jmp
outsl
clc
repz
fs
leave
pop
lock
xlat
and
test
maskmovq
negl
fcmovu
cmp
pop
loopne
sbb
rcrl
adc
loope
jo
aam
xchg
adc
stos
adc
inc
dec
negb
sti
xor
shrb
enter
adc
sbb
and
cwtl
js
inc
inc
call
inc
push
test
adc
pop
ret
pop
hlt
movsl
mov
ret
scas
mov
dec
stos
jg
rorb
jmp
cmp
mulb
cmp
orb
pop
enter
dec
lds
inc
jmp
jno
add
push
mov
movsb
mov
cmp
dec
xchg
shr
xor
jo
insl
add
iret
cmp
pushl
inc
jge
lret
es
push
sub
and
subl
js
sbb
lds
pop
adc
jnp
mov
mov
sub
pop
lock
sarb
cmpb
adc
and
pop
sarl
cmc
mov
push
je
mov
test
adc
test
dec
ret
or
mov
mov
mov
clc
pop
adc
adc
pop
dec
pop
insl
and
xor
ss
out
loope
push
add
rclb
or
push
or
add
xchg
ficoms
mov
adc
or
dec
push
outsl
mov
xchg
pop
add
dec
pop
adc
test
out
add
add
jne
inc
ljmp
sbbb
push
orl
push
jb
jo
lds
add
mov
ss
xor
cmp
mov
sbb
dec
xchg
jp
add
lock
scas
outsb
test
fsubrl
and
mov
push
inc
sub
enter
repnz
mov
pop
test
nop
mov
xor
mov
insb
jle
fcompl
popa
sub
sub
or
add
ljmp
shll
cmp
add
stos
mov
jo
mov
or
dec
or
inc
or
das
icebp
dec
ret
jmp
dec
and
mov
jecxz
icebp
subl
cmc
push
add
je
mov
inc
add
imul
dec
mov
mov
mov
mov
xor
nop
rclb
ss
mov
jg
mov
jo
mov
lret
or
dec
mov
fstl
mov
out
les
pop
sbb
sarl
in
dec
mov
roll
add
pop
jo,pt
scas
shlb
or
inc
push
jl
icebp
cmc
adc
je
cmp
and
mov
xchg
pushf
mov
sub
adc
fcomps
clc
xor
mov
xor
push
test
adc
dec
out
push
idivl
repnz
lods
addr16
sbbl
cmp
ficomps
dec
cwtl
push
or
mul
ja
mov
or
mov
inc
aaa
neg
push
inc
jns
jmp
xor
push
popf
sub
inc
into
mov
push
mov
lea
cmp
xchg
es
push
and
shr
adc
pop
sub
dec
ror
data16
jp
jle
addl
int
mov
shr
xchg
xchg
and
ror
xchg
addr16
xchg
movsl
mov
and
sub
adc
js
rcrb
mov
icebp
sbb
xchg
lods
pop
cmp
xor
dec
aas
out
pop
dec
and
mov
add
cs
sub
aas
cmp
sub
mov
add
cmc
or
aaa
arpl
pop
iret
mulb
mov
inc
mov
mov
loopne
sub
jmp
mov
jb
lods
loop
pop
mov
or
mov
inc
mov
mov
mov
pop
pop
adc
pop
mov
test
es
out
mov
stos
dec
addb
int3
xor
dec
sbb
dec
push
mov
dec
mov
sbb
stos
adc
or
movsl
filds
mov
add
sub
mov
sar
fcoml
sub
cmpsb
cmpsb
push
xlat
and
mov
pop
les
push
jg
ret
push
lock
xchg
xor
in
out
fisttpl
hlt
sbb
addb
movsb
sti
xor
lock
mulb
sub
xor
data16
test
sbb
sub
jecxz
loope
je
lahf
sbb
addl
lods
cmp
push
leave
sub
cmp
out
js
sti
adc
and
add
cmpb
dec
push
xchg
dec
ja
or
rcrb
adc
stos
iret
addl
aaa
cmp
xor
sbb
adc
sbb
bndldx
xchg
ret
and
mov
jnp
adc
sub
cwtl
mov
mov
mov
fnclex
jnp
inc
pop
fwait
data16
inc
add
cmp
adc
pop
mov
cwtl
cld
sbb
in
xchg
test
mov
xchg
mov
adc
mov
sbb
jp
xchg
cmp
insb
xorb
mov
inc
test
in
jmp
push
add
jl
out
pop
xchg
lock
xchg
cmp
jle
ds
mov
mov
cmp
sbb
hlt
lods
lret
cld
dec
jle
in
and
dec
add
mov
hlt
dec
push
mov
xor
out
lds
inc
adc
lret
out
negb
jge
test
fs
dec
mov
js
sbbb
sub
xchg
xchg
imul
xchg
cmp
dec
cmp
xchg
and
ljmp
in
add
jno
and
cmp
imul
xchg
lock
and
lcall
mov
hlt
pop
xchg
jmp
js
cmc
jne
push
jmp
xchg
stos
movsl
mov
and
icebp
jo
push
scas
aam
push
pusha
fsubrs
or
sub
fmuls
sahf
stos
adc
cld
outsb
fsubl
fmuls
dec
lcall
stos
stos
add
adc
pusha
test
pop
js
jnp
jb
lcall
or
mov
xchg
stos
mov
pusha
jge
add
stos
adcb
xor
adc
adc
or
mov
dec
outsl
xor
das
pusha
inc
add
lds
pop
jl
shll
and
arpl
into
lock
je
sub
movsb
les
loopne
testl
xchg
xchg
inc
stos
or
iret
ja
mov
std
dec
mov
xor
loop
and
lods
outsb
or
aas
sub
lcall
jae
add
adc
mov
cmc
mov
add
sub
ret
insl
mov
into
adc
shll
push
cli
cmpsl
sahf
sbb
pop
pop
dec
int3
dec
mov
lahf
xchg
mov
shll
jbe
int3
fnsave
outsl
fstl
mov
into
pop
out
push
mov
ss
or
decl
std
jb
ja
ljmp
dec
clc
push
scas
mov
xchg
fs
sub
and
rolb
push
ljmp
rcrb
pusha
scas
mov
scas
dec
mov
add
sbb
xor
fistps
les
call
repz
ss
arpl
mov
aam
sbb
cmc
hlt
add
lahf
bound
ja
js
daa
and
add
xchg
sbb
or
mov
sbb
push
shlb
sub
out
adc
push
mov
adcl
and
add
lds
arpl
jns
ss
or
sahf
iret
push
push
je
out
cmp
rorl
mov
add
sti
lea
jae
ficompl
cmc
ja
jb
sbb
lods
cmp
sbb
movsl
pop
xchg
ja
mov
jle
in
call
es
movl
mov
mov
ja
jo
and
xor
in
fdivs
test
loope
jne
adc
test
jno
ss
cmp
xchg
adc
inc
in
test
ret
movsl
mov
sbb
les
mov
rcrl
outsb
dec
rolb
mov
movsl
or
ret
jns
pop
jne
add
loopne
andb
lret
clc
add
inc
shll
popa
lods
clc
jmp
push
lcall
adc
push
or
cmpsl
les
test
sbb
enter
aaa
mov
mov
nop
or
push
lock
pop
cmp
and
ret
add
mov
pushw
mov
idiv
leave
xor
icebp
pop
mov
xlat
iret
jns
push
insl
cltd
into
ds
stos
std
aam
pop
or
mov
push
repz
flds
inc
insb
cltd
fs
aad
es
dec
xlat
cmp
fcomps
mov
inc
sti
pop
in
sub
pop
cld
lret
aas
clc
pop
inc
mov
es
mov
lahf
and
inc
in
jmp
popf
es
call
sub
cmpsb
xor
test
dec
xchg
fstps
jl
jmp
int3
inc
jge
insl
adc
popa
rcr
inc
sub
push
out
adc
clc
push
ds
push
add
and
push
xor
data16
adc
jecxz
ja
dec
mov
mov
sub
or
pop
push
imul
push
pop
pop
sbb
jge
movsb
jae
rcrb
call
jmp
nop
outsb
add
or
and
adc
mov
add
insl
mov
jmp
inc
inc
fdivl
bound
lods
mov
movb
or
in
dec
outsb
test
hlt
mov
cs
sub
sbb
cmp
inc
push
xchg
fs
in
stos
cmp
psllw
mov
mov
sub
mov
or
popa
sti
sarl
repz
js,pn
ret
push
popa
aaa
shrl
sbb
xchg
sbb
and
movsb
mov
lret
pop
cltd
cli
lea
mov
cmpsl
bnd
mov
shlb
in
dec
mov
adc
clc
add
and
inc
sbb
sub
dec
sbb
pusha
dec
pop
pop
jns
inc
sar
and
jno
imul
jecxz
in
inc
and
adc
inc
les
test
adc
test
call
add
inc
xchg
push
mov
stos
xchg
xchg
adc
scas
imul
mov
adc
mov
ljmp
push
lds
aas
push
pop
add
repnz
jp
outsl
icebp
in
gs
in
fs
adc
add
jbe
lds
loopne
dec
inc
and
cli
mov
cmc
jecxz
xchg
mov
outsb
push
jnp
insb
insb
movsb
outsb
lds
xchg
mov
pop
leave
clc
in
js
iret
into
in
pop
or
mov
out
mov
or
or
adc
daa
fstpt
gs
icebp
call
out
lods
cli
adcb
jo
xchg
clc
sub
das
imul
fnstsw
adc
rclb
mov
or
into
pop
and
cmp
sub
mov
mov
cli
inc
sahf
mov
xor
mov
add
and
decb
shll
add
or
rcr
sbb
adc
cld
mov
outsl
push
cmpsb
dec
ljmp
xchg
movsl
scas
shrb
pusha
add
mov
push
dec
es
pop
ja
lds
sbb
xor
fildl
pop
xor
ljmp
rcl
push
pop
orb
xchg
adcl
push
shl
pop
jg
fnstcw
push
ljmp
mul
test
jo
mov
mov
inc
les
pusha
popf
imul
inc
pop
fstl
mov
rorb
xor
data16
addr16
mov
frstor
dec
test
mov
inc
pop
cmp
inc
lds
js
lahf
xchg
push
inc
mov
sbb
andb
pop
lcall
adc
or
push
or
test
mov
sbb
incb
ds
sub
dec
dec
xchg
cmpsl
rol
inc
push
mov
mov
xor
dec
mov
and
pop
mov
xchg
xchg
lahf
inc
in
mov
lds
dec
ss
les
jo
sub
add
dec
mov
adc
jge
xlat
loopne
cmp
mov
cmp
icebp
adc
adc
adc
dec
js
icebp
lds
jecxz
sbb
mov
lahf
adc
push
daa
adc
xchg
sub
xor
push
inc
loope
es
loop
fdivr
daa
mov
in
test
adcl
mov
sahf
cmc
rolb
icebp
push
enter
jg
mov
dec
scas
xor
ret
sbb
jp
cmp
push
sub
test
push
sarb
dec
mov
or
dec
sub
arpl
xchg
cmpsb
push
xchg
mov
clc
mov
ljmp
pushf
inc
push
mov
mov
jmp
or
add
scas
lods
fdivl
fadd
add
test
sti
sub
mov
jne
aad
in
fdiv
inc
test
testb
pop
pop
lods
xchg
cmc
out
mov
pop
mov
les
movsl
sbb
mov
ds
xor
in
imul
clc
inc
fcomps
and
movsl
into
ja
inc
push
fadd
dec
rcrb
pop
or
xlat
push
pop
cmpsb
repnz
std
pop
ljmp
repnz
sbb
scas
orb
icebp
aas
push
push
pop
jp
hlt
dec
jle
gs
sub
iret
nop
add
sub
test
out
jno
ljmp
xor
stc
add
pop
add
push
jmp
fistpll
daa
icebp
lock
daa
test
and
add
pop
jg
enter
cli
mov
gs
mov
jo
ja
jecxz
mov
mov
lret
std
test
pop
xchg
mov
jo
test
mov
cs
or
into
xor
shlb
mov
push
push
dec
sub
adc
or
xor
mov
out
mov
mov
mov
popa
std
sub
dec
add
sbb
and
or
sub
lods
call
movsb
add
orl
mov
bound
subl
shlb
cs
mul
cmc
jo
xchg
addr16
cmp
or
lock
inc
push
rorl
incb
popf
insb
xor
or
jge
sbb
inc
or
inc
pop
adc
popa
xor
and
adcb
test
mov
mov
mov
hlt
ffreep
xor
mov
mov
mov
cld
lret
pop
insb
xchg
je
incl
xchg
or
xor
push
sub
jbe
add
mov
inc
sbb
out
packssdw
out
sub
mov
push
jle
xlat
pop
sbb
and
repnz
data16
lea
mov
and
insl
jg
or
pushf
cmp
mov
add
outsb
stc
cmpsl
divb
add
adc
pop
xchg
mov
jbe
lods
inc
insb
inc
loopne
enter
and
ds
js
push
and
pop
or
lds
mov
dec
ss
sub
ss
push
lret
filds
pop
fidivs
fldt
in
jg
push
jo
pop
sbb
add
test
mov
mov
jle
hlt
cli
jmp
or
add
sbb
pop
imul
loopne
cltd
mov
ret
shrb
scas
cmp
xchg
leave
or
sbb
pause
cmp
jno
ret
mov
nop
je
scas
adc
mov
mov
mov
mov
sarb
jbe
xchg
je
push
enter
sub
scas
es
mov
loopne
cmpsb
mov
push
js
stos
mov
and
jnp
mov
inc
push
nop
sub
add
fcoms
mov
leave
dec
shlb
popf
or
outsb
outsb
cltd
adc
xchg
dec
fwait
sbb
sbb
add
scas
mov
push
pop
cmc
loopne
movsb
jp
test
adc
data16
je
andl
popf
xor
es
icebp
add
and
jns
mov
fstps
adc
push
inc
ficoml
mov
test
pop
cmp
rolb
add
jns
insl
sub
call
push
incl
daa
mov
mov
add
lock
addr16
cltd
arpl
and
push
dec
mov
cmpsb
mov
popf
dec
adc
rol
mov
and
outsb
mov
lret
cmp
dec
mov
mov
lds
shlb
nop
outsb
xchg
ret
subl
inc
daa
data16
in
imul
xorb
test
dec
in
out
mov
adc
jo
stos
mov
icebp
cmpsb
adc
or
push
jmp
sub
je
push
or
mov
xchg
aas
adc
jp
push
dec
jb
mov
shr
or
and
sarl
xor
push
lea
sbb
sbb
xchg
jmp
fnsave
mov
rorb
popf
add
mov
add
inc
mov
pop
test
xlat
loopw
js
int
adc
js
loopne
lock
adc
adc
jp
pop
jecxz
inc
cli
push
or
pop
shlb
shrb
cltd
rorb
aaa
mov
stos
cmp
xchg
sbb
inc
cmpsb
pop
mov
not
mov
js
sub
imulb
add
js
cmpsb
push
fimull
out
or
shlb
mov
lahf
stos
cmp
sbb
dec
ja
cmp
or
cmp
sub
mov
inc
sbb
xchg
sub
fsubs
add
ficoms
imul
pop
movsb
sub
pop
call
das
adc
inc
dec
cmp
sbb
test
imul
xor
ss
les
clc
and
inc
add
adc
jne
inc
adc
cmpsl
imul
mov
and
or
loop
je
dec
mov
stos
loopne
add
xor
adc
sbb
loop
sub
mov
add
shl
mul
roll
lock
iret
test
cmp
jg
aas
add
sub
sarb
cmp
push
pop
add
jecxz
mov
xor
dec
lds
out
mov
cmpb
and
in
sub
cmp
xor
adc
jne
push
add
lcall
cltd
test
insb
test
bound
out
cltd
test
imul
pop
les
pushf
sub
add
in
dec
xor
in
mov
in
ret
rolb
fidivrs
arpl
aas
ss
test
jbe
lea
pop
ss
mov
pop
push
adc
jge
sub
mov
jno
or
lock
test
mov
jo
outsb
popa
xor
hlt
add
xorb
out
push
ss
js
inc
xor
aam
sub
adc
cld
or
insb
jge
jns
mov
in
push
jle
lcall
ds
cmp
xor
xor
test
adc
movsb
and
call
repz
mov
jecxz
inc
pop
je
ret
add
pop
out
stos
hlt
push
adc
dec
push
push
mov
sbb
das
mov
js
adc
cmpb
sbb
sub
dec
mov
xor
push
cmpsb
inc
dec
mov
pusha
rolb
add
mov
push
fisttps
mov
xchg
add
pushf
ret
push
int3
sbb
and
hlt
fistl
ds
mov
cmp
in
inc
outsl
mov
scas
xchg
mov
fs
adc
aam
sbb
xchg
mov
test
and
fwait
pushf
xchg
or
movsl
adc
mov
jnp
dec
fs
mov
jmp
subb
inc
daa
fimull
in
adc
pop
out
icebp
arpl
sbb
mov
adc
insl
cmp
mov
testl
dec
or
and
add
xchg
xor
dec
lds
or
jle
sub
mov
test
movsl
adc
sub
pusha
xchg
jmp
lods
cmpsl
xchg
inc
enter
in
out
test
out
aam
xor
adc
rcrb
xchg
scas
popa
mov
repnz
pmaxsw
std
neg
cltd
clc
mov
inc
pop
sti
sub
push
mov
clc
xchg
jmp
addb
sub
xchg
jmp
ljmp
icebp
and
rcrb
ja
jne
cmp
ror
mov
int3
test
das
cmpsb
jb
mov
call
pushf
jmp
mov
jnp
cmp
push
test
inc
cmpl
imul
icebp
push
push
stc
insb
movsl
int3
jle
and
sub
fcoml
cmp
es
cld
inc
insb
adc
and
cmpsl
daa
mov
dec
std
add
jae
push
imul
push
stc
test
or
data16
sub
adc
test
xchg
jmp
or
pusha
xchg
inc
jle
es
ljmp
cli
and
or
rdmsr
mov
popa
jb
inc
mov
xor
not
mov
and
adc
sbb
loope
mov
push
xor
js
sbb
icebp
into
pop
jge
sbb
nop
test
inc
pop
mov
and
repz
mov
cmp
or
sbb
mov
test
stos
push
mov
es
in
aas
add
daa
sub
and
xor
mov
jb
lret
pop
sbb
inc
mov
inc
lret
aas
or
adc
mov
adc
pop
test
jge
cmp
mov
je
inc
push
lds
test
cmpsl
dec
jp
rcll
cli
sbb
xchg
insl
lcall
pop
hlt
pop
adc
inc
or
or
test
pop
add
jl
fwait
inc
sbb
pop
dec
inc
cmp
scas
mov
cmpsb
insb
in
inc
mov
nop
mov
bsr
mov
js
sbb
adc
mov
stos
xor
cmp
les
orl
mov
pusha
test
push
pop
frstor
test
loopne
out
adc
jb
aad
mov
jl
or
ss
or
lar
adc
push
les
loope
addr16
sahf
aad
jecxz
xor
sub
fadd
mov
mov
jle
outsb
jp
je
ror
jbe
xlat
xchg
shll
and
pop
mov
lods
call
orb
call
sub
or
test
sbb
jo
push
dec
aam
cwtl
sub
mov
mov
sarb
sub
push
jle
add
dec
neg
sbb
test
lock
jmp
or
dec
les
mov
ja
sub
mov
adc
adc
push
or
sbb
js
jge
and
pusha
cltd
adc
push
mov
jmp
roll
andb
les
dec
ret
mov
int3
mov
out
xchg
cmp
pop
inc
out
lret
push
fstpt
loop,pt
sbb
lret
adc
bound
jp
insl
int3
mov
xor
adc
nop
inc
test
mov
pushf
int3
repz
js
cmp
test
adc
subb
mov
pop
xor
dec
xor
pop
xor
xchg
mov
mov
call
mov
or
mov
dec
cs
inc
mov
xchg
adc
and
dec
mov
inc
imul
es
pushf
push
insb
adc
ss
push
cmp
xor
or
fcoms
jbe
sbb
hlt
sub
ja
jno
adc
pop
mov
xor
cmp
pop
sbb
add
adc
stos
in
test
scas
inc
test
and
das
movsl
xchg
push
gs
lock
loopne
jmp
or
xor
jecxz
cmp
cld
aad
js
push
dec
xor
insb
add
adc
push
jg
pop
cs
stos
push
test
std
das
pushf
dec
mov
pop
xchg
lret
dec
adc
hlt
pop
scas
stos
pop
enter
fs
es
sbb
clc
lcall
mulb
iret
sbb
loop
data16
stos
xor
test
jl
popl
fs
pop
cld
add
inc
in
clc
stos
nop
or
out
enter
xchg
test
popl
ljmp
andl
inc
sub
test
inc
adcb
and
data16
out
int3
icebp
add
adc
test
fdivrp
icebp
mov
jl
dec
add
and
push
mov
mov
xor
and
cmpsb
fdivl
mov
or
add
insl
add
lret
add
xor
push
xchg
adc
cmp
adcb
xchg
pop
fs
sub
xlat
mov
mov
das
sbb
cmp
dec
mov
cmp
ds
inc
aad
jb
xor
call
or
sub
int
mov
out
xchg
roll
call
xor
sbb
test
or
mov
fisubs
sbb
aaa
aad
inc
jne
pop
gs
fdivs
push
xor
repz
orl
xchg
out
mov
inc
push
ja
and
lea
outsb
sbb
push
popf
insl
dec
int3
mov
pop
mov
out
sbb
jno
cmp
std
cs
fs
pusha
rep
sub
rclb
mov
cmpsb
add
sbb
inc
inc
lods
jo
mov
xchg
sub
mov
mov
pop
hlt
lret
dec
sahf
cmc
mov
adc
pusha
ja
jbe
sub
fs
fisubrl
inc
mov
push
mov
sub
sbb
push
push
add
sub
fildl
xchg
aam
je
cmpsb
add
mov
das
repz
and
imul
push
or
jge
rorb
jmp
mov
lea
inc
fsubs
orb
cmpsb
ss
push
pop
pop
inc
cmp
mov
sbb
or
mov
test
shlb
ja
push
popf
inc
push
or
lcall
adc
inc
mov
jb
les
mov
lock
lahf
enter
mov
push
and
jmp
pop
ret
sbb
cmc
sub
fildll
sub
inc
aam
pop
data16
push
jne
push
data16
xchg
xchg
ret
les
out
fs
xchg
int3
ss
test
adc
outsl
inc
inc
push
lods
mulb
sbb
cmp
pusha
loop
inc
sbb
lock
jecxz
daa
loopne
push
sbbl
or
aad
sub
fdivr
jb
add
int
aad
adc
movl
cmp
sbb
xchg
js
lret
cld
and
mov
pusha
xor
adc
js
call
inc
test
mov
sub
test
insb
mov
xor
mov
inc
test
adc
xor
dec
xor
fimuls
mov
lcall
inc
adc
out
cmp
inc
adc
lods
push
jmp
rcl
lcall
inc
lods
mov
cmp
popa
nop
and
jo
adc
xor
lcall
cld
pop
dec
lock
into
outsl
repz
bound
pop
in
cld
shrl
and
std
mov
dec
cld
add
xchg
bound
imul
add
lahf
push
scas
mov
sar
inc
cmp
add
xchg
popa
adc
aad
or
inc
xor
stos
inc
scas
mov
ret
lret
fstpt
xchg
inc
in
or
mov
aas
shl
push
adc
adc
push
xchg
adc
or
jg
mov
xchg
mov
test
nop
sbb
orb
xchg
xchg
call
sbb
push
mov
push
jne
mov
repnz
test
cmp
add
rcrl
daa
sub
inc
push
push
or
or
ret
sbb
in
stos
cltd
jp
test
sbb
mov
pop
cmc
lahf
and
cmpsb
mov
xor
mov
subb
fdivr
inc
stos
inc
mov
jns
sub
out
mov
nop
jo
jae
sbbb
push
sbb
mov
or
sarb
add
mov
test
lahf
subb
push
xchg
outsb
add
test
rclb
push
das
pushf
cmpl
mov
pusha
ss
and
jle
fwait
insb
xor
call
or
add
cmp
ret
and
cmp
or
pop
pusha
inc
push
pop
and
addb
aaa
push
imul
pushl
fimull
int3
sbb
cmpb
scas
daa
pop
xchg
pop
mov
sbbb
jmp
pop
sbb
adc
xor
jbe
sub
mov
sti
cmp
mov
adc
push
dec
add
push
ljmp
sub
xor
push
int3
sbb
std
in
stos
or
inc
rcl
add
sbb
cmp
add
call
call
adc
mov
mov
mov
lret
les
xlat
pop
in
sbb
cld
push
out
add
cmp
clc
divb
popa
pushf
lock
dec
pushf
into
dec
fwait
sbb
cmpsb
fcomps
outsb
mov
cmp
test
in
popf
cmp
out
sub
sahf
adc
fmull
and
popa
movsl
addb
pop
notb
pushl
ljmp
in
lods
movsb
jl
push
popa
push
in
aad
clc
cld
pop
or
dec
pop
mov
shlb
mov
mov
icebp
adc
sti
sub
adc
hlt
pop
or
or
dec
fnstcw
fmuls
cld
addb
fwait
cli
shll
gs
cmp
add
dec
jmp
xchg
sbb
cvtps2pi
inc
pop
sbb
jns
cld
jo
ffree
faddl
loope
ss
dec
dec
or
sub
ret
and
sbb
ficoms
aas
jns
and
xchg
inc
test
mov
or
jo
enter
push
pop
lcall
lahf
sbb
daa
inc
pop
sub
mov
iret
inc
or
cwtl
lock
imull
cltd
sbb
sub
sub
fs
or
inc
jle
push
push
mov
cs
ret
and
inc
in
cmp
cli
pop
cli
loope
mov
loopne
hlt
pop
pop
call
popl
add
mov
and
mov
pop
mov
loop
fnstcw
push
xor
adc
mov
cli
popa
insb
jbe
jl
loope
nop
scas
and
jno
faddl
push
iret
or
roll
fwait
sbb
mov
sbb
fildl
cli
push
xchg
adc
sub
cmpsl
and
mov
sbb
mov
push
adc
sbb
adc
shrl
pop
push
bound
add
xchg
jle
clc
adc
xor
sub
pop
shrb
dec
push
in
cwtl
jecxz
lret
jb
out
pop
mov
pop
lds
push
mov
dec
bound
jno
jle
xchg
mov
cmpsb
sbb
push
rcl
push
or
rcl
cmp
push
outsb
stos
pushf
jle
ds
decl
pop
xor
jae
mov
or
inc
cmc
sbb
mov
jecxz
push
push
xchg
pusha
sbb
test
cld
adc
pop
lcall
pop
or
push
or
notl
test
cmp
jecxz
mov
dec
mov
outsb
cld
test
movsb
xor
or
mov
cmpsl
add
je
dec
mov
test
or
je
dec
jne
aam
push
adcl
lods
rolb
fistpl
adc
jecxz
outsb
movsl
adc
dec
std
testl
jp
cs
leave
cltd
lods
outsb
sbb
cs
push
xchg
scas
mov
xor
aam
dec
sbb
jp
or
ja
aam
ds
sbb
popl
jo
push
sbb
push
push
and
popa
and
push
dec
mov
das
or
out
mov
aaa
je
pop
pop
fld
dec
es
or
or
divb
inc
jb
fs
cmc
or
xchg
and
jge
jl
loopne
pop
mov
add
loop
mul
sbb
test
mov
arpl
outsl
dec
sub
pop
add
jecxz
push
notl
inc
add
xor
push
ljmp
xchg
or
and
sub
xor
push
pop
loope
mov
fldl
jns
loope
cmpsl
push
cmp
loopne
mov
fwait
sub
inc
cmp
mov
daa
mov
sbb
or
iret
popf
mov
pop
mov
test
testb
shrl
mov
jmp
sbb
push
daa
mov
mov
add
mov
cmc
push
andl
pop
jns
adc
rcll
roll
scas
inc
mov
sbb
loopne
into
rolb
pop
mov
push
aad
add
sbb
add
mull
cmp
inc
push
clc
cmp
insl
movsl
mov
sbb
mov
mov
dec
insl
push
testb
mov
aam
test
cmp
test
sub
and
mov
jg
jmp
pushf
mov
lds
sbb
mov
mov
or
cmpsb
negl
push
and
lods
sub
loope
jo
leave
xchg
adc
shl
sub
popf
add
lea
add
inc
mov
int3
idivb
jl
and
cmpsb
adc
imull
rclb
jb
fwait
cs
js
fistpl
dec
mov
into
aad
inc
push
ficoml
fadd
pushf
lods
sub
and
adc
dec
xor
mov
xchg
inc
pop
mov
stc
fldt
sub
lret
ss
mov
mov
loope
cmp
cmp
or
xor
loop
test
shll
and
ds
sub
ds
mov
adcb
fs
icebp
gs
sahf
pushf
fiadds
dec
push
leave
je
loope
rcr
or
daa
in
iret
ret
mov
mov
clc
stos
inc
xor
lcall
dec
dec
sbb
and
sbb
push
and
sub
or
sbb
cmp
sarb
add
jmp
fisubrl
es
push
inc
imul
jg
dec
sbb
stos
mov
mov
add
inc
dec
addb
into
cmpsb
mov
mov
mov
and
mov
push
mov
test
loop
adc
mov
push
mov
loopne
test
ljmp
jle
sbbb
insb
push
inc
subb
mov
shlb
std
dec
dec
insb
cmp
das
mov
fwait
add
insl
pop
sti
andl
xchg
pop
dec
cmp
sub
test
pop
inc
mov
lret
jp
add
cmp
mov
mov
insb
and
loop
aas
jp,pn
dec
mov
or
imulb
in
sbb
mov
stos
xor
cmp
push
movsb
xor
jp
mov
xlat
inc
fsubrl
aam
rolb
push
sub
out
or
pop
pop
ret
sbb
mov
int3
pop
arpl
jle
cmpb
mov
bound
sbb
mov
inc
in
cs
insb
xor
mov
pop
ja
jb
outsb
push
fldt
push
hlt
out
test
pop
sbb
sbb
ret
pushf
test
dec
insb
enter
mov
pop
jge
popa
stos
and
and
nop
in
inc
and
data16
aaa
adc
je
pop
push
fsubrs
mov
cmp
sub
cmc
data16
arpl
inc
pop
dec
outsb
xchg
jbe
xchg
cs
sub
lds
adc
push
lcall
in
push
xor
xlat
ret
push
outsb
outsb
outsl
sbb
sbb
stos
add
inc
repnz
pushf
mov
mov
nop
cmc
aas
pop
sbb
aas
add
mov
fsub
btc
sbb
fwait
jo
and
sbb
jo
sbb
inc
cmp
xor
mov
mov
add
lock
cmp
aad
sahf
stos
xchg
jle
pop
inc
add
ficompl
ds
pop
je
and
andl
mov
jl
push
adc
jbe
add
icebp
sub
mov
dec
outsl
movsl
adc
pushf
mov
popf
jecxz
inc
cmc
and
outsl
push
pusha
hlt
lods
dec
aad
jne
jns
push
into
inc
and
popa
scas
icebp
or
jb
inc
mov
orl
pop
in
ljmp
cmpsl
mov
dec
jle
mov
pop
mov
call
xchg
addb
adc
int3
xacquire
neg
pop
jecxz
mov
test
or
cmc
push
push
push
int3
push
pop
cmp
movsl
cltd
cli
xchg
adc
adc
cmp
loopne
dec
inc
sub
ret
lods
rclb
in
inc
repnz
xchg
popl
loopne
dec
dec
mov
adc
jno
push
mov
ds
je
fisubrl
inc
mov
and
xchg
xchg
test
aas
add
push
pop
sbb
icebp
shl
jnp
jno
imul
clc
ljmp
or
js
adc
repz
mov
fisttpll
popf
out
call
dec
sub
push
mov
dec
sti
push
pushf
mov
orb
cmp
ja
push
scas
insb
sti
in
daa
sti
xor
icebp
push
aam
pusha
or
dec
popa
je
sbb
movsl
pop
movsl
out
mov
fwait
jg
es
add
lret
fsubrl
jmp
mov
mov
mov
pushf
call
ds
cmp
xchg
sbb
in
push
cmpb
mov
and
fcmovbe
jle
nop
sbb
xor
cmpsb
xor
mov
sub
test
push
mov
sub
jo
mov
aad
filds
call
dec
sbb
mov
outsl
sbb
dec
jns
fdivl
or
sbb
push
push
in
and
ss
bnd
aas
mov
add
adc
push
dec
popa
and
inc
push
pop
aam
or
xor
mov
sub
add
rclb
mov
insb
inc
cmpsb
mov
mov
div
xchg
push
es
scas
xchg
popa
jl
clc
mov
ficoml
ljmp
out
mov
cli
sahf
dec
lret
bound
adc
ret
add
push
xchg
gs
aaa
xorb
xor
adc
mov
in
adc
pushf
icebp
push
jle
aaa
and
les
add
xchg
mov
clc
xchg
pushf
insb
mov
inc
aas
lea
std
inc
cmp
add
test
mov
dec
test
pushf
xchg
jmp
ds
clc
push
and
push
pop
dec
incl
es
mov
push
push
fisubrs
lea
pop
je
add
xchg
or
pop
push
pop
push
cmp
dec
or
mov
jl
push
push
xorl
inc
rorb
cmp
ficoms
pop
cli
loope
pusha
lcall
or
xor
in
xor
mov
jnp
dec
cld
ret
add
pusha
cmp
jle
or
bound
int3
das
rcll
bound
sbb
fidivrl
daa
out
insb
pushf
daa
cmc
mov
xchg
mov
push
jp
lock
mov
test
jp
dec
lock
dec
pop
pop
jp
in
add
add
or
xlat
insl
lds
add
ficomps
push
addb
jge
addb
aaa
shll
aaa
dec
or
add
xchg
in
gs
inc
nop
push
sbb
cmp
notl
xor
push
mov
jb
mov
cld
cmpb
pop
cmp
mov
sbb
cmp
into
std
xchg
fdivs
or
inc
ds
mov
xor
or
cli
jle
xchg
mov
call
loop
and
fwait
or
mov
into
data16
sub
push
cli
test
push
mov
adc
mov
mov
or
lods
push
pop
loopne
test
out
dec
cmpsl
fists
push
add
sub
cs
add
jecxz
or
xchg
push
mov
adc
xlat
xor
or
push
push
push
pushf
mov
dec
sbb
sub
add
push
pop
mov
push
lea
les
imul
sub
icebp
and
test
icebp
add
loop
mov
js
cmp
push
loop
xchg
adc
push
or
dec
push
xor
inc
fisttpl
jo
sbb
mov
push
roll
fcoml
sbb
dec
inc
mov
fcmovbe
rcrb
pop
cld
ret
in
into
call
in
jp
mov
mov
stos
imul
cwtl
repnz
das
sbb
lock
scas
repnz
mov
insl
stos
push
push
inc
xlat
loopne
xor
mov
lock
xchg
fisubrl
sbb
stc
mov
sbb
testb
das
cmpl
jp
dec
mov
cmp
push
add
push
mov
idivl
orb
or
adc
hlt
add
inc
ror
sbbl
loope
mov
sub
cli
mov
cld
mov
inc
mov
cld
aad
mov
xor
hlt
int3
dec
out
daa
jecxz
popa
dec
or
xor
in
decl
and
roll
cmp
mov
ljmp
ficoml
mov
mov
xor
push
cmp
add
test
inc
mov
mov
insb
insb
jp
cli
push
insl
mov
daa
pop
push
push
mov
ja
nop
scas
adc
mov
dec
add
andb
enter
fwait
add
data16
cmpb
stos
jle
push
jg
cmp
pop
loope
les
pop
scas
pop
mov
xchg
adc
pop
lock
inc
add
mov
sbb
adc
jp
or
incb
mov
sti
inc
test
dec
les
sub
push
jnp
shrl
mov
add
push
and
cld
cld
or
icebp
push
hlt
dec
mov
fisubrl
les
push
orb
clc
mov
xorb
test
add
or
xor
sbb
aad
push
js
push
mov
dec
lahf
xchg
pop
movsb
xor
lock
cwtl
mov
stc
call
push
mov
mov
stc
lock
or
sub
add
or
hlt
or
mov
and
mov
xchg
fmuls
pop
sub
in
data16
push
test
xor
push
out
cs
nopl
push
inc
mov
out
mov
inc
mov
cmpsl
xchg
mov
sub
and
lods
inc
mov
push
xchg
mov
jne
stc
cmp
and
loopne
sbb
mov
xor
add
test
test
xchg
nop
or
ds
lret
ljmp
das
xor
xchg
or
addr16
in
icebp
sbb
rcr
aaa
ss
lret
mov
dec
pop
bound
ret
sub
cmp
push
subb
fcompl
ficompl
leave
cs
jecxz
push
and
mov
test
mov
sub
fmulp
push
jb
cmp
orb
cli
sbb
pop
scas
insb
fmull
xchg
insl
mov
mov
clc
cmp
clc
int
out
shr
xchg
movsb
scas
sbb
clc
add
in
sahf
rcl
je
lret
pop
jge
in
cmp
cltd
clc
inc
test
ret
jno
add
sahf
xor
xlat
call
adc
push
xor
les
and
imul
add
sub
push
sub
adc
ret
and
jmp
int
fsubrs
bnd
push
lods
dec
jo
adc
iret
mov
and
dec
mov
cmp
add
lret
adc
and
sub
ljmp
push
sub
adc
mov
lcall
test
fdivr
or
shrb
scas
rorb
fsubrs
mov
lea
imulb
rolb
loop
pop
pusha
pop
inc
inc
mov
test
fstpl
mov
pop
jo
test
or
push
and
add
xorb
dec
std
xchg
out
ret
sbbb
cmp
and
les
arpl
mov
jecxz
jne
clc
movsl
rorb
mov
iret
mov
outsl
inc
mulb
push
sbb
inc
xor
imul
xorb
movsb
or
push
cmp
mov
xchg
xchg
xchg
test
push
rorl
fildll
mov
mov
aas
xor
stos
pop
inc
ret
sarb
mov
xorl
cmpb
sbb
adc
and
cmp
sbb
inc
nop
mov
jnp
clc
movsb
popf
std
sbb
or
cmp
push
add
cmpsb
and
mov
test
or
pop
dec
and
ds
mov
cmp
inc
and
aaa
cmp
int
cld
xchg
sub
imul
push
xchg
sti
aam
adc
stos
bound
adc
movsl
adc
add
dec
outsl
int
sbb
cmp
sub
mov
rolb
add
xor
dec
mov
das
mov
loop
movb
dec
mov
sub
ret
mov
out
pushf
test
push
shl
push
jl
or
adc
inc
lea
xchg
cwtl
ret
mov
add
mov
sbb
sub
cld
push
mov
sub
dec
pop
adc
fnstenv
imul
iret
xchg
lods
sti
add
or
out
cmpsb
pop
pop
and
sub
sub
xchg
sub
and
mov
add
fiadds
dec
ret
mov
inc
cmpsb
pop
adc
stc
leave
or
addl
mov
int
sub
push
xchg
out
mov
inc
ficompl
inc
arpl
or
es
mov
jno
mov
hlt
mov
cmp
mov
xchg
mov
pop
pop
inc
jl
fsubl
loopne
sahf
push
and
cld
loop
inc
sub
cmc
xor
or
jae
adcb
mov
jl
aaa
mov
cmpsb
jg
cld
bound
add
in
mov
fcoms
lcall
sbb
mov
int3
xor
mov
jecxz
push
mov
out
bound
pop
inc
pushf
and
mov
scas
cmc
xchg
mov
mov
xchg
in
fildl
cmp
jno
test
sbb
filds
jbe
loopne
xchg
aam
cwtl
es
pop
aaa
add
fsubl
mov
push
adc
and
mov
rcl
mov
outsl
and
push
inc
pop
lods
cmpsb
hlt
dec
jecxz
addb
movups
mov
and
mov
daa
cmp
cmpsb
sbb
and
sub
push
jmp
push
adc
or
adc
in
adc
push
mov
inc
adc
dec
mov
adc
add
je
test
or
repnz
lcall
dec
xchg
jl
shl
stos
inc
shll
jle
xchg
mov
jl
ds
ss
iret
jp
or
sub
sahf
xsha256
cmpsb
xchg
add
inc
dec
xchg
pop
mov
mov
pop
sub
push
js
jg
xor
arpl
cld
in
std
pop
das
mov
xchg
scas
xor
mov
or
das
mov
mov
dec
push
mov
aas
repnz
not
jns
lods
roll
mov
mov
xchg
add
push
outsl
push
movsb
push
mov
decl
icebp
cmpsb
call
out
mov
push
mov
push
stos
fs
mov
fildll
nop
lods
pop
push
stos
dec
cs
or
mov
int
decl
xchg
stos
adc
sbb
mov
push
stc
fs
xlat
imul
lcall
test
test
push
inc
loope
push
shl
in
push
subl
out
or
sbbl
scas
xor
fldt
scas
pop
xchg
sbb
push
es
ds
xchg
add
bts
cmpsl
xor
pop
imul
pusha
or
and
loop
mov
movsl
jae
std
push
sub
or
add
fsubs
lcall
or
mov
shlb
es
rsqrtps
inc
pop
hlt
mov
lods
aas
add
mov
mov
cmp
lock
fsubl
shll
add
sbb
das
rcrl
or
cld
nop
mov
test
mov
loop
fnstcw
repnz
imul
lahf
scas
xlat
in
push
adc
dec
pusha
cmc
jns
test
ret
mov
mov
loopne
or
inc
jge
imul
test
push
cmp
or
mov
cs
inc
aas
mov
jne
addr16
pop
call
in
cmp
cltd
sbb
mov
inc
ficoml
sub
cmp
mov
jno
xchg
jno
xchg
mov
jbe
jge
push
push
lahf
rclb
lahf
in
cmp
sbb
fwait
lods
push
sub
loop
pop
jp
sub
adc
loopne
fisubrl
push
adc
negb
mov
in
mov
loopne
repnz
xor
inc
decl
xorl
push
adc
pop
and
jbe
shlb
lds
add
mov
jmp
pop
addb
test
out
rcll
notb
outsb
sbb
xchg
mov
sub
inc
mov
inc
out
mov
loopne
scas
rcrl
sbb
fsubrs
add
mov
stos
ljmp
cmc
cmp
jp
cli
xor
add
xor
jp
add
inc
nop
sar
sub
push
cmp
fisubrl
jmp
mov
inc
mov
cli
cmpsl
enter
shlb
icebp
sub
hlt
out
xchg
loopne
mov
inc
mov
js
xor
iret
and
es
or
fwait
aaa
add
fidivrl
testb
leave
add
aad
out
cmp
or
inc
xor
jnp
and
lahf
ds
mov
rolb
jno
and
outsl
cmp
fsts
in
dec
add
cmc
lds
rol
insl
jmp
fists
xlat
dec
ret
repz
mov
cmpsb
and
ja
jno
or
sub
loope
adc
sbb
inc
mov
bound
cmc
mov
bound
aas
inc
jno
scas
xor
rclb
andb
icebp
rcrb
or
mov
add
sbb
push
cmp
scas
push
fs
inc
inc
and
lcall
lret
out
je
mov
jne
dec
lahf
add
xchg
jo
sbb
into
pop
sbbl
gs
and
mov
mov
mov
sbb
push
outsl
sub
push
fs
xchg
adc
scas
aam
xchg
add
insl
cs
mov
cmp
adc
pop
test
in
arpl
mov
cmp
les
or
dec
pop
dec
mov
outsl
dec
pop
mov
iret
mov
out
sbb
mov
aam
pop
fistpll
xor
cmp
xlat
mov
or
test
sub
loop
mov
pop
stos
seta
mulb
add
daa
mov
cli
push
cmp
rcl
adc
daa
pop
xchg
ja
mov
rol
cmpb
push
hlt
fsub
sahf
dec
das
mov
jb
mov
sahf
pop
cmp
dec
lcall
ja
addl
je
enter
pop
daa
cmp
aam
syscall
jl
icebp
cmp
mov
or
sbb
stos
fsts
jns
cwtl
in
loopne
dec
gs
add
cwtl
sub
in
jnp
sub
fsubrs
jne
lret
xor
inc
inc
out
adc
rcrb
inc
add
ret
sbb
add
aaa
mov
sbb
mov
pop
add
loope
xchg
jo
push
hlt
shll
out
jp
pop
inc
mov
adc
lds
mov
and
pop
les
cmc
add
jmp
out
leave
aas
pop
jbe
andb
add
inc
push
repnz
pop
cmp
cwtl
lcall
sbb
and
fcompl
pushf
lahf
add
mov
push
in
or
mov
mov
rolb
adc
popl
pop
jbe
add
sub
sahf
andl
mov
arpl
sub
and
jno
and
jle
test
xchg
sbbb
add
dec
and
push
insb
pop
sbb
add
fs
stos
repnz
adc
dec
fwait
mov
mov
testb
iret
mov
push
sub
adc
insl
dec
inc
int3
mov
in
jmp
into
testl
aam
scas
cwtl
push
xor
jp
mov
je
mov
xchg
dec
dec
push
pop
mov
hlt
sub
mov
sbb
mov
insl
ret
add
pop
call
ficompl
fcompl
cli
xchg
mov
out
push
or
adc
cmp
sbb
popl
je
dec
xchg
fs
jp
adc
jbe
cli
push
inc
fisttps
pop
sarb
jl
dec
fidivl
pop
push
fucomi
xchg
xchg
movl
sub
push
inc
cmp
out
inc
jl
mov
fldcw
xor
jno
mov
add
pop
into
fs
or
imul
jo
roll
gs
stos
enter
push
and
movsl
xlat
test
jo
jp
pop
lahf
and
push
dec
push
sbb
xor
push
cld
fiadds
addr16
stc
sbb
lock
push
push
xor
inc
or
add
xchg
or
ss
add
mov
aad
sahf
adc
pushf
add
and
inc
jno
push
mov
mov
dec
dec
cltd
or
imul
mov
jno
jl
xor
push
inc
or
jb
mov
inc
push
mull
mov
jmp
or
call
out
lock
pop
shlb
popa
add
inc
mov
xchg
shl
or
sbb
ror
mov
nop
sti
cs
push
mov
jp
repz
adc
adc
dec
sub
add
dec
dec
sbb
dec
leave
dec
lahf
mov
sbb
jp
jg
and
int
inc
pop
push
push
aam
shrl
int
insb
add
dec
fs
insl
push
and
push
pop
hlt
jno
test
call
adc
ret
fstl
push
sub
lret
sub
dec
imul
clc
hlt
lods
negb
and
aad
add
mov
cli
fldt
xor
fimuls
ja
fadds
insb
sbbl
mov
loopne
repz
dec
divl
ret
cli
outsb
shlb
adc
xchg
xor
stos
adc
add
mov
icebp
cmp
mov
les
cmp
cmp
and
adc
add
iret
xchg
add
les
int
test
jmp
jecxz
push
inc
mov
lds
shll
push
cmp
movsl
jg
andl
push
arpl
movd
mov
push
gs
or
adc
sub
inc
cmp
lret
ret
fdivrl
cmp
jbe
sub
in
mov
cmp
push
filds
jp
popf
xor
pop
inc
ds
jno
and
pop
add
out
out
dec
add
movb
test
rol
pop
and
imul
fdivl
adc
add
cmpb
mov
lcall
ja
dec
loop
mov
sbb
or
xchg
cmp
outsl
cwtl
or
mov
lcall
iret
dec
sbb
mov
sub
add
dec
jae
dec
pop
pop
sub
jae
ss
ss
ds
les
scas
adc
sbb
imul
xchg
sbb
add
dec
cmp
bound
aam
xchg
pop
cmp
xchg
cmp
out
and
xchg
les
inc
test
add
inc
loope
pop
leave
mov
es
cmp
movsb
shrl
push
adc
and
sahf
pushw
inc
sbb
leave
movsb
cmpsl
lret
push
js
inc
mov
lds
pop
cmp
andl
test
adc
xchg
xlat
dec
mov
xchg
jne
shll
or
dec
dec
out
mov
sar
in
mov
cld
inc
and
add
mov
mov
cmp
jae
xchg
pop
push
jno
sub
xlat
clc
aad
and
adc
subb
cmp
fwait
jo
je
cmc
pop
add
push
hlt
lock
adc
inc
sub
pop
cmp
fdivr
jns
sub
clc
pop
call
pop
push
js
jecxz
testb
xchg
mov
ljmp
adc
scas
mov
pop
je
sub
xor
shr
mov
jae
xchg
xchg
cli
clc
xlat
sbb
shlb
nop
sarl
cs
insl
das
cwtl
add
jo
pop
sbb
jecxz
repz
cmpsl
repz
mov
mov
mov
lock
je
pop
insl
push
in
std
test
pop
xchg
cmp
add
scas
rcl
xchg
js
mov
add
nop
or
mov
adc
pop
dec
sarl
pop
sbbb
out
or
push
ss
movsl
xchg
mov
push
fisubrs
popf
int3
insl
add
push
sub
xchg
rcrb
adc
mov
scas
clc
inc
sub
mov
xorl
jl
fcom
sub
outsb
push
jecxz
in
in
testl
mov
out
adc
mov
jns
mov
test
cwtl
inc
jl
stos
lcall
repnz
xchg
push
pop
popa
into
sbb
jne
and
mov
push
popf
xchg
dec
lret
call
adc
dec
and
mulb
sbb
rolb
fs
inc
push
nop
or
inc
xor
adc
xchg
mov
clc
sub
mov
dec
inc
lea
xor
mov
inc
loop
inc
push
push
outsb
xchg
aam
outsl
enter
popa
in
jl
add
push
push
sub
mov
or
ret
cmpsb
push
jbe
imul
add
sub
pop
jb
xchg
test
and
jp
pushf
jl
add
jge
adc
rcrb
rcrb
je
mov
cltd
scas
or
popa
fiaddl
xor
shl
and
jb
adc
inc
adc
mov
mov
out
cmpsl
mov
psrad
or
jmp
loop
das
or
mov
adc
jg
loopne
ret
pop
lret
jle
insl
mov
das
fimull
je
mov
dec
add
pusha
cmp
divb
addb
aad
inc
sub
jp
outsl
adc
leave
ret
inc
test
rolb
test
mov
fcomps
add
jg
addr16
mov
dec
jp
dec
xchg
dec
icebp
ss
sbb
xlat
mov
ret
cmpsb
popf
lcall
fcoml
ret
xor
icebp
mov
psrlq
xorb
sub
push
lret
xchg
mov
test
push
faddl
out
inc
loopne
ds
push
fists
mov
rolb
pop
rcrl
inc
enter
jne
popa
loopne
movsb
movsl
sbb
mov
ret
xor
jb
decb
cmp
xor
stos
xor
add
movsb
and
enter
inc
pushf
lea
ds
ljmp
pusha
mov
mov
push
jbe
mov
jge
xchg
jns
jle
mov
mov
lea
mov
clc
shrb
push
test
mov
or
pop
fwait
jp
xor
adc
data16
popf
xor
and
out
loop
insl
imul
lds
add
pop
and
ljmp
cmp
mov
pop
in
fisubrl
mov
push
mov
add
fistl
lahf
dec
cmp
mov
mov
faddp
mov
xchg
ja
ror
inc
pop
pop
and
mov
std
loopne
fs
dec
ror
movsb
out
mov
out
adc
js
cmp
icebp
or
pop
shr
shll
scas
inc
add
cmp
jo
dec
and
jae
cmp
pop
xchg
adc
hlt
push
cmp
sub
mov
ret
and
xor
lds
lock
ss
aas
hlt
and
jl
pop
je
test
ds
fcomps
int
dec
lret
sub
sbb
aaa
jmp
jmp
pop
xor
call
fadd
jno
cli
popf
pop
data16
add
les
inc
sub
xchg
add
aad
shrb
sub
and
lret
sti
cmpsl
pop
dec
insl
nop
cld
loop
push
lahf
mov
sbb
or
xchg
jae
dec
aad
xchg
out
cmc
jecxz
add
adc
cmpsb
mov
loopne
xor
aad
dec
add
jl
mov
cld
lds
or
ljmp
jge
push
sub
pop
fwait
ret
sub
cmpsb
fnstenv
sub
inc
pop
sbb
sbbb
fadds
mov
sahf
dec
inc
xchg
adc
test
push
cmp
jo
icebp
popl
xchg
pop
pop
sub
dec
xor
aam
add
sbb
subb
lahf
dec
mov
xor
mov
cmp
mov
jbe
mov
daa
inc
sbb
inc
add
in
push
mov
cli
sub
test
sbb
lahf
add
mov
imul
in
mov
fs
call
push
xchg
std
push
addb
in
cs
jne
dec
add
subb
or
dec
aam
sti
pop
mov
dec
pop
or
aad
xchg
in
sub
insl
fistpll
cmp
pop
ds
sbb
fdiv
cmp
std
arpl
sahf
mov
ret
push
jp
mov
adc
leave
stc
jae
xchg
push
mov
scas
cmp
stos
lret
xor
pop
and
nop
inc
ljmp
pop
out
test
push
test
cld
jecxz
imul
mov
rolb
dec
push
div
add
js
jp
aad
sub
icebp
cmp
xlat
push
lods
cmovno
adcl
inc
ss
repz
sahf
ret
sub
popa
add
mov
lods
adc
pop
xchg
lock
inc
adcl
adc
cmc
or
xchg
mov
loope
cmp
push
pop
je
movsl
imul
or
mov
cmp
fistpll
adc
pop
xchg
rolb
jbe
mov
into
je
mov
cmp
lods
repnz
push
or
clc
andb
xchg
sbb
pop
xor
pop
fcoms
inc
arpl
push
lods
repz
in
loopne
mov
xchg
and
addl
cmp
or
hlt
push
mov
pop
mov
lahf
popf
inc
inc
dec
sar
xchg
lds
shrl
mov
xor
dec
add
mov
enter
insb
clc
dec
xorl
pop
mov
rolb
lret
ljmp
inc
mov
or
test
scas
jne
repnz
sub
jmp
shll
xor
mov
or
fcompp
jae
jb
icebp
mov
shlb
mov
sbb
popa
xchg
addl
sbb
add
cmpsb
or
mov
les
ficoml
fwait
mov
pop
scas
setnp
rclb
icebp
lock
cmp
mov
push
enter
sti
rclb
out
and
mov
shl
push
mov
das
add
sub
mov
jmp
imul
cmp
lcall
mov
lret
dec
addl
in
test
pop
jp
and
mov
out
sbb
cmp
in
cld
adc
hlt
dec
adc
cmovs
cmp
movsb
and
out
mov
adc
pop
add
or
fisubrs
orb
js
mov
adc
sub
sub
adc
jge
xor
fdivs
mov
push
enter
mov
negl
xchg
cli
and
ds
mov
lods
xchg
push
fs
mov
add
pop
sub
in
rol
ljmp
xorb
aaa
jns
insb
add
lcall
push
mov
xchg
add
xchg
push
inc
inc
orl
ss
mov
das
mov
call
pop
mov
push
jp
cmpsl
inc
in
lcall
or
add
pusha
test
cld
pop
popa
lahf
mov
adc
mov
adc
test
and
fidivrs
and
bound
aam
aas
fcompl
inc
dec
loopne
mov
add
bound
scas
push
and
fists
enter
fstpt
jb
cwtl
loopne
jle
nop
shlb
xchg
add
or
mov
sahf
mov
mov
data16
pop
sub
or
xchg
xchg
or
ljmp
test
pop
and
add
dec
dec
rcrl
cmpsl
pop
hlt
test
xchg
push
adc
inc
inc
sbb
sub
inc
in
mov
repnz
adc
mov
xchg
std
push
js
outsl
jle
and
movb
test
xchg
inc
mov
mov
loope
popa
add
dec
lods
adc
std
push
mov
mov
aas
adc
pop
fwait
push
jecxz
lret
cmpsb
sub
sbb
movsl
ss
xchg
cmp
scas
xchg
ja
ds
push
scas
jecxz
aam
mov
shr
pmaxub
xchg
and
out
test
or
mov
imul
xor
movsl
xchg
hlt
mov
add
adc
cwtl
js
cli
inc
shlb
call
pop
nop
popf
add
push
in
outsb
negb
xchg
jb
adc
push
shll
pusha
mov
pop
pop
sub
cmp
or
pop
shl
ret
push
xlat
das
ss
cmp
push
push
popa
movsb
outsb
adc
mov
mov
into
dec
push
rcrb
jbe
in
icebp
rcll
clc
dec
mov
xchg
lock
and
jle
mov
aam
nop
cwtl
jecxz
cmpsl
mov
cwtl
xchg
ss
aad
xchg
mov
repz
inc
lret
push
cmp
cs
sub
fmul
rcr
sub
jp
ljmp
push
std
loopne
cmpb
fldcw
jl
in
insb
andb
pop
xor
sub
icebp
mov
inc
fmuls
or
push
pusha
push
or
inc
arpl
jecxz
imul
push
cmp
jp
or
shrb
decl
inc
push
sbb
inc
rclw
mov
test
mov
cmpsl
pop
rclb
or
loop
mov
mov
mov
shrl
fidivs
fldcw
clc
mov
inc
shlb
adc
push
mov
mov
mov
mov
mov
mov
loope
stos
sub
pop
out
fstp
in
std
adc
pop
leave
push
outsl
mov
or
js
ja
ss
std
icebp
sbb
test
xchg
xchg
cmp
ret
leave
sbbb
outsb
adc
scas
jno
sub
push
mov
loope
pop
loope
mov
mov
das
add
or
cmp
jbe
sbb
xchg
pop
addr16
xor
xor
ds
jge
lods
or
lds
jb
adc
adc
dec
mov
lods
sub
add
inc
mov
icebp
mov
sahf
jbe
movsb
insl
bound
daa
faddp
mov
test
pop
cmpsl
rclb
pfacc
xchg
loope
adc
mov
or
lods
cmpsl
adc
add
add
js
je
adc
out
xchg
dec
mov
sbb
mov
std
mulb
test
sti
in
loop
push
das
sbb
push
cmp
push
sub
jno
add
jecxz
push
fs
fisubl
adc
cmp
mov
fisubl
scas
in
loope
les
outsb
cld
cmp
popa
xor
pop
clc
pusha
nop
cmpl
push
fdivr
clc
in
sbb
rorb
mov
das
xor
addl
sub
je
in
movb
push
adc
add
add
cmc
sub
and
and
cmp
cmp
outsl
add
mov
fcompl
push
loopne
lret
lods
and
or
sbb
test
out
rolb
push
and
orl
push
dec
mov
jp
mov
das
xchg
xchg
dec
pop
pop
sbb
push
mov
inc
mov
movsb
or
scas
push
inc
stc
in
shrb
cli
das
mov
pop
aas
jns
pushf
call
sbbl
jp
mov
xor
jo
pop
add
add
jmp
movsl
adc
jge
or
mov
jl
ficoms
pushf
mov
push
mov
cmp
pusha
shrb
push
cmc
das
push
adcl
je
out
lock
dec
push
sub
test
jp
jb
js
testl
sahf
pop
cmp
idiv
decb
shlb
ljmp
pop
mov
test
sub
imull
add
sbb
push
lods
lret
je
and
mov
xchg
mov
mov
mov
out
shlb
mov
sahf
dec
mov
cmc
rolb
lock
xor
lods
jb
adcb
inc
mov
les
inc
in
repz
rorb
add
fwait
adc
dec
add
push
or
cmpb
repz
imul
stos
sub
aaa
and
ret
fildl
xor
xchg
xor
ret
decb
or
sarb
movsb
push
push
mov
xor
push
sbb
inc
cmp
mov
andb
mov
push
jle
xor
test
cwtl
push
inc
push
or
dec
xor
outsl
xchg
pop
in
add
sub
fimull
out
hlt
lret
mov
iret
xor
fiadds
cmpsb
dec
sbb
xor
popf
and
mov
add
or
ja
xchg
mov
ret
sbb
and
push
pop
outsb
out
mov
pop
pop
lret
jge
jbe
and
xchg
sub
fnstsw
jns
jbe
sbb
pop
mov
ret
aas
mov
outsb
mov
or
and
cmp
sbb
popf
mov
out
pop
enter
adc
clc
call
es
out
repz
push
jle
mov
cld
xchg
xor
or
add
aaa
pop
mov
cli
aas
inc
push
in
lret
pop
push
pop
mov
mov
and
push
test
adc
pop
imul
fidivs
mov
div
fsubs
rclb
ss
pop
xchg
mov
sbb
xor
fadds
fadds
shrl
and
test
xchg
and
mov
dec
adc
stos
adc
les
clc
pop
adc
shrl
cmc
testb
and
loopne
clts
push
data16
cmp
mov
fmuls
pop
nop
or
rorl
aas
aaa
or
in
pop
adc
test
dec
mov
sarb
test
pop
fldt
push
shlb
into
sub
jg
clc
and
lret
adc
or
xchg
or
aam
dec
test
sti
aad
imul
sub
mov
add
and
rcll
cwtl
add
addr16
push
lret
adc
ss
jmp
mov
notl
sahf
xchg
sub
jb
aaa
mov
mov
sub
cmp
or
add
xor
dec
insl
dec
push
xor
ret
mov
popa
push
imul
outsl
adc
inc
movsl
scas
sbb
rorl
mov
or
daa
and
pop
rorl
mov
adc
adc
ret
pop
jo
sub
mov
mov
stos
lea
mov
idivb
mov
and
inc
loopne
mov
std
dec
ret
out
dec
push
mov
xor
xchg
imul
mov
jle
mov
idivb
push
adc
dec
and
xor
inc
mov
scas
mov
mov
sbb
in
mov
cld
jg
dec
jnp
sbb
sub
incl
xchg
int
popf
popl
sub
movsb
mov
inc
mov
mov
jl
shr
or
sub
and
xchg
push
sti
xor
pop
cmp
jo
adc
cmpb
fsubrl
gs
cwtl
out
or
movsb
shrb
loopne
jbe
inc
lods
mov
push
sti
pop
outsb
sub
adc
adc
push
jne
lods
push
aam
imul
popa
js
dec
mov
pop
add
test
mov
push
xor
outsl
sub
xchg
and
xor
mov
pushf
lret
push
rclb
lcall
push
xor
in
cs
mov
mov
inc
inc
lods
cmpsb
jb
adcl
mov
push
insl
jmp
into
data16
cmc
sbb
sbb
orps
cwtl
inc
jns
push
push
add
jecxz
mov
push
jle
iret
ret
or
cld
xchg
outsl
sbb
mov
loop
repnz
pop
add
hlt
ds
or
in
push
test
int3
pop
ret
stos
adc
movsl
outsl
test
mov
mov
xchg
jl
in
aam
fidivs
ret
ror
inc
loopne
push
or
movsb
mov
push
enter
incb
xor
addr16
push
pusha
dec
pop
jnp
dec
add
push
cld
xchg
mov
and
xchg
mov
pop
push
fsubrl
jge
das
cmp
pop
or
je
dec
clc
ficomps
mov
mov
subb
in
ja
imul
adc
push
push
scas
lods
inc
dec
es
movsb
movsl
insb
rcl
pop
cmc
mov
in
lods
pusha
stos
add
cmp
adc
lock
inc
ret
fists
dec
xchg
pop
xchg
arpl
mov
cli
and
dec
pop
les
inc
cmp
in
add
subb
enter
sbb
cmc
mov
adc
pushf
fcoms
inc
and
fcoml
lods
fadds
shlb
incb
adc
xchg
and
pop
filds
add
inc
xor
cmp
daa
hlt
clc
aas
jmp
popf
ror
adc
sbb
mov
pop
sbb
pop
mov
mov
sub
hlt
push
loop
loop
xchg
fstps
sbb
or
mov
pushf
decl
sub
xor
pop
xchg
pusha
mov
dec
push
rclb
pop
jmp
sbb
inc
popa
mov
sub
mov
inc
aam
sbbb
mov
inc
xchg
or
out
lcall
mov
cmc
das
enter
mov
push
inc
adcb
dec
mov
add
clc
call
sub
cmpb
push
and
mov
popa
xchg
xchg
mov
dec
rcll
pop
push
std
pop
outsl
pop
push
lahf
movsb
mov
add
cmp
add
adc
and
loopne
mov
pop
add
mov
lret
cli
adc
lock
arpl
lock
push
push
mov
iret
int3
mov
dec
or
adc
mov
adc
mov
xor
jmp
mov
adc
nop
test
cs
inc
ljmp
dec
bound
sbb
add
push
jle
sub
sbb
xchg
push
in
mov
jbe,pn
sbb
shlb
or
lret
outsl
js
cli
stos
pop
es
cli
icebp
fadds
add
inc
jne
cmc
push
pop
cmpb
insb
test
push
in
out
clc
mov
imul
jb
sub
jo
jo
add
lods
jne
outsl
pop
inc
fadd
mov
out
xchg
sub
adc
xor
inc
inc
mov
inc
sub
pop
iret
bound
jns
or
aaa
mov
adc
aaa
stos
xchg
inc
push
jl
mov
rcll
mov
push
dec
dec
sub
in
dec
sbb
push
pusha
aas
or
test
inc
mov
cli
adc
stos
clc
mov
fsubrs
mov
cmc
ret
or
push
sub
je
scas
lods
shrb
push
lret
hlt
or
cs
loop
push
dec
test
and
das
xchg
xlat
hlt
xchg
outsb
sub
je
adc
dec
dec
sbb
dec
or
pop
lock
add
out
fs
push
pop
jecxz
sbb
jle
sbbb
xchg
lds
xor
xchg
outsl
movsb
and
pop
mov
pop
lea
jo
mov
js
test
xchg
test
and
fmuls
sarl
cmp
adc
test
add
pop
aas
fimull
adc
out
add
aam
rolb
cmp
adc
mov
loope
pop
and
pop
jno
inc
add
ret
popf
inc
pop
daa
mov
push
dec
jle
xor
add
movb
mov
xor
pop
pop
dec
dec
cld
addb
aas
jecxz
lods
or
cmp
movsl
cmpb
mov
repz
or
mov
pop
pop
pushf
test
adc
inc
pop
jmp
sbb
aas
pop
mov
loop
test
sbb
out
xchg
mov
jge,pt
mov
inc
cltd
cld
pop
inc
inc
das
icebp
xchg
dec
loope
xor
add
push
push
leave
pop
stos
pop
pop
push
add
call
rclb
sub
sahf
subl
pop
les
dec
je
inc
lds
ljmp
mov
sahf
or
inc
adc
add
inc
out
xor
push
cltd
jecxz
je
sbb
fs
outsl
test
andb
loope
sub
lret
jl
add
mov
fdivrs
dec
sbb
loop
andb
push
popf
push
adc
sub
cld
je
sar
popl
cs
inc
mov
pop
adc
stos
sbb
fistps
popf
outsb
cmp
je
pop
pop
add
push
stc
push
mov
xor
xor
movsb
repnz
fwait
and
mov
push
sbb
jmp
xchg
ret
jmp
pop
fdivr
inc
push
cmp
sub
dec
lock
movsl
cmpb
fwait
pop
push
outsl
jb
xchg
jp
ret
rcl
sbb
inc
push
dec
cli
and
mov
fimull
push
movsb
push
sbb
js
bound
aam
sub
test
push
add
enter
pop
or
lock
movsb
rorb
pushf
xchg
fimuls
xchg
out
outsl
adc
push
or
lcall
adc
sahf
sbb
sahf
dec
int3
push
jbe
sub
cs
or
insb
divl
outsb
std
fildl
and
data16
test
adc
push
dec
out
fsubrs
xlat
or
shlb
and
mov
and
inc
pop
shrb
or
test
jb
or
lock
cmc
jp
xor
adc
es
cmp
mov
push
clc
dec
clc
push
fcoms
push
xchg
stos
je
or
add
push
cs
fnsave
in
rclb
vpmulld
ss
push
dec
ficoms
ja
idivl
scas
push
add
jo
or
add
aam
push
or
clc
fwait
hlt
cmp
sub
fisubrs
cmp
push
cmpsl
and
rorb
sub
hlt
xor
mov
lahf
sub
idivb
sub
add
cmpsl
insl
shr
mov
imul
mov
loop
je
jno
mov
and
mov
rcll
loope
call
faddl
movb
inc
test
sub
addr16
inc
call
push
outsl
push
lods
or
sbb
and
mov
pop
ljmp
pop
pop
and
dec
push
icebp
movsb
sbb
mov
fistpl
bound
and
and
fwait
adc
xor
hlt
nop
push
ja
fmuls
icebp
mov
mov
sbb
out
lock
cmp
mov
jns
arpl
cli
cmp
jl
xor
sub
and
mov
test
add
popa
push
call
dec
jno
cwtl
sub
test
aad
add
mov
clc
push
and
cmp
gs
inc
shr
xor
shl
call
pusha
cmpb
mov
sbb
inc
mov
mov
mov
and
push
mov
in
loope
in
push
rcll
dec
mov
lods
mov
dec
in
and
cwtl
jo
stos
sub
cmp
sahf
ret
jb
pop
pop
loope
pop
mov
std
loope
xor
pop
and
inc
sub
mov
push
jne
push
insl
mov
jp
xor
lea
ss
pop
or
xorw
lret
sub
cmp
fstpl
cld
mov
js
data16
adc
je
test
clc
pop
mov
dec
sub
dec
int
call
xor
out
xchg
mov
fimull
icebp
jno
leave
arpl
stos
aas
cli
pop
ds
test
cmc
mov
mov
insl
and
or
adc
call
jl
xchg
xor
cmp
iret
subb
dec
adc
js
int3
pop
push
pusha
sub
leave
in
jp
jae
ds
iret
insl
aam
dec
dec
or
xor
aam
lds
iret
sub
enter
mov
in
in
mov
aad
outsl
xchg
pop
push
ja
adc
stos
jne
push
inc
mov
fsub
xchg
cmpsb
sbbl
jae
sbb
or
fcoms
mov
and
data16
xor
mov
mov
push
sbb
in
repnz
lret
adc
mov
js
xchg
call
jbe
ds
cmp
xor
lea
mov
sbb
adc
add
add
pop
hlt
mov
mov
mov
rol
data16
stos
fbld
cwtl
jg
xor
jle
or
mov
outsl
add
mov
sti
adc
adc
roll
xor
les
dec
sbb
or
loope
jmp
test
outsl
push
test
sbb
jecxz
test
mov
rolb
push
adc
sub
icebp
loopne
xchg
negl
mov
mov
pop
bound
int3
sar
xor
aad
add
inc
push
mov
adc
data16
sar
dec
push
hlt
and
sarl
xchg
pusha
pop
popa
das
add
daa
or
stc
inc
cmp
mov
xor
xchg
jmp
test
mov
pop
dec
dec
sbb
insb
into
cmp
jns
or
mov
rclb
push
and
cmpsl
addb
push
inc
inc
jl
or
inc
adc
loope
pop
sti
into
in
add
sub
clc
push
les
out
addr16
jmp
enter
je
adc
in
add
je
jle
push
xchg
ds
jp
jecxz
xlat
jbe
popf
cli
xor
mov
jo
pop
arpl
jae
addl
orl
and
das
or
jae
mov
adc
inc
dec
adc
sbb
cli
sbb
push
adc
dec
js
dec
rcrb
cmp
adc
push
jb
add
inc
push
cmp
pop
xchg
jno
mov
cli
call
aas
adc
mov
mov
lock
mov
shll
xlat
adc
inc
sarb
inc
jge
fs
adc
add
inc
subb
hlt
or
das
mov
and
nop
inc
jp
rclb
pop
test
push
addr16
pop
into
adc
xorb
lds
xor
jnp
pop
call
push
jl
sbb
loope
inc
pop
adc
or
add
sbb
mov
inc
clc
inc
push
clc
pop
dec
sub
pop
aam
ficompl
xchg
icebp
mov
push
hlt
sub
mov
nop
hlt
out
mov
mov
pop
out
mov
mulb
mov
sub
addr16
sbb
pop
sarb
mov
ret
push
mov
lds
pusha
xchg
scas
imul
loopne
sub
cmc
int3
adc
mov
sub
std
mov
jnp
xor
popf
mov
mov
mov
push
jb
lock
sbb
sbb
dec
punpcklbw
cmp
jmp
cmc
out
es
sub
pop
daa
sbb
xor
dec
inc
lidtl
push
sbb
cld
notl
ljmp
push
test
clc
dec
dec
adc
push
mov
pop
faddl
push
inc
mov
in
sub
loopne
sbb
push
xchg
inc
xlat
mov
push
or
push
pop
lods
ljmp
xchg
movsb
mov
mulb
test
cmp
stc
dec
les
cmpsb
or
nop
fnsave
adc
mov
sahf
push
sub
loope
or
movsb
je
and
pop
hlt
sbb
xor
dec
test
and
or
jns
lahf
jmp
inc
add
cli
cmpl
push
aas
push
inc
pusha
test
push
movsl
subb
lret
jns
sahf
ret
out
je
jg
popf
push
in
loope
out
sbb
sub
loopne
mov
xlat
inc
sar
and
mov
mov
pusha
insb
scas
push
adc
mov
xchg
xchg
fdivs
add
inc
or
cmp
fs
jp
les
and
lret
push
lock
insl
dec
push
cmp
loopne
ljmp
mov
adc
xchg
idivb
orl
clc
outsl
cli
outsl
jne
xchg
js
mov
ds
and
cmp
pop
sahf
and
ss
push
mov
jb
dec
mov
cwtl
testb
add
ret
ret
xor
adc
xor
xchg
lods
pop
dec
stos
lret
sbb
mov
jp
out
add
push
ret
pop
jle
sbb
push
pop
inc
cmp
rol
add
fwait
dec
das
push
mov
adc
outsb
xor
movsl
mov
jp
pop
inc
rolb
sbb
mov
pusha
arpl
jl
hlt
or
inc
pusha
sbb
cmp
and
lahf
mov
sbb
or
pusha
fcmovb
xchg
iret
mov
popa
jnp
loopne
sbb
vshufps
ficoms
lock
and
push
fstps
jle
pop
das
aam
insb
cmp
adc
int
or
jp
jge
or
xor
push
shrb
je
aas
cltd
jmp
dec
add
xchg
add
data16
fcmove
and
inc
cli
sub
fmuls
addb
jp
or
jp
cli
testl
cli
pop
mov
mov
inc
pop
cmp
and
insb
stos
addb
jp
mov
andl
sbb
incl
xchg
shl
add
in
clc
pusha
push
lret
lock
movsb
ss
sarb
push
pop
or
xchg
inc
fildll
jl
cmpsl
ret
pushf
je
fucom
cmp
mov
dec
popf
xchg
dec
loopne
dec
cli
movsl
mov
adc
insb
bound
inc
scas
scas
lds
lret
sub
inc
ficomps
dec
xchg
dec
icebp
test
gs
sub
inc
jno
jge
mov
jb
repnz
push
pusha
add
decl
jbe
nop
push
ror
xchg
add
cmp
iret
insb
adc
push
inc
imul
orb
fwait
mov
sbb
test
lcall
lock
jae
clc
lods
stos
xchg
adc
mov
mov
mov
incb
push
jecxz
lods
cld
pop
movb
inc
jnp
jle
and
es
sub
test
cmp
imul
aam
loop
mov
add
enter
js
mov
ja
xchg
test
sbb
pop
fwait
mov
repnz
add
ret
dec
dec
and
sbb
push
mov
ds
mov
ret
cmpsb
push
add
jae
fcoms
aaa
inc
je
push
mov
and
lock
into
leave
or
stos
push
pushl
mov
jge
mov
adc
pop
push
imul
pop
je
add
push
adc
inc
xchg
loopne
jl
add
push
or
in
call
cmc
jecxz
cltd
out
jns
clc
cmp
loopne
sbb
in
adc
pop
mov
jl
sbb
mov
rolb
cmp
clc
mov
shl
or
mov
jmp
xchg
cld
fs
in
cmp
pop
jno
mov
xor
cli
in
mov
fmulp
pusha
lock
dec
dec
dec
cmp
sub
mov
addr16
xor
in
jo
sub
inc
pop
sbb
mov
test
cmp
adc
add
jbe
lret
shl
int
js
or
in
dec
xor
lahf
shlb
cld
adc
adc
inc
jae
cmp
out
mov
lcallw
add
out
roll
adc
xchg
cmpl
cmp
cmp
scas
inc
cmp
mov
clc
adcb
pop
pushf
std
mov
loope
xadd
mov
lods
and
mov
cld
mov
les
out
mov
fbstp
pop
dec
adc
xor
add
cmp
dec
rclb
lds
push
fimuls
into
decb
sbb
imul
leave
dec
add
jo
mov
negb
add
ds
xchg
fsts
xchg
lahf
cmp
or
xchg
fisubrl
repnz
jg
les
sbb
mov
pop
sarl
mov
xchg
inc
pushf
arpl
or
rcl
sub
sub
call
test
aam
movsl
lea
mov
cs
outsl
mov
dec
lods
mov
xrstor
test
mov
mov
cmpsl
mov
push
and
push
push
adc
pop
sbb
or
mov
and
dec
mov
loope
add
xchg
loop
or
mov
jae
xchg
adc
imul
sbb
mov
mov
ja
loope
xchg
inc
push
xchg
ficompl
ret
jno
sbb
mov
cmp
xchg
jle
add
lcall
subb
movsb
rcrl
daa
and
and
add
dec
jmp
testl
or
pop
mov
ja
xor
jl
repnz
add
pop
xchg
data16
mov
lret
sbb
mov
mov
add
and
les
mov
xchg
dec
js
jo
push
cmp
daa
cwtl
mov
cmpsl
pushw
call
pop
ss
decl
cmpsb
pop
rorb
and
iret
push
or
rcrl
or
mov
or
push
xchg
iret
dec
mov
into
test
mov
push
adc
sahf
insl
adc
jg
mov
mov
dec
ljmp
lcall
lret
inc
enter
test
ss
adc
xorb
cmp
jecxz
sbb
aam
dec
mov
mov
add
or
cs
sub
mov
sbb
fimuls
sub
movsb
jno
insb
push
cmpsl
dec
pop
inc
inc
pop
mov
inc
test
fisubrl
pop
xor
push
and
push
stos
ja
mov
mov
sbbl
mov
xchg
pop
adc
pushf
dec
je
and
lea
xchg
les
sbbl
inc
mov
sbb
mov
xor
dec
cmpb
in
mov
loopne
pop
mov
cmp
push
or
scas
data16
cwtl
xchg
cmp
add
aas
push
add
popw
cs
insb
insl
jle
lret
lock
push
aad
imull
stos
lahf
repnz
xor
mov
fisubl
sbb
movsb
outsb
dec
inc
pusha
push
dec
cld
test
mov
aam
mov
adc
loopne
mov
sti
jno
mov
or
insl
mov
inc
es
jl
push
push
in
ret
mov
call
jbe
sub
push
ret
adc
adc
rclb
dec
outsb
push
dec
jbe
add
pop
xchg
js
lock
clc
mov
nop
scas
lret
jno
movsb
lock
xchg
inc
pop
loopne
shlb
cmp
scas
incb
call
es
xchg
enter
or
subl
inc
inc
sbb
aam
lods
adcb
lds
outsb
and
hlt
mov
or
or
dec
push
mov
mov
push
mov
fldenv
test
sub
aaa
adc
call
cli
pop
lea
push
or
mov
call
jl
xor
or
xor
inc
cmp
fsubl
iret
lcall
gs
pop
sti
icebp
test
pop
in
jp
enter
cmp
and
je
out
mov
xchg
dec
repnz
and
and
cmp
or
mov
negl
sbb
pop
mov
rcll
or
push
lock
or
add
iret
std
jbe
xlat
lahf
popa
mov
mov
jl
dec
sbb
nop
das
inc
int3
xchg
or
add
jb
cli
std
add
scas
decb
movsb
push
sti
sub
adc
push
popa
mov
out
sub
add
mov
mov
xchg
into
insl
cmp
jmp
pop
mov
add
and
xchg
jbe
mov
test
pushf
loopne
mov
inc
in
into
mov
scas
xor
iret
and
add
mov
pop
ja
lcall
jle
data16
inc
comiss
loopne
add
lods
inc
sbb
fstpl
movsb
or
lods
mov
mov
jp
outsl
loop
dec
test
les
das
daa
dec
mov
jnp
cmpsb
or
jl
mov
jmp
clc
add
loop
or
js
test
cmp
shll
add
aaa
testb
dec
pop
nop
loop
pop
mov
inc
inc
cld
mov
dec
xor
jp
dec
int
lock
cmpsb
je
ret
testb
xor
add
rorl
mov
mov
mov
cmp
lcall
mov
xor
pop
mov
add
xor
fiaddl
es
add
sarl
in
and
notb
outsb
jp
jne
mov
xor
jmp
mov
pop
jle
rcrb
mov
jg
pop
inc
jno
stos
pop
jo
outsl
aam
cmp
adc
mov
push
adc
insl
adc
push
cwtl
into
out
dec
xor
cld
dec
ret
addl
xor
push
or
mov
mov
adc
push
push
call
inc
cwtl
and
jo
adc
xor
loopne
push
pushf
addb
jg
add
pop
das
mov
lahf
ret
into
mov
cmp
mov
push
inc
test
jb
inc
fdivs
push
lods
data16
or
jb
cli
daa
andb
dec
shlb
pop
pop
inc
ret
pop
add
xchg
test
push
inc
aas
adc
jb
fpatan
inc
or
mov
jb
push
cmpb
and
mulb
aam
xor
mov
cmpsl
or
rorb
jo
cwtl
sbb
and
push
or
shll
subb
cmpsb
mov
jg
mov
loop
inc
push
es
sub
pop
cld
push
dec
sarb
push
mov
inc
mov
mov
pop
xor
test
adc
rcl
pop
repz
gs
shlb
mov
cs
or
fs
jecxz
mov
clc
dec
cmpsb
out
mov
jp
mov
inc
mov
sub
movhps
inc
in
pop
push
mov
lcall
dec
adc
dec
add
clc
lret
rorb
in
or
enter
xchg
insl
stc
scas
inc
sbb
mov
cmpsb
mov
hlt
dec
les
push
sub
inc
pop
xchg
notb
push
jbe
nop
les
call
push
sarl
and
adc
jl
sbb
add
mov
scas
movsl
inc
cs
add
sub
inc
xchg
sbb
nop
fwait
hlt
lahf
or
xchg
dec
pop
out
xchg
pop
sub
rclb
leave
out
xchg
xchg
push
cmp
fiadds
es
push
xchg
adc
push
add
mov
test
inc
jmp
cmp
pop
leave
das
mov
inc
mov
movd
inc
scas
lahf
inc
sub
xor
lock
repnz
xchg
mov
cmp
xor
sub
inc
ret
addr16
sub
adc
clc
andl
push
clc
pop
inc
and
jo
aad
pop
push
mov
mov
insb
mov
les
hlt
add
xchg
push
fs
imul
lcall
movsl
lock
push
stos
inc
sbb
push
mov
add
hlt
dec
ret
jmp
dec
sub
or
enter
repnz
mov
dec
mov
jno
mov
shrl
push
out
inc
inc
push
ss
pop
and
mov
push
sub
push
and
push
lds
push
mov
pop
jle,pt
jae
insl
inc
mov
mov
addr16
dec
iret
ds
and
mov
fidivs
fcomps
je
adc
mov
jl
aaa
and
int3
push
aas
std
aaa
lea
adcb
dec
repnz
test
xchg
and
xor
jmp
test
sbb
aad
ljmp
dec
shlb
jle
rcl
test
add
stos
lods
insb
push
call
mov
cmp
adc
cli
sbb
decb
adc
das
mov
push
insb
or
jb
imul
and
sahf
dec
jle
mov
loopne
and
fadd
dec
mov
pop
sbb
jmp
push
cmp
add
inc
xchg
sti
jmp
lret
in
mov
mov
xor
fisttpll
push
inc
jg
jnp
fmull
pop
insb
outsb
insl
into
je
hlt
pop
or
inc
nop
cs
jg
jnp
arpl
sahf
testb
sbb
pop
push
inc
xor
bound
or
jle
mov
jge
test
mulb
loope
clc
pop
rcrl
mov
loopne
sub
push
push
and
push
je
mov
icebp
notb
aas
jo
fdiv
or
dec
inc
push
sub
fmuls
add
xchg
sbb
hlt
xor
sbb
push
fwait
int
dec
inc
iret
fs
push
out
lret
in
js
int3
dec
les
clts
pop
lock
out
mov
jne
pop
or
add
mov
cmp
mov
loope
sbb
shlb
leave
call
inc
mov
add
dec
stos
sahf
mov
hlt
js
icebp
jno
and
pop
aam
das
sub
or
mov
pop
hlt
mov
fcmovnb
push
insb
mov
cs
cmp
inc
mov
rol
mov
sbb
pop
lods
push
push
mov
inc
sub
fcomps
pop
adc
sahf
insb
sbb
cld
pop
scas
and
mov
or
ss
gs
lds
push
pop
inc
inc
sub
fistps
cli
sbb
std
inc
into
pop
lods
rorb
pop
mov
orb
push
fldenv
lock
xchg
hlt
jmp
rorb
out
shlb
pop
pop
or
mov
add
mov
insb
sbb
test
or
into
lock
lods
orb
lock
loopne
pop
lock
cld
cli
lahf
in
mov
jb
jle
add
mov
fsubrp
xor
or
mov
outsl
movsl
mov
xchg
shll
or
adc
sbb
out
add
pop
sub
add
pop
sub
add
xor
jns
gs
xor
inc
xchg
and
and
hlt
push
out
insl
xor
lcall
push
inc
add
add
rcr
inc
loope
push
cmp
sbb
call
int3
jge
test
data16
push
xchg
iret
pop
add
dec
or
add
inc
xchg
jno
roll
rclb
roll
xchg
and
clc
fcoml
out
ss
outsb
mov
fdivl
popl
xchg
int
or
mov
mov
or
push
pop
sbb
rorb
mov
shrb
stos
orb
pop
fmuls
and
fistpl
mov
jo
push
push
andl
bound
loopne
daa
lock
mov
jg
mov
dec
and
aaa
ret
idivb
stos
imul
pop
pop
add
push
inc
int
dec
push
mov
xor
movsb
negb
mov
mov
or
notb
xchg
adc
pop
sqrtps
inc
stos
mov
out
rcrb
adc
call
and
ret
dec
and
xchg
clc
call
xchg
out
imul
icebp
jecxz
mov
inc
mov
lock
xchg
sbb
sbb
fbstp
outsb
or
add
xchg
mov
clc
xorb
and
dec
fcmovnb
js
xlat
pop
test
mov
rolb
in
add
mov
adc
push
fsubr
xchg
loopne
adc
push
xchg
rcr
or
and
fisubl
mov
and
icebp
lods
push
mov
mov
inc
pop
mov
outsl
subb
dec
jo
pop
test
jp
xor
mov
loop
cmpsb
idiv
popa
sub
add
cmp
jp
shl
mov
leave
fcomps
lods
mov
or
mov
in
mov
outsb
jo
fs
add
idivb
and
shr
mov
adc
shll
lods
mov
add
cmpsb
pusha
mov
inc
pop
xlat
jbe
sub
xchg
mov
add
jp
aaa
cmpsl
js
ss
add
jg
cmc
inc
lcall
add
or
pop
lock
shrb
push
xor
stos
pop
mov
push
stos
cli
xor
daa
and
call
inc
add
push
adc
or
adc
add
pop
dec
fadds
shlb
lcall
jo
adc
add
mov
mov
jae
push
inc
dec
pop
xchg
adc
xchg
sub
push
or
pop
dec
adc
filds
fsubr
jne
mov
mov
and
xchg
jbe
sbb
sub
and
pop
xor
scas
mov
scas
mov
jg
adc
mov
push
les
mov
pop
jne
inc
push
cltd
outsb
mov
mov
dec
jmp
jecxz
dec
cmpsb
addl
push
loopne
mov
addb
incl
pop
sub
test
xchg
dec
xor
adc
xor
add
aam
neg
ds
outsb
scas
outsl
or
bound
xchg
add
hlt
call
lock
orb
push
push
in
adc
loopne
jb
lods
mov
push
out
iret
sti
mov
addr16
adc
ret
or
or
pop
or
add
popa
rorl
test
fimuls
lcall
stos
or
pushf
daa
stos
vcvttpd2dqy
push
into
lahf
movsl
xchg
adc
outsl
out
xor
push
incb
cmp
loopne
cld
mov
popa
mov
pushf
cmp
push
jo
xchg
push
inc
mov
lcall
incl
dec
mov
cmp
test
notl
add
call
and
jmp
hlt
and
cli
xor
aas
push
aad
xchg
xorb
sahf
inc
inc
data16
test
adc
fisttpll
mov
mov
testl
loopne
inc
mov
mov
xchg
loopne
enter
lods
btrl
fists
fidivs
cli
lcall
dec
push
test
sub
xor
jnp
insl
test
rorl
pop
aam
pop
je
sub
add
mov
orl
and
fisubl
jnp
push
adc
sub
hlt
fidivrl
insb
outsb
mov
andb
push
mov
jg
sub
xor
mov
sub
jecxz
dec
fwait
loope
cmp
inc
xchg
cltd
fdivr
dec
pop
jg
xchg
fdivrs
or
xor
and
int
mov
outsb
pop
pop
aas
loope
dec
scas
pop
lcall
push
mov
mov
push
inc
or
jmp
out
sti
and
sbb
rclb
int3
sarl
mov
sarb
pop
and
subl
pop
jle
loop
jl
sysenter
imul
hlt
out
cmp
hlt
jp
movsb
out
lods
shrl
jns
mov
xchg
aam
lods
and
adc
lahf
cmpsb
test
daa
test
inc
arpl
jl,pt
jo
fdivrs
pop
dec
pop
xchg
dec
fsubrs
cmp
push
dec
mov
sti
adc
jne
cmp
bound
mov
aam
cli
mov
mov
adc
mov
and
mov
mov
push
add
sub
test
int3
cmp
xor
nop
inc
ljmp
pop
out
or
xor
lcall
sub
pushf
lea
xor
orl
sarb
fcompl
stc
add
ljmp
inc
lds
sbb
push
mov
inc
out
push
cmp
cmpsl
inc
jo
mov
mov
push
lcall
fdiv
or
cmp
fsts
loop
jne
xor
push
dec
int3
mov
movl
inc
cmpsl
ljmp
mov
in
ficoml
cmp
jmp
inc
jl
xchg
nop
jl
cmp
mov
xor
loop
out
inc
sub
cmp
or
dec
test
jg
shl
or
lret
cmp
test
lods
lods
cmpsb
pop
ds
in
xor
mov
pop
pusha
xchg
data16
mov
cmp
and
adc
xorb
push
jle
add
es
jo
mov
test
and
jbe
push
mov
or
js
ret
adc
in
fbld
push
nop
popa
test
lds
adc
cmp
cmpb
test
out
and
pop
es
stos
shlb
fsubrs
jne
popf
ljmp
add
iret
mov
or
sbb
pop
mov
cli
mov
xor
cmp
jp
stos
push
jle
mov
rol
mov
scas
mov
mov
dec
ljmp
int
fnsave
rcll
pop
insb
or
push
or
clc
cs
inc
adc
inc
push
pop
sti
mov
in
movb
loop
adc
hlt
add
test
mov
pop
in
mov
sbb
adc
inc
push
bound
roll
scas
and
mov
xlat
pop
xchg
sub
jg
push
or
outsb
inc
fisttps
lcall
jbe
data16
lods
mov
inc
fisubl
fdivrl
push
les
push
rcrl
push
and
hlt
ret
cwtl
int3
movsl
adc
cs
ret
xchg
bound
sub
sahf
inc
cmp
sbb
mov
scas
push
mov
push
push
jmp
or
dec
fs
xchg
xchg
push
lods
movsl
jbe
pushf
jp
adc
push
in
cmpsb
test
inc
adc
pop
hlt
sbb
or
cs
shll
sahf
out
sahf
jnp
call
mov
daa
ds
mov
or
xchg
movsb
int
enter
and
jg
and
mov
push
pop
push
orl
dec
and
loop
cltd
movsb
inc
push
push
inc
or
xchg
adc
movl
ljmp
cmp
and
cli
add
jo
ja
dec
enter
push
test
cmp
stos
or
pusha
sub
fwait
or
sbb
push
bound
test
mov
mov
jbe
mov
push
jmp
enter
add
movsb
lcall
fcomps
xorb
push
call
fmulp
stc
cmc
packsswb
xor
pop
jmp
not
push
and
add
sub
fisubrs
fsubrs
sbb
fnstsw
jmp
add
or
xchg
cmp
pusha
mov
andb
jo
sbb
das
and
movsl
and
mov
ret
sbb
jge
mov
or
mov
cmc
movsl
and
mov
cs
mov
lods
je
repnz
loop
mov
in
shrb
lods
xorl
nop
pop
inc
movsl
add
push
loopne
push
inc
test
push
dec
push
or
adc
es
fidivs
lods
sub
ljmp
or
dec
and
adc
outsb
les
or
dec
mov
or
add
inc
test
and
mov
adc
jno
jg
mov
je
loopne
or
adc
stos
xor
push
jae
adc
or
cli
cmpsb
push
add
loopne
jbe
fcomps
adc
insb
add
mov
test
pop
jb
jecxz
hlt
xor
stos
push
xor
fdivrl
test
in
xor
nop
mov
adc
mov
testl
sbb
mov
loope
loopne
add
add
in
fdivs
je
pop
and
in
jns
push
pop
push
xchg
jnp
mov
stos
dec
incb
lods
paddusb
test
pop
pop
adcb
sbb
daa
inc
jecxz
movsl
gs
push
es
inc
or
rcll
lcall
stos
sbb
pop
adc
mov
int3
dec
scas
loopne
inc
test
push
lcall
mov
inc
xrelease
push
xor
pop
mov
rorl
cmp
into
pushf
ret
add
add
orb
mov
gs
incl
xchg
and
cmpsb
outsl
leave
ljmp
pop
sub
pop
dec
outsl
add
jns
data16
in
fwait
mov
daa
popl
adc
xchg
jg
mov
push
adc
pop
out
jp
hlt
xchg
jns
pop
adc
mov
mov
inc
aad
xlat
inc
aaa
cwtl
dec
pop
and
lods
xor
inc
dec
sub
lret
pop
stos
stos
or
outsl
or
fimuls
add
or
add
inc
push
add
cltd
in
xor
test
inc
push
incl
in
scas
cmpl
jmp
rorb
or
xor
or
add
inc
add
fbstp
xor
rcrb
mov
add
mov
cwtl
in
lods
xchg
andb
sub
shr
cmp
fs
pop
cwtl
sbb
xchg
lock
hlt
hlt
mov
inc
cmp
or
adc
lock
lock
outsl
mov
fwait
sahf
icebp
and
or
and
clc
ljmp
push
mov
lahf
mov
dec
frstor
sbb
fs
mov
ds
add
pushf
pop
fildl
out
cmp
mov
add
fcoms
mov
add
out
or
stos
cmpsb
shrl
mov
ja
inc
repz
mov
mov
sub
popa
xor
or
dec
pushf
ficomps
dec
push
rol
sub
inc
mov
loopne
outsb
pop
cwtl
stc
data16
mov
push
ret
mov
add
pop
cmp
xchg
inc
inc
add
dec
or
sub
imul
inc
stos
adc
sub
fs
mov
ret
inc
mov
cld
mov
int
push
loop
dec
and
jle
mov
sbb
mov
mov
pop
inc
movsb
adc
cli
add
xor
dec
ss
insb
das
xchg
ret
ljmp
cld
cmp
ficoms
imul
aas
je
out
popa
adc
aad
dec
andb
clc
lods
mov
mov
popa
stos
rcr
jl
rol
add
popl
aas
mov
sub
je
mov
xchg
lods
js
loope,pt
jno
adc
inc
push
gs
pop
insb
sub
cmpsl
or
nop
lea
sub
pop
mov
cs
push
sub
pop
dec
loop
lods
adc
nop
dec
push
cmp
add
push
mov
add
inc
add
hlt
js
call
rclb
pop
jne
hlt
add
scas
mov
xchg
mov
push
call
lcall
push
adc
insb
gs
orb
test
push
inc
lock
test
rcl
xorb
lea
push
dec
in
fildll
jl
mov
insl
pop
outsl
mov
dec
popa
add
fadds
sbb
stc
or
lods
xchg
mov
dec
subb
hlt
lock
mov
xor
test
nop
loop
rcrb
pop
js
and
or
gs
pop
add
pop
cmp
lret
sti
cmp
adc
sub
ret
aas
js
mov
scas
pop
push
and
mov
lret
pop
sti
or
lret
mov
cmp
inc
addb
add
inc
ja
inc
mov
lock
jmp
out
xchg
mov
cld
xor
mov
mov
mov
into
les
lods
xor
sub
mov
and
cmp
dec
or
pop
hlt
ret
sub
cmpsb
xor
push
test
je
and
rol
shrb
andl
pcmpgtb
push
inc
adc
pushl
adc
es
loopne
add
and
add
pop
mov
push
fcomps
mov
push
lock
add
fnstsw
mov
lods
jns
sub
mov
hlt
cltd
cli
cmc
repnz
push
loop
movl
xor
outsb
or
xor
mov
mov
and
or
dec
cwtl
ja
jnp
push
jbe
cmpl
fs
data16
mov
push
add
rolb
adc
mov
scas
cli
sarb
mov
aad
xor
fwait
adc
pop
lods
test
inc
mov
add
xor
jge
push
adc
add
es
dec
scas
dec
mov
dec
jl
test
jg
mov
push
bound
dec
adc
and
sbb
test
adc
insl
clc
aad
shll
or
mov
out
xchg
sbb
out
pop
sub
es
mov
aam
iret
lahf
fstps
push
sub
add
sub
addr16
lcall
mov
pop
sahf
out
cmp
icebp
stos
ret
mov
or
pop
pop
push
and
mov
insl
and
clc
jecxz
popl
jns
andb
inc
cs
mov
cwtl
js
hlt
push
jmp
into
xchg
cli
fnstcw
ljmp
cmp
sbb
testb
adc
mov
scas
or
cmp
lds
push
jge
add
lock
mov
lds
leave
cld
fdivrs
xchg
mov
movsb
sbb
sub
movsb
inc
mov
or
push
loope
push
mov
mov
lods
dec
nop
sbb
imul
enter
add
xor
cmp
movsl
sbb
cs
sbb
and
inc
clc
and
sub
hlt
mov
push
or
cmpl
adc
or
xchg
out
jp
push
pop
lahf
inc
lock
aaa
push
mov
fsincos
jnp
pop
fwait
into
inc
aad
aaa
cmp
inc
aaa
add
ret
in
and
inc
in
sub
cmpsb
mov
xor
push
int
cwtl
mov
inc
or
dec
rclb
jl
ljmp
lret
push
mov
mov
clc
daa
aam
rcrb
scas
mov
mov
add
xchg
outsl
in
xor
mov
jo
push
shll
adc
add
rolb
xlat
imul
push
inc
mov
jle
jo
xchg
cmp
mov
push
xlat
incb
cmpsb
stc
xor
sbb
push
aaa
sub
je
bound
repz
in
aam
xchg
adc
sbb
cmp
mov
nop
je
fcmovbe
and
sub
ds
mov
xchg
int
inc
test
push
test
xor
push
rol
nop
outsb
xchg
repnz
push
xchg
stos
or
jbe
and
js
out
movsl
jb
sbb
jne
repz
mov
shrb
or
repnz
add
mov
mov
mov
cmp
aad
fidivrs
and
test
inc
mov
rorl
add
inc
test
push
sub
or
cwtl
ret
push
dec
je
ljmp
jo
das
jecxz
lret
orb
ds
sbb
subb
lcall
fbld
jg
mov
or
cmp
adc
add
and
fwait
sti
out
addb
andb
jae
and
or
inc
cmp
sbb
push
stc
ret
jle
jp
ret
xor
je
cmpxchg
into
sbb
ret
mov
orl
jnp
jae
mov
int
dec
sbb
adc
dec
inc
sub
sbb
aad
pop
dec
loop
mov
out
xchg
call
in
rorl
sbb
push
inc
enter
adc
je
scas
sub
lret
fwait
ds
jl
pop
aam
and
rorl
xchg
das
inc
jle,pt
xor
and
es
dec
sub
pop
pop
ret
xor
int3
dec
pop
incb
out
test
mov
lock
roll
hlt
movsl
scas
rorb
movsl
sbbb
ret
ficompl
and
mov
mov
jmp
fisubl
subb
inc
repnz
fcompl
pop
mov
enter
xchg
push
lret
mov
je
lock
ror
test
mov
cmp
cmp
aas
stos
in
lods
xor
inc
lea
pop
mov
je
call
mov
add
sahf
and
arpl
or
mov
mov
or
lock
pop
cld
add
pop
or
and
mov
jle
popa
rorb
outsl
repnz
icebp
test
dec
mov
fstpt
xchg
or
aad
cmp
push
add
push
cwtl
ret
popa
add
dec
mov
in
imul
mov
cmc
xlat
cwtl
repnz
mov
push
mov
sub
mov
outsb
lock
lret
adc
clc
lds
int
pop
andl
cmp
cmp
sub
xor
mov
out
mov
icebp
inc
decl
sub
jg
lret
cli
cmc
cltd
jp
subl
xchg
mov
jle
mov
addb
sarb
movsb
cmp
sub
pushf
inc
dec
in
cwtl
add
rorb
test
sbb
insl
add
adcb
ret
mov
enter
incb
test
subps
fs
es
pusha
cmp
cmpb
pop
xchg
push
ljmp
inc
popa
mov
clc
pop
enter
or
add
push
and
lcall
xlat
cmp
scas
add
bound
mov
rcrb
adc
mov
jb
subps
rcrb
jg
iret
jb
stos
add
jbe
cmpsb
imul
shrb
sbb
mov
fiaddl
adc
adc
cmpsb
dec
hlt
push
pop
inc
cmp
sub
sbb
dec
imul
lds
push
dec
call
adc
test
mov
sub
inc
cmp
pushf
sub
pusha
lods
aam
pop
xor
mov
cmpsb
add
mov
test
pop
pusha
jno
push
dec
rorb
xor
call
pop
inc
pop
test
mov
mov
das
and
mov
nop
in
xchg
cmp
and
mov
fbld
inc
xchg
push
pop
push
in
xchg
je
call
fisubrl
lock
lret
xchg
inc
ja
insb
loope
hlt
adc
rcr
inc
inc
sub
pop
fdivr
arpl
mov
shll
xorb
scas
xor
call
add
mov
push
xchg
clc
outsb
sbb
and
or
imulb
jo
or
addr16
pop
roll
clc
pusha
jl
fucomp
sbb
mov
fwait
or
sub
test
mov
ss
mov
jo
enter
out
cmpsl
xor
jbe
and
jle
mov
out
add
jbe
mov
pop
push
mov
pop
add
ljmp
fmuls
js
cli
lods
inc
rcll
and
in
clc
cmp
or
sbb
mov
lock
adc
nop
lds
sbb
xchg
jae
mov
out
lcall
aam
rorl
xor
push
sbb
scas
outsb
xorb
inc
pop
in
jne
scas
xchg
push
icebp
cmp
addb
cwtl
js
mov
and
pop
adc
xchg
push
scas
push
adc
jp
insb
lahf
int3
xchg
dec
mov
testl
call
test
or
mov
divl
dec
lcall
sub
cmp
xlat
inc
xor
xor
inc
mov
add
mov
inc
or
pop
repz
ret
push
and
cmp
pop
stos
jae
pushf
das
lock
inc
ficomps
sbbl
leave
cwtl
cmpsl
aas
push
mov
and
jmp
mov
test
or
add
pop
clc
jmp
sub
xor
ds
sbb
sbb
fidivrs
testl
and
mov
or
adcb
push
push
insb
adc
rolb
inc
and
sarl
or
pop
push
jle
stos
arpl
lret
dec
je
or
lds
jle
jp
aad
xor
addr16
jmp
lods
and
add
sbb
repnz
pop
mov
add
or
push
sub
push
jl
or
cmc
aad
inc
das
rcll
dec
and
jle
push
test
push
rcrl
rolb
adcl
lcall
clc
andl
xchg
test
cs
mov
sbb
dec
dec
add
jbe
adc
scas
aam
into
movsb
bound
mov
pop
push
mov
js
mov
ret
decl
adc
notb
dec
push
sbb
add
cli
push
orl
shll
scas
sub
xchg
mov
call
pop
ret
sbb
mov
imul
dec
sti
shrb
scas
push
dec
jmp
cwtl
inc
pop
add
cli
push
rorb
sbb
out
fimull
mov
cmp
add
in
test
lcall
add
sub
xor
jno
dec
sbb
adcb
cmp
iret
fstl
or
jp
jmp
and
negl
dec
je
cmp
aas
push
pop
sar
jo
repz
jl
fninit
and
pop
xor
rolb
shlb
out
ret
out
mov
add
mov
out
cmp
jnp
mov
xchg
dec
repnz
xor
adc
add
add
xchg
leave
mov
repnz
dec
mov
fadd
pop
or
push
arpl
into
mov
bound
mov
mov
jle
mov
push
movsl
and
push
push
push
or
pop
es
inc
pop
adcb
fistpl
jge
rep
ficoml
nop
and
cmp
out
or
adc
loope
lods
add
sbb
sbb
pushf
in
sub
mov
lds
sub
push
stos
xchg
mov
ds
adc
push
clc
push
mov
hlt
repz
repz
and
and
mov
lock
movsb
mov
mov
dec
jp
mov
loopne
xchg
aam
lock
fs
pop
enter
sub
shlb
es
ret
stos
fadds
sbb
inc
lahf
in
sbb
shrb
lods
or
fucom
mov
stc
dec
xchg
movsb
nop
push
dec
sub
add
fwait
cwtl
inc
insb
and
jne
dec
dec
in
int3
arpl
push
data16
jbe
mov
aam
adc
call
cs
sbb
add
jmp
xchg
pop
movsb
xchg
or
push
xor
sub
movsl
jns
sbb
dec
adcl
testl
scas
inc
loopne
int
in
add
insl
test
adc
es
mov
push
xor
xor
into
xchg
push
lret
je
xchg
shrl
push
dec
sahf
mov
adc
loope
inc
xchg
xor
pop
mov
fldl
insl
lret
dec
cmp
popf
and
pop
push
sbbb
add
add
movsl
outsl
dec
notl
test
xor
iret
xor
inc
cs
aaa
cli
andl
xor
xor
push
inc
bnd
add
push
ficomps
vpsubsw
loope
pop
mov
fs
int3
xorl
cltd
cmp
inc
sub
lds
shl
int
pop
mov
inc
inc
jnp
and
push
mov
push
xchg
push
push
adc
clc
fisubl
sbb
inc
sbb
sbb
arpl
lds
mov
call
add
lahf
sub
shl
mov
or
sbbb
leave
xchg
adc
pop
mov
rorl
ljmp
pop
mov
mov
inc
in
push
inc
leave
stos
mov
mov
clc
push
pop
and
mov
dec
and
sbb
aam
xlat
push
cmp
mov
adc
jle
xchg
xchg
inc
push
mul
mov
xchg
cmp
mov
ret
and
mov
std
pop
sbb
cmpsl
loope
popa
pop
sub
cmp
or
lods
sbb
sbb
mov
pop
notb
mov
jg
push
or
cmp
popa
movsl
pop
mov
js
push
xchg
xchg
pop
fadds
adc
or
xchg
fwait
dec
vcmpps
daa
lods
subl
lock
ficomps
cmp
jbe
mov
adc
sub
dec
cmp
popf
push
inc
push
or
mov
push
xor
sub
sub
aad
xchg
push
imul
sbb
cwtl
mov
add
aas
mov
arpl
mov
cmp
push
nop
or
xor
cli
neg
test
push
lods
outsb
out
xchg
xchg
daa
pop
sbb
js
or
aad
xor
je
add
pop
pushf
nop
jns
push
jp
push
incb
cwtl
cmc
ss
pop
ja
lock
cmp
pop
rclb
push
pop
cmp
or
in
cmpsb
mov
add
roll
fimull
pop
or
inc
imul
push
xlat
lea
inc
sbbb
jp
nop
and
fisubl
ja
out
test
mov
aad
inc
and
push
enter
adc
or
dec
js
mov
add
sbb
push
adc
rcl
pop
jo
dec
popf
dec
xchg
lcall
adc
orl
mov
sub
xor
cmp
pop
ret
inc
cld
jae
inc
mov
imul
scas
pop
daa
rclb
jmp
or
movsb
push
xor
and
movsl
cmc
adc
or
and
mov
and
jno
mov
dec
sub
add
jns
or
inc
jge
aaa
fcomps
push
shrb
and
xlat
dec
add
xor
jno
pop
scas
imul
mov
loope
inc
cwtl
pusha
mov
cmp
cmpsb
xchg
test
scas
fcomi
sub
mov
fs
mov
sub
aas
lods
ret
add
dec
add
loop
fcoml
into
jno
mov
fdivr
sbb
xlat
ficoms
jnp
jbe
arpl
jae
adc
mov
mov
aad
push
jge,pn
pushf
adc
and
scas
pusha
lfs
lret
sarl
into
icebp
adc
push
inc
repz
loopne
lahf
negb
mov
or
mov
das
sbb
pop
xor
add
std
push
jmp
xor
jle
push
repnz
ljmp
cmpsb
mov
lock
shlb
cld
mov
nop
add
and
rorb
push
pushf
sbb
cli
fdivrs
mov
pop
pop
andl
test
ret
xchg
sub
mov
aam
pusha
out
sub
jns
push
add
xor
cmp
inc
out
xchg
push
fdiv
pushf
call
fcompl
dec
lods
sub
test
mov
mov
or
mov
mov
xchg
jne
mov
imul
mov
loopne
insb
inc
int3
sbb
or
pop
pop
jl
out
stc
dec
mov
pop
andps
mov
lods
adc
inc
jmp
jmp
and
rcl
out
hlt
inc
add
outsb
out
lock
xor
mov
insb
ja
shrl
adcb
lods
sub
mov
arpl
test
decl
test
dec
mov
in
daa
int
add
adc
push
mov
das
and
loopne
ja
add
cmpsl
jl
aad
cmp
sahf
fwait
pop
fxch
loope
pop
movsl
or
or
push
dec
push
pop
push
push
xor
notb
arpl
mov
lcall
push
mov
push
push
sub
xor
lcall
sbb
mov
add
pushf
xchg
mov
xor
pop
je
inc
cli
mov
mov
ret
xchg
mov
jl
sbb
jnp
pop
mov
push
cmp
push
mov
nop
mov
xchg
xor
insb
xchg
mov
gs
cmp
mov
ret
cmp
pop
adc
imull
jecxz
incl
hlt
lret
mov
add
pop
add
idivb
rcrl
inc
daa
add
addr16
stos
and
andl
push
cwtl
or
test
and
mov
sub
sbb
jp
pop
and
or
ret
ds
or
aaa
andl
lcall
leave
push
or
rcl
or
jmp
cmp
cltd
jno
std
mov
xor
loope
pop
cmp
sbb
or
test
cmp
sub
mov
arpl
loopne
cs
pop
xchg
dec
or
push
lock
rolb
and
ret
jnp
sub
call
pushf
jo
nop
adc
xchg
pop
aam
ret
punpckhwd
dec
stc
xor
movsb
lods
pop
and
dec
xchg
pop
ficomps
mov
mov
outsb
push
imul
adc
xchg
xchg
daa
xor
lock
outsl
test
mov
jl
and
stos
cmpb
adc
mov
fisttpll
jecxz
inc
sub
xor
adc
stos
push
test
cs
outsl
adc
test
add
jne
popa
loop
std
push
fdiv
cmc
icebp
mov
mov
dec
mov
rcll
outsl
add
icebp
mov
mov
dec
mov
xchg
jnp
idivb
aam
sub
out
mov
je,pn
jns
shl
add
call
repz
pop
adcl
cmp
cmp
lret
js
in
push
mov
xor
sbb
scas
pop
enter
add
xor
cmp
and
xchg
add
pop
sarl
cltd
mov
lock
test
fnstsw
jge
sub
lds
xor
mov
xchg
inc
push
aam
jo
jge
insb
stc
mov
inc
mov
and
mov
subl
lock
imul
xlat
xor
cmpsl
mov
or
and
or
imul
gs
popa
sti
and
inc
insb
popf
mov
sub
inc
or
mov
stc
mov
and
xchg
jbe
sbb
icebp
inc
mov
or
sbb
mov
xor
daa
cmp
pushf
sub
add
jns
sbb
or
pop
mov
loopne
popa
inc
dec
and
jnp
pop
test
pushf
push
pushf
push
clc
and
shll
in
fildl
xchg
cmp
mov
pop
mov
outsl
test
and
adc
testb
cmp
dec
push
dec
mov
xchg
imul
or
mov
jno
sub
aaa
cmp
cmp
cmp
push
shll
xchg
inc
or
inc
pop
and
or
or
push
testl
xor
ret
jmp
movb
js
test
push
mov
mov
ficomps
cmp
mov
xor
push
es
fsubl
imul
dec
lds
repnz
or
dec
pop
push
mov
xchg
mov
movsl
pop
xchg
pop
mov
les
cwtl
lods
mov
xlat
inc
int
popf
inc
xlat
movl
les
xor
test
cmp
loopne
cs
mov
imul
bound
adc
inc
mov
je
jo
sarl
inc
fisttpll
inc
aaa
ret
jecxz
jecxz
jbe
shrl
icebp
test
daa
js
rcl
je
lea
dec
jmp
xor
jo
dec
mov
xchg
fadds
pop
mov
lods
enter
push
jmp
std
cs
inc
sub
push
inc
cmpsl
cmp
push
js
aas
push
clc
aad
dec
dec
pushf
outsb
lds
mov
loope
cmp
ret
jl
or
aam
out
xlat
arpl
js
or
in
arpl
scas
mov
cmpsl
ret
jp
jmp
jle
push
addb
inc
mov
push
je
jecxz
ror
xchg
or
nop
mov
inc
mov
aam
mov
gs
pusha
mov
mov
loopne
out
lahf
filds
cmp
jno
and
jge
jge
or
push
cmp
or
scas
or
xchg
mov
mov
cltd
int
rorb
pop
movsl
nop
sbb
cwtl
inc
sbb
add
or
out
jne
add
lods
lahf
test
in
mov
aas
fsubl
mov
mov
inc
cmp
pop
mov
inc
out
adcb
imul
sub
sahf
cwtl
mov
mov
mov
mov
or
xchg
lret
pop
mov
je
or
int
push
mov
mov
les
out
jp
movsb
xor
mov
sbbl
fcmovu
mov
push
cmpsl
adc
in
outsb
dec
mov
hlt
into
aas
jge
dec
test
test
loope
movl
inc
int3
cmp
push
loopne
dec
inc
scas
xchg
insb
mov
fs
mov
sysret
xchg
popl
leave
mov
dec
ret
add
cli
lcall
stc
mov
jg
les
addr16
dec
or
stc
push
xorb
mov
sub
inc
loopne
das
pop
xchg
push
push
sbb
mov
rolb
sarb
mov
or
imul
xlat
xchg
popa
dec
je
out
mov
push
push
sbb
stos
jno
add
out
adc
adc
push
mov
lcall
leave
add
daa
cmc
mov
cmp
mov
insl
jo
hlt
mov
jp
jmp
das
out
stc
ret
xchg
hlt
sub
xlat
stos
sbb
pop
into
aam
push
js
int3
sub
xor
int3
lcall
loopne
adc
jbe
notl
cli
jo
sbb
cmp
mov
dec
rclb
je
jb
mov
dec
insb
outsl
sbb
and
jg
jns
ret
out
loope
addl
lock
pop
shl
push
mov
and
and
add
bnd
push
loopne
sbb
or
addr16
push
stos
adcb
dec
cli
and
cmp
sub
in
xchg
fstps
xlat
mov
mov
orl
out
test
lock
jle
sub
lret
int3
mov
loop
cld
outsb
or
cmpb
out
mov
sbb
adc
rcl
cli
add
jle
adc
cmp
push
inc
lea
incl
xchg
cmp
cmp
dec
ret
adc
adc
mov
push
push
inc
sbb
cmp
adc
cmpsb
hlt
inc
stos
cmpxchg
inc
repnz
sbb
es
out
and
push
inc
cmp
loope
shlb
imul
fadds
loopne
aad
call
mov
jle
adc
cmc
push
adc
js
mul
push
jl
gs
adc
repz
add
jg
adc
cmp
test
mov
in
aas
std
icebp
cwtl
sub
jb
cmp
popf
xlat
stc
out
hlt
and
ds
adc
sub
cli
xchg
push
push
push
test
inc
lea
fbstp
mov
test
fwait
adc
jno
aad
xor
lret
bound
daa
and
out
int
nop
dec
mov
cmova
hlt
add
or
push
cld
leave
nop
sub
dec
ss
mov
add
popa
xor
sub
push
mov
mov
jle
fsubr
inc
sub
add
sbb
dec
lods
lret
std
or
cwtl
inc
inc
sbb
add
enter
mov
pop
lahf
mov
in
movsb
addr16
xor
sub
rcll
sub
push
ds
add
mov
stos
sub
jmp
adc
mov
jg
daa
imul
push
xor
jne
dec
pop
inc
stc
xchg
adc
icebp
scas
test
in
or
sbb
sub
frstor
mov
push
cmpsb
xorl
lock
cwtl
mov
inc
mov
movsl
mov
notb
dec
xchg
movsl
and
outsl
shlb
adc
and
jnp
imul
dec
pushf
cwtl
and
or
mov
aam
pop
mov
fcomip
pop
clc
cmp
xchg
cmp
sbb
inc
aam
pop
sahf
pusha
ja
inc
movsb
loopne
ja
sbb
loopne
dec
repz
push
or
pop
bnd
hlt
clc
sbbl
mov
or
and
jae
sbb
sbb
or
inc
scas
mov
add
into
pop
enter
add
push
daa
adc
faddl
or
and
jo
mov
ljmp
dec
jnp
popa
and
sbb
dec
rorb
dec
sbb
ja
or
lds
insl
stos
lods
push
into
fwait
movsb
roll
pop
hlt
add
mov
mov
call
sub
ja
call
fidivs
mov
adc
xchg
xor
mov
push
js
mov
ss
xorb
cli
mov
mov
mov
jl
mov
ss
shl
hlt
decl
mov
mov
rolb
out
inc
mov
and
xchg
pop
cmp
push
add
add
sbb
xchg
mov
and
sbb
dec
jns
or
or
xor
test
dec
les
dec
ss
int
sbb
jo
ret
or
cmpsb
xchg
in
movsl
test
xor
mov
dec
mov
fmull
cmpsl
cmp
adc
cli
mov
js
ljmp
mov
hlt
lock
jmp
roll
push
gs
movsl
mov
jg
in
push
dec
fnstenv
jmp
cmpsb
cmp
lods
xor
ljmp
shlb
sarl
icebp
pusha
inc
insb
xor
test
sub
jnp
rcr
lds
fstl
adc
int3
cmpl
xchg
push
shll
mov
adc
xor
loopne
dec
mov
lret
inc
ret
adc
xor
jns
or
into
and
adc
in
push
pop
sbb
int
enter
test
fidivl
and
test
jl
adc
ret
mov
test
sbb
sbb
inc
add
pop
add
rcrb
adc
loopne
out
xor
sahf
xor
imul
mov
jo
bound
and
daa
scas
js
rcll
stos
int3
push
jecxz
mov
in
push
add
std
cmc
daa
sahf
inc
int
les
je
pop
xchg
add
or
test
mov
adc
jmp
mov
or
cmp
testb
fisubl
mov
add
xor
andb
jecxz
xchg
mov
dec
je
adc
mov
xor
loopne
fstpt
roll
mov
xor
lcall
andl
fnsave
insb
xchg
xor
jle
insb
jmp
mov
jle
xchg
insb
lods
cs
mov
imulb
or
xchg
cmp
loope
cmp
aaa
sbb
icebp
cmc
adc
ljmp
mov
pushf
popf
movsb
jp
dec
pushf
jecxz
mov
and
inc
out
mov
mov
add
mov
mov
pop
rcr
add
aas
rcl
pop
mov
movl
cs
sbb
insb
xor
cmpsb
sbb
adc
cmp
loopne
arpl
fiadds
jecxz
cli
nop
mov
add
sbb
outsl
das
hlt
sbb
jo
stc
adc
jle
test
sub
jle
and
push
iret
aam
dec
inc
shrl
fists
imul
cmp
aas
cwtl
jns
or
dec
cmp
mov
lret
aam
jne
push
out
jne
int
aad
loope
repnz
and
adc
fld
dec
mov
add
das
inc
push
inc
push
or
fld
sub
push
imulb
ret
jg
lods
lahf
adc
pop
cmpsb
or
out
loope
xor
jmp
inc
mov
rcl
push
ficoml
insl
xlat
dec
cltd
call
jp
jne
or
and
sbb
out
hlt
outsb
push
cld
cld
inc
dec
pop
push
push
jno
pop
shlb
lahf
pusha
jg,pt
or
mov
pushf
pop
mov
inc
push
ret
dec
mov
shll
js
push
mov
add
aam
in
mov
es
sbb
fidivs
rorb
jg
cmp
int
in
test
xchg
gs
jne
movsb
cmp
or
fmull
bound
addl
cmpsl
add
repz
adc
inc
add
notl
inc
mov
les
inc
test
dec
adc
cwtl
movsl
iret
pop
mov
movsb
pop
xchg
test
inc
nop
mov
daa
xor
pop
pop
cmp
rclb
mov
ret
es
pusha
jbe
ret
or
xchg
imul
push
mov
inc
daa
cmp
cmp
sub
pop
sbb
out
mov
ds
mov
mov
or
push
adc
add
ljmp
je
test
add
fistpl
test
mov
xchg
cmp
lock
add
mov
add
sub
sbb
mov
jmp
mov
dec
scas
rclb
scas
clc
stos
out
and
subb
sbb
pop
dec
sbb
icebp
dec
add
push
aaa
lds
psllq
inc
inc
mov
mov
movsb
sub
mov
repnz
in
xchg
shlb
push
test
pop
fs
inc
pop
lock
push
sbb
pop
push
test
mov
jbe
mov
jecxz
aas
add
mov
xchg
cmpsb
call
xchg
cmpsb
pop
lock
rol
bound
ret
test
cmpsl
adc
xchg
loop
les
aaa
aam
loop
or
rclb
aad
xchg
and
mov
add
pusha
rol
add
inc
or
popf
add
lcall
sar
jg
push
icebp
adc
add
clc
adc
fisubs
push
add
fs
cmp
adc
ret
mov
push
ret
push
mov
cmp
jecxz
jmp
cmp
and
pop
sub
movsl
push
sub
mov
dec
fwait
sub
pop
mov
loope
jmp
scas
daa
mov
aas
repnz
int3
sub
or
cmp
sub
sub
mov
fstpt
fisubl
add
addr16
mov
push
mov
stos
les
mov
pop
jle
fsubp
mov
sbb
xor
ret
pop
mov
jo
xchg
push
push
hlt
jmp
test
sub
ret
lds
add
xchg
sub
aaa
pop
pusha
aaa
insb
test
sahf
adc
pop
out
clc
lock
sahf
popf
push
rorb
out
ret
jmp
xor
mov
add
pushl
sbb
and
lahf
jb
xor
push
push
or
cld
add
push
mov
dec
pusha
shr
mov
loope
ficoms
pushf
pop
outsb
es
sub
adc
ret
pop
dec
push
pop
cwtl
inc
loop
jecxz
test
cs
cmp
inc
out
sub
pushf
pop
outsl
mov
inc
bound
les
idivb
jle
pop
jle
addb
cmp
test
inc
stc
incl
xchg
xor
in
adc
loope
dec
pop
bound
icebp
pop
adc
inc
sbb
xchg
call
std
mov
pop
icebp
fwait
pop
push
xor
mov
mov
push
sub
fdivp
sub
adc
sbb
xchg
mov
es
aas
jmp
aas
jg
adc
and
jg
pushf
bound
cmpsl
jge
xor
sbb
or
stos
mov
daa
clc
inc
cmpsb
int
push
mov
adc
dec
dec
or
scas
ret
and
sbb
das
sbb
es
jecxz
or
or
inc
daa
mov
rorb
aam
mov
out
stos
stos
adc
cmp
das
test
mov
out
mov
dec
add
xchg
fs
loop
data16
inc
andb
js
mov
xchg
and
adc
sbb
xchg
clts
sbb
and
cmpb
jecxz
orb
pusha
insl
mov
push
add
scas
rorl
in
les
movb
or
aas
clc
aas
mov
jl
movl
call
enter
scas
popf
inc
adc
lcall
cs
adc
gs
xor
insl
test
pop
or
add
inc
in
lret
add
pop
or
lcall
sbb
cli
push
andb
cmc
js
mov
cmp
pop
or
rcl
pusha
xor
js
in
mov
test
and
mul
pop
push
not
std
jo
inc
cwtl
cwtl
in
xor
lock
cld
addl
cltd
cmp
cmc
mov
jb
test
lock
sbb
and
sub
enter
ss
and
loopne
lret
loopne
ds
push
sbb
mov
loope
ss
or
adcl
testb
mov
dec
int
mov
mov
xchg
mov
mov
ds
ret
das
std
mov
xor
and
cmp
xchg
sub
add
jmp
dec
es
adc
neg
mov
push
dec
xor
xlat
mov
xchg
es
jmp
adc
lods
or
dec
imul
loopne
jg
mov
dec
jne
test
inc
xor
mov
dec
int3
gs
xchg
inc
daa
jle
outsl
vpmaxub
and
cmp
in
xchg
pop
pop
nop
enter
mov
ja
sti
and
data16
repz
in
pop
incl
push
ds
test
mov
inc
popf
into
mov
push
lock
mov
pusha
aaa
loop
out
xor
inc
sbb
and
xor
in
sbb
lock
adc
xor
sub
mov
sub
popf
sbb
inc
out
push
dec
inc
sbb
xor
popa
fisubrl
jne
or
in
push
mov
sbb
inc
jecxz
cld
sbb
mov
lcall
jno
fisttps
repnz
or
daa
movsl
pop
shlb
mov
mov
cmpsb
jle
sub
jp
andl
ljmp
aaa
cmp
add
sub
insb
mov
dec
clc
dec
movsl
out
mov
ds
or
adc
and
cmc
mov
mov
jmp
pop
mov
mov
mulb
or
sbb
daa
cmc
cmc
sbb
shrl
movsl
fwait
ljmp
clc
sub
jge
sbb
aaa
jne
stos
insb
lods
pop
or
mov
stos
ja
loope
lea
mov
mov
xchg
adcb
shlb
mov
test
fisubl
fs
pop
xchg
nop
sbb
out
inc
jle
pop
pop
xchg
sub
sbb
stos
ret
push
daa
and
and
les
mov
mov
dec
jo
push
jg
sbb
sbb
push
test
js
cmp
arpl
dec
loop
in
or
cmp
fdivl
push
mov
push
sti
rcrl
cmp
cmpsl
mov
inc
rorb
rolb
pop
scas
in
dec
lods
ret
js
rorb
int
mov
jmp
xor
sub
cmpsb
cmpsb
lret
push
movsb
outsl
aad
adc
mov
jle
or
mov
or
and
sbb
push
andb
pop
sbb
push
xor
arpl
or
std
push
adc
sahf
les
movsl
and
mov
call
push
test
add
sub
call
ret
popf
es
imul
lock
push
mov
or
sub
insl
dec
aam
mov
cld
or
or
cmpsl
push
cmpb
mov
adc
loopne
sbb
inc
test
push
pop
xchg
arpl
xchg
ret
xchg
sub
sbb
jmp
adc
sbb
sar
mov
dec
xchg
xor
shrb
mov
shrb
mov
or
sub
lods
jp
add
pop
cmpsl
inc
and
push
mov
int3
mov
and
jo
push
inc
fadds
sub
push
push
daa
cmp
ficoms
or
cmp
sub
out
sub
and
iret
cmp
lods
jg
repnz
and
incl
mov
in
pop
les
add
in
enter
mov
rorb
fmull
inc
sti
push
sub
pop
mov
mov
inc
sar
cmc
shlb
adc
lret
dec
rorl
push
xchg
sub
aam
push
icebp
dec
mov
addb
mov
aaa
mov
and
inc
jl
inc
loope
hlt
cli
add
lds
jbe
jo,pt
rol
pop
push
in
xchg
or
pusha
neg
pop
orl
jp
pop
imul
lods
sbb
idivb
decb
rolb
or
je
shrb
js
adc
and
add
shrb
xchg
cmp
mov
incl
mov
cli
mov
lock
fwait
test
loop
daa
mov
daa
in
dec
enter
ds
or
xor
inc
loope
fdivl
cmp
or
sbb
jge
add
js
cli
notl
hlt
push
push
add
sub
pop
sahf
into
cmpb
cld
pusha
fidivrl
inc
and
sub
imul
movsb
cmp
or
in
loopne
sub
pop
out
cmp
out
inc
inc
mov
outsl
inc
mov
mov
shlb
or
fmull
and
dec
test
mov
in
inc
in
xor
xchg
or
loope
dec
or
mov
aam
js
popa
cmpsb
dec
fdiv
pop
sbb
movsl
sbb
add
ss
ret
lea
dec
and
test
inc
push
iret
jmp
mov
pop
push
fwait
cmp
xlat
inc
add
aas
cli
xchg
loope
std
dec
mov
shrb
xlat
or
xchg
push
int
xor
add
test
ret
sbb
clc
les
mov
fldl
mov
test
xchg
test
pop
sbb
data16
js
push
push
jo
lock
out
mov
lods
bound
push
mov
push
andb
mov
nop
dec
gs
addr16
sub
mov
test
lock
jp
imul
ljmp
insb
mov
add
aaa
les
push
mov
mov
sbb
push
loope
mov
inc
test
test
pop
inc
mov
or
sub
popa
pop
insb
mov
add
clc
and
clc
cwtl
sahf
cmpsl
cli
mov
and
mov
mov
dec
cmp
shlb
dec
aam
xor
fisubrs
lods
cmp
jo
and
pop
test
addr16
lods
inc
sub
orb
jbe,pt
xchg
push
test
aam
adc
mov
movb
mov
jp
insb
cmpsl
add
lret
test
xchg
or
sbb
rcrb
xchg
mov
add
xchg
sub
je
test
sbb
sbbb
mov
jae
or
cmc
jg
mov
data16
xchg
lods
jbe
data16
stos
push
xor
cmp
push
dec
mov
das
dec
out
xor
or
mov
push
and
outsl
mov
mov
cwtl
lds
adc
in
sub
movsl
rolb
ds
jnp
or
push
and
fdivr
mov
jmp
dec
cltd
movsb
sbb
cltd
add
stos
out
inc
test
cltd
mov
push
pop
add
repnz
lret
ficoms
sub
inc
and
repnz
push
aam
mov
lock
ds
and
sub
cltd
jbe
mov
or
jne
jmp
mov
jns
sbb
movsl
mov
adc
mov
out
jecxz
inc
je
inc
ljmp
pop
adc
addr16
adc
adc
add
adc
je
dec
cmp
mov
inc
add
hlt
sbb
in
popa
cmc
nop
les
lock
pop
in
push
xor
aad
jp
jbe
jle
xorb
clc
rolb
mov
pusha
icebp
mov
and
nop
add
xchg
cmc
push
cmp
push
push
sbb
addb
jl
out
cltd
adc
lcall
aaa
pusha
icebp
sahf
mov
adc
popf
push
xor
scas
dec
sub
sub
adc
mov
jg
push
icebp
fsubrs
enter
sub
mov
mov
popa
push
aam
dec
loopne
pop
mov
jp
push
and
add
fimull
je
inc
mov
jo
js
add
ret
jns
mov
imul
fcmovnu
push
jecxz
push
aas
cli
sbb
push
mov
xchg
in
enter
mov
mov
fidivrs
outsl
cld
or
fcmovb
mov
adc
orl
pop
xchg
clc
lock
fcmovbe
in
test
or
sub
loopne
insl
incb
sub
mov
cmc
push
sub
cmp
mov
pop
inc
fldcw
mulb
sar
mov
xor
or
push
cmc
aas
mov
cmc
ljmp
xor
rclb
lds
inc
push
pop
lea
stos
mov
ud0
shl
push
push
add
hlt
pusha
data16
push
call
out
pop
xor
in
test
lret
push
loopne
cwtl
xlat
aas
ds
nop
andb
jmp
mov
xor
cmpsb
push
ds
jecxz
pop
bound
scas
mov
cltd
jnp
fildll
jbe
enter
sbb
add
int3
cmp
bound
or
js
add
cld
in
lock
push
insb
mov
jnp
inc
inc
push
negb
es
sub
push
mov
into
add
mov
es
dec
or
or
sub
call
fidivs
pop
stos
lcall
call
and
xor
inc
stos
mov
push
lcall
lcall
sarl
xor
inc
pop
mov
xor
push
lret
pop
push
cmpsb
icebp
add
jmp
fnstcw
adc
lods
and
aaa
push
sub
fidivrl
enter
mov
into
add
adc
push
sar
aaa
shrl
pop
mov
or
and
mov
lcall
adc
jo
xchg
les
movsl
mov
inc
ret
jnp
adc
outsl
shrb
adc
in
das
cwtl
xchg
push
insl
fidivl
lods
shl
mov
cmp
int3
or
mov
dec
inc
adc
ret
adc
int3
dec
or
or
jle
push
fwait
mov
and
dec
cmp
inc
int
jo
and
clc
out
mov
out
mov
shrl
push
subl
mov
cli
or
mov
ret
jae
jo
xchg
or
dec
fsub
mov
nop
push
sbb
nop
or
cmp
cmp
mov
and
in
add
addb
inc
pop
pop
imul
pop
bound
jg
psrad
mov
hlt
mov
nop
std
xchg
sbb
cwtl
mov
xor
insb
jg
sub
push
or
sub
out
imul
enter
add
cmp
pop
push
outsl
add
imul
mov
ror
fwait
hlt
xorl
mov
pop
sub
mov
sahf
dec
mov
sarl
mov
out
test
pop
lea
mov
sbb
mov
xchg
add
ucomiss
clc
add
loope
rcll
int3
pusha
sbbl
and
sarl
shl
pusha
shll
push
clc
shl
clc
mov
hlt
lods
xor
inc
and
imul
push
daa
movsl
fsubrs
fidivrl
mov
sbb
fwait
add
sub
mov
int
outsb
loope
mov
adc
xor
mov
jg
jnp
ja
push
xlat
loopne
orb
pop
adc
bound
adc
ss
xchg
cmp
xor
adc
ficoms
inc
std
push
int3
or
inc
jae
fsub
xlat
inc
pushw
jle
sahf
xchg
cmc
push
push
push
pushf
pop
push
push
sbb
stos
xorl
dec
or
push
rcr
inc
sbb
xlat
shlb
sti
leave
inc
inc
movsb
xchg
inc
cmp
clc
pusha
xchg
xor
push
xor
pushf
cs
pop
fdivr
xchg
and
push
pop
or
adc
aam
mov
mov
aaa
in
push
stos
and
sbb
sub
pop
imul
sub
jno
sub
popa
jge
inc
outsl
in
shrb
or
cmp
xlat
es
addr16
dec
inc
pop
sahf
sarb
add
lea
jl
push
enter
js
loop
in
pop
fdivrs
lods
mov
jge
rcl
leave
stos
lods
scas
pop
sbb
outsb
add
mov
daa
test
ss
movsb
fldl
shl
rcl
add
insl
sub
pop
add
jo
aad
and
fs
push
jecxz
je
cs
fdivl
in
scas
cmpsb
jne
int
mov
cltd
sbb
js
cmp
icebp
push
mov
insb
aaa
daa
mov
or
cltd
adc
cwtl
add
pop
pop
andl
leave
ja
pop
sbb
xlat
jmp
push
add
cli
sbb
xor
adc
and
mov
out
sbb
mov
push
mov
pop
jne
pop
push
pushf
cld
adc
xlat
imul
adc
push
push
cmp
sahf
dec
cwtl
xchg
insl
mov
sub
and
push
and
jmp
je
scas
stos
inc
xor
jae
sub
icebp
mov
bound
je
addr16
mov
dec
sub
fldl
or
xor
sub
std
pusha
enter
xchg
xchg
icebp
stos
lock
pop
loope
test
out
lods
push
pop
xorb
xchg
mov
in
lods
bound
add
add
and
stc
push
push
push
pop
inc
movsl
aad
xor
fadd
mov
sbb
in
sbb
das
dec
cmpsb
lcall
shrd
mov
push
dec
dec
lods
imul
xchg
popf
mov
cld
jo
popa
ja
adc
and
jmp
push
inc
in
add
imul
cmp
lret
push
jns
push
mov
jp
pop
call
and
xor
sbb
fs
cmpsb
cmp
adc
clc
add
ret
jecxz
nop
inc
scas
fistps
add
cmp
lret
dec
jmp
sbb
loopne
jecxz
pop
cmp
jne
mov
sub
mov
iret
mov
add
or
dec
dec
pop
subb
adc
fistl
fwait
mov
out
les
mov
pop
daa
shrl
add
fstpt
repz
push
adc
aas
dec
add
fcoms
int
push
cmp
daa
dec
mov
js
aaa
sbb
ljmp
test
jge
sbb
or
add
enter
inc
dec
jmp
jle
sub
scas
inc
pop
mov
xchg
cmpsb
divl
mov
in
dec
push
push
mov
mov
push
sub
dec
add
dec
jnp
mov
loop
jmp
dec
lea
test
sbb
inc
xchg
add
add
pop
pop
adc
jb
adc
sub
loopne
xchg
adc
adc
jae
testl
or
imul
call
sbb
add
cmpsb
ljmp
or
inc
sub
sub
cmpsb
dec
mov
cmp
jle
orb
std
jge
addr16
xchg
data16
add
in
loope
xor
test
mov
mov
sub
scas
leave
mov
xor
loop
fwait
cmpb
xor
jne
or
xor
push
and
cmp
aad
push
icebp
repnz
inc
mov
jp
int3
lock
daa
push
loope
inc
loope
or
rclb
cld
xor
cli
cli
lock
pop
mov
jb
push
sbb
mov
pop
ljmp
push
lea
or
adc
loopne
add
pushf
push
call
adc
push
jp
adc
inc
notl
dec
pop
je
mov
mov
rcll
jl
lock
cmp
icebp
pusha
cld
and
or
shll
outsl
sti
adc
and
add
xor
aad
pop
out
int3
push
icebp
in
mov
add
setl
std
subb
inc
pop
adc
jmp
inc
ljmp
bsr
xchg
test
in
aas
nop
mov
pop
inc
je
movsb
inc
mov
xchg
sub
repz
mov
jp
inc
sub
sub
xor
xorl
or
aas
mov
loope
dec
and
pop
mov
inc
dec
and
shlb
hlt
push
prefetchw
mov
insl
and
or
mov
add
fwait
mov
clc
fs
shll
jo
adc
mov
dec
add
and
stos
inc
outsb
sub
jo
push
fmuls
jmp
ret
dec
mov
mov
cmc
mov
or
pop
add
pop
sub
icebp
lods
push
leave
add
mov
pop
lods
push
mov
fistpl
dec
adc
or
mov
repnz
jp
inc
push
jecxz
jmp
mov
or
in
add
ds
mov
aaa
test
xchg
and
aad
fsubs
or
loope
dec
bound
xchg
icebp
cmp
outsb
mov
pop
mov
mov
sbb
aad
sub
pop
mov
jmp
fwait
movsl
push
std
shl
sbb
push
andl
sub
in
outsl
aaa
filds
and
mov
push
push
jge
adc
mov
xor
shr
in
adc
in
and
xchg
cmp
loop
sbb
jbe
or
loop
mov
pop
push
and
mov
leave
add
es
fstp
cmpsb
inc
add
cli
or
jge
adcl
push
fnstsw
sbb
fsubp
ret
outsb
loop
int
or
mov
fimuls
jg
std
pusha
xlat
pop
mov
bound
js
int3
mov
inc
push
cmp
pop
mov
pop
jl
repz
aad
jne
pop
jge
inc
xchg
pop
sbb
inc
adc
cmpsl
xor
idivb
sub
cmp
iret
ljmp
jge
mov
adc
pop
mov
mov
dec
test
inc
int3
xchg
adc
jo
lret
pop
cmova
daa
adc
add
subb
sub
jb
faddp
add
lahf
mov
add
aas
jl
jecxz
cs
dec
lods
enter
test
push
mov
rcl
xchg
popa
mov
pop
test
leave
mov
jl
mov
add
push
iret
cs
inc
xchg
shrl
repz
cwtl
repz
inc
sbb
or
adc
and
sub
cs
lcall
sub
loope
sbbl
lea
sti
outsb
sub
sbb
movb
sbb
or
and
std
xor
ljmp
adc
adc
scas
mov
lock
dec
sbb
loop
xlat
adc
jnp
and
call
cmp
and
inc
addb
adc
jae
pop
sbb
cmpsb
or
dec
mov
push
mov
int3
push
or
pop
adc
dec
ret
pop
pop
lret
mov
scas
lret
jno
popaw
mov
pop
or
cmp
js
jbe
mov
xchg
or
or
sub
dec
out
rclb
push
addr16
lcall
jge
bound
dec
or
jo
shlb
or
mov
ja
inc
outsl
ja
rorb
push
xor
mov
rcrl
mov
shlb
sub
push
adc
and
jmp
das
and
xchg
mov
adc
scas
sub
and
jp
sbb
add
cmc
xchg
leave
popf
js
mov
sub
sbb
testb
orl
push
aam
sbb
lock
xor
stos
bound
sbb
jo
pop
loopne
and
lods
rcl
mov
inc
pop
xor
add
ja
push
add
dec
movsb
xor
sub
aas
push
outsl
or
js
cmp
mov
mov
xor
add
arpl
test
dec
fstpl
jae
jb
ja
jmp
leave
pop
daa
sbb
loop
xor
and
adc
mov
push
push
pop
rcrb
push
pop
cmp
xor
inc
dec
movsb
mov
xchg
add
push
jg
enter
outsb
imul
pop
sub
jno
jne
pop
push
pop
fwait
imul
repnz
sahf
inc
aam
adcb
incl
ja
je
add
sub
xor
jns
js
adc
sbb
push
loopne
out
pop
cmp
xchg
cmp
mov
sarl
xchg
js
dec
cmp
pop
add
cli
fldl
xor
xchg
xor
inc
jle
push
mov
inc
enter
stos
sbb
mov
sbb
stos
in
pushf
and
jmp
in
push
jp
mov
cltd
xchg
lea
pop
scas
and
mov
mov
dec
dec
scas
sbb
lret
pop
jno
testb
sub
sub
pop
js
rclb
pop
fnstsw
packsswb
or
jl
pop
xorl
mov
add
mulb
je
push
xlat
inc
insb
in
lea
out
mov
cmp
jns
andl
mov
xor
dec
sub
and
call
xchg
add
xlat
and
mov
scas
fisubrl
stos
lds
mov
mov
xchg
or
push
jl
mov
into
cltd
aas
pop
movsl
adc
inc
test
lretw
push
xor
lret
shl
sub
in
push
xchg
jmp
xor
and
daa
hlt
cwtl
mov
sub
cli
and
rolb
inc
xlat
jge
insl
je
push
jno
dec
mov
jl
or
or
in
out
sarl
cmp
loopne
jge
and
fidivs
xchg
movsl
je
sbb
sahf
xor
outsb
inc
xor
lods
mov
int
pusha
jb
pop
fists
pop
scas
shrb
cmpsl
add
pop
sbb
jno
insl
test
cmp
mov
xchg
xchg
add
roll
mov
dec
shl
push
shll
lods
add
pop
movsb
jmp
and
dec
xor
jo
in
lahf
sbb
pop
sub
sarl
push
out
aaa
ja
or
pop
aaa
mov
mov
pop
inc
and
popa
ret
jp
or
cld
dec
rcl
xor
xchg
pop
cmc
sub
lock
or
mull
int
jmp
inc
push
pusha
push
lds
inc
cwtl
dec
loopne
mov
add
inc
cmc
lock
lahf
cmp
pop
mov
lds
out
aam
or
xlat
add
imul
lods
sbb
xor
das
adc
nop
sub
sahf
out
xchg
sbb
aas
test
arpl
pop
inc
mov
aad
xor
shll
addr16
in
xchg
rcrb
pop
push
or
test
or
sbb
cmp
test
aas
sbb
aad
mov
sbb
jp
lahf
shll
sbb
mov
adc
mov
push
jno
mov
and
mov
sbb
lret
or
adc
hlt
mov
sbb
mov
hlt
mov
jne
jb
adc
dec
jno
mov
and
cmpsb
ret
cmpsl
xor
ror
data16
cs
addr16
lods
fisubrs
push
bound
mov
xchg
sbb
cmc
push
mov
stos
sub
loopne
mov
test
out
cmc
clc
push
clc
dec
mov
movsl
xlat
jecxz
js
fistl
dec
faddl
mov
xchg
push
rcll
jne
aaa
mov
outsl
mov
jbe
cli
inc
inc
pop
jl
in
js
push
mov
cmp
das
rcll
pop
dec
out
lret
pop
lcall
sbb
mov
jns
and
mov
add
push
jae
inc
data16
adc
movsl
pop
pop
sbb
test
lahf
mov
loop
cwtl
call
sti
cmp
mov
pop
test
inc
dec
xchg
sbb
test
aas
ss
xchg
sbb
and
or
test
push
add
iret
pop
push
movsl
loope
pop
inc
shlb
cs
mov
sub
pop
lahf
and
pop
dec
mov
push
inc
lret
mov
es
cli
sbb
jge
jnp
and
lahf
cmp
xlat
mov
sarl
sahf
xchg
cmpsb
mov
inc
jmp
fnstsw
aam
mov
aaa
cmpsl
add
add
and
stc
mov
hlt
shrl
push
cli
xchg
test
outsl
dec
push
jb
xor
sbb
cmp
add
or
mov
pop
test
add
push
xor
and
movsl
mov
cmp
mov
fsts
ljmp
inc
mov
aam
mov
scas
popf
ss
imul
push
cmpsl
xchg
pop
or
into
ja
lods
or
add
inc
into
inc
in
xorb
cli
loope
push
and
and
fwait
stc
or
mov
fmul
mov
das
pusha
add
ds
cld
or
ficoml
dec
xchg
adc
lock
inc
jb
int3
fstl
lods
jle
enter
std
push
or
sub
orb
popa
cmpsb
insb
sbb
in
sbbb
enter
fisubl
popl
or
add
outsl
sahf
sti
jno
inc
fnstcw
add
jnp
mov
leave
dec
pop
ja
cmp
and
push
orb
or
push
std
js
daa
sbb
jp
add
inc
mov
gs
inc
out
int
or
push
add
outsl
xchg
inc
movsl
pop
fcmovnb
mov
imulb
xor
and
inc
inc
mov
movups
or
xlat
jne
sub
shr
dec
lea
sbb
sti
sti
adc
jb
xchg
fwait
xlat
das
inc
movsl
das
xchg
push
mov
push
out
jecxz
push
jb
scas
fs
loop
adc
push
daa
lods
and
lcall
jg
xchg
jl
test
out
mov
mov
lds
sbb
cwtl
adc
sub
cmp
ficomps
and
cmp
stos
adc
xorl
aam
test
push
dec
inc
loopne
vpaddq
cmp
aam
cmp
nop
dec
arpl
or
hlt
movsb
aad
outsb
add
loopne
popa
sbbb
push
lret
hlt
push
add
js
mov
push
inc
mov
andl
xor
mov
mov
xor
xchg
cltd
and
xchg
pop
out
cs
mov
lcall
mov
fstpt
adc
mov
mov
aad
je
add
sbb
shrb
mov
mov
lret
or
mov
dec
jnp
xchg
call
stc
pop
sub
push
aaa
adc
subl
pop
adc
movsb
add
lock
inc
ffreep
or
loope
jne
test
sarl
or
inc
std
cwtl
in
lds
movsl
cmpsl
push
or
cmpl
clc
jno
loope
nop
rcrl
add
aas
mov
lods
mov
imulb
push
xlat
fs
in
mov
in
ss
or
jo
fs
add
hlt
push
roll
sbbb
es
gs
xchg
lea
pop
nop
pop
push
push
cmp
xor
mov
imul
lods
push
jl
jle
dec
insl
test
aam
push
or
in
fdivs
mov
jns
icebp
dec
cmp
lods
inc
ret
adc
add
mov
mov
mov
inc
mov
jnp
xor
mov
mov
adc
xor
outsl
cltd
movsl
test
test
sti
inc
fcoml
mov
ficoml
dec
insl
mov
mov
jmp
mull
insl
cmp
mov
xlat
sbb
movsl
test
je
je
aad
in
xchg
incl
or
mov
inc
shl
into
mov
rorb
int
scas
xchg
and
clc
inc
inc
outsb
lahf
decb
or
loop
dec
movsb
ja
stc
mov
mov
ret
cmp
and
hlt
andl
inc
cmp
jl
rclb
dec
mov
cmp
jae
mov
xchg
lock
xchg
and
addl
sbb
xlat
and
hlt
adc
xchg
or
popf
jo
cwtl
add
xchg
pop
lods
mov
loopne
test
xor
push
je
ret
mov
xchg
mov
loope
mov
xor
clc
sarl
adc
rcrb
stos
sarb
mov
clc
xchg
les
mov
pop
je
push
cwtl
rcpps
lock
movsl
or
outsb
es
imul
cmc
or
mov
lret
push
lods
ja
fs
sbb
lret
rclb
jae
xchg
flds
xlat
jmp
int3
insl
icebp
rcrl
inc
and
inc
cmpsl
adc
es
test
pop
aaa
loopne
mov
fistpll
cwtl
xchg
adc
test
or
fs
xchg
mov
hlt
pop
jno
test
and
push
or
sub
into
flds
es
xchg
mov
fisttpl
push
or
dec
and
cmp
pop
call
ror
dec
pop
pop
enter
lcall
shlb
sahf
ja
xchg
dec
sbb
roll
add
cmp
mov
mov
xor
mov
adc
lock
clc
push
sub
adc
ret
push
push
ds
lret
fistpl
push
adc
scas
aad
inc
pop
mov
mov
pop
rorb
cmp
insl
bound
push
pushf
and
cmp
popa
rorb
daa
or
mov
mov
loope
lret
pop
popf
imulb
pop
arpl
pop
inc
test
add
sarl
cmp
loope
mov
lods
ret
push
sbb
dec
jb
addr16
xor
ss
shrl
ret
pop
inc
xor
dec
pop
cltd
aad
xchg
rcll
jb
loope
push
imul
jmp
das
mov
lahf
ror
push
xchg
fsubl
lods
daa
dec
jae
shrl
adcb
cmp
push
pop
scas
lret
cmp
adc
orl
push
jl
xor
sbb
repnz
scas
cmpsb
add
and
inc
xor
repnz
call
and
sub
fcmovnb
pop
mov
jo
stc
mov
sbb
jb
mov
push
dec
inc
jp
imul
mov
mov
mov
ficompl
mov
stc
mov
out
mov
adc
je
fsubrs
jle
or
stos
stc
icebp
mov
test
divl
mov
ret
aam
cwtl
and
add
and
cmp
jne
iret
push
incl
sub
call
rol
shll
sub
iret
and
mov
mov
dec
movsl
lahf
sub
or
push
dec
inc
and
dec
testb
imul
pop
inc
pusha
scas
xor
xor
les
jbe
int3
or
mov
mov
dec
aas
push
pusha
push
jne
xor
lock
and
xchg
adc
dec
or
push
sbb
arpl
insl
loopne
cmp
jecxz
test
xchg
add
add
cmp
les
fbstp
pop
sub
sbb
loopne
cmp
xor
jmp
sbb
jnp
pop
mov
je
mov
movsb
mov
fnstcw
cld
mov
mov
jp
jecxz
xor
js
callw
das
xor
add
and
cmp
mov
cmp
test
inc
aad
ret
test
dec
incl
xchg
inc
fistpl
dec
popa
and
sbb
mov
jno
adc
mov
jo
pop
or
mov
out
inc
jmp
cwtl
icebp
dec
xchg
jl
aas
cmp
mov
jns
and
lcall
adc
mov
jl
inc
xchg
scas
int3
sub
xchg
inc
mov
ja
pusha
adc
jnp
jmp
addb
sahf
imul
mov
mov
jno
repz
xor
xlat
rorl
imul
cltd
lahf
xor
adc
mov
inc
lahf
or
popa
xor
popf
inc
scas
shrb
je
popf
sbb
or
push
xor
aas
pop
ljmp
ret
push
addr16
pop
pop
int
rcrb
add
outsb
and
mov
push
lods
icebp
sti
mov
xchg
add
pusha
mov
xor
push
jb
imul
fwait
mov
xchg
pop
xor
and
mov
add
fld
clc
fcoml
dec
ss
clc
loopne
divb
lds
lret
into
fnsave
xor
xor
or
scas
add
ljmp
ja
fwait
cmp
inc
stos
lods
sar
lret
sti
loope
xor
fs
fs
push
cmp
ficomps
aad
and
lret
sbb
push
dec
cld
popf
in
sbb
xor
pop
int3
dec
pop
lcall
inc
mov
fcmovne
xor
ss
mulb
mov
lock
ljmp
lcall
cmpsb
test
xchg
mov
or
lahf
sub
inc
dec
dec
adc
jmp
xorb
std
inc
insb
mov
inc
jno
lea
cmp
pop
and
inc
and
imull
loope
in
dec
notb
das
lea
cli
ret
dec
fidivrs
adc
jle
lock
xchg
mulb
or
addr16
xchg
cs
cmpsb
outsb
ljmp
sbb
push
iret
jae
add
add
movlps
push
xchg
push
in
loope
js
repnz
loop
jne
clc
jns
dec
jno
lret
add
cltd
ret
sub
loope
inc
shr
data16
test
stos
mov
int3
scas
addb
mov
inc
mov
sub
pop
mov
pop
gs
loopne
fdivs
dec
bswap
lock
add
fcomps
aad
mov
dec
loopne
test
xrelease
xor
adc
lock
hlt
out
mov
jae
xor
cli
push
iret
das
pop
and
pop
adc
leave
inc
push
outsb
nop
mov
inc
pop
jl
aam
cmpb
push
inc
xchg
loopne
pop
cli
inc
fldt
hlt
xor
xchg
xchg
dec
jbe
sbb
add
dec
and
xchg
rcr
leave
jg
daa
sbb
xchg
xor
je
aas
loop
call
dec
and
lcall
out
sub
sub
fwait
mov
mov
sub
roll
test
xor
mov
mov
mov
xor
mov
mov
mov
sbbl
or
push
add
out
outsb
and
push
push
clc
xor
push
jnp
push
lods
inc
fldcw
xchg
or
in
mov
xchg
inc
sub
jno
inc
andb
into
inc
dec
dec
cmp
mov
mov
data16
frstor
dec
mov
clc
into
cmp
inc
das
adc
cwtl
js
fmuls
fisttpl
int3
inc
mov
mov
pop
lock
aad
push
lcall
scas
xor
pop
in
adc
es
pusha
mov
ja
mov
xorb
pop
fiadds
sbb
sub
adc
addr16
in
mov
push
sbb
lds
gs
lods
xor
and
fcoml
push
add
in
sub
add
adc
inc
add
ds
in
pop
push
sbb
adc
ja
in
lea
sbb
push
xor
and
orl
les
in
adc
int3
testl
push
push
loop
cmp
jp
jo
fists
mov
daa
sarb
xchg
sbbb
mov
lock
fsubrl
pop
jo
add
add
dec
outsb
mov
subb
add
mov
testb
add
mov
and
data16
clc
lods
call
mov
cmp
ret
push
ss
scas
cmpl
or
jo
popa
mov
xchg
inc
inc
lea
dec
decl
js
popa
adc
and
cmp
mov
mov
cli
lods
push
push
ret
inc
xchg
pop
cwtl
adc
out
and
mov
jmp
dec
mov
add
sbbl
jae
jmp
lahf
cmpsl
lahf
ljmp
push
mov
fmuls
and
push
mov
enter
mov
inc
inc
adc
jo
sbbb
xchg
push
sub
test
mov
cmp
cmpsl
daa
inc
add
shlb
scas
div
arpl
ds
sahf
fcmovu
sbb
je
dec
mov
xchg
adc
popf
lock
scas
out
sbb
faddp
fsubs
pop
xchg
imul
xor
lods
sub
out
adc
filds
lds
or
dec
fcoms
xchg
les
sub
jp
inc
mov
push
mov
out
inc
or
ljmp
jp
pop
sub
out
inc
mov
xor
clc
addb
and
test
push
add
cmp
sti
inc
xchg
dec
in
cmpsl
enter
movsl
jmp
repnz
int
mov
mov
pop
popf
loopne
push
xor
dec
and
dec
inc
pop
clc
cs
jecxz
adc
aaa
inc
les
jp
sbb
lods
xchg
add
sbb
pop
cli
icebp
or
cmp
lcall
push
aam
mov
int3
push
lcall
sub
sub
dec
add
ret
es
outsb
inc
in
mov
dec
cld
sub
pop
mov
movsl
loopne
cmp
jo
mov
sbb
jmp
lods
ret
js
outsb
inc
loopne
xor
mov
popa
popf
clc
shll
jp
repnz
out
sub
mov
mov
stos
pop
sbb
adc
fs
aad
outsl
push
inc
xchg
in
mov
hlt
sbb
test
pop
xchg
push
inc
out
xchg
xlat
and
icebp
and
mov
mov
inc
pop
aas
or
mov
inc
ja
outsl
cmp
scas
lea
shll
mov
xor
jo
daa
dec
push
idivl
push
into
adcl
sub
arpl
cli
clc
dec
ss
scas
cmp
cld
call
inc
push
pop
iret
push
fwait
pop
cli
inc
mov
ss
pop
push
movsb
adc
pop
jmp
scas
movsb
outsb
jl
adc
sub
xchg
push
or
int
dec
mov
pop
bound
or
mov
lods
pop
inc
xchg
pop
mov
data16
mov
ss
add
bound
adc
cmp
adc
lahf
shl
jmp
or
inc
inc
sar
jl
adc
mov
or
sub
loopne
cmc
rolb
lret
xor
add
lret
fldcw
test
mov
subl
movsl
mov
in
sub
pop
out
push
lea
aam
mov
jo
or
push
icebp
push
jnp
sbb
jle
mov
cli
scas
sbb
sub
xchg
dec
mov
es
mov
sbb
mov
sbb
or
mov
lods
pop
movsl
and
jp
cmpsl
test
and
adc
xchg
xorl
pop
ljmp
push
scas
mov
loope
loop
xor
not
aam
subb
les
inc
int
dec
push
test
and
cs
lods
cmpsb
mov
cmp
xor
mov
dec
mov
mov
sahf
jae
xor
adc
xor
push
mov
push
lret
andl
pop
insb
xor
pop
jge
xor
cmpsl
jae
push
icebp
int
jecxz
push
ret
arpl
adc
jge
xor
rcll
or
inc
orb
enter
jnp
pop
cld
mov
adc
js
add
sub
mov
cs
popa
pop
and
sbb
inc
cwtl
or
cld
sub
cmp
loop
cmc
cmp
sbb
add
mov
mov
mov
xchg
add
sar
aaa
cli
imul
xor
mov
pop
or
stos
add
adc
mov
pop
std
or
sbb
test
sbb
sti
pop
xchg
clc
loopne
jp
pop
cli
in
mov
xchg
mov
int
addr16
popf
push
daa
mov
push
subl
hlt
inc
sub
loopne
ficompl
inc
cmp
sbb
lods
sbb
mov
and
mov
adc
mov
and
mov
xorb
mov
sahf
loopne
inc
xlat
fistpl
mov
push
sbb
shlb
sub
sub
mov
sbb
fwait
enter
mov
icebp
outsl
adc
fldl
cmc
cmp
and
push
mov
push
and
cmpsb
jno
add
xlat
cmp
bound
cmpb
mov
punpcklwd
jle
cmp
scas
push
out
add
jbe
into
int3
xor
cmp
and
push
add
stos
loope
adc
jle
fmuls
daa
shlb
or
cmp
dec
mov
xor
in
inc
fbld
add
adc
es
cmp
fmull
jge
sub
jbe
aaa
cwtl
int
mov
in
aaa
xchg
inc
xchg
into
push
mov
jg
clc
es
adc
push
mov
ror
push
mov
call
adc
cld
mov
clc
mov
jo
movsb
adc
adc
clc
pop
add
lcall
pop
inc
shl
lods
testb
cmp
daa
stc
and
mov
mov
inc
jae
sbb
fcomps
cmp
clc
or
fsub
or
add
stos
jmp
incl
shll
cmc
mov
icebp
outsl
jecxz
mov
add
mov
les
mov
cmp
cld
pop
inc
mov
test
lock
xor
inc
mov
jo
adc
mov
mov
inc
jbe
mov
or
bound
lods
add
cmp
jl
pop
test
fimull
test
dec
hlt
loopne
popf
and
cs
mov
or
ds
loopne
or
fsubl
lock
jno
dec
cmp
in
fsts
lahf
pop
push
and
pop
adcl
xchg
inc
pop
and
push
cmp
adc
dec
leave
xor
movsb
lahf
jg
sbb
mov
xor
mov
mov
lcall
out
and
push
out
adc
mov
push
je
stos
dec
mov
clc
or
add
push
je
or
jl
nop
pop
adc
ret
sbbb
int3
sub
cmc
mov
test
sbb
push
test
pop
insb
and
sahf
xchg
cmp
sahf
mov
sahf
adc
push
or
xchg
xchg
sub
nop
lock
push
add
jp
push
fisubrs
movsb
xchg
lock
push
jne
ret
sub
jae
mov
push
icebp
addr16
inc
inc
lcall
lcall
xor
movsl
call
cmp
mov
shlb
push
sub
add
mov
pop
pop
ljmp
sbb
mov
std
inc
ret
inc
sub
inc
push
xchg
outsb
or
ja
outsl
data16
add
cmpsl
ds
adc
xor
lahf
cmc
addb
sbb
and
pop
adc
mov
imul
push
lock
push
pop
cmp
ret
add
jp
test
cs
and
clc
add
jle
into
push
orl
mov
lods
inc
fsubl
inc
xchg
fcomps
jne
mov
push
lock
add
jb
dec
inc
pop
mov
mov
or
fadds
ljmp
aas
rcrb
xor
cmp
push
divb
es
mov
imul
fimull
fwait
shlb
fstpt
cmpps
and
ffree
addr16
lret
mov
adc
roll
jo
in
cmc
add
clc
roll
outsb
ret
jl
test
lahf
jno
enter
loopne
subb
out
movsl
inc
adc
std
clc
out
fdiv
or
dec
lock
jp
mov
push
fsqrt
dec
xor
dec
jg
frstor
dec
cs
or
inc
sub
sub
rcrl
movl
push
xchg
and
fstpl
sub
and
add
stos
jmp
push
das
cld
test
clc
scas
icebp
loop
push
jne
lods
push
lods
stos
mov
push
loope
and
clc
fldenv
mov
mov
sbb
xor
hlt
or
dec
subl
adc
jbe
push
sub
add
or
cld
dec
and
jp
pop
and
aas
xor
pop
cltd
nop
adc
and
sub
mov
dec
jge
fdivs
push
mov
jbe
rsm
leave
xor
imul
adc
push
xchg
pop
cmp
std
sbb
fdivrs
scas
mov
fsubp
jl
ret
neg
ljmp
ljmp
cli
push
cld
data16
scas
push
push
pop
xlat
mov
fwait
mov
dec
repnz
stos
add
nop
adc
inc
ja
scas
pop
pusha
cmp
jne
adcb
mov
rclb
movsl
dec
cli
call
and
pop
popa
jg
lret
clc
add
jl
repnz
cmp
popa
inc
inc
and
xor
xor
fcoml
jmp
test
pop
shlb
push
sbb
jp
divb
stos
test
mov
mov
mov
xor
push
xor
xorl
xor
xchg
lcall
sbb
in
mov
xlat
in
or
inc
stos
daa
or
ret
dec
xchg
inc
inc
arpl
jbe,pn
scas
scas
lret
adcb
stos
xchg
dec
mov
xchg
pop
rolb
sarb
pop
lds
popa
cmp
filds
cld
lcall
mov
rclb
cmpsl
sbb
insl
inc
pop
dec
out
inc
cmp
push
lods
jg
scas
insb
adc
or
mov
mov
xor
mov
je
sti
adc
jp
mov
test
pop
mov
int
outsb
inc
cmc
mov
adc
and
loope
inc
push
cld
pop
outsl
xor
or
mov
lahf
test
sbb
loope
and
adc
sub
sbb
mov
clc
fimull
dec
mov
inc
testl
and
jge
or
push
jmp
adc
stc
mov
dec
pushf
jmp
mov
dec
add
jo
dec
inc
addr16
hlt
pop
pop
push
xor
jno
addr16
or
icebp
xchg
ljmp
popa
cmpsb
fcoms
adc
jecxz
or
add
push
or
xchg
clc
xchg
sbb
push
fidivl
mov
addr16
out
clc
ss
aaa
push
loop
cmp
loope
sbb
loopne
les
insb
les
jle
dec
mov
adcl
loopne
in
fs
aam
push
inc
inc
fists
addr16
scas
push
sub
mov
mov
mov
test
in
test
add
inc
push
sbb
mov
jecxz
and
inc
arpl
daa
int
faddl
add
outsl
enter
out
or
sub
sbb
xor
loopew
add
mov
test
xchg
loopne
pop
inc
or
mov
rol
adc
mov
mov
push
ret
pop
xor
pop
or
push
inc
enter
inc
out
adc
gs
cld
loopne
bound
out
fs
ds
out
push
sbb
jmp
out
sub
movb
ss
mov
std
add
xchg
subl
push
cmp
ret
dec
xchg
in
pop
insb
loope
mov
or
push
ficompl
xchg
push
xor
push
add
jbe
sub
icebp
add
call
repz
mov
xchg
insl
mov
pop
add
into
decb
mov
inc
pushf
cmp
cmp
roll
mov
xchg
mov
dec
mov
rorb
jp
mov
jno
and
rol
jmp
cmp
lea
inc
fmuls
es
fisubrl
movsl
mov
mov
dec
jle
mov
mov
loopne
mov
dec
adc
adc
loope
inc
dec
jle
sbb
hlt
xchg
ficoms
divb
das
stos
push
push
xor
add
outsb
mov
dec
push
pop
sahf
stc
or
insl
add
lds
pop
enter
orl
mov
or
jne
aaa
ss
and
les
jl
mov
mov
xor
jnp
mov
add
jo
and
or
mov
inc
outsl
stos
push
lods
jmp
xchg
or
pop
adcl
ja
add
mov
push
loope
ret
inc
call
mov
mov
in
sbb
adc
lcall
inc
roll
xor
dec
pushf
test
add
lock
and
rcl
xchg
outsl
aad
jbe
dec
mov
les
mov
in
out
push
dec
or
es
shl
js
das
pop
hlt
dec
or
and
dec
movsb
ljmp
jo
into
and
gs
push
mov
sub
call
inc
sbbb
mov
cmp
and
mov
or
scas
mov
jle
mov
or
jnp
pop
lret
lods
sahf
jge
adc
loope
jge
cmc
nop
ret
xor
mov
xchg
fs
cli
xchg
dec
shl
testl
loop
xchg
pop
rolb
push
mov
or
push
or
add
jge
lock
push
mov
adc
repnz
loop
jl
jge
or
dec
in
roll
inc
and
loopne
shlb
sbb
push
fidivrs
sbb
add
mov
adc
aam
pop
cmp
lock
stc
jae
jns
bound
aaa
lea
stos
xor
addb
in
loop
push
stos
div
and
pop
push
shll
mov
inc
adc
add
dec
push
sub
loopne
mov
inc
clc
xor
fistpll
push
add
push
mov
les
mov
mov
lahf
xor
clc
scas
mov
ret
les
sub
pop
xor
or
sbb
push
ja
lahf
cltd
sub
mov
xchg
xor
lret
or
cmc
jns
iret
add
lcall
incb
subb
test
stos
nop
fiaddl
fdivrp
sbb
push
inc
js
cs
dec
pusha
mov
fs
jmp
jmp
push
call
jp
pop
in
push
int3
mov
mov
pop
test
dec
call
insl
adcb
inc
sbb
inc
nop
pop
stos
das
lds
or
xor
sub
ljmp
scas
jmp
popa
outsl
loope
lea
mov
lret
and
mov
push
dec
lock
xor
mov
mov
insl
imul
scas
ljmp
adc
je
or
jo
adc
stos
stos
mov
cmc
popf
xchg
dec
adc
repz
cmp
mov
mov
add
mov
adc
sbb
and
mov
sbb
fsts
pop
and
popa
repnz
inc
adcb
jne
mov
xor
dec
movsb
stos
lret
fistps
inc
test
inc
sbb
scas
mov
jnp
mov
pop
test
jge
bound
and
inc
fdivs
xor
xor
push
sbb
shlb
loopne
es
xor
xor
idivl
sbb
loope
pop
sti
dec
fld1
jle
push
push
push
mov
sbb
inc
pop
push
int
call
sbb
loope
cltd
dec
adc
push
cmp
mov
sbb
mov
dec
aam
pushf
dec
shlb
or
jo
adc
and
mov
les
fisubrl
or
mov
sarl
fnsave
sbb
sahf
in
sub
aas
outsb
xor
in
xchg
dec
scas
sbb
push
or
arpl
data16
mov
cs
aad
lret
pop
ret
lret
push
pop
ret
jns
fldt
adc
dec
adcl
mov
aam
cmp
mov
push
push
je
jne
mov
pop
xchg
inc
or
movsb
add
insb
jg
inc
or
add
cmp
add
fsubl
sti
sbb
xchg
cwtl
sbb
aam
lret
adc
ret
repnz
and
shld
mov
aaa
mov
fnsave
rcrb
mov
lret
movsl
sub
add
or
sub
ljmp
xor
add
movsb
int3
out
dec
scas
add
adc
inc
ret
push
outsl
jle
mov
mov
cmp
xorb
push
rorb
fwait
ds
mov
movb
rorb
push
xchg
cli
mov
loopne
clc
mov
jno
mov
les
xor
jl
js
cmc
pusha
or
lahf
test
jp
les
sbb
mov
jg
pusha
mov
fldenv
pusha
popf
pop
cmp
pusha
inc
stos
outsb
bound
in
mov
and
ds
pop
or
mov
into
add
inc
add
inc
inc
inc
fcoml
sbbl
fcoml
movsb
cli
or
stos
mov
dec
loop
xchg
add
push
fs
mov
add
sti
cmpsb
int
addl
or
jb
mov
call
xorl
mov
sub
cmpsb
ret
orb
fmuls
repnz
xchg
movsl
fs
cmpsb
xchg
cmpsl
cmp
pop
enter
push
js
cli
add
popfw
xchg
shl
sbbl
dec
fcmovnu
and
xor
and
and
or
xor
in
rclb
jnp
icebp
pusha
mov
xchg
ds
or
xchg
jmp
jl
cmc
les
xor
cmpsb
dec
inc
ret
imul
rcl
pop
lock
cmp
sbb
xchg
sbbb
call
jge
shl
push
sub
orl
sub
sub
pop
push
data16
icebp
mov
xor
mov
adc
mov
xchg
or
ljmp
jp
ficomps
adc
rorb
mov
std
seto
push
loope
shlb
fadds
out
sub
push
push
push
jo
lcall
pop
mov
xor
adc
mov
fldt
ret
lcall
or
and
pop
push
js
cli
jg
jne
sbbl
sub
xchg
clc
push
out
add
or
adc
das
adc
roll
and
test
test
ficoml
fiaddl
out
arpl
and
xchg
scas
lock
sub
cmp
fs
xchg
push
inc
xlat
push
add
inc
cli
imul
and
cli
loop
jle
repnz
mov
jmp
cmp
add
jle
push
jge
fwait
dec
insb
add
adc
enter
inc
mov
sbb
insl
stos
mov
nop
jb
push
out
mov
xor
push
fs
in
and
mov
jbe
dec
imul
jbe
ss
xchg
lret
rcl
cs
jecxz
inc
pop
pusha
mov
jg
and
loop
dec
add
mov
mov
cmp
fwait
pusha
fisttps
in
adc
sbb
cwtl
bound
add
test
xor
test
addr16
sub
stos
push
cli
and
in
adc
xchg
ja
and
shl
adc
jmp
mov
mov
xchg
inc
push
mov
fldl
sub
das
add
xchg
add
push
or
rcrb
out
mov
mov
inc
and
sbb
push
dec
add
or
repnz
sbb
jb
les
dec
xchg
or
jle
xchg
dec
dec
ljmp
and
sub
test
or
inc
pop
loopne
test
inc
adc
sub
or
xchg
fadds
subl
jnp
mov
dec
test
bound
push
xor
cmp
mov
push
icebp
ja
fs
push
xchg
into
xor
insb
lret
and
rcrl
add
fimuls
es
aad
mov
das
mov
cmp
es
inc
sti
inc
mov
inc
cmp
inc
out
pop
out
ss
mov
mov
xchg
fldl
sbb
lret
jmp
jle
jne
dec
into
out
stos
lcall
sbb
or
cmpb
repnz
cmpl
adc
pop
adc
into
jge
call
mov
movb
add
cmp
jmp
and
adc
fwait
xlat
mov
into
sub
repnz
rorl
pop
stos
inc
pop
pusha
rcll
xor
sub
rolb
inc
iret
or
add
mov
test
and
xor
ficoms
aam
ret
movsl
adc
rcrl
sbb
hlt
invlpg
pop
mov
and
add
divb
aam
test
mov
pop
adc
push
xchg
lret
mov
mov
cld
loop
sub
xchg
jecxz
ret
pop
and
cld
incl
out
int
rcrb
test
xlat
fucomp
xchg
add
and
testb
xchg
mov
ror
aaa
xlat
movsl
mov
cmp
add
pusha
mov
lret
mov
pop
movb
lret
dec
mov
enter
push
movsb
xor
push
xchg
dec
loop
push
es
outsl
and
lds
scas
lods
pop
mov
jmp
dec
push
mov
loop
xchg
cmc
jp
addr16
xor
hlt
das
push
lock
xchg
fdivrp
roll
push
ljmp
add
popa
into
sub
mov
aad
inc
loop
mov
out
adc
sbb
lds
out
idivb
inc
adc
jo
ss
shlb
mov
xchg
ss
shrb
mov
mov
pop
inc
and
cli
pop
sbb
xor
cmp
lock
mov
dec
xor
mov
das
stos
sbb
ds
add
xlat
bound
pop
mov
imul
dec
jno
adc
add
arpl
in
out
mov
sub
adc
cmc
push
fs
data16
jecxz
mov
insl
ret
inc
andb
cmpsl
dec
fs
fsubr
in
ja
push
lcall
and
pushf
pusha
jae
mov
pop
jle
inc
dec
xor
outsb
lods
les
push
add
and
mov
shlb
mov
sub
les
and
push
sti
add
add
repnz
fists
test
sahf
imul
ret
scas
jo
push
xorb
subl
lods
sub
int3
xchg
mov
orb
add
cld
js
cld
pop
or
dec
pop
pushf
sub
ret
outsb
pop
xchg
aam
push
sub
inc
xchg
jae
xorl
aad
imul
cwtl
push
xchg
fs
fisubrs
aam
or
xchg
xchg
mov
pusha
out
push
jl
les
or
or
paddq
mov
lahf
xor
add
sub
fbld
cmc
inc
pop
ret
das
sti
mov
dec
sub
addb
mov
ret
mov
pop
fstpt
inc
inc
rorl
and
out
cmp
cmp
sub
fs
lods
push
sarb
xchg
das
pop
mov
orb
mov
fmul
and
mov
outsb
pusha
xchg
daa
into
enter
push
popa
repnz
mov
adcl
rcrl
push
push
adc
lock
mov
lock
adc
inc
inc
xor
or
push
add
jne
inc
push
push
movsl
adcb
sbb
incl
movl
pop
nop
sbb
mov
xor
sbb
pop
test
fcomps
addr16
sub
aas
int
call
jns
xor
xchg
shl
cwtl
aam
mov
or
inc
dec
mov
or
mov
xchg
icebp
jo
mov
inc
loope
rcrb
out
lock
add
loop
dec
les
adc
cmc
daa
mov
mov
mov
jo
mov
into
stos
jbe
mov
xor
mov
insb
jo
arpl
hlt
ret
or
jbe
stos
mov
add
mov
movsl
and
xchg
shlb
mov
or
cs
out
cmp
cmp
pop
loopne
and
rcll
mov
mov
loopne
cmpsb
loopne
adc
mov
sub
xor
in
pop
lds
out
xchg
cmp
add
stos
popa
das
adc
mov
and
pop
or
sub
outsb
cmp
mov
out
sub
fadds
cli
loopne
xorl
xchg
lcall
mov
scas
inc
jle
add
jle
mov
fistps
nop
mov
adc
mov
dec
mov
enter
divb
or
xchg
lea
mov
inc
into
xchg
or
fiaddl
mov
jp
scas
cmp
lea
add
call
ss
mov
and
mov
andb
dec
mov
jno
pop
inc
sub
rclb
out
pop
mov
xchg
mov
out
lret
jl
add
mov
adc
adc
lahf
out
pop
je
or
lock
out
test
dec
jecxz
aaa
out
jno
jo
ljmp
lock
push
and
sbb
inc
inc
lock
ds
ret
mov
repnz
mov
inc
sub
cli
inc
sbb
leave
lock
or
in
adc
call
jbe
xchg
int
lahf
mov
cmp
jl
cmp
out
or
fwait
sahf
or
out
arpl
push
jmp
clc
daa
mov
xchg
push
stc
dec
mov
pop
sbb
mov
ret
adc
scas
dec
jge
inc
or
fcmovb
or
into
mov
and
mov
mov
pop
cld
and
add
stos
jge
push
and
cli
clc
enter
repnz
rcr
sbb
clc
fadd
add
andb
adc
xor
mov
push
mov
pop
addb
sub
cmp
jae
sub
fiadds
int3
mov
mov
ret
cmp
nop
xor
shll
hlt
or
pusha
or
pop
lcall
fwait
pop
mov
aam
notb
cmp
mov
fisubs
xor
mov
adc
adc
xchg
cli
addl
sub
rcl
lds
xorb
pop
and
inc
repz
xchg
in
sbb
or
dec
pop
or
cmpl
sahf
test
push
nop
ss
sbbb
xchg
xchg
dec
cltd
bnd
subb
fcoml
cmp
sub
lods
pop
pop
pusha
sub
adc
cmpl
imul
cmp
mov
mov
in
push
movsl
or
inc
push
mov
into
das
das
or
sbb
xchg
and
dec
aam
and
daa
cmp
lods
and
cwtl
pop
cs
cmp
js
cwtl
adc
lods
jae
inc
sub
adc
pop
imul
aaa
sub
insb
or
dec
test
pop
mov
inc
add
push
xchg
lds
dec
dec
add
mov
adc
movl
bound
pop
fisubs
aam
pushf
pop
test
fadds
out
adc
enter
xor
fldcw
popf
xor
stos
in
cwtl
fdivp
lock
xchg
mov
push
mov
cmp
sub
adc
into
pushf
pusha
enter
cmpsb
push
cld
sbb
or
and
adc
xlat
adc
xor
xchg
mov
incb
stos
inc
add
popa
out
push
icebp
dec
scas
sbb
sub
xchg
push
pusha
or
scas
inc
dec
add
test
push
daa
push
in
lret
insb
jle
lods
xchg
js
pushf
mov
ret
inc
jp
ds
test
out
mov
push
pusha
xchg
lods
outsl
xchg
push
dec
xor
jbe
aad
fimuls
out
sbb
shlb
or
test
fidivrl
sbb
sub
lods
ljmp
cmp
cld
aaa
xor
test
mov
repnz
mov
loop
call
xor
jmp
sub
int
rorl
push
jp
push
pop
mov
mov
ljmp
push
jae
jb
nop
or
stos
movsb
mov
mov
lcall
cmp
loopne
imul
shrl
les
xor
bound
push
stos
repnz
aam
cmp
mov
in
add
rcrl
jmp
sbb
mov
inc
cltd
clc
xor
push
inc
cmp
cmp
out
jne
xor
outsb
lret
roll
testl
adc
pusha
and
add
adc
add
data16
xchg
in
sbb
enter
or
push
cld
and
mov
cmp
and
clc
cmpsb
imul
into
lret
or
aam
cmpsb
mov
mov
aam
push
pop
xlat
push
and
inc
fbld
mov
test
add
mov
decl
jne
jns
mov
pop
mov
std
adc
mov
or
inc
mov
sbb
sbb
ds
dec
jnp
and
inc
arpl
dec
cmpb
sti
sbb
popf
pusha
mov
sub
leave
popa
fwait
in
fisubrl
inc
push
lret
push
pop
or
inc
rcl
mov
ljmp
cs
mov
push
push
test
and
in
rcl
or
test
adc
xchg
inc
es
mov
scas
and
xlat
test
cmp
add
ret
in
insl
les
sbb
adc
mov
mov
roll
das
mov
unpcklps
sbb
insb
lcall
cli
add
aas
cld
inc
dec
popa
mov
jne
cwtl
jo
lcall
sbb
orb
mov
rcrl
add
or
pop
sbb
inc
or
inc
cli
int3
inc
out
pop
pop
fwait
orb
add
sbb
daa
bound
inc
clc
arpl
inc
lods
mov
enter
add
adc
aam
adc
sbb
lock
pop
icebp
test
mov
mov
int
and
in
fdiv
shlb
adc
add
daa
sahf
or
dec
rolb
push
inc
mov
movb
jbe
les
icebp
adc
cwtl
push
jle
push
fcompl
clc
pusha
push
add
push
repnz
inc
add
loope
pop
jp
jne
hlt
rorb
cs
sbb
loopne
sub
inc
aaa
aas
sub
sub
ja
fstpl
in
mov
in
pop
into
sub
addl
mov
mov
loope
jmp
jnp
shlb
or
call
add
xchg
jl
pop
stos
or
insl
hlt
das
mov
sub
push
add
and
stos
jg
mov
js
je
out
cwtl
scas
push
mov
xchg
push
xchg
pop
mov
dec
lahf
xor
rclb
hlt
pop
nop
mov
incl
inc
lcall
pushf
mov
imul
je
sbbb
sbb
nop
shlb
adc
sub
and
or
cld
sub
test
mov
cmp
sub
imul
jp
lods
clc
sbb
lahf
pusha
mov
outsb
add
cwtl
pop
ljmp
outsl
shr
xor
clc
cli
lods
std
rorl
insb
mov
xchg
test
sbbl
aas
lret
je
aaa
xor
divb
arpl
test
push
test
xchg
adc
sbb
push
pop
mov
lea
outsb
mov
xor
lcall
mov
lods
sub
push
les
in
aas
sbb
add
adcb
push
sub
pusha
sti
or
mov
aaa
in
mov
cld
stc
fwait
sub
aas
aas
popa
call
gs
dec
xchg
jo
xorb
fcomps
cwtl
decl
mov
out
pusha
sub
add
js
push
test
test
mov
mov
aad
test
mov
mov
cmp
dec
roll
inc
in
adc
scas
aad
loopne
es
fistpll
push
sub
inc
push
fwait
and
cmp
sub
sarl
push
inc
mov
cld
test
cmp
bound
jle
xchg
adc
inc
test
sub
add
mov
fldl
pop
sub
cmp
inc
rcr
clc
insl
xor
cmc
imul
daa
je
or
jmp
not
sarb
je
shr
bound
movsb
pop
mov
xor
cld
cmpsl
jmp
mov
insl
std
xchg
lock
pop
fdivs
inc
ljmp
sub
jo
sbb
incb
adc
loope
dec
aas
push
jnp
test
sbb
mov
pusha
jge
shlb
push
dec
cmp
or
add
pop
lea
fiaddl
push
inc
xchg
jbe
movsb
pop
push
add
sub
jl
mov
push
or
pop
loope
lods
cmp
sbb
pop
xchg
dec
mov
andb
fprem
inc
out
pop
push
pop
mov
dec
insl
cmc
adc
and
div
push
xchg
inc
popa
in
mov
jo
je
jg
mov
mov
ja
push
les
push
enter
mov
dec
mov
sub
test
popa
dec
adc
mov
add
mov
push
sbb
add
clc
add
or
jg
movb
fbld
leave
ret
mov
pop
clc
mov
or
pop
jg
adc
cmp
push
std
les
rclb
or
pop
icebp
scas
sub
mov
incl
das
test
mov
mov
and
xchg
test
push
fs
ljmp
scas
jp
add
loopne
inc
pop
nop
imul
and
adc
cli
pushf
adc
adc
jbe
std
push
cli
mov
jnp
pop
adc
inc
pop
lods
mov
inc
aaa
sub
mov
cli
mov
fisubl
add
pusha
dec
popf
rclb
jp
out
and
ss
xlat
rol
pusha
jg
jnp
push
sub
xor
lret
push
inc
sub
dec
push
xor
inc
mov
loop
rcll
or
add
fdivs
xchg
stos
adc
mov
loopne
cmpsb
sahf
xchg
mov
cmc
ja
mov
xchg
xor
jb
in
adc
mov
mov
stc
sub
mov
ret
dec
js
jmp
lea
js
mov
js
mov
pop
lods
loop
xlat
sub
sub
adc
repnz
push
dec
fisttps
pop
inc
sub
rcrb
aam
ret
add
rclb
jg
ret
inc
fildl
or
mov
in
add
lods
or
push
test
cli
or
cmp
addb
jg
popa
rcll
jp
push
and
xor
cltd
js
push
and
inc
mov
cmovl
test
pop
inc
ja
sahf
inc
inc
fmuls
inc
insl
lock
sar
fnstsw
cld
aaa
int3
xchg
add
cmp
cmp
push
andb
sub
mov
add
fdivrl
sbb
pop
cmp
das
bound
xchg
daa
add
jle
and
push
ret
call
adc
push
mov
decl
faddl
xchg
add
jg
lret
es
insl
mov
gs
aas
in
mov
lcall
icebp
loope
rolb
dec
scas
push
adc
dec
shlb
jg
pushf
or
aam
arpl
and
popa
into
insb
lods
aad
dec
fidivl
cmpsb
xor
push
fiadds
mov
subl
jne
cwtl
inc
leave
dec
ja
mov
repnz
fwait
xor
add
pop
inc
xor
sub
es
jns
mov
inc
mov
shll
ret
cmp
and
stos
cwtl
adc
pop
xchg
testl
das
testb
push
push
loope
pop
xor
push
aam
push
cmpl
xor
shll
incb
mov
ja
adc
mov
subl
icebp
adc
mov
test
add
fadd
or
cmp
and
sti
and
push
mov
lret
ret
xor
mov
cmp
cmp
jo
add
scas
scas
daa
add
mov
cmp
pusha
shrl
inc
out
dec
add
pop
sarb
adc
push
sbb
jbe
sbb
call
loopne
bound
dec
fdiv
and
and
xor
sbb
or
movsb
push
jno
shl
test
pop
clc
push
xchg
ja
stos
pop
ss
outsb
loop
push
dec
outsl
aam
in
and
js
dec
cmp
mov
sbb
mov
xchg
out
dec
and
filds
push
ret
add
lods
inc
lods
jmp
jmp
daa
add
adc
mov
popa
ljmp
shll
cmp
inc
jecxz
push
cmpb
mov
sbb
sbb
dec
movsl
mov
pop
pop
outsb
sub
mov
push
in
push
insb
push
mov
dec
push
loop
push
adc
shrb
add
mov
leave
clc
data16
in
jns
push
dec
pop
inc
push
pop
sub
xchg
in
sbb
or
shl
sbb
bound
pop
lcall
lods
mov
iret
xchg
xor
dec
dec
mov
pop
and
in
mov
xor
add
cli
pop
lock
or
dec
jb
popa
je
adc
xlat
inc
loopne
rolb
fcmovb
lock
andl
mov
jne
lret
sti
pusha
andb
xchg
lret
sbb
loope
negb
insb
bound
add
stos
bound
loope
mov
scas
adc
lret
mov
insb
pop
inc
cmc
and
mov
jno
adcb
inc
in
ds
push
or
cli
cmp
lds
mov
ret
adc
jmp
pop
sub
adc
popa
push
je
and
mov
leave
lcall
das
mov
ret
mov
fistl
sbb
sub
das
and
out
aad
sbb
shr
jge
mov
adc
xor
aaa
aam
sbb
cmp
loopne
and
dec
mov
sahf
mov
es
add
sub
dec
push
jecxz
dec
sbb
xor
fdivp
cmp
imul
xor
data16
outsb
or
test
lret
and
mov
js
pop
dec
rcr
out
loop
movb
or
mov
add
push
sahf
push
push
lahf
ds
sbb
and
rorl
lock
repnz
mov
in
mov
lods
mov
mov
ljmp
fnstsw
pop
ja
ds
mov
loope
add
cltd
adc
inc
cmp
fwait
pop
adc
into
outsl
enter
and
movl
add
or
or
inc
fidivrl
push
aam
jo
pop
and
jb
add
pop
add
mov
or
adc
push
mov
cltd
adc
xchg
fldt
mov
sbb
push
loopne
sbb
dec
clc
push
mov
popa
mov
aas
or
in
sti
rorb
push
mov
jnp
or
cli
cmp
cmc
jmp
jne
pop
add
adc
clc
sub
cltd
in
cli
cmp
push
mov
mov
mov
dec
mov
mov
xchg
pop
and
mov
mov
cmp
loopne
jo
mov
ds
inc
ljmp
lock
call
dec
add
jg
cwtl
xchg
dec
pop
mov
mov
adc
cmp
out
inc
pop
sbb
dec
xlat
nop
push
xor
mov
or
mov
repnz
lcall
incl
adc
movsl
cmp
pop
es
xor
jne
cltd
jno
lret
loope
test
jg
outsb
mov
fwait
or
mov
cld
inc
leave
push
mov
cmp
scas
imull
and
fnstenv
inc
sub
xchg
pop
insb
loopne
dec
lods
daa
shlb
add
sarl
out
out
cmp
cld
mov
xchg
sbb
cmpsb
cli
push
jmp
dec
jo
sbb
aad
movsl
add
fisubrs
fldenv
mov
sbb
sub
dec
mov
out
lret
jb
adc
icebp
mov
add
popa
push
dec
and
data16
xor
jle
aas
pop
pusha
nop
lea
push
mov
jae
movsb
std
xor
sbb
ret
shrb
sbb
adc
mov
cmp
mov
mov
cli
icebp
movsb
add
cmp
mov
ds
push
shrb
pusha
ss
sahf
push
in
pop
and
in
std
fwait
lea
add
jg
push
insb
stos
pop
daa
movsb
test
add
jge
inc
mov
add
adc
lcall
jmp
cmpsb
clc
sbb
jle
lret
out
xor
ja
out
ret
adc
dec
dec
daa
cmp
jg
ds
sbb
shll
in
push
scas
dec
mov
jl
nop
mov
inc
add
mov
orl
xchg
mov
jmp
repz
mov
iret
js
lds
jbe
and
fwait
add
pop
and
push
js
int
scas
cs
xchg
push
mov
add
or
lods
or
sarl
scas
sti
paddb
mov
pop
stos
jg
inc
sub
arpl
jmp
leave
push
lods
jne
mov
scas
adc
inc
cmp
pop
or
je
in
fsubrs
and
xor
jo
aad
test
les
js
cli
sub
cltd
push
in
jg
test
js
sti
dec
test
scas
loope
repz
mov
mov
cmpsl
pop
mov
gs
inc
scas
jb
or
daa
dec
and
aam
lcall
adc
neg
jge
gs
mov
cli
dec
sahf
jb
mov
insb
lahf
ds
andb
push
imulb
pop
pop
push
xchg
mov
jg
inc
and
je
add
cmp
cwtl
xchg
push
adc
out
push
cmp
and
mov
fwait
jnp
push
dec
loopne
jecxz
nop
xor
cli
xorb
lods
aas
push
data16
push
fwait
lods
mov
clc
dec
lods
nop
mov
rcrb
movsb
clc
push
push
pop
xor
mov
je
sahf
xor
xor
mov
jecxz
pop
jo
xor
mov
mov
inc
ja
inc
inc
int
jle
push
les
test
imul
adc
cmpsb
mov
inc
xor
adc
movb
cmp
bound
mov
push
sbb
xlat
jge
cmpsl
call
add
push
cli
cs
push
adc
shlb
jge
je
xchg
mov
dec
and
cmp
xchg
xor
add
pop
test
and
mov
jbe,pn
xchg
fstpt
xchg
mov
fidivrs
sbb
fsubl
movsl
xchg
add
xor
push
aas
lea
ret
pushf
gs
hlt
movsb
mov
mov
divb
cmp
sbb
mov
pop
dec
test
icebp
popf
fwait
out
ret
xor
or
cwtl
cmc
xchg
test
cmpxchg8b
rclb
or
mov
xchg
push
xchg
jnp
pop
mov
inc
pcmpeqb
jae
test
in
fsubrl
scas
mov
test
xor
sub
cld
and
xor
adc
stos
push
mov
cmc
loope
xchg
push
cmp
inc
in
add
mov
xchg
pop
pop
scas
insb
mov
sbb
pusha
or
rcrb
testb
in
pop
js
inc
mov
jg
xchg
xorl
scas
addr16
pushf
scas
add
adc
pop
xor
cmp
fisubrs
lahf
cwtl
jmp
sub
mov
stos
jge
loope
xor
and
inc
dec
mov
int3
fldl
stc
xorb
push
xor
in
ljmp
test
ret
popa
cmp
sbb
icebp
jmp
inc
jno
jl
and
test
cld
in
ss
pop
outsb
mov
loopne
das
inc
jmp
lods
fstps
jae
movsb
push
mov
fnsave
shrb
mov
cmp
xchg
xor
sub
ljmp
je
insl
or
mov
ret
add
and
lahf
xor
jne
js
shrl
adc
imul
mov
imul
cli
jmp
and
add
fdivs
inc
leave
xor
popl
roll
imul
xor
or
mov
xor
loope
pop
scas
xor
or
insb
push
aam
mov
add
lods
nop
loopne
pop
js
idivb
cmpsb
cmpsb
imul
jge
jl
call
xlat
pop
and
mov
stos
sub
inc
sarl
pop
popf
push
scas
or
cmp
pop
push
push
popa
aaa
pop
adc
fidivl
stos
mov
xor
xchg
out
cs
outsl
adc
push
icebp
push
ja
push
fists
jne
pop
adc
sub
ffree
mov
jo
cli
mov
xchg
pop
mov
adc
outsb
inc
sbb
loop
sub
cmpsl
loopne
add
pop
push
lcall
out
icebp
add
push
imul
or
dec
adc
and
push
pop
add
fcmovnb
ret
call
adc
stc
xchg
xchg
hlt
rol
or
sti
pop
lcall
sarl
inc
or
push
stc
xor
mov
je
mov
cmpsl
es
aam
movsb
cmpb
std
mov
test
sarb
in
lea
mov
cmp
push
xchg
mov
add
stos
sub
ja
mov
aaa
adc
sub
into
arpl
js
mov
icebp
jg
lods
mov
ret
xlat
or
xlat
lds
scas
jmp
inc
pop
loopne
hlt
cmp
push
add
ffree
fadd
out
jecxz
movsb
adc
and
dec
fiaddl
pop
xor
push
xchg
cmpl
pop
mov
subb
mov
lds
pop
lret
inc
or
push
pushf
sub
faddl
push
add
mov
in
in
dec
stos
cwtl
lret
aas
dec
das
push
push
sahf
outsb
mov
mov
jno
fmuls
adc
je
xlat
ss
and
xchg
fsubs
cltd
shr
nop
roll
mov
sbb
dec
pop
stc
mov
cli
rcll
sbb
dec
pop
cmp
sub
push
and
xchg
popf
call
sbb
mov
mov
sarb
or
adc
out
adc
mov
mov
test
add
shl
push
mov
inc
movsl
pop
and
jnp
cwtl
popa
cmp
loopne
cmp
js
xchg
idiv
test
cmp
loopne
dec
movsb
cmp
ss
xor
stc
and
out
mov
dec
in
add
sub
xchg
orb
inc
jb
cmp
out
shl
clc
test
out
mov
sub
js
xor
leave
shrb
andb
mov
sbb
push
ja
cwtl
popf
rcl
jp
jo
jg
in
add
std
cmp
add
popa
inc
mov
imul
lds
jne
in
xchg
lods
xor
cmp
jo
fucom
inc
pop
dec
and
popf
dec
test
outsl
shll
ss
mov
jecxz
negb
dec
xor
or
pop
out
mov
sub
sub
and
lock
mov
scas
in
cmp
popf
cmc
test
jmp
bound
fwait
das
test
add
cmp
aas
add
loop
stos
mov
lahf
imul
in
cmpb
inc
jg
push
cmp
add
push
mov
leave
xor
out
syscall
cmpsb
mov
ret
addr16
adc
push
stc
mov
flds
xor
mov
sbb
cld
aam
or
mov
xchg
scas
in
dec
lahf
sarb
mov
mov
cmc
loop
sub
mov
mov
sahf
popf
mov
xchg
movl
mov
fsubrl
sahf
das
rorb
inc
call
and
adc
and
mov
sbb
cmpsl
pop
and
adc
pop
ljmp
xor
add
sbb
les
das
xchg
add
adc
adc
icebp
push
inc
xchg
sub
adc
pop
lcall
js
jge
and
stos
xor
std
icebp
inc
mov
xor
push
sbb
cmp
xchg
jne
hlt
mov
push
xchg
lock
mov
inc
cld
out
cmp
roll
jecxz
add
adc
sub
mov
adc
fst
popl
xor
dec
sbb
mov
xchg
add
cmc
xchg
fstl
or
daa
jns
out
out
xchg
scas
push
pop
or
cmpsl
ffree
jle
stos
repnz
push
les
pop
imul
pop
xchg
pop
sub
xchg
sub
mov
clc
dec
ss
jns
push
lahf
push
adc
cmp
inc
push
imul
mov
pusha
xchg
or
sbb
jmp
out
dec
pop
cmp
imul
stc
lods
subl
fcoms
sbbb
mulb
jo
dec
lret
shrb
repnz
mov
cmpsl
dec
sbb
add
push
pmuludq
dec
daa
dec
lds
mov
jge
mov
xor
sub
or
xlat
clc
and
xor
cli
push
pop
jb
mov
jno
test
add
das
adc
add
loop
xchg
xchg
jo
xchg
movsl
jle
inc
inc
pop
mov
int
or
jae
std
jne
jge
xor
mov
lret
jl
in
orb
incl
aas
xchg
test
xor
divl
repz
push
dec
jp
int
cwtl
xor
cmpsb
fisttpll
or
pop
xchg
cmp
clc
pop
sub
push
ljmp
hlt
lcall
scas
push
cmp
and
imul
nop
push
mov
add
sbb
sub
clc
and
jmp
aaa
mov
mov
ret
fiadds
xchg
inc
decl
xor
lcall
rclb
adc
and
cmp
add
lods
cmc
insb
xor
mov
jmp
je
jge
cmp
gs
les
xlat
sub
push
or
mov
mov
cmpsb
test
xor
outsb
push
js
pop
mov
pop
mov
or
out
add
xchg
sub
movsb
pop
mov
aam
pusha
inc
xor
cld
add
aam
ja
paddsb
lock
or
sub
ficoml
and
ret
inc
push
je
mov
pop
pop
push
shlb
fdivr
jmp
repz
mov
cmp
jp
xor
lock
mov
push
adc
sub
cmp
xchg
inc
pop
mov
mulb
add
mov
inc
lock
loope
notl
xor
sub
call
push
pop
push
mov
jnp
adc
jae
lock
fimull
fistpl
nop
ret
jne
out
lods
mov
adc
xchg
enter
or
jbe
mov
pop
mov
aad
and
sub
test
sahf
pop
push
mov
xchg
push
cmp
adc
bound
clc
cld
xchg
mov
and
sub
sub
add
mov
sti
mov
mov
sub
scas
dec
jno
adc
out
and
push
je
adc
add
lods
cmpsl
or
adc
pop
add
addr16
adc
or
add
lock
out
pushf
rorl
mov
cli
xchg
sbb
push
sub
pop
out
adc
mov
sbb
pop
fcoms
sbb
mov
rcrb
aam
aam
jo
or
mov
mov
sub
ret
out
out
push
xlat
mov
fdivl
loope
mov
cwtl
mov
fdivrp
mov
imul
push
pop
lods
clc
sub
jb,pt
cmc
lret
fdivrl
lcall
or
inc
and
scas
pusha
mov
lcall
mov
mov
aad
iret
loop,pt
mov
push
ljmp
push
scas
hlt
dec
or
adc
nop/reserved
hlt
loope
sub
xor
and
test
in
pop
les
pop
adc
mov
test
ret
data16
lods
imul
or
cli
scas
daa
pop
rorb
xchg
and
loopne
hlt
add
xchg
das
jns
leave
sub
mulb
movsb
lods
or
je
lock
adc
adc
mov
je
iret
mov
fwait
push
imul
dec
or
dec
or
clc
or
sub
pop
test
addb
outsb
andb
ret
pop
push
add
pushf
xchg
push
les
adc
test
sub
mov
jl
aam
arpl
xchg
outsb
jo
gs
imulb
test
ja
xchg
mov
xchg
sbb
lock
mov
cmpsl
pop
out
pop
push
mov
add
mov
subl
add
fidivrs
adc
and
push
mov
les
jp
dec
lods
push
inc
push
mov
inc
std
mov
mov
cmp
mov
incb
fadd
mov
loopne
mov
js
mov
out
imul
push
mov
ja
sahf
sbb
and
idivb
lea
and
jl
inc
inc
lret
outsl
mov
popf
imul
mov
jl
cmp
mov
out
add
call
andb
xor
mov
push
push
mov
bsr
cli
imul
or
pop
int3
inc
ret
jl
inc
cltd
fwait
nop
add
jl
adc
hlt
and
inc
add
clc
and
pushf
fcoml
jnp
jecxz
push
cmp
or
push
push
xor
sub
add
push
pcmpgtb
or
shl
push
cmp
mov
in
add
les
shll
xchg
mov
je
pop
loopne
jb
pushf
js
push
pop
xor
sub
mov
xchg
push
pop
jecxz
insl
or
into
push
shl
aad
test
or
fsub
cmp
pop
adc
lock
movsl
dec
dec
xor
aad
sbb
push
aad
mov
lret
ret
adc
jo
in
outsb
shll
xchg
aaa
lock
pushf
mov
mov
cwtl
pop
mov
mov
jno
test
jbe
sbb
add
push
sbbl
leave
int3
push
and
inc
jg
outsl
inc
cmp
fistpl
daa
push
add
cmp
movsb
jo
dec
leave
jge
inc
fwait
sbb
add
les
mov
inc
pop
adc
test
xor
add
inc
aas
jle
int
clc
xchg
jbe
xor
push
pop
xor
enter
xchg
push
sarl
test
dec
xchg
cld
sub
lea
shlb
mov
fidivs
cmp
ljmp
adc
int
xchg
mov
lret
xchg
mov
repz
cmp
pop
push
dec
add
sbb
scas
das
in
loop
nop
or
stos
out
rolb
icebp
loop
sub
jle
cmp
add
push
dec
ds
mov
jp
fiaddl
xchg
sub
and
adc
cld
shlb
sbb
movsl
aaa
je
mov
rcrb
push
dec
mov
push
orb
xor
sub
lahf
xor
push
test
jl
clc
sbb
pop
insb
subb
hlt
mov
inc
rcr
ss
mov
mov
sbb
and
dec
adc
ds
jne
sub
sahf
sbb
dec
mov
mov
cwtl
ds
int
adc
push
push
xorl
add
mov
ret
andb
sbb
pop
loope
fisttpll
mov
jne
cmp
push
popf
sub
push
sbb
sbb
pop
push
imul
push
mov
shll
dec
adc
addr16
dec
inc
pop
je
sub
faddl
dec
cld
loopne
stos
loop
aam
xor
inc
dec
leave
movsl
data16
xor
popf
mov
push
pop
leave
fistps
es
int3
adc
adc
push
mov
pop
rclb
xchg
push
mov
cld
xor
mov
push
divl
mov
mov
test
cmp
xor
lahf
mov
inc
in
pop
cltd
roll
es
mov
jl
adcl
shl
stos
outsl
shll
and
push
mov
lcall
lods
cmp
mov
jnp
out
loop
push
mov
arpl
cmp
mov
jbe
xchg
ss
pushf
loop
jl
stos
pop
daa
test
pusha
jle
popa
dec
rorb
in
shlb
cmp
xchg
mov
stos
xor
enter
sarb
jle
pop
add
mov
dec
dec
pop
mov
sub
stos
jb
int3
pushf
sbb
or
sbb
ficomps
cli
xchg
imulb
mov
lods
popf
cs
and
sub
sub
fdivrs
test
cmpsb
mov
pop
loopne
mov
data16
push
push
pop
mov
hlt
sub
pushf
sahf
rolb
sbb
push
lret
or
pop
stos
xchg
out
cwtl
sbb
lcall
les
sbb
or
stc
push
std
mov
add
movsb
mov
jge
adcb
mov
push
popf
test
pop
icebp
fmull
cmpb
pop
cmc
dec
jg
pusha
mov
jle
cmovae
xchg
int3
inc
ret
movsl
xadd
cmp
in
cmp
pop
jmp
mov
imul
andl
xor
jg
adcb
pusha
outsl
cmp
add
in
sbb
lcall
mov
sub
outsl
das
lret
pop
inc
add
push
add
movsl
data16
cmp
mov
xchg
cmpsb
mov
std
aad
xchg
pop
mov
cli
mov
bound
sub
mov
cmp
mov
dec
ficoms
cmp
pusha
and
outsb
call
popa
cmp
cmp
cmp
in
clc
mov
jecxz
pop
nop
jge
in
add
cld
lods
cmp
pop
loop
push
test
cmp
out
imul
add
push
adc
jg
popf
dec
cld
jge
int
insl
cmc
test
mov
mov
dec
or
cmp
adc
lods
stos
and
dec
add
cmp
add
fwait
push
pop
dec
push
cmp
fsubr
pop
je
adc
enter
push
adc
push
or
cmp
or
mov
mov
adc
push
mov
ret
inc
shr
or
jg
filds
lds
test
sarb
push
int
dec
in
daa
push
fmuls
lock
pop
loop
lret
loopne
sahf
sub
mov
loopne
cld
add
pop
fcmovb
adc
orl
mov
xchg
dec
and
sub
call
les
mov
push
lcall
jge
jp
sub
mov
test
mov
mov
ret
nop
add
lcall
js
ret
stos
pop
ds
mull
sbb
and
xchg
sbb
lods
inc
decl
cli
xchg
inc
shll
dec
xchg
jp
and
scas
or
or
loopne
mov
or
cli
ret
lods
cmp
inc
xor
adc
push
cmpsb
inc
xchg
js
adc
adc
fildl
mov
mov
mov
je
sub
call
mov
test
mov
and
rorb
jne
cmp
fucomip
cmpb
call
inc
dec
mov
or
sahf
add
add
mov
sub
rcl
js
or
push
stos
jle
sti
test
loop
dec
sub
inc
insl
and
scas
lcall
or
jle
cmp
in
fs
inc
mov
adc
push
adc
add
dec
sub
mov
nop
pop
sbb
push
adcl
jbe
pop
cmc
cmp
sub
push
jp
cld
hlt
fs
cmp
out
loopne
pop
es
imul
fsubp
dec
clc
sbb
dec
in
or
push
js
or
lock
movsl
mov
dec
sbb
mov
lock
insb
pop
inc
xor
jbe
sub
ja
outsl
mov
add
sbbb
pop
xor
mov
jle
jnp
ret
popf
push
push
xchg
push
fiaddl
and
push
push
lret
outsb
cmc
or
leave
push
aad
aas
insl
mov
and
mov
stos
sub
push
or
aas
pop
faddl
lock
jae
pusha
sbb
cltd
add
inc
std
test
aas
jmp
xchg
jo
rolb
iret
xchg
fsubrs
test
ja
push
loop
lods
jg
pop
les
mov
aas
popa
xchg
push
popa
inc
mov
sub
xor
cli
aaa
rolb
daa
addl
nop
aam
cwtl
add
ss
ficomps
sub
and
push
addb
mov
cmc
mov
orl
pop
and
pop
mov
out
cmp
cld
add
or
mov
test
std
clc
dec
pop
push
out
cltd
sbb
push
roll
imul
lahf
pop
jno
std
cmp
sbb
stos
mov
ret
or
les
cmp
sbb
inc
outsl
shrb
mov
cmp
loopne
hlt
sub
cmpb
imul
fisttps
cmpb
subl
ret
push
leave
js
sub
test
in
mov
lea
cmp
mov
jno
out
xor
and
and
push
scas
shl
add
out
sbb
test
push
add
imul
mov
push
insl
pop
pop
lret
in
cmpsb
test
mov
rolb
addb
xor
stos
data16
js
inc
push
push
push
xor
mov
popa
add
fdivs
xor
loope
push
pushf
mov
addl
test
jg
sbb
std
jge
in
pmullw
mov
jg
push
int
pop
or
aam
jl
fiadds
sub
out
sahf
cmc
lock
sub
loopne
inc
mov
push
mov
fsubs
pop
dec
insb
stos
xorb
std
cmp
nop
je
pusha
mov
pop
lock
clc
aaa
add
add
inc
mov
cmp
loopne
insl
pop
adc
cmp
int
in
and
adc
leave
mov
adc
mov
sbb
mov
push
je
sub
xchg
les
imul
pop
ja
cmc
mov
pusha
sarl
adcb
mov
rolb
pushl
scas
sbbl
mov
es
xor
int
or
lds
or
fisubrl
and
mov
sub
add
push
xchg
mov
idivl
sub
inc
out
push
adc
or
fisubl
jno
adc
push
push
inc
lret
scas
fadd
xlat
inc
adc
pop
stc
cmp
ljmp
or
shl
add
sbb
xchg
lahf
xchg
aas
scas
sub
mov
in
cmp
gs
lcall
pop
jg
loop
or
fldcw
and
mov
addr16
push
out
mul
imul
mov
mov
and
jo
loopne
xor
ret
cwtl
mov
mov
fsubrp
and
jmp
mov
inc
cli
jp
mov
xchg
push
sub
dec
sbb
pop
fsts
add
add
test
mov
push
imull
mov
xchg
sbb
xor
inc
pop
addb
cmpsl
push
push
scas
movups
push
ljmp
mov
add
cmp
rcll
lock
adc
test
insl
lea
lahf
lahf
cli
outsl
push
xor
mov
pop
jmp
pusha
cwtl
arpl
ja
adc
pop
xchg
xchg
inc
scas
loopne
test
dec
fucom
cmp
stos
rcrl
mov
sub
mov
or
dec
ror
xlat
add
mov
add
orb
jbe
lea
mov
lret
adc
adc
scas
adc
femms
jae
stos
inc
test
sahf
sub
out
inc
loopne
add
adc
sbb
inc
arpl
mov
mov
xor
sbb
xchg
mov
sub
inc
add
dec
test
shrl
jmp
mov
or
aas
pop
mov
loop
jo
jo
mov
dec
mov
xchg
daa
js
ret
in
in
add
ret
mov
mov
aam
jo
jnp
push
fwait
push
insl
js
pop
jmp
jmp
push
dec
and
inc
sbb
decb
dec
sub
xchg
xor
push
inc
cmp
out
push
mov
jbe
add
mov
inc
imul
pop
and
lcall
push
xor
inc
inc
jp
aaa
xchg
sub
xchg
lar
and
mov
rol
cmp
inc
push
in
or
push
dec
mov
call
add
pop
popf
xor
add
lock
mulb
cmp
adc
sbbb
stos
dec
pop
clc
inc
add
nop
les
popa
outsb
mov
popa
adc
cmpsl
xchg
sbb
adc
cmp
inc
sahf
xor
stos
shrb
push
push
test
sbb
pop
jmp
adc
mov
aaa
push
cld
inc
clc
mov
sbb
pushf
popa
and
mov
adc
lods
and
add
mov
xchg
push
ret
cvtps2pi
sub
xchg
sbb
push
sub
add
jmp
push
mov
int3
ds
mov
mov
mov
dec
ret
fadds
pop
out
mulb
inc
pop
aam
lds
icebp
addb
mov
addb
mov
xchg
mov
xor
mov
push
mov
nop
push
xchg
inc
das
lea
sahf
xchg
or
and
and
imul
mov
les
iret
cwtl
cmpsb
sbb
cli
incb
push
notb
mov
cli
or
scas
push
pop
sbb
jl
or
addl
jg
cs
pop
push
rolb
adc
xlat
and
into
xor
pop
sbb
adc
call
sar
xorl
xchg
xor
loope
shll
inc
cmp
mov
inc
jl
mov
xchg
ds
or
mull
jecxz
add
xchg
push
push
xchg
ss
outsb
and
es
pop
adc
add
dec
push
aam
mov
adc
dec
test
mov
push
cmp
dec
jl
adc
hlt
lahf
dec
aam
inc
dec
into
sbb
movsb
inc
in
push
add
fs
aaa
sbb
rolb
jl
out
repz
push
mov
mov
xor
cmp
jo
test
pop
les
mov
sub
aas
cmc
stos
sbb
push
jl
adc
add
push
and
pop
lock
lret
xor
mov
mov
mov
test
lock
pop
pushf
and
add
in
mov
xor
mov
clc
push
xchg
hlt
and
sub
mov
pop
push
inc
add
push
call
sbb
dec
repz
aad
cmp
xchg
pop
cmp
fdivp
rcll
sbb
xchg
sub
and
daa
mov
stos
sbb
pusha
int
lock
sbb
and
xor
fs
icebp
jecxz
in
mov
int3
adc
mov
nop
adc
rcll
xchg
sbb
dec
pop
dec
jl
jae
mov
pop
cli
inc
stos
mov
dec
movsl
push
add
test
pusha
std
hlt
subb
daa
ds
push
dec
sub
es
nop
add
mov
rcrb
adc
and
dec
sub
mov
shrl
pusha
jmp
dec
pop
mov
icebp
xchg
and
inc
fiadds
stc
cmpsl
enter
xchg
clc
dec
jae
mov
shl
jl
xor
jo
lret
sbb
pushl
fstl
dec
pop
push
push
add
jno
psubw
mov
push
or
pop
cmpsb
jns
cli
lds
or
xor
int3
outsb
sbb
jg
add
mov
clc
push
scas
sub
xchg
add
test
sarb
add
test
mov
ja
ss
fdivp
aas
xchg
inc
xor
and
in
xor
out
sbb
js
cmc
ljmp
and
nop
mov
call
repnz
pop
mov
sbb
or
inc
or
out
rorb
cs
jmp
jne
mov
sbb
pop
stos
pop
cld
mov
pop
cmp
xlat
imul
fwait
test
ret
push
cmp
pop
subl
dec
xchg
fldcw
pop
mov
movb
push
sub
or
inc
stos
jbe
and
push
push
jmp
aam
and
jne
je
pop
addr16
xor
xchg
cs
stos
pushf
xchg
inc
cli
daa
mov
adc
push
push
outsb
push
shll
mov
jbe
sub
test
lods
adc
push
add
loope
sbbb
rcrb
cs
dec
jne
jne
mov
xchg
sti
dec
test
inc
pusha
imul
outsl
outsb
rorl
in
push
mov
lret
lret
enter
rolb
rcrb
mov
insl
push
popa
movsl
call
or
xorb
pop
mov
sbb
lcall
dec
cli
add
nop
sbb
pop
out
bound
stos
scas
mov
mov
or
mov
cli
sbb
sti
aas
insb
adc
add
adc
popa
push
rcpps
sar
pop
pop
adc
lret
jp
xor
mov
mov
jle
outsl
imul
cmp
iret
mov
lret
adc
push
push
addr16
in
push
mov
jp
xchg
adc
add
inc
mov
jl
aaa
cld
mov
lock
cli
mov
cmp
xorl
sbb
xor
js
stc
in
andl
sub
ficoms
adcb
outsb
inc
sub
enter
rol
es
and
xorb
push
inc
rcll
ffreep
dec
mov
and
int
and
popl
clc
lock
and
cld
mov
jmp
iret
dec
daa
cmp
jp
test
mov
fcompl
add
mov
add
sbb
in
out
mov
push
dec
test
push
or
dec
push
mov
or
fdivrs
or
xchg
push
add
push
bts
lea
mov
sti
mov
jecxz
push
fisubrl
fs
xor
mov
rolb
or
push
adc
movsb
jnp
sbb
adcl
push
mov
dec
in
outsb
pop
loope
mov
jb
pop
sbb
inc
outsb
add
add
out
fildll
mov
xlat
out
lock
rorl
push
ret
bound
fidivl
push
push
mov
add
and
dec
xlat
in
fcmovbe
sbb
lahf
xchg
jo,pn
sbb
adc
push
push
lahf
or
xchg
or
xor
ret
sub
sub
mov
push
or
loop
test
add
jle
push
xor
push
push
mov
lahf
push
fcom
insb
push
or
hlt
jl
fmul
stc
mov
rorb
outsb
popf
adcb
ds
pushf
or
add
adc
xor
adc
das
fcomps
fsubr
stos
dec
imul
push
aad
or
jg
add
mov
or
or
jecxz
push
enter
sbb
push
cmp
movsl
sarb
fdivl
das
mov
jbe
mov
data16
add
xor
cwtl
sub
andb
rclb
jl
pop
fwait
dec
sahf
mov
or
lock
add
subb
jg
ficomps
jle
test
dec
or
cmpsl
adc
outsb
cmpsb
icebp
sub
test
jmp
ret
cmpsb
mov
pop
fsubrs
sub
or
adc
cwtl
rolb
sbb
aad
cmp
mov
or
in
cmp
adc
or
test
test
pushf
adc
push
adc
sub
pop
mov
ret
push
test
gs
push
push
shl
push
xchg
cmp
mov
aam
or
inc
mov
mov
or
scas
mov
jbe
push
dec
sbb
sbb
jp
cld
clc
mov
insl
adc
test
jge
inc
hlt
pusha
imul
mov
jb
xor
gs
aaa
sub
je
adc
cmpsb
mov
rorl
pushf
rclb
jb
ret
mov
fcomi
iret
xchg
and
es
lret
js
add
subb
dec
js
add
das
insb
in
das
mov
xchg
mov
add
cmp
rolb
je
fs
sbb
push
idivb
rsm
mov
movsl
loop
cld
xlat
mov
sbb
adc
lds
mov
push
dec
sbb
nop
mov
and
mov
pop
pop
cmpsb
xchg
and
out
cmc
test
jl
cmp
fists
mov
sbb
mov
dec
inc
movl
lods
jg
sbb
cmpl
add
xchg
mov
out
xchg
sub
rcl
push
pushf
and
sarb
ret
cmp
sbb
jbe
cmp
cvtps2pi
xor
jecxz
test
shrb
or
mov
cmpsl
repnz
jle
cmpsb
adc
test
in
xchg
push
mov
bound
sbb
in
lock
lret
test
stc
sub
sbb
sti
jp
jecxz
sub
rcrl
dec
push
sbb
aad
mov
sbb
push
aaa
test
mov
cmp
lods
xchg
inc
inc
movsb
lret
mov
out
ja
cmp
js
dec
sbb
add
mov
dec
clc
push
sub
test
jl
rolb
hlt
call
xchg
je
pushf
push
insb
dec
aaa
xchg
mov
fadd
filds
inc
mov
out
es
pop
pop
add
popa
movsb
inc
push
lret
lea
push
es
movsl
aaa
push
mov
and
ljmp
movsb
push
sub
leave
rclb
or
daa
mov
ficomps
fcoms
aad
decl
sub
push
jo
mov
sbb
push
cmpsb
adc
js
cwtl
pop
lods
mov
cmp
into
mov
pop
fdiv
mov
xchg
xor
push
insl
xchg
hlt
inc
jg
jp
or
xchg
mov
lcall
mov
xchg
mov
xchg
sbb
or
scas
shll
decb
testb
mov
sti
or
and
les
add
xor
add
das
icebp
mov
sbb
clc
jg
jmp
sub
mov
jno
pop
cmpsl
imul
dec
push
sbb
pop
loop
add
inc
pusha
cmp
push
sbb
imul
out
inc
cmp
clc
popa
push
xchg
push
insb
mov
sbb
mov
sbb
or
repnz
nop
push
leave
popf
ds
into
push
daa
pop
pop
push
mov
ficoms
jle
jno
jmp
cs
sbb
shlb
mov
inc
int
inc
inc
movsb
je
in
jo
in
sub
push
push
testl
cmp
sahf
call
pop
sub
ds
push
lret
int
inc
ror
pusha
jg
scas
mov
aad
shll
cmp
add
les
xor
inc
dec
cmp
enter
mov
mov
sub
cltd
fnstenv
pop
xlat
push
lcall
les
push
inc
in
fmull
mov
stc
jo
mov
or
rolb
cs
adc
or
stos
or
and
daa
sti
movsl
sub
jg
add
call
jl
sahf
add
sbb
xor
mov
mov
jecxz
gs
cwtl
xchg
into
je
call
stos
fdivrs
les
xor
mov
push
mov
test
or
pop
rclb
and
sbb
xchg
mov
mov
dec
inc
or
adc
cmpsb
push
js
mov
in
add
cs
mov
mov
dec
rclb
enter
mov
add
test
add
pop
mov
inc
shll
in
dec
lcall
mov
jns
scas
cli
xor
push
cmp
ja
arpl
xor
jmp
sbb
repnz
mov
mov
fs
call
in
add
pop
iret
icebp
pop
mov
cld
cmc
pushf
xchg
add
and
out
mov
in
incl
icebp
mov
mov
inc
in
mov
jge
mov
aam
jmp
cs
fstl
scas
xchg
std
and
lods
pop
pusha
loop
mov
clc
iret
xorb
rol
mov
adc
adc
dec
and
call
xchg
and
xchg
mov
cli
hlt
loope
test
nop
xabort
repnz
mov
add
xchg
mov
mov
fstpl
dec
jo
push
mov
or
dec
sbb
dec
dec
xchg
add
ds
bound
xchg
add
test
cs
mov
cli
aam
das
je
leave
xchg
aad
negl
sbb
mov
dec
insb
mov
and
inc
adc
sbb
mov
sub
or
sbb
xchg
popf
mov
mov
mov
dec
or
in
and
lcall
xor
push
mov
dec
mov
push
inc
and
bound
cli
jne
shlb
inc
and
imul
mov
hlt
jno
or
mov
push
movsb
test
popa
insb
and
cmp
mov
in
sbb
mov
inc
out
js
jp
add
xchg
and
ds
enter
loopne
sbb
jp
loop
cli
add
jge
filds
and
fucomi
aad
mov
out
sub
pop
cmpl
jp
lds
ret
mov
inc
pop
movsb
sbbb
xor
call
push
call
dec
dec
pop
and
push
sbb
es
sub
or
inc
pop
rorb
leave
mov
xchg
adc
cs
or
or
and
rol
aas
mov
and
and
hlt
aam
pop
xchg
leave
pusha
jp
sub
dec
fildll
cmp
jmp
add
loopne
sub
mov
jo
aam
pop
xorb
adc
cli
and
iret
pop
inc
inc
and
mov
test
je
pop
out
xchg
into
rcr
cli
inc
adc
push
bound
cmp
aam
loopne
push
or
pop
pop
adcb
add
or
mov
jle
jns
rclb
pop
ret
das
popa
leave
mov
xchg
jnp
outsb
ret
pop
push
pop
repnz
sysenter
mov
cmp
xchg
or
ja
xor
or
nop
outsb
pop
cmp
sub
push
enter
xchg
push
les
ret
sarl
loopne
adc
and
xchg
xchg
sti
inc
lahf
xor
inc
mov
es
xchg
inc
pop
ljmp
leave
or
jae
sub
pop
inc
inc
cwtl
mov
or
or
sbb
test
in
and
js
xchg
push
outsl
sbb
nop
test
jp
dec
and
cmp
test
pop
sbb
sahf
pop
inc
je
or
mov
iret
jge
out
inc
test
pop
or
pop
mov
imul
add
pop
clc
rorb
cmpsb
mov
lea
or
add
das
bound
push
push
xor
or
sahf
aam
sti
mov
fsubrs
pop
pop
sub
adc
adc
pop
adc
dec
cld
movl
push
std
aam
ret
push
lcall
adc
leave
xchg
adc
mov
xor
movsl
push
mov
jmp
dec
add
or
sbb
mov
jo
fsubrl
mov
xor
movsl
cwtl
enter
push
roll
mov
push
scas
aam
ret
sub
dec
adc
or
test
dec
shl
or
popf
jle
std
syscall
push
mov
sahf
jl
enter
addb
or
fldl
subb
jae
aad
arpl
ret
pop
mov
sbb
je
push
sbb
mov
jae
nop
cmpsb
popa
cld
jmp
push
test
sbb
inc
in
jl
jge
arpl
jp
adc
mov
or
push
js
idiv
push
xchg
jnp
mov
aaa
mov
shrb
inc
dec
inc
pop
lock
sbb
pusha
mov
loope
mov
mov
or
cmovo
fisttpl
push
jae
xor
cmp
sbb
add
lret
orl
out
dec
cwtl
enter
mov
or
push
or
mov
hlt
inc
sbb
std
sub
mov
lret
bswap
inc
testb
mov
inc
cmpsl
mov
inc
pop
or
xchg
sbb
shll
outsl
xor
xchg
or
outsb
push
mov
sbb
mov
add
mov
ss
and
pop
sub
or
jg
in
lods
add
int3
dec
repnz
movb
fidivs
mov
add
dec
das
daa
push
in
xorb
out
inc
mov
xorb
push
sbb
les
scas
clc
enter
lock
adc
mov
cmpsb
adc
movsl
dec
out
inc
push
rolb
inc
daa
shrb
into
aam
inc
lock
nop
add
or
mov
adc
loop
outsb
cmp
pushf
test
add
adc
ja
xchg
int3
bound
fists
ret
pop
or
xchg
inc
ret
mov
sbb
dec
add
sbb
lods
addb
jp
jae
lcall
pushf
push
cmp
rcrl
cmp
xor
pop
xchg
or
mov
add
mov
cli
push
jnp
test
inc
push
mov
aam
pop
das
or
and
js
dec
popa
mov
lods
lds
adc
loopne
and
nop
cmp
sbb
sahf
lock
sbb
jecxz
add
rorb
insl
mov
cmp
sbb
push
test
cs
sub
mov
or
shrb
xor
sub
mov
fwait
stos
ret
mov
mov
cmpsb
fisubrs
mov
xchg
inc
inc
clc
ucomiss
adc
stc
popa
pop
push
cli
movsl
data16
je
in
shll
fdivp
pop
cmpsb
sub
scas
clc
ret
sbb
jg
hlt
mov
shrl
mov
or
cs
or
xchg
add
push
shl
clc
xor
cli
mov
dec
add
pop
inc
mov
ss
sbb
xchg
aas
sar
push
or
mov
mov
mov
inc
mov
es
mov
mov
outsb
inc
mov
mov
dec
cwtl
js
loopne
inc
pop
sbb
out
hlt
shlb
pop
xchg
add
adc
dec
insb
or
dec
ret
clc
jg
ret
out
pusha
sub
add
decb
out
nop
jo
icebp
adc
nop
lret
or
add
or
xchg
cmpsl
inc
jno
rclb
roll
shrb
lahf
rcrb
sbb
mov
and
fisttps
and
xchg
les
sub
adc
pop
repnz
std
pop
push
pop
rcrb
nop
mov
cld
push
dec
gs
push
test
cld
in
and
call
imul
rcl
sub
mov
adc
adc
jp
shlb
adc
arpl
xor
dec
pop
add
jmp
loop
pop
add
adc
mov
ja
adc
push
jo
std
ret
and
mov
and
jle
fdivrs
push
or
shll
or
push
fildl
fimuls
call
add
ret
dec
or
loop
lcall
clc
cs
lock
jnp
mov
mov
mov
es
ret
sbb
push
xchg
push
xor
push
sub
and
push
nop
jp
loop
call
push
xchg
or
scas
push
pushf
jg
fnstcw
aad
int
xchg
cltd
or
out
and
sub
sub
adc
and
in
movsb
outsl
mov
fbstp
sbb
inc
jecxz
out
stos
in
je
lods
pop
push
mov
mov
dec
repnz
jnp
push
andb
and
jle
lods
pop
fdivrl
and
test
push
mov
in
mov
push
sbb
fcompl
mov
lret
jg
sbbb
sub
pop
add
faddp
clc
push
push
cwtl
cli
adc
les
outsb
ret
pop
sub
test
js
jne
dec
clc
xchg
push
fldl2t
or
add
icebp
jno
push
ja
xchg
jb
cld
fldcw
imul
xchg
insb
fdivrl
pop
add
das
sub
insl
sbb
sbb
push
aam
fidivrs
call
push
sbb
inc
adc
pop
pop
jl
imul
movsl
repz
and
push
pop
pusha
scas
int3
push
pcmpeqw
sbb
or
nop
pop
inc
add
adc
dec
inc
or
rcr
mov
pushf
sar
inc
add
ret
shrl
ret
ds
cmc
bound
scas
cmp
push
cmp
xchg
mov
xchg
shlb
mov
push
std
push
xchg
cltd
lahf
rcll
sbb
jno
or
sub
mov
pop
add
sbb
or
test
mov
cmp
fcoms
sarb
rclb
fildl
hlt
push
or
xchg
cmpb
xchg
repz
push
mov
ret
enter
pop
add
xor
sbb
adc
sub
scas
push
xchg
popa
lods
jle
xor
popf
xchg
fadds
out
mov
movsb
iret
clc
pop
inc
pop
push
std
adc
cli
push
repz
mov
adc
mov
inc
sbb
mov
xchg
cmp
inc
xchg
movsl
popa
aam
jnp
mov
test
cli
sub
mov
sub
or
outsb
xchg
xchg
jnp
mov
xor
mov
enter
cmpl
insb
in
mov
mov
xor
sbb
lss
inc
divb
cmp
xor
push
imul
repz
push
insb
call
enter
ret
sub
and
mov
add
jg
and
mov
cmp
pop
cs
imul
inc
or
mov
scas
imul
jg
inc
cmp
mov
push
lods
push
dec
jp
pop
cmp
cmc
xchg
in
sahf
sbb
lret
pop
mov
insl
add
mov
xor
or
mov
rolb
and
nop
mov
adc
fsubr
pop
imul
ljmpw
pop
sbb
dec
mov
dec
stos
rol
mov
in
mov
xchg
ror
ret
pop
shrb
frstor
arpl
mov
fistl
adc
stos
cli
inc
mov
sub
enter
inc
jge
mov
mov
lds
insb
cmp
mov
or
xchg
cmp
bound
push
inc
inc
push
xchg
mov
pop
lods
pusha
jbe
addb
adc
xor
pushf
inc
dec
ret
jle
or
mov
aam
hlt
xchg
add
orl
imul
and
mov
adc
push
cs
and
push
jge
data16
movsl
add
mov
out
xchg
xchg
push
adc
loope
rcrb
or
std
test
push
lret
sub
jo
stos
lods
xor
jnp
cmp
jae
andl
cmp
pop
shlb
repz
movb
shl
lea
shlb
adc
fcmove
mov
sbb
mov
sbb
test
test
jne
movsl
arpl
lods
mov
add
push
loopne
pushf
cmp
hlt
xchg
aam
or
cwtl
sti
std
jp
jne
inc
xchg
test
or
ss
mov
je
dec
andl
pusha
testb
lahf
cmp
and
rcl
cmp
cmp
cmp
arpl
fcomi
hlt
sarb
push
ret
sbb
xor
cmpl
push
stos
sub
stos
xrelease
push
mov
add
sti
in
jne
dec
cmpsb
jle
mov
ds
mov
fsubrl
test
das
aaa
sub
and
arpl
pop
loope
push
fstpl
sti
jmp
in
lahf
mov
mov
jl
jnp
mov
sub
mov
enter
roll
mov
jg
inc
ds
inc
pop
sbb
cmpsb
mov
sub
das
pop
cmp
add
aaa
pop
les
fiaddl
jo
xchg
call
mov
add
lods
inc
test
xchg
pop
mov
push
sub
inc
fsubrp
push
scas
pop
outsb
push
add
outsb
pop
cmpsb
aas
push
dec
scas
xor
inc
sbb
push
nop
fisubs
movsl
comiss
pop
nop
enter
popl
js
ds
jns
adc
mov
pop
cmp
cmpsb
add
fdivl
xorb
mov
call
and
jl
lea
ret
mov
test
jbe
mov
inc
add
cmp
je
xor
imul
je
mov
push
and
subb
and
mov
xchg
fisubrl
pop
sbb
push
das
cld
fmull
mov
pusha
cmp
adc
test
add
dec
and
xor
mov
mov
add
pop
push
pop
test
dec
sub
jne
ret
daa
enter
das
ret
push
aad
sub
mov
aas
jae
cmp
adc
xchg
xor
ss
addl
jns
or
ret
pop
adc
xor
or
sub
push
fsubl
test
mov
outsb
pop
adc
xor
xchg
jmp
xchg
addr16
out
inc
nop
fsubrs
dec
lcall
mov
adc
jl
insl
test
aas
add
xlat
pop
jmp
and
lret
lds
add
outsb
daa
push
or
push
scas
jbe
fsubrs
enter
cli
mov
xchg
xor
ret
sbbl
daa
cmpsl
movsl
js
mov
cmp
push
lock
lds
mov
outsb
xchg
dec
adc
add
data16
adc
inc
cmp
jae
jno
sahf
adc
mov
cmpsb
jmp
imulb
loopne
into
fs
and
jge
stos
dec
push
ljmp
jo
sub
rcr
add
add
mov
dec
jp
cwtl
dec
int3
mov
add
push
fcoml
mov
or
dec
sbb
inc
dec
addr16
or
push
ret
adc
stos
filds
mov
addr16
adc
pop
inc
lock
or
add
sub
push
stc
sub
push
nop
xchg
xchg
inc
mov
incl
mov
adcl
sahf
push
adc
add
lock
sub
call
dec
xor
leave
and
pop
or
shlb
stos
call
popf
popf
add
loop
sbb
fwait
mov
adc
jo
sar
test
jle
push
adc
call
add
pop
shlb
test
mov
pusha
das
aad
insl
shl
fcmovu
sub
inc
sbb
in
insl
loope
jmp
jbe
push
adc
xchg
jge
push
sub
ret
cmpsb
inc
jp
ret
push
push
inc
jge
adc
repnz
mov
aam
arpl
lcall
inc
repnz
add
jnp
sbb
or
pop
and
inc
js
pop
rclb
js
mov
push
mov
xchg
es
mov
test
inc
int3
stos
add
fisttpll
js
pop
sbb
mov
adc
dec
xchg
stos
pop
dec
pop
add
daa
jl
mov
push
dec
popf
dec
scas
inc
or
or
mov
or
adc
testl
std
cli
add
inc
fmuls
sbb
hlt
jecxz
outsb
bound
bound
push
nop
sbb
lock
add
pop
add
adc
fdivrs
js
xchg
dec
das
fiaddl
mov
stos
cmpsb
push
loop
and
inc
jecxz
sbb
sub
mov
lods
dec
fcomip
pop
rclb
mov
pop
js
pop
je
or
adc
test
outsb
stos
add
imul
push
adcl
inc
dec
lods
test
adc
xchg
lcall
je
notb
rcl
inc
sub
dec
jo
xchg
mov
dec
xor
jecxz
xlat
call
stos
fsubs
or
push
inc
cld
jecxz
push
das
pop
mov
mov
or
adc
ds
mov
adc
mov
jle
pop
push
cltd
stos
stos
out
cltd
xor
stc
adc
int
aas
gs
or
cli
in
push
push
lds
nop
fidivrl
fcomip
jo
or
das
push
pop
mov
push
nop
jge
ret
movsb
das
sub
les
push
leave
jns
jge
or
sbbb
mov
fbld
sub
into
mov
xor
pop
xor
push
push
or
nop
test
popl
out
adc
call
mov
xchg
jp
and
testb
or
adc
sbb
lock
sbb
pop
mov
add
add
outsl
inc
inc
cmp
push
push
jb
push
icebp
scas
adc
cld
xchg
sub
flds
xor
xor
sub
das
out
pop
inc
icebp
imul
sahf
add
jb
cwtl
pusha
enter
push
mov
sar
dec
add
hlt
adc
test
mov
mov
lods
sahf
xor
inc
les
xor
mov
lock
mov
cmp
sbb
mov
mov
xchg
shr
or
pop
push
jl
popw
and
xor
dec
popf
clc
bound
adc
icebp
mov
inc
sbb
cmpb
push
or
imull
imul
addb
add
daa
in
xchg
lea
nop
nop
loop
out
push
xchg
mov
shrb
push
inc
pop
js
xlat
cmp
lret
insl
push
movsb
mov
arpl
es
mov
dec
mov
outsl
xchg
pop
adc
sub
jp
dec
sahf
arpl
pushf
cmpsb
jle
notb
add
adc
jl
xchg
fisttpl
inc
insl
or
fs
cmp
js
mov
dec
pop
inc
std
or
mov
or
mov
sahf
repnz
add
in
and
mov
xor
mov
fisubrs
mov
inc
sub
test
xchg
inc
push
sub
popa
xchg
adc
push
orb
lds
inc
icebp
test
or
nop
enter
and
and
mov
or
mov
lods
push
aaa
mov
lods
test
js
dec
mov
cmpsb
push
pop
adc
call
aaa
fistl
lock
add
sahf
arpl
cmp
inc
push
push
push
arpl
mov
dec
cmp
mov
mov
push
mov
loopne
mov
inc
les
bound
mov
loop
inc
imul
dec
imul
jp
cmpsl
lock
aam
add
mov
push
dec
and
rcl
adcb
leave
jo
inc
je
inc
es
cmp
ja
add
dec
and
jbe
add
fdivrs
pusha
jnp
dec
ljmp
jecxz
adcb
jmp
cmpb
aam
andb
fcompl
inc
fmuls
dec
adc
add
mov
mov
mov
or
lds
and
inc
sub
mov
je
push
loop
sbb
sub
dec
inc
push
imul
pop
ficomps
stos
adc
arpl
fcmovne
and
in
or
inc
xchg
pop
xchg
cmp
cmp
cmp
fwait
clc
sbb
cmp
mov
push
push
insb
mov
xchg
mov
push
adcl
aam
mov
jl
push
fisttpl
cltd
xor
pushf
xchg
cmp
sarb
imul
mov
outsb
or
sbb
dec
xchg
mov
movsb
lds
jp
mov
adc
and
fwait
pop
mov
inc
lods
push
mov
adc
push
dec
cmp
add
or
pop
cs
call
cs
rorb
adc
push
jne
sbb
inc
add
and
imul
movsb
ror
cli
aas
adc
scas
add
or
aam
arpl
cmpb
sti
shlb
fidivrl
xchg
mov
fsubl
cwtl
mov
inc
hlt
cmp
inc
sbb
hlt
jmp
sbbb
sbb
fildll
pushf
inc
mov
push
shl
test
cmp
in
cs
and
outsb
xchg
movsb
pop
ret
add
addl
out
lret
clc
insb
add
mov
orl
push
jl
fs
mov
test
adc
push
rcll
pop
adc
mov
test
loopne
pop
das
pop
pusha
mov
mov
dec
mov
push
push
sahf
adc
mov
lock
xchg
push
sbb
mov
adc
ljmp
pop
push
push
fstps
sub
sbbb
push
xchg
aad
dec
stos
pop
push
aam
scas
sbb
ret
sub
sbb
adc
insl
adc
pop
inc
pop
push
pop
pop
enter
sbb
or
sbb
out
loopne
daa
dec
add
jge
jp
xchg
push
inc
andl
loop
push
push
mov
mov
mov
into
xchg
scas
shlb
lret
negl
or
pop
leave
fwait
fwait
jae
mov
out
js
loop
inc
or
or
enter
inc
js
cmp
push
rorl
hlt
and
mov
dec
or
dec
xchg
in
shll
mov
out
cld
push
xor
daa
mov
lea
push
mov
and
adc
push
add
push
jbe
add
inc
sbb
in
and
movl
lcall
push
sbb
dec
add
sbb
adc
pusha
cmpb
or
push
and
cld
ret
xor
mov
xor
sub
addr16
hlt
add
lock
mov
adc
enter
incb
inc
xchg
je
shll
add
aas
add
mov
sbb
aam
pushf
inc
xchg
pop
and
xchg
and
push
cwtl
mov
mov
mov
mov
test
aad
sbb
mov
pop
adc
insb
or
mov
test
or
sahf
pop
jbe
xchg
cmc
mov
js
jbe
push
pusha
pop
aaa
mov
pop
inc
dec
pop
fdiv
scas
lods
and
push
movsl
lcall
int3
xor
mov
push
dec
mov
push
push
push
test
int3
sbb
insl
idivb
sub
pushf
pop
lods
hlt
scas
ja
js
fisttpll
xchg
pop
out
push
sbb
sti
les
sbb
ret
adc
xchg
lds
cmc
clc
xor
and
jne
aad
and
js
xchg
or
aas
add
das
add
cmp
test
cltd
cs
sahf
adc
in
xor
pop
sbb
rolb
jnp
mulps
mov
out
push
jne
data16
adc
jecxz
xorb
push
repnz
lret
pop
jo
into
mov
ds
mov
sub
fmull
dec
leave
dec
es
subb
adc
aad
cli
inc
add
mov
jo
pusha
inc
pop
push
xchg
jp
pop
out
dec
js
clc
dec
orb
dec
or
fs
les
arpl
xchg
jp
dec
sbb
stos
ljmp
jb
mov
push
lds
sub
rolb
mov
pushf
cltd
jae
in
mov
pop
push
aas
jge
insb
cmpsb
hlt
movsb
ret
cmpsb
lret
mov
xchg
inc
orb
sahf
add
add
cld
div
jb
sar
inc
sub
pop
ljmp
je
jl
or
push
cmp
nop
insb
mov
imul
cld
dec
adc
sti
push
inc
je
push
add
sub
sbb
push
rcl
stos
lea
cmp
xchg
les
dec
loope
mov
cmpsl
inc
mov
mov
cmp
and
inc
or
repnz
aas
lods
andl
jnp
push
aas
imul
add
cmc
decl
push
mov
xchg
insl
push
mov
test
popa
loope
mov
insb
lahf
mov
mov
jp
push
xor
mov
mov
pop
lods
and
js
push
mov
inc
mov
mov
rcl
jg
stos
inc
jno
data16
jnp
stc
adc
cli
mov
cmc
jl
lods
repnz
shrl
js
inc
fldenv
xchg
add
sbb
sub
call
jnp
aam
divb
sbb
or
leave
and
sarl
pop
push
or
rcr
mov
hlt
faddl
and
js
push
out
adcl
ja
xor
and
sbb
mov
lock
adc
adc
lock
cs
cmp
pop
js
lock
mov
rcrl
xchg
or
mov
lods
notb
inc
push
add
scas
fcmovne
sub
iret
jnp
cmp
and
pusha
in
push
and
shll
bound
mov
sarb
and
mov
xchg
fnsave
sbbl
push
iret
clc
test
adc
inc
imul
ds
andb
or
mov
rolb
popf
fisubl
xchg
cmp
repz
mov
clc
mov
adc
mov
call
xor
icebp
pop
dec
arpl
cmp
rclb
enter
mov
push
push
aaa
and
add
icebp
mov
adc
movsb
lock
push
adc
jle
mov
lods
mov
imul
mov
ret
ds
negb
lret
test
loopne
xor
fidivrl
adc
fsubl
dec
outsl
jl
mov
inc
cmp
lods
adc
cmc
adc
movl
push
jo
mov
sbb
cmp
dec
or
cli
add
xchg
and
jb
clc
lods
add
xor
add
inc
imul
pushl
or
es
ficompl
add
movsb
icebp
fs
or
lds
cmp
jnp
pop
pusha
in
mov
cld
and
mov
rol
pop
add
xchg
out
xor
andl
mov
int
nop
call
xorl
or
out
dec
pop
xor
outsl
dec
mov
cwtl
cs
wbinvd
ljmp
cwtl
inc
add
orb
shl
test
lds
addl
repz
xchg
sbb
jo
pusha
shrl
mov
lods
lods
sub
outsl
or
addb
inc
cmp
imul
xor
ror
inc
mov
cmp
and
out
sbbb
and
into
decb
inc
les
push
lods
lds
fisttpll
inc
push
pop
sbb
xchg
dec
popa
inc
jecxz
push
int3
xor
or
sub
mov
dec
mov
ja
jns
pop
leave
andl
adc
pop
inc
in
sbb
adc
mov
xchg
cwtl
add
hlt
imul
arpl
pop
das
or
and
mov
add
movsb
repz
mov
lods
add
popa
adc
xor
xchg
jns
fistl
int
adc
xor
ljmp
jb
and
ss
xchg
push
push
in
sahf
pop
pop
aam
mov
mov
insl
cwtl
and
lds
mov
ss
nop
insl
jne
es
xchg
clc
mov
or
and
inc
sbb
push
dec
push
clc
mov
sub
stc
dec
pushf
sbb
sbb
out
xchg
mov
jb
add
sbb
push
fdivrs
or
outsl
dec
movsb
les
cmp
adc
or
push
mov
sub
sbb
cwtl
cs
add
test
scas
mov
pushf
movsb
add
pop
ret
sub
daa
push
std
push
lds
je
dec
mov
in
aas
push
ja
add
orb
int3
sbb
push
ljmp
movsb
cli
nop
rorl
xlat
mov
ja
repz
lods
test
stos
push
or
mov
dec
jb
adc
in
shlb
mov
xor
push
cvtpi2ps
pop
cmc
call
push
nop
clc
addb
inc
pop
mov
je
push
xlat
add
xchg
mov
push
fisubs
mov
mov
lock
mov
dec
scas
add
xchg
lock
and
adc
ss
add
push
lahf
mov
and
stos
loop
mov
or
rcl
add
jmp
add
adc
fistl
and
movsl
xchg
aas
pop
xchg
leave
outsb
sbb
lret
repnz
lcall
jp
cmp
ds
sbb
or
stos
std
pop
and
xor
addb
jl
test
in
push
outsl
dec
mov
jo
cmpsb
jo
hlt
xor
stos
mov
outsl
lret
dec
dec
inc
mov
rol
add
push
or
mov
and
xorb
dec
xchg
cmpsl
pusha
in
dec
add
jecxz
clc
inc
and
add
pusha
rcr
fwait
movb
xor
push
and
jbe
loop
fistpl
jmp
sahf
jbe
lret
cmp
outsb
cmpsb
adc
sahf
jne
repnz
clc
or
testb
dec
aam
cmpsl
mov
mov
movsl
mov
inc
inc
pop
adc
int
xor
test
pusha
movsl
je
test
add
push
pushl
mov
pop
aaa
push
movsb
pusha
pop
lcall
dec
inc
pop
in
and
and
mov
push
dec
sbb
or
xlat
lock
pop
out
insb
call
dec
pop
push
pop
xchg
ss
stos
adc
js
xchg
rcrl
mov
mov
lock
add
cmp
jb
call
cli
push
ljmp
inc
sbb
outsl
pop
rorl
push
and
ds
mov
rolb
push
sbb
in
xchg
inc
cmp
clc
sbbl
ret
add
push
xchg
loope
cmp
ds
fdivrp
enter
lods
push
mov
cmp
jae
test
or
mov
shrb
sbb
outsb
jns
insl
ljmp
adc
mov
adc
testb
in
stc
jp
lret
ds
inc
push
dec
push
fsubs
mov
ljmp
mov
add
outsb
sub
test
sarb
add
push
push
inc
pop
cmp
clc
jno
mov
dec
mov
test
movsb
das
add
jno
inc
sbb
jmp
jecxz
call
mov
mov
aas
loope
mov
cltd
std
cmovnp
or
pop
adc
ja
std
test
mov
rcl
jmp
mov
lret
mov
jbe
pop
pop
imul
ss
mov
mov
or
cld
xlat
icebp
cmc
mov
imul
stos
add
inc
xor
mov
les
aas
ss
jbe
push
mov
mov
mov
std
xchg
or
dec
push
adc
push
mov
loopne
sub
cwtl
cs
sti
pop
jbe
mov
dec
jge
sarl
mov
out
inc
mov
scas
mov
inc
push
xchg
insb
pop
or
inc
inc
jle
out
pusha
daa
mov
loopne
jp
jp
cli
jge
sub
mov
cmp
push
fbld
addb
xchg
jno
ds
lahf
add
lea
sbb
cmp
out
mov
test
shlb
lock
cmp
jmp
pusha
out
mov
lock
mov
dec
mov
mov
shlb
dec
insb
adc
add
mov
iret
out
cli
loope
fdiv
pop
pop
jecxz
mov
enter
mov
pavgb
sbb
mov
movsb
call
ss
mov
xor
dec
mov
push
jne
jg
pop
inc
fwait
hlt
jmp
push
push
arpl
lret
sbb
js
sbb
fsubrl
test
mov
icebp
nop
fadds
mov
mov
mov
inc
scas
xor
mov
ds
call
inc
jge
push
adc
jne
inc
fwait
mov
mov
jbe
add
xchg
in
cmpsl
loope
jg
inc
dec
pop
add
add
pop
adcl
mov
dec
loopne
cmpsl
inc
imul
inc
sbb
sahf
aam
test
adc
mov
adc
jle
jle
pushf
xor
or
cmpsl
sahf
outsl
sbb
call
xchg
pop
mov
mov
cwtl
jg
and
jg
test
scas
sub
mov
push
fwait
jbe
mov
dec
leave
cmp
push
adc
add
inc
loop
decb
incl
lahf
xor
lock
or
fnstenv
push
loop
std
aad
pop
out
aaa
cmpsb
decb
jp
int
sub
push
in
dec
inc
hlt
jge
or
imul
out
jle
shrl
and
xchg
lret
inc
inc
cmpsl
popa
dec
aam
add
fstpt
adc
push
stc
outsl
mov
inc
sbb
sbb
xchg
pop
mov
dec
stos
mov
xor
pop
ljmp
or
lcall
cwtl
rclb
mov
fidivs
subb
insb
push
jo
and
jecxz
rolb
jge
mov
and
jp
pusha
int3
sub
or
push
loope
addr16
ss
jmp
cli
jle
cmp
xchg
lods
adc
adc
les
and
cwtl
mov
and
fimuls
xchg
test
mov
xor
shrl
movsb
cmp
xor
dec
inc
ror
cmp
sbb
lods
div
jbe
mov
xorb
aas
xchg
jmp
out
xchg
cmpsb
in
hlt
aas
call
popa
xor
mov
cmp
cmpb
push
or
or
insl
aas
shrl
adc
inc
inc
mov
daa
pop
ja
mov
mov
adc
or
inc
inc
xchg
mov
and
inc
in
sub
aad
insb
fcmovnu
mov
adcb
push
and
inc
mov
push
icebp
mov
pop
push
add
int
ljmp
inc
dec
dec
popa
aad
jne
outsb
sbb
repnz
outsl
jl
lahf
jnp
mov
test
lods
mov
xor
dec
sahf
mov
sbb
and
std
add
sbb
or
lret
inc
lea
sbb
mov
orl
sarb
push
outsl
test
bound
push
or
fdiv
call
enter
or
add
les
mov
fs
lahf
hlt
xor
aam
and
sub
dec
cmp
stos
aad
movsl
mov
adc
outsb
out
pop
jmp
jae
stos
push
mov
jbe
push
js
stos
enter
and
adc
in
lea
ss
push
leave
cmc
daa
pushf
out
dec
xchg
fisubl
ljmp
or
jo
pop
in
sahf
or
adc
mov
jg
inc
rolb
movsb
lods
inc
push
push
andb
andb
hlt
or
rcl
cld
sarl
mov
pop
jl
mov
push
rolb
les
loop
inc
lahf
sbbl
cld
push
adc
incl
cltd
add
popa
jne
mov
and
mov
inc
les
inc
push
nop
push
dec
stos
out
bound
adc
jnp
insb
imulb
inc
mov
mov
and
add
sbb
call
or
shll
pop
addb
js
add
pop
adc
jbe
pop
sbb
adc
inc
mov
loop
xor
inc
xor
out
dec
test
push
leave
lret
shr
jle
call
mov
cmpsb
movsb
inc
ret
rol
das
bound
ret
insb
pushf
jno
mov
add
sub
fsubr
out
lods
sbb
fwait
clc
jl
jge
sarb
mov
inc
adc
out
sub
inc
xor
and
call
and
pop
sub
push
sub
out
bound
sub
and
cmp
leave
out
adcb
mov
xchg
pop
inc
nop
iret
xchg
rcrl
lea
adc
jae
incl
stos
and
pop
pop
sub
push
dec
subb
rolb
lods
push
outsl
jp
mov
mov
leave
and
imul
pop
push
out
xchg
ljmp
insb
mov
adc
push
sub
add
nop
jle
add
or
dec
adc
or
call
jo
pushf
fs
jbe
inc
jne
loop
cmp
mov
incl
add
call
mov
push
push
mov
xchg
inc
mov
lahf
out
sbb
jle
mov
fisubl
stos
mulb
sbb
xor
loopne
adc
adc
imul
loope
mov
ss
sub
pop
push
dec
jmp
gs
fs
jo
adc
sub
lods
fbstp
xor
inc
lret
inc
mov
jg
jne
jl
and
shlb
inc
xchg
popa
insb
inc
mov
fdivrp
xchg
js
rcrl
sbbb
subb
mov
adc
out
test
mov
hlt
and
vmovaps
lock
lahf
inc
cmc
test
inc
shlb
jg
add
aad
int3
inc
dec
lds
add
xlat
cmc
push
push
stos
nop
ds
jb
cmp
mov
ja
popl
xchg
xor
in
pop
aaa
cmp
and
xor
push
test
adc
inc
or
or
xor
and
push
rorb
ret
addl
mov
add
cmp
push
jmp
iret
cwtl
push
pusha
inc
cmp
scas
xor
ds
jns
and
jle
rcrl
das
enter
and
sbb
inc
cli
fdivl
pushf
jle
out
fadds
inc
int
nop
test
mov
dec
pusha
outsb
lods
mov
daa
fwait
fwait
and
jo
pop
add
sub
dec
adc
in
shlb
add
and
out
fisubl
cmp
push
fidivl
negl
cld
clc
outsb
jl
and
lcall
push
cld
sbb
loope
lret
test
jb
lods
inc
adc
sar
or
lock
sti
les
xchg
cmpb
fs
add
lods
fisubl
inc
inc
xchg
lret
imul
imul
adc
lock
test
fs
add
and
add
sub
aam
imul
lock
ror
sub
aaa
daa
sbb
mov
scas
test
fs
loopne
out
test
flds
dec
add
jo
mov
int
xchg
and
mov
adc
adc
ja
sub
mov
hlt
cmpsb
insl
push
fdiv
add
mov
push
sbb
pushf
mov
cld
outsl
mov
xchg
push
adc
mov
mov
repz
and
enter
shl
pop
lea
pop
xchg
mov
mov
out
and
sub
ret
or
addr16
inc
loop
pop
pop
fwait
mov
push
enter
mov
xchg
sbb
orb
jae
lret
test
inc
jl
insl
adc
mov
data16
cmp
pushf
add
pop
add
and
aad
xchg
pop
scas
dec
mov
xor
xchg
clc
das
mov
jp
adc
mov
dec
jo
xor
adc
insb
loopne
scas
leave
into
push
cmp
sub
inc
xlat
sub
movsb
aad
scas
and
in
or
aas
jmp
imul
dec
add
or
mov
hlt
inc
divl
lcall
sbb
push
mov
xchg
int3
jbe
add
mov
loopne
inc
adc
loope
ljmp
sbbb
inc
jmp
add
mov
jno
pop
add
test
inc
enter
negl
popa
adc
mov
dec
cli
jbe,pn
fisttps
pop
dec
bound
dec
clc
es
jb
adc
inc
ret
arpl
pop
adc
push
aas
insl
loopne
sti
mov
sub
or
lock
mov
enter
ficompl
inc
mov
int3
push
leave
scas
xorb
add
ret
stos
xchg
call
aad
xor
rcrb
sbb
shlb
repnz
orl
mov
test
xchg
ds
sahf
es
mov
mov
pop
dec
fiaddl
insl
cwtl
dec
cli
sub
xchg
mov
cmp
pop
pop
xchg
push
ret
sub
sub
xchg
insb
mov
push
mov
test
nop
mov
repz
pop
adc
adc
add
push
sub
stc
rorb
jecxz
js
and
mov
das
adcb
imul
and
clc
dec
lods
pusha
dec
jb
jno
out
int
pop
sub
mov
mull
sub
or
jns
add
cmp
push
orb
aas
mov
mov
push
outsb
push
sarb
mov
mov
and
push
push
xchg
cmpsl
pop
mov
inc
fcom
xor
xor
sbb
jle
adc
call
daa
dec
aam
adc
enter
adc
mov
cmp
loopne
fwait
push
lock
pop
loop
mov
and
push
mov
mov
adc
inc
inc
out
testb
adc
jle
push
xor
add
mov
imul
mov
push
fcmovu
mov
out
jp
dec
add
mov
xchg
repnz
jns
push
push
jle
xchg
or
ret
incb
adc
ss
and
gs
in
das
and
push
aam
mov
xor
push
hlt
fs
pop
cmp
cmp
les
ds
fwait
pop
bound
xor
cmpsb
fsubrs
push
inc
mov
xchg
loopne
movsl
and
movsb
mov
xor
push
clc
xchg
addr16
or
adc
adc
ss
sbb
stos
je
mov
adc
jl
add
mov
push
push
xor
imul
push
or
push
xor
lret
xchg
sbb
mov
clc
fdivrl
out
inc
adc
pusha
fidivl
mov
ds
dec
lahf
mov
enter
movsl
iret
lock
inc
ss
scas
push
fs
jg
movb
and
jl
cli
xlat
cmp
iret
jb
jg
int
sahf
rol
xor
aam
push
jae
lahf
inc
and
push
cmc
lea
pop
loopne
sbbb
add
pop
sub
fs
je
outsl
nop
in
mov
arpl
pushf
mov
call
pop
sahf
leave
sahf
push
repnz
fcomi
jmp
xchg
sbb
mov
loope
cld
mov
add
xor
mov
cmpsl
or
add
lahf
loopne
sub
push
enter
xor
push
sub
imul
mov
adc
fistl
ret
lods
add
add
xor
bound
jl
aas
inc
incb
mov
sbb
sub
lret
pop
mov
cmpsb
or
pop
cmp
lea
add
push
nop
loopne
clc
in
mov
jne
cwtl
or
xor
cwtl
sub
sbb
shrb
xlat
push
and
mov
sbbl
lds
push
call
test
test
out
lock
mov
mov
int3
sbb
cmpb
xchg
xchg
and
aaa
pop
outsl
xchg
pop
adcl
lods
add
push
clc
mov
adc
sahf
mov
cld
mov
hlt
jo
icebp
daa
sub
sbb
out
mov
add
cmpsb
inc
int3
sti
test
movsb
mov
push
test
das
int3
cmp
fisubs
pop
out
push
and
inc
xchg
adc
xlat
mov
pop
push
fwait
push
pusha
ss
inc
inc
ret
hlt
or
or
data16
cld
ret
xchg
test
cmp
ljmp
daa
or
mov
xor
repz
sbb
and
in
add
jbe
js
mov
xchg
int3
adc
insb
sbb
sbb
sub
or
dec
sbb
cmp
mov
cmp
outsl
push
cld
scas
adc
shll
push
mov
mov
mov
add
shl
pop
pop
adcb
test
pop
fisubl
push
gs
mov
mov
add
sbbl
mov
sarb
sbb
mov
aam
mov
insb
jp
cmpb
lcall
add
mov
std
stos
inc
mov
je
push
jmp
fs
mov
cmc
lock
cpuid
cmp
mov
pusha
push
cmc
pop
xchg
or
or
fbld
pop
jg
push
daa
lods
push
pop
daa
test
sti
xchg
addr16
pop
test
movsb
jns
ljmp
icebp
xchg
mov
int3
in
mov
lock
cmp
dec
add
xchg
fiaddl
mov
or
hlt
jbe
sarb
out
cltd
aaa
fs
cmp
sub
inc
or
mov
mov
adc
add
or
in
inc
add
push
scas
cs
pop
addb
pop
push
push
lret
mov
sarb
pop
adc
fcoms
hlt
dec
mov
hlt
pop
pusha
bound
dec
in
leave
sahf
repz
incl
nop
pop
cmp
sbb
or
fsubrl
xor
incb
sub
out
push
fucomp
scas
xor
xor
add
bound
add
push
dec
xor
stos
lods
aaa
pop
pop
ret
xchg
cmpsb
xchg
push
and
aas
add
fldcw
shlb
mov
mov
and
add
inc
mov
push
mulb
cwtl
adc
pop
mov
aas
pop
cmp
jge
jg
cli
push
xchg
mov
aad
pop
pusha
sbb
add
pop
hlt
add
add
sub
inc
jae
mov
test
mov
mov
jbe
adc
adc
xchg
outsb
push
bound
outsl
enter
sbb
add
sbb
jg
sub
jle
sub
mov
dec
scas
mov
xchg
pop
cmp
push
add
cli
lcall
and
hlt
pop
cli
mov
inc
inc
cwtl
push
cwtl
xchg
push
icebp
fildll
or
lods
repz
bound
push
cmp
xor
in
mov
addr16
and
add
fcomip
ljmp
mov
inc
hlt
orl
add
xchg
sbb
add
add
lcall
test
adc
sar
lahf
mov
or
aas
and
pcmpgtw
mov
jmp
orb
mov
movsl
pop
gs
xor
shlb
sbbb
or
mov
popl
push
mov
in
xor
xor
mov
fcmovnu
test
pop
cs
fs
and
mov
cmc
cmp
mov
adc
mov
inc
mov
scas
sub
movl
cmpb
pop
or
and
cmpsb
pop
lock
loop
sbb
imul
les
faddl
movsl
fbstp
pop
mov
push
inc
and
jle
ret
test
mov
das
mov
cwtl
cmp
sub
pop
mov
out
cmpsb
jb
push
mov
xor
push
cs
rolb
xor
sub
andb
inc
mov
loopne
addl
enter
and
adc
dec
or
jle
push
push
push
fnstenv
adc
pop
xor
scas
jp
dec
pushf
inc
cmc
movsl
inc
jl
xor
in
iret
jmp
mov
xor
jmp
aad
xchg
jbe
cmpsl
push
in
popa
incb
mov
pop
xor
and
push
sub
hlt
cmp
push
shll
ret
andb
dec
xor
mov
test
xor
add
gs
pop
mov
test
mov
and
rorb
and
ja
imul
jle
leave
ficoml
cs
dec
push
lock
icebp
adc
sbb
hlt
lcall
out
idivb
scas
adc
popf
in
rol
orb
enter
in
les
push
xor
sti
sub
aas
mov
call
mov
icebp
cli
dec
cld
and
dec
jp
mov
xor
mov
int3
mov
dec
ret
repz
call
in
push
xor
adc
dec
repz
xchg
cmp
ret
sbb
fmull
adc
xor
or
lods
push
cmpb
xor
bound
movsb
dec
xchg
fiadds
data16
and
jp
clc
sub
insb
mov
orl
adc
inc
cld
test
fs
dec
pop
mov
scas
sub
cmp
in
mov
pop
loop
test
bound
push
sbb
sub
cmp
push
lods
xor
and
push
jb
jge
inc
mov
adc
jno
jno
inc
movsl
mov
xchg
push
and
mov
jp
test
adc
mov
sbb
mov
test
dec
inc
dec
aam
dec
lret
cvtpi2ps
mov
test
sbb
ficompl
and
jne
cmp
inc
das
das
cmp
mov
cmc
or
pusha
sarl
icebp
lods
push
pop
xchg
cli
add
out
jne
jne
push
in
push
mov
stos
sub
aam
test
outsl
inc
xchg
in
xor
lods
inc
mov
jne
and
fs
xor
inc
and
or
ret
rcll
sub
pop
or
xor
imul
jns
fsubs
call
or
xorl
out
add
or
js
mov
jmp
ret
jmp
push
inc
push
ljmp
sub
cmp
push
iret
rcl
mov
push
je
jp
faddl
sub
std
orb
dec
or
ffree
sar
jo
dec
hlt
ljmp
xor
movsb
es
push
mov
cmp
mov
icebp
pop
or
mov
cmpsl
in
sub
jecxz
inc
in
sbbb
xor
aaa
subb
das
ret
or
dec
or
adc
mov
sbb
ficomps
mov
sub
or
mov
push
sbbb
cmp
je
pushf
mov
addb
mov
lock
add
push
sbb
jno
pop
scas
sub
test
xor
mov
ret
scas
jp
jmp
scas
push
mov
push
mov
sbb
mov
out
aaa
pushf
mov
ljmp
iret
or
xchg
push
adc
clc
pop
sbb
stc
out
inc
sub
loopne
adc
cmp
icebp
imul
dec
sbb
jl
mov
clc
push
mov
lcall
cmp
test
ficompl
jl
insb
jmp
sub
aaa
pop
mov
lahf
out
inc
ret
sub
add
fcmovbe
jne
dec
or
sbb
jo
lods
mov
xchg
jmp
call
movsb
push
mov
mov
or
in
fisttpll
or
xor
call
mov
ret
xchg
mov
adc
ja
adc
cmp
fs
add
lea
test
sarb
inc
push
mov
mov
push
push
cld
iret
pcmpeqb
imul
push
call
cltd
jle
inc
sub
shlb
cltd
cmp
ret
inc
push
mov
enter
jmp
ret
sub
mov
loopne
adc
push
addb
pop
adc
lods
scas
or
movsb
mov
inc
mov
shll
out
pop
shlb
and
adc
push
mov
pop
mov
into
mov
and
add
jle
imul
fisttps
mov
mov
jge
or
mov
js
inc
and
cmc
cli
test
adc
enter
inc
loope
xchg
mul
fsqrt
jb
mov
subb
add
add
xchg
fidivrl
cmp
out
mov
mov
arpl
out
cs
mov
rcrl
test
xlat
icebp
jmp
pop
add
or
sub
or
sahf
fstl
cmc
mov
pop
mov
popa
xchg
rol
jle
popa
mov
sub
pushf
add
popf
jmp
hlt
test
mov
movsb
out
sub
imul
lock
ss
push
inc
shl
lret
xchg
xor
nop
xchg
sarl
out
cltd
sub
lock
iret
inc
xchg
jo
les
into
adc
xchg
lods
jg
push
pop
mov
scas
xor
and
adc
xlat
xor
outsb
adc
cmp
add
loopne
int3
mov
adc
fists
sti
icebp
sbbl
iret
sbb
cmpsl
mov
lcall
fcomp
xchg
jg
hlt
je
and
fidivrl
call
mov
jle
jp
push
insb
sti
jne
roll
mov
cltd
mov
adc
sub
jbe
lds
subb
xor
xchg
decl
jbe
mov
or
testl
pop
add
adc
push
incl
push
inc
shlb
test
push
jg
push
cld
mov
jns,pt
mov
xor
outsl
es
or
push
pop
aad
pop
aad
xchg
idivb
inc
cwtl
imul
pop
xchg
ret
sbb
mov
mov
pop
or
jg
cs
add
pop
inc
pop
ds
xor
cmpsl
mov
jae
pop
inc
mov
or
mov
test
adcb
xchg
es
sub
add
dec
test
add
movsb
mov
fidivrs
das
bound
add
sub
push
push
lret
add
mov
sbb
ficoms
lock
pminub
lret
es
xchg
xchg
xor
mov
out
push
mov
pop
push
adc
mov
loope
dec
dec
add
pop
pop
cmpsl
into
popa
fdiv
out
xchg
push
fs
lahf
lock
dec
jo
cwtl
pop
fistpl
cmp
fmuls
out
adc
in
xchg
xor
pop
jo
sbb
aam
dec
sub
xchg
jne
stos
popf
std
sbb
and
pop
aam
scas
dec
jno
push
dec
movsb
les
aad
sarl
sbb
das
mov
sub
sbbb
leave
nop
push
ret
mov
scas
xor
sub
das
pop
and
sub
cmp
insb
add
cmp
push
pop
aas
or
push
push
lret
and
inc
xor
ljmp
sub
scas
and
lcall
dec
in
mov
int3
mull
les
in
inc
arpl
rcrb
mov
and
out
xchg
xchg
dec
push
pushf
mov
mov
mov
dec
scas
adc
outsb
cmc
xor
xorb
icebp
mov
sub
ds
lods
outsb
out
mov
stos
sub
clc
push
pop
rol
lahf
add
faddp
pop
xchg
leave
xchg
outsb
test
inc
add
sub
inc
loopne
cmp
insb
push
dec
xchg
les
insb
add
inc
bound
sahf
add
push
rcrl
add
arpl
js
pop
arpl
imul
pushf
or
enter
movsb
mov
mov
fisubl
ret
dec
mov
cwtl
fidivrs
sahf
xor
test
xchg
jnp
adc
dec
aaa
mov
dec
mov
inc
dec
mov
incb
inc
scas
arpl
addr16
loopne
add
call
push
stos
fnsave
fs
fiaddl
mov
xchg
push
in
aaa
jae
sub
xor
mov
and
and
xchg
push
rolb
dec
xorb
fs
lret
xor
mov
inc
cwtl
sub
imul
inc
test
and
or
fisttps
or
xchg
dec
xor
xor
dec
jle
frstor
cmc
xchg
and
jge
leave
lret
mov
dec
adc
es
cmp
xchg
movsb
mov
xchg
sub
int3
mov
xchg
xor
add
sub
sti
lods
dec
sar
xor
push
aad
and
push
std
sub
mov
fcomip
xchg
or
std
or
dec
outsb
mov
xchg
mov
mov
jo
dec
out
mov
fsubr
pop
mov
cmp
cmc
cmp
adc
xchg
dec
and
or
and
stos
or
inc
ret
loop
add
int
gs
and
inc
loope
xor
les
sub
sbb
movsb
add
mov
dec
xchg
xchg
orb
mov
loop
jo
dec
lea
fwait
jo
in
sbb
into
cmpsb
xor
or
dec
inc
cmpsl
pop
inc
inc
daa
xor
addb
push
xchg
aam
not
test
or
mov
pop
popa
inc
in
sub
push
subb
adc
xchg
outsl
sbb
xchg
in
mov
jnp
mov
jmp
add
pop
inc
adc
sub
mov
mov
sbb
and
lret
sbb
inc
call
jmp
jl
out
push
fisubs
icebp
and
mov
roll
sub
pop
mov
in
lock
scas
repnz
andb
mov
push
push
loope
addr16
add
and
out
pop
rolb
je
mov
jo
add
mov
sub
mov
fs
jp
add
dec
sbb
cmp
mov
add
adc
imul
rorl
repz
dec
fisubl
mov
add
sti
imul
push
add
xor
orl
dec
mov
mov
daa
mov
out
rol
bound
dec
mov
loopne
and
xlat
icebp
pusha
lret
xchg
cmp
or
rorb
push
xchg
push
dec
mov
push
xor
aad
jno
push
jecxz
insb
pop
js
sub
inc
sar
dec
inc
ja
or
add
inc
sti
out
mov
idivl
clc
inc
adc
cmpsb
pushw
push
or
cld
push
aad
mov
ret
es
fs
adc
pop
mov
lock
mov
jbe
pushl
aam
mov
std
pop
insl
mov
aam
and
out
pop
mov
jno
adc
pushf
cli
add
add
sub
or
xor
hlt
mov
rcrb
in
mov
pop
inc
sub
mov
xchg
or
or
xchg
es
stc
lods
loopne
pop
lea
jl
push
push
mov
cmc
add
cwtl
int3
or
lock
adc
cmp
sbb
imul
xchg
xor
push
sbb
cmp
adc
sbb
loope
push
pop
or
cmp
jg
lret
mov
ret
iret
repnz
cmp
repnz
insb
inc
aaa
rcll
inc
lds
jl
cwtl
push
cld
jp
bound
add
push
out
xchg
jle
jbe
or
fs
jb
pop
inc
pop
adc
addl
call
and
add
int
xor
test
aaa
movsl
jbe
mov
push
nop
ret
js
ss
ljmp
int3
and
mov
rcl
pop
inc
inc
out
inc
add
mov
cmpsl
xor
fistl
mov
mov
push
adc
popa
sahf
pushf
jno
xor
dec
pop
and
sub
push
fcomp
rolb
dec
dec
adc
repz
pop
xchg
rcll
pop
mov
aam
push
and
mov
and
mov
fstpl
push
push
inc
push
add
cmpsb
fildl
jno
popf
out
mov
inc
mov
sbb
and
xlat
ret
mov
ljmp
mov
bound
insb
cwtl
jo
cmc
mov
add
push
inc
cmp
inc
jg
call
push
inc
sbb
loope
pop
xchg
pop
inc
cld
fiaddl
outsb
ret
push
jo
roll
je
xor
push
dec
pop
test
mov
push
adc
inc
add
pop
inc
inc
in
mov
cmc
push
inc
jno
dec
inc
xchg
mov
out
icebp
mov
stos
mov
mov
daa
hlt
leave
pop
cmpsb
incl
ljmp
push
orb
mov
adc
out
loop
sub
scas
mov
mov
add
test
push
pop
dec
stos
nop
sti
fistpll
rcl
mov
outsl
jg
xor
add
shrb
xchg
repz
paddsw
jo
mulb
add
int3
cli
mov
pop
push
inc
add
sub
add
pushf
jb
orb
ret
imul
lret
in
cmpsl
aam
or
lea
div
fcoml
adc
sbb
cmp
lret
hlt
xchg
sarl
test
jle
imul
dec
out
add
scas
cwtl
or
ljmp
mov
and
sub
adcb
add
pop
or
js
loope
aad
daa
ds
push
sbb
add
sbbb
xor
rolb
pop
and
mov
lds
dec
adc
push
cmp
inc
xchg
insl
lock
out
insb
in
outsl
cmp
inc
xor
les
les
icebp
lods
sbbl
xchg
jo
into
push
outsl
pop
fstpt
insl
sti
clc
push
testl
in
mov
mov
cmpsb
int3
pop
dec
sub
aas
inc
dec
push
and
ret
ds
pushf
inc
bound
pusha
jmp
xchg
mov
insb
cmpsl
aam
or
xchg
adcb
adc
sbb
outsl
push
sub
nop
es
add
xchg
popf
in
mov
xor
test
pop
pop
jl
mov
stos
dec
pop
fs
mov
cltd
jmp
cmp
add
add
pop
dec
cld
mov
repnz
rcll
xor
std
mov
fcmovnb
rorl
nop
imul
loop
push
cmp
arpl
inc
cmp
mov
jp
or
adc
sub
test
decb
cmp
push
xchg
sbb
push
outsb
push
mov
mov
and
cmp
sub
jmp
or
loop
jge
xchg
mov
testb
add
push
cld
xor
push
sub
mov
mov
add
ss
pop
push
and
cltd
push
adc
rolb
xchg
clc
push
jle
adc
and
pop
lret
call
mov
mov
popf
fnstcw
adc
xor
add
fwait
jo
aad
sub
xor
or
pop
sub
push
dec
movsb
jg
loop
push
insb
or
inc
outsb
jo
xchg
inc
ljmp
pop
in
stos
scas
sub
and
mov
or
ss
lret
cmc
adc
mov
mov
int3
popf
mov
inc
cmp
jl
std
and
dec
ror
out
pop
pop
push
or
cmp
adc
jno
repnz
lock
mov
xchg
lahf
sub
xchg
pop
mov
sub
stc
mov
or
pop
mov
shrb
js
aaa
pop
rolb
or
or
out
out
subb
sbb
ss
adc
push
and
fldenv
pop
mov
inc
js
adc
inc
sbb
or
call
dec
cli
outsb
xlat
cmp
cli
aam
ja
test
or
xchg
xchg
fisubs
mov
xor
pminsw
lods
cld
loope
sub
sub
xor
push
mov
adc
xor
pop
call
les
rclb
adc
lahf
in
inc
pop
aas
push
jp
push
sub
xchg
call
cmp
cmpsb
mov
push
es
cs
jne
adcb
mov
or
ss
int3
mul
or
shll
js
add
xor
sbb
mov
fldt
dec
add
dec
fistps
jge
leave
mov
inc
dec
mov
or
je
add
cmp
mov
mov
ret
push
push
adc
imulb
dec
hlt
not
and
sbb
xchg
mov
cmpsw
fmull
push
or
inc
loope
mov
sarb
sbb
lahf
fadds
push
loop
mov
xchg
xchg
add
clc
jne
sbb
cs
mov
xor
aam
arpl
inc
push
sub
mov
dec
mov
inc
ja
xchg
inc
ret
xchg
xchg
push
adc
and
mov
push
addr16
jge
sti
in
rcl
adc
push
dec
shr
outsl
insb
hlt
orl
jge
add
and
outsl
dec
test
fiaddl
push
shr
subl
loopne
into
jno
outsl
or
loope
jecxz
xor
mov
mov
jl
mov
imul
dec
mov
cli
call
xor
imul
outsl
mov
cmpsb
js
je
add
dec
cmc
leave
inc
divb
add
mov
sub
push
pop
js
sbb
sbb
push
clc
inc
push
fs
add
fs
adc
test
ljmp
lods
fdivs
xchg
add
mov
jg
jl
inc
xchg
test
stos
cltd
dec
popa
sbb
test
and
aaa
cs
stos
cs
push
xchg
ss
push
popf
push
mov
sbb
and
xor
dec
or
jb
sub
add
cmp
in
dec
es
insl
movb
movsl
xchg
fmulp
mov
cmp
jp
mov
inc
xchg
addl
push
sbbb
sbb
pusha
or
cmp
repnz
ds
incl
pop
mov
mov
test
out
add
sbb
mov
stc
mov
int
cmpsl
push
or
xchg
shrl
fildl
test
push
fs
xor
sub
clc
sub
xchg
dec
cltd
and
and
es
lock
add
and
imul
out
ds
shlb
dec
mov
in
or
xchg
mov
lds
sub
xchg
adc
sbb
inc
call
mov
adc
and
adc
xor
mov
fbld
lock
push
sahf
inc
aad
arpl
mov
out
or
and
js
call
sarl
dec
sbb
adc
nop
push
xchg
add
xchg
or
sub
mov
and
mov
jmp
inc
cmp
es
adc
fdivrs
mov
lret
jo
insb
pop
pop
pushf
sub
aad
adc
pop
adc
add
mov
push
sbbl
and
ficoml
loope
xor
addb
or
setbe
cmp
pusha
lock
sahf
pop
stos
cmp
ss
pusha
fstpl
mov
xchg
test
fsubrs
lcall
mov
mov
outsb
mov
inc
cmp
mov
cld
or
jmp
bound
inc
sub
std
jns
rolb
dec
aam
adc
mov
dec
pop
cmp
push
in
test
dec
dec
imul
call
jae
bound
pop
std
sbb
leave
jo
ret
shll
sbb
cmp
jg
shl
jecxz
cs
mov
jmp
insb
fcomp
xor
int3
or
adc
push
mov
call
les
xchg
data16
into
jb
clc
sub
pop
and
push
repnz
test
mov
movb
fdivrs
das
ret
mov
xor
rorl
cs
adc
dec
cs
scas
adc
mov
inc
int3
push
adc
negl
lods
mov
lahf
push
cld
mov
aas
or
stos
mov
and
pop
add
cli
sbb
lds
sar
and
adc
jns
shrb
test
aam
jo
mov
sbb
xor
mov
outsb
inc
shr
push
fmul
mov
jb
shl
test
dec
into
aam
push
mov
outsl
xor
or
mov
cwtl
sbbb
sbb
ror
popa
lahf
nop
ret
push
xor
addl
dec
add
jg
jae
sbb
sub
in
es
lock
dec
pushf
repnz
xor
aas
xor
lods
js
orl
adc
xor
incl
adc
in
cli
iret
rcrl
jbe
pusha
ljmp
xor
rorb
xlat
lret
pop
xchg
clc
push
insb
and
lock
rclb
adc
pop
fsubp
jo
arpl
lods
repz
mov
jge
and
cmpsb
adc
adc
aam
or
pop
adc
cld
or
dec
dec
mov
mov
dec
xlat
test
xchg
jg
jg
mov
aad
pop
inc
mov
and
sub
mov
sbb
mov
xchg
call
xchg
push
notl
cmp
inc
pop
subl
pop
ss
js
cmpsb
cli
adc
mov
mov
jle
iret
inc
movl
push
sarb
jmp
gs
or
and
sarb
cmp
mov
cmp
and
push
push
pop
mov
sub
fsubs
cmp
repnz
dec
lcall
pop
clc
lods
jno
pop
mov
push
mov
fisubrl
fmull
add
into
sbb
add
lock
add
popf
outsb
es
or
popa
aad
xchg
mulb
aaa
dec
mov
inc
les
addl
jg
inc
or
and
jno
je
xor
fucomip
lock
int3
lods
sbb
mov
dec
insb
scas
xchg
xor
ficoml
or
push
mov
ror
adc
sub
mov
jge
loop
xor
loopne
repz
cmp
inc
mov
mov
mov
scas
dec
pusha
sti
adc
imul
sbb
std
xchg
jno
fs
inc
mov
aam
movsl
pop
sub
les
cmp
cmp
mov
sub
mov
aad
loop
dec
je
inc
dec
and
decl
xor
pop
add
hlt
mov
xor
cltd
outsb
mov
jno
scas
jmp
inc
inc
xchg
add
or
or
clc
aam
cli
cmp
cli
inc
jecxz
cmp
pop
les
jle
dec
gs
lret
sbb
lock
insb
sub
adc
cwtl
pop
cmpsb
sbb
mov
push
sub
jle
sbb
inc
rclb
andb
jge
outsl
paddb
rolb
mov
pusha
or
test
mov
loop
xchg
mov
jle
and
xchg
ja
popf
xorb
addb
xor
or
adc
adc
jne
icebp
sbb
fists
jp
inc
mov
cmp
fmul
jl
mov
and
adc
jle
loopne
mov
mov
push
sub
xor
lret
lcall
lret
cmpsb
inc
push
mov
adc
insb
mov
adc
clc
daa
arpl
sub
pop
and
and
rcrb
inc
or
and
push
sbb
pop
nop
push
hlt
push
addl
sub
mov
xchg
xchg
sbb
imul
pushl
pop
lods
jmp
les
pusha
jb
ret
sbb
hlt
lds
pmaxub
in
dec
adc
xor
js
inc
push
in
in
cli
pop
jmp
mov
jb
shr
lock
jbe
cmp
inc
dec
and
cld
arpl
pop
lcall
sahf
addl
push
mov
sbb
and
loopnew
repz
in
sbb
mov
cli
in
xlat
cmp
xchg
sub
or
xchg
pop
adc
pop
dec
mov
lret
or
test
insl
es
in
adc
dec
pushf
inc
mov
mov
pop
ds
xchg
js
mov
pop
enter
jnp
aad
xor
pop
and
cmp
pop
js
adc
mov
adc
rcrb
add
push
xchg
push
adc
lods
test
or
fwait
test
sbb
xchg
mov
sub
push
dec
mov
repz
and
cmp
xchg
imul
icebp
aam
pop
adc
rcr
and
sub
ffreep
dec
cld
ficoml
push
out
test
mov
negl
and
jo
rcll
pop
pop
sar
push
test
outsb
or
mov
lods
xchg
mov
loopne
dec
dec
mov
jecxz
test
mov
push
jb
adc
xlat
shlb
sub
jmp
xchg
inc
test
rorl
ljmp
jmp
jmp
hlt
out
test
push
dec
dec
mov
dec
fwait
jo
faddl
mov
mov
popa
dec
dec
test
or
adc
scas
push
cltd
xor
loopne
leave
addb
mov
std
sbb
mov
repz
enter
repnz
fwait
or
rcrl
jp
rorl
ljmp
psubb
out
shlb
push
jg
add
and
ret
mov
cmp
xor
mov
rclb
ds
jge
jno
add
je
hlt
popa
and
pop
pop
popl
test
ficoml
lahf
pop
jp
xor
sub
test
adc
jne
sbb
mov
arpl
pop
mov
mov
mov
mov
shll
sub
jp
jb
call
fidivs
adc
xchg
sbb
jmp
nop
inc
push
xchg
mov
outsl
stos
mulb
incb
test
adcb
ret
jo
lcall
jbe
in
jb
int3
hlt
sbb
xchg
movsb
repz
push
mov
stc
and
jp
xor
loopne
dec
mov
sti
inc
mov
mov
and
adc
mov
sahf
inc
pop
xchg
js
mov
incb
les
jno
rolb
hlt
fdivrs
xrelease
test
mov
adc
daa
or
adc
push
in
inc
in
cld
pop
pop
cmp
push
push
sub
out
pop
stos
icebp
or
out
lret
or
movsb
mov
aad
mov
add
push
mov
lods
negb
jle
pop
test
mov
pop
pop
icebp
mov
dec
mov
nop
in
ljmp
dec
pop
sti
push
xlat
sbbb
push
xchg
inc
clc
mov
add
je
and
pop
test
insl
in
inc
pusha
pop
pushf
add
cwtl
mov
jbe
lock
pop
cltd
aaa
sbb
and
test
cltd
flds
push
cmp
mov
mov
xor
shrl
test
aas
sbb
lods
ljmp
insb
pushf
pop
mov
pushf
jno
and
xchg
mov
cmp
enter
sub
inc
out
hlt
or
add
xor
lds
jle
jne
pop
mov
inc
test
loopne
lahf
and
in
and
mov
fiaddl
or
js
sahf
fwait
pop
js
loop
and
jo
jp
mov
mov
xorb
add
cmc
lods
jp
push
or
cmc
pop
in
adc
test
rolb
in
mov
push
add
aam
shr
inc
push
icebp
aas
mov
push
cmp
sbb
xchg
loopne
inc
sbb
mov
xchg
popa
movsb
hlt
jb
mov
xchg
loope
lea
stc
adc
subb
je
sbb
cli
sub
xchg
xchg
addr16
lods
imul
jmp
jb
cmpsl
repnz
adc
mov
shlb
clc
mov
aam
inc
sub
or
or
shll
test
inc
popw
and
pop
mov
shll
jmp
xor
jne
pop
adc
fs
push
decl
xor
sbbl
jbe
pop
push
bound
sub
shrl
roll
call
je
cmp
pop
and
cmp
add
push
sar
push
push
movups
push
andl
push
jecxz
insl
or
cld
sub
fcmovnbe
fimull
xchg
orl
adc
sbb
push
pusha
mov
dec
dec
pop
and
mov
jo
and
xchg
xor
aam
and
fsts
in
ss
jg
push
mov
pop
fisttps
adc
movb
cli
pop
and
jno
jns
aas
dec
and
and
pop
cmp
mov
stc
jl
shlb
lods
dec
aas
add
and
xchg
popa
ret
adc
adc
jo
mov
pop
ret
xor
pop
mov
push
shlb
push
add
out
dec
js
sahf
insb
and
rorb
push
push
loope
pop
xchg
xor
inc
jmp
dec
push
push
and
xchg
mov
int3
test
push
les
nop
sub
stos
scas
dec
rcl
jbe
add
xchg
cmp
or
nop
push
iret
sbb
loop
or
das
popa
adc
sbb
call
cmp
orb
notb
mov
ss
cmp
and
xchg
divl
push
inc
lds
inc
sarb
push
insl
adc
in
adc
dec
mov
xlat
and
push
add
adc
push
lret
cmp
rol
das
and
push
sbb
mov
xor
out
xor
data16
xchg
and
sbb
ljmp
fidivs
shll
stc
clc
push
jle
push
mov
push
jge
data16
sbb
and
bsf
pop
push
and
xchg
loope
bound
insl
jmp
movsl
cmp
add
lcall
ds
xchg
cmp
mov
cld
add
jne
cmp
jbe
dec
push
cmc
icebp
in
inc
push
add
push
cmpsb
out
mov
shll
and
xor
mov
xor
iret
sub
inc
ret
gs
jg
test
sahf
pop
inc
cmp
mov
dec
outsl
dec
inc
push
vpminsw
cmpsb
fs
mov
and
ret
jb
movsl
fwait
add
cli
rcr
fcomi
lods
inc
in
mov
mov
mov
cmpsb
mov
sub
mov
adc
add
bound
out
adc
adc
mov
ljmp
test
xor
inc
in
iret
or
mov
cmc
xchg
dec
xchg
cli
stos
cmpsl
pop
mov
cmpsb
cmp
mov
testb
call
inc
rcll
mov
pop
push
mov
pop
and
dec
sub
dec
icebp
mov
les
call
rcl
les
pop
adc
sub
adc
xor
cs
push
sub
add
sbb
push
xor
dec
int3
adc
xor
loope
cli
pop
and
and
pop
add
shlb
inc
inc
imul
xor
movsb
inc
add
cmc
jo
pop
leave
callw
je
sub
mov
push
mov
or
lahf
xchg
mov
add
repnz
shll
sub
andb
xchg
pusha
mov
pop
mov
add
enter
xor
adc
add
mov
pop
xor
jbe
je
sahf
loopne
in
jmp
cmp
inc
mov
lock
or
iret
add
jnp
xor
orb
mov
mov
pushf
xor
adc
mov
shrl
sub
js
sub
insb
leave
fs
in
cmp
pop
test
mov
adc
or
jno
mov
mov
and
jmp
sub
dec
add
mov
scas
jbe
cmp
pusha
cmp
adc
daa
lcall
bound
lods
hlt
add
je
inc
fcmovnbe
mov
movsb
add
or
pop
mov
jecxz
xor
cmp
mov
cwtl
or
xor
cmp
mov
outsl
sbb
fdivrs
or
jg
movsb
push
cvttps2pi
push
mov
or
or
mov
idiv
jns
sbb
push
and
or
cs
lock
popf
jbe
popa
sub
sub
mov
add
je
inc
push
movsl
and
int
cmp
std
sbb
xchg
mov
jl
dec
inc
call
js
sbb
or
ss
fiadds
orl
inc
movb
adc
push
mov
push
sbb
sbb
pop
aam
lret
pop
es
loop
addb
pusha
popf
bound
adcl
pop
mov
jmp
movsb
inc
push
shrl
mov
fldt
adc
sbb
pop
test
pop
mov
cmp
aaa
sub
xchg
cmp
mov
and
orb
pop
int
and
sahf
mov
push
pop
insl
and
insb
aad
inc
cmp
jecxz
call
sub
xchg
repz
stos
sub
movsb
or
imul
hlt
add
adc
fwait
push
lea
shr
call
inc
and
jp
lcall
ret
rclb
mov
pop
cwtl
call
mov
loop
pop
pop
cltd
fmuls
fisubl
hlt
das
xchg
inc
ljmp
or
push
sub
shl
sub
adc
shlb
movb
idivb
test
test
fnstsw
movsl
pop
mov
movsl
add
xchg
lds
lret
mov
jle
and
push
in
leave
dec
ljmp
jl
lods
mov
jo
jo
ljmp
sbb
pop
xor
adc
scas
add
mov
push
pop
sub
roll
or
push
xchg
fdivs
mov
adc
pop
into
je
sub
sbb
cmp
sbb
and
adcb
cmpl
cmp
shlb
cmp
int3
fs
stos
lods
mov
dec
mov
xchg
dec
pop
out
mov
insl
inc
xor
mov
pop
xchg
adc
push
ss
adc
push
cmp
and
cmpsl
sub
mov
or
imul
and
adcb
inc
pop
mov
push
push
arpl
mov
fsubl
int3
dec
adc
lcall
mov
inc
jne
fimull
jnp
ljmp
mov
push
mov
icebp
sbb
hlt
mov
and
lcall
pop
lock
mov
adc
inc
dec
sti
ljmp
mul
outsl
push
xor
outsb
xchg
pop
inc
fiaddl
sbb
es
lea
leave
add
push
xlat
in
clc
push
mov
xchg
lret
cmp
pop
sbb
pusha
movsl
mov
ds
inc
or
or
test
xor
mov
rorl
mov
cmpsb
dec
fstpl
or
and
out
sbb
lcall
arpl
adc
sub
or
sub
ud2
xchg
enter
ja
pop
xchg
std
mov
jle
lea
mov
out
push
test
call
xchg
adc
fisttps
test
sub
test
push
mov
ss
arpl
inc
cmpb
cmpsl
scas
push
sbb
mov
pop
push
push
jl
ds
xor
sub
mov
mov
cmp
mov
test
mov
clc
xlat
ret
mov
mov
push
pop
mov
inc
xchg
fdivl
pop
xor
cwtl
mov
dec
pop
incl
cmp
pop
aaa
or
out
mov
aaa
adc
jne
sub
std
imul
inc
stos
jl
dec
jne
mov
mov
pop
pop
jno
bound
out
fbstp
bound
movsb
inc
pop
or
movsb
test
or
movsl
mov
insl
mov
lock
dec
jnp
dec
jg
fwait
fldt
aam
xchg
test
adc
sbb
mov
dec
rcl
mov
scas
scas
adc
out
push
enter
sub
xchg
in
mov
clc
adc
shrb
fildll
lock
fdivrs
scas
push
out
xchg
popa
or
out
pop
mov
stos
rol
test
subl
adc
pop
ljmp
out
mov
jno
xchg
push
movsb
shll
sbb
pop
dec
xchg
adc
dec
inc
dec
jb
jle
sbbl
xchg
pusha
mov
and
repnz
fcom
cli
nop
testl
push
or
mov
push
jmp
pop
mov
addb
cmp
cmp
repnz
inc
cld
popa
movsl
jb
pop
repz
push
adc
scas
mov
sar
xor
adcb
mov
mov
leave
test
pop
xor
mov
sti
inc
sbb
fmull
cld
aad
jbe
add
lcall
mov
jne
dec
test
or
cmpsb
mov
lea
ret
mov
push
mov
mov
push
incb
push
adc
in
incb
dec
adc
loope
insb
rclb
mov
out
rclb
outsb
inc
mov
ret
add
inc
lahf
push
test
jge
jb
andb
inc
xadd
cld
and
shlb
je
jbe
pop
xor
push
aad
push
mov
sahf
cmc
mov
jnp
dec
loope
incl
out
popf
iret
inc
push
fisubrl
popa
inc
movsl
inc
outsb
inc
inc
adc
mov
rcl
movsb
scas
and
mov
and
pop
sbb
fisubrl
insb
or
cmp
fbld
lock
dec
dec
push
or
shlb
sub
pop
xchg
shl
and
fimuls
push
insl
jg
jp
rorb
mov
inc
push
outsl
jo
xchg
hlt
call
mov
test
mov
lods
mov
and
shrb
mul
pop
sbb
sub
mov
push
gs
xor
mov
nop
push
mov
inc
push
aam
ficoms
mov
imul
rol
xchg
lret
add
mov
mov
xor
adcb
jns
mov
cltd
ljmp
sub
out
loopne
cld
mov
adc
std
sbb
mov
adcb
mov
push
add
mov
or
xchg
ds
jo
in
inc
jae
shlb
xor
sbb
pop
fwait
push
adc
inc
loopne
sbb
add
mov
jnp
shlb
jb
xchg
and
inc
adc
lock
lods
xchg
push
sti
add
les
sbb
shrl
fidivrl
adc
pop
push
jbe
mov
sbb
lods
xchg
test
lds
and
inc
push
inc
pop
jg
lock
test
and
sub
push
and
ljmp
loope
cld
pop
mov
xlat
xchg
bound
mov
push
ds
cmp
dec
or
aas
enter
push
fdiv
jmp
sbb
ficoms
and
and
enter
loop
adc
sub
pop
cmp
mov
imul
dec
mov
push
push
mov
int3
les
jge
roll
in
lods
sbb
es
rclb
je
mov
mov
scas
lret
ds
mov
and
jnp
push
sub
jg
pop
push
stos
adc
rcrl
pop
in
lods
nop
or
fisubrs
mov
mov
adc
fs
push
shrl
das
in
cli
cs
ljmp
jecxz
push
sub
cs
add
mov
dec
xor
aaa
inc
inc
subl
scas
pushf
adc
mov
mov
adc
pusha
lcall
mov
ret
jbe
or
or
push
adc
sub
dec
dec
inc
sub
jmp
arpl
daa
ds
push
pop
ret
nop
les
das
jecxz
cmp
clc
fs
cs
mov
enter
cld
mov
mov
dec
jl
sub
sbb
dec
or
adc
lcall
ljmp
pop
orl
std
xor
jns
or
and
out
jo
stos
adc
call
in
jecxz
mov
lret
push
outsb
xchg
sub
cmp
and
inc
hlt
sbb
mov
sbb
or
push
sub
sub
dec
gs
cmp
sbb
mov
insb
inc
adc
push
add
ljmp
push
xchg
xor
cmp
push
jbe
in
add
mov
mov
lods
or
jle
rcrb
dec
int3
pop
or
js
or
jbe
or
in
inc
push
das
rcr
mov
inc
jo
xchg
inc
dec
adc
xor
mov
stos
inc
imul
xor
faddl
mov
push
fdivr
sub
dec
pusha
cwtl
rcrl
mov
mov
insb
fsts
aad
push
xor
mov
and
fimull
mov
add
outsb
add
pushf
lock
out
les
mov
scas
lret
fwait
sti
add
sub
mov
ljmp
mov
push
sbb
jne
in
dec
xor
push
in
imul
loop
daa
les
push
cmp
mov
insl
pop
add
fdivrl
jecxz
xor
cld
cltd
loopne
or
xchg
ficomps
adc
ret
jp
nop
sahf
jbe
in
mov
in
pop
pop
and
inc
cmp
popa
test
dec
notb
ss
out
push
xlat
adc
push
insb
insb
cmp
mov
mov
mov
xor
mov
xchg
repnz
sub
ja
call
call
in
jl
popa
adcb
pop
cld
and
scas
outsb
sub
xchg
xor
add
mov
sub
es
xchg
shrb
outsb
push
or
adc
mov
dec
xor
lea
cmp
test
mov
jmp
ljmp
dec
push
mov
mov
test
dec
jo
insl
push
test
adc
cli
icebp
in
leave
cmp
dec
scas
sbb
test
xor
sub
push
push
fs
out
or
or
add
in
sub
pop
dec
and
dec
and
movsb
xlat
outsb
addr16
rcrl
push
arpl
fidivrs
push
bound
pop
faddp
dec
adc
stc
or
pushf
jge
push
pop
push
cmp
pop
and
and
inc
push
sbb
or
incl
sub
mov
adc
sub
dec
inc
inc
adc
enter
jecxz
fs
fisubrs
sbb
les
cli
push
xor
adc
add
add
hlt
es
cmp
ja
and
int
call
ds
lret
fistl
pop
mov
push
fmuls
push
cmp
adc
stos
sub
sub
nop
pop
sbb
mov
push
sub
xor
loopne
sahf
imul
fidivrs
mov
adc
inc
sti
ljmp
ret
pop
jle,pn
loope
sar
std
sarl
xor
xchg
pusha
sbb
pop
dec
fsubrs
and
outsb
xor
fsubrp
loopne
dec
push
mov
cmp
mov
mov
ret
rcl
jmp
xlat
inc
push
aaa
pop
es
mov
dec
das
pushf
mov
mov
mov
rorl
pop
cmp
cmpsb
loop
loopne
push
push
mov
push
xchg
xor
call
jo
jle
sub
loop
add
sub
mov
dec
ljmp
sub
cmpsb
es
movsl
push
mov
aas
loopne
adc
aas
mov
mov
mov
stos
fiaddl
enter
or
rol
imul
lods
adc
aad
inc
cmpsl
adc
push
dec
mov
popf
push
push
stos
mov
mov
dec
jge
ror
xchg
and
adc
ror
test
stos
call
sbb
pushf
jl
dec
dec
xor
sar
xchg
pop
cmp
add
sbb
xchg
stos
daa
mov
adc
in
test
add
test
rcrb
push
movsb
mov
adc
or
bound
dec
rolb
pop
push
lods
mov
sbb
inc
outsl
mov
mov
decb
inc
add
mov
mov
mulb
dec
mov
and
mov
pop
loope
andb
jae
imul
nop
mov
ficoms
dec
cmp
inc
mov
adc
mov
test
cmpsb
xchg
pop
xor
add
push
pop
inc
jno
fs
and
jmp
and
xor
lods
jp
pushf
fucompp
mov
in
inc
aas
mov
dec
inc
imul
add
inc
into
push
jl
pop
mov
clc
xchg
xlat
cltd
out
cld
cwtl
push
cld
decl
push
insb
mov
cli
dec
mov
jo
mov
into
imul
add
sub
sub
sub
fdivs
scas
mov
rcrb
hlt
sub
lods
add
push
ljmp
rolb
cld
pop
pop
or
add
pop
push
dec
lds
cmpsl
nop
into
pop
pop
jno
add
jo
adc
mov
mov
int3
add
cmp
adc
mov
cmpsb
mov
push
jbe
sub
fs
xchg
add
filds
aaa
inc
and
sub
cmp
jo
orl
test
test
ss
ljmp
adc
hlt
push
pop
imul
shlb
cld
jecxz
cmp
push
insb
xor
mov
pop
pop
pusha
add
mov
shrb
ss
lcall
jge
lret
ljmp
ss
adc
lret
fstpt
lock
dec
dec
cmp
lret
jno
pop
lcall
push
pop
push
dec
or
inc
jle
pop
bound
in
jbe
xor
dec
adc
js
dec
push
xorb
jp
aam
push
aam
push
cmp
mov
cmp
div
xor
fiaddl
xchg
sub
mov
jno
sbb
xchg
xchg
and
mov
and
lea
xor
test
sbb
icebp
fcomi
cmp
fmuls
xchg
mov
notb
xchg
pop
add
out
loop
or
jbe
add
pop
xor
lock
or
sbb
loop
mov
add
in
or
sbb
andb
xchg
shll
mov
sar
shlb
aam
ss
orb
stos
xchg
lods
and
fildll
inc
repnz
inc
or
jbe
mov
cmpsl
mov
push
adc
xchg
mov
cmp
push
je
push
sbb
fdivr
pop
sbb
mov
into
sub
jl
testb
movl
sar
mov
dec
nop
stos
repnz
fistps
or
fdivrp
cmpb
shll
inc
jp
pop
xchg
sub
dec
jp
sbb
js
call
add
sbb
fwait
mov
stos
jb
nop
divl
push
cmp
push
jmp
ficompl
cli
out
cmp
loopne
sbb
bound
insb
fistpll
sub
aam
cmp
mov
adc
and
addl
mov
mov
sbb
jmp
xlat
ja
dec
add
add
cld
aas
ljmp
sub
push
int3
test
lock
mov
sarb
insl
es
adc
and
sub
add
repnz
ds
fisttps
aad
divb
in
add
lods
cmp
testl
das
bound
mov
jno
nop
loopne
mov
push
push
jl
inc
mov
aam
jl
mov
inc
pop
inc
sbb
rsm
or
cs
add
pop
xchg
inc
sub
sbb
ss
ret
dec
jle
push
enter
test
sbb
cmp
push
out
or
push
mov
and
sahf
jl
sbb
or
mov
sbb
addb
lods
enter
pop
hlt
movsl
pop
ljmp
les
fdivrs
roll
ds
aam
call
ret
mov
mov
adc
shll
and
dec
sub
xor
mov
int3
sub
or
lock
cwtl
xchg
dec
cmp
loopne
sub
insb
inc
push
mov
sub
call
mov
test
cmpsl
cs
and
pop
in
adc
ficoml
jp
movsl
xor
popf
cmp
stos
daa
repnz
or
inc
popf
xorb
test
and
in
push
push
ljmp
or
out
adc
in
add
fs
data16
aad
add
dec
dec
dec
enter
sbb
lea
jb
and
ja
cmpsb
add
in
pop
pop
pop
sub
cmp
test
pop
stos
incl
push
jmp
es
pop
dec
push
faddl
and
fldenv
std
inc
xchg
test
aaa
mov
jp
and
xor
shlb
jg
call
les
movl
outsb
out
dec
sbb
das
icebp
push
les
xchg
xchg
loope
aad
pusha
lods
sub
in
and
sub
adc
push
mov
loopne
roll
shlb
addr16
or
incl
test
ficomps
mov
into
pop
push
je
pop
mov
bound
push
sbb
dec
fnstsw
xchg
jge
adc
push
cmc
ror
pushf
or
and
aad
aas
call
sti
mov
add
ficoms
call
and
inc
add
jp
pop
out
cmp
in
loop
test
add
inc
mov
hlt
loope
outsl
inc
fcomps
nop
idivb
or
sub
fimuls
std
mov
or
stos
out
addr16
sbb
xchg
jecxz
xor
lea
or
ror
movsl
les
int3
scas
sarl
pop
stos
lahf
xchg
sub
leave
and
es
sbb
das
lock
int
fistpll
dec
sbb
loope
adc
incb
sbb
cltd
add
je
fsin
adc
push
les
cmp
cmp
pop
xor
shlb
inc
out
clc
dec
lahf
scas
movsb
es
push
cmp
cltd
push
or
clc
decl
sub
mov
add
mov
push
ret
inc
add
and
aas
push
call
sub
add
and
mov
xchg
xchg
dec
or
lcall
cmp
mov
std
mov
test
insb
popf
les
push
clc
stc
and
fcoml
icebp
lds
sbb
mov
bound
enter
dec
clc
jg
sbb
adc
andb
hlt
adc
in
pushf
in
fcomps
sti
scas
insb
mov
loopne
fidivl
shl
outsl
hlt
and
movsl
sti
push
test
xchg
mov
loopne
in
dec
imul
lahf
sbb
mov
shrl
sbb
push
test
icebp
and
pusha
ja
jb
pusha
adc
or
cmpsl
test
inc
lret
jle
call
xchg
ja
xchg
mov
push
add
adc
shrl
nop
push
add
in
mov
pusha
or
or
inc
sti
xor
pop
xchg
xchg
call
cmp
add
adc
push
jns
xchg
mov
push
cmp
ret
into
sbb
stos
ret
push
mov
xchg
ss
data16
jb
sbb
outsb
pop
fcomps
rorl
mov
pusha
rcr
sbb
add
and
popl
jl
sub
sub
int
dec
push
ficomps
out
inc
aaa
ss
xchg
cli
aas
bound
push
pop
stos
xchg
adc
adc
aam
clc
cld
nop
mov
mov
or
pop
mov
jle
add
clc
dec
jl
rol
fcomps
stos
cmc
add
clc
push
add
lock
lds
lods
push
xlat
fbstp
sbb
sub
movsb
pop
outsl
push
leave
pop
stos
xor
xchg
pushf
sarb
in
sbb
push
cs
dec
dec
or
nop
cmpsl
cmp
shrb
shl
and
loop
mov
into
lret
mov
jns
jnp
rcll
push
jne
aaa
sbbb
mov
lcall
dec
enter
insw
ss
inc
cltd
dec
inc
cld
enter
adcb
movsl
pushf
icebp
cs
xor
push
xchg
lret
sub
rcrb
push
das
aad
cs
imul
call
sbbb
inc
or
nop
lea
add
lods
add
xchg
call
decb
or
inc
mov
sub
imul
xchg
sub
incl
push
loopne
pop
push
movsb
pop
mov
popw
shrl
mov
test
addl
mov
inc
popf
mov
adc
imulb
add
ljmp
lahf
jbe,pt
adc
cmpb
mov
push
mov
sar
mov
lock
in
dec
dec
outsb
mov
mov
inc
push
outsb
pop
loope
and
jle
ret
dec
mov
xchg
mov
outsb
test
mov
rolb
sbb
add
les
dec
jbe
and
movsb
mov
pushf
pop
push
xchg
mov
push
xchg
push
xor
loop
pusha
xchg
ret
cmpsb
ljmpw
sbb
adc
push
ret
push
jne
cmp
add
fwait
ss
inc
mov
and
dec
push
loope
sbb
mov
mov
and
lret
push
cmc
insb
loop
xor
jl
ret
adc
outsl
mov
rolb
cmp
mov
or
jl
xchg
jge
sub
sub
sbb
sbbl
jae
loopne
jl
insb
loope
xchg
mov
mov
pop
test
lock
ds
adc
rcl
dec
bound
sub
sbb
xor
inc
loopne
sbb
into
or
cli
fisttpll
jb
inc
mov
and
sbb
lods
fsubl
lock
loope
mov
test
sbb
jg
or
fstpl
sbb
bound
push
movsb
lcall
pop
lock
leave
xor
and
cmp
les
xchg
jns
xchg
dec
das
nop
mov
xor
mov
lods
adc
loope
xchg
xchg
mov
inc
mov
sbb
dec
imul
jnp
jg
mov
push
cmp
inc
adc
aas
xchg
movsb
rorl
add
mov
bound
insb
pusha
jmp
out
cmp
dec
cmp
icebp
sbb
push
pop
and
es
xchg
pop
sbb
xchg
push
push
push
dec
mov
inc
cmp
fcomps
adc
fisubl
mov
dec
lock
xor
push
xchg
push
adc
mov
jb
cmp
test
sbb
jne
push
and
mov
js
insb
push
enter
pop
push
mov
cmp
sbb
movsl
lock
clc
push
cmp
flds
add
mov
cs
mov
sbb
mov
scas
xchg
aam
jb
dec
call
and
add
adc
aam
and
ret
test
mov
aaa
xchg
mov
xchg
mov
pop
mov
or
loopne
xchg
inc
iret
xor
mov
or
sbb
and
movsl
mov
mov
pop
push
nop
out
push
or
inc
repnz
addl
push
dec
aaa
xchg
adc
lret
jl
pop
mov
stos
xchg
dec
mov
pop
enter
or
ret
popa
fcmovnbe
fiaddl
adc
ret
test
faddl
mov
pop
add
cld
dec
insb
out
adc
mov
mov
test
or
ljmp
push
call
jecxz
out
cmp
dec
inc
cs
push
lcall
ljmp
and
jbe
and
es
pop
outsb
sub
clc
cli
jg
jle
mov
inc
mov
push
popf
push
ret
daa
mov
movsl
test
push
mov
je
call
lret
dec
clc
lea
jno
out
test
pop
inc
xor
cmp
mov
or
adc
in
enter
mov
and
inc
sar
push
mov
or
cmpl
movl
inc
mov
inc
lods
dec
mov
and
pop
mov
movsb
dec
stos
push
in
pop
mov
pusha
pop
xor
mov
xchg
shrb
je
sbb
lahf
iret
jmp
inc
ret
pusha
loop
push
jnp
pushf
adc
rcll
dec
mov
je
mov
sbb
scas
mov
xor
loop
mov
test
add
push
jo
adc
cwtl
mov
cmc
insl
lea
mov
sbb
push
jg
mov
mov
std
loop
ja
push
jle
insl
bound
not
jno
add
stc
ret
inc
push
cmp
jle
jecxz
push
jle
loope
shlb
ljmp
imul
into
sub
shr
aas
push
test
repz
xchg
xchg
mov
inc
pop
sti
xchg
push
mov
rclb
sbb
mov
test
in
fcompl
cmp
mov
in
pop
mov
cmpsb
pop
hlt
mov
adc
je
jo
push
popa
or
aam
js
arpl
adc
xchg
js
jg
ds
je
or
orb
loopne
dec
scas
icebp
ret
pop
cmp
test
leave
push
filds
pop
add
mov
add
push
cmp
sarl
out
adc
mov
xor
shrl
dec
leave
mov
sub
and
mov
inc
add
add
mov
outsb
push
add
ror
aam
enter
mov
jecxz
inc
scas
pusha
add
inc
inc
or
mov
pop
pop
inc
ljmp
iret
call
add
fistpl
mov
dec
xchg
fmuls
out
adc
pop
or
dec
stos
lock
testb
xor
arpl
imulb
mov
cmpl
jns
inc
cs
js
mov
js
daa
mov
add
mov
adc
pop
scas
adc
dec
jo
xor
and
push
ret
sbb
sub
fisttps
outsb
inc
jge
outsb
lret
jbe
mov
add
les
pop
sbb
test
outsb
pop
sar
rcl
inc
hlt
iret
inc
mov
outsb
in
lcall
push
dec
pop
sbb
fiadds
jle
fnsave
adc
clc
xchg
mov
pop
push
jno
incb
les
add
les
mov
add
jmp
inc
clc
lock
jns
mov
je
daa
jb
fs
inc
das
pop
push
cld
inc
lods
mov
hlt
aaa
pop
jne
stos
sbb
mov
in
xor
mov
xchg
push
int3
mov
jmp
fadds
dec
lcall
dec
outsl
mov
push
cwtl
dec
xchg
icebp
dec
cs
cmpsl
and
test
inc
fucomp
lods
sbb
mov
stos
in
imul
or
loopne
icebp
sub
mov
pop
xchg
test
sbb
js
rcrl
sbb
mov
pop
xchg
sub
xchg
dec
nop
mov
push
pusha
gs
nop
sbb
jg
push
rorb
mov
je
adc
je
xchg
scas
add
push
jg
imulb
push
lret
adc
add
add
dec
or
incb
out
mov
movsb
push
mov
push
mov
incl
add
push
and
dec
shll
popf
xchg
call
mov
pop
pop
cmp
fldenv
rcl
mov
jno
je
clc
xor
adc
mov
lods
xchg
sbb
pop
int3
orb
bnd
call
loope
add
test
sub
mov
loope
test
cmpsb
lahf
or
lcall
fnstcw
in
mov
cmp
inc
inc
sbb
mov
jb
add
stos
rolb
sbb
and
jbe
sub
outsl
mov
and
sbb
add
pop
test
jns
lods
lcall
mov
clc
mov
inc
push
or
sub
pop
sbb
out
int3
scas
sarb
mov
mov
fcoml
jle
xor
loope
lret
xor
imul
mov
dec
rcl
aam
lret
mov
fldenv
jg
adc
lock
mov
xor
ljmp
aam
add
mov
push
adc
das
sub
hlt
repnz
sbb
add
cmp
test
inc
add
clc
xchg
inc
cwtl
bound
popf
jl
sarb
shlb
aam
cmp
adc
mov
push
mov
mov
loop
add
add
bt
imul
js
inc
mov
jl
imul
mov
movsl
mov
test
ds
outsl
psraw
notb
out
or
test
sub
jg
adc
scas
lods
loopne
jl
xor
pushf
inc
jnp
fistl
aam
and
xor
or
add
pushf
sbb
mov
push
mov
lock
movsl
sub
scas
adc
cmp
mov
popf
aam
mov
outsb
testb
push
add
push
inc
imul
push
mov
insb
or
insl
outsl
cmpsb
mov
mov
scas
cmp
mov
mov
test
push
add
stos
and
sub
jge
dec
insb
jno
insb
fwait
mov
cld
mov
std
ss
sub
out
and
mov
mov
jo
lea
push
push
pushf
pop
cmpsl
ljmp
add
negl
stos
mov
and
push
repz
sub
push
jmp
in
and
xchg
xor
push
fdivs
fsts
rol
jbe
icebp
lret
loope
insb
out
lods
xchg
mov
call
rcll
lcall
push
push
mov
jl
and
or
rol
mov
adc
fwait
cmc
mov
fmul
shl
cmc
add
stos
xchg
test
mov
cltd
pushf
shrl
inc
push
mov
dec
lds
add
movsl
pusha
lods
mov
in
pop
ljmp
adc
or
pop
adc
repz
xor
xchg
nop
push
aas
sarl
xor
rcr
mov
js
push
sbb
dec
mov
cmp
push
pusha
jo
jo
cmpsb
stos
sbb
cli
ret
push
add
or
in
or
adc
mov
and
test
mov
pop
ljmp
test
sub
add
les
clc
xchg
mov
xchg
movsl
loop,pt
xchg
dec
sarb
and
push
sbb
jecxz
es
ficoml
and
mov
lods
int
cwtl
nop
push
jle
and
cwtl
ja
mov
sub
dec
jl
push
ljmp
clc
movsl
or
mov
test
and
xchg
push
pop
enter
out
hlt
test
jmp
add
cmp
jg
push
add
loopne
sahf
in
sub
inc
loopne
ret
sbb
cwtl
test
xchg
popf
mov
jge
mov
sbb
push
jo
cli
cld
mov
sbb
lret
data16
xor
or
insb
pop
dec
xor
xor
fdivr
int3
sbbb
fwait
xor
add
cmp
fwait
inc
sub
jns
ret
insl
jecxz
sahf
mov
aas
gs
push
fildl
scas
jl
and
sbb
adc
rcrl
fsubs
dec
mov
cld
xor
test
clc
add
xchg
js
andb
inc
dec
mov
adc
fstpl
shll
add
repz
xchg
xor
test
xor
insl
lea
les
ds
ret
mov
test
sbb
dec
inc
ja
fdiv
daa
inc
inc
gs
dec
clc
addr16
aaa
push
test
cmp
scas
daa
push
push
jb
iret
cmc
xorb
xchg
pop
test
sub
ret
loope
ds
mov
or
les
cmpsl
loop
scas
fistl
ror
mov
lret
pop
fsubr
neg
inc
xchg
inc
adc
dec
jl
ret
cltd
sti
adc
or
loopne
or
js
lods
add
or
dec
sbb
mov
loop
clc
rorl
lods
and
xor
ljmp
fiadds
mov
mov
mov
sub
iret
aas
mov
daa
popf
ljmp
dec
ret
push
sub
pop
cmp
sub
sbbb
cld
cld
hlt
stos
jo
je
les
daa
scas
push
popa
xlat
mov
cmp
xor
cmp
add
out
mov
sbb
lret
stos
test
and
inc
scas
ret
call
inc
adc
sbb
add
dec
loop
mov
mulb
xchg
popl
and
cmc
push
insb
sbb
sbb
clc
stc
add
clc
loopne,pn
or
xchg
cs
pmaddwd
sub
sub
pop
insb
jle
cli
mov
lret
or
push
lock
enter
jo
xlat
cli
cmp
mov
dec
enter
dec
stos
xchg
and
push
insl
push
mov
and
mov
push
outsl
loope
inc
fisubrs
emms
mov
nop
xor
clc
pushf
aad
ss
outsb
cmpsb
sbb
test
pop
sahf
sub
cmp
jl
pop
ljmp
in
nop
or
out
icebp
add
int3
pop
ljmp
push
jle
es
pop
cmp
shlb
shl
out
pop
cmpsl
addb
lods
xor
jns
jmp
movsl
and
sbb
push
cmp
adc
inc
dec
and
cwtl
xor
maskmovq
mull
data16
ljmp
push
fdecstp
fidivrl
rolb
adc
out
push
out
js
ja
je
fs
movsl
sbb
mov
mov
loopne
mov
mov
jo
push
adc
mov
hlt
jmp
mov
popf
inc
insl
popa
pop
fldcw
cli
pop
jp
cmp
dec
rolb
jno
or
adc
in
push
shrl
test
aam
dec
and
push
stos
mov
xchg
cmpsl
push
clc
pop
push
xor
out
sub
sub
andl
pop
repnz
inc
imul
outsb
orb
dec
xchg
mov
push
xchg
stos
and
sbb
cmp
push
lds
xor
inc
decb
mov
xor
adc
jnp
push
mov
jl
out
cmp
cmp
push
mov
jg
pop
jp
test
sub
cmp
or
inc
lods
scas
jo
adcb
xor
mov
xchg
movsb
int3
or
xor
push
or
push
jp
mov
addr16
dec
js
push
icebp
repnz
pop
jne
mov
pop
cwtl
mov
mov
es
in
imull
dec
and
push
xchg
sbb
mov
cmc
and
cli
dec
add
mov
in
fisubrs
xor
sbb
or
add
daa
and
stos
sub
inc
test
jp
jae
jge
push
mov
or
mull
add
fcompl
xor
lcall
sahf
adc
push
pop
daa
stos
cmp
lods
pop
pop
jns
inc
sbb
push
push
adc
mov
jg
pop
mov
outsl
inc
adc
ret
test
dec
push
lods
xor
cwtl
clc
test
sbb
inc
mov
arpl
das
inc
icebp
cld
cmp
mov
imul
or
pusha
sub
mov
fwait
rcrb
jo
nop
icebp
nop
fs
dec
sub
sbb
aas
jb
cmp
dec
cmpsb
sbb
or
jecxz
shll
cmpsb
scas
and
pop
xchg
and
inc
sbb
daa
test
int
push
dec
pop
mov
sub
mov
and
push
add
daa
rcl
and
cmc
add
in
in
cld
xor
push
fs
jp
ljmp
jge
mov
xor
adc
push
ret
lods
addb
xchg
ds
xor
sbb
jb
and
das
shlb
pop
lock
mov
mov
mov
jle
popa
nop
adc
xor
in
xor
xor
adcl
test
add
jno
sbb
xchg
adc
inc
ljmp
fldcw
jmp
mov
andw
popf
adc
push
cmpsb
stos
pop
mov
mov
cmpsb
pop
lods
cmovbe
rcrl
pop
scas
mov
jo
cmpsb
push
fisubrl
cmp
mov
lret
cmpsb
push
or
add
clc
fimuls
sub
out
push
clc
mov
add
push
cld
xorl
sub
incl
call
and
add
inc
roll
pop
leave
xchg
lcall
clc
enter
inc
sbb
adc
and
pop
hlt
out
shll
mov
pop
movsb
jo
movsl
insb
push
inc
sbb
xchg
call
and
pushf
aam
pop
out
insl
inc
imul
mov
test
jle
add
es
movsl
or
mov
in
cld
pop
inc
inc
shr
loop
pop
or
call
rol
xchg
jns
sbb
mov
scas
mov
je
scas
adc
popa
lods
mov
xor
lahf
push
xlat
outsl
test
rorb
mov
pushf
jb
test
pop
mov
nop
inc
sbb
and
lea
icebp
push
outsb
aaa
and
mov
in
dec
popa
cmp
mov
sub
sub
in
adc
enter
fwait
inc
pop
pop
and
and
mov
popa
adc
and
frstor
mov
test
push
call
or
mov
enter
mov
pop
add
add
jl
mov
cmp
loopne
xchg
sbb
xchg
mov
push
xchg
and
push
adc
fimuls
cmp
mov
repnz
add
push
inc
stos
mov
aaa
adc
cld
pusha
in
pop
pushf
gs
out
sbb
js
loop
mov
cwtl
mov
mov
mov
mov
add
cwtl
lret
lahf
inc
and
or
sub
shrb
mov
andl
dec
loopne
mov
mov
xor
insb
add
add
jp
clc
mov
aad
inc
cltd
inc
dec
test
call
outsl
push
mov
adc
mov
dec
in
mov
dec
neg
loope
xor
insl
pop
std
loop
rol
hlt
pop
inc
fistl
shrb
adc
xchg
mov
push
xlat
pop
pop
leave
xor
jae
adc
push
and
pop
dec
mov
mov
sub
and
test
xchg
add
mov
mov
addl
ret
pop
mov
andb
ds
sbb
add
push
pop
sbb
push
mov
or
adc
mov
lods
pushf
les
pop
jbe
es
mov
cmp
and
loopne
or
inc
xor
sub
add
pop
jnp
and
cmp
sbb
cmpsb
lea
pusha
push
add
jle
and
pusha
imul
outsl
rclb
pop
sbb
rorl
pop
cmc
insl
cld
mov
sbb
cwtl
pop
ret
or
xchg
mov
sub
fldl
out
xorb
xchg
add
mov
aad
jl
pushw
fadds
aad
mov
mov
or
movsl
hlt
mov
dec
fisubl
sbb
sbb
testb
imull
js
jo
xor
es
nop
pop
dec
fwait
movsb
and
mov
dec
inc
cmp
sbb
dec
dec
or
adc
jb
ss
dec
pop
add
push
sbb
outsb
mov
shrl
aaa
pop
mov
test
adc
test
sti
je
push
mov
cmpsl
shll
jecxz
adc
push
mov
and
adc
ja
mov
dec
mov
rolb
pop
dec
and
cmpl
movsb
cmp
lods
jp
sbb
stc
mov
add
std
mov
sarb
mov
aaa
pop
shrb
cmpb
jl
jns
and
ss
repz
popa
mov
cmp
js
and
adc
dec
push
mov
mov
mov
hlt
lods
push
lds
icebp
fwait
dec
dec
inc
stos
xchg
push
out
ljmp
cld
dec
inc
ret
xchg
sub
push
dec
adc
sbb
cmp
push
push
jbe
and
push
mov
adc
lock
es
popa
divl
int
dec
lock
mov
inc
pop
xor
mov
stos
cmp
push
mov
or
mov
cmpsb
and
enter
int
inc
sub
mov
cld
jp
test
cmp
ds
jg
mov
pop
nop
andl
fcompl
outsl
pop
scas
clc
mov
xor
mov
xchg
xchg
sarl
scas
outsl
mov
push
mov
jb
xor
mov
pop
dec
xchg
lock
inc
mov
mov
push
xchg
jmp
adcl
lahf
xchg
add
jle
lods
xchg
pop
inc
pop
sbb
mov
push
cmc
or
enter
out
or
mov
push
cmpb
dec
test
scas
xchg
test
ret
ljmp
and
clc
fcoml
cmp
mov
fwait
loope
mov
and
jmp
gs
addr16
test
push
add
push
jp
fimull
add
adc
or
jo
stos
add
loopne
add
loop
mov
aaa
or
dec
cltd
ss
adc
clc
mov
and
mov
inc
les
pop
rcrl
in
stc
inc
and
es
clc
loopne
pop
js
test
iret
mov
xor
add
popf
addb
lds
lock
les
adc
mov
push
insl
sbb
stc
loope
je
pop
mov
lds
pop
pop
insb
hlt
sbb
jbe
mov
and
xlat
push
in
sub
jns
stc
scas
push
cmp
jle
push
inc
jmp
pushf
popf
loope
mov
adc
pop
mov
fwait
mov
pop
fmuls
mov
daa
std
pop
imul
cmp
stc
mov
pop
aam
cli
nop
push
mov
aad
push
sbbb
sub
add
sub
int3
xchg
test
inc
mov
xor
or
mov
test
sarb
loope
sti
sbb
inc
sub
andl
rclb
push
or
push
and
loope
fcoml
push
gs
adc
in
or
pusha
dec
cmp
mov
js
stos
and
int3
mov
mov
xor
sbb
dec
sub
xchg
ss
push
test
sub
sbb
stc
mov
xchg
jbe
mov
jecxz
mov
sbb
pop
out
pop
push
xlat
out
arpl
fs
sbbb
dec
push
loopne
or
sbb
mov
std
mov
and
xor
pop
push
jbe
xor
call
lock
adc
pop
push
enter
fnstenv
ja
sahf
enter
inc
push
jmp
cmp
push
push
loopne
ljmp
xchg
xchg
push
push
mov
aam
lret
push
sub
inc
push
cmp
test
lods
inc
sub
push
adc
test
cmp
sub
or
or
clc
push
jle
pusha
sub
add
pop
fnstenv
sbb
outsb
out
pop
and
jle
cmpsb
pop
sub
fcomps
hlt
jl
ficomps
inc
out
mov
dec
adc
dec
add
fistps
and
push
push
aas
clc
sahf
adc
aam
xchg
fsubrl
rorb
cltd
inc
clc
cmp
fs
add
xor
loope
ljmp
dec
pop
mov
lcall
fiaddl
mov
test
cld
jg
dec
pop
lock
outsb
xor
sub
xor
cmp
push
cmp
jp
pop
sbb
push
cmpl
into
movb
divb
or
cmp
stos
xchg
xchg
test
dec
cltd
outsb
rclb
sub
rorb
mov
add
insb
xchg
int3
mov
in
or
sbb
adc
fcoms
iret
push
ss
cmp
fisubs
push
fldcw
cmp
lods
repnz
leave
stos
dec
cwtl
pop
mov
add
jb
ret
lods
sub
movsl
jle
xor
ja
mov
adc
xor
add
lods
and
pop
popl
xor
or
ret
jbe
mov
inc
xor
insb
or
and
cmp
sbb
aaa
shrl
rorb
pushf
sbb
sti
add
mov
rorb
sbb
sub
std
fs
call
arpl
adc
dec
sbb
push
test
das
mov
mov
out
sbb
out
repz
je
loop
pop
sarb
fsubs
add
inc
cli
aam
inc
inc
push
sbb
jae
call
push
ret
mov
xor
gs
mov
adc
or
lods
xchg
dec
push
ficoml
ljmp
pop
and
lcall
push
into
sbb
scas
out
sub
and
push
sub
stos
cld
cld
loopne
inc
nop
repz
cmp
idivb
dec
fs
xor
test
cli
sbb
push
sbb
ret
aam
sbb
fsubs
sar
and
decl
adc
fs
in
add
pop
das
js
mov
cmp
in
test
sgdtl
loopne
or
and
notl
mul
mov
mov
cs
mov
mov
stos
cmp
dec
loope
ret
jmp
movsb
aad
loope
imul
mov
fmul
jne
sub
xor
aaa
fsub
push
inc
mov
cmp
dec
fsubs
mov
sbb
push
scas
mov
xor
adc
cli
xor
addb
cli
mov
or
lods
je
cmp
mov
aad
mov
xor
ljmp
jno
int
pop
xor
rolb
xor
dec
sub
push
test
pop
ja
xchg
xor
js
and
cmp
lcall
repnz
sub
push
xstore-rng
cmpsl
ret
push
je
cmp
sub
je
lcall
push
sbb
push
mov
loop
es
je
xchg
cmp
mov
or
xor
lock
push
insl
xor
lock
xchg
dec
xor
xor
or
sub
sti
xlat
push
or
pop
push
fldt
dec
scas
add
mov
inc
cmp
push
int3
xchg
xlat
and
subb
jge
cmp
xlat
mov
int
dec
sub
mov
mov
ljmp
aad
lods
or
fildll
int3
lds
out
jb
dec
push
mov
push
test
stos
push
js
sub
gs
push
fnstenv
cmpsb
mov
pop
and
sbb
add
jb
jl
mov
ss
sbb
sub
mov
jbe
aam
mov
lcall
je
iret
clc
dec
les
push
add
dec
and
sub
sub
fistpl
repnz
aam
stc
in
add
les
movsb
xchg
mov
dec
insl
test
cli
cmp
lods
mov
loopne
ficomps
and
outsl
out
mov
add
fldl
cmp
shlb
hlt
loop
aaa
pop
subps
mov
push
xorb
mov
mov
push
fadds
and
xchg
divb
mov
cmpsl
add
sahf
add
sub
addl
sarl
leave
mov
or
jae
sti
sbb
xor
stos
out
jno
divl
mov
mov
into
repz
leave
test
lods
rorb
cmp
cmp
movsb
sbb
lds
jno
cwtl
jl
sarl
std
clc
pop
lcall
orb
adc
rorl
ds
test
dec
jb
fwait
push
push
add
fs
mov
data16
jne
out
test
and
lea
jecxz
jp
incl
in
mov
sbb
jl
dec
and
in
push
bound
push
cmpsl
add
mov
sub
pop
dec
cmc
shll
mov
sub
add
jecxz
add
daa
shll
in
and
xchg
gs
repnz
insb
insl
xchg
inc
test
mov
fs
je
mov
lret
stos
pop
sbb
push
sub
cmp
dec
andb
mov
sbb
xchg
cs
sub
sar
imul
or
cmp
or
sarl
mov
cld
mov
loopne
aas
ss
cmp
scas
or
and
fs
hlt
aad
mov
adc
cmp
sbb
fimull
imul
jle
loope
sahf
sub
mov
shll
jo
pop
insl
push
xchg
xor
xor
xchg
les
add
cli
mov
and
cmova
push
dec
es
lcall
jl
pop
es
int3
test
and
divb
lcall
aad
sti
in
pusha
into
inc
icebp
mov
sub
xor
add
fwait
push
inc
cmp
mov
outsl
icebp
xchg
mov
movsb
mov
ja
add
int3
dec
mov
pushl
cmp
adcb
mov
adc
or
shrb
pusha
aam
mov
push
ficompl
das
nop
daa
leave
fisttpll
negb
iret
hlt
sub
sbb
xor
xorl
inc
cmpsb
icebp
int3
lods
rolb
mov
sbb
rolb
cmpsl
jmp
jo
jp
icebp
jg
sar
mov
xchg
jmp
mov
das
and
in
xchg
pop
adc
push
rorb
scas
repnz
mov
mov
fwait
jle
add
pop
inc
ret
inc
mov
aam
dec
ret
cwtl
mov
pop
hlt
jp
adcb
sti
add
or
mov
or
mov
lock
add
xor
inc
pop
mov
aad
idiv
fcompl
or
mov
test
fisubrl
jbe
enter
push
andl
fwait
mov
leave
leave
dec
inc
mov
or
sti
mov
xor
adc
imul
sbb
push
sahf
fsub
pusha
loopne
cmp
xchg
push
cmp
mov
jle
mov
movsl
inc
mov
dec
addr16
adc
outsl
rcrl
and
leave
frstor
sbb
ret
jge
imul
sahf
scas
out
mov
call
call
inc
sbb
addb
popa
mov
lcall
sub
jp
adc
or
or
push
out
or
cmp
push
pop
imul
ja
gs
push
add
mov
lds
cwtl
xchg
mov
cli
jg
mov
loope
enter
sbb
sub
int
bound
mov
loopne
sub
sbb
ljmp
arpl
jle
ljmp
pop
and
xchg
or
frstor
lock
out
mov
aam
dec
adc
cs
pop
dec
fdivs
test
fs
popf
aam
inc
add
and
andb
loopne
sub
pusha
test
rclb
dec
mov
les
rclb
insb
sub
jb
iret
mov
push
push
faddl
hlt
mov
sbbb
arpl
dec
push
and
pop
or
loope
ss
mov
xor
and
movsb
orb
add
cmp
adc
cmp
dec
outsb
push
pop
pusha
cli
daa
jle
in
popa
xchg
mov
test
aas
clc
pop
aam
adc
mov
outsb
mov
es
and
repnz
flds
scas
pop
test
aad
loopne
in
mov
xchg
add
fdivrl
stos
xor
shrb
fists
sti
push
mov
and
add
scas
cmp
push
stc
pop
test
mov
fwait
shl
lcall
shrl
decl
sbb
mov
sub
jo
and
add
mov
aam
add
inc
and
bound
fldl
mov
hlt
pop
pushf
push
dec
cwtl
lods
pop
or
scas
nop
in
ret
push
cwtl
mov
inc
ret
mov
cld
rcl
in
push
push
sbb
insl
sub
mov
mov
bound
testb
outsl
adc
mov
out
inc
adc
nop
add
fcomi
cmp
inc
sub
pop
inc
les
std
mov
addr16
dec
loop
sarb
push
sbb
inc
int
pop
add
les
ret
mov
push
ds
add
aaa
jle
or
sub
add
mov
je
ret
ret
lods
test
mov
push
rorb
mov
xchg
out
adc
int3
add
sub
cmp
pop
js
jns
inc
insl
mov
mov
adc
ljmp
rep
in
lret
hlt
aaa
fsubrl
adc
shrb
lahf
data16
pop
pop
mov
in
stos
and
stos
add
cli
cmp
cmp
adc
add
fbld
aaa
inc
sub
ficoms
ds
stc
int
sbb
mov
and
jno
pop
shrb
adc
cmc
xchg
push
les
sahf
push
or
add
mov
cli
pop
mov
pusha
add
mov
roll
js
adc
and
lods
loop
inc
xchg
scas
cli
nop
mov
pop
and
adc
fstps
pop
push
dec
push
rcrl
rorb
ret
pop
push
clc
mov
cmp
shl
jecxz
les
mov
ret
rcrb
pusha
stc
add
inc
sbb
sub
inc
xchg
dec
rcrb
rorb
loopne
dec
mov
sbb
pop
cmpsb
sub
loop
aas
fisubrs
cwtl
or
or
test
lods
or
push
and
stc
sub
stos
jecxz
mov
lahf
popa
add
jg
inc
fstpl
and
fdivrl
ds
fwait
dec
sbb
in
mov
stos
push
fcmovnu
jo
jno
adc
inc
in
mov
hlt
or
xor
mov
or
adc
mov
loopne
sub
hlt
jle
ljmp
popa
inc
mov
push
insl
xor
jp
mov
mov
aas
add
sub
mov
adc
jnp
aaa
dec
and
inc
sub
jp
insb
ret
andl
cmp
sub
int3
test
mov
inc
mov
jg
xor
xchg
jne
xor
sub
mov
xor
scas
jb
add
addl
or
jno
jbe
adc
stos
jmp
pushf
dec
insb
clc
mov
xor
fs
rol
push
test
mov
icebp
pusha
jo
into
mov
or
adc
inc
scas
subb
cmpsb
dec
push
cli
inc
movsb
js
bound
popf
ja
clc
nop
sbbb
out
test
adc
shlb
sub
cs
lods
push
mov
add
xlat
stc
outsb
sub
mov
mov
js
jbe
cmp
stc
loop
lret
das
sub
xchg
add
mov
loopne
pop
mov
mov
adc
lea
inc
test
in
shrb
div
add
shrb
int
inc
mov
es
mov
push
mov
shlb
std
cmc
pop
dec
push
add
jmp
orb
add
aas
js
loopne
imul
call
inc
cmp
sub
mov
test
cwtl
mov
lar
fwait
test
cmc
jno
pop
push
and
inc
ds
je
sbb
and
ffree
inc
mov
fs
cs
lds
hlt
mov
adc
xchg
testb
popl
rol
xor
cmp
stos
adc
pop
lods
adc
xchg
pusha
lds
xchg
mov
adc
xchg
mov
test
pop
mov
sub
into
xchg
mov
les
pop
and
xor
mov
flds
clc
sbbl
cli
dec
sarl
fdivr
rorb
pop
lahf
scas
sbb
int
pop
jo
push
sbb
push
test
test
nop
sbbl
es
mov
or
jno
mov
dec
or
xchg
faddl
and
clc
scas
and
inc
dec
adc
cmp
pop
pop
push
roll
cmpsl
push
xchg
cmp
push
fildll
in
call
xchg
inc
loope
ja
mov
cmp
xchg
xchg
xchg
ret
and
mov
out
inc
movsb
and
pop
add
xor
fimuls
xchg
out
or
xchg
push
mov
xchg
xor
out
add
mov
push
hlt
cmp
je
jb
or
inc
jmp
loopne
mov
jp
pop
push
dec
repz
mov
adc
push
xorb
push
xchg
sbb
stc
fiadds
push
mov
lods
lret
clc
lret
test
int3
sub
dec
ret
in
push
dec
js
add
xchg
lret
outsl
inc
shll
sbb
jb
cli
loop,pn
mov
out
mov
stos
movsb
out
mov
or
mov
ret
stos
and
adc
sub
xchg
stc
sarl
pop
push
out
inc
inc
sbb
jle
scas
mov
jb
push
xor
push
lcall
jl
add
sub
sub
adc
fcomp
js
inc
adc
hlt
repz
dec
enter
mov
sub
mov
mov
stos
cs
scas
jb
popf
and
or
push
ljmp
mov
rorb
sub
push
enter
gs
push
xor
xor
cld
mov
push
cmp
or
shlb
stos
or
into
push
dec
lret
push
xchg
shlb
pop
mov
loope
mov
fnstsw
movsl
pop
rcll
or
jo
das
adc
aaa
cmc
inc
mov
mov
jne
movsb
inc
mov
sub
je
mov
dec
cmp
cmp
outsl
mov
mov
mov
cwtl
cmp
add
aaa
xor
sbb
lahf
mov
fisubrl
dec
sub
push
aaa
leave
dec
mov
imul
shlb
insb
cmpsl
scas
ret
xchg
popa
add
cmp
xchg
insl
cs
lret
sub
jg
divb
sub
nop
aas
jb
or
cmp
icebp
sbb
xchg
rclb
push
and
and
push
mov
add
aaa
inc
sbb
xor
adc
out
clc
xchg
in
jp
loopne
dec
mov
dec
or
and
gs
cmp
sbb
repnz
adc
xchg
fimuls
ljmp
ljmp
in
fdivrp
popa
or
mov
aad
cmp
ror
shlb
call
jle
test
icebp
stos
mov
pop
fisttpll
jmp
enter
sub
or
sti
mov
add
int
hlt
jp
sarl
add
xor
xor
js
dec
mov
push
les
std
stc
pop
in
and
mov
mov
xchg
lret
jle
mov
add
or
rclb
push
jl
cmp
into
inc
leave
dec
enter
adcb
inc
inc
pop
fwait
mov
ljmp
and
pushf
shrb
push
fsubp
inc
aad
loopne
sub
and
push
cmp
insb
cld
out
mov
sbb
or
ret
jg
in
adc
arpl
in
pop
adc
and
aaa
mov
test
sub
xor
mov
mov
cwtl
push
inc
xchg
fldl
pop
ja
sarl
insb
andl
adc
mov
ljmp
aaa
or
mov
aas
je
stos
fnsave
rorl
push
cmp
and
cmp
add
sbb
cwtl
jno
lods
movsl
mov
mov
jle
ret
pop
insl
jmp
push
cmp
and
cmp
shll
bt
mov
test
sbb
mov
inc
in
pop
xchg
lcall
cmp
or
inc
adc
insb
insl
adcb
cmc
fidivrl
or
sub
movsl
xchg
fcompl
inc
sbb
hlt
loope
cwtl
push
movsb
push
add
scas
inc
sub
scas
arpl
xor
bound
ljmp
dec
push
stos
inc
xchg
push
jne
xor
xlat
ror
lret
xchg
mov
adc
jmp
jmp
cmc
andl
xor
movsl
mov
cli
or
addr16
enter
or
ds
or
xor
and
mov
cmp
adc
cmp
sbb
mov
lock
mov
adc
mov
or
mov
xor
mov
leave
nop
fsubl
loopne
xor
or
xchg
or
shr
add
xor
ret
pop
shll
mov
mov
mov
outsb
inc
filds
nop
add
lods
xor
jno
shll
je
push
mov
mov
insl
push
sbb
out
orb
inc
fsubr
js
cmp
mov
subl
sub
mov
mov
mov
insl
lret
mov
int3
adc
insb
dec
pop
push
shl
lods
mov
jb
adc
sti
test
cmc
mov
shll
pop
dec
or
pop
lock
in
neg
in
dec
adc
dec
xchg
pop
jmp
stc
ret
jl
mov
daa
jecxz
in
xchg
xor
pop
lock
andl
mov
or
scas
sub
push
cli
mov
cmc
dec
std
push
cli
cmpsb
roll
cld
add
mov
push
jnp
daa
xor
ss
lea
dec
jge
mov
in
sub
xor
enter
mov
es
add
jge
cmpsb
xchg
push
ret
sbb
sahf
sub
orl
imul
xlat
xchg
insl
cmpl
xchg
sub
add
cmc
int3
dec
andl
data16
jnp
add
stos
add
hlt
pop
ljmp
sbb
test
sub
push
sti
fmuls
popa
or
loop
mov
cld
cmp
les
andb
and
or
mov
test
mov
in
mov
fs
fwait
inc
mov
clc
xchg
test
dec
rsqrtps
sbb
inc
mov
lock
icebp
and
loopne
dec
outsb
and
sub
add
call
loop
pop
dec
movb
lea
inc
sbb
xchg
push
or
test
push
sub
int
pop
fsts
std
adc
xchg
pop
pop
mov
lret
scas
outsl
cmpsb
mov
mov
jne
rcl
into
lods
mov
xor
imul
mov
mov
jecxz
test
sub
filds
pusha
jl
sbb
sbb
sbb
fstpt
int
mov
stos
hlt
xor
sub
cltd
aaa
xor
add
call
ret
xor
test
pop
call
sub
jle
mov
pop
dec
enter
mov
adc
outsl
xchg
dec
into
fs
push
cmp
bound
or
stos
mov
xchg
mov
test
stos
outsb
mov
stos
pop
inc
and
sub
inc
nop
ficoml
xor
mov
aas
adc
js
sub
jbe
jnp
cmp
jnp
dec
or
jge
inc
repnz
cli
pop
shlb
fcompl
daa
jp
call
ficomps
popf
test
pop
xchg
rolb
cmp
cwtl
inc
cmp
fs
pop
pop
insl
jmp
sub
pop
adc
into
inc
iret
pop
mov
or
notb
fwait
dec
incl
adc
popa
hlt
divb
dec
mov
adc
sub
outsb
push
push
cmpsl
leave
sarb
and
jae
jno
push
cli
and
inc
lock
mov
into
into
cltd
jle
lcall
fiaddl
mov
loopne
inc
hlt
pop
xchg
jp
fisttpll
jg
mov
rorb
jle
pop
lcall
cmp
rcrb
add
sahf
lea
lds
outsb
mov
mov
and
movsl
hlt
fwait
addb
das
xor
mov
je
cmp
dec
loopne
subb
shlb
wrmsr
clc
sti
fdivr
dec
mov
cwtl
ret
ret
scas
mov
inc
inc
pop
xor
jbe
xchg
mov
sti
sub
les
hlt
ja
xor
or
inc
jp
pop
cmp
icebp
jae
lea
data16
call
movsl
sbb
pop
add
and
pop
out
test
mov
loop
enter
fwait
pusha
fdivp
popa
daa
add
fistl
cmp
daa
sbb
dec
filds
and
push
js
arpl
dec
cmp
xchg
outsb
arpl
jo
insb
jl
or
aas
js
pop
das
in
push
adc
add
rcl
dec
cmpb
les
mov
test
cmpsb
push
cld
mov
pusha
pop
pop
and
cltd
insb
xor
push
out
test
and
xchg
fcoms
adc
inc
cld
dec
inc
nop
dec
mov
and
push
mov
and
sbbb
dec
mov
pop
pushf
movsl
jo
add
jne
and
mov
decl
ret
and
pop
arpl
mov
idivb
push
inc
mov
mov
mov
sub
or
push
js
fwait
nop
adc
inc
mov
in
lds
fildl
imul
loop
ljmp
lock
xor
xchg
add
jo
jno
clc
cmp
adc
js
adc
scas
push
imul
pop
ljmp
push
mov
sbb
hlt
jecxz
das
cmpsb
lret
popf
lret
mov
clc
mov
mov
iret
mov
shrl
sub
sub
movsb
or
mov
loopne
dec
dec
movsl
int3
scas
xchg
push
sub
stos
pop
lahf
ret
cmp
mov
icebp
test
jecxz
push
xchg
ja
mov
adc
sub
cld
cmp
push
mov
lcall
sbb
jle
neg
movsb
push
into
pop
jnp
pop
inc
into
andb
addl
pop
mov
shlb
stos
cld
sahf
ds
mov
xchg
xor
mov
rclb
mov
adc
or
lock
scas
wrmsr
push
pop
pop
test
mov
mov
push
jl
mov
xchg
sbb
inc
imul
ljmp
push
mov
xor
xor
stos
jp
test
repnz
sub
inc
scas
das
les
jg
lcall
stos
or
aad
sbb
jno
inc
out
dec
decl
pop
and
xchg
xchg
sbb
pop
les
cmp
mov
and
xor
enter
dec
aaa
shrl
out
xorb
mov
jo
cwtl
pop
mov
adc
xchg
lods
and
icebp
popa
pop
cmpsl
add
or
leave
ja
mov
shlb
pop
mov
or
dec
jle
sahf
or
mov
or
cld
mov
sub
mov
jl
fildll
pop
push
out
mov
xchg
and
mov
xchg
or
imul
adc
pop
mov
aaa
and
sbb
fcmovnbe
aaa
or
push
xchg
cli
inc
add
sub
and
lds
addr16
subl
add
adc
lret
stos
in
test
fwait
inc
movb
inc
andl
fidivrl
inc
xchg
scas
fs
lret
xor
sbbl
adc
sub
mov
dec
cmc
stos
and
out
rcr
imul
dec
mov
je
sbb
jp
mov
mov
out
fcoms
sub
nop
sbb
ss
push
dec
loope
xor
xchg
shll
cld
les
xlat
stc
jnp
jl
ficomps
aas
and
roll
mov
adcb
bound
push
mov
lods
push
sbb
sub
jg
ret
lea
iret
mov
movsl
push
dec
add
dec
in
lahf
inc
stos
push
xor
icebp
sub
pop
rcrl
adc
xor
dec
fnstenv
adc
push
pusha
je
pop
cmp
cmc
repnz
dec
ljmp
adc
or
sbb
rcrl
mov
sub
jns
arpl
dec
push
xlat
test
or
cmp
or
adc
jp
pusha
mov
icebp
lods
sbb
in
test
pop
mov
jg
dec
xor
sub
push
arpl
jns
adc
aas
incb
inc
mov
stc
mov
push
in
call
and
mov
in
lock
and
push
mov
repz
pop
into
dec
stos
xchg
pop
mov
sbb
pop
sub
addb
sbb
scas
int3
push
mov
add
dec
mov
lahf
mov
out
xor
or
fdiv
jp
push
sub
das
mov
adc
mov
lahf
inc
sbb
dec
fnstenv
cld
add
sahf
cltd
xor
mov
pop
aad
pop
lret
cmp
dec
add
into
imul
inc
cmp
outsb
jle
addr16
jne
rcll
cli
inc
mov
xchg
sub
mov
mov
outsl
clc
cmp
mov
out
movsb
fstl
sub
xchg
mov
sbb
mov
mov
mov
decl
or
mov
mov
adc
mov
pop
pop
inc
adc
movsb
xchg
dec
hlt
ret
push
push
inc
jl
mov
add
or
inc
popa
gs
movsb
pop
mov
and
mov
sbb
mov
imul
pusha
pop
fs
mov
stos
push
cwtl
mov
jae
shll
incb
fbstp
push
adc
lods
pop
and
cmpsb
and
pop
out
or
push
cmp
sub
push
mov
aaa
aam
sbb
pop
mov
mov
jp
mov
jnp
scas
or
mov
adc
cmc
inc
out
push
jne
and
mov
mov
sbb
push
ret
inc
mov
out
movsl
and
xchg
cld
dec
out
xchg
dec
mull
jnp
jb
jecxz
xchg
and
and
dec
cmpsb
shlb
mov
mov
pop
sti
sub
fdivs
mov
pop
lahf
push
mov
sbb
daa
inc
or
jle
adc
cltd
xchg
add
lods
fcmovne
push
inc
shlb
dec
mov
fldt
adc
mov
rolb
mov
sub
mov
je
sub
xor
mov
mov
stos
mov
pop
sbb
cwtl
ss
pop
mov
adc
sbb
push
mov
movb
cmc
popf
push
addl
leave
cmp
xchg
push
in
call
addr16
mov
leave
out
adc
and
shr
xor
jg
aad
mov
or
insb
add
shll
ret
data16
stos
dec
push
pop
add
jae
inc
cmp
jp
loopne
mov
add
jle
push
jg
pop
shrb
lods
test
push
push
lods
in
sti
xor
movsl
pop
adcb
test
sar
jecxz
lret
in
ret
mov
and
lock
sbb
inc
mov
fs
sub
icebp
adc
dec
int
xor
les
mov
jle
nop
pop
jno
test
notl
outsl
pop
or
jo
sub
lcall
mov
push
jae
inc
lods
sub
sbb
loope
mov
lock
arpl
out
dec
mov
pushf
pop
jo
inc
cwtl
and
xor
sub
xor
jp
icebp
lods
sub
ret
lods
rcrb
jl
testb
pop
inc
rolb
cli
ljmp
lret
enter
pop
out
hlt
xchg
test
movsb
cli
mov
nop
push
mov
mov
test
out
mov
mov
or
mov
mov
add
push
push
lock
insl
enter
sub
movsl
rdpmc
push
adc
or
cmp
cmp
adcl
jne
jmp
or
test
loopne
je
in
flds
sub
mov
in
mov
push
imul
mov
fadds
mov
aaa
lock
fs
lahf
sbb
pusha
movsl
pop
test
inc
call
repz
and
xchg
adc
gs
loop
mov
movsl
jg
or
mov
or
mov
stos
cs
ss
negb
insb
sbb
adc
pop
mov
pop
mov
sub
mov
lea
push
lods
xor
pop
testl
lods
loop
testb
sub
loopne
xchg
mov
xchg
fwait
adc
daa
test
lret
lret
clc
sti
rcr
or
scas
leave
pop
mov
add
lret
mov
push
jp
cli
in
jmp
push
popf
sbb
xlat
pop
lds
push
inc
and
aam
iret
pusha
sub
rorl
inc
fld
sbb
ror
dec
out
push
mov
dec
ja
loopne
xchg
jno
inc
std
aam
cmp
cli
sub
ret
movsb
mov
stos
clc
cs
shrb
das
push
xchg
cwtl
les
xchg
loopne
mov
xchg
sti
xchg
test
mov
dec
stos
sbb
jp
xor
and
or
movsl
push
ljmp
loope
shll
daa
hlt
sbb
clc
test
shrb
ret
mov
aam
mov
mov
xor
dec
mov
adc
add
jle
inc
mov
push
cmp
mov
andb
or
aas
xor
add
mov
notl
in
inc
popf
ret
sbb
repnz
dec
jg
mov
mov
adc
inc
pop
mov
pusha
cmp
pop
jl
or
pop
mov
fmull
and
shrl
add
mov
mov
cwtl
pop
mov
sub
jne
mov
pop
adcb
push
jo
jle
aaa
mov
adc
mov
rolb
or
enter
cli
ret
ret
bound
pop
fisubrl
mov
xor
leave
dec
das
mov
or
pusha
mov
mov
popa
test
in
add
and
push
mov
xor
jns
gs
dec
mov
xor
ficoml
cmc
push
scas
add
pop
test
pop
int3
push
rcr
inc
sub
out
or
mov
popa
or
test
jmp
jae
mov
loopne
jecxz
cmp
mov
push
jl
push
repnz
add
inc
xchg
xor
data16
sub
push
sub
stos
lret
sbb
rcrb
aaa
mov
sub
xor
push
lcall
pushf
cmp
testl
pop
xchg
add
dec
mov
mov
add
andb
rcl
add
jno
fdivrl
inc
in
ss
push
push
pop
in
fisubs
sbb
out
dec
imul
cmp
add
arpl
icebp
adc
clc
test
xor
dec
push
mov
mov
fcomip
adcl
shrb
sbb
mov
dec
sbb
or
insl
stos
loop
dec
jo
sbb
or
mov
lods
and
jmp
or
xor
movsl
nop
pusha
movsl
adc
test
movsb
add
xchg
lahf
scas
mov
ret
ds
pop
lfs
dec
fsubr
push
ret
jmp
dec
mov
fidivrl
xchg
test
mov
call
scas
sub
test
mov
bound
lds
xchg
dec
ret
cld
clc
sbb
ret
push
sbb
cs
mov
shlb
fiaddl
loopne
pop
clc
pop
xor
and
mov
push
insb
or
xor
fsubrs
cmc
cltd
dec
add
sar
add
dec
shll
cmp
mov
loopne
pusha
jno
ja
mov
nop
xor
mov
adc
inc
lds
jns
call
xor
insb
andb
mov
pusha
cmp
mov
daa
scas
sti
sub
jmp
dec
rcr
pop
cwtl
lcall
pop
lcall
inc
ljmp
sbb
mov
sub
mov
mov
movsb
pop
xor
js
push
or
sub
cmp
mov
test
rcrl
scas
xchg
xchg
inc
inc
ss
push
jp
adc
pop
or
or
dec
fs
daa
hlt
adc
inc
movd
adc
or
enter
xchg
iret
add
xor
xor
in
push
int
push
push
push
ret
xor
sbb
mov
add
or
leave
sbb
test
mov
mov
add
cmc
lock
and
mov
das
loope
sub
or
ret
add
cld
popa
inc
cmp
xchg
inc
gs
loop
icebp
sbb
imul
fldl
in
cmp
sbb
xchg
fisubl
mov
jmp
xchg
pop
and
jne
xchg
fucomip
outsl
jno
xchg
inc
push
or
cmpsl
fwait
cs
xchg
sti
pop
rolb
pop
stos
loop
dec
pop
xchg
aam
popf
into
jmp
cmp
push
inc
outsl
sbb
add
lods
push
or
mov
jae
or
adc
pop
jbe
icebp
dec
mov
dec
mov
idiv
adc
faddl
cltd
push
push
jl
mov
test
xlat
push
or
mov
aad
icebp
fs
mov
jbe
fcompl
movsl
scas
dec
add
mov
lea
sbb
fimuls
jle
mov
jo
cmp
xbegin
cmp
mov
out
cli
jne,pt
push
enter
int
mov
es
inc
xchg
adc
mov
mov
repz
repnz
adc
jl
sub
mov
cmp
es
pop
fdivs
pop
insb
push
pop
jo
or
xchg
or
sbb
jne
sbb
mov
adc
sbb
addr16
insb
xchg
adc
jl
lods
jnp
push
push
push
je
add
and
cmpsb
push
movsb
mov
scas
dec
movsb
cmp
inc
lahf
mov
push
add
adc
mov
jae
add
inc
stos
cli
outsb
sbbb
add
cmpsl
push
xor
inc
cmp
lods
jmp
sbb
int
rcll
mul
loop
mov
js
sbb
adc
out
add
fsubrs
ss
pushf
dec
push
scas
outsb
jo
and
jae
inc
mov
sbb
xlat
js
cmp
or
push
sub
movsb
jns
xor
dec
cmp
stos
dec
jo
subb
mov
jne
mov
xor
pop
xor
push
sub
add
inc
xchg
add
push
ja
hlt
adcl
fadds
jae
add
lahf
inc
das
inc
mov
call
insl
pop
sub
jbe
imul
mov
ljmp
scas
mov
sub
pop
dec
js
cmp
test
push
cmpsb
jg
and
pop
jno
ret
push
scas
dec
jns
outsb
and
add
jmp
lock
in
and
xor
xchg
xor
xchg
insb
mov
cmpsb
mov
and
fidivl
push
pop
cmpsl
mov
scas
ficompl
ljmp
aad
rol
xchg
leave
orb
sbb
rclb
aam
add
push
imul
sbb
and
movsb
andb
iret
out
adc
add
xchg
sbb
adc
xor
inc
fcoms
xor
mov
and
sti
sbb
fwait
scas
cltd
jns
in
cli
mov
ljmp
add
roll
popf
pop
mov
mov
mov
fwait
adc
lock
imul
cmp
jbe
aam
movsl
add
add
xchg
mov
loop
clc
push
inc
rcl
xchg
push
mov
or
push
js
ja
adcl
sub
inc
mov
and
xchg
js
cld
call
sub
repnz
shrl
and
jl
sbb
dec
mov
lcall
lock
inc
lret
xor
mov
movaps
daa
int3
dec
push
sbb
jo
dec
sbb
mov
dec
pop
jl
shrl
jo
mov
in
or
push
in
test
push
fs
xchg
and
sub
or
repnz
movsl
imul
es
call
cmc
lret
in
jb
sub
loop
add
adc
mov
in
daa
jno
mov
jle
or
lds
adc
jb
add
sbb
xchg
jo
mov
in
lcall
pop
in
cld
xor
cmp
iret
mov
es
and
sbb
sub
test
add
aam
or
jnp
cmp
push
mov
dec
ljmp
test
xor
xchg
mov
inc
mull
shll
mov
push
inc
jl
mov
into
cwtl
flds
movsb
jo
sti
pop
push
ret
cs
lods
xchg
jge
lods
or
test
aas
stc
jb
mov
hlt
pusha
jmp
xchg
test
mov
lods
sub
push
or
jp
imul
fistl
pop
sbb
add
xor
mov
je
loope
jg
pop
loop
out
cmpsb
push
jns
ss
adc
decb
jp
sub
xchg
mov
xor
jl
and
sbb
jnp
shlb
sti
adc
sbb
jle
mov
movsb
and
mov
dec
call
movsl
gs
movl
xor
std
ffree
inc
push
lret
cld
sbb
push
xor
js
jns
lods
aas
js
xchg
or
ja
add
and
lcall
ds
pop
or
stc
int
enter
pop
lret
push
add
js
loope
ljmp
addr16
cmp
xlat
jo
inc
cs
lds
jb
jbe
test
xchg
xor
push
cmp
push
aaa
adc
loop
add
and
shl
jp
call
js
pop
xor
cmp
ljmp
insw
xor
cli
or
lret
adc
push
cmp
xchg
push
pushf
int3
xchg
push
sub
pop
dec
inc
loope
mov
test
rcrb
int
mov
or
mov
mov
pop
ja
test
mov
xchg
pop
in
push
pop
dec
pop
sbb
cmpsl
stos
jle
fs
imul
push
clc
popf
cmp
mov
fdivs
aad
sahf
dec
in
scas
mov
sbb
fsubr
xor
scas
mov
mov
cltd
movsl
in
incb
xchg
fs
fiaddl
cmp
add
mov
push
push
je
sahf
push
sahf
add
and
jmp
lock
xor
xchg
les
shlb
jbe
shrl
ret
sarl
arpl
jg
daa
stos
push
cmpsb
mov
lahf
jge
subl
out
loope
sub
lret
xor
cmpsb
xor
test
dec
rorb
ljmp
stos
or
xchg
lds
ret
mov
test
jecxz
add
dec
xchg
cmp
adc
std
addb
lahf
mov
xchg
fisttpl
sbb
adc
jb
push
insl
lcall
jge
into
cmp
and
je
sub
pusha
pop
add
sub
pushf
clc
pop
movsl
mov
test
adc
rorl
xchg
in
mov
into
add
jl
hlt
mov
enter
ja
and
bound
mov
inc
push
add
mov
stos
aas
push
cld
add
adc
bnd
push
pop
xchg
jp
pop
add
sub
cmp
ret
and
rorl
add
jg
scas
mov
dec
mov
push
in
pop
mov
scas
mov
and
cmc
fs
adc
sub
fdiv
adc
mov
mov
xchg
fcompl
mov
sbb
mov
add
sub
lods
mov
cltd
push
pushf
pop
out
add
sbb
push
xor
pop
sbb
xchg
sub
rorb
sbb
or
cmp
ret
imul
mov
sbb
xlat
pop
lcall
cmp
or
push
lret
add
repz
dec
shll
pop
mov
mov
icebp
sub
dec
xchg
popa
movsb
jbe
movb
sbb
xor
and
shll
pop
jnp
addl
loope
or
xchg
xor
push
push
jmp
inc
ss
sbb
add
xor
adc
ret
inc
pop
or
rcrl
cmp
shl
add
rolb
in
pop
mov
push
stos
and
jb
sbb
notb
mov
in
ret
xchg
lea
jecxz
adc
push
mov
pop
movsl
xor
imul
inc
mov
add
or
mov
and
cltd
out
or
arpl
inc
das
mov
test
xchg
test
xor
add
imul
jp
and
imul
and
push
repz
call
adc
adc
insl
mov
or
aas
gs
push
mov
int3
xor
stc
out
sti
ret
push
mov
xchg
roll
mulb
push
not
pop
out
call
lods
cmpsb
cmpsl
cs
xor
int
lret
imul
aad
jns
jge
call
mov
mov
inc
jns
adc
add
mov
add
xor
pushf
roll
push
data16
sub
xchg
push
in
or
and
and
sahf
jb
sbb
sbb
ret
pextrw
dec
outsl
les
shlb
in
add
inc
popf
aad
fnstenv
lods
fmuls
jecxz
inc
jmp
fcoml
les
scas
and
adc
pop
xor
xor
fists
pop
into
xchg
sbb
cmpsb
aaa
cmpsl
mov
adc
mov
jns
xchg
data16
adc
jle
call
test
in
mov
jnp
shlb
dec
rolb
sbb
cmp
out
dec
jle
dec
iret
push
test
sti
and
push
mov
adc
es
adc
js
sub
pop
pop
pop
mov
add
adc
mov
add
cli
sarl
inc
xorb
addr16
es
lds
stos
sub
pop
rcrb
add
jmp
test
cmpsl
push
ja
scas
nopl
in
shll
and
or
incl
daa
add
sti
xor
mov
clc
sub
xchg
rol
loop
cwtl
adc
sub
into
xchg
push
xchg
stos
cmp
lret
shlb
aaa
jmp
call
rorl
pop
iret
xchg
loope
mov
adcb
xor
jo
cmpsl
push
js
fs
sarb
cmp
cmp
lahf
push
sbb
loopne
loop
xchg
fstps
nop
mov
push
push
test
push
lods
sbb
enter
in
or
rclb
in
adc
in
inc
mov
in
or
mov
pop
sub
adc
xchg
mov
jb
mov
mov
inc
rol
mov
mov
mov
push
pop
mov
push
js
jmp
idivb
dec
addl
jns
push
sbb
pop
pop
mov
pop
shlb
shl
dec
jns
rol
repz
add
imul
and
dec
shll
dec
sub
loopne
lods
sbb
lds
pop
xchg
rcr
xlat
mov
js
ret
sbb
or
inc
adc
clc
mov
rcl
cmp
pop
rcrb
pop
mov
pop
push
test
cli
test
xor
shrl
mov
push
decb
and
mov
jmp
pusha
mov
out
jge
sbb
aas
inc
cmp
ret
jo
mov
rorl
adc
add
jmp
sbb
xor
dec
cli
fiaddl
aad
rcll
mov
imul
dec
rcll
mov
jp
push
adc
outsl
cmp
mov
pop
mov
cmpsl
adc
inc
jge
xchg
fcmovb
sub
lods
scas
mov
push
mov
les
and
mov
or
or
mov
call
ss
xor
daa
aam
nopl
pop
add
cmp
sbb
fldcw
dec
mov
inc
and
add
and
mov
int3
loop
cmp
es
in
xor
and
icebp
lret
loop
iret
dec
and
mov
cwtl
addb
or
mov
pushl
adc
ficomps
mov
adc
ret
mul
jmp
into
pop
push
sbb
addb
sbb
repz
or
pop
cmpsl
push
mov
ret
mov
mov
mov
add
cmp
lcall
adc
mov
mov
sub
hlt
inc
aam
push
lds
jns
rol
xlat
adc
repz
iret
pop
lret
pop
and
mov
pop
icebp
xlat
sbb
xchg
addr16
inc
push
loop
jbe
ret
ret
mov
push
xor
insl
or
sbb
adc
and
jmp
dec
add
cltd
push
mov
ret
cmp
push
addr16
add
xchg
sbb
shrb
jne
mov
stos
notb
in
pop
fs
lahf
imul
push
or
lds
bound
repnz
sbbl
mov
jle
outsb
cltd
xchg
dec
mov
imul
push
mov
mov
stos
decl
test
ljmp
rcrl
lret
sub
mov
sahf
xor
lods
and
dec
mov
xchg
push
fwait
ret
callw
mov
imul
or
jmp
jmp
or
and
sbb
push
std
push
dec
out
and
js
hlt
pop
rcl
repnz
fnstcw
rcrl
mov
pop
mov
test
ficoml
leave
push
add
clc
jp
inc
cmp
pop
sahf
xor
shrl
pop
sti
mov
and
pop
mov
aad
dec
dec
adc
in
and
push
add
mov
cli
or
dec
add
push
movsl
or
test
and
sar
retw
test
shl
mov
and
jge
adc
repz
repz
jp
pushw
add
xor
pop
xchg
mov
fistl
cltd
subl
in
push
xchg
mov
push
jns
roll
fisubs
pop
inc
js
mov
mov
adc
in
dec
ret
das
sub
xchg
push
add
ja
adc
cmpsb
push
push
dec
jl
sub
mov
xchg
adc
adc
push
xor
in
cmc
enter
mov
in
or
mov
mov
sti
std
adc
mov
out
or
inc
pop
push
sbbb
aaa
jnp
cmpsb
into
in
inc
jmp
dec
jmp
pusha
jb
push
jne
or
xlat
loope
dec
lea
mov
adc
sbb
rclb
push
sbb
mov
jmp
insb
test
pop
jmp
dec
adc
push
sti
andb
jle
inc
xlat
inc
scas
add
pop
mov
rcll
mov
xchg
lea
inc
fistl
jnp
inc
pop
call
add
add
popa
jle
sbb
cmp
ficompl
jecxz
dec
pop
sti
xor
push
dec
popa
hlt
adc
pop
movsb
setge
les
int
cmp
out
add
sbb
sbb
adc
test
out
jle
inc
mov
mov
sarb
inc
dec
mov
andb
add
push
addr16
sbb
jecxz
iret
pop
filds
sahf
fs
rcl
aam
adc
cmp
fsubs
push
pop
push
push
cmp
jns
jbe
roll
icebp
adc
movsb
sub
pushf
dec
hlt
xchg
jno
jle
les
jae
and
imul
sbb
cmp
ret
mov
sub
add
sti
mov
adc
ret
xor
out
xor
sti
int
ret
inc
jp
mov
outsl
stos
xchg
sub
cmp
sahf
test
loopne
cs
jnp
cmpsl
sub
and
sub
adc
sub
lcall
mov
inc
faddl
mov
cmp
insb
jae
scas
rcrb
inc
fidivl
les
xor
pop
add
and
inc
decl
xchg
rclb
xchg
imul
test
cmpsb
movsb
jno
push
xchg
les
das
cmp
pop
mov
jmp
cmp
mov
sbb
aaa
adc
inc
dec
jns
sub
mov
shl
xchg
push
cmp
insb
push
sub
add
aam
sub
xchg
xchg
scas
mov
repz
xchg
mov
jmp
inc
ja
imul
iret
mov
sbb
cmp
mov
push
popa
lcall
lods
dec
cs
ss
mov
icebp
insl
xchg
add
hlt
or
add
out
add
sahf
notb
mov
shll
and
in
std
call
lcall
hlt
test
sbb
dec
cmp
push
dec
and
ret
imul
out
das
and
xor
ja
sub
adc
sbb
xor
nop
stos
sub
aaa
imul
jbe
or
jae
inc
push
repnz
inc
scas
fisttps
daa
or
into
mov
dec
dec
mov
cmpsb
push
scas
jo
xchg
movsb
imul
push
leave
clc
js
les
push
ss
adc
dec
inc
outsl
fstl
mov
and
test
imul
lods
lcall
and
mov
fs
inc
in
xor
sahf
icebp
mov
int
xabort
loop
mov
push
mov
pop
jmp
mov
xchg
rcll
mov
jbe
pushf
popa
lods
mov
idivl
ret
adc
out
movsb
sbb
push
movsb
jle
jne
mov
pop
or
xchg
dec
loopne
add
lock
mov
addr16
aad
pop
rolb
xchg
mov
shlb
in
xlat
rorl
mov
sti
sbb
pop
stos
orb
lods
or
in
into
fnsave
jmp
movswl
popf
jnp
shll
mov
xchg
inc
jb
outsl
and
popa
fildl
jle
push
cmp
call
mov
sbb
nop
std
xor
mov
test
jmp
das
ja
xchg
inc
xchg
je
xchg
sbb
push
mov
js
aas
sub
je
ds
movsl
out
sbb
dec
pop
sub
pop
test
pop
add
ret
mov
lods
dec
ficomps
cwtl
jne
mov
test
inc
add
cmp
add
in
rolb
sbb
inc
mov
xchg
icebp
mov
cmp
mov
and
xchg
xchg
fdivs
ds
out
and
lret
mov
dec
aam
out
inc
test
pushl
cmpsl
call
inc
mov
imul
dec
outsl
mov
inc
sbb
push
pushf
in
inc
xchg
jb
orl
fldl
or
ret
mov
mov
in
idivl
andb
mov
fcmovnbe
add
test
enter
mov
sub
mov
sarl
cmpsb
scas
or
ret
jg
push
pusha
cli
stos
mov
sub
movl
jg
xlat
xchg
and
sbb
jp
xor
xor
inc
inc
push
add
pop
sub
mov
stos
push
xor
cmc
fnstenv
mov
add
popa
pop
das
mov
cs
dec
pusha
add
add
sbb
add
xor
mov
mov
or
push
lahf
imul
in
mov
push
adc
test
pop
in
rcrb
out
push
test
test
mov
es
add
pop
imul
sbb
inc
fimull
daa
pop
adc
xchg
jo
js
sub
aad
inc
orb
adc
jp
clc
cwtl
rcrl
add
mov
loope
sub
stos
sub
and
or
cmp
test
inc
or
lcall
shr
dec
xchg
andb
jp
in
jl
js
je
cmpsb
pop
push
jp
std
mov
adc
fdivrp
or
adc
and
sub
scas
xchg
mov
sahf
and
xchg
lock
xor
into
mov
xchg
fisttps
aam
cli
pop
add
sub
mov
sbb
inc
sbb
fstpt
mov
lcall
rorb
into
test
loop
incl
push
les
roll
popf
jbe
push
es
pusha
push
loope
leave
inc
pop
lds
shlb
push
pop
mov
cmp
or
jg
pop
sbb
dec
jb
rcr
mov
add
sti
lcall
push
pop
pop
rcr
lret
icebp
xchg
movl
jbe
scas
or
push
push
add
popf
stos
add
notb
andb
or
add
dec
ret
mov
test
push
mov
jecxz
rcll
sbb
mov
addr16
aad
mov
mov
aam
sub
enter
dec
in
sub
outsb
and
insb
pop
cmp
mov
push
dec
sbb
inc
roll
sbb
and
adc
push
and
outsb
sti
inc
cmp
jns
or
test
pop
dec
pusha
push
or
xlat
adc
mov
lahf
and
and
iret
push
pusha
dec
rcrl
sub
lock
jno
pop
outsl
push
adc
lock
pop
or
dec
cmp
dec
jle
fwait
inc
mov
add
dec
jbe
mov
ljmp
fs
les
push
sub
cmp
imul
dec
jle
js
loope
pop
sub
out
push
xchg
pop
jbe
js
fiaddl
jns
cmp
out
fs
cli
movsl
push
push
dec
or
mov
insl
test
jne
xor
xor
inc
hlt
xor
cbtw
xor
lea
setp
mov
inc
lds
mov
cld
in
insl
outsb
imul
dec
add
aam
jns
mov
bound
clc
fadds
xor
dec
popf
loop
push
or
sub
movsb
or
sub
push
adc
out
lahf
sbb
ss
jge
shrb
sbb
mov
push
dec
dec
pop
stc
xchg
insl
in
cld
movsb
mov
inc
mov
push
repnz
ja
aam
pop
out
rol
push
rol
mov
incl
and
or
add
inc
test
ja
lret
sti
pop
push
and
pop
test
arpl
out
push
or
repnz
push
addr16
cmp
stos
jl
das
cli
sbb
jb
je
iret
or
or
mov
and
dec
out
jae
jo
jg
and
pusha
int3
mov
mov
inc
mov
mov
iret
add
cltd
out
sub
or
or
mov
push
xchg
clc
aaa
add
sub
dec
icebp
test
dec
add
arpl
js
imul
sbb
dec
or
test
push
addb
and
or
xchg
addl
mov
inc
mov
adc
or
xor
dec
inc
jg
or
push
call
adc
push
lret
popa
loope
out
dec
stos
icebp
repz
test
out
addr16
mov
cmp
mov
ret
dec
ja
sub
dec
dec
pop
lods
dec
lock
enter
mov
lods
pop
lock
stos
xchg
std
or
inc
es
mov
jp
sarb
div
pusha
mov
jecxz
mov
sbb
and
das
dec
lods
dec
std
adc
push
sahf
inc
xchg
cmpb
fmull
fisttpll
pop
adc
add
std
xchg
mov
push
ret
inc
adc
lret
sub
mov
adc
or
and
adc
dec
notl
xchg
push
loop
jnp
ror
jge
insb
pop
inc
sbbb
mov
mov
mov
cmc
or
mov
std
fisubrs
sub
jno
jl
in
mov
and
and
lods
add
pop
mov
movsl
lock
and
add
test
enter
add
inc
bound
mov
mov
outsb
js
js
lds
in
imulb
mov
out
inc
add
cli
jg
push
sahf
push
test
aas
mov
push
js
ljmp
sub
test
lods
or
add
adc
inc
andb
popa
pop
insb
push
dec
fsubl
test
data16
test
stos
or
das
lds
cli
jmp
mov
cs
rorb
jmp
jp
adc
cmp
cmp
sub
clc
out
jno
test
sub
fildll
add
aad
lcall
jp
outsb
push
push
out
inc
jb
dec
cld
and
fbstp
dec
mov
testb
dec
and
xor
test
mov
rolb
push
dec
int3
mov
add
test
out
js
cli
pushf
lds
or
repz
cld
push
push
idivb
or
insb
cs
in
inc
shlb
mov
aaa
popf
ss
popa
iret
jno
or
mov
add
sub
test
or
jb
orl
stos
inc
push
mov
cmp
pop
ljmp
mov
cs
dec
shlb
addr16
add
or
mov
ss
xor
and
sbb
or
adc
xor
inc
lcall
out
int3
loop
push
shlb
ds
pop
sti
sbb
pop
pushl
inc
mov
mov
clc
call
push
decl
jl
ds
jno
out
sub
in
out
loop
sub
jo
xlat
mov
lret
les
cmp
cmp
inc
xor
scas
jae
xchg
pushf
mov
call
mov
mov
add
stos
mov
lea
scas
or
sub
pusha
insl
data16
push
in
hlt
loopne
mov
insl
mov
jae
inc
aad
sub
jge,pt
sbb
mov
jmp
arpl
cli
sub
add
and
nop
push
mov
popa
adc
pop
pop
insb
pop
adc
push
xchg
sub
push
adc
dec
cmc
jns
xchg
jle
mov
pushf
testb
rcrb
subb
mov
aad
dec
shl
push
inc
pop
add
bound
mov
mov
clc
push
adc
daa
mov
adc
inc
cmp
icebp
movsl
pop
arpl
xchg
xor
loope
fidivrs
cld
mov
cs
mov
fistl
mov
dec
sub
clc
sarb
or
add
into
xor
sarl
subl
arpl
ret
mov
insb
lock
pop
add
mov
adc
pop
fsubl
mov
aas
les
js
or
dec
push
int3
movb
or
add
and
lea
sarb
mov
mov
fldenv
mov
jl
push
fistpl
xchg
fldl
xor
push
in
and
mov
lods
dec
stos
add
scas
mov
sbb
inc
loopne
xor
movsb
mov
cmp
nop
push
lahf
xor
inc
cli
out
ljmp
dec
icebp
mov
test
dec
jb
inc
les
in
repnz
fists
js
mov
lods
or
dec
mov
dec
fisttps
ljmp
icebp
rol
xchg
stos
jns
jb
and
xchg
inc
dec
xchg
mov
fwait
push
mov
add
xor
sahf
insb
or
dec
cli
add
enter
movb
or
add
dec
shl
jno
or
inc
add
sbbl
dec
inc
enter
pop
push
inc
clc
or
cli
lods
scas
inc
sub
loop
stos
sbb
xor
lahf
outsb
pop
push
ret
mov
into
or
mov
jns
jbe
add
and
jle
mov
push
mov
fcmovnu
mov
in
push
dec
loop
cmp
xchg
outsb
mov
movsl
sub
imul
mov
and
sbb
loop
push
shrl
mov
xchg
jl
inc
les
or
fadds
inc
loop
mov
mov
jo
dec
mov
bound
sbb
divb
sbbb
hlt
sbb
cli
sti
or
inc
jne
insb
pop
movsl
push
ljmp
stos
sub
adc
cmp
xchg
icebp
xchg
fcmovbe
mov
int3
nop
xchg
or
sbb
mov
push
jne
mov
lock
sar
or
jl
mov
fnstsw
enter
push
shlb
jp
popa
xchg
and
mov
push
lcall
mov
loopne
lock
adc
mov
cld
lods
test
xchg
ja
xor
mov
popf
insl
ret
or
ljmp
sbb
or
out
sbb
out
int3
sarl
aas
stos
xor
inc
xor
xchg
xchg
inc
int
sbb
fwait
cmp
outsb
xchg
xchg
mov
dec
les
ds
cmpsb
sti
dec
je
cbtw
sahf
inc
xchg
loopne
sub
pop
inc
sbb
pop
add
sbb
negl
fsubs
rcrl
xchg
call
test
call
out
or
pop
nop
pop
cmp
xchg
in
loop
shrb
or
andb
xchg
lea
loope
jo
xor
sbb
mov
or
xchg
addr16
mov
push
frstor
sub
test
inc
add
mov
dec
jo
call
or
mov
sub
into
cmp
or
cli
jne
enter
add
adc
add
outsl
mov
ja
adc
or
jge
mov
add
pop
and
jg
sub
add
cld
xchg
outsb
add
in
mov
dec
shrl
xor
xchg
jbe
imul
clc
xor
push
push
pop
ss
or
movsb
jecxz
cmp
fsub
push
adc
xor
ljmp
mov
es
mov
cmp
pop
sub
test
fnstcw
clc
test
mov
push
sbb
add
or
and
repnz
sub
ret
xlat
enter
jecxz
or
insl
sub
orl
ljmp
clc
ficoms
ret
and
mov
lea
clc
jecxz
mov
mov
push
vpmaxsw
lock
cld
setne
dec
mov
inc
rclb
jmp
insb
pop
push
je
pop
cmpb
in
lahf
fimuls
pop
or
mov
sub
testl
inc
lock
sub
fdiv
enter
mov
outsl
popf
dec
lret
fdiv
jmp
mov
mov
ret
mov
sbbb
mov
mov
aas
mov
jbe
xchg
inc
push
mov
add
push
insb
aam
fidivl
and
repnz
fdivl
pop
add
adc
lock
cmp
jp
lock
mov
inc
xchg
inc
adc
fisubrs
xor
add
cld
adc
jae
add
mov
jp
jno
sub
push
mov
adc
cmpsl
outsb
inc
adc
push
inc
lcall
shlb
test
push
or
sbb
repz
into
fisttps
ds
icebp
xor
mov
fucom
wrmsr
fwait
sbb
push
push
ss
jge
push
push
into
test
dec
jo
rorl
aam
pushf
cltd
rolb
dec
add
push
and
cmpb
cmp
ds
cmpb
push
cmp
cmp
loop
bound
add
dec
and
lcall
xchg
adcb
mov
mov
dec
mov
stos
jl
cmp
stc
add
cmp
lahf
xchg
mov
dec
es
lahf
dec
call
fcmovne
mov
jle
rolb
mov
andl
or
inc
fwait
aas
push
inc
nop
ljmp
jne
add
push
orl
pop
repnz
jb
and
decb
mov
lret
inc
inc
mov
pop
daa
add
jg
sub
mov
cmp
daa
int3
clc
sbb
jo
xor
jle
jp
mov
fisttps
ss
jbe
add
nop
jl
jo
pop
ret
push
fsub
stos
test
xchg
mov
add
inc
sub
fisubl
bound
lret
inc
push
xchg
sbb
add
fdivrs
in
jg
or
pop
mov
fldlg2
leave
adc
js
lock
push
mov
mov
clc
dec
mov
push
mov
inc
iret
movsb
adc
push
decb
xchg
sbb
add
lahf
push
aas
daa
test
jns
inc
je
lock
mov
sbb
xchg
inc
bound
stos
inc
mov
sbb
loopne
in
xor
scas
lret
pusha
mov
push
cld
arpl
js
ret
mov
cmp
mov
sbb
or
push
sub
addr16
push
jo
arpl
adc
add
dec
inc
jae
inc
hlt
mov
adc
xchg
cmp
or
push
clc
cltd
cmpsl
fdivr
bound
pushf
sbb
jns
push
mov
push
adc
and
adc
lock
or
dec
pop
fs
dec
pop
push
push
sub
pushf
cmpsb
icebp
or
jne
stos
dec
or
sub
xor
adc
aas
pop
adc
add
test
out
jp
iret
ror
add
loopne
cmpsb
js
sub
jecxz
sbb
scas
jp
popa
dec
adc
mov
xchg
and
es
add
jbe
mov
pop
jnp
out
mov
lods
xor
popf
sub
sahf
insl
enter
sub
cmpsl
ret
jbe
jo
xchg
fcomp
jo
lcall
insb
cmpl
mov
clc
test
add
dec
jg
gs
cmp
push
cli
jg
or
clc
testl
ret
es
xchg
add
dec
addr16
cs
jbe
mov
and
shl
xor
mov
mov
aam
rcrb
xchg
adc
inc
std
test
sub
cmp
mov
scas
pop
andb
push
cmp
push
cmp
scas
hlt
in
or
addr16
ljmp
ds
pop
mov
rorb
shrb
andb
sti
ret
pop
pop
movsl
xor
fwait
mov
add
sbb
xchg
xor
xor
sub
dec
std
pushf
push
hlt
mov
in
fisubs
pop
pop
fstpl
ret
jnp
jb
ret
pop
dec
pop
imul
sub
outsb
test
mov
mov
insb
adc
mov
sarb
outsl
repnz
aaa
or
ss
xchg
test
sbb
pushl
and
dec
cli
dec
add
dec
sub
cmpb
sub
add
mov
bound
call
mov
cs
lahf
mov
fbld
pop
sub
lea
ror
mov
enter
add
gs
adc
cli
sbb
mov
lcall
sub
out
inc
push
xchg
arpl
lret
nop
leave
jle
mov
push
lods
xor
mov
es
add
sub
dec
mov
mov
fdivs
adc
push
aaa
dec
cmp
scas
inc
aam
rol
inc
and
scas
in
imul
lret
jl
pop
mov
inc
cmp
pop
mov
sbb
add
and
push
jmp
jmp
adc
testl
inc
or
pop
and
ret
cs
pop
lret
or
js
add
shlb
mov
pop
pop
and
cmova
dec
inc
cmp
loopne
cli
mov
mov
daa
pop
jp
int3
sbb
fcmovu
stos
cmp
outsb
xor
push
shlb
je
mov
daa
or
std
sbb
in
aas
enter
cmp
sbb
or
mov
mov
inc
pop
dec
sarb
dec
sar
popa
xor
and
jb
dec
pop
cmc
ljmp
sahf
rcl
addb
mov
mov
xchg
loopne
adc
push
or
dec
xchg
mov
bswap
les
xor
cmc
xor
aam
pusha
rorl
gs
inc
push
lea
sub
jmp
or
push
xor
push
jl
adc
push
scas
mov
jo
test
js
add
pop
icebp
add
inc
lds
out
ljmp
push
xchg
lock
hlt
mov
sbb
sub
mov
test
insl
jne
sbb
lcall
or
dec
fcomps
xor
jb
push
mov
arpl
sub
stos
testl
xchg
shll
add
and
fnstsw
add
xchg
stc
dec
shlb
add
call
dec
ret
jb
mov
cmp
incl
push
repnz
and
mov
add
shrb
out
mov
adc
push
inc
pop
loopne
movsl
or
inc
jl
outsb
adc
xchg
push
mov
inc
mov
cmp
sarb
mov
loop
sbb
lahf
sub
push
sbb
movsb
rcl
xchg
push
mov
cmp
and
mov
push
repnz
cld
sti
mov
cmc
xor
sbb
mov
les
xchg
stos
cltd
push
rcl
xorb
loope
jno
stc
sbb
inc
cmpsl
inc
inc
sub
out
ret
fwait
push
push
sbb
xchg
mov
push
ret
leave
imul
call
jmp
test
call
mov
sarb
adc
cltd
loop
adc
xor
ljmp
mov
nop
pop
fcmove
mov
and
and
inc
mov
and
adc
addb
add
sub
rorb
inc
pop
mov
or
std
adc
mov
test
add
or
mov
hlt
mov
xor
cli
imul
or
xchg
push
lock
dec
mov
pop
icebp
push
hlt
incb
and
add
xchg
insb
icebp
ret
repnz
jns
adc
rcrb
sbb
sub
out
jmp
inc
pop
cmp
mov
out
inc
cmp
cli
jo
xchg
xchg
fbstp
xor
cli
inc
xchg
jp
push
add
xor
inc
scas
ret
outsb
stos
loopne
and
sub
jb
cmp
or
mov
mov
sub
adc
test
mov
adc
inc
lods
scas
icebp
bound
rorb
push
mov
cmpsb
fidivrs
cld
mov
es
push
or
xchg
lods
mov
push
movsl
inc
lcall
out
aad
jne
add
cld
enter
fucomip
push
push
leave
push
sub
inc
inc
and
xchg
out
cmpl
sbb
push
adc
cmp
adc
adcb
and
and
mov
pop
dec
daa
xchg
pop
test
jne
mov
inc
sbb
and
dec
enter
push
loop
jl
cmp
mov
lock
mov
pop
mov
loope
dec
clc
xor
add
push
xchg
popf
loope
lods
pop
push
cmp
sub
int3
pop
gs
cs
rcrb
adc
decb
data16
imul
cmpsb
pop
mov
dec
addb
mov
mov
or
pop
push
loope
sti
dec
js
cmp
pop
fldenv
cmp
xchg
inc
cmp
imul
adc
xor
nopl
pop
xchg
call
lea
arpl
inc
sbb
jp
add
push
sbb
add
nop
aad
pop
mov
xchg
dec
js
ret
ffreep
or
enter
jbe
xchg
in
pusha
and
cmp
cmpsb
xor
xor
shr
call
xor
je
pop
ss
adc
out
leave
bnd
inc
or
or
push
js
adc
popa
rcll
into
icebp
dec
inc
mov
and
cwtl
icebp
inc
dec
lods
mov
dec
or
mov
or
sub
sbb
inc
and
sbb
enter
lret
sub
ret
xor
cmpsl
inc
lea
mov
add
data16
mov
cmc
test
mov
jg
push
xor
and
lods
xchg
adc
pop
cld
sub
and
out
mov
repnz
xchg
pop
stc
xor
xchg
mov
dec
mov
iret
and
arpl
shlb
lods
rcrl
cwtl
iret
fisubs
add
jg
les
pop
cmp
rol
adc
fxch
rorl
out
divb
pop
addr16
into
cltd
or
cwtl
mov
jne
subb
or
stos
sbb
pop
cmpsl
dec
addr16
adc
mov
icebp
inc
ret
jecxz
ss
add
sub
sub
mov
sbb
lods
xorl
insb
pop
mov
cmp
xor
add
dec
pop
push
lret
mov
mov
adc
cmc
sub
movb
test
scas
mov
xor
aaa
xor
rclb
sbb
mov
call
ret
push
mov
mov
sub
dec
add
loope
incb
test
in
pop
imul
imul
push
add
push
inc
mov
ss
dec
xchg
or
xor
cmp
add
mov
jle
and
je
lret
push
out
js
xchg
mov
pop
fdivs
ret
repnz
xchg
in
dec
xor
inc
push
enter
lods
fistpll
mov
out
lods
mov
or
inc
sbb
jp
or
jecxz
sbbb
repz
insl
jl
icebp
aam
lret
or
movb
pop
hlt
addl
mov
ret
jae
test
gs
call
xchg
and
xchg
push
shll
mov
cmpb
or
loope
jno
xchg
pop
push
sub
lret
movsl
ds
fldcw
mov
xchg
loope
adcl
jp
gs
adc
jg
inc
sbb
sub
mov
fsubrs
dec
xchg
adc
aaa
shll
divl
les
fldl
cltd
mov
jecxz
adc
sub
inc
pop
inc
jnp
nop
fs
jl
push
mov
sbb
inc
push
sbb
sbb
inc
mov
push
mov
mov
hlt
das
ficompl
clc
stos
adc
sub
scas
sti
jl
jecxz
push
jecxz
sbb
jbe
add
jns
imul
gs
inc
testl
push
pop
sarl
es
jge
into
movsl
adc
fnstenv
mov
scas
cmp
push
mov
add
fildl
das
in
enter
gs
hlt
add
and
mov
pop
push
hlt
fisttpll
cli
add
jmp
loop
mov
aas
or
sbb
cwtl
jg
and
pop
pop
aaa
add
adcl
xor
lock
je
dec
mov
in
cmp
aam
in
test
lds
mov
xor
arpl
into
sbb
test
aad
sbb
sub
xchg
xor
push
adc
push
sbb
inc
fisttpll
xchg
xchg
sub
jns
pop
jl
imul
sub
mov
movsl
sbb
rcrl
xchg
cmp
lock
jle
aaa
add
add
cmp
lock
sbb
test
push
lock
jmp
mov
insb
test
mov
mov
and
dec
mov
inc
mov
test
adc
test
fnstcw
cltd
ja
je
daa
push
fsubp
sbbb
add
inc
adc
jp
and
rclb
fnstenv
outsl
sbb
loopne
add
adc
pop
mov
xchg
inc
jecxz
jne
fucom
into
cwtl
inc
mov
test
pop
sbb
jae
push
sahf
mov
dec
push
daa
mov
idivl
out
mov
inc
pushf
push
orb
push
fnstsw
or
shll
push
lods
or
jnp
mov
mov
jo
add
or
inc
dec
in
lret
sbb
inc
packsswb
xlat
cltd
scas
jo
cltd
orb
push
fbstp
sbb
or
fdivrl
rolb
adc
shll
cmpsl
xor
aam
shl
xchg
int
cwtl
aas
xlat
mov
mov
and
add
loope
cmc
cmp
mov
aaa
in
xor
loopne
and
pop
push
xchg
cs
scas
xchg
xor
shrb
or
and
xchg
or
mov
jmp
test
aas
stos
cld
xchg
imul
popa
test
xchg
ja
lods
xchg
iret
push
xorb
shll
jmp
orb
cmp
adc
mov
in
xchg
mov
push
pop
add
lock
out
mov
jp
jg
push
jecxz
and
pop
icebp
dec
das
inc
mov
mov
subb
jmp
in
clc
or
and
xchg
test
push
inc
cmp
xor
loope
cmpsb
enter
mov
mov
les
das
cmc
cmp
xchg
cmpsb
push
push
cmp
aam
jg
ffreep
jl
sbb
sbb
hlt
inc
push
cmp
movsb
dec
add
test
sbb
jg
xchg
pop
dec
dec
ret
adc
scas
sub
jo
add
xor
popl
fld
jo
mov
or
jne
xchg
pop
push
mov
rcrw
loop
shlb
sbb
pop
scas
ds
les
add
dec
push
out
rcll
rcrb
xchg
and
sbb
inc
jo
sbb
xor
cmpsl
aas
sub
call
movsl
loop
pop
ret
loope
pop
pop
enter
and
push
pop
ljmp
xor
bound
icebp
imul
xor
jmp
dec
pop
push
mov
test
lret
mov
stos
push
jb
xor
push
je
xor
rcl
loopne
xchg
and
pop
and
out
faddp
movsb
cmp
sarb
adc
es
fstl
jno
in
push
lcall
inc
in
test
pop
cwtl
enter
mov
dec
cmc
movsb
popf
fs
cmc
dec
add
and
enter
bound
lret
cmpsl
pop
inc
and
aas
cld
mov
xor
repz
ret
leave
test
stos
mov
pop
rol
mov
jecxz
sub
je
adc
jmp
iret
data16
ret
push
aad
test
sub
push
jbe
out
mov
dec
lods
cli
shrl
repnz
xchg
jle
movsl
adc
mov
sub
pop
aas
aad
arpl
pusha
insl
jno
lods
pop
and
addb
bound
add
and
mov
mov
pop
mov
cltd
ror
ljmp
jp
adcl
jg
mov
add
leave
sub
mov
xchg
dec
mov
add
mov
andl
mov
dec
pop
push
inc
out
xor
pop
sbb
ret
rclb
mov
cmpsl
cltd
xchg
in
push
add
xchg
leave
in
orl
stc
xchg
outsl
test
pop
popf
push
cmp
mov
mov
inc
dec
clc
subl
out
and
pop
mov
push
rorl
mov
jno
xchg
and
test
fistpl
scas
shlb
aam
repnz
pusha
cmp
mov
jmp
jne
pop
dec
or
inc
mov
movsl
ret
outsl
push
fidivl
sub
jo
loope
ffree
jnp
jecxz
test
mov
test
add
cmp
xor
insl
xchg
and
pop
dec
xlat
roll
xor
dec
shl
lret
stc
fsubp
adc
sub
scas
xor
pop
inc
int
jae
mov
sub
mov
scas
inc
ret
cmp
mov
and
mov
inc
or
or
in
les
lahf
pusha
arpl
lock
and
add
insl
or
xchg
dec
dec
cld
and
fisttpll
push
push
or
jl
inc
sub
in
gs
mov
aad
jo
dec
push
pusha
add
imul
rorl
cli
cld
xor
in
sbb
inc
shll
gs
add
inc
push
bswap
xor
pop
sbb
out
imul
jnp
rcl
xchg
aas
movsb
lods
sbb
popa
or
ret
pop
add
addr16
or
clc
fsubl
repnz
aam
arpl
insb
shr
pop
in
sub
ror
cmp
push
push
inc
lcall
mov
mov
adc
and
test
std
std
popf
mov
sbb
das
dec
mov
jecxz
add
pushf
lods
fsubrs
jnp
lock
scas
sbb
cmp
dec
cmp
inc
iret
clc
dec
cmp
mov
jne
inc
jmp
or
add
xlat
inc
ret
mov
inc
xlat
aaa
inc
sbb
and
mov
mov
push
and
je
stos
xchg
or
push
js
rcrl
inc
ja
or
dec
lahf
jmp
clc
sarb
adc
sub
lds
mov
xor
rorb
jno
mov
mov
shll
fidivrs
inc
je
sub
outsl
mov
pusha
mov
mov
lcall
fadds
dec
jne
imul
jnp
sahf
xorl
sbb
enter
rcll
push
mov
jne
mov
jp
dec
xchg
xchg
xchg
js
xor
lret
jnp
add
call
sbb
add
lcall
imul
add
mov
bound
mov
xor
test
add
xchg
aam
dec
mov
cmpsb
cmpb
incl
fbld
test
mov
aas
outsl
lahf
insl
jle
cmp
test
outsb
mov
xor
fdivrs
clc
pop
and
sub
adc
into
stc
stos
pop
mov
or
sub
jle
adc
scas
push
mov
mov
es
inc
ds
cmp
into
mov
jl
xchg
test
pop
mov
mov
stc
maxps
pusha
lods
adc
rolb
cmp
mov
and
enter
push
shlb
lock
data16
js
testb
int3
mov
sbb
xchg
lock
pop
test
inc
loope
lahf
shlb
insl
les
call
inc
or
call
shlb
in
add
js
cmp
jo
xchg
movsb
cmpsb
push
fsubrs
sub
mov
lcall
sbb
loopne
jbe
jp
jns
add
sbb
cmpsl
stc
inc
subb
pop
hlt
or
inc
setp
jbe
cmp
mov
mov
loopne
ret
sub
xorb
sub
je
cmp
lcall
xor
mov
fildl
adc
stc
ljmp
jge
icebp
daa
xor
fsubl
les
and
mov
and
mov
iret
loope
pop
ljmp
dec
push
loop
mov
daa
fildll
dec
pop
addb
inc
arpl
pop
or
add
sub
fistl
jns
mov
rolb
call
adc
dec
inc
adc
push
loop
lods
mov
jl
and
add
jle
jg
shlb
sbb
ljmp
sti
fidivrl
cld
mov
test
or
add
add
mov
shrb
mov
cmp
sbb
sahf
or
divl
daa
mov
clc
pushf
lret
std
fmuls
xchg
and
jecxz
jp,pt
cmp
lds
push
je
sub
pop
push
mov
daa
xchg
xorl
xor
mov
add
push
in
out
mov
xchg
push
sbb
pop
pop
hlt
xor
sbb
fnsetpm(287
lock
repnz
in
cld
xchg
or
bound
jno
add
or
pop
and
mov
and
xor
cld
sub
popa
jge
push
and
xor
leave
out
mov
ja
mov
push
ror
push
adc
and
fadd
incl
sbb
dec
mov
shll
loope
out
jg
xorb
and
das
clc
insb
pop
mov
mov
lods
add
add
inc
mov
mov
sbb
inc
fimuls
mov
adc
adc
xchg
ror
add
jo
jbe
mulb
push
add
xor
mov
gs
mov
mov
mov
xlat
inc
test
fldl
pop
adc
and
out
xchg
xorl
outsb
jecxz
cmp
sbb
cmpsl
push
mov
dec
adc
jle
testb
nop
xchg
mov
adcb
inc
and
incl
insb
xchg
adc
movsl
jb
into
out
lock
dec
sub
pop
stos
xchg
cmp
dec
test
je
insb
aam
das
shlb
movsb
movsb
hlt
outsb
and
push
repz
sti
lcall
es
jno
adc
enter
mov
sbb
xchg
in
dec
les
repnz
les
aam
out
mov
loopne
cmp
imul
aaa
jno
dec
dec
inc
pop
fisubl
lds
ljmp
cmp
xchg
jno
cwtl
push
movsl
ljmp
pop
jp
jmp
jo
adc
pop
lea
dec
into
movsl
aam
lock
gs
or
in
movsl
mov
sub
ljmp
divb
shll
push
mov
cmpsl
cld
xchg
xor
sti
inc
adc
sub
scas
pop
in
scas
rcrb
cmc
movsl
lcall
dec
fsubs
mov
mov
flds
cmp
cmp
bound
repnz
rorl
mov
sarb
inc
xor
lcall
xor
or
fildll
lcall
into
cli
test
inc
or
pop
and
push
and
rclb
fimull
icebp
add
jbe
rolb
imul
xor
inc
xchg
out
loop
xchg
adc
movl
mov
push
bnd
enter
adc
lea
sbb
enter
or
jg
jnp
ljmp
pop
cmc
lahf
adc
inc
sbb
push
loope
stos
adc
or
pushf
mov
xchg
cmc
adc
mov
sub
push
minps
std
xlat
xchg
test
cld
pop
push
mov
insb
lock
cmp
push
or
pop
mov
hlt
adc
aam
aad
inc
sub
ss
or
ret
ja
mov
movsbl
jae
cli
lods
adc
enter
cli
mov
and
adcb
push
sub
jnp
push
shrl
and
pop
daa
or
call
mov
test
gs
adc
inc
push
fs
xchg
loop
cmp
mov
inc
push
ret
pop
dec
pop
lock
incl
inc
push
inc
repz
add
ret
outsl
push
test
inc
xor
dec
push
add
ret
mov
lahf
test
fcom
mov
imul
mov
adc
insl
cmp
sub
fsubrl
mov
lods
rorb
push
xchg
cwtl
cmp
subb
test
mov
into
ds
jmp
or
and
std
push
xchg
inc
sbb
scas
fmul
ret
or
lds
adc
shrl
xor
call
test
pop
or
xchg
into
mov
push
sub
clc
dec
decl
outsl
jnp
add
fstps
pusha
push
adc
sbb
lcall
nop
cmpsl
jae
ds
ret
les
xor
aam
inc
mov
add
push
in
lea
aam
jns
lahf
arpl
sub
je
mov
and
subl
rcrb
sub
mov
nop
dec
adc
and
mov
mov
push
daa
insb
xor
jp
fadds
fwait
mov
es
add
into
adc
loope
clc
fsts
cwtl
cmp
or
mov
lock
mov
cmp
imul
pushf
mov
inc
shlb
pop
movsb
or
insb
test
mov
xor
decl
cld
call
or
cmp
lahf
fiaddl
adcl
cld
test
adc
dec
outsl
pop
add
adc
add
cmp
jg
icebp
add
inc
jp
orl
bound
and
mov
ss
mov
jno
ret
call
int3
bnd
cmpl
clc
xchg
inc
cli
outsl
cmc
lret
aas
pop
mov
bound
xchg
cmpb
imul
cmpsl
push
sub
fimull
xchg
data16
cld
out
add
cltd
push
jnp
or
or
pop
xchg
js
push
dec
addr16
push
cld
lods
mov
or
arpl
jo
and
jle
ja
sbb
pop
rolb
mov
gs
add
sub
ss
mov
lea
sahf
add
mov
pop
lock
pop
dec
jge
mov
or
outsl
test
inc
inc
adc
sub
adc
add
fcmovb
in
jno
and
push
mov
insl
push
outsl
loop
jmp
cmp
insb
jg
lcall
mov
je
and
sti
mov
les
xchg
mov
jb
in
sub
xchg
mov
mov
enter
loop
ret
push
push
int3
dec
movsbl
or
gs
dec
sub
push
lret
mov
movsl
pop
cwtl
mov
subb
loope
mov
adcb
push
popf
cli
push
icebp
fistpl
adc
push
jo
addr16
pop
iret
out
pop
cmp
adc
lahf
mov
xchg
push
rcl
or
rolb
adc
out
cwtl
xchg
push
iret
dec
mov
shlb
adc
sbb
data16
cmpl
cltd
dec
cltd
loopne
mov
mov
inc
mov
push
dec
bswap
fs
decb
imul
int
adc
pusha
rorb
cmp
push
xor
pop
das
dec
insb
or
outsb
loope
push
cli
inc
dec
cmpsb
cmpsl
pushf
lahf
mov
dec
addr16
ds
test
cltd
jae
push
xor
pop
cld
out
sub
cltd
ret
mov
cmp
sbb
lcall
cltd
sub
cld
inc
push
dec
lds
or
inc
dec
jp
add
cmp
xchg
xor
adc
mov
push
popa
sti
push
sub
jae
es
lahf
jne
add
dec
mov
sarb
in
ss
push
ds
in
xor
dec
cli
add
jo
incl
add
push
xchg
jp
filds
mov
xor
jle
lea
inc
iret
cli
rcll
and
sti
mov
in
fnstsw
push
or
sub
test
mov
push
je
or
insl
cli
adc
adc
daa
inc
push
nop
jne
add
push
push
mov
or
xchg
lock
out
xor
push
xchg
or
stos
push
dec
cwtl
sub
and
pop
or
imul
je
pop
insb
in
cli
sbb
test
pop
stc
xor
sti
add
pusha
fsubs
ljmp
jp
js
cmpsb
arpl
push
icebp
xor
in
stos
dec
nop
in
mov
xchg
loopne
dec
test
and
xchg
xchg
pop
lock
push
pushf
movsb
dec
ss
ret
ljmp
adc
in
xchg
call
jge
xchg
push
rorl
inc
or
dec
lods
mov
clc
lds
pop
xchg
or
addr16
ret
fistl
lods
adc
mov
adc
ja
subb
pop
outsl
into
es
test
push
cli
cmp
rcrb
out
add
and
adc
repnz
in
jmp
jmp
add
je
mov
repnz
in
andl
clc
pop
orb
js
push
into
xchg
inc
mov
inc
add
enter
push
xchg
mov
mov
mov
xchg
loop
and
les
mov
or
adc
sub
aas
test
fistl
loopne
mov
int
xor
clc
inc
push
mov
js
mov
rcll
jb
pop
std
movsb
cmp
jnp
jl
in
incl
lret
pop
add
adc
subb
push
test
mov
sbb
xor
ljmp
adc
fnstsw
es
add
cmp
fs
pop
cs
dec
sarb
adc
shll
aad
jp
push
sbb
mov
xor
ficoms
push
ljmp
mov
data16
cmpsb
push
fmull
push
jg
jl
and
pop
pusha
bound
repz
adc
cld
push
pushl
lock
ss
xchg
stc
sbbl
or
fldl
stos
or
xor
mov
test
cld
sub
push
lcall
or
push
enter
jb
mov
or
xchg
jnp
adc
push
cmp
or
mov
jg
loopne
inc
xchg
out
stos
pusha
cmc
das
push
cmp
stos
mov
mov
adc
test
pop
lcall
fstpl
adc
push
xor
cmpb
add
sub
sub
sub
sarl
inc
mov
cmp
xchg
pop
mov
cmp
dec
fists
daa
or
addb
push
mov
loope
adc
stos
push
jge
jge
dec
test
pop
xchg
add
dec
or
js,pt
shrl
sub
test
adc
loop
inc
hlt
pop
mov
shl
fsub
lock
inc
sub
jmp
and
push
dec
mov
rorl
ja
sub
dec
push
push
xor
cmp
push
or
ljmp
push
mov
call
jo
or
fiaddl
and
aam
incb
push
imulb
inc
jecxz
scas
pop
add
sbb
sbb
lods
or
fcompl
sbb
cmp
adc
or
arpl
push
push
movsl
inc
cmp
clc
andl
lret
roll
mov
fdivs
adc
lcall
dec
out
mov
insb
data16
lahf
dec
pop
dec
sub
push
mov
xor
push
push
mov
add
lods
push
das
xor
sbbl
loop
stos
xchg
adc
inc
add
scas
pop
lods
mov
mov
sbb
push
inc
dec
dec
inc
and
pop
mov
insb
dec
sarl
clc
cmc
jb
test
add
lods
sub
lds
aad
mov
or
psubb
hlt
subl
mov
lahf
sbb
jmp
cs
inc
and
dec
push
outsl
fsubr
inc
push
push
cmpsl
les
jb
pop
push
ret
push
daa
loop
xor
jmp
movsl
pop
out
jb
adc
outsb
pop
or
jg
fadds
xor
sbb
in
pop
cmpsl
out
les
insl
clc
mov
sbb
and
test
mov
mov
mov
mov
xchg
xchg
shlb
or
adc
xchg
xorl
stos
rcrb
cli
pop
push
sub
xchg
daa
jbe
mov
shl
pusha
adc
mov
mov
jbe
and
repz
or
cmp
addb
or
insb
or
jo
repnz
fcomps
aaa
push
pop
pop
fs
mov
clc
mov
test
pop
sbb
lahf
ss
jp
pop
push
cltd
jp
and
lock
call
jecxz
mov
test
xchg
fwait
xchg
sahf
push
push
loopne
push
int3
inc
cmp
mov
test
movsb
mov
xor
add
cmp
cmp
fdivs
mov
test
out
dec
les
call
stc
sbb
dec
or
mov
std
aaa
into
inc
sbb
jbe
fisttps
lea
pop
mov
sub
orb
push
push
xor
mov
roll
push
pop
sub
and
lock
lock
mov
mov
arpl
pop
and
fs
inc
xchg
mov
in
movsb
int
mov
decl
and
inc
inc
mov
mov
xchg
movsl
jnp
popl
jns
sub
mov
xor
dec
aaa
cltd
aaa
or
push
mov
lods
mov
ljmp
dec
insb
xor
test
les
cli
addl
call
and
mov
mov
cmpsb
stc
lods
sbb
pop
sub
sti
in
loope
mov
addb
cmpsl
inc
mov
std
cmp
nop
xchg
or
std
outsl
orb
pusha
xrelease
sarb
jg
cld
addb
mov
push
sarb
xchg
add
jbe
inc
or
lret
add
cmc
adc
jno
mov
test
out
lock
pop
mov
inc
push
or
les
leave
xchg
sbb
ficompl
gs
cmp
lds
jp
insb
arpl
push
mov
add
subb
cmc
adc
cltd
pushf
sbb
cmp
cmpl
pusha
and
repnz
shlb
sub
xor
fsub
inc
loopne
pop
xchg
orb
loop
lock
loop
ds
mov
inc
enter
icebp
int3
and
push
ret
inc
add
add
ljmp
jmp
xor
inc
mov
pop
ret
stos
dec
movsb
enter
mov
call
imul
push
push
or
push
push
movsl
je
sbb
mov
mov
je
into
and
das
hlt
imul
pop
mov
mov
out
jl
sbb
or
add
test
adc
outsl
lods
and
stos
push
rcl
outsl
fwait
push
loopne
add
mov
aam
adcb
sbb
faddl
pop
ss
sbb
rcl
add
test
lds
in
in
repnz
xchg
call
jns
add
sub
shlb
mov
daa
and
add
mov
insb
dec
lret
jo
adc
adc
sub
pop
imul
imul
xor
jb
aad
lods
stos
jecxz
mov
into
mov
movsb
push
andl
divb
adc
and
lock
inc
dec
lret
gs
xchg
and
into
sahf
mov
mov
and
enter
mov
mov
mov
movsl
rclb
out
repnz
test
repnz
ja
xchg
jns
ret
add
inc
mov
sbb
loopne
cmpb
cmp
and
sbb
nop
and
jl
jne
push
popa
cs
push
leave
push
adc
adc
adc
inc
mov
jno
jb
or
orl
and
push
ljmp
ret
das
mov
xor
pop
inc
add
les
loopne
dec
call
loopne
loope
cwtl
push
pop
jg
lods
xor
rolb
sti
pop
shrl
test
outsl
push
out
cmp
ret
push
mov
rcl
pop
push
mov
jp
push
push
subb
ss
pop
cltd
inc
xor
dec
jns
aas
xor
push
lock
sbb
mov
and
xor
xorb
xchg
loopne
xchg
nop
and
xchg
out
clc
xor
fimull
test
inc
out
inc
push
mov
iret
popa
and
gs
push
add
scas
icebp
pop
inc
insl
jmp
mov
movsl
test
cmpsb
sbb
lock
das
lahf
lcall
pop
js
inc
mov
inc
ret
or
mov
imul
ja
sub
pop
scas
mov
and
aaa
sbb
sub
nop
mov
bound
call
mov
inc
mov
add
cmp
and
cmp
xchg
pop
movsb
push
mov
push
or
lret
addl
and
jp
fwait
mov
or
adc
gs
stos
outsb
aas
dec
and
push
pop
xchg
mov
inc
inc
rorl
fnstcw
add
and
addr16
dec
rolb
sub
jp
push
sub
jle
mov
inc
call
sbb
test
test
xchg
push
sbb
dec
xor
dec
andl
adc
lock
out
sti
jnp
scas
sbb
adc
adc
mov
dec
in
repz
rorl
scas
in
pop
das
enter
inc
fdivs
pop
xor
pushf
popa
xorb
pop
leave
movb
push
fwait
pushf
add
enter
or
loope
fisubl
out
ljmp
push
xchg
sub
sbb
push
shrb
and
xchg
fidivrs
xchg
insl
cmpsb
ficompl
push
mov
pop
enter
xlat
mov
pop
push
ret
xchg
shl
lods
loopne
mov
shlb
sub
ss
mov
sarl
test
stos
fiaddl
test
mov
jb
leave
shrl
and
xchg
jns
push
sbb
xorb
decl
nop
add
dec
loopne
pop
cmp
or
cmp
adc
jle
rcrl
cmpsb
push
mov
inc
and
shlb
or
add
shr
imul
inc
and
nop
mov
mov
sub
sar
outsb
hlt
loopne
jo
or
sbb
in
pop
in
outsl
sbbl
jbe
js
cmp
cs
push
sbb
xchg
sub
mov
loopne
js
xchg
in
pusha
add
add
mov
out
adc
lock
push
ror
sarb
mov
add
sub
sbb
shl
stos
lahf
xchg
and
ret
and
dec
mov
lea
add
mov
adc
xor
cmp
mov
adc
jmp
imulb
adc
push
pop
loope
mov
push
add
mov
xorb
mov
mov
sub
push
cmp
sub
mov
stos
lret
xchg
outsl
mov
jecxz
mov
ret
aaa
mov
gs
jmp
testl
cli
push
pop
add
jp
pop
pop
and
sub
test
adc
shlb
fcmovb
cmpsl
aas
xor
mov
mov
sbb
and
movsb
xchg
add
sbb
add
sub
test
pop
and
adcb
jb
dec
sbb
in
xor
add
dec
cmp
push
outsl
sub
add
pop
into
lahf
fs
adc
inc
mov
inc
sub
xorl
mov
mov
inc
jle
xchg
push
mov
scas
test
out
and
mov
in
insb
sub
sarb
and
outsb
pop
test
adc
xlat
adc
fistpll
jmp
js
lock
xchg
add
jbe
mov
pop
or
repnz
enter
test
mov
popa
in
adc
adc
lods
adc
push
add
movsl
inc
push
out
or
push
cs
mov
ret
jmp
das
call
mov
pusha
dec
mov
inc
fdivrs
cld
xchg
xchg
mov
push
add
or
cmc
mov
test
rol
aam
xchg
test
loop
adc
pop
cmp
push
outsl
arpl
test
out
test
adc
scas
or
fwait
cmc
das
pop
sub
add
daa
xchg
mov
mov
or
fcmovne
out
shlb
clc
mov
sbb
fidivrl
int3
mov
mov
dec
and
fcomp
xchg
cmp
pextrw
test
rolb
inc
cmpsl
sub
or
call
ljmp
in
and
dec
aaa
sbb
pop
in
jmp
imull
lods
jo
mov
data16
adc
inc
ficomps
insb
mov
mov
sbb
outsl
mov
fdiv
inc
jecxz
in
mov
adc
decl
and
dec
scas
pop
pop
jl
lahf
imul
orl
jnp
mov
cmp
push
jp
pop
into
sbb
add
and
scas
xor
sbb
jae
sahf
or
mov
jmp
test
xchg
jae
pop
popf
lea
scas
fs
pushf
mov
fxrstor
daa
mov
or
lds
ja
lret
xlat
addb
xor
rorl
xor
testl
and
sub
xorl
les
and
test
inc
mov
hlt
cvtps2pd
dec
pop
repnz
mov
push
loop
sbb
dec
int3
pop
in
inc
sub
int
pusha
push
faddl
mov
pop
inc
inc
movsl
js
fld
jge
fsubrl
add
push
mov
jmp
jg
test
ret
data16
jb
clc
sar
jno
rcll
pop
in
fisttps
push
shlb
xor
sub
inc
aas
test
push
data16
dec
call
inc
imul
jb
mov
jp
aad
enter
jge
in
js
xor
adc
test
cltd
into
mov
testl
jge
mov
inc
sbb
and
xchg
loopne
push
jne
adc
call
jno
adc
mull
stc
sub
and
rolb
and
scas
dec
push
mov
addr16
jne
cs
ret
or
fsubrp
lcall
and
into
scas
mov
inc
fistpll
jmp
adcl
lock
add
xor
jns
pop
push
movsb
adc
comiss
jns
icebp
subl
orb
ds
add
fwait
idivb
repnz
jge
jmp
sbb
test
cld
or
push
xchg
mov
adcb
fcoms
xchg
mov
out
fisttps
jg
out
inc
sbb
pushf
fstpt
iret
sbb
mov
pop
imul
pop
inc
mov
adc
js
push
enter
ss
pop
scas
lds
adc
push
jp
cmp
lods
insb
sbbb
jg
sub
mov
subl
mov
cmpsl
jle
xor
and
out
pusha
sbb
xchg
adc
mov
neg
cmp
xchg
mov
or
adc
in
xlat
cs
sbb
lret
and
movsl
js
aad
mov
push
movb
lea
push
loopne
testb
sbb
insb
scas
or
lret
xchg
and
mov
lret
mov
mov
dec
mov
pop
mov
push
rcrl
mov
cmpsl
adc
dec
pop
dec
movsb
sbb
pop
popa
addr16
mov
movsb
fdivl
mov
pop
xchg
lods
sbb
add
fwait
sub
cmpsl
mov
addr16
movsl
call
sahf
addb
pop
inc
in
inc
adc
leave
stos
jl
js
mov
xchg
flds
or
in
dec
roll
pop
adc
and
shr
rcrl
add
lds
and
icebp
jecxz
shlb
lret
dec
scas
mov
cmp
or
loope
popf
pop
and
mov
push
in
loopne
hlt
jecxz
inc
pop
xchg
ds
mov
inc
inc
inc
adcl
movsl
test
je
mov
inc
mov
fdivs
js
and
and
insb
cmp
jecxz
pop
cmp
fildl
mov
inc
cmpsl
in
jmp
ret
cmp
fisttps
aaa
lret
insl
adcl
stos
add
lods
inc
mov
xchg
lock
neg
dec
fmull
mov
dec
loop
into
popw
mov
dec
rcrb
push
fsqrt
push
mov
movsl
adc
xchg
mov
out
enter
clc
loop
loope
je
cmp
mov
mov
cmp
test
add
pop
add
daa
xor
int
es
jmp
push
xor
or
ds
es
sbbl
out
pusha
pushf
and
pop
imul
pop
push
loopne
test
jecxz
popf
rol
adc
sbb
pop
mov
cmp
or
mov
cmp
and
fwait
rcr
lcall
mov
test
or
repnz
and
cmp
test
push
icebp
xchg
xlat
in
lret
loopne
loope
fwait
push
sbb
rorb
xor
icebp
loopne
pop
out
xchg
insb
data16
mov
pusha
sbb
mov
fs
xchg
push
mov
xchg
ret
pop
mov
lret
mov
fbstp
fwait
pop
out
mov
stc
add
xor
orb
dec
jmp
mov
sbbb
xorl
dec
jle
pop
js
sbb
add
mov
adc
add
pop
push
jb
es
imul
pop
lret
pusha
lret
xor
das
inc
mov
dec
ljmp
scas
and
sub
push
or
mov
and
cltd
cmc
sbb
pop
dec
pushf
pop
xchg
mov
xchg
sbb
rol
cmp
pop
lcall
lcall
add
test
pop
into
test
hlt
arpl
mov
sbb
test
inc
xchg
push
aaa
ja
mov
and
outsl
xchg
nop
xchg
dec
jae
mov
ljmp
add
lret
mov
fldenv
inc
dec
icebp
push
lods
cmpl
sbb
mov
test
ja
test
movsl
ja
and
stc
mov
add
loop
das
cmp
push
mov
fcoms
testb
mov
add
jne
int3
rorl
sub
cli
rcll
push
enter
pop
lret
call
mov
cmpsb
push
xchg
xchg
xor
stos
jbe
mov
cli
pop
pop
cwtl
fmuls
xchg
xchg
es
movsw
fildl
inc
movsl
bound
push
arpl
test
or
mov
leave
add
xchg
sbb
test
addl
or
inc
lods
sarb
cmp
stc
les
popa
nop
dec
adc
xchg
and
mov
insl
outsb
aam
ja
mov
jl
jne
fmull
mov
int
sarb
mov
cwtl
stos
xchg
clc
sti
popf
movsl
xor
mov
and
xchg
cmp
mov
fs
pop
add
lahf
popa
jns
dec
dec
cmp
push
stos
mov
push
aaa
mov
and
and
xor
jo
mov
cli
jno
xchg
lea
xchg
iret
outsl
sub
push
sub
adc
insb
sub
roll
sbbl
cwtl
xchg
mov
out
lea
xchg
mov
mov
inc
imul
cmpsb
mov
pop
lods
aam
dec
out
loop
sbb
sahf
and
cs
addr16
fsubs
aaa
inc
mov
ret
or
stos
dec
cmp
lcall
xchg
adcb
ja
js
add
stc
stc
les
cmp
arpl
mov
mov
into
mov
push
xor
mov
sbb
or
loope
loopne
dec
pop
and
mov
sti
sbb
out
lock
jns
cli
jp
xor
jbe
inc
add
out
fdivs
pop
lea
and
cmpsl
rclb
mov
add
add
mov
mov
xor
or
xchg
jne
xchg
or
in
ljmp
popa
jo
sbb
aas
cmp
dec
mov
fnstenv
test
xchg
mov
movsb
ja
sarl
pop
sub
popf
or
xchg
jl
jmp
adc
xor
pop
sub
mov
adc
pop
test
das
movsl
pop
mov
iret
adc
adc
aam
imul
sbb
and
fwait
jg
add
mov
stos
xchg
push
cmp
xchg
mov
rcl
mov
loope
adc
in
es
sub
jg
hlt
das
mov
pushf
xlat
dec
push
lea
xor
sub
fsts
push
push
fcom
xor
or
shlb
and
inc
add
lds
sub
sub
xor
fidivl
inc
rol
in
mov
mov
sub
push
fildl
lods
push
add
mov
mov
aam
push
jecxz
adc
xchg
pop
test
hlt
mov
dec
inc
or
loope
inc
bound
icebp
mov
jge
dec
dec
push
out
xor
sub
mov
push
and
or
popa
sub
jp
pop
rcl
mov
loopne
push
testl
bound
std
sub
lea
loopne
push
ds
or
gs
in
add
xchg
rcll
push
mov
pop
je
xchg
cmpsl
xchg
push
fisttpll
lahf
and
in
jbe
jne
lock
rcrb
dec
adc
mov
ja
std
sbbb
mov
pop
aam
add
adc
mov
mov
mov
mov
jge
mov
imul
aas
test
ret
addl
mov
lods
cmpsl
sub
shl
adc
xor
lods
or
fucomp
jmp
pop
pop
stos
es
leave
daa
fwait
xor
imul
push
cs
pop
push
fsubs
or
stos
popf
mov
mov
mov
mov
loope,pn
sbb
cmc
push
jae
fisubrs
out
dec
mov
jnp
push
and
xchg
jle
xor
lcall
mov
das
dec
fcoms
aad
fs
sub
xchg
mov
scas
and
ret
fldt
adc
dec
mov
aad
dec
add
sbb
mov
pop
jmp
dec
fistpll
sbb
cmc
fwait
je
mov
mov
mov
in
xorb
adc
dec
cmpsb
loope
or
aam
inc
xchg
movsb
xchg
jnp
test
icebp
inc
xor
or
or
cmpsl
les
sbb
in
cmp
pop
or
inc
cmpsb
lret
pop
hlt
cmpsb
mov
lds
sbb
fsqrt
mov
push
add
cli
shlb
imul
int3
out
out
addr16
lock
in
mov
mov
jecxz
mov
sub
rorl
mov
push
sbb
sub
lret
inc
jp
fs
stos
cmp
mov
pop
aaa
xchg
aaa
in
mov
test
iret
inc
arpl
add
fdivr
rcl
push
pop
imul
mov
cmc
daa
stos
hlt
xchg
cmp
nop
push
or
movsb
pop
inc
ret
fwait
mov
cli
pop
cmp
pop
popf
mov
es
xlat
cld
movsl
add
add
cmp
lea
jle
loope
fs
lret
sub
scas
insb
mov
test
in
sub
add
sub
mov
push
lahf
ficoml
shr
ret
popa
xor
sbb
inc
stos
pop
imul
xor
pop
inc
loope
adc
jmp
nop
and
xchg
mov
jl
push
mov
loope
and
jne
mov
rorb
icebp
dec
jmp
out
out
add
es
mov
inc
or
cld
sbb
repz
jg
cmpsl
cmp
adc
push
lods
cwtl
repnz
mov
stos
insb
shll
test
cvtps2pd
test
add
imul
sub
add
pushf
loop,pt
subb
adc
stc
pop
ret
push
js
xchg
ret
jmp
loopne
out
and
sbb
push
mov
xor
adc
testl
and
jl
jo
inc
inc
push
dec
test
addr16
add
shl
out
outsl
adc
popf
xor
xchg
jno
imul
sub
jecxz
aam
js
ficompl
dec
clc
cmp
and
jge
adcb
stos
or
jns
mov
mov
in
add
nop
das
adc
adcl
xor
mov
lret
push
es
scas
sub
cli
sbb
scas
das
insb
int3
sub
xchg
jge
loope
mov
and
mov
clc
insl
mov
sbb
in
pop
bswap
add
fisubl
int
rcrb
pop
imul
gs
pop
mov
and
xor
jne
inc
cmpsb
aas
cmp
loop
mov
sbb
movsb
inc
popa
lods
pop
lea
jle
inc
cmc
clc
cmp
in
jmp
ss
outsl
dec
push
fbstp
movsb
dec
cs
jl
xor
rorb
cmp
dec
lret
sbb
inc
mov
inc
mov
pop
cmp
sub
test
insb
ja
push
flds
push
adc
sti
ljmp
or
roll
sbb
addr16
sbb
cmp
or
test
cvtps2pi
mov
lods
les
cld
xchg
test
push
xchg
aad
outsb
jge
lcall
mov
in
mov
push
cmpsl
in
mov
inc
mov
pop
lods
orl
add
jbe,pn
sub
jno
cmp
stos
push
jecxz
test
or
nop
jmp
vpabsd
mov
push
fwait
cmp
mov
out
mov
push
cwtl
inc
ljmp
mov
jo
mov
dec
add
sti
inc
test
mov
popa
daa
and
loopne
stos
dec
fstpl
insb
sub
out
mov
frstor
mov
enter
adc
lods
push
pop
stos
aam
add
adc
adc
lret
pop
xor
inc
jecxz
cmp
int3
mov
inc
ret
mov
xchg
cmpsl
mov
lods
test
mov
je
lret
cltd
sub
dec
inc
ret
movsl
jb
cwtl
and
dec
int3
shl
mov
call
adc
mov
jecxz
pop
pusha
and
xchg
movsl
cmp
aaa
cmpsl
jb
inc
ljmp
push
inc
roll
fucomip
xchg
shlb
mov
daa
stc
filds
mov
cmpb
or
out
out
test
clc
mov
fstpl
or
ret
pop
pop
stc
jl
rorb
outsb
inc
pop
cli
pop
inc
insl
mov
add
or
adc
pop
std
sbb
sbb
xchg
and
xlat
mov
pop
cmpsb
mov
inc
popf
inc
andl
add
or
add
or
fucom
aas
jnp
sub
mov
dec
test
addr16
and
int
jnp
outsl
mov
in
loope
pop
inc
pop
mov
sbb
adc
xchg
inc
inc
jnp
in
or
scas
cmpl
iret
in
cld
add
pop
and
lds
loope
fisttpl
imul
adcb
xchg
int
es
xchg
xchg
push
fwait
ljmp
push
ja
mov
inc
cmpsl
mov
js
bound
mov
push
add
pop
loop
fisttpl
push
mov
add
jg
fcoms
stos
and
insb
dec
es
movsb
add
xchg
or
or
cmp
cwtl
popf
mov
in
movsb
icebp
bound
cmp
pop
adc
roll
movsl
jle
or
gs
sbb
sarb
clc
adc
mov
and
pushf
je
and
sub
ret
jnp
sub
subl
ret
cmpsb
sahf
pusha
pop
ss
inc
sub
mov
dec
loope
ret
sbb
push
pop
xor
lcall
or
or
push
test
jmp
out
mov
adc
or
inc
xchg
dec
loope
les
mov
push
popf
mov
cwtl
or
and
inc
push
ret
lret
mov
testb
outsl
fdivl
mov
shlb
mov
xor
ljmp
xor
pop
aaa
sub
subl
hlt
cmpb
mov
push
or
jno
lahf
cli
cmp
mov
shl
ret
jge
inc
faddl
jmp
xchg
sbb
fs
jp
btr
jl
js
leave
sahf
sbb
fidivs
ret
cmp
fndisi(8087
pop
js
xchg
push
out
or
adc
dec
dec
mov
xchg
cmpb
inc
insl
lea
push
add
mov
mov
in
lret
xchg
test
pusha
push
add
lock
mov
pushf
mov
xchg
lahf
mov
and
insl
cmp
sbb
test
adc
mov
cwtl
sub
repz
sarl
rorl
cmp
sbb
fadds
add
mov
jecxz
or
and
leave
add
jne,pt
add
jl
mov
and
js
lock
push
or
imul
or
stos
dec
loope
push
inc
sub
sahf
add
push
shl
push
xchg
ficoms
cmp
frstor
imul
push
movsb
out
mov
addr16
aad
rep
xchg
inc
jge
nop
repz
adc
pop
adc
roll
mov
ljmp
mov
dec
leave
aas
fucomp
adc
movsl
aad
les
lock
dec
repz
mov
je
je
testl
cwtl
movsb
jae
cmpl
mov
sbb
loopne
pop
das
jae
popa
adc
mov
mov
dec
lds
push
popa
mov
loopne
mov
add
int
jmp
dec
jno
xor
mov
jge
arpl
mov
fisttpll
xchg
in
xchg
dec
testl
jmp
jmp
fwait
es
movsl
jecxz
pop
push
dec
mov
sbb
xor
jg
mov
dec
fst
add
adc
lods
prefetch
aaa
xchg
es
add
cmpl
push
in
ja
mov
inc
jns
cmp
test
pop
push
jns
push
or
lret
ret
movsl
ljmp
xor
loopne
cmp
mov
push
ss
push
popa
jno
and
cltd
je
cmpsb
fucompp
shll
pop
jge
mov
jp
lock
xlat
int
jne
dec
mov
or
cltd
cmpsl
in
iret
repz
pop
push
pop
gs
and
outsb
and
fs
jb
cwtl
and
dec
jmp
and
scas
push
clc
dec
popa
rorl
js
in
cmpsl
pusha
mov
mov
pop
dec
mov
push
sbb
adc
add
cmp
out
out
cmpsl
xchg
or
push
and
addr16
aas
loope
sti
or
mov
inc
dec
or
mov
mov
daa
inc
inc
fistpll
bound
icebp
dec
test
test
cli
pusha
jl
ret
push
mov
je
or
or
mov
sub
pop
lock
in
add
or
gs
shr
rclb
cwtl
cmc
ret
cli
cli
sbb
popf
je
and
jl
push
or
sub
mov
pop
movsb
aaa
cmpsl
loop
iret
add
cmpsl
test
es
insb
cmp
js
mov
lret
ret
scas
loop
fstl
pop
and
cmp
inc
xsavec
jg
jbe
sbb
or
loop
or
xlat
test
xor
pop
test
cltd
xchg
pop
scas
xchg
insb
inc
test
stos
push
cmp
test
pop
jbe
push
mov
dec
adc
int
xchg
jo
jp
and
pop
mov
dec
jmp
daa
test
adc
xchg
inc
jl
fildl
mov
jecxz
or
lea
lea
pop
inc
xchg
inc
add
dec
or
cld
add
xlat
jno
cwtl
mov
notl
pop
pusha
xor
jp
fdivrs
lods
add
ret
fldl
icebp
and
mov
mov
xchg
movsb
pop
jne
sbb
std
xchg
into
aas
les
sbb
pusha
sbb
mov
rolb
push
xlat
adc
push
fmuls
aas
pop
pop
insb
ds
dec
stc
cmc
sbb
add
and
add
pop
mov
shll
hlt
xchg
bound
pushf
pop
jno
lret
mov
push
sbb
pop
jo
mov
cltd
push
sbb
cmpsb
push
ljmp
inc
cmp
mov
lods
mov
dec
adc
mov
mov
and
xchg
push
pop
stc
cmp
cmp
scas
add
sub
dec
bound
lret
dec
xchg
or
add
mov
in
jge
jp
cltd
rolb
add
xor
sbb
mov
mov
or
shl
and
ret
or
mov
fdivrl
addr16
rorl
lea
cmp
out
daa
pop
push
or
clc
push
pop
push
icebp
dec
pop
mov
or
mov
lret
add
sbb
nop
std
lds
xchg
icebp
stos
filds
push
or
push
xchg
call
mov
mov
repz
mov
out
test
push
insb
jbe
xor
xor
fiadds
pop
mov
or
ljmp
int
ficoms
mov
cmp
leave
xchg
sahf
add
push
popf
sbb
roll
ret
mov
mov
dec
sub
adc
lock
cwtl
inc
jb
stos
in
xor
jbe
adc
cmp
or
int3
mov
addl
cld
mov
mov
fisttpll
hlt
mov
imul
pop
rdmsr
stos
out
ffree
cmc
push
jecxz
sti
cmp
mov
mov
movl
filds
jns
cmp
or
cmpsb
mov
hlt
adc
pop
mov
inc
daa
imul
mov
xchg
popa
add
mov
mov
jne
inc
in
pop
ja
add
add
sub
movsl
pop
das
aam
in
sarb
xchg
call
pop
aaa
cmc
push
xor
or
adc
jne
inc
and
inc
lock
notb
and
mov
cmp
dec
bound
ret
imul
xlat
insl
sbbb
cmp
sti
cmp
icebp
or
cmp
dec
mov
adc
push
mov
inc
xor
mov
sbb
adc
scas
and
lods
dec
mov
sbbb
lret
ds
and
ss
out
les
insl
ss
sbb
mull
test
ret
sbb
inc
inc
movsb
scas
stos
push
and
inc
sbb
arpl
mov
and
push
inc
ljmp
sbb
xor
fistl
test
outsb
pop
xchg
push
mov
inc
filds
aaa
xchg
lock
ss
pusha
in
popa
jo
sub
ljmp
adc
jnp
mov
sbbb
mov
push
sbb
jecxz
stc
xor
rcll
insl
add
and
jg
out
and
sahf
dec
lods
xchg
shll
pop
mov
jnp
mov
or
inc
mov
cmp
cmp
pop
jae
mov
push
inc
jno
shr
cmp
aaa
out
or
outsl
shrb
rorb
mov
adc
ret
cmp
jp
push
mov
movsb
loopne
pop
jo
push
jmp
cs
js
mov
shrb
stos
shrb
js
bts
mov
mov
jl
xlat
sti
pop
adc
and
test
dec
pop
movsl
pop
loope
pop
inc
clc
loop
pop
and
insb
jl
xor
sub
lds
inc
lret
mov
add
or
mov
inc
test
daa
ja
rcrb
inc
mov
popf
xchg
dec
push
mov
jmp
pop
fcmovne
sti
sbb
les
mov
jp
stc
mov
stos
push
fdivl
sbb
xor
incl
mov
stos
ja
add
inc
mov
adc
rorl
lret
jp
pushf
push
movsb
mov
pop
insl
dec
sbb
push
adc
xchg
dec
sbb
rolb
add
mov
add
mov
pop
pop
add
cli
or
cmp
xchg
aam
sub
lea
sbb
sbb
lea
mov
or
scas
and
adc
rol
mov
imul
mov
mov
pop
add
or
jmp
add
daa
sbb
roll
or
jns
shll
and
mov
js
dec
mov
dec
cwtl
mov
sbbb
and
jecxz
cmp
mov
mov
mov
test
push
mov
add
push
fadds
and
cmp
repnz
and
sub
lcall
xor
mov
shrb
inc
arpl
aas
jp
stos
push
jl
or
add
mov
push
mov
loop
loopne
dec
inc
mov
rorb
inc
loopne
jno
ljmp
jb
xchg
adc
mov
adc
xchg
sbb
xor
xchg
mov
sub
sbb
fisubrs
gs
ljmp
sub
push
inc
sbb
hlt
pop
lea
sbb
pushfw
dec
jbe
test
test
sbb
nop
lret
mov
cwtl
mov
sbb
xor
js
fs
mov
test
jne
js
fnstsw
inc
sub
es
cmpsl
pop
xchg
sbb
inc
dec
mov
fs
lea
mov
or
or
mov
cli
popa
sbb
ret
cli
int3
cmpl
xor
insb
lods
pop
lcall
lahf
mov
push
pop
adc
pop
sub
ljmp
jbe
inc
cld
adc
arpl
fiaddl
and
add
mov
in
adc
icebp
repz
int
sbb
sbb
xor
adc
test
cmc
mov
jbe
jp
rcll
sti
out
dec
or
pusha
or
xchg
cld
mov
adc
sub
lcall
pushf
push
das
xorb
add
cld
dec
and
mov
shrl
lods
popa
inc
and
mov
mov
mov
mov
vmovq
sub
add
add
mov
cmp
lock
pop
xchg
xor
jmp
xor
mov
lea
inc
fsub
sbbl
loopne
fiadds
stos
testl
mov
cs
loope
push
iret
js
mov
sbb
movsl
cli
add
cmc
mov
inc
inc
out
add
enter
andl
xchg
lods
mov
inc
xchg
push
xlat
leave
inc
and
fisttpl
popa
mov
sbb
pop
sar
mov
mov
ss
dec
dec
push
cmp
cmp
orl
addb
mov
add
mov
jmp
cmp
lret
ret
xchg
mov
add
push
mov
das
icebp
lods
subb
lahf
jne
mov
cltd
lock
test
xchg
aaa
loope
jmp
sbb
sub
es
cld
and
adc
in
pmulhuw
out
push
cmp
daa
mov
jge
add
icebp
push
call
jb
add
fisttpl
or
push
js
mov
rorb
cmp
ljmp
jae
daa
xor
xor
mov
jp
jle
ljmp
jge
sbbb
pop
ljmp
xchg
mov
pop
clc
jo
lock
sbb
xor
inc
enter
dec
mov
push
out
pop
and
cmpsb
cmpsl
jge
pop
sub
mov
mov
mov
mov
mov
dec
pop
sub
mov
lret
icebp
into
push
pop
cltd
mov
inc
adc
fnstenv
dec
pop
or
mov
sub
mov
cmpsl
loope
loop
adc
dec
fstpl
mov
dec
mov
xchg
push
lcall
mov
cmpsl
mov
pop
add
iret
inc
push
sbb
push
jno
xor
ret
test
fistpll
adc
pop
aas
hlt
js
push
sub
adc
insb
jbe
push
jecxz
out
pop
outsl
shll
push
add
loope
cmpsl
sbb
pop
mov
cmp
imul
stc
xor
hlt
clc
or
hlt
aaa
mov
sbb
or
sbb
cli
insl
and
mov
mov
stc
and
rorb
cmp
xor
push
jmp
repz
dec
stos
xchg
jmp
jno
jle
cmp
cmp
push
andb
lea
jmp
test
loop
cmpsl
shrb
xchg
lods
mov
sbbb
mull
sub
sub
add
jbe
mov
jl
xor
push
inc
mov
mov
inc
xchg
push
xchg
jnp
jno
xchg
mov
hlt
loope
fildl
in
outsl
pop
pop
mov
cwtl
ja
scas
xchg
insl
hlt
ret
in
cmpsl
out
xchg
data16
mov
mov
pmaddwd
adc
sbbl
ja
mov
aam
pop
add
pushl
shrb
sub
lock
cmp
lock
aam
arpl
test
jbe
pop
or
and
inc
call
lret
mov
pop
lock
into
mov
lods
rcll
cmpl
in
xor
gs
mov
aas
mov
mov
xchg
mov
xchg
mov
dec
movq
pop
and
pop
and
inc
and
push
ds
xor
pop
mov
cmp
idivb
push
fmul
xchg
jmp
pop
xchg
mov
iret
pop
push
jo
in
xchg
test
jge
popf
int3
cmp
loop
mov
pop
pushf
cmp
aam
push
js
cld
mov
andb
bound
mov
cmpsl
push
fyl2x
cmp
vmread
adc
mov
cmp
xor
fsts
nop
xchg
adc
aaa
add
or
mov
mov
test
xchg
fiadds
test
in
xchg
xor
std
jo
std
mov
and
rol
push
clc
movsb
into
mov
out
sub
pop
fnstenv
dec
jnp
test
aam
aaa
and
inc
mov
sti
pop
into
mov
rclb
xchg
xchg
dec
aam
mov
or
lds
imul
add
jp
and
dec
ret
test
mov
lods
sub
sahf
fiadds
je
fsubl
or
sub
dec
mov
into
cmpsl
push
sbb
sbb
clc
sub
nop
mov
push
mov
int
dec
data16
pop
das
sahf
test
push
sbb
xchg
mov
loopne
ret
pop
mov
bound
jns
pop
inc
mov
in
out
bound
je
ret
cmp
pop
fisubrl
push
aad
ds
xlat
jo
clc
lock
push
sub
js
xchg
and
out
pop
fcomps
jae
icebp
inc
mov
mov
push
xchg
pop
xbegin
int3
sbb
orb
sbb
push
in
xorl
cmp
push
or
int3
or
enter
aad
in
sbb
testb
pop
dec
lcall
rorb
xchg
sbb
jecxz
ret
mov
and
testb
test
mov
in
adc
std
dec
mov
rorl
pop
cmpsl
int
addr16
sbb
add
inc
hlt
mov
push
mov
push
lock
sbb
addb
shlb
xlat
add
cmp
mov
mov
lret
xchg
in
xchg
inc
outsb
cmp
inc
repz
loope
xchg
mov
stos
push
arpl
leave
jbe
ljmp
mov
ret
or
and
outsl
mov
fstpl
sahf
adc
rclb
push
mov
lds
cmp
leave
loope
jmp
cmp
xchg
mov
lea
push
sahf
cli
sub
mov
lods
out
dec
scas
add
push
jbe
jmp
cli
inc
dec
and
pop
in
bound
mov
or
xor
or
jge
loopne
jmp
aas
in
lock
mov
mov
pop
xchg
iret
push
lock
push
out
mov
cmpsl
insl
hlt
sarb
sub
and
in
insb
stos
inc
in
add
push
popf
jbe
cmp
push
icebp
push
push
repz
and
sbb
mov
data16
cld
scas
test
sbbb
in
outsb
mov
mov
xchg
mov
mov
out
jle
or
xchg
xchg
push
adc
leave
dec
push
pop
mov
les
scas
std
push
gs
lods
dec
pop
lahf
cmp
rol
pushf
bound
ja
fcmovnu
pusha
and
mov
popa
pop
repz
sbb
fs
xchg
dec
sbb
pop
cmp
mov
ljmp
aad
jmp
ret
movsl
adcb
jmp
mov
mov
and
shll
cmp
sbb
loope
jle
jbe
sub
xor
push
testl
bound
mov
xchg
call
cs
xor
and
add
mov
xchg
cmpsl
jno
mov
int3
imul
jmp
inc
sub
jno
clc
sub
add
jmp
rcrb
adc
repnz
lahf
dec
movsb
repz
push
aas
pop
fcompl
push
movsb
push
or
and
cld
add
push
cld
stos
jecxz
xchg
or
mov
insb
push
pop
lock
rcr
push
loope
mov
cmp
sub
addr16
mov
push
mov
jg
pop
inc
in
cli
insl
xor
inc
je
mov
mov
jmp
xor
sub
insl
mov
xchg
or
or
pop
popa
xchg
lods
leave
jmp
cmp
push
scas
fwait
popa
sbb
push
rcll
xchg
lea
pop
cmpsl
imul
mov
xchg
and
jle
pop
cmc
mov
lods
sahf
insb
loop
lds
push
pop
jb
mov
mov
or
xchg
int3
loope
pop
push
cmp
stos
lods
and
sbb
les
les
push
pop
sbb
jl
push
jae
and
in
mov
push
push
shlb
push
pusha
mov
fiaddl
jp
inc
pop
iret
cmpsb
cmpsb
sbb
add
shlb
cmpb
imul
outsb
cltd
jnp
xlat
lods
xorb
lret
mov
je
movb
adc
clc
ds
mov
bndstx
fldcw
nop
jne
mov
inc
pop
das
pop
cmp
cwtl
test
dec
jge
push
fisttpll
out
xor
lcall
aas
cmc
or
inc
and
inc
xchg
push
or
gs
pop
repnz
add
or
jne
inc
pop
aam
flds
fs
mov
pop
mov
lea
dec
inc
loop
outsb
cmp
fisttps
clc
insb
mov
pusha
jmp
add
pop
mov
inc
cmc
cmp
push
cltd
pop
jns
fcmovb
lods
push
shlb
adc
or
fdivl
jecxz
fimull
push
sbb
insb
adc
mov
syscall
pop
inc
cmp
adc
iret
fs
push
lahf
mov
adc
mov
lods
mov
pop
sub
add
fidivrl
test
cmp
shll
push
gs
sbb
xchg
inc
cmp
push
gs
and
lock
jo
lock
jo
cmp
scas
movb
push
mov
or
movsl
lock
and
cld
into
out
jno
sahf
and
pop
dec
sbb
mov
xor
fisttpl
sbb
sbb
scas
clc
in
jmp
xor
mov
mov
push
roll
jb
or
sub
mul
sub
inc
jne
push
mov
lock
sub
sbb
cmp
jnp
push
pushf
mov
mov
and
les
sub
movsb
adc
inc
sbb
xor
jle
test
mov
addr16
sbb
lcall
push
sub
hlt
mov
push
adc
dec
scas
jo
jp
inc
sub
daa
push
hlt
nop
nop
or
xlat
push
add
add
push
xchg
es
ds
adc
loope
jle
int
rcl
popl
push
add
sbbb
cmpsl
scas
mov
mov
fimull
adcl
push
nop
cmp
adc
je
cmp
and
adc
add
lods
cmp
jb
icebp
adc
stos
iret
jbe
roll
rcrl
ljmp
loopne
add
push
add
mov
cmp
inc
addb
inc
jle
hlt
test
lea
mov
rolb
aas
pop
inc
subb
lahf
jbe
add
cwtl
mov
jb
xor
test
mov
fcomps
jns
shlb
mov
jnp
lahf
lds
mov
das
pop
cmp
push
out
mov
adc
push
xchg
adc
pusha
and
xchg
rol
lret
pop
sub
sub
push
rorb
push
popa
scas
lahf
test
aam
add
je
js
pop
jg
sbb
sbb
or
or
add
ret
inc
in
xchg
lods
loope
scas
insl
xchg
mov
ljmp
xor
rolb
mov
xor
jb
out
aas
push
sbb
dec
loop
xor
out
sbb
xchg
test
rol
cmpsl
aad
fcompl
dec
and
sub
cli
pop
sub
inc
inc
sub
inc
inc
sbb
add
lods
loopne
test
sub
adc
ja
mov
push
adc
mov
jmp
jo
jp
dec
ret
mov
sbb
out
movsb
ljmp
add
movsl
sub
scas
rcrl
sbb
adc
add
scas
in
xlat
push
mov
jb
and
clc
cwtl
push
or
mov
test
cmpsb
test
mov
std
sahf
jp
and
int3
and
jbe
jmp
outsl
xchg
ja
out
xchg
shl
mov
jne
inc
inc
xor
stos
inc
xchg
mov
jne
les
out
ds
dec
xchg
dec
mov
and
push
add
mov
and
repnz
arpl
push
inc
adc
fdiv
inc
mov
adc
pop
rol
jbe
cmp
push
and
in
push
loop
andb
or
inc
adc
ficompl
jl
popf
fdivrs
or
js
or
and
jae
ficoml
std
vpmaddwd
stos
add
stos
fxtract
test
add
lea
in
sbbb
icebp
mov
add
rorb
rolb
add
lock
xor
push
dec
mov
lods
push
stos
call
mov
jmp
push
shlb
ds
adc
mov
jno
dec
xor
xchg
push
cli
and
sbb
imul
cmc
inc
adcl
sahf
mov
inc
xor
in
cld
inc
push
lahf
mov
in
xlat
insl
mov
push
andl
sub
xchg
mov
mov
xchg
in
jnp
daa
cltd
mov
into
sbb
rcll
or
addps
pusha
ret
push
jg
mov
and
lock
inc
cmp
adc
int3
imul
jo
int
adc
adc
add
add
stos
sbb
daa
subl
jecxz
gs
xchg
adc
inc
sub
mov
mov
roll
xchg
call
xor
dec
sub
cmp
ljmp
and
pop
cmp
subl
pop
xlat
push
add
xor
add
jmp
outsb
mov
popa
stos
mov
jp
rorl
sahf
mov
fs
rolb
pushl
cmpsb
fstl
mov
pop
jno
dec
shlb
xor
aad
inc
lea
mov
icebp
arpl
jge
adc
inc
fdivr
adc
inc
sbb
and
cli
int3
adc
or
xor
mov
add
add
ljmp
je
stos
and
pop
inc
cmp
sub
inc
mov
sub
dec
cmp
popa
bound
xchg
mov
sub
scas
mov
mov
xor
sub
mov
test
fcomps
push
fistpll
popf
out
ret
popf
sub
or
dec
sbb
out
cwtl
adc
out
add
pop
aaa
into
shr
clc
pop
add
pop
lock
dec
xor
mov
loop
cmp
ja
sub
and
cltd
shll
lds
ljmp
xchg
jecxz
push
rorb
std
fdivrs
clc
dec
dec
insl
dec
mov
sbbl
dec
push
push
ljmp
rorb
sub
push
or
out
pop
ss
insl
popf
mov
mov
arpl
fldcw
inc
mov
add
das
push
push
les
mov
push
ret
sub
icebp
xchg
imull
and
push
les
sbb
testb
add
sbb
push
add
jle
loop
jo
or
lods
movsb
lods
jge
inc
jmp
xor
icebp
xor
test
push
push
jno
int
jnp
into
or
and
rolb
roll
mov
clc
jo
ret
push
lods
sbb
push
lahf
inc
sbb
jp
jno
fwait
shlb
add
pop
push
dec
scas
or
lds
xchg
push
es
insb
cmpsl
fstpl
sub
ljmp
je
lock
push
rorb
popf
xchg
lahf
dec
cmp
ret
ds
mov
ss
stc
push
push
push
pop
outsb
sbb
stos
rcrl
adc
dec
sbb
push
pop
or
les
vmovupd
and
xor
aaa
sub
fnsave
test
fistl
push
mov
sub
cmpsl
add
or
test
mov
outsb
xor
mov
imul
mov
fisubrl
je
xchg
jae
adc
jnp
mov
iret
push
add
enter
xchg
rolb
jecxz
movsb
aad
repnz
test
push
mov
jbe
aas
subl
mov
add
das
je
and
les
data16
rol
mov
xor
sub
jecxz
enter
les
rcl
jns
jle
shrl
sbb
pusha
push
xor
cmp
daa
lock
jns
aas
imul
inc
imul
jmp
jge
push
pop
bound
cmpsb
add
aas
sub
enter
data16
cmp
aad
test
daa
int3
das
inc
les
add
adc
lds
push
push
cmp
ret
cs
adc
sbb
ljmp
repz
xor
popa
call
add
xor
pop
dec
rcll
leave
or
iret
mov
sbb
dec
je
sub
loope
in
dec
or
jne
andb
mov
push
cmpsb
jmp
out
repnz
psubsw
movl
data16
icebp
push
jo
cmpsl
loopne
sbb
pusha
aad
sbb
subl
daa
jnp
xor
cmp
dec
cmp
or
dec
mov
ret
and
jne
scas
loopne
mov
xor
mov
dec
inc
movq
ss
and
inc
xor
sbb
pusha
scas
sti
dec
or
hlt
jbe
adc
cmp
shr
jno
and
enter
inc
xor
adc
std
xchg
add
pop
mov
out
or
dec
imul
pusha
jo
enter
dec
jmp
mov
pop
loopne
popf
and
add
push
lret
sub
push
cmp
movsb
xor
repnz
adc
enter
sub
adc
call
mov
sub
lods
xchg
cmp
in
jecxz
push
sbb
jmp
adc
mov
push
mov
adc
inc
adc
jae
mov
ret
and
dec
add
jo
pop
pop
push
mov
cmp
mov
add
cmp
js
inc
sbb
pop
mov
lods
cmp
into
mov
adc
pop
ja
mov
outsb
mov
inc
loopne
add
cld
and
das
pop
pusha
inc
outsb
add
inc
pop
push
push
fisttpll
pop
adc
xchg
xlat
sub
sbb
mov
aaa
lods
call
inc
pushf
xlat
mov
and
pop
bound
icebp
cmpsl
inc
sbb
jp
outsl
and
ret
adc
outsb
pop
fnstsw
xlat
inc
sbb
mov
pop
mov
pop
sub
ss
icebp
add
jmp
cli
sub
xchg
dec
js
lods
test
scas
cmp
imul
or
xor
jbe
in
pop
fs
or
test
jg
mov
cmp
push
loope
adcb
fwait
mov
and
push
inc
and
jp
sar
movsl
mov
inc
aas
sbb
push
lds
cwtl
loop
adcl
test
aas
sub
mov
or
and
inc
fs
out
xor
frstor
ret
test
jecxz
sub
cs
addr16
xchg
js
test
ret
adc
andb
cltd
push
pop
xchg
push
fdivrs
pop
mov
icebp
ljmp
jecxz
sbb
cmpsl
mov
cmp
add
rolb
bound
adc
shll
andl
je
movb
mov
cltd
jge
pop
clc
adc
pop
dec
loop
inc
out
xor
xchg
aas
sub
add
mov
stos
outsl
xlat
xor
jge
cmp
xchg
stos
es
push
cmp
jecxz
xchg
push
stos
fwait
adc
push
pusha
lret
icebp
shrb
scas
dec
cmp
and
loope
add
outsb
mov
movsl
inc
imul
mov
nop
xor
sub
pusha
and
imul
lahf
arpl
or
mov
push
dec
lret
inc
push
int3
shll
in
icebp
pop
imul
mov
inc
loopne
or
in
pop
int3
and
scas
push
mov
loopne
cwtl
cmp
insl
and
mov
shl
popf
aas
jp
aaa
das
ret
mov
xchg
bswap
decl
mov
sbb
pusha
push
loop
push
jmp
jp
sti
clc
movsb
dec
add
sbbl
lods
inc
or
int3
add
cs
lods
push
or
add
push
mulb
mov
dec
mov
adc
stos
dec
mov
cs
sub
lea
dec
mov
jle
shrl
dec
cs
pusha
leave
or
sub
fcomps
push
mov
sbb
outsl
dec
mov
insb
add
imul
std
movb
das
mov
mov
and
shr
ret
enter
push
jp
push
roll
js
pop
scas
mov
mov
rcrb
aas
clc
shlb
out
or
aam
out
xchg
dec
lods
pop
cmpsb
scas
add
xor
cmp
jle
or
pop
mov
add
push
ja
sbb
dec
add
pop
adc
adc
bound
fdiv
mov
jle
pop
adc
cmp
adc
jo
repnz
mov
sub
test
aaa
aas
cmc
iret
fcom
adc
dec
push
pop
xchg
inc
ds
mov
in
mov
lock
jmp
stos
mov
xchg
addr16
nop
rcrl
dec
cmpsl
iret
ror
cmpsl
inc
imul
les
stc
std
and
mov
mov
jne
into
cmp
xchg
add
lods
popa
jp
sbb
xorb
xchg
sti
mov
call
scas
or
cltd
and
out
gs
or
sub
mov
xchg
ja
test
int3
inc
add
inc
pushf
std
repz
ret
daa
mov
loope
cli
int3
loope
or
push
mov
daa
cmp
xor
int
mov
in
mov
xor
xor
xchg
sbb
lods
jle
cmpsl
mov
sbb
shlb
dec
jae
xchg
mov
loopne
cmp
shl
ret
xor
pop
rolb
aad
and
ss
imul
pop
mov
daa
dec
ljmp
js
xor
mov
cmp
mov
xor
sbb
cltd
sbb
jno
test
lds
jae
leave
add
rcrl
cmp
cmc
adc
das
mov
sbb
and
or
or
dec
xchg
or
cmpsl
rclb
outsl
dec
or
ljmp
inc
sbb
mov
mov
les
cmp
mov
rcll
sub
jae
movsb
and
dec
adc
mov
jb
out
shrb
add
enter
push
sub
sahf
enter
ljmp
jmp
pop
mov
add
or
dec
fstpl
xchg
cs
adc
mov
and
inc
adc
jp
shrl
pusha
test
sub
adc
stos
adc
push
adc
sub
and
pop
adc
in
mov
add
adc
popa
xor
pop
xor
rcrl
jnp
inc
xor
and
cmp
ret
inc
test
pop
jge
mov
cltd
cmp
mov
xchg
inc
dec
std
js
pop
sar
dec
sub
ret
push
loope
daa
xchg
pop
pop
lea
mov
jae
push
and
xlat
jo
ret
dec
or
add
out
pop
push
in
test
and
shrb
lcall
mov
enter
push
pusha
push
cmp
imul
mov
lahf
mov
roll
pop
mov
ss
jae
and
push
aaa
mov
xchg
jp
shrb
push
jo
push
iret
inc
push
xor
jp
sub
fistpll
rcrl
scas
add
out
dec
xchg
xchg
testb
imul
mov
and
jl
imul
mov
bound
xchg
or
ret
divl
cmpsb
dec
dec
add
cmpsl
mov
or
xorl
je
adc
mov
push
jno
fnstsw
sbb
pop
or
push
imul
pop
mov
loopne
xchg
fnsave
inc
sbb
js
adc
lcall
pop
mov
loop
mov
ja
sub
add
pop
pop
ret
xchg
xchg
enter
push
nop
and
push
dec
dec
out
inc
pop
scas
dec
test
dec
push
loop
and
sbb
cmp
int
mov
ljmp
sbb
sbb
add
mov
loop
and
jne
aad
xor
stc
sub
mov
inc
push
fidivrl
fldl
xchg
jns
push
enter
mov
inc
mov
mov
out
xor
fstl
jo
pusha
cmp
or
hlt
inc
mov
into
jns
sbb
lods
adc
add
pop
jne
test
imul
jae
sbb
cmp
xor
cs
test
cmpsb
pop
lods
shll
popa
ret
lds
sub
add
mov
xor
clc
enter
out
loope
xlat
movsb
dec
sub
pop
arpl
mov
mov
into
push
cld
dec
stc
in
cmp
in
xchg
bt
jle
dec
sbbl
aas
inc
push
bound
outsl
scas
movsb
and
dec
adc
ljmp
outsb
xlat
jp
mov
and
push
int3
mov
shll
or
sahf
xchg
in
mov
dec
mov
xor
call
fisttpll
arpl
inc
cmp
push
fiaddl
mov
jno
movsl
push
test
sbb
xorl
imul
loope
or
push
cmp
sbb
fwait
push
jb
mov
sbbb
repnz
cmp
aaa
or
int
push
stos
or
fildl
lods
or
add
add
add
ja
lods
add
js
mov
jbe
pop
add
add
in
mov
ljmp
jp
pop
inc
lcall
test
xor
xor
jp
mulps
iret
and
push
adc
rolb
dec
cmc
mov
js
notl
stos
mov
dec
push
sub
mov
scas
cmc
xchg
cmpsb
imul
push
mov
cmp
movsl
mov
mov
push
jmp
out
mov
in
or
lds
xchg
adcl
gs
jbe
push
popa
sti
pop
movsl
jmp
mov
xor
push
jmp
or
popa
mov
fucomip
and
decl
push
inc
loope
cmp
mov
push
inc
push
call
test
mov
loop
inc
rcll
sahf
insl
sbb
aad
pop
and
out
push
mov
add
das
mov
stos
dec
inc
jnp
popf
dec
and
rclb
and
int3
mulb
mov
cmp
data16
xor
mov
cmpl
sub
sahf
dec
push
cli
xor
add
aam
stos
imul
cs
xor
cmpsb
sub
decb
insl
sub
rclb
adc
push
pop
dec
aaa
stos
and
or
pusha
jnp
or
incb
nop
out
shlb
sbb
movsb
jmp
hlt
adc
xchg
mov
push
scas
or
ret
jp
insb
das
hlt
dec
pop
cmp
push
adc
lcall
sahf
das
xchg
jnp
lods
mov
jge
js
inc
add
ret
xor
lods
popf
mov
pop
mov
adc
jbe
cmpsb
sbb
jbe
cmp
mov
test
push
pop
pop
clc
jne
dec
push
sahf
jns
pop
push
mov
xlat
mov
pop
push
aam
dec
or
mov
int3
divl
daa
or
add
sbb
nop
sahf
or
mov
dec
mov
add
add
leave
popf
cs
fiaddl
push
sahf
push
aaa
xchg
xchg
out
push
mov
sbb
rcll
pop
xor
stos
pop
or
adc
aaa
add
rorb
xchg
pop
mov
mov
mov
sbb
xor
mov
aas
and
fdivs
jns
and
xchg
and
call
dec
mov
lods
or
jb
mov
cltd
cmp
fistl
dec
lahf
test
rorb
movsb
push
inc
mov
imul
add
mov
das
sub
sbb
cmp
mov
subl
jnp
xor
xchg
push
xor
ret
xor
push
test
icebp
aad
push
call
xchg
cmpsl
or
adc
repz
sysenter
lods
or
cs
jnp
fimuls
pop
xor
push
push
into
insl
divb
gs
ds
out
fildl
inc
adc
jmp
clc
mov
enter
scas
xchg
dec
mov
adc
pop
ss
mov
dec
jns
std
or
mov
xchg
sbb
movsl
lea
jge
lods
xchg
je
aad
jle
pop
sarb
xor
adcl
xor
cmp
adc
rol
jbe
or
lock
jmp
xchg
cmc
push
or
ja
add
dec
inc
addb
push
mov
sbb
adc
push
mov
popf
mov
lea
push
jp
inc
or
push
cmp
adc
outsb
or
xor
jge
push
dec
mov
mov
addr16
cmpsl
dec
psllw
fucom
fiaddl
stos
sub
mov
mov
push
movsl
jecxz
repz
mov
insl
mov
push
mov
movsl
mov
sub
ret
pop
test
mov
and
xchg
in
lods
inc
loopne
mov
add
adc
mov
fbld
in
jae
and
inc
adc
mov
lcall
pop
cmp
inc
aam
adc
int3
xchg
push
out
jo
mov
fwait
or
and
int
call
rcr
add
lea
aad
mov
mov
jl
mov
cmpsb
mov
push
xchg
sahf
ds
sbb
mulb
dec
nop
pop
out
xor
or
sti
dec
bound
cmp
inc
out
mov
movsb
ret
cli
and
out
mov
or
push
xor
xor
xor
inc
scas
scas
inc
cmp
mov
adc
push
mov
pusha
sti
jbe
lea
mov
daa
rorl
pop
jbe
or
cmpl
push
add
xor
sbb
push
sub
dec
ret
scas
cmp
je
sbb
enter
lods
jnp
incb
jne
push
sarb
repz
sbb
rcll
jmp
jno
push
mov
pop
cmp
xchg
aas
inc
loope
cld
sahf
mov
cmp
cwtl
ss
sub
movsl
stos
push
jp
icebp
fadd
mov
out
and
cmp
jg
dec
jecxz
cmpsb
pop
out
scas
stos
in
and
lods
sub
mov
imul
add
lock
imul
xchg
adc
cli
push
or
xor
sbb
stos
mov
shlb
mulb
scas
mov
aam
mov
fwait
jb
push
push
roll
lea
addr16
jl
es
mov
test
jg
pop
dec
xor
rorl
push
dec
rorb
imul
int3
test
jg
jbe
cmpsl
aas
test
mov
or
add
or
into
es
dec
clc
or
mov
loope
and
xchg
test
jp
pusha
inc
sbb
sbb
jl
gs
ret
push
loope
ds
fildl
push
lret
add
push
push
pushf
fdivr
iret
fmull
arpl
lcall
outsb
insl
jge
xchg
loopne
xlat
shll
scas
xchg
mov
sbb
mov
loopne
jae
popf
and
adc
fisttpl
pop
test
or
and
push
cmp
mov
pop
shlb
adcb
pushf
adc
pop
xor
call
mov
adc
xor
rorl
pop
sub
xlat
lds
xor
faddp
mov
faddp
shrb
aad
ds
cwtl
cmp
outsl
bound
lea
jo
roll
pop
pop
mov
cld
cmp
sub
mov
add
xor
jmp
mov
rcr
cmp
xor
and
fwait
pop
leave
add
ss
movsb
lahf
ss
cli
push
jns
mov
pushf
repz
div
adc
shr
mov
ret
push
pop
popf
inc
pop
inc
sbb
fdivs
inc
in
push
inc
pop
jge
pushf
popa
test
arpl
mov
lcall
insb
negl
das
push
sbb
fcmovne
xchg
pop
jl
cmp
stos
pop
arpl
xchg
add
push
mov
js
pop
gs
mov
andb
std
nop
rcll
test
sub
sub
sbb
jo
cmp
mov
outsb
push
ds
into
adc
int
inc
jnp
loopne
in
sbbb
lahf
lods
inc
mov
xor
xor
aaa
jno
in
jno
and
add
jno
inc
jae
iret
adc
sbb
lcall
or
lret
aam
adc
leave
or
enter
les
mov
cmpb
pop
push
mov
pusha
call
fstps
loopne
mov
call
jne
rol
testb
cmpsl
add
mov
mov
xor
mov
mov
dec
daa
test
xorl
push
push
rcrl
lods
pop
cs
add
inc
mov
xlat
addr16
scas
fs
dec
inc
jb
test
stc
inc
push
dec
xlat
popf
jecxz
fdiv
xor
lcall
mov
adc
and
das
adc
push
pop
add
dec
adc
sbb
adc
mov
sub
imul
std
inc
verr
dec
fisttpll
subl
pop
adc
inc
lahf
add
mov
mov
push
xor
mov
mov
push
push
mov
int
xchg
adc
gs
shll
add
icebp
sub
push
imul
jns
fs
push
stos
sub
cmpsb
mov
sub
mov
inc
cltd
pop
mov
inc
push
or
loope
push
in
les
movsl
xchg
data16
xchg
cmp
xchg
xchg
lret
test
add
mov
cs
loope
neg
xchg
test
cmp
insb
shll
sub
or
push
call
dec
cmp
mov
sarl
divb
mov
push
es
add
jb
jp
dec
sub
xchg
cmc
pop
mov
fstpl
sbb
cmp
pop
or
fisubrs
test
xor
cmpsb
into
iret
jo
cwtl
jbe
les
cmc
mov
out
or
cli
leave
push
clc
push
daa
mov
or
inc
or
xchg
in
push
aaa
rolb
mov
or
cmpsb
cmp
add
push
lock
ret
xchg
cmpsb
das
ret
dec
mov
xchg
cwtl
sbb
rorl
inc
xchg
sahf
jo
mov
idivb
sub
pop
js
pop
popf
inc
sbb
out
add
jge
enter
fistps
pop
add
fwait
lock
dec
dec
push
sbb
push
sbb
cmpsl
repz
mov
xchg
add
cmp
dec
mov
mov
cmp
aad
insl
imul
jne
pusha
lea
mov
jge
stos
pop
repnz
fiadds
lock
xor
or
xor
cmc
pop
mov
adc
frstor
pop
aas
cmpsl
jae
aad
mov
shlb
xor
aam
lret
stos
in
mov
sub
js
xlat
mov
jg
add
mov
add
cmp
mov
out
insb
popa
aaa
xchg
fsts
test
lcall
push
or
mov
push
fildl
sub
js
mov
mov
loope
and
jecxz
jge
sub
adc
inc
outsb
push
sub
mov
rcrl
xchg
in
bound
inc
fmuls
lds
jo
jns
call
add
ficompl
rolb
sbb
retw
and
je
ret
push
cmp
sub
xor
jb
clc
mov
push
push
insl
hlt
movl
xchg
xor
mov
mov
xor
loope
addb
push
pop
pop
jecxz
push
xchg
fwait
pop
mov
ds
push
cmp
lock
adc
xor
xor
or
ljmp
pop
push
xchg
aad
loop
lock
stc
pop
aad
sub
or
test
pop
xor
mov
sbb
sub
push
cltd
in
test
jle
sbb
cs
les
leave
in
nop
not
cmpsl
pusha
fdivrs
jb
clc
or
enter
pop
jae
sbb
repnz
pop
sahf
outsb
jno
or
xchg
cmp
add
mov
loope
jbe
sub
fstpt
jnp
int3
or
fsubrl
cmp
int
ds
in
cmp
cmp
mov
push
addb
push
adc
fildll
popl
push
mov
lods
ljmp
lods
rep
mov
mov
jle
cli
sub
xor
pop
adc
test
push
popa
sub
ret
mov
jne
add
movsb
inc
or
loopne
fwait
add
aad
test
lock
add
ret
sbb
xor
mov
cmp
mov
call
or
inc
cmp
dec
mov
sbbb
or
mov
add
icebp
fcmovu
or
outsb
imul
push
mov
xlat
hlt
xchg
cmp
xchg
mov
jge
ret
sahf
sbb
push
push
cld
es
push
jae
aam
test
mov
mov
aaa
in
and
xor
es
pusha
bts
dec
xor
aad
add
or
js
lock
xor
push
aaa
les
xlat
loop
mov
xor
push
in
pop
or
cmp
add
lods
sub
pop
mov
imul
stos
jnp
icebp
ss
test
stos
add
ds
idivb
das
insb
lods
stc
pop
imul
loopne
pop
or
adcl
add
les
fldl
cmp
rolb
arpl
mov
ret
pop
or
sbb
rcrl
push
add
push
or
dec
stc
clc
add
fildll
in
push
int
or
fildl
sbb
out
and
inc
mov
push
movsl
jge
cli
stos
mov
mov
ljmp
add
adc
icebp
ret
orl
out
sbb
and
cli
orb
jle
cmp
popf
mov
push
sub
and
mov
sbb
les
scas
mov
stos
popf
pop
out
inc
into
lea
ret
pop
and
xor
adc
inc
testl
call
adc
test
movsl
pop
jo
push
mov
in
pop
cmp
mov
in
dec
cmp
ss
movsb
and
or
sbbl
lods
mov
xchg
scas
iret
mov
roll
fwait
dec
dec
aam
push
pop
mov
mov
subl
int3
xor
hlt
add
cli
subl
dec
push
xchg
mov
xchg
int3
imulb
fwait
push
repnz
pop
jo
ret
lds
fldt
mov
ljmp
push
adc
outsl
push
sbbl
stos
push
adcb
xchg
cli
and
loop
bound
jae
in
push
push
add
cs
mov
and
jmp
add
or
mov
inc
jno
mov
test
movsl
jbe
add
rcll
xchg
inc
push
dec
lea
mull
cmc
icebp
xchg
jno
push
or
sub
mov
js
lret
mull
jmp
inc
sbb
adcb
adc
popf
ljmp
jmp
dec
xor
jge
mov
adc
push
lcall
fs
aaa
push
rcrl
inc
ljmp
mov
xor
jg
sarl
aam
adc
dec
push
mov
ljmp
sub
push
icebp
mov
cwtl
push
xor
in
rcll
imul
xor
xor
sbb
lea
mov
outsb
bound
and
sti
push
xor
mov
dec
mov
push
sahf
xor
push
mov
xchg
adc
or
mov
cmpsl
xchg
pop
jmp
sbb
push
mov
enter
push
pop
dec
cwtl
cmpb
pusha
movsl
mov
pop
jl
mov
add
add
add
and
xchg
mov
pop
mov
sahf
mov
inc
imul
mov
xchg
jmp
rolb
in
mov
dec
sarl
mov
mov
cmp
jno
cmpl
movsb
adc
pop
popf
lea
sbb
in
pop
xchg
dec
dec
jno
and
fs
cwtl
pop
pop
fwait
push
mov
ret
add
cli
mov
add
in
and
lods
push
push
in
sbb
or
popf
loopne
scas
mov
outsb
mov
jnp
cmpsb
xchg
mov
xor
push
shrl
fs
xor
sbb
imul
xor
lret
ss
mov
arpl
shl
sbb
rcrb
mov
cvtdq2ps
add
enter
push
shr
outsb
lods
test
add
call
call
jmp
ret
or
shll
test
fldcw
push
shll
adc
sub
mov
into
repz
lahf
rcrb
stos
cmp
rorl
push
jo
rorb
fcomip
cmpb
mov
push
inc
jmp
and
xchg
sbb
pop
mov
leave
or
clc
pop
je
sub
sbb
out
jno
test
mov
les
cli
mov
dec
movsl
jno
add
lods
dec
cmp
cmp
add
adc
jg
ljmp
add
jecxz
or
sbbl
imul
mov
xlat
xchg
call
cmpsl
test
filds
xor
imul
dec
movsl
outsb
fsts
push
imul
fildl
add
sub
push
nop
int
mov
jp
fnstcw
xlat
xor
add
popf
add
xchg
lret
in
push
adc
clc
and
xlat
outsl
divl
push
mov
out
popa
jl
popa
mov
dec
cmc
sub
dec
repz
xchg
lar
push
and
repz
je
pop
rcrl
lock
mov
les
inc
jno
scas
push
fmuls
dec
sub
roll
add
sbb
jne
xchg
push
dec
pop
mov
or
xorb
stc
inc
fs
out
or
push
cli
and
insl
adc
pop
push
bound
inc
push
xchg
xchg
aam
repnz
lds
icebp
scas
cmp
sub
add
iret
insl
ret
sbb
xlat
mov
aad
mov
add
jnp
sbb
pop
dec
cmpsl
sub
scas
js
inc
sub
cltd
js
jo
jmp
push
push
mov
test
mov
enter
cmp
test
add
xor
dec
sbb
dec
and
popf
dec
xchg
cmp
lcall
push
rcr
out
sbb
jo
pop
cli
jne
outsl
push
and
pop
push
xchg
fstl
xor
jo
fsubrs
xchg
jne
mov
clc
mov
push
push
xchg
out
int
shr
dec
push
cmpb
pop
add
popf
lret
add
popl
test
lods
lret
clc
xor
jmp
xor
inc
cmp
insl
cmp
cwtl
add
les
mov
mov
insl
ret
shll
jp
jmp
mov
dec
shll
adc
mov
add
and
sub
movhps
pop
cld
das
xor
xchg
or
cld
and
sub
jns
js
minps
jge
loopne
insl
mov
ret
aam
inc
pop
dec
pushf
clc
push
inc
dec
sub
xchg
out
loope
rclb
lret
stos
jle
xchg
sub
mov
sub
sti
sbb
enter
inc
in
aad
dec
clc
addr16
jbe
mov
lret
dec
push
rol
adc
sub
es
aas
shll
and
mov
xchg
imul
mov
jo
scas
mov
push
cwtl
inc
pop
cmp
popfw
insl
mov
mov
jae
int3
dec
cmc
test
push
or
cli
cmpsl
test
cmpb
sbb
lods
cmp
mov
push
jp
xchg
fistpl
outsb
je
and
pop
or
add
les
pop
mov
hlt
cli
dec
mov
out
sahf
cmp
imul
or
pop
scas
inc
mov
cli
and
hlt
cmc
popa
ljmp
mov
test
aaa
mov
inc
sub
jge
insb
dec
shrl
push
ljmp
loop
sbb
call
or
add
test
out
dec
mov
xor
add
push
aam
xlat
push
mov
and
xchg
push
add
sbb
leave
mov
sbb
mov
movsl
sub
push
loope
rcrb
jmp
rorl
inc
arpl
xchg
jge
inc
add
dec
adc
mov
imul
mov
sub
mov
fidivrl
inc
adcl
sub
ds
mov
adc
pop
inc
mov
int
subb
inc
hlt
fistps
imul
popa
in
xchg
cmp
adc
and
insb
icebp
loope
sbb
jmp
push
jns
orl
dec
xor
jl
stos
hlt
movl
clc
xorl
inc
add
imul
cs
lret
ds
ret
add
push
jae
push
data16
add
in
loopne
push
adc
and
out
add
fwait
mov
mov
je
std
xchg
or
pop
mov
cwtl
ja
inc
aaa
stc
sbb
mov
into
test
jno
dec
jnp
dec
cld
sbb
cmp
aam
jb
daa
sbbb
out
loope
jno
lea
push
pop
mov
jmp
ljmp
out
sbb
cmpsl
mov
jo
bound
testl
sbb
push
sub
mov
fstps
mov
dec
repz
js
cltd
sbb
mov
xor
and
movups
imul
cmp
xorb
int3
shlb
xor
aaa
and
cmpb
aas
js
push
pop
mov
mov
sbb
push
sub
cmpsb
or
jbe
sbb
push
mov
and
sbb
clc
inc
sub
out
and
lods
cli
dec
mov
push
jmp
pop
gs
mov
imul
out
jp
pop
arpl
cmp
add
fcoms
cmp
out
jno
jmp
je
enter
lods
adc
pop
xchg
mov
lods
inc
lods
push
leave
and
fists
shrb
int3
jmp
fs
jo
push
jns
imul
and
adc
out
push
outsl
adc
out
cli
mov
sub
inc
ret
pop
cmpsl
xor
pop
loope
bndldx
fs
lea
sub
jmp
add
je
icebp
sbb
push
adc
jae
inc
daa
inc
rorl
shlb
push
adc
inc
add
or
leave
insl
lahf
cmp
inc
or
fsubrl
in
les
icebp
inc
and
hlt
shlb
rcrl
jl
subl
inc
pop
mov
sti
cmpsb
mov
cwtl
mov
mov
outsb
dec
or
sub
clc
into
repnz
popa
daa
cld
xchg
mov
pop
cmpsl
cmp
sbb
jecxz
xor
adc
or
or
sbb
mov
add
ds
mov
stos
testb
ret
inc
sub
jns
test
jmp
push
je
sbb
rcll
mov
enter
insb
xor
push
lds
push
test
mov
scas
inc
sub
sub
or
ret
mov
cltd
cmp
aaa
pop
pop
xor
pushf
adc
adcl
rcrb
addb
bound
subl
jns
sti
dec
gs
sbb
mov
sbb
arpl
cli
aaa
xor
dec
daa
xor
add
jmp
idivb
inc
and
mov
cmp
lcall
arpl
icebp
add
inc
dec
pop
adc
filds
insl
pop
mov
inc
push
shrl
data16
adc
ret
sbb
mov
sub
scas
fistpl
pop
xchg
add
push
mov
mov
push
shrb
mov
push
js
xor
rcrl
lds
dec
stos
sti
xlat
dec
sbb
xchg
leave
fwait
hlt
lea
lret
icebp
sahf
sub
sbbb
lcall
dec
dec
mov
cli
shlb
mov
mov
or
add
negb
add
xchg
cmp
ret
js
lahf
ljmp
mov
xor
in
inc
hlt
cmp
popf
lea
cltd
scas
mov
gs
dec
subl
mov
jp
aad
lods
pop
xchg
xor
jno
inc
repz
lret
lea
aaa
clc
dec
arpl
arpl
or
mov
cmp
cmp
je
int
cmpsl
sbb
jbe
pushf
repz
and
stos
sub
jbe
or
xor
sahf
add
xchg
cmpsb
hlt
xlat
xchg
test
inc
push
hlt
push
mov
xor
dec
xchg
mov
xor
dec
movsl
pop
adc
fidivrs
jp
test
jno
or
jg
das
lcall
push
mov
clc
add
or
jge
adc
fisubrl
imull
leave
movb
pushf
jae
mov
divl
pusha
sub
or
sbb
push
in
mov
int
jbe
loopne
sbb
jecxz
ja
shlb
xor
add
cmp
test
call
movl
mov
push
sbb
mov
cmp
stos
push
sbb
gs
mov
dec
pop
imull
inc
outsb
or
test
iret
and
outsb
jge
xchg
add
mov
push
out
sbb
xchg
aas
shr
push
inc
mov
aam
mov
fbstp
jmp
mov
push
jno
and
call
mov
les
fs
pop
in
push
push
dec
gs
cli
cwtl
roll
mov
out
adc
and
add
call
inc
pop
in
jne
adc
mov
out
hlt
pusha
adc
push
fnstcw
insl
jne
dec
inc
push
lea
sti
jge
inc
inc
lods
dec
lea
cmp
mov
pop
and
loope
ds
and
or
mov
push
shlb
jle
mov
decl
lcall
xchg
fcomip
imul
idiv
clc
adc
imul
icebp
sti
stos
add
mov
push
lock
inc
sti
xchg
mov
push
sbb
add
lock
push
fisttps
cmp
in
add
popa
dec
es
ljmp
or
jge
ds
or
ljmp
add
sub
or
add
mov
ret
in
jnp
ljmp
pop
cmc
push
cmp
sub
subb
fwait
movsb
addb
sub
push
mov
insl
jge
jns
std
scas
xchg
insl
mov
mov
add
pop
scas
xor
mov
clc
sub
in
pushf
dec
fistps
adc
das
ret
cld
in
xor
adc
shrb
add
ljmp
mov
mov
negb
mov
sbb
sbb
pop
aas
mov
mov
inc
aaa
std
loope
enter
clc
lret
nop
adc
stos
cmpsb
pushf
inc
push
pop
sub
ja
pusha
fsubl
orb
int
fsubrl
xchg
int3
and
xor
push
or
repnz
push
daa
xlat
mov
sub
inc
clc
mov
shll
scas
add
leave
xchg
clc
mov
clc
push
and
or
shlb
cwtl
sar
bound
lds
div
mov
sub
out
lods
or
mov
mov
and
lods
pop
cmp
mov
lods
xchg
lock
add
or
or
hlt
xchg
mov
clc
mov
ss
or
mov
xor
mov
or
xchg
das
adc
or
and
ret
adc
pushl
nop
outsb
push
rcrb
lods
aam
xchg
mov
subb
pop
cmp
cmc
sbb
mov
xor
insb
outsb
ficoml
dec
in
fwait
pop
xchg
fbstp
push
or
cmp
cmp
leave
mov
fwait
sbb
adc
pop
xchg
stos
mov
icebp
mov
lret
test
ljmp
pop
sahf
aad
inc
sub
je
cmp
mov
xchg
xchg
or
imul
cmp
inc
loopne
sbb
jbe
gs
and
xor
fisubs
icebp
or
fnstcw
pop
mov
cld
fwait
push
dec
es
shll
popf
int3
add
push
jmp
aam
aad
loopne
mov
jns
sub
cmp
test
mov
fmuls
adcb
call
jb
js
ret
pusha
push
fwait
cmpl
sbb
lea
testb
sub
dec
mov
inc
lret
cld
dec
mov
out
ljmp
push
gs
cmpb
jb
push
lods
push
jle
addr16
addl
call
pop
inc
pop
cmp
xchg
push
xchg
dec
lahf
daa
add
ret
mov
loopne
mov
adc
inc
xchg
test
fcoms
out
rol
pop
js
jle
and
pop
sbb
adcb
push
cmp
inc
add
jge
push
ss
mov
outsb
adc
fbld
dec
int3
mov
cli
hlt
popf
cmpl
test
ret
rorb
iret
mov
loopne
cmp
jecxz
push
fisttps
les
push
fimull
ss
lret
call
jmp
dec
fs
xchg
call
sti
call
pop
fisubrl
or
das
jnp,pn
mov
mov
xor
xchg
pop
lcall
adc
cli
and
push
movsl
dec
bound
inc
addr16
pop
xor
int3
lsl
jp
push
aam
jecxz,pt
mov
andl
cmp
aas
andl
cmp
jns
mov
inc
in
sbb
mov
gs
sti
scas
push
fwait
adc
sub
sarl
add
sbb
sub
jle
jmp
stc
and
iret
dec
fcoml
js
sub
data16
mov
adc
add
scas
les
jns
jnp
out
add
rclb
add
cmp
sbb
push
ret
icebp
inc
or
mov
sar
mov
sbbb
and
ret
call
loopne
in
or
lods
lods
pusha
je
cwtl
pop
fcmovne
push
mov
inc
push
lcall
loope
sub
in
in
dec
pop
pop
scas
fisttpl
or
pop
aas
rcl
cmpsb
cli
or
loopne
sub
cmpsb
lods
test
jo
cmpsb
popa
inc
mov
test
inc
sub
movb
jnp
shl
fcoms
xchg
and
jb
loop
pop
push
dec
pop
out
adc
push
pushf
je
cltd
sub
xchg
jne
push
dec
dec
jle
aaa
mov
daa
imul
sub
nop
inc
pop
std
mov
fsubl
pop
xchg
xchg
mov
sub
inc
lret
sbbl
adc
imul
test
dec
cmp
pop
dec
test
adc
dec
mov
int
rol
sub
jg
mov
or
and
pop
ljmp
addr16
clc
dec
add
cmp
xchg
mov
movd
cmpsb
sbb
fisubrs
add
xchg
push
lods
imul
xchg
aas
imul
mov
jno
ljmp
orl
hlt
xchg
and
ds
adc
push
mov
stos
lds
in
mov
aas
and
xor
dec
and
mov
mov
push
repnz
or
adc
pop
add
push
call
cmpsl
adc
cli
and
sbb
cld
repz
mov
fisttps
jo
xchg
mov
shlb
jbe
pop
dec
loope
fdivr
inc
scas
and
mov
adc
xchg
pop
dec
xor
sub
sbb
fiadds
out
and
mov
loop
inc
push
inc
push
in
mov
cld
sbb
dec
jno
test
ss
xor
push
mov
aad
idiv
jo
or
addr16
lret
movsl
loopne
mov
mov
adc
xchg
cmp
cld
leave
sub
jo
cmpsb
and
fbstp
adc
and
mov
stos
les
mov
push
fisubl
jl
dec
mov
outsb
add
shrl
aas
cmc
sbb
mov
or
ds
scas
mov
movsl
lcall
or
xorb
mov
mov
icebp
pop
or
dec
inc
outsb
mov
add
inc
out
push
sub
push
ds
movsb
mov
fcompl
mov
mov
mov
rcr
pop
mov
out
cmp
ret
and
mov
popa
inc
sbb
push
cs
jnp
les
adc
shr
popl
xchg
add
inc
in
mov
jge,pt
jecxz
xchg
mov
sub
mov
loopne
mov
daa
mov
scas
movsb
orb
cmpsb
mov
bound
cld
stos
mov
je
addb
push
sbb
aam
add
jl
cs
jo
nop
out
scas
add
incb
adc
int3
dec
sub
and
and
pop
pusha
inc
sbb
jl
push
cmp
popf
or
lods
xor
out
xchg
fldt
sbb
xor
enter
shl
jl
ja
pop
push
or
push
cmp
cmp
insb
pushf
pusha
mov
fs
and
cs
mov
pop
nop
xchg
cmp
test
cmpl
mov
cmpb
push
mov
out
into
or
adc
sub
push
fisubrl
mov
andps
mov
gs
or
pop
push
fsts
cmp
or
mov
fmull
hlt
inc
sub
jno
xchg
out
xorb
jno
sbb
dec
xchg
popa
orb
dec
adc
jb
sub
mov
fistps
jo
pop
xchg
insb
test
testb
rorb
mov
mov
jne
cmp
add
lahf
mov
mov
or
inc
or
push
ljmp
ret
pop
jo
fidivl
shrb
jae
ret
mov
and
orb
popa
jl
mov
cmp
xor
xor
xchg
mov
fdivrs
adc
dec
int3
xchg
out
xor
sub
outsl
imul
repnz
inc
adc
fwait
cmpsb
and
inc
idivb
lcall
sbb
add
add
xor
stc
sub
lock
movsb
pusha
pop
mov
pop
movsb
mov
add
mov
lcall
and
and
push
into
mov
pop
sub
movsl
xor
test
sbb
mov
jb
adc
mov
xchg
push
stc
mov
rcrl
in
mov
sbbl
int3
xchg
enter
sbb
cltd
js
jle
stos
xchg
add
xchg
cmp
outsb
push
cmp
xchg
inc
outsb
cmpsl
mov
repnz
cmp
xchg
out
push
outsb
mov
les
inc
or
push
enter
pop
inc
lds
fcoml
push
fs
and
or
xor
mov
popf
mov
dec
lcall
inc
jp
in
dec
sbb
mov
xchg
lds
int3
or
mov
pusha
pusha
sbb
dec
mov
adc
cmp
push
cli
cmpsb
rcl
shll
call
lret
inc
ljmp
sbb
mov
dec
pop
lret
and
or
or
leave
push
icebp
les
xchg
outsl
or
das
mov
out
xor
mov
and
add
or
into
adcb
lock
lahf
ss
lock
mov
inc
outsb
xor
insl
mov
out
test
addr16
adc
adc
and
ljmp
xchg
stos
fistl
inc
testb
int3
mov
fdivrp
int
adc
jae
ds
fists
iret
movsl
jo
adc
out
inc
andb
hlt
add
imul
cmc
pop
lock
or
push
jl
in
and
lahf
push
stos
movsb
push
int3
adcb
inc
mov
inc
add
ds
xchg
cmp
push
adc
data16
mov
cli
mov
mov
nop
imul
mov
xchg
dec
mov
dec
mov
filds
push
and
fimull
sarb
nop
add
jecxz
mov
push
sarb
outsb
fiaddl
cmp
xchg
cmp
lods
adc
clc
cmc
mov
jo
in
dec
adc
jo
arpl
add
sub
cmp
mov
mov
add
add
loopne
aas
pushf
sub
push
push
sar
loop
daa
xchg
adc
add
je
lret
enter
jmp
jmp
jnp
fwait
movb
push
fs
mov
xor
icebp
xor
push
mov
sahf
cwtl
nop
shlb
lahf
int
mov
loopne,pn
inc
push
cwtl
jo
enter
sub
and
ss
mov
or
in
aas
insb
fs
repz
imul
arpl
or
fmul
mov
dec
cli
addr16
mov
jnp
jne
les
movsb
or
or
jmp
ds
mov
xor
jnp
es
clc
add
lcall
pop
inc
mov
in
jmp
andps
or
push
mov
cs
mov
mov
xchg
adc
cmp
xor
sbb
insl
or
ficoml
sub
push
iret
cli
sub
mov
fisttps
inc
pusha
xchg
das
and
fadds
loop
test
jmp
mov
ficoms
jo
notl
outsl
sub
or
addl
dec
cmpsb
cli
push
stos
mov
pop
es
hlt
repz
testb
fsub
sub
xor
adc
jae
pop
lret
cli
jbe
mov
push
fildl
cmp
push
sbb
mov
adc
cmp
xor
test
mov
push
insl
adc
xchg
push
push
add
sbb
aaa
loop
shl
mov
sub
or
add
mov
call
mov
sbb
sub
push
loopne,pt
adcb
adc
cmp
xchg
push
call
jb
inc
push
jg
add
mov
and
pop
inc
add
sbb
mov
sbb
mov
xlat
or
sbb
push
clc
mov
xor
or
push
ja
mov
push
or
fcmovnb
aas
test
mov
mov
mov
aad
in
jg
mov
les
mov
and
or
stos
or
or
aas
sbb
mov
sbb
pop
pop
jle
loopne
jg
rclb
insb
mov
mov
xchg
dec
jnp
add
insb
sbb
out
mov
or
sarb
push
adc
insl
cmp
inc
jle
add
fwait
sub
mov
ljmp
clc
lds
les
aad
inc
call
pop
xchg
pushf
sub
jne
dec
je
pop
test
or
push
fistl
mov
pop
jl
nop
lods
sbb
inc
data16
dec
push
ljmp
shr
or
pusha
cld
or
nop
je
or
mov
loope
loope
ret
dec
jg
jmp
scas
adc
mov
add
add
das
cmpsb
or
mov
cmc
js
clc
jmp
aam
or
mov
mov
nop
fmuls
test
pop
addl
fdivr
mov
icebp
testb
inc
in
inc
arpl
push
adc
fildl
dec
nop
inc
in
xchg
cli
aas
les
or
call
mov
pop
inc
xchg
cmp
cmc
mov
adc
xchg
cmpsl
int
pop
jp
mov
ds
sbb
scas
adcb
cli
test
mov
leave
add
pop
and
shrb
imul
icebp
adc
or
add
out
mov
stos
mov
int
lods
out
sbb
adc
push
lds
pop
jmp
es
mov
xor
sub
xor
roll
insb
lods
test
in
fisttpl
mov
cld
cli
xchg
dec
jne
sub
push
popf
jl
dec
push
fiaddl
shr
jo
push
sub
add
mov
push
scas
daa
outsb
pop
ljmp
xchg
sarl
and
call
pop
or
cmpl
cmp
push
mov
add
aas
nop
rcrb
or
int
add
ror
adc
sarb
xchg
jns
into
sub
lock
inc
addr16
cmpb
pop
jb
inc
xor
push
add
dec
mov
notb
jbe
sti
scas
or
scas
rolb
and
lods
mov
shl
xchg
fwait
pop
cmpl
mov
push
sub
push
adc
clc
dec
sbb
inc
mov
add
or
js
ret
or
aaa
andb
mov
pop
shll
negb
cmp
fcmove
in
int3
add
or
adc
mov
sahf
lcall
test
cltd
popa
or
je
shrl
test
loopne
adc
ret
ja
add
mov
xor
iret
jle
adc
test
movsb
es
xchg
adc
jle
push
jge
enter
add
lds
out
jno
cs
mov
xor
pop
adc
ljmp
out
lock
in
pushf
repz
stc
notb
addl
ss
or
test
push
xchg
push
mov
jp
push
mov
mov
test
arpl
shlb
mov
inc
scas
push
loop
lea
add
dec
dec
sub
or
dec
push
lahf
mov
and
dec
test
and
js
pop
cmc
js
pop
add
jp
push
inc
mov
mov
lock
inc
jl
insb
xchg
jb
aas
mull
cltd
dec
jb
insb
dec
call
enter
popf
lods
fisubrl
jno
mov
shlb
outsl
adc
fs
mov
lock
jae
pop
push
daa
mov
mov
fisubl
jmp
push
dec
push
xor
xchg
pusha
pusha
or
push
daa
mov
push
push
andl
test
add
adc
shr
insb
pop
or
inc
fisttpll
in
or
hlt
cmp
test
bound
adc
inc
mov
sub
icebp
ret
aaa
inc
mov
mov
clc
adc
dec
cmp
adc
dec
or
outsl
adc
sbb
xor
push
fidivs
data16
sbb
push
ficoms
or
jb
insl
xor
push
cmp
jecxz
mov
pop
repnz
mov
mov
mov
add
mov
sbb
xor
xor
fisubs
xlat
mov
jns
fs
add
imul
aas
lock
push
add
or
clc
add
mov
add
lret
add
inc
jmp
mov
inc
lea
mov
inc
sbb
fcoms
mov
out
les
es
dec
mov
pop
push
dec
dec
sbb
cmp
mov
inc
push
inc
dec
movsl
inc
hlt
jge
push
xchg
adc
cld
dec
aaa
call
addb
cld
sbb
js
dec
adc
imul
mov
mov
enter
test
sti
pop
daa
and
sbb
scas
xchg
sarb
outsb
push
sbb
lcall
lods
cmp
sub
mov
ret
enter
push
xchg
jnp
loopne
mov
or
lcall
adc
sub
sub
std
mov
jnp
push
mov
out
xor
add
repnz
mov
std
lea
cld
push
ja
std
pop
sbb
arpl
int
adc
mov
xor
or
sub
call
cmp
mov
inc
push
cmp
or
jbe
xchg
pop
leave
ret
pop
scas
int3
enter
popa
cld
inc
mov
int3
rcrb
inc
and
mov
mov
daa
push
ficompl
fildl
insb
js
mov
dec
jg
xor
inc
arpl
imul
mov
push
sub
ret
push
push
cmc
sub
xor
mov
orl
jno
dec
inc
aas
cmp
into
add
sti
xor
loopne
cmpsl
mov
sub
pop
inc
shrb
addl
push
inc
repz
push
xor
rclb
into
cmc
sbb
and
loopne,pt
movl
adc
dec
outsb
add
inc
inc
bound
xor
jbe
and
xchg
ljmp
aad
in
mov
pop
les
aad
dec
daa
imul
ret
pop
cmp
xor
repz
insl
and
in
cmc
jb
cmpsl
mov
or
fwait
scas
gs
push
cmp
std
pop
xor
mov
cmp
mov
leave
and
out
sub
ret
sub
adc
daa
es
push
clc
fstpt
and
addl
push
or
inc
xor
mov
fsubrl
dec
push
idiv
insb
aad
sub
xor
cmpsl
dec
sub
fdivs
ror
xor
add
jecxz
lret
cwtl
or
stc
push
sbb
dec
sbb
in
cwtl
add
fnstsw
mov
call
sub
fwait
xor
ficoms
push
lods
add
mov
xchg
shrb
push
mov
pop
dec
sarb
adc
push
adc
pop
leave
lock
ss
mov
dec
inc
icebp
and
pop
sub
dec
leave
in
cmp
test
dec
dec
lods
js
xor
or
jo
jb
rcll
iret
xchg
mov
cld
pop
inc
fcomi
sub
mov
lods
loop
test
outsb
cmp
imul
inc
mov
mov
jb
sub
push
xor
mov
xor
mov
out
xor
jg
mov
aam
push
mov
adc
pop
pop
dec
push
test
adc
clc
add
mov
jbe
popw
xchg
or
into
push
and
mov
mov
or
or
xchg
jle
and
mov
adc
jno
repz
cmp
pop
and
sbb
aam
les
push
or
jb
test
add
sub
arpl
idivl
inc
jl
adc
adc
mov
mov
mov
jecxz
mov
sub
into
decl
and
or
jbe
andb
ds
ds
es
dec
mov
pop
ret
push
inc
outsl
call
mov
rolb
das
ja
iret
mov
test
mov
pop
dec
popa
jl
mov
rcr
inc
loope
xor
or
or
daa
cmp
pop
shl
cmpsl
sub
int
sbb
ss
jbe
add
jge
push
addr16
std
mov
pop
rcll
lahf
xchg
das
ss
or
pop
or
ja
xchg
or
push
mov
clc
scas
sahf
sbb
js
fwait
inc
sbb
pop
sbb
and
movsl
lock
mov
test
pusha
xorb
add
pop
fs
daa
rorb
es
push
sbb
in
imul
cmpsb
adc
pop
movsb
and
adc
test
push
jns
nop
adc
cmpsb
inc
push
cmp
movsl
push
or
lods
lods
mov
loop
or
add
jo
xchg
sbb
adc
icebp
movups
xchg
cmpsb
test
xlat
scas
lds
lcall
imul
in
cld
sbb
mov
xlat
cli
cmp
inc
mov
test
fucomi
adc
lods
mov
arpl
pop
lock
jge
jns
loopne
sbb
inc
adc
xchg
jbe
ljmp
bound
lea
aam
ficompl
aad
iret
dec
mov
or
mov
ret
mov
jge
lds
lahf
jle
int3
lods
movl
xor
xor
mov
aas
lods
test
popa
getsec
cmp
mov
std
call
push
rorl
icebp
rorl
daa
dec
xor
add
cmp
adc
add
outsl
dec
mov
sub
add
jnp
shlb
daa
enter
xlat
fistpll
inc
insb
loop
sti
pop
push
inc
sbb
sbb
pop
inc
xchg
icebp
icebp
lock
dec
xor
add
sbb
mov
push
inc
jo
inc
ror
icebp
mov
xor
add
xchg
pop
daa
jp
out
or
xorl
adc
sub
jmpw
pop
daa
lea
iret
sar
leave
cmp
popf
adc
inc
int3
pushf
push
or
mov
pop
push
js
in
fbstp
and
mov
add
mov
adc
jmp
dec
icebp
ljmp
movb
jno
jg
das
lea
movsb
add
cmp
dec
fdivr
test
test
mov
jo
fiadds
push
and
pop
sub
pop
ss
push
fsubl
mov
xor
mov
or
rorl
or
arpl
in
inc
repz
jle
and
jmp
leave
test
adc
dec
adc
xchg
stos
and
call
pushf
inc
mov
test
mov
cmp
ds
dec
ficomps
shll
bound
mov
mov
jl
scas
add
push
das
sti
insl
sbb
cmpsl
and
insl
stos
leave
flds
divb
outsb
arpl
shl
mov
inc
add
jne
xor
fnstcw
pushf
jo
adc
cmp
subl
insl
inc
jne
xchg
mov
jno
and
inc
sbb
sbb
sub
jle
pusha
insl
push
sub
loop
sub
mov
pop
sub
pop
dec
fstpt
gs
inc
sbb
mov
insb
dec
sbb
ss
sub
dec
std
add
rorb
movsb
ljmp
add
addr16
xlat
fs
clc
jmp
mov
test
je
pop
push
mov
in
xchg
and
xor
xchg
mov
cmpsl
adc
or
sub
sbb
and
jnp
jmp
jp
dec
add
push
sbb
mov
and
movsb
scas
mov
mov
and
sbb
sbb
sbb
aad
adc
in
shll
je
mov
push
aaa
stc
in
popa
enter
adc
adc
mov
je
sub
push
jmp
mov
popf
lock
gs
dec
push
sbb
mov
popw
add
inc
pop
push
data16
inc
add
cltd
xor
adc
adc
add
or
or
pusha
xchg
and
insl
xor
cmpb
push
test
pop
cs
mov
or
fldt
add
pop
dec
std
out
push
lcall
mov
jp
ljmp
mov
fs
add
push
cmc
ja
je
data16
xchg
imul
cmp
pop
je
fsts
mov
clc
and
rcrl
jns
es
adc
xor
or
jp
pop
jmp
imul
outsb
shrb
popf
push
movsl
xchg
mov
cwtl
vpcompressw
mov
pushf
js
mov
dec
and
in
mull
or
mov
xor
cmp
mov
jae
xchg
add
pop
js
jl
icebp
xchg
insl
ljmp
or
adc
xchg
js
sbb
jg
popf
push
mov
cmp
into
jp
das
incl
fsubr
popf
bound
scas
in
out
mov
shll
dec
mov
and
dec
sub
or
push
or
cwtl
loop
outsb
adc
sbb
test
push
and
das
repnz
dec
pop
out
inc
or
fldl
repnz
das
mov
fcomip
mov
or
add
cltd
xor
lds
add
push
stos
pop
xor
and
mov
pop
xor
adc
into
iret
js
mov
inc
test
push
shrb
add
sub
ror
sbb
pop
lock
inc
jp
rol
xchg
inc
jbe
push
mov
out
lcall
jecxz
sub
mov
mov
lcall
sbbl
rcll
imul
mov
and
mov
dec
sub
sahf
xchg
inc
or
lret
clc
aam
addr16
icebp
outsb
xchg
push
imul
and
push
bnd
xor
lea
lcall
sub
ret
cmc
sti
xor
scas
pusha
repnz
js
xchg
push
js
mov
push
stos
mov
fstpt
aam
inc
enter
xor
mov
das
stc
and
rcrl
in
cmp
cwtl
and
fcoml
fadds
stos
sbb
pop
sub
mov
loop
and
fnstenv
and
jecxz
xchg
and
js
stc
xchg
lods
jecxz
xchg
sarb
in
or
lret
aas
sbbl
mov
mov
inc
sbb
adc
icebp
inc
sar
push
hlt
das
mov
mov
add
push
cwtl
icebp
xor
mov
cmp
rcr
push
pop
dec
push
lock
mov
mov
jbe
xchg
rcll
pop
aam
and
inc
sbb
ret
pop
scas
mov
rclb
ficomps
mov
sbb
add
jno
ljmp
jmp
repz
mov
dec
mov
mov
mov
mov
insl
jno
xchg
cmp
push
out
push
fists
mov
shll
popa
loop
ror
dec
pop
aas
or
insb
push
jbe
cltd
xchg
popf
bnd
rol
pop
pop
cmpsb
sub
gs
or
movsb
inc
xchg
add
fidivrl
or
rcll
imul
and
aas
scas
shrb
or
add
xor
in
lcall
dec
mov
mov
popf
push
test
xchg
adcb
ret
popa
frstor
insb
dec
loopne
mov
aaa
push
das
adc
adc
adc
sbb
or
test
add
int3
add
and
and
adc
xchg
add
pop
pop
pop
inc
adcb
lret
popf
mov
pop
fwait
aas
jl
inc
shrb
addr16
mov
lods
outsl
mov
jl
aam
es
push
mul
jge
es
mov
jo
sub
sarl
mov
sbb
dec
lds
lret
cmp
std
adcb
mov
scas
pop
mov
sbbl
les
mov
out
add
or
adcl
ror
in
jae
movsb
dec
xor
addb
sub
jecxz
clc
out
sbb
mov
stc
mov
sbb
adc
inc
pop
repz
mov
mov
mov
sbb
fists
cs
fbld
cmp
addr16
das
bound
das
rcrb
add
adcb
pop
imul
mov
adc
lods
clc
mov
insl
cmp
leave
xor
push
adc
pop
add
push
cs
fcomps
xchg
lods
cmp
fidivrl
js
lret
xchg
mov
fnstsw
sub
daa
nop
fsubrp
push
dec
into
mov
insb
lcall
or
mov
add
les
xchg
mov
mov
cmpsb
and
push
cmp
mov
shll
mov
push
cmp
lea
insl
in
cs
les
jle
insb
rolb
aad
notl
rclb
fstpl
adc
fiadds
dec
push
rcrl
subl
xlat
jo
ljmp
mov
adc
jns
addr16
dec
shll
pop
sub
cmp
inc
bound
mov
mov
dec
mov
inc
cld
fsubs
stos
lret
xor
out
pop
cs
sub
and
nop
mov
ret
lds
xlat
pop
ret
outsl
pop
icebp
mov
xchg
inc
cmpsl
in
jp
dec
jae
outsb
xor
push
push
leave
fdivl
add
xchg
fbstp
cmpsl
mov
push
mov
mov
arpl
jmp
or
mov
rclb
loopne
xchg
push
je
and
push
lods
pop
xchg
mov
and
inc
je
jmp
mov
sub
jo
or
cs
pop
pop
or
cmp
rorb
movsl
in
lea
pop
shrl
inc
mov
add
jne
fs
sahf
pushf
and
icebp
pop
insb
xchg
cmp
cmp
sbb
pop
test
pop
add
add
push
xor
or
adc
sub
push
and
iret
pop
push
js
mov
add
mov
orb
inc
and
pop
sti
adcb
shrb
or
orl
ret
add
sub
pop
jmp
adc
hlt
pop
rcll
jne
lret
fldenv
adc
daa
jle
push
add
add
mov
mov
arpl
mov
arpl
hlt
icebp
xlat
xchg
scas
aaa
jbe
in
addb
mov
cwtl
push
dec
add
aas
dec
inc
pop
mov
pop
jmp
lds
pop
loop
or
int3
push
inc
loop
nop
mov
hlt
sub
nop
imul
out
xor
lods
xchg
sbb
push
adc
push
jge
mul
jle
stos
pop
sarb
inc
sub
add
imul
shlb
add
add
cmp
jo
call
repnz
imul
dec
clc
xor
xor
scas
jmp
fdivrl
cltd
fwait
ror
xor
out
sbb
cmp
bswap
inc
push
paddusw
push
push
fcomps
xchg
shrl
pop
aad
subl
js
mov
mov
and
mov
sbb
xor
mov
loopne
sbb
pop
mov
sbb
jno
xor
pop
lods
xchg
dec
fadds
scas
xor
mov
dec
mov
add
loopne
pop
xchg
les
ret
add
mov
or
xor
negl
add
fiaddl
xor
in
xchg
mov
add
test
mov
sbb
and
leave
bsf
mov
ret
lds
and
push
add
cmp
jae
fbld
mov
xorb
sbb
cmpsb
addr16
mov
push
pop
jp
xchg
add
adc
jns
adc
and
mov
add
inc
push
in
cmp
push
and
fsub
push
adc
mov
xor
pushf
mov
adc
rolb
add
add
xor
mov
adc
or
pop
cmpsb
je
mov
push
cmp
icebp
fdivl
or
ret
mov
les
cmpsb
mov
pop
jg
cmp
cmc
mov
test
lods
pmaxsw
sbb
cli
movl
negl
and
or
out
into
adc
dec
push
in
and
xor
shrb
imulb
icebp
popa
or
push
loopne
jge
and
nop
sbb
out
jmp
pop
xor
mov
mov
adc
lcall
lods
jo
xchg
push
jnp
or
pop
loope
lcall
sbb
push
test
push
imull
sub
jl
mov
xor
pop
mov
cmp
push
push
gs
mov
dec
adc
cmp
popf
mov
inc
or
iret
movsb
inc
cli
mov
xchg
adc
inc
es
addb
aad
loopne
js
jge
or
pop
insl
repz
shr
test
pop
pop
pop
iret
push
cli
repnz
mov
push
xchg
mov
dec
mov
test
rorb
fdivp
pop
xchg
xor
inc
in
sub
inc
fsts
imul
pop
and
cmpsb
inc
jnp
push
mov
jno
adc
test
add
xchg
pop
push
xor
into
loopne
mov
xor
jp
jb
jmp
sarb
fists
mov
lods
insb
or
pop
sub
inc
sub
xchg
ljmp
shrb
clc
fisttpl
xchg
push
adcl
cmpsb
cli
arpl
or
lds
lods
inc
movsl
jo
ror
jnp
jb
pusha
dec
cld
mov
dec
jo
jge
pop
cli
inc
add
cmp
lds
xor
pop
adc
pop
jecxz
pop
jae
in
pop
push
icebp
xchg
rorb
mov
stos
inc
sbb
mov
dec
pop
out
lcall
pop
xchg
push
push
pop
loopne
mov
and
test
bnd
inc
jne
ja
mov
inc
sbb
testb
push
rorb
xchg
and
mov
sti
xor
cmp
or
movsb
movsb
and
cmpsb
addb
pop
sub
mov
cs
adc
mov
dec
enter
push
pop
mov
dec
popa
inc
xchg
mov
out
sbb
xchg
je
shlb
loopne
adcb
mov
adc
push
insb
loope
jg
fsts
out
into
ret
mov
stos
cld
imul
pop
mov
add
insb
pop
loop
sub
jge
add
and
add
jbe
inc
inc
lret
cmp
out
sbb
call
inc
and
filds
inc
inc
jbe
xor
enter
inc
and
add
lret
pop
pop
push
addr16
or
aaa
xchg
aaa
mov
loopne
loope
cli
push
mov
push
cs
shr
fsubrs
sbb
or
or
pop
insl
and
add
fadd
daa
jle
dec
sub
mov
push
push
jno
outsb
cmp
mov
fadds
mov
mov
sahf
inc
pop
adc
icebp
sbbb
or
mov
jb
into
and
sarl
cmp
add
lahf
movb
cwtl
push
popf
mov
jg
jp
clc
sub
ljmp
jg
movsb
iret
cwtl
addb
add
sub
lock
inc
cmp
pmaddwd
add
fs
mov
loopne
pop
and
or
popa
push
movsb
cltd
movsb
popl
or
stos
lods
inc
test
out
xchg
rcl
and
push
sbb
iret
adc
test
mov
cld
mov
in
cmp
outsb
jl
addl
rol
add
pop
or
dec
mulb
cwtl
xchg
int3
xchg
out
xchg
push
mov
dec
shr
pop
xchg
aam
test
outsb
xchg
inc
sahf
cli
call
ret
inc
cmp
pop
add
loopne
and
sbb
pop
mov
sbb
mov
dec
cmp
pop
daa
dec
in
test
push
and
dec
movsb
mov
je
xchg
lock
fldt
cmp
dec
repnz
je
pop
jns
shrl
je
imul
loope
filds
ds
cld
lcall
adc
dec
or
ret
push
pop
insb
inc
add
iret
pop
cmpb
mov
in
sub
cmc
adc
outsl
imul
and
imul
and
icebp
out
fsubs
xor
aad
ss
int3
lods
sub
shrl
adc
stos
adc
into
push
mov
xchg
pop
xor
lret
cli
jg
inc
sarl
es
sub
fnstcw
ljmp
loope
ljmp
pop
and
inc
cmp
into
inc
add
mov
mov
enter
inc
inc
inc
sti
aas
xchg
insl
pop
mov
mov
dec
jbe
push
out
xlat
sub
imul
out
outsb
sbb
loope
ret
mov
andb
add
mov
fxrstor
cmp
loope
mov
cmp
movsb
xchg
sbb
push
push
into
jmp
dec
and
mov
and
sbb
shrl
cwtl
rorb
rol
mov
push
inc
jecxz
cmp
jne
rol
mov
mov
fsubrp
mul
cmp
outsb
rsqrtps
mov
push
ds
test
lods
jg
push
push
cmpsb
add
mov
mov
cmp
mov
out
mov
sbb
cmp
push
or
scas
mov
int3
fucomip
and
mov
and
add
mov
cmpsb
roll
scas
setl
rcll
push
in
andl
les
cmpl
cmc
jge
fcomp
xorl
cmp
ret
jecxz
in
pop
or
int3
or
mov
ret
push
pop
mov
mov
cmpb
in
add
imul
loopne
out
sbb
cmp
mov
sub
mov
xlat
in
sbb
xlat
jp
xchg
faddl
mov
rorb
and
sbb
or
jno
sbb
cmpsl
inc
cld
dec
or
xlat
dec
loop
mov
mov
fwait
cmp
add
cmp
sarb
and
jb
subb
and
ret
clc
inc
test
sub
testl
cld
ss
sub
adc
push
dec
outsb
mov
jns
pop
add
and
out
pop
push
lret
mov
out
mov
add
out
hlt
adc
cmpsl
fsub
in
mov
xchg
call
ret
push
icebp
arpl
xor
push
dec
xor
mov
adc
les
sarl
leave
ljmp
jns
test
rorb
pop
pop
jle
ds
add
or
adcb
cmp
sub
pop
xorl
jl
xor
into
movsl
icebp
push
inc
mov
adc
push
and
mov
mov
ja
mov
fdivr
iret
sub
inc
ljmp
jg
subl
insl
test
mov
rorb
out
add
or
mov
dec
loopne
fbstp
adc
sbb
cmp
loopne
mov
push
outsb
and
sub
cs
in
cmp
scas
mov
popf
loope
sub
pop
cmp
pop
and
mov
cmp
xor
sub
jg
add
shlb
jl
add
out
iret
dec
inc
jecxz
xchg
push
cmp
dec
push
cmp
insb
fcomps
pop
lea
pop
jo
pop
mov
cwtl
ret
in
scas
decb
test
mov
mov
pop
std
cmp
movsb
jo
in
or
sub
dec
jnp
dec
and
mov
sub
ljmp
cmp
inc
mov
xor
add
mov
shlb
clc
loope
jno
loop
inc
daa
push
xchg
lret
lahf
cmc
sub
pop
into
inc
pop
cmc
clc
lea
sbb
add
pop
mov
jmp
loopne
jmp
sbb
call
cmpsl
pusha
inc
and
popa
lock
mov
aad
outsl
xchg
cli
or
push
bound
xchg
lds
insl
fisubrs
mul
and
mov
loop
inc
cmpsl
sbb
js
insb
dec
cmp
clc
stc
inc
inc
mov
bound
jle
fsubrl
jno
lds
or
mov
jp
icebp
loop,pt
mov
add
adc
add
movsb
addb
push
pop
add
sub
mov
sti
lds
push
cli
inc
jo
orb
inc
cmp
or
adcb
stos
mov
mov
out
inc
push
inc
mov
push
lret
mov
ret
fldenv
xor
inc
jecxz
clc
inc
gs
addl
ss
dec
insb
adc
push
add
fimull
pushf
scas
cld
xchg
xchg
mov
push
cmpl
or
mov
pop
ret
xor
push
jecxz
hlt
aam
pop
mov
popf
sti
out
test
cmp
pop
push
fbld
sbb
sti
in
insb
test
adc
outsl
aad
pop
test
cmpb
ljmp
scas
shlb
and
pop
je
add
fidivrl
imul
mov
sbb
ret
jbe
pop
adc
pop
mov
and
movsl
push
insb
js
xchg
sahf
or
ljmp
call
mov
and
fwait
or
sbb
sbb
and
jmp
loope
lock
mov
sub
add
aas
cltd
rcrb
xchg
lds
adc
mov
add
jge
mov
loop
adc
ror
jp
mov
dec
pop
ljmpw
cld
xor
and
sub
and
pop
hlt
lret
shlb
fwait
loop
xorb
or
adc
div
jge
in
clc
xor
push
cmp
inc
dec
shll
jl
mov
fadds
ja
or
cmp
sub
inc
mov
inc
adc
addr16
subb
fmulp
cmp
rolb
pop
xor
add
jo
out
and
sbb
and
xchg
clc
aad
jo
orb
mov
loop
out
ss
ss
add
pop
jne
arpl
jnp
mov
movl
std
jmp
mov
and
sahf
shlb
inc
add
cmp
cmpsl
and
xchg
push
stc
stc
push
in
push
bound
push
test
push
test
lea
call
cmc
add
flds
sbb
arpl
cwtl
js
push
inc
xchg
mov
leave
pop
mov
push
out
pop
cli
mov
mov
cmp
aas
loop
inc
xor
inc
lahf
xchg
orb
dec
stos
sbb
pusha
aad
lods
xchg
mov
shl
mov
and
faddl
mov
pop
lods
test
out
int3
test
shr
mov
or
inc
adc
inc
or
inc
push
sti
inc
push
xchg
dec
add
xchg
test
pop
iret
mov
ret
sti
pop
clc
push
xchg
xchg
lret
mov
mov
mov
push
push
popf
test
icebp
jle
push
sbb
add
xor
sub
or
add
sahf
mov
pop
sbbb
scas
sbb
shr
adcl
rcr
jns
or
push
or
adc
stc
cmp
inc
in
jge
xchg
lock
fdivrs
outsl
or
fdivs
dec
wbinvd
pop
jo
lock
pushf
ret
inc
psadbw
adc
add
sbb
xor
or
addl
sbb
rorb
push
mov
test
mov
mov
imul
xlat
fcoml
mov
pop
into
or
jge
lcall
push
jo
hlt
fisubl
mov
pop
xor
sbb
add
sub
pop
jp
pop
xchg
mov
mov
xor
or
mov
and
in
mov
mov
shlb
mov
jno
pushf
xchg
mov
jb
cmc
pop
ret
sbbb
lea
push
cmp
sbb
cmp
sub
or
lret
test
jbe
cmpsb
jb
fwait
xchg
ret
xor
mov
test
out
xor
iret
pop
add
cmp
std
pop
sbb
shlb
jmp
fsts
and
addr16
pop
scas
lock
mov
adcb
jno
mov
test
and
cmpsb
xor
test
test
lret
cmp
movsb
out
cli
xlat
clc
adc
inc
add
pop
clc
sbb
adcl
push
aam
enter
lock
pop
and
dec
push
cmp
mov
aad
mov
and
pushf
xor
push
sbb
pop
mov
push
jmp
add
out
xchg
nop
pop
mov
dec
loope
add
ja
mov
or
mov
jp
rcl
sahf
rclb
cmpsb
inc
pusha
jne
lret
fcmovne
mov
addr16
std
fbstp
inc
outsl
cmp
iret
inc
add
test
sbb
xor
shrb
outsb
aam
pop
adc
fidivl
adc
mov
es
mov
push
and
inc
dec
cmp
inc
jmp
in
outsb
pop
cmp
cmp
repnz
lret
adc
adc
pop
add
dec
sbb
jae
mov
add
int
inc
inc
xchg
mov
in
jge
ljmp
adc
lret
add
jl
push
push
lods
dec
push
fisttpll
sarb
add
jecxz
in
sub
mov
pushf
pusha
xchg
out
aas
lcall
mov
adc
notl
push
and
test
faddp
xlat
or
mov
pop
mov
pop
inc
cmc
push
cmp
sbb
movsl
icebp
loop
jb
jge
mov
or
mov
adc
ljmp
test
jbe
push
les
bound
pop
push
jo
sbb
mov
test
push
rcl
sub
adc
clc
push
xor
mov
das
lock
js
mov
dec
stos
jp
mov
jle
adc
enter
sub
jle
adc
enter
mov
int3
lret
push
jge
mov
mov
sbb
inc
and
int3
lds
push
add
pop
pop
cmp
sub
jbe
push
cs
dec
push
and
notl
jl
xor
add
jge
mov
hlt
test
sbb
push
push
mov
adc
adc
jnp
sbb
jne
jp
in
mov
push
dec
and
push
push
mov
xchg
push
bound
imul
add
es
or
dec
dec
bound
sub
cmp
jns,pt
add
ds
flds
fld
mov
pop
bound
inc
mov
lcall
add
mov
and
mov
or
fdiv
nop
sbb
cmp
fs
xchg
mov
cmp
jl
push
movl
mov
jbe
bound
xchg
cld
sbbb
lds
inc
add
dec
push
add
adc
pop
inc
out
or
cmp
andb
bound
sub
je
add
jae
je
push
xor
add
les
scas
sbb
mov
or
mov
outsb
outsb
sbb
ja
pop
xor
mov
xchg
dec
lahf
jo
pop
es
and
inc
push
xor
inc
ret
sahf
ret
pop
and
dec
call
andl
add
shlb
add
movsl
sbb
dec
adc
cmpsl
jb
dec
daa
sarl
test
xchg
push
mov
loope
and
sub
jl
pop
xor
jo
pop
adcl
or
popf
cmp
out
inc
cmc
stos
cmp
ds
das
lods
adc
es
in
hlt
adc
sbb
rol
pusha
cld
xchg
push
test
hlt
test
or
xor
pop
adc
dec
push
sub
and
movsb
pop
dec
es
aam
or
in
xor
sub
mov
pop
sbb
out
push
sar
imull
sbb
and
mov
fwait
lock
addr16
rol
cmp
mov
push
xor
xor
ja
cmc
xchg
ss
aas
mov
enter
sub
testl
dec
inc
cmp
pop
ss
out
mov
mov
mov
add
sub
jg
es
inc
sbb
ret
and
jo
scas
repz
and
das
lea
call
repnz
outsl
push
pop
scas
jmp
into
adc
adc
push
cld
xchg
sbb
inc
scas
inc
cld
cmp
popa
outsl
or
add
leave
in
and
and
or
xchg
mov
adc
push
xchg
jmp
pushf
jle
std
lods
enter
bound
pop
push
push
jge
lock
inc
jg
pop
or
stos
and
inc
adc
mov
adc
shl
or
aaa
pop
jp
mov
cli
push
xchg
sbb
fwait
ja
push
cltd
adc
pop
or
fisubs
mov
add
jnp
pop
dec
je
mov
pop
pop
insb
adc
fldl
aaa
hlt
pop
sub
inc
ds
js
mov
cmp
fdivrs
pop
rclb
rol
shl
adc
jle
iret
inc
adc
push
mov
lea
jmp
push
pushf
lock
add
test
lock
and
ja
scas
xchg
int
mov
sub
push
fnstenv
in
fidivrs
add
mov
mov
mov
xchg
push
dec
dec
fiaddl
xorb
dec
je
sbbl
mov
push
mov
sub
xlat
cmp
nop
loope
ljmp
add
push
movsb
dec
fs
out
inc
lahf
out
and
les
add
js
pop
xchg
scas
imul
sbb
and
ss
xor
jne
and
int3
fsubrs
arpl
mov
pop
in
jmp
xchg
fistpll
jo
inc
pusha
push
xor
aam
cmpsl
scas
cli
dec
daa
mov
out
lds
daa
dec
cmpl
scas
test
adc
inc
cmp
or
loop
cmp
push
arpl
xchg
xchg
out
lret
inc
add
adc
arpl
pushf
stos
fsubrs
fwait
pop
pusha
rcrb
jae
aam
xor
or
out
push
and
in
sub
ljmp
clc
mov
jno
add
fwait
jge
mov
mov
cmp
lcall
das
mov
push
in
adc
jge
call
pop
jmp
sub
inc
lahf
sub
out
push
mov
mov
lret
scas
dec
xor
out
add
adc
es
pop
xchg
out
lcall
pop
push
mov
cmp
shlb
pusha
mov
add
scas
jmp
mov
pop
and
lret
fs
push
and
ljmp
xchg
cmp
push
cli
pop
inc
push
ret
push
jb
aad
xchg
out
lock
cmp
mov
dec
test
imul
lods
mov
jbe
ret
gs
dec
fidivs
pop
mov
adc
push
sub
mov
bound
mov
dec
or
jnp
jp
out
inc
xchg
into
loopne
add
out
mov
dec
inc
xchg
add
pop
sbb
mov
in
xchg
inc
sub
arpl
orb
jecxz
test
sbb
mov
fcoms
icebp
test
lahf
xchg
or
push
stos
push
and
inc
outsl
int
js
pop
xor
jp
mov
add
loopne
push
lret
push
cwtl
rcl
repz
add
and
push
sahf
cmp
jo
cs
pop
daa
jno
call
pop
add
sub
dec
mov
push
mov
subl
add
dec
mov
or
lea
add
jae
xor
cmp
inc
int
add
aas
repz
push
and
ret
push
dec
mov
imul
andb
cs
fs
jge
sub
xor
mov
mov
stos
mov
pop
mov
pop
and
sbb
adc
shr
leave
jle
stos
push
xor
sbb
pop
push
lret
jp
imul
sub
popf
push
daa
les
or
mov
push
scas
shl
ja
add
mov
sub
ds
fildll
les
dec
adc
hlt
rolb
inc
jb
mov
pop
ror
mov
test
push
je
dec
test
lods
pop
inc
aam
push
clc
ljmp
dec
sti
and
rorb
pop
ljmp
sub
int
mov
fists
inc
pop
sub
sbb
rorb
js
fcmovnbe
nop
jb
jp
xchg
ljmp
ficoms
mov
push
push
xor
sub
add
fisubl
pop
imul
and
xchg
aad
sbb
xorb
sub
neg
jmp
add
outsb
cmc
mov
pop
sbb
push
fs
mov
sub
add
pop
xor
shll
adc
ja
aas
sbb
popa
push
dec
subb
testb
inc
outsl
adc
xor
push
lods
lret
dec
cwtl
fmuls
push
sub
sahf
je
jno
int
cltd
sub
shrb
insl
movsl
lret
push
inc
or
inc
xor
testl
jp
into
test
add
cmp
sbb
les
add
jbe
sbb
mov
adc
sahf
dec
or
xchg
cmp
loopne
mov
fwait
and
and
call
add
mov
xor
lds
fistl
push
add
push
aas
ficompl
mov
popa
mov
test
pop
lock
mov
test
pop
jp
add
mov
ss
dec
nop
cwtl
inc
imul
ljmp
roll
ss
and
inc
cli
mov
xor
in
add
mov
sbb
mov
iret
repnz
sbb
mov
loopne
pop
rcrb
adc
pop
lock
rcll
outsl
mov
or
push
push
out
aam
mov
mov
ret
imul
or
sbb
push
ds
inc
xchg
cmpsl
jle
or
or
mov
js
mov
out
inc
cmpsb
xorb
ljmp
jae
mov
mov
cmpsl
into
xorb
sbb
or
fnstenv
adc
cmpsb
jecxz
cld
mov
nop
pop
movsl
or
ficomps
sbb
inc
cmc
dec
test
pop
test
ret
sbb
add
cld
sbb
push
pusha
idivl
in
repnz
ret
mov
jl
sub
mov
xchg
jbe
nop
popa
push
or
sbb
dec
mov
inc
xor
jle
xchg
cli
aam
loopne
aas
lcall
rol
pop
inc
add
loop
mov
cld
inc
ljmp
fldt
cmp
inc
cwtl
mov
les
stos
fwait
xchg
and
jno
push
push
je
fsubrs
push
mov
arpl
mov
es
push
mov
push
inc
dec
cmp
dec
xor
or
enter
mov
mov
rcll
out
data16
cmp
fwait
in
push
shl
je
adc
push
add
inc
pop
out
adc
les
sub
mov
bound
jge
fwait
xchg
ljmp
adc
cmp
aas
adc
or
lock
sbb
sub
fistl
mov
outsb
inc
inc
pop
loop
insb
jle
fisttps
gs
cs
jno
test
loope
mov
nop
pushf
imul
pop
call
jmp
xchg
cmp
add
push
sub
ret
xchg
hlt
pop
xor
add
fmuls
sarl
inc
lods
cs
mov
clc
mov
sub
pop
shl
notl
jmp
mov
xchg
mov
cwtl
icebp
nop
xchg
ljmp
and
mov
repz
jmp
cltd
mov
mov
fisubl
dec
mov
loop
push
and
adc
out
sbb
andb
pop
lahf
cmpsl
or
add
or
mov
sub
xor
sti
adc
or
cmp
clc
push
jno
jecxz
gs
inc
fisttpl
shrl
cmp
fcmovbe
push
xor
test
xor
dec
jmp
jg
rol
and
mov
sub
jp
fs
cmp
aam
leave
push
jbe
ficomps
pop
lahf
mov
stc
push
sub
repnz
sbb
bndstx
js
mov
jp
fldt
pop
jbe
sbbb
std
data16
xchg
mov
mov
push
cld
mov
and
xor
cmpsl
cwtl
clc
dec
inc
mov
movsb
dec
std
dec
test
repnz
sbb
js
in
and
xchg
cld
cmpsl
stc
loopne
inc
mov
sbb
inc
xchg
and
push
in
les
sbbb
frstor
int3
push
sbbb
sbb
out
test
add
push
ljmp
push
inc
ja
dec
pop
sub
pop
dec
push
and
or
sub
lds
das
test
push
pop
xchg
adc
out
inc
adc
jp
cmpsb
je
popf
and
mov
xchg
cmc
and
clc
ret
ds
movsb
inc
mov
jl
push
mov
mov
mov
movsb
sub
add
cmpsl
dec
cmp
push
inc
movsl
lcall
and
leave
push
cmpxchg
push
add
dec
repnz
xlat
outsl
js
push
adc
cmp
sbb
and
xchg
cmp
incb
and
xchg
inc
xchg
xchg
dec
fcomps
inc
lods
rclb
mov
sbb
in
mov
and
cltd
or
incb
outsb
cld
adc
jp
mov
and
repnz
add
push
xchg
push
pusha
xchg
add
mov
nop
adc
shr
test
mov
imul
add
les
subl
xor
push
jl
pop
jl
scas
adc
stos
rclb
movsb
arpl
push
dec
cmpl
xchg
mov
and
or
cmc
sbbb
cmp
mov
mov
sub
push
or
xchg
jg
scas
or
add
mov
add
insl
mov
in
add
jecxz
mov
sbb
mov
dec
stos
cltd
lods
xor
adc
adc
adc
rep
jg
addr16
aas
ds
mov
adc
ljmp
jbe
movsl
mov
in
mov
cmc
pop
cmp
loopne
xor
and
adc
lahf
mov
outsb
bound
cli
pop
mov
dec
lods
push
clc
dec
js
adc
aas
and
std
jno
mov
jecxz
pop
aas
jecxz
test
adc
popa
push
scas
into
shr
inc
jb
lods
sti
inc
aaa
add
mov
pushf
icebp
pop
xor
xor
xor
jmp
cld
or
inc
jb
sbbb
dec
mov
pop
inc
inc
repz
aaa
pusha
adc
sub
or
rolb
adcb
shlb
mov
fbld
rcrb
cmp
mov
loope
cs
nop
or
inc
in
mov
ja
add
aam
in
das
mov
cmp
ficoml
jno
and
cmpb
mov
pop
iret
mov
dec
mov
bound
fnstcw
lea
add
pop
testl
adc
cli
aas
aas
and
dec
sbb
and
stc
or
push
xchg
add
mov
leave
push
call
mov
inc
les
inc
scas
mov
out
xchg
mov
iret
insb
push
out
push
mov
sahf
push
cmp
mov
movl
imul
or
or
orb
bnd
jg
mov
out
rcll
mov
in
sbb
push
and
rcl
push
sbb
push
std
and
stos
mov
dec
mov
adc
xchg
mov
pop
add
inc
jl
popf
inc
mov
cmpsl
outsb
sbb
ds
dec
inc
jo
sub
xor
pop
mov
and
dec
adc
and
gs
or
mov
into
hlt
std
mov
cltd
add
adc
cltd
xor
adc
jmp
inc
push
xchg
leave
xchg
adc
add
mov
stos
push
push
cmp
mov
sub
cmpsb
add
mov
jmp
insb
sbbl
jg
xchg
lock
inc
or
or
nop
jns
daa
mov
push
inc
or
push
rolb
mov
pusha
popa
xor
hlt
call
inc
xchg
sbb
mov
mov
data16
adc
pop
ret
push
cmc
push
pop
lods
pop
int3
dec
ja
fdivs
jmp
pop
lods
rcrl
pop
sar
sub
adc
testb
dec
mov
jb
adc
pop
add
fnstcw
pop
push
lock
jl
pop
test
into
sar
push
out
cmp
cmc
jecxz
clc
ds
xor
insl
roll
gs
in
jmp
test
pop
adc
dec
inc
mov
push
mov
mov
lret
inc
pushf
imul
cmp
outsl
enter
icebp
pop
and
shl
or
dec
xchg
movsb
add
cmp
rcrl
std
push
pop
cmp
imul
inc
leave
sub
mov
mov
ss
xchg
add
mov
pop
push
int
les
shlb
test
and
and
negb
mov
movsl
les
pop
ret
mov
pop
and
push
lds
cmp
inc
sbb
pop
adc
jmp
femms
jecxz
jp
and
dec
mov
push
enter
test
enter
stc
dec
cmp
aam
or
pop
shrd
sti
mov
sub
mov
mov
das
jno
test
cmpb
clc
fcmovbe
push
add
sub
shlb
mov
push
push
cli
mov
ret
sti
ret
das
adc
sub
pop
xor
stos
push
jle
repnz
dec
fwait
insl
ret
sarl
inc
inc
pop
scas
mov
sub
fisubrs
sbb
jb
lock
das
pop
mov
adc
jns
clc
mov
loop
jecxz
aas
add
out
adc
fadds
or
add
ret
sbb
hlt
pop
enter
ret
clc
pop
out
and
add
not
sub
sbb
shll
sets
xchg
int
and
push
aad
push
imul
inc
daa
jne
enter
xlat
dec
pop
sub
jg
adcl
pop
call
stos
mov
in
mov
mov
sbb
mov
mov
in
inc
aas
lock
lahf
mov
mov
and
das
pop
jnp
pop
adc
sbb
sahf
jo
loopne
fwait
loope
sub
leave
xchg
scas
add
mov
roll
mov
aad
push
in
nop
addl
es
adc
xchg
and
mov
rolb
push
out
pop
xchg
add
cmp
js
xchg
jmp
and
lods
pop
xor
ljmp
sbb
loope
push
imul
movsb
in
popf
pop
jl
out
push
jnp
sbbl
rol
pop
test
lret
cmp
outsb
callw
mov
xor
adc
sub
xorb
mov
xchg
fldenv
hlt
xchg
ljmp
jo
call
dec
jp
inc
cmp
ret
mov
inc
and
aas
clc
inc
lahf
cmc
mov
cli
mov
xchg
enter
adcl
orl
fisttpll
dec
mov
dec
ja
adc
xchg
sbb
outsl
mov
mov
es
loop
xor
dec
repnz
ss
sbb
sub
mov
jo
pop
or
js
movsb
dec
mov
xchg
pop
sub
mov
cld
sub
sbb
lcall
sbb
mov
xchg
lds
sbb
call
add
xchg
in
xchg
jl
xchg
movsl
test
ret
loope
inc
mov
mov
lods
jg
bound
inc
jecxz
or
and
repz
movsl
pusha
jb
jnp
add
cmpsl
mov
ds
cld
repz
pop
dec
bound
test
or
mov
sbb
or
out
push
aas
jmp
push
dec
ss
sahf
popa
or
jnp
lods
into
mov
dec
aaa
adc
jmp
pusha
aam
jp
xchg
je
mov
or
repnz
jne
sub
add
pop
ret
sbb
push
dec
insb
sub
mov
dec
sub
out
std
cmpsl
outsl
mov
addr16
mov
fiaddl
xchg
orb
add
jle
push
push
adc
test
sti
and
push
stos
inc
sti
popa
pop
insl
mov
repnz
cmp
xor
add
aam
xchg
dec
push
mov
fsubrs
inc
or
fmuls
pop
or
scas
ljmp
loope
cmp
mov
pop
jl
push
push
imul
hlt
stc
jge
subl
add
adc
test
scas
sarb
dec
clc
or
dec
je
aad
xchg
add
sbb
in
jne
push
dec
out
pop
loope
or
xor
sub
or
jge
sub
mov
lret
es
incb
xorb
xchg
xchg
aam
insb
push
sar
dec
fildll
cmpsb
je
pop
out
rcr
test
fwait
pop
mov
out
pushf
mov
pop
sbb
mov
dec
mov
cmp
adc
int3
push
mov
test
es
cwtl
mov
mov
hlt
mov
dec
sbb
adc
mov
push
add
fucomip
lea
jns
and
sbb
sbbb
hlt
mov
test
dec
cwtl
hlt
mov
xchg
pop
shr
mov
adc
jns
adc
jb
push
mov
inc
sbb
pop
mov
mov
push
aad
stos
daa
jmp
loopne
xchg
lods
rcr
shl
mov
sub
xorl
dec
pop
or
and
dec
in
clc
sub
imul
push
daa
push
orb
inc
dec
jecxz,pn
pop
inc
mov
or
out
aam
clc
sub
or
dec
ret
or
imul
xlat
and
sbb
rcrb
call
jmp
loop
add
ljmp
mov
sbb
jg
lahf
dec
nop
out
sub
outsl
dec
loope
push
pop
or
inc
or
test
mov
addb
fbld
mov
inc
mov
mov
sbb
test
aad
stos
gs
in
lock
add
mov
lret
and
jg
inc
fsubrs
mov
jle
inc
sub
jo
push
cmpsl
imul
scas
push
jnp
pop
loopne
add
or
ds
int
adc
aas
mov
loop
repnz
pusha
aam
pop
movsb
push
and
xchg
adc
push
push
xchg
sbb
adc
decb
movsb
incb
cmpsl
add
lods
hlt
mov
dec
push
mov
push
pop
jne
lock
rolb
inc
sub
lock
leave
jp
sub
ror
sbb
roll
imul
mov
fcoms
imul
sub
js
enter
aad
pop
sti
in
repnz
int
lods
cld
jmp
bound
push
add
push
inc
or
add
fimuls
sbb
mov
out
and
lahf
sub
cld
testl
ljmp
mov
out
cli
sub
xchg
jp
pop
les
jmp
jge
fld
push
andb
orl
jns
bound
popa
cs
mov
jmp
adc
mov
push
lods
sub
pop
inc
adc
cvtps2pi
push
les
jle
jb
loop
das
call
out
pushf
out
jno
imull
ljmp
cli
sub
testb
pushf
xchg
insl
push
js
sti
ss
adcb
mov
ret
pop
lods
scas
insb
lods
push
cld
mov
or
hlt
daa
fisttps
push
xchg
repnz
int3
inc
outsb
cmp
push
add
in
test
inc
pop
popa
inc
pusha
clc
add
loope
cwtl
testb
push
and
adc
xor
fsubs
pop
fimuls
inc
cwtl
sub
aam
mov
mov
mov
inc
inc
test
movsb
pop
lock
cltd
push
shlb
inc
popf
add
xor
cs
jbe
shll
es
mov
lret
inc
inc
cmp
xchg
call
inc
dec
std
adc
sarb
lock
lock
or
arpl
ret
dec
sub
push
hlt
aam
cmp
addb
add
cmpsb
test
subb
mov
or
scas
mov
jo
fcmovb
xor
sbb
insl
cld
cs
mov
movntq
xchg
nop
adc
in
xor
popf
insb
fs
outsl
arpl
cwtl
jge
add
aam
in
sbb
dec
pop
cmp
lcall
out
add
and
data16
arpl
push
push
mov
and
fwait
lcall
jge
pop
mov
sub
mov
fnsave
ret
or
aas
jecxz,pt
and
jmp
into
scas
sbb
xor
mov
sbb
mov
repnz
sti
loopne
aam
xor
xchg
out
fimull
mov
in
push
popf
sub
loop
mov
sbb
insl
orb
pushf
aam
mov
clc
icebp
popa
sbb
daa
jp
outsl
in
je
xorl
dec
mov
mov
fisubrl
inc
cmp
mov
ret
xchg
or
call
or
cmpsb
enter
jg
in
int3
mov
jae
jno
inc
arpl
and
sub
es
cltd
mov
lock
aam
mov
das
mov
adc
cmp
jb
dec
aad
dec
test
jo
rolb
mov
adc
add
cld
add
add
imul
mov
cs
mov
pop
add
jo
and
xor
mov
loop
and
mov
mov
inc
sar
pop
fimull
mov
inc
jae
jno
xchg
xchg
mov
in
ja
jge
stos
outsl
mov
push
mov
inc
mov
add
add
pop
lret
int
sbb
mov
pop
sub
pusha
stc
jb
cld
sbb
push
loop
ds
push
sbb
mov
cltd
mov
and
mov
je
adc
ja
aad
hlt
jmp
into
int3
sub
out
iret
lods
xchg
test
xchg
mov
jle
xor
inc
add
mov
cmp
aad
pop
rcl
or
popf
mov
push
mov
xchg
dec
ds
dec
mov
imul
sub
jae
mov
std
inc
jmp
lfs
pop
inc
rol
xchg
sbb
or
out
orb
xor
sub
imull
roll
mov
jbe
lret
stos
mov
adc
adcb
scas
push
dec
test
dec
mov
xorl
mov
xor
aas
das
jo
test
dec
fmul
pop
fisttpll
aaa
add
cmp
insb
out
in
and
cmpsb
add
jl
imul
sub
jo
and
mov
mov
inc
aas
fstpt
xor
push
add
rorb
lock
add
push
incl
imul
jmp
push
fwait
mov
ret
jecxz
xor
mov
cmc
bound
cmpsb
fdivp
xchg
xor
leave
xorb
cwtl
sub
insb
dec
sub
lods
and
pop
enter
icebp
cmp
adc
or
test
xchg
fsubl
mov
adc
ss
jo
sub
dec
sbb
dec
xor
mov
scas
inc
aam
sahf
je
daa
ljmp
fwait
cwtl
mov
lods
pusha
mov
mov
adc
jg
pop
test
mov
sbb
sbb
test
add
data16
mov
nop
je
adc
inc
fistps
imul
gs
push
aaa
push
dec
les
lahf
cmpl
ss
mov
pop
icebp
xchg
adc
xsave
jne
fdivs
lahf
sbb
sub
push
push
mul
mov
ds
notb
ret
mov
mov
cmp
daa
imulb
out
out
cmpsl
or
data16
pop
sbb
rclb
mov
test
add
and
push
mov
jmp
or
mov
outsb
insb
in
add
adc
popa
push
out
ror
mov
fdivl
or
loopne
arpl
pop
jo
out
add
push
jns
push
push
adc
ds
sbb
mov
cmpsb
rcl
incl
ret
mov
or
sti
xchg
mov
sub
xchg
xor
xchg
add
xor
imul
pusha
into
arpl
sub
or
cmp
bsf
mov
ss
gs
mov
cmc
inc
push
adcb
pop
cld
inc
and
push
xchg
add
and
aam
adcb
jae
or
dec
jmp
sbb
mov
mov
cs
push
insl
icebp
adc
xor
mov
inc
movsl
cmpsb
int3
xchg
push
cmpsl
test
decl
adc
mov
and
pop
or
inc
pop
inc
cld
test
pop
mov
int3
inc
sbb
mov
dec
inc
and
sbbb
fisubl
pop
rclb
bound
nop
in
bound
mov
in
popf
add
je
les
in
aam
jecxz
mov
insl
gs
jne
shrb
cld
ljmp
sbb
movsl
lcall
push
jecxz
sbb
ret
popf
cwtl
xchg
iret
mov
mov
les
sub
push
or
daa
xchg
push
cmpsb
loop
lods
sub
mov
js
fimuls
dec
inc
xor
jp,pn
mov
movsb
or
ljmp
add
mov
in
dec
fsubl
imul
or
rcrb
in
jbe
cmp
bound
test
push
mov
or
ret
adc
aas
xor
fld
sub
fs
and
sti
xorb
push
inc
jns
jb
in
pop
fsub
mov
es
ficoml
or
or
xor
mov
dec
push
pmuludq
ret
sbb
ret
fimull
inc
mov
scas
imul
sbb
jae
or
in
clc
xlat
dec
out
cmp
mov
lcall
arpl
push
call
mov
pop
xchg
sahf
in
xor
in
xchg
data16
pusha
push
sub
pop
dec
mov
repz
adc
dec
jecxz
pop
add
jge
dec
adc
bound
movsb
in
clc
xchg
lret
pop
jge
test
fildl
push
leave
rcll
cmp
shll
add
pop
scas
mov
inc
rorl
mov
lods
loop
sub
mov
pop
and
scas
push
xlat
mov
sbb
ficoml
and
pop
test
cmpsl
or
push
and
adc
rorl
xlat
sbb
cld
rol
inc
adc
pop
jb
add
mov
dec
in
jbe
mov
sub
jae
xchg
ret
mov
add
push
mov
xchg
jne
inc
or
lret
fstp
loop
aam
inc
clc
imul
je
lods
or
jmp
cmpsb
movb
add
andb
loopne
loopne
mov
xchg
orb
mull
loopne
fwait
push
and
pushl
cwtl
dec
jb
aas
bound
adc
xchg
das
outsb
xor
sarb
fistps
mov
mov
adcl
or
cmpb
sub
add
les
xor
and
adcb
bnd
ds
pop
aas
gs
dec
cld
in
stc
xor
mov
les
sub
jb
mov
ja
mov
cmp
sbb
or
jecxz
ret
mov
add
or
imul
push
push
dec
mov
push
pop
leave
inc
xchg
cmpsb
cmp
mov
es
dec
addr16
xor
pop
mov
inc
jnp
sbb
mov
icebp
fsubrp
inc
loop
test
fildll
sub
jne
pop
inc
pop
scas
jp
movsl
lcall
mov
adc
std
adc
test
mov
sbb
dec
xchg
mov
faddl
and
and
dec
push
in
fisubrl
fcomps
pop
fs
push
pop
xchg
nop
fcomip
ret
lock
pop
cli
push
mov
out
push
add
inc
cmp
adc
pop
inc
jle
push
dec
mov
mov
sbb
push
jmp
negb
and
test
push
je
adc
hlt
dec
dec
sbb
paddusb
or
push
xor
cmp
shlb
nop
call
clc
aam
sub
sbb
int3
mov
add
inc
inc
imul
shlb
and
mov
mov
cld
dec
subb
imul
pop
leave
or
fdiv
jns
mov
lods
clc
xor
sbb
dec
jmp
addl
rcll
pop
jbe
dec
ret
icebp
int3
adc
push
inc
fs
jp
xchg
cmp
dec
sbb
aad
or
mov
xchg
icebp
vpperm
xor
leave
test
clc
inc
sti
sarl
insl
mov
sbb
aaa
push
push
lods
and
dec
js
add
sbb
lret
scas
adc
jb
outsl
cmp
dec
jl
adc
pop
mov
sbb
es
mov
call
out
inc
mov
aad
call
pop
jp
int
gs
test
ficompl
shr
daa
clc
mov
push
pop
and
mov
lret
nop
cmp
and
sub
lret
jne
enter
sbb
jmp
cmp
ljmp
inc
leave
inc
cmpsl
fsts
or
pop
xor
push
idiv
sti
pop
xchg
xorb
pusha
sbb
push
sbb
adc
aad
cmc
lret
insb
mov
xchg
insb
jg
push
loopne
pop
inc
sub
inc
out
add
dec
cld
in
clc
test
adc
lea
addb
sbb
mov
mov
jl
sub
lods
fildll
cmpsb
mov
stos
std
jb
pop
inc
push
pop
mov
sbb
sbb
mov
push
adc
hlt
sar
mov
sub
es
push
adc
dec
mov
jg
popa
lods
pop
cli
adc
pop
jl
or
jge
lcall
add
adc
push
xlat
aas
xchg
testl
sub
sub
ljmp
imul
in
test
inc
ror
bound
pusha
xor
or
and
sub
mov
push
inc
rorb
jle
lods
test
sbb
scas
fsubr
aad
test
mov
lret
loop
mov
loopne
rcrb
aad
cmp
add
or
loope
xchg
mov
sbb
popa
add
scas
pop
hlt
call
mov
pop
pop
inc
loopne
shrl
cld
pop
hlt
addr16
outsb
inc
aaa
add
and
mov
arpl
pop
jp
cmp
add
testb
lahf
or
or
movsl
ljmp
inc
mov
inc
test
sbb
nop
xchg
mov
test
pop
jge
pop
fdivrs
or
lods
xchg
je
imul
mov
fists
adc
fildl
inc
mov
sbb
add
add
je
adc
leave
cmpsb
mov
push
incl
mov
ljmp
lods
fiaddl
adc
leave
push
ror
mov
mov
jl
add
sbb
leave
in
xor
mov
adc
scas
movsb
lods
mov
jecxz
insb
mov
les
adc
pop
inc
xor
adc
adcl
cmp
add
ficoml
or
sbb
rcl
inc
loope
mov
shlb
rclb
movsb
ficompl
ret
xor
andb
sub
loop
push
sbb
xor
lock
loop
ss
pop
xchg
nop
int3
shlb
lahf
out
js
mov
fs
es
dec
adc
icebp
xchg
push
in
xor
andl
jnp
jb
mov
mov
jmp
mov
fs
ljmp
xor
add
rorb
insb
sbb
fwait
dec
add
or
cmc
jmp
and
aam
push
jge
das
jg
xor
addr16
sub
cmc
mov
mov
sub
mov
iret
xor
cmpl
jo
bound
inc
push
scas
add
gs
rolb
ret
mov
sbb
sub
orb
adc
js
sbb
filds
sbbb
mov
mov
pop
clc
in
push
jp
fimull
adc
aas
cmp
mov
pop
ds
pop
push
sub
xchg
add
fwait
xabort
sub
ja
sub
xchg
mov
scas
mov
mov
jb
mov
loopne
push
mov
and
movsb
adc
push
and
es
neg
xor
rcl
dec
push
xor
icebp
jns
adc
cld
addr16
scas
pop
sbb
adc
ret
shll
scas
movsb
ret
dec
inc
adcb
jle
dec
aam
mov
test
mov
xchg
aas
pop
xor
inc
mov
cmp
pop
sub
pop
xchg
andb
pop
sahf
mov
lock
xor
ss
shrl
addr16
pushf
mov
dec
jg
inc
inc
cs
and
addr16
dec
dec
lcall
neg
xor
sub
sbb
adc
sub
pop
rcrl
push
push
dec
clc
je
dec
loope
adc
add
subb
mov
ret
into
xor
and
icebp
push
or
mov
mov
xchg
inc
and
jp
adc
fs
dec
mov
pushf
jnp
mov
shrb
pop
xchg
shll
dec
and
loope
leave
cmc
scas
mov
jmp
dec
xor
jno
sti
scas
mov
pop
and
lds
inc
cltd
inc
icebp
mov
in
ljmp
or
dec
pop
push
pop
scas
cmpsb
lds
sbb
inc
pop
pop
lock
mov
add
popf
mov
xor
loopne
xor
cwtl
rcll
aas
add
scas
shl
insb
fcom
aam
dec
mov
jle
ljmp
ds
aaa
push
inc
sub
movsl
mov
mov
mov
sub
mov
rorl
push
dec
imul
adc
add
xchg
ret
in
sub
pop
push
fsubl
cmp
xor
xchg
orb
les
mov
push
add
pop
inc
je
sbb
icebp
push
or
fs
mov
mov
push
fwait
cwtl
jnp
sbb
add
push
xchg
pusha
cmp
and
ljmp
aam
lock
jg,pn
or
jecxz
add
or
cmc
add
lret
or
outsl
out
scas
push
inc
xor
inc
fdivl
pop
xor
fiaddl
push
or
mov
jle
dec
pop
mov
sti
pop
mov
shrl
nop
pop
push
lahf
hlt
pop
lea
inc
out
outsl
adcb
int
rclb
mov
addl
icebp
leave
cmp
iret
dec
js
lods
fisttpl
mov
bts
mov
data16
cwtl
les
outsb
ljmp
repz
pause
je
jmp
and
push
fiadds
jns
lcall
or
fs
dec
xchg
push
add
xorb
ss
jmp
dec
adc
lret
cs
iret
test
push
cli
cwtl
cltd
lock
xor
inc
lds
lds
ss
pop
scas
testb
sbb
js
repz
and
mov
xchg
shl
dec
jp
cmp
daa
orb
jmp
les
pop
and
arpl
xchg
cmp
out
clc
add
mov
arpl
push
dec
sbbb
lds
int3
mov
stos
jge
jnp
or
mov
in
inc
cld
fldenv
das
clc
gs
xchg
mov
cmp
jo
fmul
mov
jb
fstpl
mov
es
sub
stos
ficoms
pop
xlat
pop
mov
push
out
rcrl
push
lods
pop
xchg
adc
xor
adc
xchg
pop
jp
ret
je
cltd
pop
jb
aad
insl
xor
mov
dec
sbb
and
dec
ss
inc
jbe
lcall
loope
pop
jbe
xchg
mov
push
lret
loopne
adc
std
test
in
sub
jg
in
cwtl
test
cmc
cmp
fsubrl
cwtl
jb
adcl
mov
cwtl
pushf
push
mov
push
in
in
add
jo
sbb
andl
cmc
insl
sub
jl
stos
and
je
outsl
stos
cmp
add
inc
sbb
sar
cs
inc
aaa
sarl
sbb
ret
mov
cltd
repz
outsb
push
push
fcoml
call
jb
adc
mov
xor
lods
iret
clc
mov
adc
setne
lock
sbb
in
mov
adc
mov
dec
aas
insb
lret
xor
lea
rcrb
stos
or
jle
xor
je
in
push
test
dec
test
nop
cmpsb
loop
addr16
adc
push
call
scas
ljmp
push
mov
lods
arpl
pop
sbb
imul
fadds
push
pop
fs
mov
push
cli
jo
pop
rcrb
ljmp
stos
mov
jb
in
xor
mov
mov
mov
subb
or
aas
icebp
mov
cmp
sahf
enter
xchg
or
or
or
sarw
mov
xor
sub
push
xor
push
xor
xor
js
testb
cs
cli
add
xchg
dec
adc
dec
das
or
mov
insb
ljmp
bound
rcrb
shrl
imul
push
push
dec
sub
and
xor
and
mov
dec
syscall
iret
out
mov
imul
clc
and
xchg
mov
lahf
sbb
cwtl
mov
fwait
xor
outsb
lret
inc
add
xlat
sbb
add
fcmovnb
add
push
enter
mov
lea
nop
xchg
xchg
add
adc
adc
cmpb
fists
loopne
lahf
scas
push
in
pop
adc
or
lahf
and
cmpsb
push
cmp
jle
aaa
test
cltd
test
ret
and
aas
mov
sbb
fdivrs
sti
or
or
aam
shll
bound
adcl
clc
push
jmp
or
sbb
jbe
xor
addr16
inc
mov
add
movsl
add
loop
adc
mov
popa
daa
mov
jmp
pop
leave
inc
es
push
cmpb
mov
and
pop
in
lret
inc
movsb
cmp
cmp
dec
outsl
adcb
mov
mov
cmp
mov
nop
mov
test
nop
scas
das
imull
stos
sub
sub
adc
mov
cmp
cmp
test
into
outsb
loopne
call
es
adc
aas
mov
or
inc
or
dec
bound
hlt
lock
adc
lret
fwait
sub
dec
fs
adc
push
push
mov
xor
pop
cmpsb
mov
sbb
adc
push
xchg
mov
js,pn
jne
ds
add
das
mov
xchg
popf
jo
fistpll
mov
iret
xchg
or
and
sbb
xchg
mov
or
jp
mov
cmp
jne
jo
xlat
jmp
push
and
or
mov
jbe
add
dec
mov
outsb
fildl
mov
orb
and
movsl
ds
je
testl
jae
adc
and
into
aas
sbb
aad
nop
lds
cli
loopne
test
rcrb
orb
leave
ret
pusha
je
cmp
icebp
push
popa
xchg
or
push
inc
movl
rolb
sbb
xlat
dec
lea
push
or
jecxz
rolb
sahf
add
push
pop
imul
lcall
mov
mov
inc
adc
or
pusha
in
stc
sbb
icebp
mov
mov
loopne
popa
inc
fistpl
int
lock
mov
stc
sub
and
jecxz
test
xchg
xchg
or
add
je
out
or
iret
outsb
lea
fistpl
nop
mov
inc
lcall
fxch
cmp
mov
out
ljmp
in
add
lret
fwait
xor
cli
xchg
sbb
loop
inc
lock
push
or
mov
addr16
add
cmpsl
lcall
push
inc
mov
jg
push
movsl
jmp
subb
xchg
pop
add
adc
data16
fnsave
pop
xor
adc
fs
adc
mov
les
bound
xlat
pop
loope
clc
adc
sbb
sbb
scas
test
fildl
xor
mov
fnstcw
sbb
xor
outsb
nop
iret
dec
cmp
pop
sub
test
lds
pop
rorl
outsb
add
jmp
or
data16
adc
out
adc
dec
loopne
pop
andl
clc
pusha
pusha
adc
mov
adc
sbb
mov
pushf
mov
add
and
das
xchg
cmp
shlb
push
cmp
push
add
push
sbb
sbb
jmp
fdiv
aaa
loopne
test
jle
stos
aad
pop
pop
insl
fdivrs
daa
sub
arpl
jmp
cmp
pushf
mov
mov
xor
dec
cwtl
xor
fcomps
xchg
outsl
mov
push
sahf
scas
aas
sbb
adc
sub
sub
inc
pop
add
push
xlat
cmp
fiadds
mov
jp
ret
cli
xchg
pop
scas
cld
sti
push
pop
or
add
adcl
add
inc
inc
mov
pop
push
sub
push
xor
sahf
fs
mov
mov
xor
mov
xor
movsb
sarl
mov
enter
adcl
and
and
test
lea
xchg
add
jl
jbe
and
out
jnp
adc
and
pop
ss
out
mov
mov
dec
ret
dec
or
ret
push
iret
jle
inc
cwtl
lahf
sbb
clc
and
xor
pop
enter
jl
test
rcl
sub
lock
fidivrl
jmp
divl
adc
sub
jo
das
or
lret
sbb
ficompl
adc
dec
jp
orb
scas
mov
mov
sahf
sbb
push
mov
inc
push
xchg
hlt
sub
jl
push
cmpsl
lock
adc
pushl
xchg
pop
inc
jecxz
cmp
cs
adc
ljmp
std
sub
add
lods
ret
iret
je
addl
addb
clc
incl
xlat
popf
les
or
mov
xchg
push
mov
cmpsl
fisttps
push
shr
lock
stc
add
pop
jbe
sub
and
xchg
inc
jge
inc
pop
xchg
loop
loopne
in
addl
je
xor
lcall
and
aas
rolb
pop
insl
push
bound
mov
add
cmpsl
test
fcom
insl
mov
push
push
rclb
jl
mov
mov
dec
mov
xchg
xchg
push
loopne
shlb
std
or
pop
mov
dec
pushf
loopne
sbb
add
pop
xchg
push
lahf
jb
inc
sub
push
pop
cmp
orl
pop
sbbb
stos
mov
aad
mov
adc
scas
subb
adcl
mov
shlb
cmc
xchg
sub
and
or
sub
dec
out
scas
sub
clc
js
scas
loopne
push
sahf
cli
call
sub
mov
or
and
and
mull
insl
test
jno
scas
jo
fiadds
sarb
dec
push
sbb
test
sub
sbb
js
loopne
unpckhps
lds
and
ds
mov
das
add
push
adc
loope
jmp
sbb
ds
clc
ret
aaa
add
xchg
and
clc
add
fcoml
inc
insl
mov
dec
ret
add
mov
test
add
pop
lea
pushf
add
jo
mov
cmc
das
cmp
insb
pusha
sbb
daa
inc
inc
rolb
jecxz
cmp
dec
and
in
mov
outsb
cmp
and
mov
sbb
das
jp
adc
mov
fwait
xchg
sbbb
pop
filds
imul
cmpsb
cmp
mov
rcrl
push
not
mov
mov
out
cld
outsl
fs
mov
ficoml
sub
push
in
mov
out
js
rolb
out
test
mov
push
push
rcl
cmovo
adc
lock
and
mov
std
shl
and
shrd
cmpsl
lods
sub
xor
jle
pop
rcl
insl
mov
xor
aaa
mov
bound
and
pop
aaa
lods
mov
xchg
add
bound
cmp
jl
xlat
jl
sub
fbld
or
shrl
pop
in
out
insb
ljmp
mov
and
lods
fwait
cmc
pop
mov
push
sbb
pop
je
jp
test
push
movsb
mov
test
rclb
and
ss
enter
clc
idivl
jo
out
ds
pop
or
cmp
lret
jb
xor
cs
fwait
test
push
cmp
jno
sti
cmp
loope
shr
pop
xchg
clc
dec
xor
mov
call
jno
vmovss
rcrl
adc
jnp
daa
in
or
repz
xchg
imul
pusha
into
xchg
roll
inc
or
fisubrs
data16
pop
fildl
mov
nop
xor
orl
mov
sbb
mov
push
pop
lret
fs
inc
fnstenv
xor
inc
and
mov
and
and
incb
add
movsb
jp
push
insb
mov
lods
inc
push
mov
inc
mov
mov
lods
dec
xchg
subb
cmp
xchg
inc
jmp
pop
nop
xchg
xchg
shlb
and
das
xchg
ret
push
adc
xchg
jg
in
push
sbb
or
test
xorb
es
xchg
pop
daa
sub
jge
pusha
and
in
push
ret
dec
lea
test
cltd
cmpsb
cmpxchg
fldt
icebp
cmp
clc
push
icebp
pushl
cmp
out
movsb
in
ror
and
adc
mov
dec
mov
sub
push
xchg
popl
push
into
fdivr
cmp
or
adc
fwait
mov
hlt
xchg
sub
xor
push
mov
lret
stos
lret
mov
mov
jb
xchg
sarb
xor
fcomps
out
mov
jge
out
dec
mov
mov
or
repnz
fdivrl
scas
fisubl
ss
dec
std
add
std
es
add
call
clc
rcrl
dec
sub
aam
inc
or
mov
push
dec
sub
mov
lods
push
mov
cmp
push
les
push
das
sub
idiv
dec
adcl
insl
push
cmp
or
push
mov
insb
pop
aam
mov
sub
cwtl
in
pop
mov
into
or
dec
pushf
dec
aad
jno
lahf
pop
or
adc
clc
sti
mov
push
xor
dec
cmpsl
bound
hlt
mov
inc
add
adc
push
inc
popa
sbb
std
in
test
inc
lea
test
mov
adc
mov
das
adc
dec
mov
jbe
jl
pop
or
or
outsl
lods
hlt
cld
mov
xchg
subb
cmpb
and
xchg
cli
cld
push
clc
sub
mov
dec
outsl
and
adcb
add
insl
arpl
mov
out
orb
push
aaa
adc
ret
stos
mov
inc
jb
scas
or
push
test
aad
rcr
je
pop
jo
insl
fldenv
or
enter
test
or
mov
mov
hlt
mov
test
xchg
rclb
pop
add
dec
mov
je
xor
lds
pushf
push
adc
sarl
adc
jbe
rol
aaa
adc
repnz
ret
sbb
or
fidivl
adc
xor
hlt
jecxz
push
repnz
adc
push
mov
add
rcr
dec
in
aas
pop
or
sub
pop
stos
fdiv
and
xchg
pop
xchg
data16
jg
fidivl
test
push
xchg
sbbb
xor
imul
mov
pop
lds
xor
dec
ss
std
sbbb
addr16
or
nop
repnz
lret
pushf
xor
mov
or
push
incb
jnp
nop
outsb
cmc
lcall
movsb
fcoms
or
or
or
xor
repnz
dec
arpl
sbb
ret
outsl
sub
inc
dec
cmp
add
push
hlt
cmp
ret
int
inc
rorb
mov
or
xchg
push
insl
das
or
xor
int3
jbe
fidivrl
scas
shll
cwtl
mov
lods
jp
in
pop
xor
pop
rcll
or
mov
sbb
add
loope
cld
rcrl
xor
test
sub
mov
sbb
or
add
and
lock
sub
mov
aas
lods
pop
stos
xchg
ds
xchg
dec
sbb
fcoml
in
mov
xlat
mov
repz
scas
and
jbe
loopne
and
xor
or
inc
jmp
or
shrb
cmpsb
outsl
ret
lret
cli
adcb
stc
inc
jo
imul
dec
test
insb
repz
push
cmpsl
mov
enter
aaa
pop
hlt
jns
mov
sub
and
and
ljmp
aas
test
xchg
mov
outsl
dec
push
jle
mov
cli
inc
in
add
lods
sbb
dec
cmp
and
inc
adc
fs
jl
inc
aad
pop
dec
ss
std
or
sub
popl
call
scas
outsb
scas
fsts
and
hlt
sub
xor
in
pusha
mov
pop
xlat
mov
pusha
pop
add
shll
dec
add
and
sbb
es
lock
add
inc
out
sub
stc
inc
push
hlt
cmc
mov
in
aaa
fs
dec
push
divb
pop
inc
pop
cwtl
fnstenv
rep
xor
icebp
shlb
int
jo
fldcw
push
add
sbb
pop
or
lock
and
pop
or
pushl
aas
lock
fsubrs
test
add
add
mov
es
dec
je
cmc
push
cmpsb
add
or
shlb
add
jg
fwait
xchg
inc
sub
mov
dec
mov
dec
dec
push
push
enter
call
xor
loop
mov
jecxz
fists
hlt
iret
ss
pop
into
cmc
shl
hlt
cmp
or
addr16
or
pushl
sarb
repz
ds
aad
sub
or
sbb
fdivl
push
dec
jb
orb
shrb
push
stos
loop
sub
xchg
test
sbb
or
ds
mov
add
loopne
adc
mov
push
sarb
sub
pushf
jbe
les
in
dec
pop
pop
or
dec
adc
and
jge
push
cli
or
rorl
xchg
push
mov
adc
dec
and
adc
cmp
lret
das
xchg
push
in
pop
add
inc
xchg
mulb
sbb
les
aaa
sbb
xchg
or
xor
pop
and
add
adc
loope
shll
and
stos
sub
hlt
jge
ljmp
xlat
xchg
push
test
fcoml
aaa
sbb
loop
je
xchg
mov
pushf
and
cli
mov
es
dec
cmp
cmp
rcrb
pop
xor
test
pop
xchg
sbb
pop
test
push
mov
insb
inc
mov
les
pop
fcoms
cld
mov
test
insl
dec
or
mov
mov
dec
cmp
pop
dec
inc
adcb
sbb
shll
push
mov
fdivrs
xchg
jo
push
pop
push
pop
inc
repz
cmp
iret
ljmp
sbbb
enter
test
and
frstor
jno
dec
loope
pop
pop
sub
mulb
and
pop
mov
lods
pusha
xor
jo
push
or
sub
std
fnstenv
dec
push
mov
cmp
mov
int3
add
cmp
inc
xchg
bound
inc
dec
mov
cmp
insl
jbe
mov
roll
scas
lcall
cmpsb
rcl
mov
lds
mov
aad
add
lock
sub
sti
aam
rcll
push
lret
push
push
adc
std
rcl
mov
sbb
lock
xchg
xor
fldl
clc
mov
jg
vfmsub213pd
inc
pop
loop
or
je
leave
mov
cmp
js
addr16
mov
mov
into
dec
push
pop
cltd
scas
in
incl
jmp
cwtl
or
nop
xchg
shlb
jmp
int
adc
lcall
stos
pop
inc
pop
dec
cli
lret
mov
ds
je
and
or
imul
lods
mov
mov
mov
imul
cli
cmp
adc
js
sub
incl
push
push
pop
inc
xchg
add
cmp
jnp
aas
add
push
dec
insb
and
lcall
mov
int
cmpsl
add
js
ljmp
je
ss
dec
andb
repnz
jle
loope
das
test
int3
or
pop
sti
fcmovnb
pop
push
fisubrl
mov
testl
and
xlat
out
leave
gs
add
dec
aad
into
jnp
bswap
add
dec
mov
sub
lret
out
es
ss
test
and
shrb
test
mov
mov
movsl
call
xor
sbb
mov
adc
jb
out
cmp
mov
in
mov
les
std
les
mov
popf
test
out
sub
fistpll
test
fwait
scas
mov
adc
xchg
mov
ret
lcall
cld
stos
scas
sbb
movb
popf
mov
cmp
in
or
hlt
push
ficoml
ret
fldenv
push
sbb
cmp
sbb
pop
add
mov
in
popf
dec
push
add
sbb
pusha
pop
pop
pop
xchg
ja
jb
movsl
sub
mov
mov
lock
lods
dec
int3
pusha
movsl
pop
les
push
or
ljmp
test
shrl
int3
jp
and
or
nop
stc
inc
enter
push
repz
mov
leave
push
mov
and
int3
inc
mov
sbb
add
addb
mov
in
cmc
shlb
mov
jle
aad
fsubr
push
jnp
push
inc
loopne
push
pop
aam
jge
xor
cmpsb
lcall
or
test
call
mov
xor
mov
gs
sbb
sub
loop
call
add
shrl
mov
and
cmc
pop
push
js
sub
test
lcall
push
and
roll
inc
popa
test
call
ja
cmpsl
sbb
addr16
icebp
push
mov
mov
lock
and
mov
fidivrl
test
push
lret
inc
and
adc
sbb
dec
addr16
test
pop
xor
dec
movl
ljmp
mov
xor
jmp
mov
lea
inc
scas
movsl
hlt
jbe
fsubrl
push
pop
lock
adc
inc
decl
outsl
mov
addb
ror
jl
mov
mov
jns
mov
xor
in
cmp
pop
pop
inc
push
adc
and
mov
mov
loope
push
mov
or
movsl
aam
aas
lds
add
xor
mov
adc
shrl
cmpsl
cmp
bound
inc
ja
sub
cwtl
outsl
movsb
in
call
pusha
std
data16
pushl
push
popf
lock
sbb
lret
mov
cld
gs
out
pop
aad
rcrb
outsl
in
pop
daa
mov
xor
jecxz
ret
xorl
lds
addb
push
outsl
notb
inc
add
imul
inc
out
cmp
sti
xor
inc
loopne
mov
dec
orb
mov
xchg
aas
push
mov
inc
popa
sub
and
outsl
imul
ljmp
scas
stos
nop
cs
mov
loop
inc
adc
movsb
lock
or
push
pop
je
sub
sub
insl
jl
xlat
ret
shlb
sub
jg
mov
mov
mov
fwait
push
sbb
cmp
cwtl
shll
or
lcall
mov
roll
and
imulb
lea
popf
adc
sub
cmp
and
pop
jne
sbb
lahf
cmp
cwtl
cmp
lock
dec
insb
fisubrl
push
mov
xor
and
mov
dec
cmp
sub
stos
arpl
lds
lret
clc
test
xlat
cmp
aam
cld
stc
bound
bound
outsb
mov
mov
mov
inc
mov
jbe
icebp
mov
mov
dec
shrl
fidivl
jg
icebp
scas
mov
jbe
jge
cmp
ret
mov
adc
gs
sbb
sub
push
dec
loope
pop
pushw
pop
pop
daa
inc
jp
cmp
cwtl
mov
xor
popa
push
dec
imul
out
xchg
jge
lock
lcall
or
add
ficoms
lahf
popf
in
mov
shr
or
adcl
inc
sbb
xchg
xchg
insl
test
sub
mov
iret
adc
jno
mov
das
or
or
insb
or
xor
push
and
add
lcall
or
cltd
outsl
test
sbb
dec
dec
and
test
in
shll
pop
movb
and
mov
js
sahf
push
call
popa
sbb
repnz
ds
into
fmull
fmuls
xor
rol
inc
shrb
ja
pop
rorb
imul
push
xchg
pop
lahf
push
push
outsb
dec
xchg
out
in
xor
fdivrp
push
ret
xor
mov
loopne
icebp
inc
out
pop
shll
mov
sbb
push
test
inc
inc
sbb
inc
mov
outsb
jle
leave
mov
stos
mov
scas
pop
inc
push
mov
xchg
orl
repnz
dec
mov
lea
ljmp
pop
or
xchg
cmp
dec
add
mov
and
inc
sub
push
fbstp
adc
mov
pop
cmp
into
push
push
movsb
movl
push
mov
cli
jecxz
push
test
mov
sub
push
loopne
adc
roll
clc
xor
xor
push
and
add
cmp
mov
mov
adc
push
lea
mov
pusha
roll
sub
je
sbb
or
cld
mov
jnp
xchg
mov
pop
xchg
xchg
ret
push
adc
mov
inc
movsl
cmp
xor
pop
jo
mov
sbb
inc
sub
orl
xor
push
sbb
mov
adc
pop
and
cmc
and
or
pop
adcb
push
xor
mov
pop
rolb
pop
pop
lock
int3
fldln2
stos
xor
inc
sub
mov
repz
pop
pop
inc
or
dec
pop
popa
xlat
pop
cmp
mov
inc
push
jle,pn
mov
mov
add
lret
or
dec
xchg
dec
pop
jp
mov
mov
push
adc
adc
sbb
popa
jns
stos
inc
or
push
xlat
mov
inc
and
mov
push
pop
out
pushf
xchg
icebp
dec
jle
ss
cmpsb
sbb
inc
cmp
adc
mov
faddl
sbb
inc
push
mov
push
loope
jp
jp
add
jp
xchg
out
dec
iret
cmp
inc
fsqrt
sbb
pop
jl
mov
sub
inc
add
add
lods
or
lock
js
movsb
dec
test
xor
js
sbbb
mov
int3
pop
outsb
or
or
clc
fmull
jne
mov
pop
adc
jb
fiadds
lea
or
cmpb
mov
cmp
or
mov
or
pusha
xlat
sub
mov
xor
ss
dec
and
inc
mov
jl
test
mov
and
or
adc
ljmp
dec
ss
mov
add
aam
ljmp
inc
ret
notl
cld
popa
jg
adcl
pop
sbb
pushf
sbb
cmp
mov
add
add
jmp
scas
imul
in
loop
sti
popa
lcall
push
aad
icebp
pop
push
jp
arpl
mov
cmc
test
pop
jno
int3
mov
or
inc
adc
xchg
sbb
inc
jbe
inc
in
in
in
aam
iret
test
push
xchg
aam
shl
ds
cmc
mov
mov
fcoml
popa
cld
inc
lea
mov
in
test
push
roll
dec
nop
cmp
xchg
inc
mov
xor
lock
sub
imull
sub
mov
std
mov
loop
test
das
dec
lcall
das
lcall
pop
inc
pop
stos
dec
sub
push
mov
adc
and
test
push
pop
push
inc
mov
ss
adc
cmp
test
aas
xchg
adc
xchg
shrl
inc
mov
mov
xchg
je
clc
push
mov
rorl
loop
pop
sbb
aam
xchg
ficoml
push
mov
fisttps
clc
adc
lahf
mov
pop
dec
mov
pop
sbb
mov
sbb
lret
mov
jmp
jae
pop
pop
aam
mov
popw
fstp
arpl
int
pop
cmpsb
outsb
jp
test
clc
adcb
mov
and
ss
fiadds
adc
push
dec
test
rcrb
cmpsl
loopne
xor
lock
sbb
jo
in
mov
leave
lret
bound
inc
sub
pop
mov
jge
ljmp
inc
adc
das
jne
push
xchg
cmpsb
test
popf
shrl
loop
add
jae
push
or
mov
cli
jle
sbb
ret
pop
jl
inc
out
or
les
ss
and
hlt
pusha
cmp
je
js
add
inc
jbe
jnp
ss
and
clc
outsb
js
ret
push
sbb
sub
mov
cmpsl
sbb
mov
lcall
pop
cs
aas
jge
cli
rorl
call
mov
xor
or
cmp
cmp
pop
push
mov
mov
add
inc
inc
daa
je
fldcw
jl
and
lods
sahf
ss
xchg
xchg
jo
ljmp
cmpsb
jmp
nop
jg
mov
das
or
lahf
mov
pop
or
cmpsl
ljmp
pop
pop
jno
cmc
sub
jb
jp
out
lret
das
je
cmpsb
or
test
addr16
popa
jecxz
lea
pusha
test
and
sub
push
test
ja
mov
in
movsl
imul
test
dec
sbb
pushf
xchg
fwait
add
inc
mov
sub
rcl
pop
pop
mov
mov
ljmp
fs
cwtl
mov
push
inc
adc
adc
fistpll
fcoml
xor
mov
fnstcw
xor
fcomp
add
in
adc
jb
popf
stos
pop
mov
bound
dec
fcompl
data16
stos
pusha
lea
insb
push
xchg
test
pop
pop
stos
cltd
mov
test
out
testl
add
add
push
stos
xor
in
rclb
arpl
aaa
adc
adcb
movsl
xor
push
jp
pop
pop
in
popf
mov
pop
xchg
adc
sbb
popa
lcall
push
push
jl
xchg
outsl
pushf
cmpsl
add
xchg
mov
jbe
sbb
in
test
ret
inc
in
mov
fistps
fildll
push
mov
cmp
add
cmc
ret
push
jmp
popl
fmull
add
test
test
inc
imul
ret
add
ret
push
xor
cmp
rcll
or
mov
jmp
js
push
jmp
jmp
xchg
jno
push
mov
sbb
mov
sbb
in
push
dec
inc
adc
cmpsb
lret
adc
dec
gs
mov
mov
sti
sbb
jns
jno
mov
mov
enter
loope
shrl
inc
mov
push
enter
mov
xor
outsl
inc
scas
push
lods
psrld
adcb
imul
pop
mov
push
ss
lds
fs
cmp
dec
in
dec
cld
cltd
adc
int3
push
lds
cmc
push
and
ljmp
xchg
push
sti
xor
cmp
sahf
or
aad
in
idivb
jmp
push
add
cltd
rolb
stos
or
clc
dec
push
dec
pop
jmp
fs
loope
cli
subb
lds
fcompl
shrl
ljmp
push
scas
ljmp
fcmovb
lock
ret
pop
sbb
sbb
ljmp
add
adc
scas
ljmp
pop
adc
pop
push
fdivrl
adcb
out
je
jne
pop
push
xchg
mov
adc
fs
dec
adc
stos
out
sbb
sub
mov
lods
and
sbb
sbbb
xor
dec
in
and
mov
adc
cmp
cmp
cld
test
es
hlt
or
push
xchg
mov
pop
pop
sbb
jl
or
pop
jb
mov
jl
mov
xchg
mov
xchg
push
xchg
sti
add
lock
mov
mov
mov
or
sbb
dec
add
lea
fiadds
mov
clc
jo
out
movsl
nop
shrb
sub
push
pusha
pushf
jbe
push
xchg
lgs
ror
xor
decl
cmc
pusha
orl
inc
adc
ficomps
adc
jl
scas
sub
xor
push
or
ficompl
jle
inc
mov
push
xchg
das
xlat
sbb
jnp
dec
lea
xlat
cmp
mov
mov
cmp
xchg
mov
adc
dec
jle
into
test
iret
jo
fs
mov
xor
xchg
fcomps
dec
sahf
mov
or
fsubrs
jne
hlt
and
mov
mov
jae
repnz
imul
inc
cmp
xor
push
sbb
jp
imulb
mov
cmp
ljmp
push
jl
ss
adc
cmpb
jge
mov
pop
jl
andb
leave
and
imul
je
sub
inc
xor
call
aaa
xlat
xor
push
ror
mov
hlt
or
mov
inc
pop
push
add
push
pop
jnp
test
dec
and
lea
les
rcrb
push
pop
mov
inc
pop
jne
add
sbb
iret
adc
pop
mov
pop
pop
pop
mov
pop
mov
mov
or
pusha
pop
outsl
mov
mov
dec
lods
or
loopne
jb
push
lea
es
rorl
es
xchg
subb
ret
sub
jge
xor
cmp
pusha
xor
cmp
add
enter
xchg
dec
mov
cltd
aam
pop
sub
push
cmp
icebp
enter
in
push
lcall
push
bound
mov
mov
bound
inc
adc
test
xor
aas
jl
loope
jb
mov
ret
dec
or
mov
test
sub
arpl
push
dec
lea
dec
and
lahf
push
testb
sbb
mov
add
dec
pop
dec
jecxz
pop
cwtl
lret
mov
mov
mov
add
popa
inc
xorl
xchg
ud0
xor
xor
sub
es
push
loopne
add
dec
dec
sarb
not
jno
loope
jg
loope
mov
jp
sub
jae
push
je
mov
cmp
sbb
mov
mov
scas
inc
les
pop
inc
jmp
cmp
push
inc
inc
and
jne
lea
loop
enter
and
pop
hlt
xor
es
mov
xor
xor
mov
mov
push
jb
sub
add
imul
leave
or
or
fsubrl
lods
mov
mov
enter
nop
sub
xor
insb
fcmovbe
adc
inc
fmuls
dec
and
push
and
jmp
or
inc
scas
mov
popf
and
mov
dec
stos
adc
insb
mov
xchg
test
push
icebp
jbe
and
data16
fldl
xor
insb
mov
pusha
fucom
mov
notl
mov
mov
mov
pop
imul
sahf
xor
mov
lods
cmp
inc
clc
pop
pop
xchg
stc
in
push
sbb
cld
hlt
mov
cmpsb
enter
sub
roll
loope
jl
push
dec
dec
aas
and
cmp
mov
popf
jge
or
xchg
add
add
sub
pop
or
or
pop
and
mov
push
aam
push
incb
je
lods
inc
adc
stos
inc
add
cwtl
js
cmp
and
xchg
xchg
add
adc
int
push
dec
dec
dec
xchg
add
pop
loopne
push
icebp
add
sarb
or
es
icebp
call
mov
imul
test
out
lock
scas
insb
mov
or
pop
pop
scas
and
and
push
iret
dec
sar
test
enter
mov
rorb
les
ljmp
aas
inc
inc
mov
sti
xor
jno
je
cmc
fldl
add
and
mov
xor
mov
or
xchg
mov
pop
les
outsb
and
pop
xchg
mov
mov
xchg
add
inc
aaa
sahf
jo
xchg
and
xor
mov
daa
or
sub
shrl
rclb
push
or
pop
cmpsb
repnz
xchg
adc
xchg
mov
dec
pop
popa
mov
in
or
mov
loop
mov
push
imul
xchg
inc
dec
shll
xchg
test
aaa
leave
pmaxub
jp
test
stos
push
dec
pop
test
insb
aaa
mov
xor
lods
mov
enter
mov
shlb
aaa
push
data16
bound
packsswb
cmp
loopne
fadds
jmp
ret
shll
jp
fildl
fisubl
daa
mov
push
movsb
ret
push
mov
xlat
nop
dec
jle
lds
add
adc
popa
xchg
bound
into
adc
ds
in
inc
outsb
mov
ja
sbb
or
sbb
inc
fwait
stos
push
xchg
in
dec
pusha
jns
stos
jnp
inc
or
les
dec
shlb
mov
mov
xchg
mov
popf
pop
shrb
inc
enter
mov
pop
sub
or
or
jmp
xchg
rolb
fwait
loope
xchg
hlt
pop
adc
call
fadds
mov
inc
in
mov
sub
inc
inc
mov
and
out
push
sub
mov
push
xchg
lcall
inc
or
pop
dec
pop
movb
pop
adc
sbb
jmp
pop
subb
push
jle
shll
add
int
jg
push
ds
shlb
fildl
lret
mov
inc
dec
jnp
or
sub
mov
jl
mov
stos
mov
mov
xchg
lcall
notb
inc
test
in
dec
test
insb
movl
jb
insb
add
test
mov
aas
mov
xor
add
loop
xchg
out
testl
in
inc
popa
fs
ss
mov
test
jecxz
dec
ret
shlb
js
or
jmp
xchg
jge
pop
ljmp
ss
cmp
call
xor
stos
push
div
push
enter
sub
adc
add
push
inc
xchg
outsb
push
inc
adc
inc
popa
add
rcll
cmp
pop
sbb
mov
loop
sbb
loope
or
test
jb
stc
mov
or
hlt
inc
jmp
push
outsb
push
xrelease
ss
cmp
push
movq
mov
pop
push
repnz
jle
push
xlat
pop
test
inc
push
jo
clc
lods
pop
jno
mov
andl
push
jmp
sub
daa
loope
inc
push
sub
jl
pop
mov
sar
pusha
arpl
cmp
mov
push
adc
mov
or
jo
mov
out
xchg
push
and
pushf
xchg
pop
call
jb
movlps
lods
test
call
sbb
sbb
xchg
daa
test
mov
mov
push
jne
pushf
fnstenv
push
mov
push
xchg
fcomi
subl
xchg
dec
xor
test
pop
paddsw
inc
lahf
xchg
mov
mov
pop
jecxz
dec
sbb
movsl
fidivl
jno
cmpsb
movsl
in
dec
mov
sbb
push
mov
rcr
inc
cmpsb
aam
jle
sub
movaps
and
sbb
sub
jl
and
call
xor
xor
push
pop
or
mov
dec
cwtl
and
adc
cmpsb
pop
add
jns
andl
push
xchg
dec
and
jns
dec
or
loope
cmpsl
mov
mov
add
and
je
rclb
lret
inc
aaa
cs
test
and
loope
out
incb
mov
jnp
mov
imull
fldcw
mov
cmpsl
scas
cmp
sbb
xchg
xchg
pop
push
add
fstl
mov
pop
xchg
mov
inc
sub
mov
or
orl
addl
dec
xor
stos
iret
mov
rorb
ljmp
shlb
out
adc
out
cmp
test
xchg
lods
cli
xchg
inc
fnsave
sbb
xor
mov
ja
and
rol
push
lret
xchg
push
icebp
sbb
and
pop
xor
pop
in
sbb
cmp
loop
test
cs
aas
sub
push
sbb
cmp
inc
pop
push
xorb
loopne
pop
daa
mov
jmp
add
sub
mov
adc
inc
mov
js
mov
icebp
pop
jne
stos
in
xchg
jge
pop
lds
sub
in
loop
outsl
testl
or
push
jo
repnz
add
cmc
inc
pop
push
dec
or
ret
or
sbb
je
jg
or
jl
fidivl
mov
arpl
cmp
jae
pop
ret
ljmp
mov
sub
lock
adc
loope
dec
dec
shl
mov
dec
aam
aas
or
or
fists
call
mov
arpl
fcompl
mov
jl
xor
pusha
sub
and
pop
ret
inc
mov
mov
data16
fwait
mov
jbe
cmp
jno
ret
dec
push
jo
xor
sti
out
adc
mov
ret
cli
cmpb
sub
enter
push
sti
cld
cmpsb
dec
sbb
stc
lahf
clc
dec
or
pop
pop
adc
daa
popf
sub
cltd
push
sbb
mov
lods
add
push
inc
outsb
and
dec
sbb
pop
ja
cmpsb
push
jmp
add
add
adc
push
xchg
jmp
cmp
jae
add
jp
mov
cs
and
jge
icebp
add
mov
out
vrsqrtps
data16
sti
mov
mov
ss
sbb
pop
movsl
lea
inc
push
sbb
xchg
push
rcrl
ss
addb
push
loope
mov
jmp
adc
fidivrs
pusha
dec
aad
jge
ret
fistpl
inc
sbb
sbb
mov
pop
icebp
and
xor
ljmp
sbb
pop
add
rcrb
cmpsb
ds
incb
adc
or
lock
or
fmuls
insl
xchg
fdivl
cmpsb
sbb
cltd
add
popf
adc
test
ret
adc
fwait
or
das
loopne
mov
and
js
mov
jmp
push
pop
insl
jae
inc
daa
fiadds
scas
imul
lds
das
stos
das
push
cli
cwtl
add
test
mov
jo
sub
push
mov
das
scas
flds
rcll
lret
and
jle
sarl
pop
pop
xor
out
std
not
mov
jle
mov
push
aam
mov
stos
adc
and
cmp
mov
iret
mov
inc
jmp
dec
xor
ja
pop
inc
aas
sbb
pop
repnz
incb
ret
enter
adc
dec
mov
pop
shl
repz
int3
cmp
fidivrs
daa
ljmp
inc
lret
das
jl
std
sub
das
mov
mov
addr16
inc
shrb
pop
ret
and
clc
push
pop
test
adc
push
movsl
mov
lret
sbb
mov
in
inc
mov
pop
adc
xor
jecxz
ret
xor
pop
outsl
fdivl
arpl
mov
add
mov
test
sar
xchg
dec
pop
cmp
add
mov
jge
xchg
mov
push
mov
insb
mov
xchg
and
shr
pop
and
sbb
je
dec
cld
es
cmpl
icebp
dec
aas
cld
xor
xor
jb
into
push
jg
xchg
nop
dec
cltd
dec
mov
lods
cmp
nop
push
and
jno
ja
shrb
cmp
and
xorb
sub
pop
push
xchg
cmp
mov
add
inc
and
call
scas
xchg
jecxz
inc
mov
dec
adc
xor
lret
imul
mov
xor
clc
gs
push
dec
daa
ds
aad
sbb
test
dec
fnstcw
mov
push
addb
adc
mov
sbb
sub
xor
sbb
fadds
fwait
cltd
inc
jne
pop
adcl
fmulp
pop
inc
and
and
adc
js
in
roll
fidivs
mov
jp
mov
xor
sub
sub
popa
pop
mov
aas
cmp
je
outsb
lea
out
adc
jb
iret
js
das
pop
mov
lods
mov
test
clc
jmp
and
or
cmp
test
xchg
andl
add
add
mov
imul
ds
push
or
pop
cmc
lds
inc
pop
push
inc
daa
push
je
push
and
pop
call
icebp
add
cmp
das
jo
sti
mov
subb
decb
cs
ret
lock
arpl
jo
hlt
adc
hlt
dec
clc
jp
add
fsts
sub
aam
lock
adc
or
mov
inc
jnp
mov
jbe
mov
xor
mov
out
xchg
push
loop
es
add
mov
xchg
cwtl
pop
addps
cmp
iret
clc
sub
data16
daa
test
xlat
stos
inc
adc
sub
add
aaa
dec
repnz
insl
pinsrw
lcall
inc
xchg
push
lcall
or
add
sbb
jno
movsb
cmp
cmp
ret
sbb
lock
gs
lock
rclb
mov
mov
xor
inc
jns
cwtl
cmpsb
dec
rcrl
xor
jp
outsl
pop
or
jl
outsl
and
aam
popf
push
sbb
mov
adc
xor
repz
inc
mov
and
repz
mov
cmpsl
dec
or
int
jno
divl
addb
dec
mov
sub
add
sbb
sub
pop
jl
pop
nop
arpl
jmp
dec
dec
es
into
insl
inc
inc
cmp
dec
and
ds
add
xchg
ljmp
adc
out
sahf
ljmp
or
dec
mov
sub
mov
or
and
test
pop
enter
out
aas
pop
or
int
das
cwtl
aas
dec
cmpsb
cmp
ret
mov
test
std
test
insl
inc
orb
inc
jb
mov
push
dec
mov
mov
add
dec
clc
movsl
sbb
loope
xor
inc
sub
imulb
xchg
sarl
inc
and
sbb
icebp
add
mov
cmp
pop
lret
in
popa
scas
imul
out
ret
adc
movsl
mov
insl
aaa
loopne
adc
dec
mov
mov
jno
mov
js
jne
stos
adc
dec
or
insl
daa
cs
nop
arpl
mov
or
jo
rorb
push
ja
inc
push
aas
repnz
aad
cmc
mov
or
jle
xchg
sbb
mov
mov
and
and
and
push
outsb
add
out
mov
cmp
sahf
stos
aad
lock
das
and
jmp
dec
rcrb
test
cs
mov
lret
rorb
cli
or
and
jno
jle
inc
enter
out
and
mov
xor
mov
sub
push
mov
in
sbb
dec
aad
mov
lds
aad
xor
sahf
lods
sub
mov
addb
dec
inc
xchg
lahf
dec
fisttpll
test
mov
lods
and
js
jo
xor
mov
insl
test
and
aaa
insb
xchg
and
inc
mov
shlb
movsb
push
insl
xchg
mov
sbb
sub
stc
lock
xor
pop
in
je
pop
movsb
stos
xchg
jns
shl
out
push
int3
or
test
out
stc
out
sub
cmpsl
mov
xchg
enter
dec
push
in
inc
xor
je
inc
xorl
cltd
jecxz
pop
push
cmp
rcrb
pop
test
cmp
xchg
dec
in
pop
cs
incl
push
sbb
xor
repz
jge
cli
mov
inc
imul
add
lods
xchg
jecxz
cmpsl
mul
adc
je
jne
xor
push
rcll
and
add
imul
test
ja
into
stos
test
add
movsl
loopne
or
test
int
and
and
jne
add
push
or
xor
adc
clc
add
xchg
add
cmp
mov
test
push
sbb
push
xchg
push
gs
inc
pop
jecxz
cs
cmc
mov
movb
daa
jecxz
xchg
xor
aad
or
sbb
clc
xor
xor
push
movsb
and
hlt
inc
fimuls
xor
xchg
cs
xchg
lcall
mov
sbb
sub
fldenv
movsl
outsb
mov
fisttpl
icebp
mov
push
lret
in
ret
clc
adc
mov
nop
movsl
mov
sbbb
mov
insl
mov
dec
mov
test
inc
ds
xchg
nop
lret
pop
sub
and
adc
fcoms
mov
movsl
icebp
movb
cwtl
inc
inc
cmp
rcrb
dec
cwtl
push
loop
daa
jnp
imul
pop
lea
in
push
loopne
movsl
mov
orb
push
add
add
xchg
sub
pop
inc
ds
dec
les
add
ja
popa
push
je
rcrl
push
pop
sbb
sbb
and
add
leave
mov
rorl
je
mov
les
inc
dec
fisubl
xor
jo
aaa
leave
jp
dec
rorl
xchg
mov
aad
fistps
inc
test
hlt
xchg
mov
ds
mov
sub
add
add
xor
icebp
inc
jg
dec
enter
cs
lret
pop
xchg
pop
adc
jb
sub
or
sub
mov
jl
movl
inc
clc
mov
inc
jmp
xor
sahf
inc
fdivrs
sub
mov
cli
rorb
mov
xchg
xchg
push
shrb
lret
cwtl
xchg
dec
mov
aam
aad
daa
sbb
cli
data16
sub
jmp
mov
inc
and
push
mov
jg
xchg
push
push
movl
push
mov
sar
loop
adc
icebp
out
out
loop
jge
repz
and
xchg
jno
loopne
rcrb
xchg
jecxz
and
pop
add
or
pop
jl
mov
idiv
add
nop
sub
mov
cld
add
in
pop
xchg
jno
ss
cmp
mov
jo
mov
add
xor
lret
dec
sahf
out
sub
nop
xchg
std
xor
inc
mov
lods
xchg
inc
dec
mov
adc
std
addr16
les
popf
ret
mov
inc
test
enter
rolb
adc
add
es
aam
out
jns
loope
in
ljmp
pop
mov
fnstenv
mov
add
push
roll
les
and
jl
cld
mov
add
ljmp
bnd
fistps
pusha
movl
pop
lea
pushf
pop
jmp
rolb
mov
dec
cmpsb
sub
xorb
orl
ljmp
jl
xchg
clc
push
iret
jge
inc
xor
fadd
loopne
mov
push
sahf
mov
add
stos
lods
call
adc
stos
stos
mov
test
adc
or
shl
or
sbb
es
or
aam
mov
sbb
pushf
or
or
enter
cs
pop
outsb
xor
les
sub
movsb
call
mov
ja
and
jo
fstpl
shll
adc
mov
jbe
push
das
mov
dec
or
stos
xor
push
in
lea
mov
sub
mov
in
mov
into
aas
sub
xchg
adc
orb
jnp
mov
aam
and
iret
adc
mov
adc
lret
sbb
rclb
xchg
leave
xchg
bound
push
or
cs
jle
test
xchg
andb
rolb
sub
adc
push
fcoms
mov
js
sbb
ret
sub
xchg
inc
cmp
push
or
test
dec
js
ljmp
adcl
ret
out
adc
cmp
push
test
sbb
cmp
rorl
punpckhbw
pop
test
mov
lds
sub
cmc
dec
loopne
push
push
mov
push
push
imul
js
add
push
cmpw
mov
loope
mov
sbb
es
push
xlat
nop
icebp
aas
aas
sub
outsl
sbb
jge
lea
cmp
mov
loop
sbbl
mov
cld
notb
sub
imul
cmp
mov
fldl
push
adc
and
insb
push
int3
pop
sub
push
mov
mov
pop
es
out
fisubs
and
and
mov
xchg
push
dec
loope
ret
sar
lcall
cmp
sub
shrb
subb
mov
cmp
addr16
call
test
or
loop
adc
bound
or
push
or
xchg
pop
fs
sbb
out
rol
mov
imulb
push
xor
rorb
stos
jle
mov
hlt
add
mov
out
cld
mul
or
push
call
dec
rorb
mov
sub
repnz
or
fs
loope
aaa
jbe
lock
push
in
or
and
and
pop
gs
std
imul
pop
ret
push
sbb
sbb
add
push
out
js
ret
or
stc
mov
sarl
insb
les
sub
mov
notb
push
aad
push
stc
cmc
add
and
ret
into
call
aad
add
sub
loop
xorb
or
xchg
rcl
addb
cmp
pop
sub
shlb
mov
loop
std
loopne
das
sub
xchg
xchg
out
jns
fdiv
leave
pop
in
inc
jge
mov
stc
mov
clc
pop
adc
fdivs
pop
lods
gs
fcomip
jl
sbb
std
dec
incl
dec
mov
inc
cmpl
add
xchg
std
cwtl
addb
out
mov
andb
fs
mov
cli
in
daa
lea
hlt
pop
aam
jle
inc
adc
push
xchg
cwtl
pusha
adc
ror
inc
and
lods
adcb
xlat
xchg
mov
ret
stos
lock
xor
std
lcall
repnz
mov
pop
or
adc
pop
mov
ja
dec
fstpt
push
popf
out
int3
out
aaa
dec
or
or
mov
mov
iret
push
enter
inc
push
and
xor
sbb
mov
jle
pop
out
cmp
lods
es
sbb
add
cmpsb
pop
or
jo
pop
add
pop
xchg
pop
daa
jmp
sbb
push
popa
enter
mov
pusha
cwtl
data16
test
nop
add
add
sbb
gs
or
adc
pop
movsl
scas
mov
add
sub
scas
insl
add
mov
and
mov
xor
sbb
shlb
cmp
mov
add
nop
cli
stos
lock
popf
jb
movb
inc
xchg
cmpsb
add
daa
add
mov
cli
lahf
mov
or
fbstp
jp
add
adc
push
or
movsl
add
cmp
cmp
pusha
mov
pop
jmp
jg
pusha
call
scas
nop
ret
inc
lock
jns
dec
test
or
pop
pop
jo
sub
inc
cld
push
insl
inc
loop
sub
lods
enter
repz
pop
adc
add
in
add
mov
or
pop
inc
push
imulb
std
dec
clc
jno
xor
aad
sub
ffreep
xchg
jle
rcr
enter
jmp
and
popa
push
lods
bound
out
pop
shl
daa
movsb
push
mov
xchg
mov
sahf
xor
fcompl
pop
insl
loopne
daa
jae
out
inc
popa
jecxz
mov
test
push
outsb
mov
mov
sub
xorb
outsl
inc
lds
inc
std
cwtl
mov
cld
mov
fbstp
xor
sbb
push
mov
fldcw
sbb
push
test
andl
das
icebp
test
mov
pop
push
cmpsb
or
cmpb
out
dec
and
cs
pop
test
dec
inc
test
push
and
rorl
popf
insb
in
or
push
sarl
inc
sbb
xchg
jno
push
pop
int
jl
inc
or
into
dec
pop
xchg
mov
lcall
ja
rolb
loop
cs
adc
outsl
jl
decl
cmp
pop
sbb
scas
xchg
les
and
mov
inc
sbb
aaa
cli
loopne
or
rcll
dec
mov
ds
test
adcb
sbb
sbb
unpckhps
xchg
je
cmp
pop
movsb
pusha
sub
mov
fwait
dec
jecxz
cmc
loop
sarb
out
inc
ljmp
jno
out
mov
rcr
jnp
inc
lret
pmuludq
add
aad
xor
leave
cmpsb
adc
mov
cs
add
cmp
lahf
and
adc
sar
sbb
loopne
and
push
pop
jbe
cmpsb
mov
inc
popf
icebp
stos
outsb
xchg
or
lods
push
call
add
lea
pusha
adc
outsl
cwtl
jbe
fs
mov
pop
pusha
pop
push
js
mov
xchg
fstpl
push
mov
dec
call
xchg
mov
pop
rcl
push
xlat
dec
push
je
inc
add
mov
mov
cmp
pop
call
and
mov
fisubrl
or
gs
orb
aaa
xor
flds
push
repnz
pop
mov
add
mov
inc
cmp
xchg
xor
sbb
lock
mov
mov
cmp
cmp
jne
dec
add
test
test
pushf
stos
ljmp
push
push
ret
scas
inc
add
push
xchg
add
cmc
push
pop
sub
pop
push
cmp
push
sbb
rclb
lea
hlt
loope
gs
mov
xchg
cld
scas
adc
sub
aam
ret
mov
xchg
push
out
lret
jl
add
mov
adc
push
in
hlt
movsl
mov
sub
push
lcall
sub
inc
and
mov
add
fnstcw
out
pop
adc
or
mov
adc
pop
sahf
test
lods
js
and
jne
stos
cmp
dec
push
pusha
sbb
loope
insl
test
roll
stos
iret
jecxz
daa
pusha
rcll
loope
lock
mov
in
or
test
push
xchg
sbb
call
jmp
or
adc
push
fdivrp
push
cltd
cmp
fs
mov
pop
xchg
or
in
fwait
in
xorl
fcompl
jp
lods
stos
pusha
call
sub
cld
out
adc
lock
push
out
push
ja
cld
xor
push
xchg
xchg
stos
pushl
rorb
xchg
lea
lret
inc
cli
mov
xchg
repnz
dec
cwtl
sar
fists
idivb
inc
adc
xchg
scas
cli
in
lock
mov
and
inc
or
sub
fs
mov
jmp
mov
xor
cmp
jmp
aad
outsb
or
push
out
test
add
bnd
ret
jecxz
xlat
jo
mov
xchg
adc
xor
lock
xor
inc
xor
pop
imul
cwtl
xor
mov
dec
mov
inc
addr16
and
adc
sbb
jl
jg
nop
adc
aad
push
pop
rcll
fidivrs
icebp
push
pusha
loope
std
mov
or
cmpsl
inc
mov
mul
icebp
je
push
popa
out
scas
inc
add
out
dec
movsl
mov
lahf
or
and
fs
sub
scas
data16
pop
fwait
js
out
pop
jns
rol
mov
in
dec
mov
clc
pop
icebp
aad
rolb
les
and
xchg
movsb
jle
out
out
int3
mov
std
jp
in
push
add
lods
pop
lds
subb
mov
loopne
test
jp
hlt
incl
sbb
fiadds
inc
sbbl
adc
jbe
rcrb
mov
imul
dec
lret
shrd
pop
ret
sbb
adc
das
sbb
pop
jnp
inc
pop
mov
cmp
stos
sub
fwait
inc
mov
adc
adc
and
xor
hlt
add
call
mov
adc
dec
loope
dec
jl
add
ror
xor
inc
je
adc
aam
xchg
and
dec
push
dec
pusha
sbb
mov
mov
lea
outsl
xor
fldenv
add
push
inc
sbb
jnp
cmp
adc
mov
pop
outsb
call
xor
sbb
inc
ficoms
dec
inc
add
aas
push
pop
mov
aas
mov
xlat
pushf
cmp
cmp
sbb
pop
or
sti
dec
popa
notb
aad
in
insl
mov
and
jecxz
xor
mov
mov
jle
push
test
mov
aas
mov
insl
aaa
je
fcmovb
cld
push
pusha
call
test
or
mov
inc
push
testl
repz
jl
nop
jle
leave
cmp
sub
ljmp
out
in
dec
or
faddl
stos
addr16
out
jo
jle
adc
ljmp
pop
decl
fldenv
inc
je
mov
lods
inc
mov
cld
les
movsb
test
repnz
pop
das
popa
sarb
stos
ret
shlb
mov
dec
add
shll
or
and
hlt
push
lea
test
lds
cmp
push
pop
je
ret
inc
inc
add
inc
lods
xor
jns
xor
xchg
mov
push
xchg
loope
push
fwait
jmp
and
mov
movsl
xor
or
add
je
dec
mov
mov
lcall
xor
dec
sub
aaa
insl
lock
xor
dec
mov
sar
pushf
cmp
sub
pop
loop
or
add
fwait
lcall
loop
jle
push
mov
jne
mov
cmp
insb
jmp
pop
cmp
fwait
sub
jbe
jne
repz
fwait
sub
xchg
push
mov
scas
ds
scas
incl
icebp
pop
int
xor
push
push
rcr
and
and
test
add
mov
add
sti
xchg
mov
inc
xor
inc
stos
shrb
mov
lret
xchg
fidivs
cs
fildl
call
sbb
xchg
rcll
xor
mov
out
stc
inc
jo
or
cmpsl
inc
adc
add
cmp
pop
jno
sahf
mov
inc
sub
push
test
cmp
lods
pop
and
into
dec
mov
mov
add
in
daa
mov
pop
std
test
sti
mov
mov
mov
xchg
push
or
data16
shrb
dec
repnz
ret
sbb
xchg
and
jnp
add
daa
cmp
adc
cld
jae
icebp
fimuls
shlb
mov
aam
loop
add
scas
cmp
mov
push
dec
ja
mov
sti
lods
enter
dec
loope
mov
lea
pop
mov
out
stc
adc
jmp
lds
mov
insb
inc
xor
mov
jg
adc
add
add
sub
xor
mov
fisubl
lahf
or
es
aas
test
sti
mov
scas
push
jbe
add
stos
cmovl
pop
push
adc
adc
pop
jecxz
inc
xor
sbb
in
jo
push
mov
inc
repz
addr16
repz
pop
addr16
push
xchg
subl
sub
aam
insb
inc
int3
cmp
and
cld
lea
loopne
dec
fbld
jp
test
popf
pop
jb
adc
sbb
test
jle
push
fbstp
aad
pushl
mov
and
loope
aas
orb
stos
or
stos
xchg
cmp
mov
add
popf
orb
add
pop
hlt
loope
insb
aaa
push
movsb
stos
sub
fcompl
std
jmp
iret
int
inc
cmp
adc
push
jns
xchg
xor
cwtl
pop
cli
pop
xchg
mov
es
sarb
push
sbb
roll
cmc
loopne
adc
and
cld
pop
ja
into
add
call
add
sbb
xor
mov
lahf
movsl
jno
push
jle
nop
mov
mov
xchg
je
inc
cmp
add
adc
out
jbe
in
or
push
call
mov
add
jbe
and
sbb
cmp
popa
jns
dec
mov
dec
mov
ret
pop
dec
add
mov
inc
inc
mov
add
push
xchg
adc
xor
imul
push
dec
mov
ds
add
inc
adc
bound
and
inc
sbb
push
mov
xchg
test
cmpsl
loope
test
cld
push
jmp
xorb
adc
mov
out
or
loop
mov
dec
jg
or
popa
pop
lods
push
stos
ret
enter
jmp
int3
mov
jns
loop
xchg
insb
xchg
in
push
lods
xchg
icebp
add
pop
or
mov
gs
iret
subb
inc
or
outsb
mov
cmp
loop
stos
outsb
pop
dec
ja
inc
xor
scas
outsb
js
pop
fsubs
mov
rorb
popa
mov
lock
push
lahf
nop
sub
lock
hlt
jp
test
mov
add
repnz
ljmp
or
mov
pop
fcoml
push
push
cli
add
mov
stos
push
rolb
and
mov
cmp
push
adc
mov
cld
mov
push
mov
lds
add
out
add
sub
pop
or
sbb
push
xlat
or
and
cs
push
pop
push
pop
das
mov
les
xor
notb
cmc
sub
int3
es
xchg
sbb
les
mov
std
pop
add
pop
inc
dec
jo
aas
cwtl
sbbb
jbe
testb
ja
mov
std
xchg
lock
mov
pop
jo
sub
loop
or
movsb
out
sub
push
mov
test
sbb
loopne
imul
rcrl
addb
outsl
sbb
jns
mov
jno
fdivrs
sahf
cmp
jle
xor
sarb
out
add
inc
call
cmp
aam
loope
js
mov
cmp
pushf
mov
int3
rcrb
sub
add
adc
stos
lods
lret
xchg
ret
in
push
sbbb
ds
incl
loop
js
lds
cmc
cli
movsb
add
mov
dec
cmp
jecxz
and
xor
mov
xor
and
or
cld
xchg
add
jmp
outsb
pop
jecxz
dec
insl
cmp
outsl
push
insb
push
outsl
shrl
add
filds
incl
sub
pop
jmp
xchg
mov
adc
std
pop
pop
movsl
in
inc
jmp
ljmp
and
popf
mov
mov
add
imul
push
js
lret
ds
jne
mov
sbb
es
pusha
sbb
stos
cmc
or
add
aaa
divb
fcom
fiadds
sub
and
scas
sbb
mov
jmp
xchg
and
nop
push
ds
push
fs
cmp
jb
add
mov
or
pusha
dec
or
adc
xchg
push
fstl
loope
and
pop
dec
and
inc
ljmp
mov
cmp
jbe
xchg
clc
lods
sub
lock
cmp
leave
push
aas
add
mov
mov
leave
mov
test
adc
es
insl
jl
mov
lcall
and
xchg
add
jns
xchg
daa
sub
lret
test
or
lret
ds
jl
repz
fsts
es
ret
dec
ljmp
test
and
testl
rolb
ret
arpl
nop
adc
jg
push
push
push
mulb
jg
pushf
adc
pusha
outsb
dec
xchg
xchg
roll
cli
sar
inc
out
xor
shl
stos
repnz
push
mov
pop
pop
mov
stos
cld
xor
and
mov
pop
iret
sbb
mov
pusha
or
jne
xchg
push
and
adc
inc
imul
je
sti
sbb
shr
and
clc
arpl
inc
and
and
ficoml
mov
cmp
xor
mov
and
hlt
or
push
dec
dec
sarb
mov
mov
sub
push
add
fistl
inc
mov
enter
shlb
popf
pop
mov
in
jo
push
sahf
clc
pop
fcmovnb
test
push
xlat
mov
and
fs
bound
adc
jbe
lret
clc
mov
mov
cmp
dec
xchg
adc
ja
inc
dec
mov
inc
cmp
bswap
cmp
loopne
pop
inc
jl
mov
movl
sub
in
nop
or
fdivrs
roll
test
mov
test
hlt
lds
sub
daa
jge
add
mov
inc
xchg
mov
popa
push
pop
andb
add
cmpb
xchg
cld
jnp
pop
or
pop
cmp
pop
in
and
add
adc
data16
repnz
push
fucomip
pop
sbb
xor
jle
sbb
mov
pop
mov
fidivl
inc
adc
add
xor
lcall
sub
ret
mov
push
sub
jg
inc
jg
into
outsl
mov
or
inc
sbb
mov
add
lock
sub
stos
loopne
adc
or
daa
xchg
cmp
mov
or
in
lock
iret
or
add
mov
call
fadd
adc
xlat
adc
pop
hlt
mov
push
xchg
jo
push
pop
add
adc
and
add
xchg
hlt
inc
inc
adc
or
movsl
std
sbb
cld
jbe
jg
xor
movsl
add
cli
lcall
jecxz
xchg
push
mov
xor
popa
ds
sbb
push
test
movsl
pop
in
jo
js
ret
mov
rcrb
mov
movsl
popa
movsb
pop
movsb
nop
test
xchg
inc
pushf
or
loopne
sub
outsb
and
mov
xor
push
xchg
out
pop
or
inc
lods
mov
js
mov
push
and
ret
insl
scas
inc
fsubr
outsb
push
in
fsts
decb
nop
pop
nop
stc
pop
andb
jle
mov
imul
dec
mov
dec
pop
test
out
push
push
movsl
mov
movsb
jle
and
scas
xchg
cmp
pop
icebp
outsb
lock
mov
lods
in
dec
or
xchg
and
lcall
and
mov
ja
mov
lea
data16
jecxz
subl
rcl
clc
test
mov
push
mov
out
and
enter
sbb
outsl
hlt
inc
pop
pop
mov
call
cmp
push
and
stc
mov
push
in
sub
addr16
add
pusha
push
xor
ret
mov
dec
push
dec
test
push
rolb
filds
das
and
push
mov
xchg
sub
xor
in
clc
or
and
movsb
aaa
mov
icebp
cmp
pop
adcb
pop
fstpl
inc
sub
push
sub
int3
stos
cs
aam
push
jl
aam
ljmp
mov
pusha
mov
dec
les
pop
xor
in
xchg
jp
sbb
adc
andl
adc
das
pop
mov
inc
or
rcr
aad
fnop
test
or
and
imul
std
xchg
hlt
cs
mov
je
pop
iret
jo
shrl
dec
sub
sahf
push
sbb
std
int3
push
fildl
mov
or
jg
repnz
popa
jg
test
mov
into
cmp
jae
pop
push
lret
cmpsb
mov
push
cmp
pop
test
cwtl
test
cmp
jge
icebp
vmovdqa
pop
fs
adc
cmp
mov
jmp
outsb
add
fucomip
jo
cmp
cmp
fisttpll
or
xor
js
or
mul
andl
call
pop
js
dec
pop
fists
push
sarb
pop
shr
sub
jle
ficompl
clc
push
push
mov
sbb
rolb
pop
les
les
sbb
mov
mov
shl
dec
rolb
fiaddl
xchg
addr16
jmp
fs
das
test
aam
test
add
dec
adc
int
cmpsl
add
dec
push
lret
or
and
pop
or
xchg
pop
lods
mov
and
mov
aad
mov
pop
cltd
lret
shlb
es
rcll
shrb
add
cmp
adc
sbb
jg
add
orb
xchg
cltd
and
sbb
mov
cmp
mulb
daa
and
test
push
iret
or
das
push
or
dec
sbb
leave
in
pop
push
loop
test
dec
cwtl
sbbb
in
push
dec
fdivs
shrl
fadd
mov
inc
fimuls
dec
mov
mov
pop
or
repnz
popa
fwait
lahf
push
or
add
insb
push
mov
rol
dec
push
xor
lds
scas
adc
loop
or
dec
test
sbb
dec
test
les
dec
insb
leave
dec
dec
jmp
loop
jle
les
add
loope
or
adc
adc
aaa
xchg
pop
out
cmpsl
adc
mov
mov
mov
pop
je
cltd
or
pop
scas
ljmp
mov
xor
repz
mov
cwtl
js
aad
mov
push
dec
fdivr
inc
lahf
push
or
loope
das
fcoml
rclb
in
shl
mov
sub
or
rcrl
pop
and
dec
lds
sub
lcall
insb
or
add
xchg
adc
lods
push
push
cmp
pop
jle
sub
sub
inc
jl
mov
out
add
pop
sahf
mov
mov
inc
push
jo
stos
dec
mov
mov
loope
dec
sbb
cmp
out
cmp
sbbb
cmp
sbb
push
cmp
jp
mov
or
dec
inc
cmpsl
inc
jmp
mov
mov
and
adc
loope
mov
cmp
mov
mov
in
and
enter
add
dec
and
subl
lret
movsl
js
gs
pop
stos
dec
pop
inc
mov
sub
mov
in
lods
rcrl
nop
cmp
mov
cli
mov
mov
sbb
lods
jle
sarb
push
imul
inc
test
push
enter
ds
push
pop
xchg
into
xchg
fldt
adc
pop
lods
mov
xor
jo
push
and
inc
adc
pop
fisubrs
sub
and
xor
ret
and
shl
outsl
mov
cmp
add
inc
pop
mov
cmp
test
repz
int
cli
mov
inc
jl
xchg
inc
inc
sti
ret
mov
push
fxch
enter
nop
test
mov
push
adc
and
or
ret
cmp
add
out
hlt
and
pusha
imul
clc
out
movsl
lds
rorb
call
shl
jb
aad
jno
push
add
lock
sbb
divl
rorl
jg
sbb
jo
push
jb
xchg
aam
dec
and
adcb
mov
xchg
fs
sbb
test
mov
fsubrs
ret
push
rorl
stos
mov
adc
mov
cmpsb
aam
ss
testb
mov
subb
mov
pop
fxch
adc
clc
and
cmp
iret
xlat
imul
xor
sbb
inc
test
xchg
hlt
mov
pushf
mov
int
and
push
cmp
insb
mov
cld
xor
and
jns
gs
jo
pushf
and
push
pop
add
push
mov
hlt
scas
mov
in
or
leave
sahf
mov
dec
addr16
shlb
imul
cmp
or
fdivrs
jge
jo
sub
js
call
jp
cmpsl
xchg
es
out
icebp
subb
dec
mov
cmp
pop
dec
pop
into
inc
ljmp
sbb
cmp
mov
jne
jp
push
div
pop
test
mov
lds
aam
mov
inc
dec
test
jbe
mov
xchg
ret
out
lret
mov
loop
jge
mov
aad
sbb
lods
jae
mov
mov
andl
xor
loope
cld
aaa
and
cmp
pusha
sub
and
shrb
pop
and
xlat
sub
inc
and
push
sub
mov
pop
test
outsb
repz
call
rcrb
or
pop
mov
popa
and
adc
jg
dec
add
inc
sbb
nop
je
mov
and
repz
ret
xchg
test
mov
mov
out
jg
les
das
mov
movsb
push
frstor
or
cmpsl
aad
stos
pushf
jb
pop
mov
shlb
push
mov
pop
les
lock
pop
mov
lret
in
lock
les
in
adc
int
lods
add
lock
aam
test
sahf
xacquire
dec
movsb
xor
addb
adc
test
hlt
adcb
jmp
sub
test
invd
mov
pop
lret
sbb
cmpsb
movb
stos
in
data16
ss
xchg
dec
push
sub
pop
lret
or
sarl
outsb
lret
cmp
sbb
arpl
push
jge
mov
inc
dec
mov
ss
mov
sbb
cmp
jmp
in
popa
add
and
xor
js
adc
push
fldcw
icebp
repnz
pop
scas
sub
enter
mov
sbb
lock
mov
js
les
adc
in
je
lock
inc
cmpb
fisttps
xchg
sub
inc
lret
push
jae
xor
add
pop
enter
roll
mov
scas
xor
pop
sub
mov
jle
adc
cld
fcoms
in
inc
les
xchg
add
shrl
loopne
pushf
rcr
rcll
aad
pop
dec
adc
sub
jp
and
js
adc
dec
dec
out
xor
sbb
inc
push
dec
sub
jl
lcall
cltd
jle
scas
sbb
xchg
or
js
adc
pop
sbb
inc
rolb
cld
out
jl
mov
dec
pop
and
mov
xchg
out
inc
js
stc
add
fs
mov
test
mov
xor
pop
jge
or
js
popf
or
insb
pop
cmp
push
cmp
pop
jo
and
inc
pop
call
add
push
add
jp
cmp
mov
push
sub
divl
mov
mov
jmp
js
test
mov
aam
cmpl
push
ss
sub
adc
adc
mov
cmp
and
int
mov
nop
adc
js
push
in
dec
pop
faddl
mov
dec
add
clc
test
filds
jo
stc
or
js
sbb
mov
push
add
stos
add
jne
ljmp
mov
aam
cs
rorb
pop
adc
call
sarb
mov
shlb
sahf
movsb
dec
arpl
pop
mov
cmc
xchg
test
and
mov
iret
or
daa
push
in
push
adc
cmc
call
out
xchg
adc
cwtl
sbb
jp
xchg
sub
push
sti
jne
outsl
mov
mov
jmp
xchg
loop
into
fidivl
test
stos
mov
add
add
push
loop
pop
jne
mov
sub
shlb
jecxz
clc
mov
scas
cmp
or
cmc
xchg
or
inc
pop
mov
add
popf
aam
or
jl
aad
cs
add
jecxz
add
adc
jl
add
adc
jae
fdivl
mov
jo
fmuls
rolb
xchg
loopne
outsb
sub
xchg
inc
shrb
push
pop
pop
daa
pop
js
push
inc
rorl
fiadds
stos
or
and
push
popf
mov
xchg
sbb
lret
lcall
pop
jne
sbbb
mov
outsb
stos
jno
dec
fmuls
clc
out
mov
mov
xchg
mov
xchg
xlat
cmpsb
pop
and
sub
add
cmc
pop
test
hlt
pop
jecxz
imul
dec
cmp
lock
add
lods
adc
mov
cmpsl
lret
mov
and
arpl
insb
outsl
sub
lds
aaa
mov
push
mov
sti
call
loopne
loopne
movsl
sti
lahf
mov
sbb
pop
push
cvttps2pi
and
pop
cmp
mov
es
pop
scas
enter
popa
push
xor
shlb
test
dec
addb
pop
xor
mov
sbb
add
arpl
push
add
xorl
inc
hlt
clc
int
xor
icebp
lods
mov
je
jmp
rclb
push
xchg
adc
xchg
icebp
addr16
loop
xor
rorb
fs
out
icebp
mov
repnz
in
test
or
cltd
ds
popa
in
stos
cmp
daa
sub
test
cmp
or
sub
lods
pop
shlb
push
call
inc
inc
in
sbb
bound
arpl
subb
push
lea
stos
mov
xor
jl
and
outsl
gs
mov
mov
lret
add
push
xchg
mov
adcl
js
call
mov
mov
adc
dec
sub
pop
jle
pusha
inc
cmc
jb
and
cli
mov
pushf
fbstp
jg
icebp
mov
inc
cmpsb
movsb
sub
cmp
mov
xor
lcall
stc
test
bound
ja
adcb
mov
in
add
sub
imul
loope
pop
xchg
orb
sbb
cmp
and
loop
sub
jp
movsb
lds
push
add
call
mov
xor
inc
pop
add
test
fidivl
pop
push
pop
sbb
call
xchg
ret
mov
mov
or
cli
rcll
rolb
dec
jg
cmp
cmp
pop
pop
push
mov
pop
mov
push
xchg
std
xor
insb
aaa
adc
mov
faddl
aad
inc
inc
sar
push
jb
out
jae
jp
inc
fcomi
push
jo
push
nop
cs
pop
mov
xchg
xchg
cmp
mov
xor
mov
dec
in
sub
cmpsl
or
jl
dec
xor
loope
sbb
into
push
cmp
ficoms
and
sub
andb
scas
or
les
clc
iret
mov
xor
lods
push
scas
sub
mov
dec
popa
hlt
pop
mov
push
shrb
xchg
mov
sub
push
mov
and
jno
clc
pop
pop
jp
dec
rcll
sbb
std
inc
hlt
or
ret
sbb
popa
jmp
and
sub
inc
rolb
mov
aad
jge
loop
inc
push
push
and
sub
cld
dec
shrb
data16
daa
jne
dec
and
xchg
pushw
cmp
push
mov
mov
clc
push
cmpsl
mov
in
xchg
in
inc
je
in
pop
inc
icebp
add
data16
push
lock
push
ss
xor
push
cld
or
xchg
bnd
mov
mov
bound
shrl
popa
xchg
xor
sarb
xchg
and
ficoml
mov
xor
in
sbb
mov
jl
or
sbb
push
dec
or
clc
mov
es
xor
xlat
imul
cwtl
and
push
testb
mov
mov
dec
or
lcall
cmpb
test
lods
call
xor
fisttpll
popf
push
imul
lods
and
icebp
mov
movb
cli
das
icebp
add
mov
add
dec
clc
bound
sub
push
dec
mov
inc
psraw
lods
mov
shll
push
test
push
lods
push
xor
mov
and
mov
and
mov
shlb
iret
cmp
inc
int
clc
hlt
mov
jo
bound
cmp
leave
dec
ret
mov
and
or
xchg
imul
or
push
mov
xchg
pop
cld
enter
push
inc
lods
pop
imul
mov
adc
cmpsb
or
fwait
cs
inc
cli
add
mov
push
jnp
mov
cld
fsubrl
pop
test
cs
dec
test
jg
lods
sub
pop
je
ss
inc
and
and
popa
dec
testl
test
cltd
lods
sbb
frstor
aaa
ss
jmp
aaa
inc
xchg
out
xor
call
sbb
loope
mov
xchg
pop
inc
imull
push
test
adc
loope
cmp
dec
pop
sbb
decb
adc
lock
fs
and
jg
mov
cld
pop
test
jp
add
pop
lahf
add
mov
lret
xchg
jp
lea
mov
cvtps2pd
mov
hlt
inc
push
push
inc
movb
repz
cmp
ds
sbb
fadds
and
push
ds
pusha
push
mov
das
test
pusha
cwtl
add
and
movsb
mov
imul
and
sahf
mov
outsb
mov
xchg
movsb
mov
sub
dec
sub
negb
sub
jae
int3
sub
pop
test
mov
ljmp
pop
rcl
test
ret
fwait
fwait
dec
movsb
data16
adc
push
sbb
and
ljmp
and
mov
call
dec
fcmovnb
pop
in
and
xor
sarl
lock
das
decb
xchg
and
fisubrl
push
lock
xchg
fiaddl
inc
in
push
add
test
cld
in
jecxz
out
sub
and
xor
into
mov
push
sub
or
xchg
inc
sbb
push
sub
jo
fstl
test
int
testb
pop
mov
sub
push
adc
cmp
push
ret
or
xor
mov
pop
pop
das
outsb
mov
and
inc
stos
shlb
mov
rorb
cmp
jg
jno
push
push
and
idivl
pop
stc
jns
adc
push
ja
mov
outsl
mov
or
sbb
mov
subl
pop
iret
and
pop
imul
mov
pop
jb
fsubr
or
sub
out
mov
je
mov
loopne
ret
jae
cli
pop
mov
cld
les
lahf
ret
cmpb
movl
xchg
add
adc
clc
fcoml
loopne
ja
inc
mov
jg
rcrl
nop
dec
pop
or
mov
dec
and
xor
sub
inc
xchg
imul
jp
mov
push
stos
in
and
or
loopne
jl
decb
mov
jns
addr16
icebp
out
shrl
inc
lods
aam
mov
cli
dec
dec
adc
bound
imul
cltd
mov
xor
jle
lods
js
inc
push
aas
incb
xchg
xchg
mov
inc
test
jae
xchg
dec
mov
fsub
clc
mov
cmp
rclb
popf
xor
addr16
pop
mov
mov
fcmovnbe
and
int3
adc
outsb
pop
jecxz
rclb
stos
or
loopne
test
popa
mov
and
test
test
aam
or
jnp
int
jle
xor
cwtl
sub
jo
xchg
add
int
aad
cmp
addl
pop
lea
mov
add
leave
or
or
inc
ss
aam
mov
sbb
aad
inc
mov
mov
jne
cmp
aad
sub
add
and
cwtl
test
bound
jb
push
les
imul
inc
fiaddl
inc
lahf
jmp
out
jle
add
cmp
or
add
cmp
je
stos
outsl
push
aam
cmp
sbb
inc
mov
sarb
mov
pushf
roll
cmpsb
pusha
sbb
gs
scas
dec
pop
js
adc
mov
inc
lahf
sub
sbbb
js
inc
pop
repnz
cmp
call
inc
hlt
imul
adc
and
and
mov
and
arpl
jg
ret
mov
fs
loopne
lods
mov
jne
subl
xchg
jne
call
aam
or
xorl
loopne
cmp
clc
sub
cs
jge
mov
jb
movsl
xchg
mov
mov
loopne
lock
call
lret
xchg
inc
lahf
pusha
insl
outsl
int3
fldcw
dec
push
pop
popf
arpl
ds
mov
sub
hlt
xor
mov
popa
call
mov
rclb
sarb
dec
sbb
adc
fdivrl
or
sbb
incl
cpuid
or
sub
pop
pop
cmpsl
outsb
push
pop
and
adc
jl
pop
cmpsb
ret
scas
lock
jecxz
or
pop
out
adc
mov
pop
and
mov
andb
add
cmpsl
mov
cmc
imul
sub
sbb
jp
push
scas
or
jo
fwait
lea
scas
inc
movsl
sbb
add
or
les
lea
nop
ja
cli
pop
fimull
add
bound
test
stos
mov
lret
nop
addps
mov
mov
cmp
mov
mov
sti
cmp
std
xchg
aam
shl
xchg
lret
sbb
dec
in
or
fnstsw
adc
rcrb
add
cmp
jno
sbb
mov
inc
loope
test
outsb
fldt
xorb
sub
andb
outsl
dec
mov
pop
inc
dec
pushl
xor
inc
std
mov
loop
test
mov
xorl
ss
repnz
nop
rorb
adc
testl
inc
push
add
out
inc
push
pop
in
sub
push
pop
xor
push
dec
jbe
mov
out
push
es
sub
dec
mov
push
sub
cmp
mov
pop
push
adc
ja
out
xor
int
lods
dec
and
dec
das
popa
sbb
mov
xchg
mov
jge
mov
pop
or
inc
loop
push
push
inc
std
push
nop
clc
push
inc
loopne
dec
mov
mov
ret
mov
mov
dec
adc
and
test
add
xchg
pop
mov
mov
nop
cmp
ljmp
loope
push
mov
pop
movsb
je
push
arpl
jnp
or
jmp
xor
insl
mov
stos
xlat
fiadds
push
ret
mov
out
mov
cld
lock
cmp
push
test
loope
mov
loopne
pop
adc
sbb
xchg
mov
inc
pushf
or
dec
pop
cwtl
into
int3
xchg
inc
dec
or
das
and
popa
pop
ljmp
lods
test
orb
mov
lea
addb
dec
mov
and
in
insl
sbb
sbb
test
lods
push
fxrstor
in
sub
iret
push
or
andl
rcll
sbb
and
jno
sahf
inc
popa
pop
or
mov
inc
mov
adc
pop
mov
inc
cltd
push
aas
pop
ss
mov
test
pop
orl
pop
gs
cmp
push
sub
inc
sbb
xor
pop
rolb
or
and
icebp
adc
add
push
mov
scas
je
or
sarl
mov
cmpsb
cmp
add
mov
faddl
ret
xchg
xor
arpl
fsubs
repnz
scas
rcr
push
cmp
enter
popa
cmp
je
orb
pushl
sbbb
psllq
in
out
in
sbb
xchg
int3
out
adc
addb
jne
loop
into
repz
das
sub
aad
inc
pop
or
inc
pushf
arpl
push
dec
cmc
sbb
outsl
std
fisttpl
insl
loopne
inc
lock
stc
sbb
and
jne
adc
push
mov
xor
lods
fs
jno
ljmp
int3
xor
movsl
add
mov
jge
push
xchg
sub
callw
xor
inc
mov
add
inc
outsl
and
cs
push
xlat
xchg
add
add
push
jnp
cmp
xchg
cmp
xor
call
sub
pushf
inc
in
lret
ret
cmp
and
pop
iret
sbb
out
sub
xchg
jb
lds
or
std
dec
sbb
push
cwtl
pop
adcb
in
xchg
cld
je
divl
adc
xor
pop
cmp
inc
xchg
xchg
cmpb
sbb
jne
test
push
mov
mov
sahf
add
mov
inc
rol
fdivrl
hlt
ss
mov
js
popf
rcll
inc
and
pop
jecxz
jae
mov
or
and
js
adc
push
pop
and
andb
aas
imul
mov
pop
aad
jb
loop
dec
xor
or
out
adc
addl
aam
dec
jno
mov
push
xacquire
cmc
fidivrs
sbb
pop
and
sbb
jl
subl
pop
jp
rorb
enter
daa
inc
es
add
or
xchg
dec
popf
stos
xchg
ret
add
sbb
rolb
and
mov
sarb
je
aad
dec
pop
cwtl
sub
xchg
fadd
fiaddl
in
cmpsl
pop
pop
push
and
inc
sbbb
mov
jns
xchg
fists
loopne
das
in
pop
gs
scas
ret
ljmp
ljmp
adc
mov
push
sub
add
ret
xorb
lcall
push
idivb
cltd
dec
inc
inc
jbe
and
punpckldq
jns
adcl
xchg
sbb
adcb
or
add
adc
shlb
mov
mov
cmp
cmp
inc
jge
mov
mov
mov
push
adc
faddl
mov
cmp
xor
cwtl
push
adc
xchg
or
dec
loopne
xor
cmp
pop
adc
sbb
jbe
imul
pusha
sub
sbb
lock
pop
inc
test
je
insb
inc
and
jno
popf
dec
pop
shl
sub
xor
or
sbb
lahf
lret
sbb
add
mov
or
and
lods
pusha
dec
adc
and
adc
in
push
adc
aas
inc
dec
mov
or
mov
faddp
pushf
or
mov
sub
or
inc
dec
mov
rolb
adc
test
and
dec
cmc
lds
test
xor
loope
mov
push
jmp
sbb
testb
mov
fldl
mov
mov
adcb
inc
mov
and
xor
sbb
icebp
sbb
loop
push
lahf
das
ret
bound
cs
icebp
adc
add
cmp
je
xor
ljmp
fidivl
test
popa
clc
pop
rorb
jg
add
jb
test
lcall
dec
cli
ds
push
jl
mov
dec
inc
mov
jne
jle
sbb
mov
jl
mov
pop
mov
mov
inc
ret
adc
or
or
pop
stos
sub
adc
or
loop
ss
dec
mov
xlat
jbe
hlt
adc
lock
inc
add
dec
cmpsb
push
or
rcrb
sti
lea
scas
xchg
jb
out
fimull
cld
shlb
adc
pop
inc
adc
mov
mov
sbb
sub
mov
lock
lock
fnstenv
test
decl
cmp
sbb
xlat
or
lock
inc
inc
in
lods
insb
jmp
pop
inc
inc
stos
lea
sub
in
cld
or
dec
pop
lods
add
repnz
pop
jl
sbb
cld
pop
fdivr
imul
or
sti
lods
les
cmp
pop
jl
hlt
inc
or
and
stos
pop
jmp
mov
scas
and
mov
pop
and
ljmp
rolb
mov
add
inc
pop
mov
mov
rorb
movsb
push
sub
and
test
fimuls
and
sub
pop
aam
movd
cmp
lods
inc
cltd
xor
jmp
lea
arpl
adc
rolb
or
fsubs
pop
push
cmp
fldenv
lahf
stos
gs
inc
shll
xchg
add
sub
test
or
cmpl
mov
pop
xor
orl
es
inc
daa
mov
movntps
inc
push
mov
int3
test
aam
cmp
mov
rcrb
insl
mov
mov
fildl
xchg
shll
jb
bound
inc
or
add
pop
jo
jge
incl
mov
mov
add
sbb
jge
dec
cmpsl
leave
scas
sub
mov
mov
sbb
mov
lock
or
jge
std
mov
add
das
enter
add
ret
aad
cmp
push
inc
test
and
stos
cmp
fdivrp
cmp
sub
fisubrs
or
adc
push
adc
out
ret
mov
mov
mov
stc
in
int3
rorb
pusha
or
testl
je
xchg
pop
mov
push
lret
sbb
mov
ss
sbb
pop
cmp
xchg
retw
lcall
faddl
hlt
add
mov
push
xor
and
push
lods
jno
loope
addl
sub
inc
mov
test
jo
adcb
cli
je
xor
ljmp
insb
inc
loope
scas
mov
pusha
pop
icebp
mov
adc
or
dec
mov
jnp
adc
inc
into
jcxz
js
cmp
sbb
xor
test
loopne
rorb
call
xchg
mov
ror
pop
and
fsubrl
into
sub
push
scas
les
add
dec
outsl
push
push
adc
ljmp
ss
test
xlat
mov
sub
cmpsl
xor
cltd
pop
gs
rclb
or
mov
xchg
lock
subb
mov
and
push
xor
mov
push
mov
gs
jb
ret
xchg
std
mov
xor
xchg
scas
jmp
cmp
mov
outsl
inc
fucomp
pop
add
fimuls
js
mov
out
push
sbb
rcrl
pop
lods
xlat
jg
sbb
or
and
inc
pusha
pop
scas
addr16
ret
xchg
sbb
je
test
mov
sbb
stos
cli
orb
dec
lea
lret
fwait
aam
test
sbb
fildl
jnp
mov
jge
rcr
movsb
mov
xor
mov
push
cwtl
xor
push
lret
dec
add
xchg
xchg
mov
out
jle
adc
or
cmpsb
test
sbb
mov
in
xchg
jg
and
mov
jp
fisubrl
xchg
jb
pushf
into
mov
scas
mov
jp
cli
ja
movsl
mov
addr16
adc
cltd
outsl
inc
push
js
inc
push
sub
or
mov
mov
dec
push
sahf
rorb
and
call
pushf
inc
std
mov
sbb
adc
mov
fdiv
fdivrl
xor
sub
out
nop
xor
imul
xchg
mov
cmpxchg
fs
int
jl
mov
fcoml
sub
mov
xchg
and
loopne
inc
enter
popa
xchg
icebp
sub
xor
add
rolb
sbb
mov
out
nop
sar
sbb
ds
mov
test
xlat
push
clc
loope
push
ret
mov
hlt
mov
pusha
rolb
call
push
or
stc
jo
loope
jo
xor
rorb
pop
imul
jbe
sahf
lret
cmp
je
push
mov
popl
mov
ds
hlt
push
das
mov
xchg
mov
data16
pshufw
mov
cmp
bound
test
sbb
ret
xlat
adc
push
ds
loop
jmp
mov
outsb
fildll
jae
or
testb
lods
cli
js
mov
fsubrl
mov
ficoms
or
les
add
dec
jne
dec
cmp
fs
or
outsb
lods
scas
mov
mov
mov
stos
and
push
adc
add
mov
js
cmp
xor
add
and
jg
inc
mov
iret
gs
push
icebp
jge
stos
clc
gs
sbb
mov
push
jecxz
fcoms
popa
ds
movsb
rol
or
das
adc
inc
mov
lcall
jl
dec
lock
mov
mov
xor
jb
loope
jnp
imul
inc
int
xor
jns
lds
leave
add
or
add
movsl
movswl
int3
insl
loop
xor
lret
repz
lret
cmp
mov
lret
pop
ret
scas
inc
dec
sbb
fsubl
out
push
mov
mov
inc
or
add
push
subl
out
subb
add
roll
add
pop
pop
lret
inc
ss
fnstsw
inc
dec
insl
push
insb
lcall
sub
or
mov
jmp
aad
cmp
es
mov
addb
mov
inc
mov
mov
jg
and
mov
or
cwtl
mov
sub
push
in
cli
ja
xor
mov
clc
outsl
pop
push
sub
rcll
add
cmp
or
pop
xchg
loope
xchg
in
pop
outsl
jle
mov
mov
clc
dec
or
and
mov
nop
jle
fs
pop
adc
push
lods
add
mov
call
push
mov
arpl
pop
xor
xchg
sub
je
cmp
sub
jbe
adc
imul
pop
icebp
xchg
call
jns
dec
into
mov
mov
roll
insl
mov
divl
int
lock
push
mov
push
in
ss
call
popf
popa
daa
push
movsb
mov
cmpsb
jne
aas
ss
xor
shll
dec
inc
sbb
pop
clc
cmp
idiv
xchg
int3
gs
jp
jne
sub
push
bound
dec
cmp
cmp
les
in
mov
popf
out
clc
push
stos
mov
xor
scas
push
fs
xchg
and
lods
push
add
add
pushf
inc
adc
xchg
pop
pop
or
push
ret
add
inc
pop
inc
pusha
daa
call
mov
mov
jl
and
pop
mov
ljmp
bound
test
pop
mov
mov
cmp
movsl
xchg
test
addb
add
xchg
sarb
and
cmpsb
pop
std
ljmp
into
fs
jbe
pop
jl
or
aam
out
mov
mov
sub
loope
hlt
outsb
mov
pop
mov
ss
popf
shrl
sub
dec
sub
lret
push
pop
or
pop
xchg
inc
xchg
pop
jecxz
xorl
adc
shll
mov
sub
rorl
out
andb
nop
cmc
ljmp
mov
movsb
jecxz
lock
pop
ret
leave
jo
js
bswap
call
pop
add
in
mov
add
es
loope
test
lret
pop
mov
jle
and
dec
fmul
xorb
mov
cli
bound
sarb
xchg
dec
cmp
and
lock
mov
je
sbb
rcrl
mov
adc
outsl
or
inc
negb
mov
xchg
addb
mov
mov
cwtl
shlb
mov
popf
sub
cmc
shrb
inc
cmp
adc
push
add
stos
xor
popa
mov
and
jecxz
add
outsb
or
mov
lret
cmp
inc
adc
mov
in
dec
push
pop
stc
div
ret
sbb
sbb
clc
dec
dec
fdivr
push
pop
icebp
inc
iret
xchg
sbb
jnp
or
xchg
outsb
cmp
jp
add
je
lock
push
xor
rclb
inc
jp
jp
push
or
or
lahf
sarb
test
jle
push
pop
inc
insl
aas
clc
in
jp
inc
xchg
mov
adc
pop
fisttpl
add
ss
xchg
mov
add
hlt
in
xor
rolb
cld
stos
clc
mov
push
cmpl
mov
cs
inc
mov
shrb
div
test
add
sti
mov
jl
fcoml
xor
ljmp
sbb
xlat
sbb
and
and
pop
xor
mov
jg
and
cs
add
insb
and
inc
jnp
loope
push
popf
cmp
sbb
pop
imul
test
cmp
lcall
aas
cmp
pusha
and
or
clc
in
cwtl
shlb
fiaddl
push
shlb
test
jp
mov
dec
dec
les
inc
repz
push
mov
cli
cli
inc
insb
or
sbb
and
mov
and
dec
sub
adc
dec
mov
cs
in
push
adc
or
sbb
xor
cwtl
sbb
lock
mov
leave
adc
ret
es
cmp
test
aam
or
adc
dec
orl
xchg
test
imul
add
hlt
inc
inc
adc
rcrb
or
sbb
adc
inc
pop
sbb
adc
cs
jb
dec
pop
dec
jmp
cwtl
inc
insb
mov
lret
mov
xchg
popa
dec
lahf
push
push
xor
inc
mov
adc
and
test
push
xchg
cwtl
hlt
mov
aad
mov
mul
inc
mov
repnz
mov
mov
gs
inc
push
inc
fucom
imul
lret
inc
sub
orl
rorb
dec
lcall
or
adc
mov
inc
cli
es
and
subl
aad
and
push
cltd
sarl
push
imul
mov
test
xor
inc
cmp
ds
loopne
add
cld
xchg
cmp
xchg
hlt
bound
cmp
cld
xchg
xchg
push
cmpsb
or
mov
push
mov
pop
push
fisubrl
xchg
sub
sbb
adc
adc
lret
cld
inc
in
push
mov
jecxz
out
inc
and
andb
dec
fistpll
or
and
mov
mov
arpl
sub
mov
loop
or
mov
fmul
pushf
or
call
test
mov
sbb
xchg
and
mov
pop
ret
mov
ds
mov
cs
mov
addb
insb
add
pop
and
dec
xor
bound
inc
movsb
adc
pop
ss
sub
inc
lock
aad
sbb
mov
mov
fwait
in
fidivl
call
jg
loop
mov
or
sub
hlt
rep
pop
or
adc
mov
adc
push
cli
scas
lcall
iret
pop
fdivs
push
movsb
imulb
xor
sub
mov
decl
lock
inc
mov
jge
bound
mov
push
mov
rclb
fstl
ficompl
cmpb
je
fnstsw
jbe
add
ds
xchg
movl
push
int3
push
jns
lods
dec
lods
add
inc
lret
popa
fmulp
push
insb
mov
jle
pop
mov
push
arpl
addr16
testl
pop
or
js
daa
test
sbb
mov
rorb
cmp
cmp
inc
inc
pushf
inc
ss
dec
or
clc
inc
pop
sahf
and
inc
mov
out
xchg
js
adcb
inc
cs
fiadds
jle
push
sbb
or
dec
mov
sbb
xor
nop
test
popa
lds
cwtl
shlb
call
mov
lds
orl
push
es
adc
or
loopne
mov
shrb
dec
addb
inc
lods
je
out
cmp
xorl
popf
bound
cld
or
shl
dec
fst
dec
sub
std
addb
incb
inc
fs
cmpb
push
imul
std
scas
push
inc
lahf
lcall
scas
or
cli
jecxz
cmc
cmp
xor
jno
xor
jbe
movsb
fs
mov
sub
cmp
push
cli
mov
or
xchg
or
adc
push
xor
adc
cmp
jno
aam
insl
test
arpl
sbb
xchg
xchg
clts
dec
mov
loopne
adc
cli
xchg
push
bound
add
ss
fidivrl
int
loope
call
fisubrs
cmp
xchg
inc
stos
dec
cli
add
lea
xchg
mov
shlb
imul
movsb
or
insb
mov
jge
stos
mov
and
lret
je
xor
test
lods
mov
scas
push
call
push
sbbl
fbld
rcll
push
mov
jne
insl
rorb
xor
in
or
lods
sbb
lds
lock
push
sbb
mov
iret
xchg
rorb
in
cmp
mov
andb
and
aaa
stos
faddp
fdivs
pop
and
pop
pop
add
imul
cmp
mov
js
es
jb
outsl
mov
jecxz
mov
sub
scas
fwait
lock
mov
cmp
add
and
push
ficompl
std
sbb
mov
xchg
sub
mov
add
xlat
imul
std
cmpsb
das
jge
leavew
rclb
pushf
daa
and
mov
cmp
jecxz
fiaddl
sbb
push
stos
mov
inc
int3
and
dec
push
das
mov
xchg
adc
xchg
gs
shl
sbb
sbb
jns
xor
js
punpcklbw
bound
jl
movb
sbb
xchg
out
adc
pop
test
sbb
mov
jecxz
filds
js
lock
imul
lods
js
cmpsl
ljmp
imul
cmp
sub
sahf
std
clc
push
jnp
pop
pop
push
xor
popa
movsl
imul
pop
push
scas
loopne
mov
ds
movsl
pop
daa
inc
stos
mov
dec
stos
icebp
bound
pop
adc
sbb
push
fcomp
dec
mov
movsb
cld
add
or
sbb
js
inc
sbb
sbb
add
rcll
or
cmp
daa
push
jle
mov
mov
add
jo
mov
psadbw
orb
addb
adc
sub
sahf
cmpsb
add
mov
cvttps2pi
jl
mov
mov
inc
sti
pop
or
insl
and
xchg
xchg
mov
leave
add
adc
inc
push
add
es
pusha
in
js
test
ret
inc
push
ds
or
xor
adc
test
inc
std
hlt
xchg
ficoml
stos
mulb
leave
bound
loop
xchg
lods
mov
mov
xor
push
ljmp
adc
mov
mov
loope
cmp
scas
add
sbb
inc
and
inc
pop
imul
or
xchg
mov
inc
mov
ss
dec
daa
clc
divl
fcomps
xchg
pop
push
addr16
pushf
adc
fwait
sbbb
sbb
lods
rolb
pop
jb
pop
rolb
add
f2xm1
or
in
adc
mov
push
dec
inc
mov
mov
pop
pop
lret
inc
adc
cli
daa
out
pusha
dec
xorl
sub
adc
or
in
sub
cltd
cmc
and
inc
xchg
and
inc
iret
sub
cmpsl
or
jg
push
hlt
scas
xor
jns
mov
mov
dec
nop
das
jae
mov
pop
cmpsl
or
mov
pop
pop
outsb
jecxz
jle
mov
adc
pushf
je
je
add
jg
imul
ljmp
mov
ss
pop
daa
push
mov
fsubs
iret
xor
jecxz
adc
push
ds
sbb
mov
iret
les
ss
js
aas
jle
ret
hlt
jne
xlat
jp
ret
add
stc
xor
fs
cmc
orb
push
ss
jl
jb
imul
mov
imul
popw
outsl
sub
pop
and
adcb
adc
dec
jge
adc
fisubrl
into
jb
push
fadds
hlt
jmp
jge
add
push
pop
sub
dec
insb
movsl
loopne
inc
jp
xchg
push
insl
add
out
shl
mov
xchg
aas
arpl
das
lea
ret
hlt
mov
mov
cmp
add
ss
xor
clc
or
pop
sbb
daa
lock
arpl
fprem
ror
fcoml
dec
mov
ljmp
cmpb
rclb
inc
and
mov
loop
inc
push
pop
lcall
jge
or
jbe
inc
pop
ja
ret
movsb
lret
inc
mov
pop
pop
outsl
fcoms
mov
jp
not
dec
cmp
ret
mov
mov
imul
sbb
in
loope
pop
push
cmpsb
insl
inc
sub
and
aaa
add
adc
fisubs
fwait
mov
loop
cltd
cli
sub
insb
jle
cmpsb
pop
hlt
sub
push
icebp
mov
fcoms
adc
ss
cmp
lods
call
test
push
xchg
inc
inc
sbb
pushf
popa
fwait
clc
sbb
cmpsl
test
fmulp
popf
lret
enter
mov
shl
xor
jb
pop
mov
sub
cld
clc
mov
mov
jnp
dec
decl
icebp
insl
dec
inc
leave
mov
inc
rol
dec
mov
sbb
decb
mov
mov
incb
dec
inc
mov
pop
jmp
push
cmp
jnp
lock
add
or
mov
and
sbb
adc
lea
mov
mov
in
push
lss
xor
addl
xor
orb
inc
push
fdivrs
xchg
jge
jbe
je
dec
or
loop
fmulp
mov
jmp
and
push
enter
mov
cmp
mov
push
pop
popa
mov
or
sbb
pop
sbb
jmp
nop
ja
ffreep
mov
ljmp
sbb
xor
call
repnz
dec
ss
adcl
ds
pop
call
jo
mov
inc
add
xchg
lcall
movsl
cmpsb
mov
sub
aad
sub
cli
push
sbb
and
rcll
les
or
mov
sbb
out
shl
mov
inc
dec
fdivrs
mov
inc
mov
cs
das
push
add
stos
mov
pop
mov
sbb
push
or
mov
lret
jo
sub
bound
lock
xchg
and
pushf
je
mov
hlt
test
dec
dec
inc
sub
add
and
xor
std
fstps
mov
aaa
popa
shll
iret
out
xor
and
les
jb
pop
lods
mov
push
jno
cmp
addl
and
repnz
fidivl
and
mov
or
xchg
pop
sub
nop
sbb
es
push
sbb
sub
mov
insl
imul
jno
jo
ret
loope
pop
in
outsl
xchg
dec
add
pop
jecxz
lcall
loope
pop
dec
clc
xor
in
dec
xchg
mov
jle
cmpsl
test
jecxz
imul
dec
push
xchg
push
push
push
mov
mov
or
outsl
mov
sub
inc
nop
push
inc
inc
inc
dec
push
and
das
inc
lret
push
std
fld1
ret
push
in
push
lods
lret
loopne
xor
and
dec
push
push
sbb
shlb
fldt
icebp
enter
lret
and
out
jo
xor
adc
push
sarb
pop
jg
jecxz
sub
aas
jmp
pop
aam
pusha
hlt
mov
mov
ss
sub
in
pop
push
aam
leave
faddl
push
cli
aas
mov
aam
lret
in
xchg
xor
jae
cld
sbb
pop
push
lret
adc
cmp
cld
sbb
cmp
sahf
jae
lods
pop
mov
bound
addb
scas
dec
adc
xor
mov
aam
mov
clc
popa
sbb
jecxz
cmp
adc
js
rclb
aad
sbb
push
loop
out
repnz
arpl
mov
cwtl
test
lret
mov
push
add
aam
repnz
hlt
fnstenv
mov
push
sub
pop
shl
movb
arpl
and
xchg
out
inc
mov
cmp
push
cld
adc
mov
add
sub
lret
imul
adc
arpl
pushf
xor
inc
push
adc
hlt
lods
jmp
and
movsb
inc
addr16
or
mov
clc
and
mov
enter
xorb
ret
and
pop
or
rorb
pusha
sub
jecxz
push
push
xchg
and
lahf
into
addl
jae
sbb
xchg
fnstcw
fwait
aam
ss
sub
lods
mov
mov
ljmp
repnz
push
idivl
rclb
lock
jnp
arpl
ret
xor
outsb
outsl
test
or
push
stos
xor
mov
aam
decb
orb
decl
mov
push
jl
inc
mov
out
cmc
lock
scas
mov
mov
or
xchg
sbb
lods
mov
add
or
cltd
xchg
test
adc
dec
mov
lock
rorb
xchg
add
push
push
sbb
out
or
into
ret
or
inc
cmpsl
ret
xorl
clc
sbb
jne
jle
xchg
pop
fstps
pusha
pop
dec
add
shll
jle
icebp
adc
mov
adc
xchg
js
push
pusha
gs
arpl
adc
pop
pushf
es
and
adc
mov
mov
scas
xor
mov
and
cwtl
adc
lock
lahf
rcr
push
scas
test
cmpl
pop
iret
lahf
and
jbe
out
adc
sahf
in
mov
test
or
or
pop
push
push
jmp
push
int
in
inc
scas
test
pusha
sbb
mov
rorb
pop
adc
aaa
push
inc
mov
movsl
cltd
rclb
jmp
and
neg
adcb
xchg
stos
shlb
and
outsb
cmp
add
outsl
lret
popf
push
push
jmp
sbb
xor
add
test
mov
jp
mov
sbbl
push
inc
mov
push
insb
and
inc
add
xchg
dec
and
xchg
mov
std
loopne
lahf
jl
call
aam
mov
and
ds
lds
adc
ss
push
sti
adc
incl
and
or
pop
and
adc
sub
popf
xchg
pop
pop
ret
add
ror
xchg
into
test
sbb
repz
lret
jmp
mov
sahf
mov
mov
cmp
rclb
xchg
subps
aaa
sti
xchg
movsl
inc
cld
out
testb
cmpb
jnp
push
cmp
mov
jo
inc
jp
pop
rol
rorl
pop
pop
cmc
cs
push
mov
or
push
lret
pop
and
inc
add
jg
rcrl
and
adc
pop
mov
push
outsb
inc
inc
mov
mov
add
insb
adc
xchg
loope
stos
test
loop
and
outsl
dec
jg
xchg
add
insb
lret
loop
sbb
mov
inc
fsts
lahf
add
mov
jae
pushf
or
jle
push
and
add
pop
mov
dec
pop
or
cmpsb
sbb
les
test
mov
jmp
push
out
mov
sbb
and
test
cli
daa
rolb
in
ja
je
pop
mov
shrb
dec
mov
mov
mov
inc
add
push
inc
shr
adc
fisubrl
cmc
inc
xlat
xchg
fucomip
imulw
call
push
mov
xor
push
mov
orb
mov
jecxz
rorb
or
ret
adc
mov
xor
mov
mov
lds
ljmp
mov
loope
or
add
push
loope
shrl
mov
jecxz
mov
and
add
mov
addb
sbb
add
js
sbb
andb
ljmp
push
stos
arpl
jp
ficomps
js
fstpt
mov
jbe
mov
pop
push
add
repnz
adc
frstor
or
pop
ss
fs
das
in
and
fwait
pop
andl
mov
popa
addr16
push
inc
data16
add
mov
or
adc
pop
dec
pop
dec
jle
xor
loopne
daa
pusha
mov
mov
pop
mov
and
inc
movsb
cmpl
or
add
inc
daa
out
dec
pop
adc
loopne
shll
fadd
jne
inc
movsl
jno
sub
push
jbe
test
out
sub
repz
lret
jle
pop
filds
jae
loop
jno
xchg
xchg
cmp
cmpsl
inc
pop
xchg
jle
xchg
mov
test
xor
loopne
mov
jle
xor
imul
and
mov
adc
hlt
scas
cmp
mov
mov
lcall
les
shlb
out
dec
sbb
ja
jns
les
lods
inc
or
dec
leave
mov
ljmp
pushf
hlt
aaa
add
adc
jno
movsl
pop
adc
xchg
push
mov
mov
popf
jno
inc
mov
or
push
jmp
rcrb
aaa
gs
mov
nop
mov
sbb
loop
das
push
icebp
jnp
pop
xchg
jge
loope
movsb
into
jl
fidivl
add
xchg
das
jo
hlt
cmp
jno
cmp
xchg
xchg
rolb
dec
cmp
fldcw
jg
out
jmp
mov
call
mov
or
dec
insl
in
add
dec
push
int3
pop
sub
fnsave
mov
in
aas
cmp
sbb
adc
add
or
inc
inc
xchg
rolb
shlb
jnp
cmp
int
sbb
popa
cs
rorb
shrl
loop
mov
hlt
xor
andb
adc
cld
js
mov
fnstenv
pop
in
lret
or
mov
leave
rclb
jmp
sbb
adc
or
or
aam
jns
xlat
sarb
fs
cmpsb
cltd
push
gs
xchg
mov
inc
jg
cmp
mov
mov
and
repz
cwtl
adc
mov
and
frstor
fadds
in
mov
fs
push
loopne
xorb
stos
mov
cld
jnp
nop
add
call
inc
push
pop
jo
repnz
mov
lahf
adc
cmp
std
cmpsl
xchg
popl
testb
fwait
xor
sub
inc
lahf
lcall
jle
scas
jo
sbb
rol
jmp
jbe
dec
out
scas
rorb
movsb
or
cld
xchg
into
xor
in
mov
push
xor
insl
cmc
dec
pusha
andl
negl
sbb
cmp
inc
je
xchg
cmpb
mov
push
loopne
ljmp
lret
cmp
imul
outsb
and
loope,pn
push
movlps
pop
push
jnp
inc
adc
pop
enter
iret
mov
add
imul
faddl
lds
mov
fsubs
scas
clc
in
or
mov
dec
stos
adc
adc
adc
es
shlb
lock
mov
mov
sahf
jne
add
repz
mov
and
mov
push
pusha
pop
movsb
fadds
add
sahf
aad
test
cmp
and
push
cld
pusha
js
inc
flds
mov
mov
in
sbb
aad
ljmp
xchg
ljmp
dec
and
test
mov
adc
mov
add
cmpsl
test
aas
or
sbb
or
xor
push
roll
mov
and
sbb
mov
jl
adc
sahf
in
sbb
and
jae
add
inc
and
inc
push
fcoml
push
ljmp
pop
insb
pop
loope
cwtl
test
push
add
add
or
test
call
pop
push
je
shlb
xlat
inc
adc
pop
dec
adc
sahf
cltd
and
or
sarb
cmp
mov
jo
lcall
gs
clc
jge
adc
add
pop
orb
sbb
mov
pop
fwait
push
mov
mov
in
mov
push
test
pop
mov
hlt
push
test
dec
push
andb
xor
xchg
insl
insl
jmp
dec
dec
mov
imul
xorb
ror
jno
jae
aad
lock
mov
adc
sbb
lods
cmp
push
sub
pop
mov
xorb
xorb
xor
xor
push
or
add
lea
xchg
ficoml
sbb
bound
in
mov
jp
fxch
sub
mov
xchg
mov
adc
das
push
sbb
ret
lock
mov
ret
shlb
xlat
add
mov
jae
cmc
xchg
mov
sub
rcll
push
loopne
das
lret
or
inc
xchg
je
sub
pop
or
or
add
xchg
cli
and
mov
ljmp
mov
adc
sbb
sbb
flds
mov
divb
imul
jle
dec
and
mov
mov
fadds
jb
push
dec
sub
xchg
add
sbb
cli
push
inc
outsb
mov
adc
mov
aaa
jl
addb
jle
mov
or
mov
mov
lahf
push
fmull
xor
and
cmpsb
xchg
xchg
and
push
pushf
ret
sub
jbe
fsubs
sub
bound
pcmpeqb
enter
aam
jmp
icebp
mov
ljmp
jp
sub
sarl
sub
sbb
mov
and
sub
pop
loope
imul
jp
mov
inc
fidivrl
sub
fs
bound
rolb
cli
add
pop
mov
cmp
popa
nop
fidivl
jle
and
decb
sbb
popa
mov
pop
rorl
out
cmc
shrl
leave
dec
testb
dec
gs
imul
pusha
xchg
jl
adc
xor
test
hlt
loope
push
outsb
add
repnz
daa
movsb
add
sbb
inc
incl
and
stos
jbe
je
nop
xor
inc
jo
shrl
movsb
popl
mov
jp
fucom
mov
aaa
push
and
jl
jmp
mov
and
add
cmp
cmp
sub
jl
test
sbb
fistpll
rolb
ss
push
pop
mov
sbb
xchg
pop
xchg
test
xor
mov
cmp
add
push
repnz
add
sti
inc
les
mov
popf
cwtl
jl
es
movups
gs
adc
clc
mov
mov
loope
push
test
xlat
fwait
xchg
xchg
stos
dec
mov
pop
hlt
or
and
xchg
fs
notb
adc
sub
addps
inc
inc
rcl
sub
xchg
push
lods
roll
lods
xor
arpl
pop
shr
sbb
mov
mov
sarb
mov
bound
and
add
roll
enter
cltd
stos
mov
mov
add
rclb
pop
sbb
das
sarb
cmp
inc
adc
pusha
and
mov
sub
jge
sub
add
push
test
or
roll
dec
mov
mov
push
sub
add
adc
or
add
and
repnz
mov
testb
jp
jmp
scas
cmp
jge
and
push
pop
mov
dec
in
fldl
dec
or
fldl
jle
les
adc
scas
push
cwtl
xor
and
dec
gs
cmc
test
jle
push
lds
out
push
xchg
xchg
and
scas
lahf
std
adc
insb
icebp
fnstenv
je
leave
lahf
push
xlat
lcall
js
adc
inc
mov
enterw
mov
or
mov
addb
or
int3
je
sbb
icebp
test
pop
ret
mov
dec
std
andb
clc
sarb
sti
adc
shrl
jge
in
inc
sbb
jmp
add
ds
int3
std
mov
mov
stos
mov
mov
sti
push
push
hlt
add
in
mov
dec
jg
scas
movsb
lcall
xor
add
jo
idivb
adc
add
pusha
in
dec
pop
nop
xor
mov
cmc
jbe
das
and
mov
ljmp
js
adc
lretw
sbb
hlt
inc
inc
dec
andl
and
sarb
xchg
mov
push
xchg
sub
xor
ljmp
rorl
cmp
int3
xor
jp
fwait
shll
es
cli
adc
mov
aad
pop
lods
movsl
pop
lods
sbb
push
jp
js
or
mov
icebp
adc
and
sub
das
sub
rorb
cwtl
inc
mov
imul
fcmovu
fistps
addb
fsubrs
and
aaa
or
mov
stos
push
or
enter
fsubrs
roll
rolb
das
and
pop
aam
fimuls
mov
cmp
pop
addb
adc
add
fsubrs
add
dec
lcall
out
dec
pushl
xor
and
les
xchg
pop
adc
mov
test
mov
hlt
sub
ficomps
mov
adc
sbb
adc
stc
jbe
shll
pop
or
mov
mov
jge
lahf
out
pop
dec
push
les
mov
out
sbb
cmp
cwtl
jecxz
arpl
add
cs
pop
jbe
popa
loopne
test
out
out
xchg
add
pop
add
loope
and
insl
and
mov
out
push
pop
subl
int3
lock
jbe
jno
pop
adc
loopne
pop
jbe
adc
loope
scas
sbb
popf
sbb
test
jb
and
cmp
jns
cmp
lahf
icebp
xchg
rcrb
test
sahf
jb
lods
mov
shlb
adc
inc
mov
lcall
pop
adc
loop
adc
jb
inc
or
and
lcall
lock
dec
pop
sbb
stos
or
addr16
aam
push
test
cmpsl
push
fdivl
mov
dec
sahf
push
addl
out
pop
test
addl
and
push
pop
int3
pop
mov
rolb
xchg
mov
sbb
mov
mov
or
jp
cmp
data16
int
call
daa
push
push
ljmp
into
pushf
loope
sub
je
pop
fneni(8087
mov
outsb
sub
cld
cmc
scas
shl
mov
or
or
sub
inc
loopne
sub
xchg
push
add
mov
xor
jg
adc
inc
pop
sar
xor
roll
and
test
mov
add
sub
jo
jecxz
add
mov
test
inc
dec
jo
cltd
jge
shrb
adc
push
sti
and
fsubrl
jle
xchg
mov
or
rorb
sub
add
mov
xchg
cs
pop
jo
int3
or
xchg
out
in
imul
sub
movsl
adc
xchg
pop
adc
in
lock
push
js
adc
mov
loop
mov
enter
jle
sub
sub
inc
sbb
scas
mov
sub
mov
les
inc
mov
sub
insb
jnp
pop
push
addr16
test
or
inc
and
inc
jmp
je
dec
call
push
inc
push
adc
fcoms
pop
loope
jecxz
or
into
pushf
adc
fmuls
fs
pop
cli
adc
sbbb
and
outsb
push
outsl
outsb
jg
pusha
mov
push
xchg
enter
or
cltd
aad
jnp
int
dec
lea
mov
fnstsw
in
lahf
test
cmp
push
adc
dec
cmp
xchg
jg
and
inc
xchg
mov
xchg
loop
sbb
andb
and
aam
push
jne
inc
mov
mov
mov
mov
xchg
pop
in
loop
es
xor
cmc
rcrl
cmp
loop
or
mov
ljmp
xchg
fadds
dec
rclb
push
xor
movsb
les
lock
fucomi
xchg
inc
push
jmp
inc
push
push
in
mulb
loopne
arpl
call
inc
stos
mov
cld
xor
dec
loopne
mov
popf
cmp
mov
sti
cli
mov
mov
mov
inc
xchg
shlb
shrb
sbb
cwtl
notl
xor
popf
and
add
ss
or
popf
and
inc
cld
fld
inc
push
push
mov
add
jmp
icebp
xchg
mov
lods
dec
adc
adc
jg
iret
sub
jmp
lock
mov
xor
pop
add
push
lods
testl
jp
cmp
dec
sbb
decl
and
or
jbe
enter
orl
lds
and
jle
inc
rcrb
sahf
xchg
movsl
cmp
sbbb
xchg
popa
in
push
jp
lahf
out
pushl
clc
xchg
call
test
stos
int3
inc
shrb
in
mov
addb
dec
push
or
mov
mov
or
loope
add
inc
js
adc
mov
pop
pop
clc
or
std
mov
jp
and
leave
xlat
dec
hlt
push
jg
arpl
test
pop
sarl
and
inc
add
insb
sti
hlt
sahf
push
cltd
les
les
iret
mov
adc
pop
or
sbb
push
jle
mov
sbb
push
push
popf
and
sbb
ret
shlb
sub
stos
ret
in
ficompl
or
push
lcall
repnz
imul
add
dec
sub
psrad
js
pop
call
sub
out
daa
add
push
ss
pabsw
pop
jecxz
shlb
xchg
jp
mov
lret
call
jecxz
sbb
mov
fidivl
sti
fsubl
lcall
scas
cs
dec
mov
mov
cmp
xor
push
sub
aas
jbe
mov
cld
stos
fdivs
lock
jp
fdivrs
pusha
add
dec
test
mov
in
mov
das
idiv
test
rorl
xchg
data16
es
or
test
outsb
lods
clc
add
pop
add
pop
stos
xor
xchg
mov
je
jge
orl
cmp
push
jp
and
sbb
push
mov
sarb
test
jle
push
daa
pop
movsl
notl
push
cmpsb
xor
or
adc
adc
sub
mov
repz
lahf
or
add
push
jecxz
and
fistpl
mov
cmp
imul
popf
popa
push
sbb
int3
div
adc
mov
mov
inc
inc
adc
or
not
imul
pop
sub
and
push
push
data16
pusha
adc
in
xor
icebp
ljmp
mov
ficoms
sbb
out
mov
fisubl
push
mov
add
lds
cmp
sbbb
jo
inc
in
mov
or
sub
inc
jge
mov
jbe
out
fiaddl
cli
mov
mov
jo
or
fmuls
lret
pop
jo
std
fsubs
mov
or
test
push
test
inc
or
adc
add
xchg
imul
sbb
and
mov
push
sti
xchg
and
popf
lcall
xor
decl
pop
jg
sbb
push
inc
sbb
lcall
cmpsb
int3
out
xchg
in
mov
cmc
add
mov
jg
jle
jo
mov
pop
cltd
shrl
xchg
sub
push
ret
cmpsb
xchg
cs
std
insl
sbb
orb
pusha
push
aam
sbb
movsb
nop
cmp
or
scas
pop
cld
pop
xchg
je
repz
and
push
push
jg
and
adc
cmp
idivl
pop
xchg
gs
inc
pop
lcall
cli
dec
rolb
add
xor
cld
push
std
addr16
mov
outsb
mov
leave
out
ds
imulb
cwtl
jbe
mov
movsb
xchg
add
xor
ror
xor
lock
rolb
jge
cs
or
int3
dec
mov
ljmp
mov
adc
and
int
push
add
and
xchg
xchg
mov
clc
sahf
cmpsl
jle
pop
xchg
mov
lods
or
mov
ss
or
or
and
aas
movsb
adc
call
cmp
ss
loop
test
cli
pop
lock
and
pop
xchg
or
xchg
mov
leave
shlb
jle
lahf
inc
cmpsb
stos
es
adc
cmpb
push
fsqrt
mov
das
push
lea
xor
into
faddl
push
or
in
cmpb
iret
push
ljmp
cld
push
and
add
in
mov
sub
icebp
inc
mov
addb
and
je
hlt
scas
fidivrl
mov
stos
or
loopne
je
in
or
push
lahf
rolb
push
lock
subb
adc
inc
loop
movsb
mov
mov
test
xchg
jnp
jg
out
mov
dec
pop
bound
xor
test
mov
mov
shlb
and
jb
pop
ja
sbb
pop
mov
dec
sarb
sub
mov
repnz
in
icebp
cltd
leave
ret
push
jmp
loopne
jg
or
jle
sarl
sub
in
pop
mov
movsl
inc
js
shll
sub
sbb
mov
and
shl
xor
daa
and
call
fmulp
dec
mov
test
pop
in
inc
mov
cmp
enter
push
inc
xchg
movsl
dec
xor
xchg
sub
adc
inc
test
pushf
pop
add
pop
sbb
add
xor
mov
lahf
push
ss
testb
push
fs
lock
xchg
cmp
adc
bnd
mov
movsb
dec
dec
pop
sub
cmpl
dec
cwtl
shrb
es
push
popf
mov
mov
fistpll
push
jecxz
jae
or
fiaddl
loopne
xor
into
add
aas
xor
or
mov
jge
adc
jbe
mov
hlt
scas
dec
imul
cmp
mov
es
inc
xor
cli
xchg
icebp
add
in
add
inc
dec
clc
pop
mov
ret
and
ljmp
or
sub
sbb
loopne
cwtl
mov
xchg
aas
incl
mov
cltd
rcrl
push
add
xchg
hlt
or
les
mov
hlt
arpl
addr16
xchg
dec
adcb
lcall
mov
fisubrs
dec
xor
out
cli
inc
out
jle
pop
mov
jge
scas
imul
js
lahf
mov
pop
orl
aaa
mov
imul
adc
cmpsb
push
mov
sub
es
xchg
fimull
mov
fwait
insl
or
shlb
fsubr
jge
fsubs
fadd
inc
lds
call
cmp
xor
mov
pop
sub
jo
sbb
clc
fcoms
or
fistl
out
rclb
jecxz
and
mov
mov
repnz
in
push
arpl
loop
cmp
sub
inc
test
pop
out
das
loopne
mov
sbb
xchg
cmp
inc
insb
fcoml
dec
nop
ljmp
pop
sahf
jb
push
lea
mov
imul
sbb
lock
jle
or
clts
or
shrl
sbb
lcall
push
push
push
and
popf
mov
movsl
jb
adc
sbb
xlat
adc
mov
inc
inc
pop
lock
leave
movsl
and
mov
xchg
cs
testl
inc
call
and
xchg
sar
dec
gs
rorb
jb
repnz
nop
xchg
aam
and
mov
mov
sub
pop
fiaddl
push
jp
sub
mov
fs
mov
adc
movsl
and
iret
cli
add
rcrb
popf
jp
jg
daa
outsl
imul
jg
sbb
leave
jo
jle
lock
pop
out
cmpsb
sub
push
aas
and
mov
xor
repnz
fldl
lods
cli
sub
call
sub
inc
pop
into
sub
add
or
mov
xchg
adc
ret
add
or
dec
dec
push
inc
add
push
ret
push
nop
clc
dec
nop
rcr
mov
add
mov
adc
dec
gs
mov
fiaddl
pop
cmp
mov
es
push
or
adc
jl
enter
icebp
sub
pop
lods
add
rol
push
lock
mov
ljmp
bound
js
insb
dec
or
sbb
sti
jl
jo
inc
jb
or
pminub
ds
inc
lcall
mov
mov
sub
std
jno
push
mov
dec
pushf
aam
std
and
jb
xchg
fidivl
test
mov
push
cli
pop
push
mov
sbb
jl
mov
or
jg
dec
decl
cmp
inc
andb
sar
imul
int3
mov
xchg
add
fdivs
inc
add
sub
jo
xor
cmp
lock
adc
std
xchg
push
orl
movsl
repnz
ja
cld
mov
inc
addb
adc
loop
aas
mov
cmpsb
inc
insl
cmp
lahf
add
ficomps
push
xchg
fwait
cmp
dec
cmp
das
add
in
movsl
subb
outsb
add
mov
les
cwtl
stos
push
mov
mov
inc
mov
inc
pop
push
or
cld
stc
xchg
int3
lcall
sbb
popf
adc
push
mov
jecxz
pop
pop
push
push
mov
subb
nop
mov
or
sbb
rcrb
ret
sub
cmp
ret
icebp
fimuls
dec
mov
iret
adc
shrl
scas
and
or
mov
adc
inc
rolb
das
dec
mov
enter
jg
push
test
enter
add
xor
out
in
push
fistpl
hlt
sbb
add
cmpb
mov
inc
xchg
sub
inc
outsb
lidtl
rclb
pop
add
add
in
xor
push
pop
push
lods
inc
add
negl
cmpsl
test
inc
pop
mov
loop
xor
in
inc
xchg
mov
xor
jl
sbb
push
jl
mov
popf
mov
jl
mov
js
or
sbb
inc
scas
sti
pop
sbb
add
adc
les
inc
cmp
cmp
or
lock
sbb
cltd
test
add
test
push
mov
or
lock
inc
push
stc
dec
push
js
incb
test
and
xlat
dec
popa
stos
ficomps
adc
adc
push
fdivrl
lea
add
pop
sub
fisubl
mov
pop
jmp
cld
outsl
push
out
pushf
xchg
jmp
inc
popf
pop
rorl
cli
jmp
fsubrs
out
pop
inc
popf
add
mov
nop
daa
leave
sar
imul
jecxz
mov
aaa
out
xchg
rcrb
in
fmulp
cltd
mov
mov
xchg
jecxz
rcrb
inc
or
push
js
loopne
dec
inc
xor
gs
add
xor
mov
xchg
js
add
shlb
add
loope
or
dec
sub
mov
xchg
mov
dec
and
rol
xchg
outsl
or
pop
cmp
mov
cwtl
sar
loopne
ret
pop
mov
adc
out
hlt
xor
mov
mov
or
lods
je
jbe
or
mov
sbb
mov
rcll
jns
add
and
popa
mov
aaa
jecxz
outsl
push
fcoms
icebp
mov
mov
icebp
call
decl
outsl
out
jmp
mov
scas
adc
jg
adc
jg
insb
out
call
add
sbb
and
mov
dec
jge
inc
and
negl
inc
add
cmp
pop
leave
and
mov
in
iret
pop
xor
data16
movsb
test
xor
movsb
lock
outsl
mov
lods
xchg
shlb
ss
sub
mov
subb
mov
mov
ds
sbb
add
inc
neg
push
out
cli
add
mov
push
insb
je
ret
arpl
inc
insl
push
fs
mov
pop
xlat
mov
movl
fwait
outsb
rcrl
roll
int
adc
and
add
or
out
idivl
jmp
and
and
jmp
outsb
outsl
clc
and
int3
mov
adc
pop
sub
dec
sub
orl
and
pop
pop
jmp
stos
leave
mov
xor
hlt
xchg
add
es
push
aas
rorb
scas
mov
cltd
jno
adc
jbe
mov
test
dec
stos
cltd
loopne
arpl
or
jle
sub
xor
add
shlb
or
cli
test
and
cmp
insb
or
adc
add
push
test
sbb
and
out
push
xor
jg
es
or
jb
or
imul
push
pop
cmp
stos
fadds
insb
and
or
jo
ds
or
xchg
xchg
pusha
pop
inc
push
fs
movsl
scas
inc
lcall
inc
addl
mov
or
repz
adc
adc
loop
scas
stos
jo
xchg
aam
mov
cltd
push
mov
aam
ljmp
cwtl
adc
scas
pop
jo
rorl
pop
mov
inc
mov
sbb
and
adc
out
pop
xor
jno
or
ret
jne
pusha
xchg
cli
mov
mov
cmpsb
les
shll
adcl
stos
pop
inc
mov
test
clc
inc
mov
stos
mov
or
add
or
push
jnp
mov
lea
in
sbb
ficoms
lea
jl
imul
hlt
popf
sbb
mov
mov
test
hlt
fldenv
scas
cmp
push
adc
xor
iret
cltd
cmp
mov
push
pop
shrb
push
pop
add
les
ljmp
mov
sbb
addb
filds
xor
xchg
sub
mov
fists
jp
inc
stc
jp
aad
jl
inc
scas
dec
inc
daa
fstpl
xlat
sub
mov
enter
lret
nop
testl
sbb
out
mov
lods
cmp
test
or
addl
adcb
sub
mov
sbb
lcall
clc
test
mov
jmp
ret
push
movsl
clc
add
inc
leave
jmp
sbb
push
and
push
jns
insb
loop
and
clc
cli
pop
mov
add
pop
into
xchg
loopne
mov
ss
and
fimuls
cmp
pop
lods
hlt
add
push
push
das
mov
movsb
lea
cld
cli
loop
jae
arpl
cmc
mov
inc
cli
repnz
mov
mov
dec
jle
mov
push
xchg
insl
add
sub
cli
xchg
sbb
mov
stos
add
rcr
push
and
test
xchg
sbb
test
cmp
mov
push
and
cmp
loop
fstpl
mov
xchg
cld
and
loop
dec
xlat
fbstp
icebp
add
test
mov
xor
and
mov
test
out
jo
pop
mov
xchg
dec
mov
lock
repnz
mov
push
mull
adc
inc
or
cmp
mov
pop
inc
and
cmpsb
mov
rolb
mov
cltd
jge
add
inc
repnz
dec
stos
xor
add
xlat
sbb
iret
addb
sbb
movsl
jo
inc
stos
roll
push
xchg
movsb
mov
inc
sub
inc
dec
xchg
inc
nop
sbb
push
mov
xorb
or
add
jge
sub
andl
adc
or
dec
push
mov
lds
ret
sahf
mov
xor
cmp
lahf
loope
fiaddl
in
aas
adc
arpl
sbb
inc
sbb
sub
iret
shrb
je
add
xchg
jbe
jge
sbb
lret
push
imul
jo
jge
inc
and
enter
xor
aaa
enter
scas
cli
shll
es
sub
mov
pop
and
sahf
sti
or
and
ret
daa
ja
mov
lcall
mov
xchg
js
and
stos
shl
jbe
mov
cltd
daa
mov
lahf
lret
js
ds
mov
mov
loope
sarb
stos
out
inc
or
addl
mov
adcb
sub
cltd
clc
mov
nop
cmc
daa
rcll
iret
jne
add
clc
push
sbb
ret
cmpsb
popa
push
mov
push
les
or
mov
pop
mov
mov
xor
test
ficoms
mov
mov
shrb
test
movb
iret
add
inc
popa
mov
test
cs
jp
mov
mov
je
daa
rorl
fsts
hlt
popf
loope
fiaddl
inc
xchg
inc
xor
lret
ret
sahf
les
sahf
add
ljmp
aaa
sarb
and
or
lea
xchg
mov
add
jp
xor
sbb
rol
lahf
fs
mov
lcall
cmpsb
popf
imul
add
add
mov
call
dec
pusha
pop
pop
gs
dec
shl
sahf
pop
mov
cmp
js
les
orb
scas
push
outsl
inc
add
xor
ret
inc
xchg
jle
sbb
outsl
inc
or
inc
or
push
sbb
jmp
xchg
popl
mov
adc
jbe
pop
les
hlt
jo
mov
sub
inc
daa
push
pop
jmp
movsb
sti
mov
sbb
pop
inc
ret
dec
sub
pop
mov
ds
mov
pushf
iret
pop
pop
popa
je
je
lods
mov
jge
mov
inc
mov
fst
setbe
xchg
out
push
insl
sub
lret
cmp
scas
jg
mov
and
cmp
inc
xchg
out
popa
test
sbbl
enter
dec
pop
add
into
jo
dec
and
in
push
call
cmp
mov
loope
adc
mov
fisttpll
xor
sbb
jl
mov
repnz
mov
lock
sub
xchg
lahf
test
push
push
loope
imul
add
sbb
arpl
cmp
sbbl
mov
pop
cmc
sub
sbb
and
shl
jne
and
lds
adc
jg
bound
and
push
mov
or
ds
popf
pop
jle
les
mov
pop
aas
mov
jbe
cltd
sbb
xchg
fdivr
mov
and
jg
test
test
push
insl
xchg
mov
stos
adc
pop
out
adc
xor
punpckldq
inc
cwtl
add
and
or
das
ljmp
push
push
fldt
pop
mov
rclb
icebp
aaa
imul
pop
sub
xor
mov
sbb
mov
jecxz
or
ret
fldt
mov
seto
fs
xchg
mov
xor
cmpsb
out
cmp
lock
lret
mov
push
jns
mov
adc
mov
and
sbb
mov
mov
mov
or
adc
in
or
pop
rorb
mov
adc
movsl
add
cli
adc
rorb
mov
in
lret
test
lods
mov
pop
flds
fidivs
jne
je
sbb
jl
push
shll
lcall
into
ljmp
adc
or
lods
mov
enter
rorb
sbb
adc
ljmp
lock
pop
cmc
or
test
inc
lods
lds
adc
sub
ret
shr
adc
add
pop
sbb
xchg
jb
lock
push
les
divb
pop
out
mov
cld
lock
andb
enter
clc
inc
adc
scas
pop
cmpsl
nop
mov
cmp
adc
jle
fcoml
cli
sbb
jo
xchg
pop
sbb
jb
push
jno
aas
cmp
push
push
popf
xchg
repnz
loop
out
sbb
pop
add
dec
pusha
pmulhw
push
fsubr
jo
pusha
jl
imulb
or
xor
sbb
pushf
inc
fists
push
ret
gs
pushf
xchg
or
das
add
sub
daa
lahf
cli
cmp
shll
insb
rcrb
icebp
add
sub
rcll
or
call
fs
or
add
pop
ss
scas
icebp
pushf
dec
mov
add
mov
cmc
test
push
and
push
outsb
fdivs
mov
aad
loopne
xor
jg
lods
shll
sbb
mov
in
dec
movsb
adc
cmc
fcoml
jp
sbb
jge
sbb
into
ret
adc
aad
and
mov
pusha
mov
sub
xor
fldl
push
mov
std
repnz
pop
les
icebp
rcrb
aam
pop
fwait
mov
mov
push
xchg
jmp
mov
js
cmpsb
pusha
cwtl
loopne
push
std
or
sbb
in
js
adc
push
in
mov
fisttps
mov
push
or
rolb
jmp
cli
lahf
dec
in
dec
adc
lret
jg
pop
adc
mov
mov
pop
cmpsl
incl
or
mov
cmp
jmp
lods
gs
xor
pop
pop
sub
sbb
adc
mov
mov
adc
popa
pop
int3
sbb
aam
pop
leave
xchg
es
cmc
add
pop
loop
xor
cmp
inc
xlat
lods
sbb
pminub
or
out
mov
mov
imul
mov
xchg
or
sbb
jge
push
jl
add
xor
jg
inc
scas
push
and
leave
lods
mov
repz
out
out
inc
dec
sub
xor
insb
or
test
mov
lret
mov
xor
mov
xor
cmpsl
and
pop
popa
jle
gs
mov
push
jle
mov
in
push
sub
sub
xor
out
pop
sbb
mov
mov
gs
addb
ljmp
mov
dec
jp
pop
bound
add
push
mov
loopne
out
std
mov
js
negl
js
sub
xor
sar
or
nop
hlt
xor
clc
popf
pop
adc
loope
in
pop
ret
aam
xor
sti
xchg
sub
hlt
inc
das
js
test
ret
xchg
dec
aaa
mov
stos
aas
xchg
cli
out
je
or
cmp
js
mov
push
fisubrs
es
and
add
jo
into
sub
ljmp
pop
mov
ret
inc
xchg
ret
or
mov
pushf
jle
inc
rorl
rorl
lahf
scas
push
cmp
add
ss
mov
scas
test
xor
fwait
inc
inc
cmp
es
adc
push
add
les
sub
in
ljmp
xchg
stos
dec
mov
cmp
push
daa
outsb
sub
xor
adc
jecxz
adc
push
incl
jl
das
pusha
icebp
addb
fsubl
andb
fwait
data16
fcom
xor
ret
jl
sbbl
push
incl
add
sub
xchg
jg
and
cmp
mov
push
lret
or
mov
movsl
pop
scas
inc
inc
pop
sbb
mov
mov
mov
cmp
pop
inc
mov
pushf
sbbb
adc
mov
jg
rolb
cmp
fimuls
test
and
icebp
or
or
lods
or
inc
insl
test
pushl
movsb
sub
add
ja
mov
lcall
push
mov
aad
inc
push
js
in
jns
leave
sahf
jp
ja
lods
mulb
rcrl
add
adcl
jle
hlt
pop
bound
sub
dec
fidivl
add
cmpsl
das
aad
cmp
test
cmp
nop
jo
in
das
xchg
mov
dec
in
push
cli
mov
lods
rol
inc
add
adc
pop
je
std
ja
ljmp
fst
idivb
lods
insl
adc
data16
test
adc
or
bound
fs
mov
aaa
add
push
fdivrl
sahf
pop
cmp
daa
cld
fs
cmp
sub
inc
mov
xor
or
cmp
decb
inc
push
jo
lods
jo
jle
cmc
sbb
xchg
shrb
jno
sbbb
call
push
mov
adc
push
inc
inc
inc
lret
inc
mov
out
and
and
xor
or
cmp
cmp
push
xor
jo
inc
add
call
sub
mov
push
scas
or
scas
xorb
inc
test
movsl
std
out
or
add
outsb
dec
mov
mov
sbb
hlt
push
mov
int3
pop
nop
xchg
xor
sbb
outsl
inc
icebp
sub
cmpsl
dec
pop
pop
jbe
sub
pop
out
push
cmp
cmp
mov
add
xor
rorb
mov
jecxz
mov
add
xchg
dec
call
inc
adc
lcall
lsl
mov
mov
adc
imul
cli
jnp
fs
add
fs
pusha
push
arpl
add
dec
repnz
mov
add
mov
and
clc
xchg
or
bound
sub
pushf
aam
out
xchg
cmp
popa
sub
cs
inc
call
add
adc
mov
add
push
bound
adc
lock
sub
adc
cli
sahf
jecxz
aad
test
dec
bound
lds
add
inc
sbb
fisubl
jp
dec
mov
lock
pop
out
add
add
hlt
pop
mov
xor
test
popa
jmp
cmp
negb
xchg
inc
xorl
or
stos
sbb
fsubs
push
push
push
repnz
inc
inc
mov
mov
push
dec
inc
dec
mov
andl
jns
or
adc
in
xchg
cli
jne
push
scas
inc
sti
adc
call
xchg
xor
test
std
add
shlb
imul
clc
divl
shr
int3
push
les
stc
inc
push
mov
cmp
xor
xchg
cmp
cs
mov
mov
test
dec
dec
pop
call
std
cmpsb
xor
xor
adc
inc
popa
aad
std
ljmp
xor
or
add
cmpsb
mov
ja
mov
mov
pop
das
push
aas
adc
push
xchg
outsb
jle
std
dec
hlt
in
mov
xor
push
loopne
mov
out
outsb
and
add
clc
lock
fimuls
mov
cmp
jle
push
data16
xchg
je
pop
cvttps2pi
pop
inc
adc
jp
push
push
fisttpl
lcall
mov
mov
pop
mov
sbb
mov
jo
pop
xor
cld
mov
sbb
inc
sub
ret
sahf
aad
xor
and
ljmp
pop
cwtl
mov
mov
popa
pop
in
pop
xor
loope
push
std
notb
dec
ret
mov
or
rolb
jb
out
add
xor
jge
mov
push
mov
lock
add
or
sbbl
addr16
cmp
pop
cli
cmpsl
nop
mov
dec
fadds
ret
daa
cmp
inc
push
ja
iret
sub
jecxz
fwait
or
xchg
outsl
rorl
or
subb
jo
pop
rolb
mov
dec
rcrb
clc
ss
das
shrb
movsl
fs
add
xor
cmp
lcall
cmpb
sahf
bound
mov
adcb
inc
pop
dec
or
hlt
aad
mov
dec
out
xor
outsl
and
push
icebp
add
inc
xchg
outsb
xchg
int3
not
in
xchg
cmp
xchg
cmp
ljmp
mov
cwtl
xchg
sbb
lahf
mov
mov
hlt
cmp
fisubrs
mov
hlt
push
icebp
bound
inc
out
das
and
pop
imul
cwtl
adc
adc
test
cmp
jo
mov
push
push
cld
fnstenv
subl
inc
out
xchg
xor
xchg
fsubrp
adc
or
stc
arpl
and
dec
push
pusha
pop
jl
sbb
lret
dec
inc
push
jl
test
sbb
inc
inc
cmp
js
fbstp
pushf
inc
faddl
inc
aam
dec
sub
add
inc
ret
in
ret
mov
in
rclb
adc
and
lahf
cmc
jmp
mov
push
mov
adc
imul
lods
push
and
add
jp
test
in
xlat
jb
cld
rorl
movl
movsb
clc
add
lock
pop
in
and
jg
and
and
lret
jge
cmp
ss
jns
pop
inc
sbb
add
push
xchg
iret
shrb
test
mov
into
pushf
adc
aam
fsubs
stos
lock
adc
mov
hlt
aaa
out
xchg
inc
ds
adc
add
lock
or
mov
push
fnstcw
or
int
push
xchg
inc
sti
pop
ret
js
push
dec
cmp
aas
lods
movsb
sub
mov
lods
cmp
pushf
and
add
mov
loopne
push
mov
push
and
cmc
cmp
or
xor
inc
mov
xchg
scas
fiaddl
dec
subb
sub
and
cmpsb
scas
adcb
ss
pop
loope
dec
ja
and
repz
call
sbbb
and
mov
cli
pop
aad
mov
and
aam
cmpsb
mov
scas
add
dec
sahf
sti
cli
out
test
and
inc
inc
movsb
dec
movsb
or
pushl
mov
repnz
lahf
ret
push
dec
and
fsubrp
mov
jecxz
cld
mov
test
jae
and
adc
xchg
dec
out
mov
adc
cmp
ljmp
jmp
mov
add
adc
add
add
in
pop
pop
pop
xchg
out
daa
push
inc
rcrb
rolb
adcb
push
lret
fldl
push
clc
jmp
ss
cmp
les
insb
mov
jg
movsb
cmp
data16
and
lea
pop
inc
sub
outsb
clc
inc
push
lea
hlt
inc
mov
sbbb
in
mov
mov
iret
add
cmp
imul
adc
das
mov
xchg
mov
loope
lock
pop
push
inc
push
or
xor
push
adc
rcll
xor
add
lret
mov
mov
or
outsb
data16
sahf
in
inc
sub
and
sub
rclb
push
mov
movsb
sub
pop
push
mov
sub
incb
adc
mov
mov
or
mov
push
mov
mov
or
cltd
hlt
popa
mov
mov
in
xchg
inc
loopne
mov
cwtl
or
fcmovnb
sbbb
mov
loopne
dec
imul
and
push
loop
ljmp
push
mov
cli
xlat
or
xlat
ljmp
pop
ds
mov
jg
mov
push
push
test
and
xor
add
cmp
ficompl
add
movsl
cmp
or
lock
mov
sahf
xchg
jmp
fwait
lcall
push
in
mov
fwait
int
ljmp
divl
adc
cli
or
push
dec
scas
or
addb
push
test
loope
pushf
icebp
hlt
push
pop
xchg
lock
ret
push
repnz
in
in
mov
xor
or
sbb
xchg
xchg
movsb
iret
mov
inc
shrl
adc
push
or
jp
and
insb
push
fdivr
icebp
ret
xchg
xchg
lds
mov
ret
jb
add
xchg
gs
mov
inc
stos
mov
jl
movsl
arpl
xor
aas
ss
or
xor
push
lock
les
mov
or
cli
loopne
lret
icebp
lock
add
inc
push
cmp
jle
popf
mov
xchg
or
add
sbbl
add
loop
movsl
inc
jmp
sbb
mov
lock
mov
jb
add
mov
mov
lcall
mov
dec
and
lock
shr
cld
int3
fcoml
adc
lock
jmp
sbb
js
mov
sub
rcr
sbbb
lds
cmp
out
icebp
add
stos
scas
xor
add
sbb
in
push
dec
lahf
out
sub
in
sub
jp
fbstp
repnz
xor
inc
ljmp
add
clc
test
xchg
popf
ja
mov
mov
inc
fldt
xchg
les
xor
mov
pop
mov
cmp
push
dec
jns
sbb
xchg
xor
mov
jle
dec
cmp
fsubrl
xchg
mov
shll
lock
repnz
lcall
push
ja
inc
pusha
das
cld
in
arpl
add
test
inc
jp
push
push
insb
push
jecxz
adc
fwait
mov
lahf
cld
cmp
and
sub
sbb
and
and
pop
lret
push
pop
call
xorb
mov
add
sub
and
popf
int
sbb
mov
jl
ds
negb
iret
bound
mov
sbb
adc
fcmovnbe
imul
jnp
fnstcw
mov
mov
jmp
xor
mov
add
mov
xchg
sub
pusha
loop
add
xor
fistpll
arpl
adc
jl
fiadds
outsb
addr16
call
out
rcr
or
lock
aaa
inc
pop
mov
loop
push
or
sbb
push
pusha
xchg
das
push
push
stos
into
lahf
push
add
mov
add
or
cmpb
adc
test
dec
mov
ljmp
mov
push
sbb
push
sbb
fs
scas
lea
shll
xchg
push
jecxz
dec
pop
mov
xor
adc
adc
or
pop
mov
ret
imul
xchg
pusha
rcrb
sbbl
push
lock
loope
add
into
adc
xchg
loop
pop
mov
inc
jp
or
and
insb
loopne
mov
mov
dec
add
mov
jp
pop
sbb
hlt
and
add
hlt
aam
xor
sbb
cmp
popa
cmp
les
mov
mov
mov
xor
push
aaa
xchg
clc
out
sbb
lret
cld
mov
ret
aas
xchg
das
andb
pop
or
lcall
dec
sbb
lods
cs
push
add
mov
jns
rorl
jg
add
out
mov
and
sbb
xchg
sub
ljmp
mov
jmp
xchg
mov
sbb
jmp
xlat
sbb
out
mov
rcll
out
daa
pop
xlat
es
rorb
pop
call
jno
outsb
cwtl
mov
ss
rcrl
or
fldl
fadd
cmp
add
hlt
nop
out
das
or
dec
xchg
xor
addr16
clc
dec
xor
cs
push
loope
in
testl
rol
mov
mov
sub
popf
in
aaa
push
cmp
decl
add
dec
ss
rorl
push
push
pop
in
fs
mov
mov
mov
cld
cld
xchg
adc
lahf
arpl
rorl
jmp
daa
add
lods
push
ds
jl
inc
out
cltd
rolb
cmp
test
lock
inc
outsl
adc
daa
cmp
aam
and
inc
loop
mov
andb
jbe
stc
add
rcl
mov
stos
cltd
dec
jmp
jg
scas
lods
mov
add
hlt
stc
jo
push
imul
inc
insl
rcrl
movsb
filds
push
mov
pop
dec
les
aad
inc
js
cwtl
aas
cmp
or
push
lds
popa
push
push
ficomps
cltd
push
adc
inc
mov
notl
inc
loope
pushf
pop
sbb
loopne
and
movsb
sub
push
subb
pop
loopne
movsl
loop
adc
mov
xor
inc
fmull
xor
push
imul
fadd
sub
dec
out
sbb
loop
adcl
sbb
int3
in
adc
inc
mov
std
icebp
jo
jne
sub
pop
or
ret
jo
fisubrs
popf
mov
add
pop
pop
pop
out
imul
scas
loop
lock
es
dec
mov
sub
xlat
inc
daa
push
rcl
in
xor
movl
inc
ljmp
jmp
inc
mov
out
bound
clc
jmp
pop
mov
dec
mov
pop
dec
out
in
push
adc
mov
pop
add
xor
inc
xchg
js
mov
mov
aaa
shlb
ss
stos
rol
je
jbe
nop
mov
outsb
popa
stc
addr16
and
ret
pop
insl
xor
pop
xor
sub
js
jne
iret
sub
sub
push
pop
fld
mov
mov
add
inc
fmulp
or
scas
sbb
jmp
sub
add
inc
out
flds
push
pop
mov
popa
imul
leave
stos
test
dec
mov
inc
leave
mov
je
cmc
dec
das
hlt
orb
ror
or
mov
dec
insb
adc
mov
pusha
push
out
inc
lret
and
popf
mov
push
dec
std
sbb
push
popf
add
bound
and
test
pop
sub
jnp
cmpl
and
aaa
push
push
sub
mov
scas
cli
out
xor
lock
xchg
lret
leave
lds
lea
lods
rolb
xchg
cmc
add
sbb
in
stos
stos
push
movsb
jns
es
add
xor
stos
int
sti
push
or
sbb
lea
pop
fimull
or
sbb
scas
ss
sub
lcall
out
push
pop
ja
comiss
shlb
test
push
sbb
jnp
mov
inc
jb
ret
sbb
loopne
test
lock
das
inc
mov
jl
sbb
jae
cmp
ror
pcmpgtw
sarb
mov
clc
hlt
jns
pop
cmp
jecxz
adc
mov
in
pop
pop
pop
mov
shrl
sbb
je
dec
js
mov
or
mov
daa
mov
mov
fldl
jbe
and
fcomp
cmp
imul
loop
outsb
nop
dec
sbb
les
push
add
and
cltd
pop
lock
cmp
sbb
andl
rolb
enter
in
or
xor
jmp
mov
call
ltr
pop
jmp
inc
or
cwtl
mov
pop
shufps
xchg
push
cmpsb
aam
sbb
adc
rol
cld
scas
mov
sub
or
lods
jmp
xor
loop
dec
sbb
pop
push
or
sbb
je,pn
ja
jle
sub
xor
cld
dec
mov
dec
jle
jmp
push
ret
dec
sbb
jne
loop
xchg
fs
lock
inc
cmc
pop
ret
inc
jae
aas
jae
loop
cmpsb
cli
ljmp
xchg
daa
out
adc
push
aam
out
dec
movsb
add
ficoml
sti
and
enter
lcall
xor
movsl
adc
lods
shrb
or
push
insl
mov
pop
jo
mov
cld
dec
es
mov
and
pop
inc
xchg
mov
push
sub
mull
and
stos
rcrb
dec
sbb
push
test
cmp
les
and
mov
xor
xchg
sub
into
xchg
clc
cmp
cmp
mov
outsb
push
xor
pop
push
add
adc
cmp
bound
mov
ss
loopne
call
addl
in
dec
int3
add
fiaddl
sbb
or
xchg
mov
and
lea
test
out
inc
dec
nop
push
cltd
jae
rcrb
sbb
cmp
jno
push
icebp
push
sub
xchg
cs
jne
lahf
fs
push
jg
and
cld
pop
push
dec
push
sbb
mov
adc
jbe
cmp
sub
or
loop
jo
cmp
ds
das
andl
movsb
lock
add
jbe
mov
push
loope
lret
sub
or
jp
jecxz
loope
fwait
cmp
rclb
or
ja
push
sub
add
in
popa
jmp
xor
repnz
pop
loopne
filds
and
or
add
insl
imul
mov
cmp
pop
jno
cmc
popf
lea
sub
movlps
insl
movsl
aaa
testl
dec
push
cmpsl
sti
jne
fildl
shlb
sahf
push
mov
rolb
movsb
xor
aaa
orl
jno
adc
mov
insb
xchg
jo
loope
xor
pop
ja
xor
cmp
or
loop
dec
push
jg
jg
adc
jne
leave
mov
xchg
xlat
loopne
and
jg
pushf
xchg
orl
popa
dec
add
aam
cwtl
inc
test
insl
out
les
je
push
sbb
mov
pop
jne
sbb
mov
push
adc
scas
sub
xor
mov
adc
mov
or
xchg
das
scas
jmp
mov
pop
push
ror
adc
xor
pusha
sti
xchg
fcoms
pushf
push
rolb
jl
hlt
imul
mov
and
adc
push
cmp
push
mov
cmp
push
adc
adc
or
into
mov
idiv
push
bound
add
rorb
popa
mov
adc
subb
insl
mov
xor
cmp
push
lods
adc
cmpsl
sub
pop
push
jge
in
sub
test
js
js
clc
pushf
mov
jmp
out
jae
lds
mov
xchg
js
jno
mov
adc
popa
cmp
mov
dec
mov
pop
stos
ss
xchg
out
rorb
mov
stos
insl
cmpl
ja
pop
hlt
mov
mov
ret
imul
sahf
push
in
daa
shll
cmpsb
adc
push
mov
jl
mov
addr16
and
pusha
add
inc
fwait
loopne
xlat
pop
jle
les
popf
pop
sub
rolb
xchg
mov
and
and
arpl
sub
add
inc
xor
ljmp
inc
nop
sbb
mov
add
pushf
or
xor
shll
push
nop
push
sbb
aad
scas
inc
repnz
push
jb
sub
aaa
push
das
loop
push
mov
push
cld
lret
sub
cmp
jno
jbe
pop
pop
imul
imul
scas
push
int
sahf
hlt
pop
sub
stos
mov
nop
add
hlt
and
andb
andl
mov
mov
out
or
rcrl
pop
rorb
cwtl
mov
jle
lods
mov
xchg
jp
cld
hlt
and
cmp
mov
imul
out
fistpl
into
push
xor
lods
mov
les
mov
cltd
das
ficompl
jge
movsb
xor
pusha
push
outsb
rorb
cld
ljmp
scas
push
jo
loope
jl
scas
xor
fidivrs
sbb
mov
xchg
and
fdivl
and
in
mov
dec
or
rcl
pop
jl
cmpsb
insb
test
arpl
inc
or
gs
jbe
ret
adc
jecxz
jl
mov
rcl
dec
pop
or
inc
push
or
test
sbb
xor
xchg
repnz
xor
lock
pop
js
ficomps
sarl
inc
outsl
dec
lods
or
xchg
pop
adc
inc
aas
add
pop
add
cmp
js
lea
mov
stc
mov
subb
dec
in
lods
push
push
xlat
add
mov
lahf
pop
lock
xor
mov
pop
mov
mov
dec
pop
test
jo
loop
pop
or
mov
cs
mov
xor
loop
jnp
dec
cmpsb
jmp
shrb
in
loopne
dec
sbb
inc
inc
movsl
cmp
ja
js
repnz
jns
or
das
jp
push
lcall
int3
xchg
lcall
xor
jle
lret
loope
fadds
out
adc
jmp
sbb
or
xchg
inc
push
mov
nop
mov
jp
fisubrs
push
jp
mov
jo
data16
shrb
jne
mov
ror
pop
out
add
shl
mov
mov
fstps
es
mov
jno
lock
repnz
pushf
fcoml
je
pop
jecxz
and
inc
sub
leave
clc
xchg
out
cmp
insb
loope
mov
mov
mov
stc
pop
jecxz
aam
push
jae
in
xor
out
cmp
sarb
out
xchg
call
lods
pop
dec
cli
push
cmp
mov
or
mov
xchg
pop
inc
test
adc
sti
int3
and
cmc
call
or
adc
ret
gs
movb
scas
test
bound
sub
mov
pusha
fsubrl
insb
out
fildl
push
mov
lea
xchg
rolb
cmpsl
and
shlb
xorl
pminub
jbe
jge
inc
call
or
aaa
ret
push
cli
or
inc
dec
aad
rcl
test
out
and
adc
aas
loopne
addl
lds
popa
cmp
movsl
es
leave
stc
add
or
gs
or
and
sub
imul
clc
leave
mov
aas
inc
inc
sub
mov
adc
rorb
js
scas
popa
push
imul
js
cwtl
mov
lahf
insl
push
fidivl
or
dec
dec
add
push
fimull
lret
fbstp
or
cli
das
outsb
adc
insb
les
sti
test
xchg
xor
pop
and
dec
pop
mov
xchg
lods
inc
jns
or
xchg
ds
je
jb
cmp
mov
in
mov
ret
mov
ss
cli
xor
out
imul
inc
xchg
or
jp
adc
and
rcll
sahf
arpl
sbb
or
push
jge
popa
add
imul
xor
pop
in
rorb
add
rcrb
jle
pop
jle
ret
call
ret
insl
jge
loopne
and
cmp
sub
ja
cmp
out
andl
push
scas
adc
or
pop
test
dec
cmp
gs
inc
test
std
hlt
jmp
mov
iret
pop
adc
aam
aam
inc
sub
test
cli
or
insb
dec
rorl
scas
inc
faddl
dec
ss
and
pop
sub
lea
fstpt
add
sub
inc
fbstp
loop
and
or
and
aas
jo
sbb
jp
cmp
or
sbb
and
mov
add
pop
cmp
push
xlat
dec
cmpsb
out
or
aad
loope
jb
jnp
add
or
arpl
lcall
adc
fwait
pop
nop
inc
jo
rolb
xor
data16
stc
dec
fucomip
and
in
add
mov
pop
mov
rcl
dec
in
lock
pop
xchg
xchg
jb
xor
pusha
hlt
push
int3
push
outsb
jns
shr
ljmp
mov
js
add
dec
test
insb
inc
shll
sub
addb
enter
rorb
sbbb
inc
pop
jp
jbe
repnz
popf
lcall
aaa
jle
add
ret
push
xor
inc
sbb
pop
enter
xchg
xchg
xor
sub
fsubl
xchg
lds
rcr
nop
pop
sub
movsb
clc
cmp
bound
cmp
in
xor
jo
fcmovnbe
test
jg
xchg
xchg
jl
movsl
fadds
jne
inc
xchg
lahf
insl
mov
mov
adc
dec
loop
mov
pop
mov
outsb
adc
adc
and
mov
sub
shlb
xor
sub
inc
pusha
mov
or
mov
mov
mov
pop
pop
inc
cmpsl
sarb
dec
sub
shll
cli
mov
ljmp
lods
cltd
test
int3
into
call
cmp
inc
fisubrl
out
lock
jge
xor
imul
cmp
ret
mov
pop
jle
rcrl
loopne
in
add
jns
rorb
lret
in
mov
sub
loopne
inc
ret
pmuludq
dec
adc
mov
shll
std
and
and
cmp
or
pop
or
jp
ret
and
pushf
cwtl
add
jg
cmp
out
xchg
mov
and
mov
test
inc
cmp
insl
std
pop
push
lea
sub
xor
pop
notb
sub
mov
fdivrp
push
hlt
push
pop
mov
inc
dec
push
jbe
lods
popa
sbb
bsr
push
clc
dec
jl
cmpsl
fstps
roll
lcall
or
inc
cmp
and
push
sbb
loope
dec
mov
xor
pop
insl
push
mov
xor
pop
ljmp
cmp
daa
adc
mulb
mov
arpl
inc
movsl
push
les
mov
and
cmpsb
loopne
or
mov
stos
inc
ret
enter
cmc
lock
add
jae
ja
insl
pop
int3
and
mov
sbb
fs
ret
movsl
jle
mov
in
push
xchg
mov
push
jns
outsb
add
adc
leave
and
divl
scas
clc
sub
loop
and
jb
add
add
jl
mov
add
insb
xorl
in
adc
das
sub
rcll
or
dec
cmpsl
xchg
push
cli
push
sub
ds
xchg
push
loop
dec
xchg
xchg
stc
mov
roll
popf
rcrl
mov
mov
outsb
pop
add
leave
add
jmp
mov
daa
sbb
jb
out
fs
and
pop
orl
push
xchg
cld
or
shlb
ss
hlt
mov
loopne
addb
fnstenv
ret
push
fbld
cmpsb
sti
xor
xor
loopne
add
mov
aad
or
dec
xchg
cli
test
lret
dec
sub
popf
jp
push
inc
fildl
push
sub
cmp
out
push
in
cmpsl
inc
cmc
pop
xorl
sbb
jnp
and
stos
fnsave
mov
outsb
addb
jnp
dec
popa
loope
shrb
out
push
pop
clc
test
test
xlat
xor
add
xor
fs
adc
fcoms
inc
jnp
push
mov
js
ret
test
enter
sbb
lods
pop
and
adc
clc
enter
inc
js
in
or
sub
pop
cmp
push
fidivl
inc
sub
cmp
jp
sbb
cmp
inc
subb
dec
in
sbb
loope
pop
cmp
add
pop
xlat
xchg
mov
fidivrs
mov
sub
out
test
rcrl
data16
rorb
adc
jecxz
pop
sbb
xor
sbb
rclb
lcall
daa
popa
push
outsb
xchg
pop
sub
stos
arpl
dec
cmp
xchg
dec
push
xor
xor
test
lea
pop
lods
lods
imul
cs
clc
jno
sub
mov
into
stos
sbb
sub
adc
adc
rol
cltd
aam
xlat
inc
mov
xor
hlt
and
and
icebp
pop
push
pop
addb
pop
scas
or
dec
adcb
insl
cli
insl
sbb
xor
xchg
andl
jp
or
sahf
adcl
mov
addr16
sbb
sub
outsl
fisttpl
add
insl
or
inc
aas
cs
je
je
xchg
xor
ljmp
cmp
push
pop
mov
jne
mov
and
adc
push
push
divl
addl
push
inc
orb
jge
mov
ja
rcl
mov
sbb
or
std
testl
add
xchg
popf
lods
test
in
adcb
jge
in
mov
and
stos
fdivrs
and
movsb
bnd
ret
adc
data16
lock
mov
jp
shl
das
mov
repz
mov
mov
dec
sub
lahf
push
xor
test
mov
lea
fisubrl
sbb
cmp
lea
aas
pop
xorl
bound
sti
xchg
push
loope
adc
rorl
push
jae
inc
rorb
jmp
je
lods
loopne
add
scas
mov
out
add
scas
shlb
in
sub
sub
xchg
cmp
xor
call
inc
int3
ret
cmp
inc
and
js
cld
loope
push
int
iret
mov
shrb
and
rorl
pop
push
xchg
shl
xchg
inc
or
sub
push
cwtl
lcall
cmp
inc
xchg
movsb
mov
add
push
cmp
pop
stos
pop
sbb
jno
jnp
sbb
insb
pop
test
xchg
xchg
dec
mov
ret
jle
xor
cmp
fwait
mov
adc
cmp
addr16
mov
and
stos
shll
jb
or
cmp
je
push
mov
jno
sbb
mov
out
pop
popf
sub
sub
add
mov
fdivp
and
mov
jmp
dec
fidivl
inc
ljmp
push
lods
jb
out
cmp
sti
sub
call
cld
lcall
mov
pusha
loopne
loopne
adc
add
insl
pop
insl
insb
js
sub
out
js
jns
imul
or
pusha
sbbb
clc
sbb
test
sub
pusha
fmull
sbb
xor
push
shlb
jbe
out
pushl
jno
inc
popa
lds
push
outsl
repnz
or
dec
nop
shrb
inc
imul
inc
jmp
jge
jg
add
scas
lock
scas
adc
or
fstpt
mov
fistpll
mov
mov
sub
cs
push
mov
fadds
mov
sbb
test
mov
add
lcall
bound
mov
dec
notb
sub
inc
lcall
rclb
rolb
mov
mov
add
inc
cmp
sub
mov
test
out
pop
mov
jb
or
adc
in
jle
ljmp
test
sbb
loop
repnz
mov
rcl
jns
sbb
sbb
inc
or
imul
hlt
aaa
jns
test
icebp
pop
cmc
add
adc
out
andl
pusha
and
call
iret
sbb
sub
fmuls
jge
pop
add
add
jl
addr16
imul
icebp
imul
pop
fimuls
sub
adc
movsb
test
cli
testb
dec
or
cli
ret
aas
aas
dec
lea
pop
lods
mov
sbb
rorb
movsl
jnp
lret
pop
and
notl
imul
push
ret
sarb
pusha
and
in
pop
sub
rorl
cmp
xabort
lea
sub
shr
fisubrs
test
mov
cmp
mov
cwtl
sti
clc
sub
jl
dec
mov
test
pop
ret
clc
js
sbb
cmp
mov
mov
stos
push
cmp
pushf
enter
insl
loope
lahf
xchg
fs
movsb
into
jmp
push
and
push
mov
fwait
mov
cmp
cwtl
push
test
fisubrs
lock
popf
jbe
fstps
cmp
push
sub
and
and
lock
xchg
mov
daa
adc
inc
jmp
popa
cmp
dec
add
cld
mov
add
fsubr
mov
ret
mov
mov
mov
popf
and
call
js
int3
push
cmp
adc
scas
sub
pop
shrb
addb
jp
mov
in
in
out
push
push
call
mov
inc
push
fsubs
inc
lds
push
adc
push
imul
outsb
add
fs
add
cmp
outsl
data16
nop
pop
hlt
loope
shll
add
push
int
push
jl
jne
xchg
xchg
mov
js
cmp
push
hlt
jle
xchg
imul
jns
repnz
jo
int
stos
stos
movsl
imul
cmp
bound
push
jns
test
sub
loop
sbb
setl
orl
mov
mov
sbb
dec
push
int3
mov
test
mov
fsubr
insl
inc
lret
insl
pop
popf
scas
mov
testb
fdivl
nop
xlat
adcb
into
mov
xor
dec
imul
out
jmp
aam
inc
aad
mov
add
mov
jo
inc
aaa
jmp
dec
mov
sbb
adc
mov
xchg
sarl
jno
aas
mov
pop
lret
push
jmp
mov
or
push
bound
pop
in
cmpsb
adc
movsl
lret
mov
mov
push
xor
xor
ret
loopne
jmp
ret
je
andl
dec
sahf
jp
adc
ljmp
loopne
xchg
cli
in
inc
in
mov
dec
push
punpcklwd
movsb
test
xchg
out
sbb
stos
mov
add
adc
add
xchg
cli
ds
and
dec
inc
push
scas
inc
adc
jl
dec
cli
push
mov
mov
xchg
sbb
mov
ds
ret
inc
popa
add
pop
or
inc
inc
imul
out
and
shlb
pop
call
orb
jno
sbb
stos
mull
imul
pop
jge
push
cmpsl
inc
cmp
gs
je
es
push
mov
and
pop
aaa
pop
push
sub
adc
jge
sub
and
loop
mov
bnd
jbe
pop
xor
or
js
pop
rcrb
clc
aad
lock
imul
inc
testl
or
push
fs
inc
or
add
cmpsl
inc
sbb
add
sar
mov
mov
out
inc
sub
xchg
mov
mov
xchg
lcall
jp
dec
or
repnz
fwait
loop
mov
adc
adcb
mov
xchg
mov
movsl
push
mov
loop
loop
mov
rol
inc
lcall
sub
sub
out
inc
pop
inc
pusha
jb
or
xchg
rol
or
or
sarl
sbb
xchg
ljmp
mov
fsubr
push
sub
push
mov
push
outsb
mov
add
fs
loop
mov
xor
sub
or
jg
lcall
fistps
cli
aam
ret
outsl
xchg
rorb
cli
adc
ljmp
lret
fidivrs
movsb
sub
sbb
cmp
std
jmp
ljmp
xor
or
cld
loope
mov
outsl
mov
push
out
fdiv
test
testb
mov
bound
callw
cmpsb
jp
cmp
sbb
push
loope
cmova
shl
mov
mov
lds
jb
xor
jb
shr
lds
cltd
cmp
push
test
imul
data16
test
pop
mov
cmp
jp
aad
fiadds
jecxz
inc
into
data16
shl
inc
loope
push
hlt
xlat
push
stos
mov
sarl
mov
aam
cmp
mov
adc
adc
inc
rcr
std
cmp
cmp
ljmp
or
sub
dec
dec
rcrb
jmp
sub
and
mov
jno
test
out
mov
rolb
xchg
add
cmp
rcrb
adc
add
sarb
sub
jp
sub
add
cmp
dec
inc
fmulp
add
fwait
or
inc
mov
sbb
les
cli
add
and
adc
mov
shrb
mov
lcall
add
cmp
mov
les
dec
int
loopne
push
ljmp
sbb
das
sub
and
movsl
ds
sarb
lret
mull
rcrl
mov
ret
or
pop
int
xchg
xor
imul
aam
insl
xchg
sti
or
push
cmp
lahf
rcl
inc
jo
mov
cmp
leave
insl
jl
cmpsl
cs
jbe
maskmovq
xchg
cs
jge
lret
addr16
adc
ret
loope
push
rcrb
test
aam
fsubr
test
int3
movsb
aaa
pop
into
sub
enter
mov
or
arpl
mov
jle
cmp
inc
dec
popf
sub
xor
out
imul
int3
pop
int
xor
mov
out
pminsw
push
jo
cmp
push
jle
cwtl
and
ja
dec
mov
pop
sbb
loope
adc
inc
addl
andl
mov
cmp
inc
mov
adc
or
mov
cmpb
mov
inc
sahf
outsb
xor
lods
in
scas
fldt
test
call
add
jo
inc
lret
jno
stos
push
and
jbe
dec
lret
call
sub
dec
pop
fildll
ret
add
sbb
ja
xor
cmp
stc
in
jb
loope
inc
adc
mov
xchg
jns
lods
mov
push
mov
dec
hlt
xchg
xor
jl
lcall
xchg
popf
insl
aam
push
and
xor
jecxz
sub
mov
and
lds
add
mov
rcr
les
and
daa
mov
dec
push
push
test
daa
mov
inc
inc
shrb
dec
add
je
pop
mov
aam
adc
scas
mov
mov
xchg
jne
mov
jnp
pop
inc
push
and
fisubs
lods
jge
sub
bound
cwtl
cmpsb
loop
out
adc
nop
cmp
adc
mov
push
insb
in
dec
sub
stos
add
hlt
xor
push
into
pusha
rcrb
fimull
js
and
mov
push
xchg
pop
pusha
push
sahf
lret
test
mov
adc
fwait
and
inc
and
and
adc
cmpsb
sbb
lea
cmp
mov
sbb
int
lret
movsb
movsb
and
mov
sbb
mov
leave
xor
test
js
and
push
imul
fadds
enter
test
pop
xacquire
fcom
outsb
loope
adc
js
loop
push
dec
cmp
mov
lds
mov
ds
imul
sub
mov
inc
and
js
inc
adcb
or
ds
loope
movl
movsb
jl
jg
ljmp
fldt
stos
or
lret
push
xchg
fidivrl
std
xchg
cmc
test
lock
decb
xchg
mov
and
xchg
mov
clc
lock
xchg
xlat
xchg
or
imul
test
dec
sti
mov
push
loop
daa
mov
pushf
mov
rcrl
flds
sbb
hlt
cli
inc
jmp
cwtl
int
push
scas
mov
sub
test
push
ja
sub
or
nop
push
mov
loop
dec
mov
call
inc
and
dec
sbb
ret
push
and
add
adc
adc
sbb
test
push
or
pop
stos
fwait
jnp
sbb
movsb
dec
mov
push
mov
js
negb
pop
popa
and
lods
push
add
rsm
inc
fdivs
pop
push
mov
test
or
test
sbb
lret
xchg
xchg
icebp
out
test
push
pop
sub
xchg
sahf
and
into
enter
push
cmp
push
xor
adc
fdivrs
bound
push
push
test
cli
pop
adc
lods
jno
or
ret
jnp
inc
cs
add
or
repnz
sbb
sbb
inc
cmp
cmpsb
fiaddl
inc
push
cs
int
cmp
cmp
cld
test
inc
nop
test
mov
mov
or
or
or
repz
mov
lret
mov
mov
sbb
xchg
sbb
mov
pop
cmp
xchg
repz
mov
orb
push
dec
fbstp
ja
imul
inc
mov
mov
gs
add
jno
test
icebp
cmp
ss
dec
in
xor
push
fcoml
add
pop
scas
push
pop
shlb
and
jb
jp
iret
mov
sbb
xchg
lea
in
shlb
lods
enter
cli
and
inc
lahf
push
xor
insl
jns
fsub
pop
sbb
sete
dec
std
adc
jge
jns
push
addl
fwait
popf
ss
inc
mov
sub
cli
fisttpl
xchg
or
add
jo
add
shll
xchg
int3
fldcw
scas
mov
stc
shrl
jl
xchg
dec
adc
pop
xchg
pop
aam
inc
or
movsb
xchg
lock
inc
push
js
dec
sahf
push
aaa
push
or
outsb
ret
xchg
sbb
into
dec
cmp
icebp
aad
pop
inc
fdecstp
pop
cmpb
push
dec
test
ficomps
rol
lcall
je
push
fcomps
inc
adc
orl
lret
jbe
add
enter
movsb
pandn
cwtl
inc
and
cltd
stos
sbb
jge
cmc
xchg
ficoml
inc
add
icebp
loopne
mov
out
ss
pop
repz
out
ret
rolb
and
add
mov
mov
les
mov
mov
fwait
push
out
xor
push
jl
lock
into
pop
clc
bound
sub
cli
mov
leave
jnp
insb
add
icebp
int3
xchg
mov
es
pushf
push
push
push
das
sti
pop
dec
mov
cwtl
sbb
std
cltd
test
or
imul
dec
ficompl
in
nop
mov
mov
pop
pop
fxch
xchg
jb
daa
negb
stc
push
sarb
mov
jne
xchg
mov
push
aad
xchg
cmpsb
mov
push
sbbl
loope
pop
mov
push
fwait
push
fsubrs
push
scas
mov
xlat
push
mov
in
push
shlb
ljmp
jp
sbb
mov
stc
out
inc
fimull
jae
push
rorl
pushf
inc
sahf
xchg
pushf
jb
sub
add
add
clc
xchg
rorb
sub
fs
mov
out
loopne
lock
cltd
and
nop
inc
push
mov
push
push
cmpsl
add
popf
in
push
mov
mov
or
jmp
mov
lock
iret
pop
jl
and
clc
or
or
dec
add
hlt
lods
xor
add
push
dec
xor
xchg
scas
pop
adc
push
push
cwtl
and
ffreep
sub
bswap
inc
push
xchg
cmp
add
cmpsl
mov
sub
inc
lock
lock
notl
dec
fildll
fs
mov
push
cmp
lea
pop
popa
xor
sub
mov
inc
sahf
sar
xchg
cld
dec
mov
push
lret
mov
loopne
test
arpl
test
pop
inc
cmp
leave
loope
add
mov
jge
pop
pop
mov
cwtl
jns
sbb
movsb
jne
movsb
cltd
jp
xchg
mov
loope
idivl
imul
repnz
xchg
xlat
mov
je
mov
push
int3
aaa
out
sti
dec
or
jecxz
stc
mov
fisubrs
mull
sub
cmc
mov
xor
sub
subb
cmc
jo
jns
mov
inc
iret
movsl
adc
mov
pushf
mov
add
iret
aaa
push
daa
mov
dec
fnsave
mov
push
mov
repz
or
andb
in
loop
test
xchg
xor
or
inc
lds
les
dec
mov
sbb
jnp
xor
repnz
push
pop
movsb
push
shrb
pop
mov
xlat
push
sbb
fsub
cmpsb
pusha
xchg
imull
fimuls
les
jbe
loopne
pop
push
inc
ficoms
xchg
or
push
cltd
fdivr
xchg
outsl
orl
xlat
or
jb
pop
je
jo
adc
jnp
mov
subl
aad
call
aas
sub
popf
loope
loop
test
enter
push
pop
and
pop
lahf
fdivr
add
sub
pop
scas
mov
and
cmp
cmp
xor
jnp
fdivs
fstl
sub
mov
pop
and
jg
sahf
addl
sahf
out
lea
sub
sub
stc
sub
cmp
test
popa
fmul
or
inc
mov
mov
mov
iret
and
inc
dec
fcmovne
cs
test
movsb
mov
mov
xchg
add
push
pop
cmpsl
inc
insl
mov
out
shlb
aam
fadd
fstpt
cltd
adc
daa
push
mov
movb
jno
push
jge
inc
aaa
cli
lcall
pop
push
dec
aam
mov
aaa
sbb
lock
and
sbb
clc
lock
mov
xchg
dec
add
mov
and
inc
adc
sbb
loope
sbb
adc
lds
incb
pop
divl
stos
xor
push
out
dec
push
loope
pop
insb
xchg
cli
cmpsb
es
cmp
adc
mov
les
push
add
test
cld
into
mov
shrb
ret
clc
push
lds
fiaddl
jl
jo
das
and
push
jbe
or
bound
push
push
cmp
xor
mov
push
and
data16
push
adc
inc
push
pushf
fimull
int
add
pop
call
or
test
add
rolb
cmpl
sahf
sub
nop
dec
add
fs
out
imul
mov
sbb
mov
cli
xchg
jbe
std
scas
test
mov
push
inc
in
dec
push
inc
inc
popa
out
push
cmp
test
adc
and
push
mov
rcrl
insl
mov
pop
mov
pushf
add
mov
mov
fmulp
idivb
nop
lds
xorb
hlt
pop
fisubrs
fnsave
push
pusha
or
dec
jns
faddp
movsb
dec
loopne
pop
xchg
aaa
insl
cli
add
mov
jmp
sub
sar
sbb
ret
daa
and
jno
cmp
xlat
jbe
pusha
adc
arpl
rclb
pshufw
arpl
testb
push
insb
jmp
inc
pop
pop
cltd
addl
and
ljmp
int
sub
in
std
and
andl
sahf
sbb
inc
sarb
xchg
fmull
mov
ljmp
outsl
stc
add
enter
add
rclb
xchg
xor
insb
xchg
mov
sbb
and
xchg
int3
sub
loope
pop
adc
shrb
std
add
pushf
and
loope
dec
lcall
dec
ror
dec
pop
mov
sahf
pop
push
sub
sbb
mov
test
orl
inc
into
aaa
les
mov
aas
pushf
out
andb
mov
decl
pop
jno
inc
mov
jl
je
lea
pop
jmp
sbb
int3
test
incl
pop
ret
jns
ss
jne
in
loope
xchg
push
jbe
dec
xchg
fs
lds
rorb
int3
sub
mov
inc
push
add
dec
dec
je
mov
inc
popf
fldl
mov
insl
mov
sub
sub
adc
lds
xchg
jmp
mov
xlat
mov
xor
orb
push
push
sbb
mov
in
notb
jecxz
insl
pop
push
es
ss
fst
insb
or
pop
paddsw
mov
adc
add
gs
add
cmpsl
mov
jecxz
mov
and
and
test
add
popa
stc
sub
push
insb
sbb
mov
inc
pusha
sub
sub
cmc
inc
xchg
adc
and
inc
pop
fsubp
adc
mov
jb
sub
sub
sbb
inc
aaa
leave
das
out
dec
push
pop
adc
xchg
test
fcmovb
xchg
lods
scas
jo
mov
movsb
jne
mov
hlt
loopne
mov
ret
cmp
repnz
je
mov
lds
push
js
fs
aas
sub
mov
cmp
addb
inc
cmpb
pop
mov
faddl
inc
cwtl
mov
dec
dec
sti
adc
aaa
enter
push
icebp
movsl
notl
cmp
sub
ret
xor
jo
adc
dec
sub
push
jae
cmp
or
jb
bound
lea
pop
js
in
sbb
push
scas
xor
ljmp
pop
xor
out
in
movsb
lock
and
mov
dec
loope
push
ret
dec
mov
insb
dec
xor
adc
mov
adc
pop
xchg
jnp
pop
mov
ret
jbe
xor
pop
push
or
jecxz
adc
or
jne
imul
and
and
inc
pop
test
subl
sub
lods
ficoms
nop
push
add
sti
shrb
mov
sbb
adc
inc
push
shrl
out
push
cmp
js
int
push
mov
cltd
xor
pop
dec
aaa
mov
inc
inc
sbbl
cmp
inc
repz
sub
pop
fistpl
ds
adc
mov
insb
loopne
pop
test
mov
pop
cmc
negl
arpl
test
out
lods
stos
sbb
mov
add
pushf
add
fs
dec
inc
shll
sbb
pushf
fldcw
mov
cmp
push
xlat
loope
jp
out
xchg
test
js
je
jo
out
in
xchg
enter
repnz
aam
or
mov
sub
jle
pop
cmp
out
hlt
dec
add
out
cmpsb
ret
outsl
cld
gs
push
out
data16
lret
test
dec
cli
push
call
pop
mov
inc
cmp
pop
xor
jbe
rcr
mov
pop
mov
cmpsl
push
outsb
shll
xchg
popa
sbb
scas
bound
lock
fs
adc
add
jg
lock
adc
xor
mov
pop
test
shlb
enter
or
xchg
mov
xorb
mov
pop
xchg
push
fwait
aam
cmpsb
ja
dec
enter
sbbl
jno
xchg
repz
inc
loope
push
xor
std
fcmovnu
xor
cmp
js
dec
std
mov
stc
adc
xchg
cmp
stos
fsubs
pop
mov
cmpsl
pop
cmp
test
mov
xchg
scas
and
jp
pop
adc
jg
jp
mov
hlt
je
iret
sub
fimuls
mov
out
loopne
xor
push
add
sar
call
sbb
lock
cs
movsb
push
cmp
insl
lock
xchg
nop
pop
fdiv
adc
fsubrl
push
mov
lock
lret
sub
jnp
rorl
inc
add
mov
dec
pop
xor
xchg
and
xchg
clc
xor
in
push
lds
cwtl
sbb
les
cmp
adc
les
js
cltd
sbb
stc
push
sti
sbb
call
hlt
test
sarl
mov
or
pop
insl
rclb
bound
cmpsb
add
sahf
inc
in
mov
push
rolb
pop
and
dec
fwait
sub
das
lret
mov
ds
add
lock
loopne
mov
inc
movsl
in
jmp
cmc
cmpsb
jl
mov
addr16
mov
lret
jmp
push
mov
clc
push
push
aam
test
xor
mov
mov
sub
add
insb
xor
icebp
xchg
aam
jae
xchg
ss
xor
push
ss
rolb
scas
mov
jo
push
fsubs
and
incl
lahf
inc
popf
xor
rep
add
mov
xor
out
stos
sbb
jg
mov
repz
inc
inc
dec
add
call
test
sub
mov
test
or
test
mov
ljmp
notl
jns
dec
lods
gs
out
and
pusha
mov
jo
mov
add
icebp
ds
fwait
add
mov
dec
pushl
sahf
jne
push
das
xorb
lea
fistpll
repz
xchg
push
fmuls
aaa
and
cli
inc
jge
test
add
jo
xor
ret
push
sahf
xchg
mov
push
mov
outsl
sahf
pop
mov
mov
mov
pop
stos
loop
aas
dec
dec
mov
mov
add
jge
mov
sti
fwait
mov
mov
push
ja
pop
or
out
insl
fdivs
mov
dec
and
inc
clc
sbb
lds
pop
lret
add
lods
sbb
push
pop
dec
fdivrs
subb
xor
fld
inc
push
push
sbb
mov
mov
push
sti
lret
mov
je
loope
xlat
xchg
inc
adc
and
ffreep
push
es
int3
xchg
shl
pop
testl
test
shlb
in
outsl
loope
imul
push
jmp
cld
push
pusha
or
mov
mov
xor
xchg
xor
jae
sbbl
bound
adc
fsubrs
and
loope
sub
mov
in
test
xor
mov
jle
cmp
cwtl
cmp
mov
or
inc
call
lret
push
loope
push
std
popa
test
sarl
mov
pop
nop
xchg
das
scas
xlat
xlat
outsl
inc
mov
dec
mov
sub
and
mov
push
inc
call
out
stos
add
add
mov
cmp
adc
jg
scas
push
insb
call
or
loopne
scas
shufps
inc
mov
outsb
adc
loopne
cmp
call
inc
or
out
adc
xchg
push
bound
push
cld
stc
cmp
jo
mov
test
rcrl
or
xor
call
insb
and
jecxz
dec
xchg
hlt
aas
inc
loopne
xchg
or
movsb
test
inc
push
xor
je
pop
daa
or
fdivrs
xchg
mov
or
sbb
and
int3
rcll
push
mov
movsl
adc
mov
dec
ret
popf
lea
lahf
cmp
hlt
jge
incl
mov
pushf
andl
cmp
and
insl
jnp
shlb
xchg
mov
movsl
mov
ret
pop
jmp
lret
cmc
out
lock
pop
add
inc
mov
xchg
ret
push
mov
mov
push
jge
xor
xlat
xor
and
sbb
push
mov
xlat
iret
shrl
sbbb
pop
clc
adc
mov
test
aaa
dec
push
lds
mov
jmp
in
cmp
xor
pop
int3
pop
gs
enter
sub
adc
xchg
subl
sti
shll
shlb
fisubs
mov
or
inc
ljmp
lods
cmp
inc
pusha
push
shll
push
outsb
mov
in
clc
rcl
jbe
dec
push
dec
pop
cmp
pop
pop
out
jns
and
pusha
sub
imul
jmp
add
dec
add
dec
mov
lods
or
cli
jge
femms
test
mov
lods
in
and
ss
loopne
xor
mov
setnp
stos
aas
mov
in
and
push
cs
jae
jl
cwtl
dec
dec
ljmp
rorl
dec
inc
aad
sarb
jno
dec
jo
sbb
add
mov
cmpsl
sarb
jp
inc
add
inc
fdivrs
popa
mov
dec
or
mov
in
inc
adc
add
mov
push
idivb
sahf
and
movsl
pop
bound
sbb
xor
jl
insl
mov
and
clc
imul
or
std
xchg
hlt
xor
dec
push
mov
test
test
and
cltd
aam
je
mov
shlb
pop
push
mov
cmpxchg
xor
fdiv
push
scas
add
inc
xchg
pop
ret
hlt
adc
std
lret
pushf
stos
xchg
push
lahf
aam
add
cmp
fndisi(8087
pop
push
xchg
scas
in
sub
pop
xor
in
test
mov
push
dec
lahf
or
sbb
aas
mov
jge
push
repz
repz
push
or
nop
ljmp
sub
out
js
shrl
push
pop
andl
cmc
je
and
mov
mov
mov
pop
ret
mov
out
mov
rcrl
ljmp
add
rorb
fbld
adc
mov
mov
jmp
xchg
adc
sub
in
xor
aad
ljmp
add
xor
inc
fmul
jp
adc
addr16
js
loop
lcall
cwtl
test
shr
pop
insl
dec
adc
inc
sbb
add
add
xorb
or
fisubl
sub
jge
push
pop
xchg
add
mov
pop
std
pop
orl
ror
pop
mov
push
std
lds
push
push
hlt
fidivs
bound
push
cmpsb
push
addr16
addr16
call
jbe
nop
mov
popa
fwait
movsl
roll
dec
ret
cltd
jl
adc
xchg
xlat
mov
iret
lds
inc
test
mov
pop
fiaddl
cmc
pop
aad
arpl
jmp
sub
add
movsb
mov
xlat
std
add
aas
lods
cmp
ss
inc
in
daa
in
pop
xor
sbb
xlat
or
cmc
xchg
inc
sub
cwtl
dec
mov
cmp
mov
fidivrs
aad
inc
mov
add
xchg
ret
decl
in
inc
sahf
ds
jo
shr
dec
bound
sbb
addr16
roll
xchg
lcall
dec
mov
and
test
lret
mov
cmp
xor
add
test
outsl
inc
aaa
xor
pop
imul
and
add
mov
arpl
push
sbb
add
test
mov
sub
dec
inc
cld
ret
xor
inc
adc
cmp
roll
je
inc
jmp
pop
mov
mov
mov
jge
mov
lcall
aam
test
inc
imul
and
out
dec
imul
cmpsb
mov
adc
scas
or
aaa
sbb
mov
pop
aaa
inc
call
dec
mov
ds
xchg
fmull
daa
lods
mov
push
hlt
push
jecxz
cwtl
add
data16
cmp
rorl
lock
jb
sbb
xchg
dec
cld
cli
mov
push
and
fwait
mov
fsubrl
add
daa
inc
dec
iret
fstpt
xchg
daa
inc
clc
push
sbb
lea
aaa
imul
out
ja
and
sbbb
sbb
fs
mov
dec
jge
les
es
out
xor
xlat
jecxz
mov
jl
mov
xchg
adc
push
enter
adc
lods
divb
pushf
add
mov
icebp
cmp
or
adc
inc
inc
gs
addb
fcompl
mov
fldt
ds
test
out
sbbl
dec
notb
sub
clc
pop
inc
pop
and
push
hlt
xchg
jae
cmc
push
xor
lods
sub
fcmovne
out
fbstp
addl
pop
cmp
imul
stc
leave
mov
es
jns
add
ljmp
daa
dec
add
lcall
pop
cmp
add
or
sub
and
xchg
jae
mov
and
mov
inc
mov
inc
xchg
or
fldcw
or
pusha
in
aaa
popa
scas
inc
cmp
mov
movsb
leave
repnz
pop
aam
sbb
loop
movsb
fimuls
sarl
sbb
setge
sahf
lret
daa
adc
pop
cmp
dec
insl
cmp
mov
div
out
pop
mov
mov
lea
sub
inc
cld
jle
or
xor
sub
mov
test
add
pop
cmpsb
push
push
je
mov
mov
stos
dec
test
jns
int3
pop
and
xchg
subb
cmp
popa
xchg
or
shl
push
push
int3
subl
or
xchg
int
cs
outsb
arpl
dec
loope
xor
dec
sahf
inc
add
ss
rclb
inc
shrb
cmp
sti
mov
sbb
sub
cmpb
sti
ret
jae
push
mov
add
arpl
rcrl
mov
rolb
cmp
icebp
adc
test
mov
in
adc
cmp
pusha
arpl
add
dec
add
xchg
int3
test
adc
mov
in
cmc
add
mov
cmp
hlt
cmpb
ds
clc
add
lock
cltd
test
bound
rcl
stos
movsl
and
mov
fildll
push
fsubl
xor
jo
pop
sub
lret
pushf
pusha
ljmp
mov
lods
jno
movsb
or
insl
mov
mov
xor
cmp
pop
pop
pop
xor
xchg
mov
inc
test
mov
mov
xchg
arpl
lods
bnd
das
int
xlat
pop
pop
xor
xor
scas
sahf
xchg
ret
mov
add
mov
and
aaa
and
inc
rcrl
push
adc
out
call
adc
dec
dec
sbb
popa
inc
imul
pop
ss
rorb
test
push
mov
sub
inc
cmp
jbe
mov
jns
icebp
ret
xor
add
or
mov
je
inc
rcll
rorb
scas
jmp
cmp
inc
adc
lahf
out
inc
pushf
xor
fiaddl
xchg
sbb
cmpsb
in
cmp
fwait
xchg
add
inc
push
cwtl
ja
jge
scas
fadds
popl
mov
mov
sub
xor
adcl
cmp
mov
sarl
out
shrl
mov
inc
push
js
add
push
add
mov
inc
mov
cmp
aas
sub
insl
push
mov
dec
sub
loop
inc
daa
daa
xor
inc
sar
xchg
add
cmpsl
cmp
cmpsl
dec
in
cmpsl
sarl
loopne
loope
lods
jmp
dec
popl
fcomip
mov
popa
sbb
test
inc
pushf
jno
push
dec
pushf
inc
orb
inc
lods
rol
lea
sbb
mov
inc
xchg
fcomps
fisubl
repz
aas
dec
in
cmp
cmp
addb
scas
sbb
pop
pushf
fdivl
sbb
inc
or
dec
sysret
das
xor
adc
rorl
pop
adc
or
inc
lret
pop
and
adc
add
add
into
xor
mov
add
clc
sbb
loopne
push
int
xor
inc
lods
adc
ljmp
stos
inc
ret
xor
cmp
lods
imul
pushf
cmp
mov
outsb
scas
lds
jno
or
loop
xchg
cmp
jno
lahf
jne
imul
test
adc
jge
repz
ret
xor
in
loopne
lcall
mov
movsb
jle
jp
xor
mov
mov
xchg
lock
dec
iret
rcrb
lahf
nop
sbb
scas
inc
mov
inc
inc
dec
cmp
rep
xlat
adc
dec
push
test
cli
call
mov
sub
loope
rorl
pop
insb
lock
push
push
mov
dec
sbb
mov
adc
inc
sbbb
std
xor
aam
rol
ret
orb
xchg
fs
jecxz
lds
dec
xchg
and
and
stos
xlat
icebp
test
jno
or
jnp
xchg
mov
pop
add
sub
shlb
test
leave
arpl
adc
sub
push
ljmp
arpl
aad
push
loop
js
jmp
jno
cmp
cmpsl
and
imul
rcr
pusha
sub
or
out
bound
imul
inc
inc
dec
fs
shll
rorl
add
leave
scas
xchg
pop
mov
jmp
jmp
sbb
mov
inc
jl
jnp
int3
shl
or
ja
or
jns
rorl
jb
and
inc
test
xor
inc
notl
xlat
xor
push
shrl
cmp
out
js
lock
movsb
mov
sar
jns
mov
pop
and
movsb
insb
sbb
push
xchg
push
dec
insb
in
jp
sbb
int3
test
ss
scas
mov
sub
jmp
or
mov
aad
mov
cmc
inc
xor
repnz
xor
or
add
dec
aas
sub
les
mov
add
iret
int3
fwait
test
mov
inc
sbb
test
push
insl
push
aam
sbb
cli
je
mov
les
in
adc
cmpsl
pop
imul
outsl
or
sbb
fs
fldl
cmp
inc
sbb
scas
push
push
jne
outsb
cmp
mov
push
cmp
lret
jne
mov
xor
xor
inc
mov
lods
scas
stos
mov
sub
mov
subb
in
cs
js
cmpsl
mov
cmp
mov
shll
hlt
xchg
push
or
mov
mov
inc
mov
or
add
test
adc
mov
add
sub
shll
outsl
enter
mov
dec
ret
bound
sub
inc
addl
jge
adc
mov
popf
fbstp
mov
loope
pop
les
and
inc
imul
dec
orb
js
ljmp
adc
int
and
sub
lea
aaa
and
dec
shll
icebp
push
inc
hlt
or
call
and
clc
xor
pop
mov
lods
add
insl
or
test
and
cmpb
fld
nop
xor
imull
or
add
and
adc
sbb
das
and
xlat
mov
ret
xchg
mov
or
push
pmuludq
cmc
out
jp
jmp
test
andl
movsb
in
cmc
mov
loopne
int
ljmp
les
sbb
pop
dec
cmp
push
mov
inc
mov
dec
push
loop
mov
fldenv
mov
sahf
inc
dec
add
jo
lcall
je
inc
jecxz
stc
push
jg
push
xchg
add
call
icebp
adcb
bound
mov
loope
mov
mov
stos
arpl
imul
insl
mov
mov
movsb
mov
mov
xchg
dec
mov
jmp
leave
in
jae
cmpsl
jno
popa
pop
push
cld
mov
adc
jne
jo
lds
push
pop
mov
hlt
les
dec
rorl
inc
insl
stos
ljmp
add
loope
sbb
jecxz
shll
push
fmul
jmp
push
mov
adc
repz
lods
cld
adc
ss
mov
push
cs
mov
sbb
mov
sub
cmp
aad
mov
in
sub
lock
enter
popf
or
adc
and
mov
cmp
cld
loopne
ret
or
mov
fiadds
gs
test
movsb
or
mov
cltd
and
push
cld
cmp
or
call
jnp
ds
daa
push
mov
sub
xchg
ds
xchg
subb
insl
aas
iret
sbb
fcmove
aad
divb
mov
mov
test
into
xor
jne
cmp
push
aam
add
repz
scas
int
adc
xchg
mov
test
dec
xlat
cmpsl
popa
jae
mov
pop
andb
xchg
cmc
ljmp
push
xorb
and
shll
jmp
push
cmpsb
repz
jmp
clc
jb
and
mov
or
xlat
popf
outsl
mov
xchg
cld
movb
mov
fs
insl
push
cmp
jo
pop
ss
pop
sub
or
xlat
dec
lea
loope
sbb
rclb
inc
mov
aas
mov
or
jmp
fwait
mov
dec
outsb
rclb
adc
adc
sbbl
push
out
push
das
xor
shlb
or
jg
js
repnz
add
mov
daa
lock
mov
roll
dec
mov
add
lret
and
jmp
push
adc
mov
loopne
icebp
xchg
cmpsl
sub
and
inc
sub
fdivr
dec
adc
and
pop
cmp
bound
pop
outsl
jge
ret
ret
mov
xor
outsb
push
iret
add
dec
cs
jne
ret
fsub
jp
roll
push
les
push
ss
or
adc
jl
loop
fbld
inc
bound
mov
jmp
lock
subl
js
push
xorb
cmpsb
shlb
push
aaa
jmp
sbb
popa
out
lret
loope
scas
push
ja
sbb
outsl
rolb
inc
test
or
and
inc
push
popf
adc
rcl
clc
fcoms
shrl
mov
cmc
adc
lods
push
adc
adc
sub
and
icebp
es
mov
aad
imul
xor
fwait
aaa
lods
adc
loope
jbe
pop
movsl
jge
sarl
rolb
lds
pop
jno
and
loope
adc
cwtl
fxch
daa
xchg
das
add
mov
insl
lahf
aas
outsb
xor
dec
lds
adc
cltd
mov
inc
loopne
jle
mov
cmpsl
int
pusha
cli
addb
and
clc
sub
mov
mov
push
cmp
mov
or
addr16
fdivs
adc
arpl
pop
push
pop
ds
xor
loop
and
mov
lock
add
data16
lds
dec
lods
lods
test
mov
mov
out
add
je
std
les
scas
lret
mov
inc
lret
cmp
je
test
xchg
lcall
shlb
push
cmpsb
push
daa
pop
add
mov
roll
xor
mov
or
xchg
mov
enter
and
stos
ss
fdivl
mulb
rcrb
stos
xchg
jae
outsb
out
and
movsl
data16
cmpsl
jl
mov
mov
and
popa
pop
std
test
or
add
inc
mov
and
xor
dec
test
es
dec
dec
loope
pop
sbb
lea
sbb
jp
jne
in
fs
enter
fwait
les
push
in
mov
dec
inc
inc
dec
pushf
xor
or
movsl
out
aam
sbb
jnp
mov
mov
inc
jae
aam
clc
cmpl
sub
sub
xchg
push
push
push
in
or
test
adc
xlat
jle
aas
or
shrl
ljmp
loop,pt
mov
mov
addl
es
loopne
cmp
jmp
sbb
jmp
or
dec
sbb
daa
arpl
imul
adc
add
shlb
loopne
dec
cmp
shll
das
jp
xor
jo
out
cmp
lds
and
sbb
out
mov
xor
pandn
sub
xchg
mov
jge
sub
or
addb
std
repnz
sub
ret
pop
mov
outsb
xor
fdivrs
push
mov
mov
dec
mov
lcall
test
jp
jle
xchg
int3
aad
adc
xor
push
test
xchg
or
mov
js
bound
xchg
clc
ja
mov
and
mov
mov
mov
pop
push
lock
leave
mov
adc
inc
out
in
mov
and
xchg
sbb
ja
push
jp
in
xchg
dec
cmp
cmpb
or
scas
subb
xchg
loopne
push
jne
mov
mov
dec
aam
push
xor
sub
adc
lahf
mov
mov
add
add
jg
push
sbb
mov
sbb
repz
loop
dec
sub
ret
inc
and
adc
dec
dec
int3
pop
mov
xor
sahf
mov
jge
stos
jge
loopne
dec
xchg
xor
dec
add
call
test
test
pop
xchg
pop
sub
fsubl
jo
cmpsl
push
cmp
ss
rol
adc
insb
insb
aas
stc
push
loope
pop
and
test
sub
dec
daa
int3
push
push
in
je
cmp
jmp
sahf
dec
inc
push
xchg
shll
fs
pop
sub
cmp
adc
adc
shr
enter
and
js
jne
adc
mov
lods
cmc
pop
ficompl
das
test
sbb
mov
rorb
mov
sbb
xchg
test
movsb
mov
scas
fsubr
xchg
pop
lock
push
loopne
pop
mov
ja
mov
mov
sub
clc
mov
jne
sub
sti
add
jge
aas
mov
aad
outsl
rol
into
xchg
add
push
aas
xchg
movsl
vmread
push
ljmp
jns
push
sti
ret
or
jns
add
add
and
imull
stos
shrb
mov
scas
sbb
shrl
dec
gs
test
cmp
sbb
inc
jb
and
inc
ja
push
data16
sub
pop
inc
call
inc
xchg
push
sbb
loope
mov
addr16
cmp
or
xor
popa
jp
mov
jae
pop
sbb
test
mov
icebp
push
movl
or
arpl
sub
add
lea
xchg
add
pop
pop
xor
pop
scas
jl
dec
lock
jo
cmp
inc
pop
sbb
shll
pop
roll
js
jae
in
xchg
or
dec
out
mov
dec
xchg
outsl
jnp
cmpsl
call
stos
adc
adc
cs
mov
ret
mov
or
sbb
sahf
mov
loopne
mov
pop
sbb
pop
imul
sbb
daa
and
mov
add
push
xor
and
add
xor
loopne
rorl
scas
or
sbb
sbb
pop
or
arpl
lret
scas
cmp
or
cmpsl
pop
adc
fucom
addl
icebp
dec
add
push
pop
inc
mov
mov
xor
call
icebp
pop
jno
out
sub
pop
push
js
mov
fwait
jmp
cs
cmp
mov
jecxz
xor
movsb
push
aaa
pop
loope
jo
sub
lahf
jge
mov
jo
xchg
push
fsubl
push
sti
mov
push
inc
es
fstl
push
or
mov
cmp
jecxz
adc
jmp
dec
lahf
xchg
test
pop
sahf
mov
adc
aam
jnp
jp
mov
jb
push
mov
push
sbb
add
jno
hlt
loop
daa
bound
lret
pop
jecxz
sbb
or
ja
xchg
insb
mov
inc
dec
js
daa
mov
cmpsb
orb
jp
push
adc
in
std
mov
loope
cmp
popf
adc
ja
adc
popf
and
cwtl
outsb
adc
dec
pop
cmp
adc
mov
lods
inc
lods
push
adcl
dec
add
cmp
loope
dec
add
pushf
subb
iret
je
cmp
in
inc
adc
ljmp
xor
ljmp
push
push
mov
dec
lret
insb
xor
aas
push
ja
mov
mov
push
add
shll
hlt
and
shrb
cmpsb
push
adc
clc
ret
popf
cmp
adcl
xor
push
adc
add
mov
out
pop
aad
xor
mov
or
jmp
jae
lock
push
mov
inc
xor
xor
dec
mov
xchg
xchg
out
jns
push
fs
nop
jmp
mov
ret
xor
imul
pop
ret
inc
ja
aam
sbbl
dec
in
push
enter
and
add
mov
mov
clc
les
fsubrs
or
cld
movsb
test
push
rorl
mov
fnstcw
adc
dec
or
fcmove
jae
adc
sti
out
es
and
cmpps
dec
mov
push
mov
mov
icebp
cmp
loopne
lcall
test
sub
pop
mov
jo
cli
test
inc
sub
or
xchg
int3
out
jl
aad
loop
js
dec
adc
and
jb
loopne
inc
jbe
pop
mov
ljmp
fisttpll
xchg
and
aam
cmc
fidivl
nop
in
push
jecxz
or
lods
xchg
inc
inc
popa
aaa
fidivrs
cwtl
jae
add
cld
test
xor
gs
repnz
pop
adc
pop
xlat
mov
xor
jp
loope
frstor
ret
push
dec
int
test
inc
push
and
clc
mov
push
shll
or
or
addl
clc
inc
xor
lret
arpl
aad
cs
orl
jnp
jle
add
pop
push
mov
js
dec
test
mov
or
mov
insl
pop
clc
dec
loopw
popl
clc
jecxz
push
inc
sub
hlt
scas
fld
mov
loope
add
jmp
insl
pusha
sti
nop
mov
jmp
ficoms
movsb
shlb
imul
cmp
je
push
inc
cld
jge
mov
es
adc
fadds
jmp
add
popa
mov
dec
push
insl
out
mov
add
lea
ficomps
cmpsb
lret
or
cli
and
stos
dec
loop
mov
daa
inc
push
mov
aam
rolb
in
inc
nop
sti
pop
add
add
fnstsw
xbegin
push
shlb
dec
or
js
xchg
dec
mov
pop
mov
mov
jl
jl
cmp
dec
lret
loope
or
bound
lret
mov
pushf
out
pop
movsl
cmp
addl
xor
das
mov
sti
jo
jo
enter
aas
push
sbb
cmp
xchg
popa
sub
xor
ret
repz
or
jle
sub
xchg
cmp
lahf
pop
dec
mov
jp
in
mov
push
push
jl
popf
leave
pop
or
or
aam
pop
mov
jne
adc
mov
addl
into
shlb
test
movsb
dec
inc
sbb
fldenv
jecxz
sbb
mov
xchg
stos
or
lret
outsb
mov
call
das
dec
insl
iret
push
xchg
jge
daa
inc
outsb
ret
lock
pop
jecxz
jg
inc
adc
icebp
add
movsl
sti
movsb
addl
add
shl
pop
jg
lret
andl
jecxz
dec
mov
mov
loope
int
imul
xor
or
not
and
mov
adcb
repnz
cmp
jle
gs
mov
ds
adcb
mov
dec
or
fwait
outsl
in
xor
mov
lret
push
xchg
mov
mov
xchg
lock
cmpsl
mov
les
fcom
adc
shrl
repz
popf
push
jl
xor
cmc
inc
cli
sub
pop
lock
xor
ret
push
mov
adc
add
in
sbb
scas
xchg
outsb
xor
call
gs
rcll
imul
rorb
sub
adc
pushf
and
adc
xchg
mov
les
pop
mov
orl
cli
or
stos
mov
adc
sub
loop
sahf
shr
push
adc
pop
sbb
jmp
sbb
imul
sbb
and
lcall
push
call
arpl
lea
xlat
lock
cmp
ss
mov
gs
add
jle
ret
xor
cmpsl
getsec
movsl
mov
pop
push
aam
push
xorl
mov
fldt
nop
mov
dec
loop
add
pop
xlat
gs
pop
pop
lock
sub
addb
cmp
adc
int
in
or
andb
mov
adc
adc
cmpl
loopne
js
and
and
outsl
js
lea
xchg
push
les
mov
dec
xchg
call
xchg
arpl
rep
ret
imul
das
lods
clc
cmp
data16
push
jp
lods
and
loop
addr16
enter
sbb
push
hlt
test
movsb
xchg
hlt
pop
jbe
inc
mov
incl
push
mov
pop
mov
push
insb
fcompl
adc
xchg
sbb
and
and
sub
jl
movsb
fs
add
cli
lret
and
mov
iret
in
lea
fdiv
and
sbb
jnp
sar
sub
xchg
cmp
sahf
sar
jg
mov
test
cmc
dec
ret
lds
push
int3
ud2
fnstcw
inc
ja
jp
out
aaa
sahf
push
mov
mov
test
sbb
sbb
pop
sbb
mov
icebp
shlb
stos
insb
jge
test
mov
add
scas
and
jae
push
mov
in
aam
popl
sbb
or
mov
ds
push
inc
aas
push
sub
push
adcb
rolb
mov
mull
xchg
rcll
xlat
inc
fmul
xlat
lcall
xchg
mov
xchg
lock
lcall
sahf
scas
nopl
fwait
push
sti
xchg
push
mov
jnp
ret
lock
sub
sahf
ret
adc
mov
push
jle
jmp
stos
movsl
dec
add
pop
in
dec
jl
cmp
repz
fsubl
jae
test
xchg
xor
jg
sbb
sbb
push
mov
pop
jne
fbstp
mov
ja
mov
pusha
mov
inc
dec
adc
inc
push
pop
mov
bound
sub
and
and
ret
mov
jl
cli
repnz
pop
cmp
rcrb
mov
xlat
orb
adc
cmp
adc
mov
dec
filds
shrb
hlt
and
in
pop
jg
jp
es
mov
loop
aad
mov
pop
pushf
lds
mov
and
jg
ljmp
lods
enter
adc
adc
paddd
mov
and
mov
fsubs
gs
lods
cmpsb
cltd
push
xor
mov
push
inc
jo
add
mov
fcmovnbe
cltd
bound
movsb
adc
scas
xchg
jle
dec
stos
mov
push
ljmp
or
or
stc
lahf
add
or
add
inc
jmp
fisttpl
push
fiaddl
jae
std
mov
xorb
int3
pop
lock
rorl
adc
jmp
mov
xchg
imul
inc
das
ss
add
sti
movsl
aas
pusha
incb
mov
mov
cmpb
jno
mov
mov
inc
or
js
inc
sbb
sbb
insl
inc
pop
add
sub
pop
push
ficoms
scas
adc
popf
mov
cmc
dec
js
sbb
jle
jbe
repnz
jge
cmpsl
xor
inc
mov
pop
or
inc
fists
push
ss
sub
xchg
mov
dec
push
fstpt
sbb
addb
xor
sub
lock
xor
push
mov
mov
mov
add
add
mov
xchg
inc
popa
and
bound
pop
push
jb
stos
dec
test
aad
fs
popf
pop
mov
insb
ret
ret
xor
add
hlt
dec
dec
lret
sbb
cmp
pop
jg
add
pusha
sub
sahf
insb
add
shlb
pop
cmc
clc
test
fucomi
pusha
jbe
cmp
pushf
jp
sbb
jle
add
mov
push
ret
add
push
aad
jmp
adc
cwtl
inc
shlb
push
lock
mov
mov
mov
pop
jmp
mov
pop
mov
outsl
sti
std
add
xchg
and
and
xchg
cmpb
add
and
or
mov
mov
leave
or
inc
pop
xchg
pop
cmp
mov
icebp
push
push
imul
sbb
cmpsl
insb
push
sub
and
rorl
cmpsl
int
jb
pop
sbb
fst
orb
push
sbb
cmc
xchg
ja
xchg
cmp
push
in
add
jne
inc
stc
push
cmpsl
nop
je
adc
lock
out
repnz
loop
jl
aam
mov
cmpb
test
jbe
and
cmc
and
adc
lock
call
dec
mov
sub
loopne
pop
cwtl
xor
pop
sbb
xlat
sarb
call
sahf
fisttpl
dec
std
jo
divb
pop
inc
out
add
out
fs
mov
movsb
sarl
cltd
call
rcrl
dec
fldl
pop
and
mov
inc
pusha
ds
mov
lret
push
fcmovb
mov
pop
add
or
lock
inc
ja
pop
call
xchg
bound
call
push
push
notl
jno
fs
adc
or
adcl
loope
stos
cmp
scas
jle
ss
cmc
insl
inc
and
xor
test
popa
movsb
rolb
mov
mov
adc
cmpsl
pop
test
sub
push
pop
aad
sbb
mov
add
shlb
jne
pop
cli
xchg
or
sbb
dec
or
lods
shll
cmp
icebp
jmp
roll
sub
sub
std
lahf
jb
or
dec
push
mov
push
jno
jmp
jmp
insl
sub
decl
adc
mov
movsl
or
dec
scas
and
daa
shrb
cmp
xlat
ret
jl
push
lock
dec
adc
sbb
mov
fs
inc
pop
adc
popa
dec
ljmp
push
idivb
hlt
stos
lcall
cmc
adc
xor
ret
daa
dec
xor
fnsave
sahf
dec
dec
cmp
adc
mov
pop
jo
add
movaps
xchg
and
mov
cmp
push
xchg
dec
ret
hlt
mov
mov
jo
jb
subb
inc
movsl
jp
sbb
movsb
push
jge
repnz
test
xor
adc
jns
aas
pop
dec
sbb
nop
xchg
dec
mov
mov
mov
sbb
adc
sbb
pusha
fdivl
rorb
test
aaa
loope
adc
mov
mov
arpl
mov
cmp
inc
ud2
push
mov
cwtl
xchg
fstpt
add
out
pop
pusha
icebp
xchg
rclb
out
lea
jmp
cmc
cmpsb
fwait
push
pusha
jae
xorb
sbb
loopne
cmpsb
xor
addb
push
or
sbb
ss
shlb
movsb
incl
xchg
cmp
orb
lock
std
mov
or
movsb
lret
test
and
pop
insl
push
cs
push
mov
adc
mov
shrl
fwait
mov
dec
ror
loopne
rcl
mov
and
rcl
outsb
mull
pushf
jae
pop
pop
pop
cmpsl
pop
xchg
cwtl
inc
pop
dec
scas
imul
sub
cmp
inc
test
call
add
fmuls
push
fstps
mov
fsubr
insl
hlt
dec
fs
jl
in
add
shr
jb
jle
jbe
lock
pop
and
push
adc
dec
sub
adcl
cmp
lock
sub
into
testl
sbb
inc
cs
jle
jg
fidivrl
mov
jb
sti
mov
popf
xchg
popf
add
dec
imul
js
cmp
dec
mov
sbb
push
sub
push
and
popl
pop
pop
sub
rorb
mov
adc
jl
lock
cld
bnd
mov
sub
sbb
add
out
or
inc
fstps
in
jg
push
loopne
xchg
xor
iret
fimuls
cli
pushf
lcall
popa
sbb
add
adc
cmp
mov
fcmovb
subps
pushf
inc
sub
cmpsb
aad
sbb
inc
and
xor
sbbb
jb
push
xchg
mov
xchg
in
fiaddl
imul
and
fcmovu
and
jg
pxor
cmp
test
shrb
pop
sbb
jmp
jbe
xor
dec
shll
sbb
cmpsb
in
cmp
orps
push
out
sbb
mov
add
dec
inc
push
sar
jb
mov
sub
pop
xor
adc
movsl
sub
and
gs
add
adc
xor
sti
lock
shlb
adc
add
add
inc
mov
pushf
stos
negb
add
int3
push
sub
sahf
outsl
mov
jne
mov
in
jmp
push
mov
jp
push
les
sbb
fs
scas
or
or
adc
inc
or
subb
loopne
dec
push
jecxz
cmp
fcmovb
mov
xor
or
sbb
dec
es
inc
test
pop
js
push
fsubl
stc
data16
ret
adc
pop
pop
testl
out
mov
lret
data16
dec
dec
ret
sub
sbb
roll
cs
adc
adc
icebp
in
nop
test
pop
push
fdiv
or
xchg
inc
mov
dec
sub
push
lods
nop
lret
jg
sub
mov
ja
mov
dec
push
xchg
sarl
pop
loope
mov
movl
call
out
pop
cmpb
les
sbb
icebp
add
mov
nop
push
cmove
fwait
cmp
jmp
frstor
out
add
ror
je
loopne
call
jo
icebp
xchg
mov
push
inc
mov
fucomi
inc
fmuls
enter
test
sbb
push
mov
insl
arpl
shr
cmp
imul
sbbl
jle
pop
call
aad
adc
lar
pusha
sarb
shlb
stos
out
icebp
pop
cli
imul
fistps
adc
adc
fcmovnbe
sub
inc
scas
call
dec
ficoms
fucomi
insb
loope
push
jle
lcall
in
arpl
inc
add
adc
add
jo
ret
or
ja
sbbl
or
test
popa
jnp
lock
mov
inc
or
jecxz
jno
jbe
add
cmc
test
call
aas
pop
pop
push
faddl
popl
dec
scas
movsl
out
jp
xchg
cmp
sub
pop
xchg
les
sbb
jmp
fbstp
hlt
ljmp
and
and
clc
inc
dec
and
sub
mov
orl
adc
sub
inc
clc
xor
iret
xor
add
inc
clc
jo
mov
into
or
das
rcrb
ss
fwait
lahf
add
mov
cmpl
inc
mov
cmp
lea
pop
ja
and
test
je
in
test
mov
lds
push
adc
mov
lods
sahf
push
mov
fdivs
xchg
xchg
sub
cmp
add
push
sub
aad
ret
mov
gs
shll
sub
leave
mov
dec
add
pusha
jge
jge
push
scas
insb
mov
mov
ds
rorl
push
sbb
xor
mov
inc
insb
xlat
inc
adc
xchg
adc
push
cmp
loope
fcoml
sti
lods
mov
jmp
sarb
int3
dec
ret
loop
sbb
add
xor
push
add
ret
jmp
jp
je
push
or
xor
push
out
lock
mov
pop
pusha
cld
sti
test
pop
sbb
fidivl
lcall
and
xor
inc
push
jnp
push
repz
pop
in
mov
stos
stos
gs
pop
sbb
adc
stos
pop
dec
sbb
adc
mov
mov
dec
xor
movb
data16
incb
test
cwtl
dec
lcall
outsb
shlb
loopne
push
push
cmpsb
loope
jl
push
pop
shrb
inc
faddp
test
jne
sub
ja
mov
adc
or
es
mov
mov
outsb
adc
js
lret
cli
or
sub
adc
jl
xor
sub
incl
mov
jns
and
sbb
xchg
mov
loopne
negb
lahf
dec
repnz
lcall
pop
adcl
out
inc
pop
jns,pt
imul
mov
mov
bound
mov
rcll
test
imul
adc
xchg
rcl
jle
and
inc
test
or
sbb
cmp
mov
pusha
in
call
fnstsw
test
fwait
cli
mov
add
inc
adc
leave
sbb
shrb
jp
mov
call
call
out
inc
xchg
xchg
cmp
cmpsb
lods
sbb
inc
xor
movsb
in
insl
jge
inc
add
ljmp
and
and
daa
xchg
rorl
dec
inc
ret
mov
fmuls
mov
lret
aas
pop
cld
lods
adc
inc
dec
cmpsl
iret
push
pop
lea
push
loopne
aas
shrl
popl
add
sahf
test
jne
dec
negb
mov
and
sahf
test
mov
jp
and
es
es
jmp
jmp
cmp
out
push
hlt
lahf
adc
ja
fbld
sbb
shrb
push
jmp
stos
and
icebp
ss
lods
idivb
jnp
call
push
aam
data16
loop
ficomps
push
cld
pop
inc
adc
cmc
vpshab
std
stc
jp
mov
and
and
push
cld
aas
adc
xchg
enter
sbb
mov
add
sub
or
push
rolb
adc
mov
jp
ja
insl
inc
aas
add
insb
add
in
and
push
imull
dec
and
jns
nop
lock
lret
pop
ret
push
dec
xchg
mov
lods
pop
mov
adc
mov
arpl
push
push
mov
or
push
scas
and
mov
orb
icebp
aas
xchg
cmp
orb
jge
lods
add
cvtps2pi
add
sbb
loopne
lock
push
fldl
xor
xor
clc
inc
orb
jno
out
push
mov
pop
loopne
sub
mov
pop
cmc
xchg
add
jmp
pop
mov
pushf
adc
divb
xchg
outsl
mov
jno
rcr
jg
add
xor
out
pop
sbb
sub
rolb
mov
out
jne
shrb
nop
push
lahf
lock
sbb
sub
fcmovnbe
pop
test
js
cmp
inc
xchg
jbe
fwait
out
and
cs
or
pusha
or
lret
cli
inc
xlat
repnz
sub
push
sub
outsl
mov
jp
lds
xor
or
fidivrs
sbb
pop
push
inc
andnps
inc
dec
dec
bound
mov
xchg
mov
outsl
cmp
hlt
or
aam
mov
fiaddl
push
aad
icebp
push
clc
inc
cmp
test
mov
stc
jb
ja
sti
jo
test
insl
xor
xor
loope
push
mov
dec
dec
add
jge
dec
std
mov
sarb
out
pop
pop
pop
mov
mov
je
or
push
outsl
jae
aas
sub
movsb
into
pop
ja
adc
mov
mov
scas
gs
push
es
add
inc
iret
pushf
sbb
in
aad
outsb
addr16
xchg
pop
pop
mov
addr16
scas
push
xchg
nop
add
push
adc
jg
pop
into
dec
mov
and
sub
cs
ljmp
xchg
push
lods
mov
loope
xchg
mov
pop
add
sbb
ret
call
shrb
cld
and
enter
ret
jecxz
std
ja
and
das
or
repnz
sub
adc
sarb
fbld
push
lock
in
push
jb
cli
mov
inc
xchg
rcll
adc
xchg
ss
aaa
pop
inc
xor
das
rorb
xchg
gs
mov
mov
hlt
hlt
mov
stc
shrl
imul
push
movsw
mov
inc
pop
jo
sub
dec
nop
sub
ror
mov
in
imul
pop
add
adc
cmp
outsb
loop
sub
fstl
jg
loopne
cmpsl
stos
inc
fs
nop
mov
mov
or
mov
stos
push
ret
out
inc
push
jae
cwtl
cwtl
cmpl
mov
sub
mov
ljmp
or
inc
or
cmp
adc
test
ret
mov
arpl
mov
rsm
adc
lock
adc
push
pop
add
jp
xor
adc
test
add
clc
insb
pushf
inc
inc
adc
xchg
push
stc
mov
xchg
mov
dec
test
pusha
xchg
and
cmc
test
jbe
les
std
xor
dec
and
mov
cmp
pusha
aaa
mov
clc
fdivrl
jne
xor
pusha
rcrb
out
cmc
and
test
jp
mul
ret
mov
or
call
jno
test
stos
pop
inc
loope
popa
sti
lcall
sbb
pop
dec
pop
movsb
rcl
cmp
dec
out
xchg
xor
stos
insl
ret
push
test
fmul
push
adc
inc
in
fstpl
xlat
aas
mov
sbb
cmpsb
pop
xchg
clc
inc
out
pop
or
pop
cmp
mov
mov
shlb
fimull
sub
mov
xor
lcall
cli
mov
add
add
inc
xchg
inc
add
cmp
loopne
in
loopne
jb
sbb
repnz
aam
xchg
rclb
sub
popf
outsl
add
rcll
push
push
xchg
adc
xchg
fcompl
in
adc
cmp
pop
enter
mov
dec
jge
mov
repz
and
push
scas
gs
sbb
insb
mov
aas
lods
loop
popa
ficoml
fs
call
sub
cmp
ror
mov
shlb
or
jnp
lods
jmp
js
stos
in
mov
pop
or
dec
out
sbb
lcall
or
sub
sbb
insb
xorb
mov
lea
push
rolb
scas
add
or
rolb
nop
add
je
xor
xor
add
jo
jl
mov
das
push
or
pop
cmp
test
push
bnd
inc
loop
sbb
int3
jp
mov
mov
cltd
ds
cwtl
ljmp
fcomps
test
ss
pop
insl
cmp
push
mov
clc
mov
push
pop
mov
pop
fsubrs
sub
mov
out
rolb
jo
inc
andb
jp
leave
sub
hlt
mov
cmp
xlat
punpckldq
mov
pop
mov
push
push
and
aas
jl
jl
adc
fs
cmc
jp
and
fdivrp
test
cltd
and
addl
dec
stos
jg
nop
out
call
add
test
inc
jae
mov
test
test
mov
clc
aad
mov
dec
add
mov
inc
ret
push
jecxz
call
xchg
pop
pop
lock
or
mov
popa
jo
mov
shlb
pusha
inc
mov
test
lahf
dec
dec
lcall
lock
sub
adcb
insb
jecxz
mov
adc
xchg
mov
pop
sbb
and
pop
hlt
add
push
push
je
sub
das
add
and
shlb
push
movsl
aam
cwtl
les
and
pminub
and
mov
cs
test
shll
mov
je
sub
push
pop
enter
int
push
mov
xor
xor
sbb
push
movq
add
js
add
cmp
push
mov
cmp
jo
and
lock
fs
pop
scas
cli
xchg
mov
and
push
push
into
and
pop
or
add
rolb
jl
mov
addr16
cmp
mov
ds
sti
je
add
dec
push
xor
xchg
imul
ror
push
movsb
movb
in
mov
mov
adc
jge
cmp
nop
pop
pop
shrb
fsts
arpl
pop
add
popf
jb
ret
in
shlb
add
push
adc
ret
or
in
sbb
push
lods
mov
hlt
out
dec
imul
inc
imul
ss
loope
test
mov
mov
adcl
jmp
mov
mov
test
mov
pop
push
adc
push
cs
cld
mov
fimuls
xchg
sarl
or
call
out
add
mov
inc
add
shlb
push
inc
mov
lret
les
pushf
push
mov
testl
xchg
mov
enter
call
pop
push
call
jne
dec
pop
mov
mov
mov
loopne
inc
in
sbb
pop
adc
call
push
aad
daa
enter
mov
scas
mov
addr16
divl
push
dec
add
js
nop
fs
cmp
jns
mov
aaa
and
jnp
bound
call
test
push
xchg
cltd
sbb
jecxz
inc
mov
mov
repnz
cmc
shll
xchg
cwtl
ret
and
leave
dec
mov
rorl
pop
call
test
push
mov
pop
and
out
xor
pushf
lds
add
lcall
mov
scas
into
xchg
inc
rclb
rcrl
xchg
stc
xchg
arpl
push
fcomp
in
stos
loop
or
add
movb
orl
add
mov
bound
add
pushw
shlb
mov
mov
lods
xchg
inc
jge
popf
dec
scas
shrl
jl
cmpsl
lcall
push
jmp
mov
push
dec
jb
inc
sti
pop
or
stos
add
in
and
xchg
stc
ljmp
insl
adc
xchg
mov
lock
mov
inc
lock
into
xchg
mov
sbb
or
mov
gs
mov
push
push
sub
or
nop
scas
xchg
lahf
pop
daa
loop
inc
xlat
lret
stos
xorl
adcb
mov
pop
fwait
mov
les
sbb
pop
sbb
test
xor
push
fildl
icebp
sahf
add
inc
adc
add
mov
out
std
imul
scas
pop
inc
lret
adc
jo
insb
lret
sbb
inc
lahf
jp
ss
xchg
pop
add
hlt
movsb
movsb
lds
dec
push
cmp
sub
cmp
fisubl
sbb
inc
xor
cmpsl
imul
scas
jl
movsb
add
mov
imul
pop
icebp
mov
cmpsl
clc
dec
clc
js
and
xchg
add
add
lret
leave
lock
sbb
dec
dec
lahf
rcll
fildl
push
movsb
insb
mov
adc
push
sti
xchg
fisubrs
shlb
in
jg
arpl
pop
aad
fmull
mov
inc
and
in
inc
adc
sub
and
cmp
jnp
aas
mov
sbb
push
call
outsb
inc
mov
sub
popa
loope
cmp
sub
mov
jb
xor
ja
call
inc
adc
add
cmc
xchg
bound
xchg
mov
orb
xchg
or
sbb
loope
jae
mov
clc
dec
fs
or
imul
ffreep
push
loopne
jle
mov
cltd
aam
adc
jp
sub
and
icebp
mov
adcb
cs
int
mov
pop
xor
sbb
and
xchg
or
jg
add
lahf
pop
mov
pop
jno
cmp
sbb
push
mov
nop
mov
rcrb
sbb
sbb
pop
shr
test
popf
xchg
jbe
outsl
rcr
mov
pop
jb
mov
test
ljmp
sti
or
clc
sbb
jbe
out
add
add
leave
das
bound
mov
add
and
les
jp
cli
mov
xor
sahf
jns
and
out
dec
dec
aam
stos
out
test
notb
and
hlt
lods
add
sti
pusha
fdivrs
pop
pop
mov
add
lods
inc
cmpsb
pop
fbld
cmp
dec
push
jge
xchg
push
inc
test
and
cmp
loope
test
nop
add
cmp
and
stc
adc
xor
sbb
jp
ljmp
ds
lea
push
subl
aas
bound
dec
pop
icebp
and
repnz
rolb
cmp
xchg
xor
pushl
lods
add
xor
mov
ret
add
sub
mov
jb
mov
fwait
sub
test
xchg
push
ja
sub
adc
jge
and
or
pop
popa
push
lret
cmp
pop
mov
fsts
iret
push
sub
sub
adc
xor
jb
lds
inc
adc
out
icebp
pop
xor
jg
push
xchg
sub
rcrb
sbb
int3
add
das
or
inc
loopne
mov
xor
sub
pop
or
aad
dec
jmp
aaa
les
adc
jle
pop
aaa
cmp
ss
or
test
test
int
cmovo
xor
aam
cmp
jo
aam
and
jb
adc
sub
pop
andb
popf
pavgb
cmp
in
cmc
push
sub
mov
insl
hlt
xchg
std
fsts
loopne
adc
mov
in
push
rcll
cmp
jno
adc
shlb
out
outsl
xor
xor
lret
popf
mov
adc
mov
lahf
js
stc
addr16
cmc
hlt
or
add
xchg
les
jb
sti
or
push
out
repnz
cli
push
lods
and
loopne
scas
mov
rol
mov
inc
fwait
sbb
or
sbb
ss
mov
fsubrs
add
inc
cld
cmc
xchg
ret
lcall
add
add
leave
rcrb
test
loope
push
mov
adc
invd
sahf
jl
cwtl
cmc
mov
mov
stos
ss
test
cli
out
push
cwtl
sbb
xchg
cmc
push
push
sbb
fldl
call
pop
fidivrl
insl
and
push
mov
jecxz
mov
test
clc
adc
adcb
repz
push
leave
cmpsb
test
pusha
pusha
sbbb
sub
call
adc
jnp
add
insl
mov
out
daa
lds
out
mov
dec
dec
push
inc
xor
int3
lret
sti
pop
stos
xor
sub
in
push
loopne
sbb
push
sub
or
into
cli
rcl
inc
or
pop
mov
insb
jbe
dec
mov
das
test
in
cmp
dec
bound
cmp
lods
clc
hlt
add
and
jl,pt
push
jl
jp
add
shll
jno
pop
jmp
inc
cmp
jg
imul
mov
bound
jbe
sbb
lock
mov
adcl
ret
jecxz
push
xchg
test
or
testl
sub
pop
mov
stos
mov
rorb
test
dec
or
adc
add
or
adc
jno
cwtl
fbstp
add
adc
inc
mov
sarl
cmp
sub
push
sbb
push
je
adc
push
daa
roll
arpl
push
push
mov
xor
adc
inc
push
jmp
xor
and
cmp
or
or
and
push
pop
add
sahf
pop
sub
cmpsb
outsb
int
ljmp
push
or
repnz
dec
fdiv
aas
repnz
xchg
movsb
jg
int3
cs
aam
sbb
push
and
mov
das
dec
cltd
mov
popf
push
cld
loop
mov
inc
mov
ret
push
add
push
ja
out
inc
mov
cmc
imul
mov
mov
and
std
rorb
adc
or
push
dec
outsl
into
dec
mov
mov
fidivrs
or
add
sub
pop
lods
fistl
das
xor
cmpsb
jne
cwtl
cmp
pop
inc
sub
push
sbb
pop
bound
aam
pop
xchg
adc
inc
insl
in
adc
out
aam
adc
out
xchg
lock
js
mov
sbb
subl
or
mov
inc
pop
pop
pop
dec
adc
mov
sbb
fnsave
adc
inc
jno
inc
sub
xor
xchg
xorb
xchg
dec
add
stos
mov
das
rcrb
adcb
movb
xchg
sub
xor
je
call
lods
add
inc
js
add
andb
popa
test
mov
and
jne
sub
out
jp
shlb
fldt
cli
sub
sub
inc
push
in
mov
popf
cmc
stc
jmp
call
push
add
shlb
cltd
subl
addb
push
xchg
add
daa
pop
add
xchg
inc
mov
jae
mov
sub
lret
hlt
jge
lret
xor
les
bnd
fimull
or
push
inc
inc
xor
imul
pop
test
repnz
mov
cmp
mov
add
aad
cwtl
enter
sbb
inc
cmp
fstps
push
push
or
mov
push
xchg
jbe
ds
je
stos
xor
repz
jno
jb
pop
jp
mov
jecxz
es
sub
sbb
cltd
sbbl
lock
sub
jmp
sbb
and
imul
or
dec
out
pop
int
dec
fidivrs
mov
push
jl
cs
xchg
jle
dec
adc
popa
pop
imul
sbb
jnp
pop
cwtl
xor
xlat
mov
pop
bound
xchg
es
add
mov
mov
arpl
jno
adcb
loope
mov
push
out
dec
and
pop
inc
shufps
xchg
repnz
sbb
pushl
stos
adc
insb
dec
pop
lock
loope
cltd
adc
ret
add
adc
jle
iret
jge
adc
sarb
sbb
jns
testl
in
hlt
inc
cvttps2pi
mov
rclb
adc
lods
mov
mov
and
inc
add
std
sub
popl
ret
or
or
lcall
cmp
lock
add
adc
adc
aam
jmp
test
cs
cmp
insb
mov
call
jle
inc
scas
add
pop
mov
stc
inc
nop
icebp
lahf
fistps
insl
inc
xor
cmp
repnz
test
or
add
stc
jo
sbb
mov
mov
mov
add
dec
pop
dec
push
adc
push
lcall
adc
or
push
pop
or
or
ret
pop
push
ss
ds
or
cmpb
and
js
sets
adc
cmp
lds
pop
mov
fisubs
adc
jmp
rclb
lea
mov
jecxz
insb
ret
add
iret
inc
sbb
daa
dec
jnp
pop
outsb
mov
incl
aaa
imul
and
cld
and
cld
push
push
add
pop
jge
push
movsl
out
push
jnp
sub
jnp
cmpsb
cmpl
xchg
jp
mov
or
lret
inc
xchg
js
clc
jecxz
hlt
pop
mov
cmp
push
cli
es
test
andl
fadds
mov
in
adcb
hlt
pop
push
mov
jl
les
cwtl
mov
sub
jnp
add
loop
fnstsw
hlt
dec
add
inc
jbe
decb
sub
push
mov
sbb
pop
xchg
jne
inc
mov
xor
fs
cmpsb
insl
mov
jo
cwtl
das
shrl
xchg
fs
add
jbe
sarb
in
xor
mov
push
ljmp
dec
jmp
subb
jno
jae
push
add
hlt
xlat
sub
push
fildll
mov
xchg
lcall
fdivs
cs
loopne
sub
push
jg
cmc
lret
push
inc
or
sbb
adc
movsb
ror
add
jne
das
push
mov
lahf
stos
adc
aas
push
orb
dec
mov
add
rorb
ror
mov
push
push
adc
cmpsl
push
xchg
insb
mov
pushf
call
mov
push
and
mov
dec
adc
mov
lcall
pop
roll
loope
xorl
cmp
pcmpgtb
sar
mov
mov
and
mov
addb
xor
or
mov
pop
or
movsl
in
push
add
test
pusha
and
iret
rorb
and
dec
lods
orb
push
je
sbb
dec
mov
fnstsw
and
test
adc
inc
cmp
shlb
or
in
mov
mov
sub
gs
mov
pop
fwait
mov
adc
and
and
andl
adc
mov
js
ljmp
adc
adc
push
sub
shrb
mov
cmp
nop
mov
cs
incl
inc
test
into
adc
imul
lock
mov
sub
je
inc
mov
cwtl
pop
insl
test
mov
cld
mov
jp
into
jne
movsb
mov
test
push
push
xor
mov
out
pop
test
xor
leave
push
out
mov
sbb
inc
sbb
push
mov
outsb
call
adc
mov
sbb
fidivrs
inc
jae
ja
and
mov
call
mov
inc
push
test
and
mov
sub
inc
cmp
pop
cmp
cmp
into
mov
inc
mov
pop
test
mov
inc
lods
lret
mov
adc
push
xchg
xor
mov
mov
mov
xchg
repz
and
clc
adc
and
cmc
mov
pop
arpl
loope
in
push
add
popa
roll
lock
push
loopne
sarb
insl
fcom
mov
lcall
mov
and
adcl
or
mov
pop
pushf
in
add
mov
andb
xchg
add
mov
fcomps
sbbl
shrb
addl
cli
mov
into
mov
pop
sbb
loopne
mov
cmpsb
call
nop
aad
clc
jmp
push
mov
out
jecxz
push
dec
push
pop
push
inc
dec
add
dec
and
xchg
into
jns
loop
vminss
mov
loop
inc
aam
fdivrl
inc
push
or
adc
jge
dec
xor
shrb
shrb
fisubrl
sbb
xor
pop
pop
lret
add
jbe
mov
clc
adc
mov
push
test
add
lea
arpl
stos
into
cld
pslld
sub
mov
dec
arpl
mov
pusha
idivb
sbb
add
fbstp
ret
dec
push
and
aad
add
frstor
jg,pn
sbb
subb
cwtl
adc
arpl
lcall
jl
or
push
shlb
and
pushf
push
xchg
leave
mov
movd
scas
xchg
aaa
mov
sbb
mov
jmp
mov
cmp
cwtl
loopne
jae
pop
and
lods
xchg
mov
fnstcw
gs
test
loopne
jl
cli
out
or
mov
sbb
fidivrl
js
xchg
addb
sub
jne
pop
les
sub
orl
push
aaa
es
repz
pushf
out
lock
jno
cmp
dec
jb
test
cmpsl
xchg
jbe
lea
fadds
fnstsw
sub
outsb
addb
lods
cmp
test
cltd
les
mov
loopne
pop
xor
psrlw
and
push
xor
imul
outsl
das
and
mov
sbb
cmp
sub
lods
mov
insl
enter
ret
or
scas
xor
cmp
mov
xchg
insl
in
ljmp
shlb
mov
add
or
push
out
loopne
fabs
or
test
jo
dec
pop
and
sarb
inc
sub
leave
mov
or
fnstenv
cmp
out
dec
cmp
jge
pusha
adc
mov
sbb
jns
sbb
push
jecxz
les
push
cmp
popl
xchg
inc
ja
jle
mov
stc
fwait
std
repnz
orl
xlat
push
inc
mov
daa
mov
dec
daa
dec
sahf
repz
in
adc
xchg
adc
mov
lcall
dec
adc
dec
xor
add
pop
nop
inc
adc
fcomi
dec
and
push
or
imulb
inc
daa
jns,pt
aam
pop
xchg
cmpsl
mov
mov
inc
std
les
adc
subb
test
and
xor
sbb
cmp
bound
jnp
sar
mov
sbb
mov
inc
scas
xorb
push
pusha
addl
jns
inc
std
nop
dec
sti
sbb
stos
sbb
jb
les
dec
out
repnz
cmc
mov
adc
add
or
cmp
subb
pop
in
loopne
add
inc
cmp
loopne
frstor
mov
push
rcrb
or
add
cmp
xchg
dec
adc
xlat
xor
rorl
inc
fmull
in
xor
jb
pop
push
es
loope
dec
dec
sbb
inc
aad
cli
lds
cmp
pushf
push
mov
inc
sub
fnop
cli
or
and
xor
hlt
push
movl
cmp
mov
or
incl
je
fs
jle
jmp
pop
je
popf
xchg
es
mov
mov
xlat
outsb
fsts
test
push
les
sub
sbb
mov
inc
add
push
jbe
stos
pop
ljmp
or
enter
mov
or
call
lds
mov
adc
dec
sbb
add
xor
mov
mov
lcall
or
adc
mov
pop
scas
add
cli
call
incl
push
pop
pop
inc
xlat
clc
std
mov
shll
je
or
xlat
or
sarb
push
push
mov
mov
sub
mov
lods
mov
aaa
fnstenv
scas
dec
test
xchg
pushf
push
mov
dec
push
in
out
mov
pusha
jno
std
icebp
test
push
xor
or
add
loopne
add
ret
in
mov
push
xchg
push
cli
into
ds
sbb
mov
or
rcll
or
nop
and
dec
ds
xor
pop
mov
push
sbb
push
and
mov
insb
fcomps
add
jne
shll
fbstp
cs
mov
sarb
loop
inc
dec
sub
mov
xor
jbe
cmp
fcoms
movsl
sub
push
pop
ds
inc
in
jl
sarl
call
push
cmpsb
push
rorl
and
sbb
sub
and
add
adc
sbb
cmp
jae
outsl
scas
scas
adc
mov
xorb
frstor
jns
xchg
leave
cmp
cmpsb
mov
mov
stos
sub
and
xor
loope
push
mov
ljmp
loopne
fs
jb
adc
fs
sbb
dec
insb
fists
roll
fs
out
push
push
loopne
xchg
cmp
test
loope,pt
pop
dec
cmp
inc
add
les
jl
fnsave
xchg
fildl
je
dec
pop
daa
hlt
cmp
pop
adc
addr16
push
scas
rorl
fcomp
les
mov
dec
pop
fisubl
lods
cmp
nop
mov
and
es
ret
sarl
push
or
movl
sbb
pop
in
fisttpl
mov
ficoms
adc
sub
aad
jo
testb
push
sub
enter
hlt
ret
add
les
std
sbb
vpsraw
and
icebp
lret
lock
add
rclb
sub
icebp
test
popf
fs
mov
iret
div
xor
fst
mov
ret
daa
out
cwtl
lods
push
movsb
rorl
push
call
lret
xchg
sub
shrb
in
dec
push
dec
inc
cmpsl
popa
test
lock
movsl
jge
test
mov
es
mov
xchg
pushl
pop
pop
inc
xor
pop
sub
ds
sub
fldenv
push
ret
dec
adc
mov
mov
enter
cld
loopne
sarb
loope
or
loop
mov
lods
push
daa
cli
mov
test
aad
mov
adc
imull
out
sub
clc
mov
sbb
icebp
push
enter
ljmp
and
cmp
inc
cmpl
std
and
sbb
push
jmp
mov
pop
jl
shlb
push
dec
das
idivl
pushf
lea
test
out
push
or
xchg
test
or
dec
xchg
adcb
fdivr
test
mov
lock
xor
idivb
loope
xor
mov
lret
fiadds
sbb
sub
nop
xchg
sub
pop
cli
adc
fisubrl
push
mov
jne
aad
cmp
test
gs
sahf
or
cs
jae
aad
std
sbb
rclb
je
inc
out
xchg
jne
andl
aam
and
repnz
movsl
or
or
sub
imul
adc
xchg
mov
in
push
add
cmp
ds
sbb
shr
cmp
daa
jnp
and
rclb
sub
pop
and
imul
sbb
add
mov
pop
stos
adc
jge
push
pop
mov
pop
adc
repz
mov
jp
adc
scas
pop
xlat
and
fisubl
adc
fidivs
dec
xchg
ljmp
sub
in
sub
test
push
outsl
add
jne
repz
add
push
fwait
xchg
sub
rcrb
jle
adc
icebp
or
fisubrl
addr16
mov
cmp
gs
subb
inc
mov
je
adc
mov
xor
mov
sub
in
cltd
imul
fstpt
and
xchg
add
and
dec
and
jge
pop
mov
pop
xchg
orb
sbb
bound
adc
movsb
loope
outsb
pop
pop
xchg
scas
lods
pop
mov
nop
sbb
sahf
xchg
scas
xchg
ljmp
int3
cmp
xchg
xchg
jb
lret
cmp
lea
xor
mov
stos
fisubl
aaa
cs
scas
dec
fimull
inc
and
cmp
and
test
ljmp
adc
inc
into
int3
popf
xchg
jne
dec
call
and
stos
sub
or
icebp
aad
adcb
inc
sahf
mov
pop
test
call
adcl
mov
pusha
es
dec
jl
jmp
pop
mov
sbb
xchg
mov
shr
mov
inc
fildl
and
pop
and
jge
xor
loop
test
push
movsb
dec
add
jno
stos
push
faddl
clc
neg
test
push
or
mov
add
lock
sub
insl
xchg
adc
add
inc
mov
push
cs
xlat
mov
fisubrl
adc
mov
arpl
addl
mov
or
xor
cwtl
ds
jno
jmp
pop
popa
pop
lret
hlt
push
push
push
les
movl
shr
lock
xor
xchg
ret
adc
hlt
ret
adc
xchg
cmp
cmpsl
dec
std
mov
or
mov
pusha
xchg
sbb
fisubrl
push
test
or
mov
in
inc
pop
cmp
sahf
sub
jb
jns
mov
lar
imul
pop
push
mov
imull
clc
cmpsb
cld
je
jnp
sbb
ret
ss
ljmp
fmuls
jp
sub
adc
add
dec
add
add
scas
xor
adcb
mov
es
and
dec
incl
pop
cltd
sbb
rcl
jp
cmc
add
and
dec
clc
push
icebp
ljmp
scas
fisubrl
add
or
je,pt
cmp
loopne
out
sbb
lock
adc
mov
lods
mov
in
dec
pop
pushaw
xor
dec
add
jg
repnz
adc
mov
inc
mov
pop
add
and
adc
inc
cmc
fsubp
aam
xchg
dec
or
mov
mov
inc
adc
lea
jp
shrb
movsb
xchg
mov
outsb
mov
scas
movsl
and
push
add
pop
outsl
sub
cmp
mov
xchg
arpl
jnp
ljmp
dec
scas
jl
push
or
ret
lods
scas
push
pop
test
push
ror
dec
adc
scas
cmp
xchg
stos
mov
sub
rcrb
inc
leave
adc
cli
ret
fucomp
test
lea
shrb
mov
popf
and
push
stc
cwtl
add
jge
mov
mov
sub
lock
movsb
inc
in
jmp
jno
or
pusha
sbb
mov
cmp
mov
pusha
adc
and
test
push
clc
cli
lret
add
or
shrb
mov
inc
aad
out
rcll
imul
ljmp
mov
lock
push
je
js
pop
and
pop
cwtl
out
mov
gs
call
movb
pop
decl
repz
adc
test
leave
cwtl
inc
ja
add
movsb
jb
mov
mov
cmc
je
and
inc
aad
mov
pop
and
push
out
mov
dec
cmp
pop
inc
adc
subl
and
sub
mov
inc
adc
push
lret
sbb
mov
push
cmp
and
jo
icebp
cmc
sbb
jp
and
loope
daa
pop
mov
icebp
mov
sbb
sub
push
jmp
mov
out
ficoml
sub
mov
adc
sbb
pop
push
sbb
sbb
out
cmp
adc
les
inc
orb
cs
scas
test
insl
clc
dec
mov
xor
movb
clc
add
sbb
xor
or
sub
mov
lea
and
hlt
jg
sbb
or
nop
lds
aam
xchg
xor
push
outsl
dec
add
mov
or
iret
in
shrd
mov
divb
fists
movsb
pop
push
stc
push
loope
rcr
int
pushf
popf
xlat
lcall
or
outsl
or
pusha
scas
cmp
xchg
insl
scas
and
dec
mov
add
insb
pushf
dec
clc
rorb
adc
mov
pop
loope
or
mov
cmpsl
dec
pop
jp
add
arpl
add
adc
add
aas
mov
add
aam
cmp
add
xchg
mov
cmp
pushf
add
xor
jl
leave
jle
popf
inc
call
gs
or
jl
xchg
imul
xchg
dec
in
inc
jp
push
xchg
jo
pusha
pop
and
adc
pop
in
insl
xchg
mov
test
pop
mov
cmpsl
push
mov
je
or
orl
jl
jp
aad
pop
jbe
jecxz
fiaddl
inc
mov
les
adc
or
lds
sub
inc
push
pop
loopne
js
xlat
data16
jns
jg
jno
ja
inc
inc
daa
xorl
cld
lahf
aad
call
adc
loopne
jnp
xor
daa
ror
lret
lock
iret
scas
outsb
push
popf
mov
and
pop
mov
mov
mov
bound
inc
xor
aas
push
jno
int3
xor
sub
xor
into
pop
jo
scas
xchg
dec
xchg
cwtl
dec
push
push
or
adcb
fldl
lock
mov
pushf
inc
push
lds
loop
push
cli
iret
sub
or
cwtl
sbb
test
inc
movsb
add
mov
pop
test
adc
xchg
test
imul
or
xchg
push
add
call
xor
mov
dec
push
jbe
dec
nop
pop
lods
lock
mov
shll
push
lahf
and
pop
and
jnp
cmp
jg
adc
pop
movsl
sbb
in
ljmp
loop
sbb
lods
push
lea
clc
movsl
sub
push
sub
push
mov
gs
push
or
cld
add
loope
mov
cmp
mov
push
pop
adcl
mov
rorb
jns
push
incl
mov
fdiv
xor
imul
pop
and
lahf
mov
push
xchg
add
out
movq
pop
fbstp
or
mov
sbb
adc
scas
ljmp
loope
sub
mov
add
xor
dec
mov
and
lods
pop
rcrb
gs
fildl
cmp
scas
imulb
push
adc
sbb
or
adc
rcr
pusha
cmp
mov
adc
and
jnp
push
inc
icebp
mov
or
mov
sar
xor
xchg
lret
std
jecxz
stc
stos
push
jge
sti
mov
mov
jb
pop
jge
xchg
add
sahf
fisubrs
xor
sub
mov
adc
mov
jp
aas
jle
mov
cmpsb
mov
inc
dec
ss
inc
pop
enter
adc
pop
xor
dec
adc
lret
sbb
inc
in
pop
dec
inc
add
lret
data16
push
lea
mov
shl
jnp
cltd
inc
mov
add
mov
test
xchg
push
bound
pop
out
scas
lods
outsl
sbb
sub
inc
xor
adcb
xchg
inc
adc
imul
adc
mov
ljmp
jge
push
insb
dec
addr16
test
fwait
rclb
lods
test
mov
es
push
fcomi
push
or
xchg
mov
fdiv
jl
or
subl
push
xchg
mov
dec
shr
cmp
jmp
icebp
int3
je
bound
nop
push
shrb
daa
adc
cmp
pop
icebp
jbe
push
sub
pop
fdivl
clc
sbb
jns
sub
das
dec
dec
loopne
cmc
dec
fs
and
sti
ffreep
xchg
andl
je
shlb
fdivl
push
cli
dec
std
adc
mov
inc
es
or
insb
adc
in
repz
dec
clc
ret
lods
aas
mov
fsts
rclb
mov
adc
push
aam
dec
adc
mov
ds
dec
dec
lcall
xchg
rcrb
cwtl
nop
ljmp
lods
jbe
jl
inc
pop
lds
sbb
daa
lods
xor
adc
add
cmc
or
xchg
into
push
pop
jg
jg
bound
iret
dec
xchg
sbb
popa
xchg
jo
mov
test
jne
scas
outsl
mov
jmp
sub
mov
fmul
mov
ljmp
mov
add
xchg
push
movsl
inc
xchg
sub
inc
outsl
sub
xchg
xor
mov
mov
gs
push
xorl
negl
sub
cmp
dec
cmpsl
add
mov
or
push
sbb
mov
dec
sub
or
inc
loop
ljmp
js
mov
aam
dec
xchg
mov
mov
mov
dec
data16
mov
or
push
add
lds
mov
add
xor
push
lcall
xchg
xor
clc
jp
stos
lahf
fs
clc
adc
dec
out
outsl
inc
repz
js
lcall
adc
or
sbb
ret
push
clc
pop
rcrl
push
mov
ljmp
shrl
inc
push
jmp
shrl
pop
mov
adc
cmp
push
test
jge
fstp
mov
jbe
jg
icebp
and
add
mov
in
or
push
pop
js
je
leave
and
mov
loopne
jo
push
sub
stos
xor
mov
cmp
mov
mov
iret
in
rcrb
jge
repnz
rorb
inc
inc
std
pop
clc
cmp
lock
mov
push
popf
jmp
mov
les
jg
sbb
xorb
xorb
clc
inc
ja
int
jle
inc
jne
test
pop
mov
ret
in
sarl
sbbb
cmp
pop
add
add
push
lods
cli
fucompp
scas
xor
sbb
cmp
jbe
adc
fwait
inc
js
outsb
pop
xlat
mov
adc
push
push
js
push
or
fwait
hlt
mov
cld
mov
adc
loope
orl
push
jmp
dec
das
adc
push
pushf
or
sbb
out
aam
fsub
push
jge
lds
jecxz
roll
insl
and
add
sbb
nop
mov
dec
mov
push
jb
mov
jmp
test
test
xor
out
jo
cmp
or
ljmp
adc
sbb
pop
xchg
mov
or
push
push
push
mov
jl
int
cmpsb
xchg
mov
lods
fimuls
push
cmpsl
in
xlat
sets
shrb
pop
mov
jns
cwtl
cmp
movsb
rclb
jle
add
fwait
mov
cmp
inc
paddw
and
js
mov
jecxz
cmpb
nop
int
xlat
xor
dec
xchg
adc
jo
jge
or
dec
mov
in
push
pushl
dec
or
mov
psubq
dec
iret
dec
inc
sbb
daa
mov
inc
inc
scas
and
cmc
inc
fdivrs
adc
aad
jns
push
cmp
sbbl
mov
sti
test
fisttps
dec
xchg
push
sub
dec
mov
les
xchg
rcrb
pop
inc
in
mov
pop
or
xchg
cld
xlat
or
wrmsr
fstpl
inc
leave
adc
or
xchg
sub
stc
mov
icebp
es
xlat
cli
pop
data16
outsb
mov
adc
js
push
popa
mov
push
cmp
int3
adc
mov
cmpsb
cmp
das
std
movsl
lahf
insl
mov
sub
loop
jb
mov
mov
push
leave
push
fadds
jle
and
mov
rclb
dec
push
mov
and
fcmovnbe
inc
inc
mov
mov
jle
call
arpl
outsl
inc
mov
sub
add
mov
mov
hlt
pop
inc
push
aad
pop
cmpsl
push
xchg
inc
or
inc
insb
adc
mov
sbb
push
inc
inc
adc
rcr
cmp
mov
mov
ffree
xchg
jle
or
mov
mov
and
fsubr
add
stos
adc
enter
pop
mov
call
lods
xchg
xor
repz
mov
enter
js
xchg
sub
sbb
in
shlb
mov
jno
push
ss
loop
fadds
xchg
pop
sbb
loopne
inc
rcll
inc
cli
movsb
fcoms
push
flds
mov
inc
std
stos
xorl
popa
into
pop
pop
aaa
test
pop
or
fisubl
dec
jp
push
xchg
loopne
cli
test
inc
cmc
rolb
addl
xor
sub
xchg
xchg
jbe
arpl
lock
pop
push
xchg
lock
mov
add
sbb
fadds
pop
shrl
ds
sub
and
add
adc
sbb
mov
adc
mov
mov
mov
xchg
xor
sub
aam
xchg
inc
dec
in
jmp
pusha
mov
pusha
mov
push
leave
testb
xchg
cld
mov
add
pop
cld
inc
sbbb
xor
jno
cmpsl
cltd
mov
icebp
xchg
movsb
in
push
negb
adc
cltd
test
aas
ss
and
push
xchg
loop
outsl
jecxz
add
jl
pop
fs
mov
or
nop
pop
xchg
sub
cmp
dec
or
repz
ja
mov
mov
sbb
jmp
stos
iret
sahf
mov
dec
testb
jp
push
lods
psrad
mov
test
mov
roll
jo
lcall
out
jmp
mov
push
sbb
xor
xchg
mov
mov
outsl
sub
jg
add
push
enter
lods
sub
pop
mov
or
and
dec
add
pusha
push
mov
repnz
sbb
icebp
pusha
loopne
ror
pusha
cmc
cmova
sar
mov
dec
dec
cmp
push
mov
or
or
inc
iret
cmp
mov
xor
add
dec
fistpll
cmpsl
shl
push
insl
fsub
ljmp
push
mov
dec
ret
and
or
mov
outsb
js
lods
clc
adc
incl
sub
fistps
jbe
int3
xor
aas
pusha
scas
xchg
ds
mov
adc
bound
mov
mov
rolb
fdivrl
push
lock
out
dec
mov
push
ljmp
adc
loope
inc
outsb
and
pusha
cmp
inc
xchg
ss
adc
hlt
iret
push
sub
mov
movsl
or
or
lock
leave
ss
xor
lret
outsb
ljmp
pop
movsl
mov
cmp
jg
pop
fsubs
bound
mov
jl
sbb
inc
dec
in
popf
in
adc
mov
push
sbb
inc
test
jmpw
arpl
add
push
or
xor
xor
shl
add
and
std
loope
mov
xchg
jle,pt
sub
loop
rorl
mov
and
fsubrl
andl
mov
fs
adc
les
push
rcl
ja
sbb
adc
cmp
jae
xchg
push
outsb
sub
lret
clc
aas
sub
leave
mov
inc
mov
int3
hlt
add
inc
dec
jmp
jge
loope
mov
lcall
and
jbe
les
ds
mov
nop
inc
add
dec
fstps
sti
mov
push
and
fistps
pop
jmp
es
aam
je
xchg
xchg
mov
mov
fldcw
fsubs
loop
es
ret
xlat
mov
add
mov
fadds
xor
xchg
xchg
adc
jle
fstps
fisubrs
xor
popf
hlt
sti
dec
pop
lods
add
xchg
or
mov
bnd
and
out
lds
rorl
and
sbb
pop
push
jp
enter
and
lcall
sbb
shlb
mov
jg
fdivl
sbb
push
mov
lret
mov
aam
inc
add
int
jno
add
inc
fildl
dec
push
fwait
pop
pop
adc
mov
push
jl
jne
mov
jb
sbb
insb
cmp
push
lret
pop
push
or
cs
pop
dec
ljmp
or
lock
mov
inc
jmp
icebp
and
clc
inc
sahf
sub
ds
mov
mov
mov
mov
inc
lods
scas
add
lock
movsl
mov
pop
ror
push
mov
es
push
pop
mov
shl
aam
push
lret
xchg
sahf
mov
pop
xor
cmpsl
rcll
scas
push
mov
jns
mov
inc
loop
and
lret
insl
inc
stos
jmp
popf
js
aas
aaa
aas
add
inc
nop
push
mov
mov
pop
sbb
sub
fstpt
and
clc
scas
pop
adc
fadds
pusha
lds
and
lea
and
fimuls
add
xchg
int3
dec
xor
sub
or
push
adc
lret
push
je
cwtl
addr16
push
scas
push
jp
mov
gs
xor
rolb
xor
cli
shrb
insb
pop
inc
sarl
and
adc
jmp
jg
dec
xor
and
lock
xchg
sub
lock
cmp
flds
pop
and
test
inc
fwait
scas
cmpsb
jae
std
pop
add
add
sarb
adc
mov
rclb
rcrb
inc
fnstsw
jae
arpl
fdivs
jo
mov
push
sti
jnp
adc
aam
pop
sbb
rclb
leave
fisttpll
scas
sub
sub
loopne
sbb
fcompl
jae
daa
sahf
addr16
insl
insb
pop
lods
jmp
adc
push
pop
stos
fmul
gs
ret
mov
inc
scas
mov
push
pop
imul
adcb
sbb
es
or
add
mov
push
scas
mov
pcmpeqb
xor
mov
loop
loop
adc
or
sbb
and
push
lea
push
mov
xchg
mov
mov
mov
addl
and
in
jecxz
pop
xor
sbb
loopne
add
inc
dec
mov
xor
into
gs
lds
mov
lea
clc
outsl
fisubrl
loopne
int3
call
mov
xchg
out
fwait
and
cmp
push
popl
jg
dec
negl
xchg
repnz
dec
mov
cmpb
lds
mov
jl
cmovb
mov
add
cmp
jg
subb
xor
push
or
fdivs
add
jmp
pop
push
cs
ja
dec
push
shrb
rcrl
lock
dec
shlb
xchg
mov
sarb
mov
lcall
popf
dec
push
pop
testb
shlb
mov
outsb
stc
data16
movb
sub
cmp
sub
fistps
std
mov
testl
mov
sar
jp
dec
mov
xchg
or
sbb
divl
lods
push
in
push
or
imul
add
data16
and
xchg
jo
push
call
fsubrs
add
push
add
push
sub
and
push
sub
lods
pop
mov
ljmp
jnp
pop
push
and
and
pop
adc
sahf
pop
mov
push
imul
std
mov
aam
gs
inc
inc
or
add
mov
imul
dec
outsl
cs
cs
shlb
and
repz
dec
cmc
cmc
icebp
fcom
or
stos
nop
movsl
loopne
adc
stos
ficompl
mov
xor
mov
rcrl
enter
jno
adc
jns
divl
insb
iret
jno
int3
int3
scas
mov
mov
xor
cltd
aam
inc
pop
inc
pop
mov
repnz
inc
pushf
push
shr
lds
insb
pop
or
lar
and
test
pop
scas
pop
sub
aaa
sub
adc
cmp
fidivrs
sarb
push
ret
addb
subb
lock
mov
cld
into
sub
push
fimull
push
clc
xchg
loopne
and
bound
jg
and
adc
lock
les
jns
or
lret
ss
fistps
mov
in
rcll
shrb
add
or
xor
add
jne
push
in
pop
push
jbe
xchg
mov
jle
inc
nop
dec
insb
cmp
cmp
mov
scas
adc
loop
cs
fcompl
or
jno
mov
inc
pop
xchg
inc
push
and
push
scas
scas
dec
mov
cs
add
nop
sbb
cmp
xchg
mov
ljmp
pop
jbe
loope
mov
clc
pop
mov
insb
out
xor
addr16
jp
inc
mov
ret
push
inc
lods
push
loop
pop
aam
xor
jp
add
and
inc
dec
and
inc
lds
out
jge
jl
jp
and
xchg
jmp
mov
adc
sbb
or
dec
adc
es
cmp
lahf
das
sub
clc
push
fs
loop
adc
add
cmp
insb
jae
dec
push
movmskps
cmp
adc
shll
pop
jp
mov
in
and
pop
dec
leave
loope
add
stos
mov
cld
call
sub
adc
jmp
cs
sbb
arpl
dec
push
push
in
xchg
jo
or
push
es
cmpsl
cmp
fwait
imul
cmpsb
mov
xchg
in
push
add
adc
je
xchg
int3
mov
mov
pop
int3
mov
cmp
out
fsubrs
mulb
push
divb
jns
sub
xlat
dec
shl
fimull
loopne
insb
mov
mov
ret
sub
insb
or
push
fucomi
cltd
push
test
dec
in
sbbl
call
xor
test
add
scas
inc
xchg
add
mov
jbe
or
mov
sbb
sti
mov
lods
scas
or
fyl2x
jg
test
rcrl
test
and
jecxz
clc
les
fdivl
dec
lea
mov
pop
cmpsb
adc
sub
cmpsb
out
js
cmpsb
xor
movsl
ljmp
outsb
add
icebp
in
dec
push
cld
cltd
inc
ror
and
sbb
pop
sbb
insl
xor
rcrl
add
push
sub
dec
shll
and
cld
flds
add
fcomip
inc
sbb
push
mov
pop
mov
and
pusha
cmp
aam
ljmp
mov
cmpsl
pusha
and
test
dec
arpl
ret
fisubrl
mov
sub
pop
ret
jnp
lock
sbb
test
pop
jge
add
inc
test
scas
imul
test
outsb
push
sub
dec
das
or
push
outsb
lock
pop
pop
loopne
les
xchg
mov
push
mov
cmp
sti
jmp
push
js
sub
loop
jb
push
or
faddl
out
xchg
sbb
add
aad
ds
in
add
js
outsb
mov
or
pop
mov
pop
out
loope
and
daa
mov
scas
imull
jecxz
mov
add
inc
push
shl
shrb
fs
in
pushf
jle
scas
mov
xor
xchg
loope
add
rcrb
adc
jmp
or
cmp
das
push
enter
jl
ljmp
or
xchg
ds
cmpsb
adc
inc
sub
lcall
dec
iret
sbb
and
xor
push
push
dec
pushf
xchg
dec
mov
pop
rclb
clc
sbb
jg
mov
sbb
sbb
mov
jl
lcall
addb
dec
add
adcl
adc
adc
out
mov
jmp
sub
je
push
movsl
icebp
jbe
or
je
lahf
dec
jg
cmp
push
sti
jge
scas
add
add
xchg
mov
std
mov
ljmp
pop
jbe
or
out
movsl
scas
cmc
push
sti
orb
add
aas
pop
and
and
test
adc
loopne
xchg
sbbl
jle
push
sti
enter
inc
pop
jne
ret
or
icebp
outsl
or
bound
adc
sti
mov
push
movb
es
push
je
pop
mov
fcomps
out
mov
cmp
jge
sbb
sub
xor
and
dec
lcall
cmp
jne
xor
cld
scas
xor
dec
cmpsb
pop
push
push
adc
sahf
jns
inc
mov
loopne
stos
shl
or
pop
ljmp
pop
ds
dec
inc
das
mov
inc
dec
mov
mov
add
or
sbb
pushf
loop
orb
xor
sbb
pop
test
mov
xchg
mov
lret
lods
pand
outsl
add
push
shll
data16
mov
imul
mov
test
mov
call
mov
mov
sub
js
shll
imul
ficomps
repz
test
inc
fs
dec
std
dec
dec
add
push
daa
jne
and
sub
ljmp
fmul
xchg
dec
inc
jo
fisubrl
add
lahf
and
sbb
fsubr
mov
adc
xor
mov
loope
mov
call
lret
roll
add
adc
jnp
shrb
cmp
cvtdq2ps
loopne
je
add
adc
dec
in
sbb
out
mov
in
and
inc
push
xor
push
jl
push
test
push
stos
and
aam
sub
mov
push
inc
mov
js
xor
sbbw
add
popa
xchg
les
cli
outsb
sbb
das
jb
xchg
lahf
xor
shl
orb
scas
or
repz
pop
lcall
addl
mov
sub
lret
test
insl
jp
pop
push
aam
fcompl
cmpsl
pushf
cmc
pop
sbb
incb
rcrb
ficoml
dec
jp
push
inc
and
je
sub
js
int3
ljmp
xor
xchg
mov
jo
stos
push
sbb
push
adc
sbbl
shrb
push
pop
add
imul
or
xchg
xor
xlat
fistpl
inc
cltd
dec
jo
mov
test
jbe
clc
inc
mov
loopne
hlt
insl
jecxz
dec
lods
pop
gs
inc
dec
arpl
out
add
das
sbb
aaa
imul
dec
mov
shl
scas
jl,pt
ljmp
movsb
mov
std
aam
add
sub
jl
nop
push
add
shlb
ds
add
add
out
rorb
push
dec
mov
loop
scas
rcll
mov
adc
mov
ja
mov
xor
loope,pt
push
imul
lahf
cmp
fstl
lds
sub
inc
lret
add
cmp
push
mov
cli
add
icebp
xlat
xchg
rcll
orb
jo
pop
cmp
xchg
pop
pop
decb
add
dec
repz
xor
shll
pop
test
movb
nop
in
js
inc
push
ds
insl
pop
loopne
enter
cmovo
aaa
jg
inc
fwait
add
dec
stc
scas
cmpsl
mov
sbb
pop
adc
push
clc
xor
dec
in
cmp
mov
lret
roll
popl
mov
mov
mov
xor
cmc
fimull
xchg
inc
push
mov
icebp
lods
or
rcll
sub
repnz
scas
mov
jp
xchg
sub
mov
add
xor
or
ljmp
popf
es
mov
gs
inc
push
push
push
add
fmuls
out
ss
add
aas
lock
sbb
dec
std
scas
mov
xor
xchg
inc
or
leave
xlat
int3
cmp
testb
xchg
push
inc
push
icebp
xor
lea
test
es
or
sar
sub
mov
fwait
inc
mov
icebp
push
adc
lods
pop
adc
ss
scas
jns
pop
sub
and
loopne
mov
popf
fidivrs
cmp
xchg
pop
pop
cmc
rcl
jle
dec
testb
popa
dec
les
addb
dec
popf
pop
inc
std
sub
jne
imul
inc
adc
rcrl
mov
cs
push
or
push
out
jle
add
push
push
push
push
scas
iret
inc
insl
jno
es
or
mov
ror
or
iret
out
push
clc
sbb
or
pop
int3
je
push
inc
add
popf
push
xor
mov
mov
mov
clc
lock
mov
dec
mov
testb
stos
arpl
loopne
xorl
test
push
enter
adcb
pop
mov
push
xchg
inc
dec
data16
stos
or
mov
pop
arpl
sbb
adc
stos
mov
push
int
add
push
pop
ljmp
testl
leave
inc
mov
sub
mov
loope
pop
inc
fldcw
mov
or
sbb
cmpsb
jbe
sub
push
fcmovnbe
xor
inc
mov
sub
push
xor
mov
inc
stos
bound
push
mov
mov
stos
dec
rcll
rorl
inc
push
sbb
sub
ja
dec
push
mov
cmc
cmp
ljmp
mov
mov
xlat
fcmovnbe
push
shlb
cmp
pop
sub
cli
xchg
pop
dec
scas
les
dec
xor
fimuls
push
xchg
pop
mov
mov
fdivrp
dec
or
sbb
clc
pop
icebp
ret
jmp
sbbb
js
pop
xor
sub
das
test
sub
ret
aad
loopne
mov
adc
aad
jecxz
lahf
xchg
lock
jo
sbb
xchg
aam
pop
mov
fdivs
les
push
push
addb
incl
das
pusha
dec
loopne
icebp
jb
fnstcw
fbstp
pop
xor
arpl
dec
cmp
jo
aam
dec
aad
add
fwait
push
mov
jnp
lea
test
inc
push
lods
dec
mov
test
cmpsl
or
inc
xor
stos
or
add
pusha
dec
jae
int
aas
mov
adc
jnp
sub
bound
mov
lret
sub
mov
mov
add
xchg
mov
xchg
mov
fsubp
jbe
movb
cmpsl
fisubrl
mov
or
or
out
dec
or
test
cmpsl
aaa
ret
ficoms
cli
push
mov
inc
or
shlb
cmp
insl
outsl
or
divb
pop
loope
aaa
jne
rcrb
jmp
scas
and
pusha
add
inc
jmp
mov
lea
cwtl
mov
aam
icebp
xor
and
sub
mov
push
sahf
add
outsl
mov
test
jg
dec
pop
dec
sahf
cs
lahf
xchg
fdivs
mov
inc
jbe
dec
clc
sarl
add
ds
sub
inc
add
mov
cmp
jbe
ret
push
push
push
cmp
lods
stos
lock
sub
adc
imul
cmpl
lock
or
cli
mov
rcrb
daa
mov
dec
int3
adc
cld
divl
lock
mov
add
insb
ljmp
ror
in
daa
push
cli
arpl
push
xchg
test
mov
aas
mov
inc
sbb
je
xchg
cs
ret
lods
add
pop
lcall
or
shl
xlat
fwait
in
mov
mov
test
movsl
push
popa
addr16
jmp
pop
clc
dec
enter
out
subl
or
inc
bndldx
sbb
adc
push
dec
adc
out
sub
sub
ljmp
into
rclb
mov
aam
xor
daa
sub
aas
jmp
add
or
cmc
inc
mov
mov
cmc
pop
loopne
stc
and
movsl
pop
xchg
xchg
notl
movsl
cmp
cmp
movsb
and
xor
add
inc
cld
mov
test
sahf
insb
enter
outsl
clc
jne
cwtl
inc
and
inc
in
imul
movsl
outsb
sbb
dec
add
push
das
dec
cmp
flds
jbe
nop
test
sti
loope
popf
mov
bound
lods
punpcklbw
pop
inc
ret
sub
jecxz
xchg
or
dec
loopne
subb
clc
adc
pop
sbb
mov
pop
inc
or
inc
pop
test
mov
shrl
nop
cmp
dec
inc
cmp
sub
cmpsb
or
les
rcr
cltd
jmp
sarb
cmp
jl
or
mov
repnz
mov
cmp
xchg
pushf
pushl
pushf
aad
jbe
xchg
mov
call
cmp
orl
push
and
cmp
popa
mov
leave
insl
clc
in
xchg
mov
add
cmpxchg
decl
shll
lret
lods
addl
add
je
jmp
cs
rorb
jne
adc
dec
add
aas
std
dec
dec
or
cmp
verr
shrb
lods
inc
dec
clc
sbb
dec
js
add
dec
ret
or
jbe
mov
mov
mov
je
push
js
xchg
add
mov
add
pop
cmp
cmp
cmc
xor
dec
in
es
mov
adc
addr16
or
std
xor
cmp
and
arpl
lret
cmpsl
jns
icebp
ret
repnz
testb
dec
mov
js
fsubp
pop
push
sbb
push
add
sub
add
push
addl
push
std
dec
cmp
insl
rolb
push
inc
inc
lcall
ret
add
or
sub
addr16
push
outsl
dec
jbe
les
push
xor
jo
sub
mov
mov
pop
xchg
or
mov
mov
mov
push
inc
dec
mov
xor
pop
or
call
xor
cmc
fadds
push
test
pop
out
sbb
and
lods
leave
inc
es
dec
ja
and
sbb
lods
scas
pusha
jp
push
in
ret
mov
aad
jle
les
test
js
xlat
sti
enter
dec
shrl
inc
fcomps
test
xchg
jecxz
mov
mov
test
adc
insb
stc
mov
xchg
rorl
xchg
or
bound
or
mov
pop
pushf
mov
mov
fwait
or
pop
jnp
adc
mov
enter
es
orb
aas
fs
popf
mov
fistps
jmp
adc
cmpsl
test
ret
and
adcb
ljmp
leave
jecxz
and
sbb
sbb
xchg
leave
cmpsb
negb
aas
sbb
jns
add
mov
inc
test
mov
aas
mov
push
push
xorb
inc
jl
xchg
test
jecxz
fldenv
push
lock
add
mov
push
add
add
or
inc
daa
test
jo
negb
sbb
in
sbb
rolb
dec
or
jg
and
lods
dec
imul
pop
dec
mov
stos
mov
scas
push
lret
rorb
pushw
sub
lcall
add
xor
ds
movsl
lahf
dec
pop
jno
jge
ror
mov
mov
out
mov
ret
jbe
inc
push
adc
push
mov
movhps
sbb
and
and
sub
and
in
sahf
popa
cmp
pop
mov
sahf
cmpsb
add
ret
pop
cmp
jno
gs
xor
inc
sub
mov
fwait
sbb
sbb
push
dec
push
xchg
add
mov
push
dec
and
jp
add
out
outsb
pop
rorb
outsb
add
push
pop
cmp
dec
cmp
mov
cmpsl
outsl
es
std
fs
pop
cmp
movsl
pop
in
ss
sarl
stc
ret
andl
sub
ret
lock
ret
rcll
mov
and
dec
sub
push
movsl
bound
xor
add
xor
add
sub
or
xchg
and
jno
pop
aas
ds
rcll
adc
test
arpl
pop
cmp
xchg
cmp
sub
sub
push
cmp
bound
rcll
push
loope
lock
or
out
jecxz
ja
dec
mov
sub
icebp
mov
and
inc
loope
mov
les
call
add
push
fldl
das
jo
pop
popf
test
sarb
aad
movsl
mov
enter
push
xchg
mov
arpl
ret
sbb
sub
sbb
mov
shlb
adc
add
pop
imul
jb
mov
lahf
addr16
inc
mov
loope
pop
pop
cmp
test
sub
out
or
and
mov
jns
movsb
sub
int
fmull
mov
or
imul
fwait
loop
out
push
leave
inc
dec
mov
and
bound
mov
insl
sbb
jno
shrl
and
mov
testb
loopew
dec
mov
adc
push
mov
lods
pop
sub
leave
movsl
xor
imul
xchg
lcall
fwait
cmpsl
insl
mov
insb
pop
sbb
xchg
test
iret
gs
lods
cmp
sti
xchg
mov
xchg
sub
jb
xchg
and
pop
pop
lds
lods
push
and
xchg
or
pop
sbb
mov
cmp
jl
test
xor
sbbl
aaa
sahf
dec
cs
aad
xor
call
imul
repnz
adc
js
movl
push
push
xor
xchg
sub
data16
or
sahf
xor
mov
push
push
ds
js
pop
dec
sbb
inc
cld
cmp
or
int3
cli
inc
mov
cmp
fucom
xchg
lret
sub
add
daa
jle
imul
inc
lds
jae
frstor
aaa
add
and
and
lods
push
adc
les
popf
push
sbb
push
in
aaa
test
out
push
shl
dec
icebp
inc
cmpsb
cmc
dec
test
or
xchg
and
sub
mov
dec
loope
ftst
pop
xchg
popl
push
movl
out
int
add
testb
ret
loopne
pop
pop
inc
mov
notl
testb
xor
inc
inc
add
pmovmskb
xchg
mov
adc
adcl
pop
fisttpl
xchg
mov
nop
in
xchg
out
stc
dec
xor
add
dec
cmp
add
sub
jbe
xor
mov
repnz
pop
stos
aaa
test
cmp
mov
add
in
enter
xor
mov
fildl
and
call
aad
cmp
or
into
scas
jb
xchg
adc
stos
movsl
insb
aaa
and
sub
das
jmp
jp
lds
sahf
insl
mov
mov
lods
nop
mov
je
scas
xor
mov
mov
jecxz
jns
adc
xor
nop
repnz
bound
orl
in
xor
movsb
xor
xchg
jmp
cli
insl
adc
mov
aas
add
adc
adc
fidivs
xchg
mov
push
pop
ret
xor
clc
push
dec
dec
pop
mov
push
pop
or
adcb
icebp
pop
xor
sub
sti
or
add
sub
inc
add
push
in
jp
adc
or
sub
push
mov
push
mov
out
imul
mov
and
stos
jae
and
jb
les
test
cmpsb
aaa
xchg
xor
daa
xchg
shll
add
orb
test
rclb
and
lods
clc
sub
jmp
inc
mov
jp
into
pop
cmpb
fdiv
or
daa
ret
mov
jae
jmp
xchg
cltd
mov
add
jne
data16
xchg
and
and
rol
mov
outsl
popf
clc
push
arpl
inc
sbb
lret
mov
lods
cmpsl
lods
ljmp
jg
mov
sbb
repz
inc
fnstsw
mov
fldl
enter
stos
pop
or
pop
into
sub
inc
outsl
pushf
or
in
ret
xchg
pop
cmp
dec
mov
out
xchg
xchg
sub
fcoml
outsl
sti
mov
jo
lock
shrl
cmp
and
jb
daa
xlat
jne
sahf
inc
mov
gs
mov
inc
dec
pop
mov
adc
adc
rorl
mov
cltd
mov
std
pop
sti
and
imul
pop
repz
jno
movsl
rcll
inc
mov
push
pop
mov
xchg
fiaddl
jecxz
loop
fwait
mov
xlat
mov
push
push
pop
mov
std
stos
loope
mov
adc
fmul
leave
add
cmp
shl
punpckhbw
rcrl
mov
fbstp
mov
cld
adc
push
insl
inc
rcr
jo
add
test
xchg
pop
jnp
add
jne
das
xor
xchg
sbb
sbb
subl
jb
clc
testb
fidivl
pop
fildl
mov
aam
mov
je
test
push
mov
dec
test
repnz
jo
in
stos
cld
sub
mov
imul
and
es
pop
xchg
fcomps
lods
into
test
addr16
mov
dec
pop
mov
inc
add
pop
push
mov
shll
add
loopne
into
push
mov
rorb
dec
mov
je
mov
mov
test
test
pop
push
hlt
cs
mov
pop
ljmp
sub
or
iret
mov
adc
ss
jp
jmp
outsl
xchg
push
mov
imul
pop
cmp
mov
inc
cmp
pushf
add
sub
in
adc
stos
int3
push
and
stos
sbb
mov
imul
js
pop
pop
sub
mov
push
loope
adc
add
push
cmp
inc
arpl
sarb
adc
push
les
sbb
xorl
pop
and
xchg
idivb
add
add
test
pusha
or
dec
add
pop
iret
jl
lret
adcl
jge
mov
ds
scas
mov
push
scas
fcoml
adc
lock
popf
cmp
cmp
stc
mov
jecxz
repz
movsb
mov
in
lods
sbb
jp
testb
pop
cmc
int
push
or
ss
and
and
sub
inc
cmp
sub
cmp
mov
xor
sbb
mov
xor
jae
push
mov
xchg
repnz
pop
pop
aaa
add
sub
jbe
mov
xor
loopne
add
shl
stos
insb
ss
sub
call
jmp
xchg
mov
shlb
imul
inc
mov
mov
sbb
imul
loopne
cmp
ret
test
xchg
fcmovu
xor
inc
pop
andl
push
push
or
cmpsb
add
sub
dec
fadd
movnti
sbb
xchg
cmpsl
push
mov
add
jg
mov
inc
add
lcall
lea
lahf
imul
shlb
nopl
and
rclb
test
jno
shll
jno
push
pop
or
jns
fimull
sbb
movsb
cmpsb
add
test
cmp
sbb
adc
rclb
inc
fdivr
sti
cmp
dec
inc
pop
add
or
movsb
jae
cwtl
ljmp
jmp
sbb
or
ds
call
clc
test
inc
mov
cmp
imul
stos
es
push
jbe
aam
pop
cmc
test
pop
test
sar
or
add
iret
test
xchg
push
bound
std
shlb
lcall
push
sub
mov
sub
push
addr16
aad
push
in
mov
cmc
mov
pop
lahf
lods
xchg
dec
fisttpl
in
pusha
bndldx
cs
cmp
cmpsl
cmp
jns
scas
xchg
add
jg
pop
pop
imul
and
mov
push
jge
loop
bound
dec
or
repnz
push
cmp
movsb
mov
lcall
mov
imul
mov
lods
mov
push
add
push
pop
inc
mov
adc
incl
sub
jmp
sahf
scas
sub
mov
mov
inc
imul
test
add
mov
push
and
aas
popa
fldt
sbb
or
push
mov
xacquire
push
cmpb
movsb
scas
dec
gs
sbb
pop
dec
or
add
scas
add
pop
popa
sbb
pop
adc
xor
lret
insb
lahf
xchg
incb
xchg
test
jne
and
loope
negb
stc
ljmp
into
stos
jne
jl
cmp
xchg
pop
pop
jge
add
or
xor
into
lock
sub
cmp
push
out
setge
jae
adc
pop
xorl
push
frstor
xchg
fldl
cmpsb
scas
cmp
mov
mull
and
xchg
insb
je
mov
sub
inc
sub
arpl
sbb
jne
andb
sbb
or
pop
inc
push
inc
inc
adc
or
pop
pop
mov
push
cmc
pop
loope
into
mov
lods
loop
rorl
mov
daa
add
cmp
mov
scas
insb
scas
add
mov
arpl
xchg
xor
mov
test
enter
mov
add
cwtl
in
push
and
jle
popf
or
xor
and
rorb
in
lods
aas
dec
push
dec
adc
inc
or
mov
mov
jle
sbbb
ret
mov
adc
stc
dec
psubusb
iret
or
jo
sub
inc
and
cmc
stos
loope
push
ljmp
aam
xlat
andb
daa
cmp
shlb
out
rclb
lret
leave
jecxz
mov
sub
push
sysenter
cmpsb
mov
sbb
subl
insb
jp
loopne
in
xchg
out
lock
xlat
xchg
and
push
and
jo
push
in
add
mov
xchg
inc
pop
movsl
sub
lret
test
ss
inc
cmp
mov
loopne
lds
jno
adc
or
test
pop
sbb
js
sub
iret
cmc
xchg
or
movsb
testl
lret
jg
ljmp
insb
mov
mov
adc
add
movsb
or
popf
mov
push
aad
add
fs
xlat
rolb
sub
fsubp
jmp
adc
cs
sbb
adcl
pushf
adc
mov
outsb
jne
sbb
movsl
adc
out
je
cmp
dec
mov
pusha
or
pop
dec
add
mov
mov
add
mov
outsb
js
xchg
ljmp
jb
mov
push
clc
mov
pop
adc
shrb
cmp
icebp
mov
rol
ds
mov
test
test
lahf
and
lret
sbb
jmp
xor
adc
jmp
inc
rcll
fbld
and
inc
cmp
pop
stos
aas
lahf
push
mov
and
sbb
xchg
ficompl
fsubs
jmp
scas
pop
sahf
mov
sarl
lahf
bound
or
mov
sbb
jnp
loope
bound
mov
lock
decl
add
dec
ljmp
sub
xchg
push
jb
fistl
pop
add
fmul
adc
sub
js,pn
or
cmpl
xor
pop
scas
popf
push
mov
les
pop
pusha
push
fbld
addr16
pusha
scas
cld
popl
xchg
adc
cltd
inc
or
popa
imul
dec
test
or
mov
pop
insb
xor
push
bound
inc
mov
push
popf
xchg
arpl
jb
loop
mov
out
cmp
test
mov
popf
adc
adc
inc
jle
enter
pushf
es
pushl
hlt
adc
popf
mov
pop
call
sbb
call
mov
add
jne
xchg
cmp
adc
in
mov
jae
cmpl
adc
dec
lds
out
add
push
jbe
inc
dec
push
nop
stos
loope
push
mov
clc
and
jns
sti
mov
pop
add
dec
inc
loop
fsubp
adc
fsubp
shll
subb
mov
push
fldl
clc
mov
push
sbb
dec
subb
lcall
mov
inc
or
fdivrs
push
mov
xor
stc
nop/reserved
cmp
ja
lods
clc
hlt
pop
and
sub
mov
sbb
sbb
lret
idivl
ljmp
jecxz
sub
jle
mov
das
jmp
cltd
lea
xchg
movsb
xorl
movsl
fiaddl
xchg
jmp
xchg
pop
mov
or
adc
aas
mov
ds
jg
push
jo
imul
cmp
dec
cs
cmp
push
xor
test
fildl
sub
and
pop
adc
stos
mov
jecxz
iret
push
jo
mov
scas
icebp
shlb
push
aas
je
movsl
jne
dec
das
cmpsb
std
insb
adc
mul
int3
push
sbb
loope
loop
pop
mov
jno
lods
adc
or
xchg
cmp
movb
mov
pop
jp
sbb
test
jo
ss
push
fmuls
ss
dec
xor
mov
cld
outsb
jnp
and
mov
ja
jecxz
or
std
sahf
or
mov
inc
pop
mov
inc
jg
pushf
pusha
push
lods
pusha
mov
arpl
imul
fldcw
mov
lcall
ret
stos
and
out
into
jl
mov
mov
in
mov
add
repz
push
xchg
aam
outsb
adc
push
jl
dec
jp
mov
pop
decb
imul
leave
sbb
into
mov
fisttpl
mov
xchg
adc
jne
popl
inc
sbb
sub
testb
jecxz
jge
out
push
inc
in
mov
hlt
aam
mov
mov
cs
fsubrs
loopne
les
lock
and
sub
movsb
lahf
xor
lods
inc
cwtl
push
cmpsl
fcomp
push
sub
dec
xchg
hlt
dec
mov
js
push
in
int
out
loop
or
inc
push
mov
sub
jg
mov
cmc
push
lods
les
push
ret
mov
rolb
insb
inc
outsl
ljmp
sti
pop
or
pusha
dec
inc
iret
cli
dec
mov
dec
cmp
add
hlt
sub
xchg
mov
adc
inc
addl
int3
into
and
ds
pop
xchg
out
jb
xor
clc
mov
test
push
aam
mov
cli
inc
cld
jmp
xor
hlt
shrl
insb
stos
mov
mov
jbe
pusha
gs
inc
cwtl
mov
pop
aaa
lret
xor
imul
or
push
imul
shrl
push
popf
aam
es
dec
jl
pop
mov
inc
adc
sub
push
testb
mov
dec
scas
mov
out
sbb
in
test
push
and
outsl
push
sub
jb
or
stc
or
cmpl
sbb
ds
test
add
mov
adc
les
cwtl
rorb
inc
xchg
inc
ficompl
mov
cld
icebp
xchg
jg
adcl
out
stos
cmpsl
outsb
inc
ret
test
lods
push
xor
lea
sbb
and
dec
movsb
sar
popa
enter
scas
lds
pop
or
ljmp
mov
or
popf
inc
sbb
orb
pop
jmp
pop
xchg
add
adc
sbbb
cmp
and
outsb
jne
mov
or
rorb
dec
xchg
cwtl
add
cmc
je
jle
call
push
enter
addr16
lahf
inc
push
add
add
jl
inc
fbstp
lcall
sbb
aam
sub
and
xor
sbb
loope
shr
gs
call
mov
add
xchg
mov
daa
adc
mov
clc
pop
dec
lcall
mov
lret
sbb
xor
ljmp
mov
fadds
lret
cmpsb
clc
pop
lods
les
jecxz
and
rcll
jno
imulb
rcrb
mov
fcmovbe
mov
jmp
inc
or
xor
and
daa
and
mov
push
int
outsl
jns
pusha
loopne
pop
lock
xor
or
ret
clc
and
int
mov
adc
inc
add
repz
mov
sbb
jecxz
test
sub
sbb
fldcw
inc
pop
in
cmpsb
push
mov
xor
mov
jle
incb
inc
ja
adc
and
insb
adc
ljmp
sub
insl
js
mov
xchg
andl
clc
test
sub
aas
mov
pop
pop
inc
dec
pop
cwtl
dec
xchg
mov
pop
mov
xor
rol
mov
adc
cmc
add
lea
sub
cmp
xor
and
out
sbb
lahf
adc
rol
int
ret
sbb
dec
shlb
jbe
imul
adc
mov
sub
adc
js
je
lea
and
scas
popa
loopne
inc
mov
cmpsl
loope
adc
ja
sub
dec
inc
js
fs
mov
cmc
lock
test
push
jno
xchg
xchg
mov
jecxz
loop
inc
loop
push
mov
dec
pop
and
jb
int
je
adc
flds
cmpsl
je
pop
jmp
cmp
gs
and
fmuls
in
rorb
xchg
enter
mov
dec
pop
ljmp
lock
aaa
or
pop
rclb
mov
scas
mov
jl
js
mov
imul
push
xchg
xchg
inc
shl
loope
js
movsb
mov
jp
xchg
je,pt
sub
mov
jnp
jle
push
xor
dec
dec
ss
in
add
push
cld
sbb
and
add
xor
cmpsb
sub
xor
pop
ss
lcall
movsb
sbb
sub
pop
loopne
dec
jl
cmc
push
mov
mov
icebp
sbb
gs
mov
fs
loope
pop
popf
js
imulb
clc
icebp
lahf
jmp
test
xchg
cmc
pop
stc
es
pusha
inc
dec
cli
hlt
and
fcoms
push
jne
mov
imul
inc
std
push
decb
rol
or
dec
pop
dec
jmp
data16
testb
sub
aaa
pop
shrb
popa
out
adc
and
pop
mov
popa
test
pop
jno
loop
loope
cmpsb
sarl
das
sub
mov
mov
pop
pop
mov
xchg
push
shrb
xchg
mov
ret
mov
ficomps
cwtl
inc
mov
test
jmp
in
jl
sbb
cmp
stos
subl
movsb
sub
jp
sbb
adc
jmp
imul
cltd
pop
cmp
pop
mov
pop
incl
xor
xchg
adc
pop
pop
enter
lahf
cmpsb
out
shll
test
pop
and
inc
fldl
aad
rclb
jmp
call
ficompl
xor
xchg
jp
test
fadd
dec
mov
xchg
xor
fnstenv
mov
sbb
js,pn
and
push
es
lock
cld
jmp
mov
lock
mov
clc
imul
jl
pop
pop
dec
js
fs
sub
aas
mov
pop
jae
aaa
add
mov
adc
stos
jae
bnd
or
mov
out
mov
aam
dec
inc
inc
adc
movsl
dec
mov
rclb
jecxz
push
adc
xlat
loop
jg
ret
int
cmc
loopne
pop
push
call
sbb
jmp
outsb
jge
push
and
insb
mov
xor
and
mov
popa
pop
insb
push
out
mov
mov
test
cli
inc
stos
inc
or
inc
lahf
inc
sub
mov
fwait
je
cmpsb
cs
scas
ret
lcall
fidivs
cmp
in
push
iret
or
pop
sub
lods
cmp
jmp
add
mov
mov
jae
and
and
sub
pop
popf
mov
or
ljmp
lahf
rclb
xchg
fwait
mov
out
add
iret
cld
ret
pop
xchg
or
icebp
sbb
mov
jnp
icebp
pop
mov
aaa
sbb
add
mov
adc
cmp
repnz
push
into
daa
mov
xor
rorb
xor
movsl
popa
shlb
cwtl
loop
sbb
sahf
sahf
sbb
xor
jmp
cmc
sbb
inc
movsb
adc
jl
mov
pusha
data16
popa
add
and
push
push
add
inc
cld
dec
sbb
cmpsb
orb
push
mov
jno
pop
xchg
addb
scas
imul
fnstcw
xorl
inc
jnp
dec
lret
test
mov
push
inc
loopne
fidivl
jmp
jmp
je
inc
loopne
in
mov
lods
leave
add
scas
bound
push
mov
imul
lods
jo
xchg
add
je
xchg
mov
pop
test
cmpsl
sub
jo
shrb
icebp
data16
jl
cmp
lahf
mov
and
jno
push
push
push
lock
xor
jbe
mov
cmp
mov
jge
mov
add
sahf
jne
pop
adc
loop
pop
cmpsb
mov
popa
adcb
push
clc
push
inc
stos
sbb
ret
or
push
mov
fsubr
xorl
jbe
imul
outsb
stos
sub
jl
sbb
test
lret
es
and
jmp
test
push
les
push
sbb
pop
fimuls
hlt
push
jge
daa
inc
dec
fs
jl
xor
sahf
xor
loop
mov
loop,pt
pop
mov
fimull
sbb
mov
cmpsb
mov
lock
jl
inc
mov
mov
pop
sub
rorl
int3
cltd
in
mov
push
out
or
test
shll
fdivl
push
gs
sub
imul
adc
repz
cmp
mov
xor
jne
add
dec
pusha
loopne,pt
lea
sub
adc
fcompl
adc
and
lock
outsb
sbb
jbe
dec
inc
mov
cli
xchg
mov
pop
jb
fstpl
mov
xchg
sti
cs
cmp
add
pop
js
jg
xor
xchg
inc
fldt
jg
pop
fsubs
out
unpckhps
pop
or
dec
xchg
fs
sbb
aad
xorl
mov
mov
inc
ficoml
cmp
inc
adc
shlb
test
lret
push
push
inc
and
jle
sbb
in
inc
lahf
les
out
rolb
dec
sub
aam
pop
cwtl
push
dec
pop
fisubrs
pop
mov
inc
daa
mov
shlb
or
adc
xchg
loopne
cmp
rclb
andb
leave
adc
fstpt
mov
adc
sub
jg
mov
sbb
js
rolb
cmp
or
mov
popf
or
adc
inc
add
lret
adc
inc
xchg
sbb
outsl
cmp
andl
mov
test
fcompl
mov
clc
xchg
sbb
xor
insl
mov
sub
mov
jmp
sbb
adc
or
hlt
inc
imul
inc
aas
mov
jne
cmp
or
dec
push
mov
addb
nop
cli
pop
or
and
cld
adc
pop
out
mov
push
jge
imul
add
movsl
or
int3
adc
fisttpll
mov
fistpl
dec
mov
and
ret
loop
je
push
cli
xor
pop
jmp
movsb
shl
cmp
fimuls
xchg
pop
cmp
test
mov
pop
inc
dec
loope
jp
mov
jle
xchg
dec
push
in
jg
inc
lahf
sti
sbb
js
mov
ljmp
cmpsb
add
lds
or
sbb
test
inc
frstor
push
ljmp
push
inc
dec
mov
push
xchg
rclb
sub
push
adc
dec
xchg
jp
dec
mov
daa
sbb
mov
mov
aaa
hlt
push
mov
mov
roll
add
jg
leave
adcl
mov
adc
xchg
pop
push
leave
xor
pop
and
roll
cmp
sbb
in
sbb
sub
mov
mov
sbbb
inc
jl
aaa
pop
push
std
lcall
jp
ljmp
or
adc
lret
addb
add
jmp
sub
sub
test
lods
out
dec
and
sub
sbb
bound
sbb
cmp
subb
test
shlb
pop
roll
cs
bound
sahf
and
add
add
push
push
pop
push
sub
jge
pop
fisttps
lock
xchg
js
xor
lods
jmp
shrb
jb
sbb
test
mov
gs
sbb
ja
divb
jge,pn
orb
loopne
pushf
rcrb
add
pop
movsl
jne
xor
stos
add
mov
mov
cmp
cs
data16
push
sub
jmp
xor
or
dec
push
inc
jl
inc
pop
xchg
sbb
out
sbb
pop
push
test
out
or
adc
cwtl
loop
fwait
in
jg
pop
aaa
leave
jns
xor
aaa
mov
je
incl
mov
in
add
adc
cmp
jbe
in
add
xchg
sub
add
je
or
cmp
call
addr16
testb
nop
mov
inc
jae
jle
adcl
mov
xchg
test
push
mov
sarl
test
xchg
aam
lahf
test
rol
mov
push
ljmp
cmp
sbb
cmp
clc
add
movsb
mov
mov
cmp
sub
xor
js
fwait
dec
mov
mov
xchg
loop
clc
pop
mov
pop
mov
xchg
loop
cld
ret
cmpb
or
mov
in
or
sub
pop
mov
decl
enter
into
xor
test
rclb
mov
add
and
xchg
out
cli
cmp
nop
cmp
add
ret
gs
lock
inc
add
stos
lcall
lds
imulb
push
cmp
adc
imul
nop
test
nop
notl
roll
cmc
sbb
or
xchg
adc
xchg
fidivl
mov
fcmovb
and
stos
movsb
xchg
mov
dec
sub
cld
xorb
lahf
xchg
xor
add
ret
aaa
push
mov
test
bound
std
push
lret
jecxz
jnp
xchg
cmp
pop
push
insw
pop
pop
dec
cltd
sbb
je
dec
out
sub
and
lcall
rclb
xor
sub
jle
push
leave
in
jecxz
je
aaa
dec
mov
mov
mov
pop
inc
add
sub
sub
test
inc
rcl
push
in
sub
outsl
cmp
call
lea
or
jnp
jmp
xor
loopne
sub
jne
dec
out
sbb
pop
pop
add
cmp
jno
mov
dec
mov
dec
scas
stos
mov
and
sbb
ds
xlat
inc
inc
xor
or
inc
dec
add
out
test
je
adc
fcomi
fdivp
cli
mov
daa
push
test
outsl
or
push
cmp
inc
inc
jne
test
pushf
data16
add
stos
shll
sub
pop
or
sbb
jge
jae
mov
push
flds
add
push
ss
das
cmp
mov
sub
and
repnz
sbb
mov
ljmp
xor
popf
or
jle
test
in
pop
mov
cs
dec
clc
add
mov
dec
loop
mov
xlat
pop
cmc
or
jecxz
lret
mov
lcall
sub
ret
xchg
cmp
add
fwait
leave
mov
data16
outsl
test
push
push
and
shl
mov
js
push
cmp
lcall
mov
popf
sbb
ficomps
in
jns
push
sbb
sub
xor
fdivp
add
dec
jge
fcmovne
mov
fisttpl
push
fdivrs
adc
mov
mov
xchg
aad
push
cmp
adc
popaw
mov
pushf
and
mov
push
push
mov
popa
push
sbb
mov
je
mov
push
or
fwait
cli
test
popf
lea
adc
nop
popf
fiaddl
adc
mov
fdivl
das
jmp
push
sbb
jmp
in
xor
aam
jl
loope
hlt
je
pavgw
mov
in
call
sub
fbstp
fisttps
sub
mov
cmp
xor
cwtl
lock
inc
mov
xabort
jo
push
add
cld
loope
mov
rcll
js
and
lock
xor
and
pushl
jp
and
xchg
notl
cmp
xor
cli
loope
sbb
jg
pushl
xchg
mov
jg
cli
pusha
stos
xchg
inc
jp
andl
add
mov
lahf
sbb
push
stc
lret
and
xchg
out
cmp
xchg
jl
repz
inc
xor
mov
jbe
mov
xor
pop
mov
add
mov
js
adc
clc
xchg
out
scas
pop
jae
int
pcmpgtd
lock
outsl
js
pop
cmp
and
cmpsl
mov
and
push
les
pop
xchg
and
loop
add
andl
pop
or
out
in
outsb
ret
mov
enter
pop
add
stos
xor
sbb
adc
xchg
mov
sub
data16
add
pop
cmp
test
std
jge
xor
out
lcall
insb
and
and
sub
sbb
rclb
mov
ja
mov
push
cli
es
xchg
shrl
and
call
fiaddl
test
xchg
jae
sub
pop
or
andb
and
repnz
lret
fiadds
pop
out
dec
or
clc
adc
inc
mov
pop
aas
js
cmp
jp
jns
test
incb
clc
pop
popa
jge
jge
es
cmp
movsb
xchg
outsb
int
mov
xor
or
mov
outsl
jge
in
sbb
shlb
push
cmp
movsb
fwait
cld
lods
or
fsubrs
pop
push
dec
imul
cli
inc
push
mov
test
mov
push
icebp
jns
pop
mov
sbb
adc
cli
add
mov
pop
cmp
clc
loop
adc
mov
cmp
hlt
movsl
mov
cld
ljmp
pop
loope
add
mov
in
inc
add
push
and
adc
jb
pop
jo
and
enter
int
jg
push
icebp
inc
pop
outsb
imull
or
fs
je
pop
iret
gs
add
inc
jo
dec
nop
xchg
in
aad
jecxz
or
mov
hlt
repnz
and
push
xchg
pop
jle
pop
or
push
add
lods
push
and
inc
ret
es
and
ret
jne
mov
subb
jmp
scas
xchg
sbbl
dec
fimull
mov
orb
lcall
bound
sbb
jb
or
fld
mov
push
aam
lcall
push
insb
adc
ltr
ljmp
add
add
les
outsl
cld
fistpll
push
adc
adc
lret
fidivrs
cmp
inc
inc
inc
add
movsb
adc
aad
inc
pop
movsb
push
loope
addr16
out
sub
arpl
lock
or
idivl
sub
adcl
je
fsubl
sub
jo
and
inc
ss
pop
jge
ret
xbegin
mov
orb
enter
prefetch
sub
fsubrs
push
jae
pusha
sub
xchg
jno
jmp
clc
stos
gs
jo
xchg
inc
inc
inc
clc
jle
push
mov
loopne
pop
push
or
sub
cli
repnz
inc
pop
adc
xchg
fistl
movsl
xor
outsl
pop
lods
mov
push
or
sub
and
movsb
dec
mov
xor
jg
push
roll
and
dec
dec
or
aas
sbb
int
lcall
push
adc
scas
mov
jnp
addr16
notl
adc
pop
or
push
leave
push
fists
cli
push
ret
fisubs
pop
adc
adc
inc
xlat
lahf
mov
xchg
jb
jb
lea
ret
pushf
in
je
or
lock
outsb
push
push
imul
lods
clc
inc
fiaddl
adc
add
mov
mov
and
lods
xchg
enter
sbb
pop
pop
rcrb
call
cltd
mov
or
xlat
jge
dec
inc
sbb
dec
add
dec
hlt
loope
hlt
sub
adc
es
sub
fsubr
fistpl
mov
ficoml
mov
mov
inc
imul
sub
mov
adc
inc
scas
into
jae
pop
dec
pusha
rcrl
shr
shlb
mov
xchg
shrl
adc
lcall
inc
inc
push
lock
js
inc
push
mov
jle
lods
mov
rorb
or
test
pop
shrb
lret
mov
into
adc
out
jmp
mov
or
adc
inc
or
push
jnp
push
adc
lods
mov
fucom
inc
dec
pop
fs
nop
dec
nop
aad
xchg
jecxz
iret
icebp
pop
and
push
jo
dec
jle
mov
sub
xchg
xorl
lret
add
sarb
les
in
pop
push
jg
mov
or
sbb
jne
clc
pop
dec
push
shrl
js
ss
mov
aam
and
mov
jecxz
adc
jle
and
ret
ret
and
ficompl
mov
inc
loopne
mov
jnp
xor
mov
xchg
mov
div
sub
icebp
dec
mov
or
enter
push
push
push
outsl
cs
test
add
mov
clc
in
jge
test
cmpsb
adc
pop
push
pop
ss
xchg
sub
pop
jg
xor
xor
aaa
jle
loop
xor
and
push
filds
xor
pop
jg
clc
enter
lods
push
je
insb
push
adc
xchg
mov
or
das
mov
pusha
shrl
pop
je
std
cli
hlt
lss
or
cmp
mov
dec
mov
and
pop
jnp
movsb
xor
movsb
aam
cmp
loopne
xchg
mov
fsubs
cmp
lods
test
or
popf
cmc
mov
and
pop
inc
sub
decl
decb
sbb
cld
push
loope
xchg
sbb
aam
ds
mov
shrb
and
mov
add
adc
aas
iret
sbb
push
clc
fwait
lock
push
inc
inc
test
stos
xchg
cs
ret
mov
mov
mov
es
and
and
push
jle
lock
les
test
mov
sub
sub
sub
loope
jo
js
cwtl
dec
int
lcall
loop
loopne
add
xor
and
cld
jmp
aam
jb
push
ja
mov
cmp
add
mov
mov
dec
mov
jp
xor
sbb
lods
or
xor
inc
mov
ljmp
jo
mov
or
incl
adc
adc
jo
fists
pop
xchg
fcoml
lds
pusha
jge
out
ss
and
mov
and
sub
negl
enter
jg
arpl
mov
popa
or
or
mov
push
adc
mov
lock
lret
pushf
pop
mov
xchg
out
mov
cmpl
out
inc
lds
je
outsl
lods
lcall
out
std
add
push
mov
scas
je
or
jl
das
xor
push
cmp
sarl
mov
push
fisttpll
clc
jp
sbb
xor
adc
imul
mov
sarb
das
dec
jl
loop,pt
push
mov
loopne
icebp
jp
push
inc
and
lock
imul
outsb
test
rcrl
mov
push
jmp
pop
fsubl
mov
orb
lock
xor
push
pusha
sbb
test
dec
test
add
nop
out
frstor
loopne
cmc
loop
push
adc
mov
pop
clc
inc
lock
xlat
es
push
and
adc
mov
push
sub
or
or
cli
push
notb
mov
sbb
cwtl
mov
test
sub
jbe
and
mov
xchg
or
mov
adc
movsb
imul
ja
xchg
pop
imul
cmpsb
push
jno
mov
add
dec
cli
and
sub
outsl
adc
xor
push
lcall
or
lds
ret
lock
dec
cmp
lcall
jmp
push
mov
push
xor
loope
test
dec
push
xor
mov
aad
je
inc
inc
cmpb
jae
push
cltd
inc
and
and
and
adc
fwait
clc
mov
aaa
hlt
add
sub
and
repz
lret
adc
and
into
push
pop
and
idivb
inc
outsl
mov
out
movsb
sub
jmp
frstor
push
les
imul
arpl
xchg
inc
daa
test
mov
aaa
call
loop
scas
pop
dec
in
add
out
pop
nop
xchg
cmp
push
lcall
cmp
out
adc
or
cmpsb
add
stos
push
mov
mov
xor
push
fisttps
decb
fisttpl
fidivrs
mov
lea
aam
dec
pop
lock
negl
sbb
test
cmp
mov
stc
fld
jecxz
stc
mov
js
push
or
jae
loopne
sub
add
inc
mov
rcrb
inc
dec
push
sar
add
subl
popa
and
mov
add
rcl
loopne
xchg
sub
inc
lret
push
or
sbb
fldt
incb
lcall
and
xor
addl
jno
jo
lods
or
push
ret
jp
js
lods
sbb
jle
test
daa
jo
iret
push
das
outsl
insb
inc
mov
inc
pop
stos
cmp
pop
mov
push
int3
lock
rcl
add
add
xor
jge
inc
cmp
mov
loope
andb
or
pop
xchg
mov
sub
mov
xor
lahf
jbe
or
xchg
scas
inc
mov
mov
into
and
ss
dec
les
jo
fs
out
xor
mov
and
les
mov
push
je
nop
inc
sub
test
cmp
inc
or
insl
int
mov
and
aas
jge
mov
inc
pusha
cli
in
and
pop
sub
pop
mov
dec
mov
dec
popf
fbstp
inc
hlt
inc
push
insl
rclb
aaa
nop
in
mov
lock
sbbb
adc
lret
cld
cld
data16
mov
mov
scas
rcrb
cmp
mov
inc
inc
sbb
pusha
inc
mov
pop
jp
cmpsb
scas
dec
out
inc
mov
sub
shll
stos
mov
xchg
mov
or
call
push
ss
fs
cmc
daa
mov
movsb
adc
lea
cmp
mov
push
sti
pop
loope
inc
sbb
or
mov
ret
imul
xchg
mov
mov
bound
clc
mov
mov
ds
push
jae
mov
pop
lock
loope
xor
ljmp
bound
or
sbbl
std
jno
dec
pop
pushf
push
lock
cld
push
test
sahf
jbe
sbb
mov
hlt
jg
hlt
loope
sbb
mov
xor
fisttpll
je
lock
adc
xor
mov
cmpsb
lret
add
push
outsb
inc
and
or
test
push
jmp
into
pop
cmpb
movsl
shlb
and
xor
loope
cmc
or
push
leave
loop
add
push
sbb
mull
inc
fs
aam
arpl
mov
xchg
inc
xor
dec
stos
or
jno
cwtl
sub
jb
fstl
mov
dec
jecxz
mov
push
rcrl
push
push
idiv
dec
loope
inc
pop
inc
pop
pop
mov
and
cmpsl
out
or
xchg
xchg
inc
mov
xchg
les
imul
enter
pop
lock
jmp
sahf
dec
xor
scas
lock
xor
xor
push
inc
int3
dec
popf
outsb
rolb
add
mov
sub
adc
lds
lds
test
scas
lods
arpl
jl
and
sub
ficoms
sbb
mov
aas
andl
push
les
cmp
add
data16
daa
std
inc
paddd
mov
bound
in
mov
je
lret
xor
clc
fiaddl
cmp
jle
repz
out
jbe
xchg
push
fwait
cli
cmpsb
out
js
rcrl
adc
movsb
in
orl
ret
inc
sbb
data16
loop
lea
lods
or
in
and
or
pop
inc
or
push
mov
pushf
sbb
adc
cld
lock
cmp
aaa
movsb
ret
push
cmp
sub
or
insb
mov
add
or
push
add
ret
mov
sbb
into
loop
fidivl
add
mov
push
insb
mov
repnz
test
sub
ds
jb
and
mov
popa
pop
jo
jge
cmp
add
dec
lods
jle
aas
clc
stos
bound
lock
and
cmp
adc
dec
mov
push
fcoms
pop
outsb
fmuls
adc
rcrb
or
lret
sti
clc
jg
stos
mov
mov
aas
sbbb
or
dec
mov
mov
imul
inc
push
jmp
ljmp
pusha
ds
lods
and
pop
rol
sahf
cmp
inc
push
adc
faddl
scas
cld
aad
out
cmp
cltd
shll
je
movsl
mov
int3
mov
inc
fstps
iret
push
lods
cmp
inc
add
and
jns
loopne
popf
add
outsl
movsb
mov
dec
fdivrl
adc
les
les
imul
xchg
xchg
and
jl
movsb
lret
mov
push
popf
ljmp
pop
sub
insl
je
in
mov
and
pop
adc
test
push
adc
mov
and
das
shl
test
sub
or
ffree
mov
pop
xchg
xchg
or
jl
pop
inc
subb
mov
sbb
cli
jmp
add
inc
mov
xor
cli
clc
imul
and
jecxz
add
into
call
sub
push
ja
xchg
adc
lods
pop
je
dec
and
nop
lock
add
nop
js
and
jbe
icebp
pushl
mov
dec
push
leave
pop
cmp
sbb
push
iret
sub
dec
daa
mov
inc
orb
rclb
sbb
push
xlat
push
andb
out
in
loope
and
insb
cmc
test
jne
xor
sub
inc
mov
ds
pop
add
adc
jg
in
aaa
push
popa
dec
add
jno
inc
pusha
or
mov
mov
push
test
testb
jbe
mov
push
out
or
add
or
loopne
fldt
mov
fisubrl
adc
and
dec
sub
call
je
ret
adc
shll
rcl
add
lahf
push
test
fisubl
fistl
in
push
and
xchg
jno
push
js
fsubl
or
push
mov
push
push
jnp
test
xchg
add
xchg
je
mov
xorl
dec
mov
adcl
dec
movsb
push
cmp
and
dec
inc
xlat
mov
jb
mov
sti
int3
cmp
mov
les
and
in
push
jo
xchg
loope
sete
stos
and
push
xor
rorb
xchg
testb
inc
test
repnz
ljmp
test
jp
dec
dec
or
xor
xchg
adc
rorb
mov
popa
add
pop
loope
lcall
inc
sahf
sti
sub
adc
mov
add
pop
push
lock
adc
dec
xlat
daa
jecxz
jmp
jp
add
negb
jo
shl
push
sbbb
js
je
outsb
sbb
pop
mov
cmc
ret
arpl
dec
mov
scas
or
xchg
ljmp
jmp
fwait
test
cld
xchg
loopne
sub
pop
xor
mov
decb
nop
bound
pusha
addl
pop
push
add
pop
xor
jp
aad
pop
dec
mov
dec
xchg
lods
push
insb
xchg
xchg
cli
imul
mov
repz
lcall
adc
push
hlt
repnz
push
mov
mov
add
add
jecxz
sbb
mov
inc
in
ret
cs
mov
gs
cmpsl
mov
repnz
jg
mov
mov
push
jmp
orb
ds
imull
dec
sbb
xor
dec
fdivr
dec
mov
dec
push
test
rcl
pop
aam
ffree
mov
or
lea
repz
mov
inc
sub
jo
mov
mov
push
movsl
bound
mov
or
lahf
kxnorw
xchg
mov
mov
sbb
rcrb
in
mov
cmp
lcall
ja
movsl
repnz
icebp
add
or
outsb
mov
orl
ja
adc
or
sarb
stos
stc
push
xor
roll
in
iret
xor
mov
mov
outsb
mov
adc
imul
rorl
popa
mov
push
fiadds
xchg
xor
imul
les
out
mov
push
jno
jmp
sbb
roll
mov
pop
pop
push
sub
pusha
mov
dec
jl
les
add
shl
dec
sub
loope
sbb
push
mov
dec
mov
out
adcb
pop
mov
sbbb
rorl
fcmove
fisubrl
dec
les
or
push
fdiv
outsl
sbb
sub
jbe
xor
les
roll
inc
cmp
je
in
push
mov
pop
cmpl
faddl
fcmovne
jmp
lcall
pop
mov
mov
dec
loope
in
add
ljmp
or
jno
mov
jo
jecxz
push
ss
mov
or
fs
inc
xor
nop
and
pusha
std
nop
knotw
dec
nop
les
xlat
dec
xchg
jp
add
cmpsb
and
and
push
cmpsl
dec
push
add
js
push
jecxz
pop
fldl
push
mulb
pop
dec
insl
and
cmpsb
lds
add
push
test
inc
and
and
arpl
sub
inc
in
jns
and
scas
out
dec
push
sub
inc
stos
fs
loope
out
out
int
in
pop
gs
or
xor
daa
sbb
out
sub
xor
ret
xchg
loop
icebp
sti
or
inc
fldl
jo
test
jmp
push
rorl
xchg
aam
inc
and
or
data16
movsb
cmpsl
decl
push
push
pop
in
jp
jbe
jne
and
push
stos
xchg
mov
cwtl
ds
cli
pop
testb
mov
lods
lret
xchg
adc
sub
js
sbb
sbbb
lods
aad
xchg
sub
stos
xlat
mov
cmpsb
stos
mov
aam
push
lods
sbb
add
xchg
outsb
imul
dec
jns
repz
out
out
ror
add
test
jp
push
pusha
and
enter
in
arpl
pop
test
cmp
addr16
cld
sub
mov
push
fildll
fcompl
add
les
or
ljmp
dec
xchg
cmovge
or
loopne
test
pop
sbb
push
xor
sbb
push
mov
cmpsl
ss
mov
test
pop
repz
add
subb
mov
push
sub
movsb
dec
je
sbb
pushf
dec
inc
aas
xchg
in
push
mov
push
mov
mov
jl
shrb
cwtl
mov
sbb
mov
pop
xchg
dec
stos
push
push
sbb
push
fdivrl
pop
cltd
js
sub
dec
adc
or
push
cmp
clc
fsubrs
cld
fisubl
in
pusha
imul
lock
pop
add
or
inc
add
or
pusha
cmp
out
and
inc
and
sar
cmpsl
mov
aam
cmovg
or
adc
leave
shll
add
sub
inc
mov
pop
sahf
mov
add
pop
cli
cmc
fwait
rclb
test
push
pop
cmpsl
je
test
inc
ljmp
movsb
add
or
and
fstpt
push
push
std
vmovlps
cmp
aam
aas
test
shl
andb
push
movsb
mov
clc
subl
pop
es
test
fisubrl
jle
cmp
push
fs
inc
aad
or
lret
pop
inc
je
mov
mov
cmpsb
les
aaa
mov
orb
adc
pop
enter
icebp
call
mov
out
adc
xchg
cld
call
out
test
cmp
std
jle
push
dec
xchg
mov
jp
add
xchg
xchg
jp
aas
add
xor
out
andl
pmuludq
mov
push
push
pusha
mov
dec
dec
adc
roll
dec
ret
inc
mov
inc
cmp
pusha
sbb
cmp
dec
or
ja
sub
xlat
aad
lahf
cmc
or
outsl
and
mov
xor
mov
insb
mov
mov
sub
dec
out
cmovae
add
sbbb
sub
enter
pop
cmp
imul
in
xchg
sub
jno
call
xor
outsl
scas
mov
jae
neg
ret
or
fs
pop
cmp
mov
js
adc
fs
in
pop
adc
ds
fcoms
and
lahf
cmpsl
add
pop
and
xor
adc
sub
jge
js
jle
xor
rol
es
inc
push
xor
mov
aaa
jb
pop
lock
test
lods
mov
xor
or
and
aaa
shl
xor
jl
mov
add
xchg
mov
pop
loop
cwtl
or
test
subl
stos
or
sub
and
rclb
ret
test
pop
in
fiaddl
iret
mov
xchg
dec
xor
cli
pop
clc
and
lret
addr16
std
or
xor
mov
jg
popa
loope
mov
cwtl
mov
nop
aam
jns
aaa
add
inc
fdivs
sub
cmp
mov
in
pop
cmp
mov
pop
mov
movsb
je
push
clc
jb
mov
push
pop
xchg
pop
mov
jo
iret
loope
stos
pop
dec
jo
nop
negb
fdivs
and
cs
mov
mov
cmpsb
jle
cmpb
les
xor
pop
dec
add
jg
mov
and
sbb
les
or
popa
in
sub
push
rorl
mov
cmpsb
push
pop
push
mov
push
jg
jge
pop
fstpt
mov
nop
push
les
cmp
push
push
loope
loopne
test
dec
mov
ljmp
add
inc
push
ljmp
pop
adc
jne
mov
lods
pushw
fcmovu
mov
cmp
pop
stc
xor
sub
adc
hlt
and
and
and
clc
or
xchg
add
sbb
rcll
inc
add
jg
jg
adc
cmp
add
xchg
scas
cmp
fsubl
arpl
jae
pop
loop
movb
jnp
imul
xor
push
pop
aam
xchg
hlt
inc
ret
xchg
mov
es
mov
inc
push
lock
ss
adc
inc
mov
sahf
add
push
sbb
push
jl
aas
cmp
mov
push
sbb
clts
inc
fldt
in
push
cmp
movsl
rcl
stos
adc
sub
stos
lods
das
arpl
out
arpl
gs
and
lret
push
or
sbb
xchg
sbb
into
inc
mov
enter
inc
or
cmpsl
test
nop
cmp
popf
inc
cli
sahf
stos
xchg
ljmp
mov
adc
nop
in
or
pop
xor
sbb
xchg
insl
fcoml
imul
xchg
ljmp
das
dec
insl
inc
mov
out
roll
sub
int
mov
sahf
jb
pop
push
cld
push
or
icebp
fisubrl
xchg
lods
rorl
adc
roll
cld
in
cli
dec
jl
rorb
dec
lea
push
rolb
mov
mov
mulb
mov
add
xor
push
mov
jge
dec
push
dec
mov
cs
mov
cmp
cmp
int3
or
push
data16
scas
mov
dec
jns
push
aaa
pop
scas
and
sets
inc
pop
insb
xchg
imul
cmp
dec
ret
stos
jnp
add
cs
mov
adc
ljmp
push
mov
fwait
pop
pop
icebp
mov
inc
jbe
mov
shlb
sbb
jnp
push
lret
sub
cmpsl
inc
movsl
lret
adc
in
xchg
sub
loop
or
andb
cmpsl
xchg
aas
imul
dec
nop
cli
pop
mov
fs
jp
or
into
inc
sub
insl
xchg
je
mov
fidivrl
xor
push
cmpl
addr16
dec
ret
add
mov
lcall
lea
push
sbb
mov
or
xchg
dec
or
mov
inc
dec
jbe
adcb
and
xchg
fimuls
dec
lods
daa
js
adc
or
cmpsl
ds
push
es
xorb
mov
imul
lods
fisttpll
sbb
jbe
mov
add
and
mov
cmp
fildll
popf
insb
lock
xchg
inc
mov
xor
mov
mov
jl
sbb
push
jne
sub
and
fmulp
push
pusha
sub
sarb
fwait
popf
sbb
push
fmuls
stc
adc
inc
sbb
gs
push
mov
push
das
dec
jge
pusha
sti
loope
cmpsb
or
cld
jp
popa
int
or
lds
mov
jmp
add
jmp
xchg
sbb
add
test
mov
call
pop
hlt
bound
insl
lcall
and
rorb
test
mov
je
mov
pusha
mov
fsubrl
ret
jmp
add
cmpsb
mov
lock
mov
dec
push
cmp
mov
xchg
dec
out
add
push
push
cmc
in
dec
subb
loop
jb
rclb
lea
adc
xor
pandn
movb
adc
and
aad
out
add
or
sub
adc
lret
lcall
mov
xor
test
jle
mov
jge
pop
adc
mov
hlt
inc
cmp
js
xchg
es
out
jne
jecxz
push
insb
jecxz
lret
call
sub
pop
sbb
lock
mov
std
add
aaa
xlat
dec
outsb
inc
jae
sbb
push
in
mov
sahf
mov
xchg
xchg
sarb
mov
pop
adc
mov
mov
mov
cmp
div
scas
scas
jbe
lods
pop
int
cmc
add
or
mov
lea
rolb
mov
bound
popf
cmp
mov
movsb
xor
pusha
cltd
rclb
add
mov
push
in
je
aas
or
xchg
inc
jl
cmp
and
lea
fsub
sbbl
insb
icebp
je
mov
rorb
sbb
inc
dec
mov
fwait
pop
loope
outsl
xor
iret
push
inc
psubb
pusha
pop
mov
pop
sbb
dec
sti
lret
call
adc
add
shl
js
lea
and
shlb
dec
insl
je
adc
mov
jecxz
shlb
ljmp
ds
and
rolb
add
das
cs
push
outsb
test
mov
sbb
cmp
cmc
adc
or
jle
das
adc
push
inc
mov
cmp
dec
scas
xor
cmp
inc
loopne
sarb
add
cli
dec
mov
mov
hlt
cmpsb
or
xor
ret
sahf
or
push
cs
je
push
cmp
push
les
sub
cld
mov
lods
dec
pop
fildl
addr16
jmp
jno
popf
mov
xor
jns
aaa
int3
cli
lahf
cmp
xchg
out
mov
pop
pop
faddl
inc
sub
dec
jl
and
mov
mov
adc
lcall
jae
icebp
test
pop
mov
or
es
push
mov
mov
cli
fs
cli
mov
stos
cmp
scas
sub
cmpsb
insl
ret
mov
bound
add
ficompl
scas
dec
ss
insb
std
cmc
dec
and
test
mov
scas
lods
push
mov
aaa
bound
push
sbb
rcll
mov
jl
adc
jmp
jmp
rorb
das
jno
xchg
pop
sahf
add
out
mov
cmpsb
sub
fld
mov
add
sub
std
insb
in
out
fwait
jno
arpl
cmp
cmp
cmpsb
inc
xchg
lret
pop
push
in
sub
imul
loopne
push
sbb
inc
movl
push
ja
divb
pop
mov
adc
inc
pop
cmp
lcall
pop
inc
mov
subl
ret
nopl
cli
push
xchg
xor
xchg
mov
jb
pop
fsts
jns
push
stos
outsl
dec
or
fstpt
inc
das
sub
and
pop
cmp
hlt
xchg
xor
hlt
jno
cmpl
and
jb
subb
add
add
popa
clc
dec
or
pusha
loop
mov
push
dec
and
sub
testb
mov
call
mulb
xchg
mov
and
stc
leave
dec
or
stos
outsl
jbe
jnp
mov
or
sbb
xor
add
mov
push
aam
jecxz
mov
incb
pop
push
sub
sbb
add
mov
pop
dec
cli
add
ror
std
and
stc
jae
in
pop
loop
jmp
push
jbe
pop
je,pt
push
add
inc
inc
adc
add
push
or
loop
sbb
cli
xor
cmp
and
sti
test
sub
repz
test
je
movsl
cmpb
jnp
rcr
jo
cmp
pop
xchg
sbb
insl
push
jnp
adc
mov
in
mov
pusha
out
mov
jle
jg
loope
lock
jle
sub
movb
xor
sub
ret
rcrl
mov
and
xor
jne
add
xchg
jl
fstl
cmp
and
ljmp
ja
test
insl
sbb
rclb
adc
jle
cmp
mov
add
test
adc
aam
test
inc
push
xor
mov
jnp
lods
fwait
adc
adc
leave
lods
movsb
in
cltd
clc
clc
xchg
loop
lock
add
ljmp
xor
dec
fisttpl
adc
movsl
inc
or
push
clc
jb
adc
aad
je
or
push
mov
mov
hlt
test
je
pop
out
dec
and
xor
fisubrl
push
jle
aam
inc
dec
mov
mov
test
jae
fwait
call
jmp
hlt
dec
sub
nop
pop
iret
adc
pop
insb
lods
push
popa
or
out
insb
cmpsb
xor
mov
dec
addl
lcall
jno
pusha
mov
mov
jp
fiadds
cmp
ja
lods
pop
xor
mov
pop
or
cmc
sti
adc
out
aad
pop
shll
shrl
insb
dec
sbb
mov
mov
pop
fdivl
test
or
xor
int
notb
iret
sub
sub
inc
inc
jecxz
into
mov
scas
cwtl
ljmp
out
das
and
cmp
jns
add
push
sub
mov
je
fldenv
bound
andb
test
addr16
mov
cmp
dec
outsl
jno
push
aaa
mov
or
lods
rol
es
cmp
sbb
rol
test
daa
cmp
lods
popf
sbb
call
js
je
add
sbb
popf
iret
adc
pushf
addb
push
leave
lds
in
adc
mov
add
scas
aad
sub
mov
pop
cs
dec
ljmp
aad
cmp
aad
test
fstl
jge
xchg
nop
cwtl
in
mov
pop
pop
sbb
mov
or
movsb
ret
rcrb
push
sbb
enter
daa
test
outsb
mov
stc
push
test
cmc
mov
mov
jp
andb
pop
ret
outsb
mov
aaa
or
loope
mov
mov
or
xor
and
rorb
in
loopne
adc
popa
fistps
dec
ret
cmpsb
jb
inc
adcl
outsl
jbe
pop
jg
dec
adc
gs
sahf
mov
outsl
xor
mov
or
das
imul
mov
xor
jae
or
out
pop
insb
pop
pop
mov
cmp
iret
es
mov
sub
jecxz
lahf
scas
outsb
btc
jge
mov
xchg
push
pop
cs
pop
sub
lret
insb
or
cmpsl
pandn
fucomp
jp
shll
or
sbb
das
je
mov
nop
jmp
mov
adc
test
push
jns
mov
shl
cmc
ss
loope
and
jnp
cs
fwait
cmpsb
push
dec
pop
sbb
movsl
and
outsb
adc
pop
jle
pop
or
mov
gs
push
pop
inc
or
mov
nop
jmp
mov
push
jae
test
mov
adc
rcl
out
scas
sub
cmpsb
push
loopne
push
mov
inc
test
js
pmaddwd
jne
cmpsb
xor
adc
cmp
pop
loopne
adc
movsl
cmp
inc
shrl
in
cmpb
xor
hlt
adc
outsl
jns
sbb
cmp
push
add
in
insb
xorb
push
hlt
ficomps
fcmovb
repnz
mov
or
add
or
clc
mov
ret
int
movsl
and
movsl
stos
addr16
pop
mov
repz
sub
mov
xchg
add
cmp
push
outsb
dec
xchg
in
call
jns
push
mov
or
jl
push
in
or
sub
loopne
jo
inc
dec
add
xor
loope
insb
push
or
test
fdivrp
out
add
pusha
stos
jmp
aam
jne
cmp
mov
call
mov
inc
outsb
pop
lcall
out
repz
push
pop
cmp
or
test
push
xchg
lods
test
cmp
mov
shl
cmp
dec
cmp
mov
ret
jge
stc
test
or
push
inc
mov
cmpsl
sub
or
mov
mov
mov
pushf
aad
sbb
in
pop
adc
outsb
mov
mov
xchg
mov
lods
lock
mov
xlat
mov
and
inc
jnp
push
sbb
ja
rolb
xchg
jno
jecxz
movsl
adc
imul
push
mov
mov
divl
dec
mov
repz
push
inc
daa
dec
out
fidivl
daa
movsb
adc
push
push
or
insl
hlt
xchg
sbb
jae
mov
fcomps
test
push
imull
lret
leave
out
loopne
and
push
jo
dec
sbb
and
mov
pop
int
mov
add
cmp
sbb
mov
pop
clc
sarb
or
shl
lret
mov
stc
add
lock
jo
ss
mov
xchg
pop
imul
in
pop
aaa
push
loopne
xor
std
pop
out
sbb
push
arpl
imul
add
hlt
loope
dec
ret
or
push
cmp
sbb
push
mov
and
insb
loop
jbe
xchg
rcll
add
xchg
jmp
mov
or
adc
xchg
cwtl
mov
aaa
jmp
daa
sub
sub
jne
inc
pop
addr16
sarb
pop
arpl
or
mov
and
pop
frstor
bound
imul
add
jmp
ljmp
xorl
loopne
sbb
mov
or
cmpb
xorb
repz
ss
lea
aas
pop
jno
xchg
jo
jecxz
cmc
roll
sub
and
sub
and
inc
lods
or
in
sbb
adc
inc
repnz
int3
cs
push
jbe
pop
addr16
push
lods
imul
lcall
add
outsb
lds
out
xchg
inc
adc
mov
mov
imul
xor
test
mov
loopne
pop
xor
mov
dec
lea
jnp
repz
inc
bndldx
dec
mov
ficompl
xchg
xchg
adc
jo
xorb
or
sti
jecxz
in
hlt
test
xchg
popa
inc
xchg
mov
pop
inc
jnp
lock
imul
push
gs
xor
xor
mov
in
and
xchg
adc
ja
pop
ljmp
or
test
xor
cmpsb
loopne
das
push
ret
fwait
pop
jp
jge
adc
sbb
or
test
mov
std
arpl
push
sub
and
call
push
rorl
stos
lods
push
cmc
rolb
jnp
mov
mov
pop
jb
idivl
add
jb
orl
or
test
shlb
sbb
mov
aas
sub
xchg
jg
fs
popf
cmp
jo
sbb
mov
je
inc
cmpsl
test
pop
rcpps
shll
js
call
mov
imul
ljmp
jle
mov
add
xchg
inc
cmp
and
pop
pop
cs
xchg
sbb
xorb
push
xchg
rcrl
pop
sbb
loopne
cmpsl
sub
pop
jecxz
fisttps
xor
pop
jbe
add
in
aad
push
jp
mov
mov
mov
xor
mov
jne
movsl
ffreep
jb
mov
loopne
push
xor
or
pop
mov
push
in
mov
pop
jns
arpl
sbb
inc
sbb
dec
daa
push
mov
jae
rdmsr
fld
pop
adc
sbb
cli
ret
dec
xor
loope
xor
movsl
sbb
stc
fs
clc
add
sbb
imul
scas
orl
adc
inc
xor
jne
cmc
mov
xchg
test
es
mov
jmp
cmp
xchg
xlat
mov
inc
jns
fsubrs
add
adc
insb
subl
cwtl
fcoms
mov
lea
aam
aas
movl
enter
jp
ret
mov
lods
xchg
popf
sbb
cmp
add
jle
addr16
xchg
sub
in
mov
lock
popa
mov
icebp
ret
and
xchg
or
stos
and
fisttpl
and
dec
adcb
in
lods
jmp
and
inc
inc
pop
rorl
inc
stos
inc
cmp
int
dec
rorl
idivb
popf
bound
sbb
loopne
outsl
pop
notb
imul
mov
pop
mov
and
xor
call
jmp
add
mov
es
xor
movsb
hlt
jecxz
mov
xchg
lea
mov
and
cmp
mov
add
nop
add
outsb
pop
in
jecxz
and
inc
jb
stos
xorl
out
das
js
std
adc
hlt
popa
pop
adc
insb
ret
jb
mov
mov
mov
out
lret
xchg
mov
sahf
lock
insb
cmp
sub
daa
ds
xchg
loop
cmp
push
loope
call
stos
sarb
push
and
daa
cmpsb
hlt
mov
adc
jae
shll
mov
cli
push
pop
and
les
jle
pop
xchg
inc
pop
mov
push
add
jne
jg
mov
push
mov
out
mov
add
xor
bound
test
mov
pop
roll
nop
shrl
sbb
popf
cmp
jg
jno
jnp
fwait
in
addr16
pop
adc
mov
push
or
inc
popf
stc
nop
lods
adc
mov
rorl
das
xor
dec
clc
push
movsl
je
pop
mov
jmp
push
jne
xor
or
xlat
pop
mov
mov
adc
jp
rolb
clc
lods
popf
lock
addr16
fisttpll
lahf
sbb
adc
xchg
xor
movsb
je
setns
jge
or
and
mov
adc
int3
in
and
xchg
lock
ss
test
mov
mov
fdivrs
aad
add
call
out
enter
fs
add
add
ja
xchg
stos
lea
adc
mov
cmp
cmpsl
addr16
jne
mov
cmp
mov
cmp
jmp
bound
dec
mov
aad
test
es
test
push
sub
and
in
mov
inc
pushf
xor
ret
aaa
mov
sahf
xchg
sbbl
push
xor
ljmp
test
cmpb
lds
shlb
mov
dec
lods
fnstenv
inc
cmp
aam
push
mov
push
addr16
sbb
pop
xlat
mov
pop
jle
adc
fadds
xlat
popf
cmp
dec
pop
xchg
dec
xor
jecxz
cmpb
lds
lea
dec
sbb
cmp
stos
push
nop
sbb
jnp
out
jecxz
loop
paddb
lock
mov
xlat
or
scas
adc
sub
imul
mov
dec
and
jge
nop
sbb
mov
fsubs
jp
aam
pop
cmpsb
dec
mov
push
mov
bound
fstl
mov
push
mov
or
and
mov
mov
int3
push
add
aam
mov
pop
sarb
repz
or
sbb
andb
shlb
xchg
jnp
adc
and
and
pop
pop
inc
dec
inc
mov
dec
fsubl
add
cmp
test
sti
and
xor
and
iret
lds
adc
inc
dec
scas
xor
mov
lret
dec
int3
jl
sub
out
xchg
sub
push
dec
xor
mov
sub
jns
js
test
adc
mov
xchg
pop
int
shll
sbb
nop
jge
cmpsb
xor
jae
jmp
dec
inc
call
in
pop
cmpsl
xchg
inc
mov
push
inc
adc
push
dec
and
js
jns
mov
mov
sub
shlb
inc
mov
or
int3
ret
sub
xor
scas
shll
inc
dec
dec
and
out
add
fsubs
rcrb
imul
dec
sbb
add
push
add
sub
jno
pop
ret
mov
shr
push
fimull
push
sbb
lret
fstl
call
inc
enter
pop
call
fisubs
push
mov
mov
jg
repnz
pusha
and
lahf
dec
push
iret
jns
add
push
cli
rcrb
in
jae
push
adcb
inc
mov
pop
imul
insb
test
lods
pop
cmp
push
data16
push
pop
fldt
jb
popa
mov
pop
lods
xor
fsubl
or
movsl
imul
mov
sbb
aaa
fs
or
aad
inc
add
clc
cmpl
std
das
jge
fimull
mov
lcall
push
cmpsb
cmpsb
or
adc
mov
dec
mov
push
sub
push
xorl
push
jl
and
cli
lahf
push
addr16
push
xor
in
aas
add
push
or
scas
adc
ja
or
aaa
and
or
loope
stos
add
shll
dec
jbe
movsl
xchg
dec
nop
incl
popf
mov
xchg
add
and
inc
out
dec
lret
inc
daa
dec
fwait
adc
ret
jbe
jmp
sbb
movsl
ds
mov
dec
aam
cmovnp
cltd
lods
xor
jecxz
lods
cmp
dec
addr16
mov
imul
cs
rcl
test
push
sbb
das
cli
gs
jge
jae
mov
cmpsb
and
and
imull
int3
adc
jg
and
add
push
dec
xor
cmp
mov
push
call
mov
mov
cmpsl
js
dec
lock
mov
rcll
jmp
sub
scas
jecxz
repnz
xchg
aam
ss
data16
and
pop
sti
fstl
jo
mov
mov
sahf
cmp
mov
xorb
mov
out
cmp
addb
inc
std
lret
popa
stos
mov
cmp
cwtl
push
adc
and
cmp
ret
and
outsl
lds
lds
test
mov
dec
int3
and
inc
loopne
ret
mov
test
ljmp
ds
jne
jae
cwtl
adc
pop
mov
rcl
add
dec
repnz
adc
stc
fnstcw
push
mov
dec
and
movsb
inc
pushf
sub
ja
sbb
or
insl
or
jnp
outsl
fst
xchg
xchg
jp
repnz
hlt
push
ret
pusha
insl
popf
push
daa
xor
cwtl
ljmp
inc
stc
ss
mov
stos
rorl
push
lahf
adc
mov
ds
cmpsb
arpl
mov
mov
xor
pop
and
movsb
mov
sbb
setge
cmp
sub
test
pop
push
data16
hlt
jmp
xor
mov
aas
add
xchg
push
imul
adc
scas
fcoml
mov
push
shrl
xor
jno
dec
shll
jl
push
test
sti
xchg
jge
pop
mov
xchg
jb
lahf
adc
dec
subl
aad
dec
cmp
sti
and
inc
add
jbe
fsubl
ret
xchg
inc
mov
push
imul
add
mulb
mov
and
sub
jmp
xor
hlt
aam
add
in
insb
call
mov
jo
ja
jl
out
xchg
sahf
rolb
stc
scas
cmp
rol
test
mov
sub
mov
add
repnz
push
ret
lods
ror
lret
xlat
inc
push
cmovno
xor
add
add
pop
pop
test
rcr
test
sub
add
stos
push
xor
cmp
jae
rcr
push
fsubl
mov
push
bound
enter
and
aas
lret
iret
cli
mov
push
and
inc
push
xor
adc
stos
arpl
pop
rcll
mov
ljmp
cmc
or
sbb
sbb
insl
push
pop
mov
int3
cmc
movsb
nop
xlat
pop
lea
lea
jg
enter
mov
sub
mov
dec
dec
call
out
test
ret
hlt
sbb
push
scas
iret
mov
mov
pop
jmp
cmp
rcrl
adc
in
clc
mov
push
lahf
xor
mov
mov
push
outsb
in
cmp
mov
dec
fdivrl
add
test
fstps
and
xchg
jle
lret
roll
movsb
add
push
aad
adc
adc
pop
xor
sbb
adc
daa
fcomps
push
cmp
out
mov
gs
or
mov
loopne
shll
repz
mov
pushf
insb
and
push
xchg
adc
lret
cmp
and
xchg
js
lods
push
test
xchg
or
push
mov
in
sbb
xchg
mov
sbb
rol
xor
inc
or
jp
adc
cmp
xor
bound
sti
push
icebp
adc
push
repz
mov
add
addb
dec
cmp
hlt
and
roll
xor
adc
mov
inc
push
pusha
fisttpl
mov
loop
xor
cmpsl
push
dec
movsl
ljmp
add
pop
aaa
ror
js
roll
pop
inc
fwait
or
loope
int3
mov
test
mov
aas
mov
jp
inc
pop
out
mov
pop
jno
imul
push
mov
sbb
and
sbb
adc
mov
mov
es
lods
mov
mov
pop
xchg
rorb
out
push
jae
sub
in
sbb
add
leave
insb
shlb
inc
cmp
dec
and
call
jl
xchg
inc
and
inc
xorl
rclb
out
loope
xor
adc
sbb
sahf
push
orb
xor
xorb
stos
mov
mov
mov
push
inc
and
mov
inc
in
icebp
mov
add
and
xchg
lea
inc
or
pushf
jnp
jl
jecxz
mov
inc
jns
pop
stos
dec
les
push
jmp
lods
cmp
mov
cmp
fs
cli
dec
push
mov
fnstsw
addr16
adc
xchg
pop
ss
mov
adcl
mov
adc
dec
test
jmp
sti
push
mov
sub
stos
lret
and
xchg
pop
sub
jl
out
xchg
dec
test
mov
nop
mov
push
mov
push
add
fmuls
lds
rcrl
rorb
lds
rcrb
xor
push
sub
lahf
mov
scas
xor
andb
pop
jmp
popa
fistpl
jne
mov
mov
push
cmc
es
aaa
fcomps
mov
fsub
add
jae
dec
sbb
mov
lods
cmp
cli
pop
xchg
push
pop
shlb
inc
lods
xor
jbe
or
stos
adc
jnp
pop
mov
pop
xor
sti
adc
xor
data16
pop
addl
jbe
js
jmp
jne
rorb
gs
scas
push
mov
or
or
rorb
add
mov
or
jo
jl
or
jae
jle
andps
mov
outsl
mov
push
mov
jne
cltd
jg
or
xchg
call
leave
sbb
and
sub
or
pop
into
sub
out
mov
and
pop
icebp
dec
jg
add
nop
sti
ljmp
flds
gs
pop
xor
mov
clc
cmc
inc
mov
xchg
inc
dec
add
cmp
mov
fdivs
jne
repz
scas
jo
xchg
stos
loope
cmp
mov
xchg
aas
ret
loopne
adc
imul
pop
sbbb
dec
scas
jmp
mov
dec
cmpsb
ja
jl
adcl
insb
and
mov
dec
in
push
push
ljmp
jle
xchg
and
into
cwtl
cs
icebp
cwtl
xchg
addb
xor
imul
jg
mov
loope
push
jg
xchg
scas
ss
cs
lcall
or
rorb
push
push
fsts
or
adc
daa
in
add
je
sub
rolb
xor
cmc
jbe
subl
push
adc
jbe
mov
out
movsb
not
cmpsb
push
movl
xlat
cmp
lcall
call
xchg
dec
imul
rorl
inc
mov
adcl
and
icebp
or
inc
dec
call
mov
cmc
jmp
lds
pop
hlt
push
dec
mov
mov
push
or
repz
xor
or
and
cmp
scas
mov
xchg
mov
mov
adc
jl
cmpsl
out
bound
mov
xlat
aaa
xchg
fiadds
mov
mov
lret
push
xchg
and
pop
adc
pushf
pop
popa
lahf
cs
aas
sub
lock
sbb
pop
cmpl
js
cmc
mov
mov
and
testb
xchg
push
mov
jno
dec
add
sbb
dec
addr16
cmp
xor
jo
sbb
mov
mov
sbb
mov
fwait
ljmp
push
jb
je
dec
ja
push
pop
add
imul
mov
fcoms
paddsb
push
pop
xlat
mov
daa
fmuls
call
out
ret
outsb
shll
ret
fldl
clc
and
or
loopne
mov
popa
inc
xor
pop
cmp
fbld
add
or
lahf
inc
add
stos
movsb
aas
popf
xchg
adc
es
pushf
jp
jae
popf
jecxz
or
pop
les
xor
pop
lods
xor
adc
aam
shll
and
pop
mov
imul
rcrb
and
sub
pusha
dec
popa
xchg
pushf
je
lret
xchg
incb
push
dec
pop
imul
pop
out
aad
lock
inc
in
sub
pop
mov
sub
shrl
pushf
in
gs
out
popa
mov
pop
mov
jbe
out
ficomps
or
pushf
adc
dec
call
pop
test
and
inc
mov
fcomip
xor
mov
inc
cmpsl
mov
scas
in
mov
adc
loope
jno
ret
sub
scas
add
mov
cmp
std
sahf
jae
andl
ficoml
pop
push
sbb
ffree
ret
add
cmp
xor
mov
pop
ds
mov
pop
cli
enter
addb
and
sahf
xchg
mov
je
pop
mov
je
lcall
out
push
and
pop
pop
sub
or
push
cli
mov
cli
cmpsb
mov
imul
inc
mov
mov
jp
cli
lea
mov
lods
push
loop
bound
inc
testb
dec
pop
rcrb
pop
ret
push
push
jno
loop
aam
sbb
add
adc
cltd
xchg
xchg
xor
inc
orb
jl
mov
mov
clc
call
pop
std
or
xor
loopne
mov
pop
adc
jmp
arpl
outsb
cli
add
shlb
push
pop
arpl
push
cwtl
and
mov
movsb
xor
and
addr16
ret
insl
lock
test
cli
mov
loop
push
inc
sub
add
dec
add
cmp
mov
lret
add
jmp
xchg
push
sub
repz
inc
push
repnz
scas
pusha
cmp
orb
pop
icebp
xchg
jecxz
jle
dec
mov
and
and
dec
and
cmpsl
xorb
or
dec
mov
mov
lahf
xchg
xchg
dec
pop
mov
loope
or
fimull
cli
or
data16
dec
test
insl
push
inc
adc
out
or
inc
add
mov
adc
add
pop
shll
out
iret
xor
js
movsb
cltd
jno
je
insl
das
in
mov
mov
xor
sbb
in
mov
mov
xchg
sbb
imul
lds
mov
lock
jno
enter
insb
jge
pop
or
add
stos
adc
test
clc
nop
cmp
adc
mov
push
cltd
and
and
jmp
mov
add
fcmovb
call
adc
rcr
das
lods
jle
or
xchg
cmc
push
adc
cld
stos
subb
cmp
stos
sub
push
dec
and
outsb
loopne
or
pop
jo
push
xchg
push
movb
push
mov
mov
add
cli
or
push
clc
jmp
add
addr16
sub
mov
xlat
sub
mov
add
adc
cmc
call
ds
inc
pop
mov
das
sub
ret
push
mov
leave
and
add
add
jae
test
add
flds
xor
or
inc
xor
nop
shlb
mov
sub
pop
testb
inc
out
outsl
push
inc
test
sbb
into
lock
xor
pop
add
mov
sub
push
sub
js
sub
enter
push
fiaddl
add
andl
adc
clc
adc
fs
push
adc
jns
aam
mov
mov
pop
inc
push
sbb
sbb
jl
add
xchg
pop
fidivs
or
mov
pusha
sub
fcmove
inc
or
dec
jnp
xchg
mov
jne
aaa
test
arpl
pop
xor
and
repnz
mov
test
paddb
ret
mov
push
test
and
fs
pop
test
lret
mov
adc
jp
enter
pop
lods
jne
push
insl
lahf
push
push
imul
add
pop
das
rorl
sub
jno
ret
mov
push
lahf
daa
push
mov
jbe
rcrb
dec
or
mov
inc
fwait
cmc
mov
sub
xchg
and
insb
sub
mov
icebp
push
ja
lahf
lods
incl
call
and
jns
in
mov
add
mov
call
push
aam
jnp
pop
jb
rolb
dec
or
sti
sub
and
mov
sbb
and
lods
pop
mov
xchg
xorb
push
and
or
pusha
das
shll
dec
sbb
inc
sti
psubb
je
mov
popa
clc
data16
mov
test
outsb
jb
push
push
inc
or
mov
fucomi
or
jecxz
or
xchg
ret
pop
jle
test
sbb
pop
les
adc
inc
dec
popa
aas
fldcw
cmp
jle
cltd
jg
add
push
add
in
test
lods
mov
jns
into
add
bound
fbstp
mov
aaa
pop
inc
pusha
sbb
cmpsb
mov
out
inc
xchg
jecxz
mull
aam
jb
out
cltd
clc
inc
inc
out
adcb
adc
add
adc
xchg
mov
jmp
call
rcll
imul
jbe
mov
push
sub
add
add
lods
push
jnp
mov
imul
ret
adc
xor
inc
stc
mov
js
sbb
dec
add
or
mov
or
mov
push
and
cmp
gs
jae
in
push
xchg
dec
ficompl
loope
xlat
lods
fdivl
mov
fistps
inc
adcb
jbe
clc
repz
jp
mov
sub
jo
testl
adc
fst
dec
sbb
adc
mov
stc
hlt
sahf
dec
mov
lea
adc
inc
pop
lahf
into
mov
scas
sahf
cmp
dec
pop
insb
movsb
add
aam
fcmovne
mov
clc
push
popf
out
push
adc
stos
fs
shrb
lcall
pop
xchg
ret
add
cmc
mov
popa
mov
mov
mov
test
sub
cmp
and
or
inc
movsl
cli
roll
into
es
push
into
mov
or
mov
gs
mov
movl
sub
dec
mov
adc
mov
push
push
scas
xor
inc
in
push
pop
xchg
test
adcl
adc
mov
je,pt
sbb
cmc
addr16
xor
pusha
add
and
sub
sahf
inc
lock
rcrl
movsl
testb
sub
add
pop
scas
stos
mov
xor
aas
add
mov
pop
mov
cli
mov
and
out
fidivrl
add
jns
jo
stos
sub
pop
lock
add
xchg
xor
cmp
mov
cmpb
lret
mov
push
in
test
cmp
ss
add
mov
movsl
dec
jo
shlb
ss
mov
jmp
adc
sarl
jb
sub
mov
mov
imul
xchg
fs
or
shr
sbb
stos
mov
xchg
xchg
iret
fwait
inc
mov
dec
test
jle
lock
add
jg
fisubrl
fldenv
aaa
mov
orl
cli
xor
hlt
mov
and
in
minps
fs
loopne
fcomps
push
mov
test
or
cmp
cmp
mov
push
push
ds
and
sbb
jns
mov
imul
mov
mov
out
pop
js
push
sahf
rorb
push
mov
sbbb
aas
loop
test
pop
cwtl
dec
mov
scas
lea
mov
lcall
je
int3
stc
out
mov
add
pop
inc
add
xchg
lock
sbb
jp
pop
mov
iret
jle
mov
or
pop
clc
leave
decb
lahf
out
adc
and
scas
inc
loope
adc
in
prefetcht2
pop
pop
xchg
add
jle
fcmovu
jmp
inc
sub
mov
or
pusha
adc
or
les
add
cld
cmp
xchg
clc
mov
add
imul
out
xchg
jo
push
lock
adc
faddl
fnstsw
shrb
or
xchg
ret
add
dec
adc
or
aas
adc
sub
cmc
mov
ljmp
xchg
lock
push
imul
rorb
jo
pushf
sub
fiaddl
iret
ss
jl
ret
dec
jb
add
movups
jno
push
pop
sbb
push
xor
xchg
add
inc
adc
fwait
ret
es
adc
out
mov
pop
jp
aas
mov
clc
and
addr16
loope
mov
stos
loope
mov
add
sbb
xor
xor
jne
into
xchg
movb
jp
mov
xchg
inc
and
adc
aam
cs
and
xor
cwtl
cmp
jno
je
inc
mov
in
sbb
dec
or
cmp
cmpsb
fwait
pop
mov
out
mov
xlat
das
mov
lret
sbb
xchg
cs
outsb
xchg
sbb
jns
push
pop
lock
sub
cld
jb
sbb
dec
pushf
mov
icebp
cmpsl
mov
jecxz
clc
sub
out
xchg
int3
mov
mov
sub
adc
inc
push
sbb
mov
xchg
and
add
xor
cld
ss
pop
jle
jo
shll
leave
ss
jge
mov
orl
out
stc
adc
mov
jo
out
mov
clc
je
mov
cltd
push
xorl
jo
cmp
sub
in
outsl
add
mov
test
inc
inc
and
cmp
addb
or
aam
pop
adc
or
aaa
sub
jge
or
jae
into
inc
push
mov
jo
js
pusha
lahf
sub
das
xor
stc
sahf
adc
bound
xor
cld
rclb
add
adc
sahf
movsb
dec
test
sti
cli
push
push
ret
cmpsl
js
rclb
sbb
cmp
aam
sub
cmp
mov
dec
out
shr
dec
cli
sub
and
adcl
mov
test
push
xor
and
sub
loopne
outsb
enter
aad
lea
fldenv
add
add
push
dec
and
inc
sub
call
push
jge
pushf
mov
inc
push
aaa
rcrl
je
adc
dec
les
les
sbb
cwtl
lret
cmp
js
mov
cwtl
lock
daa
dec
pop
shlb
adc
inc
jge
push
into
out
sub
lcall
fs
add
cmpsl
mov
es
repnz
cmp
or
mov
mov
push
dec
xchg
adc
rolb
lods
dec
mov
sbb
cmp
sbb
outsl
pop
mov
or
xor
cs
sbb
push
pop
mov
sarl
sub
push
fistpll
sub
sahf
mov
hlt
loopne
jmp
or
inc
xchg
clc
ret
push
xchg
dec
push
add
jg
pop
fadds
loope
data16
add
sub
sub
pop
mov
jecxz
fsubl
cmpl
add
lret
push
stos
cmp
mov
cmp
push
aas
inc
mov
adc
mov
pop
scas
mov
mov
test
mov
pop
insl
jns
test
pop
in
lea
mov
mov
mov
test
in
fcmovne
mov
adc
bound
adc
mov
orb
adcb
loopne
ljmp
mov
add
das
jl
push
fsubrl
inc
and
pop
pop
dec
xor
jb
pushf
and
lea
lods
or
iret
into
and
dec
xchg
jb
jb
pusha
addl
push
ret
xchg
dec
push
inc
outsb
sbb
cmp
add
cltd
xchg
movsb
les
popa
push
mov
clc
push
es
dec
jle
movsb
pop
stos
push
push
iret
push
sbb
cmp
dec
push
test
imul
shrd
stos
jbe
pop
jp
sbbb
fadds
dec
rcll
cmp
and
dec
pusha
mov
jl
mov
adc
mov
repnz
test
and
fsubs
mov
push
test
mov
push
icebp
or
decl
test
jmp
or
sbb
je
arpl
fidivl
dec
cmp
dec
xor
push
scas
add
xchg
out
roll
xchg
sbb
mov
loopne
out
inc
or
pop
pushf
fcoml
pavgb
push
xor
and
push
das
insb
scas
leave
in
lret
cmc
jae
ja
or
pop
movswl
and
adc
dec
pop
cld
sbb
xor
sahf
repnz
jle
hlt
lods
notl
jo
in
mov
jl
mov
push
cwtl
pop
jecxz
push
pop
imul
xchg
push
fistl
sahf
dec
xor
scas
jae
call
xchg
fsubrs
das
lret
mov
pop
int3
popa
pop
pop
iret
in
or
icebp
xchg
push
testb
adc
pop
sahf
adc
dec
sahf
cmpsb
adc
push
mov
jns
mov
ss
fcom
xor
fisttps
add
loop
push
dec
popf
movsl
das
adc
push
out
subb
cmp
xor
jbe
and
mov
shrl
xchg
xlat
xchg
push
loope
call
out
repz
add
inc
out
adc
push
mov
jecxz
sub
xchg
imul
ljmp
cwtl
push
in
or
pop
push
je
mov
icebp
inc
cmp
push
push
sbb
out
xorb
pop
popf
fldt
mov
je
jg
hlt
mov
mov
bound
movsb
push
pop
inc
ret
loopne
inc
xor
xorl
mov
mov
ret
stos
add
shlb
aas
push
cmp
pop
or
xchg
je
cmp
hlt
or
js
push
fiadds
mov
and
or
notl
mov
int
mov
es
xor
insb
cmp
inc
cs
push
bound
dec
push
lock
data16
ret
sub
pop
push
hlt
sbb
mov
popa
pusha
xchg
mov
adc
in
xor
nop
jle
aad
std
clc
or
pop
in
ja
jl
clc
pop
sbb
popa
or
mov
jb
add
mov
and
loopne
fcoml
push
adc
inc
outsl
adc
mov
push
iret
mov
mov
clc
cmpsl
inc
or
push
cmpsb
test
dec
lds
xchg
popf
dec
sub
inc
lds
test
mov
cmp
insl
lods
insb
loope
dec
stc
add
pop
je
js
cmpsb
lock
lahf
inc
enter
add
aad
lahf
or
rcrb
inc
jmp
sbb
and
test
stos
sub
adc
cmc
mov
loope
inc
cmp
lods
repz
adc
lea
mov
mov
sub
inc
insb
push
xchg
mov
setp
in
or
loope
push
cmp
js
sahf
fldl
outsl
mov
cmp
ret
jp
adc
lds
sbb
dec
mov
pop
rolb
cwtl
mov
pop
pop
fistl
sbb
lods
stos
enter
mov
rolb
add
andb
imul
les
pop
xor
mov
mov
loopne
mov
jbe
mov
push
jbe
ret
mov
jmp
push
xor
aad
jecxz
nop
pop
sub
xor
or
jo
rcrb
cld
inc
cmp
sub
out
cli
cli
mov
pop
cmpsb
ljmp
in
cli
and
cltd
cmp
adc
aas
fcmovb
adc
sub
sbb
fwait
sbb
loope
xchg
adc
add
push
xchg
syscall
ud2
inc
jbe
sbb
push
cmp
test
xchg
push
xor
test
popa
stos
sub
push
push
push
dec
jo
jbe
pop
aam
stos
test
es
std
sbb
mov
push
jo
xlat
les
aas
setbe
jl
mov
mov
sub
pop
pop
pop
test
cmp
or
adc
cwtl
push
dec
es
xchg
pop
dec
sub
dec
and
inc
lock
xor
fdivs
addr16
ss
pop
sbbl
fimuls
cli
pushl
or
mov
iret
aam
lods
push
xchg
add
jb
or
dec
in
mov
ficoms
lock
shl
ret
lods
das
mov
cmp
rcll
dec
pusha
aaa
subb
das
xchg
loop
lret
dec
addb
aad
push
add
outsb
inc
mov
clc
sub
pop
add
lods
hlt
test
xchg
sbb
ss
push
lods
push
test
dec
cmp
push
inc
push
scas
lcall
fisttpl
sub
lods
stos
test
lds
stos
in
cli
cld
or
out
and
shll
aaa
loopne
dec
in
clc
fs
cwtl
inc
cmp
movsb
push
jge
ljmp
cs
push
sbb
cmc
ja
scas
dec
enter
orb
adc
push
add
mov
add
sbb
lcall
cltd
repz
inc
outsl
mov
jo
sbb
sbb
add
mov
pop
push
add
movl
adc
mov
jge
sub
mov
sbb
test
or
cld
mov
loopne
or
in
push
cwtl
lret
and
lods
fwait
mov
mov
ds
jns
or
jae
inc
dec
mov
inc
ljmp
push
sbb
xchg
enter
push
sub
mov
sub
adc
and
mov
pop
mov
test
and
es
sbb
ret
shlb
inc
mov
loope
insl
bndldx
inc
inc
cmp
pop
fcoms
das
mov
jae
lock
loope
fldenv
mov
mov
shr
adc
pushw
sti
mov
pushf
dec
sahf
push
and
icebp
sbb
test
mov
cmc
sbb
popa
rcrl
xor
int3
sbb
pop
push
sub
hlt
xchg
cs
dec
in
ljmp
xor
jmp
pop
mov
cltd
rcr
jae
rcrl
jg
lret
sub
xor
xor
sub
xchg
mov
cmp
mov
cmp
lods
mov
inc
jle
loop
pop
xchg
jg
push
mov
mov
lahf
mov
sub
dec
es
mov
jb
scas
mov
subb
arpl
pop
jbe
dec
shll
loop
mov
enter
scas
pop
sbb
xorb
or
add
call
mov
mov
sbb
mov
ucomiss
mov
into
leave
push
add
fsubrs
pop
xchg
lock
mov
mov
gs
in
fwait
loopne
inc
fimull
add
adc
push
sbbl
lret
sbb
nop
test
mov
pop
cmp
add
add
les
xor
insl
jo
and
jecxz
sub
pop
cmpl
cmp
mov
scas
dec
lods
stos
aas
cmp
mov
lahf
push
xor
pop
mov
data16
int3
or
in
loope
lock
jp
rcr
mov
pop
cmp
negb
paddsb
outsb
xor
pop
fimuls
xchg
push
lock
xor
cltd
mov
push
pop
pushf
test
icebp
rcr
stos
xchg
mov
fsubs
push
push
or
cmc
dec
mov
inc
push
jbe
mov
out
call
push
jge
add
sbb
xor
outsb
pusha
pop
pop
hlt
pop
mov
scas
mov
or
cmp
mov
sub
push
out
jge
cmpsb
aad
hlt
icebp
lcall
rolb
adc
xlat
inc
dec
ret
mov
into
mov
sbb
mov
sub
cmp
das
or
ret
call
rcll
jge
cmp
aad
shll
xor
pop
push
push
shrb
movsl
mov
xor
xchg
test
and
mov
push
outsb
lahf
pop
pop
fildl
movb
jmp
and
push
cli
pop
test
addr16
cmc
add
sbb
sbb
sbb
mov
pop
push
es
mov
add
aas
mov
inc
enter
mov
inc
cmc
test
xchg
push
mov
inc
sar
popf
lock
call
mov
js
addr16
sahf
inc
sub
cmp
sahf
mov
sub
andl
sbb
mov
pop
xor
push
mov
je
xchg
sub
outsb
dec
lahf
and
push
pop
shll
loope
int
rolb
sbb
cmpxchg
out
ja
push
lds
add
roll
jmp
loope
test
shlb
xchg
test
lock
pushf
add
fwait
mov
adc
jecxz
push
hlt
and
fdivs
jle
adc
sahf
and
pusha
bts
push
pop
or
fldt
add
hlt
frstor
orb
out
insl
lahf
push
ja
push
aam
stos
sbb
dec
pushf
loope
add
popl
stc
sarb
dec
adc
mov
mov
loope
xchg
jne
in
and
dec
sbb
xlat
jg
or
xchg
or
mov
hlt
int3
cmpsb
les
dec
scas
dec
jmp
dec
push
out
mov
test
gs
xor
jecxz
jl
in
jmp
in
fisubs
pusha
push
clc
add
sbb
sbb
dec
inc
jge
lcall
ficoml
sub
bound
jne
mov
add
cld
mov
jl
pusha
sbb
pop
mov
jge
or
stos
inc
mov
add
sub
lea
ss
mov
loop
pop
sub
lods
ror
and
pop
jno
test
bound
hlt
out
adc
sbb
dec
mov
xorl
adc
and
outsl
cmp
xchg
rorl
add
adc
mov
shll
lock
fists
inc
jo
mov
inc
mov
push
push
shll
lret
roll
or
xchg
fs
fneni(8087
pop
sub
lahf
or
jg
movsl
and
pop
and
imul
das
cmp
push
inc
ljmp
sbb
call
test
push
mov
mov
mov
sbb
dec
cmp
jb
sub
adc
les
shrl
xlat
cmpsb
lock
or
enter
mov
lahf
cmp
test
js
cmp
add
mov
push
mov
in
sbb
and
mov
cmp
bound
pop
push
and
or
inc
or
add
dec
and
pop
arpl
jb
pop
pusha
bound
jne
mov
pop
ds
popa
xchg
mov
cs
and
xchg
movsl
shrl
mov
pop
inc
mov
addr16
rol
jno
inc
decb
lock
mov
pop
inc
je
lret
add
inc
push
je
push
ss
adc
imul
lret
pop
sub
inc
adc
adc
or
jg
in
xlat
cmpsl
rcrl
loop
mov
inc
rol
enter
int3
das
xchg
sub
cmp
and
loopne
or
or
out
push
xor
scas
xchg
aam
jle
xor
sahf
add
mov
push
pop
push
jmp
pusha
rolb
pop
andl
ficoml
aas
int3
movsl
call
and
add
cmp
nop
jle
xor
inc
dec
cli
xchg
add
pop
pop
or
cmp
test
push
stos
dec
or
cmp
mov
cwtl
mov
jb
in
cmpsb
add
out
pop
daa
xchg
in
xchg
jp
inc
mov
movsb
push
push
push
jae
adc
jle
inc
stos
sbb
add
testl
mov
outsl
dec
pop
adc
add
sbbb
int3
jbe
mov
ljmp
test
sahf
inc
pop
push
push
das
mov
pop
lock
pop
clc
test
sub
cmp
pop
jle
jb
shlb
into
loope
and
mov
pop
in
xchg
pop
mov
mov
xor
std
arpl
cmp
xchg
frstor
jge
or
mov
jo
lahf
push
mov
popf
loopne
pop
add
cmp
mov
imul
int
pop
cld
movsb
cmc
pop
ljmp
mov
aam
out
lock
pusha
inc
stos
dec
rolb
adc
adc
dec
cwtl
iret
dec
in
insl
sub
fdivp
call
ret
push
inc
pop
dec
stc
cltd
loopne
aad
mov
out
jb
push
cmp
fs
push
pop
sub
add
jle
mov
outsb
lahf
dec
fnstsw
push
push
sahf
insl
xor
lret
push
jle
pop
in
inc
push
adc
jge
dec
clc
xchg
xchg
loope
cmp
or
jo
sbb
inc
ret
fdivp
sub
das
cli
adc
fs
loopne
call
jns
cmpsb
dec
in
ja
inc
inc
mov
loop
xor
xchg
adc
in
jne
fisubs
pop
xchg
push
mov
clc
ds
popa
insb
cmpsl
cmp
out
test
jae
loop
inc
mov
inc
cmpsb
xor
rolb
push
imulb
push
loopne
lret
mov
add
mov
lret
shlb
subl
pushl
je
or
fildll
sbb
add
inc
fisttpl
mov
lcall
test
repnz
pusha
and
jle
add
movsb
and
aas
ficomps
push
xchg
xor
inc
cld
lods
test
sarl
adc
cmpb
cmp
insl
push
jle
inc
cmp
imul
sub
jge
xor
sub
xchg
inc
mov
or
daa
xchg
or
dec
popf
je
sbb
pop
inc
rcrl
int
lock
lods
dec
in
mov
push
jno
inc
push
sti
add
in
and
push
add
scas
je
and
jmp
push
imul
jle
jnp
and
push
and
fisubrl
adc
rol
jmp
and
inc
movsl
xchg
loopne
jne
cmpsl
cmpsb
fsubrl
loopne
sbb
mov
xchg
or
and
gs
and
scas
imul
cld
aas
sbb
je
sti
mov
push
ss
bound
xchg
cltd
lret
and
adc
jb
mov
inc
pop
je
mov
push
xor
dec
cmc
xchg
push
movsl
jmp
mov
mov
loope
imul
loop
jo
mov
arpl
aam
cmp
mov
mov
push
ret
loope
jle
or
xor
dec
into
adc
adcl
subl
cmp
cwtl
push
inc
dec
lds
nop
in
mov
lock
xor
mov
adc
dec
or
fstpl
xor
jmp
pop
dec
clc
sub
arpl
dec
fs
mov
aam
ror
or
js
add
add
mov
sbb
dec
xchg
ret
mov
jge
sbb
jmp
je
mov
mov
and
into
pop
ja
inc
rcrl
inc
dec
dec
fmul
test
inc
out
or
js
jg
mov
ret
sub
ds
mov
dec
fsubrs
mov
loope
lock
or
and
add
es
jp
and
loope
cs
push
push
and
stos
lahf
divl
mov
jle
sbb
cmp
pop
insb
and
push
gs
mov
or
cld
or
pop
xor
fstl
xchg
jb
loop
mov
or
jp
and
mov
mov
inc
data16
lods
call
push
lods
in
xor
or
pop
aas
push
sub
sbb
jecxz
or
jge
nop
xchg
sub
cmp
ficompl
inc
scas
jp,pn
mov
sbb
adc
loop
js
sbbb
xchg
sahf
dec
dec
cmpsb
and
test
mov
jne
lcall
jnp
inc
adc
jle
push
fs
das
sar
and
and
mov
enter
rcll
out
pop
sbb
push
adc
in
and
ss
jnp
cld
scas
sub
xchg
rcr
mov
or
sub
jp
and
mov
imul
cmc
fadds
inc
cmp
dec
shll
lods
jmp
dec
xor
add
fbld
cmc
int
outsb
loop
or
dec
movsb
popa
and
inc
pop
and
arpl
and
dec
ret
stos
out
cmp
mov
std
push
call
inc
test
xor
mov
sti
and
stos
pushf
mov
aaa
xor
sbb
adc
or
mov
sbb
insl
lahf
lock
je
loope
sbb
mov
xchg
and
push
xchg
insb
dec
mov
inc
adc
pop
adc
fadd
push
inc
mov
out
cli
or
xor
ds
js
aas
mov
hlt
in
xor
fwait
xchg
and
jge
bound
sbb
ljmp
clc
adc
scas
loope
dec
clc
leave
push
and
fs
scas
jnp
andb
call
xor
cmp
out
cwtl
dec
mov
test
jns
jo
push
pop
loope
sbbl
sbb
addr16
fmull
push
cli
scas
rorb
cmp
pushf
js
cltd
jp
mov
sub
or
xor
pop
insb
shlb
xor
out
mov
sti
xchg
mov
fcmovne
aam
mov
push
call
adc
outsl
call
push
jecxz
xlat
inc
mov
loopne
add
insb
mov
mov
orb
and
xchg
mov
pop
adc
sbb
stc
mov
inc
dec
xor
jg
and
pop
or
scas
adc
and
adc
andl
sub
imulb
daa
cmc
add
jo
repnz
pop
xor
hlt
cs
imul
push
jnp
or
daa
out
lret
pop
adc
lahf
sub
mov
cmp
inc
rorb
add
sbb
icebp
fsubs
and
sbb
or
sub
jge
jg
int3
outsl
js
push
jle
clc
adc
pop
movsb
xchg
mov
and
js
xchg
in
jp
loop
lods
jp
insl
dec
lret
xor
call
js
enter
push
je
adc
mov
js
sarl
jno
pop
jne
adc
push
jno
aas
dec
in
lods
dec
cmp
mov
mov
mov
lock
or
bound
aas
test
cli
into
pop
repz
or
add
scas
and
push
cmp
adc
inc
add
nop
test
dec
add
xor
push
pop
sub
jbe
push
test
mov
fcomp
divb
push
adc
adc
ja
in
rol
mov
inc
ds
cmpsb
jle
jbe
mov
icebp
or
push
push
push
and
inc
xor
clc
sbb
aas
outsb
test
push
xlat
pop
pop
sub
sub
dec
pop
xchg
and
and
shl
test
stos
jno
pop
mov
clc
ret
adc
push
lcall
jl
mov
stc
mov
or
dec
js
out
jbe
cmp
and
add
xor
incl
cmc
fs
in
fdivs
fwait
lcall
cltd
dec
pop
test
lock
leave
push
aam
or
stos
fmulp
jae
inc
cs
cmp
cwtl
dec
test
push
jecxz
jmp
dec
jno
movsb
out
sti
mov
lock
les
inc
push
mov
mov
imul
and
inc
push
push
mov
ret
mov
cmpsb
std
adc
sbb
xor
movsb
shl
push
out
jmp
bound
mov
and
mov
jl
xor
mov
imul
jmp
inc
mov
pusha
jle
mov
inc
fcom
and
pop
lret
dec
in
cmpsl
mov
stos
mov
cmc
ds
pop
cltd
ljmp
cmp
mov
xchg
push
dec
dec
addl
rcrb
xor
adc
mov
push
sahf
or
jo
in
mov
sub
pop
movsl
mov
adc
xor
push
in
inc
adc
push
push
cmp
lcall
dec
lods
xorl
das
or
in
mov
in
push
cmp
dec
mov
ss
inc
and
imul
cld
add
lahf
cmp
add
pop
pop
cmc
xchg
scas
sbbb
jno
and
xchg
adc
or
call
push
push
cmpsl
mov
mov
lcall
lds
insb
lcall
xor
fisubrs
xor
jae
popf
dec
les
ss
std
cs
cli
add
fdivrl
loop
add
mov
inc
cli
mov
mov
inc
push
xor
insl
cld
push
mov
test
mov
push
or
inc
lods
or
pushl
xchg
arpl
inc
mov
inc
and
adcb
fsubr
pop
cld
mov
sub
stos
push
inc
inc
inc
add
xor
adc
sti
daa
orb
xchg
lcall
adc
test
outsb
stos
xchg
add
inc
or
dec
insl
icebp
push
jl
int
mov
sti
dec
and
xor
mov
cltd
mov
pop
incb
fistl
push
cld
mov
jae
cmpsl
fiaddl
cmpb
ficompl
adc
icebp
and
repnz
push
mov
sub
push
push
push
sub
fs
mov
lea
loop
xor
addb
shl
mov
jbe
loop
stos
lea
cmp
aam
and
lock
sub
xchg
sbb
cmp
ret
xchg
push
jno
test
xchg
into
adc
cmp
test
in
pop
xor
ds
inc
xchg
sub
es
mov
adc
add
mov
jp
mov
pop
jo
lea
sub
mov
push
lahf
inc
mov
idivb
or
jno
stos
pop
add
xchg
sti
imul
test
lret
mov
movsl
test
ss
add
lret
lods
push
cwtl
mov
daa
loopne
sbb
das
push
sub
pusha
mov
xchg
lcall
sbb
js
ljmp
sbb
inc
ret
jl
aam
adc
mov
in
les
jp
dec
sbb
jb
or
cmpsb
ss
shrb
icebp
pusha
pop
mov
xchg
cmove
popf
mov
rolb
jecxz
call
stc
push
cmc
fisttps
nop
push
mov
mov
popa
xchg
repz
shlb
mov
mov
scas
int3
mov
xchg
data16
mov
mov
mov
idivl
pop
inc
gs
adc
mov
push
sti
cwtl
in
or
fwait
xor
imull
stos
je
test
fcmovu
xchg
xchg
xor
popa
cs
ret
cmp
add
jmp
mov
popf
sahf
insb
pop
and
or
aas
popf
andb
add
ror
test
cmp
fcomps
jno
clc
mov
shll
bound
dec
shr
test
push
lidtl
jg
loope
adc
test
adc
mov
and
cmpsb
mov
sbb
or
cmp
pop
fdiv
push
and
sbb
mov
inc
xor
stos
fistps
mov
test
inc
sub
in
add
mov
pusha
pop
sub
mov
data16
loopne
es
push
jo
cli
push
mov
popa
add
sbb
out
mov
add
pop
or
cmpsl
lds
enter
je
sahf
aaa
nop
adc
xchg
cmp
pusha
sub
mov
lock
inc
and
mov
mov
mov
test
jl
adc
mov
mov
loop
ds
or
mov
lock
sarb
sbb
stos
add
pop
push
jg
and
rorb
inc
out
in
icebp
femms
ljmp
in
shr
add
adc
dec
mov
mov
pop
fnstsw
scas
mov
push
pusha
push
jle
shll
dec
cmp
je
cmp
xor
in
mov
mov
push
cli
inc
push
xchg
data16
pop
pop
pop
lcall
mov
mov
sbb
mov
inc
je
popf
ret
shl
mov
sub
push
mov
inc
xor
fimull
iret
pop
sti
push
push
mov
in
adc
or
test
pop
add
pusha
adcl
sbb
out
scas
and
insl
test
clc
push
add
mov
push
xchg
push
mov
loop
sbb
je
clc
enter
inc
jl
pop
inc
mov
cmp
or
sub
push
les
repz
cld
outsl
test
push
gs
fstpt
xchg
xor
fstpt
inc
test
ljmp
push
insb
sub
cmp
hlt
enter
xchg
movsl
and
sbb
xchg
sub
inc
sbb
dec
pop
cmp
mov
sar
fsubrp
out
and
std
aas
out
xlat
insb
ret
in
popf
push
adc
jg
aas
outsb
and
add
cmc
adc
sub
mov
and
pop
outsl
call
add
mov
stos
mov
add
and
je
push
push
iret
rcll
jo
fsubr
test
and
xchg
mov
or
in
mov
jo
ror
test
inc
adc
lret
pushf
cmp
out
data16
and
push
loop
shlb
pusha
cs
or
orb
mov
add
stos
aas
ljmp
mov
xchg
mov
jp
aaa
ror
inc
cmp
push
jmp
shll
xor
insb
add
cld
lahf
mov
fildll
cmp
scas
lahf
or
cmp
pop
movsb
dec
movb
pop
imul
filds
sbb
pusha
mov
push
sbb
fiaddl
xchg
inc
cmp
mov
xchg
jne
call
insb
movsb
adc
iret
inc
lret
jp
xchg
fcompl
cwtl
xchg
jmp
shlb
icebp
arpl
insl
cmp
fs
movl
ret
jp
out
sti
pop
ljmp
dec
sbb
shl
pop
shll
mov
pop
adc
test
in
pop
cmp
push
mov
les
or
cmp
fimuls
inc
cltd
pop
leave
add
or
adc
mov
or
add
popa
jecxz
sub
inc
mov
mov
test
mov
cs
jne
lahf
mov
les
hlt
ret
inc
adc
scas
movups
adc
rcll
pop
out
call
loop
aad
rcrb
ficoms
call
sbb
xchg
fs
pop
popf
icebp
inc
xor
adc
fwait
iret
lods
loope
cld
clc
adc
push
jbe
xor
and
and
dec
cs
icebp
add
js
stc
roll
pop
cmp
dec
jp
xor
mov
test
jbe
movsb
lcall
shl
cli
xchg
jnp
push
xchg
imul
stos
adc
xchg
lahf
loop
or
add
bound
or
xchg
icebp
push
mov
mov
jecxz
rclb
clc
rclb
mov
push
fdivp
and
pop
adc
lds
dec
rorb
xchg
fidivrs
fstpt
movsb
sbb
or
shl
aam
or
mov
daa
mov
insl
sbb
inc
insb
inc
lahf
loope
sbb
js
dec
adc
and
add
ds
imul
or
lret
push
push
cmp
ret
sbb
popf
adc
add
cmp
fisubl
adc
into
sub
lods
fistpll
addl
push
sbb
xchg
mov
and
flds
sub
mov
ss
repz
ret
or
ret
movsb
mov
or
pop
js
inc
addl
test
test
and
movsl
xchg
mov
loopne
lret
and
mov
mov
popf
dec
leave
adc
dec
jne
cmpb
outsl
xor
test
add
lods
jb
inc
xchg
cmp
pop
loope
andl
inc
call
fs
fwait
call
mov
push
aad
add
repz
aaa
xor
daa
scas
orb
xchg
xchg
fcmovb
and
inc
mov
imul
pusha
fists
lahf
insl
mov
cmpsl
jl
into
ljmp
push
mov
ja
addr16
loope
jo
adcl
cmpsb
mov
cmpl
mov
mov
mov
lods
cmp
add
mov
mov
pop
mov
or
jle
dec
jo
or
cmpsb
arpl
jmp
adc
into
ja
dec
jbe
fadds
ret
inc
scas
shrb
push
lret
icebp
push
xchg
sub
sbb
ret
push
out
jecxz
leave
xchg
add
or
mov
mov
sbb
arpl
pop
clc
sbbb
xor
repz
cmp
hlt
push
mov
rcr
and
in
rcrl
push
add
sbb
mov
and
scas
add
xor
or
sub
adc
fcomps
in
or
in
lret
dec
sti
xchg
and
and
and
and
pusha
jb
pop
lret
popa
sbb
add
adc
adc
adc
cmp
lods
das
fldl
inc
stos
or
and
loop
and
pop
outsb
data16
lahf
dec
push
movsb
popf
dec
outsb
cli
sbb
push
xchg
push
add
stos
sbb
es
dec
cmpsb
jne
psrld
out
clc
push
cli
xor
xchg
out
jecxz
cmp
push
pop
arpl
or
sbb
lea
xor
add
test
dec
push
rolb
pop
sub
jmp
loopne
mov
and
rcll
lods
out
pop
inc
movnti
or
mov
dec
sbb
push
xor
sub
sbb
and
jecxz
mov
push
cmp
mov
mov
sbb
add
popa
jle
adc
gs
xchg
jbe
mov
cmpsl
xchg
cmp
js
gs
pop
or
scas
push
adc
sub
mov
inc
jmp
jo
call
push
ss
cmp
and
and
stc
inc
inc
leave
sub
jge
out
outsl
adc
test
aas
test
ds
mov
negl
sbb
pop
sub
xchg
dec
imul
and
ja
loope
jo
jnp
xor
add
pop
pop
jne
aad
inc
dec
and
pop
out
inc
lcall
or
xor
mov
mov
in
and
pop
addr16
punpckhwd
jne
in
mov
sysret
add
mov
fs
mov
xor
push
pop
and
out
jle
sbb
sub
push
adc
xchg
jne
xchg
mov
clc
or
pushf
sub
or
insl
push
mov
mov
imul
and
orb
movsb
fsubs
jns
or
je
jnp
sub
sub
pusha
aaa
dec
mov
dec
mov
fiadds
and
cld
cmc
mov
mov
xor
sbb
add
aas
ds
out
mov
sbb
fcmovnb
adc
arpl
es
xchg
inc
lret
int3
adc
dec
shlb
ficoms
inc
int3
mov
push
shlb
sahf
adc
mov
xchg
rcl
and
jnp
sbb
dec
sub
mov
mov
nop
and
mov
mov
adc
ret
xor
nop
ss
add
add
or
xor
adc
jecxz
lock
adc
addl
pusha
sbb
jg
frstor
ficoml
mov
mov
jne
fwait
xor
sub
mov
hlt
cmp
mov
and
fldl
stc
mov
xcrypt-ctr
cmpsl
cwtl
mov
lret
pop
and
test
push
cmc
xor
mov
lea
clc
jecxz
leave
jl
ss
cmp
ds
inc
fbld
mov
sub
inc
fwait
lahf
mov
pusha
pop
sbbb
pop
xlat
shrl
push
pop
je
xor
cs
lcall
sbb
cltd
test
jmp
test
mov
xchg
popf
lds
sahf
cs
loopne
jns
dec
filds
xchg
js
leave
or
pop
push
je
xchg
xchg
pop
sahf
mov
fldl
push
test
aam
fsubl
out
mov
out
mov
xor
pushf
push
gs
insb
arpl
aad
fbld
into
jno
cmovno
inc
outsl
mov
das
std
xor
das
or
loopne
sub
add
cmpl
xor
mov
movsl
sbb
mov
add
mov
shl
push
lret
push
sbb
or
roll
shl
mov
cmp
add
cli
ficomps
aaa
andb
xor
in
aad
sbb
inc
fisubl
sub
push
cmp
sahf
or
jns
mov
inc
lcall
inc
or
xor
je
in
jg
test
pop
xchg
leave
push
xchg
or
sub
sub
sub
xor
sbb
adc
mov
jbe
cmpsb
mov
loope
pop
sbb
addr16
adc
cltd
in
add
adc
pop
push
push
int3
lds
sbb
aaa
addb
cli
mov
cmpsl
xchg
arpl
fistps
and
sub
inc
test
or
or
mov
adc
pushf
cmp
jecxz
sub
adc
jge
gs
std
or
int3
mov
push
pusha
mov
mov
mov
xor
addb
xchg
mov
js
movsl
sub
out
ja
scas
cmp
or
pop
and
mov
dec
add
setp
out
or
loopne
out
ljmp
sbbb
xor
stc
fsubrl
inc
adc
imull
push
daa
out
xor
pop
ret
es
cmc
dec
xor
call
fadds
add
je
sarl
inc
imul
inc
ljmp
inc
roll
lea
mov
mov
loop
adc
dec
scas
lret
pop
jg
mov
inc
adc
sbb
pop
add
outsb
adc
les
int
dec
cmpsl
sbb
push
sbb
push
mov
lret
nop
sbb
movsl
popa
push
pop
cmpxchg
lret
fwait
sub
mov
cmp
sti
movsl
mov
pop
inc
push
push
test
fsubrs
inc
mov
movsb
sarl
mov
mov
lods
sub
xor
xor
loop
mov
cwtl
nop
cmp
outsb
jno
xchg
xchg
xchg
sbb
mov
popf
scas
pushf
in
pop
mov
xor
shlb
sbb
cmp
cmpsb
fst
jle
mov
pop
icebp
sbb
pop
mov
sbb
push
sbb
je
addl
addr16
pushf
jns
cmp
mov
mov
cmp
je
in
jnp
addr16
jne
or
fildll
fstpl
dec
and
lods
sub
popf
inc
cli
mov
jecxz
loopne
dec
cmp
fnstcw
dec
sub
xlat
dec
cmc
pop
enter
scas
in
push
sub
fsubrl
nop
out
mov
stos
test
push
pop
sbb
cwtl
or
arpl
popa
mov
jmp
pop
cltd
push
notl
dec
or
loope
cmp
ja
sub
jge
in
cmp
and
mov
pop
or
push
push
addl
in
addb
mov
xchg
inc
fists
popf
cld
lret
dec
cmp
imul
or
mov
push
sbb
daa
xorl
adc
dec
or
dec
or
outsb
add
sbb
dec
or
clc
scas
sub
jae
mov
inc
pop
insb
insl
ret
movsl
lret
ljmp
push
dec
mov
sub
bound
jge
call
std
sbbb
add
xchg
jns
hlt
stos
insb
icebp
push
sub
pop
xchg
xchg
xor
push
cmpsl
clc
lea
and
mov
aad
cltd
lcall
test
pop
loop
push
orb
imul
call
sub
dec
push
ljmp
xchg
arpl
xchg
subl
jecxz
ds
jbe
lcall
scas
xchg
pop
dec
inc
fcmovnu
cs
jg
pop
test
outsb
vmread
loope
and
mov
and
pusha
daa
jmp
mov
popa
je
add
inc
sub
pop
jecxz
clc
lret
lock
lds
movsb
aaa
ss
inc
mov
stos
popf
or
test
cmp
arpl
das
mov
mov
add
leave
add
mov
leave
aaa
lods
jnp
cs
push
push
in
xchg
adcl
scas
jbe
pop
xchg
js
add
mov
stos
shrb
cmp
inc
inc
mov
ljmp
ds
mov
adc
movsl
insl
stos
pop
push
and
jl
xor
mov
jae
xor
test
and
rcrl
imul
mov
jb
bnd
lock
xchg
pop
add
xchg
lret
loope
scas
dec
xlat
mov
dec
sub
xor
pop
clc
call
int3
fsubs
shrl
sub
pop
and
jno
jbe
lds
jl
or
xor
push
aaa
movsl
shr
inc
popf
xor
and
mov
ss
cmp
loop
dec
add
jecxz
adc
xor
fistps
mov
nop
shll
pop
test
test
hlt
sub
xor
rorl
popf
inc
shll
sbb
pop
sub
cwtl
and
cmp
pop
arpl
xchg
push
fs
xchg
test
mov
subb
sti
in
movsl
ss
mov
std
popa
inc
sbb
mov
shlb
mov
lret
fidivrl
lods
ret
jmp
movsb
mov
cmp
jg
bnd
push
ss
adc
dec
adc
jne
in
sbb
in
imul
jo
lods
mov
sti
mov
push
push
lods
cmp
pop
adc
dec
xor
cwtl
xor
lret
loope
pop
loopne
xchg
push
rorl
sub
pop
xor
push
sbb
shll
scas
jmp
repnz
cmp
movsb
shrl
loope
stos
push
insl
inc
sbb
imul
add
xchg
cmp
loop
out
dec
leave
cmpsl
mov
push
adc
shlb
pop
push
adc
pop
dec
lea
insl
ja
xchg
test
xor
outsb
imul
jb
or
adcl
popa
cmp
sub
adc
pop
cmp
sub
subb
outsb
push
aad
add
imul
pop
syscall
adc
cltd
pop
pop
into
cmp
das
or
data16
push
xor
push
std
mov
mov
mov
roll
mov
jl
lret
cmp
cmp
mov
pop
fucom
daa
sub
sbb
pop
das
adc
scas
sti
dec
and
test
sub
and
cli
loope
test
push
mov
cmp
enter
mov
lea
stc
fldl
sbb
orb
test
in
mov
pop
and
cmpsl
xlat
xchg
adc
cmp
mov
or
push
aam
ret
outsl
sbb
lock
scas
in
jno
sub
lcall
pusha
pop
sbbl
cmpsb
test
mov
ss
push
vpaddusw
cmp
out
or
mov
mov
mov
ds
fsubrl
or
repnz
shlb
pop
add
inc
jae
pop
or
loopne
lcall
rolb
repz
push
negb
and
and
sbb
rorl
arpl
ss
push
mov
je
fsubs
mov
scas
mov
mov
xchg
adc
ret
ljmp
xchg
fidivl
shr
and
lds
pop
xchg
cmc
xor
mov
add
lea
aam
xor
je
sbb
pop
cld
dec
cmp
scas
dec
push
adcl
mov
sbb
addr16
adc
mov
xchg
fisubrs
mov
lcall
mov
add
xchg
scas
push
jmp
push
xchg
sbbb
dec
out
ret
xorb
cmp
jbe
lcall
jg,pt
test
bound
inc
xchg
mov
push
push
lds
les
mov
sbb
cld
mov
sbb
call
mov
imul
sbb
pop
bound
sahf
mov
mov
insl
pop
jmp
fadds
sub
sub
xor
sbb
icebp
int
in
test
mov
insb
rclb
push
mov
or
out
push
inc
mov
jge
outsl
mov
cmc
mov
pop
cmp
inc
add
out
xchg
gs
xchg
mov
rclb
rol
mov
ljmp
or
xor
sub
push
push
jle
mov
cwtl
movsb
aam
ss
pop
in
mov
bound
out
lcall
aas
inc
fwait
movsb
sbb
rcrb
or
lods
rcrl
fcmovb
in
adc
or
mov
add
xchg
repz
js
insl
xchg
mov
sub
sub
mov
test
and
loopne
cmc
dec
ljmp
pop
push
lret
les
sbb
and
roll
sti
test
daa
pusha
jle
test
xchg
out
std
sbb
sub
mov
sarb
test
add
out
addb
sub
pop
ja
jle
and
int
into
test
ret
ljmp
push
sub
stc
popa
je
dec
leave
scas
ss
adc
jl
imul
stos
jne
cwtl
and
or
add
jo
mov
outsb
lret
test
mov
loope
psrlq
mov
lcall
insl
pushf
push
inc
sbb
jno
movsl
les
pusha
inc
je
xchg
cmpl
sbb
out
loopne
daa
cmp
std
fisubl
test
aad
or
fdiv
xchg
cs
imul
cmp
test
push
stos
push
and
or
add
daa
adc
xchg
mov
sti
lea
lock
and
insl
cltd
and
fsub
cmp
cmp
adc
outsb
pop
push
mov
jbe
stos
pop
jecxz
in
clc
inc
or
sub
pop
sbb
ss
xchg
loop
mov
loopne
push
outsb
andl
sub
mov
mov
jne
shlb
clc
pusha
clc
jne
lock
or
fidivrl
jb
cmp
loopne
ja
clc
fcoms
sub
out
sub
inc
in
inc
push
xor
fwait
decb
push
jnp
ja
cmpsb
sti
insb
mov
out
adc
lcall
cli
xor
adc
ret
loopne
out
loop,pt
push
push
sbb
adcb
or
test
bound
xor
and
mov
pop
mov
mov
pop
out
push
push
pop
ss
cmpsb
loopne
mov
jmp
mov
decb
xor
int3
dec
mov
cmp
adc
jns
les
rcl
cmpsl
mov
loop
jle
shll
inc
xchg
mov
mov
xchg
mov
incb
sbb
out
orl
incl
lods
cmp
xchg
and
inc
mov
rol
jmp
aam
les
shlb
ficoms
push
xchg
pop
subb
dec
test
cmp
jge
icebp
pop
jmp
pop
sub
push
pushf
insl
and
xor
mov
dec
cmpsl
xchg
movsl
cmc
inc
xor
rcrb
sbb
jno
dec
ficoms
cs
das
xor
mov
enter
sbb
xor
cmc
incl
lret
adc
lock
aaa
adc
and
rol
cli
out
sbb
and
pop
pop
mov
or
sarb
and
outsl
jge
das
pop
adc
mov
in
dec
adc
ror
mov
cmp
fadds
add
sub
subb
rcrb
push
inc
ds
ret
or
fidivrl
cmp
xchg
sahf
stos
mov
test
jne
cld
das
hlt
push
cmp
scas
and
sbb
mov
sub
inc
ljmp
iret
int3
and
mov
fiadds
mov
or
popa
add
xor
test
addr16
jmp
cmp
aad
std
lcall
mov
je
hlt
daa
das
mov
shr
pop
outsl
or
out
shrl
inc
push
xchg
add
scas
mov
mov
and
jecxz
add
scas
outsb
cs
sbb
fs
je
scas
push
dec
or
js
add
inc
push
push
adc
dec
mov
rclb
xchg
dec
daa
add
add
iret
xor
call
jnp
push
cmpsb
daa
adc
pop
dec
lock
adcl
inc
add
pop
hlt
lcall
lahf
pop
cmp
arpl
clc
shrl
jmp
add
jbe
int3
stos
lds
fsubs
ret
sbb
sbb
mov
push
push
mov
int3
mov
lock
cmp
mov
sbb
xor
push
push
mov
js
jg
sub
adcl
iret
mov
push
enter
dec
scas
rcr
dec
in
divb
test
imul
push
push
adc
mov
fiaddl
push
pusha
lds
mov
pop
clc
pop
add
jg
popf
popa
cmp
fnsave
out
aam
sbb
add
sbb
and
shl
sub
loop
inc
das
push
fcomip
xchg
popf
jge
and
lods
cmp
cmpb
adc
loopne
loope
enter
add
mov
adc
sti
ficompl
mov
jg
cmpb
dec
cld
or
lea
xchg
shrb
xchg
and
add
jecxz
push
test
aam
push
pop
inc
sbb
mov
xchg
clc
mov
dec
mov
dec
outsl
jle
lods
ret
xor
inc
push
incl
push
sbbb
dec
lock
mov
mov
stos
xorb
inc
and
or
lds
push
dec
je
xor
loopne
jl
or
cs
fldcw
mov
adc
pop
inc
xchg
cmp
jne
push
push
fistpll
xor
xchg
ds
push
pop
fwait
clc
sub
jmp
cltd
bound
add
jecxz
jo
out
pop
mov
aas
push
push
pop
js
and
loope
or
push
inc
xlat
xchg
roll
sbb
or
push
rol
pop
vfrczss
in
stc
mov
fadds
out
jp
xor
jge
push
je
push
dec
test
dec
xchg
xchg
repnz
and
repnz
mov
aas
jnp
push
aas
inc
les
call
not
cltd
cmpsb
mov
dec
mov
shrl
jne
into
aas
lcall
sub
dec
test
ds
mov
add
adc
adc
jge
es
jne
stc
xor
cli
stos
inc
sti
imul
test
cmp
and
pop
push
push
push
roll
sub
test
xchg
popa
psraw
pop
push
adc
fimull
sub
clc
adc
pushf
sbb
ret
fstps
lds
and
cmp
xor
pop
mov
movsb
ds
fistl
dec
lahf
sbb
ret
xchg
sub
popa
jae
pop
mov
orl
fs
sbb
sarl
insb
out
aaa
cli
orb
jno
xchg
and
subb
mov
rclb
mov
mov
push
loopne
xchg
cmc
aad
mov
mov
mov
fs
adc
xchg
mov
incl
sub
loopne
mov
rol
ret
mov
fcomi
adc
push
sbb
cmp
pop
xchg
shrl
push
mulb
movsl
mov
scas
xchg
int3
push
into
lcall
push
rcrl
pusha
test
push
sbb
jbe
inc
pushf
add
je
xor
push
pop
les
pop
div
jno
adc
lock
dec
push
rcrb
dec
jecxz
orb
cmpsl
xlat
idivl
getsec
shrb
or
mov
cmc
xchg
hlt
cmp
xorl
fdecstp
subb
lret
sbb
mov
push
shll
ret
lock
into
addb
jae
xchg
xor
scas
fcomp
fs
arpl
inc
add
into
sbb
clc
xor
aad
leave
and
add
cmp
rcll
sbb
adc
jecxz
mov
pop
pop
and
jns
push
outsl
xor
pop
popf
int3
xchg
inc
imul
ljmp
adc
ds
add
or
and
sbb
xor
dec
inc
rcll
or
stos
xchg
pop
movsl
rorl
iret
push
aam
cmpsl
cmpsb
add
xchg
fsubp
roll
dec
add
aam
lock
faddl
adc
je
shr
xorl
dec
push
cmp
mov
nop
inc
sub
outsb
cmp
jge
mov
orl
lods
push
dec
aad
pop
sbb
jnp
out
ds
stos
adc
lret
add
scas
nop
pop
and
repnz
inc
sbbb
cmp
dec
ja
fwait
push
xor
xchg
dec
push
roll
dec
es
fwait
xchg
push
lret
test
push
push
adc
cld
js
lret
outsb
out
orb
push
add
inc
inc
inc
filds
or
es
cmp
fwait
jle
pop
test
enter
mov
add
stos
loopne
sbb
fs
std
stos
push
dec
subb
aad
test
mov
insl
push
adc
cli
mov
clc
out
daa
xchg
dec
leave
ss
jne
push
and
jnp
jle
out
cmp
adcb
mov
mov
cmc
and
insb
and
sarl
add
dec
lds
lret
cmp
dec
pusha
repnz
repnz
adc
pop
dec
mov
xchg
adc
or
lret
cld
adc
push
ljmp
rorb
cmp
lods
ret
lea
jecxz
lcall
inc
add
sbb
sub
loope
loopne
xor
adc
lock
lahf
dec
jo
arpl
dec
loope
les
mov
pop
test
mov
sarb
rolb
mov
pop
adc
push
lock
adc
popf
scas
push
sub
xchg
ror
lea
xlat
rclb
popf
dec
xchg
fnstsw
push
in
add
out
pop
or
push
cmp
cltd
add
adc
mov
decb
cmpsb
addr16
jmp
jae
loope
ret
pop
cmp
ljmp
mov
inc
mov
loop
dec
add
lahf
or
sbb
inc
in
jno
or
fbstp
and
divl
or
enter
fidivrl
or
das
and
jb
imul
sub
jl
jnp
pop
adc
loop
push
mov
and
aaa
std
xor
pop
add
inc
push
in
div
mov
and
sub
and
sbb
fs
testb
sahf
pop
adc
gs
xchg
and
or
cltd
add
je
fstps
out
pop
bound
cli
and
dec
lods
jns
push
js
mov
xchg
shrl
add
outsl
push
int3
mov
xlat
insb
test
dec
mov
or
cltd
scas
testb
or
add
add
movb
aad
sbb
push
xchg
clc
fs
fucomi
divb
in
xchg
mov
dec
enter
adc
mov
add
jp
mov
or
xchg
into
or
push
cmp
lods
pop
test
fmuls
inc
xor
mov
aam
jbe
mov
fwait
add
dec
or
repnz
cmp
cmp
and
push
shlb
sbb
lret
xchg
and
dec
add
in
inc
cld
xchg
mov
cmp
lods
mov
imul
ss
adc
xlat
inc
clc
add
and
mov
and
pop
xchg
jge
mov
xor
and
add
or
pushf
xlat
pop
popa
or
or
mov
loopne
fadds
jne
adc
stos
inc
mov
imull
xor
popa
push
stos
outsb
into
push
pop
sub
fwait
ss
mov
jno
xchg
mov
mov
inc
sbb
lret
cmp
ds
loope
fiadds
insb
mov
cmc
inc
mov
mov
shll
and
mov
pushl
adc
mov
in
inc
jl
das
sysenter
or
push
test
cmp
cmp
jle
xor
mov
lahf
leave
pop
test
mov
mov
or
cmp
pop
sbb
pusha
jno
xchg
lds
jle
rolb
fsubrs
enter
sub
jno
push
shrb
xchg
icebp
or
or
lods
mov
pop
cmp
shl
pop
test
pop
push
mov
and
adc
nop
adc
ljmp
push
lods
xor
xor
push
inc
das
sar
sub
jnp
pop
push
and
loopne
cmpb
test
fstl
out
inc
add
sahf
push
in
test
hlt
hlt
lock
stos
mov
pusha
or
clc
orb
aas
test
cwtl
xchg
mov
xchg
push
insb
hlt
jmp
js
sub
pop
sub
add
movsb
mov
mov
mov
inc
push
rcrb
sub
dec
mov
dec
movsb
mov
fmuls
mov
push
sbb
outsb
xor
jbe
sub
xor
add
add
pop
cmp
cli
mov
push
jno
mov
jmp
mov
mov
sarb
mov
xor
xchg
repnz
inc
js
inc
fstpl
aam
and
lcall
lret
dec
ret
cmovg
nop
int3
mov
push
scas
add
mov
out
dec
insb
inc
ret
mov
mov
iret
dec
call
add
xlat
mov
fdivl
test
jg
mov
aad
test
lret
adc
pop
mov
add
add
xchg
jle
cmpsb
loope
sbb
add
ret
pop
ret
scas
jnp
lds
or
test
mov
mov
and
pop
pop
mov
mov
pop
dec
cmpsl
xchg
xchg
xlat
dec
add
and
adc
stos
std
lret
sbb
add
and
test
push
push
sub
add
out
shrb
popf
into
popf
call
inc
xchg
push
adc
or
ja
inc
mov
imulb
divl
jns
xchg
jle
push
movsb
fnstsw
or
dec
cmp
fldenv
cmp
sub
add
xchg
clc
and
xchg
dec
xchg
inc
mov
cli
mov
test
daa
jbe
fwait
filds
pusha
lea
call
xchg
mov
filds
call
mov
cmp
inc
pop
test
inc
lock
ds
add
outsl
mov
pop
je
mov
xor
enter
and
adc
mov
jle
icebp
add
add
inc
icebp
sub
lret
push
jmp
lahf
inc
dec
hlt
inc
aad
ret
mov
loop
add
roll
ss
ljmp
jne
fcmovb
bound
xchg
or
jno
cmpsb
mov
sahf
or
pop
je
popa
cmp
mov
xor
xchg
enter
push
pushf
stos
pop
sbb
and
mov
lret
rcrb
insb
jne
insl
test
push
add
fdivs
out
mov
aad
jnp
push
jo
repz
pusha
inc
popa
stos
and
sahf
in
jo
std
arpl
xchg
push
cmp
ljmp
push
add
addb
push
push
jg
push
pushf
inc
arpl
push
inc
mov
lock
or
sub
andb
out
mov
sbb
rorb
mov
fwait
mov
ljmp
and
arpl
jle
pop
cmpsl
outsl
xor
push
inc
cmpsb
inc
xor
and
cmc
and
cmpsl
daa
pop
aad
xor
sbb
pop
xchg
mov
jle
push
jl
mov
push
mov
cmp
lret
lods
push
jae
push
mov
lods
push
lcall
pop
es
mov
adcl
dec
mov
aaa
cmc
mov
std
push
ret
pop
ret
fisubrs
cmp
pusha
repz
icebp
movb
ficoms
out
popa
xlat
nop
add
ss
nop
mov
out
sarb
sbb
ljmp
orl
push
clc
mov
sbbb
ds
sub
fcmove
inc
stos
stc
test
sub
jl
adc
xor
and
fsubp
aaa
ja
inc
sub
pshufw
or
inc
cltd
pop
addl
loopne
rorb
sahf
lret
shrb
cmpsl
dec
pop
pop
pop
mov
test
xchg
sub
cmp
xor
and
mov
outsl
fnstenv
mov
pop
and
mov
lock
and
decb
shrl
test
sbb
dec
add
pop
mov
es
mov
daa
or
mov
sbb
pop
or
adc
dec
mov
mov
jo
pop
in
fdivs
jnp
dec
cmp
es
jne
inc
xchg
cmp
test
add
xchg
inc
jns
js
ja
xchg
inc
lock
mov
loop
jmp
jmp
sbb
inc
or
rclb
addr16
ret
xchg
pop
xor
in
dec
fucomip
mov
cwtl
scas
clc
xchg
clc
cmp
sub
or
ja
and
sbb
cmpsl
scas
enter
jle
mov
xor
lds
rorb
pushf
mov
jmp
push
cmpsl
icebp
lds
dec
notl
shrl
fwait
add
xor
xor
sub
call
sub
xor
fnsave
iret
xchg
push
fisttpll
push
idivb
inc
mov
pop
pop
cltd
lcall
inc
adc
test
push
imul
or
adc
enter
rcrl
lock
in
jmp
push
mov
xchg
xchg
xor
or
movq
mov
aad
sub
ds
hlt
cmp
mov
jle
jmp
es
test
pop
cld
adc
or
mov
inc
mov
lret
js
lahf
gs
push
add
pop
pop
rclb
jnp
test
sub
lret
push
adc
rcrl
inc
inc
or
cmpsb
add
push
sub
jp
sub
xlat
mov
loope
pop
ljmp
into
out
sbb
pop
add
scas
test
mov
sbb
and
pop
aad
lahf
pop
push
xor
add
add
dec
ret
inc
je
clc
add
xchg
shr
jo
jle
imul
inc
push
leave
ret
lret
les
xlat
push
add
shll
pop
add
inc
dec
push
pop
pop
mov
mov
sub
sbb
inc
mov
or
icebp
orl
or
add
mov
and
scas
add
divb
and
lock
aas
sub
faddp
add
push
andl
mov
movsl
or
xchg
lret
push
push
push
sbb
and
daa
loope
xchg
cltd
lret
xchg
push
jle
incb
rcll
fsts
mov
in
cmp
loopne
xor
mov
loope
and
jl
push
xor
xchg
lock
fimull
push
and
xor
push
les
mov
push
mov
int
roll
xor
and
pop
and
sub
mov
not
lds
andb
jmp
int
cwtl
pop
xor
rolb
push
cmpsb
in
sahf
add
push
pop
aam
pop
lock
loopne
sub
orl
pop
mov
push
clc
mov
xchg
rorl
in
mov
lret
xchg
push
cmp
dec
sub
mov
cli
add
dec
jb
iret
cmp
ds
cld
push
out
hlt
fsubs
add
pop
cwtl
mov
adc
jmp
jb
in
flds
cmpsb
cmpsb
mov
or
cld
call
imul
inc
push
push
arpl
mov
aad
jecxz
lret
sub
and
push
xchg
and
sbb
or
loope
rol
sti
sub
pusha
call
xchg
cmc
sbb
xchg
outsb
loop
in
cs
or
ja
jp
and
cwtl
das
pushf
xor
fwait
mov
inc
out
adc
insb
mov
mov
cli
lods
shrl
ror
xlat
sbb
jnp
mov
mov
jp
jge
mov
inc
enter
xor
mov
out
adc
shrl
sarl
lods
sub
sbb
cltd
jp
pop
shl
push
lock
xor
js
cmpsl
jno
cltd
add
hlt
aas
sbb
mov
mov
hlt
shrl
and
lods
stos
xor
fistpl
test
dec
addb
mov
add
shll
add
sub
push
pop
jae
mov
push
outsl
pop
push
faddl
in
sbb
jne
add
pop
leave
aaa
repz
xor
sbb
jo
cwtl
and
xlat
mov
je
mov
nop
out
mov
cld
cwtl
rolb
inc
sbb
pop
xor
mov
in
mov
dec
sbb
ficoms
mov
add
cltd
pop
rol
cmp
pop
shll
pop
pop
cmc
je
mov
sub
mov
mov
je
or
adc
je
mov
add
mov
rolb
lds
mov
and
sti
das
nop
jp
jo,pt
ret
sbb
repz
sahf
xor
or
and
jge
arpl
and
lock
jmp
stos
into
jge
jp
shll
insl
pop
loop
cs
ret
stos
push
pop
xor
pop
sahf
shrb
cmpsl
stc
shrb
repz
je
push
arpl
adc
mov
fidivrs
pop
jno
xor
pop
mov
add
adc
cmp
psllw
xchg
dec
outsl
rorb
pop
xor
push
push
shll
in
add
sbb
repnz
scas
mov
hlt
or
je
movsl
mov
push
push
sbb
std
cmp
inc
js
push
mov
sahf
loop
pop
or
rcl
pop
sub
ret
adc
orl
mov
andb
mov
aad
and
dec
mov
mov
add
mov
popa
arpl
test
ret
call
mov
jo
mov
cmp
rol
nop
xor
add
push
out
test
or
pop
mov
icebp
fs
lods
and
testb
scas
cmc
pop
rcrl
dec
sub
mov
jo
pop
test
dec
sbb
xor
pusha
jmp
mull
jno
add
popa
xchg
mov
aaa
mov
or
roll
loope
repz
ljmp
mov
jns
sahf
lock
pop
push
xchg
xchg
mov
ja
aam
rcrb
loop
daa
add
fstl
scas
outsl
lock
jns
fstl
and
xor
repz
hlt
rorl
push
cmp
and
or
aaa
iret
inc
roll
test
and
mov
jg
popa
lcall
movsl
sbb
mov
pop
mov
loope
jle
pop
mov
loopne
cmpsb
ret
clc
test
mulb
idiv
test
mov
adc
movsl
xor
cmp
xchg
cmpsb
xor
add
mov
adc
testl
leave
add
mov
inc
sbbl
iret
cwtl
bound
shlb
fldt
daa
ljmp
subl
and
push
je
add
lahf
aas
xor
ds
fnstenv
loope
or
ljmp
adc
mov
push
or
and
mov
jmp
dec
adc
inc
xchg
push
xor
adcl
xlat
movsl
sbb
outsb
sbb
ret
stos
gs
test
insb
push
mov
dec
mov
xorb
dec
aam
ret
mov
loop
loopne
push
popa
cmpsb
scas
js
push
rolb
sbb
dec
call
popa
call
xlat
lods
loope
aas
push
nop
jle
lds
dec
popf
cmpsb
loope
in
repz
lcall
into
data16
jbe
call
jns
mov
es
sub
adc
aas
jl
orl
add
mov
loope
adc
aam
or
mov
shlb
out
adcb
xor
sbb
pop
adc
jp
js
jl
popf
xlat
loopne
cld
push
dec
bnd
xchg
mov
jge
je
cmp
jmp
xchg
test
lcall
dec
jmp
or
shlb
aam
pop
insb
xor
es
insb
xorb
or
sub
pop
rorb
icebp
sub
daa
jecxz
jnp
sbb
pop
movsl
lods
ja
cld
out
dec
cmpsb
iret
fldt
dec
cltd
imul
xchg
mov
in
jmp
movsb
lret
enter
xchg
pop
xor
pop
cwtl
pop
ret
les
adc
inc
popf
mov
xchg
stos
add
dec
les
divl
orl
in
fimuls
or
push
jo
mov
subb
jbe
dec
mov
lret
out
push
aas
out
js
sti
popa
leave
mov
xchg
sub
mov
mov
js
pop
daa
adc
mov
add
and
lahf
and
inc
add
pop
sbb
cmp
sub
mov
sub
mov
jno
push
scas
cmp
dec
push
xchg
outsb
ljmp
imul
xchg
mov
jo
push
pop
icebp
adc
jbe
inc
int3
sub
sbb
leave
clc
mov
xchg
sub
jae
sub
xorb
add
mov
push
pop
js
sbb
or
mov
mov
nop
or
and
ficoms
ds
popf
lret
js
pop
jmp
test
push
cltd
adc
and
sub
pushl
mov
into
push
jmp
inc
push
push
enter
sub
lret
imul
ret
clc
addr16
imul
jbe
or
lret
xchg
mov
shlb
pop
stos
and
and
inc
add
dec
pop
pop
sar
lock
and
xchg
push
mov
cmp
pushf
jno
les
push
fidivs
ret
lcall
call
insb
add
loop
or
insb
outsl
cmp
pop
fdivr
sbb
sbb
cmp
push
mov
and
pop
inc
fiaddl
jp
dec
add
pusha
std
xchg
push
add
and
cs
xchg
add
jnp
stos
xchg
jo
xchg
push
fsub
inc
push
pop
or
or
lea
jno
out
push
lcall
lds
or
push
adc
pop
and
add
gs
repz
mov
adc
lahf
or
inc
in
dec
scas
js
shrb
shl
cli
dec
int
sbb
mov
jnp
sub
ss
loopne
xor
mov
add
or
add
xor
and
xchg
sbb
pop
icebp
mov
rolb
xchg
push
dec
dec
sub
stos
sbb
imul
pop
mov
lret
sbb
sbb
imul
jle
or
cmp
pop
icebp
and
aad
push
cltd
outsl
dec
adcl
shr
push
sti
fidivrs
mov
xchg
rcrb
leave
push
xchg
push
cmpxchg
adc
roll
add
xor
add
pop
aaa
inc
sub
ss
mov
push
xlat
dec
mov
pop
add
sarb
inc
mov
sub
rcrl
nop
add
inc
jg
hlt
rclb
xor
xor
or
popf
xor
icebp
pop
stc
sub
adc
pop
inc
in
aad
push
mov
inc
out
scas
insb
aas
call
test
push
test
or
xor
pop
dec
mov
xlat
clc
lock
mov
test
std
pop
je
std
or
inc
push
repz
pop
cmp
idivl
lock
add
cmp
pop
push
push
sub
pop
addb
jmp
inc
xchg
adc
test
cmp
ljmp
test
or
popa
clc
xchg
push
mov
fisttps
dec
adc
hlt
mov
dec
lret
mov
mov
loop
dec
push
int3
out
push
pop
aad
inc
sub
push
test
in
sbb
push
je
aas
call
add
jge
push
jge
divl
call
pop
mov
mov
xor
or
insb
pushf
stos
push
mov
test
sub
cmpsb
movlps
cmp
fwait
push
cmp
inc
adc
fcompl
inc
aad
add
loop
idivl
insl
jp
lret
mov
jmp
popf
adc
cltd
das
shll
adc
xchg
dec
jo
adc
push
int3
and
mov
push
and
jae
xchg
sub
fdivrs
cmc
imul
mov
xchg
inc
push
int3
andb
and
imul
imul
xchg
jae
rolb
push
mov
jbe
daa
dec
sbb
xlat
mov
sbb
adc
and
push
push
pop
shrb
nop
divb
mov
addr16
xor
jg
xlat
xchg
lock
cwtl
mov
shlb
jmp
lahf
cmp
inc
repnz
add
clc
je
loope
jmp
add
inc
dec
aaa
mov
mov
jb
add
fdivr
cmpsl
pop
sub
pushf
iret
daa
adc
movb
mov
xor
lea
outsl
mov
repz
sbb
call
dec
jmp
jg
cmp
int3
call
sti
sub
inc
xorb
add
bound
into
icebp
add
repnz
mov
jmp
cmpsl
jnp
xor
leave
mov
adc
clc
imul
add
mov
pusha
cli
test
js
js
pop
je
rorl
cli
sbb
jl
jmp
mul
mov
dec
xchg
fs
lcall
daa
flds
mov
popf
ret
fdivrp
xor
mov
pusha
cli
pop
cmp
repnz
lret
negb
add
or
adc
adc
nop
xchg
xor
cwtl
cltd
cmp
mov
lcall
dec
and
mov
mov
punpcklbw
adc
pop
cmpsl
and
std
push
out
xor
popa
fcoms
pushf
mov
andb
push
sbb
cs
sarb
pop
pop
mov
sbb
xchg
mov
adc
add
inc
sbb
mov
aas
ret
mov
adc
pusha
or
insl
and
and
cmp
ret
popf
shll
sub
add
xor
sub
xchg
pusha
inc
mov
mov
cwtl
mov
pop
cmp
inc
xchg
sub
insl
ljmp
add
mov
pop
mov
arpl
push
jg
inc
pushf
jle
cmp
imul
bound
add
sbb
push
fwait
pushf
dec
sbb
adc
push
enter
std
sub
jecxz
ret
imul
sub
push
add
pop
jp
aad
loopne
lret
fimuls
add
movmskps
and
push
fbld
lea
vpor
cmp
sub
pop
pop
lods
xchg
fwait
daa
pop
inc
outsl
inc
or
lock
rorb
aas
dec
mov
cmp
sub
cld
decl
and
mov
cmpsl
pop
aad
dec
sbb
dec
ficoml
push
cmp
cmpxchg
and
fisubs
test
test
scas
and
and
dec
insb
mov
popa
sbb
pop
push
hlt
cmp
cmp
and
or
lock
pop
fwait
pop
jp
mov
inc
pop
xor
mov
js
fs
add
les
ret
mov
sub
inc
xor
mov
out
nop
adcb
icebp
verr
xchg
je
mov
or
sub
mov
dec
ljmp
pop
cmp
sbbb
in
icebp
clc
cmpsb
pop
adc
jecxz
jno
stos
jnp
sahf
push
aad
adc
mov
dec
ja
push
es
pop
dec
rcl
test
jb
js
cmc
jbe
sbb
int3
sub
mov
cld
xor
subl
add
push
or
mov
fildll
mov
adc
lds
and
adc
js
jo
stos
inc
lods
sub
jne
push
out
andb
jp
jo
jg
mov
ret
xor
setae
pop
cmc
mov
ss
sbbl
imul
jecxz
shl
sbb
outsb
js
pusha
outsb
adc
cs
add
pop
test
mov
push
mov
xchg
mov
aas
pop
ret
sub
fbld
mov
rolb
cltd
lock
cwtl
jnp
push
fistpl
cli
lea
mov
xor
dec
sub
or
add
dec
lock
push
ret
inc
adcl
inc
xor
enter
pushf
loopne
loopne
jmp
jmp
es
inc
pop
loop
scas
scas
ficomps
inc
mov
aas
pusha
fldcw
adc
push
sbb
icebp
dec
les
test
cmpsb
lea
icebp
push
xchg
adc
inc
xlat
sahf
sub
in
clc
ss
pop
out
mov
cmc
xorb
pop
cmp
sub
lock
ret
mov
aam
inc
push
mov
scas
shl
push
sbb
es
insb
pop
std
mov
scas
mov
ret
xor
xor
or
cmp
int3
das
test
push
ljmp
sahf
adc
mov
add
or
data16
or
cmpsb
shlb
js
rcrb
sbb
sbb
add
les
cs
movsb
adc
cmpsb
out
dec
ss
add
icebp
cltd
dec
cmp
lock
cmp
fists
call
xchg
sbb
and
fcomi
ljmp
inc
xor
inc
dec
movsb
adc
xor
inc
testl
stos
mov
adc
xor
sbb
faddl
add
insl
push
or
sub
add
xorb
aam
fimull
sbb
push
in
nop
mulb
clc
push
dec
in
sub
pop
push
mov
movsb
mov
mov
cmc
ret
call
lods
adc
adc
popa
xor
push
ficomps
js
imul
test
xchg
jecxz
js
arpl
repz
or
test
jecxz
mov
adc
push
xchg
adcb
dec
test
sbb
sub
subl
mov
out
push
idiv
std
cmc
and
add
mov
int3
cld
jp
inc
jge
mov
mov
ja
mov
inc
jb
outsl
or
mov
adc
arpl
int3
shrl
hlt
adc
bound
loopne
push
pop
mov
nop
mov
xor
pop
sub
mov
add
cld
mov
cmp
jmp
adc
jg
jne
dec
hlt
dec
adc
popa
lods
fsub
test
cli
cltd
xor
je
outsb
inc
ljmp
sub
add
inc
test
pop
xor
jbe
roll
dec
push
out
xor
dec
cmp
addb
pop
or
mov
es
xor
mov
mov
sbbl
sub
mov
xor
dec
pop
cld
dec
loop
rol
mov
sti
fbstp
push
in
mov
adc
incl
loopne
and
sub
imul
inc
fimull
xor
outsl
push
imul
jbe
adc
fwait
rclb
push
decb
xchg
push
push
mov
add
jmp
cmp
pusha
pop
ds
jbe
mov
test
cld
outsl
xor
clc
lods
xchg
and
mov
push
lahf
and
and
xchg
je
bound
sbb
fsubs
mov
xor
das
scas
icebp
xchg
or
arpl
add
hlt
ret
adc
push
inc
bound
loopne
or
mov
jne
icebp
clc
dec
icebp
lds
lods
and
ret
js
pop
test
icebp
mov
inc
mov
popa
test
and
mov
stos
sub
insl
mov
jae
sub
fcoml
mov
or
jns
roll
or
xchg
pop
int3
loopne
movsl
movsl
fcmove
shlb
not
inc
or
ja
add
add
or
sbb
jae
mov
push
and
jg
imul
fs
mov
cli
and
clc
into
sub
jbe
lret
fwait
aam
push
out
push
outsl
add
rcll
adc
mov
push
push
sbb
push
loope
mov
lock
and
mov
and
lea
jne
fnstcw
aas
xor
in
pop
loopne
cmpb
lock
pop
stc
add
push
pop
pop
aaa
mov
jo
fs
mov
push
stos
push
push
mov
adc
mov
mov
cmp
mov
and
add
inc
and
fs
add
subl
scas
shrd
negl
ljmp
icebp
imul
insb
mov
inc
mov
inc
and
mov
add
je
or
sub
add
mov
or
hlt
enter
cli
adc
sbb
jp
lock
sti
jno
shll
arpl
pop
push
xor
sbb
lods
inc
addr16
sbb
stos
sub
std
mov
xchg
lcall
ds
pop
xor
inc
sbb
mov
mov
inc
testb
das
bound
cwtl
ljmp
pop
and
cvtpi2ps
js
sbb
test
mov
mov
mov
test
add
and
fidivrs
xor
or
sub
add
notl
test
jg
lock
lock
movsl
lea
inc
push
pop
shlb
incb
push
xchg
incl
mov
sub
cmc
inc
and
add
test
jle
lret
or
sub
mov
shlb
lods
mov
cld
dec
lods
inc
push
clc
stos
fcmove
mov
jbe
dec
adc
inc
lret
loop
inc
dec
fadds
into
shrl
pop
js
icebp
repnz
inc
test
mov
add
mov
mov
pop
arpl
xor
cmpsb
lock
cmp
pusha
clc
dec
pop
mov
push
jp
stc
pop
jecxz
add
lods
add
jnp
jp
pop
jmp
lcall
mov
or
leave
lea
push
cli
pop
mov
push
push
fsubrl
adc
aad
or
sbb
leave
rcrb
mov
cmpsb
cmp
adc
mov
push
xor
and
sbb
rol
add
outsb
aad
push
imul
mov
sbb
add
xor
and
stos
cld
or
setnp
push
push
dec
xchg
stc
mov
mov
mov
outsl
pcmpeqb
add
inc
out
int3
sbb
pop
xor
push
jnp
inc
decb
rorb
cwtl
sub
add
push
push
mov
movsb
cmova
push
xor
mov
sti
sbb
mov
fcomi
cmp
jo
and
push
mov
xchg
cmp
push
cltd
cli
rcl
int3
mov
mov
sub
pop
das
shll
lea
sbb
xchg
fwait
pop
fisttpll
mov
ss
pop
cmpsb
mov
push
aaa
jo
icebp
js
aas
dec
pop
cmc
cmp
cmpsb
add
or
mov
or
ds
sub
and
xchg
nop
cli
sarl
dec
sbb
or
inc
jge
mov
out
mov
test
imulb
xchg
cli
fists
add
pop
and
ljmp
in
movsl
dec
sbb
into
mov
or
xor
cmp
sub
jne
pop
popf
test
fsubl
cmp
fistpl
rcr
insl
sub
add
loope
and
push
cs
lea
scas
nop
aam
lock
pop
mov
mov
mov
lret
lods
jp
push
jnp
ficoml
pop
and
gs
add
dec
mov
push
add
out
cmp
lea
mov
or
mov
lods
sarl
ret
push
push
cltd
cwtl
clc
inc
fwait
hlt
arpl
sahf
repnz
fyl2x
cmp
jle
bound
sub
loopne
add
mov
cli
dec
lods
loopne
sbb
sbb
ficoml
cmpsb
mov
mov
jle
sti
xor
insl
inc
inc
push
push
xor
pop
xchg
insl
mov
mov
clc
dec
arpl
xorl
ljmp
pop
ficoml
or
dec
adc
sub
insl
rcr
and
sbb
out
inc
cmp
mov
sub
loop
mov
aas
dec
mov
inc
dec
in
call
jae
mov
jg
pusha
push
jge
mov
mov
sarl
cmp
shr
mov
push
add
ss
mov
movsl
dec
lock
stc
sbb
mov
adc
rcrl
ficomps
fcoml
in
ret
mov
sbb
in
push
andl
cmpsl
mov
push
pop
sbbb
js
push
loope
repnz
fnstsw
mov
movsb
fistpll
mov
xor
fcomi
sub
ret
sarb
or
pop
popa
mov
pop
pop
or
shll
rorl
in
mov
add
push
push
inc
push
je
aam
mov
and
jns
pop
jns
and
ret
mov
or
cmp
les
and
fcmovnbe
cmp
xlat
ret
jb
xchg
std
rcrb
pop
xor
les
repnz
xor
add
sbb
cs
test
inc
fcomps
sub
and
jb
rorb
dec
rcrl
enter
fmuls
sarl
fidivrs
add
dec
fwait
pop
out
pop
jo
test
add
in
adc
mov
mov
fwait
bnd
xchg
cmp
ds
push
xor
push
loopne
inc
sbb
bound
pop
mov
ljmp
clts
lcall
mov
jns
pop
sub
lds
push
push
inc
lret
mov
inc
mov
aam
xor
and
jo
add
or
js
inc
pop
sub
add
add
outsb
clc
stos
js
repnz
and
pop
or
out
xchg
dec
nop
cmp
cmc
push
xor
popf
xor
leave
nop
adc
jge
pop
call
fnstenv
and
mov
sub
into
jmp
sbb
push
xchg
mov
mov
movsb
lret
pop
fsubl
jecxz
add
or
mov
shlb
inc
imul
ljmp
and
add
push
incl
aam
xchg
xor
sbb
push
inc
adc
mov
xchg
pop
sub
cmc
and
mov
adc
js
movsl
test
into
inc
scas
xchg
icebp
daa
jp
inc
pop
popl
incb
inc
pop
sub
lds
xor
aas
jbe
adc
mov
vmovdqa
dec
or
popa
popa
mov
push
mov
mov
xchg
push
and
inc
pop
outsb
fmuls
and
push
cwtl
daa
or
mov
push
xor
push
inc
js
add
lock
sbb
shlb
in
lret
lahf
clc
iret
scas
test
mov
pop
pop
sbb
sub
cmc
lds
push
xchg
inc
mov
jecxz
pop
xor
inc
lock
hlt
adc
lock
fdivrl
adc
inc
fistpll
es
cmp
arpl
mov
shl
fisubl
mov
call
cmpsl
or
aam
adc
sub
in
daa
js
jbe
add
fwait
mov
or
testb
cmc
and
fwait
nop
mov
fistpll
dec
rclb
pop
js
jmp
mov
cmp
jbe
pmulhw
xor
popf
lods
aad
mov
aam
cmpsb
or
insl
imul
xlat
push
fidivl
push
push
xchg
test
push
pushfw
xchg
xor
js
scas
call
aam
sar
outsb
popa
xchg
loop
sahf
or
in
dec
cmp
lahf
pusha
xor
adc
nop
add
movsb
mov
aas
dec
pusha
rcl
dec
pushf
out
cli
push
add
pop
rolb
std
repnz
cmp
xchg
dec
or
notb
jnp
sbb
in
push
mov
std
addr16
mov
mov
or
stos
cmc
push
shll
adc
adcb
pushf
add
decb
push
xor
add
test
xchg
ljmp
cwtl
bound
ljmp
out
push
mov
fcompl
rcr
mov
pop
or
call
in
jg
and
inc
pop
and
inc
scas
jae
add
sbb
jmp
xor
add
push
addr16
and
or
out
scas
push
pop
js
inc
mov
jle
xchg
dec
add
jns
or
mov
icebp
cmp
ds
andb
push
out
lods
xor
jne
sub
or
into
cli
pop
add
daa
adc
mov
lcall
sbb
stos
cmp
and
xchg
mov
pop
mov
add
fcomps
pop
lea
lcall
xchg
mov
mov
incl
pop
sub
mov
adc
xchg
popa
mov
push
or
pop
ds
mov
inc
mov
lret
ss
outsb
aas
inc
movb
lea
bnd
mov
add
cltd
mov
pop
inc
fs
xchg
inc
mov
pop
xor
mov
sbb
in
int3
inc
aam
mov
lock
mov
add
rorb
sub
stc
decl
jecxz
inc
rcr
fldz
xor
add
and
cmp
push
adc
bound
pop
inc
shll
inc
scas
lock
xor
leave
call
clc
stos
pop
add
inc
sbb
fs
dec
sub
lods
mov
out
add
loop
inc
dec
ss
loope
mov
add
sub
sub
pop
std
sub
cmp
in
in
std
mov
cli
mov
rol
add
inc
xchg
push
push
mov
adc
pop
add
or
lret
add
scas
rcl
push
popa
movsl
xor
mov
jp
dec
xchg
rcrl
mov
in
lods
pop
or
push
ret
sub
mov
adc
adc
insb
xlat
mov
es
sarb
sbb
clc
das
inc
add
push
mov
xchg
lcall
inc
clc
ds
ss
fdivrs
out
mov
or
clc
sti
push
pop
xorb
mov
xor
jmp
inc
mov
enter
xchg
xchg
pop
sti
mov
pop
sub
mov
das
push
sbb
xchg
lret
sub
mov
add
dec
mov
ds
adc
insb
cmpsl
xchg
movsb
ss
jo
and
add
pop
arpl
outsb
mov
pop
sti
scas
mov
cmpsl
xchg
mov
rcrb
push
mov
mov
lcall
repnz
call
adc
add
push
outsb
js
push
mov
je
cli
gs
hlt
loop
jecxz
jl
shll
outsb
or
cmp
ret
add
fldt
popa
adc
xchg
in
dec
fimuls
pusha
adc
dec
loopne
idivl
jmp
out
leave
out
bound
inc
add
inc
aas
or
dec
test
cmp
js
enter
mov
lock
cmp
jne
lea
sbb
push
mov
cmp
aam
rcrb
test
jo
ljmp
cld
cmp
clc
xchg
jmp
ret
inc
test
andl
push
loopne
mov
mov
pop
mov
inc
cs
xchg
adc
sti
mov
aaa
sti
enter
add
je
jle
fsubs
fisubs
outsb
lods
push
pop
mov
lds
add
shrb
jp
loop
mov
sbb
dec
xor
sbb
imul
call
out
data16
loopne
dec
mov
mov
mov
lods
lahf
push
cs
mov
jne
add
sahf
push
or
popa
mov
push
jge
jmp
inc
insl
xchg
aaa
adc
jecxz
out
mov
push
insb
jmp
or
xchg
inc
xor
ss
js
mov
stos
je
aaa
inc
fsub
sbb
xchg
cmc
popf
mov
cmpsb
rcrl
aas
lahf
xchg
sub
mov
dec
add
jmp
push
inc
jne
sub
xchg
push
pop
mov
mov
ret
sbb
pop
ljmp
xchg
fistl
jbe
xor
out
or
cmpsb
mov
rclb
jl
adc
adc
scas
or
je
sub
cli
lcall
sub
lcall
pusha
ret
in
ljmp
add
mov
mov
mov
jecxz
push
add
loopne
js
inc
movsb
or
mov
xor
ss
sub
mov
roll
jne
adc
loopne
adc
test
pop
sub
lahf
xchg
scas
cmp
in
mov
fdivrl
pop
cmpsb
fistpl
insb
push
pop
insb
mov
stos
dec
ret
pop
clc
mov
jne
lock
cmp
stc
add
scas
roll
xor
adc
adc
in
mov
dec
data16
adc
xchg
sahf
jle
push
rclb
jg
lea
mov
push
xchg
and
sbb
cli
push
cmp
ror
sub
mov
add
fwait
test
mov
lcall
dec
faddl
popf
test
dec
sbb
ficomps
jl
xchg
xchg
aam
inc
add
inc
and
pushl
mov
dec
cmpsb
sahf
push
ljmp
xorb
push
vmwrite
lods
mov
popf
push
cltd
jecxz
notl
aaa
mov
into
dec
rclb
ss
jns
add
adc
add
es
faddp
test
ds
aad
add
dec
or
pop
and
dec
xchg
mov
ja
jns
mov
stos
pop
inc
jne
cmp
xchg
scas
inc
pop
imul
add
xchg
cwtl
test
mov
jmp
stos
call
inc
sbb
push
push
or
xchg
sub
fstl
adc
fs
push
push
sbbl
enter
mov
dec
inc
movsl
xor
or
add
jecxz
fcoml
aaa
pavgw
jecxz
imul
push
hlt
jo
shlb
lods
loopne
icebp
das
gs
stc
test
les
xchg
lea
mov
fldcw
rclb
aaa
fs
pop
add
xchg
mov
or
in
lret
out
lds
sbb
imul
arpl
out
inc
xchg
dec
rep
dec
jecxz
push
pop
cmp
ficomps
sub
cmp
mov
xlat
and
add
imul
push
iret
xchg
lock
divb
insl
xor
push
cmpsl
xchg
adc
stos
pop
push
test
cmc
push
stos
or
dec
push
clc
mov
dec
sub
rorb
xchg
push
mov
sub
pop
mov
das
sbb
jge
adc
stos
jge
mov
sar
shl
or
add
lods
out
je
mov
scas
dec
loopne
push
daa
cs
mov
pop
jmp
dec
fwait
mov
imul
andl
xor
cmp
cmp
xchg
aam
mov
xor
cmc
cmpsb
mov
inc
gs
sub
cmp
adc
xchg
lahf
lcall
inc
std
cmp
fadds
add
push
jno
sbb
pop
cmp
add
mov
mov
aam
div
bound
and
xchg
xorl
mov
adc
outsb
leave
call
sub
adc
mov
cmpsl
movsb
loopne
movsl
add
add
ret
dec
aam
sbb
movsl
mov
dec
or
ds
mov
add
daa
xchg
or
lods
xlat
loop
push
add
push
imul
data16
fmull
adc
jmp
jle
mov
ret
xchg
sub
and
inc
bound
lods
je
sbb
nop
xchg
push
xlat
and
adc
adc
push
jmp
loope
call
jne
xchg
in
mov
pop
in
test
jmp
cli
cmp
xchg
push
xor
xor
fcomip
jno
add
loop
mov
pop
jp
mov
arpl
mov
addr16
shlb
xor
imul
out
sub
pop
mov
data16
xor
fidivl
cmpsl
rorl
mov
cs
andb
push
add
mov
imul
shll
add
lcall
std
jbe
or
cltd
or
push
mov
adc
mov
cmp
movsb
mov
nop
daa
cmp
and
shl
sub
dec
in
jae
or
movsl
mov
pop
add
movsl
add
loope
cmp
mull
jo
stos
inc
and
mov
mov
and
ret
lea
add
daa
fldcw
fdivl
roll
outsl
mov
cmp
enter
pusha
add
bndldx
mov
pop
pop
stos
cmc
jl
sub
dec
pop
sti
filds
loope
mov
subl
or
cmp
sti
cmp
jnp
insb
fsubrs
out
sub
loope
pop
lods
inc
ret
push
es
mov
int3
cli
and
stc
xor
loopne
popf
inc
call
push
pop
inc
dec
inc
fdivl
test
xlat
xor
and
js
call
icebp
test
xchg
test
sub
das
mov
call
sbb
or
or
mov
mov
cmp
or
add
xor
add
lahf
dec
mov
cmp
loope
insl
dec
enter
imul
test
cmp
jg
push
or
mov
add
aas
popf
pcmpgtw
xor
dec
xchg
xor
push
mov
cli
dec
jae
pop
movsl
aad
movsl
or
dec
bound
daa
add
cmpsb
aam
mov
and
or
rorb
pause
add
mov
inc
jbe
enter
imul
fiadds
enter
xor
sbb
mov
mov
and
and
hlt
xchg
sahf
push
test
sarl
test
cmp
rcl
add
in
xor
je
add
dec
scas
mov
imul
pop
push
inc
xchg
pop
fildl
faddl
adc
add
xchg
pop
adc
mov
and
lods
xor
insb
hlt
pusha
dec
xorl
mov
push
and
loopne
js
mov
ret
sub
and
dec
aas
pushf
divl
fs
stos
mov
decb
cs
insb
fisttps
jb
test
test
sbb
shrl
xchg
xor
fidivrs
mov
add
sbb
shll
push
cmp
xchg
adc
dec
fs
inc
or
pop
gs
jp
stos
mov
loopne
xchg
sbb
pop
daa
pop
mov
loop
pop
mov
xchg
mov
orl
hlt
inc
shll
outsb
bswap
jae
jns
lea
or
cmp
iret
repnz
jne
fwait
gs
adc
inc
out
lahf
fadd
mov
push
push
cs
data16
cltd
js
jmp
xchg
shrl
push
jle
or
and
push
xchg
movsb
int
pop
into
xchg
cli
adc
int3
xor
push
adc
adc
jnp
xchg
mov
les
jno
xchg
stos
sub
jne
mov
stos
push
mov
and
sub
fdivrl
int3
in
fisttps
mov
imul
and
pop
test
mov
enter
inc
andb
add
and
jmp
add
shlb
outsb
mov
push
adc
mov
rorb
faddl
push
and
mov
xor
pusha
sub
add
aas
int
stos
adc
fwait
push
cmc
push
cmp
mov
pop
int3
out
pop
inc
pop
dec
outsb
xchg
push
shrb
ret
nop
test
dec
ffreep
and
dec
or
mov
inc
cmp
mov
or
inc
cmp
mov
adcl
enter
addr16
pop
stos
lcall
adc
fistl
jne
and
lds
shll
addl
xor
jp
imul
jne
dec
aad
insl
lret
sti
pop
and
popa
xor
mov
int3
xor
mov
leave
sub
and
pop
sub
mov
adc
movb
cltd
and
push
mov
mov
ret
sub
pop
clc
xor
les
mov
psubusw
xchg
adc
cld
push
dec
lea
pop
mov
push
cmp
icebp
sbb
stos
loop
cmp
push
push
xchg
xchg
jle
leave
ss
js
push
adc
or
dec
mov
mov
sub
sahf
in
mov
push
sysenter
nop
push
adc
cwtl
jno
je
sub
ljmp
push
ds
jl
sub
xchg
mov
imul
mov
or
cmpsl
and
shr
mov
push
fmull
push
mov
jae
ret
rclb
inc
mov
push
add
je
insb
stos
jbe
fdivrs
iret
repz
js
add
cmc
aam
adc
mov
mov
mov
dec
ss
mov
inc
aad
rolb
jno
xor
jo
mov
push
insb
pop
int
jne
mov
pop
xchg
inc
pop
call
popa
sub
add
imul
cwtl
loop
cld
mov
lea
popf
mov
mov
inc
fnstcw
in
xchg
ss
aas
mov
push
xchg
mov
cmpsb
mov
mov
or
xchg
out
jecxz
and
fwait
test
leave
sarl
sbb
fstl
imul
in
add
loope
xor
fistpll
movsb
xchg
aaa
mov
clc
fcomps
sbb
das
xor
loop
pop
mov
mov
cltd
lds
xchg
dec
add
std
add
pop
lret
stos
jmp
and
xor
add
cmp
or
jmp
sahf
movsb
clc
sub
sub
push
push
das
movsb
lods
call
xlat
enter
shll
in
cmp
les
gs
fdivrp
add
aam
fadds
rcrl
cmp
sub
fs
adc
push
jge
icebp
jg
cmp
jmp
jo
push
xchg
lret
loop
xchg
jl
sub
mov
push
pop
xor
outsl
loop
dec
fisubrl
or
shrb
xor
scas
xor
mov
adc
daa
shrb
inc
fsubl
jle
shlb
mov
or
and
and
mov
test
xor
add
ljmp
je
aaa
jb
mov
or
cwtl
outsb
aas
dec
jp
cwtl
mov
ja
pop
push
mov
push
pop
repnz
ss
lods
lret
xorb
cmp
cld
nop
inc
movsb
pop
mov
sbb
lock
lret
jae
mov
je
mov
add
sub
mov
orl
cmpsb
and
inc
or
data16
pop
pop
es
xchg
jne
ficoms
mov
sbbb
pop
jp
aad
outsl
test
dec
rcl
inc
aas
push
test
cmp
stos
pushf
or
adcb
ss
and
push
in
inc
sbb
dec
adc
sbb
out
xchg
testl
and
xor
nop
mov
enter
mov
xchg
jmp
jbe
mov
adc
pop
adc
insb
add
lock
jle
push
sub
mov
sub
adc
add
inc
push
hlt
js
pop
mov
repnz
inc
and
mov
pop
sbb
stos
pusha
inc
adc
sbb
test
popa
incl
and
addr16
les
jle
mov
dec
xchg
jg
pop
adc
push
mov
es
xchg
or
xchg
inc
adc
inc
or
mov
inc
jp
pmulhuw
mov
jb
and
sbb
lea
fcmovnu
xchg
sbb
or
inc
clc
mov
insb
sbb
inc
frstor
mov
inc
jae
sahf
mov
or
jle
mov
roll
gs
test
andb
movsl
clc
mov
pop
xchg
cmp
orl
stos
out
cmp
aad
dec
add
adc
mov
pop
push
mov
mov
es
pop
adc
mov
dec
into
rdtsc
cmpsl
sarw
mov
cmpsb
mov
or
push
dec
imul
mov
mov
push
aas
push
mov
jb
bound
xor
es
test
and
in
pop
mov
inc
adc
adc
sarl
popf
mov
mov
bound
and
mov
xchg
fcmove
cmpsb
es
test
addl
out
dec
push
and
mov
and
add
fildll
movsl
push
sbb
insl
xor
jp
push
jg
mov
push
scas
pop
in
addb
adc
push
xchg
mov
subb
push
jg
arpl
lds
sbb
xchg
bound
mov
addl
push
pop
inc
pop
adc
jg
adc
mov
mov
cmpsl
jno
inc
jge
cmc
sbb
or
jg
mov
hlt
js
repnz
call
inc
add
jl
inc
dec
movsl
jle
mov
mov
jmp
enter
ret
cmp
in
test
xchg
lahf
cmpsb
mov
jl
pop
leave
movsl
fdivrs
ss
lods
movb
and
out
pop
dec
andl
dec
js
cwtl
lods
inc
xchg
mov
mov
inc
lock
jae
decb
adc
sbb
sbb
mov
push
and
in
jnp
stc
fdivrs
mov
jg
pop
sbb
add
add
add
jbe
dec
lds
pop
inc
and
inc
iret
inc
test
rorb
int
dec
test
dec
mov
cmc
repnz
and
je
inc
arpl
dec
loope
mov
inc
fsubrl
sub
xchg
cmp
mov
inc
sbb
in
xorb
outsb
jae
clc
test
xor
cld
lods
cmp
test
jo
scas
gs
sub
dec
clc
leave
dec
shr
and
xchg
jb
test
test
leave
adc
mov
push
push
jmp
aam
clc
inc
sub
js
jne
adc
sbb
and
jo
leave
mov
rclb
imul
dec
mov
xor
lock
loope
mov
push
dec
fbstp
ret
xchg
lds
sub
pop
mov
mov
aam
aam
pop
and
sbb
stc
das
add
cmp
sbb
mov
mov
pop
test
test
lds
inc
push
push
jp
sti
inc
aam
pop
cltd
in
mov
aaa
cmpsl
or
movsb
repz
cld
ror
vpmacsdqh
out
jmp
cwtl
inc
xchg
cld
stos
and
lods
lock
cs
xchg
cmp
push
push
add
mov
xchg
notl
repz
pop
loope
outsb
inc
mov
sarb
aad
adc
sbb
inc
adc
push
stos
jb
aaa
jecxz
andb
jecxz
add
test
rcl
out
nop
ss
mov
repz
jae
pop
cmc
ret
nop
in
xor
cmc
jnp
add
ficoml
jge
stos
adc
cmpsb
push
loopne
and
imul
bound
add
lea
mov
jo
mov
xchg
jne
add
sbb
fs
mov
pop
cmp
push
rclb
xor
pop
sbb
dec
mov
push
cmpsb
or
push
aad
add
lahf
in
add
loope
out
shlb
and
ret
push
or
cmp
pop
rclb
sbb
cli
xchg
cmc
test
addps
shlb
loopne
mov
mov
mov
or
pop
cmpsb
inc
jo
cmp
mov
dec
clc
cmp
cwtl
inc
mov
fisttpl
out
dec
clc
xor
call
xor
inc
pop
insl
test
mov
push
ljmp
jmp
aas
test
ja
cmp
les
sti
lret
push
mov
cmpsl
int3
test
insb
rclb
dec
pop
push
lret
push
inc
shrb
aad
add
rolb
cwtl
add
and
shrl
jmp
adc
pusha
nop
push
xchg
mov
inc
and
mov
pop
icebp
popl
sbb
cmp
dec
or
inc
in
adc
inc
push
les
push
inc
pop
lea
movsb
push
ret
mov
lods
xchg
mov
pop
stc
js
xlat
inc
cmp
or
adc
enter
sub
xor
nop
call
dec
pop
js
and
je
push
shlb
in
inc
jg
in
mov
lcall
mov
dec
sbb
dec
inc
mov
sar
mov
mov
cs
rcrl
xchg
and
xchg
cmpsl
adc
jp
mov
in
mov
mov
add
sarl
test
movsl
sub
mov
xor
cld
adc
scas
add
into
into
cmp
in
shl
test
jnp
arpl
jmp
mov
xor
jae
mov
lods
out
fisubs
xor
in
mov
push
test
arpl
mov
movsb
sub
es
xchg
mov
jb
stos
aas
imul
jg
adc
pop
cmpsb
ds
movsl
inc
or
insl
xchg
and
pop
pop
jg
xor
xchg
mov
jp
in
push
shlb
and
inc
push
pop
sub
test
movsl
pop
mov
test
push
shrl
scas
lret
or
movsl
hlt
shrl
loopne
xchg
mov
das
cltd
pop
fwait
xchg
pop
jecxz
mov
sbb
dec
pop
repz
pushf
cld
mov
pop
out
ud0
pop
cmp
rolb
outsl
adc
xorb
lahf
cmp
adc
and
addb
les
cmpsl
inc
in
repnz
popa
inc
mov
cmp
lods
mov
mov
push
mov
sbbl
pop
pop
pop
sbb
ja
loopne
push
loop
xchg
xor
rorl
js
loopne
popl
jl
enter
mov
cwtl
shl
and
hlt
stos
lcall
leave
mov
mov
mov
fimuls
lock
adc
and
jno
sti
loop
xchg
push
jecxz
cmc
push
cmp
lds
mov
sbb
xor
dec
inc
xchg
test
mov
mov
xchg
adc
sti
icebp
imul
shlb
mov
inc
scas
push
jmp
mov
sti
inc
shl
xchg
repnz
daa
loopne
pop
sbb
sbb
pop
and
test
and
loope
adc
xchg
and
add
fisttpll
and
in
push
lea
daa
mov
inc
cwtl
jbe
lock
pop
jl
sbb
das
sti
mov
xchg
lock
aas
call
pusha
addr16
ja
add
push
ja
loopne
adc
pop
xchg
jg
imul
inc
rolb
xchg
popf
mov
inc
dec
xchg
push
lock
jo
jo
pop
loopne
imul
xor
pop
pop
stc
mov
in
dec
xor
mov
xor
add
dec
js
xchg
out
push
jg
out
and
mov
bound
sbb
add
int3
cmp
pop
dec
fistpll
fwait
pop
sarl
push
je
pop
sti
sub
fisubrl
rcrl
stos
and
mov
mov
fstpt
and
jmp
inc
mov
aas
and
add
xchg
test
xchg
add
or
lret
rdtsc
dec
inc
pop
lea
loop
cltd
sahf
or
mov
sub
pop
push
sarb
std
cmp
push
inc
xor
push
jo
testl
loope
lods
inc
iret
divb
xchg
push
xchg
addl
repz
ja
pop
jo
sub
in
mov
jmp
lods
adc
mov
mov
aaa
jecxz
js
or
pop
pop
xor
mov
inc
pop
and
pop
xor
inc
test
cwtl
scas
push
adc
arpl
add
ja
cmc
cmc
loope
push
push
std
cs
push
fldenv
lods
xchg
xchg
cmpsb
sub
xor
inc
fwait
push
in
pop
loopne
xlat
out
xlat
or
xor
jge
add
lds
adc
sbb
mov
pop
sarb
push
jecxz
xchg
mov
and
cwtl
popa
sbb
ret
jl
mov
dec
cltd
jnp
aad
sub
mov
mov
cmp
mov
inc
and
xchg
mov
add
push
or
push
adcl
pop
test
movsb
movsl
cmpsl
lock
insl
lret
lcall
ret
add
adc
lcall
cmovle
push
sub
out
scas
sub
inc
mov
fisubs
add
popa
dec
dec
lods
push
cmp
divb
adc
push
pop
push
and
je
mov
push
dec
sbb
js
aas
jl
jg
push
push
mov
sbb
xchg
pop
cltd
inc
inc
inc
dec
inc
movl
gs
fisubl
mov
pop
adc
push
jbe
lahf
aad
pop
subl
mov
loopne
inc
lea
lret
iret
xor
and
xor
aad
int
fcomip
test
clc
add
hlt
loop
sub
jne
xchg
outsb
out
cltd
cmp
mov
bound
dec
xor
xchg
add
insl
stos
pop
cmc
inc
out
mov
add
push
outsl
cmp
loop
pop
sarb
and
cwtl
insl
cmp
nop
dec
mov
shll
push
dec
aam
loope
mov
mov
aaa
ficoms
inc
out
and
popf
scas
mov
xor
out
fldl
mov
daa
push
xchg
cmp
push
xchg
dec
cmp
lock
pop
pushf
into
jo
popf
push
ret
add
cmc
cmp
stos
mov
pop
mov
jecxz
out
jmp
mov
cmp
mov
mull
mov
test
idivb
rcrb
jno
mov
add
mov
xor
jnp
rol
jge
push
mov
cli
imul
mov
loop
pop
in
shrb
adc
lcall
aaa
add
dec
or
and
sub
push
mov
popa
xchg
imul
xchg
cmpsb
sbb
cmp
das
lret
and
fldcw
ja
aam
inc
sbb
lods
push
int
shrl
fisttpll
hlt
hlt
or
clc
ljmp
loopne
push
sbb
mov
jbe
xor
fs
add
mov
out
mov
mov
ss
lods
sbb
mov
adc
sbb
mov
add
clc
es
cmp
lods
sub
jp
pop
clc
mov
out
subl
dec
cmpsl
cmp
dec
mov
cltd
or
jg
lods
mov
add
inc
int3
lcall
faddp
int
cmpsl
jecxz
fdiv
adc
imul
mov
adc
mov
push
cld
js
lret
and
aas
push
mov
je
pop
pushw
lahf
jle
push
out
add
dec
jno
pop
mov
pop
jb
mov
sub
cmp
lock
sub
mov
push
bound
std
sbb
push
lahf
rolb
cli
movl
les
test
mov
ja
lock
inc
movsl
or
std
dec
xor
push
push
adc
inc
push
jbe
data16
clc
ss
cltd
push
mov
and
pushf
sub
inc
pusha
push
mov
push
pusha
xchg
scas
aad
push
push
or
xchg
xor
pushf
fcmovu
push
pop
cltd
or
mov
xor
push
dec
mov
xchg
inc
pushw
pop
xchg
push
or
ljmp
roll
jecxz
lcall
push
cs
and
xchg
add
adc
cmp
mov
aam
xor
stos
mov
xchg
mov
pop
or
daa
loope
inc
and
xchg
sbb
mov
or
sub
mov
ret
pop
jbe
int3
cmp
xchg
dec
pop
sbb
into
sub
les
pop
adc
loopne
jno
mov
xchg
and
test
fcmovbe
mov
pop
xor
xor
sti
fwait
cs
fs
inc
test
jge
pop
lea
fidivs
scas
in
sbbl
leave
or
jns
or
enter
insb
loopne
fidivrl
cld
loop
xchg
push
inc
jno
jl
outsl
add
stos
cmp
xor
xor
imul
aas
push
test
pop
test
dec
push
jle
push
scas
inc
cltd
jo
sub
cmp
add
add
cmp
out
hlt
adc
add
or
aam
sbb
xor
notb
dec
xchg
mov
aad
aas
push
mov
imul
mov
test
jb
cmc
lds
mov
push
push
mov
ret
dec
clc
cli
inc
aas
loope
dec
add
push
adcl
or
js
lcall
rcrb
mov
lahf
lock
lods
inc
and
mov
or
xor
push
dec
dec
inc
and
or
sar
loopne
xorb
loope
dec
push
push
cmp
in
stos
jmp
lods
cli
dec
pop
cmp
push
ds
sti
inc
clc
sub
cmp
xchg
pop
mov
shlb
stos
bound
pop
insl
jmp
add
notl
out
into
add
stos
imul
daa
test
ret
sbb
fdiv
mov
jle
sbb
popf
sub
addb
mov
and
fcomi
es
xchg
cmc
mov
cs
add
outsb
push
xor
leave
dec
loope
cs
push
adc
in
movsb
xor
jmp
dec
cmc
inc
xchg
inc
pop
test
arpl
inc
pushf
or
les
inc
jle
and
dec
jae
xchg
and
lcall
xor
cmp
ret
mov
movsl
push
lock
inc
xchg
sub
mov
shlb
cli
cmp
mov
inc
push
clc
push
adc
dec
or
jg
jo
fdivrs
popa
cmp
repz
pop
stos
xorb
clc
in
or
aad
je
popf
out
movsl
inc
add
push
add
mov
sub
sub
push
out
imul
int
or
mov
lret
rorb
test
stos
mov
aaa
cmp
outsl
push
js
movsl
sub
cs
scas
or
test
ret
je
hlt
orl
enter
push
pop
push
mov
mov
arpl
or
push
cmpsb
nop
imul
sahf
mov
or
inc
fs
or
push
std
inc
insb
cmp
neg
pop
mov
adc
lcall
outsb
push
lds
push
loopne
cmp
sti
mov
sub
je
mov
xchg
scas
push
or
cmp
movsb
sub
inc
cmp
cltd
xchg
test
loopne
adc
add
pop
enter
push
push
push
push
insl
or
outsb
dec
cmpsb
pop
ljmp
pop
arpl
iret
icebp
pushf
mov
stc
cmp
or
mov
dec
jb
cmpxchg
fsubrl
push
add
lea
inc
mov
jb
popa
fisubrs
and
es
sub
cmp
xorb
pop
stc
stos
ja
js
lret
repz
pop
das
cli
repz
sbb
sbb
dec
push
dec
lods
cmc
jns
push
inc
andb
xchg
push
lods
cmp
das
jno
push
mov
mov
mov
lock
cmp
adc
cmpsl
scas
popf
pop
xor
stos
lea
into
ss
adc
sbb
cs
sub
scas
popa
jmp
pop
sbb
or
push
insb
jl
or
lcall
xor
mov
outsb
add
nop
push
mov
aam
and
pushf
sbb
ret
pop
mov
loopne
cmp
cli
dec
roll
sub
push
loope
cmp
dec
jecxz
scas
in
mov
adcb
loopne
mov
push
sub
out
push
or
les
jp
sub
and
fwait
in
or
mov
sub
sub
ror
xchg
inc
sahf
pop
xchg
push
andl
xor
aam
insb
mov
push
orb
mov
rorb
mov
insb
mov
shlb
jg
or
outsl
inc
push
mov
mov
fs
mov
mov
inc
xor
push
pop
insl
shlb
fwait
cli
jb
or
dec
xor
iret
ret
icebp
cmc
aam
or
jmp
xorl
pop
lret
loop
je
test
cltd
call
mov
enter
push
les
sub
adc
nop
jg
call
jl
or
lea
jno
neg
ss
roll
push
xchg
aaa
push
loop
dec
sub
mov
add
mov
push
mov
jle
pushf
stos
mov
or
add
lret
inc
push
mov
pop
roll
lock
int
inc
mov
gs
or
mov
notl
sbb
daa
pop
inc
test
jae
adc
or
add
data16
jo
cmp
dec
pusha
fisubl
daa
xlat
cmp
mov
addr16
adc
xchg
into
adc
jno
fisttpll
dec
xor
jno
inc
das
jle
dec
lret
sahf
xchg
lcall
xor
push
negb
gs
pop
jp
inc
stos
cmp
sub
mov
shrb
adc
or
test
pop
sar
xor
push
adc
inc
cmc
xor
dec
or
pminub
xchg
rcr
out
lret
cmc
loope
aas
test
test
xorb
push
ljmp
nopl
xchg
ljmp
mov
push
lcall
mov
cmpb
mov
bound
mov
add
push
out
loope
shrb
into
ss
xchg
sbb
push
pop
lret
adc
fdivs
cltd
dec
adc
add
clc
imul
adc
xor
and
sub
mov
xlat
daa
lds
movsl
rclb
and
loop
je
nop
jne
fbld
jecxz
sti
mov
icebp
test
aad
subb
js
mov
xchg
sub
popf
lods
xlat
js
dec
jl
push
mov
js
cmp
movl
inc
inc
pop
sub
insl
pushf
add
mov
nop
xor
mov
jle
nop
call
ljmp
bound
mov
popa
into
jb
dec
hlt
or
jecxz
hlt
mov
cmpsb
inc
in
inc
pop
push
outsb
aaa
pop
notb
hlt
cmp
daa
adc
xor
adc
pop
xor
and
ljmp
mov
add
inc
adc
sbb
add
push
cmpsl
xor
xor
push
xchg
push
cwtl
mov
addps
icebp
pop
adc
xchg
fcom
mov
or
iret
enter
shlb
mov
fmull
enter
xchg
pop
add
mov
mov
rclb
mov
cmp
cwtl
add
add
dec
and
dec
loope
enter
inc
jnp
jg
mov
cltd
pop
retw
addr16
mov
dec
cmc
andl
xorb
xor
or
into
lret
fstpl
push
pusha
inc
insb
cmp
xchg
push
and
mov
push
xor
lods
push
addb
pushf
add
and
xchg
dec
fs
pop
jmp
dec
pop
dec
insl
dec
ja
orb
loop
and
or
scas
outsl
sbb
leave
add
adc
dec
adc
add
xlat
in
fisttpll
cltd
roll
mov
lcall
sub
cltd
negl
shlb
sbb
subl
mov
fcoml
mov
inc
inc
fs
lock
mov
movsl
push
dec
add
andl
pop
pop
jns
dec
sub
loop
mov
push
icebp
xchg
sub
es
sbb
mov
test
stos
xor
sbbl
sahf
adc
and
dec
or
jecxz
nop
mov
test
or
imul
xlat
inc
mov
adc
icebp
inc
icebp
jg
add
mov
mov
and
mov
cmpsl
adcl
mov
jge
rcrl
sub
mov
movsb
push
inc
repz
loop
loop
inc
leave
inc
in
inc
inc
cmpsb
sbb
cmpsl
out
fisttpll
xor
sub
push
mov
pushf
loop
add
ss
sub
je
jnp
xchg
pop
pusha
rcrb
jbe
and
push
lock
mov
mov
sbb
mov
jl
dec
inc
mov
pop
push
jo
jo
fld
adc
jp
rorb
and
dec
fsubrs
mul
loopne
jbe
inc
sqrtps
or
push
out
mov
or
pop
stc
pop
js
mov
ljmp
cmp
pop
shl
movups
mov
mov
sbb
enter
insb
mov
mov
jmp
call
les
sub
xchg
dec
push
subl
sub
sub
testb
inc
das
add
add
addb
inc
mov
sbb
fwait
dec
movsb
sub
gs
cld
repz
xchg
push
sbb
insl
cmp
adc
and
mov
lods
mov
mov
test
dec
or
insb
test
cmp
xchg
inc
cld
push
mov
mov
xchg
mov
adc
mull
xorb
addr16
test
roll
dec
sub
enter
mov
mov
jbe
mov
stos
call
pop
and
xchg
xchg
loop
sbb
mov
ja
jbe
inc
das
hlt
pop
je
popa
fcomps
es
add
out
xchg
mov
loope
das
clc
in
push
leave
sub
xchg
jns
daa
cwtl
mov
cmpsl
xchg
sbb
jno
mov
js
sbb
pushf
sahf
dec
fbld
jno
outsb
lcall
xor
mov
xchg
push
dec
and
std
sbb
xor
sub
push
mov
mov
imul
mov
in
ret
push
xchg
sub
loope
pusha
movsb
pop
test
ret
cmp
sub
or
iret
mov
mov
mov
jp
pop
cmp
dec
call
stos
push
sub
dec
mov
in
mov
sbb
loop
xor
lods
sbb
clc
sub
xor
add
loop
outsl
sub
jbe
xor
sub
or
mov
xchg
and
gs
mov
or
outsb
lret
cmp
add
xor
adc
add
push
int
push
or
mov
push
cmc
ret
imul
add
mov
imul
inc
ret
div
sbb
shlb
add
dec
xlat
rclb
insb
mov
imul
mov
sbb
iret
or
cmp
adc
fiadds
mov
jne
push
in
sub
idivl
roll
adc
mov
stc
test
cmpsb
push
cmp
dec
hlt
test
leave
ljmp
pop
jne
mov
mov
lods
add
jle
jno
je
and
mov
data16
in
xchg
data16
or
mov
shrl
xor
int3
insb
push
inc
lock
xor
aam
inc
imul
fiaddl
cli
and
or
int3
and
clc
dec
push
icebp
or
std
mov
push
shlb
xchg
sbbl
xor
test
sbb
roll
xor
or
and
adc
cmp
add
jp
mov
movsl
mov
inc
and
cmc
pop
mov
lahf
loope
push
mov
rolb
insl
and
es
iret
cwtl
scas
or
xchg
pop
cltd
outsl
mov
mov
cmp
outsb
jno
adc
xchg
out
js
xor
push
xor
mov
lock
jle
loopne
push
jno
mov
rcrl
mov
jle
add
cli
inc
cld
or
and
push
test
cmp
mov
cmp
shll
or
iret
test
decb
xor
cmc
loope
mov
dec
mov
or
clc
lahf
or
frstor
xor
loop
sub
cli
out
push
lcall
jge
outsb
mov
sub
rcrl
faddl
push
out
imul
mov
mov
cmp
jecxz
jecxz
insl
push
jns
xor
xchg
leave
adc
or
sub
and
lahf
cs
sub
dec
adc
inc
scas
in
sub
stos
addr16
inc
inc
xor
or
cmpsl
call
sub
sarb
and
pop
dec
jnp
pusha
fsubl
pop
dec
cmpsb
mov
push
mov
shl
lcall
stos
ds
pop
adc
fs
inc
mov
and
adc
lods
xlat
cmpsl
sub
test
sahf
movsb
push
xchg
or
mov
cmp
lods
les
xchg
mov
icebp
hlt
jne
aad
and
cmc
into
dec
bound
mov
fnsave
clc
daa
out
and
outsb
sub
outsl
insl
xor
lods
push
pop
scas
cltd
add
mov
push
push
int3
sub
or
std
push
sbb
stos
in
lods
stc
repnz
test
add
addr16
outsb
popf
xor
aaa
outsl
rcr
jb
sbb
repnz
xchg
cs
xor
mov
int3
cwtl
xchg
jle
jo
push
sbb
gs
adcb
cld
js
push
mov
xchg
addl
mov
outsl
xor
push
lret
or
or
sbb
js
movl
js
add
test
xchg
add
mov
fsubp
and
fcmovb
mov
cmp
lock
call
pop
pop
hlt
imul
in
xchg
xchg
ss
mov
dec
add
fs
xchg
std
pop
test
mov
sbb
jge
sbb
xorb
clc
roll
gs
mov
cmpsb
outsb
xlat
xor
inc
scas
push
loop
les
xchg
or
lds
stos
shrb
aaa
into
movsb
or
hlt
pop
mov
push
cli
xor
loopne
fidivl
sub
ljmp
call
testl
add
ret
mov
test
xor
dec
and
mov
jbe
adc
sub
subl
mov
outsb
clc
loopne
bound
add
lods
pop
or
dec
enter
jbe
fimull
fwait
xchg
pop
rcrb
mov
mov
mov
sbb
xchg
or
js
pop
jo
sbb
xchg
lret
shlb
sbb
push
aaa
ret
enter
dec
rcll
arpl
in
mov
sub
sbbb
mov
das
test
fidivrs
loopne
lea
and
jo
fcoms
cld
call
add
sbb
loope
mov
xor
pop
mov
int
add
sbb
mov
add
arpl
call
mov
dec
fnstenv
out
xchg
inc
sarl
mov
inc
mov
paddb
fs
loop
loope
push
lcall
xchg
sbb
adc
data16
flds
or
in
lcall
pop
mov
jbe
and
and
add
mov
xor
sbb
icebp
shlb
lods
mov
xchg
and
push
or
shl
ret
jo
insb
add
mov
je
push
xchg
cmp
out
mov
mov
add
cmc
xchg
mov
ja
push
daa
pop
pushf
pop
ficomps
out
test
pop
and
clc
add
jl
mov
je
lea
aam
push
add
arpl
bound
xchg
cmp
xchg
push
jb
sbb
add
push
dec
inc
mov
fcoms
xchg
subl
xor
or
sub
push
lock
out
in
mov
sub
in
dec
test
shr
add
dec
xlat
mov
in
ficompl
mov
or
and
cmp
dec
std
sbb
push
mov
and
push
sub
das
loope
movsb
pusha
mov
xchg
and
and
mov
or
push
pop
call
jle
movsb
mov
jno
xor
pop
mov
dec
add
cmpsb
pushf
inc
dec
fwait
inc
fcomps
fwait
je
and
into
lds
sar
lret
out
int3
addl
lcall
lods
jmp
loopne
mov
sbb
hlt
cmc
out
sbb
or
daa
popa
jnp
xchg
push
arpl
pop
push
jnp
je
sbb
dec
js
cmp
mov
add
sbb
add
stc
out
pop
or
pop
ss
or
out
mov
loop
mov
mov
fimull
pop
js
push
mov
xlat
out
add
mov
mov
mov
sti
dec
sbb
ret
push
cwtl
cmp
imul
pop
mov
outsb
mov
aam
int
and
lret
mov
sbb
fisubrs
sub
cwtl
fiadds
iret
add
adc
push
fiaddl
aam
push
mov
pop
shlb
or
inc
imul
cld
sbbb
push
stc
xor
or
cmp
jle
hlt
js
cmp
scas
xlat
cmp
loope
mov
jl
fucomi
out
adc
faddl
mov
mov
add
xor
popa
in
xor
pop
in
ret
shlb
orb
cld
push
loope
les
dec
sbb
dec
inc
call
ja
dec
in
cwtl
cld
sub
mov
cmp
mov
pop
rol
das
xor
sbb
lahf
hlt
clc
jo
sub
pop
addr16
das
dec
sbb
pcmpeqb
xchg
lock
adcb
mov
loopne
and
ret
stos
xchg
xor
sbb
and
mov
xor
cmp
mov
in
stos
stc
lods
pop
or
clc
mov
movsl
pusha
stos
push
and
dec
sahf
lods
cltd
add
sbb
fiadds
jbe
inc
and
pop
insl
add
aas
sub
add
sbb
lds
rol
lods
lods
push
je
jo
pop
inc
and
xchg
aam
xor
xchg
mov
es
das
or
mov
fcoml
pop
imul
lods
dec
and
lret
mov
cmp
sbb
xor
add
push
fwait
sub
rolb
hlt
sub
call
test
aas
xor
sub
pop
jne
jb
loopne
push
mov
sbbl
lret
mov
in
call
mov
xor
ret
jnp
loope
insb
rcrb
popa
fmuls
test
cmp
push
jecxz
inc
push
ds
addr16
das
loop
xchg
rcrb
pop
sub
mov
pop
out
cmpsl
push
push
clc
gs
aam
and
aas
cli
sub
cmp
pushf
xor
shlb
sbb
lock
adc
dec
xchg
push
les
scas
lret
xchg
in
dec
stos
mov
sub
fstpt
dec
call
into
fs
sbb
jp
enter
dec
popa
mov
and
mov
out
push
jns
cmp
xchg
push
sbb
inc
mov
sbb
xor
jno,pt
shrl
inc
pop
pop
mov
js
pop
push
or
jmp
rclb
dec
stos
fiaddl
test
xchg
repnz
mov
mov
pop
inc
pop
mov
or
add
loop
arpl
inc
add
lea
xor
add
addl
fadds
cmovo
adc
dec
or
or
dec
add
imul
ja
addl
dec
mov
rorl
xorl
cwtl
mov
xchg
xor
in
jae
sbb
gs
rorb
call
and
adc
adc
mov
jo
mov
and
inc
push
xor
fisubs
jnp
push
mov
jp
xor
js
testb
jle
cwtl
push
cmp
mov
push
ret
jmp
andl
call
cmp
or
in
or
ret
imul
xchg
cmpsb
lock
scas
add
push
jg
outsl
rorl
mov
sarl
mov
xchg
rcr
sub
adc
xor
xchg
mov
and
and
out
xor
dec
or
popf
mov
and
adc
jp
xchg
dec
rclb
sahf
aad
roll
fcmovnu
sub
es
stos
or
pop
sbb
dec
iret
enter
inc
mov
aas
orb
sbb
add
test
cmc
pop
movsl
ficoms
jmp
ljmp
adc
or
roll
mov
and
mov
pop
ja
imul
xchg
push
xlat
arpl
rcrb
les
xorb
in
lea
jge
fidivrl
out
sti
in
mov
bound
adc
add
cmp
sbbb
or
test
lahf
pop
mov
inc
jnp
pop
adc
mov
out
pop
test
sbb
dec
movsb
mov
dec
inc
fimull
pop
pop
mov
cltd
xor
cmp
jl
jno
scas
adc
mov
mov
hlt
mov
scas
insl
and
jno
pop
cmp
stc
in
repz
jp
jbe
movsb
mov
jns
xor
arpl
xor
or
out
sbb
push
sbb
lret
sbb
add
add
aas
push
cld
stc
rolb
out
sbb
pop
lret
mov
push
shl
and
fists
rclb
or
add
add
andl
cmpsl
or
movsl
insb
sub
test
sbb
das
add
mov
sub
mov
sbb
dec
enter
add
lock
stc
and
pop
cmpsb
pusha
xlat
cmp
in
jl
inc
or
aad
sti
adc
fiadds
lods
mov
and
xor
arpl
mov
sub
cmp
loop
test
pop
cmp
add
es
push
fnsave
dec
xchg
addr16
xchg
ds
pop
cli
xor
mov
jb
daa
and
cmp
adc
daa
push
sub
sbb
xchg
ret
mov
pop
sbb
jg
sbb
ret
xor
jb
pop
mov
push
imul
and
jmp
mov
jp
cmp
push
cs
lret
std
lcall
imul
inc
insb
add
ljmp
lret
outsl
inc
aaa
mov
inc
jecxz
jns
rcll
hlt
inc
in
aaa
sbb
mov
cmp
xor
inc
and
xor
test
cmp
lret
and
inc
dec
je
adc
ss
jns
movsb
mov
daa
fs
inc
mov
call
mov
cli
jmp
adc
in
jmp
ja
mov
sub
jle
jecxz
mov
ljmp
jo
sub
or
into
fs
pop
push
sbb
mul
addr16
mov
dec
dec
fisttps
hlt
in
sub
lods
and
cli
jne
xchg
dec
mov
jle
and
hlt
cmc
mov
fldt
pop
dec
jge
bound
fstl
rorb
lea
loope
movsl
aam
pop
jbe
rorb
mov
lret
xchg
fst
scas
and
ret
ret
imul
mov
jp
les
ljmp
addl
pop
js
lock
sahf
mov
je
and
dec
mov
fcomps
pop
pop
push
pop
scas
rcll
ret
cmp
dec
and
outsb
jp
xor
fisubl
imul
jno
shll
adc
jno
dec
jbe
clc
xorl
nop
xor
stos
test
inc
cmp
mov
xchg
fnstsw
xlat
push
rolb
adc
popa
mov
movsl
faddp
insl
add
daa
std
add
andl
or
cmp
fcomi
aad
dec
out
fwait
xchg
sub
cs
add
inc
cmp
mov
loopne
jb
push
daa
xor
outsl
fstl
dec
dec
push
cmp
xchg
aad
dec
insb
stos
cli
mov
push
inc
mov
mov
jge
in
pextrw
and
leave
movsb
inc
iret
out
and
pop
push
inc
imul
pop
jo
inc
test
mov
jge
jo
pop
movsb
test
adc
mov
inc
xchg
dec
mov
and
popa
lock
int
mov
push
aaa
popl
cmc
sub
test
pop
or
mov
sbb
mov
mov
test
aam
mov
cmp
stc
sbb
pop
stc
sub
jecxz
xor
aas
jl
sbb
lock
push
add
ffree
lods
rorl
add
pushf
mov
cmpsb
dec
adc
imul
mov
jg
xchg
callw
insl
in
jnp
lea
mov
mov
adc
mov
loope
shl
sbb
movsl
mov
fucom
cs
push
loop
adc
mov
mov
ret
subb
jp
mov
mov
sbb
jo
dec
je
test
das
leave
or
xor
or
test
popa
or
mov
adc
pop
jno
stos
aas
mov
add
or
push
and
push
sti
dec
cltd
mov
sbb
xchg
add
mov
sbb
and
cmp
push
cmp
sub
test
push
or
mov
sbb
mov
mov
es
fists
les
jnp
dec
lcall
xor
stos
cmpsb
ret
cmpsl
push
push
iret
cltd
push
add
lds
nop
push
shll
and
add
inc
ljmp
clc
sbb
sbb
lds
addl
std
pop
pop
scas
ss
or
dec
out
aad
aad
out
xlat
xchg
movsl
aad
enter
repz
and
xor
pop
cmp
insb
cmp
or
sbb
lcall
mov
dec
push
push
out
xlat
ja
inc
jbe
test
fwait
lods
inc
ja
sbb
mov
in
mov
jecxz
dec
mov
push
sub
inc
ror
ret
adc
dec
push
lods
adcb
cmp
imul
gs
loopne
mov
popf
shll
jmp
icebp
add
in
dec
inc
hlt
push
movsl
imul
fisttps
mov
xlat
push
push
loop
pop
lea
cli
in
lea
hlt
push
mov
sbb
and
inc
arpl
fidivl
outsl
bnd
cli
nop
ds
mov
call
movsl
out
out
ja
sub
mov
sub
push
loope
sub
dec
inc
sar
pop
iret
and
in
inc
cmp
mov
rol
mov
nop
jg
mov
ja
sub
movsb
ljmp
scas
cwtl
or
fiadds
mov
fsubl
leave
mov
pop
sub
fcoms
lods
add
lods
push
mov
pop
mov
ds
lahf
into
push
dec
sbb
xchg
pop
movsb
push
mov
shl
clc
test
sub
popf
cmp
enter
lods
pop
mov
aad
push
outsb
push
mov
rorl
inc
or
das
sysret
xorl
dec
pop
int3
xor
mov
jno
jne
cmp
lret
add
mov
pop
mov
mov
sbb
mov
sbb
jge
xchg
mov
out
stos
leave
imul
jno
lea
push
shlb
push
scas
add
lds
adc
loope
cmc
aad
cmpsb
push
adc
inc
jp
mov
inc
aam
jecxz
pusha
xchg
inc
lock
lods
insb
aaa
leave
xor
adc
and
je
mov
pop
bound
sbb
xchg
es
int
and
lcall
test
addb
mov
jbe
js
in
and
cmp
movsb
fldl
fsts
mov
add
sbb
xchg
bound
fmuls
ret
cmpsl
xor
pop
jb
mov
dec
mov
push
dec
orb
mov
out
mov
shlb
jmp
ror
out
sbb
fidivrl
mov
addl
lahf
mov
shrl
fdivrs
xchg
inc
jnp
sbb
adc
ljmp
adc
loop
or
and
dec
xor
jle
xchg
mov
jecxz
call
loopne
or
test
test
xchg
xorb
lds
or
adc
inc
les
cmp
test
lret
xchg
mov
pop
sub
popl
insl
dec
mov
mov
repz
mov
out
ret
gs
outsl
stos
mov
jns
arpl
fnstcw
dec
pop
add
test
mov
add
push
jno
pop
adc
and
test
xchg
bound
and
push
mov
mov
iret
leave
cltd
jmp
punpckhwd
dec
adc
xchg
jecxz
test
sbb
int
inc
pushf
sbbb
les
push
insl
lcall
mov
lea
ds
jg
mov
loopne
hlt
mov
mov
mov
loope
mov
push
push
or
sub
push
ss
push
xor
mov
je
xor
sbb
sub
loope
lods
dec
and
xlat
je
or
jnp
pop
sbb
xor
lea
inc
mov
test
mov
lret
cld
jae
arpl
inc
jg
ss
rcl
mov
jbe
xchg
mov
cmp
fsubp
andl
push
pop
fsubs
push
mov
xor
dec
loope
jno
mov
mov
popf
xor
cs
mov
push
jae
mov
adc
push
hlt
dec
jnp
cmpsb
jge
call
inc
nop
mov
xor
cli
fwait
fs
cmpsb
fs
clc
scas
std
add
stos
test
cmp
jle
lds
std
mov
or
sbb
loopne
or
mov
loop
mov
pop
inc
call
and
das
cli
mov
mov
jae
sub
aas
ds
jl
orl
inc
dec
adc
mov
dec
cli
xchg
into
ret
jp
inc
fdivr
pop
je
lds
lahf
jge
fcomps
pop
nop
push
ljmp
lahf
adc
xchg
dec
xchg
orb
lgs
add
mov
push
rorb
sti
and
sub
lahf
jb
faddl
xorb
adc
cld
scas
scas
add
mov
lcall
or
add
dec
movsb
or
rorl
mov
mov
addb
lock
outsl
sbb
jge
jnp
inc
mov
jnp
mov
repnz
leave
movsb
ret
jle
ja
insl
call
es
lods
leave
jmp
inc
mov
sbb
jl
cmpsl
dec
mov
fidivl
nop
inc
jbe
jne
dec
addl
add
push
adc
lock
std
sub
incb
das
enter
outsb
adc
mov
stc
mov
inc
cmpl
enter
in
jp
and
or
insl
dec
jae
push
adc
movsb
sbb
movsb
add
das
mov
xchg
fistpl
xchg
cs
inc
je
mov
ljmp
and
test
test
mov
push
leave
and
or
mov
add
sub
push
lds
push
cld
pusha
pop
andl
lods
xchg
std
leave
lea
and
mov
pusha
ret
mov
fs
movsl
or
rol
test
xor
pop
or
dec
mov
mov
pop
pop
inc
enter
jmp
lods
cld
ret
sbb
fcomps
add
mov
iret
dec
cli
sub
lahf
cmovae
adc
push
mov
adc
jo
rolb
int
in
iret
cwtl
jmp
and
cwtl
addb
and
sub
sbb
mov
dec
js
push
dec
addr16
imul
in
jle
scas
xchg
mov
js
movsb
pop
movsl
cld
or
cs
jbe
stos
sub
mov
ficoms
jl
in
fisttpll
push
inc
mov
pop
test
sbb
cmp
mov
mov
jle
sarb
lcall
imul
lods
sbb
pop
mov
lret
gs
xor
clc
and
sbb
push
lock
adc
fmulp
sub
add
mov
sub
or
dec
cld
push
sub
mov
adc
les
inc
fdivs
xor
loopne
and
insb
sub
jno
hlt
arpl
bound
mov
shrb
mov
aas
jge
mov
add
fisubl
cmp
inc
fidivrs
push
dec
paddusw
pop
idivl
dec
out
xchg
outsl
jo
outsl
mov
leave
push
in
or
into
pop
enter
dec
sahf
pop
movsb
dec
pop
imul
lcall
sbb
ja
ljmp
in
and
shlb
add
pop
scas
pop
adc
xchg
insb
mov
sarl
xchg
test
sbb
rcll
or
adc
and
scas
mov
subb
or
es
adc
std
or
push
imul
outsl
pop
push
push
or
push
sbb
outsl
push
stos
adc
inc
cmpsb
cmpb
enter
mov
xlat
repnz
sbb
popf
jle
jl,pt
icebp
dec
insl
mov
sbb
mov
jmp
clc
lods
test
cmp
xchg
stos
and
pop
push
cmp
push
mov
scas
roll
ds
imulb
loopne
cltd
and
xchg
dec
mov
lock
outsl
pop
pop
adc
mov
es
cmpsb
xchg
jnp
sbbb
cmp
insl
xor
mov
sti
xchg
rcll
cmp
sbb
inc
mov
and
lret
adc
and
shrb
cmpb
xlat
icebp
add
and
inc
cmpsb
sub
xor
aam
clc
ret
mov
xchg
loopne
cmc
cmpsb
andl
adc
dec
or
cmp
fcom
rclb
add
cmp
loope
inc
cmc
int
les
push
inc
sbb
adc
or
leave
out
and
jg
cmp
dec
iret
loopne
aad
mov
inc
adc
insl
aaa
jecxz
lcall
dec
outsb
adc
arpl
mov
rclb
aad
add
mov
mov
mov
inc
inc
push
subb
pop
insl
sbb
repz
xchg
pcmpeqd
adc
outsl
sbb
inc
jge
jecxz
inc
dec
jne
subl
cltd
leave
dec
cmp
sub
add
inc
ret
lods
dec
xor
xor
lock
inc
pop
jmp
push
int3
jnp
push
mov
imul
xor
data16
lock
fdiv
cmp
pop
pop
sub
movsl
ret
nop
repz
cmpsl
imul
test
sub
cli
mov
lock
fmuls
sub
bound
mov
and
pop
push
xor
push
or
popa
daa
and
xchg
cmpb
int3
and
push
cld
add
cmc
xor
cmpsb
test
insb
push
sub
xchg
nop
mov
out
clc
add
fs
ror
jo
mov
daa
bound
pop
xchg
mov
sahf
adc
xchg
fdivs
mov
stos
sbb
inc
push
das
clc
sbb
dec
xchg
cmc
mov
ret
add
scas
dec
outsl
push
les
dec
pop
or
mov
push
lea
out
test
inc
loope
andb
sahf
fcomp
and
xlat
mov
imul
out
dec
lods
popf
sub
push
xor
sbb
mov
and
push
mov
mov
xchg
adcl
addr16
push
lods
jp
in
and
mov
adc
push
sub
inc
imul
pop
fiaddl
or
in
movsl
sti
mov
adcb
pushf
pop
push
mov
sub
cmpsl
mov
jno
mov
cmpsl
loop
adc
mov
ljmp
inc
shlb
bound
xchg
sbb
orl
fsubl
decb
xor
mov
push
inc
inc
add
rorl
sub
push
int3
or
jl
inc
lods
push
rorb
pop
xchg
fiadds
mov
xor
mov
movsl
es
mov
test
mov
sub
push
mov
dec
into
pusha
jge
test
or
cmp
mov
pop
call
add
or
imul
xor
lret
inc
add
rcrb
lds
xorb
es
xchg
sub
ss
ja
jne
inc
push
dec
sbb
notb
pop
loope
hlt
lret
mov
push
lahf
pop
xchg
ss
cmpb
inc
repz
dec
lcall
leave
pusha
addr16
hlt
inc
out
mov
pusha
adc
js
fmuls
lds
cmp
lcall
sub
mov
aas
and
and
inc
pop
pop
rorb
push
mov
sub
call
cmc
mov
cmp
push
icebp
test
icebp
aad
mov
mov
dec
inc
sti
jge
push
mov
add
je
xchg
test
mov
sbb
mov
or
push
jmp
jge
pusha
bound
dec
sbb
dec
in
lock
adc
sbbl
mov
fmull
sahf
dec
cmp
pop
mov
sub
sbb
pop
cli
push
shll
inc
push
adc
xchg
aam
dec
in
mov
decl
inc
push
add
aas
cli
mov
adc
lret
pusha
and
fs
scas
daa
add
cmpsb
dec
aad
movsl
cs
mov
cmc
and
maskmovq
idivl
cmp
loope
sub
mov
and
push
lds
aam
roll
mov
pusha
into
cli
push
rorl
jp
lods
test
aas
mov
fnstsw
mov
test
push
push
or
test
or
stos
xchg
insb
cmpsb
sub
sbb
stos
cwtl
xor
pop
push
js
enter
jecxz
mov
lods
jge
mov
push
fadds
arpl
cmp
call
pop
movsb
icebp
stos
test
cld
sar
inc
outsb
enter
cs
push
xlat
and
aam
mov
cmp
adc
add
mov
mov
mov
mov
xor
in
xchg
addl
or
outsb
or
lods
adcl
test
jns,pn
dec
pop
lea
and
cmc
cltd
call
push
adc
mov
je
adc
cmc
push
xchg
pop
adc
add
mov
adc
jle
xchg
jno
movsl
lds
dec
ret
aam
cmp
call
iret
push
or
dec
cmp
cmp
and
mov
mov
shr
pop
and
fcoml
adc
jp
lret
push
push
js
sbb
xor
xchg
lock
enter
fistpl
push
rcrl
xor
or
lds
sahf
pushf
je
cmp
push
test
pop
cmp
xor
cmp
in
shll
test
dec
in
cmp
clc
lds
cmpsl
inc
pushf
adc
sub
mov
adc
push
xchg
push
lcall
pop
movsb
cld
icebp
jge
div
and
mov
js
cltd
adc
and
xor
insl
inc
jmp
jp
shlb
imul
ds
sub
dec
mov
pop
add
ds
out
pop
cwtl
mov
loopne
adc
push
mov
adc
sbb
call
addl
fnsave
movsl
push
icebp
jmp
or
shr
dec
fstpl
xchg
adc
cli
pop
fwait
push
test
loopne
xor
insb
pop
aaa
or
scas
and
pop
call
inc
rol
ja
xchg
sbb
mov
fistps
push
sbb
xor
xchg
loope
sub
xor
test
jne
pop
test
mov
xchg
icebp
push
sub
push
fsub
cmp
inc
and
or
sub
es
mov
jle
ror
addr16
leave
ljmp
repnz
and
mov
out
mov
push
and
insb
pushl
adc
ss
mov
outsb
movsb
lock
loope
or
adc
in
test
add
paddq
push
pop
out
mov
dec
std
popa
lahf
xor
out
push
mov
jmp
lods
xor
push
or
and
mov
je
inc
inc
roll
lock
mov
xchg
mov
filds
hlt
lcall
inc
xchg
mov
pop
aam
scas
js
ja
mov
lock
adc
pop
mov
fwait
push
mov
test
rorb
xchg
outsl
popa
adc
sbb
or
jecxz
lods
subl
mov
aam
aam
sbb
nop
lret
movsb
ljmp
mov
call
adc
xor
or
jo
adc
shrl
or
fcomp
pop
push
adc
xchg
push
or
call
cmp
mov
fs
jecxz
xchg
adcb
pop
xor
lret
fisubl
pop
dec
push
fadd
add
jl
sub
push
sarl
lock
jmp
clc
mov
xchg
fldenv
rorb
mov
fsubrs
mov
sti
xchg
addr16
stos
mov
out
and
das
push
out
fisubs
lcall
inc
cld
imul
push
orl
out
inc
imul
cmp
inc
mov
and
mov
cmp
sbb
lods
addl
pop
sbb
cmp
add
mov
mov
pop
push
inc
sub
mov
sub
shll
xor
xchg
mov
dec
pop
loope
popa
inc
cwtl
cli
ds
push
mov
mov
dec
sbb
das
xchg
andl
add
add
dec
pusha
xor
loopne
in
sub
lods
inc
mull
js
push
leave
mov
jno
cli
daa
mov
xor
jecxz
adc
pop
fidivrl
pushf
sahf
push
aam
sbb
mov
cmp
cmp
sub
and
jg
cmp
loope
add
cmp
mov
cmp
outsl
pop
clc
cmpsl
dec
lods
addb
addr16
psubd
cs
call
clc
inc
subb
lahf
pop
inc
fimull
dec
cmp
add
pop
jmp
in
test
js
outsb
je
subl
sahf
sbbb
js
imul
push
in
pop
out
cmp
fs
pop
mov
inc
dec
push
mov
nop
in
mov
lods
or
lret
cmpb
or
dec
cli
aam
cmp
push
adc
inc
or
dec
ret
fadd
shlb
mov
dec
std
aad
nop
fwait
jne
add
orl
cmp
adc
sbb
sbb
insb
sbb
cmp
pusha
jo
adc
cli
out
sub
or
cmp
fstpt
xor
lock
fsubs
inc
cmp
inc
cwtl
ljmp
mov
out
stos
lea
in
inc
pop
loopne
or
into
shll
add
inc
jp
add
icebp
mov
mov
or
into
int
jl
ss
cmpsb
mov
jnp
mov
mov
aas
jp
gs
and
sbb
xlat
jnp
fstl
or
and
inc
cld
in
pop
in
stos
in
mov
dec
sti
mov
insb
rcrb
subl
ss
les
lods
andb
adc
jo
hlt
xor
test
jne
je
sahf
dec
pusha
sti
lahf
xor
jmp
add
in
cmp
call
add
arpl
insl
loope
mov
ret
push
push
das
clc
outsl
jl
daa
dec
mov
lods
popa
movl
aas
sbbl
xlat
and
call
mov
push
sbb
scas
jo
cmp
jae
jbe
push
or
xorb
dec
push
fisttpl
pop
loop
icebp
sub
arpl
mov
or
jns
test
sbb
inc
add
insl
ficoml
mov
inc
mov
mov
test
jo
outsb
mov
add
int3
cmp
mov
aad
xchg
xor
pop
ds
mov
mov
hlt
adc
inc
adc
mov
fidivl
dec
pop
jno
push
je
aas
add
int
sti
dec
xchg
dec
paddq
or
lock
or
mov
js
mov
out
cmp
mov
loope
mov
stc
enter
and
push
mov
cmp
cmp
js
push
add
push
insl
fdivr
jns
xlat
loope
js
mov
or
xchg
test
shrb
mov
leave
popf
and
dec
decb
sbb
mov
lock
aam
sbb
or
add
shlb
enter
cmp
fidivrs
xor
ljmp
rorb
pop
mov
push
sub
push
sub
lds
cmp
out
jnp
dec
andb
push
add
sbb
jl
icebp
loop
push
push
es
adc
or
cli
mov
mov
movsl
stos
sub
mov
push
sub
mov
sub
dec
lret
inc
dec
pop
fwait
push
jb
lock
aam
insl
ret
push
fidivrl
lret
inc
aad
sbb
insb
cs
fdivrl
jmp
rcrl
test
add
push
fildl
movsb
dec
enter
orb
sub
sahf
leave
das
incb
loope
lock
pusha
imulb
addb
stos
and
jle
pushf
mov
adc
push
pop
pop
xchg
enter
xchg
push
imul
fnstsw
call
icebp
xchg
adc
push
xchg
rorb
jle
ret
ret
inc
fldcw
and
mov
mov
pop
mov
sbb
lods
fnstcw
jae
rcrb
and
fdivp
fxch
adc
loope
cli
push
jl
lahf
push
test
mov
cli
mov
push
xorb
rclb
dec
or
xchg
xor
push
cmp
stos
adcb
or
pop
jno
mov
pop
jecxz
loope
fdivrs
je
jo
testb
sbb
gs
jb
jo
jae
rorb
imulb
dec
pop
adc
inc
fdivrl
je
jecxz
pop
push
mov
add
hlt
es
rcrb
arpl
dec
shrl
mov
dec
lret
push
mov
out
and
or
data16
xor
cmp
jae
lahf
mov
in
xchg
ja
add
hlt
les
or
call
mov
cwtl
cmc
scas
clc
and
sbb
pusha
aaa
divl
sbb
pop
movsb
xchg
jno
movsb
mov
daa
repnz
sahf
scas
add
ja
sbb
xlat
pushf
cmpsl
test
sbb
jecxz
cmpsb
je
cmp
pop
in
inc
rclb
pop
sti
stc
sub
cmc
push
test
repz
aam
icebp
test
ds
jp
or
negb
add
lcall
cs
outsl
ret
xchg
xor
filds
adcb
add
push
xchg
test
iret
jo
js
mov
mov
adcb
sbb
pop
pusha
outsb
int
lcall
jecxz
push
movsb
dec
or
xlat
jp
sub
sub
jb
sbb
fdivrp
inc
mov
xchg
das
adc
or
cmpsl
rclb
and
xor
movsb
cld
or
mov
cmpsb
push
push
dec
pop
inc
clc
cmp
jno
mov
add
pop
jmp
or
mov
aas
xchg
push
jae
mov
loopne
sbb
push
stc
sub
mov
das
repnz
pop
jmp
sbbl
xchg
adc
mov
xor
inc
pop
inc
jge
cmpl
xor
mov
dec
cmp
cld
mov
pushf
int
mov
test
lea
inc
mov
out
in
xchg
shll
mov
sbb
inc
aas
adc
push
push
icebp
xrelease
push
pushf
push
xchg
mov
ret
cmpsb
lds
pop
rol
lock
loop
adc
and
pusha
pop
lret
rcl
cmpsl
cmpsb
xchg
xchg
icebp
mov
shr
mov
fstpt
sub
mov
pop
aam
jbe
cmp
mov
jo
orb
test
xchg
lcall
inc
pop
adc
fiadds
push
sbb
or
xchg
pushf
and
js
add
mov
pushf
test
mov
sbb
decb
mov
sbb
movsb
cmpsl
mov
push
jne
jle
sub
and
jg
mov
ja
fst
aam
mov
enter
cwtl
shrl
cmp
jg
rcll
or
pop
or
lds
sub
arpl
popl
adc
stos
jmp
inc
shrb
cmpsl
pop
andl
hlt
xchg
xor
cmc
incl
mov
jae
mov
pop
adcl
push
or
test
shlb
clc
dec
cwtl
jle
jecxz
xlat
lea
and
insb
jecxz
sbb
lret
cmp
and
cld
enter
sub
xchg
out
sbb
mov
test
jo
push
inc
gs
cmp
mov
adc
mov
pop
dec
sbb
lahf
push
rolb
adc
les
loopne
rcl
mov
std
rclb
inc
les
roll
fisttpll
icebp
fiadds
cmpl
js
lret
shlb
sbb
push
jno
ljmp
test
ljmp
and
push
js
outsl
sti
shlb
lock
lods
xchg
mov
ja
sbbb
mov
add
mov
in
mulb
fwait
xor
pop
push
lret
jbe
movsl
jmp
or
rol
imul
sbbl
movsl
inc
and
sub
dec
jno
movsb
test
dec
jp
cmp
add
loope
into
jbe
or
pop
rolb
jno
mov
sbb
scas
mov
rclb
and
ret
and
dec
or
and
mov
stos
lea
out
aas
popf
in
xlat
mov
jl
cmpsb
fimuls
pop
inc
pop
add
add
sbb
push
shll
and
cmp
jae
repnz
mov
ret
mov
ret
imulb
xor
or
cmpsb
push
push
adc
xor
dec
mov
mov
das
sbb
imul
test
stos
mov
popf
push
js
scas
inc
adc
in
sbbl
lret
push
adc
movl
es
jle
lret
iret
push
cs
cmp
lock
sub
cld
flds
jnp
pop
lods
enter
dec
jnp
sarb
xor
jecxz
outsb
jno
loop
ds
fidivrs
mov
je
in
xlat
adc
push
inc
movsb
and
add
sbb
out
clc
or
test
lcall
mov
adc
or
push
inc
dec
in
mov
cli
les
pop
jo
push
pop
push
add
dec
fs
nop
jbe
xchg
rcr
shrb
mov
pop
xor
pop
sbb
jbe
pop
inc
add
nop
sti
push
stos
arpl
stos
jnp
movsl
pusha
cld
pop
stos
cmp
js
addb
mov
jbe
push
sub
jne
adc
jecxz
and
call
xchg
push
add
roll
aad
aas
flds
pop
ds
push
ljmp
mov
push
or
mov
add
fstl
popf
movsb
testl
and
das
or
sub
push
or
xchg
jl
xchg
aam
dec
mov
out
mov
sub
test
mov
add
roll
rcl
in
popa
ror
mov
mov
jae
lcall
in
fnstsw
mov
xchg
xor
sub
mov
dec
sarb
push
in
inc
in
mov
imul
pop
pushf
push
jge
xchg
xor
sbb
test
sub
push
cltd
jmp
cmpsb
cmc
dec
loop
jl
addl
test
pop
mov
lods
roll
mov
sbb
icebp
mov
arpl
jl
add
icebp
pop
repz
test
or
mov
fdivl
push
mov
cmpsl
sar
inc
and
cli
jmp
out
arpl
or
mov
mov
cmpsl
xlat
mov
or
mov
les
mov
rolb
dec
daa
mov
call
dec
mov
add
lds
mov
pop
aaa
mov
rcrl
js
call
dec
popa
push
shr
frstor
and
push
cmp
jno
stos
jle
out
hlt
sub
cmp
orl
pop
pop
xor
dec
xchg
mov
or
fbstp
add
movl
das
fsubrl
pop
nop
fs
mov
dec
int
push
vpaddsw
jl
sahf
or
push
sti
sbb
mov
and
adc
out
xchg
lds
pop
mov
mov
mov
jns
sub
push
andl
and
pop
inc
mov
adc
fnstenv
shll
subb
jnp
ja
fdivr
pcmpeqd
xchg
hlt
mov
das
mov
int
xor
push
loopne
mov
or
jbe
add
popf
xor
test
inc
mov
xchg
adc
and
rorl
cwtl
cmc
test
leave
push
jge
jmp
cmpl
push
jge
sub
and
xchg
and
push
cltd
hlt
cmp
or
inc
push
lret
ret
les
add
push
arpl
xor
sub
sbb
cmp
lret
xchg
mov
jne
mov
or
movsl
mov
sub
inc
ds
cmp
add
js
adc
or
rcrl
leave
lods
and
lock
mov
pop
mov
iret
fcoms
sbb
adc
pushf
cld
nop
fmuls
or
sarb
push
ds
rolb
or
xlat
push
out
mov
test
xlat
sbbl
popa
push
sahf
js
xchg
dec
shl
add
loopne
jecxz
int
and
insl
and
sbb
arpl
loopne
dec
das
pop
push
mov
mov
or
xor
or
rcrl
mov
jl
jge
add
imul
scas
add
push
adc
setg
fiaddl
adc
loopne
pop
mov
lret
inc
sbb
jl
jns
outsb
int3
loope
in
add
inc
outsb
jecxz
jl
add
mov
and
inc
pop
push
jns
fadds
test
xor
rcrb
cmpsb
sbb
push
or
pop
sub
shl
xchg
aad
cmp
shl
jae
test
outsb
bound
iret
shl
pop
pushf
fnstsw
pop
bound
lret
outsb
lds
inc
xor
mov
sbbb
inc
gs
fadds
dec
cwtl
sahf
lock
orl
and
or
loope
or
ja
push
fs
sbb
inc
aas
mov
pop
cld
mov
sbb
test
push
fs
cli
pop
fisubrl
or
xchg
jle
rorb
sub
hlt
js
outsl
cs
sbb
mov
in
dec
loopne
loop
add
jmp
add
inc
mov
pop
dec
inc
lahf
pop
jae
mov
adc
bound
push
cmc
push
popa
pop
imul
ja
je
sub
stos
and
and
mov
and
mov
sarb
xchg
sub
add
aaa
aaa
out
mov
and
sub
sub
cmc
orb
hlt
sub
mov
imul
mov
es
push
or
mov
or
jo
hlt
xlat
inc
mov
pushf
cmpsl
xor
insb
jp
ljmp
aad
or
rcll
cmp
mov
out
scas
push
pop
gs
sub
nop
movsb
shrd
push
push
shll
lcall
arpl
shrb
in
cltd
mov
mov
sbb
insl
cmpsb
push
add
iret
mov
or
xchg
cmp
xorb
in
das
add
pop
fdiv
call
mov
inc
and
in
repz
shll
jmp
shll
std
aam
xor
or
pop
mov
pop
mov
xchg
push
nop
out
push
xchg
jo
jge
or
arpl
sbb
ljmp
fwait
test
sbb
pop
push
dec
push
cmp
mov
nop
call
rcll
mov
jne
in
xchg
jp
shl
in
shrl
popf
mov
jecxz
jno
fwait
mov
es
cpuid
pusha
and
loope
or
pop
js
adc
xchg
cmp
inc
dec
adc
mov
cmp
lcall
ret
gs
clc
ret
cli
lds
ret
movsb
jg
add
mov
adc
mov
and
ljmp
xor
xor
jle
addr16
mov
insb
out
dec
ret
sahf
adc
loopne
mov
and
dec
sub
dec
fbstp
xlat
insl
sbb
adcb
adc
das
and
pop
repnz
jno
dec
nop
ret
push
sub
and
addr16
ss
push
test
or
mov
xchg
cli
push
sbb
push
adc
aas
sub
push
orl
mov
in
jg
mov
adc
mov
sahf
and
ds
jmp
ljmp
je
jge
inc
int
ret
jp
add
mov
je
jp
xchg
mov
xor
mov
popf
rcrb
or
cmc
pop
inc
jge
or
sub
jne
or
dec
imulb
push
push
add
mov
lods
add
enter
cld
jmp
pop
test
inc
xchg
sbb
inc
push
push
shr
enter
mov
and
or
mov
or
jns
movaps
js
mov
xor
rol
pop
jmp
test
mov
or
jo
xorb
aas
in
mov
daa
and
sub
ret
mov
fwait
mov
and
xchg
lds
scas
ret
leave
jno
xor
lods
xor
dec
pop
sbb
aas
into
ret
inc
mov
add
jp
stos
ljmp
test
cld
push
mov
jl
mov
inc
xor
cmpsl
lods
pop
dec
xchg
test
enter
cmp
fisttpl
push
and
fimuls
add
sub
mov
lcall
cli
and
test
inc
lods
bound
pop
sbb
int3
cwtl
imul
adc
jns
mul
popl
subb
jno
or
fnstsw
mov
cmp
stc
push
push
or
push
mov
push
inc
dec
cmc
and
sub
ret
in
sarl
mov
lds
stos
xlat
je
push
test
loop
jae
xchg
rcr
es
sub
ja
sub
sbb
sub
loope
or
fsubs
mov
hlt
daa
orb
je
js
ds
arpl
sbbl
pushf
data16
lock
inc
xchg
push
out
sbb
xorl
push
push
adc
iret
mov
incl
push
ficoml
mov
lea
cltd
xor
lock
subb
je
inc
fcmovbe
or
dec
xor
in
iret
lret
cltd
mov
in
sbb
mov
das
jp
ds
push
mov
and
inc
pop
sbb
pushf
sbb
loopne
dec
daa
adc
add
cld
sbb
rorl
mov
das
mov
push
dec
inc
jle
xchg
mov
jle
jmp
popa
arpl
sbb
out
or
loopne
push
jnp
cmp
std
sbb
rep
std
xor
out
pushf
cmp
es
xor
add
add
push
push
in
inc
jnp
push
movsl
mov
dec
dec
push
shlb
sti
add
cld
jge
push
dec
sbb
ja
push
fimull
sub
fcmovnu
cwtl
lock
mov
test
xchg
push
xor
pushl
pusha
push
or
push
jecxz
mov
add
or
pop
adc
sbb
and
test
cli
xor
fs
and
loop
clc
pop
fisttpl
push
out
add
push
mov
jae
jae
scas
pop
test
lahf
jg
mov
dec
or
sbb
dec
sub
call
push
or
pop
add
pop
clc
popa
fisubrs
jne
dec
jge
insb
xchg
fisubrl
lock
insb
call
fadds
sbb
mov
roll
pop
test
leave
in
es
ret
push
aaa
inc
add
insl
push
mov
and
aam
add
cmp
push
mov
mov
cltd
mov
aad
shl
out
pushf
cmp
and
loopne
stos
add
aaa
fsubr
rcrb
ja
adc
es
ss
lret
imul
jl
and
sbb
pop
or
jbe
sub
sub
mov
xlat
repz
shll
pop
sbb
sub
add
mov
or
or
ss
cmpsl
inc
ja
push
adc
icebp
sub
sub
or
inc
dec
leave
mov
mov
mov
jne
pop
cltd
mov
movsl
cmp
xchg
pushf
into
and
faddl
xor
rorl
dec
cmpsl
movsb
sbb
das
pop
inc
push
inc
test
cmp
lret
aam
dec
inc
lahf
push
adc
hlt
sbb
add
ljmp
jp
jne
incb
mov
jnp
insb
xchg
dec
rclb
dec
add
dec
mov
add
out
enter
or
rorl
push
xor
sarb
stc
push
jle
lahf
subb
dec
adc
test
fidivl
mov
rcrb
push
dec
dec
xchg
adc
in
in
insl
cli
add
js
dec
xchg
sub
test
pop
sbb
and
outsl
aas
mov
mov
pushf
push
rorb
shlb
loopne
cmp
mov
stos
sbb
cltd
pusha
inc
mov
das
jb
out
mov
int
add
imulb
xchg
mov
test
pop
add
and
loopne
divb
sbb
jmp
ds
es
loopne
ret
pop
ss
xor
cmp
inc
cmp
pushf
or
arpl
mov
pop
dec
rcrb
lcall
mov
into
sbb
insb
push
xchg
adc
cmp
shl
jbe
sub
lahf
js
jmp
into
aaa
subb
ljmp
add
loope
cmc
or
mov
xor
pop
jne
fwait
jecxz
clc
xchg
std
xchg
and
icebp
xchg
fbstp
roll
outsb
and
push
lcall
inc
ret
movsl
adc
inc
shll
mov
push
testb
inc
add
mov
mov
sbb
and
xchg
dec
mov
inc
mov
call
or
lret
fldenv
or
sbbl
adc
pusha
pop
pop
inc
fadds
lahf
or
pop
fs
push
xchg
mov
add
scas
rorb
and
aam
sbb
pop
mov
jo
jecxz
test
popl
loop
pop
stc
test
fcomi
icebp
pop
andb
clc
in
ss
mov
jl
add
push
dec
ret
cli
pop
inc
iret
mov
dec
ja
sbb
add
jg
fst
lcall
xchg
shlb
gs
push
enter
gs
jl
pop
dec
movsb
jmp
aam
das
cld
cs
dec
loop
insb
aaa
sahf
rol
int3
leave
hlt
pop
leave
xchg
rolb
faddl
sbb
push
ljmp
xchg
jae
imul
jle
jae
jp
xchg
nop
pop
test
imul
sub
push
dec
cmc
inc
mov
movsb
pop
jg
jo
insl
les
sub
sbb
in
call
movsb
pop
subl
mov
jmp
jo
cmp
icebp
fistpll
clc
cli
adc
and
fs
sub
push
rcrb
mov
pop
pusha
jecxz
dec
sub
dec
push
nop
test
lock
jp
and
fiaddl
adc
mov
xchg
dec
lock
mov
mov
sbb
inc
je
mov
in
popa
dec
and
pop
pop
mov
adc
addb
jmp
lret
pop
and
pop
ret
sub
cli
add
adc
and
fstpl
cmp
nop
push
and
faddl
nop
add
clc
stos
es
int3
mov
imul
mov
lods
mov
testb
mov
pop
inc
leave
add
sub
pushf
push
scas
jg
sbb
inc
test
and
cmc
aas
or
loopne
mov
imul
sub
pushf
enter
push
cmp
mov
das
dec
insb
sub
rorb
push
mov
add
subb
sub
fimull
or
jo
cs
fldl2e
mov
sbb
xchg
daa
or
in
testb
push
cmp
lods
mov
add
pop
cwtl
adc
inc
int3
xchg
jmp
sub
ret
negb
ret
scas
add
into
jno
add
lods
ret
jnp
out
add
push
sbb
push
xor
rclb
jl
aad
push
add
hlt
sbb
inc
mov
sub
sub
sub
cmp
aad
clc
cmp
and
ficomps
mov
mov
daa
jg
xor
das
push
and
nop
ret
test
sub
testb
jb
test
icebp
adc
das
imul
mov
add
sub
dec
test
dec
push
mov
std
add
sbb
int3
mov
sbb
xor
sti
mov
stos
lds
xor
loop
or
pop
cmp
and
icebp
mov
add
jg
mov
xor
in
add
icebp
subb
test
ljmp
popa
ret
add
lcall
ds
insb
es
cmpsl
subb
stos
sbb
es
or
ds
shrb
mov
ss
movsb
jl
xor
xor
mov
mov
loopne
mov
mov
rcl
add
test
into
or
pusha
inc
out
sub
sub
test
loope
mov
scas
sub
xchg
dec
pushf
unpckhps
xor
repz
scas
hlt
cmpsl
ficompl
sbb
lods
setne
orb
stos
or
add
loop
inc
out
mov
cmpsl
push
and
push
leave
xchg
mov
lods
push
pop
cmpsl
data16
addl
shrl
dec
test
jbe
popf
lods
retw
ret
mov
lret
pop
xor
xor
jae
sub
pusha
loopne
cwtl
xor
inc
pop
pop
rorb
pop
in
mov
icebp
inc
fdivs
rolb
pusha
pop
pusha
push
mov
mov
jg
or
std
and
adc
icebp
loopne
lods
cld
push
enter
inc
dec
cwtl
pop
lods
ljmp
js
cld
out
ja
inc
divl
jge
stos
or
mov
fdivrl
pop
test
fdivl
mov
cmp
dec
sbb
jb
pop
or
ja
popa
add
insb
xor
scas
push
fistpll
lcall
jns
sbb
scas
xchg
je
jne
push
aad
mov
cltd
inc
xor
sar
mov
into
int
aad
in
and
fwait
or
aas
aam
loop
insl
adcl
adc
push
lods
xchg
push
mov
je
lret
push
push
add
fwait
mov
inc
and
push
lret
lods
mov
aaa
jg
shrb
dec
loopne
adc
pop
cs
adc
xor
pushf
lods
movsl
and
jno
lock
imul
sub
cmpsl
sub
fs
outsl
cli
aaa
sub
adc
dec
repnz
push
xchg
js
mov
jne
movsb
aas
aad
fstp
xor
ljmp
add
cmp
rorl
inc
jns
sbb
adc
jl
into
dec
je
sbb
lock
arpl
mov
cmc
scas
subl
xchg
cs
sub
shll
bound
inc
cli
push
add
shl
mov
rorb
aad
fsubrs
and
pop
pop
cmp
shll
push
xor
sbb
mov
pop
scas
dec
xor
into
xchg
lret
push
mov
call
push
add
xchg
mov
jno
xor
mov
rclb
movsl
inc
mov
xchg
loopne
gs
adc
insb
dec
imul
into
or
icebp
pop
rolb
pop
les
lock
sbb
push
xor
push
push
pop
pop
ror
lret
dec
stos
mov
and
lea
in
pop
jge
icebp
aas
inc
lds
mov
addr16
arpl
mov
cmpl
psrlq
aad
shll
cmovo
mov
push
rcrb
add
cmp
lods
repz
ret
mov
inc
lea
aad
push
loope
rcll
and
orl
xchg
add
sub
out
push
xchg
jbe
mov
adc
ret
or
jle
inc
shll
fbld
fdiv
jo
add
or
data16
dec
imul
mov
sub
jne
stc
ljmp
cmp
or
mov
mul
rol
adc
jne
adc
jmp
mov
push
movsl
fistl
ds
aam
dec
pop
pop
xchg
xchg
fs
mov
out
inc
mov
sbb
mov
add
mov
jb
cwtl
and
mov
mov
in
push
xchg
jmp
leave
js
subb
adc
jb
loope
mov
out
out
cmpsb
daa
popf
loopne
dec
mov
xor
aad
cmp
popa
dec
inc
outsl
add
insb
cmp
adc
push
icebp
sbb
sbb
or
mov
and
shlb
sub
orl
push
and
jnp
scas
js
mov
cwtl
dec
int3
bound
adc
push
std
adc
in
push
fnstsw
sub
push
in
xor
subl
aad
mov
mov
xchg
cli
mov
mov
addr16
inc
push
adc
outsl
push
inc
mov
ljmp
arpl
or
xchg
lock
mov
fdivrl
cmc
push
pusha
jbe
xor
icebp
and
mov
mov
push
sbb
cmp
pusha
push
mov
mov
push
addr16
add
pop
push
mov
adc
sub
sarb
inc
cmp
daa
cmp
xchg
xor
fildll
or
cmp
pop
loope
jo
aaa
lock
xchg
imul
and
cmc
inc
pop
test
mov
scas
add
lods
mov
nop
rclb
and
clc
aas
mov
fcomi
pop
sbb
or
mov
out
add
sub
inc
add
lock
mov
jl
and
pop
mov
mov
gs
jo
pop
inc
add
std
add
add
loope
pop
mov
cmp
shlb
shlb
inc
icebp
mov
add
loopne
mov
dec
jae
cld
sbb
and
movsb
dec
dec
push
xchg
mov
sbb
sub
xor
jl
andb
inc
jnp
psrld
pop
loop
lock
clc
data16
mov
jbe
cs
les
dec
mov
inc
or
mov
and
pop
dec
and
in
xchg
xor
mov
mov
jo
call
cmpsb
jae
outsb
cld
xor
insl
cmp
aad
pusha
cmc
adc
lahf
pushf
adc
ljmp
test
add
ss
adc
push
mov
or
call
test
mov
xor
orb
xchg
dec
push
inc
xorl
daa
xor
stos
dec
pop
mov
inc
fcoml
sbb
pop
or
rcrb
xchg
cmc
add
pop
je
dec
push
hlt
jge
mov
mov
stos
xor
xor
pop
and
ss
dec
push
sbb
add
sub
adc
clc
loop
inc
cwtl
mov
add
mov
les
clc
mov
lea
incl
adc
sub
fnstsw
xchg
push
ds
pop
xor
arpl
or
pushf
sbb
test
sbb
lods
adc
mov
loopne
in
sbb
cwtl
bound
rolb
cwtl
sbb
in
xorb
mov
xchg
pop
xchg
mov
cli
dec
xchg
cmp
mov
jmp
test
adc
add
sub
aas
dec
and
push
int3
xor
cmp
xor
ds
ret
cmp
add
xchg
jo
add
jle
xchg
cld
imul
mov
testb
jg
ret
dec
mov
das
or
mov
xchg
fldl
les
sub
mov
xchg
lret
icebp
fisttps
pop
sbb
push
std
fmul
ret
adc
pop
adc
pop
pop
addb
jmp
pop
jp
addr16
xchg
ret
bt
dec
int3
push
push
jbe
jp
mov
sbb
andb
jge
nop
push
pushf
dec
cld
adc
adc
ss
cmp
push
and
enter
cvtdq2ps
xorb
jg
ret
pushf
cmp
xchg
call
mov
cld
jns
push
mov
add
adc
and
inc
xchg
cmc
add
sub
mov
popa
std
xchg
mov
or
mov
sbb
mov
push
mov
sub
imul
pop
ror
xchg
mov
stc
jl
push
aad
mov
call
fldenv
push
and
mov
lret
xor
fcompl
inc
std
movsb
push
ljmp
mov
push
cli
and
mov
cmp
mov
out
pop
mov
or
clc
inc
cld
stc
ss
sbb
pushf
mov
ja
add
add
aaa
les
push
cmpsl
scas
pop
jmp
into
and
inc
loope
aas
jbe
and
lods
dec
push
and
xor
dec
lock
push
fs
clc
jle
sub
jle
pop
mov
addb
add
lret
pop
je
aas
mov
fistpll
jecxz
mov
inc
loop
lret
lcall
jne
xor
shr
push
call
lcall
add
fldt
out
ljmp
test
dec
add
xor
push
sub
sbb
addr16
push
out
sub
sahf
add
test
mov
rol
in
inc
or
dec
mov
ds
inc
adc
add
pop
or
das
lock
mov
push
aam
add
clc
or
xor
das
push
nop
dec
or
or
fidivrl
leave
daa
aam
xchg
mov
sub
xchg
rcl
cmp
enter
mov
pop
lcall
xor
test
fwait
sahf
popl
sbb
or
aas
push
jl
pusha
cmpsl
mov
mov
inc
notl
xchg
add
pushf
mov
sub
xor
roll
into
repz
cwtl
bound
loop
lock
clc
mov
bound
pop
adc
int3
std
xchg
mov
stos
push
adc
add
jno
negb
test
push
add
lcall
or
repz
es
inc
dec
dec
sub
xchg
cld
pop
movsl
mov
stos
inc
pop
or
call
jl
js
adc
and
cmp
cmp
roll
mov
adc
and
xor
subl
ret
fistpl
pusha
test
or
cld
call
push
inc
cwtl
in
add
in
and
shll
ljmp
xor
arpl
pusha
and
xchg
cmp
rclb
or
jno
psrlw
lret
xchg
fisubs
add
ret
shrb
push
pop
out
js
and
mov
mov
lods
outsb
cwtl
scas
inc
sub
push
scas
stos
pop
dec
pop
fmull
sbb
and
add
fsubr
stos
mov
ret
les
ss
loop
xchg
mov
repz
push
test
in
test
loop
cmp
xorl
xor
dec
fstl
adc
in
cld
nop
mov
push
inc
outsb
jp
std
mov
out
dec
sbb
jl
rorb
rcrb
cmp
hlt
mov
mov
push
jb
sbb
ljmp
jge
and
inc
inc
sub
add
mov
lret
xor
rolb
ds
dec
add
sbb
fdivrl
mov
add
cmp
into
iret
cmpsb
sub
push
mov
or
push
mov
test
adc
add
pusha
push
jp
add
sub
push
cmp
sub
cwtl
gs
xchg
arpl
enter
loop
inc
test
add
xor
adc
gs
xor
push
lock
push
hlt
aam
inc
or
sbb
mov
mov
or
mov
mov
lds
push
movsb
icebp
inc
add
rclb
jne
jbe
add
addr16
xchg
adc
add
mov
or
inc
repnz
pop
mov
insl
and
add
adc
jnp
out
cltd
mov
add
aad
push
fstl
adc
add
and
sub
aam
and
or
fs
imul
test
push
call
cli
movsb
and
jmp
in
mov
andl
fdivs
jecxz
test
push
insl
inc
lds
sbb
push
add
je
ja
subl
dec
push
inc
or
out
mov
and
pushf
les
and
jne
inc
mov
mov
push
cld
jo
cmc
int3
lods
subb
add
popa
mov
pop
mov
mov
scas
icebp
les
mov
cmc
addb
and
aam
cmp
les
mov
jp
mov
outsl
notl
and
mov
sub
outsl
addr16
inc
add
jle
add
je
add
and
jp
push
xchg
shlb
es
decl
mov
push
dec
cwtl
mov
lods
testb
lods
sub
inc
jns
lahf
mov
fstl
aam
loop
adc
adc
fstp
icebp
pop
dec
aad
mov
movsl
lock
xor
rcl
mov
add
incb
mov
lods
xchg
and
sub
inc
repnz
mov
scas
ret
push
outsl
popa
push
js
push
add
dec
das
dec
jl
xchg
pop
hlt
push
mov
pop
jb
or
xlat
or
lret
test
or
sti
and
xor
or
pop
or
lea
cld
js
and
fwait
push
sarb
add
movsl
test
cmp
rolb
sbb
adc
orl
jmp
cmc
inc
les
push
jbe
popa
jge
pop
mov
clc
js
leave
push
inc
adc
aam
cltd
test
pop
fistpll
jle
jae
mov
cli
cmpsl
and
add
bound
pop
cmp
repz
fbld
xor
int3
cmp
jecxz
faddp
pop
add
or
lods
test
xor
push
fidivrs
add
adc
jmp
mov
rorb
aam
test
inc
inc
sti
les
mov
or
mov
daa
adc
outsb
test
mov
xor
cmp
imul
sbb
push
stos
sub
scas
xor
imul
test
dec
pop
xor
inc
pusha
movsl
pushf
mov
mov
xchg
shl
lods
push
repz
dec
idivb
sbb
bound
loop
gs
cmp
in
mov
adc
fidivs
call
loop
jg
subb
xchg
push
mov
call
or
add
xchg
xchg
and
pop
andb
xlat
hlt
inc
imul
pop
inc
inc
sbb
pop
mov
mov
sbb
jne
sub
insl
call
bound
insl
sub
cmc
out
mov
fcoms
out
outsl
ret
mov
cmp
jbe
jg
test
mov
add
div
icebp
into
in
aam
lret
idivb
inc
inc
or
inc
add
pushf
and
aad
into
push
sbb
jecxz
pusha
mov
shlb
mov
push
push
test
pop
xor
out
inc
push
call
inc
insl
clc
mov
lods
cmpsb
fdecstp
fmuls
movsl
push
pop
rorl
shl
push
lahf
mov
fldenv
int
push
test
rcll
or
lds
sub
cmp
xor
mov
fwait
mov
xor
add
add
repz
push
add
mov
inc
or
fildl
out
jl
loopne
ljmp
iret
push
adc
or
xor
adc
adc
dec
daa
dec
and
xlat
cmp
mov
arpl
fstl
adc
push
sub
fdiv
cmp
pop
das
jp
loope
pop
push
cmp
jp
shll
xchg
or
sub
push
lods
hlt
lods
call
xor
aam
mov
add
push
xorb
adc
push
cli
loop
fiadds
xor
ljmp
sbb
cld
xchg
push
lret
mov
jl
inc
leave
nop
jle
lods
shrl
jmp
mov
mov
pop
nop
out
push
fs
hlt
rclb
mov
sbb
icebp
inc
add
adc
lock
fimull
and
and
dec
js
add
xor
or
sub
jae
cld
push
popl
push
mov
mov
ja
cmp
sti
ja,pt
rclw
dec
notl
mov
sti
ja
fstpl
lea
mov
fwait
xchg
popf
cld
inc
outsl
call
cmp
js
adc
sbbb
mov
sbb
and
out
ja
pusha
mov
and
mov
fcompl
icebp
outsl
lcall
or
sbb
fidivrl
loop
or
test
xor
sbb
pop
adc
cmpl
inc
lds
gs
icebp
mov
loope
dec
add
aaa
push
xor
push
mov
lcall
aas
mov
das
dec
cmp
sub
sub
adc
gs
lock
dec
jns
xchg
dec
dec
push
sub
jl
sub
popa
popa
pop
pop
rcl
arpl
roll
adc
fisttpll
inc
jbe
mov
divb
inc
dec
push
mov
push
pushf
push
mov
xchg
sbb
loopne
sub
mov
lods
das
out
adc
orl
das
loopne
xchg
jp
popf
ljmp
sub
mov
mov
sub
inc
xchg
xchg
lar
rolb
jns
xchg
js
ss
lea
mov
in
sbb
pop
sbb
pop
xor
dec
test
loop
cmpsb
cs
sub
mov
xor
clc
inc
dec
xchg
sub
cmc
sbb
push
adcb
mov
jae
and
shll
sub
je
push
add
je
mov
nop
rorb
loop
jp
push
dec
and
mov
inc
shrl
call
sti
js
sbb
pusha
inc
fistpll
adc
loopne
mov
ds
pop
inc
push
pop
pop
shrb
mov
aad
pop
lret
cmp
add
xor
or
rcl
mov
xor
mov
xchg
clc
push
push
in
dec
pop
jle
xchg
mov
or
inc
pop
sahf
and
adc
pop
push
dec
and
mov
mov
call
insb
popa
add
push
add
lcall
test
dec
rcr
jne
add
outsl
rorl
adc
xor
jmp
cmpsl
scas
stos
orl
jecxz
ret
jg
or
dec
rorb
push
cmp
int
xor
fwait
data16
int
sbb
sub
repz
jne
adc
icebp
sub
pop
cmp
in
jg
sub
pop
test
fdivs
lds
leave
jp
test
pop
repnz
xchg
dec
add
dec
xchg
insl
jl
cmp
jge
loope
ret
hlt
test
mov
dec
adc
ja
pop
jle
inc
lea
std
jecxz
cmp
jl
fwait
push
mov
in
dec
cltd
negb
aaa
cmp
std
ret
and
dec
push
mov
cwtl
les
sahf
mov
call
add
and
test
xchg
lds
mov
jge
push
stc
add
inc
push
lcall
ret
pusha
jns
xchg
gs
or
inc
lods
mov
ds
pop
mov
enter
fiaddl
jmp
mov
push
shl
in
std
cmp
cmc
and
push
pop
out
mov
rolb
mov
add
test
or
add
cmc
xchg
fmul
andl
out
out
pusha
repz
push
push
mov
rclb
adc
and
loopne
adc
push
push
mov
push
fldcw
lea
inc
jb
enter
mov
inc
scas
lds
sbb
add
lret
loop
adc
fcom
jp
sbbb
sub
vsqrtsd
lea
loopne
xor
aad
jo
adc
sub
or
inc
inc
arpl
addb
push
loope
dec
xchg
push
shlb
jle
sub
adcb
adc
jae,pt
jecxz
test
cmp
or
and
mov
mov
outsl
push
mov
and
les
adc
push
mov
cmp
data16
fldt
xchg
iret
js
dec
and
jno
sahf
ds
mov
sub
test
cli
pop
mov
inc
xchg
aad
aaa
push
jns
lds
push
push
mov
aam
enter
ret
inc
pusha
lods
fidivrs
dec
stos
sbb
and
push
cmp
or
push
inc
add
hlt
cmpsl
gs
mov
sub
fsubr
inc
sub
dec
aaa
lahf
sahf
mov
mov
inc
adc
shll
insl
add
pusha
test
xchg
adc
jp
jbe
inc
loopne
daa
jg
psllw
adc
cmc
aad
fstl
lret
js
pop
setnp
lret
dec
fwait
adc
leave
popa
mov
dec
xlat
dec
or
sub
sarl
stos
cmpsl
sti
in
dec
pop
mov
push
sbb
add
cmpsl
call
and
movb
or
stos
cmpsl
inc
pop
or
clc
cmp
out
call
xchg
jbe
push
sarb
call
sbb
mov
js
je
sub
int3
cltd
mov
jae
movsl
and
xlat
ss
nop
or
roll
stos
add
repnz
inc
xor
sub
add
ret
add
hlt
mov
add
dec
cmp
xorl
or
mov
rorb
clc
dec
xchg
cmp
push
xchg
imul
shrl
cmc
pop
imul
pop
pusha
icebp
dec
outsl
sahf
orb
loope
xchg
xlat
inc
dec
popf
adcb
es
adc
sti
jp
call
mov
in
insb
call
jne
mov
mov
insl
jbe
es
or
sub
mov
sub
mov
flds
lds
pop
arpl
cmpl
sub
mov
jg
fcmovb
cmpsb
fwait
idivb
adc
mull
xor
inc
add
sbb
fwait
push
or
lock
push
and
mov
test
mov
std
mov
incl
xchg
lock
mov
cmpsb
add
jmp
mov
daa
pop
aas
cmp
outsl
pushf
xlat
lea
xor
inc
enter
insl
and
hlt
lret
xor
in
addl
jno
das
or
push
inc
pusha
jecxz
xchg
xchg
pushl
pop
stc
daa
mov
mov
push
mov
pop
cmp
mov
adc
and
push
push
scas
ret
sbb
adc
movsl
cmc
cmp
push
popf
mov
adc
sub
call
not
rcpps
xor
mov
loop
das
and
enter
scas
mov
aaa
fadds
push
psraw
adc
scas
popa
iret
push
cmpsb
xchg
adc
fcmovb
cltd
cmp
push
notb
inc
cs
es
adc
outsb
mov
sbb
or
stos
dec
icebp
sub
shrb
add
mov
ret
inc
imul
psrad
pop
repnz
push
test
or
dec
fisttpll
mov
push
adc
stos
hlt
je
pushf
sub
inc
test
ror
add
cmpsb
out
cs
adc
shlb
or
add
adc
pop
loop
stos
mov
subl
cmp
ljmp
test
outsb
or
arpl
into
ss
push
lds
xchg
icebp
inc
fs
xor
aam
testl
cmpl
sub
ds
leave
pop
mov
cwtl
mov
mov
sub
sub
sbb
adc
mov
and
enter
sub
pop
loopne
movsb
movsl
pop
jnp
aad
js
bound
sbb
call
jge
into
inc
mov
and
and
pop
or
add
dec
jae
divl
fsubl
sub
mov
aaa
repz
cmp
loop
xchg
sbb
sbb
cltd
sub
push
mov
mov
les
daa
mov
xor
cmp
mov
jmp
test
call
xor
mov
mov
insb
pop
ds
or
and
push
and
jg
subl
inc
jl
bound
fnsave
sbb
fs
and
or
cmpl
jge
shl
push
ret
pop
xor
mov
or
jecxz
inc
sbbb
pushf
int
mov
js
fwait
std
mov
imul
push
add
enter
mov
lret
adc
aam
or
inc
inc
add
pop
cmpsl
movb
je
dec
xchg
jp
inc
add
sub
adc
lret
loop
pop
mov
and
adc
arpl
ret
push
and
cmc
pushf
add
ss
aaa
mov
jb
je
cwtl
xchg
dec
and
sbb
ret
push
icebp
jmp
nop
pop
push
jl
pop
loopne
cli
imul
enter
push
mov
mov
pop
dec
adc
addl
sarl
stos
dec
insb
inc
cmp
call
xchg
cwtl
xchg
or
mov
shrb
insb
sahf
sub
mov
xlat
mov
cmp
popa
xor
icebp
xchg
mov
mov
hlt
mov
lcall
mov
adc
pop
push
fwait
sarb
stos
fiadds
ja
mov
xchg
rcrl
jnp
sub
inc
movsb
pop
stos
mov
lcall
mov
mov
outsb
sbb
mov
pop
scas
scas
dec
cmp
sub
ja
out
loopne
sbb
or
cmp
aaa
lods
push
les
push
daa
loope
adc
dec
mov
pushf
mov
fcmovne
dec
mov
xor
mov
adc
add
loop
jmp
shll
hlt
repz
sub
mov
pop
fwait
mov
sbb
xor
in
inc
or
call
fwait
cmpsb
xor
scas
mov
inc
push
xchg
add
or
lods
call
rol
pop
adc
cmp
daa
lds
stc
in
pushf
xchg
jbe
mov
leave
scas
aaa
mov
sub
out
arpl
adc
or
movsb
loop
adc
aaa
lods
stos
je
lret
sub
adc
push
imul
or
mov
mov
jmp
mov
dec
sbb
push
loopne
enter
sbb
lods
iret
inc
popf
push
shll
mov
es
aas
mov
push
push
mov
dec
cmp
jl
das
add
cmpb
xcrypt-ecb
je
bound
fs
mov
rcll
mov
out
jae
pop
and
jge
cmp
clc
dec
cmp
insl
mov
push
xchg
lds
or
loopne
mov
and
mov
data16
les
push
cmp
jmp
pushf
xchg
cli
push
test
test
test
pop
in
adc
jecxz
xor
loope
jmp
popf
mov
dec
jg
pxor
mov
xchg
mov
andl
xchg
in
mov
mov
add
add
mov
mov
add
cld
ds
sti
or
mov
cwtl
adc
mov
dec
jmp
dec
push
sbb
clc
mov
jl
ds
dec
mov
clc
in
enter
repnz
je
xor
mov
push
sti
stc
imul
incb
fstpl
in
or
stos
adc
aam
jbe
push
daa
stos
and
xlat
cwtl
btc
repz
fldt
cmpsl
adcb
in
add
cs
iret
aaa
mov
cmp
cmp
popf
pop
cmp
sbb
lcall
out
inc
dec
loopne
xchg
dec
rep
fldcw
pushw
or
xchg
popf
fs
mov
in
push
faddl
cmpsl
adc
cli
rol
shl
and
push
sub
mov
cmp
mov
xchg
mov
mov
pop
mov
mov
test
pop
cmp
pop
ret
cmp
and
icebp
mov
movb
pop
mov
adc
pop
add
pop
adc
hlt
cmp
cmp
mov
jle
adc
fsubr
aaa
outsb
mov
pop
sbb
xor
sub
in
mov
mov
enter
dec
ret
and
and
and
sar
mov
fld
imulb
ss
cmp
inc
sub
fsubs
push
dec
add
or
nop
pushf
insl
adcl
adc
ret
jp
pop
xor
mov
push
mov
jns
stc
ja
and
add
xchg
and
mov
push
into
rclb
push
mov
or
sub
inc
cli
push
nop
test
and
adc
fldt
xor
xor
mul
and
and
orl
ss
aad
inc
mov
outsb
xor
loope
cltd
pop
incl
mov
cmpsb
mov
dec
ss
andb
inc
sbb
mov
push
mov
sbb
aaa
dec
inc
cmpsl
jge
push
fwait
push
into
and
add
jbe
mov
inc
lcall
dec
inc
icebp
ret
jl
std
pop
dec
pop
add
call
outsl
orl
pusha
outsb
inc
push
and
int3
adc
sbb
dec
out
cmp
out
xlat
xchg
sbb
pop
fwait
dec
inc
mov
rorb
xor
invd
xor
jae
mov
jp
ficompl
fildl
push
mov
lock
add
jmp
pop
ret
dec
insb
xor
ss
sbb
cli
adc
rorl
sbb
call
adc
pop
sahf
jne
popa
xchg
inc
cltd
mov
add
ds
rorb
adc
push
add
lock
add
mov
cmp
fcoms
es
mov
mov
mov
out
inc
mov
inc
mov
enter
and
das
sub
test
and
mov
cmp
lea
xor
adc
aas
push
sbb
mov
adc
ss
insb
in
lcall
cs
sbb
pop
add
jl
add
jge
dec
cmp
xchg
adc
scas
sub
outsb
ret
lret
xchg
aaa
call
stos
mov
jmp
fiadds
xor
push
or
rcll
cmpsb
xorb
mov
ljmp
dec
fbstp
cmp
nop
cs
cld
scas
divb
xlat
iret
cmpsb
mov
mov
dec
xlat
mov
cmpl
mov
adc
lods
xor
dec
jbe
int
mov
inc
sarb
xchg
and
mov
inc
xchg
xchg
add
aas
add
pop
into
sahf
xor
fildll
pop
mov
dec
inc
push
sub
bound
pop
imul
cld
jle
dec
or
sarb
sub
pop
scas
inc
rorl
leave
mov
imul
push
and
push
xlat
mov
jg
test
cmp
icebp
push
test
mov
pop
loope
dec
sbb
popa
xchg
jb
and
outsl
push
stos
xlat
clc
cmpsl
sti
add
or
adcl
mov
int
sarb
jp
and
mov
mov
sarl
cmp
inc
jle
jno
decb
sub
sub
or
or
orb
sbb
jle
inc
jns
adc
and
sbb
mov
jno
mov
or
adc
sbb
mov
inc
xlat
sub
add
xor
enter
pop
inc
cmp
inc
mov
hlt
sub
sub
push
push
cli
lds
cli
xchg
fsubl
rorb
insb
stos
and
insb
jmp
push
cmp
pop
inc
or
add
jb
cli
loop
xchg
dec
pop
xchg
or
cli
fcompl
adc
push
ja
xchg
mov
test
and
cmc
pop
xor
add
decb
pop
test
dec
or
mov
sub
push
mov
push
clc
sbb
inc
fimull
inc
rcll
rol
out
popa
cmp
mov
rorb
cmp
imul
sar
ja
jb
mov
push
hlt
jecxz
add
ljmp
pop
movsl
add
mov
shrb
mov
jge
bound
rorb
dec
nop
ss
mov
mov
dec
insl
aaa
rorb
mov
xor
out
inc
push
ret
lods
mov
push
sub
lea
rorb
inc
lret
inc
imul
bound
inc
push
mov
or
popf
out
loopne
jge
mov
repnz
xlat
adcl
mov
or
insb
sub
or
cmpsl
sub
movsb
stos
or
jno
sarl
pushl
arpl
stos
or
inc
mov
mov
hlt
in
jb
xchg
in
fsts
int3
jl
mov
fsubr
imul
sbb
jmp
mov
decl
add
rcrb
push
mov
iret
ss
inc
jge
popa
lahf
pop
adc
inc
stos
enter
insl
mov
nop
mov
push
or
or
jo
jl
xchg
inc
daa
add
xor
test
inc
int
pushf
xorl
pop
and
sbb
mov
jg
in
push
mov
pop
int
ffreep
mov
aam
insl
stos
fcoml
or
imulb
dec
lock
nop
add
out
push
fidivrl
ret
cmpsb
inc
pop
lcall
icebp
dec
mov
adc
push
inc
adcl
sahf
push
pop
xor
fdivrl
dec
mov
xchg
xchg
test
add
xchg
push
cmp
push
aam
jne
test
mov
push
mov
adcb
js
and
mov
ljmp
sarb
loop
pop
loop
adc
pop
cmp
es
popf
mov
cld
and
aas
or
std
roll
jmp
outsb
or
lahf
xor
or
or
aaa
xchg
mov
in
mov
outsb
test
aas
cltd
jo
hlt
mov
fcompl
mov
je
pop
pop
aas
jp
inc
adc
xor
insb
mov
test
test
mov
mov
add
mov
and
sub
sub
notb
xchg
movsl
test
pusha
sub
add
adc
ja
stos
or
xlat
mov
or
and
push
mov
das
push
mov
inc
and
push
jecxz
les
loop
lock
pop
cmp
ljmp
insl
and
jb
stc
lods
loopne
inc
cld
mov
hlt
enter
push
add
ffreep
inc
loopne
push
mov
jae
sub
pusha
ja
decl
add
sub
sahf
mov
dec
sarb
inc
fsubl
dec
loopne
inc
push
mov
jo
push
out
lcall
inc
xor
sbb
adc
incl
mov
xchg
lea
aam
pop
jg
popa
leave
shrl
push
mov
incl
and
out
test
rol
mov
sub
subb
outsl
or
push
adc
adc
push
jmp
push
dec
mov
inc
jp
bound
dec
mov
sbbb
scas
loopne
sub
test
clc
lds
dec
stos
jle
nop
pop
adc
sub
inc
add
negb
movb
stc
jl
jmp
jbe
jmp
xchg
call
cli
push
movsb
cmpsb
cmp
mov
cmp
int3
divl
add
inc
shl
pop
add
jno
cli
sbb
add
sbb
adc
das
add
dec
aas
jbe
les
pop
fnstcw
and
clc
sbb
aas
dec
or
push
aas
push
int3
xchg
pusha
aas
pushf
pop
push
shlb
jmp
sub
mov
mov
mov
fwait
jle
je
shlb
rorb
cs
clc
push
shlb
dec
and
mov
notb
mov
mov
cmp
call
lea
les
mov
les
adcb
notl
jbe
loop
add
jnp
push
sti
xchg
fidivrs
jl
jmp
mov
fstl
mov
arpl
frndint
mov
sbb
lcall
fsubp
outsl
sbb
icebp
xchg
pusha
cmp
or
lods
push
lret
loopne
or
pop
mov
jo
jne
inc
pop
pop
hlt
jne
inc
sub
mov
cltd
aam
and
aad
lahf
rolb
add
addr16
dec
int3
sbb
mov
aas
mov
push
insb
mov
mov
sub
jo
movsl
pop
out
dec
and
add
or
lret
subl
loop
jo
bnd
or
lea
xchg
pop
jl
mov
hlt
icebp
shl
and
sbb
lods
decl
xor
and
fisttpl
mov
xchg
jle
jb
adc
dec
les
cmp
ficomps
add
in
ljmp
sbb
pop
or
pop
adc
mov
ret
mov
jp
add
pop
and
jl
xor
sbb
adcb
push
scas
in
mov
dec
cmp
jg
xor
adc
xchg
dec
mov
cwtl
adc
jg
fcmovbe
and
les
push
stos
dec
mov
xor
fnstcw
fcoml
xchg
mov
mov
xchg
dec
movw
and
xchg
dec
sub
sub
aas
mov
cmc
pusha
pop
and
adc
inc
jle
test
inc
data16
xchg
cs
out
xchg
push
mov
mov
loop
jb
cld
ljmp
imul
dec
mov
adc
bound
fld
cltd
push
cmp
jb
mov
arpl
leave
lret
inc
mov
push
outsl
outsl
add
sub
addr16
pop
add
and
jmp
outsb
scas
push
sti
dec
or
fnstenv
push
mov
xor
adc
imul
bound
jle
add
insb
sbb
inc
stos
outsl
bound
pusha
loop
cli
clc
and
cwtl
push
push
lahf
shlb
dec
xchg
bound
scas
mov
sbb
ljmp
xchg
pusha
push
jb
push
jl
lret
icebp
sub
push
aaa
dec
ss
ret
xchg
push
lahf
imul
stc
xor
and
repz
sbb
cs
sbb
and
cwtl
fsubp
mov
sbb
mov
popa
pop
mov
mov
data16
sbb
stos
mov
xor
cmp
fsts
jo
lods
sub
sub
mov
mov
mov
cmpsb
push
test
inc
ja
cli
aaa
mov
roll
adc
sub
add
or
xchg
cmp
jp
push
cmp
and
jb
push
pushf
mov
inc
imul
icebp
add
test
or
nop
les
loopne
adc
std
push
xchg
jae
sar
jl
mov
ret
add
mov
fisubrs
add
ljmp
int3
dec
inc
mov
cwtl
and
dec
push
popa
loopne
bound
sub
sub
lahf
mov
ljmp
movhps
rcrb
adc
fdivr
push
adcb
or
jp
mov
cs
les
cwtl
pusha
xchg
test
ret
sub
jecxz
mov
sub
inc
mov
lea
inc
sub
pop
xor
jp
les
or
bound
roll
xchg
push
jo
cmp
enter
inc
inc
loopne
jo
divl
xor
je
out
xor
mov
dec
les
or
push
push
popf
stos
test
cmp
cmc
mov
inc
mov
das
xchg
push
mov
mov
xor
loop
ja
jmp
and
jno
mov
aam
movsl
cmp
test
fadd
fists
shlb
sub
jbe
dec
push
inc
pop
rcl
or
in
rclb
jne
shrb
outsb
ds
or
lcall
mov
and
jb
jp
mov
push
xchg
adc
mov
je
or
loopne
pop
mov
cld
xchg
loopne
fiadds
cwtl
add
and
jle
xor
test
icebp
icebp
adc
sbb
mov
or
sub
test
div
dec
sbb
mov
out
jl
inc
mov
mov
mov
stos
dec
loope
push
ljmp
jle
test
movb
pushf
xchg
and
mov
pop
shrb
lock
jecxz
sbb
jmp
ja
sti
addr16
push
shr
jg
jnp
xor
adc
push
xor
popf
inc
stos
add
mov
adc
jae
cmp
cmp
shll
jo
pop
mov
iret
pop
mov
std
jge
lret
push
shlb
lea
and
hlt
mov
pop
push
and
stos
out
loopne
push
pop
pop
sahf
scas
push
std
mov
push
stc
stc
daa
pop
or
xor
lahf
and
mull
mov
sar
inc
sbb
xor
mov
adc
rcrb
psraw
mov
ficoms
imul
or
pop
dec
cmp
les
out
pop
jne
adc
iret
mov
sub
scas
pop
mov
add
add
mov
test
mov
mov
mov
cmpsb
push
adc
inc
sub
scas
sarl
iret
mov
sarb
mov
mov
xchg
sbb
cs
jbe
mov
imul
cmp
sub
ficoml
je
shll
cld
mov
sub
dec
mov
cltd
xchg
es
cmc
xor
dec
jmp
jmp
pop
push
movl
std
shll
jo
push
gs
clc
and
and
jo
shlb
and
lock
test
xor
mov
cmp
shll
leave
testb
ljmp
cwtl
cmpsb
pop
or
push
popf
push
loope
jle
mov
in
pusha
cs
add
dec
insl
insl
test
adc
lcall
lret
loop
insl
arpl
lods
fbld
lahf
gs
mov
mov
push
push
xchg
loop
sbb
sbb
dec
jg
fimuls
rorl
cld
pop
fwait
xchg
aad
lcall
aad
sbb
push
lcall
mov
mov
pusha
jae
cwtl
add
mov
test
cwtl
push
and
pop
enter
lock
jne
aaa
jbe
popa
and
adc
ret
mov
xor
fsubl
int
pop
or
mov
add
fidivrs
enter
adcb
stos
loop
nop
scas
mov
xlat
or
sti
addb
jbe
pusha
jle
in
std
push
sbb
push
push
js
test
xor
lods
sbb
insl
jbe,pn
push
call
xchg
je
popa
mov
and
jecxz
cmp
jecxz
mov
jge
mov
fsub
sbb
cmpsl
jg
and
sbb
mov
insl
jl
aam
ss
and
pushf
mov
lock
adc
cmp
mov
mov
and
sub
sbb
mov
push
or
ret
pop
ds
sbb
mov
mov
scas
dec
add
xor
add
jno
mov
rorl
or
mov
cmp
in
movl
lock
clc
je
ret
xchg
push
mov
cwtl
cmp
pop
sbb
jmp
aad
sbb
mov
movsb
mov
jl
data16
mov
lahf
pushf
push
mov
adc
add
mov
std
pop
clc
imul
hlt
jl
cmp
loopne
xor
xor
or
test
xchg
sbb
jo
or
sub
mov
pop
mov
sti
jp
pop
ljmp
cmp
adc
lret
fisubs
push
add
sub
mov
sub
jg
dec
pop
push
js
pop
arpl
out
das
cmpsl
mov
repnz
arpl
or
ficomps
cwtl
push
mov
add
rcrb
mov
mov
aam
dec
out
mov
jl
mov
divb
into
push
add
inc
inc
sahf
add
mov
or
xchg
dec
mov
test
pop
xchg
loop
clc
call
mov
inc
repnz
jl
rcrl
mov
test
pop
js
inc
cld
xor
dec
inc
ds
sub
sub
or
out
inc
cwtl
mov
xchg
pop
push
in
cmpsb
xchg
inc
mov
movsl
rcrl
adc
notb
jecxz
test
and
adc
or
sbb
int
clc
out
add
inc
adc
aam
and
add
pop
cmovbe
shrl
call
and
xchg
das
cmc
cmpsl
sbb
jmp
xor
lret
addr16
pop
or
pop
test
ss
jo
mov
aam
incl
cmp
xor
sub
or
or
lods
add
inc
cli
outsl
loope
mov
mov
or
add
imul
and
rcrb
cmp
lret
push
mov
sub
inc
adc
nop
push
in
and
xchg
fistpll
lods
add
jbe
cmp
jge
shlb
push
insl
jbe
push
mov
scas
or
mov
inc
inc
sbb
jns
movsl
sbb
addr16
mov
imul
xor
out
push
xchg
inc
stos
mov
push
hlt
mov
push
add
push
ret
xor
jge
mov
push
dec
and
popf
mov
and
daa
dec
out
out
add
xor
pop
lods
daa
aas
mov
mov
outsl
jno
inc
data16
js
pusha
add
iret
insb
dec
popf
insl
lahf
in
mov
cli
inc
push
sub
loope
jg
dec
sub
fsqrt
and
or
shlb
adc
in
negl
mov
add
dec
cwtl
int3
inc
cs
pop
rol
add
fs
aad
test
add
scas
push
sub
inc
and
scas
fsub
in
sub
or
lahf
sbb
movsb
mov
sbb
jp
adc
push
rorb
mov
mov
lcall
inc
dec
push
bound
dec
rcl
fnsave
adc
arpl
stos
pushf
test
inc
inc
mov
jp
xchg
dec
aas
mov
rcr
inc
dec
sbb
xor
les
sub
mov
mov
in
pop
cmp
ret
sbb
pop
mov
lds
cs
mov
adc
dec
mov
mov
pop
mov
sbb
push
mov
lahf
push
cmp
aam
dec
fsubrs
or
test
pushf
clc
inc
push
int
xor
adc
les
ja
in
push
daa
mov
popf
adc
rcrb
ret
mov
sbb
xor
fbstp
movb
push
lock
pop
push
inc
decl
pop
sub
push
call
or
mov
push
push
negb
es
dec
jo
adc
and
xor
frstor
fwait
jle
pop
lods
out
mov
sbb
add
pop
lods
pushl
fiaddl
cs
inc
stos
sub
push
fcompl
popa
and
psubq
nop
dec
fs
clc
ds
add
inc
push
jnp
push
nop
inc
repz
adc
inc
insl
dec
sbb
add
push
mov
adc
loopne
sbb
mov
in
pop
clc
shl
add
lods
dec
ret
push
nop
mov
pop
add
dec
jbe
mov
and
scas
xchg
push
or
jb
testb
rcrb
or
outsl
enter
adc
out
loop
popa
and
aas
sarb
mov
mov
mov
mov
imul
sub
idivb
pop
xor
ficoms
lock
popf
orb
pop
sub
ja
cmp
add
enter
and
insl
je
and
ds
add
or
mov
xor
movsl
and
lds
pause
cltd
add
jne
dec
add
aaa
out
adc
aas
cmpl
ja
lahf
sbb
xchg
movsb
cmp
pop
push
scas
mov
scas
sbb
test
sub
adc
sbbl
push
push
cmp
adc
je
mov
dec
push
add
mov
das
in
ret
pop
das
ret
pop
xor
ror
cmp
in
enter
mov
outsb
and
xor
shrb
sti
inc
mov
test
push
mov
test
mov
fdivs
or
jle
or
lahf
cltd
loope
adc
adc
out
andl
call
popl
sbb
and
out
add
into
dec
mov
leave
xor
test
popf
xchg
and
hlt
sar
jecxz
sbb
xchg
mov
xor
pop
rcrl
mov
push
int
fwait
dec
add
fsubs
cmp
mov
fnstenv
adc
cwtl
dec
call
pop
sbb
push
adc
cltd
dec
xor
movsl
lret
sub
icebp
data16
js
xchg
add
hlt
mov
test
push
push
mov
in
inc
pop
inc
add
subb
decl
dec
imul
lcall
cmp
jno
cmpsb
out
mov
pusha
mov
outsb
add
lods
cltd
call
and
nop
jg
push
loope
adc
leave
cs
mov
test
add
pop
mov
mov
xchg
and
es
push
mov
stc
push
icebp
pop
js
lods
xor
xchg
sbb
fs
pop
pushf
ss
cmpsl
pop
or
push
jge
pop
inc
andb
ljmp
clc
or
cmp
mov
jle
xor
lahf
cmp
jne
ret
mov
shll
push
pushf
dec
fidivrl
lods
inc
out
iret
sbb
ret
cmpsl
pusha
std
mov
cmc
aas
lods
add
sub
xor
xchg
push
inc
cmp
les
cmp
xor
mov
scas
movsb
push
jo
adc
add
stc
dec
xlat
xlat
in
sbb
mov
scas
dec
inc
std
xlat
das
loop
xchg
mov
xchg
cli
rorb
pop
in
push
pushf
push
pusha
fwait
scas
sub
xor
neg
push
mov
add
pop
out
inc
adc
add
test
bswap
pop
lahf
sub
scas
add
xor
rorb
popf
es
sbb
push
imul
dec
cmp
sbbl
or
out
inc
popa
lock
shlb
sub
cmc
xchg
pop
shrb
xchg
dec
add
add
stos
jl
cmp
cwtl
in
and
outsb
push
dec
or
xchg
cmp
mov
add
and
mov
int3
das
push
js
cld
add
scas
push
xchg
lcall
or
sub
push
ljmp
or
sub
jnp
xchg
jecxz
mov
mov
stos
inc
mov
and
push
mov
inc
popa
or
cli
or
xor
pusha
shl
leave
push
test
push
in
adc
loope
inc
sbb
rcrb
xchg
cwtl
lods
pop
adc
jle
sbb
js
jmp
js
pop
pop
pop
dec
mov
dec
mov
and
repz
outsb
push
stc
inc
pop
dec
push
xor
cmp
sub
xor
rcll
mov
dec
dec
mov
loopne
popa
sub
pop
xor
loopne
adc
test
rorb
pop
call
ljmp
mov
andb
dec
or
ds
or
orl
cmp
and
cmp
loopne
mov
xchg
adc
aaa
mov
inc
inc
push
je
xor
mov
lret
sub
sahf
popa
jne
jo
std
xchg
ficoml
inc
or
and
jecxz
mov
jl
add
push
inc
insl
xlat
js
pop
lahf
jl
or
or
xchg
sbbl
add
loop
sub
cmp
js
movsl
sub
push
push
movsb
inc
cli
ret
enter
aaa
add
add
sub
sahf
mov
test
xor
pop
adc
pushf
xor
in
addl
pop
jl
pop
adc
add
mov
mov
fsubrp
mov
arpl
xor
cld
jg
adc
out
adc
cmp
ljmp
cmp
jl
rorb
orb
cmpsl
xorl
jle
xor
adc
lea
or
xchg
ret
movsl
add
cmpsl
mov
mov
fsts
or
fsts
adc
sarb
insl
mov
sbb
mov
adc
andl
inc
or
out
and
mov
out
mov
decl
push
popf
ja
xlat
or
mov
mov
imul
icebp
mov
cmp
sub
xchg
sub
sub
pusha
jo
push
daa
sbb
sbb
addb
ja
jge
jle
dec
push
jp
loopne
aad
inc
or
jmp
test
das
mov
js
push
fsubr
enter
inc
fildll
inc
or
xchg
cwtl
je
jno
push
test
push
rcll
add
nop
lret
lods
mov
fsubs
add
loopne
scas
lahf
test
mov
in
je
pop
gs
or
adc
scas
sbb
xchg
roll
sub
aaa
fiadds
push
mov
and
dec
shl
pop
or
test
jno
pop
call
loope
lock
or
iret
in
and
cs
mov
mov
xchg
sbb
out
pop
enter
jp
clc
daa
mov
inc
mov
mov
lret
mov
pop
jns
jp
rclb
shlb
rol
pop
sbb
mov
or
lret
insb
jnp
popf
pop
aam
cli
in
out
jns
mov
push
pop
jne
popf
sub
loopne
sarb
cmp
mov
push
nop
cmp
pop
mov
movsb
dec
mov
popa
pop
xor
push
cmp
sub
hlt
mov
int3
xchg
mov
push
xor
jmp
xlat
inc
dec
xchg
test
pop
loope
pop
push
inc
cmp
cmp
mov
mov
pop
mov
in
fcompl
or
mov
icebp
test
xchg
nop
push
inc
js
sub
fmull
mulb
jb
scas
inc
xor
cmp
adcl
jnp
mov
sahf
cmp
lret
mov
stos
imul
fldl
dec
mov
mov
jae
sbb
dec
push
scas
dec
sbb
and
inc
or
lea
jge
mov
pop
out
inc
xchg
lahf
xor
mov
xchg
ret
shl
int3
inc
adc
push
jo
xor
stos
xor
mov
test
loopne
cmp
mov
pushf
repnz
cld
push
jmp
pop
cmpsl
dec
cmp
mov
mov
jge
add
fsub
sahf
push
mov
mov
or
mov
sub
lea
mov
ficoms
dec
sub
cwtl
out
lcall
mov
aaa
mov
or
xchg
mov
push
ljmp
sbb
jecxz
mov
cld
inc
mov
push
bound
inc
sub
dec
add
push
mov
lahf
xchg
lea
mov
or
data16
mov
and
pop
mov
jp
mov
cmp
out
sub
loope
in
fstpl
jb
dec
rorl
fsubrl
jmp
and
test
sar
push
pop
pop
add
push
xchg
push
je
xlat
jp
and
lahf
or
cmpsb
mov
adc
ja
mov
out
pop
les
pop
xchg
or
and
fs
sahf
xchg
clc
loope
rclb
test
dec
fstl
popf
push
pop
xchg
push
xor
call
add
stos
clc
shr
cmp
pushf
fimull
or
mov
bound
outsb
sbb
xchg
push
mov
incb
into
and
popf
shlb
sub
aas
inc
stos
xor
dec
je
pop
dec
cmp
add
dec
cmp
xor
add
imul
sbb
stc
jecxz
xchg
or
mov
and
push
mov
fimull
lods
decl
call
arpl
push
std
xor
pop
int
push
std
in
es
lea
jno
rol
les
hlt
cmp
imul
pop
push
add
push
stos
sti
ret
or
dec
add
shlb
jb
les
add
aam
je
xchg
and
xchg
fcmovbe
push
sub
xchg
mov
sub
cmp
sbbb
add
aaa
fstpl
popa
mov
lds
sub
push
or
testl
mov
or
pop
test
sbb
addl
loop
pusha
and
in
cld
pushl
jmp
mov
mov
jne
aam
insb
clc
add
fisubs
inc
mov
pop
cld
andl
add
cli
and
out
inc
lds
repnz
leave
push
mov
xchg
cld
or
xchg
in
dec
fdivrl
pop
or
mov
ss
lret
cmp
fisubl
jg
ja
push
aaa
cltd
popa
call
bound
mov
jmp
sbb
loopne
cmpb
mov
jb
cmp
mov
push
je
adc
ss
popl
dec
mov
push
mov
add
inc
dec
inc
or
xchg
andl
inc
inc
shl
inc
dec
nop
push
repnz
mov
cli
scas
mov
fcoml
sbb
inc
rcrl
xchg
imul
and
adc
xor
jmp
add
sbb
add
nop
lret
hlt
ss
cmp
cltd
sbb
sbb
mov
or
ret
arpl
lret
push
ror
shlb
inc
mov
test
pop
inc
sub
add
xor
loope
std
cmp
inc
rcrl
push
mov
out
adc
pop
inc
pop
jbe
loopne
add
scas
add
xchg
pop
push
in
mov
shlb
pusha
inc
lahf
in
outsl
lcall
pushf
cmpsb
bound
insb
jb
loopne
stos
hlt
adc
dec
lret
mov
jne
pop
dec
clc
xorl
push
xchg
lahf
xor
inc
incl
mov
call
sub
ds
test
mov
fsubl
call
inc
add
imul
inc
jno
push
hlt
sbb
movl
pop
xor
dec
cmpsl
mov
push
or
cmpsl
rolb
cld
or
sti
es
loopne
dec
adc
cmp
mov
pop
repnz
iret
mov
mov
or
in
mov
pop
test
push
shlb
push
push
xor
sub
dec
cmp
add
xchg
jne
dec
arpl
or
lods
mov
iret
data16
xor
int3
adc
pop
mov
pop
xchg
or
fdivs
loope
xor
arpl
outsb
lret
test
push
aad
adc
repz
mov
pop
xor
push
sub
mov
xor
pop
xchg
mov
insl
lods
xchg
dec
adc
scas
xchg
jno
cltd
aaa
dec
repz
sub
ljmp
ljmp
in
or
cmpsb
xchg
sub
dec
dec
pop
cmpsb
incb
sbb
mov
push
add
andb
or
lcall
loop
fcoms
xlat
insb
enter
call
mov
test
rclb
sahf
sbb
rorl
jg
popa
fmuls
out
popa
inc
mov
jne
or
sub
add
scas
rclb
mov
and
xchg
cwtl
lcall
xchg
mov
cmp
jbe
push
arpl
jo
clc
ss
lret
and
nop
mov
and
jmp
adc
lcall
out
jo
les
ja
push
ljmp
rolb
mov
testb
iret
hlt
scas
shlb
outsb
int
xchg
adc
movmskps
sbb
cmp
lret
loopne
arpl
out
insb
mov
sub
mov
rep
jnp
sub
pushf
inc
inc
inc
cmc
lcall
push
cmp
movsb
ret
mov
adc
mov
icebp
mov
loopne
lret
test
pop
cltd
jle
xchg
imul
pop
add
sbb
lock
pop
pop
inc
add
mov
fwait
test
pop
sub
dec
outsb
lock
jp
add
sbb
sbb
mov
mov
imulb
mov
jnp
jns
sub
loope
cmp
xchg
fadds
jmp
mov
pop
xabort
cld
mov
sbb
xor
mov
cld
pop
pusha
xlat
loope
es
push
cmpsb
inc
xor
flds
cwtl
dec
notl
push
sbb
sbb
mov
mov
sarl
add
push
and
cmp
add
lahf
xchg
pusha
or
fistl
mov
ret
or
popa
je
inc
push
jmp
dec
push
adc
cmpsl
and
adc
xchg
dec
xor
ds
movsl
mov
out
xchg
mov
add
pop
inc
mov
and
xlat
ss
or
rclb
mov
cmp
mov
and
mov
cmp
shlb
jle
scas
hlt
gs
push
add
sub
jnp
icebp
lock
sti
mov
sti
mov
sub
inc
mov
roll
and
fidivs
ret
movsb
jo
mov
cltd
sbb
sbb
jg
stos
mov
lahf
daa
xor
ffree
outsb
cmp
adc
ds
test
sti
xlat
jmp
xchg
imul
lahf
pop
jo
out
jecxz
sahf
mov
cmc
mov
mov
push
out
and
and
lcall
xchg
xchg
jecxz
xchg
adc
or
or
push
les
sarl
sbb
jns
negl
jns
enter
pushf
and
cmp
das
sub
hlt
and
ljmpw
add
push
dec
xor
and
and
lds
and
lock
popa
push
jl
ss
in
addb
lret
jae
filds
into
out
add
test
jg
cwtl
test
mov
js
test
dec
dec
mov
or
pushf
jb
sub
bound
or
je
scas
sub
sahf
arpl
or
sub
rclb
shl
rorl
push
cmpsb
add
out
pop
sub
out
push
mov
mov
lods
pushf
out
orb
icebp
test
sub
adc
test
lea
xchg
nop
arpl
dec
sti
adc
xchg
mov
cmovne
push
mov
push
jno
cld
push
and
sub
mov
dec
add
jne
inc
cwtl
push
or
fcoml
scas
les
sub
xor
mov
pop
hlt
dec
decl
jmp
jg
data16
jp
insb
das
outsb
inc
add
lods
xor
leave
cmp
test
adc
mov
mov
mov
into
cmp
and
fisubrs
xchg
jb
icebp
ljmp
inc
out
xchg
loopw
or
out
push
and
add
sub
js
mov
aaa
cmc
call
mov
scas
insb
adc
fnstsw
add
mov
jns
push
mov
xor
test
repnz
shrl
popl
push
imul
mov
inc
xor
push
add
jecxz
mov
insb
scas
fdivrs
fimull
inc
negl
and
jno
mov
or
pusha
pop
push
stos
clc
out
cltd
mov
mov
cld
inc
mov
pop
sahf
xchg
icebp
icebp
outsl
jecxz
mov
xchg
ds
fdivs
bound
or
cwtl
dec
jmp
xchg
orl
mov
aaa
pop
cmovs
mov
cmp
stos
pop
sbb
add
and
mov
lods
daa
and
clc
dec
popl
jne
xchg
cmp
les
jge
jmp
adc
push
jg
daa
ljmp
incl
rolb
mov
rorl
push
loop
jb
aaa
mov
mov
mov
mov
aad
pop
mov
call
dec
sub
ret
jecxz
mov
add
fdiv
aas
ljmp
add
pop
cmpsb
subl
fisubrl
js
inc
pop
movsb
xorl
popa
imul
lahf
xchg
pop
rclb
ja
mov
xchg
aad
inc
cld
jmp
in
sub
push
rolb
xchg
and
jne
add
jecxz
loope
lret
push
in
jle
mov
dec
in
loope
add
out
and
push
inc
xchg
sub
out
lret
test
pop
adcb
sub
notl
sub
add
mov
aam
add
cmc
les
pop
call
push
mov
ja
and
loope
jbe
push
sbb
dec
orb
data16
pop
gs
lcall
jle
mov
and
shll
loop
insb
mov
scas
mov
mov
jp
cmp
nop
addl
aaa
imul
lods
pop
fnsave
in
add
pushf
xchg
pop
push
sub
mov
xchg
ret
sbb
iret
hlt
push
and
stos
scas
sub
push
xor
ljmp
popf
add
cmc
fwait
cmpsb
pusha
fdivrp
dec
outsl
or
rorl
loopne
popa
and
mov
cmp
pop
jle
or
xor
lods
adc
js
cli
js
cwtl
push
pop
hlt
xchg
dec
sub
addl
xchg
inc
mov
sub
sbb
xchg
sar
imul
or
dec
sbb
sub
not
sbb
fildl
cmp
lods
insl
rorl
pop
mov
push
ljmp
xor
rolb
pop
out
mov
sbb
in
je
push
inc
cmp
dec
sbb
into
or
cld
pushf
dec
jne
push
ret
xorb
or
adc
inc
adc
mov
xlat
aad
jecxz
pop
mov
pop
lock
and
sbb
mov
inc
cli
cmp
jae
movsb
lcall
mov
test
insl
dec
test
sub
xchg
or
xchg
sub
xor
inc
in
cli
mov
fidivrs
movsb
popa
scas
adc
add
mov
insb
xchg
dec
add
lahf
hlt
call
cmpsb
enter
dec
mov
add
mov
inc
nop
ss
sbb
stos
ja
add
call
leave
jb
in
sub
int3
mov
neg
outsl
fists
insw
dec
or
dec
push
jns
divl
outsb
bound
leave
ret
outsb
outsl
mov
cmp
dec
fadds
add
inc
sbb
add
sub
in
scas
mov
mov
repz
mov
bound
mov
xor
jge
sbb
popf
outsb
je
add
xchg
xlat
call
inc
dec
inc
jmp
fmull
ljmp
insl
push
jbe
jl
jb
sbbl
adc
push
pushl
push
es
or
jmp
xor
mov
insb
inc
dec
add
out
je
add
inc
pushf
pop
inc
data16
aaa
ja
insb
imul
inc
mov
rclb
xchg
roll
sbb
outsb
fimuls
cmp
outsb
xor
cli
push
adc
fisubrs
add
dec
cmp
outsb
lods
dec
aaa
jne
addr16
rcll
xchg
and
loop
push
mov
inc
pop
rorb
push
sub
fimuls
dec
push
ss
shrb
in
mov
pop
popa
xor
pop
rcrl
adc
testb
outsb
push
mov
outsb
push
mov
add
sbb
push
addr16
pop
arpl
mov
inc
fistps
daa
jmp
mov
rcr
test
dec
xor
roll
mov
dec
add
push
or
dec
add
cld
popf
out
icebp
sti
insl
fimuls
inc
xorb
imul
js
xor
xor
mov
pop
jl
inc
inc
imul
mov
enter
icebp
jmp
pusha
mov
fiadds
call
xchg
add
mov
scas
adc
xor
je
movsb
mov
mov
jbe
fdivrl
jo
lock
fwait
or
ja
cmp
push
mov
pop
mov
mov
sbb
sbb
mov
inc
rorb
movl
or
repnz
lods
jnp
mov
es
mov
lock
push
insb
ss
inc
movl
add
repz
xor
and
cmpsb
mov
pushf
cmp
xor
imul
les
insl
jo
dec
call
aam
adc
jae
shlb
push
push
jbe
jbe
in
pop
add
arpl
sbb
ljmp
bound
ss
lret
jnp
cmp
mov
pusha
mov
mov
and
or
insl
gs
inc
mov
je
pushl
push
inc
pop
mov
push
lea
push
lea
push
push
push
les
or
push
ret
loope
dec
dec
mov
js
pop
loope
stos
inc
fistps
jo
xor
loopne
lock
dec
gs
pop
dec
negb
rorb
inc
sarb
lcall
push
xor
dec
cld
dec
inc
inc
fldcw
push
rcrl
dec
xlat
mov
mov
or
dec
inc
dec
sbb
insb
lds
pop
out
xlat
ret
data16
fldenv
inc
imul
popa
ret
pop
cld
jne
dec
push
push
imul
or
cmpsl
dec
xor
iret
fadds
push
sti
cmp
inc
mov
dec
je
into
dec
pop
sbb
insl
inc
insb
fisttps
mov
mov
fnstenv
sub
xchg
jecxz
sbb
dec
pusha
idivl
cmc
popa
push
pop
inc
push
insl
imul
clc
clc
dec
inc
decb
ret
dec
or
pop
mov
mov
data16
push
xor
in
outsl
es
dec
inc
dec
dec
sub
sub
jne
fsubrs
or
outsb
adc
or
aaa
hlt
inc
fadd
scas
mov
lahf
add
dec
ret
push
mov
lods
inc
or
insl
mov
dec
and
out
xchg
pop
ret
mov
xor
push
es
add
pushf
push
insb
push
push
xor
mov
push
add
push
das
adc
jl
ljmp
bound
clc
mov
inc
loopne
dec
nop
pop
jno
mov
add
lods
mov
es
push
dec
push
nop
jae
or
addb
xchg
sahf
imul
xorb
jnp
cmp
dec
loopne
xchg
pop
sub
inc
jp
add
push
jl
cmp
test
std
int
mov
inc
push
sub
pushf
cmp
je
and
dec
inc
inc
xor
insb
inc
push
arpl
outsl
fidivl
push
outsb
pop
cmp
add
push
fs
gs
push
sbb
inc
jmp
adcb
mov
push
orl
int
sub
sbb
cmp
push
bound
dec
jl
add
push
hlt
and
dec
scas
adc
add
addb
addr16
mov
add
cwtl
aad
lahf
pop
or
and
arpl
lcall
jo
aam
mov
inc
or
call
xor
cmc
popa
ss
mov
roll
add
dec
fadds
fidivrl
or
mov
pop
mov
inc
push
addr16
mov
in
pop
in
or
jg
sub
shll
inc
insl
jmp
rorl
xchg
cmp
int3
shlb
dec
cmpsl
scas
push
mov
sbb
js
pop
or
iret
out
les
lock
in
inc
jns
loop
dec
dec
inc
sbb
pop
insb
inc
push
loope
mov
and
aam
ljmp
call
inc
je
test
sub
xor
call
xchg
add
add
sub
lahf
scas
mov
loop
push
inc
lahf
je
lds
dec
ss
ja
ss
mov
ret
sbb
outsl
imul
inc
dec
cli
or
cltd
into
cmp
or
or
rol
push
int
pop
push
in
dec
inc
xor
push
ret
dec
push
jno
add
add
pop
inc
ja
scas
ss
scas
mov
lods
xchg
fsts
mov
push
imul
insl
loope
repnz
pushf
inc
sub
inc
jnp
sbb
arpl
xchg
ljmp
dec
push
popa
inc
bound
hlt
push
jno
add
push
pusha
push
push
push
into
into
adc
lahf
mov
mov
pusha
cs
ja
dec
xor
mov
fdivr
mov
dec
movl
and
add
ljmp
xchg
pop
fldl
push
mov
jge
xor
fildll
push
push
pop
xchg
inc
jb
add
rcll
push
lret
inc
sbb
mov
dec
imul
xor
call
mov
fdivs
push
push
icebp
jle
fcompl
test
outsb
jns
ss
pop
ja
fsubl
aad
outsb
or
jne
pop
rcrl
inc
or
inc
pop
movsb
jno
jb
cs
xor
mov
fistl
scas
orb
push
lcall
xlat
sbb
loope
dec
dec
cs
dec
sub
push
inc
pop
sarb
mov
dec
push
adc
sbb
cmp
xor
push
mov
mov
add
test
jl
push
loope
orb
test
fldenv
dec
mov
cltd
js
lcall
clc
pushf
dec
mov
bound
es
dec
arpl
mov
push
aas
ret
gs
pop
push
in
push
inc
insl
inc
push
addb
je
mov
aas
scas
mov
dec
cmpsl
jns
imul
gs
pop
push
outsb
je
jo
shr
xor
xchg
out
push
aaa
inc
add
pop
mov
xchg
dec
shlb
jp
addb
stos
cmpb
js
inc
push
inc
insb
mov
push
cld
bound
pusha
dec
mov
push
dec
dec
dec
into
mov
and
jmp
dec
jns
lcall
out
push
dec
js
mov
cld
cmp
inc
lods
fmuls
scas
pop
mov
xor
insl
js
faddp
and
xchg
jo
push
fdivrl
lods
mov
mov
clc
or
test
fisubrl
add
int3
int3
push
xor
icebp
sbb
je
fwait
cli
outsl
xor
mov
test
push
push
or
push
int
filds
sbb
cmp
in
xor
inc
cld
jmpw
add
ja
sub
clc
ret
popa
sbb
push
clc
cld
push
jecxz
sbb
cmp
cmc
cmpsb
adcl
gs
ds
or
mov
pop
push
mov
stc
adc
dec
push
add
push
clc
pop
add
clc
je
jb
dec
aaa
addr16
je
inc
or
hlt
xor
outsb
cli
cmp
push
ret
jmp
mov
pop
shrb
xlat
cmp
xor
jbe
lds
sub
add
jmp
sbb
lret
inc
jmp
cmp
je
mov
js
clc
inc
mov
clc
push
jo
shlb
pop
enter
mov
push
mov
xor
sahf
clc
ljmp
mov
dec
loopne
push
and
testb
inc
iret
inc
jge
add
add
in
repnz
lds
xor
adc
jae
push
sub
mov
cmp
xor
ljmp
pop
sbb
inc
push
xor
add
in
test
retw
lcall
cmp
pop
sahf
incb
xor
scas
test
xor
ja
mov
bound
and
sbb
mov
add
shll
mov
mov
jo
faddl
shll
adc
add
ljmp
add
mov
popa
jg
cmp
rolb
lods
test
cmpb
rol
ja
stc
repnz
dec
insl
dec
dec
push
jecxz
das
loopne
test
xor
dec
and
add
rcrb
popf
push
jg
popf
lods
push
mov
lods
sbb
mov
daa
decb
mov
jp
dec
dec
in
push
pop
lock
push
push
js
jecxz
inc
jo
cmp
mov
cli
push
testl
pop
lret
movb
pop
cmp
push
ret
or
or
xchg
das
mov
and
pushf
sbb
loop
mov
popa
dec
jno
in
bound
push
cmpsb
jmp
dec
pop
iret
and
addr16
add
push
dec
insb
imul
pop
cmpl
xor
mov
pop
push
cmpsb
push
pusha
ret
or
fs
call
loope
pop
shrl
push
xchg
mov
shll
sarl
sahf
out
adc
test
lock
add
nop
inc
sbb
jno
push
imul
push
ret
dec
push
test
inc
inc
inc
dec
insl
pop
dec
lret
pop
orl
repnz
inc
xor
xchg
frstor
cwtl
hlt
ljmp
pop
incb
mov
lods
subb
mov
inc
dec
es
outsb
xchg
sarb
scas
rclb
sbb
push
push
mov
mov
ss
es
in
jno
xor
shlb
rcrb
insb
rolb
cld
dec
jbe
fcompl
js
pop
ss
sub
pop
inc
push
push
mov
outsl
enter
mov
mov
lcall
jo
addr16
sbb
nop
cmpsb
jg
in
mov
inc
in
jbe
cmp
push
arpl
jecxz
cld
mov
inc
dec
push
js
xchg
ret
fs
popa
pop
inc
mov
je
ret
outsb
ss
dec
xor
jge
pop
push
dec
dec
mov
inc
fs
iret
outsb
cld
push
jle
push
je
and
lods
mov
xor
mov
clc
adc
std
cli
jmp
push
imul
dec
ljmp
mov
jecxz
inc
jb
aaa
dec
add
or
jge
rcl
dec
ss
and
inc
xchg
sbb
imul
or
lods
es
mov
sub
cwtl
ss
jb
ret
add
int3
lock
repnz
push
or
add
cmp
mov
js
inc
pop
cmc
setae
sahf
decl
mov
add
dec
inc
pop
mov
xorb
inc
lock
jecxz
add
mov
test
popf
je
adc
call
or
sub
inc
cwtl
add
sub
sbb
outsb
xor
mov
inc
inc
push
pop
jecxz
rcl
jbe
xor
dec
jno
push
dec
cwtl
testl
imulb
dec
push
enter
or
jle
stos
jecxz
pushf
gs
jo
dec
jae
inc
dec
outsl
pop
cltd
inc
orb
mov
test
lahf
or
je
or
fsubl
jb
xor
lock
and
jl
cltd
cmp
jne
leave
push
mov
mov
sub
gs
addb
sbb
mov
push
xchg
stos
xchg
push
cpuid
mov
lds
xlat
je
push
sarb
test
shrb
js
jns
js
lods
pop
jp
dec
bound
popa
push
mov
adc
les
les
sbb
into
bound
divb
je
pop
jle
sbb
mov
icebp
ret
inc
jno
enter
jo
xor
dec
push
mov
rol
xor
sub
imul
rcll
xor
pop
mov
pop
dec
fistl
jne
cmpsl
scas
sahf
andl
push
mov
sbb
int3
inc
jbe
lcall
and
inc
dec
jo
dec
cmc
push
sbb
out
int
dec
outsl
mov
dec
and
ljmp
dec
dec
sub
nop
loope
hlt
call
push
movsb
jae
lcall
lcall
inc
xor
inc
jle
in
fiaddl
dec
jnp
dec
fisubs
sbb
cmp
inc
jnp
gs
mov
dec
sub
addr16
xor
daa
sub
dec
ljmp
fiaddl
inc
sub
outsl
insl
or
movsb
push
popf
inc
pop
pop
fdivrs
dec
jle
out
call
pop
push
aas
mov
int
fidivl
in
dec
mov
jbe
out
jno
inc
or
xchg
movl
lea
cmpsb
sbb
enter
push
dec
sub
adc
mov
cmp
push
push
pop
call
movsl
and
mov
mov
jb
inc
bound
fisubl
ljmp
add
outsl
xor
or
push
jb
jp
inc
popa
or
sub
pop
sbb
fisubrl
xchg
cld
inc
sub
adc
dec
inc
repnz
pop
add
pop
xor
imul
push
popa
pop
ret
push
jge
jle
cwtl
rol
js
arpl
ss
cmc
fldenv
mov
scas
inc
sub
enter
gs
movsb
pushf
pop
mov
leave
pop
outsb
roll
outsl
fs
fisttps
inc
int
inc
popa
push
push
pop
cmp
es
mov
outsb
mov
pop
jb
pop
scas
outsl
or
bound
push
or
ljmp
stos
iret
cli
inc
popf
dec
cmp
bound
xchg
cmp
push
ret
stos
add
jp,pn
adc
xchg
inc
inc
inc
rcll
dec
add
push
movsl
cmp
scas
xchg
cld
xchg
hlt
jne
add
jmp
mov
adc
mov
popa
jns
add
mov
in
sbb
test
mov
rcrl
mov
add
pop
inc
mov
cmp
lret
fs
xor
or
insb
bound
pop
mov
insb
ss
xchg
mov
sbb
clc
idivb
cwtl
dec
outsb
fs
add
add
dec
cli
dec
enter
loop
xchg
lock
xor
rcrb
inc
out
ja
outsb
imul
dec
push
pop
cmpsb
jns
cmp
stos
xchg
pop
hlt
jmp
and
adc
fld
loop
icebp
cwtl
fimuls
clc
stos
or
scas
mov
inc
mov
ret
data16
push
inc
aaa
xor
jbe
xlat
pop
inc
cmp
hlt
shlb
addb
ss
mov
dec
or
dec
pop
stos
scas
es
orb
push
in
xor
push
dec
dec
sahf
je,pt
daa
mov
pop
ficompl
dec
push
call
xor
mov
jb
xor
js
jmp
cmp
dec
sbb
push
lock
lret
cwtl
cmpsb
dec
inc
data16
test
in
dec
add
add
xchg
fcom
inc
loopne
fcomps
fcompl
jecxz
pusha
jecxz
mov
mov
dec
xchg
push
inc
js
pop
test
outsl
mov
jmp
or
dec
roll
fdiv
nop
out
inc
push
insw
push
lods
cmc
stc
sbb
or
mov
cltd
fwait
pop
adc
inc
addr16
push
in
add
ja
mov
adc
loopne
inc
rcrl
aaa
ret
jo
aaa
push
dec
inc
into
add
xchg
dec
push
ret
dec
orb
inc
push
push
mov
es
xchg
mov
sahf
inc
dec
pop
gs
jno
jbe
dec
imulb
call
movsl
stc
je
mov
or
test
and
inc
call
clc
dec
jbe
inc
inc
xchg
sbb
inc
scas
sbb
push
bound
dec
imul
inc
mov
mov
jp
cmpsw
js
das
cmp
fwait
mov
fstp
imul
lret
test
rorb
mov
push
jo
push
lods
and
dec
add
ds
push
add
jmp
pop
jmp
repz
dec
in
xor
loopne
rorl
fcoml
fcoml
xor
inc
dec
inc
jnp
mov
loope
mov
push
or
aaa
stc
aas
or
cmp
inc
push
jbe
add
das
insl
fs
cmp
pop
ss
adc
xchg
dec
jo
loopne
ja
inc
jmp
pop
inc
xor
xor
enter
mov
ss
pop
pop
push
xchg
outsb
mov
cwtl
sbb
pop
or
xor
imul
sub
icebp
hlt
push
push
mov
jo
lock
add
inc
shll
fistpl
sbb
scas
mov
xchg
cmp
fwait
dec
push
call
cs
mov
push
mov
mov
or
add
cwtl
push
xchg
push
cmp
inc
inc
push
loopne
repz
cmp
shrl
xchg
mov
xor
rcrb
mov
cltd
gs
aas
mov
stos
mov
outsl
dec
xor
jne
dec
inc
sbb
or
shlb
jae
and
mov
bound
inc
dec
fnstenv
aad
ss
lcall
inc
jmp
je
outsb
xor
inc
stc
sbb
jmp
mov
push
dec
lods
in
loopne
int
add
cmp
roll
pop
movb
push
jb
test
inc
loopne
rol
jae
pushf
add
sti
fadds
rolb
ss
dec
jne
dec
and
dec
push
add
or
xchg
inc
inc
fsubs
inc
pop
shlb
imul
pop
push
push
xor
or
call
mov
mov
push
inc
push
inc
mov
push
in
test
inc
jbe
xor
ja
les
dec
mov
pop
push
ret
inc
xor
or
inc
cmpsl
dec
push
mov
cmp
mov
ja
sbb
push
xchg
jl
mov
cmp
adc
xchg
movsl
xchg
repnz
les
mov
dec
jl
mov
pop
push
loopne
sub
negb
dec
movsb
mov
outsb
repz
push
push
es
lret
dec
movsl
xchg
in
jns
push
fcoms
test
pop
xor
push
cli
in
mov
adcl
inc
jb
loopne
out
test
aam
sub
cltd
loop
add
rolb
sub
push
ss
dec
or
or
dec
je
insb
aaa
inc
adc
dec
cmp
or
sub
stos
bound
fcmovu
mov
lret
cld
push
cld
push
daa
sub
lret
sub
inc
in
outsl
test
lds
nop
jp
inc
xorb
sbbl
pop
xor
dec
insb
insl
jno
pop
jecxz
sbb
xor
sub
test
scas
mov
cmp
mov
test
push
outsb
filds
dec
inc
lock
fisubrl
adc
or
imull
add
dec
dec
mov
add
insb
aam
ja
gs
clc
mov
mov
xor
jle
jne
cld
push
mov
nopl
pop
adc
test
push
std
gs
inc
mov
jge
cmp
dec
outsb
jb
adc
rcrl
mov
int3
jns
jne
mov
mov
push
lret
stos
push
cmp
imul
xor
cs
jae
adc
ss
clc
repz
inc
stc
jmp
push
inc
int3
je
jl
dec
push
movsb
push
mov
xor
lcall
mov
push
xor
add
pop
or
dec
rcrb
movsb
sbb
inc
loope
jnp
js
jo
rorl
cltd
out
inc
jbe
cli
push
ja
sub
dec
insb
inc
lock
mov
lret
push
outsb
xor
xchg
lcall
add
out
push
js
push
mov
scas
pop
dec
sub
or
rorl
lds
xlat
or
and
fcmove
je
addb
mov
push
mov
outsb
rcr
or
jne
cld
or
lahf
xor
fs
out
pop
mov
dec
mov
rorb
jns
shlb
std
mov
fbstp
push
inc
dec
pop
js
imul
loop
bnd
sub
and
xor
xchg
mov
ljmp
imul
push
dec
hlt
push
in
cmp
movsb
mov
mov
fnstenv
adc
add
jge
shll
repnz
lea
hlt
call
cmp
push
rolb
sahf
push
je
dec
xlat
xchg
decb
sub
dec
addr16
push
iret
daa
and
loopne
rol
pushw
mov
cli
and
je
insl
dec
dec
mov
sub
scas
shlb
push
scas
inc
push
mov
inc
stos
jl
mov
daa
sbb
call
test
inc
jg
mov
stc
mov
ss
js
or
cmpsb
pop
pop
insb
push
jp
inc
divb
or
cs
inc
into
pop
or
push
call
mov
fmuls
sbb
cmp
push
gs
fdivs
cmpsb
dec
sar
inc
xchg
dec
mov
and
arpl
dec
push
fmull
aaa
mov
rcr
lcall
pop
inc
outsb
fists
insb
mov
add
mov
lods
bound
popa
dec
mov
cmpsl
and
jns
sub
dec
dec
xor
lock
push
ja
gs
jp
mov
pop
push
inc
pop
test
inc
jbe
fcmovb
insl
arpl
jo
ret
jo
xor
gs
pushf
add
pushf
rcrb
pop
or
pop
inc
inc
mov
push
popf
sbb
aaa
xor
rorb
jmp
addr16
insl
mov
cmp
jno
sub
scas
hlt
repz
push
xor
xor
sbb
clc
stos
add
pop
in
dec
add
daa
mov
enter
shll
aaa
imul
jmp
adc
out
add
jns
mov
fadds
xor
push
rolb
lock
add
bound
sbb
adc
push
in
pop
and
or
roll
scas
stos
mov
ds
dec
inc
mov
mov
les
ret
mov
jb
nop
test
ja
lahf
hlt
movsl
adc
inc
movsb
jmp
loope
xchg
push
imul
xchg
inc
xchg
jp
or
clc
dec
push
dec
and
push
lahf
mov
imul
adc
imul
ja
pop
lods
mov
dec
je
cs
push
inc
xlat
mov
mov
in
cmpsl
dec
dec
jb
pushl
jb
mov
dec
jg
stos
testb
xor
xor
inc
pop
and
outsb
imul
mov
xor
sub
inc
push
or
push
fstpl
push
sub
push
popa
and
iret
cmp
lock
movsb
fs
andb
add
popa
loopne
mov
dec
jno
ja
inc
inc
cmp
arpl
or
or
add
mov
pop
mov
xor
jo
push
out
aas
xor
push
int3
daa
addr16
dec
aam
mov
jns
outsb
ja
ss
adc
mov
popa
ds
fdivp
movsl
add
mov
arpl
push
ret
btc
dec
pop
inc
inc
mov
add
js
and
push
dec
sbb
fistl
bound
sbb
aaa
xor
enter
mov
inc
movl
dec
push
pop
pavgb
in
popa
mov
mov
jmp
inc
inc
adc
dec
and
call
xchg
sahf
out
add
fs
mov
xchg
ss
push
add
shll
dec
inc
or
out
xor
push
sbb
xor
push
push
stos
push
fwait
test
lahf
adc
clc
dec
enter
ret
orl
sub
push
and
xor
mov
pop
shrl
scas
cmp
lods
jae
les
push
mov
or
jb
shlb
mov
sub
movsb
loopne
cli
insb
pop
lock
push
js
lea
test
fnstcw
loop
sar
pop
in
shll
aam
dec
push
inc
mov
sahf
outsb
jle
dec
cli
inc
push
mov
test
pop
je
inc
bound
add
call
test
aas
stos
push
xor
dec
stos
rclb
inc
pop
pop
test
aaa
push
sub
jne
sub
adc
push
push
sub
fisttps
lahf
fidivrl
push
dec
jne
lock
shlb
and
subb
push
imul
add
jbe
rol
cs
sub
push
hlt
imul
pusha
mov
mov
push
ljmp
xchg
ss
out
sub
lret
js
pop
fnstenv
push
or
mov
loopne
ret
enter
arpl
dec
mov
or
inc
inc
je
les
add
aam
inc
add
push
pushf
cmp
insb
push
jmp
add
mov
dec
arpl
pop
mov
xor
in
push
mov
je
dec
inc
push
inc
xor
add
loopne
mov
fcomps
push
xor
or
dec
push
pop
popa
inc
cmp
cmp
adc
ret
dec
dec
mov
enter
adc
in
movsb
addl
sbb
arpl
jo
xor
push
inc
mov
add
xchg
inc
inc
adc
xorb
mov
mov
mov
sub
test
pop
add
xorl
and
adc
dec
push
add
xchg
stos
cmp
inc
adc
mulps
adc
xor
or
and
lret
dec
ret
cmc
dec
add
andl
adc
ds
fnsave
add
ficoml
xor
dec
xor
imul
in
outsb
notl
dec
or
push
data16
data16
push
push
add
or
js
push
xor
arpl
fdivrs
cmp
pop
or
outsl
jb
ja
pusha
or
and
out
adc
imul
addr16
push
jg
inc
add
mull
sbb
mov
mov
in
in
sub
add
jg
or
fs
daa
pop
bound
push
and
outsl
mov
mov
pusha
xor
js
outsl
push
adcb
add
mov
mov
inc
sahf
test
add
pop
fildl
and
pusha
mov
shll
mov
outsl
dec
mov
sahf
fists
xor
fisubrs
mov
or
int3
mov
push
cmpl
dec
test
jo
aam
call
dec
incl
pop
mov
lahf
pop
jl
outsl
add
jle
outsb
and
dec
insb
inc
mov
mov
pop
dec
and
loopne
and
push
jb
arpl
push
jb
jg
pop
pop
push
cmp
fmuls
jg
jle
popf
inc
aaa
or
testb
push
cmp
push
add
jnp
dec
inc
fucomi
xlat
xor
mov
mov
or
fbld
ja
aad
pop
mov
mov
push
xorb
mov
fisubl
outsb
test
outsb
daa
ja
dec
dec
dec
dec
jns
pop
les
and
cltd
ror
cli
ret
mov
cmp
in
xor
xor
push
hlt
cmp
pop
add
sub
inc
and
mov
xchg
jg
add
xchg
shr
sub
test
jp
lea
lcall
sbb
lods
rcr
push
jg
shl
ss
jl
sar
cmpsl
adc
mov
das
mov
pusha
inc
jb
out
outsb
sub
push
les
ljmp
xchg
or
xchg
dec
mov
mov
mov
add
xlat
out
incl
adc
sub
test
sti
and
jns
mov
xor
jbe
lret
pop
mov
test
outsl
cltd
ret
in
ljmp
lcall
fnstcw
je
in
or
mov
test
subl
jge
sar
and
clc
and
jle
nop
push
xor
icebp
sbb
popf
decl
jg
xchg
shlb
sahf
loop
out
and
or
loopne
xor
int
lock
pop
test
cmpsl
lods
push
call
jnp
iret
stc
cmc
or
pop
dec
je
cmpsl
adc
nop
insl
clc
test
push
aam
js
xchg
adc
in
fidivrl
std
loopne
ljmp
push
dec
jb
sbb
ret
add
out
test
or
repz
mov
mov
lcall
inc
push
clc
jns
int
inc
imul
push
adc
mov
jmp
mov
pop
xchg
mov
push
out
xchg
and
cltd
scas
int
and
aas
les
mov
fdivp
add
cmpsl
jg
add
jno
pop
je
xchg
pusha
and
mov
loop
cs
mov
mov
lret
nop
scas
fadds
sub
loopne
push
mov
cmp
fmulp
dec
mov
sub
dec
jae
mov
subl
lcall
iret
push
aas
imul
and
sub
aad
lds
pop
subb
test
cld
es
push
out
cmp
xchg
pusha
mov
notb
mov
out
sbb
mov
cmpsb
inc
sub
cmp
sbb
add
push
data16
aad
mov
rcrl
sbb
in
and
incl
repz
cmp
push
popa
pushf
loop
and
mov
bnd
cld
jg
pop
int
add
cwtl
cmpsb
inc
cli
jge
out
adc
sbb
arpl
lret
cmpsl
icebp
movsl
cmpsl
xchg
subl
mov
cld
push
push
push
and
jg
cmpsb
push
fmull
mov
hlt
sbb
pop
inc
cmpsb
stos
jb
mov
rorl
push
movsl
stos
cmp
cmp
xchg
or
mov
add
push
lods
fsub
cmp
cmpsl
cmp
lods
into
in
mov
xor
jl
pop
pop
and
inc
insb
jg
out
adc
out
push
pusha
in
adcb
mov
mov
xor
adc
loope
jmp
faddl
xor
fadds
sub
ljmp
cmp
jp
data16
fabs
mov
xchg
fidivrs
das
cs
movsb
cwtl
inc
fwait
nop
mov
cmp
mov
mov
call
cs
imul
cld
nop
jnp
or
xor
mov
in
fcmovnb
push
xor
cmpsb
cmp
xorl
pop
out
hlt
out
push
mov
cmp
insb
mov
xor
into
outsl
clc
cmp
cmpsb
mov
test
movsb
mov
fcmovb
scas
mov
push
jbe
rep
pushf
pop
test
mov
sbb
push
or
scas
mov
xchg
cmpsb
ret
popf
jb
cmp
shll
or
mov
mov
jns
cmc
push
mov
loopne
push
fnstsw
mov
mov
ljmp
adc
adc
add
cld
ljmp
xor
sarl
in
jns
inc
push
jg
pop
push
mov
inc
inc
jo
lods
jmp
insl
jg
sti
pop
and
jg
rclb
gs
cmp
jg
push
ljmp
pop
cmpsb
pop
outsb
lea
add
pop
imul
daa
addr16
aaa
movsl
mov
fildll
ljmp
loope
out
daa
iret
mov
push
into
lock
cmp
loop
pop
adc
inc
icebp
ja
call
or
cmp
leave
sti
inc
mov
inc
cmp
cmpsb
test
xor
aad
aaa
insb
lret
nop
and
push
mov
fwait
push
mov
dec
jl
add
lods
cltd
push
sub
cwtl
loopne
nop
jg
and
lods
movl
mov
push
sbb
das
mov
and
ds
jle
ret
cmp
push
cmp
lods
cld
add
lods
lea
adc
mov
decb
add
loopne
enter
jl
ljmp
jg
and
lea
mov
lock
int3
jg
cmpsb
push
push
je
mov
sbb
das
jp
cmpsl
call
push
addr16
fs
adc
dec
mov
das
cli
lock
inc
insl
adcb
fimuls
dec
call
push
arpl
in
or
adc
sub
loope
aad
jle
popf
xchg
movsl
inc
sub
mov
lock
and
jne
iret
and
leave
mov
fsts
mov
stos
mov
push
js
loopne
push
mov
cmpsb
mov
xorl
in
push
push
add
mov
mov
inc
outsl
cmpsb
in
call
mov
or
jmp
lods
iret
das
cmp
xor
add
loopne
pop
imul
incl
fdivl
push
push
jno
dec
pop
std
jecxz
insb
pop
pop
out
cmpsb
and
inc
jo
dec
add
cmpsb
push
dec
push
outsb
push
dec
arpl
sbb
xor
lcall
pop
test
repnz
clc
insl
mov
jo
cmp
pop
lock
popa
sarl
xor
dec
sub
cmp
cmp
inc
rcll
and
ud0
push
cmp
jbe
pushf
pop
xor
pop
push
push
pop
stos
mov
cld
rcrl
loope
repnz
cmp
fucomp
mov
pop
leave
adc
ljmp
cmp
xchg
out
ljmp
clc
push
sbbb
add
loope
sbb
mov
aas
lock
dec
ljmp
inc
push
testl
pushf
loope
loopne
fld
outsl
outsb
in
jns
incb
ja
test
dec
cmp
and
dec
pushf
mov
out
jle
pop
lods
xor
mov
push
clc
mov
and
push
jp
adc
or
loope
lret
scas
insl
cmp
mov
add
jne
nop
sbb
mov
jp
xchg
loopne
bound
icebp
add
lret
and
cld
sub
loopne
aam
stc
cmp
stos
loopne
js
call
jb
sbb
ss
lret
push
test
mov
sbb
push
mov
inc
adc
enter
add
cli
sub
nop
push
mov
mov
xor
ds
addr16
dec
fstl
aad
adc
fwait
mov
or
inc
imul
incb
test
call
push
cld
repz
mov
mov
fcmovu
popa
xlat
adc
out
rolb
adc
xor
inc
jecxz
or
push
mov
sbb
jp
mov
push
mov
pushf
push
xchg
fsub
cmp
fdivs
mov
sbb
loope,pn
inc
outsl
clc
fcmovne
mov
and
lret
cld
clc
add
cmpsl
cli
dec
add
fchs
aas
insb
loopne
pop
pop
insb
mov
mov
pop
stos
stc
add
push
jmp
mov
add
mov
push
or
repnz
clc
cli
mov
in
fdivl
xor
or
mov
cmp
push
lods
mov
mov
push
mov
cli
mov
in
cmp
pop
mov
jb
insb
rcrl
xchg
scas
clc
and
adc
in
mov
mov
outsb
out
add
xchg
or
xor
jmp
push
mov
arpl
pusha
mov
popa
mov
nop
cltd
mov
loopne
jmp
mov
sub
iret
outsb
popa
push
lds
cld
xchg
or
test
and
lock
jns
xchg
mov
mov
or
push
clc
out
adc
fwait
out
insl
sbb
lret
into
xchg
out
push
jge
mov
pop
bound
mov
sti
loopne
cmp
add
jo
xor
loopne
imul
adc
ret
and
push
mov
or
mov
cmpsb
jno
loop
dec
xchg
clc
and
or
jp
push
jns
pushf
les
mov
popf
add
in
dec
mov
sub
xchg
insb
sub
js
in
push
sbb
cmp
notl
xchg
aam
mov
aaa
jmp
pop
push
adcb
ds
popa
icebp
xlat
lcall
fs
dec
shlb
sub
mov
incb
mov
movsl
dec
jb
lea
lock
imul
cmpsb
inc
pop
ljmp
hlt
mov
mov
mov
xor
loopne
repnz
sarl
inc
outsb
and
push
jbe
mov
add
or
inc
mov
jb
mov
adc
mov
leave
cmpl
test
negb
pop
lahf
xor
jmp
out
pop
outsb
rcrb
clc
aad
adc
loopne
xchg
mov
ret
les
ret
pop
add
mov
pop
outsb
push
arpl
mov
dec
out
sarb
mov
sbb
jle
mov
js
jge
loope
das
daa
push
dec
mov
je
clc
lea
fsubs
in
jbe
and
call
lock
in
xchg
xchg
mov
sbb
shrl
cmp
pop
sub
stos
push
cwtl
leave
cld
sbbl
das
cli
pop
mov
loopne
push
out
inc
inc
test
jb
clc
dec
cld
std
es
iret
ret
mov
ss
push
pop
pop
cmp
and
sub
add
popa
xchg
xor
push
cmc
in
lret
pusha
pop
loopne
xchg
test
mov
in
xchg
pop
cmp
push
or
inc
mov
fs
jbe
fisubrl
lock
fsubrl
push
sub
push
sbb
cmpsb
mov
push
cld
aas
mov
inc
cli
repnz
pop
xor
push
cmp
sti
rcrl
ds
jmp
and
fwait
test
inc
loope
subb
pusha
cld
adc
add
xchg
fisttps
sub
mov
jnp
sub
sub
mov
ret
ret
ja
push
xor
add
aas
mov
jge
push
clc
nop
cmp
stc
mov
push
test
cmpsb
xlat
cmpsb
cmp
incl
sub
pop
fidivl
cmp
cmpsl
test
mov
outsb
cmp
rorl
iret
sbb
push
in
xorb
sub
cld
push
dec
ret
das
hlt
stos
jo
int
jle
push
inc
pusha
mov
decl
sbb
sub
add
pop
cmp
das
cli
out
nop
iret
mov
push
insl
lret
xor
fnstsw
push
cld
pop
mov
lret
in
cmp
xchg
movsb
or
loop
icebp
add
xchg
jo
ficoms
loop
sbb
cltd
inc
cmp
mov
jg
pop
dec
jne
add
pushf
ret
jecxz
fldcw
push
cmp
inc
fst
cmp
stc
lret
call
aas
test
outsb
test
cmp
cmp
sub
idivb
mov
dec
sbb
add
aam
pop
mov
daa
les
jb
int
loope
decb
outsb
out
scas
popf
js
fisttpll
jne
jl
mov
mov
mov
scas
or
cs
addr16
int
mov
and
stc
aad
push
sbb
mov
sub
test
jge
in
cmp
imull
pop
cmc
push
sti
shlb
ds
rorb
add
loopne
cmp
push
mov
arpl
mov
aad
imul
lret
jnp
sbb
in
ds
ret
repnz
lods
and
in
push
pushf
ss
cmp
pop
cld
adc
mov
dec
out
hlt
sti
mov
sbb
fldenv
aas
outsb
cwtl
pop
cld
call
insb
iret
mov
in
fs
fists
mov
fidivrs
inc
movzbl
adc
push
sbb
out
movsb
jle
mov
mov
leave
rclb
mov
fcmove
cmp
jle
cmpsb
sub
pop
test
popf
xor
cmpsb
jno
xlat
fisttpll
xor
cmp
mov
push
mov
into
std
push
cmp
nop
loopne
cld
xor
and
or
test
movsb
pop
lea
mov
lods
lcall
jns
sub
and
adc
jns
sub
inc
xchg
jg
mov
scas
cmpsb
pop
imul
out
jge
mov
mov
or
js
out
icebp
cmpsb
pop
std
cmpsl
cwtl
stos
movsb
pop
inc
push
sti
jne
xchg
pop
loope
loope
icebp
fsub
mov
xor
aas
fnstsw
out
out
pop
ljmp
jle
cld
fnstenv
lahf
andl
inc
push
pop
lea
push
xchg
sbb
fdivp
stos
add
sarb
lcall
mov
repnz
cmp
rcl
mov
xor
mov
dec
cmp
fimull
jg
mov
jbe
push
mov
outsl
stc
mov
popf
insb
fs
push
xlat
stos
cld
pop
rorb
cmp
loopne
sbb
shrl
je
sbb
mov
cli
inc
aam
cli
ljmp
dec
movsb
scas
ret
cmp
mov
bound
push
jp
add
clc
push
and
out
rcrb
or
mov
or
add
push
scas
shll
leave
add
mov
outsb
sahf
push
nop
loope
xor
push
jne
and
dec
enter
int
or
sub
cli
out
pop
gs
adc
insl
and
test
sbb
pushf
scas
imul
jnp
aas
sub
push
jle
aaa
dec
mov
test
dec
fsubr
push
imul
mov
aas
jb
jbe
icebp
fwait
scas
je
ret
gs
iret
aaa
pop
cmp
mov
mov
jbe
sahf
mov
pop
cmc
cli
inc
fiadds
stc
mov
in
pop
push
test
inc
mov
negb
and
jg
insb
inc
sub
out
fisubs
mov
cmp
push
jb
fmul
mov
clc
add
cmp
test
pop
and
call
sbb
js
fnstsw
adc
push
pop
or
or
and
lea
or
ljmp
dec
xchg
into
push
fbstp
rorl
lret
out
sub
test
pop
loop
jmp
mov
ret
faddl
loope
out
movsb
xorb
inc
rol
in
sub
pop
jmp
hlt
in
ror
rorb
loop
pop
dec
mov
pop
loop
mov
out
outsb
push
sub
adc
ss
sbb
mov
test
cmp
cmpsb
cltd
push
push
mov
cmp
movsl
and
cmp
loope
insb
push
fsubr
or
test
outsb
aad
inc
mov
into
push
or
scas
jnp
fwait
jle
pop
repz
cli
test
and
mov
sbbb
xchg
push
rolb
ficoms
jge
je
fdivrl
dec
fstl
loopne
sbb
cli
hlt
fadd
test
rclb
arpl
jmp
les
cmp
jo
pop
xorb
inc
dec
xor
fimull
loopne
jmp
mov
mov
repnz
mov
mov
xchg
mov
mov
sub
push
jl
incl
movsl
add
or
test
pop
sbb
out
or
jb
sbb
lahf
mov
adc
mov
test
sarb
mov
loopne
sbb
adc
or
std
push
fimuls
lret
ss
sub
sbb
jbe
sub
cmpsb
cmp
or
pusha
mov
push
lock
lock
sub
or
dec
lock
cmpsl
cmp
push
lea
out
stc
mov
pop
mov
cmp
popa
pop
nop
ljmp
outsb
nop
stc
and
in
rorb
fmuls
dec
lods
xchg
xchg
mov
cltd
sbb
sbb
loope
pusha
ja
push
or
inc
fisubs
mov
insl
movsl
jmp
and
in
push
js
stc
sbb
cmp
sub
lods
mov
pop
std
punpckhdq
clc
je
cli
lahf
lcall
jno
std
sub
xor
sub
mov
in
int
and
data16
push
pop
push
xor
in
inc
insb
movsb
inc
movsl
add
mov
jl
mov
cmpsl
dec
sti
push
xor
lock
mov
push
in
aad
sbb
test
mov
or
out
sbb
js
pop
push
xor
sub
in
vpsubusb
mov
push
repnz
jmp
popf
push
int
ret
std
cmpsb
cltd
or
push
pop
mov
jmp
jnp
repz
xchg
in
sti
add
pop
loope
sbb
jb
push
nop
loopne
aas
jecxz
ret
or
sbb
call
push
bound
push
loop
shrb
repz
mov
adc
subl
fisubs
jmp
adc
popa
and
outsb
out
dec
mov
push
aaa
push
nop
mov
inc
out
hlt
loope
mov
sub
scas
ljmp
cpuid
cmc
jmp
popa
pop
hlt
sbb
cli
pop
cmpsl
fisubrs
sub
push
dec
fidivrs
cli
add
jbe
stc
or
mov
movsl
or
jo
ret
sbb
fimull
push
shll
mov
insb
int
cmpsb
shll
arpl
cmp
cmc
repz
jb
or
add
lods
xchg
jl
xchg
lds
outsl
mov
mov
push
jne
mov
mov
mov
sahf
pop
data16
or
adc
es
xor
jle
pop
cmp
xlat
inc
popa
loopne
cmp
js
clc
push
loop
add
ret
inc
xor
cld
out
mov
nop
lods
xor
inc
lret
mov
sub
add
and
jmp
nop
jbe
popf
jno
pop
insl
pop
jecxz
mov
add
lea
cld
add
xchg
movsb
in
mov
inc
add
mov
mov
sarb
stos
xchg
fcompl
push
shrl
push
xchg
cmpsl
movsl
adc
into
in
pop
loope
pop
pushl
insl
mov
shll
pop
jge
pop
mov
cwtl
jg
mov
test
pop
lret
loope
jnp
jl
dec
aaa
aam
lahf
adcl
mov
add
adc
sbb
inc
sub
push
cmpsl
arpl
mov
push
ret
test
loope
orb
jae
fcompl
divl
sbb
mov
jg
fs
int3
push
bound
add
mov
out
mov
je
add
jp,pn
push
jg
xor
loopne
pusha
movsl
jns
mov
ja
inc
in
fsubs
cwtl
fildll
cmpsb
cmp
lcall
cli
push
ds
into
fstl
incl
lea
repz
sub
or
lods
cld
pop
loopne
mov
stos
push
ljmp
shll
arpl
jo
ret
loopne
xlat
mov
push
push
adc
shrl
mov
repz
xchg
nop
inc
out
mov
jge
imul
xchg
jbe
xor
pop
jb
loopne
cmp
mov
jbe
pop
xchg
pop
std
dec
cli
int
in
pop
fmuls
inc
push
xor
nop
sub
add
mov
xor
stos
test
lods
aas
xor
add
sbb
loopne
sbb
insl
fisubs
or
sub
dec
mov
cmpsb
nop
hlt
push
into
rcr
pop
outsl
cmpsb
pushw
xor
jo
sbb
outsb
nop
and
sub
mov
cs
jo
movsb
jae
lahf
icebp
push
push
push
ds
mov
and
das
mov
rcll
rorl
movsb
pop
ss
cmp
clc
les
jb
add
jle
pop
loopne
fsubl
push
jle
daa
jmp
imul
rclb
ja
or
sub
out
cmpsl
xor
cmp
mul
into
and
xchg
pop
inc
and
add
lcall
push
insl
dec
add
push
mov
cmp
clc
loopne
cli
int3
cmpsl
mov
xchg
jl
outsl
adc
jg
jle
hlt
xor
test
add
add
shrb
out
mov
addl
mov
scas
xor
xchg
push
sbb
mov
push
xor
rep
pop
outsb
pop
fcmovne
data16
sbb
outsb
stos
data16
mov
mov
mov
pushf
xchg
aad
out
js
rol
sub
sbb
mov
xchg
in
aas
cli
inc
lret
mov
xor
cmp
jp
jg
out
push
mov
jge
jecxz
arpl
dec
pushf
or
cld
ret
mov
sbb
cmpsb
movsl
xlat
in
imul
sub
cmpsb
out
cmp
imul
jbe
int3
add
inc
jb
mov
cmp
lock
jbe
adc
ja
fisttpll
xor
xor
rcrl
loopne
mov
loope
call
shll
rcrb
push
xchg
test
data16
mov
fs
cs
xchg
in
mov
js
outsb
in
popa
and
push
or
inc
or
fildl
int3
clc
dec
cld
stc
fildll
inc
inc
cmovns
push
sub
incl
loopne
ljmp
inc
dec
xor
mov
jl
repz
aad
cld
mov
jae
cld
sbb
pop
mov
cmp
mov
les
rsqrtps
cwtl
nop
and
pusha
bnd
mov
fidivrl
lcall
push
enter
jo
xor
in
loope
lcall
cmp
xor
ret
xchg
sub
les
jne
loopne
pop
sub
xchg
rcrb
xchg
pop
cld
cmp
jns
xchg
subl
sbb
test
cmpsb
out
mov
push
mov
cli
sti
mov
sbb
add
mov
ljmp
cli
mov
in
and
push
decl
and
fsubrl
jne
mov
push
fwait
adc
fwait
add
jno
pop
or
std
mov
jnp
lock
icebp
repnz
or
mov
out
xchg
test
cmp
mov
and
adc
lea
ret
sbb
and
popa
orb
and
les
xor
xor
dec
jb
bound
xchg
mov
inc
inc
ret
push
sahf
les
jl
insb
mov
outsl
pop
out
vpshaq
in
fimuls
mov
jmp
jmp
rorl
inc
outsb
and
sbb
or
xchg
inc
push
fistl
in
dec
incb
mov
or
sahf
loopne
pop
mov
add
jle
es
pop
add
fs
ficoml
mov
mov
jp
cld
jbe
fisttps
shlb
rorb
or
int
outsb
xor
bound
rolb
jecxz
les
lret
cmpsb
push
shlb
call
aas
cmp
cld
dec
xchg
mov
loopne
ja
in
or
adc
xor
cs
jle
cld
or
mov
xor
mov
and
jg
xor
jae
push
outsl
sbbb
call
cmp
mov
mov
push
push
jne
hlt
addr16
cmp
fdivs
hlt
ja
push
test
sti
and
cltd
xchg
lret
lds
hlt
pop
xor
xorl
adc
nop
push
sarb
popa
nop
stc
sbb
out
mov
stos
dec
fsubrs
cwtl
fwait
in
sub
fucomi
mov
cmpsl
adc
imul
nop
popa
jl
sbb
sub
nop
mov
icebp
stc
sbb
inc
pop
xorb
pop
or
xor
stc
mov
lock
push
test
inc
xchg
icebp
das
icebp
pop
jle
push
sbb
mov
mov
lahf
das
jl
stc
cmpsb
add
add
cwtl
xchg
jb
or
call
flds
rorb
sbb
insl
outsb
test
loopne
imul
xchg
clc
sub
adc
bound
iret
negl
pop
repz
push
mov
xor
stc
cmp
pop
call
pop
xchg
jmp
fs
xchg
mov
xchg
flds
insl
xchg
lret
mov
or
les
inc
fsubrl
dec
js
pop
outsb
movsl
sbb
and
icebp
cmp
sti
add
pop
dec
jo
inc
mov
sbb
xor
inc
shrl
sub
xchg
dec
and
insl
mov
nop
das
in
inc
xlat
testl
popa
in
jmp
lds
xchg
add
ret
sub
cmpsb
sar
repz
xchg
add
loopne
mov
sub
cmp
cmp
sti
push
push
nop
mov
inc
cli
lds
add
popa
lret
inc
inc
pop
loop
dec
pop
jle
insb
xchg
add
mov
data16
cli
pop
std
addr16
test
cld
cli
cmp
lods
das
shl
or
sbb
push
movsl
mov
gs
mov
loope
and
jo
sub
aaa
fcom
push
repz
imulb
adcb
mov
sbb
push
pop
mov
jmp
pop
push
lahf
fsubs
js
lock
je
clc
cmpsl
lahf
sbbb
fcoml
int
inc
mov
jmp
addr16
in
pop
lcall
ja
pop
cmp
push
pop
aas
inc
in
in
cld
xchg
mov
fwait
adc
stos
mov
adc
inc
mov
aad
push
sub
sub
sub
mov
mov
data16
lahf
enter
pop
movsb
neg
fdivrl
cmpsl
sbb
add
xchg
cmp
xchg
addr16
daa
mov
scas
subb
ljmp
pop
gs
loop
mov
push
and
sub
insb
arpl
cs
popf
xchg
push
adc
mov
or
inc
cmpsb
cmc
or
fistps
loope
repz
roll
mov
outsl
jle
std
sbb
int
inc
imul
popf
shrb
jp
cli
cld
nop
jmp
sub
ds
in
out
divb
mov
adc
cmp
mov
stos
cs
mov
cmpl
xchg
lcall
cmpsl
sbb
inc
mov
push
adc
jle
mov
push
adc
pop
test
mov
mov
and
jns
add
mov
ret
les
loope
clc
or
xor
repz
lret
test
xor
ja
outsl
inc
enter
jp
mov
adc
jle
std
data16
in
inc
jo
mov
xor
test
sbb
pop
jns
flds
inc
push
popa
insl
mov
ss
sbb
shrb
jmp
cmp
sarb
pop
jmp
pop
shlb
loope
insl
add
xor
mov
adc
lock
lock
add
hlt
push
scas
lret
mov
scas
cli
or
out
push
pop
test
test
mov
addr16
into
std
inc
sbb
jge
jns
mov
and
fstpt
xchg
shrl
popf
mov
mov
pop
mov
sbb
cmp
in
push
stos
stc
xchg
pusha
outsl
divl
push
inc
and
test
push
mov
cli
add
mov
outsb
jmp
pminsw
out
dec
sbb
mov
pop
cli
mov
jle
sbb
and
and
mov
add
cmp
insb
push
push
push
push
jmp
mov
push
pop
loop
loopne
xchg
insl
pop
vorps
cmp
mov
lods
or
rcll
popa
notb
test
lds
or
lcall
loop
outsl
lcall
ret
addl
rcll
stc
out
decl
aaa
leave
pop
aas
add
out
cltd
fcoml
sbb
pop
addb
clc
cld
push
add
mov
or
clc
mov
loope
test
cmpsb
and
push
imul
push
xor
lock
fmuls
push
fwait
icebp
addr16
fs
mov
out
push
mov
push
testb
and
jae
out
stos
notb
and
mov
pop
mov
out
ret
into
mov
mov
push
clc
push
clc
jl
and
push
cmp
or
fcompp
lods
xor
and
aaa
sar
out
jne
lahf
arpl
push
and
cltd
clc
test
sbb
push
push
jb
ljmp
fisubrl
cmp
sbb
or
pop
push
in
cmp
lods
pop
sbb
jecxz
mov
dec
sub
mov
jle
jne
insl
mov
arpl
jmp
mov
fdivl
scas
mov
adc
mov
xchg
ret
hlt
sbb
dec
mov
push
mov
xchg
stc
fcompl
lock
mov
loop
and
out
scas
sbb
in
arpl
pop
clc
add
movsl
fcomps
lods
in
loopne
inc
incl
scas
dec
add
nop
mov
jo
push
in
jae
dec
add
xchg
mov
mov
jnp
imul
push
movsl
fidivs
aas
sub
movsl
rol
or
jp
mov
test
or
loope
cmp
sbb
pop
scas
ret
lret
dec
cmp
push
ss
lods
les
mov
adc
gs
call
in
cld
call
pushf
scas
add
in
pop
lahf
dec
rcpps
mov
pop
ljmp
adc
mov
xor
add
mov
dec
push
sub
out
and
add
rcrb
sub
adc
mov
push
ja
ljmp
adc
fmuls
push
popa
mov
arpl
mov
push
mov
xor
jg
dec
lea
and
mov
es
xchg
sbb
cmp
insb
mov
imul
imul
fstpt
aas
cmpb
test
loopne
inc
cltd
sbbb
pop
repz
add
test
fadd
fists
scas
lock
dec
pop
xor
mov
push
sbb
push
and
jmp
mov
mov
loop
pusha
adc
sbb
nop
push
es
ret
mov
fdivrp
cmp
inc
pop
fwait
ja
push
test
loope
in
loopne
leave
mov
mov
imul
sub
push
outsb
lds
test
mov
pop
add
push
push
mov
sbb
sub
loope
in
les
add
rorb
outsb
iret
dec
dec
push
xor
mov
push
jp
jle
xor
xchg
sbb
faddl
stos
sbb
push
push
mov
outsl
loope
add
cltd
movsl
xchg
in
ds
loopne
inc
lock
and
andb
mov
xchg
pop
loopne
jge
push
ret
jmp
gs
jle
je
fidivs
mov
rcrb
mov
icebp
sbb
lahf
fbld
sahf
test
xor
movsb
testl
pop
outsb
ss
out
lock
ret
aaa
cmp
push
jecxz
xchg
out
inc
in
jecxz
insb
ret
pavgb
filds
cmc
add
jne
sub
push
xchg
mov
mov
xor
out
and
jl
sub
inc
imul
and
dec
loope
cmpsb
push
jae
push
scas
scas
add
cli
and
cltd
lods
mov
outsb
jmp
movsl
out
rcrl
clc
data16
or
notl
out
es
popl
pusha
pushf
mov
outsl
aam
adc
push
mov
sub
xor
push
popf
mov
cmpsb
loope
ffreep
jnp
mov
and
lret
movsb
jne
enter
mov
inc
sarl
into
mov
xchg
dec
shlb
ficoms
in
ja
lock
sbb
cmp
leave
mov
mov
dec
mov
push
pop
push
lcall
leave
add
addr16
imul
xor
jge
lock
cmpsb
scas
aas
repnz
insl
mov
std
subl
lret
lds
xchg
jmp
fcompl
jg
fldcw
push
cli
scas
ljmp
cmpsb
rorb
fcoml
scas
mov
or
jo
push
ret
ret
jle
sti
jbe
adc
fidivs
lods
or
sbb
sbb
mov
scas
mov
jmp
test
retw
pop
hlt
lahf
mov
adc
cld
pop
lret
mov
fists
orb
leave
cs
or
ds
jl
ror
or
sbb
insb
xor
bound
jnp
push
rcrb
popa
rcr
xor
cli
and
and
dec
loop
nop
cmp
push
rcrb
call
xor
sarb
cmp
decb
in
push
or
loopne
insl
jno
dec
pop
xor
pusha
in
jbe
jnp
and
hlt
incb
and
push
inc
loope
aas
sub
sbb
jae
mov
push
insb
push
pop
mov
shll
sbb
repz
pop
aaa
testl
xor
jno
outsl
xorb
in
stos
mov
int
fiadds
mov
idivl
clc
ret
inc
push
mov
sbb
lret
rolb
add
sbb
mov
push
push
arpl
push
das
nop
cmpsl
pop
add
push
inc
and
cli
std
dec
sbb
and
mov
sbb
clc
xchg
xor
ljmp
testb
stos
sbb
fidivrs
gs
push
popf
roll
mov
sbb
lock
add
repz
or
repz
xor
dec
movsb
ret
mov
push
adc
mov
shlb
jle
cli
mov
mov
ret
out
in
stos
xor
mull
aad
push
xor
adcl
lock
xor
rolb
xchg
int
push
aas
incb
jo
or
andl
or
leave
sbbl
cmp
xlat
or
shr
mov
push
cmpsb
movsb
scas
cmp
mov
mov
inc
sbbl
jbe
pop
push
xor
adc
add
push
xchg
loopne
mov
xor
std
dec
stc
inc
adc
and
xor
push
sbb
mov
fistps
pop
sub
adc
ljmp
push
mov
insb
popa
dec
push
mov
cld
testb
jbe
loopne
fimull
insl
fists
aas
outsb
dec
adc
mov
jmp
sti
rcr
push
or
xor
cwtl
sub
sub
mov
lahf
and
ror
ja
xchg
sbb
stos
popa
xor
cmp
mov
repz
out
cmp
pop
int3
add
cmp
aaa
dec
cmp
fwait
add
inc
sbbb
into
push
cmp
mov
push
test
in
xchg
stc
std
hlt
dec
test
push
push
sub
cli
test
adc
push
sti
int
ret
mov
cwtl
push
add
adc
cli
rol
inc
cli
adc
mov
gs
sarb
cld
add
loopne
loope
or
clc
outsl
mov
sub
push
ljmp
cmp
aaa
and
mov
jl
je
add
loop
inc
fsubrs
push
jle
bound
stos
out
add
or
leave
les
jno
mov
cli
dec
dec
pop
sti
into
push
rcl
adc
aas
push
js
out
mov
adc
cld
cmpsl
decl
jno
outsb
and
cli
push
loopne
jmp
adc
jle
shlb
or
js
add
cmp
icebp
lock
adc
call
lods
pavgb
sti
xor
lahf
ror
in
and
stos
scas
mov
dec
jecxz
les
outsb
sub
repnz
sbb
dec
pop
scas
nop
sbb
cmpsb
jbe
push
push
mov
push
cmp
js
dec
mov
jle
outsl
pop
iret
add
loopne
mov
fwait
add
insb
xor
icebp
push
mov
xchg
stos
xchg
ds
loop
std
dec
rcr
adc
into
fisubrs
fisttpll
int
shrb
sarl
stc
lock
sar
push
push
out
jbe
dec
stc
dec
jne
fs
lahf
fidivrl
sbb
cwtl
lods
hlt
add
cli
mov
iret
ds
push
clc
jge
jne
lock
loop
dec
js
dec
loopne
fimuls
xchg
hlt
pop
std
mov
rorb
cmpsl
pushf
xor
fs
jae
icebp
add
jb
jns
aas
inc
push
scas
lds
lods
das
jns
fwait
out
outsl
mov
in
lahf
rcrb
js
pop
pop
movsl
rcrb
cmpsb
dec
push
or
loopne
mov
je
insb
dec
fcoml
xchg
cli
add
insb
jb
movsb
std
nop
cmp
mov
xchg
cvttps2pi
lea
insb
sub
inc
jl
jl
push
aas
and
dec
outsb
repz
int3
mov
or
aam
scas
cmpsl
push
sarl
mov
mov
jo
outsl
mov
ss
cmc
mov
pop
out
outsb
jl
lret
dec
in
sti
push
cld
mov
in
inc
hlt
ret
cld
sbb
out
dec
rorl
xchg
fisttpll
nop
sti
pop
decb
cmp
jae
sti
cmp
mov
push
test
insl
inc
loopne
sub
lods
mov
subl
shr
adc
out
aaa
test
cli
xchg
push
cld
dec
dec
mov
adc
lods
cli
cmpsb
insl
jecxz
xchg
lea
or
or
push
test
xlat
dec
mov
mov
shrb
pop
test
data16
mov
sbb
jno
nop
sbb
loop
mov
aaa
jle
cli
push
lret
std
mov
mov
leave
and
ds
aas
sbb
ja
mov
pop
bound
xor
in
jns
inc
push
and
addr16
into
and
pop
lods
xchg
push
fs
shll
xor
lahf
insl
jl
into
repz
sbbb
sbb
and
clc
pop
xor
cs
push
add
iret
push
jnp
ret
mov
clc
fbld
jp
je
aad
cmpsb
in
scas
add
bound
sub
mov
data16
sbb
stos
js
xchg
mov
push
push
mov
jmp
push
in
add
push
mov
mov
push
out
out
loopne
fisubrs
loopne
pop
xchg
inc
or
ret
mov
or
push
adc
mov
xor
inc
dec
cmpsl
xchg
orl
xchg
lock
pop
mov
aam
cmp
sti
rcll
mov
arpl
cmp
jl
add
or
pop
andb
mov
jp
cmp
mov
ret
and
jo
xchg
enter
and
xchg
fwait
lods
mov
outsb
lret
mov
aas
aas
sar
stos
pop
xor
lret
mov
jmp
pop
dec
adc
jl
add
test
mov
ficomps
sahf
adc
or
cs
outsb
aad
rcrb
mov
jb
or
jg
mov
sbb
jecxz
inc
push
cld
fwait
pop
stos
mov
push
js
cmp
into
test
popa
out
rcrb
inc
ret
xor
in
mov
adc
in
pop
leave
test
outsb
les
pop
test
push
stos
or
push
mov
xor
frstor
sti
xor
fs
lahf
nop
dec
out
xor
or
mov
adc
loop
stos
ret
int3
imul
xor
mov
cli
dec
clc
clc
push
repnz
femms
dec
jnp
mov
lods
mov
rorb
cmp
test
dec
add
ret
dec
dec
push
stc
push
fwait
sbb
popf
adc
insb
xor
cmp
test
insl
lahf
adc
clc
pop
xchg
pushf
cwtl
mov
sbb
fmuls
in
clc
pop
rcrb
cwtl
or
fsts
pop
js
popa
and
in
or
adc
sti
cmc
sti
push
fcmove
xchg
imul
pop
pop
stc
xchg
in
sbb
mov
mov
adc
scas
incl
pop
repnz
imul
push
ficoms
scas
mov
cld
sbb
and
inc
enter
mov
fadds
push
inc
jns
xorl
int3
mov
sbb
push
mov
sub
push
fwait
and
les
xor
inc
lea
test
insb
push
dec
popa
sbb
xchg
into
ret
iret
aas
push
and
nop
int3
add
fildll
ret
dec
push
push
insb
mov
lahf
push
les
les
dec
int
xor
pop
loopne
jp
outsb
lcall
sbb
push
push
loopne
out
ret
jmp
adc
in
mov
add
inc
cmpsb
int3
stos
in
pop
sbb
add
xor
movsb
nop
sarb
lods
ja
das
shl
gs
addr16
xchg
repnz
jmp
clc
mov
mov
cmp
sub
adc
cwtl
jl
repnz
pop
mov
repnz
cmpsl
pop
aam
jmp
mov
sub
loopne
insl
push
out
jbe
add
dec
pop
cmp
dec
es
mov
mov
nop
jg
adc
mov
add
inc
xor
adc
dec
sbb
mov
adc
xchg
sbb
aaa
scas
and
fistps
inc
lock
movsl
jmp
loopne
dec
pop
lods
stos
push
dec
insb
and
out
lea
inc
ret
movsl
lock
fidivs
dec
adc
xchg
incb
shlb
mov
clc
insb
scas
in
add
pop
aas
movb
cmp
pop
call
push
mov
cltd
jg
cmp
or
cmpsl
stos
jecxz
push
pop
push
jle
hlt
and
insb
mov
pop
decl
icebp
dec
aas
sub
sbb
xchg
ss
push
aas
nop
jle
push
mov
aam
std
jg
ljmp
sti
sti
std
or
mov
pop
loop
mov
inc
dec
ss
fimuls
push
mov
cmp
fisubrs
pop
jle
sahf
jns
fnstsw
and
and
or
adc
insb
push
or
cmpsw
repnz
fisttpll
cld
push
mov
popa
xor
cmpl
outsl
cmp
fsubrs
fsubrp
test
or
add
push
xchg
sar
dec
xchg
addb
or
leave
mov
aas
cs
xchg
adc
jne
adc
add
add
or
test
mov
fcompl
lret
inc
stos
jg
andb
sbb
mov
scas
adc
xchg
icebp
push
xchg
push
call
into
mov
call
js
mov
movsb
or
fs
sbb
jmp
aas
pop
rcrl
pop
int3
sbb
inc
pop
movsb
mov
cmp
mov
pop
mov
xor
or
push
jo
clc
push
sbb
out
jle
mov
arpl
inc
frstor
sbb
mov
push
or
loopne
ss
push
cli
lcall
cmc
push
jp
mov
or
and
in
xchg
sub
mov
fildll
mov
add
cmp
faddl
cld
int3
iret
adc
cwtl
test
cmp
sbb
xor
fstl
jg
lea
ja
or
cmp
repz
sar
mov
stos
aad
cli
fldl
pusha
mov
adc
nop
mov
icebp
cmp
rol
scas
sbb
cmp
imul
mov
mov
fidivrs
shrb
popl
and
bound
adc
push
or
fmul
xor
or
or
push
outsl
test
add
xor
jo
mov
dec
cli
adc
adc
clc
loopne
and
mov
pop
or
xor
or
pop
or
loopne
or
loope
pop
fcompl
and
int
fdivr
jl
ret
cmpl
repz
sub
push
mov
in
sub
mov
and
arpl
inc
mov
pop
adc
dec
adc
pop
nop
jg
jle
idivb
mov
outsl
fisttpll
inc
sbb
pop
rclb
adc
lea
out
pop
jge
fstpt
sahf
adcl
inc
aaa
jl
filds
xchg
ljmp
ljmp
mov
jbe
stos
testb
test
sbb
iret
pusha
shrb
mov
iret
jno
aaa
xchg
mov
icebp
fdiv
mov
lcall
cmp
xchg
int
add
shr
cld
dec
xor
cmp
xchg
xor
ret
adcl
aaa
ss
jnp
push
fidivrs
jbe
pop
xor
push
jae
int3
pop
add
push
inc
cmpsb
aas
or
add
fwait
es
mov
push
clc
mov
sbb
insl
pop
lock
push
scas
mov
aas
loopne
psraw
jb
loop
jb
adc
jl
mov
aam
or
pop
mov
add
or
inc
mov
nop
cmp
push
gs
popa
test
xor
mov
cli
jmp
mov
cli
cmpsb
loopne
arpl
or
fnstenv
in
xor
inc
movsb
sub
push
push
mov
push
aas
stc
dec
ja
lds
loop
add
outsl
add
cmpsb
ss
sti
dec
jae
cmp
sub
rolb
xchg
fwait
mov
cmpb
inc
jmp
or
or
dec
jecxz
cmp
lock
xor
pop
call
xor
inc
push
shlb
rclb
add
jmp
adc
sti
dec
mov
scas
decl
mov
cmpsl
mov
fdivrl
push
mov
sbb
jle
dec
lock
clc
push
nop
mov
and
cli
push
push
push
jl
dec
dec
sub
sahf
fwait
sub
inc
sub
dec
imul
inc
push
ret
jp
sbb
mov
clc
notl
movsl
fsubrs
adc
iret
icebp
dec
pop
loope
test
sbb
push
cmp
rolb
add
push
in
xchg
stos
add
xchg
fwait
lods
push
cmpsb
and
adc
pop
add
mov
and
adc
mov
lds
xor
test
push
outsl
std
xchg
and
ficomps
pop
dec
outsl
icebp
rolb
fsubrp
outsl
ret
mov
pop
xchg
lea
pop
or
jo
or
pop
or
movsl
insb
jl
aas
xorb
jbe
push
jle
dec
push
loop
cld
ja
ret
ret
out
bound
fmull
mov
xor
pop
cmc
adc
xlat
aam
xor
xor
loope
fnstcw
xorb
push
call
dec
sysenter
rol
lret
add
jo
mov
jbe
outsl
pop
outsb
test
sbb
daa
dec
push
cld
mov
fistps
cmp
or
les
cld
add
in
das
inc
outsl
nop
sbb
sub
insb
mov
aaa
dec
ja
mov
xor
dec
addb
imul
ja
inc
cmp
xchg
jl
jnp
cwtl
loop
dec
push
mov
add
sbb
jne
jmp
pop
push
int3
repnz
and
frstor
movsb
fwait
test
dec
mov
ja
add
out
aaa
in
fimuls
hlt
cmpsl
mov
rol
popa
pop
mov
faddl
sub
mov
adc
enter
mov
aaa
das
xor
mov
cmc
insb
cmp
out
cld
sbb
push
lods
ljmp
outsl
inc
sbb
jbe
sbb
mov
pop
adc
mov
mov
jle
fsub
mov
mov
pop
inc
jg
cs
into
inc
repnz
mov
lock
push
adc
adc
scas
mov
xchg
iret
in
fldl
push
loope
das
out
arpl
std
inc
inc
stos
pop
loop
test
imul
jecxz
sbb
loope
in
insl
cmp
or
sbb
movsl
xor
mov
shl
pop
mov
add
scas
dec
lcall
in
mov
push
aaa
loope
mov
or
inc
mov
or
inc
push
xor
negb
mov
aas
mov
cmp
dec
call
mov
mov
int
xor
mov
mov
les
adc
imul
or
pop
add
jmp
mov
mov
and
ret
mov
adc
inc
test
or
jmp
cmpsb
xchg
dec
pop
mov
dec
xchg
xor
mov
rolb
ljmp
out
xlat
mov
in
aaa
loope
add
loopne
sbb
mov
data16
loopne
insl
pop
hlt
jae
lahf
into
mov
dec
hlt
add
lahf
shll
dec
loopne
cli
cmp
outsl
push
notl
data16
pop
push
clc
pushf
sbbb
test
lret
xchg
das
push
mov
cmp
pusha
adc
je
push
jle
das
dec
xchg
mov
xor
mov
adc
mov
hlt
test
adc
adc
pop
sbb
or
ljmp
xor
dec
mov
ret
xor
or
sbb
repz
mov
clc
cli
sbb
cmp
lock
dec
movsl
cmp
or
fsubrs
ficoms
gs
xor
add
outsb
loopne
lea
gs
enter
cld
into
mov
ja
jmp
mov
js
fmuls
bound
xor
fwait
xchg
push
sbb
scas
das
dec
lock
xchg
shlb
fidivs
push
icebp
clc
xchg
clc
or
add
push
ret
pop
jl
out
inc
fimull
adc
repz
popa
xlat
out
pop
mov
out
in
fs
sub
fsubs
sbb
bound
aaa
and
fsubp
adc
pop
cmpsl
jge
ret
iret
jbe
pop
arpl
xchg
lock
aam
loop
rolb
lods
incl
fwait
add
pop
gs
xchg
or
aaa
mov
test
mov
sbb
lods
test
mov
cmpsl
inc
aaa
decl
lock
xor
outsl
push
sub
xchg
fiadds
pop
lcall
push
jp
std
out
arpl
fildl
fisubrl
insl
cs
xor
outsb
repz
sbb
loop
cmc
xlat
mov
fcompl
mov
and
and
fistpll
inc
sbb
or
andl
sbbb
inc
adc
sub
mov
adc
nop
movsb
rolb
jg
pop
cmpsb
pop
push
push
imul
pop
and
pop
jne
push
fiaddl
inc
mov
test
lock
clc
xchg
inc
xchg
sahf
inc
fst
push
or
adc
mov
sahf
push
mov
or
cmpsl
outsl
in
cmp
inc
sub
and
rclb
clts
lods
stos
int
in
inc
xchg
sbbl
in
push
lds
loop
sub
xor
inc
jl
mov
fcmovnu
cmp
bnd
mov
cmp
fwait
sbb
ljmp
loope
mov
cmpsb
iret
mov
mov
mov
int
addr16
add
insb
mov
xor
bound
sbb
arpl
cmp
xchg
movsb
mov
call
scas
clc
aaa
jecxz
jge
mov
sbb
addl
and
and
push
add
loopne
sbb
mov
testb
mov
in
jb
add
pop
adc
pop
movb
subb
or
mov
pushf
mov
iret
mov
fld
cli
sti
es
outsl
loopne
loop
pushf
movsb
outsb
xchg
jl
adc
idiv
push
jle
mov
idivb
add
mov
add
pop
adc
xlat
add
popf
lcall
pop
ljmp
adc
sbb
dec
cld
fiaddl
das
inc
stc
xchg
ret
inc
lahf
add
jecxz,pt
dec
loopne
inc
mov
fstpt
inc
lret
pop
aas
cli
adc
jecxz
cmp
sbb
or
outsb
sbb
movswl
and
mov
push
test
arpl
mov
lea
mov
repnz
sahf
inc
sbb
fsubrl
xchg
test
dec
mov
xor
popa
mov
mov
enter
adc
inc
loop
rclb
lea
xor
addr16
jecxz
shlb
fisubrl
aam
inc
jp
jle
mov
xor
xor
leave
sub
aam
ret
movb
fidivs
pcmpgtw
jbe
popa
rcrb
jne
mov
out
movsb
lea
mov
cmp
movsb
inc
xor
and
clc
mov
mov
mov
xchg
jecxz
cld
xlat
ljmp
add
shlb
pop
lods
push
clc
jg
ss
nop
aas
cwtl
rcl
sub
or
lcall
inc
jbe
inc
hlt
push
mov
jae
into
aad
cmpsb
js
hlt
or
adc
jp
push
push
in
aas
pop
cmp
adc
loope
pushf
clc
inc
imul
jge
dec
aas
sbb
jnp
push
clc
jecxz
movb
cmpsb
rcrl
call
imul
std
mov
clc
dec
jbe
mov
pop
dec
jb
fidivl
push
xor
dec
mov
lea
lahf
stc
sub
cmpsb
int
or
iret
add
in
mov
pop
jl
ret
or
flds
imul
je
pop
pop
sub
inc
add
mov
out
test
enter
sub
rcr
or
jnp
pop
lcall
aas
and
inc
inc
dec
mov
out
rcrb
loope
mov
jne
js
push
rcl
insl
xor
adc
jg
jg
push
pusha
fiadds
dec
movsb
test
in
mov
mov
cli
xorb
gs
adc
lret
in
outsb
adc
inc
cmpsb
sarb
pop
call
jns
mov
pop
test
or
test
sbb
aas
cld
into
mov
push
imul
add
ficoml
sti
mov
mov
stos
dec
iret
adc
cmpsl
rorb
mov
mov
test
fwait
subb
dec
ret
xor
or
mov
adc
cmp
add
dec
hlt
xchg
in
sub
or
add
out
rorb
lahf
mov
sbb
mov
mov
pop
pop
inc
push
in
ljmp
adc
inc
add
shrl
dec
mov
fists
cltd
cmc
movsb
std
push
mov
mov
jmp
mov
mov
fadds
inc
xchg
loope
hlt
shl
mov
adc
cmpsb
lret
and
fldl
and
jo
int
fistpll
or
cmp
pushf
test
pop
xchg
cld
pop
shlb
ljmp
arpl
dec
add
ret
aas
loopne
push
pushf
js
rsqrtps
test
mov
adc
inc
insl
je
bound
push
fcoms
dec
je
outsb
inc
pushw
jne
lret
aas
mov
hlt
push
out
rcrb
xor
cld
pushf
xchg
and
scas
shlb
es
ljmp
adc
jle
mov
ret
fcompl
pop
add
sbb
xor
movsb
and
push
rcrl
or
adc
sbb
pusha
dec
aaa
loop
stos
cltd
out
ds
test
scas
es
fimull
mov
stc
movsb
push
inc
cld
sbbl
jne
sub
push
cmp
sub
mov
es
pop
xchg
push
cmpsb
lds
xchg
scas
ret
sbb
movsl
clc
dec
enter
jle
push
ss
and
leave
ret
pop
push
pop
inc
hlt
cmp
and
dec
xor
push
fcompl
push
repnz
clc
xchg
push
and
iret
jmp
loop
clc
or
sbb
sbb
js
stc
aam
test
cmpsl
mov
or
adc
fiadds
mov
test
cmp
dec
outsb
scas
cmp
movsl
out
cmp
int3
loope
popa
rorb
outsb
jle
cli
cmpsl
mov
jl
lret
test
push
mov
cmpsb
add
and
jns
mov
add
lret
ficoms
pop
pop
push
sbb
adc
xchg
mov
jno
sbb
sbb
push
lret
test
jnp
cmp
loopne
sar
push
mov
loop
sarb
mov
add
push
dec
push
push
imul
dec
loop
hlt
pop
bound
stos
push
cmp
movsb
add
imul
xor
lret
test
xchg
pop
addb
fists
push
loopne
in
mov
enter
add
jo
loopne
enter
das
and
mov
addr16
mov
jle
push
sub
sbb
cmp
mov
sahf
inc
mov
notl
sbb
or
sysenter
int3
jns
jo,pt
adc
xor
adc
call
sub
fistps
lret
repz
es
mov
cmpsl
and
mov
lods
dec
in
rorb
sbb
insl
lods
jae
jp
std
or
mov
popf
jae
lahf
loope
pop
loop
outsb
xor
adc
or
push
mov
test
pusha
sbb
xchg
push
push
cmpsb
iret
cli
mov
sbb
mov
fsubp
ss
cvtdq2ps
imul
pop
loop
stos
aam
cmpsl
and
testl
xor
sbb
mov
mov
call
push
adc
ficoml
add
xor
nop
push
ss
mov
clc
test
pop
cmc
jmp
push
test
outsb
fisubrs
mov
ja
out
outsl
sbb
push
mov
pop
mov
cmp
roll
icebp
inc
clc
xchg
dec
add
gs
push
mov
into
mov
jbe
out
adc
ret
test
cmp
cmp
jne
mov
cmp
xchg
or
mov
cmp
les
hlt
sub
js
cmp
adc
dec
call
hlt
les
mov
dec
push
cs
inc
outsb
aad
out
push
scas
ret
stos
mulb
add
jo
jecxz
mov
add
shll
adc
or
cmpsb
mov
sub
pop
mov
test
inc
cmp
outsb
mov
fiaddl
cwtl
das
ret
dec
and
ret
incl
xor
inc
les
adc
outsl
pop
int3
mov
movsb
and
sbb
iret
js
xchg
mov
jp
bound
mov
or
and
addr16
adc
fwait
outsb
sub
add
imul
out
mov
dec
hlt
jmp
lods
push
cmc
mov
mov
lock
insb
lds
popa
jg
or
leave
cwtl
movsb
or
jnp
mov
pop
pop
mov
sbb
lret
and
ljmp
cld
loopne
mov
mov
or
mov
pop
sbb
icebp
lahf
pop
add
push
inc
lahf
aam
and
or
inc
mov
lods
mov
js
clc
cli
add
adc
xor
sub
jg
int3
dec
or
std
sub
aas
dec
frstor
sahf
dec
dec
push
imull
call
ss
jae
lret
inc
inc
addl
push
sbb
jl
cld
push
orl
sub
push
movsl
movsl
push
dec
push
dec
scas
loopne
jge
fucomip
pop
in
push
mov
insb
cld
inc
cmp
adc
sbb
cmpsb
dec
test
cmpl
lds
xor
push
addr16
rclb
in
in
sbb
mov
sbb
adc
inc
mov
mov
mov
in
mov
ret
outsb
dec
enter
add
xor
push
clc
push
fisubs
into
arpl
gs
sar
scas
push
push
mov
repz
cmp
mov
mov
mov
ror
movups
movsb
int
mov
lea
adc
jge
idivb
fsubp
xchg
movsl
mov
cmp
mov
adc
dec
insl
xchg
mov
mov
push
clc
iret
mov
test
cmp
xor
adc
push
adc
mov
loopne
push
sarl
jle
fidivrl
lea
clc
and
fisttpl
into
or
pop
or
ds
pusha
sar
cli
push
add
ror
fstpt
pop
dec
pop
sahf
mov
sub
mov
bound
movsl
xor
add
adc
push
psllw
xor
outsb
lcall
frstor
and
into
cmp
xchg
ret
or
mov
sub
xchg
icebp
pop
add
vcmpsd
out
insb
push
adc
sbbb
in
xchg
add
inc
jno
roll
add
movsb
cmpsl
mov
outsl
ficomps
aam
ficoms
xchg
movsb
ljmp
jo
sar
inc
imul
movsb
jns
mov
leave
xor
push
ss
pop
cmp
or
cwtl
mov
jge
popa
icebp
rolb
xlat
or
rorb
mov
mov
jbe
adc
ret
adc
dec
xor
sar
shrb
fdivrl
pop
xchg
jo
lea
arpl
add
push
fnstsw
push
iret
and
xor
mov
fwait
pop
fildll
mov
imul
adc
adc
adc
cmc
hlt
and
fwait
jle
sbb
cmp
push
add
loopne
adc
mov
mov
and
xor
fimull
xchg
sub
mov
js
fisubs
pop
mov
mov
dec
cld
fistl
cs
mov
call
mov
mov
aam
test
stc
dec
fidivs
loop
rcrb
jmp
stc
add
dec
clc
xchg
gs
xchg
in
fwait
mov
add
or
jb
subb
dec
inc
xchg
mov
mov
inc
outsl
or
jg
ljmp
adc
imul
clc
jne
jbe
andl
loopne
inc
or
test
lods
sub
lods
jp
imul
push
dec
or
inc
fisubrs
mov
hlt
int
cmpsl
mov
push
dec
into
xor
arpl
clc
imul
or
jno
std
cltd
pop
sbb
cld
xor
daa
movsl
gs
in
pavgb
mulb
je
push
ret
rorb
inc
pop
orb
cmpsb
lret
fstpt
push
outsb
test
sbb
pop
mov
pop
mov
bound
movsb
idivb
cld
mov
hlt
into
fisttps
scas
notl
ret
outsl
in
push
adc
lahf
mov
nop
dec
pop
sbb
outsl
cmc
adc
aam
roll
in
in
push
mov
test
nop
push
pop
mov
ljmp
fisubrs
push
inc
pop
fnop
adc
push
jl
cmpsl
fistpll
jg
adc
sbb
or
dec
lock
cs
adc
outsb
sub
pop
push
packsswb
imull
push
jmp
sahf
jg
inc
cmp
xchg
imul
scas
xorb
push
mov
lcall
sbb
cmp
loop
push
cmpsb
push
cli
pop
outsb
mov
gs
push
pop
dec
sub
fadds
xor
sbb
mov
push
inc
push
ds
pop
xchg
cmp
call
xor
mov
or
inc
jl
in
mov
sub
cmp
test
out
pusha
or
daa
cs
adcb
pop
add
jg
push
insb
inc
cli
xor
cmpsb
sbb
xchg
cmp
outsb
out
cltd
add
cwtl
lahf
xchg
jle
mov
cmc
insl
dec
adc
mov
push
fisubs
inc
aad
sub
nop
fdivrp
ja
rorl
imulb
xchg
push
mov
lock
movsl
stos
mov
es
mov
add
mov
mov
aam
sbb
fs
jo
cmpsl
sbb
pop
loopne
mov
shl
mov
cmpl
mov
cli
add
xor
sub
xor
mov
cmp
pop
js
movsb
fbld
xor
ja
icebp
adc
test
dec
xchg
mov
adc
sub
pop
in
xchg
das
pop
outsb
movsb
xor
sbb
dec
add
ds
mov
das
les
xor
movsl
cli
outsb
pop
lock
jl
push
clc
or
xor
or
or
cmp
cwtl
and
sbb
ds
aas
mov
clc
mov
idivb
jl
es
adc
ret
sbb
mov
hlt
cmp
rcrl
xor
cmp
cmp
xchg
add
callw
int3
lahf
xor
push
dec
cli
fistl
std
rolb
or
mov
and
lock
sub
jecxz
push
mov
sbb
ljmp
adc
xorl
add
inc
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
add
fwait
lcall
add
inc
gs
inc
push
inc
push
push
imul
jb
jne
jne
sub
js
je
jb
arpl
jae
push
jg
outsb
outsl
push
je
dec
push
fs
gs
outsl
insl
insl
sbb
gs
jge
mov
and
insb
je
inc
jns
jbe
push
imul
mov
push
outsb
push
jo
outsl
outsb
inc
imul
or
dec
dec
push
pushf
or
push
push
push
jb
jae
popa
inc
inc
arpl
fscale
mov
sub
imul
dec
mov
sub
and
push
rcll
gs
fwait
std
pop
and
insl
dec
gs
arpl
jo
je,pn
or
inc
push
ds
mov
sub
or
sahf
pop
into
inc
aaa
loopne
lsl
add
push
push
mov
shl
mov
or
adc
add
mov
mov
add
mov
sub
or
xor
arpl
or
nop
ljmp
and
add
xchg
add
scas
mov
outsb
sbb
aad
adc
cmp
inc
insl
mov
imul
call
shrb
rcll
inc
push
push
fistl
int
jbe
testl
inc
and
jae
or
mov
shrb
cmpsb
popa
dec
adc
outsl
and
enter
jb
movsb
idivb
add
adc
lods
adc
out
cmp
add
out
dec
dec
sti
adc
cmp
lock
sbb
cmp
pusha
shlb
ljmp
add
sbb
add
add
add
push
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
loopne
pop
add
adc
adc
dec
