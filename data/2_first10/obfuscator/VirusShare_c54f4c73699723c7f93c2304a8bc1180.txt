fwait
icebp
rsm
inc
testb
push
lods
dec
scas
inc
inc
push
mov
mov
push
and
mov
add
sbbb
aas
fnstsw
std
div
sub
js
lea
jns
leave
shlb
pop
lock
cmpsl
fcompl
and
cmpsl
aad
pop
xchg
adc
addl
inc
and
addl
subl
jmp
fnstsw
sbb
lds
stos
xchg
or
int3
add
popa
mov
pop
xor
and
mov
xchg
stos
sbb
add
in
loop,pn
andl
jno
mov
push
mov
lock
add
mov
std
repnz
adc
sbb
inc
dec
orl
test
out
jo
int3
popf
orl
jecxz
ss
shll
add
cmp
out
mov
imul
mov
bswap
mov
lea
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
lods
add
pushf
call
pusha
sbb
stc
cmp
cmc
pushf
lea
stc
cmp
pushf
xchg
movsbw
clc
mov
cmc
rol
xadd
sar
lea
adc
rol
ror
mov
call
pushf
lea
jae
jmp
push
pusha
call
call
xlat
bound
add
bound
xchg
xor
movsl
popa
add
mov
out
jae
jmp
jmp
movsl
mov
insl
out
dec
add
dec
dec
int
aas
sahf
inc
mov
mov
fidivrl
mov
ljmp
dec
in
jle
fidivrl
out
or
gs
cmp
or
inc
xor
sbb
pusha
xchg
adc
shl
inc
xor
lea
call
fsubrl
inc
mov
fwait
push
rorb
inc
or
les
sub
push
jle
insb
dec
sti
inc
lods
fistl
addr16
call
pop
ret
mov
orl
dec
sub
xor
mov
roll
insb
mov
push
imul
pop
and
dec
mov
cmc
sub
xchg
add
fs
aad
popf
xlat
mov
cmp
cmpsl
or
je
insl
gs
gs
imul
setno
push
lahf
lea
pusha
movw
movl
pushf
pusha
mov
call
pusha
lea
je
call
decb
xchg
xor
addr16
jnp
add
cmc
pop
das
jg
inc
cmp
push
movsl
ja
lock
cli
cmp
xor
out
lcall
stos
dec
xchg
cmp
sbb
insb
sarl
mov
sub
jg
xchg
jno
pop
jmp
lret
cmp
mov
scas
mov
add
les
lcall
je
popf
mov
mov
popf
sbb
mov
mov
adc
sbb
fcoms
xor
cmc
sbb
pushf
pusha
lea
jne
add
sar
mov
cmp
stc
call
loopne
daa
pop
hlt
jne
jl
aas
or
mov
outsl
cltd
add
xchg
jne
or
pop
sahf
fstpl
xchg
mov
js
int3
call
out
popa
cmpsl
aas
jmp
movsl
mov
fs
shll
jle
outsl
mov
jg
xchg
dec
addr16
or
add
add
hlt
sub
cmp
iret
mov
lahf
movsl
add
ds
and
adc
movl
and
push
or
cmp
push
push
sub
mov
or
lock
push
pop
dec
rcrb
les
push
bound
sub
push
lcall
push
push
lea
jg
mov
push
pushf
mov
pushl
pushl
ret
jmp
shld
jmp
movl
jmp
jmp
add
cmp
icebp
addl
cmp
cmp
xadd
dec
xchg
mov
imul
pop
lcall
xchg
pusha
xor
dec
pop
push
addb
inc
rolb
das
push
mov
ljmp
div
out
xchg
adc
mov
cs
jge
inc
and
sbb
or
or
mov
mov
pop
out
into
mov
clc
cmpsb
inc
fdivrl
jle
aam
xchg
pop
call
das
xchg
and
lods
inc
lock
xchg
es
rcr
xor
jp
int
outsl
fwait
iret
mov
out
mov
test
inc
pushf
lods
xchg
mov
or
xchg
mov
mov
mov
sbb
pushf
mov
movb
mov
push
pop
movl
bswap
bswap
jmp
call
rol
btc
call
cwtl
mov
pushf
lea
jmp
lea
jae
pusha
pusha
movb
push
lea
jmp
stc
cmc
test
call
lea
jne
bts
push
shrd
mov
jmp
mov
pushf
repnz
pusha
call
push
call
pushf
pusha
shl
clc
jmp
lea
jle
push
pushf
movl
pushf
pushf
pusha
lea
jmp
pushf
jmp
pusha
lea
call
pushf
lea
jb
add
shl
dec
sar
cmp
pushf
pushf
sbb
cwtl
not
bswap
lea
movzbw
bswap
lahf
bswap
mov
pushf
push
movl
not
pushf
mov
jmp
adc
adc
cli
mov
push
clc
mov
fmuls
jbe
ret
cli
jb
int3
pop
mov
mov
push
pop
std
and
mov
out
xchg
and
imul
insb
stc
jle
data16
mov
mov
inc
rcll
enter
sbb
mov
scas
dec
outsb
xor
repz
movsl
pop
add
shll
lahf
push
cmp
sbb
movzbw
mov
lea
cwtl
pusha
lea
jle
lea
push
lea
jle
push
lea
call
not
mov
pusha
movw
movb
pushf
xchg
mov
pusha
lea
jae
lahf
jmp
movb
movl
pushf
lea
jmp
push
pushf
lea
jne
push
mov
add
sub
jmp
sti
test
roll
jl
xchg
push
mov
mov
shlb
jbe
mov
cmp
mov
mov
mov
stc
adc
mov
div
movsl
aas
lret
xor
pop
gs
cmp
outsl
in
push
test
mov
mov
in
lea
xchg
mov
cmp
pop
lahf
sub
testl
ss
mov
scas
outsb
rol
mov
lcall
out
pop
cmpsl
jmp
loope
insl
inc
mov
sbb
inc
lahf
sbb
cmp
cs
push
clc
pop
movl
cmpsl
jmp
mov
sarb
andb
mov
jecxz
inc
cltd
sbb
ljmp
lcall
mov
mov
test
mov
xchg
pop
pushf
fsubs
sarl
insb
dec
faddl
mov
lret
adc
push
cmp
data16
hlt
push
js
cmp
mov
jp
cltd
call
adc
sahf
mov
rolb
cmpsl
add
fimuls
lahf
sbb
sahf
cwtl
cwtl
jno
cmp
sbb
add
sbb
pop
jns
xlat
and
std
mov
jmp
lds
int
fidivl
cld
nop
lcall
int
mov
lods
enter
xor
mov
cli
mov
insb
dec
imul
inc
cmpsl
fs
inc
xchg
scas
imul
cmpsl
add
adc
mov
mov
in
test
lidtl
sbb
clc
add
fwait
lahf
sbb
push
pop
add
or
cmpsl
add
jmp
dec
in
xchg
sahf
sbb
rorl
popf
iret
xchg
ret
inc
xchg
fs
and
cmp
pmaxub
ljmp
dec
std
push
ss
xor
cmp
repnz
mov
sub
int3
cmp
insl
and
mov
imul
inc
add
std
stos
mov
sub
dec
jb
dec
xchg
je
sbb
push
adc
mov
xor
or
xchg
lret
pop
add
in
fiadds
ret
out
das
mov
lods
jl
cmpsl
inc
xchg
shrb
bound
repz
fcmovnb
push
ja
push
sbb
les
loope
scas
inc
adc
xor
mov
dec
loop
mov
movsb
inc
sub
cld
push
es
repnz
xchg
hlt
ds
push
xlat
add
xor
sub
nop
mov
push
into
test
mov
nop
xchg
outsl
sbb
loop
call
sub
xchg
mov
aad
and
adc
out
jae
and
fisubrs
nop
cmpsl
jbe
adcb
jmp
les
out
das
iret
gs
gs
fwait
inc
out
loop
pop
fs
inc
aaa
push
lcall
xchg
dec
mov
xor
aas
xchg
loopne,pt
mov
gs
inc
fistps
jns
or
fwait
pop
repnz
inc
jo
pop
ds
cmp
pop
adc
cmp
push
cmp
addr16
das
cmp
cmp
out
nop
add
adc
sar
mov
inc
out
push
aas
stos
fwait
jge
mov
dec
cmc
sahf
jae
decl
stos
adc
call
sbb
inc
xor
shrl
jp
imul
and
adc
xchg
add
inc
inc
adc
leave
mov
jne
mov
or
leave
jg
aad
and
cmp
inc
and
lds
les
cs
push
dec
les
aaa
imul
jne
add
stos
leave
out
rcrb
movsb
add
push
xor
mov
lds
inc
xchg
mov
push
dec
ret
push
jnp
xorb
mov
and
movl
outsb
ficomps
cli
scas
out
sahf
inc
ljmp
mov
mov
sub
xchg
add
imul
clc
ret
je
dec
ret
sub
and
xor
cltd
ds
sbb
sbb
pushf
call
std
dec
ljmp
icebp
jge
mov
push
jns
cmpsl
lea
mov
pushf
mov
stos
and
cmp
arpl
js
adc
and
fidivrs
fcompl
repnz
dec
fldenv
loope
sbb
or
in
mov
push
loopne
popf
cli
popa
push
aam
jmp
cs
jne
mov
scas
shlb
mov
test
das
mov
notl
jbe
or
jo
push
sbb
sbb
mov
mov
fwait
ljmp
pop
setg
nop
adc
es
jae
pusha
in
jge
sbb
sti
pushf
int3
jmp
or
out
lods
push
stos
push
and
mov
adc
mov
mov
dec
and
add
xor
jbe
addl
addl
addr16
xchg
mov
pop
iret
out
xchg
insb
mov
jo
les
add
ss
int
mov
sbb
xor
lea
fmuls
test
test
sbb
mov
adc
shrl
or
imul
sub
jecxz
inc
dec
adc
imul
jmp
cli
dec
stos
pop
stos
enter
lea
push
lahf
cmp
lcall
testl
sbb
pop
push
pop
in
adc
mov
pusha
cld
les
xchg
lcall
pop
movsb
int
inc
pop
push
aam
in
dec
pop
sbb
or
jp
aam
jo
loop
inc
f2xm1
adc
mov
cwtl
and
pop
mov
cli
push
out
daa
mov
fstpt
mov
gs
orb
into
cmpsl
xchg
cmp
cmp
mov
push
pop
jecxz
js
fwait
mov
sti
popf
fstl
fidivrl
sbbb
mov
dec
or
push
test
testl
or
stc
mov
rolb
sub
cs
mov
movsl
sbb
in
mov
adc
sbb
adc
inc
push
mov
pop
adc
push
in
push
dec
pop
movsl
push
fists
fwait
add
lret
cs
movsl
jmp
ljmp
sbbb
int3
fmull
cmp
inc
ljmp
lea
jbe
ja
std
sbb
pop
ret
out
ja
inc
and
negb
loope
movsb
push
pop
shlb
pop
in
movsl
test
fisubl
sti
mov
mov
xlat
mov
mov
lret
cmpsb
ret
fstpl
enter
dec
ja
call
sub
ss
adc
push
inc
clc
test
ret
shll
movsl
scas
adc
push
mov
mov
into
jo,pt
js
push
lods
cmpsl
movsb
inc
mov
negl
movsl
scas
add
xor
cmp
nop
scas
das
pop
jmp
xor
inc
mov
mov
shlb
popa
movsl
ror
fdiv
loope
vxorps
sub
aas
and
stos
testl
es
fucomi
in
cs
or
adc
incb
enter
fists
dec
push
add
scas
jp
sub
ljmp
icebp
out
sbb
push
popa
call
xchg
pusha
lods
xchg
sti
iret
andl
push
mov
aaa
jbe
push
jp
addr16
xor
or
adc
jne
imul
lds
pop
pop
les
fpatan
in
cmp
popa
jecxz
into
push
faddl
adc
adcb
cmc
loopne
data16
fildll
cmp
sahf
mov
rcrb
add
pushf
fwait
shr
or
out
test
xchg
adc
jmp
push
cwtl
push
xor
into
fs
xchg
mov
dec
ljmp
test
push
icebp
test
or
cmovbe
inc
stos
and
pop
dec
ret
cltd
mov
lea
int3
mov
sub
ja
fs
in
push
popf
aam
inc
das
adc
fcmove
lods
es
inc
inc
xchg
sub
pop
es
or
or
jns
cmp
or
std
push
lcall
jns
fiaddl
inc
out
add
mov
xor
adc
loope
xlat
sub
dec
aas
push
shrl
pop
outsl
inc
dec
movsb
bound
jbe
andb
mov
mov
hlt
cwtl
mov
jmp
cmp
sbb
mov
sub
adc
adc
insb
pop
aas
add
stos
cmp
cmp
mov
pop
or
sbb
loopne
xchg
add
adc
in
pop
mov
and
stc
sub
mov
hlt
fildll
outsl
lahf
pop
pop
jp
push
cltd
push
cmpsl
lea
add
loope
jmp
test
popf
jp
dec
xor
push
js
and
jecxz
pop
mov
cwtl
ds
adc
push
adc
jnp
push
xchg
cs
xchg
sbb
or
or
ret
xor
inc
fmuls
mov
sub
daa
jle
addr16
jns
push
jae
pop
jp
mov
mov
and
jno
aad
cltd
hlt
mov
fs
lods
mov
mov
push
cmp
jnp
pop
push
jmp
jbe
enter
cmp
loop
sub
loope
incb
inc
adcl
bound
jmp
pusha
sub
push
add
push
outsl
aad
icebp
jge
or
xchg
iret
or
and
pop
loope
mov
and
cmc
mov
mov
rol
into
sub
and
xor
pop
inc
jle
pop
dec
fsubr
jl
lods
sub
movsb
imul
pusha
dec
movb
xor
xor
mov
mov
mov
stos
dec
out
pop
adc
rol
out
fs
mov
cwtl
dec
push
nop
rcll
fists
push
and
imul
daa
push
out
inc
sti
inc
cmp
test
pop
inc
int
fcom
cmp
insl
jle
andl
gs
xchg
mov
aas
into
pop
add
mov
testb
sbb
sbb
xchg
dec
mov
loopne
push
sbb
xchg
cli
fs
pop
mov
push
xlat
loope
pop
ficomps
dec
sub
inc
add
out
lcall
loope
mov
in
ret
pusha
add
cmp
arpl
xchg
push
add
decb
xchg
dec
or
push
and
popa
lsl
or
aaa
sub
cmp
push
push
hlt
arpl
imul
xlat
xchg
popf
sub
lods
ljmp
jge
and
and
imul
insb
cmp
in
int
and
push
and
imull
xorb
test
pusha
xchg
insb
jae
mov
mov
mov
rcrl
testl
and
mov
push
mov
jne
cld
mov
movl
in
pop
sti
mov
or
jb
or
ljmp
push
or
inc
pushf
and
xor
pusha
data16
test
notb
xor
lahf
pop
mov
pop
xchg
dec
pop
divb
xchg
jo
sbb
repz
jmp
xchg
sarl
jl
pop
cmp
sbb
dec
push
pop
test
aaa
mov
daa
and
fildll
loope
aad
fcoml
xchg
mov
and
jge
inc
frstor
mov
imul
popa
cmp
fistpll
xchg
mov
ret
rclb
dec
dec
dec
sbb
subb
addr16
mov
xchg
insb
iret
pop
test
push
push
fwait
jge
roll
mov
dec
sbb
das
jmp
mov
xchg
out
ret
sub
dec
jg
cmp
ja
daa
in
push
cs
int3
lds
sub
pop
add
push
fmul
sub
push
out
fbstp
das
pop
je
mov
and
movl
fisttpl
xchg
push
xchg
push
imul
jle
cmpsl
dec
fsts
pop
sbb
dec
push
inc
lret
movsb
lock
arpl
jae
dec
sbb
and
sbb
xor
mov
xor
cmc
inc
jle
ret
repnz
xor
popa
inc
imul
jge
xor
inc
lods
movl
and
lret
mov
or
pop
dec
lods
test
jl
lahf
xchg
and
dec
enter
adc
fsubr
leave
mov
cs
fisubrs
out
jmp
call
inc
cs
ret
xchg
or
jg
call
lods
jmp
fwait
call
outsl
es
jo
mov
das
cmc
lret
adc
fucom
imul
es
inc
inc
inc
aad
dec
mov
in
ljmp
cli
mov
cmpsl
cmpsl
pop
push
fs
or
pop
mov
data16
xchg
sahf
cld
fcom
imul
fisttps
xchg
arpl
ljmp
xor
pop
cmovns
push
and
lods
xor
test
sbb
sbb
push
sub
mov
sub
lret
xor
jp
ret
jb
out
jg
stc
insb
stos
jecxz
dec
cmp
mov
pop
nop
cltd
dec
int3
lock
aaa
mov
xor
mov
mov
shrl
loope
push
xor
add
nop
mov
ret
test
push
or
fldcw
insl
faddl
hlt
movsb
incb
inc
jg
mov
ja
pop
cmp
jae
jl
cmpsl
push
mov
push
mov
mov
nop
adc
pusha
shll
cmc
xchg
dec
mov
and
adc
test
push
adc
mov
push
sub
int
dec
stos
push
mov
pop
test
ss
sub
fildll
sahf
ljmp
data16
lods
iret
sbb
sahf
sarb
mov
push
xlat
sbb
ljmp
mov
mov
data16
mov
mov
cli
xchg
push
fistl
test
repz
cmc
fnstenv
pushf
fbstp
adc
pop
imulb
cs
push
or
and
dec
or
ja
iret
fsubrl
out
sahf
pop
cmpl
adc
push
out
outsl
gs
jmp
out
mov
and
ja
add
dec
push
push
mov
lret
movsl
cltd
mov
xchg
inc
cmp
subl
or
sbb
sbb
lret
iret
in
add
push
or
jecxz
push
cmpsl
stos
inc
iret
es
aad
fidivrs
push
cmp
incl
and
fisubs
rorl
nop
sub
div
enter
shrb
adc
add
jae
jmp
lea
mov
stos
scas
mov
cs
xchg
mov
pop
lahf
jge
cmp
sub
ljmp
mov
cmp
push
insb
pop
or
mov
mov
sahf
pop
add
xchg
int3
sub
cmovge
add
xor
add
pop
out
lahf
test
push
jle
cmpsl
mov
mov
ljmp
sbb
pop
popf
fs
mov
jb
fadd
into
push
lcall
fcomip
out
call
mov
icebp
in
sub
jg
xchg
int3
mov
jge
pop
or
pop
inc
repnz
xor
or
test
jno
push
int3
jns
enter
aam
sbb
pop
jae
lds
popf
movsb
cltd
inc
sbb
loope
dec
inc
inc
and
add
mov
cld
scas
xchg
jp
push
fisubl
xor
jmp
pushf
mov
mov
and
push
in
lret
arpl
push
adc
sti
cli
test
sub
fiadds
and
aad
sti
daa
and
push
pop
fistpll
add
xor
sbb
jnp
jp
sbb
mov
in
fsubr
or
inc
mov
loope
push
inc
daa
cmpxchg
inc
aam
push
mov
sbb
mov
daa
xorl
add
cmpsl
jp
dec
cmp
cmp
loope
push
jp
mov
mov
cmp
adc
mov
fnstcw
add
subb
push
mov
movsb
push
jp
frstor
aas
outsl
dec
push
mov
repnz
jmp
andl
iret
lret
push
cmp
pop
cli
cmp
pop
push
dec
scas
add
out
jae
das
lock
scas
and
repnz
jbe
mov
jle
es
inc
push
ljmp
mov
sbb
sub
int
push
cmc
cld
inc
cmpsl
in
int3
jns
or
dec
lods
lds
push
adc
pusha
adc
lcall
xchg
xchg
test
inc
gs
stos
daa
sahf
repnz
pop
jnp
cmp
adc
sbb
xchg
out
jae
push
std
out
pop
js
mov
push
insl
mov
inc
out
pusha
cli
push
movsb
fbld
inc
fbld
push
mov
shll
out
pop
jb
push
jbe
mov
enter
lds
cmc
and
mov
add
jg
mov
and
mov
ljmp
adc
mov
pushf
mov
lahf
sbb
mov
ret
push
push
pop
mov
jle
push
je
mov
push
mov
sbb
or
adc
mov
mov
xchg
sahf
stc
pop
mov
mov
sbb
push
xor
inc
adc
or
xlat
loopne
push
xor
sub
out
cmc
jmp
xor
hlt
push
fisttps
lds
mov
movb
int
negb
movsl
in
pop
clc
scas
pop
adc
iret
ds
xor
pop
jmp
sub
pop
xchg
dec
mov
bound
out
adc
cmpsb
dec
cwtl
mov
add
push
pop
pop
call
roll
push
xchg
jg
jnp
inc
xchg
or
out
push
aam
mov
and
rolb
cmp
push
mov
out
xchg
inc
mov
push
mov
push
add
sbb
cmpsb
mov
inc
das
pop
fnstcw
sbb
ret
loopne
test
popa
andl
loope
mov
fwait
in
pop
loop
cmc
inc
call
outsl
stos
sbb
cwtl
adc
cmp
lret
mov
dec
rcr
in
insb
cmp
cli
test
icebp
xchg
cwtl
adc
xor
sbb
insb
jae
sbbb
fsubr
jp
daa
pop
mov
sbb
cmp
cmp
jecxz
rep
push
cli
test
sti
mov
movsb
push
fistps
rolb
push
addr16
in
test
jecxz
add
repz
fdiv
lcall
cmc
fucomip
jl
into
into
les
jmp
dec
loope
push
xchg
jg
push
jo
mov
test
stos
xor
scas
popf
push
enter
pop
mov
jns
test
sub
jb
xor
inc
arpl
decb
add
arpl
stc
lcall
mov
loope
jnp
xchg
js,pn
mov
dec
add
lock
sub
repnz
jns
test
sbb
push
inc
cmp
xchg
cmp
fldl
adc
mov
lea
lock
stos
in
rcr
push
das
or
aad
jbe
aaa
fistps
inc
mov
and
cmp
cli
add
xchg
repz
adc
mov
data16
daa
xor
and
shlb
dec
sub
rcl
daa
mov
mov
pop
stc
or
xchg
rclb
jp
fnstenv
push
test
popa
movsl
xchg
and
hlt
push
stc
stc
sub
into
mov
push
dec
daa
js
movsl
push
aaa
andb
dec
aaa
xchg
movsb
sub
pop
sub
mov
mov
mov
shlb
add
dec
push
and
or
jecxz
cmp
and
inc
scas
inc
xchg
add
fildll
sbb
pop
push
inc
faddl
orl
mov
cmpsl
add
pop
andb
dec
sarb
std
mov
and
adc
movhps
fwait
jmp
xchg
lods
lea
dec
movl
arpl
lret
out
mov
dec
clc
pop
jbe
pushf
scas
adc
stc
adc
outsl
sahf
js
mov
adc
pop
add
jge
fs
outsb
cmp
int3
call
push
gs
sete
add
jb
mov
dec
xchg
xchg
aas
or
icebp
testl
out
fsts
sbb
cwtl
push
ljmp
adc
dec
push
jno
repnz
cmp
dec
jg
adc
lods
mov
jecxz
mov
cli
repnz
xchg
jo
iret
add
dec
jg
lret
mov
mov
jb
fmull
out
and
imul
xchg
in
int3
fcmovnbe
pop
ljmp
mov
mov
cwtl
xchg
jno
dec
jne
cmp
std
sub
dec
mov
xchg
dec
xchg
jnp
cmp
and
jnp
push
add
pop
shrb
lret
pop
test
xchg
fbld
add
sub
cmp
dec
fldcw
mov
ret
push
xchg
lret
ret
sbb
xchg
adc
leave
pop
shl
jno
stos
inc
data16
mov
jno
pop
bnd
adc
jo
data16
out
std
insl
xchg
call
bound
int3
add
sbb
loopne
adc
adc
lock
aas
jle
out
lcall
push
pop
pop
inc
iret
cmpsl
dec
repz
mov
addr16
mov
imul
test
and
stos
dec
nop
cmp
inc
inc
lds
rcrl
movsb
scas
mov
dec
and
hlt
jne
test
rolb
mov
xchg
movsw
inc
inc
xchg
fmuls
ret
aad
and
in
int
mov
pop
in
ljmp
jns
inc
pop
fdivrp
mov
cmp
pop
dec
fldenv
and
cmpsl
negl
dec
xchg
enter
stos
je
mov
or
lods
stos
imul
clc
cmp
push
loopne
dec
jbe
pop
andb
push
jl
sub
test
jno
out
mov
mov
outsl
jne
and
scas
xchg
cli
jecxz
inc
orb
loop
cmpsb
daa
aas
fmull
and
scas
jbe
mov
and
pop
or
adc
adc
fbstp
or
pop
cmp
test
jno
cwtl
pop
jmp
mov
fidivrl
xor
xchg
insl
jle
mov
pop
insb
rolb
inc
fcomip
cmp
jb
jmp
and
mov
in
mov
int3
lret
mov
sarb
xchg
test
cmp
pop
aad
cwtl
mov
dec
jb
sub
scas
or
imul
mov
aaa
out
je
fcomi
repz
subl
xchg
test
and
repz
add
jmp
nop
cld
das
mov
add
lret
lock
imul
xlat
sbb
jbe
clc
lret
pop
dec
inc
inc
add
mov
std
xchg
cwtl
sub
aam
cmp
test
aam
mov
cmp
pop
or
add
push
adc
dec
mov
fmuls
push
flds
adc
inc
xor
ficoms
dec
imul
fists
out
mov
sbb
mov
and
cmp
das
cmp
or
test
xor
enter
mov
rcrl
in
shrl
outsb
outsl
dec
int
dec
stos
push
inc
lods
data16
adc
mov
sub
mov
pop
test
popf
mov
mov
aaa
sbb
outsl
and
scas
inc
loop
or
mov
roll
aaa
sbbb
outsb
xchg
mov
std
loope
cmc
dec
mov
stos
pop
mov
mov
inc
xor
rcr
push
or
or
cmp
aam
xor
das
add
inc
or
out
das
cltd
push
imul
jne
rorb
jmp
sbb
jbe
xchg
and
shrb
data16
jne
iret
lahf
test
je
out
aad
sbb
icebp
inc
pop
movsb
sub
fdiv
rcll
push
dec
pop
adc
in
jmp
movsl
out
iret
out
jle
jns
insb
mov
push
mov
jae
xor
decb
push
mov
or
cmp
dec
fbld
pop
mov
mov
test
enter
lea
dec
data16
lret
ret
inc
xor
aam
and
jmp
cwtl
int
insl
call
push
iret
faddp
inc
push
pinsrw
testl
push
mov
or
std
cwtl
mov
popa
adc
fdivl
pop
aas
xchg
and
pop
insl
fidivs
fxch
inc
aam
adc
jns
js
cmp
adc
jns
pop
stos
xor
sub
int3
push
fldenv
je
jbe
lahf
mov
popf
lea
add
push
mov
pop
stos
inc
sbb
pop
js
add
repz
cmp
and
jg
mov
fsubrs
lcall
mov
aad
jge
push
mov
cld
jle
xchg
loopne
aas
stos
shrb
mov
pop
addr16
popf
idivb
stos
mov
sub
mov
loop
in
test
or
ja
fisttps
cltd
xchg
bound
push
sarb
jp
sub
dec
aam
mov
cltd
mov
mov
addr16
pusha
fwait
jae
xchg
add
sarl
dec
loopne
dec
lret
testl
lods
dec
push
sbb
dec
aas
and
mov
pop
stos
or
inc
adc
and
rcr
pop
jmp
loopne
scas
mov
fdivr
and
fimuls
pop
adc
sub
pushf
loopne
mov
or
adc
aaa
jne
sbb
pop
arpl
data16
mov
push
lds
push
adc
adc
push
int
push
cmp
inc
insl
jnp
add
loope
sub
xlat
jo
jno
sbbb
and
sub
mov
mov
andb
adc
inc
orb
mov
mov
inc
leave
dec
addr16
mov
xchg
mov
je
movsb
mov
testb
cli
xor
sub
lods
enter
cmp
mov
fsts
cli
iret
sahf
sbb
rorb
mov
adc
out
pop
mov
imul
jnp
cmpsb
jg
mov
xchg
or
iret
inc
jnp
lea
add
adc
inc
cmp
push
shl
mov
adc
cmp
stos
xor
adc
inc
adc
mov
fidivs
sbb
aad
loope
sarb
lret
std
cmp
sar
movsl
pop
add
sbb
inc
ljmp
lcall
aad
cmp
inc
iret
out
mov
in
dec
ds
cmpsl
add
cwtl
xor
cmp
test
xor
les
cld
push
sbb
pushf
mov
fimull
mov
movsb
movsl
jae
nop
push
fisubrs
movsl
mov
mov
rcrb
mulb
ds
test
or
insl
mov
js
in
sbb
rol
les
fs
xor
fildll
xor
mov
int
lea
out
out
mov
add
lods
dec
sbb
imul
js
or
std
jnp
rol
push
imul
repnz
pop
lock
es
push
xchg
insb
lods
lahf
cmp
xlat
pop
jg
ret
pmaxub
sbb
mov
or
lods
lock
and
mov
cmpsb
adc
cmpl
addr16
lea
lcall
cmpsl
jecxz
je
movsb
popf
pop
adc
lret
add
push
add
jmp
int3
lret
andb
or
xlat
jb
jg
insb
adc
mov
fdivrp
cmp
loopne
mov
and
fdiv
push
sub
hlt
xchg
inc
mov
add
push
cwtl
dec
sbb
xchg
xchg
idivb
dec
xchg
jnp
sub
xor
das
sahf
jns
xchg
data16
add
mov
add
mov
mov
fdivs
or
sahf
sub
push
push
rcrl
or
push
fsubl
dec
imul
xor
pop
sub
xlat
test
cmpsb
inc
cmp
lea
adc
push
lea
clc
jle
pop
xor
pop
push
pop
test
lcall
imul
fisubrs
xchg
pop
insl
push
enter
loop
daa
and
sub
loop
loope
jle
add
incb
fwait
cmp
mov
jbe
dec
in
rorb
mov
mov
sti
pop
out
sbb
mov
or
cltd
ret
cmc
cld
jno
or
daa
pop
gs
pop
mov
dec
pop
cmp
repz
insl
add
mov
je
add
jecxz
clc
push
stos
aaa
dec
xlat
mov
push
or
or
push
test
sbb
push
push
jle
call
jae
jb
jmp
jp
or
test
in
test
aas
pop
cmp
jns
out
or
inc
xor
jnp
pop
jb
test
pop
xor
jp
inc
mov
lret
mov
addr16
push
repz
mov
mov
sub
addr16
retw
pop
test
rcll
xor
ror
fcompl
pop
jmp
out
mov
cmp
shll
push
cmp
fmull
fdivs
repnz
out
sbb
enter
pop
fwait
mov
dec
pop
and
push
jns
call
mov
sub
adc
dec
movl
popf
outsb
inc
pop
icebp
xor
sarl
lea
jne
bts
lea
sar
jge
mov
cmp
pusha
add
push
movzwl
lea
test
or
add
mov
push
test
add
bt
cmc
pushf
call
movb
mov
shl
xchg
bswap
shl
rcl
pusha
lea
stc
clc
mov
call
push
bt
imul
push
clc
cmp
add
push
pushf
lea
jmp
js
jno
pop
lret
push
insl
out
add
xor
pusha
mov
in
stos
cli
pop
or
mov
jl
push
pop
lret
out
call
add
inc
or
or
and
fwait
xor
fwait
pop
dec
pop
in
xchg
push
cmp
sub
mov
pusha
test
jmp
jl
outsb
xorl
xor
push
shlb
fsubrp
cmpsb
sub
inc
imul
xor
pop
add
mov
jl
cmpsb
jecxz
enter
roll
cmp
or
call
add
dec
gs
popa
addr16
outsl
js
add
xor
call
mov
bswap
mov
movzbw
movsbw
mov
call
call
call
lea
je
aam
xchg
not
xor
aaa
adc
mov
cwtl
xadd
mov
setno
shr
pusha
or
jmp
jmp
jmp
call
cmp
add
add
pop
or
add
add
jmp
add
add
add
add
add
add
add
add
mov
pop
add
add
add
les
pushf
movsbw
xadd
lea
shr
sub
bts
movsbl
push
cmc
btc
push
adc
push
push
xor
pushl
movzbw
not
lea
pushf
pushf
mov
call
lea
call
pusha
test
mov
jmp
jmp
push
test
aad
mov
xchg
cmp
cmpsl
or
mov
sbb
pop
mull
lods
inc
dec
xchg
pop
iret
stos
pop
xor
repnz
fnsave
xchg
cmp
arpl
add
in
jl
mov
xchg
gs
loop
cltd
fistps
jmp
pusha
js
xlat
jne
out
lahf
jb
inc
jle
push
jb
inc
adc
aam
inc
jb
ss
jmp
pop
sub
adc
jle
lcall
fmuls
pop
test
jb
xor
push
idivl
or
cmpsb
lock
nop
movsb
gs
mov
jbe
add
xor
ljmp
std
subl
push
sbb
jmp
xor
rcr
push
test
rol
rcr
shl
mov
jmp
movw
bswap
movb
pusha
mov
movzbw
movzbl
movzbl
jmp
movw
pushf
lea
je
cmc
test
add
pusha
cmp
jmp
jmp
push
pushf
lea
jb
shl
mov
bsr
rcl
seta
mov
clc
call
shld
add
ror
clc
xor
bsr
sub
cmc
btr
movzbw
lea
shr
shrd
neg
sar
mov
shr
bsf
add
test
jmp
jmp
push
movb
pushl
popl
movb
pushf
pushl
ret
std
jle
pop
mov
dec
sub
pusha
ljmp
test
pop
cmp
gs
out
dec
mov
xor
mov
dec
outsb
ret
jle
pop
mov
clc
stos
loope
xchg
jne
push
xchg
mov
xor
or
mov
xchg
mov
add
daa
out
adc
jmpw
mov
xchg
mov
pusha
add
sbb
adc
insl
das
lret
in
faddp
fsubr
bound
pusha
xor
rolb
xor
adc
scas
into
mov
push
jl
insb
out
cltd
inc
clc
sub
loop
rcll
into
inc
mov
or
sar
xchg
pop
jo
mov
push
into
pop
fdivrl
pop
pop
xlat
ja
jge
sbb
test
mov
pop
es
inc
xor
pop
stc
xchg
mov
fwait
mov
jmp
push
sub
mov
mov
ljmp
daa
xchg
adc
mov
mov
add
sbb
test
and
sub
add
adc
push
movsl
xchg
mov
pushf
rorl
xchg
mov
mov
and
adcl
dec
jne
ficoml
repz
ja
inc
scas
mov
xchg
add
push
and
test
je
sbb
repnz
sbb
push
test
mov
bound
or
xchg
jecxz
into
out
and
lods
xor
lret
cmpsl
mov
cmp
fdivrs
cmpsl
mov
pop
hlt
jo
xor
mov
xor
cwtl
pop
cmp
cmp
bnd
cmp
and
pop
sbb
cmpsb
addl
sbb
fs
jae
pop
sahf
std
ss
and
jno
push
jne
in
insl
and
mov
or
xchg
xor
mov
ss
pop
ret
push
push
sarl
mov
pop
cmpsb
mov
mov
jge
imul
imul
mov
out
and
ja
inc
xor
pop
inc
test
add
aad
in
sbb
jge
ret
leave
in
insb
xchg
mov
outsb
stos
cli
lods
fs
xchg
mov
popa
or
mov
jmp
mov
sub
int
jne
mov
jno
inc
pop
xchg
mov
or
imul
negb
pop
fldcw
xchg
repnz
out
xor
aaa
or
addr16
loop
lcall
add
cmc
lret
shlb
cs
jle
mov
cmp
rorb
xor
out
jmp
jp
and
test
inc
lahf
aam
add
and
in
and
ffree
loopne
fstpl
dec
or
jnp
add
inc
adcb
jns
adc
lret
add
push
rolb
push
sahf
xchg
lds
ss
repnz
test
fstpl
rclb
pop
mov
pusha
rorl
lea
nop
jnp
pop
pop
cmp
xchg
jb
mov
inc
add
mov
xlat
mov
jb
imul
aad
jp,pn
cli
jbe
or
lods
inc
bound
sub
sbb
popa
dec
adc
sti
xor
imul
mov
mov
fwait
lahf
rcl
popf
adc
cli
xlat
jbe
imul
fsubrl
sbb
inc
lods
mov
xor
sub
push
or
ds
andb
scas
jns
cwtl
mov
and
cmpsl
xor
xchg
ja
adcb
sub
mov
jl
gs
mov
fldl
pusha
je
push
hlt
push
jb
int
xlat
aaa
jg
and
mov
sarl
inc
cmp
and
sti
mov
gs
subl
pop
mov
into
ds
jmp
push
and
daa
adc
rorl
or
pop
cmp
stc
push
loop
fiadds
sbbb
push
push
push
inc
mov
filds
sarb
mov
jg
loopne
inc
xchg
sbb
lds
mov
dec
xor
and
add
fmull
shll
out
sbb
dec
imul
shl
mov
xor
xor
or
xchg
adc
or
lea
imul
rorl
in
es
inc
and
adc
scas
test
adc
mull
add
das
shl
lods
jb
into
rcll
cwtl
cmp
dec
pop
xchg
outsl
ficoms
into
sub
pop
mov
or
cld
js
sbb
out
cmp
ljmp
ds
scas
pop
gs
mov
dec
test
xor
pop
sub
push
testb
scas
cmp
and
sbb
add
inc
addr16
adc
push
cmp
lcall
or
je
inc
psubd
cli
out
ljmp
in
mov
jnp
fucomip
xchg
sub
test
cmp
fnstcw
dec
push
lock
and
cmp
mov
mov
push
outsb
jns
sbb
ror
push
push
sub
icebp
sti
rorb
xchg
dec
data16
jae
mov
add
bnd
sbb
daa
or
add
adc
outsl
test
scas
xchg
lds
lret
ss
pop
xor
xlat
inc
inc
sbb
insb
mov
lret
lahf
mov
insl
mov
popf
ficoms
stos
mov
imul
mov
adc
les
add
inc
femms
fldt
cmc
loope
shll
js
mov
mov
jnp
mov
icebp
cwtl
dec
or
push
fists
notl
pusha
push
cmp
repnz
inc
cli
cmc
cmp
aaa
xor
and
xchg
jb
sbb
pop
in
in
clc
test
xor
and
shll
xchg
mov
test
iret
sub
fcompl
or
jo
cmc
mov
int
sbb
jmp
fmuls
dec
cmp
punpckhdq
pop
sub
lea
cli
xchg
sahf
addr16
mov
sbb
lcall
std
and
mov
mov
push
add
cld
sub
jmp
test
cs
add
mov
lret
mov
sub
push
fdivl
push
and
mov
imul
mov
stos
pop
jo
ja
divb
test
jbe
ret
jl
adc
jno
pushf
notl
dec
hlt
ret
add
push
ljmp
std
xor
sbb
mov
outsl
in
int
adc
rcrb
xor
xor
mov
cld
or
fcmovb
out
sahf
out
jne
mov
popf
mov
scas
subl
lds
mov
jno
sbb
clc
sub
cld
ret
or
cmp
clc
cmpsb
xor
gs
mov
dec
adc
pop
insl
icebp
mov
cmc
mov
cltd
shrl
shrl
lea
jl
or
hlt
xchg
mov
inc
leave
mov
or
pop
pop
ficoms
inc
jge
jmp
add
dec
xor
sub
das
dec
fwait
scas
sub
pop
hlt
jne
pop
in
xchg
cmp
xlat
xor
sbb
testl
imul
jo
repz
sbb
stos
mov
cli
ss
cmp
jmp
jge
lds
mov
sub
and
cmp
xchg
adc
xor
psubw
rcl
mov
pop
sbb
adc
movsl
pop
cwtl
jp
das
sub
fwait
or
xor
sub
fnsave
fsubr
pop
dec
xchg
in
pop
pop
jno
out
imull
insl
or
int3
cld
scas
movb
out
adc
mov
repnz
fldl
nop
out
in
jle
pop
aaa
mov
ret
sbb
pop
data16
and
mov
stos
bound
clc
fdivs
cmpsb
scas
fsubl
mov
xchg
pop
xor
xor
cmp
ret
out
je
push
mov
repz
pushf
int3
inc
setle
dec
sar
dec
out
es
daa
cmpsb
sub
lds
push
stos
js
imul
cwtl
pop
push
outsb
xchg
push
jecxz
pusha
fadd
sub
jno
movsb
jp
push
arpl
mov
adc
int
and
add
jnp
mov
sbb
insb
or
push
addr16
je
inc
xor
int
loop
dec
xchg
fisttpl
clc
aaa
popf
sti
push
jp
out
cmp
and
jp
data16
inc
int3
push
loope
jl
insl
sbb
mov
stos
inc
clc
push
pop
aaa
add
inc
iret
cwtl
push
xor
pop
inc
cli
sti
xchg
adc
mov
imul
mov
popfw
mov
add
push
push
shlb
stos
mov
int
clc
pop
stos
popa
subl
shl
dec
cs
or
xchg
jg
xor
pop
in
fwait
push
out
rclb
pop
in
pushf
mov
in
out
mov
test
out
into
sub
jb
push
fcoml
int3
data16
faddp
aad
jl
dec
out
jle
mov
jnp
lret
or
cmpl
add
test
jb
fcmovne
fwait
pop
dec
mov
xor
cmpsl
filds
push
add
ret
insl
lea
in
add
int
pop
sbb
mov
inc
rcpps
pop
and
dec
sub
dec
insl
xor
add
lods
xor
push
cmpb
add
and
sub
pusha
bound
mov
dec
into
stos
dec
mov
xor
lahf
fisttpll
das
sahf
insw
nop
std
push
les
scas
add
daa
mov
lret
lret
pusha
jge
in
clc
mov
scas
cli
add
add
sbb
xor
aad
iret
loop
pop
mov
out
sar
adc
into
jnp
mov
xchg
lcall
mov
insb
sbb
mov
mov
jmp
cmp
inc
mov
cmp
lods
dec
int
imul
notb
mov
notb
mov
xchg
inc
les
xor
dec
insl
scas
cs
call
fwait
cmp
gs
cltd
or
cs
mov
out
cmp
pop
jl
aaa
insl
mov
pop
iret
cmp
imul
or
and
mov
fisttpl
xchg
adc
std
adc
in
cli
mov
and
ss
mov
bswap
push
rcl
lea
movzbl
seta
mov
shl
rol
not
bt
inc
shl
rcl
add
setae
rep
movzbw
movzbw
pushf
mov
mov
movsbw
xchg
push
mov
not
call
push
ret
mov
out
mull
filds
lret
gs
in
push
leave
and
imul
jb,pt
sbb
aam
je
cld
mov
imul
es
out
pushf
xor
or
sub
adc
mov
mov
cltd
out
frstor
sbb
sub
loop
bound
cmpsb
shr
dec
xor
add
fwait
adc
sbb
out
push
outsb
movb
lea
jmp
outsl
sub
nop
or
inc
dec
mov
push
sub
push
andb
push
test
cmpsb
ret
daa
int3
lock
xchg
fwait
ja
inc
jae
jp
les
dec
bound
lret
pop
and
in
mov
push
dec
xchg
in
push
fwait
and
cmp
cmp
shll
gs
clc
dec
cli
punpckhwd
loop
and
dec
fcmovbe
mov
ret
mov
inc
sub
mov
cmp
cmp
inc
test
mov
sbb
cld
push
out
dec
dec
pop
inc
or
insl
mov
and
test
add
adc
mov
shll
or
popa
pusha
pop
mov
add
mov
fsubrs
mov
sahf
mov
xchg
push
jae
or
sub
jecxz
push
inc
dec
dec
mov
mov
mov
sbb
push
xor
adc
ljmp
hlt
or
cmc
aas
cli
push
push
sti
push
jmp
lret
sbb
xor
shlb
xor
mov
inc
aaa
inc
clc
sub
cmc
xor
pop
sahf
subb
scas
faddl
test
fucom
out
mov
in
or
cmpl
or
cmc
jg
push
mov
mov
mov
ja
cmpb
sahf
inc
mov
mov
mov
subb
orl
sub
mov
mov
cmpsb
shrb
xchg
call
lea
je
lea
mov
lea
pushf
lea
call
call
mov
seto
movzbw
mov
movsbw
pushf
pushf
setne
mov
call
adc
push
pusha
mov
lea
jb
cmc
push
bt
stc
xor
push
test
pusha
pushl
mov
movb
pushf
mov
call
push
test
add
movb
pushl
movw
pushf
test
jmp
notb
imul
cs
jmp
das
insl
ret
sbb
outsl
leave
mov
cmp
lods
pop
jns
movsb
fcmovnb
insb
sub
rol
ss
stc
pop
mov
mov
out
in
push
pop
and
and
movsl
sbb
add
or
push
push
je
inc
xorb
es
stos
lcall
cmpsb
ror
addr16
jmp
lea
call
pusha
push
lea
jb
inc
neg
shld
btc
cmp
not
inc
mov
push
sbb
movb
pop
push
lea
setl
pop
lahf
mov
pushf
not
jmp
neg
clc
cmp
cmp
not
clc
movb
pushf
mov
jmp
call
sub
cmc
call
pushf
call
add
mov
pusha
pusha
call
pusha
add
mov
dec
call
mov
movl
pushf
pushf
pushl
popl
movw
pushl
pushl
ret
mov
pusha
cmc
sub
pushf
call
gs
mov
scas
shrl
xchg
out
xor
xchg
int
mov
jg
push
rclb
lods
outsb
xchg
mov
lret
cli
push
and
and
stos
imul
or
pusha
leave
lahf
lds
push
test
fsubrs
cmpsb
sbb
mov
pop
aad
sahf
adc
loope
shrl
movsb
push
pop
mov
and
pop
push
rorb
ret
data16
inc
mov
mov
int
mov
into
add
sub
scas
mov
js
gs
pushf
pop
pop
push
cmpsb
dec
xchg
imul
add
inc
cltd
shl
adc
stc
clc
stc
sub
mov
movsl
adc
mov
pusha
and
dec
jecxz
lret
fcmovnu
repz
insl
pop
pop
mov
ljmp
out
inc
cmpb
cs
out
pop
xchg
xor
xchg
xor
push
push
or
pop
inc
jbe
xor
stos
push
sbb
repz
vmwrite
adc
jmp
mov
push
add
add
loop
call
out
sub
ret
cmpsb
iret
mov
loope
cmp
pop
arpl
jg
push
clc
mov
pushw
pop
adc
call
sbb
dec
test
mov
adc
pop
call
xchg
push
jnp
xchg
xchg
mov
sbb
pop
test
xchg
sbb
fadd
hlt
sub
int
insb
mov
pop
push
jnp
jmp
inc
jnp
push
xchg
push
cli
push
ret
shrb
ss
xor
adc
xchg
xchg
in
adc
test
mov
out
mov
cmp
mov
cmpsb
into
cmpsl
fnstenv
and
add
movsl
add
bswap
jmp
lea
jmp
push
clc
mov
xchg
mov
mov
mov
cmp
push
pushw
mov
jnp
movsl
and
repnz
les
cs
jp
jmp
scas
cmp
cmc
sbb
sbb
push
and
sahf
push
out
xchg
mov
das
jmp
inc
cmp
sub
dec
mov
clc
push
mov
roll
das
adc
aam
fsubrs
lret
subb
imul
outsl
cwtl
fdiv
add
mov
fsubl
xchg
xor
stos
out
ds
dec
insl
cmp
inc
adc
out
das
and
sbb
pushf
cmp
jmp
imul
push
add
mov
movb
lea
jmp
mov
call
movl
bswap
pop
lea
jmp
pushf
push
movl
mov
pushf
lea
jmp
push
adc
pusha
cmc
js
xchg
cmp
xchg
icebp
pop
mov
fnstsw
mulb
in
repnz
xor
std
shlb
insl
inc
test
sbb
fistl
adc
jno
pop
mov
jo
lods
aam
sub
adc
lods
dec
jge
fs
mov
in
push
fistpll
hlt
xchg
punpckhdq
sbb
or
add
adc
subb
cmp
push
push
push
cli
pop
sbb
mov
into
add
gs
dec
add
dec
xchg
cwtl
dec
add
cs
mov
in
push
in
add
pop
jp
pop
cmpl
mull
jmp
jae
push
fimuls
push
daa
or
int
out
aaa
aas
ss
jle
and
les
cltd
in
dec
xchg
dec
jbe
or
push
xchg
nopl
jg
aaa
mov
ret
movsb
fwait
cmc
and
adc
cmc
lods
xor
lcall
daa
into
pop
and
cmp
xchg
out
fdivl
ficompl
mov
jb
and
fyl2xp1
xchg
mov
loope
cmpb
idivl
ja
jae
imul
push
je
xlat
jp
cld
popf
inc
jne
lahf
add
jmp
aam
jmp
jno
idivb
cmpsl
mov
push
lea
sbb
and
aam
ffree
dec
lret
pop
jns
sub
mov
popa
frstor
pushl
cmpsl
dec
sub
div
ret
adc
divb
das
pop
cmp
cld
adc
inc
lret
or
scas
dec
xor
sbb
or
pop
lret
mov
shll
imul
aaa
ret
xchg
jecxz
imul
xchg
push
xchg
xor
pop
imul
ret
mov
rolb
outsl
es
pushf
ds
int
test
lcall
push
divl
icebp
lret
icebp
ljmp
sub
test
rcrb
lret
cmp
xor
xor
fs
sbb
mov
sbb
adc
loop
mov
cs
fcom
sub
push
pop
cmpsl
xchg
bound
inc
cli
xchg
lret
sub
call
inc
js
jp
and
inc
std
and
insl
fldl
and
add
roll
dec
inc
pop
add
int
nop
sub
mov
hlt
mov
dec
aas
popa
and
xchg
pop
test
mov
and
adc
mov
bound
in
popl
dec
notl
fadds
push
daa
pop
in
sbb
jno
cmp
dec
aas
stos
and
or
cmp
xchg
call
pop
test
cmpsb
iret
lds
pushf
fbstp
and
cmp
adc
out
jl
xor
adc
mov
jge
fs
pop
mov
lret
jae
leave
lcall
lcall
cwtl
sub
pop
cmp
sbb
push
adc
push
test
inc
xlat
pop
test
dec
jo
push
jb
pusha
pop
jnp
dec
xchg
in
std
je
mov
gs
push
pop
mov
clc
out
dec
in
pop
incb
jge
push
mov
rcll
mov
fstpt
jbe
iret
cs
sbb
pop
mov
or
int3
xor
pop
inc
cld
push
mov
jne
add
or
gs
jns
lret
std
jno
mov
stos
push
fists
stc
out
xchg
push
stc
lock
add
inc
insl
repnz
dec
mov
inc
pop
push
mov
sbbb
dec
ja
xchg
sbbb
sub
hlt
insl
xchg
dec
pop
jl
fiadds
cmp
lods
lret
xor
inc
jns
push
jo
out
rcll
mov
dec
lds
aas
inc
gs
enter
bound
or
test
mov
cmp
xchg
nop
neg
orl
push
jmp
es
lock
adc
xor
lret
sub
push
pop
dec
adc
push
push
and
and
jecxz
jb
fcoms
pusha
pusha
in
sti
clc
inc
mov
or
xchg
sub
clc
push
in
divl
add
ja
sub
rcrl
mov
inc
out
outsl
imul
cmpsl
std
fstps
aam
add
outsl
lret
cmp
repz
std
and
les
push
push
js
in
sub
out
hlt
dec
bound
loop
mov
mov
mov
mov
sub
stos
call
dec
jo
js
lahf
cltd
mov
push
test
in
nop
push
sbb
repz
pop
loop
push
mov
dec
mov
push
loop
insl
das
sub
mov
sub
cmovl
push
push
mov
inc
cmc
sub
push
jae
cmc
popf
push
js
push
cmp
dec
loope
or
add
pop
inc
fildl
sbb
and
test
fwait
sbb
fucomi
sbb
push
mov
and
cmpsl
shl
sub
das
xchg
mov
sbb
mov
add
sub
sbb
ret
sub
inc
lock
call
xchg
dec
add
jge
inc
sbb
mov
inc
in
sbb
mov
xchg
cmpb
lret
mov
test
or
mov
jmp
out
mov
out
lods
dec
adc
or
sub
or
or
ljmp
in
push
cs
dec
repnz
sarb
jg
roll
mov
repz
cmp
lea
test
cld
test
lret
imul
jp
xchg
adc
clc
cmp
mov
sub
mov
popa
xor
add
inc
pusha
xchg
inc
jmp
scas
flds
leave
movsb
pop
push
pushf
in
cwtl
dec
outsb
adc
test
xorl
sub
mov
lock
cs
push
pop
inc
jl
push
bound
aad
cmc
mov
movswl
cmpsb
push
fwait
push
notl
out
in
lods
das
roll
adc
popf
out
or
sub
in
push
adc
leave
and
fwait
movsl
sahf
sbb
or
mov
sbb
into
sbb
cld
cmpsb
out
out
jl
aas
xchg
xlat
std
jle
testl
push
not
cmp
rclb
mov
loope
adc
ss
adc
or
fistpl
cmpb
and
hlt
and
enter
push
push
lret
adc
in
xchg
leave
pop
lret
pop
cwtl
jae
imul
push
test
clc
cmp
pop
pop
test
outsb
imul
xchg
in
push
push
cmp
outsb
mov
mov
jns
mov
ja
push
add
sarb
cli
lret
mov
or
cmpsl
push
lret
sbb
jbe
adc
aas
in
mov
add
xor
mov
jp
dec
push
xchg
enter
mov
sub
mov
orb
mov
in
in
bound
and
pushf
mov
js
dec
xor
jo
movhps
or
dec
daa
dec
int3
out
sbb
cmp
push
fildl
lods
movsl
mov
pop
daa
adcl
pop
and
arpl
cmp
inc
icebp
lret
je
add
mov
fsubs
mov
bound
je
add
es
mov
jle
cmp
andb
sti
insb
jl
ljmp
mov
and
fwait
in
insb
xchg
or
and
pusha
aad
cmpsl
sbb
aas
mov
mov
test
dec
push
jnp
inc
add
std
int
icebp
sub
add
jnp
insl
push
pop
fdivl
mov
stos
mov
xor
cs
push
mov
jle
test
lret
pop
xchg
loopne
mov
js
mov
shll
xor
xchg
sti
ficoml
leave
mov
lods
xchg
inc
sub
pop
push
je
cmp
outsb
jge
inc
insb
push
xchg
rclb
sti
pop
lods
jno
js
and
dec
repz
push
ficoml
nop
xchg
jae
mov
dec
je
jb
jns
mov
lret
dec
jns
or
mov
sub
lret
out
xor
loope
and
call
push
xor
incb
xor
xor
and
bound
std
dec
test
clc
mov
jbe
xor
aad
lret
gs
jno
cwtl
mov
pop
adc
mov
imul
outsb
mov
mov
nop
adc
imull
aad
push
cld
mov
stos
test
int3
dec
or
repnz
test
or
jne
cmp
cpuid
shrl
dec
imul
inc
xchg
inc
push
mov
sub
and
in
es
push
imul
dec
sbb
xor
cmp
sbb
lahf
repnz
xchg
movsl
loop
filds
mov
or
xchg
pop
push
jge
ret
cs
cld
call
mov
hlt
jle
cmp
pop
int
outsb
mov
in
cltd
xlat
sbb
fwait
xlat
test
pop
cmpsb
dec
test
dec
dec
test
xchg
jge
xchg
mov
int
divb
adc
outsl
popl
rcrb
sub
jecxz
in
or
add
flds
insl
leave
sub
mov
fstl
xlat
xor
and
xchg
sbb
ss
inc
addr16
lods
addl
arpl
xchg
pop
gs
repnz
cmpsb
loopne
add
insl
fistpll
popa
cs
pop
shll
adc
dec
fisttpl
xor
xor
mov
pop
sub
aas
mov
cmp
hlt
mov
jns
ljmp
into
fistps
test
cmp
cmp
test
fs
popa
jnp
lahf
popf
push
adc
inc
push
es
cmp
test
jo
fwait
xchg
ljmp
sub
int
adc
add
andb
dec
filds
and
test
push
mov
xchg
out
xor
shl
repnz
xchg
jg
xchg
and
pop
mov
cmp
push
int
out
xor
cmp
mov
jnp
jl
icebp
push
mov
jl,pt
xor
sahf
mov
fsubr
movsl
arpl
adc
xor
stc
movsb
imul
cmpsb
cs
mov
in
and
push
les
sti
or
xor
rorl
ljmp
fcoms
push
subb
pop
insl
lahf
xchg
push
pop
ds
pop
jmp
aad
pop
out
int3
xchg
into
popa
pop
enter
iret
mov
fsts
int3
dec
sbbl
xchg
fistps
xor
aaa
mov
test
inc
pop
lret
mov
hlt
in
mov
out
push
loope
adcb
adc
imul
sub
add
lret
inc
pop
and
jle
shl
sub
pop
sbb
pop
xchg
xchg
add
out
push
incl
xor
push
push
and
roll
and
jle
mov
incl
loope
inc
mov
in
cmp
mov
add
lock
dec
mov
ds
inc
fisubs
and
add
and
loope
mov
int
lods
scas
add
fcompl
mov
jns
cmp
jl
dec
ss
mov
outsl
loope
cmp
pop
div
mov
cmc
pop
xchg
insl
scas
bound
mov
cwtl
in
mov
test
inc
mov
lahf
ljmp
mov
inc
sub
popa
outsl
add
push
add
addr16
int
sbb
out
outsl
divb
jo
cmpsl
gs
lret
sti
shlb
jno
insb
ficoms
rcrl
cmp
xchg
rolb
adc
stc
pop
inc
insl
jle
sub
outsl
push
push
rcrl
xor
jmp
mov
sub
iret
int3
mov
les
inc
sbb
adc
jo
shll
xor
inc
or
cmp
adc
fistpl
rolb
cmpsb
es
jae
and
frstor
pop
outsb
fwait
sbb
setbe
faddl
push
jnp
faddp
jecxz
movsl
cmp
dec
int3
adcl
jne
rol
cli
sbb
mov
cwtl
inc
jns
sbb
and
sub
shr
push
lods
pusha
add
inc
loop
call
pusha
in
std
mov
xor
mov
xchg
into
xor
addr16
xlat
mov
rcll
adc
repnz
shlb
mov
xchg
push
test
scas
ja
and
mov
orl
jge
or
pop
ljmp
mov
xchg
mov
ficomps
mov
or
xor
gs
pop
cli
mov
pop
adc
push
pop
call
imul
xchg
outsb
popa
sbb
pop
push
mov
push
jmp
outsb
cmp
push
or
and
pop
pop
gs
bound
pop
xchg
push
dec
lret
mov
sbb
cmp
cmpsb
adc
in
mov
fldenv
push
test
out
fsubrs
lret
jmp
or
and
xchg
scas
cmp
or
js
divb
insl
scas
xchg
test
xor
jl
inc
mov
xchg
xchg
and
daa
pop
insb
adc
aad
mov
sbb
sub
dec
add
or
es
les
jl
sti
in
imul
jp
push
shl
or
lret
arpl
dec
sub
xor
ret
or
fsubr
in
push
inc
pop
rcll
mulb
and
dec
adc
rorl
lods
test
daa
scas
push
push
sbb
cmpl
mov
cmc
adc
jne
dec
xor
loope
push
jo
xchg
arpl
cmpsl
js
jb
dec
cmp
test
out
add
dec
add
sub
cli
jb
mov
mov
or
repnz
jmp
push
add
popf
inc
pop
aas
lods
mov
or
pusha
push
adc
cld
clc
push
popf
test
jb
lahf
mov
sbb
loop
xor
or
fidivrl
and
stos
sarb
out
pop
imul
rorb
test
into
push
and
cmp
scas
in
mov
mov
xchg
cli
sub
sbb
push
test
inc
xchg
pop
mov
inc
pushl
mov
nop
adc
xchg
arpl
inc
or
mov
cmpsb
or
movsb
or
add
das
mov
inc
stos
jle
sbb
pop
xchg
je
shrb
andb
daa
bound
pushf
xor
and
movsl
or
inc
outsl
dec
jne
xchg
fbld
or
mov
mov
push
sub
mov
adc
insb
out
repz
mov
movsl
mov
jmp
dec
mov
in
inc
ljmp
out
jmp
gs
loop
mov
mov
mov
xorl
lcall
in
in
cmc
cmp
fisubs
sbb
pop
cli
lret
js
cltd
loop
cmp
and
cmp
pusha
jmp
imull
out
jp
data16
mov
push
mov
repnz
push
cli
pop
xor
push
das
or
in
bnd
pop
out
push
inc
xchg
push
inc
push
sub
mov
outsl
mov
aaa
mov
jne
cmp
das
mov
int
daa
popf
inc
lods
mov
jle
dec
lahf
sbb
shrl
es
outsb
pop
imul
lcall
enterw
outsl
xchg
xchg
iret
push
inc
jbe
cmc
sub
data16
insb
ss
std
xchg
addl
pop
pop
mov
mov
xchg
push
sub
lea
into
test
adc
imul
xchg
cmp
mov
add
jne
cmp
dec
mov
mov
inc
inc
fmull
sub
mov
enter
pusha
mov
jmp
push
aaa
mov
mov
lods
pop
xchg
cmp
pop
in
pop
mov
pop
mov
push
shlb
movsb
imul
sbb
inc
or
jle
dec
ss
and
jle
mov
inc
jg
inc
mov
mov
js
mov
stos
notb
xchg
fisubs
and
xor
pcmpeqb
jbe
inc
outsb
sar
cltd
xchg
in
outsb
and
cwtl
xchg
xor
into
xchg
ja
ret
shlb
pop
mov
inc
ret
xlat
test
mov
stos
loope
into
sti
fs
xchg
in
in
int
je
mov
add
loop
clc
add
pusha
mov
mov
cmp
aaa
or
fst
cwtl
ss
inc
test
in
scas
fnstsw
movsl
xor
das
inc
cmp
fildl
sub
jp
vmread
lahf
dec
add
les
cmp
scas
in
pop
xor
mov
or
jo
std
cld
bound
leave
int3
rolb
pusha
inc
xchg
jno
in
cltd
jl
and
jg
call
imul
mov
ljmp
pop
jp
subb
scas
pop
push
and
xchg
mov
dec
add
sub
fwait
mov
mov
fisttpl
out
xchg
mov
lahf
dec
arpl
bound
lea
add
inc
push
sub
mov
sub
shlb
pop
pop
push
fcomp
mov
sbb
test
pushf
ds
jecxz
stc
lods
sahf
push
int
scas
notb
shll
dec
addl
jo
jge
lcall
test
mov
adc
fnsave
imul
rcr
lock
insb
insl
addb
hlt
xor
and
xor
jo
and
sbb
push
sbbb
sbb
cmp
mov
sub
imul
jno
xlat
rorb
add
out
mov
pop
xchg
cli
sbb
push
mov
idivb
inc
xchg
inc
jno
clc
imul
sarl
mov
mov
cmp
jnp
mov
cmp
or
mov
lods
jmp
mov
cmp
jg
mov
iret
mov
adc
incl
fcmovnb
jge
sub
inc
lahf
fmul
mov
cmc
and
lea
outsb
aad
dec
sbb
pop
testl
mov
divl
in
aaa
out
test
in
jae
iret
rcll
popa
pop
cltd
out
jecxz
lahf
std
mov
mov
xchg
cwtl
cmpb
push
cld
ret
sti
scas
fcompl
sbb
xlat
outsb
stc
mov
aad
inc
sbb
aas
out
scas
jb
mov
leave
int
movsb
iret
or
mov
cltd
stc
mov
iret
xchg
shrl
inc
jg
pop
and
or
jo
mov
add
hlt
loopne
inc
sti
or
into
ja
in
popf
into
and
push
repz
adc
repz
xchg
mov
cmc
outsl
and
fistl
jle
or
jo
push
std
loope
push
rcl
add
dec
xchg
cmpsl
pop
push
fwait
push
es
cmc
test
add
mov
mov
inc
test
mov
push
fucomi
mov
cmp
imul
jl
jecxz
push
mov
out
inc
xchg
or
jp
mov
jae
jne
outsb
nop
pop
dec
ds
arpl
sub
push
cs
nop
fisttps
inc
xor
fnstenv
xchg
inc
inc
call
jae
ret
cmpsb
jnp
fsubl
mov
insb
jo
scas
cmc
jno
decl
fcmovnbe
add
cmpsl
jg
std
inc
mov
mov
mov
mov
inc
mov
push
mov
fdivrl
sub
pusha
out
leave
or
cmpsb
imul
add
mov
pop
pop
dec
rep
scas
ss
and
mov
sub
addl
faddl
sbb
arpl
out
cmp
inc
rclb
xchg
js
es
jns
jns
mov
sbb
xchg
mov
movsl
call
push
addl
je
ljmp
mov
dec
out
rolb
or
and
cmp
inc
lret
push
mov
xor
push
and
jbe
jmp
mov
icebp
mov
scas
rcl
jns
cmp
repnz
dec
fucomp
jmp
hlt
add
jmp
icebp
popf
cmp
daa
mov
lods
mov
pop
in
cmp
je
mov
jae
lret
iret
and
jmp
cmpsb
cwtl
sbbl
dec
mov
dec
mov
std
dec
xor
jne
iret
repnz
xchg
rol
add
jmp
xchg
cwtl
jle
cmc
daa
adc
bound
sbb
or
jne
pusha
jmp
pop
xchg
sub
cli
sahf
sahf
lahf
testb
test
xchg
sub
cmp
dec
stos
mov
pop
xor
movsl
sub
stos
loop
mov
sahf
and
jb
repz
movsl
mov
and
daa
adc
loopne
loop
cmp
inc
dec
push
adc
testl
mov
push
jl
mov
inc
xor
push
notb
mov
scas
sarl
popa
adc
cmp
xor
jl
fnstenv
xchg
iret
fbld
pop
jp
shlb
mov
or
and
mov
subb
xchg
scas
inc
imul
aaa
imul
rcll
sub
das
shll
cld
aam
sbb
mov
and
xor
ret
pop
mov
mov
int3
fistpll
push
pop
pop
cmp
lods
out
inc
mov
cmpsl
mov
jge
mov
icebp
ljmp
push
xor
add
push
das
jb
mov
movsb
andnps
sub
push
in
pop
jns
test
pusha
test
addb
into
mov
jnp
cmp
add
movsb
daa
xchg
imul
mov
push
mov
mov
jae
sub
out
mov
xor
pop
std
je
movsb
aaa
jnp
add
xchg
sbb
out
rol
aas
cmpl
pop
in
pop
adc
jns
mov
fs
mov
jbe
mov
push
pop
cmp
mov
add
mov
add
mov
testb
adc
mov
push
jnp
pushw
push
lods
adc
div
push
xchg
sub
cld
mov
rol
jne
pop
push
mov
aaa
add
fstpt
fcompl
mov
shrb
cld
mov
pop
sbb
std
fcmovne
movsl
dec
xor
xchg
mov
daa
int
pop
inc
jp
cmp
ss
hlt
mov
outsl
mov
imul
and
push
xchg
fimull
outsl
enter
mov
pop
das
pop
sub
inc
into
add
xchg
stos
mov
adcb
cltd
push
mov
inc
dec
js
inc
insl
jae
jl
pop
sahf
out
pop
jno
cmpsb
xor
test
mov
sub
mov
test
mov
repz
inc
lret
or
cli
add
fwait
push
popl
push
xor
in
pop
pushf
and
lahf
ret
or
in
pop
out
jnp
pusha
out
xchg
aas
je
cmpsb
jl
mov
addr16
in
push
mov
icebp
les
dec
fwait
fwait
push
lcall
pop
adc
xor
mov
lea
inc
sub
cmp
shl
xchg
enter
test
jo
push
fs
leave
push
inc
imul
fisttpll
popa
in
arpl
pop
cmp
xor
pushf
out
xchg
ret
sub
subl
mov
leave
adc
test
xchg
pop
mov
imul
cmp
roll
pop
pop
sbb
rorl
je
and
mov
cmc
cmc
test
loope
xor
xchg
jbe
mov
push
xchg
js
xor
xchg
in
lahf
xor
sbb
pop
js
movsb
sub
sar
lds
pop
mov
sbb
dec
nop
jns
sti
sarb
lods
es
pop
lds
adc
pusha
rcr
fstpt
mov
push
sub
push
addr16
je
lcall
es
dec
mov
out
or
fcompl
rcrl
pop
cli
fstps
dec
in
lods
or
mov
lret
outsb
fucomi
out
cltd
xor
sub
jnp
sbb
and
pop
xor
pushf
inc
pop
test
repnz
mov
ja
mov
stos
push
fidivrl
xor
add
sub
mov
and
rcll
in
pusha
mov
ljmp
adc
icebp
add
lcall
pop
jo
mov
gs
mov
pushf
sub
xchg
pop
mov
adc
dec
js
sbb
movsb
pop
fstps
xchg
sbb
push
lea
jecxz
iret
mov
je
or
fstps
je
shlb
sbb
outsb
jns
in
out
cwtl
sarl
push
dec
pushf
test
or
push
inc
push
dec
lds
mov
cmp
or
sbb
xchg
mov
into
outsb
mov
in
iret
or
imul
mov
ficoms
pop
jns
out
mov
mov
and
test
arpl
fldl
xchg
pop
movsl
das
jg
pop
push
xchg
shrl
mov
sub
lods
ds
aad
and
adc
std
inc
shr
cmpsb
cmpsb
mov
mov
clc
cmpsb
pop
cmpsb
inc
pushf
adc
and
jns
movsb
ljmp
mov
lods
jle
ljmp
cmpb
cwtl
add
dec
arpl
pop
or
push
inc
push
scas
idivl
or
test
sbb
gs
test
inc
add
inc
idivl
xor
iret
and
rorl
mov
js
add
inc
cwtl
enter
cli
scas
fcoms
int3
fs
jo
test
inc
ret
daa
insl
and
and
fs
adc
fs
jnp
gs
jne
daa
int
andl
sbb
jne
xchg
data16
inc
lret
mov
add
and
and
cmc
test
push
inc
cmp
or
sahf
sahf
adc
xlat
in
cltd
pop
pop
out
adc
push
loop
xchg
sub
lcall
dec
ljmp
out
fwait
mov
sahf
and
rcr
or
mov
xchg
int
imul
inc
sbb
and
sbbl
xchg
jns
push
mov
outsl
dec
mov
sbb
adc
sub
add
inc
xchg
cld
dec
mov
jl
jns
xchg
fbld
pop
popf
dec
and
shlb
cmp
mov
sub
stos
cld
out
mov
push
push
test
mov
mov
mov
push
push
mov
mov
sub
dec
test
pop
movsb
cmpsb
stc
mov
js
aam
mov
jp
jns
sbb
cmp
cli
inc
adc
iret
or
jae
sub
pusha
pop
xchg
clc
cmc
push
mov
inc
sti
pop
cmp
jmp
aaa
push
jns
sbb
int
sbb
stos
jp
push
or
test
test
or
xor
in
sub
dec
inc
adc
repnz
mov
sahf
pop
adcb
fisubrs
stos
dec
cltd
js
pop
iret
dec
or
popa
mov
mov
mov
cmp
jecxz
and
mov
jno
fstps
fldenv
pop
jecxz
xchg
cmp
repz
out
or
adc
mov
pop
pop
adc
cltd
sub
clc
inc
clc
sti
xchg
imul
pop
test
in
movb
adc
push
adc
jbe
sbb
std
cli
and
fisubs
pop
xchg
out
iret
dec
lret
hlt
push
cmp
test
jmp
pop
aad
decb
jle
cltd
push
mov
call
and
pusha
or
fsubrs
cmp
stos
popa
jle
lret
mov
dec
pop
pusha
ljmp
ficoms
repz
out
xchg
clc
adc
push
test
jbe
sti
into
jo
hlt
xor
rsqrtps
sub
mov
test
js
cmpsl
scas
xchg
xchg
insb
fs
ja
pop
shrb
xlat
push
pop
sub
out
jnp
les
fisubs
ds
hlt
mov
lock
jo
sbb
push
inc
popa
jo
sbb
xor
xor
or
sbb
out
aas
pop
call
ja
cmp
mov
xor
std
popf
jp
in
movsl
lahf
jmp
sar
cmc
adc
mov
xor
xchg
pop
push
jle
lret
outsl
fwait
shrl
idivb
add
bnd
cmpsb
mov
scas
insl
fisttpl
and
inc
dec
cs
or
xor
iret
jmp
test
jp
mov
addr16
ds
xorb
sbb
fiaddl
push
pushf
call
mov
cli
loopne
mov
xchg
xor
or
add
mov
jmp
pop
movsb
insl
cwtl
gs
adcb
fnstsw
dec
call
imul
push
adc
or
mov
dec
dec
repz
xor
fiadds
fucomip
fcom
inc
mov
lcall
clc
dec
dec
cmc
push
pop
hlt
jno
fwait
repnz
add
mov
call
test
dec
fildl
ss
inc
test
or
mov
cs
lret
popa
mov
call
adc
shr
and
stos
adc
shlb
mov
shrb
cmpsb
inc
or
test
ret
shlb
dec
lea
lods
push
dec
lret
push
mov
pop
cmpsb
lds
mov
pop
nop
dec
inc
andl
arpl
mov
sbb
in
and
xor
cmp
push
cmpsb
ljmp
ret
add
shlb
inc
fwait
fs
dec
lods
out
lret
xor
test
inc
jge
rcl
lea
mov
cmp
ficoml
jl
clc
fwait
testb
insb
repz
fnstcw
ss
fwait
imul
inc
imul
sub
mov
mov
ja
jne
mov
mov
push
mov
ds
out
sub
in
mov
test
iret
xchg
movl
lods
sbb
xchg
jbe
cmp
add
jmp
and
push
pop
test
push
mov
fiadds
pop
test
call
int3
xorb
mov
pop
sub
mov
fwait
addr16
xlat
xchg
sub
into
jb
cmp
mov
dec
imul
jno
dec
inc
push
mov
adc
mov
mov
jno
pop
fbld
xchg
inc
pop
inc
sub
test
pop
and
and
pop
adc
stos
xchg
int3
mov
gs
push
mov
lret
out
mov
ret
dec
pop
ja
dec
pop
iret
cmc
sbb
sub
dec
lret
cltd
push
clc
fcomp
xchg
push
push
xor
xchg
repz
mov
mov
jno
pop
mov
hlt
int3
jecxz
adc
test
mov
loope
push
mov
jns
add
jle
rcl
call
xor
mov
xor
cmp
ja
inc
sete
sbbl
leavew
insl
int
push
xorl
push
fbld
jne
jnp
pop
xchg
jne
cltd
stc
push
add
add
adc
cli
scas
inc
inc
adc
push
sbb
push
mov
fs
push
lock
mov
sbb
jl
subb
dec
mov
in
iret
mov
call
cmpl
das
sub
sub
lods
xor
outsb
pop
outsl
les
jmp
aad
pop
jecxz
and
fidivrs
pushf
lret
gs
adc
addr16
sbb
and
or
ja
cmpb
lahf
in
in
mov
mov
push
mov
jmp
dec
outsl
adc
push
jne
and
test
add
int3
add
lcall
shrl
xor
mov
iret
fisubrs
testb
and
cli
and
dec
inc
insl
mov
call
push
or
cli
or
xor
jns
cmpsl
or
mov
jecxz
insb
push
cmp
push
xor
cmp
cmp
arpl
sbb
aam
shlb
jle
movsb
pop
bound
push
push
out
dec
jecxz
cs
adc
pop
jge
pop
hlt
test
imul
test
mov
hlt
test
or
addr16
sub
mov
mov
mov
daa
leave
vpaddq
fisubl
xlat
mull
ljmp
dec
ret
add
jo
out
mov
negl
insb
jno
xchg
cmp
jne
mov
repz
cltd
mov
fdivrl
out
inc
pop
xchg
jbe
fucom
mov
jp
lret
mov
cld
repz
ljmp
std
or
mov
xchg
ljmp
sub
outsl
or
sar
mov
pop
push
mov
inc
push
inc
into
push
aam
pop
adc
inc
out
push
cmpsb
jnp
jl
jmp
data16
stos
das
xchg
sbb
add
sbb
pop
dec
inc
push
inc
leave
in
aas
jbe
insl
add
popa
xchg
into
adc
and
adc
fcomps
outsb
xor
push
push
dec
sbb
xchg
xchg
rcll
fwait
ja
sbb
push
popa
loop
add
dec
test
inc
mov
in
orl
int
sti
pandn
or
cmp
pop
push
out
pop
popf
mov
jle
jmp
and
ljmp
jb
mov
adc
pop
add
mov
mov
xchg
jge
hlt
insl
ror
mov
pop
popa
or
cmc
mov
mov
scas
pop
data16
int
and
mov
imul
inc
mov
and
jnp
mov
xorl
pop
insb
jne
loop
xchg
lret
push
mov
pop
ja
pusha
adc
inc
jb
lcall
or
jnp
mov
dec
in
xchg
outsl
pop
ror
xchg
pushf
mov
push
cwtl
pop
lret
sbb
lea
push
dec
rorl
and
push
push
gs
mov
in
out
test
outsl
loope
and
add
call
jp
push
pop
pop
cltd
xchg
or
test
in
popf
stc
mov
test
sbb
pushf
outsl
mov
lahf
add
lea
mov
adc
mov
pushf
lss
cmp
insb
cmp
aad
pop
or
push
out
je
lahf
xchg
pop
int
call
ljmp
incl
in
pop
push
imul
hlt
loope
sti
or
add
cli
or
cld
out
xor
push
adc
cmpsb
mov
ret
das
pop
js
shr
mov
or
lcall
adc
push
and
or
xchg
sub
mov
insb
mov
enter
xor
sub
cmp
mov
sbb
mov
andb
xor
loop
lret
mov
push
shlb
add
enter
add
data16
fidivrs
mov
out
loop
sahf
jl
pop
fstpl
sub
scas
adc
loopne
xor
lret
in
jbe
dec
jno
stos
ret
pop
orl
adc
sub
dec
push
addb
jmp
in
lea
cmpl
dec
adc
jbe
repnz
mov
cmp
int3
dec
mov
sbb
dec
jbe
jge
sub
mov
cmp
inc
xchg
rorl
rclb
repnz
mov
in
mov
enter
mov
adc
sub
ljmp
js
xchg
cmp
jg
daa
out
je
das
xchg
adc
mov
sub
mov
sub
adc
mov
movsb
repnz
roll
ljmp
jl
stos
lock
jecxz
mov
popf
and
xorb
testb
inc
inc
scas
lcall
fiadds
int
mov
pop
push
test
lods
rol
jbe
dec
cwtl
jbe
shld
push
mov
push
les
mov
in
xchg
mov
out
and
and
and
int3
sbb
push
jg
mov
cmpb
mov
call
pop
fwait
popa
enter
imul
pop
mov
imul
sahf
cmp
outsl
mov
lds
adc
xor
pusha
sub
lahf
into
inc
in
lret
push
dec
test
lods
inc
mov
mov
sub
lock
xchg
lea
fnstsw
ss
jo
ja
mov
repz
loop
push
pmullw
inc
lea
cmp
sub
ljmp
ret
fsts
int3
sti
inc
dec
popf
or
jl
add
lock
pusha
addl
add
repnz
cs
add
dec
fiaddl
inc
or
lods
add
test
movsl
jl
out
pusha
sahf
movsl
nop
mov
add
sbb
push
loop
cli
xchg
jmp
mov
push
stos
xchg
fisubrs
adc
gs
mov
test
push
pop
leave
addr16
mov
xchg
call
mov
testl
ret
cltd
xchg
cmp
loopne
or
inc
or
pop
push
fdivrs
mov
fistpll
cmp
jecxz
mov
in
xchg
fisttpl
xchg
cltd
push
xchg
pop
rcrb
lahf
or
cwtl
or
push
cld
fwait
sub
push
sub
ret
xor
jle
xlat
and
sbb
add
and
xor
push
aas
nop
js
push
pop
int3
jp
sub
mov
cltd
sub
int
xchg
xchg
adc
mov
xacquire
sahf
enter
jmp
or
pop
out
inc
and
popa
pop
sbb
outsb
adc
cs
movsb
je
jno
sub
mov
in
imul
lods
push
mov
bound
nop
sbb
pop
dec
ret
test
and
addr16
jne
ljmp
jns,pt
shr
ljmp
nop
and
mov
jnp
in
shl
dec
add
aam
pop
mov
jno
mov
xor
and
das
out
lret
xor
jne
xor
push
adc
add
and
es
adc
sbb
push
mov
add
daa
sub
stos
popf
aam
call
ds
adc
xchg
in
movsl
push
rorb
push
out
mov
adcb
jbe
mov
lret
jbe
fcomip
pop
outsl
les
bound
xor
lods
sbb
pop
arpl
out
pushf
movsl
pusha
hlt
or
xor
and
subb
les
jns
jmp
aaa
cmpsl
vmovq
out
pop
test
repz
imul
xor
lock
repnz
lds
jae
into
ret
sbb
stos
scas
inc
mov
mul
jmp
xor
or
xor
mov
add
jnp
roll
jge
xor
sar
adc
jno
xor
and
clc
movsl
adc
sahf
rorl
daa
int
xor
fstpt
aam
xor
enter
dec
mov
xchg
and
mov
dec
xor
push
mov
test
andl
movd
mov
out
cmc
imul
clc
xor
mov
xor
fsubl
inc
xchg
sub
sbbb
lea
mov
push
adc
cltd
scas
add
dec
pop
fstpt
mov
cmpsl
out
sbb
aam
add
rolb
sbb
neg
cmp
int
loop
mov
and
in
or
dec
mov
xor
mov
push
int
sbb
adc
mov
cld
lret
ljmp
cli
bound
popa
mov
push
bnd
cli
ror
xchg
gs
out
push
shr
icebp
mov
psubusb
mov
push
add
sub
dec
inc
add
push
insb
shrb
add
roll
sbb
popf
xor
xor
sub
push
je
movsl
subl
push
bound
jle
mov
mov
pop
mov
das
shlb
mull
sub
mov
mov
and
push
fisttpll
arpl
push
jmp
adc
leave
adc
js
arpl
sub
cld
out
notb
fstpt
cmp
lods
cltd
or
popa
rcrb
cmp
and
mov
mov
jl
fs
cwtl
cli
adc
insl
xor
out
in
leave
mov
test
adc
rol
jmp
hlt
cmp
cmp
jle
cmp
call
inc
call
je
jmp
push
imul
xlat
inc
inc
pushf
rol
inc
subl
cmp
dec
sbb
popf
or
inc
push
sarl
pop
inc
pop
stc
inc
sub
shlb
into
push
leave
cmp
mov
cmp
and
orb
lea
xor
cmp
push
pop
fadds
std
jnp
xchg
leave
pop
dec
sub
lret
frstpm(287
inc
push
repnz
test
xchg
or
adc
jbe
iret
outsb
mov
ret
add
and
push
div
jl
aad
xor
rclb
sub
pop
fstpt
xchg
jo
mov
adc
mov
sbb
in
push
gs
iret
jne
test
xor
subb
sbb
inc
dec
jo
mov
ljmp
out
add
into
lea
cmp
outsl
mov
je
aam
lcall
and
mov
pop
jns
popf
outsb
mov
lcall
clc
fldcw
popa
rorb
outsb
and
sahf
sarb
je
inc
imul
push
sahf
cmpsl
xchg
xor
pop
loopne
sbb
movsl
fnsave
pushf
icebp
mov
lods
or
sbb
mov
sub
mov
gs
push
repz
call
xchg
imul
sarb
or
in
jbe
pop
mov
cli
iret
scas
iret
mov
and
pop
aad
rorb
lret
push
dec
mov
mov
xor
dec
stc
loop
ret
mov
and
lods
xchg
adc
nop
out
push
dec
inc
ds
lret
sarl
sub
pusha
jle
sub
fisubrs
imul
mov
lds
jnp
test
mov
insb
ret
cmpsl
js
shll
or
inc
mov
dec
lock
sbb
xchg
jnp
ds
and
push
pop
inc
lea
or
sbb
push
hlt
cmpsb
adc
xor
or
aaa
push
mov
dec
lds
cmpsb
andl
js
dec
pop
adc
push
xor
push
xor
std
jo
mov
dec
or
mov
arpl
xchg
stos
push
inc
test
pop
addr16
cmp
mov
xor
cmp
push
cltd
subl
push
out
outsb
push
cwtl
jl
adc
cmp
stc
push
outsl
mov
cmp
or
gs
jne
cs
aad
pop
aam
shlb
pop
sahf
xor
fdivl
inc
dec
and
mov
cmp
decb
lahf
sbb
adc
xor
push
xchg
mov
xchg
sti
repz
in
and
rcrb
fmuls
xchg
ror
sbb
adcl
jl
cld
jbe
lret
in
les
scas
rcrl
shl
jmp
popa
sub
push
pop
dec
pusha
ds
jb
imul
xchg
and
addr16
add
cmpsb
orl
jo
sub
or
inc
es
or
mov
int3
fdivrl
adc
out
pop
push
mov
int
inc
jmp
push
into
push
pop
adc
jns
stc
dec
iret
pusha
jb
inc
je
push
mov
subl
xlat
jne
xchg
sahf
push
sbb
les
mov
pop
test
inc
aad
ret
add
xchg
scas
ret
shlb
adc
data16
xchg
sti
fs
mov
push
sub
popf
rcrl
cmp
dec
js
add
inc
gs
mov
xor
movsb
andl
push
cwtl
mov
ja
loope
fwait
cli
mov
jmp
ljmp
in
mov
mov
shrl
pop
jnp
mov
xor
push
out
lahf
lcall
lret
movsb
ds
cmpsl
and
push
or
jl
cmp
fidivrs
cmp
lcall
jnp
es
sub
jo
and
addb
jne
lea
pshufw
out
daa
enter
and
xchg
into
lds
pop
ja,pn
cmp
jae
nop
fldt
xchg
xlat
shrl
jle
mov
test
mov
push
frstor
pop
mov
mov
jb
lret
roll
adc
dec
aas
inc
test
xchg
mov
xor
cwtl
mov
pop
movb
mov
test
in
cmp
enter
leave
xor
movl
inc
xor
clc
pop
mov
jmp
jns
stos
int
dec
imul
push
push
push
lcall
movb
aad
jp,pn
xchg
push
mov
mov
jo
jmp
pop
pop
xor
push
out
sub
ficoms
movsb
inc
arpl
arpl
pop
mov
adc
pop
dec
hlt
push
les
inc
pop
push
dec
pop
das
into
lahf
dec
jp
and
or
add
push
mov
add
mov
lahf
fst
and
das
gs
popf
sub
push
xorl
add
bnd
pop
addr16
push
lret
ds
insl
and
jecxz
fldt
ljmp
dec
in
mov
add
push
lcall
xor
inc
xor
aad
lods
movsb
sti
jmp
xor
or
movsb
enter
pop
cmp
lods
cmc
jecxz
stos
ss
jge
mov
and
inc
pop
roll
insb
xchg
mov
xchg
mov
mov
les
mov
inc
cli
adc
inc
pop
cmpl
repnz
sbb
push
nop
loope
push
jmp
in
fs
cld
iret
inc
out
mov
xor
repz
xorb
xor
lret
addl
lret
mov
pop
pusha
jge
mov
pop
xor
sbb
sbb
jge
push
fistl
push
popa
lret
cmpsb
xlat
shl
xor
int
fimuls
sbb
mov
push
adc
call
icebp
mov
repz
test
loope
out
addr16
xor
adc
pop
push
mov
shrl
push
lea
hlt
test
repnz
pop
out
call
xorl
enter
scas
add
mov
or
ljmp
mov
aaa
mov
xchg
in
mov
push
mov
jmp
push
icebp
outsb
jae
test
lea
mov
repnz
lcall
xor
in
ds
sbb
and
in
cmp
inc
jo
out
push
push
sbb
dec
jecxz
mull
lds
mov
xchg
inc
pop
push
andl
cwtl
adc
cmpsb
dec
sub
mov
sarl
rorl
out
jnp
nop
repz
sti
hlt
call
popf
fstpt
jmp
push
dec
pop
add
pop
cmp
inc
rorb
jb
jbe
arpl
mov
stos
xor
or
xchg
call
xor
jnp
aas
daa
jg
mov
jo
sarl
aad
loop
push
push
mov
inc
push
mov
inc
cmp
mov
xor
mov
mov
popl
pop
hlt
lods
ss
and
pushf
push
in
xchg
push
sahf
and
inc
cmp
in
xchg
stos
adc
shlb
mov
xchg
add
adc
add
loope
imul
cmp
mov
mov
test
icebp
inc
mov
subl
clc
in
fbstp
fldcw
and
add
pop
out
jl
mov
sub
cmp
mov
ds
push
in
sub
out
fdivs
xlat
lds
jge
lods
sbb
inc
add
pop
daa
jns
loop
add
sub
enter
jno
add
mov
and
jmp
cmp
fiaddl
sub
xchg
stos
mov
jae
andl
aam
out
sbb
sbb
xor
mov
push
mov
inc
cmp
sub
pop
pop
int3
lcall
add
jnp
pop
imul
push
daa
and
repnz
mov
cld
fcomps
movsb
jo
xchg
sub
inc
outsl
repz
pop
int3
mov
movups
in
and
cld
mov
xchg
pop
xor
imul
daa
or
scas
push
cld
nop
inc
cmpsb
fdivr
or
xchg
mov
pop
sahf
mov
lret
mov
movl
xor
je
roll
sbb
imul
adc
aaa
cmp
mov
cld
scas
dec
fstl
loope
out
sub
fwait
xor
stc
xchg
jbe
sbb
stos
nop
jp
mull
dec
lock
cs
lods
mov
pop
inc
inc
ret
jmp
fiadds
cmp
das
xrelease
and
or
cmp
xor
pop
and
mov
jle
aad
cmpsb
repnz
push
icebp
fdiv
imul
xchg
fcmovnbe
es
lret
xor
addr16
inc
xor
mov
cli
sbb
mov
jb
add
mov
inc
loope
leave
scas
rcrb
in
fsubrl
outsl
xor
xor
ds
sti
sub
jmp
ja
fsub
sbb
pop
jle
and
jae
lcall
add
push
popf
test
cmpl
movsb
sub
xchg
adcl
cmp
out
imul
add
lods
data16
cmp
flds
mov
push
in
dec
add
xlat
sbb
and
cmpsb
mov
in
pop
lock
cmpsb
inc
mov
xchg
sti
sub
push
js
sub
test
loop
lods
lds
jbe
xchg
pop
stos
jmp
rcrb
pop
js
adc
pop
pop
cli
in
sub
sti
push
lret
je
inc
push
lret
adc
test
ja
sbb
rcrb
cmpsb
fcmovb
mov
out
insb
jmp
scas
mov
rcrb
stc
rcl
inc
pop
inc
shr
aad
arpl
out
cmc
or
add
inc
movsb
push
into
and
and
lcall
mov
in
mov
enter
cld
sbb
popf
lds
sub
aam
jo
je
jns
xchg
scas
mull
or
test
jns
lods
cs
xor
pop
mov
iret
sub
into
pop
adc
pop
mov
jecxz
daa
xchg
icebp
insl
lods
cld
jae
sub
test
mov
jns
les
icebp
repnz
dec
add
xor
jns
divb
negl
loopne
or
or
jnp
rcr
jb
in
lods
test
mov
pop
push
pop
loop
pop
bound
cltd
sbb
decl
or
xchg
test
and
mov
pop
mov
shrb
xor
adc
cld
popfw
or
sub
push
ss
mov
sub
pop
fwait
xlat
sbb
jo
xchg
enter
push
mov
outsb
xchg
hlt
mov
jmp
icebp
movsb
call
xor
and
jl
clc
cmc
pop
dec
jmp
push
test
push
adc
pop
out
jp
fsubr
lret
aad
clc
jns
push
aas
scas
jp
push
xchg
mov
pop
push
sbb
out
jmp
dec
mov
clc
scas
fnstsw
stc
adc
sub
xchg
mov
scas
scas
testl
sbb
into
popf
xchg
pop
in
rclb
jl
adc
xchg
adc
lcall
inc
insb
jae
aam
ds
fcomps
shll
push
jp
aam
dec
mov
jle
and
jne
pop
out
cmp
fimuls
bound
sbb
xor
ljmp
pop
insb
aaa
mov
mov
cmp
idiv
add
jmp
popa
iret
mov
xor
cmp
rclb
or
stc
sub
push
sbb
pop
lret
mov
pop
adc
sub
repz
loop
ljmp
sub
aad
mov
jp
addr16
xor
out
jbe
adc
mov
scas
xor
pop
es
leave
sub
xchg
xchg
lods
sbb
adc
loop
inc
and
jp
lret
adc
sbb
rol
les
push
jnp
sti
mov
rsqrtps
stos
add
mov
mov
cmpsl
outsb
and
test
dec
pmaddwd
inc
fldpi
lock
mov
outsl
jae
bnd
adc
xchg
jb
xchg
clc
jge
xchg
jecxz
pop
into
jmp
push
les
lcall
std
lods
and
pop
pop
and
inc
repz
stos
pandn
jae
mov
sbb
dec
insb
add
xlat
inc
daa
inc
stc
fwait
dec
and
sbb
cmc
inc
xor
inc
sbb
int
lods
adc
inc
enter
fucom
xchg
data16
pop
cmp
and
cmp
dec
bound
or
or
jecxz
fnstenv
fmul
xor
sbb
cmp
out
mov
test
sub
mov
aam
mov
pop
ficoms
push
pop
or
or
xchg
mov
sbb
fwait
ret
or
aas
push
lret
repnz
xor
add
inc
scas
pop
dec
push
addr16
stos
pop
loop
mov
in
adc
dec
icebp
add
cmp
mov
repnz
jle
roll
fs
and
out
mov
inc
fadd
daa
inc
iret
sub
push
sub
mov
in
or
jmp
movb
adc
mov
jns
mov
outsl
add
inc
inc
push
int3
add
orl
scas
gs
es
inc
mov
lcall
pop
push
rcrl
adc
jae
mov
adc
movsl
fstpl
sbb
adc
sub
sub
cld
scas
cmpl
movsl
jmp
loope
jg
or
es
xchg
add
and
jge
in
lea
or
hlt
xor
std
aad
xor
das
xchg
dec
mov
test
cmc
out
pop
movsl
mulb
and
inc
test
jmp
adc
mov
cmp
sbb
fimuls
push
call
repnz
mov
pop
cmc
pop
sbb
pop
and
and
add
push
loope
inc
pop
dec
and
adc
adc
test
cmc
bound
lods
mov
cltd
inc
push
divl
pop
ja
fcmovne
insl
cmp
hlt
bnd
dec
jl
leave
lcall
xchg
ret
or
popf
ds
mov
mov
test
ljmp
fnstsw
xor
bound
sub
xbeginw
inc
sti
mov
mov
cmp
cmc
and
mov
add
pusha
dec
push
call
xor
inc
push
jecxz
pop
or
push
mov
or
je
fsubr
xlat
lret
cmp
icebp
jge
sub
insb
cmpsb
xchg
addb
inc
xchg
sarl
inc
popl
roll
das
mov
mov
adc
addr16
call
inc
mov
jg
aaa
push
fadds
jno
sbb
roll
rclb
sub
es
daa
push
out
dec
iret
insb
fbstp
fadd
mov
js
cli
jb
sub
jl
add
stos
jno
fcmovnb
mov
sub
out
jle
and
or
sbb
and
push
mov
jg
mov
out
and
mov
int3
out
jle
sub
shrb
mov
in
push
xor
and
mov
arpl
xor
hlt
lods
inc
sbb
adc
ss
addr16
repnz
inc
popf
sub
insb
adc
jmp
es
jl,pt
lcall
pusha
sbb
cli
bound
divb
mov
mov
mov
ss
out
pop
add
jo
repz
adc
ficomps
add
std
jmp
hlt
mov
xchg
or
adc
and
push
add
in
jns
sub
dec
bound
scas
das
push
movsl
and
les
sub
push
pop
cmc
sub
sub
jae
dec
or
adc
fcmovbe
sbb
inc
push
xchg
fiaddl
in
stc
fxch
dec
inc
cld
or
cmp
pusha
lcall
nop
dec
fmuls
sti
lcall
push
sub
mov
adc
andb
jno
or
xor
cmp
test
add
popf
push
mov
xchg
jno
mov
out
sbb
or
repnz
sbb
lds
xchg
mov
arpl
lock
inc
js
test
inc
sbb
xchg
fldl
mov
les
lahf
push
mov
and
aas
lock
mov
test
lret
mov
popa
jecxz
cli
sbb
mov
inc
jg
xor
xchg
push
push
clc
mov
sbb
or
jne
or
and
adc
dec
aam
mov
xchg
lea
lods
hlt
add
rcl
push
dec
sarl
inc
ljmp
add
je
aas
xchg
aad
push
cs
clc
cltd
out
mov
test
mov
sbbb
dec
ret
xchg
fwait
pop
popf
inc
or
inc
mov
arpl
insb
and
push
push
jbe,pt
fcom
sti
sbb
iret
mov
bound
scas
stos
stos
stos
fildll
xchg
xchg
mov
add
or
test
cmpsb
call
sti
cmp
mov
popf
cmp
andl
jne
subb
sbb
sub
jo
inc
out
sbb
pop
test
push
sub
aaa
outsl
jno
adc
push
sbb
gs
jp
negl
push
hlt
mov
inc
cmp
mov
mov
mov
pop
cltd
test
xchg
arpl
lret
loope
jmp
cmpsb
xor
push
adcl
or
das
mov
repnz
arpl
fistps
xchg
ret
push
jo
cmp
inc
and
ss
dec
pop
sbb
lds
cmp
stos
and
arpl
inc
iret
and
inc
xlat
mov
cmpsl
lret
mov
push
push
into
fsubr
bound
rcrb
jae
pop
pop
dec
sub
xor
adc
or
fnstsw
mov
sbb
mov
out
les
pop
repnz
mov
cmp
insb
xchg
mov
test
frstpm(287
cltd
or
dec
cwtl
xchg
mov
sbb
adc
xchg
jecxz
stc
inc
add
cmp
out
mov
inc
lret
icebp
ficoml
insb
call
ret
adc
and
rclb
scas
inc
lahf
cmp
xor
inc
mov
fisttps
or
or
xchg
pop
aaa
xor
mov
xor
pop
insb
and
bound
imul
lods
xchg
outsb
add
adc
pop
std
shrb
pop
dec
push
int
push
jmp
out
inc
lea
inc
or
inc
or
push
inc
ja
mov
pop
mov
inc
cmpsl
mov
push
jns
scas
shl
shlb
or
add
in
xchg
lods
in
ljmp
push
ss
into
pusha
cltd
sti
test
push
mov
jle
dec
js
mov
mov
jnp
jp
cmpsl
imul
insl
dec
call
hlt
mov
xchg
nop
orb
in
js
mov
mov
js
mov
push
aas
sub
shrb
mov
test
iret
add
dec
lock
call
or
cli
test
inc
imul
cmp
add
insb
dec
mov
push
mov
dec
les
fwait
cmp
xor
and
pop
filds
popf
add
inc
int
lret
nop
add
lock
xor
mov
test
mov
in
jnp
push
mov
xor
call
call
ret
mov
or
sub
fs
gs
or
das
in
adc
push
pop
testb
lock
stos
data16
pop
mov
xchg
pop
std
xchg
xchg
dec
std
mov
je
pop
into
fnstsw
imul
lods
mov
pop
js
insb
mov
mov
mov
and
xchg
mov
nop
and
dec
cmpsb
fiaddl
adc
push
inc
pop
sub
jb
shll
movq
ss
cmpsb
les
movsb
pusha
adc
mov
or
inc
das
fldt
push
cmp
or
sbb
lock
fidivl
je
cmp
cwtl
mov
inc
xchg
mov
mov
and
jo
push
sub
rcrb
out
in
pop
dec
adc
cmp
fs
push
rclb
add
mov
test
loop
jns
rcrl
mov
jmp
xorl
and
imul
int
mov
insb
shll
jo
pop
cwtl
lret
xchg
out
ljmp
mov
xor
aaa
cmp
lods
adc
lcall
leave
sub
cmpl
pop
rcl
sub
cltd
mov
cmp
or
adc
je
jle
and
push
mov
mov
js
or
scas
or
flds
fists
mov
add
add
mov
aam
mov
pop
fstps
cmpsb
xor
push
xor
in
test
sub
out
pusha
sbb
test
or
outsb
rorb
sub
stos
push
mov
sbb
neg
icebp
lds
jbe
leave
mov
jb
ljmp
out
or
sub
dec
add
adcl
push
and
lods
add
jle
jle
push
inc
mov
out
mov
mov
push
push
pop
dec
xchg
pop
and
cmp
add
cmpsb
addb
pop
push
or
pop
push
jl
frstor
xchg
mov
enter
and
and
jbe
inc
sti
loopne
adc
xor
sahf
cmp
cmpsl
jno
insb
add
daa
xor
test
sbb
xor
sahf
jmp
jmp
inc
dec
insb
mov
xor
lea
dec
mov
pop
jg
movl
insb
jmp
xchg
pop
or
cmp
ss
mov
inc
add
hlt
or
xchg
lret
cmp
mulb
ret
out
xor
dec
xor
xchg
adc
cmp
fisubrl
test
sbb
mov
cmp
outsb
ss
lret
or
flds
dec
inc
and
xlat
mov
add
fldenv
lods
enter
or
sarb
gs
stos
pop
xchg
and
inc
sub
addr16
push
sti
pop
xor
xchg
scas
mov
xchg
mov
cmp
jbe
ss
imul
outsb
jecxz
xlat
cwtl
xor
out
sub
loop
shll
popa
or
push
imull
nop
icebp
inc
xor
mov
clc
cmp
add
xchg
pop
add
sbb
pop
pop
int3
lahf
inc
inc
pushf
mov
pushf
push
xchg
push
push
push
sub
and
cmc
cld
cmpb
add
xor
inc
daa
iret
add
inc
dec
sub
fdivr
mov
scas
push
mov
lcall
ss
popa
hlt
ds
pop
inc
fsts
scas
dec
sub
mov
dec
nop
adc
and
mov
jae
mov
jae
cmp
sub
out
xchg
mov
fs
adc
jl
mov
and
fwait
mov
clc
cmp
sub
or
in
jns
adc
pop
mov
in
aam
aam
mov
cld
nop
sbb
loop
das
xchg
stc
mov
test
jmp
jmp
bound
imul
inc
daa
pop
xor
movsl
scas
shll
cmc
inc
repz
or
es
add
or
outsb
ds
push
gs
lea
mov
and
enter
inc
mov
addb
push
push
dec
xchg
in
jecxz
sub
pop
cmc
stos
mov
cli
and
lcall
mov
and
mov
cmp
subb
leave
add
lds
cld
or
jecxz
mov
scas
jge
sar
mov
mov
cmc
insb
fnclex
sub
mov
in
icebp
or
inc
mov
lock
sahf
mov
mov
sub
xchg
inc
mov
cmp
pop
or
sbb
xor
out
test
scas
push
inc
sub
add
fisttpl
push
add
mov
xchg
int
loope
int3
jnp
lods
push
adc
scas
push
inc
xchg
inc
push
cwtl
add
or
sub
sub
jmp
push
les
mulb
xchg
iret
pop
adc
or
cmp
test
imul
sahf
pop
xor
or
js
and
inc
aam
xchg
jnp
sub
dec
mov
sbb
rol
mov
adc
imul
cmp
sub
hlt
cmpsb
xchg
cmp
inc
jne
pop
mov
pop
pop
movsl
movsb
jne
dec
test
clc
mov
add
mov
scas
insb
push
mov
sub
jne
jae
jno
xchg
mov
js
xchg
test
inc
test
lock
scas
mov
pop
add
cmp
into
mov
mov
cmc
and
outsl
or
push
inc
sahf
icebp
enter
jle
push
lods
pop
adc
cmpb
stos
ja
dec
dec
test
mov
lea
and
dec
mov
dec
test
jae
fdivrs
push
push
dec
and
dec
out
in
pop
fiadds
aam
cmp
mov
inc
leave
ja
cmp
shl
adc
xor
mov
outsb
dec
out
lock
or
aas
sbb
mov
cmp
imul
push
jae
xchg
nop
movsb
or
mov
adc
mov
jmp
shll
mov
dec
rcll
push
loope
and
dec
shr
xor
add
pop
jmp
loopne
xor
fdivs
lret
imul
bound
inc
lahf
pop
loop
inc
test
mov
xor
loope
inc
pop
and
ljmp
std
es
sub
sbb
add
in
pop
nop
mov
in
lcall
mov
xchg
pop
out
jle
bound
cmp
sbb
out
ljmp
inc
mov
and
xchg
sub
xchg
jecxz
test
aad
stc
mov
sub
cmp
gs
std
push
loope
out
mov
mov
mov
or
xchg
mov
cs
xchg
ds
mov
pop
push
mov
sub
bound
and
push
call
push
pusha
lods
out
lods
jns
stos
or
fwait
sub
or
inc
and
outsb
cmp
inc
inc
jno
leave
orb
and
add
pushf
dec
cs
test
sub
lock
or
daa
ficomps
push
out
pmulhw
cmc
dec
in
lods
or
inc
hlt
lret
mov
test
bound
add
repz
out
jg
xchg
jo
mov
mov
mov
stc
popa
inc
std
jg
mov
je
xchg
mov
xchg
insb
lret
pop
mov
sub
pop
movsl
hlt
push
and
sub
jl
inc
es
and
aaa
fadd
cmpsb
sbb
das
mov
adc
loopne
into
and
data16
mov
sub
mov
xchg
sahf
out
pop
shll
push
jge
sbb
sub
mov
jae
aam
out
fisubrl
cltd
push
enter
sub
rol
mov
inc
add
push
cli
or
jno
mov
repz
sbb
inc
lret
aaa
ret
sti
mov
mov
std
xor
add
lods
fs
shrb
mov
in
push
jmp
mov
push
and
sub
int
mov
cmp
rorb
mov
add
lret
lret
jb
clc
das
inc
movsl
pop
push
cmp
scas
dec
jns
add
push
dec
aad
repz
cmp
jp
jp
mov
inc
adc
loop
mov
mov
insb
inc
jb
xchg
push
adc
out
cwtl
stc
push
aad
aas
dec
mov
stos
xor
mov
push
xchg
cmp
lock
mov
dec
addr16
decb
insb
pop
cli
sub
mov
push
outsb
imulb
xchg
pop
jnp
jge
jne
mov
std
mov
jns
int
mov
test
loop
aas
sahf
dec
pusha
and
mov
cmp
push
jge
mov
push
or
movsl
adc
mov
jae
or
pop
lea
pop
daa
inc
test
rclb
and
jb
add
push
cwtl
test
xchg
mov
movsb
fnstenv
push
pop
lcall
lods
cli
daa
xchg
mov
jp
dec
sbb
shll
loope
push
popf
int3
mov
lret
loopne
lret
fstpt
repnz
repnz
mov
dec
push
mov
scas
fwait
cld
pop
sub
cmpsb
mov
inc
orb
sbb
in
pop
ds
movsl
daa
dec
sti
les
and
dec
idivb
jg
xor
scas
incb
insb
xor
xor
sbb
rolb
pusha
xor
push
mov
lock
adc
test
bound
xchg
inc
shrl
xchg
rcrb
fucomi
xor
xchg
mov
lret
adc
mov
andl
mov
mov
lret
arpl
sarb
cmp
lret
push
jg
xor
lret
mov
mov
sahf
dec
es
mov
dec
mov
mov
sbbl
inc
cmp
into
jecxz
or
lahf
lret
mov
jne
in
push
xor
lret
sub
sarb
mov
test
ret
push
and
pop
push
pushaw
andb
stc
ljmp
push
lock
pop
cmpsl
xchg
pop
dec
cmp
mov
add
fisttpll
sub
and
ficoml
cltd
jp
mov
in
add
adc
dec
paddusw
outsl
bound
jg
out
ja
mov
inc
jl
or
shr
and
scas
das
data16
sub
sub
js
push
jo
fs
mov
lods
out
or
cmp
incb
xor
and
jno
jg
xchg
mov
fcmovnu
bound
nop
sbb
scas
sti
mov
rcll
mov
aad
sbb
push
out
inc
mov
fstpt
xor
fsubrp
repnz
push
pop
xor
lock
out
inc
jnp
cmp
and
mov
pop
mov
sbb
pop
sub
scas
test
insl
ljmp
mov
aam
cmpsb
pop
negb
pop
cmpsl
dec
add
repnz
in
fmull
lods
jb
jne
jne
setno
pop
outsl
or
jnp
cmp
ret
leave
add
jge
sbbl
sti
and
loope
dec
inc
inc
cld
adc
cmp
scas
outsb
and
fiadds
mov
jle
sbb
push
mov
pop
fdiv
lret
jge
js
pop
imul
rcll
mov
push
mov
mov
dec
in
sahf
sti
mov
push
bnd
ds
cmp
mov
dec
out
jne
mov
mov
sbbb
loopne
daa
push
sbb
jae
mov
shl
ds
sub
xchg
enter
mov
cmc
mov
test
aad
push
into
popa
repz
and
pop
stos
idivb
cwtl
push
push
add
aas
sbb
and
scas
je
or
xchg
gs
jb
pop
stos
mov
test
les
mov
xchg
and
in
sub
stos
imul
stos
mov
bnd
in
xor
fs
mov
push
push
push
mov
sti
and
popf
aad
sbb
out
cmp
in
push
inc
xchg
lock
stc
rcrl
pop
mov
ficompl
pop
mov
push
repz
jns
in
push
aam
adc
and
xchg
or
xchg
in
les
sbb
mov
pop
lret
pop
sub
mov
cmpsb
mov
icebp
loop
nop
lods
mov
lods
inc
fcmovbe
dec
leave
insb
scas
pop
filds
mov
mov
add
lret
and
divl
mov
std
push
repz
imul
adc
mov
cld
pop
lret
sbb
xchg
push
pop
aas
jge
lcall
repnz
outsb
or
xor
lea
sbbb
das
inc
sbb
dec
cmp
jnp
add
mov
sbb
push
cs
aas
pop
in
scas
dec
rclb
pop
add
xor
insl
dec
and
add
pop
dec
sub
xchg
jbe
or
jnp
xor
push
mov
adc
inc
mov
mov
daa
push
pop
ret
in
orb
mov
imul
jbe
mov
jmp
fdivrl
xor
int
xlat
pop
jmp
rorl
and
sbb
cmpsl
mov
fisttpl
test
cmp
xchg
fdivrs
js
not
jmp
dec
jmp
xchg
lea
out
dec
xorl
dec
xchg
mov
sub
push
outsb
mov
cmp
adc
jmp
pop
xor
xchg
div
outsb
and
mov
mov
aaa
xor
mov
divb
std
adc
lret
in
add
or
add
mov
outsb
inc
push
test
cmpsb
mov
clc
and
inc
lahf
xchg
or
dec
in
add
add
js
push
push
leave
mov
xor
jbe
cli
movsl
scas
cltd
sbb
sub
mov
xchg
push
leave
pop
call
xchg
arpl
add
test
xchg
xor
adc
pop
insb
in
add
adc
scas
fisttpl
out
add
bound
movsl
daa
mov
shll
scas
int3
sbbl
pop
mov
cmp
enter
sahf
in
adc
and
pop
sti
test
and
xchg
mov
mov
jecxz
cmpsb
icebp
fcom
sbb
add
cltd
aas
mov
es
xor
pop
fcompl
pop
push
xor
sbb
into
dec
or
add
mov
jbe
pop
ljmp
rolb
xor
mov
popf
int3
mov
into
cmc
pop
ficomps
pusha
ljmp
dec
jecxz
jno
pop
test
or
fadd
xor
pusha
hlt
or
outsl
fcmovnu
repnz
and
bound
out
popf
pop
sar
jecxz
sti
inc
xchg
cmp
mov
addr16
adc
push
ljmp
test
xchg
mov
outsb
jl
fbld
and
aas
xor
call
clc
push
xor
cmpsb
add
jb
ret
jg
adc
pop
push
mov
mov
scas
jnp
xchg
lcall
repz
jecxz
popa
stc
mov
dec
mov
mov
add
pop
pop
cmp
or
cmp
xor
cmc
mov
js
test
imul
test
pop
sahf
aad
ror
incb
rolb
cmpsl
jl
repnz
mov
shr
push
testb
push
pop
xchg
jne
arpl
lods
clc
shll
negb
int
hlt
adc
rcrb
lret
inc
add
adc
cmpsb
loopne
lret
or
pop
jge
rcrb
mov
xorl
popf
fldt
test
xchg
mov
outsb
cmp
xchg
adc
jmp
aam
push
mov
xor
repnz
mov
dec
mov
mov
dec
jbe
push
stos
out
mov
adc
or
test
cli
scas
pop
rorl
adc
adc
mov
jg
dec
add
in
pop
dec
scas
popa
movsb
mov
push
std
stc
cwtl
dec
dec
jp
shrl
push
call
cld
dec
jp
mov
dec
fidivs
imul
xor
fistpll
xchg
xchg
pop
inc
wrmsr
xchg
outsl
not
adcb
push
adc
fcmovnb
shrb
mov
jl
test
dec
cs
lods
xchg
out
adc
arpl
subl
mov
pop
dec
cmp
mov
clc
insl
jecxz
or
cmp
fucom
fstps
mov
loope
loop
mov
fwait
shrb
xchg
push
push
pusha
sbb
sbb
mov
pop
test
call
cmp
fwait
dec
mov
and
xor
cmc
fwait
add
dec
jno
lods
cmp
push
das
pop
enter
mov
lret
flds
adc
xchg
push
shrb
das
stos
lret
rorl
negl
out
jmp
movsb
or
repz
push
enter
and
repz
mov
pusha
fmuls
add
pop
push
imul
lods
inc
in
jp
popa
dec
adc
mov
loope
sbb
cli
ss
in
jmp
retw
inc
fstpt
mov
push
cmp
stos
scas
stos
and
sub
fs
mov
jae
dec
aad
mov
pop
mov
das
cmpb
in
mov
pop
mov
add
ljmp
mov
cmovp
push
jnp
bound
and
xor
inc
or
jle
int3
xchg
or
movsb
test
mov
insb
pushf
fnstsw
int3
dec
mov
fsubr
xchg
jg
dec
scas
xchg
mov
fsubrs
test
xor
and
fsts
int3
push
in
lea
jns
popf
xchg
pop
nop
popa
jmp
or
imul
jae
inc
adc
decl
pop
fdivrl
daa
mov
clc
push
pop
mov
pop
dec
lret
push
testl
sub
ljmp
roll
pop
mov
pushf
sub
iret
and
sbb
xchg
cmpsb
sbb
mov
out
scas
mov
xchg
ret
dec
test
pushf
divl
xor
outsb
leave
dec
sbb
inc
clc
push
fsubr
add
pop
data16
in
push
add
inc
push
cli
adc
or
mov
lret
mov
mov
fsubrp
adc
test
fwait
mov
sub
mov
int
mov
bswap
mov
fildl
fisubrs
push
das
cmp
jb
ja
adc
mov
fisubrl
notb
jecxz
push
inc
testb
data16
outsb
mov
data16
je
cli
daa
int3
jbe
lret
aam
fsubs
cwtl
in
sbbb
fsubs
repz
jmp
jg
fwait
or
insl
add
mov
mov
aaa
js
mov
xchg
sbb
pop
icebp
mov
mov
pop
lods
jo
or
pop
in
out
dec
adc
rolb
shl
imul
inc
orb
sbb
cmp
mov
xchg
xor
xchg
test
add
dec
cmp
fsts
jns
or
lock
shrl
sbb
in
pop
aad
pop
sarl
mov
mov
dec
mov
push
ret
mov
xor
or
inc
mov
lock
inc
adc
fcmovnbe
mov
scas
aam
insb
sub
stc
xchg
sub
sbb
gs
add
push
iret
sbb
fimull
int3
bound
pop
mov
sbb
xorl
cli
xor
stos
add
push
movsb
aas
pop
push
and
or
fwait
scas
ljmp
jle
clc
sbb
push
test
lret
test
and
je
mov
xchg
rcl
xchg
mov
js
push
mov
enter
xor
clc
push
cs
and
pop
divl
pop
pop
mov
subps
sbbl
cmp
pop
xor
pop
pop
ds
lret
and
mov
and
lods
loope
loopne
mov
mov
fmul
addl
test
xor
lock
fnstcw
inc
jno
fmuls
xchg
xchg
loope
rorl
test
enter
clc
sub
pusha
mov
dec
xchg
mov
cmp
and
test
adc
outsl
dec
fisubrs
pushw
fs
xchg
mov
sbb
dec
js
jbe
xchg
rcrb
stos
sub
inc
sahf
js
dec
sbb
ds
enter
cmp
add
stc
mov
xlat
xchg
xchg
and
xor
or
ret
push
rcrb
xor
pop
dec
mulb
adc
adc
je
adc
pop
jp
sbb
test
out
adc
mov
sti
xor
pop
arpl
xor
mov
and
out
inc
adc
cli
mov
clc
in
daa
cmpsl
xor
mov
sbb
xor
lods
mull
jecxz
push
movsb
flds
sti
xchg
ss
ljmp
mov
aaa
ljmp
and
fidivs
arpl
jmp
aam
test
and
mov
movl
jae
mov
mov
mov
cli
lock
jae
sub
mov
mov
or
test
rclb
fucom
push
arpl
dec
fcmovnbe
inc
arpl
ss
frstor
lea
pop
mov
leave
adc
inc
mov
or
js
push
and
xor
pop
into
aam
xchg
push
loopne
dec
xchg
cltd
and
aad
pop
repnz
adc
iret
rcrl
mov
cmp
xchg
cltd
xor
fs
pop
lret
inc
jmp
popa
cwtl
jo
lock
cmp
cmp
jg
cmp
addb
aad
orl
js
data16
fs
jg
mov
ret
test
mov
adc
js
in
xor
push
loop
jge
mov
mov
dec
in
dec
jb
aaa
and
jbe
inc
adc
cs
ret
cld
add
inc
sbb
bound
stos
dec
sar
sahf
xchg
mov
movsb
or
inc
pop
pop
add
mov
or
dec
dec
and
lcall
aaa
mov
mov
lods
into
dec
lds
inc
bound
cwtl
xor
into
lcall
test
cmp
test
adc
inc
ss
mov
push
aad
dec
push
in
jp
mov
jb
pop
daa
mov
dec
push
jmp
shll
push
inc
fistpl
scas
icebp
dec
shll
or
mov
addr16
aas
jl
push
xchg
cmpsb
pop
bound
cmp
daa
jecxz
js
jmp
mov
outsl
mov
data16
dec
xchg
into
jae
add
in
cld
mov
icebp
sub
or
scas
fpatan
dec
test
mov
and
jb
and
xchg
mov
pop
imul
inc
mov
pop
cltd
jmp
mov
add
jo
mov
or
dec
cmp
mov
jge
pop
xor
dec
mov
or
xor
mov
call
xchg
mov
andl
dec
inc
imul
add
pop
lcall
or
mov
rcrl
sti
int
add
jne
lahf
mov
and
int
aaa
dec
stos
pushf
stc
mov
sbb
sub
aaa
test
add
sub
lods
pop
sbb
ror
out
inc
push
jns
outsb
mov
test
mov
push
dec
outsl
mov
xchg
js
mov
stos
fistps
and
hlt
and
lods
shll
inc
dec
add
fisubrs
nop
mov
mov
bound
xor
jnp
cmpl
sbb
cmp
rcr
xor
xor
arpl
push
ds
pop
dec
and
popf
test
sbb
xchg
or
shll
xor
mov
icebp
cmpsl
nop
mov
mov
pop
and
jbe
decl
pop
and
ds
pop
cli
lods
jno
push
out
xchg
jle
sti
xchg
cmp
shrl
das
pop
or
aad
packuswb
sti
testl
daa
sbb
pop
test
xchg
enter
mov
rcrl
mov
ret
lds
sub
ds
pusha
xchg
push
cmc
aam
mov
cmpsb
out
and
imul
divl
sub
ljmp
mov
dec
fwait
dec
adc
mov
push
sar
sbb
mov
hlt
movsl
pop
pop
mov
push
mov
jecxz
iret
dec
inc
jge
and
ret
rclb
adc
push
dec
fnstsw
cmc
mov
mov
adc
cmp
sub
adc
dec
sti
add
xchg
mov
addr16
scas
cld
mov
mov
dec
sub
pop
cmpsb
jno
or
icebp
mov
cmp
push
mov
ret
les
repz
sub
mov
xor
jmp
dec
dec
sbbb
push
stos
js
push
stos
ret
dec
cmp
les
dec
xor
popa
popa
movsb
pop
subl
enter
aas
xor
in
fldl2t
in
fs
dec
sbb
aam
adc
mov
in
sarb
jne
ret
icebp
lods
xchg
sahf
and
push
outsl
fcmove
and
push
pop
inc
lcall
xorl
and
decb
orb
jmp
stos
out
fldt
out
mov
sbb
add
and
mov
adc
mov
inc
jp
outsb
ljmp
std
pop
inc
stos
or
pop
jae
push
mov
call
add
js
outsb
mov
fimuls
pushw
jmp
out
sub
aam
mov
fistps
fisttpll
orb
jmp
enter
mov
jmp
jmp
push
pusha
pushf
mov
movl
pushf
pushf
call
add
pushl
pushf
lea
jmp
pushf
movl
pusha
pushf
movw
pushf
lea
jmp
mov
push
pushl
lods
sub
js
pushf
clc
clc
not
pushf
push
pusha
push
neg
call
not
bswap
rcr
mov
stc
cmp
shl
pusha
mov
movb
lea
je
pushf
movw
jmp
ja
xchg
xor
sub
out
jg
movsl
sti
mov
pop
mov
add
mov
inc
mov
cmp
dec
mov
std
movsb
bound
ss
or
mov
aam
pop
rcl
nop
aaa
scas
repz
pop
stc
adcb
stos
jb
stos
sbb
cmp
stos
mov
ljmp
les
inc
mov
push
mov
insb
xor
insb
add
cmp
insb
mov
shrb
pop
iret
cmpsl
and
aaa
aam
mov
mov
xlat
popf
stc
xchg
leave
lret
imul
push
jmp
roll
lahf
arpl
shrb
in
push
pop
and
cmp
cs
mov
and
fsubrs
adc
add
testl
inc
jmp
cmp
sbb
lds
cmp
pop
and
repz
sbb
lea
jne
push
not
mov
movzbw
mov
lea
not
mov
pop
pop
lea
not
lea
pushf
call
pusha
or
push
jmp
popf
cpuid
nop
push
call
mov
iret
inc
jno
xchg
lahf
std
fwait
jne
mov
cmpsl
rcrl
cmp
adc
cld
call
fbld
scas
sub
fwait
test
sub
in
xchg
adc
in
xor
es
pmaddwd
sub
popa
cmp
cmpsb
cmp
xor
repnz
bound
pusha
lret
sbb
std
sub
out
dec
cld
push
sub
imul
xchg
divl
pmulhw
add
out
push
fisubrs
and
outsb
jb
jg
iret
gs
hlt
sbb
cld
add
test
aad
adc
push
imulb
cld
xor
es
lock
pop
pusha
lods
jmp
rorl
push
sti
out
adc
mov
push
scas
in
sbb
jl
xchg
cmp
inc
mov
xchg
fwait
mov
in
fdiv
push
push
cmpsb
sub
hlt
mov
subl
jecxz
jae
sbb
pusha
xchg
push
lea
jae
lea
xchg
push
movzbw
mov
pushf
cltd
cltd
mov
cwtl
not
jmp
lahf
not
mov
push
not
lea
push
call
pop
xor
enter
shl
sbb
push
lcall
pop
adcl
mov
fstpt
mov
test
xor
xchg
les
cmp
mov
ss
jg
adc
push
or
xor
dec
mov
in
add
out
in
adc
insb
mov
adc
jge
push
sub
jns
sbb
call
xor
outsb
notl
mov
out
popa
pop
gs
adc
xchg
dec
sti
aad
mov
js
test
sub
xchg
jge
jno
ret
shll
sub
mov
mov
fcmovnbe
hlt
rcrb
dec
pop
add
sub
add
das
and
dec
dec
sub
sub
dec
mov
or
push
xchg
xor
add
mov
mov
push
add
jae
cmpsb
data16
xchg
mov
adc
in
in
xor
jecxz
aad
hlt
inc
mov
iret
out
pop
cmp
cmp
test
mulps
shr
jbe
mov
adc
out
or
inc
mov
jnp
jbe
and
pop
or
sbb
pop
rcll
pop
rorl
or
std
and
ss
sub
js
mov
push
idivb
test
mov
mov
jo
or
jnp
jae
xor
or
dec
dec
push
cmpsl
pop
lock
push
ljmp
ret
cli
sbb
mov
loop
mov
mov
in
mov
data16
lock
jo
dec
dec
mov
mov
mov
or
gs
xchg
mov
mov
cltd
aad
dec
loop
clc
nop
adc
sub
xor
iret
xor
aad
dec
add
fs
lods
nop
out
fadds
mov
jmp
bt
mov
cmp
push
pusha
lea
ja
pushf
jmp
mov
jmp
pushf
adc
lea
jo
pusha
movb
pushf
lea
jae
push
bts
cwtl
cmc
mov
dec
rcl
mov
shl
mov
cmc
aas
xor
ror
cmp
lahf
pushf
mov
mov
pusha
lea
jb
bsf
pusha
ror
pushf
cmp
jmp
xchg
jmp
jecxz
sahf
sarl
jbe
mov
or
daa
sbb
aad
push
leave
sbb
xor
mov
test
into
xchg
pushf
ss
leave
push
inc
jge
and
ja
adc
sbbb
in
add
mov
pop
movups
xchg
lcall
xchg
ret
cmpsb
cld
nop
mov
fs
add
add
aad
bt
cmp
pop
cwtl
lea
pop
push
pushf
mov
push
jmp
movzbw
setnp
mov
not
mov
pusha
mov
jmp
clc
clc
jmp
push
lea
jne
pushf
pusha
movsbl
movb
pushf
movzbw
bswap
mov
setnp
cwtl
pusha
lahf
lea
push
pushf
movl
pushf
pushf
jmp
movl
lea
jae
push
pushf
pushf
movl
mov
lea
jmp
test
mov
mov
mov
sub
in
xchg
adc
push
nop
add
mov
outsb
pop
adc
daa
fnstenv
aas
xchg
das
inc
cltd
shll
mov
bswap
negl
fsubs
cmp
sahf
mov
mov
cmp
xchg
push
and
add
cwtl
mov
aaa
aaa
push
mov
jno
cmp
and
add
mov
pusha
sbb
lahf
pop
call
jae
int
in
stc
push
daa
push
mov
inc
adcl
bound
fsubs
fs
je
sbb
push
js
sbb
xor
pushf
test
repnz
lea
jne
pusha
lea
jne
rcr
mov
dec
stc
shr
shl
sub
pusha
btc
lea
test
pushf
cmp
sub
stc
test
mov
pushl
popl
clc
cmp
cmc
cmp
cmp
call
cmpl
movb
call
sbb
es
daa
mov
push
or
add
es
shrb
xor
aaa
sbb
aas
jnp
addr16
pop
adc
pop
mov
jge
aam
dec
int
jno
and
push
out
cmp
cmp
imull
mov
sbb
js
gs
mov
add
popf
sbbb
icebp
add
jne
lahf
pop
stos
push
popa
push
jno
aad
push
in
sarb
sarb
fiadds
sub
push
ret
sbb
mov
movzbw
movzbw
call
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
mov
add
je
outsl
fs
gs
imul
add
cld
neg
movzbw
pushf
add
mov
shl
bt
add
pusha
pushl
dec
shr
neg
neg
mov
bt
bswap
add
bswap
not
mov
lea
pusha
jmp
jno
pop
cmp
xchg
jle
push
insb
testb
out
sahf
mov
xchg
shll
dec
lods
sbb
int3
push
popa
cmp
push
in
dec
sub
fsub
clc
ds
push
push
add
push
sbb
aaa
dec
lods
push
inc
and
sbb
jne
dec
and
push
pop
dec
das
inc
and
outsl
test
cmp
mov
cld
in
fadds
mov
mov
in
and
mov
push
into
repnz
jno
jmp
lahf
inc
shll
mov
cmp
cmp
rcll
imul
pop
stos
xchg
push
and
sahf
clc
cmp
xchg
out
lods
rolb
sbb
lea
jb
inc
bts
mov
push
pushf
sub
jmp
mov
mov
jmp
movsl
loope
fildll
push
sarb
testb
xchg
mov
ljmp
test
mov
add
pushf
xchg
xor
out
jg
mov
and
shlb
jb
sbb
sahf
push
xchg
sbb
xor
fcomps
out
jg
add
ja
cmpsl
orl
xor
push
adcb
shr
out
push
into
xchg
int3
xor
nop
fs
xchg
pushf
push
jno
dec
mov
sub
jg
jnp
mov
mov
cmpsb
pop
sbb
lret
mov
cmp
cmp
jbe
add
fwait
xchg
push
jg
mov
aas
rcrl
jmp
jmp
mov
jns
aas
jecxz
inc
push
cmp
xor
jb
cmp
icebp
cmpl
adc
pop
or
movsl
mov
mov
jecxz
push
orb
inc
and
aad
stc
add
cmpsb
pop
push
stos
push
decl
xchg
shlb
call
push
mov
pushf
setnp
push
mov
pushf
mov
mov
movsbw
movsbw
call
or
push
pushf
push
pushf
lea
je
stc
cmp
pushf
jmp
pop
pusha
push
mov
pushl
ret
sbb
bt
cmc
lea
call
xchg
inc
xlat
repz
cli
mov
std
mov
mull
mov
mov
and
aaa
mov
lret
jmp
pop
std
mov
shl
xchg
shrl
lcall
add
adc
adc
pop
ss
jl
push
mov
fstl
lcall
xor
movsl
jle
fs
out
stos
or
jo
ss
pop
xchg
stos
ret
pop
sbb
cmp
sub
jmp
mov
sub
mov
scas
fisubl
xchg
sbb
movb
mov
movw
push
push
pushl
pushl
ret
mov
bt
push
pusha
mov
or
mov
lea
je
cmp
stc
or
pusha
pushf
call
pusha
mov
jmp
mov
lea
jne
shl
mov
test
cmp
or
call
pusha
jmp
movw
lea
call
jmp
pusha
mov
mov
pushf
call
stos
mov
call
mov
repnz
aad
push
sub
in
outsb
shlb
mov
outsb
cwtl
rol
sahf
imulb
out
cli
leave
call
sub
das
dec
dec
lahf
lds
lret
dec
cld
mov
jle
loope
es
ljmp
fwait
in
pop
sahf
inc
push
jle
push
inc
ds
xchg
dec
aam
ljmp
fdiv
xor
hlt
push
subb
xchg
aad
clc
movsb
push
lret
add
jno
ret
pop
cmp
rep
dec
imul
and
ja
dec
dec
push
sub
cmpsb
pop
int
ret
mov
movb
pusha
lea
jmp
movzbl
seta
push
pushf
lea
push
lea
call
pushf
movzbw
pusha
mov
mov
xchg
pushf
lea
jae
bswap
lea
call
pushl
lea
jb
jmp
pushf
jmp
pusha
mov
xor
sbb
fisttpll
add
jnp
dec
jnp
pop
xlat
mov
outsb
push
daa
pop
and
sbb
movsb
je
enter
imul
jp
dec
test
push
inc
mov
sbb
mov
not
movb
movl
pop
lea
call
bt
push
repnz
call
fbld
sub
xchg
fsts
adc
gs
bound
movsl
jl
lods
mov
push
jp
inc
jb
sbb
sub
push
in
sub
sub
adc
out
jno
cmp
in
pushf
popf
addr16
mov
add
push
jo
scas
xchg
dec
inc
dec
mov
inc
xor
clc
aam
push
sahf
mov
test
aaa
ret
sbb
js
push
mov
rcl
and
xorb
adc
loopne
jmp
mov
into
xchg
dec
fsubs
or
mov
xchg
shll
dec
xchg
xchg
ret
nop
les
das
add
hlt
jp
je
cmp
das
add
int3
push
mov
push
cld
sbb
pop
mov
cs
lods
jg
movsl
or
mov
out
ja
dec
adc
sub
ud2
gs
add
xchg
repz
stc
iret
mov
push
mov
xchg
in
cwtl
push
out
mov
out
repz
dec
fiadds
outsl
xchg
imul
mov
mov
dec
stos
or
shl
mov
pop
xor
cmp
fisubs
or
or
push
add
popa
xchg
out
jae
mov
lahf
icebp
test
push
sbb
sar
pushf
add
add
jmp
xor
and
outsl
mov
imul
rcrb
out
lahf
dec
sub
xlat
arpl
mov
xor
and
mov
fildl
jb
cmpsl
andl
aam
inc
lret
je
dec
movsb
pop
xchg
dec
fcompl
pop
adc
or
les
lcall
cmpsb
pop
ljmp
sub
inc
sar
jg
jne
xlat
and
test
in
fistl
mov
aas
mov
add
pop
sub
push
dec
stos
push
mulb
bound
adc
cltd
mov
mov
jo
pop
jmp
out
hlt
push
mov
xchg
mov
loope
sub
mov
sti
add
add
rcrl
push
pop
ds
and
sub
in
mov
or
mov
rcll
scas
movb
lea
je
pushf
lea
jmp
jmp
movzwl
btr
sub
mov
pusha
add
cmp
mov
cmp
test
pushf
jmp
jae
xchg
pop
out
les
iret
stc
pop
adc
cmpsl
pop
sbb
jle
inc
lods
jg
adc
mov
jbe
mov
stos
stc
push
sub
xchg
rcrb
aad
loop
lret
cmp
in
add
add
aam
hlt
xor
shr
pushf
repnz
rcll
out
int
pop
das
cmp
dec
and
pop
dec
sbb
push
pusha
movl
pushf
movl
pusha
mov
movb
mov
lea
jmp
not
not
rep
movzbw
movzbw
movsbw
xchg
mov
setb
seta
jmp
cmp
jp
testl
pop
movsb
lcall
or
adc
std
mov
iret
movsb
add
aam
or
dec
mov
cltd
xchg
mov
and
cmpsb
inc
cld
ret
das
into
and
sbbb
inc
sub
adc
nop
enter
or
fdivrs
test
das
adc
fldl
call
or
arpl
push
fwait
xor
cmpsb
push
std
add
xor
int3
inc
jne
sbb
xor
out
loopne
out
jle
dec
ss
insb
cmpsb
ret
xlat
fdivr
mov
decl
xchg
and
and
call
hlt
xchg
xchg
dec
pushf
imul
mov
aam
jp
bound
cmpsl
mov
cld
inc
out
fnstcw
pop
lahf
pop
out
dec
push
jnp
sbb
js
add
fists
inc
out
fcompl
mov
push
xchg
mov
movaps
in
fwait
jmp
xor
inc
mov
inc
sbb
mov
not
call
movl
movl
jmp
mov
call
pusha
pushf
pusha
movl
mov
lea
movl
movb
not
lea
pushf
movl
movl
pushl
popl
mov
pushf
pushf
pushl
ret
cmp
add
movw
bt
bt
cmp
call
adc
cmpsl
mov
rolb
xchg
jmp
or
or
xchg
iret
lods
push
ds
cmove
jmp
xor
andl
jmp
cmp
enter
mov
and
aas
test
xor
cmp
push
dec
pop
mov
lcall
decl
imul
push
cmpsl
xor
call
mov
pop
ret
and
cmp
add
jg
inc
lods
add
push
divb
sbb
repnz
in
les
fwait
mov
repnz
roll
adc
das
dec
adc
pop
or
shlb
fiadds
imul
pop
repnz
mov
or
movsl
out
add
daa
ja
ss
mov
mov
or
scas
icebp
xchg
add
sbb
add
wbinvd
dec
mov
push
push
xor
divb
das
push
sub
cltd
int
jmp
cmpsl
pop
aad
cmc
mov
sbb
in
pushf
pushl
movl
call
cmp
pushf
pusha
lea
je
pusha
clc
cmp
call
pushf
pushf
xchg
jmp
lea
jnp
pushf
pusha
lea
je
push
call
jmp
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
mov
inc
add
call
lea
je
stc
cmp
jmp
bt
cmp
push
lea
jbe
not
movzbw
and
bt
mov
test
not
add
jmp
pusha
mov
call
lea
push
lea
call
call
cmc
call
repnz
pushl
jmp
cwtl
arpl
or
push
ss
lds
add
lea
lods
jno
inc
pop
aas
lret
push
adc
icebp
bnd
insl
push
add
cmp
rorb
sbb
and
sub
es
mov
das
dec
rorb
adc
ret
fwait
loope
fnstenv
inc
push
mov
lret
xor
ficomps
mov
test
cmpsl
into
mov
or
pop
out
pop
mov
hlt
dec
pop
lods
add
jbe
xchg
dec
push
and
cmp
pop
cmc
cmpl
push
pop
jno
ret
sub
fucomip
stc
subl
push
data16
ss
out
sbb
lea
je
test
push
add
jns
cmp
pusha
mov
push
lea
je
pushf
pushl
cmp
pushf
call
cmp
mov
sbb
test
mov
xchg
xor
enter
mov
fstps
mov
add
ljmp
sbb
outsb
dec
add
adc
ss
rcrb
cld
mov
insl
xorl
fucomi
jae
sti
fiaddl
movsl
mov
mov
mov
and
stos
stc
mov
and
jmp
cmp
pushl
popl
push
cmp
movb
call
lea
call
pushf
pusha
mov
call
call
jmp
imul
stc
movb
stc
add
mov
push
pushf
lea
jmp
lods
lock
sbb
add
pop
jp
inc
jecxz
cmp
inc
fadd
push
ja
lds
dec
mov
push
rorb
sbb
in
imul
dec
push
shll
je
xchg
insb
or
mov
shl
xchg
add
jb
adc
mov
jmp
sub
mov
fwait
xchg
cmp
mov
int3
mov
out
fwait
mov
adc
cmc
inc
stos
xchg
fsubrp
dec
xor
dec
aad
cmp
aas
xchg
addb
loop
mov
pop
enter
scas
inc
cld
xlat
jno
pusha
mov
iret
add
cmp
rolb
inc
data16
push
cmp
pop
lahf
into
push
dec
in
iret
push
xor
add
jb
xor
hlt
sub
inc
fists
sub
dec
outsl
mov
xorb
pop
pop
int3
xchg
adc
xchg
imul
push
xchg
cmpl
jge
sub
stc
arpl
in
bt
pushf
clc
shl
cmc
add
mov
lea
push
jmp
pusha
pushl
mov
pushf
jmp
aad
shll
shlb
scas
shlb
adc
cli
push
mov
adc
lahf
push
lods
movsl
push
adc
pushf
mov
fs
jl
push
add
mov
stc
xchg
or
mov
mov
inc
jns
xchg
in
mov
mov
adc
decl
imul
popa
sbb
mov
cli
movsb
dec
sub
ja
fs
push
push
lods
or
ret
sbb
jmp
movl
movb
pushf
pushf
pushf
lea
jmp
scas
mov
vmwrite
or
xchg
or
cltd
std
and
mov
pusha
push
cwtl
push
cmp
iret
mov
adc
mov
mov
mov
jno
fcomip
jmp
mov
roll
pushf
inc
lahf
fcmovnbe
movsb
jne
mov
fwait
mov
lds
stc
ds
fiadds
cwtl
cltd
adc
arpl
mov
loopne
push
nop
add
mov
and
push
mov
mov
mov
dec
dec
shrl
arpl
imul
daa
push
rorl
dec
jbe
xchg
rcr
insb
pop
ja
xchg
or
pushf
push
lcall
ljmp
rcrl
xchg
mov
pop
fimull
insb
fsubrs
mov
jl
les
mov
loop
imul
mov
push
dec
and
lret
xor
xchg
js
sbb
mov
ficoms
add
mov
das
fnstsw
dec
shrl
dec
inc
inc
mov
push
fdivl
push
sbb
mov
adc
cmpsb
dec
lds
push
pusha
lea
jb
call
cmp
call
add
mov
call
add
pop
ret
jmp
mov
aas
sbb
clc
orl
mov
push
mov
in
xor
scas
sbb
dec
or
jle
outsb
imul
jnp
pop
inc
or
je
fs
xor
xchg
je
mov
push
xchg
sti
mov
push
dec
jbe
lock
or
inc
stos
or
or
out
sbb
jmp
add
mov
jg
push
movsb
push
movsl
mov
pop
mov
mov
ja
sarl
sub
inc
popa
cmp
pop
push
rcr
ljmp
mov
decb
cmp
out
add
daa
lret
movsb
int
out
cmp
lcall
pop
mov
fadd
add
mov
inc
stos
cld
rclb
sub
popl
ja
xchg
roll
les
xor
stos
xchg
xchg
inc
dec
test
lcall
mov
xchg
mov
mov
shr
cmpsb
mov
cmpsb
rolb
int3
dec
fmuls
mov
cmp
or
cmp
xchg
push
xchg
push
incb
sbb
pushf
pushf
lea
ja
bt
cmc
clc
add
cmp
jmp
jmp
pushf
mov
push
push
mov
pushl
ret
push
movl
jns
pusha
movl
push
lea
jmp
lret
jle
cmp
aaa
mov
popa
das
int
popa
xchg
cmp
test
inc
or
mov
lahf
pop
addr16
sbb
cmp
in
sbb
xchg
jecxz
dec
repz
lret
shr
inc
sbb
movzbw
jmp
pushf
pusha
xchg
jmp
push
ror
lea
bts
push
test
push
btr
movsbw
push
test
rcl
add
bts
push
bt
ror
setge
bswap
mov
btc
dec
mov
shl
call
jae
pusha
bt
sub
cwtl
lea
call
movsl
pop
adc
mov
lahf
sbb
jns
fnstcw
or
jne
fnstcw
sub
popa
or
adc
in
daa
add
mov
or
adc
dec
dec
fwait
lods
push
or
sbb
mov
add
stc
or
test
fs
insb
les
fs
push
pop
call
and
in
jb
loopne
imul
jne
push
cmc
lcall
and
and
imul
sarl
add
rol
mov
lcall
repnz
ret
jecxz
dec
cbtw
loop
into
push
scas
xor
mov
cli
popf
push
aam
data16
mov
or
dec
push
aam
jmp
sbb
fisttpl
mov
data16
push
mov
seta
pusha
lea
call
pop
adc
dec
icebp
stos
push
fwait
das
mov
mov
into
mulb
cmp
out
jle
and
jae
jbe
rol
cmc
cmc
flds
clc
cwtl
push
push
enter
repnz
iret
adc
jae
xchg
arpl
imul
xchg
sbb
stos
push
add
mov
in
imul
int3
scas
stos
mov
adc
dec
into
mov
dec
outsb
xchg
jge
fildll
mov
mov
jno
jmp
xchg
daa
adc
sbb
add
add
rclb
mov
inc
test
jmp
and
das
sahf
adc
lock
mov
jns
mov
xor
xchg
xchg
cltd
cmp
dec
std
int
jle
lret
mov
test
or
inc
and
rcrb
in
adc
mov
mov
and
cmpsl
in
xor
insb
hlt
stos
ret
xchg
rcrl
negb
sti
cltd
movsb
mov
add
pushf
mov
sub
xchg
out
sahf
roll
movsb
pushf
in
cmpsb
shlb
xchg
xchg
popa
pop
mov
jnp
in
aas
jae
fs
mov
aas
pop
pop
push
punpcklwd
jecxz
jns
sahf
sbb
cmc
cmp
call
call
mov
push
lea
movsbw
jmp
pop
lock
in
jl
jno
jge
and
dec
xor
sbb
mov
add
aad
imul
jne
jl
mov
les
inc
pop
aad
cmp
stos
fcmovnbe
adc
repnz
pop
movsb
push
mov
mov
cli
cmp
sub
mov
je
leave
aaa
push
fstps
xlat
ret
sub
adc
jecxz
cmpsl
notl
xor
int
stc
xchg
pop
xchg
xchg
xchg
iret
cmpsl
jle
cmp
mov
cmp
fs
stos
push
inc
pop
jl
push
ds
sbb
subl
lahf
sbb
push
test
mov
mov
mov
fs
jbe
push
bound
mov
xchg
ficomps
fldt
pop
jmp
mov
xchg
out
dec
pushf
fscale
std
test
psrld
mov
push
inc
xor
sbb
shrd
clc
jmp
call
pusha
cmc
lea
ja
cmp
pushf
lea
jne
pushf
pushf
inc
mov
jmp
lea
call
mov
aaa
addr16
les
cmp
mov
fs
mov
sti
mov
loop
cmp
shlb
sbb
xlat
inc
rol
and
push
add
shll
push
roll
out
dec
sub
push
or
data16
mov
mov
dec
or
call
pop
cmpsb
lock
cld
icebp
sbb
mov
push
clc
test
ss
repnz
int
and
pop
xchg
cli
pop
adc
mov
cmp
test
sbb
xchg
mov
sub
pop
mov
out
sbb
clc
scas
stc
dec
arpl
xchg
sub
sbb
mov
sbb
movsb
sbb
pushl
jmp
shld
mov
pushf
pusha
jmp
push
mov
lea
ja
pushf
pushl
lea
jb
jmp
jmp
lea
lea
pusha
lea
call
jmp
test
pushf
test
jmp
push
cwtl
rcl
pop
mov
fbld
cmp
mov
aam
or
in
imul
cmp
fs
push
jl
dec
sub
fsubr
loope
mov
pop
push
mov
hlt
int3
pushf
push
inc
pop
movl
nop
dec
imull
adc
or
mov
andb
movsl
push
rclb
and
sbb
sub
lea
stos
sahf
cmp
push
dec
push
adc
cmp
sub
mov
push
fwait
pop
mov
xchg
and
shr
cmpsb
decl
imul
lret
push
mov
movb
mov
lcall
inc
in
test
xlat
jle
cmpsb
inc
imul
or
pop
dec
jno
mov
or
inc
sbb
outsb
and
pop
ds
test
adc
pusha
push
imul
fiadds
pop
mov
adc
pop
adc
aam
and
in
clc
cmp
cld
pushf
xchg
sahf
into
sub
sbb
movsbw
jmp
imul
jle
mov
push
sbb
mulb
mov
notb
lahf
pop
mov
bound
jnp
mov
mov
cmpl
js
pushf
dec
test
outsl
cltd
xchg
cwtl
jb
mov
adc
pop
add
ret
out
test
sbb
cmp
xor
jle
js
push
push
push
sub
cmpsb
inc
enter
add
add
shl
lea
call
pop
ret
sbb
and
mov
jne
arpl
sbb
ja
aas
dec
xchg
popa
popf
sub
and
gs
cli
adc
sbb
rclb
fcoms
add
jle
xorl
mov
pusha
mov
es
push
out
sub
and
add
dec
rorb
cmpsb
pushf
pop
in
cwtl
mov
jbe
les
xor
pop
mov
test
and
es
fldcw
push
lcall
dec
add
push
inc
jo
and
pop
push
sbb
int3
cld
push
push
xchg
popa
jae
mov
mov
sub
cmp
repz
xchg
sbb
cmp
mov
pop
pop
jb
push
mov
aad
mov
repz
xchg
loop
call
xlat
and
inc
cmp
or
xor
push
repnz
enter
loopne
mov
sbb
int
test
jmp
push
sbb
add
aas
adcl
lea
push
lret
jmp
dec
test
or
cmc
xor
push
or
sti
cli
popa
and
out
call
cmpsb
test
inc
ret
pop
mov
jl
mov
andl
cmp
adc
pop
cltd
push
xchg
cs
xor
sub
shlb
fs
dec
sub
push
push
sbb
pop
pop
ss
xchg
sbb
push
fucom
ja
dec
out
inc
add
sub
mov
rcll
mov
fadds
and
testb
sub
data16
xor
cmpsb
inc
cld
add
cmp
cwtl
imul
cmpb
test
xor
and
sbb
stos
imul
mov
inc
and
fisttpll
push
hlt
fcmove
fs
and
or
aam
cld
lods
les
repz
cmpb
in
in
jno
popf
mov
stos
ret
sbb
mov
sbb
inc
ret
repz
sbbb
push
xor
pop
sub
or
xchg
mov
jmp
inc
or
sub
xor
lretw
enter
inc
sub
or
sbb
orl
shrl
faddp
inc
cli
jns
mov
and
sti
fcmovne
popa
sbb
adc
inc
hlt
sbb
movb
mov
lea
jae
pushf
add
jmp
movl
call
pushf
movw
pushl
add
mov
lea
jmp
add
sbb
add
adc
add
or
pop
add
sti
add
test
xlat
pop
add
sti
add
add
pop
add
sti
add
lea
pop
add
sti
add
mov
xlat
pop
add
add
test
xlat
pop
add
add
adc
add
cmp
pop
add
mov
rol
push
call
test
in
pop
push
push
cmp
mov
mov
push
ds
ds
fmuls
xchg
cmp
stos
fistps
lcall
lea
outsb
ret
je
icebp
sub
adc
dec
sub
cmpsb
add
pop
mov
mov
dec
dec
or
stos
scas
dec
jbe
pop
inc
rcrl
inc
and
call
decl
pop
lods
cmc
scas
jmp
sti
xor
inc
push
lock
xchg
into
fs
xchg
sbb
push
sbb
mov
xchg
xchg
imull
stc
cmp
sbb
push
push
lea
pop
repz
stos
cmc
and
lock
lods
je
sarl
cmpsl
jne
push
outsb
ljmp
fistpll
push
js
cmc
sti
jb,pt
mull
mov
sbb
cld
fadd
push
xor
cmp
ficoml
xchg
push
cmp
pop
adc
outsb
sbb
pushf
shl
jmp
rcl
rol
sbb
mov
bt
cmp
jno
jb
bt
jg
cmp
jmp
lea
jl
push
lahf
lea
setl
jno
push
sets
lea
push
mov
movl
pusha
pushf
mov
mov
pushl
popl
pushf
pushf
push
pushl
ret
jge
sub
cmp
dec
inc
jle
or
test
enter
ljmp
out
jmp
pop
add
dec
push
sub
jl
lret
shl
adc
testl
sub
ds
xor
cmp
pop
push
sub
inc
cmp
jge
insl
lods
xchg
outsl
adc
fs
jge
jecxz
dec
adc
or
push
das
jnp
pop
lods
cmc
lods
sbb
add
pushf
pusha
pushf
lea
jmp
add
test
das
mov
int
or
test
dec
and
enter
add
rcll
push
es
sahf
shlb
movsl
sarl
rcl
sahf
xor
daa
pushf
sbb
inc
int
or
pop
sbb
es
sub
inc
into
mov
or
cli
push
std
out
cmp
sub
in
icebp
mov
cltd
out
adc
mov
lret
bound
adc
push
cmpsb
lock
sbbb
cwtl
mov
cmp
pusha
cmc
cmc
cmpb
pushf
push
pushf
call
pushf
lea
jae
clc
mov
stc
xor
mov
push
sbb
mov
pusha
xor
jmp
pop
popl
mov
lahf
fildll
lods
in
or
push
adc
clc
xorl
inc
test
vcvtpd2dqx
dec
loopne
xor
clc
sbb
sub
cmp
es
mov
pop
imull
dec
mov
pcmpgtb
or
inc
lahf
outsl
cmp
out
mov
pop
ss
in
and
sub
push
adc
fstps
cmpsb
aas
shlb
inc
bswap
bswap
movzwl
pusha
pushf
lea
not
bswap
lea
push
mov
lea
jp
pushf
pushf
lea
call
pusha
call
movl
call
movzbw
not
mov
lea
jmp
pusha
lea
call
call
pop
xor
int3
or
inc
or
jecxz
cmp
mov
roll
lahf
cmp
xchg
inc
addr16
or
mov
out
jp
sub
int
add
das
or
mov
hlt
mov
lret
xor
inc
call
or
cs
cmp
loopne
mov
loop
and
rclb
xchg
mov
mov
sahf
stos
and
int
xlat
mov
jmp
jnp
jg
imul
out
mov
das
mov
lods
jge
scas
pushf
mov
pop
sbb
int3
popf
call
jmp
mov
pushl
lea
jmp
push
mov
lahf
movsbw
lea
pusha
pusha
movl
push
pushf
pushl
popl
movb
push
movb
pushl
ret
lea
jne
pusha
pushf
pushl
bt
xor
push
push
lea
jmp
cmp
sbb
pop
gs
and
loop
mov
xchg
nop
data16
shlb
int3
lods
iret
xchg
lcall
mov
movsl
mov
mov
leave
repnz
in
scas
pop
shrb
mov
iret
jne
adc
lcall
xchg
popf
jp
pop
outsl
notl
sbb
push
xchg
cmp
push
jnp
js
pop
pushf
lods
or
and
cli
lods
icebp
outsb
push
or
dec
mov
popa
xor
add
aam
in
cs
sbb
mov
cmpsb
cmp
sarb
fbstp
add
jmp
neg
mov
pushf
pusha
pushf
call
jmp
lea
jmp
lea
call
call
test
notl
xor
lods
add
sub
mov
mov
adc
push
jecxz
cmp
fildll
jg
out
adcl
dec
inc
aad
lret
adc
out
sbb
adc
lahf
mov
mov
xor
dec
imul
mov
xor
das
cs
idivl
lahf
mov
mov
loop
pop
inc
popa
enter
minps
outsl
addr16
cmpsb
cmp
fwait
shr
xor
push
movsb
pushf
jmp
lret
fmuls
sbb
push
aad
mov
sbb
pop
cmpsl
cmova
or
std
cmp
inc
lds
mov
lret
mov
sbb
cmp
xchg
push
sarb
in
mul
icebp
movsb
cmp
mov
fdivl
sbb
repz
mov
adc
shrb
dec
push
insl
cmpsb
lods
mov
testl
addr16
cmp
lods
push
or
rcrl
or
mov
cmpl
push
push
xor
sub
jmp
mov
mov
fwait
testl
dec
or
cmp
cmc
lods
sbb
mov
mov
mov
mov
movw
lea
jmp
stc
mov
cmp
push
lea
ja
mov
pop
bswap
pusha
movzbw
call
lea
call
push
call
clc
lea
movb
sub
call
movsl
mov
dec
syscall
sti
jmp
and
dec
cmpsl
out
xchg
lods
mov
das
imull
mov
bound
xchg
out
stc
adc
mov
dec
jl
orl
fldl
push
in
in
cmc
out
fists
jle
pop
fbld
jno
sbbl
out
dec
cwtl
cmp
mov
pusha
add
push
jbe
pop
add
cmpsb
or
gs
mov
pushl
jmp
mov
pop
mov
stc
add
mov
pushf
pop
pop
push
push
pushl
ret
pusha
pushf
cmc
sub
movb
pushf
cmp
cmp
pushf
pushf
lea
ja
cmc
call
mov
xor
inc
dec
rorl
jno
cmp
mov
pop
mov
adc
out
std
outsb
sahf
jl
lods
addl
lods
dec
sti
lock
mov
or
test
push
or
movsb
cmp
push
push
mov
pop
sbb
sub
rorb
inc
mov
out
fidivrs
outsb
lret
xchg
bsf
sub
rcl
add
ror
lea
stc
stc
cmp
sub
call
push
push
pushf
pushf
lea
jmp
call
inc
test
test
test
not
pushf
cmp
shl
pushf
cmp
add
cmc
call
movl
call
movb
movl
pusha
movw
pushl
popl
mov
pushf
mov
pushl
ret
pusha
movb
movl
push
pushf
pushf
movl
movw
push
mov
pushl
lea
jmp
cmc
cmc
xor
add
pushf
test
pushl
pusha
or
lea
jne
je
jle
bswap
mov
mov
call
push
or
push
pop
add
psubsw
movsl
jae
jne
mov
cmp
mov
xorl
dec
push
add
gs
or
xchg
outsl
div
pop
sti
pushf
push
je
jb
outsb
cwtl
enter
les
sbb
lea
jne
mov
lahf
lea
bswap
mov
pushf
pusha
push
lea
jmp
push
push
movl
movb
pusha
pushf
movl
pushf
lea
jmp
lea
jnp
pusha
mov
movb
pushl
ret
add
leave
jg
cmp
dec
xchg
or
sbb
stos
or
adc
push
mov
and
lahf
fildll
push
pop
jnp
xchg
mov
inc
push
pop
jmp
repnz
xchg
outsl
xchg
out
int
in
add
dec
stos
mov
adc
out
mov
sub
push
mov
inc
mov
and
mov
adc
rclb
lock
mov
xchg
not
mov
call
lret
and
jno
das
movsl
add
sbb
xchg
sbb
dec
push
cmp
dec
jp
xchg
in
outsb
int3
cmp
mov
fcompl
stc
inc
loopne
cmp
and
push
ret
push
mov
ret
adc
sbb
arpl
adc
insl
dec
xchg
fwait
ret
movsb
fsubl
scas
pop
aaa
sub
sub
inc
push
mov
and
sub
mov
rcrl
sbb
pop
jle
dec
mov
int3
mov
and
lcall
stos
push
adc
cmp
inc
cld
cmp
mov
rolb
mov
sub
cmpsb
aaa
mov
pop
add
mov
jmp
xchg
lahf
mov
pushf
cwtl
setp
pop
mov
jmp
ror
pushf
clc
xor
push
stc
neg
movl
pushf
call
pop
pushf
pushf
pushf
push
movl
call
pushl
jmp
jmp
add
test
pushl
or
call
call
movzbw
pushf
pop
mov
movzbl
pushl
call
lea
jne
sar
call
bt
clc
call
xchg
jb
mov
insb
cs
in
daa
rorl
mov
rorb
out
inc
add
adc
cmovg
jnp
jb
xor
outsb
xchg
sbb
ror
inc
stc
lahf
inc
push
outsl
jae
fisttpl
ss
mov
call
dec
dec
dec
cs
insb
add
inc
and
xchg
nop
add
add
lea
ja
clc
sub
btc
lea
add
neg
cmc
sbb
setae
mov
bt
and
mov
cmp
stc
repnz
call
pusha
lea
jne
pushf
pushf
not
mov
lea
movzbw
push
not
mov
mov
bswap
not
cwtl
mov
setno
call
mov
jmp
call
pusha
push
pushf
not
test
cmc
push
cmp
neg
mov
ror
mov
bt
cmp
pushl
not
cmc
cmp
jmp
or
mov
ljmp
in
xchg
sub
rep
pop
mov
iret
sub
pop
xor
ret
shlb
jbe
jne
cmp
ficomps
pop
popf
out
lahf
ds
xchg
lods
in
test
pop
cmpsl
pusha
sahf
loop
xchg
call
cld
xorl
sbb
imul
mov
test
data16
mov
adc
cmpsb
xor
dec
stos
mov
mov
xor
mov
cmp
mov
sbb
outsb
stos
jbe
or
pop
mov
stos
cld
sbb
cmp
push
pop
push
push
push
push
dec
sbb
adc
sbb
pusha
jmp
sub
push
lea
shr
mov
pushf
cmpb
push
call
dec
xor
call
test
sub
not
pusha
mov
push
call
jbe
cmc
dec
dec
or
add
movsl
stos
out
or
out
dec
jne
addl
loope
fldenv
mov
mov
mov
pop
scas
and
xchg
pop
leave
mov
lcall
or
mov
ds
and
mov
jne
enter
mov
dec
add
lock
xchg
out
cli
jl
cmp
cld
movsb
mov
push
xor
out
cli
cmp
push
roll
sub
mov
mov
sbb
movsbw
push
xchg
mov
mov
jmp
call
xchg
jmp
cmp
bt
cmpb
movb
call
lds
es
imul
mov
mov
test
in
shrb
or
xlat
mov
sti
jmp
adc
fiaddl
cmp
mov
stos
inc
int
xor
pop
adc
loop
or
test
insb
dec
cmp
sbb
das
cld
call
adc
mov
cmc
jmp
pop
aad
xor
push
rcrb
out
hlt
mov
sub
mov
cld
cmpsb
lahf
mov
pusha
test
call
mov
neg
add
shl
inc
pushf
add
mov
call
cmp
pop
add
inc
shrb
push
push
outsb
jle
les
mov
lds
ret
jmp
std
mov
push
jmp
xchg
push
inc
test
jno
pop
jl
icebp
shlb
mov
jns
insb
rorb
jb
cmp
cmp
ss
sbb
pop
jo
popl
jbe
mov
rol
push
std
pop
push
mov
repz
sbb
dec
inc
sbb
imul
jecxz
into
inc
std
mov
sub
push
daa
inc
cmp
push
or
popf
lret
sub
imul
int3
sbb
fnsave
mov
jl
test
sbb
sbb
push
cmpsb
xchg
xchg
shl
arpl
sub
test
dec
mov
movsb
das
cmc
add
std
xor
ljmp
jg
adc
sahf
cmp
pop
xor
and
in
call
cmp
and
call
in
mov
lods
cld
decb
cmpsb
xor
pop
call
pushf
lea
jae
lea
lahf
pop
aas
sbb
pop
movzbl
pusha
bswap
mov
cmc
cmp
call
call
cld
pop
ja
dec
mov
inc
jns
xchg
add
and
push
sub
in
shlb
pop
sub
mov
into
or
and
xor
push
cld
fsubl
fimuls
mov
int
es
adc
push
sub
stos
inc
subb
mov
inc
ljmp
mov
in
mov
jno
push
add
test
push
xor
push
mov
gs
ja
scas
jmp
aad
popl
icebp
fwait
push
push
inc
push
xor
cs
insb
add
and
add
in
push
je
inc
push
jb
jl
mov
mov
test
mov
or
pop
sahf
pop
sarb
mov
lods
xor
jge
inc
insb
rorb
aas
xlat
mov
lods
jbe
adc
jo
loopne
pushf
clc
imul
in
push
fnstcw
cmp
add
jns
sbb
bt
mov
call
lea
pushl
pusha
jmp
mov
push
movw
pushl
ret
fldenv
adc
mov
xchg
dec
sarl
notl
add
loop
push
xor
mov
loopne
enter
int
jp
rcl
sub
ret
lods
xchg
shlb
pop
sahf
add
sarb
ret
loope
push
je
shlb
cwtl
mov
pop
sbb
repnz
outsb
xchg
data16
mov
and
fimuls
cmp
dec
ds
add
mov
xorl
daa
jmp
in
adc
and
fmull
lods
pop
sbb
str
push
call
add
js
push
cmp
call
call
je
cmp
lahf
addr16
leave
test
fwait
jmp
int
imul
lahf
pop
loop
pop
or
xor
aad
push
xchg
push
xchg
stos
xlat
leave
or
push
cmpsb
pop
dec
enter
in
mov
rol
lds
jno
jo
dec
icebp
jnp
js
insl
shr
xchg
push
xchg
xchg
loope
xlat
addl
sbb
cmpsb
das
icebp
jno
add
call
lds
cld
loopne
clc
ljmp
mov
lcall
nop
pop
xchg
push
inc
mov
mov
test
or
pusha
mov
add
jo
sub
xchg
mov
sbb
xor
fwait
int
mov
test
xlat
xchg
subl
pushf
ljmp
movw
pushl
lea
jmp
in
aas
adc
add
test
ljmp
push
mov
mov
jns
lea
in
sbb
addr16
lahf
rclb
jmp
and
ret
movsb
shlb
push
push
dec
in
das
mov
add
and
outsl
mov
xchg
cmpb
negl
cmp
sbbl
aam
ds
add
into
ss
rcll
loope
xchg
idiv
scas
mov
dec
xchg
gs
xchg
xchg
aam
shl
das
rcr
push
adc
mov
bswap
mov
push
sub
sub
bt
push
rcr
push
stc
push
rcl
rcl
push
inc
and
jmp
push
lea
jb
pushf
cmc
cmp
pushf
mov
lea
ja
adc
and
call
dec
push
push
inc
push
cmp
cs
insb
add
xchg
add
clc
call
lods
lock
dec
jle
push
or
in
and
add
fdivs
insb
les
and
sub
rorb
into
test
insl
iret
jmp
jmp
jp
fdivs
add
mov
jecxz
add
mov
popa
add
inc
psubd
jmp
push
sub
sub
sahf
xchg
test
fcmovu
mov
or
mov
jg
mov
adc
cli
dec
mov
aaa
addr16
ret
aad
mov
popf
sarb
mov
loopne
divl
push
outsl
repz
popa
xor
inc
dec
jo
cmp
filds
dec
imul
push
out
pop
aaa
add
sub
and
xbegin
fists
and
push
aas
mov
repz
rclb
or
xchg
and
push
fwait
adc
dec
sub
out
and
pop
arpl
ficoms
sbb
lea
je
xchg
movzbl
call
fld
sbb
aam
lcall
xchg
gs
imul
mov
mov
mov
loopne
cmp
mov
inc
in
push
xchg
stc
jb
scas
outsl
jnp
pop
scas
popf
xchg
icebp
lret
popa
stos
idivl
negl
cmpsb
sub
out
add
add
adc
add
sbb
add
test
add
add
add
add
add
add
add
call
add
pop
imul
insl
add
xor
movb
pushl
popl
mov
push
pushl
ret
pop
and
outsb
cmpsl
stc
test
loop
jl
sub
and
adc
popa
arpl
mov
or
lods
push
sub
mov
or
adc
dec
jne
sub
daa
dec
sub
sbb
adc
add
mov
pop
mulb
testb
fidivl
mov
mov
jmp
sahf
outsb
fisubs
loop
stc
jne
push
std
jge
inc
cmp
cwtl
pop
mov
pop
insl
mov
mov
cmpb
dec
lods
lea
or
add
cli
test
mov
mov
cmp
add
pop
jp
stos
add
pop
xor
jnp
mov
cmp
xchg
dec
sbb
iret
jb
jecxz
lock
or
out
hlt
aam
loop
jge
cmpsb
push
mov
sti
add
and
movsb
jecxz
test
add
sbb
lea
lock
out
inc
roll
js
icebp
pop
sbb
jb
sub
iret
sub
stc
loop
lahf
mov
or
icebp
test
jne
xchg
xor
xchg
popf
mov
xor
or
imul
push
sbb
pop
faddp
into
repz
mov
sarl
pop
xchg
xor
xor
push
cmp
pop
jle
aam
jo
adc
sbb
movl
movb
pushf
mov
pusha
lea
jmp
stc
pusha
cmpb
call
setb
mov
movb
mov
push
mov
lea
jmp
pop
pop
out
outsl
bound
pusha
mov
scas
ljmp
jo
push
out
insb
cmp
leave
mov
pop
or
dec
incb
fnsave
insl
test
sarb
int3
jle
arpl
sbb
add
sub
arpl
call
sbb
rcr
aam
mov
mov
dec
fdivrs
icebp
dec
mov
vpmacsww
rcrl
push
mov
jns
fsubrs
mov
sahf
shlb
jmp
inc
and
push
mov
sub
push
fcomps
rcrl
inc
mov
pop
mov
mov
mov
push
xlat
sti
hlt
notl
pop
mov
in
and
adc
ja
inc
pop
sub
sub
and
inc
rorb
sub
jnp
imul
pop
adc
dec
into
jo
outsl
mov
xchg
shl
cmp
sub
jo
mov
sbb
adc
dec
mov
dec
fldcw
dec
xor
and
fst
stos
add
push
fwait
and
ss
jbe
adc
push
xchg
sbb
jae
push
cs
mov
mov
lock
jp
inc
call
cmpsb
sub
setg
mov
lea
jp
bswap
movsbw
pop
mov
pop
not
pop
pushf
call
sbb
mov
push
imul
push
mov
xchg
mov
push
xchg
test
shr
gs
mov
repnz
xchg
bound
sbbl
inc
fs
jle
sub
and
pop
lret
jge
iret
mov
outsb
push
pop
imul
divb
fs
scas
movsl
cmovge
xchg
out
mov
cmp
repnz
lcall
sub
push
mov
lahf
inc
and
mov
fsubrs
cmpsb
sub
xchg
hlt
out
cmp
ss
xor
cs
mov
push
jl
add
sbb
and
je
cmp
jns
push
cmp
fldz
ss
cmpsl
cmpsb
inc
xchg
jo
test
inc
xchg
ss
or
psubw
sub
pop
movsb
sub
and
mov
gs
jp
jmp
shll
add
inc
test
add
pusha
mov
dec
cmp
push
dec
xchg
sbb
das
fisubl
scas
add
test
ds
lcall
sti
pand
mov
roll
js
pop
ficomps
sub
mov
test
push
or
push
dec
test
push
push
ret
jp
inc
mov
jmp
hlt
fdivs
int3
cli
movsb
pop
sbb
call
clc
bt
mov
cmc
cmp
push
pushl
lea
jb
pushf
jmp
mov
or
mov
cs
pop
pop
mov
xchg
or
jae
jae
daa
jecxz
lea
jae
addl
lods
sub
xchg
jne
popf
lods
imul
std
cmp
jno
fs
loope
outsl
pop
xor
pop
push
fsubl
jge
mov
and
sub
xor
push
popl
sarl
push
jmp
cmp
push
add
inc
and
pop
xchg
cmp
push
outsb
cmp
cmpsb
es
push
and
add
add
and
sub
xor
and
jge
call
jns
mov
imul
and
cmc
stc
xchg
mov
dec
add
lahf
ljmp
notb
stos
outsl
or
outsb
sbb
test
push
hlt
int
push
loope
push
add
imul
push
xchg
js
xchg
popf
std
sbb
sub
fbld
call
and
aas
add
popa
pop
sub
push
mov
push
es
sub
push
mov
pusha
inc
ret
add
dec
mov
fldt
sbb
setae
add
sar
test
mov
test
cmp
clc
cmp
cmp
call
or
inc
out
out
push
sub
pop
jbe
dec
adc
data16
sahf
je
mov
out
pop
xor
lahf
fisubrs
cmpb
adc
push
mov
xchg
data16
xor
sti
scas
fwait
in
cmpl
mov
cmp
imul
sub
add
or
das
dec
sub
or
enter
mov
call
sbb
not
add
jmp
mov
pushf
pushl
xchg
push
call
jp
lds
loope
dec
pop
pop
mov
inc
pop
inc
dec
pop
rorl
lret
mov
ret
mov
mov
pop
and
repnz
ds
or
imul
dec
mov
test
pop
call
lret
mov
xorb
dec
pop
outsb
or
ja
cmpsb
and
pop
mov
and
call
adc
add
call
pushf
jmp
pusha
stc
pushf
jmp
lea
je
jmp
lea
ja
call
push
call
add
add
call
mov
mov
bswap
pop
pusha
pushl
ret
lea
jb
mov
pushf
pusha
pusha
lea
jmp
lea
call
call
cmp
xchg
mov
dec
fdivr
xchg
jp
faddl
mov
cmp
jnp
ss
pop
inc
xchg
lods
push
mov
mov
les
push
sbb
adc
jle
mov
xchg
shlb
sub
sbb
or
pop
test
outsb
or
ja
sbb
cmpsl
iret
mov
xchg
scas
icebp
pop
test
fstps
inc
jno
cmpsb
fnstenv
xchg
mov
psrlq
sub
mov
and
pop
sbb
xchg
and
cs
sub
sub
jbe
call
ret
call
ret
jno
test
push
loopne
cli
cmp
fildl
or
mov
jg
fadd
and
nop
ja
pusha
insb
lock
hlt
adcb
nop
push
xchg
fiadds
and
and
mov
add
lea
push
xor
jecxz
and
movsb
or
xor
nop
ja
or
movsb
pushf
loopne
and
enter
or
mov
cmpsb
mov
outsb
mov
cltd
push
jmp
jl
clc
cs
pop
push
movsb
sub
add
sbb
and
inc
mov
in
scas
xchg
mov
stos
fsubs
insl
ret
test
cmc
imul
xchg
call
enter
inc
sub
inc
fnstsw
fwait
jp
loopne
ss
dec
mov
jmp
iret
scas
outsl
push
aas
faddp
and
xchg
orl
sti
or
inc
cmp
or
and
sbb
mov
notb
sti
out
sarl
xchg
pop
jne
cmp
mov
mov
jecxz
jnp
xchg
mov
aam
std
stc
adc
mov
mov
mov
cli
xor
jae
mov
into
and
add
and
sti
adc
jle
push
push
xchg
xchg
sub
cmp
rol
into
xchg
test
sub
xchg
xchg
mov
cmpsb
and
push
lea
bswap
movzbl
movzwl
mov
pusha
lea
bswap
pusha
mov
pushf
call
lea
pusha
mov
lea
call
push
pusha
pushf
xchg
pushl
lea
jae
push
lahf
movzbw
xchg
lea
pushf
pop
call
mov
pusha
movb
push
lea
jb
sub
shld
cmp
movsbl
cwtl
call
push
mov
sti
sub
add
mov
sti
inc
outsb
or
movsb
sub
sti
repnz
dec
sub
dec
xor
inc
outsb
lea
mov
out
leave
push
sub
push
cmpsl
and
or
xchg
xor
pop
popa
pop
mov
sub
sub
adc
xchg
mov
icebp
xchg
xchg
in
push
cmp
dec
icebp
out
aad
out
push
xlat
inc
push
mov
xlat
int
inc
out
in
pop
mov
xor
imul
add
mov
sub
adc
roll
push
arpl
or
adc
sbb
test
bt
pushl
popl
cmc
cmp
mov
lea
ja
sbb
test
sub
shrd
btr
add
cmp
neg
push
mov
stc
mov
jmp
push
movl
push
pushl
popl
mov
pushl
ret
bt
call
and
push
adc
xchg
fadds
cld
outsb
sub
jp
frstor
mov
into
dec
outsl
xor
push
insl
in
gs
lock
pop
mov
mov
inc
or
adc
xchg
mov
mov
out
mov
xchg
cmpsb
and
dec
sbb
mov
popf
stos
and
inc
mov
lock
ljmp
push
int
mov
jnp
xchg
rorb
mov
neg
mov
jle
jae
or
cmp
sbb
stos
les
cwtl
mov
js
sub
int
cmp
cmp
ja
stos
push
std
sub
scas
pop
lret
testl
in
mov
cmpsl
repz
sti
inc
add
loopne
lods
cmp
fsubp
je
mov
jmp
jo
pop
or
fisubrl
mov
rclb
out
dec
lea
aam
stc
adc
dec
dec
pop
push
jnp
lock
out
imul
mov
push
cmpsb
int3
and
pop
pop
mov
icebp
pop
inc
adc
into
call
sbb
add
add
lret
add
add
add
add
add
add
mov
add
add
add
add
add
mov
jnp
gs
sbb
lret
loop
ss
test
and
ljmp
mov
sbb
sbb
mov
ds
sbb
mov
and
inc
movsl
into
sub
iret
add
les
fwait
in
mov
xorl
popf
fmuls
popa
add
push
daa
push
incb
mov
add
xchg
push
cmp
and
inc
out
sub
push
mov
mov
loop
xor
cmp
out
gs
adc
xchg
outsl
outsb
push
inc
nop
pop
jbe
pop
pop
and
test
push
cmp
adc
xlat
mov
sub
repnz
xor
and
negb
xlat
shll
xor
xchg
mov
lahf
jmp
in
pop
ret
fimull
lret
and
cmc
nop
pushf
lock
mov
sub
mov
mov
inc
sbb
pop
hlt
push
loopne
je
mov
push
add
scas
cmp
fsub
push
pushl
adc
in
stc
jp
push
nop
lods
jae
adc
or
and
incl
fimull
mov
xlat
and
sub
mov
inc
inc
mov
test
pop
pusha
add
dec
fildl
orl
inc
sbb
xchg
push
test
test
inc
xchg
fisttps
xor
insl
jnp
nop
lods
shlb
cmp
mov
aas
cmp
cmp
mov
outsb
or
ret
adc
dec
dec
inc
jg
enter
inc
adc
cmp
adcb
mov
out
inc
push
pop
addr16
mov
cmp
cmpsb
mov
and
clc
ds
clc
int
mov
pop
in
jnp
out
sub
gs
lret
fincstp
arpl
aam
jne
nop
aas
jb
js
rcll
mov
mov
xor
fidivrs
mov
or
xor
lret
in
iret
pop
mov
outsl
in
ljmp
aaa
repz
sbb
pop
in
sahf
dec
sub
int3
adc
popl
and
jno
jle
inc
jno
and
jbe
cltd
cmp
aam
lret
xor
lcall
lock
pop
ss
outsl
movsb
movsb
sbb
cmp
dec
sti
dec
push
cmp
ljmp
jbe
adc
andl
sbb
orl
push
icebp
inc
push
mov
icebp
enter
and
das
fnstcw
stos
lds
inc
pop
xchg
jns
loop
push
inc
jecxz
ljmp
dec
sub
fcos
inc
sbb
loop
xchg
add
jge
out
jmp
lods
and
int3
and
mov
ljmp
in
enter
jecxz
push
shrb
sbb
push
gs
jecxz
test
cmp
pop
push
and
push
jmp
loope
dec
jg
or
mov
test
mov
ss
mov
ja
fnop
js
cltd
jno
pop
in
mov
aaa
negl
imul
sbb
cmp
sub
push
adc
ds
xor
mov
or
leave
movw
clc
rorb
rol
leave
or
adc
aad
shll
and
ret
js
pop
popa
leave
shlb
mov
into
and
xor
daa
add
cld
sub
roll
scas
sbb
jge
mov
inc
add
add
sub
lea
sbb
mov
cmpb
and
sub
and
sub
mov
mov
pop
test
sbb
aam
sub
add
cmp
shrb
scas
lret
outsb
mov
addl
or
sbb
adc
insl
inc
sbb
es
ljmp
aad
mov
push
xchg
ljmp
sub
and
adc
add
push
test
pop
xor
cli
pop
mov
imul
fdivrs
ret
mov
or
int3
xchg
sbb
repz
mov
outsb
fidivrs
lea
sbb
jge
xor
jno
sti
cwtl
insb
mov
or
jbe
outsb
stos
inc
stc
iret
add
cltd
jge
cld
inc
mov
movhps
cmpsb
fwait
inc
ret
into
imul
jecxz
test
std
add
ret
push
pop
outsl
scas
adc
icebp
push
sbb
pop
pop
jecxz
mov
std
call
lods
icebp
sbb
push
pcmpeqw
mov
pop
adc
fs
xor
aas
in
in
inc
mov
dec
shrb
arpl
sbb
gs
fsubrs
fcomps
dec
dec
imul
sub
lcall
cli
aas
or
icebp
lret
std
mov
push
addb
mov
mov
sbb
pop
nop
pushf
adc
in
xchg
test
sub
mov
pop
into
mov
int
push
mov
ficomps
xlat
cli
rorb
nop
stos
xor
cmc
test
subl
sub
aas
xor
int3
data16
fbstp
add
into
fucom
je
ret
mov
mov
push
inc
inc
pop
jnp
mov
sub
pop
fsubrs
add
js
iret
gs
push
pop
shll
enter
mov
fisttps
repz
in
test
or
lea
in
bound
jmp
xchg
loope
shlb
and
iret
mov
lods
and
jnp
lea
stos
mov
cld
imul
cmp
psrad
dec
test
xchg
xor
pop
lds
clc
cmp
das
push
insl
out
push
xor
jp
sbb
jns
es
into
pop
or
pop
xor
adc
and
or
xor
mov
xchg
jns
lods
xchg
adc
inc
push
test
cltd
push
inc
add
aas
jmp
fisubs
stos
xchg
iret
fucom
add
pop
mov
mov
clc
jbe
sti
add
rclb
dec
sub
dec
and
add
xor
and
push
in
cmpsb
scas
cmpsb
adc
repz
pushf
push
mov
xchg
in
inc
mov
jecxz
jl
cmp
mov
divb
bound
fs
rcrb
lods
call
or
pop
mov
cmp
mov
lret
push
mov
pop
gs
fsubr
das
es
aad
sub
dec
pop
mov
adcl
sbb
scas
jg
pop
or
push
subb
mov
mov
sbb
pop
imul
repnz
inc
cmpsb
inc
add
jno
dec
mov
cmpsl
sub
push
jns
test
xchg
sar
push
daa
daa
inc
sbb
insb
mov
pop
mov
popf
popf
ljmp
xor
adcl
sub
and
daa
int3
add
ss
jle
xor
outsl
arpl
cmp
out
lds
inc
sti
sbb
movsb
or
xor
xchg
push
mov
mov
mov
add
and
sub
movsb
xor
push
les
dec
sbb
nop
mov
scas
ja
mov
sbb
and
fmuls
sub
movsl
xor
push
jb
mov
cmp
cmpsl
pushf
push
movb
shrl
cmp
push
mov
idivb
mov
rorb
int
mov
loopne
jmp
icebp
sub
movsl
adc
xor
add
xchg
arpl
sti
xchg
xor
cmp
call
insb
rolb
push
fisttpl
xchg
test
push
xor
adc
cltd
cmpb
mov
jo
jne
jnp
mov
pusha
pop
sbb
mov
aam
pop
bound
pop
push
mov
in
lock
fwait
inc
insb
insb
out
loopne
xor
and
jbe
enter
or
cmp
lret
orl
fsubl
inc
mov
inc
or
xlat
fdivl
mov
jmp
test
iret
jno
movsl
adc
call
mull
je
shr
in
sti
test
jmp
insl
in
jae
out
rclb
push
cmc
insl
xor
pop
mov
and
mov
icebp
inc
inc
jle
jne
adc
sahf
cmp
jle
xchg
fdivrp
inc
aaa
movsb
stos
test
cltd
enter
lcall
mov
insb
cmc
pushf
mov
and
jmp
fwait
ds
adc
inc
gs
lcall
js
mov
jecxz
cmc
std
inc
loopne
push
movsl
inc
testl
lock
inc
fsubs
sbb
mov
into
call
iret
pop
adc
fcmovb
mov
pop
inc
mov
ds
pop
popf
add
inc
jns
pop
and
int3
jne
mov
pop
cmp
push
idivb
call
lock
fmuls
mov
mov
mov
cmpb
clc
xor
dec
es
cmp
rolb
lcall
iret
pop
stos
rcrb
mov
repnz
push
and
aas
mov
fs
clc
add
mov
call
enter
xor
push
inc
push
jno
in
jp
sub
xchg
shrb
ret
subl
imul
pop
stc
js
pop
mov
cmp
inc
enter
pop
repnz
mov
imul
imull
daa
dec
pop
addr16
dec
loope
aad
stc
and
inc
fs
mov
scas
das
sbb
lods
aam
leave
pop
aad
mov
pop
add
inc
shll
stos
call
or
lret
sbb
cmp
xor
negl
in
dec
stos
ss
rclb
or
mov
out
xor
clc
cmp
push
sbb
loop,pn
and
orl
outsl
mov
cmpsb
pop
nop
mov
adc
inc
bndldx
test
decb
mov
lret
and
aad
push
fcompl
shrb
lahf
jno
out
and
imul
jbe
inc
lea
adc
jl
inc
inc
cltd
jecxz
pop
fsubl
cmp
mov
jmp
inc
rcll
fcoml
in
fwait
icebp
ret
out
sbb
adc
stos
pop
dec
mov
mov
fiaddl
cmp
dec
movsl
push
andl
pop
loope
ret
ds
sub
add
mov
shrd
mov
push
pushl
stc
test
shr
test
test
cmp
pushf
pusha
call
or
mov
mov
cli
mov
movsb
mov
xchg
insb
jmp
clc
aas
pop
mov
neg
std
clc
fimuls
inc
lret
adcb
outsb
leave
sbb
cs
mov
out
and
sbb
inc
out
lahf
jnp
lods
xchg
sbb
stc
mov
arpl
push
clc
inc
and
int
xlat
leave
stc
stos
in
jecxz
sub
pop
loope
sbb
mov
scas
sbb
inc
xor
add
adc
insl
ja
in
push
call
jmp
imul
sahf
out
pushf
test
lods
pushfw
lods
addl
test
sub
mov
xchg
js
mov
ds
jbe
or
sti
out
mov
and
mov
push
cmp
dec
stos
sub
fcmovu
int3
stos
jbe
pop
pop
pop
add
push
or
or
adc
scas
sbb
inc
cmpsb
shlb
mov
addb
out
stos
lret
das
xchg
arpl
test
ret
imul
sbb
jl
xchg
movsb
popa
repz
dec
mov
pop
mov
cmp
dec
xor
out
sub
push
xchg
cli
movsb
pextrw
fwait
addr16
sbb
push
dec
ljmp
fdivrl
cmpsb
adc
aad
mov
loopne
mov
mov
jbe
xchg
shlb
aam
jg
and
and
outsl
sub
dec
rcll
pop
ja
adc
dec
pop
push
in
clc
or
bound
jl
movsl
mov
push
inc
cwtl
decb
imul
jae
and
jns
pop
xchg
insl
movsl
imul
cmpsb
adc
je
jmp
divl
xchg
lahf
xchg
jae
jecxz
sbb
std
sbbl
imul
push
xor
out
or
imul
add
pop
lods
mov
insl
xchg
popl
dec
stos
push
cmp
jmp
dec
or
mov
in
xchg
mov
in
and
fnstsw
popf
mov
xchg
bound
dec
out
sahf
mov
pop
scas
stc
xor
jg
fldl
movsb
adc
mov
xchg
cmpsl
and
cmc
imul
leave
sti
aad
sbb
bswap
movl
push
lahf
pushf
cwtl
lea
pusha
movb
movl
jmp
stc
rcr
mov
cmp
shl
push
jmp
test
call
dec
add
cmp
mov
cmp
test
pusha
test
movb
pusha
call
je
loopne
lods
or
add
lcall
cmp
bound
lds
les
pop
outsl
and
xchg
in
leave
aad
negl
jmp
jae
cltd
jge
push
fsubrp
shrl
jg
pop
scas
push
or
mov
into
and
es
aas
clc
mov
pop
push
push
or
aaa
adc
pushl
popl
movb
push
push
pushf
pushl
ret
pop
adc
rcl
lahf
sbb
sbb
push
and
pusha
xchg
into
xchg
pop
cmp
cmp
sbb
movsbl
movsb
cmp
push
pushf
aas
aad
jp
ja
in
aaa
icebp
xchg
aad
std
mov
inc
and
adc
fs
add
movb
movl
push
movl
mov
lea
jmp
decb
adc
bound
mov
int
stos
lret
add
cli
add
shl
adc
add
mov
clc
out
lcall
xchg
pop
xchg
sbb
jno
dec
dec
dec
bound
movsl
gs
and
mov
xor
dec
test
and
aad
sub
or
dec
xor
xor
rcrl
jns
inc
inc
jge
push
push
jg
pop
cmp
repz
jb
mov
enter
repz
into
add
cmp
push
mov
scas
fldcw
data16
and
movsb
ds
dec
repz
je
addr16
or
dec
cmpsl
sbb
xchg
pop
shll
jno
cmp
sti
mov
push
in
xchg
push
or
adc
jmp
rcrb
in
sbb
bound
jecxz
call
jmp
sti
cmp
aas
jg
dec
sbb
sbb
push
lock
std
std
notl
ret
jb
out
lret
lea
insl
rcrl
pop
inc
ss
mov
jb
in
fmuls
jmp
aam
push
int3
add
ljmp
movl
add
inc
push
xor
in
xchg
push
jbe
adc
and
xchg
cmp
ret
enter
fmull
std
pusha
or
call
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
pusha
lea
je
mov
mov
call
mov
pushl
push
movsbw
mov
lea
movl
pusha
xchg
pop
call
push
stc
adc
mov
sub
js
dec
xorb
xchg
mov
push
test
sub
fidivrl
nop
in
lock
je
sbb
mov
lock
sbb
mov
out
arpl
push
int3
rcr
xchg
imul
dec
xchg
xlat
cltd
cmpsl
or
imul
sbb
lea
je
pusha
pushf
lea
jmp
test
bt
clc
jmp
mov
seta
jmp
pushf
call
or
mov
xor
pusha
mov
jno
in
dec
or
ljmp
mov
pop
xor
adc
add
push
mov
ljmp
les
lods
enter
jo
pop
dec
test
xchg
cmp
fcoml
or
sti
push
push
mov
js
bndldx
cmp
enter
xor
sbb
subb
cmpsl
jb
iret
dec
pop
mov
sahf
in
jo
ss
lret
push
mov
stos
xchg
ret
xor
dec
pusha
sahf
pop
xchg
dec
xchg
movsl
inc
add
jp
push
and
hlt
lahf
jmp
aam
cs
enter
insl
mov
out
aaa
nop
stos
dec
inc
nop
add
jbe
gs
div
icebp
test
jmp
inc
fldcw
inc
addr16
test
test
sub
sysexit
add
mov
sbb
test
sbb
sbb
jae
int3
jle
js
ret
pop
pop
shrl
test
push
jmp
rcll
out
jge
jns
jecxz
mov
cmp
cwtl
mov
adc
jl
and
dec
pop
data16
cmp
xchg
ljmp
pop
xchg
bswap
cwtl
pushf
pushf
movl
pusha
call
push
call
call
jmp
cwtl
in
xchg
jae
popf
and
out
daa
popa
leave
andl
aaa
fwait
dec
mov
lds
add
pop
movsb
fldl
and
je
fsubrs
xor
add
scas
leave
mov
ds
or
aaa
inc
movsb
inc
pop
imull
scas
loop
inc
mov
push
popf
gs
nop
sub
shlb
insl
mov
mov
inc
adc
mov
das
or
or
or
add
pusha
not
mov
pushl
jmp
mov
pushf
pushl
cmc
pushf
test
jmp
pusha
lea
jbe
movsbw
sub
xadd
jmp
cwtl
lahf
movzbw
movzbw
mov
call
xor
and
mov
xchg
aad
lds
out
loope
push
scas
xchg
or
in
fisttpll
fisttps
cmp
pop
and
fdivrl
mov
pop
cli
and
xor
add
subl
aaa
pop
dec
sub
jnp
push
push
or
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
int3
adc
add
scas
inc
dec
js
mov
lods
out
addr16
iret
xchg
jae
push
inc
pop
das
push
or
jge
fwait
or
push
push
inc
inc
stos
jecxz
adc
arpl
push
cmp
lock
mov
mov
sub
push
loopne
cmpsl
push
fistpl
iret
test
pop
out
imul
aam
popf
push
dec
sub
out
and
sub
cmp
loop
call
xor
call
or
pushl
ret
push
mov
inc
mov
lahf
jnp
inc
popa
add
ss
push
aaa
and
push
xlat
and
rorb
push
inc
mov
and
mov
dec
in
push
cs
int
pop
outsl
dec
call
incl
mov
lcall
lahf
xor
lret
cmc
mov
and
cwtl
enter
fbstp
add
mov
ja
push
ds
inc
scas
cmp
lock
sub
adc
fisubs
insb
ss
cmp
in
into
mov
cli
mov
cmpsb
or
in
add
aam
lea
lea
pusha
call
test
addr16
stc
pushf
or
mov
sbb
jbe
cmp
xchg
sub
into
pushf
loopne
fldpi
daa
push
dec
pop
je
pop
addl
es
aam
add
sub
fsubs
dec
icebp
cmp
data16
or
arpl
rcrl
and
mov
adcl
leave
inc
xchg
loopne
xor
pop
cmp
imul
cs
fcmovbe
mov
push
lock
dec
movsl
cmp
pop
add
std
xor
lahf
gs
lret
cmp
or
insb
mov
and
jmp
ja
jmp
fsubr
cmp
push
into
sub
dec
and
pop
adc
dec
and
ljmp
in
bound
lahf
xor
test
dec
ret
test
cmp
push
sub
shll
loopne
push
cmc
push
xchg
xor
mov
push
rcrb
or
stos
stc
ret
inc
call
and
pop
cmpsl
adc
push
popf
andnps
repnz
push
adc
cltd
push
push
dec
mov
aam
in
xorb
dec
or
sbb
xor
clc
in
jg
jl
daa
pop
icebp
pop
insl
aaa
icebp
lds
sti
and
inc
jnp
sub
sub
daa
mov
push
push
mov
iret
sbb
add
arpl
jge
dec
xor
sub
cs
sub
movsl
pop
aas
inc
mov
or
xchg
inc
jecxz
movsl
fisubs
push
lods
rcl
xchg
pop
nop
loopne
notb
jp
dec
loop
inc
and
aas
add
inc
sub
pop
out
aas
sub
dec
outsb
dec
gs
fdiv
mov
lcall
mov
fs
ja
clc
pushf
imul
jmp
setb
mov
call
repz
pushf
call
pop
ss
repz
xchg
scas
push
aam
mulb
aam
add
or
stos
lahf
insb
push
adc
sti
imulb
pop
mov
mov
test
iret
cmp
outsb
add
fcoml
call
lret
aas
ds
in
scas
hlt
outsl
xor
mov
mov
cmp
xor
xchg
jl
dec
sub
sub
sbb
lea
ret
push
sub
and
dec
or
adc
xchg
inc
out
insb
mov
push
sub
sub
or
popf
sub
bswap
dec
add
or
in
add
arpl
fstpt
ja
adc
pop
sub
lcall
iret
and
jmp
iret
movsl
iret
add
or
call
call
test
mov
movsbl
movsbw
movsbw
mov
mov
pop
pusha
mov
pushf
movw
call
call
nop
rcll
pop
mov
insl
push
pop
imul
or
rcrl
push
push
aas
sub
xlat
xchg
dec
adc
sbb
push
cmp
cmp
fsts
add
push
push
mov
or
push
jmp
inc
lahf
add
dec
lds
cmp
out
mov
add
add
fwait
clc
inc
inc
pop
fsubrs
cmp
loopne
lods
fstpl
adc
mov
pop
push
xchg
cwtl
inc
mov
dec
in
or
add
inc
sbb
mov
icebp
mov
sbb
pusha
pushf
movl
mov
pushf
mov
pushf
movl
pusha
mov
pushl
push
lea
jmp
setb
mov
movb
mov
mov
push
movl
pushf
lea
jmp
lea
jne
inc
shl
pusha
mov
pushf
cmp
pusha
lea
ja
push
setle
mov
mov
mov
movb
mov
mov
not
lea
pusha
push
mov
pop
pushl
mov
jmp
mov
pushf
pushf
mov
jmp
pusha
lea
jne
movzbl
cwtl
lea
movzbw
movb
push
movzbl
pop
bswap
push
push
bswap
lea
pushf
jmp
lock
popf
xchg
sbb
iret
aad
js
ret
pushf
cmp
xor
outsb
lcall
mov
sbb
sti
outsl
xor
out
cld
in
push
jne
and
mov
mov
pop
shll
fdivrs
ret
int3
jae
inc
sbb
imul
fdivrp
outsl
sub
inc
mov
dec
imul
mov
jmp
xorb
sub
push
push
scas
mov
xor
cmp
outsl
imul
xchg
jmp
pusha
xchg
cmp
mov
jmp
inc
fildl
xlat
lret
stos
push
cmc
xor
inc
xchg
cmp
mov
mov
adc
inc
or
xor
push
mov
inc
mov
ljmp
push
cmc
jge
rcr
scas
add
out
lcall
adc
popf
or
std
aaa
ret
lock
push
lahf
xchg
adc
and
xchg
xchg
in
ret
mov
jmp
cmpsb
add
cmc
jmp
jg
pop
ja
popa
and
out
jl
fadds
stos
mov
filds
add
lret
jecxz
add
dec
xchg
dec
ret
lahf
arpl
mov
pop
arpl
add
jae
mov
fs
and
and
xorl
jecxz
rcl
inc
jo
dec
std
sti
ret
lcall
leave
xor
nop
scas
stc
stos
rolb
mov
jne
dec
push
add
push
in
std
mov
pop
jbe
dec
mov
sbb
push
push
lea
jne
jmp
adc
push
ss
jne
jecxz
jno
addr16
cmpsl
insl
test
repnz
out
xchg
mov
cmp
mov
add
add
fidivrl
inc
rcl
xchg
jbe
fwait
loop
lea
push
mov
imul
pop
mov
sub
mov
imul
mov
dec
sbb
adc
aas
adc
push
test
out
negb
loop
inc
loop
mov
cmpsb
add
mov
mov
mov
repz
pushl
aad
lahf
fiadds
in
loopne
scas
inc
mov
adc
out
das
xor
jecxz
adc
ja
add
sahf
int
outsb
cwtl
xor
push
mov
cltd
inc
inc
xor
or
in
repz
push
test
out
mov
mov
cmp
push
insb
cmp
lock
add
movsl
jnp
sub
lea
mov
xor
dec
pop
jae
sbb
lea
call
bt
stc
test
push
clc
cmp
push
call
std
add
fdivr
mov
divb
repz
test
cmp
movsb
sbb
std
cmpsb
bound
mov
dec
cmp
andb
jo
inc
mov
call
cmp
lcall
mov
jb
or
add
outsl
loop
mov
es
jno
out
rcr
mov
test
jmp
push
push
or
outsb
lea
hlt
hlt
or
jo
push
push
and
std
mov
aas
xchg
icebp
fdivrs
or
movsb
imul
mov
lret
xchg
imul
and
xor
jg
outsl
jecxz
mov
into
xor
add
mov
std
idivb
or
in
jl
push
test
xor
in
push
mov
jns
pop
scas
mov
sub
rorl
and
pop
add
sti
jno
fdivs
cltd
cmpsl
test
mov
and
and
ljmp
lcall
sbb
jb
arpl
or
ljmp
filds
mov
pop
fldenv
xchg
push
mov
arpl
mov
push
mov
popa
clc
cmc
mov
cmp
and
aas
stc
sbb
mov
adc
pop
xor
mov
cmp
jno
jno
sub
mov
sbb
int3
lods
hlt
iret
mov
dec
inc
jle
mov
xor
pop
int
cs
icebp
add
push
push
imul
loopne
outsb
cmpsl
cmpsb
add
push
test
mov
push
fmul
mov
mov
sbb
cli
aaa
jmp
out
movsl
and
sbb
pop
add
inc
je
or
push
out
fs
lcall
popa
push
dec
test
enter
int
add
orb
adc
out
cltd
popl
gs
push
add
push
adc
pop
or
jns
mov
sbb
mov
add
mov
lock
or
add
ret
mov
std
jmp
test
push
xchg
inc
inc
jle
sub
pop
arpl
ljmp
lods
mov
xor
inc
jl
add
js
mov
or
loope
mov
lret
xchg
dec
adc
push
push
jmp
hlt
or
out
or
mov
push
jnp
out
and
imul
and
pop
mov
pop
or
cld
fcmovnu
mov
test
mov
mov
add
add
pop
arpl
fstps
testl
push
int3
popa
outsb
lods
push
ljmp
or
dec
mov
ss
ret
ficoml
add
sbb
mov
jg
sbb
testb
push
test
fmuls
jnp
call
iret
and
dec
cld
rcrl
cmpsb
test
out
lret
outsb
pop
add
mov
mov
or
mov
fstenv
mov
dec
pop
sub
popa
mov
clc
pop
outsl
pop
sbb
mov
mov
or
mov
stc
or
jge
sub
push
movsb
out
fldenv
or
lea
cmc
push
mov
dec
lods
mov
dec
pop
je
test
or
mov
mov
pop
mov
push
insl
int3
fistps
rcrb
mov
adc
clc
lret
push
fisubrl
lcall
imul
adc
add
mov
fisubs
push
mov
fldlg2
jns
push
add
pushf
fcmove
sbb
mov
inc
adc
jne
fimuls
in
frstor
mov
or
dec
daa
imul
popf
pop
sbb
fimull
cwtl
fistpll
std
faddl
icebp
dec
mov
lcall
ret
inc
pop
add
lahf
inc
lret
inc
int
bound
jne
add
inc
cmp
and
inc
scas
push
jb
pop
bound
jbe,pn
leave
xor
inc
jo
aaa
out
mov
xor
inc
lahf
xchg
inc
sbb
imulb
and
movsb
scas
ss
cs
jne
lock
out
xor
scas
inc
lods
mov
ljmp
data16
out
loope
inc
mov
shrl
adc
mov
in
sbb
sahf
idivb
test
sub
xchg
lretw
mov
adc
or
sub
mov
or
data16
mov
lds
xchg
cli
ss
popa
in
lods
adc
leave
and
loopne
xchg
adc
mov
or
xchg
pop
cmpsl
dec
iret
out
jp
daa
push
shlb
jb
pop
cmp
imul
or
repnz
popf
push
pushf
add
or
in
repnz
mov
adc
icebp
fists
mov
ror
sub
in
subl
cmp
daa
fisubl
cmp
mov
stos
fcomps
mov
push
lcall
push
leave
lods
xor
in
and
mov
mov
cmp
push
cmc
cld
xchg
cmp
pop
int
mov
lret
and
sbb
xor
cwtl
out
push
mov
dec
dec
sub
dec
jbe
mov
lds
lahf
mov
pop
aaa
and
add
int
pop
scas
push
ljmp
shrb
add
pop
sbb
inc
xchg
sub
pslld
add
shrl
cmp
add
adc
jb
cltd
mov
mov
ds
test
add
cmp
and
call
test
pop
add
mov
xchg
nop
pop
add
xchg
aam
jmp
mov
add
pushf
mov
loopne
mov
lcall
jnp
dec
je
jno
aas
mov
push
lods
cmp
adc
aas
jmp
sub
lret
dec
push
pop
test
movsl
hlt
fsubp
inc
fldt
stos
mov
cmp
js
cmp
adc
add
xchg
icebp
mov
mov
bound
sbb
jns
shll
push
sbb
xor
test
sbb
mov
inc
sbb
test
mov
ror
imul
in
jle
cltd
in
xor
sub
ret
dec
or
fcmove
rcrl
mov
push
lcall
rorl
daa
fdiv
stos
lods
jle
dec
popa
push
std
push
bound
cmp
bound
jmp
sub
mov
lahf
cli
mul
and
dec
jecxz
sub
push
faddl
adc
loop
hlt
mov
int3
mov
dec
lock
push
xchg
push
inc
iret
rcll
andl
dec
inc
xor
xacquire
jmp
test
pop
out
insl
adc
or
sub
lret
or
dec
cmp
ja
inc
ss
fidivrs
pop
mov
inc
mov
mov
push
into
aaa
sub
sti
fdivrl
pop
jle
sub
sub
inc
add
fs
shr
push
cld
lret
push
xchg
or
cmp
stos
mov
in
inc
cmp
lock
cmp
in
dec
fdivrp
jl
ret
push
repnz
sahf
rorl
shl
loopne
ds
rcrl
pop
xchg
pop
imul
lea
int
push
icebp
sub
push
fcmovbe
xchg
dec
or
sahf
xor
popa
mov
insb
inc
rclb
out
iret
out
mov
les
sub
and
shlb
pop
lods
sub
sbb
jno
push
jbe
mov
mov
or
push
scas
gs
hlt
subb
aam
lea
imul
mov
push
insb
mov
rclb
mov
adc
xor
inc
pop
scas
add
rep
in
mov
lods
mov
loopne
jno
fists
hlt
mov
mov
sub
mov
dec
push
jecxz
sbb
sub
add
push
sarl
das
xchg
dec
fdivrs
sub
mov
and
jmp
mov
je
fs
xor
mov
leave
in
fbld
lahf
popa
std
inc
mov
sub
call
test
mov
sbb
mov
mov
repnz
mov
sbb
inc
mov
xor
mov
dec
pop
add
sub
mov
pop
in
cmpsl
ljmp
aaa
ss
pop
sbbl
imul
cli
dec
pop
mov
sub
cmp
add
rorb
lock
adc
cs
push
test
lds
and
std
lds
mov
and
stos
cmpsl
out
pop
daa
sarl
xor
outsb
mov
dec
inc
dec
dec
pop
sbbb
int3
push
jecxz
push
outsl
nop
sbbl
jmp
xor
mov
sar
sub
adc
subl
call
aaa
mov
inc
dec
and
arpl
es
adcb
mov
pop
adcl
jg
push
or
cld
or
pushf
xlat
xlat
xchg
cwtl
jg
jb
enter
or
in
dec
fstl
pop
jl
jmp
push
ds
jl
jns
mov
mov
and
add
mov
sbb
and
mov
imul
dec
in
xor
cmp
fimuls
addb
hlt
fildl
push
mov
cmp
cltd
cli
add
pop
gs
insb
ds
je
repz
sub
movsl
loopew
inc
pop
lods
rorb
jmp
xor
push
pop
jbe
pop
mov
mov
sahf
in
adc
mull
or
nop
and
ficompl
xor
or
shlb
and
pop
les
mov
aas
xor
sub
pop
xor
mov
imul
pop
mov
jnp
push
cli
inc
out
adc
lret
mov
jmp
lods
and
push
insb
pop
sbb
jno
aaa
jecxz
xchg
out
fdivrs
pop
iret
jmp
jp
hlt
jmp
xchg
cmp
mov
xchg
inc
jg
ret
cmp
mov
dec
repnz
int
dec
push
aas
sbb
rcrl
dec
in
sub
push
ret
mov
in
inc
test
adc
sbb
jae
inc
adc
mov
xor
test
int3
pop
jb
js
jb
fwait
cmpb
stos
test
xor
shll
xchg
popa
sub
gs
dec
je
int3
jg
cli
or
in
pusha
mov
jmp
cmp
das
mov
fstl
mov
dec
out
and
xchg
cltd
adc
mov
outsb
cld
dec
movsl
rcrb
sub
les
lods
pop
ja
push
pushf
fistpll
dec
or
add
inc
add
les
pop
loop
lret
xchg
test
es
jecxz
mov
sbb
pop
jecxz
shlb
pop
or
mov
adc
mov
in
cwtl
shl
mov
jge
gs
jne
shlb
and
sub
shlb
fxch
and
flds
inc
cmpsl
push
pop
nop
in
in
dec
stos
pop
icebp
in
sub
and
mov
arpl
clc
lcall
in
push
jmp
hlt
and
adc
xchg
lock
dec
decb
sbb
or
cmp
xor
add
push
cmpb
clc
xor
test
adc
pop
xchg
add
jbe
push
enter
scas
dec
jmp
pop
adc
into
or
mov
adc
jno
aam
jb
aad
movsl
adc
test
mov
popl
push
lea
push
and
xor
push
sbb
adcl
fstl
mov
adc
cmp
scas
mov
mov
and
scas
aas
stc
mov
push
xchg
pop
push
sbb
sub
push
mov
mov
xlat
in
fpatan
mov
or
in
roll
mov
inc
push
add
adc
ljmp
push
inc
inc
mov
aaa
lret
negl
in
sub
jge
adcb
or
aas
inc
test
aas
inc
call
lods
dec
idiv
rcr
push
push
jl
sub
ret
or
lahf
or
cmc
decb
jecxz
mov
leave
push
push
rclb
sub
mov
sub
push
lcall
dec
and
sbb
xor
and
jno
mov
push
xor
lock
inc
cmp
adc
mov
dec
inc
dec
adc
xor
pushf
stos
aad
ret
push
or
jmp
pop
mull
fnstcw
aaa
and
daa
test
xchg
dec
or
lods
push
mov
mov
popf
jg
je
cltd
sahf
inc
and
sub
dec
popa
cltd
lock
and
ret
jg
xor
ds
xor
pop
test
rorl
mov
mov
mov
test
xor
jecxz
pusha
xor
add
pushf
out
test
and
cmp
or
outsl
sub
and
add
mov
data16
sbb
mov
addb
test
sbb
orl
sub
mov
jnp
in
scas
pop
pop
mov
cmp
shl
xor
inc
cltd
shl
sahf
loop
or
push
cmp
aas
inc
out
adcl
lds
lret
lret
xor
jp
and
dec
dec
push
xchg
push
dec
inc
mov
out
mov
pop
lahf
ja
dec
cmc
lret
inc
scas
fcmovu
adc
jp
aaa
bound
cmp
call
jge
repnz
push
sbb
imul
jno
test
jbe
jno
sbb
bound
xor
fsubl
add
push
mov
or
push
dec
push
inc
add
addr16
iret
out
sbb
sub
sti
arpl
adc
add
sub
shll
out
adc
aam
or
sub
ror
cmp
dec
rorl
cli
cmpsb
mov
xchg
mov
xchg
pop
scas
aas
mov
ljmp
cmp
inc
xor
dec
pop
leave
loopne
adc
and
dec
cmp
add
je
dec
add
call
jge
int3
xor
orb
imul
adc
add
nop
pop
test
cltd
cmp
sub
sub
xor
or
idivl
lods
ja
lea
push
jae
out
push
test
xor
jae
or
jno
stc
jecxz
dec
xchg
insb
fisubl
movsb
push
xor
mov
mov
shr
inc
aaa
inc
lods
dec
arpl
pop
call
inc
add
enter
pop
subl
or
and
mov
jno
xchg
push
jns
push
in
or
addr16
sbb
cmc
loope
dec
fwait
add
add
cmp
push
xor
out
shr
cmpsl
xor
xor
pushf
adc
cld
test
jge
bswap
repnz
shlb
dec
ja
inc
repnz
movsl
insb
sbb
ds
xor
or
cmc
pop
test
mov
pop
cmpsl
movsb
shlb
unpcklps
and
popa
or
lods
and
xor
stc
adc
push
je,pn
fcoml
dec
sarb
push
aas
imul
sub
pxor
xlat
sub
push
popa
add
adcl
adc
cmpsl
or
jecxz
imul
sub
mov
arpl
push
mov
jb
cmp
call
mov
jmp
fnsave
lds
adc
mov
test
mov
imul
daa
jns
cmp
dec
nop
lods
mov
mov
cmpsb
ljmp
fldcw
adc
xor
cmp
dec
and
fstl
pop
mov
dec
test
push
pushf
std
push
push
jne
lahf
push
popa
lock
insb
xchg
push
adc
popf
movsb
cmpb
and
dec
cmc
cmpps
jl
shll
xchg
fsubs
pushf
out
and
test
leave
test
xor
inc
mov
loope
cmp
in
loopne
je
data16
out
dec
insl
jg
subb
daa
cmpsl
and
fdivp
cmp
aad
push
in
orl
fnstcw
insb
push
in
mov
pop
lea
loope
and
aaa
push
movsb
xor
popf
mov
dec
or
mov
xor
add
out
orb
dec
loop
out
es
or
cmp
inc
xchg
adc
loope
dec
fisttpl
loopne
movb
shll
ret
popa
sbb
fmuls
add
in
xchg
mov
gs
dec
loopne
mov
jnp
mov
cltd
gs
fldenv
mov
pop
popa
dec
or
fnstsw
rorb
push
cmp
jo
jg
add
js
jb,pn
push
pop
test
call
mov
jmp
mov
mov
out
mov
add
xor
popa
mov
jg
clc
inc
add
push
mov
xor
cmp
hlt
and
inc
dec
cld
ret
xlat
lock
and
pop
outsb
lret
lcall
cmp
fcoms
out
mov
test
imul
inc
call
pop
push
push
ds
lcall
or
test
inc
push
cs
les
cmp
mov
mov
push
sbb
xorl
cmp
jmp
xor
test
cmp
mov
mov
push
mov
mov
mov
gs
fidivrs
adc
testl
clc
sub
sbb
test
jb
jmp
mov
lret
call
outsb
jl
pop
pop
int3
incb
aaa
mov
or
pop
test
cmp
xchg
inc
cs
call
sbb
daa
imul
enter
ss
or
pop
enter
or
cli
lahf
iret
test
adc
mov
inc
and
mov
lcall
sahf
xor
cmp
jae
xor
and
out
scas
pop
inc
and
inc
dec
add
adc
mov
xchg
sbb
jmp
imul
xchg
nop
xlat
xchg
xchg
jmp
outsl
and
push
xlat
jp
in
mov
adc
sbb
pop
add
sbb
mov
sbb
push
adc
dec
cmp
cmpsb
out
arpl
xchg
clc
nop
sub
inc
popf
out
or
adc
cmp
movsl
out
bound
cld
pop
ds
mov
pop
in
adc
pop
pop
insb
mov
es
scas
push
pop
ret
mov
fcomi
xor
int
add
fwait
loopne
and
cmpsb
push
and
mov
jb
fcompl
inc
mov
push
jae
add
icebp
jle
and
addr16
dec
vpaddsw
pop
test
xlat
ljmp
xor
outsb
adc
jle
or
or
bound
and
les
inc
and
push
xor
adc
xchg
cmp
pop
aad
mov
cli
call
int
pop
pop
jl
aaa
xor
jmp
mov
sub
push
dec
fsincos
aas
cmp
mov
scas
xchg
les
lahf
pop
into
mov
cmpsl
xchg
pop
inc
daa
jp
lods
push
pusha
pop
cmp
jns
or
sub
ficoms
les
fidivrl
rorl
pop
popa
add
jmp
cmp
das
dec
or
xor
pop
push
and
mov
mov
dec
icebp
shrb
jne
add
sbb
in
xchg
jecxz
addr16
leave
into
in
stos
and
lods
mov
jge
stc
jbe
jg
adc
jle
rolb
pop
jno
popa
mov
dec
cmpsb
mov
inc
fs
jle
daa
mov
adc
push
xchg
movsl
and
xchg
sub
rolb
lods
pop
aaa
dec
movsl
xchg
push
aas
stos
or
mov
ret
jp
xor
add
out
mov
js,pt
aas
test
mov
js
inc
addr16
les
inc
shll
gs
and
cmp
inc
xchg
sbb
inc
pop
dec
scas
aad
loope
aas
pusha
enter
retw
outsb
test
scas
loopne
rcll
sub
dec
mov
mov
jle
daa
xchg
fisubrl
std
or
stos
push
ss
test
push
stos
mov
mov
sub
xor
ljmp
mov
jae
sub
xchg
sbb
outsb
rcl
jo
aad
fstpt
repz
sti
jmp
cwtl
and
mov
mov
bound
stos
mov
mov
loop
pop
lret
inc
repz
pop
out
scas
fwait
xlat
test
cmc
lods
pop
sbb
xor
or
adc
jnp
xchg
cmp
mov
test
rclb
inc
xchg
scas
js
sub
je
arpl
push
iret
cmp
pushf
or
cmpsb
lea
push
je
xor
jb
sub
dec
xchg
cmp
pop
mov
mov
dec
inc
ja
pushf
lret
push
jg
or
jmp
inc
mov
pop
cld
push
mov
fs
add
pop
stc
out
mov
xchg
rcll
push
pushf
lock
pop
xchg
xor
jl
popa
fidivrs
jecxz
das
imul
pop
pop
pop
out
jno
jl
fistl
jnp
jmp
lcall
cwtl
in
and
addr16
jnp
inc
jnp
ficomps
outsl
sbb
es
scas
scas
mov
data16
mov
pusha
movsb
inc
lods
mov
sub
test
add
je
pop
outsl
test
insb
aas
testb
xchg
and
aaa
cmpsl
stos
call
or
in
jmp
push
xor
cmp
pop
mov
sub
stos
cltd
jg
lods
inc
dec
insb
mov
xor
push
call
push
sahf
jno
mov
xchg
clc
add
adc
out
cmp
sub
cmp
ja
mov
call
fstpt
sbb
sub
int3
mov
jp
imul
fildll
stos
notb
adc
dec
in
leave
mov
pop
xor
loopne
sbb
push
loope
mov
test
pop
ror
mov
std
arpl
imul
cmpsb
mov
dec
push
xlat
popa
lcall
inc
dec
jg
test
imul
jo
pop
xor
mov
push
test
sbb
inc
and
shlb
xchg
pushf
shl
in
xchg
out
std
sbbl
sti
imul
pop
push
mov
decl
hlt
fiadds
ficoms
outsb
rol
enter
shrl
pop
mov
jmp
or
lahf
shrl
cmc
jb
pop
mov
inc
add
hlt
sub
push
stos
or
call
mov
das
xor
pop
int
push
sub
test
test
sbb
pop
inc
mov
mov
lds
dec
test
mov
adc
mov
push
sarb
mov
mov
sub
stos
loop
dec
mov
sub
push
hlt
fldl
cmpsl
imul
jmp
inc
or
ss
aas
mov
cmp
sub
test
fld
sbb
cld
jmp
in
xchg
sbb
sbb
dec
push
jnp
pop
pushf
jle
in
push
push
pushl
and
mov
outsl
mov
push
loope
cmpsl
and
inc
test
or
xlat
je
mov
push
xor
or
push
jl
dec
dec
inc
xchg
xor
imul
push
cmpsl
cld
mov
js
pop
push
dec
or
test
bt
mov
push
adc
hlt
push
cltd
aad
cmp
inc
pop
xchg
jle
add
movsb
add
inc
cmp
and
mov
mov
rcr
mov
jae
imul
gs
lock
sti
or
jl
push
arpl
xor
cmp
mov
sbb
sub
pusha
mov
repnz
add
or
shll
pop
mov
dec
lret
incb
sbb
out
icebp
mov
mov
pop
fidivrl
push
rcrl
cld
pop
push
out
cltd
fidivs
imul
fwait
xchg
daa
xchg
js
lods
cmp
push
pop
pop
pusha
mov
filds
sbb
add
in
int
sbb
mov
pop
sub
into
pop
lds
jecxz
out
mov
sub
jp
imul
notl
xchg
cmp
aam
dec
divl
inc
xor
das
inc
inc
in
rorb
push
adc
icebp
mov
mov
in
and
mov
std
stos
mov
push
pushf
in
arpl
xchg
push
xchg
adc
testb
mov
or
adc
mov
js
ror
negl
cmp
xor
ret
jnp
shl
and
cmpl
inc
xor
cmpsl
add
mov
jl
inc
push
into
sbb
jge
enter
pop
sub
in
aam
ss
and
pushf
mov
addl
xchg
xor
add
mov
sbb
sbb
and
xor
fiaddl
sbb
lahf
in
sarl
mov
insb
cmpsb
mov
add
cwtl
leave
mov
push
mov
movsb
and
pushf
sub
pop
leave
pop
loope
popf
jb
mov
jp
cmp
adc
inc
jo
xchg
insl
push
mov
xchg
sti
mov
lahf
insl
xchg
inc
fstpt
ja
and
pop
stos
cmc
adc
mov
dec
or
mov
push
push
lretw
push
push
sub
addb
addb
ljmp
out
xor
pop
dec
cmp
mov
pusha
pop
dec
out
lret
mov
adc
inc
cmp
jecxz
rclb
and
xchg
push
ss
mov
stos
cmp
test
or
push
pop
popf
adc
xor
shrl
movsl
mov
push
xlat
sub
int3
inc
addr16
jne
jg
jg
pop
dec
dec
jno
fdivrp
jne
cltd
out
pop
mov
test
cwtl
xor
out
add
adc
fwait
push
scas
aad
test
mov
out
stos
pop
out
adc
fdivs
movsb
xchg
and
push
inc
aad
pop
cmp
and
outsb
or
imul
mov
sti
test
sub
sahf
sub
jb
or
and
mov
xorb
inc
lahf
scas
add
and
icebp
mov
test
js
ljmp
aaa
and
enter
push
fisubs
lcall
lahf
cmp
insb
pop
andb
mov
icebp
xorl
xchg
xor
insb
xor
mov
cmpsb
repz
pop
inc
arpl
jle
les
sbb
jmp
aad
mov
inc
popa
sub
xchg
mov
jno
test
adcb
lods
push
xchg
pop
pop
or
imul
sti
xchg
test
mov
lds
scas
gs
cwtl
push
mov
sbb
pop
sub
sub
outsb
add
mov
push
cmp
sub
ret
sub
mov
mov
cmp
mov
sub
jmp
jmp
and
jge
clc
cmc
sbb
aaa
in
add
aad
mov
es
cmpsb
add
cmp
into
mov
lds
push
cmp
notb
cmp
fnsetpm(287
in
push
jle
aam
sub
mov
mov
adc
lods
in
and
imul
lods
fwait
jmp
js
nop
pop
pop
jge
jmp
mov
adc
outsb
adc
aas
out
dec
mov
js
adc
imul
cmp
and
aam
pop
sbb
push
mov
std
jnp
ret
add
fiaddl
mov
jmp
jl
adc
in
and
or
lea
adc
enter
push
in
xchg
loope
add
lds
std
imul
or
cli
out
ret
inc
stos
cmp
sbb
testb
imul
xchg
or
mov
lret
inc
enter
sub
stos
pop
mov
xor
inc
mov
and
and
pop
jge
pushf
jge
push
shll
sahf
dec
das
test
xlat
cmp
movsb
sub
pop
xor
cmpsl
pop
pop
adc
add
dec
mov
push
cmc
ret
inc
leave
jle
push
inc
hlt
push
sbb
inc
push
cmc
and
jne
daa
inc
repz
jp
xlat
mov
push
in
addr16
test
pop
ret
push
cmp
stc
imul
push
scas
divb
js
movsb
xor
es
movsl
cld
es
das
arpl
mov
adc
rcll
lods
in
cltd
lahf
push
sti
sbb
aad
sub
and
outsl
int3
sbb
mov
test
xor
cmpsb
xchg
mov
aam
aas
movsl
jecxz
cmc
dec
incb
add
outsl
fxch
add
pop
iret
lea
mov
xor
sub
addr16
xor
mov
out
and
mov
sub
adc
pop
arpl
mov
or
push
adcl
inc
push
out
mov
mov
imull
pop
nop
push
add
or
xchg
mov
cmpb
leave
sub
cs
ss
mov
bnd
xor
xchg
movsb
fcompl
scas
inc
aas
add
sbb
ljmp
push
xor
cmp
xor
sub
inc
dec
dec
add
addr16
aas
and
sbbb
adc
mov
or
popa
stos
sahf
or
daa
fldt
jae
pop
xchg
leave
cmp
lock
push
mov
push
xchg
jae
std
out
jg
roll
push
dec
mov
and
adc
jae
or
incb
push
xchg
cmpsl
add
sahf
fstl
aam
inc
repz
les
add
dec
test
jne
xchg
pop
pop
push
pusha
pop
push
je
test
push
ret
or
sbb
pop
mov
or
add
movsl
sub
loop
fstl
pop
andl
test
dec
mov
sub
jns
lock
lret
jno
or
int3
or
ljmp
xlat
jle
jbe
mov
adcb
ljmp
cs
mov
pop
in
in
inc
test
movsb
sti
jne
mov
fcmovnu
movsb
fwait
arpl
ja
jge
mov
dec
inc
adc
push
nop
negl
xchg
add
push
or
cmp
loop
xlat
stos
or
sti
loope
inc
aaa
or
ret
cmpsl
or
repz
pop
je
xchg
xor
pop
shrb
out
xor
mov
imull
out
fs
cmp
push
jmp
rorl
test
ss
cmp
add
sahf
test
jbe
addb
pop
jg
pusha
subb
out
adc
mov
adc
push
lcall
andb
fidivs
cmp
add
mov
mov
add
mov
adcl
add
daa
push
sub
jno
je
inc
mov
js
fistpl
mov
xchg
mov
push
xor
push
iret
and
ror
xor
push
lea
pushf
cld
lret
jle
fwait
lcall
int
cmp
sahf
dec
mov
sti
flds
xchg
push
rolb
out
leave
faddl
or
pop
jle
fdivrl
push
sbb
pop
lcall
or
loopne
adc
out
cmpsb
in
inc
call
bound
mov
sub
pop
das
and
inc
data16
push
xchg
push
movsl
aad
sub
iret
nop
jnp
or
aaa
icebp
jle
push
fisttps
sahf
roll
fdivrl
adc
pushf
jle
lds
std
sbb
fisttpl
inc
repz
jg
repz
inc
cli
jp
cmpsl
pop
pop
jle
lds
mov
stos
jp
push
out
xchg
ret
les
xchg
xchg
fwait
sarl
leave
inc
cmp
loop
xchg
inc
sbb
out
shrl
arpl
sbb
sbb
or
stos
les
xor
mov
inc
in
and
push
mov
iret
mov
or
les
mov
adc
push
add
jae
sti
or
xor
inc
fs
fcmovu
push
push
notb
cmc
js
movsl
adc
cwtl
push
and
sbb
loope
imul
xor
mov
dec
inc
pop
rorb
fildl
push
lods
inc
push
jmp
lds
mov
push
pop
jns
pop
out
fstp
je
push
pop
test
mov
scas
stos
jg
dec
mov
sbb
ja
repz
stc
sbb
outsb
mov
clc
and
pop
fnstcw
or
push
nop
inc
insb
pusha
sub
test
xchg
jbe
test
pushl
aad
pop
cwtl
into
dec
into
imul
or
es
lahf
mov
mov
inc
mov
mov
gs
movsb
jnp
cld
sbb
sbb
outsl
loop
imul
dec
add
push
ds
pusha
jg
lock
and
add
punpckhwd
js
ficoml
test
inc
jns
xchg
das
xchg
inc
dec
imul
sahf
lret
inc
jae
aaa
or
daa
mov
pop
rorb
mov
cltd
xchg
adc
mov
sahf
lock
test
cmp
jno
out
daa
xchg
cmp
add
popa
dec
rsqrtps
sbb
pop
les
aam
in
clc
imul
pinsrw
pop
ja
xchg
dec
dec
lret
lcall
xchg
je
jno
inc
cmpsb
mov
idivb
pop
and
jmp
and
jp
movsl
cmp
and
or
inc
xchg
add
mov
dec
xlat
fidivs
ss
fcomp
mov
and
test
movsl
mov
dec
sub
insb
xor
insl
xchg
inc
mov
into
pop
insl
adc
movsl
pop
enter
shll
push
adc
gs
xchg
and
out
jp
outsb
stos
cld
push
pop
fbstp
mov
ret
ljmp
jmp
movsl
sub
mov
in
xchg
xor
lret
int
into
ret
pop
push
mov
jle
xor
add
loope
mov
in
sub
cmpsl
imul
adc
rolb
test
adc
lret
sbb
shr
seta
inc
mov
mov
imul
add
xlat
jo
and
jbe
ja
or
out
ja
mov
or
iret
inc
rorb
inc
pop
push
stc
lret
cmpsl
lret
fsubrs
icebp
inc
test
mov
push
xchg
ja
scas
test
xchg
jl
xchg
xlat
pop
mov
jecxz
or
ret
int3
mov
jbe
add
mov
fwait
int3
lcall
imul
dec
xchg
sbb
inc
sub
inc
jl
sbb
jnp
je
lock
fcomps
adc
arpl
mov
sbb
dec
mov
shlb
inc
out
sbb
or
or
out
cmc
jnp
hlt
std
dec
rclb
mov
stc
push
jno
in
outsl
push
cli
test
enter
inc
xor
inc
stos
ljmp
sub
add
fsts
jmp
cltd
sub
cmp
and
into
into
xor
jo
repnz
addb
jmp
add
dec
cmpsl
push
gs
adc
xchg
mov
out
movsl
lds
iret
inc
xchg
lcall
jno
ds
loope
sbb
xchg
xchg
inc
add
aaa
sbb
ljmp
xchg
mov
add
js
pusha
loope
test
push
ret
mov
pop
jo
and
idivb
pop
sbb
sti
das
push
lods
movsl
pusha
pop
into
repz
enter
notl
xchg
pop
xchg
sbb
or
test
out
popa
sbb
loope
pop
pop
mov
fisttps
cmc
nop
shlb
push
les
pop
int
mov
fwait
shll
cmpsb
cmp
loopne
aad
imul
out
lds
and
inc
xor
mov
push
loop
ljmp
inc
ss
sub
pop
les
mov
xchg
cmpsb
cmp
pushl
nop
fsubrl
imul
sub
add
inc
retw
jle
xchg
repnz
cmc
aaa
push
mov
or
inc
lcall
xchg
dec
adc
out
or
mov
shll
xchg
inc
jmp
inc
rcrb
aas
or
sbbl
and
push
les
inc
mov
xchg
cli
add
dec
jns
inc
sub
loopne
xor
cld
loop
sub
pop
jecxz
or
inc
push
cltd
sub
push
clc
jecxz
cmpsb
add
pop
jnp
add
mov
sub
imul
lods
stc
jl
cmpsb
repz
sbb
dec
mov
test
sahf
push
movsb
mov
movsb
mov
or
inc
mov
inc
call
dec
add
xchg
jp
mov
lret
xor
or
adc
fcompl
lock
jnp
mov
pop
pushl
cmpsl
mov
aaa
stos
sub
insl
rorb
pop
xchg
push
add
cmp
mov
je
or
loop
sub
xchg
push
jmp
xor
add
pusha
enter
xchg
inc
xor
fldcw
test
insl
shll
ljmp
add
aam
test
outsb
sbb
lods
cli
mov
lret
dec
insl
adc
push
inc
push
iret
bound
push
xchg
cmp
negl
or
ss
pop
dec
lea
sub
cmpps
mov
es
bound
popl
xchg
xor
pop
adc
pop
add
out
lds
inc
push
mov
mov
adc
leave
shlb
into
adc
pop
bswap
ffreep
sbb
mov
adc
addl
ds
insb
push
mov
mov
sub
and
jnp
mov
cmpsl
int
and
insl
cmc
and
pop
enter
mov
pop
push
xchg
xchg
cmp
ret
aad
das
lock
aad
stos
mov
sbb
mov
mov
es
addr16
lds
fisttpll
mov
icebp
inc
xor
or
in
jl
test
imul
sbb
enter
jne
or
inc
cmp
lcall
sahf
jl
fisubrl
sarb
invd
xor
aam
rol
xchg
les
or
pusha
addr16
andb
imul
jg
mov
stc
adc
pop
sti
adc
pop
std
xor
mov
cmpsb
mov
and
lret
in
divb
adc
ret
and
dec
cli
les
adc
mov
sbb
xchg
lahf
mov
in
bound
jecxz
dec
iret
pop
mov
cld
in
jp
adc
push
enter
cmp
clc
hlt
enter
sti
ja
mov
sub
or
pop
add
adc
mov
and
and
jge
or
int3
ja
es
jl
push
adc
fstpl
pop
mov
lret
mov
xor
aam
stos
cli
iret
dec
aad
fnstsw
xchg
mov
mov
dec
inc
ja
sbb
adc
mov
aas
cltd
mov
stc
inc
popa
in
cmpsb
sub
push
lods
pushf
loope
int3
mov
push
dec
mov
mov
jo
xchg
or
inc
inc
mov
ror
mov
and
lock
ljmp
sub
pushf
lods
inc
repz
addr16
repnz
xor
lcall
arpl
shll
pop
sbb
movsb
push
mov
jo
aas
jmp
jnp
mov
push
mov
add
mov
add
cmpsb
sbb
xor
jae
xor
int
stc
xlat
dec
adc
xchg
or
stos
mov
clc
daa
setle
jo
ret
jg
daa
loop
ret
push
mov
inc
cwtl
faddl
in
in
loope
cld
xchg
inc
adc
cmp
clc
imul
adc
pop
fwait
outsb
int3
mov
cmc
push
mov
out
or
lods
in
mov
cmp
leave
mov
mov
cli
rcrb
inc
jg
mov
or
pminub
orl
lods
lret
dec
add
xadd
imul
add
das
cmp
fisubrs
daa
push
mov
xchg
lret
sub
sahf
xlat
test
lds
in
jg
fs
ja
cmp
sub
and
enter
out
jp
sbb
cmp
cmp
xchg
lret
pop
scas
add
repnz
mov
add
xchg
mov
pop
add
jne
call
inc
addr16
mov
and
cli
aaa
mov
fistpll
orb
jg
idivb
pop
mov
mov
mov
jecxz
bound
jmp
xor
jmp
add
xchg
xchg
cmc
xor
dec
rclb
push
lahf
mov
aas
sub
sbb
clc
enter
test
ljmp
pop
les
testb
pop
loopne
and
cmp
or
xchg
mov
cmpl
shl
or
test
mov
enter
pop
xchg
cwtl
sbb
mov
test
inc
or
lahf
and
call
aas
out
aas
xor
fwait
aaa
enter
xchg
inc
add
fs
idivl
shll
push
rorb
jo
and
pushf
push
pop
lds
mov
icebp
inc
pop
dec
out
fs
sbb
mov
push
dec
dec
mov
and
aas
or
sbb
punpcklbw
ja
adc
xor
push
aam
test
mov
add
daa
repz
mov
out
lods
out
mov
dec
test
xchg
sti
dec
loop
filds
mov
test
mov
cmp
je
sahf
cmp
mov
add
adc
xor
nop
or
subb
mov
int
js
imul
mov
push
xlat
inc
mov
mov
sub
push
adc
fmul
jp
movb
mov
cmp
mov
into
cltd
shll
out
push
jmp
rorb
push
jne
mov
rol
inc
jno
jg
mov
les
xor
movsl
xchg
scas
xchg
fcmovnu
cmc
addl
dec
mov
test
jb
mov
mov
mov
sub
mov
call
and
adc
sbb
mov
xor
adc
cmp
popf
cli
rol
mov
lcall
cwtl
mov
pusha
jns
les
ret
mov
aaa
jo
outsl
jns
push
mov
push
fsts
pop
xchg
lock
xor
testl
ss
lret
push
cmpsl
add
insb
jno
mov
aas
jl
jno
add
dec
cmp
xor
mov
inc
iret
jbe
adc
push
out
aas
test
xchg
cltd
cmpsb
mov
mov
jmp
push
mov
jecxz
sbb
xor
and
sub
aad
mov
stc
int
xchg
outsb
hlt
pop
pop
iret
pop
das
mov
out
cmpsl
rcrl
push
lods
pushf
test
stos
cwtl
insb
std
repz
sarb
xchg
inc
lahf
push
je
imul
and
int3
adc
fidivl
and
cli
xchg
jo
push
ficompl
pushf
cmp
loop
aam
mov
and
gs
pop
pop
fmuls
mov
iret
adc
add
sbb
xchg
stc
sbbl
adc
cltd
inc
or
repnz
pop
and
cld
mov
jecxz
jne
xchg
or
jmp
cwtl
cmp
sbb
clc
mov
clc
mov
inc
mov
imul
cmpsb
stc
out
mov
cmp
jns
hlt
push
mov
lods
jb
jb
pushf
stc
fsubrl
stos
cli
inc
insb
sub
push
mov
jnp
jge
mov
xor
adc
jnp
pusha
setle
imul
mov
pop
lock
movsb
xchg
xor
push
outsb
lret
sbb
cwtl
jle
jl
outsl
add
xchg
jbe
jb
lods
ret
lods
lock
push
test
push
nop
xchg
cmc
fwait
rolb
and
call
in
pushf
xor
and
in
cmpsb
add
mov
sub
push
pop
mov
lds
lcall
std
and
or
or
mov
add
jns
cmpsl
push
mov
popa
stc
pop
fisubrs
xchg
icebp
mov
mov
fadds
or
js
xor
insb
imul
push
or
push
ret
scas
mov
adc
shl
jne
arpl
inc
xchg
or
inc
fndisi(8087
xchg
push
leave
loopne
pop
jp
mov
or
js
loope
out
in
ret
jp
mov
mov
jg
pop
addr16
cmp
jg
pop
loopne
or
adc
add
sub
push
es
repnz
cmp
or
pop
in
dec
mov
mov
pop
divl
pop
cs
lcall
lret
scas
pop
imulb
mull
xchg
xchg
sti
and
add
insl
iret
sub
cmp
pop
mov
and
imul
out
cmp
push
leave
int3
mov
jecxz
or
mov
cmp
jne
movsl
lret
mov
pusha
clc
in
stos
add
jnp,pn
cwtl
jo
nop
outsb
jbe
pushf
jo
lods
mov
mov
lods
pop
shlb
rep
xor
dec
out
addb
aaa
rdmsr
cld
mov
or
xchg
pop
test
sbb
in
aad
mov
ja
mov
mov
mov
mov
push
loop
enter
mov
ljmp
push
scas
or
dec
stc
dec
xchg
das
int
loopne
push
fwait
mov
mov
push
inc
ss
es
test
ds
xchg
pop
leave
push
and
mov
fildl
sub
dec
push
ja
gs
fldl
dec
pop
in
and
jns
jmp
inc
lds
jle
adc
mov
mov
adc
mov
and
fadds
cmpsb
xor
sbb
or
inc
mov
je
in
mov
mov
or
mov
jmp
enter
xchg
nop
mov
sub
dec
mov
jne
in
in
outsl
pop
push
test
mov
pop
out
mov
push
pop
mov
cmpl
loope
leave
mov
lods
fsubp
ffree
ret
adcb
test
jns
cmpb
cmp
add
inc
and
jg
sub
sub
mov
mov
jl
xorl
sub
mov
xor
pop
jmp
movsb
dec
aam
jae
imul
fwait
sub
cmp
add
out
movl
fmull
in
andl
jle
and
mov
imul
push
dec
push
rol
test
inc
jae
rolb
cmpsb
out
mov
dec
sbb
sub
mov
roll
sbb
addr16
inc
mov
add
cmp
dec
dec
xchg
mov
pusha
mov
jae
jle
fimull
fistpl
mov
ret
add
mov
lahf
add
adc
mov
push
mov
repz
lret
sbb
push
int
loop
dec
shlb
inc
sub
iret
mov
cs
jne
fldt
test
xchg
adc
jo
push
xor
fwait
mov
lret
ja
ret
mov
inc
dec
movsl
add
mov
fstl
sti
cmpl
inc
and
mov
frstor
cmp
and
xor
jl
int
push
jb
sti
leave
xchg
sub
dec
call
pop
push
mov
stos
orl
int
popa
int3
lods
rorb
push
data16
jmp
in
test
pushf
mov
repnz
fistpll
xor
adc
mov
dec
jmp
inc
or
lods
sbb
mov
push
lret
and
or
push
sub
pop
lcall
jne
sbb
stc
call
or
push
test
mov
pushw
scas
mov
bound
mov
fisubs
pop
inc
xlat
jne
popf
cmpsb
pop
adc
mov
mov
xchg
push
mov
dec
data16
inc
stos
push
rcrb
and
and
xor
sub
and
inc
jge
rcrb
inc
lahf
xchg
fsubp
sbb
orl
or
push
inc
jns
pusha
dec
push
and
sbb
les
stos
mov
mov
mov
inc
jbe
jp
pop
pop
loope
xchg
cmpsl
and
pop
test
mov
ds
or
xchg
addr16
sbb
in
and
xchg
cmp
mov
cmc
jae
jmp
jg
mov
push
pop
inc
mov
and
push
and
inc
add
stos
stc
imul
shlb
xor
scas
es
das
xor
xchg
and
pop
push
rcr
xor
xor
cmpsb
push
scas
push
dec
xor
and
adc
enter
rcrb
adc
loopne
dec
pop
arpl
or
push
jle
push
adc
icebp
ds
loop
out
push
repnz
push
add
gs
dec
out
cmp
push
mov
fistps
ss
sarb
jbe
jecxz
mov
sbb
inc
scas
cmp
cmpb
out
mov
outsb
add
xor
push
mov
dec
pop
out
inc
jb
fdivl
icebp
mov
cltd
rolb
cmc
dec
push
jae
int3
add
testb
cs
xchg
mov
call
aam
mov
add
insl
popf
and
sbb
pop
mov
inc
xor
gs
dec
add
fwait
cltd
std
inc
popf
daa
push
pop
cmp
jnp
cmp
dec
mov
test
faddl
pop
shll
xor
add
xchg
xor
cmp
mov
adc
cmp
cmp
mov
mov
orb
js
lock
pop
add
fcom
jl
lock
lea
sbb
cs
jne
xchg
inc
xchg
sbb
call
xchg
mov
jl
fstp
xchg
adc
mov
test
xchg
adc
mov
inc
push
xor
enter
sarb
or
movsb
int
mov
inc
or
jl
pushf
sbb
pushf
adc
scas
mov
jg
mov
insl
inc
pop
mov
mov
popa
movsb
out
or
scas
test
aad
mov
add
jae
sbb
lcall
mov
pop
into
sbb
xor
sub
push
cmpsl
sbb
sbb
inc
dec
pop
insb
and
aaa
xor
jl
dec
gs
or
ljmp
shll
push
cmp
push
xor
pop
lret
aad
push
jmp
push
addl
out
pop
mov
stc
sub
add
mov
lcall
adc
rcrl
test
push
mov
push
or
into
addr16
test
mov
jle
dec
or
lea
lahf
or
ds
in
aaa
adc
inc
dec
inc
xchg
add
adc
push
fwait
in
inc
jecxz
mov
repz
mov
mov
fs
imul
inc
stos
imul
sub
push
iret
sahf
dec
cli
daa
shlb
xchg
divl
clc
fdivrl
daa
xchg
push
push
jb,pn
sub
aam
js
or
add
addr16
xor
xrelease
and
pushf
mov
stos
iret
movsb
push
mov
hlt
repnz
std
out
daa
scas
ss
ror
movsb
cwtl
lcall
imul
push
test
aad
hlt
jge
mov
icebp
pop
push
sub
jb
imul
and
cmp
xor
xchg
add
pop
lods
loope
xchg
inc
leave
pop
movsb
adc
xchg
adc
fldenv
clc
xor
cwtl
pusha
les
jne
scas
dec
adc
test
inc
push
lods
or
push
sub
into
jbe
xor
or
repz
scas
pop
ljmp
push
cmp
dec
push
lock
push
pop
std
mov
jp
inc
fisubrs
adc
scas
xchg
loopne
fstp
xor
dec
iret
test
dec
lods
pop
in
or
push
cmp
sub
lcall
fidivrl
aam
aaa
cwtl
inc
xchg
mov
sarl
xor
lahf
std
dec
scas
imul
inc
xor
hlt
out
ret
push
cs
cmpb
sbb
cld
fmulp
xlat
jmp
clc
add
push
das
adc
aas
adc
std
pop
sbb
xchg
jecxz
jge
mov
mov
mov
cmpsl
iret
cli
sub
aam
adc
mov
adc
sub
xor
into
lahf
xor
ljmp
cmp
shrl
std
arpl
lods
cmpsl
mov
shrb
cmc
cltd
sbb
add
es
push
mov
xor
test
into
cwtl
fwait
in
xchg
mov
out
les
xchg
mov
jmp
cmp
and
jo
cli
adc
out
scas
adc
mov
test
xor
pushf
iret
jle
adc
mov
or
out
sub
aam
sti
jae
and
lret
dec
dec
inc
or
rdtsc
test
jecxz
xor
mov
and
pop
insl
pusha
shlb
dec
adc
xchg
cmpsb
jb
andl
add
sbb
call
dec
aaa
xchg
insb
fidivrl
push
cwtl
test
jmp
leave
add
sar
jecxz
xchg
mov
inc
movsl
iret
shl
movsl
push
bound
pop
shrb
add
pop
cs
and
xchg
cmp
mov
sub
sbb
adc
or
mov
xchg
sahf
repz
cmpsl
push
or
mov
mov
dec
fisttpl
dec
push
loope
push
jae
fildl
clc
inc
shll
pop
and
fucomi
add
inc
loopne
sbb
xchg
or
les
sbb
mov
aas
test
mov
neg
in
and
add
ljmp
dec
pop
je
in
jge
sub
imul
jb
mov
pop
in
adc
xchg
insl
test
std
stos
jl
jl
ljmp
rorl
mov
pop
sub
outsl
sti
inc
aas
xchg
sub
pop
push
fisubrl
xchg
inc
leave
or
dec
add
adc
test
add
push
cld
mov
pop
lret
ret
jle
orl
repz
mov
jmp
sbb
mov
insl
dec
jge
sub
decl
mov
add
jbe
shrb
orl
rcll
pop
adc
jle
js
adc
sub
adc
sbb
pop
mov
sbb
cli
mov
jle
and
bound
gs
push
mov
mov
pusha
test
ljmp
fidivrs
mov
lcall
cmp
or
lock
stos
dec
push
dec
and
and
iret
mov
jb
sub
jno
mov
add
icebp
enter
mov
dec
mov
sbb
xor
repnz
mov
out
in
pop
in
jae
xchg
inc
aas
xchg
fwait
xchg
or
cmp
ljmp
or
and
pop
mov
xor
mov
dec
sbb
ficoml
or
xchg
fdivrs
hlt
je
hlt
xor
cmp
and
or
cmpl
jg
mov
cli
adc
in
fisubrl
pop
xor
rcr
rcrl
clc
pop
daa
cmp
or
sub
jmp
push
loope
xor
add
clc
leave
popa
lods
lahf
sbb
jb
insl
add
insb
js
test
lcall
inc
imul
dec
das
aaa
cmp
ret
in
ret
shlb
scas
lcall
and
test
and
out
sbb
hlt
xchg
out
pushf
or
rcrb
aas
cmp
mov
mov
mov
sub
fidivrl
xor
and
fwait
mov
je
stos
cwtl
jg
mov
test
pop
test
mov
ficoml
mov
cwtl
or
pushf
lret
in
pop
fcomi
fnsave
push
clc
cwtl
clc
pop
inc
int3
jbe
jp
mov
cmp
mov
inc
pop
adc
mov
lcall
imul
fidivrs
repz
xchg
in
std
iret
loopne
fcomps
pop
loope
pop
push
cmc
test
mov
clc
scas
ja
pop
adc
shrb
je
jg
dec
sbb
push
push
iret
repnz
loopne
ja
cmpsl
cmp
stc
jmp
test
mov
ret
xor
cmp
in
scas
dec
xchg
or
mov
testl
js
rclb
lods
test
bnd
gs
pop
cld
repz
pop
popa
loope
ret
loopne
aad
push
pop
add
jo
xor
push
sbb
mov
mov
hlt
xchg
cmp
add
jae
cmpsl
jg
rclb
adc
dec
push
in
push
inc
in
inc
test
mov
jle
add
jne
adc
jns
cmp
repnz
popa
mov
pop
cmc
sahf
adc
cwtl
sahf
sbb
xor
lret
xchg
or
adc
mov
stos
cmp
repnz
pop
cltd
movsl
shr
dec
paddd
lret
jne
data16
add
push
xlat
sti
xchg
add
ss
pop
mov
lret
ljmp
add
sahf
dec
jb
push
popa
push
mov
fists
pusha
in
movsl
mov
cmp
lods
jae
pop
jns
in
lahf
xlat
or
movsb
xchg
jnp
aaa
jcxz
push
mov
inc
lcall
test
sahf
imul
xor
adc
inc
sbb
dec
mov
adc
lea
into
cltd
xor
push
xchg
imul
add
adc
rclb
pusha
pushf
jle
xchg
lcall
popf
mov
insb
aad
push
aas
pop
in
lods
push
sti
lock
sbb
push
test
stos
pop
testb
sub
mov
sub
das
enter
or
and
nop
lods
outsl
lret
jae
gs
mov
inc
ds
jae
cmpsb
push
xlat
cli
dec
pop
jae
push
mov
xchg
int
movsb
fcoml
mov
je
lods
jno
loopne
and
pusha
test
xchg
sahf
faddl
std
mov
or
cmpsb
sbb
dec
arpl
mov
xchg
add
or
sub
xor
int
sbb
xchg
sub
jne
aad
or
out
aaa
and
fbld
adc
jbe
or
iret
sbb
stos
faddp
jae
js
jns
mov
push
cmc
in
popa
or
repnz
dec
js
push
outsb
xchg
fdivl
jecxz
shll
inc
and
sbb
out
loopne
les
testb
or
push
fstpt
add
push
fsts
mov
mov
inc
xor
mov
xor
adc
dec
divb
shlb
popa
and
jb
sbb
pop
jmp
clc
roll
xlat
ds
mov
aaa
or
xchg
out
or
insl
das
dec
xchg
sub
pop
popf
adc
xchg
xchg
lods
and
pop
jnp
pop
aaa
and
add
ja
shlb
sub
xchg
push
sbb
aam
insl
inc
jno
aam
test
pop
or
les
sti
aas
inc
push
cltd
dec
jns
pop
inc
dec
dec
scas
ret
push
imul
pop
jne
push
jg
push
out
xchg
and
jmp
mov
pop
dec
or
push
mov
jnp
in
in
pop
fwait
ret
scas
adc
das
jmp
mov
and
das
xchg
mov
ljmp
and
push
mov
push
ljmp
pop
bound
fcoms
iret
cld
cwtl
inc
popa
imul
pop
ret
mov
pushf
je
cmp
test
mov
xlat
jl
iret
subb
stc
cmp
int
lds
mov
dec
xor
xor
pop
orb
or
cmp
dec
jbe
cmp
ret
inc
jl
ret
lahf
pop
addl
sub
pop
aad
or
jne
lcall
cwtl
mov
popa
adc
jae
idivl
lods
pushf
adc
imul
sub
mov
dec
pop
jp
andl
mov
add
popa
orl
push
pushf
mov
lcall
push
inc
jl
xor
mov
mov
xlat
cmc
jbe
fdivs
lock
add
pop
pop
movsl
sbb
mov
pusha
outsl
ret
push
jne
pop
lds
cmc
jge
or
sub
jecxz
jl
xchg
int3
mov
lahf
aas
fs
cmp
cmc
mov
imulb
int3
jl
pop
outsl
cmpsl
mov
pop
sub
imul
mov
adc
jge
aam
mov
cmovbe
or
test
adc
xchg
mov
xchg
imul
pop
lcall
jmp
push
stc
lds
sbb
lahf
lret
shl
adc
and
jg
movsl
std
cmc
push
je
ljmp
pop
imul
sahf
std
jns
leave
sahf
sub
jmp
push
or
stos
jb
and
inc
mov
pop
add
add
inc
xchg
sub
ja
inc
aam
cmp
movsl
inc
cmovp
imul
or
cmp
adc
cli
add
cs
ja
out
xchg
xchg
lret
cli
incb
or
dec
mov
sub
cwtl
jge
xor
sub
jmp
mov
mov
push
sti
pop
ds
in
and
add
adc
in
fwait
add
arpl
lahf
fcomp
xchg
cmpsb
and
shrb
xchg
movsb
inc
xlat
das
cmc
mov
cmp
push
push
aas
inc
inc
push
call
jge
mov
lcall
and
subb
dec
es
xor
sub
mov
jp
sub
add
daa
push
jno
sbb
push
or
test
movl
mov
lods
jne
or
or
fnstenv
cmp
imul
jnp
xchg
in
jmp
lds
adc
jno
mov
inc
pusha
rol
pop
int3
ljmp
or
push
insb
ret
push
test
push
stc
je
dec
in
aam
sbb
cmp
repnz
adc
hlt
pop
repz
repz
sub
add
xchg
rclb
sahf
xchg
cmp
xchg
int
dec
xchg
out
stos
xchg
dec
push
sti
iret
hlt
imul
out
pop
imul
pop
mov
sbb
xchg
xor
lcall
sub
ss
jb
cwtl
sti
xchg
fsubs
in
scas
je
jge
aam
dec
fwait
jbe
cmpsl
outsl
in
fnop
out
ret
cmp
rorb
push
scas
pop
dec
or
sbb
in
xlat
dec
mov
xor
jl
imul
and
sbb
arpl
and
imul
jae
jmp
mov
cwtl
cwtl
xchg
add
jae
or
dec
cmc
icebp
xor
jmp
and
xchg
rolb
sub
mov
and
xor
and
aaa
mov
movsl
fwait
sahf
and
inc
adc
cmp
sarb
clc
in
xor
repz
fcompl
movsl
inc
and
sbb
mov
in
jg
hlt
mov
add
add
fnsave
lea
and
cmc
cmp
cmp
stos
into
push
jp
jne
arpl
scas
scas
aam
jno
loop
mov
mov
mov
mov
test
mov
aam
punpcklbw
xor
mov
mov
xor
popf
fcomi
movsl
repnz
xor
out
jbe
test
inc
mov
daa
mov
adc
dec
pusha
les
test
add
rorb
or
in
sbb
mov
iret
scas
popf
bt
scas
lahf
jno
dec
pushf
out
fistps
jnp
dec
jno
and
and
sub
rcr
lahf
jbe
xchg
and
add
jo
sahf
cmpsl
mov
lods
push
xor
mov
fdivl
or
test
mov
int
cmp
dec
and
test
push
fistps
mov
ja
sbb
mov
cmp
sub
psadbw
or
sub
mov
shll
lret
lods
dec
std
rorl
loopne
sbb
data16
push
je
loop
jae
icebp
jle
lods
sbb
test
cmpsl
jo
jb
xchg
in
imul
cmp
cs
bound
stos
adc
xor
es
mov
lcall
pop
jle
xchg
or
xchg
push
cmovne
mul
adc
leave
bound
mov
pop
mov
mov
stos
xlat
and
push
hlt
push
jp
out
pop
or
jmp
mov
iret
outsb
dec
jecxz
mov
ror
stc
popa
jo
sahf
push
mov
shlb
inc
mov
sub
mov
lea
stos
mov
cmp
dec
hlt
andb
scas
add
test
jmp
cwtl
pop
mov
bsf
std
fsub
andl
scas
xchg
stos
aam
movsl
mov
cmp
fistpl
sbb
xchg
or
sbb
cwtl
cmp
mov
lcall
cmp
push
lods
into
jecxz
lods
sbb
adc
pop
je
ret
add
cmp
push
mov
push
test
push
imul
aaa
jb
pop
or
negl
pusha
push
push
mov
dec
out
popf
lods
ds
xchg
pop
prefetch
sbb
in
push
push
dec
or
lret
lcall
inc
xchg
xchg
add
gs
loope,pt
or
andb
jns
xchg
dec
sbb
idiv
mov
incb
call
jmp
mov
pop
push
in
cmp
mov
sub
lock
mov
jnp
mov
pop
sbb
aas
or
lods
mov
popf
das
repnz
sub
push
pop
repnz
xchg
mov
dec
inc
jp
lds
dec
jne
loopne
pushf
movsl
pop
sbb
out
in
mov
or
testb
cmp
pushf
mov
ljmp
pop
add
mov
sub
cmp
cld
scas
cmpsl
rcl
lods
bound
lods
enter
sahf
pop
ds
sbb
inc
lods
scas
push
cmp
inc
pop
sub
and
repnz
insl
jmp
adcb
movsl
mov
xchg
mov
jg
mov
mov
sub
and
dec
stc
cltd
mov
movsl
idivb
in
js
aaa
lret
mov
pushf
popf
loopne
fidivrs
inc
int3
mov
test
push
insl
ret
push
mov
scas
lock
and
jl
xor
lods
adc
repz
jle
dec
mov
fstps
stos
out
out
dec
or
cs
lcall
shrl
xor
adc
arpl
sti
jle
sbb
addr16
push
xchg
and
dec
or
out
push
test
cmpsl
enter
mov
cmc
jl
jg
jbe
lock
xchg
jo
leave
adc
test
jnp
cmp
imul
mov
pusha
mov
mov
pop
movsb
ljmp
nop
pop
pushf
cmp
push
jge
nop
imul
sbb
pop
movsl
xchg
fcoms
clc
push
or
fnop
std
pop
jo
mov
jmp
into
mov
sub
ss
sub
pop
mov
sub
pop
jecxz
add
adc
pop
shl
push
jnp
and
or
mov
mov
push
sbbl
push
shlb
inc
fidivrl
xchg
sub
push
pop
imull
add
outsb
rol
jo
out
movsl
imul
das
add
xlat
aas
xor
push
xchg
clc
mov
inc
sbb
loope
xor
shl
sub
dec
push
repnz
dec
mov
fidivrl
stc
enter
scas
out
add
xor
movl
popa
std
dec
idiv
divl
pop
add
xor
inc
cmpl
test
jns
fidivrl
adc
inc
jl
call
faddl
mov
or
lret
sub
mov
adc
arpl
outsb
pop
jge
mov
jo
pop
stc
xorb
sub
in
add
adc
jo
ljmp
cmpsl
push
loope
inc
pop
mov
inc
sahf
xor
mov
shl
jne
cmc
and
mov
inc
je
cli
mov
or
mull
cmc
lea
popa
add
mov
out
sub
in
out
aas
scas
xor
xchg
xlat
enter
and
out
jno
stos
cmp
sub
push
adc
sbb
iret
dec
xor
jns
sahf
call
pop
jg
xchg
out
mov
pop
and
fmuls
add
xor
mov
dec
add
rcll
jno
jl
fcmovbe
pop
jns
shlb
mov
and
loopne
jmp
lret
sub
nop
or
lret
jle
mov
mov
hlt
icebp
xchg
push
push
xchg
mov
jecxz
push
lds
push
mov
add
repnz
fmul
push
pop
cwtl
fs
addb
pop
push
sub
cmp
xor
icebp
mov
mov
pop
xor
stos
xchg
lods
xchg
jne
push
mov
mov
jg
xchg
mov
and
ret
lods
fildl
jecxz
cmp
mov
lahf
cmp
outsl
repz
out
idivl
jne
in
cmpsl
inc
iret
rcr
ja
fidivrs
jge
xor
cmc
mov
mov
cmp
clc
mov
pop
xlat
mov
fadd
jnp
mov
xchg
push
adc
add
mov
xchg
cmpsl
mov
adcl
lahf
jbe
jns
int3
inc
lods
mov
adc
mul
dec
mov
sbb
and
mov
lock
adc
loop
mov
sti
mov
mov
pop
lds
cmc
sub
sti
mov
lea
ja
mov
sbb
sarb
cld
in
loope
popf
or
xchg
xchg
inc
jge
fsts
jp
fwait
xchg
cltd
mov
addl
push
adc
xor
out
inc
js
inc
jae
fnstenv
loop
xchg
ljmp
movsl
cwtl
jl
inc
test
lahf
cmp
movsb
or
lret
imul
mov
sub
test
cmpsb
fstsw
bound
out
sub
loopne
sbb
inc
mov
stos
xor
cmpsb
stos
das
and
aaa
and
xchg
push
sub
sub
mov
push
inc
iret
jo
push
insl
lods
dec
inc
clc
inc
dec
inc
ds
outsb
sti
sti
mov
icebp
mov
push
cmpl
inc
insb
sub
adc
push
jle
push
aad
sub
pusha
pop
fsts
outsl
inc
mov
xor
outsl
push
sub
notl
std
sar
xlat
mov
xchg
xchg
jns
out
mov
std
sbb
scas
and
data16
std
out
daa
fcmovnu
jl
xorb
insl
sub
mov
add
jmp
pop
adc
mov
sahf
es
mov
mov
xor
xchg
sub
xor
mov
out
lock
cmp
inc
mov
imull
fcomps
in
hlt
sbb
mov
ret
std
mov
cltd
inc
shlb
ret
addr16
lock
gs
jnp
push
mov
mov
xor
cmp
mov
fucomp
ljmp
in
out
sbb
lret
jmp
mov
push
int
in
mov
mov
aad
insl
sub
cwtl
sbb
dec
adc
mov
int
jp
mov
xor
pop
cmp
lods
std
pop
push
popf
mov
lock
mov
xchg
and
pop
add
pop
lahf
jmp
push
or
es
aaa
push
pop
cwtl
adc
imul
lret
fcoms
fldcw
hlt
pop
fmull
ljmp
dec
lret
aam
loopne
movb
sub
iret
in
orb
loop,pt
out
test
sub
sbb
dec
stc
adc
pop
daa
jbe
jg
pushf
hlt
fdivrs
mov
xlat
mov
add
pop
jno
stos
dec
push
jne
cmp
inc
test
cmpsb
jb
sub
outsb
sbb
and
mov
or
push
xor
sbb
int
push
pop
outsl
and
sahf
mov
scas
add
loopne
mov
inc
add
sbb
jmp
xchg
into
enter
push
scas
xchg
and
add
push
test
fiadds
and
inc
sub
mov
or
stos
js
add
shr
xchg
and
roll
mov
enter
imul
push
jbe
xor
add
push
outsb
jns
pop
dec
jecxz
xchg
pop
stos
mov
cli
das
mov
xor
mov
mov
pop
stos
cmpsl
jbe
movsl
mov
pop
mov
popf
jg
xchg
loopne
arpl
inc
je
pop
adc
xchg
stos
dec
ficoms
hlt
imul
ss
mov
inc
dec
dec
movsl
mov
inc
inc
lds
test
sbb
test
dec
ja
sub
fdivr
fildll
iret
aad
rorb
add
scas
mov
sub
out
jne
and
push
push
lods
movsl
mov
ja
inc
popf
push
repz
jbe
shl
loopne
jmp
jl
js
pop
push
mov
mov
outsl
pop
add
cs
dec
daa
xcrypt-ctr
cmpsl
fistl
mov
sbb
push
stc
fucomp
icebp
loope
add
dec
xlat
outsl
inc
out
jle
addr16
es
rcr
ds
in
xor
mov
sub
aaa
data16
pop
push
test
adc
test
push
leave
mov
sbb
repnz
mov
jnp
ds
and
push
sahf
or
pop
dec
je
jo
and
jbe
mov
icebp
sub
sbb
in
sub
es
outsl
lods
arpl
or
lahf
jmp
pusha
notl
mov
loope
out
addr16
mov
pop
notl
xchg
mov
mov
inc
xlat
lods
add
cmp
sub
nop
pop
inc
lcall
jne
pop
cmp
pushf
in
shrl
das
cmp
jge
add
adc
jbe
push
dec
mov
cmpl
xor
jg
mov
hlt
loop
jb
movsl
and
int
pop
decl
pop
cmp
in
pop
or
push
repnz
dec
cs
inc
iret
cmp
gs
sub
icebp
push
ljmp
rolb
add
lods
add
shll
fisubrs
sbb
jmp
xor
test
repz
or
jmp
jge
lcall
mov
sbb
push
sbb
pop
inc
sub
mov
inc
shrl
dec
shll
mov
lods
push
insb
and
ljmp
sbb
jmp
nop
inc
iret
dec
sub
dec
insb
jae
arpl
mov
sbb
sbb
popf
and
daa
adc
dec
rcrl
jecxz
stos
jo
push
jb
sbb
loop
call
sbb
neg
adc
fsub
out
push
xor
in
imul
push
mov
push
sub
mov
ja
push
cmp
insb
lods
mov
int3
mov
pusha
adc
jno
stc
out
call
in
cs
js
stos
into
inc
lods
es
sub
pusha
jmp
lds
jecxz
mov
inc
jp
jg
fstpt
pop
cmp
out
les
mulb
cmpb
test
shrl
xchg
or
ficomps
mov
mul
stos
push
inc
in
mov
stos
push
je
cmp
jl
jo
mov
in
icebp
jg
negl
jg
inc
stc
popf
aaa
insl
icebp
lret
inc
int
sbb
mov
push
orb
push
cmp
enter
xchg
test
inc
adcl
pusha
cld
fnsave
push
fnstenv
sbb
out
sub
jno
and
mov
mov
push
and
cltd
push
lock
push
sub
clc
fbstp
stos
scas
ss
mov
das
mov
fadd
clc
aaa
ret
jge
cwtl
shrl
pop
jecxz
push
aas
pop
xchg
lahf
ja
sbb
jnp
movsl
cs
arpl
icebp
stos
and
stos
sub
adc
imul
pusha
pop
xor
int
sbb
xchg
or
push
jp
in
xchg
cmp
stos
mov
xchg
sbb
adc
test
jge
cld
add
mov
dec
aam
idivb
mov
dec
mov
pop
add
mov
popa
sbb
cld
pop
movsb
lret
cmp
mov
mov
sarb
fs
cltd
cmpsl
cmp
and
icebp
mov
adc
call
mov
in
adc
mov
out
test
mov
test
sub
aam
or
xor
hlt
bound
in
aaa
leave
adc
jmp
pop
jge
push
out
mov
scas
pop
push
cs
inc
pop
in
fiadds
inc
imul
aam
cmpsb
xchg
mov
arpl
inc
adc
ds
mov
pop
ds
mov
adc
ja
dec
jp
pop
in
gs
cwtl
mov
std
frstpm(287
mov
push
fwait
mov
test
mov
leave
ds
and
shlb
test
iret
mov
es
shrl
in
xchg
addr16
test
push
mov
or
mov
jbe
movsl
jb
daa
inc
int
push
pop
and
xor
cmp
adc
arpl
jle
cltd
call
movsb
or
push
scas
dec
push
jbe
mov
jo
insl
cmpsl
loope
jbe
enter
or
movsl
imulb
movsb
jae
sar
je
fstp
shr
mov
pop
inc
jb
mov
sbb
push
movl
mov
push
xchg
loopne
jg
data16
insl
les
xor
push
inc
jle
pop
sbb
stos
fcoms
mov
add
push
int
stc
mov
testb
jl
jmp
bound
stc
out
push
jp
mov
push
sarl
shll
int
adc
lret
movsl
mov
xor
push
cmp
xchg
movsl
cmp
dec
mov
push
sub
pop
icebp
xor
stos
subl
cmp
dec
movsl
mov
jmp
in
sarl
sub
decb
cwtl
out
outsl
mov
je
push
lock
gs
push
int3
push
adc
mov
in
cmc
sahf
movsl
mov
pop
std
ss
lcall
xchg
insb
mov
xor
add
jp
sbb
push
push
or
mov
or
cmp
shll
lahf
xchg
sbb
jmp
sbb
jmp
cmp
cmp
push
xor
test
mov
inc
adc
mov
xchg
std
pushf
mov
les
rcrb
ror
jae
mov
adc
out
inc
addr16
sbb
ss
out
in
push
shlb
mov
test
cmp
push
popf
outsb
enter
jecxz
dec
mov
sbb
xchg
filds
jle
test
and
inc
jmp
dec
pop
in
jae
jmp
or
clc
shrl
xchg
mov
fists
inc
and
xchg
loopne
adc
xor
cmp
lods
and
jbe
mov
daa
stos
ljmp
add
scas
fisubl
arpl
add
les
mov
arpl
pop
pushf
xorl
rcll
ret
adc
jbe
std
stc
and
mov
mov
shr
sub
sbb
les
je
jno
pop
and
rclb
sub
mov
lcall
cmp
stos
dec
xor
incl
pop
xchg
xchg
push
push
add
shll
and
sti
dec
pop
inc
cmp
insl
jbe
pop
orb
and
mov
aad
push
mov
or
rorb
aas
mov
pop
out
jge
sbb
dec
sbb
sub
push
xor
out
sub
aas
testl
xor
jecxz
pushf
jns
int
pop
cmp
in
adc
fisttpl
sub
mov
jbe
mov
adc
jecxz
scas
cmp
insl
pusha
fisubs
ret
jg
mov
aaa
adc
outsl
insl
imul
cli
mov
ret
xchg
stos
sub
aas
shl
xor
cs
mov
mov
addb
pop
orb
and
mov
push
sub
stos
std
push
pop
outsl
repnz
lcall
xor
in
aas
lret
xor
repz
nop
pop
fstl
cmp
push
dec
es
dec
xor
mov
mov
sarb
sub
out
aas
popf
xchg
mov
inc
jae
push
or
xor
push
adc
adc
scas
dec
subb
and
mov
pop
adc
sar
shrb
dec
adc
lods
push
push
pop
inc
xchg
xchg
mov
xor
or
lods
mov
jbe
and
inc
inc
xlat
add
stc
das
sub
push
jnp
pusha
fs
jmp
cmc
test
push
jg
stos
mov
stos
mov
push
jg
es
stc
jb
jae
fsubrl
leave
scas
imul
arpl
mov
or
scas
sub
movsb
mov
sub
shl
add
testb
pop
jmp
pop
push
mov
fidivrs
cltd
jp
iret
sub
xchg
aad
adc
cmp
inc
xchg
ret
repz
nop
add
fidivrs
out
or
hlt
push
or
inc
insl
mov
sub
mov
dec
jmp
push
iret
xorl
rcrl
sub
mov
sub
and
leave
push
jnp
cld
das
and
lret
dec
push
int3
fsubr
test
mov
sub
jb
std
test
add
dec
add
jno
mov
push
mov
nop
mov
ret
mov
pop
out
push
xchg
ds
int3
loop
ja
cld
xchg
adc
xor
std
push
shr
cmpl
push
dec
dec
nop
jg
std
mov
sub
repz
sub
loop
push
sbb
push
and
or
xchg
clc
jbe
or
mov
add
inc
push
nop
out
mov
adc
cmp
sbb
adc
test
mov
fwait
push
loopne
sahf
sarb
lods
stos
inc
cli
jns
int
jns
inc
rolb
mov
and
sbb
pop
xor
xchg
dec
ja
js
and
cmp
sar
and
gs
inc
push
arpl
mov
and
add
push
shll
imul
adcl
sbb
add
adc
xor
jp
sarb
lds
and
shll
cmp
dec
rcrb
fdivrl
aad
push
xor
ss
repnz
rorb
jg
push
test
lods
inc
jnp
jge
js
mov
lcall
mov
push
ret
pusha
into
adc
scas
push
ret
addb
ljmp
cmp
aam
adc
and
fsubl
loope
loopne
enter
jecxz
sub
pop
jl
movsl
fucomp
add
scas
cmc
into
fisubs
cltd
and
mov
ljmp
bound
icebp
sub
mov
mov
cwtl
lods
sub
cmp
push
and
repz
outsb
loopne
push
adc
imul
fisttps
push
sub
and
es
fidivrs
pop
mov
sub
ss
inc
cs
sbbl
add
negb
iret
aad
movsb
cmc
adc
or
sbb
in
jp
and
mov
movsl
adc
in
pop
mov
repz
xchg
jae
pop
pop
ja
dec
out
pop
sarl
inc
push
inc
xor
dec
outsl
in
rcrb
xchg
mov
cltd
sbb
and
mov
jae
fdivs
push
pop
sbb
cmpsl
je
jl
or
and
mov
mov
inc
sub
shl
std
mov
dec
push
pushf
adc
stos
pop
pop
addr16
out
stos
ds
hlt
scas
or
jae
add
sub
int3
or
int3
jl
adc
lock
mov
add
jle
sub
repnz
addr16
mov
dec
xor
cmp
pop
popa
cmpsl
inc
sti
mov
pop
sub
in
jno
enter
jl
insb
add
insb
popa
mov
xchg
std
imull
cs
loopne
xchg
xchg
inc
mov
sbb
orl
dec
es
adc
cmp
add
scas
mov
lea
outsl
popa
in
inc
cmpsb
out
rcl
sbb
sub
pop
or
push
xor
xor
popa
aaa
into
or
cmpsb
inc
lock
xchg
lods
or
movsl
cmp
jne
pop
inc
cmp
xor
loope
outsb
movsb
jle
sub
xchg
sub
lahf
dec
push
repnz
xor
inc
cmp
mull
and
scas
inc
jmp
andb
leave
or
ss
je
mov
mov
cmpb
adc
sahf
movsb
popa
sub
cwtl
sbb
imul
adc
xchg
dec
adc
out
aas
jne
sbb
bound
popa
xor
orl
xor
mov
add
inc
fistl
in
das
scas
and
pop
xchg
hlt
cmpsb
adcb
rclb
mov
data16
dec
test
xchg
cmpsl
shlb
shr
sbb
cmp
sub
movsl
lahf
inc
jo
lods
xchg
add
and
stos
and
fcomps
rcrl
sub
into
xchg
rorb
andb
mov
mov
push
das
xchg
rcrl
and
or
mov
cmp
mov
xor
xchg
addb
inc
push
or
pop
mov
lcall
es
jae
cli
add
xchg
seto
cmpsl
cmp
loopne
xchg
inc
add
stos
filds
xor
sarl
orb
arpl
lods
test
data16
mov
sub
inc
test
test
cli
clc
add
dec
iret
cwtl
cs
jmp
in
icebp
aaa
lods
xor
xor
jno
jnp
jg
enter
dec
addb
rorb
int3
lea
outsl
mov
jle
lock
cmp
xor
hlt
add
sbb
imul
lret
out
lods
sbb
lods
mov
andl
adc
push
xor
push
mov
psrad
and
movb
in
out
inc
sbb
mov
lea
inc
mov
sub
in
daa
push
jnp
mov
cli
xchg
dec
int
ds
lcall
sub
jecxz
dec
xchg
ds
sbbl
sbb
repz
mov
push
xor
jo
cld
es
shll
mov
inc
cmpsb
mov
add
clc
or
and
jne
shrl
mov
adc
push
xchg
add
and
aaa
cmp
cmp
jle
jno
pop
xchg
xor
insl
ss
add
mov
ret
je
xor
movsl
xor
xor
pusha
ja
ss
push
adc
cld
rcrl
leave
mov
aas
dec
pop
xorb
addl
stos
cmp
push
in
push
stos
bnd
fwait
shrb
inc
imul
sahf
nop
fs
cmpl
cmp
mov
out
gs
and
fistpll
out
cmp
rol
sbb
es
arpl
aaa
and
int3
shrl
sbbl
mov
mov
mov
movsl
and
in
add
mov
jmp
sub
rolb
push
xchg
in
pop
je
adc
cmc
jb
pop
out
push
add
test
jno
mov
cmpsb
jnp
aam
or
stos
repz
and
cmp
hlt
int3
mov
pop
xor
push
into
pop
pop
add
push
adc
rol
pop
and
into
dec
add
push
lret
add
inc
xchg
mov
imul
int
sub
mov
jo
mov
sarl
cld
xorb
cli
sti
jns
scas
xchg
cmpsl
pushw
push
or
mov
adc
dec
jno
pop
mov
lock
or
outsb
repz
clc
and
xor
push
dec
jbe
push
dec
shr
test
clc
dec
repnz
leave
jp
fldcw
adc
dec
addr16
ret
push
adc
mov
jno
jp
repz
mov
jg
jns
icebp
add
ffree
dec
sti
inc
xchg
mov
mov
call
imul
adc
jecxz
jno
cmp
jbe
adc
jecxz
les
jp
fst
sahf
shl
jno
sbb
in
mov
out
dec
mov
lea
pop
or
xchg
jb
mov
imul
sar
cmp
enter
xor
xor
je
fisubl
mov
das
xor
push
pop
jae
shl
test
outsl
xchg
push
xchg
xchg
add
test
lods
out
xor
shll
mov
xchg
lds
loopne
xchg
adc
aad
outsl
addr16
jge
push
push
and
out
loope
sbb
subl
or
icebp
dec
mov
bound
sub
or
or
xor
sub
pop
push
mov
jg
in
and
mul
mov
cmc
jne
or
clc
subb
popf
movsb
jmp
xchg
nop
mov
cmova
fsubrl
icebp
mov
leave
jle
dec
lea
aaa
loopne
movsb
jno
outsb
inc
repz
cli
mov
jecxz
test
sbb
sbb
sti
pop
sahf
adc
lcall
sahf
add
lods
sbb
xlat
fnstenv
pop
adc
mov
lock
jg
les
xorl
mov
fsubp
mov
cli
ror
adc
inc
aad
test
in
test
mov
jb
loopne
test
pop
in
fs
mov
mov
aas
adc
cmp
mov
adc
xchg
or
inc
out
bound
jne
xchg
mov
pop
daa
push
inc
stc
es
test
cwtl
mov
xor
dec
mov
int
or
cmp
pushf
lret
sar
pop
and
and
test
arpl
shlb
leave
imul
push
inc
xchg
cmpsb
mov
cmp
sub
sbb
xlat
ss
push
movsb
jbe
inc
or
jmp
mov
dec
movsl
push
jmp
pop
sbb
fildll
fistps
insb
jmp
mov
push
add
sub
inc
in
xor
mov
aaa
lcall
push
leave
mov
mov
aam
add
fidivrl
sub
dec
mov
push
jno
mov
lcallw
lock
mov
sub
frstor
scas
and
in
fs
nop
xor
test
mov
xchg
inc
daa
loop
dec
inc
adc
adc
bound
mov
mov
scas
daa
lock
and
ds
jno
push
sarb
add
lahf
add
mov
stos
lcall
in
ss
dec
out
mov
pop
xor
cwtl
fprem1
loopne
inc
in
loope
mov
dec
xchg
sahf
in
push
popf
rdpmc
flds
cli
mov
inc
test
mov
and
addr16
adc
jne
sti
test
push
test
sarl
mov
sub
aad
cmp
insb
and
cld
adc
mov
dec
shrb
mull
push
and
mov
ficomps
int3
addr16
mov
mov
dec
xor
pop
mov
cmpsb
xchg
mov
add
mov
rolb
add
xchg
fwait
jbe
cmp
pop
fmulp
rcrl
rcrb
push
or
out
stos
lret
das
add
mov
inc
ss
les
xor
pop
hlt
mov
sub
fsubp
shlb
mov
inc
in
xor
dec
mov
jns
adc
ja
or
mov
dec
inc
xchg
sahf
and
add
lahf
pushf
call
jge
xor
dec
cmc
push
stos
or
or
mov
fstpl
ret
jns
mov
jnp
in
inc
sub
xchg
stc
mov
test
add
insb
outsb
push
xchg
add
std
or
call
loope
mov
xor
xchg
sub
cmp
out
adc
mov
xchg
lahf
xlat
mov
jecxz
addr16
add
sbb
xor
or
xor
xor
aam
bound
aaa
popf
data16
inc
cmpsl
xchg
movsl
aas
lahf
jns
scas
jbe
movsb
sbb
lods
insl
rcll
sti
pusha
mov
xchg
sub
leave
in
cwtl
aaa
fldcw
in
pusha
in
cmpb
stos
pusha
sbb
fcmovbe
cmp
addl
movsl
mov
dec
or
scas
xchg
mov
cli
jp
sahf
and
mov
movsl
mov
xor
in
test
pop
ret
stos
fs
pop
xlat
xlat
xchg
cwtl
stc
insb
and
dec
popa
inc
stos
outsb
add
lret
sarb
jno
fdivrs
pop
fcmovb
dec
or
shll
fs
mov
stos
es
adc
sbb
cmp
jno
sbb
movsl
sbb
sub
xchg
jne
adc
sbb
loop
or
outsb
sbb
push
stos
mov
ffreep
lret
pop
push
sub
cli
cltd
add
fcoms
fs
sahf
cmp
push
sti
das
jno
mov
test
ror
cmp
dec
in
push
lret
fsubl
sub
dec
or
and
or
ret
push
je
in
rcrb
hlt
roll
push
add
in
and
jo
push
lret
pop
pop
sbb
mov
icebp
repz
mov
dec
dec
lods
xchg
adc
movsl
pop
adc
cli
push
jle
repnz
jbe
aam
adc
fimuls
cmpsb
jno
xorl
test
xor
cmpsl
push
mov
jne
cmpsb
fistps
jns
test
mov
mov
adc
and
sbb
lds
xchg
pop
shl
out
aaa
daa
daa
inc
ffreep
int3
iret
loopne
stos
add
or
dec
push
dec
stos
jb
ret
leave
sbb
push
sarb
mov
popa
outsb
lock
add
adc
arpl
xchg
push
fcmovu
inc
cmc
cmp
sahf
scas
jae
jae
adc
jge
xchg
adc
jo
sub
shlb
mov
enter
cli
movsl
sub
dec
or
pop
add
bound
xor
dec
nop
mov
xor
mov
adc
jl
enter
and
pop
out
cmp
mov
icebp
icebp
jbe
pop
pop
cli
cli
or
mov
es
jb
dec
sti
jge
push
mov
stos
mov
repz
in
mov
aaa
xlat
pop
movsb
movsl
dec
jnp
cwtl
lock
cwtl
pop
in
cmp
push
ud1
out
jle
mov
mov
arpl
gs
faddl
das
mov
ror
inc
mov
loope
dec
mov
sbb
inc
sbb
mov
fbld
xchg
mov
icebp
jp
movsb
inc
lea
inc
loope
insl
cmp
inc
ret
mov
sub
and
gs
loop
ret
adc
ret
xor
mov
sbb
mov
pop
je
sti
sbb
jno
jle
mov
cltd
out
out
scas
jl
int3
insl
rorl
imul
inc
inc
data16
ret
cmpsl
xchg
subb
push
mov
sub
dec
subb
xor
mov
mov
in
mov
aaa
in
and
dec
mov
jecxz
jg
shrb
test
inc
ljmp
pusha
ret
xchg
nopl
insb
cmp
popf
sbb
jge
push
mov
xor
mov
lods
in
dec
movsb
and
jmp
or
mov
cmpsb
lret
call
cmp
sub
outsl
inc
lock
aas
xchg
cmp
and
outsl
stos
cli
jecxz
xchg
sbb
cli
jmp
pop
sahf
std
xchg
sub
les
inc
rclb
lock
push
jnp
pop
shr
ss
rcrb
mov
not
mov
in
inc
data16
shrl
add
xchg
ret
pop
adc
clc
fs
inc
loopne
fidivl
aas
push
or
lret
dec
push
inc
adc
push
adc
mov
test
test
pop
adc
inc
imul
roll
aas
scas
arpl
xor
loopne
adc
repnz
movsl
add
jmp
dec
cmp
sub
mov
ljmp
sub
or
jl
jo
in
pop
fwait
pop
in
mov
xor
adc
ss
out
mov
shl
mov
cwtl
je
and
jbe
popa
test
cli
popa
insb
xor
int
sub
jae
rcll
cld
push
lret
xor
pop
cmpb
in
dec
jp
xor
sahf
or
push
lock
mov
daa
mov
push
pop
jb
and
jp
jno,pt
arpl
cmp
dec
int3
or
cs
mov
repz
dec
jmp
sbb
mov
jno
iret
mov
jmp
pop
lods
sub
rclb
test
push
aad
mov
arpl
sahf
xchg
jns
push
pop
jge
xor
cmp
sub
out
test
pop
and
leave
push
dec
fiaddl
dec
add
pusha
repz
repz
out
push
pop
testl
imul
ljmp
imul
scas
jge
or
inc
rolb
lretw
adc
inc
jnp
rcrl
dec
sub
movsl
mov
mov
ds
mov
nop
cmp
mov
js
push
cmp
shl
push
outsb
icebp
arpl
jbe
jmp
mov
mov
iret
sub
dec
cmpsl
pop
in
cmp
ds
push
sbb
out
in
xchg
push
fnsave
data16
and
aad
rclb
and
jecxz
push
adc
sub
push
cld
or
cmp
mov
jl
push
insl
or
cmp
mov
movsl
aas
xchg
dec
sahf
jo
mov
lcall
xchg
add
lret
out
bound
pop
or
fwait
shlb
shll
mov
fadds
push
add
mov
out
out
iret
testb
or
push
and
push
add
and
or
pop
aam
pop
xchg
xchg
inc
push
leave
push
fstpt
add
push
pop
fistps
data16
and
push
js
test
dec
push
push
cwtl
les
ret
inc
mov
les
cmp
pop
pop
in
adc
mov
adc
add
mov
je
imul
cmp
cltd
aad
stos
popf
out
push
idiv
fmul
xor
pop
sbb
add
loop
dec
sub
jge
adc
rcrl
adc
pop
iret
adc
sbb
rolb
sbb
out
inc
dec
push
icebp
mov
sub
lock
pop
out
jbe
in
sbb
lods
fs
jne
adc
daa
rolb
out
mov
in
inc
pop
pop
insl
fucom
mov
mov
cmp
and
xchg
ret
cmp
mov
mov
push
add
jnp
rcll
loope
sbb
jo
dec
fldl
aad
bound
mov
jnp
cmp
xlat
js
jp
or
sbb
das
sbb
mov
dec
ss
and
ret
xor
pusha
mov
dec
push
xchg
add
pop
push
pop
and
mov
pop
outsl
lock
pop
sti
test
mov
arpl
pop
jge
ret
fimuls
sbb
fsubrl
xchg
xchg
ljmp
loop
into
stos
cmp
mov
xor
js
aas
adc
movsb
loope
dec
sub
push
cmp
pinsrw
or
clc
sub
jbe
mov
inc
mov
int
fisttps
addb
cmp
push
jb
fwait
loop
imul
test
je
in
adc
rclb
dec
mov
or
pop
mov
jg
mov
fsubr
rcrb
lret
iret
into
mov
xchg
es
jge,pn
adc
push
xor
arpl
xor
jmp
dec
lea
movl
inc
idivb
sub
leave
addl
jno
adc
xchg
stc
aas
in
xor
gs
rol
loopne,pn
lea
xchg
push
xlat
mov
pop
sti
mov
mov
push
jl
push
int
cmp
shll
push
mov
xchg
scas
cmp
pop
test
imulb
jge
jp
mov
bswap
mov
xor
dec
mov
in
adc
xor
in
insb
mov
test
push
shrb
jb
cmp
mov
adc
sub
push
pusha
jne
int
lods
xor
mov
mov
shl
xlat
pop
push
xor
nop
out
push
stos
sub
mov
into
adc
sbb
ret
jb
push
mov
sbb
test
sahf
imul
add
in
js
dec
jmp
sbb
out
loop
bound
add
pusha
pushf
xor
jns
mov
addl
addl
int3
sub
outsw
jnp
mov
call
cmp
lods
sbb
shlb
shll
data16
and
and
sub
sub
adc
sub
mov
lret
pushf
das
xchg
or
jnp
or
fsub
sbb
cmp
outsl
out
jmp
les
cmc
not
sub
add
loopne
sub
shll
push
stos
mov
loopne
movsb
popa
jne
adc
jp
shll
out
stc
pop
cld
rorb
fcomps
jmp
adc
lea
cld
dec
and
cwtl
xchg
dec
xor
js
jl
mov
ds
push
repnz
stc
jle
mov
std
dec
pop
dec
fldt
cs
xlat
pop
push
cmp
cmp
mov
dec
insb
ss
scas
outsb
stos
add
hlt
adc
or
cmp
nop
adc
outsb
adc
adc
mov
cmpsb
push
into
imul
cmp
fnstsw
mov
mov
cmp
leave
add
push
shrl
add
sbb
jmp
gs
push
scas
xor
cmp
dec
je
or
lcall
push
cmpsb
dec
or
mov
adc
jae
gs
add
mov
aas
xchg
add
mov
je
sbb
repnz
pushf
loope
push
and
or
dec
rclb
test
mov
repz
arpl
mov
xor
shl
lret
subb
rcrl
sub
call
add
add
enter
pop
jne
jg
cmpsl
jmp
idivb
dec
mov
mov
shrl
in
cli
iret
dec
test
cmpsl
mov
adc
xor
insb
jbe
xchg
es
push
leave
xor
inc
add
subb
out
aas
das
lock
repnz
jmp
or
outsb
out
lods
push
test
mov
mov
out
lret
mov
cli
jg
pop
cmp
xchg
mov
loop
shll
outsb
mov
jne
add
mov
mov
inc
mov
adc
mov
add
adc
or
es
cwtl
sub
lfs
mov
test
cmpsb
rcl
inc
aaa
xchg
inc
push
ret
fcmovne
jns
aad
jns
loope
movsb
add
idiv
xchg
jge
mov
mov
pop
jbe
mov
lds
hlt
mov
jae
rorl
adc
sub
dec
imul
jmp
cld
xchg
in
cld
pop
mov
inc
inc
or
push
jl
xchg
orl
sub
sub
cmpsb
fiaddl
stos
mov
xor
or
daa
and
jnp
js
mov
fistps
imul
insl
loop
sub
lds
sarb
sti
addl
std
mov
imul
mov
dec
push
jl
das
cltd
xchg
and
xchg
call
ret
imul
adc
pushf
arpl
insl
push
cmpsb
dec
ljmp
aaa
and
ficompl
clc
loopne
mov
std
stc
dec
std
shll
fnstcw
push
cwtl
and
jb
push
lods
sbb
pop
je
pop
nop
or
rcr
fld
shlb
pop
sbb
mov
inc
pop
imul
inc
mov
test
pop
inc
addr16
mov
add
and
adc
mov
mov
mov
mov
cmp
xor
mov
adc
test
pop
fwait
dec
sbb
push
jae
out
add
and
fs
and
sahf
pop
and
push
mov
xchg
and
cmpsl
xor
jo
and
sbb
xor
or
jne
arpl
xchg
mov
pop
push
mov
xchg
jns
mov
int3
stos
cltd
lock
shrl
jnp
add
mov
jle
cmc
xlat
mov
bound
dec
dec
out
aas
in
data16
pop
add
sbb
pop
mov
out
mov
pop
imul
jns
push
out
adc
popa
cmp
xchg
mov
lahf
mov
cwtl
add
pop
inc
out
cmp
in
adc
stc
cld
sbb
adc
xchg
jge
fbstp
cmp
nop
sub
movlps
push
adc
insb
lds
cmp
adcb
cmpsb
inc
mov
add
adc
loop
xchg
add
repz
cmp
pop
nop
inc
sbb
sbbb
in
cmp
testl
hlt
mov
or
jns
inc
pop
scas
dec
xchg
xor
mov
in
lods
jmp
insb
mov
pop
rcl
sahf
or
mov
out
aas
pushf
xchg
cli
adc
fs
mov
push
insb
sahf
sti
dec
movsb
xor
cld
cli
ret
jnp
dec
sti
push
fnstsw
cmp
imul
out
dec
and
mov
daa
shll
or
jnp
pop
pop
fimuls
mov
jo
push
add
sarb
jge
jmp
lods
inc
je
or
push
outsl
adc
mov
gs
lea
mov
mulb
jo
insl
rep
lods
in
mov
pop
dec
dec
push
jb
fiadds
in
jnp
xor
je
rorb
jo
mov
dec
add
jno
arpl
shr
movsb
inc
push
mov
jle
lret
mov
fsubrp
adc
mov
mov
add
or
ds
add
mov
jg
cli
jo
fistpll
popf
xor
shrb
pop
push
adc
inc
movsb
cmp
inc
stos
lea
mov
inc
dec
outsl
mov
scas
xor
jle
cmp
xchg
jae
mov
sub
ret
outsb
imul
jne
mov
arpl
subl
lods
sahf
ds
aad
rorb
jnp
mov
cmp
add
fildl
add
fdivr
sarl
xchg
loop
std
mov
cmp
out
cmp
add
jmp
movsl
push
jne
es
int3
push
shrl
dec
enter
push
rcrl
lret
loopne
cmp
addl
mov
lods
pop
sub
lret
not
idivb
test
push
adc
fdivrl
inc
fwait
xor
cmp
orb
and
inc
les
aaa
rclb
or
loopne
popl
adcb
nop
mov
pop
adc
popa
pop
bound
pop
arpl
cmpsb
popf
stos
je
mov
add
out
shrl
dec
jl
and
and
jbe
data16
popf
or
lret
repz
sub
std
dec
mov
pop
pop
loope
adc
xchg
arpl
sbb
push
nop
lods
adc
pop
mov
or
daa
icebp
rcll
cmp
mov
ret
mov
xor
fisttpl
or
inc
int
rolb
int3
hlt
and
movsb
cmp
jne
mov
mov
frstor
mov
lcall
pop
sbb
pop
sub
xor
repz
mov
das
dec
test
movsb
lock
push
neg
fsts
or
add
jns
xor
push
inc
insb
cwtl
mov
mov
lods
dec
mov
lret
pop
fbld
rorb
or
ffree
mov
pop
mov
push
lahf
es
xorb
pop
pop
add
fcomip
cmpsl
fs
inc
les
xchg
dec
inc
fs
adc
xor
sub
cwtl
cmpl
popf
mov
ja
mov
cmp
adc
mov
test
mov
outsl
mov
pop
repnz
lock
subb
or
sbb
js
stos
xor
add
mov
mov
out
ds
pop
or
pop
sbb
mov
mov
sub
mov
nop
ljmp
shll
jge
stc
and
ret
cmp
inc
mov
sbb
hlt
aaa
xorb
sub
dec
pop
jge
jne
jmp
fistpll
addr16
inc
lds
cmp
adc
mov
lock
xchg
out
sti
sbb
push
sub
out
imul
dec
sbb
lahf
fcomps
push
cmpsl
pusha
add
lods
frstor
mov
divb
out
mov
or
fidivl
add
inc
add
imul
xchg
inc
rcrl
sub
push
and
sahf
cmp
xchg
jmp
mov
xchg
call
orb
dec
mov
inc
cmpsb
jns
xchg
inc
inc
jge
add
scas
jno
xlat
and
adc
jnp
mov
xor
mov
add
test
test
jb
outsl
vpmacsdqh
pusha
inc
jns
pop
inc
push
sbb
dec
jp
push
add
sub
repnz
or
adc
testb
mov
dec
jno
mov
das
jge
out
test
inc
mov
inc
mov
sbb
sbb
iret
xor
es
sub
mov
inc
int
adc
pop
or
adc
add
xor
test
fwait
cmp
add
adc
int
pop
push
out
xor
jb
mov
mov
mov
stc
aam
je
mov
pusha
xor
lds
sti
enter
movsb
dec
les
sar
loopne
sbbb
and
and
ret
jg
xchg
js
mov
lods
test
mov
daa
jno
nop
add
ds
ficoml
in
mov
push
sub
imul
out
mov
sbb
sbb
in
mov
jle
repnz
rcl
push
xor
or
stc
fs
jg
je
dec
mov
pusha
outsl
xchg
sbb
lcall
mov
sbb
fwait
rclb
repnz
cli
xchg
push
pop
addr16
cmc
imul
sub
adc
jle
cli
pop
leave
gs
add
and
daa
lods
fsubs
cmpsl
int
or
mov
clc
adc
inc
dec
rcrb
mov
cmp
push
rolb
mov
sbb
outsl
add
mov
pop
test
or
jge
clc
cmpsl
lahf
dec
jnp
fwait
scas
push
push
ret
mov
in
repz
out
rcrb
inc
hlt
mov
mov
or
ret
mov
lret
mov
loop
rcr
xchg
inc
push
sti
mov
out
mov
sub
movsb
and
lods
movsl
mov
and
mov
filds
xor
es
push
xlat
mov
ss
and
adc
sbb
je
rcl
aaa
push
aad
loope
push
jmp
push
mov
jle
push
add
or
mov
scas
sub
lock
sbb
inc
aad
outsl
add
movsl
mov
dec
cmp
push
iret
sbb
aam
xor
loope
pusha
movsb
sbb
inc
pop
repz
cltd
cmc
shll
mov
fwait
cs
adc
sbb
int3
rep
ja
xchg
dec
add
fsubrs
mov
or
and
sbb
mov
aam
jo
movsb
int
loop
push
push
sar
out
test
pop
cld
cmc
aam
jne
addr16
dec
adc
adc
adc
std
jo
add
insb
sbb
out
push
inc
shl
pop
push
sbb
js
fmul
push
arpl
or
pop
sub
add
add
stos
test
in
out
mov
jno
stc
fdivs
push
mov
mov
rcrb
jb
std
cmp
in
add
in
mov
inc
iret
jle
jge
cmp
aam
out
mov
into
fchs
test
es
cmp
pop
cld
sbb
sbb
rorl
inc
push
xchg
or
sub
lods
enter
gs
cmp
dec
jp
lcall
jl
outsb
clc
stc
jge
xorl
test
sbb
and
loop
xlat
mov
push
arpl
and
pushf
lret
mov
sbb
stos
inc
in
mov
pop
jmp
popa
push
pop
xor
and
xor
inc
xchg
sbb
ficoms
mov
mov
jns
cmp
add
and
sbb
pushf
rcr
add
jl
mov
and
adc
ljmp
sbb
dec
fistl
push
lds
dec
push
push
cmp
in
cmc
mov
pop
mov
mov
mov
jecxz
push
rclb
test
xchg
inc
inc
adc
cmpsb
in
popa
jae
cmp
das
je
mov
cmp
das
jl
xchg
lods
pop
test
or
stos
or
arpl
inc
mov
inc
adc
popa
adc
xchg
push
or
outsb
pop
jae
bound
ss
cmpsl
fwait
sbb
or
or
jle
aad
sub
and
push
sbb
cmp
rclb
ss
mov
sub
and
cmpl
jmp
inc
xor
mov
pop
pop
rorb
cmp
inc
inc
jne
andb
mov
inc
mov
inc
inc
mov
inc
imulb
mov
mov
in
xchg
in
mov
inc
inc
aaa
push
pop
std
push
and
xchg
inc
cmp
sub
push
imul
pop
notb
es
sub
push
pop
inc
aaa
shlb
mov
push
jp
stos
clc
jne
jge
mov
ss
sub
lcall
sbb
mov
shll
inc
popf
add
jge
testb
sbb
lret
fwait
sti
lea
pop
cmp
hlt
ret
ret
lds
jno
sub
aaa
lcall
hlt
xchg
rcr
xorl
inc
mov
aam
fwait
fwait
sbb
out
xor
je
daa
push
push
jecxz
inc
jge
cmp
mov
mov
push
mov
int
sbb
adc
push
jo
insl
rolb
mov
pop
add
out
inc
sti
xlat
xchg
in
adc
call
sub
dec
repnz
sub
and
cmp
ret
xchg
or
scas
push
into
fwait
insl
lret
and
mov
ja
xor
in
add
jmp
hlt
iret
imul
dec
dec
mov
jno
rcll
dec
call
into
pop
jl
jmp
xor
fisubs
add
or
dec
jle
push
cld
mov
and
inc
pop
roll
mov
iret
dec
cmp
push
jae
orl
loop
cmp
sbb
mov
xchg
sbb
stc
cmp
in
stc
inc
inc
lret
aad
rorl
jnp
sarl
data16
and
xchg
lds
mov
scas
mov
fwait
into
xchg
mov
xlat
iret
fwait
insb
imul
addr16
xor
sub
and
and
mov
fwait
shr
in
dec
jge
or
dec
pop
adcl
das
shll
cli
jnp
test
sub
pop
in
std
fs
lahf
inc
mov
adc
push
inc
stos
jle
andb
xchg
daa
xchg
add
inc
sub
adcl
idiv
sysenter
inc
push
xchg
adc
dec
jns
sahf
gs
sub
inc
stos
sbb
outsl
and
fisubrs
mov
mov
test
dec
push
mov
pop
sbb
inc
lcall
mov
pop
rorl
loopne
cmp
xchg
push
push
dec
mov
or
loop
pop
lcall
gs
pop
js
arpl
outsb
pop
imul
push
jp
int3
aam
or
les
addr16
push
adc
aad
inc
xlat
subb
clc
mov
add
cwtl
icebp
or
adc
out
dec
hlt
pop
xchg
cmp
lret
mov
or
adc
hlt
dec
out
push
mull
dec
dec
dec
movsl
sarb
mov
xor
jae
xchg
subb
jo
push
imull
push
mov
inc
addr16
ffreep
lret
cmp
sub
jmp
fdivrl
cld
out
rorb
into
or
idivl
mov
scas
dec
addb
or
inc
jge
pop
sbb
sbb
dec
pusha
sbb
in
or
jp
push
jne
notb
aad
popf
inc
sbb
mov
inc
mov
push
and
inc
push
dec
inc
push
call
movsl
push
add
push
inc
int
cmpsb
in
mov
lods
insb
xchg
lret
js
jmp
xchg
into
insb
mov
push
test
add
xor
cmpxchg
ret
push
orl
das
adc
repz
xchg
dec
jb
cli
and
icebp
and
pop
jae
adc
push
and
pop
xorl
scas
jmp
pushf
cmp
mov
aas
sbb
mov
mov
incl
stos
sar
ret
je
scas
mov
dec
push
push
adc
bound
inc
cmp
jns
aam
cmpsb
mov
fistpl
sub
fidivl
inc
dec
fildll
ret
jns
jo
cmpsl
bound
scas
fdivl
xor
adcb
hlt
pop
adc
jmp
mov
fistl
aam
out
jge
sub
jns
sbb
or
jl
cmp
sbb
cmp
xor
call
jno
mov
xor
roll
lods
add
lahf
inc
es
leave
pop
adc
jmp
shl
pop
out
jmp
push
xor
jnp
js
add
loopne
movl
or
or
cmp
xchg
add
seta
movsl
cmc
cmc
push
repnz
cs
fadd
mov
int
jae
iret
dec
and
pop
aaa
arpl
subb
cmc
pop
xchg
push
or
mov
loope
cmp
xchg
jae
js
addr16
rorb
mov
sbb
xchg
lcall
filds
push
loope
rcrb
in
insl
jne
lods
cmpsb
add
cmpb
lea
push
adc
out
cmc
and
sub
mov
or
stc
inc
inc
in
test
ret
test
or
ja
nop
iret
aam
imull
cmp
les
xchg
cmpsb
jmp
push
fsubrp
mov
lods
jns
out
fidivrl
sbb
repz
add
jmp
inc
in
popf
cmp
cmp
ret
data16
scas
add
push
push
jmp
pusha
fmulp
lahf
sbb
subb
jge
adc
pop
sub
push
outsb
add
adc
js
sub
into
mov
push
es
fimuls
sub
cmp
push
jg
mov
dec
repnz
nop
test
pop
inc
enter
test
fs
jbe
cmp
jecxz
adcl
out
repnz
cmpsl
cmp
jp
ljmp
notb
inc
fs
in
decl
es
ljmp
ficoml
dec
xor
repz
inc
cld
pop
lds
mov
std
out
push
mov
and
es
fistpll
adc
orl
in
pop
jg
int
jl
sub
rcll
lret
mov
add
loop
jge
push
push
inc
movsl
fnstcw
mov
lcall
popf
inc
rcl
lds
std
cmp
jge
jae
push
nop
fldt
subb
inc
adc
cmpsl
adc
fdivrl
dec
int3
mov
mulb
pop
adc
or
or
aaa
shlb
lds
add
mov
ret
das
adc
xchg
lret
mov
fdivl
push
fwait
xor
fsqrt
ja
add
or
jb
pop
jp
cmp
sahf
cmpb
push
clc
lea
jnp
fsubr
pushf
sbb
adc
daa
arpl
xchg
cmp
mov
jb
and
mov
mov
lahf
aad
fs
cmp
or
imul
pop
adc
mov
int
mov
orb
add
stc
lret
pop
push
lret
leave
iret
sub
jne
sarb
push
dec
inc
mov
sbbb
stos
cmc
xor
jne
pop
aam
aad
mov
push
sahf
test
jne
mov
mov
xor
in
inc
jge
fistpl
insb
outsb
pop
jno
push
mov
cmpsl
imul
scas
mov
xchg
push
out
clc
scas
push
call
jp
add
sbb
fisubrs
loop
inc
xchg
fs
ds
ret
xchg
fadds
push
sbb
mov
jbe
outsl
rcr
aam
push
fsubrl
sbb
jg
xchg
push
or
dec
shl
inc
lcall
push
mov
and
fdiv
xchg
jmp
or
pop
push
pop
cwtl
inc
pop
mov
lds
jmp
loope
push
mov
aad
repnz
cmp
mov
jmp
pop
into
fldcw
insl
xor
cmp
js
fsubr
js
sti
adc
cmp
jae
stc
push
inc
cmp
push
aam
shlb
insl
jl
add
cmp
imul
sbb
push
push
cmc
mov
and
ljmp
test
lret
idiv
mov
push
insl
mov
xchg
fdivrs
testl
std
push
or
movsl
mov
mov
lcall
mov
mov
dec
jge
das
mov
inc
inc
jle
jmp
mov
rcll
or
mov
sahf
adc
xchg
mov
cmpsl
jnp
mov
xor
fcoml
adc
mov
mov
sub
mov
and
jns
fsubs
das
cltd
push
mov
ss
cli
scas
out
rorl
push
std
mov
int3
sbb
and
aad
cmpsl
xchg
lcall
sub
push
ds
xor
movsl
dec
jo
std
xor
sti
and
leave
enter
adc
push
movsb
and
sbb
cmp
outsl
mov
jo
out
xchg
jae
lods
call
cmc
js
dec
sub
stc
pop
jae
fcoml
rolb
jbe
fcompl
loope
sub
push
jnp
xlat
and
icebp
mov
push
mov
int
dec
enter
pop
add
jns
notb
pop
call
add
mov
pop
leave
dec
sbb
daa
jle
sbb
or
test
lret
es
sbb
movsb
sbb
jle
add
lods
out
lock
mov
lret
fs
add
mov
incl
in
jbe
outsl
fwait
dec
out
ds
cmp
push
or
lods
pop
push
imul
movsl
subl
iret
cmpsl
fistps
pop
ss
insb
test
and
fstpl
fcoml
je
sub
inc
jo
push
jecxz
mov
push
xor
and
fs
jbe
sub
fistl
in
or
dec
ds
jge
push
xchg
inc
hlt
inc
push
lahf
mov
imul
xchg
test
sub
movsw
shl
pop
dec
addr16
fstpl
fwait
xchg
js
mov
xor
cld
pop
ljmp
lods
xor
movsl
negb
daa
lock
sub
cld
jmp
popf
mov
pop
in
call
loope,pt
sub
sub
dec
loope
cmp
int3
stos
pop
repz
push
and
dec
scas
push
mov
push
mov
test
mov
cli
and
sbb
lods
add
fisubl
sbb
incl
or
cmp
mov
xchg
xlat
insl
cli
pop
test
js
pop
loope
cmpsb
xchg
loopne
sub
or
cli
mov
rclb
jmp
leave
nop
test
jae
dec
adc
push
test
cmp
cltd
adc
add
nop
stos
punpcklbw
inc
dec
incl
gs
lcall
cld
pop
out
add
jne
icebp
inc
add
sbb
adc
xor
test
loopne
cmp
xchg
xchg
dec
inc
shrl
mov
subl
testl
lret
mov
xchg
pop
cld
pop
jl
mov
leave
fsts
test
test
test
test
or
sahf
int3
jg
or
jbe
or
dec
sbb
ficoms
inc
inc
call
negl
aad
or
mov
sbb
lock
xchg
inc
mov
dec
js
pop
js
mov
in
push
test
cli
popa
mov
mov
cmp
xchg
dec
push
pushf
mov
fsubrp
dec
cmp
icebp
push
sub
sub
outsb
jnp
jecxz
mov
ds
mov
adc
dec
add
lcall
push
xchg
cmc
adcb
cmp
fxam
adc
xor
in
lea
pusha
stos
pop
mov
and
mov
test
sbb
aam
or
cmpsl
mov
es
push
pop
inc
jmp
in
mov
enter
out
push
push
out
push
and
sahf
mov
xchg
insb
lock
lods
adc
xchg
lahf
mov
add
pop
addr16
mov
pop
pop
adc
inc
aad
mov
jbe
dec
xor
aam
xor
push
sub
dec
xchg
sbb
les
push
xor
inc
cmp
xchg
in
jo
add
fisubl
xor
test
aam
in
pushf
add
loopne
cld
xchg
sbb
push
rolb
pop
mov
sub
ss
cmp
repnz
pop
fdivrl
daa
hlt
in
dec
sbb
inc
into
cmp
sub
sbb
sbb
js
fs
or
into
je
and
xor
mov
fdivs
cmp
and
cmp
dec
imul
add
dec
jecxz
test
add
repz
inc
lsl
cmp
dec
mov
lret
push
mov
xor
dec
pop
xlat
inc
jbe
push
xlat
ficompl
stc
inc
cmpb
enter
xchg
xchg
outsl
sbb
xchg
filds
xchg
cli
mov
shll
stc
jle
xor
jnp
cmp
std
jg
stos
jb
and
dec
pop
mov
jne
pop
mov
stc
rolb
dec
push
dec
add
test
imul
shl
xor
inc
notl
in
xor
shlb
js
pop
add
jns
jnp
mov
lret
pop
ret
xor
ja
adc
adc
jns
sbb
cld
or
pop
iret
test
cmpsl
inc
xchg
push
lods
pop
daa
loop
adc
flds
shll
jnp
mov
ret
inc
pusha
or
add
add
js
std
mov
cld
sub
stos
xlat
mov
xchg
adc
adc
fcomi
bound
add
rcr
add
and
add
in
fwait
xor
pushf
xor
xchg
mov
popf
outsl
sub
sti
xlat
dec
xor
lock
add
and
mov
ret
stc
lods
inc
xchg
cli
mov
and
outsl
and
out
test
mov
pop
std
mov
pop
iret
lods
or
shll
inc
push
inc
les
push
mov
inc
fxtract
stos
pop
cld
jmp
mov
sub
in
das
push
shrb
jno
pop
mov
or
sub
pushf
aas
das
push
in
ja,pn
add
jae
mov
cmp
daa
movsb
and
lret
out
sbb
bound
int3
xchg
pop
jp
out
jne
add
out
mov
adc
sbb
mov
xor
pushw
pop
sub
loopne
push
notb
fidivl
pop
ss
jl
dec
mov
push
lock
mov
pop
push
arpl
push
out
pop
lea
mull
mov
test
bound
add
push
movb
pushf
and
pop
pop
pop
cmp
jbe
jecxz
in
lds
lds
xlat
lds
cmp
fsub
pop
cmp
mov
xchg
sahf
lret
test
test
cmp
aad
imul
aaa
js
jp
shlb
mov
mov
xor
cli
and
sbb
cmp
xchg
test
inc
lahf
xor
lds
lret
xor
xchg
mov
std
inc
mov
sub
lahf
addb
mov
fisubs
jl
jbe
insl
ljmp
in
imul
aam
jo
push
mov
and
mov
pop
addr16
mov
stos
and
test
push
pop
dec
insb
dec
insb
sbb
xlat
pop
fidivrs
scas
lret
and
and
test
cmp
cmp
mov
or
stc
fidivrl
cwtl
cmc
lret
enter
adc
sub
aaa
cltd
out
sbb
cmp
sti
add
xchg
mov
jp
jne
jno
movsb
cwtl
cwtl
addr16
push
leave
loope
xor
stos
aam
ds
in
or
lods
push
sbb
flds
outsl
outsb
mov
cld
cmp
test
mov
mov
dec
add
inc
ds
movsb
pop
xchg
inc
sbb
out
dec
pop
mov
and
bound
mov
std
fisttpl
imul
cmp
ljmp
frstor
pop
sarl
push
movsb
fwait
mov
inc
test
adcl
add
movsl
les
sub
pop
xor
insl
rcrb
stc
sbb
into
or
imul
push
js
dec
and
gs
jnp
cmpsb
lret
clc
xchg
test
mov
adc
cmc
or
dec
out
mov
loope
sub
adc
mov
mov
imul
aas
pop
push
push
scas
adc
cs
add
enter
cmp
mov
paddq
push
ljmp
adc
je
enter
or
daa
adc
sahf
pop
sbb
pop
mov
loope
xor
pop
mov
aaa
aas
nop
dec
cwtl
popa
pop
jg
lret
or
mov
es
aad
mov
sub
dec
inc
in
xor
add
jmp
clc
mov
mov
xor
mov
mov
pop
lahf
mov
fs
pop
xchg
roll
pop
sbb
mov
outsb
xor
fimuls
inc
jnp
sbb
stos
cmp
out
cltd
clc
sub
and
sub
adc
lds
popa
mov
mov
xchg
data16
sbb
jecxz
push
xor
push
mov
repnz
mov
jl
adc
pop
call
mov
leave
stc
fmuls
xlat
inc
out
dec
pop
or
or
cmp
cmp
jbe
push
pushf
stc
mov
jb
das
int
pop
sbb
testl
sub
clc
ret
scas
adc
mov
jp
adc
lods
sub
add
xchg
xchg
cmpsl
fdivr
push
faddl
pusha
iret
out
ljmp
xor
faddl
mov
stos
insb
scas
cmp
and
pop
sbb
fsubrl
mov
imul
or
fcomps
lods
dec
fcmovbe
lret
mov
pop
in
mov
clc
nop
int3
stos
outsl
ljmp
push
lahf
xlat
outsb
or
mov
lods
or
stc
aaa
mov
dec
mov
in
ds
sub
cmp
pop
mov
fs
cwtl
pop
dec
subl
mov
mov
cmpsl
shlb
jns
xchg
vrsqrtss
jae
dec
dec
adc
fisubl
jnp
mov
fs
xorl
jl
pop
cmp
mov
cmp
dec
test
data16
cmp
repz
xchg
sarl
pop
mov
mov
pop
mov
jb
ja
lret
mov
lds
std
adc
mov
cmpsb
lods
cmpsl
pop
xchg
xchg
imul
mov
xchg
stc
dec
push
test
bound
fisubl
jne
dec
dec
leave
dec
sub
or
jbe
mov
mov
push
push
pop
mov
pop
xchg
outsl
dec
inc
out
ret
push
ficoml
fwait
add
mov
shll
jl
frstor
das
dec
lahf
inc
test
mov
cmpsb
out
mov
inc
or
sub
or
and
popa
pop
push
lods
cmp
and
in
xor
push
leave
jns
xchg
mov
xor
rorb
adc
xchg
lea
mov
xor
jo
ja
xchg
subl
jb
inc
jle
pop
dec
and
lret
lahf
mov
mov
dec
lock
and
aaa
cwtd
stos
lret
mov
xchg
enter
sub
xchg
aam
out
sub
loop
mov
pop
pop
inc
pop
rcr
rcr
bound
push
decb
or
mov
xchg
xor
aas
test
dec
in
lret
pusha
loop
mov
cmc
insb
sahf
out
mov
in
jle
push
add
mov
dec
bound
lea
fidivrs
lea
sti
adc
dec
cli
pushf
dec
jge
ja
push
int3
repz
dec
stc
pop
imul
inc
popf
mov
pop
int
pop
sbb
popf
inc
mov
sbb
bound
jl
dec
scas
mov
dec
inc
inc
pop
or
xor
mov
add
push
mov
xor
or
dec
mov
into
and
ret
push
ds
pop
mov
imul
add
pop
dec
xchg
in
xchg
fdivr
mov
int
sub
sbb
sbb
pop
leave
mov
aaa
adc
push
pop
test
pandn
xlat
jnp
insl
stos
loopne
aas
mov
or
and
shl
cmpsl
inc
testl
outsl
mov
jno
mov
scas
sub
stc
aaa
in
inc
mov
in
popf
pop
iret
fs
aas
outsb
inc
pop
mov
push
aas
fmull
add
push
xor
daa
xchg
and
mov
or
mov
scas
rclb
xchg
and
xor
xchg
push
iret
ljmp
aad
or
inc
inc
push
jne
and
adcb
aaa
loopne
xlat
iret
cs
insl
fiadds
leave
test
andl
popf
cmp
cmpsb
loopne,pn
and
and
js
jge
cltd
notb
mov
sub
xor
push
outsb
push
popa
int3
out
stos
mov
sarb
sub
dec
fs
fst
sub
insb
adc
fldcw
clc
jg
fnstenv
ret
dec
dec
adc
rep
push
lds
imul
dec
mov
iret
jmp
jno
cmpsb
xchg
and
adc
std
iret
addb
adc
xchg
lahf
mov
cmpsb
pop
in
js
xorl
adc
in
cmp
lock
shll
repnz
push
lss
jnp
dec
dec
dec
pop
sbb
sub
pop
xor
cmc
mov
sarb
gs
push
dec
imul
pop
cmp
or
mov
out
sbb
push
test
bound
loop
mov
arpl
sub
stos
repnz
sub
out
push
jg
mov
add
add
in
sahf
cli
in
cmp
xchg
out
sahf
mov
ret
popa
jns
test
mov
rolb
je
fistpll
popa
test
jne
pop
in
lahf
inc
or
or
add
inc
xorb
xor
into
mov
mov
jmp
fstps
push
jns
lcall
das
icebp
and
mov
movsl
test
lahf
pop
xchg
fdivl
sub
sbb
ja
das
mov
fnsave
xor
ror
orb
adc
faddp
stos
or
mov
mov
clc
test
dec
cmpl
fisttpll
and
mov
pinsrw
stc
xchg
daa
or
in
or
fnstenv
ret
jge
in
push
mov
adc
pop
repnz
js
scas
push
add
sub
cltd
cmpsl
lds
jmp
repnz
dec
xor
mov
stos
ret
fwait
in
mov
mov
mov
jbe
mov
adc
out
push
mov
mov
ljmp
add
js
mov
cmp
mov
mov
jbe
dec
rorb
lds
or
js
inc
cmp
loope
sar
out
cld
cmp
repz
add
sbb
push
mov
pushf
dec
sub
jno
mov
mov
mov
mov
inc
push
shrb
shrl
mov
or
icebp
movsb
or
xchg
sub
push
cmp
dec
cmp
dec
sub
pop
lds
jl
pop
outsb
xchg
out
mov
or
cmp
out
mov
sub
loope
xorl
cmp
jb
pop
loopne
and
out
outsl
mov
sub
pop
pop
push
aad
or
data16
je
outsb
fs
ljmp
test
adc
test
mov
jno
ret
jmp
cmpsl
dec
shlb
pop
shr
movsb
and
and
lds
aad
sub
movsl
jge
mov
fadds
xchg
xchg
xchg
pop
das
mov
cmp
push
jg
mov
pushaw
lcall
sahf
fs
push
push
pop
pop
adc
out
cmp
lahf
add
and
fstpt
rorb
xor
push
pushf
in
pop
inc
out
push
sbb
mov
inc
in
fwait
and
jmp
loopne
adc
xchg
sub
fs
mov
adc
sbb
cmpsb
cs
fcompl
test
xchg
xchg
pop
scas
pop
push
mov
ret
icebp
repnz
dec
in
lds
popf
jge
imul
in
mov
sub
cmpsb
repnz
xor
nop
sbb
cwtl
jl
mov
mov
aam
popf
fsubrl
and
push
push
and
movsb
push
jb
fnsave
out
scas
lahf
mov
and
pop
mov
clc
iret
sbb
ret
and
pop
jmp
loopne
stc
push
outsl
jl
fcoms
push
mov
jmp
mov
mov
cmp
or
xchg
push
lahf
in
adc
cmp
adc
xchg
pop
mov
js
vandnpd
sbb
push
cs
dec
jns
aad
or
push
jbe
mov
shl
shl
dec
lds
sbb
aam
outsb
push
mov
jno
push
push
shll
ret
adc
or
mov
imul
mov
scas
mov
scas
sbb
fwait
inc
pop
xchg
jmp
stos
dec
ror
dec
in
fildl
repnz
sti
jge
sub
outsl
cmp
dec
mov
or
xchg
mov
lea
mov
jae
test
sub
jnp
ljmp
cmpsl
fildll
outsb
aaa
enter
sar
jmp
sub
pop
adc
inc
test
push
or
jne
inc
sub
mov
leave
mov
dec
popa
out
nop
or
std
sub
push
xor
cwtl
sub
push
lea
xchg
push
nop
cmp
insl
cmp
popa
pop
lahf
in
sti
mov
adc
inc
xor
pop
mov
popf
test
mov
cmp
push
xchg
pop
mov
adc
push
loop
pop
and
jae
mov
lret
mov
sub
add
xor
pop
cltd
xor
fnstsw
xchg
into
stos
pop
mov
mov
push
jp
mov
xchg
mov
movsl
push
out
xlat
mov
aas
cli
testl
adc
cld
sub
js
jle
push
lahf
jnp
push
or
mov
ljmp
bound
std
push
andb
mov
xor
xchg
sub
insl
mov
pop
cmp
aad
pop
xor
fs
loopne
jae
mov
or
xchg
mov
arpl
mov
push
dec
test
push
add
mov
dec
lds
mov
movsl
pop
ret
cld
imulb
ja
add
lcall
ja
mov
mov
and
mov
and
loop
pop
in
jp
fcmovnbe
mov
push
mov
stos
ret
cli
or
leave
adc
jl
ljmp
inc
call
aas
push
dec
pop
mov
aam
jecxz
insb
lea
or
push
ret
xrelease
sbb
inc
mov
aas
cs
and
dec
and
sti
mov
xchg
dec
lcall
in
scas
into
ret
cmp
out
rcrb
stos
test
sbb
test
pop
lret
sbb
not
push
push
outsb
jge
inc
lret
xchg
out
xor
mov
sub
jp
imul
or
pop
xchg
jmp
in
xor
xchg
mov
int
je
pop
sbb
add
jmp
insb
push
ljmp
push
xor
push
cmp
jle
jne
scas
sub
test
and
jmp
sbb
nop
mov
inc
std
orw
cmpsl
fwait
xchg
mov
sub
int3
test
jge
inc
mov
lret
jecxz
push
xor
mov
rorl
popf
or
test
mov
fcoml
iret
nop
mov
mov
dec
insl
mov
ficoml
lahf
xchg
mov
or
popf
es
mov
sbb
lock
fwait
cmpsl
cmpsl
mov
sbb
int
and
fbstp
mov
outsb
mov
pop
cmp
arpl
leave
lcall
nop
insl
cmp
add
mov
xor
xchg
daa
pop
lahf
jecxz
insl
cmp
add
ret
sbb
mov
pop
adc
leave
add
mov
clc
lock
inc
orb
push
xchg
rcrb
mov
mov
jmp
in
sbb
stc
std
shll
stos
rcrb
inc
and
jne
scas
in
sar
enter
sar
mov
or
ret
scas
cmp
aad
fs
or
stos
dec
ss
cmpsl
mov
push
aas
jmp
out
xchg
mov
fidivs
daa
pop
in
xor
or
mov
xorb
icebp
mov
jmp
dec
test
rorl
pop
test
mulb
movsb
push
mov
lcall
or
push
nop
sbb
push
nop
movsb
int3
test
cs
jp
adc
mov
iret
pusha
and
ds
cmp
fnstsw
xor
sarb
mov
cld
out
imul
daa
cld
fists
pop
cmp
mov
inc
xchg
icebp
sbb
mov
jp
mov
test
inc
loopne
xor
sti
add
adc
jns
shlb
nop
dec
fistpl
mov
and
sub
ljmp
loop
jmp
rcrl
in
and
clc
movsl
pop
stos
add
test
sub
fcoms
aad
icebp
mov
pop
in
loope
add
not
jmp
push
popa
cmp
lods
sub
xchg
std
pop
jne
cmpsl
xchg
xchg
and
mov
push
inc
shl
mov
xchg
add
jl
leave
pop
imul
pop
mov
pop
or
repnz
jle
mov
loop
or
mov
xor
test
or
push
cli
cld
sub
jae
mov
or
aam
xchg
push
mov
pop
lcall
add
into
enter
mov
push
or
insb
fcomps
add
jmp
adc
push
push
lcall
xchg
pop
shr
mov
scas
sub
pop
jge
ja
sahf
clc
xchg
scas
pop
fstpl
clc
pop
loope
jge
out
inc
das
imul
in
push
jb
bound
dec
mov
pusha
adc
sbb
jns
xorb
push
andb
std
xchg
dec
rorl
push
cmovo
imul
nop
lods
fwait
jp
or
les
adc
mov
xchg
cmp
xchg
sbb
jl
mov
imul
popf
enter
cltd
inc
stos
sub
inc
cltd
rcll
or
sub
mov
jno
cmpl
xlat
ds
call
inc
mov
loop
ficoml
mov
call
mov
ror
mov
subb
or
push
ret
aad
fisttpll
inc
pop
lods
sub
pop
cmp
mov
out
fstl
push
loopne
js
pop
and
sti
and
mov
fdivrl
adc
inc
lcall
loopne
pop
insl
inc
push
or
cld
xchg
mov
mov
imul
ss
loopne,pn
lods
mov
std
mov
sub
xor
inc
push
mov
and
fildl
xor
xlat
push
stc
sub
dec
sub
rcl
test
lods
push
xchg
push
xor
nop
sbb
push
dec
push
mov
rclb
ljmp
dec
inc
push
xchg
xchg
sbb
loopne
inc
out
inc
subl
add
or
and
dec
movsl
fisubrs
or
xchg
js
jb
out
loope
jge
lods
mov
add
ljmp
jl
repnz
sti
call
push
mov
aas
and
test
shl
addr16
pop
ds
insb
mov
pop
mov
push
and
dec
jmp
pop
adc
out
cltd
or
push
mov
push
aam
rcrl
loopne
hlt
cmpb
imul
cmp
loop
insb
dec
aam
and
jnp
pusha
add
sub
jbe
dec
mov
int
mov
repz
loope
xchg
jl
mov
pop
sub
nop
je
clc
inc
lahf
orb
mov
int
test
lret
insl
mov
scas
fisubl
push
xchg
dec
pusha
and
pop
jp
dec
repz
xchg
test
jbe
xchg
push
std
pop
jle
adc
fnstenv
and
push
imul
loop,pt
pusha
ljmp
xchg
fwait
cmp
insb
sbb
je
cmpsl
popf
mov
enter
pop
mov
lahf
das
cmp
popa
push
cmpsb
inc
pop
pmaxub
inc
aas
push
ret
fldl
pushf
pop
movsb
sub
jno
fld
enter
jle
shlb
adc
adc
jg
lods
mov
in
or
add
jno
dec
leave
es
mov
jbe
das
inc
sub
jg
stos
xchg
mov
pusha
aad
push
xor
and
leave
divb
dec
cld
xor
lock
les
stc
les
mov
adc
in
push
mov
mov
in
insl
push
stos
outsb
or
xchg
dec
aad
push
xchg
ljmp
iret
mov
and
xor
hlt
inc
push
ljmp
sub
mov
cltd
incl
cld
mov
ds
push
enter
pop
sbb
adc
lcall
inc
jb
xchg
xor
and
sub
xchg
xchg
dec
jns
and
call
std
pop
jmp
shlb
jo
lea
xor
lock
adc
xchg
jmp
fadds
adc
mov
dec
mov
clc
sbb
dec
mov
sti
inc
sub
jo
nop
out
movb
add
inc
cmp
bound
cltd
pop
ret
andb
ret
cmpsl
sub
imul
mov
mov
push
leave
std
std
mov
lea
mov
mov
xor
lds
xor
mov
add
lcall
or
dec
jmp
mov
idivl
jmp
inc
add
push
push
mov
sub
sbb
fsubr
push
jb
lods
arpl
rcll
adc
in
nop
mov
mov
in
int
sbb
xor
imul
jecxz
mov
sbb
rorl
jl
loop
mov
cmpsl
mov
test
nop
stos
lock
cli
popf
sbbl
dec
or
bound
and
mov
xchg
adc
loop
fbld
pop
rorl
push
adc
push
and
xchg
adc
leave
jecxz
call
pop
pop
dec
bound
cli
pop
push
xor
xrelease
je
push
shl
xlat
add
lods
jecxz
iret
dec
xchg
test
mov
pop
dec
xor
stc
mov
fwait
jns
adc
notl
clc
pop
clc
in
pop
cld
xor
mov
mov
neg
add
mov
xor
cld
sahf
int
leave
fwait
lods
call
xchg
popl
mov
dec
sbb
and
xor
aas
aaa
mov
loop
add
or
mov
pusha
popa
pusha
dec
sub
aam
out
push
pop
xlat
popf
jno
mov
decb
jge
or
push
sub
outsb
pop
ret
xchg
xor
out
ret
mov
test
popa
mov
mov
cmp
adc
cli
and
xchg
sub
sbb
inc
sbb
stos
pop
push
in
mov
inc
inc
call
icebp
lahf
dec
mov
jmp
dec
add
cmc
and
jg
in
emms
loop
xor
add
bound
imul
lds
movsb
movsl
push
mov
hlt
lahf
lea
mov
hlt
mov
cmpsl
gs
jne
cmc
cmp
movsb
leave
adc
mov
cmpsb
cmpsb
mov
inc
add
clc
dec
jge
fdivrl
icebp
mov
sub
ja
shll
mov
mov
std
mov
adc
aas
xor
out
addb
push
mov
sub
push
adcb
pop
lods
dec
out
mov
test
dec
adc
dec
push
adc
or
subb
fwait
test
inc
xor
lds
das
push
lods
xchg
repnz
cld
loope
mov
jp
rcll
mov
inc
out
pop
add
mov
cli
enter
enter
jno
enter
push
les
cld
adc
adc
and
jb
mov
and
lahf
jmp
adc
mov
call
cmp
adc
jb
and
aaa
and
pushf
sbb
cltd
bnd
push
mov
enter
mov
mov
sbb
into
js
and
adc
pusha
outsb
push
jnp
aas
jg
xchg
or
push
xor
int
mov
inc
mov
inc
hlt
dec
sahf
data16
and
adc
mov
adc
lea
test
mov
mov
hlt
inc
clc
outsb
dec
jg
jle
movsb
xchg
push
cli
xor
mov
lahf
out
sbb
mov
vphaddudq
loop
mov
leave
cmp
sub
push
xlat
outsb
int
pop
pop
mov
std
mov
or
adc
pop
ljmp
dec
fists
rorb
or
jns
jp
movsl
fcompl
xchg
and
lret
add
jnp
inc
pop
xor
mov
jge
sub
shll
out
js
fdivrp
gs
lds
cmp
ret
add
jg
cmc
negl
jmp
mov
repz
or
cltd
lock
dec
push
mov
mov
pop
mov
adc
xchg
jne
mov
stos
cwtl
xchg
cmp
filds
cs
jb
rcl
jnp
fisubl
aam
rclb
push
pop
add
int3
dec
xor
or
and
mov
addb
outsb
cmp
mov
xor
call
pushf
jmp
lcall
ret
fiadds
jge
je
ja
scas
std
adc
cmp
repz
or
mov
movsl
fldt
or
xchg
fwait
xor
mov
cmp
gs
mov
sti
and
fsub
int3
sub
ss
adc
dec
dec
cmc
out
inc
icebp
imul
jg
cmp
xchg
jmp
and
xchg
or
dec
inc
sarl
popa
mov
push
mov
stos
jle
gs
arpl
mov
pop
cmp
ret
and
in
xor
in
pop
aas
leave
clc
sub
adc
mov
out
dec
andl
and
and
cmp
or
call
inc
das
fldt
lods
cmpsl
popf
inc
jl
sbb
push
or
bound
insl
mov
mov
jbe
dec
or
mov
xlat
andb
sub
jns
ja
inc
mov
dec
imul
mov
sbb
push
mov
test
pop
mov
psubusb
mov
mov
lods
vcvtsd2si
cmp
lret
add
pop
out
jne
mov
pop
sub
and
dec
fcompl
jge
jp
adc
outsl
imul
lret
dec
sub
ror
inc
fincstp
push
push
rcll
lods
push
pop
int3
lret
imul
add
pop
xor
repnz
mov
insl
cmp
or
dec
mov
jecxz
jnp
pop
dec
add
mov
pop
clc
dec
and
xchg
add
popa
ffreep
or
xchg
rorb
xchg
subb
jle
dec
push
lock
lret
push
js
push
enter
scas
and
pop
mov
fidivrs
aas
xchg
pop
clc
hlt
jle
aad
jnp
dec
xchg
lahf
jb
and
adc
cmpsl
jle
mov
aad
mov
daa
inc
xchg
lds
push
or
or
cmc
cli
push
scas
rcrl
mov
cmp
jl
enter
cmp
jnp
repz
clc
and
sub
cmp
inc
cmpsb
jo
test
popa
cmp
or
dec
dec
jmp
mov
add
sbb
pop
cld
lods
xor
std
call
jl
stos
inc
insl
sbb
fst
dec
cmpsb
adc
inc
cltd
in
xchg
and
mov
repnz
xchg
jne
inc
mov
nop
js
mov
mov
cli
test
icebp
fnstsw
int
cmp
divl
push
ljmp
sub
xchg
xor
or
test
sarl
jle
dec
out
jmp
pop
repz
mov
loop
pop
xlat
pushf
add
mov
lods
and
in
adc
sub
lahf
outsb
or
jp
pusha
adc
loop
sbb
lds
mov
mov
mov
mov
cmc
dec
clc
aad
dec
iret
je
mov
ljmp
sbb
pop
add
mov
mov
dec
add
jbe
and
rorb
mov
cmp
lods
inc
int3
adc
jne
adc
xchg
pushf
fcmovu
inc
jbe
movsb
lcall
enter
sbb
popl
in
pop
lahf
xlat
aas
and
adc
jmp
mov
les
or
dec
andl
dec
mov
sbb
sbb
clc
xchg
xor
rol
call
push
test
push
loope
in
fcompl
xor
mov
shrb
xchg
lret
jmp
or
add
sbb
inc
decl
mov
jp
mov
jb
gs
jecxz
test
enter
xchg
cmp
sub
jo
idivl
cmpsl
pop
xor
stos
or
jb
ficompl
xlat
lock
std
arpl
lea
sbb
dec
aam
push
jne
mov
std
fdivrp
inc
mov
pop
js
jo
cmp
cmpsb
and
orl
xchg
popa
dec
je
cmc
dec
pop
jnp
xchg
popa
or
out
mov
pop
fstpt
or
leave
or
mov
sbb
push
in
xor
mov
aaa
fwait
call
mov
adc
sub
push
xor
pushf
xchg
je
mov
insb
fwait
loope
sbb
fildll
sti
push
sbb
inc
cmp
jp
mov
js
pushf
push
loop
fwait
addb
pop
inc
out
ret
and
push
cmp
es
and
pop
xor
call
inc
mov
adc
push
movsb
jecxz
push
icebp
mov
aaa
lea
aad
xor
movsl
outsl
pop
icebp
xor
mov
mov
or
cmp
jbe
jae
pop
outsl
cld
inc
popa
pop
sub
mov
cmp
jno
lea
jmp
sub
cmpsl
cmpsl
sbb
push
loop
mov
sar
xchg
inc
add
xor
int3
sbb
pop
sub
inc
adc
jns
xor
adc
rclb
add
rorb
lret
push
movsb
sub
shrb
scas
js
push
lcall
push
in
or
dec
addr16
dec
lahf
out
popa
mov
sub
nop/reserved
mov
push
lret
inc
inc
pop
xchg
pusha
push
xchg
adc
test
stc
jns
mov
inc
repz
data16
jmp
inc
xor
das
and
xor
xchg
sahf
jge
scas
add
shll
pmaxub
fcomps
mov
iret
pop
adc
imul
icebp
lds
lret
sub
pop
fidivrs
dec
lcall
xor
inc
iret
enter
test
xor
cmp
xchg
arpl
inc
push
cmp
or
pop
add
pop
arpl
loopne
push
repz
jmp
xor
adc
xor
add
cmc
adc
jb
jb
sbb
pop
into
sbb
pop
push
jecxz
jge
aam
setae
ret
or
fwait
jle
icebp
or
inc
mov
sub
fistpl
popf
lock
push
mov
jp
sbb
sahf
mov
mov
adc
inc
inc
xor
pop
mov
push
add
adc
leave
subb
pop
and
add
in
inc
leave
mov
or
cmp
nop
push
js
add
dec
dec
mov
xchg
xchg
fs
lret
test
xlat
mov
cmp
xor
cmp
dec
fs
mov
pop
cmc
sbb
sub
loopne
fs
lahf
mov
add
inc
cmc
mov
ret
enter
call
xor
dec
std
test
ret
push
out
lret
mov
add
mov
inc
adc
push
addr16
sbb
xchg
stos
mov
and
ljmp
or
daa
movsl
jae
push
sbb
mov
sub
or
lret
out
xchg
sub
mov
inc
in
pop
xchg
fld
roll
fisubs
xor
fsub
adc
sub
jecxz
dec
xor
mov
dec
pusha
pusha
sub
mov
mov
pop
daa
pop
inc
int3
dec
fisttpl
xor
fwait
mov
inc
roll
mov
mov
dec
stos
sbb
or
gs
bound
inc
or
imul
mov
mov
mov
cmp
xor
in
or
or
out
lock
inc
pop
add
cmc
jne
sbb
xchg
sbbl
clc
mov
xchg
push
mov
aad
mov
scas
mov
and
mov
inc
jo
shll
xchg
pop
mov
mov
scas
or
push
cmpsl
cmp
pop
in
mov
inc
mov
sbb
dec
adc
push
int3
popf
fwait
sbb
maxps
imul
lret
push
sub
inc
fisubrs
mov
dec
js
xchg
push
loop
sub
mov
add
scas
les
aaa
shrb
jge
fidivrl
adc
xchg
push
inc
stos
push
mov
jp
push
xchg
or
and
iret
jmp
add
jp
and
movsl
xlat
xor
leave
xorl
and
loope
sub
mov
faddl
mov
gs
test
sbb
test
das
push
cmp
aad
jp
mov
jmp
testl
mov
adc
jmp
fcomip
popa
inc
ret
int
jmp
dec
xchg
fsts
pop
jno
xchg
sarl
inc
ds
mov
rcrl
jno
mov
outsl
mov
or
jns
lret
mov
std
jno
stos
inc
sbb
cmpsl
pop
or
sub
loope
repz
push
fildll
mov
shll
and
jno
daa
mov
jns
vmovaps
outsb
mov
pop
clc
cld
mov
ljmp
outsl
cld
mov
stos
mov
and
jl
add
inc
mov
pop
sub
js
dec
jge
jmp
xor
inc
sub
lret
jp
sbb
xor
imul
cmp
sbb
lahf
mov
movl
xlat
addl
dec
dec
jp
test
mov
test
lea
sub
and
mov
or
lods
sub
movsb
lea
inc
cmp
pop
mov
push
out
pop
inc
jns
pop
mov
cld
shll
jl
cmpl
imul
nop
add
les
cwtl
icebp
sbb
in
es
sbb
mov
lret
scas
xor
inc
es
cmpsb
xchg
int3
and
out
push
add
pusha
sub
jnp
test
mov
hlt
rol
jns
xchg
scas
loop
bnd
stos
cmpsl
test
leave
int3
xlat
shr
mov
ret
ficoms
dec
fidivl
in
sub
movsl
outsl
jne
insb
adc
arpl
jbe
fcompl
out
mov
sub
fwait
xor
in
or
mov
push
daa
shrl
out
dec
lods
aam
inc
outsb
lret
sbb
cmpsb
ret
jns
jno
imul
ds
shll
sbb
jns
dec
xchg
out
sbb
mov
movsl
add
sub
mov
hlt
jge
push
std
mov
mov
das
aaa
ss
push
lock
or
ficomps
rorb
cmp
bnd
add
jno
out
push
cs
stos
push
xchg
fnstsw
es
mov
cli
mov
sahf
cmpsb
lods
test
leave
jne
addl
dec
sahf
fs
or
push
sub
adc
jbe
sahf
adc
cmp
lcall
mov
sbb
out
jge
jb,pt
out
fdivs
daa
sarl
xor
fcoms
mov
idivl
mov
loop
idivl
insb
out
jnp
pushl
sub
mov
xor
sbb
fidivrl
mov
aad
arpl
cld
inc
push
cvtdq2ps
sub
add
lock
fsts
dec
inc
mov
fidivrs
sbb
insl
jns
and
xchg
sub
cmp
xchg
mov
mov
adc
pop
mov
push
adc
sub
mov
rcrb
cmp
push
insb
adc
fsubrs
popf
xor
enter
addl
call
dec
aam
pop
repz
out
fisttpll
jmp
movsl
dec
mov
fwait
in
je
and
xor
ret
cmp
sbb
fcomps
xor
and
xchg
jp,pn
dec
jo
arpl
sahf
adc
movsb
lods
push
adc
inc
cmp
push
fidivl
iret
and
lret
lods
out
js
cmp
and
fildl
loope
inc
fcompl
pop
inc
sub
xchg
xor
adc
pop
div
mov
dec
jne
aaa
mov
ds
in
jmp
clc
push
push
je
scas
hlt
xor
jb
les
cmp
mov
daa
js
xor
jnp
sbb
sbb
xlat
shll
sub
les
mov
pop
dec
lods
jge
test
data16
les
aas
aaa
sahf
jge
test
pop
scas
lods
jne
cmpl
sub
pushf
cmc
lock
ret
loopne
loopne
bound
loope
adc
repnz
fstps
movsbl
push
add
call
pop
test
outsb
ljmp
mov
in
sarb
mov
cmp
adc
std
xor
xor
test
in
and
in
adc
lods
push
out
jno
lock
mov
fwait
adc
fadds
lret
xor
test
push
push
clc
ffree
lret
dec
push
mov
mov
out
mov
xor
xchg
cli
insb
push
int3
imul
cmp
inc
pushf
mov
and
lods
mov
pop
daa
scas
pop
jp
leave
aaa
mov
ja
push
cld
call
push
jne
adc
leave
or
push
aas
hlt
nop
out
icebp
sbbl
fdivl
push
sti
stos
jle
pop
mov
lahf
loopne
test
jle
fsubrs
popw
iret
in
sbbl
aam
jne
dec
xchg
lds
sahf
out
cmc
icebp
adc
add
mov
sub
shrb
fildl
and
push
mov
mov
hlt
jne
cs
add
push
sbb
bound
pop
outsl
xchg
cmp
push
or
mov
aaa
nop
sarb
loopne
std
cmpsb
pop
adc
pop
das
push
mov
insb
inc
mov
lea
notb
pop
les
xor
outsb
test
pop
mov
inc
xor
jb
push
scas
sbb
mov
cmpsb
inc
mov
xchg
data16
mov
or
imul
sar
clc
push
add
mov
setns
pop
fisubrl
sahf
mov
repz
push
aaa
repz
xchg
ja
mov
pop
lret
aad
mov
pushf
push
lret
mov
fsubp
pop
jne
loope
dec
dec
test
or
loopne
sub
xchg
adcb
adc
roll
incl
lods
pushf
iret
mov
jp
cmp
dec
enter
lods
cmp
sub
xor
jne
cmp
push
stc
addr16
jbe
fsubrs
les
jb
mov
dec
jns
out
pusha
pop
push
xchg
cmp
neg
aaa
push
ljmp
repz
or
mov
in
jb
out
push
out
out
inc
jno
bound
stc
jne
fidivs
xchg
push
dec
and
rcl
fmul
loope
aas
cmp
out
mov
sbb
or
testb
call
imul
xchg
hlt
jnp
idivl
push
ds
xor
arpl
rorl
sub
or
push
sub
cmp
dec
roll
xor
je
out
lcall
sbb
nop
js
fmull
cs
jmp
mov
lock
in
xlat
mull
fnstcw
bswap
gs
cmp
pop
and
sbb
out
jle
outsl
notl
je
pop
lock
pop
jp
div
lock
sub
jns
into
fnstsw
pop
pop
inc
and
cmp
stos
push
jmp
popa
dec
out
xchg
xorl
inc
mov
xchg
xchg
pushf
lods
push
rcl
shll
dec
add
push
mov
xor
mov
push
pop
pop
and
pop
inc
or
cmp
loope
lds
pop
and
leave
and
stos
imul
andb
and
pop
push
mov
cli
iret
arpl
pop
mov
stos
pop
lods
mov
push
lods
addr16
pop
aam
lds
mov
into
xor
mov
outsb
and
repnz
bound
stos
pop
loope
sub
inc
test
stc
mov
fwait
pop
mov
adc
cmp
cld
pop
clc
dec
ret
mov
push
mov
and
iret
and
xchg
js
loope
cmp
adc
pusha
scas
in
dec
mov
int3
mov
pop
mov
xlat
cmp
in
cli
jecxz
push
mov
es
ja
cmpsl
inc
jno
ficomps
add
aas
lods
jmp
loope
fisttpl
cmpsl
mov
popa
sbb
imul
jno
ja
jge
rcll
mov
sbb
push
or
je
and
cwtl
mov
sub
jno
in
pop
mov
inc
ret
pop
loop
rcrb
ds
icebp
mov
inc
dec
dec
cs
pop
push
pusha
add
into
jg
cmp
xor
and
aaa
sar
mov
mov
add
lahf
ret
aaa
cmpl
loopne
in
in
pop
popa
add
dec
inc
iret
js
adc
push
mov
outsl
fnstcw
lock
and
mov
pop
clc
add
sahf
frstor
sub
mull
clc
mov
jge
stos
xor
inc
cmp
scas
and
cmp
loop
add
and
xchg
out
test
mov
data16
jne
push
sub
sub
pop
daa
addr16
or
jge
pop
dec
adc
push
outsl
push
test
push
aad
push
or
les
rcll
dec
out
bound
cli
or
mov
cmpsl
dec
lods
xchg
dec
mov
dec
cmp
scas
jb
das
adc
je
push
int
mov
scas
sub
sbb
pushf
std
in
test
xor
fcoml
out
and
mov
dec
fs
jmp
lods
int
sti
out
notb
inc
xchg
xchg
fs
rcl
das
hlt
inc
hlt
xchg
hlt
dec
dec
mov
sahf
xchg
dec
ljmp
negl
or
inc
aas
test
in
add
jg
scas
mov
lods
xor
out
pop
mov
arpl
das
xor
pop
lret
xor
jae
jmp
imul
mov
jo
pop
mov
jg
push
or
push
in
cmpsl
fwait
pop
dec
leave
movsl
bts
rclb
in
jmp
inc
sarl
sti
pop
jno
lea
daa
cs
lret
jmp
movsb
and
mov
jne
inc
repz
fwait
imulb
pop
mov
sbb
lods
lods
xchg
cld
sub
sbb
clc
pop
repz
out
mov
mov
fisubrs
mov
mov
inc
mov
sub
arpl
dec
insl
or
sbb
xlat
lcall
aad
je
or
add
xchg
sbb
jno
cmpsl
adc
call
xchg
push
xor
std
shll
mov
nop
mov
cmp
pop
fsubrl
adc
lea
mov
cmc
xchg
sub
push
imul
xor
out
pop
adc
mov
pop
in
cmc
loop
mov
mov
mov
stos
out
push
pop
mov
shlb
xor
mov
sbb
ffree
iret
cmp
cmpsb
lret
fs
xchg
sbb
adc
mov
sub
cmp
jmp
adc
add
adc
fidivs
out
mov
adc
mov
and
in
jbe
sbb
clc
cmpb
adc
nop
jl
lcall
lods
mov
lods
and
cmp
mov
or
out
or
int3
testl
mov
in
loopne
fmulp
mov
sti
push
test
pop
jle,pt
shlb
cmp
cmp
sbb
aas
inc
outsb
cmp
xor
icebp
pop
xor
ss
sub
or
fldcw
sbb
xchg
les
pop
call
loop
and
icebp
out
dec
rcrb
cmpsb
push
fwait
movsb
cs
inc
mov
mov
inc
and
shlb
mov
insl
add
scas
ja
sbb
roll
inc
sub
push
adc
popa
cld
sub
jmp
test
repnz
or
hlt
in
sub
add
cwtl
sti
sub
cli
pop
and
pop
or
sub
in
sbb
sub
nop
divb
pop
sahf
test
cmp
rcrl
shlb
leave
sbb
es
mov
outsb
mov
lahf
xchg
lods
scas
or
cmpsl
ja
xchg
ret
fildll
xchg
aas
mov
insl
and
mov
rcll
mov
stos
ja
mov
imul
xchg
lcall
push
jnp
inc
push
into
cmp
push
jae
jnp
inc
mov
das
lahf
aad
lds
leave
pop
xchg
fndisi(8087
stos
popa
sbb
pop
jmp
xchg
xor
dec
fwait
pop
aas
outsl
pop
dec
cs
and
pop
ds
mov
out
icebp
or
aad
push
iret
icebp
rorl
imul
xchg
stos
sub
pop
mov
aam
ljmp
xchg
fidivrl
cmp
je
adc
jns
xchg
repnz
movsl
xchg
int
pop
sbb
and
frstor
dec
adc
sbb
xchg
push
adc
xor
cmp
lret
repnz
in
mov
xor
ds
mov
movsb
sub
andl
sbb
loopne
mov
mov
test
pop
mov
jg
test
pop
mov
imul
mov
in
sbb
push
sub
lcall
das
fsubrl
lcall
loop
pop
repnz
ds
fnstenv
int3
xchg
sub
outsb
pop
test
pop
mov
xor
icebp
cli
leave
cmp
adc
adc
dec
aam
cmpsl
cmp
lret
hlt
in
inc
test
cld
jae
negl
push
flds
inc
pop
loopne
pop
dec
shrb
mov
nop
mov
mov
sahf
pop
lcall
add
sub
enter
mov
xchg
xor
sub
add
inc
lods
cmpsl
mov
jb
daa
ds
clc
adc
add
jecxz
jge
push
ja
xchg
sbb
enter
inc
ret
int3
jbe
dec
cmpsl
pop
mov
lret
mov
and
cld
out
jmp
scas
rcrb
fisubrs
adc
mov
sahf
and
out
cmp
xor
or
mov
sarb
loopne
or
out
outsl
pop
jmp
and
sbb
sbb
lret
lods
lcall
dec
sbb
rorl
imul
sbb
fucomip
push
scas
add
inc
push
fsubp
lods
into
dec
imul
loopne
lods
dec
push
push
call
stos
out
outsb
mov
test
mov
xchg
dec
cmp
aam
and
mov
out
and
xor
sbb
dec
cltd
scas
mov
fcoml
lret
add
xchg
fsts
xorl
jno
test
gs
sub
pop
or
xor
xchg
aaa
jl
fadds
mov
ret
xchg
xor
in
jb
dec
adc
iret
push
or
mov
or
clc
mov
fwait
mov
test
dec
push
ret
jns
fidivrl
push
outsb
cmpsb
mov
push
add
mov
mov
push
adc
jno
out
push
sbb
in
and
push
mov
popa
or
jo
cmp
add
clc
mov
mov
inc
aaa
inc
xchg
into
ljmp
outsb
std
sub
push
jle
test
sbb
rclb
xchg
or
jecxz
mov
and
sbb
and
adc
mov
mov
in
ljmp
sbb
cwtl
sahf
scas
lods
inc
mov
dec
clc
js
jge
adc
mov
rolb
mov
and
std
int
xor
xchg
pusha
cmp
sub
lods
mov
pop
mov
cmpsl
aad
dec
lock
fcoms
mov
int3
std
mov
enter
jb
fisttpll
mov
add
or
xor
imul
loope
cmp
xchg
inc
loopne
stos
sbb
add
mov
lods
dec
sti
lcall
outsl
call
test
push
pop
adc
jae
pop
fdivrs
pusha
call
push
out
repz
mov
nop
dec
pop
and
inc
dec
or
dec
inc
jl
pop
mov
cmpsb
xor
jle
pop
inc
push
push
xchg
mov
mov
pop
pop
push
sub
cli
mov
xchg
mov
lcall
xchg
lahf
movsl
test
jnp
popf
test
ds
dec
lds
jl
in
mov
rorb
movsl
mov
out
mov
insl
cwtl
mov
rcr
outsb
test
sbb
stos
sub
push
mov
pop
cmpsb
ficomps
jl
and
xor
pop
push
mov
adc
mov
test
mov
cmpsb
loopne
mov
mov
out
add
add
pavgw
add
cs
inc
inc
sti
mov
leave
pop
pop
or
xor
or
lock
push
push
or
aad
jbe
loope
xchg
shlb
xchg
js
inc
mov
ss
xchg
xor
lret
mov
jne
pop
dec
or
xchg
and
xchg
sahf
pop
lea
lods
pop
pusha
popf
dec
sub
adc
pop
sub
or
dec
sub
push
dec
pop
insb
mov
xchg
mov
jnp
jp
arpl
lods
lods
xor
ss
shlb
xchg
aas
arpl
aad
and
xchg
fdivrs
inc
fdiv
js
leave
add
add
movsb
imul
test
addr16
orl
lret
sub
and
xchg
pop
fcomi
and
loop
jl
and
ljmp
lahf
and
jg
add
cmpsl
or
mov
lock
sub
pop
cmpsl
inc
gs
inc
sub
xchg
jae
lcall
ja
lcall
nop
jecxz
xchg
inc
mov
cwtl
mov
add
fldt
xchg
orb
pusha
dec
jle
push
pop
xor
dec
sub
stos
shlb
mov
smsw
cmc
lods
mov
pop
or
inc
cmp
sbb
inc
inc
xor
pop
xor
jp
movsb
mov
out
bound
sbb
cmp
cmp
sbb
pop
mov
ret
test
pop
mov
dec
mov
dec
xchg
or
cwtl
jmp
and
int3
mov
lock
or
or
mov
out
xchg
cli
cmpsl
sbb
add
lock
mov
std
push
cmp
mov
dec
lcall
or
push
movsl
mov
and
mov
mov
mov
inc
jo
hlt
mov
and
push
in
scas
sub
cmp
js
std
out
iret
inc
mov
mov
mov
jo
cmpsb
rcr
or
xchg
dec
in
push
aaa
cld
vpaddsw
in
loope
adc
test
stos
insl
cmp
inc
popa
push
mov
cmp
push
inc
xor
insb
cmp
xchg
aad
jge
add
imulb
popa
jo
ja
into
dec
mulb
out
inc
dec
cwtl
in
ljmp
cmp
cwtl
push
cld
fdivrs
daa
mov
adcb
xchg
loopne
xchg
pop
addb
fimuls
xor
es
scas
dec
add
dec
sahf
dec
mov
std
ret
xor
xchg
adc
inc
lds
aas
fwait
push
test
push
mov
push
cmpsl
mov
push
clc
icebp
dec
add
in
sbb
cld
out
jl
inc
pop
fidivs
xor
shrb
idivl
and
sbb
hlt
fstps
fdivl
lret
xchg
and
xor
jne
inc
cs
mov
pushf
aaa
mov
xor
into
aaa
imul
sub
mov
lahf
pop
lret
jno
mov
jp
fistpll
idivb
addl
ljmp
inc
add
lret
sarb
xor
fstl
xchg
arpl
es
fwait
addr16
xor
push
or
fsubrs
cli
lods
add
adc
mov
mov
mov
repnz
js
gs
add
lret
shr
aam
cwtl
ljmp
pop
gs
lock
sbb
stos
lock
xchg
ret
push
fxam
pop
sbb
sub
arpl
in
adc
roll
xchg
push
lcall
push
outsb
les
cmpsl
cwtl
inc
iret
adc
shl
out
or
stc
add
sub
add
out
inc
shll
enter
out
inc
or
fmull
sbb
test
xchg
xor
stos
jmp
and
or
xchg
inc
sbb
dec
xchg
stos
push
mov
call
xchg
push
in
xor
lret
push
adc
adc
sub
pop
pusha
xor
pop
or
bound
pop
in
xchg
push
mov
addb
inc
mov
call
stc
cmp
ss
cld
inc
shr
xor
test
push
stc
mov
in
jne
jno
cmp
jae
insb
mov
pusha
mov
jecxz
cmp
ljmp
push
sbb
inc
mov
out
lods
fdivs
sub
div
daa
scas
push
add
xor
insl
jo
ljmp
dec
cmp
dec
icebp
es
stc
xor
or
and
push
gs
cmp
jle
push
pop
lret
outsb
sbb
push
decl
js
mov
sbb
rcrb
xor
cmp
adc
mov
adc
push
lock
sbb
adc
mov
adc
dec
xchg
and
test
jp
repnz
mov
pusha
idivb
dec
outsl
stos
dec
lock
xchg
push
outsb
add
lret
pusha
sub
sbbl
in
ret
decb
pop
daa
test
sub
lods
fisttps
cltd
or
xor
scas
lret
xor
inc
pop
sbb
les
jl
pcmpeqd
jb
sub
sub
cmpsl
test
jns
pop
mov
sub
mov
or
dec
push
pop
test
xchg
or
mov
gs
adc
and
xchg
and
sbb
xor
test
mov
xchg
or
mov
cmp
sbb
les
scas
or
adc
xor
bound
data16
in
leave
mov
outsl
leave
cmp
push
stos
cmp
mov
mov
addr16
test
call
cs
pop
sub
fsts
out
lea
jns
orb
stc
fstps
jle
fisttps
dec
hlt
fidivs
mov
push
sbb
gs
cmp
adc
mov
daa
push
fwait
rcll
addr16
enter
inc
jge
rcrb
test
adc
out
mov
xor
insb
xlat
jbe
int3
lea
arpl
sub
js
stos
bound
jno
imul
imul
push
cmc
jp
loope
jae
int
sub
call
sbb
pop
cwtl
pop
jae
or
outsb
mov
sahf
mov
mov
lcall
xchg
cmp
or
add
test
mov
xor
sub
cmc
xchg
push
loopew
popf
pop
jl
int3
fmull
cmpsb
das
xor
mov
hlt
inc
stos
jno
jae
adc
mov
mov
jbe
xor
incl
push
cmpsl
fisttpl
mov
inc
pop
lds
dec
mov
ficompl
push
inc
clc
pushf
sub
mov
cltd
lret
adc
xor
std
inc
pop
sub
pusha
mov
mov
lea
ficomps
scas
movsl
andl
adc
cs
push
xchg
push
insb
push
adc
jmp
loope
or
sub
data16
ja
fistpl
js
sbb
inc
dec
xchg
push
mov
mov
push
jle
pop
jmp
loope
loope
fldcw
subl
push
fsubr
pop
xor
pop
push
cmp
jle
push
cmpsb
sbb
sti
leave
out
xchg
adc
xor
jg
imul
or
aam
inc
into
lcall
outsb
push
lds
fsubs
fldl
xchg
or
lret
into
sbb
rcrl
ja
xchg
push
test
dec
subl
push
adc
hlt
push
inc
lock
xor
in
nop
ja
xchg
push
jbe
test
xor
lret
sub
pop
pop
sahf
jl
cltd
pop
mov
xchg
and
cmc
clc
push
mov
mov
cltd
inc
lea
out
testb
rcrb
or
out
mov
idiv
push
test
fucompp
aam
std
sub
stos
or
sub
inc
sti
dec
aam
ds
push
out
mov
sbb
jge
pop
jp
hlt
loope
jmp
std
shrb
adc
mov
arpl
out
insl
add
xor
stos
sbb
push
cmpsl
mov
dec
cmc
scas
mov
mov
cmp
dec
stos
int
xchg
inc
cmp
ljmp
pusha
jne
xlat
test
icebp
gs
jno
push
inc
xchg
inc
repnz
mov
mov
push
lock
leave
mov
push
xlat
es
fs
mov
les
jecxz
dec
test
inc
cmpsb
mov
xor
movsb
enter
dec
xor
mov
imul
pop
daa
mov
add
pop
add
aad
sbb
gs
or
xchg
dec
cmp
aam
push
fistps
rcl
testb
mov
lods
mov
cmpsl
filds
aad
cli
int
dec
js
movlps
mov
rcll
movsb
dec
push
mov
push
int3
in
idivb
hlt
hlt
push
std
xor
sub
push
movsb
call
jbe
cmc
push
add
in
push
push
xchg
out
imul
lahf
in
adc
out
gs
xchg
roll
aas
xchg
and
mov
popf
cli
out
imul
aad
jcxz
iret
bound
push
dec
mov
cmp
and
cmp
xor
mov
cmp
jmp
hlt
arpl
int3
xor
pop
mov
sarl
mov
cld
stc
aaa
and
pop
loope
out
pop
insl
hlt
addr16
pushf
call
xchg
lret
pop
xor
sbbl
xchg
fdivl
fs
pushf
jbe
test
fbld
insl
mov
adc
andl
loope
cmovl
push
in
mov
xchg
fisttpll
fwait
jp
dec
jo
mov
int3
xchg
jle
rclb
lods
ficompl
pop
pop
push
lock
xchg
and
pop
mov
sahf
inc
jl
sbb
fsubrl
and
outsb
inc
xor
mov
sbb
add
push
dec
pop
inc
xchg
push
pop
outsl
mov
repnz
dec
jae
cmpsl
mov
xlat
daa
cmp
mov
inc
add
out
mov
rclb
cmpsb
mov
stc
maskmovdqu
divl
cmp
aas
pop
adc
jle
inc
cmp
stc
cmc
xchg
loop
icebp
jo
outsb
negb
and
xchg
dec
fcompl
jmp
dec
jae
pop
xchg
nop
sti
out
mov
inc
xchg
insb
cmp
aam
repnz
pop
mov
mov
les
xor
test
cmp
gs
cltd
mov
sbb
cld
fimuls
subl
mov
xchg
pop
in
inc
mov
mov
test
adc
sbb
test
mov
aad
out
out
aas
xchg
fwait
test
out
xchg
fsubrl
pop
insb
push
adc
sbb
lock
pusha
push
pushf
ret
jnp
cld
add
mov
xchg
jle
popa
out
pop
mov
pop
adc
mov
jne
clc
rcll
dec
sub
xchg
pusha
mov
xchg
xchg
mov
das
outsl
test
cmp
mov
push
push
imul
fldcw
lcall
cmc
xor
xchg
push
xchg
sbb
xchg
sbb
and
icebp
and
test
or
push
icebp
loopne
lahf
aas
es
adc
testb
inc
lcall
test
repnz
scas
cli
push
loopne
or
insl
jecxz
xchg
hlt
scas
in
mov
sbb
pushf
xchg
xchg
jmpw
cmpsl
pop
sub
jo
mov
mov
stos
movsl
xlat
mov
mov
scas
cwtl
pop
and
push
push
cmp
out
cmpsb
das
ficomps
lock
int3
inc
or
mov
mov
mov
dec
cmp
cmp
or
je
xchg
sub
cwtl
lahf
jne
outsb
push
mov
mov
push
dec
jo
sub
leave
jo
sbb
cli
jge
cli
sub
xor
mov
mov
and
int3
cld
jbe
imull
mov
mov
push
pop
mov
test
add
stos
pop
mov
scas
outsl
add
out
mov
sub
jg
dec
lods
inc
cmc
popf
and
sbb
dec
inc
int3
add
stos
loop
mov
push
data16
rol
mov
stos
add
sub
jg
lods
adc
punpcklbw
xchg
nop
imull
loopne
aas
mov
repnz
sbb
ja
lods
fdivrs
xlat
mov
jns
das
sub
sbbl
adc
push
aam
movsl
jecxz
popa
cmpb
sub
ror
icebp
mov
mov
jp
and
or
stos
mov
adc
shlb
aad
mov
mov
cmp
xchg
jmp
call
mov
dec
pushf
mov
mov
rcll
push
lock
imul
mov
fstpt
pop
mov
and
subb
dec
xchg
cmp
xchg
mov
movsb
dec
mov
jns
inc
in
xor
repz
or
les
imul
scas
js
jge
xor
in
mov
and
int
fisubrl
and
loope
clc
rorl
pop
imulb
push
icebp
mov
and
cmp
mov
cmpsb
pop
lret
aas
mov
lds
fistpll
lds
movsb
lret
ffreep
lods
mov
leave
or
fs
mov
jnp
imul
loopne
sub
push
je
sbb
xor
xor
or
or
inc
lret
je
jmp
cmp
and
imulb
loope
xchg
loopne
inc
int3
loop
lds
jmp
sbb
sarb
cld
push
out
addr16
or
pop
pop
outsl
mov
inc
in
cltd
cmp
mov
xchg
sub
mov
test
dec
adc
pop
and
xchg
inc
sbb
pop
je
flds
test
sub
mov
mov
stos
sub
lods
or
gs
and
repnz
je
nop
aad
jb
arpl
std
test
dec
test
push
dec
sbb
push
fadd
enter
in
fs
popa
mov
xlat
sbb
push
jge
mov
cmp
cli
popf
imul
and
shll
movsb
ljmp
xor
int3
and
pop
cltd
mov
negl
xchg
fbld
xchg
pop
and
jns
mov
cmp
cmp
push
mov
repz
mov
out
aad
int3
sahf
cmp
mov
ss
and
or
mov
push
lock
inc
inc
push
test
add
xchg
xor
xor
call
add
js
xchg
pop
push
and
mov
inc
mov
shl
icebp
lods
out
insb
scas
push
and
add
faddp
out
pop
outsb
test
jo
jbe
mov
add
mov
xchg
sub
mov
xchg
jl
scas
xchg
xor
jg
inc
les
fst
loopne
movsl
mov
xor
imul
jmp
gs
jg
das
mov
push
xchg
jno
ret
lock
out
mov
mov
lahf
cwtl
nop
and
fidivs
mov
ret
push
out
cld
add
jno
lock
je
lds
cld
mov
jp
mov
dec
push
jne
notl
add
fnstsw
sub
fisubl
addr16
jge
sbb
call
jl
adcb
js
lahf
aaa
ss
pop
das
push
ja
test
jno
ss
push
cli
notl
mov
mov
jle
inc
xchg
lea
fs
sub
or
push
outsl
push
lock
cwtl
sbb
outsb
lret
sbbl
or
xchg
adcl
jl
aas
rorb
and
cmp
xchg
call
idivl
inc
imul
fldenv
cmp
clc
cli
ljmp
cmp
cs
cmpsb
push
push
or
jb
xor
subl
popf
mov
lock
cmp
push
jge
push
sarb
sbbb
sub
aad
ljmp
mov
mov
xlat
adc
ja
test
jecxz
and
lahf
bound
int3
ljmp
adc
mov
cmp
out
push
sub
cmp
or
or
pop
xor
scas
mov
mov
pop
dec
cs
ss
dec
sbb
jo
dec
inc
shlb
fmull
cmp
loopne
dec
out
sub
xchg
scas
push
mov
sub
or
jbe
inc
pop
movsb
cmp
in
in
add
iret
mov
and
scas
loop
pushf
jecxz
push
ret
shrb
int3
ds
test
mov
push
int3
mov
jle
arpl
xchg
addr16
and
leave
in
bound
inc
movsl
push
popa
lret
imul
pop
push
outsl
icebp
adc
adc
sarb
jp
push
xor
mov
nop
mov
leave
pusha
outsb
xor
xor
sahf
out
mov
cmp
mov
fisttps
sahf
cmp
rcll
shl
mov
dec
cmc
xor
sub
push
adcl
aaa
jo
nop
test
cwtl
push
dec
shl
lret
and
jg
movsb
dec
pop
xor
mov
les
out
jle
iret
sar
dec
outsb
fwait
pusha
inc
cld
mov
push
dec
push
mov
push
or
and
lds
jbe
test
mov
sub
inc
mov
pop
sub
xchg
push
jns
fnstsw
xor
or
and
mov
pop
mov
add
push
cmc
xor
scas
adc
loop
js
sbb
cmc
sub
fscale
mov
lds
ret
and
inc
or
gs
fstps
ret
pop
pop
mov
cwtl
add
jp
movl
adc
xchg
sbb
xor
cld
pop
pop
jge
call
push
mov
push
pop
mov
sub
mov
jecxz
into
xchg
addr16
pop
add
orl
mov
dec
push
inc
mov
mov
xcrypt-ecb
cmpsl
push
pop
mov
xor
add
jne
xor
scas
pop
mov
shl
pop
stos
sbb
fsubrs
mov
xchg
lret
sbb
sbb
test
fldenv
pop
lock
jae
and
or
lods
fdiv
push
cmp
sub
loope
pop
dec
dec
ss
xlat
idivl
push
sahf
and
insb
and
loope
imul
sarb
inc
cmp
les
ret
cmp
mov
fldl
sahf
fnstenv
xor
dec
cli
jp,pn
sub
dec
fsubrl
pusha
add
sub
mov
push
rcrl
add
lds
adc
mov
push
enter
adc
cli
lcall
imul
outsb
inc
outsl
ds
cltd
xor
xchg
insb
sbb
xchg
movsl
lcall
movsl
sub
outsl
out
stos
mov
das
roll
cwtl
out
jno
cld
ss
cmp
mov
sarl
sub
addr16
push
sub
daa
jo
ret
hlt
and
and
mov
outsb
lods
inc
inc
sbb
sub
xchg
fdivrs
push
test
xchg
imul
nop
adc
cli
mov
dec
ds
dec
lds
dec
clc
jmp
outsb
mov
lret
pop
jg
daa
sbb
pop
push
in
push
sub
mov
pop
faddl
push
test
out
repnz
push
in
mov
mov
pop
inc
dec
and
inc
in
jge
ja
xchg
xlat
pop
out
xchg
mov
repz
lret
cmp
ficoml
dec
loope
cmp
dec
dec
push
les
ror
jle
and
ja
mov
aaa
xor
inc
mov
push
mov
dec
mov
cmpsb
mov
div
inc
mov
loop
dec
aas
mov
xchg
daa
xchg
dec
in
mov
jecxz
sub
movsl
push
sub
mov
xor
xor
dec
cs
mov
cli
jecxz
js
dec
arpl
sub
call
xchg
or
pop
xorb
cmp
dec
push
adc
adcl
inc
outsb
sub
mov
repnz
lods
sbb
in
subl
or
popa
in
minps
pop
mov
pusha
push
xchg
mov
xchg
jbe
jge
out
or
add
sub
insb
jnp
aas
outsb
add
adc
mov
lahf
pusha
adc
jo
pop
xchg
out
xchg
dec
dec
mov
jne
out
push
pop
out
fcomps
mov
push
test
jo
pop
out
mov
in
push
push
dec
jl
mov
pop
push
loopne
shll
xchg
ljmp
sbb
cmpsl
sub
pop
mov
fistpl
icebp
sbb
outsb
fidivs
or
in
or
mov
js
lret
cmp
push
icebp
jns
fwait
mov
popa
fistps
or
vcvtdq2ps
fucom
sets
enter
or
ds
ss
je
popa
icebp
inc
push
in
pop
mov
in
ljmp
mov
loop
pop
xchg
lock
push
negb
out
xchg
test
stos
lock
cmp
mov
add
xchg
pop
loopw
xor
dec
mov
mov
dec
in
movsb
dec
loop
xor
or
cltd
pop
push
push
lods
int
pop
stc
xor
jge
ljmp
mov
mul
outsl
sub
add
hlt
jbe
outsb
ds
and
push
cwtl
fadds
mov
pop
std
add
cs
sbb
nop
mov
gs
sti
in
jge
xor
dec
in
mov
adc
pop
mov
fidivs
xchg
inc
and
in
adc
cld
leave
in
push
dec
xchg
out
xchg
pushf
scas
pop
cmp
shll
mov
in
dec
mov
icebp
pop
fmulp
dec
jb
addr16
testl
pop
pusha
rol
ss
jg
and
rorl
les
test
popl
pop
xchg
jno
cwtl
mulb
fcmovu
cmp
outsl
sub
andb
or
lds
cli
pop
fistpll
ret
pop
push
cmp
cld
lds
xchg
lods
mov
and
xrelease
push
es
cmp
xchg
mov
iret
es
repz
lods
xchg
or
jp
fdivrl
sub
popa
lea
cmovns
cmpsl
fmul
cmp
jae
push
mov
and
pusha
xor
ja
ret
aam
mov
pop
dec
iret
or
cmp
out
leave
push
push
lahf
ret
mov
loope
out
pop
mov
fsts
sub
cmpsl
pop
mov
jnp
mov
pushf
adc
enter
fsubrp
add
mov
lea
imul
add
gs
aad
es
mov
inc
data16
push
pop
adc
add
sub
mov
aad
xchg
add
in
cmc
ljmp
fdivrs
adc
rorb
insb
test
rcll
sarl
in
lret
or
inc
out
jmp
sbb
cmp
mov
sub
jae
rcll
icebp
and
and
cltd
push
adc
lods
insl
stos
insl
pushf
xor
and
bnd
sbb
inc
es
inc
mov
pushf
mov
fisubs
rorb
jp
cld
adcb
popf
daa
jbe
mov
push
pop
ja
jae
push
xchg
iret
imul
push
pop
lds
sbb
sub
push
mov
scas
push
xchg
adc
dec
or
xchg
mov
fsubl
imul
hlt
inc
mov
cmp
lret
push
pushf
jo
cmpsl
adc
rolb
outsl
pusha
call
cld
and
mov
stos
or
movsb
or
xorb
arpl
cmp
mov
xor
mov
cli
pop
push
dec
dec
jae
dec
push
jg
stos
in
loop
ficomps
xchg
rolb
push
mov
mov
sub
sub
mov
mov
shlb
mov
jecxz
mov
aad
mov
fadd
adc
mov
shrb
push
cli
lods
push
xor
or
push
aam
cmp
mov
rol
lahf
push
mov
es
lret
sbb
jne
xchg
jl
bound
add
xor
dec
jo
jnp
dec
outsl
or
repz
inc
notb
cli
mov
inc
add
or
sbb
or
outsl
pop
inc
jo
orl
pop
cmp
mov
inc
mov
fdivrp
add
or
imul
inc
pop
aam
pop
jb
pop
add
mov
cwtl
mov
outsb
inc
mov
loope
adc
lock
rclb
ss
aam
xchg
dec
aam
mov
lods
add
inc
jns
sub
push
nop
mov
sbb
out
cltd
adc
adc
sub
push
sbb
orb
add
enter
rclb
cs
jle
mov
sahf
clc
jns
sbb
xchg
mov
sub
xor
scas
cld
and
mov
sub
mov
pop
sbbb
jle
cmp
arpl
mov
dec
loop
pusha
or
adc
mov
loop
mov
cld
mov
sarl
cmc
jp
xchg
pop
scas
adc
mov
adc
cmpb
outsb
push
mov
and
push
cmp
ljmp
lret
cmp
adc
or
xor
pop
fsubl
xlat
or
dec
inc
mov
mov
out
incb
or
stos
sub
push
cld
rolb
and
imul
lods
outsb
int3
fimull
inc
fisubs
mulb
cltd
aas
call
pop
jne
cmp
shlb
fbld
sbb
jl
icebp
clc
iret
test
addr16
or
out
jbe
jge
mov
pushf
into
outsl
or
scas
mov
jmp
daa
shlb
negb
pop
adcb
adc
xor
jge
dec
fistpl
rcll
inc
popa
mov
lahf
nop
xlat
shr
sub
add
ja
enter
adc
enter
fiadds
cli
dec
lahf
fs
mov
pop
in
xor
cmpsl
pop
xchg
je
sub
iret
test
js
push
int
jle
or
add
pushf
stos
add
out
test
in
rcll
shrl
dec
rolb
out
jmp
sub
lock
fwait
pop
cmpsb
aas
push
mov
dec
dec
daa
mov
into
adc
js
cwtl
test
rolb
lea
popa
ret
cmc
pop
pop
adc
pop
cmp
jbe
pop
into
enter
cltd
in
stos
or
jno
jb
jo
mov
mov
push
pop
fisubl
xchg
fwait
js
sub
push
pop
in
xor
nop
sub
rclb
mov
stos
test
lcall
adc
push
mov
roll
cmp
xchg
add
lret
cs
lods
xor
out
jnp
sbb
stc
imul
cs
xchg
pusha
bound
jnp
int3
and
mov
and
mov
mov
nop
sub
pop
clc
sbb
or
popa
and
push
push
out
jnp
pop
fs
jp
ljmp
icebp
test
leave
aaa
jo
fisubs
mov
mov
mov
jecxz
adc
jge
jns
pop
xor
pop
xchg
push
stos
ret
and
adc
mov
out
cwtl
in
popa
or
jb
or
repz
inc
adc
jne
mov
repnz
sub
cmp
mov
fistpl
push
add
jb
gs
mov
push
in
lods
movntq
out
xchg
subb
mov
push
fimuls
rorl
rorb
cwtl
pop
sahf
into
pop
pop
inc
dec
dec
lret
je
adc
jb
insl
sub
aad
inc
iret
psrad
push
or
rcrl
dec
xchg
lret
push
imul
imul
test
dec
xchg
inc
adc
and
inc
inc
out
pop
xchg
dec
fsubrp
shll
xchg
xor
ja
mov
leave
mov
xorb
xor
xchg
jp
cmp
lcall
jecxz
in
dec
sbb
divl
push
xchg
lahf
cmp
fsts
pop
sahf
mov
sub
shlb
stos
mov
sbb
pushf
imul
lcall
aad
mov
lret
sub
rorb
sub
adc
loope
inc
pushf
cwtl
mov
mov
stc
mov
aam
cmp
add
push
jge
lahf
cmpsl
lcall
pop
and
pop
test
clc
pushf
mov
lahf
shll
in
fcoml
hlt
mov
lahf
bound
fisttpll
mov
fs
pop
cmp
pop
adc
mov
call
inc
outsl
outsb
sbb
mov
xlat
enter
add
scas
push
xchg
mov
pop
in
leave
mov
xlat
ja
test
lret
mov
lods
in
cli
gs
inc
add
sub
inc
mov
call
add
mov
sub
mov
movsl
and
test
mov
addr16
inc
inc
xor
fstpl
mov
pop
ljmp
push
out
cmp
and
pop
pop
rcll
into
add
sbb
jmp
icebp
dec
push
fistps
movsb
lock
int3
add
repz
dec
subb
hlt
aaa
dec
mov
cltd
or
inc
push
dec
xor
and
or
pop
push
sub
sti
dec
jmp
inc
les
lret
shlb
xchg
ljmp
sbb
lcall
ja
iret
mov
xor
orl
mov
into
fs
ljmp
dec
or
adc
outsl
sti
and
ret
out
mov
jecxz
mov
dec
adc
rorb
sbb
sbb
mov
mov
das
fcomps
xor
out
push
aad
fwait
adc
je
bound
int3
jg
gs
out
xchg
stos
fnstsw
mov
loop
mov
cmpsl
push
xchg
repz
cld
adc
dec
mov
cmpsl
idiv
pop
jb
cltd
jne
push
int
mov
adc
xor
sub
mov
cld
inc
loop
mov
push
lods
scas
roll
pop
stc
mov
xchg
sub
xor
dec
cmp
cmp
push
movsl
push
aad
dec
mov
mov
movsl
sub
inc
cmp
cmp
jns
dec
out
mov
in
pusha
adc
sub
rcll
int
out
push
pusha
or
pop
push
mov
push
mov
cltd
std
xlat
pushf
imul
ss
outsl
cmc
imul
pop
setle
imul
xchg
xchg
sti
xchg
fcoms
test
push
or
rorb
add
dec
popa
pop
pop
jge
fildl
push
hlt
icebp
sarb
iret
ds
int3
push
jnp
ret
push
jp
fiaddl
ds
xchg
addb
cwtl
ror
push
sbb
xchg
lods
add
cmp
gs
imul
clc
cmc
mov
iret
cmc
inc
nop
pop
test
inc
mov
aas
pop
mov
xor
ljmp
rcr
jnp
in
out
push
pop
out
sahf
pop
dec
fwait
dec
add
lods
mov
addl
iret
jl
xor
xchg
sub
jo
inc
out
adc
outsl
add
add
mov
xor
and
jbe
rorl
pop
jae
dec
adc
cmpl
jne
or
inc
mov
fdivr
fs
jl
sub
xchg
dec
jnp
dec
xchg
inc
xor
ss
cmp
in
sbb
imul
lcall
jecxz
jb
inc
insl
movsb
push
adc
or
lods
loopne
lods
jmp
sub
jno
mov
xor
and
cmp
clc
jns
sub
rcrb
mov
in
add
cwtl
pop
ret
sub
xchg
pop
cli
mov
dec
inc
rcl
hlt
mov
add
shlb
mov
sti
iret
and
sub
pshufw
lahf
push
test
adc
push
inc
sbb
jmp
mov
imul
sti
cmc
movsl
sbb
aad
dec
lods
pop
mov
rcrb
mov
icebp
dec
xchg
jp
or
ret
and
es
leave
push
int
fildl
push
lock
or
pop
xchg
stos
stos
mov
sarb
sbb
fbstp
dec
cmpsl
daa
arpl
rcrb
addr16
mov
in
incl
call
add
jl
lds
pop
xor
sbb
arpl
mov
shrb
xchg
adc
iret
xor
adc
out
pop
mov
leave
or
jle
das
xchg
mov
jb
jmp
rcl
cwtl
mov
jo
jo
jo
in
xor
jl
popa
lret
pop
or
or
rorl
adc
hlt
cmpb
test
fnstcw
lock
sbb
cmp
push
mov
mov
lret
daa
mov
pusha
fldl
or
push
movsl
jecxz
mov
cmp
mov
aam
cmc
and
mov
dec
out
aaa
mov
inc
ss
push
imul
or
arpl
jle
mov
test
sub
pop
stos
sti
sbb
imul
aam
call
sti
aam
mov
mov
mov
fistl
xchg
inc
mov
call
adc
decl
enter
repnz
mov
push
stos
cmp
clc
jl
gs
or
mov
jmp
pop
icebp
in
lods
out
xor
xlat
dec
or
dec
mov
pop
mov
mov
inc
imul
in
adc
jns
add
sahf
pop
cmp
scas
and
pop
imul
aam
mov
ret
orb
shlb
adc
test
pop
mov
fstpt
cltd
push
pop
fmul
push
cmc
call
daa
addr16
mov
roll
ret
ret
imul
dec
or
sub
mov
stos
push
push
mov
sbb
xchg
or
iret
insb
insl
punpckhdq
mov
sub
jmp
pop
cmp
jecxz
arpl
xor
in
loop
adc
mov
jae
dec
lods
pop
add
cwtl
mov
fdivl
ss
push
sti
and
jp
clc
outsl
test
ret
sub
sti
adc
cs
mov
dec
lret
adc
and
ret
pop
rcl
dec
std
lock
pop
cmpb
mov
cmc
fmull
in
sub
pop
mov
sbb
outsb
pushf
lods
ljmp
hlt
scas
dec
cmp
jnp
aad
mov
fcmovbe
push
mov
adc
loope
adc
pop
popa
jg
push
outsl
xchg
scas
js
add
mov
cmc
or
ficompl
cmp
mov
jb
hlt
loope
inc
xor
aaa
mov
rolb
dec
daa
sti
jl
lea
repz
loope
rcrl
rorl
sbb
repz
movb
inc
outsl
aam
fnstcw
nopl
jp
shl
int
repz
and
mov
sub
mov
sbb
repz
mov
rolb
adc
int
jns
xchg
pop
cltd
js
les
jmp
aas
mov
iret
pop
ja
cmpsl
jge
push
mov
mov
out
stos
jmp
jmp
inc
rcll
pop
adc
mov
cmp
xchg
shll
pop
mov
call
sub
testl
jbe
or
ja
mov
xchg
mov
mov
mov
call
inc
or
or
mov
in
cmpsb
jge
or
jns
mov
mov
pusha
mov
jnp
add
sbb
dec
int3
fstl
sbb
addb
xor
xchg
icebp
adc
js
fisubrs
stos
xlat
ja
mov
mov
loop
test
lods
in
xor
loop
je
test
cmpsl
add
lret
jp
cli
scas
push
popa
aam
test
int
sub
or
scas
fwait
mov
mov
adc
scas
jp
xchg
pop
sarl
xor
cmp
mov
cmpsl
xchg
iret
enter
dec
add
xchg
sbb
sbb
outsb
cmp
mov
sbb
in
xor
movsl
imul
or
out
aas
jae
out
xorb
stos
pop
xchg
pop
sbb
lods
and
addr16
lea
pop
das
dec
out
add
mov
clc
add
divb
pop
aad
mull
cmp
dec
add
mov
repz
cmpsl
dec
mov
jle
xlat
stos
inc
arpl
les
jb
das
out
dec
ljmp
rcrl
std
in
pop
mov
cmp
sub
test
dec
insl
adc
inc
mov
into
or
push
decl
inc
mov
sti
sbb
push
popf
sahf
fcoml
enter
cmp
push
xor
xchg
lock
lods
mov
cli
hlt
mov
add
pushf
inc
jmp
sbb
stos
mov
sbb
in
cmpsl
pop
mov
push
and
xchg
mov
cwtl
inc
adc
pop
outsl
pop
cmpsb
fwait
jae
and
dec
div
stc
mov
xchg
daa
pop
pusha
int3
repz
ss
arpl
cs
in
xor
lods
push
ror
mov
dec
test
pusha
pop
inc
test
jecxz
mov
dec
test
sbb
mov
call
ljmp
outsl
inc
mov
insl
repz
and
pop
popf
fcomp
shlb
add
adc
in
js
call
in
mov
fisttpll
hlt
mov
pop
jbe
mov
sahf
pop
inc
inc
das
je
dec
pop
mov
sub
and
dec
dec
popf
out
ss
pop
add
cmp
addr16
inc
rcrl
sub
inc
leave
jae
cmc
out
ljmp
mov
xor
xchg
fst
sbb
cmp
push
pop
int3
cwtl
xchg
ja
shll
adc
mov
jmp
nop
test
addb
mov
pop
pop
pop
popa
push
insb
mov
dec
mov
rcll
pop
cs
pop
fwait
loop
fisubl
xchg
cs
adc
and
cmp
cld
mov
or
addr16
xchg
rcr
lods
jo
dec
rorb
jp
pop
push
jp
negb
jnp
xor
iret
xor
mov
scas
sub
inc
pop
and
sahf
stos
add
loop
dec
push
xor
ds
and
jbe
mov
cmp
sahf
cmpsl
mov
sub
cmpsl
inc
int3
ds
cmp
dec
je
mov
push
dec
push
enter
rorl
pop
mov
xchg
fisubrs
or
dec
call
dec
inc
fistl
push
fcoms
pop
push
add
in
sub
js
sahf
std
xor
outsb
addl
dec
add
mov
mov
xor
add
fldt
in
adc
pushf
lods
test
pusha
outsb
mov
mov
scas
mov
test
mov
out
dec
add
mov
add
cwtl
aam
les
imul
pop
jmp
jl
cmp
fnstcw
cld
sub
cmp
sbb
sbb
adc
mov
xchg
jb
das
xlat
sub
jo
notl
hlt
pop
stos
pop
cwtl
jge
sbb
shlb
in
xor
xchg
pop
push
inc
cld
push
negb
jo
adc
daa
xor
cmpsl
push
adc
test
and
lds
jns
addb
sbb
movups
mov
aaa
clc
adc
ds
daa
insb
or
adc
jne
or
outsb
dec
in
or
scas
nop
xor
nop
sub
cmpb
and
addr16
mov
sub
pop
ja
inc
mov
push
cmp
xlat
les
ficomps
loopne
jmp
or
add
mov
lods
sbbb
pop
lcall
mov
jne
test
test
adc
add
outsb
mov
and
js
out
dec
dec
sub
lea
mov
movsb
notb
into
shl
push
outsl
je
sub
loope
push
pop
mov
cli
dec
in
lret
dec
inc
mov
sub
xor
jnp
xlat
push
outsl
and
test
push
in
mov
jno
popa
mov
fdivl
sub
and
gs
push
jns
cld
and
adc
sbb
popa
mov
add
fcoms
cwtl
dec
stos
add
int
sbb
lcall
xchg
fwait
sti
rcll
repnz
mov
fwait
mov
fwait
shlb
sarl
xchg
mov
pushf
insb
out
in
push
adc
push
xchg
idivb
xchg
xchg
xchg
pop
pop
andb
cmc
adcb
ds
xor
jmp
push
cmpsb
sub
cmpsl
cmp
ljmp
pop
and
jae
dec
sahf
jne
sub
mov
inc
sub
frstor
push
lret
sub
push
int
pop
mov
mov
push
sar
dec
seta
cmp
inc
xchg
cvttps2pi
xchg
outsl
push
mov
sbb
sbb
mov
divl
movsl
jns
int
inc
and
icebp
mov
cmp
fistpll
add
sub
mov
adc
lcall
adc
cli
and
push
jbe
push
data16
pop
loop
iret
and
cmp
and
mov
popf
out
add
jge
push
jbe
dec
clc
adc
cwtl
mov
xchg
mov
es
push
dec
jg
rorb
insl
dec
xor
pop
cmp
repnz
stos
mov
aaa
xor
sbb
jecxz
lret
add
imul
xor
mov
jne
movsl
lods
faddl
out
imul
sub
daa
xchg
mov
or
or
or
pop
sbb
sbb
xor
mov
jmp
clc
pop
movsb
mov
in
xorl
fdivp
sub
xchg
inc
loop
add
xchg
daa
fsubl
add
sti
scas
mov
ffreep
fnsave
push
push
jl
cs
dec
and
out
aad
aad
mov
and
out
in
mov
push
mov
rep
outsb
push
xor
mov
imul
inc
into
push
cltd
int
test
insb
mov
adc
shl
adc
hlt
int
or
inc
sbb
hlt
jns
leave
jmp
xchg
cmp
sbb
shl
call
add
jmp
enter
xor
mov
adc
cmp
mov
ficompl
aaa
mov
mov
scas
xor
pop
movsl
es
mov
lods
repnz
jb
dec
daa
lret
xor
roll
dec
pop
dec
lahf
fistpll
fnstsw
pop
mov
es
mov
out
lretw
sub
pop
fs
sub
mov
mov
lods
mov
mov
insb
inc
pop
cmp
mov
push
inc
xorl
pop
and
push
out
jmp
xchg
fwait
add
push
setb
mov
and
inc
adc
cwtl
xchg
mov
stos
mov
mov
int3
dec
mov
mov
jnp
inc
rcll
and
lods
xor
cmpsb
add
push
dec
add
push
hlt
adc
dec
aam
pop
mov
xor
pop
imul
lods
loope
cld
sbb
jmp
adc
test
ljmp
jne
xor
imul
push
or
roll
push
adc
jle
cmp
add
xor
mov
enter
xchg
fs
mov
jp
imul
push
pop
test
mov
xor
and
mov
pushf
mov
call
ljmp
filds
loope
test
push
cmp
int
mov
stos
loopne
cmpb
xchg
gs
xor
imul
add
mov
jb
push
das
test
jg
xchg
negl
out
inc
scas
and
enter
fstpl
stc
lods
scas
dec
std
push
cs
mov
aad
ss
clc
sub
aaa
mov
inc
mov
push
jecxz
sbb
cmp
push
fwait
mov
push
or
js
mov
pop
add
ja
pop
push
cmp
fxch
add
sub
imul
ja
out
mov
dec
mov
jecxz
mov
xchg
jge
mov
imul
mov
int
iret
adc
cmp
inc
mov
jo
sub
mov
daa
fdivs
pusha
mov
fwait
pop
cmp
jmp
shll
xchg
jle
addr16
stos
mov
jp
jp
punpckhdq
adc
in
dec
call
pop
arpl
push
sub
movsl
jne
mov
xchg
into
repnz
jns
mov
dec
mov
dec
call
sbbb
daa
repnz
je
jne
mov
and
lea
jmp
mov
cmpsl
fucomip
in
jne
mov
shlb
xor
jecxz
sub
inc
add
cmp
xor
mov
int3
lods
and
iret
xchg
repnz
in
xchg
mov
adc
es
adc
sub
insl
fstpt
jne
ret
out
jnp
pop
sahf
add
pusha
pusha
push
out
mov
sahf
pop
test
mov
or
insl
stc
sub
cmpsb
loope
std
lcall
and
dec
out
dec
pop
and
int
jo
mov
cmp
test
sbb
add
das
add
inc
imull
movsb
xchg
or
jle
cs
and
loopne
scas
lods
js
addb
in
mov
imul
sahf
push
icebp
leave
or
mov
sbb
adc
jmp
ljmp
mov
lock
addr16
push
in
mov
inc
fisttpll
pop
fs
lret
adc
lret
repnz
pop
dec
adc
jo
xor
nop
movsl
aas
push
dec
xor
js
js
test
hlt
push
out
jnp
inc
pop
mov
mov
lahf
cmc
mov
fdivs
xchg
imul
pop
dec
mov
fbld
mov
dec
and
test
and
sub
dec
xchg
jbe
dec
xchg
inc
mov
dec
movsb
xchg
out
test
mov
enter
shlb
xor
lcall
cmp
in
lods
stos
cmp
push
sub
sti
push
push
pop
sub
stos
jp
addr16
in
xchg
test
mov
cli
pop
scas
adc
stc
out
inc
aas
mov
mov
in
cmp
xor
sbb
out
or
jae
cmp
iret
addr16
ljmp
jne
imul
push
push
xor
enter
mov
push
push
or
fldenv
push
sub
out
dec
mov
sbb
lcall
lahf
and
mov
dec
ret
pop
xor
arpl
mov
lahf
lret
pop
je
mov
mov
popf
and
inc
roll
mov
imul
sub
cmp
sub
and
mov
add
dec
je
mov
push
pop
sub
and
xor
clc
or
stos
sbbl
dec
mov
cmpsl
jl
leave
ret
dec
adc
xchg
sbb
imul
dec
jo
cld
or
out
fnstsw
dec
pop
mov
enter
out
adc
push
cltd
push
jnp
pop
aad
stc
push
bound
pop
aam
repnz
mov
aad
add
mov
or
jbe
ds
imul
lods
fmul
pop
pop
inc
push
jno
lcall
leave
int
jmp
adc
xchg
jg
push
imul
inc
cld
mov
iret
or
mov
rol
xor
scas
adc
ss
adc
jo
inc
jge
add
jmp
lcall
xlat
mov
pop
xor
out
cmpsb
fisttps
xlat
adc
pop
cmp
lods
push
ja
or
les
mov
call
jle
xor
push
stos
push
pop
dec
or
aam
mov
rcll
aad
es
pop
icebp
ret
test
outsl
in
sub
dec
iret
jns
ss
and
adc
dec
stos
ds
mov
rorl
dec
scas
add
fidivrl
xor
pusha
pusha
xor
imul
cmpsl
push
aam
add
arpl
sarb
xchg
nop
sub
mov
repnz
cmp
les
dec
inc
xchg
jp
imul
or
mov
out
in
cmp
xchg
into
test
cmp
cs
bound
cmpsl
ja
cld
out
mov
sub
rorl
jbe
jnp
jge
cmc
popf
mov
adc
push
push
dec
fs
add
mov
ret
or
adc
test
sahf
push
pushf
shll
mov
cwtl
dec
out
add
les
cmpsl
push
jg
adc
in
outsb
add
xchg
xchg
fadds
and
inc
hlt
cmp
scas
cmpsb
in
andl
pop
popa
add
lods
mov
add
ret
or
lea
fs
push
loope
pop
cltd
xchg
dec
and
enter
cmpsl
xor
fcompp
mov
cmp
mov
add
mov
hlt
jb
sbb
or
sub
punpcklbw
pusha
jle
xlat
inc
xchg
jbe
aaa
pop
sarl
outsl
pop
in
mov
dec
inc
inc
mov
pop
sbbb
or
out
mov
ss
cmp
icebp
cmpsb
fwait
lds
scas
lret
jne
subb
xchg
dec
lcall
outsl
lods
push
rcll
mov
push
imul
mov
in
mov
xchg
stos
fldt
inc
cmp
adcb
cmp
stc
fnstenv
mov
pop
inc
pop
jmp
mov
les
inc
std
sahf
outsl
sub
jnp
adc
dec
sbb
jb,pt
cwtl
pop
fnstcw
ja
jp
mov
sahf
out
jno
inc
test
repz
dec
in
movsl
dec
mov
cmp
stos
out
adc
out
es
push
int3
pushf
into
mulb
xor
insb
jge
aas
pop
stc
jp
rorl
sti
fldt
or
push
loopne
adc
push
lcall
inc
pop
repnz
mov
xor
imul
add
and
xor
iret
stos
pushf
push
jmp
xchg
sbb
dec
test
xchg
push
sub
stos
mov
dec
pop
add
fisttpl
adc
mov
outsl
loopne
mov
lcall
js
pop
sub
dec
addr16
fstps
jecxz
sbb
adc
xchg
int
pop
mov
idiv
mov
pop
fisttps
mov
and
sbb
mov
divl
dec
inc
aaa
dec
test
pop
jno
mov
xor
pop
and
cmc
pop
fwait
imul
pop
iret
mov
ret
pop
sub
cltd
push
aaa
test
push
loopne
sub
mov
incb
jnp
push
scas
std
add
pop
pop
push
js
mov
jmp
mov
int3
addl
inc
mov
cmp
rolb
xor
and
or
test
mov
mov
repz
cmp
ror
jb
loop
out
movsl
ja
movsb
mov
in
fnstenv
leave
out
pushf
mov
cmpsl
sbb
and
je
aam
int
ja
or
out
movb
mov
aaa
in
or
cmpsl
xchg
push
pop
xchg
repz
sub
jp
xorb
gs
inc
imul
cli
pop
and
xor
jg
lods
sbb
dec
ljmp
adc
mov
aaa
jmp
decl
aad
test
out
mov
cmc
push
inc
cmp
enter
xchg
mov
sarl
pop
enter
jl
cmpsb
jae
inc
pushf
ja
pop
dec
outsl
inc
std
adc
rclb
dec
sahf
push
push
push
addr16
popa
adc
push
adc
add
xchg
std
shrb
xchg
or
pusha
sbb
push
cmp
stos
mov
movsb
lcall
push
cwtl
testb
aaa
out
ljmp
mov
sub
enter
sub
and
dec
mov
scas
movsb
push
and
pop
xlat
inc
sbb
test
std
inc
repnz
daa
sbb
xchg
daa
and
gs
mov
ret
mov
dec
ss
enter
sub
mov
xor
or
mov
rorl
mov
mov
adc
ljmp
push
inc
jnp
stos
cmp
movsb
pop
xchg
jp
fnstenv
push
enter
adc
pusha
sub
pushf
fs
popf
ljmp
je
int
push
sub
fsubrs
or
dec
dec
and
cmp
xchg
mov
lahf
sub
dec
cld
mov
push
xchg
lret
shrb
lds
pop
aad
xor
xchg
fstl
loope
out
xchg
outsl
bound
enter
add
jmp
in
dec
int
sahf
mov
les
or
pop
ss
outsb
and
inc
fcmovb
ja
leave
mov
dec
out
pushf
leave
lcall
dec
mov
rol
psrlw
xor
pop
adc
push
ss
aam
enter
int3
add
xor
int3
lock
fimull
outsb
cmpsl
mov
jo
fwait
ret
cmp
rclb
popa
jmp
mov
pop
outsb
out
imul
repz
cmp
and
enter
test
mov
inc
js
push
stc
cs
cs
jg
and
aas
out
sub
dec
sbb
mov
mov
cltd
enter
pusha
neg
ljmp
dec
jb
pusha
mov
xor
jle
lret
imulb
fcom
jae
jmp
add
cmp
out
and
xchg
nop
pop
xor
ret
push
stos
push
push
mov
mov
xchg
pop
insl
push
sti
xor
testl
fwait
and
xchg
sbb
xor
mov
adc
lcall
insb
mov
lret
mov
or
add
in
adc
jb
mov
xchg
xlat
cwtl
incl
sbb
jecxz
or
push
out
or
push
fnsave
outsl
sbb
pushf
inc
or
je
loope
insb
aas
jne
icebp
scas
jg
addb
xchg
mov
std
add
and
js
test
mov
je
jb
lods
cltd
daa
cmp
cmc
bound
clc
mov
xor
jo
notb
adc
in
push
and
and
rol
aad
mov
cmp
xchg
neg
xchg
ljmp
mov
jle
cmpsb
or
lods
inc
notb
dec
cwtl
mov
movsl
dec
ret
jns
sub
mov
cli
ds
adc
xchg
scas
adc
push
pop
loop
push
out
mov
aad
push
lods
mov
adc
orl
pop
je
push
jmp
clc
push
in
fsubrs
stos
cmp
xchg
rorb
cmp
sbbb
push
cmp
mov
sbb
mov
dec
not
pop
xlat
mov
rcrl
loopne
sbb
int
aam
cmp
or
lcall
xlat
pop
and
cwtl
fcoms
stos
in
adc
mov
ret
mov
add
push
mov
push
cmp
add
test
stos
pop
enter
scas
cwtl
xchg
lods
and
cmc
into
push
sub
or
cmc
pop
and
xchg
lds
arpl
imul
lahf
jae
sahf
inc
xor
dec
mov
cld
push
cmpsb
arpl
mov
inc
nop
cmpsl
dec
cmpsb
ficompl
mov
mov
dec
lods
jns
insb
decb
jl
add
mov
popf
xor
movsl
sub
shlb
dec
data16
or
in
arpl
xor
pop
mov
shll
jp
jnp
addl
push
mov
loopne
lret
shrl
xor
enter
or
scas
rorl
add
cmpsl
stos
pop
mov
outsl
aas
adc
ret
ret
cmp
out
jne
xchg
push
data16
adc
mov
xorb
mov
mulb
jo
dec
mov
sub
xlat
dec
int
xor
and
adc
jno
jecxz
fbstp
mov
imul
dec
test
mov
fnsave
inc
inc
stos
ljmp
pop
lret
addr16
jg
add
out
jne
fs
jnp
fdivl
fbstp
xor
mov
cltd
pop
mov
bound
add
adc
iret
adcb
mov
mov
pop
xchg
or
cmp
inc
mov
rcrb
int3
push
dec
xor
aaa
shlb
jl
sub
clc
cmpb
jge
lock
xchg
and
jecxz
pop
mov
mov
add
ja
xchg
ss
dec
imul
test
stc
mov
das
mov
inc
cld
add
mov
add
inc
sub
lea
movsb
push
sarl
inc
adc
push
mov
push
mov
xchg
mov
notb
pushf
mov
test
jo
and
and
xchg
inc
insl
ljmp
lret
add
pop
push
jmp
mov
ficoms
push
fldt
push
das
lods
lret
pop
inc
into
sub
jb
and
and
scas
enter
mov
xchg
test
test
aad
sub
mov
aam
cwtl
xor
std
lret
push
jo
or
cmc
in
pop
push
add
push
mov
xlat
cmp
fsts
leave
fsubrl
jge
imul
xchg
push
int3
dec
adc
xor
cmp
mov
xor
and
adc
imul
sub
in
push
mov
out
cmp
jbe
push
lcall
pop
and
leave
jp
movsl
jae
cs
sub
fidivrl
in
cmp
jmp
lahf
sahf
data16
aad
xchg
call
adc
push
xchg
movsb
pop
adc
sahf
jecxz
pushf
xor
cmc
pop
aad
push
in
les
dec
jmp
mov
and
sbb
nop
imul
popf
stos
dec
imul
pushf
sub
stos
mov
dec
in
cltd
imul
push
sahf
daa
insl
movsb
int3
mov
mov
leave
add
test
or
sbb
mov
in
ljmp
pop
jg
cmp
push
mov
adc
jg
xchg
cs
adc
push
out
sub
loop
xchg
push
add
loop
inc
addr16
mov
mov
jb
lcall
push
lock
aaa
stos
pop
subb
fnstcw
aad
les
mov
enter
xchg
test
jge
mov
cmp
test
out
loop,pt
loop
cli
in
pushl
add
pop
ja
sbb
cmp
in
mov
cmc
in
mov
addl
or
push
push
sbb
popa
sub
repz
lea
jb
mov
sub
ljmp
leave
pop
sbb
push
ficomps
pusha
pop
jne
and
shr
xchg
mov
std
lcall
sbbl
sub
inc
insb
inc
cmp
and
sarl
jbe
mov
sbb
add
ss
shl
sbb
addr16
jns
scas
jle
inc
mov
and
loope
and
inc
push
lret
mov
pop
sbb
xchg
push
movsb
mov
sbb
hlt
dec
movsb
mov
imul
pop
mov
jge
out
inc
add
outsb
mov
fwait
ret
fsubl
mov
mov
movd
bound
or
xor
scas
xchg
pop
lock
push
and
enter
sbb
jno
push
sbb
loopne
std
addb
mov
mov
mov
xor
cmpsl
aaa
mov
push
arpl
jns
imul
setns
jno
outsl
insl
movsl
mov
stos
adc
and
js
sbb
pop
mov
mov
out
sahf
mov
pop
cmp
aas
loop
faddp
dec
call
pop
mov
mov
pop
movsb
jmp
jge
fiadds
aam
lret
adc
inc
jns
cwtl
lds
fstpl
sub
xor
inc
mov
cmp
xchg
xchg
insb
xchg
cmpsl
fistpl
or
jp
xchg
hlt
lcall
mov
insb
jge
popa
add
or
or
scas
jge
icebp
xchg
out
adc
and
inc
add
mov
les
ljmp
mov
ret
or
inc
loop
addr16
dec
and
sub
mov
fs
pop
inc
jae,pt
pop
sbb
cmpl
sub
mov
sbb
and
sti
ljmp
push
dec
ds
hlt
or
jae
popf
popf
and
sub
and
popf
inc
and
cmp
push
icebp
or
cmpsl
adc
fldl
pushf
icebp
pop
and
cmp
mov
cmpsl
fldenv
xor
pop
ds
loop
mov
data16
sar
mov
sub
push
mov
push
bound
clc
lods
xchg
test
fildll
sbb
bound
sbb
out
pop
xorl
fisttpll
sub
mov
into
pusha
cmpsb
push
cli
mov
or
cmp
jle
jmp
rcll
aaa
popf
lret
lcall
stc
stc
mov
mov
push
int
mov
fisttpll
pop
inc
fidivs
dec
jno
arpl
add
and
inc
xor
stc
test
test
es
mov
add
mov
ss
inc
sbb
bound
xchg
fmuls
out
jg
mov
xorl
pusha
adc
push
pop
cli
push
icebp
stos
repnz
mov
hlt
test
sbb
and
insl
xchg
push
rcrl
dec
push
subb
leave
xchg
repnz
adc
daa
xchg
rcrl
sbb
cmpsb
mov
outsb
stc
mov
bound
push
and
xchg
je
popa
sbb
inc
push
and
push
mov
out
sar
push
mov
scas
pop
jno
push
dec
xor
in
stos
push
imul
outsl
imul
or
arpl
cmp
push
fstp
add
outsb
sub
mov
pop
pop
pop
incl
mov
ss
pop
test
test
xchg
or
popa
cmpsl
shlb
push
scas
add
mov
ret
cmpsl
mov
lock
push
sub
or
jp
mov
mov
dec
je
sbb
pop
mov
pop
test
sbb
ret
xor
lret
lock
cmpb
pop
ljmp
cmc
inc
jns
pop
push
ja
notl
stc
sub
jg
sbb
and
adcb
imul
adc
lret
ljmp
sbb
add
jne
outsb
cmpsb
cltd
push
ja
nop
jnp
lret
dec
mov
push
out
mov
mov
xchg
sub
ja
jp
xor
push
adc
cmp
rclb
mov
fisubrl
xchg
inc
cld
pop
test
test
inc
stc
xchg
mov
fnstsw
mov
pop
mov
mov
push
push
pop
jno
inc
adc
xor
lock
andl
push
xchg
inc
mov
sub
ret
mov
lcall
xor
adc
mov
enter
popf
mov
jmp
popf
cs
lret
sub
add
pop
fwait
repnz
int
lds
add
xchg
shrl
xor
xor
or
insb
jnp
xor
add
es
and
push
jmp
fadd
jg
add
sub
dec
loopne
stos
aam
push
cs
and
int3
xchg
mov
pop
dec
cltd
jns
pop
sub
pop
int3
jge
adc
fmulp
std
js
adc
lahf
xlat
clc
xor
sub
loopne
loope
sub
das
sub
leave
xchg
dec
mov
sbb
mov
add
arpl
lret
stc
das
ret
fisubs
aad
add
and
movsb
or
jle
lds
xor
sub
push
int
das
jae
out
lock
add
mov
movsl
jge
xor
cmp
or
sub
out
push
fnstenv
dec
stc
sub
fsubrs
dec
cmc
cmp
jecxz
daa
pushf
cmp
ss
push
movsb
inc
call
cmp
lahf
in
aam
jbe
stc
divb
aam
ret
mov
outsl
ret
jg
mov
push
sub
mov
lds
je
push
add
fs
xlat
das
aaa
xchg
test
push
xchg
in
test
mov
sub
movsb
cwtl
loop
mov
icebp
jp
jge
movsb
loop,pt
xchg
lds
idivl
jae
jo
mov
push
lods
cmp
jp
xchg
js
push
insl
adc
xchg
repz
add
xor
enter
push
frstor
ret
sub
inc
inc
cmc
sbb
add
push
jmp
dec
pop
int
stc
pushf
lahf
xchg
cs
int
mov
dec
and
adc
aaa
xor
add
icebp
into
pop
cwtl
aas
out
daa
mov
fs
int
pop
pop
lds
xor
push
jp
add
int3
flds
or
adc
dec
pusha
sbb
idivb
pop
pop
call
jns
dec
inc
and
imull
inc
push
jp
mov
mov
fistpll
xchg
in
ret
subl
std
cmp
cld
push
out
repnz
inc
mov
adc
test
jmp
icebp
ret
xor
add
jb
fs
cmpsl
push
or
add
jne
cli
test
mov
or
and
int3
jb
or
pushf
popa
negb
add
daa
cwtl
lcall
fldcw
adc
xchg
xor
push
cbtw
lret
add
outsb
add
decb
cmp
cmpb
xor
mulb
fbld
mov
xchg
jl
scas
cmc
push
cmp
mov
mov
lret
ja
mov
pop
in
push
dec
int
xor
lods
and
jp
cmp
jb
cmp
cmp
jg
jnp
push
out
stos
es
int
fbstp
fptan
and
ffree
sub
in
jno
xor
sub
filds
rcrl
orl
addr16
jmp
ljmp
mov
adc
mov
xchg
sub
ja
cmc
sub
push
inc
xor
add
adcb
xor
mov
fnstsw
xorb
sub
push
jnp
gs
ja
dec
sbb
cmp
out
mull
inc
mov
test
push
jle
push
sub
add
inc
aam
bound
dec
mov
popf
bound
push
mov
inc
dec
lock
push
push
arpl
das
push
cmp
movsl
fnsave
pop
jmp
sbb
fisttpll
icebp
push
out
inc
cmp
rclb
inc
cmpsb
bound
jg
sub
mov
fisubrl
stos
sbb
aaa
in
cs
mov
fisubl
sahf
loop
xor
or
pop
nop
cmp
cmpsb
aad
test
lods
push
adc
mov
jne
jno
sahf
push
adc
cmp
add
and
dec
mov
cli
jae
stc
or
cld
ds
mov
stos
sbb
rclb
sbb
fcoml
out
jns
nop
pop
dec
xchg
clc
notb
cmpsb
mov
dec
std
jmp
mov
adc
lret
sbbb
pushf
popa
pop
sbb
push
mov
cmp
sub
daa
pop
out
push
sarb
mov
lret
shrb
movsl
add
and
pop
push
cli
and
fdivr
ja
pop
adc
inc
lds
add
and
push
and
xor
push
test
sub
jns
aas
xchg
imul
stos
mov
addb
scas
out
mov
ret
mull
js
and
hlt
sbb
call
mov
ds
rcll
fdivl
test
mov
cld
adc
dec
arpl
out
sbb
pop
mov
xchg
adc
sub
dec
stc
sbb
xor
cwtl
dec
pop
mov
push
or
sbb
xchg
cltd
pop
es
and
ljmp
popf
inc
mov
je
repz
inc
jns
aam
insb
cmpsl
sahf
jnp
push
lahf
mov
xor
repnz
movsl
dec
sbb
pop
pop
mov
scas
pop
int3
xchg
push
inc
enter
loope
fldenv
into
test
es
fstpt
data16
dec
mov
stc
movsl
int
jp
xchg
js
lcall
popf
mov
cmpsl
es
enter
int3
lods
sub
pop
adc
mov
pop
add
inc
test
adc
lcall
mov
adcb
mov
and
lret
lds
call
or
leave
testl
pop
dec
xchg
jb
mov
movsl
int
pop
addb
ja
jmp
loopne
loop
and
cwtl
pop
pminsw
fdivl
lds
movsl
pusha
ljmp
cltd
loop
out
movl
sub
lea
ret
js
dec
lret
daa
inc
dec
xchg
inc
loopne
push
addr16
lods
sahf
push
dec
loopne
add
cwtl
in
xchg
aam
into
jno
push
mov
and
je
sub
ljmp
adc
outsb
and
pop
inc
jp
mov
iret
and
jmp
iret
inc
xchg
cmc
cmp
ss
cmc
mov
adc
popf
lods
stc
mov
jb
cmp
insb
or
jns
flds
icebp
ficompl
test
aaa
inc
mov
adc
ficomps
xor
clc
inc
mov
jbe
pushf
push
dec
repnz
aam
cli
inc
add
or
movsl
xchg
and
test
add
shrl
xor
nop
push
outsl
aam
sbb
sti
nop
shll
dec
imul
ficompl
or
lcall
fs
fldcw
pop
pushf
push
lods
ficomps
sbb
lock
pushl
adc
xor
daa
push
pop
gs
fisubl
cs
movsl
aaa
adc
xchg
and
push
mov
xor
bound
pop
sbb
lahf
cmp
jb,pn
cmp
cmpsl
stc
les
in
or
or
imul
push
jmp
pop
insb
push
push
mov
cmpsl
adc
lods
fwait
test
xchg
xchg
mov
nop
js
mov
fldt
mov
lea
xor
stos
jp
sub
jl
sub
cli
sub
and
add
add
insl
adc
int3
jns
and
mov
jne
loope
rol
shlb
dec
mov
or
das
std
mov
xor
lds
sbb
jnp
mulb
js
jmp
movsb
or
outsb
adc
mov
insw
ss
sub
pop
push
daa
jb
or
shrl
jne
adc
nop
lods
sub
data16
jmp
xor
or
idivl
cwtl
cmpl
iret
hlt
and
stc
idivb
xchg
or
int
mov
andl
inc
or
push
daa
popf
fstpt
push
lfs
pop
sbb
add
fistpl
bound
mov
imul
xchg
xchg
sub
sbb
scas
and
lea
jo
in
adc
jne
mov
mov
xchg
lret
movsl
mov
fisttpll
jmp
jns
sub
push
sahf
sbb
cld
cltd
in
out
lea
or
sub
lods
std
add
xchg
jmp
and
mov
push
and
outsb
xchg
dec
and
push
aas
stos
fadds
cmp
fsts
xchg
xchg
xchg
or
iret
and
hlt
mulb
ret
sahf
pop
stc
or
es
cmp
insl
mov
mov
push
push
xchg
stos
cltd
mov
mov
xchg
push
std
inc
xlat
pusha
lret
ss
movsl
jo
mov
mov
in
cltd
dec
clc
outsl
addb
push
jne
ja
arpl
inc
movb
addr16
out
jae
pop
mov
push
stos
mov
jecxz
insl
dec
int
mov
push
sti
outsl
imul
js
dec
fcmovnb
xchg
mov
in
dec
loopne
mov
imul
cmp
adc
jne
mov
add
mov
sbb
push
mov
bound
std
push
push
daa
sub
inc
push
es
or
sub
cltd
mov
sti
pop
rolb
push
sub
or
ljmp
lret
mov
push
das
pop
mov
push
icebp
xor
jb
cmp
movsl
and
xchg
mov
arpl
cli
int
inc
mov
lret
cs
xchg
call
std
push
cmp
imul
jbe
inc
xlat
lods
pop
into
js
jns
mov
xchg
add
mov
repnz
int
cmp
push
mov
jne
adc
imul
mov
sub
inc
pop
add
push
xor
call
out
fistpl
xchg
fwait
cmp
sbb
adc
sbb
aas
ret
hlt
sub
aam
mov
ret
cwtl
pop
inc
cltd
popa
lock
sti
mov
adc
call
call
mov
cltd
jl
shr
loopne
mov
xchg
xchg
xor
ljmp
xchg
inc
rcrl
jno
testb
and
sbb
movsl
jb
jp
les
aaa
pop
jle
insl
xor
jnp
mov
xchg
jno
push
bound
cltd
or
aaa
add
xor
lds
pop
pop
xchg
out
mov
inc
cld
in
sub
outsb
je
fwait
push
jmp
jae,pn
outsb
mov
scas
aam
divl
dec
push
jmp
cmc
ja
cltd
push
arpl
stc
xchg
push
das
or
and
mov
leave
fs
mov
push
jp
in
repnz
mov
mov
jg
sub
fisubl
aad
xchg
dec
rcll
inc
insl
xchg
adc
cs
dec
mov
mov
pop
cmp
aaa
ds
out
sbb
das
lock
mov
xchg
push
test
daa
inc
or
adcl
and
cmp
int3
in
jecxz
jg
andl
shll
push
out
jecxz
inc
xor
pop
dec
inc
mov
sub
popa
sahf
mov
pop
jge
sbb
stc
mov
sub
pop
icebp
mov
sahf
mov
cltd
out
aad
mov
fwait
mov
popa
enter
out
cmpsl
jo
repz
pusha
mov
stos
pandn
xor
xchg
aaa
xchg
es
mov
lods
xor
jns
and
ja
lea
fdivrl
sahf
ds
popa
mov
add
int
jmp
mov
push
dec
in
or
scas
xchg
mov
cmp
add
jns
jo
in
pop
outsl
ret
test
adc
cmp
loopne
fmulp
into
scas
ja
or
pusha
ret
sub
mov
xchg
mov
shrl
cli
filds
je
sahf
cmp
lds
push
mov
xchg
nop
imul
mov
mov
xor
push
cli
in
pop
push
add
pusha
add
aas
loopne
subl
mull
lcall
or
sbb
icebp
fs
lock
dec
adc
cmp
mov
mov
call
in
fadd
xlat
pop
stos
xadd
xor
imul
jns
fsubrl
test
sbb
test
push
fxch
insl
push
pop
mov
jo
lds
sub
cmc
fidivrs
inc
jo
hlt
imul
cmp
mov
xchg
cmpsb
or
mov
mov
mov
fisttpll
sub
fucomp
sbb
push
mov
int
and
or
orl
push
jb
or
sbb
lea
adc
cwtl
sub
mul
sub
out
clc
or
shlb
std
in
or
adc
cmpsl
push
jg
xchg
sub
sub
pop
out
sbb
mov
jge
pop
xchg
cld
jg
not
mov
sub
stos
leave
jns
mov
push
lock
sarb
lods
rcrl
aad
dec
lahf
stos
cmpsl
push
mov
cmp
incb
in
push
sbb
lcall
movsl
movsl
push
lea
xchg
push
int
push
cmp
mov
add
jb
cmp
xchg
and
dec
pop
loopne
add
xor
xchg
test
cwtl
jge
or
inc
mov
enter
mull
aas
test
dec
adc
xchg
mov
push
push
sbb
divl
or
xor
pop
jnp
inc
xchg
cmc
scas
leave
mov
push
push
and
or
fs
ffree
loopne
jnp
sbb
es
mov
xchg
les
mov
rcrl
xorb
push
sub
cmp
and
movsb
out
adc
fs
and
leave
and
cmpsb
jns
cmpsb
daa
ss
pop
out
or
pop
dec
out
jmp
cmpsb
pop
pop
orb
xchg
orb
out
jne
lock
mov
xlat
push
adc
test
into
push
cli
mov
mov
pop
inc
frstor
popf
sub
add
bnd
data16
orl
cwtl
cmpsl
adc
test
call
lods
fisubl
dec
mov
rep
push
aaa
rcl
cmp
and
xorb
lds
ds
push
lock
dec
fcmove
lods
push
daa
mov
ss
xchg
push
aam
adc
mov
jge
cmp
add
push
sarb
mov
pop
sbb
jl
adc
adc
inc
leave
push
pop
jbe
add
mov
outsb
fwait
jmp
mov
add
and
lock
decb
pop
loopne
loopne
popa
loopne
xor
inc
push
xchg
xchg
push
jo
lea
fimull
enter
pop
jb
adcb
push
xchg
and
popf
adc
dec
jg
imul
and
inc
je
orl
and
push
ds
fwait
sti
insl
pusha
mov
clc
dec
cmp
add
mov
jbe
push
es
out
repz
mov
in
xchg
sarb
pop
and
les
sbb
mov
sarb
out
inc
xchg
aas
nop
icebp
adc
ret
sar
fs
add
lds
jne
adc
pop
test
mov
push
sbb
es
fbstp
and
dec
in
sbb
xchg
adc
lcall
mov
push
mov
mov
imul
pop
pusha
sbb
sub
daa
jb
pushf
dec
cmp
mov
sbb
hlt
add
add
sub
add
out
mov
xor
push
jmp
push
pop
lods
ret
fcmovu
or
inc
sbb
push
mov
push
sahf
popf
sarb
imul
push
repz
xor
ss
jle
sub
add
pop
nop
call
outsb
mov
mov
pushf
mov
mov
scas
pop
enter
sbb
int
outsl
or
adc
jmp
xchg
xchg
cmc
cld
or
imul
mov
inc
push
aas
xor
int3
ja
lret
daa
lret
or
insl
inc
mov
dec
xchg
or
mov
pop
pop
pop
lods
jnp
sub
jge
out
lods
movsl
mov
les
sbb
push
jnp
gs
push
scas
mov
cltd
push
lods
mov
sbb
mov
adc
f2xm1
push
out
xor
push
aas
sbb
fcoms
enter
pop
fsubrl
inc
sbb
pop
and
ret
sub
rcrb
in
sbb
leave
in
inc
call
movsb
cs
cli
dec
sub
scas
sahf
mov
ss
push
push
and
outsb
pusha
jmp
rcl
push
mov
sub
inc
sbb
inc
cmpl
faddl
add
imul
std
push
add
or
pop
jbe
icebp
fdivrs
adc
mov
adc
sbb
lds
nop
fwait
outsl
or
cmp
rol
adc
inc
mov
xor
inc
push
out
mov
sbb
pushf
popf
pop
aad
pop
mov
out
nop
cmp
mov
ss
xlat
jecxz
cmc
je
out
add
aam
mov
fs
and
jl
adc
push
sbb
test
ret
push
xchg
int
ds
add
mov
jg
mov
sub
add
cmp
leave
xor
fiadds
xor
xchg
std
pusha
xor
sbb
lcall
push
mov
mov
adc
call
push
lahf
jno
jg
aas
jmp
adcb
push
pop
jle
mov
cs
push
leave
imul
rolb
sbb
cld
rcrl
mov
stos
lcall
loope
inc
jle
sub
mov
mov
cmp
xor
dec
lds
arpl
inc
icebp
stos
test
dec
jmp
mov
fldenv
mov
test
dec
in
xchg
into
adc
mov
lret
jecxz
add
decb
and
repz
mov
lea
mov
pop
push
xchg
adc
hlt
or
lcall
js
out
pop
cwtl
imul
popa
dec
add
push
cld
push
mov
loop
pop
aas
xchg
js
add
dec
mov
xchg
stos
test
and
shlb
xchg
xchg
sub
mov
jg
call
lds
sub
pop
mov
cltd
jo
mov
outsl
repz
xchg
bound
sbb
and
push
imul
adc
out
jbe
sahf
cmp
jb
movsl
or
sbb
int
int3
int
sbb
enter
test
cmpsl
cmc
gs
jmp
lret
or
xchg
mov
mov
jb
cmp
dec
lret
push
cltd
add
adc
out
clc
pusha
adc
movsl
mov
mov
mov
inc
xor
cmpsl
inc
cmp
sti
rorb
adc
push
push
push
mov
mov
dec
loop
dec
outsl
mov
pop
clc
lds
rcrb
mov
sbb
inc
addr16
daa
es
cltd
xchg
ret
out
sub
loop
and
jl
or
xchg
add
push
mov
add
fcompl
cbtw
xchg
push
adc
xchg
jl
inc
mov
xchg
faddl
jmp
aaa
pushf
leave
std
cs
dec
pop
out
mov
cwtl
dec
sbb
rorl
dec
das
inc
cwtl
add
fwait
ss
aam
insl
mov
pusha
ror
adc
stc
xchg
pusha
dec
iret
repz
and
jno
mov
pop
or
arpl
add
cltd
sub
push
cld
invd
mov
iret
mov
cmpsb
stos
jle
rcrb
enter
mov
imul
jbe
dec
ficompl
dec
pop
popf
or
outsl
mov
nop
cmp
sbb
roll
push
sub
adc
popl
out
cmpsl
pop
cwtl
inc
mov
or
jb
dec
jge
stc
pushf
cmpsb
les
push
popa
or
pop
mov
fs
and
faddl
dec
sahf
cltd
insb
hlt
mov
mov
sti
mov
jge
mov
aaa
les
adc
adc
loop
adc
cmovle
or
or
push
shr
add
shrl
sub
xor
call
gs
rcrl
jge
stos
inc
cmp
push
cmp
je
jmp
out
js
int3
inc
push
dec
and
jp
xor
sub
shl
mov
add
jae
inc
and
gs
test
and
lock
xor
and
inc
cmp
cli
sub
mov
jnp
pop
repnz
gs
dec
popf
or
dec
hlt
cmp
int3
mov
mov
and
shl
rorb
add
fwait
push
inc
fs
fstl
into
popf
push
mov
and
push
pop
dec
mov
push
ds
inc
inc
inc
mov
ss
jmp
jns
scas
inc
into
ret
inc
inc
cmp
dec
in
xchg
pop
out
cwtl
addr16
dec
insl
adc
add
cmpsl
adcb
test
sbb
xchg
dec
rclb
shll
xor
cld
jge
mov
and
outsl
bound
lret
outsl
dec
mov
push
xchg
call
jo
mov
mov
loopne
rclb
ret
or
cmp
sbb
xlat
jl
xchg
cmp
xor
cmp
mov
into
xchg
imul
fisubs
fisubrs
clc
cmpsl
cmpsl
movsl
push
sub
xor
dec
lock
outsb
loopne
ljmp
test
jl
adc
mov
xchg
push
or
or
insl
ljmp
jecxz
cli
movsl
or
sti
xchg
das
push
xchg
cli
sub
call
aam
stc
sbb
dec
adc
mov
pop
test
pop
mov
dec
fwait
adc
in
adc
in
dec
adc
aaa
mov
pop
pop
testl
shrb
or
arpl
dec
insb
call
mov
push
imul
fnstenv
popf
nop
push
mov
xchg
cmp
ljmp
jnp
jno
dec
lret
pop
cli
mov
or
mov
dec
loopne
push
dec
ja
scas
stos
jl
and
lods
adc
in
jns
in
and
fdivrs
out
mov
lret
mov
xchg
lret
sbb
jmp
mov
lahf
dec
pop
ja
jo
rcrl
sahf
dec
mov
test
mov
push
jno
cmp
adc
add
ljmp
or
stc
mov
pop
pop
or
or
stos
jbe
cmpsb
call
cs
xchg
scas
mov
inc
leave
xor
fwait
stos
sub
js
or
and
scas
jp
leave
xchg
pop
mov
push
test
pop
cli
pop
in
adc
cmp
xchg
jb
mov
inc
loopne
lods
adcl
das
and
lahf
mov
cli
cmp
into
jge
and
fsub
shll
fsubl
cmp
sti
lods
clc
xchg
push
cmp
shrb
mov
adc
mov
xchg
mov
jne
scas
sub
sbb
mov
or
mov
imul
dec
aaa
xor
and
arpl
lods
lahf
and
mov
fucomp
cmp
mov
mov
in
out
cmp
and
or
loop
aaa
popa
dec
fldt
xlat
inc
inc
mov
mov
ja
movsb
jne
outsb
rol
jmp
inc
btr
cmp
sub
xchg
dec
mov
setl
pop
push
imul
pop
and
negb
push
cltd
cmp
mov
mov
dec
inc
repnz
scas
andl
or
in
cmpl
stos
mov
repz
add
xchg
repz
mov
inc
xchg
inc
out
jbe
rcr
pcmpeqd
ret
sbb
jecxz
inc
divl
fmuls
cmp
mov
addr16
push
mov
loop
loope
clc
inc
add
push
sahf
mov
mov
add
xlat
inc
mov
repz
cmp
scas
cli
mov
add
mov
sti
pop
xchg
fcoml
push
cltd
mov
and
bound
adc
inc
test
fadd
in
push
mov
mov
mov
xor
iret
xor
push
shl
movsl
push
icebp
cli
icebp
clc
stc
call
adc
leave
mov
jno
lods
jecxz
adc
mov
sub
sti
lahf
push
aad
xchg
mov
lcall
aad
divl
addb
sub
je
lea
sbbl
jns
dec
push
push
cmpsl
mov
movb
dec
pop
lea
rorl
leave
out
mov
fiadds
lea
lcall
icebp
loope
xchg
sub
add
dec
dec
call
fisttpll
cmc
add
push
ror
inc
jl
mov
mov
cmc
imul
notl
mov
out
jmp
sti
rclb
adc
mov
jg
gs
ret
repz
arpl
xchg
xchg
in
cmpb
out
dec
rcl
sbb
stc
les
dec
mov
outsb
punpckhdq
movsl
mov
movsl
push
sbb
test
scas
test
fs
lock
sub
xor
js
or
xchg
stos
addl
adc
repz
cmp
aad
sarl
lcall
and
add
mov
je
lea
adc
test
xchg
arpl
dec
cmc
or
fidivl
jne
push
inc
stc
xor
jle
push
popa
nop
mov
stos
ss
das
loope
arpl
mov
xchg
sbb
and
lret
iret
lock
movsb
cmpsl
js
and
cwtl
cmpsl
add
jnp
clc
mov
ja
jne
lcall
lret
in
inc
cmp
mov
stos
loopne
rol
fidivrl
out
sub
pop
addr16
sbb
mov
jno
mov
das
arpl
push
rcr
mov
xchg
add
mov
or
cmpsb
xlat
and
adc
in
push
enter
or
lahf
inc
add
pop
sub
lds
mov
mov
pushf
push
insl
clc
stos
rcll
xor
lds
jmp
daa
stos
fstpt
sets
ljmp
mov
arpl
rcrl
lahf
ds
or
mov
sbb
loope
or
lock
and
je
and
test
enter
mov
sahf
sub
dec
leave
fidivrs
insw
insl
addr16
ret
add
mov
mov
push
dec
mov
ret
mov
fld
aad
jg
add
test
ret
sbb
in
push
mov
sbb
jnp
xchg
sbb
fwait
mov
mov
and
enter
xchg
test
test
xchg
movsb
push
jb
leave
fwait
addb
add
loopne
push
into
xchg
mov
cwtl
push
arpl
mov
clc
xchg
test
cld
test
cwtl
ja
cld
popa
outsl
cmpb
dec
shlb
ss
adc
push
in
loopne
jae
dec
inc
or
cmp
fildll
fwait
jl
scas
add
jge
int
jno
jb
aaa
dec
into
jge
xchg
sahf
aaa
mov
inc
fcom
pop
xchg
mov
push
dec
and
and
hlt
les
mov
xchg
pop
scas
in
sub
fimull
mov
pop
jmp
aas
pop
inc
mov
enter
lcall
mov
xchg
add
cmp
pop
in
fcompl
add
outsl
pusha
lcall
xchg
jb
pop
ror
cmp
mov
mov
mov
bound
dec
xor
cmp
cmp
dec
fadds
lods
fnstenv
js
mov
ljmp
leave
test
or
in
sbb
jmp
adc
cmp
fs
jle
jl
dec
push
pop
shr
xchg
test
and
push
mov
inc
xchg
je
cmp
insb
xchg
fwait
push
popf
and
pop
aad
cmp
mov
jns
sbb
imul
ss
arpl
xor
sbb
inc
pop
push
addr16
out
dec
cmc
pop
or
xchg
xchg
xorl
icebp
sahf
add
xchg
sbb
xlat
test
xor
jae
ljmp
mov
aas
mov
out
nop
xchg
fsub
popf
repz
push
jge
push
jns
in
xor
jl
mov
cs
imul
pop
ja
jo
xchg
sahf
cwtl
push
lahf
sti
aaa
addr16
rcll
adc
adc
dec
mov
inc
fwait
data16
cmp
sbb
into
in
mov
mov
or
xchg
data16
sub
and
push
fisttpll
adc
cltd
mov
dec
nop
jl
imul
inc
push
and
dec
mov
and
inc
test
test
ss
clc
pop
sub
test
and
cmpsl
jmp
mov
jecxz
sub
fstps
das
insl
xor
cmp
fcomps
rclb
shrb
dec
jp
or
mov
loopne
lcall
pusha
insb
adc
xchg
mov
es
fs
icebp
or
add
lds
pmuludq
data16
inc
adc
arpl
fcoms
mov
jmp
push
dec
xor
adc
in
lcall
xor
ja
jmp
das
andl
roll
repnz
push
dec
cmp
mov
pop
jecxz
popa
dec
test
andl
jle
adc
mov
fisubl
jecxz
out
insb
dec
into
mov
imul
mov
add
out
scas
int3
fwait
sbb
fisubrs
sbbl
aaa
jmp
xorl
test
xor
cmp
lods
int
fnstsw
dec
pop
mov
jp
push
ret
mov
addb
push
sbb
jecxz
mov
mov
dec
sub
sbbb
insb
adcb
lock
jg
sbb
std
fstpt
out
lods
mov
push
leave
push
in
test
sbb
fdivrs
iret
or
jecxz
mov
fmuls
fcompl
stc
scas
cmpsl
xchg
sbb
sbb
add
mov
test
ret
rep
jmp
or
jmp
insb
xchg
xchg
fs
stos
mov
or
mov
xlat
das
push
popw
ja
sbb
daa
sbb
xor
sub
mov
mov
in
or
test
and
das
addl
jg
jg
ja
sbb
aam
sub
in
in
addr16
es
js
gs
cmp
dec
pop
push
fistpll
test
jmp
sbb
mov
flds
sbb
mov
dec
enter
aaa
pop
mov
jp
stos
xlat
cmpsb
cmp
adc
nop
and
and
cmp
sub
in
and
add
aas
dec
scas
leave
gs
icebp
mov
arpl
aaa
test
sub
mov
jo
lock
sahf
inc
jbe
ja
gs
ja
or
push
loopne
test
cltd
and
push
notl
fwait
xor
cmp
push
mov
jecxz
sub
mov
sub
sarb
xchg
xchg
int
sbb
cli
mov
popa
outsl
lods
out
add
pushf
add
popf
and
inc
cs
mov
xor
lock
xor
imul
sub
jl
push
inc
fists
ljmp
in
pop
hlt
fisubrs
sbb
adc
and
xchg
es
stos
push
pop
sbb
dec
mov
inc
xchg
pop
aas
mov
out
pop
imul
inc
and
or
out
pop
push
outsl
sub
xchg
fidivs
int
inc
sbb
xor
mov
jo
ficomps
mov
repnz
jge
cmp
ds
mov
jo
cltd
lds
outsl
cld
jo
jp
das
cmpb
popf
decb
stos
pop
adcb
arpl
fmuls
std
mov
push
dec
mov
and
roll
ja
add
shl
clc
popa
ljmp
push
xchg
pop
mov
stos
xchg
sbb
mov
cmc
gs
pop
or
es
xchg
jne
jecxz
push
lods
adc
in
insb
and
popa
pop
sub
scas
nop
pop
faddl
incl
xchg
shlb
repz
and
ret
out
jle
inc
inc
or
jg
dec
or
cmpsl
xchg
notl
lods
scas
clc
loope
hlt
inc
mov
pop
ds
insb
jbe
in
jecxz
in
js
cmpl
and
dec
fs
mov
pop
or
jae
or
inc
ss
or
push
dec
mov
sub
stc
out
xor
movsl
dec
out
push
sub
sarb
lret
inc
testb
dec
pop
sub
incl
test
push
sbb
aaa
mov
fstpt
ds
sub
xlat
ds
pop
fadd
mov
shll
sub
outsb
cli
sub
fstps
int
clc
mov
fistl
int3
addr16
dec
adc
popa
ljmp
sub
aaa
test
cmpsb
mov
or
dec
sbb
adcb
mov
dec
jp
dec
inc
nop
daa
mov
mov
cmpsl
sbb
mov
icebp
lea
adc
sbb
mov
xor
mov
ss
mov
loop
lea
shlb
cmp
sarl
fcoms
xor
lea
cmc
push
rorb
gs
lock
jne
mov
sbb
daa
or
and
in
lds
xor
pusha
clc
xchg
push
je
xor
pushf
xor
inc
push
pop
daa
les
push
mov
sub
sti
xchg
lock
cmp
stos
call
es
pop
aad
push
js
push
jo
push
xor
jb
inc
cltd
in
pop
mov
mov
popa
push
test
cmp
pop
imul
sbbl
cwtl
repz
vsqrtpd
sahf
enter
xchg
ret
jne
into
out
sub
inc
aam
cmp
sub
and
pop
lods
mov
nop
sub
shlb
aad
leave
mov
je
cmp
data16
iret
aad
shr
outsb
mov
stos
shll
repz
mov
push
jae
add
and
push
xchg
adc
jae
cmpsl
aaa
int3
jo
scas
inc
push
cld
imul
inc
out
jbe
cmp
dec
xchg
dec
lret
in
add
loope
add
or
xor
outsb
lahf
jle
das
loope
fwait
mov
dec
inc
add
mov
ret
sarb
mov
push
in
inc
mov
dec
shrl
jno
pop
or
sub
mov
repnz
inc
mov
out
es
cmc
dec
dec
xchg
leave
cmp
jge
cmp
shl
push
in
stos
xor
int
mov
adc
mov
fcmovb
push
sahf
cmp
pop
rcll
xchg
or
mov
movsl
leave
or
sarl
jae
mull
imul
ficompl
iret
ss
dec
add
orb
pop
adc
dec
hlt
cltd
out
cmp
test
cltd
jge
or
outsl
mov
movsb
ljmp
imul
mov
xor
xchg
movsl
inc
cli
mov
les
es
js
popf
sub
scas
jnp
xor
in
scas
adc
pop
in
or
mov
pop
insb
stos
popf
rol
and
jle
cmp
or
call
addl
dec
test
jg
jne
test
push
mov
movsb
mov
adc
pop
and
mov
lods
hlt
jo
int3
mov
push
out
ror
scas
inc
fstp
cmc
clc
jge
rcll
and
mov
dec
and
xchg
pop
mov
dec
jno
mov
mov
and
sub
stc
hlt
jnp
mov
or
popa
xchg
and
cltd
and
frstor
out
mov
adc
and
mov
cmp
in
fucomi
stos
nop
jb
xor
inc
dec
adc
or
inc
fadd
data16
jae
insb
js
mov
in
lods
scas
addr16
or
cmp
outsb
inc
movsl
jmp
testb
lods
mov
aam
rcll
xchg
scas
mov
sub
xorb
mov
enter
adc
push
das
jmp
test
jecxz
flds
push
mov
push
mov
outsl
adc
gs
mov
dec
test
jl
mov
and
jnp
and
mov
in
xor
xor
addb
mov
outsb
les
insb
stc
cmp
jbe
mov
and
or
fsubs
ljmp
in
arpl
xor
mov
js
fistpll
jbe
xadd
hlt
cmp
ljmp
sbb
adcb
adc
jae
jne
cmpsl
cwtl
and
inc
jns
popf
fisubrs
fbstp
dec
bound
mov
mov
lret
aam
in
fxam
mov
js
adc
cmp
test
sub
add
add
add
cmpsb
ret
mov
int3
or
test
out
sub
ss
cmp
adc
sub
mov
out
or
aaa
imul
dec
outsb
lock
push
dec
fcomps
scas
mov
adc
xor
mov
aad
je
jl
mov
aaa
movsb
pop
cmp
add
out
js
outsl
inc
cs
fidivrs
imull
into
shrl
sbb
push
xchg
loopne
add
outsl
inc
or
push
and
or
dec
add
mov
add
orl
hlt
add
dec
ja
rorl
and
ja
or
aam
sbb
div
loopne
ja
mov
out
data16
mov
mov
push
adc
xor
cmp
push
aad
mov
and
cmp
mov
dec
adc
aad
dec
or
push
aad
jae
or
call
test
imul
dec
jo
mov
mov
lods
call
bound
jbe
mov
add
inc
mov
imul
xor
sbb
lret
mov
mov
out
mov
sub
sbb
pop
or
lock
mov
and
push
and
mov
jae
add
ja
push
and
and
cwtl
pop
and
dec
xchg
mov
mov
and
sahf
mov
aaa
xchg
outsl
xor
dec
enter
pop
mov
cli
das
sub
in
pop
push
dec
data16
iret
inc
es
jns
nop
mov
or
gs
pop
cmp
sbb
in
mov
int3
fimuls
jb
lock
hlt
imul
mov
ss
jno
sahf
je
adc
popf
and
sbb
inc
jecxz
aam
rcrl
in
repz
movsb
insl
xchg
imul
out
mov
or
loope,pn
xchg
xchg
rorb
xchg
jne
loop
fists
inc
je
push
and
jg
imul
outsl
call
inc
jle
jle
adc
clc
fsubr
mov
stc
lock
out
push
add
xor
movsl
cltd
fsubrp
xchg
inc
inc
arpl
ljmp
xor
es
mov
scas
xor
adc
pop
pop
jno
and
loope
and
xchg
inc
insl
push
mov
daa
lock
jno
push
aas
jle
jge
data16
xchg
lret
push
dec
sti
rorb
ljmp
jmp
lods
hlt
aaa
ficoms
mov
movsb
inc
adc
mov
aaa
cmp
outsl
stos
stos
fwait
sbb
leave
out
sub
mov
test
and
les
jmp
ss
lahf
je
lods
add
in
push
jno
push
das
sub
cwtl
cld
add
pop
popa
xor
xor
sbb
not
mov
cmp
pop
sti
xor
cmc
mov
mov
ret
mov
sti
loopne
sbb
enter
mov
mov
push
andb
pop
mov
cs
jbe
adc
jnp
in
pop
pop
fsubrp
nop
sbb
jl
xlat
xor
int
popf
rcll
lods
jmp
inc
lret
imul
jo
leave
jmp
xchg
or
movl
test
and
cld
lahf
aam
arpl
jecxz
int3
jg
push
aaa
addr16
cmpsb
or
cs
inc
rorl
fmul
push
and
sahf
aam
sar
xchg
icebp
fldt
xchg
test
std
call
dec
adc
stos
xchg
imul
mov
or
mov
push
call
adc
in
jmp
stc
leave
clc
in
lock
push
lcall
imul
mov
inc
fsub
popf
out
pop
push
movsb
rcl
lods
mov
arpl
mov
sub
and
sub
inc
add
mov
jbe
fcmovu
and
out
and
adc
movsl
push
inc
cwtl
fmuls
and
shll
or
fisubl
std
popw
adc
arpl
cmp
roll
data16
push
dec
idivl
mov
inc
loop
xor
jno
sub
pop
sbb
cmp
mov
adc
aaa
mov
fiaddl
arpl
cld
or
aas
xchg
pop
test
sub
jg
pop
pop
push
mov
bound
insl
sarl
les
jge
adc
mov
cmpsl
pop
jbe
jmp
cmpsb
xor
ret
cmp
pop
mov
daa
add
jbe
jbe
mov
lock
or
or
insl
xor
sbb
movsb
rorb
xlat
aad
or
stos
inc
push
adc
adc
mov
cltd
xchg
rclb
push
das
pop
lods
cmp
mov
leave
dec
push
push
cmp
cmp
mov
push
leave
fs
shlb
sahf
mov
lea
pop
dec
jo
push
pushf
mov
cs
or
dec
adcb
jns
ret
dec
and
sbb
add
adcl
ds
fisttpl
dec
jmp
jle
push
mov
inc
movsb
cs
out
cwtl
mov
push
fsts
xor
push
pop
mov
push
xor
out
inc
mov
sub
daa
stc
sahf
xchg
mov
aas
mov
adc
adcb
mov
mov
leave
enter
inc
sub
xchg
out
mov
in
mov
mov
mov
push
cmp
or
and
fbstp
jmp
mov
dec
pop
and
adc
push
out
adc
mov
mov
aam
sti
inc
lods
mov
xor
lret
dec
lret
cmp
and
mov
std
aas
lcall
scas
inc
xchg
ja
and
or
push
mov
push
push
mov
outsl
ja
daa
std
scas
aaa
stc
lods
cli
das
into
sub
out
xchg
and
sahf
mov
sbb
fistpll
xlat
enter
daa
add
sbb
bound
mov
cmp
daa
test
lods
mov
sub
and
shll
sub
aas
adc
mov
popa
mov
cmp
mov
push
add
push
pmuludq
lods
sbb
subb
nop
dec
sbb
and
fistps
or
push
orb
je
movsl
aad
shr
mov
mulb
leave
ret
cmc
adc
adc
pop
push
fimull
pop
ja
lahf
mov
int3
push
ja
dec
test
adc
pop
jae
cmpsl
cmpsb
xchg
enter
jnp
movsb
test
add
pusha
sti
repz
xchg
fs
leave
loopne
push
lods
xchg
mov
xchg
test
xchg
iret
ds
adc
push
pop
nop
ret
jl
loopne
fwait
mov
mov
lods
push
pop
sbb
mov
xchg
stos
adcl
mov
testb
mov
push
mov
fwait
sti
pushf
or
cmp
add
mov
out
loop
shrl
adc
xlat
mov
jbe
insl
mov
or
dec
lea
pop
xchg
fstpl
test
jge
mov
xchg
dec
or
testb
xchg
test
push
xchg
shll
push
push
pop
mov
cmp
setg
cs
dec
sbbl
xor
mov
clc
pop
mov
mov
push
add
push
cmp
sti
xchg
and
inc
add
stos
mov
cmp
in
push
out
test
adcl
loopne
insb
mov
and
push
in
sarb
test
inc
adc
imul
add
lret
icebp
ret
clc
loopne
repz
mov
cwtl
sub
sahf
or
push
add
xor
xorl
dec
mov
adc
fwait
add
or
mov
aas
sub
cmp
aaa
mov
cmp
and
cmp
xlat
in
and
in
jno
push
arpl
push
loope
cmp
andb
enter
xor
sbb
mov
ja
sahf
cwtl
mov
xchg
xchg
sub
lods
mov
adc
jno
popf
jns
push
ret
movsl
adc
fildl
mov
or
lods
cld
dec
jp
add
add
lock
jecxz
mov
xor
mov
pop
cltd
jb
andb
movsl
test
adc
popa
xor
in
xor
in
ret
rcll
scas
add
popa
xchg
imul
test
pop
jo
or
cmpsb
mov
loope
sbb
jecxz
jns
push
mov
scas
pop
faddl
iret
cmpb
rorb
fcoml
sub
inc
cmp
add
ljmp
bound
and
and
xchg
movups
ja
aas
add
sub
mov
fisttps
test
ss
mov
dec
mov
sub
sub
sub
ret
mov
gs
stos
inc
insl
sbb
sub
repnz
ljmp
lods
jno
jmp
add
push
xor
or
inc
dec
sbb
adc
ret
fcomps
adc
fwait
in
sbb
add
or
shl
shl
xchg
mov
pop
aaa
inc
xor
subl
xchg
xchg
cmpsb
lods
out
arpl
add
testl
arpl
dec
roll
dec
xchg
dec
mov
xor
hlt
mov
cmp
xchg
icebp
jo
inc
jl
pusha
popf
pop
rol
sub
jo
loopne
dec
pop
dec
shlb
mov
sar
lret
lret
lea
pop
fisubs
mov
inc
cmp
sahf
push
xchg
sbb
loop
enter
mov
xor
pop
sub
push
push
xlat
jecxz
into
mov
push
insl
dec
push
cs
mov
mov
pop
sbb
fnstcw
xchg
sbb
adcb
test
test
inc
ljmp
cmpsl
lods
or
in
std
cmp
adc
les
adc
jp
sbbl
pop
fildll
shr
xor
mov
mov
mov
sarb
pop
sbb
mov
sahf
sbb
lods
lock
dec
xor
rolb
jne
add
lret
adc
cmp
call
or
test
push
push
mov
cmp
add
dec
test
je
lods
push
adc
xor
inc
or
shrl
xor
mov
lock
cmp
nop
pop
cmp
lret
fcomp
ror
in
aas
data16
inc
ja
cmpsb
shl
lods
cmp
sbb
mov
pop
int3
or
pop
iret
jo
xlat
xchg
jmp
int
sub
insb
cmp
xor
pop
cltd
imul
stos
pop
xchg
rcrb
out
lock
push
out
push
out
test
cmpsb
jmp
xor
add
lods
insl
xor
arpl
and
cli
out
pop
and
out
repz
pop
insl
pop
sbb
jl
pop
xor
inc
in
mov
enter
ret
cmp
pop
ss
pop
in
fisubrs
mov
fldt
lret
add
jecxz
mov
jp
lea
xlat
sbb
mov
movsl
imul
in
dec
icebp
jg
pop
mov
cmp
scas
lcall
push
ja
push
sbb
jmp
subb
popa
push
int3
ja
xor
ss
inc
leave
adcb
push
les
dec
sub
sbbb
out
adc
cmc
mul
xchg
imul
and
or
in
lcall
jns
ftst
daa
xchg
jns
push
je
and
xchg
fimuls
add
rolb
cmp
dec
mov
mov
push
imul
aas
je
insb
adc
push
nop
pop
icebp
enter
xchg
rorl
insb
jno
dec
lret
fsubrs
add
in
loopne
fisubs
shll
mov
jnp
daa
adc
js
repz
or
dec
pop
sarl
mov
out
fistpl
bound
pop
js
mov
mov
sbb
nopl
js
push
mov
in
pop
lods
push
in
adc
pop
inc
in
popf
outsb
lcall
sub
call
push
sub
das
xchg
fs
mov
xchg
cmp
xchg
jnp
fisubrs
dec
imul
into
mov
pop
lods
pop
in
jg
stos
mov
pusha
xor
ljmp
jo
imul
fstpl
inc
ljmp
jo
jp
push
push
jge
xchg
je
and
xor
or
sub
lahf
dec
pop
push
imul
testb
add
jbe
sahf
xor
ret
mov
cwtl
jge
fs
jns
aaa
js
mov
add
nop
out
dec
jmp
push
aad
xor
pop
js
ljmp
and
ret
ficoml
pop
or
jp
out
or
xor
ja
fdivl
and
out
test
andl
pusha
or
pop
cmp
imul
cwtl
je
mov
xor
notb
add
xchg
sahf
cwtl
fldt
push
mov
cmpsl
sbb
mov
out
xchg
mov
mov
dec
inc
inc
mov
dec
xor
inc
out
pushf
add
dec
gs
push
cmp
jp
in
jae
aam
rcrl
rcrb
ficomps
mov
xchg
xchg
mov
mov
mov
cld
fdivrs
dec
dec
fwait
in
dec
fwait
cmp
ljmp
fdivp
mov
mov
shrb
sbb
jle
jo
pop
testl
xchg
push
mov
or
xlat
mov
mov
jge
stc
push
fdivr
add
mov
xor
pop
mov
icebp
jecxz
mov
jb
lods
insb
and
push
sub
roll
cmp
bound
insb
mov
mov
aaa
repnz
mov
data16
jae
cltd
jle
xor
add
jae
mov
jg
bound
or
sbb
iret
jmp
hlt
aas
push
das
jmp
sbb
fs
pushf
adc
push
nop
frstor
test
push
sbb
xchg
push
inc
add
push
dec
adc
lods
das
push
pop
lcall
dec
cmp
fwait
nop
in
daa
mov
adc
in
dec
fnstsw
and
dec
sarb
insl
sub
mov
push
mov
or
pop
fcomip
xchg
test
adc
dec
ljmp
xchg
pushf
dec
lods
and
add
xor
sub
dec
in
cmc
jmp
push
repz
cmpl
mov
push
mov
and
rol
imul
adc
das
rorl
cltd
cmpsl
fs
lret
jbe
daa
ret
rcll
loope
push
sub
inc
dec
iret
jl
lds
inc
mov
mov
cmpsl
fdivs
cltd
cli
rolb
adc
jle
sbb
xchg
sbb
push
xlat
cmp
cmc
mov
rcl
xor
pop
pop
mov
ret
mov
ret
sbb
mov
or
xchg
scas
mov
nop
adc
jg
ret
adc
into
or
push
bt
and
int3
mov
lahf
and
pushf
iret
mov
pushf
and
lods
xchg
call
cmp
jo
and
jae
ds
push
sub
imul
movsb
inc
andl
sub
ss
mov
decb
sbb
roll
inc
xor
xlat
adcb
push
scas
fdivrl
divb
aad
inc
pop
jno
fistps
addb
push
pop
es
ret
mov
and
jge
sub
aad
shl
xchg
lods
aas
inc
jo
push
add
addr16
fucomip
fsubs
cli
call
xor
outsl
add
out
faddl
ds
pop
mov
std
scas
out
mov
movb
xchg
mov
xorb
pop
jp
shl
andb
xchg
fistpl
jp
sub
sbbl
push
scas
xlat
pop
cmp
and
push
mov
xor
rcrl
lahf
push
mov
stc
lds
inc
stos
jg
inc
addr16
xor
mov
sub
cli
pop
lods
lret
arpl
je
push
jp
mov
movsl
adc
cmp
xchg
rclb
jne
pop
add
fwait
pop
or
lcall
cwtl
imul
lcall
fistl
push
mov
in
cmp
cmpl
sbb
sahf
cli
loope
jg
xor
mov
fbstp
test
mov
movsb
enter
aad
lahf
xor
int3
xor
add
decl
sub
inc
dec
in
add
addl
stc
lahf
cmp
jp
ds
pop
push
pushf
je
add
je
lret
ficompl
jle
mov
in
lock
movsl
sub
popl
mov
dec
aam
ret
mov
dec
pop
aam
hlt
dec
pop
loope
into
fwait
enter
movsb
mov
mov
pop
push
and
dec
mov
stos
mov
stos
mov
aam
lahf
loop
ret
dec
push
clc
mov
dec
stos
sub
pop
nop
stc
jge
testb
aaa
es
xchg
pop
and
sub
xchg
das
in
movb
xchg
mov
pop
fimuls
sub
cmp
pushl
call
and
call
sar
push
jmp
inc
js
outsb
imul
sarb
test
stos
mov
sub
push
loop
sub
inc
andb
adc
xchg
xchg
fwait
stc
xchg
repnz
leave
and
xor
pop
xor
mov
jne
sti
lds
lods
ret
lcall
repz
push
test
inc
jge
insb
or
xchg
push
cmpsl
imul
sbb
dec
sub
cmc
sbb
stos
inc
jl
fcoms
lods
movsl
sarl
jae
loope
sub
sbb
fsubl
cmp
jg
mov
rcrb
test
fiadds
xor
sub
adc
loopne
and
fistps
in
push
xor
jne
cmpsl
jle
sub
cmc
jle
mov
push
pop
test
pop
frstor
push
lcall
scas
pop
jae
fsub
jo
jle
outsb
mov
das
scas
pop
ss
inc
sub
addr16
push
sbb
popf
mov
cmp
pop
xchg
movsb
mov
dec
and
and
stos
cltd
mov
cmp
stc
mov
rorl
cmpsl
xchg
cmp
jmp
shrb
addb
mov
in
dec
test
sub
mov
cmpb
jmp
xchg
or
xchg
call
dec
jge
in
sbb
add
in
cli
sbb
pop
dec
inc
imul
arpl
stc
ret
decl
mov
shll
and
pop
pop
dec
push
pop
mov
push
cli
jns
call
enter
imul
adcl
fs
sub
stos
cmp
mov
push
pop
int3
add
pushl
mov
cmpl
jge
dec
cmpsl
push
ret
inc
test
mov
xor
jl,pn
push
xchg
mov
or
or
pop
push
imul
xchg
xcrypt-cbc
cmpsl
xchg
sbb
mov
dec
je
and
cmp
jnp
push
dec
pop
mov
mov
jmp
xchg
testl
push
fmull
mov
mov
push
adc
lcall
sahf
jge
adcb
or
out
jg
imull
stc
push
or
and
ja
jg
aaa
loope
pop
mov
mov
adc
mov
je
mov
stc
in
pop
add
std
xchg
xchg
push
je
sahf
mov
bound
aad
pushf
rsqrtps
insl
pop
insb
xchg
fsubrs
inc
ret
loop
int3
ljmp
xchg
gs
xchg
pop
sub
subb
push
add
loopne
scas
mov
xchg
leave
add
decb
mov
and
jbe
shlb
push
fdiv
addl
shll
mov
inc
incl
insb
subb
loope
aad
push
sbb
xchg
mov
xchg
pop
jg
jae
cmp
mov
fst
xchg
mov
jae
add
hlt
inc
xor
shll
mov
xchg
cmp
and
push
rcll
mov
bound
jg
jbe
sub
test
and
jns
mov
shll
mov
push
out
xchg
mov
dec
and
out
push
call
sbb
call
mov
int
push
sarb
shlb
mov
mov
out
push
add
pop
pop
jle
icebp
or
jmp
sub
inc
inc
lcall
data16
in
mov
mov
fcomps
lcall
adc
sub
fsubrl
ss
xchg
jno
push
insl
pop
test
mov
ja
pushf
push
jne
xorl
repz
mov
adc
jg
in
pusha
out
test
pop
movsl
dec
rcll
mov
lcall
mov
sub
fisttpll
enter
inc
pop
sbb
imul
push
cmp
insl
test
and
lods
in
test
push
pusha
in
sbb
cltd
test
mov
add
lds
add
push
rcrb
cmpsb
or
jmp
mov
jp
fimull
das
xor
xor
or
les
pop
out
adc
ds
loopnew
xorl
mov
add
aam
fs
pop
add
ja
cmovb
lret
mov
push
sbb
test
xchg
jae
mov
jne
or
jle
and
fs
sbb
mov
sub
loope
or
out
mov
test
push
xchg
lahf
xor
xchg
mov
sbb
cld
mov
ss
xchg
clc
add
int
icebp
andb
mov
add
aas
icebp
call
jnp
add
testb
add
push
fldenv
rolb
adc
lea
xor
or
scas
mov
imul
loope
and
add
rorl
mov
fcmovb
and
mov
and
das
pop
cmp
inc
sbb
xlat
and
add
cmp
jno
pushf
push
sbb
cmp
es
mov
and
sbb
xor
xorl
imul
xor
fcompl
cmp
test
sub
mov
leave
mov
into
mov
je
mov
roll
xchg
lods
jmp
xor
pushf
push
addr16
cmp
aam
dec
add
andl
xchg
popa
inc
rclb
jne
shll
xorl
test
lcall
clc
mov
cld
mov
or
push
and
cmp
cs
lahf
jno
xor
es
jns
ror
cmp
pop
nop
inc
je
sub
dec
jo
cwtl
int3
sub
mov
xchg
jl
or
stos
lcall
jecxz
nop
push
ret
movsl
pop
pop
daa
inc
sti
push
sbb
fldt
inc
pop
mov
dec
mov
add
jl
fstps
jae
movsb
mov
mov
dec
mov
aam
test
and
push
lret
mov
push
pop
cltd
dec
bnd
inc
sarb
incl
jo
mov
stos
add
out
adc
leave
leave
cmp
arpl
hlt
push
and
lods
pop
jne
cltd
sti
gs
cmp
or
adc
sbbb
in
add
std
arpl
iret
mov
dec
test
out
outsb
mov
pop
xor
lcall
or
movsl
adc
or
stc
cwtl
scas
lcall
pop
stos
jecxz
pushf
mov
cmp
hlt
in
dec
shr
inc
jo
into
xor
lcall
aam
fwait
nop
push
cmpsb
mov
fldcw
ss
lods
and
xchg
lahf
loop
idivb
pop
cmpsl
mov
jbe
mov
in
loopnew
and
dec
dec
jne
mov
lds
jmp
das
mov
pop
notl
mov
adcb
jbe
push
push
dec
daa
clc
insb
mov
xor
xchg
mov
in
sbb
shl
push
jecxz
addl
ljmp
sbb
mov
push
arpl
xor
nop
test
int
xor
cmp
cmp
cwtl
xlat
out
xacquire
or
enter
sti
adc
mov
pop
dec
mov
scas
adc
test
inc
cli
sbb
lret
cmp
dec
in
cltd
filds
and
cmc
sarl
jmp
jo
add
cld
pop
push
fnstcw
pushf
lock
andb
inc
push
push
push
stos
push
xchg
cli
or
pop
cld
push
sub
mov
sbb
dec
cli
or
mov
mov
int
xchg
lea
jg
add
and
insb
arpl
dec
scas
adc
mov
inc
nop
aad
pop
xchg
sub
popf
outsl
xchg
jecxz
pop
scas
dec
adc
stos
fwait
cmc
mov
arpl
jle
xor
dec
sub
mov
nop
rcl
mull
inc
pop
filds
mov
inc
out
pop
fcmovnu
scas
bound
test
stc
jnp
pop
jb
fcoms
xchg
and
dec
and
std
scas
lahf
and
cmpsl
lahf
in
in
mov
bound
rolb
into
loope
icebp
xor
cmp
xchg
jae
mov
sub
clc
fisttpl
clc
cmpsl
sarb
xor
and
rorl
enter
lds
dec
and
int3
dec
inc
call
sti
sbb
mov
in
xchg
repz
xor
mov
mov
dec
jge
push
jns
stos
adcb
js
mov
test
or
sbb
jge
mov
mov
cmc
mov
clc
negb
out
insl
cmp
add
xchg
push
xchg
or
fs
xchg
movsb
lcall
fucomp
jge
sub
xor
adcb
sahf
pop
push
mov
out
or
fsub
xchg
dec
decb
and
rorb
mov
addb
mov
jne
mov
mov
mov
ret
test
lret
mov
aas
cwtl
jbe
not
pop
test
xorl
mov
inc
xor
xchg
xchg
inc
adc
xchg
andb
xlat
movsl
jmp
lret
dec
add
cmp
test
cmp
jp
pop
inc
push
pop
mov
sti
imul
pop
in
in
xor
or
jns
inc
dec
mov
loop
sbbb
inc
fcomi
sbb
jle
dec
inc
leave
shl
and
jg
sti
cld
jl
test
shrb
sbb
cmp
dec
push
lret
inc
sub
in
shl
ljmp
pop
or
inc
mov
call
das
push
inc
aad
mov
mov
or
push
mov
sub
xor
cli
rolb
adc
addb
mov
mov
lods
ret
inc
movsb
xor
xlat
ja
add
adc
pop
mov
sbb
add
and
xchg
cmp
xchg
adc
mov
cmp
movsb
shrb
or
inc
repz
jbe
in
lahf
popf
pop
nop
xor
cmp
lret
push
mov
sbbb
pop
popa
or
lods
lds
dec
sub
xor
cmp
lahf
lods
dec
sbb
mov
loope,pn
jno
and
mov
imul
mov
in
mov
test
cli
int3
pop
call
dec
ret
mov
cmp
push
pop
nop
loopne
jmp
or
mov
lock
or
or
inc
xchg
mov
dec
out
mov
lods
test
icebp
xchg
ljmp
notl
jecxz
fdivs
lahf
cmp
addr16
push
aam
std
fwait
jmp
mov
dec
inc
ljmp
xorb
or
test
pop
xor
pop
inc
adc
sub
adc
ljmp
dec
into
mov
mov
or
out
out
loopne
dec
xor
pop
fidivs
mov
imul
or
cmp
pushf
mov
pushf
fisttpl
loope
orl
mov
fimull
shll
repz
inc
add
int3
das
adc
xor
xchg
mov
mov
cmp
out
jge
out
cmpsb
popf
inc
lods
dec
fldcw
daa
add
out
cltd
inc
cmp
mov
neg
cs
fwait
daa
insb
dec
lds
shrb
cmpsb
mov
movsl
adc
std
and
jo
jl
adc
and
mov
push
push
or
sbb
pop
sbb
mov
scas
and
loopne
add
fstpt
dec
fs
out
test
and
mov
jo
scas
xlat
cmp
mov
daa
into
or
rolb
fisubs
and
jge
pop
scas
cmpb
pop
or
imul
mov
mov
mov
mov
jp
xchg
out
or
lea
lcall
cs
stos
addb
mov
xchg
out
add
jbe
add
xor
mov
mov
dec
and
lods
dec
mov
aam
pop
loop
sbb
and
adc
inc
lock
lods
popf
iret
clc
ret
dec
or
cld
push
pop
movsb
push
bndldx
pusha
sub
sub
jne
notl
push
inc
push
ret
enter
and
xchg
pop
adc
and
dec
and
sub
add
sub
or
lcall
jno
xchg
repnz
movsl
push
clc
lret
stos
or
sbb
cmpb
push
and
adc
mov
popf
data16
jo
dec
fnsave
dec
es
xor
inc
push
push
test
pop
xlat
scas
pop
jmp
movsb
pop
fildl
gs
jae
fadd
adc
sti
out
fwait
xor
insl
rcr
aas
xor
mov
ret
pop
pop
adc
test
fidivl
js
scas
mov
pop
mov
hlt
aaa
xor
clc
dec
xchg
xchg
ljmp
mov
pop
xlat
and
iret
dec
mov
rcll
pusha
cs
mov
fwait
shrb
cmp
mov
or
fsubrl
or
enter
add
add
lods
add
xlat
pop
outsb
xchg
addl
lahf
cmp
dec
xor
mov
pop
leave
cmpsb
dec
mov
push
shrl
push
pusha
adc
fisttps
mov
or
fcoml
scas
mov
das
das
ds
mov
cli
fistl
movsb
mov
cmp
push
pop
lcall
jmp
dec
outsb
ror
mov
out
inc
cmpsl
scas
mov
div
scas
in
mov
leave
fs
mov
sub
out
js
cmc
ds
je
das
stos
dec
rcrb
pop
dec
sbb
lret
push
mov
pop
push
dec
leave
testb
ja
cli
lcall
push
shl
mov
xchg
xchg
xor
stc
and
iret
lahf
in
mulb
mov
lods
xchg
cmpsb
je
popf
inc
adc
push
iret
test
jo
xor
cld
shrb
sbb
pop
in
xor
test
mov
and
adc
add
mov
mov
enter
cmp
pusha
repnz
pop
push
mov
iret
add
add
call
xor
mov
cmpsb
mulb
hlt
jne
test
xor
push
es
push
cmpsb
sbb
int
and
sti
mov
loop
cmp
xor
pop
call
lock
sub
call
cltd
negl
lret
sub
ja
ss
sbb
inc
testl
cmp
sub
shrl
pop
inc
ret
outsl
cmp
stc
and
movsl
dec
sub
out
sub
fdivr
pusha
mov
movsb
sbb
sbb
pop
out
aas
idiv
mov
ljmp
jo
mov
shlb
mov
or
mov
add
pop
mov
fisubs
push
out
repnz
inc
jae
mov
int3
cmp
xchg
sub
testl
adcl
xchg
sub
push
jbe
in
repnz
jo
mov
add
mov
fidivl
mov
adc
sub
ds
daa
push
test
and
das
add
jne
jle
jecxz
pushf
dec
xchg
jg
and
mov
mov
dec
mov
inc
cmp
icebp
or
or
jo
jecxz
dec
mov
cmpsl
call
out
dec
mov
mov
lret
sub
mov
hlt
lea
rcrw
lcall
fdivrl
call
or
push
add
ds
xchg
in
pop
xor
xor
jo
jecxz
sbb
leave
lock
sub
fsubrl
push
movsl
and
mov
stos
jbe
cmp
pop
lods
fistps
dec
jno
mov
or
push
ja
jbe
dec
jbe
mov
add
iret
push
mov
jns
pop
ds
repnz
rep
mov
ljmp
leave
jg
mov
std
pop
mov
pop
jecxz
or
cmp
mov
popa
pushf
mov
std
mov
in
mov
fisttpll
pop
mov
setno
xorl
pop
popf
sbb
xor
xchg
dec
insl
fisubl
xor
push
xorl
scas
andl
out
mov
jl
mov
sub
ret
test
or
insl
sub
mov
pop
push
cmpsl
gs
inc
int
sbb
sarl
aam
jmp
xor
and
ja
or
mov
stc
or
int3
cwtl
or
jno
inc
push
call
push
in
test
push
and
in
aas
cmc
lret
cmp
mov
sub
sbb
dec
insb
mov
sub
andb
subb
gs
xchg
mov
jno
sbbb
inc
mov
sti
insb
adc
xchg
in
jne
divb
mov
ret
xor
sbb
in
jne
movsl
imul
mov
movsl
mov
sti
fidivl
aas
xor
and
push
xchg
push
stos
stos
sub
jecxz
into
aad
jo
mov
sub
lret
push
insb
outsl
jnp
mov
sar
jmp
mov
aas
fs
repnz
ja
or
inc
in
in
jmp
insb
jl
push
xchg
rclb
repnz
mov
sub
cld
pop
mov
std
jae
outsb
ss
inc
push
pop
in
das
insb
add
push
inc
cmc
mov
mov
jge
addb
dec
jns
test
jne
pop
int3
push
mov
loopne
sbb
fcoms
movsl
jno
iret
mov
lahf
xchg
rclb
cmp
and
es
add
out
nop
sti
mov
addr16
in
mov
loopne
jb
mov
sub
lcall
push
movsl
cmp
lret
mov
inc
lods
pop
js
jno
cmpsl
mov
add
lret
sub
mov
and
je
xor
pop
and
pop
ficoms
ja
push
adc
fimuls
inc
ljmp
xchg
inc
xor
sub
adc
mov
movsl
orl
pop
mov
sar
out
fwait
adc
mov
rclb
and
dec
mov
mov
add
mov
or
hlt
dec
and
cmc
int3
mov
aas
rcrb
add
call
enter
outsl
xchg
dec
xor
xchg
adc
push
in
mov
mov
inc
or
pop
lea
jge
jle
pop
cs
mov
int3
jmp
jg
inc
xor
rcrl
ja
ss
mov
clc
lods
ss
fmul
sbb
push
cmpsb
in
aad
or
dec
flds
data16
mov
push
sub
jmp
int3
dec
addb
loop
add
xor
xor
std
arpl
adc
xchg
jae
and
push
push
add
jl
ja
fsts
pop
pop
mov
add
ret
or
pop
adc
icebp
daa
cltd
cli
and
xor
leave
sub
push
stos
jae
lret
and
fldcw
mov
pop
push
insl
inc
xchg
xchg
jns
mov
lcall
mov
mov
xchg
pop
cld
rcll
inc
fs
lcall
xchg
and
ds
hlt
jns
pop
push
fistl
push
jecxz
cmp
mov
fwait
push
adc
inc
dec
stos
cmpsl
and
incb
mov
jno
dec
sarb
or
or
adc
lock
xlat
push
jo
sbb
add
sub
xor
enter
bnd
fidivrs
in
push
sub
addb
sbb
pop
cwtl
rolb
inc
xchg
js
lcall
sti
loope
outsl
in
inc
or
sub
test
das
ret
mov
pop
mov
inc
sub
dec
inc
mov
inc
scas
leave
cmp
js
dec
ljmp
xchg
push
test
in
popf
inc
aad
cmp
xor
cmpsl
sbb
push
mov
add
and
int3
jp
loopne
xchg
icebp
mov
por
mov
mov
orl
jmp
jecxz
xchg
add
mov
mov
fsubs
mov
push
idivb
dec
mov
fisttpl
je
add
or
mov
or
ret
sub
inc
pop
pop
mov
flds
mov
cmpsb
mov
and
mov
sub
movsb
ficoml
sbb
mov
loope
sbb
push
xchg
push
out
push
xor
rcl
aas
and
adc
and
in
adc
mov
push
mov
or
sarb
xchg
sarb
cmp
mov
inc
inc
add
xor
adc
scas
cli
lret
pop
ss
xlat
dec
in
inc
sub
or
lret
es
push
roll
ficompl
fsubrl
cmpsb
xchg
cli
test
je
fs
filds
push
in
stc
sarl
leave
int3
sub
inc
cmp
fwait
pusha
xlat
movb
cmp
or
subl
xlat
in
jp
mov
cmp
lock
imulb
jmp
jmp
mov
ret
enter
idivl
lret
adc
popa
jbe
sbb
int3
pop
or
iret
push
mov
out
push
or
cmc
push
test
fimuls
jb
push
inc
sbb
and
cltd
enter
adc
mov
adc
jno
jmp
in
scas
stos
daa
lcall
mov
mov
into
or
jmp
vpcmpeqw
adc
lods
xchg
enter
xchg
out
ljmp
sbb
lds
aam
fwait
jbe
mov
es
bound
shll
mov
sub
leave
scas
jmp
dec
es
cmp
mov
push
popa
push
aaa
mov
aam
std
cmc
sub
sub
pop
and
cwtl
inc
or
cmp
inc
call
xor
imul
mov
ss
rolb
aas
in
push
hlt
mov
jo
or
out
mov
cmc
mov
sub
jo
xor
imul
insl
data16
fisubrl
add
cmpsl
sti
and
out
popl
mov
xor
mov
inc
push
sbb
ljmp
inc
fs
sbb
mov
ljmp
mov
loop
push
mov
cltd
inc
hlt
insb
test
dec
mov
or
inc
jns
out
and
in
andl
ret
ds
mov
mov
imul
sbb
xchg
push
orl
jge
dec
ds
sbb
enter
fs
xchg
sarl
inc
inc
fcomi
outsl
das
sub
loope
shrl
xor
imul
mov
cs
mov
sub
cmc
repz
mov
pusha
cs
jnp
ret
test
outsl
or
push
add
jle
in
in
cmp
fs
add
mov
in
xchg
cmp
cmpsb
out
pop
jnp
mov
inc
xchg
in
jecxz
adc
add
cmp
adcl
aam
test
cli
fwait
cltd
pop
xchg
loop
mov
data16
sub
outsl
inc
sbb
out
push
es
rcll
stc
mov
inc
adc
sub
frstpm(287
clc
jnp
mov
int
sub
sub
xor
xchg
xchg
jmp
xchg
pop
icebp
jg
pop
nop
aam
cmp
lods
cmp
outsb
leave
lds
loop
jnp
and
or
and
test
cld
dec
jno
lods
insb
rclb
dec
xchg
test
insb
pop
leave
loop
aad
fisttpl
xchg
inc
jb
out
adc
ljmp
arpl
imul
lret
add
xchg
cmpsb
jnp
insb
stos
inc
dec
jmp
mov
mov
aas
aam
pop
fsts
dec
cs
xchg
cld
scas
dec
xorb
and
jne
push
jae
xchg
mov
mov
insb
add
pop
in
loop
add
les
mov
out
sub
add
add
popf
lcall
sbb
test
cmp
xchg
sbb
scas
mov
ds
scas
rolb
in
sarl
cs
fisubrs
jns
sub
inc
or
add
and
and
testl
int
adc
push
sbb
js
sbb
ss
nop
nop
movsl
dec
fcom
js
test
jne
lds
dec
add
or
xchg
or
mov
subps
adc
dec
xor
mov
in
pop
inc
leave
jle
xchg
sbb
cmp
pop
or
push
mov
push
push
ljmp
imul
cmp
outsl
cld
push
dec
ja
popa
stos
push
push
adc
mov
cs
test
aad
mov
dec
dec
mov
dec
popa
lods
popf
fidivs
push
inc
mov
fdivrs
xchg
mov
in
int
addb
lcall
nop
dec
loop
shll
sti
or
les
test
mov
add
fadd
xchg
push
xor
mov
jecxz
test
jb
clc
outsl
lahf
ffreep
add
ss
dec
out
adc
adc
or
inc
mov
sbb
push
dec
outsl
adc
and
imul
sub
mov
loope
adc
insl
pop
push
stos
add
stos
ret
sub
subl
jae
stc
cmpsb
xor
jb
clc
push
aad
xor
into
out
sbb
ror
pop
scas
scas
pop
sub
xchg
mov
xor
mov
rcll
mov
add
push
idiv
push
add
push
cmc
adc
sti
push
push
fists
je
cmp
pandn
adc
inc
test
les
sub
out
iret
inc
pop
fsubrs
adc
inc
cltd
shll
test
mov
shlb
cltd
std
jno
mov
movd
push
rcl
pop
inc
sub
je
test
pop
in
xchg
ss
mov
add
and
in
sub
inc
test
lret
orl
xchg
rcr
sub
dec
addl
aas
xchg
enter
popf
shll
imulb
shll
pop
push
adc
mov
push
cmp
push
jl
imul
adc
mov
dec
in
or
cmp
mov
mov
dec
mov
sarb
aaa
divl
push
jecxz
ja
or
shlb
push
cmp
sbb
loopne
or
pushf
cmpsb
loop
enter
or
and
mov
sub
mov
xchg
ret
pusha
mov
clc
sbb
in
test
je
in
push
cmp
call
mov
cwtl
push
mov
xor
sub
stc
dec
sbb
mov
xchg
cmovnp
push
jnp
sbb
out
xchg
cmp
sub
out
mov
cmp
jp
das
enter
cmc
cmpsl
jnp
rolb
and
inc
jns
adc
mov
shlb
or
dec
push
xor
dec
cmc
xchg
aas
jle
nop
add
push
or
fucomp
int
mov
cltd
pop
push
outsb
jge
push
cwtl
push
nop
out
xor
mov
sbbb
adc
stos
in
and
adc
ret
ret
inc
fcomp
pop
sbb
jnp
testl
add
pushf
outsb
aad
pushf
mov
rcrb
aad
mov
xchg
out
xchg
jne
repz
repnz
dec
jp
add
xlat
xchg
xchg
dec
loopne
jecxz
out
bndstx
push
add
push
es
ja
push
cmp
jle
mov
or
xor
mov
je
add
sbb
pop
mov
jo
adc
dec
scas
jns
hlt
push
xchg
jl
mov
je
insb
popf
test
inc
fucomi
mov
stos
nop
orb
or
inc
inc
sbb
inc
addr16
jle
push
in
arpl
sbbb
and
mov
xchg
xchg
jbe
inc
ljmp
dec
inc
jne
clc
mov
cmp
pushf
pop
xchg
xchg
cmc
loope
adc
lcall
pushf
inc
fisttpl
repz
pop
leave
add
jmp
or
stos
inc
or
push
xchg
push
jl
fistl
adc
push
fists
push
arpl
jp
jp
testl
xorl
pop
cmpsb
aas
loopne
fmull
adc
ja
arpl
out
inc
add
sbbb
dec
pop
into
adcb
or
adc
inc
sub
mov
ljmp
movsb
push
push
jne
call
pop
jns
cmp
cwtl
push
in
hlt
mov
ds
jmp
jmp
and
sub
adc
add
dec
adc
ljmp
jne
push
imul
or
xchg
lods
pop
mov
ret
icebp
psrlq
sbb
push
int
mov
fs
pop
push
ficoml
push
test
bsr
aas
loop
sbb
jge
imul
testl
fisttps
push
pop
jns
cwtl
mov
and
std
add
js
pop
loop
jb
scas
loopne
in
rorl
cmp
push
xor
xor
xor
es
sbb
cmp
xlat
mov
addl
xor
into
adc
enter
rclb
insb
lods
jge
lods
daa
pop
mov
mov
test
daa
ret
stc
out
mov
rorl
imul
ja
ret
test
mov
mov
mov
std
js
mov
push
xchg
lcall
movsl
stos
movsl
push
cmp
push
add
mov
mov
mov
push
adc
cmp
or
daa
leave
mov
fdivrs
dec
add
outsl
xchg
dec
gs
xchg
push
pop
testl
xchg
rorl
pop
inc
or
repz
mov
push
or
rorl
test
adc
cwtl
inc
jno
test
stc
xchg
push
push
lds
decb
lods
rcr
jbe
xlat
rcrb
pop
cmpb
xlat
sbb
push
or
loope
pop
daa
mov
fimull
inc
and
fs
cli
pop
pop
mov
mov
pop
nop
popf
jns
push
loopne
xchg
mov
mov
or
lcall
sbb
fisubrs
cmp
mov
mov
xchg
cmp
sbb
or
fcomp
jne
fcmovbe
stos
sub
push
in
mov
adc
mov
cmp
stos
leave
cmp
xchg
add
inc
mov
ds
push
mov
push
adc
test
pop
jl
out
nop
mull
add
repnz
mov
xor
sbb
imul
mov
xorl
leave
or
bound
sub
andb
sub
mov
mov
sbb
mov
out
lret
fiadds
js
add
popa
sub
and
sub
adc
cmp
dec
and
fdivr
hlt
xchg
sub
push
xchg
loope
imul
pop
inc
out
aas
and
mov
pop
ja
ljmp
xlat
inc
outsl
dec
jle
lds
xor
xor
shl
cmpsl
adcl
xor
dec
xchg
shl
inc
add
movsb
mov
rcl
lock
fwait
xor
cld
or
cwtl
push
xchg
xor
sbb
popa
nop
add
rorl
mov
inc
dec
pop
push
pop
scas
loopne
test
stc
dec
or
repz
sbb
jo
clc
pop
push
fnstcw
cmc
aam
xchg
sub
repz
popa
enter
imul
mov
pop
clc
mov
xorb
cmovb
jb
push
ja
pushf
scas
rcr
xor
sbb
or
rolb
mov
test
test
and
xchg
cltd
jno
xlat
and
push
xor
xor
pop
push
jge
inc
fistpll
mov
xchg
gs
jmp
stc
add
fs
xchg
loopne
inc
add
cmp
sub
movsb
hlt
js
push
in
dec
dec
fidivrl
jle
xor
aaa
mov
stos
pop
daa
mov
movsl
adcl
cmp
sbb
adc
inc
shrl
cmp
out
lret
pushf
negb
hlt
cmpsb
xchg
subl
and
cmp
jne
sti
jmp
imul
pushf
push
add
fisttpll
adc
mov
out
pop
mov
cmp
popa
mov
mov
inc
inc
addl
sbb
pop
cmp
and
cli
movsb
xlat
lods
mov
push
js
inc
dec
push
cmp
sbb
scas
je
xchg
jge
and
jmp
rcrl
jl
xor
add
inc
fcomps
js
or
or
lcall
push
pop
inc
xchg
ss
dec
dec
mov
mov
mov
cltd
xchg
add
sbb
dec
jb
cmp
add
xchg
repz
ret
dec
fisubrs
daa
sbb
adc
lods
js
mov
or
insl
xchg
pop
test
les
push
sub
mov
mov
inc
outsb
iret
sub
cwtl
dec
hlt
jbe,pn
ja
add
lahf
push
adc
roll
pop
ja
push
lcall
fldt
cmp
mov
pusha
dec
add
mov
jge
sub
dec
cld
dec
imul
sbb
pop
xlat
int3
shlb
je
mov
ss
aam
and
in
cmpsl
sti
adc
or
jl
dec
lds
sbb
das
hlt
inc
dec
dec
jmp
cmpsl
xor
call
rorl
je
movsb
push
and
dec
stos
call
sbb
faddp
repnz
cmp
data16
rol
pop
dec
mov
sti
dec
xchg
push
subl
out
cmp
xchg
cmp
and
xor
and
dec
push
push
data16
or
add
xor
pop
adc
bswap
mov
push
cltd
andb
cmp
movl
cmp
sub
cs
call
les
sub
in
xchg
js
mov
clc
pop
fucom
jp
js
in
xor
arpl
rcl
rcrl
mov
mov
xchg
jns
je
arpl
mov
cli
or
das
jo
dec
out
icebp
iret
int3
mov
add
xchg
mov
jl
testb
lock
inc
icebp
cmp
push
loopne
rorl
hlt
pop
mov
sti
pop
aam
sbb
pop
rcrb
push
scas
mov
test
push
push
push
jae
mov
sub
daa
xor
loopne
out
cmp
shrb
inc
jne
outsl
test
clc
jp
jge
adc
or
xor
ds
and
jbe
fistpl
loop,pn
testb
cmpl
mov
sbb
pop
in
testl
movsl
ljmp
dec
pop
ret
adc
fwait
lods
and
pop
enter
inc
test
aad
mov
insl
lahf
sub
xchg
mov
rcrb
cmp
pop
xor
sbb
push
xchg
sarb
jmp
push
push
push
in
mov
mov
inc
push
mov
fidivrl
fstpt
add
out
rorl
xchg
or
lds
sub
data16
int
lea
jmp
lock
sub
mov
insl
shlb
xchg
mov
adc
cmp
sub
mov
dec
inc
int
data16
addl
out
mov
repz
push
dec
in
mov
xchg
pushf
js
mov
mov
cmp
adc
mov
rolb
loopne
std
cltd
pop
and
xchg
mov
xor
jecxz
mov
loop
jnp
dec
out
test
mov
mov
negb
outsl
or
jmp
sub
xchg
xchg
lea
outsl
xchg
js
insb
mov
cmp
movsl
xor
jbe
lods
js
sarb
std
sub
mov
fucom
xchg
std
lock
pushl
test
nop
ss
mov
test
cld
adc
jge
xchg
inc
and
dec
adc
repz
and
adc
out
arpl
mov
inc
les
add
pusha
aam
xchg
gs
push
fs
or
cmp
push
into
push
cli
addr16
fwait
or
sar
ret
and
call
jge
xchg
pop
bound
xchg
inc
outsl
jno
lcall
sahf
hlt
stos
or
jl
or
push
in
adc
dec
shrb
mov
jb
fadds
or
stos
shrl
call
inc
shrb
inc
mov
in
push
sahf
cltd
sub
adc
shr
dec
or
lret
ror
stc
xor
sti
pop
push
jl
pop
pop
jp
insb
imul
jno
xor
push
cmp
push
popa
adc
fwait
aam
dec
je
mov
aas
mov
push
popa
int
xor
xchg
out
fsubrl
and
xor
jae
and
and
sbb
out
rol
cmp
sarl
pop
ret
ret
fldcw
outsb
and
add
cmp
rolb
vcvttps2dq
arpl
sub
mov
loop
insb
ds
out
cmp
jo
shrl
pop
outsb
iret
sahf
push
cs
xchg
clc
and
cmpsl
and
mul
cwtl
fwait
xor
js
adc
or
aad
out
adc
adcl
rclb
lock
les
mov
dec
test
lods
mov
sub
add
sbbl
xor
rclb
in
stos
loop
ficoms
inc
mov
aad
aas
mov
ficoml
xchg
sbb
setno
jns
push
stos
ficompl
mov
mov
ljmp
add
and
call
enter
stos
sub
xor
sbb
in
nop
jo
cld
cmp
stos
sub
xor
xchg
mov
adc
pop
xchg
adc
add
xor
test
pop
ret
pusha
stc
xorb
mov
sahf
sbb
push
xlat
cs
aaa
out
ret
adc
std
insb
jne
jmp
shll
inc
and
or
lods
lahf
rcr
mov
push
add
inc
push
pushf
sub
dec
jge
xor
stc
imul
xor
fnstsw
mov
xchg
in
xchg
jge
cmpsl
or
xor
int3
push
in
cld
cmp
fldl
adc
lret
mov
out
pop
mov
dec
xor
xor
fcmovb
fs
inc
inc
testb
adc
int3
insl
mov
ret
mov
jnp
rolb
imul
gs
cmpsb
cmp
lret
sub
gs
dec
test
xor
movsb
outsl
scas
inc
cmc
lcall
imul
fists
xchg
jmp
add
mov
or
stc
cmp
loope
test
xor
inc
dec
lcall
cmp
mov
arpl
mov
lahf
jae
dec
dec
test
cmp
add
xor
bound
dec
xorb
addl
lds
movsb
pop
mov
add
add
mov
enter
lods
repnz
in
out
fisttpll
and
push
sub
sub
repz
dec
or
jne
push
out
gs
pop
test
xchg
sbb
mov
or
mov
inc
fildl
cmp
dec
shll
pop
adc
into
jne
mov
shlb
dec
repnz
mov
inc
nop
repnz
stos
xchg
jg
and
sbb
push
pop
std
mov
in
mov
xchg
dec
test
iret
addb
hlt
lods
fmulp
sub
stos
dec
jle
xlat
mov
ret
or
stos
in
imul
mov
lcall
mov
gs
dec
cltd
or
stos
pushf
mov
popf
push
mov
xchg
ret
and
cmp
or
ja
sub
rcr
clc
jecxz
push
add
call
icebp
outsb
xor
dec
or
insb
nop
jl
mov
push
aad
js
movsb
jg
iret
mov
ret
fdivl
test
daa
test
sub
push
jmp
aad
push
and
out
aam
sbbb
sti
cld
push
lcall
in
xchg
iret
out
push
sub
adc
mov
insl
jl
fstpl
je
cltd
mov
ficomps
aam
fdivrl
call
cltd
xor
ret
push
pop
lods
cld
cwtl
cli
push
pop
imul
shrb
cmpsb
loop
sbb
mov
fstpt
hlt
inc
adc
fnstenv
rcl
icebp
jmp
dec
dec
push
cmp
ficoml
cs
clc
outsl
pop
outsb
mov
and
shll
mov
sarl
jno
pop
movsb
lret
arpl
jne
out
mov
sbb
or
in
into
cmp
mov
mov
std
pop
insl
test
movsb
xor
into
js
test
out
push
fistl
je
dec
pop
dec
insl
mov
pop
mov
mov
sub
and
push
fs
adc
add
mov
add
mov
pop
jno
fsubrs
orl
fdiv
add
add
push
scas
jl
add
pop
jo
int3
cwtl
cmp
sub
add
sub
lea
testb
nop
push
push
sti
shlb
aaa
stos
test
sbb
dec
mov
pop
jns
jge
cmpsb
jle
pop
push
jo
or
sbb
cmp
push
icebp
and
push
fiaddl
add
or
in
xchg
xchg
dec
rcrb
and
mov
push
add
sti
add
and
pop
push
lcall
mov
psrlw
jp
inc
mulb
push
jb
xchg
jl
enter
js
mov
pop
mov
inc
scas
cmpsb
mov
subb
or
push
push
arpl
pop
cmp
insb
jecxz
or
rcrl
dec
pop
dec
sub
xlat
push
out
xor
and
out
or
mov
repz
mov
xchg
xor
inc
xor
fiaddl
jge
pop
lods
sbb
ds
inc
test
dec
sub
cmp
inc
scas
shl
push
jp
fidivrl
jbe
sub
out
lods
pop
mov
stc
aad
mov
loopne
decb
pop
xor
jmp
mov
shr
aas
mov
cmp
xchg
ss
es
adc
push
rclb
xchg
push
and
rolb
rcrb
fwait
outsb
or
push
lods
cltd
outsl
jge
jle
and
mov
mov
decb
xor
ficompl
fisubl
jo
test
add
push
pusha
inc
iret
aas
daa
stos
int
xchg
imul
lret
std
jp
mov
mov
push
xchg
xlat
adcb
repnz
mov
lcall
xchg
adc
adc
popa
jmp
xchg
fistpl
int
mov
cmc
push
mov
cwtl
xor
cmp
add
mov
cs
adc
pop
pop
mov
adc
inc
sbb
mov
dec
cs
popf
sub
shl
lock
sahf
iret
out
outsb
mov
sub
xor
popf
jge
test
iret
ja
fwait
cltd
and
pop
insl
rcll
push
cmp
xchg
jmp
cmpl
jae
push
je
dec
fsubl
or
mov
scas
pop
or
into
xor
lcall
aas
insb
shl
enter
xchg
ljmp
cli
and
pop
out
aas
sub
stos
jb
add
push
xchg
movb
cmp
jecxz
out
and
or
mov
cmp
push
push
xor
ret
repz
addr16
inc
mov
cmp
cmpsb
xchg
jns
ret
mov
aaa
adc
jno
push
andb
test
push
pushf
cmp
sarl
scas
mov
mov
insb
mov
int
int3
fbld
iret
stos
cs
movsb
sbb
out
inc
test
sahf
jle,pt
add
sbb
add
sbb
mov
add
and
sbb
push
mov
sub
loop
xchg
scas
ds
daa
cwtl
into
packsswb
xor
xchg
push
dec
and
int
loopne
xor
or
push
sub
lea
imul
test
shll
and
sub
movsb
xor
adc
lods
mov
cs
lret
cltd
jmp
js
sbb
add
pop
mov
aas
mov
inc
xchg
mov
pop
cmpsl
pop
cwtl
pop
aad
mov
cmp
fnstsw
pop
in
dec
sarl
jp
outsl
in
fnstcw
lea
jg
jecxz
ja
shlb
push
jl
jb
xchg
jb
stos
add
xor
inc
fmuls
mov
or
xor
sub
hlt
popf
xchg
cmp
jno
loop
divl
pop
cmp
test
xchg
and
xchg
inc
dec
repz
cmp
mov
mov
cmpsl
mov
scas
mov
leave
fsubl
in
out
and
pop
js
imul
mov
mov
sub
jmp
jne
cmp
push
push
cld
sarb
xor
nop
aas
mov
jp
pop
movsl
push
clc
in
fnstsw
scas
and
pextrw
and
in
mov
out
or
pop
xchg
outsb
mov
mov
cmp
repz
pusha
in
or
test
mov
mul
lcall
lock
mov
out
or
shrl
lds
xchg
insl
and
or
es
test
mov
jecxz
insl
pop
aad
pop
push
lock
or
cltd
inc
mov
notb
bound
adc
sarl
iret
cs
xor
rorl
push
and
xchg
dec
popa
jge
shrl
mov
clc
ret
lret
loope
icebp
pusha
jecxz
mov
rolb
into
xor
push
nop
ficoml
das
xor
sbb
popf
mov
dec
andb
pop
jae
in
sub
lods
inc
inc
cmp
lahf
icebp
aas
icebp
push
mov
out
xchg
lods
jecxz
inc
orb
sbb
jp
dec
sbb
out
jnp
pop
add
adc
xor
gs
mov
inc
pop
sahf
xor
roll
add
in
mov
sub
std
add
hlt
pop
mov
popf
mov
jb
pop
movsb
xchg
add
iret
cmpsb
jb
adc
les
inc
fmul
int
shlb
ja
add
bound
jp
jb
sbb
pushf
out
lods
in
outsb
test
push
lret
std
imul
sbb
push
mov
test
mov
mov
or
jecxz
lods
xchg
sub
mov
mov
xchg
aam
push
mov
push
scas
add
loope
xchg
add
jbe
out
cmp
pop
rolb
pop
xchg
pop
js
jp
imul
insb
push
repz
out
jmp
cmpsl
daa
jne
or
mov
ja
and
pop
pop
push
sub
data16
adc
push
xchg
leave
fiadds
flds
inc
nop
fsubrl
fdivl
ret
and
cli
sbb
push
add
nop
sub
adc
loop
add
repz
lahf
jno
mov
and
sbb
aad
push
jne
enter
or
mul
mov
clc
cmpsl
cmp
push
lods
inc
lds
sti
mov
jle
inc
adc
jmp
mov
js
inc
js
inc
xor
lods
scas
movsb
shrb
jae
in
sahf
in
jle
daa
push
push
cmovg
mov
mov
xchg
adc
inc
std
mov
or
loop
aam
adc
fucompp
cmpsb
dec
xchg
shrl
fwait
jno
push
iret
jl
shrb
ret
dec
cmc
cltd
push
and
fists
lods
ret
mov
adc
imull
out
mov
mov
sub
ret
xchg
clc
adc
cmp
stos
mov
mov
and
xchg
lods
outsb
mov
std
addr16
loope
or
inc
mov
xchg
jnp
dec
xchg
fists
aas
stos
lock
xor
das
dec
push
loop
jbe
cli
test
inc
jecxz
imul
std
xchg
sti
test
xor
xchg
imul
pop
cwtl
aam
call
xchg
pushf
lret
add
arpl
in
pop
inc
jno
jae
data16
or
cmp
jge
gs
dec
push
aam
hlt
pushf
clc
xchg
sbb
stos
push
jp
movsb
popa
or
stc
mov
stc
or
pop
jo
dec
sbb
cmp
in
pop
out
sub
aaa
mov
mov
arpl
daa
push
xor
lret
xor
xorl
dec
or
rorb
jmp
sub
icebp
xor
and
dec
add
movsl
cmp
push
push
mov
push
sbb
fistpll
push
push
and
subb
fsubrs
inc
ds
outsl
push
pusha
pop
lods
negl
hlt
mov
mov
pop
popa
sbb
inc
pop
cmp
enter
clc
icebp
test
je
adc
xor
outsb
sub
jl
nop
mov
es
pop
js
stos
lods
call
push
stos
push
inc
bound
outsl
mov
popa
subb
ja
xchg
dec
mov
cmc
xor
cld
inc
dec
cmp
pop
cmpsb
xchg
mov
out
inc
push
add
jp
or
lea
pop
and
pushf
cltd
mov
loope
push
pop
in
or
cmpsl
ret
ds
fmul
lahf
push
pop
in
or
xor
add
mov
fmulp
lods
mov
je
and
sub
and
out
jne
sti
sub
mov
loopne
xorl
call
mov
sbb
and
pop
lea
test
stc
cmpsl
mov
mov
sub
icebp
mov
add
jmp
insl
xchg
xchg
dec
sbb
mov
jge
adc
mov
out
pop
xor
fs
out
jle
or
dec
movsb
leave
mov
mov
es
aam
jne
in
inc
sahf
sub
cmc
pop
out
xchg
popf
ret
lret
cltd
jae
aad
or
inc
test
pop
pop
mov
dec
roll
flds
fndisi(8087
mov
popa
call
mov
call
jbe
stos
pop
add
mov
scas
orl
cmpsb
cmp
inc
inc
hlt
mov
rcll
add
test
sub
sub
arpl
xchg
ss
lock
repnz
sbb
aad
xor
pop
scas
sahf
pop
mov
cmp
cmc
jl
pop
inc
int3
fsubr
dec
pop
dec
jecxz
inc
xor
je
sbb
or
cltd
arpl
pushf
mov
mov
ficomps
inc
push
cmpsb
mov
lods
xor
shlb
test
push
jnp
mov
dec
mov
sbb
cltd
lock
mov
sbbl
out
insb
gs
lods
cmp
pop
int
add
sbb
outsl
fcomi
and
sub
fsts
jns
adc
mov
cmc
add
xor
mov
pop
pop
ret
add
xchg
cmp
or
jo
or
fcoms
lret
jp
push
push
ret
or
sbb
icebp
adc
pop
pop
sbb
fbstp
xchg
jnp
and
pushl
push
sub
shrl
sub
xorl
pushf
ljmp
fildll
ret
mov
mov
loope
mov
mov
mov
repnz
sbb
loope
adc
call
pop
sbb
sub
dec
lcall
aam
fidivrl
pop
add
sub
stos
gs
cmp
mov
adc
outsb
inc
and
mov
sbb
bound
ljmp
int
pop
cmp
jns
or
sbb
mov
pop
xor
stc
in
push
mov
mov
lret
inc
imul
ret
cltd
fisubl
sub
stos
ja
push
sbb
cmpsl
lret
fwait
mov
sub
mov
xor
mov
push
dec
outsb
mov
scas
sub
or
mov
xchg
and
sbb
inc
jle
ret
sub
pusha
lods
cwtl
pusha
out
sbb
mov
jns
daa
enter
in
mov
pop
daa
ret
fs
lea
test
movsl
shr
jecxz
xor
mov
repnz
mull
mov
sbb
std
bound
dec
shlb
movsb
ret
push
jge
adc
inc
orb
popa
ljmp
mov
jmp
inc
inc
stc
ret
loopne
mov
push
jb
cmpsl
and
rorl
test
xor
cmp
mov
mov
pushf
movl
daa
rclb
and
or
loop
cmp
mov
mov
setge
stos
aas
pop
jmp
orb
movsl
jl
inc
cs
jecxz
imul
add
adc
out
cwtl
dec
xchg
xchg
popa
pop
bound
insb
movsb
add
sbb
test
inc
sbb
mov
or
push
nop
lock
in
sbb
and
jmp
mov
push
add
sbb
stos
decb
xlat
jecxz
imulb
lods
add
cwtl
mov
dec
mov
js
push
push
xchg
out
xor
mov
fs
cld
dec
enter
inc
xchg
rcrl
outsb
fcompl
push
pusha
sub
jo
and
mov
outsb
lock
fnstsw
leave
dec
push
mov
repz
xchg
pop
jp
imull
in
xchg
outsb
dec
in
sahf
mov
sbb
jmp
and
mov
shlb
jns
mov
add
mov
movsb
dec
and
push
jb
adc
ret
jl
fstpl
sbb
push
lock
pop
rcrb
mov
inc
dec
push
pop
xchg
inc
adc
pop
into
cwtl
or
dec
inc
push
out
lcall
push
mov
jb
add
dec
repz
adc
adc
pop
dec
es
xchg
dec
rclb
and
add
fildl
jns
and
icebp
movsb
mov
push
jg
lea
stc
and
daa
in
aaa
ljmp
mov
dec
enter
mov
and
fcmovnbe
fcmovnbe
nop
lods
xchg
lock
jae
mov
fnstenv
mov
int3
clc
out
in
and
push
jle
ficoms
jg
cmpsb
fnstenv
mov
fldt
lock
mov
inc
cmp
movsb
jg
or
imulb
push
jmp
inc
and
insl
mov
mov
mov
mov
in
cltd
jbe
mov
inc
mov
cmpsl
insb
stos
sahf
hlt
mov
shrb
enter
pop
data16
push
out
dec
popf
xlat
js
xchg
lods
xchg
ss
lcall
arpl
push
imul
adc
insl
ds
dec
arpl
popa
adc
cmp
gs
push
rcrb
jbe
test
fnsave
jle
sahf
pop
cmc
or
gs
xchg
mov
inc
sbb
nop
pop
mov
add
mov
cmc
cmpsl
fdivs
adc
mov
push
lretw
imull
mov
jb
pop
dec
sar
push
imul
xor
fsubrs
int3
sahf
loop
mov
pusha
aaa
adc
jno
lock
sub
daa
test
les
enter
mov
inc
jmp
xchg
pop
and
sub
out
fs
mov
mov
leave
xor
inc
jo
xchg
xor
sbb
or
mov
push
adc
fs
pop
xchg
dec
popf
inc
jl
or
push
int3
bnd
mov
or
lock
mov
mov
mov
push
rclb
cmc
cmp
adc
sub
xor
shll
push
add
xchg
out
movsb
dec
mov
pop
xchg
add
sbb
filds
cmp
xor
xchg
xchg
mov
fildll
int
push
in
jbe
dec
daa
push
movl
in
sub
xor
mov
push
bound
pop
fistpl
int
inc
jbe
or
pushf
subb
test
jnp
ret
mov
pop
js
mov
jp
rorl
mov
mov
jmp
repnz
xchg
sbb
mov
sbb
mov
push
inc
outsb
andl
inc
sub
scas
mov
pop
ds
dec
mov
sub
fnsave
add
xchg
in
sub
inc
insb
lcall
sahf
nop
fidivrl
jnp
inc
push
inc
push
in
fcmovbe
sbb
or
dec
jns
fbld
gs
pop
push
insl
or
mov
repnz
orb
sub
cmpsb
aaa
std
inc
push
and
mov
pop
pop
mov
pop
jl
out
jae
daa
movsb
movsb
mov
pop
rcll
push
cmp
aaa
dec
jb
push
clc
mov
fisubs
nop
outsl
push
mov
sbb
std
sub
mov
adc
or
decb
mov
call
ret
inc
into
int
cwtl
or
movsl
daa
js
jnp
dec
sbb
jp
addr16
jmp
pop
sahf
pushf
xor
jp
xor
xor
add
ja
push
jecxz
xlat
push
pop
mov
add
vcvtdq2ps
xor
jp
or
cmpsl
out
dec
adc
rep
aaa
jne
cli
dec
icebp
outsl
xchg
mov
repnz
loop
xchg
mov
mov
pusha
sbb
in
enter
sub
mov
enter
cli
rol
test
sar
call
setl
mov
sub
mov
lods
push
adc
ja
test
xchg
adc
mov
jecxz
push
sub
xor
popa
or
push
jb
adc
jmp
push
adc
pop
mov
xchg
push
cmp
pop
fwait
aas
shlb
int
mov
jae
aam
test
scas
loope
lods
xchg
cmp
mov
ret
or
mov
ljmp
jb
jbe
pop
iret
push
sbb
or
cmc
pusha
sbb
jg
dec
lods
mov
xchg
push
xchg
pop
cs
mov
cli
imulb
push
movsl
and
sub
pop
out
lock
mov
mov
push
sahf
jle
pop
outsl
push
xchg
aad
nop
lret
ret
leave
cmp
int3
xor
test
paddq
lcall
stos
call
daa
lods
sti
loopne
and
jg
mov
cmp
add
push
js
repz
push
or
loope
sbb
jmp
cmpsl
out
fs
mov
and
cmp
pop
imul
testb
sarb
add
hlt
bound
aad
pop
pop
stos
std
popf
xchg
imul
jo
ljmp
fidivrs
sub
int3
xchg
mov
adcb
cmp
or
cmp
sbb
pop
adc
push
xchg
lock
sbb
cli
adc
sbb
fwait
cmc
lds
push
lea
hlt
cs
scas
jg
lahf
lods
lock
ret
cld
loop
pop
xchg
movsl
imul
adc
jnp
in
es
aaa
mov
scas
sti
arpl
idiv
lods
jle
xchg
sahf
out
xchg
hlt
cmp
std
xchg
rolb
xor
repz
pop
pop
mov
mov
xchg
aas
test
cltd
lahf
loope
adc
in
icebp
jge
sub
xor
cmpsb
gs
mov
loop
outsb
loopne
xchg
xlat
lahf
repnz
test
xor
sti
lret
mov
mov
mov
mov
mov
es
inc
push
shlb
jbe
dec
xor
xor
add
test
mov
dec
loope
cs
mov
dec
mov
aaa
cli
jbe
popa
push
mull
and
rorb
lods
mov
jnp
jp
push
adcl
adc
loop
xor
hlt
add
jnp
dec
sbb
aaa
dec
lods
cli
pop
push
loope
mov
lds
mov
or
lds
and
adc
lcall
mov
adc
push
sarl
jns
test
popa
divb
repz
stc
cmp
push
xchg
adc
shrb
lock
mov
push
mov
insb
jb
xor
and
imull
test
jp
jg
mov
push
mov
mov
lds
stos
lods
jge
repz
loopne
sti
adc
inc
mov
out
les
popa
mov
mov
pop
or
sub
out
js
or
jmp
mov
cltd
outsb
jmp
es
ljmp
cld
test
lahf
add
cwtl
cmp
push
ret
loope
jne
and
xchg
push
insl
jecxz
lods
icebp
pop
sub
sub
jge
mov
arpl
dec
cmp
mov
insl
dec
push
pop
sbb
out
or
je
addps
pop
mov
add
mov
xchg
mov
outsb
xor
mul
pop
jno
push
leave
inc
hlt
push
pop
aad
ret
int
into
pop
ret
rcrb
lods
add
ret
aas
mov
sbb
adc
test
sbbb
pop
push
mov
test
cmpsl
outsl
adcl
mov
gs
sub
jl
xor
sub
xchg
xchg
popa
ss
cs
gs
inc
pop
or
or
cmc
sbb
lock
cmpsb
sub
xor
mov
test
je
and
loopne
nop
mov
stos
jecxz
add
fcompl
or
fldenv
xchg
sbb
mov
sar
fwait
leave
push
xchg
mov
sub
xchg
call
mov
mov
in
push
and
frstor
out
scas
scas
pop
inc
inc
and
mov
and
adc
pop
pop
jb
bound
sbb
pop
std
mov
mov
xchg
and
xor
ret
bound
popf
int3
sahf
mov
mov
je
xchg
inc
ffree
inc
adc
fisttpl
in
cwtl
jmp
cmpsl
cmpsl
data16
fcoml
rcrl
cmp
mov
fisttps
loop
xor
and
sbb
das
dec
in
data16
imul
xor
cwtl
ds
popf
ljmp
mov
mov
jns
enter
adc
negl
mov
mov
add
dec
in
mov
scas
mov
xor
mov
lds
or
mov
pop
adc
pop
mov
jb
mov
push
ss
shl
cmp
cmpsl
adc
clc
sbb
jmp
rcl
leave
xchg
push
add
adc
movsl
js
cmp
sub
mov
mov
nop
jnp
mov
addl
popl
add
bound
pop
fs
mov
je
adc
fs
dec
adc
jg
imul
addr16
sbb
mov
sbb
neg
scas
push
and
mov
out
adc
repz
push
push
mov
jl
inc
inc
pop
cmp
adc
bound
sbb
int
testb
xchg
gs
stc
or
sbb
inc
dec
push
lret
cmc
xchg
stos
sub
mov
pop
jle
scas
pop
leave
sbb
xor
je
sub
or
cltd
loop
sbb
mov
xor
ds
mov
js
jecxz
ficomps
insb
xchg
inc
repz
adc
inc
ret
fcompl
pop
lock
inc
or
rcl
sub
enter
repz
mov
and
mov
pop
fdiv
sbb
arpl
xorb
fmul
movsl
mov
insl
imulb
mov
push
jecxz
and
iret
fucomip
fstpl
cmc
push
sub
in
push
lcall
lahf
cs
jns
ss
pop
jp
pop
jecxz
mov
pop
add
rcll
adc
xchg
stos
mov
ret
lock
cmovle
out
sar
pop
hlt
adc
shl
test
and
pop
shl
loop
sbb
mov
icebp
mov
test
xlat
les
mov
loopne
xor
or
lds
jbe
ds
stc
inc
movsl
cmpsl
ret
inc
xbegin
shlb
dec
jbe
sbb
andl
inc
mov
int3
and
scas
pop
push
pop
dec
je
ja
andb
jns
push
sar
sub
imul
test
inc
mov
push
xor
negl
in
cmp
jp
push
in
jnp
jb
jne
xchg
lea
lret
xor
lahf
clc
mov
xchg
ds
shrb
adc
xchg
dec
jp
mov
jno
ljmp
jbe
mov
mov
test
outsl
pop
push
jge
std
scas
mov
popf
jge
insb
cmc
inc
and
push
dec
jge
shrb
cmc
mov
jo
add
jl
nop
sbb
sub
movsl
mov
lret
xorl
and
das
shlb
scas
fisubs
adc
out
or
mov
movsl
xchg
jae
cltd
imul
and
ss
push
popf
or
scas
int
add
pop
xor
mov
jbe
dec
ljmp
cmp
movsl
adc
add
pop
test
movsb
cmp
mov
adc
mov
mov
testb
rcr
xchg
mov
repz
push
dec
xlat
cmp
call
outsw
mov
fnstenv
pusha
ja
andb
popf
adc
or
lret
rolb
or
push
rcr
inc
cmpsb
cmpsl
or
scas
daa
push
xchg
jmp
and
popa
iret
aaa
adc
ret
scas
fcmovb
dec
pop
adc
gs
jbe
test
les
jno
or
dec
cltd
int3
mov
pop
mov
or
cld
mov
arpl
dec
sahf
enter
lret
scas
gs
cmpsb
cmpsl
es
push
push
ds
or
aaa
jb
push
push
testl
pushf
lods
and
arpl
mov
cmpsl
pop
vmovshdup
jae
shlb
dec
jbe
pop
add
addr16
test
insl
and
popf
adc
movsb
mov
ds
std
jno
inc
sbb
mov
rcrb
xchg
jne
inc
inc
lods
jecxz
dec
ret
aam
movsl
or
mov
sahf
mov
mov
popa
test
fs
stos
out
xor
adc
bound
rcrl
es
xor
gs
push
mov
or
rcr
idivl
scas
out
jbe
cmp
sbb
nop
test
mov
xchg
dec
jle
repz
rcll
xor
mov
mov
repz
inc
lret
push
jnp
mov
fmull
fsubs
mov
adc
into
and
fwait
push
sub
sub
push
lret
adc
inc
out
test
add
sbb
ljmp
negl
mov
sbb
cli
jp
cltd
jge
enter
enter
sahf
xlat
mov
xchg
sbb
fists
lea
out
jbe
mov
aas
xor
mov
xchg
jg
cmpsl
cli
and
js
or
sub
adc
pop
ljmp
jne
pop
cmp
negb
iret
into
aad
loope
and
test
aas
std
fistpll
or
xor
lcall
jae
push
out
jl
dec
jb
cmp
xor
pop
jne
inc
mov
mov
imul
iret
fmuls
imul
movsl
rclb
jl
mov
mov
sti
add
push
mov
scas
lods
mov
adc
push
adc
and
mov
ds
or
and
leave
shrb
inc
xchg
inc
or
not
dec
nop
movsl
push
out
xchg
sub
int
scas
decl
or
and
jnp
fwait
andb
cmp
sahf
cltd
sbb
adc
lcall
fdivrl
jne,pt
dec
test
add
mov
int3
int
inc
xchg
lods
xchg
dec
fucomi
dec
je
insl
sbb
adc
add
es
dec
addr16
push
in
ret
adc
incl
or
adc
out
test
and
xchg
cmp
cmpsb
push
jae
cmp
adc
idivl
push
dec
in
sbb
sub
fldcw
sub
test
ret
sbb
mov
sahf
mov
pop
add
push
pop
gs
lea
pop
mov
leave
hlt
mov
shll
icebp
fs
cmpsb
lods
cli
ljmp
xchg
push
pop
fnstenv
xchg
mulb
and
les
push
es
std
or
cmpsl
push
mov
sbb
aaa
insb
int3
repz
int3
outsb
adc
or
fsubl
pop
rcrl
inc
aad
cmp
stos
aas
mov
mov
jp
push
jno
or
dec
call
daa
dec
mov
lcall
cmc
mov
mov
xor
inc
and
ret
cwtl
imul
mov
jns
add
leave
decb
imul
lahf
lahf
lea
mov
negl
popf
xor
mov
pop
dec
jo
fldenv
inc
pop
clc
cmp
hlt
jo
into
adc
sub
pop
outsb
or
jns
shl
xor
fistpll
js
jo,pt
mov
or
cmp
shlb
mov
movsb
push
cltd
jno
std
sub
repnz
and
xchg
jle
jbe
mov
gs
pop
in
test
sbb
lods
or
popf
shrl
nop
dec
daa
negl
shrl
jnp
mov
int3
push
out
push
xchg
in
shll
and
dec
lods
test
into
inc
cmp
and
idivb
push
add
out
sub
cmp
je
fwait
jno
xor
cmp
mov
test
cmpsl
mov
std
int
mov
jno
mov
shll
scas
ret
sub
leave
lret
add
sbb
lcall
xchg
fadds
adc
ficoms
aas
lock
pop
ljmp
fstpt
das
xchg
sub
outsl
out
mov
mov
pop
jne
popl
or
shrl
add
add
cmp
add
stos
int
repnz
imul
add
fstps
sub
lret
in
int3
bound
and
movsb
rclb
push
mov
cld
imul
ror
dec
clc
test
or
inc
int
push
das
test
mov
mov
cmp
jmp
dec
or
movsb
cwtl
add
iret
stos
inc
out
mov
or
cwtl
sbb
sbb
mov
popf
cmpsl
gs
inc
lret
jp
mov
mov
mov
leave
sti
cmp
mov
xchg
push
jmp
cmpsb
or
jbe
adc
jmp
arpl
fdivr
or
cld
push
out
scas
in
cs
js
cmp
leave
xchg
jl
es
dec
sub
data16
cmpsl
push
sbb
jne
add
push
stc
mov
fs
scas
je
ret
loop
xchg
or
nop
xchg
jge
inc
daa
and
pop
fs
js
dec
movsb
mov
popf
jb
sub
push
mov
lret
fucomp
add
jo
inc
jmp
dec
scas
and
dec
fldcw
sar
sbb
push
ret
das
pminub
lds
test
xorb
sbb
sbb
scas
mov
xor
cmpsb
xchg
xor
cld
push
adc
push
mov
xlat
ss
add
adc
aad
mov
pushl
mov
pop
dec
arpl
jecxz
and
es
pop
je
jecxz
ret
stos
add
sar
hlt
lods
xchg
jbe
add
rcl
adc
mov
adc
imul
mov
add
mov
loopne
stc
xchg
dec
pop
sbb
mov
push
lret
nop
xchg
sbb
mov
or
cli
mov
inc
lahf
inc
push
movsb
or
scas
sbb
ljmp
or
test
sub
repz
and
adc
or
push
fsts
jmp
mov
in
inc
aad
xor
testb
ret
inc
aam
lahf
loope
adc
and
mov
out
inc
fstpl
sbb
push
roll
in
out
aam
jnp
cli
jo
dec
mov
adc
in
int
or
insb
das
aaa
bound
mov
add
dec
sbb
xor
push
sub
cli
jnp
and
and
mov
ffree
sbb
and
mov
xchg
or
clc
mov
push
adc
dec
jmp
push
mov
aad
stos
test
inc
sub
std
fnstcw
sarl
mov
jmp
out
jo
xor
mov
sbb
xchg
outsb
repz
ja
cmp
out
mov
in
sbb
orl
sub
cmp
sub
xchg
inc
adc
leave
leave
leave
push
ret
adc
pop
xor
mov
cs
icebp
adc
xchg
out
mov
xor
test
jns
xchg
ljmp
mov
xchg
jecxz
pop
stos
sub
xchg
dec
mov
and
jns
stos
lahf
fwait
aam
cmc
or
test
push
dec
cmc
sub
and
push
lock
dec
inc
mul
daa
xchg
daa
cli
out
imul
fiaddl
jge
das
sti
rorl
xchg
mov
sub
sub
fwait
dec
dec
xor
mov
inc
imul
ja
in
inc
popf
cwtl
aas
je
imul
or
das
push
mov
lods
fstpt
sub
sbbb
das
rep
pop
in
xchg
in
xor
cmc
push
add
mov
push
insb
cmp
int3
adc
jae
pop
aad
mov
mov
dec
lock
ljmp
add
pop
mov
std
dec
add
call
insb
xchg
sbb
push
add
imul
lahf
jp
rolb
add
sub
mov
movsl
inc
sub
lock
stc
cli
push
pop
add
mov
push
les
test
mov
jmp
fidivrl
cmpsb
sub
mov
xlat
clc
decb
sar
lret
inc
push
clc
push
or
scas
jo
cmp
or
shll
or
iret
lret
cmpsl
push
sub
repz
mov
cmp
inc
ja
xchg
xor
push
mov
repnz
loop
test
push
add
push
push
pop
sarl
and
or
or
movsl
pop
sti
aad
mov
mov
push
test
cli
add
push
mov
aaa
fildl
sub
addb
mov
sub
das
xor
lcall
ret
movsb
out
add
movb
dec
inc
and
leave
outsl
or
fcmovu
or
cmpsl
jns
adc
movsl
jmp
lock
jle
mov
push
mov
rcrl
cli
roll
in
and
jno
test
mov
sbb
xor
inc
jae
fcmovnbe
mov
add
test
pop
cmp
sbb
pop
and
je
sbb
jno
xor
sub
dec
popa
js
xchg
xor
hlt
pop
push
fcompl
adc
xor
dec
repnz
xchg
popf
push
push
jp
stc
scas
sbb
mov
cld
mov
cs
fs
add
sub
out
sbb
ret
xor
mov
ss
jmp
cmp
mov
cmpb
adc
xor
dec
sar
lret
adc
or
out
pop
and
sub
push
leave
dec
pop
mov
pushf
movsb
xchg
xchg
sti
cmp
mov
test
mov
pop
xchg
movsl
mov
push
icebp
std
cmpsl
gs
sbb
jecxz
call
mov
daa
int3
adc
aad
mov
pop
mov
lcall
xchg
sub
jg
adc
inc
xchg
jg
push
bound
outsb
test
insb
sub
dec
loop
sti
xchg
inc
repnz
or
out
push
idivl
es
outsb
cltd
adc
inc
cmp
out
mov
aas
js
incl
lods
dec
loope
fstps
call
fnstcw
xchg
lahf
and
xchg
adc
mov
in
push
mov
out
push
adc
add
shl
ret
mov
cmp
mov
leave
into
enter
lock
jb
jns
arpl
pop
fs
stos
les
mov
add
add
daa
push
dec
cmp
sub
sub
jne
leave
mov
rcrb
mov
aaa
pop
inc
into
sbb
int
lahf
int
xor
aas
xor
push
stos
jle
je
sub
sbb
adc
sub
push
leave
mov
push
jl
pop
fsubrl
icebp
mov
decb
add
cmp
cmp
movsb
xorb
cmpsl
inc
mov
mov
call
hlt
stos
lret
jge
dec
jno
push
sub
xor
into
ret
mov
mov
adc
insb
insl
push
cli
mov
es
or
pop
dec
pop
fdivrl
sbb
push
popf
xchg
pop
pop
ds
mov
outsb
sub
pop
sub
or
push
pop
cmpsl
test
repnz
insb
push
xchg
mov
inc
sbb
xchg
mov
dec
enter
sub
inc
shrb
push
test
or
ficoms
adc
jbe
sahf
repz
lods
filds
jne
or
cmp
dec
sub
pop
ds
movsl
and
xor
and
jmp
out
or
in
cmp
cltd
mov
or
insb
daa
adc
mulb
inc
push
cmpsl
inc
leave
pop
mov
sbb
adc
xchg
sbb
fwait
aaa
mov
ret
mov
rorl
mov
or
fiaddl
push
js
pop
je
dec
mov
mov
and
sbb
ljmp
cmp
iret
mov
movsl
mov
cmpsw
jb
fadd
push
push
or
gs
adc
xchg
sbbl
lret
ss
pop
adc
mov
das
xor
push
jo
cmp
clc
ss
pop
int
inc
stc
xor
fbstp
lods
cmp
adc
fidivrs
jp
adc
xor
mov
add
sbb
dec
pop
lock
xor
mov
cmc
addr16
fdivrl
mov
ljmp
sti
jecxz
scas
mov
xor
sub
sbb
test
add
xchg
dec
ljmp
adc
push
jo
daa
outsl
push
inc
sbb
jmp
sbb
adc
shr
cmp
dec
sub
lods
orb
aam
aad
mov
jbe
mov
and
in
stos
insl
push
mov
inc
lahf
or
jnp
or
gs
mov
into
jmp
outsl
or
pop
and
cltd
cli
adc
jecxz
test
pop
clc
out
push
ja
mov
inc
mov
pop
and
cmp
sti
sub
insb
out
test
fsub
in
fbld
stos
in
add
movsb
mov
std
fwait
dec
pop
int
lahf
leave
addr16
adc
xor
jl,pt
es
shrb
dec
into
movl
int3
mov
or
popa
mov
popa
push
jle
xchg
aad
lods
repnz
lds
cmpsb
std
inc
or
ja
mov
inc
stos
xchg
xchg
iret
dec
fcompl
jno
adc
and
inc
mov
test
mov
jno
pop
mov
mov
aad
pop
sub
pop
push
xor
pop
and
test
ret
cmp
cmp
imul
cli
popa
adc
popf
xchg
mov
outsl
test
mov
push
sti
icebp
insb
jmp
or
jno
sub
xchg
imul
inc
add
movsl
cli
adc
sub
cli
hlt
xor
push
ret
sub
push
mov
xor
adc
add
or
or
pop
stos
jecxz
dec
arpl
outsb
mov
ja
leave
jbe
cwtl
sarl
sbb
inc
lds
bound
daa
subb
adc
mov
das
push
cmp
sub
mov
jecxz
sbb
xchg
imul
push
loope
rorb
push
mov
mov
mov
xor
or
jmp
xor
mov
pop
stos
es
inc
lock
decb
test
imul
push
inc
and
nop
nop
hlt
dec
jne
push
movsb
shl
adc
xlat
movswl
lret
mov
push
aam
and
daa
xor
popf
sub
xchg
pushf
sub
cld
pop
add
and
push
test
adc
lods
adc
sub
bound
fidivrl
imul
notb
jl
andb
sbb
daa
jge
pop
dec
mov
mov
loop
pop
cmp
nop
out
xchg
xchg
or
inc
pop
lret
insb
inc
out
adc
jle
push
jae
sub
imul
adc
ficoml
mulb
cmp
pop
cld
vshufps
xchg
std
daa
jmp
sub
lret
inc
loop
xchg
dec
pop
dec
or
std
or
in
push
test
xchg
cmp
ljmp
out
mov
mov
ljmp
and
xchg
insb
jg
ss
cmc
sub
je
in
outsl
mov
subb
dec
adc
push
or
dec
rcl
inc
jmp
sbb
sbb
sub
leave
jnp
mov
stc
loope
fwait
jge
pop
in
arpl
xor
jmp
sarb
pop
aas
popa
imul
xlat
lret
add
jb
or
mov
dec
scas
and
xor
lock
scas
je
sub
or
adc
push
xlat
mov
jb
out
jns
push
outsb
mov
lahf
cmpl
cld
cld
roll
sbb
cs
loopne
inc
and
stos
leave
shll
les
flds
ret
pop
jp
xchg
popf
mov
mov
fnsave
xor
frstor
flds
lcall
add
jno
jns
imul
mov
sarl
and
lods
jmp
shlb
negb
dec
or
adc
sbb
fs
push
test
mov
addr16
xchg
xchg
cmp
push
dec
pushf
loop
sbb
mov
xor
ja
sub
dec
sbbl
and
mov
pop
imul
mov
pop
push
inc
into
dec
fbld
mov
cmpb
add
pop
jbe
pusha
cwtl
push
or
adc
add
aad
imul
sub
pop
stos
std
dec
and
mov
test
arpl
sbb
imul
test
loope
arpl
fcmovnbe
jns
mov
movsl
add
outsb
xor
inc
mov
jecxz
frstor
arpl
shll
repz
imul
and
xor
xchg
les
ret
outsb
adc
repnz
cmp
push
dec
das
loop
adc
sbb
pop
cld
lret
iret
push
pop
jno
adc
xchg
xchg
and
pop
orb
xchg
pusha
mov
mov
mov
add
or
out
bound
jbe
adc
cmp
fistps
mov
xor
leave
jg
or
or
mulb
repnz
pop
push
fbld
aam
dec
dec
loope
xchg
int
fisubs
andl
and
ret
pusha
test
stc
inc
push
cltd
dec
bswap
mov
sti
stos
iret
mov
jns
in
loope
mov
pop
cmp
shlb
cmp
adc
pop
xor
mov
mov
mov
das
jb
push
in
xorb
add
mov
lea
adc
outsl
lret
std
fsubr
inc
in
rcrl
push
inc
popa
rolb
pop
add
cmc
test
pop
push
test
push
sub
sub
adc
ficoml
inc
rclb
pop
sub
inc
xor
bound
lds
in
pop
pop
repnz
xchg
test
jo
lods
es
xor
push
inc
jno
jmp
mov
jns
std
adc
cmp
sbbb
in
pop
xor
mov
fcomps
sbb
add
and
jo
shll
jns
push
mov
xchg
popf
inc
cmp
push
add
jbe
jg
mov
dec
dec
mov
out
mov
mov
pop
inc
mov
sahf
subb
les
mov
cld
je
int
pushf
dec
pop
push
ljmp
outsl
lods
outsb
sub
out
sbb
push
enter
or
test
test
push
xchg
mov
push
fisubl
jno
sbb
pop
dec
fwait
and
push
pop
add
imul
aas
enter
pop
in
outsb
or
loop
mov
data16
inc
cli
xchg
rorb
pushf
add
cs
dec
cmp
inc
lret
dec
cmp
lds
cltd
loope
jl
push
lods
push
or
enter
mov
dec
pusha
insl
dec
xchg
pop
shr
xchg
mov
stc
sbb
hlt
ja
rolb
leave
pusha
sbb
jge
std
mov
cmp
orb
fwait
inc
aad
or
dec
mov
in
insl
pop
inc
fs
pop
cmpsb
call
push
jbe
insl
mov
les
xacquire
mov
jecxz
clc
iret
cmp
pop
icebp
jge
daa
cltd
dec
popa
mov
xor
leave
or
insb
mov
inc
pop
and
mov
xlat
jno
repz
lret
inc
in
mul
movsl
mov
stc
or
stos
stos
mov
add
nop
test
add
hlt
daa
call
mov
idivl
dec
inc
rorb
mov
jo
cmpl
mov
int3
subl
cltd
jnp
xchg
rclb
dec
gs
daa
xorb
sub
add
out
lods
sub
push
aad
cmp
mov
ret
xlat
sbb
push
test
daa
cmp
testl
xor
push
sbb
cmpsl
inc
and
jns
xor
add
loopne
movsl
jge
stos
cmp
ss
popf
ret
cmp
ret
dec
popa
dec
dec
arpl
in
mov
into
jbe
xchg
rolb
push
xor
push
shl
add
loop
cmc
and
jp
pop
orl
fidivl
sahf
test
xchg
jecxz
adc
int
jmp
push
test
cmpsb
daa
leave
push
shrl
test
into
fiadds
adc
sti
mov
dec
rol
scas
iret
or
mov
jle
or
push
sub
push
shrl
adc
inc
fcmovnb
repz
push
pop
test
repnz
adcb
jae
leave
dec
lods
xchg
xor
repnz
ds
lods
sbb
loopne
jae
adcb
ja
or
xor
pop
dec
push
add
sub
pusha
outsl
sub
add
repnz
leave
adcl
push
jp
cmp
dec
mov
adc
popf
les
pusha
imul
fldl
or
rcrl
dec
pop
pop
adc
sbb
adc
xor
and
popf
cld
clc
incl
push
push
imul
dec
rclb
ljmp
out
cli
mov
mov
hlt
in
int
xchg
cmp
xor
xchg
test
inc
dec
push
push
inc
push
mov
push
xchg
test
mov
pusha
mov
test
cs
jo
or
stos
aaa
xor
rcl
insl
push
inc
push
aas
push
mov
mov
xor
jne
push
pop
test
das
sub
cmp
pop
adc
xchg
jns
cmp
add
pop
std
pop
xchg
mov
bound
dec
jnp
sub
push
adc
jbe
ja
jbe
notb
sahf
sbb
or
xchg
rclb
sbb
push
pop
xor
mov
add
mov
aad
xchg
mov
sub
xchg
test
repnz
push
jle
std
and
out
outsl
inc
addr16
outsl
pushf
adc
clc
cmp
adc
sub
push
mov
paddsb
jno
inc
ret
pop
inc
movsb
sahf
inc
icebp
mov
enter
lsl
xchg
mov
loop
jne
insb
xchg
mov
mov
popa
stos
imul
mov
into
scas
mov
pushf
jl
xor
jb
idivb
push
test
pushf
lods
push
mov
jl
mov
pushf
mov
sbb
push
mov
fucom
imul
lret
dec
orb
push
ljmp
mov
jae
aas
adc
jo
inc
cmp
cld
and
mov
adc
adc
add
dec
xchg
xchg
xchg
in
aaa
popa
movsl
mov
push
or
orps
xchg
jl
pusha
negl
push
hlt
xchg
sbb
xchg
xchg
scas
jmp
iret
enter
aad
sbb
add
xchg
cld
test
out
cmpsl
push
xchg
and
push
dec
scas
cwtl
movsb
nop
xchg
addr16
enter
push
in
mov
iret
stos
adc
cmc
aam
sub
jg,pn
dec
cmp
mov
out
dec
dec
pop
nop
inc
adc
or
lahf
cmp
jnp,pt
jo
jge
out
jge
sub
add
sar
dec
mov
adc
adc
lcall
cltd
push
stc
dec
dec
push
mov
xor
imul
in
xlat
push
mov
xchg
inc
test
pop
lods
fstpt
hlt
test
pop
sbb
xchg
ljmp
sti
int3
shlb
shr
xchg
fldenv
mov
insl
push
cmp
fdivr
popf
pop
fndisi(8087
out
adcl
pop
scas
sub
je
inc
dec
cld
xchg
fistpl
inc
mov
fstpl
flds
xchg
push
xor
xchg
sub
fwait
mov
popa
aaa
ficoml
add
pusha
ja
rclb
inc
in
xchg
mov
fiadds
ror
adc
push
es
pop
pop
dec
mov
or
sub
inc
push
movsl
and
sub
xchg
test
jecxz
and
pop
iret
push
jle,pt
aam
dec
push
cmp
add
cmp
pushl
jo
mov
ss
clc
int
adc
in
mov
andb
or
pushf
ret
insl
in
cmp
mov
push
push
clc
xorl
rcrb
icebp
jge
fcoml
outsb
xor
movsb
shl
adc
add
aad
push
mov
push
popf
mov
in
cmpb
nop
adc
out
loop
pop
lods
adc
sub
jecxz
add
and
sbb
fisttps
imul
push
out
fimull
xor
int3
or
xor
jg
shrb
arpl
rcll
cmp
add
xor
in
dec
rcrb
pop
stos
xor
jg
adc
stos
loopne
jb
lods
mov
cmpsl
cmp
outsb
push
loop
mov
jno
aam
xlat
daa
adc
int3
cmp
dec
jle
jbe
jge
sub
aas
cmp
mov
adc
push
sub
testl
jae
std
and
xor
scas
sti
push
in
icebp
std
add
cmp
insb
cmp
ss
test
stos
jge
daa
hlt
adc
jno
push
dec
test
dec
mov
xor
jae
outsb
jae
movl
sub
lods
xor
sub
mov
adc
mov
mov
cld
push
sub
inc
xor
and
pop
je
or
pop
and
push
inc
adc
mov
imul
inc
js
imul
nop
std
mov
mov
jg
imul
xchg
mov
inc
lds
test
imul
and
rclb
fidivl
sub
into
mov
adc
int3
decb
dec
outsb
test
and
lea
into
nop
test
inc
push
push
mov
daa
fs
xchg
sbb
jae
sbb
jmp
jo
push
jbe
add
xchg
mov
idivl
imul
cmpsl
shrb
jns
iret
fistpll
jno
sbb
mov
ds
add
dec
stos
push
incl
xor
int3
out
push
je
pop
out
adc
lcall
jno
repnz
xchg
adc
xchg
xor
sbb
mov
pop
jle
and
push
clc
cmp
rcrb
stc
push
sbb
pop
xor
jmp
cltd
bound
test
mov
cmc
and
or
popf
jge
rcl
dec
pusha
dec
and
pop
jb
or
dec
lea
nop
add
jp,pn
adc
push
rcl
lods
jl
and
xor
mov
pop
sti
jge
push
je
jecxz
stc
je
xor
push
xchg
andb
or
mov
nop
iret
sub
mov
out
pop
rolb
and
or
push
adc
leave
fdivrp
mov
inc
enter
cld
testl
and
orl
mov
iret
xor
clc
in
and
mov
push
or
lods
je
orl
cli
leave
movsl
dec
fs
ret
push
rcll
hlt
pop
push
sbb
cmp
jne
fwait
mov
mov
pop
mov
movsb
data16
xor
cli
pop
xchg
jae
xor
push
push
lods
dec
inc
cmp
jb
xor
iret
inc
popa
in
xchg
rclb
sub
inc
inc
mov
pop
cmp
enter
shll
cld
inc
pop
sub
lahf
dec
mov
test
xor
mov
adc
loopne
outsl
jo
push
inc
or
pop
add
cmp
push
mov
popa
pop
jle
loopne
sub
inc
cmp
push
ret
cmc
mov
shl
xor
shll
inc
test
xchg
ret
test
push
imul
pusha
adc
sbb
sub
push
int3
rcrl
dec
lods
test
fcmovne
xchg
pop
push
loop
out
inc
mov
cmp
push
stc
cmp
icebp
jnp
mov
lds
inc
adc
and
idivl
lock
ficoml
adc
adc
dec
inc
into
lret
les
xor
jp
pop
push
jns
cmp
cmpb
nop
cmp
mov
ljmp
mov
insl
push
jbe
jg
mov
addb
popf
push
stos
xchg
lcall
mov
loopne
sbb
cwtl
jo
mov
add
cmp
mov
adc
or
out
push
sub
push
es
or
int3
scas
stc
insl
mov
cmp
push
xor
mov
sbb
imul
daa
stos
cmp
lea
and
push
inc
mov
nop
mov
sbb
jle
js
cltd
inc
jge
test
out
test
test
jne
ret
push
icebp
movsl
dec
fidivl
in
in
ffree
xor
sbb
je
xchg
loopne
adc
jg
sub
jp
imul
ja
pop
push
out
fucom
lahf
rclb
dec
dec
inc
lret
cwtl
xchg
mov
mov
fidivrs
jne
add
xchg
gs
inc
fucomi
pop
fsubrl
inc
dec
jp
mov
stos
call
inc
sti
push
arpl
out
xor
cmp
push
lods
ljmp
add
push
mov
xchg
push
movsb
lret
out
mov
add
or
and
cli
mov
pusha
call
push
jmp
dec
pop
mov
adc
jecxz
push
sti
add
dec
cmpsb
stc
add
leave
inc
jl
mov
jno
add
leave
test
jne
jb
xchg
fwait
push
idivl
mov
mov
andb
pop
jecxz
cli
pop
mov
clc
push
rcrb
add
cmpsl
jns
movb
inc
test
sarl
ret
jg
mov
adc
push
adc
adc
and
test
repz
xchg
cs
cmp
scas
sahf
and
inc
pop
scas
cltd
cmp
sarl
outsl
pop
jg
fisubl
sahf
fwait
xchg
adc
jecxz
cld
mov
mov
xchg
scas
xchg
in
pop
mov
sub
mov
cltd
jno
xchg
jg
mov
or
std
orl
jmp
icebp
lret
sub
cmc
xchg
mov
pop
mov
cltd
ret
jbe
mov
enter
fwait
outsl
add
incl
sbb
pop
loop
and
or
sub
xchg
sub
or
pop
faddp
rorb
aas
leave
cli
sub
insl
sub
mov
adc
jle
inc
pop
rolb
fwait
xchg
mov
inc
daa
pop
push
adc
xchg
fcompl
mov
out
cmp
fisttps
enter
push
add
adc
leave
and
add
mov
cli
pop
jp
sbb
jbe
and
xchg
sahf
dec
scas
mov
inc
xchg
aad
das
testb
fistpll
aam
push
fstps
add
push
mov
ds
dec
ljmp
sub
mov
pop
cld
scas
fldenv
sub
xchg
dec
jge
inc
xchg
add
inc
out
pop
push
push
pop
pop
in
mov
mov
aam
imul
fists
and
adc
es
inc
jnp
sbb
mov
xchg
ja
subb
xor
into
popa
das
inc
mov
lds
push
dec
in
addb
fdivs
testb
sbb
and
icebp
repz
pop
cs
fildl
gs
andl
jbe
popa
bound
ficompl
and
jecxz
jp
cmp
clc
pop
mov
mov
cmp
mov
xchg
cmp
adcl
aaa
pand
pushf
lods
sbb
inc
in
cs
mov
fcoms
nop
jp
int
mov
into
mov
les
leave
mov
sub
mov
jns
sbb
movsb
out
ffreep
sbb
outsl
push
jle
xor
std
adcl
sub
xor
in
xchg
cmpsl
sub
add
mov
out
and
je
loopne
ja
mov
stos
mov
xchg
xchg
lahf
push
loop
fnstenv
addb
add
ffreep
sti
fldcw
js
push
or
mov
arpl
xchg
into
subl
outsl
sti
xchg
ja
lods
push
and
mov
lods
jge
xor
dec
ficomps
stc
fsubrl
js
jg
mov
jno
mov
test
adc
cmp
std
std
frstor
push
cmp
out
fdivrl
in
jns
icebp
fsubrl
call
stos
pop
lods
jbe
xor
mov
mov
xchg
cltd
sub
out
pop
jns
mov
inc
gs
aas
test
mov
ja
pushf
dec
mov
sub
mov
mov
inc
das
xchg
lea
push
stos
cltd
mov
sti
ds
mov
push
jmp
xor
mov
stc
mov
adc
insl
and
mov
cmp
mov
adc
lret
out
add
jno
or
push
and
aas
mov
mov
addr16
data16
cs
mov
not
xor
nop
jg
cltd
mov
clc
popf
push
push
and
test
test
repz
sbb
clc
jne
mov
pop
movsl
jge
push
int
pop
pop
les
call
xchg
add
add
dec
insl
push
loope
and
or
xor
jb
pop
xchg
scas
sub
inc
or
sbb
xchg
gs
mov
inc
mov
push
adc
popf
mov
out
adc
mov
xchg
add
mov
adc
ret
stos
mov
sub
inc
ret
frstor
loopne
cmp
fistps
aaa
ret
scas
testb
repnz
xchg
mov
add
push
jl
cli
add
xor
sahf
pop
cmp
mov
mov
repnz
add
and
and
sub
jmp
imul
mov
popf
rorl
loopne
push
insl
icebp
mov
int
stos
jnp
test
push
jl
sbb
shl
insb
mov
adc
push
lea
dec
idivb
mov
adc
in
mov
sub
pop
inc
out
inc
fcmovnb
aad
lods
int3
xor
aad
jl
fwait
movsb
xor
cmp
ss
loop
sbb
mov
fs
cvtdq2ps
pop
add
notb
test
cmp
bound
dec
dec
cmc
in
or
lahf
xchg
jg
lods
jecxz
ss
lds
jb
jo
or
push
stc
mov
inc
dec
xchg
adc
pop
shl
jecxz
cmp
nop
pop
inc
cmpsl
call
lea
add
jl
sbb
aas
and
aam
shrl
test
inc
fdivrl
add
dec
push
out
jecxz
imul
xchg
sbb
mov
loop
mov
test
lock
xchg
outsl
sub
sahf
fnstenv
mov
imul
iret
aam
fnstcw
or
mov
mov
mov
sbb
test
sub
arpl
mov
fwait
xchg
adc
or
popa
in
pop
sahf
or
jge
arpl
aaa
into
sbbb
aaa
jp
ljmp
adc
cmc
xor
fucom
sahf
dec
outsl
mov
push
mov
lock
push
adc
and
je
add
insb
and
inc
pop
add
test
dec
push
sbb
aad
add
nop
pop
das
push
xor
out
mov
sub
sub
stos
fst
and
aas
sub
inc
mov
out
cmc
dec
adc
mov
or
stc
jo
mov
dec
test
les
adc
or
lods
mov
push
or
enter
hlt
in
imulb
mov
sub
movsl
fdivrs
imul
mov
push
test
or
dec
xchg
cmp
pop
mov
loopne
adc
sti
add
aaa
jae
iret
lret
mov
fistps
cmpsl
aas
pop
cs
mov
call
test
xchg
or
nop
cli
mov
ret
mov
in
adc
xchg
mov
inc
stos
xchg
or
dec
shr
ljmp
and
dec
and
bound
pop
pop
sti
jmp
and
sbb
pop
jg
lcall
clc
pop
or
cld
or
cli
inc
outsl
xor
test
cmp
xchg
sbb
js
push
xchg
or
jno
jo
push
test
mov
and
insb
sub
addr16
xlat
sub
mov
cwtl
mov
mov
shrb
lret
mov
loopne,pn
lret
and
ja
adc
sbb
mov
mov
pushf
fcompl
fildl
inc
inc
lret
and
mov
and
jmp
sbb
ror
pop
pop
mov
dec
dec
mov
xlat
sub
or
sbb
pop
xchg
sbb
stc
cmp
bound
ss
xor
xor
adc
bound
daa
pop
jmp
lods
mov
push
or
or
lods
fnsave
movsb
test
sbb
ret
ret
nop
fsubrl
std
hlt
outsl
and
mov
ret
cwtl
mov
rol
popa
das
jle
inc
pop
std
mov
xor
inc
jb
pop
cs
movsl
pop
scas
mov
push
adc
shlb
mov
push
in
cmp
sarb
and
sahf
xor
jp
adc
pop
and
rcrl
gs
ret
cwtl
outsb
std
mov
out
or
mov
add
in
dec
repz
ds
pop
xor
orl
cmp
addr16
inc
movsb
dec
adc
out
and
push
sub
mov
inc
and
sbb
mov
fbstp
mov
cltd
sub
fs
lahf
int3
cli
aaa
pushf
mov
in
jnp
outsb
xchg
jnp
push
dec
dec
dec
cmp
xchg
cmp
pop
outsl
sub
mov
sub
test
xchg
add
mov
cmc
rclb
enter
sub
arpl
mov
iret
inc
push
and
testb
xor
xor
or
cld
sbb
pop
dec
pop
inc
xchg
push
mov
repnz
mov
loope
push
mov
sbb
fildll
sarl
mov
xchg
or
pop
or
xchg
icebp
jno
xchg
fldenv
fidivs
test
pop
cmc
mov
out
movsb
dec
ss
ljmp
jb
jp
je
or
adc
fidivl
or
jecxz
mov
jno
ss
sbb
mov
xchg
sub
neg
xchg
ds
push
arpl
jb,pt
fmuls
cmp
dec
cmp
xchg
or
jge
test
lret
mov
ja
fidivrl
jge
lahf
mov
jle
add
sub
inc
jne
xor
jnp
mov
imul
jge
das
sub
push
test
push
xchg
test
push
and
pop
ja
pop
idivb
inc
call
dec
cmp
lods
mov
push
outsl
cmpsb
out
cmp
cld
cmpsb
dec
int3
mov
jle,pt
stos
sub
push
test
pop
mov
movsl
sbb
sti
inc
and
sub
push
repz
pusha
adc
fnsave
mov
mov
xchg
pushf
test
jae
sbb
jns
add
imul
sub
push
jge
mov
sbb
jp
sbb
ja
xor
pop
into
js
incl
push
pop
mov
pop
fstpt
les
sub
inc
and
mov
jno
cmp
inc
mov
push
sbb
mov
push
lahf
call
xchg
daa
je
push
mov
stc
fucomp
cmpl
sbb
cmp
loopne
test
fiadds
xlat
cmp
and
lods
lds
or
push
sbbl
sbb
int3
jnp
cmpsl
addr16
push
daa
test
adc
cli
and
movl
xchg
xchg
push
dec
das
pop
adc
jle
mov
insl
lds
xor
and
ret
loopne
mov
and
cld
and
lcall
or
cmpsl
mov
shlb
fldl
push
dec
mov
add
sbb
xchg
stos
mov
mov
cmp
test
xor
dec
push
pusha
jo
stc
repz
lock
sbb
mov
cwtl
test
lcall
dec
mov
xchg
int3
dec
cltd
outsl
hlt
out
out
loope
setne
pop
in
mov
adc
in
sub
test
lds
fwait
aam
cmp
jne
loop
loop
repz
dec
add
fwait
pop
cwtl
invd
loope
sarb
jae
cmpsb
sahf
mov
shl
icebp
mov
xlat
mov
je
outsl
loope
sbb
dec
cli
cmp
enter
leave
es
add
cmp
test
lods
sti
xchg
or
and
aad
cld
inc
inc
in
shll
aam
lret
sub
jns
insl
sbb
dec
mov
push
push
ljmp
pushf
jecxz
pusha
pandn
mov
loop
pop
or
faddp
and
clc
mov
clc
je
add
xor
ja
cmpsl
mov
mov
push
dec
sub
ja
cwtl
lahf
jge
or
xchg
mov
lret
stos
sub
inc
testl
cmp
adc
inc
push
mov
dec
test
rorl
rcrb
je
sub
sub
fidivrl
cltd
push
int3
xchg
aas
sub
loopne
cli
outsb
lret
in
mov
xchg
dec
movmskps
add
divl
or
sub
jbe
rorl
jno
ficoms
outsb
push
and
dec
ficompl
xlat
pop
icebp
hlt
call
or
insl
loope
out
mov
xchg
movsb
add
jbe
sub
xlat
and
fs
dec
cmp
fs
fists
ss
cs
and
push
add
es
out
inc
sub
test
mov
enter
mov
loopne
inc
or
jne
pop
outsb
sarb
xor
ljmp
sahf
pop
push
lret
jns
jns
testl
fwait
sbb
dec
fadds
add
pop
inc
and
adc
push
in
adc
sub
and
jb
add
in
loop
es
jo
out
mov
mov
repnz
aas
mov
mov
imul
adc
mov
icebp
xchg
adc
mov
cltd
xchg
push
xchg
jns
xor
dec
lds
cs
stc
or
js
fs
add
xchg
repnz
fbld
mov
lret
push
cmp
bound
xchg
sarb
mov
sbb
or
cld
cltd
and
mov
lock
lret
popf
test
ljmp
in
sbb
lret
call
pop
cmp
mov
rorb
xchg
mov
adc
sbbb
stos
jecxz
mov
dec
pop
adc
insb
int3
fdivrl
push
pusha
mov
cmpsb
push
dec
mov
or
daa
cs
addr16
push
aaa
shrl
jo
jne
mov
lds
push
stc
in
cli
in
sahf
jns
imul
orb
fsubr
in
outsl
xchg
dec
out
shll
xorl
jne
or
idivb
imul
outsl
pop
sbb
popa
fistl
mov
test
test
push
cli
in
mov
fwait
out
push
sub
add
adc
js
insl
mov
add
and
lahf
mov
cli
arpl
add
test
lock
fadds
subl
decl
insl
inc
mov
push
and
xor
stos
fldcw
hlt
pop
std
inc
test
repz
fistpll
outsb
cs
repnz
xchg
xor
inc
adc
xor
add
sub
scas
mov
and
std
hlt
pop
dec
inc
test
add
stos
xor
psrad
mov
ss
aam
xchg
jp
cmp
and
add
jmp
imul
cmp
in
dec
and
clc
ret
pop
cli
xchg
or
sbb
push
insb
imul
pop
or
int3
push
push
jmp
cmp
int
inc
jo
lret
loop
imul
mov
add
fsubr
mov
xchg
and
push
jno
das
loop
movsb
aaa
mov
cld
cli
in
gs
jae
jns
aas
out
sub
mov
mov
daa
in
fsubrp
popa
xchg
xchg
and
xor
inc
xchg
es
fsubl
adc
cmpsl
mov
sbb
aad
shlb
enter
sub
jecxz
decl
pushf
mov
xor
add
pushf
sub
sub
rcl
mov
xchg
iret
jg
jg
in
cmp
test
out
roll
pop
pop
mov
add
pop
gs
mov
sbb
sub
xchg
clc
mov
pop
imul
mov
mov
movsb
dec
das
stos
mov
shr
enter
sbb
je
sbb
or
xor
lcall
cli
icebp
jo
sbb
ds
jb
xchg
jo
push
aaa
push
mov
mov
hlt
and
pop
outsb
mov
sbb
stos
cmp
jno
add
cli
inc
jmp
imul
xor
push
jbe
adc
es
sbb
push
leave
cltd
cmp
gs
push
movsb
andl
popf
cmpsb
jmp
cmpsb
push
jp
shrb
popa
sbb
xor
and
das
pop
adc
dec
or
ficoms
and
xor
mov
mov
inc
bound
ds
es
jns
or
push
xor
dec
cmpsb
cmp
out
hlt
addl
and
add
sti
mov
pop
jmp
cmp
inc
dec
jne
roll
shr
or
mov
mov
mov
jl
push
iret
dec
inc
mov
icebp
pop
cmp
and
test
sub
roll
sub
pop
lahf
jmp
cmpsl
fucomp
push
bound
sub
out
or
inc
lods
sbb
mov
jb
xchg
push
mov
mov
xchg
cmp
cltd
or
cmp
pop
leave
or
stos
ret
iret
mov
loopne
lods
hlt
or
lcall
or
out
test
pop
mov
lahf
das
movsl
out
dec
icebp
mov
cmpsl
daa
or
fwait
push
xchg
mov
pop
cmpsl
lds
addr16
addr16
and
out
repz
lea
add
sub
ja
popf
nop
add
mov
sbb
adc
cwtl
mov
std
mov
pop
sub
icebp
ja
pushf
loope
dec
push
dec
pop
adc
cmp
outsl
and
mov
sub
mov
in
and
sbb
xor
or
xchg
dec
call
jae
in
sbb
repnz
hlt
mov
stc
popa
inc
xor
data16
gs
cs
fwait
mov
pop
inc
mov
sbb
dec
pop
pusha
sahf
lcall
jbe
pop
aad
mov
and
add
pop
sbb
dec
or
pop
jmp
je
out
xor
and
outsl
or
arpl
std
lcall
sub
sbb
ljmp
push
mov
cmp
ss
mov
cmp
xchg
repz
jecxz
roll
adc
lds
jns
sub
inc
aad
ficoml
pop
pop
sbbb
ja
sub
out
jp
or
cs
cmp
jmp
jge
addr16
and
push
or
add
sub
outsb
add
push
pusha
mov
push
lea
jmp
lea
call
mov
rol
rcr
and
add
not
pop
btc
bt
bswap
pop
cmc
cmp
pusha
pusha
pushf
sbb
pushf
call
movl
push
pusha
push
pushf
lea
jmp
shl
stc
jmp
sbb
cmp
bt
jmp
pusha
cmp
jmp
pusha
pushl
popl
mov
movb
pushl
ret
xor
push
push
xor
das
dec
xor
cmp
ret
inc
lods
mov
les
xchg
push
sbb
mov
xchg
int3
xchg
cmp
fstps
shlb
rcrb
add
std
add
cmpsl
xlat
sub
outsb
fwait
out
jns
mov
das
push
adc
lods
lds
or
sbb
jae
repz
add
movsb
sub
push
add
leave
aam
decl
inc
movzbw
not
mov
jge
push
pushl
xchg
call
pusha
mov
bt
push
or
mov
lea
je
jmp
sbb
sub
jecxz
ljmp
and
dec
mov
ja
pop
in
xchg
jg
je
jle
mov
andb
clc
mov
xchg
sahf
mov
imul
inc
cmp
hlt
push
push
pop
js
or
popf
mov
sub
mov
mov
loope
lcall
mov
jnp
xchg
cmc
cmpsl
sub
lods
pushf
aad
mov
push
sub
leave
popf
imul
jp
movsb
sub
push
aas
lea
movw
movw
mov
movb
lea
jmp
sub
call
push
jmp
pop
lcall
pop
repnz
push
or
and
mov
popf
cmp
aas
or
inc
mov
mov
cmp
daa
jmp
push
in
iret
loope
cmpsl
lods
enter
inc
lds
cmp
pop
or
addr16
popf
or
pop
push
or
jmp
add
cltd
and
outsb
clc
xor
std
add
ljmp
xor
xchg
and
arpl
push
popa
fwait
mov
sub
push
jns
mov
xchg
xor
aam
mov
mov
xor
loopne
and
jge
jge
cs
mov
fsubrs
ret
push
mov
clc
cmc
outsl
outsb
movsb
sbb
dec
cmpsl
cmp
iret
sub
or
jbe
iret
lods
icebp
mov
fcomp
test
lea
dec
xchg
push
adc
mov
add
adc
jb
lock
lock
add
inc
jnp
inc
lahf
pop
mov
push
out
cmp
leave
imul
imul
add
not
lods
jnp
xchg
pop
bound
int3
mov
sbb
pusha
push
sahf
aas
jp
leave
pop
cltd
xchg
pop
cmpsb
and
inc
stos
movsb
sub
rcrb
mov
movsb
daa
mov
dec
outsl
arpl
inc
jb
gs
pop
xor
imul
mov
mov
test
icebp
jne
iret
inc
lock
shll
mov
jecxz
push
pusha
push
faddl
sub
or
inc
lahf
adc
int
bswap
idivl
icebp
jg
lds
push
gs
pop
addl
loopne,pn
das
sbb
adcl
jp
jb
xchg
and
add
sbb
xor
rolb
scas
xacquire
lods
push
lods
jns
hlt
repz
addl
loop
test
push
imull
pop
popf
pop
jge
pop
lcall
mov
dec
mov
ret
out
sti
or
int3
cli
mov
jp
int3
mov
push
cmp
jge
sbb
xchg
aam
test
arpl
cmc
cmpl
pop
push
aad
jmp
jle
adc
and
pushf
push
adc
jbe
bound
lahf
jge
movsl
mov
mov
pop
adc
jne
ror
cmp
mov
test
xor
sbb
pop
jbe
ss
test
mov
mov
and
mov
popf
lock
cmp
lret
imul
imul
jne
cmc
cld
sbb
jle
lcall
or
jle
dec
fisubs
sbb
cmpsl
inc
in
cmpsl
outsl
jl
jle
xchg
lcall
pop
xchg
mov
out
pushf
xchg
sti
mov
out
pop
cmpsb
loopne
and
jmp
jmp
xor
es
lcall
xchg
fcoml
xor
popf
cltd
push
pop
sbb
fs
jne
pushf
mov
mov
movb
lea
jmp
pop
xor
push
add
cs
bound
cs
sbb
mov
setle
insl
push
push
sti
fistpl
sub
in
dec
sbb
jle
fwait
insl
xchg
push
roll
stos
dec
cmp
cmp
adc
lahf
scas
ja
cmp
adc
and
mov
mov
pop
xchg
cmp
push
xor
xchg
test
xor
adc
mull
push
sub
sbb
pushl
lea
je
test
clc
jmp
pusha
mov
movw
stos
jmp
mov
push
lea
jmp
scas
lea
repz
divl
gs
incl
dec
and
test
jnp
mov
mov
or
ja
and
call
adc
shrl
sbb
movsb
and
test
pushf
mov
lea
call
clc
cmp
call
adc
fstp
subb
mov
jecxz
lret
mov
lods
adc
sbb
or
stos
fldcw
add
xchg
neg
and
int3
sbb
aas
push
xchg
cmp
cmp
in
jp
lret
mov
pop
add
pop
aaa
rorl
mov
lcall
stc
push
inc
fnstenv
jmp
xchg
ljmp
js
insl
stos
dec
mov
pusha
fiadds
outsl
ret
lock
cmpb
mov
ror
mov
repz
sub
testb
testl
sahf
pop
aad
xor
fidivrs
in
sbb
jbe
pop
popf
xor
or
push
cltd
fwait
cmpsl
pop
mov
mov
and
and
jno
and
jle
rcrl
stos
xchg
or
sbb
in
orl
mov
out
mov
fcomps
dec
mov
xchg
push
loopne
push
call
out
das
notl
ds
nop
mov
mov
scas
cmpsb
sub
pop
cmp
ljmp
xchg
enter
shrb
enter
jns
in
and
dec
stos
arpl
inc
ja
and
xor
xlat
cltd
fstpl
inc
and
or
outsb
push
rorb
adc
jp
insb
sbb
add
btc
call
pushf
movl
jmp
movsbw
lea
jmp
call
lea
pushf
jmp
pop
daa
push
inc
push
test
addr16
or
popf
cmp
push
jno
fnstenv
ja
rcrl
cli
cmp
sahf
dec
fstpl
inc
lock
sbb
icebp
sub
pop
mov
cmp
mov
xchg
xor
pushf
outsb
fcompl
jnp
test
jle
inc
lahf
push
repz
push
out
push
ret
lret
pop
push
cmp
add
xor
movl
xlat
mov
cmp
dec
mov
push
inc
adc
data16
nop
les
push
mov
movsb
and
pop
add
xchg
inc
dec
mov
xor
adcl
cwtl
jbe
lcall
and
dec
lods
xor
xor
dec
bound
lret
rcrb
mov
sub
rcl
cli
pop
aaa
pop
sub
or
test
ljmp
addl
or
xor
mov
mov
js
push
xor
jo
ljmp
mov
or
push
nop
dec
push
fcomps
movsb
and
imul
jle
icebp
in
scas
jp
mov
les
mov
mov
xor
and
and
cmpsl
fwait
pop
enter
dec
out
mov
mov
xchg
out
push
mov
jmp
mov
mov
jp
sbb
push
cmp
sbb
leave
push
lea
je
bswap
not
lea
xchg
movzwl
mov
pusha
bswap
lea
mov
pusha
bswap
mov
jmp
jmp
bswap
movsbw
lea
pushf
pushl
mov
call
imul
scas
popa
or
wbinvd
and
inc
shl
pop
icebp
push
fnsave
fucomi
sahf
outsb
sbb
fldl
or
mov
or
dec
popf
dec
mov
push
sub
jne
mov
jno
push
int
mov
sub
jno
mov
jg
loop
fldt
mov
mov
pop
in
insl
mov
add
vminpd
mov
arpl
imulb
clc
xchg
les
movsb
and
xchg
call
lea
jb
test
pusha
cmp
jmp
pusha
pusha
jmp
add
dec
outsl
popa
fs
imul
add
daa
mov
mov
dec
in
or
iret
xor
mov
shlb
xchg
mov
xor
push
sub
add
dec
pusha
push
adc
pop
movsb
add
ljmp
xchg
and
dec
sbb
lret
adc
nop
sub
popa
xchg
add
jb
jno
rcrb
test
inc
fs
lods
xor
jne
lahf
jno
sub
and
stos
iret
push
jns
or
lret
cmp
js
fldcw
add
mov
jecxz
mov
outsb
adc
in
pop
stos
sahf
lret
cmp
xor
add
mov
adc
call
lds
mov
adc
push
nop
cli
test
aad
jae
sub
insl
mov
push
add
setae
jno
mov
stc
in
push
pop
and
mov
movsb
pop
daa
pop
cmpsl
movl
pushf
lea
jmp
lea
je
test
push
add
pusha
cmp
pushf
lea
jb
cmc
cmp
call
xchg
jne
xor
leave
pop
fiaddl
jo
cwtl
bound
mov
xor
movsb
pop
inc
push
loopne
mov
hlt
and
sub
mov
jne
setb
sub
pop
mov
inc
push
and
and
pop
aas
add
push
icebp
out
dec
es
xchg
mov
cmp
jo
or
add
pop
mov
mov
sti
xor
lock
mov
sub
sbb
mov
pop
xchg
jo
adc
pushaw
xor
inc
je
sbb
inc
aam
enter
lea
pushl
call
mov
lahf
setge
lahf
lea
pushl
call
lds
xorl
cld
or
cwtl
xor
les
jbe
mov
daa
push
pop
cwtl
int
pop
mov
pop
imul
rcl
aaa
stos
jge
mov
jae
scas
xchg
inc
xor
shrl
mov
popa
clc
mov
jo
inc
aaa
cmc
xor
mov
sbb
xor
mov
ret
outsl
xor
dec
dec
jmp
sbb
mov
outsb
adc
xor
jns
dec
jmp
fucomi
jmp
jg
fabs
mull
lahf
sbb
mov
sub
mov
pop
ss
filds
scas
pop
adc
pop
push
xorps
pop
sahf
jle
in
fdivl
cli
cmp
js
sbb
inc
xchg
mov
lea
jne
inc
test
mov
call
mov
pop
lea
seta
movzbl
mov
not
call
movl
movl
pushf
mov
lea
jmp
adc
pushf
stc
sub
test
jmp
inc
or
cmp
inc
lret
add
cmp
insl
test
pop
fucom
adc
lock
push
test
xchg
mov
nop
mov
pop
xor
fstps
test
arpl
std
ja
lock
mov
bound
or
sbb
lea
call
pusha
lea
jne
call
cmc
cmpb
pushf
lea
jne
xor
sub
bswap
sar
rcr
mov
and
call
inc
jbe
inc
xor
push
test
les
inc
imul
pop
dec
lea
mov
sti
lret
loope
sarb
adc
xor
xor
ds
sbb
jmp
adcl
xor
dec
adc
sbb
fs
jae
pusha
pushf
lea
pushf
mov
pushl
lea
call
call
lahf
in
mov
mov
mov
pop
leave
lahf
lds
iret
pop
mov
xor
adc
lock
or
pop
popa
lret
in
cmc
movsl
sar
push
mov
adc
mov
jl
sbb
push
push
mov
ficoms
dec
lret
es
and
sub
push
xchg
jle
sbb
cltd
loope
cmpb
push
sub
push
push
rorb
lock
cltd
loope
fistpll
mov
sbb
movsl
pop
jnp
jo
nop
xlat
scas
push
xchg
mov
jae
sbb
dec
sbb
add
nop
lea
jne
movzbl
movb
lahf
movsbw
movsbw
push
movzbw
lea
pusha
pushl
call
and
xor
in
push
cmpsb
jp
jl,pt
mov
mov
sbbl
cld
scas
gs
dec
add
fstp
mov
icebp
sub
push
aam
negb
inc
jge
outsl
adcl
inc
jmp
lret
inc
mov
aas
fdivs
cld
jbe
sarl
and
out
jmp
in
mov
out
push
aam
dec
jns
push
mov
sbb
int
xor
add
aas
xchg
jmp
fnsave
sbb
mov
inc
dec
push
mov
push
xor
mov
lret
mov
xchg
cmpsb
fdivl
sbb
shr
test
insl
xchg
xor
jmp
fildll
pop
xchg
xor
cmp
es
push
push
pop
clc
push
mov
xor
in
sub
insl
jae
sub
and
jo
jp
sbb
bswap
movsbw
pushl
popl
lea
mov
movzbl
cwtl
movl
lahf
call
pushf
lea
jb
pusha
cmp
push
lea
ja
stc
call
sub
sub
das
add
bswap
mov
not
sub
add
add
inc
mov
rcl
mov
jmp
shr
imul
xor
hlt
outsb
mov
or
jle
xor
pusha
nop
and
xchg
cltd
pushf
inc
lret
dec
adc
iret
test
loop
add
mov
jnp
sub
push
mov
inc
aas
arpl
add
not
hlt
dec
scas
mov
cmp
mov
leave
or
jbe
imul
add
and
mov
push
mov
sbb
xor
sub
push
aas
sahf
enter
shrb
push
rol
aaa
sti
mov
repz
sbbl
movsb
sbb
inc
jmp
xchg
mov
mov
pop
setge
push
setl
not
mov
mov
mov
mov
pushl
mov
bswap
jmp
lea
jne
push
push
mov
mov
pusha
movb
pushf
lea
jmp
mov
pusha
xchg
bswap
pushl
popl
cwtl
mov
call
mov
fistps
aam
sarl
jbe
push
jae
pop
add
push
adc
cmp
sbb
cmp
add
push
xorb
clc
aam
sbb
pop
xor
xchg
pop
jecxz
dec
mov
daa
inc
imull
push
jae
lret
sub
push
pusha
and
inc
movups
in
test
jmp
xor
push
out
mov
sarb
cmp
movaps
add
in
mov
shlb
and
jmp
ret
jbe
dec
mov
push
sbbb
sbb
inc
add
inc
or
jbe
pop
ljmp
frstor
fildl
xor
pop
dec
or
push
mov
adc
into
sahf
pop
movsb
dec
mov
out
dec
cmp
cmp
mov
cld
fadd
cwtl
mov
push
es
xor
adc
push
and
xchg
into
ljmp
dec
add
adc
xor
dec
subb
sbb
lea
lahf
sbb
loope
ret
andl
sbb
mov
and
movsb
cld
or
mov
pop
fwait
push
movsl
fwait
jl
mov
bound
loop
xchg
fwait
lret
and
and
mov
idivb
or
in
jo
inc
pop
jae
xor
int
sbb
lcall
cmp
mov
movsbl
movzbw
movsbw
pop
pushf
movb
pushl
ret
pushf
mov
movw
pushf
pushl
ret
push
pop
sub
repz
mov
addr16
sarl
inc
and
stos
iret
pop
and
adc
inc
xor
xchg
sti
xrelease
xor
out
adc
or
or
stos
cmpsl
fadds
scas
cmp
push
dec
sub
push
sti
adc
aaa
mov
into
fdivrl
cmpsb
jg
je
and
pop
pop
pop
sarb
data16
jno
mov
pushf
data16
push
rcrl
adc
pop
jb
fwait
out
push
sub
jl
aam
mov
inc
mov
gs
pop
xor
mov
mov
iret
push
pop
inc
adc
sbb
pop
xchg
sub
cli
cmp
add
je
mov
hlt
mov
fisubrs
aad
fsubs
daa
test
rcl
loop
push
xor
enter
in
sbb
inc
test
cmp
addl
cs
push
add
push
test
mov
push
mov
adc
inc
icebp
div
js
insb
out
inc
sti
sbbb
mov
fsubrl
sub
mov
push
cmp
cltd
or
mov
ret
sbb
pusha
lds
lods
in
outsl
xchg
push
movsb
shl
xor
clc
sahf
push
xchg
les
sbb
mov
push
idiv
cmp
or
enter
jg
pop
out
out
iret
aam
jle
sti
sub
shrb
insl
mov
fchs
mov
rcll
enter
jle
mov
push
xor
sahf
add
dec
cwtl
or
clc
adc
cmp
mov
mov
mov
rorb
push
int
repz
inc
xor
jns
mov
inc
xchg
adc
xchg
loope
shr
dec
or
mov
sub
and
repz
and
mov
jecxz,pt
push
bound
lds
std
push
cltd
out
cmp
aaa
and
cmp
push
sbb
cwtl
shll
xchg
dec
inc
scas
jb
sub
subps
xchg
cmp
sub
js
push
rolb
push
gs
fdivrp
push
mov
lret
stos
out
inc
jg
in
push
add
inc
mov
insb
dec
xchg
fs
mov
dec
lret
enter
scas
adc
mov
and
pop
out
xor
dec
add
test
xchg
sub
adc
sub
adc
in
xor
std
jmp
pushl
movl
jmp
shr
mov
jmp
xor
sbb
leave
pop
movsb
jl
out
inc
sub
pusha
je
jg
cmp
js
out
aaa
test
adc
pop
mov
mul
cmpsl
lret
sti
or
sub
decl
das
and
sarb
jg
mov
imul
jle
jbe
sbb
xchg
shlb
lahf
jge
loopne
in
dec
sub
mov
int
bound
sub
scas
movsl
xchg
jl
arpl
jns
push
scas
push
mov
aas
popa
cmc
push
xchg
in
jo
loopne
mov
mov
mov
rclb
ljmp
into
mov
scas
push
adc
fsubrs
out
sbb
sbb
sbb
mov
jmp
loope
mov
rclb
aad
lds
ljmp
xchg
or
sbb
outsb
enter
movsb
outsb
or
xor
adc
or
push
in
out
push
daa
lret
dec
mov
or
ds
sbb
push
cli
inc
lahf
sbb
pop
jnp
mov
insl
jno
xchg
push
push
stc
pop
test
lret
call
adc
cs
rcrb
pushl
cmpsb
add
xor
and
notl
adc
out
xchg
test
sbb
inc
or
sub
mov
push
sbb
mov
jmp
fsubrl
pop
in
jp
xchg
jmp
fldl
test
xchg
outsl
sbb
icebp
dec
loop
mov
push
insl
cmpsl
insl
sbb
les
movsb
or
es
stc
sarb
fdiv
jl
in
outsb
popa
xchg
cmpsb
or
sub
js
repz
sahf
and
aad
pop
adc
fbld
iret
mov
or
sub
aas
inc
out
testb
jg
cli
sub
aad
gs
cmp
loope
mov
test
fdivs
and
push
xchg
lret
sahf
xchg
jno
sub
mov
je
icebp
out
outsb
ljmp
pop
mov
lahf
inc
add
rorb
out
add
add
arpl
aas
outsb
lods
aad
insb
dec
jp
or
mov
or
notl
loope
aad
jmp
adc
jmp
test
cmp
push
mov
dec
mov
les
call
lcall
ljmp
popf
imul
push
lret
push
push
xor
movsb
adc
pop
jmp
sbb
ljmp
cmpsb
inc
mov
bound
mov
hlt
sahf
mov
loop
push
arpl
push
jl
int3
and
xchg
cmp
inc
enter
arpl
out
ror
xor
movb
and
lods
addr16
cwtl
cwtl
add
outsl
inc
orb
mov
into
out
stc
mov
cltd
rorl
xchg
stos
mov
mov
ret
add
mov
aas
mov
push
aaa
mov
adc
add
bound
xchg
dec
cmpl
or
arpl
arpl
fadds
dec
into
or
mov
xor
mov
loopne
jns
add
movsb
adc
mov
insl
cmp
cmc
cmp
push
mov
pop
xchg
loopne
movsb
xor
pop
pop
inc
cmp
mov
repnz
push
dec
cli
jp
dec
jg
xchg
loopne
mov
cmpsl
add
lcall
idivb
std
test
rorl
mov
pop
out
lcall
test
jnp
sarb
sti
xor
aas
jne
sub
inc
or
add
addr16
fsubs
sub
push
lret
mov
mov
sub
inc
xchg
add
dec
mov
and
out
pushf
xchg
sub
sahf
rcrb
fcomp
cmp
cmpsb
shrb
sbb
das
in
jne
std
sarl
jae
mov
into
mov
pop
add
and
mov
jo
xor
js
inc
dec
mov
and
inc
xlat
in
cwtl
insb
xor
and
loopne
mov
ds
sub
pop
mov
ficompl
ret
clc
sahf
and
movsb
and
lahf
dec
lcall
jl
xchg
clc
cmp
out
lds
xorb
aam
gs
add
jb
dec
mov
mov
loopne
mov
sub
and
test
pop
or
in
inc
je
in
cmp
sbb
fisttpll
in
inc
xchg
orb
mov
mov
das
xchg
sarb
cmp
lret
push
cmp
movsl
movl
dec
pop
aaa
addr16
xchg
pop
ret
adc
jp
sbb
shlb
add
inc
loop
dec
rcrl
jbe
aam
shl
cmpsl
inc
xorl
popf
dec
xchg
ficompl
fsubrl
adc
in
faddl
adc
lock
dec
or
fistl
dec
ss
adc
jmp
xchg
repnz
in
mov
cmpsb
movsl
sbb
cwtl
add
sub
hlt
add
cmc
pop
jmp
or
js
cmp
and
pushf
fisubrs
mov
adc
mov
outsl
test
imul
rcrb
inc
push
in
mov
or
and
iret
aam
into
stos
mov
xorb
xor
pop
xor
jle
mov
aam
shrb
lcall
pop
inc
in
dec
adc
add
iret
sbb
sbb
adc
pusha
nop
jp
and
mov
or
mov
pop
sub
sbb
inc
pop
dec
sahf
push
mov
mov
xorl
dec
pushf
js
cmpsl
pop
das
pop
inc
cltd
sti
pop
xchg
cwtl
mov
arpl
dec
mov
xor
pop
pop
in
ret
add
jmp
cmpsb
sti
psllq
cmp
jp
push
shl
sub
cmp
sub
cmp
cwtl
outsb
daa
push
movsl
inc
xchg
addr16
adc
imul
add
sub
lahf
sbb
inc
imul
loope
and
or
jle
cwtl
or
mov
pop
outsb
mov
mov
aad
pop
xchg
xlat
fnsave
loope
loope
fstpl
inc
cmp
pop
divb
cwtl
nop
in
iret
xrelease
jp
sti
push
adc
sbb
push
add
add
js
std
lcall
add
repnz
push
lea
jne
sbb
ror
ror
shld
mov
inc
clc
bsf
sub
neg
jmp
call
pusha
lea
jne
bswap
mov
movb
push
pusha
push
movsbw
mov
bswap
lea
push
pushf
pushf
jmp
pushf
pusha
pusha
jmp
adc
lcall
std
jnp
movsl
sti
sbb
jecxz
sbbb
jb
addr16
mov
or
cmp
shlb
jl
or
repnz
nop
pusha
sarb
xchg
jecxz
xchg
lret
movsl
int3
xchg
outsb
cmp
imul
fs
ror
adc
xor
pop
and
loope
push
loopne
shrb
xor
sarl
push
mov
xchg
pop
and
leave
sbb
pop
pop
sbb
and
lahf
dec
js
es
mov
cmp
sub
shlb
lret
ret
cmp
aaa
mov
loop
pop
jmp
adc
rcll
aam
shl
es
sub
lahf
cs
fwait
orl
adc
movsb
or
pushl
push
mov
mov
movw
pushl
ret
test
sub
fucomi
jns
push
xor
add
into
or
inc
outsb
xchg
sub
aam
ret
pop
outsl
jae
xorb
jnp
cld
push
out
adc
or
loop
push
lret
jne
inc
jae
sbb
je
cmpb
push
inc
dec
je
pusha
cmp
sbb
add
shl
pushl
test
pushf
add
pushf
pushl
lea
jl
lea
pusha
jmp
pusha
not
rep
sete
lea
pushf
pushf
mov
mov
xchg
lods
xchg
movzbw
not
push
xchg
inc
clc
call
call
adc
mov
inc
push
bound
adc
cmpsl
dec
pop
jne
pop
lods
add
and
popl
push
mov
addr16
in
dec
mov
push
jne
sub
loope
cltd
add
xchg
cmp
mov
addr16
mov
or
mov
xchg
jl
and
mov
mov
xor
sub
cmp
add
pop
stos
mov
sbb
inc
pop
outsb
jno
scas
adc
dec
rol
das
cmp
data16
pop
movsl
ret
adc
loope
dec
les
inc
jb
cwtl
jg
in
or
adc
sarb
inc
push
fistpl
fisttpll
cmp
mov
cmp
jb
push
popf
mov
jne
xor
sahf
mov
lcall
filds
xor
sbb
adc
int
jg
sub
scas
loope
dec
jb
cs
fdivs
movsl
icebp
push
shl
rorl
sbb
cmpl
xchg
cmp
popa
adc
adc
cmp
inc
or
lcall
cli
out
mov
jecxz
xchg
fildl
push
sub
push
lahf
in
fildl
out
add
movsb
add
or
imull
dec
lea
pop
add
or
sbb
icebp
push
cli
adc
jno
pop
push
cli
xchg
adc
jb
xor
jo
mov
cli
jno
xchg
shlb
jb
shll
cli
jo
push
cli
jb
xor
push
rcll
xchg
cli
jno
mov
shlb
jmp
jmp
add
mov
ret
sarb
call
mov
in
xor
sub
call
push
add
sbb
push
and
inc
bound
push
pushf
push
pop
aaa
orl
mov
sbb
xchg
sbb
nop
lret
mov
add
push
add
mov
inc
inc
shr
sbb
jno
out
bound
add
xor
cmp
mov
fdivrs
sbb
fs
jae
push
movzbw
movzbw
cwtl
xchg
pusha
pushf
mov
movsbl
not
rdtsc
jmp
pushf
lea
je
pusha
movl
mov
mov
lea
jmp
jb
cmp
mov
jmp
jnp
push
jecxz
cmc
push
das
mov
dec
sbbb
imull
in
sub
sbb
ja
adc
jmp
in
add
je
push
mov
idiv
adc
lahf
ljmp
mov
mov
in
push
push
aam
jg
adc
sub
fdivl
mov
cmp
sbb
fs
ja
test
add
sub
test
add
movzbw
bsr
bts
pushf
mov
call
add
add
add
add
pop
or
add
add
jmp
add
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
in
std
call
pushl
popl
pushf
pushf
pushf
pushf
pushl
ret
pushf
jmp
into
xchg
hlt
dec
dec
sbb
and
movsb
or
xchg
lock
mov
cld
mov
call
ret
aam
pop
sub
cli
inc
pop
rolb
shlb
cs
cltd
xchg
insb
xchg
icebp
aas
pop
rcrb
sub
dec
cs
lret
scas
in
aad
shrl
jmp
sbb
insb
and
push
mov
mov
movb
pushl
ret
movw
not
mov
inc
pushf
call
jmp
cmc
mov
xchg
xchg
fnsave
sahf
sbb
movsb
dec
jo
jl
cld
cmp
dec
mov
mov
idivl
int3
lods
or
sti
lods
icebp
sbb
je
adc
mov
lods
sbb
rcrl
scas
into
or
scas
mov
ror
out
push
scas
xchg
fs
inc
and
cmp
stc
rcrb
imul
mov
pop
imull
decb
js
arpl
xchg
xor
popa
sbb
and
and
sub
mov
aam
lcall
cmp
xchg
cld
or
shl
lcall
or
shrl
lret
das
cmpsl
mov
inc
mov
inc
stc
jmp
pop
movaps
or
mov
jmp
loope
sub
sub
jmp
mov
movsl
adc
shrl
mov
push
or
pop
out
sub
sbb
outsb
sbb
mov
out
in
scas
cmpsb
hlt
mov
pop
scas
cli
outsb
es
jae
push
sub
jge
mov
imul
add
jmp
std
inc
add
jnp
fwait
mov
xor
mov
pushl
pushl
ret
call
sub
lahf
lea
jmp
call
jmp
jbe
lcall
int
cmp
sbb
pop
out
sbb
adc
dec
sub
pop
mov
icebp
lods
mov
test
lea
adc
les
adc
inc
arpl
add
push
lahf
adc
xchg
js
ret
push
movsb
into
int3
clc
bnd
mov
xchg
int3
push
add
movsb
add
mov
add
aas
aas
xor
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
push
inc
inc
inc
push
inc
pop
push
inc
pop
add
inc
and
sub
or
pushf
jmp
call
call
lea
call
movzbw
add
rcr
daa
push
shl
mov
bsr
sub
bswap
mov
stc
call
jmp
cmc
pusha
pusha
or
push
jmp
call
pusha
jmp
xchg
call
jecxz
mov
xchg
sbb
lea
lds
shll
mov
add
out
mov
cltd
dec
fcmovnb
imul
fwait
cltd
lock
push
add
jecxz
cmp
push
test
xorb
arpl
inc
jle
mov
jae
mov
xchg
outsb
sub
inc
aas
out
sub
inc
nop
stos
xchg
std
mov
cmp
jl
pop
repnz
fistl
negl
xor
and
stos
cmc
and
push
out
les
imul
xor
mov
jo
mov
pop
cltd
and
or
push
and
lcall
je
stos
mov
jmp
mov
fistpl
pop
xchg
sbb
outsl
xchg
xor
out
xor
push
lahf
sbb
aaa
push
cwtl
stos
mov
xchg
xor
loope
aam
in
shrl
sti
data16
pushf
orb
pop
sub
pop
adc
js
jl
or
mov
loop
in
nop
ret
mulb
jecxz
loope
stc
pop
jmp
add
arpl
shr
test
call
call
mov
movb
lea
ja
bt
test
sub
bsr
shl
add
rcr
mov
shl
xor
mov
bt
clc
cmp
push
repnz
jmp
mov
clc
ror
bts
shl
test
pop
xor
not
sub
rcr
bts
neg
inc
inc
btc
bsr
stc
not
cmc
test
movsbw
xor
jmp
cmp
push
daa
jne
test
rclb
cld
cmpsb
loop
push
push
xor
sbb
orb
sub
je
dec
and
insl
or
dec
imul
faddl
aas
inc
push
fimull
cltd
xlat
sub
push
and
inc
movsb
loop
sub
xor
loop
in
mov
hlt
add
fidivrl
add
inc
sbb
push
std
jbe
cmp
push
cmpsb
out
loop
test
iret
push
repz
and
pop
inc
mov
push
or
and
mov
jl
sbb
push
fs
xor
scas
sbb
and
icebp
add
mov
add
pop
sarl
gs
dec
mov
lahf
push
in
jns
sub
push
mov
or
adc
test
popf
imul
fistl
mov
jb
mov
xor
xchg
cmp
incb
jns
ljmp
and
and
mov
shrb
jb
std
out
mov
std
ror
adc
test
jg
aaa
imul
push
push
inc
push
cmp
cs
insb
add
outsb
mov
push
movsl
mov
mov
std
jno
add
cltd
fsts
cmc
adc
inc
mov
jecxz
sahf
ljmp
loope
xchg
inc
cld
jne
insb
out
leave
leave
jns
add
int3
scas
xchg
insb
or
sbb
into
sub
xor
loop
stos
iret
pop
pop
inc
fcoms
cli
out
loope
mov
mov
fs
jnp
js
jge
es
les
xor
or
test
js
and
mov
xor
push
pop
pop
xchg
stc
adc
pop
mov
gs
aas
popa
push
test
mov
addr16
mov
xchg
fs
or
int
xlat
bsr
mov
mov
sahf
shl
sub
adc
and
div
xchg
in
adc
cwtl
pusha
mov
cmp
gs
or
adc
test
cli
add
lea
fld
out
test
jl
fistpll
jb
in
icebp
repz
out
xchg
out
inc
xchg
mov
mov
shll
ljmp
mov
add
add
add
mov
sub
add
jbe
push
xor
adc
push
add
add
sub
mov
push
pop
add
add
not
pop
push
inc
mov
pop
add
add
stos
dec
mov
mov
push
add
add
lods
fimull
dec
mov
adc
add
ljmp
push
or
add
cli
and
push
addb
add
mov
push
aas
add
add
inc
mov
sldt
add
dec
dec
and
mov
or
add
cli
adc
dec
push
mov
jnp
add
xchg
pushf
cmp
push
test
add
imulb
lods
push
ret
add
add
pop
mov
pop
add
add
test
mov
adc
add
dec
sbb
ficoms
mov
test
js
adc
mov
sldt
add
js
push
ret
add
push
mov
jns
cs
mov
add
sub
inc
mov
and
bound
lcall
add
inc
mov
insb
add
add
push
stc
cwtl
mov
push
cld
add
add
decl
xchg
cltd
pop
mov
stos
pop
add
jge
jo
mov
int
add
cmpsb
push
repz
stos
lods
push
and
add
push
sub
pop
mov
or
add
imulb
mov
push
add
add
gs
jno
mov
fsubl
add
fisubs
out
jns
mov
lret
add
stc
cmp
cltd
inc
mov
or
add
mov
fistpll
dec
and
add
adc
push
daa
add
add
mov
sub
add
sbb
xchg
lods
dec
mov
push
add
add
lahf
jne
ds
insb
add
add
rorl
in
bound
add
push
les
sldt
add
xchg
push
or
ret
push
sldt
add
inc
mov
sldt
add
sub
test
add
add
and
push
repz
add
jle
pop
jge
mov
xlat
inc
sbb
and
xchg
mov
jecxz
xor
xchg
jnp
leave
pop
rcl
repnz
lahf
lods
and
mov
les
add
pop
or
lock
movsb
imul
dec
adc
fldcw
sbb
movl
sahf
lcall
sub
cmp
test
dec
sub
fwait
cmpl
scas
outsl
xchg
push
sbb
ret
add
fwait
addr16
decb
repz
xor
cmpsl
pop
mov
pop
add
sbb
rclb
jle
mov
adc
aam
aaa
leave
sub
push
in
loopne,pt
int3
movsb
lcall
add
out
or
movsb
inc
out
mov
pop
and
or
sbb
pushl
popl
pushl
mov
pushf
pushl
ret
test
mov
add
cmp
inc
sub
xchg
shlb
jp
adc
sbb
loope
rcr
cli
or
sub
xor
lahf
jae
test
lds
xchg
out
sub
mov
test
repnz
lea
inc
jns
ret
cwtl
imul
mov
jge
adc
add
jbe
and
dec
sub
adc
and
les
ret
mov
mov
pushf
pushf
mov
lea
jmp
pusha
lea
call
bt
cmp
stc
cmp
push
jmp
push
lea
call
pushf
xchg
pusha
mov
pushf
lea
jae
setae
xchg
cwtl
mov
pushf
movb
movsbw
mov
pop
lahf
not
lea
movb
call
jmp
addr16
adcb
repz
mov
mov
jmp
mov
sarb
xchg
or
lock
xor
push
add
loop
int3
pop
pop
or
pop
les
push
mov
dec
add
clc
sbb
or
movsb
push
shlb
xlat
cmp
aas
lahf
cltd
popf
ds
daa
repnz
push
imul
ljmp
mov
inc
and
cli
mov
sbb
and
out
arpl
loope
or
sbb
jmp
pusha
lea
jb
or
sub
cwtl
btc
mov
cmc
cmp
call
xchg
int
cmp
inc
cmp
mov
xchg
jb
sub
fadds
jl
sbb
movsl
dec
adc
pushf
push
add
aad
ret
in
adc
in
xchg
jg
sbb
and
sbb
sub
add
clc
sarb
push
mov
test
sbb
cli
test
add
push
mov
mov
int3
and
test
xor
sub
add
xchg
in
cmpsb
nopl
sbb
lahf
aaa
repnz
and
pop
icebp
push
mov
jmp
dec
call
push
xchg
and
mov
movsb
jo
test
les
jo
xor
in
jge
inc
xlat
add
mov
adc
sbb
xorl
out
in
mov
popa
push
aas
adc
or
mov
in
xor
nop
jle
add
ja
xor
or
jae
enter
outsl
mov
int3
mov
push
xor
in
sub
and
in
mov
es
jmp
or
or
inc
js
andl
addr16
mov
sbb
cld
mov
fstl
inc
out
mov
cwtl
fdivrs
push
clc
jae
dec
nop
pop
repz
call
adc
inc
sarl
dec
outsb
mov
mov
xchg
out
xchg
mov
lock
bt
mov
movzbl
btc
adc
mov
mov
test
cmp
bt
sub
call
jmp
lea
pushf
push
call
push
call
pushl
popl
push
pushl
mov
push
pushl
ret
pushf
lea
call
pushf
pushf
pushl
pusha
lea
jae
movzbw
lea
call
mov
mov
lahf
xor
lea
stc
adc
mov
jo
sbb
in
jecxz
push
mov
or
push
inc
xor
push
scas
ret
scas
pop
pusha
xchg
and
sub
xor
sar
jl
movsb
push
cwtl
shr
cmc
into
fcoml
jno
xor
pop
lret
repnz
insl
lea
xor
add
ret
scas
push
mov
gs
lods
push
adc
or
pop
push
or
mov
mov
inc
lods
dec
adc
adc
jg
push
adc
add
mov
inc
loopne
nop
sub
lahf
sbb
push
and
aad
push
mov
or
mov
jmp
mov
xchg
jmp
iret
fwait
aaa
mov
bound
fs
cld
and
mov
lods
pop
cmp
ret
lahf
fisubrl
adc
aad
mov
mov
lea
movb
movb
movl
push
pushf
pushl
popl
mov
pushl
ret
push
call
daa
mov
jmp
dec
stos
lret
fisttpll
es
cmp
in
mov
test
out
dec
je
in
inc
in
xchg
outsb
in
pop
outsb
push
inc
and
and
fnstsw
mov
cmp
cmp
mov
orl
leave
fsubl
pop
mov
repz
mov
sarl
orb
stos
ljmp
cmp
jp
and
lcall
mov
cltd
cmpl
nop
xchg
cmp
xchg
mov
ljmp
test
and
in
adc
js
jmp
mov
popf
jge
sub
mov
mov
pushl
stos
push
pushf
lea
jmp
mov
mov
pushf
call
lods
pusha
call
pushf
call
push
pusha
movl
pushf
pushf
lea
jmp
rol
movb
and
not
mov
call
movl
jmp
pushf
lea
jne
bsf
bts
bts
not
mov
test
or
pusha
call
call
inc
push
mov
pushf
pusha
lea
jmp
test
push
mov
pushl
popl
movb
bt
cmp
pusha
call
stos
lea
jae
pusha
push
pusha
mov
pushf
pushf
pushl
lea
jmp
mov
push
mov
mov
call
pusha
movl
pushf
movl
pushf
pusha
pushf
lea
jmp
jge
cmp
pop
pop
push
xchg
cmp
data16
push
sub
mov
adc
jl
movsl
jge
lds
jecxz
cltd
fstpt
lahf
js
sub
test
xchg
push
sub
lods
pop
out
popf
cmpsb
cmp
adc
fwait
add
and
mov
out
sub
mov
and
xor
mov
add
push
gs
test
int
pop
sbb
pop
mov
seta
pusha
movsbw
bswap
mov
setbe
pushf
jmp
pusha
cmp
pusha
sub
push
cmc
cmp
call
jmp
pushl
pushf
lea
jne
pushf
inc
pushl
jmp
adc
btc
aam
shrd
mov
pusha
shl
pushl
lea
je
push
call
pushf
mov
mov
jmp
lea
ja
cmp
and
sub
sub
bsf
adc
add
inc
shrd
btr
mov
shl
mov
pushf
repnz
call
setp
mov
rep
movw
not
pop
mov
pushf
push
mov
not
mov
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
popf
xlat
div
dec
cmpsl
fistl
inc
jecxz
cmp
test
cld
jb
adc
mov
call
call
dec
xor
mov
xchg
push
xchg
scas
or
xor
fcmovnu
gs
mov
popa
lret
in
shll
aad
rcrb
mov
daa
xchg
push
dec
push
je
and
pushf
mov
sub
jbe
push
mov
icebp
mov
mov
xor
push
shl
cmpsb
movsl
mov
data16
sbb
jp
xor
imul
mov
jmp
insb
add
pop
inc
jg
out
xchg
iret
lods
jmp
gs
adc
gs
in
or
in
pusha
mov
jbe
dec
adc
push
pop
das
loop
jmp
iret
jnp
shr
inc
in
bound
push
xor
movsb
into
lock
mov
inc
jmp
pusha
popa
cmc
loopne
push
push
lret
lea
and
xor
jno
mov
ljmp
mov
int
fstl
mov
rcl
adc
pop
mov
int
jecxz
in
inc
das
pop
stos
dec
mov
cmp
mov
pushf
fsubs
lods
or
nop
ljmp
enter
dec
xor
add
and
push
popf
ret
and
mov
dec
out
dec
dec
and
sbb
push
fisubrl
inc
lds
and
jnp
outsl
sub
add
pop
lret
jns
out
aas
subl
mov
sti
lods
ret
push
push
outsl
mov
dec
mov
cmp
jl
outsb
push
call
cmc
sbb
push
lahf
lea
pushl
pusha
mov
lea
call
test
cmc
test
clc
add
jle
cmpl
jmp
bt
lea
mov
add
jae
cmp
push
ror
push
btc
lea
stc
not
setp
mov
sar
test
ror
or
not
ror
add
shl
and
add
push
setge
not
not
rep
pusha
lea
mov
pop
pushf
mov
sets
jmp
jmp
std
mov
ret
pop
dec
cmpsl
scas
popa
jmp
pop
jecxz
xlat
jg
lret
sub
xchg
imull
xor
ret
mov
fldl
or
xor
xor
jmp
cmpsl
dec
jne
test
xchg
dec
popf
out
cmp
in
fs
pop
pusha
xchg
icebp
adc
fwait
sti
mov
jbe
out
push
pop
xchg
aad
sbb
pop
push
and
inc
mov
add
test
dec
dec
xchg
daa
enter
insl
lret
sbb
push
push
xchg
sbb
rcrb
xor
icebp
ja
fs
push
addr16
mov
dec
mov
imul
sbb
mov
jo
dec
repz
mov
inc
mov
lods
cmc
pop
test
popf
xor
mov
jmp
notb
fidivl
sub
mov
pusha
movsbw
stc
mov
lea
clc
clc
mov
pusha
cmc
pushl
bt
mov
pushf
not
jmp
pushf
mov
call
pushf
mov
mov
call
mov
mov
lahf
not
lahf
movsbw
mov
movsbl
lea
push
movl
push
call
mov
jp
fwait
out
dec
decb
lea
pop
iret
das
insl
adc
inc
jecxz
mov
cwtl
adc
into
scas
xorl
lahf
mov
mov
push
std
jno
mov
daa
arpl
aaa
jp
mov
pushf
mov
das
leave
jb
scas
rcl
push
pusha
cmp
add
xchg
dec
scas
mov
and
out
pushf
jg
add
mov
out
mov
mov
xor
mov
shr
xor
cmpsl
inc
js
cli
xchg
stc
mov
xchg
lods
fidivrs
pop
sbb
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
test
push
daa
outsl
out
fs
jp
ficompl
rorb
insb
jbe
daa
jmp
jecxz
stos
ret
fisubrs
lahf
push
jbe
jno
jge
lds
jecxz
xchg
xchg
in
fwait
jns
sub
adc
cmc
fwait
loope
push
test
jmp
in
hlt
insl
adc
push
roll
jecxz
xor
jmp
repz
pop
daa
cmp
ljmp
adc
aam
add
mov
xlat
cltd
mov
fists
add
sub
jge
pop
shl
mov
test
push
and
push
xchg
out
or
push
lea
je
jmp
in
pop
add
adcl
js
jl
mov
and
push
mov
mov
adc
les
fistpll
sahf
outsb
push
inc
or
imulb
cmp
ljmp
cmp
cltd
daa
cli
pop
ret
fildll
xlat
cmpb
jae
popf
or
incl
fdivl
push
xchg
es
jecxz
pushf
cmp
int3
inc
data16
xor
dec
xor
scas
scas
mov
jo
ret
int3
mov
iret
lret
adc
add
fcoml
xchg
push
cmp
adc
daa
sti
test
mov
add
outsl
xor
jns
movsl
std
popf
add
and
jno
imul
shlb
push
mov
in
sub
lods
lret
push
mov
xchg
scas
push
bound
or
jecxz
stos
dec
push
inc
push
imul
ficoml
mov
mov
cmc
jmp
movsl
cmp
stc
scas
push
and
or
mov
push
adc
outsl
cmpsl
es
xchg
outsb
fisubrs
ja
pop
sbb
push
push
data16
je
cmp
into
pop
sbb
cmp
ljmp
mov
inc
push
in
sahf
jmp
lret
or
outsb
and
fucom
in
inc
xor
jmp
sub
rolb
dec
inc
push
and
mov
in
sub
jge
xchg
flds
dec
pop
jno
decl
cmp
shrl
mov
in
jecxz
add
jae
inc
add
dec
mov
xchg
jb
hlt
mov
in
or
sahf
inc
jmp
add
je
pushf
out
aad
ljmp
and
inc
add
and
aad
orl
inc
mov
movsb
jl
add
dec
xor
pop
cmpsl
mov
pop
lods
mov
mov
add
shr
jge
push
cmp
sbb
xor
andb
lds
imul
mov
sbb
xchg
jmp
nop
push
adc
jae
cmp
nop
jp
inc
mov
insb
int3
ss
adc
fidivl
xchg
jo
stos
std
fisubrl
aam
push
sarl
ret
xchg
arpl
ljmp
out
push
push
movsb
sub
ss
xor
add
cmp
or
sub
push
pop
or
les
push
push
inc
jo
lds
jb
inc
and
fidivrl
adc
mov
cwtl
data16
loopne
mov
mov
in
sahf
and
inc
lret
popa
pop
push
mov
mov
mov
sbb
fldl
or
into
cmp
push
xchg
lret
test
adc
jbe
cmp
jle
push
js
xorb
jle
sbb
rol
loopne
mov
jmp
rol
test
mov
xor
mov
ret
cmpsl
xorl
push
cld
sub
xor
pop
cli
popf
subl
fwait
sti
notl
aaa
insl
adc
imul
adc
pop
out
hlt
fdivp
xchg
push
pop
add
in
jge
sub
pusha
enter
in
sbb
js
stos
or
inc
pop
aas
loope
cmp
push
scas
cwtl
repnz
negb
outsb
loopne
xor
movsb
add
outsl
jo
push
xor
aad
sbb
add
jle
inc
cmp
cmpsl
xor
ljmp
cld
mov
cmpsb
mov
ljmp
pop
mov
lret
out
das
dec
aad
lcall
dec
inc
pop
ds
dec
cmp
outsl
dec
pop
mov
rcrl
repz
mov
pop
mov
or
xor
nop
ret
punpcklwd
fdiv
testb
and
xchg
dec
dec
and
mov
push
adc
dec
pop
sub
push
js
sub
out
jle
mov
dec
sbb
jns
and
outsb
dec
cmp
aaa
sbb
in
sub
es
dec
imul
push
je
cmp
call
lock
loop
ret
xor
inc
int3
aas
sbb
inc
mov
lds
cld
mov
bound
ljmp
add
dec
dec
shlb
lock
icebp
fistpl
dec
dec
mov
clc
sbb
shld
cmp
lods
cmp
push
pop
lods
ds
cltd
lahf
aad
loopne
mov
mov
add
xor
sub
xor
lcall
jg
dec
push
cwtl
or
sub
into
push
jb
adc
test
xchg
xchg
mov
xchg
pushf
mov
int3
rclb
and
bound
mov
adc
insb
lret
mov
addb
popa
imul
xor
or
aaa
shrl
jge
lods
mov
sub
mov
mov
mov
cwtl
sahf
imul
inc
inc
mov
fcom
push
dec
cs
or
mov
ret
push
sub
adc
dec
addb
aad
into
fnstcw
mov
adc
mov
imul
jle
pop
dec
sbb
sbb
dec
dec
jno
inc
insl
sub
push
push
and
add
dec
add
cmp
test
adcb
mov
call
and
jmp
clc
fwait
sub
push
gs
mov
pusha
rorl
loope
outsb
fs
sahf
xor
add
js
mov
ja
and
nop
enter
push
enter
pmaxub
jge
fadd
int
cmp
sahf
mov
sub
fiadds
sahf
test
mov
and
sbb
aas
mov
jp
dec
xchg
mov
jecxz
dec
xchg
cmp
in
pop
fcomps
pop
clc
hlt
sbbb
cmc
jbe
push
xor
xor
cmp
add
shrl
int3
dec
fdivr
fbld
arpl
jb
adc
das
or
aam
lods
repz
jo
test
cwtl
jmp
dec
fbld
je
imul
pop
fsubrs
mov
iret
cmpsb
cmp
cmpsl
ret
jno
jb
ja
adc
sub
out
enter
fists
xlat
mov
pop
subb
or
enter
lret
aas
lret
push
rol
stos
jb
into
pop
hlt
shrb
jg
inc
push
cmpsl
mov
test
imul
adc
sub
mov
pop
pop
loop
or
xchg
push
enter
sbb
xchg
arpl
dec
lods
inc
test
or
jne
popf
sbb
or
int3
cmp
jecxz
leave
ret
mov
ja
and
cli
sub
cmpb
inc
dec
xor
jo
jnp
jle
sbb
jne
xchg
mov
pop
loope
mov
mulb
fs
out
jmp
push
ss
mov
int
orl
std
hlt
jb
mov
and
cmpsl
js
divb
imulb
pop
mov
shlb
int3
jno
dec
push
jg
jnp
sbb
mov
xlat
and
xchg
mov
inc
int
push
lea
cmc
pop
rorb
cmpl
fwait
cli
xchg
lods
mov
dec
mov
jb
test
sbb
sub
sub
push
jo
jmp
and
dec
sarb
stc
outsl
mov
sti
lret
cmpsl
cwtl
out
lods
jge
pushf
and
lretw
cmp
loope
into
data16
ljmp
pop
inc
rcrb
add
ja
mov
out
aaa
aad
stc
lea
inc
jmp
ret
xor
int
popa
push
sbb
mov
mov
out
leave
scas
and
inc
stos
js
rcr
cmpsl
jbe
sarl
sbb
push
insl
xor
fsubrl
dec
loop
or
push
jp
ficomps
sbb
jmp
es
pop
inc
mov
pop
xchg
comiss
movsb
cmp
cld
cmp
push
mov
sarb
mov
dec
mov
or
jo
daa
sub
add
lods
in
pop
pop
les
sbb
adc
fdivl
pop
adc
daa
push
movsb
cmp
loope
bound
lds
xor
bts
pop
mov
mov
arpl
sar
cltd
std
jecxz
push
dec
adc
mov
sahf
pop
dec
push
ja
cli
repnz
pop
lcall
mov
pop
outsl
mov
sub
jne
fs
fcmovu
aam
mov
mov
rcl
fcmovnbe
sbb
lret
sub
fdiv
pop
das
sbb
mov
lds
mov
lret
pop
jae
int3
push
push
sar
cli
or
jl
inc
push
xchg
or
sbbb
xor
sub
adc
pop
jne
cmpsb
in
xor
lret
pop
scas
push
push
addr16
loopne
push
inc
dec
int3
aam
sbb
adc
clc
call
xchg
nop
push
push
lods
pop
jg
xor
ffree
cmp
sub
pop
push
xor
repnz
popf
xor
adc
loopne
fld
outsl
lcall
mov
repz
imul
cmc
jnp
xor
outsl
lret
sub
cwtl
fwait
jbe
imulb
je
lret
shll
movsl
fs
jb
push
ljmp
scas
imul
stc
lret
popl
xchg
push
or
rorl
inc
sbb
pop
and
ss
iret
lds
mov
cmp
sub
arpl
pop
prefetchw
or
es
and
popw
and
mov
xchg
mov
xor
mov
mov
mov
sub
cmp
jae
lret
sbb
loope
jns
mov
dec
mov
jmp
sbb
cmp
cmpsl
lea
push
sub
stos
add
popf
aaa
call
rcr
inc
aad
lods
push
xchg
sbb
and
adc
mov
out
ds
divl
daa
int
cmp
adcl
pop
jae
push
scas
stc
dec
sbb
pusha
push
and
repnz
mov
jns
insl
adc
dec
sbb
fs
pop
mov
es
or
pop
push
mov
out
mov
cld
aad
pop
int
cmp
xor
icebp
xchg
mov
fstps
loope
xor
mov
fucomp
pop
pop
fs
jp
or
out
outsl
stos
lods
push
negb
cmp
and
pusha
fsubs
or
push
movsl
push
sti
dec
sub
mov
dec
leave
rorl
sbb
dec
dec
sahf
mov
lock
aad
xor
jo
cltd
ror
push
scas
loop,pt
mov
icebp
repz
cmp
pusha
sar
scas
or
adc
xor
cli
mov
sbb
insb
out
addr16
pop
psubd
inc
dec
or
push
pop
stc
xor
mov
pushf
lcall
xchg
mov
xor
mov
lahf
orl
imul
mov
inc
test
pushf
aam
adc
add
test
jns
mov
pop
xchg
cltd
ja
out
mov
out
push
in
pop
pop
jg
aas
loop
adc
mov
sbb
rcll
mov
jbe
pop
stc
jle
mov
jmp
test
call
call
pop
fildl
in
in
sbbb
loope
out
test
bt
sub
jmp
aad
aam
pop
test
and
sub
pop
movzbw
pop
btc
cwtl
pop
rcr
rol
call
pushf
pushf
pusha
test
lea
jno
push
lea
je
jmp
je
push
cli
lock
xchg
push
jb
mov
cli
push
xor
iret
cli
lock
xor
pop
xchg
cli
xchg
adc
jb
xor
jo
mov
cli
jno
xchg
shlb
jb
shll
cli
jo
push
cli
jb
xor
push
rcll
xchg
cli
jno
mov
shlb
cmp
stc
bt
stc
cmp
call
lea
ja
stc
test
cmp
add
stc
clc
cmp
call
jnp
pushf
movb
movl
jmp
push
push
mov
lea
je
bt
pusha
sub
jmp
xchg
leave
xchg
pop
mov
adc
lds
out
dec
lods
loope
mov
popa
mov
outsb
xchg
addr16
and
jne
pushf
rclb
lock
mov
test
sarb
sbb
shll
data16
mov
sub
push
pop
sub
pop
repz
push
mov
aam
adc
add
adc
inc
xor
hlt
xor
xor
xor
mov
push
pushw
mov
pop
add
sbb
outsl
cmp
popa
daa
pop
repz
inc
and
out
adc
add
imul
mov
jnp
pop
cmpsl
jecxz
popa
out
scas
push
xchg
imul
std
test
mov
pushf
xor
mov
push
repz
cmp
pop
stc
mov
or
scas
push
xor
mov
sbb
push
ficomps
inc
and
jns
sub
data16
nop
rorb
ds
push
in
les
add
push
cmpsb
or
into
das
xchg
lods
sub
je
fld
xor
or
cwtl
push
nop
ret
cwtl
rorb
sbb
dec
mov
bound
xchg
jno
ja
xchg
dec
rcll
xchg
and
mov
adc
push
cmp
icebp
cltd
outsl
pushf
inc
scas
ja
lcall
fisttpl
push
xor
out
cmpsl
shll
inc
mov
dec
insb
in
adc
sbb
fstps
push
mov
mov
out
xchg
sub
scas
fdiv
int3
lret
call
repz
pop
cli
out
pushf
adc
mov
dec
lods
pop
sbb
sbb
add
rol
push
ficoml
dec
imul
xchg
mov
lea
outsl
loopne
stos
mov
jmp
mov
push
pop
xchg
dec
jne
cmp
mov
sbb
push
rcrl
fdivrs
cmp
hlt
or
sbb
sub
sbb
push
cli
rcl
or
bound
lea
leave
jmp
add
sub
ds
mov
outsb
int3
stos
add
jno
sbb
jb
ffreep
fs
aaa
add
xchg
pop
std
and
ret
push
mov
repz
dec
mov
cmc
jo
xlat
xchg
dec
cld
rorl
loope
sub
outsl
loop
mov
or
push
push
ret
xor
mov
mov
push
add
and
adc
icebp
adc
sahf
adc
roll
add
or
xor
adc
cmc
or
xchg
jge
or
sarb
andl
mov
or
mov
ljmp
adc
sbb
jno
push
or
xlat
scas
lahf
mov
fwait
jge
mov
test
mov
jo
in
push
mov
cmpsl
add
out
dec
inc
out
cmc
mov
xor
sbb
mov
push
or
aas
and
cli
jno
sub
lea
mov
push
divl
mov
call
iret
jbe
sbb
je
or
es
add
xchg
ss
xchg
mov
dec
dec
inc
hlt
insl
or
data16
out
xor
dec
test
aaa
xchg
pop
add
popa
daa
jae
ja
xchg
sbb
mov
mov
mov
add
add
dec
out
and
cmp
les
inc
fwait
sahf
lret
mov
push
cwtl
push
test
ret
inc
cwtl
dec
fsubrs
mov
leave
stc
mov
fldt
xchg
ret
mov
and
int
aam
outsb
outsl
adc
movsb
push
xchg
and
lret
jae
loopne
loop
xchg
mov
ret
fcmovu
inc
sbb
movsbw
pushf
mov
or
or
sub
clc
xchg
or
shr
mov
rcl
mov
stc
mov
movsbl
setle
add
or
mov
add
mov
cmc
mov
bts
or
bswap
sub
pushf
sbb
movsbw
not
mov
add
shl
mov
rol
sub
shl
and
adc
jmp
mov
pusha
push
lea
jmp
not
jmp
jmp
jo
in
je
test
cmovne
lods
stc
and
iret
mov
iret
and
ret
nop
pop
or
outsl
lret
sti
cmpsl
repz
xor
imul
ss
pop
ljmp
inc
bsr
ds
inc
hlt
adc
arpl
pop
cmp
jno
stc
inc
mov
sub
or
hlt
jno
adc
addl
lret
movq
arpl
push
subb
sub
rorl
jge
test
push
xor
sub
out
pushf
lahf
mov
inc
inc
mov
xchg
wbinvd
dec
dec
add
fisubrs
subb
sub
ja
mov
js
push
int3
push
lcall
pop
jmp
mov
mov
push
lcall
hlt
popf
mov
icebp
add
sub
xor
insb
xchg
sbb
call
std
shlb
stc
pushf
jg
cmp
ja
xor
daa
outsb
cmpsb
jg
aas
out
shld
dec
nop
test
cmpsb
xchg
icebp
or
lds
in
popa
push
adc
push
hlt
inc
adc
inc
sbb
sbb
test
add
fst
in
bound
mov
xchg
xchg
sbb
sahf
mov
jne
repz
out
lahf
fmuls
lea
xchg
aas
pop
idivl
push
mov
outsb
push
xor
xor
jecxz
mov
mov
rcrl
adcl
arpl
inc
add
sub
cmp
mov
call
call
lea
jae
jmp
and
push
mov
mov
mov
inc
fistps
stc
sub
addr16
mov
mov
cmpb
and
js
cltd
inc
subl
mov
or
or
sub
jb
movsl
mov
xchg
scas
and
sbb
xor
adc
inc
mov
je
test
mov
and
pop
nop
hlt
mov
push
mov
fimull
scas
shlb
pusha
lea
jae
xor
mov
pusha
movb
neg
stc
mov
movsbl
btc
bts
btr
mov
movb
push
cmp
pushf
sub
bt
bt
repnz
pushf
mov
call
call
lea
jne
bsr
mov
pushf
jmp
push
cmc
clc
cmc
cmp
push
jmp
pushf
movl
call
jle
add
in
jg
sbb
into
adc
xor
pop
mov
or
pop
mov
pcmpgtd
pop
sahf
imul
sub
iret
call
insl
adc
dec
or
xor
fnstenv
adc
bt
or
pushf
pushf
lea
je
not
pushf
movzbl
call
movl
pusha
pushf
push
movl
pushf
pushf
movl
movb
lea
jmp
mov
push
sub
push
mov
mov
pop
test
scas
rolb
add
or
mov
xchg
add
scas
cld
mov
adc
jg
stos
adc
xchg
ficoms
fnstsw
rclb
out
popf
shrb
pop
arpl
lea
adc
subb
in
out
aam
fwait
xchg
mov
test
xchg
aam
ja
pop
push
jne
bound
ds
pop
aaa
mov
xlat
std
mov
pop
dec
sahf
aam
push
or
sbbb
push
mov
mov
pop
aam
stos
fcoml
sahf
in
add
pop
movsl
lcall
or
cmp
mov
xchg
push
dec
inc
mov
imul
push
mov
lcall
push
cwtl
filds
scas
mov
pop
imul
xlat
popf
xchg
mov
mov
outsl
scas
cli
sbb
push
iret
test
pop
sarb
mov
mov
pop
jg
sub
push
call
int3
or
mov
lcall
cld
movsl
sbb
sub
xchg
or
push
or
or
adc
mov
lahf
popa
push
push
sbbb
cmp
icebp
mov
fmuls
xor
mov
fcoml
les
movsb
mov
cmc
jmp
into
or
pop
xchg
xchg
sbb
dec
roll
push
idivl
dec
pushf
inc
jo
js
notb
add
push
dec
aaa
pop
adc
loope
xor
scas
dec
lods
popf
lods
pop
aas
inc
push
add
mov
int
xchg
ret
xchg
dec
mov
mov
in
lods
push
jl
pushf
mov
adc
inc
xor
push
sbb
pusha
xor
int3
xchg
repnz
sbb
pushf
pushl
inc
pusha
pushf
pushf
lea
jmp
add
inc
gs
jne
jae
jb
outsl
jae
fwait
ret
jae
pop
push
and
push
mov
xlat
mov
mov
dec
mov
mov
sbb
push
into
xor
dec
inc
xor
push
data16
shrb
sbb
and
add
ror
adc
sub
push
ja
lock
xlat
inc
lret
jae
sub
sbb
stos
add
xor
loope
js
cmp
mov
mov
stos
bound
dec
cmp
sub
cmc
les
and
sbb
pusha
int
mov
pusha
pusha
movl
movb
mov
mov
push
mov
pushl
ret
mov
inc
imul
adc
dec
aad
rcrl
insl
sub
sarl
add
fisubrs
test
mov
aas
xchg
popa
xchg
ja
sahf
cmp
jecxz
imul
dec
adc
jecxz
fwait
sarl
inc
push
pop
pusha
daa
inc
and
push
xchg
jne
adc
jb
imull
inc
add
imul
sub
pop
idivb
mov
cli
adc
sbb
shrb
add
insl
xor
sahf
aam
into
mov
movsb
outsb
mov
int3
inc
std
or
push
adc
pop
xchg
in
adc
mov
dec
sahf
or
xchg
mov
pop
pop
fs
ljmp
mov
popf
jecxz
pushf
add
andl
adc
push
pop
scas
ds
addr16
jmp
pop
pop
rcrl
shrb
js
xchg
and
mov
jecxz
dec
cmpsb
mov
incb
jg
test
lcall
ret
mov
cmp
insb
mov
adc
and
lods
je
pop
sbb
data16
fs
and
pop
cmp
dec
jge
or
clc
cmp
sbb
insb
lret
iret
or
push
adc
xor
jecxz
mov
add
add
mov
aaa
xchg
dec
inc
sbb
out
adc
daa
pop
push
clc
sahf
push
outsb
jo
repz
adc
xor
ret
repnz
inc
sub
sbb
and
sbb
dec
mov
jno
mov
push
movb
movb
lea
pushf
push
lea
call
push
lea
jb
push
stc
cmp
movzbl
sbb
lea
setno
lea
call
push
lea
call
call
pusha
lea
call
pusha
lea
jae
lea
call
rol
sub
inc
bsf
mov
test
pushf
clc
push
cmpb
pushf
push
pusha
lea
jne
bt
stc
stc
cmc
sub
pusha
pusha
pushl
lea
jmp
pushf
jmp
gs
gs
mov
xlat
jge
adc
pop
xchg
movsl
jnp
add
test
daa
jmp
sub
jae
sbb
fwait
pop
arpl
sub
fwait
mov
outsl
push
fwait
loope
xlat
rolb
xor
addr16
xchg
pushf
test
push
in
mov
push
push
pop
push
mov
sbbb
push
xorl
pushf
call
push
rcl
dec
and
mov
sub
pop
xor
dec
loope
jecxz
popf
xchg
jmp
sbb
dec
jmp
sub
fwait
xor
ja
jno
fstps
call
jge
xor
movsl
jg
inc
mov
sbb
push
add
imul
loop
test
xchg
push
outsl
bound
inc
and
xlat
aad
mov
mov
dec
xor
jae
jl
ret
mov
jbe
fisttpl
pop
pop
and
jge
arpl
sbb
cmp
mov
out
fld
into
mov
icebp
inc
and
gs
adc
jo
mov
lods
dec
and
jnp
xor
test
pop
icebp
jge
dec
mov
mov
adc
inc
movsl
mov
sahf
pusha
outsl
addl
aaa
xor
mov
jno
add
mov
and
and
pop
jae
fwait
jge
inc
movsl
mov
scas
fcmove
xlat
xchg
fists
or
mov
int3
mov
sub
jle
test
vpsllq
call
dec
in
adc
mov
pushf
out
push
mov
push
adc
daa
jp
lahf
mov
mov
xlat
add
add
sbb
fisubrs
test
iret
icebp
outsl
cmp
ja
aas
test
data16
sub
fwait
rcrl
inc
push
mov
add
sbb
aad
test
push
ss
stos
jo
jle
loop
fwait
sbb
inc
or
dec
adc
jns
out
cmp
scas
cltd
fisttpl
xor
outsl
dec
push
stos
xor
fwait
sti
xchg
mov
jmp
jmp
aaa
pop
lds
adc
outsb
add
test
pushf
aas
sbb
repnz
sbb
mov
not
lea
movsbw
pop
pushf
pusha
pushl
ret
scas
xor
lret
sbb
outsb
ss
push
inc
xor
sub
lods
mov
mov
sub
outsl
out
and
lret
pop
orl
ds
loope
jmp
lret
jae
stos
dec
les
push
fnstsw
inc
or
cmc
pop
jne
data16
pop
sbb
jge
and
cli
sub
subl
popa
xchg
icebp
inc
fmull
mov
dec
out
icebp
inc
adc
push
push
mov
ret
fsincos
aam
mov
stos
inc
push
and
dec
sub
ljmp
cs
sub
push
filds
push
test
pushw
movsb
cmc
sbb
pusha
pushl
cmp
pusha
lea
ja
cmc
add
adc
sar
add
call
cmp
pushl
pushl
sbb
push
movb
mov
push
lea
movb
pushf
pusha
push
lea
jmp
movzbl
mov
pushf
bswap
movb
jmp
push
sub
dec
mov
dec
jecxz
les
push
dec
xor
push
sub
add
and
mov
arpl
mov
inc
push
in
push
clc
add
or
loopne
test
js
ret
adc
or
call
adc
les
inc
testl
std
push
in
mov
mov
dec
leave
lret
sahf
xor
popf
movsl
sbb
or
cwtl
ljmp
ret
lret
mov
mov
test
sbb
jo
sbb
sbb
loopne
imul
enter
push
jo
pop
int3
push
les
push
inc
sub
loopne
shlb
inc
andnps
push
pop
shll
mov
xchg
lss
ljmp
pop
cmp
and
pop
jae
stc
data16
loop
jl
int
aam
rol
sbb
fsts
popa
xor
shrb
out
mov
mov
loopne
ret
mov
push
push
sbb
call
call
push
mov
movl
pusha
pusha
push
movl
movb
push
lea
jmp
ss
xor
xor
loope
popa
shrl
cmpsb
sbb
mov
loope
mov
lock
lret
test
gs
xchg
sub
xor
xor
mov
mov
push
mov
jae
sub
mov
ss
mov
lret
stos
outsb
ds
inc
mov
xchg
negb
dec
mov
lock
cmc
pop
pop
push
mov
mov
add
sbb
mov
ret
loopne
mov
daa
pop
lahf
lret
and
loop
scas
daa
daa
test
imul
imul
add
pop
les
jp
int3
lret
movsb
mov
enter
cmp
cmp
pop
sbb
movl
mov
pushf
pusha
lea
jmp
and
enter
push
es
sahf
xor
inc
ljmp
mov
or
cmp
loop
cmc
aam
outsl
fisubrs
lds
jo
push
jle
fs
out
or
test
pushf
aam
stc
ret
js
jnp
push
cwtl
ljmp
push
push
rcrl
sub
jle
sub
add
inc
fldcw
nop
cmpsl
aad
clc
push
shrb
sbb
mov
leave
sbb
in
cs
sub
scas
mov
jns
aad
stos
pop
jmp
mov
lods
mov
notl
shl
insb
jnp
cmc
mov
sbb
gs
pushf
adc
pop
mov
sbb
adc
push
xchg
popf
aaa
jmp
int3
lea
mov
jmp
inc
clc
mov
pushf
push
push
mov
push
pushl
popl
not
lea
movzbw
not
mov
movzbl
cwtl
setb
movl
jmp
setbe
lea
pusha
pushf
movl
jmp
movw
lea
push
pushf
pushf
movl
push
movb
pushl
popl
mov
pushl
ret
fsubs
mov
dec
fwait
push
sub
stos
cmp
mov
in
cs
xchg
popf
popa
xor
stc
xchg
mov
fldl2t
sub
inc
rclb
in
sbb
jnp
dec
mov
aad
inc
pop
stos
cmp
push
out
push
int3
cmp
outsl
adc
cmc
mov
movsb
mov
adc
cmp
out
mov
cmpsb
jle
sub
sub
adc
dec
push
mov
xchg
sub
sub
or
sbb
ficoml
mov
ja
pop
jl
mov
jb
scas
pop
add
mov
push
or
push
repz
lea
je
jmp
pushf
hlt
mov
jp
cltd
fnsave
or
ja
cltd
cmc
mov
fldt
lcall
or
jmp
insl
sub
rclb
adc
push
mov
xorb
mov
xor
into
cwtl
fs
ljmp
sbb
xchg
pop
xchg
pop
jp
sub
scas
ficoml
cmp
jg
dec
or
pusha
fsubr
pushf
push
mov
das
xchg
inc
or
popa
sub
lret
imul
dec
push
pop
mov
sbb
mov
jle
not
sub
xchg
dec
ficoms
or
fdivs
lods
int
sub
cltd
jae
cmc
xor
mov
stos
dec
mov
pop
cmp
int
dec
fldenv
pop
mov
fcoms
sahf
addr16
les
xor
sub
adc
fidivrs
negb
aaa
outsl
mov
cltd
imul
stos
cmp
enter
jecxz
or
ficompl
ljmp
mov
call
pop
scas
sbb
enter
cmpsb
or
or
or
dec
call
lock
sbbl
mov
sub
inc
mov
dec
mov
lods
loope
loope
jp
jp
mov
andb
fwait
lahf
adc
add
add
push
mov
loope
data16
pop
shr
repz
stos
lahf
xrelease
jnp,pt
or
and
adc
lock
int3
xchg
fmull
leave
push
stos
int3
add
pushf
mov
call
mov
mov
pushf
clc
add
cmp
cmc
stc
jmp
call
out
push
gs
cltd
xor
xor
push
xor
ret
scas
xor
cld
int
cmp
adc
sub
cmp
stc
sbb
cs
jge
fimull
loope
mov
push
test
outsb
scas
decl
inc
jnp
cmp
mov
xor
les
jp
inc
adc
out
mov
test
loop
xchg
cmp
imul
lret
pop
adc
cmp
arpl
push
aam
loopne
add
ljmp
or
dec
scas
push
add
xchg
push
sub
ret
adc
scas
mov
xor
cmp
mov
inc
unpckhps
cmp
ds
push
fimuls
test
jbe
dec
fidivl
sbb
addr16
div
adc
rep
insl
xor
push
push
and
sub
arpl
sbb
lea
pushf
push
mov
lea
mov
pop
call
add
inc
js
je
jb
arpl
jae
push
into
cmp
movsl
rorl
add
aam
mov
lock
fs
push
mov
xchg
dec
xor
or
insb
sarb
mov
loopne
je
dec
stos
adc
fcoml
sahf
das
xchg
mov
in
ja
and
shlb
in
add
xor
aam
sub
fidivl
jo
jmp
sub
rcl
inc
stc
push
mov
ljmp
daa
lea
pop
shl
rcrl
xchg
fmulp
pop
fildll
aam
mov
movsb
adc
lret
fisubl
pushf
pop
jb
or
ja
mov
inc
bound
icebp
cmpb
sbb
dec
sbbl
into
inc
pop
sub
push
out
push
sbb
repnz
pop
mov
jbe
js
enter
jnp
mov
xor
cmp
inc
mov
pop
mov
repnz
xchg
mov
lcall
or
icebp
das
and
mov
push
in
cmpl
sahf
pusha
mov
clc
cmc
mov
fstpt
gs
xor
inc
popf
lcall
cmp
and
jnp
add
call
popa
inc
insl
mov
mov
cmpsl
pop
cmpsl
or
fdivrl
add
sub
call
mov
mov
enter
jmp
sub
xchg
push
cmpsl
ljmp
jae
aaa
xchg
dec
dec
dec
mov
aaa
loopne
xlat
sbb
jecxz
pushl
sub
mov
into
mov
lret
faddp
and
dec
sbbb
fdivrl
xor
push
pusha
cmc
sbb
dec
mov
lds
xor
and
push
dec
or
sahf
jo,pt
mov
mov
dec
xchg
fidivrl
cmc
and
xchg
xlat
pop
imul
dec
inc
push
into
cltd
xchg
dec
inc
aad
jmp
adc
fisubrs
xor
add
or
fstps
xlat
mov
push
cli
xor
cmp
sub
loop
cs
sarl
std
adc
mov
add
rcl
aam
pop
neg
or
shrd
add
pushf
mov
pusha
pushl
ret
not
mov
jmp
jmp
mov
bts
movzbl
bt
btc
mov
call
push
call
push
lea
call
cmc
cmp
pushf
pushf
jmp
out
dec
jns
pop
clc
sbb
pop
push
nop
cs
into
sub
push
pop
pop
mov
pop
movsl
arpl
pop
pop
loop
in
bound
lods
xchg
or
mov
clc
sub
lock
in
lret
and
outsl
dec
xchg
insb
outsl
ud2
sub
rcr
lea
repnz
shl
and
ss
js
ljmp
sbb
mov
lea
seto
not
bswap
mov
lea
pusha
call
lods
hlt
inc
repnz
cmp
and
mov
mov
adc
jno
lret
cs
sub
mov
jp
adc
pushf
sbb
sbb
aaa
pusha
pop
orl
jns
jp
jno
fists
cli
mov
cmp
adc
pop
mov
in
ret
lock
repnz
fstps
mov
mov
push
sub
data16
ds
cmp
mov
add
mov
jecxz
imul
sub
loopne
test
addr16
cmc
xchg
not
sub
pop
repz
push
jg
push
ret
fwait
sar
jne
inc
push
pop
in
loop
inc
cmpsb
mov
daa
jle
sub
xchg
repz
xlat
mov
addr16
es
rol
push
das
or
push
sub
adcb
cmp
sub
dec
ja
sub
mov
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
lea
je
bt
cmp
push
call
test
push
inc
enter
and
mov
hlt
adc
lock
or
sahf
movsb
mov
out
fstpt
add
sbb
sbb
dec
cltd
adc
test
sub
cs
loopne
sti
pop
fwait
mov
push
pop
push
arpl
in
sbb
and
inc
rolb
stc
in
ret
xchg
push
xchg
inc
stos
iret
push
pop
out
or
je
mov
repz
jnp
or
fdivrs
xchg
xor
pop
or
push
ljmp
adc
addr16
movl
pushf
pushf
push
mov
push
pushf
movb
pushf
pushl
ret
add
clc
clc
stc
cmp
pushf
lea
jb
pushf
mov
cmp
jmp
push
push
lea
jne
pusha
pusha
inc
pushf
movb
pushl
inc
pushf
mov
pushl
mov
lea
jmp
mov
pop
lcall
test
scas
shlb
push
int3
jl
in
sbb
pusha
inc
cmp
or
cs
aas
xchg
movsl
sbb
mov
sti
ja
add
xchg
outsb
sub
push
hlt
fcompl
xor
mov
dec
push
sbb
mov
loope
mov
arpl
dec
mov
jecxz
je
std
sarb
jle
leave
addr16
jne
dec
mov
daa
repnz
cld
imull
shrl
adc
and
cmp
jl
add
ret
mov
xchg
dec
mov
xor
or
inc
test
sub
iret
inc
xchg
cmp
mov
push
adc
les
push
addr16
pop
inc
pop
xor
ret
rolb
push
xor
inc
jmp
scas
jmp
jns
test
mov
cmp
mov
cld
mov
xchg
out
stos
fisubrl
loope
ret
shlb
push
pushf
xchg
mov
bound
push
jb
or
pop
mov
adc
sahf
stos
inc
in
data16
jp
pop
arpl
jmp
in
inc
cmp
xor
sti
cmp
mov
lret
lock
and
cmpb
mov
pushf
mov
pusha
call
mov
push
pushf
mov
movb
pushl
ret
movw
inc
mov
pusha
pushf
lea
jmp
not
call
not
lea
pushf
movl
movb
movw
call
push
pushf
call
cmpb
jne
shll
shll
push
lods
not
inc
ror
xor
neg
inc
not
mov
pop
ret
cmp
mov
or
mov
mov
out
divb
movsb
xor
addr16
fidivrs
dec
add
xchg
push
jae
mov
sti
popf
dec
lds
seta
xor
jp
pop
lock
test
inc
mov
icebp
lds
cmp
mov
mov
and
sbb
mov
inc
mov
popf
dec
jb
inc
mov
aaa
mov
lahf
enter
pop
sub
xchg
cmp
xor
or
out
adc
add
aas
inc
mov
xchg
fisubl
clc
push
outsl
addr16
cld
mov
repnz
mov
or
in
addl
lret
das
jp
pop
andl
add
mov
lea
je
jmp
xchg
pusha
pushf
movl
pushf
pushf
pushl
movl
pushf
movl
lea
jmp
push
lods
add
or
push
adc
in
cld
orb
xchg
mov
fsub
and
pop
adc
into
xchg
test
or
arpl
or
cs
mov
rolb
push
and
jno
or
mov
push
push
lret
out
ss
loop
adc
iret
mov
sahf
arpl
hlt
hlt
lock
dec
jno
jg
jmp
fdivl
out
mov
insb
sub
or
xor
cmc
sbb
mov
push
not
jmp
jg
loop
push
push
and
shrb
repnz
mulb
dec
scas
mov
leave
lahf
or
sub
out
icebp
movsb
nop
lcall
adc
jno
jae
sahf
xor
adc
jecxz
pop
or
popf
out
test
pxor
mov
push
xchg
push
rorb
xchg
outsl
imul
jmp
mov
fimull
mov
add
mov
pusha
add
xor
cmc
dec
movl
pusha
rol
shr
cmc
mov
sub
stc
push
cmc
cmp
jmp
pushf
jmp
pushf
mov
bt
cmpb
jmp
lea
ja
pushf
pusha
lea
jb
cmp
jmp
mov
pushl
pushf
pusha
mov
pushl
ret
pushf
pushf
lea
je
bswap
add
movsbw
mov
lea
shld
bsf
sub
add
bsf
mov
cmp
stc
test
pushf
mov
pushf
lea
je
mov
add
mov
pushf
adc
pusha
mov
mov
add
pushl
call
call
rol
bt
sbb
mov
clc
cmp
stc
and
bt
pusha
add
lea
jp
test
cmc
bt
add
push
pushf
push
push
dec
call
adc
mov
pop
adc
call
mov
lock
aam
std
mov
mov
clc
sbb
xor
mov
cli
jno
shll
sub
outsb
in
adc
jge
shll
loop
lods
adc
lcall
sbb
mov
nop
in
in
pop
dec
inc
push
adc
and
xchg
mov
fsts
jne
sbb
or
jg
or
or
pop
xor
sbb
and
mov
mov
mov
test
lcall
bt
cmc
shl
pushl
stc
clc
cmp
add
pushf
call
or
xchg
xchg
mov
xchg
pop
ds
and
and
repz
arpl
sbb
xchg
test
push
mov
jmp
fstps
pop
mov
nop
mov
jge
insl
xchg
sub
in
insb
int
shrl
or
adc
pop
mov
scas
enter
sub
out
dec
mov
jl
stc
cwtl
nop
shll
rcrb
xor
mov
data16
jl
adc
test
out
inc
sarb
movb
addr16
les
xchg
pop
mov
fcmovb
cwtl
test
adc
mov
shll
fstps
imul
repnz
int
and
or
sbb
xor
pop
mov
add
dec
dec
stos
lret
xor
push
inc
in
pop
mov
and
adc
movsb
shl
sbb
push
ret
cmp
xlat
xchg
sar
pop
xchg
xchg
lods
dec
mov
sbb
std
mov
stos
add
inc
pusha
jge
and
movsl
pop
sbb
jmp
jecxz
jl
push
std
lea
call
call
movsbw
mov
mov
mov
lahf
jmp
popf
rdtsc
nop
push
pushl
movl
movw
pusha
movl
mov
pusha
lea
jmp
pushf
stc
cmp
pushl
lea
jb
bsr
inc
bts
shl
mov
shl
rcr
mov
test
shr
jmp
pushf
lea
je
pushf
call
loopne
fidivs
push
in
insb
out
lcall
es
mov
aaa
mov
pcmpeqd
loop
andl
mov
negb
ljmp
icebp
push
data16
push
jns
jmp
pop
enter
push
mov
sub
xor
xor
test
jl
push
in
sub
jbe
push
cmp
jo
lahf
sti
repz
push
outsl
ret
xchg
cld
movsb
repnz
push
pop
push
or
adc
push
inc
out
mov
movb
movl
call
push
pushf
pusha
movl
pushl
lea
jmp
add
add
add
jmp
pushf
jmp
lea
call
pusha
jmp
call
mov
movsbw
bswap
jmp
push
lock
std
std
mov
dec
ret
jno
xchg
adc
lds
mov
mov
pop
divb
xor
cmpb
in
push
push
aam
push
lds
jecxz
and
test
jae
fwait
loope
mov
inc
mull
xchg
push
jbe
add
aas
and
roll
lock
aam
lea
jne
xor
mov
rcr
sub
shr
mov
clc
cmp
pushf
sub
stc
pushl
popl
pusha
clc
pusha
cmp
pushl
jmp
jno
lcall
sar
icebp
mov
mov
adc
pushl
lods
shlb
mov
lods
sub
rorl
xchg
mov
xor
std
mov
xlat
inc
mov
dec
dec
mov
or
cmc
dec
dec
loopne
cld
mov
sub
xchg
loop
xchg
xor
adc
popa
cmp
and
xchg
stos
mov
loop
pop
stos
stos
mov
aas
add
xchg
push
lahf
inc
loope
add
test
bound
mov
clc
stc
add
push
mov
mov
pusha
lea
jmp
jmp
dec
add
jmp
das
mov
stos
jbe
pusha
sbb
push
jp
inc
test
aam
in
fistpl
xchg
mov
inc
ret
cwtl
inc
and
shl
movsl
pop
inc
mov
xchg
dec
subb
inc
pop
sahf
test
movsb
dec
int
pushf
in
adc
sbb
sbb
je
int
mov
jnp
std
xor
dec
xlat
fnsave
mov
xor
lret
cwtl
mov
inc
mov
cltd
popl
shll
sub
sub
adc
or
push
xchg
test
into
ret
or
mov
lea
jb
stc
cmp
pusha
call
scas
mov
mov
cmp
shlb
inc
jle,pn
cmp
scas
mov
mov
push
shrb
dec
ljmp
dec
testl
cmc
insl
mov
imul
push
stc
xchg
xor
out
jmp
std
leave
pop
fwait
jnp
int
adc
cmp
push
movsb
pop
pop
cli
mov
sti
mov
mov
jbe
jle
lcall
sub
add
xor
sub
push
addb
shl
stc
fistps
cmp
xor
dec
cli
sbb
popf
or
and
mov
cwtl
jl
lret
pusha
lcallw
push
insl
xchg
xchg
daa
cwtl
lahf
pop
pop
jno
push
aas
shlb
and
xchg
xchg
xor
xor
lods
mov
loop
jp
sbb
jmp
mov
adc
nop
mov
push
out
lahf
jnp
dec
add
adc
pop
jp
das
and
cs
shlb
insb
mov
cmp
and
mov
adc
jbe
shll
mov
mov
mov
push
mov
mov
mov
gs
mov
xlat
dec
cmp
loope
ljmp
xchg
out
test
inc
mov
inc
and
jne
sbb
cmc
test
or
pushf
pushl
movw
lea
je
mov
mov
mov
pushf
jmp
movl
jle
rol
push
inc
xor
inc
rcll
inc
inc
mov
shrb
xchg
idivb
dec
imul
jecxz
stc
sub
or
cmp
scas
adc
repz
repz
and
pop
and
jb
mov
popa
inc
hlt
cld
mov
xchg
loope
dec
arpl
addr16
xchg
pop
pop
out
push
lahf
scas
mov
pop
les
ret
sbb
push
scas
inc
inc
and
movsb
xchg
mov
push
hlt
cld
movsb
mov
cmpsb
sub
mov
flds
shlb
lcall
hlt
sub
dec
jo
or
jae
push
negb
ficoml
enter
jno
adc
cmp
mov
lret
jp
and
scas
scas
aas
mov
mov
bound
pop
shrb
xchg
pop
dec
sbb
cmp
cmpsb
pop
cmp
or
jns
ds
cmp
inc
popf
xchg
int3
mov
mov
mov
aam
mov
mov
fstps
ror
popf
inc
jecxz
jmp
inc
sbb
orb
jo
in
inc
arpl
repnz
inc
lcall
inc
in
pop
inc
shrl
lock
xchg
in
sub
mov
das
mov
push
push
hlt
movsb
in
fisubs
sbb
int3
loope
stc
jns
jge
andb
inc
shlb
out
cmpsl
iret
mov
and
loop
push
push
xchg
fs
stos
or
insb
sub
sbb
jmp
call
jmp
jmp
pushl
push
lea
jb
bt
cwtl
mov
movzbl
pushf
sbb
shr
stc
bts
imul
bsr
rol
lea
bsr
and
bt
mov
cmp
push
xadd
xadd
mov
movzbl
inc
cmp
push
mov
clc
cmp
movb
pusha
pusha
lea
jb
bsf
cmc
mov
xor
add
not
not
not
adc
xadd
stc
mov
mov
aam
neg
dec
add
mov
movzbw
mov
setb
call
fstl
cmp
add
mov
lea
pusha
push
call
mov
lea
call
jmp
cmp
pushf
push
movw
lea
jae
push
sbb
mov
sar
mov
shl
mov
setl
setnp
jmp
jmp
sbb
cwtl
fiaddl
push
xchg
xor
stos
enter
mov
outsb
scas
lock
xor
imul
lret
or
fcos
rcr
fisubs
icebp
out
and
and
inc
lods
fistps
pop
pop
imul
mov
pop
pop
mov
pop
add
jmp
push
xor
or
jo
subb
push
or
jo,pn
sub
mov
loop
mov
imul
xor
arpl
cmc
mov
pop
cld
orb
loopne
mov
sbb
mov
pushf
movb
lea
jmp
bt
pushf
clc
add
pusha
movzwl
sub
dec
bswap
mov
add
mov
clc
add
stc
mov
call
xor
and
sahf
jbe
je
mov
mov
repnz
pop
in
outsb
and
cli
and
pop
sub
repz
xor
repz
mov
and
cmp
inc
sbb
sub
jbe
xchg
sbb
xorl
pop
jmp
pop
cli
adc
je
push
push
lock
sbb
push
jl
outsl
mov
xchg
js
lcall
jae
int
enter
pop
pandn
pop
jnp
pushf
outsb
push
out
sub
add
fldenv
or
cmp
sub
out
lret
iret
into
lcall
and
negb
sbb
dec
dec
aas
mov
sbb
ret
out
adcl
aam
adc
mov
mov
mov
push
cmp
ss
stos
mov
add
or
and
outsl
mov
push
sub
aaa
fildl
jnp
push
mov
vpavgw
in
mov
add
jnp
data16
flds
fidivl
les
out
imul
and
and
xor
jo,pn
daa
scas
push
cmp
or
cltd
adc
out
ss
or
jl
cs
lret
insb
sbb
push
out
dec
and
inc
inc
loopne
jmp
jge
rcrb
or
daa
sbb
shll
aas
lret
cli
add
cmp
sbb
aaa
lea
jnp
xor
xchg
je
outsb
pop
test
cs
cmp
fcomp
das
adc
popf
ficompl
scas
ja
add
int
pop
sbb
dec
adc
movsb
nop
int3
add
mov
hlt
sbb
mov
std
fsts
lahf
sbb
xchg
in
mov
lds
aad
push
lock
ds
mov
cs
shrl
icebp
sub
negb
and
iret
fwait
pop
inc
sbb
movl
call
call
movw
jmp
call
lea
jge
push
jmp
or
pushl
lea
je
bt
pusha
cmp
push
movb
mov
mov
lea
jne
push
pushl
inc
pushl
jmp
ror
movzbw
mov
stc
test
and
stc
call
aad
out
orb
jns
sub
outsl
icebp
sbb
inc
popa
in
inc
xchg
jle
dec
mov
lock
aaa
cld
mov
movsb
cmpsb
data16
add
xor
jl
cmp
inc
cs
cmp
aas
xor
movsb
dec
mov
lahf
or
ret
popf
das
push
push
cltd
xchg
xchg
add
cltd
pop
aaa
cmpsb
adc
aam
pushf
pop
mov
adc
mov
enter
into
xor
in
xlat
or
lcall
imul
imul
xor
and
sub
or
pushf
ds
in
xor
push
pop
adc
xor
jle
sub
adc
mov
je
push
lock
pop
lods
ror
addr16
sbb
sti
mov
pop
sar
cmp
and
pop
or
jae
lahf
mov
add
sbb
xchg
int
movsl
xchg
jnp
in
faddl
pop
mov
cwtl
rorb
call
shlb
test
movsb
pop
fadds
sbb
sub
or
fimuls
mov
iret
in
imul
insb
in
cmp
sub
icebp
scas
dec
fwait
aad
sub
pop
mov
or
movsb
jp
jbe
pop
xchg
in
pop
mov
mov
inc
push
sbb
stos
or
cmp
xchg
outsb
sahf
mov
sbb
xchg
sbb
pusha
test
cmp
pushf
sbb
pusha
lea
sub
pushf
test
xchg
pusha
pusha
xchg
sub
lea
add
sar
mov
call
call
push
lea
jne
call
jmp
lea
jne
bt
mov
clc
call
sub
sub
mov
shr
sub
call
stc
pop
ret
mov
data16
ljmp
rorl
jne
mov
mov
push
rclb
ret
ljmp
push
das
dec
popf
xor
adc
mov
sbb
adc
push
into
roll
xchg
sub
fs
mov
test
jo
cmp
push
repnz
andnps
pop
ret
ret
loope
xor
dec
daa
xlat
das
adc
sbb
test
aad
dec
shrd
pop
lea
das
pop
cmp
shl
or
pop
btr
add
pop
inc
pop
pusha
and
rol
sub
jae
pop
movsbw
or
cmc
bt
add
call
lea
jne
das
aad
jmp
subl
sbb
and
inc
jmp
or
js
mov
sub
xchg
xchg
ficoms
aad
movsl
and
mov
mov
mov
adc
loope
and
ljmp
daa
add
dec
jp
test
mov
jnp
push
sbb
stc
sub
jo
ret
xor
jno
inc
mov
jnp
pop
cmpb
inc
ret
iret
inc
addb
les
push
jb
jl
outsb
jecxz
mov
jmp
leave
gs
mov
xchg
cmp
lahf
out
cmpsl
leave
xchg
ret
and
les
jmp
dec
sub
hlt
dec
fwait
cmc
sub
repnz
stc
bound
sub
inc
push
pop
stos
xlat
cmp
xchg
dec
and
sbb
mov
cmpsl
shrl
sbb
lea
data16
bound
lcall
out
pushf
inc
cmpsb
fcmovnbe
adcl
or
mov
loope
imul
scas
iret
movsl
push
cmpsl
sbb
cmp
mov
xchg
nop
popa
dec
add
dec
cmc
adc
sub
and
mov
mov
sbb
bound
mov
mull
cltd
and
jmp
push
into
mov
test
cltd
mov
push
mov
fnstsw
repz
mov
dec
gs
clc
xor
xchg
jle
or
and
cmp
inc
inc
pusha
add
sti
sbb
jmp
pop
int3
mov
bnd
rolb
fidivrl
mov
inc
xor
xchg
je
scas
dec
mov
sbb
sbb
xchg
fldt
xor
jmp
pop
mov
fildll
sbbb
daa
push
mov
aas
ds
sub
xchg
jne
jbe
jnp
xor
cltd
pop
mov
fiaddl
sbb
mov
nop
fcomps
sbb
bsr
xor
setg
jmp
call
aad
jmp
dec
inc
rol
adc
mov
ljmp
adc
or
push
jb
push
sub
pusha
xchg
mov
addl
jns
lea
sbb
call
ss
stc
mov
xchg
push
pop
movsb
test
jnp
xor
ficomps
sub
xchg
nop
aas
adc
mov
aas
fistl
sub
int
cmp
push
mov
addl
inc
cwtl
or
or
sub
cld
xor
sbb
xor
jmp
rdtsc
bt
pusha
push
test
sub
jmp
not
movb
lea
jmp
movzbw
mov
mov
setae
call
sub
dec
cmp
not
shl
sbb
btc
stc
add
rcl
pusha
rcr
bt
ror
ror
add
rol
not
jmp
mov
mov
adc
in
adcb
adcb
and
jle
and
mov
and
adc
movsb
jne
and
jge
and
xchg
adc
xor
adc
pop
xchg
adc
cmpsb
mov
and
adc
dec
lea
and
jge
and
jle
and
adc
xor
adc
mov
xchg
and
movsl
adc
js,pn
and
jle
and
and
ret
adc
push
adc
js,pn
and
adc
ss
adc
xchg
adc
dec
lea
and
jge
and
je
and
and
mov
adc
dec
mov
adc
pop
ja
and
adc
mov
adc
stos
ret
mov
ja
and
ja
and
ja
and
adc
enter
pop
ja
and
adc
pop
ja
and
mov
adc
cmpsb
mov
and
adc
out
mov
and
adc
stos
ret
pop
ja
and
and
adc
mov
ja
and
ja
and
popf
adc
outsb
stos
adc
mov
ja
and
je
and
adc
xchg
and
stos
adc
fidivs
outsb
stos
adc
mov
stos
adc
push
adc
outsb
stos
adc
inc
xchg
and
adc
push
lods
adc
outsb
stos
adc
cmpsb
mov
and
adc
mov
adc
cli
movsl
adc
outsb
stos
adc
sahf
mov
adc
shlb
and
adc
inc
ret
outsb
stos
adc
js,pn
and
xchg
adc
outsb
stos
adc
cmpsb
lahf
adc
outsb
stos
adc
and
adc
loop
adc
in
adcb
and
adc
inc
lahf
adc
push
mov
adc
shlb
and
mov
adc
notb
adc
shlb
and
scas
adc
js
adc
notb
adc
mov
adc
mov
adc
inc
xchg
and
movsb
adc
je
adc
adc
adc
sahf
mov
adc
movsb
mov
and
mov
and
adc
cmpsb
xchg
adc
les
adc
dec
lea
and
mov
adc
mov
mov
adc
notb
adc
and
adc
cmpsb
mov
and
jb
and
xchg
adc
cmpsb
mov
and
mov
adc
adc
adc
js
adc
inc
ret
dec
lea
and
mov
and
adc
mov
adc
adcb
and
xchg
adc
pop
xchg
adc
adc
adc
adc
adc
mov
adc
xor
adc
and
adc
stos
ret
stos
adc
cmpsb
lahf
adc
mov
movsb
adc
mov
ret
or
adc
adcb
and
jne
and
adc
in
adcb
loop
adc
inc
lahf
adc
out
adc
pusha
xchg
and
adc
shlb
and
jnp
and
jb
and
adcb
inc
ret
xchg
and
adc
adcb
and
ja
and
lods
adc
xchg
and
jge
and
movsb
adc
enter
xchg
adc
or
adc
in
adcb
bound
adc
les
adc
inc
lahf
adc
and
adc
ss
adc
shlb
and
ja
and
adc
xchg
movsl
adc
xchg
and
and
adc
pop
xchg
adc
xor
adc
mov
pushf
pushf
lea
jmp
shld
mov
sar
mov
call
pushf
call
mov
pushf
jmp
pushf
call
lea
jae
push
pushf
popl
pusha
pushf
push
pushf
pushl
popl
mov
movl
lea
jmp
rol
movzbl
bt
stc
stc
call
sub
sub
shr
bsr
mov
cmp
add
push
pushf
push
mov
movw
pushf
pushf
push
lea
jmp
lea
jns
movzbw
mov
pusha
pusha
pushl
mov
pushf
call
pushf
pusha
mov
pushf
pushf
mov
movw
pushl
pushl
lea
jmp
push
call
cmc
pushf
bt
xchg
jmp
mov
mov
push
push
mov
movzbw
pushl
popl
bswap
movl
inc
lea
inc
pop
mov
jmp
rdtsc
pusha
cltd
call
call
mov
jmp
mov
mov
not
call
rol
das
mov
pusha
clc
add
push
call
call
lea
mov
jmp
not
push
movb
movb
lea
jmp
mov
mov
pushf
movb
lea
jmp
mov
push
add
call
jmp
bsr
clc
rcr
mov
clc
stc
add
push
lea
jmp
push
pushf
xchg
not
mov
dec
dec
pushl
pushl
popl
lea
call
push
inc
movb
decl
call
call
mov
call
lea
jp
pushf
mov
mov
jmp
call
movb
pushl
popl
movb
mov
movl
movb
lea
jmp
pushl
pushf
mov
push
movw
mov
push
movb
jmp
movl
push
mov
call
neg
clc
xor
mov
not
btc
lea
rol
rol
ror
rol
sub
or
bt
xor
and
not
and
mov
jmp
neg
or
movzww
cmc
test
clc
cmc
xchg
call
shl
bt
shr
jmp
mov
call
das
movzbw
daa
daa
mov
dec
or
mov
cmc
bt
bt
jmp
mov
call
call
stc
stc
not
pushl
pushf
movb
pushf
sub
test
clc
and
mov
jmp
cld
cmc
cmc
bt
popf
push
lea
jmp
pusha
mov
pushl
pushf
push
lea
jmp
pushf
not
push
push
movb
lea
jmp
add
push
bt
stc
mov
shrd
movb
pushf
pushf
jmp
seta
push
pushf
movzbl
mov
call
pusha
mov
jmp
neg
not
bsf
sub
lea
sar
bswap
movsbw
clc
sub
neg
or
shr
ror
mov
not
and
rcr
mov
ror
add
bsf
sub
movsbl
mov
rcl
mov
cmp
xor
rcl
shld
adc
movzbw
add
neg
pushf
xor
movzbw
btc
pusha
ror
shl
setns
xor
add
adc
shl
movzbl
movl
lea
add
btr
jmp
movw
pusha
mov
pushf
pushf
pushf
lea
jmp
pushf
popl
mov
push
movw
pushl
popl
mov
lea
jmp
btc
bswap
clc
ror
mov
dec
push
mov
cmp
test
pusha
sub
bt
call
and
movl
cmp
pusha
movb
pushf
pushl
lea
jne
btr
movzbl
shrd
xorb
lea
jmp
lea
jp
push
pushf
popl
je
pusha
pushl
popl
mov
pushf
pushl
lea
jmp
jmp
jmp
jmp
push
not
push
jmp
shr
pushf
pushf
mov
call
movsbw
mov
pushf
add
pusha
push
mov
push
jmp
mov
sub
setns
call
pushl
pushf
popl
mov
movb
pushf
mov
pushl
popl
push
pushl
pushl
mov
lea
jmp
mov
jmp
pushf
pushl
popl
pushf
mov
movb
push
lea
jmp
inc
jmp
lea
jg
mov
push
mov
push
lea
jmp
movzbw
mov
jmp
jmp
pushl
popl
pop
movl
pushl
call
call
not
mov
movl
inc
call
bsr
pusha
jmp
pusha
push
mov
call
call
push
inc
jmp
not
pushf
pushf
push
lea
jmp
pushl
add
pushf
lea
jmp
push
pushf
mov
push
jmp
pushf
pushl
popl
mov
mov
mov
movb
lea
jmp
pushf
mov
jmp
mov
mov
pushf
push
movb
push
mov
call
jmp
test
clc
xor
cmp
stc
xchg
bt
cmp
cmc
xor
cmc
call
pusha
cmc
pusha
lea
jbe
add
call
jmp
mov
test
cmp
call
mov
pushf
pusha
pushl
pushf
mov
jmp
not
pushf
stc
add
call
clc
stc
ror
cmp
bt
add
test
clc
test
sub
call
mov
inc
movw
pushf
mov
mov
not
movzbw
pushf
pushl
popl
lea
movl
mov
jmp
jmp
call
pushf
pop
mov
not
movsbl
jmp
pusha
call
pushl
popl
movw
mov
push
push
lea
jmp
add
call
jmp
not
movb
pushf
push
lea
jmp
mov
mov
mov
jmp
cmp
pusha
sub
stc
shr
pushf
jmp
pusha
mov
mov
pushl
mov
lea
jmp
pushl
call
shl
shr
rol
rcr
mov
setbe
mov
pusha
add
pushf
call
jmp
xchg
dec
lea
call
movw
mov
mov
pushf
lea
jmp
mov
not
inc
pop
pushl
popl
jmp
mov
mov
mov
lea
jne
shl
inc
bsr
jmp
mov
mov
xchg
jmp
mov
mov
mov
mov
jmp
not
inc
jmp
jmp
movl
pushf
movb
not
mov
movb
jmp
mov
call
lea
mov
jmp
sub
pusha
pusha
cmc
pushf
rol
call
mov
push
mov
pushf
mov
push
mov
mov
pusha
repz
popl
pusha
jmp
call
lea
jne
rcr
ror
rcr
xorb
pusha
mov
pushf
pushf
mov
lea
jmp
bswap
pusha
pushf
popl
jmp
jmp
rcl
movzbl
cmp
mov
test
pusha
or
movl
call
movzbw
pushl
rcr
rol
inc
sub
bswap
pusha
jmp
stc
call
mov
jmp
call
mov
pushf
call
jnp
inc
and
mov
cmc
jle
sub
test
clc
call
pushf
mov
pushf
push
jmp
lea
jne
shrd
not
btc
xorb
call
pusha
call
movb
pushf
mov
push
mov
pushl
ret
call
mov
pushl
pusha
lea
jmp
pusha
mov
mov
jmp
inc
clc
cmc
stc
jmp
jmp
call
pushf
call
xor
pushf
test
cwtl
movb
pushf
cmc
sub
pushf
mov
movb
lea
jmp
call
call
push
pushf
repz
popl
jmp
jmp
pushl
mov
call
pushl
mov
pushf
popl
pusha
pushl
popl
push
pushf
lea
jmp
add
jmp
repz
popl
movb
mov
call
pusha
mov
pushf
mov
push
movw
mov
mov
jmp
mov
push
pusha
pusha
pushl
ret
jmp
add
call
movb
not
movb
lea
jmp
dec
pushl
popl
push
inc
call
divl
push
pushf
pushf
mov
call
pushf
pushf
popl
push
pushl
popl
push
pushf
mov
lea
jmp
pushl
popl
lea
movzbl
mov
inc
movl
call
call
mov
call
pushf
push
add
movb
pusha
push
lea
jmp
pushf
mov
call
not
movb
movb
mov
movl
lea
jmp
mov
call
shr
lea
mov
cmc
stc
pushf
mov
add
pusha
pusha
pushf
pushf
lea
jmp
mov
call
mov
pusha
pushf
movw
pushl
pushl
ret
test
test
push
add
pushl
lea
jmp
btr
shl
pusha
cmc
mov
push
cmc
add
pusha
jmp
lea
jl
push
pusha
push
mov
mov
pusha
mov
mov
movb
mov
pushf
jmp
pushf
sub
pushf
mov
movb
mov
movb
lea
jmp
call
pusha
pushf
pusha
pushf
pushf
popl
call
pushl
mov
pushl
call
pusha
cmc
test
xor
jmp
push
pushf
mov
lea
je
mov
pusha
pushf
lea
jmp
lea
bswap
mov
mov
pushf
push
pusha
lea
jmp
or
aaa
mov
call
pushl
mov
pusha
lea
jmp
mov
call
lea
not
movzbw
movl
pushf
pushl
lea
mov
push
not
call
pushf
popl
pushf
pushl
popl
mov
push
mov
lea
jmp
push
pushf
pushf
mov
movb
pusha
pushl
pushf
mov
call
bt
add
movb
movb
mov
pusha
mov
pusha
pushf
lea
jmp
pushl
pushf
popl
pushf
pushf
movb
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
jmp
jmp
movzbw
mov
clc
jmp
pushl
push
mov
push
repz
popl
push
pushf
movb
pushf
mov
pushf
pushf
movw
mov
pushl
mov
movzbl
bswap
push
mov
jmp
clc
clc
call
mov
pop
pusha
pushf
push
pushf
lea
jmp
jmp
push
movzbw
pusha
pop
mov
movzbw
not
call
jmp
pusha
cmp
xor
jmp
not
movb
movb
inc
mov
not
push
push
lea
jmp
cmp
lea
je
pushf
push
mov
lea
jne
ror
lea
btc
cmc
xorb
bswap
jmp
rol
push
pushf
stc
lea
pushf
sub
jmp
bswap
stc
mov
cmc
bswap
rcr
mov
call
btc
mov
push
cmc
mov
add
jno
add
jmp
movw
mov
pushl
not
pushf
pushf
pushf
pushf
lea
jmp
call
pushf
call
pushf
push
mov
mov
lea
jmp
push
pusha
pushf
mov
pushf
jmp
mov
pusha
lea
jmp
bswap
not
xor
and
pushf
xor
movzbl
sub
add
call
push
jmp
not
pusha
movb
inc
mov
not
pushf
mov
movb
movw
lea
jmp
pusha
movb
repz
popl
call
mov
pushl
mov
call
call
push
lea
pusha
pushf
mov
pushl
pushf
push
pushf
lea
jmp
push
pushf
pushl
popl
push
lea
jmp
inc
jmp
add
push
pusha
mov
pushf
pushf
lea
jmp
call
pushl
push
lea
jae
mov
call
push
lea
jne
bsf
sar
mov
push
cmc
call
lahf
movsbl
mov
pusha
mov
call
not
cmc
mov
add
stc
setae
not
mov
pushf
pushl
sub
jmp
push
shrd
daa
mov
shld
test
bsf
pop
aas
and
push
mov
mov
btr
shl
lahf
mov
shrd
mov
cmc
mov
bsf
seto
aas
mov
pushl
aas
pushl
popf
lahf
mov
call
mov
pusha
add
call
test
inc
rol
movzbl
shl
pusha
sub
bt
rol
jmp
neg
aad
shr
aam
mov
neg
rcr
mov
cmc
cmc
bt
jmp
stc
mov
pushf
test
sub
movl
mov
movb
lea
jl
dec
call
bt
rol
clc
stc
clc
add
mov
jmp
pushf
popl
push
pushl
popl
pushl
push
lea
jmp
sub
call
mov
lea
je
cmc
jmp
lea
jne
jmp
jmp
mov
push
lea
cpuid
bt
jmp
mov
call
not
sbb
and
mov
stc
add
push
movb
movl
pusha
lea
jmp
mov
jmp
inc
lea
jne
not
push
lea
jmp
rcr
bt
bswap
push
mov
pushf
cmc
clc
add
movw
pusha
pushf
pushf
lea
jmp
pushf
pushf
mov
not
pushf
inc
call
call
xchg
pushf
pushf
movzbl
mov
pop
call
push
lea
jne
rcl
mov
mov
cmp
pushf
clc
cmc
and
stc
bt
pushf
mov
cmp
pushf
mov
pushf
lea
jne
btr
xorb
pusha
not
mov
pusha
lea
jmp
mov
call
mov
movsbl
pushf
not
pushl
popl
inc
pop
pop
pop
movl
jmp
jmp
cmp
mov
clc
bt
cmc
bt
sub
pushl
mov
jmp
repz
popl
push
pushf
pushf
mov
movb
push
pushf
pushf
mov
pushl
call
pushf
mov
movb
push
movl
pushf
lea
jmp
mov
pushf
call
xchg
mov
btr
ror
mov
stc
pushf
not
call
pushf
call
add
cmp
cmc
cmp
cmp
sub
call
not
push
call
mov
clc
pusha
and
call
call
pushf
movb
push
pushl
popl
pushl
movw
lea
jmp
sub
test
cmp
cmp
add
call
not
pushf
pushf
lea
jmp
test
call
call
cmp
pushf
pusha
sub
pushl
stc
stc
call
mov
inc
mov
mov
mov
lea
jle
movzbw
pushl
mov
bswap
jg
push
pushf
inc
movzbw
mov
call
xor
bt
setne
push
mov
xor
clc
cmp
add
rcr
jmp
shl
add
add
bts
stc
jmp
jmp
pushl
pushf
popl
jmp
mov
movb
not
mov
mov
lea
jmp
clc
clc
sub
pusha
pushf
movw
pushf
mov
push
lea
jmp
pushl
popl
push
movb
push
pushl
lea
jmp
xchg
pop
std
not
mov
pusha
pop
call
sar
test
rol
mov
pushf
sub
bt
pushf
add
call
stc
jmp
pusha
mov
mov
movb
push
lea
jne
pushf
sar
mov
mov
test
and
movb
clc
cmp
test
cmp
mov
call
call
push
pushf
popl
pushf
jmp
call
push
mov
not
jmp
call
movsbw
movl
call
add
jmp
call
sub
shl
inc
mov
add
clc
shl
stc
mov
pusha
pusha
test
sub
stc
shl
jmp
cmc
sub
pushf
pusha
call
ror
shl
mov
clc
stc
add
pusha
movb
mov
push
lea
jmp
pushf
pushf
popl
pushl
call
mov
push
call
mov
push
dec
call
jmp
call
pushf
mov
mov
lea
jmp
pusha
jmp
jmp
cmp
sub
cmp
mov
movb
sub
pushf
push
pushf
lea
jmp
mov
pushf
pushf
pusha
lea
jmp
mov
movb
not
pushf
push
mov
pushf
lea
jmp
jmp
not
mov
mov
mov
clc
pushf
not
jmp
inc
jmp
stc
pusha
add
jmp
mov
pushl
push
pushf
movl
lea
jmp
add
add
call
not
pushf
pushf
pushf
call
mov
jmp
pushl
pushf
mov
mov
pushf
movw
mov
lea
jmp
pushf
pushf
repz
popl
jmp
cmp
mov
mov
push
clc
sub
call
pushf
call
movw
pushl
popl
push
push
pushf
movb
lea
jmp
lea
mov
lea
bswap
movsbw
mov
push
pusha
jmp
call
jmp
jmp
shl
call
movsbw
inc
stc
not
lea
setne
shld
rcl
mov
test
sub
setl
bsr
sub
shl
ror
btr
movzbl
mov
test
shl
neg
mov
clc
sub
xor
add
rol
btc
mov
inc
btr
xor
cmc
call
call
and
sar
mov
cmc
pushf
call
call
xadd
rcl
mov
push
rcr
xor
add
call
xor
dec
cmp
mov
movsbw
and
shrd
mov
bt
add
call
pusha
mov
call
movsbw
mov
jmp
not
pushf
pushf
push
inc
pushf
jmp
pusha
pushf
mov
pushf
pushf
call
push
mov
pusha
lea
jne
pusha
movb
pushf
popl
mov
pushl
popl
pusha
mov
pushl
lea
jmp
add
call
jmp
mov
pushf
mov
push
push
pushf
call
jmp
clc
cmpl
jmp
inc
push
call
setl
inc
mov
push
jmp
dec
mov
jmp
mov
push
call
call
jmp
call
neg
btc
cwtl
dec
lea
cmp
cmp
pusha
jmp
movl
lea
mov
jmp
bsr
mov
push
clc
sub
call
pushf
dec
jmp
mov
mov
jmp
mov
pusha
mov
pushl
pushf
lea
jmp
jmp
mov
shr
call
repz
popl
call
movl
xchg
call
clc
and
pushl
movw
call
bt
pushf
push
sub
push
mov
push
movb
push
lea
jmp
bswap
test
clc
clc
movb
add
cmp
pushf
bt
add
mov
mov
cmc
sub
cmp
test
call
jmp
lea
ja
dec
btr
mov
das
clc
das
xor
lea
btc
sub
lea
lahf
lea
shr
test
and
pushf
bsr
pusha
lea
sub
lea
jb
mov
push
pop
bswap
pushf
movzbw
movzbw
movsbl
push
cld
pushf
mov
cld
lea
cld
xchg
std
mov
pushf
cld
jmp
mov
movw
not
jmp
call
repz
popl
call
call
pusha
mov
movw
mov
push
lea
jmp
mov
pushf
pushf
pusha
lea
jmp
ror
bt
mov
call
push
lea
jns
rep
xchg
pop
bsr
pusha
mov
mov
lea
jp
push
pushl
popf
pusha
lea
jmp
pusha
mov
clc
cmc
rol
test
push
mov
add
call
jmp
mov
call
push
btr
adc
mov
setno
not
bswap
add
bswap
shld
sub
add
clc
dec
rol
mov
clc
call
not
bts
or
xor
bt
pusha
rol
or
add
stc
bts
sub
test
and
shrd
bsf
neg
sar
mov
stc
pushf
add
jmp
movl
pop
mov
pushf
push
call
pushf
cmc
pushf
or
test
xor
pushl
pushf
jmp
mov
jmp
sub
test
test
cmc
shl
pushf
jmp
pushf
xchg
inc
xchg
mov
push
push
pushl
popl
movzbw
not
inc
movl
dec
movzbl
mov
xchg
setge
seto
not
dec
push
inc
call
cmc
call
mov
jmp
jmp
rol
mov
sub
cmp
test
jmp
bt
clc
xchg
clc
mov
or
ror
mov
jmp
mov
movb
movb
movb
lea
jmp
seta
pusha
movzbl
movb
dec
movb
add
jne
test
test
sub
bt
bt
not
jno
stc
stc
clc
add
pusha
pusha
clc
ror
push
sub
jmp
test
sub
mov
pushf
rol
pushf
bt
sub
stc
movb
pushf
push
ror
push
mov
stc
add
clc
cbtw
call
sub
push
add
jnp
pusha
cmpl
jmp
push
bt
clc
sub
mov
pushl
pushf
mov
push
pusha
pushl
pushf
lea
jmp
pushf
pushf
pushl
pusha
pushf
popl
pushl
pushl
popl
push
lea
jmp
sub
clc
pushf
mov
push
pushf
sub
mov
call
jmp
mov
call
jne
mov
add
bts
clc
inc
mov
stc
cmc
cmc
test
not
push
cmp
bt
not
cmp
stc
clc
sub
cmp
stc
mov
and
call
not
call
not
pusha
mov
mov
jmp
mov
pushf
mov
pushf
lea
jmp
jmp
mov
push
mov
pusha
mov
call
pushf
mov
pusha
mov
mov
pushf
jmp
push
mov
bswap
movzbl
push
mov
push
jns
movzbw
repz
inc
movzbw
push
push
xchg
lea
push
lea
push
lea
pushl
lea
dec
inc
jmp
pushf
repz
popl
jmp
push
pushf
push
mov
push
pusha
push
pushl
lea
jmp
mov
rep
shrd
movzbw
stc
adc
mov
shl
test
mov
pushl
pushl
popf
movw
pushl
lea
jmp
call
jmp
lea
jge
pushf
ror
pushl
cmp
bt
cmc
add
jmp
pushl
popl
pushf
lea
jmp
mov
pushf
lea
jmp
not
xchg
mov
mov
mov
pushf
pushl
push
pushl
ret
pushf
mov
mov
lea
jmp
call
pushl
popl
movsbw
lea
jmp
xchg
inc
bswap
bswap
inc
mov
lea
pushl
popl
pusha
bswap
movzbw
movl
movsbw
pusha
mov
push
not
pushf
pushf
pushf
mov
inc
call
call
lea
mov
push
xchg
lea
cld
movsbl
mov
std
cld
cld
call
movb
repz
popl
pushf
call
mov
clc
mov
pushf
shr
test
neg
mov
test
call
push
mov
mov
mov
pushf
pushl
pushl
ret
lea
pop
mov
jmp
jmp
pushf
call
call
mov
pushf
pushf
pusha
mov
lea
jmp
push
mov
jmp
shr
shr
mov
test
call
cmp
sub
clc
bt
pushl
mov
stc
sub
call
pushl
popf
pushl
lea
jmp
movb
lea
jbe
pusha
mov
jmp
pushl
jmp
ror
bt
pushf
sub
clc
bt
call
mov
push
lea
jmp
bts
movzbl
call
pushf
mov
lea
jae
pushf
pushf
push
mov
call
jmp
push
mov
pushl
call
lea
jg
pusha
mov
pusha
pushl
pushf
push
pushf
popl
pushl
movb
pushf
pushl
popl
mov
movw
mov
lea
jmp
neg
or
shld
not
mov
mov
xor
mov
jmp
mov
jmp
mov
push
movl
movw
pushl
lea
jmp
test
stc
pushl
not
call
pushf
popl
pushf
call
pushf
pushf
not
mov
lea
jmp
jmp
pushf
popl
pushf
jmp
neg
xor
rol
movzbw
stc
ror
ror
mov
add
jne
shrd
mov
xor
shl
btr
shld
xor
movzbl
shr
pusha
bts
add
btr
rcr
rcr
not
mov
mov
clc
rol
lea
jg
clc
clc
bt
add
call
ror
adc
jmp
mov
jmp
pusha
sar
inc
shr
mov
pusha
stc
stc
sub
stc
add
mov
mov
jmp
bt
clc
pushf
neg
call
pusha
rep
xor
inc
btc
push
mov
stc
btc
sub
mov
call
add
jp
cmc
test
add
cmp
js
sub
call
push
pushf
popl
jmp
dec
pushf
not
bsr
mov
stc
cmc
xchg
cmp
cmc
test
lea
stc
xor
movb
neg
stc
cmp
pusha
pushf
xor
call
pusha
stc
pushl
popl
bt
clc
add
stc
pushl
popf
push
pushl
pushl
lea
jmp
pushf
mov
pushf
xchg
lea
movzbw
mov
movzbw
movsbw
pushl
popl
push
pushf
movl
lea
movw
mov
pusha
mov
jmp
mov
mov
pusha
movw
lea
jmp
pop
mov
call
seta
notl
not
mov
test
push
cmp
sub
pusha
pushf
pushf
stc
and
call
pushf
mov
cmp
stc
add
call
pushf
call
jmp
mov
pushf
call
rcr
bswap
seto
mov
rol
shl
bt
bts
mov
pusha
mov
cmp
bt
test
pusha
add
cmp
shld
jmp
mov
jmp
push
pusha
push
not
pushl
push
push
lea
jmp
mov
pushl
call
lea
js
push
push
mov
pusha
pushl
pushf
popl
push
jmp
call
jmp
pop
not
movl
lea
mov
call
clc
add
mov
pushf
push
lea
jmp
call
mov
push
lea
jmp
inc
lea
pushl
call
mov
pushf
pusha
pushf
popl
mov
pushl
popl
pushl
pushf
pushf
lea
jmp
movb
mov
jmp
mov
jmp
call
rol
shr
cmc
sub
bts
sets
ror
push
dec
bsf
add
jmp
push
pushf
movl
pusha
mov
pushl
pushf
pushl
ret
pushl
inc
call
lea
mov
jmp
pushf
pushf
popl
pushl
pushl
popl
pushf
mov
movb
lea
jmp
push
xchg
mov
mov
bt
mov
push
sub
pushf
lea
jne
stc
call
mov
pushf
call
movl
dec
pop
push
mov
pushf
pushf
movb
not
pushf
mov
movw
call
movw
lea
jb
mov
pushf
lea
jmp
pushf
push
mov
pushf
pushl
lea
jmp
inc
jmp
setbe
rcl
push
mov
cmp
clc
xor
mov
jmp
mov
pushl
mov
jmp
neg
cmp
jmp
mov
jmp
jmp
mov
push
jmp
pushl
mov
not
pusha
jmp
push
push
jmp
pushf
push
push
mov
movb
pushf
pusha
lea
jmp
call
shr
aam
lea
pusha
mov
call
pusha
pushf
call
mov
movsbw
inc
mov
movzbl
dec
not
pop
pushl
popl
pop
inc
call
push
mov
mov
jmp
mov
pusha
pushf
movl
lea
jmp
call
bt
mov
bt
jns
push
add
mov
movw
pusha
push
lea
jmp
push
pushf
pushf
popl
pushf
mov
pushf
movb
pushl
popl
push
push
pushl
push
lea
jmp
call
inc
movb
push
call
mov
movsbw
repz
jmp
call
setnp
push
push
call
pusha
add
pushf
ror
call
test
stc
add
push
mov
movb
lea
jmp
pushf
movw
pusha
call
call
jmp
mov
call
pushl
cmp
cwtl
mov
sub
lea
jl
pushf
mov
pushl
movl
pushf
pushf
lea
jmp
jmp
push
mov
pushf
mov
push
push
mov
mov
pusha
pusha
push
jmp
mov
pushf
jmp
mov
call
movb
mov
mov
call
rcl
mov
cmp
add
pushf
pusha
push
push
lea
jmp
call
pushl
pushl
mov
pushf
lea
jmp
clc
and
rcl
movsbw
mov
shr
mov
push
add
pushf
push
mov
mov
movb
mov
pusha
push
lea
jmp
call
xor
rcr
pushf
not
mov
call
pushl
repz
popl
movb
pushl
movl
mov
pushf
jmp
pusha
sub
pusha
call
jmp
add
add
dec
add
add
mov
adc
or
pop
add
add
jno
add
jno
add
jb
add
add
sbb
add
add
test
jne
add
jbe
add
add
in
add
inc
jp
add
jp
add
jnp
add
jl
add
add
roll
in
add
add
nop
add
add
call
pop
add
pop
add
pop
add
pop
add
