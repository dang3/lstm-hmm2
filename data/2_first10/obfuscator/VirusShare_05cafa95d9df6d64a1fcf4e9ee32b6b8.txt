std
into
fsubl
cmp
shrl
mov
imul
jp
pop
mov
leave
push
icebp
ret
repz
out
daa
xchg
idivl
or
cmp
imul
scas
mov
lods
repnz
mov
fmuls
add
leave
ljmp
div
repnz
leave
mov
imul
pop
add
or
jp
mov
outsb
sbb
jmp
movsl
mov
popf
rorl
clc
in
xchg
mov
out
ret
sbb
sbb
mov
jb
arpl
push
and
sti
lea
lods
jmp
leave
jae
xchg
push
fsubrl
lds
jne
jmp
jno
mov
mov
in
push
frstor
mov
cli
data16
dec
inc
loopne
stc
lret
add
mov
push
dec
or
aaa
sbb
pusha
cs
test
loop
iret
adc
cwtl
add
jb
imul
aam
aam
insl
ja
cmp
xchg
push
pop
shll
pop
loopne
or
ds
adcb
and
fstps
ljmp
push
outsl
negl
imul
push
inc
into
cmpb
cmp
shrb
lahf
sub
push
pop
hlt
mov
aas
xor
out
iret
jnp
cmp
cmpb
scas
mov
fists
addl
mov
popf
fcmovnbe
lods
push
push
mov
addr16
mov
or
aaa
mov
adc
sbb
lahf
int3
add
xor
pop
lret
jae
push
lahf
or
fidivs
pop
in
loop
pop
xchg
sar
jle
int3
cmp
xor
mov
xchg
sar
jle
int3
cmp
mov
in
jl
cmp
xchg
out
lea
int3
xchg
adc
vpsubsb
pushf
test
ficoms
shll
dec
in
mov
imul
mov
mov
cmpsb
cmpsb
sub
out
loope
dec
daa
hlt
std
or
imul
ja
aad
rolb
mov
lcall
enter
aaa
xchg
xor
cmpsb
stos
aam
cmp
movsl
shrb
popf
xchg
rol
inc
in
sub
xchg
pop
outsl
lds
call
out
fcom
push
arpl
decl
or
and
adc
mov
enter
cltd
push
jo
fimull
adc
push
mov
bound
mov
and
push
mov
cmp
dec
rcrl
jb
lea
pop
add
jo
jmp
out
add
idivl
testb
or
dec
jl
lret
iret
mov
int
jnp
and
lds
and
lcall
mov
mov
js
mov
stos
arpl
pushf
ret
inc
popa
push
fnstenv
mov
in
dec
ss
xor
loop
int3
push
adc
popf
fldl
sahf
movsb
aas
pop
lcall
mov
icebp
push
out
out
xchg
bound
addl
ja
lret
in
repnz
xchg
pop
lea
xor
sbb
ja
mov
fadd
sub
add
test
fldenv
cmp
cltd
cltd
pop
hlt
xchg
jb
stos
mov
mov
fldenv
pop
xchg
es
push
out
inc
out
mov
lods
or
and
adc
sub
push
fistpll
in
sti
adc
inc
rcrl
sbb
inc
inc
jp
repnz
js
fsubr
xor
pop
push
push
test
cltd
pop
mov
pop
push
jne
jae
sahf
push
xor
cmpb
xchg
and
xchg
push
es
and
out
mov
or
sub
xchg
rcrl
or
loope
scas
pop
xor
daa
cmp
sti
mov
or
outsl
es
push
test
nop
xorb
lahf
xchg
xchg
mull
xchg
dec
mov
jno
in
sub
sub
jge
push
sub
add
jns
dec
stos
xor
jbe
icebp
arpl
loopne
leave
pop
push
std
xor
int
mov
dec
push
jle
cmpsl
test
sub
fs
aad
imul
pop
ljmp
mov
add
hlt
inc
add
add
add
sub
add
mov
add
add
add
js
add
pusha
add
add
leave
inc
add
add
sbb
adcb
dec
sub
mov
jnp
sbb
inc
lret
push
shl
inc
jbe
int
mov
pop
lock
cmpsl
popa
out
or
and
adc
push
pop
stc
adc
push
add
and
xchg
cli
dec
movsl
mov
jge
loopne
add
mov
cmp
rol
xlat
jg
sub
or
jns
sub
icebp
xchg
call
cmp
bound
fsubrp
xchg
sbb
xchg
sbb
lret
xor
sub
das
xchg
data16
push
adc
fstps
fistpl
adc
jnp
scas
adc
add
repz
clc
sub
xchg
pop
pop
popa
fwait
or
push
push
test
cmc
adc
push
xor
mul
sbb
cmc
adcb
insb
xchg
xchg
sahf
mov
sarl
aas
inc
xor
sahf
out
rcl
pop
sbb
xchg
std
cmp
out
repz
popa
mov
add
push
int3
aam
adc
in
add
out
sti
jp
sti
insl
pop
inc
inc
cmpsb
pusha
mov
stos
pushf
dec
xor
sbb
cmp
and
icebp
mov
scas
inc
push
loopne
leave
or
lcall
lock
in
xchg
imul
fdivr
in
cwtl
dec
fnstsw
pop
mov
das
mov
mov
mov
jl
aam
data16
mov
mov
cld
dec
push
inc
push
add
sub
lea
pop
leave
pop
cmp
fs
jg
lahf
rcrl
or
cmp
cwtl
sub
cmp
out
pop
mov
fisttpl
push
xor
xchg
imul
jnp
xor
xchg
xchg
xor
divl
mov
inc
cwtl
lahf
mov
addr16
mov
sbb
sarl
adc
fistl
pop
xchg
sub
nop
add
mov
push
and
mov
out
and
mov
ss
and
sbb
jne
or
jmp
or
pop
and
sbbb
aam
pushw
lea
jecxz
and
pushf
xchg
push
add
repnz
jecxz
mov
sar
pop
aam
sbb
xchg
inc
mov
test
movsl
out
push
iret
test
xchg
adc
pusha
xchg
adc
sbb
inc
sbb
add
sahf
ja
dec
cmpsl
fstp
testl
mov
stc
jnp
data16
push
cmp
inc
rclb
xlat
imul
jae
xchg
lret
icebp
cmp
or
std
push
in
int
mov
pusha
add
das
dec
decb
sbb
pop
jno
mov
das
xchg
add
inc
xchg
jp
lret
or
fiadds
push
mov
pop
pop
push
xchg
mov
rorl
pop
mov
push
clc
inc
ret
dec
insb
mov
push
xor
sub
ja
cmp
dec
stos
jns
scas
outsl
cmp
xchg
insb
cmp
test
sub
sub
sub
and
pop
xchg
sub
imul
jae
xor
mov
and
scas
jns
fstps
bsr
or
sbb
sbb
outsl
and
push
das
cltd
outsb
ja
adc
pop
dec
xchg
push
add
add
pextrw
xor
cmpb
sub
sub
xor
push
mov
xchg
or
xor
push
ja
insb
push
test
inc
in
mov
test
fmull
jecxz
scas
push
call
sub
andb
incb
scas
pop
pop
pop
cwtl
fsub
adc
stc
jns
loopne
jae
mov
fldt
in
out
int
push
pushf
xchg
jg
mov
fwait
cld
cmp
push
adc
shlb
insl
mov
mov
sahf
push
rcll
in
lret
ja
mov
leave
out
rclb
xchg
jne
invd
add
data16
cltd
pop
ret
cmp
test
jp
repnz
pusha
cmp
lds
in
sub
movsl
jmp
lea
mov
stos
pushf
cld
repz
lret
jbe
int3
jmp
dec
add
adc
int3
popa
sbb
stos
gs
dec
mov
jecxz
xlat
add
icebp
rorb
loop
jnp
hlt
xchg
push
ret
lods
and
ja
xchg
cmp
shlb
sbb
aas
inc
movsl
mov
and
pop
ret
adc
sub
and
orb
jnp
adc
cmp
jecxz
ljmp
cltd
pop
cmpsl
push
lcall
cld
pushf
push
dec
outsb
mov
mov
adc
stos
cmc
xor
stos
push
imul
aaa
jae
pop
jnp
xchg
ret
rorb
push
int3
jecxz
jo
loope
hlt
pusha
push
xor
adc
arpl
rolb
adc
push
rcrb
ret
aam
daa
out
leave
lcall
xor
dec
fisttpll
into
push
fs
cmp
xchg
fbstp
xor
pcmpgtd
inc
xor
daa
popf
push
pop
lea
dec
sub
and
mov
arpl
mov
inc
cltd
mov
lods
lods
pop
jne
mov
sub
push
icebp
bound
jo
push
mov
outsb
inc
xchg
jo
arpl
mov
xor
xchg
ror
sbb
mov
out
insb
lret
mov
xorl
aas
and
ret
into
push
ljmp
adc
mov
pop
push
mov
pusha
xor
mov
into
cltd
out
cmpsl
test
or
dec
mull
out
ljmp
das
cmc
inc
ss
mov
push
xor
sti
cmp
mov
push
adc
push
mov
pop
loopne
lahf
pop
pushf
add
lcall
outsb
mov
mov
xchg
adc
fdivl
inc
out
mov
cmp
add
pop
repz
mov
insb
ret
jnp
cld
cmc
mov
addr16
les
jecxz
pop
sub
mov
and
xor
mov
stos
int3
add
je
xor
sbb
xchg
jno
xchg
pop
js
aad
mov
rorl
les
sti
adc
mov
aas
dec
addr16
adc
or
jle
outsb
nop
stos
adc
shrb
dec
jecxz
cmp
cmp
xchg
jae
inc
fwait
ss
out
pop
adc
andb
or
jmp
pop
adc
and
jbe
pop
lea
aas
in
mov
loopne
pop
mov
and
dec
sahf
or
arpl
pop
dec
int3
mov
push
cmp
lret
bound
rcll
sbb
jl
aas
dec
or
jmp
mov
sbb
jge
and
mov
cld
add
dec
sbb
mov
shl
sbb
mov
lds
sub
sbb
push
xchg
xchg
cmpsb
repz
cmp
ja
and
fbstp
xor
rcrl
subl
dec
cmp
mov
clc
pop
sub
mov
hlt
or
icebp
stos
inc
mov
push
and
dec
in
and
xchg
pop
aad
leave
int3
enter
sub
repnz
push
ds
shll
jmp
callw
movb
xchg
mov
xlat
add
mov
pop
rcll
fadds
aas
stos
mov
mov
mov
adc
sub
jbe
push
jnp
aad
jle
leave
aas
loope
cli
imul
scas
dec
cld
loopne
cmpsb
test
push
sbb
xlat
add
sbb
push
jmp
iret
lock
cmp
push
mov
add
xchg
les
dec
ss
int3
lds
adc
pop
mov
stos
pop
out
push
imul
sti
adc
mov
dec
emms
ficoml
inc
cmpsl
je
pop
cltd
arpl
mov
cmp
pop
jl
lods
sbb
movsl
das
arpl
lret
xlat
mov
stc
inc
or
mov
daa
cmp
mov
xchg
dec
cli
pushf
sub
repnz
jb
inc
cli
iret
scas
in
popa
push
aaa
aaa
mov
fdiv
movsl
mov
sub
jns
cmc
jae
sub
mov
pop
addr16
pop
out
dec
sub
inc
mov
jnp
out
mov
std
mov
inc
lea
mull
dec
dec
sub
dec
pop
push
dec
or
xchg
sub
xchg
mov
shlb
mov
jg
decb
jle
jo
mov
dec
xlat
jg
push
push
test
enter
or
jb
ds
imul
pop
add
cmc
sub
outsl
es
sub
mov
inc
or
xchg
cmp
inc
scas
movsl
xor
xchg
sbb
adc
push
cli
adc
je
push
shl
and
int3
in
adc
pop
xor
push
xor
adc
sub
dec
cmp
cmpsl
lcall
fsubl
ljmp
mov
xor
mov
lahf
jae
dec
mov
int3
les
test
outsl
xchg
push
das
push
jo
jb
inc
aad
subl
add
sbb
or
pop
sbb
sbb
adc
lds
add
mov
or
sub
rorl
and
movsl
inc
jbe
std
insl
adc
dec
sub
rcl
movsb
ljmp
jnp
cmp
fadds
mov
fildl
out
lahf
scas
push
popf
stos
adc
xor
shlb
data16
ss
mov
adc
fstpt
cld
and
mov
add
aas
pop
mov
inc
out
lods
dec
dec
pusha
dec
outsb
sbb
in
inc
xlat
add
adcb
out
inc
add
and
xor
xchg
sahf
dec
mov
clc
jnp
out
sub
sub
jo
shrb
jmp
in
sub
mov
or
int
inc
add
insl
and
mov
fs
inc
rep
inc
lahf
sarb
data16
fwait
xor
adc
insb
push
adc
cmp
or
sub
adc
push
jmp
leave
clc
dec
std
popf
mov
cmovae
push
imul
jb
and
aas
cmp
subl
and
clc
pop
mov
out
pop
push
aad
mov
adc
inc
pop
mov
pusha
es
pusha
xor
jns
sbb
push
pop
mov
aad
outsl
jnp
nop
int
rcr
es
ljmp
and
or
mov
push
cmp
sbb
jmp
push
fcmovne
push
adc
scas
pop
cmp
xor
test
sub
mov
lret
jge,pn
mov
sub
cmpsb
mov
xchg
jp
lahf
imul
test
jno
inc
push
mov
test
dec
lret
mov
push
pushf
negl
mov
add
lret
sbbb
or
sbb
idiv
hlt
scas
mov
loop
js
popa
into
xlat
mov
repz
in
add
push
pop
lahf
aaa
fdivl
pop
out
push
and
repz
xor
aaa
or
xchg
pusha
int
inc
icebp
ret
call
test
stos
ficomps
push
aaa
imul
ret
push
insb
rcrl
sub
sub
ret
jne
xchg
sarb
mov
mov
dec
test
mov
ds
jecxz
xchg
mov
mov
pop
scas
mov
sahf
mov
mov
fsubl
dec
int
addr16
xchg
daa
sbb
and
xor
in
fmuls
jmp
dec
add
xor
pushf
mov
dec
lock
dec
inc
insb
inc
fldl
jnp
pop
sbb
mov
mov
popf
adc
jecxz
rcrb
mov
add
sub
insb
andl
jge
stos
int
add
pop
pushw
sub
xor
shrl
mov
fnsave
popf
into
imul
fdivrp
adc
into
xlat
movsl
out
fldcw
scas
mov
fcompl
cld
jp
adc
out
or
arpl
mov
cld
js
push
pop
dec
imul
sbb
push
push
jmp
jb
popa
call
xor
sub
gs
jmp
add
jmp
aam
xchg
sbb
mov
shll
enter
add
add
pusha
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
jmp
mov
sub
pop
ret
or
ret
dec
addb
scas
hlt
ljmp
push
dec
jl
sub
inc
sgdtl
or
sub
jnp
or
lods
push
xlat
mov
adc
jmp
cltd
adc
cltd
jns
lock
sub
cmp
mov
sbb
rol
es
into
inc
ja
pop
imul
sub
ja
inc
or
push
dec
dec
push
and
call
push
sub
push
and
mov
xlat
ficoml
test
movsb
fmuls
mov
sbbb
cltd
fs
jns
push
cli
adc
xchg
rorl
iret
or
int3
adc
test
movb
and
push
cmp
mov
subl
dec
cmp
mov
pop
or
or
sbb
xchg
and
xor
cmp
push
push
fwait
add
inc
mov
or
mov
or
sub
sti
loopne
and
dec
movsb
repnz
scas
or
rolb
lret
pop
pop
cwtl
leave
jle
cmp
or
ret
lods
ret
int
xchg
bnd
fidivrs
aas
and
dec
push
pop
stos
jmp
dec
cwtl
sbb
mov
dec
mov
fsubr
push
pushf
push
data16
jne
push
xchg
stos
fcmovne
pop
add
push
movsb
mov
cmpsl
mov
mov
jae
adc
add
add
add
add
inc
add
add
in
movb
xor
fsubp
dec
pop
xor
lds
dec
mov
jecxz
pop
sub
pop
mov
movsb
inc
inc
hlt
sub
popa
imul
fcmovbe
or
loop
add
add
filds
add
add
add
out
and
add
add
pushl
inc
repnz
mov
push
jno
idivb
jge
dec
add
ficomps
pop
push
mov
lods
adc
cmp
dec
lcall
or
mov
or
jns
and
mov
mov
movsb
jle
and
imul
jb
cwtl
leave
jnp
mov
jge
imul
shll
lods
jl
or
inc
add
nop
aaa
pusha
jecxz
in
sbb
dec
fdivs
leave
mov
test
je
out
icebp
mov
lret
xchg
addr16
jg
jns
cmp
or
fdiv
or
test
fwait
aad
or
and
mov
mov
and
and
xchg
aad
jmp
inc
ss
sub
mov
cmp
out
mov
mov
cmp
and
cmpsl
pop
addr16
mov
jg
sub
dec
sub
add
inc
pop
into
stc
adc
negb
mov
and
into
push
dec
imul
and
out
pop
push
out
movsl
popf
and
cmp
sbb
imul
add
hlt
lock
mov
push
int
outsb
adc
shll
push
fsts
sbb
sbb
add
aas
inc
lea
mov
insl
mov
inc
inc
mov
fmulp
stos
popf
popf
loop
lret
or
lret
and
jns
ss
mov
loop
xor
inc
fistpll
push
push
jecxz
or
mov
in
std
pop
mov
inc
mov
sti
pop
rorb
push
adc
outsb
xor
sub
cmp
rcrb
cmp
stc
sbb
mov
in
and
lea
push
mov
push
test
test
dec
xchg
fcoml
or
rolb
iret
scas
xchg
leave
pushf
int
push
jmp
pcmpeqb
mov
fldenv
xchg
mov
iret
int
clc
adc
and
leave
enter
jg
add
push
mov
add
imul
repnz
cmovne
movsb
sbb
push
pop
cs
jb
dec
pop
repz
arpl
sub
jns
lea
inc
pop
shll
adc
ljmp
movsl
and
mov
das
add
mov
mov
cs
add
jnp
pop
dec
pop
inc
popf
faddl
nop
lret
inc
ret
mov
or
adc
mov
stc
mov
mov
lret
mov
jmp
lea
jl
jmp
xchg
clc
dec
in
cmp
xor
das
inc
test
out
outsl
je
cld
adc
or
and
jo
mov
cmc
test
or
gs
push
aaa
fildll
cli
ret
mov
fstps
sbb
sbb
pop
inc
push
xchg
in
or
mov
jne
movsb
pop
stos
adc
subl
rorb
test
sub
insl
lcall
push
push
mov
scas
xchg
cli
cs
ljmp
mov
dec
jo
dec
ret
fsubl
inc
or
jb
sti
and
popa
mov
aam
xor
cmp
pusha
pop
adc
pop
mov
out
jb
lret
or
mov
lret
mov
sarb
addb
mov
fildl
jg
cmpsb
cmp
xor
daa
ljmp
or
andl
inc
xor
pop
cmp
xchg
xor
mov
ss
push
jno
jbe
fsub
add
pop
pop
and
cld
cmp
pop
cltd
iret
jmp
sub
pop
dec
pop
subl
popl
arpl
jo
push
dec
add
adc
cmc
mov
mov
or
or
arpl
cmp
and
cltd
sub
mov
outsb
in
mov
int
inc
add
pop
fildl
mov
inc
dec
jge
xlat
sbb
add
ret
insb
pop
mov
fcomps
cmc
js
add
aas
push
push
shl
xor
in
sbb
test
push
cmp
ds
inc
sub
jp
inc
pop
cmp
pop
xchg
adcb
loopne
or
xchg
cmp
movsl
or
and
es
lods
lock
cs
call
xor
scas
fstpl
jae
movsl
mov
dec
cmp
bound
in
ds
movsb
inc
jo
fidivrs
out
jmp
pop
sub
xor
int
fnstcw
dec
pushf
xor
xchg
dec
cltd
jo
sub
popf
mov
jbe
push
das
dec
fimuls
lret
add
int3
sbb
enter
in
jnp
mov
dec
es
mov
push
insl
lods
push
gs
or
jmp
sbb
add
fisubrs
cmp
lods
jmp
push
arpl
xchg
mov
sub
cmpsb
adc
out
jmp
pop
xchg
gs
mov
aaa
shrb
pusha
adc
cmpb
repz
mov
cltd
lret
subb
xchg
pop
hlt
adc
shl
pop
xorb
push
scas
mov
outsl
in
dec
jne
jp
cmc
mov
popa
pop
iret
xchg
loop
sub
icebp
mov
add
addr16
jae
jo
and
jmp
insl
push
dec
sub
inc
and
imul
push
or
mov
lahf
sub
insb
sahf
pop
adc
pop
dec
scas
mov
xlat
std
shll
push
ss
jp
cmc
inc
mov
jecxz
push
insb
pushf
dec
aas
stos
lock
pop
shll
insl
or
jecxz
jns
pop
cmp
pop
dec
div
cld
aam
mov
fstpl
aam
in
out
jmp
and
xor
rorb
xor
sbb
leave
add
mov
loop
dec
arpl
stc
popf
pop
or
ds
mov
mov
outsb
or
jg
mov
add
mov
cmc
push
inc
mov
and
das
mov
xchg
sbb
insb
lods
mov
and
push
sub
sarl
adc
jge
cmp
inc
push
sub
inc
fistpl
dec
adc
jmp
int
mov
add
cld
ljmp
push
mov
and
lea
sub
mov
and
cltd
adc
cmp
fldt
rcr
xchg
int
mov
ss
push
mov
jb
pop
mov
rclb
adc
jns
fmuls
inc
sbb
repz
outsl
mov
aam
sub
leave
enter
dec
lret
jbe
dec
mov
into
data16
movsb
nop
loopne
sub
sub
mov
iret
movsl
sub
in
mov
or
mov
jp
adc
xor
fistl
inc
ja
popf
lods
lods
icebp
call
cmc
repz
jno
outsl
mov
pusha
cmp
jecxz
push
push
nop
fs
fisubl
xor
enter
into
cmc
push
rorl
xlat
mul
pop
jmp
rolb
cmp
or
fcomp
cwtl
jae
imul
out
mov
sub
mov
jns
leave
scas
shlb
push
and
adc
sub
cmp
push
sub
fisubs
fs
inc
sub
jae
sub
push
call
sub
sub
pop
ret
sbb
fisttpl
frstor
sub
lods
jmp
sub
movsl
sub
cmpsl
imul
xchg
adc
frstor
sbb
sbb
into
and
sub
and
pop
jno
pop
cs
sub
cmpsl
push
and
adc
movsl
sub
pop
loope
push
and
adc
movsl
pop
shlb
imul
les
rcl
shll
fwait
push
imul
scas
sarb
pop
icebp
cmpsl
push
and
push
fs
mov
imul
les
rcl
shll
imul
cmpsl
imul
lods
aad
sub
lods
jmp
sub
push
shrb
pop
out
in
and
push
push
jge
mov
add
xchg
cli
add
adcb
xchg
pop
lcall
and
jb
and
shlb
cmpsl
outsb
inc
add
lret
incb
mov
and
mov
mov
into
jnp
adc
int3
jnp
pop
iret
fsincos
add
fsubrs
inc
sbb
ret
sahf
into
cs
dec
pop
jecxz
or
cmc
pop
fs
stos
push
xorb
rcr
cs
cmpsb
cmp
cld
icebp
jmp
in
js
xchg
mov
xor
std
iret
mov
int3
in
scas
pop
xchg
pop
sub
pusha
bound
mov
popa
fistps
stos
je
jecxz
cmpsb
mov
mov
daa
jl
dec
and
xor
mov
mov
xchg
cmp
mov
inc
mov
inc
data16
mov
mov
xor
mov
les
outsl
arpl
mov
fadds
xchg
mov
xchg
dec
push
mov
jle
loope
xchg
insb
cmp
mov
mov
push
jb,pt
lds
fnstsw
lahf
cmp
int3
popa
push
or
pop
and
sahf
push
add
cli
pop
jae
pushf
ss
jae
xchg
xchg
lds
jnp
dec
test
negb
mov
fxch
pushl
sbb
add
flds
mov
jo
cmp
ds
mov
mov
mov
movsb
stc
daa
out
test
mov
or
adc
sub
lahf
pop
and
lods
push
jg
popf
mov
popa
icebp
pop
sub
push
mov
jns
mov
xchg
xchg
popa
pop
and
sar
loop
sub
and
stc
cltd
iret
out
push
test
add
cmp
pop
and
shl
sub
push
lret
pusha
or
mov
iret
stos
xor
imul
test
fmull
mov
pop
xor
lret
and
lret
ljmp
sub
jne
test
adc
dec
cltd
incb
xchg
push
hlt
in
movb
out
sub
mov
or
scas
push
incb
loop
push
and
jge
loop
jne
fisubs
xchg
imul
cltd
and
adc
sbb
jae
leave
test
insl
fadd
dec
es
imul
es
mov
lds
cmp
sbb
mov
das
or
jbe
mov
jg
pop
xchg
dec
pop
xlat
loopne
sti
pop
cmp
cs
adc
jecxz
pop
xchg
lret
loopne
push
jns
adc
inc
inc
out
iret
xchg
mov
xchg
dec
xchg
test
pushf
push
xchg
fcmovb
inc
mov
lcall
jmp
inc
xchg
pop
dec
push
mov
push
loop
enter
stos
lods
sti
jg
out
pushf
cmp
dec
xchg
lods
cmp
push
iret
lock
sub
fnstcw
add
push
and
xor
repz
in
insl
out
and
and
xor
test
mov
out
cmpsb
cmp
scas
push
dec
jno
pop
dec
iret
je
popf
xlat
sub
and
push
and
cmp
adc
push
pop
xor
hlt
or
leave
dec
push
gs
xlat
mov
add
mov
aas
and
dec
ss
cltd
jp
int
sbb
cmp
sub
and
push
push
out
call
lea
movsl
pop
inc
mov
inc
jno
cwtl
fisubl
movsl
add
fnstenv
cwtl
mov
leave
add
jbe
in
jp
stos
test
and
sub
jecxz
fldcw
cmpsl
repnz
mov
lea
scas
sub
cmp
jns
clc
mov
pop
jno
xchg
cwtl
stos
mov
ss
fisttpll
nop
stos
jmp
add
sti
add
sub
xlat
adc
cltd
ja
rcl
sbb
push
and
cmp
mov
imul
and
addl
adc
out
lret
insl
ss
dec
cmp
inc
inc
and
xchg
sub
cmp
call
es
cltd
xor
sbb
push
and
mov
jno
pop
push
inc
loope
mov
leave
popa
sti
aam
ficoms
mov
cld
aam
adc
repnz
push
shlb
jno
out
adc
imul
in
fcoml
mov
sahf
lods
mov
imul
les
pop
adc
sub
jbe
sahf
dec
aad
dec
fstps
out
lods
out
mov
mov
cmpsl
mov
mov
lcall
push
and
insl
mov
jg
sbb
xchg
aaa
push
cmp
cltd
and
fistpl
pop
cmp
and
mov
in
ffreep
into
test
mov
je
cmpl
mov
fcomps
pushf
mov
fmul
outsl
mov
and
or
insb
push
jl
mov
aam
loopne
rcrb
pop
stos
out
push
out
pop
mov
or
cmp
cli
js
xor
mov
jle
cmpsb
repnz
push
sub
mov
movsl
clc
ljmp
fisubl
test
xchg
push
pop
in
insb
mov
cwtl
inc
cmp
xchg
pop
pop
jb
inc
pop
les
daa
ret
cmpsl
xor
xchg
xchg
cmpl
and
pop
push
aas
or
push
lcall
inc
stc
enter
dec
push
lret
lods
fs
sbb
pop
out
inc
fsubr
push
ja
jnp
mov
lea
scas
ja
incb
aad
sahf
int3
outsl
jns
sbb
cmp
add
pop
and
stos
mov
lds
pop
inc
add
lahf
popl
imul
loop
push
pushf
in
mov
mov
fisubs
fisttpl
sahf
adc
xchg
lods
dec
push
mov
mov
mov
cmp
outsl
push
cmp
lods
pop
rclb
push
das
pushf
fisubs
push
popf
les
scas
and
jo
mov
call
je
dec
xor
pop
imull
scas
stc
das
dec
roll
pop
lods
mov
lcall
cmp
fcmovu
push
sahf
jmp
add
test
popf
mov
adc
inc
mov
xchg
filds
aas
or
sti
xor
data16
and
es
adc
xchg
repnz
daa
mov
inc
mov
stos
stos
testl
lahf
das
mov
roll
add
dec
sub
push
lea
pushf
int3
xor
aaa
xchg
test
adc
test
sbb
sbb
xchg
mov
testl
cmpsb
popa
aam
jge
dec
mov
xorl
and
xchg
cmp
adc
cmp
add
shlb
int3
mov
repnz
hlt
mov
es
iret
shll
ss
lds
aam
xor
add
cmp
add
xchg
mov
popf
jge
lods
es
mov
clc
xor
pop
adc
push
rorl
and
cmp
add
cmp
divb
js
and
outsl
inc
push
add
loop
jle
inc
scas
or
orb
ss
loope
xchg
aam
xor
mov
sahf
fnsave
popf
aas
mov
and
stc
mov
les
push
in
imull
test
push
sub
xchg
lret
inc
xor
int
pop
jecxz
in
mov
imul
in
add
or
add
and
dec
aas
and
sbb
xor
lret
int
xchg
call
and
and
out
sub
add
imull
daa
jg
ljmp
idivl
adc
cmp
in
or
clc
add
jmp
pop
test
stos
sbb
pop
cmp
lret
xchg
mov
cwtl
sub
add
lock
xor
mov
sub
inc
xchg
addr16
sbb
loop
jecxz
cmp
xor
in
dec
add
and
std
mov
in
ficoml
and
add
dec
xor
jbe,pt
jmp
fwait
in
cltd
mov
negl
cmp
sbb
in
jo
cmp
jbe
test
xchg
sub
orb
daa
mov
mov
pop
push
adc
adc
mov
sahf
mov
out
mov
ljmp
inc
or
jb
shlb
mov
sahf
and
dec
lret
and
push
int3
lret
stos
insl
outsb
jo
es
xorb
dec
dec
sub
push
in
movsl
rclb
cmp
cltd
push
in
push
cltd
rol
jne
xchg
out
mov
lock
jnp
sbb
ss
mov
add
ds
xchg
inc
scas
or
test
repnz
outsb
or
sbb
jmp
fsts
xchg
outsb
ss
loop
adc
dec
lret
neg
xchg
cmp
cwtl
ror
jp
adc
std
shll
adc
and
push
hlt
and
leave
mov
inc
mov
and
cmp
pop
pop
or
fdivrs
leave
into
xchg
clc
fcomps
mov
push
aam
sub
outsb
pushf
dec
ja
test
imul
mov
adc
inc
in
cmpsw
lahf
pop
lds
out
pop
adcl
add
push
call
jne
push
into
lret
pop
add
push
enter
xchg
lock
sbb
imul
decb
test
push
push
movsb
addr16
and
and
int
into
and
pop
movsl
mov
shll
fidivl
loop
stc
or
fcompl
lods
adc
sbb
and
pop
fcoml
mov
or
lea
jbe
or
push
jae
push
sub
xor
fnstenv
pop
cmpsb
lea
pusha
mov
data16
mov
lock
sub
scas
fbld
nop
out
mov
pop
or
sbb
push
jne
call
jg
rcrl
cmp
leave
orb
ret
dec
inc
int3
pop
add
mov
fists
inc
and
inc
or
jp
dec
jnp
jo
sub
bound
in
scas
in
in
and
fdivl
fsubrl
add
mov
vpaddsb
inc
nop
sub
pop
je
pop
fwait
xchg
cltd
adc
bound
pop
cmp
ret
adc
xlat
adc
icebp
scas
in
jge
test
sbbl
dec
sub
dec
les
test
adc
and
jbe
adc
ret
outsb
push
pop
push
lcall
addr16
inc
mov
pop
add
rcr
pop
pop
orb
pop
xlat
cmp
mov
je
jb
iret
shll
fistps
xor
pop
mov
imul
jl
push
cmp
jbe
cmp
inc
lret
adc
mov
pextrw
pcmpeqw
mov
inc
lret
mov
pop
push
cwtl
js
push
fsub
fldt
inc
icebp
jmp
gs
mov
add
xor
pop
fs
dec
pop
fistl
xor
mov
sbb
adc
pop
pop
nop
cli
push
movl
sbb
add
outsb
sub
xchg
mov
out
pusha
mov
mov
sub
cmp
mov
xchg
adc
repz
pop
adcb
pop
inc
jge
mov
bound
ret
inc
ret
push
mov
cli
add
adc
add
adc
mov
pop
mov
dec
xchg
xor
and
sbb
cmp
jae
cmp
out
shlb
ror
mov
cmpsb
imul
sub
mov
dec
fildll
loope
mov
push
xor
pushf
lcall
fadds
ds
cmp
or
pusha
int
mov
popl
stos
mov
mov
loop
test
adc
sub
jne
addr16
in
pop
mov
cmpsl
fildl
cmc
xlat
add
ret
dec
repnz
inc
add
sbb
jp
or
aad
jo
dec
pop
popf
pop
cmc
std
cli
outsl
ss
or
outsl
in
aaa
push
imul
repz
push
mov
xor
cmc
mov
scas
cmpsb
orl
rolb
outsb
cmp
std
imul
popa
das
and
pop
mov
jg
add
not
jbe
push
push
cwtl
mov
sahf
in
stos
cs
mov
stc
outsb
xchg
cmp
sbb
ret
jne
dec
lret
ret
jne
dec
lret
ret
jne
dec
lret
ret
jne
dec
lret
ret
jne
dec
lret
ret
jne
dec
lret
push
pushf
adc
add
push
mov
mov
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
mov
nop
mov
sub
pusha
push
mov
add
add
xor
add
add
pop
popa
leave
ret
add
add
inc
cltd
mov
repnz
out
mov
and
sahf
repz
sub
inc
mov
or
mov
repnz
cmp
lods
mov
mov
shrl
scas
adc
adc
dec
outsl
xchg
ret
xchg
iret
clc
inc
mov
sub
enter
jge
jp
mov
xchg
adc
adc
mov
jmp
out
jo
sbb
and
popf
movsl
es
jo
cwtl
push
popf
push
dec
stc
std
cmp
pusha
test
jno
cmp
ja
cmp
call
lock
sbb
xor
pop
xor
bound
mov
or
call
addb
outsl
outsb
sbb
push
mov
mov
lret
push
mov
sbb
stos
jg
or
xchg
testb
cmpb
jo
push
jae
xchg
add
stos
xchg
std
jns
out
pop
and
scas
movsb
fs
out
lret
mov
mov
push
cltd
ja
loopne
adcl
push
mov
xchg
xor
jb
push
ss
cltd
sub
or
rorl
mov
jge
cmp
ret
cmp
sub
xor
push
cwtl
jle
mov
cmp
jne
push
ret
push
xlat
sbb
pop
imul
mov
mov
xchg
lcall
pop
addb
shlb
mov
loop
pop
cmpsl
mov
lret
mov
fs
sbb
in
sbb
xchg
in
in
cld
gs
rcll
outsb
mov
cmp
mov
mov
fs
imul
xchg
lcall
mov
fwait
sbb
pop
scas
push
mov
push
dec
les
push
fmuls
aam
in
pop
test
in
add
xchg
cmp
les
data16
sbb
add
mov
push
out
cs
cmp
scas
ret
test
pushf
movsb
in
cli
pop
mov
ret
mov
push
cmpsl
jne
mov
xchg
mov
jg
imul
mov
arpl
jge
jge
add
pop
lcall
mov
cmpsb
icebp
testl
test
test
gs
inc
mov
mov
mov
xor
iret
adc
test
adc
out
xchg
lea
andb
mov
in
notb
inc
aam
cmpsl
cmp
dec
or
lds
mov
ret
movsl
ret
jge
push
xchg
lret
lock
and
xor
fldl
movsl
adc
cmpsb
mov
pop
or
push
sbb
pop
fidivrs
lods
mov
data16
je
in
cmp
and
popf
push
into
stos
movsl
shl
inc
push
pop
jg
sbb
jo
lret
pop
jl
sub
bound
mov
call
in
mov
lock
add
data16
stos
mov
sbbb
and
xor
push
popf
mov
outsl
leave
mov
aad
mov
cmpsb
mov
xchg
and
sbbl
aas
jno
ja
lock
mov
aam
sbb
adc
adc
sub
jo
dec
pop
shl
pusha
clc
sbb
sub
dec
xor
push
dec
xor
jecxz
cmpsb
ret
xchg
xchg
sub
and
xor
loope
lods
or
sub
dec
mov
mov
mov
mov
ss
iret
in
cmp
xchg
enter
out
shlb
int3
push
push
and
in
push
gs
sbb
mov
jmp
outsb
fnstenvs
xor
sbb
enter
lds
xor
mov
sbb
xor
xlat
clc
mov
and
jle
negb
sbb
xor
mov
stos
mov
addr16
cmc
xchg
adc
div
lahf
int3
addr16
and
xor
pop
pop
or
loope
mov
xchg
ss
rcll
add
mov
popa
and
ja
ret
out
add
aam
test
mov
mov
or
xorl
cmp
cmp
xchg
loope
push
xchg
xchg
pop
inc
mov
xor
pop
mov
insl
scas
or
in
push
push
in
xchg
fldln2
pop
xor
xor
aaa
leave
mov
jo
loopne
mov
mov
fdivl
sbb
and
movsb
push
ret
mov
or
and
das
shr
filds
cmp
add
xchg
jg
mov
pop
test
fsubrs
pop
lret
movsbl
imul
inc
sahf
inc
inc
push
mov
lods
in
rcrb
push
add
pop
flds
out
xor
scas
push
lock
xor
cmc
cmpsb
cmp
aam
push
cmp
fsubrl
xchg
adc
jnp
and
and
out
xor
push
mov
cmc
std
roll
jb
aad
lcall
outsb
insl
xor
jbe
inc
scas
pop
sub
or
mov
push
rcl
cmp
sbb
das
pusha
subl
sub
xchg
int3
aaa
repnz
ljmp
jmp
and
jge
mov
add
inc
adc
sub
adc
test
mov
nop
aas
roll
loope
push
pop
fwait
mov
dec
clc
sbbl
push
sti
insb
push
push
mov
xor
out
bound
sbbb
mov
mov
jnp
sbb
rcl
pushf
mov
dec
mov
sub
mov
and
pushf
jne
xor
fs
int3
and
lea
sbb
push
push
lret
dec
fdivp
and
es
cmp
mov
insl
rcll
adc
lret
jp
xor
mov
addr16
push
inc
fldl
subl
and
pop
dec
xor
int3
jecxz
cli
mov
pop
cld
xor
cs
imul
push
cli
into
adc
xchg
rcl
mov
jl
rorl
mov
sbb
pcmpgtb
ret
fidivs
xor
jle
cwtl
adc
mov
les
or
clc
and
mov
cmpsl
xchg
push
sbb
sub
and
inc
jo
scas
dec
sub
fistl
out
adc
jecxz
push
lahf
lock
jno
mov
xchg
dec
dec
or
fisttpl
sub
cmp
add
mov
jmp
dec
ljmp
xchg
xor
xor
adc
jae
ret
xchg
aad
repz
into
hlt
fstl
jmp
scas
scas
bound
inc
mov
xor
jl
inc
outsl
xor
int
stc
lcall
adc
les
in
pop
js
mov
xchg
imul
arpl
dec
dec
mov
aam
sub
xlat
push
scas
stos
or
je
jno
inc
mov
mov
mov
daa
xchg
xchg
mov
and
and
cmp
mov
lea
test
js
lock
int3
mov
mov
mov
inc
push
popa
cmp
ljmp
sbb
jae
daa
mov
pop
in
js
aam
test
rolb
mov
sub
lcall
pop
and
add
mov
fs
int3
outsl
and
cltd
adc
adc
jge
pop
or
int3
xchg
emms
sarl
aam
ss
and
mov
inc
std
mov
adc
mov
cmp
shld
add
jge
stc
dec
shl
pusha
jo
push
sbb
nop
rcr
in
les
js
jb
pop
jb
or
push
and
hlt
mov
push
or
aas
and
mov
lea
sub
outsl
cmc
daa
and
roll
xor
jg
push
std
push
push
sub
dec
pop
lea
stos
inc
add
push
mov
pop
ret
inc
dec
mov
adc
iret
cltd
sub
adc
fcomps
mov
adc
mov
lret
out
and
outsb
stos
jno
and
lods
jns
cmpsl
daa
mov
inc
js
fsubr
insb
push
in
or
xor
out
xor
ret
adc
xchg
or
mov
mov
ret
add
pop
sbb
insb
or
cltd
and
jg
xor
xor
jnp
lods
mov
pushf
jno
loop
mov
int3
sbb
dec
mov
mov
or
stos
scas
inc
fisubrs
mov
scas
dec
lock
and
xlat
sbb
pusha
sti
out
mov
roll
out
sbb
mov
jb
xchg
in
or
scas
ds
loop
push
xchg
bound
sbb
sbb
push
mov
xchg
dec
mov
pop
ja
stos
in
inc
or
ret
in
or
xchg
fildll
lods
out
pop
inc
jns
ja
dec
ljmpw
sub
add
arpl
jge
std
loopne
push
mov
jge
cli
dec
jae
mov
push
inc
in
pop
sbb
mov
xchg
mov
stos
andb
mov
jecxz
cltd
and
sbb
js
push
cmp
movsb
inc
push
and
mov
mov
bound
mov
ret
fldt
rorl
lahf
and
jbe
jb
imul
inc
js
outsb
fisubs
in
lock
and
or
popl
add
stos
frstor
xchg
xor
cmp
rcrb
mov
cwtl
les
inc
inc
mov
cli
and
ret
sub
inc
xchg
xchg
sarl
inc
push
sbb
cli
pusha
cld
jb
mov
ret
shll
lret
mov
cs
or
inc
and
repnz
push
adc
ljmp
ret
push
sbb
test
add
mov
or
push
cwtl
int
out
scas
popf
mov
cwtl
ficoms
add
jne
stc
cmp
sub
jp
push
test
test
adc
add
addr16
pop
xor
push
arpl
jb
cmp
fsubl
das
loope
add
sub
mov
fs
test
dec
rol
add
mov
inc
jl
imul
into
and
lcall
add
push
mov
sahf
stos
add
fmuls
shlb
std
cmp
iret
lods
int3
stc
xlat
xchg
fcomip
sub
lea
fwait
mov
inc
rep
lret
adc
push
ss
dec
cmp
mov
sbb
xchg
test
cmc
mov
jbe
mov
loope
add
enter
push
out
cmp
dec
sub
jbe
pop
dec
adc
push
js
addb
test
jg
test
imul
int3
jg
or
dec
jno
xchg
daa
cwtl
addr16
mov
xchg
mov
ds
inc
sub
into
dec
mov
add
mov
shll
int
push
ret
cmp
cwtl
jmp
cmpb
pop
lds
ja,pt
jnp
loopne
je
jp
shlb
loopne
fisttpll
adc
mov
mov
pop
movl
aad
dec
scas
divl
xchg
xchg
in
mov
lods
adc
fwait
jecxz
adc
or
aas
daa
ljmp
and
lret
mov
pop
mov
cmpb
push
xchg
inc
jae
adc
push
dec
xor
daa
fcomi
mov
mov
and
orl
ss
inc
sahf
dec
leave
sbb
dec
push
ret
mov
cltd
sbb
xchg
inc
add
push
fwait
sti
xchg
cli
fwait
cmc
jle
in
aaa
xchg
sub
test
inc
in
dec
outsb
inc
jne
mov
mov
xor
je
nop
cmpsl
pop
lds
push
adc
test
cmp
stc
xchg
shrb
arpl
sbb
punpckhwd
ret
mov
add
mov
inc
or
mov
jge
mov
repnz
cwtl
aad
dec
int
and
add
retw
fidivl
lahf
rcrl
add
lret
outsl
jae
push
dec
dec
mov
aam
mov
add
aas
sti
push
lea
mov
imul
xor
jbe
fcmovb
sbb
add
sbbb
fldl
mov
ds
mov
test
mov
jb
mov
or
or
or
repnz
dec
cmc
decb
or
std
inc
sahf
js
aaa
sub
add
dec
mov
and
loopne
int3
aaa
sahf
jns
adcb
shll
std
xorl
sbb
dec
movb
sub
push
stos
pop
cmp
shrl
fidivs
mov
pop
mov
cltd
mov
mov
adc
and
push
dec
imul
cmpsl
in
add
roll
jp
adcl
adc
jge
call
sti
inc
jle
scas
cld
lret
jne
or
pop
add
push
pop
enter
push
rorl
adc
stos
inc
xor
test
ficomps
push
push
push
mov
int
leave
pop
xchg
jle
push
jmp
sbb
xchg
cmpsl
pop
jae
push
insl
xchg
inc
ds
enter
and
push
pop
cli
xlat
pop
insl
add
popa
movsb
imul
cmp
ret
pop
push
es
pop
mov
mov
popf
inc
mov
or
outsb
sub
sbb
arpl
cmc
inc
jmp
xor
aaa
xor
rorb
popa
cwtl
fcompl
adc
leave
cmpsb
dec
cs
bound
or
repz
scas
pushf
lcall
xorb
addr16
adc
rcl
sar
mov
icebp
mov
cltd
and
aaa
dec
push
leave
popa
cli
xchg
pop
xchg
divb
arpl
sbb
rolb
fsubrs
fldt
xchg
and
xor
mov
xchg
jl
pusha
out
aas
inc
xchg
sub
pop
xor
or
test
or
adc
mov
cld
or
jo
or
cmp
out
xor
mov
lea
mov
enter
lea
cmp
push
sbb
stos
push
mov
jnp
jnp
in
movsl
lahf
and
adc
mov
fbstp
xchg
jae
jl
add
add
mov
jo
add
addl
add
je
inc
add
add
sbb
inc
add
add
add
add
sbb
mov
sbb
dec
add
add
add
add
add
add
add
inc
add
jmp
add
cmp
add
loop
inc
add
add
add
inc
add
add
add
inc
add
add
fadds
add
jbe
inc
add
add
add
inc
add
add
add
mov
add
add
in
inc
add
jge
shrb
or
in
imul
xchg
add
jbe
lahf
out
in
int
popw
inc
push
jae
cmp
lea
and
pop
lds
arpl
xchg
mov
push
pusha
sub
mov
sti
pop
xor
dec
movsl
cmp
mov
insl
fstpl
push
in
or
cmc
mov
xchg
repnz
push
ds
xor
jg
mov
lret
adc
aam
xlat
push
aad
sub
lods
xchg
js
mov
ss
sbb
pop
int3
push
lds
bound
pop
inc
decl
int
xchg
jne
push
mov
test
jne
lahf
sub
std
sub
or
dec
loopne
daa
fstpl
repz
jp
push
pop
dec
repz
add
push
xchg
sbb
into
enter
sub
cld
movsb
jb
aas
movsl
adcl
mov
push
rcrl
pop
arpl
imul
pop
xchg
lcall
or
stc
into
add
xor
pushf
pop
addr16
hlt
sbb
jns
test
sub
xchg
mov
add
sahf
fidivl
nop
sbb
mov
sbb
pop
lods
jecxz
repz
ret
inc
xor
fists
push
xor
sarb
mov
insl
or
or
xchg
sbb
push
mov
rcr
dec
movsb
fcompl
adc
repnz
test
call
or
push
test
dec
icebp
mov
addr16
jnp
cmp
sub
push
xchg
push
fdivs
cmp
pop
aas
outsb
out
xchg
xchg
je
push
inc
adc
daa
dec
pop
push
leave
enter
js,pt
dec
jl
or
je
mov
xor
fsubs
insl
pop
mov
popf
repz
dec
cmp
inc
mov
mov
xor
add
ss
jnp
add
mov
push
mul
fs
das
test
mov
sbb
out
mov
pop
aas
xor
stc
ret
xchg
test
or
loope
dec
mov
cltd
pop
sbbb
dec
mov
pop
xor
nop
fwait
push
stos
sub
lods
jb
pusha
cmp
insl
xchg
std
jmp
cmp
cs
andb
shl
in
inc
sub
fadd
outsl
pop
jmp
fdivrs
decl
push
stos
jnp
in
push
dec
call
ficoms
xchg
stos
scas
loope
jne
pop
mov
testl
arpl
or
jns
jmp
leave
lea
add
or
sub
mov
mov
icebp
fwait
jbe
fidivrs
out
lods
pop
xor
add
xchg
test
mov
jnp
xchg
inc
lcall
adc
in
cmp
xor
dec
jb
xor
pop
fcomps
mov
push
adc
in
pop
push
or
insl
icebp
fldenv
out
inc
bound
in
mov
movsb
pushf
dec
enter
mov
mov
outsb
lahf
pop
test
hlt
es
mov
mov
adc
sub
or
and
lock
xor
cmp
je
pop
je
cli
or
cmc
jns
in
pop
push
push
or
and
cmp
and
push
daa
mov
fnstcw
out
adc
mov
cli
xchg
addr16
sti
leave
mov
cmp
mov
mov
out
jo
dec
arpl
ljmp
leave
mov
arpl
testb
fisubl
out
mov
imul
clc
add
sub
cmpb
inc
fmuls
mov
xchg
xchg
push
test
add
shrb
sbb
insl
xor
test
shlb
cld
mov
ljmp
add
jne
popf
loop
in
pop
pop
mov
jecxz
out
adc
or
rol
and
jl
and
out
daa
cli
sub
add
or
xchg
cmp
test
or
fwait
cmp
arpl
insb
addl
sbb
stc
inc
gs
pop
shll
icebp
insb
mov
fimull
cmp
adc
aam
mov
daa
xchg
push
lahf
in
mov
sti
jno
push
lahf
xor
ds
jl
add
fwait
dec
lret
xchg
pop
fs
clc
outsb
dec
lea
mov
xchg
pop
mov
into
push
addr16
out
inc
mov
mov
cs
adcb
mov
aas
jg
aas
aad
jo
test
sti
mov
jno
movsl
mov
inc
pop
xchg
popa
iret
adc
inc
mov
cmp
pop
xchg
stc
loope
out
mov
sahf
fsubrl
or
mov
out
and
dec
inc
add
imul
aas
mov
jp
sub
je
add
jge
lea
push
xchg
xchg
sbb
lret
mov
movsl
inc
lret
cmc
addr16
scas
sbb
insl
outsl
jne
int3
adcb
enter
dec
shll
xor
cli
lds
push
push
cltd
adc
out
sub
or
push
and
outsl
mov
outsl
outsl
insb
sbb
fadd
jb
sub
js
test
leave
insb
rcrl
sbb
dec
arpl
dec
xor
and
aad
xchg
movsb
jecxz
shlb
lret
stc
out
cmp
enter
pop
dec
mov
xor
push
popa
jne
adcl
mov
mov
jge
add
sti
dec
fisubrl
cltd
sar
rcl
inc
cwtl
sbb
sbb
and
or
dec
jae
adc
imul
icebp
mov
repnz
test
xor
leave
adcl
mov
sbb
xchg
xchg
mov
sbb
add
inc
imul
out
mov
movsb
andl
bswap
lods
aam
mov
subb
divl
popf
inc
add
jnp
sub
daa
xor
aas
sub
movl
ljmp
mov
test
movsl
add
or
es
and
mov
jo
add
or
lret
push
adc
mov
shr
sub
repz
aaa
push
push
or
mov
test
mov
idivl
in
rorb
int
fcmovu
xchg
cmpsl
or
je
xchg
neg
inc
adc
and
int3
sub
fwait
lcall
pop
add
jle
ret
push
cwtl
cmp
push
xor
repz
andb
dec
dec
jl
mov
push
fcoml
and
mov
push
imul
mov
push
and
push
xchg
inc
xor
mov
pop
jmp
mov
or
pop
pop
rcrb
sub
mov
xlat
iret
and
in
popf
add
enter
jmp
dec
aam
jg
xchg
dec
ret
inc
jl
out
and
mov
sti
push
lea
mov
mov
push
cmp
mov
fsubl
xchg
lock
ret
mov
mull
mov
jge
ret
jp
repnz
jg
pop
sbb
push
cmp
ljmp
mov
push
inc
jge
outsb
out
movsb
enterw
ds
adc
std
cmp
test
pushf
push
dec
pop
cmp
fwait
mov
in
and
push
and
dec
sub
cmp
fwait
mov
in
and
push
and
dec
sub
sbb
stos
lahf
rorl
xchg
inc
lock
ja
xorb
and
dec
outsl
sbb
popa
in
cltd
shll
inc
jae
stos
outsl
out
push
push
push
lahf
out
mov
lods
mov
mov
mov
mov
inc
mov
lds
je
movl
or
imul
in
dec
pop
xor
sarb
push
addl
aam
shll
int3
cs
fadds
out
or
xchg
inc
out
push
and
dec
inc
sub
pop
stos
sarb
loop
out
imul
xchg
popf
out
and
fwait
leave
push
push
leave
rcll
push
shrb
jnp
adc
jo
xlat
xchg
xor
xchg
or
sbb
repz
push
dec
out
mov
movl
js
mov
sahf
sub
shr
adc
cmp
lock
stos
sub
test
sub
or
inc
add
mov
dec
inc
subl
lock
sbb
fwait
arpl
push
jmp
add
cmp
fwait
xor
ror
nop
and
psrlw
cs
in
mov
xor
jmp
js
mov
and
sbbb
loop
fistpl
enter
dec
shlb
sub
leave
add
insb
pop
ja
dec
lock
subb
add
shlb
push
mov
add
es
aad
xor
and
movsb
lds
add
fistps
xchg
outsb
orb
xchg
loop
in
xor
inc
xor
pop
jmp
adc
dec
jae
lods
loopne
les
outsb
or
inc
mov
inc
cmp
ret
mov
and
movsb
dec
insb
dec
mov
jno
outsl
mov
xor
jle
clc
mov
rcrb
mov
ficoml
call
rcrl
pop
ret
lods
hlt
dec
nop
pop
push
and
adc
rorl
test
inc
mov
sub
out
fcoms
mov
pop
xchg
dec
sub
bound
mov
test
mov
xchg
sbb
xor
fistps
push
or
addr16
push
out
clc
lcall
mov
in
push
xor
dec
ret
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
sahf
pop
mov
std
cmp
add
ficomps
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shrl
sbb
call
shll
add
pop
sub
sbb
inc
xchg
ret
dec
cmp
add
dec
xlat
pop
adc
push
sub
outsl
jae
xchg
push
sub
aaa
cmpl
xor
push
push
lret
push
xlat
mov
loopne
hlt
xor
push
mov
dec
sar
nop
pop
pop
adc
xor
ret
insb
cmp
lods
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
testl
out
lahf
call
xor
pop
sbb
mov
imul
add
scas
mov
and
in
sub
fimull
mov
das
adc
lea
es
pushf
sub
mov
addr16
push
add
movsl
or
aad
ja
xor
push
ja
jo
sub
cltd
insb
into
and
adc
gs
inc
shlb
sub
je
insl
int3
scas
fstps
add
jns
pop
addb
aas
out
inc
lea
sbb
ja
sub
fstp
mov
dec
pop
pusha
ja
adc
sbb
rorl
nop
jne
adc
and
or
pop
rcr
fildl
adc
xchg
test
push
js
adc
aam
jecxz
std
inc
lds
pop
mov
mov
mov
xor
out
sub
mov
sub
and
fwait
addr16
and
adc
int
mov
fldt
clc
int3
nop
mov
mov
cld
out
test
sub
clc
jno
xlat
lcall
cmp
std
push
flds
inc
jbe
xchg
popa
fsubrp
adc
repnz
stos
pop
adc
and
push
lea
mov
repnz
cld
xchg
jmp
jmp
mov
cmpsb
outsb
add
xchg
mov
int3
stos
pop
sub
xor
mov
imul
in
in
xor
inc
lods
test
cmpsb
lahf
mov
dec
pop
add
mov
ret
out
rolb
mov
and
pop
scas
enter
in
sbb
ss
pop
ret
out
insl
not
into
lahf
add
mov
cwtl
out
and
out
out
data16
loop
adcl
movsb
or
sahf
adc
cmp
push
ljmp
pop
sbb
xchg
pop
pop
mov
dec
jns
into
sbb
lahf
cld
inc
inc
jae
lods
popa
int
xor
xchg
jg
pop
pop
and
push
jb
cmp
cmpsl
and
js
mov
jo
cmp
in
movsb
push
cwtl
aas
ja
mov
int3
in
iret
jge
aad
insb
int3
scas
mov
sub
mov
sub
bound
add
lea
js
push
loopne
cltd
dec
jmp
sub
lret
or
xchg
lea
jp
test
cld
and
das
sub
rorb
adc
sbb
push
cmp
cmp
xchg
loop
add
sbbb
xor
xchg
sbb
jns
add
adc
sahf
enter
adc
cmpsb
aaa
pop
ficoms
in
aad
pop
dec
cltd
xchg
jecxz
lds
push
lret
je
je
lea
inc
xchg
pop
cli
inc
into
cmp
cmp
shrb
push
shl
out
outsl
mov
pop
lods
fmuls
cmp
and
leave
testl
adc
lds
lret
push
aam
adc
loop
ljmp
sub
decb
rolb
sbb
addr16
or
pushf
movsl
xor
sbb
testl
in
loopne
or
rcll
lret
sbb
sub
xchg
loope
adc
sub
aam
pop
add
xchg
push
sub
cmpsl
int
jb
sahf
mov
rcrb
fstpl
sbb
call
aaa
adc
pushf
idivb
adc
push
aaa
sti
mov
arpl
shrb
into
test
fiaddl
pusha
dec
popf
xor
or
testl
mov
xor
fisubl
dec
push
jg
fs
ljmp
popa
jo
cmp
jne
sti
cs
sahf
clc
icebp
mov
fwait
mov
cmc
push
int
mov
dec
jp
bnd
in
pop
fnstenv
outsb
inc
psubusb
je
push
aam
xchg
lret
ss
shlb
mov
sbb
xor
test
addr16
icebp
movsb
jb
imul
fsubrs
lds
outsb
push
leave
cltd
sarl
pop
mov
inc
or
lea
fisubl
push
out
dec
and
in
fidivrl
sbb
mov
adc
xor
gs
push
data16
jge
imul
sbb
scas
sbb
mov
add
in
sbb
sbb
fstps
push
getsec
sbb
cltd
fdivp
into
ds
mov
cmp
mov
shl
daa
sbb
push
sarl
push
pop
ljmp
dec
rcll
pop
lea
loopne
dec
rcll
dec
xchg
push
in
xor
pop
sub
mov
shl
xchg
pop
mov
pushf
or
hlt
ja
sbb
xchg
mov
lock
lahf
dec
and
test
cmp
sahf
and
cld
mov
or
cs
fistpl
pop
fmuls
pop
idiv
or
push
mov
movb
iret
fisttpll
bound
shll
add
sahf
sub
push
mov
hlt
lea
shrl
fnstcw
fimuls
adc
mov
sbb
add
fidivrs
xlat
lahf
push
mov
jg
mov
addr16
jbe
push
dec
out
push
dec
mov
loopne
push
test
and
imul
xchg
in
out
mov
xor
xor
adc
in
pop
jbe
std
cs
sbb
out
fsubr
add
mov
out
lcall
cli
repz
scas
dec
shlb
clc
cmp
in
and
icebp
xchg
lods
or
xlat
icebp
inc
sbb
imul
jmp
int3
mov
stc
aas
cmc
pop
in
mov
pusha
and
cmp
push
fisttps
lods
es
mov
out
adc
adc
popf
out
fisubs
cmp
mov
cmp
bound
js
push
sub
fnstsw
pop
roll
inc
or
enter
inc
divb
and
jne
sbb
pop
jp
lods
add
call
ss
sbb
mov
subl
aam
ljmp
frstor
pop
pusha
jecxz
repnz
sub
cwtl
jecxz
out
cmp
sbb
and
jne
clc
mov
mov
mov
daa
repz
lret
out
dec
repnz
or
cmp
add
mov
add
std
sub
jno
pop
dec
push
adc
xlat
cld
dec
incb
imul
jp
test
hlt
testl
pop
sbb
repz
xchg
loopne
xchg
push
mulb
adc
cmpsl
adc
fiaddl
loope
mov
xchg
dec
sub
divb
shlb
inc
cli
jb
lret
push
xor
sbbb
or
out
idivl
pop
rcrl
test
jo
mov
jb
data16
in
or
je
scas
into
fwait
stos
lea
scas
testl
inc
outsb
pop
ret
loopne
sti
cmc
out
out
lods
xor
jae
xor
mov
jb
fisubrs
sub
push
adc
ret
push
cmovp
add
sub
roll
mov
adcl
mov
xorb
xchg
pusha
mov
es
fldt
fldt
jecxz
ja
mov
pop
push
pop
mulb
or
sub
out
mov
adc
scas
mov
enter
sub
add
xor
testb
xchg
enter
fcompl
lcall
add
fnsave
scas
mov
lods
mov
cmp
sbb
xor
aaa
and
rcll
out
adc
jmp
sub
ret
out
loopne
loope
test
jmp
ret
ja
test
mov
add
jl
add
out
mov
dec
dec
out
mov
in
pop
push
push
push
fwait
iret
loope
lea
stos
xchg
lods
into
test
out
leave
lahf
fists
lock
andl
lcall
mov
jge
lret
scas
mov
mov
out
xacquire
test
adc
and
testb
outsl
adc
rolb
out
mov
xchg
hlt
lret
add
inc
sbb
cmp
dec
push
mov
es
rcl
sub
adc
ret
clc
and
inc
sub
sbb
gs
mov
test
mov
shlb
pushf
adc
xlat
and
adc
lods
stos
mov
mov
imul
daa
mov
shr
test
adc
and
and
arpl
push
mov
ficompl
mov
enter
jl
sub
test
adc
fstps
mov
cld
push
inc
ror
and
mov
aas
stos
pop
xor
jmp
pop
shl
neg
je
mov
popf
pop
cmpsl
pop
mov
mov
jns
mov
push
mov
cmc
mov
dec
push
gs
std
mov
ficomps
push
push
cmp
and
add
mov
pusha
aam
lods
xchg
cltd
into
ret
push
es
pop
jne
add
cld
inc
lods
dec
loope
mov
out
pop
adc
or
cltd
pop
mul
mov
sbb
pop
xor
movsb
outsl
cmovnp
fdivl
stos
mov
dec
ja
data16
repz
mov
or
cli
popa
pop
data16
js
adc
mov
jo
gs
or
adc
mov
fiadds
add
xor
imul
das
icebp
lock
adc
xchg
jne
scas
xor
jmp
dec
xchg
jp
sti
sub
jmp
scas
jmp
push
arpl
cmpsl
add
sub
mov
xchg
adc
lods
sbb
adc
movsl
or
sbb
dec
outsl
mov
inc
popf
adc
mov
pop
cmp
aam
mov
js
jnp
mov
adc
cmp
ret
pop
imul
and
pop
jl
out
in
mov
xchg
inc
xchg
addr16
dec
jge
into
stc
aam
jmp
pop
jecxz
xor
in
mov
add
pop
or
mov
sub
addr16
mov
push
push
ss
dec
fidivrl
push
pop
xadd
call
in
mov
cwtl
dec
mov
rclb
cmpsb
insb
imul
sub
outsl
inc
imull
fistpl
push
dec
jno
inc
and
jns
jb
loop
mov
mov
mov
out
ljmp
push
inc
pushl
lods
jl
fnstcw
mov
rol
out
ror
lea
in
roll
xor
subb
ljmp
mov
jl
xchg
sbb
mov
mov
inc
add
or
lods
lods
pop
cmc
mov
push
iret
fistl
jmp
out
sub
jecxz
aam
loope
cs
pop
out
push
call
es
mov
loop
sbb
add
inc
cmp
dec
faddl
in
push
mov
or
inc
cmpsl
arpl
aad
shrl
popf
or
xor
mov
jo
shll
xlat
dec
mov
ret
mov
or
bound
or
sahf
push
push
icebp
aaa
jns
adc
imul
out
push
push
add
mov
or
imul
sub
adc
jne
mov
mov
aaa
sbbl
in
mov
dec
ja
sbb
adc
std
pop
jg
jl
sti
and
int
push
adc
pop
adc
stos
movsl
mul
out
notl
xor
xor
decl
sahf
decb
mov
push
xor
sub
add
mov
in
mov
dec
sub
add
xor
sub
popf
sub
mov
out
cmpsl
pop
mov
mov
jmp
adc
sbb
mov
xchg
movsl
test
mov
popf
sbb
pop
mov
addr16
adc
arpl
xor
out
push
gs
xor
dec
lock
mov
xchg
mov
mov
int
loope
mov
pop
mov
add
xchg
and
lds
shl
test
lock
in
divb
pop
out
imul
rolb
mul
mov
push
or
add
je
bound
insb
mov
in
popa
fisttpl
dec
or
jg
sbb
filds
cmp
pop
xor
test
xchg
push
movsl
xchg
sbb
add
or
iret
xchg
inc
push
dec
hlt
es
xchg
push
add
insl
cmp
bound
testb
or
je
fwait
dec
sub
out
xlat
call
out
or
mov
popa
ja
xchg
pop
jmp
lock
inc
mov
mov
jecxz
dec
in
or
xchg
push
sub
popf
scas
insl
and
sbb
jecxz
stc
iret
push
push
mov
mov
ret
add
adc
cmp
inc
stc
sbb
xchg
aam
jl
lds
aaa
xor
mov
popf
jnp
mov
xchg
pop
sbb
sub
sbb
arpl
jg
shll
inc
and
popa
mov
or
rorb
je
add
nop
movsl
adc
aam
ds
mov
pushf
adc
scas
pop
fimuls
xchg
mov
outsb
cmp
out
lock
int3
das
cmp
test
inc
cmp
ss
aaa
xor
lret
repnz
ret
shll
ror
sbb
jns
std
and
mov
mov
pop
clc
lahf
aas
test
add
xor
loopne
sbb
mov
and
push
cs
inc
test
and
ret
dec
mov
cmp
and
sub
pop
cmp
mov
cmpsl
sub
mov
dec
push
nop
outsl
mov
sbb
rcrl
inc
and
enter
add
out
test
popa
lahf
xor
pop
ficoml
rorb
call
imul
in
fimull
cmpsb
jg
xor
in
push
les
nop
out
jmp
inc
fidivl
call
aaa
sub
xchg
jo
push
sub
ss
aam
mov
sbb
call
dec
rcrl
adc
mov
cmp
fnstsw
mov
into
jnp
scas
int3
aaa
outsl
subl
mov
mov
cmp
adc
mov
push
push
cmp
in
insb
leave
pop
inc
mov
cwtl
call
mov
push
loope
or
inc
adc
inc
out
sbb
int
je
test
ret
ror
adc
lahf
add
loope
and
loop
xchg
push
adc
xor
icebp
mov
push
ljmp
dec
cmp
xchg
pop
sahf
mov
push
addl
xor
push
pop
add
push
push
dec
pop
mov
sub
add
in
inc
jmp
jb
sti
jmp
sbb
test
or
xchg
inc
jg
cmp
adc
mov
pop
push
dec
or
divl
std
or
jb
pusha
adc
rorb
or
and
and
xchg
push
mov
inc
scas
mov
add
jmp
std
inc
push
sub
stc
fwait
cmpsl
mov
xchg
mov
mov
push
xchg
ja
inc
push
stos
into
int
push
les
stc
stc
sub
sub
mov
xor
mov
and
push
pop
jp
insb
imul
sarl
xchg
mov
or
sub
lods
push
mov
lods
jnp
idivb
adc
lock
pop
in
cwtl
imul
call
mov
bnd
xchg
cmpl
mov
shlb
mov
dec
cli
rol
jnp
sub
out
mov
push
movsl
lds
lret
inc
mov
push
clc
stos
mov
push
lcall
fdivr
in
aaa
test
fldl
mov
xchg
sbb
adc
cs
pop
dec
jnp
add
push
outsl
dec
repz
lret
mov
mov
popf
insb
rclb
aad
mov
lods
xchg
lret
sub
loope
push
or
iret
jo
add
les
xchg
and
mov
pop
jp
add
jo
test
pop
and
push
stos
movsb
in
inc
sbb
pop
ja
sub
lret
lret
outsb
jl
xchg
mov
xchg
arpl
or
push
pop
stos
adcl
and
or
push
jb
aas
gs
cmp
inc
fwait
test
inc
pop
push
pop
adc
dec
xor
mov
mov
jmp
stc
xchg
mov
insb
outsb
rclb
ljmp
push
jmp
sarb
out
movsb
xchg
jno,pt
clc
outsl
out
or
adc
mov
push
fxch
xchg
imul
clc
sub
ja
sub
pusha
push
mov
inc
add
divl
and
addr16
in
das
das
mov
cmp
sub
pop
ret
push
gs
gs
or
lock
aaa
and
out
popf
dec
negb
incl
pop
pop
add
hlt
sbb
inc
push
mov
inc
icebp
dec
jp
push
das
inc
in
insb
cmc
and
mov
jnp
mov
int3
pop
xchg
std
dec
clc
push
icebp
sete
imul
iret
push
push
mov
lea
out
sti
or
in
pop
mov
inc
sbb
cli
mov
shll
out
fisubl
fs
dec
push
mov
scas
sbb
out
fucom
popa
adc
sub
dec
movsb
cli
xchg
and
lods
mov
imul
or
dec
maxps
fwait
pop
inc
xor
mov
inc
pop
dec
and
jnp
fistpll
push
xchg
jle
pop
or
negb
lahf
lods
cltd
jo
xchg
xchg
daa
mov
or
mov
mov
cwtl
lock
pop
rcrl
ret
into
inc
dec
mov
xlat
mov
inc
or
or
inc
inc
xor
inc
jb
mov
fistps
fistpll
mov
pop
sbb
push
pushf
rolb
test
shll
adc
out
dec
mov
fiaddl
imul
dec
mov
jge
stos
sub
data16
notl
movsl
add
test
dec
sub
fs
pop
mov
scas
xchg
call
std
and
lock
mov
call
mov
shrb
mov
adc
in
shll
sbb
jno
xchg
pop
inc
pushf
mov
cmp
fcmovnb
mov
jge
push
movsb
mov
int
imul
jecxz
bt
lods
pop
insl
rorl
notb
lods
jno
fisubs
mov
xchg
mov
mov
gs
push
aaa
insb
cltd
mov
movl
sbb
jg
in
jmp
dec
std
sub
mov
xchg
out
hlt
or
daa
sub
imul
daa
call
jle
add
int
fisubrs
cmp
mov
repz
mov
ss
mov
cmp
subb
adc
xchg
scas
cmp
ljmp
loop
in
jns
or
inc
or
wbinvd
imul
xchg
gs
jge
cmp
push
xor
inc
mov
mov
scas
push
int
pop
cld
jnp
jle
push
fisttpl
jnp
xor
scas
dec
lret
in
and
mov
aad
cmp
or
add
jns
std
sbb
aas
push
jmp
daa
xchg
xchg
mov
xor
and
out
ljmp
hlt
ret
cmpsl
pop
jmp
and
repz
xorb
inc
cld
out
sbb
or
mov
mov
pushf
pusha
add
rol
das
cmp
testl
sbb
icebp
cld
movsl
loopne
wrmsr
dec
imul
incb
cs
rorl
add
divl
xchg
xchg
push
mov
pusha
inc
push
cmp
sub
outsb
add
arpl
cmp
mov
add
aaa
mov
lods
out
fnstsw
shl
push
xchg
sarl
xlat
and
insb
stos
sub
jg
stos
imul
push
aad
addl
mov
add
adc
push
lret
mulb
mov
push
subb
lea
leave
cmp
inc
insb
fdivrl
dec
push
pop
xor
or
pop
notb
cmpps
cmp
sbb
mov
and
cmp
dec
sbb
mov
push
ret
movsb
pop
popa
or
xchg
mov
xor
lcall
mov
addr16
push
xchg
adc
rcrl
stos
or
into
out
push
push
loop
into
das
and
test
push
ss
lcall
add
jge
iret
pop
out
std
inc
and
decb
mov
outsb
ds
sub
pop
jge
inc
lods
cvtps2pi
add
cs
xchg
jnp
xchg
mov
add
mov
push
ret
pmuludq
lahf
and
dec
ja
jns
pop
mov
or
or
enter
and
stos
and
gs
mov
das
adcl
mov
das
sub
lret
rorl
iret
adc
sarl
scas
std
xor
jmp
push
adc
mov
rcll
push
test
sbb
popf
iret
mov
in
pop
lret
inc
inc
lods
and
sub
insl
cltd
xchg
pop
mov
push
push
arpl
inc
adc
adc
dec
mov
enter
arpl
rol
pusha
cld
inc
jno
and
in
ficompl
push
fiadds
inc
and
aam
add
mov
test
mov
imul
push
dec
xor
in
cld
dec
jnp
pcmpgtb
rorb
or
fstps
test
mov
or
xor
cmc
jae
enter
add
and
pop
inc
pop
lcall
movsl
js
std
push
push
mov
loop
repz
mov
outsb
jmp
lret
mov
cmc
dec
xor
cld
mov
mov
sbb
je
xor
shrl
lds
jp
je
es
lret
and
mov
xor
xchg
fimull
ja
push
ds
push
jnp
cmc
loope
out
add
dec
std
sahf
adc
lret
mov
sbb
cmp
iret
jg,pn
add
mov
and
mov
cmpsl
mov
xorl
test
fstl
fisttps
cld
jae
sbb
dec
add
and
pop
and
or
push
fstpl
mov
inc
jge
mov
js
out
dec
or
push
stos
cmpsb
pop
add
mov
ss
orb
mov
sub
or
xor
mov
inc
mov
aad
bsr
and
mov
lds
sbb
mov
sti
lock
fisttps
test
add
movsb
push
enter
rclb
inc
mov
hlt
in
cmp
movsb
dec
push
mov
ret
or
stc
add
out
jnp
push
push
jp
mov
mov
xor
out
inc
dec
clc
mov
stos
je
insl
movsb
clc
lods
ret
sub
enter
add
cli
pop
int3
mov
andb
fadds
push
js
and
push
push
add
add
dec
sub
test
cmpsl
add
lahf
pop
or
fbstp
sar
xchg
int
pop
mov
cmc
or
aam
std
lds
ljmp
sub
mov
push
adc
and
jle
xchg
add
mov
inc
push
dec
hlt
mov
cmpsb
mov
in
daa
sub
lret
call
and
push
dec
jb
pop
repz
lcall
push
fimuls
mov
mov
imul
rcrl
push
jmp
xchg
mov
sbb
in
jo
cmp
pop
pop
aas
repz
imull
lods
add
nop
lahf
mov
sub
cmpsl
scas
or
mov
push
test
aaa
sub
cmp
jne
bound
scas
jbe
pop
ja
out
adc
dec
popf
jp
fisttpll
inc
lret
cmp
adc
mul
push
pop
iret
cmp
call
lds
ret
sub
pop
insb
adc
sub
sahf
nop
mov
push
or
jno
cmp
dec
call
xchg
fmul
rcrl
mov
xchg
fwait
xchg
adc
jge
adc
mov
pushf
insb
push
or
xor
inc
cmp
mov
inc
sub
xchg
pop
popa
out
or
inc
jnp
fwait
or
jo
aam
add
fldenv
scas
into
and
iret
inc
jp
add
xor
shrl
lds
jecxz
es
sub
int
leave
test
xchg
movsb
add
rclb
mov
jae
push
into
hlt
dec
pop
loope
push
jl
jo
xchg
xchg
adc
sbb
xor
imul
add
sub
lsl
mov
push
sub
lret
insb
lret
ss
mov
mov
sub
in
mov
push
ffree
cs
mov
arpl
fmuls
and
test
jo
test
jge
inc
dec
shl
scas
sub
lods
insb
adc
mov
lds
cld
inc
xchg
popl
cmc
ret
push
push
lcall
out
push
test
jg
cld
mov
push
into
fmull
aam
adc
inc
int
lahf
in
push
faddp
enter
dec
xchg
and
mov
int3
mov
inc
aas
neg
mov
shrl
test
lods
div
call
mov
add
push
inc
int
mov
mov
xchg
pop
inc
jl
fdiv
ss
cltd
hlt
sbb
sub
add
outsl
je
pop
sbb
dec
inc
ja
std
jg
pop
cs
mov
jecxz
jp
xchg
pop
and
cmp
cmpsb
xchg
push
sub
mov
movsb
jae
or
bswap
jne
lds
mov
fisttps
xchg
ficompl
mov
addr16
divb
imul
bound
push
xor
sub
lret
repz
shrb
mov
cld
mov
stos
outsl
jne
popa
and
arpl
enter
and
stos
or
out
xchg
dec
sub
call
cs
fucomip
pop
mov
xor
fdivr
add
jge
mov
lret
jnp
sub
pop
xchg
mov
inc
out
loop
test
mov
mov
testb
jg
cmp
loopne
stc
ret
mov
push
sbbl
xchg
outsb
sub
jle
inc
add
negl
shrb
jle
sub
jp
dec
jl
dec
orl
addl
xor
cmc
ja
je
idivl
std
cmpb
cmc
or
sub
js
je
jl
jo
cmp
jl
jns
js
mov
jb
jle
jle
adc
xchg
xor
adc
mov
call
inc
mov
fucomip
pop
sahf
nop
inc
enter
loop
loop
mov
lret
ret
mov
and
xchg
arpl
jae
jne
push
mov
xor
sub
cwtl
inc
cmpb
outsl
outsb
mov
in
mov
sahf
lcall
pop
mov
fs
ret
sar
dec
pop
mov
test
xor
xchg
gs
gs
jae
xchg
adc
xchg
pop
imul
mov
push
out
push
ds
push
popl
dec
xchg
enter
mov
clc
and
hlt
aam
adcl
mov
loopne
pushf
xchg
test
lret
push
fs
out
punpcklwd
hlt
pop
je
xorl
loopne
jb
les
imul
daa
sbbb
jnp
stc
aaa
jmp
pop
outsb
leave
loop
pop
ss
pop
daa
icebp
movsl
push
mov
stc
subb
cmpsl
sub
outsb
push
sub
cmp
clc
mov
adc
rorb
jae
and
ss
inc
add
dec
in
jns
push
jl
stos
cs
out
jbe
iret
mov
outsb
xor
push
mov
gs
push
sub
add
out
xchg
insb
xchg
add
push
pop
in
jge
inc
pop
pushf
push
in
sub
ss
fildll
dec
mov
lret
mov
lret
fcmovnb
sbb
jo
leave
test
cmpl
sarl
aad
pminub
push
rolb
add
jp
inc
and
lods
aad
cld
xlat
clc
sub
cmp
jl
enter
in
dec
add
sub
out
ret
cli
gs
fs
fists
imul
stos
out
enter
movsl
push
stc
insb
int
ljmp
lret
xchg
sbb
imul
hlt
rorb
movsl
lock
cltd
and
jns
sub
sub
and
push
lds
push
mov
inc
sbb
aad
mov
xchg
xor
ret
mov
fsubrl
lea
xchg
mov
adc
sub
cwtl
jne
jb
mov
stos
jbe
push
jge
sbb
lods
dec
in
mov
dec
and
cmp
ret
add
pop
nop
cs
jecxz
mov
adc
jns
rorb
int
sub
and
insb
mov
sti
pop
lods
cmp
lcall
mov
inc
xor
mov
je
or
shlb
in
dec
xor
in
push
mov
mov
add
call
add
adc
int3
jl
pop
mov
and
mov
push
push
pop
cmp
fucomip
adc
pushf
movsl
xlat
mov
cmpsb
in
push
mov
fwait
lahf
stos
inc
pop
out
lcall
sbb
pop
pop
jno
fidivl
pop
insl
inc
fistps
or
mov
xlat
inc
aam
loopne
into
xchg
cmpl
jp
aas
lods
sbb
fisttpll
sub
mul
jns
cmp
lock
idiv
ljmp
je
nop
adc
or
sahf
dec
lock
loopne
mov
sbb
cmpsl
pop
pop
adc
and
mov
push
and
dec
add
loope
iret
or
mov
popf
out
in
fdivp
out
pushf
push
push
loop
sahf
cmp
clc
ja
mov
sbb
fs
fwait
xchg
add
inc
test
push
cmc
cmp
cmc
inc
sbb
xorl
jecxz
mov
cwtl
sarl
mov
arpl
inc
jo
scas
jl
call
divb
call
mov
sub
jg
fildl
and
cli
aaa
popl
sbb
mov
stos
rep
aaa
mov
call
sbb
push
add
inc
cs
sbb
in
mov
cltd
popf
mov
pop
sub
cmp
sahf
in
jno
xchg
cmc
int
lea
adc
int3
test
stc
xor
scas
cwtl
pop
cmpl
je
movsb
out
movsl
test
int3
ret
adc
cmc
or
out
inc
stos
push
pop
jae
xor
adcl
dec
pop
jb
sarb
sti
dec
mov
xor
jecxz
pop
sti
sub
cmpsb
sub
xchg
std
fsubr
insl
cwtl
and
rclb
out
aam
and
inc
mov
and
mov
sbb
test
shll
data16
stos
cmpb
xor
aad
pop
xor
mov
into
mov
enter
or
int
inc
sbb
inc
xchg
inc
push
sub
xor
pop
pop
push
sbb
mov
dec
push
inc
sti
call
fidivl
insb
fwait
push
rcr
lock
and
out
and
pop
mov
stc
dec
mov
scas
push
xor
or
aad
iret
lods
aaa
sub
cwtl
lret
cmp
mov
out
cmp
mov
rorl
pop
je
ret
pushaw
arpl
loope
testb
nop
lcall
fisttps
outsb
test
pop
pop
push
cmpsb
psrlw
dec
xor
loopne
adc
xchg
dec
pop
mov
mov
adc
pop
jg
pop
adc
ja
add
jmp
sub
pop
loop
cmp
and
les
rcrl
sbb
or
lahf
lds
or
mov
jmp
jg
lret
push
mov
lock
imull
enter
mov
jge
daa
pop
aad
mov
dec
insl
xchg
movsl
lds
push
loope
and
mov
loope
sti
sbb
movsl
add
push
popf
jbe
inc
inc
shl
test
movsl
xlat
les
mov
test
lds
add
xor
mov
xchg
dec
jnp
in
aas
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
aas
popa
jecxz
push
xchg
add
xchg
dec
jnp
in
aas
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
testb
ret
bound
sub
inc
xor
xchg
fstl
bound
aam
push
fcmovnb
mov
mov
and
mov
mov
pusha
sub
addr16
xchg
jle
rcrb
enter
lret
sbb
and
add
loope
out
xchg
lods
jae
fidivl
jae
hlt
sub
mov
lahf
out
lock
test
inc
or
outsl
in
mov
cwtl
mov
stos
xchg
icebp
push
sub
fs
insb
xchg
arpl
nop
imul
iret
cmpsb
ljmp
insb
sbb
outsb
movsb
jae
inc
and
inc
xchg
adc
or
xor
into
out
inc
pop
cld
pop
cmp
ljmp
stos
cmp
or
test
inc
lahf
pop
sarl
add
mov
push
pop
lods
out
mov
fmull
and
test
outsb
push
and
mov
data16
sub
sub
dec
add
dec
lahf
adcb
jbe
cmovb
loopne
lods
inc
out
in
das
ja
xchg
cmpb
test
mov
jg
mov
jge
sahf
pop
sbb
fwait
inc
iret
xchg
mov
jmp
jmp
cmp
cmp
and
jl
sbb
nop
mov
repz
in
loopne
icebp
lret
pop
sbb
ljmp
fstp
dec
pop
icebp
adc
cmp
sub
jl
xchg
cmp
fs
fsubrp
add
or
pushf
iret
push
xchg
mov
xor
test
sti
dec
xor
je
and
push
xchg
cmp
push
int3
aam
repz
dec
repnz
inc
dec
pop
movsl
inc
inc
xchg
inc
pop
push
cmp
popa
insl
in
add
in
lret
jbe
mov
imul
cmpsb
mov
or
icebp
ljmp
mov
xor
insb
xchg
nop
push
fwait
adc
dec
push
dec
fsub
jl
cld
sbb
rorl
sub
or
test
enter
xor
or
sub
rcrb
movsb
lock
fwait
sbb
sub
adc
push
pop
cmp
mov
out
jnp
lods
idivb
les
negb
data16
sub
lods
sub
test
adc
popa
in
push
fstpt
flds
movsb
push
sar
mov
mov
push
sahf
cmpsb
xchg
mov
sti
sub
lret
add
cltd
scas
arpl
push
jbe
adc
and
push
lods
push
sbb
test
push
dec
fdivl
pushf
out
and
inc
inc
jle
add
sbb
sbb
cmpsb
frstor
xchg
lea
push
loopne
insb
inc
cli
orb
shrb
or
push
in
xrelease
add
stos
fsub
fsubs
bnd
aas
sbb
and
inc
pusha
cmp
inc
xchg
and
mov
cmpsl
cs
loop
cmc
or
sahf
inc
nop
mov
xchg
add
jecxz
test
dec
or
sub
int3
xor
ds
imul
aad
in
movb
roll
push
jg
test
or
cmp
mov
pop
and
sub
dec
jmp
les
iret
mov
xchg
das
xor
jg
inc
call
xchg
popf
pushf
leave
bound
push
cs
repz
mov
push
cmp
and
jno
adc
int3
xchg
cli
and
int3
and
pop
cli
fdivs
cmp
adc
jb
add
pmaxsw
mov
pop
rol
inc
out
sbb
jae
int3
adc
fistps
icebp
sbb
fsubrl
cmp
xchg
pop
mov
pop
jmp
call
cmp
in
fs
iret
lea
xchg
add
or
cmpsl
imul
ds
int
xorl
push
aam
test
mov
lock
int3
jge
pusha
xchg
sub
mov
cs
and
or
lock
fstpt
daa
dec
std
sbb
mov
sub
xchg
rol
std
sub
inc
or
jnp
stc
cmp
orps
in
xchg
inc
jb
sub
cltd
push
lret
pop
or
es
imul
jecxz
mov
lods
stos
sub
or
mov
or
repnz
es
xor
sub
pop
cmc
nop
fdivrl
enter
cs
and
pop
cmp
lds
hlt
sbb
imul
bnd
and
cli
in
stc
cltd
dec
add
out
cmp
repz
aad
fsts
popf
jge
jo
xlat
pop
data16
cmp
pop
xchg
movsl
push
fs
out
mov
das
insl
out
dec
adc
sbb
ss
cli
mov
mov
xlat
imul
mov
jmp
mov
dec
mov
dec
test
sbb
movsl
jmp
sbb
fmul
cmp
sub
jae
push
xchg
jl
sbb
pop
xchg
rcrb
insb
ret
test
xor
adc
adc
jp
ja
repnz
pusha
mov
pop
xchg
data16
adc
or
adc
cs
jno
mov
push
push
push
adc
cmpl
and
adc
mov
cmc
xchg
adc
fidivrs
add
jge
adc
pop
or
popa
sarb
mov
push
jg
das
aaa
or
pop
fidivrl
shlb
inc
dec
arpl
push
out
imul
cmp
add
stos
es
mov
rclb
add
and
outsb
data16
dec
xchg
lds
repz
mov
jmp
aad
rol
jae
scas
push
ficoms
loop
mov
ljmp
adc
or
enter
mov
lcall
dec
dec
inc
jo
inc
mov
sub
mov
mov
sbb
int
inc
int
cmp
imul
repz
cmc
insb
push
movsl
add
add
shl
cli
inc
mov
xchg
jl
xchg
push
loopne
lcall
out
mov
xor
ficoml
pusha
int
sbb
fists
mov
lret
push
push
addr16
fcmovnbe
shlb
mov
pop
fwait
jo
cmp
adc
repz
imul
andb
dec
inc
push
andb
inc
lods
int3
mov
subl
inc
push
adc
test
fucomip
shr
mov
ror
imul
lahf
xor
gs
mov
jns
in
aam
sbb
lea
popf
inc
ss
push
fstpl
popa
mov
cmp
xor
pop
jge
into
xor
fnsave
mov
sub
mov
pop
lods
hlt
pop
test
pop
jno
lcall
inc
mov
out
mov
movsb
sub
mov
sarl
ds
jecxz
adc
xchg
out
adc
fs
xchg
push
mov
mov
pop
ret
mov
mov
popa
xor
cli
push
shrb
adc
sbb
mov
dec
or
lret
pop
sub
inc
in
mov
mov
out
mov
rcl
adc
and
sub
dec
loop
inc
dec
cmp
andb
mov
das
cli
rcrb
jbe
mov
push
push
ror
and
imul
mov
pop
xlat
mov
pusha
jnp
iret
sbbb
inc
lret
stos
or
push
inc
insb
jnp
dec
mov
mov
mov
pop
in
jnp
pop
or
outsb
mov
loopne
xor
mov
sub
inc
cmp
add
fisubrs
std
sub
mov
sahf
push
push
in
hlt
mov
inc
dec
inc
jo
loopne
jecxz
call
daa
scas
push
imul
incl
mov
pop
ret
sbb
cmp
xor
popf
mov
cmp
or
pop
ficoms
xor
push
jp
add
cmpsl
pop
nop
or
xlat
adc
es
lahf
data16
mov
ret
xor
in
aas
je
es
adc
lahf
cmpsl
jns
dec
fldt
cmp
std
jne
mov
cmp
insb
ja
sub
jnp
push
movsb
cld
test
jno
cmp
out
lret
sbb
sti
pop
imul
andb
das
outsl
inc
iret
jo
mov
test
cmp
xor
mov
adc
cwtl
and
push
xchg
jle
pop
sahf
hlt
fs
aaa
and
in
pop
push
inc
repz
sbb
mov
sub
rdtsc
iret
fucomp
mov
add
lahf
xchg
loop
loopne
in
out
mov
sub
inc
popf
xor
inc
pushf
pop
or
insb
mov
loop
ss
push
lret
aas
loope
mov
add
dec
lret
test
adc
cmpsl
daa
xchg
fistl
adc
xchg
mov
call
mov
cs
sbb
adc
inc
ja
ljmp
xor
jo
inc
sub
sub
fdivrp
sbb
dec
ficomps
fcmovne
in
xor
leave
lods
sar
aas
test
sbb
cmp
in
adc
or
xchg
test
negl
sbb
push
addr16
addb
das
pushf
sbb
jnp
neg
popa
shlb
add
insb
push
mov
dec
fsts
and
xchg
inc
mov
push
cmp
xchg
imul
cmpsb
sti
rolb
loope
mov
int3
bnd
mov
sbbl
sub
pop
into
into
and
out
mov
jl
fcompl
and
cmp
cwtl
int3
mov
out
jae
adcl
imul
gs
inc
nop
clc
push
xor
sbb
mov
push
pushf
and
fistpl
inc
popa
mov
je
dec
push
idivb
cs
ds
pop
repz
out
pop
mov
mov
sub
test
popa
faddp
aas
add
push
enter
lret
push
inc
pusha
ss
sub
mov
lock
mov
xlat
sub
out
dec
jl
out
and
xchg
fstpl
leave
dec
xchg
aaa
outsb
les
orb
push
push
jo
push
jmp
out
pop
scas
in
insl
push
pop
sbb
std
jmp
mov
mov
jecxz
mov
and
cmpsb
sub
mov
das
divl
xchg
cmp
sbb
xlat
sub
in
shl
stos
dec
out
mov
shrb
xchg
xchg
int
push
push
lds
leave
dec
mov
and
xchg
xor
out
jb
mov
enter
adc
adc
out
testl
jbe
and
test
in
loope
or
lcall
loopne
sbb
mov
in
xchg
cmp
cmp
sub
pop
inc
xor
jnp
mov
lods
loop
cmc
ljmp
cmp
or
push
mov
fiaddl
inc
aam
xchg
push
adc
cltd
push
sti
fdivs
paddd
jle
loop
adc
test
xchg
add
adc
mov
pop
xchg
mov
sbb
dec
xor
inc
sbb
cmp
shlb
xlat
pop
xor
xchg
dec
mov
pop
jle
cli
sbb
inc
cmpsl
flds
mov
mov
xor
xor
inc
push
ja
das
sbb
xlat
and
imul
daa
je
cmp
hlt
es
jno
inc
push
loopne
and
movsb
imul
mov
pop
in
jnp
mov
das
push
lods
sbb
jne
jmp
outsb
xchg
adc
jno
gs
fstpl
add
es
fmul
movsl
inc
xor
fbld
pop
pop
mov
cltd
sbb
push
clc
js
sub
cmpb
popf
mov
jne
dec
js
mov
nop
cmp
add
int
cld
lcall
adc
fwait
enter
push
push
sub
mov
push
insb
and
add
add
int
mov
addr16
mov
loopne
and
mov
enter
lea
sbb
mov
pop
fwait
adc
adc
gs
lods
sub
add
mov
jno
out
lcall
out
or
sbb
sahf
fs
cmpsb
push
push
pop
cmp
iret
dec
dec
cmovge
mov
push
inc
jno
jle
sbb
mov
cmp
adc
and
sbb
mov
sbb
push
sbb
lret
mov
sti
divb
mov
or
int3
and
mov
jg
dec
jg
cltd
mov
jne
notb
std
adc
leave
mov
mov
and
test
je
pop
inc
sub
hlt
fmull
in
add
push
push
sub
push
pop
movsb
inc
or
sub
jge
ljmp
jg
cltd
mov
jne
idiv
jb
mov
cltd
std
mov
push
mul
shl
inc
cltd
jne
pusha
pop
dec
mov
das
sub
xor
gs
inc
push
push
mov
pop
mov
pop
and
test
aad
add
push
pop
jmp
inc
fcoml
adc
lods
push
adc
sbb
adc
out
daa
fcomps
push
loopne
jnp
dec
call
dec
aam
mov
mov
cs
and
cltd
lcall
out
int
lea
das
insl
inc
or
mov
stc
and
or
lods
xchg
les
scas
add
cmp
jno
cmp
lret
jecxz
add
inc
mov
ss
pop
fwait
mov
fwait
dec
adc
xor
mov
jp
add
sbb
mov
mov
inc
xchg
mov
scas
cmp
scas
mov
decl
paddusw
push
mov
jmp
and
sarb
lods
scas
mov
lcall
mov
add
or
or
hlt
mov
pop
popa
jae
xor
or
arpl
fwait
icebp
addr16
dec
sbb
adc
add
pop
xorl
mov
mov
ret
sbb
add
mov
mov
mov
sahf
add
push
aaa
scas
jne
sbb
lods
shl
int3
frstor
jge
popa
xor
push
fdivrl
jmp
inc
push
adc
loopne
iret
outsb
insl
jo
fldcw
cmp
pop
subb
jg
jno
fld
xchg
mov
sub
push
pop
mov
jg
or
mov
mov
pop
xchg
dec
das
mov
loop
mov
shrb
push
popa
dec
and
push
or
mov
test
sahf
lcall
mov
push
movsb
inc
push
lea
dec
adc
test
jmp
push
adc
icebp
cld
out
mov
lock
inc
movsb
and
sub
lock
or
jo
xor
sbbl
negb
fsub
mov
mov
je
sti
xchg
mov
jae
mov
or
sub
idiv
push
mov
test
dec
mulw
andb
mov
in
fiaddl
les
out
adc
mov
aam
cwtl
rcrb
inc
ret
add
mov
mov
pushf
push
ret
inc
xchg
sbb
push
xlat
push
push
push
mov
test
imul
gs
cmp
dec
xchg
icebp
call
movl
in
cmp
das
iret
lds
fists
out
cmc
imul
enter
aas
js
mov
xor
jo
add
outsb
mov
xor
jnp
xchg
cmpsb
cmpsl
outsb
ss
cmpsl
mov
cmpsb
inc
data16
orb
add
mov
daa
inc
or
and
cwtl
cmpsl
aaa
push
scas
les
inc
imul
in
xor
cmp
test
dec
push
int
xor
test
jns
es
jmp
mov
inc
repnz
sti
lret
push
jg
int3
cli
mov
in
add
sub
das
and
pushf
ljmp
test
jge
dec
pop
pop
out
jae
push
xchg
pop
pop
sbb
ds
jo
mov
aas
mov
pop
xchg
mov
dec
aaa
mov
or
mov
adc
cmp
scas
shrb
add
lock
push
stos
jno
or
cmp
xor
pop
daa
loopne
fwait
in
jmp
cmp
or
out
das
mov
mov
in
lahf
pop
setg
dec
clc
icebp
add
fdivl
stc
mov
stos
push
push
repz
ds
dec
aaa
test
push
imul
pop
cs
lds
mov
xor
and
loope
pop
or
jns
push
pop
je
jmp
mov
mov
cmc
ds
jno
aad
jmp
ret
mov
out
pop
loop
inc
mov
outsb
push
mov
lods
and
sub
into
xchg
cmpsb
cmpsl
lret
dec
shll
mov
hlt
or
mov
sub
pop
mov
repnz
aam
pushf
pusha
xlat
stos
dec
lds
int3
ljmp
ds
push
stos
jmp
nop
mov
mov
and
scas
outsl
xor
pop
stos
mov
in
pop
cld
inc
inc
cmc
add
je
loopne
cmp
aas
xlat
cmc
ret
xor
int3
aas
shll
sbb
outsl
scas
les
xchg
jnp
dec
add
fistps
push
xchg
push
mov
outsl
inc
jno
add
xchg
cmp
imull
adc
cmp
es
and
inc
loopne
fwait
cmpb
movsl
fs
push
ret
mov
cmpsl
mov
andl
in
les
dec
and
lea
sbb
inc
jns
cmc
pop
xchg
mov
add
into
cmpsl
sbb
lret
pop
std
inc
inc
mov
push
hlt
push
xchg
mov
xor
xor
lock
xchg
shl
mov
icebp
es
js
out
rol
add
jne
and
sbb
iret
lock
ds
sbb
pop
out
stos
clc
push
je
in
mov
dec
popf
pop
cwtl
and
adc
fisubrs
cmp
xlat
mov
mov
test
pushl
repnz
push
jp
les
mov
lods
imul
pop
sub
mov
inc
dec
mov
adc
aas
mov
and
fstpt
cld
jg
mov
add
cmpsl
sub
push
jbe
outsl
dec
daa
in
add
nop
sbb
mov
xor
jecxz
pop
test
nop
call
scas
pop
popf
sub
test
mov
movb
popa
decb
lea
jl
pop
cmp
mov
pop
mov
xor
jl
add
jecxz
push
out
xchg
lret
inc
sub
jmp
mov
fadds
or
mov
mov
fbstp
stos
fldcw
xchg
jb
xchg
push
andl
or
push
push
sub
aad
inc
dec
leave
rcll
cmpsb
testb
push
addr16
sub
inc
adc
int
pop
rcll
js
push
adc
sub
cmc
icebp
popf
and
ljmp
in
xor
push
mov
enter
mov
push
and
mov
inc
jbe
int
out
daa
out
mov
imul
mov
dec
fs
sub
mov
data16
ja
cmp
mov
xchg
xor
icebp
test
cltd
gs
jbe
scas
cmpl
mov
adc
movsl
das
push
movsb
xchg
scas
cmp
push
idiv
push
shlb
sbb
mov
test
push
xor
mov
sbb
mov
je
cld
sub
cmpsb
les
repz
pop
sub
adc
xor
jmp
xchg
pop
lock
push
and
inc
mov
imul
inc
mov
jns
inc
jnp
hlt
stc
icebp
loop
std
jge
aam
das
stos
lahf
xlat
je
pop
and
in
sub
mov
xchg
xchg
sti
jb
pop
leave
sbb
xchg
jb
aam
pop
shl
adc
sahf
les
lret
out
xor
mov
cmc
dec
sbb
pop
cmp
xchg
cmp
lea
jb
xor
mov
kandb
mov
jns
pushl
ret
sub
dec
xor
inc
shlb
sti
xchg
pop
fstl
pop
out
into
sbb
in
repnz
cmp
fadd
imul
sub
imul
scas
dec
fwait
shl
or
and
outsl
adc
inc
ss
xchg
ret
outsl
jp
push
scas
scas
xchg
push
movl
repz
in
repnz
push
push
cs
jmp
pop
popf
fisttpl
push
js
repnz
lds
sub
push
nop
mov
stos
dec
cmp
lret
sbb
lahf
ja
lcall
stos
mov
mov
cmovs
out
movsl
and
sbb
scas
ljmp
jne
mov
jbe
shlb
xchg
ret
jne
adc
pcmpgtw
cmp
fsubrl
mov
lock
in
or
mov
and
shll
push
rcl
decl
lcall
lcall
andb
pop
jno
test
jle
ds
push
dec
sub
mov
jmp
into
setbe
mov
jne
inc
movsl
cli
subb
mov
outsl
fistps
pop
call
mov
cmp
dec
or
loopne
cmp
js
loope,pt
xchg
movl
std
cmc
push
adc
aad
jnp
dec
or
xor
test
or
jo
push
loop
inc
mov
add
fwait
repnz
aaa
mov
gs
and
pop
dec
jecxz
stos
push
outsl
mov
je
je
dec
arpl
test
inc
sbb
mov
xchg
stos
sbb
aad
inc
cmp
lods
ja
xchg
dec
adc
into
int3
lcall
insl
test
add
xchg
xchg
fstpl
and
jg
push
mov
sbb
ja,pt
xor
stos
push
in
lcall
repz
mov
fisubs
xor
dec
jmp
clc
xor
insl
loopne
mov
out
sahf
and
clc
notb
arpl
inc
and
iret
add
es
mov
xchg
inc
sub
in
mov
mov
insl
push
scas
push
fwait
mov
pop
imul
repz
lcall
dec
rclb
push
fs
popa
and
sub
adc
arpl
push
pop
loopne
stc
jmp
pop
pop
cmc
cmpsb
cmp
cmp
insl
mov
mov
mov
movsb
notl
rcr
mov
xchg
subl
mov
pop
sarb
sbb
jnp
pop
mov
push
testl
inc
mov
mov
cmpsb
cmp
les
movsb
lret
push
add
outsb
add
stos
push
fmuls
and
lea
and
inc
sar
test
mov
lret
mov
pmaddwd
pop
pop
sbb
cld
and
mov
mov
add
push
and
cli
adc
lods
adc
pop
pop
addb
mov
leave
jb
test
dec
pop
adc
jg
sbb
mov
ljmp
popf
adc
cs
int3
push
inc
mov
out
loopne,pt
jmp
mov
fnstsw
lock
pop
mov
xlat
cmp
flds
cmpsl
enter
icebp
rolb
fidivrl
mov
xchg
xchg
inc
mov
leave
push
enter
xor
xor
mov
ss
cmp
pop
inc
sbb
fadds
mov
popa
mov
adc
ficomps
movsl
cmp
sbb
mov
into
out
jg
jecxz
lret
loopne
mov
loop
fidivrs
lcall
jecxz
mov
pusha
jmp
test
pop
scas
insb
fdivrs
xor
std
dec
pushw
mov
enter
addr16
ss
mov
ja
xchg
cmp
dec
sbb
xchg
inc
jp
mov
adc
out
mov
mov
int3
enter
movsb
aaa
outsb
or
dec
shl
fistps
repnz
test
icebp
adc
cmc
mov
mov
outsl
jl
pop
pop
imul
ret
decb
daa
or
pop
xchg
adc
push
jge
and
cmpsl
fimull
sub
mov
enter
push
test
and
jb
lcall
arpl
adc
inc
push
ret
push
in
push
out
aaa
cmpsl
xor
sub
pop
xchg
mov
adc
mov
jo
sahf
daa
pop
repz
or
fwait
imul
pop
cmpsb
out
mov
jge
push
jb
lock
push
sbb
jg
cmp
in
pop
jno
add
and
cld
mov
stos
scas
mov
push
cltd
into
mov
test
add
jle
ja
sub
ret
bound
push
stos
dec
inc
mov
lods
pop
in
into
pop
mov
aam
inc
icebp
cld
jno
loopne
cmp
lods
cmp
or
pop
ror
mov
mov
aad
loopne
dec
rcll
xchg
movsl
js
sub
jb
daa
gs
adcl
mov
push
cld
inc
push
xchg
in
dec
xchg
push
jecxz
cmp
mov
mov
jnp
and
xlat
aaa
aas
data16
pushf
or
xchg
inc
leave
aam
jecxz
push
aam
sub
stc
and
cld
cmp
dec
clc
push
and
in
mov
lcall
shll
cmp
stos
lock
int3
movsl
imul
mov
popa
imul
es
fcoml
lds
rcrb
sbbb
xor
jnp
aad
sub
xlat
mov
add
sub
jne
xor
fists
dec
add
mov
in
dec
loope
repnz
inc
cwtl
jl
add
je
movsl
add
and
mov
xor
int
in
adcb
push
dec
pop
adc
mov
lret
ds
outsl
das
mov
inc
mov
sbb
mov
stc
lcall
cmp
inc
jecxz
mov
pop
mov
bound
or
mov
das
les
sbb
mov
ficomps
nop
push
into
popf
mov
lahf
xchg
cwtl
jae
sbb
mov
cmp
scas
test
sub
shll
cltd
ss
mov
mov
js
push
lahf
mov
cmp
js
test
adc
add
enter
push
mov
push
dec
sbb
clc
pinsrw
and
and
test
repz
test
arpl
xor
ja
out
rcrb
mov
out
insb
mov
pop
movsl
xchg
jge
push
jns
lods
in
aad
dec
push
push
mov
adc
add
mov
out
sub
pop
insb
xchg
lods
data16
xor
insl
pop
xor
hlt
haddpd
jne
into
adc
xor
push
cmp
adc
cmp
mov
lcall
add
minps
add
fs
fsubrl
pushf
cmc
dec
xchg
add
add
scas
jae
add
mov
add
sti
jecxz
push
shlb
or
mov
add
inc
fstpl
dec
mov
shrl
aam
jmp
push
stos
mov
sbb
call
add
outsb
mov
push
dec
imul
pop
pop
shlb
mull
jp
lods
test
jns
push
std
xchg
stc
test
sti
ficoms
mov
jle
xor
inc
mov
jbe
push
sbb
ss
stc
jns
popf
and
xchg
mov
inc
outsl
inc
pop
mov
cmpsl
orl
xchg
inc
push
stos
xchg
popf
leave
ja
cwtl
lds
cwtl
jo
and
cmp
daa
adc
aaa
push
mov
cmp
cli
add
jne
fdivp
pop
sti
mov
dec
loopne
out
aas
mov
aaa
xchg
mov
xorl
out
stc
adc
scas
roll
lea
stos
add
xchg
adc
rcll
pop
add
fs
add
out
cwtl
mov
xchg
sbb
in
mov
mov
loopne
maxps
add
scas
addl
or
xchg
inc
idivb
imul
shlb
or
in
xor
imul
push
add
out
push
xor
out
sub
movsl
inc
outsl
popf
dec
insb
cld
sub
inc
loop
sti
insl
or
jns
mov
bound
jmp
adcb
out
jnp
jl
lcall
pop
hlt
dec
dec
push
rep
mov
pop
sbb
sub
loopne
mov
outsb
xor
sti
jle
int
or
imul
xchg
lret
leave
icebp
movsb
mov
cmpsb
div
mov
test
adc
jmp
mov
imul
sahf
cmc
fdivs
stos
scas
cmpsl
or
or
daa
pop
lods
jns
jnp
or
frstor
pop
cmovae
cmp
jns
ja
sbb
jmp
push
dec
lods
lret
adc
or
repz
pop
lock
mov
mov
insb
in
xchg
cmpsl
lea
mov
shll
pushf
jmp
lea
sbb
jnp
mov
jns
pop
cmp
mov
mov
add
xchg
xchg
and
data16
push
push
inc
insl
jnp
mov
mov
js
fs
jg
inc
loope
hlt
cmpsl
inc
out
mov
in
inc
adc
pop
dec
and
sub
gs
mov
push
lds
lods
xor
cmpb
in
dec
fs
and
mov
shl
push
and
mov
mov
lcall
pop
cltd
stc
fwait
stos
add
pop
cli
mov
ficomps
je
faddl
and
or
js
or
adc
das
stc
mulb
mov
fadds
movsl
adc
int
fnstsw
pop
jnp
stc
mov
cmpb
mov
repnz
insl
jecxz
js
sar
sub
push
jne
fcompl
sbb
mov
imul
movsb
xor
cld
js
pushw
cltd
xchg
or
call
add
push
jae
adc
xchg
outsl
adc
push
add
and
mov
mov
scas
mov
scas
jns
dec
imul
cmp
add
sub
mov
lock
jg
sbb
icebp
js
push
xchg
rclb
ficomps
fcoml
push
stc
push
pop
testl
fsub
je
mov
insb
aad
inc
lahf
jae
loope
push
lret
jnp
int
fcom
jle
ds
mov
fs
pushf
ret
pop
xchg
nop
test
push
sbb
pop
pop
jg
inc
imul
pop
push
inc
es
ja
adc
jns
mov
or
lea
sti
rorb
jcxz
lods
push
sahf
add
loope
add
imul
dec
mov
ja
nop
shlb
cld
pushf
outsl
jbe
dec
pop
fwait
das
mov
pop
ret
setge
psadbw
mov
popa
cmp
movsl
loop
je
and
repz
stos
popa
mov
pop
push
cs
fisubrl
ds
mov
xchg
jno
pushf
xor
mov
mov
sbb
addr16
test
push
bound
aas
cmc
das
in
mov
inc
jp
iret
lea
testl
mov
adc
jl
aad
pop
mov
sbb
outsl
inc
arpl
mov
or
mov
negb
lock
nop
cli
dec
mov
push
addr16
adc
movsb
jg
xor
icebp
out
pop
in
inc
in
sub
push
jae
out
mov
mov
fsubs
insb
outsb
mov
mov
out
pop
shrl
cmp
imul
mov
or
clc
fcmove
lcall
and
pop
cld
mov
mov
cmp
test
sbb
es
je
dec
xlat
cs
adc
sahf
mov
cltd
pop
push
sti
addr16
or
out
data16
mov
insb
pop
fcomp
add
xchg
add
movsl
dec
ffree
fdivs
or
jns
jbe
inc
jg
push
add
loop
cwtl
mov
mov
out
ljmp
mov
icebp
jo
jno
push
loop
cmp
mov
adc
enter
mov
dec
hlt
mov
dec
arpl
es
daa
ret
lods
andl
cmp
jge
movsl
jl
mov
mov
movlps
out
sub
adc
daa
enter
cmp
lds
lcall
and
add
nop
aaa
adc
or
cmp
lods
pop
lret
into
jecxz
adcl
jl
xor
aaa
adc
nop
sub
icebp
cmpsl
loope
push
xor
mov
aas
sub
mov
dec
dec
test
lods
jmp
push
sbb
adc
es
ret
mov
iret
push
mov
mov
and
ret
push
js
add
sbb
cmp
jp
int
add
out
je
push
aam
std
jno
or
cmc
pop
adc
fadd
mov
mov
fcmovnu
jmp
inc
sbbb
stc
add
xchg
nop
ror
mov
jb
dec
mov
adc
add
arpl
inc
mov
js
mov
adc
nop
imul
inc
lcall
out
sar
repz
cltd
jne
pusha
pop
pushl
stos
sti
adc
ret
xchg
int
test
xor
outsb
call
fmull
xor
popa
push
inc
popf
imul
mov
lock
pop
ja
push
mov
add
sbb
mov
mov
ret
in
std
sbb
and
sbb
mov
cmpsl
mov
xor
mov
outsb
stos
iret
int3
shlb
es
shr
sub
mov
hlt
xchg
push
dec
enter
subl
ja
aaa
out
xchg
xor
jae
leave
enter
xor
pusha
xor
cs
mov
aad
add
push
mov
fsubrs
popf
aam
rclb
pop
fidivrl
cwtl
lods
adc
scas
lahf
dec
insl
sub
jo
sarb
add
push
pop
or
scas
icebp
lret
cmpsb
dec
mov
inc
jbe
push
js
outsb
popa
mov
sub
pop
adc
dec
push
imul
movsb
jmp
jae
jge
adc
in
outsl
inc
test
lds
movsb
out
inc
mov
mov
cmp
into
imul
xorb
or
or
in
sbb
je
push
xor
pop
insb
in
sbb
insb
mov
or
adc
scas
and
dec
mov
jg
inc
orb
mov
jnp
das
or
xor
ja
jae
cs
add
outsb
lods
adc
es
ret
mov
adc
adc
andl
test
push
das
inc
rolb
inc
je
xchg
pop
jne
lods
mov
inc
das
lods
lret
add
fwait
cli
dec
mov
sahf
or
lea
or
fildll
ds
scas
jle
mov
ret
xor
fmulp
push
and
or
fbstp
sbb
push
adc
inc
cld
icebp
orl
push
and
cmp
sbb
out
xor
lods
sbb
mov
adc
outsl
fcmovnu
xchg
ds
loope
push
shr
dec
sub
fisubrs
movsl
and
add
pushf
outsl
call
adc
out
dec
push
jp
cld
mov
pop
push
jp
xchg
dec
mov
cli
mov
push
dec
cmpsb
xchg
repnz
cli
jecxz
sbb
testl
inc
out
adc
sub
or
frstor
stos
adc
inc
lret
push
scas
jb
ss
and
or
sub
pop
std
sbb
das
add
jg
sbb
sbb
icebp
xor
mov
lds
xchg
xor
sub
lea
mov
enter
test
mov
dec
loope
push
stos
iret
cmp
sub
ret
inc
cmpsb
adc
dec
shrb
jl
lahf
jb
aam
fstps
adc
cmp
fwait
shr
push
xchg
mov
cltd
out
lods
xor
pushf
pop
movl
sbb
dec
les
xor
mov
sbb
fimuls
andl
iret
sbb
lret
repnz
or
or
ret
loopne
and
or
dec
push
in
push
jle
ss
inc
jno
push
pop
push
fisubrs
lock
ror
movl
push
loopne
into
xor
stos
in
loop
gs
loope
xchg
test
add
rcll
and
sub
je
sbb
xchg
scas
push
sub
insb
out
mov
movsl
cmp
enter
fisubrl
mov
aad
leave
out
pop
sbb
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
lds
xor
test
inc
pop
and
inc
aas
cmc
cmp
dec
aaa
enter
sub
cli
shll
xchg
sti
add
test
inc
push
mov
and
dec
sub
mov
mov
jle
jne
mov
fwait
push
call
mov
sbb
jae
ss
sbbb
jo
add
pop
fbstp
push
loop
cmpl
inc
or
je
pusha
push
mov
or
out
mov
insb
xor
push
insb
push
pop
mov
inc
jbe
sbb
and
cmp
in
xorb
push
inc
xlat
popa
rorl
scas
scas
adc
shrl
sub
add
mov
mov
xchg
shlb
sbb
sbb
rolb
or
push
bndldx
imul
mov
in
mov
pusha
sbb
and
xchg
nop
add
inc
maxps
mov
pop
imul
pusha
pop
and
mov
call
xchg
fsubrl
das
ret
pop
insl
or
daa
repz
mov
decl
pop
shrl
inc
cli
les
push
sub
xchg
shll
mov
pop
stc
mov
inc
fwait
shrb
das
and
and
outsl
mov
movsb
push
jg
pop
pop
gs
testb
ret
ja
push
mov
sbb
sahf
outsb
cmpl
inc
mov
shll
leave
cli
sbb
adc
sub
jmp
test
js
sub
add
repz
add
mov
jmp
rcll
cmpsl
mov
jl
leave
shll
lahf
add
ret
sti
cmp
pop
repnz
and
cltd
xchg
ds
outsb
fsubrs
subb
pop
xchg
clc
or
pop
cs
jle
das
les
mov
arpl
not
inc
xor
cmp
inc
and
or
push
bound
out
ljmp
dec
gs
lahf
leave
imul
ljmp
sub
dec
ja
or
pop
insb
es
mov
enter
jae
cmp
jmp
je
aas
pop
lahf
or
adc
sbb
xor
dec
jmp
dec
xchg
ucomiss
aaa
insl
inc
dec
sub
mov
out
jns
je
mov
mov
jnp
mov
cmp
shll
addr16
and
or
inc
push
shl
enter
jne
sbb
cmp
fsubp
cmpsb
push
inc
sbb
imul
inc
push
lds
leave
cmp
lahf
mov
rcrb
movsl
fs
bound
pop
enter
daa
daa
movsl
sbb
cmp
adc
lret
mov
push
int3
jns
add
insl
inc
icebp
cld
jno
and
push
inc
jle
je
sub
scas
jp
sub
lds
inc
xor
xchg
out
or
lcall
lea
pop
pop
iret
movsl
and
pusha
repnz
add
lret
in
test
addb
aaa
jecxz
daa
xchg
rcr
push
js
mov
shll
push
shr
movsl
cmp
test
pop
inc
std
mov
or
addb
mov
cmp
dec
cmp
and
ret
insl
loope
data16
pusha
sarl
divl
mov
pop
int
cmp
add
inc
loop
xchg
rcrb
jae
subb
lcall
andl
call
jo
lret
inc
xchg
or
incl
xor
scas
xor
jbe
lds
or
jno
add
out
outsb
imul
data16
mov
out
movsb
iret
insl
cmp
adc
inc
xor
push
dec
dec
pop
push
loope
jp
or
inc
orb
add
mov
mov
out
clc
add
and
test
inc
mov
pop
mov
arpl
cmc
mov
push
adc
aad
cmp
popf
sub
das
loopne,pt
gs
imull
inc
add
push
in
jne
fxtract
inc
in
loop
fxtract
mov
or
pop
sub
push
cmp
pop
cwtl
adc
out
stc
fldt
mov
inc
iret
stos
pop
insl
or
cmp
cmp
sub
xor
add
in
push
je
or
in
push
ds
shrb
push
sbb
mov
dec
dec
and
or
add
repz
fnstcw
ds
test
mov
shrl
int
jmp
cmpsb
sub
pop
jge
out
iret
enter
xor
cmc
pop
xchg
test
xor
in
fdivrs
pop
inc
cmpsb
rcrb
add
jge
imul
loope
fidivl
movsb
fnstenv
mov
into
imul
push
dec
into
jbe
jno
xchg
fisttps
outsl
out
les
mov
cli
jp
add
sbb
push
loopne
or
fstps
hlt
or
ret
or
inc
imul
imul
shlb
out
lods
aas
mov
cmp
ljmp
insb
xchg
repz
mov
inc
xchg
imul
subl
push
loope
int
inc
mov
mov
jmp
shrl
add
jbe
cmp
popf
repnz
jno
idivb
into
or
fstps
xchg
clc
xor
jbe
jle
mov
pop
das
lods
rclb
in
dec
jbe
cs
mov
outsb
jno
shll
mov
xorb
into
jg
lahf
das
and
jecxz
insl
loop
mov
pop
dec
outsb
mov
push
scas
xchg
dec
cmc
push
scas
push
out
jle
sbb
adc
and
mov
mov
aam
fdivrs
push
cmp
adcl
inc
pop
stc
dec
idiv
test
jle
cmpsl
lods
les
test
xchg
xchg
mov
push
in
push
push
adc
icebp
rorb
arpl
movsb
into
fldenv
cmp
push
scas
cmpb
jns
dec
push
ja
shll
cwtl
ja
cld
rcl
punpckhbw
cli
repnz
js
dec
dec
cmp
cmp
and
in
fdivs
mov
int3
xor
stos
movsl
mov
pop
fdivrs
stos
pusha
xor
sub
fcomip
mov
pop
fcmovu
jge
ficoml
fisttpl
fsubrl
bound
mov
arpl
and
loopne
adc
push
test
add
adc
or
cli
and
inc
stos
into
imul
rclb
push
imul
aaa
in
cs
inc
loopne
push
dec
dec
fimuls
sbb
mov
imul
add
icebp
mov
ja
xchg
pop
sub
cmp
inc
fwait
xchg
jmp
dec
in
aas
xchg
push
mov
xchg
dec
inc
cwtl
jmp
lock
dec
lcall
jp
fwait
push
xor
pop
dec
cmp
cwtl
dec
jmp
mov
subb
movsl
mov
or
movsl
mov
or
xchg
sub
cmp
and
push
jp
adc
sbbb
jne
cmp
rcll
lods
xchg
inc
sbb
mov
jl
ljmp
jnp
cmc
jns
jg
ljmp
jmp
pop
xor
mov
pop
loop
dec
mov
xchg
pop
scas
inc
mov
lea
add
inc
out
sub
mov
push
cmp
mov
loopne
mov
jle
or
mov
cltd
adc
jmp
jmp
outsl
cmp
mov
mov
ljmp
and
loop
mov
sbb
mov
adc
sub
sti
cmpb
cmp
je
imul
xchg
jg
enter
push
rcll
pop
cmp
mov
clc
and
stos
movsl
add
mov
mov
loop
pusha
imul
mov
outsw
std
bound
leave
mov
mov
test
addr16
mov
enter
pop
loope
mov
mov
sbb
xchg
mov
iret
jno
or
cmpsl
jmp
adc
xchg
cmc
sbb
cmc
mov
jle
inc
dec
fwait
outsb
movsl
and
lods
cmp
in
sbb
sti
loop
jne
movsb
mov
addr16
dec
in
gs
cwtl
fucomip
loop
push
popa
sub
shrl
dec
test
ss
lods
mov
imull
inc
xor
lods
mul
insl
push
pop
mov
fwait
add
and
inc
mov
add
inc
pslld
sub
xor
push
pop
cwtl
arpl
pop
hlt
fucomip
dec
jl
adc
mov
sbb
andb
js
sbb
jl
sub
in
lret
sub
popl
cmp
or
or
clc
push
data16
dec
add
gs
cwtl
mov
inc
gs
aaa
out
pop
mov
or
ret
pop
jns
mov
inc
xchg
popf
push
xor
xor
fdivrl
fstpl
cltd
mov
xchg
int3
shl
lea
out
out
js
test
leave
insb
sar
addr16
cmp
or
inc
xchg
bound
or
iret
xchg
inc
in
mov
jmp
shlb
xor
sbb
stc
add
inc
sahf
inc
xchg
sahf
push
loopne
gs
pop
mov
sub
stos
stos
adc
mov
fdivrs
inc
mov
rcrl
jmp
jge
out
add
cld
and
ss
mov
add
fisubl
xchg
jl
in
push
push
push
mov
test
negb
xor
and
mov
enter
out
adc
mov
mov
in
arpl
out
add
inc
int3
es
scas
ss
xor
movsl
fwait
mov
fisubs
rorl
cmp
and
fnsave
xchg
or
aad
push
insl
fisttpl
std
jne
sbb
dec
enter
subb
xlat
ret
cmpsl
xlat
dec
mov
stos
test
pop
xchg
bound
in
mov
cwtl
aas
adc
or
dec
add
inc
in
ret
sub
popl
inc
pop
movsb
adc
sbb
adc
push
ficompl
pop
sbb
scas
mov
out
decb
rclb
xchg
loop
dec
popf
fnstsw
sbb
leave
int
insl
std
xor
in
pop
js
cmp
mov
push
es
jnp
mov
inc
and
pusha
xchg
dec
xchg
xchg
xchg
fcos
in
lcall
dec
cmovae
pop
lahf
xor
imul
push
mov
xchg
mov
frstor
shr
rcll
loop
mov
mov
jbe
ljmp
adc
aad
or
sbb
cltd
ret
mov
int
out
adc
add
mov
fwait
int
das
popa
cmp
imul
sub
mov
xorb
jb
lea
movsl
das
mov
stos
sub
mov
xor
mov
mov
and
lods
adc
adc
jp
lods
dec
test
mov
mov
dec
xor
mov
cmp
cmp
jle
cmpsb
push
fldcw
xchg
and
lret
lahf
adc
repz
subb
movsl
fs
hlt
les
ret
inc
addl
xor
sbb
and
jbe
add
out
push
sub
xor
repnz
into
sub
enter
cwtl
in
mov
arpl
fxch
jae
sbbb
movsl
subl
out
inc
jno
xor
in
sahf
lret
scas
adc
jns
test
repnz
push
loope
sbb
xor
fidivs
repz
inc
je
mov
xchg
shlb
pop
pop
or
cmp
jmp
xorb
call
adc
loop
cwtl
cs
rcrl
push
inc
jle
pop
rorb
es
nop
lock
frstor
cmpsb
jg
adc
mov
dec
data16
push
je
inc
mov
adc
mov
mov
sbb
mov
adc
shll
mov
xlat
cmp
subl
pop
xchg
xchg
loopne
frstor
in
xchg
je
adc
adc
aad
popa
mov
sbbb
push
push
enter
rcl
iret
dec
sarb
clc
ja
gs
repnz
outsl
dec
xchg
out
ds
call
mov
push
stos
scas
cmp
stos
out
in
cmp
sub
shrb
insl
cld
cmp
add
popa
dec
inc
push
imul
int
mov
cltd
mov
ja
cmpb
data16
in
mov
xchg
mov
pop
push
xchg
and
arpl
int
xor
dec
stos
inc
inc
mov
mov
pop
lret
push
sbb
add
xor
pop
in
mov
les
enter
das
and
mov
enter
add
test
sub
ja
addr16
in
cmpsb
cmp
jb
xchg
cmpsl
mov
cmp
adcl
in
sbb
jb
pop
fistps
cld
mov
lahf
aam
inc
mov
and
test
dec
jl
or
sub
jle
scas
std
fnstenv
cmpsb
add
adc
or
jg
gs
les
push
les
mov
jne
pop
mov
in
jg
mov
adc
lods
stos
lods
dec
fmul
mov
les
sub
inc
movsl
and
roll
mov
sahf
outsb
icebp
jecxz
rorb
lret
jbe
sbb
inc
xorb
dec
dec
fmuls
das
adc
jb
mov
push
mov
sbb
jnp
notb
lea
jmp
and
ss
insl
cwtl
cmp
adc
std
or
testl
push
push
inc
icebp
jmp
subb
lea
ficoml
xor
and
fsubrl
mov
inc
and
bnd
jl
xchg
outsl
add
push
jae
loope
add
lock
cli
fmulp
repnz
pop
lea
xchg
int3
jns
push
call
xchg
pop
outsl
call
call
sub
pop
cmp
and
std
xor
call
mulb
sahf
testb
ds
push
sub
rcr
lret
push
jle
jp
das
push
das
mov
adc
xchg
push
mov
iret
mov
arpl
xchg
aad
loopne
cld
test
out
fs
or
jnp
leave
sub
call
sub
lret
xorl
icebp
fdivl
paddusb
aad
pop
mov
cmp
mov
push
add
mov
mov
ret
jns
popa
daa
dec
fcompl
jmp
dec
daa
inc
nop
rorb
ret
push
cli
sarl
popa
adc
mov
test
xlat
fstps
push
out
inc
imul
fcomi
gs
jmp
rcl
imul
pop
ficompl
scas
cmc
or
xchg
and
arpl
rol
subl
add
push
add
jnp
fwait
dec
add
ficoml
imul
in
cs
or
orl
testb
incb
push
arpl
dec
add
fisubl
xchg
and
mov
sub
mov
scas
jmp
test
add
stc
fstpt
push
mov
rorb
cwtl
mov
and
daa
pop
mov
dec
mov
mov
loope
stc
xor
cmc
negb
dec
mov
out
pop
sub
std
or
push
cltd
hlt
xchg
jo
mov
jg
or
popa
jo
cmpsl
aas
out
out
mov
inc
pop
pop
rcll
bound
xor
inc
mov
lret
sub
test
or
mov
cmp
push
push
insl
mov
pop
fnstsw
dec
ror
call
ja
lea
clc
fimuls
lahf
cltd
inc
mov
movsl
push
jne
mov
pop
add
scas
sub
out
je
mov
data16
adc
mov
sub
mov
sti
mov
mov
mov
fwait
inc
mov
xchg
aad
adc
adc
das
add
mov
adc
fistps
sub
dec
mov
pop
cmpsb
mov
push
mov
xchg
and
shll
aad
jle
cmp
or
push
rclb
push
sub
sahf
jae
push
push
int3
jg
add
mov
push
out
or
loope
adc
test
inc
ljmp
jge
dec
inc
sub
cmp
mov
arpl
popa
ret
popw
xor
ljmp
push
inc
int
pop
fsubrs
repz
stc
xlat
mov
fidivrs
xor
sbb
lock
sbb
ja
and
jmp
fadds
loope,pt
imul
add
mov
xchg
nop
xlat
test
sub
sarb
mov
adc
mov
dec
pop
loope
repnz
pop
xchg
sub
push
mov
mov
inc
sti
arpl
ffreep
or
xor
popf
or
mov
negb
mov
fsubl
jge
scas
mov
aas
enter
xchg
aaa
sbb
mov
mov
cld
ret
mov
fisubs
inc
xchg
shr
addr16
adc
mov
jne
loopne
lea
fsubl
cli
in
popa
fmuls
popl
mov
mov
inc
mov
cmpsl
loopne
scas
push
ss
inc
inc
pop
shrl
loop
aaa
aad
push
andl
and
out
int
sub
cltd
shrb
adc
clc
xchg
add
sub
pusha
push
loopew
xlat
or
add
sarb
cwtl
mov
loopne
push
movsb
xchg
jae
dec
jp
adc
mov
dec
push
adc
lods
pusha
push
mov
inc
push
or
cli
push
imul
in
aaa
dec
add
sbb
std
mov
mov
mov
in
gs
inc
lret
into
cld
jnp
daa
clc
das
mov
clc
xchg
pop
leave
jmp
sub
clc
js
and
imul
xor
sub
stos
lods
xchg
jge
cmp
scas
sbb
dec
dec
out
aas
cmc
sti
imul
pop
jmp
mov
jae
pop
shll
xlat
das
in
or
mov
add
mov
jmp
mov
lahf
in
shl
jle
or
subl
add
repnz
js
movsl
or
push
pop
inc
call
fsubs
outsl
inc
scas
add
cltd
pusha
repz
pop
imulb
push
pop
sbb
pop
addl
in
cltd
fimuls
arpl
mov
into
inc
jmp
int
daa
jne
mov
xlat
jl
push
pop
stc
or
or
jecxz
andb
mov
adc
mov
fcomps
mov
push
xor
push
adc
push
mov
jle
add
shll
sub
icebp
push
jae
lock
mov
fsubs
stos
out
lret
sbb
jae
repnz
cmc
popf
mov
out
insb
out
pop
imul
sbb
jl
sahf
jg
rol
cmp
out
arpl
jae
fdivrp
bound
pop
sbb
mov
adc
pop
and
outsb
push
xchg
cmp
pop
mov
sub
sub
push
jmp
xchg
and
test
les
ja
stc
push
shll
and
push
std
dec
mov
sbb
loopne
fldpi
out
adc
xchg
push
lcall
and
lods
xchg
pop
dec
lods
fwait
stos
cmp
fdiv
arpl
bnd
pop
xor
mov
fwait
and
dec
jae
inc
cmp
xor
add
and
xor
sub
jmp
fbld
mov
jnp
jns
int
cmc
sub
xchg
mov
add
fdivrs
mov
sbb
lea
mov
mov
jecxz
pop
call
adc
mov
call
daa
jle
dec
fadds
in
push
sub
inc
cltd
xor
add
pop
cmp
fxch
lcall
xchg
jecxz
push
inc
jbe
aam
out
dec
popa
mov
and
jl
int3
enter
xchg
dec
sub
adc
add
pop
push
inc
cmp
rclb
bnd
mov
nop
orl
inc
repz
mov
pop
arpl
add
dec
icebp
iret
jg
cs
jno
loop
dec
sub
jnp
imul
inc
push
inc
and
and
or
call
mov
out
sahf
jno
in
leave
xchg
pop
add
pop
sub
out
mov
push
das
ja
repz
cmp
mov
in
lahf
and
in
push
sbb
cmp
cmp
and
test
scas
xchg
cmp
ss
xor
cmpb
cmp
sub
xlat
sub
push
dec
dec
mov
scas
lds
dec
adc
outsl
add
shlb
adc
inc
aad
jbe
in
inc
dec
sub
cmc
pop
xor
fidivrs
mov
pop
int3
and
rorb
or
enter
lods
mov
fcomps
les
inc
sub
mov
jnp
mov
and
sti
mov
int3
xchg
jnp
jp
jb
ds
push
inc
jle
pop
iret
es
mov
lds
jge
adc
repz
cli
push
repnz
dec
fnstenv
pop
addr16
test
ja
jmp
jp
lods
lds
imul
bound
lock
gs
jg
jge
ret
push
mov
pop
sbb
lods
stos
cli
enter
outsb
dec
je
adcl
jg
mov
and
pop
imul
repnz
mov
adc
in
sbb
pop
addl
aad
clc
test
out
popf
mov
cmc
push
or
pop
stos
mov
jmp
fxch
out
pusha
ret
icebp
ret
fistpll
fidivrl
or
mov
js
pop
sub
sub
out
inc
fsubl
dec
mov
xor
loopne
inc
punpcklbw
adc
mov
lds
sbb
hlt
dec
sbb
daa
dec
sbb
add
push
das
cli
mov
mov
insb
xor
fucom
adc
xchg
sbb
fidivrs
push
mov
fwait
cmpsl
call
fists
mov
push
cmpsl
xchg
mov
pop
call
jo
push
scas
sti
cwtl
ret
mov
add
sbb
mov
decb
add
sbb
in
hlt
and
gs
in
movsb
out
ljmp
or
aad
imul
and
fnstcw
adc
mov
popf
aam
jecxz
stos
pop
in
mov
call
fldcw
add
mov
push
pop
mov
dec
mov
aaa
mov
add
cmpsb
xchg
test
leave
jbe
and
shr
jno
sub
lret
or
mov
inc
lsl
mov
mov
lods
xor
pop
jmp
lods
dec
xor
xlat
sbb
in
cmpsb
stos
ret
ss
pop
in
enter
mov
cltd
jne
ret
fs
sbb
rcr
insb
insb
aaa
pop
loope
xchg
movl
fldln2
sub
iret
lds
fildll
jle
add
fidivl
xchg
pop
adc
push
stos
sbb
add
mov
movsb
dec
lods
popa
dec
xchg
mov
addr16
pop
cwtl
mov
push
stos
xor
and
xor
test
test
xchg
xchg
inc
inc
lahf
loop
in
inc
mov
sub
mov
push
shrl
xor
cwtl
push
in
bound
push
sub
push
test
sbb
clc
adc
push
push
cs
push
add
or
divb
sub
das
pushf
dec
xlat
add
mov
ret
jo
dec
cwtl
mov
ret
dec
adc
and
popf
push
pop
adc
add
xchg
inc
hlt
mov
aas
push
aam
imul
je
jmp
adc
mov
sbb
fmuls
push
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
stos
mov
xchg
push
movsl
stos
andnps
fists
push
lods
and
addr16
shrl
push
push
sub
adc
orb
adc
mov
ret
mov
xchg
mov
orb
popf
adc
mov
push
dec
lea
cmp
cmpsl
iret
leave
push
dec
jns
cmpsl
shl
std
mov
daa
xlat
inc
dec
or
clc
ss
inc
xchg
aam
mov
mov
xchg
and
dec
add
ljmp
movsb
lahf
fildl
xchg
push
mov
cmp
sub
xor
xchg
addr16
test
gs
mov
dec
mov
mov
mov
mov
cmpsl
cmp
xor
sbb
mov
add
xlat
stos
xor
call
aam
sbb
inc
xor
cli
cmp
and
aam
mov
sub
mov
sub
or
arpl
ret
inc
jno
mov
cltd
mov
lcall
mov
push
lret
dec
push
js
jno
or
xchg
jno
in
es
cmc
es
cli
inc
mov
add
icebp
loopne
aad
lcall
mov
adc
dec
test
xlat
adc
ds
mov
bswap
mov
mov
rorl
ss
jecxz
rol
imul
cmp
cmp
jae
mov
mov
mov
xor
cs
jmp
dec
xor
mov
mov
mov
mov
jle
cmp
jns
idiv
xor
ds
enter
je
cmp
cld
mov
or
lcall
popa
dec
movsl
fadds
daa
fldenv
adc
lahf
add
sub
test
mov
add
mov
inc
popf
ficomps
sub
test
sbb
ljmp
adc
jb
sbb
sbb
pop
out
mov
push
js
inc
enter
cmpsb
xlat
arpl
mov
es
mov
cwtl
push
jge
xor
neg
repz
lret
inc
lcall
mov
xchg
clc
rcrb
inc
mov
into
cltd
jge
and
push
rol
pop
or
or
jno
pop
pop
outsb
sub
push
daa
or
sub
and
jl
add
adc
push
cmp
or
push
push
xchg
sub
jg
rcll
insl
lods
imul
jmp
jg
xor
sub
add
cmp
pop
test
aam
icebp
std
push
mov
int3
loopne
pop
dec
xchg
pop
ljmp
sbb
sahf
loop
bound
int
xchg
movsl
inc
xchg
jb
outsb
std
jmp
int
jne
mov
pop
mov
not
cmp
pop
in
popf
sbb
js
pop
mov
das
xchg
mov
adc
int
js
dec
sar
int
xor
xor
mov
add
mov
push
std
lea
adc
imul
mov
jo
sbb
jmp
out
fldt
xchg
enter
mov
mov
roll
cs
test
mov
push
lods
mov
stos
sub
cmp
test
or
pop
cmp
push
iret
push
add
hlt
mov
repz
movsl
mov
int3
arpl
cltd
pop
test
int3
fidivs
cmp
jne
fdivrs
std
imul
and
inc
pop
pop
test
jg
std
or
movsl
or
ljmp
aas
mov
je
pushl
test
repnz
jmp
movsb
pop
jp
ljmp
inc
das
into
imul
mov
mov
loope
aad
xlat
ret
mov
inc
add
sub
js
and
cmp
xor
ret
dec
cmp
or
popf
adc
xchg
push
insl
mov
lcall
cli
cld
xchg
mov
cmp
out
xchg
cmp
push
popf
dec
imul
js
sbb
cmp
mov
das
test
addl
gs
adc
sbbl
dec
push
add
fdivrl
es
adc
cmpsb
mov
push
call
fsubr
ret
and
pop
dec
pop
mov
gs
outsb
leave
aad
shl
sub
lods
ja
icebp
push
inc
test
add
mov
daa
or
insb
popa
cmovnp
mov
aaa
pop
pop
mov
sbb
out
out
mov
test
outsl
daa
jae
mov
dec
jge
sarb
pop
orl
jmp
aas
xchg
test
call
dec
add
leave
loope
leave
popf
xchg
lahf
adc
test
out
cld
das
cmp
jno
cs
testb
test
insl
or
add
lods
rorb
xchg
addl
out
adc
inc
fcomi
gs
sbb
lock
xor
pusha
push
in
icebp
and
inc
fprem1
push
vphaddbd
push
inc
insb
cwtl
sbb
adc
fwait
bound
mov
nop
mov
dec
lret
shlb
jne
pop
icebp
and
mov
outsb
sbb
arpl
xchg
lods
mov
adc
dec
icebp
jne
lcall
je
cli
repz
sarl
iret
mov
mov
dec
leave
lahf
push
inc
hlt
xchg
xor
sub
and
pop
xchg
mov
mov
add
fsubp
icebp
push
push
ja
fdivl
aam
std
dec
xchg
sbb
mov
mov
mov
pushf
test
mov
jnp
push
mov
adc
jp
popa
add
out
add
lock
lods
pop
cltd
xor
shll
adc
adc
jle
mov
aas
lea
mov
jnp
arpl
mov
sbb
pop
and
mov
or
jb
pop
iret
xchg
pop
xlat
mov
mov
shrl
jp
sbb
mov
xchg
and
lock
xchg
pop
pop
in
fidivrl
and
jp
lods
inc
decb
aam
push
cmc
es
lahf
pop
in
inc
pop
jb
jb
sbb
movsb
adc
cmpsb
cmp
stc
roll
pop
cmp
cmpb
mov
xchg
in
aam
pop
shll
jo
pop
or
dec
inc
mov
jno
jbe
push
test
aam
xchg
sub
ret
mov
loopne
sub
insb
scas
push
mov
mov
cmp
sub
pushf
in
inc
cmp
cmp
std
popa
js
movsb
jecxz
mov
pushf
or
das
mov
and
sbb
push
rorb
cli
add
pop
xchg
jbe
popf
dec
sub
or
inc
call
jnp
pusha
shrl
pop
sbb
inc
arpl
mov
loopne
cwtl
mov
fsubl
jle
out
fs
add
mov
hlt
sub
xchg
xchg
add
in
in
mov
inc
xchg
imull
cltd
or
lahf
push
lods
outsb
dec
arpl
adc
cmp
mov
and
inc
jo
sbb
dec
sbb
dec
das
std
in
loopne
clc
iret
jae
enter
stc
rcll
mov
adc
mov
dec
xchg
out
movsl
adc
int3
xor
xor
cs
pushf
sub
repnz
xor
mov
jne
cwtl
sub
push
repz
mov
adc
jb
or
nop
pop
dec
jnp
int3
lock
xor
adc
fcmovbe
js
cltd
cmp
add
lahf
out
jecxz
fmull
pop
popl
push
and
xlat
inc
cltd
cwtl
mov
ja
movsl
mov
cmp
xor
imul
mov
pop
adc
jnp
jmp
lret
and
inc
cmpb
mov
push
xchg
or
lods
aaa
loopne
in
scas
insl
or
lahf
lds
rorb
xchg
lea
lea
dec
xor
or
mov
stos
or
add
xor
js
or
pushl
cmp
xchg
int
mov
jecxz
mov
push
cwtl
aam
pop
adc
ljmp
sti
jge
jns
jmp
mov
or
movsb
mov
shrl
sbb
and
fwait
pop
mov
jo
mov
adc
sbb
jnp
mul
xchg
xchg
jo
sbb
add
mov
dec
bound
cwtl
jmp
into
and
and
sbb
xchg
sahf
xor
xchg
sub
push
push
add
fsubrl
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
mov
je
popa
sbb
add
sub
sbb
sbb
movsl
test
test
mov
xchg
pop
outsl
adc
or
cmp
mov
pushf
mov
push
mov
mov
in
push
inc
shlb
fldenv
sbb
movsl
sarl
xchg
pop
mov
pop
pop
std
cmp
or
add
loopne
out
rorl
divb
scas
test
in
push
xor
jp
jge
xchg
adc
cmp
adc
aad
lods
outsl
popa
out
push
sbb
ds
lock
mov
xchg
addr16
rorb
cmp
arpl
das
sahf
fisubrl
and
xlat
pop
sbb
sar
xor
or
mov
fcmovnb
jp
movsl
adc
shrl
mov
in
mov
mov
data16
sub
pushf
popa
and
mov
mov
movsb
lret
scas
mov
xchg
ljmp
aam
inc
xchg
mov
xor
mov
mov
add
xor
adc
popl
cmpsb
dec
jbe
mov
add
or
mov
cs
repnz
loopne
dec
push
daa
xchg
outsb
mov
pop
inc
jg
stos
jb
fbstp
int3
fsubrs
jae
into
sbb
jecxz
mov
dec
add
lahf
cmp
sub
notb
ret
adc
add
xchg
cmp
pop
mov
mov
into
stos
fnstcw
jecxz
sahf
mov
dec
jb
and
cmpsb
shr
hlt
loope
call
aaa
loope
ret
and
jge
aad
aaa
push
cmp
mov
lcall
dec
or
jnp
mov
mov
scas
mov
push
std
mov
cmp
pop
jge
sarb
push
clc
dec
mov
xor
cmp
call
mov
cmp
cmp
push
or
out
outsl
and
mov
lods
lret
and
mov
push
lock
xchg
test
icebp
sub
or
scas
mov
pop
hlt
iret
sti
stc
jmp
adc
sbb
sub
test
mov
sahf
aad
stc
pop
mov
pop
jg
sbb
dec
ret
adc
cmpb
fsubs
popa
pop
imul
mov
xchg
cmpsl
leave
and
jne
rcrl
push
sub
into
push
fs
sbb
mov
cmp
sbb
xorb
addr16
add
push
sbb
or
mov
test
inc
jbe
pop
adc
mov
and
adc
stos
not
jnp
cmc
repnz
das
xor
addr16
in
rol
push
sbb
sbb
inc
and
pushf
push
lock
jb
cmp
mov
aad
outsb
mov
shr
add
daa
sbb
in
and
jns
cltd
inc
in
movsb
push
cld
push
mov
fnstcw
push
mov
sahf
aas
sbb
adc
ret
push
jecxz
stc
leave
sub
lcall
int3
call
rcrb
push
inc
jle
insb
jo
outsl
fsubl
pop
mov
add
xor
jo
cmp
mov
loopne
or
fdiv
mov
xchg
bound
leave
cmpsb
mov
mov
dec
push
sbb
inc
jp
sti
ret
icebp
aaa
rcrb
push
dec
inc
pop
cmpsb
ret
jmp
push
popa
push
cld
ret
push
cmp
in
lods
stos
test
or
dec
mov
cmpb
and
push
inc
in
dec
sbb
je
mov
jnp
mov
adc
mov
movsl
daa
push
mov
test
sub
in
xor
cmp
mov
sbb
and
or
aaa
repnz
dec
and
sbb
push
popa
mov
lret
lock
xchg
dec
mov
sti
scas
ret
sbb
insb
cltd
inc
fs
in
mov
sbb
dec
out
pop
std
aas
es
push
jnp
inc
mov
test
fsubl
lock
mov
mov
cmp
lret
jmp
cli
lcall
cmc
mov
sub
je
cli
adc
and
icebp
adc
sub
insb
xor
push
lret
or
cmc
arpl
push
push
test
fcomip
shrl
icebp
xchg
sub
or
xchg
aas
in
outsb
cmpsl
icebp
add
jl
test
leave
sub
cmp
sti
aas
loopne
popa
stos
add
dec
into
or
xor
or
fsubrs
lret
jbe
ljmp
xor
add
movsb
int3
dec
mov
jecxz
and
aas
jecxz
subb
test
cvttps2pi
call
adc
fidivs
push
adc
add
test
fldl
sub
and
rclb
jmp
inc
or
add
div
jp
mov
data16
adc
push
sub
push
dec
cmp
add
pop
jle
loope
lods
mov
jns
pop
fidivrs
mov
dec
mov
daa
cs
loop
loope
fwait
aaa
icebp
dec
arpl
or
sub
std
push
out
xbegin
leave
outsb
jl
sub
outsb
pop
cmp
les
mov
lea
xor
call
in
add
mov
mov
je
imul
scas
jl
clc
jl
add
es
sbb
rcl
push
xor
adc
mov
sub
clc
adc
jmp
dec
xor
cmc
aad
aas
pop
repz
rol
into
jge
mov
push
lret
ffree
xor
pushf
imul
push
fwait
inc
out
inc
sbb
mov
xchg
rorb
popa
repz
add
daa
mov
into
daa
loopne
shrl
xchg
fcomp
aam
gs
xorl
mov
sbb
inc
shrb
rcl
sub
cs
adc
rep
fmulp
fdivrp
aam
sbb
imul
cmpl
lds
andb
cmp
cs
mov
push
inc
jg
jno
cmpsl
mov
or
enter
std
scas
les
jns
in
jp
push
xor
push
and
dec
xor
ret
mov
arpl
mov
test
xchg
test
mov
hlt
sub
xchg
pushf
push
pop
push
mov
push
or
scas
aad
test
sub
sbb
out
loopne
mov
lret
and
aad
aas
adc
sti
mov
sub
loope
scas
push
sbb
cmpsb
mov
adc
xlat
in
pop
push
movsb
mov
mov
fisubl
sahf
movsl
cmp
jnp
fiaddl
or
mov
das
and
jae
out
addr16
pop
mov
lahf
fstps
adc
loop
jb
sbb
ficoms
mov
mov
ljmp
in
xor
jl
lock
mov
enter
push
or
inc
insb
mov
lock
mov
mov
insb
cwtl
push
sbb
push
mov
inc
sbb
fucomip
mov
xchg
loope
xor
jb
frstor
cli
imul
lret
mov
icebp
std
jecxz
icebp
and
push
xor
movsb
jns
mov
pop
push
add
lods
fwait
mov
dec
pop
inc
loopne
and
sub
enter
or
lret
cmc
ret
mov
lds
mov
fisttps
pop
xor
jl
dec
loope
xor
ficoms
andl
xor
pop
loopne
sbb
push
sub
imull
repnz
call
sbb
mov
mov
repz
popa
rcr
pop
les
in
dec
or
loopne
add
xchg
add
cltd
pop
mov
pop
negl
push
adc
rorb
xchg
xchg
adc
xchg
fildll
add
dec
out
push
mov
out
popa
dec
add
xor
xor
div
shll
xchg
mov
cmc
aad
inc
ljmp
inc
sahf
loope
mov
dec
adcl
adcb
ss
orl
lods
jno
mov
lds
popf
mov
in
ljmp
adc
into
or
cwtl
addr16
xchg
xchg
mov
inc
adc
fcoms
loopne
sub
mov
jae
sub
inc
je
cmpsb
adc
ljmp
cltd
aaa
and
mov
cmpsl
ret
sbb
jmp
adc
jnp
adc
test
mov
adc
cmp
cwtl
clc
xchg
mov
cmp
cmp
out
and
int
inc
insb
jbe
es
adc
inc
addl
movsl
shrb
movsb
into
imulb
jecxz
loopne
fwait
stos
mov
out
push
mov
rcl
xchg
enter
sub
and
adc
xor
xor
das
xchg
js
std
je
mov
imul
sbb
dec
mov
fs
lea
ret
xor
cmc
mov
cs
jecxz
out
ss
or
add
xchg
push
dec
cmp
subl
push
mov
cmp
insl
cmp
mov
cli
sub
icebp
and
into
xor
or
or
addr16
test
call
ja
out
cltd
rcll
lods
xchg
push
pop
icebp
xchg
pop
lret
ror
movsb
ja
movsb
addr16
jecxz
hlt
shlb
push
mov
movsl
mov
inc
je
into
stc
in
xor
jb
jbe
in
test
lahf
dec
mov
or
mov
movsl
aam
mov
aam
mov
adc
cmpsl
sub
jecxz
sub
inc
xchg
adc
xchg
push
and
or
adc
les
jno
and
inc
pushf
xor
pop
pusha
jl
enter
out
and
sbb
push
jecxz
mov
inc
shlb
adc
hlt
xor
inc
scas
lcall
mov
test
lcall
insb
jns
jb
jl
and
dec
cli
xchg
and
push
mov
int
in
and
xor
sub
mov
cld
add
inc
mov
je
mov
test
xchg
fcoml
shr
push
clc
lds
cmp
mov
sub
paddq
clc
nop
cmpsb
mov
cwtl
rclb
lods
and
in
sub
jae
jmp
enter
js
cmp
aas
test
mov
push
addb
je
mov
insb
stos
jo
aam
popf
mov
lds
pop
out
shl
dec
sbb
in
lcall
jbe
inc
xchg
or
jle
sub
jbe
fsubr
jb
cmp
mov
xor
push
das
jp
fnstsw
fsubr
jb
cmp
mov
xor
push
das
jp
fnstsw
fsubr
jb
cmp
mov
xor
push
das
jp
fnstsw
fsubr
jb
cmp
mov
xor
push
das
jp
fnstsw
fsubr
jb
cmp
mov
xor
push
das
jp
fnstsw
fsubr
jb
cmp
mov
xor
push
das
jp
fnstsw
fsubr
jb
cmp
mov
xor
push
das
jp
fnstsw
fsubr
jb
cmp
mov
xor
push
pusha
xor
lods
sbb
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
push
xor
movntps
cmpsl
ss
cld
lods
cmpsl
dec
leave
inc
ja
push
add
fsubrl
mov
fistpll
push
mov
in
dec
outsb
pusha
fistps
gs
cmp
loop
orl
cltd
popa
leave
bound
aam
push
inc
or
cmc
jge
jo
lods
and
clc
sbb
stos
mov
out
push
lea
mov
addl
mulb
in
lret
and
cmp
mov
sub
sbb
sub
push
notl
jle
jle
push
mov
jbe
pop
out
int
std
jbe
out
jle
leave
push
pop
jne
xor
mov
xlat
outsb
lcall
sub
add
mov
ds
test
jne
push
mov
adc
ja
mov
mov
xor
pop
stos
test
ret
loopne
mov
xchg
ret
cli
push
add
xor
xchg
mov
call
jns
lcall
jl
mov
gs
pushf
mov
lret
aad
jge
cmp
ret
sub
inc
sti
lret
xchg
mov
mov
cmp
sub
mov
push
ja
sub
mov
push
ja
sub
mov
push
ja
sub
mov
push
ja
sub
mov
push
ja
sub
mov
push
ja
sub
mov
push
ja
sub
mov
push
ja
sub
mov
push
ja
adc
sti
fadds
out
nop
fisubrs
loope
adc
xchg
sub
imul
xchg
rorb
push
jns
jo
add
lret
mov
cmp
sbb
jne
ljmp
fnstenv
hlt
shll
mov
or
inc
xchg
push
mov
clc
push
fnstsw
push
xchg
daa
jg
pop
mov
mov
cmp
sub
adc
or
cmpsl
dec
xor
fwait
pop
sub
decl
inc
ret
sbb
push
sbb
sahf
dec
push
jmp
cmpsl
loope
repnz
dec
pop
adc
mov
sub
dec
xor
sbb
add
sub
arpl
sub
in
aad
and
das
push
sahf
sbb
ds
dec
xlat
pop
and
in
push
mov
add
inc
ret
jecxz
mov
mov
movntq
addr16
dec
call
pop
jbe
cwtl
jnp
push
and
es
mov
inc
sbb
mov
dec
out
sbb
loope
sbb
mov
sub
xchg
xchg
fsubp
or
and
pop
sbb
ljmp
and
inc
add
loop
jb
pop
and
clc
push
cwtl
mov
sub
xchg
jae
lock
aam
and
cmpsb
insb
add
clc
push
jg
and
inc
pop
cwtl
mov
or
pop
fnstcw
ljmp
xor
jae
and
arpl
mov
ret
jecxz
seto
dec
lcall
jmp
ljmp
out
in
movsb
inc
orb
stos
and
test
xor
xchg
add
xor
xor
add
dec
movsl
daa
add
stc
and
js
movsb
sbb
aam
popf
inc
push
pop
stc
inc
dec
sub
mov
dec
xchg
rorl
xor
xchg
in
push
scas
cli
test
ret
dec
xor
scas
mov
inc
mov
idiv
repz
jne
inc
dec
mov
das
sbb
adc
jne
imul
push
js
stos
jmp
lock
and
fwait
xlat
jo
dec
cmp
icebp
faddl
push
fdivs
movsl
ret
push
hlt
dec
sub
xchg
push
mov
test
dec
call
jge
insb
lret
cmpsl
xchg
mov
push
jb
add
adc
adc
ret
dec
movsb
out
scas
dec
mov
neg
sub
mov
in
xchg
out
sbb
sbb
xchg
orl
inc
pop
mov
movsb
movl
adc
xchg
cmp
int3
xchg
fcmove
inc
pop
push
fisttpl
scas
not
or
and
xchg
push
push
inc
xlat
mov
dec
mov
mov
addr16
xchg
mov
test
cmp
sti
aas
lock
sbb
cwtl
addl
and
xchg
add
pop
test
add
movsl
jo
sub
mov
inc
daa
push
fstpt
and
xlat
mov
sarl
pop
fcmovne
inc
stos
int3
lods
lods
js
mov
and
psrld
adcb
and
add
mov
jns
stc
mov
scas
shlb
xchg
xchg
mov
sub
cmp
push
jns
xchg
mov
fxch
jle
dec
dec
testb
pop
jge
and
push
pushf
or
mov
repnz
cmp
rolb
fiadds
fldenv
jbe
adc
xor
dec
into
jmp
sub
dec
mov
dec
pop
bound
cmpsb
les
cmp
mov
xor
inc
pop
test
add
cmp
or
sub
mov
dec
add
pop
lcall
or
jl
out
inc
and
push
xor
outsl
pop
or
xor
sahf
mov
imul
lds
test
or
ja
cld
js
outsb
adc
jb
mov
mov
mov
aam
add
add
jmp
repnz
jnp
fisttps
pop
mov
les
inc
jle
scas
mov
pop
addr16
enter
fsubl
lods
lods
jno
cmp
mov
or
jbe
adc
adc
out
push
pop
xlat
dec
cmpsl
out
addr16
add
sub
decb
and
or
jmp
and
sub
jmp
xchg
xchg
cmc
xchg
add
sbb
subl
jl,pn
and
fsubrl
dec
popa
test
or
fwait
add
out
sbb
divb
divl
cld
insl
inc
and
xor
es
add
jecxz
sub
cmp
sbb
xor
pusha
pop
sbb
in
movsl
pop
mov
pop
mov
pop
imul
fsts
xor
or
pop
shrb
mov
push
push
lds
xchg
and
popa
push
push
int3
adc
jp
outsb
dec
cmpsb
shll
std
nop
dec
push
sub
negl
inc
rclb
jno
add
cmp
sbb
fsubrs
push
sahf
pushf
mov
jb
mov
rcr
xchg
or
rcll
mov
jae
mov
fiadds
adc
rcr
dec
sti
sbb
ljmp
inc
ja
mov
or
int
mov
rcrl
addr16
test
jge
ja
loopne
loope
or
dec
aas
popa
xorb
pop
pop
pop
push
lock
arpl
mov
mov
mov
cli
bound
out
loope
iret
out
sbb
jbe
xchg
adc
mov
std
cmp
sub
outsb
add
jno
mov
sub
mov
fildl
cmp
dec
pop
scas
pushf
jmp
pop
iret
int
pushf
dec
add
add
js
xor
nop
in
cmp
and
sub
daa
rcl
lods
repnz
aaa
fsubrs
and
test
inc
mov
sub
js
mov
or
fnstcw
ss
insb
sbb
add
and
int3
push
sbb
lock
pop
mov
pop
imul
fnstcw
daa
imul
movsl
cmp
push
jno
into
insl
jns
mov
jo
xor
lret
js
add
ss
xorb
addr16
sub
sub
or
stc
push
sbb
clc
pop
pop
notl
lea
mov
jmp
leave
mov
sub
je
loop
sbb
inc
lcall
jle
clc
mov
and
test
movsl
push
jbe
call
or
and
iret
in
int
dec
idiv
mov
aas
and
cwtl
cmp
mov
xchg
gs
fnstcw
xchg
sub
lahf
mov
mov
dec
fsubrl
out
sub
sahf
dec
repnz
sahf
scas
or
lcall
and
adc
sub
xchg
lods
xor
or
lahf
sub
out
mov
ret
into
lock
jnp
adc
mov
xchg
jecxz
sub
xchg
sub
pusha
add
adc
pop
cli
dec
out
lock
out
mov
out
or
xchg
je
or
inc
addb
inc
mov
cmp
ret
xor
mov
les
aad
rorl
inc
xor
adc
mov
int3
fwait
movsb
jge
mov
and
jo
lea
jg
mov
push
push
mov
aad
push
out
or
scas
dec
in
gs
xor
cld
xchg
jmp
mov
aaa
pusha
pop
inc
cltd
push
nop
sbb
es
andl
loopne
ja
and
jo
xlat
iret
push
outsl
add
lds
jecxz
or
stos
cmp
mov
shl
inc
mov
les
sbb
addb
push
cld
dec
push
sbb
in
js
adc
loope
mov
daa
pop
dec
push
insb
xlat
fildl
inc
xchg
push
xor
mov
and
and
jne
jb
cs
cmc
fstpt
aam
pop
cmpsl
rcrb
fs
mov
shr
xchg
dec
popf
jge
push
andb
fadds
push
js
testl
adc
xor
push
testb
and
xchg
add
push
or
ret
ret
push
fcompl
test
jno
pop
dec
xor
inc
jl
addr16
and
stc
and
push
xchg
out
shlb
lahf
repz
inc
xlat
sbb
fsubrl
out
cmp
fs
add
mov
clc
sbb
mov
int3
adc
xor
lods
cld
gs
shlb
bound
pop
fldt
adc
pop
loopne
inc
lcall
xor
notl
adc
cs
loope
jns
jge
loope
shl
cld
fidivl
mov
mov
scas
cld
ja
fldl
jae
js
mov
push
cmp
inc
pop
hlt
jo
lods
out
xchg
push
cs
adc
sub
leave
fnstenv
add
pop
das
shrb
mov
outsl
lods
push
pop
inc
imul
pop
xor
inc
hlt
cmp
adc
and
in
fdivrl
mov
rclb
xchg
fdivrp
pop
cwtl
mov
daa
out
out
push
cmc
inc
out
out
or
lahf
push
xchg
push
cmp
sbb
fnstsw
shl
sahf
gs
sahf
mov
inc
int
mov
ljmp
dec
loope
lods
sbb
stc
add
sub
fnstsw
jo
sub
mov
mov
adcb
pusha
mov
lret
mov
jle
xchg
add
sub
rcl
add
jnp
scas
cmp
ret
add
mov
mov
sbb
push
dec
insb
or
aaa
subl
xor
mov
xchg
subl
mov
mov
sbb
xorb
mov
pop
add
push
cmp
push
mov
mov
dec
and
int
data16
icebp
pop
cli
xchg
dec
pop
arpl
pop
xchg
cmp
mov
in
jmp
cmpsl
lock
mov
cli
inc
or
cmp
rorl
add
fidivrl
rclb
mov
loopne
popf
mov
mov
dec
cltd
ja
cmp
cltd
mov
mov
sub
lods
mov
insb
pop
lods
ficomps
push
pop
lcall
dec
js
push
xor
bound
test
dec
in
pop
push
jp
mov
or
in
jae
test
scas
cmc
pop
rol
mov
ss
sbb
push
lret
stos
fwait
aaa
cmp
testb
jge
pushf
or
cli
lcall
push
lcallw
sbb
xor
adc
leave
dec
adc
or
ja
imul
pop
mov
sub
jnp
adc
and
stos
pop
sbb
jns
add
rorl
je
std
mov
jne
scas
hlt
push
add
flds
cmp
cmp
out
into
fcmovbe
std
daa
mov
mov
xchg
sbb
cmp
xor
push
jo
sub
fimuls
xchg
dec
stos
clc
adc
jmp
aas
ret
jl
fdiv
pop
mov
mov
xor
jb
test
jge
rclb
mov
push
mov
mov
aam
cmp
out
jae
shlb
inc
or
sarb
mov
sub
dec
jae
xor
add
dec
push
sbb
mov
cmp
cmp
std
call
aas
jbe
sbb
xchg
repnz
or
dec
xchg
stos
and
xchg
into
outsl
xchg
aaa
cmpsb
mov
data16
mov
and
jns
fimull
adc
mov
mov
cltd
cli
gs
fmuls
and
sbb
addr16
cmp
inc
lret
fildll
or
leave
mov
outsl
repnz
loop
stos
mov
fwait
sbb
inc
mov
push
loope
addl
fwait
sub
fdiv
sub
mov
out
cltd
push
pop
fcomip
mov
aad
or
lods
add
mov
dec
imul
xor
ret
pop
leave
mov
movsl
sub
inc
movsl
mov
ds
mov
mov
lods
xor
push
xor
ret
mov
mov
inc
cli
int
and
adcb
push
add
pop
xor
incl
out
pop
shlb
pop
sbb
test
and
ret
mov
cmp
insl
adc
sbb
shl
and
jp
cltd
pop
jl
enter
imul
bound
leave
fidivs
das
cmp
inc
push
inc
mov
iret
sub
add
jmp
add
and
jmp
add
nop
add
add
jmp
add
imul
pushl
rcll
push
push
call
mov
movzbl
push
pushl
pushl
call
add
cmp
jb
mov
pushl
pushl
call
nop
pushl
pushl
xor
pushl
pushl
call
xor
call
add
cmp
jb
call
call
leave
popa
ret
add
add
add
mov
inc
add
loope
mov
or
sbb
cmc
cmp
shlb
jecxz
sbb
xchg
stc
popf
lock
or
sbb
movsl
adc
sbb
sub
jmp
cltd
into
imul
jecxz
sub
cmp
stos
cmp
hlt
aad
jecxz
xchg
imul
lahf
fistpl
dec
xchg
cltd
movsb
repz
dec
hlt
mov
jecxz
lahf
fistpl
lahf
repnz
ljmp
sbb
sub
jecxz
xchg
lods
pop
adc
pop
mov
add
mov
push
pop
std
adc
and
out
mov
icebp
mov
roll
je
in
mov
test
push
add
push
xor
sub
push
xchg
mov
push
notb
push
push
stos
mov
pusha
push
xor
adc
mov
xchg
out
test
into
pop
and
jae
adc
pushf
lds
mov
mov
lock
add
jp
movntps
mov
fwait
lret
lock
push
mov
hlt
movsb
sub
hlt
addl
mov
out
cli
js
jo
cli
lock
sbb
data16
push
push
fistl
push
pop
dec
adc
xor
xchg
aas
sti
dec
pop
mov
bound
mov
nop
dec
dec
mov
inc
mov
andl
pop
pusha
rorl
iret
loop
jns
sub
inc
jne
xchg
inc
mov
les
or
mov
or
mov
mov
xor
lcall
adc
loopne
ror
sub
xacquire
je
add
inc
into
lcall
xor
push
inc
js
cmp
dec
test
cli
add
mov
hlt
sub
stos
sbb
mov
es
add
test
addb
xchg
fisttpl
and
fisubl
and
aad
movsb
or
xchg
rcrb
lods
popf
test
loope
pop
pop
daa
jae
clc
xchg
push
cli
xchg
fldcw
mov
jb
push
push
and
mov
pop
mov
cmc
mov
or
addb
or
stc
movsl
clc
pop
insl
cmp
pop
pop
mov
and
pop
punpckldq
inc
shlb
les
cmpsb
add
call
and
adc
mull
mov
cmovo
mov
ss
movsb
xor
bound
jg
jne
inc
mov
pop
dec
cmpsl
mov
out
or
enter
rorb
sqrtps
mov
sbb
add
add
jo
xor
add
add
in
mov
mov
movzbl
xor
mov
inc
dec
test
jne
popa
leave
ret
add
add
add
add
inc
addr16
jns
cmp
mov
mov
in
rol
repz
fisubrl
jge
jae
inc
ficoml
sbb
cmc
xchg
shrl
loop
lea
out
xchg
lret
stos
insb
xchg
cmp
mov
and
mov
fwait
repz
mov
in
mov
negl
js
and
sbb
add
cmc
xlat
xor
xchg
sbb
jp
push
or
sbb
mov
cmp
push
pop
aas
mov
aaa
dec
sub
xchg
mov
mov
out
xchg
lds
xor
xchg
js
in
addr16
sbb
mov
imul
fsub
imul
or
pop
nop
pop
fcompl
repz
ljmp
mov
fdivrs
sub
nop
dec
nop
pushf
mov
cltd
mov
add
jb
cmp
sti
or
mov
pop
and
sbb
loopne
cmc
mov
dec
imul
mov
mov
cmp
cmc
pop
push
sarb
andb
lcall
shlb
pop
sbb
lret
pusha
aas
push
xchg
addr16
push
icebp
push
mov
ja
jae
es
xchg
and
push
jnp
or
clc
es
cltd
imul
in
mov
ja
jae
es
cltd
arpl
xchg
mov
jae
ja
repnz
ja
jae
es
cltd
jnp
xchg
mov
jae
ja
repnz
ja
jae
es
xchg
mov
jae
ja
sub
mov
jae
rclb
push
jp
mov
adc
mov
push
mov
lods
and
fcom
dec
aaa
sbb
xchg
mov
push
adc
sbb
into
int3
mov
addl
imul
pop
dec
adc
enter
addr16
add
aaa
movntq
je
sub
sbb
lcall
push
adc
lret
cmp
movsb
andl
fidivrs
inc
add
in
push
jno
mov
aad
xor
ficomps
inc
mov
cmp
scas
shlb
bound
icebp
call
or
stc
inc
ret
mov
pop
adc
out
jnp
popf
or
or
pop
mov
rcl
hlt
mov
mov
sahf
inc
pop
ret
ljmp
std
fisubs
add
movsb
cmpsl
cmp
mov
push
and
lcall
in
ljmp
in
mov
lock
add
inc
sbb
test
dec
adc
add
rclb
in
std
add
jae
pop
xchg
mov
push
xchg
adc
mov
lea
icebp
stos
popl
cmp
es
or
pop
int
mov
xchg
repz
stos
js
sti
sub
fildll
and
jge
sub
and
dec
rcrb
push
mov
mov
sbb
jnp
jmp
push
popa
sub
gs
enterw
and
and
rcrb
out
xchg
push
repz
arpl
arpl
sub
fneni(8087
lcall
push
pushf
cmc
enter
mov
cmpsb
es
xchg
xchg
rorb
mov
sub
test
ljmp
xchg
push
cmpl
scas
pop
xchg
inc
cmp
mov
or
adc
arpl
push
xor
dec
inc
push
ds
mov
inc
sarb
xor
test
xor
dec
xchg
mov
sbb
and
adc
push
loop
dec
jno
lcall
dec
push
hlt
inc
adc
gs
idivl
test
and
repz
adcb
loopne
xor
mov
pop
mov
inc
test
dec
int
ret
adc
cmp
inc
lahf
nop
xlat
stos
pop
addr16
xchg
pop
and
jmp
jne
lods
xor
movsb
scas
or
or
cmpsb
enter
lock
sub
bound
in
mov
out
pop
iret
popf
or
mov
push
aaa
pop
sub
mul
jl
jge
lock
inc
lea
mov
adc
cld
sub
xlat
dec
stos
inc
mov
mov
loope
in
dec
mov
pop
add
iret
and
sub
pop
cmpsb
sbb
es
add
mov
xchg
movsl
sbb
push
loopne
xlat
stos
push
gs
mov
fisttpl
push
iret
enter
ja
jns
cmp
insb
push
icebp
jbe
notl
push
jne
mov
xchg
jno
push
popl
push
test
xlat
sarb
sbb
dec
fsubr
and
push
notb
adc
and
ljmp
push
jbe
cmp
mov
sahf
repnz
pusha
push
je
cli
je
pop
mov
faddl
xor
fsubs
imul
test
pop
aas
pop
std
ficomps
sub
jns
data16
sub
xchg
ljmp
fdivp
repnz
inc
push
cmp
xor
jb
inc
add
arpl
cmpsl
lods
add
test
xchg
mov
std
inc
or
fdivrp
pop
dec
push
push
or
sbb
imul
rcrl
out
fs
or
and
cmp
pusha
push
shlb
fisubl
add
xchg
sub
ss
adc
xlat
cmp
orl
push
dec
ja
ljmp
imul
sahf
popf
in
test
js
lret
ret
cmp
add
sbb
cld
jl
push
test
push
stc
mov
cmp
jns
lss
stos
adc
mov
outsl
sub
mov
sbb
cli
mov
add
jg
jl
adc
stos
in
aam
ret
daa
sbb
xchg
push
in
bound
das
popf
mov
and
imul
sahf
mov
scas
push
dec
mov
mov
repz
push
sub
stos
adc
add
icebp
cwtl
jns
clc
xchg
insb
rclb
cmp
outsl
jne
lods
or
jne
notb
ja
mov
aam
fstpl
mov
popf
mov
or
jle
sbb
popf
lds
pop
push
stc
outsb
icebp
xchg
mov
pop
loop
mov
dec
int
fwait
cs
fcompl
addr16
push
cmp
insb
jge
xchg
mov
lods
push
or
adc
mov
gs
das
in
or
idiv
in
pop
scas
jg
iret
jp
inc
test
out
or
sbb
test
xorb
clc
dec
adc
add
and
ljmp
cmp
scas
mov
and
pushf
lods
test
mov
mov
test
push
lods
clc
sbb
es
and
out
pop
dec
mov
push
cli
setg
add
out
arpl
push
lea
and
xchg
bound
mov
cmovno
xchg
movl
fwait
outsb
push
xchg
add
adc
in
push
shrb
mov
jl
mov
fldpi
mov
dec
xchg
inc
push
icebp
js
gs
add
jg
mov
shll
jg
xchg
mov
in
cmp
icebp
lds
fwait
leave
push
and
inc
pushl
sub
mov
mov
sbb
push
mov
xchg
repz
sbb
std
ret
add
mov
pop
repz
ja
daa
inc
mov
popf
push
cld
lret
dec
dec
xor
cmp
xor
mov
or
pusha
movsb
lock
add
mov
popf
xchg
sbb
test
push
shlb
sbb
fldcw
ja
mov
sub
nop
pop
ja
rcrl
out
in
xchg
and
ds
push
jno
out
xor
push
xor
dec
leave
mov
dec
inc
cs
insb
mov
daa
jecxz
daa
pop
push
andl
popa
add
inc
test
stos
mov
jl
add
mov
out
jbe
out
mov
lods
sbb
loope
dec
and
cmp
aam
loop
pusha
mov
mov
out
push
pop
mov
ja
hlt
das
test
mov
and
aam
mov
sbb
ljmp
cwtl
out
gs
xchg
cwtl
je
mov
in
scas
das
xchg
lcall
jb
sbb
pop
sti
fildll
adc
sub
push
adc
cmpsb
stos
bnd
or
xchg
mov
nop
das
sub
sbb
pop
mov
mov
xor
cwtl
lock
je
andl
pop
int
out
and
ja
dec
outsl
popa
mov
jo
sbb
lock
add
mov
jae
das
lea
jno
cmpsl
jge
ds
icebp
sbb
adc
mov
cmp
cmp
js
pop
arpl
jmp
outsl
int
mov
or
popf
ss
sar
add
enter
dec
inc
sub
in
mov
push
fstpt
xchg
sbb
mov
loope
inc
xchg
mov
fsubl
mov
sub
cmpsl
cld
push
add
imul
std
push
push
or
push
cmc
and
movsl
push
sub
in
xor
jbe
les
or
add
imul
je
mov
sbb
daa
jle
inc
pop
jmp
mov
add
mov
cmp
addr16
in
adc
mov
dec
ret
add
add
pop
and
add
mov
or
mov
cmp
pop
sub
xchg
js
cmpsb
cmp
lret
pop
dec
fidivl
shlb
jb
xchg
and
int
mov
sbb
and
movsl
adc
out
inc
cmp
decb
mov
mov
iret
cmpl
shlb
je
sub
gs
leave
pop
aam
jmp
cmp
sbb
and
jecxz
jno
adc
add
adc
mov
je
cmpb
popf
aad
lods
out
mov
pop
push
fisubrs
fildl
roll
lret
adc
dec
pop
mov
mov
fwait
or
imul
jne
ret
pop
pop
lods
fwait
lea
inc
mov
imul
push
xor
ret
int3
add
cli
pusha
push
and
scas
addl
mov
xchg
test
mov
aad
pop
cmc
int3
loope
in
adc
scas
adc
in
mov
daa
xchg
ret
cmpsl
scas
std
cmp
cmp
inc
mov
dec
aam
loope
iret
cwtl
mov
mov
pop
jge
xchg
jae
out
dec
rcrl
ds
jne
fidivs
jns
jg
std
shll
push
pop
mov
xchg
pop
sbb
daa
ret
loope
jno
jae
xchg
mov
subl
pusha
jp
ljmp
mov
adc
mov
jbe
enter
xchg
mov
xor
jmp
stos
inc
mov
lock
push
xchg
rcrl
es
lahf
cmp
test
xor
sti
repz
dec
testb
sbb
out
mov
adc
pop
sub
pop
lods
popa
mov
pop
dec
or
shlb
sahf
xlat
push
cmp
xor
push
stc
jne
and
cwtl
das
outsb
js
fwait
arpl
sub
push
dec
mov
movsb
test
mov
test
in
shlb
push
out
sbb
out
xchg
xchg
or
int3
push
xchg
pop
dec
inc
inc
cwtl
xor
mov
inc
stos
rclb
scas
cmpsl
into
dec
ljmp
jo
jg
cli
xchg
movsl
jns
mov
inc
loop
ret
mov
shll
pop
lods
outsl
dec
push
mov
shrb
outsl
xlat
xor
sub
sahf
jecxz
fnstsw
add
jecxz
xor
jns
ret
insl
scas
fldl
add
outsb
fildll
mov
inc
push
jmp
push
push
and
in
pushf
jle
and
jge
rcr
in
frstor
push
pop
negl
cmpsl
sbb
and
test
or
dec
imul
dec
dec
cmp
jle
push
das
stos
pop
inc
push
and
push
xchg
pop
movsl
push
sub
cli
sbbl
or
or
fs
stos
mov
mov
jp
stos
pop
mov
jg
or
mov
dec
xchg
add
lret
adc
repz
jae
arpl
ret
leave
mov
or
dec
repz
ljmp
cltd
xchg
jmp
insl
push
mov
pop
jmp
ja
mov
xchg
jmp
xor
out
pop
idivl
push
in
mov
in
aas
shlb
or
rcrb
mov
xchg
and
jbe
jl
pop
xchg
and
cltd
inc
jg
cmp
leave
rclb
or
aas
test
pushf
icebp
mov
notl
in
sub
mov
cmc
fcmovb
pop
xor
push
push
add
push
jae
test
popa
mov
fsubs
or
insb
adc
repnz
mov
jmp
std
jp
pop
outsb
push
aam
daa
in
int
jnp
jge
subl
dec
xor
add
lods
shrb
add
xchg
adc
mov
mov
sub
mov
xchg
xor
in
ror
or
jns
loop
xor
outsb
insb
pusha
pop
mov
outsl
pop
cmpsl
dec
pop
test
loope
lcall
xor
mov
mov
stc
ss
xor
push
cwtl
xlat
in
ficoml
sbb
cmp
jmp
insl
fdivp
out
inc
fldcw
lret
mov
inc
dec
jbe
cltd
inc
inc
inc
repz
and
fdivs
loopne
lods
in
xchg
jp
add
pop
adc
loopne
pop
out
ss
mov
or
push
pop
test
loope
inc
repz
xchg
pop
std
insb
repz
cld
sti
setne
sbb
test
repnz
dec
mov
fstpt
or
clc
xor
icebp
mov
lea
pop
popf
movsb
xor
xchg
jmp
in
ja
int3
data16
mov
mov
xchg
mov
cmp
sbb
out
mov
and
fmull
int3
in
jb
out
aaa
adc
inc
sbb
push
jp
jecxz
popa
mov
jecxz
lret
mov
subl
and
cmp
sub
insl
roll
xorb
adc
rorl
stc
push
push
aas
xchg
lds
xchg
mov
int
and
cmp
insb
mov
xchg
mov
int
dec
mov
sub
pop
mov
in
icebp
loop
ja
sub
xchg
mov
cmp
aam
in
mov
lahf
dec
popf
xor
jp
dec
js
out
ror
cmp
es
adc
cmpsb
jle
lods
lock
pop
adc
add
xchg
jbe
pop
in
dec
pop
test
xchg
jbe
dec
sub
dec
test
fs
xor
push
out
notb
mov
cs
andb
shl
xor
insb
push
pop
mov
mov
adc
in
sbb
dec
jmp
pushf
das
add
inc
ljmp
sub
pop
int
pop
rorb
push
cli
xchg
xchg
pop
push
inc
pop
cmp
dec
movsl
cwtl
jg
aam
pop
fldenv
adc
and
sbb
in
popf
inc
jle
test
add
or
fs
push
stos
mov
sar
jns
shll
push
sbb
xor
ljmp
mov
sbb
hlt
ds
popf
xchg
ret
scas
loopne
loopne
xor
enter
test
dec
int3
push
cmp
cmpsl
addl
out
sub
jne
decl
mov
add
out
gs
leave
in
mov
mov
mov
cmp
or
das
popl
popa
into
or
xchg
int3
mov
hlt
leave
movsb
pop
lea
out
outsl
mov
add
jne
int
test
fwait
cltd
sub
out
mov
inc
sbb
jl
mov
mov
test
cmc
or
push
dec
pop
inc
insl
lcall
xchg
sub
ucomiss
and
rol
mov
ja
jecxz
popf
std
arpl
jae
push
sahf
stos
lret
jge
mov
dec
mov
sbb
push
push
inc
sbb
jb
in
cltd
iret
ds
roll
cmp
addr16
and
mov
pop
ret
mov
pop
in
and
inc
sub
cli
lcall
push
and
out
or
das
shrl
inc
les
imul
inc
sub
adc
je
inc
aas
mov
gs
cmp
xor
sub
loope
shl
aad
mov
cli
lret
popa
enter
daa
arpl
cli
mov
or
mov
cmp
lea
adc
adc
out
into
jecxz
gs
pop
xor
jg
notb
inc
gs
or
or
in
jmp
jmp
push
or
hlt
push
cmp
repnz
xor
lods
out
cmpxchg
mov
mov
sbb
fisubrl
push
shr
xor
int
xchg
aad
mov
jae
out
rcrb
inc
ljmp
adc
pop
inc
addb
add
sbb
mov
cltd
stc
fnstenv
and
adc
inc
mov
sarl
movsl
add
pop
lret
add
fucomi
jns
int
sbb
fcomps
fincstp
and
scas
es
xor
mov
stc
mov
xchg
or
mov
inc
into
cmpb
in
dec
fs
imul
mov
popf
mov
in
in
icebp
mov
pop
sar
mov
sti
out
movb
pop
push
and
add
cmpsb
jmp
daa
sbb
lahf
andl
mov
sbb
popf
jle
repz
out
sahf
sbb
fsubp
mov
pop
jno
mov
hlt
fisubrs
loope
iret
mov
repz
orl
in
cmp
cmp
in
cmp
mov
sbb
imul
aam
loopne
jae
push
push
pushf
fdivl
jmp
mov
xchg
aam
pop
aas
andb
dec
adc
add
pop
lods
test
mov
aad
pop
mov
push
inc
and
xchg
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
pop
pop
fimuls
ss
ja
pop
cmp
in
cmp
cmp
in
cmp
cmp
in
cmp
cmp
in
cmp
cmp
in
cmp
decb
iret
es
mov
adc
out
sti
xlat
sar
mov
mov
iret
jb
xor
pop
fs
jae
xchg
mov
jle
pop
jb
movsb
dec
add
jo
mov
leave
pop
hlt
fs
int3
add
jg
add
dec
mov
sub
in
movsl
inc
outsl
js
lods
jg
pop
cltd
in
mov
sub
mov
insb
fst
popa
fldt
xchg
popl
xor
mov
dec
iret
sub
mov
mov
repz
cmp
cltd
call
stc
bound
pusha
push
mov
fs
sarl
in
orl
fidivrs
rcrb
fs
sbb
fwait
pushf
sarl
dec
inc
scas
dec
js
int3
hlt
out
fsub
sub
mov
leave
fidivs
sub
push
ljmp
mov
gs
push
nop
pop
mov
mov
aam
mov
lcall
inc
or
jg
push
je
lret
mov
mov
movaps
sbb
out
push
inc
xchg
shrb
push
mov
sar
cmp
mov
inc
adc
out
mov
mov
push
inc
push
add
sahf
push
sub
xorl
pop
push
mov
push
jle
or
dec
hlt
ss
cs
mov
jnp
xchg
cld
pop
sahf
int
mov
jge
lods
sub
ja
xchg
jne
xchg
sbb
mov
loopne
fidivrs
adc
pop
xchg
cs
shlb
sub
shl
xor
push
jnp
inc
out
and
jge
jns
add
test
ret
add
flds
jg
xchg
pusha
stos
test
lods
ret
jl
inc
cmp
icebp
adc
ret
xchg
mov
jge
sub
iret
sbb
xchg
test
fdivr
jbe
jns
inc
mov
mov
mov
aad
push
movsb
lret
leave
xor
cmp
cmp
xor
fidivrs
lahf
and
or
sbb
xor
lock
out
adc
imul
cmpsb
mov
sbb
add
cmc
roll
mov
enter
inc
popf
addr16
mov
int
cli
loope
xchg
mov
repnz
push
adc
push
jo
movsl
cltd
jno
mov
inc
jo
inc
adc
and
mov
divb
inc
inc
mov
xor
seta
pop
mov
dec
mov
mov
jecxz
loopne
js
iret
cld
mov
pop
xchg
xor
sub
clc
jne
push
sub
and
js
test
push
mov
movsb
mov
push
loopne
movsl
lods
in
xchg
aaa
cmp
push
cmpsb
shll
scas
rcl
and
fisttps
jp
mov
jg
mov
pop
repnz
out
sub
jmp
and
push
mov
cmp
inc
test
add
imulb
jmp
ljmp
xor
ja
out
pop
inc
fldenv
jl
iret
shl
lods
nop
shll
arpl
cltd
icebp
js
jae
aaa
lret
ss
sbb
pop
mov
hlt
mov
cmp
pop
loop
xlat
push
out
in
pusha
fs
adc
aaa
imul
nop
pop
cmp
add
lret
jns
mov
xchg
cld
sbb
sub
and
jns
cwtl
cwtl
insb
in
inc
std
mov
mov
xchg
jb
inc
pop
mov
jmp
xor
sbb
or
addr16
jne
in
shll
sub
adc
lret
pop
sub
scas
dec
loope
rorl
push
mov
mov
cld
bound
into
mov
ret
aam
pop
inc
sbb
std
jecxz
or
push
mov
clc
cld
mov
dec
pop
jle
mov
test
mov
in
flds
in
jmp
sahf
push
fisubrl
inc
leave
sbbl
jae
or
daa
popa
mov
jnp
iret
into
adc
pushf
test
subb
mov
xorl
sbb
xor
mov
lea
into
lahf
dec
pop
mov
push
pop
es
out
rcrb
imull
ret
jo
in
ret
mov
mov
xchg
pusha
inc
and
mov
call
cmp
les
and
push
inc
out
add
mov
data16
add
sarb
mov
mov
out
dec
int3
ret
adc
es
pop
add
daa
mov
int
mov
repnz
stc
rcrb
jp
adcb
jo
mov
out
cli
sbb
jnp
jl
xchg
adc
add
mov
loopne
pusha
and
adc
jbe
inc
setp
add
sbb
rorb
or
arpl
ja
cmpsb
dec
inc
into
dec
roll
pop
les
aad
inc
mov
jns
int
scas
adc
mov
jg
ret
shr
incb
xchg
sub
shll
icebp
lret
test
pusha
fisubl
dec
das
mull
push
int
xchg
cmp
push
popa
ja
cld
jo
push
cmp
daa
or
mov
mov
andb
push
cld
sbb
pushw
cmp
or
out
pusha
into
xchg
jle
mov
enter
data16
push
mov
jg
ds
jb
addr16
sbb
xor
jmp
adc
sub
mov
inc
push
push
out
mov
pop
xor
shlb
rcrb
push
sub
inc
cld
pop
fmuls
jmp
jmp
adc
faddp
je
inc
cmpsb
in
push
out
shrl
or
in
ss
or
repz
int3
aam
dec
loop
inc
fimull
sahf
mov
and
cmpsb
dec
into
js
cli
int3
cld
xchg
and
lret
js
lods
sbb
inc
xor
in
enter
push
cmc
adc
xor
dec
rorb
xor
mov
mov
mov
and
inc
cmp
fisttpl
and
mov
repnz
lret
xlat
je
jle
stos
rcrl
pop
sbb
rcrl
mov
sti
jmp
mov
cmpsl
fiadds
loope
lds
test
xchg
stos
mov
insb
inc
ss
jle
stos
fimull
pop
ljmp
lds
jno
cmp
cmpl
jecxz
pop
inc
mov
sahf
loopne
sub
or
in
add
xchg
pop
mov
sbb
sbb
mov
ret
jb
pushf
lcall
into
push
das
add
jle
aaa
into
out
mov
lret
add
data16
loopne
jp
and
push
ret
mov
insl
mov
mov
push
or
and
inc
sbb
inc
pop
xchg
imul
fprem1
imul
dec
jae
lret
fwait
pop
mov
iret
ja
jo
cmp
xchg
aam
aas
cli
mov
xor
lret
push
and
push
push
sbb
mov
test
push
aam
adc
aam
sbb
pushf
mov
aam
fsub
stc
in
cmp
faddp
dec
fidivs
scas
inc
and
xor
sub
ror
xchg
adc
jo
dec
ret
or
inc
imul
mov
addr16
das
fwait
daa
lret
or
or
add
rolb
aas
mov
movsl
cmp
inc
out
push
sahf
in
add
sub
push
ficompl
in
mov
leave
mov
lret
cld
arpl
popf
out
dec
xchg
cmc
push
es
shlb
sub
loop
test
dec
lret
lcall
addr16
mov
xor
cwtl
xchg
sbb
and
jl
push
arpl
pushl
leave
lret
push
imul
jle
cmp
or
jecxz
inc
mov
cltd
pop
in
loope
push
mov
lock
xor
add
push
pop
pop
fcoml
pop
xchg
lods
pop
mov
push
fldl
xchg
ficompl
xchg
pop
adc
cltd
adc
push
dec
push
scas
in
shl
out
xchg
inc
jo
rclb
in
shrl
xchg
imul
insl
push
pop
push
ret
mov
or
cmp
and
pop
loop
xchg
inc
icebp
ds
lea
mov
popa
imul
mov
sbb
addb
pop
pop
push
or
xchg
cmpsb
sub
rcll
xchg
dec
fstpt
js
imul
rcl
scas
shrl
pusha
lahf
es
daa
sub
shlb
imul
sub
adc
sbb
mov
pusha
jbe
jae
sub
mov
jge
mov
imul
pop
xchg
xor
mov
jns
add
movsl
xchg
adc
cmp
adc
in
xchg
sub
imul
scas
jns
out
inc
icebp
in
push
push
cmp
dec
mov
addr16
pop
inc
mov
jo
mov
mov
adc
pop
jge
adc
add
jmp
int3
lahf
mov
jl
xorl
add
lock
cmp
std
lock
push
jne
pop
movsl
mov
fs
lock
ds
pop
jnp
inc
pusha
addb
pop
mov
jne
cmp
mov
repnz
xor
pop
jp
bound
mov
outsl
pop
push
lret
cli
stos
stos
xor
pop
or
in
cmpsl
lahf
or
push
ljmp
sbb
push
adc
test
pop
adc
ja
scas
xchg
mov
fwait
cld
in
mov
sbb
hlt
in
movb
fisubs
or
jmp
adc
pop
pop
lods
sbb
enter
sti
subl
addr16
xor
sub
dec
jne
push
inc
mov
pop
cmp
sub
hlt
in
shll
xor
cld
jo
fwait
mov
cs
clc
sub
ret
test
push
adc
inc
les
jmp
mov
mov
cmp
popa
mov
push
mov
xor
mov
push
push
or
aam
ret
pop
xor
jmp
mov
insl
add
dec
mov
dec
mov
add
or
pop
lods
dec
mov
jns
jne
mov
rcrb
dec
jnp
push
cmp
mov
iret
dec
inc
pop
cld
lds
loopne
adc
iret
mov
xchg
inc
xchg
mov
lret
pusha
bound
fwait
push
mov
mov
pushf
push
daa
jg
mov
