or
nop
call
sar
nop
notb
icebp
sahf
adc
bts
nop
mov
jmp
in
cld
fxrstor
and
mov
pusha
sti
fwait
aaa
pop
xor
rorl
mov
mov
popf
int
xor
int3
jb
inc
mov
jne
and
data16
or
adc
nop
mulb
or
xor
and
jno
sub
add
fdiv
and
pop
je
sub
mov
inc
cmpsl
add
sbb
add
dec
fisttpll
push
imul
and
ss
sbb
sahf
inc
gs
arpl
push
push
clc
in
and
add
cmp
fiadds
mov
lods
dec
xchg
mov
sbb
cmp
roll
mov
inc
testl
jae
xor
inc
and
push
popa
stos
into
xchg
pop
sti
lea
push
sbb
and
in
mov
popf
or
iret
jnp
sbb
xlat
xor
ret
mov
stos
jae
je
and
jne
je
add
and
ret
mov
rorb
daa
out
cld
dec
inc
cmpsb
js
xchg
jl
ds
adc
rol
mov
dec
push
mov
pop
into
and
out
or
xor
cmp
inc
es
and
inc
sbb
jge
cmp
das
imul
push
fwait
dec
mov
sbb
mov
addb
iret
cmp
insb
leave
scas
in
lds
adc
jnp
bound
xor
hlt
jp
xor
push
rcrb
inc
scas
jecxz
or
add
pop
mov
out
rorb
xchg
mov
pop
lahf
mulb
push
xchg
and
mov
divb
pop
das
addb
or
fmulp
push
xor
xchg
in
fdivrl
add
xchg
je
pusha
hlt
mov
jge
push
xor
sbb
sbb
add
jmp
push
int
cwtl
loopne
imul
add
and
and
jmp
mov
mov
mov
repz
sub
shlb
xchg
add
pushf
nop
add
mov
and
xchg
cmpsb
and
jl
push
cmp
mov
popa
mov
popa
pop
int
mov
pop
filds
pop
rcrb
xor
addr16
fbld
lcall
ja
loopne
push
fiaddl
in
push
mov
sarl
sahf
push
dec
add
xor
in
sub
ret
push
push
adc
les
std
dec
add
call
lea
push
lea
push
push
sbb
fdivr
decl
dec
and
ret
mov
pop
stos
call
add
sub
call
adc
fstp
call
push
xchg
jp
pushf
outsb
push
add
pushf
push
xor
mov
neg
add
mov
mov
inc
mov
xchg
add
jne
jne
fistpll
arpl
or
xchg
loop
adc
icebp
out
pop
out
mov
pop
cld
jmp
mov
jo
push
mov
pop
roll
testb
inc
data16
imul
add
or
in
mov
imul
pop
dec
push
inc
sub
ljmp
fxch
ret
and
fdivrl
sbb
jae
cmp
dec
mov
pop
cs
outsb
decl
sbb
xchg
push
inc
inc
mov
pop
inc
jae
jae
stc
dec
ret
mov
filds
adc
xchg
shr
mov
cltd
xchg
adc
push
xchg
fdivrp
loope
imul
dec
add
out
outsb
push
ret
arpl
in
psadbw
dec
ja
add
inc
push
outsl
mov
dec
inc
fucomip
in
dec
add
cmp
push
push
push
movl
inc
and
or
push
mov
xchg
and
and
dec
mov
aad
aaa
test
dec
andl
insb
rolb
mov
out
mov
cmp
inc
mov
sbb
imul
div
add
dec
inc
gs
lahf
cmpsb
fisttpl
cli
push
pop
sub
pushl
lretw
adc
repz
inc
cmp
cld
rcr
dec
jb
insl
mov
inc
outsb
jmp
pop
insl
xor
dec
ja
mulb
inc
int3
imul
push
add
std
mov
jns
jno
push
lea
push
xchg
adc
mov
inc
push
inc
idivl
jp
mov
nop
or
dec
sub
push
pop
inc
xchg
jns
fs
add
mov
push
push
push
int
pop
lock
ljmp
or
aaa
vpaddsw
dec
les
jb
outsb
jne
incl
repnz
add
dec
ret
inc
dec
stos
shr
int
cmp
shlb
and
loop
and
repnz
mov
push
pop
xor
mov
mov
idivl
lock
insb
lods
ss
adc
push
jne
push
dec
ds
dec
inc
push
pushl
imul
enter
outsl
ds
sbb
xor
push
movsb
xor
jo
jg
push
cmpsb
cld
sbb
mov
jg
inc
push
dec
jns
nop
insb
addr16
dec
ss
sbb
xor
push
neg
lock
mov
pushf
jae
dec
xor
inc
and
in
add
ja
push
inc
dec
rcrb
incl
pop
xchg
or
lcall
or
add
sarb
out
inc
je
inc
add
bnd
jbe
cmpsb
sti
movsb
out
xchg
dec
add
push
mov
xchg
mov
ret
insl
lcall
clc
mov
rorb
fidivrs
jae
movsb
cmp
imul
add
push
insb
sti
mov
arpl
fisttps
flds
inc
xor
mov
push
or
push
push
dec
jmp
xor
add
es
push
jno
scas
decl
pop
push
insl
bound
jg
lea
addr16
sarb
xor
pop
jae
xchg
dec
adcb
pop
dec
mov
mov
inc
mov
js
mov
inc
je
dec
ret
add
inc
jl
mov
call
popf
cmpsl
sarl
addr16
notb
fimull
jg
orb
push
ljmp
cmp
rolb
je
push
fsubp
cmc
cmc
mov
inc
adc
and
xchg
or
test
mov
clc
sbbl
jp
pusha
xchg
loope
push
push
sahf
sbb
fisttpl
or
push
push
xor
xchg
mov
gs
lods
gs
repnz
cltd
rcrb
jmp
pop
rcrb
mov
mov
xchg
pop
ficomps
gs
gs
dec
jo
ds
not
push
gs
sbb
jecxz
sub
imul
loopne
inc
repnz
xor
gs
add
jns
icebp
xchg
add
adc
es
aad
call
add
sbb
lock
xor
and
rorb
and
add
int
push
mov
mov
push
xor
sub
nop
xor
shll
cmpsl
inc
pop
pop
sbb
aaa
xchg
repz
add
jae
dec
sbb
loop
jg
ja
jmp
adc
dec
lds
in
aam
fs
cmp
and
and
adc
push
or
adc
mov
push
aad
sbb
addl
mov
xor
dec
ja
fisubrs
xor
iret
hlt
mov
dec
xor
xchg
sub
push
gs
add
adc
or
inc
enter
mov
in
inc
pop
mov
sbb
repnz
mov
add
or
sbb
mov
mov
pop
pop
sub
pop
inc
xor
arpl
xchg
mov
and
and
scas
andb
sub
mov
dec
ret
gs
mov
dec
inc
push
psubw
mov
add
sbb
sbb
sbb
push
test
mov
or
jo
push
pop
adc
daa
sub
pop
mov
dec
insb
pop
mov
sti
loopne
dec
pop
xor
xchg
and
pop
and
push
sub
adc
add
das
mov
fucomp
popf
lea
mov
out
cmp
pop
lods
fwait
push
jae
fwait
or
gs
lahf
cmp
das
in
and
int3
test
idivb
psrlw
inc
mov
arpl
push
test
mov
adc
or
push
mov
and
outsl
icebp
push
popa
stc
push
sbb
idivb
inc
ds
sbb
mov
in
sub
push
cmp
cltd
sub
flds
mov
clc
pop
sub
fists
add
sbb
adcb
imul
shlb
rcll
jae
or
dec
push
nop
jnp
dec
jo
fldl
test
jb
in
push
fsubrs
inc
mov
pop
into
jl
add
mov
insl
adc
add
add
sbb
aas
inc
scas
std
sbb
pusha
mov
mov
ljmp
adc
inc
dec
mov
sub
mov
dec
mov
inc
jl
outsl
push
push
dec
xor
fimuls
cs
pushl
or
int3
js
in
push
incl
orb
mov
pop
add
addr16
xor
ror
outsb
in
adc
sub
outsl
cld
outsl
inc
pop
pop
push
dec
cmpsb
xor
shll
inc
dec
add
data16
insl
js
push
clc
push
in
xor
addb
lcall
lahf
in
inc
mov
or
movsl
lcall
nop
imul
shrb
mov
scas
loope
dec
xor
inc
jns
inc
mov
jg
ss
add
push
inc
sub
addr16
outsb
rorb
sbb
jb
sub
inc
adc
inc
inc
add
leave
ret
fwait
pop
out
ja
jae
testb
and
cmp
and
ljmp
std
ljmp
fwait
vmread
inc
mov
add
cld
xor
pop
pop
and
dec
jbe
es
xor
xor
movsl
cmp
and
ljmp
jo
popf
mov
push
jb
repz
ret
in
dec
pop
pusha
lock
mov
pop
out
cmp
adc
jecxz
cmp
sbb
adc
inc
xor
ret
lea
pop
add
lds
adc
gs
push
pop
inc
pop
sbb
inc
stos
addl
add
cs
push
sbb
add
repnz
lds
sub
add
lcall
arpl
cmpsb
or
xchg
addl
and
add
xchg
lods
gs
mov
dec
ret
sbb
out
mov
sub
jbe
mov
popf
rclb
add
xlat
adc
push
jb
cwtl
jmp
daa
rcr
imul
adc
adc
mov
pop
popl
mov
push
ljmp
inc
ret
adc
addl
icebp
movsb
fists
bound
sbb
xor
leave
cltd
pop
movsl
addr16
insl
aad
jo
flds
push
xor
push
pop
inc
jne
fnstenv
addr16
inc
popf
xor
push
adc
adc
and
cmp
jno
pop
int
nop
out
push
in
repz
fsubrs
sbb
shrl
sbb
imul
or
shll
test
scas
gs
adcb
orb
loope
mov
popa
dec
dec
lock
mov
xchg
push
test
jbe
adc
incb
sbb
pusha
push
sub
imul
dec
or
pop
mov
mov
push
ret
pushf
mov
dec
sub
clc
mov
leave
jecxz
xchg
mov
bound
loope
sub
jecxz
enter
icebp
shlb
ljmp
roll
leave
jae
or
mov
xchg
sbbl
rorl
cmp
stos
cld
add
push
inc
push
mov
add
cli
push
inc
add
lea
jmp
jl
push
mov
xorl
sub
push
inc
pop
repz
andl
jle
add
ret
int
sub
lods
scas
or
mov
jne
sbb
push
dec
rcll
outsb
mov
mov
mov
dec
push
test
addr16
sub
push
mov
jle
xacquire
fcoms
cmpsl
cmpsl
std
sahf
loopne
mov
mov
js
lods
push
jb
sub
add
mov
inc
push
arpl
add
mov
aaa
lcall
sahf
ljmp
test
xlat
add
xlat
popa
dec
push
mov
sub
push
adc
jge
dec
shr
jmp
lods
mov
push
out
push
mov
imul
mov
fs
fisttps
out
dec
inc
sub
mov
inc
dec
addl
xor
mov
inc
ds
or
mov
imul
inc
leave
ret
inc
insb
int
xchg
xor
decl
popf
inc
xchg
mov
push
pop
cmpsb
pop
xchg
add
xorl
push
stos
pusha
out
jns
jae
lea
push
movb
jg
or
ficomps
sti
clc
ror
shll
clc
jl
cli
nop
jg
and
fs
call
stc
mov
cmp
xchg
xlat
pop
iret
fistpl
in
mov
scas
mov
shrl
daa
stos
pop
in
lods
push
jl
or
inc
test
stc
icebp
movsb
xor
daa
in
xor
leave
negl
sbb
js
adc
ds
movsl
pop
movsl
sub
or
add
ret
lcall
push
xor
lock
fs
dec
fistl
or
inc
arpl
test
cmc
test
push
adc
mov
add
xorl
jge
popf
aaa
push
xchg
test
mov
xchg
xchg
adc
push
test
lahf
scas
inc
std
pop
test
jns
xorl
cmp
aaa
cs
ret
xchg
sub
lret
repz
mov
inc
add
sbb
jns
push
pop
jne
shlb
xchg
push
test
push
lods
cmp
rorl
fldt
mov
mov
inc
xchg
jae
push
mov
repnz
dec
shlb
lock
mov
sbb
xchg
ds
je
jmp
add
pusha
inc
shll
aas
adc
dec
fisubrl
stc
data16
pop
popa
addl
mov
add
sub
lahf
and
sub
inc
cmp
js
jb
xor
scas
cmp
into
xlat
jno
xor
into
fisttpl
adc
sbb
clc
inc
pop
leave
jo
add
hlt
or
shr
popa
mov
outsl
xchg
push
xor
cmp
push
dec
add
stos
xchg
jo
mov
bound
cli
lahf
arpl
push
sbb
scas
stos
pop
sbb
repz
or
add
sbb
nop
pop
add
daa
inc
xor
imul
xor
and
gs
fwait
lret
int
popf
aas
insl
jmp
ffree
and
push
fisubrs
loopne
test
xor
addr16
shr
or
in
jno
fildll
and
popf
mov
cmpsb
add
or
xor
ret
or
jne
xor
pop
xchg
cmpsb
ret
cmp
inc
loopne
fnsave
jno
fs
xor
add
lea
inc
pushl
push
stos
lea
pop
stos
stos
push
out
dec
repz
adc
icebp
jno
std
jg
push
fxch
cmp
test
add
in
ret
divb
lods
add
cmpb
xchg
mov
xchg
fwait
adc
pop
cmp
clc
mov
repz
push
dec
insb
dec
add
mov
add
inc
loop
daa
mov
insl
add
fimuls
filds
clc
jmp
cmp
ret
pusha
jge
xor
jno
cmp
ja
and
xchg
and
fcmovnu
sbb
cmpsl
aas
test
mov
roll
aaa
adc
out
push
mov
mov
pushl
jmp
lea
push
lea
push
push
push
test
xlat
jno
xchg
xor
call
movsb
insl
inc
xchg
cmc
fsubr
bound
aad
std
sbb
adc
jmp
cltd
mov
mov
aaa
outsb
xor
adc
xchg
cli
push
inc
mov
aad
xor
decl
fxch
pmulhw
mov
xchg
and
cs
push
sub
jmp
les
popa
bound
push
cld
scas
dec
lret
into
add
add
dec
dec
inc
dec
dec
add
incl
jmp
mov
pop
xchg
pop
ss
sarl
jmp
sub
insl
ret
cwtl
pushf
pusha
fmuls
aaa
mov
fcoms
push
dec
pop
pushf
push
mov
in
mov
sub
inc
dec
ret
inc
xor
mov
fcomip
rorl
push
sub
bound
bound
adc
movsl
in
jbe
cmp
int
sbb
sub
dec
repnz
mov
xchg
pushf
fldenv
push
test
imul
imul
adc
cmp
call
jl
rolb
add
mov
gs
jbe
xchg
jo
cmpsb
and
stos
popa
std
xchg
xor
dec
or
inc
fmull
sub
mov
and
xchg
aas
push
ljmp
pop
shlb
add
dec
imul
xchg
sub
xchg
fldenv
fdivrs
jbe
mov
mov
sub
mov
lea
cmp
jo
xchg
icebp
push
add
push
mov
and
lods
and
sbbb
mov
cmp
xchg
aaa
jmp
push
gs
incl
jmp
sbb
add
gs
hlt
jp
xchg
repnz
add
inc
add
lret
movsl
mov
pop
mov
mov
dec
adc
inc
pusha
pop
push
mov
clc
jl
popa
pop
sub
and
or
jo
scas
test
mov
sbb
add
jmp
cmpsb
in
loop
xlat
push
add
cmp
sub
add
xchg
cld
jne
push
int3
data16
xlat
and
adc
or
mov
lods
add
push
mov
cltd
sbb
pop
dec
mov
add
cmpb
xor
mov
jge
gs
adc
rcl
mov
in
je
adc
cmp
fs
adc
xor
dec
lds
sbb
rcll
sbb
shrb
mov
push
sbb
imul
push
inc
sbb
popa
hlt
insb
or
push
inc
pextrw
add
stc
cli
dec
call
repz
xlat
inc
lods
adc
scas
xor
ja
add
inc
cmp
sub
les
adcb
scas
adc
cmp
inc
mov
sub
insb
aad
jg
jl
jbe
lahf
pop
or
imul
adc
sub
pop
mov
add
cmp
sbb
lahf
pushf
arpl
daa
jle
jb
or
push
add
test
pushf
das
scas
lods
add
push
adc
cmpsb
lahf
sub
loopne
jle
push
outsl
and
sub
dec
je
inc
sarl
scas
pusha
mov
subl
or
push
xchg
lret
sub
jecxz
lods
inc
mov
jbe
bound
sahf
xor
movsl
test
popf
fistpll
dec
push
xor
lahf
jae
jae
ja
xor
loop
mov
mov
leave
xor
pushl
pop
repz
int
pop
adc
or
jno
je
lock
mov
mov
sarl
dec
inc
push
dec
inc
clc
ljmp
mov
rorl
arpl
add
dec
dec
jecxz
adc
sub
push
push
push
jl
sub
and
dec
es
lock
mov
decl
cmpsl
lea
and
imul
in
out
add
inc
mov
or
call
pop
push
add
inc
mov
pop
add
mov
call
call
gs
sbb
mov
and
fcoml
add
fstps
jbe
shl
cmp
sarl
mov
or
push
mov
mov
dec
mov
shrb
mov
push
rolb
inc
sub
pushl
inc
dec
out
lcall
pmuludq
xor
dec
lods
inc
xor
cmp
mov
mov
outsl
push
sub
fs
jo
outsb
push
sar
outsl
insb
jo
je
dec
add
cld
ss
bound
mov
mov
aaa
push
bound
add
cltd
inc
dec
cmp
or
fbld
pop
cmp
addl
jmp
iret
adc
enter
setge
loopnew
cmp
sub
popa
arpl
in
xor
inc
fs
mov
scas
xchg
add
inc
call
les
lcall
adc
xchg
sbb
sahf
sbb
in
imul
inc
call
add
int
push
fdiv
inc
insb
in
incb
fbstp
inc
cmp
sub
jle
cli
jmp
dec
repnz
xor
mov
icebp
add
in
push
push
inc
and
dec
push
idiv
decl
test
xor
jmp
xchg
in
cmp
adc
add
ss
inc
sub
loopne
ja
push
out
dec
js
pop
cld
pusha
jmp
pusha
out
inc
pop
xor
sahf
mov
jb
dec
mov
popf
add
pop
loop
repnz
pusha
stos
out
xor
xchg
jle
call
or
ja
std
lret
jae
sub
xor
pop
mov
push
sbb
int3
pop
lcall
mov
inc
mov
lock
ss
xor
push
ja
lret
add
movd
insl
gs
outsb
jmp
insl
push
lods
add
fidivrs
xor
js
in
ss
jl
jg
mov
mov
insb
sub
mov
add
dec
and
and
pushl
mov
mov
icebp
sub
pop
mov
xlat
push
fildl
sub
gs
jmp
push
test
add
gs
nop
outsb
pushf
mov
lahf
jmp
adc
xchg
cli
inc
jle
in
stc
test
dec
jnp
mov
shrl
sbb
lret
dec
das
movsb
cmpsl
pop
jne
arpl
fadd
test
popa
xchg
and
mov
and
mov
add
pop
cmp
scas
popa
push
sub
stos
sarb
and
cmp
add
cmp
push
adc
aad
mov
xchg
jl
jmp
test
pop
mov
pop
shrb
push
add
fidivs
mov
push
stos
lds
inc
pop
insb
xchg
mov
test
in
mov
pop
jb
cs
or
mov
shrl
xor
cmpsl
and
pop
aad
mov
xchg
jns
lods
add
cmp
add
inc
roll
in
pop
sub
leave
in
mov
push
int
rclb
adc
xor
dec
mov
push
int
pop
pop
hlt
call
or
sbb
aaa
xor
inc
xor
sbb
sbb
cmp
cmp
and
cltd
inc
add
push
and
std
shll
or
or
xor
add
push
and
addr16
xchg
mov
push
movsb
fmull
or
inc
dec
push
adc
mov
cmpsl
lds
xchg
bound
and
sub
mov
or
cmp
cmpl
and
dec
test
push
pop
mov
mov
jnp
or
cwtl
testb
xor
jmp
adc
inc
adc
mov
pop
repz
loopne
sub
cmpb
mov
iret
sbb
fs
sub
roll
sub
pop
add
cmp
test
xchg
jmp
and
cmc
push
daa
or
dec
movsb
pop
adc
jmp
sbb
xor
jmp
in
out
push
adc
inc
sbb
sbb
xor
test
aas
test
dec
and
add
jno
call
sarb
punpcklbw
or
and
pop
ds
and
jmp
or
iret
adc
pop
int3
push
dec
add
dec
mov
in
iret
clc
ss
add
roll
into
sbb
pop
dec
add
testl
jno
add
clc
call
and
popa
lcall
sbb
js
pop
jae
mov
add
fs
mov
sbb
fildll
decl
cmpl
push
xchg
inc
mov
movsb
cs
xor
rolb
mov
pop
rcl
push
xchg
push
test
jns
jne
ja
cmp
push
push
pop
or
imul
add
xchg
add
std
jmp
add
cmpsb
adc
push
punpckhdq
adc
movsl
pop
pop
rclb
push
test
inc
jmp
inc
enter
add
dec
xor
or
fiaddl
mov
mov
hlt
or
push
iret
ret
pop
push
scas
and
popa
add
xchg
push
mov
push
cmpsl
out
xor
xchg
mov
scas
inc
mov
push
xor
out
pop
push
and
add
loop
adc
inc
or
dec
add
scas
pop
js
sub
cmp
jns
mov
pop
push
inc
mov
popf
xchg
xchg
jno
mov
outsl
sbb
popa
pop
inc
or
je
gs
cld
sbbl
mov
mov
mov
mov
cmpsb
jmp
scas
dec
pop
stc
jg
test
orb
ljmp
pop
rclb
cld
cmp
in
mov
mov
repz
xchg
cmp
pop
xor
lret
sub
cmpsb
in
sbb
mov
fs
xor
push
js
je
clc
shll
jb
mov
inc
jecxz
push
inc
sbb
fidivrl
push
adcl
sub
xor
or
je
push
pop
pusha
add
in
adc
jge
add
jno
out
imul
sbb
add
inc
add
jns
pop
xchg
insl
lods
iret
cmpl
and
xor
jp
push
ja
or
dec
lock
out
stos
sub
xorl
sub
faddl
jmp
ss
and
cmpsl
nop
jb
call
pop
or
mov
stc
sbbl
dec
mov
cltd
mov
lret
sub
lret
sub
inc
dec
pop
jb
xchg
push
add
xorl
mov
movsl
js
push
mov
jge
and
cmpl
sbb
inc
xchg
lods
out
subl
rorb
push
jecxz
pusha
adc
movb
inc
inc
xchg
push
and
loop
cmpb
ret
js
loop
mov
xchg
mov
ds
adc
mov
push
test
adc
xchg
je
arpl
ficoml
xchg
clc
mov
adc
mov
lcall
cltd
pop
out
mov
orl
xor
adc
sarb
push
sbb
push
jb
push
ret
mov
cmp
lods
add
incl
push
fsts
out
aam
xchg
adc
dec
mov
mov
lods
mov
lahf
ljmp
rorl
repz
lock
dec
jg
loope
clc
lock
inc
mov
add
mov
pop
lods
mov
cmp
ljmp
jg
dec
mov
push
incl
movb
test
andl
cmpsb
decl
adc
pop
test
add
pop
lcall
mov
dec
roll
dec
dec
jg
fistpll
cli
dec
insb
ret
inc
je
jo
push
lea
mov
rolb
cli
add
jg
aad
jno
lret
xchg
cwtl
pop
push
mov
cli
fcompl
mov
jge
rol
or
pop
add
inc
sbb
subb
mov
cmp
insl
add
call
mov
push
push
jbe
add
dec
dec
out
mov
or
sbb
xchg
mov
add
movl
push
push
out
push
js
add
ss
inc
dec
pop
xor
idiv
push
pop
adc
orb
ds
or
dec
add
in
aas
cld
out
jae
push
cmp
call
jmp
lods
mov
cmpsb
cmp
arpl
lret
xlat
arpl
outsl
push
subb
xor
xor
scas
dec
inc
lcall
adcl
push
in
nop
inc
sub
sbbl
test
inc
jl
xchg
jne
pop
leave
jmp
stos
aaa
and
and
and
enter
shll
sbb
xchg
sub
subb
js
jbe
nop
cmp
cmpsb
and
pop
and
daa
and
jo
mov
das
dec
jecxz
fidivs
dec
add
cmp
sarb
lds
rclb
or
xchg
xor
notl
cmc
sbb
adc
mov
scas
pop
adc
add
xchg
add
fs
fisttpl
jmp
jns
mov
cmp
mov
push
add
push
push
xlat
mov
rcrb
xor
jno
cmp
popa
dec
nop
cltd
mov
fisubl
scas
and
in
mov
add
xor
mov
xchg
je
out
sub
es
flds
lock
or
sub
cbtw
and
pop
push
arpl
adc
adc
and
cmp
andb
enter
gs
inc
xchg
lds
mov
cmc
stos
sbb
or
mov
or
addb
mov
inc
lods
adc
sub
pusha
add
pop
cmp
outsl
adc
jne
pop
xchg
mov
pop
std
mov
aaa
jg
in
dec
leave
mov
inc
mov
or
lods
adc
cld
lret
mov
mov
cltd
cmp
jne
dec
repz
insb
outsb
das
and
cltd
lahf
or
nop
nop
xchg
mov
and
add
sbb
add
cs
xor
xor
adc
push
xor
push
imul
sbb
xchg
dec
mov
and
mov
sub
sub
scas
loopne
jl
dec
gs
add
jmp
jns
cli
xchg
mov
mov
jne
jae
enter
dec
in
fistps
dec
pop
pop
and
inc
int3
xchg
adc
add
add
adc
or
andl
enter
leave
mov
test
mov
loop
mov
fwait
lods
je
adc
xor
ret
xchg
jo
push
dec
add
loope
adc
push
mov
xchg
xchg
add
pusha
sub
jmp
mov
ljmp
lret
add
push
andl
sub
push
notb
lea
aas
pushf
js
mov
mov
sbb
scas
cmpsl
fwait
insb
testl
pop
mov
cmp
push
sbb
inc
aam
dec
inc
insl
push
push
push
xor
add
adc
dec
xor
push
ret
addb
mov
dec
push
movl
push
ljmp
stos
cmp
mov
cli
stc
les
call
ret
test
aam
add
mov
push
xlat
jbe
cmc
mov
imul
dec
ret
lahf
sbb
nop
sbb
nop
jns
cld
call
cmp
mov
loope
popa
xor
mov
in
shlb
arpl
pop
das
orb
and
mov
mov
push
sbb
cli
test
mov
and
jne
push
dec
adc
add
add
mov
xor
arpl
pop
xchg
pop
aas
sbb
mov
mov
int3
add
sbb
mov
ret
mov
jo
aad
jno
pop
xchg
scas
dec
movsb
mov
jnp
sbb
cpuid
fstpl
testl
xchg
pop
das
stos
fiaddl
minps
mov
sub
stos
imul
lcall
aad
push
and
sbb
stc
in
mov
or
je
inc
cs
aam
daa
mov
aas
add
insl
dec
sbb
xchg
aad
and
and
mov
stos
test
hlt
mov
int
lea
cmp
aam
popf
out
xchg
jns
mov
dec
shlb
jb
mov
lods
data16
repnz
test
sbb
dec
insl
addb
pusha
inc
mov
stc
add
and
cmpsb
xor
aad
dec
adc
inc
xchg
ds
adc
jo
and
out
subl
jmp
sbb
icebp
std
fldl
lea
add
jnp
lods
xchg
jl,pn
inc
lea
adc
repnz
fisttps
inc
addl
or
daa
mov
mov
ljmp
jns
testb
lret
push
sbb
or
mov
or
and
jg
insl
pop
add
loopne
sub
rcrl
lcall
orb
and
fs
sub
push
pop
adcl
sub
jp
out
inc
push
fmull
mov
dec
cmpl
mov
adc
mov
shrl
add
in
loope
lea
dec
psrad
cld
inc
sbb
sbb
mov
cmc
mov
mov
xchg
sub
jns
push
push
mov
mov
mov
addl
mov
aas
sub
loop
daa
push
orl
lock
jle
add
sub
lcall
enter
xor
movsl
adc
adc
mov
push
push
imul
jne
pop
popl
jge
bound
mov
mov
pop
bound
stos
in
decl
inc
nop
or
and
lahf
nop
leave
mov
nop
pop
ret
pop
xchg
jbe
adcl
push
add
sar
jg
aam
rolb
add
in
inc
add
das
add
push
iret
inc
dec
and
je
fs
mov
ret
pushl
cltd
pop
jnp
cmp
pop
lahf
iret
movb
scas
scas
xor
movsb
testb
mov
ret
cmp
push
inc
aas
xchg
bound
mov
dec
inc
pushf
out
cmp
pushf
cli
push
sub
pop
imul
imul
push
dec
add
xor
xor
push
incl
add
jns
mov
arpl
sub
push
cld
pusha
inc
outsb
sbb
pushl
imul
lods
mov
jae
cltd
jl
lret
mov
xor
or
push
flds
jle
js
jno
inc
dec
ret
inc
pop
mov
push
mov
sbb
dec
push
push
dec
mov
jbe
pop
and
cmc
pushf
fs
divps
xchg
jmp
inc
insb
push
xchg
mov
and
enter
or
sub
sub
clc
add
mov
sti
gs
arpl
add
pop
mov
xor
mov
jo
repz
lods
mov
nop
or
and
jmp
test
icebp
or
sub
arpl
das
add
xor
shlb
outsb
add
pushl
mov
add
dec
inc
sub
jns
mov
inc
mov
dec
dec
loop
mov
cli
decl
scas
repz
dec
push
push
out
sti
repnz
cmp
in
shll
add
dec
inc
inc
insb
dec
ret
out
fmuls
incb
cli
push
incl
and
sub
movsl
in
pop
push
push
mov
cmp
inc
decb
mov
or
xor
add
pop
dec
xchg
pusha
bound
add
jb
lea
into
js
out
daa
jo
lock
jne
pop
add
dec
pusha
mov
pop
out
and
fmull
mov
fsubl
outsl
push
push
push
mov
fs
pushf
mov
dec
insl
pushl
pop
mov
mov
jb
out
fstps
inc
insb
leave
push
pop
lds
push
ljmp
shrb
mov
popl
out
and
lods
subb
push
imul
std
dec
dec
push
call
cmp
loop
int3
ret
repnz
adc
jl
dec
cwtl
add
lea
push
cmp
orl
ljmp
fadd
cmp
jns
jns
shlb
add
rorb
jae
out
icebp
jmp
mov
xchg
fimull
popfw
rcr
das
mov
mov
aam
adc
cmp
add
fcmovnu
xor
push
inc
mov
or
mov
mov
mov
pop
adc
push
add
cmp
jns
jo
xor
in
clc
out
adc
pop
ret
gs
mov
push
inc
ret
pop
xor
or
pop
or
nop
aas
push
popa
fidivrl
inc
sbb
cmp
out
add
pop
pushf
xor
push
xchg
or
test
out
test
je
loopne
dec
pusha
push
inc
fisttpl
cmp
mov
rcrb
xor
sub
divb
repnz
setbe
daa
in
xorl
out
jb
jo
repnz
mov
data16
aaa
dec
dec
repz
and
mov
cmp
pop
jo
add
dec
pop
adc
lds
pop
inc
cwtl
cmovl
xchg
xor
in
les
out
cmpsl
xchg
and
jecxz
test
push
mov
sbbl
mov
add
or
stos
and
add
xor
mov
xchg
pop
out
and
mov
sub
popf
popl
pop
sub
and
nop
lret
test
mov
mov
mov
addb
adc
iret
roll
fst
cwtl
fdiv
jecxz
add
push
add
scas
pop
fwait
mov
incl
add
jns
sbb
dec
enter
in
cs
cmpsl
nop
sbb
push
pop
mov
imul
aam
ss
int
in
loop
adc
gs
add
push
sub
adc
mov
stc
add
cltd
cmp
mov
jno
and
adc
and
aad
sbb
pop
mov
dec
inc
popa
xor
add
sbb
fidivrs
loop
lock
sub
dec
add
and
aas
jecxz
or
data16
push
nop
mov
mov
or
aam
xchg
imul
dec
cltd
ret
scas
aaa
test
xor
sbb
push
xor
pop
test
and
add
push
and
sahf
mov
stos
ljmp
bound
pop
jnp
push
fs
roll
ret
add
jmp
dec
sbb
gs
imulb
sbb
adc
sbb
jae
pusha
in
xor
and
out
sbb
shld
add
xorl
jne
and
popa
jnp
mov
or
add
and
stos
add
dec
mov
xor
jb
stos
in
jne
or
sub
cmpsb
adc
test
gs
push
mov
sbb
jp
xchg
sahf
mov
xor
sub
xchg
sub
out
lcall
fwait
sbb
rol
sub
das
xor
and
mov
mov
lret
jb
and
mov
dec
inc
jo
dec
add
pop
dec
mov
ret
outsl
push
inc
xchg
fs
mov
pushl
mov
add
std
add
cmc
decl
das
rcrb
ret
fldcw
fisubrl
push
xorb
clc
pop
test
push
mov
test
pop
lret
push
jecxz
push
arpl
imul
xor
cli
mov
inc
outsb
stc
inc
jmp
mov
add
inc
or
pop
mov
jg
push
push
adc
adc
jbe
xor
dec
xor
and
and
icebp
pop
rolb
inc
inc
push
ja
dec
mov
add
push
push
mov
or
or
fwait
mov
xchg
cmp
sbb
shlb
out
xor
ljmp
shlb
jne
mov
sbb
aaa
popa
pop
fcomip
mov
xlat
dec
dec
push
xor
clc
push
ljmpw
xchg
lret
dec
add
stc
cld
incl
sub
mov
sub
lahf
add
pop
imul
mov
pshufw
insb
push
or
jne
mov
insb
jmp
inc
dec
aaa
mov
or
fcmove
aam
shll
inc
pop
xor
mov
fistps
inc
pop
mov
fwait
xchg
pop
lret
adc
addr16
iret
or
lock
xor
lock
push
push
mov
push
inc
fadds
fistl
inc
outsb
push
inc
push
outsl
pop
stos
je
inc
into
or
inc
push
stc
add
js
cmp
decl
inc
aaa
sbb
sub
dec
sbb
call
sub
ror
clc
sti
jo
pop
cld
mov
jbe
xor
and
gs
dec
mov
out
xchg
push
outsb
imul
fadds
mov
mov
fisubrs
dec
sbb
aas
lds
ffree
mov
pop
call
mov
shrb
dec
jp
jns
inc
inc
mov
jecxz
dec
jl
iret
dec
shlb
mov
add
ja
paddw
push
int3
lea
push
xor
mov
incl
add
std
xchg
dec
popf
outsl
lods
lcall
push
lcall
or
les
cmp
dec
aas
mov
icebp
push
dec
gs
or
dec
imul
in
push
inc
fidivs
mov
filds
push
les
pop
xor
xor
bound
dec
ret
dec
mov
mov
cld
incl
test
push
lcall
mov
into
repnz
cmp
dec
add
push
mov
push
fisubl
int3
add
mov
push
arpl
adc
jmp
cmp
ret
mov
add
or
inc
jns
mov
and
roll
cmp
lret
ret
and
jno
push
xchg
stos
mull
cmp
movsb
fcos
mov
dec
add
ljmp
test
jmp
dec
insb
push
cmp
mov
jo
fs
int3
mov
push
ljmp
out
ret
push
bnd
insl
dec
aam
xor
into
loopne
adc
fcmove
mov
push
je
std
dec
lock
test
bound
push
push
bound
lods
ds
cwtl
jne
sub
jp
jbe
push
sahf
xchg
call
adc
jecxz
mov
and
cmpsl
dec
xor
jmp
sub
insl
js
dec
sub
movb
fsubl
popa
sbb
nop
popf
stos
outsl
xor
xchg
pop
ss
pop
das
dec
nop
frstor
adc
mov
or
push
adc
xchg
xchg
dec
popa
into
add
jne
ja
add
sub
sub
or
jg
mov
add
fwait
aad
int
push
dec
pop
inc
push
lahf
push
gs
inc
mov
jno
push
fsubrs
sub
pop
dec
and
push
pop
or
dec
sbb
xor
jmp
movsb
testl
nop
addr16
jmp
dec
dec
daa
jbe
dec
jne
xchg
loop
es
outsb
inc
pop
xor
push
push
jb
or
clc
add
push
pop
or
jg
daa
rorb
fstpt
push
push
scas
push
das
dec
or
mov
test
push
incl
iret
cltd
repnz
cmp
mov
insb
pop
mov
mov
rcll
dec
mov
jg
and
sub
ret
icebp
ss
push
sub
push
sub
into
movsl
imul
pop
cltd
and
dec
test
pusha
aaa
mov
sbb
icebp
push
cmpsb
mov
js
inc
mov
cmp
mov
xor
fdivrs
pop
in
xchg
lea
push
or
ret
pop
mov
jmp
push
xchg
or
jo
cmp
sub
inc
notb
push
cmp
xor
aam
push
scas
pop
ljmp
das
dec
push
fisubl
rcll
pop
roll
les
jge
pop
mul
push
lea
push
push
mov
inc
sbb
incl
jl
sbb
push
jmp
sub
mov
inc
adc
push
mov
mov
ljmp
jb
or
mov
pop
repnz
out
lahf
movsl
push
out
mov
push
push
jmp
iret
or
lret
jmp
daa
and
js
ret
test
test
repnz
stos
and
mov
ret
cmp
dec
fsub
not
aad
dec
mov
inc
es
jo
pop
sub
jb
cwtl
incb
mov
jno
dec
lock
inc
dec
push
push
mov
mov
stos
push
std
lcall
mov
mov
sub
out
ljmp
jp
jb
nop
mov
xor
shl
js
mov
lock
inc
jae
inc
in
movsl
ljmp
inc
xchg
lahf
push
mov
test
xchg
and
jg
dec
and
pusha
ret
divb
aaa
jecxz
std
mov
xchg
push
inc
sbb
mov
rolb
push
dec
aaa
jbe
es
mov
cmp
aaa
inc
outsb
add
stos
cmc
push
aam
dec
jae
bnd
pusha
ret
or
or
push
outsl
popa
xor
pop
inc
jle
inc
fidivs
loopne
and
xor
mov
sub
lcall
enter
pop
push
lret
cli
nop
cmp
mov
add
loope
add
js
repnz
inc
aam
pop
cld
sbb
inc
push
incb
imull
dec
jbe
fs
pushl
pop
out
pop
lahf
adc
cmp
mov
mov
mov
push
loop,pt
xor
pushf
mov
ficoms
jnp
mov
xchg
xchg
shll
lahf
cmp
fimull
repz
mov
dec
pusha
ja
xchg
and
adc
mov
mov
inc
mov
xor
sti
push
inc
xor
hlt
push
ss
add
dec
mov
clc
jns
jno
jae
xor
pop
jae
mov
dec
pop
lock
or
push
push
inc
aam
icebp
incl
push
dec
rolb
or
loope
scas
adc
outsb
or
pusha
push
loopne
pop
insl
push
in
and
lods
add
mov
es
lret
mov
inc
dec
inc
ret
push
insb
push
mov
lcall
imul
andb
les
inc
sub
test
pop
pop
dec
mov
inc
clc
movsb
or
cli
add
xchg
xchg
mov
jno
aam
pusha
pop
push
dec
inc
lock
dec
add
or
fists
cmp
dec
call
in
mov
repz
fisttps
nop
add
data16
cmpsl
aas
xchg
push
ss
push
inc
or
pop
jbe
addr16
je
xor
add
outsl
push
jl
test
dec
mov
jne
add
inc
mov
pop
xor
loop
das
scas
inc
lcall
imull
pop
stos
inc
stos
mov
mov
insl
add
data16
xor
jmp
ljmp
mov
push
std
call
dec
rol
imul
test
inc
fcomps
orl
push
ljmp
pop
shll
sti
fs
ljmp
jl
inc
test
dec
push
fists
and
add
repz
pop
push
pop
xlat
mov
cmp
lds
push
jge
mov
push
roll
dec
pop
lods
test
sub
mov
cs
push
and
jno
shlb
dec
in
xchg
pop
xor
movsb
or
subl
mov
add
roll
or
mov
nop
or
je
sbb
inc
outsb
ror
ficoml
or
movsl
andl
xorl
jmp
cmpsb
subl
xchg
test
push
add
das
insl
dec
push
shrl
les
sub
dec
cmp
mov
mov
xlat
gs
mov
stc
dec
push
sti
add
hlt
xor
push
mov
orb
iret
add
in
fwait
adc
andl
xchg
ss
sub
movsl
sbb
pop
or
shlb
adc
aas
lret
jbe
pop
sbb
mov
ret
adc
pop
xor
pop
scas
jmp
fwait
cwtl
xchg
fidivrl
mov
divl
das
enter
cmpsb
mov
fcoms
shlb
xchg
mov
scas
das
loope
cmp
xchg
test
test
pop
aaa
mov
sub
rcl
imul
and
mov
cli
cltd
add
mov
rorl
inc
and
sti
ljmp
fiaddl
sbb
inc
adc
sub
add
push
sbb
mov
inc
add
xchg
push
mov
or
test
loopne
xor
sbb
and
mov
cwtl
add
push
add
call
pop
addr16
add
imul
pop
xchg
cwtl
mov
aaa
pop
ss
inc
add
xchg
jo
js
dec
mov
dec
inc
inc
fisttps
jbe
push
dec
outsl
inc
dec
clc
ret
jb
jae
jg
add
dec
push
add
push
inc
mov
push
and
push
dec
inc
sub
es
jmp
dec
cmp
les
ljmp
sbb
sub
xor
jnp
insb
push
enter
xor
call
inc
ds
inc
call
push
aaa
insb
mov
js
jb
js
movsb
dec
or
imul
xchg
cmp
push
inc
insl
mov
adc
push
dec
ja
inc
cs
arpl
mov
je
cmp
lock
lods
imul
mov
jo
add
hlt
pop
mov
jb
dec
dec
out
push
fildll
in
std
ret
pop
inc
mov
fldcw
sbb
lds
jge
pop
xor
addr16
aad
push
ja
push
push
inc
fstp
mov
inc
xor
shrb
push
dec
out
sub
pop
push
fisttpl
jmp
lock
loope
lret
decl
cmp
mov
jae
sbb
push
inc
jnp
fsubs
xor
xchg
adc
in
into
inc
push
mov
fs
aaa
outsb
dec
dec
inc
loopne
test
hlt
addr16
push
xor
clc
jg
movsb
mov
jl
nop
sub
sarl
pop
adc
pop
jns
mov
clc
adc
aas
inc
stc
add
inc
or
dec
mov
fs
mov
pop
test
push
cmp
jmp
cmp
rorl
xor
divb
mov
pop
pop
inc
test
xor
push
outsb
push
and
rcpps
jge
inc
je
mov
fs
jle
aad
gs
pop
xor
mov
xlat
out
push
or
lcall
movsb
push
cmp
dec
or
pop
jae
mov
arpl
mov
fimuls
lods
mov
adc
mov
cmpsb
js
cmp
subb
jbe
push
dec
shrl
inc
lea
and
sbb
jo
push
aaa
inc
or
lds
mov
xor
out
stc
xor
add
push
add
mov
sti
or
mov
pandn
adcl
pop
sbb
cmp
xchg
and
js
ja
fld
push
leave
mov
cmpsl
add
mov
dec
mov
xchg
dec
xchg
mov
adc
imul
pop
pop
and
jae
push
dec
cmpl
je
fwait
cmp
cmpsl
push
sbb
and
add
push
scas
inc
daa
mov
nop
lcall
repnz
in
testb
int
mov
sbb
je
and
add
push
movb
sbb
pop
add
in
popa
adc
push
enter
ret
dec
scas
dec
cmp
mov
mov
push
push
stc
push
gs
shl
nop
and
shll
mov
jb
push
cltd
mov
test
sahf
adc
mov
adcl
fs
or
xlat
and
shrb
stos
stos
fs
inc
sar
adc
push
stc
aaa
leave
jae
enter
js
and
cmp
subb
add
shlb
jo
sbbb
add
sub
or
add
add
xchg
push
jo
dec
int3
cmp
jecxz
xor
adc
xchg
pslld
pop
jp
xor
stc
sbb
and
jg
or
outsb
cmp
xlat
cwtl
xor
add
push
loop
xor
jne
rcrl
mov
pop
push
lea
mov
mov
mov
and
sbb
in
pop
test
push
push
mov
cwtl
add
mov
popa
add
xor
or
and
mov
add
and
cmp
push
jo,pn
ljmp
cs
mov
lods
push
imul
pop
and
push
adc
and
pop
js
adc
add
pop
orb
aam
sar
inc
xchg
xor
inc
rolb
cltd
pop
ftst
mov
loop
ret
mov
incl
rol
mov
push
lods
cltd
and
adc
lret
add
mov
in
jo
dec
xor
ret
mov
loope
ret
inc
add
dec
sbb
ja
inc
xor
outsb
jae
dec
jmp
dec
xor
cmp
orl
xor
hlt
lcall
xor
repnz
orb
dec
pop
inc
ffree
aaa
or
jmp
insl
data16
sbb
inc
movb
inc
push
ret
in
outsl
loopne
mov
mov
sahf
sub
jmp
sar
inc
data16
mov
add
mov
out
lahf
push
imul
inc
mov
inc
jo
add
sbb
xorl
dec
inc
hlt
rclb
outsl
inc
call
test
inc
dec
fxch
sbbl
movsl
sbb
or
dec
out
test
aas
ret
or
fistpll
sub
ljmp
dec
push
dec
adc
inc
jns
hlt
out
into
adc
jg
pushf
push
push
adc
or
lret
push
cwtl
push
pop
test
aas
inc
hlt
sbb
dec
bound
loop
data16
lods
push
repz
add
add
scas
call
sub
pushl
test
xor
dec
xor
mov
movsb
rorl
and
bound
rorb
push
mov
add
out
and
mov
push
ds
jbe
mov
dec
arpl
enter
inc
add
clc
ret
test
inc
add
add
aaa
or
dec
push
push
incl
mov
mov
ds
inc
mov
sub
ljmp
in
shrl
mov
adc
lret
ret
sub
inc
cld
ucomiss
push
ret
add
mov
inc
jno
movsb
in
adc
inc
pushl
jl
cwtl
arpl
test
jb
cmc
and
ljmp
and
sbb
xor
es
ja
adc
ljmp
aas
sub
cmp
shlb
pop
mov
jb
push
adc
cmovg
cltd
insl
mov
and
jno
xchg
sahf
jns
aam
in
push
repnz
pushf
and
add
jo
stos
aam
es
filds
inc
jecxz
stc
nop
popf
rclb
nop
lds
les
add
push
ljmp
add
add
mov
jno
int
or
pop
mov
add
cmpsb
xor
cwtl
fs
or
fldl
aad
cmp
cmc
scas
mov
inc
enter
ljmp
or
add
xor
lret
mov
and
sbb
cmp
cmp
push
test
pop
inc
outsb
inc
and
jae
repnz
dec
and
xor
in
and
test
jno
pop
je
daa
shr
mov
fdivrs
dec
or
int
or
mov
xchg
pusha
aam
adc
or
mov
addl
daa
nop
data16
push
nop
push
repnz
jle
and
repnz
shrb
cmpsb
and
inc
jbe
jne
cwtl
jne
ret
ret
test
mov
or
inc
dec
push
jo
add
movsl
xor
jmp
mov
push
jno
lcall
pop
xor
xor
jecxz
inc
or
inc
and
adc
in
mov
loopne
pop
cmp
repnz
sub
scas
pop
xchg
xlat
and
je
out
dec
jle
sub
pop
mov
inc
pop
add
nop
pop
sti
pop
jne
jae
pushf
cltd
mov
pusha
icebp
bound
inc
icebp
adc
inc
dec
jbe
adc
fwait
mov
mov
adc
mov
push
mov
pop
xorb
pop
popf
je
popf
loopne
push
pop
fistpl
inc
and
add
pusha
add
dec
je
std
jae
sub
inc
mov
xchg
inc
inc
je
ljmp
inc
pop
xchg
adc
in
mov
roll
jne
lret
mov
push
imul
cmp
punpcklbw
fdiv
pop
enter
leave
insb
mov
mov
jno
jo
cs
xchg
cld
push
xchg
lds
movsb
and
inc
ljmp
add
int
call
inc
and
xchg
lods
push
movsl
lds
add
les
xor
mov
call
or
lret
into
xchg
sbb
aaa
in
jae
int
fdivrp
lcall
jo
in
inc
fs
dec
pop
js
ret
subl
lret
mov
dec
mov
push
sbb
dec
imul
dec
add
xor
jmp
loop
add
imul
out
std
call
push
test
mov
out
push
std
jmp
dec
or
lods
add
outsl
push
dec
push
push
gs
repnz
dec
outsl
movsb
sub
dec
pushf
inc
push
inc
pop
mov
dec
add
daa
imul
jmp
add
test
xchg
jmp
sbbl
mov
xlat
mov
mov
mov
loope
cmp
leave
mov
leave
les
push
push
pop
data16
push
jg
pop
mov
dec
je
add
dec
inc
add
loopne
lods
dec
add
dec
push
inc
jae
cwtl
out
and
mov
sub
addr16
inc
xor
hlt
mov
in
popf
mov
adc
pop
or
or
dec
sub
inc
bound
add
loop
push
jecxz
mov
imul
mov
mov
inc
stc
mov
adc
dec
aaa
inc
les
ja
jle
arpl
lcall
push
push
addr16
shll
movsl
negb
jb
sbb
aaa
push
inc
xlat
and
dec
cmp
int3
es
and
push
dec
cli
push
inc
or
inc
inc
inc
dec
add
jp
adc
lock
insl
dec
arpl
mov
es
aas
cmp
dec
inc
add
dec
outsl
arpl
lcall
mov
cs
xlat
jmp
outsl
mov
mov
and
sub
dec
and
cmc
aaa
fcomp
into
inc
ds
loop
stos
rclb
jns
pop
call
jae
into
cmpsb
add
cmp
xchg
arpl
lods
js
jmp
repz
cmc
push
mov
xor
push
cltd
div
fisubl
movsl
fisubl
jecxz
loop
dec
jge
lock
bound
addr16
dec
jl
lret
add
or
jg
add
push
push
test
jg
sub
aas
jg
ljmp
and
jmp
pusha
push
test
testl
andb
push
jo
outsb
xchg
mov
incl
je
mov
mov
mov
lock
mov
add
add
push
add
or
insl
outsb
hlt
loopne
dec
lret
inc
sbb
and
cmp
call
rorl
pop
adc
and
push
cmp
mov
push
out
push
mov
lahf
mov
lds
sbb
push
jp
and
push
test
nop
xorb
inc
dec
jae
jae
ja
dec
jb
les
mov
push
out
es
push
in
push
je
sbb
inc
push
ss
out
jle
punpckhdq
push
and
sahf
mov
dec
add
sarb
sbb
push
aas
xor
pop
shll
push
jmp
insb
inc
xchg
pusha
lock
jb
push
sbb
xor
mov
lret
call
hlt
sbbl
xor
jbe
out
call
mov
and
mov
fwait
xchg
mov
outsl
mov
sub
pop
add
sub
and
mov
pop
repnz
dec
adc
out
and
add
rcrb
mov
cmp
or
xchg
ja
pushl
push
js
mov
orl
js
add
inc
cmpsl
cmpsl
mov
add
xlat
call
jb
call
xor
cmp
dec
dec
cs
fwait
inc
mov
mov
aam
adc
pop
orl
jp
dec
dec
aam
mov
adc
dec
jmp
xchg
inc
add
mov
cmp
mov
lds
or
stos
aaa
push
loop
and
repz
pop
fwait
test
sub
stos
cmp
jo
xor
xchg
push
jne
mov
aam
or
fucomip
in
mov
popf
pop
xchg
xchg
sbb
add
nop
pop
add
loopne
cwtl
jp
adc
pop
adc
sahf
cmp
arpl
arpl
add
mov
inc
movsl
ljmp
aas
mov
sbb
imul
bound
jno
lods
ret
pop
dec
cltd
and
jb
push
add
test
mov
bound
enter
sbbl
push
mov
jno
push
pop
pushf
rclb
fidivrs
pop
and
cli
add
jbe
rolb
iret
or
rcr
rcll
outsb
ss
mov
mov
sbb
cmp
flds
call
xor
add
aaa
xchg
shr
mov
dec
push
xor
cmpsb
dec
sbb
jmp
push
sbb
fbld
xor
jmp
pop
repnz
xchg
adc
andl
jno
cltd
add
xchg
add
nop
rclb
shll
std
je
add
pushf
add
mov
add
rolb
insl
sbb
clc
aam
movsbl
xor
sub
jge
or
scas
pop
add
cmp
loopne
stc
add
dec
fdivrs
sub
mov
cltd
iret
mov
xor
icebp
push
add
or
lods
add
mov
pop
xchg
pop
andl
push
xor
popf
xor
mov
pop
mov
test
xchg
inc
in
jno
insb
cs
push
inc
scas
xchg
sarl
cld
jmp
mov
incl
daa
xchg
add
test
rclb
sub
xchg
imul
push
out
jbe
hlt
adc
popa
add
dec
xchg
mov
fadd
and
xlat
dec
mov
inc
es
imul
adc
jae
add
lcall
leave
ret
jge
movl
adc
or
cli
dec
or
add
mov
adc
sub
xchg
rcr
add
add
push
sbb
or
xor
dec
xor
insl
inc
cmp
mov
fsubrl
pop
push
lret
sbb
mov
test
pushl
stos
mov
je
mov
jmp
push
sub
add
incl
mov
repz
sbb
xor
adc
inc
pop
enter
dec
jg
add
sub
jo
nop
mov
push
gs
jg
adc
mov
insl
mov
call
in
sbb
inc
enter
fstl
mov
out
push
dec
add
push
push
push
xor
mov
lods
je
ljmp
ljmp
cmp
idivl
aas
aas
push
mov
aad
in
xor
mov
xor
cmp
rcrl
mov
shrb
stc
sti
lret
add
hlt
stos
pop
hlt
addb
ja
dec
xchg
mov
stos
adc
push
out
cmpsb
mov
fisubrs
js
pop
fs
mov
push
test
pop
fisttps
mov
std
dec
roll
mov
mov
mov
sub
or
xor
imul
pop
inc
mov
test
dec
call
inc
call
xlat
sbb
lcall
int
push
pop
fdivrl
jno,pt
xor
es
and
outsb
imul
adc
inc
adc
jns
jne
inc
xor
push
or
lcall
add
adc
decl
push
mov
daa
dec
push
dec
or
cmc
mov
dec
ss
mov
popf
pop
adc
and
inc
jg
mov
and
xor
cmp
push
and
add
adc
push
and
push
cmpb
push
out
test
out
adc
pop
lea
xchg
loopne
push
fisubrl
lret
add
cmp
or
xchg
stc
addr16
cs
lea
xor
sbb
inc
pop
or
sbb
mov
aaa
jae
and
dec
pop
jns
sbb
aaa
inc
es
and
clc
andb
cli
mov
repnz
mov
in
mov
movsb
mov
xor
cmpsl
adc
dec
mov
imul
jnp
lcall
adc
cs
fisttpl
sbb
adc
mov
sub
pop
adc
and
inc
inc
mov
adc
movsb
insl
fldl
fs
sahf
or
or
mov
jg,pt
sbb
and
xchg
and
or
mov
add
adc
or
cmp
sbb
sbb
shlb
and
inc
popa
adcb
and
stc
fldenv
je
inc
rcll
daa
scas
mov
movl
inc
aad
push
cmc
fdivs
stc
add
xor
add
enter
call
test
xor
jle
mov
sub
pop
es
push
jle
data16
rorb
xor
mov
mov
cmp
loope
push
mull
mov
subl
sbb
es
int
repnz
mov
push
sub
add
js
mov
or
mov
addb
pop
sub
pop
inc
push
adc
jecxz
addr16
outsl
and
or
out
insb
or
xchg
xchg
cmp
shlb
test
mov
add
cmpsl
in
sub
xor
sub
push
je
xchg
mov
call
jge
cmp
and
inc
dec
mov
sbb
add
jle
push
push
dec
shr
cwtl
mov
jb
mov
xchg
and
mov
mov
ja
scas
adc
and
add
xchg
adc
push
and
movsb
jae
dec
inc
subb
push
adc
fwait
dec
cmpsw
into
mov
pop
popa
addr16
and
es
les
jne
inc
or
sbb
push
cwtl
test
jmp
clc
out
inc
cmp
cmp
xlat
lret
or
jmp
in
mov
aad
pushl
dec
jnp
jmp
add
or
adc
in
push
cmp
fadd
inc
mov
dec
sub
fst
push
jbe
jg
popw
mov
movsl
or
outsl
inc
xor
addr16
jmp
push
dec
xor
aad
leave
cmp
xor
or
jo
add
out
roll
push
dec
dec
push
add
mov
mov
push
mov
dec
push
ss
mov
push
push
inc
push
mov
call
dec
ss
sub
cmc
cmp
add
stos
sbb
sub
dec
sub
fildll
test
rcrl
inc
mov
bound
dec
push
dec
mov
je,pn
cmc
mov
inc
xor
xor
mov
insl
inc
push
dec
ljmp
sub
inc
or
ret
push
pop
pushf
or
fs
shl
outsl
ljmp
pop
mov
pop
out
xor
mov
push
sub
xchg
push
inc
bnd
je
subl
fcomip
add
arpl
lea
push
jno
idivb
pop
lock
js
popf
mov
repnz
movsb
xor
test
fcomip
jmp
int
jne
pop
fcom
push
cmp
insb
lds
mov
push
lret
dec
and
stos
mov
insl
ja
add
inc
dec
inc
add
xlat
or
sti
dec
and
mov
imul
lcall
push
imul
jp
sub
mov
fistl
fcom
clc
and
in
push
fnstsw
rorl
filds
xlat
dec
outsl
inc
ja
popa
imul
dec
insb
cmpsl
dec
or
dec
adc
push
mov
scas
call
mov
dec
shlb
bound
aas
xchg
outsb
data16
inc
dec
clc
dec
inc
mov
sbb
pop
inc
stc
or
xchg
or
push
arpl
data16
je
xchg
inc
rolb
push
xor
and
inc
rolb
inc
sub
jb
sub
ret
push
sbb
xor
shll
push
mov
lcall
jmp
and
test
sub
xlat
jl
in
sarl
or
test
mov
adc
shll
xchg
outsl
hlt
and
xor
add
das
jmp
mov
movsl
mov
add
movsl
lret
push
rorb
push
mov
sub
push
dec
push
imul
out
fisubs
push
imul
push
outsb
enter
ret
push
pop
roll
sub
cmc
jmp
push
stc
sbb
sbb
in
xlat
mov
out
mov
xor
xchg
in
xor
push
aam
push
stos
push
imul
add
addr16
push
mov
xor
mov
jg
out
cmpsb
stos
fsubrs
cwtl
fsubr
or
ret
test
je
push
dec
adc
xor
add
jmp
push
insl
fsubrp
arpl
addr16
mov
push
jns
js
xor
loope
addb
rol
sar
outsl
lock
mov
scas
or
lods
in
xchg
data16
mov
leave
stos
std
decl
test
push
adc
sbb
insl
les
mov
lcall
and
xor
jl
cmp
ret
arpl
sbb
cld
xchg
cmp
jp
pop
dec
insl
bound
ret
mov
jmp
inc
mov
jl
test
fimuls
lock
test
inc
dec
lds
inc
jp
mov
mov
dec
dec
es
dec
mov
pop
popa
je
push
subl
andb
jp
dec
ja
int
incl
and
xor
sbb
pop
push
lea
in
jns
addr16
ffreep
lds
jb
push
ret
jo
jle
loope
data16
cmp
dec
cwtl
jno
dec
psubusb
call
dec
hlt
push
arpl
push
sub
sahf
mov
jle
cmc
dec
sub
fstpl
mov
enter
fucomi
push
lret
cmpsb
xor
and
shrb
rcr
push
xor
add
fisttpll
lret
orl
cmpsb
dec
mov
xchg
inc
push
xchg
mov
cmpsl
int3
adc
inc
mov
pusha
sbb
adcb
and
and
outsb
xchg
xchg
iret
nop
xchg
nop
or
pusha
mov
stc
xor
int3
int3
cmp
pop
inc
test
fdivl
push
test
adc
push
outsl
mov
or
dec
jmp
outsl
jnp
inc
push
mov
cmpsb
mov
ret
xchg
cmp
dec
iret
negb
in
mov
mov
gs
adcb
xor
hlt
jg
pop
rclb
add
pop
mov
pop
add
add
inc
cmp
jle
jne
jge
movb
xor
sbb
std
out
in
cmp
inc
sub
lret
lods
imul
mov
and
jne
mov
pop
enter
shrl
iret
mov
rcrl
shlb
fcomip
pop
xchg
in
lret
jns
roll
adc
cmp
xor
add
mov
fs
dec
subl
lods
or
inc
sub
cmp
insb
les
aam
test
cltd
xchg
or
and
outsl
call
mov
in
push
dec
lods
and
mov
lock
adc
fiadds
rcpps
push
pusha
icebp
roll
mov
shlb
pop
adc
and
and
add
xlat
shrl
sbb
ret
inc
inc
sub
sub
in
adc
and
sbb
jmp
push
loope
stos
rolb
sub
imul
call
jo
in
jg
dec
dec
repnz
arpl
mov
add
into
fstpl
testb
sbb
adc
outsb
fldenv
ret
push
ret
add
adc
pusha
out
xchg
pop
je
mov
repnz
cwtl
outsl
fldt
lea
orb
daa
cmp
pop
je
insl
mov
push
dec
inc
jno
adc
add
mov
add
idiv
testl
push
fiadds
jnp
imul
xor
jne
movsl
push
jb
sbb
xor
int
sbbb
lds
sub
daa
cmp
popa
loope
fadd
negl
sub
sbb
int
xchg
or
mov
in
dec
das
push
inc
mov
scas
adc
iret
jg
push
ljmp
ret
pop
mov
inc
sbb
outsb
lds
ffree
ret
push
aad
cltd
jmp
sti
hlt
push
ret
fs
js
rclb
inc
or
outsl
push
lock
lock
cli
push
repnz
lock
dec
push
dec
push
imul
xor
push
add
dec
dec
push
outsl
push
outsl
push
ja
in
mov
mov
aaa
pop
int
lods
xchg
popf
mov
pusha
loop
out
xchg
or
ret
and
sbb
mov
or
loope
xchg
push
adc
add
mov
lock
xchg
dec
pop
push
add
test
mov
dec
ss
dec
xor
insb
cld
cmpsl
lock
xchg
ret
sbb
imul
sbb
inc
inc
dec
mov
pushl
out
aas
push
jno
add
imull
ror
mov
lcall
fsts
hlt
lret
movsl
sbb
sbb
popa
push
inc
out
rolb
lods
push
in
addr16
push
shrb
cmp
sarb
ljmp
xor
dec
aad
aam
mov
fstps
mov
add
data16
or
enter
test
pusha
cmpl
rorb
addb
push
push
sub
adc
pop
icebp
pop
call
iret
xchg
inc
mov
add
ljmp
jae
push
lret
pop
ds
mov
aaa
es
dec
je
aaa
dec
inc
push
outsb
push
insl
cmp
cs
test
dec
inc
fcomip
outsl
add
sub
je
out
imul
and
push
inc
push
inc
push
adcb
cmpsb
jae
sub
sbb
std
decl
std
pop
sarb
out
out
test
ja
sub
push
push
xor
int
lods
add
jae
fldt
and
pop
cmp
out
inc
popa
mov
pop
xchg
mov
dec
inc
ljmp
out
dec
mov
jnp
or
decl
addr16
das
iret
or
or
loope
adc
nop
mov
push
jbe
xchg
ds
jg
pop
popa
xor
jle
das
sbb
stos
add
push
push
bound
loopne
ret
fcoml
push
sub
rorb
push
push
dec
inc
xor
sbb
sbb
mov
popf
rep
incl
dec
mov
test
xchg
push
adc
clc
dec
jbe
jno
sbb
fimuls
les
jae
dec
lock
test
pop
repz
jge
call
xchg
jecxz
cmp
add
jl
push
insl
dec
add
dec
xor
lcall
push
jbe
mov
xor
or
push
pop
mov
fdivp
inc
imul
lods
loopne
inc
std
and
xor
add
clc
loope
mov
add
pusha
pop
jae
add
rolb
add
and
data16
mov
xor
fbld
mov
pusha
mov
mov
mov
mov
cmp
cmpsb
aas
les
dec
insb
dec
icebp
mov
jbe
stos
test
sub
xchg
inc
clc
or
adc
cwtl
mov
scas
call
adc
notl
daa
iret
pusha
stos
lock
pop
out
dec
add
shrb
roll
push
fisubs
cmp
sbb
jae
cli
into
mov
lods
movb
inc
push
push
push
ficoml
and
fwait
clc
jg
lods
mov
mov
xor
mov
in
push
add
ficoml
inc
mov
jg
nop
dec
inc
xor
push
dec
inc
pushf
mov
ret
ret
imul
push
ljmp
and
jmp
adc
push
cld
dec
or
mov
mov
fistpll
cmp
mov
fwait
cmc
mov
dec
jne
dec
pop
jo
decb
insb
dec
bound
imul
inc
mov
push
cld
mov
inc
dec
and
rol
mov
outsl
or
xchg
push
xor
jge
scas
in
rcrl
push
test
les
rclb
mov
mov
cmpsb
sti
insb
inc
jecxz
mov
cmp
sub
js
jne
add
pop
xchg
inc
jbe
ja
jb
cmp
lods
mov
inc
stos
add
outsl
pusha
mov
push
inc
aaa
pusha
cmp
mov
scas
dec
xchg
popa
movd
fsubr
push
ss
inc
cs
aaa
push
lea
lahf
jnp
or
mov
fs
cmpsb
loopne
mov
fbstp
lods
jne
sti
push
rcll
loop
arpl
aam
and
ret
lcall
sub
das
sbb
and
push
lret
mov
adc
fcomps
cmc
aas
std
ret
clc
push
cmp
outsb
add
inc
insb
fs
mov
sbb
push
push
sub
loopne
push
addb
icebp
insl
push
push
xor
push
lock
jb
lock
jmp
ret
nop
dec
jmp
mov
out
or
nop
lods
jp
dec
nop
dec
jo
repz
mulb
or
push
dec
scas
fldl
cmp
push
jb
mov
fcoms
xchg
ja
cmpb
xor
cmp
test
add
inc
xchg
push
mov
sub
mov
adc
adc
fcmovu
inc
mov
out
push
inc
xor
lock
lock
pop
jg
dec
gs
mov
nop
xchg
mov
pop
lock
stos
mov
insb
std
cmp
aad
jns
lcall
aaa
lds
inc
dec
pop
stos
adc
mov
aaa
xor
lret
or
lock
jns
dec
outsl
addr16
popa
or
iret
aam
jae
adc
jo
insb
repz
add
lds
jl
push
enter
mov
mov
mov
mov
add
cmpsl
pushf
icebp
lea
mov
pop
xchg
mov
enter
xor
or
push
out
js
imul
add
sub
lds
lret
bnd
gs
enter
enter
xlat
stos
addr16
int
sub
inc
in
xchg
pop
lods
pushf
xor
push
ss
and
imul
jbe
shll
mov
ret
mov
dec
inc
ficoms
outsl
lcallw
cmp
je
aaa
leave
dec
xlat
xor
mov
js
imulb
add
pop
adc
mov
inc
insb
dec
ret
mov
sbb
jne
mov
aas
call
cmp
clc
aas
test
int3
or
mov
in
insb
sbb
out
shl
pop
mov
push
jo
sahf
in
pop
nop
incb
aaa
flds
xor
lret
arpl
jmp
lcall
mov
int
jo
sub
shll
loopne
sbb
lea
dec
push
xor
xchg
cmp
add
cs
movsl
and
mov
les
in
sub
lcall
aaa
mov
inc
inc
xchg
jno
or
js
add
incl
mov
incl
xor
mov
sahf
out
imul
sub
adc
sub
orl
xor
sbb
or
inc
mov
inc
push
push
or
sub
cmpsl
add
jmp
push
subb
push
test
xlat
pop
fiadds
push
lock
cwtl
jne
shrb
into
popf
dec
mov
pop
push
outsl
mov
sub
inc
add
adc
dec
mov
enter
jle
inc
jge
cmp
ss
fsubr
push
ja
jbe
ja
jp
test
adc
xchg
insb
adc
clc
scas
add
fiadds
xchg
fs
xor
pop
push
jne
add
repnz
xchg
mov
inc
pop
fmull
decl
cmpsl
hlt
cmpsb
and
pusha
pop
sbb
les
movzbl
mov
shlb
adc
push
shrl
inc
dec
adc
int3
adc
mov
pop
ja
pop
and
inc
dec
push
test
in
mov
dec
mov
mov
cmp
mov
test
sbb
or
xchg
arpl
inc
popa
push
add
inc
ficoms
push
or
push
dec
pop
xor
pop
jo
insb
outsl
push
add
dec
cmp
adc
ret
movb
scas
add
fdivl
cmp
outsb
dec
cli
in
or
pop
cld
jbe
sar
lcall
loopne
dec
push
stos
test
cmp
fidivrl
jb
in
fists
mov
dec
push
push
dec
ljmp
adc
mov
pop
shl
push
call
and
ja
cmp
daa
and
imul
in
fst
bound
inc
cmc
js
icebp
dec
dec
pop
les
sbb
xor
push
push
cwtl
rolb
mov
cmp
iret
sbb
mov
sti
decl
mov
cmp
jle
adc
xor
mov
icebp
jp
sahf
pop
js
arpl
push
dec
cmp
inc
adcb
inc
push
inc
inc
add
mov
dec
std
push
aaa
test
xchg
jno
fadd
pop
ds
dec
inc
jp
mov
and
imul
dec
icebp
out
adc
inc
push
xor
pop
and
fimuls
test
fcoms
dec
outsb
into
cmp
xor
jo
xor
mov
or
mov
jbe
ja
call
scas
lods
sar
lcall
mov
stos
xlat
lock
sbb
inc
popf
shrb
mov
das
mov
add
dec
imull
daa
mov
inc
dec
mov
inc
sub
push
jae
and
xchg
dec
mov
test
pop
pop
xchg
data16
sub
push
fstpl
dec
hlt
rorb
cmpsb
jecxz
cmp
xor
lret
cmp
xchg
pop
inc
xor
mov
sbb
jno
push
jo
jp
fildl
jno
adc
push
adc
pusha
lods
out
xchg
push
pavgw
push
cli
pop
cld
rcrb
rcrl
shll
mov
mov
shrl
scas
movsb
lds
cmpsl
pop
dec
adc
mov
xchg
sbb
loope
movsl
mov
push
add
mov
inc
jno
imul
int3
icebp
hlt
jle
mov
fbld
push
or
mov
pop
xchg
call
cld
adc
xor
in
jo
xorb
sub
loop
andb
pop
xchg
xchg
push
sub
push
xor
loop
push
sub
xchg
xor
adc
sub
sbb
repz
popf
xor
ss
and
inc
stos
lea
xor
push
and
call
pushf
fnstsw
pop
or
sub
xlat
push
xchg
orb
fs
loope
and
adc
mov
and
dec
mov
lahf
mov
icebp
mov
push
pushf
jp
mov
xchg
add
cmc
jno
ret
cmp
xor
xchg
sub
pop
inc
arpl
push
pop
sahf
sbb
lock
outsl
xor
inc
and
cmpb
out
arpl
push
cltd
leave
es
stc
or
fnstcw
loopne
xor
sub
rorl
sbb
mov
xchg
icebp
jp
vpsubusw
fsub
in
aam
sbb
add
nop
out
lea
push
inc
fcmove
cmp
aam
xchg
sbb
shl
push
xor
add
jo
mov
push
pop
mov
loopne
movsl
loope
dec
sbb
nop
mov
cmp
and
xchg
mov
jl
dec
adc
andb
inc
sub
jg
pop
sub
push
popa
jg
mov
jae
xchg
and
sub
and
out
inc
or
adc
mov
je
xor
jnp
lds
cmp
mov
negb
and
push
mov
add
inc
loopne
in
pop
cmp
nop
push
movsb
popa
pop
ljmp
test
add
dec
and
outsl
pop
dec
jmp
mov
cmp
push
mov
mov
sub
sbb
push
iret
push
nop
xor
mov
push
int3
lret
das
lods
xchg
aaa
sti
mov
decl
idivl
daa
stc
and
adc
jb
mov
dec
aaa
dec
add
inc
dec
inc
dec
imul
ja
cwtl
incl
aad
les
mov
add
mov
jno
aad
pusha
stos
adc
and
rcll
adc
or
and
push
inc
mov
sbb
dec
cmp
jmp
jno
into
es
dec
mov
mov
jo
jns
imul
inc
sbb
pusha
sbb
aam
sahf
call
xlat
addb
lods
pop
add
out
jbe
push
xor
mov
hlt
cwtl
rcr
pusha
outsl
xchg
inc
outsb
pushl
lret
mov
scas
sub
imul
cmp
scas
das
sbb
loopne
lret
into
ljmp
outsb
inc
mov
dec
push
inc
test
push
xchg
push
inc
test
sub
push
adc
push
ret
push
lea
bound
rcr
mov
dec
loope
sbb
sub
mov
or
mov
lock
sub
adc
push
jbe
ror
push
inc
aaa
inc
add
xor
jbe
sbb
push
jp
xchg
mov
neg
mov
repz
inc
imul
xor
lcall
les
out
icebp
jo
sub
leave
add
inc
dec
push
inc
imul
push
arpl
pop
cmc
pop
je
xor
imul
in
dec
jo
mov
in
push
incl
push
test
loop
popf
sti
cli
stos
mov
mov
pop
stc
push
sbb
adcl
xor
sbb
fs
dec
mov
dec
mov
xor
ljmp
pop
les
mov
aam
pop
enter
sbb
dec
mov
add
mov
xchg
daa
jno
push
leave
add
bsr
push
addr16
ret
xor
pop
int
std
fdivrs
imul
movsb
inc
and
pushf
add
mov
fcoml
and
enter
mov
mov
pusha
fisubrs
aas
shll
and
fcompl
js
mov
dec
jo
hlt
fadds
ljmp
xchg
mov
xchg
mov
rcll
lods
out
mov
xchg
push
push
inc
incw
mov
sbb
test
cwtl
sub
jns
inc
inc
dec
imul
dec
pop
aaa
lahf
cwtl
je
and
movsl
shl
or
inc
jmp
aas
cld
out
push
dec
or
push
push
ret
cmp
xchg
mov
addr16
push
insl
or
xor
inc
das
mov
sbb
lret
pop
jmp
jl
add
popa
inc
push
dec
notb
je
push
pop
inc
mov
push
cmc
mov
jo
ljmp
pop
push
cld
inc
nop
dec
scas
test
repz
lret
test
jo
leave
mov
sub
loop
mov
sar
ret
adc
mov
mov
sbb
cmp
lods
data16
jle
in
lds
and
insb
add
test
xchg
lods
or
mov
stc
pop
push
inc
addr16
add
adc
pop
js
subl
lret
sub
pop
mov
mov
dec
mov
rolb
jl
lret
xchg
popf
orl
insl
dec
push
mov
cmp
popf
and
inc
test
shlb
dec
pop
lahf
fstpt
mov
aad
ja
fcmovnu
int
xchg
push
mov
fwait
lahf
jbe
lret
push
daa
outsb
or
dec
mov
cmp
bound
cmpsl
push
sarl
push
sbb
pop
cmp
xor
das
add
bound
sub
mov
cmpl
adc
mov
pop
daa
ja
or
jnp
jecxz
and
jno
out
pop
mov
add
cmp
dec
popa
dec
mov
jmp
add
xor
lret
cmpsb
inc
arpl
mov
push
adc
push
hlt
out
or
push
jb
aad
sub
sbb
enter
sbb
add
sub
push
pop
inc
out
pop
push
mov
arpl
and
test
or
or
in
cmp
xchg
and
punpcklbw
cmp
adc
inc
cwtl
xchg
daa
sbb
movsl
mov
adc
movsl
push
add
pop
fiaddl
inc
push
mov
pop
scas
loope
sbb
push
mov
ret
push
mov
push
xchg
push
add
pop
cmpsl
aas
add
sub
xchg
test
aam
cs
push
sarl
rol
cmp
fldl
roll
out
pushf
scas
dec
and
popf
jl
push
adc
sub
test
mov
test
addr16
xor
gs
mov
sbb
cwtl
mov
fcomp
add
pop
push
cmp
xor
xor
aaa
adcl
arpl
mov
mov
movsb
repnz
jno
test
movsb
jl
jge
pop
adc
jmp
mov
dec
jb
leave
out
sti
adc
add
std
jne
js
lret
mov
pushl
jae
dec
pop
and
push
inc
add
icebp
dec
sub
data16
add
lret
adc
nop
push
jb
push
sbb
mov
push
push
xchg
mov
pushl
adc
xor
and
xor
add
mov
cmp
test
sbb
pop
jle
jns
cld
stos
test
rolb
add
dec
clc
dec
inc
mov
stos
cmp
addr16
dec
aam
adc
in
or
jmp
add
ljmp
iret
dec
jnp
in
inc
icebp
int3
jge
and
ja
add
add
add
dec
adc
inc
add
push
inc
lcall
movsl
lea
out
std
lcall
call
push
xchg
adc
mov
loope
and
jl
sahf
push
mov
push
movb
xchg
sub
stos
dec
dec
stc
test
pusha
test
aad
aam
push
test
dec
pop
leave
daa
popf
cmp
and
shrb
sub
or
jns
sub
jb
cmc
jno
push
mov
cmp
sbb
or
xor
in
inc
sub
dec
mov
inc
xlat
pop
jne
mov
fsubrp
jo
pop
cmpsl
dec
mov
and
add
orl
stc
cmp
xchg
test
cmp
pop
loopne
jne
adcb
sub
xchg
ljmp
leave
jns
and
add
pop
mov
inc
adc
adc
bound
ret
jp
mov
shlb
inc
add
aam
lahf
pop
lret
cmp
pushf
hlt
sub
leave
loope
sbb
jno
in
mov
sub
and
mov
xor
or
loopne
xlat
inc
add
pop
or
jns
test
lock
imul
mov
icebp
jno
test
jo
dec
lods
int3
mov
xlat
test
pop
push
mov
xchg
jbe
dec
test
test
dec
mov
adc
cmp
lods
inc
xchg
or
push
insl
fldl
cmpsl
in
sub
inc
call
fistpll
push
jnp
sub
ss
pop
enter
mov
aam
mov
aad
and
jo
shrb
xor
jmp
adc
inc
lea
test
in
sbb
popa
adc
dec
test
pop
mov
stos
mov
mov
repnz
dec
ret
scas
add
movsl
pop
sub
flds
adc
mov
xchg
pop
cmp
jo
stos
mov
lock
fisttps
call
mov
mov
add
and
sbbb
mov
in
cvttps2pi
inc
stos
subb
sti
loope
in
mov
cmp
pop
in
mov
inc
roll
sarb
mov
cld
jle
orb
fists
cmp
ja
mov
movsl
into
outsl
roll
loopne
and
sbb
cwtl
nop
outsl
xchg
jo
sub
jl
sbb
cmp
in
test
xchg
ds
xchg
mov
add
jno
jmp
dec
jl
arpl
adc
test
shlb
pop
ds
sar
pop
or
pop
mov
xor
inc
jge
cwtl
rcll
lahf
loope
cwtl
mov
mov
xor
mov
int
movsb
add
cmp
rclb
fidivs
decl
shrl
push
push
sub
jae
sub
push
dec
dec
mov
rcl
sbb
mov
jle
add
jb
inc
mov
dec
adc
loop
and
in
out
mov
loop
xor
push
xchg
dec
mov
and
lcall
xor
jns
cs
or
nop
out
xchg
cmp
mov
adc
gs
fcoml
push
ss
shlb
cmp
stc
mov
clc
inc
add
dec
xorb
pop
cmpl
sub
call
inc
loopne
jmp
pop
int
testl
pushf
dec
mov
push
ss
push
push
das
and
je
sti
push
rolb
mov
inc
add
pushl
fwait
xchg
mov
in
push
aam
ficoms
test
sbb
inc
mov
sbb
es
mov
add
push
push
xor
insb
dec
sbb
push
inc
inc
ljmp
lods
call
jbe
xor
outsl
fisttps
lods
int3
cmc
jbe
xor
add
dec
pop
scas
and
xchg
pushl
jecxz
jecxz
inc
aad
xchg
stc
fists
cmp
fsubrs
cs
mov
cli
test
ja
pushf
push
mov
movsl
cmp
es
xor
sbb
adc
daa
ds
add
mov
push
or
or
sbb
iret
cmp
or
adc
mov
mov
dec
lea
sbb
mov
adc
mov
and
jnp
roll
pushf
sub
jg
sysenter
pop
addr16
mov
or
sbb
push
adc
dec
adc
add
add
out
or
xor
add
mov
int3
mov
inc
test
outsb
into
mov
xchg
in
mov
mov
orl
pop
mov
sub
add
dec
inc
push
xor
ljmp
jl
xchg
sbb
sub
loope
and
rcrb
aaa
dec
imul
or
xor
dec
adc
out
or
adc
jns
mov
mov
add
jl
or
adc
mov
xchg
das
insb
push
sbb
lods
pop
mov
je
xor
pop
je
mov
or
insb
inc
push
inc
aam
fildl
roll
add
adc
shlb
in
dec
stos
out
add
xchg
xchg
jmp
mov
sub
push
test
push
pop
cmc
sub
gs
xlat
stos
inc
in
lcall
es
int3
movsl
inc
push
jecxz
cmp
sbb
push
xchg
bound
mov
or
andl
add
adc
push
inc
outsb
loop
sbb
jns
xchg
mov
mov
fwait
pop
or
pop
jne
dec
call
pusha
aas
jmp
or
or
mov
pusha
or
mov
add
addr16
rolb
pusha
inc
add
mov
js
mov
ret
and
pop
in
shrb
sbb
dec
loope
dec
imul
xor
stos
push
push
out
cmc
inc
push
jmp
push
adc
imul
adc
add
loope
jmp
leave
daa
arpl
sub
lret
xor
inc
repnz
push
inc
jae
mov
mov
add
mov
jmp
and
mov
mov
xlat
xor
jle
clc
incl
imul
mov
out
addr16
inc
test
stos
adcb
mov
jne
mov
add
inc
test
push
aaa
push
decl
inc
inc
out
jbe
je
push
push
push
js
xor
add
cs
loop
incl
sub
repnz
ljmp
shll
add
and
fs
imul
shlb
and
xor
or
pop
jbe
push
jg
aam
or
shll
imul
adc
xor
push
je
lds
aam
adc
ja
ret
xor
inc
rclb
and
xchg
rorb
jmp
jo
adc
add
nop
aam
dec
push
inc
aas
mov
push
or
ljmp
sub
orl
icebp
jne
repnz
dec
add
test
inc
rcrb
push
imul
mov
push
dec
inc
inc
outsl
push
rolb
jge
lahf
cld
je
jns
xor
mov
and
cli
repnz
sub
adc
or
inc
inc
pop
add
hlt
jo
adc
scas
cmpsb
sbb
fs
addr16
and
inc
xor
add
xchg
add
and
shrb
pop
mov
push
add
jl
nop
push
add
sarb
je
in
ret
pop
mov
xor
fmuls
cmp
dec
sbb
int3
cs
push
ja
jp
nop
jmp
movsb
call
out
data16
xor
in
add
enter
ret
jg
pop
or
add
leave
ret
push
std
clc
ljmp
mov
dec
ffreep
aaa
repnz
pop
in
jne
icebp
test
incl
out
pop
sbb
sbb
pop
sub
cltd
cmp
xchg
cs
pop
std
dec
repnz
ljmp
add
jnp
pop
xchg
insl
addr16
jno
and
call
inc
mov
enter
fwait
xchg
lods
pusha
add
cmc
mov
xchg
jmp
cmp
jp
ss
jo
nop
bound
dec
loope
jno
inc
in
popa
and
push
inc
push
mov
fs
repz
int
sbb
jecxz
fistl
inc
cmp
or
in
cmp
mov
pop
test
lea
or
sbb
adc
gs
mov
adc
fadd
inc
shll
cs
test
pop
notb
add
mov
push
inc
cmp
and
adc
out
xchg
pop
movsl
ja
in
xor
add
push
ret
mov
outsl
sub
or
xor
dec
adc
les
xor
sub
cmp
in
stc
mov
enter
ljmp
or
xchg
lods
fists
or
in
mov
pop
pop
mov
aaa
push
icebp
pop
dec
sbb
jne
imul
sbb
sbb
adc
cli
mov
cmc
push
leave
and
jle
add
mov
xor
xor
cmpsl
sub
adc
arpl
std
push
push
push
dec
xor
sarl
push
lahf
xlat
shrl
cmp
fsubs
int3
lods
push
dec
daa
loopne
mov
cmp
dec
sahf
gs
mov
cwtl
push
inc
sbb
mov
jp
in
dec
mov
jne
std
add
lahf
ret
loopne
je
pop
pop
xor
lds
cmpsl
movsl
movsl
loopne
pop
pop
push
mov
xchg
pop
inc
bound
cmpsb
add
repz
xchg
inc
les
mov
jbe
inc
jnp
adc
and
addl
or
mov
mov
add
mov
jns
pushf
pop
pop
pop
enter
xchg
adc
push
adc
pop
enter
add
mov
xchg
cmp
dec
scas
add
popa
sbb
jmp
mov
jae
mov
and
push
shll
out
inc
jbe
sub
adc
test
cmp
inc
add
int
xchg
pop
and
mov
mov
cmp
xlat
dec
daa
cmp
mov
test
push
xlat
jmp
std
decl
inc
add
dec
mov
sti
into
add
into
cltd
jne
dec
addr16
ja
mov
and
fs
pushl
arpl
repz
mov
in
dec
cmp
sbb
xchg
adcb
aam
mov
dec
cmp
pushf
lret
lock
xor
ret
xchg
repz
int3
mov
imul
push
pop
cmc
mov
jae
loopne
ljmp
add
or
sub
sub
dec
sarl
pushf
add
pop
mov
dec
ret
into
addb
adc
jmp
pop
mov
push
xor
mov
shr
xchg
pop
sub
push
push
data16
xchg
sbb
adc
lcall
pop
xor
dec
shlb
dec
push
lret
ret
add
lods
xchg
pop
cmp
and
xchg
or
xor
dec
sbb
aam
in
lret
mov
hlt
outsb
insl
in
fwait
inc
dec
xor
dec
aas
nop
mov
pusha
stos
pushw
je
inc
fs
inc
mov
ret
addr16
js
fimull
ret
dec
bound
ljmp
movsl
xlat
push
pop
out
les
mov
faddp
addr16
vcvtsd2ss
cwtl
movsb
xchg
addr16
and
aad
cmp
or
inc
addr16
mov
xchg
jo
ss
xchg
mov
jle
dec
cmp
xlat
mov
xchg
dec
inc
xchg
cmp
mov
xchg
repnz
jo
frstor
inc
sub
push
cmp
es
test
dec
mov
dec
dec
ja
lods
mov
inc
cmp
into
push
xor
stos
and
enter
fbstp
je
fwait
dec
dec
repz
ja
sub
in
cmp
push
roll
mov
loope
inc
popf
mov
push
movsl
repz
out
push
les
addr16
jne
add
pop
clc
mov
lcall
mov
or
pop
sub
test
test
sub
push
mov
mov
jmp
xorl
add
mov
clc
dec
jmp
dec
jno
jo
addr16
dec
mov
loop
add
aaa
jno
dec
enter
lcall
jbe
neg
add
mov
icebp
aam
shll
mov
mov
inc
sarb
lret
xor
icebp
inc
andb
add
xor
inc
in
dec
imulb
mov
inc
dec
push
inc
or
jg
sti
pop
dec
xor
out
push
xor
cmpsl
loopew,pn
int
stos
fdivs
in
sub
xor
xor
pusha
out
push
push
push
dec
lods
and
orb
subb
or
inc
fmulp
add
mov
repnz
addr16
ljmp
xchg
mov
jbe
xchg
loope
add
inc
hlt
mov
jne
sub
xor
inc
in
push
icebp
push
movsl
dec
aaa
jo
jo
dec
sbb
sbb
push
xor
ja
jns
bound
dec
andl
jp
add
test
push
subb
add
scas
and
aas
xor
push
sub
cli
sbb
add
push
or
mov
outsl
push
pusha
pop
add
mov
mov
enter
adc
adc
push
iret
push
aas
add
pop
push
or
ss
clc
dec
jno
push
mov
aaa
andb
test
xor
cwtl
lret
and
ret
das
test
and
call
and
adc
push
cmpsb
and
mov
sub
sahf
insb
mov
call
xchg
push
out
jb
clc
push
xor
rorl
gs
call
and
push
dec
push
xor
js
xor
lods
mov
mov
rorl
rcrl
jmp
inc
jns
lahf
loope
mov
pop
mov
imul
mov
popa
loope
push
push
jns
inc
mov
mov
jne
ret
dec
inc
xchg
jmp
xor
mov
and
mov
enter
mov
xlat
mov
pop
lret
fistl
mulb
adc
add
es
rclb
pusha
xor
or
js
lea
jno
lret
loop
pushl
lret
loope
pop
sahf
jmp
or
and
lahf
cwtl
mov
sbb
cmc
test
jo
mov
test
jo
mov
mov
push
dec
or
sbbl
or
mov
mov
jmp
xchg
sbb
stc
jns
pop
scas
test
adcl
stc
movsb
cmp
inc
pop
inc
es
dec
cld
xchg
aad
jbe
gs
dec
xchg
xchg
pop
aaa
inc
push
dec
ljmp
js
mov
rorl
push
sbb
in
and
xchg
loope
pushl
push
lcall
mov
jb
and
jne
jo
mov
insb
push
ds
and
outsl
fcmovb
in
push
adc
xor
fsubl
or
xor
fisttpl
cld
decl
sahf
pop
mov
push
jmp
sub
pop
push
pop
jp
adc
fwait
inc
lods
pop
cmp
pusha
cmp
xchg
xor
incb
pop
inc
bound
shrd
inc
mov
mov
pop
or
sbbb
xchg
pop
dec
stc
or
inc
jb
fmul
mov
jb
xchg
push
pop
call
and
push
loop
sub
fs
ret
jo
cld
inc
lret
call
cli
gs
xor
inc
loop
add
dec
je
call
pop
roll
lock
xor
jo
out
pusha
inc
aam
aad
pop
cmp
xor
xlat
inc
stc
add
icebp
sti
outsl
scas
loop
pop
mov
mov
inc
setns
fcmove
test
sub
sbb
ljmp
push
inc
daa
push
andb
fimuls
cmpsl
mul
sub
jae
mov
ja
and
or
jne
clc
out
push
push
scas
xchg
jbe
xchg
mov
jb
imul
lods
out
cld
mov
jne
shrb
jae
decl
rcl
ljmp
sub
or
addl
jmp
in
mov
mov
mov
sarb
insl
lds
push
jno
pop
dec
loopne
and
out
pop
outsl
pop
mov
pop
popa
gs
movsb
cwtl
aas
lods
dec
daa
pop
mov
stos
adc
nop
sub
movb
test
popf
xlat
push
mov
movsb
sbb
dec
push
add
rorb
mov
inc
and
or
scas
fimuls
inc
jbe
cmp
xor
xchg
sbb
movsl
imul
add
add
inc
scas
jo,pn
sbb
xchg
pop
sbb
xor
jno
jb
sbbb
rcll
dec
test
adc
ja
jp
clc
filds
mov
mov
add
xor
fsubrp
ffree
lahf
ret
shlb
mov
pop
push
pop
aas
lea
sub
and
movsl
cwtl
sbb
fstps
push
ja
pushf
pop
dec
mov
mov
out
mov
outsb
inc
push
imul
inc
into
mov
enter
lret
call
and
inc
xchg
push
stos
jp
lea
lods
mov
and
push
jl
jb
dec
enter
push
dec
pop
xchg
repnz
adcb
test
popa
addr16
data16
mov
enter
scas
dec
test
arpl
ljmp
sub
les
test
test
rorb
aaa
inc
dec
cmpl
pusha
jae
lea
int3
mov
push
pop
jbe
xchg
pop
push
push
pop
fnstenv
fsubs
pop
push
and
in
push
clc
sarb
pushf
sahf
lds
xor
daa
mov
mov
pop
fcoms
enter
inc
inc
je
and
add
clc
dec
push
rorb
jg
push
add
xchg
shl
ds
xchg
idivb
or
sub
push
je
dec
jmp
mov
push
loopne
jp
sbb
mov
sbb
sbb
jno
adc
insb
aaa
add
out
popf
movsl
sbb
pop
popa
aam
icebp
mov
jbe
sahf
inc
jl
mov
xor
les
test
dec
jb
xchg
adc
hlt
dec
xor
inc
mov
mov
pop
mov
mov
push
inc
cmp
pop
test
roll
add
ljmp
add
pop
je
pop
xor
out
inc
aaa
and
int3
adc
pop
sbb
push
fs
push
outsl
sbb
scas
cs
mov
mov
loopne
pop
sbb
add
addb
add
adcb
mov
pop
fwait
adc
movsl
cmp
xchg
out
jbe
pop
js
icebp
dec
int
push
mov
in
xor
imul
lea
incl
lods
push
sub
jecxz
test
lret
out
int
add
inc
rorb
cld
ljmp
ds
lret
and
ret
rclb
and
dec
test
sub
sub
rcl
mov
or
xor
sbb
or
nop
jl
addl
shlb
cmp
pop
hlt
jne
pop
js
inc
fstl
orl
rorb
jmp
jle
add
or
dec
push
or
cmp
mov
lds
pop
inc
mov
jg
movsb
pop
mov
divb
jecxz
mov
aad
popf
cwtl
in
mov
push
pop
scas
inc
xchg
adc
xor
pop
icebp
es
test
and
sbb
xor
and
inc
cmp
xor
adc
mov
add
aam
aam
or
or
and
push
addl
in
add
dec
leave
sbbl
adc
roll
xchg
mov
sub
mov
cmp
mov
sub
fildl
sub
cmp
jne
jp
mov
mov
push
iret
xchg
or
mov
xor
stos
je
xchg
fcoms
jmp
cmp
aam
popf
push
nop
dec
or
popf
lcall
addl
dec
call
das
in
sub
popa
fmulp
aam
cmc
and
push
rolb
pop
push
call
add
lock
xchg
mov
aam
and
pop
sub
adc
sahf
or
je
sbb
pushf
and
in
aas
out
xlat
lods
push
cmc
mov
movsb
inc
inc
mov
adc
nop
fistl
xchg
add
cmp
in
mov
dec
inc
outsb
mov
popa
mov
mov
push
leave
xchg
into
icebp
jl
aam
add
inc
mov
jo
inc
mov
cmc
xor
xlat
fisubrs
xchg
sbb
sti
ja
and
add
imul
adc
push
movsl
push
add
push
call
fwait
or
xchg
test
pop
loopne
push
add
movl
adc
dec
sbb
adcl
insl
xchg
mov
jge
cmp
jge
shrb
add
sub
mov
testb
sbb
sbb
pop
stc
call
xor
lds
movsb
jmp
jnp
mov
fcoml
inc
xchg
jp
adc
push
sbb
lods
add
mov
and
xchg
sub
push
add
mull
adc
dec
fsubr
add
leave
mov
mov
push
pop
lea
xor
dec
fwait
cmp
sbb
movsb
push
jne
adc
add
test
repnz
andl
cmc
push
mov
loopne
lock
cmc
xor
je
and
lcall
idiv
pop
mov
addr16
shll
push
lcall
cli
ret
jns
xor
inc
dec
jne
popa
and
pop
movsb
insl
inc
imul
rolb
push
in
enter
daa
xor
test
ss
lods
orb
mov
sub
ljmp
inc
stc
je
ret
jmp
rclb
in
jp
mov
test
js
cmp
je
dec
inc
mov
lods
ja
arpl
inc
es
push
sbbb
imul
and
mov
inc
cmp
call
fildll
xorb
inc
mov
fldenv
or
rcl
mov
push
mov
std
in
jo
jne
mov
popf
fwait
xor
ja
fdivr
add
lds
add
jne
mov
sub
repnz
sbb
mov
jecxz
pushf
dec
sbb
dec
incl
sbb
cwtl
mov
mov
and
add
xchg
ret
adc
or
push
pusha
loope
lock
bound
pop
push
ljmp
mov
outsb
dec
out
push
bound
hlt
rolb
jg
or
call
es
inc
mov
cmpsb
jne
inc
in
ss
test
xorb
adc
loop
dec
xor
or
gs
fldl
mov
sarl
stos
mov
or
jbe
ffreep
inc
daa
je
xor
loope
out
push
pusha
xlat
dec
fdivrl
dec
pop
cmpsl
lock
repz
sarb
pop
fwait
leave
test
sbb
jbe
sbb
cmp
aam
mov
sub
inc
adc
cli
jns
arpl
dec
jnp
movsb
cmp
xchg
cs
iret
jae
and
shrl
jle
pop
push
inc
jnp
nop
lret
jne
jl
dec
ret
dec
pushf
xor
and
jmp
mov
add
inc
dec
adc
sbb
movsl
lcall
out
xchg
int
xchg
push
mov
in
push
and
aad
test
jmp
cltd
sub
xchg
cmp
cmp
pop
out
xchg
inc
sub
iret
mov
nop
enter
jp
aad
dec
insl
add
mov
addr16
inc
pop
enter
jg
jl
dec
adc
cwtl
lea
clc
xor
sub
or
loope
adc
imul
pop
outsb
push
fstl
mov
jne
push
add
adc
std
cmp
mov
int
mov
cltd
pusha
loopne
aad
jno
sbb
in
or
dec
icebp
cmpl
out
iret
out
inc
push
divl
jo
scas
fldcw
movsb
pop
adc
mov
mov
mov
ror
ja
mov
les
enter
test
xor
mov
mov
and
mov
jle
sbb
add
mov
add
cmp
sbb
mov
stos
orb
jo
sti
add
fnstenv
inc
adc
xchg
dec
jno
mov
outsl
idivl
mov
ror
movsl
add
cmp
fistpll
mov
or
xchg
adc
cli
cmp
mov
inc
adc
int
sbb
mov
inc
pop
test
mov
adc
outsb
cmp
incl
xor
inc
push
hlt
and
pusha
sub
jg
pop
sub
call
in
pop
repz
clc
call
pop
adc
inc
movsl
and
sub
orb
add
inc
mov
cmpsb
sub
push
inc
int
add
bound
pop
jb
dec
push
or
lcall
cs
in
outsb
data16
mov
adc
mov
iret
mov
ret
push
mov
mov
inc
mov
popa
dec
push
shll
xor
enter
pusha
xor
mov
inc
mov
jbe
outsb
fiadds
out
cli
jp
sub
in
adc
je
push
mov
xchg
push
inc
fwait
xor
jbe
outsb
fsubl
cmp
in
fs
xor
sbb
push
movb
pop
sub
mov
mov
mov
dec
mov
mov
fwait
pop
shll
dec
xchg
loop
idiv
ljmp
xchg
in
pop
xchg
mov
push
in
inc
cmp
and
daa
push
mov
inc
ja
int3
dec
data16
sbb
hlt
call
jmp
ja
mov
sub
add
call
into
adcl
jmp
addb
testl
inc
xor
xchg
pop
dec
js
adcl
push
test
cli
xor
add
xor
push
xor
dec
loope
arpl
jbe
push
add
jbe
mov
loope
call
dec
repnz
aas
cld
scas
jle
push
imulb
std
scas
dec
emms
imul
ljmp
das
fwait
pushf
imul
lret
dec
dec
push
mov
test
int
mov
mov
mov
lock
dec
push
cmp
cmpsb
js
jl
in
adcb
mov
and
popa
jle
lahf
push
rcll
or
push
adc
rorl
push
inc
clc
pop
mov
fimull
xor
inc
inc
lock
sbb
jl
sub
inc
call
mov
push
or
outsb
loopne
push
sti
add
call
mov
scas
mul
pop
or
push
insb
ja
adc
lea
push
sub
sub
mov
or
popl
int3
dec
ficompl
mov
pop
pop
jno
and
or
cmp
incl
or
pop
outsl
inc
test
fcmove
loopne
stos
out
in
sbb
add
es
loopne
std
push
sbb
push
dec
dec
inc
inc
cmp
adc
or
inc
loop
dec
add
mov
add
sbbb
out
and
jbe
outsl
push
mov
notb
push
enter
xchg
add
dec
and
sahf
mov
jb
and
push
dec
in
or
jmp
push
push
or
dec
je
stos
inc
sbb
xorb
push
mov
imul
xor
pop
sbbl
xchg
sti
mov
xor
jbe
xchg
test
testb
mov
dec
inc
mov
ljmp
add
add
sbb
pop
sub
pushl
lahf
lret
ss
mov
loop
push
lret
sub
mov
add
mov
es
ja
push
jg
ljmp
jo
xlat
mov
jecxz
xchg
pop
loop
fidivs
mov
add
adc
mov
or
pop
push
popf
rol
push
inc
sbb
and
lret
call
sbb
dec
int3
xchg
jg
add
dec
inc
adc
xor
loop
xor
sahf
mov
push
push
push
mov
popa
sar
lcall
inc
push
xor
fldl
rolb
or
xor
xor
jl
sar
push
sbb
out
dec
imul
testl
xor
push
insl
push
mov
stos
shrb
stc
mov
movsb
adc
and
mov
rol
loopne
in
xor
es
adc
xchg
fistps
jmp
jge
xorl
push
mov
icebp
shrl
or
inc
mov
jns
pop
cli
lds
xor
or
inc
adc
and
insb
inc
pop
dec
jo
ss
mov
inc
jb
mov
decl
addb
sub
ja,pt
jp
stc
or
std
out
cli
incl
test
pop
inc
cmp
sti
stos
mov
mov
shl
inc
adc
mov
jle
ret
mov
data16
mov
sub
sub
cld
lea
stos
decl
xchg
inc
cli
ljmp
add
movsl
fbstp
inc
sub
mov
push
jne
mov
push
outsb
shlb
jbe
inc
das
mov
ret
inc
jae
cmp
cmp
clc
add
xor
inc
js
jle
popa
imul
jns
outsl
fidivs
dec
cs
dec
mov
lods
out
gs
jb
inc
in
aad
dec
aaa
stos
inc
inc
jmp
decl
adc
dec
mov
jmp
mov
push
cmc
mov
inc
dec
jo
jo
xor
notb
outsl
das
and
xor
mov
in
call
and
xchg
cmpsl
loope
lret
pop
cs
inc
repnz
fidivrs
push
in
inc
push
insb
push
hlt
or
clc
mov
adc
dec
xor
add
nop
movb
push
test
fistps
push
push
cld
sbb
lcall
adcb
add
clc
jmp
cmpsl
stos
push
dec
movl
loopne
xor
pop
sub
jns
xchg
rcrb
ja
inc
jno
scas
and
cmc
or
jnp
cmp
out
in
xor
int
ret
out
loope
aaa
jp
add
test
jae
inc
js
popa
cmp
ret
xor
iret
jns
pandn
push
dec
jb
mov
aaa
jno
pop
mov
push
addr16
rorb
dec
shlb
dec
add
cmpsl
add
lret
mov
mov
mov
shlb
sub
push
inc
mov
pop
pushl
cmc
push
xor
adc
aaa
push
jg
sbb
lock
inc
jo
cmpsb
push
inc
push
jbe
dec
inc
dec
lret
inc
gs
addb
mov
cmp
mov
scas
and
icebp
call
mov
inc
pusha
cs
inc
sahf
push
arpl
cwtl
test
xchg
lcall
cmpsb
mov
call
add
mov
cmp
cmp
mov
mov
popf
loop
shll
sub
cld
lcall
filds
outsb
cmpb
arpl
clc
jo
xor
mov
testl
je
aaa
sub
inc
loope
fs
dec
pop
push
ljmp
ret
ds
pop
enter
fistps
or
pop
mov
inc
in
mov
bound
shrl
stc
sub
flds
addb
fwait
aas
stos
cld
cli
mov
mov
aad
pushf
lret
repz
out
xor
sahf
inc
mov
daa
subl
bound
ret
push
cltd
fcmovu
ss
insb
loopne
iret
mov
jo
pop
cmp
push
add
clc
lcall
push
outsb
lods
add
jp
adcl
pusha
sub
pop
or
lods
lcall
lcall
adc
inc
dec
mov
cmp
clc
dec
xchg
pop
add
adc
xor
or
idivb
lahf
inc
xlat
add
ret
add
das
xor
cmp
xchg
je
or
popa
xchg
pop
ljmp
push
fiadds
pushf
cmp
cwtl
mov
cmp
pop
push
inc
mov
dec
push
ljmp
data16
ljmp
lock
push
mov
scas
sbb
pushf
ret
mov
mov
and
sbb
out
in
dec
shl
cmpsb
std
insl
dec
int3
inc
jne
in
std
rolb
push
imul
xchg
inc
push
pop
pop
jne
inc
loop
push
mov
push
outsl
pop
dec
dec
inc
push
adc
dec
lcall
pusha
add
push
mov
lods
add
repz
dec
pop
cmp
push
mov
add
ljmp
fmuls
mov
cmp
fdivrp
incl
mov
xor
icebp
mov
lret
jg
sub
loopne
and
push
push
out
inc
insb
push
mov
arpl
inc
lock
imul
inc
imul
vpmacssdd
ja
fistps
test
cmp
jo
stos
mov
or
jbe
fbstp
movsl
xchg
mov
popa
mov
xchg
ljmp
ljmp
stos
lock
lods
sahf
push
fwait
std
sahf
imul
and
jbe
dec
gs
outsb
or
push
insb
aas
sbb
xchg
cmp
xchg
xor
clc
push
in
pushl
ficompl
inc
fcmovbe
fstpt
xorb
movsl
push
mov
shll
cwtl
outsl
inc
jb
cmp
rcl
lret
dec
inc
andb
dec
dec
or
js
xchg
pusha
and
dec
jb
adc
stos
clc
jmp
movsl
cmp
pop
xlat
je
push
pushf
inc
mov
loope
sub
dec
out
push
int3
jmp
cmp
sbbb
cmp
in
pushf
add
inc
cmp
jg
aam
test
jge
jno
inc
mov
enter
add
test
sub
inc
xchg
movsb
jns
jg
cmpsb
stos
clc
test
mov
lds
dec
xchg
and
push
mov
mov
xlat
das
xchg
push
test
xchg
mov
inc
pop
pop
inc
aas
cmp
xchg
or
cld
and
add
cmp
call
mov
jp
rolb
push
rcrl
xchg
add
or
mov
mov
push
dec
je
js
push
insl
clc
cmp
mov
mov
push
insl
outsb
loopne
pop
pop
lret
jo
add
adc
pusha
jge
inc
arpl
mov
cmpsb
and
cmpsl
rclb
sub
stos
jp
ffreep
aad
stos
jecxz
aad
push
adc
ret
jmp
icebp
mov
mov
in
dec
dec
push
subl
bound
mov
loop
js
xor
or
push
ret
and
push
jae
add
lcall
lcall
loopne
out
sbb
sub
adc
add
push
dec
in
jge
mov
stc
mov
inc
stos
rorb
jecxz
mov
dec
aas
push
sub
add
adc
sbb
xor
push
inc
lea
pushf
test
sub
pop
mov
jne
ficoms
roll
addl
jae
rcrl
test
inc
push
inc
push
inc
inc
sub
js
xchg
adc
inc
incl
jmp
clc
push
jns
call
pop
pop
stos
outsb
stos
sti
iret
cmp
and
mov
mov
in
and
inc
push
jbe
test
iret
xor
js
pop
adc
inc
jno
push
jle
addr16
bound
lock
xor
cld
mov
loop
in
sbb
lahf
fstpl
inc
push
packsswb
lods
xchg
outsb
dec
or
cmp
rorl
insb
dec
stos
adc
loope
adc
sub
xor
incl
mov
int3
fs
hlt
andl
mov
pop
mov
call
or
outsl
cmp
inc
paddd
dec
lods
jg
sbb
push
das
pop
mov
addr16
jae
ljmp
push
mov
sbb
call
icebp
jle
lret
rcll
fistl
sub
es
in
loopne
addb
stos
mov
cmc
sbb
fistpll
js
adc
out
cmp
push
lahf
mov
pop
adc
lcall
push
jne
test
ficompl
adc
ss
sarl
iret
add
scas
push
movb
pop
es
sbb
sub
mov
cmp
adc
add
shl
inc
shlb
sub
jg
pop
sub
ss
stc
mov
das
xchg
cwtl
idivb
cmc
adc
jge
push
loopne
call
xchg
add
add
dec
int
mov
fs
push
ret
adc
lods
mov
push
dec
out
pop
push
sbb
ja
or
dec
testb
or
lods
or
fs
pop
fwait
icebp
xchg
add
cmpl
dec
xor
pop
inc
sub
pop
lods
movsl
xor
in
push
lea
ja
mov
repz
stc
ss
repz
pop
inc
dec
pushf
add
inc
pushf
pop
sbb
jge
insb
lods
stos
fimull
push
or
and
orb
jecxz
cli
xchg
out
pop
movsl
test
call
dec
sbb
xchg
sub
ds
test
aas
mov
push
addr16
add
outsb
ds
xor
addr16
xor
cld
jmp
add
repz
inc
fidivs
add
jnp
lea
push
movb
push
cmp
inc
gs
xor
es
mov
stc
xchg
xchg
popa
sub
jo
push
lret
in
lds
addb
testb
inc
das
ljmp
cmpsl
bound
push
push
add
pop
cmpsl
ja
loopne
fstps
mov
xchg
and
xor
add
sub
jns
add
cmp
orl
or
das
nop
ja
and
mov
mov
pop
dec
insl
andl
sbb
add
jae
push
pop
push
push
sbb
push
pop
pop
int3
sub
or
mov
loope
pop
inc
xchg
xlat
mov
aaa
add
add
sbbl
xor
pusha
jecxz
fdivl
sbbl
ja
shr
lds
and
fsubl
sbb
jo
jnp
pushf
ret
fsubl
inc
jmp
xorb
dec
std
jne
jge
and
adc
pop
cmp
and
inc
xor
subl
aam
movsl
fs
loopne
fildl
cmp
aad
inc
adc
daa
cmp
pusha
add
mov
jmp
repz
sbb
or
rcll
es
roll
sbb
shrb
enter
cmp
push
gs
rclb
adc
inc
push
xor
xchg
shrb
sbb
sbb
push
popa
sbb
in
push
sbb
add
les
test
mov
cmpb
inc
adc
push
cmp
movb
movsb
fs
cmp
psrld
loopne
mov
add
leave
rolb
js
mov
jmp
xor
lret
sbb
imul
add
push
or
xor
int
sahf
pop
je
adc
push
sarl
xor
add
movsl
jnp
dec
sbb
sub
cmpsl
mov
mov
mov
cmp
subb
cmpsb
cmpsb
sub
dec
or
xchg
sbb
stos
pop
cmc
adc
xor
test
js
or
fwait
test
fbld
and
xor
add
std
fs
addb
por
sbb
or
mov
int
out
out
shll
xchg
gs
aas
mov
stos
xor
call
movsb
jg
js
int3
pushf
jne
imull
out
inc
mov
fwait
int3
divb
push
jne
mov
inc
cmp
stos
inc
movsl
mov
je
cli
nop
jo
add
movb
mov
bound
add
pop
inc
int3
rclb
imul
add
lock
dec
mov
and
pop
ldmxcsr
sbb
pushl
fmul
js
xchg
sub
mov
rorl
or
xchg
enter
add
movb
fdivrl
dec
js
and
shl
xchg
jbe
aaa
mov
xchg
inc
cmc
decl
gs
inc
outsb
push
xlat
sahf
lahf
jp
add
leave
mov
sub
sub
outsl
jp
loope
test
dec
inc
gs
inc
fwait
hlt
outsl
arpl
ret
arpl
mov
push
neg
sub
sbb
dec
jne
push
mov
das
cmp
cs
inc
and
scas
mov
jnp
push
adc
cli
push
jmp
push
repz
or
out
inc
jb
ss
cmc
and
or
je
ds
mov
filds
xor
ret
not
in
mov
mov
push
lock
sub
push
inc
into
push
jg
adc
out
push
sub
xor
cltd
ret
push
dec
idivl
mov
inc
fists
js
js
mov
add
mov
fwait
mov
xor
inc
lock
jg
push
jp
in
jmp
push
cli
out
mov
inc
add
inc
xchg
sub
cltd
iret
ficoms
frstor
add
push
push
test
movsb
mov
add
test
insl
outsl
bound
dec
add
sbb
push
push
enter
sub
pop
xchg
mov
ret
out
sbb
ret
scas
movsb
jb
mov
add
inc
adcl
ret
movsl
or
or
or
iret
push
inc
and
sub
sbb
adc
xor
loop
scas
in
popf
fs
push
cmp
shrl
mov
dec
shr
movl
lock
jmp
nop
sbb
mov
in
mov
mov
xchg
test
inc
push
or
pop
xor
xchg
dec
aas
inc
insb
fldcw
gs
loop
adc
es
and
ret
jno
add
pop
xor
jl
cmp
rcrl
int
out
xchg
dec
or
mov
das
out
or
adc
es
xor
vsubpd
mov
xor
and
push
lock
adc
mov
int
out
add
fs
test
inc
aam
xchg
mov
lods
jmp
nop
fs
jnp
push
cli
sbb
test
add
sbb
cwtl
mov
pop
push
add
jo,pt
sub
xchg
add
in
dec
and
push
xor
pop
and
imul
mov
cmp
add
inc
dec
test
outsb
dec
sbb
rcl
lock
xchg
adc
or
jo
mov
xchg
cmpsb
inc
test
xchg
pop
mov
sbb
das
lods
mov
mov
inc
or
daa
mov
xor
sbbl
test
jl
aad
inc
or
jns
sbb
pop
dec
das
mov
insb
mov
push
mov
or
int
or
lcall
movsb
es
cmp
outsb
and
xor
or
lcall
imul
sub
test
add
test
inc
popa
xor
mov
cmc
les
repz
push
adc
mov
nop
insl
sbbb
sub
nop
inc
dec
xor
inc
orl
imul
std
xchg
lods
jp
add
dec
fwait
cmp
and
inc
cmp
cmpsb
mov
leave
fdivrl
dec
movsb
or
lret
loopne
jno
int
mov
movsl
adc
out
and
das
adc
and
pop
rcrb
lcall
bound
stos
fnstcw
aam
dec
js
aas
pmaddwd
je
popa
xor
inc
cmp
loopne
xadd
sbb
mov
xor
call
leave
movsb
add
xchg
flds
xor
pop
and
mov
push
sub
add
lock
sub
sub
dec
jbe
and
das
jbe
jb
dec
xor
jo
cmc
jl
inc
sar
pushl
and
cmpl
aaa
inc
push
dec
movsb
mov
shlb
or
dec
and
sbb
push
outsb
push
lea
jg
xor
push
lods
cli
jle
xor
jl
mov
xchg
ret
ljmp
ret
ret
shlb
or
popa
mov
outsb
ss
popa
add
imulb
sub
insb
xchg
add
mov
outsl
sbb
adc
push
dec
and
fisubrs
jmp
pop
pusha
xor
xchg
mov
insb
cld
push
ror
adc
xor
cmp
inc
push
bound
mov
xor
xlat
push
pop
push
dec
xor
dec
add
mov
cmp
movsb
inc
icebp
push
testl
inc
xchg
cmp
hlt
push
add
mov
lock
adc
mov
pop
push
sahf
dec
pop
or
push
adc
incl
lahf
hlt
xchg
shl
and
sbb
jo
movsb
ljmp
sub
sub
sbb
add
cmp
pop
mov
mov
push
dec
pop
dec
adc
add
dec
push
mov
inc
push
mov
push
push
adc
hlt
pop
clc
inc
cmpsb
into
push
push
push
mov
pop
and
and
fsub
mov
mov
cltd
mov
imul
jmp
sbb
lret
xadd
fucomi
aas
pop
pop
popa
pop
je
rcrl
xchg
adc
rolb
jge
dec
pop
pop
stos
push
out
xor
push
push
rcrb
jns
inc
in
popa
xchg
js
imul
push
push
adc
push
ds
ret
mov
mov
add
or
fmuls
sbb
out
jns
push
outsb
out
inc
out
adc
gs
adc
arpl
bound
cmc
push
jbe
mov
pop
insl
or
movsl
outsb
push
xor
dec
mov
lret
clc
shrl
jne
stos
mov
mov
pop
push
pop
inc
cmp
inc
js
and
adc
aam
repnz
es
cld
push
and
push
pop
bound
lcall
add
mov
loope
jo
andl
pop
mov
cmp
adc
sbb
inc
addr16
jl
call
pusha
loope
sub
push
mov
stos
dec
xchg
and
addl
rcll
push
mov
push
cmpsl
push
or
mov
xor
cmpps
lcall
and
add
push
gs
add
lret
cmpsl
cwtl
gs
inc
outsl
loopne
pop
inc
push
ja
mov
and
push
fimuls
aaa
jg
sarb
data16
pop
aam
mov
leave
je
call
push
and
push
dec
inc
divl
addr16
ret
sub
imul
call
js
jne
insb
mov
mov
add
cmc
mov
jmp
fldcw
mov
xchg
push
inc
call
inc
mov
add
aaa
fs
push
dec
out
push
xchg
sbb
push
or
mov
jle
outsl
mov
cmp
lahf
popa
dec
xor
pushl
imul
pop
idiv
jo
mov
adc
pop
cmp
push
clc
gs
push
cld
sbb
out
arpl
scas
in
add
mov
aaa
int3
add
les
jmp
jnp
sbb
lret
cmpb
stos
mov
sti
jg
dec
cld
adc
xor
adc
or
insb
jno
ljmp
je
push
pushl
rolb
mov
jecxz
test
stc
orb
inc
in
je
fiadds
movsb
daa
incb
insl
jmp
sbb
dec
loope
push
sbb
pop
nop
ja
jmp
or
sbb
xchg
outsb
andb
pop
push
inc
adc
outsl
jbe
push
fisubs
int3
add
sbb
add
sub
push
ljmp
jno
pop
sbb
inc
dec
xor
enter
and
daa
add
popa
add
sti
stos
in
inc
rcrl
lods
scas
add
jl
adc
loopne
cmc
add
nop
aas
out
cmp
enter
stos
and
lcall
push
test
stos
mov
jne
inc
loopne
arpl
test
cmpsl
sub
xchg
fisubs
mov
push
dec
and
sbb
std
fistl
lods
push
push
sbb
ja
loope
cmpsb
push
lods
fwait
xlat
imulb
sbb
movsl
mov
cmpsl
add
orl
lret
stos
pop
add
jbe
sbb
mov
or
movsl
lods
jle
orb
stos
lcall
jbe
insl
cmpsb
adc
pop
xchg
shlb
jno
xchg
xor
mulb
mov
sub
aad
add
or
mov
sbb
rcll
scas
gs
jae
cltd
sbb
test
mov
ret
jnp
cs
add
xor
fnstcw
pop
sbb
inc
popf
imul
lods
inc
lea
xor
pop
adc
roll
iret
call
enter
scas
jle
addr16
andb
jnp
addb
xchg
leave
mov
sub
int
mov
imul
js
adcb
push
sub
or
add
mov
imul
scas
test
sahf
roll
pop
cmp
sub
xchg
inc
push
call
add
les
adc
fistpl
leave
adc
rol
lock
scas
or
lret
pop
adcb
jg
or
add
in
pop
push
or
rol
aas
mov
or
fwait
sub
negl
dec
cmp
sub
sub
or
pop
cmpb
call
push
loope
jmp
ss
push
sbbb
ja
shll
orb
cwtl
push
jno
gs
and
xor
ret
dec
jno
movsb
imul
push
xor
and
cs
cmp
js
and
push
inc
push
outsl
in
mov
pop
gs
icebp
fnstenv
add
in
or
stos
push
xlat
sub
outsb
dec
cli
test
cmp
jp,pt
add
and
enter
mov
fs
mov
shll
ficompl
jns
push
ss
imul
inc
mov
lret
lds
mov
je
push
das
ret
adc
sub
pop
lods
jo
cltd
sar
pop
mov
push
in
xlat
shl
dec
push
loope
dec
push
sbb
scas
enter
push
xor
mov
push
mov
add
inc
das
inc
cmp
and
lods
push
pop
push
inc
add
dec
fbld
push
ds
pushf
leave
ret
out
push
jae
xor
cmp
cmp
dec
cltd
jb
test
sti
adc
es
inc
or
gs
jmp
jbe
jle
xor
dec
pushf
rolb
ja
shlb
ret
push
aam
and
inc
jno
and
jmp
mov
rcrb
imul
push
push
movsb
xor
or
inc
dec
jbe
push
add
add
jae
mov
test
je
mov
push
aad
lcall
xchg
fdivl
imul
sarb
dec
scas
movsl
or
test
and
inc
xchg
push
and
dec
dec
sbb
dec
mov
dec
js
jle
ret
sub
push
xor
dec
cltd
inc
insb
add
xor
or
jb
jnp
xor
or
je
xor
sub
pusha
push
ljmp
in
fidivl
inc
mov
sbb
fbld
add
pop
pop
repz
add
adc
out
inc
mov
test
sub
add
add
incb
movsl
xchg
fdivrl
addl
inc
and
loope
into
fsubl
cmp
or
adc
fcomp
rolb
adc
sbb
sbb
push
inc
mov
add
sub
lods
adc
or
mov
loopne
ret
add
ret
or
mov
daa
lea
subl
inc
test
inc
mov
aad
jo
cmp
and
es
or
popf
shr
mov
inc
imul
pop
pop
dec
xlat
pop
sub
mov
sbb
icebp
mov
jb
push
subl
rcl
ljmp
lds
pop
adc
je
jo
add
leave
test
test
adc
mov
or
cmp
lock
mov
shll
mov
ret
pop
mov
adcb
mov
incl
popf
mov
push
or
and
xor
and
dec
mov
and
cltd
adc
pop
inc
mov
sub
and
inc
inc
ljmp
pop
xor
add
addr16
add
outsl
aaa
stos
push
adc
dec
push
cmp
adc
add
inc
mov
add
add
repz
icebp
addl
out
push
shlb
mov
orl
and
mov
mov
xlat
push
pop
jno
push
fwait
xor
add
add
roll
mov
int
test
cmpsl
xlat
jno
or
ss
or
xor
mov
std
pop
ret
and
popa
push
inc
shlb
xor
cmp
ja
mov
lods
jne
insl
mov
mov
rolb
pop
xchg
push
jecxz
or
test
mov
lds
and
jo
loope
mov
mov
push
jo
cmp
or
push
add
call
pop
mov
mov
neg
or
int3
jb
mov
daa
cmp
clc
cli
cmp
ljmp
push
mov
filds
add
pop
and
mov
ss
rorb
dec
jns
jp
jns
push
popa
xchg
imul
inc
mov
leave
ret
clc
add
rorb
iret
lods
loope
aaa
aad
fnsave
cli
mov
bound
push
dec
ret
orb
aam
adc
test
inc
inc
jns
add
data16
mov
outsb
pop
hlt
mov
xchg
ror
jns
sbb
ror
inc
sbb
dec
hlt
shlb
mov
stos
je
test
push
dec
xor
jmp
push
imul
loopne
rcr
inc
lret
add
xor
jmp
jo
test
ljmp
and
lea
decl
pop
cs
jge
daa
or
or
int
push
dec
adc
loopne
add
add
test
jne
push
sub
fildll
inc
pop
imul
and
cmp
mov
xchg
xor
mov
mov
lds
in
loope
push
or
pop
push
inc
mov
jg
push
push
call
outsb
ret
mov
lods
cltd
rolb
fcomps
lock
and
cmp
pop
sub
dec
jg
mov
sub
pop
je
in
mov
or
out
pop
xchg
popf
sbb
push
push
out
pusha
and
and
addr16
shll
out
add
dec
push
push
push
lds
call
hlt
add
cwtl
loopne
call
cmp
arpl
incl
std
in
push
movsb
ret
add
fsqrt
xchg
push
adc
sub
add
mov
dec
dec
inc
adc
sti
lcall
dec
pop
mov
push
cwtl
inc
dec
incl
fs
jne
rclb
and
adc
cmp
test
push
pop
cwtl
xchg
mov
shll
adc
mov
lods
add
push
je
addr16
inc
and
sub
add
mov
cmp
iret
es
xor
inc
dec
push
out
xchg
lret
movsl
pop
aad
std
jmp
push
jecxz
push
call
arpl
jl
mulb
testl
in
cmp
inc
cld
bound
xor
stos
call
cld
jmp
pop
or
pop
lret
aad
cmp
lea
data16
sub
and
mov
jmp
ljmp
and
push
xchg
stc
jns
fwait
push
add
sbb
rorl
inc
add
in
add
subb
stc
xchg
add
ret
bswap
jb
and
jl
test
sub
adc
mov
pop
dec
push
das
fiaddl
bound
xchg
arpl
rcrl
das
jmp
sbbb
dec
fldenv
mov
push
push
and
inc
mov
ja
outsl
push
fists
pushf
mov
or
pushf
xchg
sub
or
xchg
add
sbbl
mov
fcmovb
pop
sub
movb
in
cmpsb
push
bound
jl
sbb
hlt
outsb
sbb
dec
jmp
popf
movsb
cmp
or
push
jecxz
pop
xor
and
sti
jno
and
xor
push
sbb
sub
cmpl
or
adc
inc
and
push
je
dec
pop
stos
mull
push
xchg
scas
push
out
daa
ds
push
sbbb
pusha
pop
mov
les
cltd
loopne
rclb
adc
pop
pop
xor
xchg
jnp
dec
pop
xor
jo
pop
inc
jle
and
mov
xchg
push
add
add
pop
enter
dec
loop
sub
cmpsl
push
aam
xchg
leave
adc
bound
jne
push
xor
out
rclb
dec
call
sahf
inc
test
xchg
push
or
push
sbb
push
xchg
mov
push
dec
call
xchg
mov
and
lock
pop
cs
or
or
mov
xor
sub
loopne
jne
xchg
insl
or
pop
mov
lea
or
push
arpl
xchg
fdivl
rolb
or
add
or
lcall
cmpsb
mov
repnz
sub
test
lds
inc
int
jecxz
push
test
inc
push
xor
insl
cltd
scas
xor
adc
hlt
fisubs
mov
xor
mov
lock
mov
pop
sti
jne
lds
shrl
xor
out
lahf
push
jo
pop
xchg
int3
mov
inc
push
fdiv
jae
adc
shll
int3
andb
dec
inc
jle
jno
lcall
mov
setl
jns
dec
pop
loop
shrb
cmpsb
jbe
icebp
jmp
sahf
jle
sub
dec
and
cs
jno
mov
cmp
jmp
rcl
sbb
mov
pop
bswap
sub
pop
test
adc
cltd
mov
adc
pop
mov
add
cmp
inc
nop
invd
sbb
test
adc
jae
sbb
mov
or
or
mull
lods
stc
xchg
aaa
xor
xchg
add
test
stos
xlat
addl
insl
nop
stos
pop
jp
jmp
sbb
push
push
cmpsb
mov
cmpsb
add
add
push
test
add
xor
sbb
out
mov
add
loope
add
mov
rcr
test
leave
xor
imul
mov
pop
cmpsb
shr
lock
les
sbb
cmp
add
dec
push
mov
xor
and
add
lahf
dec
inc
sbb
adc
and
es
sbb
mov
push
dec
fsubrl
in
pushf
pop
test
add
scas
add
sbb
aas
aas
mov
add
cmc
inc
dec
rol
inc
lahf
inc
ret
roll
inc
push
jne
pop
push
data16
push
sub
dec
aad
pop
sub
jp
and
repz
or
cmpsl
cmp
sbb
adc
add
push
jbe
push
or
jns
xorl
xchg
mov
sbb
inc
dec
jg
lahf
or
or
dec
cs
mov
loop
ficompl
movsb
and
shrb
adc
ret
inc
lock
push
push
lock
and
mov
subl
push
add
loopne
and
xchg
int
cwtl
cmp
pop
dec
lods
fdivs
clc
and
movsl
aad
ljmp
pop
push
or
cmp
and
push
loop
fsub
pop
pop
dec
jne
sub
dec
push
cmp
sub
andl
rolb
push
or
dec
or
or
lods
xchg
or
push
or
aaa
sbb
inc
popa
cmp
stos
jecxz
pop
push
test
loopne
add
orl
cltd
mov
scas
test
mov
push
dec
cwtl
inc
ss
scas
aam
int
cmpsb
or
inc
jl
lds
loope
pop
pop
adc
adc
adc
mov
rorl
sahf
mov
lods
into
test
jne
imul
and
and
pop
jno
pusha
sbb
bound
and
lahf
scas
dec
xchg
cmp
xchg
sub
and
add
mov
or
dec
pop
inc
adc
insb
push
dec
dec
mov
jmp
psllw
out
mov
popa
pushl
xlat
mov
adc
sti
lods
push
psubsb
loope
mov
cmpsl
movsb
mov
ss
mov
int
pop
inc
mov
shll
lret
pop
fldt
inc
fcomps
xor
lock
inc
mov
inc
dec
dec
pop
add
add
repnz
fcomip
incl
xchg
clc
test
loope
shrb
imul
add
sahf
sbbl
out
femms
push
call
jmp
shll
add
je
jne
mov
inc
or
pop
add
lock
add
cmp
je
fstps
test
gs
cmp
xor
enter
nop
sti
cltd
jmp
or
xchg
stos
movsb
mov
repnz
and
push
jns
cmp
cmp
dec
dec
test
sbb
scas
aas
cmp
or
adc
xor
push
adc
mov
pop
pop
xchg
clc
xchg
in
add
in
or
mov
sub
add
cltd
ss
adc
xchg
add
jecxz
rolb
popa
and
adcl
loopne
cwtl
push
out
pop
fdivs
pushf
cmp
addr16
pop
sbb
add
mov
dec
mov
xchg
lret
adc
push
es
repnz
sarl
dec
aam
and
dec
mov
and
mov
lock
pop
pop
cmp
mov
out
xchg
daa
mov
jb
daa
or
in
mov
subl
jae
pop
fldcw
sbb
jl
and
push
daa
stc
test
cmpsb
push
test
pop
shrb
dec
loope
roll
adc
xchg
lds
pop
mov
call
cltd
xchg
add
sub
leave
or
je
pop
mov
xor
add
mull
stos
es
in
mov
dec
lods
add
cmpl
cmpl
jmp
jo
orl
fcoms
adc
test
ljmp
lock
subb
xchg
daa
nop
inc
sarb
out
inc
xor
rolb
popa
call
mov
shll
xor
push
push
xor
rcrl
test
adc
cld
clc
inc
dec
or
pop
movsl
cmpsb
and
test
mov
loopne
fcmovne
pop
dec
cmpb
push
adc
xchg
mov
xchg
rcll
sbb
mov
hlt
add
leave
add
mov
sub
fsubs
mov
sbb
inc
rcll
push
push
sar
pushl
test
ffreep
xlat
pop
imul
ljmp
fwait
icebp
sub
jbe
ret
sbb
add
jae
lcall
or
adc
mov
jmp
out
addr16
inc
mov
mov
sub
cmp
bound
inc
fs
cltd
push
or
pop
in
pop
pusha
out
shr
inc
rclb
test
push
sti
rorl
bound
add
pop
pushl
xchg
mov
pop
cmp
xchg
fisubrl
pop
or
stos
and
inc
mov
and
pop
enter
les
push
lret
cmpsb
imul
and
test
in
lcall
incl
mov
sub
xor
dec
inc
loopne
aad
add
sbb
inc
jbe
push
inc
xchg
pop
and
scas
mov
or
pop
insl
inc
sub
and
jmp
xor
add
sub
adc
inc
pushf
shrb
inc
jmp
icebp
out
stos
mov
mov
enter
push
mov
aaa
or
leave
mov
cs
test
push
movsbl
movl
ret
fstps
push
add
mov
inc
in
lds
dec
pop
das
insb
fmull
fisttpl
gs
fstps
sbb
daa
xor
mov
bound
mov
mov
adc
pop
mov
test
add
aam
inc
movsl
cs
rorl
repz
pop
pop
jns
mov
adc
lods
jo
pop
add
enter
mov
add
fisttps
pop
lea
pushf
sub
das
push
icebp
mov
popa
sub
xchg
iret
xor
orl
imul
test
dec
push
push
loope,pn
movb
dec
xor
adc
int
addl
jne
and
stc
dec
inc
shll
jnp
ret
imul
test
jp
inc
xchg
mov
xor
andb
stos
and
gs
sbb
adc
mov
adc
pop
divl
jge
stc
sbb
jno
ret
add
dec
out
cmp
sbb
daa
aas
xchg
jl
mov
cmpsb
or
mov
stos
das
testl
rol
and
fldl
jmp
ret
popa
pop
inc
inc
inc
ljmp
cmp
bound
das
addb
add
hlt
stc
imul
rclb
inc
or
aam
push
adc
lret
push
jecxz
adc
inc
xor
sub
push
stos
add
or
int3
shrb
xchg
gs
and
add
mov
sub
test
popa
jne
lcall
or
add
sbb
and
shlb
push
cmp
pop
jl
popf
in
mov
fs
dec
std
fdivr
mov
fwait
and
aaa
aam
loopne
adc
adc
stos
test
lods
arpl
pop
pop
pop
lock
test
ljmp
adc
cmp
int
cmp
je
cmp
and
call
nop
les
js
sub
out
mov
sub
aam
add
push
addr16
outsb
jmp
fistps
xchg
cmp
dec
popa
push
sbb
scas
cmp
cmpsl
push
cmp
pop
sbb
fs
jecxz
inc
mov
inc
add
incl
loope
dec
jge
test
mov
das
test
mov
adc
sbb
sub
jb
jge
adc
vprotd
sbb
add
push
jns
lahf
andb
popa
add
cwtl
ss
aaa
push
add
pop
mov
jns
pop
add
or
pop
fmull
ljmp
sbbb
cmp
sbb
add
in
mov
in
xor
inc
aaa
in
rorb
adc
adc
fnstsw
arpl
add
jb
pop
imul
jae
xor
pop
fcomi
inc
xchg
and
mov
pop
adcb
cmpl
cmp
pop
lods
jnp
adc
cmp
inc
xchg
invd
mov
push
xlat
bound
mov
daa
jne
dec
and
jno
int
and
push
pop
punpcklwd
rorb
push
notb
lret
adc
or
shll
sbb
push
nop
sbb
add
cltd
mov
add
mov
lods
push
inc
push
add
lcall
inc
mov
stc
push
nop
movb
jb
add
and
jl
and
add
into
cmp
or
test
mov
or
dec
bound
loop
in
inc
inc
movsl
dec
jo
sbb
and
sbb
or
movsb
out
xor
mov
add
imul
jmp
mov
shrb
in
daa
scas
es
push
sbb
jne
xor
pop
sub
jno
loop
orb
sbb
das
and
xchg
repnz
mov
sub
and
or
mov
in
js
cli
inc
or
into
sub
sbb
lods
aaa
pusha
push
sub
sbb
lds
movsb
mov
in
popa
dec
popf
shll
push
jp
pushf
pop
jp
push
orl
sbbl
pop
lods
jne
add
adc
xor
sub
pusha
arpl
inc
jo
adc
pop
filds
dec
sbb
cmp
push
or
leave
aaa
xchg
in
iret
mov
adc
inc
and
or
inc
pop
sbb
xchg
xchg
ret
cmp
or
out
pushf
lret
mov
loope
jmp
cmpsb
pushf
cmp
cmp
mov
adc
cmp
dec
pushf
sub
lret
lock
mov
push
dec
xor
shrb
xor
mov
shlb
dec
inc
lcall
inc
mov
or
lahf
mov
testl
add
gs
cmp
jae
inc
sti
jmp
fildl
mov
xor
cmp
imul
xchg
push
jle
rorl
mov
inc
jbe
mov
ljmp
sahf
dec
jns
in
pop
loopne
call
lcall
clc
dec
mov
imul
lcall
jge
loop
xchg
clc
mov
sahf
inc
xchg
cli
mov
pop
jmp
jl
roll
or
dec
out
outsb
cmp
inc
dec
jns
dec
std
adc
add
jo
inc
jb
jg
push
dec
push
ret
dec
mov
push
movsl
mov
jb,pn
cs
pop
mov
cmp
icebp
xchg
xchg
mov
push
push
dec
jne
js
sahf
and
ret
inc
push
dec
push
mov
dec
inc
data16
jno
xchg
inc
jno
inc
incl
cmp
dec
jb
dec
aaa
movsb
add
jb
push
sbb
push
les
mov
dec
sbb
jle
test
push
addr16
mov
add
lcall
dec
ss
sahf
push
sahf
and
inc
xor
add
pop
or
mov
ret
pop
leave
into
out
sub
lcall
push
ljmp
clc
lods
add
or
dec
dec
scas
nop
dec
push
push
dec
dec
outsb
aaa
dec
mov
or
js
jb
flds
sbb
lods
mov
fistps
and
dec
mov
mov
popa
and
loop
call
add
sub
movsb
xchg
pop
pop
popa
cli
cmc
adc
std
pop
adc
push
fisubrl
insb
mov
and
push
or
test
arpl
mov
xchg
loop
enter
lret
sbb
ljmp
mov
sub
notb
popa
jbe
push
xchg
loopne
stc
inc
int3
mov
xchg
orb
mov
jmp
dec
inc
dec
add
inc
clc
or
cmp
gs
lcall
rcrb
inc
cmpb
cmpsl
ja
fnstsw
jo
cs
pop
ret
out
incl
in
mov
or
xchg
add
xchg
js
outsl
call
fwait
nop
dec
jno
xor
jo
mov
out
xor
pop
pop
add
jb
faddl
pop
fdiv
idiv
jmp
sub
xor
adc
push
inc
xor
aaa
gs
and
cmp
into
inc
lahf
mov
je
insb
mov
or
cmpsb
jbe
push
or
cmpsb
addr16
movsb
out
hlt
sbb
std
mov
mov
lods
lcall
sub
ljmpw
cld
fadd
or
out
push
dec
insb
xchg
cmp
repnz
xchg
rcrb
aaa
push
cmp
push
xor
push
dec
and
dec
aaa
pop
loopne
xor
or
push
inc
sub
jge
lret
lods
ret
inc
ret
adc
xorl
add
pop
inc
ds
lods
mov
ret
push
popa
mov
or
dec
testb
add
clc
lcall
jg
and
ja
sub
push
rcll
das
adc
jg
incl
mov
imul
jp
outsl
xchg
dec
dec
lods
mov
test
test
pop
fbld
repnz
and
push
sahf
call
jl
dec
mov
xor
or
add
movsl
fcomip
incl
mov
movsl
daa
fdivrs
mov
mov
mov
jbe
out
hlt
inc
mov
mov
decb
dec
jns
add
pop
xchg
jb
inc
xchg
or
xchg
mov
dec
mov
aam
push
clc
testl
test
sbb
nop
adc
cmp
cmpsb
sub
sahf
cmp
xor
test
xor
inc
sbb
cwtl
loop
adc
insl
jb
sub
insl
ljmp
gs
mov
sarb
out
dec
inc
gs
call
ss
or
ret
cmp
shrb
fdivrs
test
cld
clc
xchg
stc
dec
es
aam
cs
xchg
xor
loop
lahf
fstl
jge
or
hlt
jmp
in
inc
xchg
dec
rclb
jne
add
arpl
sbb
mov
dec
cli
jg
dec
ja
and
orps
inc
push
mov
add
fists
xor
loop
jo
dec
rorb
jg
xor
enter
jo
push
push
enter
in
in
pop
bound
iret
mov
clc
ja
dec
std
pusha
out
pop
or
inc
or
dec
pop
daa
adc
cld
jmp
xchg
push
xor
insl
and
xchg
mov
jbe
shlb
sbb
xor
push
or
loope
ja
ljmp
push
or
enter
add
lcall
cmp
outsl
push
test
xchg
shrl
push
cmp
aad
fsubs
push
sub
mov
dec
imul
in
sbb
add
mov
jbe
push
aas
inc
cmp
mov
imul
mov
leave
repnz
sarl
mov
xchg
mov
dec
rolb
ljmp
jnp
pop
pop
aaa
jbe
addr16
add
dec
loopne
dec
shlb
fcoms
clc
pushl
bound
jecxz
jnp
push
aaa
jo
aaa
arpl
imulb
push
mov
jnp
pop
mov
fs
loopne
rorl
xchg
outsb
inc
mov
jp
loope
jae
adcb
out
ljmp
add
outsl
scas
push
mov
or
pop
test
incl
int3
mov
push
pop
fisubs
out
inc
mov
mov
xchg
mov
roll
loopne
popf
aas
pop
or
mov
mov
or
xchg
sub
outsb
mov
pop
jno
jge
add
pop
mov
les
rorl
jno
nop
lods
and
xchg
add
push
inc
jns
mov
pop
or
sti
add
mov
popf
test
ret
mov
andl
jb
sbb
fstpt
or
cmp
pop
repnz
ret
xor
pop
xor
push
movsb
or
dec
sbb
loope
mov
js
rolb
dec
test
mov
dec
mov
sbb
orl
jmp
dec
push
repnz
leave
shll
mov
jo
or
jp
mov
rcr
daa
lahf
mov
das
je
insl
or
mov
imul
lret
ror
xor
orb
lods
outsl
and
shrb
sbbl
add
clc
jl
ljmp
es
dec
cmpsb
xchg
movsl
mov
mov
or
pop
or
mull
jmp
arpl
jl
dec
xor
ljmp
and
add
adc
mov
mov
push
rorb
loope
setns
jmp
mov
or
push
ret
and
rorb
nop
pop
cmp
xorl
dec
mov
test
add
scas
ret
sbb
int
mov
pop
sub
bound
xor
incl
inc
les
xlat
push
cs
mov
cmp
dec
sahf
in
jnp
sahf
cmp
jecxz
add
lcall
js
push
mov
and
jne
lahf
mov
adc
cmp
int3
add
or
jp
aad
push
cs
outsb
xchg
xchg
fwait
lret
adc
je
mov
repz
aad
cmpsb
sub
cmpsb
push
and
xchg
sbb
aas
test
rolb
and
fisttpl
adc
adc
stos
cmpsl
add
repnz
push
add
or
adc
call
mov
mov
pop
sahf
sbb
sahf
jb
mov
psrld
pop
lea
cmp
pop
repz
pop
stc
jae
int3
mov
outsl
test
inc
mov
add
push
arpl
adc
xchg
xor
dec
dec
push
dec
xchg
sub
mov
push
dec
ss
outsl
inc
jo
shrb
jg
jbe
imul
shrl
and
pop
jns
add
in
ss
jmp
sbb
fs
fwait
int
fisubrl
icebp
pushf
inc
gs
lods
sarb
adc
jno
xor
inc
arpl
mov
xor
lock
and
inc
dec
inc
ljmp
lock
mov
jae
add
pop
gs
push
adc
push
lock
jns
lcall
pop
push
repnz
sti
add
mov
cli
pop
adc
pushf
movsl
pusha
cmp
dec
add
dec
scas
add
add
jns
sbb
das
add
out
push
adcl
jmp
es
jmp
push
mov
mov
dec
mov
dec
test
loop
jecxz
or
dec
in
inc
dec
roll
push
jno
fists
jecxz
xchg
fwait
ja
rorb
xor
xlat
inc
jge
mov
cmp
inc
add
enter
loope
adc
test
jmp
mov
or
dec
jae
xor
rcll
sbb
ljmp
inc
jbe
dec
sbb
je
pop
hlt
mov
push
mov
push
mov
pop
dec
inc
mov
imul
inc
mov
flds
xor
xchg
or
orl
add
movb
xchg
int
sub
add
or
scas
enter
add
push
adc
add
inc
fnstenv
das
cmp
ljmp
sbb
mov
lahf
outsl
pop
fstpt
adc
sub
icebp
test
fistpl
xrelease
push
insl
pop
lea
rorl
inc
insb
add
std
xor
xor
sbb
and
mov
add
xor
sti
in
add
mov
mov
or
call
push
into
cmp
xchg
sti
data16
int3
push
mov
mov
popf
rorb
ja
stos
mov
insl
insl
cwtl
jg
das
add
pusha
cmp
mov
xchg
cmp
test
fs
aaa
jecxz
movsb
pusha
aas
xchg
and
xor
or
adc
jp
mov
sbbl
testb
dec
test
push
add
push
xchg
add
inc
mov
push
test
adc
nop
dec
add
adc
test
aam
cmp
loope
mov
push
movl
push
test
xor
sub
call
pop
cmpsl
push
mov
jae
jge
add
loope
mov
test
sbbb
push
nop
ret
cmc
pop
xchg
add
mov
adc
icebp
inc
pop
xorl
add
and
pop
add
jge
mov
loope
incl
cli
std
ret
xor
cmc
ja
lcall
outsw
jecxz
ja
or
scas
push
dec
mov
out
or
push
stos
mov
fiaddl
das
pusha
inc
call
add
xchg
popa
and
ror
call
loopne
test
mov
push
sbb
idivl
js
push
inc
call
insl
popa
gs
xchg
scas
jmp
or
aam
lcall
mov
jmp
inc
sub
pop
fstps
push
in
lcall
inc
push
arpl
pusha
dec
jb
push
test
lret
pushl
and
scas
pusha
cs
lcall
fnstcw
xlat
push
fsubrp
push
popa
mov
jl
inc
jo
data16
cmp
inc
xor
testb
js
sub
add
stos
xchg
rolb
test
hlt
sbb
jo
loope
mov
pop
pop
dec
jmp
jbe
pop
ss
mov
test
movsl
repnz
sbb
jae
ss
add
outsl
mov
out
outsl
inc
dec
mov
fsubrs
sbb
inc
inc
xor
xor
aaa
dec
test
jns
ss
push
mov
fisubl
push
inc
pusha
je
cmp
jg
mov
cmp
xor
adc
arpl
fisttpll
mov
or
incl
cmp
add
add
inc
jno
add
lods
fiaddl
daa
addb
stos
adc
push
test
mov
sub
jmp
js
xor
stos
add
les
std
in
add
or
sarl
sub
push
js
jns
cmp
mov
mov
into
inc
push
jbe
aas
add
mov
cmp
aas
mov
pop
je
fdivr
rcll
into
adc
call
lods
and
inc
aas
sbb
das
imul
add
pop
mov
repnz
jns
cmp
loope
cmp
mov
es
xchg
or
cmp
shll
xchg
mov
dec
sub
pop
pop
sub
fstpt
clc
sbb
test
push
sbb
xor
jmp
mov
xchg
stos
mov
pop
push
push
mov
movhps
cmp
addl
cmp
jne
iret
roll
push
gs
jae
add
push
in
fdivrs
rolb
jns
cltd
sbb
push
movsl
mov
scas
mov
lea
cmp
and
fwait
xor
insl
jl
pop
jl
subb
movsb
inc
or
add
scas
push
or
inc
pcmpgtd
xchg
sbb
adc
push
dec
out
mov
push
pop
xchg
loopne
jno
call
and
add
movb
push
lods
movhlps
or
mov
mov
adc
xchg
ret
add
ficompl
or
enter
das
mov
and
vphsubwd
rcl
test
leave
adc
xchg
xchg
xchg
or
xor
push
sub
outsb
inc
pop
xor
mov
jge
dec
mov
stc
shll
mov
mov
repnz
and
stos
cmp
inc
std
fmul
inc
je
cli
mov
pop
adc
jl
push
sub
inc
rcll
mov
xchg
movsb
sbb
lcall
pop
in
or
lret
push
cmp
dec
dec
out
or
dec
push
xchg
lods
xchg
bound
nop
xor
sbb
adc
or
roll
in
pop
xchg
inc
mov
stos
out
test
mov
sbb
xchg
add
idiv
test
add
add
jo
mov
ss
adc
mov
call
push
or
gs
sub
xor
mov
mov
mov
dec
jmp
or
stc
push
data16
push
inc
cwtl
test
testl
divl
and
inc
and
or
adc
xchg
jmp
or
mov
cmp
adc
xchg
rorl
push
and
jnp
adc
pop
loope
das
addl
push
in
lret
and
and
adcl
loope,pt
add
out
loope
es
es
inc
shrb
inc
shll
inc
sbb
mov
xor
and
sub
push
sbb
bound
dec
adc
cmpsb
nop
pop
js
xchg
adc
scas
fists
cmpsl
mov
dec
mov
sar
push
xchg
dec
push
adc
leave
dec
pop
insb
mov
adc
cmpsl
mov
sarb
adc
addl
push
push
mov
pop
ret
clc
inc
jl
cmpsl
test
fildll
lret
sbb
iret
bound
jmp
adc
lea
xchg
jo
add
mov
mov
lahf
and
shlb
inc
adc
hlt
aaa
adc
xor
inc
dec
fidivl
pushl
sahf
push
xchg
sub
mov
loope
stos
jl
cmpsb
jmp
jmp
cld
call
inc
xchg
les
sub
into
mov
sbb
mov
mov
inc
test
xchg
cli
hlt
xchg
addb
mov
js
pop
mov
stos
js
push
ljmp
dec
add
push
mov
std
add
cwtl
test
rol
jmp
out
mov
sub
jmp
sti
mov
push
dec
insb
mov
jb
fidivl
cld
movb
push
xchg
and
push
inc
fdivl
and
jbe
add
aaa
jp
inc
lahf
fwait
mov
add
push
sbb
sub
mov
pushl
inc
loopne
in
out
push
inc
out
mov
out
loop
fs
adc
aam
or
lock
dec
inc
mov
dec
pop
les
mov
xchg
push
push
data16
cmp
outsl
ljmp
inc
adc
add
dec
data16
sbbb
sub
sbb
incl
jnp
mov
cmp
pushf
test
xor
fs
mov
outsl
pop
add
insl
add
orb
mov
aam
xor
inc
dec
push
jo
mov
jns
fidivrs
sub
mov
jg
fmuls
cmp
shr
sub
xor
test
push
xchg
aaa
sti
enter
insb
mulb
dec
push
je
mov
xor
orl
dec
sbb
dec
pop
fsubr
sub
pusha
outsb
aam
push
lcall
shlb
cmp
nop
mov
push
pop
bound
incl
addl
int3
push
pushf
roll
push
pop
xchg
or
popa
push
jnp
js
popf
push
adc
push
inc
fisttpll
mov
dec
insb
xor
sbb
inc
js
mov
cwtl
mov
lock
push
bound
push
repz
sar
pop
xor
mov
inc
sub
sub
sbb
lcall
fistpll
adc
hlt
dec
inc
xor
xchg
push
outsl
outsl
int
or
push
jb
in
call
mov
pop
idiv
hlt
faddl
and
jmp
imul
push
jmp
into
test
cmp
stc
xchg
rorl
insl
pushf
scas
call
cli
jmp
bound
sbb
xor
xor
pop
inc
add
adc
jae
enter
lock
add
dec
dec
jmp
lahf
push
push
icebp
and
sub
jnp
cli
dec
sbb
outsb
loopne
cli
rcrl
or
cld
rol
roll
addl
js
sbb
rcrl
loop
lret
sbb
inc
jle
or
testb
jbe
loop
add
jg
imulb
stos
adc
mov
stos
bndldx
jmp
mov
fisubrl
lret
jno
dec
les
sbb
test
test
pop
icebp
dec
jo
loopne
fiadds
fsubp
inc
sub
incl
loope
dec
es
cs
out
sbb
inc
ret
and
in
inc
pop
fs
adc
jbe
inc
popf
scas
inc
cld
insl
xor
jp
dec
push
inc
mov
icebp
inc
mov
js
sahf
jg
lcall
mov
daa
xchg
ret
hlt
inc
jo
adc
or
xorb
pop
xor
sub
call
lds
mov
insb
jbe
cmp
inc
andb
xor
lock
inc
sub
mov
addr16
jae
or
cmpsl
pop
std
jo
push
xor
gs
sti
js
fdivr
call
xchg
push
xchg
not
or
fildl
add
push
xchg
arpl
xor
out
xchg
xchg
or
push
dec
lcall
mov
imul
push
and
repnz
mov
clc
ret
lea
loop
add
popf
cld
aam
iret
fbld
mov
xchg
bnd
add
lcall
shl
ja
outsb
enter
dec
cmp
fisubrl
jne
push
dec
sbbb
inc
push
and
and
xor
in
hlt
mov
inc
dec
imul
push
and
inc
dec
push
ss
jbe
xor
ljmp
call
cmpb
dec
sarl
fdivs
fstpt
cld
or
push
ljmp
push
cwtl
ss
xor
dec
push
xor
icebp
fistpll
pop
ret
xor
dec
xchg
mov
repz
lcall
add
dec
je
add
cmc
loopne
arpl
push
lret
ja
test
add
mulb
mov
aad
lret
arpl
arpl
out
mov
mov
mov
fs
jno
push
shlb
inc
inc
dec
insl
push
push
inc
loope
test
loop
insl
pop
in
adcb
mov
xor
inc
mov
xchg
fisubl
ficompl
outsb
jg
mov
imul
adc
lea
cwtl
jo
inc
ljmp
jmp
sbb
add
xchg
pop
fsubr
add
mov
lds
push
movsl
jne
or
stos
sbb
xor
nop
scas
stos
andl
dec
mov
int
push
es
add
push
add
adc
outsl
test
dec
push
dec
test
test
push
push
aaa
leave
xor
mov
test
sti
and
lods
test
sbb
sahf
je
dec
mov
ljmp
and
inc
add
stos
loope
les
out
adc
add
jmp
je
scas
sub
or
adc
sbb
dec
roll
sbb
lds
or
add
dec
mov
mov
cmp
dec
pushf
mov
jp
mov
xchg
dec
or
xlat
sub
cmpsl
decl
mov
jno
inc
mov
inc
jno
adc
roll
pop
sub
lcall
and
sti
and
cmp
add
xor
ror
cmp
mov
cmp
in
cmpl
adc
xchg
iret
cmp
inc
jne
push
xchg
mov
shrb
adc
das
loopne
and
add
flds
ret
pop
das
insb
call
add
and
inc
das
pop
sub
jp
fwait
cmp
mov
imul
adc
or
in
inc
push
lods
push
adc
and
nop
fildll
fsubp
push
pop
xor
add
in
loop
push
and
dec
loop
xor
outsb
lea
add
sub
adc
adc
rolb
addb
cmp
leave
mov
push
cmp
or
das
inc
inc
rcll
jns
pop
pop
jns
mov
sub
stos
iret
jbe
lods
push
add
push
in
mov
mov
inc
adc
daa
lret
jb
and
lods
arpl
aaa
loope
pop
ja
call
es
add
adc
addr16
movb
cmc
inc
inc
jecxz
out
adc
pop
mov
xchg
dec
jo
flds
jns
ljmp
mov
in
aam
imul
sbbb
fucomp
adc
xor
jg
xchg
mov
or
fnstsw
mov
xor
xchg
dec
aaa
ljmp
push
js
movsb
push
xor
pusha
mov
cli
adc
inc
inc
adc
push
or
addb
dec
pop
js
xchg
wbinvd
adc
push
push
add
scas
fs
push
xor
inc
js
outsl
lcall
cltd
stc
xor
jecxz
stos
jle
pop
ss
popa
and
and
sbb
pop
mov
aam
jne
out
imul
and
and
push
xor
cli
shll
sub
push
inc
fists
addr16
pop
inc
and
mov
aam
adc
les
jg
fbstp
shrb
dec
out
icebp
push
call
mov
push
dec
mov
jmp
dec
jne
ljmp
call
dec
loop
ljmp
cmp
outsb
lods
pop
pop
dec
data16
stc
mov
xchg
xor
lahf
sbb
adc
inc
inc
shll
xchg
sbb
dec
cmpsl
sub
push
dec
dec
nop
inc
jg
xorb
push
dec
je
xor
dec
add
inc
inc
mov
scas
fwait
std
popa
pop
int
and
xchg
sti
pop
scas
nop
rcr
stos
cs
push
push
xchg
nop
adc
mov
jbe
inc
pop
fiaddl
cmp
test
sbb
fisubs
test
sub
sub
inc
in
iret
inc
add
add
push
incl
push
lret
cmc
adc
int3
add
divl
sub
cwtl
adc
popf
jnp
sarl
jbe
dec
in
or
nop
push
fsubs
inc
bound
scas
mov
xchg
jle
pop
add
movsb
jb
xchg
sub
jge
loopne
ljmp
xor
stc
xor
call
pop
std
aas
es
out
fmull
push
mov
push
pop
lock
imul
push
sahf
rolb
mov
insb
dec
test
loopne
les
sbb
jle
pop
and
add
push
pop
lock
adcb
data16
xor
inc
cmp
ljmp
fs
test
jnp
test
inc
out
jns
inc
cmp
push
cmp
bound
push
push
add
mov
inc
sub
movsb
inc
insb
push
data16
jg
add
sar
lods
lods
sbb
cmp
out
rcrl
add
lret
insb
xchg
inc
std
or
mov
fdiv
shrl
jo
scas
add
mov
insl
dec
adc
jl
pop
push
add
loopne
or
jb
inc
cmp
or
xchg
xor
jns
bound
data16
cltd
sbb
cmp
jne
dec
dec
lods
popf
mov
mov
sub
inc
and
pop
inc
lahf
inc
mov
ret
pop
aas
push
add
mov
rcl
aaa
jns
testb
shll
cmp
dec
adc
hlt
cwtl
scas
fidivl
xor
dec
aaa
push
ret
mov
mov
ss
push
je
or
imul
icebp
jg
mov
movsb
loopne
mov
mov
add
shrl
clc
inc
inc
icebp
lea
out
sbb
pop
or
push
jle
add
add
faddl
pusha
pop
dec
std
pop
hlt
pushl
insl
or
mov
jae
mov
ret
outsb
jae
push
jecxz
jge
lret
dec
bound
ret
pop
or
ret
xchg
mov
xchg
push
push
inc
lcall
pushf
mov
jg
and
pusha
push
inc
push
add
jmp
decl
jae
xor
mov
imul
dec
fidivl
pop
or
lahf
mov
and
pop
mov
cltd
mov
pop
adc
aas
je
sbbl
repnz
sbb
sbbb
mov
pop
rorb
add
int
pusha
addb
push
dec
pusha
sbb
jne
js
out
in
dec
divb
jbe
jbe
push
mov
jge
bound
sbb
sub
xlat
out
pop
inc
and
xchg
mov
cmpsb
mov
inc
pop
aad
fs
xchg
push
repnz
sbb
fiadds
cmp
or
cmc
jecxz
fst
or
mov
xor
inc
mov
adc
popf
out
pop
adc
mov
ss
loop
push
leave
pop
andl
mov
not
push
or
mov
cmpb
cmpsb
dec
or
icebp
push
addl
fs
or
xor
roll
or
pusha
jne
jecxz
adc
rorb
jne
test
scas
inc
out
mov
inc
icebp
loop
sbb
dec
jecxz
xor
push
shlb
mov
test
es
jnp
xor
js
sub
cmpsl
add
xchg
inc
test
or
mov
mov
adc
push
mov
mov
je
xchg
fildll
cmp
pusha
fiaddl
jno
mov
mov
jae
std
or
push
popf
mov
and
jg
pop
inc
cwtl
lcall
mov
dec
sbb
std
int
pop
inc
test
out
adc
call
popa
jge
pop
add
inc
gs
mov
push
mov
mov
or
push
cmc
push
enter
aad
xchg
sti
or
xor
hlt
int3
ret
xchg
aaa
fcoms
xor
cmp
sbb
loope
cmp
lret
mov
fimuls
push
mov
xor
sub
loope
stc
and
push
dec
add
mov
fsubrs
inc
push
dec
xchg
mov
mov
adc
push
stc
jne
xor
rclb
add
or
dec
jle
ljmp
cmp
imul
stc
xchg
stos
test
push
rolb
jno
and
cmp
xor
out
fmull
xor
xchg
fmull
shrb
je
cltd
enter
jg
or
fwait
jb
cmp
push
mov
outsl
add
addl
pushl
xchg
pusha
cli
pop
cmp
sbb
push
xor
in
daa
test
call
push
jnp
stos
cmc
dec
xor
insl
inc
inc
add
popf
movsl
ret
js
outsb
jle
inc
jno
sbb
jmp
jle
push
arpl
jns
pop
test
mov
insl
mov
jno
jns
ljmp
enter
or
dec
in
sahf
xor
in
rol
loopne
adcl
push
enter
xchg
jg
inc
cmp
sub
push
or
inc
int3
dec
and
dec
jb
mov
dec
jbe
stos
icebp
std
jne
stos
je
loop
ljmp
imul
dec
and
adcb
scas
sub
jmp
pop
test
fimull
mov
lcall
call
inc
xor
in
pop
push
pop
mov
ret
jb
jno
inc
and
dec
push
ljmp
stc
add
xor
and
sti
incl
sub
add
jle
hlt
mov
inc
inc
dec
push
adc
dec
dec
mov
add
inc
dec
inc
scas
sub
rcll
mov
add
loopne
insl
mov
cmc
pushl
stos
dec
adc
mov
adc
rolb
insb
mov
push
aam
test
sub
and
jle
dec
fisubl
push
or
add
leave
lock
cs
insb
dec
inc
mov
push
sahf
push
mov
add
gs
call
outsl
adc
outsb
xchg
int
add
xchg
pop
out
push
lods
insb
pop
aam
adc
xchg
repnz
push
push
inc
inc
mov
jmp
je
aas
add
xchg
mov
test
enter
mov
clc
call
jl
xorb
outsl
dec
loope
cltd
dec
push
inc
ljmp
andb
push
jno
movw
or
push
cmpsb
xor
cld
push
icebp
cwtl
rol
pusha
mov
decb
cld
mov
aas
repz
or
push
push
jge
pop
sub
dec
push
bound
aaa
outsb
popa
jl
push
shlb
push
push
rolb
mov
dec
data16
cmp
call
bound
cmp
sub
hlt
imul
jmp
dec
inc
pop
outsl
sbb
jmp
orb
pusha
stc
add
dec
imul
mov
psrld
test
or
pop
sub
mov
xchg
xchg
and
outsl
dec
and
add
or
and
adc
cmp
shlb
int3
push
push
cltd
add
shl
cltd
lock
or
inc
add
movsb
cmp
shlb
or
loope
xchg
lret
je
or
jmp
rcl
stc
cwtl
and
rolb
adcb
inc
mov
xlat
mov
inc
dec
imul
or
and
nop
dec
jle
stos
sti
stos
jecxz
adc
loop
in
icebp
pop
jne
xchg
jg,pt
inc
and
xor
adc
fs
sub
loop
nop
adc
ret
icebp
call
mov
insb
ret
inc
mul
sbb
push
aad
outsl
and
fldt
dec
gs
xor
push
cltd
loop
sbb
daa
jbe
fdivl
dec
mov
leave
jl
hlt
stos
ret
in
add
add
cmp
dec
pop
out
lods
scas
pop
in
xor
jmp
jl
icebp
xchg
rsm
lods
sub
cmp
mov
or
imul
xor
iret
in
mov
add
add
xlat
insl
or
shll
push
push
push
fcoml
lea
xchg
mov
cmpsb
aam
and
adc
xchg
fwait
in
sbb
jo
popa
pusha
push
push
addl
add
scas
mov
cmpl
sub
stos
xor
jecxz
mov
push
inc
das
hlt
and
push
jbe
mov
mov
push
lea
sti
aaa
mov
test
push
push
inc
and
mov
out
in
add
mov
xor
test
pushf
sbb
sarb
daa
mov
fnstsw
xchg
cmp
movsl
aas
mov
sbb
adc
xchg
xchg
push
add
xor
mov
je
push
inc
sbb
or
mov
and
xchg
push
mov
adc
pop
xchg
nop
inc
ljmp
mov
xor
lods
push
push
cmpsl
mov
ret
gs
add
in
jne
push
push
jbe
or
sub
cltd
loope
js
inc
or
popf
add
cmpl
add
nop
mov
push
dec
daa
cmovle
jnp
fwait
cmp
sbb
xor
inc
mov
adc
dec
shl
leave
mov
xchg
lcall
out
cmp
sub
pushf
cmp
stos
sahf
jg
frstor
pusha
sub
add
test
shrl
call
jecxz
aam
jne
xchg
pop
or
int3
inc
sarb
aas
out
in
push
out
es
inc
cmpsb
or
push
push
outsb
inc
test
rcll
int3
dec
mov
pushf
mov
inc
sbb
mov
call
push
mov
mov
std
cmpl
outsl
aas
sbbb
insb
xorl
mov
pop
push
mov
and
add
push
bound
adc
add
sub
mov
jmp
rcrb
out
dec
dec
loopne
pop
jg
fdivl
adc
sbb
cmp
in
out
int3
lods
pushf
cmc
shlb
test
lock
test
and
push
inc
addb
xor
cmp
lcall
out
pushf
cmp
xor
popa
push
aaa
mov
inc
cmpsl
test
cld
pushl
push
dec
mov
roll
inc
aas
jnp
rol
outsb
dec
xor
insl
sub
daa
cmp
into
jl
add
inc
push
jmp
jle
dec
rol
mov
add
ret
pop
pop
or
cli
repnz
scas
lcall
cmpl
iret
xlat
jno
inc
or
lret
test
cmc
add
int
adc
mov
and
pop
mov
push
xor
inc
daa
dec
inc
std
xchg
pop
loopne
lahf
mov
das
cltd
cmp
fiadds
inc
pop
lea
fs
add
popf
mov
imul
or
and
cs
ret
push
lret
fists
add
dec
jge
data16
and
sub
insb
inc
mov
test
inc
add
or
scas
and
lods
mov
jne
ret
movsl
daa
addl
test
sub
mov
inc
sub
sbb
into
jb
pop
enter
stos
xor
jne
orl
imul
inc
mov
or
pop
adc
inc
aam
arpl
sbb
pop
inc
shl
inc
push
pusha
in
aas
sub
sarb
add
mov
popa
sarb
or
mov
mov
mov
inc
and
add
shrb
cwtl
lods
inc
test
inc
aaa
mov
dec
loop
mov
push
adc
pop
test
fdivrl
sub
adc
xor
jp
movsl
jg
add
add
push
lds
sub
xchg
sbb
mov
add
inc
jb
inc
int
sbb
jno
int
dec
push
push
into
sbb
jecxz
push
nopl
xchg
sbb
fistps
add
add
xchg
and
xor
and
xor
push
jns
add
adc
cmp
mov
adc
sbb
and
mov
and
sub
cmp
bound
or
je
mov
lcall
icebp
mov
add
adc
jo
jmp
and
pop
out
mov
out
andl
iret
pop
sbb
sbb
or
or
and
xor
inc
sti
cmc
add
das
gs
gs
inc
xorl
jmp
sub
push
movsl
push
mov
push
add
test
add
repnz
mov
icebp
lods
adc
and
lea
mov
xor
push
fisubs
jae
repz
cmpsb
fdivrs
call
xchg
shlb
shrl
aas
popa
roll
adc
clc
incl
sub
fwait
mov
inc
pop
pop
adc
xchg
movsl
mov
dec
sub
nop
mov
xchg
je
add
roll
pop
or
and
outsl
inc
xor
ss
aaa
mov
push
cwtl
add
insl
or
mov
fbld
aam
pop
cmpsl
and
inc
int
cmp
popl
std
ret
loope
jo
dec
mov
inc
lahf
adc
push
sub
imul
je
mov
dec
lods
stc
xchg
xchg
push
push
pop
push
lcall
aad
stos
in
nop
xorl
adc
xchg
sbb
dec
mov
loopne
decl
mov
enter
mov
push
add
aas
lahf
mov
dec
fists
mov
inc
ss
shlb
dec
cli
dec
xor
push
sub
mov
aas
sub
cs
decl
inc
push
push
and
and
lahf
push
sbb
es
lret
shl
mov
fs
orl
pop
jno
insl
dec
push
ret
pushw
push
std
adc
sbb
jmp
lcall
hlt
lcall
push
mov
insb
push
cs
mov
jle
std
dec
inc
mov
cltd
nop
cmc
rclb
getsec
mov
hlt
adcb
mov
jg
jle
inc
ret
ss
bound
rcr
dec
push
fadd
inc
les
inc
dec
lock
int3
fadds
mov
shlb
jl
and
inc
mov
inc
push
jo
pop
lock
dec
push
push
dec
inc
pushf
ret
pop
rorb
in
xchg
jns
faddl
sub
decl
push
pusha
test
xchg
cmc
xchg
in
mov
mov
inc
ljmp
stos
sbb
mov
insb
bound
fs
cmpsl
xchg
push
jne
cmp
test
movsb
push
jb
push
jo
sub
insl
stc
dec
mov
pushf
jne
mov
pop
mov
dec
out
fisttpll
je
ret
cltd
mov
mov
insb
std
lahf
out
lahf
ja
push
pop
inc
or
xor
jo
push
fbld
jle
rcll
push
fs
fimull
xlat
mov
outsb
push
xor
jb
aaa
cmp
jbe
and
inc
sbb
in
ljmp
dec
lods
rcrb
test
mov
mov
hlt
xchg
dec
fildl
inc
pop
add
xchg
je
shlb
rorb
incb
inc
js
jp
mov
movsb
mov
push
mov
ss
sahf
fwait
adc
imul
jecxz
and
in
add
xor
cld
inc
xchg
orl
xor
decb
filds
push
and
sbb
ljmp
mov
js
push
xor
and
lods
testl
pusha
mov
wbinvd
mulb
push
or
iret
cmp
out
cli
xor
dec
insl
push
inc
pop
outsb
inc
push
rcrb
or
jmp
je,pn
jo
cmc
dec
outsb
je
add
in
fwait
jl
js
ss
les
mov
hlt
mov
in
mov
push
xor
fmulp
nop
jmp
lds
mov
mov
and
icebp
adc
mov
pop
imul
ret
das
jl
push
dec
mov
fiaddl
dec
data16
lea
test
in
push
jg
sti
cmp
push
xchg
jbe
gs
mov
or
mov
pop
and
pop
sbb
test
aaa
lock
dec
adc
dec
fs
add
cmp
stc
into
pusha
je
and
cld
int
lcall
cmp
mov
jmp
pop
mov
pop
dec
fadd
dec
gs
shlb
cld
js
push
ss
xchg
dec
push
push
int3
testl
push
mov
ret
cli
lods
into
mov
xchg
dec
jecxz
mov
cmc
xchg
mov
pop
mov
incl
pop
fidivrs
fcomps
pop
daa
aam
out
sub
mov
add
stos
ffree
hlt
lods
xor
fs
lret
les
fsubp
nop
pushf
ficoms
call
adc
bound
pop
and
cli
jmp
mov
sbb
or
pushw
rcll
adc
std
and
xchg
lods
dec
xor
imul
jns
std
dec
push
pushf
jecxz
pop
pop
and
mov
xchg
iret
and
jge
and
mov
pop
cwtl
xchg
mov
jae
dec
xchg
adc
dec
or
shll
lds
pushf
push
inc
loopne
frstor
dec
ficoml
cmp
fisttpl
clc
mov
incl
je
stos
stos
mov
outsl
mov
pop
scas
adc
imul
scas
out
leave
addr16
bound
shl
mov
xchg
es
lock
sbb
xchg
jmp
adc
mov
mov
rolb
dec
jb
ret
mov
dec
sub
dec
jle
dec
add
lcall
pusha
mov
fisubl
push
jno
add
and
in
xchg
scas
push
inc
dec
mov
scas
es
test
push
jmp
sub
out
out
sbb
add
js
mov
fbstp
xchg
into
sti
jbe
push
mov
dec
imul
mov
fwait
es
pop
int
mov
imul
aaa
shl
add
sub
cmp
aaa
push
inc
add
loopne
jae
aaa
loopne
repnz
js
jb
adc
popa
jb
lods
fistps
jge
ret
out
and
cltd
mov
pop
ja
ja
xchg
fcomp
pmulhuw
inc
xor
and
out
and
loopne
jbe
add
push
jo
enter
jo
jge
add
rorl
inc
test
lock
jo
jno
repz
mov
add
cmp
daa
dec
pop
fstps
and
inc
push
or
movsl
in
mov
lods
sti
syscall
or
clc
push
es
and
cmp
xchg
lcall
push
lea
pop
add
imul
inc
push
inc
xor
xor
mov
ret
jb
loope
mov
sbb
aad
nop
pop
push
push
mov
mov
nop
push
sbb
outsw
add
add
or
fimull
into
pusha
xchg
inc
ss
dec
mov
popf
in
loop
ljmp
call
xchg
mov
out
sbbb
incl
sub
push
or
mov
clc
clc
xchg
les
mov
bound
cmp
dec
fs
shlb
or
add
push
cmp
lret
xor
cld
mov
sub
cmp
mov
add
mov
dec
icebp
std
mov
mov
sti
and
mov
pop
les
or
ja
cmc
loopne
mov
stc
fs
ret
pop
xchg
incl
push
insb
aad
add
add
jp
jg
and
dec
popa
dec
ds
idivb
das
test
decl
popf
mov
jmp
xchg
sbb
movsl
sub
loopne
push
and
inc
cwtl
bound
pop
sbb
push
ja
roll
enter
rcl
stos
insl
std
inc
cs
imul
dec
mov
push
imul
dec
gs
pushl
loop
lcall
sarl
in
push
jmp
add
jb
xor
cmp
arpl
ret
dec
sub
or
mov
jl
ret
gs
adc
outsb
dec
ret
fcompl
mov
push
xchg
cmp
enter
mov
dec
fdivrs
push
inc
sbb
push
scas
scas
test
or
cmpsl
adc
iret
dec
fnstenv
dec
push
jecxz
or
jbe
dec
outsb
mov
dec
jl
pop
das
jecxz
inc
inc
mov
sbb
adc
in
dec
inc
push
mov
jne
pop
dec
sub
imul
ret
push
sbb
into
inc
fdivr
aas
popa
gs
xor
push
pushf
divl
inc
neg
or
jmp
lcall
arpl
frstor
add
scas
sbb
dec
sub
dec
aaa
pop
vpinsrw
outsl
and
call
add
sbb
fisttpl
sub
decl
scas
ret
leave
or
mov
cmp
add
or
decl
clc
decl
pop
imul
inc
incb
fdiv
js
inc
fnstenv
mov
outsb
xor
daa
andl
jbe
jnp
or
cmp
jbe
aaa
and
imul
sub
and
pusha
imul
cld
aam
sub
jno
sti
xchg
ret
daa
xor
gs
jmp
and
sbb
sub
lcall
adc
lock
incb
pop
lret
and
flds
mov
or
movswl
ret
inc
inc
fsubrl
arpl
inc
insl
add
cmp
shlb
aas
in
cmpb
into
mov
outsl
xor
xor
inc
add
mov
rolb
daa
mov
add
dec
or
movsl
jae
flds
test
jae
xor
xor
push
inc
enter
test
std
lock
pop
sbb
xchg
sti
mov
test
dec
call
add
adc
sbb
add
mov
adc
dec
adc
dec
dec
addr16
fwait
aaa
popa
jnp
incb
jge
xor
pop
mov
dec
push
xlat
rorb
inc
out
push
add
sbb
lahf
inc
pop
call
or
lea
stos
push
xchg
fcoml
bound
push
shlb
add
sub
add
adc
icebp
pop
mov
sub
sbb
or
push
jns
push
leave
add
mov
imul
xor
loope
xchg
or
pop
cmp
test
lcall
inc
or
or
stos
push
cmpsl
add
pop
inc
enter
push
cmp
lock
xchg
mov
ret
push
frstor
dec
jno
pop
add
jl
sbb
xchg
xor
mov
fnstenv
std
xchg
data16
ret
fwait
cmp
and
push
add
mov
test
add
stc
jno
out
mov
imul
and
inc
or
xchg
lahf
mov
mov
xor
jns
pop
iret
or
inc
inc
inc
xchg
cs
jnp
jg
add
adc
sub
addb
xchg
je
fisubrl
inc
cmp
test
xchg
cmp
negb
sub
xor
loopne
push
es
or
les
rorl
or
test
sbb
gs
inc
cmp
or
lret
dec
mov
sbb
push
cld
push
ror
add
js
and
movsb
sub
fwait
mov
stos
insb
xor
push
adc
test
incl
push
aad
sbb
aas
inc
out
fwait
cmp
inc
add
fadds
or
jle
jecxz
popa
loopne
lods
lea
mov
seto
mov
loopne
xchg
cmp
or
movsb
and
push
add
or
dec
xor
loop
pop
inc
mov
rorl
ljmp
int
rorb
testl
popf
push
dec
ret
inc
loop
js
inc
mov
dec
jno
aam
sub
sbb
cli
jno
pop
dec
inc
add
inc
daa
sbb
push
dec
xor
add
inc
dec
jecxz
mov
pop
pop
cmc
decl
mov
loopne
xor
std
pop
fsubs
inc
cmpsl
bound
outsb
jb
jecxz
in
lahf
add
xchg
pop
jle
xor
jae
cwtl
iret
lock
mov
mov
inc
push
push
pop
inc
dec
data16
xor
inc
or
dec
es
dec
or
dec
test
mov
insl
sub
push
pop
adc
push
daa
xorb
stos
dec
test
xchg
mov
mull
sub
mov
add
dec
xor
or
xorb
jmp
xor
sbbl
incl
int3
push
and
xor
add
cs
xchg
xor
les
sbb
push
inc
jae
rcrw
jb
js
xchg
inc
jne
or
hlt
aaa
rcrl
pop
or
pushl
pop
sti
punpcklbw
mov
std
xor
push
je
xlat
cli
or
ret
insb
aas
imul
jp
inc
sub
inc
dec
xchg
or
arpl
jae
push
dec
loopne
sbb
fdiv
lock
lret
adc
push
push
aam
jmp
add
add
push
bound
xchg
pop
test
call
add
ret
push
out
jne
lock
insl
xor
and
push
adc
sub
sub
enter
lahf
lods
movsb
mov
out
pop
ja
movsb
mov
fdivrs
mov
outsl
dec
rorb
fimull
in
dec
inc
adc
push
pusha
jb
filds
mov
dec
sub
mov
rcr
dec
jg
cmc
cmpb
imul
inc
push
sbb
cmp
inc
jmp
adc
pop
add
aam
clc
jmp
pop
repz
mov
cltd
add
xchg
pop
mov
inc
pop
dec
cmp
movsl
scas
or
imul
jl
xchg
int3
inc
arpl
add
es
push
jg
sar
jb
in
out
xor
das
push
pop
push
lods
mov
sbb
mov
call
jne
jne
jae
jno
mov
or
inc
sub
rorl
ss
xor
push
gs
add
mov
jp
or
add
rorl
pop
and
inc
mov
mov
push
dec
and
inc
cld
jmp
loopne
add
cwtl
mov
pusha
xchg
aad
rcl
inc
cmp
addl
jne
mov
push
and
pop
push
lret
cmc
mov
and
mov
subl
sti
sti
sbb
jne
xlat
or
mov
pop
push
fsub
lret
push
std
shrb
stos
jp
jne
inc
push
inc
jmp
insb
dec
stos
fbld
xchg
jle
pop
nop
mov
add
xor
nop
outsl
leave
dec
icebp
pushl
xchg
mov
test
shrl
mov
cli
leave
cli
scas
mov
mov
aad
ret
inc
test
xor
or
jge
mov
push
gs
inc
push
push
adc
cmp
push
inc
insb
jmp
arpl
dec
data16
jne
pop
jo
adc
clc
call
test
mov
ljmp
xor
add
in
cld
outsl
imul
pop
inc
jge
insb
dec
jae
rolb
call
xabort
subl
fs
cli
pop
andl
or
jb
push
sub
mov
sbb
or
inc
inc
push
rcrl
movsl
pop
out
jne
push
inc
ljmp
push
jl
mov
sbb
dec
push
lods
sbb
add
jecxz
fwait
js
shl
mov
es
jecxz
or
mov
stos
sbb
mov
dec
repnz
sbb
es
mov
js
mov
push
and
jg
cs
stos
std
pop
jb
xchg
or
xor
adc
jp
xchg
pop
adc
out
adc
shll
icebp
xor
xchg
bound
dec
mov
arpl
jae
pop
sbbb
mov
xchg
arpl
incb
shrb
dec
push
arpl
fildll
and
stc
addr16
vmovaps
or
aad
call
sbb
test
jp
mov
push
cmp
fsubp
incl
mov
push
inc
inc
xor
inc
rcrb
idiv
orb
mov
dec
inc
push
sub
sahf
incl
ffreep
xlat
mov
leave
mov
push
pop
sub
add
ret
pop
pop
jg
push
jne
xchg
aam
loopne
add
inc
pop
sbb
je
insl
mov
dec
xchg
lock
push
lcall
add
or
arpl
mul
inc
pushl
movaps
andl
lea
and
cmpsl
push
testl
inc
jne
or
call
clc
dec
mov
mov
cld
ret
xor
cmp
inc
mov
addb
repnz
adc
push
jg
mov
push
mov
xchg
incl
fdivs
insl
jnp
sub
pop
dec
mov
or
incb
dec
mov
xor
mov
jmp
fnsave
imul
push
cld
add
xor
pop
or
inc
adc
dec
icebp
or
dec
pop
push
push
sbb
movsb
scas
jb
inc
jmp
repnz
fcompl
ret
test
les
call
aas
fnclex
or
mov
pmaxub
aam
addr16
outsl
xor
inc
dec
loope
add
sub
cld
mov
out
or
in
fdivrs
pop
pop
fimuls
shlb
sub
mov
sbb
pushf
shl
or
pop
fadds
bound
mov
shrb
or
roll
dec
dec
inc
je
pop
inc
std
mov
push
xor
jp
xor
add
in
outsb
loopne
add
ss
es
mov
dec
add
jb
mov
jge
stos
cmpsl
mov
cmp
jp
mov
pop
dec
push
call
rol
mov
int
mov
ja
dec
rolb
cmp
add
and
cld
and
push
pop
test
call
out
out
ss
jmp
sub
nop
aas
and
orb
inc
inc
gs
dec
ljmp
push
xor
cs
mov
mov
shlb
or
jne
lcall
insb
xchg
adc
popf
push
fiaddl
mov
pop
imul
push
pop
pop
lret
add
jmp
pop
in
xorb
fldl
push
push
or
pop
mov
imul
inc
add
and
ja
movsl
dec
push
insb
dec
add
adc
lcall
jo
jl
lods
cmc
or
sbb
lock
jne
lods
ljmp
loope
roll
xor
lret
cmp
cmpsl
notb
mov
int3
mov
aaa
add
icebp
ljmp
sysexit
movsb
stos
pop
stc
dec
lock
add
inc
hlt
mov
lahf
lods
loope
adc
add
js
data16
xchg
or
lea
jbe
fs
cmp
leave
pop
sbb
sar
pop
pop
inc
lahf
inc
test
or
in
push
sbb
cli
add
pop
dec
push
addr16
push
mov
bound
mov
out
aas
push
iret
push
push
aaa
pushf
jns
test
iret
sub
ljmp
loope
xchg
xchg
jns
push
aad
scas
add
jp
shlb
mov
inc
or
dec
nop
pop
in
scas
inc
adc
dec
or
or
dec
inc
jae
push
dec
dec
push
xchg
sbb
fisubl
jae
dec
xor
data16
lcall
fstp
cmp
mov
push
shl
lahf
pusha
imul
adc
push
sar
loope
dec
out
fdivrl
fildll
xor
ret
push
inc
xchg
outsl
pop
jno
jle
inc
jnp
adcb
dec
dec
outsl
or
insb
dec
dec
mov
xor
repnz
call
rclb
xor
or
mov
cld
lds
stos
mov
or
insb
and
push
push
outsl
movaps
repnz
jo
inc
push
insl
adc
dec
push
ret
jo
adc
orl
sar
jmp
sahf
jnp
fimull
mov
mov
in
int
loop
xor
inc
in
dec
in
sub
leave
loope
ljmp
pop
loop
outsl
stos
inc
adc
push
dec
popf
mov
mov
lods
ss
outsb
idivb
mov
pop
iret
out
push
test
hlt
mov
jb
dec
sbb
call
cmp
std
sbb
dec
push
add
sub
fdivrs
pop
dec
fadds
adc
test
mov
dec
jne
push
pop
lret
dec
push
push
mov
ret
dec
bound
ret
es
push
cmp
das
int3
ljmp
sub
int
sub
push
aad
pushl
dec
and
adc
test
cmp
shll
xchg
iret
jbe
push
scas
mov
inc
push
fsubrl
arpl
add
ljmp
pop
icebp
pop
icebp
mov
jmp
test
push
adc
jnp
fisttps
sub
adc
orb
clc
pop
popa
inc
xor
jo
mov
jb
jb
mov
sbb
int3
imul
data16
adc
push
jno
call
sbb
jle
fldln2
mov
aam
mov
lds
movsl
hlt
in
cmc
mov
or
in
or
mov
jnp
mov
shl
cmpsl
jp
dec
into
xchg
inc
js
push
pop
pushl
gs
push
push
outsb
rdmsr
clc
xor
add
fimuls
or
inc
dec
arpl
inc
out
imul
sti
jmp
test
sub
ja
xor
repnz
cmpsl
inc
push
mov
and
call
push
dec
push
data16
push
inc
xor
test
lods
fisubl
ffree
pop
outsb
jbe
inc
inc
cmovbe
fwait
push
aaa
fs
inc
xchg
adc
ficoms
sbb
nop
and
cmp
mov
sar
push
decl
push
mov
out
les
cmpb
dec
xor
jmp
jmp
push
inc
mov
push
lods
jno
sub
subl
stos
dec
pop
ljmp
jo
incl
push
push
sub
ds
mov
ljmp
icebp
mov
std
xchg
sbb
cmpsl
pop
addr16
aaa
fwait
sbb
pop
mov
sti
cmp
sbb
pop
or
dec
imul
add
add
jo
enter
dec
stos
pusha
sub
hlt
movb
cwtl
jbe
inc
push
scas
inc
dec
push
adc
sbb
add
out
jecxz
loop
shlb
cli
loope
push
cmp
jecxz
pop
inc
rorl
jo
je
ljmp
cmpsb
repnz
jbe
int3
push
int3
cmp
cmp
mov
mov
test
imul
mov
push
push
data16
in
adc
push
mov
jle
push
dec
mull
xor
push
sub
sarb
lahf
shlb
stos
dec
add
dec
push
enter
vmread
out
jg
dec
push
mov
fdivp
xor
es
mov
clc
push
push
add
adc
leave
pop
and
or
push
dec
adc
call
xor
mov
dec
push
aaa
je
inc
ss
gs
and
ret
ret
jns
dec
movb
inc
ja
pushl
scas
lret
bound
outsb
push
je
sub
ret
fmuls
shr
xchg
rcrb
inc
push
adc
test
enter
mov
enter
inc
test
lock
mov
sub
test
dec
arpl
jg
and
mov
fdivs
or
sbb
call
adc
xchg
jg
xchg
xchg
sbb
stos
add
push
dec
jnp
sysret
cld
add
out
jno
push
fildl
pop
jl
push
jae
add
pop
jae
dec
imul
out
inc
inc
mov
lods
sub
ficompl
decl
call
ja
mov
sub
pop
adc
inc
and
sbb
leave
adc
jecxz
add
lret
xor
dec
jecxz
push
push
push
decb
imul
inc
inc
insb
js
rcrb
mov
mov
push
mov
stos
mov
push
sti
ss
cmp
cmp
cmp
insl
add
pop
inc
pusha
jb
xor
pop
arpl
mov
cmp
ss
pop
mov
push
xor
mov
push
sub
outsb
orb
push
dec
add
dec
ss
or
pop
dec
xor
fbstp
sbb
inc
dec
les
add
scas
ds
mov
dec
cmp
lods
dec
shrb
and
fcoms
or
or
shrl
movb
mov
ljmp
jbe
xor
sarl
insl
jb
dec
arpl
movsb
mov
push
xor
repnz
mov
cwtl
ljmp
mov
add
js
popf
cld
sub
adc
push
roll
imul
sbb
lahf
mov
dec
js
adc
cmpsb
inc
js
cmp
inc
into
pop
dec
push
sbb
push
test
repnz
jg
mov
pusha
in
in
cmp
cmp
out
xchg
repz
ljmp
pop
rcll
gs
dec
dec
mov
xor
inc
push
shrl
lods
or
sub
push
fwait
add
push
fcomp
xor
or
decl
stos
subb
pop
pop
popa
jo
sbb
xchg
xchg
mov
test
fwait
mov
jnp
push
push
stos
aad
add
inc
movsb
nop
push
outsb
fs
sub
arpl
dec
and
call
push
inc
ret
aas
aas
adc
dec
mov
nop
sub
xchg
cmp
mov
inc
fcmovnb
jae
subb
dec
inc
push
mov
sub
dec
mov
and
cld
dec
outsb
imul
mov
xlat
cmc
aas
test
and
loopne
aad
fucomip
and
pop
test
je
xor
rcrb
fs
pop
or
arpl
loop
push
xor
lret
add
repnz
fiaddl
shrb
jne
insb
insb
mov
mov
cld
xchg
pop
cmp
ja
and
ljmp
scas
and
mov
pop
cld
push
push
inc
outsl
insl
mov
jo
stc
ret
popa
cli
cmc
test
movsb
shlb
repnz
decl
in
inc
pop
ds
xchg
mov
add
dec
mov
sub
push
xchg
xor
fistpll
dec
call
test
dec
push
xrelease
cli
and
pop
shlb
imul
pop
inc
jae
xchg
aam
push
pop
scas
out
or
pusha
mov
pop
xchg
xor
leave
inc
push
sbb
cmpsb
xchg
insl
or
push
mov
pop
dec
add
or
shll
rclb
mov
bound
push
popa
js
jg
xor
dec
iret
pop
pop
push
xchg
int3
and
sub
sahf
dec
cld
das
push
ljmp
insl
inc
xor
inc
je
jg
cmpsl
add
out
push
scas
ret
faddl
push
mov
xchg
lock
bnd
dec
dec
stos
pushl
insl
gs
dec
stos
jbe
pminsw
mov
loope
cld
mov
and
jl
push
push
jbe
pop
arpl
outsb
and
xchg
stos
jae
cs
jo
hlt
add
jae
mov
jl
ljmp
mov
roll
mov
inc
aas
loopne
leave
or
inc
scas
push
ficoml
push
imul
fs
mov
jo,pt
ss
js
push
dec
mov
inc
and
rolb
shl
mov
sbb
push
and
pop
cmpsb
fisttps
rcl
xchg
sub
mov
lcall
xor
jl
filds
push
gs
xor
sub
orb
pop
stos
adc
outsb
insb
cmp
fadds
subl
mov
dec
faddl
mov
inc
add
cli
sub
jg
or
cmp
or
adcl
lock
dec
dec
dec
ss
sbb
mov
cwtl
ficompl
pop
pop
jmp
lods
ret
push
sbb
xor
inc
xor
int3
mov
pop
ss
outsb
push
insl
mov
mov
pop
xchg
imul
fnsave
cmp
add
push
iret
sub
cli
add
or
rcrb
outsl
inc
sbb
icebp
dec
fwait
pop
push
xchg
arpl
incb
ss
xchg
mov
decl
das
mov
jo
shrl
inc
adcb
xchg
mov
sbb
jl
cmp
pop
push
stos
cltd
sar
mov
setbe
jmp
lods
shrb
xor
inc
fcoms
lds
push
ret
xor
inc
repnz
fwait
mov
add
add
sbb
out
nop
leave
shll
dec
push
add
inc
inc
arpl
add
movhps
xor
scas
cmp
imul
lods
scas
push
imul
test
cwtl
ljmp
and
sbb
js
jg
nop
mov
fstl
add
inc
sbb
mov
test
inc
and
adc
sub
or
loope
fidivrs
ret
fsubr
fcmovne
repnz
rcll
jecxz
add
sbb
ret
and
add
fdivr
pop
cmp
add
push
add
sbb
sub
dec
das
add
insb
aam
xchg
xor
sbb
push
clc
inc
fiaddl
xchg
jb
add
test
movaps
pop
adc
roll
and
in
or
push
jg
cmp
pop
int
dec
js
mov
aad
dec
pop
jecxz
pop
leave
scas
pop
cli
das
dec
or
mov
das
aad
loopne
push
mov
xchg
push
or
je
testl
jns
loopne
xchg
sub
stc
or
inc
arpl
test
inc
jae
mov
pop
lds
xorb
or
mov
push
xor
pop
lcall
jo
sbb
jecxz
pop
pushf
js
shrl
les
orb
cli
shrb
jnp
js
cmp
popf
notl
sbb
jmp
pop
cmpsl
out
or
mov
add
inc
xchg
mov
push
xchg
xchg
add
sbb
sub
mov
mov
cmp
sub
dec
mov
in
push
nop
leave
js
stos
cmp
pop
aas
loope
mov
sbb
sbb
insb
shll
push
mov
jl
sar
inc
dec
loope
repz
paddw
in
cmp
add
mov
add
lcall
jne
inc
inc
push
mov
add
inc
je
iret
inc
icebp
jmp
or
adc
push
hlt
inc
addr16
and
sbb
inc
sub
cmp
sub
int
mov
les
sbb
xchg
sub
adc
shrb
movsb
mov
mov
mov
stc
cwtl
mov
mov
push
mov
push
je
jecxz
mov
and
dec
test
mov
mov
int3
mov
in
loope
or
xlat
out
xor
scas
push
leave
mov
lret
pop
das
mov
or
stc
add
insb
je
data16
ljmp
jmp
mov
aad
stos
dec
out
jmp
test
dec
pop
out
cmpsl
jne
lds
fdivrl
mov
inc
sarl
xor
adc
pop
or
cmp
mov
adc
ss
ret
pop
sbb
or
inc
pusha
nop
icebp
repnz
imul
lock
cld
call
insb
mov
shll
cmp
roll
call
nop
aam
std
xor
xor
or
out
push
dec
arpl
outsl
or
xchg
hlt
add
push
jne
lcall
nop
pop
leave
ret
cmp
sub
lret
lds
push
cmp
inc
cmp
loopne
test
push
cli
mov
sarl
arpl
test
fimull
cwtl
inc
loop
add
xor
rcl
push
out
popa
jno
cwtl
pop
loopne
lods
inc
or
or
ja
lods
jae
fists
dec
loop
das
or
ja
inc
inc
cmp
inc
sbb
inc
push
dec
int3
push
inc
add
push
cli
mov
xchg
sti
inc
inc
or
int3
jae
pop
aam
js
frstor
xchg
push
push
int
mov
and
repnz
cmp
sbb
imul
pushl
fs
add
faddl
sub
out
int
sbb
je
outsb
insl
fdivrp
popf
idivb
sbb
ret
inc
lret
jge
add
dec
js
pop
or
jle
add
pushl
loopne
or
gs
jg
icebp
iret
xlat
push
mov
jb
mov
inc
jp
aaa
mov
xor
inc
add
jle
arpl
fdiv
inc
sahf
xchg
push
jno
inc
int
into
rclb
test
cmc
decl
jge
negb
mov
lds
jno
xor
dec
sub
pop
imul
add
sbb
aam
fs
ret
inc
test
sbb
inc
in
or
shlb
or
lock
jp
test
xchg
sar
decl
dec
stc
xchg
lods
push
jp
sub
jnp
out
add
jle
adc
je
adc
jmp
pop
cmp
in
movsb
gs
adc
loopne
pusha
push
add
xchg
sub
push
mov
xor
decl
inc
call
fists
jns
rcr
pop
insl
das
cmp
inc
lods
push
lock
adc
mov
jg
adc
adc
jne
fisubrl
js
jns
aaa
xchg
mov
mov
aas
les
enter
ljmp
sahf
pop
fdivrl
mov
mov
pop
cltd
and
es
jo
adc
cmp
ds
pop
icebp
cmp
into
inc
mov
clc
imul
hlt
xchg
outsl
push
push
fucomip
or
fistpl
in
push
mov
fdiv
pop
fs
cmp
jbe
xor
or
and
inc
cmp
jo
loopne
imul
jno
xchg
fdivl
and
mov
inc
push
xor
sbb
and
push
push
push
and
lcall
lret
pushf
jg
push
push
xor
out
dec
push
fcmovnbe
cmp
out
mov
adc
push
ret
inc
mov
aad
repz
mov
inc
dec
insb
push
xchg
dec
add
outsl
push
push
ret
pop
js
enter
incb
stc
dec
add
int3
test
out
pushf
insb
adc
incl
push
mov
loopne
ret
add
icebp
mov
mov
orl
xor
fisttpl
ss
imul
arpl
mov
inc
lea
sbbb
mov
jb
xor
sbb
into
mov
test
dec
sbb
pop
sub
arpl
add
pop
insb
mov
dec
mov
push
pop
dec
jae
bound
jecxz
imul
add
aaa
pop
lea
add
test
shll
and
and
loopne
decl
int
adc
sbb
mov
inc
adc
fistps
cwtl
bound
ja
jg
outsb
jo
xor
jle
sub
and
in
stc
push
mov
mov
movl
sub
and
jmp
xor
hlt
imul
ret
pop
sbb
or
movb
and
inc
clc
pop
and
into
clc
mov
lods
mov
mov
shl
mov
jp
jmp
mov
xor
sar
shrb
sbb
push
test
movsb
lods
cmp
shll
arpl
mov
sub
inc
pop
sbb
inc
xchg
adc
in
scas
add
add
sbb
adc
sub
xchg
cmp
xor
xchg
adc
test
xor
aas
mov
sbb
nop
adc
pushf
jnp
test
dec
cli
roll
lea
addr16
rclb
mov
sub
mov
or
push
sbb
xchg
mov
inc
and
xor
ljmp
cmp
xorl
das
es
xor
enter
cmpsb
divl
or
pop
leave
dec
loop
cmp
pushl
jb
in
pop
cs
sub
adc
dec
push
out
mov
pop
add
mov
divl
xchg
or
lods
outsb
mov
sbb
and
fcom
push
mov
jno
test
jg
mov
in
pop
mov
mov
or
aam
sti
mov
jne
mov
adc
xchg
pop
jne
jp
sub
sbb
pop
popf
mov
scas
cmp
rol
add
in
out
mov
daa
inc
xor
dec
dec
scas
inc
push
in
sbbb
or
or
mov
adc
adc
lock
add
sub
es
mov
sbb
test
xor
test
mov
mov
mov
add
and
inc
inc
jecxz
or
xchg
sub
and
in
rolb
rorb
inc
and
in
inc
inc
fs
pop
rcl
jno
xchg
movsb
or
inc
push
xchg
jecxz
jo
das
mov
outsl
sbb
fimuls
push
in
pop
add
lods
add
push
lea
inc
shll
mov
jns
test
sub
pop
pop
dec
cmp
aas
mov
addl
pop
pop
push
loop
push
inc
cmp
in
fildl
or
setl
or
add
push
mov
sbb
sub
add
loopne
pushl
test
subb
mov
enter
sub
mov
sub
add
sub
call
inc
lret
icebp
xchg
mov
test
adc
lcall
sub
shlb
push
jecxz
dec
push
and
push
dec
addr16
dec
cmp
idivl
adcl
and
xchg
jle
shrb
xor
dec
push
jge
pop
lahf
fs
add
lret
clc
call
mov
mov
scas
adc
xchg
sbb
imul
shlb
jb
cld
test
dec
mov
lods
movl
add
inc
dec
rclb
dec
fwait
xchg
cli
jg
ret
ja
cmpsb
sahf
xor
ja
cmpsb
pop
sti
and
clc
adc
mov
lret
push
mov
sub
dec
rorb
xor
xchg
and
arpl
sbb
jmp
test
es
leave
fnstsw
sbbb
pop
xchg
or
popa
out
sbb
dec
mov
insl
add
jle
push
loopne
fidivl
inc
push
ret
lods
inc
push
jo
push
incl
in
push
pop
test
mov
sub
jmp
jmp
jmp
mov
fpatan
cmp
push
inc
adc
cli
jl
cld
add
add
icebp
inc
dec
inc
insl
sbb
ja
mov
icebp
cld
orb
popa
pusha
or
add
mov
pop
push
sahf
inc
fwait
test
in
sbb
loop
push
aaa
pop
insl
adc
mov
xor
jns
dec
ret
mov
xchg
fisubrs
push
pusha
mov
mov
loope
sub
add
sbb
lods
dec
je
jo
popl
popa
jmp
jp
sub
fwait
les
jbe
add
or
push
pop
mov
push
enter
lea
js
es
mov
jmp
js
out
add
dec
inc
xor
mov
push
out
inc
jle
add
push
inc
xor
fcoms
decl
ljmp
xchg
xchg
insb
xchg
sub
lock
jmp
ljmp
in
mov
iret
mov
push
testb
dec
cwtl
pusha
xchg
push
les
xchg
mov
pop
lahf
sbb
sub
and
add
and
push
add
add
xor
mov
inc
push
int3
cltd
test
inc
insl
jle
movsb
adc
push
sub
lahf
add
lcall
lods
push
scas
pop
fnsave
push
in
add
scas
or
dec
sub
js
mov
leave
mov
pop
cwtl
inc
inc
adcl
pop
inc
push
popf
movsb
ljmp
dec
pop
cli
dec
mov
xlat
cltd
or
les
pop
add
stos
jecxz
jns
nop
dec
cs
movsl
dec
dec
ret
and
inc
xor
and
dec
test
sbb
rolb
or
fcmove
mov
pop
xor
push
ret
rcll
in
es
les
into
orl
roll
or
in
sub
ljmp
sub
out
dec
ss
sbb
inc
jne
mov
and
add
xchg
jge
mov
or
fdiv
add
mov
sub
pop
or
lea
cwtl
sbb
mov
movsl
mov
push
sbb
movsl
inc
outsl
adcl
adc
fsubr
je
mov
xchg
enter
dec
pop
pop
cmp
jne
mov
push
pause
dec
dec
push
hlt
pusha
mov
sbb
jo
add
ficoms
mov
mov
or
cmpb
inc
scas
push
or
andb
int
push
push
pop
pushf
sbb
enter
rcr
push
jl
sbb
add
and
mov
in
imul
leave
xchg
sahf
mov
and
fwait
sub
add
pushf
loope
or
pusha
add
addr16
dec
adc
scas
mov
adc
in
and
sbb
rcll
jg
push
loopne
in
dec
fadds
sub
push
test
cwtl
adc
adc
add
sub
adc
clc
incl
pop
test
and
cmpsb
movsb
js
shl
icebp
inc
xchg
insl
loopne
call
mov
lods
roll
loopne
cld
pop
sub
cwtl
inc
and
popfw
or
push
push
cmp
das
movsb
pusha
inc
pushf
sbb
cmpb
outsb
push
js
insl
jbe
pop
std
mov
push
add
pop
mov
pop
pop
adc
decl
loop,pn
fwait
out
adc
es
call
add
lret
sarb
cmpsb
jle
ret
xchg
sbb
sbb
push
xchg
mov
inc
dec
lods
pushf
inc
call
movl
inc
outsw
imul
mov
shll
pcmpgtd
xlat
popf
push
sbbl
and
mov
lods
push
ret
jmp
sub
add
and
xchg
mov
popa
dec
jno
out
cltd
mov
shl
push
cmp
mov
push
mov
dec
mov
lcall
xor
test
aas
adc
xchg
shll
cmp
subb
imul
dec
dec
push
clc
enter
dec
call
adc
mov
pop
adc
jae
push
idivb
xchg
call
and
pop
out
scas
jg
pop
add
sbb
js
mov
inc
add
sbb
bound
and
daa
lods
pop
ret
sub
mov
loope
incb
xor
cwtl
xchg
popa
xchg
stos
lods
add
and
push
inc
inc
mov
dec
imul
outsb
or
xor
dec
xchg
movsb
fsub
scas
cmpl
loopne
adc
ret
sbb
pop
imul
pop
adc
arpl
fs
push
push
add
mov
test
sbb
inc
mov
xchg
push
ja
incl
push
loope
jae
xchg
outsb
pop
pushf
in
or
fnstenv
rcll
je
jmp
push
add
pcmpeqd
jl
fiadds
push
jbe
bound
xor
cmp
stc
add
clc
mov
fmull
jbe
fsubs
lret
lock
push
divb
pop
and
sar
cmp
scas
ss
push
pop
pushf
mov
jb
mov
inc
add
fs
cmp
pop
loope
dec
push
mov
cmc
lahf
xchg
and
incl
outsb
and
xchg
dec
or
adc
fcmovb
fiaddl
jl
out
loopne
pusha
mov
dec
cli
sahf
jmp
rol
aam
or
mov
or
mov
loopne
xor
aam
add
call
cmpsb
sti
out
dec
push
dec
dec
ret
mov
xor
or
mov
test
stos
adc
push
xchg
inc
lret
cmpsb
flds
adc
daa
inc
iret
ja
nop
lods
inc
inc
dec
nop
std
push
and
push
mov
dec
ds
jb
mov
dec
imul
inc
pusha
int3
adc
ljmp
push
cmpsb
lret
inc
adcb
sub
bound
ret
mov
je
ja
mov
fdivr
mov
xlat
aam
mull
jne
int
push
test
xlat
push
daa
add
jecxz
inc
adc
xor
sub
mov
xchg
dec
jne
sub
adc
sbb
jae
cli
push
mov
imul
mov
xor
and
popa
popa
dec
dec
pop
jo
in
popa
push
lret
sbb
jecxz
or
adc
push
bound
mov
push
arpl
gs
jmp
push
enter
jne
mov
pop
pop
xor
or
lock
dec
test
adc
stos
xchg
cmp
sub
lea
mov
and
inc
and
mov
lea
test
pusha
cmp
adc
jge
mov
scas
cmp
pop
lods
inc
lock
push
ret
lods
sbb
mov
addl
jg
fidivl
xchg
xchg
pop
adc
arpl
int
add
or
adc
add
mov
mov
adcb
sbbb
add
xchg
sub
pop
jns
sub
pop
mov
subb
repz
xor
inc
arpl
addl
inc
adc
int
lds
dec
dec
push
xchg
jne
mov
aad
sbb
mov
cmc
sub
popa
push
mov
mov
mov
imul
push
sub
enter
outsl
js
cwtl
rcll
adc
fistps
mov
add
push
enter
mov
dec
pop
ja
and
subb
push
leave
rorl
jo
clc
sbb
rclb
push
fadds
jno
mov
pushf
adc
push
sarb
hlt
test
jno
pop
mov
or
push
ffree
pushf
stos
push
test
or
push
andl
aad
sub
lea
mov
add
mov
add
inc
aas
dec
outsl
call
and
or
loop
and
dec
xchg
mov
inc
jmp
jle
cmc
xchg
xchg
push
xor
lds
ja
clc
sub
sub
jbe
js
dec
sahf
add
subl
cmpsb
les
inc
je
dec
aaa
dec
mov
int3
add
pop
push
jbe
out
push
dec
cs
jmp
mov
popf
clc
pushf
jecxz
xor
mov
cli
fistps
lcall
and
jo
inc
lock
jecxz
push
inc
outsb
test
inc
push
push
jg
sahf
sbb
lods
xchg
dec
dec
push
add
ss
sbb
push
pop
icebp
sub
mov
lahf
jg
fcmovnb
jecxz
xchg
xlat
lcall
cmc
shl
addr16
sbb
push
inc
or
mov
pop
xchg
popf
xor
add
sti
ds
xor
cli
das
es
xchg
je
sub
xor
add
mov
sub
mov
hlt
mov
jecxz
mov
or
dec
into
xchg
xchg
or
fstl
mov
lea
jle
xor
push
xchg
enter
adc
out
cmp
push
outsb
push
dec
pop
inc
mov
addr16
jl
andb
addr16
mov
lock
decl
dec
and
inc
cli
out
jo
jge
aad
ficomps
inc
testl
insb
data16
arpl
popl
insb
cmp
xor
lock
push
shrb
xor
ljmp
and
leave
jmp
mov
aaa
movhlps
out
and
daa
sub
cmpsl
mov
cmp
cmp
push
push
int3
jno
decl
cwtl
jne
mov
js
iret
out
mov
ret
cmpsb
lods
mov
lea
imul
inc
or
mov
push
fcomps
mov
push
pop
jns
push
push
enter
imul
inc
mov
push
insl
xchg
jge
dec
xor
jae
dec
lcall
xor
pop
dec
aam
arpl
test
es
pushl
jbe
mov
test
imul
adc
jp
adc
and
ljmp
adcb
test
push
popa
inc
xchg
cmp
arpl
popf
lods
dec
mov
cmpsb
sub
js
addr16
push
jno
and
mov
inc
popa
sbb
push
add
rclb
push
xchg
jg
arpl
mov
imul
data16
std
add
or
dec
outsb
or
push
xor
out
les
icebp
xchg
mov
dec
xchg
add
stos
in
loopne
str
jne
adcb
jmp
mov
scas
dec
pushf
bound
push
repnz
icebp
fwait
adc
adc
iret
les
push
and
nop
mov
add
sbb
adc
test
push
sbb
in
data16
out
mov
pop
mov
movsb
imul
or
xchg
loope
data16
jg
jno
dec
inc
dec
cs
xchg
sbb
push
add
fistpll
mov
fisubs
lods
imul
and
or
je
loop
mov
loopne
pop
sbb
jl
cmp
push
push
movsb
and
xor
jae
or
mov
add
and
movsl
aad
mov
adc
in
je
loop
movsb
dec
xchg
pusha
lds
sub
bound
shr
cmp
push
mov
cmp
jecxz
inc
cmp
push
add
xchg
leave
sbb
mov
dec
adc
cmp
xor
xchg
xor
push
and
movsb
rolb
test
repnz
stos
mov
push
das
lock
sub
push
and
inc
xor
testl
xchg
rorb
xor
stc
or
int
mov
fsts
nop
cli
loopne
xor
cmpl
pop
sbb
or
mov
or
xchg
out
mov
adc
cmp
shlb
shrl
les
pop
inc
inc
test
popa
stc
stos
or
aad
mov
add
inc
insb
xlat
dec
or
pop
popa
xchg
scas
mov
in
or
dec
mov
out
dec
sub
xor
and
arpl
adc
sub
mov
ret
xor
ret
push
or
inc
movsl
sub
xchg
fwait
test
lea
aaa
mov
jae
jo
iret
push
movsl
xchg
je
loopne
push
mov
stos
jb
mov
test
enter
xor
aam
adc
and
shl
add
pop
add
cmp
add
movsl
jo
dec
mov
int3
ret
dec
xchg
daa
add
xchg
inc
repnz
adc
jbe
pop
addr16
loope
mov
mov
push
inc
mov
shlb
and
push
sub
jno
js
push
inc
fisubrs
adc
in
mov
lock
push
repnz
add
ljmp
notl
push
cltd
fcoms
rclb
rcrb
movsb
popf
cmpsb
dec
sbb
inc
ds
adc
inc
loope
cmpsb
mov
dec
adcl
add
insl
mov
adc
or
stos
inc
jns
push
xor
repz
fs
nop
addr16
push
decl
clc
or
or
test
xchg
xchg
popf
dec
in
stc
scas
test
push
push
xor
mov
cmc
cmp
ds
in
push
subb
pop
push
dec
adc
cmp
pop
pop
cli
mov
xchg
shr
sar
xor
jmp
jno
adc
mov
jmp
xchg
ss
push
and
inc
aam
inc
inc
push
xlat
dec
lret
in
xor
sub
xchg
ret
fs
jne
shlb
mov
push
and
adc
outsb
tzmsk
sbb
or
loope
add
or
and
jne
sub
nop
nop
mov
shrl
add
adc
xor
rdmsr
ds
pop
loopne
adc
mov
mov
icebp
jns
daa
test
jno
push
aaa
paddd
dec
xor
js
fdivl
adc
je
pop
fnstsw
or
js
jg
test
push
and
js
adc
mov
inc
xchg
sbb
mov
lods
and
fistpll
enter
sbb
mov
mov
ljmp
arpl
mov
divl
push
mov
sbb
jmp
dec
loope
xor
lret
dec
repz
test
push
psubq
push
int
cmp
cmp
and
jo
cmpb
shll
or
xor
or
mov
int
movsl
fst
lret
mov
out
push
push
mov
xchg
and
or
mov
fs
pusha
outsl
mov
inc
push
sbb
push
or
mov
loop
pop
jge
pop
or
outsb
cwtl
jle
mov
aas
adc
scas
and
mov
inc
inc
in
mov
stos
mov
daa
sahf
ficompl
aad
addl
dec
cmc
js
test
xor
aam
add
sbb
push
xchg
sar
leave
stos
nop
push
mov
fcomps
or
push
ret
jecxz
inc
cwtl
ss
or
mov
xor
adc
inc
test
cld
and
int
sub
jnp
xchg
jne
sbb
push
add
mov
push
leave
inc
out
jmp
jo
cmp
mov
insb
mov
pushl
sub
das
and
or
pop
fisttps
test
push
je
lods
push
xchg
cwtl
adc
jo
or
ret
dec
push
add
and
je
add
lahf
subb
add
daa
ss
outsl
movsb
mov
or
inc
mov
lcall
jnp
mov
das
sub
add
push
sar
ds
xchg
push
sbb
mov
add
imul
dec
sbb
pop
add
mov
push
inc
dec
inc
mov
js
cmp
inc
inc
push
sub
jmp
xor
xchg
in
xor
js,pt
call
movsl
push
push
movsl
or
inc
hlt
inc
dec
push
and
inc
push
dec
add
rorb
inc
jmp
dec
jbe
ss
push
insl
bound
push
dec
dec
add
or
loop
mov
pop
lods
fmull
pop
lods
int3
add
mov
mov
adc
dec
cli
push
nop
xchg
pop
cmp
push
or
gs
sbb
add
and
jmp
in
push
jbe
pusha
loop
push
sub
aaa
jo
push
add
or
decl
push
hlt
jecxz
and
ljmp
inc
dec
lods
lret
jmp
mov
adc
mov
inc
and
ss
jo
sti
adc
ds
aam
addb
fisubrl
inc
dec
call
dec
rcrb
ret
sub
push
push
xchg
add
mov
ret
sub
adc
jg
aam
bound
inc
xchg
stc
in
ret
call
pop
outsl
inc
mov
in
pop
or
fs
push
ja
outsl
jb
ficomps
dec
inc
mov
dec
les
push
gs
or
push
cld
fisubs
pop
leave
adc
mov
pop
loopne
outsl
test
pop
or
fwait
mov
jne
fldenv
mov
mov
arpl
push
push
push
cmp
sbb
ret
insl
loopne
fisttpl
lcall
je
enter
inc
movsl
movsb
and
fistpll
lock
inc
dec
rclb
in
inc
clc
aam
or
dec
pop
push
ljmp
inc
outsl
add
icebp
rolb
fstl
mov
mov
inc
lods
dec
push
cmpl
xchg
ss
adc
icebp
adc
inc
pop
inc
and
pop
add
inc
inc
shrb
insl
jl
dec
ja
inc
or
push
mov
sti
pop
stos
test
adcb
cmp
fiaddl
fiaddl
int3
dec
sub
push
push
shlb
cmp
insb
or
add
aas
aam
fsubr
movsb
fucomp
jno
test
sbb
xchg
mov
repnz
dec
lea
dec
mov
test
and
xlat
mov
add
stos
xchg
lret
movsb
jo
bound
inc
dec
adc
jae
and
dec
and
add
lds
andl
or
addr16
sub
rcl
mov
imul
in
test
and
rcll
jb
inc
fidivs
inc
push
mov
jo
push
add
pop
dec
mov
pop
mov
mov
in
jbe
sub
xor
mov
imul
test
sbb
jl
add
mov
andl
cli
mov
mov
jae
test
mov
and
mov
aas
sub
add
divb
lcall
cmpsl
loopne
addr16
aaa
pop
dec
loopne
add
mov
inc
sbb
data16
cmp
adc
jl
imul
call
xor
push
call
and
cmp
adc
cli
xchg
cld
cmp
ret
imul
dec
mov
xor
cmp
pop
mov
jbe
adc
stc
lock
scas
jnp
push
jnp,pn
sub
pusha
xor
xchg
sahf
loopne
push
jb
xor
jmp
pushl
cltd
lahf
mov
popa
push
flds
fcmovnb
imul
adc
aad
pop
imul
test
testl
enter
push
aam
sub
mov
push
sbb
adc
push
fcoml
mov
jae
xor
adc
test
sbb
lods
or
loope
test
mov
cmp
inc
cmp
or
xor
xor
aas
mov
xorl
push
and
xor
mov
xchg
inc
sub
inc
aaa
sub
adcb
cmpsl
call
mov
and
sti
adc
scas
vsqrtps
adc
bound
xchg
in
leave
and
clc
or
xchg
push
adc
jge
ret
cli
or
repz
leave
sbb
mov
mov
aaa
xchg
and
sbb
add
sbb
sbb
stc
and
mov
mov
inc
sbb
dec
out
rcll
scas
push
popa
mov
xor
or
cmp
jno
jne
stc
aam
cmp
lock
inc
in
sub
popa
loopne
lahf
or
inc
inc
test
mov
sub
push
cmp
jnp
xchg
aaa
ljmp
sbbb
or
and
punpcklbw
sbb
add
out
data16
and
xor
rorb
add
shll
dec
cmp
pop
pop
stc
and
add
sbb
inc
sarl
cmp
loopne
push
pop
add
in
sbb
xor
subl
mov
in
inc
add
test
clc
lcall
jl
aad
xor
out
hlt
pop
inc
mov
pop
add
aad
addb
xor
scas
mov
cwtl
imul
arpl
stos
cmpsb
add
or
ficompl
inc
add
cmp
inc
mov
mov
dec
outsl
lahf
sub
shrl
xchg
push
jmp
aas
sub
in
fs
mov
dec
mov
insl
xor
pop
fildl
lcall
push
andb
push
and
mov
roll
shll
addr16
inc
or
je
push
cli
outsl
xchg
ds
nop
cmp
addr16
jae
push
cwtl
rorb
cmp
lea
inc
push
addr16
and
jmp
and
mov
daa
in
dec
xchg
aaa
gs
pushf
lods
insl
lret
loopne
mov
mov
pop
mov
xchg
mov
dec
cmp
sbb
sbbb
ret
ret
jmp
mov
jbe
sbb
adc
xor
add
roll
xchg
fnsave
cmpsb
and
xlat
repz
and
icebp
inc
lahf
sbb
pusha
mov
fidivs
lcall
scas
dec
imul
je
clc
and
hlt
jge
hlt
mov
jg
jmp
jb
push
cmpsb
jo
call
filds
xchg
cmp
sub
je
cmp
mov
xchg
cmp
pusha
add
pop
daa
aam
sub
add
sub
sub
add
in
fmull
pop
rol
xor
jns
adc
inc
sub
adc
movsl
cmpsl
movb
imul
mov
mov
shlb
cmp
adc
mov
sbb
mov
and
dec
test
dec
push
adc
lods
cmpsl
fmuls
les
pop
inc
mov
xchg
lret
xchg
jmp
roll
push
dec
int
cli
cmp
xor
xchg
xlat
adc
mov
and
dec
in
sub
mov
adc
mov
and
sub
sbb
test
mov
andl
daa
cmpsl
rol
ja
repz
pop
enter
xchg
int
jns
cmp
das
jbe
int
cmpsb
cmp
cwtl
mov
test
add
add
std
xor
mov
mov
inc
fists
rorb
jmp
fsubs
insl
mov
pop
out
xchg
or
cltd
jns
fsubrs
cmp
mov
aad
adc
inc
ja
or
jno
icebp
pop
lds
xor
iret
adc
movsb
imul
jnp
fwait
push
or
addr16
push
sub
rorb
sbb
cli
xor
push
mov
cmp
incl
cs
add
test
mov
out
mov
stos
inc
shlb
xchg
shlb
jmp
sbb
xchg
mov
pop
stos
orl
std
inc
or
or
or
mov
mov
shll
dec
and
std
or
negb
movsb
ficompl
push
inc
loopne
cs
add
mov
cmp
popf
add
push
inc
inc
sbb
cmc
xlat
mov
pop
test
sub
frstor
ret
popa
adc
mov
inc
popf
or
dec
mov
push
jb
cltd
push
stc
sub
movsl
mov
rolb
or
sub
mov
xor
xchg
test
add
xchg
xchg
mov
outsl
stos
orb
cmp
jne
aad
jns
sbb
pop
lock
sbb
jecxz
mov
push
pop
out
lahf
addr16
popf
adc
jne
pop
lea
incl
and
scas
adc
ficomps
hlt
jne
sub
notb
in
xchg
push
pop
test
rol
cmpsb
sbb
dec
gs
push
add
dec
push
popa
dec
mov
xor
or
and
lretw
push
es
or
lcall
sbb
frstor
push
sbb
addr16
pop
test
mov
insl
testb
push
dec
push
jmp
notl
inc
je
pop
mov
pop
mov
add
push
jbe
ljmp
test
nop
fcmove
insb
sbb
fsubs
xchg
sbb
xor
sbb
icebp
lods
cmpsl
and
js
js
mov
xor
pop
clc
stos
into
fs
inc
jo
fstl
xchg
jbe
loopne
ret
adc
roll
hlt
dec
jno
cmp
and
mov
cwtl
arpl
xchg
ljmp
mov
aam
lock
xchg
roll
out
add
push
imul
and
inc
jae
rorb
sub
jge
lret
xlat
dec
loopne
jl
adc
pop
cld
incl
in
sub
mov
imul
fs
call
sbbb
dec
xor
movl
pop
arpl
or
push
and
int3
push
rcll
dec
push
aaa
xor
xor
cmpsb
dec
inc
repnz
cli
jo
adc
jo
cmp
cmpsb
scas
incl
xchg
lcall
divl
int3
mov
jp
dec
into
pop
jge
push
cli
nop
lock
lock
loopne
shll
pop
xor
shrb
or
sub
lcall
dec
push
arpl
jbe
hlt
js
in
std
push
xchg
push
insl
pop
fiaddl
ja
call
xor
clc
sbb
push
clc
in
addr16
push
mov
movsb
xor
dec
sahf
ss
push
ja
notl
ret
sub
sahf
jg
fsubrp
es
sahf
in
mov
loop
loopne
or
imul
ret
adc
mov
in
aaa
pop
inc
mov
lods
movsl
inc
mov
cmp
xor
xchg
imulb
clc
push
pop
jns
or
or
mov
dec
inc
in
ror
rorb
adc
mov
leave
add
loopne
cmp
xchg
fildl
out
les
mov
dec
adc
shll
xchg
pop
leave
lahf
push
cwtl
loop
fistpll
sbb
jno
mov
adcb
mov
fdiv
rolb
loope
and
data16
and
jae
mov
and
cmp
jno
mov
lock
fucom
push
rclb
or
leave
icebp
push
push
pop
push
or
nop
mov
rolb
movsb
mov
push
mov
imul
js
or
mov
mov
mov
jne
add
lcall
and
loop
xor
add
mov
test
je
stos
adc
inc
sti
shrb
xor
inc
mov
mov
les
cmp
push
push
push
push
das
inc
sarl
mov
inc
cmp
scas
pop
pop
jmp
stc
adc
sub
inc
cmp
cmpsb
in
rolb
scas
shl
mov
je
ljmp
sub
clc
loope
movsb
jecxz
jmp
sbb
int
pop
push
jecxz
add
jne
loopne
cmpl
xchg
mov
pop
cwtl
lods
mov
and
or
sbb
push
fcmovnb
rcll
dec
aas
adc
sub
mov
jo
rorl
iret
or
add
mov
idiv
outsl
mov
icebp
out
dec
jmp
or
ret
loop
cmpsb
and
adc
cmc
loopne
repz
inc
push
lds
enter
xlat
imul
mov
inc
adc
mov
mov
sbb
rcr
push
les
test
inc
dec
sbb
scas
or
shll
lock
sahf
aas
and
rcrl
dec
push
nop
dec
cli
push
sbb
ret
inc
ds
shlb
movsb
add
mov
ret
ret
scas
cmp
push
or
and
mov
jge
fst
icebp
dec
push
icebp
dec
jg
repnz
jne
add
push
mov
adc
pop
cmpsb
push
mov
sbb
jmp
jecxz
aam
insl
add
rcrl
push
pop
cmpl
in
xlat
lock
add
pop
pop
pop
and
add
sub
pop
fwait
push
aad
pushl
and
and
rcr
aam
xchg
fldcw
fcoml
mov
pop
insb
out
nop
dec
icebp
das
add
jmp
movsb
loope
inc
xor
adcb
inc
dec
pop
sub
xor
mov
mov
add
test
int
mov
xor
ds
cmp
xlat
and
movsl
xchg
jle
ds
push
icebp
stc
pop
inc
test
pop
addr16
push
loop
sahf
out
outsb
movsb
notb
adc
adc
imul
mov
push
fcoms
jns
mov
push
movsb
mov
shl
push
test
mov
xor
shr
ja
or
aam
add
add
testb
push
or
loopne
cwtl
imul
dec
inc
outsb
push
mov
pusha
xor
rep
sbb
test
mov
dec
pop
lret
inc
inc
dec
es
aas
pop
mov
dec
cmp
adc
cmp
daa
daa
aad
aaa
push
jns
or
add
mov
cltd
test
adc
push
lods
pop
mov
add
rcl
dec
adc
enter
sarb
cs
xchg
mov
xor
mov
repz
mov
mov
jo
lds
dec
imul
sbb
fs
sub
mov
push
cmpsb
mov
mov
fstl
aaa
lock
fbld
xchg
pop
rolb
cmpsl
xchg
repz
or
pushf
xchg
cmp
mov
jb
mov
add
sub
loopne,pn
dec
sbb
add
test
lea
pop
xor
inc
popf
dec
test
push
call
lea
push
cmp
cs
or
xchg
jl
jnp
cmpsb
xor
icebp
gs
cmc
shll
aad
mov
push
sub
sub
adc
jae
or
mov
fld
out
loop
and
rcll
sbbl
adc
push
push
iret
adc
movsl
adcl
xorb
imul
stc
rcl
add
shlb
test
add
push
and
push
mov
sbb
add
mov
adc
test
stc
adc
outsb
add
test
mov
jb
push
push
mov
or
and
popf
arpl
dec
mov
add
xchg
pop
popf
aam
lea
push
nop
cmp
leave
jo
jno
dec
push
out
xor
xlat
sbb
out
lcall
or
cmp
xchg
pop
es
enter
das
sbb
in
xchg
sbbb
subl
call
or
pop
aad
xor
inc
xlat
movq
pushl
mov
mov
xlat
testl
push
inc
cmp
inc
in
add
or
fistpll
mov
inc
push
xchg
es
add
push
jge
xor
out
shrl
ret
add
add
stos
and
jg
dec
push
push
cmpsb
and
adc
rcrb
sub
test
int
inc
insl
xor
xor
loope
aaa
adc
mov
ljmp
mov
ud1
mov
cs
jmp
jle
xchg
jns
daa
repnz
sub
pop
lret
sub
pop
pop
in
adc
push
jp
aas
call
addr16
js
jg
das
push
adc
adc
insl
pop
loop
xchg
out
rolb
jbe
insl
iret
inc
loopne
jle
adc
pop
outsl
incl
cmpsb
add
rcrl
in
mov
adc
inc
dec
dec
xorl
subb
jo
cmp
push
dec
jl
xor
incl
add
imul
mov
arpl
andb
loopne
push
and
pop
sub
xchg
adc
dec
sub
add
inc
loop
jecxz
xchg
jle
pushl
dec
fcmovnu
sbb
cmpb
dec
and
inc
das
fisttps
popa
inc
insl
mov
cmpsb
loop
jmp
add
jbe
mov
push
daa
mov
jecxz
lahf
mov
int
xchg
ficompl
scas
lock
out
test
test
sub
push
adc
mov
hlt
mov
xchg
mov
jmp
push
call
mov
insl
js
insb
push
dec
cwtl
aas
and
das
inc
dec
pop
dec
sub
dec
stc
push
mov
or
insb
cmp
inc
or
xor
stos
mov
ret
iret
add
rcr
mov
cmova
stc
leave
out
and
rcrl
xor
lods
mov
fnstenv
push
sbb
add
xor
inc
loopne
push
fs
push
pop
rorb
sbb
incb
and
mov
mov
push
add
insl
xorb
shlb
roll
jo
lea
push
rolb
xchg
xor
add
lods
ret
aaa
or
in
out
hlt
lea
outsl
jo
mov
adc
jns
scas
fldl
mov
loopne
jns
jl
nop
jo
jno
leave
push
push
loopne
add
or
or
jae
mov
cmp
push
andl
add
mov
xor
lock
xchg
in
jmp
jns
loopne
mov
call
loope
xor
pop
pop
adc
cmp
mov
jecxz
rcrl
xor
or
popa
add
inc
out
pop
stos
adc
ret
add
lods
sbb
lods
out
inc
aaa
enter
sbb
inc
or
pop
pop
roll
xor
out
mov
loope
sti
mov
inc
mov
or
or
clc
jae
add
add
pop
int3
xchg
mov
popf
test
pop
test
sti
movsb
sbb
inc
pop
mov
inc
mov
movsl
mov
and
ret
addl
stos
pop
cmp
cmp
movq
push
ljmp
movsb
add
push
push
pushl
test
adc
sbb
adc
sbb
sbb
push
jnp
xor
mov
gs
adc
push
shlb
mov
jp
mov
adc
xchg
into
ljmp
xchg
lahf
aaa
dec
push
jb
sbbb
inc
jmp
sbb
pop
inc
sbb
inc
dec
sbb
ret
xor
sahf
subl
dec
mov
lods
scas
dec
fisubl
movsl
test
fcompl
movsl
inc
cmp
in
rolb
mov
stos
jne
dec
dec
fsubs
mov
jge
imul
push
xrelease
and
mov
jb
pop
adc
test
sbb
jmp
inc
adc
js
push
std
add
xchg
push
push
pop
or
cmp
sbb
repz
call
and
cmp
jmp
pushf
xchg
or
mov
in
jecxz
addl
push
js
or
sbb
push
fadds
nop
or
or
sbb
repz
ljmp
rclb
daa
jge
add
mov
dec
adc
insl
ret
pop
inc
les
xor
xchg
or
dec
rorb
andl
adcb
xor
mov
bound
lea
fs
inc
cmp
loop
cmp
in
lcall
mov
sub
call
or
jne
jno
sub
les
pop
outsl
lcall
shlb
dec
pop
nop
add
inc
cmp
sub
dec
adc
mov
push
outsb
dec
dec
xor
xchg
xchg
ret
jg
jg
loopne
js
ss
mov
pop
into
sbb
test
inc
shr
dec
cmp
ret
mov
in
or
jne
in
ret
mov
mov
aas
or
mov
and
add
outsl
or
iret
mov
rolb
xlat
xchg
popa
sbb
dec
sbb
scas
push
pop
push
int
hlt
mov
cmpl
lea
or
sahf
out
push
shll
pop
out
addb
add
outsb
inc
repz
adcb
jb
popa
xor
pushl
ja
inc
addr16
pushf
fwait
ret
jl
mov
lret
sar
movsl
jecxz
and
scas
xchg
mov
fidivrs
push
jno
imul
add
dec
imul
ljmp
imul
idiv
decl
addr16
inc
push
enter
movd
in
pushf
movsb
mov
or
mov
clc
repnz
dec
lret
arpl
push
pop
push
pop
dec
push
nop
mov
inc
ret
dec
sub
push
out
dec
fistl
loopew
mov
and
or
or
or
fs
jecxz
lock
lret
outsb
ret
add
loopne
enter
xchg
mov
xor
sbb
dec
xchg
and
clc
mov
bound
imul
popa
mov
imul
adcb
loopne
jo
inc
sub
ret
dec
xchg
pushf
mov
loope
mov
or
jecxz
jp
add
or
mov
aas
jno
leave
or
sbb
repnz
out
xchg
and
dec
jbe
jg
mov
dec
push
insb
pop
dec
xor
gs
sub
inc
xchg
or
movl
aas
lea
pop
and
pushf
roll
inc
jp
sar
fistps
in
stos
pop
or
inc
mov
ss
cmp
jns
push
fnstenv
mulb
dec
mov
lods
pop
xor
ljmp
ss
lcall
and
fldt
adc
fwait
push
mov
incl
xchg
rorl
push
clc
je
mov
jne
and
dec
push
cwtl
shrb
cmp
inc
nop
inc
ret
push
add
ljmp
js
test
mov
in
xlat
dec
sbb
mov
cmp
or
cmp
cmp
or
bound
gs
inc
add
dec
pop
inc
loop
push
inc
inc
arpl
rcll
mov
xor
jno
lcall
jne
outsb
xor
into
and
xchg
sub
pushl
fmul
sbbl
xor
jmp
cmpsb
stos
inc
mov
add
lret
sub
adc
add
les
aad
xor
ret
enter
and
push
decl
jecxz
xchg
adc
roll
and
decl
adc
je
imul
lods
lret
sti
fiaddl
popa
or
inc
dec
nop
pop
mov
push
test
rorl
inc
mov
jmp
inc
loope
xor
ss
jmp
cmp
ss
and
push
leave
into
test
imul
jbe
or
mov
loopne
jle
mov
push
inc
test
cmp
lock
jne
int3
out
ja
mov
js
je
popf
cwtl
add
adc
in
cwtl
dec
inc
cmc
push
pop
jne
push
add
shlb
add
mov
push
xor
cmp
das
jmp
and
ds
cmp
pop
or
pop
adc
adc
or
mov
xor
cmc
mov
xchg
stc
test
xor
jae
pop
pop
inc
cmp
dec
xor
mov
les
pushf
icebp
adc
ja
adc
ljmp
or
jno,pn
cmpsl
rdtsc
loopne
push
lods
xchg
sbb
pop
in
inc
ret
movsb
cmp
decl
in
add
mov
clc
cli
push
push
adc
je
popa
cs
jno
inc
insb
and
movsb
xlat
inc
test
fs
add
aas
jge
xor
mov
in
and
mov
push
xchg
js
jmp
pop
mov
cld
jl
test
jo
mov
cmpsb
gs
mov
xchg
nop
or
push
pop
test
test
mov
push
cmp
dec
inc
mov
jg
sub
pop
mov
sub
shll
fwait
scas
cmp
in
scas
stos
test
lds
test
cli
dec
jbe
insb
test
loop
dec
movsb
dec
dec
imul
sbb
icebp
add
pop
cwtl
inc
lods
add
stos
mov
add
mov
out
popf
inc
sub
cmp
decl
rclb
pusha
or
dec
ja
add
push
lret
shll
sar
pop
ss
and
inc
ljmp
je
out
sub
push
jl
insb
push
jnp
je
push
sub
jns
aas
sbb
cmp
jg
and
push
les
xor
dec
or
jo
jp
add
mov
inc
jno
bound
daa
lods
mov
pushf
dec
cmp
ss
test
xchg
xor
cld
ljmp
xor
repz
pop
and
dec
and
jmp
push
mov
inc
cmc
mov
lcall
mov
mov
roll
adc
ret
dec
inc
mov
nop
inc
outsb
add
push
insb
das
dec
push
std
ret
cs
add
adc
mov
push
scas
cs
arpl
scas
clc
decl
mov
pop
das
mov
inc
lcall
addr16
inc
ret
add
incl
ret
push
and
dec
int
dec
insb
pusha
enter
mov
adc
mov
inc
rolb
add
xor
ret
fbld
aas
adc
inc
mov
dec
imul
dec
jae,pn
pusha
cld
and
mov
cltd
cs
jb
mov
inc
dec
xchg
out
push
mov
aam
jo
insb
add
mov
les
test
jg
push
in
add
dec
aam
push
cmp
scas
aad
sbb
dec
or
inc
popf
aam
imul
bound
ficomps
dec
pushf
dec
ss
or
dec
pop
je
and
gs
push
jb
push
push
sub
sbb
mov
lcall
add
jge
aam
sarl
scas
adc
mov
mov
fsubs
pop
add
sub
orb
popa
fisttpl
test
mov
clc
add
sub
lahf
cmpb
cmp
inc
fiaddl
inc
or
or
outsb
mov
and
and
push
push
mov
mov
xchg
push
aas
cwtl
dec
dec
adc
inc
into
or
popw
ret
sbb
int3
arpl
push
sbb
daa
or
fstl
add
popf
inc
aad
and
xchg
movsl
lock
xchg
sub
push
add
sahf
sbb
xchg
je
push
mov
das
and
cmc
or
or
lods
xchg
aas
jne
sub
and
xchg
dec
enter
test
mov
movb
clc
and
iret
dec
icebp
sbb
xor
ljmp
dec
call
in
rol
push
mov
inc
jne
adc
test
lea
add
adc
pop
add
lods
pop
add
mov
add
aaa
sar
jmp
rolb
sbbl
mov
and
pusha
sub
pop
arpl
sbb
imul
jb
push
mov
and
xor
adc
inc
sbb
inc
addl
mov
push
inc
je
or
ret
lret
ret
lahf
imul
cltd
sbb
sbb
xor
jbe
hlt
jmp
scas
out
pop
lcall
jns
rolb
mov
or
subb
and
or
cmp
sbb
pop
lcall
jp
enter
push
rcl
lock
pusha
imul
push
enter
mov
dec
push
cltd
add
aam
adc
mov
lds
aad
mov
scas
mov
adc
or
mov
cmp
or
or
inc
cmpsl
iret
xchg
movsb
adc
ljmp
push
nop
or
insb
movsb
mov
test
stos
xchg
inc
pop
or
add
les
and
adc
sub
scas
xchg
rolb
addr16
mov
pop
stos
push
and
dec
adc
popa
sub
subl
dec
lds
addr16
fs
fdivl
xor
ficomps
pusha
popa
insl
or
je
xor
dec
shll
xor
mov
icebp
stc
mov
rolb
inc
sbb
or
mov
inc
cmp
test
lock
clc
pop
in
scas
shlb
scas
imul
mov
dec
int3
add
adcb
insb
rclb
ror
lret
jg
enter
add
dec
mov
mov
out
es
gs
out
stos
pop
lock
mov
mov
mov
cmp
ret
dec
insl
outsb
push
sub
pop
ss
addr16
or
movsl
insl
fcmovbe
rolb
jno
push
sub
push
ret
jmp
in
scas
push
mov
enter
ficomps
addl
push
or
jb
sub
xchg
pop
pop
sbb
ja
add
jb
inc
in
call
and
data16
mov
imul
xchg
pusha
pop
push
adc
mov
roll
bsf
stos
popf
mov
dec
test
mov
jne
pushf
dec
enter
push
mov
jne
lret
inc
push
cmp
dec
adc
push
movsl
mov
xor
inc
fldenv
test
xor
jmp
outsl
push
jne
clc
push
mov
sub
data16
push
jg
int3
sti
mov
push
and
dec
leave
or
pop
add
jmp
xchg
and
imul
outsl
mov
push
repz
bound
cld
fbld
lea
fld
jnp
lods
mov
in
cmp
adc
xchg
dec
mov
inc
movsb
movsb
dec
add
nop
jb
xor
pop
lret
das
or
jb
aam
cmp
dec
sbb
icebp
mov
xor
sub
pushl
test
adc
negb
jbe
pop
pop
mov
dec
ret
jns
xlat
aam
call
jge
pop
scas
into
xor
or
int
cmp
shrl
or
mov
lret
and
cmpsb
movsl
push
les
inc
gs
jne
inc
or
xchg
pop
sbb
jnp
jge
ret
cld
sbb
shrb
test
sti
adc
or
jmp
mov
test
leave
push
mov
jae
xchg
test
xchg
mov
xchg
lea
sbb
imul
sub
xor
pop
shlb
leave
pop
mov
xchg
push
test
inc
inc
flds
add
jae
or
xchg
movsl
rclb
cmp
shll
or
mov
enter
sub
push
sbb
jg
js
push
cmpsb
cmpsl
nop
or
leave
adc
les
imul
mov
aaa
js
subl
jo
rcrb
mov
movsb
push
adc
lods
cmp
mov
leave
mov
loope
add
test
stos
les
popa
or
je
xchg
mov
loop
sbb
push
cwtl
shl
adc
test
and
add
ljmp
or
or
sbb
inc
add
loope
out
xchg
in
and
cwtl
pop
ja
mov
adc
sub
sub
loopne
mov
sub
push
xchg
or
and
mov
cltd
xor
adc
sbb
test
mov
jl
xor
test
cmpsl
ja
and
lds
sbbl
xchg
xlat
jp
or
enter
pushf
aam
out
inc
xlat
adc
rorb
pop
in
sub
cmc
mov
xchg
jg
add
inc
add
pop
push
or
leave
sbb
adc
adc
in
push
pop
das
inc
mov
rcrb
cmc
fistpl
adc
test
test
jg
in
lds
js
jl
movsb
push
insb
pop
pop
mov
xchg
jecxz
lea
es
mov
mov
fwait
jae
push
gs
cwtl
lea
insb
gs
adc
jge
sub
pop
mov
mov
sbb
int
rorl
and
repnz
xchg
std
push
incl
xchg
jmp
sti
lods
jne
jg
flds
pop
fists
icebp
rcrl
sub
or
jmp
pop
mov
das
xor
dec
int3
adc
lds
scas
xchg
into
mov
adc
mov
sub
bound
dec
adc
imul
cltd
mov
push
pop
test
fwait
mov
cmc
jmp
inc
push
adcl
pop
call
push
ret
and
notl
lret
pop
pushl
cmpsl
jo
into
inc
call
xchg
aad
shr
or
mov
xchg
loop
cmp
jnp
and
xor
lods
pop
push
inc
cmpsl
mov
jo
inc
sbb
std
add
inc
adc
les
or
stos
cs
dec
mov
in
add
stos
mov
mov
test
and
lcall
and
daa
cmpsl
cmp
and
add
mov
pop
test
and
icebp
ljmp
inc
rorl
push
add
push
and
cmp
mov
hlt
mov
xchg
in
fnstsw
mov
adc
pop
test
test
pop
stos
mov
aam
cmp
jb
outsl
dec
add
ss
and
add
mov
add
cwtl
push
das
cmpsl
sub
daa
push
imul
push
ficoms
mov
inc
pushl
imul
je
dec
sahf
cs
movsl
mov
xor
or
mov
pusha
in
xlat
sarb
mov
iret
or
xchg
add
rcl
outsl
dec
imul
or
or
out
or
stc
daa
subb
aad
stos
push
add
add
pusha
test
and
add
or
jne
jo
add
lods
and
out
test
jno
add
lds
push
pushf
cmp
inc
cmp
das
into
lds
les
pop
add
push
push
les
scas
or
inc
adc
mul
mov
jecxz
lock
sbb
mov
fistpll
ja
mov
inc
sub
mov
xor
xor
mov
add
inc
push
stc
and
fcmovbe
xor
movb
js
lcall
inc
push
aas
rcl
je
mov
clc
jne
sbb
mov
fadd
jecxz
fcmovne
sbb
cwtl
inc
out
loop
inc
je
mov
jg
push
dec
gs
lods
mov
sub
jo
sub
mov
incl
popa
mov
lds
xchg
std
aaa
daa
add
addl
out
nop
mov
jbe
xlat
push
fsubp
inc
pop
xlat
call
in
and
fs
cmp
rcll
inc
out
dec
pusha
inc
call
dec
inc
decl
ljmp
movsl
bnd
mov
pop
xor
outsl
movsl
out
dec
or
notb
cmpb
dec
cmp
xchg
inc
divl
stos
and
push
adc
inc
mov
and
bound
sti
es
add
test
ret
scas
and
or
push
mov
insb
mov
mov
mov
inc
fstl
ja
mov
adc
aaa
inc
push
mov
mov
out
sub
inc
jae
sub
in
ret
xor
je
clc
jl
lcall
js
inc
into
pop
xchg
adc
vmwrite
or
mov
jne
cmp
sub
arpl
leave
stos
and
clc
add
inc
outsb
and
push
icebp
inc
mov
incl
test
enter
pop
scas
jb
sbb
fsqrt
call
rorl
jle
imul
cmp
lret
movb
dec
xchg
fdivs
ss
test
fadd
stos
iret
push
push
jg
addr16
mov
stos
inc
mov
test
pushl
or
js
mov
aad
adc
sbb
adc
dec
stos
inc
loope
aam
xor
add
fimull
fidivrs
mov
imul
mov
rolb
repnz
sub
and
adc
mov
int
icebp
je
sub
jno
sarl
mov
call
pop
into
rcrl
lcall
mov
icebp
cmpsb
sbb
jno
shlb
scas
mov
pusha
test
and
cwtl
inc
icebp
inc
pop
adc
das
mov
xlat
inc
hlt
out
push
int
add
orb
test
pop
and
shrb
or
mov
out
aas
das
add
clc
push
adc
js
inc
cmp
call
minps
jmp
pop
or
push
dec
pusha
adc
add
inc
add
shlb
add
cmp
sbb
xor
mov
aam
jg
pushf
cmpsb
inc
mov
sub
fwait
in
add
addr16
xor
push
sbb
dec
adc
xor
jmp
cmp
push
and
push
mov
jmp
pusha
shl
pop
or
lods
ja
scas
test
iret
add
stc
out
xor
or
in
or
les
das
pop
imul
xor
xchg
push
ds
addr16
mov
loop
mov
push
sbb
in
ja
cmp
ret
andb
js
add
imul
xchg
push
mov
add
insb
inc
aad
mov
fldl
repz
enter
inc
fucom
stos
adc
fbld
lret
je
das
mov
jmp
mov
out
jnp
mov
enter
xlat
mov
push
lea
inc
push
xchg
test
dec
pop
cmpsl
imul
inc
add
sar
in
xchg
mov
mov
enter
sti
add
sub
adc
sarl
xchg
dec
sbb
test
adc
imul
push
repnz
mov
movb
rcr
inc
cmp
or
repz
cli
and
lahf
add
cltd
ljmp
icebp
mov
cmc
add
push
je
clc
icebp
ret
int3
add
ret
pop
loopne
in
xor
pop
cmp
sub
adc
mov
insl
sbbb
push
cmp
push
xchg
pushl
cmpsl
jge
jle
xchg
jnp
test
fidivrs
mov
loop
call
mov
enter
arpl
cmpb
dec
pop
adc
incl
icebp
inc
mov
mov
sarb
cmp
imul
pop
lock
aaa
cwtl
es
rclb
fidivrl
mov
sub
push
pop
aaa
push
jo
mov
sbb
add
xchg
sbb
fldl
push
imul
dec
insb
xor
pop
or
test
inc
push
popa
dec
xor
jbe
pop
fs
inc
sbb
xchg
cmp
lods
adc
repz
js
dec
dec
sub
pop
push
les
adc
jno
xor
lea
rol
mov
jne
and
adc
mov
outsb
data16
xor
test
inc
hlt
lcall
aas
iret
shrl
xchg
xchg
adc
ss
add
lcall
loop
pop
mov
push
fs
aam
mov
lea
jmp
pushl
dec
arpl
push
popa
jmp
pop
inc
jecxz
jg
int
lods
clc
mov
imul
dec
push
fsubr
push
sub
out
push
jg
lods
test
adc
aaa
sbb
push
jae
pop
sub
insb
arpl
push
insb
pop
test
mov
adc
call
pop
mov
or
mov
ljmp
daa
mov
mov
pop
test
jne
into
rclb
or
enter
dec
inc
lea
dec
out
movl
sbb
pop
add
or
sar
mov
and
push
adc
push
push
cmc
cmp
add
mov
dec
enter
mov
sbb
xor
and
fmuls
leave
dec
shrb
cmp
or
sub
xchg
cmp
fucom
and
cltd
or
nop
fmul
stc
pop
adc
adc
sub
xor
or
xchg
add
and
add
fwait
loope
dec
adc
adc
adc
push
xor
in
push
adc
adc
push
aaa
lods
sahf
mov
sahf
addb
pop
je
and
inc
push
dec
cmp
or
jmp
inc
stos
sbb
enter
xchg
lea
and
imul
outsl
inc
and
pop
inc
jae
les
mov
push
jge
pop
mov
xchg
addl
or
ljmp
mov
inc
mov
scas
jecxz
ljmp
add
sub
ja
mov
jb
sti
xor
cmp
cmp
sbb
ss
adc
and
jns
cmc
cs
add
popa
fnsave
jno
cmp
push
inc
inc
xchg
pop
adc
jne
xchg
out
jne
iret
or
push
inc
xchg
cltd
scas
dec
lock
cmp
in
movsb
push
mov
sub
call
out
inc
in
xchg
xchg
loope
arpl
inc
mov
pop
inc
enter
xorl
scas
pusha
inc
cmc
adcl
pop
shlb
adc
jp
dec
in
pop
sbb
pop
or
mov
es
loop
stc
data16
and
push
mov
or
push
rcrl
mov
cmp
xchg
mov
aas
mov
push
mov
mov
daa
mov
jae
stos
int
test
in
arpl
js
inc
addr16
mov
pop
inc
sbb
add
ds
out
test
xchg
and
cld
in
pop
add
mov
test
sbb
rolb
inc
pop
sub
popa
push
and
test
aas
add
lcall
jns
addb
fisttpl
or
add
xor
dec
movsl
lock
int
push
in
mov
sub
aaa
mov
in
add
jge
sub
push
mov
mov
adc
test
shlb
out
iret
jmp
fs
push
and
sahf
inc
imul
test
push
movsb
in
jmp
imul
test
inc
js
push
test
push
xchg
test
iret
repnz
popf
and
lcall
cli
ljmp
pop
stos
adc
movl
decl
movsl
rcrl
cmc
xchg
or
inc
lret
or
jmp
pop
xor
ret
sub
jo
mov
cmpsb
aaa
add
jl
mov
cwtl
cmpsb
imul
and
jl
out
lahf
inc
loopne
cmp
sarl
rcrl
inc
xchg
pusha
mov
lret
shl
push
dec
cmp
cld
inc
push
loopne
cmc
nop
pop
rorb
add
dec
cmp
cwtl
mov
add
dec
stos
inc
pop
cmp
jle
jg
jno
fs
cmpsb
bound
mov
sbb
mov
sub
inc
dec
cli
dec
jge
sbb
push
bound
dec
adc
inc
nop
xor
lock
mov
dec
pop
fs
dec
xor
sbb
ljmp
jbe
insb
in
fdivp
inc
lods
repz
dec
imul
cmp
add
js
push
lds
fs
jb
inc
mov
inc
outsb
fcmovnb
mov
imul
lock
sbb
jecxz
mov
int3
arpl
cmp
sub
sti
lcall
pop
insl
jecxz
call
decl
and
inc
push
jecxz
jmp
inc
bound
shlb
insb
xorb
inc
xor
ret
clc
push
push
mov
sahf
jmp
xchg
mov
push
fwait
cmp
jmp
aaa
and
sub
mov
jp
sub
je
aaa
imul
loop
jb
pop
mov
jne
test
jmp
push
jp
jo
rcrl
dec
mov
pop
mov
dec
xor
inc
push
fs
pop
or
das
pop
sbb
add
clc
call
aam
cld
lcall
arpl
sbb
mov
fiaddl
enter
cs
enter
clc
xor
outsl
push
imul
jb
inc
test
subl
xlat
rorl
or
mov
push
inc
mov
daa
in
fiadds
arpl
jg
pop
xchg
arpl
jns
lcall
xchg
inc
ljmp
imul
jnp
ss
cmp
cmpsb
cmp
in
jmp
mov
or
lcall
xchg
nop
enter
jne
mov
or
jo
mov
inc
das
ret
iret
add
out
sub
inc
lock
jmp
cmp
cmp
stos
xchg
cmp
or
mov
push
inc
bound
push
shlb
xor
mov
inc
sbb
add
sar
outsl
mov
jg
mov
push
dec
adc
fwait
xlat
lcall
decl
testb
imul
or
incb
nop
imul
inc
mov
push
pop
sbb
xchg
arpl
jg
sub
lcall
push
pushw
pop
jne
xchg
std
or
mov
adc
sarb
xchg
mov
faddl
push
push
sbb
lods
xchg
fs
cmp
ret
cmp
aad
int3
lret
jb
sbbb
loopne
xchg
mov
out
or
pop
mov
inc
test
cmp
ficompl
sti
pop
lods
mov
sub
lret
lods
sarl
push
and
js
and
mov
dec
jb
mov
imul
push
insl
push
xor
idivb
push
pop
out
bound
ret
enter
shl
shrl
shlb
mov
mov
push
jae
xor
dec
push
ret
jnp
jbe
inc
push
push
push
xchg
dec
jb
inc
gs
outsl
mov
jmp
or
inc
push
jmp
or
dec
icebp
mov
test
lods
mov
mov
pop
repnz
aam
add
ljmp
js
enter
jb
mov
cmpsb
pop
push
or
cmpsl
jge
lock
fbld
roll
inc
out
mov
dec
hlt
push
es
inc
jno
inc
push
push
mov
jne
dec
add
cld
add
sbb
mov
cli
xchg
mov
decl
cmp
and
mov
mov
xchg
push
ret
dec
adc
pop
push
sbb
jo
mov
pop
ja
mov
or
push
lcall
data16
out
adc
push
sub
jle
sahf
and
cmp
pop
push
sub
cmp
stos
stos
gs
dec
leave
out
mov
sub
jl
into
in
add
sbb
adc
cmp
data16
inc
pop
cmp
dec
sub
test
push
in
add
xor
sarb
lea
inc
icebp
add
mov
mov
leave
mov
xor
lea
mov
or
mov
loop
jo
outsl
adc
mov
adc
orl
lds
mov
jecxz
or
or
jne
or
adc
inc
dec
mov
sti
push
insl
les
loopne
ret
and
inc
add
push
xor
push
xor
xchg
daa
sbbl
jns
cmpsb
mov
cld
lods
cltd
mov
add
pop
xor
inc
rsm
leave
filds
lret
xchg
call
push
test
leave
jecxz
rorb
push
xor
sbb
dec
jecxz
jg
inc
flds
das
jecxz
je
mov
int
pop
sbb
pop
cmpsb
int3
mov
fistps
or
and
inc
mov
into
xor
jns
aaa
mov
imul
std
xchg
call
shlb
xor
ret
pop
mov
pop
jb
js
mov
data16
mov
xchg
call
adc
jmp
aaa
cltd
inc
into
sub
fwait
inc
mov
shl
mov
pop
loope
mov
push
outsb
jmp
or
push
inc
cmp
jo
cmp
sbb
orl
or
imull
out
call
sahf
mov
icebp
lods
addb
dec
push
rol
fst
insl
sbb
dec
adc
pusha
or
adc
push
insl
loope
imul
add
add
pusha
push
jecxz
inc
pop
mov
inc
push
add
clc
and
adc
pop
add
or
int
pusha
push
jecxz
or
ljmp
das
inc
pop
sbb
shll
jl
je
and
or
arpl
mov
pop
leave
test
cmpsl
push
fxch
cmp
and
push
and
das
incb
xchg
xor
sbb
push
cmp
xor
addr16
xchg
xchg
insl
and
adc
cmc
push
mov
lock
stos
pusha
add
mov
push
or
add
lock
mov
out
sub
test
adc
int3
loope
sub
push
mov
lret
les
stos
lock
add
push
inc
stos
hlt
mov
movsl
lock
sbb
jb
fwait
inc
pop
xchg
or
ret
dec
mov
jp
and
incl
cwtl
push
stos
ror
in
cmp
mov
push
ret
icebp
jge
sub
popa
mov
loopne
les
hlt
jmp
ret
mov
push
insb
in
pop
or
adc
push
adc
xchg
sbb
add
and
add
sbb
push
add
mov
push
mov
lods
xchg
test
mov
inc
loope
add
pusha
sbb
clc
call
add
mov
repnz
push
cmp
loopne
push
mov
int
cmp
push
or
cmp
mov
arpl
jne
dec
cmpsl
cmp
mov
bound
lock
pushl
mov
popf
push
push
adc
popf
or
mov
dec
cld
cltd
xchg
pop
xor
movsl
lock
fildl
mull
sbb
mov
je
cmpb
mov
adc
jmp
jg
jecxz
and
sahf
sbb
push
loope
bound
movsb
push
and
arpl
push
lcall
clc
push
add
inc
push
xor
mov
jnp
sbb
dec
sahf
je
add
jae
push
mov
gs
xchg
shl
push
dec
ret
nop
loopne
xor
add
xor
mov
or
movsl
fistpll
inc
ret
fmuls
jnp
mov
cltd
pop
outsb
mov
pop
mov
cmpl
jmp
int
adc
or
sbb
insb
jbe
test
add
leave
loopne
push
imul
rorl
inc
xchg
rol
loopne
cmp
data16
push
sarl
loope
fsubl
mov
adc
rep
gs
add
push
add
push
into
mov
push
inc
cmp
add
mov
sahf
cs
push
out
rolb
popa
adc
or
and
xchg
imul
sub
addl
int
ret
test
hlt
mov
call
mov
xchg
dec
int
adc
xor
inc
add
adc
or
sub
mov
push
sti
sub
lea
fdiv
fwait
mov
std
inc
nop
lock
ret
jne
enter
stos
jg
repz
mov
push
push
loop
stc
ss
jo
test
cmp
xor
ljmp
inc
and
in
mov
add
test
jo
in
sbb
pop
fists
fstps
xchg
mov
jo
gs
sub
add
icebp
popa
or
sub
sbb
jmp
mov
inc
add
xchg
push
lret
scas
push
shll
xor
lods
add
hlt
shll
mov
push
jmp
and
out
addl
arpl
leave
pop
sub
pop
and
and
and
or
and
or
rorl
rcl
pop
sub
or
cmp
xor
lock
sub
adc
mov
add
dec
lret
imul
xor
adc
inc
mov
dec
adc
add
xor
xor
adc
test
and
sahf
push
cmp
or
xor
xchg
in
jle
mov
inc
outsb
xor
jle
or
jmp
ss
loope
cmpsl
mov
aad
add
sub
inc
js
or
jne
outsl
cmp
mov
lahf
add
das
adc
mull
adc
mov
je
sbb
ja
jo
xchg
sub
mov
pop
mov
mov
sbb
cmpsl
repz
sub
adc
pushl
pop
mov
push
or
dec
pop
les
add
pop
inc
add
push
fildll
dec
mov
push
and
fs
fsubr
push
push
mov
fisttps
into
adc
push
mov
inc
jae
leave
ss
test
pushl
sbbl
inc
insl
lea
pop
ret
fldenv
cmp
movsb
aaa
and
xor
dec
jb
cmc
arpl
jae
mov
cmp
xor
sub
add
fimuls
cmp
jmp
cs
and
lods
jle
xorb
rcrb
fisubrs
das
sbb
jl
jmp
push
cmc
add
or
jl
sub
stos
repz
ret
mov
aaa
xor
push
push
dec
cmp
xor
adc
aam
mov
iret
arpl
shlb
pop
xor
dec
aaa
and
add
mov
cwtl
xchg
pop
int
jp
aam
outsb
cmp
orl
jno
fmul
adc
sub
aam
add
lods
push
mov
pop
push
arpl
aas
js
insl
ljmp
adc
leave
mov
test
cmpsl
loop
jmp
es
scas
lea
jg
sbb
popf
cmp
cmp
int
sbb
frstor
test
pop
add
jecxz
out
mov
add
mov
xchg
inc
fldl2t
push
or
dec
fstpt
lret
sysexit
add
test
xchg
out
sti
add
test
add
je
mov
scas
add
sub
stos
push
dec
es
jno
icebp
cwtl
pop
sbb
adc
push
je
xlat
add
mov
out
mov
adc
lock
xor
outsl
bound
pop
pop
xor
pop
adcb
enter
or
jae
cs
add
mov
sbb
leave
sub
xchg
jo
adc
mov
and
push
push
inc
loope
jns
dec
inc
test
jne
sti
mov
xchg
mov
loopne
adc
sbb
in
je
aaa
push
dec
sbb
xor
les
inc
adc
xchg
xchg
insl
inc
push
sub
cmpsl
add
xchg
mov
cmp
mov
mov
outsb
and
repz
sbb
cmpsl
add
lahf
xor
je
mov
push
push
and
scas
sbb
addb
je
adc
bound
adc
outsl
or
push
jp
cmp
out
cwtl
adc
repnz
xor
push
test
or
cs
xor
xor
scas
in
in
ss
test
push
push
in
in
adc
mov
xchg
push
leave
pop
sbb
mov
adc
pusha
inc
repnz
add
sar
les
decl
nop
js
mov
mov
cltd
push
lahf
adc
call
push
cmp
sub
adc
xchg
push
cmp
sub
lret
jmp
jo
sbb
push
mov
mov
dec
push
clc
out
sub
das
inc
adc
xchg
jge
dec
inc
and
mov
push
insl
xor
add
mov
push
divl
push
sbb
js
xchg
mov
ret
dec
ss
pop
call
dec
fs
fisttps
je
ss
pusha
jmp
inc
jno
jmp
cmp
andb
dec
push
pop
inc
push
insb
iret
lahf
jae
dec
inc
mov
pop
mov
jle
cltd
call
pusha
sub
push
dec
mov
sub
add
xchg
jle
rol
nop
rcll
inc
mov
xor
xor
lock
inc
add
cmpsb
jbe
ljmp
mov
xchg
ljmp
nop
inc
mov
add
das
sahf
shlb
mov
xchg
and
cwtl
sbbb
dec
outsb
inc
xorb
dec
jns
sub
pop
cld
or
inc
dec
xor
subl
mov
cmp
and
xor
push
inc
xor
cmp
xchg
sub
enter
lock
decl
add
jno
ljmp
imull
push
leave
and
das
es
dec
nop
daa
out
pop
push
mov
fbld
mov
inc
sub
sub
dec
inc
iret
lods
xorb
imul
jns
pop
movsb
push
inc
cld
loopne
ss
dec
push
ja
inc
in
dec
call
push
mov
inc
jle
outsl
dec
jp
mov
movsb
or
jge
repz
pop
movb
push
or
sbb
inc
shrb
in
in
pop
inc
test
inc
dec
nop
inc
jmp
and
jmp
inc
inc
ss
or
inc
jl
out
in
add
decl
add
xorb
and
lock
cmc
addb
lds
push
arpl
pop
les
faddl
mov
clc
sub
nop
clc
mov
out
mov
pop
push
popa
jno
cld
aam
rorl
fs
jne
jno
push
lock
cmc
stos
scas
cmp
hlt
lods
jns
pop
mov
mov
cmp
dec
push
add
jae
dec
loopne
rcrb
mov
sub
aas
iret
mov
loop
and
repnz
ss
popa
jne
jecxz
in
nop
shrb
sbb
in
inc
mov
nop
cmp
test
lds
out
push
sbb
sbb
add
add
and
mov
cmp
xor
adc
mov
sbb
leave
ljmp
push
and
ds
ss
out
setb
mov
test
aam
cmp
push
push
adc
leave
test
cmp
btr
sbb
push
push
inc
test
fcompl
jo
shlb
aas
push
xor
sub
push
xchg
lea
and
shl
inc
push
or
xor
andb
lret
xchg
jcxz
insb
je
mov
xchg
in
and
loop
jecxz
xor
addb
subb
jl
add
mov
sub
repnz
jecxz
mov
dec
ljmp
roll
shl
lods
inc
mov
add
adc
inc
jns
push
test
sbb
mov
jne
push
push
pop
pop
jmp
stos
int
jp
pop
dec
sbb
ja
fistl
ss
leave
iret
push
pop
add
ret
and
push
lret
push
add
and
sub
inc
sbb
pop
adc
mov
sbbb
imul
xchg
sbb
das
cmp
pop
adc
roll
cwtl
mov
xchg
push
lea
xchg
mov
insl
stos
or
mov
pop
or
and
inc
push
xor
jmp
loopne
subl
fmuls
aaa
cs
pusha
fldln2
mov
jg
push
out
adc
mov
loope
test
add
sbb
adc
adc
mov
xchg
xchg
dec
fwait
or
scas
or
mov
add
nop
out
dec
imul
js
or
andl
jne
popf
push
jne
or
xchg
jae
mov
xlat
mov
cmp
mov
filds
mov
sti
push
pop
andl
aaa
push
jge
gs
insb
test
cmp
pop
sbb
inc
add
popf
sbb
lahf
adc
mov
js
pop
jo
xlat
mov
lods
inc
push
cmp
imul
xor
mov
pop
outsb
addl
adc
pushf
int3
inc
add
dec
icebp
sub
repz
gs
iret
and
rorb
inc
js
jbe
and
jnp
xchg
mov
adc
jne
inc
nop
xchg
lock
and
sub
sti
pop
inc
fildll
push
jo
sub
push
inc
jecxz
je
xor
jge
sbb
inc
rolb
mov
je
and
ss
je
xor
dec
cs
mov
js
push
int3
xor
cmp
loopne
rcr
mov
mov
hlt
nop
push
mov
jge
cld
adcl
adc
in
adc
ljmp
jae
inc
pop
insl
xchg
aas
add
fldenv
je
mov
dec
jl
dec
mov
popa
pop
pushf
scas
popa
inc
addr16
adc
inc
imul
add
insl
jmp
shrl
pop
lret
ljmp
mov
dec
ljmp
decb
jne
push
lock
jmp
adc
pop
pop
jle
scas
jno
mov
mov
mov
xchg
loope
sbb
jns
push
inc
adc
push
js
pop
ret
adc
mov
or
xor
adc
pop
push
sahf
mov
rcll
out
ljmp
and
lock
mov
movsb
and
cmpsb
add
jmp
and
and
lea
pusha
test
dec
cmp
jmp
imul
testl
adc
int3
cmp
imul
fldenv
add
cltd
mov
pushf
fs
ds
add
adc
lcall
lods
push
mov
xor
mov
xchg
dec
ret
mov
and
cmp
in
push
pushf
clc
push
movsb
gs
mov
adc
xchg
aad
add
cmp
bound
mov
gs
shl
lds
sbb
ret
cltd
loopne
sbb
cli
lea
adc
ss
mov
mov
add
xor
adc
push
and
mov
ret
xchg
add
push
adc
xchg
shl
rclb
cmp
shrb
cmp
xor
cmpsb
inc
popa
addb
adc
and
push
push
add
xchg
std
xchg
test
leave
je
bound
push
popf
xor
jmp
scas
repz
jbe
sahf
or
xor
insl
adc
xchg
lock
jle
lods
lea
push
xchg
push
mov
or
add
rcll
cmp
xor
fwait
imul
inc
scas
sub
adc
add
shll
fisttps
xor
push
cmpsl
adc
aam
xor
or
ficomps
jo
out
jns
adc
jne
sbb
ficoms
fbld
icebp
cmpsb
call
movsb
push
mov
or
cmpsb
dec
xchg
mov
pop
and
xchg
mov
cmp
xor
loopne
ja
movsb
dec
cmp
je
or
jo
cmc
pushf
adc
dec
mov
rorb
ljmp
rorl
lods
or
inc
fisttpl
cmpsb
pop
out
ja
mov
or
loopne
or
jecxz
cmpsl
mov
ret
pop
ret
pop
adc
mov
repnz
movq
lea
xor
push
inc
popa
jne
vhsubpd
fs
les
dec
push
or
rclb
xor
mov
out
push
mov
roll
cmc
fisttpll
mov
aas
inc
imul
cmp
call
stc
ret
sub
mov
push
add
and
and
rcl
sbb
cwtl
cltd
subb
mov
add
popa
pushf
dec
enter
pop
xor
cmc
rclb
out
mov
push
clc
and
arpl
adc
in
outsl
and
mov
push
ds
movsl
add
mov
decl
sbb
popf
or
scas
out
fildll
mov
ds
shrl
ret
loop
gs
dec
dec
popa
and
sbb
xor
outsl
bound
dec
imul
je
push
adc
into
lret
jg
sub
enter
dec
push
sahf
adc
mov
or
push
aaa
add
rorb
sbb
add
mov
adc
ja
dec
add
xlat
push
push
and
jg
mov
fistps
imul
fadd
lods
xchg
fisubs
insl
xor
decl
and
dec
loop
and
ret
dec
insl
cli
arpl
addr16
shrl
pop
insl
iret
add
mov
pop
mov
mov
and
xor
xorl
xor
les
push
mov
orb
cs
inc
dec
call
xchg
mov
out
lds
and
add
sbbb
or
inc
repz
sbb
loope
sub
or
pinsrw
mov
icebp
add
mov
jo
inc
loop
add
mov
push
xchg
outsb
es
fldcw
lods
stos
add
loop
movsl
pop
mov
xor
dec
pusha
inc
sbb
lods
add
jl
mov
call
ljmp
mov
xchg
loope
insl
jno
xor
fcmovb
in
xor
push
mov
aam
inc
lahf
lret
push
cwtl
test
adc
adc
insl
dec
sub
incl
pop
insl
mov
leave
add
shrb
mov
xchg
mov
xor
xor
arpl
fstpl
test
sar
mov
sbb
daa
jae
adc
imul
push
jne
outsb
jmp
and
out
leave
push
jns
push
and
lret
test
sbb
hlt
mov
or
lahf
aad
xlat
xor
mov
pop
scas
sbb
sbb
mov
jbe
mov
clc
popa
jl
sarb
mov
push
push
lret
push
add
push
cmp
int
cmpl
outsb
loopne
xchg
std
lock
pop
daa
push
test
mov
or
enter
add
jnp
arpl
mov
push
sbb
xchg
cmp
add
arpl
sub
lea
and
bound
xchg
es
pop
popa
dec
test
adc
xchg
loope
pop
test
dec
inc
inc
and
in
pop
outsl
and
adc
pop
xor
cmpsl
rcrl
push
add
outsb
adc
jbe
mov
adc
push
xor
and
xor
sbb
jecxz
cmp
andb
add
int
inc
incb
arpl
sub
xor
mov
stc
push
xchg
lock
sbb
lods
inc
loop
in
fidivrs
jge
dec
loopne
pop
inc
adc
pop
fcmovnb
out
pop
testl
in
pop
dec
xchg
orl
push
mov
xchg
inc
pushf
pop
and
xchg
stos
and
inc
aam
push
dec
scas
sub
and
sub
mov
push
loopne
pop
mov
push
aad
movsb
iret
adc
xor
adc
lock
inc
testl
mov
fs
js
rcrl
loope
es
lods
mov
mov
sbb
arpl
scas
icebp
or
insb
inc
sahf
jmp
add
test
dec
mov
lods
push
or
xchg
push
xor
dec
and
mov
ror
mov
mov
sub
pusha
xchg
xor
xchg
push
cld
hlt
sub
or
loopne
xchg
xor
jmp
js
ret
add
pop
sbb
sub
or
add
push
and
xchg
sbb
rcrl
cmp
jno
jp
sub
pop
xchg
gs
mov
mov
inc
mov
dec
stc
cmp
cli
fistps
add
mov
or
sub
pop
adc
sbb
cmc
test
ret
ja
lea
and
pop
fstp
movsl
pop
xchg
push
icebp
pop
inc
shlb
mov
inc
scas
mov
into
jno
mov
sub
outsl
in
sub
aaa
rcrl
filds
mov
jno
add
inc
push
enter
test
and
adc
mov
repnz
jp
xor
adc
or
push
insb
xchg
scas
jno
movsb
nop
mov
je
js
dec
dec
jmp
jecxz
sub
sti
cwtl
push
inc
inc
add
sub
xchg
lcall
ret
and
push
cmp
movsb
push
mov
adc
xor
test
pop
dec
add
leave
sti
mov
mov
push
out
daa
test
das
jbe
or
pop
loope
test
add
add
stos
add
jmp
and
clc
xor
or
sbb
mov
mov
sbb
push
xchg
or
repz
mov
or
xor
jge
gs
pop
or
cmp
jns
cmp
mov
jb
loope
jmp
inc
jb
add
fucomp
add
mov
push
jns
hlt
and
out
dec
xchg
push
and
xor
add
inc
std
call
fisubl
xchg
rolb
pop
ret
enter
scas
or
cmp
loopne
fdivrs
js
push
les
jmp
inc
fisttpl
test
jecxz
add
mov
lcall
xchg
mov
mov
mov
jecxz
sub
push
test
inc
push
and
add
add
mov
fwait
iret
rcll
fwait
mov
ja
test
arpl
push
dec
mov
dec
add
addb
test
add
sub
cwtl
aas
mov
shlb
jae
test
mov
lcall
stos
mov
adc
popf
repz
cmp
xor
push
lea
mov
rol
or
push
testb
ret
mov
mov
aaa
jns
inc
mov
iret
push
pusha
xor
jbe
jne
xor
xchg
fildll
das
into
pushf
cmc
out
cld
incl
cld
es
xor
xchg
cmpsl
rorb
push
pop
sbb
dec
sbb
push
inc
push
orl
xorb
shlb
pop
mov
fsubs
xchg
sbb
sbb
inc
dec
leave
ret
jg
mov
andb
mov
cmpsl
sbb
setae
xchg
pop
jns
xor
aad
and
pop
xor
xor
push
and
clc
je
push
push
push
fsubrs
imul
add
mov
fadds
xor
mov
flds
fistl
push
jae
ficompl
jmp
cmpsb
dec
xchg
jecxz
mov
lods
mov
mov
push
sbb
fwait
pop
cmc
mov
lcall
sub
dec
mov
jmp
xor
inc
push
in
and
xchg
std
jg
xor
xchg
adc
xor
jo
xchg
js
inc
test
mov
testl
ret
cmp
mov
dec
cld
or
sbb
dec
out
in
and
xor
dec
xor
aaa
push
test
fwait
mov
scas
xor
mov
fisttps
test
fsubr
push
outsl
int
and
cmp
mov
pusha
inc
jecxz
inc
add
ljmp
scas
dec
push
rol
push
imul
jg
les
sub
push
xchg
mov
fisubrs
jno
arpl
pop
dec
dec
fmuls
jb
push
add
dec
inc
adc
dec
nop
gs
lcall
dec
arpl
call
and
dec
inc
push
jbe
dec
insl
dec
ret
ljmp
lret
aas
daa
mov
repnz
dec
xor
add
jg
xlat
nop
pop
cs
subl
iret
jmp
ficompl
fcmovnu
ret
mov
inc
jmp
push
bound
dec
or
dec
push
sahf
add
and
jg
in
jne
je
ljmp
inc
dec
loopne
sarl
repnz
adc
inc
pop
cmp
push
jne
ljmp
dec
mov
jmp
and
push
dec
aas
cmc
fisubrs
xchg
aam
iret
cltd
add
xlat
cmp
mov
pop
lods
adc
inc
sahf
mov
push
xchg
xor
sub
jne
pop
or
jp
fildl
mov
lret
jae
stc
and
and
pop
mov
dec
jp
jg
sub
loopne
xchg
pop
mov
jne
push
js
inc
adc
je
inc
xor
mull
inc
dec
pop
inc
lea
cld
dec
dec
fwait
hlt
jns
or
jae
jmp
dec
mov
add
arpl
decb
imul
pusha
gs
out
aam
adc
adc
ss
aaa
sahf
das
or
xchg
jne
pop
sub
xchg
push
sub
mov
inc
pop
nop
jecxz
les
test
dec
xor
pop
sbb
jmp
xchg
es
xchg
shr
mov
das
pop
enter
inc
adc
push
xchg
sbbb
pop
fdivrl
test
mov
test
xchg
push
je
movsb
push
out
sahf
push
loope
into
cmpsl
mov
and
addr16
push
xor
nop
adc
adc
jbe
add
push
pop
pop
and
adc
aaa
jb
jecxz
add
in
mov
imul
ret
adc
cmp
dec
stc
push
gs
xor
xlat
fstl
push
mov
push
add
inc
ret
pop
shll
lods
cmp
adc
je
inc
fstl
add
and
xor
pop
aad
add
das
inc
xchg
lret
push
adc
mov
loop
dec
ss
mov
xchg
shrb
jl
adc
jo
inc
fdivs
imul
hlt
and
or
mov
xor
jl
inc
int
scas
pop
or
and
mov
push
xchg
mov
xlat
pop
mov
xchg
rclb
push
rorl
mov
mov
scas
bound
add
test
movl
jno
jns
test
sbb
imul
mov
dec
out
xor
pop
xchg
inc
mov
mov
js
ret
roll
subl
mov
add
rcrl
xor
cmpsl
shl
xchg
je
xchg
pop
in
cmp
push
jb
movsl
push
loopne
aam
fs
clc
int
xchg
packsswb
fisubrl
test
cmp
push
mov
cmp
xchg
jg
shrl
cmc
lret
xchg
jne
sub
hlt
mov
test
sbb
mulb
fisttpl
in
push
pop
or
enter
loop
addb
ret
sbb
popf
mov
out
xchg
nop
roll
inc
popf
mov
adc
adc
adc
shll
ret
inc
cmp
jmp
nop
inc
inc
jns
cmp
mov
push
adc
repz
fildll
xlat
inc
leave
leave
daa
cmpb
add
mov
pop
mov
test
lret
imul
sbb
cli
lcall
clc
jae
cs
shlb
out
xchg
mov
lcall
aad
sbbb
shlb
add
or
jp
insl
insl
dec
inc
dec
lahf
mov
bound
jns
inc
jmp
mov
jno
adc
inc
dec
ljmp
cltd
out
stos
cmpsb
scas
arpl
dec
dec
push
pop
jo
mov
push
mov
ret
movsl
jo
shl
cmpsl
push
jbe
or
xor
push
fs
adc
insl
insl
jmp
mov
jns
fwait
mov
test
push
into
shrb
fimull
dec
lret
lea
or
je
dec
dec
decl
and
jb
movsb
add
lret
and
push
sar
sbb
hlt
xchg
push
dec
xchg
loope
fs
jmp
pusha
int3
jo
insb
jg
sub
out
push
push
aaa
push
test
xchg
xor
repz
add
ljmp
in
fadd
sbb
mov
sbb
pop
xchg
and
repz
mov
cs
aas
or
pop
insl
xchg
inc
inc
pop
cmp
sub
or
mov
sub
ja
pusha
or
lea
call
cs
test
enter
xor
hlt
pushf
stos
push
sbb
jne
push
add
sub
loope
jmp
test
sar
lds
ror
outsl
mov
dec
mov
seto
mov
repz
adc
jne
jae
sbb
dec
cmp
outsl
jo
test
xchg
pop
sbb
jmp
mov
and
add
push
repz
jl
add
add
es
insl
xchg
xchg
test
popa
fstps
movsl
nop
fimull
mov
mov
pop
test
inc
add
dec
dec
sbb
inc
enter
jo
dec
in
and
pop
pop
inc
repnz
cmp
jne
or
dec
shlb
cmpb
push
jmp
adc
push
push
int
das
in
mov
in
and
fs
lret
pop
or
rcll
test
sti
test
into
add
hlt
add
xor
lods
adc
or
add
lea
adc
cmp
jg
jp
or
in
push
sahf
lahf
out
ja
adc
sbb
call
icebp
mov
clc
leave
popa
fldl
prefetcht0
lds
or
orb
cmc
sub
cmp
arpl
xchg
loop
mov
aaa
scas
push
add
mov
fwait
mull
mov
int3
push
sub
pop
cmpsl
cmp
loop
test
push
aaa
adc
stos
adc
inc
orb
and
jno
push
push
stos
cltd
jle
lods
mov
inc
xchg
inc
mov
loopne
adc
orl
jmp
adc
filds
ret
insl
and
psubusw
add
aad
add
nop
punpckhdq
test
pop
daa
gs
mov
push
add
dec
fildl
jle
loope
fstpt
jo
add
movsb
fadds
add
pop
push
cmp
xor
mov
lea
xor
mov
xchg
push
mov
lcall
jecxz
add
jo
int3
fidivrl
cmp
sbb
xchg
ret
fdivrl
fnstcw
or
add
jns
jmp
aaa
dec
sub
sub
add
inc
xor
mov
divl
push
inc
inc
add
xchg
lods
aaa
jno
xchg
inc
lcall
push
dec
test
test
xchg
mov
and
pop
data16
cmp
pushf
dec
mov
fstl
dec
rolb
add
dec
cmpsb
dec
add
in
push
add
inc
jb
inc
nop
testb
cs
in
xor
incl
mov
dec
test
pop
cmc
ja
popf
int
icebp
mov
outsb
movsb
jns
dec
push
dec
xchg
stc
add
inc
out
in
mov
ret
inc
inc
xor
mov
dec
inc
mov
gs
push
xchg
xor
out
sbb
add
push
adc
mov
pop
lock
decl
xchg
sub
nop
cwtl
orl
mov
clc
xchg
jg,pn
cmc
xchg
gs
popa
push
xor
fs
jge
and
test
ror
xchg
add
pop
cltd
cmp
adc
push
push
xchg
sub
xchg
add
xchg
mov
int
ds
imul
cld
mov
adc
mov
fstpl
scas
pushf
lds
add
out
bound
inc
daa
or
aaa
dec
xor
loopne
fists
popa
ss
lcall
jbe
rcrl
insl
insl
jl
bound
and
ljmp
dec
sbb
adcl
xchg
inc
div
cld
dec
aad
stos
insb
std
lcall
pop
jp
xor
push
lcall
enter
mov
test
insl
dec
dec
sbbb
and
imul
sbb
dec
arpl
or
jno
inc
outsb
jae
jae
loopne
add
ljmp
dec
jbe
ret
push
sub
pop
jbe
dec
shrl
jp
popa
int
sbb
in
ss
dec
and
inc
loop
mov
imul
out
add
xor
popa
in
or
shll
setp
mov
sarb
je
insb
test
icebp
mov
fadds
or
jns
push
dec
imul
or
jg
out
inc
je
dec
mov
ret
mov
dec
inc
fmull
test
add
xchg
mov
dec
xchg
mov
leave
pop
scas
ljmp
fsubrl
imull
xchg
outsb
lods
cmp
pop
loop
xlat
nop
dec
jns
cs
jle
cmp
inc
scas
sub
lds
sub
cli
or
dec
out
push
inc
pop
cmp
pop
adc
sbb
mov
add
xchg
mov
mov
add
mov
or
sbb
dec
orb
sbb
icebp
dec
sub
addb
jno
scas
popa
and
push
jne
pushf
dec
push
xor
cwtl
mov
ljmp
sub
mov
and
or
and
imul
and
mov
cltd
and
mov
movsb
pop
mov
xor
ret
movsl
mov
mov
xor
sbb
add
popa
stos
and
xor
jecxz
mov
mov
es
add
movhps
mov
fstp
adc
xchg
push
or
loopne
fwait
mov
jnp
sub
mov
xor
mov
add
or
rolb
jecxz
push
or
js
inc
ret
and
and
andb
jecxz
pop
jo
pop
push
jno
adcl
adc
es
mov
out
enter
sub
les
aam
pusha
xor
repz
push
add
sbb
hlt
loop
add
mov
xor
cmp
or
shlb
inc
jns
xchg
push
mov
lds
out
add
sub
push
and
mov
xor
test
adc
adc
inc
or
cmp
popa
or
sub
mov
inc
lods
fsubrl
adc
pop
pushf
jnp
icebp
ret
stos
lods
or
into
mov
add
sbb
or
mov
mov
rolb
popf
sbb
sbb
scas
sbb
push
pop
pusha
and
test
rol
xor
mov
rorb
inc
mov
pop
and
movsb
push
mov
into
xchg
push
hlt
and
pop
ror
fs
test
sbb
push
nop
in
mov
je
inc
push
mov
and
sub
push
lahf
push
cmp
cs
lcall
fiaddl
decl
and
sub
mov
movsl
push
sub
push
and
mov
das
pop
dec
jne
push
push
rcrb
clc
inc
and
popa
sahf
roll
jge
mov
hlt
loop
aaa
std
fsubrs
leave
mov
mov
sahf
les
pushf
and
daa
subb
pop
fs
push
jne
push
mov
imul
inc
mov
rcll
mov
fmulp
xor
dec
jno
or
adc
and
mov
stc
adcb
pop
gs
or
cmpl
xchg
lea
clc
inc
add
ds
testl
mov
xor
xchg
ds
ja
dec
or
mov
insl
mov
cli
shrb
jmp
mov
adc
adc
mov
sarb
addr16
sbb
dec
push
sub
and
mov
xor
dec
xchg
sbb
incl
and
je
inc
repnz
fs
sbb
pusha
add
fists
out
xchg
sub
roll
gs
mov
dec
js
fisubl
push
insb
ss
cli
pushl
xchg
test
filds
xor
inc
test
cli
decl
or
jecxz
lcall
outsl
add
lcall
das
nop
add
add
jno
inc
test
jo
sub
adc
cmp
mov
push
mov
adc
jecxz
clc
fistpll
or
sbb
aad
popf
xor
xchg
inc
je
lret
mov
inc
mov
ljmp
xchg
sbb
dec
xor
push
es
pushl
dec
std
and
adc
adc
add
cwtl
push
aaa
imul
pop
mov
mov
dec
ret
fadds
jns
mov
sbb
dec
call
inc
insb
swapgs
inc
das
cwtl
fbstp
add
jno
aas
sbb
outsl
sbb
cwtl
xchg
repz
sti
inc
add
dec
push
pop
or
push
lods
sahf
mov
adc
out
mov
add
jae
push
rcrb
inc
jecxz
xor
gs
dec
adc
andb
ljmp
mov
sbb
int3
adc
push
xor
std
lods
ja
and
mov
cmp
ret
mov
mov
inc
mov
dec
pop
ss
ret
push
jo
lahf
std
jle
ja
jbe
faddp
inc
xor
xchg
in
test
inc
dec
sub
outsl
rcll
cmp
pop
shll
jb
jmp
or
negb
test
cmp
xchg
pop
and
scas
or
aam
inc
loopne
jmp
outsl
and
or
mov
add
icebp
push
xor
ljmp
icebp
pop
aam
and
xor
xchg
sbbb
mov
clc
jg
ret
add
sarb
test
js
scas
orl
xchg
mov
std
pop
sub
inc
into
dec
neg
dec
inc
inc
lods
push
inc
inc
xor
ret
orb
adc
or
inc
loope
add
mov
shrb
arpl
push
mov
enter
pop
sti
cs
in
je
xchg
jecxz
popf
or
add
lahf
mov
test
lods
sub
mov
jg
inc
inc
push
cmp
adc
xchg
pop
std
or
mov
lds
dec
inc
test
inc
mov
xor
or
leave
into
out
inc
into
sub
popf
movsb
mov
cmpb
or
add
outsb
mov
sub
push
inc
nop
or
xchg
jo
aaa
enter
lds
cltd
gs
add
adc
jle
xor
mov
mov
inc
popf
out
pop
das
in
dec
jg
imul
dec
aaa
in
xchg
adc
push
sbb
sbb
movsb
pop
shll
dec
dec
xor
pushw
aas
or
pop
mov
push
rol
insb
push
inc
dec
pop
adc
mov
inc
inc
jae
int
add
lods
aad
icebp
xor
or
jecxz
add
lods
in
and
mov
je
xchg
jno
movsb
sbb
sbb
mov
cmpsb
testl
and
dec
cmp
mov
or
xor
fists
cltd
adc
xor
push
repnz
daa
movsl
pop
cwtl
rclb
js
dec
mov
mov
dec
fs
loope
jno
push
shl
push
scas
sbb
call
or
sbb
test
sub
jmp
sub
mov
push
mov
pop
push
addl
call
jb
xchg
loop
aas
insl
data16
jo
iret
test
leave
adc
add
insl
shrl
and
and
pushf
pop
dec
dec
push
xchg
sub
sbb
dec
or
test
mov
orb
jg
pop
xor
adc
inc
out
sbb
mov
adc
and
ja
or
push
enter
leave
push
mov
cmp
decl
sbb
adc
movsl
sub
pop
pop
inc
or
xchg
aam
xchg
dec
add
jge
loopne
xchg
je
scas
and
xchg
cmp
aad
xor
add
cltd
xchg
cmp
ret
loopne
or
lcall
decb
add
cs
addr16
and
mov
push
add
add
dec
xchg
test
xor
xor
rolb
call
daa
mov
incl
ss
out
mov
mov
fcmovbe
xchg
push
pop
movsl
pop
push
cmp
and
add
lock
mov
shlb
jne
pop
insb
rolb
sarl
jns
sbb
xlat
sub
cmp
sbb
int
push
add
movsb
stos
fstp
and
xor
adc
or
mov
jo
xor
outsl
pop
nop
dec
xchg
sbbb
mov
dec
pop
push
ja
andl
in
push
jl
pop
xor
shll
scas
push
gs
jae
jo
and
fwait
insl
out
jb
inc
jo
es
bound
xchg
jae
mov
mov
ret
mov
je
mov
mov
xlat
push
repnz
sbb
jns
adc
mov
mov
mov
pop
mov
dec
and
inc
dec
fdivs
das
mov
mov
addr16
push
pop
sub
sbb
arpl
mov
inc
or
les
loope
rorb
test
stos
jmp
sub
or
xlat
in
pop
jne
dec
cmc
jl
xchg
or
inc
stos
push
cwtl
mov
aam
stos
push
xchg
nop
sub
push
sahf
or
cmp
insl
and
xchg
cmp
pop
in
sub
add
jl
xor
hlt
ret
movsb
pop
pop
jge
dec
inc
popa
dec
jmp
or
or
js
scas
cmp
pushf
mov
test
sti
lock
add
sbb
jle
popa
movsl
push
in
add
scas
cwtl
dec
cmp
and
lods
xchg
dec
ret
push
sub
sub
nop
xor
repz
test
add
mov
adc
adc
dec
rclb
adc
xchg
mov
pop
mov
xchg
lret
or
lea
xlat
rorb
icebp
push
push
adc
adc
inc
and
roll
dec
mov
push
inc
test
jo
sub
add
js
add
out
mov
xchg
cli
jecxz
mov
sub
pop
ja
mov
sti
idivl
lods
orb
mov
mov
nop
push
and
jae
push
mov
xor
mov
dec
sbb
into
gs
loop
cmp
push
nop
sbb
adc
std
sub
inc
fwait
add
shlb
fldcw
mov
dec
roll
mov
mov
das
adc
mov
xchg
push
sbb
mov
pusha
dec
ds
cld
outsl
stos
int
jno
cmp
aas
xchg
jg
call
xchg
cmp
sbb
push
imul
std
loopne
xchg
mov
imul
inc
inc
adc
or
mov
ja
add
dec
and
mov
inc
add
add
stos
dec
inc
xchg
std
jg
loope
mov
xor
dec
xchg
xchg
xchg
sub
aam
cli
sahf
andl
stos
jmp
xor
jl
mov
xchg
and
loop
inc
and
push
adc
pop
add
imul
or
jne
push
inc
aaa
or
xchg
repnz
ljmp
push
dec
dec
mov
mov
jb
rcrb
lea
adc
push
add
jg
js
pop
scas
or
sub
das
xchg
jg
adc
stos
pop
xor
jne
mov
addb
into
lods
pop
jb
scas
add
incb
rorb
lock
cmpsb
gs
out
inc
in
dec
sti
inc
jg
or
jecxz
cmpsb
jbe
jp
rol
adc
mov
push
adc
mov
mov
cmpsl
push
inc
pop
inc
inc
into
movsb
addr16
loope
dec
jl
inc
mov
jbe
test
cld
push
mov
neg
dec
insb
jns
push
aad
call
push
adc
ja
repz
mov
and
sbb
faddl
dec
sub
cli
cmp
push
jae
pop
mov
jo
cmp
xchg
add
das
mov
pop
outsl
int
mov
dec
fmul
lcall
enter
out
popf
and
fistps
push
aaa
inc
pop
aas
je
inc
dec
out
push
dec
rolb
or
dec
ljmp
sti
test
inc
and
mov
mov
jbe
dec
les
xlat
pop
pop
test
or
loopne
sbb
shlb
movsb
fwait
and
cwtl
mov
xor
xor
lock
dec
push
sbb
inc
mov
fdivs
add
push
jb
imul
inc
pushl
mov
test
pop
mov
out
nop
hlt
pushf
jecxz
sub
cld
and
mov
dec
movsb
pop
imul
push
dec
cld
push
dec
jae
push
sub
insl
xchg
sub
and
repnz
sbb
fsubrs
inc
rcll
jno
orb
push
sbb
mov
add
test
mov
imul
add
jp
test
jb
sub
dec
jae
xor
inc
ds
add
sbb
dec
adc
test
cmp
pushl
inc
les
add
test
lret
inc
add
dec
adc
cld
sbb
sub
dec
xchg
imul
xor
cli
ret
adc
mov
xor
or
cwtl
lds
pop
cmp
add
adc
js
cmp
xchg
mov
test
ret
stos
mov
mov
mov
mov
pop
popf
xor
sub
xchg
xchg
mov
lock
cmp
adcb
xchg
sub
push
mov
fwait
mov
call
push
pop
or
inc
sbb
jne
push
xor
dec
pop
add
sub
and
sbb
push
inc
rcrl
push
dec
push
dec
or
sbb
push
cwtl
mov
add
push
popf
jo
addb
mov
lahf
jae
movsl
dec
fcompl
jecxz
jmp
inc
cs
and
xchg
and
aaa
aaa
dec
mov
outsl
add
jecxz
bound
ret
add
shl
arpl
sub
insl
jnp
mov
push
dec
inc
xor
ds
push
repnz
inc
jmp
rcrl
cmp
aad
in
adcb
jnp
push
inc
movntps
into
invd
dec
lock
xor
mov
js
sbb
jmp
mov
jnp
pop
sub
lds
jae
lds
cmp
mov
repz
mov
fwait
shrl
push
adc
add
call
mov
sbb
inc
test
or
or
rcrb
dec
xor
inc
sbb
fstpt
andl
test
mov
ljmp
mov
test
int
or
fcmovnu
push
call
ret
dec
xor
sub
dec
and
bound
lcall
pop
in
clc
add
xchg
or
nop
js
das
or
in
sbb
cwtl
xchg
jns
push
add
orb
outsb
mov
dec
ja
pop
ja
mov
mov
lcall
mov
sbb
push
jbe
mov
insb
sbb
push
dec
repz
push
sbb
pop
xor
rorb
lods
sub
push
jae
dec
lock
pop
inc
pop
add
decl
inc
leave
push
and
lods
clc
lds
xchg
scas
cmc
lret
jae
int
xchg
jne
jb
inc
xor
add
mov
cli
xor
pop
mov
sbb
stos
iret
dec
cmp
cs
push
xchg
arpl
dec
inc
mov
xchg
pop
cmp
mov
adc
push
les
lock
mov
mov
xchg
ret
pop
inc
mov
loop
xchg
cmp
fisubrl
sbb
xor
xor
fpatan
add
insl
lods
cmc
sahf
hlt
mov
flds
test
dec
add
xorb
and
inc
jge
jno
jmp
aaa
iret
pop
push
push
mov
stc
cltd
jne
insb
icebp
lods
jle
mov
mov
icebp
adc
je
loope
push
or
leave
sbb
arpl
add
or
push
clc
test
jbe
mov
push
add
xchg
mov
xor
aaa
icebp
or
lds
inc
test
mov
fwait
and
push
lea
add
aas
add
ret
imul
test
subb
test
icebp
mov
lods
shll
sarl
fnstcw
sar
or
icebp
xor
jmp
sarb
dec
sar
inc
lcall
loopne
arpl
fcoms
mov
inc
push
push
test
mov
pusha
adc
sub
je
jecxz
pop
add
mov
iret
xchg
stc
loop
add
or
mov
cmp
inc
add
sub
popa
xchg
fs
sbb
sbb
mov
pop
add
xchg
fs
aad
push
dec
sbb
mov
loop
cld
jecxz
mov
fnstsw
push
insl
out
inc
cmp
lods
sbb
jns
and
pop
mov
cmp
sbb
cs
leave
jmp
adc
pop
int3
cmp
fstenv
insb
dec
cmp
cwtl
ds
mov
clc
mov
jge
xor
inc
mov
lds
or
and
mov
push
stos
mov
mov
or
popf
push
aaa
popa
add
push
shrl
insl
jno
add
cmp
or
mov
mov
adc
dec
and
sub
push
push
sub
lahf
jmp
add
out
adcb
and
mov
xor
lea
dec
scas
xor
adc
push
imul
leave
es
je
xor
icebp
push
fiaddl
jb
stc
enter
imul
imul
rcrl
jno
jge
mov
loopne
xor
push
lcall
loopne
mov
shr
push
imull
mov
dec
mov
sub
xor
daa
mov
inc
mov
in
xchg
adc
test
jmp
dec
sbb
cmp
lcall
push
sub
jmp
call
jmp
pop
adc
xchg
push
push
insl
addl
sbb
cmp
nop
cmp
dec
aas
dec
adc
jmp
inc
jbe
add
movb
jbe
mov
inc
insb
dec
ljmp
inc
push
inc
xchg
mov
daa
dec
xchg
cmp
add
int3
pop
mov
push
mov
scas
xor
movsb
mov
movl
imul
mov
mov
sarb
js
insb
outsb
dec
sbb
push
add
cmp
jmp
dec
mov
xchg
test
mov
pop
pop
mov
push
jne
mov
fadd
or
mov
or
mov
std
mov
adc
mov
jne
and
mov
call
inc
jno
pusha
pop
ret
add
xor
jl
insl
stos
or
stc
and
jl
jae
push
ret
xchg
inc
int
loop
jg
mov
sub
add
imul
pusha
push
jo
pop
cmp
cmpsb
fcoms
sbbb
adc
and
call
adc
test
pop
sbb
and
xchg
pop
adc
and
or
or
sbb
mov
pop
imul
jb
std
ret
movsb
or
test
or
or
ja
xlat
test
setp
idiv
int3
add
push
pop
rol
lds
pop
fsubr
adc
adc
test
fiadds
leave
jno
jns
inc
loopne
sub
lea
jbe
iret
pop
rol
mov
adc
cmp
push
cli
adc
and
cltd
inc
dec
add
jp
xchg
xchg
das
aam
cmp
push
inc
jb
xorb
mov
daa
jne
jne
inc
lds
jmp
add
cmp
hlt
orb
sbb
mov
sbbl
xor
push
jno
adc
and
pop
fisttpl
fwait
xor
and
adc
xor
inc
adc
push
outsl
xchg
add
aad
sub
roll
call
ret
inc
les
je
mov
or
dec
jle
shlb
push
xchg
mov
mov
jne
fmulp
mov
push
push
lea
sub
jns
push
xchg
inc
xchg
dec
ja
mov
xchg
sbb
sbb
popf
sbb
xor
inc
lds
xlat
push
pusha
jne
addr16
jno
sbb
mov
sub
dec
shll
fisubs
cwtl
jmp
lock
stos
test
mov
jo
sub
and
sub
incl
psraw
andl
mov
dec
and
mull
mov
add
sbb
mov
and
cmp
adc
das
mov
inc
ss
jo
shll
in
popa
mov
shrb
stos
cmp
movsl
test
nop
decl
push
sub
push
sbb
repnz
fs
dec
lret
ds
push
inc
and
fistl
fwait
mov
fisubrl
push
cli
movsb
push
or
popf
aas
dec
fstl
inc
push
lcall
pop
push
and
rclb
push
adc
add
mov
push
dec
out
dec
push
pop
call
inc
loop
push
scas
pop
push
jg
sbb
repnz
fstps
and
add
fidivs
mov
and
shrb
insb
jno
mov
fimuls
mov
lcall
add
aad
lods
clc
mov
xor
push
lret
xor
sub
sbb
jmp
out
add
daa
mov
cmp
roll
movsb
dec
add
jp
imul
ljmp
loop
add
dec
sbb
invd
outsb
lea
cmc
xor
int
sub
jle
push
xchg
pusha
push
cltd
int3
insb
inc
push
xchg
rcll
inc
into
xchg
out
rolb
add
or
pop
mov
mov
dec
inc
iret
vmulps
push
xor
xor
movsl
mov
xor
filds
lock
or
push
mov
add
roll
dec
insb
popa
adc
les
jg
dec
jp
mov
popf
pop
mov
push
pop
sar
push
push
insb
cld
push
or
aaa
ljmp
scas
push
inc
outsb
outsb
rcrl
sub
jmp
push
add
mov
push
xchg
adc
ljmp
push
inc
sub
push
addr16
dec
xchg
mov
inc
popa
inc
xor
cmp
dec
pmaxsw
cmpsb
cmp
add
icebp
and
xor
movsl
jns
add
cmpsb
and
out
leave
pop
jle
inc
je
dec
popa
ljmp
movsb
ret
inc
mov
add
repz
inc
sub
ret
into
mov
and
jmp
push
fdivl
inc
adc
pop
sub
dec
pushf
addr16
pop
and
dec
jg
dec
jnp
add
cmc
js
pop
test
hlt
xlat
pop
mov
cld
xchg
adc
scas
mov
sbb
rcr
sar
inc
jbe
sti
dec
out
inc
dec
jns
mov
addr16
sbb
sub
sarl
retw
xor
push
sub
xchg
inc
push
add
xchg
push
or
jg
rorl
cmpsb
mov
jmp
imul
orl
push
es
fsts
test
ds
jmp
lods
xlat
dec
orb
ret
push
sahf
pop
jmp
xchg
pop
mov
jmp
decl
sub
sbb
jne
scas
cmpsb
xchg
sahf
scas
pushf
pop
xor
sar
stc
sbb
xchg
loopne
cmpsb
dec
imul
inc
addb
push
sub
sub
popf
cmp
das
add
inc
repnz
sub
cmp
sbb
push
push
mov
mov
sbbb
xchg
jbe
pop
push
loopne
add
mov
push
subl
loop
sti
inc
mov
les
inc
add
add
cmp
sbb
ljmp
ficompl
or
push
cmp
add
arpl
data16
or
xor
sti
or
je
movl
mov
sahf
int3
sub
cli
shrl
loopne
add
jmp
popa
dec
lcall
and
dec
lcall
adc
in
jne
bound
cmp
jge
add
mov
inc
orl
fwait
sbb
or
std
sbb
pusha
pop
sub
iret
icebp
and
pop
mov
mov
cmp
fxch
movsb
sub
jg
pop
push
sbb
xor
cmp
push
loop
sbb
jbe
jae
cmp
aas
stc
jo
adc
mov
test
scas
push
push
sbb
cmp
movsl
rcrb
sbb
sub
dec
push
je
sbb
dec
leave
ljmp
js
arpl
mov
add
pop
xchg
je
imul
lds
ret
sub
outsb
out
pop
stc
cmpsb
in
add
xor
sub
lods
pmaxub
shrb
xor
in
xor
sbb
inc
pushf
xchg
arpl
jmp
add
int
mov
sbb
pop
je
inc
mov
sbb
push
das
cmp
adc
xor
add
lcall
les
clc
inc
adc
adc
add
xor
lea
test
lret
cld
cmp
push
adc
cltd
mov
push
cmpl
clc
cmc
dec
or
cmp
jne
ret
mov
sbb
out
sub
sarl
mov
pop
add
dec
cmp
jnp
adc
add
mov
jnp
xchg
xor
repz
and
ret
sub
xchg
addl
xor
nop
std
add
dec
and
or
sbb
add
mov
nop
inc
sub
ret
or
mov
jb
xor
adc
andl
jne
pop
dec
dec
call
sub
sbb
and
mov
xchg
bound
or
dec
push
sahf
insb
cld
pop
xor
dec
outsb
shlb
push
push
outsb
xor
sti
push
xor
mov
add
das
or
aas
cmp
lcall
aam
adc
repnz
addr16
cmp
dec
imul
jle
xchg
dec
dec
insb
inc
mov
hlt
adc
in
mov
dec
push
xor
insl
outsl
gs
test
and
imul
sbb
push
xor
jo
push
aaa
dec
inc
dec
ljmp
dec
out
adc
push
fisttpl
dec
push
pushl
notl
out
or
lret
pushf
sub
dec
push
xchg
inc
or
inc
inc
push
stos
add
or
dec
pusha
mov
ret
cmc
aas
dec
dec
outsl
insl
xor
dec
fistpll
cmp
sbb
or
daa
push
scas
adc
mov
adc
in
in
in
sbb
add
shlb
loopne
add
dec
aaa
cld
adc
xchg
js
dec
cs
dec
push
call
or
mov
lea
inc
push
arpl
scas
dec
cmp
jle
jmp
in
push
and
movsl
pop
js
lret
add
push
push
inc
jb
mov
fistl
jb
lret
mov
dec
add
push
shlb
decl
call
push
jl
xchg
mov
sbb
ljmp
add
sar
test
imul
push
dec
mov
enter
adc
data16
push
cli
or
mov
adc
in
mov
shlb
or
stos
fs
dec
fistps
xchg
or
icebp
or
sub
sti
push
cmp
cld
mov
push
sub
and
outsl
mov
ret
movsb
imul
dec
pop
inc
or
push
xor
push
movsl
push
inc
dec
gs
adc
in
imul
pop
add
stos
dec
mov
or
dec
cmp
pop
jae
dec
insb
mov
push
repz
xchg
insb
jae
mov
mov
icebp
dec
push
mov
addb
fcoml
fisttpl
arpl
in
outsb
fstl
addr16
inc
push
cmpsb
adc
dec
fs
decl
push
out
bound
test
inc
cltd
or
insl
inc
cwtl
fiaddl
cs
jae
ja
xor
dec
dec
aas
mov
jns
fsub
dec
and
divl
andl
xor
xchg
ret
enter
lcall
adc
mov
outsb
push
mov
scas
cmp
cmp
pushl
scas
cli
movl
adcb
adc
mov
das
lods
shl
ja
stos
movsb
lret
popa
imul
push
jae
ret
inc
dec
adcl
pop
lret
stos
push
mov
clc
cmp
in
push
adc
cmc
xchg
pop
push
pop
jmp
insb
insl
ss
push
xor
in
testl
add
movsl
lea
out
lds
test
xor
add
clc
es
mov
push
daa
mov
out
incb
jp
pop
mov
mov
movsb
adc
cli
orl
gs
cmp
cmpsb
push
mov
mov
lods
dec
dec
or
mov
out
cmpsb
pushl
sub
inc
jg
xor
icebp
loope
jno
add
mov
xchg
icebp
mov
daa
adc
repz
mov
sbbl
add
add
hlt
fcmovnbe
xor
jae
mov
ret
mov
and
aad
lods
mov
repz
test
adc
scas
cwtl
or
outsb
add
in
rorl
add
sub
sbb
leave
mov
mov
sbb
pop
aaa
fwait
adc
bound
or
xchg
and
fsubl
add
mov
lret
mov
daa
add
cmp
inc
sub
add
inc
inc
das
inc
push
daa
mov
push
dec
xor
lods
shlb
sub
cmp
lock
out
jae
test
mov
or
jecxz
cmpl
pop
add
fcom
adc
and
push
xchg
and
addl
adc
sub
cltd
sub
addb
and
push
or
sbbl
adc
push
jmp
push
lock
dec
loop
xchg
cwtl
sbb
filds
adc
cmpsl
inc
mov
pop
scas
sub
push
add
xchg
adc
mov
pop
inc
shr
loope
and
add
and
mov
ret
lods
test
dec
pop
or
daa
mov
js
inc
shrb
push
pop
dec
and
cmp
loope
sbb
and
inc
pop
xchg
popa
les
mov
int3
cmp
jbe
cltd
push
add
and
or
jns
or
and
scas
sub
adc
fldenv
sub
xchg
push
push
or
adc
adc
inc
fsubr
pop
fistps
mov
or
ja
cs
popf
int3
rclb
rorl
cmc
lret
jns
add
add
jecxz
inc
ss
hlt
or
or
rolb
rolb
mov
inc
fwait
dec
jae
shlb
sbb
lret
mov
mov
pop
or
movsb
push
inc
xor
jmp
cmp
enter
orb
mov
push
pop
pop
movsb
repnz
xor
loopne
cmpxchg
icebp
adc
cmp
cmp
jno
aam
repnz
call
jmp
jo
and
sub
hlt
mov
add
lcall
mov
mov
sbb
pop
shlb
push
xor
inc
sti
add
bound
dec
sbb
ret
sbb
push
jo
adc
adc
push
mov
cwtl
cli
add
xor
and
push
dec
dec
sahf
call
push
jp
xchg
push
add
negb
call
hlt
adc
xor
test
sbb
jbe
ss
ret
stos
bound
inc
fiadds
aaa
xor
dec
movsb
dec
dec
jns
les
add
imul
lcall
ret
lods
es
daa
xlat
rcrl
and
aas
call
out
pop
fcomip
xor
cld
xor
pop
dec
aaa
mov
mov
imul
mov
ljmp
cmc
dec
cwtl
sbbb
ficompl
jle
fwait
inc
in
add
iret
xor
icebp
dec
or
push
stos
test
lcall
dec
decb
popa
fistl
dec
xorb
mov
ljmp
or
aam
enter
xor
mov
stos
clc
mov
scas
mov
jmp
mov
mov
and
fwait
sbb
sub
dec
cmp
push
inc
inc
jg
test
push
mov
add
dec
bound
insb
push
jne
incl
jge
fucomi
in
add
call
aas
hlt
jbe
cwtl
mov
jmp
fldpi
loopne
mov
fcom
clc
pop
inc
lahf
sbb
lds
mov
mov
cmpsb
outsb
adc
and
push
sti
xor
jo
inc
ja
aam
adc
js
inc
ja
sbb
push
sub
or
pop
jne
inc
jle
add
xchg
mov
push
adc
pushf
adc
or
mov
insl
xchg
out
jp
mov
adc
pop
jmp
fidivl
inc
subl
and
xlat
mov
sbb
mov
mov
test
ret
mov
mov
fs
xchg
jl
in
push
mov
add
adc
add
cmc
mov
pop
test
inc
or
fisttpl
xchg
xchg
add
pusha
aaa
rcrb
in
test
and
sub
test
adc
aad
or
ss
lea
sub
out
push
xor
inc
dec
iret
mov
or
aaa
cltd
je
adc
enter
or
gs
push
xchg
xchg
scas
jae
pop
mov
or
xor
mov
sbb
sub
rolb
test
pusha
cmp
lahf
dec
xchg
fbld
mov
leave
pop
cmp
rcr
and
rolb
pop
adc
inc
fimuls
adc
xor
add
and
and
and
xchg
jbe
test
loop
dec
mov
push
push
and
test
push
adcb
lret
call
jae
ret
adc
scas
jecxz
popa
cs
cmp
push
call
jno
inc
and
adc
rcrb
adc
adc
and
and
or
mov
stc
xchg
or
aam
out
lea
negl
push
add
inc
adc
inc
ret
mov
xor
xchg
inc
or
inc
pop
adc
test
pop
mov
adc
jns
ljmp
loope
mov
movsl
prefetchnta
sbb
out
push
dec
mov
push
push
jmp
mov
pop
adc
or
inc
mov
jb
push
addl
push
sar
push
push
adc
fwait
lods
add
shl
inc
repnz
jns
sbb
sbb
iret
jo
je
dec
mov
or
cmpsb
cmc
mov
pop
push
dec
mov
mov
call
mov
or
cmp
push
xchg
mov
test
sbb
and
push
maskmovq
divl
sbbb
xor
pushl
fwait
sbb
aaa
xchg
aaa
bound
popf
sub
dec
pop
js
ret
pop
addr16
push
inc
adc
inc
jbe
js
or
aam
sbb
jl
movl
dec
inc
xor
or
aam
faddl
imul
lock
call
xor
sub
loopne
les
inc
les
xor
fidivl
adc
mov
lds
daa
pop
ja
out
subb
cmp
pop
mov
pop
test
loop
xchg
cltd
es
dec
pop
mov
mov
inc
fs
inc
sbb
lods
outsb
mov
jge
mov
mov
mov
add
test
push
rolb
lcall
push
out
arpl
test
xor
or
aam
add
cmp
sbb
pusha
scas
sbb
cmpsl
scas
add
stc
jg
or
inc
cs
loop
mov
fldt
fcomp
push
add
mov
xchg
add
push
shrb
inc
mov
scas
sbb
daa
mov
inc
xchg
mov
cmp
sub
inc
fnstcw
les
add
jae
cmpsl
cmpsb
movsb
fiaddl
adc
inc
push
add
test
push
jnp
add
mov
test
sbb
fwait
and
in
aad
iret
add
cmp
add
dec
roll
and
adc
xchg
fwait
xorl
pop
les
jno
cmc
pop
enter
bound
mov
dec
or
xchg
jge
cli
mov
and
daa
out
jns
pushf
pusha
mov
outsb
inc
push
dec
push
mov
loop
ret
add
mov
mov
add
inc
jne
dec
add
push
outsl
pop
pop
sbb
cmc
mov
rorl
inc
lods
and
adc
dec
sub
dec
mov
inc
mov
push
xor
cmp
inc
nop
clc
jle
insb
imul
mov
sbb
cmp
sbb
jns
clc
pop
jge
add
inc
dec
add
outsl
arpl
sub
cmp
xor
rclb
sub
mov
and
cltd
dec
jne
adc
popa
ret
cmp
jecxz
xor
mov
mov
sbb
cld
push
or
or
push
stos
dec
xchg
mov
add
roll
repz
rolb
enter
jmp
popa
add
pop
fadds
scas
push
or
push
or
dec
jmp
ss
fwait
leave
sub
adc
lcall
das
adc
bound
pop
pop
mov
ret
repz
mov
add
or
outsb
loop
stc
add
rcll
sub
insb
fimull
xchg
adc
std
dec
xor
xchg
in
into
mov
jmp
pop
outsb
rolb
push
xchg
rcrl
popf
sub
pushl
and
psrld
scas
mov
into
dec
lahf
mov
adcb
sbb
mov
add
sub
das
dec
push
dec
dec
insl
and
insl
sbb
or
test
add
mov
rclb
fisubs
push
inc
inc
dec
and
shlb
sub
sahf
jo
bound
or
adc
jg
cmp
add
or
out
pop
cmp
cmp
and
sahf
mov
mov
or
adc
enter
shll
fidivrl
pusha
scas
shlb
mov
jb
mov
sarb
inc
fisubrs
lahf
orb
lret
outsb
shll
xchg
cmp
dec
ljmp
mov
lret
addr16
cmp
jecxz
jmp
xor
mov
shlb
cmp
mov
inc
mov
mov
jle
decl
and
and
xor
add
popf
sarb
popa
cmp
xchg
js
loop
mov
inc
add
sarb
mov
cli
sbb
enter
lahf
leave
inc
dec
mov
mov
lcall
sar
dec
dec
cmp
jl
les
test
mov
pusha
addr16
fisttpll
ja
dec
and
mov
addr16
nop
jle
or
jne
dec
and
push
inc
inc
idiv
xor
cmp
mov
inc
int
hlt
jl
sbb
ret
aam
int3
pop
dec
xor
fdivs
xchg
xor
test
push
cmp
bound
mov
loop
int3
mov
dec
dec
lcall
mov
push
jne
nop
int
ljmp
pushf
cmpsb
sub
jmp
vpsadbw
adc
jge
andl
jns
xor
mov
dec
push
and
test
fistl
xlat
xor
outsl
gs
lcall
add
inc
scas
and
stc
sti
xlat
in
and
ss
loop
xchg
cwtl
je
dec
aas
aad
sub
push
lods
pop
sub
xor
inc
push
and
and
xchg
push
or
mov
jb
xor
lock
jnp
lods
inc
dec
mov
mov
jno
outsl
inc
inc
mov
imul
pop
movsb
sub
adc
adc
mov
sub
cmp
mov
add
lcall
xchg
pop
cmp
pop
aaa
inc
lcall
mov
adc
and
cmpb
jmp
sub
movsb
decl
sub
test
sub
test
jnp
dec
dec
push
cli
inc
outsl
cld
cmp
push
and
sbb
xor
dec
popa
imul
or
sub
and
pop
add
movsb
fisubrs
test
outsl
xchg
cmp
pop
push
rorb
addb
adc
push
and
jbe
call
and
add
and
sbb
test
push
sti
rcll
lcall
test
cmp
sbb
xchg
sbb
aas
and
sub
aam
ja
lock
cmp
insb
dec
mov
dec
push
jnp
movb
je
inc
inc
lods
sbb
stos
push
ficoml
add
sbb
out
stos
fabs
sub
and
js
mov
aaa
sub
aas
sbb
mov
cwtl
lret
repnz
xor
stos
push
enter
dec
jo
imul
inc
out
push
and
and
insb
push
or
cld
cmp
jno
test
imul
mov
test
push
lock
pop
bswap
mov
or
sub
je
xchg
sbb
xchg
shr
cli
ret
and
aam
add
inc
shlb
fcomip
mov
into
movsl
mov
and
adc
and
or
roll
lods
inc
push
add
inc
loop
add
sbb
push
dec
add
xchg
xchg
mov
add
mov
insl
mov
lret
dec
pushl
std
faddp
out
test
rclb
mov
mov
or
outsl
lods
loope
and
lods
loope
push
push
imul
cmp
outsb
jne
pop
dec
sub
jle
dec
inc
jb
and
mov
xchg
dec
mov
or
mov
popa
lcall
pop
dec
loop
cli
push
mov
notl
dec
jns
push
mov
and
dec
rolb
gs
inc
sbb
inc
pop
xor
xchg
div
xchg
aas
clc
ds
dec
inc
loope
or
div
mov
ret
pusha
xor
jns
jb
xchg
adc
pop
adc
fists
pop
xchg
jl
dec
call
lret
sbb
outsb
push
clc
rorb
ret
ljmp
pop
add
ret
repz
imul
push
pushf
adc
pop
pop
stos
mov
push
pop
insb
push
fdivrs
sarb
ret
mov
loopne
pusha
add
orb
inc
pop
jecxz
jmp
rcr
push
mov
in
adc
in
sti
pop
cmp
push
popf
and
addl
push
jbe
mov
jle
cmp
push
cmpsb
cld
fisttps
add
sahf
adc
sbb
jmp
push
push
test
bound
jmp
pop
je
rcl
sahf
in
int
mov
push
xlat
inc
daa
mov
mov
bound
fadds
push
xchg
fdivs
mov
cmp
sub
pop
imul
and
decl
dec
pop
cmp
mov
push
ret
into
daa
jg
dec
icebp
add
inc
loop
adc
xor
inc
xor
cld
or
cmp
ds
or
mov
push
call
sub
add
inc
aam
arpl
push
stc
icebp
repnz
insb
add
fsubrs
sbb
and
lcall
pop
xor
sub
notw
outsl
xchg
aad
inc
adc
insb
add
pop
outsb
mov
inc
shlb
xor
sbb
jae
subb
jg
jb
bound
shl
test
je
adc
adc
imul
sub
loopne
inc
repz
adc
cmpsb
mov
sbb
inc
faddl
push
test
cmp
push
dec
jg
stos
std
inc
xor
test
mov
xchg
aam
pop
mov
fisubrs
mov
pusha
push
rcr
cmp
rep
inc
mov
testb
rorb
push
mov
enter
ficoms
mov
lock
pop
cmp
enter
pop
jbe
dec
add
cwtl
jns
fisubrs
pop
fiaddl
xlat
out
mov
cmpsb
repnz
int
sti
lret
sbb
je
xor
and
or
inc
push
xor
adc
dec
fs
jge
adc
in
push
movsb
insb
or
jg
sbb
pop
scas
xor
xchg
jno
lret
mov
mov
int
rep
xor
lock
sbb
cld
dec
int3
dec
fsubs
out
jo
xchg
out
pop
imul
inc
xor
dec
push
jb
nop
mov
inc
xor
scas
call
inc
jne
lret
jns
fidivs
mov
in
fsubr
push
push
movw
inc
mov
sub
push
fmulp
add
inc
or
push
sub
inc
push
fcomps
bound
adc
xor
push
ds
add
data16
outsl
out
jmp
js
imul
sarb
ret
xor
pushl
inc
inc
repnz
lahf
and
jle
je
or
fst
sub
pop
lods
push
movsl
sub
sub
adcl
les
pop
or
test
sub
lods
or
cmp
dec
inc
push
mov
lcall
mov
call
and
adc
sbb
icebp
xor
xchg
dec
dec
push
shr
mov
cmpsl
inc
or
dec
and
xor
push
xor
mov
mov
nop
xchg
push
mov
fistl
mov
mov
mov
shrl
xchg
addb
and
loopne
stc
xchg
lea
cwtl
jl
inc
rol
cmpsb
data16
aaa
jmp
add
incl
sbb
call
push
sbb
inc
enter
jo
sbb
mov
addb
push
adc
pop
leave
adc
pop
pushf
rcll
push
test
std
lret
or
nop
lret
rol
dec
arpl
push
add
shlb
add
inc
dec
xor
adc
xor
xchg
adc
imul
dec
adc
sub
lahf
fwait
inc
inc
fists
ss
roll
ds
jp
or
sub
lsl
pop
ret
sbb
and
pop
popa
add
stos
pop
jns
sub
add
ljmp
or
outsl
lds
dec
les
xchg
addl
inc
xchg
int
into
loope
push
push
test
enter
adc
dec
sub
and
inc
and
push
jae
sub
sub
aam
movsb
sbb
mulb
adc
pop
xor
rcr
imul
sbb
add
cmp
fidivrl
test
fdivrs
xchg
icebp
adc
mov
imul
inc
inc
mov
sbb
test
fisubl
adc
or
fidivl
scas
out
stos
test
cmp
jecxz
hlt
mov
aas
lods
mov
cmpl
pop
mov
aam
fsubrs
outsb
push
jmp
push
cmpsb
sub
jo
xor
xchg
fucomi
fldt
or
cmp
xor
push
inc
call
jbe
pushf
or
dec
and
push
adcb
jb
je,pt
imul
inc
ret
and
and
pop
fcmovb
inc
scas
aam
jne
inc
les
dec
lods
and
ret
ljmp
inc
or
mov
shl
mov
sub
ficoms
jl
push
dec
mov
cmp
push
dec
lret
add
inc
pop
or
cli
sbb
xor
aas
mov
lock
adc
and
xchg
jns
leave
cmp
decl
inc
cwtl
push
push
insl
mov
ficomps
into
sahf
xorb
jne
andl
pop
push
inc
lods
xor
push
add
mov
call
mulb
inc
push
cmpsb
shrd
pop
and
dec
repz
sti
fucomip
pushf
inc
sbb
out
and
sbb
xchg
leave
repnz
pop
adc
push
dec
jnp
pop
or
jne
fs
es
dec
add
mov
inc
mov
pushf
dec
es
pusha
pop
mov
sbb
insb
outsl
mov
pop
int3
popa
push
std
outsb
ret
arpl
aam
cmc
movb
inc
push
pop
push
repz
mov
mov
insb
aaa
dec
aaa
pop
cli
aas
test
incl
lock
jne
inc
leave
push
ret
loope
dec
xor
push
mov
xchg
xor
sub
insl
jnp
xor
cld
push
test
mov
scas
inc
movl
pusha
dec
jo
or
dec
sub
aaa
xor
or
andb
xor
adcl
mov
jbe
push
enter
adc
icebp
popf
cli
pushf
arpl
and
popa
add
into
xchg
add
call
lock
push
data16
xchg
mov
shrl
call
push
inc
lods
aaa
and
outsl
mov
mov
aam
pusha
sub
sub
jae
push
popa
insl
loope
das
xor
dec
jno
inc
ret
ja
xor
jle
push
mov
sub
in
jp
fsubl
jns
adc
gs
mov
pop
xor
jb
arpl
and
js
inc
popa
push
lcall
and
int
push
push
and
xor
mov
xchg
jns
inc
xor
adc
cwtl
aas
xchg
xchg
scas
mov
cmp
mov
jmp
mov
pop
in
prefetchnta
fimuls
pop
xchg
aaa
cmp
jp
or
je
sbb
inc
jno
adc
jb
push
xor
lods
inc
and
lahf
or
jne
mov
rcll
mov
cmpsb
nop
out
xchg
inc
mov
and
cmp
cmp
mov
xchg
mov
sub
mov
sbb
aaa
jo
and
subl
mov
pop
push
je
inc
mov
mov
dec
lock
jecxz
add
ja
stc
and
pop
mov
or
hlt
clc
cwtl
insb
add
adc
xor
adc
dec
pop
add
imul
rclb
mov
mov
rcll
les
outsb
aad
test
movsb
out
inc
or
pop
in
add
int
xchg
ret
dec
movsl
jb
mov
fldenv
sbb
jb
mov
or
fistps
xlat
daa
mov
or
dec
in
adc
hlt
xchg
mov
adc
enter
fistpll
dec
or
rol
adc
dec
inc
push
adc
push
icebp
and
js
dec
shrl
add
push
push
and
mov
mov
cmp
fwait
daa
inc
xor
dec
sbb
push
xor
and
mov
lods
icebp
push
sbb
gs
mov
jnp
push
lock
stos
mov
pop
jg
dec
push
mov
adc
push
xor
add
rolb
push
jge
add
ss
inc
or
xor
mov
jmp
xchg
dec
inc
les
adc
add
in
xchg
insb
mov
lods
inc
repnz
test
push
test
cmpsb
fwait
rorb
jne
and
mov
les
sbb
leave
pop
jo
push
add
mov
in
pop
dec
inc
add
push
push
fcoms
add
cmc
push
stos
call
fldl
les
enter
shl
xchg
pusha
mov
lea
mov
cmp
test
scas
insl
xor
push
fisttps
cmp
push
shrl
mov
loopne
mov
es
mov
fidivs
adc
or
mov
mov
cmp
popa
and
sub
or
push
lahf
negb
sbb
shl
add
sub
mov
or
mov
test
sbb
pop
mov
sub
shlb
adc
push
and
arpl
mov
jns
inc
adc
stos
test
leave
jae
pushf
push
and
adc
adc
dec
flds
inc
cmpsl
xor
sbb
rolb
inc
push
sub
adc
insl
or
call
js
xchg
std
mov
mov
pop
dec
icebp
iret
loope
call
add
sub
push
pushl
cli
lcall
in
testl
and
push
repnz
jg
cmc
xor
shrb
inc
dec
dec
or
mov
fsubrl
inc
mov
inc
push
clc
or
push
ds
bound
push
mov
lahf
aad
sub
mov
data16
push
xchg
push
adc
or
decl
fsubrs
hlt
mov
ret
or
lea
movb
push
aam
inc
adcb
dec
daa
mov
xor
jmp
jg
dec
rdmsr
mov
scas
cmp
lcall
push
xchg
jg
dec
inc
push
int3
lret
and
pop
cmpsb
mov
je
enter
loope
adc
push
dec
add
or
fimull
dec
cmp
push
arpl
xchg
and
dec
lcall
jp
inc
jno
or
add
and
jmp
loop
ret
in
and
sahf
jge
sar
iret
inc
dec
scas
fisubrs
mov
imul
xchg
je,pt
in
or
push
ss
insw
movsb
jmp
adc
subb
mov
orl
imul
adc
fistpl
test
ret
arpl
rcl
aas
mov
inc
push
add
add
mov
jns
or
jg
popf
mov
dec
int
aam
jg
sahf
jb
mov
push
push
orl
insb
push
daa
sbb
ret
mov
inc
je
add
bound
xchg
pop
pushf
pop
bound
xchg
adcb
lds
shll
jmp
ret
testb
adc
lcall
push
lahf
mov
iret
insb
or
sub
add
insb
add
enter
fadd
dec
testb
mov
sbb
inc
push
push
test
call
and
cli
mov
jbe
mov
and
adc
sbb
mov
push
pop
imul
xchg
lret
and
mov
inc
inc
in
xor
enter
shr
jo
popa
adc
out
dec
or
dec
inc
mov
add
push
jne
outsb
push
js
jmp
mov
push
jle
sarl
movsl
lcall
mov
insl
jb
aad
orl
jbe
push
and
enter
or
dec
adc
push
jno
clc
cmpsb
push
sbb
pushf
adc
inc
jnp
jmp
insb
in
push
sbb
sub
sbb
lret
rol
hlt
inc
loope
xchg
sbb
jns
sub
mov
pop
inc
movsl
mov
repnz
push
xchg
fs
scas
and
addl
inc
inc
xor
push
dec
bound
jg
mov
fs
xlat
sbb
cs
mov
outsb
mov
xchg
jg
orb
or
and
and
xchg
out
insl
push
or
ret
push
addr16
clc
dec
test
repz
mov
pushf
push
fdivrp
ficoml
rcrl
insb
mov
lret
jne
jae
fimull
push
data16
or
cmp
outsb
addr16
sub
or
call
loop
and
dec
mov
or
jl
inc
ret
jne
hlt
inc
ljmp
insb
jb
popa
inc
dec
inc
jg
mov
adc
xor
sbb
mov
test
and
push
fimuls
xor
mov
in
push
mov
lret
xchg
inc
mov
jbe
adc
test
cli
mov
push
and
jae
les
pusha
inc
movsl
idiv
pusha
add
push
pop
push
xor
loop
jmp
repnz
bound
and
dec
push
loop
sbb
mov
pop
mov
inc
das
shrb
fmul
repnz
sarb
aaa
cld
ljmp
mov
out
cmp
and
cmp
mov
into
xor
dec
out
xchg
lret
cmp
or
je
push
mov
insb
xor
and
into
mov
and
push
and
adc
add
jo
jnp
out
mov
popf
jmp
and
outsl
mov
xchg
js
mov
mov
inc
pop
fldcw
jg
mov
push
mov
inc
sahf
mov
mov
inc
xlat
or
fs
es
iret
push
cld
ljmp
sub
ljmp
mov
mov
jecxz
xor
out
add
and
subb
or
dec
xor
pop
jmp
addb
enter
ljmp
push
int3
cld
push
out
arpl
lods
rcll
push
inc
repnz
incl
add
incl
ret
pop
or
xor
jne
push
mov
mov
inc
cmp
stos
and
xor
dec
jo
das
ficoms
bound
inc
jo
xor
push
dec
dec
jg
adc
adc
xlat
fnstsw
pop
cli
jp
xchg
ss
clc
pop
jle
paddsw
xor
addr16
jp
jp
outsl
shll
insb
push
mov
dec
ss
lock
data16
dec
cwtl
add
and
mov
call
cwtl
pop
mov
sbb
mov
enterw
cmp
cmc
inc
push
out
dec
dec
insl
dec
jo
adc
or
cmp
jecxz
xor
call
mov
sbb
out
add
das
psubsw
push
adc
sarb
scas
clc
out
xchg
nop
incb
pushf
push
loop
mov
jo
xor
jno
loop
xor
mov
xor
dec
fs
mov
jg
pop
cmp
inc
aaa
push
sbb
repnz
sbb
jnp
sahf
pop
mov
and
or
lcall
js
xor
in
sbb
ret
addb
push
fdivl
lods
push
sub
dec
adc
std
pop
bound
je
sar
jg
rolb
dec
dec
push
daa
or
xchg
iret
inc
push
test
shrl
lock
hlt
test
add
bound
xlat
cli
ror
je
rcrb
mov
cmp
mov
movsb
sbb
push
add
inc
je
and
fisubrl
inc
leave
or
inc
push
cmpsl
shlb
dec
cmp
lcall
gs
call
ret
lret
popa
push
mov
jns
adc
dec
or
xlat
cmc
pop
mov
and
cmpsl
mov
jle
ss
cs
adc
loop
pop
sbb
xor
loop
push
xor
lods
iret
xor
jae
data16
shrb
aaa
int
jae
out
mov
aad
push
les
jg
fwait
pushf
pop
jnp
sarl
cld
ljmp
pop
lds
cld
loopne
test
push
push
push
inc
pop
cmp
aaa
inc
push
push
push
rclb
ret
outsl
das
push
lods
ret
push
pop
inc
pop
push
mov
lcall
imul
jae
and
sahf
push
test
cwtl
sbb
lret
notl
adcb
jne
inc
add
dec
pop
fidivl
pop
into
xchg
pop
or
out
je
push
arpl
sti
mov
sbb
mov
cwtl
call
cld
popa
lret
aad
int
rclb
cli
lcall
loop
addr16
add
lods
stc
ficoms
dec
es
mov
dec
out
outsl
lods
xor
xor
pop
mov
adc
lcall
xor
xchg
fwait
inc
aad
mov
jmp
push
ja
gs
icebp
push
arpl
sub
sbb
shl
loopne
cwtl
rolb
adc
or
and
arpl
cli
dec
xchg
scas
or
in
mov
and
push
and
insl
incl
jmp
pop
popa
add
mov
sbb
mov
scas
call
inc
stos
loopne
jb
mov
mov
popa
push
inc
jecxz
test
cwtl
mov
filds
loope
daa
dec
dec
bound
push
loope
cmp
sti
xchg
in
movsl
in
xchg
or
cmp
mov
inc
mov
inc
inc
jmp
insl
dec
js
sbb
jo
adc
pop
push
out
dec
ss
add
icebp
and
js
add
xor
decl
xchg
jge,pt
push
inc
das
es
or
jle
adc
mov
notl
mov
add
add
or
push
push
cmpsb
mov
out
icebp
pop
jo,pn
jmp
orb
push
and
xchg
aas
pushf
sbb
enter
xchg
cmp
sub
movsl
mov
arpl
enter
pop
movsl
cli
xor
testb
lret
mov
adc
dec
inc
or
mov
scas
cs
clc
xor
dec
shl
or
add
and
mov
out
jg
and
ja
mov
jmp
mov
ja
mov
dec
inc
sub
sarb
das
es
or
sbb
xchg
or
filds
push
faddl
int
xchg
xchg
push
fcmove
xchg
test
cmp
cwtl
mov
jns
and
or
xchg
insb
mov
aas
insb
loop
out
loopne
icebp
mov
push
repnz
filds
dec
fwait
push
xchg
outsb
push
xchg
sub
adc
cli
test
mov
inc
sbb
inc
sub
xor
xlat
sar
adc
inc
in
gs
mov
mov
repnz
loope
push
push
adc
stc
mov
in
mov
sbbb
and
cmp
popa
mov
or
pop
mov
scas
aad
pusha
jns
cwtl
lcall
mov
xlat
stos
jl
dec
shrl
xor
scas
movsb
nop
movsb
shl
adc
push
aas
pop
lret
xchg
add
or
ret
mov
push
push
dec
pop
fidivl
jnp
decb
xchg
out
sbb
or
sahf
mov
inc
or
inc
loop
cld
js
add
jecxz
out
cmp
hlt
stos
ds
shr
sbb
dec
mov
push
loope
movsl
das
sub
fwait
pop
mov
push
lods
in
lret
inc
into
xorl
je
mov
sub
and
pop
pop
mov
adcb
xchg
arpl
xchg
inc
pop
ret
jne
pop
hlt
mov
stos
rorb
orb
xorl
add
add
lods
cmc
gs
mov
loope
dec
popa
loope
mov
xchg
lcall
or
inc
cmpsl
mov
inc
insb
xchg
inc
rcl
jmp
xchg
add
inc
mov
or
daa
cmp
sbb
std
popa
adc
jne
or
push
test
fs
sbb
fldcw
inc
loop
jl
jp
imul
loop
shrb
jecxz
xchg
push
sbb
fldt
dec
xor
push
icebp
mov
in
sbb
inc
das
jo
repz
ret
lods
or
and
cwtl
test
test
pop
xor
xor
xor
add
enter
rclb
dec
adc
push
inc
xor
xor
out
dec
loope
add
int3
les
and
or
sub
sbb
push
addl
inc
xchg
mov
push
nop
mov
mov
adc
pop
adc
icebp
lcall
adc
mov
popf
mov
sahf
pop
rcl
lock
nop
pop
pop
cltd
or
sub
and
push
inc
mov
fcos
jmp
mov
out
imul
xor
call
jae
xor
and
cld
out
adc
ljmp
movsb
jne
jbe
shll
add
cld
jp
ss
outsb
ljmp
dec
inc
arpl
ss
push
adc
jne
ret
push
push
fs
xchg
or
inc
scas
xchg
sbb
and
jmp
and
cmp
call
push
pop
push
cmpsb
jle
pop
add
and
sub
cmp
cs
inc
fimuls
loopne
in
ss
xlat
sbb
sub
fs
fprem1
fwait
adc
jno
jb
mov
pop
jg
pop
add
cmpsl
lahf
insb
and
pop
jnp
cld
sahf
or
or
out
cmc
shrl
sahf
in
add
jecxz
int
push
lods
lahf
sbb
test
dec
popf
dec
mov
mov
ret
subb
sub
mov
fstpl
add
popf
js
loope
mov
dec
js
mov
inc
icebp
jo
push
or
push
jb
shlb
stos
push
outsb
arpl
inc
mov
shlb
dec
dec
cli
iret
and
sub
inc
jge
inc
xor
inc
outsl
pop
dec
dec
incl
lret
jb
sbb
lret
cltd
daa
icebp
pop
clc
inc
loope
clc
lock
push
xchg
fwait
xor
push
imull
subl
mov
arpl
add
add
mov
fists
mov
push
jo
sub
popa
mov
push
jmp
inc
fimuls
xor
jg
push
or
aaa
dec
adc
push
clc
push
repz
hlt
rclb
dec
std
pushl
das
xchg
pusha
out
adc
jns
aam
mov
cmp
or
jl
js
inc
aam
dec
inc
pop
adc
mov
inc
dec
jno
cld
jo
lock
out
outsw
fsubr
dec
ja
pop
inc
pop
pushf
fldenv
aam
or
push
pushl
dec
inc
fisubrl
les
mov
shl
ss
fsubrs
pop
outsb
loopne
adc
pop
xchg
adc
sub
jo
sub
mov
or
out
inc
add
popa
gs
push
or
inc
push
adc
sbb
jns
mov
lods
cmp
jbe
add
push
or
mov
pop
inc
repz
push
scas
out
mov
ret
dec
fnsave
call
push
cmpsl
dec
imul
call
cmc
inc
xchg
and
dec
add
inc
inc
rol
sub
inc
popa
int3
jmp
aaa
mov
lcall
xchg
push
cld
loopne,pt
and
mov
xchg
cmp
cmp
bound
push
sub
jns
or
add
outsb
inc
dec
incl
rcll
cwtl
sarl
dec
pop
push
adc
jecxz
sub
cld
add
call
ficoml
xchg
adc
xor
pushf
inc
dec
inc
pop
pop
cli
sbb
imul
aaa
inc
jp
jmp
push
push
lock
push
cmp
xor
inc
xor
cmpsl
fs
xor
gs
pusha
sbb
and
sub
fs
rclb
loope
add
iret
and
rolb
cmpsb
stc
leave
inc
push
push
add
xchg
fildll
mov
and
push
fidivrl
je
mov
iret
adc
imul
jp
dec
and
gs
pop
hlt
mov
sub
mov
lods
rol
test
pop
movsb
and
xor
push
call
push
mov
push
clc
test
bound
xlat
add
dec
sub
jmp
adc
bound
pushf
in
fs
jp
fistpl
xor
cmpsb
rcr
mov
add
xchg
faddl
jno
loope
xchg
xchg
pop
mov
inc
loop
ret
fisttpll
xor
push
call
fbstp
in
xchg
sbb
xchg
insb
sub
push
bound
loopne
push
mov
mov
push
je
and
insl
outsl
cli
ljmp
outsb
inc
lods
insl
jge
adc
cmpl
xchg
lock
mov
pushw
xchg
pop
pop
mov
or
aad
out
jbe
cmc
aaa
cmp
push
dec
aaa
fsubs
lcall
out
push
subl
sub
cmpsb
insb
dec
jbe
jae
test
icebp
imul
lods
jmp
add
dec
dec
push
movsl
mov
jbe
loope
adc
mov
sarl
ficomps
jb
orl
xchg
add
push
clc
xchg
es
nop
push
mov
xchg
jmp
jnp
mov
je
fs
scas
pop
stos
cmp
js
push
icebp
jo
adc
sub
push
fimull
popa
jae
js
sub
mov
jp
lcall
enter
loope
jl
leave
call
subl
rcll
fcomps
sub
push
inc
add
push
call
dec
pop
or
push
mov
mov
mov
aam
decl
incb
pusha
in
jge
xchg
ret
sbb
es
lcall
jbe
nop
ret
adc
cmpsb
fisubrl
arpl
push
data16
add
add
xor
or
push
decw
ja
push
insb
inc
js
jl
dec
adc
incl
jb
mov
out
stos
xlat
pop
scas
add
jb
daa
lcall
loope
lods
push
gs
or
mov
or
dec
pop
pop
adc
or
push
jno
mov
mov
loop
pop
dec
push
add
iret
test
xchg
pop
sub
or
pop
and
cmp
push
int
mov
test
dec
push
jle
gs
lds
xor
sbb
and
sub
mov
insb
jns
jecxz
js
loopew
xor
jns
dec
cmpb
pavgb
scas
sarb
add
in
jmp
aaa
test
orl
xor
mov
push
cmpl
test
sub
jno
xor
movl
test
pop
inc
add
test
push
lods
cwtl
xor
gs
xor
inc
orb
ret
cmpsb
fisubrs
inc
pop
dec
mov
andb
aad
lods
repnz
adc
jg
adc
scas
fsubr
push
add
daa
aad
dec
fnstsw
in
imul
fst
lret
outsl
arpl
xor
add
jo
push
sar
cmp
mov
xor
cs
jecxz
arpl
jno
xchg
or
rol
jmp
sub
loop
jmp
test
cwtl
jg
ja
popa
or
inc
mov
fnsave
rclb
mov
int
nop
ffreep
inc
xchg
add
dec
test
sbb
or
insb
int
xor
jl
jne
sbb
jnp
jge
inc
jl
sbb
gs
add
xchg
movsl
out
popf
inc
test
es
int
add
imul
xchg
shlb
or
pop
bnd
xchg
mov
rol
or
add
int
jno
push
int3
movb
and
push
adc
push
sbb
cmpsb
nop
bound
shl
lods
sub
mov
fstl
push
pop
inc
adc
daa
cmp
lods
pop
pop
and
sbb
imul
test
sbb
sbb
aaa
jle
push
enter
repz
cmp
pop
aad
sbb
mov
xchg
lock
xchg
test
mov
or
scas
loop
push
pusha
adc
rorb
sbb
inc
xor
roll
inc
pop
bound
sbb
inc
out
lret
mov
jo
insl
sbb
push
pop
lds
pop
mov
mov
fwait
jo
int
icebp
inc
jo
mov
dec
loop
mov
jecxz
arpl
sub
and
les
add
cmp
inc
dec
sbb
adc
outsl
add
cmp
xor
inc
push
or
add
or
add
pusha
test
ljmp
inc
xor
ljmp
pop
adc
xchg
mov
jo
adc
xchg
xchg
shrb
testb
dec
cmp
outsb
xor
mov
inc
push
les
mov
adc
push
xor
test
xchg
pop
orb
xor
inc
jno
sub
js
ficompl
xor
subl
add
push
and
mov
add
xor
push
jae
icebp
hlt
push
dec
lods
or
push
or
test
jno
push
adc
push
jmp
jno
jo
sahf
test
popa
movsb
rorb
out
mov
fimull
mov
fimuls
inc
inc
mov
pop
adc
jmp
loop
pop
sbb
push
inc
into
and
mov
mov
inc
sbb
or
shlb
test
mov
test
imul
jg
or
andb
aad
mov
imul
jne
test
movsb
jno
adc
push
into
adc
test
dec
jb
add
ja
add
dec
mov
jle
les
pop
loop
test
andb
rcll
call
das
jnp
xchg
enter
shlb
cli
pop
cmp
adc
or
push
push
es
cmp
imul
mov
pop
dec
xor
add
and
and
aam
lahf
add
or
or
jmp
xor
hlt
inc
mov
cmc
repz
out
mov
dec
mov
inc
lret
fwait
mov
inc
and
jo
push
shrb
enter
xchg
push
xor
or
dec
xchg
jge
pushf
dec
jae
les
mov
pushl
or
pop
mov
dec
mov
insl
cmpl
insb
movsb
inc
repz
mov
jbe
out
dec
adc
mov
pusha
mov
rcll
adc
pop
out
dec
mov
mov
pop
inc
cltd
or
loop
and
mov
pop
add
loope
out
inc
sbb
dec
inc
stc
mov
inc
pop
push
mov
js
fwait
dec
add
dec
push
insl
or
lock
ljmp
in
ss
shll
mov
test
movsl
ss
mov
dec
xor
inc
xchg
adc
fmull
popa
test
js
int3
jae
push
bound
xor
add
outsb
jns
dec
pop
xor
sbb
dec
adc
ljmp
int3
jg
incl
jg
cmpl
sbb
pop
xor
inc
jle
mov
mov
and
xlat
push
push
mov
dec
mov
mov
inc
mov
cmp
mov
mov
mov
cld
pushl
xor
in
push
and
lret
aaa
dec
cltd
sub
pop
push
inc
mov
and
dec
jno
push
mov
out
sti
xchg
dec
cmp
adc
push
imul
rorl
push
test
bound
jnp
sbb
adc
dec
sarb
jle
inc
mov
mov
popa
pop
jns
push
dec
imul
xor
fcompl
rcr
inc
ljmp
roll
sub
test
jmp
add
jne
in
arpl
cld
mov
imul
mov
push
push
test
inc
outsb
in
add
sbb
pop
ljmp
lcall
push
repnz
mov
lock
pop
ret
adc
pop
orw
adc
jo
in
mov
push
sbb
mov
dec
pop
mov
or
lcall
push
rcr
push
stc
cli
imul
cmpsb
push
mov
mov
mov
dec
fisubs
rolb
fsubs
pop
hlt
into
int
dec
ror
fistps
icebp
lods
fadds
dec
push
insl
movsb
or
jle
push
xchg
add
sub
add
pop
test
adc
adc
push
jne
lcall
jo
loopne
sbb
inc
adc
sbb
cmp
xlat
repnz
call
jl
xor
lret
cmpsb
in
xor
mov
pop
push
icebp
adc
mov
enter
dec
jecxz
or
pushf
add
jbe
inc
pushw
clc
fsubrl
call
inc
scas
xchg
pushl
jbe
cmp
mov
cmp
loope
push
call
lret
push
push
push
xchg
sbb
xchg
add
imul
and
push
push
cld
insl
pop
jno
adc
out
out
bound
nop
add
inc
jns
lcall
push
bound
inc
push
sbb
sahf
xor
fisubrl
cmc
mov
int
xchg
and
ljmp
js
and
push
mov
aas
sub
add
dec
lods
test
adc
mov
xchg
repz
dec
mov
call
push
loopne
and
pop
xchg
fldt
jmp
jg
jge
imul
jge
inc
lret
inc
into
out
addr16
dec
cwtl
movsb
add
imul
xchg
les
nop
xor
add
pop
dec
cmp
clc
xor
movb
sub
or
jmp
or
cmpsb
sbb
pop
cmp
mov
xlat
scas
and
sbb
loope
push
shl
ret
scas
test
ret
push
test
data16
fidivl
jne
mov
dec
push
pop
add
data16
repnz
push
aas
stos
mov
jb
data16
push
lcall
jmp
jne
push
xor
ds
std
jmp
jmp
pop
fnsave
repz
enter
push
loope
and
sarb
pop
aas
pop
and
call
outsl
decl
jne
xchg
aas
inc
je
and
cmp
fwait
adc
inc
add
fistps
ljmp
ds
movl
xor
push
jl
fsubrs
xor
and
add
lcall
je
or
cmp
mov
loopne
mov
call
int3
adc
aas
ja
sub
dec
cmp
sub
call
mov
dec
push
incl
adc
in
insb
outsb
sub
xlat
ljmp
push
or
inc
inc
pop
fists
movsb
fs
rolb
out
sub
lahf
and
ss
dec
out
arpl
sbb
inc
xchg
or
dec
js
xor
and
jne
lcall
imul
ss
aad
adc
and
filds
decl
mov
mov
xchg
shlb
cmp
scas
mov
jle
push
rolb
rcrl
decl
repz
jmp
jge
xchg
pop
test
push
pop
addr16
lds
pop
or
or
aaa
add
shr
js
dec
push
mov
push
fidivrs
cmp
jo
mov
mov
dec
loope
add
pop
lcall
or
in
mov
add
mov
sub
and
push
addr16
xor
or
js
pushf
mov
lock
ficompl
into
push
sti
add
mov
jg
mov
push
push
cltd
add
cmp
es
sub
mov
in
clc
call
pop
cmp
or
fdivrs
cmp
dec
push
dec
imul
xlat
in
scas
adc
stos
enter
jb
scas
add
jmp
mov
rcl
pop
cmp
xor
in
mov
mov
jno
clts
dec
dec
fs
pop
sbb
xor
or
jle
inc
js
sarb
dec
cwtl
adc
testb
pop
lods
pushl
scas
xchg
not
mov
scas
push
arpl
addr16
inc
insb
dec
push
insb
ret
add
cmp
inc
push
inc
push
repnz
inc
push
pop
popf
fnstenv
cs
push
pop
inc
not
fcomip
incl
fsubrl
adc
sbb
lret
adc
xlat
in
out
push
mov
xchg
mov
or
dec
or
sub
stc
nop
mov
test
loope
hlt
enter
push
popa
outsb
popa
mov
sbb
xchg
mov
and
mov
jg
pushl
push
movsl
push
js
cmpsl
sbb
loop
rorb
negb
mov
sbb
jecxz
sbb
cli
sub
call
jne
lock
ljmp
into
dec
push
adc
nop
mov
test
enter
push
bound
and
cmpsb
add
out
dec
adc
and
add
dec
fisttps
movsb
push
and
sbb
push
add
push
stos
push
add
loop
subb
add
icebp
movsl
cmpsb
add
repnz
shrb
jns
and
enter
std
add
rorl
and
in
pop
add
jno
sbb
adc
sarl
mov
jb
gs
xchg
jo
sbb
leave
lea
sahf
xchg
inc
cmp
rolb
lea
sbb
push
jno
pop
adc
mov
repnz
jae
xchg
jo
lods
unpckhps
push
mov
sub
jne
xchg
inc
lahf
out
dec
push
sub
dec
repnz
dec
lcall
push
leave
pop
fs
fsts
dec
inc
push
push
cmp
loope
jecxz
arpl
push
xor
or
pop
push
xchg
lcall
cmp
xor
subb
ret
test
add
inc
sbb
ja
add
sbb
inc
mov
or
inc
jo
gs
loop
pop
inc
and
mov
pop
fadds
loopne
mov
adc
inc
ja
or
mov
xor
inc
add
add
adc
mov
mov
lahf
and
stos
imul
fstps
and
pop
mov
pop
call
outsb
sbb
mov
and
shll
add
ds
sub
cmp
push
and
mov
scas
sbb
and
jo
outsb
roll
pop
pop
mov
filds
or
sub
inc
je
adc
sub
add
push
mov
push
jnp
movsl
mov
das
test
mov
and
loop
cwtl
cmp
insb
or
rolb
lds
push
inc
in
dec
test
add
aad
xchg
cwtl
inc
loop
lea
xchg
and
xchg
push
lods
jle
mov
xor
xor
add
outsl
and
jg
mov
mov
cld
in
icebp
pop
adc
sar
inc
cwtl
iret
mov
decl
mov
pop
push
sti
cli
xor
mov
out
mov
dec
and
cltd
dec
jecxz
push
inc
xchg
cld
ja
push
push
fistps
push
stos
mov
sub
cmp
lea
clc
out
jg
mov
sbb
ljmp
loope
mov
pop
ljmp
mov
out
mov
cwtl
imul
nop
or
add
cs
repnz
dec
cmpsb
push
xchg
jg
dec
mov
jmp
sbb
xchg
lahf
or
mov
mov
lahf
mov
imul
cs
and
and
xor
aaa
pop
xor
rolb
roll
dec
fistpl
fcomip
adc
mov
test
mov
jne
mov
pop
mov
mov
fildll
aaa
bound
inc
ja
fstpt
push
mov
ja
jbe
shlb
sar
jg
xor
aam
cmp
shl
sbb
lods
adc
xor
dec
mov
outsl
aaa
or
pop
cltd
test
imul
sbb
std
adc
sti
xor
into
push
inc
outsb
arpl
lods
mov
fs
dec
dec
imul
inc
mov
push
xchg
fiadds
jae
jo
orl
ret
jmp
outsb
mov
sbb
jecxz
ljmp
push
call
inc
shll
decl
loop
push
push
cmp
jnp
cmp
jno
adc
inc
push
sarb
popa
cmp
adc
dec
mov
cmp
mov
andb
mov
add
scas
jl
sar
rcl
sbb
in
mov
outsb
repnz
xorb
cmpl
add
or
dec
dec
sbb
jbe
int
insb
insl
arpl
xchg
inc
shrl
inc
pop
dec
lcall
push
mov
cli
lds
dec
jns
les
cmpsb
sbbl
jnp
pop
andl
hlt
std
dec
jmp
mov
or
cwtl
or
cli
mov
jne
movsb
lock
dec
inc
jg
xchg
cmp
sub
mov
sbb
ret
cmpxchg
cltd
inc
push
inc
cmp
cmc
ljmp
dec
dec
pop
xchg
sbb
loop
push
stos
sbb
pop
pop
or
xchg
inc
add
dec
ja
and
adc
pop
and
xorl
repz
jmp
jbe
dec
push
pop
sbb
mov
mov
scas
add
mov
aam
jo
add
pop
xchg
pop
orb
mov
movsl
push
xchg
add
cbtw
or
adc
fsubrp
out
cmp
adc
fldenv
stos
xchg
test
outsl
imul
add
in
rcll
jle
cmp
or
stos
sub
mov
cmpb
movl
mov
sbbl
add
lods
mov
xor
cmpsl
adc
dec
into
addr16
inc
ds
push
adc
xchg
mov
pusha
jg
rcrl
mov
incl
mov
stc
adc
mov
mov
inc
adc
movsl
cwtl
mov
xor
mov
mov
aam
loope
popf
xor
je
mov
pop
cmp
mov
or
add
cmc
mov
pop
jno
adc
xchg
stos
cmp
subb
pop
pushf
push
mov
mov
add
loopne
xor
psubw
jne
rclb
sarl
gs
xor
pop
aaa
mov
push
movsl
jne
mov
or
repz
push
movsl
addl
lods
lds
inc
cmpsl
loope
cmpsl
adc
push
pop
cltd
fwait
and
fldcw
push
pop
push
sbb
rorb
sbb
dec
das
push
icebp
ja
roll
mov
aad
rcrl
sbb
jecxz
subl
and
sti
mov
push
andl
cmp
push
pusha
sub
lds
adc
pop
stos
or
pop
je
or
inc
mov
inc
sbb
lret
inc
test
scas
leave
js
loop
lret
fs
test
pop
dec
pop
pop
or
pop
in
in
dec
push
or
scas
nop
cwtl
inc
movsb
jns
or
add
sbb
loope
or
cwtl
cwtl
or
js
jecxz
mov
nop
pop
movsl
and
stos
scas
push
push
or
das
into
mov
je
add
orb
jne
dec
add
mov
mov
icebp
push
adc
rcrl
fisubrs
or
add
add
stos
gs
mov
cmp
push
fnsave
dec
daa
and
pop
inc
bsf
lret
nop
adc
out
or
inc
mov
pusha
sbb
gs
mov
jb
gs
sbb
pop
lcall
and
mov
pop
xchg
dec
insl
shlb
add
dec
inc
out
xchg
sub
ljmp
ja
imul
je
out
repz
inc
push
out
mov
sbb
lcall
push
std
xchg
jno
mov
je
adc
pop
push
call
gs
jae
stos
or
loopne
mov
mov
jp
push
add
push
push
andl
iret
xlat
pop
int
xchg
adc
imul
nop
cmp
int
pop
aad
mov
pop
cmovge
push
stos
inc
inc
push
popa
or
inc
mov
push
push
jne
push
adc
dec
adc
mov
push
popa
add
ljmp
adc
into
shll
push
mov
mov
inc
push
adc
sub
pop
jb
inc
add
clc
inc
sarl
adc
xorl
ljmp
xlat
add
cmp
push
inc
push
mov
sarl
inc
aas
in
ljmp
testb
mov
and
roll
lds
add
adc
inc
sub
xchg
sti
xchg
mov
adc
or
scas
loopne
cmc
xor
adc
mov
loope
inc
mov
add
je
sub
add
mov
sub
push
inc
push
sub
scas
sbb
xor
jno
or
mov
cld
loop
daa
ret
in
push
jno
push
outsl
push
add
sbb
sbb
mov
mov
js
fs
mov
push
addb
imul
popf
xchg
and
xorps
dec
pop
push
dec
push
adc
push
xchg
or
jmp
in
lods
or
leave
repz
imul
add
pop
or
jb
push
mov
or
jbe
test
xor
cmp
push
sub
sbb
mov
pushf
push
fwait
cwtl
and
fadds
pop
cmpsb
repz
push
icebp
int
call
or
xchg
adc
add
fs
add
add
mov
test
dec
repz
mov
mov
mov
dec
jp
mov
incb
xor
ja
push
in
adc
add
mov
adcb
add
dec
lahf
mov
hlt
bound
mov
xor
arpl
xchg
jns
repnz
push
jecxz
nopl
jge
addb
in
sub
ljmp
test
pop
sub
pop
repnz
and
adc
cltd
jne
pop
lahf
dec
push
or
outsl
mov
mov
mov
arpl
orb
mov
jns
xchg
ret
mov
sbb
jge
jmp
pusha
mov
lea
cmp
in
pop
call
and
adc
cmpb
movsb
push
sbb
mov
shlb
mov
inc
nop
pop
cmovne
cli
stos
test
xchg
int
cmp
jno
sbb
jmp
cmp
add
bound
pop
jno
andl
hlt
pop
mov
sub
dec
push
xor
stos
mov
mov
pop
cmpsl
push
or
mov
or
or
popa
mov
loopne
call
and
xchg
mov
pop
scas
outsl
icebp
adc
push
inc
sahf
sbb
pop
lret
stos
lods
subl
out
inc
xor
cli
mov
push
mov
icebp
or
or
jmp
fs
dec
shll
sbb
jl
add
xchg
ss
xor
mov
ficompl
incl
dec
cmp
jnp
xchg
ror
mov
adc
push
repnz
call
push
adc
mov
arpl
std
int
std
clc
jl
dec
ljmp
xchg
cmp
loop
cwtl
cmp
mov
xchg
mov
in
cmp
aaa
iret
ss
ds
popa
arpl
xor
fs
pop
es
jl
jp
and
add
pop
jle
clc
dec
imul
rclb
adc
and
mov
sub
into
dec
cmp
js
and
scas
push
add
jbe
push
movsb
push
jmp
faddl
and
pop
pop
adc
test
mov
xchg
or
daa
adc
jbe
aas
pxor
addl
add
mov
movsb
andl
ret
int
addb
xor
rcll
sub
jbe
sub
mov
cmp
dec
loopne
popa
test
xchg
dec
enter
mov
sbbb
and
add
dec
adc
cmc
and
mov
sub
cmp
cmp
jno
dec
jo
or
subb
nop
sub
sub
movsb
loopne
rclb
add
xchg
push
mov
add
scas
pop
sbb
dec
loopne
jg
iret
unpcklps
cmp
div
xchg
shll
rclb
cmovbe
fisttps
mov
push
daa
xor
daa
lds
aas
jp
test
pop
sub
das
jns
and
imull
push
fsubr
mov
aas
icebp
clc
jo
bound
mov
imul
xchg
out
sub
add
gs
cltd
pop
out
add
mov
gs
adc
aad
in
push
shlb
add
dec
and
xchg
mov
pushf
gs
out
inc
pop
mov
loop
or
rclb
pop
popf
or
ss
arpl
adc
xor
cs
cmpsb
mov
or
orb
xchg
pop
and
int3
inc
mov
cmp
xchg
out
xchg
push
add
jb
cwtl
jne
ljmp
roll
adc
dec
les
outsb
or
test
jno
sbb
cmpb
adc
inc
sub
ret
clc
xchg
sub
dec
cmpl
jmp
lods
addr16
jbe
mov
les
adcb
inc
xchg
xchg
add
cltd
lods
in
dec
fsubrl
cmp
icebp
mov
add
pusha
pop
sahf
adc
xchg
loop
jmp
inc
out
and
icebp
movsb
jns
es
jnp
add
nop
and
add
mov
mov
mov
fcmovnbe
xor
or
push
sub
pop
cmc
and
push
imul
clc
pop
sbb
mov
jg
mov
ret
push
push
insb
popa
inc
mov
dec
mov
add
mov
cmc
stos
mov
dec
adc
inc
test
jmp
or
adc
inc
clc
aaa
xchg
rclb
add
or
jne
adcl
rorb
pop
decl
hlt
mul
repnz
pop
mov
js
jle
dec
scas
mov
xor
mov
mov
push
std
add
push
pop
enter
pop
adc
outsl
and
dec
inc
jae
gs
push
sbb
lcall
scas
aam
bound
fsubl
test
das
sti
ljmp
shl
mov
movsb
jmp
mov
stos
movsb
mov
es
insl
dec
mov
dec
jb
je
shl
and
adc
inc
adc
sub
cwtl
add
fidivrs
inc
dec
sbbb
jl
outsl
fsts
xlat
decl
and
mov
mov
das
ret
mov
jecxz
sbb
sub
sbb
lcall
push
dec
shrb
or
loopne
cmp
ja
mov
jp
and
sub
mov
lcall
insb
inc
dec
fists
add
ret
lahf
iret
mov
adc
loop
dec
mov
jmp
xlat
mov
sbb
loope
push
adc
and
arpl
pop
sub
pop
inc
loopne
mov
sub
xor
or
inc
dec
xchg
sti
adc
lock
mov
pushl
loope
mov
jl
jno
movsl
negb
pop
push
dec
mov
sub
cwtl
js
add
cltd
xchg
mov
dec
pop
adc
xlat
std
cmc
repnz
pushl
sbb
xor
ret
mov
sbb
sbb
loopne
ljmp
jmp
sahf
inc
add
aad
mov
xchg
in
sbbl
mov
clc
enter
or
xor
stc
add
add
sub
pop
push
enter
pop
xchg
imul
pop
das
test
stos
test
cmp
mov
adc
mov
mov
adc
mov
fnsave
gs
fcomip
mov
cvtps2pi
cld
jnp
mov
decl
mov
in
mov
jb
mov
add
adc
js
mov
xchg
mov
sahf
mov
mov
mov
sub
pusha
cmp
sub
stos
push
outsl
jge
sbb
mov
nop
push
xchg
adc
rorl
std
std
fistpl
cmp
add
push
scas
add
mov
leave
addb
popa
mov
push
jne
add
sub
jmp
aaa
or
fs
scas
fs
stc
jecxz
shll
sbb
pop
xor
adc
mov
xor
add
shlb
jns
mov
push
and
mov
adc
leave
cltd
mov
mov
or
add
xchg
into
adc
jns
pusha
add
and
cwtl
fsubl
pop
mov
xchg
stos
test
mov
shrl
icebp
movsl
mov
jge
mov
or
mov
fwait
cmp
aas
push
sbb
or
pop
loopne
xor
or
push
jnp
xchg
and
jns
fstps
cs
and
lret
orl
scas
adc
push
lcall
jbe
daa
pop
add
jmp
add
mov
in
test
repz
xor
dec
enter
jge
lods
pusha
shrb
sub
jne
enter
lcall
push
test
add
popa
mov
je
dec
sbb
jge
and
xor
xor
xor
scas
in
test
xrstor
add
into
movsl
lret
jne
lcall
push
jmp
jg
mov
jecxz
lret
xchg
dec
mov
mov
push
lock
push
movsb
inc
xor
xor
push
push
fists
icebp
add
or
inc
add
arpl
inc
jmp
aaa
and
push
sub
icebp
sbb
pop
cmpb
nop
clc
jecxz
or
pop
scas
outsb
movsb
mov
dec
fwait
push
icebp
mov
inc
out
inc
movsl
push
sbb
jmp
push
dec
push
push
xor
popl
out
pop
popa
inc
dec
rol
add
scas
nop
sub
test
std
lcall
test
leave
loopne
xchg
xor
and
lea
stc
adc
xor
add
sub
inc
dec
pusha
jmp
outsl
inc
je
jns
add
insb
loope
inc
add
jmp
sub
jmp
mov
andb
cmpsl
mov
sbbl
xchg
hlt
aaa
insl
push
ret
js
xchg
shlb
in
mov
mov
int
inc
data16
mov
loope
shrl
outsl
jno
mov
lcall
add
jmp
out
pop
or
adc
add
clc
call
movsb
pop
mov
mov
inc
sahf
cs
pop
or
scas
jmp
adc
insb
test
dec
push
xlat
cmp
dec
fisubs
mov
lea
dec
aaa
inc
xor
out
inc
and
ret
incl
popf
push
iret
cwtl
pop
xorl
dec
push
cmp
ljmp
mov
push
cmp
add
mov
jle
jb
insl
pop
fwait
lea
cmp
call
mov
pop
dec
pop
xchg
push
in
stos
and
decl
mov
lea
xlat
dec
icebp
ljmp
lods
sahf
lcall
mov
xor
xor
mov
scas
rolb
imul
repnz
div
xor
mov
or
mov
mov
sub
mov
leave
add
dec
inc
adc
call
add
sbb
sarl
push
jo
dec
xchg
jle
jp
aam
push
dec
sbb
adc
ret
jb
pop
aam
and
lods
js
jmp
pop
sbb
aam
add
push
outsl
sub
fistps
enter
das
loope
cmp
sar
dec
inc
out
sub
cmp
push
jmp
je
push
dec
inc
outsb
js
rolb
movzbl
sub
cmp
ljmp
add
sbb
jg
fsubrl
sub
stc
insb
ds
movsb
mov
dec
and
dec
movsb
divl
std
iret
and
pop
cli
jnp
in
popa
cmp
lea
mov
xchg
pushf
lock
testl
mov
cld
fidivs
mov
std
lods
mov
push
jp
cmp
mov
ja
fildll
jecxz
or
jo
inc
lea
sub
mov
mov
lods
xchg
addl
cmpsb
inc
ret
je
inc
clc
iret
cwtl
les
decb
les
inc
mov
xor
ret
jbe
mov
push
sti
push
cld
push
jae
sahf
rcrb
mov
movl
inc
xchg
movsl
and
mov
and
add
mov
mov
std
push
inc
xor
popa
test
push
loopne
sti
fcompl
xor
cmp
push
daa
jno
incl
icebp
iret
pop
loope
mov
loope
xchg
loope
sbb
cmp
aam
imulb
and
roll
or
rcr
hlt
inc
std
lcall
mov
sbb
push
aaa
xor
xor
fs
jbe
inc
mov
rolb
jg
mov
aad
lock
xor
pop
fsubrl
jg
jno
cld
dec
sbb
les
and
aas
scas
jo
aaa
fs
addr16
lods
imul
rol
aas
push
mov
jo
repnz
jge
ss
mov
divl
fdivrp
jmp
sbbl
jmp
xchg
push
fsub
xchg
ds
adc
dec
jg
cmp
jb
out
jmp
adc
and
xlat
loopne
inc
dec
adc
push
jno
and
dec
inc
insb
test
in
insb
enter
jp
add
sbb
ss
adc
mov
cli
incl
scas
inc
ljmp
pop
lcall
mov
outsb
repz
pop
xor
mov
addl
pop
jnp
in
jmp
or
les
xlat
mov
orb
mov
sbb
and
adc
nop
adc
insb
jmp
aam
ds
mov
mov
test
test
xor
mov
push
jl
sub
or
dec
mov
rcl
mov
gs
or
xor
adc
sbb
dec
or
popa
push
fwait
movb
push
jno
xchg
ret
mov
jl
or
lret
bound
rorb
les
push
cmc
mov
push
xlat
xchg
pop
loop
pop
adc
sahf
inc
loop
sbb
cmp
ret
lcall
inc
mov
movsl
push
xor
movsl
mov
in
mov
add
pop
push
jmp
out
push
loope
dec
mov
dec
adc
rolb
dec
mov
adc
leave
or
adc
aaa
jns
push
mov
push
cmp
push
aam
cmp
mov
jae
xor
mov
add
xor
aas
dec
sbb
xlat
sub
mov
sti
add
mov
bound
jno
pop
bound
les
or
or
in
push
aad
fsts
jne
xorb
lds
and
inc
push
fidivl
icebp
imul
outsb
fisttps
sub
jne
add
mov
stos
adc
mov
pop
mov
adc
push
mov
scas
loopne
mov
lds
push
xlat
loope
enter
data16
cmpsl
dec
mov
shll
or
or
sbb
nop
inc
loopne
adc
decl
aas
rol
aaa
cwtl
negb
loope
jnp
lahf
ljmp
jnp
icebp
sub
sbb
aaa
test
movsb
sub
xchg
sbb
xchg
jne
xchg
and
inc
dec
jb
test
js
push
inc
xor
or
inc
jns
sub
dec
outsb
jb
or
add
push
ret
and
mov
inc
jecxz
ja
movsb
pop
pop
inc
fdivrs
pop
lret
pop
xchg
cmc
lcall
cmp
cmpsb
dec
and
scas
cld
mov
mov
dec
jns
push
cmc
add
or
int3
fsubs
push
adc
aaa
testb
adc
gs
xor
in
push
mov
mov
xor
jbe
aad
inc
push
jge
inc
repz
add
fldl
jge
pop
rclb
cs
jg
push
lods
andl
testb
into
push
lods
add
mov
mov
add
jno
xor
shl
add
xor
xchg
mov
cmp
mov
pop
pop
xor
or
mov
bound
xchg
pop
xor
loopne
push
orl
mov
inc
or
mov
or
push
inc
inc
mov
movsl
cmc
call
mov
xchg
lds
sbb
mov
ficoms
sub
int
fcomps
lea
cmp
xor
adc
shrb
mov
dec
dec
mov
js
xchg
xor
andl
repz
and
bsr
lock
push
icebp
loopne
inc
cmp
js
nop
int
sbb
push
adc
lds
inc
gs
pop
loope
rclb
adc
repnz
daa
push
and
cld
fmull
mov
sub
dec
and
mov
shll
xorl
adc
mov
and
jg
jnp
or
add
mov
in
ja
enter
cwtl
mov
out
ss
stos
mov
sbb
adc
iret
loope
decl
shlb
cli
fwait
daa
nop
int
jecxz
and
or
push
mov
sub
test
add
and
jno
mov
mov
pop
cmp
and
jns
add
lret
outsl
rol
jo
or
scas
add
dec
test
movsb
stc
mov
mov
mov
or
xchg
aas
and
adc
icebp
push
xorl
cmp
adc
outsb
roll
subb
loope
pop
push
or
pop
popa
mov
sbb
ret
es
les
addb
cmpb
lods
cmp
arpl
imul
inc
push
cmp
neg
cmp
dec
adc
fs
out
push
cmp
ret
dec
push
lahf
hlt
hlt
insb
and
push
mov
inc
lock
divb
in
cmp
jecxz
push
cmpsb
inc
test
ret
mov
mov
addl
scas
movl
rorb
test
stc
loop
je
in
jl
add
mov
push
pop
scas
cmp
inc
fs
adc
addb
xor
int3
leave
and
push
int3
cmp
jecxz
fmuls
adc
adc
js
mov
jle
add
fldl
inc
xlat
push
inc
insl
dec
inc
sti
in
add
test
jl
aam
popa
add
inc
mov
fimull
xor
sbb
ret
push
sub
rolb
push
xchg
adc
xchg
in
or
dec
mov
daa
cltd
add
cltd
arpl
xor
lcall
neg
loope
and
xchg
mov
cli
xchg
push
cmp
sbb
addr16
les
sub
aam
adc
lea
and
jne
inc
xchg
xor
daa
adc
dec
xor
push
dec
add
lea
hlt
push
push
rolb
jb
add
lea
add
in
sbb
mov
testb
ljmp
jb
mov
loopne
mov
dec
dec
dec
clc
sbb
mov
push
inc
add
jmp
mov
std
and
es
mov
mov
mov
xchg
xor
push
pop
jp
push
jge
mov
cmp
add
fcmovnu
in
jp
mov
jmp
push
addl
pop
push
push
fimuls
inc
add
mov
adc
push
xor
push
pop
mov
xor
bound
pop
cli
adc
xor
pop
shlb
push
mov
shrl
sbb
rorb
mov
xor
push
fs
cmpsl
insl
push
addr16
mov
and
inc
fisubl
pop
cmp
pop
or
fidivl
push
fnstenv
jb
push
outsb
dec
push
mov
pop
mov
pushl
sbb
popa
mov
inc
dec
js
and
jge
cmp
dec
aam
sahf
mov
sahf
sub
xor
inc
add
push
mov
in
ret
aam
nop
push
lahf
mov
pop
and
xor
icebp
cs
lcall
pop
aad
leave
adc
pushl
insl
and
or
push
leave
xchg
pop
add
cmp
sub
dec
or
mov
sbb
cmpsl
dec
mov
sub
push
adc
js
shrl
inc
jp
add
jmp
xor
out
icebp
dec
lret
jg
pop
shlb
stos
mov
ja
stos
xor
pop
fwait
aaa
sbb
push
mov
cmp
les
fdivs
jge
mov
inc
push
xchg
arpl
and
sarl
loopne
daa
cmpsl
cmpsb
mov
or
jl
imul
push
dec
inc
dec
ret
test
lds
cmp
push
mov
mov
adc
and
xchg
and
xchg
sbb
jmp
aaa
test
mov
rcl
popf
fdivrs
jne
rclb
jecxz
push
push
and
xchg
enter
fistpl
addr16
xchg
pop
outsb
ficomps
into
jno
push
call
mov
and
jmp
stc
add
mov
dec
cmpsl
or
addr16
dec
pop
enter
push
jno
call
mov
push
xchg
inc
push
wrmsr
and
test
inc
pop
lahf
fdivrp
cmpb
shll
nop
xor
add
insb
loopne
add
cltd
sbbb
ss
mov
pushf
int
add
fcomi
loope
faddl
adc
iret
cmp
add
inc
and
pop
mov
mov
or
shll
mov
or
or
gs
sbb
push
sub
rorl
or
daa
addr16
sti
mov
imul
rcll
call
scas
adc
jns
dec
adc
push
xlat
fists
mov
sbb
and
mov
test
out
mov
jl
inc
lahf
insb
add
jno
cmp
push
xor
arpl
xchg
dec
jmp
movsl
jle
je
adc
pop
inc
push
jp
loope
in
and
cmpl
clc
sub
cld
add
add
lahf
mov
and
dec
push
jnp
adc
rolb
dec
add
mov
in
enter
lret
or
add
aad
add
fsubrl
ficoml
das
ja
aam
test
clc
pushl
adc
xchg
jmp
and
sbb
insb
sub
inc
nop
test
dec
enter
mov
insl
add
dec
nop
dec
or
dec
fcoml
mov
je
out
add
movsb
loope
movl
jmp
mov
in
lcall
data16
cmp
push
and
mov
shlb
push
movsb
push
xor
les
int
push
lret
cwtl
out
outsl
push
add
jne
rorb
ss
jno
aaa
jno
call
dec
mov
fucom
push
out
popf
insb
loope
outsb
inc
stc
incl
imul
clc
les
mov
ljmp
pop
divl
aam
push
aam
sub
pop
aam
std
adc
xor
outsl
or
daa
mov
dec
test
lret
inc
add
pop
xchg
clc
mov
push
ss
std
or
mov
push
hlt
mov
mov
cmpsb
into
adc
sti
xchg
xor
dec
mov
je
jge
insl
in
test
fildl
cmp
mov
icebp
outsb
lcall
inc
js
push
fstl
lcall
outsl
cld
xchg
jo
sub
ds
jae
cmpsb
and
mov
mov
xor
inc
std
xor
xchg
adc
into
loopne
push
push
sbb
repz
insl
dec
dec
dec
push
dec
push
mov
incl
sbb
xor
push
pop
rorb
mov
test
jo
je
fcomps
mov
push
inc
pop
je
push
push
pop
fwait
clc
ret
push
ja
jno
push
pop
js
or
dec
fs
sub
jb
pop
and
mov
jno
jae
daa
cli
xor
js
cmpsb
outsl
sahf
cmpsb
out
push
cmp
repz
cmp
inc
dec
rorl
js
fistl
mov
pop
nop
push
add
ljmp
bound
js
pop
xor
inc
sbb
and
inc
sub
clc
dec
push
push
testb
pop
lods
push
hlt
mov
in
dec
inc
daa
imul
cmpb
jae
xor
inc
push
push
mov
dec
inc
xor
xor
or
nop
or
shl
ret
call
dec
bound
xor
jbe
testb
xor
lcall
cmp
mov
jbe
pop
test
and
lods
daa
cmp
loop
mov
lods
ss
inc
pusha
insb
dec
js
jmp
adcb
nop
or
je
inc
cld
call
in
cmpsb
lock
int
fwait
xchg
inc
jns
dec
lock
add
dec
inc
popa
push
xor
cmp
cld
jbe
adc
lret
lcall
jae
adc
mov
mov
movzbl
enter
ret
or
call
and
repz
jnp
adcl
push
or
push
pusha
ror
es
cmp
push
jg
dec
xor
push
inc
ret
out
inc
insl
add
mov
adc
jae
fwait
pusha
mov
dec
in
jecxz
jg
das
sub
jmp
fmull
test
jns
mov
dec
lds
sub
in
push
or
dec
xchg
ss
inc
rorl
popa
sbb
mov
insl
fwait
pop
stc
pop
mov
orl
mov
and
or
jmp
dec
and
sarl
push
jl
push
popf
sub
enter
inc
or
rclb
sub
inc
sbb
call
push
mov
mov
loop
add
jmp
fidivl
mov
sub
push
test
pop
mov
or
call
xor
jbe
out
adc
sub
mov
adc
sbb
outsw
fs
push
jl
jo
adc
add
mov
cwtl
and
inc
dec
push
insb
popf
jge
lcall
jnp
outsb
mov
js
cmp
mov
lcall
xor
adc
xor
add
data16
jno
mov
aaa
outsb
les
lcall
add
mov
movsbl
mov
shlb
test
xor
xor
pushl
lahf
je
rclb
xchg
cld
pushl
push
clc
test
lret
push
imul
cli
cs
cmpsb
cltd
ljmp
mov
out
shr
cmp
ret
inc
jg
add
dec
mov
dec
add
cmp
call
jno
pusha
imul
sbb
insb
push
and
xchg
ret
inc
sarl
out
dec
push
dec
test
ret
out
sub
ficompl
repnz
je
outsl
or
icebp
xor
imul
aam
pop
ljmp
jne
mov
loopne
lea
imul
and
inc
mov
mov
xchg
lods
push
scas
add
call
inc
jle
xchg
es
ret
mov
js
ret
or
xor
cmp
mov
lret
adc
mov
movsl
inc
pop
data16
icebp
daa
repz
imul
inc
inc
xchg
pop
mov
cmp
dec
stos
adc
in
adc
pushl
fistps
call
sbb
fldenv
jnp
pop
xor
mov
sbb
ret
fsubr
outsl
jbe
add
push
pop
xor
lods
jae
add
push
bnd
jp
addr16
lret
ficoms
adc
arpl
dec
cmpb
push
repz
icebp
sbb
out
out
scas
mov
je
movsl
cmp
scas
es
mov
jl
dec
test
cmp
fcomps
mov
adc
cmp
push
jecxz
xor
insb
pushf
xor
orl
xor
les
es
dec
sbb
adc
adc
sarl
mov
jns
shlb
aaa
adc
std
icebp
xchg
stc
mov
addr16
andl
push
je
or
enter
or
in
and
sub
adc
jle
test
aas
cltd
loopne
inc
or
cmp
add
insl
xor
mov
rcr
test
sub
add
repnz
div
out
sbb
push
pop
xchg
lgdtl
rolb
or
in
and
xchg
jl
daa
xchg
inc
adc
inc
call
test
outsl
sbbb
call
sar
add
flds
dec
lcall
push
mov
fs
and
pop
imul
cmp
mov
dec
and
lret
push
fidivs
adc
sbb
or
or
test
mov
sub
xchg
popa
nop
stos
and
dec
adc
mov
sub
insl
cmp
out
xchg
mov
das
pusha
mov
rol
hlt
outsl
arpl
or
push
sar
gs
add
xchg
js
insb
push
sbb
cmp
dec
mov
mov
or
and
xor
inc
sub
fnstcw
add
or
ljmp
addl
xor
mov
dec
or
mov
lret
push
push
jp
pop
popa
jmp
sub
adc
dec
in
add
dec
cmp
mov
mov
and
outsb
pop
popa
pusha
mov
cmpb
in
sub
cwtl
mov
mov
dec
mov
orl
sbb
dec
mov
cmp
mov
push
test
jp
pop
or
testb
pop
push
test
sbb
pop
test
sti
loope
or
or
jno
add
scas
push
mov
out
aad
mov
mov
jo
aas
lods
daa
sbb
inc
cmp
mov
ret
jbe
mov
in
shlb
rolb
jno
xchg
popa
loopne
push
loope
cltd
and
or
sar
out
btr
aas
cmpb
imul
xchg
shll
jecxz
sub
decl
push
push
shr
jmp
and
cmp
pop
rorl
push
popa
sbb
enter
mov
adc
mov
inc
mov
js
pop
pop
imulb
imul
push
jg
dec
xchg
popf
mov
out
icebp
adc
in
pop
in
adc
in
imul
ret
and
and
stos
cmp
hlt
xor
aas
dec
pop
cmp
mov
xchg
mov
call
push
mov
mov
out
xchg
cmc
dec
jl
jb
rolb
daa
mov
mov
movsl
mov
je
pop
dec
cmp
stos
insb
xor
cltd
aam
js
push
add
testl
cld
icebp
sub
ljmp
and
dec
pop
or
into
sub
ja
fadds
push
and
ret
popa
sar
out
xchg
mov
nop
mulb
add
test
shlb
sar
sti
movsl
popf
jae
pop
negl
pop
dec
mov
ret
mov
xchg
roll
adc
add
xchg
pusha
xor
inc
cli
dec
inc
decl
ret
orl
in
test
inc
popa
push
cmp
push
push
cli
idivl
push
adc
insb
dec
xor
enter
es
ret
pop
and
cli
daa
sub
push
add
add
dec
es
adc
cmp
int
inc
xor
add
shrl
jp
adc
mov
and
dec
out
aaa
push
inc
lret
cmpsl
adc
dec
dec
sbb
inc
inc
imul
mov
cld
call
xor
fists
xchg
lret
in
jnp
lret
add
sub
imulb
sub
push
mov
bound
mov
loop
jb
add
filds
mov
dec
pop
inc
jns
test
xchg
daa
pop
ficoms
dec
mov
adc
dec
bound
jmp
dec
cmp
lods
cmp
fisttps
and
outsl
pop
xor
js
out
insl
fs
scas
pop
ljmp
test
or
mov
in
adc
pop
inc
push
rorb
push
in
outsl
sub
add
stos
push
pop
std
adc
icebp
cmp
ficoml
xor
xchg
mov
push
inc
push
imul
jo
add
data16
xchg
ljmp
or
pusha
lea
jnp
iret
or
pop
jp
dec
aam
mov
call
lcall
jns
mov
repz
sbb
sarb
xor
cli
pushf
push
mov
icebp
pushl
push
push
push
push
mov
xor
sub
push
pop
xchg
cmp
or
bound
mov
popa
arpl
into
adc
sti
or
into
int3
repz
gs
popf
push
leave
test
aaa
xor
ret
push
stos
stos
jmp
sti
xchg
sub
jl
adcb
cmp
mov
jmp
dec
ja
das
jmp
add
out
stc
divb
dec
fsubrl
hlt
and
fstps
dec
jb
ljmp
inc
dec
pusha
dec
stos
lret
mov
decl
jmp
or
icebp
jnp
bound
inc
out
arpl
call
mov
lret
js
cmpsl
sbb
and
dec
mov
lock
xor
xchg
xor
and
or
and
pop
ljmp
pop
test
inc
mov
mov
pop
dec
dec
mov
icebp
jmp
sbb
add
lea
std
and
inc
lea
mov
lcall
push
ret
inc
pop
mov
fistl
stc
ds
jo
push
or
fadds
fimuls
outsb
jb
add
pushl
into
cmpsl
pop
in
inc
popa
test
scas
ret
or
cmp
add
dec
insl
arpl
add
dec
mov
sub
aas
imul
lock
rolb
testb
out
subb
es
adc
xor
arpl
aam
arpl
pop
add
lret
dec
pop
cwtl
and
test
add
lea
add
jns
mov
fstpt
iret
loopne
stos
mov
outsb
rcrl
jns
cmp
cmpsb
add
stos
inc
andl
test
pushf
sub
inc
hlt
in
sub
ja
push
ljmp
pop
gs
adc
adcb
ror
ret
aas
ret
push
rorb
std
pop
rcl
cmp
cmpsb
sbb
xor
pop
xor
xor
sbb
pop
xchg
orb
pop
xchg
xchg
mov
inc
and
int
popa
int3
sbb
mov
rorb
sbbl
mov
fildl
leave
xchg
pop
adc
jne
addr16
xchg
arpl
in
insl
xchg
insb
push
push
sub
push
pop
es
dec
mov
jmp
lcall
xor
rorl
cld
mov
outsb
int3
mov
push
or
cs
pop
push
mov
xor
inc
dec
dec
movsl
das
into
insl
ljmp
jmp
xchg
ret
lea
loopne
lods
inc
or
jo
and
fcmove
dec
or
shrl
shrb
fimull
or
cmp
loopne
jle
popa
testl
or
mov
or
sbb
stos
push
push
adc
pusha
push
dec
lcall
or
mov
or
or
loope
mov
pop
inc
in
sbb
jl
cmp
push
lahf
stos
jo
add
xchg
sbb
and
shll
nop
xchg
add
mov
jp
dec
mov
inc
mov
sbb
xor
lahf
fstpt
dec
daa
lds
or
inc
ds
or
adc
pop
je
shll
aam
dec
nop
cmc
lock
sub
mov
push
sbb
add
pop
jne
dec
jmp
pop
cli
add
push
pop
pop
push
sub
and
in
dec
add
push
and
scas
imul
sub
loope
mov
adcb
sub
loopne
movsl
call
cli
mov
mov
insb
cmpsb
ret
jmp
dec
push
xchg
inc
sbb
icebp
add
pushf
mov
repnz
xor
scas
popa
sar
jg
adc
mov
jg
or
xor
cmp
lcall
in
sub
mov
cmp
lds
cmp
pop
jp
sub
es
adc
cmp
inc
and
adc
xchg
sbb
fucomp
jmp
js
addr16
cld
pushl
into
push
adcb
xor
push
repz
adc
sbb
stc
mov
rcrb
lret
sbb
enter
pop
pop
jnp
mov
pop
jno
push
push
mul
inc
or
clc
or
xchg
hlt
gs
lret
add
insb
and
add
cmp
pop
testl
inc
fldt
cwtl
into
mov
movsb
mov
cmp
ljmp
pop
fsts
mov
imul
shlb
xor
add
and
push
lods
aas
mov
ds
fidivl
dec
aad
jbe
push
adc
push
inc
sub
decb
je
xlat
rcrl
or
and
cmc
dec
lcall
imul
ds
ret
ret
jne
dec
cmpb
addr16
xor
mov
adc
pop
cld
scas
xchg
xchg
push
std
adc
movsb
enter
dec
dec
or
in
in
andl
mov
xchg
repz
and
or
jnp
fmulp
outsb
push
or
add
adcb
add
lock
addr16
pop
jne
adc
insl
adc
cmp
push
mov
mov
jnp
cmpb
sub
dec
adc
neg
addb
and
imul
inc
popf
rolb
adc
fadds
psubq
jb
inc
push
pusha
jne
mov
push
rcl
stc
sub
xor
stos
sbb
dec
clc
orb
lds
adc
lcall
loop
sbb
jne
imul
inc
roll
xchg
jae
jne
xor
jp
push
sbb
les
push
jno
insl
loop
dec
rclb
movsl
fnstcw
std
sbb
rclb
mov
leave
loope
pop
js
mov
inc
stos
jne
add
dec
stc
jo
es
mov
mov
mov
inc
repz
cmp
mov
lea
mov
xor
bt
adc
icebp
push
pusha
loop
test
inc
outsb
inc
inc
mov
add
dec
inc
testb
xchg
scas
add
cld
mov
jno
test
mov
add
push
imul
aam
and
push
lods
xlat
and
add
test
xor
cmpb
jbe
or
cltd
orl
mov
arpl
push
rclb
iret
mov
mov
xor
xor
call
fistps
push
jl
mov
mov
scas
mov
xchg
and
add
icebp
mov
adc
mov
add
pop
daa
les
add
dec
lcall
inc
push
lds
push
lods
jp
cmp
mov
or
loope
test
inc
fists
xchg
stos
lret
xlat
mov
xchg
je
iret
or
ja
cs
push
pushf
ret
test
and
mov
lea
or
xor
dec
icebp
mov
shlb
js
jecxz
loope
cmc
sbb
repz
nop
loopne
cmp
mov
inc
cmp
or
xor
stos
and
out
jecxz
rorb
mov
inc
or
mov
pop
andb
cmp
loop
nop
mov
mov
push
add
out
loopne
xchg
pop
push
xor
das
add
mov
jmp
ss
mov
lock
daa
mov
inc
sub
iret
mov
add
sbb
jmp
adcl
cmpsl
sub
or
and
pushl
xor
lahf
imul
and
or
test
enter
add
cwtl
and
gs
sbb
jecxz
test
xchg
nop
xor
sahf
mov
push
push
xchg
int
shl
jo
sub
xchg
icebp
fistps
adc
sbbl
and
xchg
pop
add
dec
inc
cmp
rcll
push
pop
bnd
loope
and
fmulp
cmp
sub
xor
mov
loop
popf
inc
out
cmp
xor
sbb
aaa
or
xchg
or
inc
dec
xor
cmp
int3
pop
mov
mov
push
push
push
orl
xor
scas
ret
mov
scas
lea
aas
test
add
popf
push
xor
dec
fldt
nop
fisttps
sahf
bound
movsl
adcl
pop
test
test
lahf
xchg
sarb
call
add
xor
inc
popa
sbbb
cmp
jne
insl
ret
lock
cmp
mov
sbb
test
or
insb
xorl
inc
in
pop
add
mov
aam
test
inc
mov
fbstp
xor
pop
and
out
fidivl
pusha
mov
movsb
jae
mov
fists
xchg
out
adc
lods
cmpl
mov
dec
daa
sbb
js
and
push
add
pusha
sub
ljmp
flds
jbe
or
cmp
push
in
mov
fadds
jle
clc
xor
sub
sbbl
iret
subl
xor
push
and
lret
sbb
cwtl
je
ja
xlat
xchg
adc
or
or
or
adc
iret
lret
adc
or
stos
je
scas
inc
pop
mov
sub
daa
sbb
adc
xor
push
mov
and
cmp
int
push
daa
push
sub
sbbl
movsl
test
xchg
stos
rorl
inc
pop
movb
sub
xchg
cmc
popa
mov
iret
or
ret
dec
mov
jae
fisubl
adc
subl
ror
cmp
mov
sub
les
insb
lods
xchg
dec
scas
and
sbb
pusha
xchg
ss
es
enter
insl
pop
add
shlb
or
mov
inc
loop
jb
add
inc
and
and
cmp
mov
inc
outsl
adc
testb
mov
insb
loope
jne
jbe
dec
pop
cmpsl
xor
adc
shlb
popa
sub
push
and
lock
add
repz
cmp
lods
and
push
lret
imul
test
repz
sbb
es
add
je
and
sbb
push
adc
push
sahf
js
pop
js
incl
popf
adc
mov
das
je
lcall
add
xchg
xor
cmpsb
mov
stos
sub
inc
xchg
add
je
mov
pop
dec
movsl
dec
xor
imul
xor
sub
adc
mov
incl
dec
mov
add
outsl
cmpsb
xlat
pop
dec
xor
clc
sahf
ficoms
and
out
movb
repnz
mov
push
cmp
jne
xor
push
add
js
sbb
inc
or
mov
pushl
mov
xor
cmpsb
js
mov
cmp
aad
push
xchg
movsb
call
push
outsb
mov
push
or
fistl
imul
enter
jno
data16
inc
aas
stos
sub
stos
rcl
mov
int
stos
adc
addr16
xchg
fldenv
add
cmp
das
add
orb
adc
xchg
dec
inc
adc
add
scas
stc
sbb
add
arpl
aaa
clc
jmp
cmp
add
lcall
ret
sti
fsubl
mov
mov
icebp
mov
call
xchg
outsl
cmpl
fadds
inc
fwait
js
sbb
dec
into
mov
push
shll
test
fistps
rcll
push
lock
mov
pop
repz
ljmp
mov
xor
push
lret
mov
imul
inc
sub
pop
jge
pop
mov
icebp
mov
adc
insb
cmp
adc
insb
add
inc
push
movl
lcall
or
ret
dec
ret
decl
jmp
ret
js
push
adc
scas
cli
adc
sbb
int3
xor
ret
cmp
pop
adc
cmp
movsb
jle
xchg
out
inc
je
add
sahf
icebp
xchg
insb
nop
push
xchg
mov
mov
insl
xor
jns
test
cmp
lret
sub
push
mov
fisttpl
lret
xchg
popa
sti
das
jmp
jmp
sbb
popa
jno
out
push
push
fxch
dec
mov
scas
icebp
data16
pop
out
addr16
xor
jecxz,pt
insl
ret
xor
rorl
sub
xchg
das
sub
hlt
repnz
adc
or
mov
shlb
repnz
pop
inc
fdivrs
je
sbb
movsb
nop
fcoml
addb
add
xchg
sub
sub
mov
sarb
xor
cmp
xchg
imul
xlat
ret
push
std
cmp
xor
fdivrp
xor
insb
insb
ss
pop
inc
adc
dec
push
dec
xchg
and
fsubrs
sti
cmp
les
push
jns
dec
dec
add
cwtl
sub
incb
incl
xchg
push
jbe
dec
mov
cmp
xchg
or
jnp
daa
jmp
dec
or
adc
xor
push
jle
inc
mov
icebp
and
ljmp
mov
ds
sbb
or
mov
fs
lods
lcall
aas
xchg
sub
cltd
or
add
icebp
lcall
fucom
xchg
mov
je
sub
pop
mov
mov
or
imul
sub
dec
rcrb
mov
fsubrl
dec
inc
and
rol
dec
adc
inc
xchg
push
jbe
jne
sbb
add
xor
cmpsl
lea
pushl
xchg
lods
ja
xchg
xor
xchg
and
push
neg
xchg
lea
aaa
sub
sub
push
mov
sbb
ds
inc
popa
jp
dec
inc
jnp
jb
xor
pushl
cmp
mov
mov
jecxz
push
les
dec
and
mov
mov
adc
fs
bound
push
aad
es
cld
incl
lock
outsl
sbb
jb
dec
add
frstpm(287
mov
test
arpl
push
inc
and
inc
aas
rorb
hlt
sub
fadds
inc
push
pop
inc
push
incb
sbb
jl
popf
mov
xor
adc
fwait
push
pusha
lea
mov
adc
xor
jb
mov
pop
push
sbb
out
outsl
inc
add
ss
cmp
mov
pop
xor
push
jle
cltd
mov
xchg
call
jp
sbb
xchg
ret
xor
clc
jae
test
mov
test
xlat
push
hlt
notl
pop
push
outsl
ja
mov
push
mov
jle
ja
movsb
push
jno
dec
repz
shl
push
xchg
nop
data16
or
xor
adc
dec
dec
push
pop
mov
dec
sbb
mov
and
dec
and
ret
sbbl
and
iret
clc
test
jne
xor
jbe
jle
xor
pop
lds
imul
mov
rclb
scas
xor
xchg
mov
cmp
ror
ds
adcb
push
dec
cmp
pop
adc
lds
fidivs
dec
mov
mov
inc
inc
inc
fiaddl
cmp
popa
enter
gs
movsl
clc
call
cmp
and
mov
cmc
dec
aas
jge
cmp
call
jnp
xor
dec
xchg
rorl
jmp
fst
pop
popa
mov
inc
xor
xor
jb
dec
stos
loopne
or
sub
inc
scas
scas
fcos
push
push
or
out
fcomps
in
mov
loop
or
jecxz,pt
stc
adc
scas
adc
push
movsl
pop
mov
jmp
or
outsb
and
cmp
xor
or
mov
or
sub
mov
push
xchg
ret
shlb
xchg
mov
ret
sub
rorl
xchg
mulb
imul
enter
xchg
or
loopne
inc
andl
lods
mov
and
inc
ret
xchg
jnp
sti
mov
or
add
cmp
sbb
and
add
cmp
adc
inc
and
push
pop
add
inc
loop
sub
orl
inc
add
sub
test
push
repnz
or
cmp
dec
sahf
or
sbb
xchg
rclb
cmp
jae
or
imul
inc
adc
hlt
xchg
int
cmp
push
inc
addr16
or
mov
arpl
dec
inc
pop
mov
sahf
push
pop
mov
add
out
je
test
adc
push
or
sbb
ds
movsl
pushf
ret
xchg
fsubs
dec
int3
cmp
movsb
jo
lret
mov
and
xacquire
add
mov
mov
repz
inc
xchg
loopne
jbe
rorb
fnclex
mov
lcall
and
icebp
mov
add
jae
xchg
lret
add
fisttpll
sbb
inc
daa
stos
movsl
or
xor
repnz
and
in
mov
mov
outsl
bound
stos
or
sbb
pop
mov
jg
je
js
lds
push
mov
mov
adc
xchg
jmp
adc
or
js
out
mov
mov
mov
and
xor
push
and
add
ret
out
xor
xor
jg
cwtl
cmp
inc
fisttpl
jb
inc
hlt
mov
xchg
add
pop
jne
imul
shlb
lcall
movsl
andl
dec
or
add
mov
and
ret
dec
dec
sbb
xor
add
in
push
push
push
lds
outsb
inc
xchg
cmp
jo
inc
notl
sbb
mov
insb
pusha
push
aaa
leave
xor
scas
push
adc
lcall
mov
push
add
jbe
sbb
loope
xchg
or
lahf
mov
add
sbb
push
push
shlb
popa
inc
outsl
dec
orb
pushl
loope
enter
xchg
enter
and
xchg
push
xor
lods
dec
das
jg
shll
in
add
adcb
push
add
orl
jge
call
cmpsb
test
les
out
push
jb
loopne
lods
dec
std
and
dec
inc
push
sub
call
push
sahf
out
rorb
cmp
std
jg
lcall
and
cmp
loopne
scas
roll
je
cs
pop
shl
test
repnz
ret
sub
jge
add
push
and
movsl
cmp
mov
scas
push
outsb
push
inc
arpl
inc
inc
and
and
dec
push
loop
sti
xchg
push
stos
loopne
int3
sub
inc
cmpl
push
push
push
xor
shrl
repnz
xor
push
xchg
xor
clc
adc
jp
imul
popa
lcall
mov
xor
mov
pushl
fs
jmp
mov
push
dec
cmp
inc
sbb
addb
add
pop
sub
rcll
lock
jg
xchg
jo
and
jge
jo
scas
cltd
xor
mov
lcall
addb
inc
push
jl
test
cmpb
dec
insl
adc
cmp
dec
push
pop
dec
dec
test
and
testb
add
inc
push
push
mov
xor
push
nop
xchg
loopne
sub
insl
loopne
das
cli
and
fndisi(8087
inc
adc
test
ljmp
inc
xchg
jecxz
mov
xor
outsb
je
nop
fistpl
mov
push
push
aam
xor
into
sahf
inc
sbb
xor
mov
bound
dec
push
insb
insb
int
mov
cld
call
cltd
xchg
ret
sarb
mov
adc
call
bound
inc
sub
cmp
or
rolb
push
js
inc
pop
cmp
rcrb
cmovno
pushl
popf
and
dec
mov
mov
in
ss
frstor
mov
cli
decl
jmp
addr16
outsl
jg
stos
xchg
cmc
xor
shlb
xor
mov
pop
lods
dec
movsb
pop
add
mov
inc
and
adc
mov
pop
inc
subl
xchg
inc
outsb
dec
call
pusha
add
cs
push
sbb
mov
in
mov
mov
xacquire
stos
or
les
xchg
mov
shrl
mov
push
movsb
pop
or
or
sbbl
sub
sahf
cmp
or
lods
test
test
xchg
rcll
test
lret
inc
shrb
sbb
jmp
mov
filds
rclb
push
cmp
das
dec
inc
sti
or
and
or
lds
add
mov
lcall
sub
das
test
dec
inc
test
test
and
or
pop
and
mov
daa
push
andl
push
xor
add
jo
insl
jmp
push
push
add
xchg
and
sbb
es
mov
adc
jge
scas
push
sbb
rcrb
push
inc
xchg
pushf
mov
inc
lcall
mov
clc
jl
cmpl
xor
or
pop
mov
mov
pusha
pop
repnz
int
pop
adc
movsb
subl
nop
pop
into
push
pop
cwtl
test
outsb
sbb
xor
push
or
add
adc
push
and
pop
xchg
addl
rorl
nop
les
stos
aaa
jmp
imul
cmp
dec
out
jo
jns
xor
add
push
jecxz
in
sbb
xchg
fcompl
stmxcsr
icebp
ljmp
dec
cmpsb
adc
mov
adc
jmp
mov
ret
bound
or
xchg
mov
xchg
les
pop
pop
inc
ljmp
loopne
mov
cmpsb
movsb
inc
inc
fstl
leave
adcl
xchg
dec
aad
xchg
adc
sub
or
push
inc
push
dec
insl
cs
sbb
imul
inc
lods
cmp
sub
outsb
sbb
roll
dec
dec
ret
and
int3
test
mov
or
ss
stos
clc
call
insb
xor
out
cli
inc
and
fcmovnbe
and
mov
mov
pop
imul
dec
ss
je
jne
je
inc
adc
push
mov
flds
inc
dec
mov
push
imul
lcall
pop
int3
inc
lock
jg
ds
pop
adc
popa
test
jmp
adc
or
mov
cmp
outsb
aam
and
stos
mov
inc
mov
shll
xor
je
cmp
xchg
xor
faddp
cli
mov
repz
jbe
ss
je
dec
push
mov
jmp
loope
pop
mov
repz
fsubrl
sar
sbb
sbb
adc
xlat
mov
repz
adc
cmp
push
arpl
and
inc
dec
xor
and
mov
push
testb
fs
inc
mov
cld
lcall
xor
push
mov
fisttpll
data16
adc
xorl
lock
incl
fsub
outsl
mov
pop
jg
lret
fsubrs
js
dec
mov
mov
clc
adcb
lcall
add
stos
and
mov
and
in
loopne
dec
daa
mov
in
inc
push
out
loope
adc
fwait
xchg
popf
lahf
mov
pop
sub
stos
jmp
add
lea
cltd
dec
ret
and
sbb
movsl
adc
adc
add
push
sub
mov
push
pusha
shl
inc
fldt
movsb
imul
jo
xlat
loope
push
xor
add
js
mov
test
xor
in
call
jne
add
jle
pusha
sbb
or
cmp
and
mov
mov
or
adc
push
pop
inc
aaa
lods
push
int3
and
mov
mov
pop
enter
and
lret
inc
lock
pop
inc
pop
mov
inc
add
pusha
rolb
push
cwtl
inc
stos
pop
enter
cmp
jns
adc
and
icebp
inc
lods
add
cmp
test
jne
loope
imul
and
in
ret
jge
sub
mov
mov
lret
fiadds
mov
aad
loopne
jmp
or
mov
add
mov
sbb
mov
cmpsl
sbbb
andb
mov
stos
and
lds
pop
and
js
and
or
cmp
push
adc
adc
cmp
rorb
adc
jne
daa
or
hlt
push
sub
bound
divl
sbb
lcall
and
pop
ss
test
mov
lea
enter
dec
sbb
dec
movsl
or
xor
mov
push
inc
lock
pop
les
inc
jns
mov
mull
rolb
add
mov
arpl
jns
inc
cmpsb
or
shll
sub
popa
or
push
xchg
loopne
pop
xchg
imul
adc
movsb
test
mov
rorb
and
fisubs
dec
mov
mov
or
movswl
push
jne
ret
lahf
les
lea
xchg
add
mov
xchg
sarb
cli
sub
out
fnsave
add
loope
dec
and
cs
cmp
imul
les
pop
in
adc
adc
pusha
xchg
xchg
pop
hlt
push
push
push
incl
mov
imul
test
push
loopne
jns
push
sbb
xor
inc
scas
negl
xor
out
add
jne
fs
or
test
jge
and
insl
mov
pop
and
push
inc
cmp
je
adc
hlt
xor
and
cmc
inc
push
cli
sub
sbb
adc
aad
mov
stos
xor
jo
hlt
scas
movsl
dec
push
and
xchg
aad
mov
lds
shll
xor
jmp
inc
push
jp
cltd
jbe
in
sahf
in
pusha
fisubrs
lcall
into
fmull
adc
enter
push
loop
and
and
inc
addr16
sahf
insb
insb
pop
outsl
cli
mov
pop
fcmovnb
iret
mov
loop
push
test
add
call
fwait
lods
xchg
inc
push
add
data16
ficoml
shrb
shlb
aaa
insl
ja
inc
pop
enter
dec
imul
loopne
je
test
push
cltd
mov
jg
ljmp
mov
out
push
test
pop
insb
and
or
and
and
std
ds
cs
arpl
sbb
movsb
mov
data16
xchg
rcll
rolb
mov
mov
or
pushl
inc
inc
sub
fstpt
loopne
jmp
mov
cltd
jg
sbbl
ja
sahf
mov
push
dec
inc
inc
pusha
xchg
inc
fs
push
mov
inc
jbe
inc
add
call
dec
xchg
dec
insb
aam
lret
sbb
addr16
enter
dec
fidivrl
inc
enter
inc
push
xor
out
movsl
or
clc
inc
jg
loopne
outsb
xchg
cs
leave
das
adc
and
adc
jecxz
inc
mov
jno
in
dec
gs
in
mov
roll
xchg
xchg
mulb
mov
sti
xor
sbb
pop
scas
in
js
andps
lcall
push
add
pop
data16
fucomip
xor
mov
test
mov
or
arpl
enter
mov
cmp
into
push
add
push
push
aaa
clc
in
add
sahf
stos
arpl
ljmp
dec
jle
xchg
std
dec
js
jno
sub
push
aas
and
or
sbb
outsb
cmpsl
mov
push
addb
inc
inc
pop
pop
ds
adc
pop
nop
sub
inc
hlt
mov
fwait
adc
cmp
mov
or
movsl
mov
pop
lea
and
inc
cmc
lahf
dec
jo
xor
aad
sub
xchg
imul
jbe
push
add
sub
sbb
mov
lea
xchg
adc
sub
adc
push
cltd
or
sbb
or
inc
sahf
sbb
shll
jo
xchg
fists
cs
out
pop
scas
mov
inc
pop
xchg
aaa
rorl
sub
fdivrs
dec
push
or
pop
lds
shlb
loop
negl
mov
lods
push
arpl
aam
leave
pop
sbb
out
or
or
cmp
or
xlat
mov
mov
add
cmp
das
mov
adc
movsb
xor
inc
sahf
mov
gs
pop
enter
jo
ret
aam
cmpsl
mov
pop
jo
iret
sbb
mov
fs
aas
jo
dec
dec
pop
mov
fld
enter
add
dec
out
inc
stos
lret
mov
or
sub
and
mov
pop
and
jecxz
imul
stos
mov
jmp
mov
xor
sub
mov
int3
outsb
add
sub
and
ror
xor
sbb
jne
subb
int3
xor
dec
jmp
and
xchg
xchg
popf
lahf
daa
test
leave
lods
or
mov
push
in
add
data16
inc
movsl
mov
push
sbb
inc
pop
or
xchg
cwtl
cmp
jno
daa
or
mov
sbb
add
adc
icebp
std
loopne
or
xor
jbe
inc
push
cwtl
sahf
in
call
mov
iret
das
adc
call
jns
je
mov
nop
ror
ja
or
xchg
inc
cli
xchg
jle
xchg
mov
cmp
sbb
incl
cs
or
pushf
ds
dec
mov
dec
cli
aas
fs
inc
pop
movb
push
cmp
add
add
push
lahf
cmpsl
addb
or
xchg
icebp
insb
popf
sti
xchg
out
push
mov
sbb
call
ret
jno
xor
dec
dec
jo
dec
inc
push
pop
sbb
xchg
xchg
lods
push
jne
dec
cmp
mov
pop
lcall
insb
push
gs
jnp
lcall
lods
inc
pop
enter
inc
push
ret
lahf
cld
stos
test
cmp
xor
mov
inc
test
or
ds
push
add
pushf
mov
add
mov
push
dec
or
das
mov
popa
mov
cmp
je
lods
clts
loopne
xchg
incl
cmp
mov
pop
lds
mov
pop
das
adc
out
mov
std
popf
cmp
adc
fmuls
ja
mov
inc
jae
shlb
jle
dec
dec
out
dec
inc
jg
sbb
mov
lcall
jmp
aad
adc
rcrb
mulb
sbb
fldl
lcall
ss
imul
pusha
sub
and
sbb
push
cmp
out
cmpsb
add
ficoms
mov
add
stos
rcl
inc
mov
dec
lcall
inc
pop
fstpl
je
jl
imul
add
lds
mov
mov
mov
incl
adc
popl
mov
mov
adc
adc
fidivl
icebp
or
pop
add
pop
xor
dec
test
mov
gs
pushf
in
test
and
jecxz
cmpb
sub
adc
add
loop
mov
cli
pop
add
inc
sbb
or
orl
lds
xchg
clc
mov
and
outsl
icebp
stos
shrb
dec
mov
cwtl
pop
ret
test
pop
inc
lds
sbb
inc
or
push
mov
or
shrb
inc
dec
xchg
popa
mov
mov
daa
in
jne
aas
aaa
iret
fnsave
or
jo
inc
xchg
cmp
and
fcomip
and
test
out
sbb
mov
push
movsb
xchg
outsb
lahf
push
imul
inc
movsl
dec
movhps
arpl
loop
test
cmpb
test
ret
jecxz
rorl
jnp
shld
add
lods
pop
js
orb
jg
and
adc
inc
add
shrb
add
pop
mov
lods
sbbb
inc
jecxz
push
inc
ret
test
and
add
mov
rcrl
pop
enter
mov
jne
dec
je
cmpsb
push
or
js
cltd
ja
test
inc
orb
in
in
mov
repnz
pop
sub
cwtl
aam
mov
adc
js
adc
and
xchg
add
addl
cmpsl
mov
and
xor
add
add
mov
pop
or
orl
cmp
lds
mov
inc
xchg
scas
sub
hlt
cmc
cmp
jp
mov
jg
icebp
loop
cmc
test
inc
push
imul
fstpt
push
test
push
dec
dec
shr
adc
jnp
sti
pop
push
adc
insl
cmp
int
xchg
jae
fwait
add
jmp
in
ss
mov
mov
bnd
xchg
dec
shl
dec
dec
pushf
mov
push
cmp
cltd
add
in
jbe
out
add
arpl
imul
jecxz
movsb
mov
sbb
cmp
les
out
movb
inc
sub
push
sub
mov
pop
sub
mov
iret
sbb
jno
aaa
xchg
ss
jno
outsl
push
shll
and
insb
xor
add
inc
addr16
inc
sub
inc
mov
mov
jnp
aam
stos
jl
in
js
fisubrs
decb
repz
jg
jmp
and
cmp
andl
movb
dec
push
add
pop
lret
cmp
push
arpl
cmp
mov
dec
cmpb
js
push
sub
push
mov
out
sub
decl
js
jbe
cmp
mov
mov
dec
cld
add
push
je
xor
and
fists
lahf
pop
mov
les
cld
testb
jb
movsb
sbbb
outsl
dec
je
rol
fs
mov
inc
jae
or
mov
mov
out
inc
add
icebp
sahf
roll
lcall
pop
cmpsb
cld
mov
daa
daa
lea
addb
fs
std
ljmp
dec
or
stos
fs
hlt
xor
or
cld
pop
mov
fistpll
inc
ret
shll
jne
aam
and
jns
dec
inc
loop
sbb
ret
push
dec
adc
jmp
insb
push
sub
jmp
or
stc
mov
push
push
lcall
addr16
call
or
sub
inc
flds
in
das
rolb
hlt
cs
fiaddl
data16
add
push
sbb
inc
in
or
dec
inc
inc
add
dec
add
rolb
adc
ret
ret
sarl
sar
add
subl
jns
rorl
ja
daa
je
inc
ljmp
jg
sub
lock
pop
pop
dec
pop
ss
imul
cmpb
inc
fs
test
cmpsb
or
incl
mov
shrl
stc
fnstenvs
cmp
decb
sub
mov
gs
sahf
xchg
shll
xor
xchg
lret
rol
jbe
aam
adc
add
out
lret
dec
inc
sbb
adc
or
inc
outsb
gs
add
lcall
inc
or
mov
out
push
sbb
cmp
xor
or
xor
orb
jnp
or
subl
sbb
sbbl
fisubs
add
movl
lods
aam
add
push
shrb
and
out
sub
adc
nop
ffree
mov
rol
repnz
mov
adc
or
je
sbb
setp
inc
loope
shlb
movsb
push
push
xorl
mov
lds
and
jl
inc
jmp
dec
lahf
xor
lret
addr16
pushf
inc
outsb
out
inc
insl
aas
sbb
and
arpl
adc
nop
xchg
daa
pusha
das
mov
adc
shlb
lret
data16
xor
repz
jo
add
ja
popf
mov
mov
or
dec
in
sbbb
incl
cli
pop
pop
in
cmp
jno
loopne
pop
push
push
in
ret
or
add
cmpsl
mov
addl
popa
sub
jae
sbbl
or
enter
sbb
sub
or
rcrb
jmp
bound
pushf
inc
aam
hlt
hlt
jge
leave
pop
test
pop
out
dec
dec
dec
inc
jecxz
jle
adc
movsb
movsl
sbb
or
cmp
and
dec
add
sub
xorb
or
rorb
xchg
xor
jmp
arpl
scas
imul
ficoml
cld
xor
xor
lcall
cmpsb
popl
jno
fadds
repnz
and
or
push
xor
dec
loopne
pop
add
mov
mov
push
aaa
sahf
movsb
mov
mov
aad
test
sbb
or
add
cmp
shll
lods
enter
mov
pop
roll
add
sub
push
popf
mov
adc
cmpsl
imul
ja
inc
stc
loopne
sbb
jns
lock
shrb
decb
test
and
xor
aad
mov
pop
add
pop
pop
mov
ret
aas
adc
inc
pop
aas
cmp
or
out
outsl
mov
push
mov
dec
push
mov
popf
inc
mov
aad
cmp
sbb
lcall
mov
jbe
and
ret
dec
mov
mov
aad
std
dec
mov
es
push
add
cmp
ds
xor
pop
aam
jmp
adc
mov
mov
outsl
pop
rclb
enter
andb
push
cmpsl
sub
xchg
cli
bound
xor
mov
lods
ficoml
js
js
fs
test
cli
inc
lea
cmpsb
cmp
pop
cltd
orl
adcl
cli
lods
pop
lcall
pop
xlat
add
scas
lds
cmp
inc
dec
or
inc
popa
and
mov
cltd
inc
jmp
sar
adc
add
inc
xchg
loopne
xchg
add
mov
jmp
aad
stc
shlb
or
cmpsb
out
les
clc
insb
push
lret
or
fsubrp
dec
or
push
inc
push
enter
mov
or
and
ret
push
jle
cli
js
test
lods
xlat
dec
pop
adc
lcall
cmp
inc
xor
inc
aaa
shll
in
lret
mov
mov
inc
call
aaa
subl
xor
push
imul
xor
push
mov
fcmovnb
and
mov
decl
pop
insl
clc
inc
jne
adc
decb
push
popf
fnsave
popf
xor
xchg
imul
lods
and
jb
outsb
inc
dec
inc
dec
ret
cmpsb
cmpsb
lock
push
adc
add
mov
call
mov
xchg
add
xchg
inc
ret
mov
sub
add
das
and
push
push
adc
popa
jns
repnz
lea
into
ret
xor
dec
push
outsb
ds
int3
push
add
pusha
add
sbb
lods
push
jmp
jno
mov
inc
das
arpl
popa
into
out
adc
dec
inc
add
xchg
aas
add
in
sub
add
push
aam
or
popa
pop
les
mov
int
inc
inc
rcrb
mov
iret
js
ljmp
jo
jo
pop
xor
push
mov
jno
std
lcall
push
movsb
and
pop
mov
and
rol
adc
xor
mov
js
mov
stc
inc
sbb
cmp
icebp
push
adc
push
push
dec
shrd
dec
sbbb
lcall
outsl
mov
push
or
adc
fdivrs
mov
or
psubsw
sbb
icebp
add
dec
sti
push
push
dec
in
jmp
inc
pop
outsb
jl
dec
or
mov
and
dec
add
je
xor
pop
sbb
dec
dec
lods
nop
jg
das
mov
lods
push
lret
fwait
in
mov
fs
in
xor
clc
jmp
xchg
in
and
call
loope
add
and
jno
mov
js
rolb
inc
sub
mov
jbe
xchg
fdivl
pop
sub
add
test
ss
mov
test
add
adcl
hlt
pop
and
sub
push
lea
sbbl
mov
fwait
jb
pop
adc
fadds
movsb
repnz
pusha
jmp
sub
loope
mov
pop
sbbl
stos
adc
fwait
inc
cwtl
mov
aad
inc
shlb
dec
inc
stos
in
in
pop
ss
jnp
adc
rorl
cmp
loop
out
inc
es
outsb
lea
adcb
xchg
xchg
loopne
add
nop
out
enter
xchg
dec
mov
pop
and
xor
ret
cmp
jecxz
sub
xchg
cmpsb
push
sbb
jb
xchg
xlat
mov
shlb
mulb
xor
rolb
mov
dec
cmpsl
jo
jno
scas
es
xchg
icebp
add
les
xchg
adc
add
mov
test
inc
dec
out
xchg
push
push
and
add
aam
or
mov
jno
ret
testl
subl
cltd
cmp
inc
push
xchg
or
cmpsl
outsb
roll
add
cmp
lods
imul
mov
mov
add
js
mov
fildll
aam
movsl
add
mov
mov
push
adc
or
adc
es
push
and
xchg
pusha
sbbl
fisttpll
add
or
in
xchg
fnstenv
enter
mov
and
popf
pop
adc
push
jae
or
imul
stos
arpl
cmp
stos
and
in
inc
add
clc
nop
inc
imul
jp
inc
ret
jge
xchg
subl
mov
inc
nop
popf
lret
cmpsl
sbb
in
and
lea
or
mov
iret
add
inc
inc
jge
shlb
rorl
sub
pusha
mov
or
daa
add
int3
jbe
mov
cmp
roll
addr16
mov
ret
arpl
add
and
vpmaxub
ret
ret
cmpsb
cmpsl
jl
lods
jo
jno
and
add
pop
js
mov
aas
pop
outsb
into
xor
dec
push
add
mov
mov
jp
jg
clc
call
repz
and
pop
mov
xor
ret
aam
mov
sub
xchg
imul
xorl
imul
sbb
mov
out
add
decl
sub
loop
xor
adc
sbb
lret
call
cli
fildl
or
pop
push
push
or
movsb
mov
outsl
outsb
sbb
dec
cwtl
nop
jns
inc
mov
add
xor
pop
fsubl
add
jns
jg
jnp
outsb
mov
or
fnstenv
adc
pop
insl
or
jmp
daa
movsb
mov
push
jmp
add
cmp
jo
dec
movsb
lret
ret
add
jo
sbb
mov
and
data16
xlat
adcb
in
dec
cwtl
sub
dec
mov
pmaxsw
test
in
dec
pop
pop
add
clc
push
int
mov
or
loopne
mov
insb
mov
mov
bound
cmp
incl
inc
ret
cmp
call
into
dec
sbb
and
mov
add
insb
xor
fcmovu
sti
push
and
nop
sbb
pop
iret
mov
sub
pop
sub
pandn
bound
pop
mov
mov
cmp
push
jne
sub
lds
and
clc
repnz
mov
or
shlb
sbb
and
insb
sbb
add
mov
xor
mov
mov
test
adc
mov
insl
shrb
mov
adc
pcmpgtb
adc
and
arpl
and
add
xchg
jo
xor
cmp
sbb
sbb
pop
jne
push
cmpsl
push
mov
or
add
mov
inc
or
jns
jle
or
xor
or
das
inc
xchg
sbb
inc
mov
add
das
insl
movb
sarb
jnp
adc
in
aaa
mov
xchg
adc
jg
add
into
jno
mov
addb
test
rol
adc
inc
dec
sbb
mov
and
jmp
xchg
je
aam
pushf
xchg
es
sbb
xchg
sahf
xorl
add
pop
fwait
pop
xchg
movsb
inc
dec
and
addb
mov
pusha
into
jnp
sub
pop
pop
sbb
xor
jg
pop
dec
cmp
addb
add
push
inc
xchg
mov
dec
iret
jns
pop
enter
lahf
cmp
repnz
call
orl
inc
inc
mov
orl
ja
iret
lock
xor
push
or
add
mov
je
aad
jno
sub
sbb
ret
mov
repnz
add
cmp
pop
adc
or
xchg
outsl
pusha
adc
ds
cmp
inc
daa
add
test
cmp
push
test
sbb
or
jo
test
ljmp
out
push
mov
test
imul
add
xor
mov
add
pop
xchg
mov
mov
cld
into
xor
xor
jp
push
push
or
aam
push
xor
rol
pop
mov
popa
mov
js
sbb
mov
adc
clc
lahf
adc
pop
ja
jns
mov
lcall
jbe
imul
iret
adc
jns
divb
cmc
mov
push
xchg
add
ljmp
lods
jge
dec
xchg
js
adc
push
aad
out
push
push
pop
dec
dec
cmpsb
dec
push
es
imul
mov
jmp
sbb
mov
adc
push
pop
insl
fs
jo
inc
add
dec
sbb
push
popa
add
sbb
ja
jg
addb
fistpll
pushl
adcb
icebp
lcall
xchg
jmp
aad
insb
pop
push
jns
cmp
xchg
sbb
aad
pop
and
icebp
idiv
cwtl
ja
xor
xor
xor
imull
jl
incl
inc
cmp
mov
mov
or
sbb
or
sub
xchg
xor
mov
jp
add
add
es
ret
xchg
fs
xor
mov
lahf
inc
sbb
push
xor
xchg
lret
adc
add
inc
fimull
insl
mov
dec
aas
shl
addr16
mov
xor
mov
jmp
pop
imull
cli
jecxz
lods
pop
scas
std
fadds
jp
cmpsb
lret
push
lock
mov
into
out
jne
push
mov
dec
or
add
xor
push
add
jmp
negl
pop
fsubrl
mov
push
and
add
dec
dec
movsl
add
dec
jmp
das
inc
call
pop
cwtl
clc
fcomi
dec
pop
inc
loop
or
test
int3
clc
incl
lock
pop
cmp
stos
fldl
cltd
popf
test
lods
and
jmp
pop
xchg
mov
dec
cmovae
jae
jae
jl
dec
xor
lret
addl
aaa
xchg
xchg
sbb
add
mov
sub
es
leave
push
jmp
xchg
ret
rdtsc
dec
shlb
push
popf
ss
sub
add
push
jmp
adc
and
or
loopne
or
ficoml
push
mov
inc
push
ss
mov
sarl
lahf
nop
sbb
mov
loope
js
sbb
dec
xor
pop
jg
xchg
inc
jbe
mov
sbbb
mov
dec
jns
xchg
cmpb
sbb
nop
in
call
sub
loope
push
sbb
daa
cltd
pop
mov
inc
nop
incl
dec
cwtl
ret
fistpll
mov
shlb
ljmp
and
mov
js
mov
test
cmpsb
jmp
fdivs
xor
or
lock
imul
adc
mov
rorl
push
mov
lahf
add
out
repz
shrb
push
stos
sti
xor
and
roll
or
mov
or
mov
cmp
xchg
xchg
imul
push
lds
ret
adc
or
fadds
dec
sbb
outsl
xor
cmpsl
push
add
xor
adc
lds
adc
and
ret
or
andb
pusha
stc
or
cmp
daa
nop
dec
mov
movsb
je
dec
nop
sub
sbb
cmp
stos
cmp
popa
arpl
fdivrs
pusha
imul
pop
adc
sbb
pusha
outsl
in
sbb
lock
xchg
mov
mov
ret
mov
inc
or
cmp
int
mov
scas
fs
cld
das
mov
push
shl
inc
and
orl
push
loope
jo
imul
and
sahf
xchg
push
mov
ret
rcrb
add
clc
cld
inc
fists
cmpsb
leave
loop
insb
pop
aaa
xor
ja
shr
jno
in
aas
add
sti
or
dec
cs
orb
std
dec
addl
repnz
sbb
xor
dec
mov
pop
and
sub
cmp
and
popa
inc
push
mov
cwtl
sbb
sub
sub
push
mov
pop
arpl
fdivr
call
dec
fbstp
popa
xor
cltd
xor
pop
dec
lods
mov
sbb
adc
inc
push
sub
pop
add
in
rolb
or
adc
jne
imul
gs
aaa
fwait
clc
insb
xor
cs
jb
jne
insb
inc
adc
das
push
add
fdivl
mov
add
lcall
sbb
sarb
and
lea
sbb
and
xchg
out
into
xor
pop
clc
in
decl
stos
or
xchg
aas
icebp
mov
push
jg
xlat
sub
in
add
jmp
mov
mov
xchg
or
mov
xor
xor
lock
mov
call
jnp
mov
mov
aad
stc
enter
popf
lods
cmc
pop
les
xor
add
adc
xchg
ja
cmp
test
fisttps
mov
iret
push
mov
test
jmp
mov
lret
sub
lcall
jo
aaa
and
jno
es
fisubrl
mov
js
scas
pop
dec
div
xor
sub
pop
and
mov
inc
mov
xchg
clc
call
clc
or
mov
cmpsb
add
imul
pop
lret
mov
jns
jp
push
sub
aaa
incl
mov
leave
fsubr
lret
sub
mov
jmp
mov
pop
test
or
inc
cmp
gs
mov
ds
sbb
lods
push
pushf
cli
popa
mov
movsb
jmp
mov
mov
incl
fdivrs
xor
and
in
xor
and
test
fmull
inc
dec
jle
in
loopne
jmp
adc
lret
or
test
scas
cmp
jnp
inc
mov
sub
inc
lods
dec
leave
dec
out
pop
ss
dec
mov
and
scas
and
dec
dec
inc
cmp
jg
lcall
lahf
pop
stc
shlb
add
mov
mov
adcb
mov
inc
mov
push
push
add
decl
in
adc
es
adc
xor
cwtl
xor
aas
adc
aaa
decl
mov
outsl
dec
jecxz
push
sub
in
cmp
lcall
stos
adc
insb
mov
add
repz
mov
add
jg
add
arpl
xor
dec
dec
pop
xchg
sub
jno
jp
idivl
inc
lods
cld
or
dec
mov
sbbb
pop
dec
lock
sub
incl
das
imul
and
xchg
push
lahf
push
mov
addb
aam
mov
hlt
call
dec
in
mov
cmp
mov
pusha
test
repz
shll
fnstcw
icebp
sbb
dec
jbe
cmpsl
mov
test
sar
loop
mov
lcall
add
xchg
repz
insl
lods
into
clc
outsb
dec
dec
cltd
std
fs
imulb
mov
cld
decl
cmp
push
das
insl
and
cwtl
and
cld
pushf
mov
ljmp
mov
push
pushf
xchg
push
xor
not
shll
decl
adc
faddl
cli
icebp
call
out
fiadds
repz
sub
decl
xchg
shr
or
int
xchg
in
repnz
mov
lcall
jl
sub
push
mov
imul
sti
clc
mov
sbb
ja
lds
cli
jl
leave
inc
inc
dec
fldt
cmp
cmp
lea
aam
in
fs
dec
data16
xchg
dec
push
iret
jno
sub
sub
pop
shll
lcall
mov
ret
pop
hlt
leave
lods
adc
mov
jae
std
out
push
mov
mov
ret
ljmp
mov
xchg
mov
loopne
loope
rcl
cmp
movsl
or
scas
in
mov
adc
push
jne
cltd
shrl
hlt
stos
stos
mov
dec
mov
bound
sub
push
mov
iret
mov
jp
jmp
dec
cmp
iret
and
ret
push
loopne
lods
mov
call
enter
popf
add
fistpll
cmpsb
or
sbb
loope
cmp
dec
scas
inc
mov
insl
mov
jnp
xchg
std
or
mov
leave
mov
push
fmull
testb
outsl
out
cli
outsl
fists
ljmp
les
add
adc
incl
sub
cld
adcb
lahf
push
sbb
mov
arpl
das
add
notl
lods
cs
inc
fs
mov
out
incl
adc
xchg
jo
sbb
and
push
and
movsl
and
ss
xchg
xchg
mov
cmp
jl
dec
adc
inc
repnz
mov
adc
sub
stc
and
mov
pop
fidivs
mov
xchg
pop
pop
add
incl
daa
sbb
aam
sarb
es
fxch
cld
pushl
dec
in
mov
and
mov
movsb
add
mov
fildl
lea
mov
ja
rcl
mov
inc
cmp
cmpsl
and
lcall
movsb
mov
push
insb
hlt
loop
jg
es
es
mov
pop
fildl
adc
sbbb
daa
mov
and
ret
stos
adc
pop
or
ljmp
xor
daa
into
jbe
push
xchg
add
inc
mov
mov
idiv
call
outsl
jbe
cli
mov
push
jo
not
xlat
mov
xor
pop
loopne
push
insl
hlt
popa
or
cmp
sub
cld
cltd
mov
dec
mov
lcall
sbb
out
add
fcmovnbe
scas
aad
pop
sbb
inc
dec
jbe
add
es
je
ds
push
jge
inc
xor
jnp
cmpsb
sbbb
and
mov
add
and
stos
clc
pop
les
outsl
pop
lock
hlt
lock
cltd
add
mov
push
mov
call
pop
cld
lret
xor
mov
inc
lds
fcomip
popl
push
fs
mov
into
xor
dec
cmpb
mov
lcall
sub
and
inc
out
outsb
dec
push
mov
cmp
sub
out
lretw
xor
outsb
inc
cwtl
fadds
enter
sbb
fisubrs
leave
sbb
sbbb
hlt
add
int
cld
ret
inc
sub
lcall
ljmp
cwtl
xchg
add
cmp
das
setge
mov
hlt
stc
loopne
imul
js
pop
xchg
nop
lock
fdivrl
outsl
adc
xor
fs
mov
cmp
repnz
pushl
jl
test
stos
xor
push
mov
mov
ret
sub
jmp
lds
pop
icebp
or
sub
xor
mov
lods
pop
jg
hlt
call
movsb
xchg
cmc
shl
adc
lret
cmp
xor
jo
or
jge
fdivs
clc
cmp
incl
leave
movsl
cmc
out
push
mov
sub
nop
imull
cmp
xchg
insl
pop
cmp
das
cli
jg
adc
pop
xchg
mov
int
adc
jge
or
inc
repz
cmp
pop
ret
call
xchg
imul
test
sarl
mov
jo
or
cli
stc
sub
inc
pushl
icebp
scas
sub
cli
add
out
jno
mov
ret
call
loopne
clc
mov
fdivrl
and
adc
push
pop
icebp
mov
jbe
stos
lahf
iret
aad
jo
push
in
cmpsl
int3
cmp
pop
out
repnz
xor
mov
lods
push
xchg
fs
andb
inc
out
sub
mov
jmp
nop
cmpb
stos
pop
push
pop
fs
cmp
loop
jns
mov
nop
out
push
mov
cmc
pop
lock
addr16
mov
scas
xor
insb
dec
push
xor
ret
incl
int3
jl
inc
and
clc
dec
mov
xchg
jno
mov
mov
into
xchg
adc
jp
mov
or
ljmp
push
in
mov
sar
hlt
rcl
test
add
scas
in
jl
add
ljmp
xor
int
adc
enter
and
incl
jmp
aaa
div
mov
scas
sub
mov
fmul
jmp
sbb
jmp
mov
lds
xchg
clc
arpl
js
je
ja
fcomip
sub
ret
mov
cld
dec
fsubrl
sbb
insl
in
pop
orl
repz
pop
mov
out
call
mov
mov
sbb
cmpsb
sar
lcall
cld
pop
fimull
sbb
fmul
jo
cmp
push
mov
rol
jnp
and
adc
outsb
xchg
mov
push
push
clc
cmp
or
mov
and
dec
cli
mov
jg
testb
inc
sbb
xchg
cmp
pop
test
insb
fucomi
dec
test
shll
and
pop
xchg
outsl
xchg
mov
cli
lcall
dec
call
mov
mov
sbb
jle
mov
push
inc
call
pusha
mov
mov
sbb
loopne
mov
mov
or
inc
outsb
insl
mov
bound
push
std
pushf
and
out
ds
es
inc
in
das
cli
mov
jae
mov
xchg
add
xchg
gs
adc
cmp
adc
sti
pusha
ja
ret
cld
add
or
lock
lock
in
sub
push
mov
jg
ljmp
nop
stc
xchg
into
loopne
xchg
jbe
std
lods
push
add
and
std
loopne
ljmp
mov
lods
jge
rcrl
pop
jns
mov
xchg
cld
mov
call
mov
cmpsl
clc
mov
inc
lods
xchg
inc
jmp
push
repnz
hlt
outsl
mov
pop
movsl
std
andb
and
pop
push
jae
mov
xchg
add
mov
icebp
ljmp
int
stc
sub
inc
scas
push
push
pop
push
pushf
aas
cld
ljmp
mov
or
or
fcoml
xchg
or
scas
xor
incl
hlt
popf
lcall
movsb
cmpl
js
jecxz
inc
cmc
das
lock
scas
sbb
cli
sahf
aaa
std
mov
movsb
cmpsb
loope
lret
out
pusha
fwait
imul
fdivrs
scas
clc
stos
divb
cmp
xchg
mov
sbb
call
adcb
push
cltd
lods
imul
gs
test
lock
pop
xlat
cmp
neg
mov
decb
dec
out
or
clc
aam
xchg
push
dec
inc
mov
lahf
xchg
repnz
xchg
cld
into
loope,pn
mov
into
lock
jg
sub
jecxz
dec
push
lahf
mov
insl
adc
in
pop
lds
jns
lret
inc
sbb
mov
push
outsl
lcall
cli
mov
jl
mov
call
mov
ret
in
jmp
fadd
mov
nop
pop
in
sub
push
jle
fldenv
cli
add
sub
jg
inc
test
push
pop
sub
push
sbbl
push
jae
inc
mov
cmp
incl
jno
sbb
movsb
in
cmp
cmp
push
add
fldt
sub
adc
loope
cs
test
jmp
rcrl
call
sub
xor
pop
lods
xchg
out
dec
mov
xchg
clc
jg
decl
or
int3
and
mov
mov
imul
mov
fidivl
daa
cmc
ror
xchg
xchg
jecxz
enter
sbb
mov
in
arpl
aad
data16
cli
jnp
hlt
scas
adc
sub
adc
push
xchg
cmp
and
decl
dec
lods
dec
sub
loopne
lcall
jge
adc
dec
ret
pop
push
mov
das
gs
mov
push
jo
push
mov
inc
adc
adcl
xchg
idiv
stos
xchg
int3
aaa
lahf
out
or
cmc
fcos
and
or
push
mov
out
ret
es
and
add
hlt
cmpsl
rorl
les
nop
mov
pop
in
cli
dec
decl
aam
movsl
or
lds
stos
or
pop
aam
fldcw
pop
cmp
ljmp
fstps
cmpsl
xchg
mov
repnz
cli
push
mov
fwait
iret
jmp
adc
cmp
mov
inc
flds
push
js
adc
movsl
sub
inc
out
pop
enter
mov
in
and
mov
adc
mov
lods
dec
jmp
popf
idiv
aaa
in
mov
xchg
mov
mov
stos
push
xchg
pop
mov
js
add
lret
xchg
bound
ljmp
push
or
pop
aaa
test
add
jecxz
movsl
sub
int
out
mov
lcall
mov
dec
outsl
test
cmp
jg
pop
lret
xor
and
cli
pop
sub
or
xchg
xchg
dec
js
inc
cmp
test
cmc
mov
mov
mov
aam
call
frstor
xbegin
mov
lcall
arpl
ljmp
pop
cmp
ljmp
mov
push
sub
add
jmp
int
loop
push
jg
lret
jo
sti
aas
cmp
adc
fimull
mov
jmp
dec
aas
push
lods
loope
inc
dec
inc
inc
ret
sbb
jge
popa
leave
xor
lock
jae
xchg
mov
mov
insb
xor
loop
jmp
fldcw
jge
push
mov
cmc
jnp
mov
mov
mov
outsl
clc
cmp
jo
mov
sbb
rcrb
fs
cli
add
shll
jecxz
shll
jmp
xchg
sbb
add
mov
mov
cli
and
inc
movsl
xchg
pop
ja
sub
jo
ret
cmc
xor
incl
aad
push
mov
ret
jecxz
ret
add
negl
mov
pop
hlt
jg
data16
cli
adcb
jg
out
mov
xor
jg
lcall
jge
mov
cmpb
addr16
dec
dec
xor
testb
pushf
add
call
xor
and
inc
or
int3
push
lods
pop
jg
push
mov
add
jo
sbb
or
push
jl
push
push
hlt
cld
lods
jmp
inc
addl
push
cmp
div
repz
int3
clc
insl
shlb
loop
pop
lock
adc
mov
inc
out
pop
shlb
jg
inc
and
sub
xor
clc
out
int3
pusha
jno
and
cmp
scas
dec
out
push
push
cmc
pop
sbb
sbb
dec
jg
mov
gs
insl
gs
push
gs
jbe
outsb
je
sti
int
xor
jbe
inc
imul
and
ja
inc
push
xor
push
inc
imul
jne
jo
inc
bound
push
je
imul
pop
sti
outsl
pushl
push
dec
jne
je
inc
jns
fsubrl
imul
shr
out
fcmovb
jbe
fcoms
pop
lahf
std
out
jl
imul
outsl
arpl
outsl
mov
enter
arpl
popa
fs
imul
outsb
in
mov
sbb
inc
insl
pop
mov
popa
insb
push
test
outsl
outsb
sub
mov
push
imul
sbb
outsb
insb
in
mov
push
jb
inc
fs
jae
jo
add
gs
popa
outsb
fs
xchg
push
jb
je
outsl
insb
cmpsb
inc
lret
sub
dec
pop
mov
cs
sete
outsb
dec
dec
inc
js
gs
je
fildl
push
or
dec
push
mov
add
and
bound
inc
outsl
dec
sub
imul
jb
insb
movsb
push
rorb
sub
inc
int3
sub
inc
sub
jo
lcall
pop
jl
das
retw
int3
adcl
push
mov
in
push
aaa
sub
insl
xor
mov
sbb
repnz
popa
repnz
lds
cmpsb
popa
xlat
inc
push
je
fstl
mov
push
push
jns
pop
xor
push
xchg
inc
outsb
push
cmp
in
pusha
adc
cmpl
inc
inc
shlb
pop
fs
sub
je
dec
ret
in
add
test
outsb
arpl
popa
add
push
lea
insb
addr16
push
mov
iret
rcrb
popa
addr16
je
and
lds
push
mov
jp
sub
lret
push
loopne
push
js
adc
mov
insl
mov
or
dec
jb
push
out
xor
lcall
cli
cmpsb
imul
outsb
lret
sub
push
push
imul
lock
inc
cli
popa
aaa
imul
scas
or
jle
enter
sbb
movsl
je
dec
jae
push
lods
lret
push
dec
and
inc
cli
xor
movsl
sub
popa
push
rcrl
adc
sarl
xchg
cmp
xchg
push
jns
insl
push
pop
xor
cltd
jae
inc
ss
mov
jo
jnp
addr16
inc
sbb
inc
cwtl
sub
addr16
imul
and
or
sbb
push
push
inc
sbb
inc
cmp
cmp
push
mov
ret
es
data16
clc
xor
gs
outsw
xor
mov
mov
mov
push
dec
push
outsl
dec
xor
cmp
or
jns
dec
mov
sub
iret
cmpsl
push
mov
push
pusha
addl
xchg
and
sub
inc
push
aaa
stos
xchg
loopne
roll
or
rorl
arpl
aam
add
pop
out
mov
faddp
xchg
sub
mov
clc
and
jno
shlb
xor
daa
cmpl
cwtl
subl
jae
aas
repnz
bound
int
sub
push
mov
pop
mov
push
daa
pop
or
push
sbb
add
or
test
cs
inc
cld
rolb
outsl
imul
aaa
or
pop
mov
mov
insb
inc
jb
push
out
and
adc
push
xor
jo
mov
shrb
je
xbegin
add
or
stos
lods
inc
clc
rcrb
cmpsl
enter
dec
fsubl
daa
imulb
push
fldt
push
push
dec
dec
inc
inc
sbb
aad
and
add
add
pop
or
xchg
outsl
ja
test
mov
in
add
sub
cmp
and
mov
inc
jne
addb
inc
jle
sbb
mov
mov
test
and
roll
xor
mov
mov
pop
std
mov
or
cltd
dec
scas
mov
add
gs
ret
jno
mov
sub
cmpsl
dec
lcall
push
jns
insb
je
cmpsb
jl
and
int3
add
fsubs
adcl
insl
mov
je
outsb
loope
push
fwait
cmp
jns
popf
mov
out
jle
lods
sbb
mov
outsb
push
xor
bound
cmp
mov
jecxz
loop
pop
lcall
mov
dec
bound
ss
aam
dec
outsb
sbb
ret
out
cmp
push
and
push
hlt
sbb
lods
bound
jae
bound
mov
inc
imul
aaa
pop
bound
sub
fidivrs
sbb
push
jo
insb
jae
mov
in
and
push
xor
and
daa
inc
shlb
insb
mov
inc
pop
je
cwtl
pop
pop
push
pushf
pop
shll
aaa
or
dec
arpl
and
xor
push
jbe
inc
jae
enter
repnz
push
fs
test
and
ret
outsl
cmp
inc
jb
jns
jg
popaw
mov
sub
shlb
lock
jle
sarb
push
jae
jne
dec
dec
movl
xor
push
cmpsb
push
das
roll
adcb
push
xor
add
add
xchg
mov
mov
or
push
fisubrl
in
jae
je
repz
push
popa
roll
push
in
jo
mov
sbb
aaa
cwtl
and
insb
rclb
sbb
inc
inc
lds
jp
sbb
jne
jae
push
jecxz
daa
in
cwtl
jae
jno
jno
cltd
arpl
cmp
cmp
cmp
inc
push
mov
sub
cmp
add
jp
aaa
pop
cwtl
add
sahf
hlt
les
push
sub
cmpsl
mov
inc
shrb
inc
aaa
xchg
jno
mov
jno
das
pop
dec
insl
and
shlb
mov
push
jae
push
pop
ret
dec
ljmp
dec
mov
ss
cmp
in
dec
es
mov
mov
dec
push
outsb
insl
inc
mov
out
xor
mov
sbb
push
js
and
sahf
jnp
dec
and
push
pop
loop
mov
rcll
jmp
push
bound
xor
jge
jne
pushw
dec
push
mov
shll
cmpsl
sbb
repnz
js
or
fdivs
je
mov
inc
scas
mov
xchg
cmpsl
lret
repnz
push
pop
fcmovnbe
sbb
cli
inc
xchg
jo
clc
dec
fyl2x
cwtl
ljmp
movb
xor
imul
mov
out
pop
pusha
xor
pop
fcomps
in
mov
mov
das
lods
fdivl
out
mov
inc
cmp
data16
gs
movsl
inc
fmuls
mov
add
inc
xlat
cltd
testl
add
jae
hlt
popf
pusha
mov
insb
sub
ss
xchg
aas
jo
nop
mov
jl
test
xor
inc
dec
pop
and
or
jne
bound
sahf
mov
rcrl
pop
inc
inc
repnz
inc
and
xchg
es
pop
push
test
hlt
into
push
test
mov
sbb
cmp
push
inc
imul
ret
inc
aas
inc
js
cmp
push
xor
jo
add
pop
orb
outsl
inc
pop
dec
adcb
popa
push
mov
daa
cmp
filds
sub
or
popf
add
decl
push
je
add
add
cmp
loopne
mov
std
add
add
add
data16
into
daa
fisubrs
push
adc
add
sti
and
add
push
sbb
popl
cmp
mov
mov
add
or
adc
pop
loope
mov
push
loopne
dec
pop
bound
insl
jae,pn
sbb
test
mov
and
inc
mov
ljmp
sbb
cwtl
add
inc
sahf
insb
jae
sarb
add
mov
rcrb
cmp
invd
lock
fisubrs
inc
mov
sahf
jae
leave
push
xor
push
ja
ds
dec
js
dec
aaa
and
das
dec
adc
add
xchg
and
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
add
inc
inc
add
rolb
