sub
push
mov
int
adc
xchg
stos
pop
addr16
fwait
cwtl
xchg
dec
out
mov
cmp
loop
mov
or
sub
cmp
fcompl
repnz
cs
adc
call
insl
mov
push
pop
mulb
push
test
adc
adc
test
cmp
and
inc
fildll
push
iret
fidivrs
mov
mov
add
xchg
xchg
pop
out
mov
shrb
in
dec
push
into
adc
fbstp
cli
mov
adc
cmp
xchg
cmpsb
aas
lret
imul
mov
aaa
mov
movsb
push
xor
in
stc
xor
call
mov
pop
aam
mov
std
xchg
icebp
cmpsl
outsb
jno
push
pop
push
or
mov
or
pop
test
adc
scas
addb
pop
popf
subl
nop
jne
sub
idivl
mov
movl
jnp
lock
mov
adc
sbb
jmp
mov
les
and
push
fstps
ret
jne
mov
stc
sub
add
bound
addr16
scas
fnstenv
dec
test
stos
sbbl
pop
add
mov
mov
les
and
fnstsw
mov
je
jmp
cmp
pop
lods
pop
xor
sahf
out
jbe
ficoms
mov
dec
push
repnz
adc
mov
pusha
js,pt
cmpsb
mov
addr16
ds
out
lock
pop
scas
xor
xor
shr
jae
dec
xor
lahf
lods
cmp
inc
dec
mov
sbb
mov
mov
pop
mov
sbb
or
and
sub
xchg
imul
xchg
add
lods
out
gs
fstps
lret
dec
mov
sbb
sbb
and
push
cmc
insb
into
test
filds
addr16
popa
aam
and
xchg
lahf
and
adc
mov
aas
mov
lea
and
aam
ret
cmpl
iret
lret
sti
stos
and
dec
test
popf
icebp
pop
pop
inc
mov
pop
mov
sub
push
mov
and
movl
jge
or
mov
add
out
xor
or
pusha
popf
push
jge
pop
pusha
je
push
xor
sub
jo
inc
pusha
lods
les
sub
dec
cs
xchg
int
mul
scas
sbb
mov
sub
lds
lret
je
cmc
dec
adc
rcr
call
es
mov
mov
add
iret
aam
push
adcl
adc
ljmp
pop
push
loopne
xchg
pop
push
mov
mov
sbb
inc
and
mov
ror
hlt
push
cmc
cmp
fimull
xor
das
push
jecxz
jg
out
sub
adc
and
push
adc
movsb
mov
mov
sub
pop
xor
sbb
jb
and
and
xchg
xor
div
cmp
aaa
scas
xor
in
pop
stc
in
js
add
or
dec
xor
out
dec
xor
push
lds
stc
cmp
and
aam
xor
jb
xor
in
rclb
push
cs
xchg
xchg
mov
clc
or
int3
sahf
cmp
jg
push
mov
dec
mov
enter
pop
out
das
push
mov
dec
push
es
cmp
es
ja
cli
push
sub
mov
dec
jmp
jecxz
jge
sub
cmpb
dec
imul
ret
sahf
rcrb
mov
dec
mov
jnp
xlat
js
xchg
popf
aam
jnp
loope
jge
ss
pushw
lcall
cwtl
xchg
cmp
call
loopne
pop
loope
aas
cltd
add
sahf
sub
xor
mov
push
mov
cwtl
inc
inc
negb
mov
lods
sub
jg
ja
mov
outsb
sarb
add
das
adc
je
pop
cltd
fnstenv
aas
sahf
sub
cmp
add
fbstp
fs
push
mov
inc
int3
mov
or
imul
in
out
mov
adc
fiadds
cli
or
adc
test
jns
xor
std
cmc
sti
push
repnz
andl
and
jo
mov
xor
into
popf
into
pop
sbb
xchg
mov
sti
dec
xchg
or
mov
shll
lret
sti
je
or
bound
push
cmp
mov
mov
pop
test
mov
push
sub
enterw
adc
out
add
bound
push
mov
fisttpl
adc
mov
sbb
cwtl
sbb
mov
mov
popf
fs
mov
fdivs
sti
mov
in
test
pop
inc
sbb
pop
mov
fistl
in
sub
or
insb
outsl
les
add
pop
push
adc
jmp
fstps
lock
jae
jl
bound
or
popf
sbb
mov
dec
stc
and
scas
or
pop
fnsave
movsl
xchg
mov
arpl
ret
enter
out
imul
pop
and
sub
int3
jae
jmp
push
mov
sub
scas
and
push
gs
add
mov
lods
mov
lods
pop
imul
xor
push
mov
cld
mov
push
out
jge
pop
xchg
out
and
mov
int
mov
sahf
mov
leave
stos
cmp
mov
jle
popf
stos
loope
fadds
xchg
mov
push
push
sbb
and
pop
xchg
mov
bound
repz
mov
movsb
subl
adc
push
xchg
lea
mov
sub
lret
jne
out
sbb
test
and
inc
popf
mov
push
add
mov
mov
cwtl
ret
push
out
mov
cmpsl
ljmp
inc
pop
test
aas
mov
jns
xor
stos
dec
jge
popf
rorb
xor
sbb
jo
fwait
mov
pop
movsl
andl
sti
inc
lret
push
lock
xchg
clc
sbb
xchg
pop
testl
jle
mov
xchg
icebp
bswap
mov
inc
rclb
fnstenv
fisttps
ja
dec
xor
mov
fsubrs
push
repnz
xchg
sbb
xchg
inc
insb
sbb
shl
ljmp
cmp
push
sar
insb
inc
in
jmp
mov
sbb
bound
dec
movsl
nop
sbb
mov
xor
sbb
into
mov
popf
jo
cmpsl
lret
pop
xchg
mov
roll
mov
cmp
negl
sti
lock
int3
inc
fiaddl
pop
adcb
fwait
mov
mov
cltd
aam
push
into
cltd
pop
fiaddl
loope
cmp
xor
cltd
hlt
movsb
std
hlt
mov
fnstsw
dec
sub
imul
xchg
arpl
add
adc
inc
adc
das
cmp
ffreep
add
lret
loop
push
jne
ljmp
push
ds
mov
jae
cwtl
cwtl
adc
icebp
add
dec
rorb
push
fs
or
nop
xchg
sbb
mov
push
xchg
xor
jg
in
xchg
in
xchg
lock
fldl
dec
aad
cmc
sbbl
test
push
stos
jno,pt
jae
ss
aas
test
out
mov
jmp
lods
jbe
xchg
sub
rolb
push
enter
push
adc
mov
add
outsb
cmp
ljmp
test
fidivrl
in
mov
sbb
rcl
push
mov
or
adc
jb
push
stc
ret
and
adc
idivl
fnstsw
jnp
leave
icebp
sti
and
jge
xchg
cmp
push
xchg
nop
movsb
fdivrl
imul
out
cs
sbb
mov
add
scas
or
xor
leave
sbb
fstp
cmc
stc
jge
aam
mov
add
sub
adc
test
jnp
cld
add
jno
and
arpl
ret
sbb
bswap
into
mov
push
std
sbb
xor
lods
mov
ljmp
ds
jmp
lea
cld
xchg
fdiv
test
dec
loopne
arpl
mov
pop
lret
or
leave
inc
das
xchg
es
fcmove
jne
xor
cmp
ds
pusha
adc
iret
divl
fisttpll
out
scas
cwtl
pop
lock
mov
fwait
push
cmpsl
or
dec
stc
mov
dec
clc
je
or
sbb
jg
lea
dec
mov
mov
push
arpl
jp
pop
add
rcrb
cmp
test
test
cmp
jmp
adc
imul
pop
xchg
sbb
jo
xlat
fldl
dec
cmp
cwtl
sbb
cmpsb
pop
sbb
xchg
les
jnp
repz
imul
test
cli
mov
mov
test
mov
lcall
jnp
int3
sub
mov
xor
cld
jnp
mov
ret
pop
inc
jmp
push
imul
adc
mov
out
in
outsb
das
push
xchg
fists
insb
rclb
pop
pop
sub
test
sub
cli
iret
ljmp
cmp
pop
ljmp
dec
je
ret
pop
inc
mov
adc
adc
mov
lret
test
adc
xchg
xor
xlat
pop
cmp
fimuls
or
push
or
outsl
ficoml
pop
jle
pop
xchg
mov
out
push
dec
aad
je
cmpsb
or
scas
ret
adc
or
testb
mov
xor
lahf
cmpsl
jno
xlat
jne
les
inc
sub
mov
xor
les
mov
outsb
or
insl
les
sbb
sbb
icebp
xchg
hlt
xor
les
jo
cmp
cmpsl
jp
lret
mov
jnp
jmp
jp
subl
jmp
xchg
lds
mov
xlat
mov
dec
fsubrs
push
xchg
rclb
repnz
xor
add
sub
or
sub
cmp
arpl
test
add
loopne
sub
int3
inc
sbb
addr16
stc
nop
pop
sarl
xchg
mov
repz
mov
mov
std
fisubl
aad
xchg
mov
data16
mov
or
scas
mov
je
out
jne
push
movsb
inc
pop
lahf
pop
sarl
loopne
fcmovbe
enter
in
divb
dec
ds
cmc
mov
adc
cmp
cwtl
jo
add
scas
mov
mov
push
mov
jne
leave
int3
and
cli
push
pop
adc
daa
pop
addb
jmp
mov
adc
pusha
insl
insl
sub
dec
pop
sub
inc
icebp
xchg
repnz
mov
push
add
repz
fidivrs
dec
pop
push
xor
xchg
and
lcall
outsb
jo
je
xor
lea
cs
js
in
sub
and
cwtl
mov
inc
sbb
or
xchg
js
and
int3
loop
out
in
ficompl
pop
mov
push
add
lock
fisubrl
stos
hlt
add
xor
add
dec
sub
aam
or
or
inc
inc
movsl
repz
cmpb
stos
js
push
outsl
adc
test
inc
adc
mov
mov
out
and
ret
fisttpll
or
outsl
or
push
in
jmp
shlb
mov
test
mov
mov
stc
ret
dec
xor
stos
dec
sbbw
into
arpl
std
shl
test
repnz
mov
xor
dec
xor
jg
imul
xorl
stos
imul
mov
frstor
cmc
enter
xchg
xchg
xlat
adc
adc
pop
adc
push
lret
popa
into
adc
sub
call
mov
rcll
add
cmp
xor
cmpsl
jp
or
popf
xchg
popa
cmpsb
stc
je
shl
sub
jecxz
in
inc
std
adc
xor
aad
cmpsb
insl
mov
adc
sub
push
aas
adc
shr
shll
jae
test
andb
test
stos
cmc
addr16
xor
mov
jge
pop
testl
add
push
xchg
test
in
movsb
add
jg
dec
and
xchg
push
addb
cmc
iret
insl
divb
pop
rol
fsubl
jmp
test
into
and
cmp
xor
shrl
xor
cmp
in
dec
or
and
inc
inc
dec
push
jae
cs
insl
rorl
jbe
adc
repnz
cmc
imul
jns
xor
rclb
sub
mov
test
neg
jbe
loop
and
dec
push
jb
test
push
shl
shlb
cmpsb
xor
jecxz
scas
mov
xchg
lock
mov
movsb
cmp
mov
fmuls
cmp
lods
in
add
pop
cmc
stos
sbb
popa
inc
mov
inc
or
pop
mov
xchg
jecxz
sub
fisubrl
andl
and
into
xor
test
into
stos
ret
push
or
and
ja
adc
sub
hlt
sahf
fdiv
lahf
pop
lcall
push
shlb
xchg
jg
cmc
rolb
inc
sbb
pop
out
dec
scas
aam
mov
imul
ss
mov
or
xchg
addr16
repnz
lock
lock
pop
lods
mov
pop
cmp
cmc
pop
xor
xchg
mov
out
push
je
adc
sub
or
stos
mov
jae
rcrl
hlt
xchg
rcl
das
adc
cmp
fwait
imul
mov
or
xchg
jecxz
leave
add
lahf
mov
pop
loope
and
mov
outsl
mov
sub
cmp
adc
jno
lds
stos
aad
fwait
hlt
cwtl
andb
pop
jle
xor
daa
xchg
xchg
popf
aad
jp
jne
push
or
or
xchg
mov
in
sahf
ss
and
sub
xor
mov
aaa
std
mov
hlt
imul
inc
jp
mov
and
cld
lret
aas
cwtl
xor
cmp
inc
pop
xor
sbb
push
cmpsb
jle
iret
lcall
dec
in
popf
pop
stos
cmpsb
dec
pop
mov
and
mov
mov
es
call
repnz
imul
scas
rcr
gs
mov
pop
pop
push
dec
data16
sbb
out
rclb
or
add
push
sub
xchg
mov
aas
xchg
and
rolb
cwtl
cmp
dec
insl
scas
icebp
cltd
rclb
cmpb
movl
fstps
dec
dec
cmp
or
and
mov
add
outsb
add
iret
mov
sarl
pop
sbb
test
or
mov
jg
out
pusha
jae
xor
jge
jnp
jmp
adc
dec
jae
mov
roll
in
outsl
jne
mov
stc
arpl
in
ficoms
loope
mov
bound
fstpt
addr16
xchg
pop
inc
insl
ds
stos
pop
adc
adc
out
cs
or
mov
cmc
pop
adc
pop
lods
in
mov
fstp
inc
aaa
and
iret
ds
mov
jmp
cltd
movsl
rol
int
lret
mov
sub
insb
mov
addr16
ja
lea
cltd
push
or
pusha
dec
and
in
out
das
adc
sbbb
fs
cmpsl
in
and
mov
mov
rcrb
bound
cmpsb
xor
pop
jg
cmp
shlb
mov
cwtl
aam
xchg
jl
js
loop
and
int3
push
addl
push
jmp
sub
sub
jmp
cltd
or
fwait
xchg
jg
jge
xchg
cmpsb
pop
addr16
in
sbb
iret
sbb
fstl
xor
out
sub
iret
inc
cmp
cmpb
inc
mov
aam
movsl
orb
nop
rcrl
into
scas
inc
push
call
lea
xor
out
xchg
stc
decb
orps
call
popa
dec
frstor
sbb
pop
mov
push
imul
mov
rcl
push
aam
pusha
xor
stos
xchg
ss
xor
scas
mov
xor
jnp
enter
mov
mov
clc
jne
fidivl
pop
pop
ss
sbb
scas
lock
fyl2x
pop
aad
fildll
jnp
stos
test
add
and
dec
mov
cmp
fwait
aas
sbb
pop
push
fmuls
outsb
xchg
lahf
mov
mov
test
jns
out
xor
leave
sub
mov
lcall
cmpsl
push
xor
adc
fwait
imul
ljmp
push
pop
stos
mov
push
push
lcall
sub
dec
jb
notl
mov
js
adc
pop
daa
lock
xchg
jb
out
out
sbbb
out
cld
and
ud2
ret
adc
popf
push
push
loope
into
push
mov
ja
mov
mov
das
pop
push
insb
sub
mov
jp
push
xor
gs
xor
add
jl
pop
mov
std
pusha
out
pop
adc
push
cmpb
pushf
push
jns
add
push
mov
pop
imul
popf
inc
call
js
aas
subl
xor
or
rcrb
arpl
or
xchg
cmp
lcall
add
int3
int
sub
mov
jnp
cmc
xchg
mov
xor
fistps
btc
pushf
leave
rorb
xchg
mov
push
cltd
push
mov
jmp
jg
fdivrl
ret
mov
lds
aaa
rcrb
jecxz
mov
adc
movsl
xchg
cltd
cmpsl
xchg
outsb
mov
stos
mov
call
fdivs
cltd
jge
mov
mov
jno
rcrl
in
insb
dec
int3
mov
icebp
shlb
and
into
xor
mov
xchg
mov
loop
cmp
int
push
sar
jmp
imul
cmp
stos
lret
test
cmpsb
push
add
sub
mov
sbb
add
mov
mov
addr16
sub
daa
pop
inc
inc
out
xor
xor
call
arpl
out
mov
outsl
ret
xor
xchg
and
test
cmpsl
cltd
xor
adc
sbb
pusha
add
pop
pushf
loop
std
dec
cmc
lahf
or
lret
int
pop
pop
popa
rcrl
and
jl
jmp
aam
mov
repnz
pop
out
mov
cld
outsl
ret
shlb
mov
in
sub
je
cwtl
jae
les
sbb
je
sub
mov
aaa
cmpsl
test
adc
call
into
out
dec
loopne
ret
test
jb
lods
push
xchg
rorb
stc
cmp
addb
push
cmp
push
cmp
mov
popf
jmp
lea
adc
popf
enter
pop
mov
xor
and
rcrl
mov
mov
sbb
sbb
pop
jnp
add
addr16
test
aas
push
pusha
stc
push
jne
add
scas
mov
push
jbe
sbbb
fwait
js
fsubl
cmp
jmp
enter
fnsave
pop
sub
lret
adc
arpl
out
mov
outsl
cli
mulb
pop
dec
daa
xchg
push
xor
mov
dec
sarl
inc
sub
fdiv
cmpsl
dec
out
outsl
ja
lret
cmp
pop
iret
nop
add
jmp
je
mov
mov
sarl
stos
xchg
out
ret
fidivs
adc
jb
cmp
push
lcall
add
lock
rcll
in
mov
jmp
mov
sub
ret
mulb
in
sub
sub
or
xlat
and
lock
ja
icebp
das
mov
pop
dec
xor
flds
add
jae
pop
aad
xlat
mov
shlb
adc
pop
push
dec
mov
mov
andl
lret
insb
iret
mov
add
mov
and
aad
and
sbb
pop
mov
jnp
enter
pop
sbb
mov
jl
rolb
fstps
pop
or
fistl
pop
and
sub
or
pop
dec
sub
mov
xor
iret
int
lock
rcr
pop
mov
xchg
jo
add
movsl
or
std
mov
cmpps
xlat
popf
outsl
dec
insb
cmp
js
je
rcrl
inc
push
imul
add
daa
nop
adc
mov
or
movsb
icebp
mov
mov
or
stc
jns
rcrb
mov
aaa
int
cltd
mov
int3
out
dec
add
fimull
cmpl
cwtl
stc
inc
cmp
jg
jo
adc
xor
in
dec
dec
and
lea
test
mov
popf
rorl
xchg
out
push
adc
jbe
dec
adc
das
test
mov
sub
nop
lea
ret
js
ret
enter
minps
lahf
ds
add
imul
sub
cmpsl
mov
and
hlt
pop
lods
pop
out
fimuls
mov
dec
jg
lds
and
jae
inc
adc
xor
pop
inc
mov
cmc
cmp
fistps
daa
push
pop
mov
push
test
fistps
sarl
xchg
xor
pop
jbe
sub
lds
in
div
sbb
lret
cltd
fidivs
push
inc
pop
or
or
mov
sti
inc
and
sahf
jnp
mov
fdivs
movsb
mov
pop
rcl
out
lods
and
mov
sub
sub
jp
cmp
cmp
int3
xor
xchg
pusha
insl
lahf
inc
movsb
add
lret
jbe
push
ret
mov
mul
fidivrl
xchg
push
leave
dec
mov
nop
ja
push
fadds
and
fisubrs
stos
popf
mov
pop
lahf
mov
sub
sbbb
cmpsl
mov
bound
inc
dec
adc
popa
push
jne
xor
sbb
or
xchg
sbb
shrl
mov
adc
adc
fnstsw
lock
scas
aad
adc
add
mov
cmp
adc
mov
shrb
mov
cmc
jne
jo
lods
and
sub
push
icebp
adc
in
cltd
lock
pop
add
jns
push
push
movsb
gs
inc
jne
mov
pop
push
jecxz
stos
in
stos
iret
jbe
pusha
mov
inc
ss
lea
dec
and
aas
outsl
out
outsl
mov
stc
pop
xlat
je
fcmovnbe
push
pop
pop
daa
jle
loop
stc
je
sub
dec
xor
pop
jns
mov
lock
add
enter
popf
sbb
mov
lods
ret
loope
popa
pop
daa
xchg
out
xor
bound
mov
hlt
js
jp
cwtl
fmuls
xchg
pop
das
mov
add
out
ss
popf
and
mov
inc
adc
jge
adc
and
popa
pop
inc
andb
clc
xchg
add
sub
jecxz
push
cmpsl
movsbl
pop
vrcpss
mov
cwtl
push
mov
xor
push
or
mov
mov
inc
mov
ret
divl
or
mov
nop
push
cltd
call
repz
test
ds
insb
push
or
dec
sar
arpl
jne
xchg
cmp
stc
nop
lods
das
test
jb
je
adc
stos
cltd
adc
dec
and
cwtl
outsb
fdecstp
dec
mov
push
xchg
mov
rsqrtps
dec
cld
sub
daa
dec
sub
and
popf
xor
sub
xchg
out
repz
pop
dec
sub
adcb
paddb
test
jmp
outsl
push
ret
sbb
add
cmp
cli
xchg
loop
js
xchg
repnz
stos
and
inc
mov
imull
mul
stc
inc
mov
dec
push
fdivs
inc
jno
shlb
test
or
iret
shll
enter
jne
xor
test
test
sbb
negb
nop
mov
add
sub
sub
jge
ljmp
sti
adc
push
push
aas
imull
adc
insb
repz
out
inc
or
stos
mulb
fdivl
cmpsl
cli
jnp
mov
xorb
xor
xchg
push
rcrb
pusha
sarb
ficoml
jecxz
mov
xchg
xchg
push
and
push
iret
subl
lret
adc
cmc
xor
or
mov
xor
or
add
mov
fwait
xor
cli
xor
scas
daa
pop
test
cmp
outsl
xchg
sub
dec
push
sub
loopne
into
jecxz
jb
xor
lods
jbe
test
lret
sbb
mov
rorb
dec
dec
add
dec
xor
clc
add
ja
mov
aas
mov
imulb
jns
add
insl
xchg
aad
jmp
movsl
sahf
push
mov
inc
add
cmp
jbe
aas
sub
ljmp
mov
imul
std
icebp
or
fists
or
jns
mov
sbb
or
bound
or
sahf
dec
filds
xchg
sub
and
dec
xlat
mov
lds
in
mov
mov
jle
aas
das
inc
cmc
mov
xor
mov
mov
jne
cmp
mov
add
sbb
pop
pop
mov
pop
loopne
fbld
adc
add
insl
lea
dec
jno
ret
add
push
sbb
mov
push
add
push
mov
sbbl
into
or
cs
lds
mov
ss
cmp
mov
cmp
mov
jae
out
ss
movsl
pop
mov
outsl
push
xchg
repz
fsubs
jp
push
repz
inc
idivl
jle
pusha
loope
mov
sub
call
inc
clc
je
xchg
dec
add
pop
rcr
pop
iret
xchg
pop
addb
jne
and
insb
adc
push
cmp
push
pop
push
into
pop
out
push
jb
je
mov
push
and
jo
fistps
inc
loopne
sbbb
imul
rcrl
inc
stos
and
sbb
dec
xor
cmpsb
jp
dec
fdiv
inc
mov
test
dec
rcll
repnz
dec
mov
mov
xchg
inc
add
cltd
pop
dec
call
scas
mull
push
jns
add
dec
sbb
fstps
xchg
jbe
xchg
or
hlt
add
xor
or
cmp
popa
push
das
jbe
push
out
lret
sub
and
stos
pop
jb
jnp
js
imul
dec
pop
inc
xor
pop
cmp
je
addr16
and
insb
mov
adc
xchg
mov
push
cmp
int3
outsb
push
mov
pop
xorl
dec
mov
lret
jbe
add
or
lcall
leave
hlt
lcall
lret
fisttps
dec
inc
mov
insb
and
outsb
fistpll
daa
jle
pop
ljmp
lds
xchg
xor
bound
mov
das
pop
negl
mov
lret
fcomi
inc
fldcw
int
xor
inc
xchg
test
into
ja
mov
sti
ret
fsubs
dec
enter
aaa
sti
dec
mov
add
or
mov
mov
mov
dec
popa
xor
xchg
cmp
add
mov
shr
dec
mov
push
int3
xchg
pop
add
stos
movsb
xor
fldlg2
rcrb
mov
call
mov
xchg
stc
add
into
mov
inc
mov
in
adc
pop
ficoms
xchg
sbb
test
push
cmp
cmp
cmp
aaa
jbe
dec
loop
sub
dec
inc
and
add
adc
hlt
cld
aam
push
in
in
mov
push
fdivs
test
xchg
aas
xchg
push
nop
sti
and
ret
jmp
jp
les
jnp
mov
ss
push
jle
mov
mov
add
pop
jbe
xor
push
jl
bound
outsb
lret
and
or
hlt
cltd
cmp
adc
nop
ret
push
je
adc
rorb
outsl
call
aad
mov
push
daa
push
xor
icebp
and
mov
mov
mov
jl
sub
adc
outsl
adc
lret
pushf
cmp
add
ret
and
in
sub
lock
jge
mov
data16
loop
inc
cwtl
adc
cmp
imul
or
pusha
out
mov
into
xchg
nop
mov
shl
adc
cmc
sub
adc
rep
hlt
mov
xchg
mov
test
aas
sbb
nop
imulb
fiadds
shr
insl
test
fdivr
clc
jp
mov
ret
sbb
and
outsb
sbb
pop
add
aaa
mov
xchg
adc
loope
mov
mov
pusha
call
pavgb
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
in
.byte
test
