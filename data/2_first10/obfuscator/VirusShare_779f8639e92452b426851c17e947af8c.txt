pushf
lea
jae
jmp
pusha
pushf
mov
jmp
pusha
pusha
lea
jne
call
daa
scas
xchg
movsb
cltd
lds
pop
in
adc
test
popa
push
mov
into
dec
xor
sbb
lea
ret
xlat
gs
inc
lsl
into
add
addr16
mov
sub
cmpsb
add
pop
pop
sbb
xchg
adc
dec
addr16
icebp
das
sbb
jecxz
mov
mov
cli
rcr
setnp
inc
mov
cmc
bt
bt
pushf
cmpb
call
push
call
pop
lea
ja
call
pusha
adc
push
movl
push
jmp
ss
fdivrp
movsb
cltd
and
and
rorl
lret
xor
xchg
aas
test
addb
hlt
int
jg
jmp
imul
imul
lret
adc
shrb
pop
and
cmpsl
jne
fsubrs
mov
or
enter
and
popa
xor
jne
push
push
lea
aaa
mov
pop
ljmp
scas
movsl
iret
lods
stc
nop
stc
sub
pushf
bound
lock
clc
inc
repnz
sub
push
pop
fidivrl
mov
enter
pushf
lea
jb
clc
cmp
stc
clc
cmp
push
jmp
push
call
mov
lea
js
inc
push
inc
bt
cmpb
pusha
pusha
call
inc
cmpsl
loopne
movsb
cltd
sub
ljmp
mov
lea
sub
icebp
jle
dec
adc
fbld
aad
or
pop
push
fdivr
adcb
add
fnstenv
in
aaa
cld
ljmp
mov
sub
pop
mov
xor
and
cltd
fmuls
rclb
xlat
mov
btc
aaa
ja
jge
loope
sbb
das
jl
jae
inc
in
mov
outsb
andl
mov
lock
push
dec
cmp
jnp
push
es
xchg
cmc
push
stos
dec
push
inc
cmp
ja
dec
in
fbld
popa
movsl
jmp
mov
jnp
nop
sahf
mov
fs
add
cmp
out
lret
rol
jns
adc
js
push
dec
sub
mov
pusha
jecxz
mov
mov
js
inc
enter
les
cmc
xchg
mov
lcall
pop
sub
int
sar
bound
and
pushf
call
sub
cltd
xor
stos
addr16
and
fcomps
scas
adc
ret
shll
sbb
cmp
lahf
xchg
es
pop
lcall
xchg
cmpsb
pop
add
pop
int
xchg
or
sbb
inc
xchg
sbb
and
add
xor
fiadds
addl
cmc
mov
dec
std
movsb
cltd
xchg
inc
ja
rclb
faddl
std
mov
ret
rclb
cmp
movsb
cmp
dec
int3
rcll
fwait
and
xor
cld
in
lods
mov
stos
mov
inc
pop
pop
sbb
lds
std
js
add
test
and
cltd
jns
mov
int
repnz
mov
stos
inc
stos
iret
sbb
ja
gs
int
arpl
rcrl
push
jp
cmp
nop
dec
xchg
stc
push
stos
add
xor
mov
sahf
and
xchg
cmp
push
jecxz
shlb
dec
sbb
je
inc
dec
imul
mov
or
cmp
xchg
sbb
mov
add
mov
sub
test
test
mov
mov
std
daa
imul
icebp
pop
push
cmpsl
daa
mov
outsl
xor
mov
faddl
jno
in
or
pop
xchg
fstpt
arpl
movb
adc
sub
mov
in
inc
dec
push
les
lea
or
mov
clc
jns
mov
push
test
and
shl
and
sbb
rorl
aam
cmp
push
mov
pop
fwait
pop
add
push
call
daa
mov
shl
sbb
mov
bsf
inc
sets
mov
sbb
bsf
lea
btc
lea
sar
mov
aam
mov
pusha
call
push
call
mov
add
lret
cli
movsb
cltd
adc
xor
push
aas
mov
push
les
or
lods
jge
shlb
frstor
lret
and
daa
push
and
sbb
pop
xchg
inc
push
push
xchg
in
stc
sub
dec
loop
jge
jne
add
push
decb
imul
mov
mov
cmp
aad
push
fisttps
imul
cmp
xchg
aaa
aas
sub
mov
sti
movsb
cltd
jle
adc
cmp
pop
lcall
jne
outsb
ds
inc
mov
add
flds
pop
leave
iret
inc
pop
or
sti
rolb
xlat
loopne
dec
sbb
das
xor
or
imul
hlt
out
sub
pop
sbb
inc
add
mov
decb
pop
inc
mov
cmc
cmp
jns
rcrb
cs
arpl
nop
mov
jmp
xor
sbb
and
lock
rclb
jbe
push
inc
push
call
mov
pushf
push
call
fildll
gs
mov
jmp
pusha
lea
jne
rol
shl
mov
inc
jp
not
sub
adc
movsbw
call
fsubl
cli
movsb
cltd
ja
mov
xchg
scas
iret
fidivrl
jle
dec
icebp
sbb
mov
out
xor
aad
daa
mov
cmp
js
les
mov
push
sub
add
mov
fisubrl
jge
xor
adc
dec
scas
mov
mov
xchg
aas
xchg
shll
cltd
divl
push
js
out
clc
pop
mov
mov
mov
or
outsl
aas
jge
jle
jns
movaps
and
xsaveopt
aad
fcmovnb
shll
inc
inc
dec
test
push
insl
fcmovne
pop
loop
movsl
loopne
push
inc
ficoml
cmp
pusha
fisubrs
mov
cwtl
movsb
mov
movsb
cltd
push
lret
popf
aad
xchg
sbb
addr16
pop
testl
mov
jno
mov
lret
jl
shlb
imul
outsl
cltd
aam
lcall
sub
aad
and
sbb
push
in
std
imul
mov
imul
mov
sub
mov
scas
xor
fs
std
sbb
cmp
or
cmpsl
jb
mov
push
pop
dec
xchg
xchg
jo
cltd
jl
cmc
and
adc
adc
xor
push
repnz
and
mov
jecxz
gs
arpl
out
sbbl
movsl
inc
insl
xchg
add
inc
mov
into
fs
jbe
ja
jns
xchg
sbb
movsl
fst
pusha
imul
enter
test
test
inc
push
push
lcall
jge
popf
push
pop
add
jb
inc
mov
mov
xchg
jp
pop
xchg
xchg
adc
push
dec
inc
mov
jno
fstps
xor
adc
subl
xorl
mov
andl
andl
or
out
das
mov
jno
out
mov
into
pop
xor
inc
sti
jmp
and
mov
and
xchg
mov
sub
fstpl
add
test
out
out
mov
icebp
pop
or
test
mov
and
test
xchg
jne
mov
imul
leave
adcb
subl
adcb
popf
repnz
pop
sub
jmp
sub
std
stos
jno
jecxz
sbb
movsb
icebp
mov
pop
test
lds
mov
push
data16
fisttpll
lds
in
inc
insl
in
scas
in
cmp
lods
jno
fdivl
jno
mov
sub
xor
mov
in
sub
ret
pusha
mov
repz
pushf
sbb
mov
pop
mov
cmp
mov
mov
xchg
inc
add
mov
mov
stc
in
inc
ljmp
jbe
mov
jp
add
add
cmc
stc
repz
lds
test
xchg
mov
xor
lods
in
hlt
test
test
bound
push
add
jns
and
pop
xor
popa
and
dec
push
rorl
popa
pop
pusha
xor
jo
dec
outsl
dec
xchg
bound
and
loope
ljmp
sbb
sub
or
jg
outsb
cmpsb
jmp
dec
xchg
jns
sbb
out
inc
cltd
in
mov
push
cltd
xor
fcompl
mov
jo
lea
cwtl
shll
xchg
std
sub
xchg
mov
sub
cltd
loope,pt
inc
dec
lods
stos
call
imul
inc
imul
adc
mov
out
lds
mov
dec
or
imul
in
aad
jne
mov
dec
adc
or
sub
in
add
push
pop
xchg
leave
cmp
pop
pop
xor
imul
in
shll
jae
ljmp
jg
adc
sub
lock
daa
jns
sahf
dec
outsl
addr16
pop
ljmp
enter
pop
pusha
xchg
inc
adc
insl
mov
dec
jg
dec
into
clc
xor
shlb
and
dec
nop
mov
pop
adc
rcrl
aaa
shlb
add
push
push
popa
roll
ret
ljmp
daa
mov
inc
pop
arpl
cli
ret
sti
mov
out
jle
dec
jp
std
pop
jb
or
out
in
addr16
leave
std
pop
mov
addl
xlat
insl
dec
mov
stos
leave
push
std
adc
daa
arpl
ljmp
or
ljmp
lahf
insl
rorl
pushf
pop
jp
addr16
jmp
jecxz
decl
enter
repz
jmp
cmpsl
dec
cmp
jge
jmp
call
mov
xchg
pop
push
pop
lahf
add
pop
shlb
and
xor
jbe
pusha
mov
push
les
imul
xor
test
xchg
fs
push
out
xchg
mov
and
fnstcw
test
es
out
test
cs
out
mov
inc
or
jno
faddl
xchg
loop
cmpsl
imul
and
and
mov
arpl
cld
insb
push
imul
and
movsb
das
pop
jmp
dec
xchg
xchg
mov
xor
xchg
sub
add
inc
and
add
movsl
lds
ljmp
shlb
push
lret
fildl
test
or
in
jo
rcrl
hlt
andl
dec
int
mov
std
cli
jmp
xchg
dec
jno
xor
xchg
dec
scas
arpl
stos
jl
sbbl
gs
cs
pop
jle
dec
jl
jecxz
jle
dec
or
mov
mov
insl
dec
mov
jmp
cmp
add
xor
sub
rcr
ljmp
pop
add
mov
lock
arpl
sbb
divb
sti
xor
js
dec
in
lods
cmp
roll
cmpsb
insl
sub
and
ss
das
les
lds
sub
push
mov
inc
pop
and
xchg
and
addr16
out
stc
dec
loopne
xchg
test
and
jb
jl
mov
jo
mov
test
jne
mov
cmpsb
repz
jnp
mov
addr16
iret
notb
lods
push
insl
das
daa
push
arpl
bound
jns
repz
xor
jns
mov
dec
jne
dec
aaa
aam
sub
sub
or
sbb
nop
rcll
in
push
fimull
std
or
jae
mov
stos
movsb
popa
jmp
pop
mov
jle
out
mov
xor
jmp
jl
fldcw
arpl
leave
jnp
add
call
xlat
insl
movsl
jo
popf
orl
pop
adc
imul
mov
cli
test
test
inc
mov
je
inc
jae
gs
insb
je
iret
leave
xchg
jp
push
mov
movsl
sbb
push
or
pop
mov
mov
xor
movsb
cli
inc
and
mov
insb
xor
or
pop
push
sub
pop
ss
es
addl
cmpsb
pop
test
or
dec
stos
xchg
push
jo
and
pop
jg
push
xor
xchg
aad
loopne
cltd
movsb
xchg
sahf
and
mov
imul
and
dec
sti
bound
std
cmpsl
popa
sbb
in
dec
mov
daa
test
mov
xchg
and
leave
xlat
xchg
in
push
rorl
imul
sahf
nop
mov
lahf
insl
push
movsl
out
cltd
std
ljmp
stos
test
mov
ret
int
cmpsb
data16
cmp
rcrb
repz
hlt
pop
les
push
xchg
je
mov
inc
aas
jb
cmp
add
ror
in
mov
mov
inc
icebp
sub
and
cld
cli
add
pop
sub
pusha
and
test
es
push
jl
in
insl
dec
xor
and
in
leave
cmp
stc
inc
inc
xchg
or
cmp
std
cwtl
testb
sub
pop
mov
andb
mov
icebp
xor
push
in
fucomip
imul
cld
aam
sub
js
data16
mov
dec
filds
sbb
scas
xor
bound
sub
jecxz
orl
repz
cmp
sbb
rol
cmp
xchg
cltd
pop
test
std
xchg
xor
inc
test
in
jno
sub
xchg
loop
dec
leave
xchg
inc
mov
andl
push
push
mov
lea
or
les
sahf
dec
xor
mov
inc
mov
xor
push
xor
cmc
xor
mov
test
mov
mov
ds
adc
push
xor
outsl
or
or
cltd
push
pop
rcrl
xor
mov
cmc
mov
lahf
gs
mov
mov
stos
xor
sub
add
xlat
jle
xor
lea
xchg
xchg
outsb
and
addw
pop
mov
daa
shll
test
outsb
jmp
mov
xchg
inc
shlb
mov
cmp
mov
cmp
arpl
psubb
cld
jno
xor
mov
mov
add
imul
lea
add
sbb
mov
cmp
ljmp
and
pop
sub
adc
repz
and
lcall
jns
xor
sti
shr
push
sub
pcmpgtw
loopne
xor
loope
dec
outsl
loope
add
sub
pop
callw
push
call
push
stos
jno
dec
fidivrl
dec
mov
mov
imul
cld
and
jo
cmp
adc
icebp
sub
cmpsb
incb
int
iret
mov
and
jecxz
mov
add
add
mov
das
and
es
dec
and
add
mov
mov
mov
scas
inc
sub
movsl
inc
in
adc
mov
lea
ss
imul
push
jb
cmpsl
push
xor
push
mov
subb
leave
cmpsl
andl
sub
pop
push
mov
add
dec
repz
add
cmpsl
jecxz
xchg
stos
test
jns
push
shl
dec
leave
negb
push
stos
in
lock
sti
fs
ds
sub
xor
aam
stos
icebp
mov
aas
mov
xor
loope
lods
outsb
mov
inc
stc
sbb
or
push
mov
scas
out
gs
arpl
out
inc
push
cmp
push
xor
out
mov
movsl
cld
ss
pop
jb
sbb
jge
push
cmpsl
push
icebp
out
mov
inc
xchg
push
outsl
in
ret
cmp
xchg
jns
icebp
int3
jecxz
inc
mov
mov
movsl
inc
std
and
or
xchg
loope
lods
test
shl
fucomip
repnz
and
push
cmp
cmp
std
in
and
adc
orb
lock
push
movsl
loope
loope
sti
daa
sbbl
lcall
sub
idivl
pop
add
sub
lea
std
push
leave
repz
mov
test
xchg
mov
in
int3
and
les
add
gs
icebp
push
mov
enter
add
icebp
adc
dec
subl
mov
jl
mov
push
fbld
push
ss
cli
sbb
jle
daa
stos
or
inc
add
lock
and
inc
ja
mov
repz
pop
cmp
pop
cld
decb
data16
pop
and
aas
fsubl
pop
mov
subl
ret
inc
pop
sub
test
and
xor
sub
sub
fdivr
push
stc
fs
jmp
orl
mov
scas
mov
in
jb
and
aad
xchg
dec
stc
cmpsb
leave
shlb
repz
and
mov
sub
fldenv
dec
sbb
outsb
mov
pop
push
dec
pop
adcl
bound
fnsave
mov
pop
xor
roll
repnz
inc
push
je
mov
fsubl
mov
dec
xor
sbb
mov
imul
or
jmp
jge
ljmp
std
pop
movsl
xchg
xor
out
mov
rep
push
mov
or
loop
repnz
xchg
das
out
test
xor
xchg
dec
leave
loopne
adc
lods
jo
cld
rcrb
mov
cltd
mov
mov
adc
sub
ja
mov
jg
fucomp
jp
adc
xor
outsl
jmp
mov
aam
shl
test
jno
popl
mov
cmp
int
jnp
dec
fiaddl
xchg
loop
dec
inc
push
inc
and
shll
jnp
mov
cmp
xor
lea
push
pop
jns
stos
mov
xor
add
or
or
in
or
xlat
cld
scas
xor
out
xor
inc
in
loope
scas
xlat
jo
push
loope
scas
imul
mov
fwait
pop
sbb
cltd
xchg
in
stos
jmp
mov
enter
imul
js
sub
stos
push
xchg
andb
fldenv
popf
mov
cs
imull
aam
pop
imul
and
inc
mov
enter
aad
xchg
inc
mov
fs
enter
leave
jne
lret
push
inc
ja
fcmovne
pop
enter
cmp
xlat
lea
test
mov
cmp
aad
loope
xchg
stc
jbe
arpl
insl
cmp
dec
pop
int
jg
mov
push
jns
movsb
xchg
jle
xor
dec
xchg
negb
testb
jge
daa
push
testl
fsubrp
or
rcll
stc
fwait
dec
je
sub
jge
pop
fld1
mov
lea
in
add
cmp
cmc
divl
mov
jae
ds
sbb
lods
mov
lea
out
dec
cmp
shr
jb
test
loop
fs
fxch
and
inc
sub
or
cmp
out
jmp
dec
insb
push
jp
ret
test
dec
sbb
ss
push
jo
jae
and
dec
and
xor
pop
sub
mov
in
mov
stos
mov
int3
lds
popa
test
dec
inc
add
and
push
std
aam
leave
rcrl
pop
dec
push
call
sbb
sti
mov
mov
sbb
pop
add
adc
sub
push
mov
adcl
push
cwtl
popa
jae
mov
pop
sahf
sub
adc
add
mov
popa
mov
lds
or
bound
sbb
jo
xor
call
mov
fwait
jmp
daa
mov
popa
mov
pop
mov
sahf
je
push
je
add
jno
sub
bound
fnstenv
push
dec
jb
and
bound
jno
pop
and
sbb
mov
mov
arpl
imul
pop
movsl
mov
push
mov
mov
push
addr16
pop
dec
push
insl
cmp
je
sbbb
scas
leave
je
sahf
jae
push
pop
pushf
jle
bound
or
inc
sbb
iret
jns
fsubs
enter
fs
test
dec
or
jb
fadds
movsl
cmc
movsl
arpl
sbb
pop
push
jge
test
out
mov
gs
addb
cmpsb
mov
mov
jp
mov
icebp
push
mov
and
adc
pop
outsl
outsl
jle
cmp
add
sub
fstl
imul
into
jmp
sti
daa
push
shll
xor
jae
mov
in
jo
mov
ss
loope
daa
imul
pop
xchg
jbe
daa
sub
insb
cli
mov
or
divl
mov
cmp
popa
orb
repnz
mov
je
jg
gs
loope
subl
jmp
cmpsl
and
repnz
mov
ss
xchg
dec
xrelease
add
outsb
addr16
jbe
repz
jns
or
adc
popa
fwait
push
mov
sub
std
lea
or
mov
add
mov
mov
mov
xchg
inc
je
roll
xchg
adc
xchg
sbb
xchg
push
je
out
in
dec
rcll
sbb
xlat
sub
sub
jns
inc
jbe
ret
pop
imul
ds
dec
loope
je
inc
and
jge
ret
dec
jae
adcl
mov
stc
fld
pusha
into
mov
sahf
pop
icebp
add
dec
jns
mov
imul
pop
xor
inc
mov
ret
fdivs
shll
jge
pop
sbb
push
cltd
sti
divl
and
mov
lods
inc
sbb
addb
popf
arpl
mov
div
call
insl
sub
imul
lods
repnz
dec
sub
sti
into
pop
sar
ror
mov
xor
mov
mov
loope
test
xor
and
pushf
into
adc
je
int
cmc
xchg
movsl
jae
fdivr
loopne
adc
jmp
mov
les
cmp
jmp
sahf
pop
sbb
fnstcw
fdivl
imul
ret
pop
mov
js
pop
sub
mov
adc
push
add
js
jns
je
sub
repnz
add
ret
leave
stc
mov
in
icebp
jns
jmp
insl
mov
lods
inc
or
arpl
bound
and
lods
jle
addl
jmp
in
jns
or
les
test
rorl
hlt
or
mov
setno
je
mov
push
jecxz
ret
int3
imul
dec
je
adc
fcoml
inc
xchg
pop
loope
roll
add
enter
roll
repz
cs
aad
repnz
push
jg
loope
pop
pop
movsl
out
jo
stos
xchg
jns
and
fimuls
mov
cmp
inc
jp
xchg
dec
fdivs
nop
jb
pop
je
rcrb
xchg
jecxz
outsl
jmp
mov
insl
pushf
je
outsl
roll
je
lods
add
xchg
call
clc
sar
loop
jns
cli
jbe
je
imul
or
inc
cwtl
sub
pushf
jmp
in
mov
mov
loope
jg
adc
rcll
xchg
lret
pop
lret
sub
dec
push
push
jns
icebp
inc
cltd
jge
push
jge
jae
and
push
mov
std
and
jno
pop
insb
test
ljmp
cmp
dec
and
bound
call
and
xchg
jns
lods
icebp
fisttps
add
mov
sub
lret
jb
movsl
pop
add
jno
adc
inc
and
int
xorl
mov
mov
xor
iret
jne
mov
std
dec
aas
add
mov
lret
popa
out
repnz
pop
mov
jmp
daa
shlb
inc
dec
fwait
in
lds
jge
je
and
push
mov
add
inc
fwait
pop
clc
popa
jne
mov
std
pop
jg
lea
adc
push
shll
in
ljmp
testl
add
xchg
sar
nop
mov
repz
adc
add
xchg
leave
and
push
or
ds
push
test
shll
push
loope
fimull
xorb
ja
insb
inc
cmp
gs
popa
add
jno
bound
xchg
pop
loope
push
add
pop
inc
xchg
fiadds
and
out
sbb
push
stc
fsubl
popf
push
mov
pop
lcall
mov
shl
repnz
dec
imul
loop
xlat
xchg
addr16
faddp
sub
jmp
push
rclb
adcl
roll
call
xor
ret
jns
sub
out
add
out
scas
in
jno
shr
dec
popf
xor
scas
xor
xor
pop
insl
das
repz
addr16
fs
negl
mov
mov
int
and
gs
sar
push
popa
jae
loop
jae
idivl
mov
rolb
test
aam
xchg
xor
fisttpll
cwtl
sbb
adc
ljmp
push
shlb
icebp
pop
jae
je
cmpsl
iret
out
aad
mov
ljmp
das
icebp
or
outsl
push
dec
leave
insl
and
test
jbe
mov
xchg
bound
and
stc
call
mov
push
orl
fsubrp
hlt
mov
test
push
jge
jmp
mov
bound
iret
ficomps
lock
push
mov
mov
bound
arpl
mov
xsavec
sub
clc
bound
mov
imul
mov
dec
ds
and
in
pop
mov
subl
cmp
leave
insb
jmp
push
cmpsl
sub
dec
push
mov
add
shlb
xchg
jno
test
shl
bound
cs
repz
imul
dec
add
cli
sub
and
pop
fwait
icebp
mov
je
cmp
rcll
xor
clc
popa
sahf
leave
add
fnstenv
fisttpl
jnp
mov
cltd
jg
dec
pusha
xchg
xlat
xor
inc
mov
fwait
clc
push
bound
iret
dec
and
addr16
repnz
dec
xchg
outsl
push
xchg
test
lods
insl
xchg
fidivrs
add
mov
inc
fwait
jecxz
cmpsb
add
dec
hlt
je
incb
push
or
hlt
mov
add
pusha
xchg
mov
testb
mov
mov
mov
std
and
ljmp
in
and
loope
push
repz
dec
adc
mov
lea
add
jg
pop
test
jp
jl
das
cmp
mov
mov
popa
dec
out
dec
push
inc
mov
jnp
dec
mov
mov
es
jp
adc
sbb
push
les
in
sub
xchg
mov
and
push
adc
sub
imull
sbbl
shlb
cmp
aaa
out
adc
push
hlt
mov
inc
push
adc
mov
in
stos
sub
or
inc
mov
leave
xchg
or
or
addr16
dec
jmp
xchg
mov
movsbl
ljmp
leave
movsb
mov
ret
xchg
xchg
add
stos
mov
inc
cltd
lea
adcl
dec
add
inc
xchg
add
lea
pop
pop
imul
mov
jns
pop
leave
fbstp
sub
mov
das
aaa
in
sbb
shr
std
les
loopne
out
bound
dec
cmp
fs
jne
shld
clc
add
bt
mov
clc
pusha
test
add
bt
movzwl
sub
clc
stc
shr
and
mov
push
cmc
push
stc
add
movb
pusha
push
cmc
mov
cmp
test
push
call
sbb
cltd
cmp
jg
jp
das
insb
mov
inc
pmulhuw
sub
push
pusha
and
movsb
mov
out
call
add
mov
orb
dec
shll
xor
lods
sbb
jecxz
dec
or
xor
mov
jns
daa
lock
pop
out
dec
push
addr16
insl
pushf
and
mov
movl
call
lea
jae
call
push
call
fisttpll
je
sbb
not
mov
push
jmp
push
call
sub
fbld
aad
stc
rcrb
scas
xchg
lea
clc
adcl
call
add
pop
sbb
sub
cmpsl
or
fldcw
inc
or
and
mov
in
test
cwtl
jbe
aas
or
mov
sub
movsb
shr
repnz
adc
mov
imul
ffreep
les
xchg
pushl
xor
cwtl
push
movsb
into
fdivrl
sbb
mov
adc
int
pop
int3
push
xchg
call
pop
rcll
lea
jae
dec
shr
and
mov
adc
btc
sbb
adc
mov
sar
bts
stc
shl
mov
push
cmc
xor
jmp
pushl
lea
jne
pusha
pushf
lea
jmp
movb
lea
call
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
int
popa
call
sub
shr
pusha
call
lea
call
jns
push
pusha
push
lea
jae
clc
call
jmp
call
pushf
sub
pushf
push
pushf
pushl
lea
call
push
push
lea
jae
mov
xchg
push
not
mov
inc
inc
movb
not
mov
movb
mov
lea
call
pushf
mov
adc
push
lea
jae
push
lea
jne
jg
stos
pusha
pusha
pushf
pushf
lea
jmp
push
call
ja
ss
frstor
push
es
mov
in
pop
ret
shlb
lods
adc
push
mov
not
cmp
inc
xor
cmp
push
mov
lock
lds
lds
and
lahf
addb
imul
into
incb
add
sbb
add
pushf
call
paddusb
push
cwtl
icebp
cli
pusha
or
leave
push
xor
and
repz
pop
and
jge
rsqrtps
xlat
pusha
aaa
mov
adc
mov
int
insl
int
sbbl
push
xchg
sbbl
hlt
in
cli
pop
repz
das
jo
pop
out
cltd
jge
jae
push
std
imul
inc
and
ss
cmp
xchg
lock
icebp
shrl
rcll
push
mov
dec
add
cmp
xor
movsbw
pusha
mov
movb
test
pushf
cmc
sub
pushl
pushf
jmp
cmp
cmp
pushf
lea
jbe
pushf
mov
btc
add
shl
rol
and
call
or
rcr
movsb
cltd
pop
mov
testb
sbb
test
ror
add
daa
in
pop
cmc
loope
ds
pusha
inc
sarl
pop
sbb
push
inc
nop
les
sbb
psubw
jbe
sbb
int
ret
add
add
test
and
mov
xchg
or
mov
mov
inc
sub
or
js
movsb
into
data16
ja
xchg
push
mov
pushf
mov
lea
ja
push
sub
clc
and
add
add
shl
mov
sbb
ror
mov
pusha
repnz
pushf
call
push
call
pop
push
call
out
call
pushf
or
call
cmp
jmp
cwtl
shld
rol
xor
push
btc
bsf
neg
push
call
out
ret
movsb
cltd
out
cmc
adcl
into
ljmp
xor
xor
add
push
cmp
xor
add
shrb
loopne
nop
adc
pushf
mov
outsl
mov
cltd
inc
adc
sbb
sub
clc
movsl
sbb
or
or
std
out
mov
sbbb
add
mov
test
cmp
fxch
ljmp
mov
cmp
dec
xor
cmp
pushl
xor
pop
xchg
mov
pop
dec
push
call
mov
dec
push
call
fsubrl
int3
push
sub
dec
jge
add
movsb
cltd
sub
cli
push
jmp
mov
xchg
orl
adc
or
aam
push
cmp
mov
or
pop
fidivs
push
fisttps
xlat
in
cmp
pusha
pop
sbb
repz
sbb
push
fnstcw
scas
mov
push
stos
sar
mov
pop
or
add
or
mov
push
sbb
shll
add
mov
int
ds
sbbb
add
gs
call
jp
pusha
push
mov
lea
ja
pushf
pusha
lea
jmp
movb
mov
call
pushf
pushf
push
lea
je
movzbl
push
mov
cwtl
movsbl
bswap
setle
lea
push
call
mov
psubusw
lods
add
repz
xchg
ja
pop
push
movsl
idivb
stos
xor
nop
lea
push
pop
sbb
lock
les
scas
lods
les
add
xchg
dec
adc
mov
jge
push
or
stc
mov
fs
scas
aaa
cmp
dec
jp
pop
cmc
or
xchg
mov
and
call
mov
pop
jmp
and
jg
inc
xchg
and
mov
fadds
and
ja
sub
pusha
sar
sub
pop
pop
xor
sub
add
inc
mov
not
mov
push
repnz
push
lea
jne
lea
mov
pusha
movb
cwtl
pushl
setp
mov
pusha
not
lahf
lea
jmp
inc
ror
mov
jmp
call
bt
pushf
pushf
mov
xor
bt
shr
mov
movb
clc
push
sub
call
add
or
sbb
or
pop
rorl
add
add
jmp
push
call
loop
dec
test
movsb
cltd
ret
gs
cwtl
popf
cmp
decl
sbb
push
ret
shrb
lcall
ds
insl
xchg
cmp
shl
test
mov
mov
xchg
pop
xor
sbbb
pushf
popa
test
add
push
mov
pushf
mov
pusha
mov
jmp
push
call
mov
and
fadds
add
jnp
add
dec
mov
movsb
cltd
aaa
jecxz
addb
sub
adc
imul
mov
ja
nop
repnz
mov
shlb
and
fildl
adc
inc
cmp
or
test
test
insb
stos
mov
adc
push
mov
adc
cltd
inc
rcrl
addr16
jle
lds
lret
arpl
loop
push
imul
les
add
shr
bswap
mov
test
bt
test
cmp
cmpsb
pusha
lea
ja
push
pushf
lea
jb
cmc
call
xor
movsb
cltd
insl
mov
pop
in
insl
sbb
or
xor
bound
sub
outsl
add
add
jnp
push
mov
sub
decl
xor
push
add
mov
fs
jne
cld
push
cld
pushl
popf
pusha
movb
movw
mov
lea
jmp
push
call
cs
rcl
neg
movzbw
mov
pusha
jmp
test
pusha
call
push
call
stc
jecxz
add
lea
jae
mov
pushf
mov
mov
setb
pusha
setnp
inc
seto
setae
not
call
dec
aas
js
movsb
cltd
lds
ja
lock
lahf
dec
xor
outsb
push
jmp
sbb
pop
in
jnp
dec
nop
test
jle
out
jg
xchg
stos
mov
sbbl
dec
movsl
cmp
pusha
pop
stos
iret
jmp
cld
dec
xchg
xor
addl
or
lret
neg
aam
cltd
and
or
sbbl
pusha
pop
data16
and
sub
sahf
fwait
cmp
in
sahf
xor
loop
stos
cmp
inc
loopne
repz
mull
jno
sbb
lcall
fcomip
push
testb
mov
aam
cltd
repz
sti
movsb
mov
mov
cwtl
mov
dec
xchg
bound
lcall
or
cmp
sbb
dec
fildl
int3
pop
scas
xor
cld
xchg
or
xchg
int3
cmp
ja
imul
rcrb
or
ss
arpl
in
jnp
push
adc
xchg
mov
sbb
aaa
adc
sbb
hlt
adc
mov
pushf
shrb
je
shll
xchg
sub
aam
adc
xor
pop
pop
mov
jae
adc
dec
cs
lahf
ret
imul
jne
or
lea
pop
lahf
push
fldl
insb
xchg
sbb
mov
movb
call
and
bt
add
cmc
bt
push
cmp
pushl
pusha
lea
jb
pushf
stc
cmc
cmp
pushf
mov
lea
jae
shr
shr
not
inc
mov
jmp
into
cmpsb
shll
or
js
sub
loope
and
add
aad
aad
adc
popa
out
push
iret
mov
enter
in
movl
or
adc
ljmp
subb
daa
mov
or
cwtl
push
push
dec
and
hlt
cld
mov
stos
and
pop
sti
cmp
ret
cmp
outsl
das
insb
xor
xchg
testb
lea
jne
xor
pushf
movzbw
mov
test
cmp
add
bt
movzwl
shr
shl
mov
stc
stc
add
clc
call
lea
jne
stc
popf
push
lea
jmp
sub
test
jmp
sbb
out
movsb
cltd
xor
hlt
or
and
xchg
pop
xchg
arpl
stos
push
ret
shlb
frstor
jae
movsl
push
sbb
aam
xchg
jb
add
adc
mov
jl
psrlw
adc
sub
add
jge
mov
sub
sbb
fsubp
push
arpl
adc
xchg
fistpll
sbb
into
and
icebp
mov
jbe
mov
pusha
mov
inc
and
pushf
pushl
pushf
pushl
ret
add
and
movsb
cltd
bound
imul
add
sbb
movsb
jmp
inc
mov
cmp
arpl
in
iret
push
call
sbb
ja
cmp
pop
mov
jl
xchg
fistl
jae
jecxz
jmp
repz
imul
cmpsb
lcall
push
adc
bound
add
test
cmp
neg
push
dec
cmp
cmp
not
push
jmp
push
call
notb
popa
movsl
test
jne
arpl
sbb
arpl
insl
jecxz
popf
insl
mov
add
or
dec
stos
enter
mov
outsb
push
lret
and
pusha
cltd
jo
fs
mov
add
or
leave
xchg
push
movsb
rcrb
dec
inc
inc
and
and
jge
cltd
loop
aad
and
jp
xor
icebp
cltd
mov
mov
arpl
dec
imul
out
stos
data16
leave
adc
inc
outsl
lret
gs
jmp
popa
test
in
push
mov
pusha
jg
lcall
sbb
mov
mov
scas
jns
mov
in
in
test
int
jo
in
sbb
xchg
testl
loop
jmp
mov
sub
or
and
cmp
jno
icebp
iret
jae
add
in
hlt
fs
jo
jo
jae
arpl
mov
and
xchg
jns
mov
jge
lea
jns
jnp
and
fdivs
icebp
jg
xchg
arpl
cmp
pop
mov
push
loope
jge
jmp
in
pop
out
and
pusha
aad
ss
bound
dec
mov
jns
loopne
fldcw
mov
icebp
adc
pop
push
test
ss
mov
xor
arpl
and
xor
dec
xor
mov
dec
add
loope
lret
bound
push
jge
add
cmp
movsl
cmpsl
xchg
pusha
aaa
mov
rolb
fidivrl
loope
mov
fdivrl
xor
pop
and
fdivrl
dec
lods
and
mov
aas
les
push
fmull
ret
test
ret
movsl
popf
and
aad
xchg
ss
pushf
sahf
lret
mov
leavew
movsl
sbbb
inc
movsb
dec
mov
sbb
mov
mov
jne
dec
mov
mov
insl
jp
out
pop
pushf
imul
outsb
in
dec
mov
and
icebp
outsl
dec
adc
data16
pop
bound
add
lret
jge
sub
xor
jbe
add
cltd
sub
sub
sub
xorl
mov
xor
mov
mov
imul
dec
jno
int
adc
mov
or
or
movsl
or
out
test
lods
or
imul
mov
mov
imul
mov
dec
jno
rol
push
mov
lds
mov
lods
add
imul
aad
push
mov
pop
mov
out
pop
loope
movsl
pop
in
lds
bound
shlw
bound
je
lds
and
movsl
imul
jmp
jge
mov
and
jl
jp
and
test
jb
jns
insb
dec
fldenv
sub
inc
mov
mov
test
mov
sbb
lea
jne
jno
bound
mov
mov
imul
sbb
sub
xorl
frstor
cmpsb
and
aaa
inc
add
popa
roll
mov
fimull
mov
daa
jbe
popl
pop
jmp
popf
orb
dec
js
mov
pop
in
mov
gs
cmc
lret
enter
sbbl
pushw
xchg
imul
repz
popf
stos
popf
movsb
mov
mov
mov
mov
and
push
and
and
call
cltd
cmp
movsb
lahf
or
repz
cltd
mov
insl
and
xor
test
xchg
xchg
mov
xor
mov
lret
jne
inc
xchg
ljmp
and
sbb
pop
jb
std
lods
rorl
push
and
movsl
sbb
pusha
aad
jl
jmp
arpl
out
vpcmpgtw
mov
test
cmp
popl
ret
jae
dec
out
arpl
outsl
pop
jmp
std
bound
dec
add
loope
loope
popf
shll
bound
jne
cltd
sub
in
insl
push
in
push
dec
mov
push
jo
cld
and
xor
add
push
inc
ljmp
cmp
mov
pop
inc
sub
jl
clc
mov
stc
inc
cmpsb
loope
outsl
push
stos
pop
jo
push
pushl
test
sub
test
aad
mov
in
psubusw
in
dec
fisubrs
and
das
sar
cmpl
sbb
dec
int
stc
jns
pop
arpl
js,pn
aas
outsb
pusha
popf
jnp
shr
xor
pusha
xchg
mov
lahf
hlt
pop
cmp
pop
in
add
mov
pop
call
rcrl
dec
push
add
push
in
callw
imul
std
in
pop
dec
mov
iret
push
cli
mov
mov
ja
mov
sub
ljmp
lcall
pop
popa
addr16
out
mov
and
ret
bound
repnz
scas
stos
jae
lock
jbe
bound
dec
jo
cmpsb
adc
gs
pop
push
pop
sub
or
lods
jns
ret
push
test
push
cmc
xchg
arpl
dec
dec
addr16
push
pop
lahf
leave
pushf
call
sub
pop
arpl
mov
sub
repz
in
js
pop
ss
mov
add
inc
fists
push
xorb
out
sbb
pop
jo
sbb
loop
leave
mov
jbe
test
bound
nop
or
popl
mov
adc
xchg
shl
loop
cmp
lea
outsb
mov
das
sbb
jge
and
leave
push
push
loop
inc
add
repnz
dec
xchg
ss
mov
push
test
popf
fwait
sub
cmc
aad
inc
add
mov
cmp
roll
dec
fucomip
leave
ljmp
arpl
mov
lea
jo
dec
stos
loopne
test
inc
pop
push
dec
or
lcall
and
dec
ret
push
push
and
lcall
push
out
xchg
ret
sub
jnp
push
mov
jmp
loopne
mov
rorb
cmpsl
xchg
sarb
add
lea
loop
outsl
jne
xorl
xchg
and
pop
and
sub
push
cmp
pop
int
jbe
repnz
xchg
jns
jae
mov
addl
add
sub
js
dec
lods
mov
hlt
mov
pusha
dec
sbb
inc
mov
add
loop
dec
jl
cmpsb
daa
test
pop
push
pop
icebp
ret
repnz
fisttpl
stos
mov
mov
mov
stos
sbb
sbb
les
push
in
into
jae
xchg
inc
pop
andl
pop
xchg
push
stc
push
pop
inc
out
push
dec
push
rcrb
sub
leave
pop
adc
icebp
movsl
test
movsl
pop
add
cltd
sub
aaa
out
insl
inc
add
lds
clc
and
mov
das
jge
xchg
daa
and
ljmp
dec
test
xor
sub
or
pop
xchg
and
dec
mov
ljmp
std
orb
push
je
arpl
cmp
leave
data16
push
fucomip
mov
adc
mov
push
pop
aaa
fisttpll
negl
enter
in
mov
in
je
popa
jmp
push
std
pop
dec
loop
shll
popl
sub
cmp
mov
pop
xlat
mov
sar
ljmp
mov
fs
pop
mov
push
iret
in
xor
or
fisubrl
sahf
mov
ljmp
notl
gs
push
jne
fcmovnb
cltd
and
imulb
mov
push
or
or
dec
lock
xchg
cmc
jbe
dec
mov
sbb
push
std
xchg
mov
push
shl
insl
loope
inc
sti
pop
xchg
push
idivb
push
jmp
das
inc
sub
mov
repz
inc
ds
jmp
frstor
mov
mov
js
jae
sarb
pop
insb
and
jmp
sti
rcll
int
call
cmp
push
mov
sbb
dec
sahf
cwtl
or
subb
mov
xor
bound
sub
loop
adc
lea
mov
push
mov
jle
xor
and
fs
call
addr16
dec
les
sbb
out
dec
mov
dec
jmp
mov
push
sbbl
xchg
ljmp
outsl
insb
inc
outsb
repz
lea
iret
inc
ret
mov
and
pop
rcrb
pop
rcrl
mov
dec
stos
imul
test
push
gs
inc
mov
mov
inc
mov
pop
and
stc
xchg
lcall
inc
addr16
sub
mov
movl
std
add
aaa
mov
stos
sub
in
leave
add
imul
dec
ljmp
adc
jbe
ret
cmp
add
mov
or
fs
icebp
inc
xchg
aaa
mov
xorl
lods
mov
jns
dec
xlat
mov
dec
cmp
mov
xor
xor
bound
in
ret
insb
imul
dec
pop
cmp
push
pop
insb
shll
or
xor
ss
lds
dec
mov
pop
mov
xor
aaa
stos
pop
lods
nop
jg
and
ret
imul
xchg
cmp
xorl
dec
dec
dec
out
shll
jne
ss
mov
or
push
movsl
punpckhdq
lret
xchg
mov
ror
in
aad
les
dec
sbb
andl
in
in
rcrl
addr16
stos
je
push
outsl
xor
xchg
aam
pop
dec
testb
sbb
pop
mov
jmp
mov
pop
mov
and
mov
nop
xor
bound
push
cmp
scas
imul
xor
cld
gs
fsubrp
gs
sti
mov
outsl
mov
mov
cld
push
jnp
adc
xor
push
and
imul
xchg
mov
add
std
xchg
cmp
jbe
nop
jl,pn
pop
and
icebp
cmpsl
jno
dec
test
hlt
xor
mov
loopne
xchg
cwtl
adc
rolb
push
fcomi
stc
test
and
outsl
pop
ret
inc
fs
outsb
inc
dec
mov
xor
cmpsb
arpl
xchg
mov
xchg
cmc
lret
pop
and
lea
hlt
pop
pop
shrb
adc
fnstsw
sbb
and
call
or
je
mov
and
cmp
sbb
or
pop
outsb
mov
cwtl
pop
add
sub
adc
clc
imul
nop
add
in
push
repz
ljmp
gs
push
ss
inc
push
mov
xchg
cmp
mov
sub
inc
xor
sbb
dec
jp
je
sub
mov
sbb
lods
or
push
addr16
fmuls
fsub
andb
dec
cmp
push
cmp
aam
jnp
cmp
cmc
jecxz
test
jne
jmp
or
loop
push
and
bound
fs
jmp
imul
inc
mov
dec
scas
add
jns
shr
push
xor
xor
loope
dec
jne
fwait
jnp
sub
jg
or
inc
bound
dec
insb
mov
jo
adc
jecxz
push
jo
lahf
popf
push
adc
jae
mov
push
ret
xorl
movsl
es
or
jae
add
repz
fsts
jmp
pop
xor
repz
shll
mov
dec
sahf
cmp
fs
out
dec
bound
loope
ffreep
lock
stc
outsl
mov
imul
dec
mov
mov
mov
sahf
mov
dec
cli
xchg
xor
fdivrs
test
mov
adc
rcll
jbe
cli
pop
xor
cwtl
dec
sub
mov
test
ds
sub
add
repnz
stos
push
mov
pop
dec
dec
add
or
cmpsl
stos
jmp
jns
jnp
and
lea
sbb
mov
insl
test
dec
xchg
pop
negl
pop
nop
je
cmp
stos
test
push
xor
adc
je
pop
pop
inc
rorl
pop
mov
and
xchg
aaa
pop
adc
sbb
or
loop
in
ljmp
clc
test
fiaddl
gs
mov
and
icebp
adc
data16
cwtl
adc
ret
and
jl
imul
popa
out
jne
add
mov
insb
loope
inc
pop
and
dec
repz
sbb
inc
mov
popf
jns
ljmp
lods
mov
jns
pop
and
jmp
push
sti
push
icebp
mov
xchg
jae
xor
subl
daa
dec
iret
lea
outsl
out
push
lods
adc
xor
inc
fnop
std
stc
xor
fs
pop
inc
lods
and
ljmp
mov
sub
popf
out
sbb
fsts
adc
jp
dec
cmp
call
push
insb
jle
gs
lock
mov
shl
push
xor
inc
aaa
mov
mov
dec
lret
push
repnz
daa
mov
adc
xchg
and
pop
dec
jne
icebp
mov
inc
jge
lcall
jae
enter
mov
out
in
pusha
mov
mov
and
push
push
repz
cmc
mov
aaa
ljmp
in
adc
lahf
push
cmp
mov
adc
arpl
int3
dec
and
sub
pop
pop
push
imul
icebp
mov
xchg
cmc
xchg
wrmsr
push
in
dec
cwtl
in
or
sub
xor
add
sub
daa
mov
in
fcoms
cli
mov
mov
adc
sbb
sbb
in
xchg
arpl
std
mov
shll
gs
cmc
arpl
dec
jge
or
imul
mov
sub
movsb
daa
cmp
pshufw
test
cmp
jl
push
dec
and
pusha
sub
dec
inc
ljmp
push
and
sbb
daa
push
divb
stc
cs
inc
std
or
lds
outsb
add
mov
inc
mov
dec
inc
pop
sub
movsl
jle
insb
mov
sahf
xor
bound
sarl
inc
je
sbb
xor
repz
mov
std
cs
cmp
stc
inc
cltd
cmp
stos
sub
leave
mov
push
shlb
sub
xchg
aad
in
cli
call
pop
bound
push
sub
sub
in
push
pop
xchg
sub
shrb
dec
xchg
inc
xor
loop
aad
sarl
mov
ret
pop
push
je
out
imul
js
std
xchg
imulb
mov
out
adc
cmp
vrcpps
xor
stos
jecxz
data16
mov
push
adc
aaa
push
push
mov
stc
pop
or
adc
enter
inc
mov
shlb
sbb
adc
mov
push
mov
xchg
loop
leave
in
xchg
inc
cmp
dec
lods
lock
adc
mov
lea
mov
inc
int3
xchg
and
shrb
push
inc
mov
push
jp
or
addl
std
and
out
test
mov
ret
pop
push
inc
or
add
int
gs
sahf
jge
jmp
push
mov
sub
pusha
push
lret
popf
cmp
aaa
xor
fwait
add
leave
cmp
inc
sahf
aaa
movsl
adc
mov
mov
xor
into
inc
dec
add
fildl
in
push
sbb
call
in
mov
popf
into
jae
mov
xchg
push
mov
jecxz
push
jecxz
mov
add
dec
hlt
push
lds
sbb
dec
popf
insb
fidivrl
into
std
test
and
push
inc
insl
sbb
jno
ja
lock
add
dec
push
nop
mov
lods
lods
push
icebp
inc
add
jle
out
aad
mov
dec
jge
add
sub
cwtl
imul
inc
aad
xchg
in
js
jnp
push
cmp
leave
sbb
jno
mov
call
cmp
lret
add
in
xor
shl
dec
sbbl
imul
xor
push
inc
popf
adc
xor
das
movsb
push
in
stc
pop
xor
xchg
hlt
mov
fistps
xor
push
test
xchg
and
leave
fidivl
insl
mov
and
push
inc
out
inc
xchg
adc
adc
push
cs
pop
outsb
test
in
cmc
and
mov
test
pop
jp
int
jecxz
orb
add
addr16
bound
xchg
xchg
sti
xchg
cltd
loope
xchg
dec
sbb
mov
je
mov
lock
stc
inc
or
inc
xor
or
in
and
and
lcall
pop
and
xchg
xorl
pop
lds
rorl
xor
mov
and
push
test
out
test
mov
icebp
sub
push
xchg
test
ret
or
outsl
cmp
push
sub
imul
pop
jp
lcall
outsb
mov
je
push
js
mov
test
sub
stos
nop
jnp
adc
and
outsb
lods
sub
mov
orps
sub
adc
sub
jecxz
gs
js
inc
arpl
and
adcb
idivl
dec
or
add
mov
cld
scas
jns
mov
push
in
sub
cmpsl
mov
out
sbb
jae
dec
lds
pop
stos
lret
xchg
in
lea
mov
iret
push
cmpb
jecxz
lret
mov
mov
sub
inc
mov
sub
scas
not
test
arpl
push
jge
int
arpl
pushf
mov
fiaddl
pop
push
xchg
cmp
xchg
and
or
mov
dec
mov
mov
stos
pop
out
fmuls
test
loop
mov
or
mov
mov
xor
fldl
sbb
insb
adc
push
repz
push
fstpt
push
sub
and
or
jno
dec
test
lods
inc
jne
jl
lods
dec
jle
mov
popl
je
xchg
pop
xor
pop
mov
iret
xor
xchg
adc
in
jp
xor
and
in
xchg
aad
mov
out
ljmp
cmp
addr16
rorb
insl
xchg
adc
dec
jmp
inc
outsl
push
ss
mov
ja
and
imul
lcall
xchg
mov
test
xchg
pop
adc
incl
cwtl
adc
cmp
scas
xchg
jo
lcall
dec
push
dec
push
icebp
loopne
insl
rorl
xchg
pop
int
cmp
adc
orb
in
int3
mov
mov
mov
clc
cli
mov
or
xchg
push
and
jb
cmpsl
mov
in
mov
sub
outsl
daa
test
push
jmp
insl
bound
out
cmpsl
loop
cmc
add
adc
fnstsw
jae
sub
mov
inc
stc
pop
pusha
push
mov
xchg
and
xchg
adc
push
sub
cmp
dec
shll
dec
xchg
mov
movsb
repz
jp
cs
cmp
les
addr16
test
mov
pop
mov
imul
js
pusha
loopne
ret
mov
frstor
jmp
sbb
insb
sub
stos
and
inc
imul
dec
insl
pop
mov
and
cmpsl
inc
push
hlt
insl
mov
insl
cmp
push
arpl
repnz
lret
aas
and
mov
jno
cmp
iret
leave
inc
jp
insl
shrb
in
adcb
insb
ret
nop
arpl
add
out
je
inc
adc
shll
jbe
xchg
push
mov
movsl
xchg
cmpb
fnstsw
xchg
dec
mov
rcl
ja
rol
fwait
lods
imul
and
clc
test
outsb
loope
mulb
sbb
mov
dec
pusha
xchg
mov
mov
loope
mov
dec
jecxz
push
xchg
lret
mov
mulb
mov
aad
xor
insb
imull
mov
mov
push
cwtl
or
mov
add
out
leave
pop
jbe
push
inc
lods
bound
cld
add
cwtl
inc
mov
in
mov
or
in
and
stos
gs
pusha
mov
inc
xchg
push
push
jo
imul
sti
push
ljmp
stos
daa
fs
jae
jmp
loope
dec
jle
gs
outsb
pop
mov
jae
imul
subb
mov
fldcw
add
push
mov
pop
inc
pop
fisubs
leave
jno
call
mov
cmpsb
jno
aas
scas
push
cmp
mov
mov
mov
lret
pop
leave
cwtl
sub
jle
lds
lods
sbbb
scas
dec
mov
mov
rcr
je
mov
data16
lds
jl
in
push
bound
test
test
std
pop
out
mov
addr16
arpl
mov
cmpsl
dec
in
adc
xor
jne
cmp
xor
ja
add
int
mov
dec
dec
mov
xchg
xchg
stos
pop
sahf
xchg
cmc
cwtl
xorl
scas
pop
mov
orb
out
lcall
sub
jne
les
into
xchg
les
push
jg
cmp
ss
imul
ds
cmc
xchg
movsb
mov
and
jb
cmp
insl
sti
inc
mov
jp
mov
cltd
and
adc
xchg
add
inc
popa
outsb
std
add
stc
in
jle
imul
sbb
push
jmp
jmp
fldl
in
movb
mov
imul
adc
xor
push
xchg
gs
jle
mov
mov
and
mov
std
mov
cmp
insl
xor
adc
mov
pop
mov
ljmp
insb
inc
cmp
mov
pop
lods
xchg
xor
lock
icebp
mov
imul
ret
dec
fidivl
stc
insl
mov
test
and
rep
iret
xlat
fiaddl
sub
arpl
roll
pop
push
mov
cli
cmp
mov
lea
push
jne
andb
push
pop
movsb
sti
xor
push
mov
mov
sub
mov
sub
arpl
js
jns
dec
insl
pop
mov
aam
or
sub
imul
pusha
sbb
fidivs
add
in
sbb
mov
and
jg
test
add
or
ret
aaa
nop
fdiv
cltd
and
mov
jle
out
mov
cmpsb
dec
mov
mull
bound
imul
push
fists
xchg
cmp
push
pop
in
cmpsl
into
inc
push
outsl
xchg
add
and
mov
jne
inc
adc
add
jne
test
icebp
mov
call
jne
mov
in
dec
add
mov
lcall
and
loop
insl
push
sub
lods
repnz
sub
outsb
cmp
ljmp
jmp
js
out
insb
lds
fwait
aad
cld
loope
in
cmc
jns
push
mov
mov
pop
repnz
cmp
lahf
cmpsb
les
mov
fidivs
out
push
movsb
std
sbb
pop
imul
icebp
popf
and
sbb
push
add
xchg
scas
mov
out
jecxz
aad
loope
into
cmpsb
xchg
mov
sub
test
roll
lcall
mov
fwait
ret
and
sti
fwait
push
in
imul
pop
mov
and
inc
std
aaa
orb
pop
xor
fs
js
movb
dec
fisttps
adc
add
dec
xchg
xlat
outsb
cmc
cmc
xchg
sub
jg
in
jne
or
mov
mov
enter
negl
dec
ret
enter
or
cs
in
ret
xchg
mov
daa
loope
je
aas
pushf
jmp
jg
add
scas
xor
sahf
test
fcmovnb
xor
cmpl
pushf
jb
mov
insl
ljmp
lret
insb
xchg
sub
mov
jecxz
sub
dec
arpl
dec
lds
ret
and
xchg
sbb
cld
push
insl
repz
stc
lahf
fsubr
es
scas
jecxz
arpl
movsl
ret
out
xchg
mov
insb
je
xchg
pushf
mov
adc
fmul
add
pushf
es
jbe
xchg
pop
arpl
jnp
inc
lea
mov
aas
ret
pushf
enter
cwtl
les
mov
xor
pop
fimuls
and
dec
pop
or
add
in
cmpl
scas
jnp
jbe
aad
add
add
lcall
pop
arpl
inc
movsb
sub
insl
cltd
movsl
call
icebp
test
adc
ficoml
sti
jns
fldt
sar
into
mov
xlat
cmpl
dec
fisubrl
push
data16
ret
js
xor
or
xor
insl
scas
out
scas
in
scas
and
mov
icebp
lcall
shlb
out
mov
ret
jmp
cltd
ret
jbe
mov
enter
mov
mov
hlt
inc
dec
mov
mov
in
shll
mov
and
jge
xchg
repz
ficoml
adc
std
add
xchg
add
bound
pop
xlat
in
scas
stos
aam
and
nop
lods
pop
add
addr16
mov
jne
hlt
or
mov
xchg
sub
in
movsl
jns
jmp
and
push
das
je
aad
ret
fyl2x
and
int3
mov
cltd
sub
cli
cmp
lea
mov
dec
jo
lods
andl
xchg
sub
inc
pop
cmp
xchg
outsl
inc
jae
dec
ret
xchg
out
and
add
push
dec
bound
xchg
dec
xor
mov
xor
jle
enter
add
dec
test
mov
das
cmpsb
sub
jae
jo
es
data16
ljmp
cmpsb
lds
sub
rclb
add
push
mov
fdiv
cwtl
cmpsb
jne
cmp
aam
movsb
mov
mov
in
mov
jge
loop
fdivp
mov
pop
outsb
imulb
dec
mov
mov
jb
loop
or
dec
push
xor
sub
dec
cmpb
pusha
inc
add
add
test
mov
repnz
imul
stos
mov
dec
into
jnp
test
mov
mov
cs
jecxz
xchg
mov
gs
divb
lret
fnstcw
pop
das
xchg
icebp
add
ja
mov
outsb
xorb
mov
sbb
test
mov
mov
push
stos
cs
cmpsl
enter
mov
ljmp
mov
pop
pop
sahf
lods
out
mov
cmpsb
je
fs
xchg
jns
cmp
jbe
mov
push
add
mov
outsb
add
xor
outsb
xchg
xlat
insl
mov
outsl
scas
imul
cmp
imul
sub
in
pop
imul
aad
mov
sti
loop
mov
test
cmp
rorb
xor
jbe
hlt
lcall
fcmovne
in
insl
jp
in
mov
and
pop
mov
sbb
test
daa
mul
and
and
notl
dec
jecxz
inc
popf
aam
xchg
xor
sbb
xchg
mov
sarl
add
bound
std
imul
mov
mov
mov
xor
dec
inc
rclb
xor
testl
pusha
xchg
push
jae
lods
mov
mov
mov
mov
mov
mov
movsb
push
push
cmpsb
jp
pushf
cmp
jmp
xchg
imul
mov
fisttps
pop
jecxz
scas
pop
mov
jns
cmc
or
xorl
pop
stc
dec
dec
push
incb
sbb
in
jle
repz
js
cmp
jo
cmp
xor
shlb
xor
lcall
loope
call
movsb
outsb
andl
add
dec
aam
in
cmpsb
data16
inc
pop
mov
cli
xchg
jp
dec
lods
sub
popa
icebp
mov
jne
mov
pop
inc
add
sub
lds
fs
jge
inc
xchg
rorb
out
push
scas
lock
std
cwtl
clc
jno
cmp
dec
xchg
mov
scas
mov
or
gs
cmp
in
inc
xor
gs
je
cs
cltd
jae
xchg
pusha
leavew
jmp
movsb
mov
cmc
mov
sub
imul
mov
addb
inc
cmp
aad
mov
test
ljmp
fldl2t
adc
push
movsl
fcmove
jns
or
movsb
inc
sbbb
das
mov
cwtl
dec
xchg
pushf
in
pop
cmc
push
test
jbe
idivl
push
pop
cmc
inc
jnp
and
push
outsb
ficompl
xchg
mov
dec
test
or
adc
and
mov
shl
rol
iret
xlat
cmc
popa
int3
xchg
add
out
imul
addb
sub
andb
subb
mov
add
insl
or
je
lods
and
push
lock
xchg
orb
mov
add
xchg
lcall
test
scas
imul
or
mov
and
test
mov
add
repnz
and
pushf
fidivl
imul
arpl
lcall
aam
jge
ljmp
cld
addr16
adc
sub
inc
mov
fsubs
jne
pop
cmc
pushl
icebp
mov
jb
jno
xchg
add
out
mov
divl
out
cltd
mov
xorb
sbb
ljmp
cltd
sbb
nop
test
xor
bound
testb
jmp
imul
sub
in
xchg
sbb
into
mov
scas
addr16
and
outsl
jno
mov
stos
orl
scas
mov
out
mov
orb
mull
mov
shrl
fiadds
jne
dec
rorb
sub
dec
jmp
push
xchg
xor
or
int3
xchg
jno
imul
adc
pop
xchg
dec
adcl
int
cmpsb
lock
bound
jnp
arpl
mov
sti
cli
and
cmc
dec
mov
nop
jbe
js
shll
test
pushf
es
and
jae
rclb
addl
js
mov
xchg
lahf
test
mov
mov
jo
mov
incb
dec
cmp
or
fs
sub
jae
loop
xor
xor
fs
pop
scas
mov
in
and
xchg
sub
addr16
xlat
fisttpl
mov
arpl
iret
je
outsb
xchg
lret
sub
stos
in
pushf
mov
inc
cmpsl
or
mov
ljmp
jne
lods
neg
pop
jmp
xchg
add
jg
xchg
mov
pop
mov
pop
into
arpl
jb
scas
push
cli
pop
mov
and
movsb
mov
mov
shrb
jle
jno
imull
lock
mov
mov
neg
mov
add
cmpsl
xchg
adc
addr16
xchg
dec
and
mov
dec
xor
lods
popa
lods
rcrl
dec
loopne
pop
mov
fsubr
lock
fcoml
adc
mov
aas
std
mov
outsb
mov
push
mov
push
addl
or
push
inc
in
xchg
jp
mov
les
lods
out
push
inc
pop
icebp
inc
mov
and
push
sub
xor
decb
dec
imul
jo
pushf
sub
push
xor
push
std
mov
mov
imul
jmp
add
idivl
sub
mov
inc
je
dec
pop
test
sub
mov
das
outsb
fstp
imul
xor
add
out
xchg
cmpsb
jmp
dec
mov
cmpsw
jnp
repnz
jno
cmpsb
push
dec
fldl
leave
mov
jno
leave
lea
dec
xchg
mov
daa
lea
cmp
mov
or
mov
cmp
jns
roll
sarl
xor
fs
jns
ljmp
test
popl
mov
out
in
pop
pusha
in
les
fldcw
xor
xor
and
inc
push
repz
pushf
pushf
int
inc
push
out
mov
jmp
dec
fidivrs
xorl
xor
bt
scas
stos
cld
out
push
jmp
sbb
add
mov
aaa
jne
inc
mov
ret
pusha
movsb
scas
faddl
mov
mov
mov
aad
lock
jmp
movsb
sbb
mov
mov
mov
push
mov
sbb
and
cmp
xor
sub
stos
xor
or
in
imul
lea
sub
add
jne
jmp
mov
jecxz
imul
test
inc
xchg
mov
dec
cmp
jle
dec
dec
push
inc
pushf
movsb
jmp
jae
mov
out
outsb
add
scas
ljmp
insl
sub
aam
in
iret
dec
push
add
and
add
inc
int3
xor
jmp
test
mov
scas
xchg
fwait
aad
adc
and
adc
test
add
leave
int
mov
movsl
dec
jmp
and
jo
enter
push
lock
push
stos
in
and
dec
adc
fistpll
push
mov
fstpt
push
stos
cmpsb
hlt
lea
pop
loop
xor
lods
outsl
dec
xchg
stos
jns
into
pop
mov
sarl
gs
pop
sti
mov
adc
sub
mov
arpl
mov
scas
adc
insl
add
hlt
loope
push
pop
mov
jno
imul
dec
jecxz
jo
mov
leave
fisubs
fstl
mov
aas
sub
mov
dec
push
test
int3
sbb
or
jns
lods
dec
enter
gs
xor
testl
push
in
movsl
lock
insb
je
sti
push
adc
loopne
jnp
icebp
gs
ja
and
ljmp
mov
jns
fsubs
imul
sub
mov
int3
dec
dec
xchg
mov
mov
mov
adc
fisttpll
xchg
cli
popa
jne
mov
imul
and
dec
ret
imul
jbe
dec
aam
lods
loop
add
ret
daa
lea
out
xorl
xchg
ljmp
jo
int
jb
imul
jne
leave
pop
fisubl
jge
mov
test
lret
imul
pop
push
mov
in
cwtd
enter
je
xorl
ret
lods
shrb
arpl
jge
mov
pop
repnz
ljmp
jmp
jmp
xchg
movsb
lcall
repnz
jo
mov
aad
sarl
jl
mov
xor
mov
push
pop
push
fidivrl
fisttpll
lret
sahf
jg
in
scas
dec
xchg
cli
inc
lds
arpl
icebp
jns
sti
popf
mov
shll
mov
adc
cmc
push
leave
pop
popf
sub
cmpl
push
fmuls
xchg
pop
xchg
aad
xor
dec
xlat
sub
data16
leave
pop
dec
sub
popf
jo
dec
mov
add
jmp
cmpsl
cltd
adc
leave
dec
cltd
sbbl
cmp
lret
std
aaa
fcmovb
or
mov
pop
and
dec
jne
adc
cmpl
rorl
data16
out
cmp
cmp
jp
adc
jns
pusha
jbe
mov
mov
dec
incl
xchg
or
frstor
in
lods
cmp
dec
sbb
cltd
in
dec
mov
stos
cmp
mov
push
aam
pop
mov
mov
inc
and
leave
movsl
lods
dec
in
or
movsb
fwait
xor
pop
lret
ret
arpl
int3
or
mov
adc
cwtl
pop
push
or
insb
push
ja
mov
mov
pop
pushf
pusha
in
jo
addr16
stos
stc
fs
test
add
into
mov
insl
int3
ljmp
lret
andl
xor
sbb
in
insl
out
icebp
mov
adc
mov
mov
subl
out
lahf
lahf
mov
push
mov
in
stos
adcl
adc
xchg
adcb
jg
sti
adc
pop
mov
in
aad
dec
cmpl
xchg
mov
and
out
iret
and
les
xchg
mov
pop
sub
xchg
jge
lret
and
dec
shrb
and
stc
ljmp
or
adc
and
js
dec
jg
inc
cltd
scas
sbbl
fidivs
outsb
jno
jne
lock
lods
hlt
ss
out
mov
pop
and
stos
subb
mov
mov
mov
dec
pop
daa
cs
sbb
inc
xchg
and
repz
lcall
inc
mov
stc
adc
mov
cmpb
inc
dec
arpl
add
dec
lods
pop
inc
mov
adc
mov
popa
imul
scas
outsb
push
rorb
ror
mov
repnz
xchg
in
insb
xor
mov
rolb
and
jmp
daa
into
movsb
pop
or
mov
aaa
jne
jle
push
imul
jecxz
insb
ss
mov
ja
jecxz
and
xchg
xor
add
xchg
inc
dec
dec
xor
mov
sbb
cltd
sarl
aaa
repnz
add
mov
daa
stos
pushf
push
mov
jge
jnp
ljmp
sti
les
cmp
mov
mov
jbe
test
outsb
sub
int
add
scas
jmp
out
out
sub
xchg
add
js
cmp
hlt
jnp
mov
ret
aam
jbe
out
jecxz
mov
jae
jmp
jno
jne
cltd
dec
jge
lods
add
je
xor
mov
out
xlat
dec
jmp
sahf
jb
popf
stc
icebp
fistps
pop
mov
lods
cmpsl
jle
cmp
push
ja
push
mov
sbb
popa
add
lret
das
jbe
xchg
or
jo
adc
adc
cmpsb
add
mov
in
les
hlt
add
inc
adc
dec
add
fdivr
xor
inc
shll
fiaddl
pusha
xor
adc
dec
inc
jl
and
jae
xor
negb
mov
inc
sub
das
jae
mov
add
sbb
popl
lods
insl
adc
lahf
adc
jl
add
dec
jl
int
add
fldl
fsubl
fiadds
add
dec
fs
out
gs
leave
cmc
dec
pop
ret
cmc
dec
stos
in
stos
mov
mov
dec
inc
fidivrs
jge
sub
movsl
test
popf
loope
jnp
inc
jl
loopne
push
and
xchg
shll
fcmovnb
shl
mov
cmp
ret
lock
inc
les
aad
lods
popf
loopne
shl
je
cltd
push
roll
dec
xor
or
and
fwait
xor
mov
dec
push
xor
jo
iret
ret
or
xor
test
and
test
inc
out
nop
roll
test
inc
pop
or
push
movsl
inc
addl
push
dec
jmp
mov
dec
std
nop
or
fmuls
movsb
dec
pushf
mov
xchg
sbb
test
xchg
xor
lahf
fcmovnbe
and
and
mov
jl
jno
adc
pop
fcmovbe
jg
in
jnp
pop
sub
or
xor
movsl
push
jb
movsl
inc
call
cmpsl
push
inc
and
xchg
out
or
and
movsb
sahf
or
xchg
mov
and
jns
inc
popf
out
pop
bound
addr16
sbb
and
daa
cmp
push
idivb
js
mov
sbb
mov
push
jne
clc
fnclex
jg
push
and
push
arpl
jbe
and
and
fcomps
mov
xchg
push
scas
adc
sbb
inc
and
xchg
sbb
dec
nop
popf
pop
pop
push
jae
push
shrl
shrb
dec
mov
sti
mov
ljmp
and
add
aaa
outsl
pop
daa
jp
pop
mov
in
dec
imul
test
dec
jg
mov
mov
sub
xchg
fwait
mov
mov
fnop
pop
lock
mov
and
or
sbb
inc
pop
cwtl
xor
add
subl
lea
inc
aam
in
test
fstpl
bound
dec
pop
and
mov
arpl
mov
orl
sbb
lcall
mov
pop
mov
in
sub
push
addw
and
jnp
and
xchg
aam
mov
mov
dec
mov
mov
sub
jmp
sbbl
loopne
daa
pop
xchg
dec
cld
jo
scas
xor
sub
push
push
mov
and
ja
push
cmpsb
call
mov
cs
in
loope
inc
jg
sub
movq
int3
fldenv
pop
subl
in
out
add
test
icebp
bound
bound
push
xchg
fsub
pop
add
cmp
xchg
test
pop
jnp
cmp
out
push
mov
testb
sub
adc
jae
testb
xlat
push
mov
jne
insl
out
jae
and
xchg
push
gs
jne
nop
sub
cmpsl
mov
lcall
out
jl
xorl
lcall
adc
scas
mov
test
cmc
aam
or
mov
mov
xorb
pop
aaa
jae
test
popf
jl
inc
imul
arpl
mov
and
fnsave
inc
data16
mov
mov
test
mov
imul
xor
add
stos
call
in
hlt
mov
mov
dec
imul
xchg
xor
mov
sbb
out
data16
and
jl
lock
lods
xchg
add
pop
xorl
mov
pop
cmp
out
push
ljmp
addr16
loop
lahf
sub
iret
jmp
icebp
sbb
jbe
mov
clc
loop
mov
stc
aam
aad
aam
mov
int3
lods
push
xchg
mov
add
mov
jecxz
stc
dec
jg
stc
loop
inc
sbbl
mov
jne
bnd
mov
and
mov
inc
int
mov
jb
mov
call
stos
jns
stos
scas
dec
jp
icebp
imul
xchg
pop
mov
sub
or
and
addl
sbb
push
cmpsb
pop
sbb
jge
cmp
repnz
popf
out
or
push
enter
dec
mov
mov
mov
insl
jns
std
imul
sub
fwait
pop
inc
xchg
je
xchg
daa
dec
sub
int
adc
jb
ds
das
lods
in
in
sbb
lds
sbb
frstor
and
mov
push
sbb
mov
mov
jl
aad
les
pop
sahf
cmp
out
stos
adc
rolb
dec
xchg
iret
mov
sub
leave
mov
sarb
ss
mov
insb
lcall
in
in
sub
push
in
fwait
fs
push
or
loop
mov
inc
mov
xorl
and
mov
fsubs
and
ljmp
lock
out
jb
push
jae
jb
dec
push
cld
insb
mov
push
mov
push
int3
mov
xchg
jmp
out
and
jl
test
rcll
and
std
ret
loopne
jp
ljmp
out
xchg
mov
lods
pop
loope
pop
and
lcall
movsl
aaa
jle
leave
gs
mov
add
or
rol
sub
jns
aad
add
inc
insb
icebp
mov
dec
push
inc
add
jmp
call
insb
xchg
sbb
mov
jne
loop
pop
es
aam
pushf
popf
push
or
in
vminsd
jae
jmp
imul
in
rorb
rolb
adc
sbb
mov
jmp
int3
sub
cltd
add
push
pushf
in
pusha
cltd
add
dec
jne
imul
xor
rol
inc
mov
out
lcall
push
dec
clc
bound
push
and
jecxz
ljmp
add
pop
mov
lods
xor
xor
aad
cmc
and
xor
scas
push
cmc
test
inc
pop
dec
fadds
setg
ljmpw
je
out
xchg
mov
jmp
jmp
jno
push
adc
xor
pop
mov
aam
nop
mov
cld
icebp
or
shrb
jbe
cmp
mov
std
dec
inc
div
test
pop
insb
dec
sub
pop
push
lea
insb
adc
mov
mov
push
xchg
sub
subb
adc
add
ja
mov
mov
mov
fidivs
mov
adc
jo
push
xchg
sbb
mov
sub
jbe
xlat
cmc
faddl
fstpl
es
data16
xchg
pop
movsl
icebp
addb
stc
je
xor
mov
and
dec
sbb
popa
inc
test
jo
jecxz
stos
pusha
nop
mov
mov
dec
in
jge
pop
mov
test
push
fs
and
ret
mov
imul
mov
stos
arpl
int3
cmpsb
aas
imul
or
shl
movsl
add
inc
dec
mov
fnsave
test
fidivrl
lret
xchg
outsb
xchg
jmp
outsl
arpl
insb
xchg
imul
mov
sbb
vcvttsd2si
sub
inc
mov
mov
jns
sub
dec
clc
and
pop
push
cltd
pop
lods
sti
sti
std
xchg
pop
push
es
sub
imul
adc
add
pop
ja
dec
adc
imul
int3
pop
out
lahf
xor
xchg
adc
mov
je
push
dec
cmp
xchg
mov
outsb
ret
into
mov
mov
or
cltd
mov
leave
cmp
push
or
fcoms
or
jge
outsl
push
in
and
push
mov
pop
xor
xchg
jbe
adc
cmc
dec
lret
mov
test
mov
and
mov
orb
sbb
xchg
in
sar
shr
out
inc
scas
xlat
jbe
push
lds
add
push
add
int
sbb
add
push
sub
subl
dec
add
lret
cmp
cmp
pop
mov
xchg
call
ja
rcll
push
or
jno
mov
sbb
sahf
fs
addr16
sbb
imul
jne
rorl
and
xchg
cmpsl
and
out
mov
mov
add
pop
push
or
cmc
mov
xorl
movsl
sub
ds
test
mov
mov
cli
mov
jp
dec
nop
sub
pop
ja
shrl
add
jp
xchg
pop
cld
inc
jno
es
cmc
cmp
cmpsl
stos
add
or
pop
movsb
shlb
add
mov
xor
iret
pop
stos
jl
pop
je
add
imul
mov
xor
rolb
cmp
clc
int3
sbb
sahf
ficoms
and
pop
sbb
imul
dec
mov
and
ja
imul
mov
out
dec
pusha
pop
jo
cltd
or
mov
inc
mov
shrl
jns
loop
clc
sbb
xchg
andb
pop
je
xor
call
gs
dec
cmp
arpl
push
ss
mov
adc
loop
gs
mov
incl
mov
cmpsb
xchg
outsb
jg
imul
and
xchg
inc
pop
aas
in
rorl
test
mov
pushf
pop
test
push
jb
cld
fistl
jo
jcxz
outsb
iret
xor
mov
jns
and
xchg
add
inc
add
shlb
jno
insb
jmp
aas
in
sub
repz
stos
xor
adc
into
inc
jne
lods
mov
jns
mov
cmpsb
popa
sarl
and
dec
rcll
inc
jecxz,pn
push
mov
in
jmp
mov
push
xchg
mov
std
movsb
cmp
out
mov
test
cmc
fisttpll
mov
mov
cmpsl
sar
fnsave
insl
fnsave
imul
jb
mov
or
imull
lret
add
inc
outsb
test
ja
sbb
stos
mov
rorb
and
add
push
jl
mov
dec
jmp
fwait
icebp
jmp
loopne
xchg
mov
rclb
push
xchg
bound
or
test
add
in
lea
jbe
repz
push
mov
scas
scas
and
lds
imul
test
sarl
stos
out
ss
xor
pushf
push
imul
je
dec
repz
or
sub
in
test
aam
imul
fstpl
fs
nop
inc
test
cmpsb
inc
insb
lods
adc
cmp
dec
imul
jns
cmp
xchg
data16
push
fcoms
jp
loop
repz
movl
jno
adc
inc
loope
pop
cmp
stc
cmp
mov
xchg
test
in
mul
lea
inc
mov
movsl
gs
xchg
push
cmp
sbb
test
dec
les
stos
adc
jb
push
jb
mov
jbe
pop
mov
xchg
scas
arpl
mov
jmp
leave
imul
push
lret
fdivrs
imul
pop
sbb
dec
adc
lahf
arpl
aad
leave
sub
xorb
cmp
or
stos
lea
lds
xchg
push
insl
and
data16
push
lods
xchg
arpl
jne
aad
repz
mov
sbb
test
xor
imul
mov
js
jae
fwait
sbbl
inc
sar
push
pop
adc
mov
push
xor
xchg
imul
inc
cmp
dec
lret
cmpsb
inc
push
xchg
fnstenv
orb
insb
imul
inc
lods
ljmp
repnz
test
mov
mov
push
iret
in
xor
loop
fdivl
fwait
jne
int3
xchg
cmpsb
sbb
dec
sbb
pcmpgtw
add
pop
mov
jle
gs
sub
divb
pop
adc
adcl
test
shr
testl
jmp
lcall
shrl
xor
push
adc
mov
enter
jae
xchg
jecxz
popf
es
adc
cmp
jnp
leave
addr16
sahf
addr16
pushf
lcall
mov
bound
cltd
leave
jge
xchg
sub
jge
jg
jne
push
sti
les
dec
inc
fists
clc
mov
insb
leave
js
ljmp
dec
imul
jns
inc
aam
jae
nop
sub
push
sub
out
imul
adc
mov
and
adc
mov
dec
sarl
sub
push
xlat
clc
dec
jno
jl
test
pop
outsl
lods
xchg
into
in
clc
mov
and
fiadds
addl
mov
xchg
shrl
jb
or
imul
mov
jl
aad
cltd
or
xorl
ds
mov
jno
int
leave
xchg
in
sbb
sbb
hlt
test
jno
mov
sbbl
aad
adc
out
xchg
icebp
and
sub
jmp
mov
les
out
mov
mov
fwait
mov
data16
mov
jnp
mov
mov
push
sub
jns
sub
orl
pop
test
ret
jbe
pop
mov
mov
dec
loope
cmpsl
imulb
xor
loop
loope
enter
scas
jbe
test
repnz
aad
andb
stos
enter
xchg
mov
xor
pop
jecxz
jo
pop
xlat
fs
mov
xchg
add
and
rcr
jnp
sbb
addw
movsl
imul
call
sbb
add
aad
lods
nop
in
sarl
mov
mov
std
xchg
mov
push
jp
and
jp
test
movsl
mov
jno
in
lds
jne
jne
adc
push
adc
add
stos
repnz
mov
ja
stos
addr16
dec
sbb
sub
das
sti
loopne
insl
movsb
int
mov
jge
call
dec
in
mov
push
mov
lods
mov
call
push
sbb
sub
into
es
or
ljmp
out
divb
jle
pop
xchg
loop
add
mov
xchg
mov
mov
gs
add
in
int
sub
xchg
gs
outsl
dec
cs
push
movsb
fsubs
dec
xchg
aas
cmp
es
sub
push
or
imul
gs
mov
cmpsb
mov
mov
hlt
imul
das
xchg
adc
fidivrs
mov
jmp
test
mov
loope
movsl
lret
insl
sbb
add
fidivs
fidivl
push
dec
mov
test
xor
pop
sbb
insb
jne
in
cmp
mov
popa
fwait
push
out
imul
xchg
aam
inc
stos
xorb
sub
sub
xchg
flds
dec
inc
pop
mov
pop
jae
jle
xchg
xor
jbe
xor
xchg
dec
xchg
mov
pop
mov
roll
and
loop
ljmp
ds
hlt
sahf
cmpsb
leave
jle
leave
cmpb
pusha
xchg
leavew
xor
cmpsl
pop
mov
push
ret
icebp
xor
out
xor
out
mov
cmpsl
or
lea
ljmp
add
xchg
xchg
movsb
sub
gs
pop
cs
pop
jge
bound
inc
add
ljmp
stos
test
fs
cmp
imulb
xor
or
cmp
test
pop
adc
and
adc
cmp
movsl
jno
inc
cmc
add
mov
lahf
pushf
test
mov
mov
sbb
push
and
pop
sub
inc
dec
fsubs
ror
sbb
int3
push
in
fmull
dec
pop
pop
or
jecxz
into
in
arpl
test
cmp
push
loop
leave
jp
jb
addl
shrl
data16
push
pop
pop
mov
ljmp
jg
lret
mov
repnz
mov
rol
mov
stos
data16
push
imul
push
jp
cmpsb
insb
sbb
les
out
xor
in
data16
jno
out
leave
es
and
jne
add
jp
xchg
mov
iret
sub
cmp
in
js
bnd
mov
jmp
cmp
xchg
sbb
shl
in
stc
and
mov
test
int3
cld
ds
std
pop
jnp
xchg
fiadds
push
jge
repz
push
scas
orl
push
jp
imull
clc
dec
jl
dec
push
xor
and
mov
test
lds
repz
jne
push
mov
insb
dec
pop
cs
mov
cmp
lods
jnp
push
jne
mov
out
std
lret
push
mov
and
push
sub
shlb
jae
lret
lds
movsb
shrl
dec
scas
test
lcall
add
xchg
sub
popf
add
mov
mov
das
xchg
cmp
or
aaa
pop
pop
enter
aaa
mov
shlb
inc
dec
sub
mov
pop
fidivl
cmpsb
inc
adc
and
ds
icebp
inc
cmpsb
mov
rclb
cs
fisubs
inc
pop
daa
mov
sub
mov
xor
xor
jecxz
out
in
and
lods
aaa
jo
faddl
ljmp
mov
mov
push
nop
jle
jb
push
mov
mov
mov
daa
push
xchg
popf
jecxz
xor
insb
and
jmp
addb
xlat
shrb
jmp
mov
bound
xchg
imul
aam
fwait
jo
hlt
push
inc
push
loope
in
movsl
xor
jle
imull
mov
roll
or
and
mov
mov
sbb
and
mov
ret
daa
mov
inc
gs
imul
out
stc
jecxz
aas
xlat
sub
jo
stos
push
js
adc
cmp
xor
scas
js
imul
lahf
mov
and
sub
xchg
out
xor
or
cltd
pusha
movsl
jns
cmp
lret
sub
mov
aaa
repz
imul
rolb
lods
imul
mov
cmpsb
mov
mov
push
xor
push
into
jae
mov
les
mov
cltd
push
mov
mov
mov
mov
add
inc
inc
dec
jp
loop
add
jno
fmuls
cmc
shl
stos
jno
sbb
gs
pop
js
or
push
icebp
jge
jmp
cmp
icebp
fidivl
adc
fisubl
movsl
aad
push
ljmp
std
das
mov
inc
nop
fs
pop
push
fnsave
mov
lret
mov
daa
subb
mov
int
jne
fs
push
popa
in
mov
dec
mov
cld
adc
shl
jecxz
lds
shl
mov
inc
and
pop
in
data16
in
inc
out
cmp
mov
or
subb
jmp
inc
dec
push
lcall
jmp
jl
sub
jbe
out
insw
jmp
bound
cmc
outsb
push
jecxz
dec
xor
out
imul
and
pop
push
jne
push
scas
outsb
jmp
jge
jae
mov
sub
xchg
daa
in
lretw
dec
shll
cltd
add
mov
test
inc
out
idivb
or
mov
divl
cmc
or
gs
push
push
out
mov
insl
cmc
fldenv
mov
ror
jmp
adc
cmpsl
xchg
mov
sub
lds
jg
and
adc
movsb
in
inc
inc
data16
mov
and
fwait
dec
or
sub
sub
aad
sbbl
mov
scas
out
inc
arpl
sahf
adc
jno
lret
andl
dec
cmp
addb
icebp
scas
add
mov
lea
mov
inc
push
push
push
jno
mov
mov
mov
mov
push
imul
mov
test
test
popf
dec
jmp
ss
popf
mov
fsubl
xchg
mov
je
pop
dec
ja
in
movsb
scas
insl
add
add
xlat
clc
inc
xchg
jmp
add
mov
bound
fwait
lahf
pop
in
ja
sbb
mov
jmp
mov
dec
cmp
shr
sbb
and
mov
ret
and
jle
andl
jne
xchg
leave
add
push
loop
jg
es
sub
cwtl
xchg
shll
test
push
outsb
mov
push
mov
cmpsb
sub
or
loope
mov
pop
aas
add
imul
inc
add
std
add
and
fists
mov
loop
imul
loop
int3
mov
xor
mov
mov
nop
add
sarl
pop
cmp
inc
fs
mov
popf
jmp
dec
movsl
push
in
sub
inc
xchg
arpl
in
jno
sub
insl
dec
adc
adc
test
and
and
stos
gs
shll
sbb
int3
xor
fcomps
dec
fsubrp
push
or
stos
pop
sbb
adc
adc
inc
fdivs
test
dec
mov
jnp
pop
xlat
outsb
outsb
dec
mov
dec
jne
fdivrl
or
cli
movsb
stos
ja
mov
repnz
insb
dec
ja
jbe
push
sbb
icebp
mov
lcall
outsb
mov
mov
lea
fst
mov
mov
das
lret
push
bound
mov
pusha
or
dec
mov
test
dec
jmp
jnp
ja
pop
into
mov
sub
out
leave
sub
je
cmp
ljmp
push
gs
lahf
mov
hlt
mov
int
insl
pop
xchg
lds
std
mov
sbb
addl
cwtl
cli
popa
mov
mov
jb
je
fsubr
add
cmp
jns
push
mov
push
fs
daa
sbb
push
scas
push
sti
lahf
out
jae
dec
cmp
and
xchg
sub
fcoms
push
mov
pop
insb
add
jmp
nop
mov
mov
mov
es
idivb
push
mov
mov
mov
inc
mov
mov
popf
sub
add
or
imul
outsb
or
pop
adc
mov
mov
fdivrs
sub
xlat
jbe
in
adc
pop
arpl
sbb
int3
mov
mov
ja
jne
movsb
pushf
inc
test
cld
push
cmpsl
orb
out
jl
in
pop
arpl
lret
notb
imul
std
or
insb
inc
call
fidivrl
jae
and
icebp
add
mov
sub
insb
scas
and
scas
ret
jl
shrb
repnz
add
xchg
out
mov
cwtl
jl
shlb
test
push
inc
fdiv
mov
cwtl
mov
cmpsb
repnz
lds
fsubr
inc
in
out
out
imul
mov
and
mov
jge
ljmp
div
scas
test
mov
je
test
sub
sbb
adc
testb
push
sarl
shlb
mov
push
dec
lods
jecxz
push
in
movsl
rclb
cwtl
iret
clc
pop
cmp
call
cmp
cmp
ljmp
sahf
cltd
jae
popf
mov
test
insb
jmp
lahf
enter
sbb
leave
jae
bound
in
jbe
lods
rolb
sub
in
addr16
jb
out
adc
cmp
fnstenv
jnp
psubsw
push
fnstcw
jbe
cmp
insl
mov
aam
lds
jb
pop
je
pop
or
aam
cltd
mov
adc
hlt
pop
inc
mov
pop
mov
jecxz
aam
xor
mov
mov
mov
mov
or
icebp
pop
stc
mov
sub
mov
addl
daa
cmpsb
pop
mov
test
pop
pop
test
sub
mov
out
dec
mov
inc
jbe
movsb
add
jb
aaa
jne
out
aad
popf
cli
movsb
xchg
jge
mov
jnp
dec
jne
push
jg
outsl
mov
dec
mov
dec
ficompl
jae
in
scas
shl
sbb
push
test
in
pushf
shlb
movsl
mul
push
jge
in
test
sub
jns
test
imul
or
cmp
imul
or
movsb
xor
cmpsb
inc
mov
sti
movsb
mov
fxam
jmp
push
or
icebp
loop
sub
scas
rorb
jae
jb
lods
shl
inc
ds
dec
jge
mov
xchg
pop
and
jbe
or
orb
jge
test
jno
ds
rcr
add
mov
shll
mov
icebp
sbb
xor
test
jno
pop
or
xorb
inc
mov
push
jb
ds
imul
xor
mov
jp
sbb
jp
sbb
sub
test
lea
adcl
cwtl
ret
aam
shlb
test
fucom
push
cmc
in
sbb
xchg
rcrb
repnz
or
in
adc
test
add
andl
mul
inc
or
mov
mov
sub
and
divb
xchg
xor
sub
jbe
jns
in
cmpsl
sbb
jmp
adc
jmp
pop
inc
imul
shrl
jb
sbb
push
push
cmpb
jl
std
sahf
cmpsb
shrl
adc
in
inc
imul
jg
and
in
aad
cmp
mov
mov
lds
in
or
mov
clc
jae
mov
outsl
div
and
hlt
faddp
add
add
mov
mov
imul
mov
mov
xorl
pop
loop
cltd
fs
and
pop
std
call
jbe
sahf
sub
addr16
and
push
sbb
mov
push
sbb
adc
movsl
or
int
pop
sub
add
jl
scas
sbb
inc
jne
and
pop
mov
mov
loopne
sub
mov
add
mov
jl
je
repz
fwait
mov
call
call
mov
adc
jnp
jmp
jno
jg
imul
cmpb
leave
mov
lcall
ret
call
add
lahf
add
inc
mov
in
sbb
icebp
repz
in
hlt
mov
call
cmp
jae
dec
xchg
outsb
mov
test
dec
sub
ret
sbb
inc
stc
push
inc
xlat
push
dec
push
dec
rcrb
stos
stc
sbb
icebp
mov
cmp
hlt
and
in
mov
push
xchg
ficompl
scas
xchg
xchg
add
addr16
subb
popf
mov
cmp
stos
mov
mov
fucom
dec
jo
inc
push
inc
insb
ljmp
shlb
dec
mov
pushf
std
add
fsubl
add
aas
sub
jne
mov
fwait
dec
xlat
lea
mov
adc
enter
mov
fisttps
inc
addb
pop
sub
dec
dec
dec
or
dec
ret
pop
hlt
test
movsl
pop
mov
in
pushf
mov
mov
fidivrl
xchg
pusha
jns
cmp
test
data16
dec
mov
ret
in
je
inc
pushf
outsb
xchg
roll
dec
cld
es
cmp
ljmp
pop
adc
push
jl
sti
insb
aad
dec
mov
mov
cmp
enter
sbb
cwtl
xchg
dec
addr16
push
push
jno
mov
stc
hlt
xor
addb
fdivp
fdivp
push
aas
and
popf
and
sbb
les
cmpsl
sbb
pop
gs
mov
inc
jno
aam
xor
out
dec
mov
or
mov
cmc
pop
out
xchg
jmp
je
imul
xchg
push
iret
push
repnz
dec
push
sub
dec
ljmp
inc
dec
outsb
inc
hlt
dec
adc
inc
lods
test
inc
pushf
cwtl
add
sarl
je
pop
push
mov
stos
mov
push
jp
mov
xchg
andl
mov
in
jl
jo
or
push
in
mov
or
mov
xchg
dec
je
xchg
sub
dec
outsb
inc
or
jge
mov
inc
jns
xchg
mov
mov
test
ret
aam
cmc
xor
jge
js
mov
iret
mov
adc
mov
push
roll
add
stc
or
push
mov
jg
dec
mov
sbb
and
lahf
and
lods
arpl
jmp
mov
push
add
jp
sbb
jg
andb
hlt
in
stos
fbld
pusha
mov
aaa
lds
out
add
mov
fwait
or
or
jb
inc
mov
push
dec
in
mov
and
jne
add
mov
mov
add
and
test
insb
xchg
sbb
ror
mov
jae
sub
cmp
mov
cmc
sub
adc
inc
outsb
push
data16
fwait
xchg
and
imul
insb
or
or
int3
imul
fs
push
xor
aaa
jae
pushf
aaa
xor
aam
xlat
mov
push
cmpsl
mov
repz
dec
outsb
dec
lea
jle
repnz
scas
vpmaxub
hlt
rcrl
cwtl
loope
in
dec
jge
test
jo
jo
je
xchg
xlat
sub
in
xchg
aad
mov
lods
adc
ja
push
and
dec
jo
dec
jge
lret
arpl
lahf
xor
movsl
push
lea
std
icebp
in
dec
gs
lods
addr16
dec
loop
shrb
mov
fs
and
stos
cmc
sub
aaa
mov
mov
aam
fldl
dec
push
xor
jmp
xlat
or
insl
or
addr16
mov
adc
adc
enter
dec
pop
xor
mov
loop
imul
test
fidivrl
lea
xchg
out
xor
dec
jo
mov
ja
xor
pushf
icebp
adc
jb
dec
mov
cmpsb
jg
mov
and
inc
jl
lods
es
mov
gs
aas
notl
xchg
dec
test
cwtl
jbe
mov
sub
pop
gs
sub
sub
stos
sahf
scas
push
dec
mov
ds
or
xor
std
cwtl
stc
cs
ret
ljmp
jnp
xchg
mov
lds
orb
negl
push
cld
gs
sbb
sbb
int3
pop
pop
push
xchg
js
jmp
imul
fnstenv
add
loope
and
stos
pop
xchg
mov
jae
sub
xor
inc
jge
jl
push
iret
xor
pop
rclb
pop
xor
negl
mov
das
mov
or
gs
inc
fldl
into
insl
cmp
das
hlt
insl
leave
adc
jns
xor
insl
imul
and
adc
test
out
imul
das
xor
jmp
pushf
mov
and
shl
jb
xchg
push
es
les
scas
jl
mov
repnz
arpl
fs
cmp
pop
push
cmpsb
cmp
pop
or
or
pusha
jae
mov
mov
out
jnp
and
mov
ja
mov
leave
jae
inc
sbb
negb
sbb
dec
xchg
pusha
jb
inc
repnz
mov
addr16
imul
addb
clc
jnp
imul
jmp
loopne
jge
cmpl
inc
pop
les
or
repnz
mov
mov
mov
pop
xchg
jb
hlt
addr16
and
in
mov
mov
hlt
adc
in
insl
mov
xchg
xchg
push
cmpsb
push
test
data16
adc
in
in
adc
cmp
jno
pop
aaa
adc
add
push
jecxz
and
add
jle
sub
fcomip
sbb
das
dec
mov
xor
mov
jb
sub
out
lods
add
mov
jg
pop
mov
aam
push
test
dec
test
sbbb
and
xor
mov
lods
mov
mov
lods
leave
in
adc
jb
and
xchg
mov
and
mov
testl
repnz
out
stos
mov
xorl
jbe
shlb
jbe
cltd
aas
fs
mov
mov
shll
dec
insb
lods
daa
lret
sti
cmp
adc
jge
inc
cmpl
addr16
inc
xchg
and
popf
cli
lahf
adc
inc
jnp
insb
push
adc
push
xchg
negb
ret
fwait
popf
xchg
mov
icebp
test
mov
ljmp
pop
sub
adc
lea
sti
les
jg
or
lret
icebp
fnsave
inc
notb
jae
dec
xlat
ljmp
movsl
sub
ret
popf
pop
xor
adc
mov
roll
push
out
into
notl
push
rcll
cmp
jp
gs
mov
xchg
mov
jns
out
cmp
push
ja
jl
lods
inc
negl
add
lea
push
jno
sub
push
dec
mov
lea
lret
mov
imul
dec
aam
lea
xor
fcomi
ss
insl
xchg
in
insb
test
cmp
or
cmp
cmpsl
jp
shlb
jne
cmp
xchg
push
gs
mov
ljmp
sub
mov
mov
and
xchg
inc
mov
lret
repz
jno
xor
fdivs
adc
cmpsb
imul
xchg
int3
dec
int
and
gs
mov
jle
fldcw
imull
pop
xor
dec
xchg
testb
into
hlt
jae
pop
cmp
dec
daa
adc
ljmp
sub
leave
and
imul
insb
dec
rcl
lods
mov
dec
fcompl
orl
dec
jmp
scas
mov
lds
inc
mov
ret
icebp
mov
int
jns
lcall
cmp
mov
repz
xchg
add
pop
rcrb
xor
lea
inc
repz
idivb
jnp
adc
inc
pop
outsl
je
dec
push
decb
jnp
mov
ret
cmc
aam
mov
mov
cmp
movsl
adc
mov
inc
adc
pop
xlat
cli
pusha
pop
cmpsl
jns
xor
inc
mov
out
scas
mov
xchg
push
movsl
jae
jno
jb
clc
push
movsl
jne
das
sbb
imul
test
sbb
cwtl
rorb
inc
pushf
js
fdivrs
insl
sahf
push
loop
pop
jo
outsb
loopne
fisubrl
or
fldl
stos
gs
outsl
jae
mov
dec
jo
cmp
dec
lock
stos
pop
adc
ss
insl
sbb
test
push
xchg
jg
movsb
xlat
call
cmp
lcall
jb
jmp
scas
out
pop
pop
push
xchg
int3
movsb
mov
sub
jno
insb
ret
mov
fstpt
mov
adc
lds
arpl
or
jmp
xchg
aas
dec
movsl
js
lods
ljmp
cmp
outsl
shll
push
lcall
mov
data16
mov
enter
inc
neg
ljmp
xorl
mov
loop
inc
bound
fs
lcall
xchg
data16
mov
sbb
dec
pop
jmp
mov
mov
lds
dec
xchg
push
arpl
test
daa
pop
mov
gs
mov
lds
jbe
jmp
cmpsb
rorl
mov
movsb
pop
xlat
out
and
out
xor
cmp
and
adc
cmp
and
ret
push
ret
pusha
setnp
ds
gs
cs
push
ss
subb
cmc
into
cmp
lds
mov
dec
xor
into
loopne
cli
mov
insb
xchg
es
les
or
cli
dec
jp
mov
cld
xlat
add
mov
enter
mov
adc
jl
xor
pop
dec
or
out
ljmp
sub
mov
xchg
movsl
push
test
test
test
xor
ret
div
repz
outsb
push
mov
pop
fdiv
inc
inc
sub
je
and
stos
mov
cmp
inc
sbb
xchg
popf
inc
ljmp
mov
and
xor
xchg
sbb
sbb
andl
out
xchg
sub
fidivl
xor
jnp
xor
xor
sub
movsl
int
je
das
lods
addb
pop
sub
mov
pop
mov
add
testb
shlb
gs
jmp
dec
aaa
xchg
mov
mov
pusha
ret
and
int3
sub
out
mov
fadd
outsl
adc
cwtl
inc
pop
cld
out
subl
idiv
xchg
sub
jno
inc
testb
imul
fidivs
test
in
or
fst
push
in
mov
test
jne
push
in
or
test
test
insl
fcmovu
stc
xchg
in
insl
dec
sub
push
jo
xor
xchg
in
jmp
stos
loope
insl
inc
aad
pop
in
xchg
dec
push
cmpsb
add
shrb
and
loop
push
or
icebp
rcrl
sahf
stos
dec
jo
dec
mov
ds
mov
jmp
pusha
adc
push
xchg
push
mov
ljmp
mov
jb
add
cmp
fcoms
mov
repz
add
pop
pushf
cld
leave
pop
icebp
pop
out
arpl
cmp
push
jecxz
adc
push
ret
mov
jns
loop
and
jno
cmpsb
sbb
dec
lods
pop
or
sbb
test
pop
aam
jns
mov
push
push
test
pop
mov
or
pop
imulb
sti
or
xchg
push
std
je
mov
pop
xchg
lea
mov
shrl
outsb
ljmp
push
imul
jmp
inc
push
imulb
sbb
nop
insl
mov
sub
or
dec
es
not
icebp
mov
inc
sahf
fsubr
in
pop
inc
fsts
mov
jnp
lret
imul
arpl
out
add
out
push
ret
std
xchg
push
imul
push
in
mov
or
pop
repnz
roll
andl
mov
scas
dec
or
sbb
insb
cwtl
mov
aad
dec
repz
mov
cmp
pushf
mov
mov
mov
repz
jae
mov
call
add
cmc
mov
pushf
mov
adc
imul
in
pop
xchg
lcall
pushf
mov
xor
jo
pop
push
sub
ret
push
aam
mov
sub
je
sub
xorb
sbb
jge
mov
mov
sub
pushf
jb
insb
sub
push
adc
or
push
in
add
fwait
mov
les
js
xchg
and
and
cmp
lret
inc
mov
negl
imul
les
add
aad
push
dec
jb
mov
push
test
add
xchg
leave
xor
sbb
enter
xchg
loop
outsb
jns
loopne
movsb
mov
sub
jae
mov
pop
stos
pop
dec
jle
push
scas
ja
stos
mov
and
imul
lea
dec
in
sti
imul
mov
stos
iret
repnz
outsl
xor
mov
enter
cmp
insl
mov
inc
add
mov
mov
mov
jl
aam
mov
inc
movsl
add
sbb
or
enter
xchg
jmp
pushf
aam
inc
daa
adc
push
mov
aad
cs
icebp
xchg
dec
leave
mov
inc
repnz
mov
loopne
orl
movsb
pop
mov
sti
pop
test
roll
push
lret
fcoml
sbb
dec
jbe
and
jp
cmp
mov
mov
mov
fwait
push
push
or
fs
and
push
xlat
paddsb
push
add
roll
fdivrl
inc
inc
stos
mov
imul
pmulhuw
and
mov
xchg
pop
imul
pusha
test
xchg
sub
jno
jne
sub
jg
shlb
jo
inc
loopne
sub
jmp
out
movsl
adcl
or
test
jmp
jmp
aam
cs
arpl
adc
daa
data16
stos
inc
mov
pushf
mov
mov
test
sub
sahf
push
movsl
inc
mov
repnz
push
subl
in
movsl
out
inc
ljmp
repnz
push
repnz
pop
repnz
mov
fs
stos
pop
into
enter
cmpsl
lods
push
mov
loop
sub
stos
add
cmpsl
pop
movsb
jae
add
jns
out
xchg
aad
xor
lcall
outsb
pop
insl
inc
pop
push
xor
mov
loope
push
xor
mov
movsb
sub
sub
inc
jp
xchg
je
push
test
add
push
sub
mov
mov
out
dec
mov
je
popf
icebp
push
mov
lods
cltd
adc
adc
insb
xlat
mov
mov
in
push
jae
test
subl
int
js
jb
in
add
jno
add
imul
stos
std
inc
les
push
subl
std
add
jmp
in
jmp
sbb
sbb
stos
cmp
dec
jge
clc
pusha
xor
lcall
push
js
lods
out
add
aaa
gs
mov
lret
fmull
pop
add
out
in
scas
jae
in
jae
adc
mov
sub
push
xchg
aam
out
pop
push
pusha
sub
jmp
imul
inc
popf
lcall
mov
std
imul
sbb
fs
pop
aad
into
and
xchg
jae
cmc
jg
inc
add
xlat
pusha
jae
fildll
or
in
jmp
inc
testb
add
and
push
scas
or
ja
mov
push
xchg
test
gs
and
xchg
aaa
sbb
in
jne
pop
std
cwtl
orl
xor
mov
and
imul
mov
xor
dec
imul
adc
addr16
xchg
lock
cmpsl
daa
sbb
sbb
jecxz
jge
mov
popa
gs
xorl
lret
enter
outsl
pop
push
je
dec
xor
xor
pop
sarb
pop
cmp
mov
popf
sbb
sub
jne
mov
jl
andl
out
and
das
test
inc
mov
mov
jns
push
dec
jae
cmpsb
inc
test
xor
xchg
insl
lcall
push
test
stos
imul
and
test
and
pusha
cwtl
inc
adc
and
mov
loopne
adc
fdivs
inc
inc
int
sub
fwait
jge
jp
je
ret
xor
mov
loop
nop
loope
ja
jl
sub
jae
insl
fisubrl
outsl
ret
xchg
sub
jo
and
loopne
movsb
mov
mov
insl
nop
xor
test
aad
js
call
shll
roll
jge
jle
xor
es
outsb
dec
sub
sub
jecxz
js
je
mov
pop
cmpsb
lret
sarb
in
jp
xorl
aad
pop
fstp
rorb
xchg
jle
insl
es
mov
pop
aad
mov
enter
mov
shll
daa
pop
mov
imul
push
dec
fcmovnu
xor
pop
stc
xchg
xchg
das
outsb
pusha
cs
dec
add
test
fwait
dec
or
mov
lods
xor
dec
cwtl
sub
sbb
dec
dec
or
or
in
mov
dec
sbb
nop
cmp
je
sbb
mov
sbb
mov
aad
lea
loope
mov
call
push
push
in
in
add
mov
mov
mov
mov
aaa
xchg
sub
pop
or
mov
xchg
adc
push
add
mov
imul
dec
lea
xlat
mov
mov
fnstenv
inc
mov
jb
dec
jg
rcrl
ja
pop
add
pusha
xchg
cmovns
in
mov
jae
adc
pop
mov
lahf
out
push
xchg
push
test
jp
or
jbe
adc
dec
push
popf
cmpb
movsbl
or
or
je
xor
and
daa
jge
mov
jns
shl
fists
jno
xchg
inc
add
mov
test
dec
repz
adc
pop
sub
mov
pop
mov
fstl
aam
fs
xchg
dec
into
dec
sti
jno
cltd
adc
jne
push
cmc
lea
fdivrp
aas
outsb
fadds
flds
xor
sbb
push
mov
jbe
cli
xchg
lea
xor
adc
dec
cmp
stc
andl
and
and
lahf
mov
dec
orb
ret
xor
cmpsb
inc
jmp
adc
xor
xor
dec
xor
movsb
lea
pop
orl
inc
xor
test
out
mulb
arpl
inc
jge
xor
dec
fsts
jne
fwait
mov
test
int
rcrl
mov
pop
lods
es
sahf
mov
and
cmp
or
mov
movsb
dec
jp
repz
test
xchg
test
jle
bound
mov
mov
xchg
push
ljmp
out
or
enter
imul
insb
repnz
push
vmulpd
xchg
xchg
je
jp
scas
mov
mov
popf
ss
sbb
jl
in
insl
inc
out
sbb
dec
cli
shrb
xor
mov
adc
jle
mov
mov
inc
xor
sbb
call
jns
mov
pop
mov
and
inc
out
dec
jecxz
jmp
repnz
addl
fwait
mov
inc
arpl
jo
aad
mov
or
dec
dec
gs
or
push
cmp
jae
push
or
mov
push
inc
inc
add
push
jle
gs
fisttpl
mov
leave
inc
xor
jp
loopne
flds
add
stos
and
jno
loope
sbb
es
mov
out
fnsave
insb
jmp
jae
in
int3
and
out
fiadds
out
xchg
cmp
dec
popf
leave
adc
adc
pop
divl
mov
imul
add
nop
sub
cmpsl
xchg
cmpsl
push
push
and
or
inc
inc
mov
xchg
sbb
mov
jnp
popf
jmp
xorl
jno
push
test
xchg
out
scas
pop
dec
fiadds
xchg
imul
jae
and
fnstenv
ja
push
mov
dec
test
stc
into
outsl
lcall
insl
fnstsw
insb
jns
and
adc
sbb
mov
mov
add
clc
sbb
inc
dec
lods
arpl
or
push
mov
arpl
stos
push
add
mov
fwait
mov
data16
arpl
insb
les
es
xor
and
xchg
test
push
repz
xchg
sbb
ret
adc
cmpsl
mov
or
je
cmp
int
in
cmc
sbb
popf
or
xchg
xchg
mov
divb
rorl
int3
fmuls
aam
mov
js
push
xlat
scas
add
sbb
repz
gs
add
sbb
loope
push
out
xor
gs
loop
push
movsl
imul
mov
sbb
jl
in
movsb
jg
movsl
mov
orl
mov
shlb
out
outsb
jge
insb
pop
and
lcall
cmp
rorl
in
out
cmpl
imul
jae
sbb
dec
sbb
repz
movsl
sub
popf
aad
jmp
cli
in
fs
add
push
sbb
test
in
bound
jo
xor
push
addr16
and
cltd
or
dec
in
mov
jl
out
roll
jo
jno
call
ja
jp
jne
insb
sbbb
aad
add
enter
mov
test
or
jg
cmp
popf
popa
jge
int3
mov
pusha
fcmovnbe
sub
out
aad
jno
faddl
pop
mov
popa
jle
scas
jne
pushf
and
mov
jg
in
sub
sub
xor
jecxz
test
loopne
xchg
push
lds
push
lcall
and
xchg
ljmp
dec
jne
js
jns
mov
mov
leave
movsl
inc
add
cmpsb
xchg
and
mov
cmpsl
imul
xchg
test
dec
mov
pop
rorl
xchg
aad
ljmp
push
pop
std
sub
xchg
ljmp
sub
movsb
insl
imul
jns
jmp
pop
sbb
mov
int3
xlat
xchg
inc
aad
enter
mov
scas
jne
sarl
jns
dec
addr16
sahf
dec
lahf
sub
add
mov
arpl
movsb
and
shl
mov
jge
addr16
mov
xchg
mov
out
mov
push
mov
dec
std
repz
in
adc
daa
xchg
xchg
xor
push
movsl
and
jecxz
jg
mov
inc
xchg
test
jns
sub
inc
int
and
push
xor
ret
xchg
js
jecxz
dec
pop
arpl
cltd
stos
ss
dec
inc
mov
mov
jb
scas
mov
mov
jb
xchg
sub
xchg
fidivl
add
pushf
inc
and
cmpsl
mov
cmpsl
lods
sub
gs
xchg
loop
jl
jge
jl
cltd
test
movsl
popf
gs
leave
leave
mov
jno
fucomp
sbb
adc
icebp
lods
test
lds
arpl
xchg
mov
mov
imul
xchg
mov
roll
enter
dec
enter
jno
enter
inc
xor
and
movsl
in
rorl
jnp
jecxz
fs
sti
out
movsb
icebp
test
mov
stos
xchg
xchg
movsb
add
xchg
movsb
or
xor
nop
and
mov
mov
fxch
add
add
mov
gs
int3
pop
jae,pt
cltd
mov
pushf
data16
andb
decl
loope
cmp
idivl
dec
in
cwtl
fwait
push
and
mov
adc
jmp
popf
jne
in
jnp
jne
jns
push
test
icebp
movsl
jns
pop
cltd
jge
cmc
jnp
jge
cmp
and
andl
cmpsl
std
jmp
push
test
sti
cmpsl
cmpsb
xchg
in
popf
lret
dec
shll
ds
cli
notb
sub
lret
jns,pt
outsl
mov
outsb
gs
nop
adc
aad
xchg
stos
sub
divb
dec
jbe
orb
divl
repnz
pop
and
inc
fwait
scas
push
xchg
ret
xchg
inc
jo
and
call
mov
roll
outsb
stos
xchg
dec
xor
test
and
aad
mov
inc
lock
aad
jmp
and
push
cli
int3
cmp
cwtl
in
xchg
sbb
das
mov
mov
lods
icebp
into
mov
dec
add
je
jp
and
or
fidivl
jns
sbb
test
insb
in
setle
ss
jecxz
fisubrl
mov
push
jno
pop
mov
cmp
xorb
pop
adc
push
fiaddl
cmp
movsb
sbb
mov
pusha
xchg
sbb
fimull
fsts
add
pop
jecxz
shl
or
cmpsl
mov
add
nop
jno
sub
mov
sub
adc
cmp
sarb
cld
insl
je
cmpsb
jne
fdivr
adc
cmpsl
cmp
addr16
daa
out
mov
dec
xchg
mov
daa
mov
addl
daa
pop
shll
repnz
arpl
outsb
shll
mov
jmp
sbb
cli
std
mov
add
movsb
sbb
xlat
movsl
and
inc
jnp
out
pop
fdivrs
xlat
test
pop
xlat
mov
fs
andb
jno
sub
mov
aam
xor
xlat
cli
fnstenv
xor
sbb
data16
mov
lods
jno
call
mov
push
mov
mov
les
push
sbb
popa
add
or
test
add
pusha
movsl
xchg
repz
addr16
loop
popa
aam
in
ret
cmpl
sbb
push
out
cmpsl
pusha
rep
pusha
scas
mov
xchg
orb
test
sub
xor
out
adc
not
int3
mov
cmp
and
ljmp
leave
test
mov
push
mov
stos
lods
dec
rorb
adc
dec
ret
fldt
imul
sbb
mov
lret
xor
pop
insb
fistl
pusha
mov
andl
lock
or
xchg
and
mov
arpl
jge
xchg
push
mov
out
sbb
pushf
out
stos
mov
mov
fwait
cmp
in
mov
push
mov
ret
rcl
mov
cli
out
out
mov
das
mov
andb
xor
mov
xchg
dec
clc
orl
in
sbbl
out
insl
cs
jge
push
cmp
adc
xchg
loop
fisttps
mov
shrl
push
jge
dec
int
nop
ret
jae
sbb
in
push
outsl
scas
mov
int3
mov
inc
mov
jns
shll
in
insl
adc
clc
lret
mov
jge
lahf
lea
pop
sub
jl
adc
lcall
cmp
gs
jg
nop
pop
lods
xchg
lods
xchg
int
inc
out
daa
fsub
enter
js
mov
out
dec
or
mov
dec
mov
in
pop
popf
lods
out
neg
ret
and
mov
in
adc
adc
xor
mulb
movsb
push
sub
mov
and
jg
in
lret
jne
lock
pop
cmp
jmp
cmp
adc
xchg
push
test
lcall
or
mov
mov
fldenv
das
pop
insw
sbb
jae
ljmp
inc
push
imul
sub
push
lahf
dec
add
call
xor
fsubl
stc
or
mov
stos
fs
arpl
xchg
mov
loope
dec
sub
shrb
hlt
outsl
mov
pop
jg
cmpsl
push
jb
insb
add
jne
jp
das
cmpsb
cmc
pop
mov
mov
into
stos
mov
push
enter
sahf
outsl
mov
push
adc
stos
aad
sbb
lds
jo
sub
xor
cmpsb
ljmp
jnp
testb
inc
mov
add
push
int3
mov
rol
add
cmc
jle
sub
mov
mov
cld
cli
pusha
inc
int3
jae
inc
and
xor
test
in
jb
xchg
in
ljmp
test
or
push
mov
or
cmpsb
jb
sub
adc
stos
rol
sahf
add
mov
fwait
jmp
sarb
test
xor
and
shll
sub
pop
scas
xchg
mov
jecxz
adc
scas
ljmp
lea
xlat
push
inc
jne
cld
pushf
xchg
sbb
sbb
clc
fcoml
jno
sbb
cmp
rorl
imul
mov
mov
inc
das
lods
mov
xor
shll
and
and
test
and
rcr
ljmp
test
mov
cmp
inc
js
sub
testb
jge
enter
push
mov
rcr
in
ljmp
pop
jno
aam
and
rcr
sub
dec
aad
call
imul
mov
mov
dec
notl
push
mov
mulb
push
ja
jle
lds
or
mov
push
lret
mov
int
icebp
cwtl
insl
inc
aad
xchg
sub
bound
jge
xlat
lock
xor
jne
lret
out
xchg
js
aas
push
ret
test
fildl
inc
cltd
mov
out
sbb
stc
mov
test
dec
loope
and
ja
les
cmp
nop
dec
adc
cmp
stos
sub
or
mov
and
fstpl
dec
cmpsl
inc
dec
aas
pop
testl
jne
lcall
fisubs
outsl
push
fists
sbb
xchg
in
pop
int
scas
xor
mov
leave
xchg
jge
xchg
loope
pushf
fldcw
gs
pop
ret
xlat
negl
and
daa
fists
mov
sar
insb
insl
mov
aad
addr16
xor
sub
and
jno
daa
test
or
jmp
sub
lcall
lods
push
sbb
lock
aad
inc
mov
fadds
mov
mov
jno
and
dec
mov
mov
scas
inc
add
jo
jo
adc
mov
dec
cli
dec
and
mov
xor
dec
mov
sub
insl
test
and
xor
or
fbstp
shl
xchg
jge
jo
adc
jbe
mov
mov
rolb
mov
add
push
loopne
dec
add
or
or
insb
mov
push
lret
dec
push
xor
dec
push
into
test
les
push
das
xchg
dec
cmpsb
icebp
icebp
jne
add
test
add
add
aam
mov
int
xor
enter
test
movsl
not
mov
out
push
stos
jmp
js
mov
fs
xchg
pop
scas
sbb
bnd
dec
js
sub
push
scas
pop
stos
jb
mov
xor
outsl
mov
jl
ret
inc
fadds
or
cmp
test
subb
inc
insb
xchg
mov
fcmovnbe
ja
jmp
out
movsl
push
dec
cli
bound
sti
icebp
jne
push
dec
cltd
mov
dec
xchg
pop
push
andb
sbb
xchg
sub
cld
leave
in
stos
pop
or
xchg
push
xorb
pop
outsb
xchg
stos
int3
fnop
add
shr
imul
mov
dec
or
mov
cmpl
mov
nop
test
mov
test
xchg
mov
js
or
pop
cmp
fists
sbb
insb
mov
add
test
jb
dec
sub
scas
adc
xchg
lret
cmpsb
push
adc
dec
cmp
scas
jecxz
fnstsw
clc
cmp
mov
fbstp
inc
xor
mov
fwait
add
cmp
cmpsb
mov
push
or
cmp
cmp
jmp
filds
testl
xor
mov
stos
xor
mov
push
push
mov
out
movsl
jae
lock
cmpsb
cltd
push
push
jp
push
pusha
lcall
hlt
jno
mov
add
pushf
mov
das
lods
mov
mov
xchg
sbb
mov
lock
jmp
enter
xchg
flds
cltd
pop
inc
je
mov
xlat
pop
nop
hlt
inc
cwtl
or
imul
fldl
imul
push
ficompl
jae
pop
pop
ret
and
in
dec
cmp
frstor
and
ljmp
loop
xchg
pop
mov
ds
insb
out
popf
xlat
cmpsl
jecxz
in
loopne
ret
push
sub
jae
imul
lea
push
push
fldt
mov
or
or
push
push
rorl
dec
pop
inc
xchg
in
adc
lock
fxam
pop
sahf
insb
test
mov
or
pusha
dec
jnp
jecxz
inc
and
xchg
xchg
insl
and
push
dec
sub
iret
loopne
out
jno
andw
shl
shr
and
cmp
les
pop
inc
or
mov
mov
and
mov
imul
popf
orl
add
lock
sbb
in
je
xchg
int3
mov
mov
mov
cmp
xor
xor
jmp
inc
or
xor
stc
xchg
push
cmpb
dec
mov
jle
xchg
bnd
imul
inc
mov
leave
pop
addb
mov
adc
sub
jb
frstor
fs
push
popa
jecxz
imul
fstl
add
mov
aaa
lods
sbb
jo
add
enter
jns
addr16
lret
mov
dec
shl
xor
mov
js
cmp
repnz
out
jge
ja
mov
jb
std
adc
popf
movsl
jge
mov
push
push
push
jge
xchg
int
pop
mov
xor
imul
leave
push
push
xchg
push
mov
mov
mov
shll
jnp
pusha
inc
mov
xchg
sub
nop
mov
mov
sub
pop
pop
jg
pop
dec
xor
jmp
mov
pop
xchg
push
xchg
mov
and
ljmp
cmp
pop
sub
add
shll
sbb
jno
mov
mov
mov
dec
ffreep
sub
jae
mov
cmc
mov
cmp
mov
shlb
insl
jmp
popf
test
jl
movsl
stc
test
adc
adc
popf
fwait
jmp
cmp
fwait
push
in
out
mov
pop
loope
icebp
int3
mov
test
xor
icebp
mov
test
dec
xchg
add
sbbb
repz
cmp
popf
cmpsl
testb
jg
cmc
sbb
leave
fldenv
cmp
mov
ljmp
subb
push
daa
mov
jno
out
fisttpll
test
cmpb
imul
inc
inc
mov
inc
add
cmpl
sbb
negb
jae
dec
jne
out
fmul
pop
lret
hlt
shr
inc
inc
pop
jecxz
loope
inc
mov
sub
push
icebp
jp
jae
mov
imul
inc
mov
sub
test
dec
fidivrs
sbb
outsb
push
sahf
sub
pop
sub
jmp
xor
sub
pop
mov
outsb
mov
mov
jnp
push
test
or
cmpsb
mov
pop
test
cmp
fwait
push
mov
test
pop
xor
cmpsl
cmp
xchg
lods
cltd
ljmp
add
adc
iret
dec
sub
test
popf
and
out
or
or
inc
inc
ja
adc
jo
movsl
or
icebp
sbb
mov
pop
inc
jbe
xchg
mov
cmpl
lahf
or
sti
xchg
jge
andb
xor
call
adc
jae
insl
mov
xchg
stos
ficomps
jb
scas
xchg
jbe
cwtl
outsl
fwait
sbb
aad
mov
je
stos
popl
into
lods
lret
mov
mov
int3
mov
fwait
lahf
rcl
adc
test
mov
stos
add
cmc
fucomi
out
mov
pop
aas
iret
jge
lds
jge
data16
loop
pushf
icebp
in
aaa
rorl
adc
lcall
out
mov
mov
aaa
jb
adc
push
xor
push
xor
std
push
cmp
xchg
push
adc
inc
push
popf
test
jle
clc
rcrb
loopne
cmpsl
fldcw
insl
dec
mov
push
imul
mov
pop
mov
sub
pop
fidivl
cmc
loopne
imul
imul
aam
stc
les
pop
addr16
insl
loop
fisttps
adc
or
nop
andl
jmp
enter
adc
in
cmp
stos
push
dec
lret
repnz
sub
pushf
and
jo
xorb
mov
mov
push
popa
inc
icebp
loopne
sub
or
sbbl
or
lcall
out
jmp
and
fwait
sub
sub
popa
inc
js
mov
in
pop
movsl
movsb
insb
scas
sub
mov
lods
call
xorb
rcrb
popa
mov
icebp
lock
inc
adc
inc
mov
mov
push
mov
lock
das
in
push
popa
test
push
jno
test
inc
cmp
jno
ja
mov
mov
add
sbb
xchg
popa
lock
sub
mov
jg
sub
push
mov
rolb
je
push
mov
sbb
add
rolb
std
leave
stos
loope
arpl
push
and
scas
aam
xor
add
jbe
notb
fistpl
outsb
aad
adc
mov
imul
mov
xor
test
mov
negb
pop
fcoms
pusha
imul
xor
fbstp
out
adc
dec
mov
mov
cmp
subb
xor
push
stc
dec
daa
add
mov
popf
inc
and
mov
dec
sar
adc
andl
mov
and
scas
lahf
jbe
fnstsw
sbb
dec
dec
sbb
jg
in
cmpb
inc
je
loopne
cmc
f2xm1
imul
mov
testb
loopne
std
push
push
insl
cwtl
cli
jb
mov
stc
or
les
mov
xchg
lcall
dec
cmp
cmp
xor
out
push
aam
jne
pop
dec
dec
push
addr16
ljmp
popl
pop
mov
rcrl
and
mov
sbb
fldcw
fcoml
std
jge
gs
jmp
mov
outsl
imull
push
movsl
rcl
inc
cmpsl
jno
stos
aaa
test
stos
jno
or
xchg
dec
test
mov
cmp
push
push
mov
or
scas
lds
mov
add
push
fstl
pop
inc
mov
pop
and
mov
push
cmpsb
mov
pop
loopne
mov
test
inc
fwait
les
in
push
mov
mov
pop
cli
jmp
cwtl
and
xor
mov
push
scas
lahf
ds
fbstp
dec
xor
mov
imul
pushl
adc
test
push
insw
dec
outsl
testb
cmpsb
mov
leave
inc
movsb
sbb
dec
jb
mov
popa
lcall
leave
and
stc
lds
movsl
mov
adc
mov
lea
out
add
test
add
shl
addr16
cmc
aad
mov
xchg
dec
cmpsb
out
scas
in
outsb
imul
mov
xor
push
mov
insl
and
dec
cmp
gs
jecxz
int3
adc
cmpsb
push
ss
xor
lods
inc
neg
hlt
add
das
test
jmp
cmp
add
jno
aad
js
push
jl
loopne
mov
jecxz
mov
add
aad
add
cmp
or
dec
push
and
jns
sub
jbe
mov
and
shl
dec
pop
fldt
mov
inc
test
sar
nop
fnsave
jnp
stos
ret
inc
cmp
pop
xor
outsl
lock
dec
shrl
and
test
repnz
xchg
push
dec
cli
adc
shll
jmp
mov
xor
gs
lret
gs
shrb
insl
sub
in
test
subb
pop
in
adc
mov
adc
in
dec
cmpsl
or
sahf
dec
mov
hlt
add
dec
mov
imul
push
sub
mov
std
xorl
mov
inc
sub
pop
int3
gs
dec
lods
sub
mov
xchg
mov
stos
xchg
icebp
xchg
in
jne
mulb
inc
push
aam
fidivs
arpl
orl
mov
mov
pop
mov
inc
dec
in
idivb
xchg
mov
mov
mov
scas
sbb
nop
ja
mov
out
dec
pop
push
push
xchg
sub
cwtl
mov
jnp
loope
movsb
dec
jecxz
arpl
mov
jbe
imul
mov
mov
mov
je
out
lahf
adc
rep
push
pop
jge
imul
cmpb
arpl
mov
repz
pop
mov
mov
stos
and
push
in
dec
pop
xchg
subb
mov
cmpsb
sub
stc
pop
repz
ja
out
sub
dec
and
ljmp
mov
in
out
mov
mov
imul
addr16
mov
in
cmpb
or
cmp
jne
subb
shrl
pop
stc
jne
fcmovnbe
fdivl
lahf
outsb
pop
dec
inc
test
in
add
outsl
inc
lods
test
jmp
lret
xor
and
cmp
fmull
xor
cltd
or
mov
dec
shlb
mov
or
std
jl
dec
mov
push
sbb
and
add
orl
jae
lcall
aas
push
ficoms
and
lods
xor
imul
dec
in
std
jecxz
in
xchg
scas
adc
arpl
dec
cmp
jns
call
faddl
inc
xchg
call
ficompl
mov
ret
fldt
xchg
and
movsb
subb
inc
lret
hlt
push
andl
pop
adc
addb
bound
ret
push
ss
adcb
cltd
xchg
out
xlat
mov
xchg
mov
mov
dec
imul
ljmp
xchg
mov
test
or
jbe
jg
xor
addr16
inc
or
clc
mov
jbe
pop
xor
pop
push
ljmp
sub
cmp
imull
jbe
jno
sub
loopne
cmpsl
lds
bound
push
or
sbb
push
xchg
xchg
jmp
je
out
out
xchg
dec
les
xor
push
out
fwait
das
sbb
mov
or
out
jno
add
dec
push
jl
addb
insl
xchg
sahf
loopne
mov
and
scas
jns
pop
mov
inc
dec
fstl
dec
cmp
lret
movsl
add
pop
sbb
sbbl
add
mov
daa
bound
add
mov
inc
mov
aas
inc
pop
imul
outsb
xchg
jb
cmp
mov
pop
loopne,pn
test
out
arpl
mov
mov
movsl
cltd
daa
test
mov
pop
and
je
cli
movsb
lcall
cmp
push
repz
cmpsl
or
fidivs
push
fdivr
notl
mov
mov
sar
daa
mov
and
xchg
repz
or
mov
dec
jmp
fwait
ljmp
inc
lea
pop
cmpsb
jns
sub
aaa
jmp
jno
jg
or
xchg
xchg
inc
mov
inc
or
ret
test
ret
int
dec
inc
jle
leave
out
addr16
into
cmp
lods
iret
and
dec
push
mov
push
jle
sarl
stc
dec
jnp
subb
cmpsl
xchg
push
sub
sbb
mov
fnstenv
pop
jo
loop
arpl
call
jno
dec
dec
ret
push
jle
and
outsl
add
add
or
add
jge
insl
pop
mov
pusha
insl
xor
out
and
jno
sbb
das
popa
sub
pop
loop
sub
mov
shl
jmp
mov
adc
imul
sbb
arpl
fcmovb
insb
inc
pop
xor
jo
inc
or
sarb
test
adcb
adc
out
test
call
cwtl
jle
cmp
jnp
mov
mov
sbb
imul
sub
jnp
fidivl
and
fidivs
in
pop
cmp
andb
call
insb
xor
dec
movsb
nop
mov
stos
out
mov
mov
jge
arpl
fsubrs
push
mov
rolb
jno
fistps
push
mov
imul
push
sarl
imul
filds
fwait
inc
mov
loope
xlat
out
xchg
jmp
push
sbb
out
add
cmc
adc
sbb
mov
push
icebp
mov
sub
adc
in
mov
jl
xchg
fcomip
shr
fnstsw
cmc
jno
xchg
add
jo
lock
or
int
mov
cmc
aad
inc
sti
inc
test
insb
in
aam
jno
xchg
loop
jo
shl
lret
xchg
cmpsl
mov
gs
adc
std
in
arpl
aam
lahf
push
popa
adc
inc
andl
aas
xchg
pusha
pop
adc
in
push
add
popa
xlat
addb
test
cwtl
jo
push
repnz
push
subl
fisubl
imul
mov
popa
or
xor
push
rorb
push
ja
imul
add
lcall
sub
ljmp
adc
popa
adc
xor
outsb
dec
repnz
subb
push
popa
dec
xlat
add
mov
lds
xlat
dec
leave
nop
aaa
cvtpi2ps
push
xor
jmp
jecxz
ret
rcl
ret
mov
ja
sbbl
out
mov
inc
mov
shl
pop
scas
inc
mov
sub
test
adc
in
test
add
jno
jge
outsl
mov
push
adc
in
rcrb
xor
jb
cmpl
xchg
js
xchg
xchg
cwtl
push
mov
pusha
jb
push
mov
loop
xchg
dec
mov
outsb
ss
outsb
mov
push
mov
mov
insl
jns
mov
imul
test
imul
sub
push
loopne
rcl
xchg
dec
jno
add
jnp
ds
add
ja
xor
sub
stos
dec
push
lret
fbstp
test
in
mov
mov
jge
ds
insl
subb
jl
push
and
data16
popa
mov
int3
xor
mov
pop
cmc
popf
sbbb
inc
adc
sti
js
jecxz
bound
lret
hlt
jg
fdivl
lods
sub
ljmp
jg
aaa
inc
sub
sub
ud0
push
pushf
ljmp
cmp
repz
xor
scas
mov
stos
insb
gs
add
imul
test
mov
loope
cltd
out
into
fisttpl
jne
mov
xchg
cltd
stc
movsb
popf
shl
push
mov
stc
stos
int
clc
in
dec
sub
dec
insb
dec
mov
sub
movsl
sub
iret
decb
iret
shlb
jmp
fldt
push
int3
jg
aam
jmp
adc
scas
test
xchg
xlat
shrb
jbe
dec
push
xlat
add
or
ja
mov
dec
divl
pop
jbe
pop
inc
pusha
inc
imul
stos
jmp
hlt
fnsave
cli
mov
mov
mov
leave
xchg
xor
xor
add
test
pop
mov
ds
jne
add
aad
mov
jno
jns
fisubrs
rcrb
pop
mov
aad
sbbl
leave
fcomps
das
call
cli
call
and
mov
dec
test
das
rcrl
scas
dec
adc
ficoml
inc
bound
popf
and
mov
push
mov
loope
jo
mov
xchg
test
jmp
ja
lds
out
mov
mov
mov
dec
or
sahf
and
subb
adc
pop
daa
cmp
scas
push
pop
mov
mov
cmp
lret
es
fstps
in
sbb
mov
mov
xor
pop
cmp
sbb
adc
dec
outsl
jle
or
xor
pop
mov
out
cltd
sbb
rcrl
push
insb
pop
xchg
cltd
push
sbb
movsb
in
shr
dec
in
leave
sahf
jle
dec
imul
sbb
pop
arpl
in
jmp
jae
iret
mov
scas
popa
or
jl
cli
jmp
frstor
push
out
out
dec
mov
nop
pop
mov
sub
or
hlt
cli
imul
filds
sbb
cltd
jl
clc
cmp
inc
jno
jg
dec
add
stos
cmp
jno
mov
mov
and
in
cltd
adc
xor
mov
mov
dec
rorl
scas
sbb
insl
adc
xchg
andl
jge
mov
js
xchg
test
or
divb
fnstenv
insb
stos
xchg
in
xor
incb
jp
in
mov
inc
stos
lods
in
test
mov
sub
mov
loopne
data16
pop
jnp
cmp
std
mov
jmp
movb
fwait
aas
cld
xor
inc
imul
mov
pop
rclb
jne
xchg
jno
mov
in
ja
jo
push
sti
loop
fimull
mov
pushf
dec
add
ror
adc
add
sarl
adc
stc
jge
mov
cli
stc
sub
xchg
sub
mov
inc
jo
mov
xor
imul
loopne
bound
rorl
mov
mov
ljmp
dec
push
sbb
clc
addr16
add
xor
xor
cmp
xchg
sub
outsl
or
cmp
mov
xor
je
pop
cmp
cmp
sub
lcall
add
jno
add
mov
mov
arpl
jnp
cli
daa
xor
cmp
mulb
or
outsb
xor
arpl
mov
and
jo
dec
jns
scas
jno
mov
jmp
movsb
mov
rcrb
add
rcll
dec
fdivrs
ret
pop
loope
or
add
inc
repnz
xlat
loopne
xchg
push
jno
mov
adc
fistps
fs
dec
jg
jmp
mov
cmc
jbe
imul
sbb
add
push
out
daa
fcoms
pop
subb
mov
in
xchg
lret
push
mov
movsb
ret
icebp
mov
mov
dec
and
fs
into
inc
std
loop
xchg
fsubs
mov
xchg
pop
imul
dec
incb
push
push
scas
scas
push
or
imul
leave
inc
orl
sub
or
cmpsb
loop
insl
scas
loop
arpl
ja
loop
jae
inc
iret
ret
jb
jo
add
mov
cwtl
cmp
je
mov
push
mov
push
aaa
stc
sbb
in
push
je
sbb
je
pop
mov
daa
ret
dec
fimuls
mov
imul
pusha
ds
pushf
pop
jne
xchg
icebp
jne
pop
jno
pop
pop
hlt
fs
mov
imul
pop
je
shlb
mov
das
addr16
leave
lds
pop
inc
sub
iret
cltd
divb
xchg
jne
add
scas
fstps
outsl
pusha
aad
adc
push
adc
ret
outsl
xlat
mov
mov
adc
icebp
pop
icebp
xchg
lahf
fnsave
gs
cmp
stos
out
push
orl
fsubrs
inc
std
imul
fisubl
in
movsb
mov
in
cs
push
test
leave
push
push
sti
in
mov
xchg
out
fcomps
clc
dec
jge
icebp
push
lock
dec
xor
mov
icebp
test
addr16
lods
mov
int
mov
fists
clc
sub
fmull
xor
dec
adc
fisubrs
test
adc
test
testl
mov
js
out
mov
dec
rcll
mov
pop
loope
jae
aad
add
xchg
rolb
aas
inc
push
icebp
lahf
lds
xchg
outsb
xchg
push
cmp
cmp
subl
je
and
cmp
dec
aad
push
adc
mov
pop
hlt
aad
jecxz
sub
aaa
push
test
push
ficomps
add
outsb
cmp
jge
test
xchg
cmp
add
xor
cltd
push
mov
xchg
pop
mov
jb
push
or
gs
xor
stc
mov
xor
mov
cmpsl
xchg
in
subl
mov
pop
dec
std
cltd
jb
xchg
mov
lds
dec
lds
test
imul
inc
aad
leave
clc
ds
xchg
xor
mov
mov
rcrb
lods
xchg
lods
push
push
or
lods
inc
arpl
inc
cmpsb
pushf
repz
ret
jae
nop
std
stos
outsl
hlt
cli
or
sbb
inc
mov
fwait
add
sbb
jae
stos
stos
xchg
inc
xchg
ficoml
inc
jne
xor
shrl
jge
cld
fdivs
jnp
test
pop
jnp
lea
out
sbb
dec
xchg
scas
inc
repz
shrb
loop
insl
in
les
add
jb
lea
mov
lret
das
and
arpl
sbb
sub
lea
imul
jo
enter
repnz
in
mov
fidivs
jno
inc
push
fmull
mov
lods
mov
inc
mov
rol
inc
in
jge
xorl
mov
mull
dec
sub
mov
arpl
jo
outsb
test
pop
sub
sub
lds
enter
ret
cmp
sahf
aam
icebp
imul
inc
dec
or
mov
mov
mov
mov
cmp
lea
inc
adc
mov
mov
push
sahf
int3
mov
mov
bnd
dec
jne
test
repz
cltd
inc
in
xlat
std
and
jae
pushl
int
sbb
mov
mov
movsb
mov
cmp
idivl
dec
outsb
and
cmp
push
outsb
push
mull
in
cltd
mov
cmp
xor
and
cmp
adc
loop
shrl
jne
or
push
mov
pusha
in
shl
mov
and
call
insl
popf
mov
data16
xchg
or
xchg
mov
mov
arpl
andl
jp
jbe
inc
push
in
inc
mov
add
sub
xchg
aam
out
aad
les
adc
pop
fcoms
insl
mov
outsl
imul
mov
imul
rcrb
jecxz
stc
or
push
mov
mov
shll
jne
push
movsb
pop
cld
adc
push
or
push
jo
sbb
mov
test
mov
mov
das
dec
nop
stos
mov
lcall
das
xchg
decb
cmp
ss
pop
mov
movsl
daa
cmpsb
pop
jp
pop
stos
adc
gs
lahf
xchg
loopne
sub
and
les
and
sbb
push
push
xchg
jge
push
pusha
mov
outsb
pop
sub
loop
dec
dec
sbb
inc
mov
out
bound
xchg
jnp
jae
pop
loop
jne
or
lret
add
jno
test
xchg
add
mov
rcrb
push
shr
in
dec
cmp
jmp
sahf
pop
movsl
add
dec
in
jno
jno
xor
add
dec
cmp
in
cmpsl
jg
pushf
fdivr
notb
icebp
insl
inc
outsl
mov
cmp
in
dec
xor
pop
repz
aad
cs
out
dec
enter
jle
sub
jl
mov
jne
lock
add
mov
or
push
loopne
or
out
scas
and
iret
xor
pop
stos
mov
mov
xor
jne
sbb
xchg
mov
rolb
mov
lret
test
cltd
test
imul
call
scas
pop
fidivl
arpl
aaa
sahf
je
jae
sbb
inc
adc
jo
jo
dec
dec
int
jb
shll
loopne
pminsw
dec
data16
sub
mov
mov
mov
push
push
mov
and
lods
addr16
mov
stos
jnp
mov
sbbl
xchg
ffreep
mov
test
xor
cmp
sbb
mov
in
xchg
mull
sbbb
and
cmp
jg
stos
addr16
lea
pop
mov
out
cmpsb
movb
sbb
aad
ror
les
ds
pop
xor
jne
daa
xor
scas
test
or
outsl
lods
movsb
sub
adc
cld
jb
into
fst
je
icebp
xchg
inc
mov
pop
shlb
fbstp
mov
jmp
je
orb
in
fcomps
xor
in
adc
outsb
dec
xchg
adcb
or
xlat
inc
repnz
out
inc
xor
dec
pop
cltd
les
jo
dec
mov
xchg
mov
cmpsl
pop
repnz
push
inc
xlat
fisubrs
loopne
icebp
pop
movsb
mov
loope
dec
das
and
and
out
cld
sub
dec
sahf
ret
stos
mov
pop
shrb
pop
mov
test
int3
cltd
ret
gs
lock
xor
outsb
mov
cmc
insl
adc
dec
rorl
jmp
mov
incl
mov
mov
ss
loope
jmp
pop
dec
mov
call
jle
in
push
stc
mov
add
cltd
idivl
in
movsb
inc
cmp
mov
dec
lods
aaa
arpl
pop
mov
mov
mov
cli
stc
jge
inc
xchg
jns
pop
adc
and
push
insb
jne
ror
pushf
pushf
push
in
adc
xor
imul
in
mov
mov
push
dec
bound
test
jno
fnsave
mov
add
and
mov
or
arpl
es
or
push
arpl
lret
jnp
sbb
cmc
frstor
mov
xchg
rorl
jecxz
mov
mov
arpl
sbb
icebp
xchg
dec
xchg
ljmp
je
clc
outsl
xchg
imul
push
xchg
cmc
xchg
test
ss
sub
mov
lret
mov
pop
imul
inc
fstps
xchg
loop
push
js
or
cmc
subl
arpl
jne
addr16
sbb
or
mov
mov
loop
inc
insb
movl
ret
mov
icebp
loopne
add
movsb
jmp
ljmp
pop
out
jmp
addr16
scas
pop
pop
pop
shlb
pop
mov
stos
and
roll
out
jbe
imul
inc
add
out
in
sbb
or
aam
inc
pushf
pcmpeqw
out
mov
mov
mov
mov
test
insl
pop
sub
mov
imul
fwait
out
ljmp
mov
adcl
loop
iret
imul
sbb
nop
in
pop
xor
cmpl
roll
fmuls
xor
ja
xor
dec
fcompl
and
jae
ja
xchg
and
out
jae
repz
mov
push
pop
add
jns
push
ja
pop
in
mov
inc
je
xchg
push
insl
bound
and
cmp
sbb
repz
cli
inc
jno
mov
mov
pop
cmpsl
lret
lret
cmpsl
jp
jno
or
scas
mov
jno
jge
sbb
outsb
dec
sarb
pusha
jbe
jmp
and
xor
xor
out
inc
in
int
sbb
je
or
ja
push
in
aaa
test
and
pop
roll
xchg
jno
mov
outsl
mov
xchg
lahf
or
push
ljmp
pop
lcall
xor
xchg
mov
clc
or
int3
mov
lea
into
mov
fiadds
loop
insl
es
jne
mov
lea
insb
xorb
mov
cwtl
jno
and
ret
cmp
loopne
jl
mov
add
sub
and
sbb
fists
sbbb
sbb
mov
jp
lcall
cmp
imul
inc
mov
and
cli
mov
mov
mov
stc
xlat
push
test
aam
push
subl
mov
lret
mov
ds
adc
or
adc
repnz
mov
and
and
push
mov
outsb
and
and
pop
dec
sub
cmp
sti
insl
movsb
cmp
outsb
subb
jae
pop
push
mov
adc
test
inc
je
stos
or
add
jmp
mov
divl
scas
xchg
sub
jbe
pop
dec
insb
loopne
lcall
pop
jno
sub
lret
mov
xchg
inc
xchg
jl
movntq
out
test
sbb
test
imul
sbb
js
mov
pop
lcall
shlb
in
jp
ret
push
stos
fs
test
mov
stos
jmp
adc
inc
mov
ret
movsl
fimuls
cs
sbb
push
ljmp
inc
fbld
and
mov
or
xor
arpl
and
leave
cltd
pop
cmpsb
arpl
scas
loop
pop
mov
lahf
lcall
sbb
inc
imul
int
repnz
mov
mov
jge
out
nop
cmp
rorb
lock
repz
gs
and
mov
mov
aas
fsub
stos
adc
fistps
adc
and
mov
loop
cld
xchg
repz
iret
mov
mov
outsl
mov
aaa
repz
aam
and
ss
aam
and
sub
movsl
ret
inc
mov
icebp
or
orb
inc
ja
jo
xorb
sub
dec
icebp
inc
inc
stos
cmp
xchg
fisttpll
jno
bnd
pushf
mov
adc
mov
bnd
hlt
lea
ljmp
test
xchg
adc
mov
gs
xchg
es
mov
out
or
loopne
imul
mov
imul
stos
pusha
push
mov
dec
jne
fiadds
xchg
scas
pusha
and
outsl
ja
cmpsb
push
jae
sub
mov
and
clc
jge
and
sbb
pusha
imull
inc
int3
adcl
sbb
or
out
push
cmp
lock
adc
mov
and
in
and
and
xchg
dec
into
jg
ret
in
jne
pop
xchg
jp
jle
mov
mov
es
or
and
sbb
int
mov
fnstcw
adc
pop
sarl
push
sbbb
or
lods
lock
lods
arpl
mov
xor
sub
testl
mov
mov
mov
or
dec
out
inc
jno
push
aad
xor
pop
ds
lret
cs
cmpsb
and
and
jl
loope
mov
insl
inc
adcl
mov
push
in
or
loope
std
mov
inc
jp
fdivr
fs
mov
xchg
and
add
xchg
mov
and
mov
lea
mov
test
add
pop
lock
cmc
sbb
mov
rolb
jo
and
pop
xchg
jae
and
in
loop
mov
xchg
dec
jae
jle
pusha
push
push
mov
outsl
and
mov
iret
jle
cmpl
xor
pushf
add
mov
inc
outsl
jo
xlat
cwtl
or
mov
sub
jnp
fisubrs
aas
repnz
cmpsb
nop
stc
xchg
and
jno
mov
shrl
dec
fs
mov
xchg
rcll
mov
sub
jno
inc
cvttps2pi
inc
inc
jno
mov
adc
hlt
outsl
ds
adc
dec
mov
arpl
mov
pop
aas
test
pop
movsl
push
add
pop
mov
imul
cmp
adc
sbb
push
pushf
sahf
mov
mov
into
xchg
nop
mov
pushf
jbe
adc
aas
sub
sbb
lods
sbb
lret
mov
xchg
stos
mov
push
das
jle
cmpsb
jp
mov
sub
fcompl
cli
xor
dec
mov
mov
por
lret
inc
data16
pusha
cli
test
mov
lds
outsb
dec
outsb
mov
adc
xchg
inc
sub
sub
ret
xor
sbb
mov
ja
cmp
jb
mov
loop
lea
and
dec
test
insl
xchg
dec
frstor
test
ja
loopne
cmp
fnstcw
bound
jmp
mov
jns
jecxz
pop
mov
dec
gs
cmp
push
iret
cmp
sbb
dec
cmpsb
cld
ss
and
gs
jbe
idivb
xchg
imul
xlat
sbb
add
push
std
dec
lret
repz
test
dec
test
sub
cltd
data16
mov
cmc
mov
outsb
pop
dec
addl
imul
imul
mov
out
aad
out
fdivs
out
daa
rorb
loop
jno
insl
push
in
stos
jmp
xchg
dec
adc
shll
push
push
xor
dec
mov
push
push
and
mov
jno
cmp
outsb
pop
js
sub
mov
or
lahf
or
adc
pushf
pop
mov
mov
stc
sub
je
es
sub
inc
or
fisttpl
sbb
fyl2xp1
pop
mov
out
mov
pushf
or
sub
and
fimull
aas
xor
popa
scas
jb
jge
out
cmpsb
rolb
push
ss
ja
not
cmp
push
push
out
neg
cmp
mov
and
inc
pop
imul
cmpsl
adc
inc
xchg
jmp
pop
sarl
movsb
not
jecxz
sahf
dec
sti
popf
jge
mov
jb
lods
outsb
push
subl
sbb
es
lcall
sbb
jl
pop
lds
mov
jb
sbb
fdivr
xor
dec
cmp
rolb
cmp
aaa
pop
fwait
mov
roll
cli
pushf
insb
out
pop
rclb
mov
adc
pushf
rclb
pop
jne
mov
in
stos
sub
aaa
movsb
sbb
arpl
cmpsl
rclb
ja
fwait
pusha
loopne
in
mov
sbb
mov
sahf
inc
ja
ljmp
jns
push
out
mov
sub
and
mov
lcall
mov
in
test
mov
mov
fnstcw
push
popf
sbb
and
or
cmp
pop
adc
xchg
dec
pop
movsb
cwtl
icebp
mov
or
mov
ja
adc
sub
out
loope
fildl
jb
jnp
out
jmp
ja
xchg
sub
cmp
xlat
push
pop
push
insb
mov
mov
pusha
fstpl
push
pop
jb
xor
cmp
repz
cmpsl
daa
sub
push
out
xchg
add
jl
xor
daa
xor
loop
mov
scas
and
sbb
mov
cltd
scas
icebp
fcomps
lods
ja
ret
iret
sbb
or
iret
lock
lcall
adc
fists
in
nop
sbb
jno
movsl
adc
fsubr
mov
cli
mov
jno
in
xchg
popf
mov
push
movsb
out
out
dec
adc
jno
xchg
lock
imul
inc
loope
fdivrs
cmpb
stos
call
xchg
pop
andl
dec
xchg
fisubrl
imul
add
imul
sbb
rol
iret
sub
mov
xchg
sbb
push
icebp
outsb
fnstcw
testl
adc
outsb
in
mov
cmp
sub
pop
outsl
mov
sub
int
mov
xchg
or
sti
and
xchg
xor
jmp
mov
roll
mov
ret
xchg
cltd
js
dec
inc
roll
ret
inc
dec
push
mov
or
inc
push
je
xchg
dec
push
pop
jno
cwtl
sbb
nop
mov
movsb
lahf
sub
pop
imul
roll
lahf
fidivrl
mov
mov
sub
loopne
js
add
jge
dec
mov
adc
nop
jbe
mov
movsl
add
iret
mov
dec
push
pop
mov
cmp
cmp
sahf
fisubrl
dec
jp
xorl
pop
lret
aam
je
push
jne
arpl
arpl
hlt
sub
loop
in
notl
clc
push
stos
xor
mov
sbb
xor
insl
xor
xchg
insb
in
mov
aaa
pusha
iret
mov
cltd
popf
inc
sub
xor
fbld
jno
mov
leave
data16
jge
push
out
ss
loopne
ret
orl
in
lock
xorl
xchg
push
mov
imul
gs
fldt
repz
adc
and
dec
sub
or
ja
mov
addl
sbb
repz
out
lds
leave
mov
icebp
pop
dec
ficoms
pop
pop
in
dec
movsl
push
pop
push
xchg
mov
int3
addb
add
inc
fisubl
lds
cmp
push
fstl
jmp
mov
push
xor
jnp
bound
rorl
push
xchg
mov
sub
mov
xor
adc
jns
xor
or
mov
aad
sub
pusha
andl
dec
sub
add
sarb
sub
sti
imul
xchg
xor
adc
clc
and
and
mov
cmpl
imul
aaa
mov
aam
test
rcl
mov
cmp
test
stc
adc
mov
sub
xchg
dec
imul
fs
insl
sub
pop
loope
add
dec
mov
mov
add
insl
jae
sub
in
fsub
push
fstps
mov
pop
popf
daa
fsub
sbb
cmp
xchg
cmpsb
insb
test
xchg
int
mov
dec
mov
xor
add
std
clc
inc
orl
fcoml
push
ja
mov
rolb
sbb
mov
pushf
mov
jno
dec
in
adc
sub
iret
xor
sbb
pop
pop
add
xchg
ljmp
shll
inc
mov
jge
pop
mov
add
out
ffree
fmull
gs
pop
cltd
roll
ficoml
mov
or
addb
imul
jae
stos
loop
adc
xor
fldcw
inc
or
nop
mov
fmuls
push
popf
sub
mov
sub
dec
xor
jne
or
cmc
test
xchg
cli
push
xchg
fisubrl
jp
mov
dec
mov
shl
sub
stc
add
dec
int
ds
imul
mov
inc
or
mov
idivb
imul
fcompl
test
mov
lods
mov
test
fldl
mov
int
test
sbb
mov
mov
dec
and
or
pop
xor
sbb
cmp
testb
push
in
push
inc
xor
notb
cmp
xchg
insl
mov
fcmovnu
adc
testb
xor
mov
jno
mov
sbb
stos
mov
popf
sbb
or
aas
scas
jbe
icebp
ds
xorb
xor
sub
int3
mov
stos
add
sbb
mov
or
adc
aad
cld
arpl
test
xor
pop
gs
lods
xor
pop
cmpsb
imul
call
out
movsl
mov
mov
scas
mov
jo
xchg
xchg
jg
pop
test
and
dec
sbb
nop
testl
cmp
loopne
nop
test
cltd
movsb
xchg
js
mov
lcallw
sar
cmp
mov
nop
test
pop
mov
nop
adc
test
cmpb
movsb
test
mov
in
mov
sub
scas
lret
jge
xchg
sub
andl
and
xor
jl
jge
mov
out
mov
jl
mov
pusha
xchg
pop
push
icebp
inc
add
shlb
and
inc
or
xor
push
movsl
mov
sbb
cs
or
mov
movsb
xchg
adc
pop
mov
dec
cmpb
jae
xchg
ret
test
adc
jmp
mov
xor
inc
push
jmp
scas
stos
fistl
jae
jp
inc
ror
fildll
stc
imul
imul
jno
nop
adc
sti
jno
xor
jae
bound
inc
adc
mov
xchg
mov
or
fcomps
es
sbb
test
sbb
sbb
sbb
idivb
lahf
pushf
iret
icebp
fisubrl
inc
fbld
adc
aad
and
add
mov
inc
add
insl
out
test
jmp
adc
hlt
and
hlt
pop
je
or
xor
xor
adcb
pop
imul
adc
sbb
lods
stos
scas
jg
cli
xor
jnp
xor
dec
xchg
push
lods
pop
das
mov
in
mov
pushf
movsl
jno
xor
xlat
mov
call
mov
mov
cmp
ss
loop
xchg
gs
addr16
sbbl
sbb
or
inc
or
scas
xor
es
jmp
push
jae
dec
push
bound
insb
and
dec
sarl
mov
ja
or
lahf
add
jbe
neg
xor
dec
pop
adc
sub
popf
sub
add
ja
dec
outsl
dec
jge
push
fs
and
dec
addr16
ljmp
testb
pop
fidivs
cmpb
pop
inc
add
push
xor
inc
inc
mov
cmc
mov
dec
jmp
insb
pushf
or
push
or
jae
push
sub
pushf
sub
les
mov
push
mov
sbb
jno
and
in
movsl
and
mov
idivb
test
xor
cmc
pop
mov
ss
test
xchg
jo
pop
movl
and
sbb
add
add
mov
sti
jle
mov
sbb
in
rolb
xchg
push
mov
addr16
out
jae
xor
pop
and
es
in
out
mov
cwtl
popa
dec
int
test
add
jge
xor
push
jmp
lret
add
daa
mov
shlb
add
out
add
lock
rcll
pusha
test
inc
test
dec
imulb
add
mov
or
fs
xor
mov
lcall
fidivrl
dec
xchg
addr16
inc
popa
mov
scas
mov
scas
in
xchg
movsb
lods
in
adc
jo
movsb
xorb
icebp
pop
mov
mov
sahf
xor
imulb
push
or
jmp
cmp
add
pop
in
test
cwtl
push
rclb
outsb
imul
push
cmpl
jmp
addb
imul
add
mov
fnsave
insb
aam
andl
imul
into
in
push
add
lcall
pushf
push
addr16
lods
cmp
repnz
test
lcall
lret
insl
jb
in
clc
sub
mov
ljmp
mov
in
pop
mov
mov
fadds
jne
pop
lret
mov
push
out
or
jae
jecxz
out
and
jnp
dec
test
cmpsl
pop
mov
cmpsl
sbbl
xchg
cmpsl
gs
or
mov
mov
daa
and
addr16
pop
mov
push
mov
pop
popa
dec
mov
mov
cmp
in
inc
ret
je
jnp
xor
push
movsl
divb
or
ja
mov
jle
fisubl
adc
lret
xor
adc
xchg
add
add
out
and
out
out
outsl
mov
repnz
dec
int3
pop
xchg
jae
mov
pop
sub
stos
repz
es
pop
fcmovnu
adc
dec
popf
mov
loopne
clc
mov
dec
push
stc
xor
adc
adc
push
fistps
xchg
outsb
arpl
js
add
pop
cmpsl
daa
js
and
insl
pop
movsb
mov
out
dec
mov
lods
sarb
adc
cmp
and
stos
addr16
in
cmpb
mov
fdivrl
add
mov
xchg
fbld
push
adc
js
mov
pop
test
repz
outsb
cltd
fcompl
or
inc
pop
imul
leave
add
mov
call
cmp
fmuls
mov
xchg
xorl
jns
xchg
insb
sbb
repz
gs
mov
rolb
mov
scas
arpl
xor
xor
int3
fcoms
jae
mov
cltd
dec
sbb
out
daa
fcoms
aas
popa
int3
es
mov
into
jecxz
mov
ja
lcall
and
xchg
idiv
mov
test
push
push
inc
add
outsb
mov
jne
jg
dec
negl
into
clc
mov
and
and
insl
mov
pushw
ret
jbe
jne
imul
dec
cs
test
fwait
add
add
xorl
sahf
addr16
mov
mov
gs
sub
sbb
add
xor
jp
test
data16
xchg
andl
loope
ljmp
nop
rcrl
and
inc
mov
cltd
mov
jge
and
and
loop
or
mov
sbb
adc
cmpsl
std
jb
data16
aad
mov
gs
pop
movsb
clc
aas
sub
adc
jb
xchg
shr
loop
mov
movsb
roll
mov
dec
push
mov
je
das
das
mov
orb
jae
push
sbb
jmp
sar
addr16
loopne
xor
lret
insl
push
mov
mov
dec
shll
test
fs
inc
lods
push
pop
js
shrl
mov
cmp
dec
jecxz
lds
xchg
ret
data16
arpl
shll
push
sub
dec
les
addr16
movsl
jno
add
add
rcll
popfw
aam
or
pop
and
mov
cmp
ja
cmp
cmpsb
in
test
dec
xor
icebp
mov
push
push
mov
dec
jno
xchg
xor
mov
jmp
mov
mov
adcb
pop
or
imul
pop
xlat
rcrb
xor
pusha
jbe
movsb
icebp
and
jns
clc
push
bound
dec
test
dec
in
inc
in
xor
aam
push
sub
mov
cmpsb
lds
cmovp
rorb
jne
cmp
sbb
jae
das
bound
subb
outsb
mov
movsb
push
push
push
jne
jmp
cli
fnsave
and
cmp
in
dec
cmpsb
stos
ss
aaa
mov
push
mov
rcll
mov
lahf
mov
jecxz
data16
shrl
in
mov
xchg
subl
and
mov
xor
xor
mov
test
test
out
mov
cmpsb
adc
fsubr
nop
jae
jns
subl
nop
sbb
mov
lcall
xor
pop
jno
daa
sahf
adc
subb
pop
sbb
dec
mov
rolb
pop
jne
cmpsb
add
adc
call
xor
nop
es
mov
ljmp
jns
and
dec
inc
lods
inc
jne
jp
or
cmp
mov
push
jle
sub
mov
lea
jle
jle
loope
insb
sub
push
pop
jle
in
push
jl
fldl
addr16
outsl
pushf
mov
fsubrs
push
scas
loope
in
daa
mov
xchg
jne
mov
jno
imul
shlb
addb
jno
int
js
sbb
xlat
mov
jb
jne
pop
cmp
inc
in
jne
shlb
jno
inc
outsl
jae
mov
fs
in
push
pop
push
fildl
jecxz
xor
cmpsb
cmp
lcall
in
xor
int3
dec
mov
pop
and
out
sar
add
push
addr16
mov
push
rcll
orb
aaa
mov
pushf
xchg
xor
xchg
mov
mov
add
in
movsl
stc
in
or
mov
inc
cld
stc
jle
out
or
mov
pop
outsl
and
pusha
mov
cmp
lods
xchg
and
add
dec
cmpsl
loopne
sti
jbe
popf
jmp
mov
jns
dec
imul
mov
imul
test
inc
test
loop
out
fwait
repz
xor
iret
and
jecxz
iret
or
popf
ds
jecxz
jb
subb
and
add
mov
rcrb
dec
xchg
mov
mov
cmc
cmpsl
sbb
shll
xchg
test
jno
outsb
push
push
add
test
jl
adcl
mov
jno
xchg
jmp
icebp
jmp
xchg
jmp
jmp
repnz
and
popf
sar
ljmp
xchg
jge
in
fwait
adc
ret
out
sbb
outsb
ds
imul
sbb
mov
add
xchg
push
outsl
imul
into
inc
jl
jno
in
orl
jp
mov
movsl
pop
xchg
pop
push
pop
imul
popf
add
push
jg
add
adc
pop
push
mov
mov
inc
and
jb
loopne
in
imul
ds
dec
xchg
xchg
insb
jg
in
xchg
movsl
xor
jns
subb
jns
push
push
push
xor
mov
cmc
push
addr16
outsb
xchg
out
outsb
ds
vpcmpgtd
mov
mov
jmp
mov
jo
lret
cmp
addb
sbb
lods
or
jo
ret
xchg
shr
ss
ret
xor
incl
jnp
jp
bound
jb
jb
jmp
repnz
jle
jg
insl
xor
jmp
dec
std
out
lret
mov
add
xor
outsl
lods
adc
mov
mov
cs
push
jmp
nop
xor
pop
pop
xorb
mov
jmp
dec
sbbl
jno
and
mov
cli
ds
sub
push
mov
dec
mov
out
ja
bound
cld
ja
push
mov
les
sbb
xor
imul
je
mov
jmp
int
push
hlt
xchg
sti
jb
nop
push
rolb
pop
and
add
xor
lods
arpl
in
dec
aaa
insb
adc
imul
pop
jne
or
mov
push
scas
pop
int3
sub
jns
jb
push
dec
call
dec
xlat
out
stos
pop
jnp
addr16
and
outsb
bound
lods
ja
xchg
pushf
andl
pop
gs
js
fwait
mov
shll
sub
lods
std
popf
xchg
xchg
ja
ds
pop
xchg
push
jp
add
adc
das
dec
push
xchg
adc
jb
add
orl
cwtl
xchg
imul
addb
fsts
mov
push
aam
lock
cwtl
andl
test
subb
lods
imul
pop
cs
mov
in
mov
add
sbbl
jno
loop
xchg
pushf
sahf
mov
js
aad
test
pop
jnp
jne
or
cs
pop
push
out
out
jp
mov
cmp
add
mov
aad
mov
hlt
xchg
lods
loope
jmp
addr16
sub
fldcw
and
dec
mov
sbb
mov
jo
aas
clc
cmpb
inc
int3
pusha
cmp
scas
stc
add
xor
xchg
xchg
cmp
mov
popf
jge
and
or
jg
out
mov
stos
addr16
jb
xchg
je
insb
cwtl
xchg
or
mov
or
pop
inc
jbe
cli
sbbb
pop
sti
cmp
addr16
sti
aad
mov
in
xchg
pusha
cmp
xchg
out
hlt
incb
jne
aad
cmpsb
lods
adc
jbe
in
cmpb
mov
imul
mov
out
mov
or
mov
mov
and
leave
cli
pop
out
push
jae
jb
xor
movsl
jg
cmp
or
add
and
int
pushf
mov
stos
lods
jo
mov
inc
lcall
sub
mov
dec
jp
jbe
inc
push
adc
mov
cmp
and
insb
xchg
test
jno
gs
stc
addr16
push
mov
jae
inc
inc
ja
jb
imul
push
andl
stos
adc
repz
push
add
in
ljmp
xor
ljmp
lret
xchg
dec
fisubrs
scas
xor
out
lods
idivb
xor
arpl
or
jbe
lahf
lahf
pop
enter
jecxz
loop
outsb
rorb
cmpsb
push
addb
mov
popf
jnp
test
mov
push
pop
mov
cmp
adc
fcoms
addl
outsl
xor
test
lret
shll
lds
jg
mov
cmp
fchs
cmc
cvtpi2ps
je
testl
dec
adc
stc
cmp
xor
mov
clc
push
adc
jne
mov
sub
lods
push
pop
sub
push
lds
imul
je
lahf
xor
pop
cmp
add
cmpl
mov
jne
jmp
jnp
out
sub
stos
out
dec
insl
mov
cmc
jbe
mov
jmp
mov
out
mov
add
insl
mov
clc
aaa
fwait
cmp
aad
daa
cmpsb
nop
dec
xchg
ret
imul
cmpb
outsl
xchg
sub
ss
in
xchg
cmp
div
fcomps
sbb
ret
mov
dec
adc
jecxz
or
push
data16
mov
in
push
je
xchg
push
mov
add
scas
xchg
jbe
jge
test
xchg
test
sahf
xchg
movsl
jl
cmp
jbe
mov
sub
hlt
hlt
pop
inc
loopne
mov
in
mov
pop
cmp
jge
xor
add
out
out
dec
jns
addb
fwait
stos
xchg
mov
xchg
pop
jecxz
jo
lds
les
mov
pop
mov
movsb
cmpsb
insb
movsl
dec
and
sbb
add
jnp
outsl
xor
fcompl
cld
jne
outsl
fadds
ss
push
and
jae
nop
xchg
or
or
test
mov
push
dec
add
push
pop
insl
pop
mov
stos
jmp
push
dec
push
repnz
inc
jmp
and
and
dec
jns
pop
sub
pusha
ret
xchg
insl
mul
test
inc
xchg
pop
mov
inc
nop
mov
mov
mov
je
xchg
arpl
loope
add
cmp
movsl
repnz
adc
insl
jge
scas
shl
movsl
or
pop
jmp
jno
aam
jmp
sti
mov
xchg
add
imul
xlat
imul
das
cltd
cmpsb
push
daa
sub
mov
cmc
cmp
out
sub
je
pop
xchg
out
jbe
adc
out
pop
out
out
insb
push
notb
out
xchg
sub
jmp
scas
icebp
mov
int3
jb
fisttps
hlt
repz
mov
mov
shll
mov
mov
mov
mov
in
jmp
mov
pop
sub
push
dec
mov
ljmp
mov
mov
movsl
stos
enter
fwait
xorl
xchg
adc
imul
push
pop
pop
mov
push
rorl
lods
cmp
rcr
out
imul
mov
imul
jge
cmp
movsb
and
pop
cltd
or
gs
jb
xchg
fisubrl
shlb
jae
jae
in
loopne
imul
jge
mov
dec
jecxz
xchg
pop
rcll
sub
repnz
in
adcl
adc
ljmp
mov
arpl
imul
lret
xorl
or
bound
bound
mov
jp
lahf
repnz
dec
in
rorb
hlt
mulb
arpl
mov
stos
sub
sub
daa
jp
idivb
and
data16
lock
mov
mov
andl
imul
outsb
or
xchg
mov
dec
jns
sub
or
int
push
jae
add
aas
xadd
add
xchg
lret
fcoml
call
pusha
cltd
mov
insl
sbb
mov
mov
pusha
in
sbb
aas
push
arpl
lret
nop
aad
aas
andl
or
or
arpl
filds
jmp
scas
popf
sbb
cwtl
mov
fwait
add
aas
jecxz
xor
or
cmp
jne
fs
lcall
mov
imul
incb
inc
xor
xor
int
jmp
xor
scas
cmp
into
cltd
mov
pop
mov
dec
add
mov
add
ja
gs
and
shlb
pusha
and
sub
test
push
ficoms
fs
pop
aaa
mov
mov
bound
pop
jge
dec
sahf
cmc
loope
pop
loop
pop
sub
pop
adc
repnz
ljmp
cmpsb
sar
sub
in
xchg
test
dec
dec
ret
ret
xchg
ret
and
sbb
dec
mov
mov
arpl
add
jne
lcall
stc
jno
out
loopne
mov
cltd
in
dec
test
xor
imul
sub
std
inc
mov
xchg
out
mov
adc
pop
lret
movsl
adcb
sarl
inc
movsl
insb
sahf
dec
mov
dec
ljmp
mov
sub
mov
or
frstor
test
ljmp
psubusb
stc
enter
movsl
mov
testl
sub
pop
push
sarb
jmp
and
dec
aad
fs
inc
nop
push
fidivl
dec
cmpsb
pop
orl
or
add
mov
lret
add
pop
iret
je,pn
and
jl
jne
dec
mov
test
push
mov
je
iret
ljmp
mov
sub
dec
push
pushf
aad
repz
push
add
stos
pop
jbe
jb
push
add
insl
js
aad
scas
pop
mov
and
mov
jmp
dec
lret
dec
lahf
add
mov
imul
adcl
mov
xorb
push
loopne
aad
lahf
add
cmpsl
pop
xor
jmp
jno
lcall
cs
jp
test
imul
pop
ret
lret
aaa
push
xchg
in
mov
inc
pop
sbb
fisubrl
mov
pushf
adc
xchg
in
dec
dec
mov
ljmp
mov
and
fnsave
xor
test
insl
jp
dec
orl
or
sub
cwtl
lods
data16
push
addb
divl
pop
cmpsl
ret
mov
cmpsb
repz
repz
inc
mov
lcall
xor
adc
xor
dec
ret
test
lds
pop
pop
cli
in
ja
pop
adc
pusha
idiv
and
cli
gs
inc
imul
ret
mov
sub
fwait
inc
gs
mov
xchg
fsubs
ret
fdivs
andb
cmp
dec
in
push
pop
pop
ds
pushf
xchg
push
lds
mov
mov
lds
or
mov
popf
iret
lcall
dec
stos
push
jne
push
push
fwait
lahf
es
mov
cmp
jb
lcall
adcb
push
adc
pop
outsl
mov
add
push
dec
enter
dec
inc
das
mov
movsw
fmull
in
outsb
mov
negb
mov
cmc
stos
jp
add
inc
lret
std
mov
mov
cmc
fmulp
jp
mov
xchg
mov
xchg
in
fst
and
cmc
pop
outsb
arpl
daa
add
icebp
mov
xchg
out
fstl
hlt
cltd
in
mov
adc
stc
mov
movb
in
jno
lea
test
ljmp
dec
pop
pop
mov
pop
inc
xor
out
orl
adc
pop
jmp
shll
pop
sarb
roll
test
clc
xchg
jne
push
rcl
pop
jecxz
cwtl
adc
xchg
push
das
mov
mov
stos
sub
xor
push
bound
xchg
fiaddl
call
scas
dec
push
mov
mov
mov
sub
and
mov
push
cld
repnz
adc
pop
xor
xlat
cld
adc
mov
mov
sub
scas
or
je
xchg
sub
sub
mov
orl
lcall
mov
xchg
lods
adc
stc
test
or
test
sti
or
sar
mov
jnp
push
pop
mov
pop
stos
pushf
push
mov
dec
dec
jle
xor
pop
xchg
mov
or
repnz
pop
inc
mov
in
xor
dec
shrl
lock
pop
xor
and
pop
cmpl
gs
aas
cmp
xor
stos
inc
fistpl
fimuls
icebp
mov
push
call
mov
mov
mov
sbb
dec
xchg
popa
push
pop
outsl
scas
pop
ljmp
in
cmp
cmpsb
xchg
repnz
and
jp
setge
or
and
pop
sbb
adc
pop
out
repnz
jecxz
dec
pop
jle
in
mov
pop
cmpsl
pop
jno
pop
inc
ficoml
mov
jo
cltd
repnz
stc
jmp
enter
jmp
jmp
adcl
lcall
popf
movsl
mov
fwait
adc
movsb
pop
push
in
sbb
in
js
add
lahf
test
movsb
pop
adcb
mov
lret
inc
cmc
loopne
jp
mulb
or
out
pop
jp
and
sbb
adc
mov
addr16
mov
push
jb
cwtl
in
arpl
pop
out
addl
and
push
lret
test
mov
dec
movsb
pop
add
xchg
imul
pop
sub
in
cltd
pop
mov
clc
test
out
addr16
lret
notb
scas
inc
jmp
fildl
dec
outsb
bnd
pushl
or
jmp
add
jge
pop
sbb
shll
andl
push
shlb
negb
fbld
dec
filds
sub
test
mov
add
bound
js
loop
mov
testl
dec
movsl
insl
test
adc
push
les
mull
sbb
loopne
inc
push
and
test
repz
imul
dec
dec
pop
mov
mull
adc
jns
jbe
imulb
and
lods
mov
pushl
insb
jae
jge
cmp
push
inc
div
test
dec
stc
ja
in
movsb
xor
fsubp
jae
pop
ds
xchg
pusha
jno
push
and
rcll
xchg
adc
and
xchg
push
gs
dec
push
xchg
in
test
repz
or
inc
orb
mov
mov
stc
test
push
inc
xlat
jp
loopne
stc
pop
pushf
pop
pop
jnp
inc
sbb
subb
int3
inc
loope
add
jns
sub
push
push
push
js
push
stc
mov
fsubrp
pop
imul
shll
xchg
jae
or
pop
mov
jae
fisttpll
call
and
gs
repz
in
icebp
jp
mov
repnz
insb
repnz
jecxz
mov
push
rcr
sbb
andb
in
and
or
in
mov
addr16
nop
dec
pop
xchg
mov
jmp
cwtl
inc
leave
adc
pusha
pop
subb
fldl
test
mov
sub
or
sbb
jne
out
and
dec
cmp
push
cltd
inc
fucomi
adc
push
pop
std
repnz
clc
push
notb
lds
adc
fidivl
fisubrs
lds
cmp
ja
repnz
jecxz
loopne
xor
gs
xchg
test
xchg
xchg
in
add
icebp
scas
jbe
loope
xchg
ror
xor
bound
imul
jno
arpl
jg
mov
xor
mov
aaa
inc
fidivrl
in
push
mov
mov
and
in
jno
xor
test
out
push
cmpsb
cmp
cmp
aaa
jb
dec
pop
add
pop
jns
addb
in
out
jnp
pop
ret
outsl
jno
or
xchg
pop
test
cmp
mov
repz
adc
inc
and
xchg
jb
stos
imul
adc
out
add
mov
adc
sub
and
push
add
or
push
sub
jns
xor
mov
adcb
and
and
mov
push
mov
sbbl
jne
push
inc
mov
mov
mov
mov
nop
outsb
dec
mov
mov
and
test
push
and
jp
mov
mov
imul
pop
imul
adc
lahf
mov
push
cmp
push
dec
icebp
lea
mov
sarl
and
push
cltd
call
jnp
movl
mov
lods
dec
or
sbb
cmp
repz
incl
xor
jge
mov
adc
stos
xchg
lods
stos
inc
or
loopne
test
jmp
clc
push
mov
test
test
sahf
xchg
movsl
jl
js
jnp
mov
xchg
mov
test
push
es
and
frstor
popf
lds
mov
mov
addl
roll
pop
xorl
and
adc
js
push
sub
inc
sub
fdivrs
add
inc
sub
mov
out
or
push
mov
sub
pop
outsb
loopne
sub
and
add
sbb
das
shlb
test
push
sbb
or
cs
mov
xor
js
imul
xor
pop
sbb
mov
xchg
or
pop
or
cmpsl
fs
dec
les
ja
or
push
mov
pop
sub
lods
ret
mov
pusha
pop
sbb
rcr
je
push
cmp
push
jo
mov
out
lods
mov
and
rorb
xchg
cmp
mov
hlt
in
imul
jae
lret
or
add
sub
sbb
pop
sub
pop
sbb
rcrl
sub
ficompl
iret
push
mov
stos
cmc
pop
sbb
push
xchg
pop
jne
jle
sub
out
xor
inc
cmp
sbb
xchg
out
imul
mov
xchg
movsb
pop
in
add
xchg
pop
outsb
outsb
inc
mov
std
jge
outsl
pop
pop
ret
sub
jp
jno
push
jb
or
test
movsl
push
cmpsl
or
jp
repnz
adcl
adc
mov
pop
mov
adc
in
shrb
or
xchg
jmp
testl
daa
jp
cli
lcall
adc
adc
pop
adc
adc
xchg
inc
sbb
fdivr
outsl
push
jae
aam
scas
nop
aad
shlb
roll
fmull
mov
xchg
xor
pop
shll
ret
inc
mov
push
jne
cmpsb
pop
or
cmp
test
pusha
or
adc
add
rolb
mov
push
icebp
fiaddl
or
mov
push
int
sbb
mov
mov
aaa
cvtps2pd
js
add
mov
cmp
aad
xchg
je
in
adc
arpl
leave
test
cmc
add
push
inc
jo
xchg
sub
stc
or
mov
icebp
outsb
js
in
mov
pop
xchg
sti
sub
testl
sti
mov
push
subl
sub
scas
push
push
add
in
pushf
inc
inc
mov
sahf
adc
shl
cli
dec
iret
or
inc
jb
andb
jns
xchg
mov
rcl
jno
pop
dec
cmp
cmp
and
xor
mov
or
push
rorb
dec
adc
xchg
xor
jb
iret
or
stos
sbb
lods
push
xor
or
orb
roll
push
dec
jge
sbb
pop
or
or
adc
sub
xchg
repz
adc
sbb
dec
lea
mov
cmp
mov
jb
aad
nop
mov
push
pop
sub
push
ja
cmp
jne
test
repz
push
xor
add
in
push
xchg
outsb
xchg
popl
add
xchg
inc
fstpt
inc
pop
out
out
cmpsb
inc
dec
pop
mov
ret
loop
clc
rolb
iret
inc
xchg
or
pusha
jnp
pushw
imul
pop
mov
mov
xor
xchg
lahf
ss
add
inc
jmp
gs
sbb
sub
imul
jge
subl
out
ficomps
cmp
jmp
test
sub
daa
xchg
loope
fcmove
shlb
inc
fwait
icebp
and
stos
dec
dec
je
sbb
pop
jnp
add
xor
mov
movsl
xchg
lock
ficomps
jle
subl
test
and
movsb
and
xor
or
lods
mov
call
lods
movl
ja
lods
sub
or
mov
enter
xchg
clc
lret
cmp
not
xor
inc
inc
repz
xchg
imul
dec
jmp
push
mov
dec
push
insl
int
push
je
pop
mov
es
lcall
call
mov
push
nop
xchg
icebp
sub
sub
inc
shr
imul
mov
rcl
popa
adc
sbb
adc
or
andl
popf
imul
fdivrp
cmp
bound
ljmp
imul
idiv
jp
push
mov
lock
imul
mov
sub
lret
mov
jp
mov
stos
pop
pop
lods
fdivl
add
dec
inc
jno
insl
int
mov
jne
ret
rorb
enter
xor
enter
sbb
fildl
je
in
popa
cmp
add
xor
mov
cltd
push
or
sahf
jne
inc
mov
scas
or
orb
in
fcmovb
jg
loope
dec
movsb
mov
ja
pushf
jg
int
push
inc
mov
iret
push
jle
imul
sub
push
fnsave
movsb
insl
rorb
rorb
ret
dec
rcrl
pop
fildll
xchg
fxtract
pop
adc
jge
js
les
in
cli
xor
mov
xor
inc
stos
xorl
cmpb
pop
and
jge
push
xchg
push
sahf
jecxz
popa
or
sub
or
dec
ljmp
shll
rorl
ljmp
jae
dec
or
xchg
mov
dec
mov
insb
fisubs
xorl
ret
jg
mov
pop
mov
enter
test
pop
mov
mov
popf
lret
jne
bound
shll
cld
mov
mov
xchg
pop
sahf
sub
mov
aad
gs
or
dec
or
icebp
out
bound
jmp
rcll
scas
lea
sti
fs
xor
xor
lock
gs
and
ds
jle
mov
idiv
and
dec
jne
testl
into
mov
pop
ja
jae
mov
scas
push
xchg
shlb
icebp
jae
lods
and
dec
mov
cld
imul
jge
nop
mov
mov
out
lock
or
mov
icebp
pop
jnp
pushf
mov
and
in
test
add
jecxz
icebp
push
ljmp
push
sub
and
fstpl
mov
ret
loop
xorl
jns
or
cltd
jbe
lods
loop
mov
push
insb
mov
test
mov
xchg
insl
sti
xchg
mov
mov
shlb
data16
mov
movsl
imul
jl
ljmp
cmpsl
push
adc
mov
cs
mov
or
repz
fs
mov
iret
jns
aad
mov
or
shlb
fistpll
xchg
jp
xlat
and
mov
cmpsb
mov
mov
test
daa
daa
inc
pop
cmp
movsl
push
dec
mov
jb
sub
iret
cmp
imul
mov
lods
bound
mov
mov
sub
ret
xchg
clc
lods
sbb
push
subb
xchg
notb
test
xor
jp
scas
mov
adc
scas
or
xchg
inc
lcall
mov
and
arpl
mov
shlb
mov
lahf
sti
cmp
add
nop
fwait
xorl
or
xchg
sub
fwait
push
test
or
lcall
xchg
add
sub
insl
push
mov
in
inc
insl
jne
jg
dec
and
imul
xor
fiaddl
mov
aaa
gs
outsl
dec
ficompl
pop
ffree
fstps
xchg
pushf
imul
inc
mov
jbe
mov
jmp
leave
punpckldq
mov
test
mov
ret
data16
loop
mov
aad
adc
movsb
fwait
popf
mov
movsb
xor
dec
jmp
push
mov
mov
mov
in
mov
scas
andl
fildl
es
mov
sub
lahf
nop
sbb
les
push
cmp
andl
mov
jo
xchg
ljmp
or
dec
push
xchg
outsl
arpl
adc
push
int
cltd
adc
daa
call
or
or
sbb
xor
arpl
pop
sahf
push
inc
aam
jmp
andb
pusha
xor
add
int3
bnd
test
add
mov
dec
lods
int3
inc
popf
pop
dec
mov
movsl
mov
inc
push
lods
lods
sbb
icebp
sub
cmp
dec
imul
cmc
fs
leave
xor
bound
xchg
sub
cmpl
push
insl
mov
imul
sahf
mov
leave
ja
jg
outsb
jno
push
mov
nop
pop
push
mov
pushf
adc
cli
sbb
movsb
mov
and
mov
sub
push
sbb
das
sbb
js
aaa
sub
sbb
or
lds
adc
xchg
or
sahf
push
inc
mov
addr16
pop
cs
rcrl
pop
adc
fldl
inc
in
xchg
jp
stos
inc
jb
das
pop
stos
popl
popf
inc
mov
in
xchg
jno
add
int3
dec
lock
push
insb
popf
sbb
ret
inc
mov
pushf
inc
imul
lds
push
jecxz
iret
arpl
test
mov
test
in
jge
jl
pushl
faddl
ret
xchg
sub
mov
ja
hlt
jno
sub
jae
data16
inc
jo
sbb
popf
jp
inc
push
pushf
out
inc
sub
add
or
mov
insb
jmp
xor
test
xor
pushf
out
mov
jno
jmp
sahf
or
and
pop
pop
jle
pushf
sub
cltd
mov
mov
insb
dec
dec
adc
or
dec
ss
outsl
cmp
and
adc
pop
jmp
mov
xchg
std
aaa
or
imul
add
jb
hlt
mov
andb
dec
jbe
clc
cmc
popf
xchg
and
xor
lret
push
xchg
pop
rcrl
sbb
mov
ror
insb
test
stc
cltd
xchg
outsb
xor
idivl
int3
xchg
sub
cmpb
jo
xchg
inc
int
call
mov
fidivl
shl
data16
xchg
pop
aam
and
xor
jne
sbb
fisubrs
pop
push
push
cltd
xor
fnsave
mov
in
push
fsts
data16
outsb
ret
mov
xor
jne
mov
mov
jne
test
jnp
mov
in
push
stos
lock
insl
test
and
js
data16
jno
lds
ljmp
mov
in
movsl
faddp
dec
xchg
pop
loop
daa
aam
push
fistpl
mov
dec
aad
or
add
inc
sbb
mov
cwtl
out
dec
jb
lods
incl
scas
aas
cmp
jae
pop
push
das
dec
sub
inc
ljmp
dec
dec
mov
xor
repnz
pop
mov
addl
xor
inc
ljmp
dec
inc
dec
mov
xor
mov
ds
inc
test
jne
in
jp
and
mov
sbb
loop
jbe
imul
test
sub
mov
mov
bound
jno
sbb
pop
call
pop
xchg
sub
push
sub
sbb
inc
add
xor
rcll
in
xchg
jge
xchg
mov
push
inc
xor
loope
and
dec
sti
jle
pop
fwait
test
xchg
in
lock
jo
jo
jo
loop
and
repnz
cmp
dec
idivl
shl
push
jne
pop
movsb
sti
test
pop
dec
sbb
dec
subb
cmp
sbbl
test
jl,pt
mov
jmp
addr16
lods
jne
out
xchg
cmpl
int
mov
xchg
xor
in
lods
test
xor
adc
imul
push
call
test
mov
test
movsb
pushf
mov
push
pushf
mov
lea
jmp
lcall
pop
mov
jge
or
adc
sbb
and
jmp
stos
jns
js
add
sti
mov
js
pushf
out
shlb
ljmp
mov
shr
cs
dec
shld
mov
out
or
bound
push
jno
and
fwait
mov
rolb
mov
push
mov
lea
push
sete
pop
pop
movzbw
pop
push
mov
call
inc
push
repz
in
xor
ret
push
pop
and
sub
shll
and
xor
jge
repz
in
stos
push
daa
xor
dec
gs
int
arpl
int
mov
jge
mov
adc
jno
test
or
lock
jle
pop
movsb
inc
jns
clc
pop
mov
cld
shr
cwtl
jne
cmpl
addr16
mov
inc
adc
fwait
lods
sbb
add
mov
cmp
jno
jecxz
gs
pop
vprotw
daa
inc
sti
int3
cmc
push
sbb
aaa
inc
add
loopne
lods
ds
xor
fs
jne
pusha
stos
mov
pusha
pushf
lea
jmp
pushf
lea
jae
stc
pushf
test
cmp
call
pushf
pusha
lea
jne
cwtl
lea
movb
call
push
call
xchg
les
pushw
popfw
movb
pusha
pushl
inc
pushl
movl
jmp
dec
shl
btc
shl
mov
jns
cmpb
jmp
xchg
aas
js
mov
xor
and
adc
ja
mov
lret
cmc
lea
ljmp
roll
mov
lcall
cmc
cmpsb
pop
add
inc
mov
jnp
lcall
in
es
decl
mov
or
lds
stos
and
movsb
cltd
push
daa
xchg
lods
inc
lahf
sub
popa
dec
add
mulb
ret
mov
fsubl
adc
xchg
inc
shll
int3
in
pop
daa
jbe
fstps
mov
test
test
fmuls
mov
fcomps
int
mov
fbstp
dec
pop
daa
sub
rclb
pop
int3
push
sbb
cmpsb
push
add
add
inc
pop
push
add
out
jmp
mov
mov
pop
nop
push
int
sub
sub
cwtl
rcl
add
cmc
or
or
lahf
clc
cmpl
mov
xchg
mov
push
adcb
sub
xchg
ja
cli
push
imull
scas
xchg
cmp
shl
xchg
es
cmp
nop
or
sub
jo
fstpl
push
fisttps
xor
pop
cld
mov
or
push
icebp
test
je
cwtl
lds
and
jmp
mov
cli
mov
jge
fcmovnu
mov
lds
lods
cmp
pop
loope
adc
movsb
xor
gs
clc
popa
jb
inc
and
pushf
pushl
movl
mov
call
cmc
push
jmp
push
call
imulb
nop
lea
jne
pusha
pushl
ret
push
call
je
dec
clc
sar
mov
cltd
and
cwtl
jmp
mov
ret
insb
push
movsb
sub
fsubl
das
stc
xchg
push
insb
pushf
push
sub
push
cmpsb
jae
xor
ret
push
das
jns
xchg
pop
in
outsb
mov
mov
mov
push
push
pusha
lea
jmp
push
lea
je
pusha
lea
jmp
call
pushf
pushf
cmc
add
test
test
sub
jne
cmp
jmp
movzbw
lea
call
push
call
aas
cs
incb
add
add
fmull
add
xchg
add
call
call
call
sub
push
pushl
jmp
push
call
pop
add
imulb
int3
push
and
rorl
jbe
mov
mov
mov
stc
inc
mov
aaa
jge
shrl
dec
cld
in
addb
xchg
fsubrp
loopne
push
jecxz
arpl
xchg
dec
in
push
cmc
sub
sbb
adc
and
sub
aam
aaa
aas
movsl
mov
pop
mov
test
jo
mov
popf
add
jne
fwait
sub
out
das
add
cmp
adc
fs
inc
jg
jns
or
and
xchg
sub
push
pushl
dec
clc
pusha
shl
setno
lods
lea
jl
stc
test
stc
sub
push
bt
clc
stc
neg
call
push
call
mov
cld
mov
jg
test
ret
scas
jb
das
pushf
cld
jle
shl
add
inc
neg
movsb
into
divps
syscall
insb
xchg
mov
mov
popa
push
jecxz
mov
xor
jo
fs
pop
inc
in
adc
fstpl
hlt
mulb
add
insb
xor
out
adc
mov
add
inc
dec
dec
or
out
cld
lock
lods
sbb
xchg
add
call
and
les
add
cwtl
hlt
orl
cltd
sub
inc
dec
dec
mov
arpl
imul
push
test
push
insb
dec
xchg
lcall
outsb
dec
jl
out
jp
adc
push
push
popf
dec
dec
imul
mov
enter
not
pushf
pusha
push
push
lea
call
clc
cmc
stc
cmp
pushf
lea
js
pusha
pusha
lea
jae
bt
cmp
pusha
lea
jae
push
bt
jmp
lea
jae
pushf
clc
pusha
cmp
movb
jmp
push
call
and
mov
mov
roll
cmpsl
js
inc
jns
jecxz
cmp
adc
adc
scas
xchg
gs
sub
mov
inc
loop
cld
leave
negb
clc
jg
jae
jge
inc
cmp
add
pop
or
jl
jle
ljmp
cmpsb
outsb
out
rcl
lods
rcrl
mov
rolb
xchg
mov
xchg
stos
jle
jge
dec
fstpt
cltd
fsub
test
stos
mov
inc
jo
adc
and
sbb
push
lea
je
call
fcomi
iret
cli
mov
repz
dec
dec
xlat
xchg
pop
out
push
cmp
mov
and
or
les
in
jle
cltd
loope
popf
fcomp
cs
jns
ja
adc
mull
into
jb
imul
xor
pusha
jmp
ds
cmp
fs
call
dec
or
or
dec
sub
jmp
and
mov
cmp
pop
in
int3
adc
and
dec
dec
cmp
add
pushf
stc
movb
cmp
pushf
push
lea
ja
rol
and
inc
test
sub
inc
movzbl
add
rcr
mov
rcl
and
mov
pusha
pushf
cmc
repnz
pushf
lea
jne
movsbw
lahf
bswap
not
movb
lea
setnp
push
push
jmp
push
lea
call
pushf
push
lea
jae
test
sub
pushf
lea
call
jmp
pusha
stc
xor
lea
push
movl
inc
lea
call
pushl
pusha
stos
pushf
push
pushf
lea
jmp
push
call
xor
roll
add
add
enter
xadd
mov
pushf
sub
inc
lahf
not
neg
push
not
push
sar
xor
shld
sub
movzbw
lahf
cwtl
lahf
lea
push
jmp
in
sbb
clc
mov
pusha
mov
rclb
lcall
aas
addr16
es
cmp
ja
inc
adc
ds
leave
mov
mov
cwtl
into
xchg
roll
adc
mov
mov
xor
sbb
jnp
pushf
orb
call
cmp
ret
mov
lods
jno
cld
xor
fcmovbe
add
adc
and
pop
fisttpll
out
pop
jl
in
ss
in
push
xor
pushl
bt
jmp
push
call
loopne
push
call
lds
mov
clc
mov
push
jmp
jmp
les
adc
ret
pop
cmpsb
call
cli
inc
jae
lds
ja
pop
push
mov
aaa
ret
bound
stc
cmc
jae
mov
jl
push
lock
arpl
mov
inc
out
pop
adcl
mov
cmp
dec
pop
lcall
data16
pop
add
mov
jge
lcall
imul
xor
xorb
jmp
shrb
inc
pop
cmp
push
pushf
pushf
pusha
lea
jb
test
clc
pushf
cmp
push
call
push
call
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
mov
xor
cmc
js
mov
mov
out
ret
sub
int
icebp
fsubl
cli
das
pop
pop
std
dec
pop
jge
jae
add
and
sbb
ljmp
cmpsl
sub
xor
cmpsb
in
push
jp
js
adc
pusha
cmp
sbb
cli
aad
loopne
stc
outsb
dec
sub
mov
stos
sahf
pop
or
or
outsl
call
push
jb
lret
mov
icebp
lods
dec
stos
xchg
mov
cs
cltd
cmp
jnp
pop
cs
ret
lea
je
push
pushf
lea
jmp
in
mulb
cmc
stos
out
repnz
aad
in
sbb
sbb
sbb
loope
orl
mov
fbld
rcrl
icebp
shl
negb
pop
mov
push
or
inc
jecxz
push
dec
cmp
cmp
xor
outsl
cld
inc
xor
fistpll
insb
das
inc
aad
mov
lods
je
outsb
stos
mov
arpl
add
rcrb
popl
adc
mov
xchg
xor
popa
inc
imul
lcall
jge
xchg
das
mov
adc
pop
xchg
mov
nop
lahf
mov
cli
dec
movb
call
repz
pop
daa
out
addr16
pop
mov
add
cmp
xchg
repz
push
div
pusha
shll
xor
mov
cmc
and
repz
add
inc
fstpt
pop
les
mov
push
mov
adc
bnd
dec
push
xchg
sub
push
mov
mov
stos
mov
repz
push
mov
fsubl
int
nop
es
insl
cld
pop
push
or
test
daa
inc
fldenv
outsb
cmp
xlat
cmp
jmp
dec
sbb
in
xlat
movsb
xor
or
aam
jmp
cmpl
pushl
pushf
mov
pusha
lea
je
bsf
mov
setb
bts
dec
sub
xadd
and
stc
shr
cmc
dec
bswap
shld
mov
dec
cmc
shrd
setns
add
sub
adc
sar
add
rol
mov
test
call
shl
call
pusha
jmp
call
add
inc
gs
outsl
fs
gs
imul
add
add
in
cmc
stc
or
movl
lea
je
push
cmc
mov
movzbw
bswap
pushf
mov
pushf
cmc
sub
clc
bt
shr
sub
push
stc
cmp
call
xchg
popf
repz
pusha
cmp
jne
mov
mov
inc
jno
test
test
icebp
stos
imul
push
test
mov
or
fadds
mov
jns
xor
mov
xchg
cmc
add
bswap
shrb
mov
stos
dec
push
mov
stos
int
outsl
mov
loopne
subw
push
scas
mov
sbbl
nop
repz
outsl
imul
push
jg
cltd
bound
filds
jo
sbb
inc
jle
fs
leave
int
mov
xchg
inc
test
mov
sbb
jp
movsl
cmp
or
add
mov
mov
add
lea
jne
jmp
mov
not
xchg
call
push
call
jmp
les
inc
stos
out
cmpsl
pop
cmp
adc
test
adc
xor
loope
jae
xor
out
cwtl
add
mov
xchg
xor
pop
xchg
and
enter
rolb
mov
xchg
push
rcl
icebp
pop
hlt
loope
inc
mov
cmpsb
setp
mov
add
dec
and
sub
lcall
jns
add
pop
dec
cmp
xchg
lret
fstpt
ret
test
arpl
mov
cltd
imul
rcl
dec
ss
loop
icebp
lds
fadd
test
arpl
outsb
fcoms
and
xchg
sub
jl
adc
adc
xlat
push
call
push
repnz
and
add
fnstcw
cmp
mov
jno
xchg
movsl
jb
lock
test
mov
outsl
je
sub
mov
dec
jle
pop
mov
and
mov
movsb
aas
pop
xchg
mov
mov
sbb
mov
add
and
lds
js
and
jb
popf
lods
loopne
xor
or
lea
shlb
imul
add
lret
arpl
sbb
pop
or
dec
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
iret
pop
rcl
mov
stc
pushf
cmpb
pushf
pusha
lea
jne
btc
sub
clc
rcl
adc
and
mov
or
add
sub
mov
cmc
xor
mov
jne
cmp
bt
test
jmp
out
loope
mov
jecxz
pop
jne
mov
outsb
mov
leave
sahf
fistpl
sub
dec
cmpsl
add
out
je
lret
iret
sbb
out
jge
pushl
sbb
jnp
or
mov
ja
jmp
fs
pop
adc
xchg
das
int3
xor
notb
add
xchg
cmpsl
or
pop
inc
xchg
mov
stc
enter
and
mov
pushf
inc
lea
inc
or
inc
xchg
sub
xor
mov
dec
test
mov
jmp
mov
jmp
xor
icebp
mov
cmc
cmpsl
decl
insl
inc
mov
js
loopne
and
xchg
push
sub
enter
testb
and
movsl
xchg
sub
test
aad
test
cmc
shlb
adc
mov
mov
cmp
jbe
int
xchg
add
add
push
sbb
fisttps
dec
cmpsl
aad
jno
das
in
les
or
movl
mov
dec
enter
lock
cmp
notl
mov
inc
ret
test
cmp
add
data16
lods
popa
scas
aaa
stos
shl
loope
push
lea
jne
sbb
bsf
test
sub
mov
rcl
shr
sbb
sub
bsr
rcr
cmc
ror
mov
cmp
call
stc
les
add
add
add
enter
add
add
add
or
aaa
mov
add
lock
out
sldt
add
add
add
add
out
mov
mov
cmpl
xchg
vpmaxub
dec
mov
pop
mov
outsb
movsb
jns
call
and
push
ret
mov
pop
jecxz
enter
push
inc
es
in
outsl
push
inc
adc
ror
mov
pop
xchg
js
sub
pop
pop
call
arpl
invd
cmp
jl
jno
inc
pushf
ds
rcrb
test
seto
int3
push
cs
int3
flds
mov
aad
into
lock
jae
test
adc
dec
dec
stos
testl
jno
test
mov
adc
ds
add
dec
push
repnz
mov
stc
pushf
in
out
dec
sbb
ja
imul
movsb
insl
xor
mov
sub
dec
pop
sbbb
aad
mov
scas
test
sub
mov
dec
addr16
inc
test
push
sbb
in
bound
in
dec
adc
shr
imul
gs
cs
mov
sub
xlat
filds
pop
cmpsb
mov
jge
adc
imul
xor
roll
add
jle
jl
leave
sbb
fstpl
cs
adc
cmpb
std
cmp
mov
subl
test
mov
xor
test
out
out
ljmp
popf
addr16
pop
out
cli
xchg
push
lea
movsb
imul
mov
push
int3
push
or
jecxz
push
add
fwait
mov
aam
popf
in
mov
test
xchg
pushl
mov
test
pusha
add
mov
shll
daa
pop
out
xor
adc
jmp
inc
push
sbb
push
jecxz
mov
test
pop
jmp
sti
call
inc
push
test
xor
push
or
push
loopne
icebp
into
popa
sbbl
cmp
popf
jae
pop
cmc
loopne
sti
loopne
mov
jno
xchg
popf
cmp
mov
dec
pop
inc
xor
xlat
mov
push
adc
jecxz
fisubrs
sbb
mov
or
xor
push
and
add
sbb
sub
mov
push
dec
ds
cmp
mov
int
mov
movsb
popa
jb
test
xlat
inc
mov
adc
es
xchg
inc
jge
insb
and
shll
loop
adc
or
jecxz
popa
xchg
sub
push
xchg
jnp
mov
andl
adc
cltd
pop
sbb
outsb
js
jl
int3
xor
push
add
cltd
or
test
xlat
movsl
xchg
jecxz
loope
sub
cmp
dec
stos
je
inc
pop
out
dec
lcall
andl
cmpsl
jbe
in
jl
sub
in
fsubp
sbbb
xor
pop
xorb
fcompl
pop
cmpsb
bound
sbb
leave
xchg
push
push
and
mov
fisttpll
cltd
pop
add
in
mov
or
lahf
sub
or
cltd
inc
pusha
xor
sub
or
lcall
movsl
fimull
jne
ret
dec
adc
out
jecxz
jne
sbbb
sarl
and
fmulp
fdivp
add
popf
fmull
push
sub
mov
and
jae
push
jnp
fidivl
stc
in
gs
jmp
rclb
pop
inc
or
rcrb
inc
dec
jecxz
push
push
mov
mov
aaa
jle
mov
mov
xor
in
mov
dec
dec
lds
call
sbb
pop
lock
push
repz
sub
lea
mov
cmp
pop
popa
lea
icebp
jg
les
xchg
mov
subl
sarb
sbb
cmpsb
mov
gs
inc
xor
pop
mov
mov
repz
adc
sbb
adc
jg
arpl
and
jmp
adc
push
bound
ficomps
repz
and
aad
jo
divb
lret
xor
repnz
mov
rorl
adc
inc
push
mull
dec
inc
and
pop
rcll
add
jb
jne
insb
inc
insb
insb
outsl
arpl
test
mov
pushf
push
cmc
test
call
mov
sub
cltd
int
add
push
mov
mov
sub
or
imul
test
lods
or
arpl
xlat
js
test
inc
adc
fwait
dec
xor
pushf
imul
ret
enter
add
ficoms
in
jbe
addb
aad
xor
daa
xchg
loopne
xchg
movsl
add
jg
outsb
add
mov
and
hlt
cmpsb
mov
fistpll
rorl
push
mov
fnstcw
mov
cld
shrl
inc
push
and
pop
into
xchg
std
pop
out
das
in
mov
mov
or
push
fdivs
sub
cmp
jl
repnz
call
mov
not
inc
pusha
mov
mov
mov
jmp
pusha
add
push
lea
je
cmp
push
stc
add
push
pusha
push
lea
jmp
pusha
lea
je
call
fwait
pmuludq
mov
inc
push
aaa
outsb
mov
mov
pop
les
ret
clc
sbb
fisubl
cmp
xchg
mov
push
iret
adc
outsb
stos
shrd
aaa
movsb
sbb
lret
lods
dec
xchg
mov
push
xor
cmpsb
xchg
sub
fimuls
cmpsl
daa
insb
aam
loop
jl
popa
mov
into
jae
imul
imul
xchg
pop
cmpsb
mov
lcall
adc
repnz
jns
aam
mov
ss
mov
and
call
inc
insb
test
jmp
push
pop
mov
mov
pop
lcall
loopne
xchg
pop
add
jne
push
jns
cltd
out
lods
fisttpl
mov
and
mov
xchg
xchg
adc
out
in
std
lds
sbb
add
clc
xor
cltd
popa
ficomps
xor
cmpsb
jo
push
lahf
into
cmpxchg
test
fcomps
xchg
inc
rorb
and
iret
inc
loopne
movsl
inc
bound
mov
push
cmp
cmp
adc
push
pop
add
repnz
ret
sub
adcl
sbbb
cmp
jnp
imul
and
lock
jge
in
scas
insb
shlb
imul
mov
xchg
jo
sub
cmc
int
mov
xor
inc
xor
faddl
sbb
aam
pop
adc
fs
cli
or
dec
fisubs
mov
lret
push
xchg
sti
cli
sub
and
in
add
mov
and
jo
mov
push
xchg
jecxz
aaa
das
outsl
add
inc
pushf
call
mov
mov
sub
popa
aaa
xor
inc
push
add
and
push
ret
pop
js
dec
scas
pop
shrb
iret
ret
dec
decb
or
lds
nop
sti
iret
pop
cmpsb
rorl
pushf
movw
lea
jne
aad
sub
stc
dec
shld
mov
or
add
adc
cmc
and
mov
bt
stc
cmc
test
pushf
pushf
pushf
lea
je
push
cmc
sub
call
push
cmp
jmp
push
int3
out
cltd
sbb
andl
mov
mov
ljmp
xchg
push
popa
sbb
aam
jbe
dec
push
xchg
aad
and
scas
aad
fbstp
stos
add
pop
jns
aas
add
mov
add
int3
push
pushf
imul
or
dec
outsl
leave
fadd
stos
lods
sahf
lock
xlat
idivb
mov
adc
out
addl
adc
int
stc
inc
ret
jno
add
mov
sarb
ret
and
arpl
ljmp
test
negb
and
jmp
mov
ss
cltd
subl
rol
push
mov
xchg
icebp
sahf
jne
in
jp
imul
xor
outsl
dec
std
add
leave
pushf
fistl
out
cmp
popa
into
fs
daa
pop
mov
mov
cmp
and
js
push
in
xor
pop
cmpl
das
mov
cmpsb
repnz
out
stos
ja
repz
pop
and
inc
cli
icebp
mov
jle
push
xor
or
mov
in
daa
cwtl
adc
cwtl
xchg
cmpsb
stos
loopne
pop
lea
jae
pusha
call
mov
enter
lahf
or
pop
addr16
and
mov
movsl
int3
mov
scas
jecxz
ficoms
loope
jecxz
push
icebp
repz
pop
nop
dec
test
insb
cmpsb
outsl
fs
mov
pusha
pop
xchg
out
mov
mov
in
lret
jae
andl
add
sbb
loope
cmpsl
inc
jmp
ret
sub
pop
inc
shll
int3
stos
lock
cmp
inc
xchg
inc
push
mov
into
fwait
sarb
and
call
call
push
call
jno
gs
and
mov
mov
rcrb
adc
imul
sub
lods
outsl
sub
inc
cmp
rclb
pop
jmp
add
lock
and
pop
xchg
xchg
in
pop
rorb
mov
in
push
leave
cmp
ror
xor
lock
hlt
imul
dec
popf
and
jmp
inc
out
shr
adc
xchg
int
mov
jo
inc
insb
ja
and
pop
cmp
nop
call
inc
jb
pop
jne
in
cltd
mov
push
int3
hlt
xorb
jmp
and
cmp
das
test
cmp
push
aas
ret
pop
mov
dec
push
cli
ffree
push
add
jnp
jmp
lcall
mov
jge
dec
xchg
adc
sbb
mov
xor
cmpsb
dec
add
xor
fistpl
sub
popf
mov
sub
or
jge
rcr
mov
pop
sarb
lret
dec
jmp
mov
pushl
pushf
add
bt
movzwl
neg
movsbw
mov
cmp
mov
stc
add
pusha
clc
jmp
std
clc
cmp
test
popf
push
pusha
pushf
lea
jmp
lea
jne
not
movzbw
call
int3
sti
loopne
mov
dec
sbb
mov
mov
and
hlt
inc
movb
repz
jo
dec
xchg
insb
mov
lahf
dec
xor
test
ja
sarb
inc
pushf
jbe
and
out
out
js
hlt
loop
jecxz
leave
repz
ja
or
push
inc
loope
mov
out
sbb
fmuls
pop
mov
pop
mov
cmpsb
aaa
sahf
xor
roll
hlt
hlt
mov
mov
enter
scas
std
andl
test
shlb
sbb
sahf
mov
test
xor
push
xchg
or
mov
mov
xor
ret
sub
sub
filds
std
pop
add
es
dec
add
pop
jns
pop
outsl
cld
or
add
dec
mov
pusha
mov
shrb
or
cli
pop
push
ss
cltd
adcl
jmp
nop
or
sbb
rol
adc
inc
fldenv
sti
push
pop
subb
repnz
test
inc
popa
ljmp
or
add
in
mov
push
and
pop
pop
sub
push
and
outsb
xchg
fldcw
sub
sbb
sbb
and
fidivrl
mov
sub
mov
dec
ror
pop
sub
andb
cli
push
cmp
pop
enter
push
lea
sbb
nop
movsb
setle
mov
pushf
push
pusha
pushf
popl
cmp
mov
bt
bt
or
push
jmp
adc
loop
cltd
xchg
adcl
jae
ret
bound
lret
jns
std
test
mov
mov
xchg
pop
movsl
popf
mov
lcall
insb
mov
cwtl
sub
inc
sub
mov
xor
rol
xor
bound
lock
aam
loopne
rclb
scas
pop
sub
loope
std
mov
inc
xchg
adc
sbb
pop
int
pop
sub
inc
lahf
push
outsl
fdiv
repz
test
mov
and
pushl
pushl
ret
xchg
movzbw
mov
jmp
push
call
fadd
in
sar
cmc
stc
shr
pusha
lea
je
pushf
adc
push
pusha
mov
mov
lea
jmp
push
call
mov
xchg
iret
loopne
cltd
push
or
out
mov
hlt
xchg
xchg
idiv
lods
push
cmpsl
dec
inc
inc
lock
push
dec
jecxz
pop
lea
fwait
jno
push
test
mov
xor
std
cmpsl
clc
cmp
sbb
dec
in
xchg
pop
cmp
sbb
imull
jg
cmp
xor
cmc
add
repnz
orb
cmp
adc
add
xor
push
cld
jp
repz
cltd
mov
pop
add
adc
into
or
cmp
cld
sub
push
repz
adc
in
in
sub
or
mov
push
arpl
sbb
cmpsb
aam
push
push
clc
imul
mov
pushl
pushf
push
add
pusha
pushl
lea
jmp
mov
lret
cltd
adc
jecxz
jo
decb
and
out
add
xchg
call
movb
movb
movl
pushl
pushf
jmp
jmp
int
jns
mov
sub
add
pop
inc
jecxz
sti
lret
push
mov
lea
jmp
fisttpll
out
aam
cmovns
cmp
in
ds
pop
pop
xchg
dec
negl
in
dec
push
add
std
adc
fnclex
mov
inc
cmpsb
scas
jno
sbb
into
add
insl
pop
jns
inc
insl
stos
outsl
sub
xchg
aas
fwait
ja
arpl
daa
add
sbb
pop
popf
icebp
push
mov
ljmp
add
or
das
aas
mov
cli
adc
ds
xor
fdiv
sti
dec
stos
mov
fcoml
or
lret
sub
call
push
call
jle
shl
int3
fbld
xchg
pop
add
xchg
pop
jb
pop
leave
xchg
jbe
pop
add
sub
and
mov
push
xor
xor
test
pop
mov
and
mov
jmp
out
inc
sub
mov
stc
scas
xchg
cmpsl
scas
jg
movsl
scas
jne
mov
test
fsub
mov
aam
sahf
adc
lret
xor
cld
dec
lret
sbb
lea
xor
cmpb
pushf
lret
xlat
or
inc
ja
shll
loop
pushf
sahf
jg
outsl
int
pop
cs
pop
sbb
ret
les
inc
add
sub
fucom
xchg
dec
ja
push
sub
or
mov
fcmovne
xchg
gs
sub
add
xlat
cmc
pop
xchg
push
int3
call
sti
push
call
subb
fisubs
pop
cld
inc
aad
mov
sbb
fimull
out
dec
pop
bound
fsubrl
loope
pushf
inc
adc
pop
sub
lret
mov
nop
xchg
mov
insb
pushw
ljmp
jecxz
repz
sbb
ret
dec
sbb
sbb
out
mov
cmpl
in
cmp
mov
ds
push
in
sarl
movsb
dec
sarb
and
cmpsb
fidivrl
or
mov
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
lea
jne
stc
popf
push
pushl
mov
pushf
lea
jmp
pusha
movl
pushf
call
push
call
mov
cltd
mov
frstor
sub
dec
cmpsl
adc
or
or
scas
pop
js
jle
mov
xlat
jg
cmp
xchg
jg
add
gs
test
xor
lret
xor
mov
scas
and
mov
les
jge
and
cltd
pushf
or
fsub
add
pushf
xchg
and
push
and
mov
dec
jecxz
sahf
push
movsb
out
movsl
and
dec
jge
in
xchg
add
call
movsbl
movsbw
movzbw
lea
lea
mov
mov
movzwl
call
stc
les
add
add
add
enter
add
add
add
or
aaa
mov
add
lock
out
sldt
add
add
add
add
rcll
add
cltd
hlt
mov
dec
out
push
adc
cmp
pop
sbb
add
pop
sub
repz
fldt
lods
mov
out
mov
imull
adc
mov
and
popf
test
in
xor
mov
sub
test
jg
lcall
ja
in
mov
cmc
adc
jmp
lcall
cwtl
mov
loopne
mov
pop
sbb
subb
cmp
push
pop
call
dec
push
call
pop
rorl
pop
and
lea
jno
push
pushf
mov
push
mov
pushf
pushf
pushf
pushl
ret
push
call
adc
mov
pop
cmp
stos
dec
icebp
lahf
inc
fs
add
out
bnd
in
divl
xchg
out
cmp
mov
add
ss
xor
jle
iret
ds
xor
cltd
or
imul
xor
cmpsb
std
adc
pop
inc
sbb
xlat
cmp
or
sbb
or
sahf
hlt
push
cmp
or
popl
pushl
mov
mov
movw
pushl
ret
mov
lahf
setle
call
fcomi
inc
xchg
clc
add
es
orl
and
insl
mov
mov
xchg
jp
or
sub
mov
mov
orl
call
pop
int
jmp
xchg
fldenv
sarb
iret
shll
aam
loopne
fldt
xorl
lret
fisubl
jae
test
insl
outsl
mov
ljmp
inc
es
mov
lock
sub
lods
inc
lret
cmp
pop
ror
cs
pop
sub
sarl
push
cmp
xchg
adc
negb
adc
pop
adc
cmp
xor
int
dec
lea
pop
ficoms
ljmp
enter
sarb
sub
sub
inc
and
sub
jge
xchg
cmp
in
add
aaa
inc
push
inc
jmp
dec
test
loop
lock
out
test
sbb
lcall
imul
out
xor
fidivs
cltd
test
jbe
scas
repnz
sub
js
dec
adc
enter
xchg
cwtl
xor
aad
mov
cmp
push
jb
fsubrs
sahf
or
mov
in
dec
std
mov
sub
call
adc
sbb
lea
pop
xchg
rcr
shl
sub
fsubs
pop
or
incl
inc
hlt
or
nop
mov
ss
or
push
sbb
cmpsl
popa
outsb
int3
sbb
es
test
rclb
ds
std
jmp
pusha
in
mov
mov
lret
and
push
jecxz
xorb
mov
inc
pop
cmpsb
push
sbbl
mov
sub
push
xchg
call
push
call
imul
gs
add
mov
and
in
sub
sbb
bound
in
and
push
inc
xor
lret
js
movsl
jae
sub
in
test
push
and
sub
arpl
xchg
adc
mov
adc
into
ljmp
lods
cwtl
sbb
dec
jmp
leave
es
test
insl
pop
mov
xor
sub
push
mov
sete
call
lea
je
cmp
clc
add
test
jmp
add
push
gs
imul
and
add
add
pushf
jmp
mov
cltd
pop
mov
jnp
adc
ss
xor
cltd
or
xor
or
adc
mov
mov
lret
aaa
ret
test
mov
xchg
sbb
imul
mov
sbb
push
inc
call
ret
leave
call
pushf
call
pusha
lea
jb
pusha
lea
jne
not
mov
push
lea
jmp
out
or
xlat
mov
adc
cmpsl
leave
mov
cmp
mov
test
popa
stc
ss
fcmovnb
cmp
es
push
addr16
out
and
mov
repz
rcrb
pop
pusha
fstl
jns
sbb
insb
cmp
jp
fsubs
jle
pop
js
cmpsl
int
sbb
in
jmp
dec
mov
pop
jg
cmc
pop
xor
insb
pop
lcall
mov
xchg
cmp
test
stc
xor
add
in
xchg
inc
lods
dec
mov
lcall
dec
and
lea
rol
mov
pushf
stc
cmp
cmp
pushf
lea
ja
jge
xor
add
shr
test
add
shr
clc
bsr
mov
pusha
mov
pop
add
sbb
sub
jge
inc
mov
push
cmp
cmpsb
movb
lea
ja
jne
push
lea
jb
cmc
call
cmp
cmc
cmc
sub
lea
jne
push
clc
pushf
neg
jmp
add
int3
aad
cltd
or
adc
jo
push
cmpsl
mov
inc
pop
or
mov
inc
into
cmc
je
push
stos
pop
dec
roll
ss
les
insb
xchg
ret
or
popa
xor
and
mov
ds
insb
decl
test
mov
ds
add
das
imulb
xlat
mov
jnp
jg
out
mov
movsb
out
out
fstps
mov
pop
dec
cmpsl
dec
mov
pop
push
xlat
sbb
push
inc
cmpsb
push
lret
in
fstpt
rclb
je
call
push
call
shrl
int3
push
out
call
iret
into
dec
call
out
aam
mov
push
out
jae
push
stos
shll
cmp
add
sar
data16
ret
movsb
pop
jno
cld
fdivrl
int3
hlt
pop
ljmp
push
lock
fimull
jl
jno
dec
jno
dec
roll
imul
sti
ss
jo
fldl
addb
jl
out
imul
movzwl
pop
call
stc
cmp
pusha
jmp
cmpb
pushf
pushf
jmp
dec
mov
out
jecxz
shrl
cwtl
push
into
sbb
pop
ja
shrl
std
sub
mov
jno
pop
jg
inc
out
shrl
adc
adc
mov
stc
and
sbb
mov
test
mov
into
dec
sbb
sbb
test
xchg
bound
int3
dec
pop
aaa
loopnew
fisttps
sbb
jp
call
cmc
mov
faddp
inc
xorb
jle
adc
test
adc
jle
inc
jne
pusha
insb
imul
sub
sub
pushf
push
jmp
push
call
pop
stc
test
clc
repnz
pushf
pusha
lea
jne
not
sbb
shrd
stc
mov
cmp
sub
bswap
rcr
shl
mov
cmp
bt
sub
cmp
pushl
cmc
bt
cmc
cmp
push
call
movb
lea
jae
pusha
pusha
push
lea
jne
pushf
mov
call
xor
mov
lret
fst
cmp
imul
cli
loope
dec
mov
mov
mov
cmpsb
dec
mov
sub
outsb
cmp
popa
mull
jnp
lret
addr16
mov
push
ret
mov
jg
fisttpl
add
sub
ss
xor
mov
push
mov
xchg
cs
iret
test
js
mov
mov
sub
mov
jo
add
or
clc
pop
inc
popf
mov
cmc
add
xchg
jmp
mov
out
sub
hlt
lods
nop
les
shll
push
fistpl
decb
imul
and
jmp
lea
call
call
xchg
shlb
clc
cmp
mov
enter
adc
or
movsb
mov
mov
xor
fwait
sbb
adcl
jo
icebp
push
cmp
lea
lea
movsbl
call
mov
adc
movb
pushf
pusha
lea
jle
jae
pushf
call
push
call
pop
lea
call
push
call
leave
loope
shlb
into
and
imul
mov
inc
loope
push
dec
bound
lods
data16
cmpsl
outsl
test
repnz
xchg
cmp
push
les
pop
repz
sbb
inc
adc
xchg
push
sti
out
mov
jns
scas
iret
pop
jo
subl
outsl
filds
movzbw
push
movsbw
mov
push
push
pushf
lea
jmp
push
call
mov
mov
jp
add
cmp
leave
add
mov
fsubl
jmp
outsb
icebp
mov
mov
dec
pop
mov
jno
insb
mov
enter
mov
push
inc
dec
aaa
sub
cmp
lods
jl
divb
and
adc
aas
loop
mov
mov
cmpsl
xchg
rcll
push
xchg
push
sbb
push
repz
push
mov
hlt
pop
js
andb
sti
jecxz
add
cltd
cmc
push
xor
shrl
loopne
cltd
out
mov
test
and
fwait
ja
sub
or
repnz
jle
pop
arpl
xchg
mov
pop
aam
sub
das
test
test
stos
cmpsb
jne
pop
cs
push
and
out
repz
cmp
lret
sahf
mov
stos
adc
cltd
leave
popf
dec
mov
scas
mov
add
add
pop
out
mov
fcmovu
fcom
lahf
arpl
and
pop
lret
mov
sar
hlt
adc
push
jl
mov
add
jp
orb
jmp
aaa
adc
fisubrs
pop
or
pop
sti
mov
pop
mov
dec
sbb
and
push
push
cmc
jg
std
lods
jge
and
rclb
jl
mov
loop
pop
cltd
rcl
not
mov
cmp
jmp
push
call
or
aas
pop
mov
enter
adc
adc
adcb
or
loop
ret
stc
jne
mov
inc
sub
cwtl
and
std
sub
loop
add
cmp
jl
sar
pushf
mov
sub
mov
andb
sbb
add
sbb
icebp
ret
aaa
xchg
jg
adc
int3
or
mov
inc
loop
cmpsl
pop
push
mov
loope
mov
popf
jbe
mov
dec
adc
out
pop
cmpb
loope
push
pop
and
xor
mov
add
jmp
xor
cltd
aaa
les
jnp
jo
xchg
jns
ds
out
cld
sub
pop
test
pop
pop
rcrb
fs
and
movsl
mov
out
cld
ja
mov
movsb
clc
fldl
and
or
sbb
lods
dec
sbb
fs
dec
push
pusha
inc
cli
outsl
stos
jns
mov
push
inc
xchg
cmp
add
outsl
hlt
int3
into
mov
lds
nop
pushf
mov
xor
jl
xorb
cmc
lahf
jb
stos
push
mull
pop
lock
and
jl
out
jo
scas
pop
xor
js
ret
xchg
loopne
lods
mov
pop
fmulp
xlat
xlat
mov
loop
and
pop
adc
cmp
repz
mov
rorb
push
sarb
hlt
je
inc
inc
fbld
stos
jmp
in
mov
setge
shr
sar
push
pusha
aaa
mov
bsf
mov
call
push
call
insl
pushl
jmp
mov
adc
mov
insb
lret
insl
es
lock
sbb
push
sub
bound
mov
movsb
xchg
sub
cmpsb
fwait
out
stos
mov
popf
ss
cmp
test
lahf
jmp
test
xchg
pushl
dec
jp
outsl
movsl
imul
cmc
pop
enter
das
and
jmp
daa
jp
popa
mov
dec
pop
mov
into
sub
pushf
cld
mov
xchg
xchg
sbb
push
adc
add
shrb
movb
call
insb
push
call
imul
loop
js
mov
sub
jno
mov
loope
cmpsl
cmp
jmp
adc
xchg
mov
data16
jmp
or
loope
outsb
ds
mov
pop
test
out
xchg
add
test
hlt
loopne
fldt
loop
mov
cld
xchg
mov
mov
stos
lea
scas
pushf
mov
push
fs
adc
inc
ja
ljmp
rcr
scas
add
int
cltd
out
mov
push
and
or
sub
xchg
das
lods
dec
and
test
push
das
push
cmp
out
daa
xor
jmp
xor
mov
jb
in
mov
mov
cmpsl
adc
fcomps
outsl
repnz
pop
mov
pop
cmp
in
jl
scas
push
mov
xor
ror
and
sbb
gs
out
push
push
repz
rcrl
sbb
mov
lock
pop
adc
xor
int3
cmp
sahf
fs
mov
lock
mov
outsl
pop
add
je
pusha
movb
cmc
sub
mov
pushf
pushf
lea
jmp
mov
push
mov
call
call
push
call
cmp
int3
or
int3
mov
stos
lods
lret
int
out
std
jbe
adc
psubd
scas
loopne
in
ljmp
mov
int
cli
jg
ds
ja
jecxz
bound
pop
rolb
adc
xor
push
stos
inc
sub
sarl
or
gs
outsb
out
es
xor
fdivrl
mov
push
outsb
sbb
into
lcall
pop
jmp
mov
xor
and
mov
mov
cmp
stc
and
clc
add
pushf
mov
pushf
pusha
lea
jmp
pushf
movzbl
mov
pushf
push
pushl
ret
push
call
ljmp
stc
bt
pushl
popl
bt
jmp
clc
test
jmp
inc
stos
jecxz
mov
inc
mov
clc
pop
into
add
pushf
cmp
mov
stc
ficomps
cmp
pop
sub
imul
xor
test
add
jb
mov
xchg
push
pushf
pushf
lea
pusha
movl
jmp
add
add
jmp
loop
scas
lret
cld
test
outsl
mov
add
testb
jae
dec
adc
sti
out
aam
lds
rolb
jmp
push
out
sti
cmp
inc
push
dec
mov
xchg
test
and
add
loopne
dec
sbb
sub
clc
pop
cs
sbb
dec
push
mov
movsb
rorl
out
in
add
hlt
fs
fs
mov
mov
outsb
inc
lret
mov
adc
insb
or
xchg
sti
jns
inc
test
push
js
fcom
xor
fdivrs
inc
lods
jle
mov
inc
divb
dec
iret
adc
sti
and
mov
and
push
lods
call
add
fnstenv
push
call
cmp
cltd
mov
sub
inc
jmp
xor
and
movsb
pop
fnsave
movsl
pop
mov
pop
inc
inc
cli
cmp
mov
cmpsl
out
shll
push
lods
enter
or
and
pushf
stos
ror
addr16
out
int3
popf
jge
push
push
popa
jge
fldl
outsb
addr16
fisubl
xor
cli
cmpsl
xor
inc
pop
sbb
push
mov
push
and
inc
and
in
enter
mov
jne
fistps
jmp
negb
cmp
xchg
hlt
loopne
dec
adc
and
stc
cmp
add
push
movb
mov
lea
jmp
push
call
shufps
movsbw
mov
push
lea
jmp
mov
cltd
dec
cmp
pop
icebp
pop
popf
push
das
or
fbld
sub
mov
jl
lods
int
inc
movsl
imul
inc
in
mov
lods
xchg
mov
stc
movsb
xlat
xchg
push
pop
xchg
loope
jb
movsl
xchg
sbb
jmp
popa
and
push
pop
sbb
lahf
jbe
dec
add
and
pop
cmp
or
lds
mov
insb
and
in
in
repz
decb
jns
imul
pop
pop
and
xchg
ret
or
test
add
pusha
ret
sbb
imul
out
sti
js
mov
mov
mov
aas
pop
mov
mov
push
inc
imul
sub
jno
inc
push
fstps
jae
es
filds
je
cmp
jmp
push
call
push
fsubrl
dec
add
add
lea
jmp
push
pushf
lea
jae
shrd
shld
shrd
mov
xchg
bts
add
rol
mov
dec
mov
bt
push
xor
cmp
repnz
pushf
jmp
push
call
adc
imul
xor
sub
add
add
adc
push
add
jl
insl
dec
clc
xor
mov
fdivl
push
push
adc
add
pop
stos
xor
test
rorl
mov
in
mov
ret
ljmp
dec
dec
ss
dec
out
sti
clc
sbb
daa
jbe
xor
ret
xchg
mov
pop
dec
je
inc
out
mov
and
jne
jmp
push
pusha
rep
lea
movzbl
movzbw
mov
pushl
pushf
mov
lea
jmp
push
fnsave
dec
sub
mov
mov
aaa
gs
pop
das
int
xchg
out
insl
fcmovbe
daa
negb
push
std
xchg
mov
xor
xchg
mov
in
cmc
sbb
or
inc
jno
lahf
mov
js
aaa
dec
sti
pop
ror
mull
lret
mov
mov
bound
clc
lds
mov
pop
addb
sti
and
pusha
insb
inc
push
dec
and
mov
cmpsl
push
daa
cmc
ret
mov
mov
pop
jg
popf
add
pop
loopne
dec
pop
out
cs
dec
inc
call
jmp
popf
mov
lcall
scas
out
outsl
int3
pop
add
pusha
loop
jmp
mov
cmp
xor
mov
imul
cmp
stc
addr16
aam
jbe
or
adc
arpl
ficompl
adc
inc
pop
imul
xor
or
cmp
fcomi
lods
xchg
gs
call
xchg
adc
jmp
mov
out
add
xor
cmp
sub
bts
bswap
cmc
mov
cmp
bt
sub
test
call
sahf
xchg
imul
cltd
mov
lods
shrl
sub
mov
repz
cmp
aad
mov
xchg
jnp
mov
js
bound
cmp
jno
mov
jo
sbb
stc
dec
inc
or
pop
lock
das
mov
ss
add
imul
push
push
inc
insl
daa
pusha
push
xor
ficomps
and
outsl
popf
push
pusha
pusha
lea
jmp
add
aam
mov
jecxz
out
push
push
lret
in
jno
jno
or
or
ljmp
pop
popa
aad
pop
test
jl
test
inc
les
out
inc
lret
mov
je
pop
clc
je
loope
mov
loop
movsb
and
pop
test
pop
jne
aad
in
or
xchg
inc
lea
cmp
or
or
mov
inc
aas
dec
jg
fldt
int3
push
pop
call
jmp
or
cmp
iret
les
dec
inc
stos
mov
hlt
sub
nop
mov
popa
lahf
jecxz
or
mov
pop
sbb
cmp
in
cmpsb
push
sbb
xchg
inc
and
mov
mov
imul
push
cmc
mov
inc
int
out
pop
inc
mov
ret
stos
mov
jbe
jns
xchg
sbb
out
lods
sbb
adc
int3
push
push
call
xchg
cmpsb
dec
mov
jmp
push
call
add
mov
or
ret
mov
mov
rclb
and
outsb
adc
sti
shrb
scas
or
mov
pushf
jae
push
or
std
push
dec
jb
mov
xor
enter
mov
call
mov
sub
mov
pop
test
inc
adc
adc
adc
push
and
jb
sbb
mov
mov
and
je
and
xchg
scas
mov
jbe
fnstcw
push
addr16
jecxz
jno
push
imul
jbe
push
add
mov
shr
jmp
call
lea
ja
pushf
and
add
sub
sub
sbb
cmc
mov
pushf
test
mov
clc
cmp
pushf
lea
jb
pusha
cmp
jmp
push
call
add
xchg
mov
jle
mov
or
or
push
mov
xchg
inc
mov
mov
mov
jae
ret
xchg
inc
jns
fcoms
scas
movsl
cmp
jae
jg
mov
nop
add
in
stos
push
push
call
pop
fmull
jmp
jae
stc
stc
push
cmp
movl
pusha
pushf
mov
lea
ja
pusha
inc
inc
mov
mov
inc
sar
bt
adc
adc
xchg
btr
setnp
movzbl
lahf
mov
and
jmp
add
test
cltd
inc
iret
adc
xchg
dec
sub
es
adc
sbb
test
and
jnp
movsb
push
pop
test
addl
shl
push
sahf
enter
pop
mov
xor
jg
std
les
cmp
or
lods
scas
mov
lcall
push
mov
or
lods
movsb
adc
sbbb
mov
add
xchg
jb
and
xchg
jecxz
shlb
bound
es
adc
les
adc
sti
sbb
mov
add
out
ret
leave
fadd
insb
call
test
jmp
push
call
fistps
call
sahf
outsb
inc
ret
lea
mov
ja
jnp
xor
push
insl
repz
mov
mov
xor
cld
addb
imul
inc
andl
cmc
es
adcl
adc
in
cwtl
cmp
shr
and
leave
shll
fcmovnu
pop
es
in
lods
cmpl
das
jl
hlt
add
push
sbb
cmp
mov
xor
mov
mov
bound
pop
and
cwtl
into
fwait
sub
aam
sbb
insb
lods
mov
fiadds
inc
xor
pusha
pop
xor
loope
dec
and
cmpl
sub
mov
pop
xchg
pop
add
xor
sub
inc
shll
fdivrl
test
rorb
and
inc
shll
dec
pop
mov
leave
add
lret
mov
sub
addr16
das
repnz
inc
hlt
loope
rorl
out
push
sbb
mov
jg
movsl
das
notb
jo
dec
inc
sahf
jnp
inc
cs
pop
xchg
das
cmp
sub
dec
jbe
mov
aaa
loopne
stos
and
jne
push
inc
xchg
jbe
mov
inc
call
in
push
mov
dec
test
mov
dec
movsl
adc
mov
adc
xchg
loop
inc
sbb
add
xor
inc
mov
clc
cmc
add
test
fistl
in
fadds
sti
shl
sbb
out
pop
push
xor
rol
inc
adc
andl
adc
lods
xor
mov
jb
xchg
ret
xchg
cmpsb
mov
add
data16
inc
mov
mov
aas
jb,pn
mov
mov
cmp
xor
mov
jnp
shlb
sub
inc
insl
mov
inc
adcl
repz
stos
pop
sahf
mov
sub
nop
shll
sub
mov
mov
or
lds
sbb
push
add
lea
bt
add
pusha
dec
pushf
jmp
pushf
test
cmp
pushl
pushf
lea
jne
pusha
call
dec
imul
nop
push
mul
dec
and
inc
std
ret
movsb
pusha
lcall
in
scas
pop
pop
andl
adc
adc
aam
repz
sub
or
testb
fwait
pop
dec
mov
fistl
jo
mov
loop
adcl
push
cmpsb
mov
mov
cmp
inc
pop
add
or
call
adc
pushf
pushf
push
pushf
pushl
ret
push
call
push
inc
inc
sahf
xchg
push
movl
pushl
call
lea
ja
call
int3
mov
and
jle
xor
dec
jo
aad
jmp
jnp
mov
jb
sbb
inc
ss
outsl
std
loopne
daa
in
pop
xor
scas
jl
popa
sub
lahf
mov
inc
pop
movl
call
sbb
cmpsb
mov
test
sti
cmp
pop
and
push
or
fcomp
shlb
xor
addl
aaa
xchg
mov
inc
aaa
in
mov
dec
into
or
inc
shl
inc
mov
jl
ret
push
lret
testb
icebp
sbb
orl
std
sub
xchg
pop
int3
imul
mov
cltd
sti
push
enter
lret
sub
mov
dec
push
fstp
and
lods
jmp
mov
lea
je
movsbw
mov
push
pusha
movl
lea
movl
call
jne
pusha
pushl
mov
pushl
mov
push
lea
jmp
lahf
pusha
movzbl
mov
cwtl
movl
push
bswap
movzbl
lea
pusha
movb
push
call
fsubrl
fisttpl
adc
sbb
jmp
cmp
cmp
jbe
lods
jecxz
pop
dec
gs
insl
adc
xchg
push
repz
cmp
pop
mov
jle
popf
in
add
xchg
aas
or
fdivp
ficoml
dec
mov
roll
xor
and
imul
jecxz
pushf
lcall
adc
mov
popf
mov
into
jae
xorl
movsb
add
lahf
sti
mov
lock
clc
loope
adc
xor
push
fwait
xchg
xchg
jbe
orl
xchg
ret
cmp
mov
mov
adc
enter
sbb
pop
push
sub
or
inc
jg
and
sbb
mov
ss
and
lea
adc
ret
les
pusha
push
xchg
call
frstor
std
jp
adc
xlat
jmp
inc
mov
cmp
inc
clc
dec
test
push
hlt
shl
cmc
mov
and
scas
jp
pop
mov
add
fs
imul
add
pop
sbb
add
int3
push
cmp
inc
push
push
add
mov
push
call
out
cmp
call
lea
jne
sete
lea
pushf
movb
movsbw
mov
setb
lea
push
movl
call
lea
call
push
push
pushf
lea
jne
push
call
jmp
push
call
push
call
inc
and
jae
mov
fcoml
outsb
push
dec
mov
sbb
mov
fs
add
cmp
dec
mov
mov
test
aas
adc
mov
outsl
cwtl
mov
pusha
push
sbb
fs
sbbl
loop
mov
stos
mov
repnz
dec
jecxz
cmp
pop
add
pop
adc
jno
out
mov
cs
hlt
jo
add
dec
mov
imul
inc
jecxz
inc
mov
outsb
mov
pop
adc
adc
repz
jbe
cld
outsb
in
stos
jecxz
test
cmp
outsl
mov
and
or
mov
cmc
adc
sarb
mov
push
and
imull
mov
lret
pop
inc
jecxz
out
test
test
cmp
stos
xchg
imul
mov
insl
pop
lret
jno
mov
sbb
fst
push
mov
cmpb
pushf
pusha
push
lea
jne
rcr
bt
stc
call
into
xchg
jl
mov
subl
dec
adc
adc
call
incb
fs
push
cmp
subb
xchg
pushf
decl
or
inc
dec
dec
aas
cmp
fiaddl
js
cwtl
icebp
insb
lcall
fs
add
push
and
pop
or
push
orb
mov
movsl
divl
test
test
dec
push
push
cld
pop
insl
jmp
dec
lock
mov
or
aam
add
xor
cs
addr16
xchg
mov
add
or
jl
ljmp
movsl
mov
nop
inc
push
add
and
jmp
sbb
fldcw
dec
add
push
and
pop
mov
pop
mulb
clc
test
and
enter
xchg
mov
cltd
push
in
push
pushf
call
and
xchg
setp
pushf
not
mov
pushf
xchg
mov
pushf
jmp
push
call
mov
and
stos
call
jmp
mov
mov
scas
test
inc
scas
push
jno
pop
shll
movb
call
mov
push
call
and
push
fstpl
cmp
jae
sub
mov
dec
shld
sar
mov
rcl
sar
mov
pusha
clc
clc
call
add
mov
mov
mov
push
mov
out
mov
sbb
xor
mov
pop
lods
daa
mov
mov
movsl
sbb
aas
lods
lahf
mov
jg
ret
lds
stos
loope
aad
insb
mov
movsl
adc
cli
push
adc
sbb
jns
mov
mov
mov
xchg
flds
ds
enter
stos
or
xchg
xchg
cs
pop
xchg
rol
loope
es
jmp
rcr
gs
cmpsl
cwtl
std
adc
out
push
ljmp
cmp
out
sub
jp
in
push
dec
int3
cmc
inc
fwait
punpckldq
mov
xor
cmp
int
jmp
cmc
fucomi
inc
mov
sbb
cmp
inc
and
ret
or
aam
jno
jno
and
lods
nop
repz
mov
sbb
inc
ljmp
jp
mov
lea
push
inc
push
stc
cmc
pushf
push
xchg
rol
lea
cmp
cmc
pushf
mov
stc
call
push
pusha
mov
pushf
pushl
ret
sbb
dec
mov
cltd
cwtl
and
aad
sbb
xor
mov
xor
movaps
stc
mov
sbb
ss
mov
sbb
pop
dec
jl
and
push
cmp
cmp
cltd
ja
mov
int3
pop
fidivl
adc
cltd
ret
mov
outsb
xor
pusha
jnp
mov
ret
jae
dec
sbb
sbb
fdivrs
lret
or
push
inc
call
mov
cltd
inc
mov
les
xchg
mov
div
insl
xchg
xchg
rorb
mov
pop
xor
stc
jle
fists
push
ds
jnp
js
mov
mov
and
dec
bound
repnz
sub
fisttpll
cmp
ret
in
dec
push
stc
data16
or
pop
xor
push
js
scas
call
mov
adc
sbb
add
outsb
jecxz
cmp
add
add
sub
cli
dec
das
mov
cltd
jbe
pop
add
and
pusha
xor
out
popf
xchg
jnp
call
mov
outsl
mov
mov
call
addb
mov
add
out
test
arpl
push
and
arpl
sub
mov
inc
aas
in
je
sbb
stc
fisttps
repnz
xlat
aas
adc
pop
or
xchg
bound
and
mov
das
adc
ja
add
and
inc
mov
xchg
je
lock
push
xchg
cmpsl
mov
sub
mov
cltd
push
pop
je
lods
push
mov
outsb
aad
lret
mov
push
aaa
push
xchg
fisttpl
cmp
fimull
jo
mov
les
pushf
adc
push
mov
pusha
mov
mov
pop
xor
roll
repz
mov
pop
idivl
sub
ljmp
lcall
fistps
pop
mov
jne
mov
jl
mov
lock
xchg
push
push
test
gs
lods
jns
pusha
aad
and
insl
insl
std
mov
insl
jns
jmp
sarl
jo
dec
imul
push
pop
insb
bound
xchg
imul
and
lds
xchg
shll
std
call
dec
xor
gs
notl
jge
mov
mov
insb
popf
and
pop
scas
orb
in
xchg
je
inc
sbb
push
in
jb
xchg
mov
cltd
push
dec
lods
in
add
rep
es
leave
mov
xchg
mov
lds
xchg
test
fs
gs
sub
enter
push
mov
andl
cmpsl
shrl
cmp
adc
cmp
icebp
out
jmp
pop
shlb
ja
jp
lds
push
arpl
popa
push
lcall
gs
or
cmc
lea
mov
inc
push
fisubs
sub
push
xlat
jns
jle
push
and
lods
dec
in
mov
in
imul
cs
cltd
shrl
pop
into
fimuls
mov
xchg
mov
jno
mov
ljmp
sbb
scas
mov
punpcklbw
dec
loope
xchg
mov
or
mov
in
loop
cmpsl
add
out
and
bound
leave
cmove
fisubs
inc
movsl
bound
and
out
dec
jp
bound
push
jne
in
dec
out
in
or
lds
mov
jmp
icebp
mov
fisubrs
jmp
int
orl
pop
insl
mov
add
inc
add
and
pop
sub
fs
in
xchg
jnp
shr
popf
mov
jb
loop
addr16
shrb
hlt
pushf
push
popa
jo
adc
out
mov
stc
lahf
repz
dec
fsubr
mov
mov
mov
and
cmpl
repz
adc
inc
xchg
aad
fs
daa
sub
dec
xor
add
popa
and
jae
js
xchg
jle
sub
and
leave
mov
mov
inc
inc
cltd
scas
movsb
jo
inc
fs
sbb
cmp
sbb
dec
dec
divl
ret
fs
test
dec
cmc
jg
add
inc
sbb
push
dec
loope
popa
jns
xor
subl
inc
mov
push
pop
dec
clc
ss
imul
popa
pop
push
or
xchg
rcrl
cmp
out
or
insb
fs
pop
xor
ds
cmp
fiaddl
jae
sbb
push
mov
jns
fisubrl
mov
dec
inc
dec
ret
mov
add
or
popa
pop
out
pop
imul
fs
popa
sub
mov
mov
out
movsb
fbld
in
dec
imull
aam
cltd
inc
orb
popa
xchg
aas
xor
fistpl
insl
inc
ret
jne
sub
aaa
popa
jno
push
sbb
pop
or
cwtl
inc
loope
jo
cmp
scas
sub
push
push
mov
int
bound
stc
and
popa
js
and
sub
xlat
mov
and
sub
adc
inc
lods
dec
sub
fldt
pop
je
mov
mov
test
fwait
popa
idivb
push
movsl
sbb
popa
popf
dec
out
rclb
adc
test
cmp
xchg
or
mov
popa
push
push
lcall
lock
jecxz
xlat
bound
outsl
es
cld
movsb
sub
mov
jmp
js
popa
test
ja
mulb
mov
pop
pop
int
mov
test
or
adc
rcrb
inc
outsl
push
or
inc
mov
daa
pop
jle
xchg
push
or
lds
sbb
adc
sarl
mov
cmpsl
popf
sbb
cmp
adc
sbb
pshufw
popa
aam
sub
rorl
clc
popa
movsl
or
test
fs
imul
popa
or
stos
mov
inc
sbb
sbb
adc
adc
cmp
popa
sub
push
add
pop
aaa
mov
subl
imul
xor
inc
mov
stc
iret
xor
lahf
pop
lret
es
mov
cli
cmp
sbb
mov
jge
push
lock
les
or
loope
jns
or
sub
mov
popa
inc
pop
in
mov
int3
mov
mov
std
push
js
adc
inc
mov
mov
fiaddl
shlb
call
mov
mov
ds
repnz
or
mov
cwtl
frstor
ret
pop
xor
fsubrs
lret
cmp
lods
sub
je
popa
aas
pusha
mov
sahf
bound
fmuls
jo
jb
xchg
test
dec
xorl
cld
inc
test
addr16
adc
cmp
bound
int3
loop
mov
and
mov
pop
popa
sub
insb
imul
xor
movsb
push
popa
xor
out
ret
sub
popa
dec
push
cmp
fists
into
sub
fisubrs
popa
mov
or
sbb
or
dec
movsl
fsubrl
test
repnz
popa
stos
mov
xor
or
outsl
int3
jnp
jns
jg
ss
push
fnsave
scas
push
popa
scas
mov
nop
divb
jecxz
adc
loope
hlt
fnstsw
adc
stc
negl
add
and
cmp
jo
pop
iret
dec
out
shll
es
cmp
in
xchg
lahf
inc
daa
push
dec
decb
out
push
pop
mov
incb
mov
lcall
push
mov
aaa
sbb
pop
icebp
loope
fmulp
jecxz
hlt
sub
cmpl
inc
mov
cmpsb
arpl
iret
test
int3
aam
pop
loope,pn
lahf
punpckhbw
mov
mov
jns
inc
cmc
inc
mov
out
push
push
scas
rolb
outsl
xchg
adc
stc
push
and
repz
inc
push
insb
dec
xor
lods
out
sbb
cmpsl
push
xchg
into
and
sahf
popa
jp
and
inc
push
loope
loop
enter
and
mov
and
xchg
sahf
mov
jno
rcr
imul
sbb
mov
rolb
scas
sbb
sub
into
sahf
popa
adc
pop
sub
lahf
fs
es
cli
xor
ret
xchg
and
lcall
popa
adc
jbe
or
mov
sbb
add
adc
gs
movsb
mov
push
movsl
out
mov
and
in
in
xchg
imul
pop
scas
xchg
iret
adc
call
popa
fisubrs
jns
popa
jle
sub
fs
lahf
pop
ret
dec
sbb
fmuls
shlb
xor
ja
dec
test
mov
andb
arpl
inc
and
and
popa
je
leave
mov
popa
aaa
in
aad
shll
mov
daa
mov
gs
stos
mov
aas
adc
stos
add
popa
mov
adc
jnp
ds
jbe
in
sub
fs
xchg
lods
xchg
orl
iret
dec
push
and
rcr
adc
xchg
stc
push
inc
popa
push
cltd
and
xchg
iret
add
fdivrp
xchg
push
popa
or
test
push
aas
cmp
xchg
outsb
in
and
in
popa
adc
sub
shr
jecxz
jns
mov
das
sub
sbb
int
pushf
fisttpl
fisubl
or
icebp
insb
call
cmp
ja
out
mov
push
das
sub
fs
xchg
dec
pop
bound
ss
push
cmp
movl
adc
pushf
sbb
sbbl
pushf
arpl
ja
push
cli
popa
lret
mov
popa
mov
outsb
push
mov
cmpb
lcall
les
xor
mov
cmpsb
dec
sahf
sbb
popa
lods
jae
in
movsl
test
push
cs
loope
xor
popa
out
add
orb
sbb
adc
xchg
dec
icebp
mov
and
mov
test
popa
in
pop
movsl
dec
add
shll
aaa
fcmove
push
decl
pusha
aam
lods
shll
jne
flds
or
lret
into
mov
add
rcrb
ss
push
inc
add
scas
jnp
js
sub
sbb
jl
cmp
stos
popaw
in
pushf
mov
jb
enter
and
inc
sbb
lods
popa
add
sub
dec
ret
dec
popa
or
cmpsb
jb
lods
out
jl
imul
call
test
popa
ret
inc
stc
jmp
jge
mov
call
mov
imul
pop
mov
cmpsl
arpl
cmc
push
or
inc
dec
jno
popa
ret
idivl
rcrl
add
fdivrs
fs
cli
mov
and
lock
xor
or
push
pusha
or
xchg
inc
in
leave
mov
testl
fs
jb
loop
inc
aaa
imul
or
jmp
jne
add
inc
xsaves
mov
adc
fwait
jge
pop
popa
mov
lods
jl
cmp
fimuls
addr16
xchg
mov
inc
popa
scas
in
sub
jnp
ret
cltd
mov
fisubl
push
cmp
ljmp
xor
inc
nop
lcall
lock
mov
mov
fs
push
pop
in
cmp
mov
and
call
popa
cld
cmp
insb
inc
popa
push
ss
fisubrs
sarl
jge
lock
loopne
sbb
ret
dec
jle
pop
push
rorl
repnz
mov
fstpl
shll
dec
xchg
jbe
imul
push
or
adc
into
scas
and
xor
mov
cmc
push
addl
sbb
rcl
mov
or
roll
mov
dec
aad
push
divl
inc
and
xchg
pop
in
pop
shll
iret
aas
je
test
mov
sub
out
pop
xchg
imul
stos
mov
loopne
ja
adc
mov
shll
mov
test
insl
jo
dec
cmpsb
ja
adc
fs
outsb
sahf
dec
cmp
dec
hlt
push
int
mov
hlt
and
cmp
out
mov
mov
imul
dec
leave
mov
call
outsb
xor
mov
call
addr16
cli
imul
mov
test
out
pop
leave
fdivp
jns
rcrb
shrb
out
sarl
icebp
leave
out
push
mov
mov
dec
testb
insb
scas
outsb
div
and
dec
push
les
data16
loope
fs
and
cli
into
or
dec
cwtl
inc
rolb
mov
or
jmp
jns
mov
xor
in
test
mov
bound
leave
push
mov
adc
jge
aad
in
cld
js
gs
out
push
inc
jne
inc
push
pop
out
call
mov
inc
inc
mov
hlt
xor
mov
dec
push
lret
out
pop
cmp
imul
xchg
cs
scas
xchg
imul
pop
lret
movsb
xor
push
xchg
jg
in
jo
xchg
mov
movsl
ljmp
scas
lcall
stc
ljmp
cmp
aam
inc
dec
mov
jp
test
ret
cld
es
imul
pop
pop
add
int
push
mov
cmp
inc
les
ret
fidivrl
adc
arpl
stc
std
cwtl
and
dec
pop
insl
xor
mov
jne
pop
ret
jmp
push
inc
sub
push
ljmp
aam
iret
outsl
and
lcall
mov
fs
mov
jnp
cwtl
jl
loope
xchg
or
jnp
je
push
outsb
dec
mov
inc
hlt
sahf
adc
fs
pusha
push
dec
std
mov
jmp
jg
in
sbb
push
xor
lret
mov
and
mov
das
push
in
xchg
xchg
cld
fnstenv
out
hlt
jmp
cmpsb
repz
or
add
lock
test
icebp
mov
lea
jae
mov
iret
fucomp
rorb
or
sarl
testb
stos
into
sub
and
fisttpll
scas
fs
lods
and
push
dec
jecxz
mov
std
daa
int
pop
fistps
scas
inc
xchg
or
add
cli
addr16
add
mov
popa
jmp
test
cwtl
push
mov
push
xchg
sar
fiaddl
call
loope
pop
cmp
pop
jp
lret
fldt
mov
push
icebp
jle
imulb
cld
mov
popf
hlt
mov
or
lcall
and
loope
sahf
jge
pop
test
in
ret
sti
jns
and
movsb
sub
and
lahf
aam
xor
int
faddp
lods
popa
aaa
insl
add
repz
mov
jg
call
mov
popf
lds
outsb
popa
fcmovb
pop
adc
jp
cmp
in
cmp
das
iret
cmp
rcrl
jle
insb
call
ss
pop
jo
mov
push
cmpsl
push
and
popf
inc
sbb
lahf
xlat
lea
les
mov
dec
cltd
push
mov
sbb
cmp
popa
lods
dec
repz
push
mov
bound
push
mov
and
dec
lds
roll
cmp
jo
pop
aad
shl
lret
popa
stc
js
push
jge
sub
pop
out
popf
sub
and
push
into
nop
sub
or
sub
cmp
adc
jge
adc
rolb
fadds
negb
mov
sbb
jmp
popa
fwait
mov
xlat
pop
popa
dec
dec
arpl
shrl
adc
orl
or
fidivrl
int
mov
push
outsb
gs
mov
jp
xor
mov
fistpll
cmp
lds
je
ss
cmp
jnp
fadd
push
shl
outsl
aas
jne
int
call
icebp
xor
fnstsw
cmp
out
popa
push
mov
scas
sub
cmp
or
push
add
and
push
xchg
frstor
sub
sbbb
loope
mov
cmpsl
cltd
mov
popa
jb
cmp
in
sti
dec
popa
sahf
movsl
dec
jecxz
popf
jl
popa
jnp
in
outsl
loop
sbb
loopne
mull
adc
jp
push
hlt
mov
inc
and
aad
cmp
mulb
adc
cld
fimull
push
shrl
sbb
hlt
fs
ljmp
pop
adc
push
adc
loopne
fsubs
inc
popa
divb
test
jnp
sub
add
imul
sub
and
xlat
popa
push
mov
inc
addr16
push
push
ja
jne
popf
jge
aam
das
out
lods
out
ds
loopne
test
and
adcl
jns
push
lods
loope
push
pushl
pop
jo
push
push
gs
add
add
filds
xor
inc
shlb
mov
movsb
pop
xchg
cmp
popa
lahf
daa
data16
and
aaa
cmpsl
mov
in
lahf
pop
out
mull
and
aam
inc
or
test
orb
jg
shll
sbb
stc
punpcklwd
dec
std
mov
mov
in
test
push
or
popf
nop
je
jl
push
sbb
xor
sti
adc
jge
mov
popa
aaa
add
fisubs
xchg
jb
imul
into
pushf
adc
shll
push
cld
mov
sbb
fst
test
fsubrs
mov
xchg
sbb
ljmp
lcall
roll
mov
mov
lcall
cli
out
je
mov
jp
loop
testb
test
mov
lahf
mov
push
shrl
andb
lock
cs
popa
stos
xchg
sbb
js
mov
add
popa
jae
and
sub
inc
pop
pushf
cmc
ds
and
sahf
mulb
jl
mov
jle
insb
mov
out
in
mov
adc
xchg
popa
or
pushf
sbb
push
push
xor
sbb
insb
std
pop
out
loope
lods
orb
popa
push
dec
andl
test
jo
sti
sbb
pop
bound
or
rcrl
pop
inc
jno
scas
ss
loop
imul
push
jno
popa
lods
push
mov
mov
pop
push
stc
mov
popa
xchg
push
fwait
sarb
lock
rorb
mov
cmpsl
vandps
and
mov
mov
int
sbb
call
mov
push
imul
and
fidivl
xchg
rorb
lea
mov
jo
add
loope
xchg
data16
sar
jmp
gs
sbb
lods
bound
ret
stc
lea
add
mov
jge
dec
stos
jnp
cwtl
cltd
sub
insl
mov
shrb
add
int
shrl
fs
lahf
mov
cmp
xchg
movsb
loope
int
es
ljmp
repz
into
imul
jns
std
push
push
sbb
cld
rcl
stc
stos
arpl
out
and
add
leave
jno
pop
and
mov
stc
xor
ja
je
jl
add
pop
movsb
adc
push
dec
loope
and
lods
shr
fnsave
push
lods
xchg
jmp
cltd
and
out
fcomi
xor
sub
das
inc
push
popa
jno
pushf
sub
mov
sub
pop
pop
and
adc
popa
test
iret
push
adc
push
mov
xor
dec
pop
ret
mov
incb
andl
imul
cmp
sti
repnz
cmp
popa
xor
mov
jge
xor
subb
jo
ljmp
clc
flds
test
mov
push
xchg
mov
xor
jle
call
sbb
and
add
lret
dec
xor
cmovnp
ss
mov
jno
repz
xor
fs
jo
pop
and
xchg
jge
push
insl
adc
pop
xchg
das
dec
scas
loopne
es
mov
add
in
cld
mov
cs
sahf
ljmp
push
xchg
push
bound
imul
test
fucomip
mov
push
in
icebp
push
push
xorb
pop
fstpl
rcll
xor
insb
pop
cmpsb
inc
mov
or
dec
test
jg
dec
mov
out
push
insb
xor
or
mov
or
jge
js
outsl
shl
xor
lcall
lret
sbb
mov
es
adc
fldcw
test
repnz
insl
out
idivl
fs
xchg
nop
dec
xor
jecxz
and
pop
inc
popa
out
test
and
pop
dec
das
adc
mov
and
fwait
pushf
push
popa
fadds
xlat
lret
cmc
sbb
mov
fld1
stos
sbb
xchg
push
jo
movsb
jnp
adc
push
loop
imul
adc
cs
jbe
bound
scas
dec
mov
or
popa
and
das
rcrl
mov
sbb
lret
aaa
scas
jns
sub
push
pop
addr16
sti
xchg
out
fimull
ftst
mov
arpl
bound
fsubs
subl
and
das
push
mov
cmp
adc
arpl
mov
sub
outsb
sbb
pop
test
popa
das
push
loop
cwtl
push
cmpl
xor
cmpxchg
push
sbb
bound
cmp
outsb
pusha
inc
xor
pop
cld
fisttps
pop
popa
cwtl
pop
jo
idivb
cmp
mov
cmp
addr16
in
inc
popa
mov
fisttps
fisubl
push
popa
add
imul
outsl
inc
popa
dec
jge
jbe
mov
fldenv
fdivs
cmp
pusha
xchg
adc
inc
pop
ret
mov
mov
lcall
jge
dec
repnz
and
ja
jne
mov
push
pop
out
mov
bound
mov
adc
popa
ja
test
lcall
out
in
scas
repnz
and
cs
mov
adc
maskmovq
bound
shl
cmp
push
mov
jecxz
sbb
push
jmp
push
in
pushl
int3
jns
inc
and
insl
fmull
popa
ds
and
cmpsl
test
push
jg
xchg
in
das
xchg
add
sub
mov
inc
mov
jae
sbb
popa
cmp
mov
ljmp
arpl
popa
subl
xchg
sti
in
add
push
outsl
xchg
xchg
lock
movsb
adc
mov
in
adc
sub
stc
pushf
je
popa
fincstp
dec
mov
sub
jb
dec
outsl
gs
jnp
dec
js
fisubrs
lret
lcall
int
xor
in
inc
popa
ret
add
lds
fwait
pushf
into
loope
adcb
cltd
sbb
mul
dec
xor
popa
sti
jae
xchg
pusha
cmp
mov
or
jle
scas
ljmp
out
push
xor
xchg
popa
shl
add
or
jle
mov
mov
inc
mov
daa
xchg
mov
arpl
pop
fcom
aad
rcl
repz
aaa
mov
push
xchg
aas
xchg
popa
adc
pop
mov
push
xlat
pushl
ja
jle
mov
sub
inc
in
sti
add
icebp
or
int3
dec
ret
shr
movl
shl
jae
js
in
ljmp
stos
mov
add
sub
pop
dec
cmpsb
seta
fstps
inc
xchg
loop
add
fimull
popa
push
scas
out
xchg
xchg
and
in
loope
adc
arpl
hlt
arpl
jl
clc
lock
loop
sub
mov
jmp
sbb
leave
dec
lret
mov
mov
mov
stos
mov
lods
cmpsl
adc
jmp
mov
jno
pop
xchg
ss
mov
xchg
mov
movsb
std
push
sbb
orb
push
out
repz
cmpsb
pop
dec
in
jmp
ret
mov
cmp
cmp
loopne
fiadds
dec
jl
xor
aaa
and
insb
enter
popa
xchg
pop
loop
andb
lods
jns
push
xor
and
pop
popa
ret
nop
pop
ja
sub
test
cwtl
xor
mov
or
std
int
loop
and
xchg
and
out
sub
xor
leave
popa
and
mov
push
enter
ja
in
xlat
adc
xor
addr16
dec
mov
popa
enter
jecxz
and
bound
cmp
xor
popa
in
cli
mov
push
popa
fmuls
test
mov
das
fisttpl
jnp
leave
insl
fcmovbe
push
testl
adc
push
pop
mov
cmp
gs
inc
vdivss
insb
test
cmp
add
cmp
hlt
scas
jnp
mov
dec
negb
fsubl
jo
pop
scas
loope
imul
popf
mov
fs
jo
mov
popa
cld
sub
jmp
push
push
popa
test
iret
notl
icebp
pop
fmull
xchg
js
cmp
aad
popa
std
ret
push
and
pusha
push
test
and
rcrl
inc
pop
loop
sbb
bound
mov
mov
test
mov
xor
loope
popa
insl
jb
mov
mov
lahf
outsl
xor
sbbb
std
and
xchg
mull
enter
cld
push
sbb
repnz
into
ljmp
push
fistpl
popa
test
cmp
push
popa
mov
arpl
test
fisttpl
loope
mov
fucomp
cwtl
rcr
sbb
clc
adc
cmc
mov
popa
dec
repnz
jo
mov
in
out
cwtl
jg
scas
test
cmpsl
pushf
aam
popa
push
sbb
push
xchg
xor
sbb
add
push
add
push
adc
popa
xchg
arpl
pop
xchg
std
inc
mov
inc
loopne
pusha
in
ds
sbb
sbb
popa
jb
mov
imul
popa
out
xchg
dec
in
ds
out
popa
cmp
loop
adc
movsb
mov
push
push
mov
lahf
imul
mov
test
lret
cmpsb
into
sub
xchg
inc
inc
adc
popa
lock
dec
test
aas
lret
popf
add
int
mov
popa
std
xor
cmp
or
sub
mov
lods
xchg
rorl
lds
dec
in
push
pop
popa
push
inc
jnp
lret
adc
lods
cmp
lods
push
jp
mov
popa
ficomps
mov
cmp
popa
sub
add
popa
outsl
test
popa
dec
jns
sti
rcrl
mov
cltd
popa
mov
mov
loope
out
test
inc
jecxz
xor
je
xor
fisubrs
add
mov
sbb
sbb
icebp
lea
imul
jmp
in
or
insl
shl
ss
push
popf
cli
js
adc
jns
daa
cltd
jnp
jae
sub
idivl
scas
cmp
xchg
fs
push
mov
jp
inc
repnz
popa
test
xchg
xor
arpl
add
sahf
sbb
xchg
rcll
outsl
andb
arpl
mov
insl
popa
or
cmp
fs
pop
aaa
push
cld
mov
jnp
push
jb
rcll
pop
cmp
dec
arpl
mov
mov
movsb
push
mull
and
xchg
popa
mov
cmpsb
cmp
lret
cmp
fldenv
and
loope
popa
push
mov
pusha
ficompl
sub
out
movsb
adc
sub
pop
mov
sub
or
pop
mov
sbb
lret
aad
ss
push
test
and
pop
addb
ret
xor
inc
popa
cmp
inc
add
gs
cmp
cmp
fadds
xchg
cs
cmp
jp
inc
cmp
push
fisubs
js
fisubrs
popa
jns
dec
push
mov
rolb
sbb
out
jnp
xchg
mov
push
test
int
imul
rcll
inc
lods
add
popa
andl
mov
out
out
push
add
and
outsl
fidivs
xchg
and
sub
sbb
or
test
popa
std
adc
jae
adc
sub
pop
mov
push
fidivl
shlb
imull
pusha
and
lods
idivb
popf
out
fsubs
pop
shl
outsb
popa
cmp
fimull
push
popa
mov
ss
inc
xlat
dec
mov
dec
mov
add
popa
sbb
mov
cmp
je
pop
push
popa
jb
sahf
push
fsubrl
in
fadds
int
xchg
add
xor
push
fs
data16
es
pop
push
arpl
test
outsb
xor
sub
sub
push
add
test
xchg
in
pop
loope
push
mulb
ja
dec
xchg
popa
out
jmp
bound
adc
mov
add
in
repz
insl
fs
cmp
insb
xlat
jg
shlb
cvtps2pd
addb
and
sub
xchg
mov
push
or
jns
int3
les
dec
add
andb
push
or
cli
sahf
es
xor
ljmp
loop
daa
rcrl
popa
pop
or
nop
popa
mov
mov
mov
bound
sbb
xchg
nop
mov
cmp
loope
loop
scas
mov
loope
inc
add
add
fs
leave
repz
xchg
add
popa
fcomip
inc
xchg
insb
cmp
outsl
cld
xchg
popa
mov
mov
sbb
cmp
lahf
mov
sbb
sbb
test
mov
mov
inc
mov
lods
xadd
rorb
dec
jmp
jge
jnp
sbb
sub
clc
popa
dec
hlt
jne
mov
mov
addr16
xlat
adc
mov
mov
push
inc
loop
adc
inc
ljmp
out
lcall
popa
or
jo
repnz
insb
gs
rclb
sub
mov
adc
outsb
popa
mov
inc
push
xorb
xor
mov
pop
jne
cmp
dec
pop
fsubs
icebp
pop
dec
adc
dec
mov
pusha
dec
adc
popa
fiadds
pop
fs
dec
dec
and
scas
es
mov
push
psubb
popa
fs
loopne
iret
mov
mov
cs
jae
ss
bsr
pop
sbb
mov
popa
mov
add
sub
lds
andl
out
insl
rolb
popa
into
xor
out
jo
test
push
push
popa
cmp
add
dec
push
push
lea
popa
aaa
pop
xchg
imull
test
dec
sub
sbb
lds
dec
mov
or
aaa
cmp
nop
shlb
dec
popa
ficoml
ficomps
pop
loopne
mov
out
popa
jg
cmp
inc
popa
into
ret
sbb
mov
and
push
popa
xchg
push
cmp
pushf
cmp
stc
scas
lcall
je
jmp
adc
or
jmp
popa
xchg
or
enter
test
mull
push
outsb
aam
sub
and
push
adc
popa
sub
orl
incl
aaa
push
insb
xchg
pusha
es
popa
mov
shrb
popa
jmp
mov
hlt
mulb
ret
subw
pop
out
inc
sub
rorb
or
popa
es
inc
mov
lahf
cwtl
mov
mov
dec
in
popa
sbb
or
aam
popa
or
mov
push
lret
popa
leave
in
inc
shlb
pop
jge
pop
mov
sbb
leave
outsl
jecxz
pop
fadds
dec
lds
mov
rolb
arpl
ja
shrl
mov
mov
aad
cwtl
push
popa
add
frstor
xchg
mov
adcb
cld
cwtl
sbb
dec
in
jg
lret
je
mov
mov
scas
lock
push
dec
or
jne
incb
rcrl
ljmp
repnz
outsl
dec
jo
arpl
push
add
leave
or
sbb
fimull
loope
cmc
jl
clc
mov
sub
and
sar
ja
ss
daa
xor
mov
lcall
ljmp
test
sbbb
ljmp
jp
pop
punpckhdq
dec
cld
mov
loop
mov
pop
imul
or
cld
orb
and
idivl
push
jns
jno
shll
sub
and
or
jmp
leave
add
enter
pop
insl
in
dec
inc
flds
rcll
xor
mov
jnp
pop
out
mov
adc
shll
in
nop
ret
loope
and
push
cmp
mov
lock
sahf
fcompp
fiaddl
repnz
sub
cmp
popa
dec
in
jp
icebp
add
aad
loop
push
cmpsl
push
adc
push
cmp
int3
jno
jl
sub
and
dec
mov
push
sbb
insl
clc
fs
sub
adc
sti
arpl
out
xchg
fs
push
popa
or
mov
jne
dec
add
aas
daa
sub
lods
push
pop
popa
arpl
push
inc
popa
sbb
pop
je
iret
lock
inc
outsb
dec
js
mov
popa
mov
xchg
popa
xor
aas
dec
adc
dec
push
insb
mov
sbb
xchg
pop
popa
loope
pop
cmpsb
popf
test
out
adcb
push
jle
enter
mov
adc
add
popa
fcmovnb
les
inc
xlat
popa
xor
sub
push
add
out
popa
les
xchg
mov
add
dec
jg
test
or
mov
and
dec
xlat
add
inc
and
fisubrs
mov
ss
popf
ret
in
mov
popa
out
jecxz
pop
lods
mov
and
cmp
fiaddl
push
xchg
shl
mov
call
popa
cmp
jb
sub
push
mov
popa
dec
inc
add
fs
jnp
mov
sbb
or
xchg
jmp
in
jle
clc
in
loopne
ss
sbb
aam
adc
jns
iret
and
fistl
popa
or
fldcw
dec
xchg
xchg
and
fdivl
mov
fsin
andl
dec
mov
ljmp
cli
push
lret
sbb
insl
sbb
popa
sub
lods
mov
push
adc
clc
jb
push
sub
cwtl
lds
movsl
popa
pop
cld
cli
jo
data16
stc
popa
cmp
mov
sbb
cmp
push
out
mov
loopne
dec
xor
fwait
xchg
xchg
leave
ja
dec
repnz
pusha
push
lods
popa
test
mov
fucom
mov
loope
xor
out
call
rcll
popa
sub
inc
insb
push
sub
push
xchg
or
mov
sbb
inc
fwait
mov
push
sti
popa
adc
sahf
lods
mov
ja
sbb
cwtl
popa
sbb
jge
and
sbb
out
sti
push
int3
mov
push
inc
lcall
push
popa
aam
and
out
mov
adcb
jecxz
and
dec
leave
popa
mov
fisttps
sub
popa
fsubrs
dec
insl
sbb
mov
xchg
lahf
or
dec
frstor
mov
add
test
jnp
mov
bound
inc
cmc
xchg
or
inc
test
adc
adc
fwait
ss
or
popa
jno
cmpsl
in
shl
shll
xor
call
pop
or
bound
shl
xor
jns
sahf
push
mov
cmp
fucomip
push
ja
push
jg
cld
mov
sbb
out
popa
pop
ljmp
bound
xor
dec
out
and
ja
adc
jo
es
sub
das
and
popa
fsin
negl
popa
xchg
dec
mov
cmp
stos
push
inc
sbb
scas
lret
lret
outsl
adcl
aam
adc
pop
adc
ror
sbb
inc
sarb
and
sub
test
dec
jle
dec
dec
shlb
jo
dec
add
leave
clc
pop
xchg
bound
shrb
push
aad
popa
add
test
cltd
push
movsl
lahf
stos
rolb
jns
call
shlb
push
and
dec
cmpsb
and
push
lret
add
sbb
dec
popa
das
insb
jnp,pn
mov
shrb
inc
inc
inc
adc
cltd
popa
pop
dec
loopne
cmp
add
in
aaa
stos
push
push
mov
adc
xor
nop
loope
movsb
and
frstor
sbb
es
dec
jnp
int
cmp
jge
mov
xor
add
fstpl
fwait
je
loope
test
push
pop
push
pop
push
push
inc
scas
aam
jle
mov
loopne
mov
xlat
mov
ret
push
and
in
les
jmp
js
arpl
jae
ja
xor
add
sbb
lcall
sbb
loope
roll
xchg
aas
mov
popa
shrl
mov
and
fiaddl
es
xchg
mov
adc
movsb
inc
cmpsl
and
cmp
lea
xlat
ret
je
hlt
sub
mov
popa
rorb
mov
cltd
ja
bound
pop
daa
das
xor
add
arpl
rcl
pop
popa
lahf
or
xor
out
push
lcall
add
sub
mov
cli
popa
iret
shr
icebp
adc
movsb
popa
push
jmp
loope
popa
rcrl
jo
and
popa
push
mov
xchg
xor
popa
leave
ss
jnp
mov
pushf
fisttpl
jns
pop
jo
pop
push
popa
fucomp
test
dec
int3
imul
dec
insb
pop
xchg
mov
sbb
mov
bound
jbe
mov
loope
jle
cli
inc
rol
popa
and
add
adc
push
sub
repz
push
or
sbb
movsl
scas
pop
loopne
xor
and
xor
loope
mov
sbb
dec
bound
rclb
mov
popa
insb
inc
xor
test
sub
das
nop
pop
enter
in
shl
loope
fiaddl
xor
mov
fisubs
fdivl
dec
push
cmp
dec
jne
orb
add
popa
jmp
pop
xor
jge
cmp
cltd
push
adc
mov
lock
popa
adc
dec
cmp
int
popa
out
imull
sub
mov
or
jno
loope
addr16
dec
pop
popa
mov
or
enter
int
jo
cmp
std
push
popa
jnp
adc
ds
popa
cmovs
mov
iret
lret
jecxz
pusha
or
jge
les
orl
popa
idiv
add
push
popa
movsb
fisubl
or
mov
jp
in
popa
scas
frstor
xchg
popa
aas
jbe
and
mov
and
mov
insb
lret
loop
lds
push
or
push
rcll
sbb
pop
sub
xchg
popa
rorb
pop
shll
mov
jg
popa
sub
ret
mov
ss
jae
inc
jecxz
jp
xchg
testl
push
imul
lret
push
shll
fwait
shl
xchg
adc
popa
sub
push
ret
popa
aas
imul
mov
cmp
mov
pop
cmp
movb
sub
popf
mov
mov
dec
mov
push
xchg
pop
lcall
lods
faddl
and
inc
mov
inc
arpl
popa
xor
fwait
je
mov
hlt
or
sqrtps
pushf
mov
sbb
pop
popa
mov
jl
lods
popa
jmp
mov
jo
cs
dec
ret
jne
inc
jecxz
popa
insl
rorl
push
dec
out
fs
push
push
out
and
popa
mov
and
lret
sub
mov
or
fdivrp
flds
loope
hlt
arpl
and
outsl
add
or
lods
cli
push
movsb
andl
arpl
notb
insl
mov
push
iret
xchg
outsb
popa
in
aas
sub
xchg
cs
in
stc
push
mov
insb
add
hlt
sbb
pop
xor
popa
mov
inc
and
xchg
xchg
fnsave
sahf
lea
pop
out
int3
in
lret
jno
popa
inc
stos
sub
ja
popa
fs
or
pop
lods
fldcw
pop
or
cltd
xchg
loopne
call
dec
popa
mov
mov
in
cmp
scas
pusha
loope
sub
push
fnstenv
and
loope
mov
popa
xor
jg
jmp
enter
lods
jl
dec
jno
add
add
ljmp
add
xchg
shl
rcll
jmp
nop
cmpsl
popaw
ds
push
xchg
popa
fcmovnbe
lds
dec
dec
lods
adc
dec
pop
push
cltd
popa
gs
pop
cmp
jo
lea
popa
and
aam
repnz
jl
mov
dec
out
mov
test
and
out
jmp
sarb
rcr
orl
adc
jecxz
inc
out
inc
enter
xchg
scas
rol
mov
popa
into
pop
cld
jmp
xchg
dec
add
add
and
adc
shl
pop
jl
mov
push
pushf
fs
inc
fs
add
cwtl
or
test
xor
inc
cmp
in
push
push
push
push
dec
cmpb
jo
std
adcl
xchg
stos
xor
cmp
loop
sbb
xor
ret
xchg
mov
stc
mov
cltd
dec
mov
mov
adc
into
je
cmp
lea
ja
or
aas
dec
mov
lret
cmpsb
out
cli
in
jb
arpl
push
jnp
pop
andl
popa
push
and
lds
popa
enter
cmovp
rcll
push
ret
xlat
iret
inc
sbb
ljmp
cmp
dec
jle
out
push
daa
push
mov
andb
xor
mov
inc
inc
popa
pop
mov
mov
in
ret
out
jmp
cmpl
test
fldenv
insb
pop
and
cmp
popf
arpl
fwait
mov
movsb
mov
out
in
cmp
push
xchg
jno
lods
push
data16
jge
mov
loope
mov
out
fwait
push
ret
cltd
and
add
pusha
fs
mov
mov
fwait
sub
imul
jmp
lret
out
push
pand
pop
popa
std
xchg
adc
adc
outsl
inc
fwait
stc
and
in
popf
addl
mov
xchg
sarl
adc
clc
mov
mov
sub
push
popa
subb
cmpsl
subb
jb
fisttpll
ror
cmp
or
add
popa
out
dec
stos
mov
lods
mov
and
bound
pop
cmpsb
repz
ret
cwtl
pop
popf
test
xchg
ljmp
cs
int
sub
mov
fistpl
mov
fimull
into
sbb
pop
jns
mov
in
inc
cmpl
push
out
popa
pop
dec
mov
rcrl
int
aam
mov
or
pop
cmp
cmp
sub
mov
sti
fsubrs
popa
sarl
aad
bound
out
out
popa
jbe
sar
mov
pop
fs
sub
cld
imul
int3
sbb
lret
lahf
cwtl
popa
xchg
repz
out
popa
sub
lods
repnz
scas
int3
arpl
dec
mov
cmp
orb
jp
call
stos
mov
test
mov
popa
cmc
idiv
mov
cmp
adc
aaa
cli
je
sbb
or
scas
push
jnp
popa
pop
pushf
xlat
adc
arpl
cltd
fimuls
loope
insb
imul
sub
arpl
fs
sub
loope
jbe
popa
stc
inc
mov
inc
mov
sbb
inc
push
inc
shll
inc
into
popa
sub
mov
enter
fisttpl
and
jp
insl
mov
cmp
push
popa
repnz
push
loope
push
lea
adc
mov
test
aad
stos
lock
aas
in
lcall
mov
pushf
xchg
dec
jo
popa
adc
into
cmp
js
mov
jae
leave
push
fstp
rcrl
popa
dec
ds
enter
test
ss
xchg
or
popf
push
inc
xchg
lret
pop
adc
popa
jle
dec
mov
popa
lret
icebp
or
xor
popf
push
leave
in
mov
dec
mov
jbe
fisttps
push
fcmovnb
subb
jb
push
adc
inc
int
pop
lock
jle
test
adc
cmp
pop
and
ja
lret
xchg
and
cmp
xchg
push
and
das
push
cwtl
jg
lcall
clc
inc
andb
loope
mov
iret
adc
les
pop
jns
xor
mov
shlb
sub
imul
and
fnsave
dec
popa
or
cmp
shrl
mov
fcmovnbe
pop
test
pop
ret
push
out
call
and
or
mov
add
lods
mov
insb
lahf
dec
sub
push
dec
imul
imul
xor
arpl
mov
arpl
pop
in
test
pop
dec
dec
xchg
out
repz
lret
shll
adc
cwtl
mov
std
push
out
dec
mov
xchg
js
loope
lds
adc
dec
popf
mov
dec
add
iret
insl
aam
popa
mov
push
cwtl
stos
popa
mull
out
mov
xchg
popa
mov
push
mov
lret
add
in
mov
pop
xchg
bound
es
popa
insl
popf
xlat
or
xor
pop
adc
call
push
xchg
imull
jge
mov
and
cmp
lahf
xor
pop
gs
int3
sub
adc
or
mov
jae
roll
jl
adc
cmp
mov
xor
popa
lock
cmp
in
jecxz
repz
fs
sbb
mov
popa
cmpsb
or
popa
and
fstpt
popa
stos
clc
test
lods
mov
sub
test
mov
js
std
mov
jae
sub
lods
sti
das
cmp
xor
stc
pop
jl
sbb
popa
es
adc
popa
clc
cld
push
pop
movq
pop
popa
arpl
jo
insl
test
inc
popa
add
adcl
cmp
stc
lahf
mov
popa
sarb
inc
mov
popf
xor
mov
imul
push
mov
popa
push
es
bound
pop
dec
lods
sbb
mov
mov
cmp
bound
adc
mov
popa
sbb
js
ror
lods
popa
pop
mov
jo
and
jnp
inc
rcrl
nop
popa
iret
ds
or
loop
sbb
push
mov
mov
xchg
das
jb
popa
xor
imul
les
push
pop
inc
sahf
mov
push
popa
ds
popa
arpl
jnp
into
pop
imul
scas
cmpsb
ja
inc
test
mov
xchg
dec
popa
pop
idiv
sub
popa
inc
inc
rclb
popa
xchg
movsl
bound
pop
roll
ret
sbb
jne
stc
sbb
xchg
fs
int3
pushf
popa
ljmp
mov
mov
mov
dec
hlt
jg
addb
cmpsb
ds
mov
mov
int
fdivs
jno
loopne
xchg
arpl
pop
aaa
mov
outsl
inc
movl
rcll
ret
insb
inc
add
push
bound
mov
outsb
popa
push
inc
das
xor
cmp
dec
popa
je
lahf
leave
mov
fisttpl
nop
fsubl
mov
and
sbb
shlb
stos
out
xor
fcoms
add
jns
or
stos
xor
icebp
leave
popa
xor
or
xor
aad
popa
gs
jo
jb
mov
movsl
fs
testb
clc
stc
pop
pop
mov
ret
jmp
loope
sbb
mov
xor
push
jg
sbb
and
push
iret
mov
pushf
pop
out
loopne
jmp
sbb
popa
jns
shr
cmp
test
jle
or
jg
or
lods
jne
push
jo
incl
mov
and
icebp
jmp
sub
test
lahf
aas
popa
jg
fisttps
icebp
mov
lret
inc
fmull
push
mov
test
push
clc
dec
push
stos
add
inc
es
sti
jecxz
inc
pop
adc
sub
popa
or
lock
sbb
ret
in
jl
or
adc
lock
pop
popa
cmp
inc
mov
xchg
jle
sbb
andb
or
push
jo
cmpsl
jo
notb
hlt
popa
add
loope
call
mov
mov
ret
test
mov
jmp
push
jb
sti
cli
cmpsl
leave
xchg
xor
sub
xor
cmp
popa
jnp
fld
mov
fnstsw
cmp
popa
mov
jl
sbb
gs
pop
popf
mov
inc
jge
pop
adc
dec
fs
loopne
insl
lcall
pop
mov
sbb
js
lea
push
call
data16
sbb
xchg
andb
and
insb
inc
mov
loope
xor
inc
fisubs
pop
popa
inc
inc
push
adc
mov
ljmp
or
adc
xor
add
pop
outsl
push
pop
xchg
ds
loope
into
cmp
fwait
ljmp
les
xchg
popa
or
fwait
jnp
dec
sub
xor
xchg
push
pop
call
push
or
dec
jno
push
and
std
mov
aam
xchg
bound
add
insl
jecxz
sub
adc
mov
popa
and
enter
cmp
bound
mov
mov
mov
dec
jno
cmp
sarl
out
jo
int3
mov
xor
outsb
popa
loop
sbb
push
out
push
cwtl
jno
xchg
rcrl
cmp
xchg
push
repz
bswap
aas
adc
cmp
jle
push
xor
test
push
popa
ja
xchg
lret
shlb
aam
insb
cltd
mov
sub
bound
xchg
lahf
push
repz
mov
loope
mov
and
or
jns
mov
push
ror
cltd
cmp
ljmp
sub
imul
pushl
jle
in
sti
sbb
movsb
pop
dec
ret
ret
popf
or
outsl
imul
in
popa
scas
lcall
and
add
loopne
outsl
ds
fsubp
pop
movsl
ret
and
xchg
cmp
outsb
inc
aas
int
fs
inc
xchg
pop
cld
dec
cmp
loope
sbb
loope
int3
into
mov
inc
adc
and
lods
and
mov
sarb
ljmp
xor
mov
movsb
mov
xchg
mov
push
shlb
ljmp
push
in
cmp
shrb
adc
inc
push
mov
loop
fsubrs
jmp
fwait
andl
pop
xorl
cmp
jno
sbb
jge
jne
xchg
inc
inc
adcb
cmp
jmp
mov
push
mov
pop
xchg
ljmp
dec
loope
jp
cmpsl
push
pusha
mov
fadd
subl
inc
jmp
popa
jecxz
jle
jne
xlat
pop
popa
mov
lea
cmp
and
and
inc
popa
out
insb
mov
inc
pop
lea
pop
mov
repnz
mov
add
push
sbb
aam
mov
push
loopne
lret
mov
add
cs
int
ja
aad
push
lods
popa
pusha
mov
jmp
fsubp
mov
add
inc
jle
aas
test
into
mov
push
fs
jmp
pop
mov
bound
mov
cmp
sahf
loope
pop
mov
bound
xchg
scas
andl
mov
cmp
stos
data16
adc
cmp
fisubl
shll
std
cs
mov
dec
scas
mov
jnp
popa
mov
in
fildll
hlt
popa
push
mov
je
popa
es
push
jb
sti
pop
hlt
mov
and
in
mov
mov
pusha
sub
mov
imulb
cld
popa
int3
add
pop
adc
jbe
in
shrl
popa
jns
aaa
or
mov
xor
add
push
jns
fcomps
and
mov
fwait
mov
pop
popa
and
or
mov
pop
scas
pop
es
loope
stos
xchg
jo
push
mov
popa
xchg
mov
ror
je
cltd
pop
imul
and
add
loope
rcrl
imul
inc
adc
popa
aaa
xchg
sbbb
mov
and
push
jns
or
and
inc
push
lret
pop
stc
aad
xchg
imul
fbld
mov
popa
repz
jg
lds
mov
jbe
sub
add
aad
test
xchg
dec
popa
dec
js
fnstcw
fs
xor
cwtl
xor
popa
cli
jge
in
fsubr
dec
dec
or
call
bound
mov
pop
sahf
dec
mov
pushf
xor
pop
bound
xchg
in
lea
cwtl
pop
mov
pop
xchg
fisubrs
fcmovne
jo
lret
mov
xor
mov
jge
dec
sbb
insb
jmp
hlt
adc
mov
fistpl
or
fs
out
jb
push
loop
lods
adc
pop
sub
dec
push
fmulp
outsl
enter
icebp
add
mov
inc
loope
mov
rcrl
scas
and
ja
insl
fldl
cmpl
std
loopne
pop
and
add
dec
popa
jo
xor
jg
aas
aam
lret
push
int3
cmpsl
mov
insb
nop
mov
dec
fdivrp
push
pop
outsb
mov
std
sbb
xchg
mov
scas
mov
shll
stos
rclb
imul
xor
xchg
push
mov
cltd
mov
jecxz,pt
mov
icebp
mov
dec
mov
ljmp
dec
xchg
pop
jecxz
in
cld
xlat
cltd
imul
andb
dec
cmp
mov
in
je
fnsave
push
fwait
xor
lods
std
sub
into
stos
mov
pop
jo
icebp
adc
xchg
pop
gs
in
mov
shlb
loop
rclb
test
jle
lds
iret
addr16
mov
imul
not
cmpsb
and
repnz
icebp
sti
dec
mov
lods
pop
add
ret
jo
das
std
pop
bound
pop
loopne
pop
cmp
int
xchg
cltd
sub
xchg
pusha
ret
dec
lds
dec
mov
xlat
or
pop
faddl
imul
test
xor
clc
mov
jno
out
mov
int3
add
stos
shrb
push
dec
sti
mov
sub
popa
sub
xlat
repnz
xor
push
fildll
repz
test
fldenv
aaa
mov
mov
mov
inc
into
loopne
pop
imul
xchg
shr
fyl2x
or
and
mov
mov
and
aad
xor
xchg
iret
or
xor
ljmp
test
jp
popa
mov
shlb
in
rclb
xor
rcl
inc
xor
movsb
add
and
or
and
pop
sbb
popa
mov
xchg
mov
add
add
adc
movsl
pop
loope
xchg
or
stc
cmpsb
popf
inc
imul
pop
je
std
mov
mov
mov
roll
daa
push
lret
dec
arpl
cmp
es
push
push
popa
mov
aas
popa
cmpsb
dec
jmp
lock
jecxz
push
jnp
sahf
inc
sar
mov
lret
stc
lods
shrl
mov
movsl
xchg
insb
sbb
add
and
rcll
ja
lret
int3
adc
test
imul
inc
push
jo
jno
jp
jne
add
and
sbb
xchg
adc
popf
out
rolb
inc
pop
lahf
jg
jp
cmp
or
dec
insl
adc
popa
mov
xchg
mov
ffree
das
sub
dec
sbb
popa
mov
pop
cmc
movsl
dec
insb
jo
out
test
jno
insl
xchg
outsl
popa
rcl
sbb
das
test
pop
xor
push
pop
jno
push
cmc
xchg
outsl
cld
push
cmp
in
cltd
bound
jns
rorl
cmp
in
or
stos
mov
jno
cwtl
mov
popa
nop
jmp
or
in
xor
pop
je
push
imul
iret
dec
into
sbbl
sub
in
xchg
mov
popa
mov
repnz
xchg
shll
call
push
sub
push
xlat
jp
mov
sbb
cs
adc
inc
stos
popa
int3
fdivrs
push
popl
movsb
or
adc
xchg
adc
push
arpl
cs
xorl
xchg
inc
popf
int
movsb
dec
fs
iret
mov
sbb
sub
rcr
shrl
pop
popa
repnz
imul
sub
cld
pusha
pop
pop
or
sbb
sbb
jne
popa
fnstsw
sub
pop
popa
aas
std
dec
in
mov
xor
inc
and
loope
add
iret
outsl
jmp
or
and
push
adc
in
sbb
mov
popa
cmp
mov
fsts
aam
popa
jmp
jnp
test
fnsave
sub
inc
mov
pop
lods
arpl
leave
dec
rorb
lret
lock
mov
dec
adc
in
cltd
pop
mov
popa
lock
sub
or
sahf
jnp
bound
push
xor
popa
cmc
mov
xchg
jg
adc
and
dec
sbb
insl
pusha
popa
xchg
jmp
imulb
movsb
shll
mov
inc
popa
movsl
xor
sti
je
adc
dec
cld
push
mov
push
mulb
popa
add
ror
and
jmp
cmp
stc
push
popa
dec
jno
filds
scas
popa
loopne
lcall
mov
aaa
jnp
jmp
or
and
and
icebp
lds
mov
or
push
mov
out
es
popa
pop
mov
dec
shlb
movsl
adc
iret
pop
mov
add
stc
lret
cwtl
add
and
scas
out
fsts
add
gs
bound
xchg
imul
jg
popf
mov
and
dec
repnz
mov
cli
and
pop
jnp
mov
adc
push
in
data16
fs
xor
pop
pusha
and
xchg
pop
out
bound
mov
pusha
xlat
test
sbb
mov
leave
xchg
mov
popa
stc
jmp
sbbl
and
mov
push
dec
aam
popa
scas
xchg
pop
push
or
mov
adc
pop
dec
or
outsl
andl
inc
into
popa
fdivr
pop
push
rorb
push
cwtl
sarl
out
sub
cmc
leave
or
int
add
adc
dec
std
xchg
push
dec
test
fsubl
in
mov
sbb
fcoms
out
and
test
dec
add
or
dec
in
inc
adc
lds
shl
pusha
loop
dec
xorl
mov
and
fcom
popa
lods
es
push
jl
lea
shll
jo
xor
popa
neg
mov
push
arpl
and
mov
inc
push
or
mov
clc
inc
mov
cmp
or
adc
popa
out
dec
arpl
sahf
sub
jle
mov
add
popa
add
sub
mov
fidivrs
xor
inc
mov
lahf
adc
cmpsb
movsb
cmp
scas
jle
popa
fs
mov
lods
and
inc
outsl
jb
mov
rcr
sub
out
fidivrs
loope
cmp
push
popa
filds
dec
inc
xchg
add
xchg
popa
fmuls
std
push
rcll
xor
pusha
fwait
in
dec
popa
idivl
adc
dec
push
inc
sub
sbb
push
sbb
push
fldenv
aam
push
xchg
aad
push
lcall
out
fildll
cwtl
dec
bound
jno
in
ffreep
popf
sbb
adc
mov
lahf
jae
cltd
xor
adc
in
popa
rcrb
dec
xchg
cmp
or
fldt
dec
mov
cltd
push
cmpsl
loop
mov
sub
popa
hlt
push
or
inc
orb
cwtl
add
fcoms
or
cli
and
test
out
insb
inc
and
mov
cs
dec
and
cmp
loope
lods
dec
fdivr
clc
and
fwait
ret
push
imul
xor
test
outsl
mov
or
pop
sub
mov
xor
push
sbb
cli
loop
mov
shlb
jge
or
popa
jo
inc
clc
xchg
cmp
pop
insl
repz
xchg
inc
pop
jle
mov
jle
xor
popa
push
push
call
sub
repnz
inc
sub
mov
inc
out
fs
mov
pop
lret
leave
xor
data16
and
cs
popa
test
xor
punpcklwd
mov
insb
popa
rol
outsl
nop
mov
int3
repz
inc
sub
popa
aaa
je
mov
popa
fadd
ljmp
dec
cmp
pop
fdivl
bound
xor
shrl
fstps
pop
ljmp
xchg
ljmp
scas
push
push
and
lret
fsubr
mov
push
pusha
jge
pop
lahf
fs
pop
test
jmp
xchg
popa
sbb
or
mov
push
imul
stos
sbb
fsubrl
cs
loopne
jle
out
and
sub
push
in
gs
fstpl
insb
and
or
andl
lds
aas
cmpl
and
mov
mov
fisubs
cmp
push
pop
loope
mov
popa
mov
inc
movsb
push
mul
repnz
add
aaa
imul
fiadds
jns
andl
inc
push
inc
dec
outsb
mov
faddp
data16
dec
and
repnz
mov
mov
add
pop
test
arpl
jae
sub
in
inc
dec
ljmp
and
mov
mov
popa
jecxz
rorb
cmpsl
mov
fs
les
inc
inc
and
lds
xchg
mov
sub
out
fbld
push
cmp
mov
ja
push
mov
les
jecxz
mov
sbb
xchg
cld
popa
add
lds
popa
jmp
jne
imul
out
popa
std
ds
fs
inc
das
pop
push
or
dec
js
scas
popa
les
bswap
add
bound
lahf
stc
in
jns
and
xchg
arpl
subl
mov
adcb
in
jns
popa
out
push
mov
sub
xchg
outsl
cmp
push
and
rcrl
xchg
test
sbb
sbb
insb
cmp
pop
loop
inc
push
popa
fisttps
jl
inc
xchg
shll
nop
std
and
pop
add
loope
in
outsl
pop
push
mov
lea
test
sub
leave
push
sbb
dec
pop
adc
shll
fldt
leave
pop
aaa
mov
lea
test
frstor
and
pop
jecxz
or
dec
push
fstps
push
movsl
jb
in
jl
fs
xchg
lcall
jg
dec
mov
arpl
pop
push
fdivrs
ficoms
inc
add
push
dec
fs
jo
cmp
pop
mov
out
sbb
mov
sbb
mov
push
mov
jno
add
jecxz
and
push
xchg
xor
pop
cmp
out
jecxz
pop
popa
cltd
dec
xchg
icebp
xlat
xor
and
test
lds
fdivrp
or
into
jo
ljmp
rol
dec
mov
adc
jge
jno
lcall
aas
pop
arpl
or
xor
and
sub
dec
rolb
es
popa
sub
sub
dec
sub
loope
or
sbb
xor
daa
dec
jne
push
pop
push
mov
rcrl
popa
cmp
xlat
jp
nop
cltd
andb
and
inc
mov
jecxz
in
fs
vpcmpgtw
popa
cmp
inc
test
mov
orl
gs
fs
loope
fsts
xchg
cmc
cltd
clc
cld
mov
lret
popa
cwtl
insb
stos
js,pt
lahf
sub
fsub
out
mov
repnz
push
lahf
jl
mov
fbstp
pop
ret
mov
stos
mov
xchg
cli
dec
icebp
mov
xorl
and
popa
les
bound
popa
inc
inc
cmpsl
adc
pushf
xor
and
fwait
loope
lcall
outsb
nop
jecxz
cmp
in
cltd
pop
and
test
xor
in
popa
lret
jle
dec
inc
add
cmp
xor
sbb
xchg
shlb
pop
jge
je
mov
jmp
popa
jbe
inc
mov
popa
lahf
pop
shll
popa
cmp
lcall
xor
push
in
pushf
rorl
push
popa
cmpsl
mov
or
ficomps
add
lret
mov
popa
or
pop
and
popa
xchg
inc
stc
mov
push
inc
addr16
test
jg
repz
xor
aad
in
scas
popa
inc
js
movsl
adc
std
cmp
ljmp
imul
in
sar
fdivs
or
ds
inc
ficomps
jge
aas
imul
xlat
sbb
mov
push
popa
sub
imul
out
std
lret
data16
mov
push
push
es
push
push
pop
mov
bound
xchg
pop
mov
cmp
push
jge
popa
mov
sub
faddl
popa
push
sub
push
and
mulb
pop
fnstsw
mov
test
lods
sub
daa
and
mov
iret
push
inc
pop
fldenv
sub
mov
sarl
das
jp
xchg
fs
decl
push
xor
xchg
mov
or
popa
inc
fdivr
sub
jge
popa
fisttpl
cmpsl
pop
lret
push
pop
mov
popa
fcomip
mov
lcall
adc
push
pop
adc
jae
pushf
iret
popa
loopne
mov
shll
and
das
out
and
ret
sbb
outsl
jge
leave
adc
mov
mov
lahf
fucom
jae
seta
xchg
ds
test
adc
pop
dec
in
inc
lock
sbbl
inc
xor
popa
fiaddl
lcall
out
aad
push
jno
mov
filds
fs
dec
daa
xchg
inc
sub
popa
adc
stos
add
popa
aad
xor
arpl
fidivs
test
leave
bound
popa
fdivs
out
insl
sti
lret
jmp
adc
cmc
fs
pop
xor
mov
mov
mov
push
sub
icebp
gs
movsb
lret
shlb
dec
sbbl
push
lret
jae
lea
push
les
in
inc
mov
sub
sub
ret
jo
ljmp
jmp
popa
jp
insl
cmpsl
bound
push
push
stos
mov
pop
popf
imul
xchg
and
jb
popa
out
sbb
shll
lea
and
sbb
popa
repnz
jg
cmp
sub
nop
mov
clc
hlt
loope
fstl
mov
int
sub
loop
sub
xor
adcl
loope
adc
adc
js
add
jl
movsb
nop
inc
mov
popa
es
scas
insb
pusha
mov
shll
push
or
pop
ss
addr16
adc
mov
pop
or
push
add
loopne
mov
cmpb
scas
mov
mov
push
stos
popa
ljmp
mov
bound
popa
adc
xor
rol
mov
nop
mov
push
sub
pop
mov
mov
idivb
push
push
rorl
and
inc
xchg
mov
pop
data16
rcrl
adc
fmul
dec
and
push
sti
pop
pop
sbb
push
in
jge
fbld
stos
mov
enter
push
popa
jbe
pop
xchg
sbb
xchg
fs
in
repz
inc
lcall
jmp
out
mov
xchg
xchg
or
sub
popl
push
push
popf
mov
andb
sbb
jae
mov
fmul
out
ret
sub
cli
je
pop
adc
stc
or
cs
jge
fxch
sbb
jne
adc
ffree
popa
pushf
jo
dec
popa
pop
or
dec
testb
popa
sbb
add
mov
daa
shll
inc
adc
test
sub
imul
adc
push
out
xchg
sub
frstor
add
js
ret
imul
dec
sub
lods
popa
in
mov
mov
sub
push
inc
inc
or
pushf
popa
in
add
enter
rcll
leave
aaa
lret
mov
pop
in
es
jmp
pop
outsl
adc
pop
loope
repz
fiadds
popa
and
mov
xchg
jp
fwait
jo
and
push
inc
stos
in
xor
ja
fmul
pushf
inc
cld
popa
or
cmpsb
push
es
mov
in
add
and
je
nop
outsl
mov
pop
enter
popa
arpl
or
in
lods
adc
bound
jnp
cmpsl
push
inc
add
sarl
hlt
mov
popa
ror
push
cmp
add
mov
test
popa
push
arpl
xor
inc
fistpll
xchg
in
cs
mov
rcrl
scas
arpl
sub
scas
push
loope
jnp
jne
gs
fisubl
mov
lds
das
cmpl
fldcw
aaa
push
popa
shlb
pop
sbb
jns
popa
mov
gs
popa
pop
xchg
scas
rclb
push
xor
in
or
inc
push
dec
popa
aas
jnp
out
popa
popl
xchg
jo
jl
std
add
and
mov
test
rclb
sbb
sub
mov
popa
leave
push
scas
bound
ds
loop
fadds
outsl
and
xchg
mov
jmp
jnp
popa
xchg
stos
jo
ss
mov
pop
daa
sbb
aad
loop
xor
jmp
out
in
jmp
sahf
adc
sbb
jns
sbb
popa
push
xchg
pop
sbb
mov
inc
in
fmuls
mov
popa
or
add
sub
xor
cmp
call
sub
jnp
cli
pop
fs
mov
xor
xor
sub
ss
mov
xchg
dec
fwait
lcall
aam
popa
clc
loopne
mov
xlat
jmp
iret
shlb
popa
sub
xchg
adc
cmpsl
bnd
fsubr
mov
adc
mov
popa
mov
cwtl
push
data16
or
scas
aad
lods
lods
test
adc
popa
cld
rolb
jl
xor
xchg
test
popa
in
dec
out
nop
push
push
xor
insl
inc
add
push
pusha
push
popa
shll
enter
or
jo
lcall
popa
sti
mov
push
loop
or
and
add
pop
inc
pop
push
popa
decl
mov
xchg
mov
push
decb
enter
scas
pop
push
pop
subl
test
xchg
mov
or
out
arpl
psubsw
out
and
pop
add
sub
popa
sti
sub
jg
or
popa
mov
aam
fwait
dec
mov
in
and
adc
lea
fs
sti
rorl
push
inc
sarl
out
inc
jns
pusha
mov
push
dec
mov
scas
inc
in
add
adc
andb
cmovle
pushf
and
popa
mov
mov
std
cmc
sbb
jb
adcb
out
lods
push
mov
mov
sub
adc
mov
leave
in
mov
test
dec
sub
in
stc
mov
loopne
fs
rcrb
jns
sbb
dec
dec
test
cmp
lret
outsl
xchg
out
lahf
adc
in
inc
push
push
jl
mov
bound
pusha
fdivr
xor
shll
or
insl
mov
jecxz
out
rclb
jns
mov
movsb
into
stc
popa
or
xor
out
fnsave
popa
dec
cwtl
dec
push
xor
das
dec
popf
popa
mov
xor
pop
add
mov
push
pushf
pusha
popa
lahf
scas
add
subb
bound
jmp
adc
adc
sbb
jnp
mov
rorl
xor
pmuludq
xor
popa
add
push
jecxz
cmpsb
dec
nop
popa
das
pop
cltd
or
mov
sub
mov
mov
out
inc
shl
mov
dec
arpl
jnp
cmp
out
call
insl
cli
push
popa
bound
rcr
fidivrl
add
popa
leave
sbb
jno
mov
and
jne
jo
jbe
mov
movsb
push
popa
repz
xor
movsl
aas
dec
outsl
arpl
inc
int
jmp
jno
imul
popf
sbb
popa
lock
cwtl
dec
pop
pop
add
cmpsl
loope
pop
adc
stos
repnz
sbb
fmuls
popa
ljmp
mov
into
sub
sub
mov
bound
push
sbb
ljmp
push
xlat
clc
icebp
xchg
jnp
popa
test
sub
pop
push
hlt
popa
xchg
add
and
icebp
ja
sbb
popa
loop
ret
xor
inc
jbe
add
mov
leave
popa
xchg
mov
jnp,pt
cmp
dec
mov
out
jle
pop
lods
pop
popa
cwtl
inc
push
sti
jmp
popf
sub
aas
mov
imul
bound
data16
jle,pn
push
cltd
mov
mov
popa
lahf
mov
mov
jo
or
add
inc
and
mov
cmpsl
je
filds
pop
insb
cmp
xchg
mov
sub
cmc
pop
and
cmpsl
jno
jle
pop
outsb
push
aad
xor
dec
repz
cmp
fs
jl
mov
popa
push
push
sbb
outsb
sbb
or
mov
les
and
cmovno
jo
js
jle
inc
mov
sub
mov
test
xor
add
je
pop
push
std
jg
stc
add
cmc
pusha
push
loop
fisubrs
popa
ret
lret
cld
movsl
mov
mov
sbb
or
pop
popa
ja
mov
data16
jecxz
add
sub
test
jnp
jns
pop
out
fs
out
popf
icebp
and
xchg
popa
mov
test
int3
daa
add
data16
pop
inc
push
mov
adc
push
push
testb
bound
dec
sbb
cmp
cmp
jge
stos
add
out
lods
and
mov
sub
lret
shrb
mov
gs
inc
sbb
mov
push
cmp
inc
dec
add
je
inc
push
jge
jbe
xchg
daa
push
mov
roll
xchg
outsb
cmp
inc
mov
inc
fsubl
lahf
push
arpl
popaw
xor
pusha
ljmp
loop
xchg
inc
lods
cs
cmp
popf
adcb
shll
adc
cwtl
pop
lods
loope
test
lcall
pop
aad
sbb
scas
sbb
pop
mov
aas
test
mov
outsl
xor
and
and
dec
pop
dec
out
sub
mov
mov
dec
repz
pop
outsl
popa
add
pop
xchg
inc
jae
sbb
fisubl
cmp
pop
mov
inc
adc
loope
push
xor
imul
sub
xor
test
into
divb
popf
popa
stos
dec
insl
aad
hlt
pushf
pusha
push
popa
lret
sbb
inc
pop
bound
jnp
roll
movsl
fs
in
or
push
push
sar
popa
stc
lret
sbb
popa
movsl
or
pop
and
jo
into
push
sahf
xchg
adc
popa
pop
pop
mov
ret
lock
sub
xlat
scas
je
push
inc
popa
ret
adc
add
ret
popa
popf
bnd
sbb
insl
fisttpll
les
pop
dec
cmp
lcall
inc
xlat
repz
or
scas
popa
dec
sti
mov
stos
popa
and
pop
jp
fstpl
arpl
pop
mov
cmp
insb
pop
int
shlb
movsb
das
push
pop
test
cmpb
pusha
mov
sbb
cmpb
in
pop
and
mov
jb
lret
lahf
popa
cmp
mov
jns
daa
mov
push
add
and
push
aaa
mov
jae
pop
arpl
mov
or
insl
or
mov
mov
cwtl
out
sub
dec
sbb
dec
xchg
fistl
jo
push
insb
sbb
sub
mov
jae
and
mov
in
xchg
jl
std
xor
addr16
or
mov
aas
push
fnstcw
and
and
and
js
roll
jno
fs
dec
aam
test
int3
add
loope
sbbl
jno
mov
xchg
cltd
imul
mov
jl
in
sarl
ljmp
and
mov
lret
and
popf
cmp
loope
cmp
xchg
shr
adc
add
call
dec
aam
dec
push
pop
dec
push
out
or
mov
or
mov
push
cmp
pusha
inc
nop
and
dec
popf
aam
fisubl
xchg
ja
or
mov
popa
xlat
fstpl
aaa
popa
les
sbb
push
and
or
dec
into
stc
aas
or
mov
cmc
ret
decb
jno
pusha
adc
popf
cmp
push
fs
add
or
popa
movsl
sbb
xor
outsb
test
cmp
popa
aad
data16
fs
mov
pusha
xor
std
popa
sbb
andb
jle
stos
rclb
daa
pop
or
mov
sub
popa
sahf
xchg
fwait
mov
nop
rcr
xor
fsubl
mov
loopne
int3
shr
pop
out
punpcklwd
push
xchg
nop
mov
loopne
outsb
fistpl
add
dec
stos
icebp
xor
sbb
popa
out
cmpsb
push
xchg
bound
lcall
push
shlb
cmp
stos
jg
sbb
in
cli
xchg
add
cld
mov
movb
clc
outsl
and
jae
jge
aam
popa
mov
lret
sub
mul
mov
orb
dec
popa
jge
iret
and
cmp
mov
std
dec
mov
mov
fdiv
dec
je
bound
cs
xchg
fsubl
andl
or
arpl
lea
dec
insl
push
push
outsb
push
test
popa
fcmovnb
aam
js
clc
push
mov
frstor
shll
and
mov
js
bound
and
or
mov
std
mov
jge
adc
push
nop
fsubrl
cltd
inc
insb
scas
dec
xchg
cmpsl
in
mov
or
out
dec
mov
jecxz
ficoml
dec
sbb
aam
fldcw
shl
mov
sti
ja
aas
mov
push
lods
mov
es
dec
shrb
pop
daa
jmp
and
mov
popf
iret
dec
call
jo
es
jmp
fidivl
test
adc
jle
lods
push
and
out
lcall
sbb
adc
jno
fstpl
movsl
cmp
jo
mov
and
fisubs
dec
or
mov
lods
movsb
push
aaa
popa
xchg
out
jne
daa
cmpsl
insl
mov
cmc
les
sub
lods
push
or
dec
xlat
pop
push
emms
mov
jecxz
and
in
cmc
xor
cwtl
lods
sub
mov
dec
jae
lock
loop
xchg
dec
insl
in
movsl
pop
call
addb
ja
lds
xor
pop
adc
lods
jo
xchg
dec
mov
ds
adc
push
xchg
push
adcl
ss
dec
pop
jno
mov
cwtl
stos
or
inc
jnp
add
jno
pop
fwait
lods
inc
mov
xchg
repnz
dec
outsl
jmp
mov
leave
aas
shlb
pushf
sub
jae
xlat
arpl
aam
in
outsb
std
dec
cmpsb
into
shlb
or
inc
jecxz
idivl
dec
popf
icebp
mov
bound
and
and
icebp
shll
xlat
push
nop
pop
inc
into
jo
shr
insl
leave
test
and
dec
in
cmp
std
jno
shr
clc
fdivl
je
or
fstps
stos
xlat
sub
inc
xchg
mov
inc
ljmp
movl
mov
push
dec
mov
mov
ffree
mov
ljmp
jecxz
mull
stos
xchg
jle
jo
outsb
or
dec
rcrl
dec
jg
orl
insl
and
mov
cmp
int3
adc
testl
and
jmp
cld
cmp
xorb
jl
nop
cmp
xchg
push
mov
pop
and
dec
mov
sbb
pushf
dec
mov
imul
sbb
addr16
ljmp
and
nop
and
mov
lock
add
push
mov
test
dec
lods
outsb
inc
or
push
repnz
into
ss
popa
pop
lcall
and
xchg
negl
popa
and
cltd
fisubl
repz
in
cmp
ja
stos
gs
cli
xchg
pop
xor
sbb
xchg
bound
push
addl
leave
add
jle
pop
int
mov
ja
in
cltd
inc
and
dec
test
dec
mov
mov
or
xchg
ja
mov
arpl
dec
popa
and
mov
lcall
lods
cmp
sbb
sub
dec
test
cltd
ret
and
add
call
xor
lock
roll
icebp
orb
ljmp
sub
xchg
dec
enter
gs
outsb
mov
popa
mov
add
jmp
popa
inc
mov
and
popa
sbb
sub
xchg
jnp
mov
push
shr
das
popa
test
nop
or
fs
cmp
xchg
not
popf
jg
sbb
test
rcr
popa
mov
in
pop
test
bound
xorl
pop
je
adc
or
pop
add
sti
cwtl
sar
popa
push
fmuls
xor
aas
mov
mov
aad
popa
pop
pop
mov
out
in
test
xchg
mov
mov
cmp
faddp
or
dec
mov
mov
sub
out
popa
test
daa
jge
lret
adc
and
inc
xchg
mov
pop
fs
ss
mov
add
popa
hlt
ret
xor
push
mov
cs
outsb
jmp
andb
mov
movl
mov
enter
sub
add
popa
fs
xchg
lds
scas
insb
rcrb
mov
xor
sub
loop
and
adc
mov
pop
sub
xor
adc
mov
adc
and
or
mov
insl
ud0
popa
lahf
arpl
cmc
pop
dec
or
dec
popa
ret
repnz
enter
popa
dec
lods
addr16
xchg
jl
popa
xor
test
popa
int3
loope
inc
mov
inc
pop
js
out
popa
call
add
nop
mov
lea
sbb
push
insb
inc
inc
pushf
fwait
js
in
dec
cmp
add
dec
adcl
push
ficoml
sub
in
test
xchg
lods
cmp
push
popa
out
das
sbb
imul
ds
into
popa
fldt
sub
mov
scas
fdivl
fwait
sahf
adc
into
mov
add
iret
sbb
mov
je
mov
popa
xchg
stc
out
arpl
adc
inc
scas
call
push
and
leave
mov
ss
and
inc
mov
jle
add
repnz
popa
test
mov
sub
cld
pop
dec
xchg
outsb
lcall
inc
popa
scas
and
cmpsb
sub
cs
ss
and
jns
popa
push
jo
sbb
movsb
les
aaa
jb
out
jns
out
js
cmp
or
sub
clc
or
xchg
test
mov
fs
jns
sbb
fstpl
push
iret
popa
push
jp
or
dec
inc
popa
stos
mov
xchg
out
popa
cmp
pop
andl
fildll
cmp
into
lock
mov
sbb
es
sub
popa
push
cmp
ficoms
mov
add
popa
sbb
insl
clc
and
mov
shl
mov
xorb
popf
dec
jge
out
jge
loop
bound
pop
loopne
test
sbb
mov
scas
lock
inc
add
fimuls
dec
popa
loopne
lea
into
pop
mov
xor
ficompl
hlt
leave
movl
popa
loope
cmp
popa
in
dec
and
popa
or
mov
popa
inc
inc
data16
repnz
popa
and
push
or
rorb
cmp
ljmp
dec
xlat
popa
fcmovnbe
movsl
inc
pop
insl
or
adc
pop
sub
out
inc
popa
shll
out
or
sti
popa
dec
andl
push
dec
popa
outsl
mov
push
xor
cmp
mov
fnop
icebp
mov
adcb
loope
dec
in
push
in
data16
jns
shlb
mov
pushf
sbb
enter
adc
addb
stc
sub
stos
mov
inc
sub
cwtl
mov
popa
orl
movsl
in
popa
push
test
sahf
fcoms
popa
outsb
stc
sbb
ds
jg
incl
jle
jbe
loope
insb
or
sarl
out
sub
icebp
sarl
popa
add
pop
gs
cld
das
mov
mov
popf
sub
in
add
sub
das
popa
jb
adc
jl
int3
dec
cmp
add
and
push
mov
ss
fs
cmp
int
push
mov
sbb
mov
subl
dec
nop
dec
cmp
mov
das
push
xchg
or
enter
xchg
xor
bnd
adc
cmp
jge
pushf
mov
test
loope
push
adc
sub
mov
pushf
enter
xor
loope
cmp
mov
popa
mov
fildll
test
cvtpi2ps
push
shrb
pusha
rorl
clc
js
sti
sub
adc
jbe
pushf
xchg
icebp
jp
shl
popa
xchg
cmp
les
popa
mov
cli
dec
dec
or
pop
inc
pop
popa
inc
lret
icebp
or
popa
mov
sub
jmp
scas
xchg
jbe
je
fnstcw
in
cwtl
popa
and
mov
hlt
jbe
gs
mov
or
clc
int3
popa
lahf
and
jecxz
addr16
inc
insl
mov
dec
push
fwait
sub
out
mov
mov
loopne
push
loope
cmc
shrb
push
punpcklwd
mov
pushf
mov
mov
in
int3
jb
xlat
pop
popa
sbb
dec
jmp
mov
lahf
adc
inc
pop
bound
add
int
xchg
out
popa
ja
mov
ret
popa
mov
movsb
int3
jecxz
repnz
fdiv
loope
nop
lahf
push
mov
cmpsl
xor
lock
pop
popa
cli
aad
push
clc
call
shrl
dec
jmp
outsl
and
sbb
out
pop
push
nop
xchg
stos
testl
out
jle
push
push
and
dec
add
adc
popa
sub
xor
sbb
in
dec
jge
xor
pushf
lods
js
std
add
test
arpl
test
int
popa
inc
outsl
mov
popa
mov
iret
or
lcall
sbb
jle
aad
jb
popa
jns
jo
call
cli
data16
test
popa
sub
jecxz
cs
mov
inc
sub
imul
push
add
cmp
popa
imul
or
enter
and
in
sti
mov
outsl
std
push
lea
into
cltd
inc
jne
jns
xchg
out
xor
out
cwtl
sbb
push
popa
xchg
fldenv
dec
xor
sbb
aaa
lret
mov
sbbl
xchg
lcall
pop
popa
loop
hlt
xchg
xor
jmp
andb
inc
in
fstl
jns
sarb
loopne
loop
mov
sbb
sub
adc
outsl
gs
cltd
mov
cmpsl
mov
push
inc
xchg
fldenv
js
or
sbb
cld
pop
pop
push
pop
jg
je
xor
bound
xor
loope
xchg
mov
jg
aas
popa
xchg
outsl
cld
js
cs
sub
xor
fdivrl
push
dec
aaa
sbb
mov
movsl
add
repnz
dec
xor
mov
xchg
imul
push
and
js
mov
inc
xchg
add
loope
adc
mov
cmp
mov
mov
sbb
std
pop
sub
adc
push
roll
inc
ljmp
into
jnp
loope
push
or
inc
out
inc
movsl
inc
loope
or
adc
loope
inc
fs
pushf
andl
cltd
sbb
sub
xor
and
dec
dec
sbb
jmp
js
pop
rcrl
ljmp
lock
fs
adc
add
adc
dec
insb
cltd
mov
mov
iret
push
in
push
pusha
xchg
push
popa
popf
jo
and
pop
and
sbb
or
arpl
leave
shll
in
hlt
dec
es
xchg
pusha
loope
leave
and
add
mov
gs
inc
stos
xorl
shll
pusha
mov
jne
xor
jo
imul
xchg
xchg
adc
push
dec
pop
xchg
lock
push
xchg
pop
std
in
repz
cmpb
call
leave
sbbl
mov
xchg
pop
out
mov
int
fnstenv
inc
js
in
xor
push
pop
bound
sbb
ret
jg
or
jo
bound
data16
adc
fxch
mov
cld
lds
sub
outsl
push
xchg
into
cld
nop
icebp
icebp
into
imul
or
add
pop
in
mov
cli
out
mov
popa
inc
adcl
scas
shll
add
cmp
inc
inc
rcrb
pop
nop
cltd
mov
mull
test
rorb
push
pusha
popa
and
xor
les
and
xor
imul
push
aas
das
push
fbld
loope
daa
lcall
mov
cvtdq2ps
outsl
xchg
popf
ja
cmpsb
cs
out
lea
loope
push
pop
popa
aas
pop
pop
mov
jle
aad
and
rclb
sbb
add
xor
fstp
jo
scas
inc
pop
xchg
mov
mov
push
subb
inc
adc
push
add
cld
lods
mov
sbb
pop
xor
jo
adc
js,pn
rorl
jae
or
aam
insb
sbb
popa
mov
ja
bound
mov
stos
popa
inc
enter
jne
loope
and
int3
inc
add
pop
pop
popa
mov
js
fwait
inc
pop
or
xchg
popa
sbb
mov
dec
clc
data16
and
cltd
sbb
je
add
xchg
pop
inc
add
sub
test
and
out
pop
or
popa
xorb
pop
popa
jle
sub
cmpsb
lea
inc
add
mov
push
mov
add
shll
pop
ret
pushf
jmp
addl
or
in
xor
cltd
lea
cmpsb
pop
inc
jo
lret
and
mov
adc
lcall
push
jle
jne
and
adc
dec
arpl
xchg
xlat
jl
mov
lahf
mov
push
and
xor
fs
dec
pop
or
stc
std
jmp
popa
call
sbb
popa
pop
sbb
ss
push
icebp
popa
jne
lods
test
mov
aas
lock
cmp
lea
cltd
cwtl
inc
repnz
loope
sub
mov
ja
sbb
adc
cltd
popa
out
inc
inc
xor
test
pop
push
xlat
call
insl
adc
fisttpll
imul
shlb
xchg
ret
push
dec
stos
andl
or
push
sarl
mov
cld
adc
mov
loope
repz
xchg
lret
leave
or
imul
arpl
mov
add
out
xchg
jle
xor
ljmp
push
mov
inc
repz
aam
dec
add
dec
push
cwtl
jbe
loopne
sbb
je
xchg
popa
sbb
ljmp
es
jns
xchg
popa
push
add
daa
push
jne
fmull
or
adcb
loope
cmp
int3
rcrl
cmpsb
ja
adc
jecxz
inc
pop
popa
or
je
mov
sub
sub
cltd
inc
cli
popa
ds
cmp
scas
out
cmp
sub
lock
jo
inc
pop
aam
popa
or
aas
add
movsl
mov
loope
int
ljmp
fmull
pop
or
add
lods
sub
jbe
jg
add
mov
dec
js
push
xor
insb
xchg
das
jae
xchg
or
sbb
stos
popa
pusha
inc
push
mov
popa
inc
xlat
aad
movsb
test
loope
sub
mov
movsl
and
mov
jne
iret
adc
sub
or
scas
fs
cmc
dec
jp
std
add
and
xor
or
mov
stos
add
popa
aam
ret
push
stc
inc
cmp
scas
mov
inc
popa
push
mov
dec
sub
push
call
and
loopne
ljmp
sahf
jmp
arpl
inc
fcomps
popa
je
sti
ret
adc
loop
lret
or
enter
dec
popa
rcrb
xor
jmp
xlat
jbe
out
call
jmp
push
or
or
xor
and
lahf
mov
popa
nop
mov
mov
lods
loope
orl
sub
out
push
ret
jb
daa
adc
sub
jns
in
adc
stc
pop
popa
mov
pop
xchg
inc
mov
mov
std
mov
xorb
cmc
and
and
and
push
xor
pushf
dec
ja
fbld
sub
sar
dec
cmp
jl
and
pop
push
cltd
push
jo
add
cld
inc
and
popa
inc
lock
jg
out
fisubl
fnstsw
repz
or
in
adc
xchg
dec
je
es
pop
das
sbb
out
dec
push
test
mov
imul
out
repz
iret
inc
dec
in
popa
push
stos
inc
mov
mov
and
popa
das
add
arpl
pusha
jo
push
ss
add
sbb
pop
xchg
test
fsubs
mov
dec
adc
fs
clc
inc
add
push
pushf
out
popa
jg
mov
popa
icebp
sti
int3
mov
popa
xor
andl
pop
mov
popa
mov
fistpl
lods
cli
popa
cmpsl
bound
add
pop
adc
adc
popa
mov
aam
repz
imul
add
fists
popf
push
xor
out
leave
cltd
adc
insb
adc
fimull
dec
lods
popa
mov
cmpb
inc
mov
sub
inc
mov
mulb
dec
and
adc
jge
dec
mov
mov
jns
data16
std
cs
inc
in
outsl
addb
add
xor
dec
std
fcmovnb
or
pushf
popa
mov
mov
mov
bound
jmp
lock
mov
popa
imul
fsubl
lret
dec
out
icebp
pop
push
popa
pop
sbb
and
adc
sub
into
js
adc
pop
popa
dec
mov
sbb
mov
mov
jp
fistl
outsb
mov
jmp
or
push
loope
ja
cmpsl
dec
popa
mov
push
sbb
mov
fsub
out
popa
pop
sub
aam
rolw
mov
cmpsl
adc
dec
mov
mov
lods
xlat
push
ja
jo
popa
xchg
cmc
stos
cmp
push
out
mov
lods
cli
movsl
ljmp
popa
mov
frstor
and
xor
iret
sub
xlat
popa
sbb
cli
inc
scas
mov
or
mov
mov
inc
dec
lahf
repnz
in
aam
je
mov
popa
or
mov
andl
and
fucomp
leave
sub
in
bound
push
sbb
fwait
dec
mov
pop
loopne
push
js
popa
mov
data16
popa
dec
or
inc
xlat
popa
test
cli
dec
aaa
bound
movsl
loop
jge
add
mov
bound
in
lock
cmovl
sbb
mov
outsl
outsb
sbb
dec
jmp
rorl
aad
and
sub
fwait
cmp
mov
ss
popa
and
xchg
jb
popa
es
adc
bound
das
cwtl
jl
push
push
mov
mov
aam
push
test
xchg
out
fiaddl
add
push
pop
cld
popa
cmp
ret
pushf
jno
push
dec
jle
sbb
popa
mov
cmp
fdivrl
mov
mov
out
jge
sbb
jmp
cmp
mov
pusha
lahf
aam
mov
iret
sbb
arpl
cbtw
es
cmp
imulb
sbbb
dec
and
and
jl
popa
or
sahf
and
subl
adc
jmp
sbb
push
cmpsl
jg
mov
jo
shl
and
stos
unpcklps
xorb
movsl
and
loop
scas
faddl
cmp
out
xchg
movsb
mov
test
loope
call
sbb
xchg
inc
and
popa
into
sub
sahf
aas
imul
into
and
lds
inc
push
test
add
mov
add
jl
andb
dec
scas
or
popa
ret
cmp
mov
popa
push
loopne
cs
fwait
out
out
lods
pop
inc
sbb
lret
rolb
popa
mov
sahf
orl
dec
xchg
push
adc
bound
sbb
push
push
out
popa
insl
cmp
mov
push
push
push
and
js
sbb
mov
ret
pop
push
enter
rorl
popa
outsb
pop
les
hlt
test
ds
mov
repz
rol
sbb
call
stos
shl
pop
adc
mov
and
mov
loope
fwait
adc
aad
bound
cmpl
std
fmuls
mov
push
jbe
mov
andl
jg
andb
push
dec
add
adcb
and
xor
push
jle
pop
xchg
and
fsubrl
fistps
arpl
xor
mov
insb
jno
fs
dec
sbb
cmc
mov
popa
fwait
jnp
xor
mov
repz
bound
mov
push
popf
cmp
jno
lock
loop
push
imul
dec
or
and
jecxz
fs
lea
imul
push
mov
pop
jae
insb
dec
bound
popa
ret
fisubs
inc
ljmp
xchg
test
sub
push
mov
std
in
xor
xchg
fcompl
push
shll
fwait
sub
mov
js
adc
push
mov
push
cmp
jge
stc
mov
jns
and
cmpsb
sbbl
push
cs
mov
lret
popa
inc
xor
fisubl
jbe
adc
pop
repz
je
popf
or
ja
pop
insb
fcmovb
jmp
loope
shll
imul
arpl
jae
add
mov
loopne
outsl
xor
push
loope
out
mov
cmp
mov
xor
mov
lret
push
popa
jns
xchg
fisttpll
dec
das
jno
dec
push
jo
pop
sbb
imulb
popa
dec
sbb
or
xchg
sbb
or
fwait
dec
jp
das
and
and
dec
test
es
outsl
xor
lahf
jno
mov
push
inc
xchg
inc
hlt
xor
jb
push
negl
jg
jo
add
ja
jno
in
loope
scas
fwait
popa
fcoms
mov
sbbb
add
dec
sub
jge
sub
insl
add
test
cli
test
xlat
popa
jge
imul
add
mov
and
push
in
adc
pop
ss
cwtl
imul
bound
out
ss
dec
addr16
push
popa
pushf
or
inc
pop
iret
ja
cltd
data16
pop
enter
aam
sbb
insb
jo
xor
sub
out
adc
jo
movsl
push
and
inc
inc
push
shlb
sbb
popa
push
push
pushf
dec
call
lret
mov
ficoml
out
test
pop
inc
popa
jb
sbb
iret
popa
sub
xor
popa
daa
push
das
testb
stos
popa
into
mov
dec
xor
lock
ja
inc
jmp
push
mov
mov
outsb
loopne
sbb
insb
mov
fnstenv
int3
loopne
or
and
lahf
loop
popl
jbe
and
or
cmp
mov
fs
xchg
dec
cltd
es
adc
ret
fdivr
popa
mov
sbb
sub
bound
lea
insl
pushf
popa
clc
xor
aas
out
lahf
sbbl
mov
dec
lods
push
add
aaa
lds
daa
mov
mov
ja
pop
mov
shrb
fwait
inc
lds
xchg
loopne
fsubl
fs
sub
movsb
bound
xchg
stos
push
jo
jp
fisttps
ret
movb
cmp
out
push
mov
cli
mov
xor
mov
dec
inc
xor
stos
popa
xchg
dec
pop
inc
jo
jecxz
outsl
sbb
mov
popa
and
loopne
push
and
push
shlb
rclb
insl
cwtl
loope
dec
mov
push
sbb
arpl
cltd
and
popf
popa
sub
mov
dec
jno
imul
aad
das
inc
lret
movsl
fsubl
cmpsb
les
mov
insb
hlt
outsl
dec
ret
popa
loope
lahf
mov
dec
inc
adc
jg
or
xchg
add
and
sbb
xor
pop
popa
adc
outsl
imul
or
jns
popa
pop
cli
mov
cmp
loope
adc
push
popa
sub
into
mov
push
jmp
lods
add
inc
cltd
dec
bound
insb
jb
mov
mov
inc
push
mov
inc
daa
call
call
mov
mov
rol
mov
and
popa
lcall
pop
push
pop
xchg
ja
mov
xchg
cmp
aas
and
pop
clc
loope
lods
bound
scas
shlb
jbe
sub
fists
jns
outsb
call
repz
int3
loope
mov
cmp
cld
aam
popa
int
movsl
inc
leave
aas
jmp
call
jbe
decb
popf
and
inc
mov
sub
xchg
and
sbb
or
pop
mov
mov
jo
or
mov
xor
mov
insl
mov
mov
and
mov
cmc
inc
movsb
push
fnstenv
popa
pop
sbb
pop
test
jns
ja
jb
jle
dec
ret
mov
mov
sub
dec
cltd
stc
stc
xchg
dec
inc
popa
test
lds
outsl
and
add
sarl
loope
add
sub
mov
jb
fldenv
fcoms
ret
popa
jns
jbe
cltd
dec
imul
jb
je
mov
popa
shlb
xchg
popa
jno
dec
push
dec
loop
frstor
repz
fcmovnu
xor
addr16
jmp
cmp
sub
cltd
dec
xor
in
shrb
fiaddl
loope
adc
jmp
mov
aas
movsb
gs
or
fmull
fbstp
frstpm(287
mov
dec
icebp
popa
out
sub
push
sub
out
add
popa
loop
sub
dec
push
pop
sti
stos
ljmp
xchg
ss
icebp
dec
and
jo
adc
ret
mov
jmp
xchg
popa
fcompl
jecxz
aaa
sub
cmp
loopne
sbb
mov
loop
test
fmull
mov
xor
out
xchg
popa
mov
cmp
jecxz
fsubrs
sbb
pop
or
loope
out
cmp
cltd
popa
jo
sbb
in
sub
adc
pop
xchg
out
push
dec
and
mov
movsl
fadd
popa
sub
add
addr16
xchg
popa
dec
test
pop
insb
mov
loope
mov
adc
mov
jae
testl
mov
sti
in
std
xchg
dec
jo
adc
lea
sbbb
popl
inc
sbb
jo
aas
pop
cmp
push
test
mov
sub
add
fldenv
andb
pop
mov
addr16
jp
fisubrl
sbb
xor
sbb
dec
push
and
fidivrs
pop
pop
xchg
add
ret
inc
push
mov
dec
daa
popa
sub
jb
pushf
pushf
call
enter
popa
xor
mov
fldenv
fdivr
dec
push
mov
test
add
mov
mov
mov
push
sbb
pusha
mov
xchg
test
mov
loope
push
mov
popa
jecxz
push
repnz
popa
jge
das
sbb
or
iret
pop
scas
fnsave
xchg
jb
xor
inc
mov
xchg
jo
rol
pop
or
sti
ss
movsb
inc
clc
add
popa
lret
into
inc
rorl
jg
pop
and
imul
repz
loop
sbb
popa
outsb
push
movsb
mov
popa
mov
mov
xor
popa
pushf
imul
jle
and
pop
aas
adc
inc
rcll
push
sub
loope
popa
push
test
pop
popa
nop
popf
test
and
lods
adc
popa
inc
fsubl
lods
js
aad
outsl
lret
sbb
fldenv
in
or
test
xchg
inc
push
sbb
repz
push
cmpsb
fnstcw
out
lds
in
insb
test
mov
es
inc
popa
cltd
add
hlt
or
mov
scas
mov
outsl
cmp
cmp
add
pop
pop
popa
jo
push
add
sub
mov
xor
jne
mov
inc
add
mov
popa
or
adc
popa
lahf
or
push
xchg
ss
fs
ret
push
jae
push
and
movsl
mov
xchg
repnz
xchg
pop
cli
daa
shrb
sub
test
lcall
jbe
adc
popa
dec
out
test
je
mov
mov
int3
xchg
xor
mov
jmp
shrl
out
push
add
inc
pop
popa
or
push
cmc
pusha
insb
leave
jnp
mov
add
popa
ret
push
pop
pop
out
sub
inc
mulb
sub
inc
mov
push
loope
lea
das
xor
sbb
xchg
std
mov
out
lret
inc
pop
dec
stc
jge
pop
fs
xchg
add
push
rep
push
aaa
push
mov
and
lds
cmp
out
cli
sub
outsl
sbb
adc
loope
lret
int
popf
xorb
leave
sbb
cmp
xor
fidivrs
fstl
mov
shlb
xor
js,pt
xchg
inc
insl
mov
ljmp
addr16
sbb
dec
mov
xchg
and
inc
mov
lret
sub
dec
movsb
int3
popa
mov
jecxz
dec
cmpsb
call
popa
lock
daa
push
outsb
popa
pop
push
sti
adc
test
int
arpl
push
sub
sub
mov
fisubs
xchg
popl
and
popa
mov
dec
leave
adc
lock
mov
int
popa
pusha
push
jecxz
pop
into
in
popa
sbb
dec
ss
daa
adc
pop
xlat
sbb
popa
testb
push
adc
shrl
push
jae
popa
ror
fidivrl
das
mov
stos
dec
mov
adc
in
pop
pop
cmp
out
sahf
stc
lea
test
mov
andl
adc
sub
popa
lret
mov
mov
sti
test
and
loope
push
xor
test
jle
imul
rcrb
mov
bound
adc
dec
add
mov
fadds
dec
test
gs
cmp
or
popa
imul
out
popa
xchg
add
cltd
roll
out
dec
outsl
and
nop
mov
fisttpl
pusha
xchg
sahf
popa
jae
adc
mov
mov
mov
insb
push
jno
jns
jno
js
pop
out
or
mov
jmp
shrl
fistps
popa
or
mov
pop
lahf
dec
js
mov
ret
push
popa
shl
in
shr
fnstsw
and
bound
push
inc
mov
mov
mov
cmpl
mov
outsb
push
jp
mov
test
lods
xor
xor
in
popa
rolb
loope
in
rolb
inc
outsl
int3
and
out
hlt
add
enter
popa
inc
loope,pn
gs
test
popa
shl
ret
xor
xchg
adc
repz
shr
sti
fs
into
dec
add
popa
jbe
mov
fisubl
cmp
movsl
push
popa
imul
mov
jo
fsts
mov
mov
shr
scas
jno
jle
repnz
loope
fsts
movhps
and
push
lods
mov
or
popa
and
cmp
ljmp
popa
push
adcb
cld
cwtl
cmc
xlat
adc
mov
jo
mov
mov
je
and
or
jg
aad
xor
and
or
xchg
push
frstor
push
jmp
cli
add
adcl
fidivrl
mov
popf
xchg
or
inc
mov
imul
jecxz
bound
stc
aaa
ret
jae
mov
mov
adc
scas
imull
addr16
mov
dec
inc
sbb
or
lret
popa
cmp
push
sbb
mov
mov
sti
mov
leave
mov
mov
popa
inc
xlat
dec
or
scas
pop
loope
ljmp
mov
pushf
pop
adc
roll
add
decl
data16
push
sbbl
mov
sar
sbb
repnz
aad
nop
arpl
mov
sub
sarl
jmp
mov
cmpsb
and
popa
or
mov
push
inc
mov
mov
mov
push
or
mov
call
popa
inc
fs
cmpsl
mov
mov
stos
lods
lahf
es
lret
imul
addr16
xchg
sub
sub
and
mov
push
pop
pop
popa
dec
adc
or
jmp
add
jl
cmp
inc
push
and
shlb
popa
xchg
and
pop
inc
test
adc
pushl
popa
adcb
jle
dec
jns
pop
popa
lods
decb
or
popa
adc
mov
mov
or
nop
pop
jne
push
jbe
bnd
fwait
out
sub
testb
and
popa
jno
inc
push
jb
inc
or
shrb
mov
nop
adc
cmp
mov
repz
and
sub
aaa
icebp
and
addr16
sbb
xor
arpl
aaa
cs
mov
daa
mov
and
dec
xor
push
cmc
ja
pop
jmp
lea
dec
mov
pusha
movsb
mov
test
and
mov
push
ss
inc
in
cltd
ficompl
sbb
or
jl
fwait
loope
scas
popa
outsl
movsl
xor
lret
es
insl
rcll
mov
mov
xor
in
icebp
and
push
fnstcw
pop
pusha
mov
scas
das
lds
dec
xor
dec
mov
and
and
popaw
xor
jo
jg
sub
jns
test
popa
inc
leave
jge
jae
icebp
inc
dec
dec
push
scas
and
inc
orb
icebp
pushf
mov
jg
lea
lock
inc
push
test
int3
mov
xchg
mov
and
enter
fwait
cmp
sbb
jge
popf
adc
and
enter
xor
cmp
jge
sub
aam
add
leave
popa
stos
js
notb
lea
mov
fbld
insb
lock
cmpsb
cli
push
popa
xor
stos
xchg
gs
ja
loop
icebp
cmp
popa
xor
out
stos
addr16
popa
xor
push
xchg
sub
mov
mov
cmp
fs
sbb
jne
in
aaa
pop
fdivrs
cmp
dec
sbb
cmpsl
mov
popa
sub
adc
bound
jle
fsubs
cmp
lds
and
inc
xor
lret
or
push
arpl
pop
inc
das
or
int
sub
xchg
aaa
jb
popa
mov
mov
push
jle
mov
notb
push
push
jg
stos
mov
loope
inc
mov
pusha
enter
push
dec
test
out
push
int3
and
test
popa
arpl
mov
mov
lahf
jecxz
andl
mov
xchg
repz
loop
jno
aad
pop
dec
loopne
pop
xor
mov
bound
cmp
adcl
jno
sti
xorl
cwtl
push
add
arpl
inc
cmc
test
inc
jns
fstpt
sbb
pop
int
stos
arpl
sbb
imul
add
insl
movsb
pop
pop
push
addb
imul
loope
sbb
sub
xchg
loope
bnd
adc
fnstsw
rol
jp
test
gs
mov
enter
pusha
popf
stos
int
mov
pushf
adc
mov
js
and
xchg
imul
sub
xor
pop
sub
loope
outsb
cli
or
fs
mov
jns
arpl
dec
ljmp
sub
and
pop
imul
dec
fnstenv
popa
in
insb
mov
repz
sbb
and
jne
stc
cltd
xchg
data16
xor
and
xchg
into
mov
scas
push
sub
fs
inc
xchg
movsl
xchg
dec
mov
or
jns
mov
push
test
lea
and
dec
test
jmp
cmp
xchg
jns
outsb
in
dec
mov
jne
loop
daa
imul
jecxz
fiaddl
orl
jg
pop
in
mov
cmpsl
outsb
icebp
pop
icebp
movsl
rclb
push
mov
imul
pop
sahf
sub
mov
xor
add
jb
je
mulb
ret
sbb
and
outsl
jp
lods
jns
jno
and
adc
jno
pop
lret
add
std
inc
int
stos
xchg
imul
mov
and
jge
mov
adc
xlat
push
add
loope
adc
fs
loopne
pusha
mov
push
out
sbb
sub
loope
fiadds
into
mov
mov
subl
cmp
xchg
cmc
cmp
imul
mov
fabs
test
mov
mov
ret
addl
shrl
mull
add
roll
push
cld
repnz
test
sahf
ret
pop
stos
sarl
xchg
insb
jno
lidtl
lea
mov
addl
bound
pusha
rclb
repnz
test
cmp
fistps
fisubl
or
mov
dec
loope
lcall
test
mov
iret
insb
mov
push
cmp
scas
dec
mov
ret
cltd
jns
ljmp
inc
xchg
movsb
xor
or
xor
and
shrb
cli
jp
push
cmc
mov
or
push
jb
xchg
shrl
mov
xor
dec
fstp
out
or
mov
gs
dec
cmpsl
data16
dec
test
jge
cwtl
cltd
push
ds
hlt
sub
push
cli
mov
repz
mov
jle
rorl
sub
or
stos
loope
sbb
shl
inc
jp
in
jns
jno
pop
xor
repnz
bound
sbb
lods
inc
dec
test
or
cltd
sub
xorl
call
mov
jne
test
xchg
dec
mov
movsl
xor
arpl
lret
push
mov
and
std
ret
stos
adc
jmp
stos
aam
out
rolb
pusha
or
shl
pop
inc
sub
add
stc
pop
int3
push
bound
mov
loopne
pop
push
mov
mov
jle
jns
andl
cmc
jmp
bnd
outsl
mov
and
addl
push
xorl
mov
jp
cs
mov
pusha
mov
test
cmp
es
fld
xor
mov
and
pop
xchg
mov
imul
aam
test
jns
loope
sahf
shlb
insl
push
test
or
lock
pop
mov
fsubl
sahf
add
sub
gs
adc
test
push
mov
in
les
loope
cld
aaa
mov
subl
xchg
mov
push
icebp
pop
test
scas
mov
sbb
js
xor
in
imul
cmpsb
or
cmp
pop
sub
data16
shll
arpl
sahf
insb
incb
lds
and
xchg
pop
mov
adc
les
dec
loopne
mov
test
fildll
scas
icebp
je
add
jmp
lds
mov
shrb
call
out
mov
sbb
movaps
loope
mov
test
mov
mov
adc
or
add
frstor
cmp
jo
cmpb
add
ret
mov
popf
xchg
sbb
fmull
mov
lea
in
jle
cmp
sbb
pusha
sahf
stos
pop
cwtl
jno
lods
sub
cmp
iret
rcrl
or
xchg
jecxz
insb
rorb
mov
cld
loop
jno
in
jp
jo
test
or
in
call
mov
fists
pop
mov
mov
jne
push
insl
add
mov
in
imul
mov
arpl
and
arpl
lea
js
sbb
mov
movl
cmpsl
xchg
sbb
mov
cltd
sbb
xchg
sub
xchg
notb
inc
push
sbb
popf
in
cltd
imul
sbb
push
mov
lret
pop
stos
popf
sbb
or
gs
int3
movsb
into
add
stos
jns
mov
insl
add
repnz
jns
aam
mov
stc
sbb
adc
dec
fnstenv
cs
xor
jge
ja
mov
fcoml
subb
xchg
out
clc
xchg
inc
cmp
xor
into
adc
and
cmp
sbb
arpl
cmp
repnz
jns
out
outsl
jo
sbb
mov
pop
fs
inc
stos
sbb
and
mov
xchg
mov
mov
inc
int
in
imul
jge
dec
adc
jns
scas
jecxz
movsb
test
add
jmp
int3
add
fldenv
jae
xor
test
adc
ljmp
mov
imul
cli
add
push
mov
call
mov
std
cltd
and
fldenv
stos
sbb
call
int
outsl
push
xchg
mov
imul
je
mov
dec
or
sub
and
push
mov
xchg
xor
shl
test
test
fstpl
adc
jecxz
push
xlat
mov
loop
cmc
jns
sti
cli
push
shrl
aas
cltd
sub
mov
arpl
lods
inc
lea
push
negl
inc
int
xchg
cmpsb
and
cmp
dec
mov
and
insl
aaa
add
sarb
fistpl
or
lods
adc
push
out
xor
cmp
int
outsl
add
fld
test
or
and
sbb
push
jecxz
ficompl
and
xor
mov
sub
mov
lret
or
imul
repnz
add
cld
mov
pop
xlat
lret
mov
cmpl
add
fwait
inc
pop
mov
mov
stos
insl
mov
push
push
xorl
sbb
inc
sub
arpl
lret
push
pop
jge
xlat
mov
adc
shrl
inc
lcall
pop
sbb
cltd
repz
mov
mov
mov
lret
imul
or
pushf
aam
test
cmp
xchg
cmp
sub
ret
mov
xor
xchg
rcll
xchg
sub
inc
frstor
sbb
cmpsl
lret
add
mov
or
and
andb
and
add
mov
and
movsl
cld
push
scas
or
mov
inc
dec
ret
mov
add
data16
inc
push
sbb
mov
loope
hlt
adc
mov
xor
mov
or
inc
in
add
inc
stc
jne
data16
mov
mov
push
sbb
jmp
adc
mov
popf
movsl
leave
push
insl
insb
push
push
dec
icebp
mov
xchg
rcrl
jno
inc
mov
mov
ljmp
adc
movb
and
push
jge
adcl
lahf
lret
sub
pushw
mov
sub
stos
sub
aam
arpl
outsb
add
jbe
jmp
and
push
inc
push
xchg
lahf
cmp
das
cmp
lcall
not
out
rcll
adc
outsl
mov
loope
mov
mov
imul
sbb
shr
mov
jno
stos
cmc
cmp
int3
cmp
sub
dec
sbb
aaa
out
mov
roll
fsubrl
cs
dec
jno
jl
add
dec
mov
lahf
out
cvtps2pd
pop
mov
es
icebp
loope
movsb
mov
and
xor
arpl
add
mov
bound
inc
mov
and
out
subl
xchg
in
jge
push
sbb
fnstcw
out
or
dec
add
push
test
fmull
mov
in
sbb
test
or
jmp
mov
add
gs
sbb
and
sbb
fistpll
mov
xchg
dec
lret
out
xchg
push
aam
lods
mov
pop
adc
lcall
or
push
mov
and
add
bound
mov
inc
sub
sub
mov
icebp
popf
jmp
test
lock
stos
and
rcll
call
rcll
sbb
mov
fcoml
lea
sub
and
lea
rclb
test
push
mov
pop
aam
cld
adc
cli
jb
popa
fsubrs
ss
jns
mov
insb
inc
pop
rcrl
imul
inc
dec
bound
mov
adc
mov
ss
testl
fistps
pop
xchg
sbb
scas
or
xor
popf
stc
test
imul
sar
rcr
nop
push
shll
sbb
and
sub
dec
scas
sbbl
and
mov
outsl
push
fadds
rorl
inc
test
mov
sub
lea
pop
cmp
mov
shlb
jae
push
insl
inc
popa
bound
cli
mov
push
pop
bound
inc
mov
pop
mov
test
mov
mov
mov
jmp
adc
outsl
cmc
jmp
shlb
arpl
inc
dec
lea
push
pop
test
cmp
xchg
sub
bound
test
sbb
imul
cld
aad
sub
gs
flds
repz
mov
pop
arpl
aad
dec
enter
in
fnstcw
lods
test
inc
or
cmp
jl
mov
dec
inc
loop
mov
ret
xchg
and
push
adc
and
mov
test
push
popf
jge
rol
jp
xor
aam
adc
xchg
xchg
inc
addr16
mov
shl
sub
jg
cwtl
je
jp
in
jb
subl
insb
jns
push
jp
sub
adc
mov
and
adc
xchg
fisubs
clc
push
or
arpl
inc
pusha
rclb
lret
dec
mov
xchg
orl
in
and
pop
mov
data16
imul
test
mov
mov
sub
xor
gs
hlt
shr
push
scas
fwait
sbb
in
int
mov
jns,pn
fs
mov
aas
mov
movl
xchg
in
je
pusha
sbb
loope
gs
xchg
sbb
jo
mov
mov
mov
dec
push
adc
test
data16
mov
jg
push
sbb
mov
pusha
outsb
jmp
and
adc
gs
mov
xor
adc
cs
xor
jecxz
dec
jle
cltd
insl
dec
decl
inc
fcompl
mov
and
mov
jmp
push
and
in
shll
addr16
stos
sahf
sbb
rcr
mov
rclb
and
jb
fldl
mov
inc
sub
das
mov
adc
imul
out
ljmp
icebp
cs
les
push
mov
rcll
sub
fucomp
lret
insb
dec
cmp
insl
inc
add
movsl
and
aam
and
cltd
mov
test
iret
mov
shll
ljmp
jle
popf
jne
xchg
mov
or
test
int
sub
les
fs
inc
jne
push
call
fcompl
dec
cmp
jne
pop
pop
push
xchg
movsb
mov
scas
idivb
and
xchg
in
data16
je
call
dec
sbb
pop
xchg
cmp
mov
icebp
jb
movsl
pop
mov
add
dec
mov
xor
dec
mov
in
add
mov
and
gs
pop
sbb
mov
sbb
rcrl
mov
cli
jae
jno
shl
push
inc
mov
push
fidivrs
xchg
fs
addb
je
and
popf
add
outsl
dec
add
add
mov
gs
push
scas
adc
les
cmp
std
in
cmp
mov
imul
cld
xchg
test
repz
jle
bound
loop
bound
or
jnp
cwtl
mov
xchg
sub
in
loope
ret
push
or
sub
cld
push
sbb
mov
daa
arpl
add
mov
adc
xchg
xor
ficomps
cmova
jns
push
mov
adc
push
insb
cmp
jbe
inc
mov
cltd
sbbb
jp
push
xchg
cmpsb
mov
lret
or
mov
ljmp
outsb
lods
rol
scas
add
fldcw
iret
gs
xchg
scas
dec
sbb
fdivrl
imul
mov
in
mov
mov
push
scas
mov
incb
jecxz
or
pop
insb
jo
adc
in
repz
cmpsb
cmp
mov
jg
lret
cmp
and
roll
call
lea
mov
mov
sub
je
push
xchg
call
test
mov
daa
adc
pop
jmp
sbb
cmp
testb
or
popa
shrl
hlt
loope
mov
inc
test
mov
lock
popa
mov
sbb
xorl
xchg
xor
js
mov
adcl
out
popf
loope
xchg
inc
or
push
cmp
int3
xchg
aad
insb
movsb
arpl
mov
or
sub
gs
stos
es
adc
sbb
ds
daa
imulb
jmp
js
sbb
cmc
jae
jbe
mov
scas
add
in
repnz
add
gs
mov
sti
mov
loop
jno
xchg
mov
jp
push
mov
or
sbbl
leave
ljmp
popf
cmc
and
pusha
nop
xchg
cltd
xchg
push
push
lock
cs
push
cltd
arpl
inc
icebp
popf
insb
or
inc
push
jbe
mov
mov
sub
inc
rcrb
mov
in
call
mov
mov
stos
xchg
ja
into
sub
lahf
ds
add
dec
and
icebp
in
jmp
icebp
jno
push
bnd
or
bound
inc
jge
or
jl
add
lret
insl
add
push
adc
out
roll
out
sub
scas
xchg
repz
mov
sub
sub
fisubrs
mov
push
cmp
inc
arpl
and
mov
mov
sbb
in
pop
nop
into
das
xchg
lods
addb
push
shrl
pop
push
push
cltd
loope
push
push
xchg
adc
and
mov
pop
add
sub
in
mov
jo
mov
hlt
mov
shrl
mov
fiadds
aas
cmp
subl
xchg
adc
loope
out
or
clc
cmp
stos
cmp
shl
shrl
test
adc
mov
and
adc
push
mov
lds
cmp
adc
in
outsb
imul
imul
and
inc
mov
adcl
repnz
sub
pop
and
outsl
int3
fadds
jb
lahf
xchg
xlat
add
loope
pop
mov
mov
xchg
ss
mov
addr16
popa
jae
decl
sub
inc
pop
mov
sub
jp
xchg
fdivrs
loop
lds
jb
aad
fucomi
cmpsl
lret
mov
popf
fs
cmpl
push
std
xor
mov
aad
data16
and
bound
andl
ljmp
outsl
xchg
pop
push
stc
andl
lods
std
push
ljmp
test
sub
sbb
cmp
stc
sbb
sbb
fsts
bound
pushf
test
out
and
push
mov
jge
mov
mov
mov
sub
jno
ret
sub
adc
pop
push
dec
push
cmovbe
leave
arpl
out
jg
push
arpl
lret
push
inc
mov
std
push
mov
adc
or
fcomps
je
mov
mov
shll
in
push
inc
pop
xchg
das
cmp
add
dec
sub
test
div
shrl
xor
and
adc
mov
inc
add
fcmovu
les
cmpl
push
aad
adc
mov
leave
jne
popf
add
bound
push
pop
inc
jmp
mov
jl
lret
mov
pop
sub
and
lea
mov
sbb
rorb
notl
sbb
leave
jge
mov
mov
fiadds
push
xorb
jae
xchg
or
je
arpl
cld
xor
loope
popf
jns
out
imul
inc
push
jge
lods
dec
xchg
inc
inc
scas
xor
jns
push
mov
flds
mov
lea
or
mov
loope
push
outsb
jge
cld
dec
popa
stc
loopne
mov
div
cmp
mov
rcr
mov
xor
js
movsl
fsts
ja
mov
insl
inc
mov
mov
jle
lea
mov
cmpl
and
mov
and
std
dec
loope
mov
mov
xchg
sahf
pushf
call
loope
aas
lea
dec
push
jge
mov
scas
mov
mov
iret
push
cmc
jns
stc
cwtl
ret
xchg
sbb
inc
iret
scas
push
imul
xchg
lret
cmc
lds
je
out
sub
bound
out
and
cwtl
mov
ret
xor
add
mov
das
mov
xor
repz
sub
ret
push
push
nop
ljmp
sbb
popa
mov
and
inc
push
test
cltd
rorb
dec
es
out
sarb
fwait
mov
lret
and
xchg
push
inc
ss
mov
add
sbb
sahf
jae
mov
and
pop
or
subl
jns
mov
push
push
push
mov
movsl
cmc
mov
aaa
mov
and
in
push
cmc
jno
mov
ljmp
xor
xor
xchg
xorl
mov
imul
sbb
ficoms
push
push
xor
push
stc
jmp
mov
cltd
jp
jge
jne
and
pop
mov
sbb
int3
in
sub
fists
int3
fadd
or
adc
push
movsl
in
fildll
sub
jne
daa
test
xchg
addb
insl
cmp
sbb
pop
shlb
daa
cli
mov
and
push
and
in
lea
adc
mov
setns
clc
enter
or
xchg
int3
cmp
bound
or
sbb
jge
fdivr
mov
push
rcll
push
mov
inc
loope
push
int
arpl
flds
in
mov
iret
mov
pop
mov
adc
fsubr
mov
mov
and
fucomi
bound
sub
inc
and
xlat
push
roll
adc
cmpsl
arpl
and
bsf
xchg
mov
mov
xchg
cmc
and
dec
stc
inc
or
das
shrl
adc
test
pop
mov
or
xor
push
aas
mov
sub
movsl
or
inc
adc
push
dec
inc
mov
notb
pop
cmp
int
gs
and
jmp
mov
xchg
notl
mov
shll
stc
jge
cwtl
mov
or
inc
mov
jle
or
fimuls
mov
add
fisubrl
xchg
sbb
jecxz
fucom
mov
mov
mov
mov
mov
xchg
lds
clc
out
stc
es
cltd
adc
lods
loop
rcr
mov
dec
push
inc
dec
loope
sbb
js
imul
fstl
repz
cmp
ret
lahf
pop
icebp
loope
in
arpl
in
sahf
mov
sub
stos
xor
arpl
mov
dec
shll
sub
adc
mov
pop
stos
mov
add
dec
test
gs
add
lock
daa
jbe
rorl
dec
dec
imul
jg
lods
mov
pushf
movsb
mov
insb
int
test
cmpsl
icebp
arpl
mov
lds
xchg
sbb
mov
dec
push
mov
dec
ds
mov
rolb
xor
mov
and
jno
adc
je
mov
cli
fists
sbb
mov
test
push
mov
inc
arpl
insl
stc
xor
cmc
roll
xchg
int
xor
movsl
aam
inc
lret
and
cmpl
call
das
cmp
pushf
out
jmp
imulb
jl
cmp
sub
inc
or
jns
lret
xchg
imul
add
mov
or
gs
pop
dec
jno
das
lds
add
movsb
popf
aam
xchg
xor
mov
pop
mov
adc
push
and
fdivs
push
out
sbb
and
lcall
xchg
sbb
jno
cld
dec
ret
les
jnp
and
rcll
lcall
icebp
bound
cmp
push
sbb
mov
call
in
sub
adc
lea
xorb
jle
push
lcall
fstl
jo
inc
sub
nop
push
xchg
xor
cld
cmp
aam
xchg
mov
cwtl
pop
fmul
addr16
sub
mov
popa
aad
test
sti
jne
clc
jno
sbb
int
adc
mov
or
cmpb
and
scas
je
nop
mov
in
inc
adc
xchg
and
daa
xchg
leavew
cld
sbb
pop
pop
sub
aam
scas
push
fisubrl
arpl
cltd
lret
sti
in
imul
movsl
iret
fcompl
dec
mov
test
outsl
mov
enter
adc
lret
inc
adc
mov
add
test
lock
and
in
icebp
xchg
cmp
push
pop
cmp
fiaddl
pushf
shlb
and
movsb
cli
mov
imul
sub
sub
jge
xchg
sbb
shll
daa
shrl
jo
out
sbb
loop
mov
mov
int
sbb
mov
in
fbld
jae
pop
mov
imul
sti
xchg
dec
shll
test
frstor
xor
loopne
out
cmp
pop
pop
sub
or
stc
shll
adc
jnp
fisttps
out
out
inc
mov
fldenv
mov
cmp
xor
or
test
out
jb
je
inc
gs
or
cmpl
pop
cltd
les
fstl
mov
mov
mov
test
push
bnd
mov
cltd
or
adc
mov
jp
xor
push
and
sbb
xchg
test
xorl
andl
hlt
mov
inc
dec
lret
mov
std
jg
cmp
jne
daa
ja
mov
push
and
ljmp
jbe
int
lea
and
rcll
cmp
jge
push
mov
mov
dec
xchg
or
mov
inc
cltd
cmp
mov
mov
idiv
dec
mov
and
xchg
mov
cmp
cld
outsl
inc
andl
or
jge
leave
jnp
pop
repz
loope
add
xor
lock
out
fld
cmp
ja
mov
mov
push
inc
dec
cltd
push
mov
mov
bound
mov
jns
mov
mov
test
insb
fistl
and
sbb
test
and
sarl
push
jns
sub
pop
dec
cmpsl
daa
dec
push
and
mov
imul
jno
mov
push
popa
cmp
mov
frstor
orl
push
setns
add
fnstenv
jb
and
push
cmp
shlb
ja
inc
xchg
test
in
lret
adc
sbb
inc
es
mov
and
jle
jae
div
cltd
dec
dec
push
mov
or
push
test
mov
pushf
add
mov
stos
test
mov
fnstcw
xor
repnz
punpcklwd
dec
mov
xor
test
pop
sarl
inc
adc
jns
cmp
mov
popa
andnps
shl
idivl
pop
sub
mov
cmp
movlpd
mov
push
bound
inc
and
daa
call
jno
imul
pop
test
inc
in
cmp
ja
push
and
and
adc
xor
nop
mov
inc
popa
mov
int
hlt
lahf
add
arpl
or
das
sub
insb
cmp
mov
xchg
test
out
outsb
nop
dec
sbb
test
flds
out
subb
loope
divb
adc
fnsave
int
adc
nop
mov
stc
popf
pop
mov
notl
adc
pop
jae
xor
inc
cmp
loope
imul
mov
xchg
mov
cli
shll
shlb
loope
les
cld
fildl
stos
inc
cltd
hlt
jge
jecxz
hlt
out
mov
cmp
loopne
sbb
cmp
cwtl
cmp
bound
mov
sub
jbe
les
in
pop
dec
data16
mov
mov
mov
add
jo
inc
xchg
jno
and
mov
xchg
push
cmp
fstl
cmp
scas
sahf
in
xchg
add
dec
cmp
mov
insl
sbb
test
insb
jmp
sub
shll
mov
inc
xor
stc
adc
out
lea
das
sub
mov
int
adc
adc
mov
jne
out
icebp
and
mov
mov
test
lahf
mov
ja
lret
repz
aam
pop
and
adc
push
cmp
enterw
mul
insl
inc
jge
sub
incl
test
stc
stos
test
adc
shrl
xchg
ror
push
repnz
test
in
jl
adc
icebp
fwait
mov
xchg
jno
pop
inc
xchg
sahf
dec
mov
aas
sbb
or
jo
mov
cli
addb
mov
or
push
jb
lcall
push
xchg
xchg
cmp
sahf
imul
mov
fstl
jle
das
shll
inc
adc
repnz
bound
aam
and
loope
std
cmc
sub
clc
cld
cmp
inc
shr
scas
and
xchg
add
mov
jns
lods
mov
fidivrs
mov
push
jge
gs
sbb
rcl
mov
xchg
out
mov
insl
int3
frstor
pop
clc
leave
fiaddl
stc
sarb
push
adc
adc
push
push
aas
cmpsl
cltd
arpl
in
adc
les
insb
shll
inc
add
nop
int
push
push
mov
sbb
inc
in
mov
arpl
cmp
or
sub
cmp
cmpsl
jae
cmc
mov
je
cmp
add
dec
pop
lcall
daa
imul
push
test
xchg
mov
sub
xchg
nop
insl
xchg
or
push
repnz
cmpsb
jmp
jg
xor
stos
adc
adcl
sahf
mov
pop
dec
sarl
gs
int3
fistps
mov
push
adc
ss
std
scas
cltd
xor
pop
insb
in
mov
fildll
xchg
jns
mov
cli
xchg
sub
or
lret
sarl
pop
xchg
fdiv
sarb
jne
stc
pop
or
pushf
inc
push
jns
pop
les
loope
gs
mov
inc
jae
hlt
sub
jne
nop
push
inc
iret
out
fists
mov
ret
xchg
sub
pushf
mov
pushl
pop
sarl
jmp
mov
jno
inc
test
push
ljmp
test
inc
jae
or
and
ja
test
adc
cmp
insb
and
rclb
rcll
inc
notl
data16
mov
or
sub
lahf
inc
mov
leave
or
push
add
hlt
dec
andl
inc
leave
jecxz
inc
mov
dec
pop
mov
mov
aad
sub
and
test
inc
lods
int
data16
hlt
int
bound
and
fstps
jle
mov
mov
cmpsl
push
mov
pop
mov
movsb
adc
sub
adc
jns
jp
dec
ja
orb
or
mov
xchg
insb
outsl
clc
stc
pop
sub
cmpsl
stos
lret
add
out
mov
popa
and
test
cmc
outsb
rol
clc
jae
mov
xlat
cmpsb
imul
or
loope
ficoml
insl
enter
mov
xor
add
jae
imul
mov
jle
sbb
sbb
daa
lahf
sarb
stos
dec
cmpb
jno
fildl
push
mov
xchg
add
add
jmp
pop
aas
lahf
jne
mov
lds
test
pop
xor
adc
ss
fs
clc
in
xchg
dec
inc
lea
rorl
adc
pushl
or
pop
lahf
imull
or
push
jne
cmc
sarb
les
adc
lods
push
in
or
data16
push
xor
rcll
push
ja
adc
cmp
icebp
movsl
rol
ljmp
cmp
xchg
or
push
mov
xor
bound
mov
sub
or
arpl
push
sub
lahf
jbe
inc
inc
nop
pop
cmp
rorb
pop
cmc
sub
scas
dec
push
mov
lcall
dec
push
push
push
fst
jb
arpl
mov
mov
pop
push
sti
fwait
subl
sub
test
std
pop
shl
xor
test
cwtl
movsl
and
out
mov
stc
mov
jno
mov
aad
jbe
sub
push
test
je
loop
lods
arpl
jmp
pop
test
add
int3
sbb
push
in
test
or
leave
repnz
mov
or
fidivrs
jmp
adc
mov
arpl
add
jno
jge
shll
in
mov
inc
adc
rcrb
dec
cmpl
out
pop
popf
arpl
aad
mov
dec
pop
insl
mov
and
loop
leave
andl
and
rclb
add
imul
stos
xchg
sarl
xlat
sub
ljmp
lcall
subl
mov
stc
popf
push
fistps
adc
jb
bound
fwait
push
mov
mov
loope
sbb
adc
fwait
negl
scas
mov
pop
shl
and
mov
jnp
dec
cmp
insl
jb
bound
ret
shrb
jl
ret
popf
shll
int
mov
icebp
lret
fsubl
mov
xchg
stos
arpl
jbe
cld
cmp
pop
sub
sar
test
jae
cmp
cltd
cltd
stos
and
loope
cmovl
sbb
jg
fadds
bound
sbb
or
mov
push
cmp
and
bound
ficompl
mov
ja
insl
cmp
adc
push
aad
add
pop
mov
add
inc
lods
repz
leave
jge
sub
movsl
dec
gs
and
cmp
gs
adc
loope
notb
mov
cltd
aad
mov
cmc
gs
dec
mov
sbb
je
insb
subb
fbstp
popf
hlt
push
insl
js
test
add
push
aaa
xor
inc
fiaddl
loop
and
xchg
lods
cltd
addl
adc
mov
mov
imul
lret
imul
push
cltd
bound
dec
pop
iret
mov
sbb
and
push
push
mov
or
cmp
and
sub
test
insb
icebp
dec
cmp
sub
cltd
or
clc
ret
jno
pop
lcall
and
pusha
ljmp
in
idivl
fdivl
xchg
adc
arpl
andl
cmpsb
movsl
aad
or
add
ja
pop
add
loope
and
js
je
rorl
add
repnz
add
xorl
xor
arpl
stos
sarb
mov
fldcw
loopne
repz
jge,pt
stos
cmp
in
arpl
sub
nop
mov
and
sbb
loop
jno
test
jp
jp
xchg
divl
jbe
dec
push
inc
jmp
or
shll
test
rol
push
jbe
inc
jno
in
int3
inc
in
adc
int3
js
negb
pop
xor
imul
test
mov
pushf
push
sub
loope
out
jns
stos
icebp
loope
cli
gs
je
adc
cmc
and
movsb
mov
push
dec
jnp
fdivl
xor
jb
insl
bound
mov
bound
sub
cltd
jecxz
or
or
pop
shl
jae
std
loope
lret
xor
xchg
shl
mov
ds
test
xchg
sbb
nop
sub
push
push
loope
adc
scas
jp
sub
cmpb
lock
mov
aad
dec
pop
or
push
sahf
sub
mov
roll
aad
adc
inc
loop
pop
rcl
popa
dec
scas
push
push
mov
adc
mov
dec
ja
inc
aam
stc
xor
jns
lret
sub
sahf
jne
cmp
inc
jmp
ret
mov
pop
dec
add
jp
insb
jno
mov
add
push
iret
or
shlb
sbb
jae
outsb
dec
shrl
je
js
lahf
pop
adc
bound
jb
das
mov
arpl
xchg
cmpsb
pushf
shll
and
lahf
lds
sub
inc
dec
fildll
mov
jle
je
or
dec
test
addr16
daa
lcall
inc
aad
in
xchg
popa
out
faddl
mov
and
mov
sub
push
data16
andl
roll
jns
bnd
shrl
ret
stos
xchg
out
adc
paddsw
jo
dec
push
fdiv
shll
jnp
jne
dec
push
jns
pop
sbb
imul
add
imul
mov
cmp
fcoml
arpl
adc
or
mov
xor
adc
subb
clc
dec
std
and
mov
fxam
nop
push
add
bound
xchg
cmc
out
xchg
mov
popa
jmp
jns
fwait
roll
and
push
in
lods
mov
stc
push
loopne
mov
out
sub
inc
imul
lcall
push
in
jle
dec
sar
pop
mov
popf
insb
jne
mov
adc
jo
jae
xchg
or
jae
stc
out
rorl
shlb
and
cmp
imul
popa
adc
cmp
mov
stc
ret
mov
fcompl
xchg
mov
push
nop
lock
adc
pop
pop
mov
mov
into
or
xchg
sbb
xchg
inc
stc
popa
jne
js
mov
pop
jp
pop
fyl2x
outsb
jno
add
ja
mov
in
aam
and
cmp
mov
pop
rcrb
mov
push
lds
js
sub
loope
xor
pushf
push
mov
push
pop
rcrw
pop
sbb
shrl
push
pop
mov
sbb
aas
jge
mov
dec
enter
sbbb
mov
inc
cs
stc
in
mov
clc
push
xchg
test
sbb
test
push
testl
int
data16
arpl
jmp
cmp
add
or
stc
jne
imul
jl
push
push
cwtl
push
test
mov
ja
incb
mov
fldt
int
es
xchg
inc
repz
cmp
inc
pusha
cltd
in
stos
inc
adc
and
int3
mov
and
adc
sbb
jo
push
dec
mov
mov
rcrl
jle
ret
aam
rolb
or
pop
imul
cmp
bound
aaa
inc
push
sarb
dec
xchg
sub
gs
adc
lcall
sahf
sub
pop
mov
and
aad
jb
popa
les
pop
ljmp
addr16
xor
movsb
jl
or
stos
stc
jns
xchg
fmulp
imul
repz
fistl
loop
xchg
hlt
jge
inc
mov
or
jbe
loopne
and
imul
dec
sbbl
aam
dec
js
add
and
clc
cmp
popf
test
bound
mov
ja
outsl
mov
cmp
dec
std
repz
in
loopne
in
mov
add
nop
ret
inc
arpl
popf
hlt
loope
loop
popf
icebp
xchg
cld
xor
pop
mov
dec
cmc
adc
jb
push
jl
lds
std
out
dec
mov
in
or
mov
subl
mov
fimull
jns
push
bound
clc
lcall
or
inc
sub
in
je
rclb
mov
bound
push
loop
xchg
popf
inc
cmp
jp
lret
sub
shll
popf
lods
test
mov
xchg
rorl
inc
jne
int
mov
xchg
aas
push
shlb
mov
icebp
shr
and
or
cltd
ret
cmpl
xor
rcll
fstl
aad
mov
clc
jae
mov
int
push
jns
or
mov
fistl
mov
fdivr
push
repz
ret
cmp
mov
dec
and
out
sbb
adc
add
cli
sub
imul
pop
loopne
cmpsb
add
shr
cld
cmp
add
bound
lcall
push
jl
loope
or
in
dec
lret
xchg
insl
dec
data16
fcmove
jecxz
sub
jno
xor
lret
mov
push
mov
loopne
sub
outsb
push
add
pop
jnp
mov
adc
fmull
mov
pop
pop
imul
rorb
add
daa
push
inc
andl
cmp
pop
inc
jbe
mov
shll
xchg
cltd
adc
aad
call
inc
ljmp
loopne
mov
test
push
leave
test
movsl
bound
loope
leave
test
sbb
mov
add
sbb
out
pop
jne
imul
xor
cli
sbb
or
pushl
inc
in
jne
fnstenv
push
sub
xchg
lea
mov
lods
push
jb
inc
inc
dec
test
mov
sub
fwait
stc
jmp
pop
xchg
inc
adc
stos
sarl
fildl
pop
fisttps
adc
fs
loope
cmc
pop
js
sbb
jne
push
in
andl
in
fildll
aad
xchg
fadds
dec
mov
pop
mov
mov
addl
clc
adc
jae
pusha
xchg
dec
jnp
xor
push
mov
movsb
adc
fldenv
lock
mov
or
adc
das
xchg
int3
hlt
testb
pop
shl
mov
std
sarl
lret
or
dec
scas
mov
arpl
test
in
xchg
icebp
inc
inc
mov
mov
fadds
je
jne
jmp
pop
inc
lcall
jno
arpl
enter
cmp
fisubs
sub
test
je
sub
iret
orl
stc
jae
adc
or
mov
pop
sub
movsl
rorb
pop
mov
out
push
fs
xchg
push
or
pop
cltd
sbb
inc
sub
inc
lock
out
dec
push
in
insl
and
mov
sbb
popf
mov
in
sub
adc
add
and
std
insb
stc
out
movsb
mov
bound
add
pushf
xlat
sub
ret
sbb
insb
das
out
xor
fisttpl
rorb
lds
push
test
lds
mov
leave
lret
sbbl
cmp
or
int
jl
mov
cli
push
jns
data16
pop
fstl
test
pop
clc
inc
inc
data16
sbb
rcll
decb
lods
pop
push
in
or
or
sbb
lea
mov
lock
ret
cmc
inc
xchg
mov
jmp
rol
or
imul
rolb
iret
dec
scas
sbb
dec
sub
imul
mov
and
mov
pop
js
shll
and
cmp
loopne
and
mov
cmc
xchg
gs
shr
jno
or
loope
push
or
pop
mov
adc
jg
stos
cmp
adcl
mov
mov
or
jl
insl
dec
shlb
repz
jg
adc
xchg
xchg
xchg
mov
in
subb
mov
popf
push
inc
cmc
arpl
icebp
or
jo
icebp
adc
in
jl
sbb
sti
addl
mov
in
jmp
jns
cs
cmp
xchg
sub
pusha
jae
mov
pop
in
xor
inc
popf
mov
popa
test
adc
sbb
shll
shrb
ja
mov
mov
rol
jne
stos
mov
jmp
cld
jecxz
lods
cltd
test
xchg
adc
inc
test
push
dec
dec
insb
vcvtpd2ps
jmp
xor
push
jp
stc
mov
repz
pushw
ss
mov
xchg
aad
mov
bound
cmpsl
psubb
lods
loope
test
addr16
aad
add
lods
adc
mov
out
inc
sbb
and
roll
cmpsb
inc
cmc
mov
xchg
add
push
roll
push
negb
sbb
sahf
add
sub
sub
xor
out
cwtl
outsl
jo
cli
jno
xchg
xchg
int3
stos
lods
and
xchg
popf
inc
sarl
push
or
and
mov
dec
push
loope
les
shrl
insl
mov
sbb
lcall
aam
bound
insl
push
bound
std
sub
aad
jb
fnstenv
test
or
adc
insb
imul
pop
cltd
fcomps
xor
lods
loop
sub
in
sbb
mov
adc
adc
inc
push
aad
loop
jno
jb
jae
fildll
jl
nop
xor
shr
add
scas
pop
das
pop
push
adc
mov
ds
xchg
ja
clc
stc
pop
in
push
push
adcb
ja
push
pop
sbb
test
jno
mov
mov
mov
arpl
test
int
and
push
mov
push
icebp
sarl
pop
push
mov
repz
mov
xchg
mov
gs
sub
jmp
jmp
addl
outsl
add
push
gs
inc
imul
dec
arpl
push
sub
out
fsts
mov
data16
ss
lea
cli
cmp
xchg
ja
out
jmp
add
jne
pop
and
std
icebp
jmp
movsb
mov
js
sub
movsl
and
xchg
pushf
ljmp
stc
loopne
daa
cmp
bound
pusha
lret
push
pop
icebp
mov
and
cli
mov
jp
cmpl
jno
fdivl
pop
dec
test
push
jmp
and
mov
pop
insb
insb
mov
add
pop
fmulp
adc
sbbl
jne
fs
test
mov
and
jl
or
mov
shlb
jmp
mov
movsl
test
mov
xchg
leave
and
mov
push
inc
out
jge
mov
sbb
and
adc
int
cmc
jno
aad
mov
xchg
jno
jmp
imul
cmp
out
xor
cltd
sub
popa
jl
imull
in
mov
bnd
test
mov
jb
cmp
add
xchg
lret
xchg
xor
and
push
insb
stos
fsubl
bound
shll
pop
repz
test
rcr
xchg
adc
fdivrs
or
jge
fidivs
cmc
push
int3
cltd
subl
cld
data16
pop
insb
into
lods
rolb
aaa
stos
subl
fsubl
scas
ja
mov
aam
push
pop
xchg
add
adc
push
int
sub
and
dec
bndstx
lock
test
mov
mov
int3
add
bound
arpl
adc
loope
test
cmp
xchg
pop
je
and
in
mov
in
mov
loope
mov
int
inc
lea
push
pop
jne
and
leave
hlt
pop
and
cs
jbe
outsb
idiv
push
clc
dec
cltd
push
jne
in
jno
je
dec
aam
adc
lods
xor
xchg
dec
addl
adc
popl
arpl
xor
sub
mov
fnstsw
and
mov
jmp
insb
loop
mov
fucomip
mov
mov
sbb
gs
mov
ds
dec
xorb
idivl
lock
push
popa
arpl
call
and
jae
sbb
inc
and
mov
js
push
adc
repz
push
clc
push
leave
jb
arpl
std
ja
mov
in
jno
dec
loopne
aaa
icebp
fwait
shr
mov
push
or
dec
jno
ret
or
xchg
push
nopl
xchg
lock
add
arpl
dec
fnstcw
push
inc
xor
icebp
mov
insb
loopne
sub
fcoml
inc
sub
inc
sub
mov
imul
cmpsl
out
mov
ds
repnz
pusha
cltd
or
imul
jns
gs
in
jmp
add
pop
fwait
add
and
arpl
lock
mov
nop
mov
in
ss
imul
arpl
jne
stc
pop
mov
sub
xchg
mov
leave
mov
push
hlt
mov
mov
sti
imul
inc
cmp
ja
pop
dec
adc
ljmp
push
jno
imul
stc
jns
xchg
mov
daa
fwait
mov
test
xchg
sar
stc
mov
mov
mov
rolb
adc
mov
syscall
pop
lea
and
sbbb
lock
inc
pop
or
dec
xor
sub
xor
fwait
cltd
mov
xchg
mov
ret
xchg
jmp
and
jae
pop
inc
or
insb
adc
popa
xchg
and
pop
mov
and
jno
js
push
sub
and
lcall
xchg
xchg
or
xchg
push
js
and
lock
ljmp
sbb
sbb
cmc
andl
fwait
pop
stc
mov
pusha
jne
jne
mov
shlb
and
adc
std
cmp
and
leave
sub
add
sub
inc
sti
stos
daa
dec
jns
fsub
addl
dec
mov
imul
lods
pop
imul
sbb
loope
mov
inc
push
js
push
cwtl
jne
xchg
push
xor
xlat
push
jecxz
inc
clc
mov
xchg
sbb
sub
clc
lods
or
push
stc
movsl
pop
ljmp
and
fcmovnb
add
loopne
xchg
xchg
repnz
cmp
out
inc
jno
cmc
inc
es
in
imul
mov
adc
jo
mov
and
les
adc
loop
dec
outsb
popa
les
and
into
sub
test
fcomps
push
test
call
push
ficompl
add
lds
int3
mov
sbb
int
and
test
push
pop
inc
jns
addr16
lea
gs
loope
push
data16
nop
stos
pusha
or
push
div
arpl
add
aad
js
mov
lea
testb
xor
xlat
int3
jecxz
jno
dec
mov
movsb
arpl
cmp
iret
mov
push
fldcw
or
bound
out
popf
cmc
and
mov
sub
repnz
filds
call
inc
jo
js
inc
xlat
inc
frstor
aas
aad
sub
insl
adcl
lods
daa
mov
outsl
scas
les
inc
xchg
addb
cmpl
add
sub
fdivrl
adc
pop
lret
and
xor
testl
sbb
es
mov
test
repnz
mov
xor
rol
sub
imul
fldt
in
jo
push
stc
or
cmp
mov
mov
dec
mov
mov
mov
orl
js
inc
inc
mov
popf
cmpsb
lret
imul
repnz
xchg
jge
and
movsb
sub
ficoml
mov
and
loop
cmp
sbb
pop
out
and
adc
sbb
aam
add
and
sbb
clc
rcr
shr
gs
jle
nop
rcrb
aam
out
out
cmp
test
ja
push
inc
movsb
jmp
push
in
adc
lea
pop
add
loope
mov
xor
cmc
aam
mov
arpl
push
test
pop
insl
mov
arpl
cld
sbb
les
push
xchg
and
dec
test
sbbl
popf
loopne
lods
stos
and
lahf
loop
add
inc
jmp
movsb
addr16
mov
pushf
pop
cltd
je
and
test
pop
mov
xor
ja
and
jmp
sub
adc
mov
in
aad
xchg
cmp
xor
stc
sbb
pop
rcrb
and
shrb
inc
pop
ja
sub
cmpsl
outsl
cs
iret
lea
pop
jno
lret
pop
imul
jae
xor
mov
and
or
inc
gs
add
mov
push
ficomps
push
xchg
loop
cmp
test
sub
repnz
inc
adc
mov
mov
in
or
and
incb
mov
in
adc
mov
add
inc
js
lods
and
shll
mov
mov
dec
aad
jp
cld
inc
shlb
jge
das
push
and
js
cmpsb
or
enter
jbe
test
jae
push
rorl
shll
js
clc
mov
filds
mov
add
ja
vpunpckhdq
mov
inc
fdivr
loopne
imul
or
out
add
push
shl
std
sub
loopne
mov
stos
test
aam
or
loopne
sub
ret
push
repz
je
lods
pop
sub
imul
movsl
and
cmp
rorl
push
out
insl
repnz
sub
aam
adc
xchg
xchg
cmc
jo
mov
mov
xor
shll
sub
es
repz
add
repz
outsl
ja
pop
sbb
mov
cmp
andl
btr
movsl
mov
js
mov
push
adc
xor
pop
repz
sub
mov
es
sbb
imul
idiv
nop
inc
mov
mov
cltd
xchg
or
vrcpps
jno
mov
sub
jmp
pop
arpl
mov
test
arpl
push
out
dec
pop
xchg
push
jo
icebp
push
stos
sub
or
ret
mov
cli
mov
jl
sub
jle
pusha
sub
cmc
data16
movsb
xchg
shll
loope
dec
lea
fcmovu
mov
gs
jbe
popa
fcmovnu
leave
in
sbb
cmpsl
idivl
fldenv
push
sahf
push
dec
fisubrs
mov
into
movsb
push
and
add
lods
adc
jl
sub
xor
lahf
xchg
stc
cs
jo
add
dec
ret
aad
gs
xchg
lods
je
jle
dec
inc
inc
jge
leave
jb
arpl
inc
jl
aaa
leave
rorb
loope
cmc
and
aad
inc
in
inc
cmc
test
xchg
imul
sub
inc
leave
xchg
jno
inc
jmp
imul
orl
jbe
lea
sahf
call
andb
ret
mov
fnstsw
fdivrl
insl
or
movsl
test
and
hlt
xchg
rcr
mov
mov
push
shrb
imul
clc
push
cmc
sub
xor
leave
test
add
jns
sub
push
sub
bound
daa
lret
inc
jmp
cmpsl
mov
test
cltd
sub
mov
cmpsb
icebp
data16
jnp
xchg
ja
adc
fcmovnu
and
cmpb
ret
xchg
push
repz
inc
mov
scas
popf
fimuls
loope
in
xor
mov
sbb
orl
sub
or
push
pop
hlt
pusha
adc
add
shlb
cmpsb
jne
mov
push
add
fldl
push
mov
xor
mov
pop
jmp
scas
mov
lret
or
mov
ret
cmp
xlat
iret
cli
sarb
xchg
movsl
cmp
popa
inc
scas
push
rcr
mov
mov
jne
sub
movsb
add
jo
or
cmc
xorl
jae
in
rcll
outsl
js
adc
pop
mov
add
arpl
in
mov
std
pop
ja
pop
repz
roll
sbb
mov
ffree
out
in
aam
icebp
mov
pushf
mov
rcll
int3
adc
sarb
test
mov
pop
xor
jge
push
push
adcb
jge
lods
sti
cltd
test
sbb
adc
clc
push
xlat
mov
mov
mov
idivb
arpl
push
and
pop
test
nop
faddp
mov
sti
jae
fmull
mov
aad
imul
inc
nop
mov
decl
int
loop
push
std
gs
and
frstor
cmp
mov
rcrl
loopne
rol
pop
out
mov
sarl
dec
xor
mov
cli
pushf
movsl
cltd
or
mov
mov
popf
mov
shr
push
pop
je
js
out
mov
cwtl
push
cmp
mov
mov
pop
mov
stc
sarb
std
mov
pop
push
cmpsb
jno
roll
and
aaa
in
out
call
aam
pop
cmpsb
xchg
hlt
sbb
jne
and
int
aam
test
cmpsb
cmc
in
fcomps
mov
sbb
fldcw
push
loopne
popf
jne
push
fisubrl
loope
scas
cmp
cmpsl
arpl
mov
in
sbbb
sbb
lea
aaa
std
xor
pop
push
push
ret
xchg
test
sub
and
and
aam
add
ljmp
mov
adc
pop
or
testb
dec
roll
or
aad
loope
fld
jo
xor
stc
test
pop
out
mov
mov
out
and
bound
sarb
push
out
scas
sbb
dec
loop
addl
inc
bound
frstor
and
iret
pop
fmul
lods
pop
dec
inc
cmp
bound
push
mov
mov
inc
or
push
jecxz
movsl
sbb
jno
lods
fs
xchg
push
test
test
sahf
scas
push
mov
inc
fwait
dec
lods
adc
bound
jle
xchg
pushf
std
sarl
addl
fucomp
push
mov
cld
jmp
mov
mull
lods
fisttpll
and
inc
pop
fbstp
icebp
push
out
xchg
add
icebp
data16
es
and
push
daa
xor
sbb
rolb
lret
call
pushf
mov
mov
arpl
movsb
inc
icebp
mov
sub
adcb
pop
mov
stos
shlb
sahf
data16
ljmp
cltd
or
mov
inc
sbb
sub
insl
movsl
loopne
insl
fnstcw
cmp
movsl
push
push
cmp
lret
jge
bound
mov
in
mov
jge
mov
and
jecxz
mov
hlt
out
leave
push
xor
sbb
roll
or
adc
or
arpl
xlat
pop
pushf
xchg
sbb
sub
lods
loop
adc
mov
jae
jb
inc
mov
inc
loop
test
and
aam
hlt
and
stc
mov
bound
adc
dec
lret
lcall
xchg
xchg
fcmove
push
insb
or
fmull
or
sub
std
mov
subl
mov
pop
cmc
nop
inc
test
push
out
jnp
xchg
add
push
shl
mov
nop
in
flds
arpl
mov
inc
leave
std
outsb
mov
out
lods
neg
cmp
aad
pop
push
xor
and
loopne
xlat
and
push
jns
xchg
push
fnsave
mul
and
mov
lahf
mov
shll
pop
fwait
mov
nop
sarb
fucomi
jns
pop
pushf
pop
in
mov
inc
ja
jo
xchg
xchg
dec
cltd
mov
gs
imul
cmc
roll
mov
lods
insb
fistl
addl
push
mov
fcoml
xchg
popa
insl
sbb
test
mov
rcrl
sub
aad
and
lret
xchg
xchg
and
mov
sub
das
fcomps
cmp
jae
dec
adc
and
xchg
add
and
xorw
sub
test
sbb
bound
pop
add
jns
arpl
call
inc
fucomp
lds
jge
xchg
shll
int
pushf
or
dec
cmp
xchg
andl
ss
insl
loope
mov
hlt
js
dec
add
sub
push
sbb
and
jbe
add
mov
add
arpl
subw
ljmp
icebp
or
inc
inc
scas
iret
xchg
ss
arpl
sub
cld
jmp
lods
dec
and
push
bound
push
cmp
inc
loope
and
repz
xchg
mov
adc
shlb
fst
cwtl
cmp
andb
rol
cmp
jns
bound
out
ret
fdivs
sub
insl
xchg
imul
sub
andl
movsb
mov
mov
icebp
int3
adc
xchg
ds
subl
mov
lock
test
add
add
xor
xchg
push
jns
stc
scas
je
mov
jbe
and
icebp
dec
dec
inc
loope
sbb
mov
ss
cmp
test
pop
mov
out
mov
xor
int
mov
mov
fdiv
cmp
and
orl
mulb
mov
mov
clc
cmc
lds
mov
scas
lds
and
movsl
mov
and
inc
pusha
and
mull
inc
outsb
lcall
cmp
pop
pop
adc
pop
pushf
push
test
xchg
cmp
lock
rcrb
mov
rolb
xchg
stc
lea
or
inc
push
sub
daa
imul
jmp
pop
xchg
bound
cvtps2pd
hlt
ficompl
push
pop
fisubrs
data16
pop
mov
mov
mov
pop
inc
and
lret
leave
adc
sbb
cmc
arpl
std
mov
shl
stc
jge
test
lds
test
in
inc
xorl
pop
push
int
sub
dec
jl
inc
xchg
or
inc
orl
bound
xchg
push
insl
insl
jmp
loope
sbb
xchg
mov
mov
mov
fisttpll
sbb
icebp
imul
mov
adc
test
inc
xchg
orl
pusha
jp
pop
mov
test
and
push
loop
mov
negl
aam
mov
mov
into
inc
stc
bound
lret
sub
xchg
out
mov
adc
adc
testl
mov
or
int3
stc
in
icebp
nop
mov
sub
lods
hlt
and
mov
push
jmp
add
leave
push
cmp
push
lahf
pop
lds
daa
shll
mov
sbb
xor
movsb
filds
pop
icebp
fnstenv
gs
das
and
inc
xchg
jbe
js
mov
sahf
pop
popf
sbb
test
add
lods
mov
adc
fcmovnbe
inc
movsb
rorb
enter
lahf
cltd
mov
push
loope
push
dec
jge
repnz
xor
dec
jb
clc
lods
xchg
push
xlat
test
mov
mov
insb
push
fstpt
inc
int
je
aad
test
jge
push
jo
movsl
nop
pop
arpl
adc
outsb
mov
push
inc
imul
mov
fstl
add
mov
adc
inc
jnp
cmpsl
xchg
push
adc
or
adc
adc
in
mov
jae
pop
inc
dec
rcll
data16
std
and
xor
outsl
mov
push
jp
pop
cmpsb
dec
clc
outsb
inc
insl
out
sbb
jns
dec
repz
and
jl
popf
arpl
iret
lahf
fwait
pop
lods
pop
insl
jno
jae
sub
sbb
add
or
xor
mov
mov
cltd
inc
js
mov
sbb
dec
sub
outsl
test
or
pop
mov
mov
sub
test
jge
adc
dec
xchg
pop
mov
xchg
sahf
lods
mov
data16
ror
loop
sub
push
jae
or
pop
shrb
mov
loop
into
fiadds
mov
je
mov
mov
xchg
add
test
and
mov
push
xchg
aam
mov
andb
sub
and
lret
mov
push
mov
inc
xor
jno
fisubrl
lock
mov
add
and
das
adc
lods
cwtl
dec
xchg
and
inc
add
and
arpl
sahf
je
test
in
or
das
mov
movsb
lds
adc
ljmp
cwtl
daa
arpl
cs
arpl
ljmp
adc
fstpt
inc
sbb
and
mov
pop
cmpsl
mov
xor
jo
mov
sub
jno
outsl
ja
cltd
jp
jne
loope
xchg
pushf
outsb
or
cmp
push
ljmp
andb
bound
int
inc
scas
std
mov
shlb
mov
sbb
aad
out
sbb
sub
shrd
xchg
mov
mov
orl
mov
stos
sbb
loope
int3
push
ret
mov
inc
mov
dec
pop
xchg
sbb
clc
jae
inc
mov
push
mov
jb
and
jnp
aas
outsw
sub
sbb
rcrb
outsb
push
xor
icebp
push
dec
ffreep
inc
adc
mov
loope
outsl
mov
neg
mov
fimull
xchg
mov
stc
aas
and
cmp
inc
stos
test
lea
pop
jecxz
mov
mov
loope
cld
dec
push
shrl
xor
js
dec
mov
xchg
dec
xlat
iret
jae
dec
mov
mov
outsl
shll
fbstp
test
gs
fidivrs
idivl
dec
xlat
aad
in
aad
jg
sub
jae
add
ficompl
js
std
cmpl
mov
or
cmp
std
scas
icebp
inc
std
es
es
xchg
adc
and
push
push
cmp
aad
lock
shrb
and
add
cltd
push
sbb
xchg
sub
bound
repnz
add
mov
xchg
mov
popf
xchg
jae
xor
bound
dec
lret
in
pop
pusha
push
inc
shll
adc
addl
or
xchg
test
jg
int
shll
and
das
mov
dec
mov
mov
push
int
aas
into
int3
cmp
les
and
test
and
std
mov
daa
pop
sbb
pop
insb
cmp
cmpsl
popf
shrl
mov
adc
arpl
push
popf
je
aad
ss
push
insl
push
push
sar
loope
and
cmp
xchg
pop
inc
rcl
pusha
cmpsb
mov
cmpsl
mov
js
test
fldt
sub
movsl
xchg
faddl
mov
popa
arpl
test
inc
lods
jmp
jp
ljmp
and
icebp
sbb
cs
mov
sbb
sbb
shrl
pop
xchg
fstps
push
adc
and
lock
and
dec
cli
jae
imulb
push
loope
std
movsl
les
flds
sub
add
data16
dec
test
inc
mov
cli
cmp
lods
popf
bound
cmp
xchg
and
push
jmp
loope
pop
es
ljmp
sub
dec
mov
mov
cltd
xor
mov
andb
out
xlat
jne
inc
mov
sbb
mov
cmpb
into
mov
test
bound
rorb
out
popf
mov
lcall
sbb
mov
lds
rclb
cmp
add
jo
jecxz
sbb
sbb
ja
in
jmp
rorl
int
in
add
and
dec
shll
std
mov
pop
jae
shlb
or
vcvtpd2psx
jbe
mov
stc
xor
loope
lods
repnz
ja
fldl
mov
adc
mov
cmp
fmulp
test
jnp
cmp
loopne
nop
pop
cmpsb
divb
stos
sar
cmpl
jb
popa
mov
popf
shr
js
stc
stc
mov
mov
xor
jns
ds
leave
inc
mov
fnstenv
inc
in
cmc
and
mov
sarl
negb
fucomip
movsl
ja
clc
in
cmp
stos
push
les
sbb
xor
mov
mov
mov
push
xor
dec
xor
iret
push
cmp
gs
insb
mov
lock
mov
dec
and
sahf
movsb
pop
mov
je
lods
or
dec
xor
lea
adc
aam
popa
or
test
add
and
in
das
dec
roll
xor
mov
pop
pop
inc
dec
loope
iret
je
cmc
in
or
fldcw
or
cmc
jno
bound
xchg
rcrb
aad
sbb
out
pop
icebp
ret
test
cmp
std
adc
shr
ss
push
repnz
sarl
rolb
scas
in
ja
xchg
rol
ja
js
rolb
push
gs
cmp
call
mov
popf
sbb
dec
lock
imul
pop
mov
dec
dec
sbb
inc
push
fistpl
mov
rsqrtps
cltd
fldenv
mov
push
mov
rorb
insl
ret
nop
and
and
sbb
xchg
lock
jns
xchg
dec
insb
push
sbb
or
sub
fincstp
insb
jb
sub
xlat
and
dec
ljmp
insb
inc
pusha
xchg
jge
mov
xchg
sub
idiv
rcl
arpl
inc
das
push
movl
mov
das
jns
fisttps
popf
mov
js
mov
push
xor
out
mov
aad
pop
shll
dec
imul
and
dec
gs
mov
push
stos
lcall
pop
mov
fildl
inc
mov
rclb
mov
pop
xchg
dec
idivb
push
push
div
push
sub
movsl
jg
push
mov
and
sbb
adc
aas
lods
arpl
xchg
add
scas
int
insl
and
fimuls
shll
and
sbb
xor
mov
mov
sbb
nop
push
jge
adc
mov
adc
out
cmp
xchg
pop
pop
cmp
jns
vpmaxub
out
test
sub
call
hlt
lods
mov
fisubl
add
and
lds
nop
hlt
pop
pushf
scas
pop
cltd
jne
clc
inc
popa
call
aad
jecxz
and
push
ror
data16
mov
pop
sbb
enter
inc
xchg
out
inc
ret
pop
adc
lods
es
or
xchg
push
xchg
movsl
cltd
dec
outsl
aad
adc
add
ja
mov
popa
inc
xlat
shl
or
int3
pop
fmuls
mov
es
dec
jno
xchg
or
lods
fisttpll
or
repz
mov
mov
add
pop
and
jg
jae
or
sarl
dec
stos
add
pusha
std
dec
rorb
jmp
popa
pop
cltd
in
ja
jno
in
jns
data16
ror
or
sub
sub
sub
loop
jno
adc
push
cmc
inc
inc
lds
in
inc
sbbb
dec
sbb
dec
pop
nop
insb
sub
lahf
push
js
inc
loope
pop
and
sub
mov
scas
stos
pop
cltd
and
mov
in
pop
jmp
rclb
inc
mov
mov
inc
sbb
push
jle
mov
jno
dec
ds
test
jo
inc
inc
pop
mov
and
dec
jmp
cmp
popa
shlb
mov
cmp
xchg
jbe
xchg
lods
lods
popa
lock
jp
sbb
insl
in
cwtl
pop
adc
cld
movsl
pop
adc
sbb
push
je
pop
or
cwtl
negl
jns
pop
mov
xchg
and
fiadds
add
bound
fcmovbe
inc
bound
push
and
mov
xchg
in
pop
test
jmp
xchg
mov
mov
xchg
cmp
sub
mov
dec
insb
bnd
and
and
iret
loope
add
repnz
add
mov
clc
es
xchg
adc
ja
mov
ds
aam
stos
fstps
and
stos
lcall
cmc
out
imul
out
push
jne
mov
cwtl
inc
pushf
stc
icebp
lea
fyl2x
leave
jne
pop
xchg
add
add
arpl
aaa
leave
mov
dec
jne
adc
push
xchg
and
ficompl
loope
shrl
psubq
add
sub
push
and
jmp
into
xor
loope
fdivl
push
popf
jl
cmp
movsl
loopne
rolb
mov
push
sbb
add
mov
pop
stc
cli
test
iret
mov
xchg
loope
cmpb
mov
data16
bound
cmp
jo
insl
mov
mov
jns
mov
inc
add
cmc
lods
mov
or
and
add
cmpsb
xchg
jbe
test
and
xor
lcall
lock
out
mov
jmp
aam
out
rcrl
xchg
js
ret
cmc
adcl
mov
jae
and
dec
rcrl
inc
fxch
sti
std
xor
lahf
xchg
mov
and
je
push
int
daa
test
mov
sub
cmp
test
cmc
je
mov
push
iret
icebp
mov
sbb
rcll
jno
and
pop
imul
hlt
push
sti
les
xchg
jbe
pop
inc
adc
pushl
dec
sub
mov
lret
rcl
cmp
add
xchg
movsl
rcrb
subl
xchg
test
bound
mov
mov
dec
pusha
fnstenv
cltd
lea
jl
les
je
std
movsl
js
jo
dec
cmpl
add
repnz
fadds
repnz
mov
cmp
sbb
pop
mov
mov
test
and
int3
xchg
in
push
pop
push
mov
addr16
movsl
lods
mov
xchg
jae
pop
lods
adc
test
and
pusha
loope
mov
pop
imul
jae
lcall
aas
lea
lods
jg
sbb
pop
pop
fisttps
mov
loope
test
push
sub
icebp
mov
mov
cmp
ret
add
mov
popf
arpl
sbb
test
inc
jnp
outsl
movsl
xchg
jb
outsl
test
test
imul
cmp
sbb
push
inc
push
shll
add
mov
pop
bound
add
push
iret
cltd
mov
dec
sbb
fistps
mov
xor
pop
mov
inc
lds
cmp
gs
sub
adc
test
sbb
inc
inc
ljmp
ret
or
inc
add
ljmp
cmpsl
ja
pop
mov
push
idivb
movsl
xor
mov
shll
jmp
sbb
test
sahf
sti
sub
mov
or
cmpsl
mov
lods
dec
arpl
orl
add
daa
mov
inc
mov
mov
jmp
sbb
arpl
sbb
in
mov
add
ss
cmp
sub
in
loope
cmp
dec
sbb
int
pop
inc
lds
leave
cmpsl
movsl
lds
sbb
sahf
pop
leave
inc
incl
mov
jo
cwtl
dec
scas
repnz
clc
cmpsb
mov
mov
lea
adc
mov
mov
inc
dec
scas
push
sbb
test
mov
es
dec
gs
cmpsb
mov
enter
jge
loopne
in
repnz
dec
push
inc
repz
mov
aad
mov
pop
add
scas
or
arpl
mov
jb
jo
sub
inc
mov
pop
lea
push
icebp
leave
pop
leave
mov
xor
popf
stos
rcrl
int
mov
jge
dec
jb
mov
es
stos
prefetchwt1
cld
or
xor
dec
mov
mov
stc
repnz
mov
xor
mov
push
ret
lock
fadds
jmp
inc
pop
sub
pusha
sbb
loop
jg
scas
cmc
mov
and
mov
dec
jge
sbbl
stc
jge
ja
mov
dec
xchg
inc
push
jno
jl
push
mov
jmp
out
stos
popf
ja
cmp
or
loopne
jne
pushf
xchg
add
mov
cmp
lea
addr16
test
cmc
in
mov
std
pop
stc
test
imul
and
jp
je
nop
mov
push
xchg
lret
xor
clc
mov
shll
out
xchg
rolb
xchg
jno
nop
scas
cmp
inc
sub
pushf
lea
mov
inc
ja
js
out
pop
and
lahf
pop
stos
aaa
or
int
arpl
clc
std
imul
mov
addr16
jp
outsb
pop
push
hlt
dec
cmp
push
jo
xor
xchg
scas
sbb
clc
stc
subl
rorl
ret
test
push
push
mov
shlb
cmc
movsl
inc
addr16
movsl
arpl
ret
cmp
xor
sbb
jno
or
and
imul
mov
faddl
pop
xchg
dec
arpl
inc
rorl
push
pop
xor
ficoms
rcrb
adc
int3
adc
jno
decl
or
push
daa
cltd
bound
or
aas
lods
push
mov
mov
pop
pop
inc
pop
popf
inc
mov
xchg
mov
add
nop
int
inc
jmp
cs
mov
clc
movsl
icebp
out
and
and
inc
mov
movsl
loope
ficomps
shrb
jne
int3
arpl
sarb
lea
pushf
lods
repnz
pop
gs
mov
jns
outsb
repz
bound
pushf
mov
lahf
mov
sub
jp
push
repz
add
xor
insl
bound
leave
mov
out
dec
popl
jne
ds
inc
inc
cld
pusha
out
stos
and
mov
xor
stc
mov
in
xor
push
ret
pop
xlat
test
cmp
and
jb
imul
test
divl
mov
cmp
andl
push
inc
mov
movl
nop
sahf
xchg
pop
push
nop
test
stc
insl
mov
add
lods
cmpsl
aad
aas
xchg
rcl
loope
out
addb
mov
leave
outsb
pop
nop
jecxz
daa
in
nop
int3
cmp
inc
jmp
jge
subl
push
fidivs
mov
in
repnz
jae
test
bound
dec
mov
and
jmp
jnp
and
rcll
mov
or
mov
cmp
imull
pushf
pop
loopne
lods
scas
add
ljmp
mov
push
test
add
aad
cmp
mov
mov
push
rcl
mov
cmp
adc
and
mul
insb
sbb
jmp
test
xchg
repz
sbb
add
and
xor
sbb
push
xchg
int
gs
dec
xchg
test
mov
jno
testb
inc
int
repz
imul
push
call
mov
xchg
fs
or
mov
loope
arpl
fldcw
mov
data16
sbb
push
loope
lcall
daa
cltd
int3
inc
cmp
mov
stos
push
jne
lret
inc
rclb
stc
xchg
out
hlt
int3
aam
inc
dec
xor
jns
sbb
pop
mov
pop
adc
jmp
mov
xchg
std
lock
sbb
jbe
out
loope
push
gs
shl
test
rcr
frstor
sti
insb
scas
cmp
fdivp
in
cmc
in
shll
mov
pushf
fildl
xor
aas
insb
mov
fdivrs
arpl
sub
outsl
mov
cmp
xchg
sbb
adc
cmpsl
aas
and
sbb
inc
cmc
icebp
mov
sub
jp
jmp
adc
sbb
push
decl
inc
lock
imul
jmp
insl
sarl
dec
mov
xchg
xor
ret
outsb
mov
stos
or
test
and
cmp
repz
pop
in
jns
jg
cmp
mov
cwtl
mov
inc
fwait
stos
inc
movsl
loope
jns
inc
jecxz
push
in
nop
jmp
add
and
gs
test
loop
imul
psraw
add
ficoml
pop
pusha
stc
pop
sbb
adc
ljmp
leave
cmc
pop
fnsave
repz
and
sti
and
and
loope
ds
mov
cmp
loope
jns
push
mov
and
mov
xchg
loope
stc
mov
insb
repnz
lds
popf
jne
push
nop
push
jecxz
cmc
and
popf
fisttps
pop
sbb
push
std
popa
mov
or
fldenv
movsl
movsl
push
jno
xchg
int3
xchg
mov
xchg
in
jle
loope
mov
fwait
stc
roll
push
pop
and
and
mov
fstp
pop
push
cmp
ss
movsb
negl
fnstsw
mov
add
and
sub
cmpsl
adc
js
sbb
fwait
out
lret
inc
push
cmpsb
int
adc
jmp
mov
xor
mov
lods
cltd
sub
rcrb
inc
inc
cli
ret
cmp
stc
shll
psubq
adc
dec
lret
jbe
sbb
mov
add
loope
mov
popa
xor
and
add
xor
mov
cmp
pop
jp
test
dec
and
faddl
xor
add
mov
fs
lret
popa
jp
clc
aaa
imul
std
mov
mov
xchg
fs
cmpsb
stc
push
jge
out
popa
andl
jo
popa
mov
or
jmp
dec
shl
pop
xor
popa
das
inc
xor
xchg
jnp
popa
aad
call
pop
outsl
outsb
lcall
aas
pop
cltd
icebp
pop
loope
cli
pop
push
das
popa
repnz
add
add
mov
jg
bound
jmp
mov
stos
cmpsb
fdiv
fcom
lods
inc
mov
inc
fists
popa
aad
add
inc
loop
xchg
popa
fmull
ret
pop
int
sub
cmp
jg
sub
scas
out
inc
in
mov
insl
push
sbb
cmp
loope
and
lcall
mull
in
aad
jo
pop
add
cmc
push
pop
mov
shll
pandn
jmp
adc
push
dec
jp
int
inc
pop
subb
out
popa
or
jl
mov
sbb
pusha
addl
bound
push
cmp
idiv
and
mov
popa
test
fldcw
jno
popa
push
into
mov
adc
bswap
popa
add
je
jge
mov
cmp
stc
in
sti
stos
push
leave
xchg
ljmp
cmpsl
mov
int3
aad
push
mov
addl
cmp
and
popa
es
jbe
sub
pop
popa
mov
jae
stc
aad
popa
push
push
imul
rcrb
jns
pop
sub
push
popa
loope
xlat
push
push
repnz
popa
and
lcall
cmp
sub
popa
xchg
mov
cmp
mov
lods
shll
mov
fwait
dec
notb
das
sub
push
fwait
cmc
movsb
pop
fisttps
mov
pop
js
pop
pop
sub
mov
mov
popf
push
lock
std
jno
mov
pushf
mov
lods
inc
dec
aam
popa
lret
mov
lcall
pop
pop
aam
jo
ret
aaa
push
mov
cmp
into
jp
insl
jle
jecxz
and
adc
popa
xor
xor
jbe
aas
pop
popa
iret
add
mov
pop
push
bound
icebp
movsb
shrl
popa
lods
outsl
push
popf
popa
ljmp
cs
pop
addr16
stc
sbb
adc
ljmp
lret
popa
loopne
mov
jg
mov
xchg
jl
popa
mov
in
dec
xlat
pop
and
pop
lds
popa
cmp
es
lcall
outsb
je
mov
lds
orb
movsl
cmpb
shlb
fcmovb
popa
push
xor
dec
das
push
sbb
xchg
movsb
pop
js
or
aas
sub
jmp
push
das
popa
xor
jl
fs
adc
lret
in
stc
xor
add
icebp
iret
popa
adc
clc
popa
pop
daa
test
lock
add
push
fcmovu
cmp
pop
cltd
mov
mov
mull
xchg
push
pop
pop
xlat
and
cmp
popa
hlt
ret
mov
ja
icebp
push
sbb
ss
outsl
insb
jl
push
pushf
dec
and
aas
std
in
jecxz
jb
mov
mov
sub
insb
lods
dec
fwait
push
inc
andl
inc
pop
jns
aad
fildll
popa
stos
push
sub
sarl
ss
arpl
xor
imul
cmp
mov
inc
popa
loop
fsub
jmp
adc
rcrl
outsl
push
lcall
and
and
rcll
sbb
add
sub
pop
fsubs
fs
or
icebp
jl
jo
mov
loope
xor
pop
outsl
bound
ds
sbb
and
je
adc
fcmovb
xchg
popa
mov
mov
jg
xchg
xor
cmp
popa
add
add
xchg
cltd
pop
pop
outsl
mov
or
ret
jnp
mov
call
sub
sub
arpl
sarb
mov
cmp
loope
shl
add
xor
es
xchg
jo
cmpsl
mov
popa
mov
cmpsb
dec
xor
mov
mov
xor
push
jnp
mov
popa
call
sarb
in
and
jg,pn
add
popa
sub
xchg
bswap
sub
imul
mov
inc
sbb
push
jg
popa
pop
cli
cld
xchg
mov
popa
mov
cltd
pushf
adc
es
mov
push
in
lds
shl
popa
roll
sbb
fidivl
out
icebp
cmp
mov
popa
adc
pop
cwtl
jb
scas
leave
cmp
in
es
adc
mul
popa
fistl
cmpsb
and
repnz
js
inc
jbe
popa
in
roll
addb
imul
repz
popf
popa
inc
mov
ljmp
adc
test
jg
insl
les
ljmp
fs
out
int3
sbb
mov
dec
xchg
inc
popa
aam
ret
adc
mov
or
or
cmp
xchg
jno
in
mov
popa
in
cvtps2pi
lret
cmp
repnz
fs
or
mov
push
pop
outsb
popa
pop
sbbb
jp
les
repz
sub
sub
cwtl
add
rclb
and
ds
xor
jge
popa
fsubrs
or
imul
inc
cwtl
loope
mov
mov
sbb
jle
inc
nop
roll
cmpl
sub
or
jno
cmpsb
lock
sbb
in
popa
inc
lods
and
jns
push
sub
shlb
mull
mov
sub
adc
dec
jae
outsl
pop
ja
dec
movsb
out
or
mov
cmpsl
test
push
fisubs
mov
mov
popa
int3
orl
popa
xor
mov
push
lea
jbe
adc
lret
cld
faddl
fldenv
sti
mov
aam
mov
popf
xchg
loope
mov
jp
ret
jecxz
sbb
xor
dec
mov
xchg
ljmp
mov
into
or
sti
sub
inc
jp
mov
dec
pop
mov
popa
imul
or
xchg
fucomp
xlat
add
adc
sbb
loopne
push
or
out
xchg
inc
popa
call
in
jl
nop
or
in
fs
sub
dec
push
fisttpl
adc
fwait
pop
test
mov
inc
fsin
popa
xchg
mov
mov
lds
and
pop
nop
leave
dec
inc
cmp
in
shlb
push
mov
cli
js
add
pop
jo
push
addb
jnp
lock
stos
popa
dec
inc
insl
mov
outsl
loope
bound
dec
cmpsl
adc
xor
popa
jne
cmp
popa
jae
cltd
ja
inc
dec
xlat
popa
inc
push
and
jbe
xchg
popa
or
in
dec
sahf
popa
movsl
pop
add
or
mov
popa
inc
sbb
test
push
jle
ds
fcomip
sub
push
and
out
outsl
or
xlat
mov
xchg
push
ss
jno
fildll
jns
adc
sub
popa
sbbb
cli
in
dec
popa
sub
out
adc
nop
daa
adc
inc
imul
fcmovbe
jo
shrl
mov
and
mov
xorb
pop
das
cmp
aas
mov
push
push
insb
loop
loope
jmp
sbb
stc
dec
sahf
mov
xchg
push
push
xchg
inc
and
test
rcrb
fiadds
mov
cmp
xor
dec
push
push
popa
int3
test
push
dec
or
flds
mov
sbb
jp
shlb
mov
popa
push
adc
and
pop
shlb
int3
cmp
xor
cmp
sub
ret
add
jnp
ja
or
sbb
and
or
jo
inc
dec
bound
es
inc
ds
inc
mov
dec
popa
test
rclb
sbb
cli
pop
and
popa
fidivs
loopne
mov
loope
shl
lea
cmp
das
popa
dec
or
xor
lcall
sarl
jo
call
push
or
xor
out
xor
add
cmovno
jge
pop
and
adcl
push
push
rcrl
cltd
xor
loope
add
push
jg
out
popa
imul
scas
lea
mov
mov
mov
or
fs
cmpsl
loop
pop
pop
or
mov
clc
jge
fisubrl
lret
ret
orb
adc
mov
jnp
ficomps
popa
iret
lods
jp
in
xchg
sub
jg
xchg
shll
out
inc
fcmovnb
popa
jge
enter
imul
rorl
inc
stc
lods
loop
in
out
gs
jmp
mov
or
mov
push
inc
rcll
cmpsl
dec
inc
sbb
imul
cs
push
adcb
jbe
mov
xlat
mov
pop
inc
outsl
mov
rcrl
ja
inc
push
xor
pop
popa
sbb
xor
mov
je
mov
inc
pop
int3
popa
mov
imul
ljmp
push
ret
push
aam
xor
out
cmpsl
popa
xchg
mov
repz
fs
push
xchg
rolb
popa
in
out
jp
pop
popa
xchg
aas
jo
dec
cmpl
and
subb
or
jne
adc
cmpsb
loope
ficomps
popa
and
mov
inc
xor
lcall
das
popa
adc
sub
push
dec
icebp
fistl
inc
cmpsl
push
lods
xchg
push
jecxz
sarb
popa
fwait
mov
mov
outsl
sub
mov
add
cli
popa
call
xchg
mov
sbb
popa
or
mov
add
push
pop
and
xchg
mov
popa
pushf
cmp
mov
inc
mov
inc
xchg
xchg
push
popa
sub
add
sti
data16
fdiv
mov
gs
xchg
cmpsb
cmp
mov
jecxz
roll
iret
loop
xor
pop
inc
jbe
jae
movsl
push
mov
jno
cmp
mov
push
imul
into
popa
add
sub
mov
jg
and
fisubl
pop
inc
pop
adc
popa
dec
push
gs
cmpsl
mov
outsb
out
and
jns
push
jl
fsubrs
sub
test
pop
inc
out
jne
popa
add
xor
dec
mov
sub
popa
and
rol
cs
inc
pop
inc
mov
inc
lret
call
jo
int
mov
pusha
das
sbb
xchg
lods
mov
add
xchg
popa
les
push
xlat
push
push
xor
test
mov
xorb
lret
ja
lahf
ss
outsb
arpl
outsb
popa
and
and
mov
jmp
test
dec
dec
or
cmc
add
stc
or
and
les
jle
rcr
in
popa
dec
into
push
sti
sub
dec
cmp
lods
cmp
popa
inc
mov
frstor
loop
push
popl
arpl
add
mov
loope
lods
and
insl
out
xchg
push
out
jns
bswap
daa
adc
je
jp
inc
push
stos
or
enter
or
and
push
int3
dec
mov
cmp
aad
lods
aas
popa
sbbb
mov
push
leave
mov
add
mov
das
push
lods
fldl
xor
xor
xchg
sbb
push
fcoml
push
ret
inc
and
jo
add
dec
adc
into
fistl
enter
bound
push
test
into
dec
pop
xchg
inc
popa
imul
mov
popa
xor
xor
adc
out
jecxz
xchg
adc
sbb
outsl
jmp
xor
xchg
fwait
clc
hlt
dec
or
mov
daa
jb
mov
fmuls
in
xlat
push
popa
cli
xchg
outsb
mov
lret
push
xor
incl
inc
not
push
aaa
popa
dec
cli
ret
sahf
and
popa
mov
lret
popa
jnp
xchg
call
or
mov
and
xor
push
add
lcall
popa
or
xchg
loop
outsl
pusha
imul
xlat
popa
dec
jl
mov
dec
jg
mov
enter
iret
insb
mov
stos
jg
add
mov
push
cmp
sahf
push
xor
icebp
mov
inc
xorl
fisubl
cmpsb
cmp
popa
push
repnz
mov
movsl
or
lods
shll
popa
xor
sub
adc
clc
mov
cmc
bound
sub
mov
popa
movsl
aam
or
cmc
mov
popf
dec
loopne
xrelease
scas
inc
repnz
sub
mov
and
xor
icebp
arpl
fucomp
push
mov
andl
fistpl
xchg
sub
clc
pop
mov
popa
aam
sbb
movsl
cmp
inc
mov
sti
jo
test
add
popa
scas
sbb
repz
int3
jp
ret
nop
loope
repnz
jns
ja
push
mov
mov
leave
dec
popa
in
outsb
sub
popa
adc
les
add
push
pop
popa
in
sub
fcoms
push
into
loope
jne
sub
dec
xorl
sarl
mov
dec
pop
mov
cmp
shrb
inc
cwtl
push
dec
js
and
xor
mov
cmp
icebp
pop
and
into
adc
mov
adc
out
insb
xchg
mull
outsl
sub
lods
add
push
jl
fwait
in
xchg
sub
enter
sub
popa
pop
jge
les
leave
lds
or
lret
pop
bound
outsb
andl
xor
add
cli
shl
cwtl
xchg
repnz
and
js
inc
push
popa
popa
and
mov
lahf
popa
leave
insb
xchg
ja
or
bound
jp
dec
ljmp
cs
outsb
xor
mov
add
sub
jge
xchg
inc
lds
mov
loopne
sti
xchg
insl
inc
pushf
push
push
test
pop
cmp
mov
inc
popa
adc
lds
bound
jg
jl
inc
fidivs
loope
arpl
out
adc
fidivrs
pop
pop
popa
xchg
jecxz
pandn
lcall
xchg
cmp
mov
sbb
inc
popa
cmp
pop
lds
mov
inc
pop
popa
or
gs
sub
aam
dec
js
das
add
call
popa
popf
fsubs
xchg
sub
lcall
inc
push
fisttps
popa
sbb
in
mov
push
mov
popa
in
fcompl
shlb
pop
popa
js
addb
and
daa
mov
cmpsb
pop
popa
xor
test
add
cmpb
fists
popa
jmp
out
mov
popa
adc
push
lret
jmp
inc
dec
popa
xchg
pop
out
out
mov
cmpsb
in
icebp
sti
sbb
popa
sub
mov
dec
outsl
pop
std
in
inc
jb
mov
push
rorl
out
loopne
shrb
push
and
inc
inc
adc
sub
xor
rorb
push
inc
mov
nop
adc
popa
mov
jb
leave
popa
lods
sub
xchg
add
popa
jmp
inc
rcrb
adc
push
pop
hlt
push
jmp
xor
dec
dec
test
subps
jecxz
stos
nop
cli
mov
push
push
rorl
cmc
sub
outsb
add
popa
les
ds
jle
dec
jbe
jle
mov
into
xor
aas
bound
cmp
mov
ret
lods
popa
subb
bound
into
sub
out
sbb
roll
popa
sbb
jbe
or
ret
mov
pop
push
clc
xor
or
xchg
ds
add
dec
adc
popa
adc
and
popa
pop
mov
fiadds
mov
adc
sbb
or
mov
mov
xor
xor
jnp
jne
es
dec
cld
movsl
scas
sbb
mov
add
dec
ret
lock
push
adc
xchg
sub
sbb
outsl
mov
ret
ja
popa
cld
push
les
in
mov
jb
mov
mov
loop
rclb
loope
ret
inc
pop
xor
sbb
popa
xchg
push
shrl
and
push
popa
mov
popa
scas
jb
add
popa
sbb
xchg
xchg
leave
fldt
cmpsl
mov
roll
imul
popl
stc
lds
xchg
test
addl
add
outsl
inc
adc
mov
popa
inc
sub
fucomip
lcall
int
adc
test
add
cwtl
push
icebp
mov
sbb
outsb
popa
ja
or
xor
idivl
and
test
push
stc
outsb
test
fisubrl
dec
sarl
pop
xchg
int3
and
xchg
bound
daa
fdivp
xchg
mov
popa
aam
or
aad
lret
sbb
xchg
pop
add
popa
adc
push
enter
mov
outsl
push
and
nop
inc
iret
sarl
mov
or
jecxz
iret
mov
fbld
repz
aaa
jns
inc
pop
popa
fsubrp
adc
xlat
adc
jae
add
lcall
sbb
jmp
mov
mov
outsl
or
subl
sub
das
jmp
popa
mov
push
dec
sub
scas
pop
add
and
mov
push
xor
lret
mov
test
lock
loope
pushf
cwtl
loop
lea
mov
test
push
push
mov
jne
popa
fnstcw
mov
pushf
lods
aaa
mov
xchg
inc
sub
jne
addr16
jecxz
xor
jo
jg
cmp
mov
leave
inc
data16
popa
inc
mov
xchg
repz
jge
mov
jns
jmp
dec
add
cmp
inc
test
loope
repz
fcompl
in
pop
loope
neg
push
out
arpl
jmp
mov
jl
mov
fisttps
sub
loop
ret
cmp
mov
sub
and
adc
aas
push
push
icebp
addr16
inc
dec
pop
xchg
addl
popa
dec
in
das
jecxz
adc
leave
es
add
mov
sbb
mov
popa
jmpw
call
rol
push
filds
jne
out
jbe
shll
sub
popa
add
mov
cmp
cmpsb
icebp
pop
sti
popa
lret
pop
jecxz
jmp
addl
push
dec
popa
xchg
cmp
out
sub
popa
lret
mov
divl
lahf
pop
push
loope
sub
lods
xchg
or
fistpl
mov
ss
int
and
dec
loopne
or
nop
sub
jb
ret
jp
mov
enter
xchg
push
out
inc
addr16
lock
cwtl
and
aad
popa
sbb
stos
cli
testl
mov
sahf
outsl
and
orb
and
adc
xlat
jge
push
popa
rcrl
cmp
stc
jns
fldenv
mov
out
icebp
popa
xor
stos
sub
sbb
imul
dec
mov
xor
push
and
cwtl
out
cld
inc
mov
pop
pop
insl
push
jmp
sbb
mov
xor
lahf
popa
xchg
mov
and
push
jg
jns
cmp
mov
fsts
orb
add
push
xchg
in
ja
outsl
or
mov
fidivl
xor
pop
fstpl
outsl
popf
ds
add
push
xor
pop
cli
add
mov
jo
fadd
mov
ret
mulb
sub
lds
or
inc
or
and
js
jnp
jo
out
call
shl
sbb
popa
dec
and
add
popa
sbb
push
popa
arpl
xchg
jl
mov
xor
xor
ljmp
xchg
loope
cld
dec
push
in
jo
iret
push
mov
gs
ds
mov
push
mov
pop
and
lods
hlt
popa
dec
xchg
inc
cltd
popf
int3
ficoml
cmp
push
aad
pushf
arpl
or
and
loop
call
iret
adc
aam
fistpl
add
sarb
imul
cmp
inc
xor
in
fbld
popa
cmc
dec
shr
dec
into
mov
and
inc
xor
mov
cmp
push
sub
int
aad
sbbb
mov
cld
sbb
pop
mov
popa
push
rcl
add
fs
mov
push
fisttps
popa
xor
repnz
mov
or
ud1
cmpsb
fs
pop
leave
imul
shl
out
inc
loope
cmp
test
cmc
xlat
fs
inc
nop
outsb
sti
dec
inc
cmpsl
fwait
popa
jp
les
and
pop
sub
mov
xchg
sbb
es
fimull
aas
pop
mov
add
jmp
mov
fdiv
cwtl
mov
out
jns
fs
xchg
push
mov
repnz
add
lcall
adcl
shll
pop
xchg
test
popa
outsl
out
nop
cltd
lods
fiadds
loope
rolb
ds
fwait
dec
popa
decb
cld
popa
into
out
mov
pop
adcl
les
popa
sub
cmp
popa
pop
mov
int
popa
adc
lahf
jbe
pushf
outsl
inc
js
lea
popa
shlb
enter
xchg
jecxz
fnstenv
jo
push
aaa
and
adc
fs
jp
jo
mov
lock
mov
xor
popa
or
xor
repnz
sbb
je
dec
cmp
mov
popa
push
sti
stc
mov
cmpsl
mov
cmp
outsl
mov
scas
addr16
and
pusha
enter
cmp
sub
test
xor
adc
dec
out
sbb
loope
fists
gs
movsl
loopne
in
lock
fmulp
pop
pop
andl
repnz
incb
mov
pop
pop
lds
xor
arpl
test
jo
mov
popa
or
push
push
lret
jo
adc
sbb
mov
xlat
popa
and
ja
mov
aas
jg
and
test
test
mov
insl
mov
outsb
mov
lret
cmp
shlb
popa
stos
xor
popa
add
dec
dec
icebp
mov
pop
add
or
cmp
popa
push
out
fcmove
punpcklwd
ss
fcoml
cmp
and
lret
bound
mov
and
idivb
ss
ret
imul
dec
iret
es
cmp
shll
and
popa
and
popa
sub
mov
cmp
out
scas
push
daa
sbb
fnstcw
popa
push
js
stos
jno
adc
popa
fcmove
dec
mov
popa
mov
iret
cmpl
lods
arpl
loope
loop
outsl
inc
popa
jnp
popa
and
xchg
mov
popa
stos
pop
push
adc
daa
fmull
sub
test
mov
test
nop
popa
mov
adc
xor
fbld
cmc
sub
imul
cwtl
sub
popa
mov
or
call
into
add
and
and
xor
bound
mov
sbb
subb
add
popa
mov
pop
pop
loop
aad
push
fldt
add
int3
aaa
pushf
push
rcr
pop
push
pop
ljmp
xchg
xor
cld
mov
pop
cli
cmp
popa
adc
xchg
dec
jo
lea
mov
xor
imulb
and
or
and
xor
fcomip
jnp
lea
popa
xchg
into
or
cmp
push
aad
cmp
xor
into
out
push
pop
inc
xchg
iret
lret
icebp
pusha
rcr
sbb
fisubl
mov
popa
cmpsb
cld
jl
imulb
mov
mov
pop
out
fsubs
fdivrp
mov
push
addr16
cli
hlt
pop
jge
inc
insl
and
or
dec
sbb
into
scas
push
push
adc
ret
and
sar
xchg
in
push
popa
fldcw
inc
and
or
xchg
mov
push
popa
imul
popa
inc
add
or
jb
dec
lds
je
inc
dec
es
popa
rorl
cmpsb
popa
fbstp
xor
fsubr
outsl
inc
popa
int
insl
mov
or
mov
sbb
push
insl
mov
cltd
jle
rcrb
push
and
mov
xor
pop
mov
popa
mov
int3
rorb
sbb
jnp
inc
jge
xchg
jge
outsl
cmpsb
repnz
pop
jae
cmp
shll
rclb
cmpsl
sahf
pop
popa
les
sbb
push
popa
clc
mov
lods
sub
popa
add
in
fcmovnb
bound
es
loopne
cld
pop
sarl
jne
bound
jmp
rcrl
xchg
popa
fidivrs
test
xlat
pop
fimull
popa
testb
push
leave
jne
cmpsl
pop
popa
dec
roll
xchg
sub
dec
inc
jne
popa
or
rcr
xchg
cmp
mov
or
popa
imull
push
pop
popa
push
repnz
mov
sub
or
cli
jne
fwait
adc
ja
pop
adcl
popa
test
imul
popa
loop
cmp
testl
popa
jns
js
aam
fldenv
cs
mov
popa
call
cmp
idiv
jp
mov
popa
adc
dec
addr16
xor
dec
mov
jle
aaa
loope
inc
inc
cmp
mov
pusha
dec
xchg
lods
andl
std
mov
popa
cs
jmp
adc
pop
aam
popa
sub
and
loope
sub
xor
fdivr
add
push
add
loopne
bound
inc
xor
popa
inc
lahf
sub
sahf
popa
test
or
popa
repz
and
popa
xchg
inc
pop
mov
sar
jb
xchg
popa
cmp
js
fstl
xor
push
mov
pop
xchg
fs
jle
pop
stos
push
or
push
add
popa
jbe
push
shlb
clc
fsubs
jge
popa
add
jae
mov
push
rcr
addl
mov
jo
adc
pop
dec
sbb
dec
fs
adc
cmp
jg
add
rolb
mov
call
xchg
pop
and
add
cwtl
xor
icebp
mov
cmp
push
popa
insl
into
xor
mov
out
sbb
sti
mov
lahf
popa
dec
jge
cli
out
adc
pop
cwtl
lret
push
bound
sahf
sub
lods
rorl
popa
jge
stos
sbb
mov
cmpsb
and
sub
mov
push
mov
outsb
leave
or
push
mov
xchg
pop
or
mov
das
sub
sbb
movb
aaa
insb
jae
xchg
push
cmp
popa
scas
test
ret
sub
add
inc
pop
ret
lahf
push
push
dec
mov
sbb
leave
jnp
pop
jl
jno
cmc
testl
xchg
push
jmp
push
sahf
je
loope
aas
mov
adc
xchg
roll
or
sahf
add
pop
bound
mov
repz
jecxz
dec
inc
je
aaa
popa
clc
lock
nop
pop
mov
leave
jge
stos
xor
mov
xchg
in
insl
sar
jo
arpl
jnp
movsl
mov
mov
loopne
dec
xchg
jnp
mov
jg
ljmp
push
mov
cmp
dec
and
mov
fstl
out
popa
enter
out
pusha
jb
mov
jecxz
push
cmpsw
xchg
mov
imul
stos
jne
insl
and
scas
mov
dec
fsub
fstpl
sbb
pop
pop
stos
mov
repnz
inc
and
fisubrl
add
ret
popa
or
outsb
incb
popa
data16
scas
popa
sbb
cmc
in
shr
sbb
adc
jp
enter
imul
inc
lret
cmpsb
inc
mov
in
jle
push
loop
jle
dec
mov
sti
inc
inc
popa
outsb
xchg
cmpsb
shll
add
aas
or
fists
pop
fcompl
imul
or
inc
or
fnsave
sbb
movsl
iret
xchg
dec
jne
popf
fistl
mov
mov
and
mov
int3
jno
add
bound
rep
movq
mov
repnz
repz
andl
lcall
sub
popa
cmpsl
mov
push
popa
pusha
push
inc
data16
sub
sub
andb
andb
jno
and
clc
std
es
js
add
jl
push
lret
push
imul
cwtl
xor
popa
sarb
add
loope
popa
not
fistl
aam
and
in
jne
int
popa
mov
repnz
xchg
popa
or
cmp
outsl
mov
insb
lods
mov
out
cmpsl
shrb
push
inc
popa
pop
pop
popa
pushf
sub
and
dec
frstor
xchg
cmp
cmc
lock
push
popa
call
add
in
mov
popa
mov
movsl
sub
lea
popaw
movsb
lret
scas
mov
js
dec
jge
fldcw
ja
xor
popa
das
xchg
mov
sbb
push
jp
and
jecxz
sub
lock
mov
xchg
dec
jo
popa
mov
and
cmp
mov
jge
sti
pop
out
adc
popa
inc
dec
push
cli
dec
sbb
flds
rorl
test
popa
sbb
mov
lret
scas
jne
ret
and
dec
pop
stc
out
mov
jmp
adc
jl
movl
pop
sub
or
jbe
cmp
lahf
sti
sahf
pop
bound
xchg
dec
mov
lds
pop
ds
insb
inc
popa
stos
lods
mov
fimuls
arpl
push
movsb
shlb
pusha
insb
dec
pop
sub
xchg
test
pop
test
cmp
push
popa
rorb
mov
adc
lret
das
mov
jne
fsubl
mov
push
or
mov
repz
pop
dec
pop
fs
pop
popa
lock
and
clc
add
sbb
cmp
pop
adc
popa
sub
dec
idivl
add
cmp
sbb
popa
and
insl
ss
inc
lods
xchg
xor
jge
std
xchg
mov
imul
inc
jne
dec
popa
clc
add
out
jl
jo
insb
and
jge
jmp
pop
mov
andb
dec
mov
test
icebp
std
cmp
loop
lods
jle
out
sbb
pop
or
jmp
or
sbb
sbb
stos
movsl
add
jno
dec
push
cld
icebp
jmp
test
pop
imul
push
or
outsl
das
stc
jbe
mov
out
sahf
out
fs
mov
inc
jae
mov
push
in
push
lcall
xor
push
mov
ss
shll
popa
or
mov
push
mov
xchg
pushf
or
adc
or
cmp
xchg
popa
mov
sbb
push
imul
cli
pop
lahf
dec
out
jbe
clc
das
mov
pop
leave
popa
dec
jmp
shl
adc
fcoms
mov
mov
cmpsl
jae
arpl
jo
pop
jo
dec
mov
push
data16
pop
xchg
popa
dec
jmp
cmp
popa
mov
jge
lock
jnp
push
call
or
lret
mov
shrb
mulb
xchg
sbb
mov
push
xor
xchg
jne
rcr
adc
or
stc
test
data16
add
jp
mov
fimull
mov
mov
ds
mov
pop
test
ret
mov
jle
jo
mov
mov
jl
sbbb
mov
sub
dec
lcall
adc
pop
mov
fldcw
fs
enter
dec
adc
lock
push
movsl
inc
mov
iret
xchg
sbb
popa
or
in
xor
cmc
popa
lods
scas
test
or
repz
cmpsl
mov
inc
lea
jno
inc
ret
cltd
lret
push
xor
jbe
insb
dec
popa
sub
sbb
and
jle
or
mov
popa
clc
fidivl
mov
sahf
sti
js
outsb
pushf
and
mov
mov
lret
adc
and
mov
popa
loop
or
and
out
shl
stos
mov
test
popa
mov
mov
stc
xchg
popa
xor
or
insb
dec
rorl
loope
sub
test
arpl
shlb
dec
mov
popa
inc
ret
xchg
mov
popa
lret
push
hlt
bound
stos
adc
pop
or
out
clc
fwait
jns
or
fimuls
insb
push
inc
cmp
test
mov
stc
dec
adc
mov
xchg
popa
ficoml
call
lods
popa
sub
fcom
popa
xchg
das
mov
dec
cmp
in
sub
aas
jb
or
cmc
movsb
rcl
popa
insb
mov
int
or
dec
fs
add
and
push
sub
push
call
lea
xchg
adc
sub
lcall
add
mov
aaa
outsb
push
shll
xlat
push
push
jp
out
dec
jecxz
test
ficoml
jbe
popa
jno
iret
sbb
mov
xor
mov
mov
loope
push
jne
stos
ljmp
jmp
clc
pop
bound
mov
das
or
push
pop
dec
loopne
mov
pop
shl
icebp
xchg
movsl
popa
decl
test
inc
popa
in
cmpsb
daa
jg
jo
lret
sahf
sub
out
popa
and
pop
sahf
rcr
xlat
mov
movsb
and
add
pop
xchg
popa
test
inc
cmp
sahf
cmpsb
push
loope
in
push
imul
popa
das
outsl
call
inc
popa
popf
scas
xchg
push
xchg
pop
movsl
js
sbb
rorb
pop
clc
jmp
push
sahf
icebp
out
dec
push
enter
adc
scas
popa
das
dec
jae
daa
sub
sbb
mov
dec
mov
xchg
pop
lahf
mov
adc
push
add
sbb
loope
test
cmp
cmc
std
popa
cltd
push
insb
loope
dec
aam
lcall
fisubs
cmp
popa
sahf
sbb
iret
mov
popa
ljmp
mov
cmpsl
xchg
xor
bound
cmp
sub
shrb
popa
inc
addr16
jecxz
in
daa
and
aam
je
xor
xchg
loop
add
stc
mov
mov
xor
lds
popa
lods
shll
jmp
cli
out
into
dec
push
stc
gs
mov
pop
push
xchg
ja
popa
test
test
xor
sbb
inc
xchg
add
popa
lock
push
popf
or
popa
cli
xor
cmp
fadds
sub
movsb
mov
push
jno
jge
mov
loop
cmpsb
test
into
mov
inc
andl
movsl
pop
cld
mov
popa
movsb
dec
add
addl
inc
stc
jg
lods
scas
loope
jo
mov
or
pop
ret
cmp
aas
push
clc
outsb
lahf
icebp
ss
icebp
xchg
add
adc
popa
ret
jb
popa
cli
ficoms
lea
cmp
xchg
jle
xor
bound
rcrl
fldcw
xor
popa
insl
push
jnp
out
call
or
mov
xlat
mov
js
loope
addr16
push
adc
out
pusha
mov
bound
icebp
sbbl
sbb
or
lods
insl
iret
call
stos
xchg
mov
aad
mov
and
pop
xor
test
mov
fisubrl
jbe
xchg
pop
pushf
push
sub
xor
repz
dec
mov
fcmovnbe
in
cmc
popa
dec
sbb
mov
popa
mov
mov
int
lahf
mov
out
cmova
notb
bound
mov
rol
cmp
movsl
movl
pop
or
loopne
jg
fiaddl
int
cs
adcb
outsb
or
xchg
lds
popa
xor
xor
fisubl
aam
andl
mov
mov
or
mov
mov
outsb
in
punpcklwd
pop
int3
adc
xchg
jge
xchg
nop
gs
xchg
cmp
jo
test
dec
ror
js
outsb
xchg
mov
mov
fnstcw
sub
and
cld
xchg
sbb
popa
mov
jle
es
xchg
aas
in
les
mov
pop
inc
pushf
imul
push
cwtl
scas
inc
jns,pt
ret
addr16
dec
outsl
cmp
mov
xchg
or
lcall
filds
inc
sub
dec
ds
mov
je
scas
lods
lcall
shlb
imul
mov
mov
sub
lret
mov
cmp
movsb
out
popa
cmp
or
pop
mov
dec
call
ljmp
das
testl
pushf
add
adc
inc
sbb
xor
popa
xchg
dec
test
fldcw
cmp
mov
and
push
push
in
rol
jp
and
inc
and
lock
in
pop
jbe
stc
lret
iret
jle
repnz
sub
pop
mov
add
sti
push
mov
lcall
addr16
xchg
test
mov
and
in
xor
bound
loopne
lock
mov
js
lods
out
sbb
jl
stc
inc
in
xchg
dec
popa
jno
pop
arpl
stos
jg
xchg
pop
jge
lahf
cmp
std
popa
inc
sahf
jns
ret
out
popa
sbb
repz
mov
xor
push
faddl
xor
xchg
inc
ss
dec
add
popa
xor
das
push
lret
dec
insb
popa
sahf
and
xchg
popa
xor
pop
inc
pushf
mov
jmp
inc
ror
bound
fnstenv
ss
cmp
aaa
mov
jae
pop
mov
adc
lcall
pop
stos
and
bound
push
inc
mov
jge
ds
cmp
dec
testl
into
stos
and
cmpsl
pop
lahf
popa
mov
loopne
jl
icebp
popa
jne
rorl
sbb
popa
out
inc
std
out
dec
jb
push
sti
mov
outsl
dec
out
adc
iret
daa
push
and
popa
inc
jecxz
xor
jg
lahf
popa
stos
dec
and
es
mov
or
and
popa
cmc
idivl
mov
jl
lods
dec
xchg
loop
bound
add
inc
mov
pop
dec
and
push
gs
orb
into
and
sbb
shl
add
mov
lds
loope
push
add
std
out
jo
mov
inc
pop
inc
in
popa
test
xchg
rcrb
pushf
popa
pop
or
xor
out
adc
xchg
popa
push
lea
xor
mov
or
add
xchg
mov
xor
ret
mov
mov
mov
pop
aas
sub
insl
mov
cmp
stos
mov
adc
push
and
cwtl
jnp
mov
mov
scas
test
dec
dec
fs
jp
or
or
repnz
sub
loope
lahf
sbb
sub
sarl
sub
test
add
xchg
xchg
mov
js
dec
fwait
popa
pop
xchg
sbb
xchg
popa
or
jp
cmp
mov
shl
cld
cmp
insl
popa
pop
int3
jb
push
adc
xor
mov
push
int3
les
mov
mov
xchg
jge
popa
fcomp
and
ret
pop
push
fdivl
push
push
ljmp
les
sub
gs
mov
or
pop
push
bound
mov
sarl
popa
stc
push
cmp
sbb
in
icebp
imul
pop
dec
popa
mov
filds
lret
negl
inc
push
sub
push
mov
cmpsb
cs
lods
pop
arpl
orb
ret
or
mov
push
fstps
outsb
add
decb
pop
popa
jl
and
in
or
popa
aad
mov
and
popa
mov
dec
xor
mov
punpcklwd
inc
xchg
jge
cmp
mov
jmp
fldcw
popa
add
sbb
stos
jle
movsb
dec
mov
jmp
add
icebp
mov
push
test
rorl
dec
jge
loope
nop
mov
adc
mov
ljmp
xor
jns,pt
std
call
mov
pusha
or
jo
push
test
insb
inc
shll
dec
cmp
stc
or
mov
daa
gs
dec
adc
xor
loopne
xchg
sti
and
loopne
adc
cwtl
jns
dec
call
fs
cmp
lods
mov
cmpsb
imul
out
dec
and
outsb
sub
rcr
adc
ljmp
cli
call
pop
cmp
iret
repnz
lret
mov
ror
mov
cmp
pop
push
pop
cwtl
je
shll
ljmp
xchg
leave
cmpsl
xchg
rclb
xor
rcl
xchg
iret
call
dec
and
dec
gs
rorb
jecxz
mov
mov
insl
mov
mov
pushf
cmp
std
jnp
lods
pop
sub
jae
addr16
sub
sub
leave
push
pop
xor
call
mov
movsl
int
icebp
repz
and
enter
ja
lds
cmpb
ret
dec
lret
pop
call
imul
ret
test
dec
leave
lret
push
jmp
loope
xchg
test
cli
lock
daa
popa
push
je
cmp
mov
pop
lret
jg
jbe
sub
out
imul
and
popa
pop
aad
pop
mov
adc
push
adc
or
stos
and
push
push
push
ja
add
or
gs
lahf
outsb
mov
jg
mov
scas
inc
adc
in
and
xor
adc
sahf
mov
popa
jle
add
inc
inc
jns
aaa
add
andb
mov
bound
aas
push
adc
movsl
sti
adc
shlb
sbb
xor
and
or
nop
sbbl
xor
popa
adc
aad
pop
mov
xor
popf
flds
mov
push
popa
cmp
call
lret
popa
cli
test
pushf
test
or
inc
jae
push
popa
addr16
inc
pop
xor
ljmp
mov
lods
popa
mov
mov
jg
addb
pop
popa
xor
jne
test
test
mov
jge
sub
jg
mov
dec
inc
rol
inc
cmc
dec
flds
cmpsb
cmp
aad
subb
mov
pop
jmp
cltd
inc
xchg
jo
test
xor
ret
outsl
clc
jo
mov
or
push
popa
xor
outsb
dec
js
orb
xchg
mov
adc
sahf
xchg
cmpsl
jge
jg
fldln2
nop
or
and
pop
cld
cli
inc
add
and
shl
ds
cmp
fst
outsl
pusha
mov
or
lock
jo
jecxz
add
movsb
and
cmpsb
popa
push
xor
mov
sub
and
cmc
sarb
les
outsl
repnz
incl
add
xor
adc
dec
xchg
jp
clc
movsl
jge
enter
and
mov
mov
in
stc
jp
jecxz
push
popf
pop
test
fnstenv
and
mov
mov
cmp
inc
xchg
cld
orl
and
jg
or
cltd
popf
sar
mov
icebp
mov
xchg
mov
xor
test
movsl
pop
shr
jle
int3
out
pop
mov
xchg
pop
adc
push
mov
lahf
fldl
test
mov
das
lahf
cmpsb
jg
and
lcall
adc
popa
jbe
or
in
cmp
mov
jge
popa
clc
mov
cmpsl
mov
dec
mov
popa
xchg
test
repz
dec
ror
pusha
adc
sbb
jg
lock
pop
mov
ljmp
leave
popa
push
loopne
js
aad
popa
push
jb
mov
fsubs
fs
fldcw
cmp
stc
popa
int3
sub
out
or
rclb
adc
pop
mov
loop
int3
sbb
sub
mov
popa
hlt
fs
add
popa
fwait
lret
add
andb
mov
xor
insb
imul
pop
push
repnz
add
inc
push
ja
pop
dec
jge
xchg
cmc
call
fdivl
fisttpll
and
in
loop
xchg
dec
and
mov
jb
popa
mov
in
rclb
xor
pop
sarl
inc
and
iret
or
xchg
mov
jmp
xchg
push
popl
popa
mov
pop
es
out
sti
dec
fisttps
lds
adc
sub
bound
shll
and
xor
loop
pop
imul
push
sbb
call
jle
out
push
fmull
cltd
in
pop
popa
test
clc
loopne
or
xor
ja
popa
test
pop
push
mov
ds
push
pop
cltd
xchg
cmp
cld
insb
sub
lcall
mov
scas
or
lret
add
pop
cmpb
add
xchg
lock
inc
and
out
ja
popa
daa
push
cmp
mov
nop
out
outsb
inc
sbb
pop
ja
add
add
and
push
scas
dec
mov
gs
mov
add
cld
insl
repnz
stc
insl
sub
jecxz
mov
cld
xchg
setle
popa
test
clc
out
mov
ret
jge
lods
mov
jmp
pop
and
mov
lods
xchg
jae
mov
add
fmuls
sarb
andl
bound
pop
fldpi
sti
insl
cmp
lahf
orb
popa
and
push
cmpsl
fisubrl
add
sub
cmp
test
roll
cltd
popf
ja
sbb
fsubrs
xor
sub
sbb
arpl
popa
ret
jge
pop
sbb
les
xchg
mov
popa
mov
sub
sub
out
sub
clc
fsubrl
shlb
mov
icebp
fisubrs
xchg
dec
iret
fisubs
push
popa
jmp
std
ja
popa
inc
jge
mov
push
dec
ja
aaa
sub
cmp
jo
jb
addr16
pop
jg
mov
imul
repnz
fwait
cmp
jmp
int
mov
popa
cmp
dec
clc
scas
lcall
jb
dec
mov
daa
xor
xchg
xlat
stc
enter
js
sbbl
sub
sub
shll
dec
mov
xor
aas
or
cli
cmc
jmp
pushf
std
popa
call
dec
jb
pop
mov
popa
leave
xor
sbb
push
and
cmp
popa
adc
lahf
testl
bound
jno
jbe
loop
push
popa
jae
insb
clc
cs
dec
stos
popa
sub
rorb
loope
or
xor
out
push
inc
out
lock
push
xor
cmpsb
in
pop
aad
daa
divl
imul
xorb
popa
push
jbe
cmpsb
dec
cmp
loope
inc
sti
incl
push
push
fs
ja
test
fisubl
stc
in
std
fs
mov
decb
jo
inc
js
add
sub
lock
int
out
sub
inc
hlt
fst
jno
fs
clc
add
or
jne
js
pop
andb
lret
out
sbbl
popa
push
rclb
lods
pop
pop
popa
and
fimuls
clc
imul
or
push
xor
cmpsb
addr16
or
fcomps
stos
popa
push
mov
divb
fdivl
int3
popa
and
addr16
push
jns
out
cmp
popa
test
inc
in
in
shlb
sub
xchg
ret
mov
out
fsubl
lods
test
insl
popa
push
or
rclb
aas
orb
mov
outsl
xor
cltd
insl
in
out
test
mov
rcll
mov
clc
pop
jmp
sarb
popa
mov
mov
test
mov
ss
jp
jne
aas
in
int
loope
mov
arpl
mov
lret
popa
sub
push
leave
dec
mov
imul
inc
adc
loope
movsl
inc
mov
pop
jl
adc
popa
mov
sub
sahf
add
loope
mov
and
shr
push
inc
mov
dec
loope
fisubl
sub
arpl
lahf
out
test
inc
cmp
cmc
and
scas
mov
insb
fwait
sub
fnstenv
das
nop
adc
sbb
mov
and
jbe
repz
dec
fisubrs
mov
imul
xchg
adc
sub
inc
jg
add
dec
cld
ret
data16
inc
inc
lret
lods
jl
popa
stos
dec
into
roll
inc
cmpb
mov
popa
jo
stc
xchg
adc
xor
adc
and
inc
or
jbe
push
lcall
aaa
popa
push
and
insb
pop
sbb
popa
fdivp
adc
es
cli
bound
inc
call
mov
mov
popa
dec
xchg
js
insb
sub
into
lret
push
dec
pop
popa
iret
pushf
lods
test
ds
shll
lock
inc
jo
popf
imul
push
dec
cltd
jge
xchg
popa
sahf
pop
leave
dec
inc
or
shl
fwait
pop
and
sahf
xchg
imul
cli
test
inc
mov
fld
test
cmpsl
jne
roll
fwait
cmp
loope
xor
stc
enter
aam
daa
outsl
stc
sahf
jmp
popa
pop
andb
fisttpl
inc
mov
mov
jle
into
shrl
mov
aam
mov
lock
jne
push
imul
cli
sbb
push
jp
push
lahf
jge
xor
imulb
inc
adc
cmp
popa
movsb
mov
outsb
in
dec
popa
or
or
leave
sahf
popa
mov
out
js
dec
loope
add
in
jl
subl
daa
or
aad
push
es
fildll
xchg
loope
icebp
out
int3
add
pusha
mov
xor
cmovne
sbb
push
mov
fnstsw
dec
mov
pop
popa
inc
testl
xor
sub
out
loope
or
popa
insl
sub
hlt
push
imul
sti
popa
rorl
popa
fiaddl
or
dec
popf
add
sub
loope
ja
ljmp
popa
xlat
jecxz
rcrl
call
lret
loop
sbb
popa
ficoms
cmp
lret
xchg
popa
mov
jg
punpckldq
xor
cmp
mov
das
cmp
pushf
data16
repnz
fwait
xchg
bound
push
and
setle
mov
xchg
lcall
sbbb
push
pop
mov
cmp
inc
xchg
mov
lock
pushf
inc
iret
or
cli
sub
or
fisttpl
cld
aam
lahf
lods
stc
popa
fsts
imul
fs
jecxz
inc
hlt
scas
pop
int
sbb
popa
divl
jo
mov
popa
stos
inc
xor
jmp
mov
xlat
andb
std
popa
and
inc
icebp
shll
aam
jno
mov
clc
stos
fmull
ret
jg
test
inc
outsl
dec
test
dec
popa
sbb
sahf
lcall
sub
mov
movl
imul
sub
fwait
lea
aaa
adc
lret
and
lahf
sar
inc
push
inc
mov
popa
cmp
sahf
pop
popa
aaa
addr16
inc
cmp
popa
xchg
lods
lea
adc
test
jne
mov
leave
cmpsb
fdivrs
in
shll
in
repz
dec
xor
push
jle
xchg
pop
outsl
jne
xchg
xor
inc
xchg
aas
push
cmp
jb
ljmp
insb
mov
add
sarb
mov
loope
aas
pop
test
pop
pop
lods
xor
cmp
add
xorb
fnstsw
sbb
popa
out
and
jp
jecxz,pn
in
adc
cmp
dec
js
sbb
push
push
insl
arpl
fs
enter
and
jmp
xchg
xchg
ljmp
test
add
fstpt
incl
xchg
mov
cmp
mov
push
popa
test
aad
inc
jo
push
loope
popa
jge
jnp
icebp
stos
and
stos
cmp
or
mov
imul
xchg
jo
and
dec
cmpsl
xor
int
ret
hlt
enter
and
add
fwait
xchg
xchg
test
cmp
frstor
cmp
addl
adc
sbb
rolb
popa
stos
push
mov
in
movsb
sbb
hlt
bound
popf
arpl
xor
ljmp
sbb
push
mov
fsubrs
popa
mov
add
into
in
ss
adc
popa
jo
dec
rcrb
mov
loopne
punpcklwd
mov
jg
mov
push
or
pop
popa
test
addr16
and
lods
jge
fs
and
adc
out
sbb
test
popa
orl
ds
sbb
and
icebp
je
add
dec
mov
aaa
popa
sbb
cmpsl
lahf
iret
sbb
xor
sbb
add
add
and
cmp
xchg
mov
cltd
xchg
inc
aad
and
std
add
pop
shll
cwtl
pop
dec
iret
mov
mov
inc
out
mov
popa
add
pop
cmp
in
dec
dec
nop
testl
inc
push
or
mov
dec
add
fcompl
addr16
jns
imul
inc
test
add
into
push
subl
adc
ficompl
lock
mov
popa
clc
gs
shlb
ret
loop
pop
add
inc
pop
test
cmpsb
adc
arpl
fwait
shrb
out
out
push
ljmp
std
stc
push
fisttpl
jb
inc
out
lods
shrb
mov
mov
popa
add
mov
cmp
or
insb
inc
push
cmc
mov
fimull
cwtl
xor
outsb
fwait
fs
xchg
js,pn
dec
in
mov
gs
inc
mov
popa
cmp
xor
fwait
popa
mov
scas
fdivrl
aam
ljmp
pop
jnp
push
lret
or
mov
daa
xchg
lcall
and
pop
pop
mov
push
mov
sti
jne
mov
dec
mov
lds
popa
mov
or
lcall
add
or
push
test
pop
xchg
pop
ljmp
adc
scas
push
jb
aaa
push
es
sub
mov
cmp
mov
xchg
stc
sub
mov
jb
outsl
push
push
shlb
jno
jne
rorl
mov
mov
dec
test
iret
mov
pop
mov
dec
or
andb
pop
fs
inc
mov
mov
popa
cltd
and
cli
mov
popa
mov
clc
pop
xchg
or
int
aam
mov
loope
adc
mov
nop
loopne
push
and
repz
js
test
idivl
push
xor
inc
cwtl
ret
arpl
popa
jo
sub
ret
and
pop
mov
xchg
popa
das
rcl
fstps
out
outsl
popa
bound
shr
imul
jl
lret
pushf
push
test
fdiv
popa
adc
or
popa
xor
outsb
lock
out
frstor
jl
fst
popa
sub
adc
push
ret
xor
pop
ss
outsb
inc
jo
in
popa
jb
aas
add
dec
popa
adc
mov
js
dec
pop
or
popa
leave
sub
add
and
gs
mov
daa
stos
lcall
cld
movsb
int3
mov
psadbw
xchg
nop
aaa
test
popa
mov
cmpsl
mov
popa
dec
mov
pushf
sbb
dec
jne
jle
or
popa
xchg
sbb
movsb
mov
jmp
sub
mov
add
cld
inc
push
aaa
mov
shlb
mov
mov
mov
popa
cwtl
leave
fisubrl
mov
addr16
add
popa
out
mov
push
cwtl
fs
dec
jg
add
stc
add
shlb
or
sbb
cs
and
and
popa
aad
daa
sbb
sbb
in
cltd
mov
xor
mov
add
push
lret
stos
sahf
rcrb
movsl
popa
gs
lahf
mov
jb
dec
popa
popa
mov
jle
ja
andb
and
popa
ret
xchg
dec
or
popa
xor
call
imul
popa
xchg
leave
enter
push
mov
jne
jbe
loope
and
sbb
test
aaa
sar
sub
or
outsl
cmpsl
inc
test
daa
mov
mov
pop
popa
ss
fcmovnu
mov
hlt
push
dec
mov
movsl
jp
clc
scas
jle
inc
sub
push
push
popa
xorb
lock
popa
leave
gs
and
xorb
inc
out
fdiv
rol
popa
jae
leave
mov
sub
xchg
outsl
ret
adc
push
bound
movsb
test
sub
popa
testb
add
xor
andl
ds
jg
cmp
insl
dec
xchg
addr16
leave
mov
jnp
rcll
adc
fstl
xchg
dec
popf
xchg
mov
pop
daa
inc
pusha
cmp
inc
outsb
and
in
inc
xor
in
fs
movsl
cmp
mov
movsb
push
or
popa
jl
cwtl
jnp
xor
inc
shrb
cmp
insl
int3
mov
aad
inc
pop
cltd
clc
add
mov
xchg
inc
rcr
loope
pop
xor
pop
sub
and
add
dec
inc
push
loope
rcr
cwtl
jo
and
imul
negl
mov
inc
dec
popa
push
jo
mov
popa
hlt
xor
xor
test
orl
add
pop
push
popa
ss
imul
lea
cmpsl
popa
nop
iret
mull
sub
fistps
stos
icebp
add
mov
xchg
mov
inc
loopne
jns
test
jae
jp
push
cmp
lahf
fsubl
sub
or
popa
pop
cli
sahf
stos
push
jge
and
inc
pushf
into
imul
popa
mov
shll
loopne
bound
rclb
cs
insl
dec
inc
or
cmp
sahf
mov
adc
repz
cltd
dec
inc
popa
in
xor
sbb
sub
lret
add
xlat
xchg
mov
or
addr16
push
pop
popa
inc
hlt
add
mov
jle
popa
mov
inc
push
hlt
pop
xchg
or
ret
out
mov
stos
bound
ljmp
pop
xor
push
cmp
jl
lods
mov
fildl
stc
js
shll
popa
out
mov
sahf
popa
mov
inc
daa
push
jbe
imul
adc
dec
sub
inc
outsb
leave
sbb
lock
and
push
fs
loope
mov
aad
ja
stos
and
jo
add
cmp
scas
popf
popa
lret
jge
xchg
inc
inc
nop
out
add
scas
mov
mov
fwait
mov
or
sbb
pop
fsub
fdivs
scas
andl
test
lods
jp
xchg
lds
mov
mov
loope
jnp
in
xlat
insl
jns
pop
iret
cmp
imul
arpl
popa
insl
and
shrb
repnz
stc
ss
add
shrl
xor
pusha
cld
dec
pop
std
jl
adc
mov
cmp
loope
jle
push
insb
leave
fsubrp
idivb
jb
js
mov
sub
out
dec
pop
xchg
aam
sbb
xchg
gs
xor
popa
lcall
sub
and
lea
ja
popa
xchg
cmc
fwait
add
aam
cmpsl
push
jecxz
sub
cs
xor
sbb
lahf
dec
lret
outsb
pop
loopne
gs
das
out
popf
pushf
and
add
popa
fsts
into
dec
in
in
and
and
bound
adc
dec
enter
es
in
sbb
jb
adc
dec
scas
mov
mov
sti
sub
repz
andl
pop
cld
aas
xor
outsl
fadds
fisubrs
popa
mov
mov
nop
addr16
das
popa
je
in
imul
dec
stc
dec
popa
andb
or
insb
out
in
xlat
test
bound
and
sbbl
cli
pop
inc
pop
out
mov
xchg
imul
mov
nop
das
popa
mov
std
dec
jp
mov
pop
sbb
fdivs
push
or
and
popa
push
add
lret
push
in
aam
push
mov
pop
fidivs
inc
mov
outsl
loope
cmp
mov
mov
ss
out
dec
popa
movsb
adc
sbb
addr16
subb
cltd
ret
aaa
or
xor
bound
adc
das
inc
adc
popa
pop
adc
push
ljmp
nop
cltd
movsb
loopne
stos
out
sub
mov
ds
pushf
sarl
push
sub
mov
pop
add
or
lds
roll
popa
dec
mov
fisubl
and
mov
popa
push
mov
add
int3
fisubrl
dec
push
jo
inc
jno
push
arpl
repnz
dec
fstps
test
mov
sbb
push
daa
movsl
jne
imul
cmp
jnp
popa
scas
inc
js
adc
dec
popa
jns
add
icebp
inc
out
inc
dec
cmp
insl
gs
repnz
sbb
mov
popa
push
and
rolb
fnstenv
bound
lock
pop
xlat
xchg
and
sahf
popa
cmp
inc
loopne
fildl
and
cmp
cltd
scas
xor
mov
popa
jne
test
aam
xchg
mov
adc
pop
cltd
push
in
adc
sub
adc
dec
adc
bound
insb
inc
movsl
mov
clc
leave
test
add
inc
lods
jnp
popa
cmc
mov
fsubrs
stos
imul
mov
jecxz
ljmp
sbb
xchg
pminsw
cmpl
loope
and
sbb
ficoml
jle
cmp
jecxz
adc
mov
xchg
popa
sub
add
jne
mov
sbb
xchg
xor
fdiv
popa
repz
lahf
insl
or
dec
push
fs
sbb
cli
ds
xor
sti
popf
insl
cmpsb
push
lock
fdivrs
inc
jb
or
fistpl
jnp
dec
xor
testb
cmp
xchg
jae
xchg
sbb
push
stos
push
adc
icebp
pop
xor
rorl
in
nop
outsb
jb
cmp
pop
adc
inc
push
mov
aad
jo
add
fildl
and
sub
xchg
ficomps
xchg
fwait
or
add
das
loope
pop
pop
aad
fnstsw
cmp
popa
lods
pusha
and
mov
cmp
loopne
test
rclb
ljmp
popa
adcb
dec
or
xor
add
push
xchg
inc
jo
stos
jle
inc
jl
sbb
loope
in
in
cli
mov
push
add
test
push
popa
out
sbb
aad
adc
sub
subl
add
cmp
ret
bound
inc
ficoms
jne
jg
fbld
lds
es
dec
scas
popa
mov
fists
adc
and
and
cltd
pushf
stos
mov
and
popa
sbb
mov
popa
lcall
jg
sarl
adc
les
add
fisubl
adc
mov
popa
inc
jmp
mov
jge
push
lods
popa
fwait
jmp
bound
ret
popa
push
outsb
mov
addr16
popa
xchg
mov
fdivl
pop
cli
test
ljmp
or
and
orl
jge
idivl
mov
xchg
daa
popa
inc
pushf
jne
cwtl
cld
lret
jle
cmpsl
push
icebp
push
dec
out
insl
cmp
pop
mov
sahf
and
jg
int3
mov
cld
daa
flds
xlat
addl
fnstenv
popa
out
shl
mov
cli
sub
pop
xor
insb
mov
dec
movd
adc
popa
daa
dec
cmp
push
shl
ljmp
mov
fisubl
sub
push
jnp
mov
xor
push
xchg
mov
adc
repz
aam
jecxz
scas
adcb
popa
ja
xchg
aas
adc
xchg
jle
jae
in
mov
xor
popa
or
aas
movsl
roll
mov
mov
jg
popa
es
daa
sub
ds
bswap
in
mov
and
imull
xor
mov
push
inc
xchg
mov
xor
adcl
jmp
or
xlat
jnp
icebp
loopne
imul
jo
stos
adc
push
cmp
add
lcall
mov
mov
pop
insb
repz
jno
loopne
mov
scas
lock
popa
std
es
fs
call
and
add
ret
lock
popa
lods
test
inc
cmp
pop
mov
pand
xchg
js
adc
andl
inc
mov
sub
fadds
push
in
mov
lods
xchg
jne
mov
push
fmull
push
xor
push
es
scas
add
mov
sbb
dec
xchg
cmp
mov
aad
xchg
fucom
fs
mov
sub
sarl
mov
mov
inc
xchg
out
jle
loop
and
and
ds
popa
push
mov
jge
push
pop
inc
mov
fld
repz
sub
cmpsb
sbb
and
aas
popa
sub
xor
adc
popa
inc
movsb
cmpsb
sub
rol
pop
int
cmp
bound
push
or
lock
shl
adc
popa
syscall
rorb
push
and
mov
sub
outsb
cmp
out
mov
jmp
pop
xchg
mov
popa
out
sbb
jp
xor
push
inc
aad
dec
fsubs
ljmp
popa
xor
cmp
aam
jge
or
sahf
push
popa
ljmp
mov
fcompl
arpl
dec
sarb
add
into
enter
pop
mov
pop
adc
jb
jg
insb
xchg
loop
dec
pop
aad
push
arpl
popa
aas
or
add
loop
pop
bound
int
dec
movsb
cmp
shl
fisubrs
pop
jno
inc
sbb
inc
jae
cmp
test
dec
pop
mov
mov
push
aam
cmp
bound
loope
inc
popa
adc
jmp
fcmovnu
gs
lds
or
cmc
popa
adc
jmp
rcrl
push
dec
sub
pop
pop
popa
lret
imul
dec
stc
loope
add
dec
rorl
rorb
xchg
negl
jo
push
enter
cmp
clc
sub
popa
adc
pop
loop
add
lea
push
out
adc
mov
push
test
lods
popa
cmp
loope
xchg
bound
test
sub
and
adc
popa
sti
xor
add
push
mov
pop
popa
cmpsl
mov
mov
sub
popa
imul
pop
mov
mov
and
sub
lods
inc
push
fs
lock
jmp
push
rcrl
popa
sbb
pop
loopne
add
push
aad
popa
push
or
sahf
popa
aaa
addr16
enter
push
or
xchg
loope
rep
push
mov
pop
frstor
stos
out
insb
push
std
jns
fs
arpl
and
aas
cmp
or
sub
sub
jo
popa
outsb
push
jns
loop
repz
popa
push
sub
sbb
dec
ds
xchg
mov
mov
inc
mov
mov
mov
stos
icebp
dec
xchg
cltd
mov
jne
popa
leave
cmpsl
inc
rorb
loope
enter
fbld
sbb
lods
and
jbe
jmp
mov
or
push
subb
xchg
jae
and
add
frstor
fwait
inc
dec
lea
or
cmpsl
rcrl
shrb
lret
or
popa
out
fwait
cwtl
push
cmp
add
inc
ss
popa
or
es
test
popa
adc
rolb
lahf
mov
and
dec
and
mov
cmpsl
in
adc
pop
mov
ljmp
movsb
mov
pop
ret
popa
lock
xor
xor
or
mov
mov
shlb
mov
fwait
mov
mov
sub
sbb
push
add
arpl
mov
test
hlt
bound
cmp
sbb
enter
lods
push
push
in
ja
jmp
push
add
adc
adc
popa
mov
inc
test
popa
bound
loop
mov
xchg
sbb
daa
cs
push
lcall
inc
adc
mov
ja
sbbl
jge
push
gs
push
sub
jo
lret
in
inc
adc
and
outsl
popa
stos
pop
mov
inc
mov
push
xorb
push
lea
inc
add
out
sub
lret
popa
xor
rol
inc
fisttps
mov
fldenv
into
cmp
inc
inc
popa
stc
orl
sbb
sahf
fidivs
iret
push
movsl
clc
popa
inc
adc
cld
lret
repz
push
inc
adc
dec
inc
outsl
add
ss
popa
fsubrs
jle
popa
pop
adc
hlt
sub
xor
xor
fs
xchg
add
insl
pop
popa
push
addr16
dec
testl
popa
jnp
sub
std
cmp
mov
das
mov
sbb
test
repz
popa
in
fcmovne
repnz
mov
ja
push
popa
add
jg
push
cld
mov
xchg
sub
mov
jae
pop
and
ret
popa
lret
add
and
xor
cs
and
push
inc
iret
jne
fsubr
popa
push
movsl
cmp
jo
sbb
icebp
les
xchg
adc
mov
and
rcrb
popa
ret
mov
dec
loop
orb
aas
and
push
adc
sub
mov
stos
test
loope
js
imulb
rorl
mov
int
punpcklwd
push
ficoms
pushf
imul
or
outsb
popa
notl
mov
repnz
arpl
les
mov
ss
lea
xorl
pop
jecxz
insb
add
mov
frstpm(287
lods
imul
fisubrl
outsl
cwtl
out
xchg
out
movsb
divb
jns
mov
lret
push
popa
mov
out
lcall
std
icebp
out
gs
stc
adc
stos
clc
popa
imul
mov
movsb
xchg
enter
inc
cli
push
xor
shrb
test
push
jbe
sti
cmp
gs
adc
and
and
mov
cmp
push
outsl
cltd
mov
jmp
rorl
popa
add
fildl
popa
fdivr
out
fisubs
xchg
addr16
divb
aam
push
sub
rorl
test
popa
stc
insb
test
sbb
icebp
cmp
jmp
pop
scas
xorb
jl
push
or
aas
out
inc
pop
bound
dec
cli
push
jl
push
mov
bound
int
or
popa
inc
insl
push
jae
xchg
xchg
lcall
and
arpl
cltd
lahf
enter
andb
in
jns
out
dec
popa
in
movsb
add
popa
test
in
cmpsb
loope
arpl
mov
shll
shll
cmc
aam
popa
bound
ret
das
sarb
push
aas
shrl
das
mov
stos
loope
or
subb
loop
and
xchg
and
popa
adc
fwait
outsl
aaa
jne
bound
inc
push
jg
pushf
fcmovnbe
es
popa
mov
rorb
cmpsb
into
mov
movsb
xchg
xor
mov
popa
cmp
add
popa
jno
cmp
inc
xchg
lcall
je
mov
cmp
int
inc
xchg
and
sub
lcall
jmp
adc
jle
cmp
lods
cmp
aam
cli
xor
cmp
xchg
sbb
sbb
push
ret
scas
mov
jbe
mov
popa
ret
and
insb
lcall
sub
jno
mov
cmpsl
pop
jle
loope
popa
fwait
dec
adc
punpckldq
cmp
xlat
enter
popa
pop
sahf
adc
rcll
add
outsl
pusha
call
out
sub
ja
fidivrs
popa
les
mov
fisttps
cmpsb
out
sbb
popa
pop
push
fsubs
add
inc
pop
dec
mov
jae
add
pop
jge
jle
pop
xorl
mov
lods
orl
pop
pop
pusha
loope
mov
or
stc
sti
popa
dec
loope
pop
or
mov
pause
adc
je
popa
mov
clc
xorl
shlb
insl
in
int3
xlat
loop
sub
jae
add
popa
ss
fs
mov
popa
loope
aas
iret
or
push
jge
xor
cwtl
popa
sahf
ljmp
aaa
gs
cld
push
xchg
add
lahf
lcall
dec
sub
mov
popa
pminub
lahf
and
mov
push
push
dec
jo
or
int3
push
lahf
ret
outsl
popa
mov
dec
shll
ljmp
test
fs
pusha
jne
mov
loope
xchg
scas
dec
stos
inc
mov
pop
pop
lods
popa
in
cmp
aad
mov
add
popa
push
orb
xchg
test
sub
or
loopne
std
stos
mov
in
jecxz
and
sub
inc
icebp
out
das
outsb
lea
outsl
xor
loope
shlb
js
cmp
pop
mov
loope
dec
jb
jmp
cld
fwait
lret
mov
loope
add
aaa
adc
or
fistpl
cmpsb
cmp
and
pop
js
les
leave
xor
mov
test
sbb
fwait
popa
xchg
arpl
mov
scas
pop
push
rorl
adc
cmc
mov
fcomps
ljmp
pop
scas
int
inc
stc
pop
xor
or
sbb
mov
and
mov
push
fimull
fstl
push
pop
fstpl
or
mov
pushl
or
shll
enter
pushf
mul
sub
or
clc
ffree
dec
dec
push
popa
gs
loope
repnz
aam
sub
inc
hlt
outsb
stc
and
mov
xor
cmc
popa
std
cltd
push
test
and
mov
mov
arpl
xchg
jl
jmp
push
mov
sub
pushf
test
xor
enter
jge
xchg
fndisi(8087
and
cmpsl
repnz
push
xchg
xor
popa
stc
or
andl
mov
and
jns
dec
jnp
xchg
daa
jae
aaa
in
pop
arpl
sti
mov
sahf
movsl
push
push
xchg
in
mov
push
popa
nop
jle
stos
push
ss
out
setle
loope
popf
xor
movsl
mov
jecxz
pushf
data16
or
lea
push
popa
push
mov
and
adc
jo
dec
outsl
mov
dec
adc
movsb
lea
bound
push
sub
fs
in
dec
popf
jle
jl
adc
xor
popa
cmc
and
sbb
les
popa
sub
jmp
push
popa
jnp
fistpll
popa
mov
dec
popa
repz
push
popf
jbe
popa
inc
push
fdivrl
jne
push
popa
int
inc
dec
and
add
mov
inc
loopne
cmp
cltd
mov
pop
xchg
in
ret
mov
mov
popa
sub
xor
pop
cmp
div
or
sub
mov
inc
xchg
mov
imul
lea
add
and
sub
push
call
sbb
test
push
jo
stos
cmpsl
shl
popa
mov
mov
dec
popa
jp
xchg
aam
or
inc
sbb
xchg
arpl
xchg
je
es
sbb
jae
jmp
push
aas
jo
popa
mov
xor
dec
popa
test
mov
gs
inc
mov
out
push
dec
mov
mov
jo
subl
pop
dec
lods
jle
jl
mov
or
popa
sti
sbb
or
hlt
inc
cwtl
lds
mov
test
std
jae
xorb
push
or
in
cli
aaa
mov
popaw
sub
mov
popa
adc
mov
repnz
sbb
xor
or
enter
or
cmp
push
jo
repnz
aad
popa
data16
xchg
mov
mov
fs
dec
and
popaw
call
pusha
mov
dec
lea
repz
shlb
stc
movsb
das
jb
shlb
sub
ss
mov
popa
xor
shrb
aas
pop
and
mov
scas
dec
stc
fs
xchg
and
add
loope
inc
push
xchg
fs
lea
std
lret
jge
popa
out
out
xlat
ljmp
popa
mov
loop
or
aam
stos
cs
arpl
icebp
cmpsl
push
and
fdivrl
mov
popa
mov
jmp
andb
insb
sbb
lods
in
inc
adc
in
insl
lret
adc
stos
push
jb
in
dec
movsl
popa
inc
jp
jo
cltd
sbb
push
inc
je
scas
and
dec
push
sti
popa
cmp
icebp
dec
fistpll
int3
mov
push
popa
ss
inc
push
dec
pop
sub
mov
sub
mov
dec
ret
jae
popa
aaa
inc
mov
outsb
popa
je
bound
add
into
popa
inc
xchg
loope
addr16
cwtl
popa
pop
and
xor
push
adc
ss
sarl
push
add
jmp
xorb
iret
adc
inc
loop,pn
add
jle
inc
mov
cmc
in
push
add
popa
invd
imul
jge
ljmp
xor
pop
in
icebp
cltd
mov
lea
or
pop
popa
lock
rolb
aad
xor
sbb
push
inc
hlt
bound
lock
popa
mov
pop
lods
mov
adc
ret
jmp
je
or
arpl
in
mov
lret
je
fcomps
adcb
and
cmp
or
mov
push
icebp
dec
shlb
fidivrs
sub
add
bound
iret
cwtl
jmp
sbb
mov
dec
xchg
inc
and
inc
mov
lret
xchg
rorb
sub
inc
jo
popa
lods
jb
pusha
ljmp
imul
into
mov
sahf
lea
fdivl
call
adc
dec
imul
data16
sti
out
pop
lods
mov
xchg
add
movsb
popa
pushf
test
sbb
loope
lea
add
shll
xlat
xchg
popa
jbe
paddsw
enter
sahf
icebp
inc
adc
popa
cmp
sub
notb
test
push
mov
and
xchg
pop
dec
popa
outsl
dec
out
je
mov
testb
mov
adc
bound
es
inc
adc
ljmp
inc
xor
rcpps
jmp
and
lahf
popa
inc
sahf
xchg
in
aam
jle
popa
sub
adc
popa
cmp
dec
stos
cld
sub
mov
inc
arpl
popa
and
imul
push
mov
mov
sbb
sub
testb
out
inc
icebp
mov
rcl
popa
pop
add
mov
movsb
outsl
clc
or
dec
cmp
inc
mov
popa
bound
push
xchg
popa
push
add
mov
insb
pop
outsl
lock
stos
cmpb
jo
daa
dec
sbb
sbb
mov
sbb
push
popa
aaa
push
stos
dec
jns
insl
and
pop
js
popa
mov
inc
test
push
loop
bound
or
imull
push
sbb
insl
fcomps
push
dec
fstps
sbb
push
cmp
popa
mov
pop
xchg
xlat
cmp
mov
repz
pop
xchg
enter
xchg
and
and
push
cmp
jmp
inc
dec
or
pop
push
pop
or
push
lea
adc
clc
add
inc
sti
lods
mov
loope
pop
jne
leave
mov
mov
mov
mov
mov
aaa
pusha
mov
mov
xchg
popa
dec
enter
push
push
jg
ss
out
outsb
gs
cs
push
rolb
outsb
mov
fistpl
xchg
subl
ficoml
dec
sub
and
loop
mov
lcall
mov
push
jns
out
dec
dec
xchg
jnp
sbb
push
insl
jno
rol
mov
outsl
pop
dec
xchg
mov
xor
sahf
adc
popa
mov
data16
pop
cmp
bound
daa
fstpl
lahf
sahf
int
stc
mov
ficomps
inc
data16
outsb
icebp
jbe
lods
xor
pop
popf
mov
mov
mov
mov
mov
popa
mov
enter
arpl
popa
stc
mov
sar
push
and
pop
arpl
xchg
sub
xor
mov
xor
mov
loopne
insb
imul
stos
push
mov
lahf
and
out
js
in
bound
not
movsb
or
or
add
xor
sub
inc
shr
xlat
mov
repz
call
push
rcrl
jns
out
lds
sbb
mov
std
jmp
dec
sub
or
aaa
xor
clc
mov
mov
popa
rcll
cmpsl
sbb
add
jecxz
add
pop
ljmp
jmp
xor
mov
pop
add
fcmovnbe
mov
les
daa
cmpb
repz
pop
int
dec
adc
add
movsl
std
mov
mov
mov
sub
imul
mov
sarl
insb
cmpl
std
pop
push
in
dec
mov
xchg
in
xchg
xor
mov
insl
outsl
xchg
cmp
or
jns
inc
popa
clc
dec
idivl
xchg
fdivl
in
mov
popa
pop
les
inc
lods
popa
std
mov
not
pop
or
popa
push
incl
and
mov
das
adc
push
in
sub
push
lret
into
jb
fadds
pop
and
data16
sbbb
aam
lods
daa
test
jbe
inc
mov
frstor
popa
mov
fwait
dec
leave
popa
lahf
dec
jmp
fs
popa
sarb
aas
stc
arpl
scas
das
jae
fidivl
pop
xchg
aaa
cli
push
sbb
adc
fcmovbe
push
sub
inc
pop
movsl
mov
pop
das
mov
pop
or
stc
int3
aas
popa
out
pop
pop
fwait
clc
das
popa
mov
cwtl
cmp
add
popa
xchg
jge
adc
mov
lea
jbe
mov
les
aam
cmpsb
jne
filds
and
mov
pop
lods
popa
or
push
hlt
push
sub
pop
mov
in
fidivrl
pop
mov
or
sbb
jecxz
sahf
andl
or
roll
js
xchg
or
dec
adc
add
sub
je
insb
popf
imul
rcrb
popa
and
lret
fisubs
mov
popa
cld
popf
testl
pop
in
and
lcall
mov
cmc
adc
push
loope
daa
mul
xorl
xor
das
popa
dec
pop
stos
mov
push
inc
out
or
into
or
test
cli
sub
dec
fnsave
lret
aam
inc
callw
mov
adc
popa
addl
mov
adc
mov
or
outsl
pushf
jecxz
push
outsl
lods
cmpsb
andl
rcl
popa
arpl
add
ja
push
and
pop
adc
or
xchg
or
add
jecxz
sahf
dec
sarl
subb
aas
lahf
bound
into
jbe
shll
movsb
push
xor
aam
cmc
ret
mov
xor
cmp
push
int
fisubrl
jne
clc
loope
inc
jb
daa
popa
mov
pusha
cmp
and
sub
jnp
push
bound
arpl
mov
cmp
pop
cmp
std
add
imul
lock
stos
mov
jmp
icebp
mov
jb
cltd
sub
adc
push
cmp
scas
fwait
mov
and
lods
jo
int3
es
sbbl
sahf
sti
dec
sbb
adc
mov
adc
icebp
jge
es
sub
adc
and
mov
jp
enter
mov
inc
sbb
pop
fldenv
popa
test
imul
xchg
popaw
dec
fdivrp
int
mov
cmp
sbb
popa
cmp
loop
popa
jl
dec
cmp
test
adc
lea
push
loope
jo
je
xchg
shlb
out
hlt
or
pop
push
insl
lahf
stos
mov
imul
sbb
cmp
lret
shll
jns
pop
lds
popa
cmc
sbb
bound
xor
mov
push
popa
pop
aaa
jecxz
xor
repnz
popa
in
icebp
lds
ret
and
bound
stos
sti
add
popa
sbb
xchg
mov
bound
jle
push
sub
call
jg
jo
data16
push
sbb
shll
jmp
mov
push
loope
insl
insb
adc
bound
cmpsl
or
mov
rcll
popa
dec
adc
push
dec
test
sub
leave
dec
and
mov
clc
or
inc
arpl
fsts
movb
cmp
jb
mov
call
push
popf
out
jg
xchg
inc
inc
push
xor
rclb
xchg
outsb
pop
popa
mov
lret
popa
add
stc
movsl
jo
pop
enter
and
dec
bound
fstpt
mov
xchg
lods
push
out
jns
std
mov
push
jp
hlt
pop
loopne
xchg
cmpsb
rcrl
ficomps
inc
popa
or
push
jno
divb
test
adc
and
subl
dec
std
popa
out
stc
loope
cli
lahf
pop
popa
mov
xchg
popa
test
stc
gs
cmp
jo
pop
outsl
movsb
jle
and
sbb
ja
popa
push
pusha
cmp
popa
jl
xor
bound
mov
imul
shll
movsb
sbbb
xor
adc
xlat
or
ljmp
pop
loope
loopne
inc
inc
insl
mov
popa
je
mov
pop
insb
push
mov
adc
decl
out
data16
jmp
sbb
add
sbb
outsl
std
mov
and
mov
rcrw
or
jge
push
pop
jge
bound
lcall
mov
popa
shr
lods
fbld
jle
xchg
mov
popa
sbb
stos
mov
adc
xor
outsl
popa
lret
das
mov
pop
dec
dec
fists
test
jmp
dec
jb
mov
inc
shrb
add
add
sub
cwtl
cs
dec
loope
xor
jns
sub
ds
jmp
mov
movhps
jne
das
popa
sbb
out
or
add
scas
push
ficoms
fs
test
popa
or
mov
lock
sub
dec
push
pushf
jne
outsl
popa
inc
cmovne
fnstenv
push
popa
adc
pop
stc
cli
mov
imul
fistps
popa
push
arpl
jp
sarl
dec
daa
sub
xor
xor
data16
inc
sbb
jb
popf
std
popa
dec
inc
nop
sub
fiadds
popa
out
shlb
fdivrl
jp
mov
ja
push
adc
mov
popa
imul
insl
push
xchg
fs
sbbb
int
sahf
mov
popa
out
test
test
int3
push
popa
stos
je
cmp
cmp
out
cmpsb
xchg
popa
nop
mov
in
pusha
sti
jmp
scas
ss
mov
mov
cwtl
movl
dec
std
je
jmp
pop
sub
sub
test
jecxz
dec
fdivrs
popa
xchg
xchg
sub
pusha
or
jae
out
ret
dec
and
popa
xor
and
in
jecxz
push
gs
jmp
pushf
and
cmpsb
cmp
popa
xchg
push
dec
imul
adc
arpl
fisubl
or
mov
inc
pop
rcl
push
rcr
mov
ret
push
fisubs
xchg
inc
sub
inc
jecxz
xor
ja
push
cld
enter
nop
arpl
lds
sahf
xor
cmp
testb
gs
or
popa
aas
inc
xchg
sahf
iret
lods
pop
popa
adc
loop
insl
pop
xor
dec
negl
bound
lds
mov
dec
insl
loope
in
das
fdivrl
sbb
adc
mov
and
push
lods
add
insb
in
int3
jns
dec
sub
add
and
lret
popa
mov
mov
sbb
pop
adc
or
push
mov
mov
loop
jp
mov
data16
call
xor
ss
jns
push
cld
popf
out
mov
cmp
push
sub
jecxz
mov
popa
pop
aaa
adc
shrl
mov
pop
mov
imul
push
jno
push
shll
loopne
mov
jb
popa
or
xchg
xor
icebp
lods
xchg
jp
loope
loope
test
dec
push
movsl
cltd
mov
loope
cmpsb
in
jns
andl
or
je
movsb
mov
pop
shrl
xchg
addb
mov
jle
push
xor
pusha
sti
inc
test
push
mov
in
pop
loope
jne
popa
ficompl
mov
adc
or
jmp
pop
fimull
loop
addr16
cmp
stos
bound
bound
shrl
push
cmp
inc
arpl
incb
xor
loopne
push
jge
xor
jl
add
push
mov
outsb
xchg
mov
xor
fs
mov
mov
inc
mov
and
xchg
daa
push
test
movb
dec
insl
popa
add
pusha
aaa
jle
iret
pop
mov
imul
andl
into
mov
jecxz
jp
cmp
std
popa
fwait
inc
mov
ret
pop
popa
mov
sub
mov
mov
loope
push
inc
push
popa
bnd
insb
push
sub
cmp
or
scas
orl
mov
jl
ffreep
push
xor
mov
scas
jle
lret
adc
pop
or
jne
cli
and
xchg
popa
sbb
jnp
pop
icebp
or
push
or
xor
arpl
fwait
pusha
test
and
pop
in
popa
lock
out
pop
hlt
add
jle
dec
frstor
out
push
add
xor
cmp
das
test
mov
dec
mov
or
jle
pop
jns
popa
xchg
add
xchg
mov
arpl
data16
jae
outsb
cmc
loope
and
out
sti
enter
pop
jle
sbb
add
pushf
arpl
rcll
bound
mov
inc
pop
or
lea
sub
inc
inc
popa
call
mov
popa
jecxz
pop
mov
cmpsb
mov
rcrb
test
xor
mov
imul
icebp
nop
sbbb
pop
jp
xchg
leave
cltd
test
sbb
dec
mov
dec
lahf
shlb
cli
jae
add
cmc
push
movsl
icebp
jle
xor
mov
inc
add
cmc
popa
sub
jb
adc
mov
cmp
sbb
cmc
int3
loope
mov
or
adc
repz
inc
negl
call
repnz
xchg
push
xor
sbb
cli
add
fwait
and
fistps
jmp
push
fisubs
jmp
stos
faddl
popa
cwtl
in
jns
dec
or
dec
popa
addr16
mov
test
mov
cmp
out
imul
jns
sbb
mov
cmp
xchg
adcb
pushf
jecxz
lock
jle
dec
lock
out
scas
pop
mov
inc
bound
pop
test
cli
pop
or
loope
push
xor
popa
jg
pop
ret
mov
lret
cmp
imul
popa
pop
push
ja
inc
mov
push
int3
outsb
loope
ficoml
mov
test
ja
sub
loopne
popa
add
repnz
popa
jne
jb
or
jecxz
add
mov
mov
popa
aad
nop
loop
push
es
in
dec
pushf
mov
mov
mov
test
incl
loopne
adc
mov
and
arpl
les
ret
jb
dec
hlt
pop
popf
das
mov
or
in
bound
fwait
cltd
and
mov
jmp
mov
lcall
data16
mov
popa
push
and
inc
xor
and
lret
in
pop
popf
pop
scas
cwtl
jns
bound
pop
sub
je
into
cld
push
jle
jo
add
and
xor
push
inc
mov
popa
insb
pop
xor
and
jmp
push
dec
jns
mov
test
sahf
mov
mov
popa
xchg
call
flds
dec
mov
lock
mov
pop
pop
jae
in
popa
ja
mov
jbe
popa
adc
sbb
imul
ret
mov
mov
int
popa
out
mov
lret
push
xchg
int3
pop
jnp
push
test
mov
jmp
adc
mov
movsl
jl
cmp
add
pushf
test
popa
xor
dec
jmp
sub
cmp
frstor
int3
and
xchg
loope
movlps
mov
in
daa
cmp
mov
stos
xor
testb
les
sub
icebp
jnp
sahf
popa
sub
ljmp
insl
scas
fmuls
popa
notl
jb
data16
das
sub
popa
push
mov
add
jnp
gs
test
loope
sbb
lahf
ljmp
cmp
adc
jge
rorl
ret
sub
mov
iret
fsubrl
popa
and
rorb
popa
jne
imull
popa
lahf
enter
test
adc
in
push
dec
xchg
push
mov
popa
in
mov
iret
pop
popa
pop
stos
sti
and
loopne
or
mov
addr16
add
dec
inc
data16
fisttpl
and
popa
jp
jb
push
mov
popa
aaa
pop
pop
mov
popa
andl
js
hlt
push
jnp
into
popa
mov
imul
stc
leave
loop
pop
push
cmp
jno
xchg
lea
and
div
add
call
fnstenv
mov
pusha
rorb
popa
test
js
fsubl
sbb
inc
bound
ret
dec
mov
test
jmp
pop
enter
test
in
cmp
rclb
imul
sub
mov
insl
and
xchg
popa
xchg
inc
or
out
push
loopne
push
xor
imul
cwtl
loop
xorl
fstpl
cltd
pop
push
sbb
or
mov
bound
cmpsb
lret
fists
dec
ss
xchg
sti
cmp
mov
aas
outsl
fidivrs
push
cltd
loop
loopne
lahf
adc
or
add
cmp
jno
popa
mov
mov
sahf
adc
enter
insb
out
into
loope
sub
addr16
loop
stc
pop
inc
cmp
setp
push
dec
mov
es
lea
inc
bound
out
sbb
sbb
cmp
imul
test
add
call
inc
insl
xchg
gs
stc
pop
dec
jbe
lods
shrl
and
faddl
aas
enter
push
jns
rclb
clc
xchg
mov
inc
pop
push
test
cld
lods
cmp
popa
je
nop
ss
sahf
sub
fsubs
fildll
and
fcmovu
fbld
mov
dec
loope
shl
es
inc
mov
popf
ret
pop
mov
in
andb
outsl
mov
popa
js
gs
out
popa
cld
push
sub
cmp
mov
jo
push
sub
fwait
or
pushf
icebp
bound
and
push
punpcklwd
loope
lret
lahf
insl
jmp
xlat
insb
jmp
leave
xor
stc
iret
cmp
lret
inc
or
mov
cltd
popa
jb
push
push
inc
int3
add
dec
icebp
adc
jns
out
mov
lea
dec
dec
scas
xchg
push
cmp
cld
icebp
pop
loope
push
ljmpw
and
js
push
lret
popa
fdivrp
mov
test
xor
xor
out
mov
pop
inc
andl
lahf
push
dec
mov
rolb
jg
jle
enter
add
shll
popa
stc
xchg
adc
inc
mov
clc
sub
adc
and
lods
cmp
xor
push
mov
sub
shll
pop
fdivrl
push
jne,pt
popa
popf
jge
cmpsl
push
popa
inc
dec
int
mov
add
fmuls
add
jno
lahf
sarb
push
xchg
jg
jnp
or
dec
cs
inc
push
decl
push
jnp
xchg
pop
add
loope
inc
mov
sbb
fstpl
and
cli
mov
inc
jg
in
jno
scas
jne
jnp
cmp
xlat
mov
rcl
add
shlb
insl
into
adc
popa
sbb
es
popa
mov
dec
jg
pop
jle
push
push
scas
insb
mov
and
mov
xor
inc
out
popa
addr16
jo
jnp
cmp
bound
int3
das
cmp
dec
pop
push
fcmovb
add
lahf
inc
push
loope
jle
je
add
out
jb
shlb
adc
call
icebp
sbb
data16
daa
sub
notl
out
decb
rorl
fs
adc
ret
xchg
mov
cmpsb
popa
dec
cld
fisttpl
divl
loope
dec
popa
mov
jmp
ret
mov
pop
mov
hlt
mov
adc
leave
cmpsl
push
cltd
in
mov
rorl
call
sahf
repz
orl
adc
je
jge
dec
inc
or
dec
cmp
in
icebp
jo
and
sub
add
jg
rcrl
in
dec
mov
adc
mov
inc
push
jo
cmp
pop
bound
out
sti
roll
mulb
sbb
adc
fs
pop
pusha
dec
pop
pop
and
lahf
sbb
push
pop
mov
cwtl
inc
cltd
std
or
push
loope
movsb
and
mov
xor
adc
fisubs
push
dec
fmuls
daa
in
add
pop
call
mov
xchg
mov
and
in
xor
into
inc
xchg
add
das
stos
mov
fwait
lret
insl
or
mov
ljmp
call
xchg
mov
mov
das
daa
es
repz
test
or
cmc
roll
add
mov
jne
iret
mull
int3
sbb
popa
adc
lods
arpl
cwtl
mov
jne
fdivs
aad
jbe
les
sbb
pop
ret
push
iret
push
repnz
xchg
cmp
cmpsb
sbb
popa
subb
mov
stc
bound
jmp
test
push
enter
loope
xchg
add
lods
sub
popl
lahf
fwait
or
jmp
in
fs
out
lock
mov
mov
sti
or
ljmp
add
xor
test
xor
cli
sub
fs
jmp
les
arpl
inc
xchg
mov
inc
rolb
or
movsl
jle
inc
popa
jbe
mov
fs
and
das
xor
test
or
ja
sub
mov
cwtl
jle
or
popa
mov
clc
cltd
sbb
hlt
lea
pop
xor
les
jbe
movsl
mov
xor
xor
cmpsb
and
and
popf
js
push
outsl
jmp
fldenv
fldl
pop
push
pop
bound
mov
filds
pop
mov
jg
les
adcl
mov
mov
mov
mov
jge
inc
xchg
dec
xchg
mov
sub
loopne
aaa
inc
nop
leave
push
aaa
sbb
cwtl
popf
stos
cld
mov
addr16
vmovdqu
adc
leave
shlb
insb
fldl
jecxz
dec
lcall
and
inc
cld
sbb
jb
mov
mov
imul
push
xchg
fcom
mov
or
inc
mov
popf
inc
insw
rorb
in
lods
ja
in
push
fs
sbb
gs
dec
xor
dec
dec
cmc
out
xchg
jge
loop
cmpsb
pop
out
aaa
in
ja
mov
pop
fcoml
jl
add
fistpll
cwtl
iret
insl
sbb
icebp
jns
jne
arpl
addl
mov
pop
in
imul
rol
test
jo
mov
adc
ja
les
push
pop
lahf
popa
lret
jno
outsl
dec
sbb
mov
mov
mov
bound
mov
mov
adc
addb
in
repz
sub
push
or
hlt
push
std
mov
movsl
mov
xchg
lock
pop
or
mov
and
aaa
xchg
lods
mov
lock
int
bound
lock
mov
cmp
add
add
insl
loop
and
ret
mov
mov
lds
jge
imul
in
push
push
lods
sub
out
dec
inc
adc
pop
nop
adc
mov
lea
and
inc
lret
in
adc
adcl
enter
mov
and
xchg
lods
jb
gs
in
pop
scas
out
dec
mov
jg
cmp
pop
push
bound
mov
mov
push
ss
xchg
xchg
ljmp
or
std
gs
mov
insl
cli
pop
jecxz
jmp
mov
mov
clc
and
add
dec
dec
adcl
mov
lods
mov
xchg
mov
mov
add
imul
fisubrl
mov
shll
push
push
or
adc
jl
bound
push
jge
push
nop
xor
faddl
pushf
in
dec
jno
pop
pusha
outsl
xor
push
out
out
or
jge
cmp
mov
std
adc
in
dec
add
sbb
inc
out
roll
sti
cwtl
inc
repz
frstor
pop
add
js
test
icebp
dec
pop
add
xchg
adc
bound
add
hlt
adc
dec
fists
or
mov
pop
out
popa
or
sti
and
popa
fidivrs
mov
mov
sbb
push
push
xchg
xor
jae
fbstp
sbbl
lahf
inc
dec
add
popa
fsubl
cmp
in
cmpsb
lcall
and
movsb
out
decb
cmp
popa
nop
hlt
add
jbe
mov
icebp
pop
dec
mov
popa
fsubrs
adc
cmp
lret
mov
push
ficoms
popa
add
in
repnz
ficompl
popa
int
mov
jmp
or
adc
push
js
add
dec
dec
inc
adc
fdivl
in
jne
shll
dec
fmuls
mov
popa
loop
mov
vmwrite
int
rcrl
mov
test
dec
dec
lods
pop
xchg
mov
stc
xchg
inc
cld
popa
in
push
hlt
and
push
popa
lock
dec
cmp
push
popa
sub
decl
int3
fcompl
ss
xchg
loope,pn
xchg
push
add
shrl
popa
lcall
test
pop
sub
popa
cmp
inc
cs
add
imul
inc
adc
repnz
bound
test
fs
ds
xchg
arpl
jmp
rcrl
pop
inc
push
sbb
shll
push
les
jg
xchg
in
lods
mov
sbb
sbb
and
ja
lret
and
pop
sti
inc
xchg
popa
xor
mov
popf
popa
mov
mov
sub
das
les
xor
push
sbb
out
jnp
inc
inc
sbb
mov
ret
jne
or
pop
addr16
popa
fs
sti
pop
popa
mov
cmpsb
roll
xchg
xchg
test
mov
mov
mov
mov
pop
cli
test
popa
sub
jp
adc
int3
je
stos
movsb
lret
dec
roll
adc
popf
add
sbb
adc
popa
ja
mov
push
bound
inc
clc
mov
cmpb
hlt
jl
jge
cltd
int3
popa
mov
add
pop
xor
in
sub
outsl
out
les
loope
and
adc
inc
imul
fucomp
dec
arpl
mov
sub
cmp
sbb
shll
jae
mov
cmpsl
leave
popa
clc
push
subb
sub
loope
daa
cmpsb
loopne
add
popa
xor
insl
push
mov
imul
call
mov
sbb
xor
ja
lret
arpl
popa
jmp
test
xlat
test
out
xchg
lds
push
cmp
dec
add
mov
loope
mov
ljmp
aad
mov
jg
mov
std
into
xchg
gs
push
jge
jmp
mulb
repz
xchg
ja
add
fcomps
popa
xor
std
mov
pop
inc
lcall
add
lret
inc
icebp
mov
arpl
ds
popa
mov
shrl
popa
test
xchg
popa
adc
fs
mov
or
sbb
mov
pushf
mov
cmp
popa
int3
insb
int
adc
test
xorl
out
cwtl
mov
int
imul
jle
jmp
jle
mov
subb
and
sbb
jne
outsl
push
mov
mov
cwtl
jo
jg
ret
mov
aam
popa
push
jge
test
mov
je
and
popa
out
bound
adc
daa
out
sbb
mov
sub
cld
mov
push
jno
popa
xchg
jge
stc
popa
iret
mov
xlat
jle
out
and
repz
popa
sub
mov
popa
xchg
adc
movsl
jb
in
aam
jns
cmp
jge
and
push
repnz
sbbb
fnclex
testb
cmp
shll
pop
imul
decl
out
push
xchg
and
mov
stos
push
cmp
jle
push
loopne
push
sbb
dec
mov
lret
pop
inc
bound
lds
inc
dec
nop
dec
into
adc
stos
popa
push
outsl
fbld
mov
jns
dec
sub
popa
sbb
clc
dec
icebp
shrl
arpl
xchg
test
sti
call
xchg
in
cmp
jg
movsl
and
inc
add
mov
call
mov
adc
data16
cmpl
shrb
jp
mov
popa
lea
dec
push
popa
push
lcall
hlt
or
dec
popa
cmc
xchg
loop
mov
push
jns
xchg
xor
xchg
mov
push
pop
mov
xor
adc
pop
test
cmp
divps
inc
rcrb
pop
dec
mov
loopne
addr16
and
inc
or
fstl
das
popf
cmp
fs
outsl
add
mov
test
popa
pop
das
pop
sub
sti
jge
lret
push
jle
cltd
iret
or
das
jnp
cmp
imul
lock
push
lahf
shll
ja
pop
cmp
je
arpl
dec
push
and
out
shrl
cmp
addb
outsl
loope
or
jno
popa
xor
clc
adc
popa
fisttpl
lods
inc
pushf
shll
push
outsl
mov
mov
dec
push
dec
fs
testb
cmp
xchg
sbb
mov
loope
enter
loopne
xchg
sarw
pop
mov
hlt
dec
and
cmp
lret
popa
mov
std
mov
das
dec
adc
sub
fs
cmc
vucomisd
or
xor
sbb
sub
xlat
imulb
adc
mov
mov
add
movsb
sarb
out
or
sbb
repz
mov
mov
ror
das
int3
mov
pushf
popa
inc
popf
or
xchg
or
test
icebp
stos
add
loop
sub
mov
lcall
pop
and
inc
stos
jno
loop
push
aad
in
enter
por
mov
jecxz
popa
jge
and
rorl
stos
je
repnz
mov
fisubrs
mov
test
shrl
out
mov
hlt
add
sub
mull
stos
or
roll
mov
popa
mov
sub
popa
xchg
and
add
cmp
fbld
push
cld
xchg
popa
xor
lcall
jne
fs
pushf
and
fcmovne
pop
loope
mov
in
std
jo
sbb
lds
repz
jbe
inc
popa
ret
xlat
cmp
in
fisttpll
jno
pop
mov
cmpsl
iret
lods
pop
je
push
add
push
mov
jmp
in
cmp
jl
add
inc
imul
lock
pop
pop
popa
dec
push
push
icebp
rcl
es
jae
fldt
inc
sub
and
popa
into
loop
jo
cmp
aad
sbbb
in
lods
iret
popa
mov
and
out
pushl
sahf
xchg
inc
popa
inc
mov
pop
insb
jo
rorb
lret
jae
xor
movsb
xchg
push
arpl
lods
push
xor
sub
inc
add
jo
sbb
int3
mov
dec
pop
jg
cmpsb
push
popa
push
adc
mov
or
pop
out
shl
push
imul
popa
sbbb
les
cmp
push
lret
cltd
cmp
pop
mov
ret
andl
ljmp
cli
mov
rcrb
sub
pop
insb
sbb
xchg
popa
hlt
ss
rolb
pop
popa
jge
ljmp
sahf
insb
cmp
xchg
xchg
subl
popa
inc
cs
cmpsl
sbb
decb
push
push
lcall
jb
add
lret
shrb
cmp
out
out
fimuls
cltd
rsm
xchg
loopne
or
not
jns
jo
sbb
popa
or
fistps
jecxz
pusha
inc
xchg
mov
xlat
and
mov
pop
pop
mov
inc
xchg
mov
xchg
lea
lds
repz
dec
cmp
jno
sar
stc
push
dec
test
sbb
int
inc
rorb
push
pop
xor
cwtl
adc
push
inc
movsl
fwait
jo
in
adc
out
rcrb
xchg
outsl
dec
pop
and
test
sub
aaa
dec
iret
mov
lds
push
mov
popa
leave
sbb
ffreep
enter
repnz
cmp
xor
adc
jmp
dec
leave
jae
or
sbb
imul
mov
fadd
std
pop
sahf
ds
pop
jae
fs
sbbl
fiadds
insl
pop
sub
sahf
inc
inc
test
jo
cmp
arpl
sub
loope
into
imul
sbb
outsl
push
mov
jp
lret
fstpt
insl
int3
sysexit
icebp
mov
or
mov
repz
hlt
add
popa
xor
inc
pop
aaa
dec
xchg
mov
xor
fcomps
repnz
push
int
popa
faddl
xlat
inc
adc
xor
in
loop
add
and
inc
push
sub
pop
fstpl
lea
popa
gs
rol
adc
fcmovne
pop
mov
push
popa
repz
xchg
add
mov
pop
popa
arpl
xchg
movsb
push
es
popa
xor
push
negl
fisttpll
fistl
popf
arpl
icebp
roll
popa
push
mov
out
dec
popf
bound
adc
iret
sub
mov
test
mov
daa
xchg
in
push
lds
sbb
dec
roll
loope
xchg
add
sahf
leave
xchg
loopne
lods
jne
rcrl
jge
in
bound
jle
jnp
mov
xor
and
inc
sbb
call
pop
dec
sub
jmp
jae
arpl
movsl
imul
in
dec
fadd
pop
or
imul
stos
xor
mov
and
mov
gs
cmpsl
sub
sarb
cmpsl
ficompl
gs
pop
lods
fwait
aas
add
inc
out
dec
xor
je
out
cmc
bound
hlt
js
or
rcrl
xor
sbb
leave
sbb
ret
ss
jne
cli
rcr
jno
jp
xchg
mov
pop
sub
jae
push
pop
mov
shlb
ljmp
ret
or
jmp
jns
sarb
fprem
mov
or
stos
leave
inc
loopne
ret
push
adc
loope
rcrb
ffreep
inc
jecxz
cld
fisttpll
jnp
mov
mov
xor
jbe
dec
pop
mov
int
stos
jbe
ss
jmp
pop
mov
push
leave
cld
pop
adc
imul
js
std
outsl
dec
cltd
mov
sub
jg
inc
xchg
push
lds
adc
lock
inc
fcmovnb
leave
in
jns
rclb
and
jl
cmp
adc
mov
xor
and
pusha
orl
mov
loope
push
test
pop
enter
xchg
mov
sbb
lret
inc
mov
loop
idivb
xchg
jo
clc
xchg
out
loop
push
shl
bound
dec
xchg
into
dec
cwtl
testl
add
icebp
dec
xadd
push
sub
mov
lods
push
nop
add
sub
cmpb
xor
lods
push
jo
pop
je
sbb
push
cmp
bound
push
and
in
or
pop
pusha
popa
mov
ss
std
push
adc
inc
jp
dec
cmc
pushf
xor
loope
sbb
lret
outsb
popa
sti
inc
cmp
fdivrs
add
aad
dec
popa
nop
jnp
hlt
xor
popf
and
and
popa
mov
jecxz
cmc
push
lret
inc
fs
cmp
and
pop
fistps
fs
rcl
popa
aas
loop
into
dec
fistpl
lods
jo
pop
ss
addr16
pop
popa
mov
cltd
stc
jg
or
xlat
sbb
icebp
rorb
outsl
addb
ret
sub
movsl
fistpl
ficoml
imul
mulb
lcall
out
sub
dec
arpl
sbb
mov
add
out
cwtl
mov
cmpsl
sbb
add
das
add
insl
dec
popa
sbb
frstor
cmpsb
cmp
loop
and
xorb
fs
push
ds
in
xor
push
pop
iret
test
lret
inc
repnz
xchg
xor
lcall
sub
pop
cmp
mov
ret
jno
jb
cmc
add
sub
jle
xchg
out
cs
or
rcr
outsl
xlat
stos
xchg
jp
lret
fucomi
popa
and
mov
mov
adc
jg
popa
inc
xchg
inc
pusha
dec
rep
jmp
ja
xor
mull
xchg
mov
bound
add
into
xorl
ss
dec
lods
jbe
stc
popa
mov
or
nop
out
push
adc
test
add
xchg
xor
push
jo
loop
xchg
mov
sbb
popa
sub
cld
punpckhwd
popa
es
loope
xchg
xlat
pop
popa
add
outsb
xchg
in
popa
in
leave
mov
mov
cmp
popa
outsl
mov
sahf
cmc
outsb
pusha
aam
and
push
mov
cmp
cmp
int3
clc
ret
lahf
lahf
pop
loope
shlb
out
or
sub
fs
fnsave
imul
and
dec
jp
popa
fildll
inc
mov
add
add
popa
mov
jbe
pop
sarl
push
sub
popa
dec
pop
jo
jge
shrb
push
or
add
cli
popa
dec
xchg
fcomps
cmp
movsl
mov
popf
popa
in
addl
mov
aaa
into
in
rol
ja
mov
popa
pushf
and
fidivs
sub
mov
lods
repz
popa
jge
mov
sbb
jae
ror
scas
jne
aas
popa
inc
gs
mov
push
inc
fs
sbb
ret
gs
and
and
ror
push
test
inc
popa
cmpsb
xor
lret
pop
dec
ja
add
in
mov
popa
mov
mov
rcll
push
or
inc
popf
movsb
add
stos
inc
cmp
push
outsl
jle
adc
mov
mov
and
fwait
or
lock
jle
cmp
mull
iret
jo
sbb
pop
and
movsl
loope
cld
out
push
mov
insb
in
mov
decb
adc
in
cmp
inc
imul
push
popa
fiaddl
mov
ret
sub
adc
mov
adc
sti
sub
int
xchg
jbe
loop
mov
popa
test
xor
fdivrs
mull
xor
aaa
iret
std
popa
mov
cmpsl
pminsw
nop
and
cmc
dec
jmp
push
mov
out
shll
ficompl
insb
out
test
into
mov
popa
iret
daa
jbe
fidivl
lea
insb
ret
repz
nop
fiadds
je
adc
fs
fcomip
and
lds
push
jbe
add
pop
into
inc
pop
fwait
adc
loope
mov
xchg
pop
pop
popa
xor
enter
fdivl
mov
cltd
in
divl
mov
inc
xchg
push
popa
inc
fdivrs
pop
ss
gs
mov
mov
lret
xor
scas
cld
pop
push
rcrb
cmp
lds
mov
es
xchg
shll
popa
push
mov
and
mov
jo
cmp
dec
mov
ficompl
insb
jmp
xchg
mov
push
shrl
pop
inc
rol
pop
xorl
arpl
pop
mov
mov
xor
testl
popa
push
subps
mov
lcall
enter
jbe
rorb
add
iret
int3
mov
dec
mov
dec
aaa
jg
pop
popa
adc
mov
clc
popa
pop
lods
les
fs
icebp
jmp
sbbb
add
popa
pop
inc
out
in
rclb
jnp
inc
adc
inc
inc
rcrl
inc
call
loope
popa
jbe
dec
sbb
shll
movsb
loop
or
cld
rcrb
adc
test
fisttps
mov
dec
lahf
cmp
popa
js
add
add
pop
bound
popa
xchg
iret
int
mov
mull
cmp
punpcklwd
mov
xor
add
ret
dec
inc
popa
mov
dec
bnd
sub
pop
inc
cld
sub
push
fcmovnu
xchg
and
roll
popa
xchg
adc
rcrl
jecxz
pop
stos
clc
push
cmp
inc
add
popa
pop
cmpsb
jmp
call
insl
pop
inc
aaa
imul
jge
loop
jne
loope
nop
pusha
popa
popf
xchg
bound
pushf
popa
mov
movsb
xor
in
mov
add
adc
jno
arpl
and
xor
enter
push
jbe
imul
fistl
inc
test
pushf
push
ret
faddl
pop
call
rolb
in
inc
stos
adc
int
xchg
mov
scas
push
jae
incl
popa
xor
bound
popa
lds
in
nop
mov
mov
in
add
lods
sbb
push
or
jg
sahf
sbb
insb
arpl
mov
andl
and
or
lahf
aad
push
inc
xchg
and
or
cli
mov
pop
inc
imul
pop
mov
test
sub
leave
inc
xchg
ret
lahf
cmp
notb
fstps
push
dec
fldl
popa
mov
or
roll
out
xchg
and
push
popa
or
mov
push
popa
es
popa
adcb
arpl
mov
addr16
inc
lret
mov
jl
push
or
popa
les
mov
ret
push
add
popf
int
popa
sti
push
mov
pop
mov
popa
inc
lret
mov
jge
dec
pop
inc
mov
fldenv
jle
jae
sub
clc
outsl
hlt
sti
cli
popa
es
cmp
mov
xor
popa
cmp
xchg
jle
sysexit
popa
inc
test
dec
popa
in
jbe
push
or
in
mov
call
dec
popf
dec
ret
ss
jns
sub
insb
stos
dec
fsubs
mov
mov
pop
cwtl
iret
test
push
and
andl
push
add
pop
inc
xor
dec
bound
pop
pusha
in
loope
cmc
out
js
shr
int
popa
test
jb
jle
sbb
bound
ret
dec
hlt
movsl
shrl
fisttpl
inc
mov
outsl
xor
add
push
and
dec
pusha
xchg
js
dec
add
mov
call
out
stc
sbb
insl
mov
lods
lret
pop
fldl
mov
in
push
mov
mov
add
mov
jecxz
divb
sub
or
jae
out
loope
add
dec
mov
lea
bound
pop
popa
cmpb
or
lahf
mov
mov
mov
cmp
shlb
pop
add
fadd
jae
popa
cs
lret
mov
or
push
mov
inc
rcll
cltd
sub
addr16
push
sub
outsw
mov
insl
imul
mov
jmp
sub
ficoml
std
arpl
sahf
pusha
popa
sbb
out
mov
loopne
cltd
xchg
arpl
xlat
inc
iret
or
or
repnz
push
ds
mov
push
icebp
cmpb
popa
in
mov
xchg
mov
repnz
popa
or
in
loopne
mov
or
sub
cld
inc
inc
xlat
rcrb
popa
aad
mov
dec
push
call
adc
jbe
cs
jge
in
mov
pop
adc
push
testb
stos
mov
cmp
push
insb
or
jo
andl
xor
popa
cmc
movsb
push
mov
lods
add
popa
cmpsb
and
pop
and
popa
push
lods
pop
mov
sahf
fisttpl
out
iret
scas
xchg
xchg
ds
insl
ret
outsl
jns
mov
push
jg
inc
xchg
popa
dec
jbe
xchg
fs
jo
jmp
mov
pop
cmpsl
popa
pop
mov
sbb
jo
mov
loope
ja
sbb
lret
icebp
mov
into
fldenv
stc
adc
popa
jecxz
xchg
rcll
lahf
popa
lret
dec
aaa
adc
xor
out
jo
pop
add
das
pop
sub
clc
jns
cwtl
lahf
and
test
mov
fcmovu
ret
popa
in
push
mov
icebp
push
popa
repnz
insb
popa
xchg
outsl
add
shl
mov
fs
mov
mov
lods
or
insl
mov
popa
mov
mov
outsl
and
das
aad
xor
rcrl
popa
addl
aam
imul
push
loopne
sbb
mov
xlat
push
xchg
fucomp
insl
shlb
add
or
cmp
popa
out
outsb
lea
inc
pushf
push
popa
filds
jo
jbe
lods
adc
and
cmp
xor
loopne
dec
nop
sub
jo
popa
dec
dec
sub
popa
fmuls
shlb
push
mov
cmpsl
cmp
cmp
popa
mov
jbe
add
movsl
popa
cmpsb
and
dec
icebp
popa
lea
cmp
or
popa
add
jmp
js
xchg
push
dec
push
fisubs
out
fwait
aad
pushw
popa
inc
dec
adc
mov
iret
adc
xchg
xor
pop
jo
sub
sahf
and
sub
push
inc
popa
insl
and
inc
push
pop
pop
jg
clc
or
mov
or
lods
or
into
jo
fstl
pop
adc
repz
mov
ss
push
cmp
ficompl
outsl
adc
xor
out
cmp
out
loope
dec
pop
inc
imulb
cmpsb
icebp
mov
add
dec
inc
bound
imul
sbb
scas
add
adc
push
gs
adc
fimull
cmp
mov
dec
add
pop
cs
mov
aam
pop
int
popa
jno
or
mov
cli
mov
inc
jl
sarl
std
push
fs
dec
cmpsl
mov
or
inc
pop
shll
sarb
fimuls
call
lret
or
popa
std
sbb
test
popa
pop
ret
js
cmpsl
mov
dec
lahf
add
push
add
fsubs
popa
lods
fistpll
sbb
sbb
inc
testb
fldcw
popa
cmp
mov
das
es
popa
sub
data16
repz
aaa
lods
loope
iret
sub
js
pusha
loope
subb
inc
add
xlat
inc
fs
sub
and
nop
xchg
popa
push
sub
xchg
mov
pop
push
lret
popa
imul
popf
mov
into
add
shrb
cltd
dec
es
test
clc
lods
stc
loope
inc
fildll
popa
xchg
hlt
gs
cmp
fidivrl
mov
mov
mov
adc
mov
nop
loopne
cltd
pop
roll
data16
ja
inc
call
stc
aaa
popa
push
push
aad
fwait
std
push
ret
popa
cld
add
daa
mov
enter
repz
fbld
ret
popa
adc
or
and
push
jae
jg
imul
add
fs
in
hlt
jg
fldenv
popa
leave
pop
notb
aam
mov
cmp
mov
outsb
dec
sbb
and
test
push
stos
clc
or
push
xchg
add
enter
adc
pop
or
aad
popa
and
sub
mov
xchg
shll
icebp
pop
popa
pop
jmp
push
aam
mov
test
js
fs
push
or
ljmp
popl
add
add
cmp
rcrb
cmp
sub
jae
xor
lret
popa
or
push
xchg
popa
push
daa
inc
adc
add
popa
push
repz
adc
push
adc
jne
in
inc
mov
xor
jno
popa
les
jbe
testb
divl
lcall
and
jae
popa
mov
les
popa
pop
frndint
insb
xor
push
cmpl
icebp
loope
loop
movsl
popa
aaa
pop
pop
cmp
lds
std
mov
negb
icebp
dec
push
mov
popa
pop
xchg
or
adc
mov
xchg
mulb
sub
sbb
lock
iret
push
ret
adc
push
ds
popa
adc
arpl
popa
add
movsl
xor
popf
pushf
popf
bound
rcrb
cmp
cmp
rcrl
push
add
sub
jp
sub
in
jns,pn
mov
mov
popa
and
and
hlt
jle
cltd
add
pop
sahf
imull
ds
xor
pop
iret
bnd
lahf
bound
andb
stos
and
popa
ret
movsl
sbb
les
add
sbb
sbb
xor
and
popa
jne
push
lea
stc
mov
inc
sub
popa
xor
popa
dec
stos
push
lds
test
inc
jne
and
sub
fsubl
arpl
and
sub
loope
mov
lock
sub
xchg
cmpsl
or
dec
loope
xor
popl
push
or
add
into
out
arpl
out
or
lahf
rol
shll
jge
push
inc
popa
ret
push
jmp
dec
cmp
lods
popa
dec
scas
or
mov
pop
push
mull
fwait
popa
pop
movsl
adcb
cld
test
dec
sub
movsb
mov
das
jmp
add
cmc
sbb
fdivr
jmp
insl
pop
popa
push
inc
fsubrs
mov
jmp
mov
xchg
addr16
and
call
popa
scas
enter
sbb
xchg
popa
ja
aad
mov
push
lock
pop
insb
inc
ret
sub
test
or
dec
pmullw
subb
imul
mov
push
scas
loope
mov
push
lret
adc
sbb
fnstcw
aas
imul
cli
xchg
cltd
jne
xchg
jmp
gs
inc
mov
scas
enter
fisubs
sti
in
lahf
jge
fs
or
dec
jmp
sbb
sbb
shll
add
shlb
dec
lcall
es
pusha
mov
je
cmp
inc
je
and
push
int
xor
popa
sarb
sbb
sbb
icebp
inc
popa
nop
mov
loop
push
mov
popa
dec
lods
push
pop
inc
cld
push
adc
jle
out
arpl
pop
gs
cwtl
push
mov
pop
and
js
inc
out
push
std
push
test
adc
cmp
jbe
push
cmp
add
mov
pushw
dec
xchg
popa
mov
adc
lock
loope
ficoms
in
outsl
jle
mov
insb
sbb
popa
cs
sbb
and
and
mulb
inc
mov
test
in
dec
mov
popa
dec
cmp
test
stos
gs
es
sbb
call
add
fucom
popa
mov
xor
stc
shlb
mov
jge
mov
popa
ljmp
fsubs
vpminub
movsb
inc
mov
xlat
popa
lret
iret
cmp
cld
dec
and
sbb
mov
mov
outsb
jg
xchg
xchg
clc
jmp
popa
pop
xchg
add
bound
popa
or
sbb
popa
call
push
ret
inc
popa
rclb
bound
jae
cwtl
xlat
outsl
popa
xor
in
ret
mov
inc
popa
push
dec
insl
mov
popa
notb
es
bound
shlb
outsl
in
adc
push
xchg
lahf
mov
dec
gs
flds
popa
insb
jecxz
out
aaa
push
mov
roll
dec
mov
push
sub
gs
jge
pop
sub
push
mov
jge
cltd
adc
pop
movsb
push
jl
sbb
test
pusha
push
popa
and
ljmp
mov
ret
popa
aam
mov
xchg
sub
data16
popf
imul
leave
mov
pop
mov
into
mov
icebp
shlb
push
add
xchg
sbb
dec
inc
orb
out
mov
jae
stc
mov
inc
adc
push
xor
arpl
xorb
jmp
sub
popa
loop
enter
out
jge
bound
aaa
imul
or
and
mov
shrb
mov
ficoms
into
jmp
and
insl
loope
ja
jmp
push
bound
inc
xor
popa
scas
jnp
int3
sbb
loopne
jo
pushl
xor
inc
stos
pusha
lods
jp
faddp
lret
movsl
sbb
jle
scas
iret
cmpsb
negl
mov
xor
popf
insl
test
mov
adc
xchg
popa
rcll
jle
add
popa
push
and
ljmp
ret
popa
add
pushf
add
xor
lock
clc
inc
data16
popa
aas
test
jmp
sbb
out
daa
and
xlat
add
into
dec
ret
jns
lahf
pop
cmp
pop
popa
scas
xor
nop
sub
popa
jb
out
insl
and
popa
mov
orb
loope
es
sbb
push
sahf
int
in
and
mov
out
gs
jmp
sbb
popa
es
test
mov
push
mov
cld
xor
or
push
inc
lea
mov
popa
mov
js
repz
xchg
fiadds
loope
cmp
popf
jns
inc
cmp
stc
jecxz
inc
push
pop
add
dec
cld
popa
cs
cwtl
fwait
cmpsl
inc
dec
popa
das
int3
or
or
adc
shrb
jg
nop
and
or
add
inc
mov
pop
and
icebp
push
movsl
rcl
pop
lea
pop
bound
aad
xchg
scas
mov
pushf
movzwl
shrl
bound
fadds
push
dec
push
div
jne
pop
sub
popa
mov
in
jbe
pop
cld
gs
jb
insb
psraw
xchg
dec
lcall
jns
jp
and
adc
push
enter
mov
ret
push
jae
or
test
mov
gs
mov
cmc
push
and
xchg
and
xor
int3
sbb
popa
loopne
cmp
push
mov
mov
inc
scas
push
jo
in
mov
cli
sbbb
and
int
fwait
cmp
mov
dec
aas
popa
js
pop
aam
mov
push
data16
sbb
loope
mov
xchg
popa
leave
test
jae
lods
xchg
bound
scas
jmp
add
outsl
adc
or
xor
dec
pop
ss
fwait
call
sbb
popa
pop
orl
sub
dec
aaa
out
push
popa
std
fisttpll
cmp
les
adc
lds
or
fistl
dec
add
dec
jecxz
mov
and
les
inc
pop
xor
fldl
fisttps
into
test
sbb
sti
inc
xchg
popa
jge
dec
stc
call
jmp
imul
xchg
mov
jl
pop
hlt
sahf
popa
sbb
jo
jmp
push
xor
cmc
imul
mov
cs
adc
add
push
popa
sub
mov
fwait
push
aaa
xor
cld
or
daa
mov
inc
test
mov
bound
or
xor
rcll
mov
jle
arpl
popa
mov
pushf
sbb
sbb
mov
popl
scas
fucom
push
dec
mov
pop
jbe
cltd
stc
sahf
arpl
popa
mov
add
sbb
pop
sbb
jmp
in
sbb
jns
lret
xchg
js
mov
push
inc
rcr
test
outsl
xlat
xchg
sbbl
popa
and
rcrl
popa
testl
enter
fildl
mov
loope
rsm
jne
cli
testb
push
or
xchg
icebp
pop
and
popa
mov
dec
mov
push
data16
test
add
popa
stos
mov
ja
pop
adc
jne
pushf
sbb
popa
sbbl
sbb
xchg
inc
ret
push
sub
loope
jb
clc
test
and
loopne
popa
cmp
shlb
mov
sti
cmp
roll
xor
loope
addl
mov
popa
scas
cltd
ficomps
push
xor
lods
popa
gs
lods
nop
adc
lret
popa
loopne
je
mov
dec
xor
iret
fisubl
cmp
inc
mov
stos
dec
js
roll
fistps
jne
mov
ljmp
ret
fidivrl
stc
inc
xchg
or
or
jge
inc
adc
and
sub
loop
jmp
cmp
and
jg
and
js
lcall
aam
lea
inc
fsubl
daa
and
sub
add
repz
xchg
aad
mov
adc
xor
add
add
popf
jge
fwait
and
aas
mov
fmull
sub
shrl
clc
sub
sub
fistpll
outsl
push
sbb
jle
and
jo
fs
sub
mov
sbb
jne
popa
out
hlt
fldl
sbb
out
cld
scas
xchg
movsb
cmp
and
hlt
xchg
sbb
popa
xchg
bound
and
bound
mov
push
xor
xchg
std
xor
add
outsb
idivl
popa
aas
or
mov
xchg
shrl
jg
cli
and
loope
mov
dec
mov
insl
or
ljmp
andl
jg
and
fwait
push
cmp
es
int3
ljmp
pop
push
std
iret
sarb
adc
add
sub
pop
adcb
in
push
aam
push
pop
fs
out
sti
pop
mov
pop
ret
add
adc
and
aaa
jge
xor
in
movl
popa
pminsw
xor
mov
sbb
outsl
sahf
sub
sub
cmp
stos
lea
sub
imul
push
int3
jo
sbbb
sbb
inc
popa
mov
dec
inc
sbb
add
add
loope
imul
popa
or
xchg
cmp
fsts
scas
mov
lods
or
mov
fmuls
outsl
gs
xor
push
popa
imul
int3
mov
popa
insb
mov
fsubrs
mov
pop
mov
test
mov
outsl
xchg
jle
sub
mov
push
frstor
dec
add
mov
adc
pop
rcrl
jmp
fisubs
in
fnstenv
inc
fcoml
or
dec
adc
popa
jo
sahf
pop
add
btc
jl
popa
mov
and
and
cli
cld
inc
pop
mov
shrb
popa
pop
adc
push
shrb
push
out
movsb
add
jmp
xor
leave
inc
outsl
lret
xchg
jp
roll
fistps
ja
popa
push
rorb
mov
sbbl
gs
nop
ds
cwtl
dec
mov
sahf
loop
xchg
popa
jbe
xchg
scas
cmc
mov
repz
mov
xor
mov
fiaddl
aam
popa
cmp
pop
hlt
mov
add
popa
and
std
and
inc
dec
fs
jle
shlb
push
push
popa
sub
xor
jl
cld
movsl
or
push
js
in
mov
mov
mov
jp
sbb
jecxz
bound
gs
incl
popa
xchg
ret
mov
insl
mov
cmpsb
lock
inc
xchg
xlat
fs
xor
adc
leave
cs
aaa
dec
or
popa
and
jnp
pop
popa
lahf
fwait
adc
xchg
popa
sbb
fucomp
sub
loop
add
push
xchg
out
popa
xor
test
test
icebp
pop
push
or
mov
outsl
jecxz
daa
and
repnz
popa
int3
or
insb
popa
mov
add
dec
inc
subb
and
adc
mov
cmp
daa
in
shrl
lahf
mov
jae
mov
pop
test
lds
mov
xchg
jno
das
addl
pop
insl
out
cmc
mov
out
add
mov
or
jecxz
dec
sub
dec
mov
enter
fcmovb
popa
cltd
insl
pusha
lret
sub
stc
mov
mov
std
into
insl
popf
pop
sub
popa
sub
push
movsb
xchg
imulb
fdivrp
xor
insb
adc
out
inc
cmp
lea
popa
xor
stos
insb
popa
movsl
pop
mov
sub
stos
std
push
cmpsb
xor
mov
cmp
pop
and
jle
stos
pop
add
pop
aaa
je
fldl
inc
lahf
cmc
imul
cmpsl
jl
pop
shl
popa
jge
xchg
jecxz
test
je
ss
and
jle
movsb
mov
push
shll
arpl
out
push
adc
mov
into
xchg
loopne
popa
loop
in
xchg
mov
mov
data16
lret
cltd
mov
loope
lcall
lock
mov
push
lret
adc
jb
incl
push
dec
mov
imull
or
imul
mov
and
cs
mov
inc
shlb
popa
call
inc
bts
jl
insb
sahf
int
gs
or
insb
notl
mov
and
popa
mov
aas
xchg
in
rorb
popa
stos
lret
leave
out
shr
lcall
or
jg
lret
jp
ljmp
dec
ret
stos
repnz
inc
dec
lahf
mov
or
rcrb
and
jo
and
push
sbb
mov
sbb
push
out
dec
divl
xchg
jb
jbe
je
rcll
arpl
push
add
stos
push
mov
loope
ljmp
scas
aad
xchg
mov
jae
rcll
inc
aas
jne
mov
jmp
push
and
dec
push
sub
push
psrlw
jo
sub
loopne
ret
dec
sti
xor
add
jo
cmp
int3
ret
mov
mov
not
mov
cmc
xchg
ljmp
leave
and
outsb
test
clc
add
ss
jo
sub
loope
jge
mov
lret
add
outsb
xlat
and
push
xchg
in
mov
jbe
subl
fisttps
cmp
sub
fucomp
repz
pusha
icebp
inc
divl
and
dec
out
fwait
loope
popa
jb
cli
pop
mov
push
cmpsl
bound
sbb
dec
das
sub
dec
popa
iret
testl
sub
insb
popa
mov
push
sub
add
popa
std
jno
and
jae
mov
cs
outsl
aas
mov
fcmovnb
shlb
cli
jne
loopne
inc
popa
cmp
adc
das
or
mov
data16
addr16
jecxz
fisubs
fisubrl
lock
sub
cmpsb
jb
shrl
push
arpl
push
mov
adc
es
popa
nop
or
inc
shlb
fildll
mov
or
pop
popa
adc
push
fincstp
and
xchg
lods
std
or
dec
adc
popa
mov
push
xor
push
inc
aad
sbb
mov
mov
push
and
test
idivl
add
pop
jo
xchg
cwtl
faddl
rcrb
popa
cs
inc
sbb
dec
aaa
popa
lret
iret
insb
fwait
mov
arpl
pop
jecxz
lcall
or
es
popa
loope
test
mov
mov
dec
pop
es
or
das
movsl
cltd
imul
stos
mov
loop
xchg
fs
sub
jno
jg
enter
mov
stc
inc
pop
in
fmull
add
mov
xchg
xchg
cmp
fs
in
dec
orl
popa
les
cmpsb
mov
sbb
popa
mov
aam
jo
call
fwait
and
arpl
shr
mov
data16
dec
shll
jg
popa
test
frstor
cltd
adc
scas
outsb
mov
lcall
mov
or
das
cmp
aaa
push
jle
sub
mov
pop
arpl
mov
insb
add
aaa
shl
out
sub
bound
bound
xchg
stos
popa
lds
rsqrtps
popa
cmpsb
test
sub
sbb
cmc
popa
aam
in
sbb
gs
push
lock
shrb
mov
xlat
popa
fiadds
pushf
jns
dec
mov
or
cld
daa
stc
test
popa
inc
cmp
lret
in
jbe
leave
std
shrb
xrelease
incb
sub
bound
inc
add
mov
inc
jle
sbb
push
and
dec
out
jg
and
popa
in
fdivl
es
pop
and
lcall
notl
sbb
pop
push
cmpb
xor
cmc
rorb
or
mov
adc
fimull
jmp
cmp
and
xchg
sub
in
push
aaa
cmp
mov
fisttpl
mov
popa
sbb
push
popa
and
adc
add
std
enter
popa
insl
lret
xchg
and
sub
arpl
or
mov
xor
insl
subl
inc
arpl
inc
les
popa
and
icebp
inc
pop
pop
into
popa
shlb
add
xor
pop
cmp
test
ljmp
mull
repz
insb
push
test
popa
jmp
rorb
sub
popa
data16
adc
fistps
loope
xor
fmul
mov
out
pop
ljmp
pushf
pusha
cmp
sub
sbb
xchg
push
jmp
xchg
popa
adc
arpl
popa
test
int
sub
push
bound
or
adc
sub
pop
jge
mov
and
sub
in
shl
cmp
stc
fisubl
loopne
fdivs
sarb
popa
ljmp
popaw
nop
ret
js
jge
dec
xchg
mov
sbb
popa
call
loope
popa
mov
mov
cmp
add
mov
sub
push
aad
popa
lret
adc
and
mov
mov
jp
inc
popa
push
pop
jl
or
jecxz
fs
rcrl
gs
popa
dec
clc
and
popa
xchg
popa
xchg
daa
inc
mov
xchg
pusha
mov
inc
cltd
jb
je
frstor
adc
and
fwait
xor
outsl
ds
or
sbb
jne
popa
int
add
push
cltd
mov
push
add
sbb
popa
mov
sbb
es
call
popa
punpckhdq
or
das
aam
out
xchg
sbb
xor
push
mov
jg
gs
loope
movb
das
cwtl
popa
inc
in
test
jnp
mov
popa
adc
popa
dec
pop
ficoml
dec
push
js
push
cmp
popf
dec
lret
mov
push
hlt
mov
clc
popa
movsb
jo
and
les
push
xor
icebp
in
lea
hlt
adc
outsl
add
cmp
bound
and
ss
xchg
popa
cwtl
clc
xchg
xlat
add
mov
add
aas
sub
xchg
and
push
or
mov
push
popa
les
aas
andb
clc
hlt
sbb
push
lea
dec
test
xor
sbb
sub
clc
popa
mov
cltd
cmpsb
push
xchg
call
lcall
adc
sub
xchg
out
gs
call
les
popa
push
sbb
push
xor
movsb
mov
dec
pop
push
enter
sahf
lods
out
cmp
cmp
sti
jnp
inc
shll
fnstsw
push
pushf
dec
bound
dec
cmp
popa
and
ljmp
mov
iret
sub
push
dec
js
shll
xchg
mov
popf
fimull
lods
inc
cmp
lods
push
pop
loopne
mov
sbb
in
popa
pushf
sahf
int
cmp
mov
or
popa
movsl
andb
cwtd
test
dec
insl
adc
jns
cmp
inc
jmp
cld
mov
pop
stos
ret
adc
sahf
cmp
mov
jg
xchg
mov
push
cli
adc
popa
mov
icebp
lahf
ja
push
shlb
or
pop
stos
fstpl
push
addl
sbb
outsl
pop
xor
jg
push
pop
mov
popa
dec
xchg
mov
std
popa
int
or
and
adc
and
insb
ret
cmp
std
fbstp
jns
cmp
mov
arpl
popa
pop
lods
loopne
int3
sti
jmp
jns
inc
or
push
dec
and
add
stos
sbb
mov
ljmp
outsl
xchg
je
mov
mov
mov
mov
cmpsb
stos
loope
nop
inc
push
mov
mov
test
pop
adc
outsl
push
ss
dec
sub
mov
pusha
hlt
insl
popa
mov
adc
mov
popa
xchg
imul
inc
lds
popa
xor
cltd
ret
lret
scas
mov
sub
ficoml
popa
push
shl
arpl
adc
push
cmp
rclb
and
std
adc
insb
mov
cmp
ljmp
sarb
push
pop
data16
dec
jg
fisubs
mov
xchg
lock
and
mov
jmp
icebp
dec
sbb
mov
fs
inc
outsl
popa
pop
loopne
pop
out
jnp
push
test
jmp
jecxz
daa
popa
add
and
inc
jp
xchg
mov
inc
sub
shll
addb
push
cli
add
xchg
gs
std
dec
pop
mov
addr16
add
jnp
addl
jno
mov
cmp
xor
inc
or
pop
sub
jmp
lds
xor
stos
enter
outsl
push
add
test
addr16
outsb
jge
sar
sub
pop
sub
adc
movsl
call
sbb
inc
mov
popa
stos
stos
iret
gs
mov
popa
sbb
insl
movsb
mov
sbb
sub
mov
std
and
lahf
and
dec
xchg
or
les
jnp
xor
imul
in
mov
popa
dec
repnz
js
int
mov
xchg
popa
outsl
sub
sub
test
cmp
xor
imul
iret
popa
inc
out
rcrb
sbb
mov
jae
jb
insl
fwait
out
aas
lret
push
popa
adc
pusha
fs
fimuls
leave
cld
int3
aaa
cmp
popa
push
pop
add
add
gs
in
pop
cmc
sbb
lcall
sub
inc
aad
popa
in
dec
xlat
and
push
frstor
sub
pop
push
in
popa
pop
mov
sbb
mov
inc
lcall
mov
mov
mov
xchg
sbb
popa
rorl
push
xorb
lock
out
pop
add
mov
hlt
or
pop
ror
jo
dec
pop
in
inc
sti
cmp
lods
jo
cltd
dec
pushf
subl
popa
or
xor
add
popa
and
dec
pop
inc
sub
pop
es
inc
sub
lock
and
pop
mov
lea
fistpll
rclb
push
pop
popa
xchg
mov
es
test
xor
ja
mov
loop
test
sbb
cmp
and
push
iret
dec
xchg
ljmp
push
sahf
std
popa
lods
shl
fldl
sub
adc
adc
cmpb
out
cmp
push
insl
fsubrl
jmp
pop
add
and
sub
pusha
jg
xchg
push
dec
ljmp
lret
dec
mov
data16
mov
fwait
addr16
cmp
lret
out
jmp
sbb
popa
push
xor
packsswb
sub
xor
mov
movsb
in
mov
pop
inc
inc
outsl
xlat
fidivl
in
pop
lcall
popa
fwait
mov
into
je
in
and
popf
push
push
fwait
push
xlat
loope
xchg
adc
jg
sbb
pop
vpunpcklwd
ljmp
adc
fs
xchg
sub
xchg
mov
call
push
pop
outsb
std
sub
mov
jl
cmp
mov
push
jno
inc
mov
scas
lahf
mov
adc
pop
jae
mulb
adc
stc
popa
xchg
cld
dec
in
cmp
popa
ja
nop
push
repz
mov
mov
jle
fdivr
mov
cmp
outsl
pop
mov
push
les
sar
loopew
scas
mov
rcll
cmp
cltd
jb
lds
loop
lcall
and
push
mov
inc
ds
shlb
cmc
cmp
sub
rorb
mov
adcl
inc
insb
xor
pop
lahf
scas
pop
popa
enter
pop
mov
xchg
mov
mov
mov
js
popa
aas
push
lcall
jns
dec
popa
push
fcmovnb
mov
pop
sub
cmpb
push
test
popa
sbb
cmp
cld
cli
mov
ds
shlb
mov
stc
icebp
popa
hlt
and
lock
lcall
repz
int
xor
push
popa
addl
jle
inc
clc
mov
shrl
xlat
add
jge
hlt
jmp
loope
sub
sub
push
inc
sub
gs
mov
sub
arpl
fstl
popa
dec
inc
pop
pusha
int3
shll
fadds
mov
movsl
and
ljmp
cmp
and
je
xchg
dec
fs
std
ljmp
inc
jne
mov
push
jmp
or
pop
popa
push
cli
fwait
inc
and
rcr
int
xchg
mov
stos
push
push
stc
or
mov
sti
cli
jns
inc
xor
mov
cs
push
loope
call
sar
sub
js
push
inc
pushf
jbe
popa
sahf
test
insb
xor
enter
push
push
dec
and
push
pusha
mov
mov
xchg
rorb
aaa
in
mov
arpl
push
push
xor
test
mov
pushf
repz
sbb
stos
push
push
xor
fs
popa
add
lahf
push
lcall
repz
xor
mov
out
addr16
outsl
inc
loope
imul
or
rcrb
push
xchg
ret
bound
int3
lahf
repnz
insl
pop
mov
sbb
sub
inc
xchg
push
dec
popa
pop
cmc
mov
out
popa
icebp
or
xor
mov
sub
push
in
sub
xchg
ret
fcmovnu
jo
add
inc
add
cltd
shrl
dec
nop
jge
mov
sar
pop
ret
std
gs
dec
popa
mov
xchg
enter
test
iret
mov
popa
sbb
sub
cld
sbb
mov
xchg
popa
xlat
lods
cltd
mov
add
lods
popa
mov
dec
popa
popf
adc
mov
push
dec
pop
or
xchg
loopne
popa
ds
sti
adc
and
outsl
xchg
xor
imul
cmp
or
sub
sub
dec
push
into
popa
ja
inc
sarl
inc
popa
out
mul
insl
in
push
mov
jg
dec
mov
popa
das
cmp
dec
mov
lahf
shll
shlb
push
inc
xor
mov
push
and
rorb
fwait
rcr
popl
inc
outsb
aad
arpl
dec
inc
lret
mov
jnp
in
pop
mov
cld
push
or
popa
push
mov
shll
ret
imul
jo
insl
mov
mov
loop
loopne
test
jno
xchg
mov
test
imul
cmp
test
jnp
popa
cwtl
rol
into
or
push
popa
pop
ss
rclb
popa
xor
jge
addr16
int
push
lea
mov
pushf
int3
cmpsb
jp
popa
mull
mov
xchg
add
fldenv
lds
sti
arpl
inc
popa
dec
and
aas
popa
adc
sbb
and
inc
enter
or
iret
jecxz
popa
out
loop
push
and
adc
hlt
cmp
aad
popa
lds
pop
xor
pop
lcall
arpl
leave
xchg
push
popa
add
jl
shrb
inc
lret
dec
cmp
jae
lods
jle
cmp
and
xor
popa
sahf
mov
cmovbe
sub
insl
enter
mov
popa
push
jecxz
adc
mov
jne
in
jmp
shlb
gs
lahf
ret
into
add
cwtl
xchg
lds
dec
jecxz
rcll
pop
xchg
push
cmp
push
sub
mov
js
jb
sbb
mov
fnstsw
mov
fs
in
sbb
sub
mov
jo
jle
add
mov
stos
jmp
das
jl
idivb
xchg
cld
cmp
dec
enter
and
fwait
iret
sahf
ja
cmp
popa
in
cltd
clc
cmp
stos
sarb
ss
ret
mov
popl
push
cltd
out
cmpsl
lds
stos
popa
mov
dec
jge
popa
negb
stos
push
psraw
mov
add
xchg
test
add
cmp
insl
and
mov
jmp
in
fmull
jae
popa
cld
popf
scas
jmp
test
jecxz
xorb
enter
sub
cmp
popa
jp
or
sarl
in
test
push
std
popa
xchg
cmpsl
ja
cmp
jg
js
bound
js
mov
popa
inc
icebp
sarl
or
fnsave
sub
incb
loopne
mov
jo
popa
xor
fnsetpm(287
push
arpl
iret
das
jbe
cmp
popa
test
cmp
lods
int
pop
lock
aas
mov
mov
lret
aas
jle
test
out
xchg
and
cld
test
adc
mov
addr16
xchg
cmp
fs
rcll
push
xchg
push
les
dec
ja
popa
dec
scas
clc
dec
cmp
sbb
popa
rcr
je
lcall
dec
sbb
into
dec
bound
dec
adc
xchg
xor
mov
bound
lret
and
shr
repz
push
addr16
leave
je
jle
nopl
call
and
test
scas
ja
xchg
nop
and
in
mov
outsl
std
push
daa
stos
jp
mov
sahf
and
gs
outsl
fsub
lcall
jae
sub
and
mov
scas
dec
jne
lods
push
mov
mov
jp
andl
leave
jp
loop
popa
out
loope
mov
fdivr
add
iret
mov
push
xor
in
rcll
icebp
or
xor
xchg
jbe
in
in
stos
fwait
push
push
fstps
lret
jnp
icebp
sbb
jge
add
adc
daa
outsl
jne
and
mov
sbb
pop
je
in
mov
ljmp
out
mov
loope
xor
ljmp
fistpll
inc
inc
mov
outsb
out
and
fisttpl
inc
push
inc
mov
in
pop
addr16
jmp
mov
icebp
iret
in
push
lods
sarb
cmp
xlat
icebp
xchg
sbb
dec
std
mov
mov
xor
push
out
adc
in
mov
dec
adc
sub
jge
imul
test
sbb
les
int
mov
out
arpl
jne
cmp
loop
sbb
hlt
loopne
mov
js
pop
jp
xchg
push
jmp
in
lcall
push
or
and
call
add
lods
std
and
push
adc
leave
push
insl
dec
mov
add
mov
rorl
dec
sub
xor
ficomps
jbe
sbb
mov
adc
and
sti
in
popa
pop
cli
movsl
or
bound
sahf
ss
out
popa
push
mov
nop
lahf
popa
ret
scas
dec
gs
pop
jle
dec
aad
movsl
mov
imul
sbb
mov
scas
lea
pop
mov
popa
in
mov
mov
lods
mov
out
adc
arpl
dec
inc
cmc
lock
push
jns
inc
test
js
mov
adc
xor
popa
sbb
je
popa
or
adc
mov
jle
sti
xor
dec
jg
jo
mov
dec
jbe
fildl
pop
mov
or
inc
fcmovu
fisttpll
xchg
dec
add
push
jp
sbb
lods
and
stos
adc
push
mov
inc
mov
sub
lock
fs
test
imul
shll
pop
push
test
int
lret
subl
sbb
inc
lcall
out
and
push
jnp
ret
cmp
repnz
mov
push
fisubl
sbb
xlat
call
repz
lods
mov
mov
lods
mov
sbb
cltd
pop
push
bound
cmp
test
icebp
xor
aas
popa
dec
pop
stc
inc
scas
dec
fiaddl
push
dec
popa
dec
adc
shrl
stos
popa
jb
fcoml
std
push
mov
dec
inc
out
icebp
xor
rcll
jo
bound
popa
mov
data16
fwait
push
scas
loope
outsl
subb
sbb
jecxz
lret
sub
and
outsl
mov
out
and
repnz
inc
sbb
dec
popa
aas
insl
leave
cmp
inc
retw
stos
xlat
jge
or
lret
jmp
mov
mov
and
mov
loope
mov
rorb
inc
lods
push
fucomp
popa
mov
push
sti
xchg
imul
push
add
sbb
dec
popa
arpl
push
stos
repnz
imul
xor
mov
ficoml
nop
cmp
arpl
pop
pop
inc
fisubs
jmp
push
xchg
popa
in
stos
mov
fs
in
xor
pop
aam
sub
shlb
xchg
inc
pusha
adc
adc
jne
cmpsb
repnz
push
popa
mov
rolb
popa
cmp
xchg
ret
shll
inc
out
enter
push
je
sbb
mov
js
pushf
je
insl
daa
add
xchg
or
xor
popa
hlt
subb
and
push
jecxz
dec
mov
xchg
lods
and
fildll
mov
out
jae
xor
lcall
jb
aad
jo
or
inc
gs
lock
jmp
cli
pop
loope
push
and
add
xchg
icebp
popa
jbe
outsb
mov
clc
loope
add
pop
insb
enter
dec
sbb
sub
mov
bound
and
int
and
out
push
ret
inc
mov
dec
scas
sub
shrb
leave
insb
push
jge
ret
in
mov
or
es
jae
call
cmc
sbb
mov
mov
imul
mov
shll
movsl
stos
gs
push
dec
cmp
testl
jmp
pop
call
bswap
arpl
mov
sahf
fistpl
pop
cmp
ror
imul
or
cltd
mov
divb
xor
push
jle
xlat
pop
and
xor
or
scas
mov
or
push
adc
mov
in
and
aad
sbb
mov
bound
rcrl
jecxz
mov
loop
outsl
rclb
or
cs
lahf
and
adc
in
fst
dec
adc
sbb
cltd
mov
mov
xchg
and
in
sub
mov
pop
ds
mov
and
mov
out
pop
mov
rcrl
leave
push
icebp
and
or
loop
dec
cltd
mov
add
cmp
xchg
aaa
xchg
push
jge
pop
mov
loope
xchg
xor
or
or
push
dec
jg
shll
repz
rol
sbb
mulb
ja
sti
and
out
mov
pushw
mov
sub
ja
lds
std
inc
orl
mov
mov
push
adc
loop
push
loope
lret
push
cmp
loop
dec
add
and
leave
fdivl
or
pop
fwait
xor
in
pop
mov
mov
xchg
orb
and
leave
int
sbb
xchg
dec
cmpsb
mov
or
imul
icebp
neg
fadd
dec
xchg
sbb
mov
jb
pop
xchg
pop
add
inc
stc
cmp
sar
std
dec
pushf
sbb
bound
insl
out
lea
mov
cli
cld
dec
dec
pop
divl
mov
ret
ljmp
dec
clc
je
stc
imulb
std
jg
lock
sti
in
stos
add
out
cltd
jle
into
jecxz
push
jns
mov
repz
leave
sub
adc
adc
mov
pop
mov
mov
xchg
call
fbstp
mov
mov
lret
addl
lret
shlb
leave
imul
push
sub
mull
fstpl
out
lcall
jo
aam
add
es
add
mov
xchg
test
pslld
flds
dec
cltd
sbb
inc
xchg
mov
mov
loop
popa
dec
or
xchg
clc
xchg
fidivrl
cmc
mov
jae
in
popa
add
xchg
inc
xor
les
jge
push
jo
mov
jmp
cmp
push
sub
mov
cmp
sar
test
jle
test
sub
std
mov
adcl
xor
jmp
andl
shl
xchg
add
mov
mov
orl
dec
mov
ljmp
or
scas
mov
jns
sub
insb
fnstsw
dec
or
notb
and
push
jge
adc
cmp
loop
sbb
mov
push
popa
lret
adc
pop
rorb
xchg
pop
cmpb
or
inc
leave
popa
cwtl
inc
add
mov
pop
shr
outsb
lock
and
push
mov
popa
outsl
mov
lds
popa
mov
xchg
jne
add
jae
jbe
push
push
jns
mov
daa
bound
xchg
and
jecxz
int
lcall
notl
xor
popa
mov
pop
add
sbb
pop
mov
orb
gs
inc
sti
and
cmp
jge
scas
scas
and
popaw
rcrb
sbb
xor
loope
lea
adcb
sub
inc
pop
popa
popf
mov
int
inc
insl
sub
popa
xchg
fmuls
mov
popf
xchg
ffreep
call
dec
es
sub
xchg
jg
in
fnstenv
dec
add
inc
inc
pop
popa
dec
scas
xor
outsl
and
add
inc
xor
mov
rcll
sub
or
sbb
scas
sub
sub
popa
xor
negb
lcall
sub
je
popa
mov
insb
cmp
in
fldcw
mov
cmp
fs
xchg
mov
sbb
out
insl
sarl
movsb
das
or
ss
xorl
sarl
xchg
inc
lods
push
mov
jo
xor
sbb
aam
push
dec
fldt
adc
push
js,pn
popa
lret
dec
or
mov
popa
add
rclb
jae
xchg
popa
cmp
push
inc
jne
lret
popa
arpl
orl
jb
daa
xor
adcb
imul
mov
fildl
in
aad
shrl
lret
dec
clc
xor
jo
sub
enter
rorb
jmp
mov
and
mov
popf
sub
loopne
jle
es
and
inc
add
mov
mov
inc
mov
popa
arpl
push
push
inc
xchg
in
adcl
lock
rep
jge
mov
sbb
aad
xor
pop
cmp
jge
cmp
icebp
jle
mov
fwait
popa
sahf
sbb
hlt
xor
rorb
jmp
aad
dec
jno
push
sar
inc
xor
push
lcall
sar
push
sub
inc
ret
popa
out
dec
or
popa
mov
jns
loop
cs
add
jno
pop
and
imull
loopne
popa
and
xchg
hlt
adc
pop
int
stos
sbb
test
mov
fbld
mov
cwtl
and
shr
or
subb
popa
push
adcl
push
push
popa
out
dec
mov
add
jp
idivl
ret
insb
bound
clc
rcll
jnp
repnz
lea
in
jne
xchg
ljmp
loopne
xchg
jae
aad
ljmp
xor
pop
bound
mov
lods
sbb
popa
mov
push
rolb
sub
shlb
jns
outsb
xor
lahf
adc
cld
call
sahf
xchg
push
insb
loope
leave
mov
xor
sub
lret
ret
lods
int
jl
cmp
xor
push
sub
lret
dec
dec
daa
outsb
dec
ret
xchg
xchg
aad
jo
pop
add
ss
xchg
push
push
and
mov
dec
sub
and
movsl
es
ror
jbe
stos
cmp
sub
jb
and
jnp
mov
push
jns
lods
leave
pop
dec
cs
call
leave
push
mov
or
xchg
insb
mov
jle
adc
mov
daa
popa
mov
xchg
mov
lods
loope
adc
pop
dec
jle
outsb
int3
shll
cwtl
mov
outsl
xor
cltd
push
lcall
popa
dec
decl
mov
push
aad
mov
sub
adc
ss
popa
repnz
lahf
rorl
jo
cltd
popa
ja
inc
outsb
adc
ss
pop
imul
add
or
sbb
add
popa
adc
stos
mov
repz
popa
push
push
or
in
js
imull
sbb
lds
or
and
popa
movsb
mov
into
popa
fs
dec
pop
movsl
ss
or
fisubrs
inc
mov
jle
mov
shlb
lret
mov
cmp
sub
jb
popa
nop
rcrb
das
jle
fcmove
loope
mov
fs
inc
xor
mov
bound
out
inc
adc
iret
cmp
popa
mov
stc
mov
test
xlat
cmc
and
push
sub
or
mov
sbb
out
rorb
test
push
cld
xor
dec
lods
adc
push
and
test
sbb
pop
stos
push
xor
out
js
cmp
push
or
pop
add
cmc
or
cld
sbb
mov
jle
imul
pop
out
insb
inc
sbb
add
cmp
aaa
push
std
leave
jno
add
jo
testl
popa
sub
inc
mov
std
fwait
pushf
fs
loope
pop
dec
push
rol
lock
int
hlt
xchg
mull
jg
outsb
or
pop
movsb
int3
jmp
daa
es
lret
subl
dec
decl
test
popa
xor
or
in
inc
dec
mov
xchg
pop
inc
mov
in
push
in
mov
popa
jg
pop
stos
repz
aad
lods
rolb
dec
imul
jle
pop
lds
jmp
dec
std
sahf
push
inc
popf
and
mov
push
xchg
outsl
popa
jmp
adc
popa
pop
outsl
aaa
xlat
shr
sahf
cmpsb
popa
adc
sbb
les
push
aad
dec
aaa
popa
jmp
inc
mov
popa
in
adc
mov
imul
add
add
test
popa
loop
lret
add
jg
jbe
lahf
rorb
xchg
scas
cmp
jno
into
add
fs
mov
pop
out
arpl
les
popa
mov
xor
aaa
dec
and
insb
lods
shll
sti
or
data16
orl
icebp
dec
sbb
mov
leave
mov
popa
out
push
ss
sub
xor
in
stos
push
jg
push
pushl
sub
pusha
jb
lods
cmp
popa
xchg
call
adc
push
divb
dec
inc
cli
test
fsubs
xchg
stc
dec
popa
mov
ljmp
imul
cmp
mov
sub
fldl
fs
push
mov
dec
vpshld
jo
push
enter
inc
stos
mov
test
loope
incb
sbb
popa
repnz
xchg
call
pop
popf
aad
rcr
fs
push
xchg
mov
rclb
or
push
arpl
mov
pop
xor
jnp
pop
xor
cmp
mov
popa
dec
sub
adc
je
push
popa
ret
jb
shlb
popa
int3
shl
out
push
and
xlat
adc
test
jle
movsl
test
cwtl
or
loope
repnz
popa
inc
adcl
rcll
fwait
cmpsb
lods
pop
sbb
cmc
add
call
sub
frstor
rcrl
sbb
lahf
cli
inc
sbb
pop
xor
pushf
hlt
dec
loopne
inc
xor
enter
adc
mov
je
mov
mov
jmp
cld
and
popa
out
sub
jo
call
cmpsl
rolb
adc
sbb
movsb
or
mov
loope
dec
clc
rcll
pop
es
add
lahf
ret
leave
sbb
push
mov
pusha
int
mov
jmp
popa
fisubrs
sti
js
add
daa
popa
rorl
mov
popa
repnz
int
push
xor
ret
stos
jle
pop
pop
popa
cmpsb
xchg
aam
pop
fwait
in
hlt
push
ja
jbe
cmp
popa
dec
mov
stc
fcomps
mov
pop
popa
fidivrs
add
mov
loop
add
xor
inc
gs
loopne
nop
dec
push
and
data16
add
mov
or
jb
outsl
xor
sbb
movsbl
mov
jecxz
sub
pop
loopne
loop
mov
and
xchg
cwtl
bound
shr
inc
xor
das
in
mov
inc
xchg
mov
shll
data16
das
es
and
lods
popa
add
push
cmpsl
mov
jg
pop
nop
push
and
jmp
loope
jno
pop
xchg
jnp
sub
xchg
sti
push
ja
addr16
fisubl
ror
inc
popa
je
xor
cld
xchg
loopne
arpl
rdtsc
jp
and
loope
clc
add
and
popa
iret
sbb
stmxcsr
cmp
push
insb
iret
popa
inc
fsubs
adc
call
sbb
and
popa
or
jbe
jno
cld
popa
out
outsb
lock
sbb
loop
fldl
push
mov
popa
cmp
cmp
data16
lds
loope
xor
fs
jns
jg
or
adc
test
mov
mov
sub
mov
mov
popa
dec
loope
xor
lds
mov
push
das
arpl
fadd
flds
mov
pop
sub
insb
fisubs
popa
inc
iret
test
mov
pushf
lds
xlat
andb
mov
jns
adc
push
jecxz
jb
pop
xor
jo
sahf
int3
js
in
fstps
push
pop
repz
and
cmp
pop
leave
jns
mov
out
cmpsb
sub
pop
punpcklwd
mov
popa
jne
into
xchg
jp
fs
test
outsl
mov
add
imul
add
dec
xor
ficoms
adc
jb
and
mov
jbe
adc
sahf
sub
sbb
pushf
mov
pop
add
or
mov
mov
stc
lret
pop
popa
sub
cld
jecxz
xchg
and
popa
cmp
mov
popf
popa
test
aad
aad
js
test
dec
adc
push
jns
jle
addb
and
xor
adc
push
imul
sub
sbb
mov
xchg
xchg
lods
fistpl
dec
test
mov
bound
sub
cltd
sub
outsl
add
pop
inc
mov
xor
adc
xor
es
mov
test
mov
pushf
adcl
and
push
sbb
decb
mov
sti
subl
sbb
lret
clc
mov
popa
and
mov
and
out
add
movsl
call
cmp
xchg
movsb
push
adc
scas
addb
push
mov
bound
fisttpll
dec
scas
inc
popa
push
mov
jne
pop
popa
call
adc
push
loopne
dec
jno
xchg
sub
or
std
and
jae
fdivrs
xchg
xchg
sub
mov
sbb
popa
inc
push
leave
scas
stos
out
test
arpl
sbb
cltd
icebp
push
mov
popa
std
inc
xor
popa
cmpsl
xchg
xchg
adc
hlt
popa
jp
pop
jecxz
test
push
sub
xor
xchg
cmp
cwtl
dec
xchg
mov
std
shrl
and
or
into
push
mov
mov
mov
lret
aaa
sbb
lret
sarl
push
icebp
pop
in
pop
push
std
in
rolb
xchg
mov
dec
pop
or
or
xor
xchg
push
bound
mov
lods
stc
cmpsb
in
jnp
mov
fsubrs
ror
sti
mov
cmp
cmp
xchg
dec
stos
lahf
in
es
divl
sbb
test
leave
ja
cmpsl
fistps
add
popf
cmp
imul
mov
cmc
gs
imul
clc
cmpl
jbe
je
cmc
push
les
rorl
xorl
leave
mov
jmp
jge
mov
or
loopne
pop
in
sub
pushf
loopne
pop
dec
clc
mov
clc
jb
pushf
out
ljmp
popa
lods
dec
fsubrp
pop
pusha
pop
pop
popa
outsb
xor
repnz
push
in
loope
outsl
and
shr
addb
cmp
jge
add
repz
and
test
mov
rcll
sbb
dec
loopne
mov
push
int
jbe
mov
sub
push
push
cltd
sbb
iret
cmpb
fwait
mov
add
xbegin
popf
dec
inc
mov
sbb
stc
sub
addl
adc
pop
cmp
cli
mov
pop
popf
ret
ljmp
dec
fstl
sub
enter
dec
jl
pop
mov
and
fwait
leave
bound
xchg
repz
adc
jno
test
out
sub
xchg
ja
inc
xchg
xchg
gs
je
jmp
sbb
cmc
lods
jmp
ds
aaa
icebp
ljmp
in
loope
jno
mov
lahf
or
popa
push
dec
lret
mov
into
inc
popa
imul
stos
xlat
pop
stc
xchg
mov
scas
fildll
sahf
push
test
loope,pn
lret
cmp
cltd
xchg
loope
or
pop
and
xor
mov
enter
jne
loopne
popa
xlat
cmp
pop
sub
fdiv
daa
in
into
fisubs
inc
sbb
int
ret
mov
cmp
in
push
loope
mov
popa
in
push
sbbl
into
ljmp
fbld
jecxz
das
or
xor
gs
bound
in
push
or
pop
popa
iret
enter
imul
push
mov
je,pt
push
incl
push
imul
sbb
ja
mov
cs
inc
add
jae
in
inc
push
int3
test
xchg
pop
stc
rcll
int
popa
lahf
add
sub
divb
pop
arpl
add
push
arpl
mov
ds
imul
test
sbb
jle
repz
jbe
popa
adc
xchg
loop
jle
or
and
dec
cmc
fdivrl
lock
dec
stos
sub
faddp
or
push
pushf
popa
dec
adc
xchg
and
xor
mov
ljmp
lret
dec
mov
pushf
xor
addb
inc
icebp
insb
mov
push
jmp
bound
xor
dec
mov
lcall
sti
into
ret
sbb
test
clc
inc
andl
sub
dec
cld
fcmovnu
push
insb
mov
xchg
stos
in
aam
xor
mov
gs
xchg
and
cli
lods
jbe
dec
outsl
pop
inc
popa
into
add
and
cmpsl
dec
mov
mov
pop
ljmp
hlt
lret
xchg
push
mov
pop
popa
in
fdivrp
jbe
int
loopne
cmpb
in
popa
push
push
jne
pusha
jl
add
es
push
sbb
mov
shll
jge
scas
out
mov
dec
push
sbb
mov
lea
xor
xor
pushf
fiaddl
adc
popa
add
dec
nop
cltd
and
inc
outsl
jmp
lret
divb
jb
mov
jp
loopne
cli
filds
pusha
and
mov
mov
cmc
sub
pop
push
mov
test
xchg
loope
cmp
cmp
sub
xchg
jno
mov
push
inc
pushf
push
hlt
add
shll
and
xchg
mov
sbbl
mov
push
fisubl
popa
lds
loope
rcrl
je
cmp
insb
xlat
mov
inc
popa
mov
cmpsl
imulb
push
sarl
hlt
loop
fildll
pop
bound
popf
cmp
cs
pop
add
mov
and
pop
out
xor
jno
bound
sub
mov
push
loop
mov
or
sbb
sub
sub
cmp
stos
pop
movb
popa
jb
push
or
adc
cmp
push
jns
stos
shrl
dec
pop
jnp
in
mov
out
popa
clc
sub
add
mov
cld
pop
int3
pop
xchg
fdivrl
jmp
outsb
popa
pop
xchg
pop
popa
or
mov
jmp
loop
mov
js
cmpsl
popa
rolb
pushf
popa
mov
lds
popa
xor
push
jg
adc
in
fnclex
xor
scas
and
pop
jno
sbb
mov
or
bound
movsb
loope
jae
insb
push
insl
cltd
lcall
lods
fistps
pop
mov
popa
mov
cmc
stos
pop
popa
pop
or
scas
mov
sbb
sub
lods
mov
or
sub
les
add
cmp
into
adc
cli
fs
ficomps
cwtl
fsubs
mov
popa
pop
push
ret
insb
push
xchg
outsb
lcall
out
and
ficoml
movsb
inc
addb
ret
pop
inc
ret
data16
sbb
dec
sub
xor
mov
in
imul
mov
shrb
idivb
sbb
sbb
daa
movl
popa
pop
sub
mov
mov
cmpsb
cli
and
push
jecxz
jge
icebp
popa
out
cmp
inc
loop
inc
jne
jmp
popa
dec
daa
add
es
push
inc
ffreep
push
into
popa
push
fidivrl
mov
fidivs
inc
popa
jno
jnp
sub
add
sub
inc
cli
jg
aam
mov
repz
fildll
mov
push
xchg
popa
popf
std
pop
mov
aas
popa
lcall
fdivr
lahf
ja
into
jne
xor
mov
adc
fdiv
int
popf
push
pop
xor
mov
andb
pop
cld
mov
lods
movsb
popa
jmp
cmp
pop
scas
adc
add
aad
mov
add
popa
or
fisttpl
cmp
sbb
lods
lahf
and
push
popa
clc
data16
xchg
jecxz
mull
fistpl
lods
popa
mov
lret
popa
loopne
sbb
inc
std
sbb
lcall
xchg
xchg
mov
pop
aaa
mov
popa
lret
or
push
outsl
lret
cmpsl
call
js
jnp
xor
inc
insb
pop
shl
cmp
fsubr
mov
popa
mov
repnz
add
inc
popa
jp
mov
adc
pop
fs
add
or
popa
jb
dec
movsb
mov
xor
adcl
dec
fbld
fnstenv
fs
nop
addr16
mov
dec
or
cmc
xchg
pop
lods
xor
scas
call
outsl
push
adc
mov
fldenv
xor
push
mov
mov
xchg
push
pop
mov
loope
popa
add
pop
aad
inc
fsubrl
test
dec
inc
adc
clc
push
repnz
pop
repz
and
es
or
jle
ret
fmull
ja
popa
cmp
xchg
pusha
jae
pop
cmp
lods
pop
sub
popa
xor
popa
js
ret
inc
mov
xchg
lret
out
sub
aad
cmpsl
lock
loope
fdivr
popa
leave
xchg
mov
add
fists
lods
push
mov
popa
mov
xchg
mov
fwait
sbb
sub
shll
pop
sbb
popa
cmp
mov
shrl
ss
mov
jae,pn
punpckhdq
loopne
sahf
dec
mov
mull
in
adcb
push
jbe
push
fs
mov
pop
lea
adc
sbb
shll
jae
cmp
movsl
shl
data16
mov
pop
and
cwtl
cmp
cmpsl
out
adc
pop
inc
and
mov
pop
aam
fisttps
loope
jp
bound
or
cmp
fs
adc
jae
sbb
adcl
jne
jg
and
ffree
imul
mov
xchg
shlb
enter
filds
xchg
popa
mov
inc
divb
push
fadd
dec
mov
pushf
cli
mov
xor
test
push
add
fs
popa
sub
mov
lahf
or
popa
aam
xor
inc
xchg
jge
mov
jne
and
push
mov
nop
xor
enter
and
push
das
in
popa
and
cmp
cmc
pushf
jg
bound
xchg
jmp
xchg
mov
bound
das
es
mov
and
lahf
add
adc
lock
rolb
sarl
dec
out
loope
mov
push
xor
push
jne
mov
push
fstpt
aas
bound
sbb
mov
in
shll
popa
cmpsl
or
enter
ret
subb
adc
inc
xor
stc
popa
addb
lea
in
mov
pop
popa
adc
int
fnsave
fyl2x
add
out
push
cmp
and
cwtl
lds
and
xchg
cmp
fldcw
and
popa
imul
out
cwtl
insb
mov
mov
ja
jmp
push
popa
lods
int
xchg
mov
test
sbb
pop
loopne
sub
pop
adc
js
mov
jmp
lock
inc
stos
xchg
pop
sbb
sub
pop
adc
jmp
push
mov
xor
insb
dec
ffreep
sbb
shlb
mov
leavew
aad
sti
sub
xor
adc
cmp
sbb
js
jmp
dec
repnz
and
and
dec
adc
mov
jecxz
sub
outsb
test
in
pop
inc
repz
loop
insl
movsl
and
loop
scas
push
fstpt
dec
pop
out
insl
mov
mov
jle
sbb
mov
xor
push
popa
add
pop
sub
loope
cmp
push
insb
out
das
not
fsub
xchg
or
pop
loop
xchg
mov
fistpl
fsubs
in
sub
or
sbb
aas
cmpb
and
inc
cltd
dec
sbb
das
dec
aaa
xchg
psubsw
call
xor
mov
ret
pop
iret
jle
ja
pusha
cmp
lcall
imul
add
mov
cli
les
jg
mov
pop
push
mov
std
iret
insl
inc
shr
addl
arpl
inc
cmpsb
inc
or
push
cmpsl
mov
pop
stos
and
adc
movsl
mov
bound
andb
cmpsl
lods
js
rcl
in
mov
sbb
xchg
mov
loopne
lea
add
xchg
push
sbb
sbb
jae
and
jns
cltd
dec
loope
fmull
inc
outsb
mov
pop
jns
xor
push
insb
pop
scas
iret
push
jge
xchg
cmp
inc
in
fidivl
mov
cmp
shrl
mov
scas
out
cmp
jno
add
xchg
mov
adc
data16
jecxz
jne
repz
mov
imul
pop
popa
xchg
test
leave
divl
out
pusha
xchg
popf
xchg
and
jnp
stc
stos
lds
gs
cmc
fs
fistpll
jo
and
outsl
push
mov
andb
jecxz
and
icebp
test
xor
mov
inc
sub
push
cmp
cli
and
scas
jno
xchg
push
imul
adc
movsl
push
pop
add
dec
repnz
lods
scas
test
sarl
out
rcrl
jle
mov
sti
and
sub
int3
mov
test
imul
cli
sub
lds
mov
or
stos
add
popa
mov
mov
cmp
popf
out
pop
aaa
sarb
jle
jmp
arpl
repz
pop
jp
pop
lea
and
inc
popa
arpl
adc
pop
jle
fisttpll
mov
cmp
mov
or
popa
xchg
push
adcl
stc
hlt
bound
xchg
add
js
jo
popa
out
popf
in
pop
xchg
popa
mov
out
dec
xchg
enter
mov
repz
outsl
in
icebp
stos
and
popa
cmc
xor
push
ret
pop
popa
daa
mov
mov
popa
push
cltd
inc
mull
mov
pop
popf
ljmp
hlt
into
mov
iret
inc
scas
test
lea
cltd
call
xchg
sbbb
out
popa
in
sbb
push
push
es
popf
roll
pop
cli
out
adc
ja
insb
dec
arpl
xchg
pop
xorl
cmp
sti
int
and
dec
bound
adc
mov
loopne
jo
shrb
adc
push
jo
mov
xor
sti
repz
lods
in
stos
in
lret
lret
adc
test
xchg
xchg
arpl
subl
jae
scas
lret
cmp
and
push
lock
sbb
sub
push
popa
leave
cmp
xchg
rcr
mov
add
adc
mov
subl
icebp
leave
inc
jp
inc
sbb
mov
es
ficoms
mov
xchg
jp
mov
cmpl
fwait
xor
rolb
in
dec
jnp
xchg
mov
mov
mov
mov
in
shrb
enter
push
adc
jb
sub
mov
add
popa
mov
adc
mov
addr16
sahf
imul
roll
popa
jno
stos
icebp
test
cmpsb
cmp
out
xchg
inc
daa
mov
push
sar
lret
sub
in
pop
movntps
dec
jnp
dec
add
popa
hlt
cwtl
dec
bound
ret
mov
lds
scas
push
bound
cmp
inc
jg
or
add
sub
sbb
inc
mov
stos
fs
je
fdiv
and
insl
jl
popa
cmp
dec
xchg
and
sbb
popa
jae
cmp
addb
fld
leave
mov
and
ret
popa
dec
jg
lahf
mov
pop
jo
aaa
or
adc
mov
mov
push
lods
insl
icebp
sbb
ss
lock
mov
scas
popa
js
sub
inc
sarl
jno
mov
je
js
rcrb
mov
lret
jp
sarb
test
popa
or
subb
mov
popa
push
and
inc
pop
push
addb
cwtl
popa
and
mov
fwait
ret
nop
cmp
adc
divb
lea
ret
adc
mov
repz
jg
test
into
popa
lahf
xchg
sub
lcall
jne
pop
loopne
jecxz
dec
ljmp
pushf
xchg
popa
dec
push
xor
xlat
sub
mov
and
inc
pop
xor
imul
loop
xlat
data16
popa
and
int3
outsl
dec
ja
popa
mov
adc
mov
dec
frstor
icebp
push
pushl
or
popf
xchg
mov
xor
insl
mov
mov
dec
pushf
mov
fs
dec
jmp
mov
stos
je
jge
addb
unpcklps
mov
rcrl
push
lcall
sub
insb
jnp
mov
popa
jne
js
lcall
dec
lahf
xchg
ret
xor
mov
popa
mov
loop
shll
stc
jl
out
push
test
mov
push
push
push
neg
sbb
sti
rol
inc
insb
shll
bound
mov
dec
or
loop
cmp
es
rep
pop
xchg
cli
sbb
std
inc
call
rorl
mov
cmc
out
cld
push
and
cmp
cli
and
andl
sbb
es
shl
popa
xchg
sub
fsubs
pop
fbstp
sbb
jge
cmp
cwtl
adc
xor
dec
lea
or
and
movsb
lods
pop
mov
sub
sar
loopne
popa
aaa
adc
fists
aam
push
outsl
lock
or
pop
or
xchg
popa
sahf
addb
adc
push
and
adc
fcoml
cmpsl
je
mov
dec
popa
call
insb
xchg
dec
jb
popa
inc
cld
out
in
imul
ja
mov
jg
popa
add
stos
sbb
xchg
xor
add
dec
push
xchg
xor
popa
inc
cltd
test
mov
bound
mov
xchg
adc
cmp
das
add
adc
popa
cmp
mov
clc
jae
pop
xchg
rclb
rol
hlt
popa
fnstsw
arpl
jg
ja
fs
jmp
ret
je
call
cltd
mov
lods
iret
xor
mov
roll
push
loopne
cmp
and
and
lds
bnd
dec
gs
push
js
dec
xchg
sbb
inc
fdivl
mov
push
xor
mov
pop
subb
ja
jns
add
or
popa
or
outsl
sbb
popa
sbb
ret
fstpt
pop
pop
gs
test
sub
loope
jg
pop
repz
or
mov
popa
fsubl
lods
xor
xchg
popa
mov
jnp
or
xchg
xchg
out
sub
gs
stc
jg
mov
pop
mov
iret
sbb
dec
testl
adc
pop
pop
cld
mov
inc
push
add
add
cmp
dec
into
mov
pop
addr16
inc
arpl
xor
fs
sub
xor
cmp
popa
add
fcoms
xchg
push
popa
jmp
mov
mov
pop
popa
stc
push
ds
pop
imul
cmp
inc
loop
rcrl
xor
idivb
xor
mov
inc
lahf
ret
and
cmp
adc
popa
xchg
add
gs
jle
rcrl
add
outsl
mov
mov
adc
js
movsb
insb
push
int
xchg
jp
arpl
jbe
int3
jmp
cmp
jge
mov
test
push
xor
out
adc
lods
mov
and
ja
loop
xor
jno
xor
jge
scas
iret
and
movsb
jmp
cmp
cld
xchg
dec
and
dec
or
das
into
js
fistps
popa
jl
pop
push
add
out
inc
adc
jle
lahf
pop
adc
adc
or
cld
pop
sarl
popaw
push
inc
sub
sub
xchg
inc
mov
pop
lods
pop
adcl
les
popa
sbb
ljmp
dec
inc
test
or
cmpsl
je
ret
add
xor
cmp
and
cmp
xchg
pusha
sub
int
mov
xor
adc
mov
xor
insb
les
sbb
sub
dec
xor
rorl
cwtl
sahf
int3
rorl
jo
fs
test
leave
popa
adc
in
cltd
xchg
dec
gs
inc
divl
pop
cs
int3
popa
js
pop
repnz
xchg
push
ret
add
jne
sahf
sub
push
inc
or
adc
cs
lcall
sub
push
mov
data16
mov
xchg
les
loope
shlb
fs
imul
mov
in
and
cwtl
leave
xchg
xor
inc
gs
rolb
jno
mov
fdivl
andl
popa
mov
subl
or
cmp
popa
leave
pop
and
nop
lods
jno
mov
mov
test
divb
popa
pop
or
push
ret
cmp
mov
or
push
xor
mov
loope
mov
test
loop
mov
sub
push
mov
pop
lcall
push
push
pop
cmpl
std
and
lods
fdivs
icebp
popa
xchg
out
test
and
fdivl
dec
into
iret
mov
push
scas
cmp
sbb
int
test
xchg
or
popa
out
mov
or
lahf
and
inc
jecxz
push
push
and
fisubs
mov
mov
out
or
iret
ret
outsl
or
sub
mov
push
sahf
jge
loope
jmp
xor
cmp
loope
fimuls
push
push
pop
roll
daa
jb
and
popa
and
fistpl
popa
sub
aam
fs
pop
sbb
popa
lahf
push
xchg
push
aad
mov
popa
lret
xchg
pop
aas
dec
inc
gs
ret
inc
loope
jb
addr16
xchg
adcb
mov
add
adc
aad
push
xchg
push
nop
sbb
mov
into
jg
out
jge
repnz
fmull
inc
ficomps
xor
pop
ret
sbb
dec
popa
es
push
into
int3
cli
cmpsb
xchg
push
mov
aaa
mov
mov
int3
imulb
sbbl
fdivrs
push
pop
inc
sub
aaa
loope
push
popf
jmp
mov
outsb
daa
jecxz
fimull
lds
lock
scas
bound
in
shll
inc
jo
outsb
sbb
shl
mov
popa
cli
push
or
movlps
popa
jmp
cmp
pushf
icebp
push
popa
dec
enter
pop
jne
popa
pop
cmp
aaa
pop
inc
jp
xchg
mov
bound
jne
popa
sub
mov
mov
pop
lods
push
enter
arpl
popa
adc
push
lahf
std
dec
jo
jno
cmpsb
popa
push
cmp
ljmp
aad
imul
aas
and
outsb
jae
mov
jnp
cmc
add
adc
stc
subl
ss
fdivrs
sbb
repnz
popa
xchg
pop
stos
sub
sti
and
idiv
rclb
bound
repz
push
testl
int
xor
je
sub
enter
jb
out
lcall
rclb
fmuls
xor
icebp
adc
andb
jp
test
call
repz
push
fadds
sbbl
inc
sub
popa
push
or
push
jmp
rcrl
or
cmp
les
data16
sbb
or
shl
mov
pop
clc
mov
cld
outsb
incl
lea
sbb
add
cmp
mov
popa
cwtl
out
mov
lock
lods
popa
stos
xor
or
mov
popa
dec
sbb
lods
jle
mov
or
stos
aaa
mov
into
imul
jecxz
psllw
fs
mov
push
in
pop
mov
add
cmp
lret
xchg
adc
xchg
sahf
pusha
adc
or
outsb
inc
push
fisttps
and
or
test
loope
pop
test
lods
fnsave
sub
dec
fcomps
out
inc
sar
lret
fiaddl
jo
bound
xor
fimull
in
popa
and
cmc
sbb
popa
loope
push
inc
iret
jb
xor
popa
int3
loopne
ds
popa
pop
cmp
xor
in
popa
or
adc
aam
ja
popa
sub
inc
push
popa
ss
xchg
cmp
popa
test
inc
inc
repnz
arpl
mov
jae
push
mov
gs
popa
sub
popa
orb
sub
and
sarl
sbb
pop
cwtl
dec
popf
cltd
ret
mov
lods
popa
push
cld
rep
aas
jae
gs
sub
push
fcoml
xchg
mov
mov
scas
pusha
ret
add
shr
dec
dec
outsb
fisttpll
dec
je
adc
jecxz
ja
rol
and
ljmp
ss
xor
outsl
test
addr16
push
jne
ltr
popa
lcall
popa
lock
insl
bound
jp
and
mov
push
adc
ficoml
jnp
inc
jne
test
popf
mov
imul
clc
lret
sbb
push
xchg
pusha
fcompl
bound
cmpsb
mov
xchg
or
cmp
mov
frstor
shr
or
popa
or
cmp
lods
popa
testl
jbe
add
arpl
xchg
popa
push
mov
pusha
xchg
push
popa
scas
out
stos
test
dec
bound
sbb
push
xor
pop
mov
popf
call
andl
inc
pop
sbb
fiadds
push
jge
fcmovne
popa
ja
or
jns
sub
pop
sti
dec
or
push
push
xor
iret
fidivl
loope
inc
mov
xchg
pop
xchg
addl
jmp
xchg
aad
iret
dec
pop
xor
sahf
push
popa
pushf
mov
sub
fbld
test
mov
popa
or
xchg
cs
fistpll
bound
sbbb
xchg
sub
xor
aam
push
cltd
jno
in
fs
popa
fists
ljmp
lret
inc
adc
jo
and
xchg
add
cmp
adc
lret
xor
mov
popa
es
or
addb
mov
add
flds
in
andl
push
sarb
clc
cld
jle
repnz
popa
xlat
jo
xchg
xor
scas
pop
into
popa
jp
repnz
popa
ret
cmp
jbe
push
in
cmpb
mov
xorl
loope
xor
push
mov
jecxz
pop
popa
mov
in
dec
and
mov
add
fcoms
mull
stos
popa
mov
cmp
aaa
popa
std
or
pop
pop
inc
xor
fsubrs
jb
shll
dec
inc
jl
jae
dec
dec
pop
popa
sti
imul
scas
notl
sbb
insl
mov
mov
xorb
les
rcl
out
in
popa
xor
or
push
mov
ljmp
orb
lock
ljmp
add
lcall
sbb
and
getsec
inc
dec
pop
pop
push
push
pop
sbb
test
cmp
dec
popf
dec
mov
adc
aam
sbb
lea
pop
fs
dec
add
or
inc
sbb
cli
xor
and
dec
ljmp
int
add
std
pop
rcll
popf
loopne
sti
mov
fisttps
std
mov
xchg
add
adc
sub
out
pop
aam
popa
leave
bound
adc
cld
sbb
cmp
insl
mov
ljmp
stc
sti
sub
sub
bound
repnz
fwait
push
xchg
jl
mov
sahf
cld
mov
adc
pop
sbb
pop
pusha
mov
int
xchg
jno
clc
lea
mov
out
leave
sbb
bound
outsb
in
loope
inc
mov
insl
dec
negl
in
movsl
std
sub
cmp
jno
jnp
pushf
mov
jmp
sub
mull
sbb
and
in
lret
addr16
lods
mov
stos
ljmp
jecxz
subb
jg
aad
jecxz
sbb
mov
add
icebp
fisubl
and
in
mov
inc
clc
mov
jo
cs
mov
adc
lds
pop
popa
leave
cmc
mov
mov
popa
fadds
subl
ret
icebp
sbb
xor
inc
daa
xchg
popa
stos
push
popf
loopne
and
xor
cmp
push
test
ja
int3
clc
popa
mov
push
dec
push
jae
jmp
inc
call
enter
pop
sbbl
dec
loope
fs
cmp
or
aad
jo
cmp
adc
dec
cs
sub
xchg
and
repz
rcrb
mov
xchg
popa
test
out
push
gs
lea
dec
and
ficomps
mov
scas
loope
jmp
mov
cltd
lret
testl
mov
fsubl
cmpsb
cmp
data16
icebp
push
and
movsl
insl
enter
clc
xchg
mov
push
add
popa
dec
mov
aad
push
dec
adcl
or
cwtl
mov
icebp
adc
movsl
xchg
popa
ud0
lahf
ret
jnp
flds
jl
popa
dec
repnz
jge
loop
call
mov
dec
popa
cmc
inc
in
pop
cmp
mov
movsb
inc
andb
pop
lret
scas
movsl
popa
pop
sbbl
lret
xor
out
stc
push
mov
popa
inc
daa
push
xchg
xor
or
icebp
cmpsb
in
inc
das
and
test
mov
inc
pusha
stc
in
adc
imul
dec
scas
and
into
and
jb
sbb
popa
pand
xchg
cld
pop
jg
cli
jae
mov
loope
inc
sbb
popa
out
ret
stos
pop
aaa
js
popa
pop
cmp
enter
pop
ds
jns
fistps
pop
test
fstps
popa
mov
cmpsb
data16
lret
mov
or
and
popa
int
scas
insl
xchg
pop
jo
addr16
fildl
xchg
orl
mov
jae
cmp
orl
mov
loope
int3
into
jmp
push
cmpb
mov
mov
sbb
mov
mov
icebp
jg
fwait
popa
inc
frstor
push
popa
jecxz
sub
mov
mov
adc
sbb
gs
in
sbb
gs
mov
ret
arpl
popa
xor
mov
shll
sub
test
dec
clc
pop
enter
mov
xor
xor
idivl
repz
pop
mov
insb
inc
inc
push
popa
push
add
jns
cltd
int
js
xchg
inc
inc
callw
mov
popa
imul
dec
fisubs
jo
sbb
enter
push
xchg
lods
in
cs
popa
cmp
pop
rol
popa
pop
xchg
out
movsl
subb
popa
sbb
dec
js
popa
je
bound
popa
push
out
mov
int3
popa
lahf
xor
and
shrl
push
cmp
pop
arpl
test
cli
sbb
mov
sub
iret
and
fucom
sbb
popa
dec
xor
mov
jmp
out
xor
and
mov
popa
xchg
dec
loope
mov
imul
cwtl
aam
enter
fnsave
popf
aaa
mov
cmpsl
xchg
dec
popa
jmp
or
ja
push
sbb
jg
mov
mov
test
dec
mov
movsl
xchg
or
sub
push
lahf
xchg
add
mov
fldl
xor
popa
clc
outsl
add
std
inc
cmp
cmp
push
jle
addr16
adc
pop
xor
stos
out
mov
ss
es
cmp
out
outsb
push
mov
or
in
fwait
loope
push
fisubl
fstps
add
fistps
xor
mov
lds
add
inc
and
cmp
stc
sbb
andb
push
add
popa
or
sti
lret
popa
rcr
dec
jbe
aaa
stc
inc
popa
and
sbb
mov
adc
clc
sbb
out
jg
aam
shll
mov
adc
hlt
pop
loopne
xlat
popa
xor
into
leave
ficompl
fs
inc
in
mov
xor
popa
jne
out
jl
ds
cmp
xlat
and
cmp
js
lods
adc
bound
popa
and
sahf
jno
and
add
or
shlb
pushf
push
jnp
cmpsb
mov
jge
lock
jmp
mov
aas
out
negl
loope
fisttpll
xchg
jle
sbb
sahf
or
dec
mov
pop
popf
inc
addr16
adc
popa
ret
mov
add
jge
pop
in
and
les
mov
dec
push
cli
jns
popa
push
adc
jbe
jmp
fs
stos
ds
push
sbb
push
arpl
enter
lock
jb
push
in
dec
push
repz
sub
fwait
pop
sub
xorl
cmp
xchg
adc
add
sbb
loop
jae
cs
xor
sbb
out
mov
je
imul
sti
xorl
adc
xchg
call
mov
repnz
das
push
in
dec
cmp
sub
sti
fsubs
pop
dec
into
dec
sbb
cmp
fs
sub
fcoml
inc
jo
sbb
aas
lahf
xor
and
popa
inc
sahf
dec
inc
jle
mov
shrl
insb
hlt
mov
inc
in
push
jnp
arpl
cmp
rcll
ja
popf
popa
add
popa
dec
mov
jo
push
adc
out
push
popa
cld
in
or
mov
es
push
int
aas
in
jne
dec
xor
scas
loopne
xor
inc
sub
stos
imul
lock
iret
add
jmp
pop
cmpsb
push
add
test
cltd
dec
andl
mov
enter
and
mov
dec
or
add
xor
loop
pop
sub
jl
cld
pusha
loope
sbb
or
lret
pop
je
add
pop
scas
fidivs
jo
and
outsb
lods
sbb
popa
test
add
dec
pusha
popa
popf
push
adc
mov
pop
cmp
adc
adc
stos
jecxz
das
add
push
shll
lods
rcr
sbb
push
popa
lods
mov
sbb
inc
popa
fsubrs
mov
popa
aaa
pop
lret
fsub
in
call
jge
pop
or
movsl
insl
shll
out
push
cmpsb
xor
pop
mov
push
ljmp
dec
add
iret
popa
fcmovnu
pop
jmp
lods
xchg
popa
cmp
cmpsb
mov
aam
or
cmp
add
sahf
icebp
popa
bound
popa
or
push
jmp
popa
aam
inc
das
dec
lahf
fsubs
cld
dec
mov
ret
cltd
aad
push
stos
pop
ja
adc
sbb
mov
movsl
cmp
sub
loopne
popa
mov
dec
fdivl
in
xchg
add
cmpsl
in
stos
dec
sbb
xor
jle
ret
jne
outsl
xchg
cmp
or
popa
cmpsl
leave
cwtl
inc
and
je
popa
call
jne
popa
in
or
sub
cmc
inc
shrl
cmpsl
fldenv
adc
lret
adc
pop
andl
sub
mov
cli
mov
xchg
outsl
cmpsl
ja
or
mull
sbb
xchg
cmp
outsl
lret
xchg
cmp
popa
iret
sbb
cmp
adc
push
rcrb
es
push
mov
xor
jo
inc
jp
lret
add
int3
shr
popa
fisubl
sbb
jecxz
popa
sub
or
loope
dec
mov
popa
push
dec
lcall
cmpl
jle
mov
mov
and
repnz
xchg
sbb
sub
shll
popa
std
ret
imul
or
mov
fisubl
cmp
dec
icebp
in
popa
pop
and
aad
stc
dec
fwait
jno
loope
dec
push
add
mov
push
mov
xchg
mov
xchg
cmp
sbb
push
ret
data16
fwait
mov
loope
incl
jns
mov
aam
popa
lret
jle
pop
adc
arpl
test
loope
ret
call
fdivrl
popa
lods
cmc
in
shlb
jp
adcl
pop
popa
inc
cmp
inc
add
mov
sti
cmp
leave
pop
fnsave
inc
sbb
push
xchg
loopne
gs
and
jge
add
repz
jae
popf
mov
sbb
push
and
nop
mov
sbb
sbb
fldt
arpl
in
cld
or
push
jno
mov
ja
adc
xor
lods
sub
jb
mov
loope
repz
insl
dec
dec
and
mov
jmp
xchg
sbb
rcll
pop
jecxz
rorl
cmp
sub
insl
pop
pop
into
mov
mull
lcall
inc
push
insb
jno
in
mov
hlt
sbb
sbb
mov
int3
inc
test
jmp
fcmovnb
imul
sarb
push
xchg
mov
jge
aaa
sbb
cwtl
shl
iret
inc
xchg
sbb
push
mov
loop
pop
and
xchg
mov
mov
icebp
push
repz
push
movsl
ja
adc
sub
arpl
loopne
xchg
stos
mov
xor
bound
leave
mov
cmpsl
push
jl
and
nop
popa
jne
cmpsl
mov
add
adc
mov
mov
sbb
and
loopne
fldt
stos
push
loope
push
in
leave
cmc
jmp
dec
sarb
pop
std
adc
js
push
push
sbb
movsl
push
loope
leave
add
shl
and
mov
mov
cmp
aas
testb
jg
push
dec
push
or
in
push
fsubr
pop
scas
orl
out
pop
hlt
or
dec
lods
sbb
dec
bound
pop
pusha
jg
cli
xchg
fisttpl
fsubrs
imul
add
mov
sub
mov
les
jmp
xor
loop
xor
repz
mov
dec
add
sarl
test
sbb
ljmp
jnp
fimull
and
sahf
xchg
and
push
pushf
loope
push
sbb
insl
pop
inc
xchg
jp
dec
jmp
mov
lods
out
jo
and
out
jle
inc
test
jo
ss
imul
sbb
rcl
mov
add
jae
repz
dec
pop
in
inc
rcrl
xor
mov
or
or
iret
in
jne
popa
push
loopne
or
push
sbb
fimuls
js
push
fldenv
pop
fildll
std
stc
mov
sbb
cmp
cltd
lea
stc
inc
call
push
jb
andl
inc
lea
cmp
popa
stos
test
dec
popa
sub
sbb
insb
popa
dec
ficoms
xor
sbb
pop
test
lret
mov
ljmp
in
add
xrelease
push
jne
xor
outsl
data16
loope
jno
inc
popa
mov
out
fsubl
xor
loope
xchg
popa
lret
addr16
or
pop
push
arpl
jno
cs
adc
ret
mov
and
dec
and
enter
dec
sub
cmc
jmp
loope
vmread
loopne
aam
inc
jmp
push
or
inc
test
push
mov
mov
repz
popaw
iret
cld
pop
xor
jb
push
popf
fsubl
popa
and
adc
popa
pop
add
adc
xor
popa
mov
push
mov
mov
xchg
das
push
rcr
bnd
lcall
mov
iret
push
andb
popf
inc
jecxz
mov
push
sbb
pop
pop
jg
push
andb
jge
sar
popa
inc
test
xchg
mov
pop
hlt
ja
lea
popa
jl
mov
push
mov
out
cmpsb
push
aas
mov
fcoms
cmp
or
pop
inc
push
fs
push
aaa
xorl
jg
xchg
sub
mov
adc
push
ret
popa
bound
and
pushf
movl
mov
popa
sub
mov
aaa
lcall
notb
scas
pop
xor
dec
test
cmp
int
icebp
fcoms
pusha
mov
loop
mov
mov
mov
inc
sbb
xchg
fldt
mov
in
push
mov
xchg
out
popa
lret
sbb
cwtl
pushf
push
into
popa
stos
testl
popa
call
lea
aas
xchg
pop
push
pop
or
sub
pop
in
lea
bound
mov
and
sub
rcrb
popa
ficompl
sbb
leave
cmpl
push
lods
lcall
outsl
ds
xchg
and
fstl
fsubrs
inc
ret
fisubl
mov
arpl
mov
icebp
dec
cli
jae
popa
loopne
lds
pop
jecxz
pop
iret
aaa
dec
addl
cmpsb
jnp
fsub
int
push
negb
jne
xor
je
cmp
loopne
mov
movsb
icebp
call
test
xchg
mov
dec
jle
addr16
loope
pop
out
cmp
dec
adc
bound
xlat
cmpsl
jle
mov
dec
pop
mov
and
loope
cmc
sarb
pop
sbb
cmpl
mov
dec
ja
mov
ficoml
and
xor
pop
loopne
adc
mov
cltd
push
ja
popf
popa
jecxz
dec
mov
loopne
add
xchg
cld
movsl
mov
fwait
imul
aas
insb
or
add
or
loope
ja
pop
nop
dec
sub
push
sbb
dec
mov
cmpsb
sub
or
xchg
fcoml
iret
inc
dec
mov
rcr
out
push
push
ja
int3
add
out
xchg
popa
push
pop
cmp
popa
inc
xchg
add
loop
roll
popa
in
psubsb
leave
mov
lods
bound
sub
and
sub
arpl
pop
mov
mov
std
popa
enter
arpl
push
imul
stos
repz
mov
scas
cli
rolb
add
bound
mov
iret
mov
xchg
pop
popa
loopne
dec
lds
and
popa
jl
xlat
imul
xchg
jnp
fistps
fsubl
aaa
mov
jle
adc
aad
push
mov
lods
sbb
popa
loopne
ret
test
cltd
or
popa
jo
fwait
idivl
jge
testb
pop
sbb
xlat
loopne
stos
adc
aad
add
out
push
add
sub
popa
dec
and
pop
mov
in
or
jo
mov
xor
fstpl
fdiv
bound
scas
jnp
mull
cs
and
dec
sbb
imul
popf
je
arpl
mov
mov
or
push
xor
insl
vprotw
mov
xlat
insl
jns
push
js
rcrb
mov
popa
out
movsl
and
adc
xor
pop
mov
cmp
popa
or
push
mov
pop
bnd
pop
mov
fidivs
adc
iret
push
sub
mov
stos
push
popa
icebp
xor
fildl
outsl
hlt
loope
das
and
filds
sub
in
mov
shlb
xor
nop
sbb
xor
rcr
cmc
inc
sbb
pop
out
inc
add
pop
arpl
frstor
xor
mov
popa
add
repz
xor
std
sbb
or
into
jno
dec
xor
mov
xor
push
imul
repnz
sbb
popa
mov
xorb
jno
mov
movsl
scas
fwait
dec
loop
out
and
sub
shl
fildll
popa
cmc
outsl
jmp
shll
sbb
popa
pop
dec
or
sub
hlt
xor
int
cmc
inc
popa
cmp
imul
lds
aaa
or
popa
sbb
jnp
je
or
mov
dec
outsl
fstpl
popa
cmp
cltd
xor
add
insl
scas
sub
pop
sub
xchg
xchg
lods
or
andl
fwait
push
flds
mov
mov
cwtl
and
ret
popa
jge
sarl
loop
in
mov
data16
stos
cmp
mov
sbb
mov
ljmp
mov
aaa
in
add
jnp
adc
add
outsl
test
cmpl
sub
pop
les
ljmp
test
pop
addl
insb
shrl
add
shlb
adc
adc
popa
shrl
pop
ja
ret
sbb
mov
inc
jle
shrb
insl
sub
into
popa
test
xchg
dec
popa
fidivs
scas
jae
xchg
or
jne
test
sbbl
mov
xchg
xlat
call
mov
popa
xchg
dec
sub
shll
xchg
lret
inc
outsb
lret
lahf
popa
repz
xor
cmp
shrb
lcall
ljmp
loope
pop
xor
and
popa
xor
cmp
mov
lahf
xchg
cmpb
bound
mov
pop
out
rorb
mov
movsb
cmp
xchg
dec
call
lret
popa
pop
lock
hlt
cmc
jl
jo
inc
jb
inc
inc
addr16
subl
mov
xorb
inc
mov
sahf
adc
popa
and
inc
and
scas
loopne
push
cwtl
shl
lea
pop
dec
popa
sti
and
mov
popa
pop
fistpl
in
pushf
lcall
mov
push
cwtl
loope
test
dec
std
aad
mov
stos
xor
push
or
ficompl
sub
mov
xor
inc
movsl
pop
xchg
aam
xchg
and
loopne
bound
cli
test
loopne
mov
popa
fisubrl
int
lods
sub
popa
dec
fistl
cmpsl
xchg
or
popa
add
scas
rcr
bound
mov
enter
fwait
out
xchg
aas
jae
loop
aad
pop
inc
mov
add
add
dec
push
add
repz
js
inc
fcoms
out
inc
jne
ficoml
jmp
add
lds
ss
xchg
xor
xchg
fsts
pusha
or
sub
mov
sbb
and
mov
out
popa
push
lods
loope
stos
add
dec
insb
jg
xchg
fidivs
arpl
jo
mov
popa
cmp
rcrb
cmp
mov
repz
popa
nop
pusha
dec
test
add
lea
roll
sbb
int3
pop
ret
and
or
std
in
cmp
lcall
xchg
push
js
push
jno
xchg
ds
sub
jae
mov
pop
pop
inc
sbb
popa
clc
js
sbb
shrl
not
ret
lods
in
sbb
icebp
ficoms
adc
xchg
pop
cmp
out
outsl
lods
jge
pop
popa
je
and
push
popa
cwtl
lea
dec
dec
rcrl
mov
sub
roll
ljmp
or
in
popa
mov
dec
pop
sbb
popa
sub
mov
aam
jo
sbb
inc
loop
cmc
push
add
mov
bound
mov
aad
imul
mov
test
popa
inc
mov
stc
xor
in
push
jge
fsubrs
out
icebp
xchg
icebp
test
xor
inc
cmp
subl
jecxz
pushf
cmc
xchg
rcll
push
sarl
and
shrb
xchg
pop
insb
jb
lret
pop
loope
in
test
insb
cmp
andb
mov
mulb
popa
std
ljmp
popa
data16
mov
xor
and
pop
rolb
sbb
cmc
inc
repnz
or
xlat
xchg
inc
adc
daa
pop
push
mov
pop
cmp
cmc
jae
inc
repz
popa
or
mov
dec
fsubs
pop
ret
popa
arpl
mov
scas
lret
fcomi
js
and
jp
movaps
rclb
popf
clc
push
popa
push
mov
in
out
xor
mov
inc
jp
sbb
push
or
xor
test
adc
popf
ret
sbb
mov
inc
add
aaa
sarb
sbb
ret
inc
loope
sub
xorb
aad
add
push
push
mov
popa
iret
repz
jae
inc
add
aaa
adc
out
leave
fisubs
ja
sub
jecxz
fadd
in
pop
sbb
fs
int
loope
cmp
je
arpl
cmp
adc
pushf
or
cmpsb
sub
dec
inc
adc
jns
outsl
cmp
xchg
fcomps
cli
arpl
mov
iret
jae
cmp
push
ljmp
jge
subb
inc
loope
aaa
mov
dec
fs
adc
xchg
popa
mov
mov
push
popa
xor
cs
xchg
xchg
xchg
adc
jb
pusha
fbstp
mulb
popa
dec
outsb
jmp
popf
mov
inc
sub
popa
shlb
inc
xor
dec
ja
sbb
and
arpl
push
sub
push
inc
jno
xchg
mov
and
test
push
or
push
mov
mov
popa
int
scas
mov
popa
pop
out
adc
int3
loop
stos
mov
xor
adc
movsl
cltd
pushf
inc
repnz
fcomi
fstpl
ljmp
xor
adc
pop
jbe
daa
popa
sbb
ss
out
cmpsl
bound
mov
popa
or
pop
fs
sarl
in
popa
sub
or
add
rclb
push
in
out
mov
clc
fwait
sbb
popa
hlt
or
movsb
add
in
xchg
add
mov
cmp
enter
cmpsl
push
popa
mov
in
sahf
dec
popa
arpl
jmp
gs
imul
push
imul
jle
arpl
push
add
lods
lret
aad
clc
xor
pop
jne
popa
push
cmp
fs
movsl
inc
les
sbb
jae
dec
lahf
popa
mov
imul
dec
dec
mov
popa
jno
mov
sub
insb
enter
mov
and
push
xchg
push
test
adc
xchg
and
jnp
imul
inc
add
ret
inc
hlt
lahf
fs
cmp
cmpsb
jge
dec
sub
jg
sti
dec
mov
ret
out
sbb
je
mov
popa
mov
push
out
in
jp
popa
insb
rcrb
lea
inc
lods
out
xchg
das
shlb
int3
inc
push
mov
rcll
push
xor
sbb
gs
xchg
stos
push
xor
or
popa
fildll
call
ljmp
int
pop
pushf
pushf
xor
xchg
sbb
jg
popa
jmp
jnp
pop
popa
or
lcall
push
imul
fildl
inc
popa
out
push
cmp
jle
jns
popa
sub
imul
pop
imul
and
hlt
mov
clc
test
push
inc
inc
inc
icebp
jo
and
insb
sbb
dec
aaa
jp
out
push
loop
nop
outsb
jns
xchg
sub
cmc
das
std
mov
bnd
pop
dec
in
fwait
outsl
jge
loopne
jae
sti
rol
mov
push
stc
jae
or
sbb
push
jns
outsl
and
lret
adc
push
jecxz
jne
call
adc
jbe
dec
pushf
iret
add
sti
jbe,pn
xchg
or
addr16
or
or
bound
popa
leave
push
aaa
popf
and
push
adc
rclb
popa
sub
mov
idiv
iret
cmpsl
push
inc
adc
sar
mov
add
leave
cs
hlt
dec
popf
andb
adc
xor
jg
mov
loopne
push
fistpll
jecxz
dec
sbbb
jle
insl
ficompl
cltd
and
mov
sub
in
repz
out
cmp
jno
cld
aas
bound
dec
loop
in
in
push
lret
fisubs
leave
ret
add
mov
popa
iret
dec
sub
sub
dec
xchg
or
fdivrs
inc
sti
sbb
ret
add
gs
mov
mov
rcr
movsl
sub
pop
xchg
jl
push
pop
popa
ret
xchg
out
xchg
pop
ds
mov
pop
insl
loope
hlt
lea
nop
outsb
mov
xorl
sbb
daa
std
push
push
sbb
push
push
ror
rorl
mov
stc
movsb
dec
xchg
mov
jp
pop
mov
out
loope
push
movsb
mov
push
dec
fninit
mov
or
decb
cmpsb
mov
sbb
xchg
pop
jbe
stos
mov
xchg
mov
es
movsl
aad
inc
xor
imul
scas
inc
in
and
icebp
dec
pop
push
inc
mov
pop
mov
arpl
scas
sub
mov
cmp
lcall
sbb
ja
xchg
cli
les
cmp
add
sub
push
inc
fdivrs
sub
enter
pop
out
fidivrs
movsb
mov
xor
js
mov
push
mov
lods
lcall
sub
stc
movsl
daa
push
in
loope
out
aas
pushf
jl
popa
push
lret
adc
fsubrs
sbb
jl
mov
xchg
push
and
mov
fsubs
insl
xchg
gs
jb
popa
xor
jp
aam
je
jno
popa
fimuls
mov
jecxz
negb
pop
push
pushf
xlat
or
mov
mov
std
arpl
test
call
sbb
mov
push
jnp
fxch
popa
mov
xlat
dec
es
inc
xor
aaa
jg
xor
lods
dec
inc
push
fs
and
adc
rclb
or
popa
sbb
data16
add
or
add
sbbb
push
movsl
testb
fs
fiaddl
pop
jbe
scas
dec
inc
mov
and
inc
jecxz
mov
push
aad
push
push
jno
gs
or
testl
popa
sub
cmp
jp
push
jge
pop
ljmp
lea
popl
jnp
popa
loope
mov
pop
out
push
fs
movsl
iret
stos
pop
and
insb
popa
scas
sbb
push
andb
lock
popa
cmp
push
mov
insl
std
fwait
sahf
jmp
xor
push
ficomps
arpl
cmpsb
pop
aam
sahf
movsl
lcall
inc
hlt
jb
push
mov
xchg
sbb
popa
or
or
push
andl
add
inc
xor
popa
cmp
out
fldt
dec
iret
out
aad
jnp
pop
dec
stos
fiadds
insb
pop
sbb
lock
bound
xor
push
xor
arpl
ficompl
fdivr
push
into
lcall
test
xchg
mov
popa
das
mov
outsl
and
add
cmp
sbb
js
adc
daa
jp
cmpsb
push
popa
jle
add
popa
inc
inc
bound
pop
lds
xor
xchg
and
mov
inc
jge
adc
jg
cmp
fwait
adc
and
sbb
xchg
fldl2t
frstor
pop
pushf
push
test
jbe
in
push
shll
jmp
xchg
xor
lahf
outsb
lds
adc
add
cld
ljmp
mov
inc
push
cmpsl
jbe
sub
push
adc
lds
push
popa
subl
sub
push
jl
hlt
es
stc
aam
test
mov
sub
sub
jae
fs
cmc
cltd
and
mov
xor
pop
sub
pushf
je
in
cli
popa
and
jns
arpl
push
and
sbb
lock
dec
sbb
popa
push
mov
cmp
divb
hlt
out
xchg
push
popa
cli
fdivs
outsl
push
ds
into
cmp
ret
sbb
xorl
pop
out
popa
jae
jge
add
imul
cmp
add
popa
mov
inc
mov
pop
cs
add
or
js
xor
shll
inc
dec
cmp
test
icebp
iret
and
lret
aas
popa
mov
in
or
fadds
xor
lahf
push
or
pop
into
cmp
mov
cmp
stos
mov
nop
mov
stos
dec
jo
jno
or
popa
out
scas
adc
lret
in
pop
popa
shrb
dec
punpckhwd
sbb
stos
lock
scas
jno
mov
leave
scas
dec
cmp
inc
aad
ljmp
sub
in
mov
push
bound
inc
mov
loopne
loop
push
sub
sub
scas
popa
jl
jbe
pushl
test
jns
in
inc
add
push
loope
cli
movsb
into
add
lods
cld
je
subl
mov
jg
cwtl
sbb
popa
cltd
in
push
cmpsb
out
and
movsl
push
add
inc
test
inc
push
push
loopne
leave
int
xchg
adc
cmp
mov
popa
sbb
pop
orb
sub
xor
mov
jp
outsl
add
sub
popf
andb
popa
icebp
push
pop
arpl
movsl
add
push
jnp
pop
xlat
or
mov
adc
mov
and
jge
cs
adc
or
or
xchg
icebp
adc
jmp
je
sub
popa
in
mov
rcr
movsl
sbb
or
aaa
popa
or
mov
nop
ret
pop
add
mov
jmp
outsb
stc
pop
sub
lock
jle
popf
sbb
ja
into
cmpsb
or
jle
ljmp
sbb
inc
shrl
push
jne
subl
pop
in
jnp
xchg
popa
sti
sub
mov
ja
je
cmpsl
fs
cmpsb
cltd
sub
or
jb
add
in
dec
mov
push
inc
repnz
and
popa
mov
pop
and
popa
gs
push
jp
je
outsl
movsl
mov
sbb
or
popa
nop
inc
xor
popa
jno
pop
stc
std
subb
inc
outsl
popa
push
adc
testl
popf
jnp
adc
mov
and
repz
rcrl
int3
popa
adc
call
popa
cwtl
dec
mov
pop
aam
shll
dec
pop
mov
popa
loop
mov
sbb
in
je
dec
jl
popa
dec
jne
cmp
ds
out
jbe
add
cmc
push
lcall
clc
mov
rolb
push
popa
movsb
xchg
lods
pop
adc
addb
mov
jb
jmp
cmp
sbb
push
dec
dec
add
addl
mov
or
jl
fisttps
dec
xchg
popa
xchg
subb
lds
pop
cld
aad
popa
out
test
nop
sarb
and
mov
sub
popa
inc
xor
xchg
cltd
repnz
adcb
clc
int3
popa
pop
jmp
and
jge
aam
cmpsb
adc
and
movsb
lea
and
imul
fwait
xchg
les
mov
repz
mov
in
sbb
popa
mov
and
aam
popa
jp
sbb
popa
nop
in
lds
push
dec
popa
sub
xor
cld
mov
push
jo
xor
mov
hlt
xlat
xor
adc
or
cmp
push
divb
hlt
mov
or
mov
cmp
std
dec
aam
popa
jne
sub
roll
popa
cmc
jnp
push
and
sub
mov
loopne
aam
and
adc
or
in
adcb
mov
jae
popa
xchg
or
andl
popa
mov
mov
jo
adc
leave
test
sbb
jb
data16
ret
rorl
adc
in
mov
in
inc
ds
popa
fistps
inc
sbb
das
cmpsb
sbb
ja
cli
popa
test
dec
push
and
aam
jmp
fistps
add
loop
ficoms
lock
outsl
popa
psrlq
call
fldcw
nop
fcompl
jge
cmp
orb
dec
dec
fsubl
pop
mov
cmpsb
lds
xchg
cwtl
call
pop
jg
xchg
test
mov
xor
jle
outsb
lea
cmp
loop
jle
adcb
pop
xchg
pop
repnz
popa
or
in
cld
test
cmp
mov
movsw
test
popa
out
cmpsl
sahf
mov
aas
popa
sbb
add
out
jge
loopne
push
inc
lret
movsb
stc
pop
je
jb
and
jns
std
and
out
push
jno
aam
ja
jbe
pop
push
push
das
pusha
mov
addr16
pop
dec
xor
gs
popf
inc
push
xor
iret
push
xchg
jp
leave
ss
push
push
std
jl
lods
test
insl
stc
scas
and
pop
and
jmpw
jbe
movsb
rclb
in
and
dec
icebp
addr16
ja
add
fbstp
pop
fists
and
jge
and
and
arpl
cmp
sbb
mov
xchg
ljmp
jbe
loop
mov
sbb
fnstcw
mov
test
shrl
add
xchg
adc
dec
cmp
mov
mov
jb
std
lcall
gs
or
and
push
xchg
add
jmp
push
pusha
or
shll
leave
fs
dec
mov
mov
iret
fistl
movsb
in
imul
sbb
popa
and
cs
xchg
mov
jmp
in
repz
adc
rorl
push
mov
and
ja
or
fcmovnb
shlb
sbbl
outsb
lock
push
mov
in
mov
push
xor
repz
scas
dec
in
mov
out
mov
daa
fs
rorb
enter
pop
daa
jae
xlat
aas
cmpsl
add
or
popa
out
test
and
push
lods
mov
sub
push
xchg
mov
in
sbbl
mov
outsb
and
cltd
push
adc
lahf
push
lcall
xchg
mov
jl
sub
dec
sbb
xor
test
dec
hlt
jo
dec
jae
xchg
sbb
in
insl
mov
and
mov
test
test
dec
fsub
sub
adc
adc
stos
mov
or
pop
xor
or
cmpsl
sbb
mov
or
or
cli
aas
fsubrs
popa
jg
jle
nop
mov
arpl
pop
inc
leave
movsl
cwtl
popa
repz
mov
xchg
add
sbb
sub
jge
outsb
or
push
sbbb
mov
mulb
push
daa
fsub
xor
iret
sub
push
iret
popa
mov
mov
adcb
cs
sub
movsb
mov
xorl
dec
inc
loope
dec
mov
dec
js
es
dec
mov
rcrl
sub
or
mov
push
add
aam
insb
loop
push
movsl
data16
into
lcall
lods
and
pop
pop
sub
bound
aam
and
popa
ss
mov
outsl
mov
adc
add
jecxz
ret
scas
dec
movsl
popa
sbb
jns
xor
pop
lock
lea
insb
in
mov
mov
inc
imul
outsb
push
xor
adcl
fnsave
out
dec
and
popf
adc
popa
ret
lret
ss
hlt
adc
dec
jg
scas
sbbl
pop
dec
sbb
mov
iret
inc
insl
inc
int
inc
popa
pop
inc
test
enter
popa
push
scas
rolb
xchg
mov
pop
leave
jge
popa
xor
inc
push
les
push
push
add
sbb
rcrl
push
xchg
popa
xlat
cwtl
jl
add
pop
jg
push
fs
repnz
cmpsb
sahf
xor
sub
scas
jl
dec
popa
and
test
fiaddl
popa
shlb
aam
mov
sti
std
dec
out
mov
xchg
push
imul
fisubrs
mov
lcall
fs
icebp
movsb
lret
add
push
fwait
popa
imul
popa
pop
xchg
inc
pop
out
fsubs
cmp
inc
hlt
cmpsb
or
adc
mov
lret
popa
mov
mov
shrb
fisubl
lods
cmp
jmp
mov
popa
ficoms
popa
and
jns
mov
sbb
test
ja
sbb
je
jg
push
andb
xor
sbb
mov
movsl
dec
jge
xchg
mov
subl
cmp
add
adc
popa
sub
pop
push
or
jnp
sbbl
stos
jge
xchg
jp
xor
je
cmpsb
imul
pop
mov
insb
cwtl
cmp
pop
sub
xchg
popa
and
leave
in
jmp
iret
mov
and
jge
icebp
out
adc
fldt
cs
mov
dec
popa
xchg
mov
jnp
mov
mov
notl
mov
inc
sbb
cmp
jne
stos
popa
or
pushf
push
push
mov
outsb
aad
popa
and
mov
lock
mov
mov
inc
popa
jl
lds
sbb
pop
int
or
xor
sahf
jno
test
popa
sub
mov
jg
pusha
and
xchg
push
imul
inc
popa
dec
pop
sub
flds
xchg
push
dec
xchg
xor
popa
rol
xlat
lods
mov
mov
in
pop
lahf
decl
mov
insb
test
andl
jno
enter
mov
out
and
inc
aaa
xchg
jo
shlb
add
mov
popa
out
cmp
mov
mov
popa
pop
mov
lret
js
mov
cmpsl
sahf
test
into
icebp
xchg
popa
pop
aas
push
jmp
adc
mov
or
inc
dec
push
popa
pop
mov
jl
lea
outsb
lcall
sub
adc
dec
mov
and
adcb
outsb
popa
adc
insb
test
orl
xor
loop
xor
dec
cmc
or
fs
addl
push
lods
jnp
jno
adc
dec
inc
popa
jmp
xchg
sti
loopew
jno
mov
fstps
ljmp
out
popa
cmp
fimuls
repz
sub
push
lea
shrb
into
es
dec
repnz
sbb
dec
outsb
popa
icebp
push
mov
inc
mov
outsl
cltd
push
add
jb
fsub
pop
jo
sub
in
add
rcrl
fs
pop
jg
xchg
jl
ret
lea
dec
sbb
ds
mov
adc
popa
in
les
outsl
cmp
jne
loope
dec
je
test
bound
and
xchg
push
int
popa
inc
and
movsb
add
aad
popa
cld
cwtl
arpl
lcall
popa
nop
jmp
popa
out
cmp
bound
clc
lret
fwait
mov
loopne
popa
je
pop
call
popa
lret
pop
push
fmull
sub
and
popa
movsl
mov
mov
mov
rcrl
cld
xrelease
popa
fcompl
push
jl
sbb
mov
sbb
xchg
in
xorb
cmpsl
aam
mov
xor
repnz
xor
scas
lret
adc
andl
arpl
cltd
lock
sahf
stos
push
shll
popa
fisttps
icebp
shrb
loop
clc
rorl
jne
xchg
shl
je
cltd
mov
clc
sbb
fstl
addr16
pusha
add
adc
frstor
and
jecxz
sub
sub
frstor
mov
xchg
pop
cwtl
mov
mov
out
js
outsb
outsl
or
fwait
aas
jg
loope
dec
mov
notb
enter
mov
outsl
ret
cwtl
add
ja
or
xchg
inc
mov
jnp
aad
inc
jno
pop
pushf
je
repz
xchg
ror
xchg
outsl
cmp
pop
addl
out
adc
jg
mov
subb
push
fdiv
out
popa
mov
pand
adc
std
pop
push
popa
pop
adc
icebp
jp
mov
pushf
pop
test
insl
rclb
stos
and
inc
popa
out
dec
xchg
inc
sti
dec
popa
inc
dec
sub
popa
rorl
daa
mov
push
dec
add
jns
addr16
jo
mov
mov
inc
fcomi
gs
mov
sti
add
je
js
popa
pop
mov
popa
pop
pop
std
ret
mov
dec
popa
cmpsl
lcall
push
jl
fabs
fidivrs
xchg
mov
fdivrs
popa
sub
sbbl
inc
popa
clc
push
movsb
mov
and
xor
or
popa
push
jmp
mov
jnp
mov
fwait
pop
cmpsl
cmp
popa
repz
pop
dec
out
test
arpl
lea
movsb
shrl
push
cmovg
dec
xor
inc
pop
out
sbb
add
iret
push
xchg
test
movb
cmp
xchg
adcl
mov
xor
popa
xchg
enter
or
mov
push
jo
movsl
mov
popa
lahf
data16
ficomps
cs
dec
mov
push
movsb
popa
daa
jmp
push
fisubl
and
pop
jbe
popa
cmp
add
popa
cmp
outsl
ss
jno
pop
out
pop
shlb
push
adc
cltd
push
into
in
das
ret
cmp
push
popa
mov
push
jmp
js
je
mov
add
pop
in
and
cmp
pop
outsl
sub
fcmovnu
fmull
ret
jecxz
das
outsb
int
cwtl
fidivl
xlat
dec
adc
push
repz
push
cmc
sbb
lret
movsb
jbe
add
or
sarl
insb
mov
mov
je
fsubl
scas
movnti
sub
popa
int3
into
push
lock
clc
sbb
lods
pop
outsl
mov
aad
xchg
jnp
cmp
fwait
sub
sub
call
mov
xchg
xchg
jge
out
pusha
cmp
clc
cmp
mov
in
add
mov
imul
xlat
popa
inc
flds
push
mov
imul
popa
rcll
xchg
add
shl
inc
xchg
adc
ret
outsb
insb
dec
mov
daa
and
push
and
xor
sbbb
mov
les
aad
cltd
sbb
xor
mov
fisubrl
popa
push
pusha
xor
lahf
push
add
jo
popa
jns
sub
aad
xor
push
popa
mov
popa
or
fistl
into
clc
pop
popa
repz
cmp
rorl
fs
out
aam
sbb
clc
cmp
or
push
sub
fadds
test
subl
xor
mov
frstor
repnz
out
insl
inc
mov
cmp
push
fisubl
xchg
sbb
push
pop
sbb
and
mov
pop
push
add
or
into
sti
jb
add
mov
les
lahf
gs
outsl
shl
fs
out
fwait
int
lock
mov
sub
movsl
popa
leave
dec
inc
cmc
flds
popa
add
adc
popa
iret
cmp
pop
pop
subb
add
in
and
and
jne
cmp
and
fistpl
popa
test
mov
mov
pop
xor
int3
push
and
sub
sbb
loop
popf
popa
addr16
dec
pushf
ret
popa
xchg
rcrb
call
dec
pop
or
stc
dec
nop
jg
mov
mov
out
fisubrl
in
scas
jno
adc
pop
push
pop
jne
test
test
stos
stc
ds
mov
cltd
or
inc
or
popa
arpl
popa
push
cmp
jl
xchg
and
aas
xchg
rorl
shrl
popa
mov
inc
out
xchg
jne
data16
and
jns
bound
movsl
popa
hlt
and
lahf
jae
cmpsb
loope
cmp
dec
pop
les
les
push
popa
ja
es
fwait
sub
adc
popa
fiaddl
imul
outsl
mov
and
mov
dec
push
mov
pop
imul
push
push
mov
mov
jne
dec
lahf
cmp
popa
mov
adc
pop
inc
loopne
popa
icebp
push
ss
push
cmpsl
jmp
mov
push
stos
mov
sahf
pushf
and
aam
and
dec
add
into
xor
ds
lds
cmpsb
cs
mov
pusha
popa
sahf
mulb
test
andb
popa
push
repnz
call
jecxz
movsb
xchg
adc
std
cmp
jae
aas
jmp
sub
pop
mov
pusha
in
push
inc
popa
test
inc
mov
mov
popa
enter
test
mov
loope
push
ret
leave
aad
out
sahf
fwait
jle
push
gs
popa
mov
ljmp
setle
xchg
ss
xor
sahf
dec
mov
pop
in
pop
popa
add
jp
popa
adcl
push
push
adcb
je
fnstcw
lods
js
ljmp
popa
mov
data16
stos
xchg
xor
cltd
push
xor
or
shrl
iret
shl
cmp
xor
cli
jo
fadds
lahf
aas
and
pmullw
jge
mov
mov
shl
adc
push
clc
loope
call
and
int
rcll
inc
mov
loop
movsb
out
les
sub
call
dec
ret
mov
push
mov
sbb
xchg
add
aam
push
add
popa
faddp
sub
repz
filds
in
popa
insb
int
and
enter
nop
or
xchg
mov
xchg
jo
and
aas
mov
and
mov
inc
in
cld
popa
pop
lret
xor
jg
fsubl
xchg
outsl
enter
bound
cld
fs
hlt
sub
jg
popa
mov
mov
test
inc
push
ja
dec
arpl
lods
rcrl
lcall
push
imul
pop
add
icebp
ja
lret
sbb
popa
push
test
in
xchg
out
sub
sub
lea
inc
jne
mov
mov
std
mov
and
mov
lea
dec
es
mov
mov
andl
push
les
inc
cmp
and
jecxz
iret
mov
popa
mov
xchg
xlat
sub
push
subb
testl
or
sbb
cs
pop
adcb
bound
dec
pop
and
int3
popa
push
test
cmp
mov
mov
adc
insb
cmp
fsubrp
mov
movsb
popa
or
out
sub
repz
popa
sub
inc
mov
popa
hlt
fisttpl
in
enter
ret
movsl
dec
arpl
popf
loop
fcompp
xchg
add
cs
dec
out
clc
scas
popa
iret
cld
sub
popa
movsl
jne
cmp
bound
popa
std
das
pop
aas
adc
inc
popa
call
fwait
sub
test
shll
gs
and
repnz
bound
fdivrs
push
dec
inc
in
fs
jae
mov
xchg
punpckhdq
lret
push
pop
jecxz
push
popa
push
xchg
inc
js
sbb
lods
bound
xchg
les
pop
sahf
xchg
popf
dec
clc
loope
pause
jb
or
popa
or
mov
push
movsl
adc
push
inc
push
aam
or
mov
in
xchg
cld
dec
dec
popa
lret
xor
pop
test
pop
push
popa
in
sti
or
add
pop
xlat
mov
repnz
mov
sbb
popa
mov
fnstcw
jo
jb
pop
pop
stc
jno
cmp
int
iret
movd
jg
scas
sbb
and
inc
pushf
cmp
and
dec
inc
sbb
rcll
popa
jmp
aam
stos
fcoml
js
inc
or
pop
scas
rcrb
out
mov
das
inc
in
ret
fbld
lret
pop
fidivs
test
or
addr16
dec
adc
popa
dec
lods
xchg
imul
fcomip
insl
gs
mov
andl
fsubr
jbe,pn
pop
fldl
inc
mov
iret
cmc
push
dec
int
lods
popa
xchg
cmp
nop
aam
popa
sub
jg
pop
pop
lds
arpl
aas
lahf
stos
shll
scas
inc
pop
lcall
sub
adc
pop
mov
inc
loopne
push
mov
adc
lods
pushf
add
insb
ja
int3
fmulp
loope
sub
mov
subl
sbb
scas
push
fstpt
lcall
cs
mov
rorw
ja
stos
push
cwtl
repnz
inc
pop
and
data16
mov
dec
loope
jp
int
repz
in
push
push
sub
or
mov
push
das
add
push
fsubl
sbb
ds
adc
push
cmp
mov
fisttpll
mov
loope
and
outsl
iret
pop
or
scas
fs
sub
pop
popa
xor
dec
aas
rorb
xchg
insl
push
adc
xchg
lcall
push
inc
jg
adc
cli
pop
lods
popa
les
in
and
es
cmp
into
insl
cmc
popa
sub
pushf
pop
shl
popa
shlb
dec
insb
pop
imul
and
in
popa
daa
jb
mov
fcmovu
ds
cwtl
dec
lods
xchg
xchg
test
lret
sahf
push
outsl
fmull
popa
roll
sub
ss
mov
inc
jo
or
loope
mov
or
cmp
shlb
push
stos
push
movsl
fs
rcr
xchg
in
sub
add
orl
pop
cmp
scas
inc
popa
inc
inc
xlat
call
jbe
adc
jb
pusha
inc
or
popa
cmc
xlat
xchg
mov
push
in
popaw
jmp
sub
ja
add
push
push
push
popa
pop
and
jnp
sub
popa
lods
dec
stos
xchg
in
call
fwait
cmpsb
push
test
dec
les
mov
pop
cltd
xlat
rcr
frstor
jns
in
fldt
popa
push
jbe
mov
out
jno
push
xchg
cltd
popa
push
mov
pop
lahf
cld
popa
insb
and
sbb
sub
popa
jecxz
mov
popa
cmp
sti
jmp
popf
scas
incl
push
nop
pop
das
jmp
in
popa
push
imul
xchg
inc
xor
jnp
or
and
dec
leave
sbb
and
sub
or
je
aam
mov
mov
pushf
popa
int
dec
rcr
sub
or
call
popa
iret
mulb
repz
aaa
std
popa
or
mov
mov
insb
movsb
popl
popa
lcall
daa
sbb
push
mov
xlat
push
ret
push
inc
jbe
xchg
sbb
mov
pushf
lea
dec
std
and
divl
popa
push
cmp
scas
add
xchg
mov
ja
test
rclb
mov
cmp
fcoms
inc
cltd
ljmp
imul
adc
daa
popa
fwait
test
mov
js
popa
adc
leave
ds
mov
popa
mov
lods
scas
repnz
lret
xchg
push
xchg
xor
mov
jae
inc
pop
scas
pop
and
pop
mov
adc
mov
push
insl
nop
aam
fstps
popa
dec
popf
rcll
dec
sbb
push
and
les
jp
jge
sbb
loope
mov
push
inc
gs
xchg
dec
xchg
loope
fimull
sti
popa
xor
add
jmp
push
into
ret
xor
mov
mov
std
leave
jbe
cmp
pop
mov
sub
loope
daa
pop
xor
cwtl
push
jno
test
inc
add
pop
scas
popa
sub
push
mov
aad
xchg
add
jl
sub
in
cmp
popa
imul
xchg
cltd
sbb
sub
push
mov
mov
lahf
bnd
stos
scas
insb
xchg
popa
inc
pop
mov
mov
ds
fmull
and
ja
dec
jg
popa
fsts
ljmp
int3
cltd
and
cmp
push
andb
inc
pop
push
outsl
hlt
js
inc
loope
in
stos
adc
movsl
call
inc
ds
mov
inc
push
inc
inc
xchg
lcall
nop
mov
mov
icebp
inc
pop
jg
lea
out
push
mov
cs
fisttpl
push
sbb
jecxz
dec
popa
daa
cld
mov
mov
jge
cmp
push
inc
jle
repz
adc
outsl
ret
inc
je
fs
aaa
aad
imul
leave
add
jge
inc
mov
mov
popa
movsl
add
cmp
ss
push
mov
dec
pusha
jge
roll
popa
dec
adc
cwtl
push
mov
lea
sbb
ja
arpl
or
fiaddl
rcll
in
xchg
xor
jecxz
sbb
or
loop
lea
arpl
jmp
daa
add
in
pop
sub
xor
gs
out
popa
sbb
cltd
stc
add
push
mov
out
pop
icebp
mov
xchg
mov
rcll
mov
int
outsl
lret
xchg
xor
sub
pop
cli
xor
sub
dec
call
jl
dec
push
adcl
insl
pop
pop
fbstp
stos
out
push
outsl
and
add
daa
xor
mov
sarb
popa
ss
arpl
or
cmp
push
jmp
add
mov
movsb
sub
add
add
or
popa
ds
sub
mov
mov
jno
add
push
aaa
popa
bound
mov
push
daa
rcll
adc
and
xchg
jg
cli
ss
shrb
mov
push
push
inc
out
outsl
arpl
inc
cmp
gs
leave
push
mov
push
push
andl
pusha
mov
pop
dec
or
mov
int3
ja
mov
sahf
lods
dec
add
dec
mov
pop
and
shll
xlat
jg
mov
jecxz
outsl
pop
test
pop
sbbl
mov
mov
les
xchg
scas
loopne
ljmp
movsl
divl
or
or
push
fwait
imul
sar
dec
std
loopne
popf
call
mov
mov
sbb
shrl
add
shlb
xor
arpl
mov
leave
rcr
std
add
ss
aad
inc
xor
repnz
imul
mov
fdivrp
and
inc
clc
fisttpl
mov
push
imul
sub
dec
mov
jno
mov
call
pop
mov
cltd
dec
out
lret
lcall
xor
mov
mov
sbb
in
jns
push
xor
dec
pop
into
jns
lds
fsubl
mov
fistpl
inc
jecxz
jle
fisubrs
repnz
icebp
lods
pop
cmp
loopne
pop
push
lahf
jge
sbb
adc
adc
loopne
gs
int3
mov
lret
jg
jo
add
popa
xchg
jno
subl
xor
inc
inc
and
xchg
or
adc
inc
imul
dec
repz
addr16
lds
mov
scas
inc
dec
insb
add
sub
jo
sahf
cmpsl
imul
xchg
jg
sub
imul
fsubrl
sub
rcl
rorl
jns
jbe
rorl
jno
sahf
mov
dec
inc
sbb
pop
lock
inc
leavew
add
loope
xchg
mov
sub
dec
add
mov
icebp
xlat
mov
adc
xor
icebp
ljmp
mov
clc
cmpsl
mov
shrl
fwait
loope
lret
or
popa
out
jl
std
pop
pcmpgtb
xchg
in
cmp
int
and
dec
ljmp
mov
push
dec
outsb
cmp
popa
dec
jle
dec
idivb
stos
pop
cld
sub
lock
sub
mov
and
add
adc
mov
cmp
xchg
in
fdiv
adc
xor
scas
pop
scas
xchg
nop
in
or
inc
ss
popa
cmp
xlat
jne
sbbl
push
loope
icebp
scas
mov
add
pusha
fadds
inc
or
popa
and
in
lret
fs
popa
mov
mov
xor
stos
bound
frstor
mov
add
ljmp
dec
jb
popa
lock
mov
in
cwtl
inc
inc
popa
test
scas
lret
mov
push
xor
or
test
fabs
stc
arpl
popa
cmp
fst
in
mov
mov
popf
mov
in
popa
out
sbb
shl
xor
scas
imul
xchg
loope
jmp
out
popa
fistps
mov
cmpsl
popa
repz
adc
popa
fiadds
push
rcrb
popa
sarl
sbb
lods
jg
lahf
and
popa
sub
jecxz
cltd
cmpsl
popa
into
jg
mov
dec
incb
pop
dec
jmp
popa
insl
or
xlat
mov
adcb
test
mov
mov
mov
aam
in
pop
imul
leave
cwtl
subb
loop
xchg
outsl
push
mov
mov
and
clc
vpackssdw
cmp
movsl
bound
outsl
pop
inc
jmp
or
push
aad
jg
lret
dec
das
push
rolb
jp
and
lcall
mov
dec
and
mov
cltd
sub
popa
das
or
popa
ljmp
push
fiaddl
stc
loop
xor
popa
loopne
lods
push
jp
pop
std
popa
outsl
push
int3
mov
out
inc
push
stos
popa
mov
add
popa
sbb
jo
jne
popa
dec
pop
into
jl
dec
movsl
jg
lods
jbe
ja
pop
jecxz
aad
mov
or
ret
popa
sbb
push
inc
xchg
popa
push
out
add
jge
mov
je
mov
sti
push
out
loope
jbe
add
mov
in
add
js
ds
stos
fstpl
fidivs
pusha
popa
or
out
sub
dec
popf
fs
movlps
xchg
stc
cld
leave
push
popa
mov
std
mov
push
pop
mov
pop
insb
mov
sbb
test
sub
movsl
xchg
adc
popa
mov
sti
lcall
int3
and
das
add
loope
dec
xor
cmp
lahf
bound
popa
jg
sub
xchg
addb
popa
jae
dec
dec
loope
icebp
mov
mov
push
rorb
lds
dec
adc
movsl
scas
fiadds
adc
sub
fists
or
push
aaa
inc
movsb
popa
les
imul
inc
lea
popa
mov
mov
inc
fiadds
mov
cli
addr16
mov
add
mov
mov
popf
pop
fs
call
ret
cmp
jbe
popa
jg
jne
mov
popf
movsl
mov
cmp
pop
push
mov
sub
lahf
shll
dec
mov
add
out
in
sbb
sub
fwait
cmp
scas
test
mov
inc
xchg
ds
push
mov
lahf
xchg
mov
dec
mov
imul
cmc
imul
shrl
sbb
andb
lods
dec
hlt
xchg
and
and
push
popa
lock
sbb
sar
pop
push
loopne
sub
data16
jmp
sbb
lret
je
leave
pop
push
mov
into
push
loope
scas
jl
popa
cmc
out
jne
decl
adc
jmp
mov
mov
shlb
stos
add
sub
inc
xor
dec
jo
cmp
jecxz
ret
push
lcall
xchg
sti
add
or
mov
cmp
in
popa
stos
mov
popa
push
repnz
push
dec
mov
dec
andb
popa
stos
into
xchg
pop
rcl
shll
jmp
orl
popa
out
xor
dec
fldcw
mov
inc
aam
cmp
push
mov
push
fcoml
test
inc
jge
jl
loope
fdivs
arpl
pushf
test
xorb
cli
jae
ftst
or
mov
cmp
rol
cltd
out
fwait
loope
pop
sar
les
in
popa
js
sub
popa
xor
mov
jo
jmp
and
pop
cs
xchg
adc
test
adc
popa
orps
in
loopne
repz
mov
in
leave
popa
sarl
clc
imul
or
xor
fwait
mov
inc
cwtl
jmp
jo
push
cmp
adc
jno
popa
xchg
pop
nop
xchg
int3
repnz
cmpsl
add
insb
int
mov
shlb
mov
outsl
aad
lahf
xchg
adc
cmc
lret
adc
and
and
adc
or
popa
js
and
mov
addr16
das
push
push
pop
jge
pop
je
lcall
push
mul
mov
insb
pop
xchg
bound
jbe
xor
ret
outsl
cs
fs
sub
pusha
test
shrl
mov
xchg
inc
in
mov
lock
jecxz
stos
rcrb
cmp
mov
js
imul
mov
popa
pop
into
ljmp
call
or
mov
insb
mov
xchg
cltd
push
mov
loopne
fstl
xchg
push
enter
sub
fadds
or
dec
mov
dec
xchg
imul
popa
xor
xchg
std
popa
mov
inc
shll
stos
movsb
adc
repz
out
cli
push
add
out
popa
cltd
and
outsb
mov
sub
pop
popf
in
mov
sbb
and
xchg
andb
sarl
imul
jl
mov
lcall
cmc
stc
or
popa
enter
mov
ljmp
sbb
mov
inc
popa
and
push
aam
movsb
mov
orb
push
jae
jne
lds
ficoms
mov
mov
popa
cmpsb
addr16
lret
popa
ret
sub
pop
xor
fimuls
jb
stos
mov
testb
fcmovne
call
popa
lods
repz
sub
fwait
scas
popa
xchg
daa
xor
popa
mov
repz
popa
and
jmp
cli
push
aam
repnz
loopne
push
push
cmpsl
popf
nop
or
mov
xlat
popa
inc
lock
roll
jecxz
fwait
sbb
mov
xlat
mov
jle
xor
jae
lret
cmp
pop
imul
xor
mov
popa
push
pop
jp
popa
xor
xchg
in
cmp
popa
pop
cltd
jmp
popa
and
loope
popf
or
adc
cmc
loope
push
jb
pop
sub
fs
mov
addr16
fwait
push
add
lods
arpl
add
push
sbb
adc
or
ds
cmpsl
loop
daa
popa
pop
pop
inc
cs
lcall
jno
xor
jne
push
movsl
push
popa
lods
jbe
dec
out
xor
xor
lret
and
inc
shll
js
push
cmp
push
ficoms
mov
mov
les
pusha
popf
adc
gs
adc
fdivrl
popa
push
lea
xchg
inc
shll
cs
mov
fsts
popa
mov
cltd
cmp
rcl
pop
inc
shrb
ja
ds
sbb
pop
sub
xchg
or
fstpt
test
andl
sbb
std
inc
mov
stc
adc
std
icebp
and
leave
cmp
jnp
xor
sub
repz
loopne
jl
pop
pop
or
cmp
fnstenv
dec
add
andl
dec
sub
rorb
lock
ljmp
sbb
mov
xor
mov
add
xor
popf
shrl
popa
out
mov
popa
fs
mov
subb
gs
mov
jmp
lods
orb
daa
popa
and
add
and
mov
push
inc
sahf
sub
popf
shll
adc
insb
sub
jmp
test
loop
inc
lods
insb
push
cltd
outsl
stos
cmp
jnp,pn
popa
dec
test
loop
popa
aam
mulb
out
or
sbbl
mov
pop
jg
mov
sahf
iret
popa
lea
cmp
insl
or
inc
daa
out
dec
xchg
jo
push
add
cld
and
bound
rorl
pop
pusha
fucomip
hlt
mov
mov
aas
mov
sub
insl
aas
adc
test
dec
cvtps2pd
iret
mov
jle
xlat
test
sbb
mov
into
jle
jmp
sbb
rclb
stos
sarl
jge
xchg
addr16
add
jmp
and
jge
push
repz
mov
adc
daa
pop
outsb
add
lcall
ror
movsb
vmovaps
adc
addr16
cmp
and
adc
cmpsl
rclb
xor
xor
icebp
addr16
das
cmp
pop
popa
in
xor
sub
sub
mov
add
sti
cmpsb
je
daa
push
jmp
add
mov
jle
cmp
xchg
icebp
push
gs
dec
push
cmp
rcr
leave
stos
push
adc
test
add
inc
test
prefetch
fidivrs
negb
inc
bound
pop
in
lods
imul
push
mov
adc
jle
mulb
inc
fs
in
mov
mov
adc
push
ret
js
mov
leave
jmp
out
ljmp
loopne
mov
shr
mov
jns
or
mov
and
inc
pop
mov
pop
jecxz
test
mov
js
dec
xlat
out
jns
push
pop
rolb
and
push
movb
jbe
mov
add
shl
sub
xchg
nop
cmp
lds
and
test
in
rep
in
scas
iret
ud1
loope
adc
ss
push
pop
in
dec
mov
arpl
push
insl
loope
popf
jo
sbb
or
lret
dec
shrb
clc
pop
loop
push
pop
sub
gs
sub
sbb
jmp
push
pop
loop
lods
push
jo
dec
repz
mov
shll
bound
sbb
popa
jns
xchg
push
repz
dec
xor
scas
pop
xor
loop
repnz
dec
mov
ljmp
xchg
pop
or
and
icebp
cmpsb
cmp
es
and
jae
in
push
and
cmp
into
popa
lret
movsb
rorl
mov
dec
popa
push
js
inc
inc
ret
inc
stc
push
movd
popa
add
icebp
mov
pop
pop
popa
fdivr
lods
adc
movsl
adc
popa
cmp
and
out
popf
or
and
hlt
fcomps
xor
test
jg
js
and
test
cs
jle
negb
mov
repz
jl
mov
imul
arpl
sub
sub
mov
xor
lods
jg
xor
mov
fadd
icebp
jmp
imul
popa
jp
insb
adc
loop
xchg
adc
popa
mov
mov
aam
inc
xor
mov
cmp
movsb
push
push
cmc
sub
mov
sahf
sarl
fs
ret
nop
jg
add
scas
push
adc
push
lret
inc
rcl
mov
popa
inc
add
inc
or
loope
lods
jle
gs
cld
dec
jno
xchg
xor
pusha
push
and
mov
push
jns
jb
adc
jne
mov
jecxz
outsb
mov
dec
outsl
cmpsl
and
push
int3
or
and
pop
inc
rolb
jp
or
cmp
xor
fsubr
cli
stos
jl
add
xchg
sti
sub
jns
lds
or
mov
loopne
mov
insb
jge
aad
popa
outsb
push
int
jb
popa
xor
pop
jge
xor
or
movsl
in
mov
pop
add
aad
pop
cmc
mov
cmpsb
add
pop
and
out
push
test
inc
enter
jge
xorl
jno
cmp
cmp
popa
or
cmp
faddl
sarb
cmp
subb
push
lds
fdivp
out
push
xor
mov
punpcklwd
and
popa
mov
mov
push
popa
inc
lcall
inc
dec
popa
inc
jmp
repz
popaw
cmp
mov
sub
pushf
mov
loope
call
push
popa
sbb
push
cmpsb
popa
xchg
cltd
xor
jne
sub
push
push
popa
js
cmp
jae
loope
imul
jbe
or
or
arpl
sub
push
insb
mov
mov
popa
test
arpl
xchg
repz
je
push
cld
popa
or
pop
cli
mov
dec
cmpsb
mov
adc
mov
fs
and
out
mov
jbe
sbb
ja
and
inc
mov
inc
dec
popa
pop
popf
sti
cmp
fidivl
xlat
mov
jae
mull
je
popa
or
or
dec
popa
ja
push
cmc
jb
imul
loopne
roll
cmp
inc
lea
repz
mov
add
jge
cmp
clc
scas
fs
stos
add
shrb
jle
ret
punpcklwd
jbe
mov
popa
das
inc
sbb
jae
jo
or
shll
call
jae
sub
adc
mov
mov
fimull
std
inc
into
adc
scas
dec
jle
xor
loope
dec
push
mov
adc
jo
rcr
or
adc
mov
cmpsl
popa
xor
mov
iret
popa
ret
scas
mov
popa
mov
ret
or
and
and
xchg
sub
insb
bound
push
mov
fwait
les
sar
imul
cmp
push
dec
inc
js
fistps
jo
daa
pop
scas
or
pop
iret
cltd
popa
insl
lret
pushf
sub
popa
out
out
sub
stc
inc
les
popa
and
sbb
cmp
push
mov
dec
aad
les
mov
jle
repz
pop
std
imul
pinsrw
sbb
and
popa
pushf
jns
in
ja
jne
fs
push
int
stc
cltd
sub
popa
mov
stc
and
sub
frstor
scas
andb
popa
xchg
or
fldenv
dec
aad
out
mov
insl
pop
mov
cli
sti
lea
popa
call
loopne
bound
adc
cmp
enter
cmp
and
popf
and
and
insb
pop
or
sti
mov
sbb
shrl
push
andl
lahf
push
sub
xor
stc
sbb
popa
arpl
add
movsb
outsb
push
jnp
push
rclb
clc
icebp
adc
stos
ss
adc
testl
jbe
movsb
loope
popa
lcall
iret
popa
and
nop
inc
shrb
popa
outsl
and
xchg
add
jge
icebp
and
mov
loope
and
mov
loope
dec
jbe
sbb
dec
popa
mov
jb
int
sbb
popa
or
in
popa
pop
insb
fdivrs
dec
xchg
adc
repz
rclb
cli
ds
loop
xor
out
push
scas
popa
cli
sub
and
and
in
or
dec
sub
cwtl
test
shll
adc
out
and
adc
shr
cmp
add
jl
sarb
xorb
lret
in
inc
out
popa
mov
pop
push
adc
popa
mov
in
fs
js
lret
sbb
ret
adc
lds
mov
sub
jp
fsubl
jns
adc
jle
mov
mov
mov
popa
xchg
pop
lods
push
int3
in
stc
shlb
pop
push
mov
mov
mov
shll
loope
flds
in
inc
mov
out
sarl
notb
bound
xchg
jl
test
push
jecxz
dec
je
into
popa
mov
push
xor
popa
push
rcr
sbb
inc
cltd
popa
inc
mov
out
cmp
sbb
jnp
xchg
pop
andl
rorb
dec
loop
push
pop
xchg
scas
cltd
stos
int
inc
ficoml
cmc
push
inc
popf
mov
mov
add
and
mov
popa
mov
popa
jbe
ret
add
add
inc
movsb
pop
leave
divb
cmp
xchg
popa
add
je
fsubl
test
ss
and
icebp
sub
lahf
popa
out
mov
xchg
popa
or
incb
addb
clc
fnop
arpl
mov
and
fwait
dec
popa
out
xor
lea
in
popa
sub
stos
imul
xor
inc
loope
pop
mov
sahf
bound
rcl
ja
mov
add
aas
out
mov
jg
inc
cmp
iret
jo
bound
fcomps
rcrl
pop
ficomps
inc
lods
es
adc
cmp
mov
cli
push
les
add
mov
pop
lret
popa
fdivrs
test
adc
inc
mov
sub
lds
aas
jo
out
xchg
dec
cltd
fdivrl
popa
jecxz
sti
iret
fwait
std
xchg
popa
jp
sbbl
xor
sbb
ja
adc
cmp
dec
pop
dec
mov
add
ret
loope
lock
push
xchg
movsl
int
popa
fs
pop
dec
inc
sub
lods
popa
hlt
fiaddl
aad
movsl
nop
cltd
adc
popa
imul
sbb
in
repnz
in
jge
add
ss
sti
popa
jo
jle
xor
imul
popa
ret
jnp
fildll
mov
pop
add
xchg
sbb
out
and
lret
int
lcall
lahf
scas
xor
aaa
push
dec
cli
push
pop
aad
popa
sbb
jp
rorl
test
ljmp
arpl
mov
popa
push
jl
jg
cmp
popa
mov
imul
pop
cmpsl
jg
mov
mov
and
jmp
sub
xor
loop
aas
fs
scas
ror
cmp
xor
pop
popa
cmp
sbb
jle
add
mov
pop
fs
xchg
shl
icebp
sub
push
adc
sub
add
js
cmpsb
popa
repz
jecxz
popa
pop
push
loope
sbb
jno
xchg
xorb
and
dec
das
fimuls
bound
daa
jne
orl
stos
or
addb
loope
xchg
jle
mov
mov
dec
push
inc
dec
popa
inc
cmpsb
add
inc
fsubrl
inc
or
sub
icebp
pusha
test
dec
stos
shll
mov
mov
jnp,pn
jo
shrb
lahf
xchg
sbb
not
mov
lret
shr
jae
inc
mov
scas
cli
and
mov
adc
popa
jo
or
popa
sbb
loop
out
jae
lret
das
cmc
and
cmp
rorl
cmp
aad
dec
cmc
push
mov
addr16
mov
popa
mov
lret
icebp
shll
popa
push
xor
sub
jne
xchg
and
insb
sbb
dec
sub
test
mov
jbe
cmp
lods
jo
sbb
in
fcomps
push
lret
pop
fsubl
jo
pop
jbe
adc
call
stos
stc
pusha
mov
inc
popa
lcall
push
push
cltd
lock
lock
push
add
popa
shll
enter
aam
aad
fildll
popa
inc
fidivl
inc
sbb
in
cmp
xor
jg
jae
jg
popa
mov
sub
in
ret
jb
fwait
pop
dec
aaa
mov
push
fsubs
push
pop
xor
sub
jns
in
popa
jle
faddl
inc
cmpl
sbb
mov
sahf
and
sub
loopne
bound
popa
jp
lret
push
mov
add
add
mov
subb
pop
outsl
les
loope
in
cmpsl
mov
mov
addr16
mov
mov
xchg
lods
clc
push
cmp
xor
dec
mov
icebp
sbb
popa
lret
cmc
xchg
ror
stos
mov
jno
dec
clc
subl
popaw
xchg
es
mov
jge
ds
ljmp
test
lret
dec
clc
and
push
aas
inc
inc
cmpsl
fimuls
jge
fwait
xchg
loop
ss
sub
push
xlat
add
inc
test
ja
popa
add
ds
or
xor
das
dec
dec
pop
jnp
into
mov
aam
push
mov
popa
mov
sub
andl
mov
and
pushf
xor
dec
daa
push
repnz
gs
popa
testb
or
and
mov
std
adc
rcrl
arpl
mov
cltd
jae
out
xor
cmp
jecxz
sub
add
xor
lods
popa
cwtl
clc
xchg
cmp
cmpsb
jmp
scas
mov
pop
or
popa
pop
ficomps
mov
dec
mov
int3
push
xchg
ret
fs
add
jecxz
adc
xor
popa
mov
jne
rcr
push
outsl
and
jnp
adc
add
push
seto
imul
out
add
mov
dec
cmp
insl
inc
mov
xor
cmpsl
jo
add
cmp
dec
cmp
xchg
movsl
outsl
call
loopne
addl
int3
dec
xlat
and
push
mov
mov
es
gs
adc
hlt
and
ret
mov
cs
mov
sub
psadbw
xchg
push
mov
add
faddp
gs
dec
inc
mov
inc
or
push
sub
test
jge
fmuls
dec
mov
inc
movsl
test
xorb
fmuls
cmp
sbb
mov
lds
jl
ss
xor
paddusb
out
or
stos
loop
cwtl
les
inc
cmp
mov
sbb
jno
fisubrs
mov
aad
shll
fdiv
cltd
sbb
xchg
and
mov
es
and
or
popa
popf
mov
mov
popa
cmp
lahf
daa
xchg
popa
lock
jle
out
popf
and
sarb
insb
movsb
js
aaa
push
pushf
add
mov
out
push
call
enter
adc
sahf
jbe
sub
addl
sub
mov
popa
cli
dec
xor
out
out
jns
cltd
xchg
push
popa
bound
test
imul
lret
jmp
popa
and
outsl
mov
popa
pop
pop
cld
fcomip
mov
mov
xchg
call
popa
cli
dec
inc
in
scas
data16
out
cltd
lds
insl
leave
cmp
jno
jne
bsr
pop
push
jg
lahf
jo
fxch
or
cmp
aaa
mov
aad
or
inc
cmp
lods
jmp
popa
mov
jns
out
jae
std
push
lahf
jl
mov
icebp
outsb
jg
sub
das
dec
mov
stc
dec
testb
and
lods
cmpsl
bound
jl
daa
rcrl
adc
fcom
xchg
dec
leave
jne
and
jle
pop
movsb
sbb
mov
lods
dec
mov
inc
or
rcr
decb
fisubrs
pop
add
loope
arpl
jnp
rclb
push
and
push
lahf
scas
adc
out
jo
aaa
push
dec
aad
xchg
push
push
fisttpl
rclb
inc
mov
mov
int3
mov
push
popa
bound
mov
xchg
insb
mov
int3
and
pop
sub
popa
jne
push
dec
mov
icebp
loope
dec
out
dec
loope
jo
cmp
xor
xchg
xor
test
fbld
or
negl
popa
gs
jl
pop
cmp
test
xlat
leave
popa
jno
cmp
fdivs
pusha
sub
inc
xor
xlat
lds
aam
push
mov
xchg
or
sub
push
shll
arpl
orl
cwtl
mov
or
jle
or
out
adc
shrl
subb
faddl
rorl
xor
int3
aaa
frstor
in
lods
xchg
and
mov
mov
mov
fadds
enter
daa
xor
adc
rolb
mov
adc
inc
popa
jno
cli
mov
dec
or
jp
loope
fsubl
mov
xchg
stc
or
or
cmpb
fsubrs
insb
aad
xor
rolb
sti
inc
add
lret
push
popa
scas
loope
mov
sbb
mov
das
push
mov
rcr
or
cwtl
scas
pop
mov
popa
mov
icebp
gs
imul
sti
xchg
scas
adc
and
nop
adc
inc
mov
out
sahf
cwtl
loope
mov
xchg
jbe
add
mov
popa
call
cmpsl
push
push
data16
mov
sub
shl
mov
dec
jno
movsl
jp
stos
enter
movsb
cmpsb
popa
xor
mov
popa
sub
cmp
shll
dec
jo
xchg
imul
setns
bound
and
inc
pusha
popa
in
addr16
pop
test
loope
popa
xchg
je
fisubl
arpl
pop
jmp
cs
popa
cmp
sub
mov
outsb
stc
icebp
push
jae
inc
daa
sbb
add
xor
sarl
outsl
cmp
inc
rcr
popa
pop
dec
pop
dec
jns
mov
and
loop
mov
xchg
cli
mov
fisttpll
adc
sbb
pop
hlt
popa
ljmp
adc
lock
popa
ljmp
push
pusha
pop
cwtl
rcll
popa
imul
fs
rorl
loopne
rcrl
mov
push
repnz
push
aas
mov
lods
imul
fs
xor
jne
push
dec
mov
sahf
ficompl
adc
lcall
loope
jns
dec
popa
sub
aad
fisttpll
mov
fldenv
push
popa
push
fstpt
jp
mov
mov
mov
sbb
inc
imul
add
mov
xor
dec
insb
lods
jl
mov
xchg
out
mov
mov
mov
cwtl
cmpsb
shlb
cltd
cmp
icebp
imul
and
mov
jnp
jns
cmpsb
and
hlt
jmp
imul
loop
or
xchg
popa
mov
xor
and
jecxz
xorl
xlat
mov
mov
xor
cli
insb
fucomi
popa
lcall
cmpsl
push
adc
push
cltd
ret
lcall
popa
push
out
sub
fsubrl
cltd
popa
cmc
out
push
mov
mov
mov
lea
lods
xor
aam
outsl
pop
movsb
aaa
out
outsl
test
mov
pop
imul
adc
jmp
test
outsl
mov
adc
add
add
push
pop
pusha
jns
sbb
mov
xor
push
insl
lods
fiaddl
popa
mov
dec
das
sub
and
xor
mov
loope
or
xchg
sub
push
das
stc
jae
cmpsb
in
call
popa
sub
scas
cli
in
mov
and
stos
inc
pop
mov
sub
xchg
push
movsb
test
xorl
cwtl
repz
ret
les
rclb
ljmp
popa
cld
push
cwtl
add
clc
aad
repnz
fstl
and
dec
mov
push
es
in
lcall
mov
out
or
mov
fnsave
dec
icebp
roll
add
adc
inc
mov
enter
insb
xchg
outsb
mov
popa
inc
ja
jle
mov
sbb
sahf
dec
or
ret
sbb
add
addl
or
add
dec
addr16
cmc
pop
imulb
jle
mov
sbb
mov
fcomps
mov
call
popa
idiv
xorb
and
int3
hlt
dec
subl
mov
cwtl
jmp
push
popa
lea
adc
push
sti
bound
push
cmp
dec
ljmp
popa
or
add
loope
outsl
jg
stc
shlb
test
push
adcl
movsb
adc
outsl
popa
out
mov
fwait
or
loop
jge
dec
push
xchg
fucom
or
jns
es
hlt
sub
xor
cli
sub
cmp
popa
stos
mov
cmc
or
rorb
aas
pop
mov
mov
in
xorb
sbb
dec
jge
lds
inc
xor
dec
ljmp
arpl
mov
mov
jle
nop
lahf
sub
jecxz
popa
das
cld
jb,pt
sbb
cltd
xor
movl
sub
cmp
xchg
sbb
out
outsl
ja
lods
test
dec
lea
xchg
xor
ljmp
clc
xchg
fimull
arpl
pop
andl
adc
pop
push
xlat
sub
scas
jge
insb
addb
loope
pusha
cld
in
fs
sbb
inc
jmp
xchg
je
popa
mov
lret
and
bound
fsubs
sbb
inc
popa
lods
test
mov
xchg
mov
sub
popa
fnstcw
mov
cmpps
pop
push
lahf
popf
xlat
popa
aad
and
inc
rclb
and
add
mov
popa
mov
xchg
fmulp
push
andl
xor
sbb
popa
enter
test
xor
jbe
out
xor
ds
cli
les
lahf
cmp
fs
push
stc
stos
popa
push
add
cmp
popa
mov
mov
cld
jno
and
sbb
lods
xchg
sub
sahf
fwait
dec
sbb
mulb
fisubrs
imul
and
or
xchg
daa
aaa
push
mov
std
shr
push
cmp
imul
xchg
lea
add
movsb
adc
loopne
arpl
and
clc
inc
nop
mov
fildl
les
popa
jbe
push
pushf
cmp
test
ljmp
adc
popa
int
fiadds
mov
cli
pushf
popa
pop
xchg
jg
inc
gs
inc
pop
ret
adc
jb
mov
popa
stos
fisttpll
push
pop
jl
loop
jecxz
dec
cmp
popa
hlt
icebp
lods
xchg
les
bound
sub
inc
shlb
push
lock
mov
sbb
sbbl
add
mov
jge
scas
xor
mov
je
add
fldl
test
mov
add
pop
mov
sbb
mov
or
push
adc
or
and
ret
add
push
sbb
popa
pop
jae
shlb
adc
lahf
scas
les
xor
inc
mov
xor
sarl
sbb
jmp
insl
popa
jg
pop
andl
xor
popa
daa
stc
xchg
inc
ja
lea
sub
mov
ss
andb
lock
inc
sub
sbb
mov
inc
inc
subb
popf
ds
adc
add
xchg
pop
enter
shrb
lods
mov
loop
push
xchg
add
jo
stc
jl
lahf
popa
lea
clc
push
frstor
inc
mov
push
fiaddl
popa
xchg
nop
dec
jae
mov
movsb
popa
ffree
inc
aas
pop
cltd
bound
ret
fcoml
gs
dec
popa
pop
clc
arpl
popa
pop
loop
jp
pop
lret
sti
popa
and
scas
cli
gs
cmp
popa
jns
stos
popf
jne
cmpsb
lcall
xchg
mov
add
xlat
test
or
popa
adc
jne
fs
insb
clc
pop
jno
ret
pusha
mov
popa
lcall
xorb
jo
mov
adc
movsb
clc
aas
mov
sbb
push
jecxz
inc
ss
push
cmp
xor
fs
aaa
shrl
xchg
cmpl
dec
scas
jns
insb
call
fisubs
insb
aas
cld
jb
pushf
push
test
popa
stos
xor
mov
push
pop
enter
aad
or
lock
out
jno
jo
cmpsl
pop
in
push
js
enter
mov
xorb
mov
iret
mov
shlb
mov
test
pop
imul
push
jne
aas
pushf
cs
push
and
add
mov
popa
or
pop
mov
jl
mov
ds
test
call
sarl
push
popa
sub
lock
in
icebp
adc
in
sub
outsl
jnp
pusha
add
jmp
adc
in
cmp
iret
movsl
aam
bound
push
sub
out
leave
push
bound
xor
mov
and
pop
push
xchg
aaa
das
bound
les
dec
jg
testb
push
mov
mov
adc
or
fwait
add
das
test
stos
mov
add
stos
and
jl
inc
popa
ret
xor
popa
sub
lock
or
mulb
inc
popa
hlt
adc
scas
stos
jbe
inc
outsb
ret
loop
push
lds
sub
and
and
dec
popa
test
popa
xor
clc
out
adc
cmp
push
fidivrs
ljmpw
ljmp
pop
jno
cmp
and
inc
icebp
das
outsl
xchg
dec
mov
mov
lret
popa
aas
mov
out
pop
aam
lock
ja
dec
mov
clc
fwait
mov
jp
jmp
in
xchg
shrb
sahf
imul
mov
outsb
es
pop
cmp
pop
popa
cld
lds
adc
dec
pop
push
mov
mov
movsl
rclb
push
lahf
mov
jb
test
imul
cmc
sbb
pop
popa
test
lea
fistpll
mov
jecxz
es
leave
adc
or
test
sbb
mov
xchg
movsl
ficompl
addr16
pop
arpl
mov
push
mov
call
std
popa
or
insb
jo
fidivl
jae
push
popa
enter
mov
pop
jae
jmp
bound
push
ja
dec
sub
dec
push
ret
popa
icebp
movsb
je
ljmp
dec
mov
popf
dec
jbe
ret
and
ljmp
pop
repz
or
scas
lret
fs
pushf
imul
ds
jle
dec
aad
popa
cmp
xchg
js
xchg
mov
psllw
pop
sti
sub
xor
pop
cmp
jp
xor
in
mov
fadds
jp
sbb
dec
sahf
inc
call
aad
mov
loope
insb
sub
bound
xor
mov
or
xchg
or
add
notb
lea
popa
mov
cmp
xchg
test
divl
push
stc
aas
push
xchg
int
pop
push
lret
pop
test
add
pop
popf
loope
cmc
add
popa
xlat
adc
cmp
sub
mov
cmpsl
call
lods
cmpsb
inc
xorb
stc
add
xlat
and
mov
stos
aaa
popa
and
inc
xchg
jne
xor
and
in
loope
mov
inc
pop
cmp
stos
popa
dec
mov
xorl
daa
js
test
xlat
imul
xchg
dec
arpl
rorb
mov
adc
aam
mov
sub
cmp
popa
xchg
sub
popa
mov
movsb
scas
das
sbbb
mov
hlt
push
and
popa
pop
arpl
sahf
fimull
rorl
push
jae
shrl
inc
mov
inc
arpl
lret
mov
inc
mov
adc
aaa
nop
pop
scas
push
popa
test
shll
repz
lea
nop
and
cmp
out
sbb
popa
push
in
xchg
cmp
xchg
jecxz
scas
xor
mov
jp
pop
push
dec
jae
mov
mov
popa
test
and
jmp
dec
popa
int
insl
fmul
mov
pop
push
mov
popa
bound
dec
dec
sbb
mov
inc
jmp
scas
xor
sub
push
jo
sbb
jb
je
data16
fsubrs
mov
popa
bound
out
int3
adc
popa
push
test
sub
ret
add
int3
inc
das
mulb
mov
xorb
cltd
pop
mov
pusha
das
addb
and
push
les
add
roll
sub
in
mov
popa
imul
dec
test
adc
loope
cli
aam
fucomi
sahf
in
test
sti
dec
mov
push
shl
inc
cwtl
add
aam
inc
js
fidivl
sub
pop
pusha
jle
rolb
add
or
subb
enter
mov
cmp
hlt
jo
mov
fs
push
push
xor
fiaddl
cltd
jp
int
popa
aaa
mov
sbb
ss
lods
ret
ljmp
push
adc
sbb
inc
dec
scas
xlat
xorl
fdivrs
lods
pop
jo
adc
push
mov
cmp
rcrl
and
enter
outsb
inc
popa
test
pop
and
mov
xor
push
insb
popa
or
or
popa
adc
xor
popa
shrl
loop
mov
mov
jb
stos
sub
jns
or
movb
sub
cmp
jo
push
lret
movsl
popa
stos
sbb
xchg
popa
xor
add
add
jmp
push
enter
add
mov
imul
pop
neg
loopne
mov
push
popa
or
mov
outsl
hlt
sub
int
xchg
dec
xchg
imul
arpl
popa
lret
fstps
lds
lods
aaa
xchg
or
pop
jecxz
jno
hlt
aas
xor
mov
andl
jb
imulb
cmpsl
xor
shlb
rcr
popa
pop
jb
lods
mov
outsb
push
out
out
cmpsl
dec
lret
push
sbb
fcomps
add
jp
mov
movsl
xchg
sbb
add
fs
push
outsl
xchg
test
xlat
out
fwait
dec
loope
cmp
jne
mov
xchg
dec
int3
mov
popa
fsub
push
orl
imul
pop
mov
pop
test
lret
cmc
dec
aaa
inc
popa
outsl
dec
cwtl
imul
in
xor
mov
roll
jo
push
sub
cmp
adc
inc
sarl
mov
fnstenv
push
das
aas
dec
push
pop
mov
and
inc
dec
andl
xchg
int3
cmpsl
push
dec
xor
lock
fs
xchg
push
sbb
popa
jge
mov
shlb
popa
pop
pop
test
fdiv
jbe
xorl
dec
lahf
xor
bound
sti
mov
add
pop
ja
fidivl
or
out
push
call
jns
test
das
pop
movsb
push
imul
loope
fs
jbe
add
inc
in
test
mov
xchg
mov
inc
dec
mov
adc
dec
xchg
pop
mov
mov
add
fistpl
sub
call
gs
subl
popa
cmp
pop
sar
popa
leave
mov
mov
fsubs
sub
mull
sub
sub
imul
xchg
lahf
cmp
into
jo
mov
add
popa
push
push
mov
sahf
bound
cmp
push
sbb
das
jmp
add
mov
sahf
test
fs
mov
pop
jbe
push
test
jg
or
add
imul
add
pop
test
push
addb
add
mov
mov
sub
sub
push
daa
inc
sbb
popa
enter
mov
jae
popa
aam
filds
jo
pop
mov
mov
xor
inc
leave
dec
popa
xchg
stos
notl
movsb
or
popa
lret
add
popa
pop
scas
inc
jmp
shlb
ret
out
ss
arpl
pop
mov
bound
jnp
pusha
lds
jno
dec
popa
lret
adc
mov
mov
sub
hlt
nop
rcr
lock
sbb
std
into
jp
imul
nop
call
pop
or
test
out
icebp
push
ljmp
jg
mov
loope
fsubrs
cli
adc
inc
call
mov
mov
scas
out
test
ljmp
addb
cld
cmpsb
ss
fisubl
clc
jmp
mov
and
push
loop
mov
mov
xor
push
or
adc
icebp
inc
loope
loop
and
nop
popa
or
dec
je
std
pop
jmp
repz
outsl
mov
and
add
sub
mov
or
mov
test
das
sahf
jle
mov
jl
mov
mov
mov
dec
adc
popa
sbb
xchg
lldt
lds
or
cmp
fldt
sub
lock
fistpll
stos
mov
outsb
popf
popa
cmpsb
jp
enter
mov
pop
mov
lret
fs
pop
push
fldt
cli
and
mov
push
popa
lcall
arpl
and
imul
and
jne
enter
or
lret
repnz
popa
push
pop
mov
fldcw
cmp
mov
aad
sbb
push
popa
sub
lcall
xchg
cmp
aam
popa
cmp
rol
xor
sub
jbe
nop
popf
fsubl
stos
mov
and
sbb
lcall
out
call
inc
adc
push
ds
pop
lods
jns
outsb
loop
je
inc
pop
pop
pop
jl
lahf
int
and
adc
mov
mov
mov
push
mov
dec
vmwrite
call
mov
les
push
mov
and
clc
insl
cld
imul
push
negl
call
cli
sbb
jl
adc
or
out
popa
ja
aas
rclb
mov
cs
mov
in
xor
lock
push
popa
shll
sbb
xchg
out
pop
ja
aaa
loop
mov
clc
popa
cmp
mov
pop
push
lcall
push
lret
add
jnp
imul
xor
xchg
fs
icebp
nop
addb
fistpll
xchg
cmp
xchg
cmp
or
mov
into
arpl
mov
push
cld
popa
cmpl
jg
popf
xchg
bound
mov
sub
popa
stos
lahf
ret
int
mov
inc
popa
aad
mov
mov
push
add
in
iret
sub
insb
stos
cmp
in
lea
loope
fsubs
add
shrl
inc
cmp
cli
mov
call
cmc
fstps
mov
xor
popa
mov
rcr
dec
dec
test
push
pop
sahf
jno
popa
clc
sbb
push
push
popa
imul
ja
int3
ss
bound
scas
mov
arpl
out
and
pop
adc
mov
mov
pop
cmpsb
jne
test
jo
out
or
lcall
or
popa
mov
mov
fsubs
mov
mov
fldl
sub
hlt
mov
or
leave
mov
push
pop
ret
mov
and
jb
inc
dec
cmpb
aas
aaa
test
pusha
add
ja
imul
or
pop
das
mov
popa
adc
int3
dec
xchg
insl
or
in
out
xchg
xchg
add
call
push
das
xchg
nop
push
outsl
sbb
cmp
paddusb
popf
mov
popa
pop
xchg
js
fs
or
mov
jae
stos
sbb
idiv
mov
lock
popa
adc
imul
popa
ds
mov
push
imul
fstps
leave
sti
pop
mov
add
or
xor
popa
lret
mov
mov
mov
pop
popa
hlt
xchg
mov
push
sub
gs
inc
jbe
xor
mov
xchg
in
call
ja
lahf
sub
insl
fwait
fs
ficomps
adc
push
push
push
test
sti
popa
inc
xor
pop
iret
pop
int3
jo
or
loope
mov
jg
fisubrl
out
not
outsl
popa
xchg
jl
stos
jbe
lahf
imulb
outsb
test
in
rorl
or
clc
loope
dec
and
repz
xchg
rcrl
ljmp
test
pop
and
repz
adc
popa
dec
cmp
pop
sti
fdivrs
test
jbe
sbb
sahf
fwait
test
pushf
dec
mov
daa
mov
push
popa
lods
fistps
mov
jo
loopne
lock
enter
inc
mov
cmp
jns
xlat
pop
adc
inc
or
fsubrl
pop
ffreep
add
int3
decb
arpl
push
shll
movsl
icebp
call
std
dec
cli
dec
jp
mov
pop
sub
in
insb
lods
ret
test
inc
xchg
mov
jo
pop
inc
and
and
movsb
xchg
mov
loopne
fs
enter
pop
sbb
sarl
or
jbe
and
lods
mov
iret
out
fnstsw
mov
insl
cmp
mov
inc
pusha
cltd
gs
arpl
cmpsl
ss
cmp
sbb
xor
jg
popa
lods
sbb
iret
scas
adc
mov
mov
jl
mov
das
or
xchg
cmp
inc
popa
in
stc
mov
lds
or
dec
daa
jb
and
popa
fwait
pop
add
popa
cmp
mov
add
push
popa
stos
push
shl
xchg
fwait
adcl
popa
push
or
ret
popf
lret
popa
cwtl
ds
jo
inc
in
xor
xor
loop
cmp
mov
stc
pop
es
jg
loope
push
pop
inc
popa
js
out
dec
lock
mov
sub
or
mov
cmc
popa
adc
ljmp
mov
sub
iret
out
and
movsb
cmc
sub
jno
data16
int3
mov
fistpl
popa
out
cld
icebp
lods
pop
and
popa
dec
inc
or
xor
lahf
mov
popa
xchg
sbb
loope
shrb
xlat
xchg
xor
lcall
xlat
cmc
popf
xor
lret
subb
push
adc
add
pop
xchg
push
int3
xor
mov
jno
cmc
mov
adc
cli
movl
xor
add
insb
push
or
in
inc
cwtl
movsl
subl
sub
mov
mov
shlb
pop
push
popa
lods
pusha
lahf
push
sbb
inc
jg
repz
mov
ds
insb
mov
cmpsl
out
arpl
movsb
jae
stc
fldenv
cmpb
lods
jo
lret
scas
pop
sub
loope
pop
or
jge
inc
adc
je
fs
bound
push
add
inc
mov
pop
data16
or
xor
scas
mov
movsl
cmp
imul
stc
and
mov
sar
imul
or
fsubrs
push
inc
add
xchg
fstps
push
insl
leave
mov
scas
mov
std
ljmp
adc
and
in
inc
popa
sub
xchg
or
mov
popa
ret
adc
outsl
lret
pop
test
roll
out
fwait
popa
ljmp
mov
mov
popa
cmp
fwait
es
jae
bound
and
adc
mov
shlb
cmp
jbe
jp
loope
nop
push
cwtl
and
mov
fs
dec
cmp
or
pop
rcr
jo
icebp
sbb
inc
loope
adc
cmp
divb
test
jo
sti
jmp
sahf
cmp
leave
or
js
lea
out
data16
or
shrl
inc
add
ficomps
add
cmp
sahf
inc
mov
jge
dec
cmp
fstpl
mov
sbbb
jmp
iret
popa
pop
subl
ja
std
sti
mov
dec
jnp
subb
call
cs
mov
popa
in
std
mov
bound
adc
jnp
fsubs
pop
pop
mov
push
inc
arpl
je
mov
jnp
xchg
gs
das
clc
popf
mov
jbe
push
cmp
das
scas
bound
cltd
pop
popa
lds
or
add
popa
mov
lret
cmpsb
les
sahf
aaa
xchg
loope
fldl
mov
push
cltd
rclw
pop
jmp
jp
cmp
pop
push
popa
pop
subps
mov
lods
repz
clc
ret
shr
popa
xchg
mov
or
jno
cld
xor
adc
je
popa
decb
lahf
popf
xor
sbb
sahf
imul
push
aam
popa
jle
fmuls
popa
sub
sahf
dec
imul
pop
jne
jmp
xor
push
and
inc
mov
adc
bound
sub
and
cmp
mov
xorl
cmpsl
adc
inc
pop
cli
test
aas
bound
popa
les
adc
popa
xchg
add
aas
in
dec
popa
or
or
push
fwait
lcall
push
popa
repnz
jmp
sub
mov
call
pop
ret
mov
xor
cmp
loop
out
jle
call
dec
out
rcll
int3
popa
fistps
jb
test
push
in
push
push
movb
jo
cmp
mov
sbb
mov
xchg
jmp
outsl
and
mov
addr16
mov
mov
outsb
adc
out
out
movsl
outsl
je
sbb
jg
and
pushf
adc
loope
test
fldenv
cmp
data16
mov
popa
add
sub
jae
mulb
sub
fs
mov
and
sbb
fldenv
add
pop
sti
test
mov
inc
or
stos
movnti
mov
or
push
mov
sbb
les
in
jp
cmp
lock
lret
gs
sbb
scas
pop
stos
lea
mov
insb
lds
in
dec
push
movsb
lods
mov
insl
adc
dec
mov
jge
es
dec
mov
mov
sbb
out
mov
lods
leave
movsb
andl
insb
jle
sub
cmp
xchg
push
dec
sub
fdivr
mov
sub
daa
mov
mov
nop
aam
xchg
lret
inc
imul
jno
add
adc
jl
repz
ss
lret
inc
fnstenv
jge
stos
bound
mov
dec
cmp
lcall
dec
mov
out
and
loope
jo
das
fnsave
cltd
sub
sbb
xorb
in
bound
lods
gs
out
push
xchg
mov
sub
repz
fadd
dec
scas
rol
test
jmp
pusha
call
jmp
xor
mov
js
pop
xchg
setb
fsubs
shlb
xchg
jg
adc
in
pop
cli
ret
dec
and
jecxz
inc
cmp
mov
popf
cmp
cmp
mov
sbb
popa
xor
mov
mov
mov
cmc
push
fwait
in
pop
adc
pop
mov
adc
aaa
shll
andl
sbbb
sbb
xchg
popa
sub
mov
jbe
call
decl
aas
sub
ja
sub
insb
jbe
stc
jnp
xor
jge
pop
cltd
sub
xchg
popa
dec
out
mov
pop
mov
loope
dec
pop
push
and
push
sbb
jg
dec
xchg
sub
movsb
gs
shll
jl
lahf
add
sub
imul
xor
jle
stos
ret
pop
cmpsl
mov
mov
xor
incl
loopne
shll
sub
cld
and
xlat
rcrb
popa
push
pop
xchg
jne
cli
shlb
jo
mov
loopne
fldl
xlat
mov
cmc
cmp
mov
movb
xchg
pop
jg
popa
fwait
std
out
lret
jb
insl
in
jne
jg
and
xchg
stos
xchg
test
insl
jp
fs
jb
jno
sbb
cmp
inc
cltd
xchg
lock
xor
adc
mov
pop
outsb
push
mov
loop
sbb
sbb
and
pop
mov
cmp
fmuls
dec
mov
jb
movsl
jbe
push
sub
pop
xor
outsl
mov
cs
aaa
jnp
adc
mov
fadds
sub
mov
jnp
test
popa
push
mov
fidivrs
fxtract
popa
sbb
mov
inc
popa
aam
mov
mulb
pop
sub
addr16
lock
mov
popa
testb
jge
popa
enter
sub
aaa
popa
lods
mov
adc
xchg
inc
or
or
popa
inc
xor
add
cmpsl
rcrb
ja
call
sbb
loopne
jle
mov
clc
mov
mov
je
lods
idivl
mov
lcall
bound
dec
addr16
gs
xor
mov
lods
cmpsb
popa
scas
push
pop
xchg
outsl
outsl
inc
adc
inc
in
iret
push
sub
cmp
xchg
sarl
add
int
notl
int3
hlt
jp
pop
iret
sbbl
pop
sub
add
popa
fildll
push
shrb
cmpsb
popa
mov
dec
inc
push
jmp
popa
out
sub
dec
cwtl
inc
dec
popa
popf
fcmovne
lret
in
cmp
orl
pop
mov
xchg
sbb
and
popa
pushf
xchg
inc
inc
jnp
xchg
inc
popa
xchg
aas
cli
push
cld
push
sub
bound
stc
lcall
ja
xchg
pop
jle
pop
clc
loope
or
movsb
inc
popa
and
dec
outsl
dec
adc
bound
jo
pusha
icebp
mov
mov
and
dec
popa
jle
sahf
or
inc
jno
xchg
push
dec
fwait
in
popa
dec
imul
cmp
repnz
jg
sub
sub
popa
sahf
addr16
inc
lods
sbb
jmp
fs
repnz
ljmp
pushf
mov
and
jle
cmp
ret
jb
xchg
popa
in
mov
xor
jns
cmp
or
xor
cmp
popa
lods
push
pusha
outsl
lcall
jl
cmpsl
popa
mov
and
aad
rcrl
jno
pop
adc
cmp
push
xor
pop
sub
fnstenv
outsl
push
jns
hlt
add
and
cs
add
mov
popa
xchg
mov
dec
popaw
cwtl
cltd
dec
imull
inc
scas
lea
mov
push
aam
popa
int3
test
stos
call
fsubl
jo
repz
and
mov
sbb
pop
shrb
adc
sbb
mov
insl
mov
pop
xor
xchg
punpcklwd
sub
mov
jbe
and
dec
push
mov
mov
lock
jmp
or
sbb
jo
inc
sbbb
add
or
and
xchg
jns
dec
and
or
jg
nop
dec
pop
sahf
xchg
popa
test
cmp
mov
xor
add
stc
xor
stos
mov
xor
ret
mov
mov
je
jbe
push
loope
ljmp
xchg
sub
scas
mov
out
sub
test
add
dec
movsl
movsb
data16
stc
mov
fwait
gs
and
push
sub
sbb
xchg
jp
mov
das
inc
pavgb
popa
sbb
mov
popa
xchg
out
stos
popa
push
ret
cltd
js
or
roll
mov
inc
dec
push
and
insl
push
adc
in
sub
pop
xchg
std
dec
pop
dec
dec
xor
stc
cmpsb
scas
or
fisttpll
bound
jecxz
js
popa
loop
and
dec
cltd
push
arpl
jo
leave
adcl
icebp
loope
and
adc
das
dec
mov
loopne
sub
mov
mov
pop
movsb
imul
nop
loop
iret
pop
pop
leave
inc
jae
idiv
bnd
jle
jle
pop
dec
sti
jecxz
jae
push
push
adc
popa
sbb
xchg
mov
nop
test
dec
clc
mov
ret
ror
das
xor
lret
je
and
daa
xchg
push
xchg
leave
or
dec
mov
repz
xchg
movsl
rorl
stos
adc
call
mov
dec
mov
cmpsl
mov
ds
mov
or
outsb
jl
push
negl
lods
sbb
pop
add
std
dec
pop
mov
dec
arpl
jge
mov
ljmpw
mov
dec
repnz
stc
shl
add
mov
dec
mov
hlt
mov
sti
mov
mov
inc
push
lds
das
or
outsb
dec
outsb
movsl
or
mov
stc
xor
and
jbe
cmp
jns
cmp
dec
cli
aad
popa
pop
lret
call
jle
mov
cld
jb
movsb
je
data16
mov
imul
aas
or
add
sbb
jg
cld
fstl
out
mov
mov
imul
inc
jge
xchg
push
mov
mull
sarb
cmpsb
sbb
push
and
popf
call
xor
or
int3
les
stc
cmp
in
imul
lret
sahf
ljmp
adc
popa
sub
fld
in
daa
mov
js
movb
add
sbb
push
les
out
lock
test
inc
fisttps
mov
ja
cmp
popa
adc
data16
jb
roll
std
jge
xor
pop
xor
lods
dec
inc
arpl
pop
out
stc
cmpsb
jle
cmc
ret
xor
popa
adc
pop
fsts
ds
pop
int
fidivrl
popa
jbe
and
out
mov
fmull
ja
lea
push
ret
loope
clc
pop
push
addr16
cwtl
popa
test
icebp
lea
cli
nop
cwtl
insl
mov
adc
mov
mov
mov
orb
dec
fdivs
sbb
or
pushf
mov
ds
lret
bound
inc
push
dec
imul
js
lret
jo
mov
imul
aas
or
inc
jno
cltd
popa
sti
in
add
sub
xor
shlb
dec
xchg
add
xchg
ficoml
jae
push
outsl
imul
loop
pop
call
jbe
xchg
popa
mov
je
popa
push
imul
out
cmp
popa
lods
cwtl
pop
dec
movsb
pop
mov
insl
xchg
push
xorl
sub
popa
cmp
dec
fs
xchg
jl
cmpsl
adc
int3
fcmovbe
outsl
xchg
adc
aam
repnz
xchg
fs
push
inc
inc
cmpsb
xor
stc
pop
inc
fwait
and
popa
mov
jo
popa
notb
jg
dec
or
sbb
mov
push
subl
into
test
dec
popa
insl
pop
out
jmp
mov
out
mov
sub
adc
shrb
xlat
xchg
ret
call
cmp
inc
lods
popa
or
mov
popa
push
jo
mov
popa
jle
xchg
rclb
gs
add
mov
mov
daa
fistpl
aam
add
jl
fs
fbld
popa
cwtl
stos
test
popa
cli
or
outsl
pop
pop
cmp
popa
imul
sbb
negb
ret
jmp
push
hlt
shll
xchg
popa
mov
mov
repnz
lahf
mov
jmp
jbe
sbb
push
xchg
mov
mov
inc
repnz
lock
lds
sbb
popa
xchg
imul
mov
and
ficomps
xor
cmpb
popa
and
mov
sbb
mov
test
icebp
loope
int
sbb
jns
popa
test
addr16
popa
sbb
push
jge
movmskps
and
adc
dec
or
mov
out
sbb
inc
imul
jg
sysexit
mov
push
loope
dec
sbb
js
sbb
fbld
aad
cld
and
cltd
leave
popa
lret
lock
sbb
fcmovnu
popa
adc
icebp
mov
sbbb
sub
push
xor
cmpsb
cli
neg
fadds
popa
leave
sub
fwait
in
adc
sbb
xor
xchg
rorl
cmp
sbb
cld
inc
into
in
stos
lcall
cmp
mov
push
dec
sub
pop
add
loope
mov
pop
push
fstpt
mov
mov
cmc
mov
cmp
add
xor
xchg
gs
repnz
loope
test
sub
jg
popf
pop
out
ret
add
lret
pushl
push
sbb
subb
shll
add
popa
mov
push
mov
cmp
mov
push
mov
push
aas
sbb
out
inc
mov
das
push
popa
push
mov
test
add
lock
sbb
insb
cmp
lret
xlat
sbb
mulb
adc
cmp
push
in
roll
into
negl
xchg
fiaddl
dec
popa
push
fdivr
lcall
xchg
cmp
stos
sbb
rorl
push
jmp
lock
jg
stc
inc
xchg
lds
loopne
sbb
orl
in
xorb
mov
clc
popa
push
mov
mov
int
loopne
sarl
leave
push
shll
and
repnz
popa
sbb
add
adc
pusha
mov
or
adc
cmp
insb
cmp
gs
add
mov
pop
fsubrl
in
dec
insb
push
xchg
ds
inc
andb
fdivs
popa
outsb
mov
in
inc
repnz
pop
add
popf
popa
mov
out
movsl
add
int3
mov
lock
or
outsl
mov
movsb
gs
add
sar
popa
jb
repz
dec
shll
loope
xor
inc
jp
add
push
nop
dec
inc
mov
and
mov
sbb
test
jle
sub
fnstenv
sub
mov
mov
loope
loopne
push
sub
dec
push
cs
imul
sbb
dec
in
push
fs
js
into
ss
push
jnp
jmp
mov
xchg
xor
mov
outsl
in
int3
arpl
cmp
aaa
dec
les
hlt
popa
jp
jmp
dec
ret
scas
jl
cmp
arpl
lahf
adc
shlb
hlt
imul
fildll
xchg
push
loop
ljmp
sub
insl
lods
jb
pop
sbb
andl
clc
arpl
rclb
inc
jae
out
outsb
fs
xchg
push
in
pop
popa
push
push
mov
push
lcall
dec
out
mov
in
and
fdiv
cmpsl
data16
aad
mov
test
sub
mov
fwait
jle
mov
es
cmp
popa
adc
mov
cmp
xchg
leave
xchg
mov
inc
ficomps
jns
mov
popa
sbb
ficompl
xor
mov
adc
mov
mov
cld
jmp
lret
jno
mov
divl
jb
xchg
pop
sub
out
shr
xlat
mov
popa
xor
das
xchg
adc
jle
jo
andl
xor
mov
aad
rcrl
add
stos
bound
and
sbb
push
mov
mov
in
jg
sbb
mov
call
adc
aam
pop
xchg
popf
mov
test
push
pushl
mov
popa
pop
cld
sub
push
popa
imul
xchg
popa
jbe
or
daa
jns
push
cmp
lcall
popa
cltd
int3
add
jmp
inc
stos
cmp
mov
ret
pop
jp
mov
mov
fbld
jne
cmpsl
fdiv
jb
bound
pop
ret
clc
testl
movsl
sub
enter
or
cwtl
jo
mov
dec
xorb
xor
cmp
stc
dec
adc
std
lds
push
pop
inc
adc
js
and
mov
loop
cmpl
mov
frstor
xchg
popa
fildll
mov
jp
out
xor
loopne
lahf
cmp
orb
add
add
or
bound
cli
ret
rorl
jns
mov
or
shll
push
and
sti
in
mov
test
shlb
xor
les
hlt
mov
leave
pop
pop
dec
ret
pop
sbb
and
mov
popa
xor
mov
pop
frstor
push
sub
or
inc
xor
cwtl
ficompl
cli
fs
out
push
xor
cmpl
sti
push
scas
cwtl
sub
lea
in
popa
shlb
jns
sub
or
js
pop
inc
daa
and
add
arpl
clc
mov
adc
xchg
les
pop
push
cmp
push
pushf
jne
loop
fisttps
addr16
out
xor
arpl
pop
gs
popa
inc
incb
dec
push
cmp
nop
scas
or
push
js
data16
fs
popa
cltd
enter
test
sub
outsl
mov
lcall
dec
loope
sbb
lds
cwtl
pusha
daa
adc
cmpl
dec
push
popa
xor
pop
arpl
push
lea
enter
push
dec
mov
inc
int
in
or
and
and
std
pop
mov
sahf
out
and
dec
mov
inc
bound
mov
mov
inc
and
movsb
push
je
dec
jns
add
jnp
lock
adc
filds
bound
or
iret
outsb
insb
cmp
adc
std
aas
clc
pushf
rcrl
cmp
leave
ja
xlat
popa
lock
push
nop
jbe
gs
popa
lea
mov
ret
popf
add
cmp
xchg
lcall
cmp
data16
popa
jo
mov
repz
lret
popa
sbb
push
mov
stos
sub
icebp
mov
jg
lcall
sub
jb
lea
outsl
pop
or
and
cmp
pop
and
inc
popa
stos
fmull
popa
cmp
shrl
mov
subl
and
push
roll
mov
push
xor
and
mov
ljmp
pop
pop
sahf
in
mov
or
movsl
push
or
shll
popa
shlb
add
roll
daa
inc
jae
into
jb
in
xchg
fs
xchg
setp
jmp
xchg
and
test
mov
jo
lahf
data16
and
popa
mov
dec
jne
sbb
jle
movsl
dec
push
xchg
repnz
pusha
jg
rcrl
ds
loopne
sub
repnz
inc
fidivrl
or
sub
mov
jb
jle
adc
std
mov
test
dec
and
sbb
jo
and
sub
shlb
cmpsb
cmc
leave
xor
or
andl
cmpsb
mov
in
test
popa
or
bound
jae
test
cs
inc
pusha
popa
aad
xorl
push
sbb
xor
pop
in
add
and
loope
sub
or
into
in
cltd
inc
ret
xchg
adc
pushf
cwtl
iret
add
sub
outsl
fildll
push
add
mov
jge
scas
shl
cld
mov
jmp
dec
mov
test
popa
out
sti
mov
shrl
mov
in
and
stos
scas
or
lcall
andl
popa
pop
mov
es
outsb
cmp
and
lcall
out
lahf
mov
popa
out
lea
popa
jno
ficomps
bound
enter
popa
movsl
adc
lahf
sub
aas
mov
mov
sbb
mov
sar
rol
popa
out
fwait
cmpsl
push
hlt
and
arpl
out
xchg
popa
in
xchg
pusha
bswap
push
andb
std
popa
movsl
stc
movsb
int3
cltd
xchg
leave
andb
dec
fisttpl
pushf
aam
dec
icebp
adc
pop
hlt
mov
repz
lahf
dec
out
sbb
pop
les
mov
ja
and
dec
mov
jp
popa
pop
int
xor
inc
mov
in
int3
mov
repz
mov
pop
cmp
cltd
mov
ss
push
mov
arpl
jp
and
mov
add
jge
jmp
push
inc
push
jg
pop
in
in
pop
dec
cmp
jecxz
and
mov
cmp
cmp
mov
into
sub
in
adc
bound
xchg
adc
mov
bound
loopne
mov
sbb
sahf
inc
cmp
imul
pop
xor
mov
loop
pop
push
data16
das
add
mov
xorb
jns
js
aas
jae
and
je
add
cld
mov
loope
jno
popa
adc
mov
shlb
popa
test
jne
xchg
das
aad
jg
mov
loope
or
into
mov
adc
cmp
mov
stos
aam
rorb
push
popa
xchg
pop
aas
scas
xchg
mov
into
mov
repz
sbb
fldenv
pop
and
jmp
mov
nop
push
cmp
popa
ja
inc
push
outsb
and
outsl
popa
in
ds
dec
aam
mull
ret
dec
popw
fucomp
xlat
fs
dec
pop
sub
cli
outsl
cmc
add
cmpsl
roll
xchg
aas
fs
xchg
jmp
ret
jns
into
jp
cwtl
cmp
bound
xor
fisubrs
dec
xchg
std
cmc
in
ja
test
sbb
xchg
sbb
adc
shrb
popf
cmp
jb
lods
and
fs
pop
js
jge
pop
xor
xchg
lods
movsl
fldenv
mov
xor
filds
subb
and
dec
loop
icebp
into
popa
cmp
jmp
aaa
or
sbb
das
push
add
sbb
and
bound
sbb
roll
mov
shrl
mov
popf
call
adc
int
fs
pop
dec
add
das
inc
shll
xor
lock
stos
pop
test
popa
cltd
aam
scas
add
out
andb
adc
pop
pop
popa
mov
fiadds
xchg
popa
or
in
xor
or
mov
icebp
xlat
popf
andb
pop
repnz
add
mov
shr
and
imul
int3
std
mov
call
in
fs
loopne
lret
out
lock
iret
stos
add
fbld
xchg
cmpsl
das
pop
jp
es
mov
scas
in
ljmp
pusha
sbb
mov
mov
mull
in
stos
icebp
jno
and
sbb
movsb
xlat
gs
clc
pop
and
insl
inc
or
sub
xchg
inc
pushf
sbb
rolb
jge
adc
dec
stos
ss
mov
push
xor
in
rolb
adc
addr16
xchg
mov
mov
pop
mov
fildll
adc
or
sub
rorl
test
popa
xchg
mov
mov
cmpb
cmp
popa
adc
scas
lret
sbb
aad
or
add
jne
jns
mov
pop
cmp
loopne
cmp
pop
xor
insb
mov
add
push
xor
mov
jecxz
lcall
rorl
loope
loop
push
popa
mov
std
mov
xor
cmpsl
in
jbe
lret
sahf
popa
sub
cmp
cmc
inc
and
popa
lcall
adc
rorl
push
cmp
jp
push
pop
jg
in
shlb
jno
cmpl
stos
xchg
mov
outsb
sub
bound
pop
ss
adc
dec
popa
xor
jnp
daa
dec
lods
mov
orb
push
mov
fsub
lcall
dec
add
jnp
iret
mull
out
outsl
jle
push
pop
and
push
inc
push
popa
dec
push
shll
repz
popf
in
outsb
jge
fisttpll
loop
inc
dec
pop
fnop
pop
mov
fimull
add
outsb
clc
inc
and
pop
push
xlat
fs
movsb
and
xor
jno
mov
inc
cltd
jp
ljmp
xor
stc
sbb
idivb
mov
jne
popa
push
test
scas
inc
adc
into
ljmp
outsl
sbb
fldcw
cmp
loop
jg
and
enter
xchg
push
push
xchg
jne
cmp
sbb
lods
fdivs
cmpsb
out
icebp
pop
dec
sbb
jg
add
inc
xchg
incl
gs
dec
adc
dec
outsl
xchg
bound
add
mov
or
shrl
dec
addr16
out
stos
ja
popa
dec
cmp
movsb
mov
mov
clc
ja
pop
push
mov
mov
push
jp
and
imul
sahf
sti
idivb
cmp
cltd
std
sub
cmp
dec
and
imul
xor
mov
mov
dec
inc
test
out
sbb
cwtl
int3
push
pop
xor
push
stos
and
mov
jae
es
popa
pusha
mov
xor
popa
movsb
or
push
mov
sbb
dec
andl
pop
pop
in
lods
movsl
popa
sub
cmpsb
bound
add
dec
and
pcmpeqb
jo
jp
fsubr
add
xorl
push
jb
sub
out
push
neg
mov
ret
jnp
popa
ret
mov
int
rcll
fwait
mov
lcall
in
stc
inc
outsl
adc
inc
gs
insl
popa
dec
pop
stos
movsl
cwtl
imul
or
test
add
popa
daa
loope
lock
pop
popa
dec
subl
pop
jo
aaa
dec
cmp
or
outsl
adc
fdivrp
push
mov
cld
or
mov
call
rol
fdivs
lods
jle
and
sbb
popa
inc
pop
mov
popa
adc
scas
dec
mov
insb
cltd
lahf
push
flds
xchg
jo
sbb
in
and
pop
lcall
mov
outsl
inc
pop
popa
test
jg
sbb
popa
inc
fadd
test
in
lock
leave
sahf
mov
out
or
push
popa
iret
ret
ljmp
inc
and
outsb
sbb
mov
and
push
xchg
pop
pop
inc
inc
lock
xchg
sub
push
add
pop
xor
cmp
jo
imul
andb
cs
mov
mov
push
popa
mov
icebp
dec
xchg
xor
movsb
idivl
aaa
aad
outsl
arpl
ret
and
push
or
and
sub
cmp
repnz
mov
arpl
mov
mov
push
jo
lret
mov
sahf
aas
jle
push
xchg
shll
jb
bound
popf
iret
xchg
adc
inc
jle
jae
xchg
out
dec
sbb
inc
pop
icebp
cs
jecxz
lock
popa
sub
insl
popa
bound
xor
popa
or
mov
jmp
sub
xorb
add
ret
out
xchg
mov
call
outsl
lcall
jae
inc
popa
pusha
insl
clc
aaa
pop
push
repnz
push
roll
outsl
je
pop
aam
push
dec
addl
mov
ss
sub
jo
gs
sbb
lock
movl
pop
xlat
xor
popa
gs
sahf
lock
sub
movsl
add
loope
inc
shl
push
jmp
lea
jne
popa
dec
decb
popa
push
pop
int
mov
xor
enter
stos
test
mov
bound
add
push
mov
mov
repnz
adc
cmp
rcll
dec
mov
xchg
in
aam
popa
push
mov
pop
testb
xchg
inc
pop
and
andb
adc
repz
mov
pop
cli
xchg
mov
push
test
sbb
sbb
inc
aam
popa
ljmp
punpckhbw
insb
test
sub
std
sti
xorb
mov
inc
mov
cld
icebp
popa
out
xchg
imulb
adc
jmp
mov
jp
add
mov
shlb
mov
push
popa
js
push
jge
jbe
push
popa
inc
jae
push
test
sub
sub
cmp
mov
add
dec
fidivrs
pushf
enter
insl
mov
inc
popa
xchg
shrl
push
clc
rorl
dec
popa
ds
out
leave
cmp
push
jg
pop
in
int3
cmc
xchg
nop
loop
pop
push
enter
pop
push
push
mov
inc
popa
mov
or
mov
add
test
rolb
mov
scas
das
outsl
xor
mov
cwtl
jo
test
inc
test
or
inc
bound
ret
dec
mov
popf
pop
cmp
int
sbb
jns
dec
inc
jge
mov
int3
jne
xchg
and
push
imul
idivl
lods
sub
sahf
or
test
pop
popa
cld
mov
dec
xchg
mov
popf
popa
add
stos
sub
pushl
insb
and
es
out
cmp
outsl
mov
inc
inc
cmpsl
mov
cltd
fstpt
test
sub
and
lcall
int
clc
mov
sbb
mov
bound
loope
mulb
fists
and
ja
popa
xchg
arpl
and
xor
jecxz
mov
mov
push
loope
popa
dec
mov
inc
jo
mov
cmp
rolb
mov
xor
xchg
xor
fistpll
add
aad
test
insb
jge
les
ret
ficoms
add
and
lahf
jmp
xor
rcrl
ficoml
popa
pop
fdivl
inc
xlat
jbe
ret
jmp
gs
in
pop
popa
push
ret
pop
cs
xchg
popa
jle
inc
imul
jnp
xchg
sbb
frstor
popa
fsubs
das
jb
cmp
xor
push
jg
add
xor
jecxz
sub
mov
xor
mov
ja
push
push
popa
rclb
or
lret
gs
popa
inc
xchg
cltd
cmc
ljmp
mov
popa
xchg
sub
pop
cmp
neg
inc
pushf
cmp
push
jle
dec
rcr
bound
inc
shll
imul
popa
shrb
add
xor
cmp
sbb
and
push
in
push
setno
ljmp
xor
lret
out
insb
int
and
mov
lods
pop
jecxz
aas
lahf
dec
gs
inc
mov
mov
daa
popa
rorl
scas
cmp
popa
mov
sbb
popa
sub
in
sbb
cld
pusha
pushl
jle
gs
pop
add
push
popa
sub
jp
sar
pushl
fcom
jb
popaw
rcr
fisubrs
and
and
mov
mov
push
fs
into
dec
sub
icebp
ja
cli
popa
fisubrl
fbld
lahf
xchg
ret
fs
leave
adc
test
mov
push
sub
push
cmpsl
loope
ja
push
push
xchg
movsl
pop
jmp
lahf
ret
cmp
call
sbb
daa
dec
leave
xchg
popa
inc
and
stc
mov
aam
test
jecxz
push
popa
push
xchg
or
movsl
addl
mov
bound
add
mov
add
lahf
mov
mov
insl
in
dec
lock
insb
xor
lods
jl
jg
pusha
jle
je
jno
jp
popa
pmaxsw
mov
in
fwait
stos
push
sub
loope
push
mov
dec
or
push
jmp
pop
adc
push
rcrl
sbb
sbb
mov
cmp
fsubp
inc
cli
jns
mov
movsb
adc
xor
xchg
dec
and
mov
jecxz
or
sub
push
lcall
pop
enter
ja
je
int3
popa
shr
mov
jle
xlat
repz
pop
pop
xor
add
pushf
sbb
ja
add
jno
dec
pop
mov
andl
das
inc
inc
push
adc
fstpl
mov
push
out
pusha
push
lods
test
stc
popa
adcb
arpl
adc
inc
jg
dec
cmp
push
call
xchg
popa
cmp
lods
push
movsl
adc
popa
or
xchg
jno
outsb
and
or
std
fldl
scas
lods
nop
jg
xor
mov
pop
jmp
loop
cli
pop
ljmp
sub
xchg
and
roll
fwait
popa
sub
loopne
js
dec
pop
popa
sbb
push
mov
dec
mov
into
mov
cs
fsubs
sbb
pop
das
popf
popa
js
sbb
and
outsl
add
mov
inc
lds
js
cmp
pop
jg
and
aam
xor
and
hlt
lret
inc
je
stos
int3
stos
popa
insb
dec
cmp
repz
cli
popa
lock
xor
jl
ja
lahf
daa
das
mov
mov
adc
popa
sbb
pushf
stos
pop
mov
es
lahf
push
fsubr
popa
jbe
sub
lcall
mov
mov
cmpsb
push
pop
push
or
inc
shl
stos
or
mov
pop
push
sbb
popa
out
pop
call
lock
imul
adc
lret
aaa
inc
scas
outsl
clc
cld
adc
sub
std
push
xchg
mov
out
lea
xchg
jl
lcall
mov
sbb
jle
mov
cmpsb
xchg
pop
out
pop
int
icebp
scas
pop
sub
je
jno
ljmp
mov
movsl
call
inc
and
pop
mov
arpl
dec
fcomps
cmpsb
popa
xchg
jo
test
das
out
outsl
cltd
pop
pushf
jns
push
pop
sbb
idivl
rep
xchg
inc
and
and
ja
push
and
imul
popa
cmpsb
push
mov
ss
adc
jo
ret
js
sub
push
sbb
push
popa
out
dec
lcall
sbb
jno
popa
inc
mov
cmp
inc
mov
push
shll
inc
cmpsb
imul
cmp
loopne
lahf
push
pushf
loope
sub
pop
xchg
add
push
repnz
lea
in
bound
pop
mov
popa
divb
xor
pushf
insb
mov
orl
data16
xchg
lar
add
cmp
xchg
add
leave
and
xor
xchg
cmp
sbb
dec
push
and
and
dec
mov
jno
in
cmp
cmp
subl
jns
hlt
pmuludq
in
sarl
push
and
and
mov
fsubl
jb
sti
call
sub
inc
sbb
mov
jns
outsl
inc
cmp
loope
pop
movsl
dec
and
mov
xor
cmc
nop
adc
sbb
pop
test
mov
lods
mov
pop
movsl
out
and
mov
push
sbb
dec
cltd
mov
push
xchg
pop
cmpsl
add
scas
lcall
mov
lahf
imul
push
mov
stc
mov
gs
push
or
ret
fsts
cwtl
ret
ljmp
mul
mov
icebp
push
xchg
push
adc
je
popf
jg
xchg
xchg
imul
sub
mov
mov
xor
movsl
in
or
add
push
mov
rorl
and
or
sbb
fadds
popa
sub
push
mov
fisubrs
sti
or
mov
arpl
test
lods
call
sub
ljmp
lea
pop
pop
popa
cmc
jo
icebp
rorl
out
loope
sarb
jae
pop
out
in
xchg
jne
dec
xchg
cli
shlb
or
cltd
pop
adc
popa
leave
enter
dec
fadd
scas
sub
jmp
and
and
and
sub
or
adc
pop
int
inc
lret
sub
cmp
or
popa
mov
mov
popa
dec
mov
adc
adc
push
hlt
decb
int3
fidivrs
jns
arpl
push
movsl
jl
shl
cs
lcall
push
shll
cmp
mov
add
scas
pop
dec
jl
stc
fcompl
ficoms
dec
add
mov
insb
andl
fs
repnz
add
jmp
sub
xor
lahf
mov
clc
dec
xorl
pushf
jae
adc
pop
xor
int
sbb
xor
popa
xor
or
push
sahf
jp
loope
xor
repz
movsb
dec
loopne
popa
lret
cmpl
popa
mov
test
add
inc
jbe
mov
xor
outsl
addr16
mov
sub
push
push
sahf
popa
out
add
xlat
add
jge
pushf
in
push
addl
andl
sub
ret
outsl
shrb
add
loope
and
mov
cltd
popa
jbe
jnp
stos
mov
mov
and
xorb
shr
fldenv
lahf
scas
jge
popa
push
cmpsb
shll
lret
mull
dec
or
loopne
aam
adc
pop
test
popa
mov
addl
mov
popa
pop
cmp
or
ror
mov
inc
mov
in
bound
faddl
loope
int3
and
dec
jb
cmpsl
cmp
mov
icebp
imul
xchg
movl
adc
bound
mov
sbb
jle
test
popa
dec
movsl
pop
push
fwait
imul
popa
mov
movsl
xor
scas
jle
bound
vsqrtpd
and
shr
int3
subb
push
movb
fiadds
popa
ror
push
lret
push
push
popa
fstpl
sub
cld
jg
ror
loope
ds
mov
subl
fwait
aam
loope
mov
jmp
lret
dec
js
jnp
lahf
pushf
out
or
add
push
popa
lods
int
imul
orl
out
pop
dec
jo
popa
clts
sbb
inc
dec
jns
in
sub
adc
sahf
test
xor
jp
dec
enter
mov
sbb
jno
dec
test
push
push
add
adc
cmp
movsb
and
std
ss
sbb
push
popa
sahf
loop
stc
jle
outsl
jbe
sbb
sbb
add
and
icebp
sbb
out
lret
mov
cli
or
scas
inc
adc
pusha
adc
sub
dec
add
push
int
xchg
mov
in
mov
pop
scas
popa
sub
push
mov
outsl
das
jp
stos
andl
xchg
inc
add
arpl
sub
lea
loope
push
push
out
clc
into
bound
mov
lahf
pop
inc
hlt
mov
testb
imul
daa
xchg
out
insb
dec
pop
add
pop
push
loop
test
jmp
pop
lds
icebp
fs
push
ljmp
jb
lahf
add
insl
adc
pop
cmc
jl
mov
js
fwait
pop
in
repz
inc
addl
je
sub
loopne
push
jno
js
loope
add
sbb
cli
inc
inc
stc
scas
jge
ljmp
popa
dec
cmp
pop
or
test
popa
incb
push
xor
push
test
add
jo
call
sarb
arpl
push
dec
loop
lret
sub
add
mov
dec
int
and
inc
lret
cmp
gs
mov
pop
fldenv
shll
pop
scas
dec
cli
mov
in
loope
cmp
pop
rcrl
shr
jne
dec
mov
in
les
lock
mov
loopne
and
in
pop
xor
out
dec
and
xchg
mov
leave
mov
push
xor
es
lods
outsb
xchg
hlt
dec
xchg
xchg
mov
fidivrl
lcall
cwtl
jmp
movsl
ret
repz
test
mov
xchg
mov
jne
jmp
xchg
cwtl
xchg
add
inc
push
cmp
and
mov
add
or
repnz
mov
popa
pop
xchg
jmp
push
mov
xor
jo
outsl
clc
jno
push
fcmovb
push
mov
jae
jle
fstps
push
push
mov
ljmp
sete
cmp
sub
in
movsl
divb
lds
inc
and
dec
dec
je
cmp
int
mov
outsb
movsb
mov
out
xchg
scas
dec
mov
lea
or
hlt
jne
adc
jle
pop
mov
push
mov
mov
adc
leave
mov
outsb
push
mov
mov
popf
push
dec
stc
mov
andl
sti
pop
insb
and
cld
data16
rorl
in
push
cmp
gs
iret
and
add
adcl
add
inc
aas
fildll
sbb
repz
je
daa
push
fistpl
divl
xor
cmp
pushl
out
xchg
push
cwtl
mov
dec
jl
and
jo
and
sub
loopne
inc
in
leave
pop
ljmp
or
and
std
mov
mov
fsts
mov
cmp
pop
adc
fbld
pop
shlb
xchg
leave
pop
daa
insb
push
sbb
loope
mov
repz
stos
lods
pop
je
repnz
rorb
icebp
loop
mov
ret
mov
mov
icebp
cltd
movsl
mov
mov
rorb
arpl
shlb
inc
insl
mov
push
pusha
or
rorl
jecxz
aas
fisubrl
outsl
aaa
out
jae
sub
sahf
cwtl
mov
stos
mov
sub
icebp
inc
push
pop
loopne
icebp
mov
bound
and
adcl
jmp
and
in
rep
or
shrl
je
inc
lods
mov
out
clc
mov
lods
dec
scas
test
or
push
dec
fwait
xchg
jae
pop
adc
jmp
xchg
dec
adc
je
pushf
push
nop
test
stos
rolb
xor
cmp
jmp
loope
leave
or
push
ficompl
test
add
push
data16
jecxz
popa
adc
mov
popa
shrl
negb
sub
aaa
shlb
push
xchg
pop
jecxz
jne
insl
rorl
pop
mov
mov
dec
popa
out
movsl
xchg
addr16
popf
mov
aam
or
popa
dec
dec
inc
test
popa
mov
sub
cltd
loopne
bound
loope
xor
popa
cmp
das
movsb
popa
or
imul
xor
add
jmp
lret
add
sbb
popa
dec
or
mov
out
adc
ss
push
add
popa
jp
inc
mov
dec
out
push
imul
mov
jge
xchg
sarl
out
cmp
xor
js
dec
sahf
xlat
and
push
das
dec
test
inc
sbb
pop
rorl
and
inc
adc
stos
mov
pop
fildll
movsb
adcl
addr16
pop
mov
out
gs
and
mov
pop
sub
pushf
iret
cmpsb
popa
jmp
sub
mov
push
xlat
pop
es
stos
in
adc
mov
outsb
fsubl
fs
subb
or
insl
inc
aas
insb
loope
stos
mov
cwtl
jae
dec
subl
sbb
je
and
popa
jo
xor
imul
popa
or
mov
cmpsb
aam
bound
clc
mov
mov
out
cmp
mov
adc
dec
fwait
imul
bound
fcomp
pop
adc
popa
sub
dec
addr16
pop
pop
stos
rcrl
jno
mov
push
lahf
and
lock
test
fldl2e
popa
iret
dec
or
cmp
cld
popa
push
xor
mull
push
jnp
cmc
jge
dec
cmp
mov
xchg
fs
pop
std
ret
sub
push
mov
and
push
outsl
cmp
rcr
cmp
mov
mull
push
or
pop
dec
xchg
jno
popa
adc
outsl
and
lods
shll
faddl
mov
std
adc
push
popa
bound
mull
cli
cmc
daa
jmp
lock
enter
repz
pusha
xchg
popa
lret
scas
dec
sarl
dec
mov
add
and
je
add
fadd
popa
hlt
lds
outsl
jle
fisubs
cmp
cmp
mov
andb
ds
mov
rolb
sbb
repnz
sbb
pop
or
mov
arpl
mov
mov
not
movsl
sahf
xchg
mov
cmp
fcomi
and
and
lahf
pop
outsl
cmpsb
mov
inc
dec
test
pop
pmaddwd
mov
outsb
cmp
int3
aam
popa
or
add
fimuls
add
es
mov
and
popa
pop
hlt
orb
sub
popa
lods
pop
push
lret
mov
sub
inc
mov
das
popa
frstor
jle
lahf
rol
popa
jbe
movsb
inc
mov
push
mov
pushf
jge
loop
lods
lcall
daa
pop
andl
in
scas
push
jae
insb
or
popa
testl
jo
jg
cs
scas
cmp
dec
outsb
loope
mov
popa
pusha
xorl
movsb
popa
ja
sbb
push
fiaddl
popa
out
daa
call
sbb
push
jg
push
mov
inc
jge
movsl
lret
jmp
or
or
mov
dec
xlat
adc
jne
pop
jnp
cmp
stc
gs
inc
scas
mov
add
pop
jne
pushl
dec
jnp
fldl
mov
mov
popa
and
xchg
push
fmul
das
cmpb
lock
pop
in
adcb
lcall
and
ret
popa
testl
add
push
push
xchg
call
outsb
popa
jmp
icebp
insb
leave
mov
mov
pop
shrl
pusha
hlt
cmc
ss
dec
mov
mov
sti
mul
fs
ss
stos
inc
jmp
adc
repz
testb
cli
mov
push
sub
addr16
mov
setns
loope
mov
je
fbld
es
mov
idiv
and
xor
push
push
insb
int
and
aaa
les
or
push
cmp
cmp
pop
adc
bound
jns
xor
and
adc
pushf
fldl
push
mov
lret
aad
out
fwait
push
sti
popa
or
and
mov
in
jmp
and
push
adc
test
js
shl
mov
inc
add
roll
cmp
add
inc
mov
jp
sbb
dec
mov
arpl
mov
pop
jle
inc
inc
pop
popa
add
or
cmc
stc
sbb
push
dec
fchs
jns
aaa
stos
pop
aad
jmp
add
xor
popa
inc
pop
into
xlat
mov
or
or
inc
cmpsl
pop
cld
push
xor
repnz
and
loopne
insl
popa
sar
sti
lcall
push
ljmp
lahf
daa
popa
jecxz
dec
jnp
ss
stos
and
mov
iret
push
inc
les
pop
lcall
test
jo
inc
inc
jecxz
cwtl
mov
enter
ds
lret
jle
imulb
frstor
and
aaa
loope
rolb
inc
aas
popa
sub
sub
popa
jno
cmpsl
stc
fnstsw
xchg
or
push
and
push
xorl
sbb
or
fcomps
popa
push
in
push
repnz
cmp
ljmp
popa
ss
dec
jnp
mov
popa
inc
pop
sbb
fs
jge
fadd
xor
out
popa
icebp
pop
aad
add
inc
push
xor
sub
fcmovb
frstor
rcrb
fistpl
push
mov
sbb
or
cwtl
jbe
cmp
or
lods
in
dec
inc
cmc
js
loopne
dec
xor
lock
mov
jbe
or
fs
divl
cmpsl
xor
jmp
insb
push
push
pop
popa
sub
jp
je
pop
in
pop
cmc
cmp
xchg
pop
mov
int3
push
popa
push
jl
and
repnz
popa
pop
cmpsb
pop
jle
nop
pop
mov
mov
pop
or
arpl
mov
das
popa
mov
xlat
cmp
mov
fistpll
push
pop
popa
jns
mov
popa
pop
and
nop
shll
push
push
test
sub
sahf
add
fistl
or
test
dec
mov
cld
sar
rorb
popa
inc
out
movsb
mul
repz
sbb
dec
aaa
fsts
mov
inc
subl
xor
outsl
dec
inc
dec
xchg
rcrl
mov
loope
imul
popa
cs
cmp
push
or
sbb
pop
scas
loope
leave
or
jno
popa
pop
nop
ds
xchg
popf
fs
lret
ja
or
imul
dec
aaa
bound
lods
xchg
sub
lahf
sub
cld
test
call
loope
insb
outsb
cmc
popa
xchg
xchg
or
scas
mov
push
popa
mov
xchg
jae
push
in
icebp
push
pusha
xor
add
outsl
outsl
sbb
jp
jle
lret
popa
mov
push
jg
andb
mov
and
sub
pop
mov
test
stos
xchg
roll
mov
popa
in
xlat
cmp
popa
into
outsb
xor
fcoms
in
popa
mov
test
push
cmp
or
aad
mov
out
xchg
fs
movsl
xchg
out
adc
sub
push
mov
mov
rcrb
jno
in
pop
cs
test
xchg
dec
popa
jnp
adc
das
push
add
pop
add
mov
inc
aas
or
ficoml
push
cmp
jns
inc
popa
mov
sub
add
and
and
xor
addr16
lea
jo
sub
rolb
push
ss
inc
popa
leave
iret
mov
dec
xchg
push
arpl
data16
out
fdivrs
cmp
popa
jg
mov
cli
mov
push
fs
cmp
pop
pop
es
sbb
xorb
and
fwait
popa
xchg
inc
push
cmpb
xchg
pop
lods
and
mov
jnp
mov
loope
or
out
mov
inc
adc
mov
test
adc
movsb
mov
sbb
jae
mov
enter
or
fcmovnbe
outsl
test
adcb
lahf
popa
lds
mov
popa
pop
and
mov
fs
adcl
pop
lea
jne,pn
mov
cmp
adc
pop
popa
icebp
pop
pop
lcall
leave
sub
lods
mov
int3
add
add
fists
js
xchg
aad
popa
fwait
popf
ret
in
xlat
cmp
jl
adc
fstpl
lds
jbe
ror
or
lcall
xor
int3
popa
imul
cmpsl
popa
push
pop
fcompl
jmp
popa
push
dec
gs
jo
mov
nop
fstl
xchg
xlat
in
popa
and
dec
pop
jle
fs
fcmovnb
insl
repz
stos
aam
stos
lahf
sbb
sarb
xor
add
mov
inc
in
popa
xchg
repz
inc
loop
adc
xor
mov
jp
popa
pop
jno
shlb
xchg
and
popa
mov
inc
shlb
jle
ss
ret
mov
inc
mov
popa
cmp
mov
out
popa
and
xor
jae
sub
cmp
cmp
daa
decb
shrb
mov
inc
jmp
out
std
sbb
jmp
pop
sbb
sbbb
shrl
cmp
dec
popa
cli
push
mov
sarb
pop
jg
stc
inc
add
xchg
jp
push
not
and
outsl
faddl
fiaddl
lock
iret
stos
mov
pop
popa
fwait
loopne
jnp
scas
popa
insl
in
bound
out
cmp
pushf
ljmp
xchg
in
sub
imulb
loop
test
dec
les
xor
pop
mov
and
sti
or
fdiv
pop
ljmp
xchg
test
lahf
pop
and
xor
call
cltd
arpl
popa
jbe
pusha
push
es
das
fsubl
push
mov
push
iret
cmp
dec
push
ljmp
cmpsl
lods
popa
mov
cmpsb
dec
gs
lahf
test
add
scas
pop
mov
popa
inc
fs
jne
lret
mov
sbb
in
leave
and
scas
jge
sub
loope
out
xchg
sbb
popa
lcall
gs
shlb
mov
ljmp
enter
and
in
push
mov
cmp
pop
fiaddl
lods
jo
loop
ret
iret
ljmp
fisubs
imul
jg
cmc
shll
in
push
add
pusha
and
stos
out
pop
mov
popa
pop
jecxz
pushf
roll
sub
popa
push
lcall
popa
scas
xor
call
std
mov
push
and
gs
inc
cmp
cmp
pusha
popa
aas
mov
add
in
adc
fcoml
popa
adc
lahf
xchg
lods
in
std
pop
push
popa
rcrl
push
ja
ficoms
outsb
mov
clc
popa
push
pop
insb
or
jo
fs
add
xchg
mov
pop
jg
scas
pop
and
inc
jl
popa
rolb
mov
popa
cli
test
fstl
pushf
sbb
and
sbb
mov
test
sub
loopne
ret
inc
adc
lcall
aas
mov
lods
mov
add
sub
pop
push
adc
pop
jg
data16
lds
xchg
out
push
fstpt
repnz
jge
and
fnsave
sub
mov
sbb
add
push
loop
clc
xor
imul
lea
push
push
je
shll
popa
push
xchg
das
cmp
and
inc
dec
movsl
pop
pop
js
mov
movsb
cs
ficoms
leave
xchg
mov
sub
popa
jg
addr16
in
xor
jbe
sar
push
push
or
add
lret
jno
lahf
aam
jo
out
out
cwtl
fwait
je
bnd
or
popa
and
xor
sti
dec
cmp
fchs
add
loope
rol
fs
push
fisubl
push
sub
in
nop
mov
add
sub
and
fwait
inc
adc
or
fcomps
sbbl
inc
popa
ret
sbb
scas
add
push
stos
shr
popa
je
nop
push
or
lock
mov
popa
sar
sub
mov
repnz
add
jecxz
cli
pop
pop
popa
xchg
repz
adc
aad
fs
mov
insb
mov
add
xlat
scas
loope
loopne
shrl
jle
imul
xor
daa
int3
cmp
inc
inc
xor
pop
fsubrs
mov
push
xchg
cmp
xchg
rcll
push
lret
sbb
mov
pop
movsb
popa
mov
sub
jo
ficoml
leave
stc
adc
popa
dec
fldl
mov
mov
das
cmp
push
lock
aad
and
es
and
inc
out
dec
lret
popa
or
fmul
pop
sarb
pop
popa
jle
stc
in
icebp
and
and
xor
scas
jle
out
push
ljmp
mov
repnz
pop
sbb
loopne
cld
sub
jno
lahf
push
inc
push
dec
cmp
xorl
js
adc
or
sbb
flds
pushf
stos
arpl
xor
mov
cmp
roll
aad
cmp
sbb
ficoml
xchg
mov
mov
jg
out
sub
in
lock
jno
ret
cmpsb
shrl
popa
jg
mov
xchg
popa
ss
fldenv
aaa
xor
jle
test
out
cmp
insl
or
loope
jb
loop
xor
popa
lds
pop
dec
popa
in
lock
in
push
jbe
pop
lret
stc
popa
popa
in
call
inc
popa
push
sbb
push
popa
sti
dec
xor
push
mov
subps
sub
jmp
push
faddl
dec
xchg
mov
fcos
gs
add
and
mov
adc
ret
mov
in
lcall
orl
popf
cld
es
inc
pop
and
dec
int3
popa
mov
scas
push
cld
dec
in
mov
fisttpll
icebp
xorb
inc
aaa
mov
loope
xor
mov
xchg
bound
lods
nop
popa
addr16
pop
jmp
fcomps
scas
fists
add
sbbl
xor
out
mov
sbb
push
iret
jg
sub
xor
clc
dec
popa
mov
jl
sub
test
mov
push
push
rorl
ljmp
call
stc
pop
popa
pop
enter
mov
imul
cli
mov
cltd
xor
in
sub
loopne
mov
int3
addr16
cmpl
adc
xchg
mov
push
push
shll
lret
mov
sbb
pop
or
sahf
aad
dec
mov
repz
push
fs
and
push
and
sbb
pop
enter
xor
rcr
mov
xorl
and
scas
or
popa
cmp
lcall
mov
add
pop
push
popl
mov
or
xlat
mov
mov
loope
mov
or
mull
pop
mov
push
push
push
add
popa
add
inc
lds
sbbb
mov
fisttpll
sbb
inc
pop
outsb
popa
out
adc
popa
and
mov
xchg
cmp
adcb
lahf
popa
ds
jbe
popa
adc
jg
out
dec
clc
lcall
cltd
mov
xchg
push
mov
dec
mov
pop
dec
leave
add
push
stos
cltd
xor
popa
das
mov
aam
and
aaa
dec
add
icebp
xchg
add
dec
mov
jl
popa
or
in
sbb
test
and
in
sbb
stos
add
outsl
dec
xchg
popa
inc
jb
ds
lods
cmpsl
adc
mov
jbe
roll
arpl
out
popa
mov
sbb
repnz
xor
fildl
lds
cmpsb
add
movq
in
fcompl
pop
jp
lods
popa
loop
mov
fldt
enter
mov
popa
jg
jecxz
pushf
mov
in
clc
fimull
movsl
popa
dec
sbb
mov
aad
fsubs
fisttps
push
outsb
mov
rcrb
clc
inc
popa
cs
xchg
jecxz
xchg
scas
popa
dec
sbb
jle
mov
mov
lods
xchg
push
mov
jbe
popa
inc
std
jge
adc
cmovne
push
movsb
lds
cltd
sub
jae
adc
imul
adc
popa
rolb
xchg
inc
lret
cwtl
outsl
loop
cli
enter
cmc
mov
sbb
push
jno
cmp
loope
out
mov
push
pop
outsl
sbb
cmc
mov
cmpsb
sub
sahf
cld
add
dec
jg
cltd
xchg
lea
jecxz
pop
adc
int
jo
out
test
xorl
daa
adc
popa
movsl
dec
int
ret
in
rol
test
addr16
popa
sub
xor
and
inc
stc
jg
loop
popa
inc
cld
mov
mov
aas
leave
fcomps
add
jns
imul
jl
pop
adc
addb
insl
mov
xchg
jecxz
xor
popa
iret
cmp
repnz
in
jbe
arpl
popa
vxorpd
popa
sbb
data16
adc
stos
push
cmc
insl
push
jnp
push
push
add
mov
popa
mov
adc
loope
pop
push
bound
inc
pop
or
sbb
out
jp
inc
mov
popa
test
push
gs
out
inc
dec
pop
clc
xor
pushf
push
iret
in
jg
popa
jge
rclb
lods
sbb
test
popa
aam
cld
das
mov
sbb
in
std
jl
fisttpll
cmp
jg
loope
pop
movsb
xlat
mov
push
out
loop
xor
popa
jg
orl
xchg
cmc
mov
add
ffreep
popa
push
aam
movsb
push
mov
in
cmpsl
mov
xor
add
les
push
fsubrl
das
xchg
enter
add
jg
mov
test
out
bound
ds
pop
fiaddl
xchg
fs
shrb
dec
pop
insb
mov
push
push
inc
inc
shlb
pop
popa
cld
push
aas
sub
and
pop
frstor
popa
xor
inc
scas
mov
dec
mov
jg
in
popa
mov
xchg
mov
mov
sub
cli
clc
add
lods
push
lds
jmp
stos
pop
loop
jge
pop
pop
das
popa
ret
fistpll
out
push
nop
stos
icebp
popa
jo
xchg
ret
std
out
popa
shrb
cli
jae
or
cmp
out
in
je
shl
jmp
out
ljmp
dec
mov
xor
mov
aas
pop
xorl
fldt
jg
js
test
jno
popa
cs
xor
fsts
push
cmc
and
fidivl
mov
popa
mov
stos
test
mov
loope
push
pusha
popa
pop
out
adc
in
jmp
jne
repnz
popa
xchg
xor
call
popa
repz
dec
adc
push
push
testb
subl
popa
cmp
bound
pop
ja
shl
jmp
lret
stc
jle
rolb
popa
sub
mov
push
jbe
xchg
outsl
dec
mov
hlt
rcrl
or
aas
and
pop
mov
mov
insb
pop
push
lods
add
jbe
das
sub
inc
push
push
subl
xchg
inc
std
outsb
test
mov
sub
popa
push
mov
and
popa
push
adc
jnp
pop
xor
dec
pop
push
call
ds
ds
mov
jle
mov
cmp
mov
pop
adc
aaa
lret
xchg
clc
dec
adc
jge
mov
data16
loope
ljmp
mov
test
mov
pop
cmp
xlat
inc
lods
cmc
and
lea
adc
sbb
imul
loope
pop
jbe
jp
cmpsb
mov
lahf
add
popa
out
or
js
jb
or
lret
push
popa
cmpsl
push
das
sbb
iret
mov
in
loope
popl
mov
fdivr
dec
jle
sub
add
push
or
clc
pcmpgtb
push
dec
lahf
outsl
pop
cmpb
dec
mov
ljmp
mov
sbb
lahf
insl
jo
pop
movaps
ret
pop
inc
ficoms
xlat
or
gs
or
shl
cmc
push
and
xchg
add
popa
fsubl
pop
pop
or
popa
pop
loope
lods
fldenv
mov
das
push
popa
sbb
lcall
out
sub
pop
cmp
or
insb
pop
jle
and
popa
aad
popf
pushf
add
lret
aam
and
jge
out
insb
out
lods
xchg
in
pop
mov
imul
pop
push
cmpsl
popa
cmpl
jl
push
and
popa
test
jns
pop
inc
into
mov
notl
mov
and
sbb
not
aad
popa
mov
fidivl
nop
mov
popa
xchg
or
sub
adc
mov
xor
sahf
jmp
sti
add
ret
mov
popa
xorl
out
clc
gs
cmp
outsb
stos
adc
fs
xchg
repnz
mov
int3
sub
adc
push
repz
add
sub
inc
jo
pushf
mov
shll
test
lret
movsl
fs
mov
and
jp
lret
shrb
icebp
sbb
push
xor
jno
stc
subb
mov
scas
cmpsb
into
xchg
popa
repnz
or
stc
loope
popa
xchg
jle
cmpsl
add
pop
mov
loope
cmc
push
lahf
xor
popa
dec
je
xor
mov
sub
pushf
or
mov
sbb
arpl
xor
mov
push
and
rcr
and
popa
dec
cmp
mov
xor
mov
popa
add
adc
pop
popa
mov
pop
pop
popa
sub
xchg
xchg
dec
or
mov
jge
lahf
lock
les
push
popa
mov
mov
sar
arpl
push
push
ret
dec
stc
or
sbb
rcl
mov
jb
es
or
adc
fs
movsl
lahf
push
push
dec
fwait
add
mov
push
test
stos
cmp
inc
outsl
in
sbbl
fwait
jecxz
popa
sub
subb
arpl
xor
out
pop
jno
push
lret
mov
add
jbe
cwtl
sub
push
jo
daa
xor
arpl
xchg
popa
and
cld
fdivs
lods
jns
into
movsl
insl
cmp
push
rcll
pop
mov
adc
out
dec
clc
mov
pop
jge
dec
mov
xchg
aad
and
jp
rcrl
mov
jmp
sbb
push
cmp
or
adc
xchg
jnp
test
fisttpll
push
out
stos
mov
xor
add
or
popa
add
mov
ja
popa
jno
shrl
adc
ret
cld
test
out
bound
call
mov
or
fwait
push
pop
stc
mov
pop
mov
cmpsb
in
dec
sub
sub
push
inc
pop
pusha
leave
jb
fsub
fadd
dec
in
sahf
sbb
out
add
adc
movsb
outsb
repz
out
xchg
dec
ds
bound
fildl
sarl
or
test
pop
imul
ja
test
jecxz
and
cmpl
sbb
filds
and
out
mov
mov
xchg
mov
popf
dec
and
sub
mov
lods
popaw
loop
adcl
loope
movsl
adc
cli
jae
inc
pop
or
mov
subl
out
daa
mov
pop
enter
fcmove
mov
xchg
nop
fadds
test
sub
jmp
iret
es
push
cwtl
push
dec
ret
mov
dec
mov
data16
mov
call
mov
mov
jmp
push
popa
nop
ljmp
jge
jp
and
outsl
adc
jle
dec
cmc
push
pop
cltd
lock
sbb
xchg
flds
dec
out
test
popa
sbb
imul
iret
pop
cmp
or
inc
jo
sahf
sub
mov
inc
je
fiadds
add
mov
mov
arpl
mov
lret
inc
loope
jne
adc
ljmp
xor
fwait
imul
loope
gs
mov
ret
mov
jb
xchg
xor
sbb
pop
popa
stos
cwtl
lret
mov
inc
push
xchg
lock
cmpsb
rcll
addr16
adc
aas
push
mov
call
lret
fiadds
jae
sarl
fcmovnu
popa
sbb
jge
lods
push
xchg
out
pusha
adc
iret
push
popf
xchg
js
xor
lds
mov
mov
icebp
adc
js
and
ss
hlt
cli
repnz
sbb
test
cmp
xchg
add
dec
arpl
dec
mov
mov
jo
mov
aaa
in
xor
pop
sarl
addl
popa
pushf
lcall
popa
inc
cmp
jbe
popa
loop
scas
insb
mov
daa
ss
std
icebp
and
mov
push
call
and
xchg
fs
daa
sbb
popa
adc
lods
mov
popa
or
push
popf
and
fildll
das
repz
mov
adc
sahf
pop
fsub
ds
negl
loope
loope
in
adc
popa
rorb
mov
js
pop
mov
popa
jbe
rcll
repnz
and
and
movsl
pop
in
xlat
push
popa
mov
rol
insb
push
sub
push
push
adc
cmp
and
ss
and
aaa
popa
push
sti
add
push
fisubrl
jae
clc
inc
mov
fisttpll
fcomps
fs
xorl
push
push
fcomps
popa
or
sub
dec
xor
add
imul
popa
mov
jp
popa
mov
add
shrb
push
loope
xchg
xor
incl
loope
rcll
in
and
push
and
cmpsl
daa
fs
fldt
xor
inc
dec
sub
sarb
adc
lahf
jbe
push
mov
lods
js
jge
ja
adc
popa
mov
ret
popa
pop
xchg
dec
xor
or
iret
adc
popa
xchg
imul
aas
popa
fdivl
dec
popf
pop
adc
pop
data16
leave
add
inc
outsl
popa
das
sub
cmpsb
and
ffreep
data16
adc
cli
loop
out
inc
jne
popa
andl
stc
and
adc
pop
jecxz
popa
int
mov
mov
orb
lods
lret
lret
enter
shr
mov
gs
dec
mov
push
mov
jb
movsl
fidivrs
insl
arpl
dec
push
mov
mov
push
out
push
ror
lods
adc
lods
hlt
ja
int3
fs
mov
shrl
clc
pop
mov
ja
arpl
or
and
mov
mov
mov
push
dec
popl
mov
pop
movsl
ljmp
mov
daa
lock
je
push
loope
addr16
sub
jmp
mov
jnp
push
icebp
mov
lea
and
mov
push
lds
dec
into
jne
shll
push
lea
mov
inc
adc
test
and
das
cmp
pop
mov
out
cli
inc
jne
pop
jnp
stos
push
xor
andb
jbe
cltd
je
or
fildll
stos
clc
aaa
and
pusha
movsl
fs
push
dec
lods
leave
jl
dec
stc
jg
mov
loope
mov
or
pop
mov
in
je
test
and
pop
cmpsl
scas
shrb
fsubrs
call
fs
repnz
xchg
mov
popa
pop
faddl
arpl
cmp
popa
mov
inc
iret
aaa
push
test
inc
leave
xor
or
insb
fwait
push
pop
loope
jb,pt
or
andl
insl
sbb
push
shll
data16
push
xchg
inc
jae
test
push
decl
repnz
insb
pop
fcomps
popa
mov
push
mov
or
popa
adcl
je
or
int3
shlb
mov
cmpb
pop
jle
mov
adc
push
lea
cmp
push
cmp
jbe
mov
aam
pop
xchg
mov
popa
or
repnz
push
xor
lcall
mov
andb
mov
jno
movsl
add
fcoml
xchg
push
mov
xchg
aaa
mov
adc
dec
mov
pop
pop
iret
std
popa
aad
pop
and
xor
add
pop
arpl
fimull
les
popa
mov
push
call
and
popa
fisttps
daa
popa
cs
mov
lret
push
out
enter
popa
sahf
cs
push
dec
mov
aad
loope
add
in
popa
xchg
and
and
mov
push
int3
jno
mov
mov
push
xlat
mov
dec
popa
fldt
jo
jo
pop
mov
xor
jg
sbb
jbe
sbb
ss
dec
push
xchg
xchg
popa
cwtl
sub
pop
jb
and
add
pop
in
jge
aas
lret
cs
mov
or
mull
clc
sub
lds
repz
dec
add
jg
data16
pop
xchg
das
popa
out
and
mov
popf
sbb
cmp
mov
popa
test
insb
stos
popa
jge
js
repnz
mov
push
fs
jl
dec
mov
dec
fs
popf
iret
pop
mov
jmp
dec
lods
lods
cmpsl
into
inc
xorl
and
push
mov
test
arpl
sbb
add
outsl
adc
and
loope
testb
int3
popa
aam
enter
adc
loope
rcl
push
outsl
fwait
adc
les
adc
outsl
dec
push
adc
cmp
lret
pop
loopne
fistl
mov
shrb
flds
mov
or
popa
dec
push
stos
mov
pop
push
outsl
daa
cmp
and
roll
sar
popa
scas
pusha
and
out
inc
fs
mov
and
andb
sub
test
push
dec
xorl
dec
std
xor
cmpsw
inc
ja
jno
cwtl
popa
inc
ljmp
popa
mov
push
jnp
lahf
shll
mov
in
and
call
add
pop
mov
ret
sbb
jle
js
push
mov
lods
mov
mull
imul
sub
arpl
dec
dec
pusha
rorl
out
std
out
dec
sub
iret
push
int
popa
sbb
mov
add
loope
aas
ret
stos
fidivs
push
push
mov
fs
sbb
popa
mov
push
out
pop
push
dec
scas
enter
movsb
shlb
push
xchg
sub
jge
aad
loope
cld
sub
cwtl
popf
popa
pusha
mov
loopne,pn
popa
lea
inc
andl
call
lock
mov
sub
sub
shlb
idivl
cmpsl
mov
popa
cmp
sub
inc
nop
jle
mov
mov
scas
sbb
add
or
push
sub
pop
iret
or
pop
in
sbb
mov
pusha
out
loopne,pn
push
cmp
dec
jo
inc
mov
jns
mov
jo
mov
push
push
sbb
rcrl
bound
mov
dec
or
adc
and
or
into
mov
fiadds
push
pop
xor
dec
and
pop
jmp
pop
dec
mov
in
sub
push
pop
cld
push
popa
dec
add
lds
mov
dec
sub
mov
into
xor
gs
push
pop
popa
jo
lret
lret
ds
pushf
jge
add
cwtl
or
in
pop
lds
and
repnz
sub
cmp
dec
rolb
jb
fsubrs
nop
ret
xor
push
adc
xorl
icebp
int3
mov
xchg
cmpsb
xor
jge
sub
push
jg
ret
mov
fwait
jecxz
out
in
pop
das
popa
scas
mov
pop
jnp
mov
ljmp
fcmovu
jmp
nop
mov
pop
inc
popa
std
push
mov
dec
bound
lcall
fs
add
push
popa
ja
faddl
rcr
lahf
popa
cmp
push
out
and
stc
popa
loopne
cmp
or
cltd
inc
add
add
jne
fists
test
push
cmp
xchg
subl
jnp
push
inc
adc
mov
popa
mov
mov
pop
popa
in
mov
into
iret
pushf
movsb
stos
loope
bound
adc
outsl
popa
mov
loope
xor
or
pop
pop
roll
jae
bound
icebp
aam
into
xor
and
leave
jp
dec
lock
jl
mov
sbb
test
test
pop
fmuls
pop
cmp
mov
push
shlb
xlat
xor
fimuls
pop
fdivs
cwtl
loope
and
push
std
and
xchg
sbb
push
popa
sub
pop
or
sbb
mov
scas
andb
mov
js
or
aam
or
in
xlat
lret
fisubl
and
inc
sahf
icebp
xor
jbe
or
icebp
xchg
mov
test
ret
repnz
inc
mov
test
xchg
adc
out
inc
insb
xchg
cmp
mov
lcall
js
push
shl
popaw
fiaddl
pop
push
cltd
pop
imul
push
jb
hlt
jle
test
shrl
xor
cmp
sub
pop
cltd
popa
mov
lock
jo
sbb
imul
fs
push
fstl
sbb
push
dec
and
ss
popf
sbb
sarb
mov
aad
inc
lret
and
hlt
orl
push
and
push
roll
popa
mov
and
andl
adc
dec
push
lods
jg
popa
mov
out
pop
ds
cmp
insb
sbb
popa
pop
inc
sbb
lods
mov
mov
jp
js
inc
fwait
mov
cld
mov
pop
mov
mov
bound
lret
aaa
loope
pushf
sub
inc
xor
popa
dec
cmpsb
je
push
out
adc
bound
incl
add
mov
mov
xchg
jl
call
insb
outsl
mov
stos
pop
loope
lahf
mov
outsl
std
shll
mov
popa
in
jmp
mov
aaa
les
jmp
and
out
jb
or
push
mov
mov
or
sub
subb
push
mov
inc
and
push
inc
popa
decb
cmp
int
fdiv
and
lahf
mov
pop
mov
cmp
scas
into
popa
flds
cs
sub
cmpsl
popa
mov
jnp
inc
popa
lret
stos
faddl
vunpckhps
and
ds
ret
dec
jne
loope
lds
add
test
int3
decl
push
cltd
xchg
popa
adc
jle
in
pop
aad
cs
stos
fdivs
mov
sub
fs
push
inc
xor
push
js
nop
shrl
fisubs
adc
mov
popa
or
or
js
add
iret
sbb
jp
or
mov
xor
in
fisubs
aas
incl
sahf
popa
jo
rorb
push
dec
cmp
mov
imul
popa
mov
xchg
jnp
arpl
mov
out
call
mov
jae
xor
repnz
xchg
popa
sbb
mov
add
dec
popa
movsl
insb
icebp
ljmp
imul
sarl
xchg
pop
inc
sub
das
mov
and
mov
int
pop
mov
arpl
ret
loope
xchg
cmpsb
pusha
inc
jle
jb
cmp
shll
dec
stos
fwait
in
dec
cmp
jns
xchg
cwtl
lds
lock
leave
sti
loopne
mov
xchg
out
adcl
mov
rorl
jecxz
loop
cmpsb
imul
sub
addb
shl
fidivs
push
pop
bound
jle
cmc
mov
aaa
imul
xor
outsl
jns
pop
push
out
ss
push
jnp
rcrb
and
sbb
sub
stc
cmp
adc
fdiv
test
out
add
xchg
pusha
cwtl
sti
stos
jecxz
sub
add
gs
xlat
shr
and
pop
fildll
cli
sub
popa
mov
nop
push
stos
aam
popa
movsl
movsb
sarb
push
icebp
push
rcll
and
pop
cmp
cmpb
jge
pop
jmp
push
stos
cs
sbb
aam
mov
add
cltd
pop
das
jl
cmpsb
popa
push
sar
popf
mov
ror
hlt
popa
lock
aas
inc
and
popa
mov
xchg
cwtl
push
daa
inc
popa
pop
int
lds
mov
push
roll
jno
pop
shrl
mov
stc
xchg
movsb
popa
cmp
aad
andl
hlt
push
adc
sbb
ret
scas
cmp
mov
bound
std
dec
sbb
out
xchg
popa
cmp
lahf
adc
iret
jp
adc
adc
or
idivb
inc
push
cld
repz
clc
mov
sbb
clc
mov
push
sarl
popa
add
mov
in
in
fmuls
popa
out
sub
inc
popa
xchg
pop
je
les
mov
mov
mov
sbb
pusha
stos
fucom
mov
add
pop
pop
mov
mov
leave
push
add
popa
cli
mov
sti
lahf
out
pop
mov
out
cld
test
icebp
mov
into
mulb
mov
mov
inc
insl
addr16
mov
lea
ret
mov
into
mov
icebp
mov
test
sub
mov
adc
out
popa
push
test
jmp
popa
ret
dec
push
enter
adcb
out
adc
adc
push
or
mov
jg
je
loope
sub
dec
es
popa
sar
mov
and
pop
imul
popa
pop
pop
xor
pop
icebp
inc
push
jle
or
mov
adc
mov
push
into
dec
lret
sbb
pop
subl
pop
and
pop
and
icebp
out
mov
outsl
ss
addr16
enter
cwtl
stos
push
adc
jg
aam
out
adc
inc
adc
mov
jb
ljmp
and
popa
push
mov
les
pop
sbb
xor
pop
sub
pop
mov
and
or
dec
adc
loopne
mov
cmp
popa
pop
jecxz
dec
mov
stc
fldcw
push
imul
lret
mov
sub
clc
rorl
xor
sub
mov
out
leave
lret
sbb
popa
xor
push
popa
cmpsb
scas
cmp
dec
mov
lcall
dec
inc
push
scas
fcmovnu
loope
add
pop
inc
pop
mov
pushf
enter
aam
mov
push
int
push
mov
cmp
and
or
imul
sbb
mul
pop
popa
cmpb
ror
cli
shlb
xor
es
popa
loope
jno
xor
popa
sub
push
es
rcl
fcomps
sbb
shl
jmp
pop
add
and
test
fwait
push
insb
mov
add
test
lret
pop
jg
loope
fstp
sbb
xchg
or
jl
xchg
dec
sbb
popa
sub
stos
int3
cltd
lods
out
aad
sub
lret
in
js
enter
cmp
dec
mov
bound
shl
lret
pop
adcb
jecxz
adc
fs
fistl
mov
xlat
lret
aas
dec
jne
push
jnp
popa
cmp
rcrb
popa
test
lcall
cltd
mov
lahf
or
outsb
sub
mov
cmp
popa
and
adc
popa
dec
xchg
repnz
xchg
push
cli
arpl
or
xor
jmp
mov
inc
mov
sub
mov
mov
xchg
mov
dec
dec
scas
or
in
and
jp
daa
fisttpll
movsl
nop
jge
lods
inc
popa
ss
bound
stos
scas
dec
iret
push
adc
rcrl
push
popa
dec
push
mov
enter
popa
fwait
mov
inc
cs
loop
shl
cmp
imul
std
andb
and
xchg
mov
jnp
xor
subb
push
stc
xor
xlat
imul
inc
dec
xchg
mov
inc
insl
ret
and
adc
push
add
jmp
popa
pop
ljmp
insb
mov
mov
inc
in
arpl
xor
inc
mov
sbb
and
call
out
lods
and
lret
lock
and
out
loope
repz
into
dec
fnstenv
xchg
jns
outsb
leave
fldenv
cwtl
shrl
mov
mov
add
sbb
sbb
ljmp
lods
adc
mov
sbb
jb
addr16
and
pop
xor
ja
pop
jo
and
clc
ret
mov
or
lds
and
pop
mov
adc
addr16
movsl
jmp
xchg
dec
lds
pop
inc
adc
xlat
mov
ljmp
sbb
outsl
dec
lcall
mov
mov
out
xor
sub
sbb
ficompl
and
int
insl
mov
outsl
or
insb
addr16
ljmp
in
or
call
sbb
lret
jl
add
or
loope
icebp
leave
cmp
out
dec
push
add
sub
int3
xchg
stos
fstl
ja
sub
rolb
out
addr16
sahf
jo
dec
test
test
push
mov
mov
and
jmp
jns
ds
and
jae
mov
or
jns
insl
inc
leave
divl
scas
out
fs
ret
and
sub
sbb
xor
out
mov
std
lcall
jns
lret
repz
popa
stos
das
iret
repnz
test
xor
cld
cli
bound
dec
fstps
fcompl
mov
and
fistps
popa
leave
cmp
xchg
in
arpl
in
adc
mov
inc
mov
xor
dec
add
mov
stos
mov
repnz
js
mov
stc
xchg
out
gs
add
xor
dec
or
test
mov
xor
mov
or
in
mov
shll
ljmp
repnz
pop
shll
test
jmp
mulb
dec
add
cmc
negb
mov
rolb
jg
in
mov
dec
dec
adc
pop
adc
push
daa
cmp
icebp
adc
sbb
ljmp
rcrl
add
add
ljmp
dec
out
popa
xor
pop
ficoml
dec
in
scas
xchg
push
dec
cld
push
ret
xchg
push
add
leave
xorl
movsb
cmpsb
dec
mov
sub
mov
test
push
rorb
xor
sub
sbb
arpl
sub
dec
addr16
jo
hlt
and
fucom
bound
dec
mov
jecxz
push
mov
icebp
mov
int
std
loop
fwait
out
sbb
fdivs
jge
jg
leave
adc
outsb
push
mov
push
and
or
push
shll
dec
mov
jno
or
insl
xchg
jae
cmp
rcrl
icebp
fstp
sub
and
lds
push
dec
pop
je
dec
add
aaa
xor
xchg
push
leave
mov
push
leave
and
ljmp
sbb
inc
adc
mov
add
ja
outsl
leave
addl
ljmp
outsl
mov
sbb
jns
out
lret
dec
jg
cmpsb
add
icebp
mov
dec
loopne
int3
mov
ljmp
mov
loope
cmpsl
test
adc
pop
push
in
or
enter
jp
pop
outsl
stc
dec
fwait
push
or
popa
loop
mov
cmp
rolb
popa
mov
cld
adc
mov
xchg
or
sbb
clc
lea
pop
cmp
mov
orl
loope
xor
popa
sti
test
in
xchg
cld
jg
jb
or
jnp
mov
fists
popa
shrl
cmp
popa
mov
add
test
add
popa
in
das
and
bound
adc
fwait
inc
adc
popa
mov
imul
repnz
scas
adc
push
cltd
fwait
mov
popa
add
push
jno
lods
add
mov
loope,pt
aam
sbb
repz
fcompl
jp
cmp
jno
xchg
pop
mov
pop
pushl
mov
inc
push
push
push
clc
jno
mov
sarb
jne
jns
sub
inc
pop
fldenv
aaa
jmp
xor
mov
idivl
add
mov
dec
fists
enter
push
es
lret
cmpl
push
pop
insl
sti
fisubs
inc
cs
cmc
sub
ja
mov
dec
jg
popa
mull
fwait
ds
in
scas
push
out
cmpsl
xorb
or
hlt
mov
dec
int3
ret
push
dec
popa
xchg
call
inc
xchg
popa
popf
xchg
aaa
cmp
sbb
popa
out
and
pop
adc
xlat
popa
cmc
pusha
movsl
sarb
dec
cs
adc
cli
out
popa
sbb
out
xor
sbb
or
or
negl
subl
test
fcomp
scas
std
test
jge
ret
popf
adc
int3
sbb
das
divb
pop
setl
mov
adc
and
mov
add
into
mov
mov
popa
add
or
nop
mov
aaa
cmc
loope
into
and
popa
sbb
gs
xchg
mov
cmp
imul
xor
loope
xor
mov
lds
inc
cli
popa
sub
jecxz
cmpsl
push
mov
bound
xchg
dec
push
fwait
popa
push
mov
clc
movsl
popa
shrl
mull
flds
in
popa
inc
jg
dec
cmpsb
dec
out
popa
pop
dec
hlt
xacquire
notb
cmp
sub
jne
fwait
clc
leave
popa
repz
enter
mov
repz
fs
adc
jb
fdivrl
and
adc
hlt
jns
insb
sti
icebp
popa
xor
test
lods
jmp
aaa
popa
fstpl
push
shlb
lahf
js
popa
loope
or
mov
push
xor
dec
lahf
inc
push
mov
ja
push
pushf
iret
jmp
add
movsl
adc
rcrb
outsb
adc
imul
or
pop
popa
mov
out
popa
lea
xchg
add
mov
lahf
mov
mov
pushf
popa
xchg
jo
imul
and
iret
mov
mov
fmuls
lea
dec
mov
adc
popa
ja
movsl
aam
dec
popa
cltd
xchg
cld
fwait
inc
mov
mov
and
xchg
leave
test
push
outsl
cli
js
das
lret
sub
inc
push
sub
dec
jge
jne
cmc
popa
adc
jle
loopne
loope
add
xor
push
std
and
lods
adc
lea
and
xchg
jg
test
sbb
pushf
inc
gs
fstps
arpl
and
sbb
ss
cmp
and
or
loope
insl
in
repz
xor
pop
sub
lret
movsb
and
sbb
xchg
shrb
push
js
and
aas
imul
leave
test
mov
lods
adc
xchg
cmp
mov
mov
insl
fdivs
scas
pop
or
in
popa
push
xchg
mov
push
sub
rcr
mov
cmp
mov
lahf
loope
lea
dec
pop
pop
inc
fnsave
stc
ljmp
or
mov
sbb
loop
xchg
xor
popa
adc
mov
popa
jbe
cmp
and
push
loop
inc
sub
adc
test
cmp
loopne
popa
cli
jp
addr16
add
fwait
mov
sarl
ja
popa
xor
xchg
xchg
jo,pt
das
enter
fs
popa
stos
call
xchg
arpl
rcrl
inc
iret
jns
inc
lds
pushf
test
fmuls
xchg
filds
dec
stc
mov
insl
cmp
xchg
mov
out
or
arpl
dec
popa
xchg
mov
mov
popa
je
or
jns
dec
dec
insb
sub
hlt
jnp
mov
dec
test
xchg
inc
mov
inc
not
jg
iret
cmp
mov
and
xchg
mov
popa
fimull
enter
es
imull
nop
popa
mov
inc
jbe
jg
mov
mov
jmp
les
mov
and
sbb
adc
inc
cmc
cs
pop
add
and
es
push
outsl
imul
mov
icebp
outsl
aas
into
and
and
mov
push
push
mov
add
aam
xor
in
mov
adc
dec
and
leave
popa
push
andl
push
or
inc
mov
aas
jo
inc
test
push
add
inc
cmp
jecxz
push
add
inc
mov
and
into
cmpb
call
inc
fwait
je
pop
push
mov
aaa
mov
inc
inc
not
popa
mov
adc
lcall
lods
out
pop
lret
fisubl
pusha
popa
fucomp
mulb
mov
es
ljmp
push
popa
jg
mov
cwtl
popa
lcall
cmp
mov
jmp
or
adc
or
les
pop
xor
bound
bound
add
frstor
mov
and
dec
inc
bound
daa
push
shll
pop
popa
sahf
mov
insl
imull
popa
jge
xchg
gs
movsb
push
popa
scas
lods
pop
mov
call
jnp
cwtl
int3
xchg
pop
jl
fs
xor
sbb
mov
out
push
lods
sbb
sub
fnsave
popa
icebp
push
popa
pop
sbb
sbb
and
jg
sub
push
pop
xchg
sbb
shll
cmp
popa
xor
jp
push
mov
jbe
add
mov
repz
insb
insl
cwtd
popa
addl
mov
lods
fptan
lahf
movsb
mov
xchg
sub
mov
out
js
push
aad
bound
mov
pop
popa
inc
push
xchg
decl
xor
and
push
mov
dec
dec
and
cli
or
arpl
pop
add
cmc
popf
xlat
adc
out
js
data16
outsl
and
mov
ret
popa
sub
notl
rorb
jecxz
shlb
mov
pushf
repz
push
insb
loop
stc
pop
fsubl
aam
ds
add
scas
or
mov
dec
movsl
mov
adc
iret
dec
out
aas
lahf
push
cmp
arpl
dec
daa
xchg
cmpsl
inc
inc
xchg
jle
lods
pop
popa
inc
ret
xchg
add
aaa
popa
pop
and
sub
pop
and
jp
jbe
cmp
xchg
xor
cli
in
xchg
popa
inc
clc
xchg
fwait
in
paddsw
sbb
push
popa
repz
test
sub
push
cmp
mov
jns
bound
inc
mov
adc
dec
call
cmpsl
repz
leave
xchg
jno
rcrb
popa
inc
fisttpll
mov
or
popa
shrb
cmc
popa
fidivrs
xchg
sahf
scas
in
int
cmp
adc
jne
in
lea
pop
scas
adc
and
push
inc
xor
test
popa
dec
mov
mulb
pop
lea
popa
dec
pop
std
shl
jae
in
mov
popa
sub
or
fs
lock
popa
test
push
stc
cmpsl
ljmp
xchg
aaa
fiaddl
cmpsb
mov
negb
cmpsl
push
push
sbb
xchg
pushf
rcr
sub
cmp
dec
mov
imul
test
and
popa
adc
mov
movsb
ja
popa
sar
cmp
int3
push
or
popf
add
adc
bound
lahf
cmc
pop
icebp
xchg
movsl
push
jbe
cmpb
xchg
lods
pop
mov
xchg
dec
popa
jne
push
shrb
pop
scas
in
mov
sbb
bnd
ficomps
daa
je
xor
popa
fcoml
popa
mov
mov
insl
imul
xchg
fadds
mov
popf
xor
loope
push
fldt
jbe
sbb
scas
add
mov
pop
xchg
push
push
fdivs
lret
sbb
add
insb
frstor
xchg
jo
pop
jmp
fcompl
jnp
cwtl
push
das
sbb
mov
incl
je
lods
pop
popa
push
fisubs
jbe
popa
or
lret
shll
sbb
or
sub
popa
movsl
push
lcall
xor
mov
sbb
and
xor
mov
dec
andl
loopne
pusha
popa
inc
stc
push
jle
cmpsb
or
pop
jno
xchg
pop
pop
ja
fs
popa
popf
inc
pusha
sahf
mov
popa
lds
push
or
out
sbb
les
popa
and
xor
lret
loopne
popa
enter
das
out
mov
push
mov
call
pop
cmp
ss
test
sti
xor
popa
mov
mov
mov
int
aad
ficoml
sub
popa
ret
sbb
add
or
sub
lods
push
jno
cmc
and
test
icebp
mov
sub
loope
mov
sbb
sti
sar
push
xchg
adc
dec
mov
inc
mov
loope
xorb
push
mov
jbe
or
int3
ja
addps
cmp
popa
ljmp
js
rolb
cmp
xchg
bound
lds
push
std
jbe
fnsave
jp
mov
xor
push
jg
stos
mov
cmp
sahf
sbb
xlat
popa
fsubs
pushf
mov
jg
pop
mov
fstps
push
adc
insb
sub
lock
or
cs
dec
test
sub
pop
out
sub
lods
push
bound
popa
add
inc
ret
mov
inc
leave
je
popa
jmp
rcrl
popa
aad
in
jp
fdiv
lock
rcll
xchg
sbb
adcb
fwait
dec
and
pusha
leave
fwait
in
popa
mov
push
xchg
jecxz
and
cmp
cmpsb
cld
insl
popa
xor
xorl
mov
lock
add
addl
sub
ret
pushf
mov
mov
sbb
inc
mov
cmp
rclb
arpl
and
mov
or
jg
pusha
popa
iret
fimuls
mov
pop
nop
out
popf
mov
or
or
jg
aam
dec
testb
andl
lcall
inc
insl
mov
popa
jg
call
mov
popa
int
stos
lods
mov
adc
mov
dec
loop
popa
das
repnz
sub
or
sbb
mov
popa
xchg
pop
movsl
and
repnz
mov
push
sub
dec
xchg
movb
test
in
fisubrl
cld
sbb
fs
sub
ret
icebp
cmp
popa
jmp
pop
adc
sar
popa
sbb
ret
sub
jle
popa
xchg
jg
ljmp
mov
inc
dec
mov
jge
ss
mov
adc
outsl
lcall
aas
icebp
decl
popa
dec
mov
push
pop
xchg
xor
fisubrs
pop
dec
addr16
pusha
push
cs
shll
push
pop
imul
or
bound
dec
les
add
push
cmpsb
xor
pop
jecxz
arpl
xor
ja
push
movsb
jno
jne
cmpsl
xchg
rcrb
in
cmp
mov
xor
cwtl
xchg
adc
inc
sbb
arpl
jnp
or
gs
mov
cltd
cmp
sbb
outsl
pop
clc
arpl
adc
pop
dec
mov
in
jo
stc
dec
outsl
xlat
xchg
dec
inc
dec
ljmp
scas
adc
mov
mov
jmp
leave
arpl
xchg
ljmp
push
xchg
dec
sub
lods
jg
repz
cwtl
cwtl
jns
or
leave
mov
std
loop
into
lock
in
inc
popa
push
xchg
sub
pop
and
and
pop
pop
inc
push
xor
fwait
push
and
incl
inc
outsl
pop
mov
jmp
mov
js
jecxz
jmp
mov
dec
jbe
sbb
push
cmp
dec
fbld
shlb
sub
fwait
ljmp
ljmp
insl
and
ret
dec
fldcw
mov
push
lcall
mov
int
imul
jns
adc
xlat
in
loope
aaa
shlb
out
fwait
jns
and
pop
pop
cmpsl
push
mov
dec
push
mov
in
sub
lods
or
pop
pusha
neg
mov
adc
or
cmp
roll
mov
std
loope
iret
ds
jmp
test
mov
jge
or
movsb
xorl
sbb
xlat
popa
out
in
ljmp
js
push
mov
push
sbb
divb
jns
inc
pop
add
mov
mov
sahf
mov
mov
sub
nop
scas
adcl
push
aaa
sbb
pop
mov
test
sbb
add
and
je
xor
out
jno
leave
int
cmpsl
inc
mov
fwait
mov
xor
mov
test
xor
pop
popa
in
test
sbb
push
xchg
addr16
inc
dec
pop
lcall
out
cld
mov
in
test
mov
roll
dec
mov
sub
and
leave
inc
jo
imul
ret
add
dec
inc
jge
mov
adcl
dec
stos
fcomp
ret
cmp
stos
add
loope
mov
mov
or
mov
test
divl
out
int
ficomps
lahf
mov
add
shl
and
shrl
mov
pusha
push
pusha
insb
dec
and
and
sbb
pop
aaa
icebp
sarl
sbb
outsb
cwtl
and
fsubl
and
lea
push
sub
inc
mov
cld
mov
mov
adc
jl
xor
fscale
leave
push
xchg
push
pop
sbb
xchg
popa
imul
hlt
fildl
loope
nop
lods
scas
popa
sub
mov
dec
outsb
out
inc
xor
int3
loope
sarb
ss
sub
push
or
orb
addr16
add
rep
inc
ds
fdivs
pop
xor
movsb
xor
pop
popa
xchg
dec
sarb
add
jmp
and
popa
mov
scas
add
push
sbb
popa
mov
dec
inc
xor
jbe
test
xchg
mov
add
push
loope
fcomps
mov
popa
loop
and
lret
dec
push
sbb
repnz
cmpsb
xor
add
mov
mov
fldenv
cmp
popf
fwait
dec
mov
sbb
pop
cmp
cmp
hlt
add
pop
dec
xchg
dec
xor
add
jp
add
jbe
pushf
ss
and
dec
ja
cs
mov
or
pop
pop
stos
ljmp
stc
mull
dec
test
mov
sti
mov
push
sub
dec
ja
sub
cmp
xchg
leave
sbb
fbstp
jno
es
in
shll
leave
negb
pop
pop
scas
lret
xchg
pop
shlb
jno
addr16
mov
sub
jo
rcrl
cld
test
push
xor
aas
xor
int
adc
mov
mov
jmp
jmp
cmpsb
mov
data16
cld
icebp
repz
popf
int3
mov
xchg
pop
fucomip
mov
pop
jmp
je
sbbl
sub
inc
sbb
adcb
shll
std
xchg
adc
pop
lcall
int
jecxz
pop
arpl
imul
inc
cmp
dec
addr16
mov
mov
cld
lods
push
mov
or
and
outsb
xor
dec
adc
add
dec
push
push
sbb
dec
jnp
xor
sbb
pop
and
xchg
jno
mov
and
pop
dec
cmpsb
mov
dec
add
jecxz
or
ret
pop
add
clc
inc
mov
sub
jns
and
cli
jp
push
lret
and
ljmp
icebp
adc
xchg
mov
fsts
jle
aam
pop
rcr
jns
bound
loop
dec
int
sbb
or
outsl
adc
push
sti
jb
and
push
fs
popa
dec
mov
sub
test
jmp
adc
popa
cwtl
test
int3
arpl
pop
ret
push
mov
mov
popa
xlat
add
jge
jne
inc
sbb
ljmp
pusha
test
aaa
movsl
jge
lret
xor
mov
or
cli
iret
sbb
mov
cmp
popa
pop
sbb
inc
push
sbb
sbb
movsb
adc
sti
jge
lods
add
sbb
mov
jbe
and
sub
ds
cmp
frstor
call
aaa
pushf
popa
pop
pop
xchg
sub
pop
jae
or
xlat
popa
mov
nop
jbe
push
sub
inc
mov
add
mov
popa
xor
sub
into
popa
pushf
fisubl
cltd
jnp
shll
mov
mov
pop
xchg
sub
popa
pop
jp
push
addr16
lods
out
sub
ror
daa
cld
aam
popa
pop
push
jp
cmpsb
push
push
sti
lcall
and
test
popa
adc
push
in
mov
or
cmp
insb
sbb
arpl
stc
jo
mov
inc
and
test
jge
aam
push
fisubrs
jl
bound
loope
xchg
popa
xor
ja
xchg
and
stos
popa
xor
jmp
mov
fwait
lea
xor
movsb
aam
jge
lods
push
or
inc
pushf
popa
adc
and
xor
std
sbb
pop
push
test
mov
cli
out
sbb
mov
pop
mov
pop
in
sarl
jg,pt
xchg
popf
cltd
mov
mov
and
xor
and
jle
or
mov
popf
push
lret
pop
daa
popa
rcr
mov
fs
mov
mov
sub
inc
inc
ret
mov
int
pop
mov
mov
shll
jne
and
cld
andb
jnp
adc
repnz
sbb
popa
cmp
jbe
cmp
cs
stos
dec
dec
ljmp
popa
mov
stos
sub
fistps
jnp
lret
fs
add
push
popa
push
je
in
ljmp
ja
or
bound
rorl
add
xchg
sti
sbb
pushf
xor
loope
sbb
scas
fs
mov
adc
cmp
dec
mov
cld
mov
loope
adc
lea
jecxz
pushf
mov
stos
mov
popa
js
xor
xchg
popa
sub
cmp
popa
sub
inc
stos
arpl
fld
dec
push
lahf
or
in
inc
jnp
popa
icebp
insl
cli
pop
bound
les
lds
in
xchg
or
loope
mov
sbb
gs
dec
mov
stos
mov
call
popa
addr16
int3
xchg
ret
fs
sbb
dec
jge
inc
mov
xchg
xchg
fwait
sbb
icebp
xor
sahf
imul
ds
in
data16
popa
out
lock
sbb
push
aaa
ret
ret
imul
out
jmp
ret
dec
fbld
ret
xchg
mov
icebp
dec
mov
fs
xor
jmp
jns
popa
ret
xchg
fcomps
xchg
lret
je
pop
popf
pop
pop
loope
insl
cmp
cs
and
out
pop
lods
inc
andl
sub
popa
imul
jg
xchg
repnz
jne
enter
js
cmp
xchg
jo
jle
pop
xchg
in
outsl
nop
push
jo
gs
sub
icebp
cmp
je
dec
mov
popa
jmp
jno
fildl
leave
loopne
sahf
out
lret
clc
xchg
enter
pop
fisttps
out
arpl
hlt
push
pop
dec
movsb
js
lahf
jecxz
dec
pop
inc
clc
ja
pop
jae
repnz
jp
popa
aad
int
push
enter
mov
add
lahf
adc
xor
fcmovnb
cmp
popa
push
flds
mov
sbb
arpl
cmc
rcrl
aad
popa
test
jle
push
pushf
orb
in
mov
gs
sbb
cmp
mov
cld
xchg
and
push
div
popa
xor
mov
dec
popa
rcl
and
xor
popa
cs
xor
dec
ss
and
and
mov
and
pop
xor
mov
and
cmp
movsl
jge
lea
daa
inc
add
sub
inc
sub
nop
mov
andl
lds
adc
imul
repnz
lods
mov
ret
jle
xchg
push
mov
add
leave
lock
shll
pusha
or
xchg
add
pop
into
jp
imul
push
sub
sub
mov
lods
in
push
mov
call
movsb
and
stos
push
popa
dec
dec
jp
xlat
dec
repnz
jo
push
jg
add
movsl
sbb
mov
popa
fstpt
jmp
or
mov
or
test
mov
push
bound
xor
inc
and
xchg
jge
sti
mov
popa
lret
gs
pop
popa
rorb
pop
lock
rcll
and
repz
fmul
push
sbb
andl
fidivrl
fdivs
mov
add
add
inc
add
ljmp
lcall
fs
mov
mov
icebp
mov
or
cmp
popa
outsb
and
ss
inc
xor
sbb
clc
sahf
sub
popa
jbe
jae,pt
jo
mov
jle
pusha
jmp
jae
add
dec
push
cmpsb
fldenv
aas
cmp
pop
inc
cmc
bound
adc
inc
jno,pn
lret
add
aaa
or
sub
push
mov
mov
add
push
jne
xchg
repz
fs
andb
adc
popa
cld
rolb
loop
std
hlt
popa
cmpsb
imul
sbb
mov
popa
push
lcall
push
xlat
movsb
jne
pop
lods
pop
cmp
push
clc
fsubs
mov
orl
mov
xor
movsl
mov
pop
adc
fcoms
jmp
leave
test
popa
sbb
cmc
ja
sub
pop
mov
aam
into
popa
je
lret
dec
xchg
adc
jo
int3
dec
hlt
and
jg
jnp
out
std
popa
jno
je
adc
inc
stc
push
lret
dec
shll
ja
xor
fs
add
popa
add
pop
pop
mov
push
arpl
sti
test
int3
mov
mov
ja
lret
icebp
lret
outsl
insb
push
ljmp
jne
push
xchg
add
add
pop
or
pop
pop
dec
mov
mov
xchg
pop
push
jo
cmc
subl
popa
sub
inc
insb
movsl
shrb
loope
stos
sbb
popa
pop
mov
sbb
xchg
mov
and
xchg
pop
add
negl
mov
xchg
aam
sub
push
mov
jno
insl
outsl
and
mov
movsl
lock
sbbb
bound
mov
lahf
push
popaw
arpl
fs
inc
xor
lret
rcrl
leave
popa
mov
push
popf
es
sbb
addr16
add
xor
cmp
aam
sti
fistpll
ret
orl
rcrb
fnstsw
hlt
mov
popa
fidivrl
mov
cmpb
sti
jmp
leave
cmc
popa
and
mov
test
andl
mov
mov
icebp
in
mov
jl
inc
popa
in
push
bound
sarl
clc
mov
push
dec
jb
test
cs
leave
jl
ret
fildll
cli
cltd
xor
sarl
shll
add
xor
and
lods
scas
pop
sti
adc
lret
test
repnz
imul
outsl
cmpsb
pop
imul
icebp
daa
bound
and
pop
loopne
repz
fwait
pop
lcall
push
mov
shlb
mov
stc
aaa
popa
nop
pop
inc
insb
hlt
test
cmc
popa
loop
jae
jl
jp
jo
stos
cli
cmp
popf
jmp
jg
add
icebp
jg
mov
lods
dec
scas
lret
or
xor
pop
mov
pop
add
and
push
or
adc
loop
in
repz
cmp
insb
dec
ss
dec
in
mov
xor
push
mov
insl
stos
pop
sub
mov
push
shll
mov
insl
dec
jne
out
in
fistpl
lds
ja
push
push
dec
push
popa
leave
dec
mov
shr
push
je
shll
jmp
or
pop
push
leave
cmpsl
movsl
pop
insl
pushf
dec
mov
pop
les
lcall
lahf
movsb
pop
mov
jae
inc
xchg
in
jb
xchg
mov
popa
inc
and
push
std
in
push
popa
movsb
dec
push
dec
xchg
sub
std
adc
push
mov
inc
stos
mov
loopne
aaa
mov
sti
mov
addr16
push
inc
outsl
lock
insl
pop
dec
or
imul
fcomps
jmp
and
mov
mov
clc
xor
sub
cli
push
shll
cmp
in
scas
mov
popa
push
fidivrl
dec
fs
jmp
mov
sub
aad
jmp
or
shll
int3
cmpsb
or
jg
ja
inc
mov
call
jge
pop
popa
insb
test
and
cmpsb
cmpsl
adc
andl
bnd
and
loopne
or
jbe
xchg
ja
xchg
addr16
movsl
adc
and
cmp
add
outsl
movsl
xchg
loop
mov
repz
rcr
sbb
sar
push
push
cmp
push
inc
mov
mov
test
test
fldl
xor
jl
cmp
popa
lret
sub
aad
add
sub
inc
and
mov
es
pop
popa
out
mov
popa
push
pop
dec
nop
movl
popa
int
cltd
mov
cmpsb
fstl
cmp
jecxz
jno
adc
mov
xor
cmpsb
cmp
in
test
mov
xor
sub
adc
stc
popa
lret
dec
sbb
xor
call
popa
iret
cltd
pop
mov
mov
into
inc
cmp
sbb
dec
sbb
adc
loope
xor
gs
lods
in
stos
popa
or
pop
int
mov
adc
jge
inc
add
jbe
mov
xlat
cmp
repz
popa
pop
push
daa
cmp
push
or
mov
stos
fistpl
popa
lret
sbb
jo
push
popa
scas
aaa
in
dec
or
or
rcr
dec
xor
mov
mov
es
push
dec
mov
xor
cmp
push
arpl
cli
test
popa
sbb
xor
popa
adc
cmp
dec
movsb
int3
or
xchg
imul
lcall
pop
cmp
pushf
cmc
fs
xor
frstor
aam
push
and
fstpl
sti
fistps
popa
xchg
and
dec
pop
popa
mov
movsb
scas
xchg
popa
jmp
jne
mov
insl
cmp
jbe
cmp
popa
pop
or
dec
or
and
daa
fidivl
out
test
jmp
mov
ljmp
ds
orl
mov
nop
dec
imul
push
ljmp
mov
ds
and
mov
sbb
dec
add
int3
roll
stc
andb
inc
daa
hlt
call
popa
jmp
ror
and
pop
xor
jge
or
jne
dec
ds
stos
mov
dec
sub
ret
loope
cmpsl
and
js
mov
or
clc
sub
shlb
out
mov
lret
int
jne
fwait
mov
xchg
mov
popa
add
adc
fdivrl
pushf
inc
ja
dec
xlat
push
inc
ljmp
popa
mov
jge
xor
push
loope
inc
pop
push
push
gs
popa
and
iret
fnstsw
je
addb
popa
xchg
into
sub
popa
adc
out
sbb
fstps
ljmp
out
nop
xor
stos
inc
fwait
mov
loope
xchg
mov
jb
outsb
pop
dec
cmp
fimuls
xchg
rcrb
push
pushf
pop
or
sbb
ret
mov
sub
std
cmp
sub
fsubl
jle
popa
mov
xchg
mov
test
loop
jo
flds
jmp
add
inc
cmp
cmpsb
and
jecxz
pop
sahf
popa
mov
mov
mov
inc
test
push
addr16
adc
sarb
and
rcr
enter
arpl
jns
shlb
clc
pop
fsubl
push
lock
test
outsb
loopnew
ror
popa
jae
nop
cmpsl
lds
sbb
rclb
cmp
das
arpl
add
ret
sbb
mov
popa
cmpsb
mov
popa
adc
sub
popa
xchg
mov
ret
xlat
movsb
ficomps
popa
roll
jp
jnp
test
fucomp
push
dec
xchg
sbb
jo
or
inc
shrl
loopne
add
mov
inc
adc
dec
jns
pop
add
outsl
jle
xchg
mulb
outsb
xchg
icebp
inc
popa
scas
cmp
dec
lret
push
insl
mov
cmp
cs
pop
popl
xor
ljmp
outsl
xor
xchg
xor
popa
into
pop
jbe
lods
fistpll
cmpb
bound
popa
aad
jle
mov
cs
imul
push
xchg
fs
push
outsb
and
repnz
adc
mov
sbb
pop
mov
push
dec
cwtl
leave
rcll
icebp
jp
mov
int3
add
sarb
sahf
push
dec
lods
jecxz
xchg
ror
in
aas
mov
aas
add
cmp
bound
into
loop
ficomps
arpl
xor
and
popa
out
outsb
pop
call
mov
loope
loopne
adc
mov
mov
inc
fs
test
add
popa
les
cmp
mov
adc
add
popa
in
mov
inc
pop
jae
push
dec
popa
fistps
mov
lods
push
shl
repnz
push
lcall
ljmp
jbe
jle
add
xchg
cmp
mov
adc
pop
and
sti
push
ljmp
cmpsl
and
test
popa
push
xor
sbb
sbb
paddb
scas
inc
or
popa
xchg
aas
nop
or
add
lret
cmpsl
scas
sub
push
mov
add
out
xor
popa
imul
adc
cmp
shll
fs
fadd
cs
add
shlb
mov
js
popa
sub
xchg
loopne
setbe
mov
stc
pop
popa
and
sbb
popa
push
fs
into
loopne
mov
daa
pop
movb
jg
mov
stos
fnsaves
ja
daa
push
cmp
pop
popa
addb
shll
mov
xlat
mov
sbb
xor
and
inc
push
jb
lods
mov
or
daa
adc
adc
sbb
ret
xor
jnp
adc
sub
popa
es
outsl
mov
cmpsb
mov
popa
inc
mov
scas
push
das
sti
push
out
mov
inc
nop
aad
outsl
adc
ret
inc
ds
mov
and
inc
sub
jno
test
xchg
bound
inc
mov
pop
mov
push
cmp
adc
outsb
jne
add
clc
xor
jno
fisubl
pop
loope
loopne
xor
mov
mov
insb
gs
push
mov
popa
mov
adc
hlt
adc
arpl
ret
inc
movsb
and
xchg
add
in
lcall
mov
push
pop
int
pop
or
mov
and
fildl
popa
ret
scas
aam
int3
imul
scas
jnp
popa
shlb
mov
out
movsl
cmp
jae
into
outsl
es
dec
popa
jge
icebp
inc
add
cwtl
mov
cvtps2pd
jo
aas
pop
jg
jbe
popa
xor
popa
movsb
and
mov
je
xchg
cmp
lcall
inc
push
dec
mov
lret
mov
and
aas
mov
sub
push
orb
in
adc
bound
daa
jmp
popa
cwtl
dec
xor
pop
fs
sti
sub
imul
shlb
test
dec
mov
push
mov
and
popa
cmp
pop
jge
daa
ss
mul
stc
stc
cmpsl
push
cmp
lret
xchg
sti
xchg
imul
in
js
cmp
repnz
xor
dec
out
repz
fcompp
loope
stc
mov
lahf
or
js,pn
fiaddl
popa
jl
lcall
xor
sub
sub
leave
in
test
loopne
out
cmpsb
aas
jb
js
dec
pop
jge
push
push
pushf
or
dec
fistl
andb
jmp
and
and
pop
inc
or
jecxz
xor
in
pop
fcmovnbe
ffree
imul
shr
pushf
cmp
jmp
dec
cwtl
shl
mov
dec
fcoms
push
pop
cmpsl
aad
je
dec
sub
into
fiadds
notl
or
inc
dec
call
mov
push
lds
sbb
insl
dec
sub
sbb
lods
subl
mov
mov
mov
dec
iret
push
adc
faddl
jg
cld
and
push
sub
cmp
stos
mov
inc
push
or
sub
add
jg
andl
out
jge
xor
popa
imul
loopne
dec
adc
loope
stc
jmp
xchg
xchg
rol
mov
sub
sahf
xor
cld
mov
mov
jg
in
test
push
adc
jns
andb
andl
push
sub
or
inc
std
xchg
hlt
fs
popa
nop
in
out
clc
leave
jb
mov
sub
add
sub
or
push
mov
jb
xor
popa
sub
mov
imul
mov
sbb
xchg
popa
es
pop
mov
btc
mov
mov
lret
popa
outsl
ds
jg
mov
cmp
clc
and
xchg
pop
into
out
sub
out
and
jo
js
jge
jle
xor
cmp
fidivl
pop
repz
cmpsb
popa
jmp
pop
leave
shlb
scas
test
pop
xchg
inc
sub
add
xchg
xor
xor
dec
dec
jae
into
outsl
add
popa
jb
mov
ja
stos
mov
cmpsl
jne
push
push
dec
push
xor
orb
xchg
mull
call
and
out
fsubl
lods
fnstsw
dec
adc
push
nop
sub
test
adc
jae
dec
pop
pop
imul
mov
sahf
stos
mov
aad
fistps
or
loope
xchg
addl
pop
jg
fldenv
xchg
or
jb
ficoml
jne
aam
mov
out
sub
pop
adc
sbb
test
shrl
sarb
int3
popa
ret
push
or
mov
jbe
sbb
and
xor
inc
jle
popf
pop
sti
ljmp
stos
ret
sbb
mov
jl
popa
jno
push
ret
pop
pop
popa
sbb
insl
andl
jle
fs
gs
jge
fwait
ret
and
out
sahf
fdivrl
dec
or
xlat
xchg
scas
pop
popa
add
fsubl
leave
testl
into
inc
sbbl
shlb
xor
push
or
inc
jg
mov
mov
rcrl
je
ret
mov
dec
stc
stos
jno
aaa
adc
jg
cmpsb
arpl
mov
nop
popa
inc
push
aam
and
hlt
popa
add
out
cmp
pop
mov
dec
clc
adc
popa
loopne
lret
adc
vpunpckldq
mov
jo
repz
fisubs
nop
xchg
sahf
andb
sti
xchg
js
adc
push
nop
arpl
and
xchg
popa
sahf
sub
lds
push
jnp
xchg
jno
mov
stos
cmp
in
pop
xor
inc
popaw
jecxz
jle
mov
fidivrl
gs
fmuls
pop
cmpsb
popa
pop
lret
jle
mov
jno
popa
shl
cmp
mov
inc
mov
cltd
in
mov
popa
mov
sbb
shl
shlb
mov
jle
adcb
sub
divb
popa
pusha
or
mov
jo
lea
add
popa
test
ds
fs
ja
inc
mov
jae
arpl
popa
cmp
fsubs
cmpsb
test
sarb
add
mov
add
jecxz
inc
sub
xlat
dec
outsl
ret
in
cmovno
mov
ds
jo
gs
pop
cmp
test
icebp
jo
ds
xor
mov
sbb
push
loope
jnp
rcrb
popa
dec
or
add
aaa
jmp
push
shll
mov
mov
cmp
cld
mov
jg
mov
daa
stos
scas
loope
sbb
dec
call
mov
mov
popa
pop
xor
scas
and
loope
fwait
in
dec
push
sub
in
rcll
out
dec
inc
inc
xchg
popa
sbb
sbb
iret
mov
sahf
out
push
repnz
mov
fildl
mov
loopne
jg
gs
mov
sub
enter
scas
sahf
and
aad
lods
fisubrs
pop
popa
sub
xchg
push
adc
cwtl
mov
popa
clc
adc
dec
pop
inc
rcl
popa
jle
push
fcmovb
and
jb
cmpsb
addr16
popf
inc
jmp
jbe
xchg
imul
out
popa
lods
xor
outsb
xchg
mov
mov
jg
cmc
sbb
sbb
dec
jo
aaa
pop
mov
pop
aad
inc
loope
cmp
enter
adc
xor
sub
adc
lods
jae
push
out
stos
jmp
ljmp
mov
push
push
push
cmpb
test
cmp
xor
popa
outsl
sub
and
leave
js
jb
movsl
inc
hlt
dec
jge
push
and
mov
dec
pop
or
popa
movsb
mov
pop
clc
popa
into
add
js
orb
cs
jno
fidivl
cmp
cli
jo
and
mov
out
add
push
pushf
sub
ds
push
adc
xlat
cmpsl
sahf
popa
movsl
dec
in
repnz
sub
fisubrs
jb
fisubrl
popa
movsb
adc
insl
jecxz
push
inc
pop
mov
add
icebp
or
mov
xchg
mov
popa
inc
jo
popl
pop
xor
pop
inc
fwait
lds
adc
cs
add
call
push
pushf
xorl
jge
mov
mov
popa
aas
or
cmp
pop
cltd
sbb
add
sbb
outsl
jle
les
and
add
arpl
pop
cmp
sbb
test
outsl
pop
add
shll
jo
test
test
dec
and
xchg
fmul
pushf
in
popa
cmp
pop
sarl
push
xlat
lock
ja
jmp
popa
clc
repz
mov
xor
cs
stc
pop
xor
outsl
pop
push
int3
loope
mov
pop
and
shlb
std
or
fadds
in
in
xor
jb
ficoms
push
imul
hlt
xchg
xchg
pusha
mov
popa
insl
jb
out
stc
jmp
mov
or
gs
dec
push
mov
loope
ja
sub
out
and
mov
data16
mov
inc
pop
loope
loopne
test
ficoml
ret
daa
icebp
iret
les
dec
mov
repnz
pop
push
mov
leave
int
test
clc
pop
jmp
lods
dec
popa
test
or
pop
or
mulb
push
add
dec
jle
popa
xchg
enter
scas
mov
xor
pop
and
inc
jmp
adcl
repz
popa
fidivrs
das
adc
fst
stc
dec
jbe
push
popa
fstps
lcall
dec
popf
stos
pop
bound
mov
pop
test
mov
jmp
add
sbb
xor
imul
test
cli
out
dec
mov
sbb
push
and
mov
cmp
mov
call
sub
mov
fiadds
pop
lahf
cmp
pop
sbb
mov
into
push
xchg
bound
adc
sub
push
aas
and
xor
daa
loopne
adcl
popa
fwait
outsl
push
leave
mov
fistpl
ja
mov
dec
or
lock
inc
addr16
lea
jo
ret
push
xor
gs
and
popa
sub
dec
mov
inc
das
mov
xchg
pop
fldt
outsb
and
and
mov
popa
dec
in
add
jmp
inc
stc
mov
popa
pop
fstpl
test
mov
les
rcll
xor
mov
or
dec
imul
repnz
mov
int
mov
arpl
mov
in
imul
arpl
sub
sar
popf
mov
sub
lock
les
cmp
jbe
dec
sbb
sbb
adc
jns
add
mov
xor
ljmp
dec
in
inc
mov
repz
and
mov
test
loop
lods
cmp
popa
jl
adc
popa
and
rolb
mov
push
pop
xor
fldt
pop
test
sbb
sub
mov
cmp
loop
fiaddl
add
jg
jl
call
xchg
add
mov
ljmp
mov
popa
jp
hlt
mov
gs
or
pushf
loope
pop
xchg
lea
mov
cs
jecxz
sbb
cli
cmovns
inc
popa
hlt
dec
dec
mov
shr
shlb
push
aaa
sbb
xor
cmp
mov
or
movsl
sub
insb
pop
enter
loope
inc
jb
add
popa
push
movsl
lret
inc
addr16
xchg
insl
xchg
aas
sbbb
xchg
push
or
xchg
xchg
cmp
ja
sub
imul
or
repnz
xchg
lcall
xlat
fwait
add
aas
push
sub
test
cmpsb
jo
subb
adc
pop
sub
mov
xor
mov
jo
popa
mov
mov
aam
push
test
rolb
ret
aaa
add
mov
jecxz
outsb
test
filds
test
push
fwait
push
negb
popa
cmp
inc
popf
iret
sarl
popa
ret
sbb
mov
add
adc
sahf
mov
inc
in
mov
xchg
jno
lea
test
ljmp
cmp
pusha
xor
lds
outsl
inc
movl
add
popa
sbb
fbstp
popa
mov
pop
in
hlt
xchg
adc
loopne
jae
fs
popa
mov
mov
int
scas
cltd
mov
das
js
aad
test
mov
dec
mov
add
out
cmc
or
popa
insb
add
mov
or
dec
jns
insl
mov
jno
popa
pop
and
fs
std
or
stc
push
xchg
fwait
jle
dec
mov
aas
jle
mov
mov
repz
push
dec
xor
pushf
retw
popf
cmc
loop
pop
mov
or
fists
popa
mov
shl
inc
fs
lret
push
lock
sti
jbe
cmp
pop
loope
out
sub
push
add
mov
cmp
push
imul
jle
out
adc
cmp
pushf
mov
in
data16
mov
outsl
xchg
dec
mov
mov
popa
mov
leave
pop
add
dec
cwtl
mov
pusha
rorb
push
push
add
popa
adc
sbb
mov
aad
shrb
adc
cltd
iret
mov
sarl
movl
lds
mov
pop
cmp
jo
dec
jg
loop
lods
ja
sub
ss
dec
lods
xor
sub
movsl
push
sbb
imul
push
data16
scas
pop
popa
adc
lret
xchg
jge
ror
loope
pushf
or
cmp
popa
les
hlt
inc
icebp
loope
push
shll
and
out
test
dec
scas
popa
mov
test
data16
xor
push
mov
popa
lock
mov
mov
into
stos
les
push
push
js
and
mov
mov
popa
lods
mov
or
pop
fbstp
ret
nop
cmovbe
outsl
fdivrs
jmp
imul
xchg
outsl
mov
push
add
inc
push
popa
pop
pop
xchg
fstpt
sbb
call
inc
pusha
andl
cli
cs
cmp
jle
mov
test
push
iret
xchg
addl
mov
and
push
jnp
popa
out
add
cmpsb
popa
movsb
js
push
or
popa
cltd
cmp
mov
pop
lahf
outsl
mov
inc
xchg
and
sbb
or
popa
scas
push
subb
jp
outsb
inc
jb
jl
test
mov
push
adc
lret
pusha
cmpsl
sub
fs
insl
lahf
into
stc
sbb
sub
push
xor
lds
popa
xor
dec
repnz
lea
sbb
jo
sub
xor
into
pop
popa
or
adc
clc
xor
sti
lcall
inc
outsb
add
std
out
sbb
imul
sbb
inc
shlb
push
ss
popa
les
enter
adc
xor
popa
leave
lods
aas
shrb
sahf
push
jnp
outsl
inc
ja
fisubs
sub
shl
je
roll
outsl
mov
pop
popa
aas
cmpsl
cmp
std
pushf
data16
sarl
mov
xor
mov
pop
sbb
call
cs
popa
in
add
and
leave
mov
mov
scas
pop
pop
cwtl
test
popa
xor
push
sbb
repz
cmp
pop
cs
je
mov
jge
test
int3
jne
sub
fidivs
jbe
fs
in
dec
mov
int
scas
add
jle
popa
jne
pop
lock
inc
adc
sbb
sub
insb
push
adc
mov
in
cmpsb
popa
mov
movsb
cmp
mov
dec
and
popa
cmp
inc
pop
jne
jl
mov
xor
popa
xchg
or
imul
inc
popa
dec
mov
jnp
jne
adc
insl
or
jmp
mov
popa
mov
loopne
dec
push
sub
lds
pop
pop
in
push
mov
inc
push
xchg
popa
inc
sbb
adc
mov
out
bound
je
sub
push
add
popa
in
push
jbe
orl
fsubl
jl
mov
mov
lret
aaa
xchg
aam
cmp
jg
jp
mov
fimuls
and
and
popa
and
cmpl
xor
subb
inc
jle
pop
push
loope
repnz
jg
mov
xchg
adc
mov
jg
lea
ror
push
popa
mov
cs
pop
and
adc
popa
cwtl
jmp
push
popa
xlat
lods
jnp
xor
mov
mov
ds
gs
mov
xor
mov
andl
pop
popa
mov
inc
dec
movsb
out
xor
aam
pusha
fidivl
push
ja
js
test
dec
and
dec
stos
xor
out
popa
inc
out
ljmp
xor
pop
popa
adc
or
dec
adc
inc
nop
lea
pusha
bound
imul
enter
mov
jnp
arpl
popa
pop
sbb
enter
fcmovbe
bound
mov
sahf
pusha
fs
sbb
addr16
dec
leave
push
outsl
aam
popa
pop
mov
xchg
popa
pop
adc
mov
movsb
or
inc
and
stc
aam
inc
loope
adc
sarb
popa
xor
pop
and
sarl
test
loope
mov
ficoml
mov
jmp
cmp
inc
out
pushf
jge
push
xorl
jp
xchg
lret
popa
es
dec
dec
jne
repnz
popa
mov
sbb
hlt
out
sbb
inc
imul
inc
pop
popa
xchg
xor
outsb
popa
imul
fsubrl
or
mov
popa
imul
xor
push
rcrl
xorb
repnz
lods
gs
nop
test
push
push
popa
and
lea
mov
lods
push
xchg
iret
inc
shrl
aad
cmpsl
push
lret
pop
push
sarb
and
inc
loope
lret
fucom
jl
mov
scas
mov
out
in
popa
mov
test
push
aas
in
popa
xor
adc
mov
imul
jecxz
inc
scas
jg
dec
push
and
adc
cltd
jns
sub
lcall
push
push
jg
popa
xchg
mov
mov
mull
lods
inc
sbb
mov
gs
ret
add
cli
in
lock
je
call
jno
sbb
testl
fnsave
int
gs
mov
push
loope
cmp
andl
stc
fisttpl
subl
and
clc
mov
adcl
or
cltd
clc
ffreep
dec
arpl
dec
arpl
scas
jo
dec
push
nop
loop
lret
mov
imul
subb
hlt
nop
mov
insl
fs
pop
xor
dec
sar
pop
aam
push
inc
ljmp
lods
jecxz
dec
in
cmp
dec
lods
popf
push
add
adc
add
rorb
mov
cmp
ret
stos
jecxz
dec
dec
jl
dec
cwtl
rcrl
inc
pop
sbb
push
aaa
dec
push
and
out
popa
gs
jae
sahf
mov
icebp
push
sbb
push
pop
jge
dec
mov
xor
sbb
inc
mov
and
lea
ret
or
aam
dec
jo
mov
mov
lahf
loop
add
daa
push
sub
push
imul
int
push
shlb
push
mov
mov
dec
rolb
sub
in
xchg
adcl
loop
sbb
fbld
fs
fisubs
andb
ss
xchg
jmp
mov
daa
ret
xchg
and
push
or
ret
mov
sbb
iret
and
rcr
lock
test
shlb
xchg
cmpsb
js
pop
push
adc
jnp
sbb
cmp
push
dec
mov
pop
mov
push
xor
xchg
insl
xor
icebp
mov
push
dec
test
mov
in
in
insl
push
into
jge
scas
mov
leave
jmp
sub
out
mov
pusha
rol
arpl
push
fnstsw
jge
leave
sbb
stc
outsl
imul
mov
pusha
addb
xorl
xor
mov
rcrb
or
stc
and
es
gs
or
jno
leave
push
xchg
mov
xchg
enter
lret
mov
aaa
sub
fstps
aam
push
jg
xchg
popa
xchg
shrl
movsb
int
icebp
js
shr
push
pop
popa
or
dec
adc
lods
leave
je
cmp
popa
fimuls
add
push
loop
xchg
stos
cwtl
inc
lret
cmp
nopl
xchg
dec
or
das
pop
shll
iret
cmp
popa
movsl
loop
test
xor
mov
es
lcall
mov
and
stc
add
add
inc
popa
outsl
ret
jnp
insb
xorb
mov
nop
mov
into
jb
sub
inc
loop
or
popa
int3
xor
lods
fsubl
dec
add
sub
dec
sti
push
or
lret
loope,pn
mov
adc
gs
mov
mov
andl
lret
and
or
jnp
push
mov
testb
data16
pop
lret
and
iret
cmp
jge
out
mov
repz
mov
add
jge
gs
insb
push
cmp
mov
int
fmuls
push
dec
les
lods
sbb
adc
rcrb
push
loopne
cld
sub
sbb
xor
decl
mov
insb
mov
mov
popa
mov
sub
pop
imul
ret
jge
pop
pop
loope
dec
add
popa
mov
pushf
mov
sub
popa
lahf
fdivp
rcrl
insb
insb
test
pop
push
mov
aad
rol
mov
cmpsb
popa
fisubrl
and
shlb
adc
mov
ret
popa
in
and
in
ja
fs
cmovae
push
xchg
and
or
movsl
xchg
fbstp
jbe
push
sub
jns
lods
pop
dec
cwtl
lret
cltd
mov
jb
fisubrs
fnstcw
mov
aam
pop
bnd
sbb
jecxz
xchg
mov
and
mov
arpl
ja
and
xlat
in
sub
stos
popa
sar
push
cwtl
mov
add
popa
loop
sub
ds
adc
push
xor
dec
xor
or
popa
jne
xchg
jae
jno
shlb
adc
inc
sbb
popa
pushf
fxch
out
inc
lea
data16
in
lret
mov
jo
pusha
out
dec
icebp
rcl
popa
push
out
stos
xchg
rcrb
and
cwtl
popaw
insl
stos
in
pop
sbb
popa
loopne
call
int
add
sbb
sbb
out
sahf
mov
add
notb
ret
popa
in
xor
rep
aad
loopne
stc
shlb
rcrl
or
jne
mov
sti
sub
pusha
fldt
push
imul
lcall
xchg
xor
sub
fstpl
std
popa
daa
add
stc
jbe
xchg
sbb
adc
lret
js
lcall
xor
scas
outsl
popa
clc
xor
or
and
mov
lea
pop
jb
push
icebp
lea
jge
aam
add
popa
scas
aad
add
xchg
popa
jbe
jns
pop
push
mov
nop
or
xor
xlat
mov
cmp
call
aaa
popa
mov
jo
pop
popa
scas
jne
and
lock
adc
push
fwait
aaa
in
add
popa
xchg
mov
loop
gs
xor
jge
int
inc
sub
inc
pusha
push
push
pop
push
lock
jge
jne
mov
fimuls
dec
push
sub
mov
cmpb
inc
loop
or
add
pop
mov
jg
bound
dec
js
movsb
and
inc
add
dec
push
fs
jb
push
andb
les
add
sbb
ljmp
mov
mov
cmpl
adc
out
adc
popa
add
push
xor
aam
popa
outsb
jle
aaa
xchg
fdivrl
ret
sub
sbb
fistps
popa
loop
xchg
inc
cli
enter
test
lock
mov
movsb
loope
xchg
cmpb
xlat
sbb
scas
std
lahf
mov
cmc
pop
adc
mov
mov
fs
imul
push
outsl
xchg
cmp
mov
sub
and
inc
mov
jmp
cmc
pop
push
into
popa
push
push
scas
insb
imul
push
std
nop
mov
mov
inc
cwtl
push
jmp
js
lds
insl
xchg
data16
popa
push
jo
xor
fidivl
pop
sub
pop
cwtl
lcall
nop
stc
xchg
jae
rolb
adc
xor
xor
js
out
lcall
jne
mov
out
xor
popa
adc
fisttpll
loopne
popa
mov
daa
xor
cmp
xor
roll
fstpt
cmp
stos
mov
push
push
inc
sbb
stc
loop
xor
popa
or
push
xchg
mov
add
movsb
xchg
sar
popa
xchg
sahf
inc
mov
mov
out
out
add
test
dec
pop
imul
dec
push
mov
jbe
fidivrs
addl
gs
rcrl
cmp
jno
repz
xchg
jl
pushf
sub
or
movsl
mov
jb
js
cmp
aaa
aam
push
inc
aad
loope
xchg
push
adc
xor
dec
xor
mov
or
popaw
pop
std
repnz
sarl
popa
sbb
mov
cmp
push
xor
repz
mov
adc
popa
enter
xlat
xor
ret
cltd
dec
adc
jo
jg
jmp
loopne
fsubl
dec
out
inc
fisubs
fcomp
mov
aam
fnstsw
jne
loopne
push
mov
ja
push
fs
dec
shll
mov
cmc
loopne
bound
into
push
ror
stc
fwait
sub
sbb
jno
jmp
adc
xchg
pop
sbb
popa
ror
mov
mov
mov
push
or
jle
cmp
adc
test
cmp
scas
jge
push
les
lahf
lret
and
aad
shll
xor
and
test
inc
fcoml
ss
popa
std
and
scas
ficompl
or
jne
loope
nop
jb
jl
inc
outsl
mov
push
and
cmc
push
adc
into
sahf
pop
fistps
or
bound
cmpsb
xchg
loope
loop
movsb
push
daa
dec
xor
push
repnz
mov
sbb
bound
jbe
push
mov
adc
popa
push
xchg
insb
aad
mov
cmpb
push
adc
xchg
or
mov
sub
mov
jle
adc
add
shlb
jo
inc
icebp
and
loope
adc
fistpll
pop
cmp
popa
push
sub
popa
or
dec
mov
test
bound
aad
popa
ljmp
cmc
jne
out
scas
jns
arpl
or
rorb
inc
popa
shrl
out
jmp
popa
jmp
add
fisubl
pop
data16
mov
popa
add
sub
js
and
je
leave
enter
scas
stos
lahf
inc
add
jle
lret
xchg
sbb
sbb
pop
cs
jp
in
cmp
imul
aaa
inc
iret
jg
clc
scas
mov
arpl
popa
or
jne
repnz
cli
pop
andl
loop
mov
rol
popa
out
int3
jmp
lock
popa
in
push
sti
in
fldt
shrl
mov
xor
mov
cmp
flds
and
sbb
mov
jo
push
repz
mov
push
lds
jmp
jne
fdiv
mov
shlb
and
leave
icebp
frstor
mov
jns
jle
push
bound
dec
les
mov
xchg
arpl
mov
int3
addr16
add
insl
dec
push
in
popa
fs
push
es
fistpll
lcall
aad
sahf
add
xchg
or
lock
int3
bound
jo
jno
aas
rcrl
frstor
push
out
popf
adc
into
mov
push
adc
notb
jns
adc
push
fwait
mov
dec
subb
and
xor
stc
push
jl
mov
xor
mov
fnstenv
push
popa
mov
mov
or
inc
lds
insb
cmp
popa
jns
leave
xlat
lret
jg
and
insl
jnp
mov
or
jo
imul
add
pop
stos
jecxz
or
mov
mov
push
repnz
call
jmp
test
jo
xchg
hlt
mov
rcll
ret
dec
loop
leave
push
mov
fmuls
sbb
bound
in
and
mov
xor
imul
xchg
testb
call
jne
leave
cwtl
stc
xchg
xlat
icebp
popa
out
or
scas
hlt
or
dec
and
arpl
xor
push
jmp
mov
xchg
out
loop
or
loop
pop
and
test
divl
lea
jmp
int3
push
lods
gs
sub
daa
in
inc
call
out
fidivrl
test
lods
lahf
push
sub
shll
xor
and
imulb
in
jns
movsl
push
dec
loop
mov
adc
ret
dec
pop
cmp
push
loope
lock
mov
mov
and
jo
lcall
int
push
pop
jecxz
or
in
popa
push
xchg
cmpsl
pop
imul
shl
push
fisttpll
xor
push
cwtl
insl
pop
rorb
arpl
pop
dec
loopne
andl
out
push
pushf
push
dec
in
rcrl
xor
je
lods
push
stc
popa
mov
cmpsl
jl
imul
add
push
ljmp
imul
icebp
lret
pop
in
and
xchg
sahf
mov
mov
outsl
dec
jbe
jge
jo
add
mov
or
add
mov
pop
and
sbb
or
cmp
and
fldt
rcrb
inc
push
xchg
shlb
jae
aaa
jp
cmp
adc
dec
es
stc
cld
jmp
int3
neg
popa
leave
xchg
jmp
dec
pop
cmpb
mov
push
mov
cwtl
sub
hlt
addb
andl
mov
cmp
orl
ss
icebp
sub
in
jno
dec
push
clc
push
mov
data16
mov
aam
dec
push
and
rorb
and
xchg
stos
dec
in
or
shlb
leave
je
stos
pop
test
repz
jp
movl
xlat
mov
pop
push
fmul
jne
arpl
lahf
data16
jae
dec
js
in
int3
mov
outsl
push
lds
lock
lret
ficoms
ja
dec
dec
xor
fwait
pop
movb
aas
mov
loopne
push
inc
xchg
push
mov
rorl
mov
cmpsl
mov
ja
dec
dec
mov
pop
jl
or
daa
je
test
divl
es
or
sbb
orb
popa
leave
or
pop
or
ret
dec
adc
xor
push
jl
or
cld
and
mov
sub
cmc
mov
push
es
lods
std
add
inc
mov
loope
xchg
loop
mov
jle
fcompl
xchg
jge
fwait
adc
xchg
leave
xor
and
sbb
imul
sub
or
push
arpl
mov
movsl
and
je
dec
jmp
in
inc
mov
dec
push
sub
es
xchg
mov
cmp
loop
popf
test
shr
xchg
mov
adc
cmp
in
sbb
fisubrl
getsec
sub
mov
xor
xchg
fimuls
outsl
mov
sbb
dec
mov
mov
sbb
popa
cli
mov
mov
xor
inc
pop
push
mov
push
cmp
dec
or
mov
mov
and
repz
popf
or
movsb
xchg
out
inc
jae
sbb
enter
sbb
cmpb
loopne
push
adc
pusha
push
ret
aam
mulb
lret
mov
mov
sub
xlat
test
sbbb
imul
pop
cs
pop
lds
or
pusha
cmp
popa
inc
adc
shrb
sarb
nop
push
jae
xor
movsl
adc
das
dec
loope
push
mov
xor
and
inc
pop
lahf
cmp
call
adc
jmp
sbb
mov
or
jge
jecxz
pop
lret
popa
jns
lods
mov
cmpsl
inc
popa
sbb
repz
pop
xchg
popa
call
mov
xor
pop
data16
and
mov
hlt
in
dec
dec
ss
inc
dec
shr
push
jnp
dec
fsubrp
push
or
arpl
out
popf
rcl
add
enter
popa
add
mov
sbb
cmp
mov
inc
pop
push
push
bound
leave
cmp
popf
cmp
fildll
adc
andb
test
int3
enter
clc
adc
or
aas
jl
pop
andps
test
sahf
scas
lea
mov
popa
inc
insb
xchg
jae
pushf
mov
popa
jl
sbbb
int
popa
in
xor
popa
push
add
sub
fs
shlb
add
adcl
repnz
xchg
sbb
out
jae
mov
add
inc
inc
sub
mov
mov
mov
call
jno
ja
pop
popa
adc
stc
cli
cmc
cmp
popa
fwait
je
jnp
es
mov
insb
fcmovnbe
std
int3
pop
dec
fsubrl
jo
pop
dec
out
mov
jb
mov
incb
bound
out
push
lods
pop
inc
mov
popa
sbb
nop
and
test
push
stc
popa
jbe
inc
inc
adc
lret
cwtl
scas
jnp
or
pop
aam
subb
popa
aas
cmc
add
popa
or
je
in
js
push
pushf
mov
loope
ss
fcmovb
mov
lret
push
and
ds
loope
sub
sub
mov
add
out
dec
popa
jmp
sbb
js
shlb
mov
pop
cmp
sub
bound
es
jg
mov
sbb
repnz
fsubrs
mov
ds
inc
push
std
out
xchg
lds
inc
xor
and
js
rorb
lods
bound
inc
adc
je
sbb
bound
dec
adc
xor
outsl
repnz
mov
adc
lret
push
jae
sarl
loop
lock
ja
jns
pusha
loope
jbe
pop
mov
leavew
and
push
repnz
jne
ja
popa
sbb
pop
and
mov
mov
imul
lock
shrl
pop
jo
jmp
xchg
shll
jbe
sub
icebp
xor
jo
cmpsl
push
sub
test
jge
push
sub
push
leave
add
loope
push
add
lods
xchg
stos
jo
and
imull
imul
ret
mov
iret
imul
push
jo
and
testl
cmp
dec
push
sub
fstl
shlb
lea
nop
cmpsl
adc
xchg
mov
ds
je
movsl
outsl
loope
mov
cmc
fdivrs
repz
pop
adc
enter
pop
fsub
cmp
pop
push
xor
arpl
bound
push
leave
inc
mov
and
in
mov
int3
cltd
inc
inc
loop
repnz
inc
mov
pop
stos
lret
jbe
lcall
icebp
in
push
mov
sti
loop
rcl
push
rcrl
arpl
push
mov
adc
xor
pop
pop
xor
jno
stos
or
lahf
bound
sbb
push
mov
add
shrb
movsl
xor
cmpsb
ret
adc
test
xchg
hlt
jne
insb
ljmp
out
and
xchg
leave
pushf
sahf
aas
into
imul
bound
cmp
push
xor
jg
leave
mov
mov
dec
adc
rcrl
mov
jg
dec
add
xor
fcom
push
add
inc
jg
ret
fiaddl
xchg
cwtl
sbb
push
mov
mov
popa
out
incl
lahf
and
cmp
pop
icebp
jo
repz
roll
std
adc
mov
pop
mov
xor
test
mov
adc
xchg
pop
mov
fdivs
and
dec
xor
sbb
popf
idivl
repz
jb
xchg
xor
pop
jno
or
mov
movb
cmc
pop
je
xchg
dec
dec
mov
mov
mov
fbld
adc
pop
xchg
mov
sar
or
push
in
cmp
out
xchg
pop
in
sar
test
mov
cmp
mov
leave
dec
push
pop
jns
je
sbb
test
out
pop
insb
hlt
and
loop
and
ljmp
mov
pop
icebp
sbb
mov
out
mov
xchg
mov
insl
dec
jge
pop
inc
dec
scas
int
mov
ror
push
or
fimull
sbb
data16
adc
add
jb
jo
cmp
roll
inc
or
sbb
pop
rcrb
cli
jle
popa
sub
out
and
mov
sbb
popf
call
cld
pop
xchg
xchg
nopl
jns
popa
mov
mov
popa
push
repz
adc
xchg
out
xchg
jle
cmpsl
shl
ret
fs
lods
enter
or
sahf
sbb
sbb
pop
pop
mov
popa
cmp
lret
sub
in
loope
mov
adc
mov
xorb
shl
sub
lret
sahf
in
cwtl
inc
popa
xor
cltd
out
jecxz
adc
push
dec
jo
fidivs
std
popa
rol
in
jecxz
push
dec
pop
imul
fdivl
enter
lahf
fwait
ljmp
mov
push
ja
popa
mov
pop
outsl
frstor
js
scas
ret
push
adcl
adc
popa
lods
lret
jns
ret
in
xor
popa
test
mov
cmpl
mov
pop
inc
shrl
mov
adc
xchg
mov
cmp
std
loop
in
dec
filds
jmp
fwait
xchg
test
add
icebp
add
out
jmp
lret
call
ret
out
adc
jge
cmpsb
adc
adcl
aaa
daa
and
into
dec
mov
push
xor
push
jecxz
lods
std
pop
in
push
inc
add
jb
idiv
stos
ret
push
xchg
jb
ja
std
mov
adc
jl
mov
rclb
je
gs
sub
repz
rorb
into
push
cmpsb
es
das
mov
jbe
add
sub
cld
adc
lea
nop
jb
mov
fadds
je
dec
icebp
jecxz
dec
jnp
and
scas
push
in
cmp
and
xchg
add
ja
inc
jl
iret
mov
mov
cmp
dec
adc
cmp
fisttpll
shl
fldl
inc
xor
popa
dec
or
popa
jmp
jge
jg
mov
mulb
inc
es
pushaw
jmp
stos
outsb
or
addr16
imul
pop
xchg
jb
std
insb
xor
repz
mov
mov
das
popa
in
lea
adc
mov
popa
mov
rcl
dec
call
bound
fildll
les
mov
cmp
popa
or
lahf
push
subl
pushf
in
in
jo
popa
mov
xchg
cmpsl
adc
xor
mov
nop
pop
popa
fstl
fstpt
int
in
mov
stc
push
hlt
adc
sbb
push
sbbb
punpckhwd
aaa
push
xor
mov
shrl
jo
mov
cli
push
and
cltd
into
dec
add
push
popa
jns
icebp
sub
aam
popa
push
mov
or
mov
popa
test
xchg
jmp
popa
std
les
dec
popa
bnd
enter
pop
dec
fldt
fsubs
cmp
popa
sar
imul
outsb
outsl
adc
scas
rolb
popa
cmpsb
sbb
push
popa
xchg
mov
jge
xlat
push
xor
sub
gs
popa
mov
cmp
fisubrl
stos
popa
pushf
mov
fdivrs
daa
dec
popa
mov
shl
pop
push
dec
jp
sti
sbb
cwtl
roll
daa
frstor
push
sub
lods
add
mov
scas
sbb
faddl
insb
fidivl
aam
push
lea
push
ficomps
popa
xor
mov
insl
push
in
popa
mov
jl
imul
stos
mov
cli
addb
sbb
sbb
lods
js
ret
sbb
cmpsl
fdivrl
popa
shrb
or
and
popa
push
mov
jbe
fisubrs
push
mov
and
popa
clc
adc
or
sub
adc
pop
or
popa
inc
in
sub
mov
xchg
lret
xchg
into
jnp
aas
push
lcall
push
mov
hlt
popa
mov
or
popa
mov
xor
or
out
adc
movsl
bound
lods
mov
das
arpl
add
add
in
mov
popa
aam
push
xchg
mov
mov
cltd
cmp
cmp
push
lock
enter
bound
stc
push
gs
mov
bound
mov
shrb
fsubs
stc
lret
cmp
mov
xchg
or
incb
rep
push
popa
xor
mov
and
xor
lock
and
xchg
cmp
popa
pop
rcll
fbld
imul
call
notl
mov
movhps
aad
xor
test
es
push
xchg
pop
dec
sbb
popa
jmp
imul
in
xchg
mov
nop
or
or
dec
jo
jne
xchg
in
mov
push
push
les
sub
movl
cltd
sbb
cmp
push
mov
es
add
jb
lds
subl
aad
push
mov
mov
mov
test
sub
xchg
call
cmp
out
sbb
mov
xchg
andl
mov
fs
xchg
mov
mov
rorb
mov
clc
xlat
push
jmp
dec
stos
cmc
mov
inc
pop
jge
inc
divl
popa
ljmp
clc
loopne
push
testl
cs
pop
sti
sub
js
repnz
xchg
mulb
sti
mov
push
jmp
ror
mov
add
in
popa
add
scas
aas
inc
cmpsb
pop
mull
iret
imul
mov
popa
or
pop
std
popa
shrl
lret
inc
add
dec
gs
push
leave
adc
dec
int
fmul
addr16
mov
and
daa
push
das
popa
inc
sub
sbb
add
aas
adc
popa
or
xchg
popa
test
roll
jle
or
movups
test
bound
loope
hlt
mov
std
sarb
sub
enter
push
lds
int
ljmp
inc
jg
decl
jo
lret
loope
inc
mov
jns
lods
xchg
jl
test
xchg
pusha
bound
mov
rorb
mov
mov
mov
or
xchg
popa
inc
push
xor
jecxz,pt
mov
lock
outsb
and
add
cmpsb
inc
popa
jg
adc
rolb
or
fidivrs
aaa
popa
pop
adc
les
ljmp
sub
and
push
movsl
sar
vpsubusw
out
loopne
popf
push
pop
imul
lock
xor
scas
mov
dec
jl
lahf
stos
push
sahf
mov
push
dec
fcmovne
imull
cmpsb
hlt
inc
add
fdivr
lods
jg
push
in
jg
mov
jle
lods
jns
pushf
cmc
popa
xor
adc
sarb
add
jo
cmp
je
or
push
push
mov
or
and
adc
push
inc
nop
inc
xchg
mov
cli
cmp
adc
adc
popa
clc
jae
and
and
loope
xor
and
aam
xor
popa
add
cltd
xor
insb
inc
pop
popa
push
fisubrl
pop
push
std
popa
fmull
addr16
fisubl
xorl
add
jmp
push
sub
aam
popa
and
mov
and
push
popa
xor
ss
pusha
aad
popa
shlb
out
mov
popa
stos
and
mov
fstps
cwtl
mov
jb
mov
sbb
popa
sbb
sbb
loopne
popa
xchg
dec
cmp
lock
aam
xchg
add
add
cltd
xor
movl
popa
inc
sbb
inc
stos
pop
subb
jge
popa
loopne
xchg
in
scas
orb
imul
cmp
sub
cmpsl
ds
shll
ljmp
and
xchg
jb
inc
dec
jns
bound
cli
pop
mov
mov
add
popa
jo
and
cmc
or
ss
lds
mov
add
loopne
popa
in
fidivl
popa
mov
or
bound
fs
dec
loope
push
icebp
repz
lahf
xchg
aas
loope
push
add
shl
inc
popa
cmp
popf
hlt
mov
pop
or
inc
dec
pop
jmp
add
rcl
subl
pop
sbb
push
adc
sub
dec
ljmp
mov
cmpsl
and
dec
push
orl
push
mov
icebp
out
sbb
pop
or
cmpsb
push
fldenv
and
gs
xchg
subl
popa
mov
inc
call
mov
data16
jge
mov
adc
in
push
insl
popa
inc
cmc
cmp
sbb
aas
hlt
dec
jnp
arpl
mov
lods
inc
popa
cmpsl
fs
xlat
mov
jbe
or
bound
push
popa
push
push
jne
call
imul
dec
popf
dec
std
mov
es
sbb
and
loop
aam
push
dec
repnz
push
dec
lea
pop
push
dec
xchg
ret
popa
mov
push
mov
pusha
cmp
dec
out
pop
mov
lock
mov
cwtl
sbb
dec
bound
lret
loope
xlat
xor
jle
dec
mov
dec
ja
or
sahf
add
shll
jae
adc
push
fdivl
inc
pop
data16
cli
cltd
fadd
push
jns
push
pop
adc
or
and
bound
in
movsb
mov
sub
sub
stc
xor
cmpsb
stos
test
mov
in
stos
pop
popa
lock
cmp
pop
xor
popa
pop
dec
gs
jmp
into
popa
sbb
push
inc
lods
push
rorb
mov
mov
lds
adc
dec
cmp
xor
sub
test
popa
out
lea
push
xchg
push
cs
mov
insb
jo
sbb
dec
push
push
mov
push
psadbw
push
jo
dec
jmp
inc
xor
mov
mov
push
outsl
popa
or
mov
shlb
push
xor
jp
dec
lret
addr16
dec
stc
jbe
lahf
sub
xor
js
xor
out
outsb
or
gs
xor
scas
push
and
add
dec
gs
xchg
in
push
xor
pop
aam
push
sbb
imul
dec
fucom
mov
ljmp
in
loope
mov
aad
sub
popa
xchg
std
mov
lds
dec
clc
sub
data16
mov
push
add
aad
mov
mov
dec
cmp
add
sub
dec
test
mov
mov
dec
or
in
daa
inc
inc
insl
adc
or
out
xchg
pop
test
dec
cmp
mov
pushf
push
xor
push
cmp
testb
jo
sub
cmpl
rol
xorb
sub
xchg
dec
adc
add
sbb
cmpsb
mov
dec
lock
sbb
jo
clc
push
icebp
mov
stos
gs
stos
cld
xor
stos
iret
addr16
fisttpl
xchg
dec
popa
inc
push
test
cli
into
jp
pop
aad
aaa
popa
insl
sbb
dec
movsl
popa
or
and
push
mov
popa
or
xor
and
test
in
addb
popa
push
xor
pushf
sbb
jle
scas
loope
add
popa
rclb
in
int3
lret
xchg
add
fsubl
inc
pop
lcall
fwait
in
dec
iret
mov
popa
and
loopne
lea
ss
sbb
mulb
add
lahf
pop
dec
insl
inc
pop
mov
popa
mov
scas
sbb
add
mov
xchg
fildl
pop
push
pop
imul
insb
out
inc
popa
xor
sub
add
mov
pushf
cmp
loope
repz
in
mov
cmp
add
andb
fldenv
iret
adc
fstpl
sub
stc
enter
insb
inc
sbb
addr16
jmp
dec
cmp
jge
popa
aad
mov
cwtl
ds
out
fst
popa
ja
sub
gs
rorb
dec
mov
cmp
pop
loop
mov
sbb
incl
sarl
jge
dec
mov
dec
insl
xchg
frstor
push
repz
in
fchs
jl
popa
fimuls
add
popa
lods
inc
mov
jo
inc
lods
popa
bound
xchg
popa
push
push
in
in
mov
popa
cmc
fnstenv
sbb
sub
sahf
xchg
mov
mov
inc
int
cmp
fnstsw
sbb
cmpsl
jo
adc
cmp
push
jne
int3
jnp
ret
jno
insl
lea
mov
sahf
bound
pop
fld1
ret
in
cmp
or
xor
das
dec
popa
jns
sub
arpl
jmp
xor
jb
ja
das
ja
hlt
popf
popa
mov
imul
popa
inc
mov
insb
mov
adc
bound
fldenv
clc
jmp
add
mov
popa
repnz
lock
stos
cmpsl
cs
das
in
lret
xchg
mov
or
popa
movsb
out
inc
dec
xor
mov
imul
or
andl
popa
dec
or
fdivrs
and
add
mov
or
stos
or
push
jg
leave
or
arpl
and
out
or
sub
cmp
fdivrp
push
das
fs
cmp
out
xchg
popa
decb
add
in
cmp
push
and
mov
aad
push
fsts
outsl
test
in
cmp
dec
push
negb
jecxz
fcmovb
mov
mov
cmp
sar
popa
push
in
mull
inc
mov
push
popa
pop
aad
lret
mov
pop
jo
xchg
out
lcall
outsl
mov
mov
call
imul
dec
jns
lret
scas
jle
leave
or
std
jp
pop
or
xor
or
adc
fstps
popa
insl
fisubrl
aas
bound
out
bound
jns
cmp
adc
push
enter
jg
mov
pop
ror
inc
hlt
data16
leave
mov
lods
lcall
loop
pop
push
sarb
pop
mov
xchg
and
push
lods
jb
ret
rcl
mov
jge
aas
dec
popa
ss
jg
pop
cmp
dec
popa
leave
fwait
int
jbe
orl
mov
out
xor
popa
mov
pop
mov
loope
ss
adc
std
inc
mov
inc
insb
outsl
pop
pop
orb
imul
call
mov
jno
push
inc
addl
into
pusha
fcompl
lahf
push
repnz
cmp
aad
inc
mov
cmp
push
xor
and
outsb
mov
jae
enter
dec
sub
pusha
icebp
sub
pop
mov
mov
push
sbb
dec
push
pop
leave
call
jnp
stos
push
push
xor
cltd
dec
pop
ret
push
daa
inc
fmull
loope
push
jb
fs
int
mov
sbb
iret
jne
shl
mov
rcl
lock
decb
adcb
fwait
and
jo
jns
add
dec
xchg
in
xchg
loop
cmp
push
dec
mov
xorl
jb
cmp
faddp
cmp
insb
or
mov
aas
mov
sbb
imul
lcall
xor
lahf
addl
xchg
rcll
daa
shlb
andb
and
or
data16
xor
pop
mov
mov
mov
mov
add
jae
popf
sub
jo
out
mov
divb
popa
push
mov
xor
or
pop
lea
and
add
out
leave
sbb
shll
mov
stos
roll
popa
mov
lret
or
pop
mov
xlat
adc
popa
xchg
mov
roll
js
icebp
inc
out
lahf
cmp
fnstcw
xor
repz
data16
lods
ljmp
scas
push
in
pop
sbb
sbb
popl
cmpsb
inc
popf
jp
loope
lret
and
stc
inc
xchg
popa
push
sbb
movsl
lret
cmc
sarb
push
aaa
mov
sbbb
push
pop
mov
xchg
inc
das
test
xchg
inc
lcall
dec
popa
nop
ficoml
lds
mov
xlat
cltd
in
aaa
lret
lcall
cmp
add
or
lahf
dec
shlb
loopne
popa
aaa
in
test
adc
cmp
sti
pop
sub
lock
xchg
loope
insl
mov
pop
inc
aam
test
push
fucom
dec
fst
add
mov
mov
scas
sbb
incl
shll
or
aam
popa
gs
fiadds
int
ret
jle
sub
loopne
push
push
inc
adc
emms
adc
mov
fs
shl
mov
push
pop
les
insb
mov
mov
or
dec
movsl
adc
mov
cmpsb
xor
sbb
or
adc
cmp
cwtl
imul
lock
push
mov
out
clc
cmpsl
popf
and
sbb
popa
pusha
out
rolb
fwait
mov
push
mov
fisubrs
aam
imul
push
test
pop
mov
je
mov
popa
xchg
mov
sub
push
and
popa
ss
hlt
mov
xchg
arpl
out
das
mov
cmp
sarl
pop
pop
pop
lods
mov
push
subl
add
sahf
stos
push
loope
fwait
xor
es
int3
pop
xchg
jne
les
jnp
pop
popa
sti
shl
push
sub
jle
popa
mov
and
adc
call
cmp
push
sub
mov
cmp
aad
out
xchg
ss
bound
das
sub
popa
jno
push
loopne
xor
aaa
xchg
mov
popa
ja
sbb
xacquire
ljmp
ljmp
aad
mov
daa
xor
popa
cmpsb
mov
inc
imul
xor
loope
ret
popa
sbb
xchg
xchg
and
aas
popa
sahf
push
popf
icebp
xor
arpl
popl
xor
pop
inc
nop
jno
mov
adc
arpl
adc
popa
cmpb
jo
test
jae
jecxz
push
stos
arpl
add
je
lret
test
and
imul
loope
sub
mov
popa
repz
push
push
adc
loopne
pushf
dec
pop
push
sahf
lret
jns
and
jmp
and
addr16
sub
popa
insb
and
inc
xor
jo
jbe
inc
add
in
fisubs
fcomps
mov
popf
xor
add
xchg
sub
das
dec
fcompl
cmp
popa
pusha
ficoml
jmp
pop
inc
mov
or
imul
mov
sarb
clc
mov
mov
aam
cmp
cmpsb
mov
popa
jnp
cwtl
dec
inc
ljmp
cmp
aam
call
adc
jp
les
mov
add
pushf
repnz
out
mov
out
or
in
ret
sbb
mov
inc
arpl
nop
in
pop
popa
popf
std
es
addb
mov
sbb
mov
shll
inc
jmp
pop
cmc
ret
out
jecxz
int3
push
imul
inc
popa
pusha
cltd
adc
sbb
ret
adc
popa
in
in
push
push
add
add
inc
and
jno
sub
test
and
jmp
mulb
stos
popa
fcomi
fadds
popa
fisubrs
pop
cwtl
cmpsl
add
popa
dec
rclb
or
jno
popa
mov
shlb
jmp
insl
and
xchg
push
pxor
pusha
sub
lea
jae
pop
popa
xchg
insb
sahf
jbe
cmpsb
sbb
inc
sub
popa
inc
jb
and
rolb
test
sbbb
cmp
mov
int3
popa
lods
mov
lahf
and
cltd
inc
dec
and
insb
fadds
pushf
adcw
dec
icebp
repz
adc
inc
icebp
popa
cmp
dec
inc
test
or
adc
popa
outsl
jmp
sarl
les
adc
cmp
push
push
sbb
and
leave
scas
nop
pop
mov
push
mov
pop
inc
and
jl
cmp
cltd
mov
imul
arpl
ret
pop
add
mov
mov
mov
fldt
jle
dec
in
scas
mov
xor
inc
enter
pop
shlb
adc
pop
and
js
popa
inc
push
inc
mov
popa
xlat
lock
shll
enter
hlt
fldl
jp
push
out
mov
jge
sti
loop
stc
popa
mov
fdivp
adc
lret
adc
xlat
xchg
inc
pop
sbb
les
mov
or
loope
in
sbb
xor
jge
and
and
pop
sti
popa
dec
pop
inc
sbb
popa
fnstcw
test
sub
mov
and
pop
clc
imul
xchg
bound
sub
lahf
push
das
mov
popa
jnp
mov
add
stos
sbb
stc
daa
into
cmpsl
adc
das
and
cmp
stos
and
jno
push
jmp
gs
inc
in
push
loopne
das
inc
js
test
jo
repnz
loop
pop
jle
popa
ret
mov
push
cmp
andb
aam
fiaddl
in
stc
ret
add
popa
cs
sub
movsb
cwtl
pusha
push
sbb
jecxz
or
imul
jns
push
mov
ficomps
push
popa
mov
jo
sub
and
bound
pop
pop
inc
jb
lcall
movsl
insb
inc
mov
mov
and
mov
arpl
sbb
outsl
shrl
mov
mov
jmp
arpl
test
data16
mov
mov
xlat
scas
sbb
bound
cld
mov
inc
pop
fwait
push
inc
outsb
popa
jo
cli
mov
test
aaa
popa
adc
in
popa
push
jl
dec
xor
popa
mov
rcrl
loope
mov
and
dec
mov
pop
cmp
inc
je
xor
cmp
add
sbbl
jmp
fs
push
mov
imul
push
xchg
enter
les
jmp
lds
jp
pop
scas
fsub
sbb
cld
jae
mulb
scas
dec
add
or
sub
clc
int3
or
dec
aad
inc
les
sub
loope
pop
mov
sbb
mov
push
add
andl
je
inc
dec
fsubrs
popf
gs
sub
out
push
mov
lea
push
in
popa
jo
xor
notl
xor
loope
loope
popa
add
fdivr
into
pop
out
cmp
fdivrp
add
ret
mov
push
popa
test
lods
arpl
rorb
sbb
fsubr
aad
int
in
cmpsb
pop
mov
inc
and
loope
add
out
and
push
push
pop
fwait
fs
cvtdq2ps
or
cld
popa
mov
adc
popa
in
daa
movsb
xchg
adc
jge
shll
xchg
adc
mov
sbb
sarl
lods
leave
jle
das
clc
adc
cmp
xor
ficoml
sub
xor
inc
pand
cmpsl
in
rolb
into
add
ds
adc
mov
fcompl
popa
shl
adc
add
ret
fsubs
xor
jae
int3
stc
inc
lcall
scas
lret
mov
int
popa
aaa
scas
add
mov
or
leave
clc
in
popa
pop
aad
shrb
sub
add
xchg
pop
mov
jb
clc
popa
sub
es
or
rorb
mov
push
mov
jb
sub
push
lret
push
loop
push
mov
arpl
popa
rorb
inc
int3
sbb
push
popa
fwait
dec
jl
inc
out
popa
xchg
fidivrl
cwtl
pop
test
cmp
dec
ret
mov
call
stos
loope
les
popa
sbb
insb
pop
push
xor
std
push
cmp
loope
ja
push
sbb
ret
jl
je
popa
add
pusha
xchg
inc
popa
stos
in
out
mov
cld
cmp
popa
decl
int
and
mov
dec
xor
inc
cmpsb
push
push
sbb
popa
shrl
sbb
inc
fnstcw
xor
mov
popa
push
fsubp
test
sti
or
popa
lret
or
mov
stos
push
and
pop
popa
jmp
push
movsl
ret
xchg
ds
popa
lret
out
sub
xor
popf
fdivr
ljmp
das
mov
mov
mov
and
sub
popa
in
mov
mov
popa
adc
mov
aam
xor
or
enter
jo
repnz
sbb
push
sti
clc
in
dec
inc
popa
pop
jp
xchg
mov
scas
lahf
push
pop
frstor
xor
mov
adc
mov
inc
inc
or
aam
popa
sub
out
pop
aam
lds
std
ss
negb
repz
jmp
push
ss
scas
icebp
mov
inc
cmpsl
xchg
pushf
scas
sarb
add
cmc
adc
push
dec
out
jp
insl
dec
dec
mov
xchg
repnz
sbb
rcll
inc
pop
jl
movsl
pop
push
popa
add
sub
adc
js
cmp
popa
jle
sub
popa
xor
andl
mov
popa
shl
mov
add
mov
popa
stos
gs
cld
xchg
add
push
jb
shll
in
std
mov
and
cmp
iret
fcmovu
les
orl
cld
jg
bound
cmpb
shll
popa
movsb
outsb
jno
aas
enter
and
pop
into
or
les
ret
aad
and
andl
movsb
mulb
dec
pusha
lods
dec
sbb
xor
shlb
hlt
push
daa
out
mov
sub
xchg
popa
js
dec
ljmp
fsubr
or
scas
inc
inc
mov
test
movsl
sbb
cmp
popa
mov
push
nop
insl
popa
lcall
pop
popa
loopne
popf
xor
push
bound
mov
pop
xor
xchg
dec
adc
and
popa
outsl
inc
push
fidivs
dec
loope
cmpsb
mov
fsubl
inc
scas
push
inc
mov
int
cwtl
fcomi
pop
inc
adc
mov
cld
mov
mov
inc
jmp
mov
ss
popa
sarl
jbe
push
popa
daa
add
outsl
bound
cltd
pusha
and
clc
test
sbb
fldl
fidivrs
and
out
sti
popa
mov
stos
xchg
popf
aam
out
hlt
test
icebp
popa
sub
aad
arpl
imul
push
cmp
inc
mov
jle
mov
mov
gs
jge
add
push
icebp
rcrl
push
dec
mov
cld
dec
mov
sbb
adc
lods
pop
aad
pop
cwtl
cltd
mov
mov
and
repz
push
or
adc
and
jmp
jg
out
and
lea
push
pop
push
movsb
pop
jp
popa
cmp
xchg
int
outsl
xchg
repnz
push
dec
out
push
pop
and
mov
push
xor
push
mov
push
sarb
and
popa
cmp
push
cmp
cmpsl
cmp
popa
ret
imul
lods
fcoms
inc
xchg
inc
mov
pushl
mov
pusha
cmpsl
sub
push
stos
arpl
fiaddl
fwait
inc
mov
aas
adc
mov
popa
inc
xor
xchg
movsb
pop
mov
adc
dec
dec
fwait
dec
and
push
cs
test
mov
popa
add
loope
idivl
pop
popa
jge
bnd
adc
loopne
std
jno
ljmp
mov
cld
xor
sub
ljmp
mov
cmp
rcrb
ss
ds
das
daa
outsl
lods
and
inc
loope
push
push
jae
arpl
call
inc
sahf
push
loope
push
push
cltd
adcb
dec
mov
fmuls
inc
pop
test
mov
sub
sbb
adc
mov
xlat
out
imulb
pop
add
ret
and
or
je
fidivl
mov
add
dec
scas
cmp
jno
mov
adc
jns
data16
out
aaa
pop
fnsave
jle
rorl
xchg
mov
inc
stos
daa
in
int
arpl
pop
popa
test
add
popa
jb
addr16
push
mov
sbb
bound
shll
jo
js
aas
xchg
jg
pusha
xchg
cmp
outsb
aam
in
popa
int3
cmc
nop
jp
lods
adc
popa
mov
jbe
popa
jbe
pop
or
cwtl
cmp
orb
push
sub
xlat
aaa
mov
loope
and
xchg
xor
shlb
cmc
hlt
jae
fcmovnb
and
mov
pop
pop
popa
pop
push
or
mov
or
cwtl
icebp
and
and
popa
cld
mov
frstor
mov
dec
popa
mov
outsb
in
mov
faddp
hlt
jmp
dec
xchg
popa
cli
popf
fsubs
xlat
iret
jg
popa
inc
lret
rclb
sub
mov
pop
cs
arpl
popaw
incb
cmp
pushf
jns
lds
xchg
popa
push
and
jge
jae
popa
jle
daa
enter
test
arpl
fs
std
sbb
testb
aas
ja
shll
repnz
fiaddl
imul
jl
adc
sbb
pushf
popa
mov
mov
popa
push
mov
xlat
adc
pop
add
in
mov
ja
lcall
rol
push
sbb
lods
mov
lods
pop
mov
stc
cli
popa
xchg
mov
call
popa
outsb
in
inc
inc
sahf
fwait
popa
addb
lcall
lahf
jns
out
add
pop
pop
popa
test
mov
sbb
out
xchg
jl
xor
sub
popa
xchg
jae
cltd
push
imul
enter
ret
sbb
xchg
imul
dec
scas
popa
mov
fdivl
push
adc
popa
add
inc
mov
rorl
cmp
cmpsl
fs
jne
mov
xchg
imull
lahf
adc
xchg
push
mov
shlb
aas
cltd
int3
cmp
cwtl
inc
mov
popa
mov
sbb
fidivrl
lods
sbb
push
stc
imul
aad
daa
popa
std
scas
adc
out
add
daa
xlat
popa
mov
add
popa
fs
mov
mov
ficoms
xor
dec
mov
int
popa
or
pop
lret
cmp
jl
add
pushf
mov
push
pop
inc
mov
arpl
or
outsl
sub
iret
jnp
fsubrl
sub
ror
adc
cmpsl
jb
repz
icebp
push
popa
imul
mov
push
push
addr16
into
jle
jbe
and
pop
adc
test
jecxz
imul
fstl
into
ds
imul
xchg
jle
fldenv
add
dec
pushf
dec
and
out
inc
clc
push
mov
push
mov
xchg
popa
lahf
add
add
adc
sub
icebp
jl
cs
outsb
pop
xor
in
es
xchg
popa
or
mov
inc
arpl
push
push
jne
shr
mov
mov
push
jl
sub
adc
push
and
popa
xchg
sbbl
out
xor
scas
xor
mov
stc
jge
xchg
cmp
arpl
cmp
popa
test
push
push
in
pop
xchg
outsl
lods
inc
mov
fld
cmpsb
popa
push
jno
stos
xchg
fstl
mov
push
pop
fcompl
mov
incb
movsl
jp
int3
bound
inc
pop
out
push
fldcw
xor
add
pop
subb
test
aaa
mull
cld
andl
ret
js
mov
iret
add
pop
idivl
lret
pop
sbb
ret
andl
repnz
call
std
xor
mov
cli
xor
iret
jns
call
pushf
les
lret
mov
jg
cltd
push
mov
push
sbb
jo
leave
bound
jecxz
mov
hlt
dec
mov
mov
lcall
sbb
mov
xchg
sub
pop
jo
push
outsl
mov
jmp
enter
clc
xor
xor
mov
mov
inc
cmp
into
outsl
addr16
fwait
jno
inc
outsl
sbb
sbb
popa
cmpsb
cmp
or
orb
add
movsl
and
mov
popa
sbb
int
lret
or
mov
and
mov
add
in
jp
push
popa
sub
jg
xchg
xchg
mov
fwait
add
pop
adc
sub
ja
dec
stc
popa
add
inc
ret
mov
pop
arpl
out
mov
outsb
push
cli
xlat
mov
int
inc
and
jae
popa
xchg
dec
and
fcom
add
dec
xlat
bound
cmp
add
seta
cs
add
bound
xor
push
rcrb
stc
bound
jl
int3
test
push
ljmp
popa
insl
scas
and
outsl
xchg
bound
fwait
dec
dec
pop
pop
lock
or
push
add
cmp
sub
and
call
test
jp
popa
aam
inc
jo
stos
nop
mov
push
aas
fs
xor
adc
cmc
movntps
popf
shll
mov
ja
sbb
dec
sbb
push
gs
sti
popa
and
test
pop
dec
jo
mov
push
fildll
sbb
push
mov
popf
popa
ret
jecxz
cmpsb
or
stc
xlat
popa
sub
cmp
popa
iret
into
jp
push
inc
not
popa
xor
and
popa
bound
int
dec
sbb
cmp
mov
xchg
fwait
sub
push
inc
fcompl
les
jns
mov
popa
jl
push
sbb
mov
fbstp
inc
add
fisttpl
hlt
sahf
xchg
popa
adc
inc
fwait
jmp
xchg
jg
hlt
mov
push
fcmove
lcall
push
or
lods
xor
bound
inc
out
dec
add
mov
fs
push
inc
imul
lahf
mov
loop
sub
pcmpeqw
pop
pop
popa
icebp
in
mov
aam
dec
xor
mov
add
scas
mov
pop
jbe
loope
bound
popa
push
lds
popa
dec
and
ja
add
add
mov
cmc
fiadds
pop
push
pop
xor
add
and
inc
mov
popa
outsl
xchg
data16
roll
adc
dec
ret
popa
fcompl
inc
or
addr16
mov
add
aam
cmc
jb
jg
inc
mov
loop
push
pop
push
shlb
mov
pop
loop
add
cltd
and
xlat
rorb
push
sub
lock
jnp
push
fisubs
sub
add
and
pop
lock
push
add
popa
test
jmp
pop
sbbb
sbb
push
shll
popa
push
int
lods
insb
mov
and
in
ds
sub
fcomip
mov
popa
mov
stc
cmp
imul
outsb
or
jnp
jge
loope
adc
mov
lds
jb
std
or
xor
mov
dec
fiaddl
lods
push
rorl
loope
clc
adc
cli
mov
jno
push
adc
xchg
lods
jl
jb
popa
ja
pushf
test
pop
dec
int3
popa
or
sub
push
js
jmp
push
sbb
and
cs
outsl
shll
ds
adc
cmp
aas
mov
popa
sub
mulb
popa
iret
jb
out
mov
cmp
popf
pop
push
push
adc
and
sub
push
outsl
or
add
das
popf
lods
cmp
arpl
add
xchg
push
jno
daa
popa
pop
xchg
ret
in
scas
test
inc
sub
popa
addr16
arpl
xchg
inc
lcall
insl
leave
cmp
adc
out
adc
popa
xor
inc
movsl
imul
test
mov
jo
test
pop
mov
shrl
jle
daa
cwtl
and
repnz
add
xlat
js
repz
mov
xor
lcall
mov
loope
call
addb
add
into
and
int
mov
and
mov
mov
xor
rcll
imul
xchg
push
mov
mov
sahf
and
arpl
inc
pop
popa
mov
fadds
and
mov
jbe
xor
call
cltd
nop
sub
mov
outsl
cld
cmp
mov
mov
cmpsb
mov
jge
or
cltd
lcall
mov
add
shl
xchg
call
add
ljmp
push
sub
outsb
test
mov
inc
imul
lcall
cmc
pushf
jge
sbb
out
std
mov
cmpsl
push
sub
pusha
call
and
xor
stos
push
pushf
enter
flds
adc
mov
dec
lds
push
and
arpl
jecxz
sbb
xor
lret
pop
outsl
imul
pop
rol
les
xor
movsl
and
ja
es
sub
push
out
adc
inc
and
popa
pop
movsb
outsl
sub
popa
or
test
inc
push
popa
push
hlt
adc
das
push
out
xchg
popa
sub
pop
rol
inc
push
sahf
and
loope
pop
ret
push
into
popa
pop
bound
clc
popa
sbb
pop
fs
insl
jg
sub
dec
dec
popa
out
dec
stos
xchg
dec
popf
mov
popa
pushf
pop
loop
imul
dec
das
rcrl
in
and
sahf
add
in
in
je
ja
insb
stc
addr16
loope
mov
xchg
pop
mov
std
inc
jno
imul
cmp
push
in
cmp
jge
popa
sahf
scas
sub
lods
aas
test
fidivrl
adc
push
pop
aad
leave
cmp
dec
xlat
inc
jo
push
stos
popa
aaa
lea
and
testl
popa
loope
movsl
fxch
fs
popa
and
andb
xor
push
lcall
andb
mov
out
jo
insl
sti
icebp
pusha
push
rcr
push
popa
dec
std
inc
into
inc
sbb
cli
popa
repnz
inc
add
mov
mov
sub
insb
test
popa
mov
daa
push
add
adc
sbb
popa
add
mov
shlw
cltd
cwtl
add
adc
sub
dec
inc
in
negl
cli
clc
arpl
push
insb
adc
mov
aad
push
lods
in
xchg
bound
js
xor
adc
loope
ficompl
cltd
or
xchg
clc
xchg
jmp
sub
iret
popa
dec
dec
mov
nop
je
daa
popa
pop
gs
outsl
adc
cs
push
add
and
cmp
cmp
add
xor
inc
jne
jmp
sbb
cmp
sub
adc
sub
inc
jnp
push
sub
mov
lea
in
cmp
inc
mov
popa
cld
mov
out
mov
popa
lret
jmp
push
fwait
in
mov
les
int
mov
loope
dec
jb
inc
pop
aad
popa
pop
mov
adc
jge
cmp
mov
mov
sub
vpcmpeqb
push
dec
sbb
jo
add
sahf
cmpsb
mov
push
aam
lock
push
mov
cmp
stc
std
js
popa
loopne
dec
mov
push
shlb
mov
popa
test
xchg
and
popa
sbb
inc
push
stos
adc
jle
mov
cs
push
popf
mov
in
fwait
pop
loop
dec
and
shr
mov
adc
dec
dec
mov
loopne
xor
inc
std
popa
test
jbe
pop
cltd
xor
icebp
dec
cmp
lret
inc
mov
stc
popa
push
movsl
mov
inc
mov
and
pop
jg
into
fwait
insb
push
and
sbb
fcoml
popa
inc
fistpl
data16
and
push
insb
nop
pop
push
out
icebp
cld
mov
in
ret
data16
xlat
cs
xchg
imul
xor
xlat
gs
insb
fistpll
mov
in
les
sub
inc
negb
cmp
mov
sbbl
scas
outsl
shll
lea
xor
call
push
add
shll
aad
jge
jbe
loope
sub
jle
jo
or
cmp
das
pop
loope
dec
push
aas
ret
popa
cmp
loopne
bound
lds
popa
out
int3
stos
cmp
pop
and
inc
test
sub
arpl
ljmp
lret
smsw
int3
mov
add
pop
jo
mov
bound
jl
aaa
lahf
and
mov
cmp
xlat
and
inc
adc
xor
cwtl
push
mov
push
fucomip
jle
mov
and
cmp
bound
test
add
popa
dec
jne
or
pusha
lea
adc
popa
push
les
jge
scas
loope
add
lock
fwait
aad
fldl
ficompl
test
inc
mov
in
sbb
ja
int3
cmp
mov
sub
cmpb
imul
in
popa
mov
pavgb
jp
out
enter
cmp
mov
std
xchg
jl
stc
test
arpl
ljmp
popa
pop
xor
ret
jmp
xlat
fwait
sti
stos
sub
fs
hlt
cmpsl
int3
leave
sbb
popa
icebp
loope
movsb
in
addr16
popa
and
scas
ror
cmpsl
add
inc
dec
cmc
sbb
ss
cmpsb
push
lock
popa
int3
cmp
faddl
xlat
mul
mov
loope
sbb
faddl
frstor
ret
adc
cs
gs
scas
xchg
dec
rorb
stc
jmp
push
fwait
cmp
xchg
cs
insb
popa
cmpsb
add
cltd
popa
scas
sti
addl
lea
lods
idivb
in
inc
cmp
mov
std
stos
outsl
notb
das
loop
jmp
inc
lret
andb
jg
xlat
stc
lods
push
push
shll
pop
jmp
andb
xchg
inc
out
or
dec
inc
test
dec
adc
dec
icebp
popa
push
xor
xchg
fs
imull
ret
imul
sbb
sti
lods
jge
je
mov
push
nop
outsl
ret
enter
insl
cmp
clc
fwait
lcall
cmp
popa
popf
mov
cld
insb
cmp
lds
stc
mov
mov
push
mov
fbld
adc
mov
shll
ret
popa
push
cli
stos
mov
leave
outsb
popa
repz
push
inc
shrl
jge
and
pop
popa
xor
outsb
fisubl
aad
aaa
loop,pt
fldenv
cltd
push
xlat
stos
loopne
cmp
and
and
shlb
inc
in
cs
jge
jl
leave
dec
roll
cmp
xor
push
ds
or
push
push
lods
cs
push
push
jno
aad
leave
popa
es
lcall
stos
std
add
lret
lods
mov
jle
inc
inc
popa
jo
and
push
mov
sub
idivb
sub
insb
cmpsl
sbb
or
ds
lds
outsb
pop
popa
jae
test
outsl
subb
jle
mov
xchg
bound
stos
sub
outsb
add
loope
sbb
jb
jns
test
mull
out
repnz
fildll
adc
stc
jg
mov
cmc
test
scas
mov
xchg
bound
pop
inc
pop
sar
inc
adc
push
mov
push
jle
inc
jmp
pop
fwait
and
pusha
cwtl
ja
lret
decb
sub
cmp
inc
js
je
adc
and
mov
and
popf
popa
cmp
or
out
das
data16
aad
sub
jne
pop
iret
loop
sti
and
sbb
notb
cmc
xchg
lock
push
inc
into
push
je
and
jp
rcl
jmp
test
or
je
jo
cmpsb
int
pop
push
push
popa
out
xor
roll
je
shrb
and
adc
lea
or
push
jae
int
and
and
mov
dec
jnp
cmpsb
lcall
scas
cmp
mov
bound
cmp
pop
in
inc
and
jno
mov
ja
pop
movsl
popa
int3
jp
out
sti
pop
jbe
cmp
add
mov
and
inc
test
jle
mov
jmp
jl
mov
sub
loope
popa
enter
rorl
adc
add
dec
lods
int
ror
lods
sbb
popa
mov
xor
data16
fstps
inc
dec
cwtl
aaa
sub
sub
lcall
mov
call
jge
push
pop
bound
inc
inc
or
adc
push
rcll
addr16
flds
xchg
sub
ds
mov
mov
popa
xor
fs
lods
pop
mov
popa
in
xor
arpl
loope
popa
adc
nop
aam
popa
insl
out
push
add
push
popa
dec
add
cmp
inc
mov
cmpsb
push
dec
mov
sub
jl
pop
mov
adc
aam
int3
cmp
dec
or
je
jle
sbb
pop
lds
pop
push
xlat
jg
dec
int3
mov
shlb
cmp
popa
sahf
in
mov
and
add
jns
pop
lock
cmp
mov
inc
mov
lods
popf
cmp
in
ljmp
mov
mov
sub
in
mov
cmp
jae
sbb
in
add
push
mov
pop
rorl
int
push
cmp
lahf
and
in
xor
add
imul
gs
fs
mov
mov
clc
jl
mov
fidivl
icebp
sub
outsl
mov
dec
jo
loope
shrb
dec
jo
lock
cmp
out
jle
jmp
inc
idivb
mov
add
out
add
addl
popa
into
inc
movsb
push
jl
or
cmovge
sahf
push
sbb
jno
inc
testl
scas
pop
mov
pop
popa
shll
mov
cltd
mov
orb
aaa
loope
int3
xchg
add
nop
push
popa
stos
rclb
popa
pop
fs
jmp
xchg
mov
sahf
inc
popa
jno
add
mov
pusha
or
and
loop
fists
icebp
aam
mov
jb
test
fs
dec
test
sub
bound
jg
push
adc
sub
cmp
or
xchg
cmc
loopne
popa
and
pop
pop
or
jne
cmpsb
dec
dec
lods
popa
xchg
lret
outsb
jle
divl
mov
loopne
pop
int3
lcall
push
gs
push
jecxz
cltd
enter
mov
loope
jne
xor
jo
popa
adc
push
imul
xchg
mov
and
push
and
or
cli
fisubl
xor
cmp
test
push
les
pop
xor
jns
and
sub
lret
outsb
ds
adc
bound
fwait
mov
cmp
push
insl
xchg
cmp
pop
jl
ficoms
test
clc
popa
repnz
sub
sub
push
and
ljmp
popa
mov
xor
push
jbe
mov
push
adc
jo
sarl
loop
or
ljmp
jns
lret
fsubl
sbb
sub
bound
cmpsl
ljmp
ss
int3
lcall
fmull
aas
fstpt
popa
loop
aad
aaa
xchg
xorl
jle
mov
es
dec
lret
popa
aas
testl
pop
mov
in
pop
lds
std
mov
push
push
bound
cmp
mov
xchg
push
dec
dec
popa
push
aad
push
pop
movsb
stos
pusha
arpl
les
adc
mov
mov
je
cwtl
push
pop
iret
cs
dec
ss
call
adc
std
stos
mov
cs
fwait
xor
pop
adc
jle
into
cmpsl
pop
popa
pusha
push
cli
icebp
popa
sahf
cmp
push
popa
jmp
cld
pop
iret
lea
push
insl
jg
insb
loopne
pusha
popa
adc
push
aad
push
in
jns
shll
cmpsb
popa
enter
dec
or
inc
add
cmp
pop
lods
jae
scas
test
cwtl
enter
popa
cmp
lcall
outsb
and
popa
dec
fwait
insb
rclb
fstpl
popa
mov
and
jnp
shr
rclb
int
stos
jecxz
adc
or
gs
inc
jmp
mulb
icebp
int
xchg
stos
bound
pop
mov
mov
mov
fwait
jp
mov
inc
mov
int
pop
mov
rcrl
sub
stc
jne
popaw
pop
jmp
dec
xchg
push
das
pushf
les
xchg
xor
cli
adc
js
xorb
ret
popa
dec
mov
sbb
mov
int3
fsts
inc
cmp
sub
popa
xor
cmp
out
adc
mov
jecxz
adc
repz
jmp
sub
jae
inc
dec
int
popa
imul
fisttpll
in
cs
pop
popf
add
adc
mov
mov
jne
pushf
xor
xchg
es
jp
iret
jbe
lds
clc
enter
mov
mov
nop
push
pop
icebp
inc
lahf
jmp
xchg
shrl
popa
insl
or
inc
mov
xchg
push
arpl
and
enter
rol
loope
xor
je
popa
push
sbb
outsl
adc
xchg
neg
bound
mov
loopne
es
enter
stos
push
pop
stc
xchg
in
sub
ficoml
add
mov
in
sbb
push
rclb
pop
test
lods
push
inc
daa
insl
or
push
mov
mov
and
push
ljmp
xor
fwait
ss
cmpb
loope
push
mov
dec
out
repnz
fisubs
xchg
or
dec
cmp
fs
popa
je
push
cli
mov
lret
clc
int3
xchg
sub
or
popa
fisttps
sub
fs
add
push
cmp
dec
aad
dec
sar
movsl
popa
xor
jo
pop
hlt
bound
xor
cmpb
cmp
fcomi
shl
popa
lods
gs
xor
repnz
jg
push
arpl
inc
adc
jge
and
mov
outsb
popa
inc
jl
and
sahf
jle
pushf
xor
and
repnz
jl
mov
xchg
jmp
push
outsb
and
push
fidivrs
pop
loope
mov
enter
mov
insb
push
cmp
jle
and
sbb
repnz
fiaddl
sahf
jb
inc
out
popa
sub
and
popa
xchg
inc
xchg
lock
sbb
popa
lret
loope
xor
test
add
adc
idiv
pop
and
popa
jno
iret
jnp
mov
adc
add
aaa
lods
dec
add
fs
pop
ljmp
xchg
push
repnz
loope
int3
add
cmp
aad
popa
mov
xor
xor
insb
dec
outsl
gs
lods
sbb
gs
int
xor
lea
push
sbb
xor
pop
sbb
inc
sbb
andl
mov
ds
push
iret
jne
adc
inc
mov
add
into
nop
popa
push
lret
cld
ss
pop
push
add
add
addl
xchg
stc
xchg
mov
dec
jnp
cli
and
push
xor
jo
int
popa
push
xchg
icebp
mov
aaa
cmpsb
adc
ret
push
fnstsw
lods
mov
pop
or
popa
jno
jbe
lret
jo
js
movsb
jp
mov
mov
icebp
je
fs
lcall
jne
dec
inc
adcl
inc
into
sub
xchg
sub
inc
push
fdivrl
popa
ret
mov
fsubrs
cmc
pop
push
jge
shll
xor
movsb
lods
and
fisubl
popf
mov
lock
mov
xchg
popa
test
add
push
jg
xchg
jmp
push
in
loope
xchg
cs
sbb
fwait
and
es
and
imul
pop
fsubl
pushf
dec
xor
pusha
adc
insl
std
xlat
cmp
mov
in
mov
jmp
insl
push
mov
shll
add
out
dec
jb
stos
mov
rcrl
dec
cmp
jecxz
dec
push
cmp
inc
cli
mov
jb
nop
popa
popf
mov
lea
popa
lods
jnp
fxch
out
cmp
dec
push
mov
je
fs
fs
mov
popa
sub
mov
push
xor
popa
int3
aad
ss
pop
imul
popa
jno
pop
add
lods
add
push
adc
push
mov
mov
and
jbe
cmp
fnstcw
pushf
scas
or
fidivs
xor
pop
aas
inc
add
cmpsl
sub
jne
inc
aad
leave
dec
scas
popa
cmpsb
sahf
test
popa
stc
pop
push
add
jne
dec
jle
aas
cmp
popa
scas
fbld
or
inc
xlat
addb
popa
int
cmp
es
out
popa
test
xchg
lods
or
popa
adc
jnp
fcomip
jbe
push
fnstenv
loope
cmpsb
jle
scas
push
xor
fistl
cmp
inc
dec
mov
aas
sub
xchg
pop
sub
adc
mov
or
lods
add
out
cld
std
movsb
push
pushf
scas
popa
shl
leave
mov
dec
ss
and
adc
popa
jp
xor
add
pushf
xlat
jne
outsl
mov
fs
insb
gs
std
and
jb
xchg
push
fsubs
push
inc
jnp
pop
xchg
pop
je
or
cmpsl
aam
lret
sub
popa
inc
jle
sub
repnz
adc
push
bound
jae
nop
sub
and
lods
ss
popa
sbb
stos
jp
cmc
decb
sbb
popa
add
mov
stc
popa
inc
aaa
out
leave
jno
stos
push
outsb
xchg
lcall
sub
imul
jbe
pusha
popa
loop
inc
xchg
into
fisttpll
adc
push
popa
in
sbbb
jmp
popa
cmp
dec
jno
jle
insl
jl
jne
mov
dec
lock
pushf
xlat
scas
push
movsb
fwait
bnd
movsl
push
cmp
cmpsb
jns
out
clc
pop
adc
popa
push
mov
aas
in
jno
dec
sub
cltd
cmpsb
jne
sahf
mov
push
stos
loope
mov
xchg
popa
adc
mov
or
mov
test
xchg
pushf
movsb
jle
out
popa
xchg
fcomip
mov
int
xor
scas
les
aad
jno
push
or
std
icebp
push
rorb
fsts
rcrb
cmpsl
repz
iret
test
loop
and
cmc
push
negb
push
dec
mov
shlb
dec
xchg
xor
jmp
push
adc
or
mov
in
rcll
fsub
xor
xchg
cmp
stc
orl
and
pop
and
xchg
insb
gs
loopne
jecxz
bnd
nop
push
xchg
pop
pusha
pusha
addr16
in
sahf
sti
push
sbb
push
lds
popa
leave
mov
push
daa
and
push
jp
orl
out
popf
push
fidivrl
fldenv
sbb
repnz
lea
jge
xor
dec
pop
sbb
pop
pusha
cli
jb
mov
mov
sub
push
aas
pop
sub
and
push
jns
xchg
adc
dec
jne
std
int3
jo
es
or
out
repz
insl
dec
fidivs
inc
dec
xchg
sbb
imul
mov
rcrl
clc
mov
test
loopne
data16
mov
out
add
jg
jp
arpl
in
jmp
loop
daa
nop
mov
and
popa
jge
dec
push
je
incl
xchg
jmp
jne
dec
sub
subb
mov
dec
inc
popa
js
lock
cwtl
shlb
jo
test
lahf
stc
xor
popa
not
in
lea
and
je
in
jg
testl
shrb
popa
pop
lahf
cmc
push
xor
fdivrp
fdivrs
cmp
push
in
lock
xor
pusha
add
jns
or
sarb
popa
out
cltd
mov
sbb
or
jg
popf
and
adc
adc
and
jbe
push
scas
popa
ljmp
push
outsl
mov
sub
dec
arpl
lods
mov
scas
jo
xorb
arpl
ljmp
in
inc
xchg
in
push
cmp
sbb
add
mov
int3
popa
pop
cld
jmp
ds
popa
xchg
jnp
inc
xchg
call
rclb
push
mov
jp
popa
adc
push
dec
popa
xchg
lret
pop
fs
or
addr16
in
sbb
leave
fcoml
mov
cmp
adc
aas
dec
and
imul
mov
iret
or
sub
cld
adc
aad
fisttps
je
or
rcrb
outsl
daa
push
mov
pop
dec
push
push
xorb
loope
or
mov
adc
push
roll
fcoml
mov
or
cli
idiv
jg
fsubrp
popa
xchg
adcl
js
adc
ljmp
push
movsb
lock
xchg
lcall
pop
insb
pop
mov
call
jnp
lahf
jl
ljmp
test
popa
adc
mov
repz
lods
xor
inc
ret
ljmp
pop
fs
outsb
shrb
mov
popa
jnp
orl
push
push
adc
pop
sarl
xor
pop
xchg
cmp
jno
pop
inc
cld
mov
push
adc
int
jns
sti
and
lods
pop
repnz
inc
cltd
push
xchg
insl
loope
popa
cwtl
pop
add
popa
scas
ja
sarl
mov
loop
ret
jge
in
aas
subb
xchg
sbb
fwait
roll
jae
xor
ds
fnstenv
imul
jecxz
sub
shl
adc
xor
jb
fisubrl
add
mov
or
call
and
mov
xor
lret
popa
cmp
pop
inc
dec
xchg
mov
fimuls
mov
lods
mov
popa
in
xchg
xor
lds
subb
inc
lock
mov
jg
insl
adc
mov
push
popa
add
cmp
pop
fdivr
popa
imul
adc
sub
js
jbe
pop
mov
das
push
enter
jge
adc
jge
and
sbb
add
dec
gs
daa
dec
xor
dec
mov
adc
das
mov
cmc
xor
dec
xchg
pop
jge
or
mov
stos
inc
aad
outsl
pop
inc
lods
inc
adcl
popa
pop
les
push
jb
push
push
popa
xchg
sub
pushf
pop
in
mov
int3
mov
adc
popa
arpl
outsb
sbb
dec
bound
leave
pushf
sub
loopne
mov
addr16
rorb
popa
inc
mov
les
mov
push
sub
mov
jg
test
fistl
popa
stc
scas
lret
imul
push
sahf
loope
mov
add
cltd
jb
adc
lcall
stc
out
mov
stos
arpl
fadds
xchg
inc
out
out
ret
addb
jno
adc
das
fs
xchg
shll
adcb
dec
pop
popa
jnp
or
outsl
int
popa
pusha
mov
repz
xor
popa
fcoml
pop
inc
popf
ja
push
imul
jl
or
ja
and
out
lock
mov
aad
inc
shlb
mov
in
sbb
popa
dec
stos
inc
inc
push
out
xchg
or
popa
negl
and
popa
out
mov
fidivs
aas
out
fcomi
ficoml
cmc
xchg
popa
jmp
dec
mov
popa
jmp
cmp
mov
repz
popa
mov
popa
out
dec
je
push
fisubs
stos
mov
inc
and
add
xchg
popa
daa
sub
popa
in
inc
jmp
mov
and
addr16
sub
popa
push
and
adc
fdiv
lcall
orb
xor
sub
xor
popa
fldl
and
iret
pop
jp
dec
mov
dec
mov
xor
inc
sbb
daa
cwtl
aaa
dec
out
rorl
mov
mov
insb
shl
and
in
jmp
ss
xor
inc
int
xor
cmp
mov
adc
mov
inc
mov
cld
popa
adc
and
aas
mov
adc
imulb
cwtl
jmp
jl
cmp
xchg
ret
arpl
cmp
popa
movsb
mov
cmp
inc
pop
popa
jmp
add
pushf
dec
jge
gs
insb
loope
pop
mov
pop
mov
fs
out
xor
mov
pop
dec
jbe
jo
int3
ret
ss
inc
xchg
test
push
adc
popa
out
mov
fldenv
jae
addb
xlat
scas
fsubrl
push
popa
lock
popa
loope
sub
je
or
pop
subl
icebp
mov
inc
cmp
fcompl
dec
cld
xchg
mov
jb
test
fs
pop
imul
and
push
dec
bnd
inc
and
push
mov
je
ss
lcall
mov
add
ds
add
inc
popf
mov
dec
out
inc
lods
popa
gs
ret
and
icebp
and
pushf
movb
mov
fildl
insb
add
popa
negl
movzwl
imul
add
scas
pop
mov
mov
jnp
and
test
ljmp
jmp
loope
iret
lret
mov
or
adc
rol
arpl
add
cltd
add
inc
fisubl
js
cmp
sti
fcompl
push
add
mov
popa
mov
fs
test
fistpll
sub
cmp
inc
mov
popa
mov
lea
sub
and
cmp
into
or
add
lret
lock
cwtl
xchg
xlat
or
aad
ret
cli
dec
add
sbb
sub
xrelease
stos
loope
push
pop
push
movsb
lods
sub
popa
popf
mov
addr16
lret
mov
push
pusha
or
test
inc
scas
or
aam
scas
xor
mov
test
popa
loope
call
mov
aas
fisubrs
xchg
add
das
int3
outsb
push
lds
in
push
popa
lahf
out
movsl
daa
imul
insb
leave
popa
dec
cmp
mov
xchg
in
popa
pop
xor
call
pop
out
inc
arpl
adcb
push
repz
test
push
fsubr
inc
lret
bound
cmpb
mov
sub
sub
popa
mov
call
add
fimuls
roll
popa
leave
cltd
mov
lock
mov
xor
or
mov
push
add
mov
cmpsl
sub
jbe
popa
jne
fucomp
sbbl
xchg
arpl
xlat
call
cmp
xchg
mov
rclb
jns
ret
cld
mov
cmc
hlt
push
dec
and
jmp
rolb
mov
pop
sub
xchg
rol
popa
cmp
call
stc
sar
xor
fmull
mov
dec
or
jno
fisubs
pusha
mov
push
insl
imul
mov
cli
leave
mov
dec
into
mov
loope
je
fiadds
pop
xor
in
push
popa
inc
lods
ds
out
imul
int3
cmpsl
aad
lods
push
lods
mov
jge
popa
fwait
xor
dec
enter
rcr
addb
std
bound
stos
ds
out
or
orl
pop
lcall
sub
popa
mov
daa
push
sbb
mov
and
jbe
popa
mov
int3
pop
dec
fs
mov
mov
mov
push
popa
jp
int3
lahf
repnz
ss
cld
fstpt
pop
jg
addr16
bound
cmp
loop
mov
popa
sub
add
mov
movsl
shlb
sub
jp
cmpsl
in
sbb
mov
mov
insl
push
push
jl
sbb
cmp
pushf
adc
loop
pop
lcall
mov
jg,pt
test
fcmovne
mov
sub
inc
imul
ja
stc
faddl
jge
gs
insb
popa
outsl
cltd
nop
imul
and
fsubrp
lods
into
popa
das
mov
shrb
sbb
lahf
push
outsb
loope
gs
mov
push
pop
pop
out
pusha
adc
rolb
mov
mov
xchg
cmpsb
dec
cmp
fs
push
or
les
leave
popa
aaa
negb
out
and
ljmp
mov
sub
insb
pusha
push
and
sub
icebp
out
jae
sbb
mov
popf
pop
testl
jmp
dec
xor
mov
sti
popa
mov
data16
popa
add
push
imul
cmp
popa
movsl
inc
in
ljmp
xchg
into
push
pop
popa
insl
mov
test
inc
xchg
adc
repnz
mov
inc
cmp
sbb
lcall
xchg
and
test
psllw
nop
push
pushf
popa
add
repz
test
int3
scas
cmp
popa
sbb
or
nop
xor
in
xchg
cmp
pop
mov
mov
push
adc
xchg
mov
pop
mov
mov
fwait
icebp
iret
push
mov
push
push
jno
ret
int3
xor
mov
popa
fildl
pop
jmp
adc
leave
popa
dec
jmp
sarb
mov
loop
nop
orl
enter
popa
dec
push
dec
push
mov
mov
and
add
not
push
jg
dec
sahf
and
xlat
add
push
push
inc
loopne
lea
xor
insl
movsl
nop
popf
cmp
xchg
sub
add
xchg
popa
fwait
enter
movsl
or
adcb
mov
adc
loope
dec
popf
dec
popa
cltd
cmp
jge
popa
mov
inc
pop
pop
jmp
enter
jae
dec
call
iret
ljmp
mov
lds
jnp
leave
cmp
popf
fcoms
mov
cmp
cli
pop
mov
insb
mov
add
add
sti
ja
std
sbbl
jmp
cmp
call
movb
xchg
in
pop
inc
fcmovbe
gs
cs
ret
sti
out
popa
sub
and
cs
xor
mov
rcl
xor
mov
cmp
add
int3
shr
faddl
in
or
lea
jmp
and
dec
enter
dec
jle
push
stos
jp
out
rol
pusha
mov
ds
pop
and
push
lock
daa
ja
jle
fmuls
mov
hlt
rcrl
gs
stos
insb
imul
push
lcall
pushf
pop
pop
jecxz
dec
repz
or
rep
adc
push
jns
nop
pop
imul
std
out
inc
sbb
pop
jae
pop
fidivrl
sbb
jno
in
mov
xchg
mov
insl
mov
negl
or
jns
or
push
mov
adc
dec
or
dec
pushf
mov
nop
sbbb
mov
mov
imul
fisubl
out
fnstenv
adc
ror
mov
inc
pop
xor
or
xchg
mov
mov
push
popf
push
xchg
push
test
sbb
pop
fucomip
stos
in
cmc
out
call
test
ret
pop
xchg
pushaw
loop
shl
xchg
iret
or
orb
mov
mov
and
ss
sub
xlat
push
add
or
push
loopne
rcll
dec
xchg
imul
pop
decb
lock
jmp
and
and
mov
lock
out
push
bound
jo
push
in
loopne
jge
push
loop
aas
mov
xor
xchg
and
das
in
cmp
mov
and
loope
jne
xlat
popa
aam
hlt
or
aaa
inc
jmp
lea
fimull
pop
or
sbbb
sbb
lcall
xchg
subb
mov
adc
and
fwait
or
or
es
pusha
add
mov
and
jae
mov
pop
cmpl
push
cmp
in
ja
sbb
push
dec
scas
fcomps
sub
repz
movsl
push
adc
movl
cmc
cld
repnz
pushw
icebp
aaa
pop
cmp
sti
leave
jg
mov
cmp
push
iret
mov
mov
lds
jmp
pop
int3
mov
insl
out
fcomps
fcompl
icebp
mov
clc
push
mov
mov
xchg
cld
popl
fstps
hlt
sub
and
jnp
es
lods
mov
andb
test
sbb
test
fildll
std
sti
int3
cmpsl
cmp
push
les
mov
dec
push
dec
xchg
push
or
mov
jmp
push
es
mov
ds
jne
pop
jo
jae
aas
jg
adc
in
pop
xchg
shrb
daa
insl
mov
cmp
mov
in
push
mov
and
ljmp
and
and
gs
test
and
clc
or
stos
bnd
jge
sarb
fwait
sub
out
sti
lcall
xchg
pop
ja
lods
scas
fwait
pop
das
arpl
sub
xor
mov
and
sbb
scas
or
jg
addr16
out
pop
daa
lods
mov
xchg
or
call
ds
pushf
je
xor
es
push
xchg
out
outsl
mov
roll
add
mov
sbb
and
mov
push
jae
mov
clc
add
leave
adc
inc
insl
leave
das
jae
sbb
inc
and
jl
or
dec
outsl
fisubrs
ja
sbb
cli
mov
movsl
pushf
inc
ss
movsl
dec
add
std
push
mov
test
outsb
ja
push
mov
ds
lahf
dec
xchg
push
or
add
popa
out
jge
xor
ds
mov
lea
mov
stos
xchg
ljmp
add
push
std
repnz
inc
mov
pop
pop
or
in
jbe
and
pop
stos
sbb
cmpsl
lock
mov
mov
xchg
mov
sbb
xor
pop
xor
pop
pop
adcl
je
or
mov
popa
stos
mov
idiv
pop
cmc
cmp
test
cmp
inc
xchg
repz
cmp
xlat
test
ja
add
in
stc
jle
sti
ror
pop
inc
push
popa
jo
cmp
jle
sbb
popa
call
js
sub
arpl
fs
outsb
ret
cltd
pop
mov
mov
fildll
cmp
aad
and
sbb
loopne
fucomi
cmp
adc
das
fiadds
or
sub
fs
xor
or
ljmp
pop
mov
sbb
jmp
shll
popa
mov
sbb
popa
dec
jnp
or
sbb
out
lret
call
mov
inc
scas
pop
and
stos
loop
adc
mov
adc
int
enter
jo
scas
bound
mov
jp
shrl
add
cld
push
or
popa
jge
xchg
movsb
or
add
loop
fwait
popa
bound
sti
popa
mov
movsl
popa
mov
dec
lret
sbbb
test
cltd
xor
ret
add
inc
sub
jo
in
mov
xchg
fnstcw
sbb
cmp
scas
sbb
inc
popa
cmp
test
adc
lea
or
fisubs
cmp
cwtl
xor
std
popa
int3
xchg
fstpt
mov
ja
sub
mov
push
dec
mov
sbb
pop
ss
and
aad
mov
repnz
add
sub
dec
pushf
popa
enter
fnstcw
lods
mov
movsl
js
repz
mov
insb
orl
sbb
repz
repnz
popa
loope
out
push
cli
jl
popa
jae
fidivrl
adc
xchg
scas
popa
ror
lock
xchg
loop
mov
addb
popa
es
inc
out
mov
jo
jns
and
popa
movsl
sti
fisubrs
popa
fld
pop
fildl
mov
push
insl
cli
jnp
aam
jge
or
les
arpl
jecxz
add
lret
out
jp
jae
or
push
and
inc
adc
mov
cmp
dec
pushf
push
sub
and
loope
mov
addb
mov
popa
fsubrs
iret
push
jo
ljmp
or
and
lret
cmc
lock
in
adc
cmp
test
lods
test
push
mov
cmp
fldcw
clc
jg
adc
lahf
jne
outsb
xchg
fmull
dec
and
popa
popf
das
sub
mov
fcmovnb
push
add
test
movsb
icebp
mov
fdivs
pushf
sbb
sahf
pop
xor
cmpsb
popa
cld
jnp
rclb
jecxz
outsl
pop
xor
shlb
adc
arpl
rorl
and
cltd
push
push
add
sbb
cmpsb
ret
fwait
pop
into
mov
mov
imull
pop
jo
orb
mov
test
jl
ja
gs
dec
shl
addr16
mov
dec
roll
test
mov
xchg
dec
mov
stc
hlt
in
ret
adc
std
fadd
jnp,pt
pop
xchg
mov
test
push
push
sbb
in
cld
mov
sbb
inc
insb
dec
cmp
lds
imul
gs
lods
sub
popa
fistpll
or
fs
or
mov
xlat
mov
popa
ljmp
mov
outsb
mov
fdivs
leave
test
in
ret
xlat
mov
inc
andl
orb
shlb
mov
sbb
je
movsb
adc
xchg
aad
push
cmp
sti
xor
sbb
popl
popa
xor
sbb
lea
pop
in
dec
aaa
arpl
mov
push
test
addb
sbb
ja
bound
popa
mov
inc
push
popa
sub
push
popa
dec
aad
clc
push
lcall
das
or
inc
daa
data16
popa
mov
jo
mov
mov
jp
and
scas
frstor
fcomip
cmp
out
popa
ja
shlb
bound
mov
out
sub
enter
inc
cmpsl
loope
mov
mov
push
aam
mov
add
dec
popa
jo
or
jp
repz
test
es
stos
xor
sub
popa
fwait
gs
jo
xchg
jae
cld
lret
inc
cmp
sbb
pop
popa
xor
jnp
scas
fnstsw
push
sbbb
push
out
fsubs
stc
frstor
mov
cmpsl
inc
aad
divb
and
das
jmp
call
popa
mov
rcll
adc
fs
clc
add
out
add
popa
sbb
out
push
std
inc
pusha
mov
mov
inc
icebp
push
and
mov
push
call
lahf
pop
or
jb
mov
icebp
adc
and
hlt
mov
sub
ret
or
adc
mov
jp
lods
push
jg
fcoml
inc
test
fnstenv
dec
push
leave
leave
bound
jmp
loope
out
mov
sbb
add
imul
stos
gs
xor
mov
push
cld
hlt
pop
fstpt
fwait
dec
sbbb
stos
lock
outsb
lcall
push
pop
push
mov
push
gs
ret
jne
imul
js
dec
pop
xchg
jns
pop
ds
xchg
in
ljmp
jo
inc
lds
pop
ljmp
je
and
int
xor
dec
mov
dec
orl
jo
movsl
cmp
insb
std
mov
or
fidivrs
dec
out
pop
leave
sub
dec
xchg
mov
inc
jecxz
cmp
mov
loopne
mov
mov
cli
sti
xchg
rorl
ja
xor
mov
push
mov
xchg
inc
test
sub
ret
movsl
ficompl
pop
jmp
xchg
leave
js
sarl
cwtl
push
mov
pop
adc
js
xlat
inc
dec
inc
nop
or
sarb
adc
rorl
rcrb
mov
sbb
mov
loop
or
test
cmpsb
mov
cmpsb
andl
arpl
daa
jg
mov
loope
divl
addr16
add
popa
lret
add
int
out
stc
loop
pop
sbb
push
cmp
or
push
test
outsl
setbe
xchg
jne
mov
inc
dec
inc
cmc
pusha
jae
fwait
out
sub
push
andl
mov
pop
lds
ror
std
sub
push
mov
aad
jo
mov
jl
xchg
inc
adc
aam
dec
popa
mov
out
insb
lock
rorb
mov
add
imul
fisubl
dec
xchg
push
or
scas
hlt
popa
gs
sub
lahf
mov
xchg
mov
addr16
popa
icebp
int
repz
nop
outsb
inc
pop
popa
sbb
push
cld
jo
pop
sub
and
mov
bound
sbb
inc
push
ret
pop
add
popl
jne
sbb
imul
jle
lret
jg
lea
and
adc
call
popa
cmp
jmp
lcall
fbstp
dec
outsl
hlt
and
xor
sbb
sub
cmp
mov
shrb
mov
fldl
shlb
mov
mov
outsl
in
insb
push
xor
dec
popa
sbb
shll
gs
sbb
mov
fmuls
sti
popa
les
imul
adc
cmp
popf
rcl
popa
mov
push
mov
cld
stos
jle
std
out
cmp
movsl
cwtl
popa
aad
push
fdivl
stos
in
add
sbb
mov
cmp
jl
outsl
stos
dec
arpl
sar
mov
xor
ret
sbb
mov
or
fcmovbe
pop
xchg
orps
jo
xchg
sbb
loope
or
lret
scas
inc
push
cmpsl
icebp
int3
cwtl
fs
popa
inc
test
or
loope
mov
jmp
xor
sub
rolb
sbb
push
jmp
and
ljmp
bound
rcll
shll
xchg
cmp
add
jg
insb
shlb
inc
notl
popa
aam
mov
lahf
and
inc
cmp
cld
push
fmull
popa
xchg
sub
and
sbbb
cmp
fisubl
push
stos
push
lds
dec
cmp
popa
rcrl
cs
iret
popa
sub
sbb
scas
jne
out
icebp
sbb
popf
jmp
sahf
and
sub
popa
stos
jo
fs
aaa
daa
bound
push
subb
mov
or
and
scas
mov
xor
jl
or
mov
dec
jnp
ds
aas
repnz
into
scas
inc
popa
icebp
insl
dec
push
or
inc
and
inc
cs
adc
or
mov
jo
popa
data16
repz
adcb
mov
xchg
push
rol
popa
mov
stos
data16
and
dec
lds
sbb
fwait
sub
icebp
pushf
dec
rcl
push
pop
out
popa
cmp
arpl
ja
popa
cs
loop
mov
adc
aam
dec
shlb
mov
xor
loope
xor
stc
ss
fisttpll
jb
jg
add
jle
rcrb
inc
popa
cld
jge
dec
in
lods
enter
adc
rcll
mov
sahf
pusha
inc
cmc
popa
clc
pop
out
into
sbb
mov
jl
std
adc
jmp
dec
je
ja
or
int3
xorl
lahf
movsl
cltd
push
popa
push
in
add
fs
ss
mov
xchg
int
popa
aas
xor
add
dec
subl
pop
adc
subb
popa
dec
and
xor
inc
rcll
inc
xor
pop
add
mov
pop
adcl
jae
test
test
imul
popa
jno
sbb
xchg
mov
in
nop
imul
jo
outsb
push
mov
loope
repz
sub
add
xchg
insl
mov
rcrl
nop
adc
ret
std
push
lahf
push
lods
clc
enter
fisubrs
fwait
shlb
popa
jg
push
add
jo
dec
cld
leave
add
sub
movsb
rorb
xor
push
inc
dec
push
fabs
dec
dec
arpl
popa
popf
lret
and
clc
push
popa
cld
call
jb
ficompl
sub
xchg
icebp
xchg
mov
leave
mov
lcall
js
jne
in
jge
push
shl
mov
jo
stc
pop
inc
bound
scas
loope
loopne
in
mov
jne
mov
and
mov
out
or
jo
mov
pusha
and
pop
pop
cs
jmp
mov
movsl
clc
das
and
add
cmpsl
jo
test
rol
jg
pop
or
cmp
push
mov
sub
add
mov
push
mov
xchg
popa
lret
sarl
fs
jge
adc
aad
mov
bound
lea
mov
frstor
dec
cltd
nop
lods
dec
sub
pop
and
enter
popa
xor
dec
popa
not
or
popa
adc
fists
popa
call
mov
movsl
insb
clc
dec
push
and
inc
dec
xchg
icebp
fwait
pop
xchg
mov
popa
cmpb
mov
inc
mov
scas
add
inc
adc
push
mov
mov
and
popa
push
push
sbb
icebp
cmpsl
fchs
xor
jb
repz
clc
dec
mov
and
enter
fsubrl
aaa
xorl
insb
in
sub
sub
push
sarb
or
popf
mov
leave
popf
mov
imul
xor
sub
pop
punpckhbw
mov
cmp
movsl
popa
out
pop
aad
stos
fimuls
and
stc
jb
sbb
or
ljmp
in
incl
sub
add
mov
cld
and
push
gs
pop
lcall
addr16
mov
jl
and
lcall
popa
xchg
sub
jo
mov
pop
and
push
outsb
popa
and
nop
sub
sub
mov
call
cmp
xor
dec
outsb
leave
jge
lcall
popa
push
in
mov
mov
es
mov
lahf
cmpsb
push
mov
popa
ret
arpl
cmp
out
in
leave
xor
dec
gs
push
rolb
movsb
push
int3
popa
mov
str
pushf
cwtl
test
stos
push
cmc
sub
add
mov
inc
mov
repnz
xchg
mov
into
inc
data16
shl
push
int3
popa
adc
mov
or
and
xor
movsb
jle
das
inc
aam
popa
sahf
mov
mov
or
push
mov
rol
inc
jmp
sbb
pop
or
ds
xor
jmp
mov
jle
popa
movsb
fsubl
push
ja
mov
pop
mov
adc
call
mov
ja
std
jo
lock
js
and
aad
xor
add
cmpb
stos
xchg
cltd
jo
mov
cmp
cmpsb
popa
pop
les
lods
popa
aad
push
sub
int
js
mov
in
jp
adc
les
inc
rcrb
ds
cli
inc
push
pop
bound
and
ss
fsts
scas
cmp
popa
xchg
movsb
inc
adc
mov
adcl
mov
adc
and
lods
push
hlt
ljmp
fs
rcll
int
ret
pushw
fcoms
sbb
mov
fisttpl
call
bnd
add
aas
dec
jbe
push
sti
jnp
es
jg
dec
outsb
mov
push
sub
loope
xchg
popa
nop
sub
mov
xor
add
cmpsb
fldl
sbb
push
sub
pop
inc
dec
fldt
repnz
stos
pop
shll
xor
pop
aaa
mov
shlb
aaa
js
push
sbb
dec
aad
frstpm(287
push
mov
fiaddl
enter
shrl
arpl
loop
fistpl
ret
lcall
pushf
pop
jl
mov
jns
insb
loop
or
add
lret
sub
pop
xchg
adc
pop
daa
jne
pop
dec
mov
pusha
sbb
pop
call
inc
sub
add
lods
repz
lea
call
lea
add
inc
sub
gs
mov
and
sbb
cmpl
aam
sub
iret
adc
in
pop
ss
js
test
ljmp
pop
outsl
mov
icebp
pushf
push
lods
lret
xchg
push
cltd
test
pop
pop
aad
lret
dec
add
mov
lock
imul
leave
or
add
lret
jle
cwtl
pop
idivl
or
inc
sbb
arpl
jo
in
mov
in
fnstcw
lock
inc
fidivrs
fisttps
xor
jmp
or
std
icebp
out
jmp
or
adc
cld
cmp
pop
xlat
adc
mov
popf
pop
gs
push
sub
xor
out
mov
dec
std
ret
dec
stc
ret
loope
popf
sbb
dec
jmp
inc
sub
cli
in
dec
or
push
outsl
aaa
add
mov
aad
leave
cmp
stos
out
popa
xchg
push
repnz
or
sub
mov
xchg
imul
enter
cmp
repz
out
sub
adc
rcr
lods
sbb
or
xor
shlb
mov
push
stos
loope
cs
push
dec
popa
mov
outsb
jmp
push
xchg
push
sub
ljmp
rcl
jns
mov
xchg
popa
mov
inc
into
lcall
inc
call
jno
call
or
in
adc
bound
sub
pop
mov
adc
mov
xchg
pop
lcall
jbe
and
daa
cld
sbb
dec
in
aad
outsl
push
add
mov
xchg
lea
push
cmp
xchg
pop
popa
push
loop
dec
xchg
cmp
inc
dec
push
inc
xor
jae
test
cltd
pop
xor
pop
sbb
mov
dec
push
mov
adc
mov
loopne
mov
mov
iret
add
cmc
jmp
insl
aam
mov
scas
mov
aaa
lahf
shll
lret
xchg
adc
cmp
adc
loop
sbb
dec
aaa
cmp
mov
sbb
jne
or
into
std
add
cmpl
add
mov
inc
outsb
xor
mov
mov
jmp
inc
mov
imul
jno
scas
pusha
mov
ret
pop
jae
xlat
adc
roll
jle
xor
notl
ljmp
fcmove
jmp
pusha
stc
test
lcall
inc
in
xchg
imul
icebp
push
pop
lock
sub
mov
xchg
push
adc
out
mov
in
addr16
mov
push
mov
push
ds
inc
inc
aas
pop
mov
popa
adc
leave
sub
lock
mov
movsb
pop
popa
sub
inc
imul
fsubl
inc
ja
mov
popa
rorb
mov
enter
shll
in
lea
pop
bound
sarl
mov
je
adc
addl
sarl
lock
dec
mov
cmp
xchg
dec
lods
and
shlb
inc
dec
fildl
nop
stos
popa
in
and
test
in
les
mov
stc
cld
pop
imul
in
add
das
out
mov
mov
fwait
outsl
cld
xor
and
popf
ret
mov
xchg
ja
or
sti
pop
xor
xchg
xlat
xchg
lcall
popa
pop
jbe
int
mov
testl
adc
add
test
jge
jle
mov
lret
rcrl
mov
je
daa
cmp
pop
rcl
mov
aad
dec
fsub
push
sub
iret
or
popa
xchg
jp
xchg
xchg
pop
jo
lahf
xor
and
mov
sub
arpl
inc
lea
mov
sub
dec
out
fisubs
rcrb
popa
pop
jns
xchg
push
sub
adc
insl
in
add
outsb
mov
popa
cwtl
flds
adc
ficomps
add
out
outsl
rorb
inc
pop
popf
or
inc
xchg
fs
mov
push
popa
and
xchg
mov
faddl
mov
repz
loop
cmp
mov
dec
inc
push
push
and
push
inc
in
fstp
popa
mov
arpl
popa
mov
xchg
ljmp
jle
add
out
stos
push
popa
mov
dec
addl
sbb
shll
inc
adc
movsb
call
test
jns
js
daa
xchg
test
arpl
test
sbb
cmp
ret
lods
push
or
xchg
aad
scas
pop
inc
or
bound
sub
push
popa
addb
xor
lds
les
and
popa
lret
xlat
dec
mov
push
pop
push
jg
ret
mov
daa
cltd
stos
mov
jge
mov
hlt
push
and
pop
jmp
mov
cltd
mov
or
iret
filds
xchg
popa
mov
push
ret
int3
pop
in
xor
or
or
jne
fs
repnz
add
cmpsb
bound
filds
ds
mov
popa
loop
xlat
fnstsw
jle
ret
popa
push
xor
loope
push
dec
cltd
inc
das
popa
push
out
xchg
cmp
and
mov
add
stos
pop
std
inc
and
popa
je
add
and
cmp
out
popa
xchg
push
mov
dec
popa
jle
jecxz
lret
xchg
daa
cmpsb
sbbb
or
jae
lea
popa
mov
inc
mov
jge
cltd
test
or
xor
push
test
add
inc
cmc
in
lds
cmp
lret
push
xor
rcll
gs
lahf
popa
cli
inc
fsts
xor
cld
or
rorl
daa
or
arpl
fdivrp
sbb
fsub
movsl
sbb
sbb
push
sub
jne
in
pop
loope
add
shll
sbb
cltd
mov
sub
mov
inc
push
dec
xchg
idiv
in
fs
aam
iret
sbb
addr16
pop
popa
xor
mov
insl
decb
popa
das
scas
mov
icebp
fldenv
mov
mov
es
and
fdiv
push
scas
cmp
push
test
arpl
xchg
xor
and
outsl
popa
ret
add
push
pop
mov
fsubrp
popa
into
mov
cmp
jge
or
and
cmpsb
inc
xor
mov
mov
mov
stos
loop
jne
cmp
pop
in
push
call
testb
aam
xchg
popa
out
xor
cmp
jecxz
imul
subb
push
shlb
repnz
shll
insl
lds
or
xchg
xchg
andl
sub
pop
jb
jp
ret
mov
push
scas
xor
sub
sub
popa
sbbl
mov
popa
cld
pop
cmp
scas
and
cmp
cwtl
xor
popa
mov
popl
popa
lods
sub
mov
push
shll
lcall
popa
xchg
push
sbb
popa
push
lds
lret
mov
cld
pushf
movsb
xor
mov
pusha
sub
insl
and
xchg
mov
das
pop
jp
or
popa
pop
mov
fs
or
dec
xor
push
mov
pop
ss
sub
push
sbb
sub
xor
rcrl
inc
loop
movsb
bound
push
mov
jmp
test
data16
movsl
aad
and
popa
dec
clc
xchg
repnz
xor
scas
push
mov
cmp
movsl
fs
lret
inc
push
inc
adc
popa
mov
hlt
sub
test
andb
loope
fwait
andb
and
add
scas
mov
addb
popa
leave
outsl
popl
inc
shl
sbb
imul
jno
orl
jo
les
or
xchg
xchg
adc
jecxz
jnp
mov
aas
add
cmp
mov
cmp
pop
push
pop
mov
out
hlt
cmpsl
nop
mov
sarl
idivb
push
loope
sub
lahf
stc
push
and
push
popa
inc
out
lret
or
outsl
dec
push
jns
mov
rclb
loopne
mov
push
xchg
jmp
rcll
popa
inc
sub
adc
popa
mov
push
ja
popa
adc
test
add
call
push
into
jo
fwait
dec
cld
jp
jle
inc
push
popa
andl
andb
mov
push
popa
ds
pushf
inc
adc
sub
shl
sarb
pop
ret
dec
cmp
inc
popf
nop
punpcklwd
dec
fwait
popa
adc
popf
pusha
jmp
xlat
js
mov
scas
ret
inc
mov
push
sub
popa
ror
mov
test
jge
ja
add
loope
add
inc
push
outsl
jl
das
bound
ss
mov
in
inc
aaa
dec
loope
inc
sub
push
push
repnz
lret
and
out
add
add
push
popa
shr
mov
sbbb
push
lods
popa
inc
cmp
jge
cld
push
into
rorl
es
adc
mov
sbb
dec
stos
std
out
and
jp
pop
sub
mov
popa
cwtl
xor
sub
pop
xchg
out
pop
mov
sti
test
mov
popa
dec
mov
dec
insl
arpl
mov
lcall
in
inc
jne
les
in
dec
popa
sub
xor
popa
xchg
add
mov
into
sahf
lods
or
popa
cmp
test
jb
aas
push
lds
inc
pop
loope
adc
cli
dec
pushf
inc
movsl
popa
cs
cmpsb
add
pop
popa
scas
sub
pop
jns
popa
xor
nop
lock
lods
fadds
push
popa
mov
mov
mov
ljmp
popa
or
xchg
outsl
clc
jno
test
and
pop
in
lods
cmp
mov
cmp
outsl
fsubp
js
loope
jne
mov
imul
sbb
outsl
cli
lock
push
loope
in
cmc
ficomps
popa
push
mov
insl
push
or
aad
ficompl
lret
std
imul
dec
sub
xor
sbb
pop
or
not
mov
push
iret
mov
mov
pop
stos
js
inc
fcom
popa
call
push
hlt
lahf
jp
popa
cltd
nop
das
frstor
mov
push
movsl
movsb
and
push
fsubrs
xchg
xchg
popa
cmpsb
and
push
insb
xor
or
sarl
test
lahf
jl
loopne
cli
push
ljmp
int3
rcl
fmull
fdivr
push
mov
sbb
push
popa
mov
leave
daa
lret
aaa
cli
icebp
sub
insb
sbb
push
and
cld
mov
adc
lods
dec
int
jecxz
mov
in
mov
loop
push
mov
lret
sbb
data16
repz
loope
push
cmp
rolb
popf
jnp
loop
mov
cwtl
xor
cmpsb
jge
nop
push
push
fs
enter
xor
sub
mov
mov
cmpsl
sub
push
clc
std
sbb
in
lods
pop
mov
in
loope
pop
dec
mov
adc
aas
xchg
leave
or
andl
push
test
fbstp
cmp
out
pop
jb
mov
cmp
pop
aaa
std
add
cmp
in
ja
test
push
icebp
dec
shlb
leave
imul
loop
pop
and
in
and
add
pop
cmp
fisubrs
add
pop
in
icebp
push
inc
sbb
xchg
xor
push
add
xchg
pop
dec
jg
cmpsb
std
mov
pop
and
and
gs
movsl
xor
xor
inc
mov
push
cmc
add
jae
mov
cmp
adc
xchg
sub
hlt
cmovae
mov
test
les
xor
dec
add
pop
popa
lods
mov
out
mov
rolb
mov
mov
insl
jo
and
imul
stc
mov
ret
pop
push
mov
dec
notb
into
xchg
fwait
std
imul
or
mov
je
push
pop
add
js
or
call
stc
leave
jbe
and
fisubl
pop
cmp
test
icebp
push
or
in
lea
and
in
or
je
rcll
jbe
aad
mov
push
rolb
addl
dec
ja
ljmp
sub
mov
push
shll
dec
fs
mov
and
mov
xchg
jo
ds
lahf
in
out
jo
jl
pop
add
in
pop
out
ds
inc
popa
cmp
mov
test
push
mov
popa
sub
pop
jecxz
jo
cld
fs
or
inc
sub
decl
ds
and
les
lcall
scas
jl
jge
ss
arpl
notb
xchg
mov
or
sarl
cld
popa
jg
fstps
popa
frstor
mov
es
rcll
out
bound
les
popa
adc
cmc
mov
cmp
or
stc
rorl
fwait
push
das
popf
push
cwtl
sahf
outsl
out
push
jo
push
xchg
push
jno
mov
inc
scas
popa
sub
push
mov
loopne
mov
mov
or
test
dec
push
mov
outsb
cltd
into
cmc
add
mov
and
sbb
xor
pop
mov
xchg
in
outsl
ss
dec
popa
subb
in
sti
insb
pop
hlt
roll
popa
movsb
cmp
jb
and
pop
into
fldt
dec
jo
cmpsl
adc
cmp
flds
addb
inc
add
jb
jge
in
in
out
popa
jne
and
ds
bound
sub
cltd
int3
add
pop
adc
or
xchg
add
sbb
test
int
push
ljmp
mov
cs
lcall
dec
test
dec
sbb
and
bound
popl
outsb
dec
subb
popa
mov
jne
pop
fidivrs
popf
imul
xchg
cmpsb
movsl
lds
jo
dec
xchg
aas
sarl
and
aad
rep
jg
cmp
and
and
icebp
popa
clc
lds
push
jnp,pt
jp
mov
inc
inc
inc
popa
arpl
insl
sub
inc
movsl
add
pushf
mov
mov
popa
mov
dec
jmp
mov
insb
inc
adc
cmp
std
mov
push
sbb
pop
bound
loope
stos
aam
mov
test
push
cmpsl
push
pop
icebp
sbb
movsl
jnp
filds
xchg
jge
pop
sbb
into
xchg
andl
mov
adc
and
arpl
cmp
in
inc
pop
scas
pushf
mov
cmp
xchg
adc
mov
push
jle
aam
push
repnz
xchg
out
aaa
xchg
mov
add
jg
mov
and
les
test
popa
jns
daa
fldt
cmp
in
popa
lcall
rcrb
pushf
sub
in
pop
xor
jecxz
sti
popa
imul
gs
mov
enter
add
ficompl
popa
addr16
leave
sbb
jge
push
mov
xor
mov
iret
icebp
jmp
outsl
stos
lock
popa
cli
je
inc
movsb
adc
xchg
push
fldenv
jb
sub
and
stos
ds
loope
add
into
inc
clc
mov
insl
inc
fsubs
mov
pop
mov
lock
xchg
sbb
jo
xchg
jp
and
into
adc
ss
sahf
aas
popa
xchg
mov
repnz
fwait
inc
jbe
aaa
ds
mov
add
clc
in
nop
mov
push
jl
fmul
insl
dec
ret
movsl
adc
inc
aad
popa
push
pop
dec
jle
dec
les
ljmp
xor
add
stos
test
rorl
out
popa
inc
push
adc
xchg
ss
adc
sbb
out
nop
popa
dec
xchg
popf
stos
push
mov
push
cmpsb
lea
xchg
pop
fs
or
xor
mov
mov
xchg
out
add
arpl
mov
sub
test
sar
push
pop
daa
xchg
call
mov
pushf
js
jge
xchg
pop
popa
push
dec
andl
xor
popa
int
pop
push
dec
iret
shll
mov
pop
pop
xchg
xchg
push
loop
notb
adc
lods
jno
pushw
popa
rorb
add
stos
int
mov
xchg
jmp
in
push
out
aad
mov
popa
add
push
xlat
push
les
cltd
xor
or
mov
add
pop
cmp
mov
cli
loope
inc
jbe
lea
addr16
nop
sbb
mov
mov
rcl
fsubr
popa
fidivrs
mov
ficoml
push
dec
popa
xchg
orl
mov
mov
adc
call
popa
push
mov
cmp
jo
mov
popa
mov
adc
pop
jle
mov
or
call
cmpsl
sar
inc
ds
fildll
mov
out
jo
mov
test
insl
dec
stos
call
pushf
call
cmp
inc
dec
test
loop
dec
mov
dec
adcb
pushf
inc
dec
popa
cmp
xor
sti
ja
pop
repz
outsl
xchg
push
mov
popf
lret
popa
xor
cmp
push
sub
mov
pushf
adc
mov
pop
dec
popa
jno
fdivr
add
pop
sbb
jmp
sub
pop
and
jle
popa
push
cmpsl
je
shr
int
add
push
popa
in
cmpsl
sub
mov
cld
jbe
sti
bound
out
rolb
frstor
xchg
cmpsl
push
popa
jb
jmp
pop
push
loop
in
sahf
adc
dec
jne
and
std
fcmovnbe
cmpsl
addr16
and
and
cmp
push
adc
cmp
mov
daa
mov
loope
and
push
popa
pushf
lret
cmp
jo
mov
daa
mov
pop
sbb
stos
cli
jnp
pop
cmp
popa
fsts
mov
icebp
mov
test
inc
fwait
popa
cld
push
adcl
mov
popa
fwait
push
add
popa
sbb
lds
dec
repz
jo
cmp
out
scas
sub
fs
insb
pop
add
push
cld
out
xchg
sub
mov
adc
mov
cmpsb
jne
bound
add
stos
imul
push
test
add
pop
popa
shll
popa
cmc
mov
and
popa
ljmp
jo
and
mov
aaa
xchg
pop
out
pop
enter
fwait
fwait
inc
mov
xchg
fsts
popa
pop
jge
dec
ss
pop
push
sbb
push
add
mov
ljmp
loope
ret
nop
mov
jbe
dec
sahf
dec
sarl
xchg
cmp
mov
movl
lds
dec
xor
jno
or
bound
xchg
inc
mov
arpl
sub
xchg
sub
stos
mov
test
and
arpl
lret
jmp
sahf
fimull
mov
inc
imul
fcompl
jp
into
jnp
mov
xchg
push
stc
sub
bound
rorb
xchg
inc
pop
pop
addr16
shll
arpl
sub
gs
dec
popa
icebp
into
in
insl
lret
popa
adc
enter
jbe
leave
or
mov
iret
jne
xchg
mov
into
imul
loop
xor
and
popa
xchg
push
jnp
xchg
loope
push
add
pop
cmp
dec
and
popa
aas
push
stos
outsl
push
ds
xchg
scas
push
mov
popa
xor
rorb
stc
lahf
sbb
jo
incb
pop
les
aaa
call
popa
fiaddl
fnstsw
mov
orb
or
ret
arpl
dec
subb
popa
iret
cmp
and
adc
cmp
popa
push
cmc
add
ftst
sub
ljmp
pushf
xlat
xchg
arpl
jo
mov
hlt
pusha
jge
scas
jo
dec
xorl
sub
ljmpw
push
in
mov
inc
aaa
repnz
int3
fistpll
or
bound
stc
mov
in
scas
je
push
cmc
movsl
pop
popa
sub
xchg
xor
sbb
insl
mov
aad
sbb
push
popa
sbbb
sub
xlat
jecxz
popa
push
lcall
dec
dec
popa
inc
movsb
pop
pop
xchg
outsl
cmc
gs
lds
leave
jbe
popf
mov
popa
outsb
in
inc
pop
mov
push
icebp
inc
fcompl
test
popa
inc
push
mov
mov
sbb
mov
or
bound
pop
rorb
in
push
cli
aad
mov
loope
arpl
sbb
pop
push
fs
orb
cmp
xor
aaa
mov
popa
lds
push
addb
jns
subb
mov
flds
imul
and
popa
repz
loopne
add
adc
or
bound
fisttps
inc
pop
outsl
pop
stc
daa
arpl
or
add
mov
jae
cmp
add
mov
push
inc
rolb
push
and
loope
fwait
cli
scas
fwait
push
in
adc
sub
cmp
xchg
fwait
imul
add
in
shll
mov
lret
cmc
mov
lds
push
sub
sub
popa
add
stos
mov
aas
jno
or
das
stos
lods
arpl
and
jg
mov
xor
push
fwait
mov
and
jo
push
outsl
cmpl
iret
mov
mov
cmp
in
push
ss
dec
jge
mov
popa
and
loop
jle
inc
xchg
dec
sub
andl
loope
in
mov
popa
outsb
daa
dec
adc
popa
aam
and
sbbb
popf
jp
or
outsb
jg
adc
loop
mov
popa
leave
cmc
cld
pop
mov
les
ret
ret
loope
inc
bound
mov
popa
or
test
sbb
jge
push
jbe
pop
fwait
and
xorl
or
insl
fstl
int3
ljmp
mov
xchg
mov
inc
jae
pop
les
in
in
xor
xor
cwtl
outsl
xchg
mov
test
mov
fs
cltd
fbld
and
inc
adc
mov
and
pop
out
popa
xchg
es
xor
pop
outsl
add
cmc
xlat
mov
arpl
and
dec
push
mov
popa
jmp
mov
sub
cli
pop
cs
fmull
push
clc
and
pop
popa
test
rol
scas
popa
hlt
popf
mov
inc
fs
and
arpl
iret
dec
popa
fld
and
push
xchg
lcall
and
clc
jp
and
es
xlat
mov
xor
adc
gs
push
lret
xlat
aaa
pop
int
xor
sbb
das
es
lahf
add
pop
xchg
popa
mov
in
lret
popa
in
mov
mov
int
rolb
or
adc
movsb
or
jae
imul
das
dec
push
push
mov
test
pop
iret
punpcklwd
movsb
cmpsl
mov
cmp
fisubs
insb
and
sub
fcoml
popa
sarb
inc
aam
adc
jns
mov
jl
leave
popa
xchg
xor
imul
jo
dec
repz
pop
add
in
in
push
add
punpcklwd
dec
jns
popa
lock
mov
push
clc
pop
sbb
xor
push
cmp
mov
lods
and
jae
cmpsl
rorb
adcb
mov
popa
mov
insl
popa
jne
adc
js
fdivl
xlat
repz
lcall
and
lret
aas
fisubrl
clc
test
icebp
into
mov
call
sbb
je
mov
mov
pop
jge
add
into
sbbl
mov
push
pop
lds
mov
popa
sub
inc
dec
gs
cwtl
ss
inc
loop,pn
pop
inc
and
hlt
jle
push
jg
push
and
mov
int
fisubs
imulb
sub
daa
sbb
sarb
jg
inc
dec
popa
loop
out
mov
arpl
push
sbb
jne
add
leave
adc
imul
inc
popa
out
test
stc
popa
add
push
mov
mov
movsl
sub
sbb
dec
cmpsl
mov
push
scas
push
or
outsl
mov
push
shl
sub
inc
out
mov
inc
pop
jo
pop
dec
out
popa
and
popa
xlat
add
je
popa
repz
mov
out
in
popa
test
xchg
add
mov
popf
adc
popa
test
pop
push
dec
popa
test
js
xchg
shll
adc
push
loope
gs
mov
xor
and
xchg
xor
push
ret
xchg
inc
sbbb
in
and
xchg
imul
sub
adc
mov
jne
sub
xor
pop
loope
pop
pop
mov
jl
out
sahf
push
popa
je
push
jle
add
mov
ds
mov
stos
ja
mov
and
or
es
or
cmp
int
fxam
outsl
push
in
sbb
mov
fists
fisubl
mov
sub
mov
test
call
dec
xor
or
loope
cli
popa
dec
std
mov
xor
test
int3
fst
stc
andb
insb
mov
les
push
sbb
jmp
xor
test
pop
pop
push
ljmp
stos
dec
sbb
jno
mov
incb
xchg
or
movsl
jbe
fdivrl
pop
mov
adc
lock
mov
fmull
fdivrs
inc
dec
push
pop
popa
xchg
push
cmpsl
sbb
repz
xor
sub
sbb
or
jb
shlb
insb
adc
repz
push
test
imul
mov
jae
adc
in
ja
popa
fmuls
xlat
xchg
jnp
popa
movsb
sti
mov
mov
sbb
repz
ja
jecxz
jg
les
jnp
out
scas
fsubl
andl
popa
icebp
inc
mov
popa
jmp
or
sub
sti
icebp
add
movsl
adc
test
popa
clc
leave
ret
popa
repnz
xor
push
xorl
bound
mov
imul
shrl
jmp
jb
or
mov
data16
insl
add
and
xor
mov
push
mov
and
loope
push
ja
sub
mov
shr
inc
popa
jge
push
popf
adc
mov
mov
loop
jno
mov
neg
adc
notb
push
xor
cld
popa
push
mov
leave
lods
fs
pushf
shll
icebp
inc
test
inc
cmp
aam
pop
rcll
mov
push
fldenv
pop
int
daa
mov
lret
popa
std
es
icebp
and
sahf
frstor
mov
inc
cmp
mov
in
sahf
xchg
mov
popa
pop
mov
pop
cwtl
stc
push
popa
leave
js
sbb
or
popa
ljmp
cmp
inc
aad
xlat
push
ljmp
inc
jo
movsl
fs
outsl
jge
in
loope
adc
lret
xor
pop
pop
popf
sub
mov
pushf
mov
popa
sbb
mulb
bound
jg
fwait
cli
or
sgdtl
mov
push
adc
lods
daa
outsl
inc
int3
scas
loopew
test
xor
inc
push
mov
mov
cmc
popa
push
pushf
movb
add
xchg
cmp
jns
xlat
mov
popa
roll
cltd
into
cmp
cmpsl
popa
mov
mov
xchg
adc
scas
movsb
mov
and
pop
lods
cld
sub
xchg
fiadds
lock
cmpsb
pop
dec
loope
or
outsl
bound
jg
mov
lods
popa
jp
and
imulb
xor
jge
push
cmp
imul
mov
jle
jae
jg
popa
xchg
push
dec
push
movsl
test
jmp
cld
mov
adc
dec
xchg
gs
lcall
lock
xor
xchg
lcall
mov
jno
xchg
enter
add
adc
test
out
pop
clc
shlb
lcall
ret
sbb
add
cmp
dec
and
mov
sub
rcrl
xlat
jae
mov
out
bound
push
xorb
xchg
fdivrs
xchg
lcall
sub
mov
sbb
out
lea
xchg
scas
popa
popf
lods
dec
pusha
jl
popl
pop
jb
clc
and
push
push
xchg
leavew
or
sti
popa
jnp
std
dec
push
lret
cmp
pop
cmp
adc
jb
pop
or
aam
xor
popa
mov
push
aad
popa
out
xchg
xchg
cs
and
shl
pop
jne
jg
cwtl
sub
mov
arpl
rcrl
popa
xchg
movsl
jb
pushl
xor
shlb
or
jge
popa
pop
xor
mov
outsl
xor
test
bound
sti
lods
call
pop
jne
punpcklwd
push
imul
fwait
jl
loope
movsl
mov
cmpsb
aas
pop
popf
sub
sahf
xor
mov
loopne
xlat
pushf
xor
popa
xor
add
adc
shl
pushf
fs
push
sub
xor
flds
dec
js
data16
clc
aad
xor
pop
xchg
popa
sbb
test
cld
adc
dec
iret
pop
mov
aad
roll
mov
xorl
insl
push
loope
nop
jmp
into
lret
popa
xlat
test
int3
add
mov
cmpsb
les
outsb
or
dec
push
popa
addr16
imul
push
shll
cmp
notl
lods
mov
int
shrb
dec
imul
lcall
jg
popa
xor
call
and
and
popa
cmp
mov
sbb
or
rol
out
jecxz,pn
aaa
push
inc
cmp
lcall
add
incl
test
sub
sub
jg
sbb
inc
subb
lea
inc
dec
outsl
pop
popa
jl
push
adc
mov
or
or
adc
popa
loopne
repz
push
js
mov
pop
push
dec
lds
pushf
and
jo
push
mov
les
popa
out
test
outsb
imul
or
arpl
jns
in
and
addr16
test
shlb
cmp
xchg
mov
pop
leave
fildl
push
mov
xchg
es
cmp
or
rorl
popa
mov
fstps
popa
mov
mov
repnz
ljmp
push
adc
xchg
rorb
movsb
inc
cmc
push
or
popa
pop
mov
mov
sbb
xchg
ja
push
adc
into
shrb
test
es
mov
std
lock
popa
push
roll
sub
gs
cmp
jb
bound
es
inc
mov
popa
ds
inc
or
push
andl
aaa
jb
push
cmp
push
cmp
xor
dec
or
adc
fwait
jbe
aas
pop
inc
outsl
leave
add
inc
dec
dec
stc
testl
mov
mov
dec
hlt
ret
push
test
sub
lcall
mov
pop
fcompl
push
lcall
push
and
scas
clc
mov
fidivs
movl
loope
repz
xchg
fs
sub
cmp
inc
push
jl
or
pop
sbb
movsl
inc
mov
jae
mov
jns
and
in
mov
sbb
pushf
bound
xchg
aad
std
dec
orl
mov
loop
and
cmc
xchg
js
dec
or
shl
popf
loop
and
daa
pusha
pop
pop
loope
leave
xchg
js
ret
sbb
stos
and
popf
jp
daa
jmp
pop
filds
push
out
push
mov
cmp
pusha
pop
test
jl
mov
pop
xor
and
xchg
cli
mov
insb
imul
hlt
adc
pop
lods
xchg
je
int
enter
inc
cltd
lock
lret
sbb
call
call
or
mov
movsl
jmp
sub
jns
ljmp
mov
repz
mov
and
push
cwtl
or
or
mov
clc
or
rorl
dec
clc
and
push
out
lods
mov
or
sub
xchg
popa
sbb
mov
mov
mov
popa
ret
jns
fnstenv
add
mov
add
push
jl
or
sub
cwtl
repnz
xlat
mov
add
out
or
sbb
sub
rcll
out
popa
push
dec
cmp
xchg
mov
xchg
and
stos
push
dec
loope
pusha
pop
clc
popa
arpl
jnp
fidivs
out
jge
mov
push
iret
outsb
jmp
mov
sub
ja
push
popa
adc
outsl
loopne
adc
jb
into
and
aad
rorl
icebp
lahf
adc
popa
mov
outsl
movsb
icebp
pop
push
inc
xor
pop
loopne
and
pop
add
popf
xor
mov
nop
es
cmpsb
pop
test
popa
rorb
adc
or
xchg
cld
fbld
popa
aam
mov
ficomps
mov
hlt
and
rolb
test
popa
loope
cmp
lods
add
pushf
iret
bnd
popa
or
fmuls
fildl
push
popa
cmpsb
mov
aam
cmc
addr16
inc
call
in
movsb
mov
test
pop
and
inc
or
adc
aad
jno
in
fldenv
call
dec
jmp
pop
jns
ret
mov
push
lods
adc
push
pop
push
movsb
test
popf
stc
popa
xchg
daa
pop
es
arpl
popa
dec
fimull
scas
popa
insb
dec
cltd
std
je
xor
add
in
adc
test
sbbl
mov
jne
stc
fildll
sub
fsubrl
pop
sbb
jns
mov
or
ret
xchg
jg
push
push
loope
jp
cmpsl
xchg
popa
clc
pusha
cmp
outsw
mov
pop
mov
sub
fcomps
push
jp
push
pop
sub
je
repnz
xor
into
add
pop
in
sbbb
mov
in
pop
aas
push
xchg
cmp
lahf
mov
popa
loope
xchg
xchg
insl
mov
movsb
inc
mov
or
into
insb
and
outsl
loope
pop
roll
add
pop
popa
outsl
dec
sti
leave
ja
sub
popa
or
pop
adc
mov
loopne
mov
repnz
and
adc
sub
push
mov
imul
loope
mov
push
mov
cs
or
dec
pop
data16
rcrb
loope
std
loopne
jl
dec
scas
push
dec
jg
dec
popa
and
cmpsb
add
mov
hlt
mov
mov
cli
pop
push
lods
mov
fsubs
adc
cmp
mov
inc
clc
mov
hlt
or
outsb
ficoml
xor
test
outsl
adc
inc
popa
rcl
mov
shrl
scas
push
sti
adc
lods
push
daa
pop
popa
mov
pusha
into
or
mov
fistpl
and
inc
jb
popa
inc
jae
mov
js
mov
bound
cvtps2pi
pop
inc
loope
sbb
popa
movsl
call
lea
fwait
cmc
arpl
bound
test
nop
gs
sub
in
popa
sbb
ss
popa
adc
or
or
add
popa
jmp
hlt
mov
push
pop
or
xor
push
jecxz
popa
clc
xchg
dec
mov
andl
rolb
rcpps
jg
jecxz
sbb
mov
jo
popa
add
mov
jno
out
or
cmpl
cmp
das
mov
inc
mov
jns
sbb
sbb
decb
mov
sahf
push
insb
mov
out
stc
movsb
bound
lods
daa
push
xor
nop
adc
scas
dec
add
cmc
fistpll
cmp
iret
pop
dec
filds
and
iret
pop
xchg
mov
push
cmp
popa
dec
outsb
std
loop
adc
and
out
rol
fsubl
test
jne
cmpb
aam
ss
lods
push
aam
popa
test
sub
pop
dec
xchg
sub
inc
push
cmp
mov
pop
push
jmp
push
ret
cs
out
mov
pop
shll
popf
xor
xchg
push
mov
aaa
repz
dec
mov
mov
mov
sbb
loop
shrl
mov
or
push
mov
push
popf
xor
in
loope
push
push
inc
inc
out
xchg
punpcklwd
dec
dec
dec
dec
shlb
or
mov
out
and
pop
pop
sbb
loopne
or
push
clc
js
in
popa
cmp
adc
fiaddl
jo
arpl
dec
popa
and
inc
xor
stc
push
outsl
sbb
lret
sbbl
ret
shll
and
adc
sub
pop
xor
popa
fstpl
jle
mov
rol
mov
mov
inc
add
sarl
aas
pop
push
push
jns
pop
cmpl
inc
mov
sbb
or
daa
inc
pop
jle
xchg
movsb
xchg
gs
lcall
insb
imul
hlt
andl
jge
inc
add
js
popa
inc
pop
sub
pop
popf
jo
xchg
xchg
and
or
js
cmp
push
and
mov
sub
jmp
cmp
jg
sub
push
adc
frstor
int
sub
mov
ja
nop
mov
mov
fs
sub
sbb
sub
jge
outsb
mov
pop
push
inc
mov
and
mov
dec
push
popa
pusha
xor
andb
mov
sub
sub
inc
xor
push
popa
pop
stos
sbbl
or
and
jmp
or
jo
popa
leave
jnp
iret
lret
movsb
sub
popa
mov
lds
mov
jne
mov
xor
out
ret
popf
push
adc
sbb
mov
push
mov
popa
adc
cld
sbb
add
popa
ja
fistl
repz
jmp
push
dec
jg
dec
daa
mov
pop
sub
mov
push
inc
dec
add
stos
xchg
or
mov
sahf
outsl
shl
loope
into
jge
add
decb
popa
sbb
xorl
sub
push
mov
popa
mov
je
push
xchg
imul
data16
rclb
stos
lock
adc
fwait
mov
cmp
popa
cmp
iret
movl
mov
fcoms
push
jne
nop
push
pop
cli
rcrb
adc
xor
stos
xor
lret
mov
jno
test
sahf
cld
add
rcll
or
popa
push
jl
push
sub
xchg
mov
jo
das
jp
orl
jg
stc
mov
cld
jp
inc
orb
pop
and
orb
popa
push
jno
ficompl
sbb
andl
sbbb
pop
pop
popa
dec
or
outsl
popa
ret
icebp
xchg
xrelease
dec
sbb
add
pop
jo
and
adc
sti
aad
aam
popa
rcl
shll
pop
in
fcompp
out
dec
jg
inc
popa
mov
xchg
mov
bound
rcr
sub
pushf
sub
popa
lret
push
jle
or
sub
fs
hlt
dec
popf
fstpl
sbb
or
mov
pop
loope
pop
sbb
cli
stc
xlat
popf
sahf
call
mov
sti
jmp
cmpl
repnz
in
push
sub
mov
cmp
outsl
ret
nop
jmp
mov
xchg
clc
mov
inc
in
ficompl
loop
xchg
add
xchg
push
mov
sbb
int
mov
movsl
or
or
adc
sub
pop
pop
jge
push
addl
aas
mov
clc
bound
loope
lods
sbb
jno
sub
test
push
push
or
and
popa
dec
mov
push
mov
rclb
aad
xor
add
add
movsl
hlt
bound
push
bound
mov
pop
daa
mov
mov
cs
add
movsb
dec
outsb
shrl
call
test
ja
jmp
div
shrl
cmc
leave
popa
pop
test
mov
popa
xchg
and
mov
add
popa
dec
push
loope
dec
loopne
gs
fsubs
outsb
orb
and
dec
push
je
int3
sbbb
arpl
ss
and
mov
pop
jp
leave
and
inc
mov
push
pop
mov
orb
xor
mov
or
jo
cmpb
mov
cmp
pusha
out
pop
inc
les
dec
xchg
pop
cli
or
push
das
jae
or
pop
mov
dec
daa
mov
mov
jae
and
dec
xchg
cltd
push
xchg
push
popf
jns
pop
dec
je
movsb
bound
jmp
addr16
pop
xchg
mov
cmp
pop
loop
jge
jae
aad
jge
in
push
cmovns
das
jmp
out
loop
push
int3
scas
loope
dec
xchg
roll
loop
inc
pop
insl
fs
ja
inc
pop
icebp
jne
push
insl
mov
xchg
into
mov
std
shl
adc
outsb
imul
add
test
gs
and
insb
dec
mov
mov
jle
shll
xchg
jmp
pop
inc
gs
xchg
popf
data16
pop
out
test
mov
xchg
rorl
or
popa
test
or
xchg
or
ljmp
aas
test
mov
pop
aaa
ss
inc
idivb
loope
inc
mov
and
and
loop
int3
sbb
mov
cs
cmp
ffreep
aad
das
add
mov
fwait
and
out
popf
add
bound
inc
dec
mov
fwait
mov
pop
aaa
add
jmp
and
jno
xchg
cmp
lahf
iret
test
arpl
xor
aaa
out
cmp
gs
and
xchg
mov
repz
mov
in
popa
jo
data16
inc
movsb
popa
jle
add
popa
shl
mov
popa
jge
add
jo
xor
les
in
shll
enter
xchg
popa
imul
repnz
test
xor
fisubl
add
ja
adc
arpl
shll
push
jns
das
data16
sbbl
fdivp
fs
mov
imul
loop
insl
dec
or
popa
mov
xlat
rorb
inc
sbb
push
enter
div
out
movsl
popa
pushf
inc
pop
lret
push
sbbl
aam
in
cmp
and
in
xor
lahf
scas
jecxz
test
lcall
inc
xor
add
gs
scas
dec
mov
inc
bound
movsl
mov
jb
insb
outsb
std
inc
scas
loope
scas
pusha
dec
xchg
popa
add
push
arpl
mov
mov
xor
add
sub
icebp
mov
push
fst
popa
lods
out
pop
addl
cmp
mov
xchg
out
dec
lahf
popa
push
cld
insl
jns
dec
out
std
aam
ds
popa
adc
test
pushf
jecxz
jo
je
imul
mov
pop
pop
fs
fisubrl
jnp
icebp
mov
out
pop
push
ret
decl
jge
jl
mov
adc
xor
push
lods
mov
push
idivl
lea
ficoms
in
pop
outsl
jl
je
sbb
adc
inc
sarl
jbe
mov
push
dec
or
push
jae
ljmp
jge
popa
and
mov
cltd
cmp
push
and
jmp
jbe
inc
push
xor
xchg
mov
mov
lea
and
addl
pop
jns
mov
stos
push
mov
js
mov
lock
jbe
lods
sub
cltd
fadd
es
mov
or
ss
popa
cmp
loop
xor
into
insl
ret
inc
and
xchg
lods
popa
loopne
gs
aaa
jl
push
popa
ret
ss
pushf
scas
fildl
jbe
or
jae
adc
cwtl
fisubs
int
cld
jle
sahf
sub
call
xchg
mov
je
push
divl
pop
and
add
ljmp
fisubl
ja
xchg
sub
popa
jns
iret
pop
stos
and
pop
adc
popa
cmpsb
sbb
rcl
lahf
ret
mov
or
repz
test
or
sub
push
out
popa
mov
jo
jmp
mov
jae
mov
fadds
adcb
aad
hlt
xor
sbb
and
mov
loope
mov
popa
shlb
dec
fwait
dec
sbb
cld
jge
fld
in
xor
jmp
add
jnp
loopne
ljmp
lea
popf
mov
in
and
sbb
lea
and
hlt
rolb
fbstp
sbb
std
stos
jnp
fstps
mov
jle
adc
and
aaa
mov
rcrb
frstor
and
popa
inc
andb
push
adc
dec
popa
sti
sub
xor
aad
je
cld
push
popa
iret
sbb
cmp
add
orb
lods
sbb
inc
stos
popa
dec
cmp
shlb
jbe
push
cmpsb
xchg
lahf
lcall
out
into
outsl
mov
fistps
or
and
mov
xchg
fcmovb
clc
push
insl
xchg
imul
dec
int
jbe
mov
fbstp
sub
xchg
popa
sbb
adc
jg
pop
popa
adc
cmp
popa
shrb
int3
jno
jg
fs
in
and
add
or
push
jno
or
sub
cmpsl
shll
dec
pushf
imul
cmp
es
xchg
jl
mov
ja
gs
popa
sbb
adc
xor
dec
push
cld
loop
push
aam
daa
or
xor
popf
pop
out
test
cmc
cli
test
or
or
or
fistps
inc
test
xchg
jmp
fdivrl
mov
mov
adc
cltd
out
jle
and
mov
cmp
popa
insl
movsb
lods
inc
lds
popa
fwait
enter
aam
cmp
xor
sub
aad
jo
sbb
push
add
dec
pusha
cmp
test
popa
pushf
rcl
jmp
pop
out
popa
lret
pop
push
xchg
addr16
popa
push
or
push
fsubrl
pop
jo
mov
shrl
xor
lock
push
into
popa
mov
and
in
arpl
push
mov
lds
push
mov
fistps
popa
sbb
testb
xlat
popa
jmp
icebp
rorl
jg
imul
popa
outsb
xchg
repnz
mov
sbb
dec
aad
push
cmpsl
mov
popa
xor
mov
test
mov
pusha
cltd
outsb
in
mov
popa
push
sbb
and
das
cld
push
mov
jo
mov
inc
mov
popa
loop
dec
jl
test
cmp
dec
lds
flds
fs
fists
std
add
and
data16
out
cmp
add
xor
jo
insb
jmp
loope
test
loopne
push
fistpll
inc
stos
hlt
push
mov
popa
lea
push
outsl
popa
add
sbb
test
pop
adcb
pop
leave
pop
pop
aad
and
jne
pop
sub
push
incb
cwtl
loopne
push
mov
xor
insl
adc
lods
repnz
hlt
orl
xchg
popa
jae
inc
fimull
sbb
mov
xchg
jg
fdivr
popa
je
out
mov
mov
test
mov
push
inc
lock
mov
mov
popa
mov
rclb
popa
pop
xor
inc
loop
pop
xor
jno
lea
jmp
dec
mov
sahf
push
add
push
inc
adc
idivb
mov
or
add
fiadds
sbb
stc
sub
movsl
iret
cmpsb
popa
jp
ljmp
cs
es
je
mov
adcl
popa
lahf
adc
sbb
mov
dec
or
movsl
popa
in
or
sbb
mov
lcall
add
repz
pusha
loope
push
push
loope
fists
push
xchg
test
xchg
cmpsl
std
popa
mov
sub
iret
dec
cmp
lea
xchg
mov
fisubs
adc
and
push
add
sub
xor
popa
jle
adcb
ja
test
pop
popa
fisubrs
lock
xor
popa
mov
sbb
mov
stos
mov
cli
ret
add
popa
xor
xchg
rorb
lahf
pop
addb
popa
lret
fcoms
cmp
mov
shrb
inc
scas
sbb
cs
das
xor
push
test
fisttpl
sbb
sub
add
outsb
ja
aaa
outsl
jle
lods
mov
xor
loope
jnp
icebp
bound
ss
mov
aad
push
mov
gs
bound
ja
popa
pop
adcb
fcompl
js
adc
shl
and
bound
pop
iret
shl
loope
divb
lods
dec
xchg
lret
jo
jge
jg
mov
popa
add
cmovg
adc
popa
bound
int3
inc
daa
pop
push
imul
and
pop
mov
sbb
push
push
cld
inc
xchg
das
cli
insl
out
mov
inc
aad
adc
fdivl
lods
and
lea
push
or
and
inc
out
push
jle
push
xchg
loope
sarl
fcoml
lcall
or
shll
fcmovnu
lret
rcrl
loope
jg
pushf
push
mov
loop
mov
xlat
sbb
fidivl
xor
popa
test
leave
cmp
mov
cmpsl
dec
cs
in
mov
popa
jmp
adc
ljmp
adc
test
sbb
cltd
xor
rorl
xor
out
or
adc
fs
test
jo
mov
cmp
fsubs
or
stc
scas
daa
lret
sub
fwait
xchg
imul
push
popa
inc
scas
lahf
xchg
mov
pop
fwait
push
inc
and
repnz
mov
je
dec
pop
pusha
neg
add
inc
leave
or
xor
dec
and
call
cltd
push
int
subl
repz
or
pop
testb
loope
outsl
scas
dec
xchg
popf
mov
js
inc
icebp
fildll
popf
and
mov
cmp
insl
pop
mov
and
push
mov
mov
jbe
xor
inc
jne
jo
mov
in
in
lods
mov
insb
xchg
mov
cltd
or
stos
jmp
jmp
xor
vandnpd
push
cmp
in
mov
sub
mov
imul
mov
imul
sbb
or
sub
fcmovnb
ficoms
inc
pop
call
imul
sbb
inc
sub
cmpsb
or
stc
in
je
loope
push
and
pop
shrl
inc
nop
add
jns
xor
sub
jnp
ret
dec
lods
xor
lock
xchg
mov
flds
fldt
mov
js
rcrl
and
push
cmpsb
les
cmc
fidivs
out
rcll
xchg
ds
mov
test
sbb
xor
in
pop
insb
iret
pop
inc
loopne
dec
insl
push
and
imul
aas
popa
mov
xor
ds
mov
jno
mov
test
insb
and
jne
filds
out
jecxz
cmp
aad
sbb
xchg
movsl
imul
lea
push
push
cmpsl
loope
flds
clc
jb
jmp
lds
movsb
call
adc
ja
je
lock
push
aad
mov
xor
fcoms
orb
insl
icebp
and
or
push
lods
cmp
insl
leavew
fs
cltd
push
adc
jp
sar
loop
xor
push
jg
in
xchg
inc
icebp
in
mov
jnp
xchg
sti
ret
pop
push
imulb
bound
and
dec
sahf
add
in
mov
pop
push
cmpsb
lea
add
mov
push
mov
movsl
dec
imul
rorb
jle
mov
push
outsb
mov
nop
dec
fnsave
adc
push
arpl
sarl
dec
dec
xchg
push
mov
shrl
repnz
ds
inc
mov
and
jno
jmp
adc
dec
je
xchg
bound
leave
jbe
sub
sbb
test
or
push
mov
dec
into
popa
xchg
pop
enter
mov
popa
or
mov
adc
jae
fcoms
mov
or
hlt
cmp
and
cmp
adc
mov
cmc
cmp
and
adc
in
lock
popa
pusha
stos
dec
push
pop
xchg
fs
mov
fwait
cltd
mov
popa
frndint
dec
clc
jmp
loope,pt
aad
pop
push
jo
xchg
pop
dec
and
cmp
loope
jle
popa
sti
lret
xchg
jb
and
adc
mov
lods
dec
mov
sub
outsl
xor
pop
mov
add
inc
mov
xor
das
fmull
dec
out
lahf
lock
lods
add
outsl
subb
sti
es
mov
jno
mov
sbb
nop
aaa
and
loop
data16
popa
imul
push
and
and
out
cmp
mov
mov
sub
mov
popa
push
pusha
into
pop
inc
fiaddl
xor
push
jg
mov
test
adc
sahf
mov
xor
jo
cmp
inc
dec
sub
jmp
or
sub
dec
or
add
ffree
push
add
into
cmp
popa
js
shrb
fnstsw
popa
and
mov
fwait
inc
pop
test
adc
rcr
fistl
in
cmp
adc
addr16
pop
popa
in
mov
aam
pop
jle
lcall
fldl
sbb
imul
movsb
out
popf
jmp
xchg
jnp
out
pop
mov
mov
inc
or
leave
cld
scas
enter
mov
popa
out
fcmovnu
call
lods
pop
icebp
push
xor
imul
pushf
int
mov
call
jle
shrl
xor
inc
inc
iret
mov
cmp
es
pop
and
lds
popa
ja
cmpsl
sti
bound
data16
mov
and
adc
sub
bound
cmp
psubd
mov
inc
adc
and
popa
cwtl
mov
cmp
js
lea
jmp
imul
popa
lcall
es
mov
xorb
add
sbbl
jg
loopne
popa
cltd
ret
fistps
inc
rcrl
xchg
sub
popa
dec
scas
imul
xor
das
movsl
mov
filds
lods
inc
popa
xchg
or
and
cltd
imul
icebp
pusha
int
bound
jne
nop
cmpl
cmp
and
dec
js
lea
push
lret
cltd
call
dec
jo
sub
lock
add
sub
js
add
cwtl
sbb
fcoms
cmp
and
popa
and
arpl
setge
popa
leave
outsl
sub
or
push
xchg
sbb
js
pop
in
push
loope
ret
sub
xor
inc
insl
cmpb
xor
call
popa
push
push
mov
ss
in
movsl
leave
repz
loope
rcrb
je
orl
dec
popf
into
dec
call
cmc
fucomp
repz
jecxz
xchg
fsubr
ja
test
stos
stc
int
mov
es
xlat
xlat
shl
popa
nop
cmp
addr16
jg
xchg
lcall
js
enter
mov
popa
xchg
xchg
jmp
in
adc
fsubrs
aaa
xchg
xchg
arpl
lcall
or
in
xchg
popa
loopne
add
pop
xor
aad
arpl
fnstcw
mov
add
dec
popa
jb
mov
shll
push
pop
popa
inc
push
ljmp
jmp
jo
lods
out
int3
popa
lds
add
shrb
popa
cmpsl
xchg
fidivrl
loopne
adc
xor
bound
inc
cmp
shll
add
add
fbstp
sbb
movsb
push
lahf
pop
or
subb
xlat
and
outsb
leave
mulb
mov
mov
adc
movsb
and
ds
stc
popa
mov
push
push
jp
data16
pop
sbb
sub
mov
ss
and
sbb
aam
and
adc
jmp
fstpt
stc
add
dec
js
icebp
mov
sbb
ja
add
popa
xchg
fistl
arpl
stc
popa
inc
outsb
movsl
and
push
push
jne
out
cmp
popa
and
mov
xor
popa
mov
pusha
jmp
popa
popl
fisubrl
arpl
std
jp,pt
lcall
jg
adc
xchg
hlt
and
sub
lds
jmp
or
cli
popa
mov
test
outsb
inc
std
sub
popa
xor
adc
popa
mov
scas
pop
test
xor
push
in
mov
cwtl
mov
dec
nop
pop
js
push
shll
mov
arpl
mov
loop
mov
fidivrl
cmp
inc
jge
jae
popa
dec
ljmp
cltd
jmp
and
push
sub
cld
pop
aam
adc
cmpsb
fildl
mov
popa
int
pop
sti
lods
stos
das
adc
out
call
cmp
pop
pop
jp
inc
jmp
test
mov
pop
dec
pushf
popa
sti
sbb
outsb
popf
or
dec
test
add
stos
lret
rcll
std
in
popa
cltd
add
test
push
mov
or
lea
sub
mov
pop
xchg
push
jnp
fists
clc
inc
add
cld
dec
fiaddl
loope
insl
cmp
test
jns
xchg
push
sbb
popa
mov
lcall
pop
mov
jmp
pop
shll
cs
popa
sbb
adc
in
aaa
data16
popa
insb
mov
or
xor
adc
push
cmp
out
push
rcl
adc
fucom
popa
xor
push
cmp
shl
popf
test
popa
fwait
aam
fisttpl
add
ds
popa
and
lds
inc
lahf
popa
inc
dec
dec
inc
sar
arpl
xor
mov
movsb
shl
mov
repz
pop
addb
xchg
pop
daa
or
xor
loope
adc
lods
popaw
mov
fmuls
and
sbb
mov
aam
pop
insb
popa
in
push
les
inc
popa
mov
jae
nop
popa
adc
mov
test
aam
cmp
popa
in
jb
mov
sbb
dec
pop
leave
bound
scas
cwtl
add
cld
shlb
movsb
xchg
sub
mov
bound
inc
fnsave
clc
xchg
xchg
int
popa
xor
cmp
pop
stos
andl
loope
pop
dec
imul
jae
mov
inc
popa
out
lret
stos
or
push
insl
lret
test
pop
outsl
cwtl
test
mov
pushf
das
xor
jmp
test
jae
test
xchg
cmp
push
repnz
loope
pushf
cs
mov
push
mov
test
ja
jge
inc
pusha
push
popa
xor
cmc
cmp
int3
ljmp
sbb
aaa
popa
add
jnp
sub
rcl
add
cmp
lds
and
jne
repz
jmp
add
popa
push
jb
filds
popa
imul
cwtl
sti
mov
repnz
mov
xor
popa
pop
sub
sub
ss
xor
mov
repnz
cwtl
jae
xchg
fs
orb
and
mov
dec
xor
in
lcall
mov
sub
jge
push
add
push
insb
push
cmp
mov
cltd
and
add
lcall
jo
pop
sub
sub
popa
xor
fldl2t
cmp
bound
add
push
adc
inc
gs
jl
test
popl
and
jp
push
jae
out
adc
cmpsl
mov
mov
bound
leave
mov
sub
sbb
push
jb
jnp
js
sub
jo
aaa
in
and
inc
movsl
jae
mov
ret
cwtl
popa
xor
rolb
popa
les
xchg
xchg
call
xchg
popa
std
scas
pusha
push
mov
adc
pop
and
scas
dec
mov
insl
sub
push
push
repz
cmp
bound
xchg
and
sub
cmp
loope
stos
cmp
arpl
scas
ds
pop
cmp
fs
fidivrs
sub
imul
and
mov
popa
lret
or
xor
xchg
jp
popa
jno
test
lods
jo
xor
jmp
or
fnsave
test
add
rcrb
cwtl
dec
add
ja
xchg
mull
mov
mov
adc
bound
lret
outsb
lret
sbb
mov
mov
xchg
mov
mov
mov
sarl
dec
xchg
out
icebp
pop
aas
sti
push
ljmp
dec
test
fstpl
inc
rcl
inc
lret
xchg
lods
insl
fidivl
xchg
shll
das
mov
sub
and
std
dec
mov
jecxz
out
and
sub
in
lock
shrl
cmp
xor
push
outsb
lret
mov
xor
push
pop
rorb
stos
xchg
sbbl
mov
inc
and
das
arpl
lds
inc
and
dec
cs
xor
adc
inc
pop
sbb
dec
or
push
jmp
loop
mov
mov
shll
pushf
sub
mov
mov
popa
adc
mov
into
xchg
cmpsb
ds
bound
insb
mov
pop
cwtl
mov
arpl
push
data16
sub
and
fdivrs
jle
gs
lods
outsb
xlat
pushf
shlb
and
add
stos
arpl
addb
shrl
push
fsubrs
test
add
incb
and
fidivl
push
lods
ds
popa
fdivrs
shlb
inc
rorb
mov
in
and
mov
xchg
dec
daa
mov
push
mov
add
inc
push
js
push
add
mov
daa
fcmovnu
mov
addr16
rorb
ljmp
popa
loop
push
shll
push
inc
xchg
jo
enter
and
add
fisubs
fstl
popa
stos
std
jae
out
pop
push
push
arpl
sub
hlt
xchg
dec
mov
movsb
mov
push
aad
rcrl
sub
lret
cmpsl
cmp
outsb
lock
cmpsb
loop
push
icebp
mov
lock
inc
mov
jg
sub
clc
mov
jae
in
or
dec
nop
scas
or
cmp
pop
testb
std
call
or
pop
dec
insb
leave
sbb
mov
mov
pop
loopne
repz
fildll
xchg
mov
adc
fs
or
bound
inc
ljmp
dec
in
xor
scas
jb
push
dec
ss
dec
mov
pop
cmpsb
jge
fsts
mov
out
push
scas
and
fistps
adc
cmp
out
cmp
movsl
orl
insw
dec
inc
ss
addr16
inc
shll
in
push
mov
add
and
mov
fld
out
dec
je
pop
mov
ret
int
mov
xchg
insl
arpl
fs
jnp
popf
lods
pop
push
data16
inc
dec
mov
arpl
nop
subl
jecxz
in
push
fldl
jno
mov
cmc
lahf
or
out
decl
sub
pop
mov
jns
les
loop
leave
rcr
sbb
fisubrs
cmp
out
popa
jecxz
pop
xor
repz
pop
push
push
gs
pop
loope
ds
subb
out
sub
adc
inc
xor
mov
sbb
cli
bound
adc
fistps
call
mov
push
je
decb
cltd
js
loope
push
dec
cwtl
lret
ds
popa
sarl
dec
iret
ret
popf
je
loope
rorl
sub
popa
inc
add
inc
popa
push
iret
dec
andl
dec
sub
mov
mov
jge
add
and
push
mov
popa
mov
lcall
mov
in
add
adc
test
sbb
sub
add
enter
push
pop
popa
inc
adc
cli
shrl
adc
add
xorl
and
mov
vmread
mov
cmp
mov
out
cld
flds
arpl
mov
and
or
xor
push
fsub
test
push
cmp
pop
loope
bound
or
das
add
shlb
popa
pop
sbb
test
cmp
lret
aam
icebp
outsl
subb
dec
popa
negl
adc
popa
mov
cld
ja
xor
xor
imul
adc
in
jp
js
adc
mov
popa
mov
mov
stos
jle
cs
mov
cmp
xor
and
jne
in
push
shll
ja
arpl
jge
mov
ror
in
cmp
stos
addr16
pop
dec
ljmp
pop
xchg
add
push
sub
shlb
ja
pop
outsl
add
jns
mov
push
popa
stos
in
sub
xor
inc
popa
ja
and
ret
insb
xchg
enter
dec
sub
cmp
pop
mov
cld
mov
test
xor
aad
adc
leave
popa
cmp
pusha
test
sbb
pop
jno
push
incl
arpl
dec
jl
out
roll
cli
jle
mov
mov
shll
and
test
push
in
jp
jae
xor
pop
mov
adc
cmp
scas
popa
and
or
test
leave
mov
xchg
xlat
sahf
popa
out
imul
inc
xchg
aas
ret
xchg
add
js
xor
mov
push
popa
cmp
jl
rcrl
imul
xor
hlt
mov
stos
jmp
jp
lock
cltd
fldcw
in
pushf
out
adc
rcr
xor
outsb
popa
pop
jge
dec
rcll
sbb
xchg
popa
push
push
lret
jge
sub
adc
loope
into
sub
add
and
cmp
jbe
cmpsl
jge
data16
cmp
mov
int
inc
lret
push
aad
mov
jecxz
popa
shl
fnstcw
or
cmpl
in
jmp
mov
imul
rclb
xorl
daa
xchg
cmp
popa
or
ret
les
cmp
popa
xchg
pusha
sahf
dec
sbb
dec
popa
shr
sub
mov
dec
lods
bound
push
repnz
push
popa
pop
adc
dec
cmp
dec
lods
xchg
lds
popa
pop
pusha
mov
push
popa
cld
cs
sub
push
aaa
jb
inc
xchg
popa
push
jo
in
sbb
xlat
lods
push
dec
and
sahf
int3
push
lea
cmpsb
mov
and
popa
mov
inc
popa
test
add
mov
jbe
and
fcomps
rcll
add
imul
ret
and
mov
jno
movsb
sbb
popa
or
jne
lds
rcll
push
repnz
popa
mov
and
popa
adc
and
or
pop
sub
lret
push
stos
sbb
mov
ret
test
scas
mov
sbb
popa
test
es
popa
daa
jp
or
dec
fwait
inc
jge
cwtl
adc
cmp
add
addb
int3
mov
sub
xor
outsl
pusha
shrb
mov
add
int3
popa
mov
aaa
rcrl
pop
stos
jb
xor
mull
ret
sub
xchg
jg
iret
add
je
scas
shrl
pop
loope
jecxz
sbb
outsl
pusha
ds
add
jb
mov
add
or
subb
mulb
hlt
jge
in
sub
jo
mov
xchg
dec
je
popa
xchg
xchg
leave
cmp
jg
mov
and
jo
hlt
dec
ds
popa
repz
mov
jno
mov
popa
pop
or
sbb
and
dec
xor
xor
adc
or
jnp
gs
sti
jge
fmull
int3
mov
jne
xor
mov
nop
imul
scas
or
mov
dec
out
add
adc
imul
cmp
bound
inc
aam
popa
inc
in
loope
addb
xor
lds
inc
adc
subb
pop
popa
cmp
push
sbb
sbb
test
mov
mov
cs
mov
popa
enter
xor
jo
orb
ret
mov
popa
push
adc
pop
popa
outsb
divl
xchg
jo
dec
in
les
mov
popa
add
and
popf
in
lock
int
and
jae
sub
popa
ret
loopne
add
fiaddl
popa
push
inc
jmp
mov
dec
sub
stos
test
fisubrs
subb
bound
aas
iret
fbld
mov
fs
cli
adc
enter
mov
push
aas
int
push
and
andl
popf
pop
pushf
pop
push
mov
dec
push
out
gs
popa
ljmp
xchg
popa
scas
enter
cs
popa
ficomps
insb
out
xchg
jmp
stos
decb
icebp
popa
add
pop
dec
xor
sub
insl
lods
int
mov
test
inc
gs
sub
xchg
sti
lock
nop
mov
add
into
and
push
xchg
rcr
dec
enter
popa
out
mov
popa
nop
rolb
test
cmp
fs
inc
push
add
push
sub
push
cli
shll
fs
cld
push
and
fldenv
or
lods
dec
popa
dec
dec
lcall
cwtl
imul
mov
mov
in
int
dec
or
dec
mov
loope,pn
add
es
cmp
popa
cmp
jecxz
popa
mov
shll
cmp
in
pop
popa
jnp
ss
sbb
popa
aad
add
xlat
mov
jnp
jp
sti
mov
popa
outsl
xchg
cmc
and
loop
dec
popa
sbb
mov
sarl
into
dec
and
mov
popa
or
test
lea
ljmp
push
and
popa
out
xchg
ret
popa
inc
cmc
pop
je
pop
adc
jae
popa
inc
cmp
lahf
popa
pop
sbb
xchg
adc
xlat
pop
fs
push
cmp
pop
aad
cmp
lcall
std
les
scas
js
jne
xchg
mov
xchg
sub
or
jg
fisttps
jne
ret
popf
mov
loope
bound
out
lcall
test
out
jecxz
sbb
push
popa
mov
popa
mov
push
sub
xor
enter
adc
mov
push
icebp
pop
sahf
jo
in
test
mov
xchg
push
jns
popf
adcb
test
pop
xor
adc
lahf
aad
pop
aaa
in
fsubs
jp
xchg
in
mov
andl
dec
bound
mov
testl
inc
repnz
push
stos
gs
mov
mov
popa
fs
push
xchg
inc
xchg
bound
xchg
adc
push
fistpl
popa
cmp
and
fcoms
sbb
sbb
sub
into
fs
and
sbb
popa
clc
cld
imul
inc
jmp
mov
movsb
roll
lds
inc
fisttpl
popa
pop
inc
adc
mov
cmp
sub
insl
push
out
popa
push
addl
mov
divb
lret
xchg
popa
dec
ja
pop
xor
mov
cmp
ljmp
mov
adc
adc
push
std
mov
inc
insb
out
and
loope
jle
ljmp
sbb
sbb
pop
rol
imul
nop
mov
fsubs
xchg
popa
xchg
les
cli
lock
mov
cs
lahf
pop
in
cwtl
data16
popa
sarl
mov
lods
jge
popa
jne
fwait
mov
ror
es
gs
idiv
sbb
mov
rcrb
mov
stc
dec
jo
loope
mov
adc
fwait
adc
loope
xor
sbb
push
lahf
popa
jmp
shr
mov
mov
fisttpll
popa
xorb
adc
mov
sbb
push
xchg
mov
popf
cmp
add
out
popa
lds
pop
je
leave
loope
and
incb
xchg
les
jno
and
cmp
aad
scas
lea
ss
outsl
push
xor
enter
dec
cmp
push
jp
je
shll
stc
cmp
xorb
and
fbstp
jne
popa
pop
mov
jb
mov
mov
mov
int3
addl
lds
popa
inc
jo
sub
cmp
stos
ficomps
popa
xchg
pop
inc
jecxz
popa
inc
push
addr16
lea
popa
jmp
pusha
push
inc
jo
jne
xchg
ret
xchg
xor
call
arpl
jmp
jl
andb
xchg
aam
sub
aaa
popa
out
fst
fsubp
lock
sar
jge
xchg
sbb
mov
dec
sub
popa
ds
outsb
les
push
add
push
lret
out
add
push
loope
fbld
jb
imull
jo
xchg
dec
js
shrb
push
jae
xchg
popa
and
mov
jg
rcl
fidivrl
popa
in
out
je
addr16
cltd
jns
sti
fs
cmp
insb
and
fwait
xchg
ret
pop
repnz
iret
lret
scas
call
inc
cmp
std
repnz
jge
enter
jo
cmp
pop
inc
mov
pop
mov
rcll
cmpsb
sbb
inc
out
ja
cltd
ret
lahf
pop
fwait
jle
sub
stos
sarb
lds
sub
xorb
lock
jecxz
and
sar
cmp
push
and
dec
sbb
popa
incb
and
adc
popa
enter
sbb
push
sub
sbb
mov
stc
popa
or
xchg
sbb
out
and
mov
push
mov
or
mov
push
jle
xchg
aam
pop
mov
cmp
pop
cmp
sahf
and
push
js
aam
orl
and
jbe
sbb
pop
jg
pop
test
inc
bound
add
cltd
test
test
push
aam
xor
push
adc
stos
popa
fisttpll
stc
jbe
jb
fadd
jo
mov
jle
in
mov
sti
repnz
add
loope
dec
enter
popa
and
and
lea
cmp
pushl
outsl
sub
loopne
jge
cwtl
or
iret
and
and
es
popa
in
or
call
push
clts
inc
push
jno
pop
popa
pop
adc
pop
jecxz
jmp
leave
jmp
cltd
popa
ljmp
add
or
icebp
popa
push
xchg
cmp
push
mov
popa
dec
repnz
icebp
adc
cmp
jge
push
and
jo
sub
repz
popa
sbb
xchg
pop
shll
jo
sbb
inc
and
jl
pop
aas
in
loope
scas
cltd
jno
loope
sar
fisttpll
bound
aam
mov
shlb
xlat
aas
dec
mov
push
in
lcall
cmp
mov
push
lds
add
fisttps
xor
xor
popa
xchg
loope
xchg
leave
insb
test
jbe
add
in
arpl
in
popa
test
jecxz
icebp
cmpsl
mov
popa
xor
dec
mov
pop
hlt
push
push
scas
loope
mov
shr
adc
push
lret
leave
sbb
movsl
popa
add
or
mov
scas
pop
and
sbbl
add
push
stos
inc
pop
cmp
push
jmp
add
mov
mov
bound
fdivl
das
push
xor
lock
adc
std
sub
adc
bound
jle
dec
pop
andl
icebp
popa
negb
mov
jae
les
shll
inc
lods
popa
push
add
sub
loope
popa
imul
jecxz
adc
mov
divb
popa
and
ud0
in
dec
data16
jl
jae
out
fisubl
xor
js
clc
out
xor
aam
cmp
jae
jge
mov
mov
inc
adc
jo
in
sbb
push
jp
jge
aam
sbb
insb
aas
fsubs
aaa
adc
popa
add
push
mov
popa
xor
mov
dec
mov
je
andl
push
shrl
sbb
push
inc
or
popf
pop
mov
pusha
jl,pn
call
mov
pop
aam
popa
xchg
sbb
rol
mov
mov
push
icebp
sahf
popa
cmp
imul
dec
adc
popa
in
and
add
scas
movsb
out
mov
mov
into
test
xchg
cmp
clc
push
xchg
mov
xlat
cwtl
fldenv
fdivrs
and
xor
data16
and
and
test
mov
scas
cmp
or
dec
add
dec
pop
jbe
mov
and
jo
fs
mov
xor
dec
jp
in
dec
ret
mov
and
shrb
inc
push
shrl
add
dec
js
popa
cli
outsb
or
stc
dec
test
cmpsl
test
lock
loope
inc
xor
rolb
imul
or
insl
add
inc
out
ss
mov
sub
ljmp
inc
sbb
pop
mov
loope
ret
sbb
pop
jle
sahf
push
jecxz
or
pop
and
fldenv
ja
xlat
adc
push
les
in
sbb
js
push
fwait
mov
insl
jbe
cmp
bound
mov
popa
push
sti
imul
lods
fisubl
popa
sarb
jecxz
out
mov
fdivrl
sbb
dec
popa
out
ds
ljmp
push
pop
xor
push
xchg
fbld
lea
mov
icebp
aaa
popa
xor
sbb
add
xor
adc
or
daa
xor
cmp
repnz
mov
or
fcoms
dec
pop
xchg
icebp
popa
and
pop
mov
xor
and
bound
push
xchg
pop
adc
or
xor
cltd
sbb
in
ret
push
pop
and
cmc
mov
cmpb
mov
in
dec
jg
mov
popa
std
je
sbb
jo
test
or
pop
popa
aad
imul
popa
mov
and
jb
xor
popa
xor
mov
mov
ja
sub
jno
pop
fs
out
jne
and
add
and
jo
inc
leave
call
ljmp
call
lods
pop
or
dec
cmc
sbb
fwait
adc
loope
push
pop
xchg
dec
jmp
fs
movsb
xchg
sarb
dec
dec
stos
popa
lcall
arpl
inc
mov
pushf
popa
and
mov
inc
mov
push
addl
xor
dec
cmpl
pmaxsw
jmp
loope
js
jle
bound
add
out
es
hlt
popa
sbb
cmpsl
lock
jge
popa
pop
pop
xlat
inc
in
mov
adc
cmpsl
dec
popa
mov
mov
insl
jno
aad
dec
adc
arpl
inc
cmp
shll
push
mov
dec
popa
fidivs
xchg
xlat
rcr
sti
dec
pushf
and
in
mov
fucomp
ja
sub
popa
nop
mov
pop
add
pop
jb
xlat
sbb
add
aas
popa
and
or
add
fiaddl
and
leave
rolb
mov
nop
out
pop
jnp
mov
cmpsb
mov
test
mov
sbb
push
dec
xor
shr
int
insl
dec
pushf
rcll
sahf
inc
in
cmp
mov
rorl
and
ljmp
out
mov
mov
call
mov
insb
arpl
daa
fistl
imulb
push
push
mov
push
sub
popa
dec
cmp
loopne
std
loope
jecxz
pop
jo
inc
je
mov
and
push
cmpsb
cltd
dec
mov
add
out
mov
pop
mulb
and
je
mov
dec
cmp
dec
daa
outsl
jns
jge
pop
lods
xor
subb
sbbl
jae
pop
adc
ja
insb
add
push
lods
push
cld
popf
loop
xchg
mov
pop
cli
mov
sbb
mov
xor
loope
fiadds
mov
pop
andb
pop
pop
sbb
ds
popa
adc
sub
lcall
lods
adc
dec
daa
popa
sbb
jnp
push
popa
cmp
jmp
stos
mov
and
and
xor
pop
push
loope
call
mov
lea
push
in
add
sub
repz
jle
repnz
mov
mov
push
push
lret
insl
push
int
popa
xor
aam
cli
bound
or
mov
fs
or
pop
addr16
mov
pushf
aad
std
in
loope
or
mov
xchg
mov
aam
popl
dec
loop
sbb
aas
jb
mov
aam
popa
inc
imul
popa
testb
mov
xor
sbb
and
fwait
push
repz
mov
xchg
stos
stc
pop
push
rclb
mov
pop
add
mov
push
mulb
shll
lock
sub
jne
popa
fstps
psubd
push
pop
and
xor
fs
jmp
lahf
mov
inc
iret
popa
mov
subl
mov
fwait
into
cmpsl
and
bound
pop
adc
popa
fwait
xchg
in
in
or
icebp
lret
int3
xchg
mov
or
rcr
xlat
mov
adc
lock
xchg
mov
imul
loope
add
ss
popa
xchg
pushf
shrl
mov
popa
out
movsl
or
movsb
int
or
mov
test
adc
pusha
popa
or
das
andl
jg
pushf
popa
dec
xor
xor
push
test
mov
scas
xorl
roll
mov
js
outsl
stos
popa
sub
popa
xchg
out
mov
push
je
jp
outsb
mov
sbb
sbb
pushf
popf
pop
repz
or
popa
mov
mov
inc
lea
ja
pop
loope
ret
popa
les
mull
fmull
fwait
push
jle
mov
lods
popa
icebp
adc
sbb
sbb
and
imul
xlat
call
mov
fldcw
mov
cwtl
dec
jo
or
scas
es
pop
loope
xor
arpl
shrl
adc
aaa
int3
adc
out
push
mov
adc
popa
adc
fwait
iret
movsb
rol
inc
jb
xchg
jo
outsb
dec
bound
xchg
insl
mov
in
and
push
sbb
dec
sbb
fstpl
mov
xchg
cld
mov
xlat
sub
dec
mov
popa
mov
test
dec
aad
mov
addr16
cmp
dec
and
sub
cltd
mov
cmp
icebp
pop
adc
popa
push
jb
and
imull
jne
and
mov
xchg
movsl
dec
fdivs
sub
cld
push
sahf
mov
mov
cmpsl
bound
add
add
popf
andb
les
int3
xlat
and
popa
loope
mov
add
mov
aas
or
dec
popa
into
movsb
cs
xor
aad
jns
push
bound
inc
xor
loop
pop
mov
dec
xor
pop
cltd
cmp
push
popa
test
cwtl
push
flds
in
xchg
popa
subl
mov
pusha
loopne
scas
mov
cltd
sub
test
xchg
popa
outsl
mov
mov
popa
push
sub
popa
sbb
mov
sub
lcall
adc
and
int3
clc
inc
dec
jb
xchg
jl
lahf
jge
push
outsb
popa
movb
les
andb
fmuls
insl
scas
int3
mov
aaa
push
mov
loop
dec
and
add
rclb
push
popa
sti
adc
decb
test
aas
xor
pop
std
inc
cmp
clc
insb
pop
stc
imul
mov
mov
jb
mov
mov
shll
pop
dec
or
inc
popf
mov
fwait
inc
fdivs
in
and
or
jmp
out
inc
adc
enter
ss
dec
lahf
addr16
ja
xchg
push
out
pop
loope
cmc
mov
mov
xchg
adc
push
jbe
clc
inc
out
data16
clc
xchg
cmpsl
pushf
dec
xchg
push
fnstsw
mov
inc
pop
jno
ror
cwtl
jnp,pn
mov
and
aaa
mov
cmc
and
cld
sub
push
insb
loope
sarl
test
fisubs
into
jne
push
add
pop
sarl
mov
sbb
inc
enter
sbb
bound
cwtl
xor
push
xlat
arpl
lahf
repnz
and
sub
clc
push
jg
jns
dec
bound
jg
scas
scas
xor
faddl
hlt
subb
pop
lret
and
mov
mov
fwait
notl
mov
mov
lret
jecxz
jae
push
dec
stos
popa
push
xchg
dec
xchg
popa
scas
add
dec
jmp
push
mov
sub
jns
mov
add
push
jge
mov
mov
popa
gs
push
jg
out
pushl
stc
push
mov
pushf
xor
out
dec
mov
pop
xchg
aad
sub
aas
adc
jbe
xchg
int3
imul
clc
repnz
mov
add
in
sub
lcall
mov
cld
bound
sbb
das
and
mov
nop
cmp
fldenv
popa
jnp
jge
in
popa
add
loopne
daa
xchg
sub
push
jno
out
ss
pop
pop
and
mov
popa
sarl
mov
adc
cmpsl
into
stos
ss
jae
dec
fld
cmp
sahf
dec
mov
xchg
scas
rol
cmp
punpcklwd
xlat
icebp
sbb
sbb
xchg
lahf
mov
mov
andb
lock
xor
popa
xchg
into
sub
cmp
popf
jbe
sbb
push
popa
or
pop
mov
popa
sbbb
mov
leave
jmp
pop
and
pop
or
add
popa
adc
stos
fstpl
push
aad
mov
pop
les
in
lea
popa
sub
mov
arpl
jne
es
mov
into
test
dec
xchg
jmp
bound
ret
scas
sbb
out
popa
ret
ficomps
inc
adc
jge
and
popa
shl
pop
dec
vminss
jge
das
fcmovnb
fs
les
xchg
repz
repnz
cmpsw
push
test
bound
xor
fsubrl
cmp
pop
jge
lret
mov
fistpll
sub
test
push
pop
cmp
push
outsl
mov
cmp
sarb
lods
fimuls
push
fwait
cmp
popa
lds
push
mov
jno
dec
sub
cmp
popa
cmp
ds
popa
xchg
lock
std
inc
popa
in
sbb
inc
xchg
xchg
add
xchg
push
popa
mov
and
pusha
int
dec
popa
daa
cld
sub
pushf
mov
jg
sbb
and
mov
nop
push
std
fmul
pushf
je
test
dec
inc
popa
mov
sbb
popa
xchg
mov
dec
sbb
stc
inc
push
sub
bound
imul
fnsave
mov
js
mov
ret
ds
roll
popa
push
jecxz
movsl
mov
andb
mov
sbb
mov
sub
adc
js
inc
hlt
or
out
pop
popa
and
fs
sahf
hlt
jmp
mov
add
imul
shlb
pop
jg
popa
nop
mov
movsb
xor
loope
cmpsl
out
mov
arpl
popa
mov
xor
add
jg
imul
leave
xor
mov
cmpsb
iret
ret
mov
adc
pop
movl
popa
and
insb
inc
test
jle
pusha
xor
fs
daa
stos
adc
ljmp
cwtl
js
add
xor
rclb
pop
lods
cmp
sbb
ret
inc
aam
mov
cmp
push
mov
xchg
lds
loopne
mov
sbb
jmp
sub
xchg
mov
jo
call
sahf
mov
popa
mov
push
insb
gs
jnp
imul
lock
dec
popa
mov
mov
pushf
arpl
loope
inc
pop
xchg
and
push
fcomip
fsubp
popa
and
or
and
int
popa
cmp
popa
sub
adc
popa
push
inc
mov
fnstenv
mov
pushf
or
repnz
mov
inc
xchg
push
inc
gs
push
sbb
sub
jns
hlt
jns
popa
dec
jnp
leave
mov
jne
adc
or
popa
or
xchg
pop
push
add
popa
movsb
sub
dec
cs
push
popa
shll
repnz
push
jne
or
ljmp
bound
fcom
and
jnp
shll
jne
popa
sahf
push
iret
movsb
adc
js
dec
push
jecxz
sbb
clc
mov
mov
xor
lret
push
jmp
mov
cmpsb
cltd
inc
in
push
popa
pop
mov
and
int3
pop
rolb
shlb
add
mov
popa
sub
xchg
rolb
ret
push
xlat
push
and
pop
sbb
sub
mov
mov
pusha
xor
iret
inc
push
sbb
pop
mov
xorl
push
xchg
scas
movsb
xor
divl
sbb
jg
jns
loope
lahf
lret
orl
push
or
add
mov
cmpsb
mov
popa
fmulp
popa
rclb
dec
mov
mov
and
xor
cmp
or
das
mov
xchg
les
popa
gs
rcl
mov
popa
cmpsb
pop
jb
aas
and
js
cltd
jno
dec
lahf
xlat
mov
jnp
fwait
out
je
dec
es
fnsave
and
jecxz
push
fdiv
icebp
and
call
adc
adc
in
mov
pushf
jbe
sub
leave
jb
xchg
je
loopne
sbb
mov
inc
add
mov
mov
pushf
clc
js
cmp
xor
cmp
push
adc
mov
mov
test
and
or
iret
lock
push
inc
push
or
fwait
aaa
push
popa
cmc
pop
jl
mov
addl
clc
mov
test
pop
popa
dec
or
popa
and
int
arpl
mov
jp
inc
cmp
cmp
cwtl
popa
mov
test
push
aas
addr16
bound
test
cmp
lcall
xor
xorl
adc
push
or
xor
leave
popa
sub
fcmovnb
push
popa
jb
cmpsl
sub
ds
lea
lock
mov
fbld
popa
jbe
pop
sub
imul
jmp
popa
sbb
adc
out
adc
test
mov
lcall
int
inc
mov
leave
popa
jo
lret
and
popa
jge
and
xchg
popf
jno
repnz
test
mov
popa
inc
fwait
mov
pop
sahf
mov
push
orl
jmp
ja
lods
sbb
mov
popa
adc
shrb
cmpsb
dec
scas
popa
adc
test
cmp
orb
iret
add
mov
push
lret
pop
repnz
sub
popa
test
mov
enter
fsub
cmp
mov
cli
mov
gs
or
test
enter
pop
movsb
mov
fldl
sbb
sbb
mov
jecxz
cmpb
push
ficoms
sbb
pop
xor
arpl
mov
push
jbe
lods
or
jo
jns
popa
dec
mov
aas
lret
add
call
or
sub
shl
enter
movsb
pop
out
repnz
and
or
inc
fidivs
mov
andb
jns
mov
gs
and
mov
dec
insl
dec
mull
inc
adc
hlt
popa
lock
outsl
mov
outsl
xchg
pop
adc
mov
xchg
push
fcmovbe
mov
lahf
dec
aad
push
icebp
test
rcl
mov
insb
jnp
sub
popa
in
cli
out
mov
addr16
pushf
outsb
popa
lret
into
movsl
cmp
mov
call
inc
mov
popl
add
repnz
popa
or
jge
mov
jnp
fadds
psubd
lret
and
in
or
out
loope
popa
insl
mov
enter
or
xor
popa
popf
stos
pop
data16
pop
cmp
push
add
push
stos
adc
mov
jle
movsb
cmp
inc
xchg
add
rclb
jmp
sub
or
arpl
lds
test
sub
gs
mov
xor
jae
push
pop
fisttps
sub
push
pop
popa
inc
jge
and
scas
std
dec
adcl
jge
push
addr16
dec
jno
xadd
xor
lahf
mov
sub
mov
bound
cmp
jns
xchg
dec
out
push
sahf
xchg
loopne
cmp
sub
jle
popa
inc
out
sbb
cmp
and
sti
mov
es
shr
addr16
inc
jmp
rorl
idivb
lahf
imul
mov
jge
pusha
sbb
cmpsl
sbb
arpl
push
sbb
push
xchg
dec
inc
loope
cmp
mov
push
sbb
popa
insl
leave
inc
jo
cmp
cltd
xor
cmp
fwait
ror
fldt
cli
sub
fwait
pop
pusha
lods
in
xor
dec
in
sbb
pop
out
gs
stos
dec
or
inc
sarl
jns
cltd
push
dec
dec
imul
mov
inc
mov
iret
mov
or
xchg
std
sub
fcmove
je
xchg
shl
xchg
push
loope
loop
add
stc
jo
out
mov
mov
fdiv
cmpsl
inc
imul
mov
push
fs
in
bound
mov
loop
xchg
dec
leave
fucom
xchg
sbb
jns
push
dec
add
xor
xchg
sub
lret
and
mov
adc
add
nop
adc
outsl
lock
loope
push
sbb
adcl
push
fwait
push
jmp
leave
cmpsl
inc
push
xchg
push
or
mov
and
jo
push
pop
mov
lcall
pop
ja
std
mov
movsb
rcrl
nop
scas
and
inc
ljmp
std
dec
and
dec
icebp
or
rorb
sbb
cmpsl
pop
out
dec
call
movsl
leave
arpl
lcall
push
mov
and
call
sbb
insb
out
add
jne
jg
je
subb
dec
pop
inc
sti
jp
loope
or
loope
push
mov
push
stos
mov
inc
aas
add
mov
and
mov
inc
js
pop
out
fdiv
leave
adc
int3
and
in
inc
popa
std
and
clc
js
jecxz
or
sarl
or
cltd
scas
stos
arpl
test
mov
dec
popa
cmp
pop
or
popa
lock
repz
out
ljmp
ja
je
cmp
popa
or
mov
lds
and
dec
imul
xchg
ljmp
jae
std
jae
mov
dec
ret
sub
repnz
js
sbb
sbb
inc
dec
not
movsl
add
adc
ljmp
stc
and
dec
mov
nop
movsb
pop
filds
dec
sub
and
jnp
clc
leave
push
das
and
sbb
fs
mov
test
push
or
outsb
dec
loop
mov
icebp
xchg
stos
roll
dec
pop
cli
adc
pop
and
pop
popa
call
repz
adc
fwait
pop
ficoml
add
pop
xchg
xchg
or
leave
loope
mov
popa
xorl
push
inc
iret
adc
popa
es
sub
loop
outsl
popa
addr16
fs
push
dec
jns
int3
push
imul
cmp
lock
push
ja
fs
xor
push
fidivl
iret
adc
pop
xchg
adc
pop
hlt
imul
push
push
xchg
mov
push
mulb
das
lds
popa
hlt
notl
dec
jp
clc
popa
cmp
lea
popf
setae
adc
pop
test
sahf
bound
aaa
xor
sub
push
xor
cltd
mov
cmp
xor
mov
lcall
pop
fs
icebp
scas
and
divb
or
fdivrs
outsl
popa
lock
ss
cwtl
aam
add
ret
lret
fildl
xor
daa
push
cwtl
adc
les
dec
jb
add
adc
inc
sahf
popa
mov
push
xchg
mov
aad
icebp
inc
stc
pop
xchg
loope
shrl
pop
popa
imul
bound
sbb
add
rcrb
fwait
add
clc
cltd
dec
pop
popf
loop
outsb
loopne
xor
insl
inc
push
popa
into
mov
repnz
mov
lea
popa
mov
pop
and
popa
inc
xchg
fcomip
adc
mov
les
pop
test
andb
stc
xchg
rcll
add
and
shlb
fs
jl
xchg
popa
loop
inc
idiv
lret
xor
popa
cwtl
sar
movsl
sbb
cmp
out
pop
in
pop
push
mov
popa
inc
sti
fsubrs
popa
das
out
cwtl
lds
pop
pusha
popa
xor
outsb
xlat
sarl
jno
popa
sub
lods
dec
mov
fcomps
dec
test
lcall
sahf
popa
cmp
aaa
add
popa
xor
cmpsb
scas
popa
push
adc
into
int3
bound
adc
push
xchg
popa
and
xor
or
jns
add
add
cmpsl
fimull
or
xor
shll
mov
mov
aad
inc
jl
maskmovq
notl
popa
mov
xchg
imul
lret
or
pushf
push
jbe
inc
xchg
rcrb
lcall
xchg
inc
je
stos
loope
ret
mov
aaa
leave
lret
loope
int
jae
pushf
sarl
clc
jg
xor
xchg
call
dec
stc
xlat
shlb
or
jp
add
mov
pop
jecxz
popa
lods
insb
push
xchg
std
shlb
adc
sbb
test
lea
xor
push
mov
js
popf
dec
add
test
dec
stc
pop
or
cmp
movsl
flds
insl
popa
stos
scas
xorl
bound
lcall
loop
adc
push
lahf
popa
or
inc
sub
jecxz
rolb
push
inc
inc
inc
leave
adc
pusha
dec
xlat
shll
call
xchg
sub
pop
int
aam
jae
je
icebp
sbb
aad
sub
jge
popa
pop
push
pop
clc
pop
sbb
push
mov
sar
add
clc
pop
pop
bound
les
and
movsl
xor
inc
push
popa
cmp
or
popf
xchg
dec
insl
fsubr
popa
push
stos
jb
sbb
or
push
jno
inc
inc
icebp
in
cmc
push
xor
push
int3
and
mov
adc
mov
out
or
jg
bound
movsl
cmp
adc
dec
jge
sbb
fsubrl
popa
jae
mov
jne
cmp
inc
add
hlt
sub
cli
inc
les
xchg
or
ss
adc
aad
cmp
add
push
cld
push
pop
push
cs
mov
es
mov
xchg
popa
and
insb
inc
push
xor
popa
push
and
lret
add
sub
scas
iret
stc
addr16
mov
popa
ret
and
jnp
adc
je
rorb
push
xor
mov
jno
or
stos
sbb
mov
add
subl
popa
das
ja
mov
popa
rcr
cwtl
fisttpll
push
pop
popa
cmp
inc
rorl
clc
movsl
popa
and
sub
adc
push
rolb
inc
mov
sarl
push
jb
lret
mov
in
popa
push
mov
lods
int3
repnz
lcall
dec
inc
rcr
push
mov
push
sub
push
int3
sbb
cmp
pop
popa
or
icebp
jle
imul
out
mov
push
in
arpl
cmc
mov
or
lods
popa
scas
inc
imulb
pushf
loope
frstor
or
jmp
push
int
xor
push
ficomps
insb
lcall
addr16
shll
lds
call
mov
adc
push
or
mov
es
dec
imul
cltd
sub
mov
pop
push
aad
dec
cmc
outsl
add
xchg
enter
popa
xor
xchg
adc
and
mov
leave
repnz
and
lods
pop
imul
sbb
adc
pop
add
inc
mov
fwait
call
jo
std
inc
iret
jle
repz
or
sarl
xor
aad
push
in
mov
inc
test
pushf
je
popa
jmp
dec
sbb
aas
inc
rolb
lahf
popa
push
dec
ret
pushf
imul
int3
out
xor
sbb
popa
xor
or
xchg
adc
push
fldt
shll
ljmp
sub
fsts
xchg
imul
mov
pop
xchg
lods
inc
dec
mov
popa
cltd
mov
sub
xlat
adc
sbb
add
mov
iret
dec
loope
mov
outsb
popa
icebp
repz
inc
aad
rolb
popa
fstpt
adc
call
popa
scas
pop
mov
bndldx
jne
mov
adc
cmpsl
imul
movsb
xchg
iret
or
les
gs
and
mov
inc
gs
mov
cmc
cmp
arpl
add
inc
jmp
popa
mov
insl
add
sbb
lahf
sub
xchg
fnstenv
xor
in
fbld
pop
cmp
fisubrs
fdivrs
clc
imul
mov
adc
add
int
loope
dec
in
mov
movsb
popa
sub
bound
or
imul
test
add
sub
scas
push
popa
jne
mov
loope
movsl
push
ja
ds
aaa
icebp
bound
push
cwtl
and
jmp
subb
scas
popa
add
out
add
andl
scas
dec
cmp
mov
mov
loope
test
fsubs
jle
repz
inc
jbe
popa
es
fnstcw
rorb
mov
sub
jno
jbe
es
aas
ds
mov
fwait
xchg
sbb
pop
mov
push
shlb
or
lods
lds
dec
test
popa
fwait
cltd
ret
jns
lcall
out
js
lret
popa
dec
and
jl
int3
jb
popa
push
fisubs
adc
jae
xor
repz
clc
fildl
add
sub
call
adc
mov
pop
and
xor
push
mov
punpcklwd
add
jge
jecxz
addr16
adc
dec
imul
sbb
mov
push
lea
xchg
popa
sub
xchg
insl
mov
outsl
push
inc
xchg
popa
data16
lret
sar
aam
jo
or
in
sahf
pop
ja
xchg
out
mov
adc
popa
mov
pop
enter
mov
and
cmpsl
adc
mov
bound
hlt
mov
xchg
addr16
push
push
sbb
jg
cmpl
xor
popa
mov
bound
movsb
or
je
mov
arpl
popf
cmp
cmpsl
sub
rclb
imul
fs
xchg
test
popa
insb
out
rcrl
dec
xor
lods
mov
mov
cmpsb
stos
ret
or
insb
push
fs
andb
xlat
test
sbb
ja
mov
icebp
cwtl
nop
dec
push
or
orl
dec
shlb
repz
dec
pop
aaa
dec
push
leave
andl
add
push
fcompl
pop
cmp
sbb
and
inc
mov
and
lods
or
bound
and
mov
or
xchg
cld
pop
and
out
btr
jae
pop
xlat
and
popa
test
sbb
mov
adc
dec
gs
or
mov
mov
mov
leave
mov
dec
stos
mov
dec
lods
jmp
adc
sbb
jmp
adc
pop
jo
dec
dec
sbb
cmp
pop
test
stos
cmp
mov
ds
xlat
dec
pop
shr
lret
in
repz
inc
fidivrl
iret
adc
xchg
xchg
daa
std
dec
cwtl
test
mov
nop
bound
movsl
and
xor
test
push
sbb
push
leave
mov
call
mov
in
lods
dec
push
bnd
daa
jle
cmpsb
xchg
mov
xchg
sub
dec
xchg
mov
mov
in
xchg
pop
loope
insl
out
ds
sbb
push
push
push
xchg
pop
shlb
in
push
adc
addr16
clc
inc
cmp
imul
sub
xchg
mov
cmp
out
arpl
mov
lret
fidivl
hlt
pop
daa
sub
add
adc
pop
or
pop
pop
sbb
adc
and
iret
pop
inc
loop
push
aam
cmp
mov
call
iret
insb
adc
dec
flds
lcall
mov
incl
or
and
lock
lahf
dec
and
mov
sub
cli
lods
fwait
pop
mov
lret
xor
mov
lock
sbb
jo
fisubl
pusha
inc
xchg
dec
fistl
in
mov
mov
popf
add
jo
popa
and
dec
or
jp
jmp
xchg
dec
mov
outsb
shlb
cmp
call
mov
gs
imul
test
cmp
fcoml
mov
popa
fwait
jmp
imul
pop
leave
aad
scas
dec
jge
es
push
pop
sub
push
aad
cmpsb
shl
push
jnp
bound
mov
js
scas
and
add
fwait
push
cmp
andl
icebp
ljmp
stos
data16
aad
pop
imul
sub
push
jae
popa
inc
cmp
dec
bound
dec
inc
outsb
lods
mov
popa
sahf
stos
aaa
jl
iret
icebp
xchg
popa
test
out
mov
sub
mov
push
mulb
loop
aaa
jne
mov
ret
bound
mov
sub
cmpsb
mov
popaw
sbb
leave
mov
jae
xchg
popa
jno
xor
xchg
jne
fsubrp
pop
fcmovnu
popa
fcoms
fs
inc
lock
stc
push
sbbb
lahf
call
push
les
insl
mov
pop
sub
nop
push
or
popa
sub
cmp
mov
cmpsl
jne
sub
jp
jo
mov
enter
popa
filds
xchg
add
mov
pop
and
es
lock
popf
iret
xlat
mov
rorl
fs
fbld
mov
outsl
popa
in
mov
mov
loopne
popa
adc
jo
repz
push
fs
lretw
jmp
ljmp
out
push
outsl
out
jb
scas
popa
mov
and
and
push
inc
cmp
and
pop
sub
fists
negl
add
insb
popa
ds
pop
mov
rcll
popa
cmp
std
adc
in
repnz
and
sub
adc
jbe
jle
sub
in
jecxz
xchg
popa
and
popf
mov
fs
xlat
sbb
bound
lea
jl
jg
loope
out
dec
in
dec
es
test
lcall
stc
adc
shll
popa
and
adc
mov
stos
fwait
popa
lret
test
mov
push
jle
not
inc
jg
scas
add
repz
add
inc
in
sbb
popa
das
push
jp
scas
je
or
fisttpl
xorl
loope
popa
mov
mov
push
pop
adc
stc
cmpsb
scas
popa
movsl
add
push
sub
inc
sahf
jge
outsb
dec
inc
lods
popa
pushf
lret
sti
test
lock
mov
out
gs
rol
sahf
push
and
and
outsb
cmp
jb
mov
xor
xor
dec
outsl
popf
jmp
in
in
sub
mov
outsb
xchg
subb
pop
adc
xchg
jge
das
pop
popa
scas
jl
push
mov
sub
mov
mov
adc
sub
int3
mov
cmp
imul
bound
repnz
jo
repz
hlt
rcr
jmp
nop
fisubrl
int3
jle
bound
push
and
adc
push
inc
and
fsubp
jno
popa
and
jg
stos
popa
pop
test
sbb
push
popa
movsb
jmp
inc
lahf
lock
popa
mov
xor
popa
xor
div
popa
mov
xacquire
data16
jne
rorl
or
sbb
xchg
test
cmpsb
int
sub
add
cmp
jmp
mov
cltd
mov
cmp
inc
popa
adcb
mov
mov
sti
adc
mov
int3
mov
mov
xchg
pop
scas
insb
cmpsl
adc
xchg
xchg
in
aad
cmp
cwtl
aas
pusha
scas
insl
cmp
popa
xorb
popa
sbbb
fwait
inc
int3
mov
add
pushw
in
pop
lahf
aad
and
int
pop
jnp
pop
xchg
shll
popa
xor
cli
aaa
pop
loop
shlb
jle
or
data16
mov
test
jge
aam
loope
adc
roll
push
dec
jb
call
test
push
ret
inc
stos
mov
popa
push
push
test
pop
leave
lcall
imul
jo
popa
cmpsl
sahf
jns
out
push
insb
popa
push
int
inc
outsl
orb
lcall
rolb
adc
outsb
loop
imul
cmp
cmpsb
decb
cmc
push
and
mov
pop
adc
loope
les
std
lock
push
inc
fsubl
lcall
xchg
loope
mov
xchg
inc
cmp
popa
push
inc
daa
lcall
xlat
pop
sbb
xor
loope
incb
dec
aas
popa
les
loope
jb
push
lock
stc
mov
out
sbb
sti
fnclex
mov
and
add
add
inc
sub
jmp
movl
sbb
aas
xor
dec
por
popa
and
push
loop
dec
pop
shll
repz
xor
insb
add
call
jno
xor
idivl
popa
push
adc
or
lahf
add
loopne
push
mov
popa
xor
pop
inc
mov
repnz
and
or
test
ret
sbb
js
jae
ret
add
es
popa
or
xchg
xchg
pushf
arpl
push
das
add
cmp
adc
push
cmpb
icebp
cmc
nop
aam
popa
in
int3
mov
mov
cltd
xchg
and
sbb
das
pop
fs
inc
sub
mov
lock
leave
mov
sub
jge
pop
bound
lahf
imulb
xchg
popa
cmc
pop
or
pushf
out
pop
bound
sbb
mov
sahf
in
popa
sub
xor
dec
pop
popa
xchg
cmp
and
popa
test
sub
lea
and
dec
or
cli
cmpsl
bound
test
xchg
jne
push
sahf
add
out
fcmove
cmp
mov
jge
pop
sti
outsl
lods
mov
out
jl
pop
pop
je
push
bound
inc
cmp
cmc
mov
imul
cvtpi2ps
pop
test
ss
mov
sub
imul
or
sahf
dec
push
popa
ror
adc
cmpsl
hlt
sbb
sub
out
push
arpl
in
cwtl
filds
popa
outsl
daa
lea
push
jmp
push
outsb
xchg
movsl
xchg
mov
fldt
jecxz
push
mov
push
nop
and
mov
scas
xchg
jb
push
dec
mov
popa
loope
xor
imul
mull
mov
negb
inc
adc
mov
push
xor
add
repnz
mov
xor
les
and
jno
in
sti
subb
and
xchg
push
dec
lea
mov
pusha
or
repz
stos
pop
push
cli
insb
jecxz
jno
popa
sahf
outsl
out
pop
clc
sbb
jae
stc
pop
popa
pop
adc
and
scas
xor
popa
insb
add
dec
mull
and
fildll
out
es
or
pop
mov
xlat
gs
mov
sbb
push
movsl
adc
cmpsb
dec
pop
cmpsl
pushf
jmp
loope
adc
cld
jo
popa
mov
fistps
popa
add
popf
ds
js
popa
sbb
lds
pop
daa
shlb
cld
jge
xchg
pop
addr16
in
inc
jae
pop
orl
dec
sub
aam
aad
orb
pop
mov
and
jp
add
imulb
pop
and
cmp
mov
popa
cwtl
mov
pop
dec
fs
dec
out
jmp
scas
or
and
mov
push
iret
adc
jns
adc
add
add
adc
sub
pop
aad
imul
and
dec
out
int3
je
or
outsl
or
cmp
aaa
mov
loope
leave
je
or
gs
insl
inc
mov
pop
dec
jne
fs
mov
nop
sbb
popf
jle
daa
dec
mov
mov
xchg
adc
jns
mov
pushf
jne
cmp
sub
jle
mov
in
mov
sbb
lahf
loope
jp
or
loop
push
out
ficoms
loope
jge
in
jns
mov
movsl
add
cmp
cli
xor
leave
inc
popa
int3
pop
push
jo
push
or
ss
clc
es
add
jnp
aas
mov
sub
dec
fnstsw
add
fldl
popa
pop
jge
jecxz
cmp
fs
mov
or
or
cmp
popa
pop
adc
jnp
js
xchg
mov
ss
into
or
xchg
sbb
std
popa
mov
jnp
lock
xchg
mov
add
xchg
out
inc
mov
andb
jmp
fsubp
mov
add
scas
inc
lods
mov
jo
push
pop
mov
popf
jecxz
and
andb
popa
loope
add
mov
lods
lds
popa
outsb
lret
jnp
imul
sahf
dec
and
out
out
sbb
or
lahf
incb
add
pop
jnp
dec
cmc
mov
xchg
adc
icebp
pop
jb
popa
xchg
scas
lret
xchg
nop
dec
popa
or
gs
dec
repnz
popa
fimuls
pusha
je
mov
mov
xor
sbb
xor
inc
push
jp
jb
mov
push
bswap
adc
adc
jns
loopne,pn
subl
mov
testb
jne
cmp
insb
inc
dec
and
enter
sbb
xchg
mov
xor
push
pushf
popa
imul
outsl
stos
cwtl
cmpsl
ret
add
dec
adc
xchg
push
inc
popa
or
cmc
loop
push
push
popa
stos
or
mov
repz
push
aad
inc
out
mov
jecxz
inc
in
inc
push
mov
cmp
repz
roll
in
pop
jp
ret
fmulp
xor
add
addr16
jbe
push
pop
mov
and
cmp
loopne
fmull
test
jg
push
mov
cmp
popa
xor
dec
in
xor
and
lret
cmp
fmuls
mov
cmp
outsb
sarl
xchg
ja
loope
testl
addr16
push
jbe
mov
andl
ret
push
mov
aad
pop
stos
jecxz
or
leave
hlt
sbb
ljmp
pop
cld
sbb
lret
aad
popa
cmc
loop
in
mov
xchg
imul
out
dec
ds
cmpsb
mov
roll
sar
int3
dec
jl
adc
jns
lcall
fsubs
fxtract
inc
and
dec
xchg
dec
ficomps
pop
mov
nop
mov
call
lock
fisubs
pop
push
lahf
dec
push
scas
adc
loope
clc
mov
jne
ret
dec
cmp
jno
lods
test
and
cmp
dec
add
push
adc
ljmp
mov
pop
orl
sbb
lea
cmp
fisubs
sbb
pop
mov
hlt
jne
fdivp
mov
nop
mov
jg
dec
xchg
cmp
dec
rcl
mov
leave
push
inc
adc
icebp
dec
mov
sbb
imul
pushf
jge
mov
icebp
out
pop
ret
jne
lods
pusha
std
stos
push
jle
pop
stos
pop
stc
mov
cmpb
outsb
or
std
dec
and
mov
or
mov
inc
xchg
push
mov
ds
xor
pop
cmpsb
aam
push
fsubrs
mov
mov
cmp
mov
xor
stos
pop
adc
mov
addr16
adc
test
test
mov
dec
lret
mov
cmp
dec
sbbl
cmp
push
jne
mov
sti
imul
fmull
mov
sub
or
cltd
jb
dec
shrl
xor
gs
fs
dec
insl
imul
inc
std
les
inc
ljmp
pop
stos
mov
pop
popa
loope
repz
adc
mov
xor
outsb
mov
popa
pop
js
in
sub
aaa
inc
mov
lret
mov
xchg
xor
inc
popa
cmp
mov
popa
stc
xchg
bound
fs
inc
mov
ja
and
cmp
xchg
lea
adcb
arpl
icebp
popa
in
jne
test
outsl
xor
bts
out
mov
sti
loopne
jbe
mov
mov
add
pop
dec
lods
cli
or
lcall
and
loop
inc
rcrl
pop
lods
ss
mov
xor
ss
movsb
mov
xor
sub
loope
push
test
dec
mov
pop
xchg
inc
in
sbb
out
push
mov
mov
push
sbb
cmc
adcl
push
inc
mov
inc
cmp
adc
xchg
xchg
dec
out
mov
adc
push
sub
std
rep
lods
push
mov
and
mov
test
outsb
lahf
pop
lahf
xchg
jmp
loope
sbb
add
je
sbb
dec
inc
data16
testl
and
push
and
cmp
cmc
push
leave
xor
cmp
xchg
cltd
lods
mov
cmp
pop
pop
fisubl
pop
and
xchg
inc
mov
add
cmpsb
mov
nop
ss
sub
orw
ss
daa
dec
cmpsb
dec
leave
cmc
inc
push
or
mov
mov
xor
jbe
cld
add
bound
aad
mov
push
jmp
push
jns
mov
adc
xchg
cmp
ror
outsb
in
cld
addr16
das
ret
push
insl
inc
dec
xchg
leave
fidivs
mov
push
jno
outsl
repz
ss
test
sbb
mov
mov
insl
fistps
mov
jp
mov
xchg
lds
add
hlt
sbb
js
nop
adc
mov
pop
and
push
stos
cmpsl
arpl
jmp
leave
call
stos
or
lcall
insl
repnz
pop
gs
jge
cmp
or
scas
shlb
adc
xchg
mov
dec
push
xchg
jb
out
enter
clc
aas
adc
outsb
dec
ljmp
sub
enter
sbb
pop
push
dec
icebp
cltd
jp
push
sahf
pop
pop
ljmp
pop
adc
insb
dec
sub
add
adc
dec
mov
push
inc
mov
and
jb
call
sbb
dec
pop
or
dec
and
loop
xor
cli
add
xor
cmp
loope
mov
dec
bound
dec
mov
inc
mov
pop
fidivrs
cltd
jmp
xchg
mov
test
and
sbb
popa
push
sub
stos
xor
and
xorb
scas
mov
in
mov
aas
sbb
popa
dec
cmp
xchg
jo
lock
add
popf
add
mov
ficompl
insl
xchg
movsb
cld
mov
shll
mov
pop
mov
dec
jne
push
addr16
sbb
sbb
jnp
outsb
xchg
icebp
sub
inc
fs
shlb
xchg
mov
lret
popa
add
dec
or
pop
arpl
inc
xchg
inc
pushf
pop
popa
ud0
mov
xchg
rclb
add
mov
cmc
adc
or
pop
mov
add
and
jbe
enter
and
dec
mov
or
popa
xor
mov
dec
in
stc
sub
test
add
fs
sbb
and
cmp
popa
pop
cwtl
inc
jg
pusha
mov
popa
inc
jge
and
adc
popa
fs
push
sti
mov
in
mov
jno
fst
pop
popa
mov
add
popa
imul
shrb
xchg
inc
leave
adc
iret
mov
insb
test
cli
loope
dec
xchg
xor
dec
add
popa
sub
add
jle
aam
popa
mov
arpl
sbb
popa
mov
dec
jbe
and
and
popa
inc
mov
repz
xchg
scas
fwait
in
insl
sub
sarb
ficoms
loope
movsl
pop
mov
rcll
cmpsb
jl
inc
xchg
lahf
dec
add
loopne
pop
pop
mov
das
mov
jg
ja
or
subl
mov
fstpl
jo
mov
jmp
and
fs
cmp
xor
mov
movsb
jl
xor
mov
popa
into
dec
dec
fistps
dec
idivb
loopne
popa
loopne
into
sbb
xchg
cltd
mov
pop
xchg
aaa
cmpsb
popa
mov
inc
std
shlb
rcll
mov
push
popa
add
sub
js
popa
aam
lret
sub
dec
popa
mov
mov
jb
cmp
arpl
xchg
mov
out
pushf
dec
add
popaw
push
bound
lret
popa
in
dec
jnp
jo
xor
aam
cmp
popa
xchg
inc
leave
cwtl
mov
pop
and
fwait
clc
add
andl
xchg
addr16
dec
notl
sahf
sub
xchg
rcl
push
inc
popa
das
ljmp
xchg
sub
xlat
push
cltd
je
test
add
fldenv
outsb
popa
roll
xchg
stos
inc
pop
popa
lahf
jnp
adc
cmp
arpl
jle
jp
loope
fldl
popa
scas
cwtl
stc
hlt
mov
xchg
mov
add
xor
mov
imul
popa
push
sub
fdivr
js
push
or
fwait
jp
sbb
inc
xchg
popa
andb
cmp
xor
rcrl
fdivs
popa
xchg
repz
cmp
cmp
lds
jno
popa
mov
ficomps
outsl
jnp
shrb
xchg
mov
sub
test
jmp
xor
and
mulb
popa
adc
fs
repz
in
ss
imul
cmp
rcrl
ret
push
shlb
popa
push
dec
cmc
mov
push
nop
fwait
rclb
pop
and
and
repz
mov
push
adcb
lea
and
shll
in
cmp
scas
xor
inc
enter
sub
pop
bound
lea
bound
mov
cld
popa
xchg
roll
and
lods
data16
sub
inc
jge
pop
call
and
outsb
push
sub
sub
lahf
add
add
mov
lea
pushf
daa
fwait
and
cmp
adc
sub
and
aad
mov
out
jge
xchg
popa
imul
push
jg
mov
arpl
xor
inc
hlt
xor
sbb
mov
in
and
popa
cmp
jge
or
xlat
aas
popa
insl
rolb
cmpsl
fnsave
mov
mov
sub
rcl
sahf
mov
scas
push
incb
sbb
jmp
adc
push
lock
xchg
and
jb
shll
mov
xor
xlat
fadd
popa
lahf
sub
mov
xor
lods
adc
dec
es
shll
xchg
mov
arpl
pop
or
mov
fs
fistpl
loop
ret
push
mov
mov
insb
cmpxchg
loop
or
push
lcall
repz
inc
mov
xchg
and
pop
bound
or
or
xor
popa
je
add
popa
push
shrb
mov
dec
pushf
mov
bsr
loop
stc
inc
ljmp
adc
fnstsw
loop
gs
mov
or
popa
jge
mov
adc
inc
jmp
inc
sub
addr16
or
adc
mov
dec
add
aaa
testb
das
cmc
test
cmpsl
popa
add
je
cmp
js
in
mov
lahf
push
push
loope
ljmp
rorl
pop
bound
sbb
lods
popa
dec
loopne
int3
push
dec
sub
addb
adc
movsl
xor
popa
and
loop
lds
imul
adc
cltd
aas
popa
jg
xchg
jnp
repnz
popa
lods
mov
leave
mov
sbbl
jno
mov
popa
cmp
rcrb
mov
mov
ds
pusha
out
mov
pop
sub
push
mov
xchg
popa
pop
dec
adc
aas
push
fwait
popa
mov
push
pop
sbb
jp
test
daa
jg
loope
jb
mov
lods
push
push
push
out
cli
push
popa
dec
xor
test
arpl
in
xchg
dec
lret
push
ljmp
push
or
mov
jecxz
out
and
jae
imul
or
xchg
js
mov
dec
mov
sahf
aad
and
mov
popa
xor
cltd
lods
or
adc
jp
pushf
xchg
int
iret
roll
ds
pop
popa
inc
mov
ficoms
xchg
dec
xchg
insb
mov
adc
add
pushf
add
jbe
je
das
cmpsl
popa
cltd
stos
dec
mov
mov
cmp
stc
lods
jge
movsb
fwait
call
popa
cs
mov
push
popa
xorb
sbb
cwtl
push
imul
xchg
mov
popl
lea
inc
popa
inc
or
int3
popa
mov
adc
push
dec
fs
add
pop
cmp
xchg
lret
or
popa
rclb
stos
or
push
mov
xchg
fs
and
xchg
xlat
addr16
arpl
fbld
clc
movsl
lods
fldcw
xchg
jbe
pop
adc
pop
movsb
xchg
mov
popa
sub
leave
out
loope
lahf
cmpsb
adc
sub
ds
jae
ja
gs
push
test
gs
movsl
sbb
pop
pop
outsb
sbb
pop
xor
dec
ret
addr16
repz
inc
cmp
push
sbb
fs
shrl
xchg
cmp
adc
adc
nop
std
loope
dec
das
popa
arpl
int
popa
ljmp
dec
fcoml
popa
div
or
ficoml
push
lods
pop
sbb
and
mov
fildl
in
out
and
loopne
dec
push
andb
inc
lcall
outsl
sub
popa
nop
lahf
in
pop
bound
add
popa
fisubs
jmp
shlb
ficoml
jp
popa
mov
mov
mov
pop
add
mov
xchg
in
lods
sbbb
pushf
or
popa
sub
or
adc
rcrb
jae
sbb
dec
xchg
mov
js
mov
and
shlb
jle
dec
jmp
xchg
and
es
sub
dec
xchg
mov
js
mull
push
and
sub
ljmp
arpl
sub
xor
jbe
pop
cld
inc
clc
in
and
popa
rclb
mov
cmpsl
jb
cmp
popa
ja
push
loopne
mov
sub
inc
sub
xchg
cmp
stos
fisubrl
dec
stos
add
dec
aad
jbe
mov
sbb
xchg
pop
xor
aad
mov
pop
mov
push
fcmovnb
and
pop
mov
pop
jge
xchg
bnd
mov
dec
lock
mov
arpl
out
add
and
mov
cmpl
insl
lea
cmc
ja
push
lods
mov
inc
jecxz
mov
into
xchg
bound
pop
outsb
shl
fwait
ss
popa
cmp
test
lods
fnstcw
sub
rorb
and
and
jne
and
jbe
cmc
dec
shlb
cmp
add
aam
inc
scas
insl
sbb
rcrl
popa
mov
into
push
ja
movsl
je
sub
dec
xor
sbb
sbb
xorb
jp
test
inc
in
cwtl
int
andl
leave
xchg
lea
jp
pop
shll
test
jge
xchg
adc
jl
jg
aaa
or
pop
cmp
xchg
add
add
imul
je
stos
cltd
pop
in
inc
mov
sub
je
jmp
popa
out
pop
pop
movsb
jmp
pop
add
mov
sub
pop
lock
pop
popa
cld
xor
das
dec
cmpsl
and
test
xchg
jmp
xchg
rclb
popa
add
inc
in
push
xor
or
nop
xchg
lock
add
popl
mov
add
cmp
or
rorb
popa
js
push
inc
dec
pop
daa
inc
popa
subb
out
iret
inc
popa
xor
ss
outsl
aam
xchg
inc
popa
add
sub
mov
loop
loope
sub
jno
dec
inc
nop
fwait
movsl
cmp
cwtd
mov
xchg
out
js
fistl
and
popa
lret
or
adc
lods
icebp
insl
outsl
jae
or
add
popa
add
push
fs
enter
add
mov
jecxz
adcl
int
dec
cmp
leave
shlb
enter
xor
cmp
sub
ret
ljmp
push
sbbb
cwtl
mov
out
aas
adc
aaa
sahf
or
popf
adc
cli
sbb
shll
mov
pop
test
jmp
mov
inc
pop
popa
scas
stc
push
idivb
ds
xor
dec
popa
lds
mov
popa
sbb
lahf
and
shll
call
int3
jo
lret
mov
sub
iret
jg
sbb
pop
into
bound
gs
flds
mov
add
cmpsl
jns
pop
int
fwait
mov
bound
push
adc
gs
call
or
push
push
or
jne
std
cli
popa
hlt
cmpsb
xor
mov
popa
xor
mov
mov
pop
in
cwtl
or
mov
push
into
jbe
jo
fs
adc
pop
jge
loopne
sub
mov
and
cli
shrl
popa
xor
pop
into
add
sbb
insl
cmp
xchg
popa
push
or
iret
fstpl
jne
ljmp
lods
push
lret
sahf
mov
jl
out
mov
jae
push
popf
sbb
mov
or
xchg
adc
push
jno
fs
popa
sahf
and
lret
fwait
stc
lahf
popa
sarl
cmpsb
adc
mov
aam
cltd
or
fs
in
pop
fptan
in
popa
fwait
cmp
popa
aad
add
pop
and
popa
dec
mov
enter
push
in
push
stos
and
cmpsl
xchg
bound
add
inc
and
repnz
xlat
popa
enter
filds
jo
mov
lret
rorl
lahf
jecxz
fs
sahf
inc
aas
subl
and
mov
fsin
mov
mov
mov
popa
lods
movsb
out
ja
adc
imul
pop
data16
pop
xor
popa
adc
out
fistl
imul
and
fimuls
in
xor
sbb
clc
lods
jb
sbb
sbb
insb
push
sub
mov
test
inc
shl
pop
or
outsl
push
int
add
and
dec
cmp
popa
xchg
pop
sub
mov
fdivl
arpl
cmpsb
icebp
jle
jae
and
jg
int3
loope
ja
pop
dec
push
popa
fwait
xchg
push
add
inc
adcb
inc
pop
sahf
jo
dec
sarl
inc
ret
jae
bound
mov
outsl
shll
int
call
pop
fsubrl
popa
cmp
data16
push
xchg
xchg
and
bnd
fdivrl
shll
add
insl
adc
jge
push
push
je
mov
pop
mov
popa
aaa
sub
xorl
xor
movsl
loope
das
mov
sbb
and
loope
push
mov
imul
pushf
sub
sub
adc
inc
mov
sub
sub
mov
out
loop
jbe
push
cmp
push
xor
mov
aas
repz
mov
popa
lret
mov
xchg
and
call
dec
sbb
popf
dec
inc
scas
adcb
and
roll
mov
xor
sbb
sbb
sub
add
popa
jb
jnp
and
sbb
mov
popa
js
inc
dec
sub
mov
inc
xor
pusha
arpl
sbb
arpl
xchg
adc
scas
lahf
pop
mov
js
cs
neg
hlt
popa
jbe
sbb
lcall
out
sbb
pushf
aad
jbe
mov
sti
sub
insb
stos
jp
loope
sub
scas
bound
in
pop
push
jo
push
inc
xlat
arpl
sahf
out
fdivl
pop
cmp
idivl
popa
pop
xchg
addb
daa
jae
mov
xchg
mov
cmp
popa
xchg
and
jae
out
and
mov
dec
and
aam
hlt
stc
loop
in
sub
scas
sbb
dec
dec
jl
das
cmp
and
ret
bound
mov
cltd
cmp
or
in
dec
mov
add
sbb
call
mov
mov
xchg
data16
adc
sbb
sub
insb
lods
adc
in
int3
xchg
add
ficomps
test
xchg
or
push
in
and
rorl
cmp
outsl
test
sub
js
pop
enter
xor
scas
notb
sub
pop
fisubl
sbb
jns
rcll
push
repz
ljmp
pop
mov
add
out
mov
rorb
nop
popa
mov
stos
sbb
jp
and
inc
enter
xchg
mov
xchg
into
test
adc
add
fbld
dec
sub
mov
cmp
leave
sbb
xor
mov
aad
out
jnp
cli
sbb
mov
mov
mov
out
or
dec
add
popa
test
daa
dec
popa
fildll
ss
cmpsl
leave
jg
test
jo
inc
dec
pop
push
and
loopne
arpl
lret
cmp
fnstsw
insb
mov
dec
pop
loope
cwtl
push
adc
ror
loope
inc
popa
dec
rorl
adc
and
mov
push
pushl
and
ds
lods
mov
cmpsl
stos
movsl
lods
pop
popa
movsb
sub
icebp
js
sbb
sub
pop
inc
adc
cmp
mov
popa
cltd
jbe
pop
dec
js
sbb
or
push
pushf
jg
push
xchg
popa
jbe
mov
je
outsl
lds
mov
mov
add
xchg
xor
fwait
loop
fs
mov
pop
jmp
pusha
bound
xor
std
lea
xchg
push
mov
hlt
rcrb
dec
sub
cmc
xchg
fsubr
ficoml
popa
push
mov
cmp
mov
or
test
mov
add
mov
push
or
push
jecxz
mov
mov
push
ret
popf
mov
rorl
lea
inc
std
leave
stos
dec
xchg
or
mov
dec
scas
mulb
adc
mov
call
and
mov
push
popa
mov
sarb
mov
inc
xchg
pusha
push
fstps
test
nop
and
mov
mul
es
fs
push
stos
mov
repz
outsl
mov
gs
fistpll
sub
mov
scas
data16
lcall
and
mov
dec
dec
pop
popa
xlat
pop
adc
pop
xchg
dec
ljmp
ret
in
fldenv
jae
adc
or
dec
loope
mov
lret
sub
popa
jmp
jmp
clc
push
rorb
mov
dec
fdiv
popa
sbb
pop
xor
lock
fnstenv
cmp
cmpsb
xchg
popa
aaa
into
in
jo
imul
sub
dec
popa
xor
xor
sbb
aam
popa
mov
psllw
jo
aad
fimuls
fidivrl
add
cwtl
daa
popa
add
push
add
push
insb
and
outsl
pop
icebp
pop
push
mov
mov
popa
fimuls
pop
daa
dec
in
mov
das
ds
xchg
or
pop
mov
popa
rcr
xchg
add
adc
and
sbb
dec
or
sti
popa
sbb
movsl
jbe
or
popa
es
sub
outsl
scas
fs
iret
inc
fidivrs
test
ja
fdivl
out
dec
xchg
or
shrb
push
test
add
mov
push
sbb
pop
lcall
mov
dec
sahf
gs
shlb
call
or
roll
push
or
lods
loop
push
inc
mov
inc
cs
jbe
mov
test
mov
unpcklps
into
outsl
add
push
add
popa
lret
xor
mulb
fldl
shr
popa
lret
add
sbb
popa
jp
enter
popa
fucomi
stos
adc
popa
cmpl
jb
push
ret
and
fldl
aas
aad
adc
popa
ds
push
bound
push
adc
sub
xor
popa
cmp
xor
pop
mov
push
inc
mov
mov
inc
sub
xchg
pop
ret
mov
fs
add
xchg
or
jmp
dec
add
sbb
jo
or
xchg
dec
dec
dec
into
or
inc
pop
dec
push
mov
and
or
lahf
jg
lods
push
ljmp
push
push
loope
inc
scas
xchg
ds
add
decl
bsf
popa
cwtl
mov
inc
js
push
icebp
add
sub
lods
xchg
mov
insb
cmpsb
jno
mov
lcall
ja
outsb
sbb
popa
jl
cld
or
add
inc
xchg
dec
andb
jae
xor
repnz
std
and
call
hlt
or
in
shr
outsl
outsl
std
inc
inc
inc
dec
pop
gs
shlb
ret
cmp
popf
pop
add
cmp
and
mov
push
data16
test
andb
push
pop
or
mov
pop
and
popa
enter
dec
call
push
push
scas
in
jl
popa
adc
jo
cmpsl
add
or
adc
call
sti
lods
mov
push
or
repnz
mov
stos
pop
jo
outsb
mov
and
mov
in
xor
lea
test
jo
loope
sub
popa
in
lret
lea
stc
jecxz
mov
and
sub
ret
stos
popa
cmp
mov
popa
pop
leave
scas
mov
popa
test
in
andl
fidivs
add
push
popa
mov
inc
out
pop
dec
into
popa
lods
pop
insb
jo
das
cld
inc
jge
pop
andl
pop
xchg
test
push
in
stos
mov
push
into
adc
fnstcw
adc
mov
mov
movsl
mov
ret
popa
scas
add
sub
sub
popa
clc
lods
jbe
lds
and
icebp
popa
pop
arpl
scas
fnstcw
xchg
add
push
addr16
xor
les
and
clc
loope
mov
popa
popf
jnp
xchg
rclb
roll
cld
and
rcl
mov
jo
arpl
lea
and
inc
shll
jae
jb
les
hlt
mov
inc
gs
lock
cmp
add
sub
fimuls
xorb
test
popa
push
dec
ss
mov
jl
cld
loop
enter
push
lods
aaa
fsts
cmp
aad
out
jo
mov
popa
push
or
pop
push
pop
aam
popa
js
mov
frstor
lds
rcl
fs
mov
xor
adc
push
inc
popa
jns
loop
cmp
mov
pop
or
int
mov
paddd
fstpt
xor
push
ss
mull
xchg
lret
popa
and
scas
pop
cmp
push
cld
mov
out
mov
mov
pop
popa
lea
daa
mov
and
push
movsb
or
xchg
gs
xor
mov
shll
in
shl
ror
cltd
popa
into
es
gs
scas
cmc
int
je
aas
mov
test
imul
add
push
outsl
outsl
repz
push
sub
xor
adc
popa
stos
int
repz
loope
ss
nop
es
bound
or
pop
dec
sub
bound
xchg
popa
sbbb
lahf
bound
popf
nop
or
sarb
cmp
add
inc
inc
push
je
push
inc
les
mov
popa
lds
movsb
sbb
jp
popa
repnz
xor
push
push
popa
gs
or
daa
push
mov
sub
xor
dec
pop
out
roll
push
idivl
pop
or
negb
fucomip
popa
andb
popa
fdivrs
shlb
push
cmp
out
popl
fs
or
jl
dec
icebp
xchg
in
jae
test
in
stc
and
js
jo
aaa
ss
push
mov
xor
jmp
push
stos
inc
push
pop
mov
sti
jns
in
jge
dec
stos
jno
pop
adc
aas
imul
and
rcrl
xchg
into
movsl
popa
pop
cmp
jge
xor
test
mov
pop
cmp
inc
fs
push
repnz
movsl
nop
clc
std
inc
or
xlat
cltd
ret
xchg
mov
ret
hlt
loop
push
xor
sbb
fldenv
add
push
aaa
sbb
jns
xor
pop
cmp
sub
mov
insl
add
pusha
leave
insb
repz
movsb
aaa
stos
out
cmp
or
addl
cmp
stos
cs
jae
and
push
mov
ficoms
popf
push
cmova
in
or
in
sbb
je
loope
mov
pop
int
mov
adc
dec
push
adc
cltd
and
push
xor
sub
push
fucom
movsb
popa
mov
mov
jns
inc
dec
xchg
push
daa
popa
add
pop
xchg
popa
or
dec
clc
and
mov
je
in
loope
js
movb
lcall
pop
popa
lods
sbb
daa
jb
and
aas
popa
sti
pop
pop
shr
mov
sub
xchg
icebp
jecxz
fists
xor
xor
lods
popa
ja
xchg
test
mov
ficomps
jmp
insb
popa
stos
sbb
enter
shll
fidivl
mov
inc
lea
popa
rclb
fldl
push
xor
outsb
jge
mov
inc
shrb
pop
jge
movsb
loope
dec
test
jp
popa
push
push
xlat
lea
inc
and
xchg
andl
push
cs
mov
mov
jp
out
into
xchg
fwait
and
inc
popa
mov
js
mov
jmp
insb
push
test
xor
lods
mov
jecxz
jbe
mov
jno
pop
lods
out
jb
dec
sti
adc
subl
popa
xchg
jb
pusha
mov
pop
mov
xlat
or
popa
mov
push
mov
call
sbb
out
pushf
jg
popa
xor
outsl
pusha
mov
punpckldq
push
lret
dec
popa
in
outsl
lea
icebp
shr
push
arpl
pop
push
dec
rcrl
pop
sbb
push
stos
aas
loope
dec
pop
jecxz
cwtl
out
xorl
in
push
call
sub
je
cmpl
shrl
cmp
dec
fmul
mov
dec
movsl
mov
push
jp
adc
ret
addb
outsb
xchg
out
popf
stos
mov
pop
in
mov
hlt
mov
jnp
cmp
sti
iret
push
pop
inc
adc
pop
xor
push
sbb
rorl
iret
bound
std
jne
inc
fwait
xchg
sarl
nop
popa
into
and
in
out
mov
pusha
mov
nop
sbb
or
jo
cmp
cmpsb
sahf
mov
mov
adc
in
popa
popf
cmc
mov
loop
cmp
popa
add
xor
fs
fs
mov
push
and
mov
dec
ret
inc
cwtl
mov
hlt
mov
loopne
inc
enter
popa
dec
mov
and
mov
cmp
mov
and
mov
sub
decb
pop
fimull
bound
insb
mov
les
roll
andl
sti
mov
lret
lcall
xchg
fisttpl
popa
pop
roll
test
iret
outsb
popa
loope
push
jl
ficoml
inc
jge
icebp
push
xor
popa
cmp
push
inc
sub
andl
or
cmp
xchg
jge
add
mov
popa
or
pushf
das
popa
sbb
mov
clc
push
imul
push
fs
mov
stc
mov
xchg
popf
jo
arpl
xor
push
inc
das
out
sub
sub
sbb
jg
int
fldt
cmp
call
xor
pop
xchg
add
cmp
mov
jg
cwtl
mov
test
sub
int3
popa
sub
push
inc
cmp
shr
adc
xchg
les
test
roll
faddl
lock
adcl
ret
add
fs
cmc
inc
je
inc
push
insb
addr16
pop
jmp
jae
popa
inc
gs
add
cmp
pop
mov
je
jbe
mov
aas
jle
xor
pop
jge
xchg
mov
loopne
bound
lahf
popf
inc
push
pop
push
sbb
aad
popa
add
jmp
ret
mov
dec
leave
popa
dec
adc
or
inc
insl
mov
subl
das
negb
pop
jg
xchg
popa
xchg
sub
ljmp
mov
and
mov
add
lret
data16
popa
xchg
mov
fwait
sub
lock
clc
test
jmp
push
sub
aas
jge
sbb
data16
imull
andnps
popa
pop
xchg
shll
in
test
ja
dec
jl
mov
or
aas
cmp
jl
in
xchg
jnp
inc
adc
cwtl
pop
popa
fldenv
dec
mov
jbe
ret
cwtl
not
shl
lcall
lahf
insl
dec
or
xchg
outsl
mov
call
add
das
jbe
das
xchg
lret
popf
inc
dec
push
fnstenv
push
pushf
push
repz
and
frstor
ret
push
cld
sar
inc
push
pop
shll
ja
add
adc
mov
pop
scas
call
bound
das
and
inc
shll
mov
mov
popa
add
in
movb
popa
cmpl
es
subb
cld
faddl
or
add
icebp
pop
popa
and
stos
dec
xlat
push
scas
popa
jp
dec
jae
test
push
bound
lcall
mov
fwait
jnp
and
xchg
mov
inc
sbb
stos
cld
or
bound
push
cmp
mov
push
scas
or
sbb
movsb
je
daa
mov
and
addr16
and
hlt
popa
icebp
or
in
push
loopne
clc
fs
xchg
sbb
fldl
fs
scas
dec
mov
sub
stc
sahf
in
popa
leave
jge
and
xor
bound
mov
aam
popa
les
or
xor
out
les
sbb
inc
ds
aaa
inc
arpl
jp
and
stc
cmp
mov
stos
xchg
cmc
xor
aam
out
enter
outsl
popf
lock
lea
adc
sub
in
neg
xor
outsl
or
fistpl
and
add
cmpsb
aas
dec
adc
imul
fsubrs
ja
outsb
fbstp
outsl
jg
popa
cs
popf
out
popa
ret
cmp
mov
gs
sti
outsb
and
fcoml
xchg
fwait
cli
jo
inc
sub
push
rolb
lahf
cmp
es
fwait
icebp
jg
mov
ret
in
popa
pop
ficomps
lret
and
dec
fs
popa
adcl
mov
popa
sbb
loope
popa
popl
insb
xchg
adc
popa
sbb
cli
aam
popa
or
xorb
mov
push
jge
shl
cs
sub
mov
pop
loopne
jge
in
push
sub
sarb
mov
testb
pop
push
sub
popa
cmp
je
clc
cli
sbbl
add
icebp
fwait
test
popa
push
mov
xor
cmc
push
and
cmp
cwtl
fildll
mov
jno
sbb
in
and
inc
dec
sub
mov
js
rorb
mov
sbb
insl
and
fisttpl
push
ret
lods
icebp
and
inc
hlt
insb
add
cwtl
adc
or
fldt
adc
jb
fmuls
lds
adc
popa
repnz
sbb
fdivrs
mov
pxor
lock
test
inc
cmc
popa
mov
andl
inc
aas
lcall
popa
adc
and
loope
call
xchg
popa
pop
jbe
lods
or
sti
repz
lss
or
in
bound
cmp
les
outsb
addr16
lods
mov
fcmovb
cld
mov
aas
gs
xadd
push
jb
popa
daa
mov
xor
gs
scas
inc
dec
cmp
adc
popa
inc
push
lret
xchg
ljmp
popa
dec
push
ds
mov
and
pop
sarb
pop
inc
adc
es
cmpsb
loop
call
out
adc
je
adc
jns
das
ds
into
inc
jae
add
daa
jl
popa
mov
or
dec
sub
enter
pop
push
mov
and
popa
out
cltd
lahf
inc
push
test
xchg
popa
xor
out
and
dec
popa
add
push
cs
outsb
dec
mov
mov
dec
mov
cltd
js
xor
push
ficoml
dec
mov
loop
xchg
jnp
bound
add
in
mov
add
fs
dec
sbb
jl
mov
xchg
lods
cmp
popa
jge
in
jmp
push
es
mov
xchg
pop
xor
sub
mov
icebp
jle
orb
or
jns
jge
xor
lret
mov
fldl
in
fs
lds
scas
popa
ss
push
mov
mov
cli
pop
adc
or
or
incb
sbb
cmp
push
lcall
loopne
pusha
rorl
push
icebp
sbbl
pop
loope
out
andl
inc
pop
mov
xlat
pop
dec
andl
push
mov
popa
in
cmp
nop
dec
cmovg
std
add
fsts
rcrl
pop
popa
js
insl
dec
mov
dec
es
sti
mov
push
inc
inc
pop
leave
and
sahf
sub
testb
sar
insb
je
sub
push
rolb
jns
jle
jnp
test
insl
shl
pop
cmpsb
popf
mov
lcall
popa
loope
lret
insl
int3
stos
js
or
bound
inc
sub
aad
imul
aam
popa
fcomps
movsb
jo
mov
cmp
sahf
adc
fldcw
jle
sbb
sub
movsl
pop
fs
mov
loop
adc
mov
push
idiv
or
dec
cmpsb
jecxz
fs
cld
mov
int
hlt
arpl
mov
inc
push
movsb
aad
stc
popf
dec
jmp
push
popa
pushf
and
outsb
int3
jmp
and
mov
icebp
test
pushf
out
jge
inc
xor
push
lcall
aas
adc
pop
imul
mov
lea
pop
push
sub
les
pusha
rcl
popa
add
mov
mov
sti
mov
std
cmpl
push
and
loopne
in
cvtdq2ps
jne
push
ret
mov
xchg
popa
stos
push
sahf
and
int
ds
popf
data16
adc
dec
arpl
dec
mov
inc
pop
push
push
inc
stos
mov
je
or
jo
sub
pop
andb
or
leave
jns
ret
mov
dec
inc
fbld
xchg
in
dec
mov
lret
shr
jns
fildll
push
mov
out
rorl
std
dec
enter
popw
mov
and
push
jne,pn
loop
movsl
xchg
test
neg
xor
in
push
or
xchg
mov
leave
inc
mov
les
ficoml
in
mov
in
subl
mov
leave
push
push
mov
or
sbb
pop
nop
in
mov
arpl
pop
int3
lock
call
fistl
cmp
cmp
fisttps
icebp
in
sub
ja
mov
loop
ja
push
test
popf
sarb
fnstsw
cmpsb
ret
arpl
gs
scas
jp
push
xor
aaa
icebp
out
jne
push
outsl
lea
ljmp
icebp
mov
loop
lock
xlat
mulb
xchg
jge
dec
xorl
mov
hlt
lcall
cmp
push
shlb
test
outsb
xchg
sub
inc
sub
nop
test
xchg
push
std
gs
mov
pop
pop
lds
dec
mov
mov
fisubs
pop
fcompl
das
xchg
add
popa
mov
lret
loopne
nop
add
push
dec
sti
ret
pop
arpl
adc
emms
stos
jno
dec
and
dec
in
leave
and
jle
out
xchg
gs
xor
inc
shlb
push
fidivl
int3
jnp
or
stos
arpl
test
jo
and
je
jns
mull
push
int
cmp
lods
add
ja
add
and
adcb
loope
add
adc
gs
sbb
mov
arpl
xchg
mov
xor
mov
je
shlb
leave
dec
pop
jp
dec
stos
test
inc
aam
data16
std
or
scas
mov
xchg
pop
push
xchg
jno
mov
or
xchg
pop
test
xchg
dec
pusha
orb
mov
in
insl
jae
dec
push
sbb
sbb
mov
xor
jbe
popf
jo
add
sbb
arpl
push
push
jo
jecxz
fs
arpl
add
test
shll
jl
sbbl
popa
or
ret
dec
mov
sbbl
xchg
mov
mov
in
mov
nop
push
movb
pop
lcall
inc
add
or
inc
enter
les
dec
sub
fidivl
popa
xchg
and
lea
lods
sbb
mov
vpmaddwd
cmpsb
popa
push
in
cmp
arpl
scas
adc
std
loope
pop
stos
and
push
les
lods
rorl
mov
sub
sbb
dec
sub
loopne
inc
lds
das
or
mov
movsl
pop
mov
pop
jp
inc
rclb
jns
adc
pop
pop
fistpll
mulb
fmuls
fsubrl
or
pop
or
das
or
popa
out
scas
cmpsb
popl
push
push
pop
cmpl
dec
loope
push
popa
adcl
lock
xchg
shlb
inc
in
cmp
push
arpl
fists
jno
popf
jns
pop
dec
sub
fildll
push
adc
mov
ja
mov
loope
push
je
popa
pop
pushf
add
and
push
mov
sahf
pushl
stos
lcall
ret
push
pop
cltd
or
xchg
mov
cwtl
into
lcall
in
test
movsb
popa
lea
jno
popa
decb
aad
mov
xchg
cs
dec
movsl
and
addr16
filds
std
xor
icebp
xchg
xor
out
imul
inc
popf
lods
and
lcall
xor
mov
in
popa
pop
addr16
cmpb
jmp
inc
pusha
outsb
cwtl
sbb
popa
cmp
lret
popa
int3
mov
pop
addl
sahf
add
outsl
ret
inc
test
fnsave
cmpsb
test
mov
dec
out
pop
jno
adc
movsb
aam
sbb
popa
movsl
ret
push
pop
mov
repnz
pop
jmp
das
add
xor
jo
mov
sbb
popa
rcll
cwtl
repz
adc
popa
jb
sbb
incl
lret
and
mov
out
fs
pop
lds
dec
xor
shlb
mov
mov
push
and
int3
int
pushf
adc
loope
and
fs
push
movsl
ss
popa
subb
adc
inc
or
push
jae
mov
popa
jg
xor
adc
mov
je
popa
incb
out
dec
cmp
xchg
jcxz
popa
pop
divb
fwait
aad
push
jo
out
mov
and
jno
arpl
sub
popa
fldz
dec
sbb
iret
insb
popa
jbe
push
in
and
ret
add
outsl
dec
rol
fs
testb
lea
imul
addr16
add
popf
popa
sub
adc
pushf
push
test
test
lret
int
popa
adcb
xor
push
dec
sbb
dec
popa
nop
lahf
add
lds
les
push
arpl
cltd
or
cmpsl
out
mov
lods
popa
enter
aad
sbbl
cmp
push
addr16
stos
imul
add
aas
lods
loopne
out
jne
loopne
int3
pop
bound
faddl
jae
push
push
pop
and
mul
mov
dec
add
loope
mov
sarl
push
mov
sahf
out
pop
loope
arpl
and
dec
popa
repnz
jnp
nop
pushf
or
out
sarb
jecxz
stos
popa
jmp
in
test
jno
jo
mov
mov
mov
popa
mov
insb
mov
cmpsb
popa
sub
jl
lea
push
shl
and
ficoms
icebp
out
aam
rcl
popa
xor
or
popa
std
lret
jg
int
push
cmp
adcb
and
sbb
dec
popf
fistpll
jl
movsb
bound
int3
ljmp
and
mov
xor
mov
popa
mov
mov
or
out
xor
popf
jle
jle
bound
sbbl
sub
test
push
iret
cmp
sbb
popa
aas
mov
sbb
jl
sbb
add
inc
jns
mov
mov
clc
mov
inc
bound
xchg
mov
push
sub
popa
jge
mov
enter
popa
mov
xor
lods
ret
mov
mov
ja
sbb
std
and
cmp
popa
push
cs
add
ds
popa
out
mov
fbstp
add
bound
shr
cmp
xor
push
and
test
adc
xor
test
popa
aad
nop
stos
xor
mov
lods
pop
xchg
popa
jae
fcmovb
outsl
dec
add
movsb
and
xchg
mov
mov
mov
xor
and
inc
xor
mov
adc
rcll
sub
dec
cmc
pop
les
in
mov
jl
mov
imul
in
popa
mov
insb
shrb
lret
popa
out
push
sub
inc
pop
sub
sub
aaa
push
fwait
dec
repz
adc
push
xchg
cld
popa
test
mov
push
fbstp
cwtl
loope
and
sub
popa
lahf
int
dec
enter
sbb
in
jmp
test
inc
popa
add
insl
sbb
stos
cmp
or
push
daa
add
repnz
add
pop
adc
sub
cmp
adc
push
arpl
leave
ret
inc
and
jae
add
xor
push
push
mov
stc
cmp
aam
pop
mov
adc
mov
rcrb
pop
or
xor
lahf
bound
jp
and
in
popa
cmpsl
cli
lds
sub
jne
jo
fsubrs
xchg
inc
and
popa
aas
getsec
inc
sub
sub
pop
call
sbb
adc
dec
sub
shlb
stos
push
push
ljmp
xor
popf
lods
inc
or
popa
cmp
sahf
loop
xchg
sbb
pop
movsl
cmp
je
pop
popa
das
inc
jno
mov
xchg
leave
xor
dec
sub
lods
loopne
bound
movsl
or
pop
inc
jg
subb
popa
push
sub
sbb
leave
mov
shrb
clc
in
sbb
xchg
jo
push
orl
dec
cmp
cltd
dec
mov
mov
hlt
addr16
divb
mov
popa
jo
mov
clc
popa
ja
xchg
test
mov
xlat
sub
inc
adc
test
insb
and
push
movb
insl
add
cltd
shlb
popa
adcl
inc
popa
add
in
arpl
fdiv
popa
or
in
mov
and
sbb
ficompl
and
pop
lahf
in
loop
mov
push
orl
pop
jne
pop
add
enter
popa
cltd
mov
sub
or
dec
cmp
popa
aad
mov
js
into
insb
inc
andb
mov
shll
iret
push
add
jge
out
and
cwtl
fistps
dec
popa
test
xchg
daa
adc
pop
shlb
add
popa
int3
pusha
xchg
fdivs
outsb
jmp
push
cmp
or
lcall
cmp
xor
pop
test
and
cmp
rorl
mov
xor
sbb
loope
xor
pop
popa
adc
flds
sub
or
jg
ja
push
sub
adc
jle
mov
into
or
xchg
cmpsb
hlt
arpl
int3
jmp
push
dec
and
test
lahf
call
jae
popa
mov
mov
popf
in
outsb
popa
dec
out
xchg
int3
insb
insl
popa
popf
lds
push
xor
enter
cmp
sahf
pop
mov
andb
adc
pop
sub
jb
pop
shll
sbb
mov
in
roll
inc
inc
loop
mov
push
jecxz
mov
xor
fs
popf
stos
cs
popa
xchg
inc
push
incb
call
pop
cld
adc
jno
out
scas
shlb
cltd
jmp
xchg
sub
mov
bound
mov
cmp
fsubs
in
push
cmp
add
jnp
movsb
push
adc
shlb
jecxz
scas
mov
xchg
cmp
pop
popa
xchg
push
jb
andl
enter
push
pop
cmp
jb
jbe
sub
xchg
adc
das
mov
inc
inc
fwait
mov
out
mov
xor
mov
cmp
dec
stc
and
cmp
adc
inc
popa
pop
adc
and
xchg
popa
lret
cmp
pop
xchg
cs
fs
and
clc
xchg
adc
xchg
popa
pop
pushf
insb
jle
cli
and
popa
lock
loop
pop
lds
mov
xchg
fs
in
iret
repnz
outsl
fisubl
sub
and
shll
mov
push
or
xor
and
andl
insb
jl
xchg
popa
in
or
push
mov
mov
jo
jno
mov
arpl
popa
hlt
lret
decl
rcrb
popa
jns
xchg
sub
je
fisttpll
in
push
test
idivb
cmp
imul
push
pop
clc
pop
sub
out
popa
or
cs
das
ret
sahf
dec
add
icebp
sbb
push
in
push
lret
inc
jne
int
aas
cmp
mov
cmp
push
pusha
mov
imul
jae
adc
add
leave
inc
mov
popa
sub
imul
push
popa
lret
xchg
bt
mov
jg
loop
mov
sub
xor
pushf
nop
and
mov
inc
popa
xchg
jmp
js
xchg
test
popa
into
sti
repz
js
cltd
xchg
popa
inc
xor
jae
mov
dec
popa
lods
aas
scas
push
xchg
fistl
out
sahf
mov
fs
sti
lcall
popa
nop
test
or
pop
inc
popa
imul
popa
bound
fxsave
outsl
jge
fsubl
rcr
sti
cmpsl
jle
jae
mov
mov
sub
xchg
push
add
popa
inc
int3
and
imul
cmpsl
test
xor
jecxz
jmp
stc
push
or
fs
sub
fs
dec
add
and
orb
stos
pop
or
push
or
bound
in
insl
loopne
mov
cmp
fs
nop
outsb
rcl
orl
xchg
popa
add
mov
dec
xor
div
jo
mov
add
adc
mov
and
popa
sbb
icebp
cmp
popa
inc
or
sbb
dec
or
shll
adc
push
popa
xchg
mov
repnz
data16
adc
mov
popa
cmp
dec
and
shlb
jns
push
push
popa
push
xor
cwtl
popa
push
aas
pop
or
cmp
fistpll
out
adc
xor
xchg
filds
push
dec
push
insl
fadds
js
xor
pusha
popa
fisubrs
fisttpl
pop
loope
dec
or
add
aad
jp
fnstenv
jl
push
pop
mov
lahf
popa
and
pop
push
xchg
gs
test
pop
and
or
popa
int
in
jno
sub
mov
pop
xor
ja
iret
xor
pop
dec
dec
mov
test
lcall
xor
inc
leave
incl
test
cltd
lcall
mov
popa
sbb
loope
fildll
add
mov
inc
xchg
cltd
sbb
arpl
js
insb
popa
leave
stc
movl
popa
or
clc
and
add
outsl
testl
popa
push
orl
clc
sub
add
push
stc
out
arpl
fcmovbe
out
add
jnp
sub
fistl
xor
cmp
call
and
ret
mov
js
sub
loope
sub
dec
ss
or
popf
popa
xchg
mulb
add
or
movsb
pop
pusha
loop
push
sub
jg
and
sbb
pop
mov
sbb
je
mov
fistpl
xchg
cmp
xchg
in
dec
and
fcompl
and
inc
aad
jb
dec
lcall
std
dec
push
mov
add
test
mov
loope
cmpsb
ja
imul
cmp
sar
rorb
fxch
and
pop
cwtl
and
pop
pop
jo
cld
and
sahf
js
repz
jmp
int3
lea
add
cmp
xchg
imul
mov
mov
xchg
stc
and
inc
push
jae,pt
mov
mov
dec
cmp
add
mov
push
push
mov
fisubl
pop
test
jmp
imul
movsb
jo
fwait
push
jae
dec
aad
or
incl
cli
or
cmp
loopne
in
out
cmp
aad
stos
mov
movsb
lret
pop
gs
in
xchg
or
jmp
aaa
lfs
inc
inc
jb
dec
lods
mov
popa
cmpsl
inc
mov
jno
mov
dec
popa
scas
xor
mov
mov
test
ret
std
or
xchg
stos
dec
cmc
cmp
addb
out
test
cmp
jo
mov
and
xchg
in
popa
subl
out
mulb
xchg
or
cmp
addr16
xchg
xor
fs
mov
sub
ljmp
cmp
or
dec
addr16
rcrl
loope
inc
xchg
mov
adc
popa
mov
mov
fs
dec
sbb
std
lods
add
mull
sub
imul
inc
stc
andb
ds
and
mov
cmc
repnz
pop
pushl
push
push
popa
xchg
or
xchg
popa
enter
push
cmp
or
mov
and
imul
sbb
ds
fs
pusha
lock
fcompl
ffree
mov
loope
popf
cmp
popa
sahf
add
fs
dec
fistpll
aaa
shrb
add
xchg
jnp
jno
add
scas
popa
mov
mov
dec
or
iret
mov
inc
popa
push
jno
shrb
mov
rcrl
xchg
jp
cmp
loopne
popa
aam
mov
and
test
loop
and
sti
dec
mov
pushf
sbb
and
pop
popa
cli
out
sti
add
push
lahf
insl
fbld
jle
addb
push
std
dec
mov
add
shrl
dec
and
push
popa
ret
fisubrs
lcall
mov
adc
lods
xor
repnz
mov
jnp
mov
adc
popa
mov
push
fs
sti
popa
in
add
fildll
in
popa
adc
addl
hlt
push
ret
sarl
adc
mov
dec
push
in
lret
add
jmp
mov
cmp
adc
rcrb
jg
insb
or
lock
out
cltd
lret
popa
xor
fcmovb
outsb
cmpsb
icebp
mull
mov
cli
add
fnstsw
and
in
jge
push
mov
push
ds
ja
adc
cmp
insl
arpl
mov
push
pop
ficoml
shr
outsl
lret
std
testb
pop
mov
fstpl
ljmp
dec
bound
pusha
das
cmp
jmp
mov
cmp
fiaddl
push
popa
adc
xchg
cmp
out
scas
popa
mov
lock
outsb
popa
mov
fs
sbb
push
popa
jp
test
lret
cmpsb
add
subb
outsb
in
xor
test
push
cmpsl
sub
push
mov
rol
mov
xor
test
icebp
cwtl
lock
sub
in
sti
or
loopne
adc
adc
adc
mov
sub
mov
mov
inc
mov
outsl
loope
xlat
or
fcmovnu
hlt
popa
adc
adc
popa
in
mov
imul
lahf
pop
daa
xor
push
dec
push
xchg
xchg
subb
sub
and
out
popa
mov
dec
add
jmp
xchg
rcrl
imul
popa
inc
js
jno
test
mov
adc
test
cli
add
push
in
push
filds
clc
sahf
cmpsb
mov
sbb
lret
push
jg
jecxz
mov
fcmovbe
popa
leave
shll
dec
icebp
ret
mov
sub
dec
dec
push
mov
sbb
inc
xor
stc
popa
test
rcrb
mov
lock
je
mov
insb
pop
pop
xchg
pop
shlb
fsubrl
fldenv
or
outsb
sbb
xchg
mov
popa
insl
jno
cld
xchg
popa
xor
or
mov
xor
lock
inc
fs
insb
mov
shll
in
out
test
xor
pop
out
mov
popa
push
inc
stos
or
les
and
dec
add
cmp
sub
fstps
xchg
mov
mov
popa
mov
repnz
movsb
popa
jb
cmp
inc
inc
jno
jg
jae
mov
and
ficomps
outsb
dec
shlb
jl
test
popa
xchg
sub
mov
popa
xlat
gs
aaa
cwtl
mov
popa
cmp
lock
mov
clc
sub
or
out
inc
lea
sub
mov
jl
out
mov
aaa
inc
sbb
jae
cmpsb
rol
add
jmp
push
pop
popa
mov
cmc
sub
pop
cmpsb
popa
scas
lds
push
aam
sahf
mov
inc
daa
jno
pop
popa
das
rclb
loopne
xchg
jle
lcall
sub
insl
test
mov
push
int
mov
push
popa
das
xor
fwait
sub
popa
fstl
pop
add
popa
inc
shll
mov
sbb
cltd
dec
and
fimull
pop
out
mov
popa
shlb
pop
mov
xchg
push
xchg
loope
adc
mov
ret
sbb
pop
ror
popa
xor
es
cli
xchg
jmp
xchg
xor
push
add
xchg
popa
fnstenv
xor
data16
test
insb
adc
les
push
daa
mov
jge
xor
mov
pop
push
push
mov
pop
mov
sub
xlat
dec
popa
hlt
xchg
std
fcompl
mov
fs
inc
popa
les
inc
pop
pop
popa
stos
into
mov
ljmp
mov
mov
rol
jg
loopne
loope
popf
mov
call
in
xchg
mov
fwait
jge
daa
aad
mov
les
jns
cmp
jb
out
sub
sub
lea
pop
popa
loopne
es
in
sbb
popa
jp
cli
mov
push
out
int3
push
xchg
fiaddl
xor
cmp
popa
jge
jp
dec
test
ret
jo
add
mov
int
push
int3
sbbw
push
fwait
pop
cmp
mov
fcompl
dec
popa
jge
xchg
sbb
xor
jns
out
jo
sub
sbb
pop
inc
jo
jbe
mov
or
dec
and
lods
je
daa
jo
add
or
jo
and
out
sbb
and
jl
imul
aam
arpl
sar
jnp
push
mov
push
xchg
loope
push
push
xchg
punpckhbw
mov
ffreep
add
sbb
into
out
push
inc
sub
xor
mov
popa
mov
cmp
lods
andb
lds
test
pushf
gs
in
loope
xchg
inc
push
xchg
popa
jns
mov
imul
popa
les
and
popa
mov
adc
flds
je
ljmp
fdivrl
mov
adc
stos
fsubl
scas
cltd
ljmp
std
test
push
lcall
add
adc
hlt
sbb
jg
dec
or
cmpl
push
out
xor
mov
push
xor
or
inc
insb
jg
test
gs
incl
js
popa
mov
pop
popa
cmp
in
jmp
pop
sub
adc
xchg
lds
in
les
jecxz
pop
popa
cmpsb
scas
mov
ret
in
mov
jb
pop
bound
pushf
inc
push
push
jno
or
in
lock
xchg
fidivrl
mov
push
fcmovnbe
sub
jle
xchg
xchg
popa
popf
lods
dec
pop
push
xchg
mov
leave
dec
jb
outsb
cmpsl
shrb
aas
in
mov
es
mov
xchg
dec
inc
adc
adc
popa
in
rcrb
lea
dec
jb
bound
pop
popa
dec
xchg
movsl
sbb
loope
jge
adc
pop
fs
bound
dec
filds
xor
scas
dec
dec
fwait
add
bound
push
xchg
fildl
mov
pop
add
adc
push
loopne
jno
scas
mov
testb
pop
or
mov
std
in
pop
add
cmovnp
loop
jecxz
mov
popa
mov
and
adc
popa
cmp
dec
sub
ljmp
pop
das
inc
or
dec
inc
adc
rcll
leave
dec
inc
jne
add
movsl
ljmp
popa
inc
loop
adcb
cwtl
in
xchg
outsl
arpl
inc
popa
andl
loope
xchg
cmpb
movsl
daa
loope
int3
cmp
popa
outsl
mov
pop
shrb
fs
adc
add
push
inc
cmp
mov
sahf
mov
mov
jnp
inc
mov
ljmp
popa
fstps
aad
mov
sahf
daa
mov
xchg
inc
sbb
mov
cmp
pop
xchg
js
lea
push
push
fisubrl
cmp
jge
add
out
push
out
lahf
popa
xor
stc
pop
adc
lcall
pop
and
clc
fcomps
mov
stc
dec
fsubrs
popa
pop
sub
setp
sub
repz
dec
inc
outsb
jmp
xchg
jo
xor
add
fdivs
jo
mov
sti
xchg
insb
sarb
popa
lahf
push
pusha
jge
iret
adc
inc
pop
and
repnz
and
xlat
lock
or
in
in
jo
aaa
jns
loop
ds
rol
std
pop
popa
outsb
hlt
nop
lret
iret
inc
cmc
dec
popa
je
mov
stos
popa
lds
aam
cs
xchg
push
cmpsb
popa
repz
insl
xchg
dec
jne
stos
and
mulb
addr16
mov
popa
mov
inc
inc
adc
lcall
dec
sbb
fldcw
pop
add
stos
jo
sbb
sbb
jecxz
out
in
xchg
jge
push
sub
popa
dec
or
push
cmp
or
cld
xchg
popa
xchg
xchg
scas
sub
pop
in
push
aad
popa
pop
in
out
push
mov
add
push
jp
lods
add
movsb
das
dec
fcomi
inc
push
bound
in
ljmp
data16
xor
and
add
jp
adc
mov
lret
cld
and
sub
mov
aam
leave
push
xor
icebp
mov
clc
lds
fsubrs
jae
mov
sbb
andl
arpl
sbb
pop
fs
dec
dec
sahf
pop
int3
and
aad
bound
xchg
fdivrp
in
cmpsb
in
jns
cmp
stos
rcrb
out
or
xor
mov
stos
in
mov
xchg
mov
hlt
or
pop
js
sbb
fsubl
pop
int
mov
daa
and
jb
sbb
xchg
inc
mov
scas
add
dec
and
mov
popa
aam
out
repz
popa
cwtl
xor
mov
sub
sbb
sub
jo
jb
popf
sub
jle
in
cltd
jns
inc
popa
xchg
cmpsl
ret
lret
daa
lea
adc
clc
mov
inc
pusha
subb
mov
aam
xor
hlt
popa
push
sub
imul
popa
mov
cmp
push
and
or
mov
inc
fisubrl
repnz
je
in
mov
call
sbb
aad
xchg
mov
ss
movsb
stos
fidivs
lahf
fs
add
mov
adc
fs
ds
mov
cmpsl
inc
add
popa
dec
mov
pushf
out
add
bound
sarl
sbb
fadds
sbb
push
aas
mov
mov
fsincos
popa
data16
notl
mov
mov
lds
and
pop
in
imulb
dec
or
loope
mov
cli
inc
jb
xor
into
cltd
push
or
dec
popa
fidivl
add
popa
in
xor
mov
popa
push
pop
cmpsl
loopne
jb
ficompl
popa
cmp
in
sbb
je
popa
lret
test
sbb
std
jmp
jp
cmp
jle
mov
pop
jno
and
inc
mov
mov
popa
ja
pop
into
rolb
insl
pop
js
adcb
mov
cwtl
fwait
adc
mov
add
jmp
ret
sub
push
les
daa
popf
mov
es
popa
pop
xlat
jle
push
jns
jae
push
test
xchg
out
rorl
fwait
out
inc
mov
and
jg
ret
mov
popa
adc
sub
clc
xchg
and
call
add
cltd
icebp
pop
arpl
lds
and
cmc
bound
mov
mov
test
mov
mov
jl
idivl
adc
mov
xor
push
mov
popa
jp
sbb
xlat
or
push
shlb
loopne
jge
xadd
pushf
sub
jo
lock
sbb
ret
push
inc
aam
ljmp
xchg
popa
mov
xchg
stos
stos
ja
push
pop
out
lcall
xor
jbe
in
aad
andl
adc
or
nop
arpl
xor
bound
in
lds
popa
sub
mov
outsl
test
das
and
jp
xchg
imul
and
dec
fbld
add
and
mov
popa
loope
jp
out
push
push
xor
or
in
mov
int3
sbbl
je
push
icebp
dec
pop
mov
cmp
push
xchg
adc
sbb
cli
push
stos
divb
sub
or
sahf
shll
dec
cmp
sbb
loope
mov
xchg
repz
or
cmp
push
dec
pop
scas
push
call
imul
repnz
add
test
dec
mov
daa
nop
outsl
std
sub
or
push
jl
sbb
fldt
popa
sbb
gs
inc
movsb
pop
pop
popa
mov
mov
pop
popf
cli
leave
cltd
shl
pop
ficomps
xor
stos
xchg
out
pop
enter
xor
lock
scas
inc
icebp
inc
popf
out
pop
jg
arpl
mov
popa
in
pop
sbb
inc
cmp
popa
stc
popf
adc
imul
sub
cli
shlb
aaa
in
add
std
stc
fistl
add
fistpll
jnp
popa
lock
jle
dec
xchg
loope
out
mov
push
into
popa
dec
cmp
or
sti
ss
popaw
cmp
test
ja
jle
lock
jge
mov
mulb
add
or
mov
popa
cmp
cmc
adc
popa
mov
std
repz
fs
les
into
pop
in
lret
mov
mulb
inc
sbb
or
dec
shll
xchg
es
cmp
inc
cmovp
or
sbb
out
inc
mov
arpl
jle
insb
aam
sahf
and
cmpsb
fadd
test
sub
mov
sbb
add
je
lahf
xchg
arpl
xchg
dec
dec
push
insb
call
or
push
ljmp
popa
test
adc
xchg
pop
loopne
jnp
sub
sahf
aaa
mov
es
lret
pop
popa
sub
jns
aas
dec
jbe
pushf
addr16
mov
mov
fisubl
add
cld
pop
fisubs
or
cmc
mov
xor
fldenv
loopne
jno
cmp
popa
out
push
or
mov
dec
notl
into
inc
jecxz
mov
or
popa
test
fadd
pcmpeqw
popa
jp
adc
adc
sbb
nop
pop
pop
adc
fsubp
loope
and
adc
inc
cld
enter
lods
insb
bound
add
movsl
dec
popa
test
mov
shlb
insl
jo
mov
add
and
push
push
or
jl
dec
std
pop
jmp
xchg
out
punpcklwd
daa
mov
pop
mov
jb
andl
fists
insb
or
jo
out
push
mov
sub
pusha
fwait
popa
jmp
gs
mov
imul
sbb
fisubl
cmp
pop
sbb
mov
aaa
inc
or
jne
jo
hlt
xor
lods
ja
clc
cmp
popf
add
and
pop
stc
mov
push
adc
xchg
jge
test
call
and
sub
mulb
cmc
in
stos
and
in
sbb
bound
push
ja
mov
rcrl
lods
inc
sti
push
inc
popf
xor
fucomi
mov
xor
icebp
mov
fdivl
adc
enter
sub
popa
mov
jmp
aam
loopne
sub
js
mov
ror
pop
mov
dec
insl
daa
mov
outsl
es
std
add
lcall
sub
out
pop
sbb
and
inc
popa
inc
push
jg
popa
lods
out
or
mov
shll
call
xor
aaa
adcl
popa
out
sub
mov
popa
les
mov
iretw
cmp
inc
add
or
std
arpl
push
push
mov
sub
adc
cld
adc
daa
pop
mov
pop
std
mov
push
loopne
mov
and
cmp
popa
jmp
dec
dec
sub
popa
sbbb
scas
popa
fidivs
dec
mov
int
js
adc
punpcklwd
push
popa
fucom
or
push
or
dec
insb
dec
mov
mov
xchg
int
sub
sbb
or
loop
inc
mov
data16
sbb
mov
or
movsl
ss
aam
popa
cld
loopne
jmp
js
push
sbb
sub
pop
mov
pop
popa
push
inc
xor
xor
push
push
bound
jns
push
popa
cmpsb
inc
fs
outsl
lods
fsubs
cmp
xor
lcall
imul
mov
loop
push
mov
rcll
or
pop
int3
or
xchg
sbb
xor
popa
xchg
pop
fs
popa
inc
popf
or
fcoms
xchg
out
lds
lods
test
cwtl
push
inc
stc
fsts
popa
adc
into
cli
aaa
popa
out
sti
jno
inc
cmp
xor
ljmp
cld
imul
mov
pop
push
push
int3
push
outsl
fsubl
jne
mov
push
push
mov
icebp
xchg
popa
push
sub
daa
mov
mov
ret
add
loop
xchg
pop
mov
icebp
jne
xchg
sahf
jl
loope
test
imul
cmpsb
or
lds
dec
jmp
xor
pop
insl
addr16
cmp
insb
sti
xor
xchg
pop
xor
adc
adc
popa
sbb
adc
es
sbb
adc
adc
lods
popa
mov
jno
cmp
lahf
xchg
and
cwtl
ss
or
push
lcall
in
lock
add
stos
inc
xchg
mov
out
jne
lahf
add
adc
inc
fs
xchg
stos
nop
mov
and
sub
popa
loop
pop
sbb
int
xchg
jo
pop
call
shr
fcmovbe
mov
mov
orb
jmp
mov
and
push
rorl
mov
mov
divb
inc
sub
out
mov
dec
push
jne
fwait
pop
pop
shr
je
outsl
inc
pop
test
dec
cmpsl
pop
mov
shlb
roll
clc
mov
jl
dec
cmpsl
xor
jne
adc
adc
add
ffreep
mov
sub
fcmovu
xor
int3
mov
movsb
jl
mov
mov
sti
hlt
icebp
outsb
leave
insb
push
dec
push
pop
mov
dec
dec
xor
fwait
or
leave
xchg
and
in
in
sub
scas
xchg
pop
inc
in
fisttpl
cmpsb
cmpsl
ja
cs
add
mov
addr16
es
scas
dec
add
xor
leave
sti
orl
or
adc
gs
jns
push
push
push
sarl
push
popa
dec
push
outsb
xor
mov
mov
add
popa
pop
push
dec
out
pop
mov
leave
stc
stos
push
lea
sub
hlt
dec
fiaddl
outsb
mov
or
add
int
sbb
adc
inc
sti
and
mov
xor
gs
inc
jns
fnsave
pop
pop
jae
inc
jbe
arpl
inc
cmpl
leave
or
test
or
xchg
push
addr16
dec
dec
adc
mov
xor
push
popa
xchg
shll
sbb
lcall
mov
push
sub
push
cmp
xchg
ljmp
sbb
scas
mov
aad
mul
add
cmpsl
pop
mov
daa
nop
push
dec
aad
xlat
xchg
add
mov
cmp
lock
pusha
loope
pop
fisttpl
cmp
pop
mov
fs
xchg
outsl
xchg
outsb
gs
and
and
pcmpgtb
jns
fs
jbe
add
out
and
jno
jne
xor
pop
clc
cmp
mov
mov
insb
shll
gs
push
dec
mov
xchg
adc
imul
push
xor
mov
jg
sub
lods
std
pop
and
sarb
push
xor
in
shll
cld
xchg
xchg
push
lea
lods
rcrb
xchg
es
out
lea
clc
cmp
xor
in
gs
cmpsb
xchg
pusha
xlat
sub
leave
inc
repz
jp
pop
add
lock
sarl
leave
mov
ljmp
std
sbb
dec
add
mov
add
mov
cmpsb
sub
cmp
cli
fistpl
adc
xor
sub
cmpsb
xor
aas
loope
lods
leave
lea
mov
icebp
xchg
or
fs
sti
sub
fstl
mov
popa
xor
mov
lock
adc
add
loope
dec
mov
jge
addb
sbb
mov
pop
push
loope
popf
loope
ret
fisubrs
jae
insl
sarb
and
xchg
xor
pop
popa
lcall
inc
popa
in
sti
das
push
mov
or
es
aaa
inc
popa
leave
or
and
cs
int
outsl
scas
lods
pushf
jbe
lahf
in
cmpsl
mov
xor
adc
mov
or
sbb
aas
hlt
inc
shl
movsb
popa
in
push
inc
popa
inc
add
fwait
popa
insb
lea
mov
popa
cli
clc
and
add
mov
lea
inc
dec
popf
inc
gs
dec
ret
clc
std
loope
mov
mov
cwtl
loopne
inc
arpl
popa
in
cmp
mov
mov
pop
jmp
popa
lods
jnp
cmp
push
mov
jp
or
call
pop
ficomps
rorl
enter
xchg
shr
xchg
jae
hlt
inc
popa
repnz
sub
mov
fisubl
pop
fdiv
popa
xlat
push
pop
pop
jnp
mov
leave
pop
and
inc
test
sbb
xor
and
jae
pop
pop
push
cmp
sbb
loopne
in
push
lods
in
sub
and
cmpsb
jns
mov
sahf
sbb
and
popa
cltd
push
fdivs
popa
ja
cmp
mov
pop
test
and
push
les
mov
inc
cmp
arpl
call
pop
enter
fbld
pushf
in
add
jp
aad
inc
insb
popa
or
insl
sub
xlat
ret
popa
loop
mov
sahf
bound
and
pop
enter
mov
icebp
outsl
popf
sbb
insb
loopne
push
loope
xor
popa
daa
mov
scas
xchg
fs
icebp
pusha
inc
in
loopne
mulb
ret
lcall
or
inc
and
enter
push
jl
aam
xor
adc
imul
xor
arpl
adc
adc
in
pop
rorl
out
sar
cmp
or
jle
jp
mov
mov
arpl
imul
fsubs
in
aaa
mov
stc
jns
mov
sbb
and
sub
sahf
mov
aas
popa
mov
push
adc
call
push
push
jge
mov
and
pushf
insb
inc
xor
lcall
leave
in
and
repz
mov
mov
push
daa
xor
or
popa
and
push
jns
sub
mov
jle
jnp
and
cld
je
stc
popf
int3
cli
jle
repz
outsb
xchg
add
inc
xchg
adc
daa
cmp
add
dec
cmpb
lcall
dec
sub
insb
insb
mov
and
loope
xchg
mov
or
cmpsb
popa
mov
orl
sti
xor
push
xor
cli
cmp
lods
push
outsl
inc
add
jg
test
bound
dec
jne
sbb
add
out
inc
popa
mov
sbb
dec
data16
jge
shlb
mov
mov
cmpsb
xor
inc
inc
and
xchg
adc
pop
sub
in
pop
inc
popa
xchg
add
adc
sbb
js
inc
inc
xchg
jl
add
popa
push
daa
jbe
cmp
sti
popa
scas
les
adc
cltd
or
lret
ret
pop
ret
push
arpl
aaa
loope
xor
inc
jae
rcr
repnz
outsl
xchg
lcall
add
loopne
xor
arpl
andb
sarl
popf
mov
inc
lods
shlb
or
pop
ja
loope
and
and
mov
mov
popa
mov
pop
pop
jmp
bound
mov
inc
enter
in
popa
jp
leave
outsb
push
lock
fwait
or
popa
aaa
cli
xlat
into
out
jne
popa
shl
sbbb
adc
clc
popa
push
mov
js
loope
andl
xchg
xlat
mov
sub
mov
popa
mov
jp
sbb
lcall
ret
push
and
cmc
aad
mov
mov
hlt
and
faddl
jae
jg
call
push
fisttpll
jecxz
cmpsb
mov
aas
sbb
popa
and
test
cmp
xlat
popa
jg
addl
jle
add
iret
insb
popa
in
pop
andb
into
add
loope
movsl
nopl
inc
mov
mov
cmpsb
dec
fdivs
rolb
adc
jb
popa
int3
and
ret
xchg
lcall
stc
insl
add
popa
cmpps
add
lcall
popa
adc
jo
popa
into
sbb
sahf
jnp
push
popa
jp
pop
mov
bound
mov
popa
fistl
sbb
xor
or
mov
and
sahf
inc
loope
push
push
fstl
pop
ja
popa
outsb
insb
or
popa
push
movsl
mov
cmpsl
jge
popa
sti
lods
clc
dec
mov
cmc
aam
popa
js
sub
lock
jle
and
lds
mov
jae
lods
fyl2x
and
aas
mov
adc
arpl
and
push
roll
and
out
in
add
jmp
inc
stos
imull
sub
inc
rcr
addb
lahf
popa
adc
mov
jmp
punpcklbw
jo
lret
sahf
shlb
addr16
insl
sub
popa
pop
call
test
popa
and
pop
ret
outsl
add
or
stc
cli
rol
aam
push
adc
mov
dec
and
pusha
neg
and
movsb
push
pop
lahf
push
cmp
push
cmp
popa
lret
jns
dec
jbe
mov
popa
leave
mov
or
insb
cld
dec
out
fs
mov
pop
fs
jns
test
in
jbe
jnp
inc
sub
mov
dec
pop
fisubl
xchg
mov
popa
dec
mov
cmc
loope
mov
adc
sarb
jo
adc
cs
popa
jns
lahf
mov
gs
popf
xchg
loope
or
adc
mov
jno
fs
sbb
loope
int3
dec
pop
sahf
test
loop
filds
add
je
add
jo
and
mov
jg
pushf
add
insl
mov
pop
icebp
daa
jno
push
nop
xor
xchg
xchg
mov
xchg
es
push
enter
aas
stos
sbb
lahf
mov
popa
push
pop
mov
leave
mov
xlat
add
jge
push
or
fimuls
lahf
lds
ficoms
in
pop
xchg
mov
mov
shlb
or
mov
incb
jo
mov
or
pop
popf
bound
add
pop
rorb
lahf
pop
push
fdivr
popa
mov
inc
sbb
incb
pushf
push
or
nop
dec
subb
add
jmp
push
adc
cmpsb
int
adc
out
dec
xchg
dec
push
fs
push
jo
jns
pop
or
cmp
iret
loop
and
mov
cmp
outsb
loope
popa
lea
data16
jg
pop
xor
adc
mov
out
popa
mov
icebp
fbstp
iret
je
sahf
or
test
jecxz
fs
xor
fistpll
data16
enter
call
xchg
and
add
or
aad
jle
negl
out
pop
sbb
cmp
je
xor
pop
ss
aam
leave
adc
jecxz
push
xchg
dec
faddl
dec
lret
sub
cmp
lods
pop
pop
fsubs
popa
and
sbb
push
jl
fsubs
mov
push
repnz
xor
clc
mov
and
aas
popa
jl
dec
mov
mov
sub
push
popa
pop
movsl
push
roll
xorl
aas
je
sbb
mov
loopne
push
cwtl
push
loope
pop
lret
or
mov
loope
add
cmp
out
fs
js
push
sbb
xchg
mov
or
lock
scas
test
sahf
hlt
mov
popa
sub
inc
popa
movsb
push
jmp
or
icebp
ret
push
out
loop
loope
push
pop
mov
mov
push
mov
loope
jno
testl
notrack
pop
lahf
dec
sub
or
imul
clc
cwtl
dec
stc
cmp
jbe
jne
neg
xor
pop
nop
or
popa
loopne
movsb
inc
jno
sti
add
push
addb
pop
adc
popa
or
sbb
push
popa
push
or
xchg
bound
cs
xlat
mov
inc
jp
adc
jae
test
shll
lret
sbb
cmp
mov
or
aaa
in
fs
dec
add
data16
mov
lods
dec
jl
adc
jns
test
xlat
sbb
push
loope
jnp
andb
shl
dec
xchg
jno
jg
sbb
popa
pop
clc
jbe
addl
test
fucomi
cmpb
loopne
mov
test
mov
stos
mov
sub
mov
test
cmpsl
arpl
mull
add
in
andb
std
nop
inc
out
lds
mov
aaa
fadd
add
jo
enter
xor
jbe
test
push
or
stc
mov
arpl
adc
pop
sarb
imul
adc
jle
sub
push
aam
push
movsl
sbb
add
out
and
les
jg
or
and
jbe
xchg
int
popa
adc
ret
cmp
cmp
test
daa
fimuls
popa
xchg
mov
jecxz
je
mov
xchg
dec
push
icebp
mov
xchg
sti
stos
jle
popa
lods
mov
loopne
into
inc
sbb
in
jno
push
das
push
pop
insb
dec
mov
popa
arpl
push
add
icebp
cli
mov
jno
clc
cmp
pop
pop
fwait
sbb
pop
jno
jg
mov
pop
test
ds
out
jae
insb
pop
loop
sbb
mov
sbb
inc
outsl
les
jo
mov
dec
std
arpl
or
popa
xlat
inc
lahf
pushf
mov
cmp
mov
andb
fcomps
cmp
jecxz
mov
popa
mov
dec
hlt
push
popa
inc
add
out
test
loope
mov
gs
roll
adc
jl
jns
xlat
insl
repnz
mov
rcll
push
jbe
fmul
imul
pushf
inc
ljmp
das
popa
cmpsb
and
mov
outsb
dec
cli
cmpsl
pop
enter
sub
int
sub
outsl
sbb
pop
or
bound
push
sub
ret
cmp
int
dec
jle
mov
scas
sbb
lcall
jle
jnp
rcll
lds
dec
dec
shlb
pop
mov
divb
xor
das
add
fs
stos
jne
ret
dec
sbb
inc
popa
shll
out
pop
dec
dec
xor
jge
mov
popa
mov
cli
nop
and
jne
inc
movsb
sub
or
jge
enter
inc
adcb
jno
sub
add
dec
icebp
sub
ds
popa
xchg
mov
push
mov
push
loopne
adc
scas
mov
adc
loope
add
and
into
popa
dec
mov
in
pop
popa
pop
rorl
adc
data16
pop
mov
dec
sbb
popa
and
repnz
jbe
leave
popa
inc
push
xchg
jg
push
sub
cwtl
in
dec
lcall
addr16
lock
sub
push
xchg
ffree
cvtpi2ps
push
movsb
and
aad
dec
xchg
loope
mov
frstor
lret
shll
xchg
or
sub
mov
fiadds
dec
popa
lods
mov
cwtl
jo
out
popa
lock
mov
shll
jmp
lods
dec
ret
outsl
sarb
mov
xchg
xor
jmp
and
scas
fisubl
js
xor
pop
decl
fnstenv
fs
adc
lods
out
sbb
outsl
cmpsl
ret
xorl
pop
or
insl
mov
inc
fs
xchg
cmp
jp
xchg
adc
push
jo
pop
dec
lea
xor
aad
jl
ja
sbbl
cmpsl
sbb
popa
sbb
add
repz
sahf
mov
jo
popf
jle
sub
mov
out
les
sbb
inc
ja
mov
repz
fiaddl
push
cmc
and
inc
lret
stos
push
xchg
ljmp
insl
lods
shll
adc
or
cmpl
push
in
cmp
loopne
and
in
inc
jno
xchg
pop
mov
add
lret
test
out
mov
fdivrl
sbb
mov
jl
lcall
enter
aam
aad
gs
cmpsb
icebp
dec
xor
xchg
jo
push
arpl
push
mov
popa
push
jg
loopne
aad
fistps
popa
mov
lods
mov
popa
pop
jl
inc
in
push
subl
dec
int
sbb
ret
test
push
in
jp
stc
or
popf
jbe
pop
jb
in
popa
mov
out
jae
loope
mov
xchg
aam
mov
cld
stc
xor
daa
shlb
popf
sub
inc
popa
cmp
cmc
loope
lret
jp
inc
mov
popa
push
aaa
and
cmpsl
popa
fwait
jmp
ficoml
sub
es
ss
into
movsb
test
aas
jl
hlt
jmp
mov
lcall
pop
cmpsb
inc
jns
pop
addb
jle
and
sub
popa
nop
jb
jecxz
daa
mov
mov
leave
xor
cwtl
lods
fdivr
jp
popf
call
scas
xchg
test
mov
jg
xchg
testb
sbb
cmp
loope
mov
mov
push
subb
popa
std
stos
jns
cmp
rorb
mov
or
lods
test
into
popa
dec
or
popa
cld
pop
aas
insb
jecxz
cmp
lret
and
icebp
fsubr
bound
xchg
fdivrl
dec
add
mov
mov
cmc
fisubrl
fwait
arpl
sub
and
mov
negl
inc
pop
push
movsb
push
popa
jbe
cmc
mov
orb
and
hlt
addl
gs
bound
movl
in
in
clc
and
stos
and
dec
jge
push
mov
arpl
int3
xor
pop
pop
lahf
mov
popa
inc
push
sbb
repnz
shll
in
fcomi
ror
sbb
icebp
mov
inc
push
popa
subl
lods
cwtl
dec
mov
dec
push
imul
pop
clc
or
push
popa
out
fld
and
cwtl
fs
enter
cmp
xchg
out
popa
fimull
scas
pop
fstl
dec
jne
das
bnd
cmc
lahf
mov
pop
movl
pop
cmp
xchg
mov
popa
xchg
add
shrb
loope
popa
push
loop
gs
mov
in
xor
fstpl
pusha
mov
xchg
push
std
lret
or
loopne
sub
pusha
xchg
dec
cmp
filds
fisubs
loopne
enter
dec
push
push
ja
push
jnp
popa
repnz
add
mov
stc
clc
pusha
decl
sub
lods
in
mov
pop
push
push
xor
rorl
cmp
mov
sub
inc
loopne
cmpsl
dec
out
pop
or
aas
dec
jns
sbb
loop
in
xrelease
mov
fcomps
cmpsb
add
xor
mov
pop
inc
leave
push
test
push
loope
loope
negb
icebp
push
pusha
xchg
pop
or
in
jg
jo
xchg
inc
pushf
in
sub
cmp
sbb
pop
aad
xor
hlt
xlat
imul
dec
mov
and
sub
sub
or
xchg
icebp
ss
fidivrl
push
loopne
enter
icebp
bound
mov
push
push
push
sbb
push
ror
in
mov
dec
xchg
shrl
cmp
movsl
dec
sti
ss
outsb
jle
loop
and
push
jbe
pop
xor
stos
arpl
gs
xchg
mov
daa
stc
push
fcoml
sub
test
idiv
add
mov
popa
insl
and
mov
add
shlb
dec
push
mov
shl
sub
mov
cmc
xchg
pop
ljmp
nop
repnz
add
or
pusha
jne
stos
mov
shrl
jnp
fistpll
mov
sub
jns
lret
mov
andl
loopne
cs
xlat
pop
cli
dec
bound
cltd
shll
mov
pop
cmc
push
fidivl
sub
movsl
fimuls
rolb
mov
outsl
popa
mov
mov
inc
popa
cs
pop
sub
movsl
cmp
push
pop
call
pop
je
mov
mov
add
fistpl
into
add
mov
cmpl
dec
ret
icebp
aaa
sahf
aam
popa
push
lods
xchg
fcomip
xchg
sbb
popa
add
lret
cli
and
xor
mov
pop
movsb
jg
cmp
movsl
xchg
popaw
push
test
gs
sub
imul
cmc
dec
popa
mov
ret
or
jle
decb
aam
orb
sbb
loopne
in
outsl
and
shrb
ljmp
xor
inc
ficoms
in
popa
push
clc
cwtl
cmc
pop
jecxz
or
aas
xlat
fdivr
inc
jae
popa
inc
inc
test
add
pop
rolb
mov
adc
out
fstl
loope
sub
add
xlat
push
popa
out
fcmovnb
ss
and
out
popa
sbb
int3
test
xor
jp
mov
sub
fsubs
shrb
fs
negl
jp
cwtl
cmp
xchg
popa
mov
mov
popa
hlt
sub
inc
aad
ds
fadds
jns
sbb
popa
fnstcw
xchg
push
repz
xor
cmp
mov
shrl
or
sbb
and
cli
xchg
mov
frstor
bound
inc
mov
add
inc
mov
cmc
popa
stos
or
push
inc
add
jb
push
and
popa
clc
cmpsb
cmp
mov
sub
das
jge
dec
ja
adc
sbb
mov
or
hlt
popa
jmp
sub
test
xorl
clc
subl
dec
xor
sub
jae
andl
popa
jo
fwait
aam
aaa
jge
inc
xchg
in
jne
loope
data16
test
dec
pusha
loope
push
push
adcl
sbb
mov
xchg
shrl
xchg
and
bound
decl
cmc
popa
negl
cwtl
fs
xchg
xor
sub
add
xchg
inc
clc
xchg
mov
push
repnz
mov
dec
scas
xor
or
daa
loopne
std
adcl
inc
mov
push
xchg
push
stos
shr
jo
mov
sbb
cltd
popa
adc
icebp
and
gs
sbb
xor
push
cwtl
sti
sbb
mov
cmc
fidivrs
outsl
push
clc
jle
rorl
pop
lds
mov
mov
gs
lods
daa
mov
push
inc
fsubrl
and
popa
xor
pop
adc
sbb
sahf
cmp
in
mov
loope
cmp
push
arpl
xchg
stos
push
fldenv
adcb
lock
int3
push
dec
xchg
pop
pop
js
jmp
and
mov
mov
xchg
lea
imul
fldenv
fwait
sub
adc
jmp
popa
aaa
or
add
lock
push
aaa
imul
jae
jmp
mov
xor
and
cmp
bound
pop
dec
cmp
fs
adc
popa
or
xor
mov
sbb
or
imulb
and
aas
ret
mov
jmp
cmpsl
js
xchg
adc
pop
dec
popa
stos
pop
sub
popa
das
icebp
inc
popl
pop
roll
fmull
nop
mov
xor
add
popa
pushl
mov
testl
iret
mov
popa
les
mov
lea
xchg
xchg
fs
push
js
jmp
inc
imul
xchg
repz
popa
data16
outsl
stc
jg
push
popa
test
popa
clc
je
push
cs
nop
push
mov
push
fildl
aam
popa
fiadds
mov
cmp
mov
aad
cli
adc
pop
loope
dec
rcll
push
dec
add
xchg
adc
kxorw
out
and
in
mov
dec
xchg
outsb
mov
les
push
add
xchg
arpl
insl
rorb
inc
loope
ret
fsubrl
xorb
pop
int
popa
fs
pop
call
lahf
andl
out
fwait
adc
loopne
push
push
fmuls
mov
or
js
sub
inc
dec
dec
xchg
dec
loopne
push
loop
jmp
jns
dec
add
popa
lock
or
mov
jo
fcoms
mov
cmpsl
pop
pop
popa
insl
fdivrl
clc
in
test
jne
popa
dec
mov
das
popa
jbe
test
popa
daa
loop
pusha
mov
out
cmp
and
jle
push
push
add
xchg
dec
inc
bound
mov
rcrl
popa
out
scas
ljmp
mov
jbe
int3
call
inc
push
pop
pushf
dec
popa
lcall
mov
push
popa
jg
pop
jae
outsb
mov
xchg
xor
dec
sub
dec
popa
pushf
aas
cld
test
adc
shll
mov
jl
mov
cmp
mov
lahf
or
mov
decl
lods
popa
mov
mov
dec
ljmp
stos
cwtl
sub
push
popf
dec
xchg
mov
xchg
stc
mov
popa
subl
movsb
xchg
shrl
push
lds
test
fdiv
and
ds
mov
or
popa
sbb
ror
pop
fnstenv
jecxz
stc
scas
popa
jb
arpl
sub
pop
sub
inc
jno
popa
push
stc
dec
shlb
popa
xor
fbld
js
arpl
xor
fistpl
lcall
dec
mov
fdivr
mov
push
rorb
push
jecxz
call
push
inc
or
stc
popa
rcrb
es
push
jnp
daa
repz
mov
xor
pop
xor
mov
lods
jae
dec
popa
dec
mov
je
sahf
out
sbb
shl
inc
xor
insb
popa
mov
int3
mov
inc
popa
mov
repnz
shrb
xchg
mov
in
popa
loop
dec
pop
push
std
mov
aad
ljmp
push
shlb
subps
nop
mov
lods
int3
add
stos
popa
mov
sahf
jnp
popa
ret
jne
fs
dec
dec
sahf
scas
fisubl
jmp
stos
call
out
adc
add
or
cmp
dec
loope
in
push
addr16
xchg
into
lcall
cs
inc
jecxz
jae
popa
sbb
roll
pop
popa
mov
pusha
sub
jo
and
jecxz
sahf
mov
loope
mov
or
mov
sub
outsb
lret
jg
xor
sbb
mov
cmp
cmp
sbb
in
movsl
loope
test
xchg
push
pop
stos
jmp
subb
inc
pop
sbb
cltd
int
add
shlb
or
cli
pop
sub
jae
xchg
dec
les
sub
jg
cmp
popa
mov
inc
jbe
pop
inc
and
push
fs
cmp
bnd
outsl
sub
mov
and
shll
jmp
push
addr16
mov
add
sti
or
jns
int
fiaddl
lcall
in
mov
jmp
gs
cmp
dec
pop
popa
gs
mov
push
mov
popa
pusha
xchg
stc
and
push
lcall
ret
imul
shll
push
movsb
dec
sar
sbb
test
addr16
pushf
scas
pop
hlt
pop
mov
jl
xchg
dec
push
push
test
adc
aaa
sub
or
mov
popa
push
dec
adcl
loope
pop
repz
xor
test
mov
xlat
loopne
ds
inc
ret
inc
xor
loopne
dec
adc
leave
es
icebp
sub
cmp
test
inc
sub
adc
pop
lods
into
popa
pop
pop
pop
mov
push
daa
sar
jno
hlt
and
jae
add
popa
jg
sub
insb
push
or
hlt
or
daa
mov
jb
popa
popf
fcoms
xchg
popa
lcall
cmp
mov
adc
jae
or
add
imul
ffreep
fldl
lea
jnp
mov
imul
rcll
sbb
std
dec
popa
jns
rorb
popa
and
xchg
inc
fdiv
mov
dec
push
mov
jmp
inc
sbb
pop
mov
js
push
xchg
lock
or
adcb
push
outsl
fcomps
loope
xchg
arpl
xor
ffree
dec
mov
fs
mov
repnz
aaa
mov
jmp
xchg
je
adc
test
popa
adcl
loopne
test
popa
push
lods
push
or
popa
xchg
nop
and
pop
or
and
popa
or
mov
sbb
repnz
js
and
sub
or
mov
test
mov
int3
ss
scas
xor
lods
mov
pushf
mov
hlt
push
cmp
lcall
lahf
imul
xchg
pusha
repz
fucomi
faddl
stos
fbstp
jae
popa
pop
pop
and
test
popa
jne
push
insl
dec
or
shll
pop
dec
nop
push
lahf
push
popa
popf
imul
stos
push
or
mov
fsubrp
mov
fs
into
test
pminub
out
std
popa
sbbl
js
inc
test
push
je
inc
popa
loopne
mov
fiadds
jo
mov
andb
loope
in
fdecstp
adc
leave
or
mov
add
cmpsl
cltd
inc
in
popa
inc
rcrl
std
out
cltd
clc
or
jp
fdivrs
jecxz
jbe
inc
pop
cmpsb
shll
push
add
je
jle
pop
insl
fstl
xchg
inc
add
add
dec
xchg
push
and
mov
out
push
dec
pop
subb
mov
cmpsl
repz
jb
jo
push
add
das
cmp
lods
push
jmp
mov
inc
lahf
popa
aad
outsb
popf
jl
cmp
pop
inc
fcoml
lds
mov
popl
and
popf
cmp
sbbb
scas
iret
test
xchg
je
pop
mov
hlt
outsl
bound
movsl
popa
pusha
mov
cmp
and
subb
aam
popa
sbb
sarl
arpl
iret
lcall
fstpl
adc
rorl
xchg
inc
popf
add
loope
int
mov
or
xchg
adc
nop
and
xchg
mov
cmpsl
and
mov
dec
push
fisubl
insb
bound
fildl
mov
loope
mov
pop
mov
and
cltd
jle
cmp
popa
sub
fbld
jo
mov
fsubr
aaa
out
pop
dec
popa
fwait
sub
mov
cld
pop
repnz
cmc
jmp
movsb
add
inc
lret
push
out
pop
test
scas
cs
sahf
sub
popa
fcmovne
mulb
jg
xor
popa
jmp
mov
and
pop
popa
es
out
or
test
fnstenv
adc
push
pop
push
jo
cwtl
add
std
loope
bound
iret
push
sti
cmp
sahf
adc
and
xor
inc
xchg
nop
pop
mov
popf
and
jge
pop
ret
cmp
xchg
arpl
mov
and
fcomip
sub
andl
adc
xor
test
and
pop
mov
pop
scas
sbb
add
inc
xor
mov
cld
add
jl
fiaddl
hlt
push
repnz
dec
cmp
push
xchg
and
xlat
repz
cmp
in
or
iret
jns
sub
adc
push
jno
xor
lock
sub
in
popf
aas
and
shrb
lret
popa
rcrb
dec
sti
mov
mov
popa
test
dec
dec
je
and
xchg
add
call
jne
and
jg
pavgb
loope
je
lds
dec
sahf
jle
pop
jbe
imul
sub
and
xchg
inc
mov
popa
andb
mov
xchg
push
mov
popa
inc
sbb
sbb
mov
out
test
jnp
cmp
jbe
mov
popa
popf
and
sti
inc
popa
push
sar
cmp
iret
add
adc
cmp
or
popa
mov
inc
jl
popa
je
rorb
mov
popa
cwtl
sbb
ret
rcr
je
mov
xchg
shlb
or
sahf
xor
loope
pushf
mov
popa
jmp
pop
out
add
arpl
in
jno
dec
pushf
stc
adc
popa
outsb
mov
in
popa
repnz
jno
mov
leave
popa
movsb
mov
mov
popa
ds
repnz
ljmp
fcoml
ret
jnp
pop
call
and
stc
mov
gs
or
mov
cltd
mov
pop
mov
mov
cmpsl
aad
imul
cli
cld
icebp
popa
shll
out
pop
xchg
mov
clc
cld
dec
adc
mov
popa
inc
or
fstpt
and
and
popf
push
mov
cld
aam
mov
popa
fnstsw
jle
mov
mov
push
punpcklwd
fidivl
popa
ret
dec
or
cmc
adc
pop
dec
outsb
fwait
popa
mov
mov
into
inc
decl
and
mov
aam
lods
mov
lret
popa
jb
mov
xchg
test
fcomi
cmc
push
dec
mov
in
stc
je
mov
dec
cmp
mov
xlat
js
pop
insb
arpl
sar
push
bound
mov
movsb
jne
mov
stc
jecxz
ja
ljmp
add
pushf
sub
xchg
push
dec
mov
jl
inc
cli
popa
imul
add
fdiv
jmp
loop
push
inc
clc
fistpll
punpcklwd
stc
daa
push
das
mov
push
ret
lret
fs
mov
pop
out
in
xchg
popa
insb
dec
lret
push
test
mov
jecxz
enter
mov
ret
lods
test
jge
jbe
lock
pop
cmpsl
push
je
fbstp
jecxz
xlat
mov
pop
push
mulb
cmpsb
pop
sbb
out
push
popa
andb
popa
lds
mov
xor
dec
mov
mov
adc
cmp
xchg
xchg
cmp
mov
popa
sub
std
or
insb
and
movl
push
popa
pop
or
pop
jle
inc
push
aad
shrl
xchg
or
mov
push
pop
cmp
or
pop
mov
imul
xor
xchg
test
je
ss
xorl
or
test
popa
hlt
int3
push
leave
outsb
pop
test
popa
push
sahf
xchg
fisubs
out
mov
xchg
scas
pop
xchg
push
mov
sub
popa
mov
adc
and
and
mov
mov
inc
mov
inc
fdivs
lcall
or
or
xchg
out
sahf
mov
leave
jmp
dec
push
adc
aam
faddp
in
lret
mov
ljmp
cmp
cs
aas
fwait
mov
sub
jae
loopew
push
xchg
clc
iret
scas
cmp
repz
push
and
xor
ja
insb
shrb
jb
pop
or
mov
call
xorl
and
inc
popa
lret
cmp
fisubs
push
dec
fs
mov
cmp
movsb
mov
dec
sbbb
jecxz
ja
jmp
cmp
aad
cltd
cmp
xchg
inc
push
mov
pop
add
sub
jg
add
add
pop
in
xlat
mov
push
popaw
int
scas
aas
jp
outsl
jae
cmpsl
fdivrp
stos
dec
cltd
mov
iret
inc
les
sub
sti
cmc
dec
out
xchg
cs
das
push
dec
popf
mov
popa
jnp
inc
je
dec
outsl
sarl
inc
sbb
sub
into
mov
mov
sbb
fstpl
out
xor
push
cmp
hlt
shr
fbld
test
fsubrs
outsl
mov
inc
pop
push
int3
xor
fistps
push
fmulp
insb
cmp
pusha
popa
les
loop
sbb
dec
cmp
xor
out
mov
add
loopne
aas
insl
mov
xchg
popa
dec
xor
movsl
loope
dec
jns
lock
mov
and
and
inc
mov
mov
popa
repz
mov
stc
pop
push
outsl
test
loope
scas
mov
pop
xlat
outsb
and
loopne
punpcklwd
push
sti
xchg
jne
out
rcr
cmpsl
push
xchg
mov
subb
popf
rorl
das
adc
push
les
fldl
popa
mov
or
add
xor
xor
fcmovbe
mov
loope
mov
or
popa
cmp
iret
sarl
out
jg
ljmp
lret
and
std
int3
inc
pushf
sahf
popa
inc
sbb
push
movsb
fwait
fs
adc
sbb
in
mov
popa
pop
cmp
js
repz
aad
popa
cmpsl
cmp
mov
add
cmp
xlat
rcrb
pop
jbe
jmp
cmp
jno
popa
pop
pushf
push
mov
popl
or
add
das
jbe
mov
dec
ret
loope
dec
test
inc
jge
lods
jp
xchg
push
cmc
les
dec
fisubrs
loope
cmpsb
push
sbb
aam
mov
iret
orl
sti
rcrl
and
bound
dec
popa
cli
mov
jge
jne
pop
inc
ds
jnp
and
mov
sub
xchg
pop
outsl
popa
in
repz
ljmp
js
sbb
repz
popa
fcmove
pusha
xor
sbb
push
pavgb
add
cmp
loope
or
movl
pop
adc
aad
jbe
sbb
pop
dec
shll
inc
lret
push
jp
mov
jge
outsb
cmc
jmp
lock
testb
bound
adc
and
or
inc
dec
jmp
outsl
iret
and
test
adc
roll
scas
fistps
movsl
sbb
sbb
pop
jle
fiaddl
xor
jo
push
loope
add
mov
popa
fimull
aad
jb
cld
popa
sbb
jecxz
lret
bound
test
roll
je
xchg
popa
out
xchg
das
cmp
mov
mov
xchg
cwtl
ds
add
adc
test
in
mulb
test
inc
and
popa
test
scas
jmp
jns
xchg
bound
or
push
in
popa
mov
scas
mov
pop
ss
outsl
pop
mov
popa
test
mov
add
pop
sbb
ret
daa
and
popa
subl
enter
mov
inc
pop
dec
and
and
pop
neg
jne
stos
or
xchg
and
inc
push
mov
test
dec
loope
or
jge
jnp
movsb
leave
popa
mov
mov
dec
in
mov
sbb
inc
fsubl
into
ds
mov
dec
popa
in
repz
js
cmp
sub
dec
fisubl
cltd
lods
mov
pushf
test
bound
rcl
pop
inc
icebp
mov
insl
loop
mov
mov
cmp
adc
fnstsw
sub
cld
pushf
add
mov
lcall
dec
sarl
pop
in
fsubs
movsb
jae
xchg
dec
imul
sbb
push
rcll
mov
and
jmp
xchg
arpl
mov
shlb
fs
ds
movsl
xor
lea
shrb
sub
mov
xlat
mov
jmp
sbb
loope
imul
and
in
faddl
popa
push
scas
mov
popa
dec
push
pop
mulb
cmp
jnp
or
arpl
ficoml
jns
mov
mov
lods
xor
shll
data16
addr16
push
lods
in
jo
repnz
xchg
mov
sub
outsl
jl
and
std
icebp
or
pop
shll
dec
cli
push
in
pop
je
xlat
int3
daa
or
xchg
jae
popa
mov
xchg
out
jecxz
mov
popa
jge
or
jno
xchg
push
jnp
addr16
xlat
sbb
js
jne
je
pop
popa
or
insb
popa
mov
cmp
je
in
callw
popa
inc
xchg
jne
mov
sbb
xor
inc
popa
push
push
inc
int
mov
shll
lock
dec
lods
popa
shlb
and
sub
sub
popa
inc
repnz
out
xchg
jne
popa
scas
mov
imul
dec
cmp
push
push
outsl
xor
loop
and
test
popf
mov
cs
outsb
rcrl
imul
ja
mov
add
btr
add
push
pop
cmp
ljmp
dec
jae
cmp
xor
out
adc
jne
and
nop
je
inc
push
xor
sar
xchg
xchg
out
jmp
push
loope
dec
ss
aas
mov
sar
gs
xor
mov
dec
cmp
sbb
dec
cmp
cltd
ss
decb
lahf
inc
cltd
scas
fwait
dec
hlt
pop
out
pop
loope
add
jge
ret
sbb
mov
mov
in
insl
fstl
or
imul
popa
cld
mov
sbb
jle
pusha
mov
stos
cmp
mov
movsl
psubd
ss
cmpb
lds
dec
and
sub
push
mov
outsl
out
testl
sub
sub
out
insb
mov
ljmp
insl
xorb
mov
out
outsl
sarl
or
imul
mov
xlat
push
popa
xor
call
je
add
stc
adc
jmp
insb
loopne
jnp
push
popa
add
std
pop
xchg
jns
adc
mov
popf
dec
xor
in
shrb
subl
pop
add
pop
cli
popa
push
ds
pop
sbb
ljmp
loopne
popa
sar
push
mov
stos
xor
enterw
shr
fisttps
loopne
bound
xchg
pop
ret
dec
mov
xor
popa
ficoml
dec
rol
mov
iret
ds
push
outsl
nopl
andl
popa
iret
movl
xchg
fcoms
lods
jbe
into
popa
insb
inc
jb
mov
mov
je
test
xor
es
sub
jmp
out
aaa
fs
sti
addb
and
and
lods
lea
adc
popa
xchg
cwtl
mov
js
cli
adcb
mov
mov
popa
cs
test
shrb
sub
lds
mov
mov
add
repnz
push
loope
shlb
mov
sarl
cltd
fsubs
sub
insb
inc
cmp
gs
subl
adcb
xchg
jl
add
xchg
loopne
mov
push
popa
cmpsl
xchg
inc
inc
cmpsb
pop
cltd
push
outsb
lods
inc
loope
add
mov
fs
dec
icebp
outsl
mov
jne
sbbl
ds
dec
fmuls
push
mov
dec
cmc
jno
inc
jne
jmp
and
fwait
inc
push
rcll
popa
cli
and
rcrl
das
addl
pop
push
gs
popa
jb
imul
popa
push
fistpll
adc
jmp
mov
mov
aaa
imul
and
movsl
int3
out
adc
mov
push
rcrb
inc
cwtl
sbb
mov
jo
lret
push
add
cmpsw
loope
or
jb
cmp
iret
jae
pop
mov
mov
popa
fstpt
pushfw
lahf
sbb
cli
ss
push
mov
fsubl
js
notl
popa
mov
push
adc
mov
cmp
cmp
xor
inc
push
inc
nop
cmp
xchg
add
fbld
and
mulb
les
add
popa
inc
pop
xorb
in
loopne
cltd
push
mov
xchg
scas
xor
pop
lret
push
bound
mov
lods
lods
adc
fs
cmc
movsb
pushl
sub
loopne
arpl
in
pop
push
jbe
rolb
or
loope
popa
and
ljmp
mov
mov
or
adc
jecxz
popa
js
or
jb
pushf
push
push
pop
push
adc
pop
cli
aam
shll
pop
stos
pop
xchg
jo
mov
mov
sti
jno
popa
mov
mov
dec
cmp
add
das
popa
xchg
out
mov
imul
test
sbb
jl
out
scas
popa
out
fistpl
mov
push
cmc
jbe
aam
cmp
sbb
andb
mov
popa
enter
xchg
adc
fs
stc
pop
cmp
cli
mov
mov
popa
sbb
daa
inc
fwait
nop
ljmp
movsb
test
push
test
data16
stc
lods
shrb
insl
stos
loope
mov
das
mov
inc
leave
mov
or
inc
add
jae
cmp
imulb
sbb
popa
cmp
push
aaa
mov
mov
xchg
inc
fcomps
cmp
adc
ret
sahf
ja
popa
mov
jl
mov
pusha
or
push
push
nop
sbb
sub
ja
icebp
aam
xchg
ficompl
popa
push
repz
mov
ror
mov
xchg
pop
aad
aaa
insb
cwtl
je
jp
push
sub
push
popa
jno
inc
lret
jo
cs
adcl
test
fsubs
inc
out
call
std
adc
xor
rcr
sbb
call
shlb
xchg
and
xchg
push
rclb
xlat
inc
popa
sbbb
inc
mov
dec
leave
jbe
and
pop
imul
mov
dec
mov
shll
pop
jg
push
loop
or
test
cmpsl
cmp
push
popa
xlat
add
jb
lcall
dec
js
push
adc
push
out
adc
cmp
pusha
adc
lret
popa
roll
push
xchg
outsl
subl
out
sub
mov
loope
push
icebp
sbb
push
leave
stos
shll
loop
pop
aad
std
lahf
and
insl
or
sbb
mov
leave
pusha
jle
stos
mov
rcll
mov
sbb
jge
cmpsb
sub
xchg
shll
cmpsb
stos
shlb
es
popa
out
adc
arpl
movsl
sbb
cmpsl
in
out
mov
mov
dec
ljmp
cwtl
mov
lret
jns
and
pusha
jb
mov
shll
adc
mov
leave
rorb
ret
fidivrs
adc
mov
imul
push
ret
call
jecxz
in
ret
iret
popa
jns
cmp
and
cmp
int
lods
nop
ret
xchg
fs
pop
dec
add
push
out
shlb
fwait
cmpsl
loope
dec
jg
mov
jns
mov
popa
jmp
mov
push
xor
mov
pushf
ds
int3
dec
es
inc
and
sub
adc
loopne
hlt
test
jle
loope
fdivl
repnz
mov
jb
push
xchg
pusha
test
push
mov
popa
inc
aam
rorb
in
mov
push
adc
and
mov
and
mov
shrb
xchg
frstor
or
lahf
push
movsb
push
pop
and
and
sbb
iret
push
stos
pushf
enter
inc
pusha
mov
mov
push
pop
xchg
and
loopne
fs
sbb
frstor
or
fmull
xchg
popa
mov
lods
jecxz
sub
popa
in
mov
fsubl
into
test
pop
and
or
mov
jp
popa
mov
icebp
push
or
call
repz
enter
and
and
scas
jo
cmp
jg
mov
dec
or
pop
lock
mov
scas
andl
repz
iret
adcb
pop
inc
cmp
test
in
rolb
mov
bound
push
xchg
adc
push
xor
popa
pop
cmpsb
mov
inc
ret
fs
icebp
xchg
cmp
iret
mov
arpl
rcrl
rol
je
xchg
cmpsb
popa
jl
out
lea
insb
bound
fs
mov
popa
adc
and
in
popa
aad
mov
jb
mov
adc
mov
pusha
lods
add
ret
gs
mov
push
mov
es
popa
pop
ret
and
xchg
das
lret
mov
fisttps
popa
mov
push
mov
xchg
fwait
aam
jecxz
pop
dec
loope
popa
dec
and
jmp
popa
fldcw
adc
xor
add
pop
mov
dec
push
lret
xchg
aas
popa
push
sub
and
dec
rcrb
ret
popa
pop
xor
sbb
std
push
push
sbb
popa
rolb
insl
pop
sbb
mov
outsb
lea
xor
push
aam
adc
mov
je
mov
nop
jl
popa
xor
push
inc
mov
and
pop
inc
pop
imul
lds
dec
and
mov
push
dec
not
mov
jb
and
push
pop
lds
popa
mov
dec
inc
and
adc
out
mov
jbe
xor
cli
add
pop
loope
push
aam
popa
and
dec
lahf
cs
inc
sbb
and
inc
xchg
test
push
outsb
lcall
mov
sbb
inc
or
shr
fwait
mov
sahf
in
cltd
nop
sub
jle
stos
xor
lods
clc
movb
jae
pushf
cmp
popa
repz
jb
pop
xchg
sbbl
sbb
rcrl
mov
int
sbb
lock
mov
and
das
gs
or
sbb
push
insb
lcall
enter
lods
inc
and
rcrb
mov
inc
shlb
jle
ja
cli
dec
push
rcll
stos
in
sbb
cli
add
mov
add
pop
dec
lds
mov
out
arpl
pop
push
and
inc
js
mov
xor
jp
cmp
cwtl
inc
sub
push
sbb
pop
ds
sub
pop
fcmovnbe
adcl
lret
pop
dec
cmp
ss
mov
insl
xchg
lods
in
jne
mov
mov
js
shrb
mov
adc
insl
jmp
mov
jp
xor
loope
mov
xchg
and
mov
mov
xlat
inc
pop
repz
inc
subb
cmp
fmull
test
xor
mov
push
sbb
xchg
jb
sub
lods
popa
leave
cmp
mov
sbb
std
mov
mov
dec
add
inc
ljmp
imul
push
push
addl
out
bound
sti
mov
pop
les
or
out
push
jnp
mov
cmpl
hlt
clc
out
push
inc
mov
popa
adc
cmp
jecxz
or
push
inc
push
mov
psllq
bound
dec
xlat
inc
adc
jae
cltd
aaa
stc
cmp
nop
push
rcll
std
jmp
pop
leave
loop
test
inc
jl
dec
shlb
pop
sub
sbbl
outsl
pop
fistpl
fwait
jmp
icebp
jl
mov
sti
pop
mov
sbb
lock
in
adc
stc
mov
sub
jmp
add
jecxz
push
sbb
movsl
dec
push
add
mov
in
aad
popa
pop
repnz
or
adc
add
or
jbe
jmp
daa
nop
mov
pop
mov
pop
loopne
loopne
mov
sbb
dec
xlat
call
out
or
and
leave
sarb
fwait
bound
stos
pop
jo
loope
cwtl
repz
push
jbe
push
dec
mov
cld
cs
jge
hlt
pushf
fcompl
mov
jp
inc
lret
jle
fisubrs
repnz
mov
repnz
jae
nop
add
sub
mov
mov
dec
add
in
mov
repz
iret
push
outsl
addr16
std
mov
xlat
xlat
mov
add
dec
cmc
je
pop
fmull
cmp
mov
frstor
xchg
and
test
aas
mov
lcall
xchg
gs
jne
out
sub
imul
aas
inc
xchg
in
inc
lods
cs
pop
or
imul
xchg
stc
ret
or
aam
mov
loop
int
xor
rol
imul
ret
jo
cltd
jb
fld
mov
push
or
pop
ret
sbb
mov
xchg
or
aad
jnp
jo
in
xchg
and
push
mov
adc
mov
fdivr
aad
mov
roll
fcoml
sub
mov
xchg
std
pop
cmp
jl
push
dec
mov
out
or
xor
shrl
or
jecxz
arpl
into
or
shll
ja
iret
nop
xor
js
testb
mov
inc
pushf
sbb
into
dec
and
std
adcl
and
push
dec
xchg
popa
sbb
xor
bound
or
fnstenv
push
subl
rolb
popa
jmp
lret
cmpsl
popa
push
sar
test
fs
dec
and
adc
xor
fwait
sub
push
fldenv
into
jmp
adc
mov
popa
ffree
fwait
out
ja
xchg
sub
insb
sbb
mov
nop
je
xchg
add
add
sub
inc
mov
xchg
lea
lods
add
and
mov
hlt
dec
dec
xchg
inc
sbb
cltd
data16
cmp
shrl
nop
cmpsb
ret
xorb
pop
add
and
add
pop
call
dec
pop
popa
aaa
jl
ss
mov
mov
popa
push
and
es
in
mov
sub
out
lea
loope
popa
rclb
mov
pop
push
xchg
sbb
inc
adc
xchg
mov
popa
sbb
mov
js
repnz
in
mov
pop
fs
popa
mov
leave
sbb
addr16
jne
mov
or
sti
lret
movsb
mov
imul
jp
or
int
and
pop
mov
popa
sub
cmp
in
mov
popa
mov
cmpsl
repz
mov
dec
jg
popa
sti
xchg
ds
pop
fwait
test
out
mov
dec
and
adc
mov
rol
negl
pusha
popa
add
arpl
cmp
bound
rolb
push
mov
shll
popa
cs
or
dec
mov
int3
popa
stos
or
jae
jl
sub
loope,pt
xlat
fnstenv
pcmpeqd
mov
push
sub
test
test
pushf
stos
push
popa
cmp
insb
xchg
je
bound
aam
pop
fs
popa
sarl
jecxz
inc
xor
adc
dec
repz
popa
out
mov
or
jnp
cmp
mov
mov
jp
xchg
jmp
insl
popa
mov
add
or
mov
subl
daa
add
sbb
out
pushf
bound
movsl
mov
call
and
xchg
sub
inc
lcall
dec
or
icebp
fs
xchg
mov
idivb
mull
xor
std
repz
lahf
dec
mov
xchg
fadds
inc
mov
rol
movsb
sub
pop
push
jp
rcll
andb
mov
push
popf
mov
and
mull
ss
jmp
out
xchg
sub
stos
sub
popa
iret
inc
cli
jmp
or
push
popa
in
loop
xchg
test
sub
popa
icebp
cwtl
xchg
leave
mov
mov
jo
push
push
dec
popa
mov
movl
int3
jae
mov
jbe
sub
ret
mov
ljmp
sub
xor
push
inc
mov
aad
popa
adc
mov
add
sub
pavgb
in
popa
pop
ds
sbb
rol
add
or
pop
loop
popa
xchg
int
mov
out
inc
and
xchg
mov
vmovdqu
xorl
fnstsw
mov
or
popf
cmp
popa
push
pop
jae
mov
fildl
movsl
mov
sbb
test
lahf
fdiv
add
jno
pop
mov
or
sbb
adc
push
push
popa
or
mov
xchg
mov
dec
shrl
adc
gs
rcll
mov
xchg
dec
add
add
leave
repnz
mov
xchg
adc
dec
nop
in
in
inc
inc
lods
imul
dec
into
push
fwait
sbb
scas
dec
outsl
sub
xchg
adc
adc
push
xor
or
or
movsb
aad
shll
xor
js
dec
lea
and
je
jge
nop
xchg
mov
push
mov
aaa
jo
push
pop
fimuls
sbb
inc
sub
and
dec
jne
fisubrs
lods
call
inc
in
sub
insl
mov
xchg
add
dec
scas
js
ja
aas
mov
leave
and
dec
inc
dec
push
test
call
frstor
and
cwtl
mul
add
subl
mov
sub
lods
jecxz
mov
out
icebp
scas
mov
imul
add
rorl
arpl
sahf
fistl
outsb
dec
aas
mov
xchg
ret
dec
adc
shr
push
addr16
ljmp
jmp
pop
and
adc
push
dec
divb
adc
mov
into
fisubrl
xor
dec
push
leave
mov
stc
js
insl
fnstenv
arpl
repz
cltd
pop
loope,pn
dec
and
push
or
and
jo
dec
mov
mov
and
inc
sbbb
fdivrs
sub
xchg
dec
ret
jb
ss
ret
or
xchg
scas
lcall
push
out
cwtl
bound
mov
adc
inc
adc
rcl
out
xchg
std
fucom
aas
fmul
xlat
fdivp
test
dec
mov
fwait
dec
xchg
int3
into
add
jnp
loopne
mov
loop
or
jae
ret
adc
imul
mov
mov
mov
popa
sti
shrl
xor
add
out
sbb
pop
sahf
bound
adc
or
loopne
int3
dec
sahf
loopne
fiadds
xchg
lock
mov
out
fstl
cld
movsl
xlat
inc
adc
xor
fstl
and
popa
mov
stos
sub
sub
push
push
cs
popa
divb
js
popa
mov
out
lods
bound
jg
mov
sub
xchg
xor
arpl
notl
inc
leave
lahf
and
cld
xor
daa
data16
xchg
inc
jo
pop
outsb
loope
subl
cmp
and
test
loope
cmp
cmp
sbb
daa
mov
xchg
popa
lcall
adc
add
mov
rcrl
sbb
pop
aam
js
aaa
xchg
popa
outsl
xor
ljmp
xchg
inc
dec
xchg
mov
adc
cltd
popa
jmp
leave
pop
push
jno
out
inc
dec
out
mov
insb
jle
loope
popa
pop
std
aad
popl
push
adc
dec
into
mov
cwtd
popa
iret
bound
cmp
cli
push
sub
loope
fwait
sbb
dec
sbb
inc
test
lea
stos
popa
fnstcw
daa
inc
andl
pop
mov
adc
insl
inc
out
or
popa
lret
iret
jecxz
or
dec
sahf
out
pop
sbb
xlat
push
insl
hlt
fildl
movsb
les
aad
or
dec
jne
dec
sub
lcall
xchg
les
xor
xchg
dec
data16
xor
arpl
in
jbe
and
aaa
daa
cmp
shll
xchg
scas
mov
pshufw
or
xor
mov
shl
sbb
dec
fbstp
insl
add
push
jo
int
jl
es
mov
push
int3
xor
cmc
or
pop
jo
xlat
sbb
push
incl
pushw
mov
cmp
shrb
xchg
int3
and
mov
popa
mov
xchg
adc
ja
out
insb
in
adc
pop
movsb
jnp
add
mov
xor
mov
add
and
aam
fisubs
jbe
notb
sub
popa
fs
adc
jae
das
sbb
les
cwtl
jge
cmp
cs
and
push
js
add
mov
es
ffreep
mov
push
das
mov
popa
int
push
ja
add
popa
fwait
ss
mov
stos
pop
jo
enter
dec
ljmp
popa
insb
daa
cmp
ficompl
add
je
loop
bound
and
ffreep
xor
xchg
popa
jl
mov
popaw
mov
mov
and
cmpsb
jge
inc
push
popa
sub
dec
or
leave
int3
push
pop
je
outsl
fcmovnu
bound
arpl
xchg
lock
pop
inc
movsb
dec
outsl
hlt
jae
inc
and
pop
adc
pop
popa
jge
cltd
in
frstor
inc
sub
fsubl
sar
mov
xor
out
fsubrs
cmpsl
cmpb
pop
dec
bound
cmp
addr16
adc
popa
dec
mov
icebp
mov
ror
and
sub
xor
jge
mov
and
shrl
leave
adc
mov
fcmovnb
pop
mov
stc
scas
mov
cmpsl
lea
pushf
orl
popa
xlat
adc
jnp
sbb
pop
popa
push
shrl
adc
cld
jmp
lret
call
xor
jae
fnstsw
repnz
mov
popa
push
ljmp
popa
imul
pop
mov
incb
add
sbb
push
sarl
popa
ja
add
cs
in
sub
repnz
repz
xchg
ds
rclb
inc
je
adc
cltd
ret
insb
push
sub
and
mov
scas
sub
mov
out
mov
pusha
insb
add
or
and
jns
xchg
popa
mov
pop
fldenv
popa
sbb
fucomi
pop
inc
iret
popa
lret
jne
xor
jl
pop
mov
test
and
adc
shll
insl
imul
cltd
dec
xorl
dec
test
call
mov
push
lcall
insb
gs
dec
mov
shll
inc
sbb
popf
ficoml
cmp
cmp
imul
shlb
lret
mov
testb
xorl
sub
inc
in
fimull
sub
cmpsl
mov
ljmp
dec
dec
addr16
mov
pop
sbb
test
fs
cli
xor
in
lcall
call
push
bound
js
inc
dec
popf
and
jae
popa
inc
pop
sub
xchg
popa
xchg
cmp
sub
sti
popa
mov
jne
out
pop
lret
popa
dec
and
mov
rcl
in
out
and
ss
scas
popf
cmp
pop
mov
shll
mov
popa
push
adc
pop
xchg
popa
add
add
aas
ror
pop
popa
sbb
push
loope
sub
popa
test
shr
stc
mov
fiadds
xor
repnz
pop
sub
xchg
loop
mov
push
jb
testl
imul
cmp
dec
fbstp
xchg
mov
or
push
sti
decl
jl
popa
sub
fwait
wbinvd
popa
fldcw
jae,pt
pop
sub
adc
jo
sub
pop
cmp
jmp
cwtl
push
cltd
sbb
jp
mov
dec
popa
std
leave
rorb
gs
dec
mov
inc
mov
std
lds
leave
test
jbe
dec
cmpsl
jns
pop
test
hlt
loopne
negb
pop
loop
sbb
mov
leave
cmp
cwtl
push
lcall
mov
push
clc
movsl
cmp
pop
out
lcall
push
dec
mov
add
cmp
andb
sbb
pusha
je
mulb
loopne
mov
and
popl
fistl
and
cltd
pop
gs
jbe
ljmp
les
cltd
lods
dec
xchg
loope
and
insl
stc
pusha
inc
hlt
stc
pop
mov
sbb
lret
std
stos
popa
mov
mov
aad
jnp
xchg
outsl
cs
arpl
dec
cld
popa
lock
sahf
insl
mov
jae
push
rcr
pop
dec
sahf
mov
outsb
jp
inc
jae
push
or
ss
inc
mov
imul
fsubr
mov
push
add
lods
push
loope
inc
pop
and
sub
mov
mov
scas
mov
mov
int
cmc
push
and
pusha
or
mov
sub
xor
lcall
stc
nop
add
andl
popa
add
mov
movsl
xchg
jno
mov
dec
pop
push
mov
adc
pop
xchg
scas
icebp
hlt
popa
and
out
jnp
mulb
ja
js
push
sub
iret
push
xor
stos
sti
nop
and
mov
loope
and
xor
rorb
xorl
mov
out
push
cmp
and
popa
xchg
lahf
cli
dec
jge
inc
mov
jmp
popa
call
inc
hlt
movsl
popa
jle
jo
mov
dec
movsb
cwtd
pop
scas
sub
loope
sbb
popa
xlat
lea
fstpt
call
mov
popa
add
mov
out
cwtl
and
daa
ret
jbe
push
push
jno,pt
sbb
les
addr16
shrb
mov
mov
into
dec
dec
nop
add
popa
mov
in
test
jne
mov
adc
mov
jo
insb
cwtl
repnz
inc
popa
push
or
int
adc
outsb
or
subb
ret
js
adc
jns
popa
sub
test
pop
adc
add
pop
mov
jp
mov
jmp
sbb
in
popa
sahf
xorb
mov
xor
jmp
sbb
and
pop
lret
popa
dec
and
add
loop
jmp
mov
popa
fmuls
cld
jo
scas
clc
push
sbb
fwait
xlat
dec
movsb
popa
jge
sub
xchg
aaa
hlt
popa
jbe
stc
push
aad
pop
daa
bound
mov
sbb
sub
fstpl
add
mov
mov
pop
es
and
pop
popf
ret
dec
xchg
or
cmp
adc
out
jae
popa
mov
outsl
mov
test
add
sbb
jb
rorb
adc
clc
popa
sbb
cmpsl
mov
popa
jle
jl
xor
pop
mov
jb
sbb
push
popa
mov
lods
jne
popa
clc
daa
sub
lods
xchg
out
out
mov
movsb
popa
mov
mov
jmp
out
or
leave
mov
dec
rcr
or
sbb
xchg
outsl
adc
adc
xchg
or
arpl
popa
gs
and
add
pushl
bound
lock
add
sub
aas
bound
sub
fstl
repz
dec
xor
outsb
cmpsb
loopne
fucomp
loope
xlat
xor
outsl
std
mov
ds
cltd
or
adc
bts
fcomp
andb
out
insl
or
mov
popf
mov
push
mov
repnz
push
inc
icebp
jp
repz
add
bound
push
or
cltd
dec
test
inc
or
daa
xor
movsb
bound
out
mov
sub
and
add
popa
and
sbb
rorl
xor
jle
cmp
cmp
inc
fldcw
add
cmp
arpl
sbb
nop
fistl
lahf
pop
xchg
sti
mov
push
ss
mov
shlb
pop
mov
push
and
dec
add
outsb
cltd
jl
cmpl
push
das
daa
push
popa
and
test
clc
inc
jns
sarb
fdivr
mov
mov
orl
mov
mov
inc
mov
aas
test
daa
popa
cmovg
add
lods
cld
dec
popa
jbe
shlb
mov
lods
mov
outsl
sub
jge
cmp
popa
xlat
dec
pop
or
cmp
inc
lds
popa
sbb
rcll
popa
lret
test
pop
dec
inc
fidivs
pop
sub
and
popa
scas
cwtl
gs
adc
push
lcall
repz
loop
xchg
clc
pop
mov
push
mov
xchg
clc
inc
popa
outsl
sbb
lods
popa
mov
sub
xor
jbe
sarl
aaa
add
iret
inc
xor
fldenv
and
mov
loope
out
shrb
movsl
sbb
lret
aas
iret
loop
xchg
jp
inc
jno
dec
pop
push
xor
clc
arpl
push
insl
pusha
shll
fnstenv
leave
sbb
aaa
idiv
mov
faddl
out
push
jbe
mov
sub
mov
mov
lods
mov
mov
mov
push
inc
mov
lds
lods
mov
lods
jmp
push
push
popa
into
out
add
rcr
ret
jge
negb
nop
push
sahf
pop
bound
sub
mov
bound
inc
dec
dec
mov
jo
xchg
cmpsl
shrl
xor
out
test
jnp
jecxz
jne
out
sahf
cltd
adc
jg
sbb
mov
clc
jne
sub
push
ret
call
movsb
push
outsw
je
push
ss
popa
mov
out
pop
popa
jge
fsubr
sbb
and
inc
push
out
popf
or
popa
xchg
in
shl
and
dec
popa
rclb
rcrl
jo
mov
ret
pushl
pop
and
ss
popa
sbb
cmp
xor
xchg
lods
inc
aas
add
movsb
movsl
xchg
out
fmul
roll
outsb
sti
cmpsl
popa
jae
jmp
mov
insb
shrb
test
xchg
sti
push
inc
xchg
jmp
and
test
dec
dec
popa
jns
add
aam
adc
sbb
lock
pushf
and
imul
popa
pop
stos
sub
add
andl
fcoms
xor
mov
mov
mov
mull
in
test
adc
test
repz
daa
inc
leave
lods
bound
pop
jae
jns
mov
loopne
popa
fildl
es
movsl
into
popa
mov
cwtl
in
arpl
or
adc
scas
bound
fs
stos
lods
addr16
and
add
add
movl
and
popa
nop
loopne
sahf
push
inc
xor
lods
mulb
cmc
inc
jns
ljmp
sub
pop
aad
popa
cltd
pop
sub
pop
popa
and
ds
inc
ret
sub
fsubs
rcll
mov
popa
xor
mov
push
movsb
inc
mov
fsubrl
lock
loope
mov
xchg
outsl
sub
inc
mov
addb
add
test
xor
push
dec
jecxz
imul
xchg
aad
pop
cmp
jg
sbb
sbb
popa
pushf
dec
inc
call
push
in
rcrl
ja
popa
ret
out
leave
pusha
mov
push
dec
xor
popa
repz
movsl
push
repnz
popa
loopne
mulb
dec
popa
shr
inc
icebp
sub
sahf
xchg
mov
fisubrs
popa
fistpll
arpl
mov
mov
dec
call
sbb
push
sbb
inc
daa
dec
jmp
stos
push
inc
and
mov
repz
and
nop
pop
cmp
popa
out
sbbl
stc
adc
push
adc
xor
and
bound
cwtl
out
cs
and
inc
popa
push
mov
jle
bound
ffreep
mov
mov
hlt
push
lds
sbb
sbb
es
mov
push
sbb
sbb
xor
jmp
inc
outsl
int
pop
aad
xor
xor
xchg
mov
sbb
pushf
push
mov
push
fs
add
fs
mov
xor
sbb
pop
into
popl
push
andl
mov
jbe
mov
int3
push
and
push
push
adc
popf
jno
test
mov
fwait
add
add
popa
out
and
push
mul
mov
lret
push
mov
jo
sti
out
jg
loop
jae
dec
push
icebp
adc
frstor
mov
mov
jl
imul
mov
adc
xchg
xor
xchg
add
popa
js
into
sbb
cmpsb
jg
test
sub
popf
popa
bound
lret
iret
fistps
mov
mov
call
xchg
push
inc
xor
nop
test
or
cmc
popa
addl
mov
mov
pop
sbb
jmp
and
notb
add
dec
sbb
and
mov
popa
mov
das
ficoms
jne
sar
sub
sub
lcall
pop
adc
popa
mov
and
ret
mov
sar
pop
loope
jae
movl
xor
outsl
out
ret
adc
leave
sti
pushf
dec
lret
popa
push
sub
inc
mov
jl
mov
int3
or
inc
inc
popa
repz
cmp
inc
push
ffreep
ret
push
fs
xchg
insl
loope
ljmp
popa
push
loopne
adc
fcmovbe
clc
popa
inc
push
sub
dec
mov
popa
inc
mov
out
add
pop
cld
jge
lods
mov
jg
clc
punpcklwd
int
dec
es
popa
mov
loop
mov
and
pop
mov
jl
xchg
icebp
lret
jno
popaw
mull
sub
js
mov
popa
jns
sti
nop
iret
std
sbbb
loope
cli
cmp
jbe
jge
xchg
mov
cmp
pushl
mov
test
lahf
js
popa
xchg
aam
mov
adc
loope
xchg
lds
sub
fsubs
popa
mov
mov
les
ds
push
ss
popa
adc
imul
popa
pop
or
sbb
cltd
popa
scas
add
inc
int3
movsl
sarl
push
push
xor
cmpsb
loop
popa
mov
dec
fs
test
cmp
rcrb
dec
or
int
int3
popa
mov
fdivs
sbbb
inc
or
adc
or
push
stos
js
ja
fs
iret
sub
int
repnz
fsub
fsubr
icebp
fwait
icebp
sbb
sub
popa
test
into
xchg
aam
aad
js
adc
mov
lcall
and
cltd
xchg
mov
mov
mov
jl
xor
dec
ljmp
imul
cs
mov
fsubs
sub
imul
in
je
outsl
cmp
cmp
ss
jo
mov
fwait
pop
fcoms
in
dec
cmp
mov
orl
outsl
aam
xchg
stc
fsubs
jne
jmp
adc
mov
scas
xlat
popa
inc
enter
dec
mov
cwtl
popa
idivb
push
in
pushf
loope
mov
call
sbb
loope
int3
push
xor
xchg
lds
and
mov
shlb
mov
jp
pop
adc
call
popa
sbb
xchg
and
cwtd
mov
sub
in
add
imul
mov
mov
push
hlt
popa
dec
lcall
popa
jno
repnz
mov
and
inc
adc
push
lret
movsb
dec
cmc
xchg
test
mov
jnp
mov
sahf
dec
push
inc
stos
out
flds
jge
incl
xor
sbb
je
stc
dec
inc
shlb
or
ja
mov
repz
mov
pop
std
insb
lea
add
adc
lahf
rorb
stos
ss
aas
outsl
xor
fs
and
sbb
mov
leave
loope
popf
add
scas
movsl
add
stc
adc
popa
jmp
xchg
lahf
dec
mov
loop
mov
xor
pop
pop
out
pop
jno
popa
outsb
lock
or
pushf
or
popa
cmc
push
mov
cs
gs
in
lds
mov
insb
cmp
imul
popa
out
pop
pop
or
loope
pop
popf
jo
and
data16
push
add
add
ret
pop
cmp
repz
popa
inc
pop
cltd
xchg
dec
push
cmp
popa
loop
dec
add
mov
ficoms
adc
aas
push
in
cli
xor
shrb
cmp
popa
sub
ficompl
and
jp
sub
cltd
imul
and
repnz
push
lods
mov
fists
fs
lods
aad
xor
orl
and
mov
inc
in
sbb
and
inc
out
add
mov
inc
clc
icebp
popa
test
pusha
xchg
cmp
add
clc
push
popa
cmp
out
mov
aam
cmp
mov
in
adc
popa
pop
dec
jl
or
es
adc
pop
movsb
xor
or
popa
jecxz
ljmp
sub
and
loope
mov
mov
add
or
ficoml
outsl
dec
lret
stos
into
sbbl
shll
call
push
pop
push
imul
incl
inc
ret
adc
xchg
lahf
sbb
in
dec
sbb
inc
ljmp
jns
scas
sbb
push
popa
int
dec
push
fistpll
xchg
frstor
inc
fadd
mov
stos
mov
pop
add
inc
add
fidivrl
popa
xor
jecxz
fnsave
sub
movsb
mov
fwait
dec
aas
popa
mov
les
mov
mov
loopne
popa
adc
and
gs
popa
leave
test
stos
or
xor
imulb
pushf
fbld
pop
imul
inc
jae
popa
add
push
rcl
push
aad
sti
faddp
repz
jle
mov
push
icebp
push
sahf
imul
addb
test
mov
rcl
in
pop
into
fwait
test
mov
aaa
popa
sti
enter
stc
xchg
inc
sahf
scas
jl
mov
sarl
in
inc
int3
stc
jae
scas
popa
sub
cs
fsubrl
mov
rcrw
push
andb
inc
adc
sub
or
fwait
popa
xor
jbe
daa
popa
aam
add
scas
jo
xchg
xlat
sub
mov
and
pop
fwait
stos
sbb
fnstcw
push
in
xor
dec
lahf
div
push
nop
mov
push
add
sub
xchg
sbb
popa
push
inc
and
test
push
or
pop
mov
mov
sub
aaa
es
push
das
popa
int
cmp
popf
or
imul
shll
fwait
fs
pop
mov
test
push
xchg
aaa
loope
dec
mov
les
add
add
xor
jne
shr
rclb
fdivp
movsb
lea
or
popa
jp
push
push
fildl
arpl
test
decl
mov
outsl
xchg
xor
jmp
lahf
adc
mov
adc
jns
rcrl
popa
sahf
decl
fbstp
xlat
ficoml
mov
push
movsl
pusha
insb
popa
inc
sub
cltd
pop
je
scas
popa
and
cmpb
sbb
fs
pop
xchg
xchg
popa
scas
ret
dec
mov
mov
popa
inc
std
mov
pop
add
pop
cli
mov
popa
cmp
scas
loopne
fs
dec
ss
xor
inc
sbb
in
into
ja
jns
jbe
pop
loopne
fs
sub
cmpsb
popf
cmpsl
push
push
popa
adc
outsb
shll
adc
cltd
adc
add
out
aaa
mov
pusha
int
cmp
inc
mov
pop
mov
popa
push
dec
cwtl
mov
outsl
pop
lods
and
cmc
or
or
push
push
mov
or
popa
negl
sti
adc
pop
and
outsl
xor
cltd
movsl
out
mov
cmp
rolb
imul
popa
push
and
xlat
pop
push
and
sahf
or
fwait
jae
sbb
lahf
arpl
mov
and
faddl
loop
or
ds
lret
push
shrb
fisubs
dec
pop
fdivl
cmp
imul
or
popa
mov
decb
bound
popa
pop
pop
mov
adc
fdivr
addr16
xchg
mov
stos
subl
insb
mov
fwait
int
popa
xor
push
mov
jmp
sti
in
add
push
pushf
and
mov
jbe
add
pop
cmp
lods
adc
xor
mov
ret
popa
dec
fcoms
cmp
shlb
iret
jae
rclb
cwtl
stos
das
adcb
adc
pushf
pop
icebp
mulb
in
aam
mov
outsb
fbstp
lds
push
push
inc
sbbb
dec
movsl
inc
aaa
aam
mov
stc
fcomip
iret
popa
sub
mov
adc
js
or
xchg
clc
test
add
imul
addr16
cmpb
jp
mov
imul
push
pop
push
push
inc
inc
ds
popa
dec
sbb
sbb
lahf
loope
mov
popa
sti
sbb
jns
int3
add
and
cmp
popa
jl
stos
adc
popa
jae
or
test
in
test
out
mov
insb
incl
pop
movsb
jae
rcr
popa
popf
xchg
orb
jns
sbb
cmp
adc
fwait
lea
xchg
adc
mov
leave
popa
lcall
pop
push
and
out
bound
push
cmpsb
push
and
pusha
push
movsl
xchg
lret
loope
leave
aaa
popf
pop
popa
test
or
sahf
add
popa
push
ss
mov
popa
mov
mov
sbbb
mov
push
mov
cmpsb
iret
gs
popa
movsb
and
sahf
adc
arpl
push
jnp
jle
push
popa
xchg
rcr
mov
inc
frstor
mov
insl
mov
popl
arpl
leave
mov
popa
mov
sbb
test
jle
pushf
xchg
bound
stos
cmpsb
icebp
mov
cltd
mov
arpl
repz
mov
aad
gs
jp
popa
push
addr16
ss
mov
mov
ret
jb
bound
lods
das
loope
call
popa
or
mov
in
popf
sarb
sarb
stos
fincstp
pop
xchg
inc
int
pusha
or
js
xchg
push
je
lret
out
stos
add
dec
jns
popa
push
cld
gs
pop
xor
adc
jno
add
jmp
mov
lods
sub
or
rcrl
xchg
iret
rcr
loope
adcb
addl
int
push
inc
adc
and
pop
add
cmpsb
sub
jno
int3
sub
pop
mov
outsl
insb
enter
or
mov
pop
out
rolb
mov
push
jmp
icebp
mov
xor
out
add
and
xchg
nop
fsubrl
mov
jl
shrd
sub
repnz
mov
aam
cmp
popa
push
mov
popf
fisubl
std
add
pop
push
lock
xor
pushf
cmp
pop
jo
dec
add
mov
xchg
ret
popa
sub
loopne
inc
lcall
aaa
pop
or
icebp
push
out
and
sub
out
jmp
jne
jmp
push
in
fdivs
dec
in
gs
xor
xchg
adc
and
dec
mov
popa
adc
mov
sub
and
icebp
sub
shlb
movsb
data16
mov
mov
dec
imul
popf
xchg
xorb
inc
push
xor
adc
popa
xor
and
int
shrl
dec
jl
pop
jbe
lds
dec
push
test
inc
xchg
and
dec
pop
sub
cs
sub
enter
jno
test
add
cmp
clc
sbb
add
loope
dec
notl
popa
es
clc
fisubs
mov
jns
ret
pop
dec
pop
popa
xchg
test
fdivrp
adc
mov
or
cmp
add
pop
pop
cltd
ja
popf
mov
lcall
out
push
lods
sarl
daa
popa
sti
shlb
xor
inc
popa
movsl
xlat
cmc
xor
xorl
rcrl
test
dec
pop
idiv
adc
std
inc
popa
aas
push
stos
inc
push
sahf
imul
lods
or
mov
jg
dec
lcall
xchg
push
add
popa
leave
fwait
pop
stos
insl
decl
jge
mov
adc
push
bound
int3
pop
mov
cli
and
mov
fwait
data16
dec
sbb
bound
pop
leave
fs
cmpsb
jae
dec
jne
notl
cli
outsl
imul
cmp
int3
push
ljmp
shll
pop
sarl
jle
pushf
sbb
arpl
lods
popa
lock
clc
lds
add
addr16
inc
int3
push
pushf
lret
jb
fs
dec
in
faddl
call
test
xchg
adcb
and
sahf
arpl
outsl
lret
pop
fs
adc
lods
loope
xchg
mov
fnstsw
push
fsubl
ret
mov
popf
xor
fisubl
lret
movsb
push
mov
outsl
or
bnd
inc
sub
sub
cmp
scas
push
xchg
outsb
add
insb
and
mov
rcll
movb
sub
inc
xchg
into
insb
pushf
lcall
inc
lret
shlb
adc
jne
popa
lcall
mov
pop
dec
popa
cmp
punpcklwd
sarb
inc
mov
cmp
mov
or
bound
jae
lods
testl
sbb
ret
popa
vfmaddsub231ps
cs
mov
mov
fs
std
adc
mov
inc
fdivrl
pop
jp
mov
jne
push
mov
mov
sub
inc
into
or
mov
and
mov
xor
jo
and
mov
sbb
nop
add
add
in
dec
add
lea
xchg
mov
xchg
nop
pop
mov
jns
inc
pop
ret
aaa
movsl
sbb
and
pop
test
cs
xchg
std
fdivr
pop
mov
mov
ds
push
xor
mov
pushf
cmp
mov
jmp
jo
pop
aaa
jp
daa
ret
pop
std
mov
shrl
faddp
xor
xchg
sub
mov
push
and
loop
push
cmp
nop
in
or
jns
inc
ret
cmp
decb
push
ss
dec
cltd
iret
jmp
sbb
pop
pusha
push
mov
addr16
push
imul
stc
or
insl
dec
icebp
pushf
jge
jg
mov
mov
sbb
test
popf
dec
loop
sub
and
add
pop
push
popa
lods
inc
mov
pop
pop
and
scas
push
cmp
push
or
push
push
jns
imul
jo
pop
dec
dec
xchg
push
pop
sbb
stos
or
dec
movb
daa
lahf
imul
nop
loopne
cmp
jp
mov
pop
xor
mov
fisttps
jne
add
mov
jge
pop
inc
xor
pop
in
adc
flds
jae
pop
jbe
jne
mov
nop
test
cli
insl
jo
pop
mov
jp
std
or
add
cltd
mov
xchg
jno
jo
rclb
jmp
scas
movsl
pop
jp
leave
dec
inc
push
xlat
out
push
mov
sbb
push
sub
inc
scas
jge
pop
outsl
imul
cli
rclb
orl
es
icebp
das
cmp
stc
mov
sub
adc
sarb
or
lock
cmp
stos
adc
pop
loope
gs
insl
insb
hlt
stos
aam
mov
push
add
push
mov
xor
xchg
sahf
fidivrl
mov
jmp
and
mov
mull
leave
out
in
sbb
in
push
sbb
push
xchg
mov
imulb
push
nop
aad
dec
andb
fidivl
bound
dec
dec
testb
movsl
ja
push
je
pop
xchg
adc
fadds
xlat
dec
push
orl
sbb
dec
mov
mov
and
int
sub
ljmp
loope
or
loope
cwtl
pop
pop
iret
movsb
pop
repnz
dec
mov
mov
inc
xchg
pop
insb
xor
in
ds
xor
das
leave
test
repz
mov
loop
leave
xchg
mov
test
or
mov
jns
add
or
out
aas
xlat
mov
cmp
es
xchg
xor
stos
inc
and
clc
mov
pop
lds
push
mov
mov
push
gs
xchg
aad
insb
repz
into
mov
jae
xor
and
mov
dec
mov
mov
dec
push
std
aas
movb
cmpsb
ret
lods
in
lea
mov
sbb
cli
bound
fisttpl
mov
testl
in
les
sarl
mov
repz
push
xor
sub
dec
mov
lods
lods
adc
ja
xor
mov
leave
mov
jle
push
lods
in
divl
ret
push
sbb
arpl
push
add
mov
sbb
sahf
leave
je
or
jmp
pushf
sub
lea
popa
dec
add
mov
roll
lods
dec
iret
pop
adc
inc
fldt
push
mov
mov
repnz
mov
push
popa
jo
fsub
cmp
dec
jbe
or
aam
loopne
xor
mov
xor
outsl
push
std
popa
and
cli
fnstcw
sub
popa
ficoml
mov
push
popa
sahf
sar
testb
imul
and
dec
xor
mov
icebp
popa
int3
sbb
inc
sti
inc
repnz
mov
bound
xchg
orb
popa
xchg
shr
subl
mov
in
popa
cmc
add
out
gs
addr16
jne
push
popa
add
lods
sbb
xor
mov
lret
cmpl
sbb
psubusw
test
push
sahf
or
popa
sbb
mov
popa
cmp
js
aam
sub
int3
fwait
xchg
jge
sub
repz
enter
sub
push
pop
mov
cmp
int
pop
dec
in
jg
scas
or
cwtl
xchg
mull
pop
mov
sarb
mov
cs
mov
fbld
add
mov
ljmp
cmc
adc
jbe
imull
sbb
popa
int3
fs
adc
xor
ret
shr
xchg
popa
js
aaa
mov
inc
push
popa
movsb
mov
and
aad
add
jmp
ljmp
call
and
leave
movsl
pop
scas
fsubs
imul
bound
mov
dec
js
push
lea
out
inc
mov
pop
xor
movsb
popa
fwait
es
aas
adc
aaa
mov
stos
or
mov
rorb
add
aam
icebp
and
mov
fsubrl
clc
int3
nop
loopne
fucomi
mov
inc
inc
popa
xor
daa
pop
testl
pop
repnz
sub
mov
jp
jns
xor
popf
mov
xchg
sub
dec
fwait
mov
andb
jg
mov
popa
sahf
incl
in
outsl
jnp
loope
ds
adc
sbb
or
mov
rclb
fstl
in
loope
test
jl
flds
sbb
inc
mov
iret
icebp
shrl
sbb
adc
xchg
repz
popa
addr16
popa
lcall
add
sub
sahf
jmp
loope
inc
cmp
scas
in
lds
adc
mov
jecxz
test
jp
fdivr
aad
loope
mov
add
scas
fdivl
and
popa
mov
sbb
popa
inc
lret
adc
fwait
pushf
xchg
popf
popf
mov
decb
enter
inc
cmp
cmp
nop
mov
mov
sbb
mov
adc
je
mov
jg
push
cmp
int3
mov
add
popa
lret
cltd
pop
scas
adc
inc
push
cmp
or
mov
sub
lea
and
xor
add
pusha
loop
imul
pop
pop
adc
sbb
pop
bound
fiaddl
popf
jo
pop
cltd
movsl
out
popa
mov
repz
popa
mov
push
jmp
popa
dec
nop
daa
pop
or
pop
movsl
stos
and
into
push
js
jo
sbb
xlat
dec
sub
in
adc
push
mov
repz
shrl
add
movsb
cwtl
mov
mov
addr16
movaps
daa
mov
mov
mov
sub
mov
jae
pop
sbb
inc
mov
cld
or
jne
jge
popa
and
adcl
bound
jl
pushf
jo
testb
and
xor
xchg
les
fsubl
scas
mov
pop
popa
adc
test
sahf
pushf
leave
popa
adc
cmc
or
xor
popa
je
fs
mov
mov
dec
push
and
push
sbb
push
roll
dec
popa
or
pop
xchg
clc
dec
loop
mov
xchg
fildl
sbb
push
lret
add
pop
cwtl
sbb
mov
roll
fwait
lea
int3
data16
icebp
add
adc
popa
inc
adc
dec
mov
ret
mov
stc
sbb
mov
pop
popa
inc
daa
test
push
fs
xchg
add
fwait
mov
dec
mov
cmp
je
das
popa
dec
adc
popf
dec
data16
mov
pushf
jl
out
dec
lcall
jbe
outsl
int3
clc
cs
xor
cmc
xor
nop
imul
out
test
sbb
das
int
cwtl
roll
out
popa
cmpsb
and
lods
add
cmpsl
xchg
adc
adc
sarl
outsl
jl
out
or
test
push
push
dec
insb
mov
push
push
dec
mov
bound
pop
dec
xchg
inc
push
fildll
in
es
push
xchg
jg
cmc
mov
arpl
pop
popa
dec
clc
adc
ficoml
pop
imul
mov
popa
add
push
addr16
popa
mov
jo
ds
into
and
cmpsl
sahf
pop
mov
loop
jecxz
inc
filds
pop
dec
bound
mov
inc
mov
into
cs
pop
movb
jno
adc
sbb
popa
push
add
mov
fistpll
popa
insl
mov
hlt
add
mov
mov
xlat
fists
ficomps
pushl
mov
cmp
iret
push
hlt
icebp
cmpsl
jbe
add
das
jg
into
fidivl
popa
fld
js
adc
movsb
popa
inc
test
xor
sub
push
cmp
popa
mov
leave
jne
outsl
push
jecxz
mov
icebp
ror
push
xlat
and
nop
push
shrl
test
add
cmp
popa
sbb
pop
sub
adc
inc
push
data16
popa
iret
shrb
pop
popa
lds
sti
pop
popa
sbb
loope
mov
fisubl
aaa
mov
dec
ljmp
pop
inc
cmpsb
sbb
dec
popa
fisubs
cmp
bound
jge
xchg
sub
push
addl
jne
jge
popa
mov
sub
push
xor
add
mov
mov
pop
dec
mov
repz
out
testb
dec
icebp
popa
jbe
xchg
fnstsw
mull
out
pop
jo
cmp
les
inc
repz
push
push
xorb
shrb
fisubs
pop
shrb
or
xlat
mov
subl
fwait
popa
lods
xchg
xor
sahf
pop
mov
fidivs
popa
mov
push
and
and
xchg
stos
popa
mov
cwtl
int3
lods
popa
push
xchg
aaa
inc
jmp
imulb
loop
sub
into
iret
les
mov
sbbl
and
or
push
fwait
pop
out
gs
dec
in
loope
and
sub
ljmp
jmp
fs
cmpl
nop
or
bound
sub
outsl
fs
insb
cmp
pop
cmp
popa
pop
push
std
push
mov
out
in
fcmovnbe
dec
or
jl
sub
mov
lahf
repnz
mov
push
and
ret
cmpb
and
sub
mov
jnp
je
mov
push
popa
push
scas
lods
pop
gs
popa
jne
xchg
adc
enter
pushf
cmp
jmp
fsubr
scas
shlb
in
dec
sti
and
lahf
fistps
popa
out
into
and
adc
ret
jno
jae
adc
sub
or
addr16
jo
cltd
test
jmp
push
inc
push
bound
mov
sub
aas
jle
in
mov
sbb
je
pushf
lea
fucomp
shll
jmp
jge
scas
pusha
dec
je
testl
push
mov
sbb
outsb
lahf
jno
dec
add
popa
ss
pop
std
mov
push
fcoms
rcll
pop
addr16
popf
pop
sbb
inc
popa
shlb
mov
mov
pusha
aam
add
scas
rcrb
sbb
mov
fs
xor
mov
cmp
xor
daa
adc
popa
xchg
les
and
or
add
mov
data16
andl
insb
mov
decb
sub
popa
jp
jecxz
push
fiadds
mov
aaa
popa
js
or
push
mov
pop
fwait
rorb
mov
popf
cwtl
mov
bound
dec
in
xchg
sbb
hlt
and
xor
loope
gs
or
or
popa
xor
cmp
cmp
adc
ret
out
in
and
jl
popa
dec
push
loop
fisubl
arpl
popa
xchg
inc
fs
jbe
je
icebp
dec
arpl
loop
in
push
mov
shll
icebp
push
and
cmp
adc
xlat
popa
inc
out
dec
sub
fdivrl
popf
js
je
lea
push
pop
push
or
add
cmp
mov
scas
test
lret
das
and
stc
xor
pop
popa
dec
xchg
push
js,pn
xor
pop
sti
divl
mov
stos
add
mov
js
mov
adcl
cltd
inc
add
lea
inc
setbe
jbe
mov
or
js
rorl
dec
pop
pop
andb
jae
daa
pop
add
add
dec
or
push
aad
pop
inc
xchg
popa
mov
cmp
dec
inc
fisttps
loopne
movsl
cmp
xchg
into
gs
pusha
jo
daa
pop
push
push
dec
arpl
arpl
xor
dec
ds
pop
sarl
std
cmc
sub
push
cmp
dec
push
sub
loope
data16
popf
test
scas
pusha
dec
aam
inc
mov
iret
sub
push
mov
xchg
or
ja
iret
mov
test
mov
in
dec
mov
popa
xchg
leave
push
mov
pop
std
mov
iret
fisttpll
push
dec
je
adc
mov
flds
aas
repnz
dec
and
inc
add
sti
cmp
xor
jb
lahf
je
cli
rcrl
xor
outsb
xchg
bound
mov
mov
fidivrl
mov
addr16
dec
div
dec
test
repz
lret
std
jns
pop
movsl
movsl
push
and
push
mov
mov
jmp
jns
std
xchg
push
outsl
lods
fs
leave
sub
sbb
xchg
push
arpl
out
sub
sub
fs
cmp
sub
dec
rorb
out
jae
scas
mov
dec
hlt
pop
cmp
dec
jnp
aas
pop
daa
fcoms
stos
andl
cltd
insb
add
in
cld
sbb
jle
cli
cmp
insl
sub
bound
ss
jge
orb
in
in
arpl
mov
sbb
xor
sarb
push
sbb
add
jns
out
movsb
clc
sub
jmp
mov
bound
arpl
andb
icebp
andb
loopne
cmp
cli
dec
cwtl
jno
imulb
adc
cmp
popa
sbb
jmp
aam
bound
pop
pusha
test
cmp
push
fldt
dec
arpl
sbb
ret
or
mov
xor
inc
popa
cmp
cmpl
cmpsl
fwait
push
stos
cld
leave
rcll
stos
xorl
pushfw
mov
popa
orl
fistpll
lock
and
jmp
jecxz
jp
psadbw
xlat
push
loope
sbb
xchg
or
mov
fs
pop
fimull
pop
jbe
inc
jge
push
mov
loope
sbb
popa
cmp
or
popa
addl
xchg
push
or
push
imul
pop
loope
xor
rcll
sbb
dec
push
popa
sub
scas
mov
sahf
fwait
pop
mov
mov
mov
cmp
incb
popf
xchg
loopne
popa
sub
xchg
lods
stos
popa
shrb
hlt
popa
es
ficompl
aaa
xor
mov
xchg
call
into
inc
lret
fistpll
nop
inc
popa
subl
insb
and
mov
mov
dec
sahf
mov
push
rcl
fcoms
ffreep
popa
pushf
lcall
mov
int
or
mov
iret
xor
popa
aad
xchg
popa
icebp
arpl
inc
aam
xchg
or
jl
nop
jge
sub
int
imul
jb
in
fbstp
and
leave
xor
pop
popa
loopne
sub
lret
popa
dec
jo
addb
pop
in
popa
add
sbbl
jne
pop
shll
jnp
popa
jmp
fsubl
popa
aas
jae
je
test
dec
dec
push
mov
ja
insb
test
jmp
popa
mov
sub
ret
daa
pushf
popa
sbb
popa
pop
xor
lahf
adc
add
aad
inc
push
xchg
popa
pop
xor
ss
or
loop
jns
shl
sbb
les
xchg
data16
cwtl
in
and
push
jmp
popa
cmovp
rol
popa
testb
sbb
mov
lds
pop
push
mov
imul
mov
mov
inc
inc
loopne
and
stc
ja
mov
cltd
popa
notl
jbe
lahf
jmp
clc
ss
psrad
xor
sbb
adc
in
dec
adc
push
xchg
dec
rorl
sti
lret
aaa
popa
je
or
mov
nop
pop
mov
sbb
cmovl
loope
mov
lret
into
or
hlt
testl
test
adc
cltd
fidivrs
mov
xchg
cmpsl
jo
fsubs
adc
scas
jbe
and
or
lahf
js
stos
cmpsb
dec
lods
add
pushf
ret
cmp
mov
arpl
sahf
and
insb
arpl
fs
xchg
ja
push
loope
popa
and
mov
or
loop
lahf
and
sbb
ret
cmp
push
in
popa
lcall
mov
push
lock
and
in
cwtl
popa
rorb
pop
dec
cmp
ret
fistpll
adc
popa
add
jb
jg
push
dec
pusha
push
and
add
roll
pushf
pop
xor
jae
aaa
jecxz
or
push
js
rclb
lcall
push
pop
insb
les
or
sti
popa
call
cltd
push
out
jb
movl
mov
hlt
data16
in
jmp
enter
flds
pop
inc
mov
loop
es
mov
sbb
out
aaa
pop
and
lcall
xchg
xchg
fs
loope
or
xchg
fcomps
inc
sarb
dec
jmp
cwtl
pop
rcrl
cmp
cmpsl
dec
or
daa
fstl
icebp
cmpsl
popa
sub
cmp
ret
icebp
cs
add
repz
repnz
xor
pop
popa
jl
rorl
sbb
lds
push
imul
lret
fwait
and
in
push
pop
inc
popa
das
adc
in
out
andl
add
add
shlb
sti
leave
pop
pop
lock
outsl
mov
mov
das
cmp
sbb
popa
sub
mov
int3
fdivr
data16
or
xchg
push
mov
xor
push
popa
lret
and
call
adc
dec
xchg
loope
stos
je
or
and
out
add
xor
mov
sar
popa
or
cwtl
mov
es
popa
aaa
jbe
sbb
add
pop
aam
imul
jo
xor
movsl
jp
dec
jmp
pop
popa
xchg
mov
mov
bound
lea
mov
cld
cltd
and
push
inc
popa
aaa
push
ret
test
popa
mov
mov
loop,pn
ret
add
fs
ret
cmp
fcomps
cmp
bound
stos
jb
cmp
stos
push
jp
icebp
aas
add
add
ret
mov
or
pop
popa
adc
pop
and
popa
mov
mov
popa
outsb
or
cmp
sub
jno
cmp
sub
jmp
or
fsts
popa
cld
inc
inc
movsl
lcall
inc
jnp
cmp
hlt
cmp
popa
fbstp
adc
mov
out
sub
outsl
popa
xchg
js
cmc
inc
repz
in
lret
int3
daa
add
fisubl
rcl
adc
pop
popa
sbb
or
cli
bound
xlat
mov
inc
adc
popa
daa
mov
inc
inc
gs
xor
and
push
test
jb
inc
cltd
or
roll
popa
dec
add
repz
popa
or
pop
mov
or
lds
cmp
xlat
lcall
sbb
jo
pop
movsl
dec
mov
push
inc
popa
icebp
adc
xor
push
jb
outsb
dec
repz
cmp
loop
movsl
mov
aad
fadds
mov
add
shr
in
popa
xor
inc
pushf
inc
ret
pop
mov
jbe
out
jecxz
push
out
push
popa
mov
mov
popa
pop
xor
mov
popa
iret
ret
adc
insb
and
scas
popa
lds
popa
push
xor
pop
popa
dec
cmp
aam
jno
jp
ss
fsubs
cmpsl
inc
jg
out
sbb
rcrl
cmp
repnz
push
push
pop
repz
jo
popa
lds
popa
scas
mov
pop
add
or
cltd
add
test
lea
jmp
aas
lcall
ja
cmpsl
push
adc
inc
push
pop
subl
inc
lock
adc
loope
out
fsave
push
popa
cmc
mov
cmp
mov
cwtl
test
dec
jo
adc
test
shr
popf
sbb
aam
emms
rcrl
outsl
pushf
in
in
xor
fmuls
xlat
aaa
xor
sbb
jl
mov
ret
andl
psubsb
inc
repnz
jg
mov
outsl
mov
in
cmp
adc
ficompl
frstor
cld
jo
mov
sbb
fs
lods
mov
gs
lds
popa
in
cmpsl
adc
scas
inc
pop
popw
test
loope
icebp
pop
ficoms
inc
in
aas
shlb
cli
mov
fidivl
add
jno
daa
aad
mov
shrb
loope
mov
fdivrs
jo
inc
dec
mov
out
xor
popa
les
mov
bound
addr16
movhps
pop
mov
xor
mov
pop
popa
dec
test
test
je
popa
sbb
movmskps
sti
inc
popa
ja
add
cli
pop
add
dec
mov
scas
push
sub
clc
ret
setg
loope
out
or
call
cmp
cmpsb
lret
pop
sbb
cmc
xchg
inc
bound
leave
test
inc
jne
xor
push
lahf
pop
add
push
pop
adc
push
dec
iret
push
xorb
pop
pusha
inc
mov
push
loopne
gs
shll
dec
adc
mov
and
leave
dec
jns
mov
in
ljmp
sub
push
jns
je
inc
push
push
arpl
lods
das
jg
add
adcl
repnz
cmp
mov
loop
xchg
adc
dec
cwtl
push
and
mov
push
popa
std
icebp
leave
sahf
jle
mov
mov
out
cld
shrb
sbb
xorl
dec
push
sbbl
bound
pop
cmp
repz
adc
dec
fs
icebp
dec
cmpsb
js
ljmp
js
bound
lea
sub
push
xor
mov
addr16
hlt
es
sub
sbb
pop
adc
orl
imul
or
jl
xor
add
nop
scas
jecxz
push
mov
xor
jo
mov
in
push
mov
mov
mov
es
mov
add
mov
imul
rolb
sbb
mov
xchg
mov
dec
lods
jo
xchg
or
out
add
out
or
int3
leave
pushf
sub
jae
loope
xor
lcall
cmp
aas
movsb
negl
jmp
pop
cli
dec
cmp
mov
pop
insb
imul
xor
pop
pop
test
xchg
sbb
test
xor
push
fcmovnbe
sub
loopne
jbe
int
sbb
sub
dec
aaa
fildll
popa
mov
add
in
xchg
fs
jle
push
add
ss
loop
jnp
or
sub
pop
jg
xor
sbb
mov
test
fnstsw
cltd
loope
pop
cld
enter
movsl
push
ret
insl
mov
loop
mov
loope
xor
std
popa
inc
lret
iret
cmp
or
dec
add
jno
sbb
mov
jp
inc
mov
fisubrl
xchg
std
popa
stos
rclb
and
or
mov
popa
roll
xor
popa
test
mov
stos
mov
inc
mov
jg
pop
jl
jno
inc
adc
std
dec
out
xchg
push
mov
aaa
sub
repnz
popa
xchg
dec
or
je
xchg
popa
mov
push
inc
cld
mul
mov
push
mov
shlb
push
and
test
xchg
lds
inc
int3
popa
or
xor
cmpsb
in
jecxz
outsb
inc
ds
adc
sbb
mov
arpl
popa
mov
adc
jae
mov
rcll
sub
pop
scas
pop
out
icebp
inc
popa
cmc
pop
push
or
mov
push
bound
inc
dec
xchg
popa
cmp
adc
nop
fs
push
ficoml
sub
popa
shll
in
xchg
bound
xor
popa
push
sti
add
imul
popa
addr16
iret
adc
mov
jg
push
xchg
and
ret
jge
popa
insl
push
mov
inc
popa
adc
fisttpl
in
fldenv
or
and
inc
pop
cmp
andl
sti
dec
xor
scas
in
outsb
dec
dec
mov
push
pop
xor
std
test
jecxz
pop
inc
icebp
xchg
jbe
push
mov
push
inc
xor
mov
enter
jo
cmp
inc
daa
add
popa
dec
xor
pusha
mov
jmp
das
loope
stos
jl,pt
loopne
pushl
mov
leave
rcrl
jo
add
dec
jo
dec
fs
sahf
adc
test
popa
xor
and
daa
in
sub
xor
imul
pop
cmp
inc
xchg
dec
arpl
fs
and
popa
std
hlt
xorl
jno
mov
adcb
imul
test
or
and
popa
rcrl
movsl
mull
cmc
cmp
cltd
popa
test
jecxz
imul
sub
or
cmc
sub
add
pushf
popa
inc
scas
jno
clc
inc
jge
xor
and
out
insb
push
loope
fs
mov
imul
xor
pop
mov
jo
or
add
jo
cs
sbb
xchg
popa
lods
pop
addr16
je
fsubl
inc
lds
fdivr
es
add
cmpb
pusha
popa
or
fdivl
popa
push
callw
andb
es
out
into
push
push
add
ljmp
mov
adc
inc
push
add
jge
inc
sub
test
or
int3
lret
jge
rcrb
xor
and
sub
and
adc
and
jle
jae
sub
aaa
xlat
mov
andl
loopne
lret
pop
popa
mov
rclb
pushf
repz
in
sbb
cmc
push
xor
lret
fwait
pop
push
jns
call
jmp
iret
stos
mov
popa
fcomi
aaa
cmp
cwtl
jbe
outsb
inc
leave
sbb
jle
shll
lock
std
andb
leave
inc
insb
xchg
ja
push
fwait
jo
xor
add
inc
dec
bound
jbe
xchg
rcll
popa
rorl
jb
js
jp
les
lret
mov
pop
int3
mov
jno
popa
dec
mov
gs
jns
arpl
sub
fists
adc
loopne
mov
ds
mov
test
fdivs
pop
cld
adc
adc
adc
popa
arpl
in
mov
sbb
jge
dec
push
cli
pop
insb
int
orl
push
ror
aad
bound
gs
sarl
push
inc
out
fsubs
mov
scas
popa
aad
nop
sahf
hlt
xor
lds
pop
sbb
jp
popa
sub
add
popa
or
cli
fs
and
movsb
jge
popf
mov
imul
inc
inc
sbb
popa
in
or
js
popf
mov
cltd
psubb
push
call
cmc
sub
popa
cli
add
popa
add
repz
mov
loopne
and
outsb
jnp
jo
xor
sbb
lock
roll
push
inc
xlat
out
xchg
leave
cmp
mov
mov
test
loopne
fwait
xchg
in
inc
out
jbe
cmc
mov
sub
xor
popa
cmp
test
pop
dec
scas
cmc
sahf
sti
lock
dec
jecxz
clc
xchg
aam
insb
sub
out
xor
ret
or
popa
les
test
sbbb
shll
mov
add
lret
popa
adc
mov
ja
push
push
fnstsw
mov
rcr
jge
fs
adc
mov
add
or
enter
inc
cmpsl
xor
std
mov
pop
xor
pop
mov
and
outsl
movsb
popa
adc
in
test
and
cmpl
aad
popa
fstl
add
xor
inc
xor
pop
imulb
frstor
mov
aas
mov
clc
jae
or
cmp
cmp
popa
jl
nop
dec
push
push
bound
loopne
xor
pop
push
dec
sbb
popa
push
jg
push
or
in
js
sbbl
mov
pop
std
push
mov
sub
dec
dec
xchg
mov
add
in
ret
or
push
or
gs
cld
insl
aaa
pop
popa
lock
out
rolb
scas
mov
leave
xchg
mov
inc
push
test
mov
add
popa
or
or
cmp
xor
dec
adc
ds
and
pop
xchg
sub
popa
insl
leave
lods
mov
out
adc
adc
dec
and
nop
popa
jb
mov
outsl
pop
push
mov
rcrl
lahf
into
ret
jecxz
xor
jo
popa
lretw
ds
mov
adc
or
popa
ret
xor
mov
mov
out
inc
and
push
addr16
add
insl
repz
fdivs
jno
pop
call
push
stos
jge
xor
je
sbb
popl
popa
test
aaa
pop
mulb
lods
popa
sub
lock
leave
repz
sub
mov
add
jecxz
mov
sub
or
loopne
xor
popa
shll
popa
addl
cs
mov
sbb
pop
js
jns
sbb
popf
imul
movsl
data16
inc
xchg
mov
repz
ja
push
loopne
mov
dec
in
lcall
push
jp
push
pop
xchg
popa
xor
push
adc
stc
dec
popa
add
xchg
cmpsl
arpl
leave
push
fs
andb
dec
and
or
xchg
dec
bound
push
sbb
out
fs
pop
je
js
cmp
pusha
loope
sbbb
lret
repnz
dec
cmp
ja
sbb
push
std
dec
outsb
lods
jae
and
push
fimull
mov
add
inc
ret
and
and
ret
je
push
popa
xchg
push
sti
insb
pop
cli
dec
xor
mov
popa
addr16
push
xchg
test
push
adc
arpl
mov
pop
and
push
inc
xor
jg
mov
xor
loopne
xchg
in
mov
aam
stc
push
cltd
mov
outsl
outsb
add
xor
shl
cmpsb
jns
inc
xchg
std
cmp
mov
loopne
mov
push
ret
pop
std
popa
lret
mov
and
aad
fstpt
add
adc
push
sub
sbbb
int
out
pop
push
popa
scas
push
mov
repnz
nop
add
xor
jae
push
and
and
add
ret
fs
push
xchg
mov
in
arpl
scas
or
lods
popa
mov
ds
loopne
popa
hlt
stos
out
xchg
lret
fs
mov
xchg
and
popa
addr16
xor
iret
mov
adc
je
rcr
popa
sub
or
call
push
popa
dec
xor
rclb
push
es
icebp
jp
pop
ffree
mov
jo
mov
adc
popa
pop
icebp
push
data16
int
popa
pop
pop
ja
in
pop
sub
mov
inc
sbb
fsubs
mov
or
jl
popa
inc
push
in
mov
lret
jp
cmp
mov
movsl
sarl
popa
sbb
lods
scas
stos
sub
popa
push
lcall
call
popl
push
push
inc
popa
jecxz
pushl
sbb
out
pushf
nop
lods
cmpsb
in
enter
or
js
add
scas
fmull
jb
mov
xchg
ficomps
popa
fadds
mov
xor
popa
ljmp
aas
outsl
int3
scas
leave
add
pop
loope
inc
jae
clc
movsb
sub
ja
cmp
mov
gs
mov
mov
int
icebp
push
pop
andb
aaa
cwtl
lock
dec
inc
fnstenv
push
outsl
push
cmp
fs
dec
push
cmp
fwait
and
in
bound
out
dec
sarl
mov
and
push
loope
lcall
ljmp
sub
aas
insb
pop
psrld
popa
lods
inc
and
push
daa
sbb
inc
pushf
pop
xchg
insb
xchg
out
and
dec
popaw
adc
push
add
gs
adc
cmp
adc
mov
popa
inc
cmp
sbb
cmc
mov
popa
mov
shll
icebp
aad
jns
push
jecxz
push
jno
popa
pop
dec
sub
jbe
lods
sbb
shrb
iret
and
in
xchg
stc
lcall
pop
sub
pop
jge
mov
mov
shrl
pop
int3
test
sbb
xlat
sbb
dec
mov
inc
movsl
int
cltd
push
xchg
je
push
insb
xor
cmp
fidivs
dec
inc
lds
mov
xchg
add
mov
mov
mov
ljmp
adcl
mov
sub
mov
out
divb
add
leave
or
gs
jge
pusha
or
xor
dec
sti
icebp
imul
sbb
jo
dec
addr16
fucomi
cmp
je
mov
nop
mov
pop
cltd
lods
aas
xor
mov
adc
ret
popa
jns
movsb
adc
mov
leave
out
mov
incb
daa
lock
gs
fs
jno
ljmp
push
or
rcrb
shll
xor
push
pop
shlb
pop
ror
addr16
in
pop
sti
test
imul
repz
icebp
clc
sahf
jno
add
mov
addr16
add
mov
cmpsl
frstor
inc
push
xchg
push
rclb
stos
loopne
mov
notl
push
xchg
cmc
iret
shlb
mov
insb
ss
hlt
xor
icebp
or
sub
dec
pop
jecxz
fwait
stc
xchg
fisubrs
repz
and
pop
cmpsl
sub
dec
shl
cmc
mov
movsb
push
xor
dec
loope
xchg
mov
insb
stc
xor
dec
sub
cmp
xchg
or
push
mov
jmp
push
xchg
cmpsl
loop
out
in
ficoms
jns
ja
mov
mov
mov
and
gs
add
loope
fldenv
pop
pop
dec
jg
repz
rorb
rcrl
repz
inc
es
pop
push
out
in
cld
pop
jp
loope
jecxz
addr16
rorl
insl
clc
sub
xchg
std
pop
push
xchg
mov
sahf
movb
insl
dec
test
popa
mov
inc
lods
cmc
sub
mov
add
mov
leave
pop
jl
jne
pop
xchg
mov
hlt
mov
sub
cltd
notl
mov
arpl
add
xchg
dec
and
loope
mov
push
icebp
add
sbb
push
xor
imul
cmp
lods
cmp
jnp
and
mov
sub
hlt
int
std
dec
xchg
cmpsl
pop
imul
idivb
dec
xchg
xor
jb
jne
dec
outsb
ss
pop
xchg
out
push
mov
stc
jl
imulb
add
gs
test
movsb
loope
imul
cmp
pop
dec
pushf
inc
inc
cli
and
fcompl
out
xchg
out
mov
outsb
xchg
fcoml
mov
pop
and
pushf
in
add
and
jns
sbb
add
in
gs
pop
jae
je
outsl
mov
mov
mov
sub
stos
ret
add
in
pop
popl
fwait
add
popa
test
aas
sub
faddl
and
ljmp
in
push
stc
dec
scas
xchg
pop
sub
in
sbb
push
mov
or
outsl
xor
icebp
mov
mov
nop
and
popf
dec
lahf
scas
xchg
insb
loope
mov
mov
arpl
dec
arpl
cmp
cmp
rorb
push
xchg
test
into
dec
lods
mov
rcrl
jo
pop
cmp
enter
in
insl
and
inc
data16
dec
jle
fadd
push
and
adc
push
push
nop
gs
sub
or
pop
jne
push
repnz
mov
pop
adc
jae
arpl
sub
dec
fisubrs
pusha
xchg
test
loopne
dec
adcl
andl
add
adc
pop
push
fisubl
int3
loope
dec
nop
stos
and
jns
and
mov
repnz
gs
inc
shlb
clc
loope
sahf
xchg
mov
mov
fs
int3
jno
loop
mov
dec
and
aad
jle
test
add
xor
lahf
or
push
or
add
adc
leave
fwait
testb
mov
sub
les
mov
gs
rcrb
fmull
pop
jle
loope
leave
push
int3
jbe
arpl
push
gs
cwtl
or
dec
jp
dec
push
or
jmp
and
sbbb
cli
popf
cmpsl
xor
aam
or
insl
add
test
in
cmp
mov
mov
fisttpl
xchg
cmpsl
bound
in
pop
push
adc
cltd
mov
or
sub
dec
out
movsb
into
cmpl
xchg
mov
imul
ret
das
fstpt
or
pushf
shrl
mov
xor
add
popa
push
imul
or
pushf
rolb
inc
fldenv
or
call
loopne
mov
pop
lret
loope
je
aam
pushf
push
inc
and
adc
or
out
push
int3
or
mov
lcall
inc
push
icebp
cmp
mov
inc
dec
shrl
mov
mov
xchg
sub
mov
add
adc
scas
jnp
or
adcb
icebp
ljmp
or
xchg
inc
jg
and
push
fcoms
popa
cmp
mov
pop
lcall
xchg
xchg
sbb
add
test
push
ret
shll
mov
ljmp
xor
jae
bound
xor
inc
add
je
inc
xchg
lahf
and
xchg
js
pop
popa
push
aad
and
push
test
xchg
mov
fs
push
inc
scas
push
loopne
inc
lock
mov
shlb
mov
cmc
inc
xor
or
scas
popa
popl
inc
dec
cmp
fs
inc
arpl
pop
fstl
and
dec
inc
inc
popa
pop
cmp
clc
adcb
popa
rorl
test
inc
mov
outsl
and
cs
sub
loopne
or
sub
out
xchg
pop
xor
outsl
push
dec
fsubs
xor
inc
movl
lods
pop
mov
dec
insb
jge
pop
das
and
inc
dec
and
xchg
fsubs
xor
cmpsb
sti
jno
mov
push
sub
loope
pop
xor
sub
xor
ds
jno
aad
adc
subl
pop
jle
hlt
rcr
jo
pop
test
stc
xor
sub
aaa
xchg
or
les
mov
adc
rorl
popa
into
inc
cmp
lahf
mov
mov
xlat
lock
pop
scas
outsb
cmp
pop
cmpsl
js
pop
test
dec
adc
sbb
mov
popa
lahf
adc
andl
nop
sub
sub
fadds
mov
fbld
mov
aam
popa
mov
idivl
inc
bound
add
cli
arpl
lret
pop
ljmp
xor
dec
iret
fsts
lret
ret
shrl
and
into
jp
pop
and
sti
in
bound
mov
cwtl
and
push
push
xchg
and
add
inc
sbb
inc
mov
lcall
sbb
mov
pop
lcall
or
push
mov
fisttpll
arpl
bnd
cwtl
ljmp
or
jbe
push
icebp
popa
inc
test
sbb
leave
rclb
data16
push
in
cmpsb
cmp
ja
int3
ljmp
and
push
popa
xchg
les
fcmovnu
sub
fisubrs
ss
test
mov
push
scas
popa
jns
testb
lods
dec
rolb
mov
sbb
loopne
inc
int
sti
popa
ret
cli
aaa
stos
sarb
popa
mov
out
xchg
jne
or
fadd
lahf
call
jns
psubq
push
push
push
sbb
popa
orl
push
popa
xchg
add
cs
popa
add
mov
fsin
popa
scas
lcall
popa
dec
cmp
sub
add
jge
lahf
push
xchg
jl
icebp
and
mov
mov
popa
mov
xor
fs
inc
jmp
fs
xchg
xor
and
cwtl
xlat
rorb
push
pop
mov
mov
mov
or
fucomi
jnp
push
mov
inc
jo
ret
push
mov
dec
push
push
pop
je
mov
cli
inc
popa
int
xorb
jno
push
outsb
mov
arpl
adc
rcl
mov
or
pusha
in
popa
lret
in
loope
bound
shrl
arpl
popa
and
iret
cmp
mov
mov
pushf
popf
repnz
or
popa
les
mov
mov
fisubl
fstl
and
mov
mov
cld
loopne
xchg
add
andl
and
scas
imul
push
xlat
in
push
cmc
dec
push
and
inc
jp
xchg
lahf
or
outsl
mov
mov
loopne
xor
or
test
ja
insb
push
out
loope
add
flds
pop
stos
test
popa
nop
clc
jae
es
jb
push
std
popa
cmp
shrb
popa
jmp
xchg
mov
xorb
cmc
and
movsb
jg
add
daa
in
mov
inc
inc
popa
pop
std
sub
xor
in
lret
icebp
sbb
popa
inc
jns
test
popa
jo
mov
mov
dec
fildll
cmp
loope
cmc
adc
fsubs
adc
pop
jle
cli
stc
fsubp
add
dec
jg
mov
data16
pop
loope
pop
mov
push
sub
mov
popa
dec
data16
xchg
mov
xor
or
xchg
fadds
sub
in
push
push
mull
popa
lea
and
sub
popa
mov
mov
popa
cltd
jae
mov
fwait
stos
shll
repnz
xchg
adc
jmp
popa
imul
add
inc
dec
mov
cli
push
jb
jno
mov
cwtl
mov
fisttpl
out
lods
xor
and
bound
push
sti
js
pop
xor
stos
popa
lret
add
jb
cwtl
and
mov
js
popa
fists
adcb
or
adc
cltd
jb
xchg
sti
cmp
inc
add
sbb
fnstenv
ja
sbb
stos
popa
in
hlt
into
call
je
pusha
fwait
pushf
subb
dec
popa
subl
into
insb
jbe
shl
popa
xor
cltd
loop
or
fbld
mov
js
cmp
cmc
mov
loopne
mov
push
mov
clc
and
cmp
sbb
mov
out
add
cs
lahf
rorl
dec
jle
dec
loope
cmpsl
and
mov
dec
insb
ficoml
and
popa
enter
shl
stos
outsb
sbb
pop
and
fs
mov
pop
xchg
lret
ret
add
dec
cmp
andl
jne
push
popa
mov
pushf
rcr
or
insb
inc
ss
fs
sub
lret
ja
mov
jmp
push
mov
cltd
mov
lret
jo
out
adc
je
dec
popa
dec
xchg
and
mov
add
and
jmp
xor
mov
bound
push
or
out
add
push
pop
outsb
je
adc
test
fs
dec
cltd
dec
lods
and
mov
sbb
xor
test
xchg
cmp
push
sti
andb
ja
pop
flds
pop
xchg
popa
idivb
jge
popa
je
movsb
hlt
out
or
dec
popa
out
push
add
xchg
ret
xor
data16
xchg
fs
fldenv
xchg
sbb
popa
in
add
fdivl
int
loope
pop
push
adc
bnd
push
push
cltd
add
mov
imul
loope
insb
sbb
push
xorb
jnp
lds
mov
mov
and
add
mov
out
shll
popl
leave
in
push
lret
jmp
fcmovnbe
arpl
ljmp
shrb
xchg
xchg
sub
inc
leave
lods
dec
push
lahf
add
ja
pop
std
repnz
adc
mov
dec
idiv
int3
push
xchg
ret
fldenv
jo
sbb
les
inc
rcll
aad
lods
and
mov
nop
sub
push
lds
loope
and
std
jo
push
dec
mov
fiadds
dec
leave
jbe
sti
jle
sahf
add
lahf
mov
mov
jno
adc
nop
and
stos
fs
out
int
loope
pop
pop
pop
fs
call
imul
adc
mov
cmp
lret
inc
fsubrl
jns
cmc
lahf
imul
mov
shl
loope
popa
rcrl
jo
xchg
mov
push
pop
or
mov
pop
lahf
bound
sub
inc
dec
pushf
in
leave
lcall
mov
jmp
push
or
dec
shrl
icebp
or
pop
xor
jno
mov
jl
arpl
shrl
test
ret
mov
cltd
push
andb
xor
adc
ja
imul
mov
push
and
push
mov
ss
add
xchg
cld
in
or
mov
lock
cltd
das
xchg
loope
mov
jb
in
cmp
mov
daa
add
addr16
adc
test
pop
lahf
call
jae
pop
fstps
inc
nop
int3
pop
add
xchg
in
push
mov
add
leave
fbld
push
inc
cmp
aas
cltd
sti
cwtl
lahf
int
push
lahf
or
and
cmp
mov
mov
jnp
out
call
cmpb
pop
dec
das
daa
ds
push
sbb
push
push
outsl
in
ljmp
jo
loop
out
adc
and
xchg
test
ficomps
mov
pop
xchg
sub
int3
addr16
xor
ret
gs
das
outsl
scas
fsubrp
aam
xchg
mov
dec
jp
sbb
aas
sub
and
mov
mov
rcl
xor
sti
aam
popa
pushf
xchg
out
popf
insl
les
fnstcw
std
pop
push
sbb
fcoms
nop
imul
pop
fisubs
adc
data16
dec
add
push
aaa
adc
sub
jmp
stos
sbb
add
mov
jns
clc
mov
je
sbb
js
mov
mov
push
fs
aaa
xchg
outsb
sbb
cmpsb
inc
mov
movsl
pop
jae
data16
push
mov
pop
imul
dec
or
push
dec
fs
repz
rorl
inc
pop
cmpsb
sbb
popa
or
rclb
mov
scas
pop
das
rol
mov
add
cmpl
mov
mov
mov
mov
stc
out
test
push
add
jecxz
icebp
cmp
xor
adc
in
mov
popa
adc
and
repz
pusha
jp
icebp
mov
and
dec
imul
fdivrl
mov
and
mov
dec
xchg
movsb
mov
fs
inc
orl
adc
dec
std
xor
movsb
sarl
jle
and
mov
into
pop
popa
sbb
aam
shll
hlt
inc
mov
iret
cmpsb
pop
sub
rorb
jnp
lods
jns
les
filds
popa
xor
jl
add
xchg
popa
mov
mov
leave
arpl
addb
and
aad
mov
jge
aaa
sub
mov
insb
inc
mov
xchg
mov
fs
aad
and
popa
dec
mov
sbb
jae
in
sbb
pop
popa
adc
insl
lcall
or
xlat
cmpb
cli
jb
fwait
dec
fcmovbe
popa
ds
jl
stos
mov
out
test
or
addl
or
popa
mov
or
jnp
js
mov
jne
jnp
sbb
mov
popa
dec
shrl
push
or
aad
popa
xchg
repz
add
adc
cmp
and
xchg
insb
mov
in
push
adc
popa
in
push
shrl
pop
es
lretw
mov
add
out
stos
popa
fcmovbe
cmp
dec
push
fisttpll
popa
pushf
mov
popa
xchg
ss
popa
shr
pop
push
outsl
dec
je
popa
pushf
rorb
aam
push
or
xchg
jg
inc
andb
inc
pop
xchg
pop
sub
jae
push
xlat
push
push
popa
fs
faddl
push
test
imul
loope
or
sbb
xor
loope
adc
push
and
xor
jae
arpl
iret
and
lods
dec
mov
fsub
sbb
add
pop
movl
out
cli
pop
lods
mov
imul
insl
cmc
ljmp
lcall
jo
sub
or
popa
test
dec
adc
sub
int3
imul
in
mov
or
xchg
mov
mov
dec
xchg
scas
mov
or
in
mov
iret
jne
xchg
xchg
fidivs
cmp
movsl
inc
les
adc
jmp
std
mov
dec
inc
sbb
pop
ficomps
sbbl
push
les
sub
add
es
jp
xor
pushf
cmpl
mov
aas
sub
mov
sub
jg
push
loop
mov
loope
inc
icebp
push
inc
cmp
movsl
imul
mov
into
call
push
rcrl
xor
pop
sahf
popa
push
stos
pop
inc
sub
pop
and
sbb
adc
inc
mov
and
jg
gs
lock
mov
add
vmovapd
scas
sbb
lret
and
inc
lods
je
movsb
jns
fldcw
dec
inc
mov
leave
movsb
ljmp
pop
pusha
repnz
dec
or
leave
out
loop
testl
aam
sbbl
fcompl
daa
call
dec
bound
outsb
jmp
jne
xor
nop
jno
xor
lahf
cmp
pop
testb
popf
dec
fwait
jl
pop
in
cmp
xor
outsb
rol
push
data16
enter
cmp
bound
mov
cmpsl
adc
or
mov
push
adc
mov
cli
bound
loopne
cwtl
mov
popa
xor
pop
lret
ret
popa
sub
jle
mov
shrl
movsb
mov
sub
mov
dec
orl
fneni(8087
mov
jl
popa
and
repz
cmp
fcoml
mov
roll
popa
add
js
popa
fldt
stc
data16
daa
frstor
mov
jp
jle
imul
or
fiaddl
mov
pop
roll
clc
aad
out
cmp
mov
ljmp
fstpt
popa
popf
mov
push
xor
ss
and
mov
imull
mov
jmp
xchg
push
jb
jge
hlt
inc
add
sbb
popa
pop
push
aaa
push
xor
pop
enter
pop
popa
fadd
sbbl
popa
xchg
sgdtl
popa
rorb
out
popa
js
subb
sti
lds
and
mov
jg
sub
mov
outsl
mov
hlt
xor
xchg
cwtl
je
rcrl
lret
mov
cmp
ret
mov
cwtl
popa
push
inc
js
xchg
push
popa
or
xor
add
incl
rcl
lcall
push
push
or
push
popa
rcl
jno
into
fbld
outsl
cld
cltd
cmc
mov
adc
and
push
mov
jae
les
pushf
aad
inc
mov
mov
mov
popa
mov
inc
vpunpcklwd
in
test
test
sbb
xor
scas
cmp
bound
faddl
and
icebp
and
sbb
jns
xor
inc
aaa
inc
or
bound
inc
aas
adc
adc
popa
pop
out
ja
iret
pop
nop
popl
jbe
lahf
and
mov
jae
sub
jecxz
test
lea
mov
adc
sub
loope
ret
lods
pop
loope
in
cli
popf
jo
push
and
mov
fnsave
xchg
sub
addr16
cmp
adcb
or
mov
or
jno
mov
pushf
cmpl
andb
xchg
aad
popa
clc
test
mov
or
jle
sar
into
or
xlat
sbb
push
xchg
call
flds
push
mov
pushf
idivb
mov
cwtl
addb
lods
popa
or
push
divl
les
mov
lods
mov
cwtl
icebp
dec
popa
cld
mov
in
popa
pop
mov
sti
shll
pop
mov
gs
push
lods
out
outsb
push
xor
adc
add
sub
jl
js
mov
mov
popa
neg
in
roll
aam
sbb
xchg
xchg
xchg
gs
mov
in
pop
movsl
inc
and
push
bound
js
or
imul
in
xor
inc
jns
scas
adc
shrl
dec
jne
cmpl
inc
sbb
adc
aaa
movsl
mov
shll
pop
outsl
xor
aas
jo
dec
sbb
rcll
mov
dec
in
lods
cmpsb
push
sub
sub
dec
mov
sub
and
add
leave
icebp
cs
sbb
mov
loopne
hlt
mov
and
leave
push
scas
stos
pop
pop
adc
es
or
cmp
push
stos
mov
dec
push
test
jne
ror
inc
cltd
jle
sbb
mov
inc
ret
push
popa
movsl
mov
pop
aam
inc
subl
and
push
stos
out
add
or
or
in
sti
dec
dec
dec
mov
addl
lahf
jo
popa
mov
push
sbb
pushw
mov
and
outsb
sub
add
fnstsw
and
jmp
sbb
sub
imul
sbb
pop
hlt
pushf
add
popa
subl
clc
in
jbe
sahf
mov
pop
mov
and
fstpt
sbb
das
shrb
xor
dec
sub
mov
xchg
mov
lods
rcr
push
popa
cmp
test
jl
mov
imul
sub
popa
mov
push
xor
adc
mov
pop
add
test
stos
test
mov
shlb
mov
xchg
popa
dec
fstps
incl
shl
sbb
pop
rorl
cmp
pop
mov
jae
pop
outsl
popa
outsl
xchg
je
mov
pop
push
and
xor
fs
idiv
movsb
xor
mov
add
jmp
shlb
popa
cld
repnz
fisttps
jge
dec
push
add
jmp
pushf
or
mov
and
cmp
pop
xchg
dec
mov
jl
inc
inc
imul
dec
mov
ljmp
pop
adc
xchg
adc
jmp
pop
mov
xchg
aam
popa
inc
adc
cmp
adc
pop
sub
jnp
notl
popa
movq
addb
imul
daa
pop
xor
jb
addr16
shl
dec
popa
divb
aas
add
ret
or
push
leave
fcmovb
popa
cmp
ljmp
push
fmuls
cmp
sub
inc
movsb
insb
jno
push
dec
loop
mov
popa
imul
fistpll
bound
add
xchg
out
push
xor
dec
cli
push
test
cmp
mov
xorb
enter
inc
mov
jae
insl
arpl
inc
push
sbbl
daa
sub
pop
in
fimull
inc
mov
outsw
sub
rorl
and
ds
push
popa
fdivrl
cwtl
add
mov
or
arpl
jg
pop
es
fildl
lds
popa
fbstp
popa
stc
jmp
imul
adc
popa
cs
push
inc
push
push
fwait
sbb
and
in
sub
lock
add
bound
adc
rcrl
in
loope
push
cmp
outsl
xchg
and
and
lahf
pop
inc
pop
testl
and
xor
or
mov
aam
adc
adc
add
pop
fsts
xchg
mov
and
rorb
je
xchg
gs
add
pop
mov
popa
jb
fnstsw
popa
xlat
inc
inc
je
lds
punpckhbw
mov
loope
lahf
xchg
ficomps
aad
fsubl
mov
pop
dec
cmc
outsl
cmp
jp
and
add
cmp
int3
adc
sbb
ja
movaps
mov
mov
jns
jge
cmpsl
push
mov
jb
push
es
cmc
xchg
jae
pop
lcall
inc
push
jg
dec
daa
lahf
in
xchg
in
inc
push
and
sbb
cmpsb
popa
pop
es
lret
outsb
popa
sbb
fldenv
popl
test
add
sti
or
pop
out
pop
and
push
jg
push
test
inc
cmpsl
xor
popa
cltd
repz
aad
fisubrs
mov
insb
ds
mov
lea
adc
popf
add
mov
cwtl
pop
sarl
dec
lea
mov
popa
in
outsl
in
xor
fwait
inc
insl
xchg
inc
add
pop
mov
mov
xchg
pushl
shlb
out
les
in
fwait
addr16
mov
or
outsb
sub
jge
dec
mov
loope
lret
xchg
ljmp
xor
fistps
lods
dec
inc
popa
cmp
or
mov
cmp
ret
popa
imul
push
sub
mov
loope
jle
mov
jo
push
adc
jae
loope,pt
xor
mov
ja
nop
pushf
fisubl
push
xlat
lret
outsl
jo
les
jb
mov
xchg
dec
jp
sahf
fstl
mov
xor
pop
lahf
insb
pop
fs
or
adc
pop
dec
dec
jg
arpl
lret
jae
popa
cld
jp
scas
xlat
or
out
dec
mov
test
popa
aad
add
mov
inc
outsl
lahf
lahf
cwtl
loope
jmp
hlt
popa
or
inc
xor
aam
xchg
andb
mov
popa
adc
stos
aas
mov
pop
ja
addl
int
jle
xor
cmp
stos
push
inc
adcb
imul
lret
xchg
jmp
loop
popa
xchg
in
mov
popa
cmp
mov
mov
jno
xor
mov
mov
mov
push
sti
xchg
sbbl
jle
push
mov
sub
jg
jo
mov
mov
lods
shlb
and
add
popa
fisttps
pop
xchg
cmp
ljmp
push
mov
call
xchg
popa
insb
mov
pop
lods
popa
lret
aas
sti
bound
cmp
rcl
mov
mov
mov
scas
sub
jno
adc
incb
roll
movsb
push
jb
insb
push
cs
aad
pop
sbb
test
pop
pop
popa
data16
fistpll
mov
rol
cmpsl
jmp
in
rcll
inc
inc
xor
enter
and
sahf
xor
popa
std
cmp
popf
inc
lock
cmpsb
fisttpl
in
sahf
shlb
shl
repnz
sub
jle
mov
lret
clc
jg
mov
aas
outsl
shll
inc
sub
popa
shlb
pop
push
loopne
mov
cmp
cmpsb
int
ja
fwait
lret
popa
imul
add
inc
inc
push
jno
bound
popa
xchg
xchg
xlat
jne
jns
jnp
sbb
ljmp
jno
les
in
xchg
stos
pop
push
cmpsl
popa
sub
push
mov
add
aas
xlat
dec
loope
sti
xor
movsb
pop
mov
hlt
rclb
popa
les
and
push
inc
jne
xor
or
mov
add
cltd
adc
adc
popa
arpl
fdivrl
push
sbb
test
pop
popa
mov
aad
jl
lret
push
mov
loope
movsb
aam
cmp
psraw
inc
lret
cmp
or
push
popa
or
shrl
fsubrs
popa
lcall
cmp
leave
mov
roll
lcall
adc
dec
inc
mov
inc
sbb
inc
cmp
cmp
int
mulb
adc
mov
pop
cmpsb
push
cs
iret
and
jo
jmp
mov
jge
xchg
sahf
lods
popa
pop
jg
rorb
jecxz
adc
add
pop
cmpsb
popf
loope
cld
leavew
xchg
sbb
mov
call
test
or
out
jne
popa
and
insl
inc
cltd
cmpsl
fwait
inc
loopne
cmp
add
add
ret
nop
pop
icebp
test
pop
daa
das
adc
cmp
mov
dec
cmpsb
popa
in
lcall
popa
dec
rol
cmp
or
aad
pop
cmc
and
sub
mov
shlb
sub
push
repz
add
hlt
popa
ret
push
xor
and
sbb
mov
dec
out
dec
test
adc
or
fcomp
adc
fmuls
shll
jo
and
dec
in
xor
psraw
into
leave
push
stos
stos
push
lret
pusha
je
jnp
call
xchg
jge
repnz
add
loope
leave
mov
jns
out
out
fisubs
popa
insl
push
outsl
in
jg
sbb
or
add
ljmp
dec
pop
mov
sbb
xchg
dec
ljmp
je
dec
enter
movb
cmpsl
mov
fstps
inc
pop
test
dec
push
jecxz
dec
jle
pop
mov
mov
or
and
sbb
sbb
jb
inc
dec
fsubrl
loope
pop
xor
movsl
scas
mov
popa
jne
incl
cli
cmp
and
bound
push
scas
mov
jge
adc
jo
je
jmp
push
fstpt
cmp
and
mov
pop
inc
jo
lret
jle
pop
add
icebp
aaa
or
es
lret
push
rcll
movb
push
or
adc
popa
adc
mov
inc
popa
mov
or
cli
jno
inc
push
shl
add
or
clc
call
cmp
in
stos
pop
pop
sub
mov
aaa
cwtl
xchg
test
mov
ja
mov
adc
repz
push
add
xchg
lea
xchg
outsb
repnz
lret
imull
jge
js
mov
mov
jle
ret
pop
pop
jne
mov
pop
lcall
fisubrs
das
loope
mov
or
mov
cli
ret
popa
fcompl
aam
bswap
jmp
sbb
add
jecxz
sub
popa
adc
and
pop
test
or
dec
push
fs
stos
inc
mov
adc
int3
aaa
sub
rclb
pop
lods
popa
jb
das
or
xchg
add
popa
mov
adc
jo
lahf
mov
add
pop
mov
mov
bound
hlt
es
and
stos
cmp
mov
cltd
outsb
popa
mov
loop
xchg
fxch
addr16
stos
daa
imul
cmp
adc
mov
pop
ds
movsb
out
cld
xor
mov
inc
dec
hlt
clc
sbb
loope
loopne
ja
mov
dec
jo
out
add
inc
and
cmp
mov
mov
inc
popa
jle
mov
out
popa
mov
sbb
dec
push
mov
mov
or
sahf
mov
je
lods
jnp
lcall
es
mov
dec
jecxz
mov
fistl
dec
je
pop
push
jbe
dec
pusha
lret
cltd
adc
into
mov
movsl
push
ljmp
ss
push
cmp
jns
pop
pop
adc
lea
std
roll
in
mov
push
shlb
clc
lods
cwtl
push
inc
loop
fldcw
int3
inc
push
loop
leave
jp
add
xor
pop
bound
outsb
cs
mov
and
cmp
shll
jns
insl
popa
idivb
call
sbb
mov
in
xor
popf
addr16
cmpsb
jp
pop
and
rorl
and
add
pusha
imul
xor
dec
push
loope
shrb
ss
cmp
popa
push
push
loopne
pop
inc
mov
popa
inc
sarb
add
lahf
sti
fdivrs
add
push
out
mov
test
int
add
push
sbb
pop
loopne
push
add
push
pop
push
or
add
cs
rorl
and
pop
mov
xchg
push
push
pop
xchg
fmuls
ss
popa
pop
popf
lcall
jmp
pop
sahf
push
out
popa
fcomip
push
insl
inc
ret
mov
sbb
popa
sbb
sub
arpl
insl
jnp
pop
dec
push
jg
fs
pop
xchg
pop
jge
test
scas
ja
outsb
jmp
fcomip
dec
jnp
test
mov
bound
aam
mov
outsl
popa
testb
xor
popa
mov
ret
stc
arpl
popa
add
movsl
inc
cmc
insl
loope
rcrl
test
mov
lock
push
jl
stc
test
cld
scas
popa
sbb
jno
mov
scas
les
and
fsubl
ds
test
push
lcall
insb
dec
mov
sbb
push
ret
cmpb
fcomi
sbb
movsl
lahf
popa
es
dec
push
cltd
test
inc
movl
add
orb
mov
popa
sbb
ffreep
popa
rcll
loopne
fdivl
pop
adc
addr16
fs
add
jg
dec
dec
loope
jp
cmpsb
add
popa
bound
stos
xchg
inc
das
out
xor
cwtl
inc
outsl
cld
shr
jg
popa
movsl
jo
mov
popa
imul
lcall
rcll
cs
pop
das
add
popl
data16
jnp
push
lea
pop
xchg
popa
call
adc
lods
popa
dec
mov
in
jg
je
pop
js
mov
cltd
bound
out
std
push
inc
adc
sub
mov
mov
jg
rdtsc
jo
pop
and
lcall
bound
add
lret
jne
dec
sbb
out
cli
fs
bound
addr16
subb
jle
xor
and
faddl
rcrb
inc
inc
mov
and
mov
aas
out
adc
fwait
loope
add
sub
out
popa
sbb
negl
insl
lcall
mov
stc
sub
mov
or
mov
cwtl
push
dec
xchg
cmp
fs
adc
outsl
inc
popa
inc
pop
shll
sbb
repz
mov
and
popa
mov
pusha
mov
jno,pt
sbb
mov
popa
jb
sahf
adc
leave
popf
xchg
rcl
popa
adc
shr
sbb
imul
mov
cmpl
call
jne
mov
pop
push
mov
fsubp
push
fwait
mov
mov
in
mov
cmp
or
cmpsl
arpl
popa
pop
adc
push
sbb
mov
popa
out
jecxz
divl
jge
and
cmp
fldenv
push
loop
bound
outsl
mov
nop
out
int3
fs
jne
xchg
cltd
fwait
inc
jmp
and
cs
call
mov
jne
lahf
or
or
adc
add
jns
mov
mov
xor
mov
jle
mov
push
and
in
cs
dec
popa
mov
pop
in
outsb
mov
dec
fs
ss
cmp
jo
int
hlt
and
adc
xor
out
push
popa
in
sub
or
pop
adcl
jnp
and
xchg
sti
push
push
mov
arpl
inc
push
popa
insl
cli
pop
fcmovbe
inc
or
icebp
fcompl
jecxz
cmp
ja
fwait
xchg
popa
lret
ljmp
xchg
dec
shl
fsubr
pop
fsubl
xchg
loopne
jmp
movl
add
push
pop
roll
nop
adc
call
jge
mov
test
sbb
stc
loopne
adc
jbe
mov
mov
iret
cmpsl
lock
call
jno
stc
push
pop
popa
push
nop
jecxz
test
xchg
dec
cmp
and
add
and
mov
mov
test
popa
push
inc
cmp
mov
insb
popa
rorl
jbe
pusha
pop
bound
dec
dec
mov
int3
popa
cld
sub
cmpsl
xchg
aas
lods
popa
xor
stc
pop
and
shlb
push
xchg
cmp
mov
movb
mov
add
popa
rcr
das
or
in
mov
mov
roll
sbb
jg
ss
aam
push
stc
xchg
daa
mov
xchg
je
test
sub
xchg
imul
cwtl
and
je
fdivl
inc
sahf
or
stos
popa
jp
in
cli
les
mov
ja
jo
xchg
adc
imul
pop
into
mulb
ficoml
pop
push
adc
popa
pop
dec
mov
jo
jne
pop
sahf
popa
inc
and
clc
push
subl
mov
and
les
mov
aaa
mov
mov
add
ficoml
cmp
data16
push
test
xchg
pop
push
popa
sahf
add
push
outsl
cmpsb
in
jb
out
popa
sbb
inc
mov
sbb
popa
inc
outsl
outsb
pushf
xchg
gs
push
jne
mov
push
lods
imul
push
popa
shlb
push
adc
arpl
scas
fsubs
xor
bound
sbb
popf
mov
popa
sbb
shl
jb
lods
dec
mov
repz
dec
jne
popa
aam
hlt
xchg
jp
adcb
mov
into
cmpsl
and
sbb
fwait
ja
sbb
sti
sub
or
xor
sub
pop
mov
aam
fidivl
or
lock
popa
cld
ret
loopne
je
clc
idivb
pop
mov
or
push
ret
mov
jb
pop
dec
inc
popa
je
mov
and
pop
cmp
in
popa
mov
or
out
fwait
jns
popa
fidivrl
pop
cli
push
mov
in
popa
aad
pop
xchg
out
mov
and
adc
in
or
cmc
js
push
mov
aas
add
out
int
clc
push
mov
pop
jge
or
aaa
out
cmp
popf
xor
or
std
jl
fs
int3
dec
call
ret
es
pop
xor
scas
les
pushf
sbb
aam
add
jb
inc
out
fstpt
mov
xorl
inc
xor
and
lods
popa
xor
xchg
mov
mov
adc
or
xor
cld
lret
and
hlt
xchg
ja
adc
idivb
lods
push
mov
les
and
lahf
sarl
add
subb
dec
pop
inc
fcoms
mov
popa
pop
scas
call
imulb
add
jge
loope
popa
and
sbb
dec
bound
xchg
sbb
in
popa
scas
test
cmp
rol
ret
dec
or
sbb
mov
xchg
and
popa
adc
orb
jnp
push
popa
push
jle
sti
cmp
mov
fs
jno
and
dec
cwtl
fadds
mov
pop
jae
int
stos
popa
pusha
fistl
sarl
push
cltd
mov
inc
bound
xchg
push
shrl
xchg
fdivrl
push
aas
mov
fs
out
push
push
les
test
mov
aaa
jg
and
xor
push
mov
popa
rol
lock
dec
popa
push
ljmp
fs
pop
sahf
add
clc
jb
cmp
push
lods
inc
push
arpl
mov
mov
cmpsb
jl
pop
rcrl
cmp
push
xor
add
pop
pop
std
stos
and
mov
fadd
mov
das
pop
outsl
mov
mov
shll
lds
adc
xor
push
hlt
outsl
je
rorl
jno
add
jle
and
jl
loopne
or
inc
jo
cld
cwtl
sub
push
xor
pop
dec
stos
inc
xorl
nop
aaa
fbld
fxtract
inc
popa
das
pop
cmpsb
sub
scas
adc
popa
cld
cmp
aaa
mov
and
cmp
xchg
mov
fnsave
sarl
insb
lret
fimuls
arpl
test
loopne
push
inc
repz
popa
pop
out
mov
pop
inc
shll
in
push
in
js
push
pop
jno
call
inc
and
rcll
pop
enter
mov
gs
repnz
aam
shlb
mov
jle
scas
push
mov
dec
stos
fs
int
mov
out
sub
cmpsl
jns
jne
adc
bound
sub
dec
jp
push
xchg
hlt
and
dec
iret
pop
mov
mov
sub
fsts
push
push
sbb
inc
xchg
popa
notb
adc
hlt
fistpll
fiaddl
cmc
pusha
fdivs
enter
push
xor
jmp
xchg
lds
arpl
std
adc
mov
cmp
jge
int3
push
dec
icebp
xchg
mov
mov
lods
or
sbb
enter
in
sahf
loopne
popa
sti
shlb
add
lock
cmp
mov
xor
lock
xor
aaa
je
test
xchg
mov
aad
aam
popa
dec
or
rcrl
sbbl
lods
mov
roll
or
mov
popa
jecxz
adc
cmp
xor
and
or
and
repz
sti
dec
mov
adc
in
mov
popa
das
sbb
cwtl
mov
mov
sbb
sbb
mov
ljmp
cmp
xor
and
pushf
into
outsl
cmp
push
popa
add
add
add
mov
rcrl
fcmovnbe
fisubrs
scas
jnp
imul
xor
jle
movsb
mov
jge
inc
fs
xor
subl
add
dec
push
lds
jl
sbb
popa
cmpsb
jp
mov
mov
shrl
pop
fisubs
nop
repnz
pop
js
scas
mov
jnp
insb
stos
pop
sbbb
call
dec
decb
popa
dec
pushl
pop
inc
lahf
in
xor
loope
in
cli
jnp
push
leave
mov
outsl
jb
scas
arpl
jbe
mov
lea
popa
pop
add
mov
test
add
add
add
pusha
into
popa
cmpsl
out
rorb
adc
inc
sub
xchg
loope
ljmp
aad
rsqrtps
mov
push
jno
popa
jbe
mov
aaa
sub
inc
inc
popa
add
xor
popa
dec
inc
je
adc
sbbl
push
loope
nop
sub
popa
int
mov
mov
mov
cmpsb
cmp
xchg
nop
mov
jmp
les
pop
pushf
repz
nop
popa
add
and
popa
jo
repz
inc
pop
out
popa
mov
mov
out
jg
cltd
pusha
mov
push
insl
jp
pop
jg
or
mov
popa
mov
dec
mov
xor
or
mov
dec
andl
adc
std
out
repz
data16
mov
popa
inc
ds
filds
ficoms
popa
jp
dec
or
lret
or
lods
pop
push
shll
fs
call
xor
insl
mov
call
sbb
adc
imul
ret
popa
fbstp
lods
cwtl
sbb
mov
nop
imul
leave
jno
out
insb
inc
xchg
std
mov
xlat
jl
and
arpl
sahf
or
mov
icebp
sub
cmpsl
mov
and
push
add
sub
aaa
rcrb
xchg
push
xor
dec
lret
mov
popa
scas
mov
cli
sub
cmpsb
sahf
shl
jle
and
in
mov
xor
add
add
xchg
dec
inc
sti
popa
push
fmull
in
aad
popa
push
pop
test
aam
inc
push
outsl
popl
sarl
in
test
inc
insb
sbb
push
cltd
add
mov
lds
jno,pt
stc
adc
mov
sbb
inc
test
mov
sbb
mov
clc
popa
mov
sarb
dec
inc
pushf
jo
stos
xchg
cltd
mov
add
xorb
cmp
push
and
adc
in
xor
inc
xchg
mov
bnd
aam
bound
dec
sub
add
pop
je
push
mov
cmp
or
das
fadds
push
dec
popa
in
pop
pop
out
mov
dec
test
jo
popa
sahf
sti
decl
jne
cmc
pop
jo
mov
mov
mov
push
mov
push
insl
and
scas
and
lods
call
xor
arpl
dec
jl
cmp
mov
gs
or
mov
cmp
insl
mov
mov
lods
pop
sbb
jmp
popa
pop
mov
mov
adc
inc
mov
idiv
insl
ja
mov
mov
or
leave
bound
xchg
sbb
in
push
inc
js
out
outsb
pop
jmp
rorb
vphsubdq
ljmp
xchg
sbb
fs
and
mov
loopne
lock
test
jnp
pop
loop
ds
inc
ljmp
push
loopne
jl
aam
and
out
push
cmp
lock
sub
ljmp
xchg
lods
fistl
lock
mov
leave
call
adc
and
out
adc
js
xor
ret
mov
ja
and
pop
xor
shlb
insb
insl
xchg
dec
jecxz
xchg
dec
mov
test
sub
fs
iret
sbb
pop
jnp
sbb
movsl
or
dec
push
je
push
int3
cli
sbb
inc
aam
sbb
pop
pushf
jp
add
dec
mov
mov
inc
fwait
mov
or
add
mov
xor
outsb
push
dec
shlb
inc
sbb
pop
push
mov
inc
mov
mov
add
lcall
bound
pop
lods
fidivrl
arpl
push
and
push
mov
ljmp
inc
test
iret
push
dec
cmp
lahf
pop
jp
mov
mov
mov
aaa
ljmp
mov
test
repz
sub
outsl
add
lea
addr16
mov
jecxz
push
repz
xor
mov
scas
iret
popa
or
pushf
xchg
jo
sub
out
xchg
push
mov
sbb
iret
aad
scas
jo
rclb
loope
xchg
mov
sbbb
and
outsl
add
xchg
popa
ret
push
sbb
push
push
imul
adc
cmp
or
and
jl
inc
in
fucom
fsubl
or
je
mov
in
push
jp
push
popa
mov
rolb
mov
stos
or
call
push
pop
mov
mov
jmp
popa
lds
or
je
enter
and
sbb
jae
popa
insl
mov
faddl
popa
jmp
orl
cld
enter
add
test
outsl
mov
rcrb
filds
sahf
loope
nop
inc
cltd
rcrb
dec
xor
call
add
int
bound
testb
push
pop
popa
jmp
sbb
stos
mov
in
xchg
movsb
popa
filds
xchg
pop
movl
push
enter
rcll
cltd
jecxz
test
mov
cmp
test
and
sub
popa
aas
adc
sub
push
divl
pop
push
inc
adc
sub
nop
faddl
lahf
dec
cmpsl
inc
mov
dec
pusha
loope
pshufw
jne
mov
mov
jle
in
xchg
ds
aaa
insl
lods
popa
outsl
dec
inc
mov
popa
sbb
notl
pop
mov
rcrb
out
imul
mov
hlt
dec
popa
aam
negl
and
lcall
xor
movsl
pop
rcrl
rcl
leave
xchg
sbb
shlb
inc
sub
inc
pop
movsb
pop
dec
fisttpll
mov
fwait
loopne
je
pushf
and
mov
mov
xchg
dec
and
popa
push
nop
push
gs
test
jae
stc
fucom
mov
pop
lea
mov
xlat
add
jae
xor
lods
imul
loope
or
shlb
test
pusha
mov
jmp
std
mov
sub
aam
mov
sub
push
add
jle
call
insb
rclb
insb
in
or
push
and
mov
incb
dec
lea
loopne
mov
outsl
sbb
add
inc
call
loopne
push
push
js
pop
mov
add
mov
out
mov
xchg
fldt
ljmp
cmp
cwtl
sahf
popf
rol
xchg
jo
insb
and
loope
test
jne
mov
popa
loope
xlat
mov
mov
in
icebp
sahf
fs
lret
inc
xor
repnz
lods
or
scas
fbld
clc
test
or
shrl
mov
icebp
popa
jae
ficoms
adc
popa
xchg
jp
notl
rcrb
fstl
add
push
loop
and
adc
in
xchg
aam
rorb
sbb
or
cmp
and
xchg
sub
lock
popa
cmp
jns
push
or
mov
mov
ret
cmc
popa
and
dec
hlt
push
es
or
nop
pop
andb
push
ud1
and
jnp
sti
dec
stc
lods
mov
bound
jns
insb
loopne
fsub
cmp
sub
or
mov
popa
xlat
xchg
add
es
loope
mov
icebp
xchg
cmp
dec
ja
sub
mov
addb
pop
js
xchg
sbb
xor
in
rcrb
jge
xor
inc
xor
jp
mov
popa
mov
and
popa
cmp
enter
mov
sahf
dec
std
jecxz
inc
pop
popa
cmc
push
sti
sub
loop
popa
icebp
push
cwtl
cmpsb
cmp
jg
push
mov
popa
cmc
cmpsl
mov
aas
loopne
fisubl
sub
mov
popa
xchg
or
add
jo
int3
pop
int
in
ret
popa
movl
pop
mov
and
jns
stc
push
popa
sbb
popf
fimull
sbb
popa
adc
test
int3
mov
inc
popa
data16
cmp
cli
lods
mov
cld
out
cmp
mov
mov
mov
mov
dec
testl
aaa
jb
popa
lock
sub
fsubrl
popa
and
arpl
mov
mov
into
icebp
and
sub
shrb
inc
shrl
nop
aad
bound
inc
pop
subl
jno
loope
scas
mov
clc
xlat
push
insb
add
mov
popa
outsb
and
sub
sbb
push
mov
add
popa
dec
pop
adc
neg
add
push
push
scas
pop
xor
out
outsl
movsb
stos
out
out
ja
push
adcb
imul
jge
or
loope
xchg
ret
rcrb
int
pop
aam
stos
and
cmpsl
mov
mov
push
addr16
jge
popa
lret
xchg
int3
sbb
cmp
fldenv
pop
jno
push
test
fsubl
pop
orl
jns
icebp
dec
pop
sbb
clc
popa
jge
pop
insb
jne
fisttps
ficompl
out
inc
mov
fwait
push
scas
popa
lea
xchg
dec
mov
test
mov
sti
shrb
scas
lds
out
scas
jp
loope
bound
push
sahf
mov
fs
jl
sbb
dec
mov
sbb
popa
cld
out
into
sub
lret
icebp
mov
and
mov
jb
repnz
xor
push
xorb
mov
push
ljmp
dec
xchg
popa
sbb
xorl
add
movsb
mov
ss
sub
imul
add
sub
cs
std
dec
or
pop
mov
imul
and
fldenv
aas
push
fisubs
pop
loopne
lods
sbb
stos
push
inc
arpl
or
dec
push
aas
or
punpcklwd
shlb
popa
je
sbb
add
mov
inc
popf
push
popa
sbb
fldt
pop
sub
sbb
lock
push
outsb
mov
popa
and
push
xchg
popa
das
in
mov
popa
fcmovne
out
and
and
sti
stc
and
out
xor
mov
sahf
and
push
popa
or
push
fidivrl
dec
call
scas
popa
ljmp
pop
xor
popa
lea
pop
addb
cli
popa
js
and
leave
mov
sub
mov
and
push
jo
lcall
mov
push
mov
popa
mov
cmpb
cmp
popa
jl
aaa
fwait
popf
pop
sti
fldenv
jbe
outsl
std
sbb
fdivrl
pushf
js
sub
add
fs
cli
inc
jg
jle
lods
xchg
cs
inc
pop
adc
popa
pop
ljmp
or
imul
fcompl
fwait
sbb
out
cmpsl
push
cltd
call
adcb
les
adcb
loope
or
pushf
inc
out
popa
xlat
std
xor
adc
hlt
and
cltd
mov
enter
popf
popa
adc
xor
fs
js
dec
push
aad
or
dec
jno
push
movsb
add
mov
lcall
ficoms
xor
pop
or
out
fsts
popa
aam
inc
sbb
adc
ret
popa
cmovb
cmp
daa
lcall
bound
andl
pop
sbb
popa
push
in
mov
fsubs
mov
cmp
xor
call
cltd
popa
pop
leave
js
in
pop
out
popa
aad
insb
mov
popa
xchg
adc
or
mov
adc
fnstcw
or
inc
enter
imul
popa
je
xchg
mov
add
xchg
and
popa
cmp
pop
jp
outsl
mov
loope
xchg
add
dec
or
popa
fucomp
loop
in
lahf
pusha
jg
popf
dec
mov
mov
inc
sbb
leave
jnp
fldenv
mov
xor
pop
out
scas
imul
clc
and
ror
xor
shlb
push
andl
sbbb
fs
push
adc
cs
jmp
into
jae
mov
andb
push
mov
je
popa
dec
ret
movb
popf
pop
daa
loope
xchg
mov
nop
pop
popa
dec
fs
out
lret
in
sbb
push
arpl
inc
punpcklwd
int
outsl
enter
shrl
std
mov
popa
loope
cmc
sbbb
cmpsb
repz
lea
popa
or
sub
sar
pop
push
or
push
loope
add
push
ja
aas
mov
into
rcr
sub
push
add
jne
ss
pop
leave
stc
xchg
dec
outsl
and
jge
roll
sub
or
icebp
repnz
fs
pop
and
inc
lcall
mov
ret
loopne
outsl
cld
lea
add
jle
aas
lock
push
mov
push
imul
shrl
lods
pop
ja
or
mov
xchg
cmp
or
mov
jno
mov
shl
insb
lods
dec
arpl
sar
iret
mov
es
mov
or
cmpsl
dec
lods
jg
adc
cmpsb
xor
xor
mov
iret
adc
popf
sahf
and
std
add
sbb
out
lock
stos
mov
xchg
mov
ret
add
ret
aad
gs
push
lahf
mov
mov
push
sub
inc
imul
int3
add
movsb
in
leave
xor
ja
jl
pop
testb
mov
add
push
movsb
js
std
cld
popa
out
stos
xor
popa
lods
add
pop
int
pop
aas
popa
lcall
mov
xchg
sub
and
hlt
sbb
mov
sub
rorl
or
rorl
test
pop
popa
pop
popf
and
outsl
pushf
xchg
inc
sbb
inc
jnp
xchg
popa
push
aam
sbb
in
lods
popa
dec
sub
sahf
pop
mov
rorl
mov
mov
dec
sub
xchg
rorb
roll
fimull
jmp
add
pop
ret
pushf
popa
ljmp
andb
push
sahf
sti
out
xchg
cmp
rorl
clc
sub
fs
mov
jmp
fcoml
aas
js
pop
and
jnp
popa
ss
jne
push
adc
mov
popa
rolb
sub
loop
jmp
push
xor
sbb
in
adcl
in
adc
mov
xor
sub
popa
andl
cmp
movsl
popa
push
mov
imul
pop
stos
fs
xor
add
popa
fistpll
jl
jno
mov
mov
xor
add
xchg
popa
ja
ss
pop
or
cltd
cmpsb
sahf
dec
lret
sub
sub
push
jmp
addb
je
iret
lods
rcl
push
jnp
and
roll
js
and
dec
lcall
ljmp
popa
rcrl
cmp
mov
loopne
popa
jno
add
sbb
into
mov
imul
int3
es
enter
mov
lea
stos
in
ljmp
mov
popf
out
popa
sbb
xor
fsubrl
loop
jecxz
and
sbbl
out
popa
mov
icebp
call
popa
pop
sarb
int3
outsl
and
mov
mov
nop
loope
mov
gs
xor
or
in
hlt
sub
cltd
dec
shl
jle
lahf
test
repz
jno
in
add
inc
jb
push
cmpsl
push
xchg
inc
stos
clc
inc
add
adc
adc
cmp
popa
hlt
push
inc
movsb
mov
mov
jg
popf
add
ds
cli
push
fsubr
xlat
xchg
popa
mov
aaa
push
ret
pop
push
pop
pop
add
in
mov
rcll
jle
cwtl
or
sti
push
test
inc
jp
push
mov
and
lods
cmc
sub
jl
stc
inc
test
xchg
fnstcw
and
jp
adc
pop
ljmp
inc
popa
dec
inc
lock
and
push
mov
mov
mov
popa
cmpsl
insl
lret
xor
bound
sbb
jo
jmp
divl
scas
mov
and
mov
push
mov
sub
lods
out
xchg
popa
int3
pop
gs
pop
fstps
lock
popa
imul
jecxz
subl
jbe
lea
popa
and
push
and
popa
in
add
out
and
fs
push
or
insl
sbb
xchg
xlat
test
cmp
out
fmull
orl
inc
sub
or
fcoml
sbb
arpl
xchg
shll
push
popa
stos
lahf
inc
inc
sbb
jbe
cmpb
cmp
popa
mov
rolb
popa
and
or
push
hlt
inc
or
jno
dec
fisubl
sub
adc
jge
jg
sub
stos
pop
xchg
jmp
das
aad
add
or
iret
inc
jbe
adc
popa
pushf
dec
ja
jmp
rorb
push
adc
movsb
icebp
popa
push
ds
fisubs
ret
or
out
fwait
enter
popa
loope
pusha
incl
inc
in
dec
fimuls
insl
dec
jo
sbb
pop
pop
mov
mov
shrl
add
shll
mov
add
add
mov
lods
stos
mov
jnp
mov
aam
roll
popa
adc
adc
aam
popa
enter
lock
xchg
imul
lcall
dec
push
popa
adc
xlat
dec
popa
dec
inc
jae
rorl
repz
loop
js
popa
lret
in
stc
jb
dec
aas
mov
sbb
bound
jl
sub
xchg
inc
mov
shl
popa
jo
jg
and
xor
mov
lahf
push
xchg
mov
jg
inc
and
popa
xor
mov
push
dec
es
loop
shll
push
test
addr16
sbb
int3
mov
jo
jge
test
mov
int3
popa
test
mov
mov
sub
mov
lods
loop
and
xchg
jo
lock
cmp
pop
add
dec
jae
jp
jg
jo
pop
data16
mov
ret
js
popa
aam
stos
or
popa
sub
add
imul
pop
add
cmpsb
imul
hlt
popl
mov
test
ja
cmc
mov
popa
mull
jg
or
or
push
lsl
adc
leave
movsb
in
popa
sub
jae
push
icebp
cmc
mov
mov
inc
push
aaa
inc
jge
or
pop
adc
fcmove
sub
add
stos
push
mov
movsb
das
mov
cli
cmpsl
xor
dec
arpl
and
or
leave
std
lahf
bound
mov
inc
fucom
xchg
popa
frstor
jp
pop
lds
ret
in
mov
adc
sbb
mov
fdivr
inc
daa
push
mov
lods
popa
pop
les
popa
jmp
out
jecxz
popa
stos
out
les
and
sub
addr16
and
dec
ret
add
sbb
pop
scas
pop
mov
sub
push
push
push
pop
and
xchg
mov
jg
popa
in
inc
js
lds
jl
inc
out
sub
sbb
fnstsw
outsl
cmp
roll
adc
sub
pop
movsl
outsl
mov
jmp
mov
xlat
cmp
lods
nop
pop
lea
adc
push
popa
lret
ss
fbld
ds
or
inc
aad
fs
dec
pop
push
mov
shll
cmpsb
clc
scas
pop
pushl
pop
jb
mov
jmp
or
or
mov
loop
jge
lods
mov
mov
insb
std
mov
cmp
or
xor
popa
in
ret
pop
lahf
push
popa
mov
mov
shrl
xchg
scas
imul
mov
sbb
sbb
push
pop
jmp
popa
hlt
and
imul
jmp
out
jo
push
rorl
popa
mov
or
loope
pop
in
shll
lods
cmp
addl
popa
jne
jl
adc
add
fidivrl
sbb
scas
inc
xor
jb
popa
lock
mov
aaa
loope
ljmp
ret
cmp
lock
sbb
arpl
stc
bound
xor
imul
inc
push
sub
push
icebp
sbb
das
push
outsb
xchg
add
call
and
lret
nop
test
aam
cld
xlat
or
mov
scas
testl
fsubrs
xor
imul
bound
mulb
icebp
insl
or
dec
dec
pop
popa
or
dec
jg
test
xchg
stc
pop
popa
sub
mov
sub
lds
scas
popa
sub
inc
jb
inc
xor
call
xlat
jae
cmc
popa
cmpsb
add
bound
push
popa
sub
and
popa
dec
push
mov
call
mov
xor
pop
sti
lock
stos
mov
popa
in
fiaddl
notl
popa
push
test
leave
fmuls
add
sti
pop
rolb
es
js
popa
dec
jle
adc
hlt
pop
push
mov
push
adc
mov
ss
incl
popa
inc
cmp
mov
add
xor
notl
dec
stc
data16
mov
enter
popa
sahf
sarl
ljmp
test
and
jg
and
sub
andb
addr16
adc
xchg
dec
inc
cmp
jns
xchg
popa
fisubs
dec
nop
ffree
push
jo
add
loope
pop
mov
enter
leave
push
or
and
xor
subb
loope
and
frstor
inc
cmp
fs
mov
sarb
push
outsl
cmp
jge
jecxz
lahf
gs
lods
idivb
scas
out
sub
popa
push
fwait
out
inc
xchg
shlb
jge
lret
xor
push
test
popa
ja
and
xchg
je
flds
insb
xchg
dec
call
cwtl
pop
je
test
bound
pushf
xchg
ljmp
bound
fsubrs
mov
mov
cs
xchg
inc
fs
and
inc
shrb
xlat
xchg
lds
push
popa
cli
ds
cmp
out
popa
push
lods
jl
cld
sahf
pop
popa
hlt
jbe
xor
mov
in
push
push
popa
mov
mov
popa
lahf
sub
adc
imul
push
mov
mov
out
dec
dec
popa
test
adc
popa
jg
inc
mov
push
add
aad
mov
popa
adc
add
lret
lret
popa
das
cmp
sbb
adc
mov
popa
sbb
sbb
sub
inc
mov
mov
popa
xchg
out
je
mov
leave
out
sbb
inc
jg
outsl
sbb
fs
loope
insl
mov
cmp
aas
rclb
data16
shrb
aad
push
push
andl
jne
mov
popf
push
mov
cmp
sub
out
adc
fs
enter
adc
push
push
jecxz
xchg
cltd
pop
xor
out
mov
push
es
pop
popf
inc
or
push
popa
push
pop
icebp
mov
pop
inc
addr16
xlat
mov
or
outsb
or
mov
and
adc
ret
push
popa
std
hlt
lea
popa
outsl
imul
pusha
sahf
das
out
inc
ret
popa
xchg
jnp,pt
cmp
dec
ja
iret
fisubrs
pop
popa
fwait
push
mov
jge
fisttps
pop
or
mov
roll
jp
inc
jb
fadd
jnp
sbb
shll
pop
pushl
xchg
mov
aad
pop
orb
icebp
lahf
dec
shr
popa
out
cwtl
pop
sbb
repnz
lahf
into
fwait
popa
jp
mov
popa
dec
jno
jnp
clc
xchg
mov
loope
and
f2xm1
push
jmp
sbb
mov
adc
lret
mov
scas
insl
inc
out
and
popa
xor
sbb
xchg
jge
popf
in
sub
nop
popa
mov
lock
in
fs
jle
adc
sub
dec
popa
dec
add
pushf
js
nop
mov
xchg
enter
jle
cmc
fbld
pushf
cmp
mov
add
lea
inc
popa
les
ss
sti
imul
xchg
rorb
jecxz
repnz
cmc
out
bound
lea
repnz
adc
dec
fwait
int
call
inc
mov
mov
jp
inc
sahf
movsl
and
push
and
insb
jo
sbb
mov
stos
xorl
sahf
shrd
es
jne
loopne
jmp
out
mov
mov
ja
push
daa
lret
idiv
das
push
out
sub
and
fwait
addr16
mov
or
add
adc
shrb
movsb
lret
int
sbb
popa
daa
push
xor
addr16
push
jo
xor
clc
ss
test
xchg
jecxz
cmp
bound
cmp
call
popa
cmp
xor
inc
mov
mov
mov
shlb
cli
into
mov
and
sub
xchg
xor
add
pushf
adc
or
in
popa
sub
popa
mov
dec
scas
lahf
fs
loope
mov
icebp
lret
popa
shl
fsubrs
sbb
inc
popa
add
xchg
push
add
leave
negb
fists
or
aam
cmovb
xchg
adcb
call
out
lcall
mov
popa
lods
add
aas
push
lret
popa
jge
jae
mov
ja
arpl
mov
loope
clc
push
push
jno
pop
stc
test
jecxz
push
je
xchg
push
sbb
lods
push
insb
popa
dec
ss
push
adc
int3
popa
mov
cmpsb
sbb
xchg
push
push
aam
clc
mov
push
daa
pushf
and
das
mov
ja
or
mov
fwait
in
mov
lea
inc
test
or
mov
lcall
fwait
jns
push
mov
popa
and
fildll
cmp
pop
in
and
push
ret
popa
inc
fsts
mov
or
aas
lods
int
dec
popa
cmp
lods
mov
and
popf
arpl
adc
mulps
push
pop
mov
popa
push
subl
adc
fdivl
popa
mov
stos
ret
dec
shrl
xchg
jo
inc
dec
cmpsb
test
mov
popa
mov
push
popa
mov
enter
jmp
loope
add
lock
mov
mov
nop
clc
fildll
adc
dec
lret
popa
shrb
popa
iret
adc
mov
inc
cmp
fdivl
out
das
into
xor
popa
andl
leave
xlat
dec
popa
ret
pusha
add
popa
out
dec
jecxz
xchg
pop
hlt
xor
out
sub
popa
pop
cltd
push
add
mov
jo
inc
inc
sub
std
cli
call
das
jle
roll
xchg
cmp
pop
push
sbb
popa
into
mov
mov
inc
mov
adc
mov
popa
add
leave
fs
xchg
sub
push
mov
aam
and
mov
push
enter
icebp
inc
cvtps2pi
scas
fdivs
mov
sbb
and
cmp
inc
aaa
fsub
loope
add
jno
mov
add
les
daa
dec
popa
rcrb
adcb
push
ret
jg
cmpsb
and
popa
daa
xchg
mov
pop
cmpsl
xor
and
adc
push
mov
push
or
decb
insb
jne
add
popa
jne
sbb
pop
popa
stos
loop
into
sbb
arpl
popa
pop
push
or
mov
jl
loope
pop
idiv
cwtl
popa
jbe
and
into
push
pop
mov
push
mov
repnz
test
inc
rcll
xchg
loopne
loop
pop
test
xor
cli
loopne
popa
popf
sub
and
dec
sbbl
popf
notl
xchg
insb
cld
int3
andb
sub
shr
xchg
aas
pop
mov
inc
jnp
xchg
lret
loop
popa
dec
in
mov
adc
pop
bound
adc
mov
add
ja
jmp
inc
jae
sub
outsb
fs
mov
movntps
mov
out
popa
sbb
push
jle
test
in
popa
std
or
in
mov
outsl
xchg
loopne
push
and
popa
mov
sbb
mov
clc
push
jno
or
xor
jp
call
mov
fimuls
in
sbb
int
push
jbe
popa
sub
insl
dec
xchg
fsubrl
jge
rolb
popa
xchg
push
test
gs
movsl
and
inc
sbb
sbb
lahf
out
add
jge
out
fimuls
push
subb
das
mov
lcall
popa
cwtl
push
int3
les
cmp
mov
jbe
pop
popa
popl
jl
into
and
fidivl
data16
scas
fsubrs
and
and
popa
dec
xchg
imul
push
popa
cs
sub
mov
aaa
adc
add
dec
stos
pop
sbb
or
shrb
out
dec
mov
dec
popa
fisubs
mov
test
cmp
pusha
xchg
xchg
push
stc
fsubs
fs
sbbb
and
or
push
mov
rclb
popa
mov
cmp
lods
add
popf
ljmp
xchg
inc
lret
pusha
sbb
push
popa
or
xchg
enter
popa
and
popl
in
inc
cld
popa
xor
shlb
movsl
inc
scas
ficompl
idivb
jne
mov
pop
sub
lret
push
mov
pop
mov
jmp
popa
and
popa
pop
jg
pop
out
es
data16
ret
xor
pop
sub
jb
and
fbld
jmp
jg
rclb
mov
mov
add
sbb
xchg
aam
mov
mov
xchg
fs
out
aad
mov
call
popa
or
adc
pushf
inc
and
fbld
popa
mov
mov
dec
inc
mov
je
test
push
popa
cmc
int
add
jmp
mov
fimull
mov
sub
xchg
ja
mov
adc
popa
insb
cli
jecxz
xorb
dec
mov
push
in
test
jp
xor
popa
mov
push
popa
or
js
bound
xor
popa
jle
mov
popa
cmp
push
pop
leave
add
mov
fistpll
andl
sbb
xchg
aam
bound
inc
push
data16
roll
pop
call
jae
inc
mov
jecxz
mov
pop
push
clc
mov
subb
push
sbb
inc
pop
loope
popa
fs
repz
dec
outsb
and
mov
xor
pop
mov
leave
pushf
inc
ljmp
xchg
repz
loope
dec
test
pop
and
pop
push
xchg
fwait
push
fsubrl
push
and
mov
lea
andl
cmp
dec
dec
adc
jbe
fwait
and
jecxz
mov
xchg
sub
dec
mov
pop
jae
rcl
dec
stc
popa
sub
icebp
dec
adc
fwait
adcb
pop
pop
clc
pop
inc
jne
and
rcrb
push
cmp
xchg
in
ljmp
jne
inc
fistpll
cmpsb
mov
and
xor
jecxz
divb
mov
pushf
xor
jne
gs
in
outsl
and
jae
xor
mov
inc
clc
sbb
jns
popf
jo
in
in
lret
stc
xlat
sub
jo
rorb
mov
jecxz
fwait
sbb
push
fldl
ret
popf
les
ljmp
repz
jmp
je
insl
jae
push
adc
ficompl
addr16
xor
sbb
pop
xor
or
push
xor
cmpsb
mov
jns
push
inc
dec
and
and
jbe
mov
in
imul
nop
dec
xchg
add
pop
push
pop
lcall
aam
std
mov
mov
in
lahf
ret
out
lods
pop
fs
mov
or
jmp
sub
dec
mov
pop
test
pop
wbinvd
adc
cmpl
das
icebp
add
out
xor
pushf
mov
mov
xor
add
or
popf
out
test
daa
xor
mov
dec
fsubrl
pop
imul
pop
push
mov
push
push
xchg
inc
arpl
lretw
rorb
popf
std
sbb
adc
pushf
outsb
jecxz
mov
push
mov
mov
out
loop
dec
repz
nop
xchg
ljmp
ficomps
stos
mov
lcall
lock
popa
jbe
push
scas
outsl
sbb
aam
insl
mov
pop
popa
jp
pop
push
cli
cltd
lods
mov
out
add
icebp
push
test
sub
xchg
adc
xchg
mov
or
sahf
mov
push
popa
cmp
jmp
pop
incb
popa
cli
pop
divl
ljmp
pop
mov
int3
mov
scas
subb
test
fld
loope
std
es
push
mov
add
jle
test
pushf
rol
push
shlb
popa
sub
ljmp
cmp
popa
fsubs
jle
jmp
xchg
ja
test
dec
and
mov
adc
sbb
cmp
popa
pop
jo
mov
hlt
mov
pop
xor
daa
cwtl
mov
push
mov
xchg
das
cmc
hlt
scas
popa
adc
test
popa
int3
add
mov
or
push
fwait
pop
sub
push
popa
sub
iret
outsl
xchg
xlat
enter
scas
loop
not
addb
stos
mov
lock
xor
lods
jo
in
sbb
xor
addl
mov
fistl
fcompl
adc
mov
cli
aam
mov
popa
js
xor
dec
enter
jns
sbb
out
adc
popa
mov
pop
cs
movsl
and
push
inc
or
sti
into
andl
jge
adc
add
mov
roll
popa
xchg
fistpl
pop
cmp
into
popa
and
pop
data16
sarb
scas
pop
in
xchg
mov
mov
decl
insb
sbb
jp
mov
sbbb
das
or
orl
and
inc
add
jne
leave
mov
mov
pushf
lret
pop
adc
or
rclb
cmp
in
adc
sti
stc
pop
lock
movsb
test
cmc
sub
mov
xor
add
cmpsb
push
das
mov
fildll
xchg
bound
dec
ds
int3
dec
cld
dec
adc
ret
loope
cltd
jno
in
cmp
mov
jge
out
in
popf
sub
inc
outsl
bound
and
inc
mov
xor
popa
js
imul
push
push
popa
dec
cmp
sahf
shrb
add
dec
pop
jbe
or
adc
inc
aad
sub
pop
push
popa
and
int
rolb
nop
sub
sti
cmp
push
clc
xlat
movsb
int3
and
rolb
in
cmp
inc
inc
fidivrl
mov
push
test
shl
popa
js
outsb
std
inc
xchg
xor
sbb
add
popa
pop
out
sbb
sub
mov
sahf
push
bound
aaa
dec
aad
inc
leave
jns
sub
mov
outsl
mul
dec
mov
xchg
jne
bound
mov
les
mov
or
sbb
jl
stc
inc
pop
mov
into
test
pop
aaa
xchg
lcall
push
jb
cmp
pop
arpl
int3
cwtl
inc
pop
sub
mov
jl
mov
mov
pop
add
popa
je
mov
jns
pusha
lock
push
inc
fs
js
gs
cli
add
popa
cmpsb
add
and
pop
dec
mov
popa
sbb
adc
or
pop
mov
mov
popa
push
inc
pop
jnp
bound
hlt
popa
xchg
cmpsl
popa
repz
inc
movsb
xor
and
xchg
xor
orl
xchg
dec
scas
std
jp
push
push
popa
subb
adc
jle
xchg
jb
popaw
int3
out
test
sub
add
stc
out
les
cmp
cli
or
adc
popa
mov
fs
mov
aas
jns
mov
aaa
popa
xlat
mov
mov
dec
mov
push
xor
cmovno
lcall
popa
push
inc
imul
arpl
rclb
sbb
sbb
mov
pop
popa
cmpsl
lcall
push
ret
sbb
arpl
unpckhps
popa
out
pushf
adc
pop
sub
push
popa
cmp
sub
jle
lret
inc
xlat
jne
iret
popa
movsl
inc
incl
or
push
jle
push
test
orb
bound
and
xchg
test
and
sub
pop
dec
add
popa
or
lret
cmp
or
lahf
leave
mov
add
dec
cmp
jnp
add
mov
sti
popa
stos
in
popf
xchg
rcrl
inc
popa
mov
int
xchg
bound
popa
cmp
shrb
cmc
leave
test
sbb
push
popa
cli
pop
cmpsb
xor
mov
inc
ss
enter
jmp
dec
cmp
inc
gs
mulb
jg
insl
in
fldenv
dec
faddl
and
lock
popa
lcall
int
pop
jle
outsl
add
inc
cmp
push
fs
mov
xchg
inc
popa
jp
add
ret
lcall
xchg
adc
fistl
cmc
aas
pop
and
cmp
insb
dec
ret
popa
push
add
push
pop
popa
xor
adc
mov
push
push
push
loop
out
loopne
dec
sub
inc
or
push
loope
repnz
sbb
sti
popa
mov
lret
popa
mov
push
adc
loop
pop
popa
stos
repnz
sub
add
pop
dec
popa
arpl
in
jg
inc
cmp
popa
iret
aas
cli
sarb
push
fbld
mov
add
cmp
mov
adc
cmp
cmp
pop
mov
call
jno
xchg
arpl
adc
jg
mul
stos
popf
jp
popa
push
clc
movsb
shrl
out
xlat
jg
cmp
fisubrs
movaps
inc
addr16
jo
push
add
bound
movsl
fdivl
and
jb
test
rcll
btr
aas
popf
mov
xchg
xchg
rorb
push
lea
sub
scas
lahf
int
mov
cmp
arpl
popa
mov
mov
mov
mulb
popf
hlt
scas
jnp
xor
popa
stc
mov
sbb
popa
mov
loopne
je
jo
call
dec
inc
loop
ret
sub
enter
fsubr
stos
popa
addr16
je
orl
adc
push
jo
lea
add
popa
mov
sub
jns
jp
mov
pushf
push
imul
adc
jge
xchg
popa
fwait
aaa
adc
cli
test
addl
fmuls
fbld
gs
dec
in
and
jle
lea
popa
jp
push
in
mov
mov
out
jbe
popa
sub
xlat
mov
rcrb
push
jp
fs
jae
push
into
popa
jg
fnstsw
call
ljmp
xor
add
test
push
sub
sbb
popa
faddl
push
shrb
push
aam
movsb
xchg
sbbl
pop
xor
mov
int3
popa
out
shll
lahf
jbe
loope
mov
add
cwtl
inc
dec
hlt
in
cmp
les
loopne
mov
pop
adc
add
dec
fadds
cltd
repz
cmp
push
imul
cwtl
outsl
mov
lea
int
pusha
ss
dec
fbld
mov
adc
insb
or
sub
adc
jns
dec
jp
inc
mov
outsl
add
stos
popa
xchg
fldlg2
mov
push
repz
jbe
mov
sub
jecxz
jge
les
aam
rcr
movl
mov
dec
into
mov
inc
sbb
inc
repz
lret
sbb
popa
jl
add
mov
pushf
or
movsb
and
adc
popa
or
out
pop
pop
aam
imul
shlb
dec
fnstsw
mov
cmp
je
movsl
mov
dec
popa
test
lods
and
aaa
jle
out
push
xor
scas
cmpl
push
add
add
mov
popa
lock
setbe
int
popa
mov
inc
pop
add
inc
xchg
fsubs
dec
sbb
popa
clc
gs
stos
dec
xchg
mov
lods
sahf
ds
push
jno
adc
popa
cmp
pusha
mov
ret
popa
sbb
xor
adc
dec
movsl
add
imul
mov
and
pop
push
sbb
fsub
test
mov
mull
add
clc
outsl
sti
mov
in
push
loop
mov
dec
mov
loopne
inc
mov
xor
mov
sbb
sub
mov
stc
or
cwtl
insl
sub
sti
pop
sub
mov
outsl
scas
lods
push
int
arpl
sbb
bound
sub
repz
add
mov
add
sub
sub
jns
inc
shll
js
and
out
popa
test
ds
xchg
jnp
mov
andl
ljmp
pop
stos
mov
filds
mov
add
popa
dec
or
popa
jecxz
fldcw
popa
inc
xor
mov
mov
adc
mov
inc
test
dec
cmp
xor
add
rcr
cmp
cmpsl
int
ret
and
in
in
mov
popa
or
test
xor
xchg
add
jmp
pop
mov
nop
test
cmp
sub
popa
lods
test
pop
das
and
adc
fldenv
mov
jecxz
int
jb
je
ja
sbb
sbb
imul
mov
adc
sbb
insl
push
or
scas
std
add
jae
push
dec
sbb
lods
jg,pt
in
mov
lcall
pop
mov
lcall
popa
cli
or
push
and
popa
notl
fwait
mov
ss
loop
mov
das
pop
add
and
bound
jae
lcall
adc
lea
subl
and
popa
repnz
fs
mov
mov
pop
xor
ljmp
xor
pop
sbb
mov
add
lds
or
popa
mov
mov
nop
popa
insb
jle
iret
out
dec
inc
bound
pop
jmp
sbb
popa
ds
mov
es
adc
lods
int
popa
xchg
sub
sub
mov
popa
sub
js
mov
push
test
sbb
sub
fistl
fptan
xor
fbld
and
push
mov
popa
lods
jns
or
test
cmp
pop
or
bound
push
movsl
or
mov
push
sbb
mov
arpl
push
ss
popa
lea
mov
popa
sahf
or
dec
lods
outsl
dec
das
add
std
sbb
addr16
rcrl
aam
stos
clc
data16
and
pop
mov
xchg
int
movsb
popa
lahf
nop
lock
jo
jle
lds
and
sarb
loope
push
lea
js
or
popa
gs
add
popa
push
into
out
push
in
xlat
imul
fdivs
cmp
or
dec
adc
rcll
dec
insb
aad
mov
popa
in
fmulp
jo
test
jns
fistpl
popa
xor
cmp
stc
call
mov
icebp
popf
fnstcw
in
pop
pop
into
bound
mov
inc
ficompl
or
mov
dec
test
cmpl
inc
xor
hlt
fnsave
push
ds
into
test
jne
cltd
popa
mov
add
pavgw
inc
inc
mov
iret
cmp
inc
push
jmp
pop
mov
pop
mov
adc
mov
test
mov
push
out
movsl
jo
add
popa
dec
mov
jbe
inc
sub
aas
cmc
lret
mov
inc
inc
popa
sub
xlat
je
jg
fldl
loope
dec
xor
popf
sub
push
cmp
adc
bnd
out
sbb
popa
loop
add
and
add
test
mov
sbb
mov
shll
sub
mov
shll
pop
sbb
dec
popa
mov
sbb
add
stc
cmpsb
popa
sub
xor
ja
adc
add
push
push
mov
xor
or
sub
xor
rcll
stos
mov
add
sub
rcrl
inc
adc
out
out
mov
in
jns
xor
cmp
pop
jo
jg
push
lret
fs
mov
imul
or
xchg
and
jp
std
push
mov
pop
fsub
fyl2xp1
pop
clc
sahf
push
aaa
loop
xrelease
jmp
dec
faddl
popa
sub
push
mov
popa
sbb
dec
push
mov
push
jmp
sub
jne
lahf
popa
xchg
cmpsl
es
popa
adc
pop
in
clc
pop
enter
jmp
flds
pop
push
jle
xor
sub
insb
mov
and
popa
lcall
or
mov
push
jg
lret
add
mov
xchg
repnz
mov
dec
mov
add
add
popa
lods
imul
xchg
fs
push
out
push
xlat
jae
push
jl
pop
loopne
popa
jg
and
pop
test
push
fs
push
ja
add
popa
mov
dec
adc
fwait
shll
add
and
repz
decl
popa
pusha
dec
out
iret
cld
jmp
int
mov
andb
mov
popa
out
push
jo
sub
inc
xorl
popa
test
mov
and
push
mov
shlb
test
sbb
xor
data16
xchg
mov
imul
fwait
cmp
aas
jns
inc
in
stos
pop
or
mov
push
inc
pop
fidivs
sti
sbb
mov
repnz
fidivrs
test
push
xor
popa
int
mov
jne
test
sub
sbb
dec
popa
and
cltd
dec
popa
xor
loop
arpl
xchg
and
sahf
popa
testl
popa
movsb
cmp
push
aaa
mov
push
popa
push
xor
lods
repz
jnp
es
andb
in
fwait
inc
scas
cmpsb
popa
push
mov
shrb
pop
loope
xchg
adc
mov
ljmp
loopne
add
mov
outsl
shr
test
xorb
cmpsl
adc
xor
push
adc
sub
popa
out
jae
pop
inc
lahf
es
shrl
jns
cmc
hlt
pop
or
stc
sbb
lahf
mov
sahf
dec
jg
fisubl
mov
xor
xchg
subl
xchg
ja
das
popa
lcall
sbb
cld
gs
sub
mov
xchg
jl
les
pop
lahf
in
cmp
jmp
sub
int
rolb
mov
test
cmp
lret
dec
loop
pop
test
cmpsb
push
int
aad
js
ja
dec
xchg
js
and
rol
xchg
lret
aaa
in
push
inc
loope
icebp
mov
ja
lret
cmp
jle
inc
dec
cltd
mov
popa
shlb
xlat
in
out
mov
jno
data16
inc
xchg
rclb
jmp
ret
jle
xchg
test
push
jo
pop
jl
inc
test
popa
xchg
sarl
inc
hlt
dec
fiadds
popa
fndisi(8087
xor
incl
pop
popf
ja
inc
push
fs
fiadds
in
test
out
mov
repnz
popa
lret
mov
popa
andb
popa
data16
in
lods
jo
popa
mov
into
pop
xchg
sub
push
lret
insl
mov
or
mov
inc
mov
daa
popa
push
pop
push
lahf
pop
push
in
mov
shlb
jno
popa
daa
std
or
shll
shll
ret
stc
xor
shrb
mov
dec
loope
aas
jbe
popaw
leave
lea
ds
fidivs
push
lcall
fiaddl
hlt
bound
sbb
test
popa
adc
mov
pop
sbb
adc
pop
jae
in
bound
add
pop
jg
jmp
cmp
mov
xchg
stos
mov
push
data16
popa
pop
cli
daa
pop
movsb
push
dec
shlb
fldlg2
fimull
popa
sub
inc
bound
push
ds
sti
shll
repnz
dec
pusha
adc
out
or
or
orb
int3
push
or
pop
leave
scas
mov
mov
dec
out
push
mov
dec
outsl
fsts
jle
adc
loope
loop
push
mov
xchg
ss
leave
push
addl
jo
es
std
sbb
cltd
out
divl
sub
in
sub
xor
fwait
sbb
jle
push
xchg
xlat
mov
enter
xor
ja
std
iret
loope
push
xor
mov
mov
mov
inc
pop
es
in
shl
loop
and
jo
dec
xchg
ret
push
pop
fcoml
popf
imul
out
popa
push
insb
mov
pop
pop
lods
sarl
aaa
je
dec
sbb
test
mov
mov
sub
leave
fbld
push
and
lock
leave
xchg
cmp
leave
aam
mov
fs
xchg
and
cmp
xchg
mov
mov
std
mov
add
cmpl
sbb
jne
adc
imul
cmpsb
in
mov
jle
jnp
inc
outsl
std
orl
loope
and
jle
jbe
cmp
sbb
rcll
cmp
ja
dec
sub
push
xchg
stos
pop
inc
xchg
jno
rorl
pop
dec
repz
out
jmp
addr16
sbb
leave
mov
std
jns
mov
pop
dec
sbb
repnz
in
pop
mov
lahf
lahf
or
divb
jp
fisubs
or
fnstsw
loopne
repnz
sub
xchg
arpl
leave
jno
lods
xchg
push
and
push
cli
lcall
fsubrs
popa
out
outsb
pop
ja
arpl
cltd
fldenv
cmp
and
movsl
or
mov
std
pop
inc
shll
scas
loope
in
adc
into
cmpsb
cmp
stc
stos
popa
cmp
cmovno
sbb
fcomi
dec
cmp
popa
mov
sub
popf
add
and
stos
in
add
xchg
sbb
cmp
dec
ds
inc
xchg
mov
xchg
pop
insb
pop
jne
cltd
push
ss
mov
add
bound
mov
sub
cmp
into
popa
and
jo
arpl
outsl
dec
push
jmp
dec
pop
and
popa
xor
sar
and
lea
pushf
popa
in
jp
icebp
or
lods
popa
push
lret
jbe
stos
pop
mov
jo
sarb
dec
pop
imul
xchg
inc
stc
pushf
sub
ffree
jp
repz
mov
leave
sub
cmp
cmc
add
jl
ret
jg
adc
dec
mov
popa
mov
mov
and
or
pop
jbe
repnz
jne
sbb
popa
add
pop
test
and
ret
gs
jl
popa
loop
out
and
fsts
xor
das
fadds
push
popa
and
push
cltd
mov
je
dec
mov
in
adc
cli
cltd
imul
mov
rcrl
popa
inc
ror
pop
pop
pushf
test
cmp
dec
mov
out
jg
test
jbe
and
dec
add
enter
pop
sub
jnp
in
inc
mov
cmpsl
js
xor
pop
push
inc
cltd
push
pushf
push
sub
fs
out
lods
idivb
dec
xor
popa
xlat
cli
lahf
pop
jmp
call
call
fbstp
loope
out
shll
dec
lret
popa
adc
lret
xchg
pop
popa
and
fcom
pop
mov
and
andb
lret
adc
push
repnz
and
jge
cwtl
add
out
mov
pop
dec
sub
pop
jp
fiaddl
bound
lret
dec
ret
popa
inc
add
xchg
push
ficomps
popa
sub
add
leave
lahf
and
insl
xchg
repz
out
popa
fistpll
pusha
xchg
xor
lock
mov
leave
nop
xor
pop
arpl
xor
xor
push
scas
cli
es
xchg
fstpt
fcomps
lods
inc
cs
pop
mov
jb
cmc
popa
xchg
pop
pop
rcrb
dec
xchg
mull
icebp
or
hlt
push
inc
stc
outsl
insl
xchg
into
mov
pop
dec
iret
xchg
lods
mov
and
sar
aam
or
lods
scas
in
jno
jl
hlt
mov
sub
in
xor
jecxz
fs
jecxz
jbe
push
add
mov
and
push
push
pop
xor
call
repnz
out
mov
pop
mov
repz
pop
leave
jo
inc
push
lock
dec
out
jne
mov
dec
sbb
xchg
xor
rorl
mov
mov
pop
arpl
inc
stc
pop
add
inc
iret
push
mov
insl
sub
mov
or
jmp
mov
mov
mov
sarl
jp
stos
xor
insl
xchg
lods
loopne
or
loopne,pn
in
aaa
dec
adc
jns
pop
and
lret
sub
aas
xchg
jmp
mov
mov
shl
pop
ret
pop
lret
pop
or
clc
pusha
mov
movsl
mov
ljmp
loop
sub
sbb
sbb
dec
cltd
inc
adc
ja
mov
pop
mov
and
test
adc
adc
insb
stos
jne
xchg
and
fidivs
rclb
imul
and
cld
jo
pop
gs
fstpt
cltd
aas
inc
inc
lret
and
ja
push
int
scas
bound
shll
sarl
or
mov
loope
pop
inc
pop
fsubl
aad
adcl
push
dec
lcall
xchg
ds
cltd
mov
popa
xchg
les
pushf
adc
mov
dec
jp
fwait
add
mov
adc
aas
sarl
popa
idivl
lahf
cmpsl
cmpb
int3
xchg
bound
push
xlat
mov
adc
and
shrb
popa
mov
inc
mov
cli
sbb
pop
sbbl
xor
cmpb
dec
data16
repz
and
and
jecxz
xchg
jmp
mov
sub
xchg
cmp
fstpl
xor
adc
jecxz
cld
lahf
popa
mov
mov
outsb
lret
xchg
in
andl
test
aas
fstp
shl
jno
push
popa
stos
aam
mov
leave
fs
enter
push
in
xor
outsb
xchg
arpl
ds
icebp
out
insb
in
pop
xchg
stos
popa
ret
or
fs
mov
pop
shll
popa
das
mov
jo
popa
dec
xchg
rcrb
mov
push
xchg
and
arpl
jg
push
in
xor
popa
data16
icebp
jge
repnz
test
inc
outsb
ret
popa
or
dec
fnstenv
stc
push
and
cmp
sub
test
cs
insb
loopne
loope
lods
icebp
mov
mov
lahf
sbb
jae
pop
shrl
push
push
ljmp
pop
mov
int
popa
repnz
push
rclb
es
push
jge
pop
adc
dec
and
push
pop
inc
or
ret
andb
pop
xchg
adc
sarb
gs
xchg
pop
mov
fsubs
aad
subl
js
adc
in
cltd
pop
jge
sub
mov
cmp
popa
loop
cmp
pop
mov
dec
popa
xor
jg
pop
cwtl
fisubrs
xor
dec
and
dec
xchg
and
popf
lods
scas
icebp
jp
popa
sub
stos
pop
mov
sbb
iret
outsl
mov
jg
jl
out
xchg
adc
test
rol
jmp
add
adc
imul
popa
es
ret
mov
popa
lret
jmp
inc
mov
xchg
mov
inc
out
test
movsb
popa
cld
pop
int
push
sarl
scas
cmp
or
jbe
aas
cltd
popa
cmp
cmp
or
mov
outsb
addb
inc
dec
cmp
cmp
sub
push
jg
daa
test
fsubrl
inc
jmp
pop
jecxz
out
adc
popa
jle
jns
add
inc
jo
in
cltd
call
fsubl
popa
lea
bnd
cmp
sbb
pop
es
hlt
aaa
pop
jbe
loope
and
mov
inc
mov
jne
arpl
mov
shlb
fmuls
subb
in
jno
xchg
sub
popa
push
rcll
popa
or
cmp
pop
lret
xchg
shrl
stc
jp
adcl
xchg
ljmp
lds
and
loopne
add
popa
es
pushf
jmp
push
cmp
daa
fsubrp
js
sub
gs
sahf
dec
cmp
jne
je
add
lods
push
lret
popa
call
sbb
dec
popf
xchg
inc
add
fimull
or
push
mov
leave
popa
mov
inc
mov
fidivs
out
pop
lds
andl
sub
sbbb
js
in
test
push
jp
mov
pop
popa
out
movsb
mov
jo
cmp
sarb
xor
popa
pop
mov
popa
xchg
ret
push
fwait
fs
push
nop
mov
jb
ss
sub
mov
testb
inc
or
push
mov
jo
aam
movsl
and
sub
mov
pop
popf
fcoml
sbb
add
sub
add
pop
jg
popa
pop
pusha
aas
fwait
and
mov
adc
inc
fcomps
mov
das
push
mull
popa
sti
or
xchg
push
xor
push
jle
and
pop
and
lock
xor
js
pop
xor
sti
mov
mov
out
icebp
adc
push
lea
in
fs
movsl
xor
sbb
lods
mov
pop
sbbb
loope
push
jae
xor
add
mov
frstor
or
inc
pop
xor
mov
cmp
call
stos
out
jl
dec
sti
cmp
popa
rclb
push
sub
lods
std
jns
sti
cmp
ror
xor
test
lahf
aad
popa
ss
xchg
sarl
movsb
popa
popf
push
xchg
mov
fs
xchg
rolb
push
jbe
fucom
outsb
mov
mov
popa
mov
cmp
mov
mov
sahf
ds
and
stos
dec
into
popa
pop
jge
and
loopne
jmp
loope
lds
xchg
flds
fsubrs
add
and
mov
jle
popa
fs
push
imul
fsubrs
jo
push
popa
inc
mov
divl
data16
xlat
push
mov
jl
pop
outsl
loope
push
add
mov
mov
fs
dec
push
sbb
jne
jns
jge
enter
pop
cltd
arpl
sbb
push
inc
inc
lock
push
stos
orl
roll
xchg
mov
adc
inc
xchg
mov
cld
loope
sub
push
cmp
addr16
lea
or
movsl
ret
jne
popa
add
mov
mov
icebp
out
out
stc
fisubs
xor
insl
jno
std
popa
adc
pop
popf
repnz
inc
inc
and
fs
xchg
sub
sti
xchg
icebp
push
sbb
popa
and
xlat
mov
jo
push
or
push
jmp
test
aam
xchg
pop
and
sub
adc
fs
aam
jbe
add
arpl
popa
cmp
ret
lock
fnsave
jno
dec
in
aad
das
test
inc
or
mov
test
push
rcr
cmp
xchg
fistpll
mov
stc
movsb
arpl
push
adc
ret
dec
test
mov
or
dec
loope
clc
lret
popa
mov
jg
sub
jbe
int
popa
rcrl
in
loop
pop
dec
jo
fucomip
fisubl
shll
jp
push
mov
js
aaa
add
push
inc
or
xchg
jae
push
imul
xchg
xchg
add
or
shr
or
pop
sbb
adc
push
popa
sbb
nop
or
sbb
loopne
bound
xorl
loopne
addr16
add
xor
icebp
dec
xchg
dec
ja
sub
fadds
dec
popa
inc
ja
imul
push
fs
movsl
sbb
xchg
jge
jae
enter
incl
or
or
adc
mov
lods
push
mov
cmp
sar
imul
popa
mov
lock
popa
sub
adc
sub
mov
ret
pop
dec
ja
popa
repnz
cmp
mov
int
or
test
or
sahf
and
jnp
adc
lods
mov
xchg
in
push
xchg
xor
in
popa
test
and
cmp
loope
xor
ficoms
pop
popa
sbbl
shll
push
dec
dec
lods
add
jne
add
rorb
fidivs
decl
dec
push
cli
fstl
push
mov
repz
mov
mov
push
pusha
push
in
dec
cmp
push
pushf
nop
or
cmp
or
lods
push
leave
or
xor
jmp
clc
sub
mov
push
es
rolb
add
cwtl
rorb
pop
imul
adc
popa
cmp
jecxz
push
mov
das
loopw
mov
mov
jl
or
scas
loope
andl
popa
inc
jne
dec
sbb
jo
jle
jp
bound
shl
icebp
dec
inc
mov
popa
dec
out
insb
pop
jno
dec
test
and
mov
imul
push
test
mov
and
xchg
mov
daa
popa
ljmp
push
fstpt
jnp
mov
mov
xor
int3
fistpl
push
popa
test
pop
push
inc
popa
lock
xor
shll
sub
aam
lahf
pop
mov
jg
in
cltd
xor
adc
mov
add
lahf
pop
jg
popa
je
scas
loopne
xchg
repz
xchg
mov
inc
dec
je
cmp
inc
pop
and
adc
jae
aaa
popa
mov
iret
or
mov
shlb
imul
mov
mov
icebp
or
xchg
pushf
xchg
or
inc
loope
imull
jp
addr16
jnp
mov
out
and
mov
fs
ljmp
mov
dec
sbb
sub
xlat
rsm
mov
testb
add
adc
push
jns
std
mov
addr16
dec
xlat
mov
push
push
mov
push
es
cmp
adc
dec
pop
call
or
mov
dec
push
or
mov
dec
inc
fidivs
leave
pop
jo
mov
icebp
out
sbb
mov
ljmp
pop
insb
dec
mov
ds
pop
pop
mov
out
pop
outsl
push
sub
loope
mov
sbb
imul
or
pusha
mov
insl
mov
jmp
popa
or
mov
xchg
jg
out
mov
mov
jmp
mov
pop
jp
mov
sahf
std
nop
insl
inc
jb
cld
jl
push
pop
mov
lds
in
shr
adcb
in
icebp
out
popf
into
cmc
aaa
popa
mov
and
mov
mov
dec
pop
rorl
mov
push
sahf
inc
shl
dec
fstps
pop
dec
and
scas
jns
xor
sahf
int3
inc
jns
std
leave
bound
fcomps
movsl
and
push
and
inc
push
push
idivb
test
cli
pop
pop
pop
or
or
push
xor
xor
pop
ds
bound
mov
dec
xor
jae
sbb
cld
pop
lcall
push
gs
dec
fwait
dec
xchg
cld
int
jbe
pushf
out
push
ljmp
mov
mov
imul
jp
jmp
out
ja
xor
jmp
repz
dec
leave
xchg
jae
lea
pop
aaa
out
pop
dec
and
ljmp
stc
in
push
ficoms
repnz
push
or
dec
dec
lahf
xor
xchg
pop
outsl
adc
mov
outsb
stos
mov
dec
aad
inc
lret
rcrb
call
movsl
js
push
pop
push
pop
push
or
lds
stos
cli
jbe
cmp
rclb
mov
add
imulb
rol
jge
jns
pop
sub
mov
xlat
pop
loope
ljmp
sarl
jecxz
adc
ja
pop
cmp
dec
pop
notb
dec
divl
mov
pushf
popf
popa
orl
movsl
aas
in
ficompl
dec
cmpsl
dec
iret
pop
adc
dec
int
arpl
and
lahf
lret
jge
push
lods
mov
aad
cs
in
cmp
outsb
xor
cmp
ret
mov
outsb
xchg
popa
mov
ljmp
sbb
xorb
cltd
popa
and
sbb
pop
popa
mov
sahf
mov
adc
inc
in
and
xor
dec
adcb
sbb
popa
add
mov
shlb
adc
inc
mov
div
adc
sbb
outsl
push
add
and
addl
lret
dec
jmp
cmp
leave
repnz
adc
mov
cmp
fdivs
mov
inc
jge
push
fwait
loope
repnz
cli
popa
cmp
pop
inc
mov
mov
out
mov
cmpsl
sbb
cwtl
les
loop
lods
into
or
or
out
adc
out
and
test
mov
ret
popa
rol
cmp
test
out
not
jb
gs
fldl
movsl
pop
fstpt
mov
mulb
xor
arpl
ret
inc
mov
rcrb
popa
push
and
outsb
fs
sub
add
or
pushf
and
imul
push
jae
pop
sti
jecxz
pusha
aam
popa
loope
stos
lods
mov
popa
mov
dec
pop
xor
jg
sub
das
repnz
aaa
call
push
sub
pop
dec
pop
sub
sbb
jbe
xor
int
adc
sbb
or
outsb
jo
adc
mov
test
cmc
divl
or
ja
jg
scas
cmp
push
jne
dec
cmp
mov
fcoms
data16
aam
fsubl
and
std
pop
pop
insl
popa
int3
push
pop
mov
xchg
arpl
scas
pop
mov
and
push
and
popa
inc
jb
mov
popa
push
aaa
mov
arpl
int3
push
in
jle
fstl
outsb
mov
inc
punpcklwd
adc
jl
xlat
xchg
jne
mov
jmp
fisttpll
test
adc
nop
fs
push
cltd
popa
imull
ret
jle
movsb
fwait
dec
mov
xchg
mov
icebp
sbb
xchg
loope
bound
inc
ja,pn
add
push
push
jge
fidivrs
call
xchg
inc
or
icebp
repz
sub
dec
mull
dec
negb
add
mov
stos
out
popa
adc
dec
cld
mov
mov
test
icebp
push
negl
jge
stc
jns
jae
popa
lcall
movsl
loopne
icebp
xchg
popa
cli
inc
mov
aad
rol
inc
adc
test
and
pop
mov
jp
sahf
sbb
push
jbe
jg
roll
xor
cmp
lock
repz
cmpsl
jmp
ljmp
clc
lret
inc
push
cmp
leave
test
cmp
inc
addr16
push
stc
pop
popa
adc
and
jae
out
fs
mov
call
in
popa
sbb
push
pop
mov
cmp
xchg
lcall
mov
or
dec
and
ficompl
popa
dec
stc
scas
bound
movsb
jno
lds
sub
adc
inc
popa
ljmp
inc
loope
adc
push
test
sti
and
xor
ficomps
fstl
jbe
fisubs
mov
rcrl
imul
test
mov
popa
pop
ljmp
aam
bnd
imul
dec
mov
push
xlat
and
adc
inc
bound
lahf
sbb
mov
push
shl
popa
jle
add
push
imul
push
push
or
push
pop
imul
in
xchg
fldenv
icebp
jle
dec
nop
ja
movsl
dec
mov
movsb
jae
loope
push
in
lahf
cli
cmp
fs
mov
rcll
repnz
dec
xlat
push
lods
jge
mov
test
je
fstpl
adc
add
loop
lcall
xchg
mov
gs
adc
stos
test
inc
and
scas
sub
mov
sub
leavew
xchg
sbb
daa
sbb
fsubrl
pop
stos
cld
fadds
push
pop
dec
and
mov
in
dec
fsubl
loop
movsl
stos
jge
std
fstps
push
jle
push
or
idivb
dec
std
mov
test
ds
test
dec
xor
fisttpll
loopne
sub
xchg
jbe
dec
mov
sub
pusha
fs
and
sbb
shlb
sub
lods
insl
std
dec
in
jecxz
scas
icebp
pop
mov
aad
pop
adc
inc
push
mov
and
dec
insl
shrl
jecxz
test
inc
sub
dec
clc
mul
dec
mov
xor
bound
adc
lods
cli
jecxz
ja
cmp
aaa
cltd
push
or
popa
dec
icebp
popf
lahf
scas
dec
bound
popa
fisubrs
out
xor
xchg
jge
add
dec
xor
sti
pusha
adc
loop
xlat
fs
imul
repz
sysret
sbb
cmp
fildll
mov
jmp
punpcklwd
clc
dec
gs
mov
add
imul
shrb
mov
push
inc
push
sbb
or
cmp
shr
add
add
fs
sub
xchg
inc
push
popa
or
jb
gs
gs
lret
xorl
jle
fiaddl
xchg
xchg
fldt
mov
js
xor
loop
jmp
mull
scas
xchg
in
hlt
mov
sbb
stc
push
add
xor
push
sbb
push
mov
out
int
movsl
popa
loop
mov
outsl
sbb
jb
jmp
cmp
fcomps
pop
xchg
xor
std
cltd
push
wrmsr
fcmovbe
sbb
dec
cmp
ljmp
lods
js
in
fimuls
bound
cmp
push
in
push
xchg
mov
in
mov
sbb
mov
adc
loopne
insb
fabs
pop
cmpsb
jge
ret
inc
lds
fldl
fadds
enter
pushf
xor
fsubrl
mov
adc
sub
push
jp
sbb
popa
cmp
scas
int3
mov
cmp
mov
cmp
jne
push
xor
imul
push
mov
leave
add
jns
dec
jle
pusha
cmp
icebp
jo
jl
int
jno
jmp
sti
daa
sbb
and
xchg
jge
jo
sub
add
mov
push
dec
js
loope
xchg
orb
test
lods
das
ljmp
insb
dec
push
pop
pop
mov
popa
loope
aad
push
imull
shrb
pop
movsl
pop
es
popa
mov
cltd
out
ss
jo
mov
sub
xchg
rcll
cmpsb
adc
jle
int
and
dec
push
out
inc
fsubs
mov
lods
std
mov
dec
mov
jnp
push
or
dec
ljmp
insb
mov
fidivl
and
inc
dec
dec
mov
or
cmc
test
lahf
mov
cmp
cmp
lret
inc
shl
dec
inc
sbb
adc
push
mov
iret
popa
mov
and
subb
lds
enter
dec
mov
jo
mov
adc
xor
push
aaa
xorb
testb
rcll
bound
lahf
mov
lcall
popa
dec
cmc
jg
add
xchg
or
loop
jmp
subl
adc
aaa
pop
repnz
xorl
pop
scas
add
dec
inc
nop
or
lods
repnz
dec
js
lods
mov
mov
call
mov
cmp
ror
cmp
int3
std
pop
movsl
stos
outsl
cmp
jns
ja
dec
shr
and
xchg
neg
ljmp
int3
clc
fidivrl
adc
push
iret
fcomps
mov
mov
pop
call
cltd
loopne
add
and
mov
push
mov
xor
jmp
pop
inc
popl
mov
fildll
mov
sti
loop
aad
jle
mov
and
jnp
loope
in
popa
jb
roll
addr16
push
push
cmpsb
popa
xchg
push
fcomi
popa
fdivrs
jecxz
pop
stos
inc
popa
out
dec
ja
sbb
std
pushf
jne
xchg
cwtl
les
repnz
loope
sub
jp
cmp
dec
inc
clc
insb
sbb
push
adc
movsb
xor
psraw
popa
mov
mov
andb
fistpll
push
inc
loope
lahf
sub
andb
mov
loope
adc
enter
and
in
jae
insl
xchg
cmp
jbe
outsl
lds
test
xor
stos
cmp
popa
jg
imul
jge
popa
cwtl
int
shrl
fldcw
inc
aaa
jecxz
loopne
pop
mov
jns
mov
popa
into
sbb
sbb
mov
mull
push
sub
push
add
fadd
hlt
stos
mov
lcall
test
cmp
adc
or
add
sahf
and
push
mov
ficoms
push
clc
ljmp
int
sub
add
stc
lret
out
jo
pop
icebp
ss
ljmp
adc
mov
pusha
dec
lret
int
inc
aam
dec
popa
je
shl
sub
xor
cmovle
inc
arpl
fwait
mov
mov
mov
hlt
dec
popf
lcall
daa
stc
std
popa
mov
jmp
xchg
aas
and
mov
jno
mov
cs
or
call
dec
dec
xor
rolb
push
loopne
popa
mov
sahf
mov
test
aad
hlt
movsb
inc
hlt
rcr
popa
mulb
push
mov
inc
lahf
push
iret
sbb
popa
mov
xchg
shrb
jb
xorb
test
mov
add
inc
popa
dec
or
mov
dec
sub
stos
mov
push
rcrl
dec
popa
out
xchg
leave
push
or
pop
inc
je
jns
jne
loopne
pusha
push
test
cmovne
xchg
lret
test
shll
sahf
ljmp
outsl
pop
add
lock
xor
push
mov
gs
mov
xlat
pop
and
pushf
push
arpl
push
in
loopne
mov
les
pop
push
mov
cltd
xor
in
push
adc
dec
add
icebp
push
shlb
push
cs
and
mov
mov
call
popa
adc
leave
cld
mov
pop
fistpll
mov
stos
stos
jl
popa
and
idivl
daa
and
sub
adc
pop
lock
popa
movsl
pop
xchg
jo
in
fisttps
mov
cmp
out
or
sub
xchg
popa
iret
push
les
push
icebp
xor
popa
in
push
rcl
push
mov
loope
mov
dec
popa
es
scas
pop
loopne
add
xchg
and
add
mov
push
jns
popa
xor
push
bound
imul
out
push
sbb
popa
fs
pushf
shlb
xor
cli
pop
in
cmpsb
cmp
pop
pop
push
popa
push
xchg
repz
mov
adc
lret
mov
ljmp
cltd
jno
push
ficompl
or
jp
sub
mov
popa
jnp
sub
lret
jge
dec
push
xlat
and
outsb
xchg
lret
pop
mov
popa
xor
xor
sahf
fisttps
jnp
inc
stos
mov
pushf
inc
loop
out
sahf
flds
xlat
mov
jns
mov
and
or
and
lods
cmp
sti
cli
enter
or
mov
popa
lcall
popa
mov
fimuls
popa
rorb
or
lods
push
cmp
popa
lret
adc
and
mov
cld
outsb
inc
and
push
mov
jp
sbb
pop
sub
and
popa
in
mov
jae
test
mov
adc
fcmovnb
or
adc
pushf
outsl
bound
pop
test
adc
cs
adc
ret
mov
sbb
popa
xchg
cwtl
sarl
call
inc
sbb
enter
pop
mov
icebp
xchg
in
icebp
mov
out
mov
cli
in
sub
mov
ret
push
xchg
jecxz
add
mov
fwait
or
dec
subb
add
mov
test
ret
daa
mull
popa
inc
push
sbb
cmp
sbbb
nop
aad
fsubs
mov
enter
xor
aaa
or
movsb
popa
sub
mov
mov
cwtl
fs
xchg
rclb
pop
ja
pop
aad
mov
sub
sti
das
cmp
popa
fiaddl
test
xchg
jg
or
add
mov
adc
insl
xor
das
loope
fwait
or
jae
xchg
push
xor
cli
cmp
popa
les
xchg
add
cmp
jg
sahf
subb
or
xchg
into
adc
xor
mov
pop
push
mov
cmp
imul
push
mov
incb
test
jns
pop
lcall
xchg
xchg
mov
mov
pop
pop
popa
jmp
das
gs
popa
addr16
out
inc
out
popa
pushf
ret
push
jne
mov
out
dec
cld
pop
inc
sub
out
jg
mov
popa
stos
push
pusha
push
mov
cmp
andb
fisttps
mov
in
and
pop
add
popa
lods
mov
in
lcall
mulb
fwait
dec
or
xchg
xor
xchg
daa
incl
scas
add
testb
clc
mov
dec
std
lods
iret
stc
sbbb
nop
popa
ljmp
test
inc
popa
xor
out
cld
popa
xor
shll
shll
daa
jo
dec
popf
lea
inc
pop
movsb
xor
js
ja
add
sbbl
cmp
cs
sbb
popa
incb
sbb
jo
outsl
or
pop
pushl
out
popf
inc
add
movl
xchg
and
insb
into
andl
clc
xorb
and
push
xchg
mov
push
rcrl
fsubrs
jmp
xor
arpl
inc
push
fstpl
mov
into
push
sbb
std
dec
sbb
push
leave
mov
in
fs
mov
enter
add
adc
test
out
push
je
fmulp
pusha
loope
sub
ljmp
rolb
adc
mov
test
popa
movsl
jg
stos
dec
int
popf
bound
outsb
in
loop
sub
dec
xlat
lock
push
popa
lods
pusha
pop
je
cmpl
cltd
jo
push
jp
ret
enter
popa
inc
or
es
or
mov
cmc
lcall
sub
inc
or
mov
push
shll
dec
xchg
je
data16
bound
dec
loop
ds
add
push
scas
lods
pushf
or
popa
int
dec
std
sub
cmp
mov
popa
aas
jle
dec
push
repnz
popa
jp
aam
rorl
popa
cs
dec
add
add
jae
aam
test
inc
rcr
push
push
shlb
xor
popa
pop
inc
test
pushf
testb
fnstenv
scas
cmpb
sbb
test
mov
cwtl
pop
mov
in
test
cmpsl
inc
cmpb
sti
popa
test
mov
test
or
mov
xchg
inc
cmp
xchg
popa
enter
lock
popa
rclb
outsl
in
in
cltd
aaa
add
jnp
dec
sbb
imul
imul
xchg
loop
hlt
push
adc
stos
mov
pushf
and
lods
xchg
ja
adc
inc
lret
mov
mov
test
rol
subb
aad
icebp
push
aad
bound
insb
testb
mov
xchg
push
popa
enter
or
xchg
mov
mov
and
mov
gs
lods
mov
insb
movsb
fwait
cmp
xor
inc
push
std
cmc
leave
outsb
jecxz
adc
mov
adc
xor
bound
dec
xchg
pop
sbb
loop
fsubs
push
jp,pt
xor
ja
loope
mov
inc
inc
xor
jo
jecxz
cmp
cmp
jae
or
hlt
pop
mov
shll
mov
adc
pushf
repz
cmp
mov
icebp
mov
dec
fidivrs
insl
mov
and
mov
add
jae
jmp
inc
fs
loopne
pop
xor
push
inc
pop
test
ljmp
pusha
xor
in
lahf
aaa
inc
push
pop
test
arpl
push
negl
aam
jg
and
pop
in
fcoml
arpl
mov
pop
arpl
add
roll
rorb
lods
bound
loope
cli
push
and
test
popa
das
jecxz
dec
out
cmp
popa
sbb
xor
in
popa
dec
mov
and
cs
cmpsb
repnz
sub
pusha
pmaxub
jo
mov
pop
inc
or
popa
jbe
ret
push
mov
in
sarb
sbb
and
mov
loope
mov
pop
cmp
in
pop
test
inc
cmp
fnstsw
push
sub
jo
lahf
adc
and
push
js
adc
mov
test
jnp
or
jb
and
fcomps
lcall
and
xchg
adc
sbb
jns
cmp
insl
pop
popa
fisubs
out
inc
packsswb
sub
xor
adc
inc
test
dec
mov
jge
sar
push
xchg
adc
pop
std
dec
add
dec
andl
mov
mov
outsl
loope
fmull
mov
je
enter
cmp
ds
dec
hlt
and
insb
add
in
jmp
cmp
jo
je
aaa
loope
int3
adc
mov
lahf
add
ja
sbb
push
mov
loope
out
add
outsl
fwait
cmp
test
popa
mov
mov
popa
test
mov
xchg
inc
push
in
call
out
outsb
sbb
jmp
cli
sub
popa
pop
and
sbb
add
popa
iret
fsubrp
xchg
cmp
sub
mov
cmp
movsl
lret
add
sahf
arpl
xchg
dec
push
mov
icebp
pusha
sub
shll
popa
push
push
shrb
mov
popa
xlat
push
mov
popa
subl
push
pop
idivb
mov
inc
push
add
and
or
xor
mov
cmpsb
scas
popa
push
and
fisubl
es
cmp
popa
sub
sahf
repnz
cli
mov
cmp
bound
cmp
sub
int
loop
dec
jb
jo
ss
jne
xchg
sti
mov
fisttpl
popa
xor
xor
sbb
pop
popa
pop
jno
cmp
popa
push
and
cs
popa
sub
push
fcomps
das
gs
and
popa
adc
aas
dec
cmp
mov
push
sahf
mov
andl
out
add
inc
mov
or
mov
sub
jl
popa
loop
and
xor
popa
cltd
es
scas
les
mov
arpl
push
inc
add
jnp
loope
add
rol
pop
mov
iret
add
stos
and
mov
scas
enter
mov
mov
cmpsl
push
push
popa
lcall
jmp
int
dec
inc
sti
inc
outsl
popa
icebp
in
adc
aas
rolb
add
cmp
xchg
cmp
ficompl
shl
push
popa
push
dec
jp
gs
mov
popa
push
lock
and
dec
popa
sbb
sub
inc
movsb
popa
rclb
lds
pusha
cld
push
xchg
push
cmp
sbb
inc
andl
or
sub
lahf
repz
popa
pop
lock
jns
push
and
pushf
fidivrl
cld
mov
and
popa
enter
and
fsubp
je
das
push
fwait
popa
adc
lods
push
cmp
jg
jle
mov
push
enter
je
fwait
loope
insb
test
jle
pop
mov
std
cmp
xchg
dec
sub
aad
xlat
mov
sub
push
lock
enter
jge
popf
int
adc
jnp
jmp
test
or
cmc
bound
push
stos
ja
adc
cmp
push
stos
ret
push
popa
lret
arpl
mulb
push
xor
int3
fimuls
fwait
mov
inc
lods
and
sahf
pcmpgtb
mov
ret
adc
inc
aad
ret
push
jp
xlat
call
adc
sub
and
frstor
sar
flds
mov
icebp
clc
xlat
xchg
push
in
icebp
or
dec
ljmp
push
xchg
mov
stos
and
popa
jae
dec
arpl
aas
sahf
insl
push
mov
popa
scas
subl
cmpsl
dec
dec
sbbb
add
movsl
or
popa
call
out
popa
or
xor
dec
test
cmpsl
bound
jne
bound
cmp
sbb
ljmp
jno
popa
push
dec
outsb
dec
pop
js
dec
popa
addr16
fildll
xlat
sub
mov
xchg
ss
mov
cmp
popa
inc
add
outsl
out
lods
adc
popa
push
cwtl
inc
gs
jb
dec
pop
popa
fcmovbe
sub
mov
xchg
fwait
mov
cltd
std
popa
push
lcall
into
cmc
and
jp
lock
call
pop
mov
jge
in
mov
pop
xor
cs
ja
fimuls
xor
cmp
xor
insb
dec
jbe
popa
fsub
outsb
fistpll
test
popa
inc
arpl
pusha
rorl
popa
mov
adc
cs
scas
cmp
rcr
jge
movsb
popa
or
add
xor
outsl
fildl
inc
inc
cli
jbe
popa
xlat
sbb
mov
adc
mov
fwait
adc
lds
insl
mov
lret
mov
sti
arpl
adcb
jb
mov
inc
mov
in
je
jg
pop
or
loope
push
cmp
fsubrl
xchg
push
mov
int3
clc
jp
xorb
mov
fimuls
popa
stos
sub
push
xchg
xchg
push
xor
outsb
loope
sahf
cmc
shlb
icebp
ret
push
scas
popa
lods
jo
int
mov
dec
lcall
jg
xchg
pop
out
pop
loopne
push
push
into
shlb
sahf
push
dec
cli
mov
jp
int3
outsl
sub
sub
aaa
add
gs
lret
sbb
stos
mov
xchg
dec
leave
jmp
xorb
cmc
xchg
popa
idivb
add
add
outsl
stc
jnp
popaw
fbld
je
fs
xor
into
repnz
xchg
inc
arpl
jbe
pop
push
and
push
lcall
lcall
loope
into
insb
jg
fisubl
push
mov
cld
adcb
popa
xchg
mov
imul
popa
into
mov
hlt
decl
popa
repz
xor
ds
or
imul
roll
inc
popa
sbb
sbb
sbb
rclb
lds
jle
mov
pop
aaa
cmpxchg
add
cmp
sbb
push
jle
out
mov
repnz
lcall
imul
fisttps
loope
insl
and
gs
sbb
jnp
dec
hlt
ljmp
repz
int3
movb
das
in
or
fs
popa
rcll
mov
iret
orl
jl
clc
fs
test
leave
or
mov
pop
popa
mov
imul
into
push
xchg
shl
or
dec
inc
popf
insb
jge
addr16
mov
fistpl
pop
sbb
aas
sub
pop
popa
rcr
push
lcall
mov
sbb
xchg
xchg
xchg
pop
das
shlb
mov
nop
insl
popa
sbb
data16
jp
les
add
bound
sbb
popa
xor
dec
fcoms
jl
iret
sub
jmp
sub
cli
daa
inc
mov
xor
outsl
fildll
cmp
add
subl
mov
add
popa
aas
xchg
inc
add
cltd
jo
loope
int
popf
fwait
insb
adc
pop
mov
pop
push
cmp
popa
mov
repnz
dec
shrb
test
popa
xor
sbb
bound
lock
popa
mov
jl
or
xchg
ret
daa
sti
rcrl
jae
add
adc
insb
enter
pop
mov
pop
daa
pop
inc
dec
and
decb
ficoms
lods
divb
outsl
mov
mov
stos
in
push
and
inc
push
pop
popa
aas
stos
in
push
les
loopne
inc
cmp
rcrl
pop
push
loop
jo
xor
pop
fidivl
data16
push
fildl
orl
pusha
in
xchg
dec
jg
push
pop
aaa
mov
out
cltd
adc
loope
xchg
fcomip
roll
mov
xor
icebp
repnz
sahf
jne
icebp
jnp
cwtl
xor
mov
mov
push
ret
mov
out
loop
ja
and
and
xchg
sbb
in
mov
aad
inc
xlat
lcall
lea
shll
mov
inc
shl
jmp
cs
repz
fcom
call
inc
pop
add
psadbw
arpl
dec
insb
pop
jno
loop
int3
mov
cmp
xlat
cmp
lahf
pop
pushf
mov
mov
dec
mov
adc
or
cs
dec
and
xchg
pop
pop
push
adc
mov
dec
inc
or
sbb
sbb
dec
cli
repz
and
mov
inc
rorl
sub
mov
mov
mov
scas
adc
add
mov
dec
iret
push
adc
sub
jae
rcrl
je
lret
mov
repz
mov
inc
lods
subb
cmp
aaa
nop
xor
sub
imul
out
movsb
sub
and
je
pop
mov
sahf
add
stc
push
xchg
jno
outsb
dec
popa
ret
cmc
push
mov
mov
jb
movsl
fsts
loop
mov
aad
cmp
cli
js
aaa
mov
jns
mov
or
std
mov
clc
in
mov
add
jae
dec
or
push
cli
jg
mov
sbb
pusha
adc
out
push
repz
xchg
stos
sbbb
pop
jo
dec
cmp
xor
popa
xor
push
aas
dec
adc
popa
sbb
sbb
inc
in
rolb
and
popa
repnz
push
add
cmc
cmp
out
into
push
popa
cmp
ret
mov
out
popa
movsl
inc
into
ss
popa
cltd
xor
mov
pop
popa
lahf
mov
add
int3
cmp
mov
cld
mov
out
sub
popa
mov
outsb
arpl
int
dec
push
sbb
mov
and
movsb
out
inc
xchg
and
subl
adc
sbb
dec
push
jle
and
push
aad
xor
mov
sub
shrl
aaa
add
stos
and
loope
mov
popa
pop
push
cmpl
xor
fsubr
xchg
dec
iret
push
mov
push
jl
imul
adc
je
popa
cmp
sub
bound
pop
cld
sub
gs
lock
arpl
add
popa
push
jbe
iret
ljmp
mov
leave
jp
stos
cmpsb
mov
mull
aaa
pop
in
push
xor
popa
jp
subl
xchg
jecxz
fidivs
push
push
fsubs
andb
je
lods
adcl
and
adc
xchg
mov
jmp
push
pop
loopne
popa
negl
or
push
cmp
std
cmp
insl
popa
int3
mov
and
or
mov
popa
fwait
pusha
adc
test
dec
mov
lods
out
lret
jns
sbb
inc
push
push
xchg
mov
stc
dec
cmp
repz
fsubrl
repnz
out
popf
shrb
popa
sbb
xorl
adc
out
movsl
jb
popa
in
ret
ja
add
xchg
popa
cmp
lods
das
iret
out
inc
stc
sbb
lock
jl
je
inc
inc
add
in
loope
push
jmp
insb
jae
jecxz
push
dec
shll
xchg
sub
sub
xlat
ret
lcall
fnstsw
mov
mov
cli
xor
mov
mov
enter
sub
mov
mov
popa
inc
jo
lret
ds
mov
test
push
mov
xchg
popa
cmpsl
pushf
lcall
rcrb
data16
loopne
pusha
icebp
andb
popa
push
mov
out
xor
xor
inc
mov
iret
or
lods
stos
es
cmp
cmp
cwtl
ljmp
adc
xchg
outsl
dec
dec
mov
pop
orl
das
cltd
frstor
rcl
test
popa
sbb
mov
popa
sbb
cmp
jg
sbb
mov
sub
jp
dec
jge
mov
movsb
jo
xchg
inc
jmp
inc
fwait
push
mov
sbb
pop
sub
cwtl
insb
mov
push
jo
mov
mov
sbb
pop
repnz
ljmp
scas
out
in
pop
inc
testl
lds
insb
pop
popa
sbb
fs
test
sbb
shrl
xchg
push
dec
addb
xchg
sbb
and
loope
xchg
and
sarb
shll
jo
cwtl
pop
xchg
sub
xchg
inc
mov
push
in
jno
inc
xchg
js
pushl
or
sahf
mov
lcall
mov
inc
pushf
cmp
popa
out
xor
or
push
jns
nop
and
popa
das
pop
test
scas
mov
add
xor
in
adc
clc
add
sarl
jecxz
cmp
push
cmp
movsb
fsubrs
popa
sarb
into
pop
nop
popa
sub
icebp
insb
pushf
mov
pop
loop
inc
sub
ja
lods
aaa
push
sub
sub
popa
mov
sahf
pop
xor
adc
and
js
pop
bound
sahf
mov
mov
mov
or
pop
les
mov
push
lock
popa
loop
ficoml
popa
sbb
push
jae
movsb
popa
jb
inc
jl
mov
xor
pushf
push
mov
inc
std
mov
popa
fcmovnu
cmp
adc
rol
jae
lret
inc
mov
outsl
repnz
addb
aas
imul
fwait
sub
inc
es
or
cmpsb
fistl
popa
fisubrl
xlat
inc
imulb
jne
lahf
aam
loope
fs
std
adc
mov
mov
or
popf
push
fisubl
inc
inc
iret
push
pushf
inc
icebp
popa
sub
jmp
popa
outsl
into
setnp
in
inc
popa
lds
je
test
inc
sub
shl
mov
faddp
dec
test
pop
mov
xor
dec
inc
rol
outsb
mov
push
je
jns
xlat
popa
sbb
xchg
cmp
mov
xchg
mov
aad
push
rcrb
pop
sbb
ljmp
mov
aaa
xor
xor
mov
mov
push
pop
and
ds
flds
test
adc
adc
sub
inc
and
mov
jl
popa
pop
movl
outsl
je
loopne
stos
je
push
sbb
aad
popa
in
mov
dec
jo
mull
out
fs
inc
and
popa
adc
push
mov
nop
shrb
punpcklwd
outsl
cld
sbb
fimull
addr16
inc
popa
jae
jb
push
mov
xlat
adc
loopne
push
frstor
imul
push
decb
data16
aad
jne
push
inc
xchg
les
dec
xchg
xchg
mov
ficomps
pop
repz
cmp
or
ja
fs
jcxz
cmc
in
mov
test
or
push
xlat
test
pop
shr
int
in
inc
sub
imul
add
jbe
and
lock
sbb
bound
xor
inc
xor
addl
adc
js
and
andb
add
dec
popa
xor
stc
and
cs
mov
clc
insb
iret
repz
xchg
popa
xor
jmp
jp
and
int3
pop
dec
adc
out
movsl
popa
clc
int
pushf
lahf
lcall
sti
mov
pop
bnd
or
push
mov
cli
add
or
and
push
lret
bound
cwtl
test
out
push
lahf
adc
jae
xchg
mov
rclb
out
iret
test
sbbb
popa
jg
sbb
out
mulb
aaa
xorb
dec
repnz
jg
adc
ds
lret
push
or
push
add
mov
add
dec
sub
pop
push
xor
add
adc
icebp
scas
outsl
mov
into
or
bnd
lret
popa
shl
stc
pushf
imul
icebp
sbb
movsb
fnstenv
sti
push
bound
xchg
or
int3
dec
push
loopne
push
popa
lahf
jno
enter
aad
and
cld
fisubl
xor
fistpl
inc
pop
cmpsl
mov
aas
cmp
and
ret
iret
xor
lahf
out
bound
stos
pop
cmpsl
rcr
orl
or
or
shll
ret
pop
jp
fimuls
push
mov
sbb
loope
add
es
lds
xchg
je
fwait
dec
out
dec
mov
mov
outsb
bound
jl
popa
pop
adc
lods
jge
icebp
ja
lret
and
inc
adc
or
xchg
aam
mov
fdivl
pop
sbb
sbb
mov
popa
pop
arpl
test
add
push
adcb
insl
sbb
sbb
mov
and
mov
repnz
shlb
cs
push
sahf
adc
adc
popa
or
repnz
aad
cwtl
popa
sbb
cmp
mov
popa
jo
inc
sbb
xor
sub
repz
sti
cltd
je
bound
lods
pushf
mov
out
ja
add
ret
pop
popa
adcb
fbld
cmpsl
call
shlb
ja
inc
cltd
scas
scas
add
repz
jne
out
mov
cltd
pop
mov
cmp
loope
jo
cli
lods
dec
insl
lret
jo
mov
cmp
ret
lds
xchg
xor
lods
jae
mov
rcr
testl
popa
sub
mov
inc
bound
mov
pop
sub
mov
ss
sbb
or
add
fs
jmp
nop
sub
movsl
adc
popa
repz
jns
pop
shrl
enter
shrb
jo
xchg
scas
or
mov
inc
or
loope
xchg
inc
adc
xor
test
gs
popa
addl
mov
xchg
scas
jge
popa
imull
pop
out
clc
mov
push
dec
and
movsl
popa
lods
dec
testl
sub
aad
lret
jno
test
jmp
adc
mov
loope
or
add
adcb
popa
fcoms
inc
mov
push
test
pop
pop
and
xabort
sarl
jno,pt
hlt
xchg
insl
jge
mov
clc
xchg
out
in
mov
xor
fistps
mov
jmp
cltd
bound
rcl
lahf
arpl
lret
nop
and
mov
cltd
popf
sbb
xor
fstp
lods
adc
pop
jg
je
mov
ja
pop
inc
sbb
popa
jnp
test
test
xor
adc
dec
ret
inc
cmp
sub
pop
repnz
mov
popa
xor
add
jb
popa
mov
inc
sbb
sub
ds
ret
jnp
add
sbb
cmp
jecxz
pop
scas
mov
and
popa
fwait
testb
mov
addr16
or
call
outsb
shr
ja
aam
popa
jno
fstps
lahf
push
out
or
xor
dec
adc
fcom
add
dec
js
and
popa
mov
sub
movsl
ficoms
and
ja
fistpll
stos
popa
mov
and
xchg
popa
push
sbb
mov
out
insb
mov
pop
popa
dec
dec
insl
jnp
sub
mov
push
adc
add
xchg
push
or
int
orl
data16
lcall
lods
call
jae
aas
fistl
sub
mov
mov
loope
in
xlat
inc
cmp
sub
std
das
fsubs
fsts
sbb
jg
cmpsb
stos
adc
dec
mov
and
jg
push
data16
xchg
shll
movsl
lret
cmc
int3
lcall
ficompl
mov
orb
sbb
inc
cmpsl
cmp
sub
leave
imul
xchg
inc
movsb
push
popa
in
xor
jb
divl
test
inc
sub
pavgb
popa
sahf
rol
hlt
and
frstor
popa
cwtl
lret
andl
jb
push
fmul
nop
xor
push
pop
xchg
int3
rcr
push
adc
popa
mov
or
sub
fcoml
and
pop
outsl
popa
stc
or
das
popa
add
rcr
push
es
dec
popa
inc
out
push
std
ja
rolb
push
insl
fadd
stc
aad
popa
jge
xor
out
pop
pop
popa
push
je
push
sbb
movsl
popa
pop
test
mov
aad
lds
inc
cld
push
test
fstps
test
dec
popa
add
mov
xor
fdivrs
inc
push
add
mov
andb
and
mov
repz
push
jecxz
popa
insl
mov
mov
xchg
popa
mov
sbb
gs
mov
insb
jmp
pop
popa
outsl
fisubrl
jg
loopne
in
sbb
jnp
sub
pusha
in
roll
dec
fisubs
cmp
into
xchg
and
mov
inc
outsb
xchg
int
popa
inc
mov
loop
mov
push
arpl
jmp
xchg
jp
lahf
and
out
cmp
fisubs
in
cmpsb
jge
int3
xlat
inc
jo
jb
mov
inc
ljmp
push
mov
imul
cmpsl
pop
push
xor
mov
sbb
mov
xchg
push
sbb
add
rorb
pushf
lcall
mov
sub
ret
xchg
fiadds
cltd
sub
sarl
jae
and
cli
repnz
aaa
ret
imul
scas
mov
mov
and
pop
fstl
popa
add
push
xor
movsb
movsl
in
jg
or
in
and
loopne
jmp
dec
in
pushl
popa
cwtl
xchg
fcompl
das
les
popa
mov
xchg
aad
call
bound
cmp
daa
popa
pop
cmc
mov
mov
js
je
outsb
lods
or
popa
test
sub
adc
rorb
andl
mov
shll
test
icebp
pop
orb
push
daa
mov
arpl
push
mov
mov
enter
and
ss
pop
icebp
mov
fidivrl
inc
jns
push
jno
popa
outsb
push
pop
adc
cmc
xor
popa
aad
inc
jp
gs
insl
jne
loope
pop
xor
jge
daa
fwait
popa
fadds
inc
popa
jecxz
cmc
aaa
sahf
add
dec
popa
test
jo
loope
stc
stos
mull
je
and
lods
out
xchg
mov
addr16
xchg
dec
sbb
enter
out
popa
mov
xchg
sti
jg
fldl
pop
pop
mov
add
jo
outsl
jge
inc
cmp
loope
and
popa
sarb
jle
pushf
xchg
pushf
loope
enter
mov
mov
pop
mov
lcall
xor
popa
nop
mov
and
daa
xchg
andl
inc
inc
and
sbb
mov
xchg
fs
popa
icebp
pop
push
dec
mov
pushf
cmp
fwait
push
sti
popf
cmpsb
out
popa
nop
or
xchg
in
je
imul
mov
jbe
mov
popa
nop
out
or
mov
aam
iret
stos
push
ret
dec
insb
popa
dec
scas
sti
jecxz
xor
xchg
mov
cmp
icebp
sub
xor
popa
sbb
pop
pop
pop
std
dec
xchg
popa
dec
ja
imul
into
jb
cltd
popa
movsl
xor
roll
scas
test
lea
mov
jge
pop
jns
out
test
insl
js
popa
cwtl
sub
cmc
test
inc
sbb
push
jg
cmp
loope
cmpsl
adc
aas
lock
or
xchg
test
adc
sbb
es
cmp
loope
in
adc
popa
aaa
rcr
pop
push
sahf
or
jge
inc
and
dec
int3
push
pop
dec
and
and
les
js
add
mov
push
cli
cmp
xchg
in
inc
mov
and
call
rorl
inc
inc
popa
pop
stos
scas
lret
xor
push
sti
enter
mov
std
popa
out
sbb
repz
arpl
stc
jbe
loope
add
popf
rcll
dec
nop
mov
sahf
rclb
fs
aaa
aas
fsubs
lcall
cmp
popa
enter
nop
sbb
gs
popa
mov
mov
int3
imulb
out
rcll
pop
and
out
xor
cltd
hlt
inc
xchg
inc
add
popa
jl
les
popa
cmpsb
mov
push
nopl
or
out
popa
aam
cs
adc
jge
stos
clc
loope
xor
in
mov
xchg
xchg
enter
sar
cmp
aaa
ja
mov
imul
aas
dec
xor
pop
lods
in
rorl
lods
or
loopne
ljmp
xor
push
popa
aas
je
dec
movsb
mov
mov
mov
and
and
loopne
mov
pop
lods
push
enter
pop
into
popa
sub
cmp
les
and
and
push
popa
sub
fs
test
scas
jge
movsb
popa
push
mov
popa
lahf
insl
sti
cmpsl
das
mov
or
xchg
push
cmp
push
nop
pop
in
jecxz
mov
rolb
clc
push
inc
push
cwtl
popa
cs
in
int3
jns
rorl
adc
xchg
mov
push
enter
sahf
sub
push
mov
popa
out
push
jmp
popa
fildll
mov
mov
sahf
xchg
cmp
mov
jbe
mov
and
ss
sbb
mov
push
cltd
push
sub
xchg
push
inc
out
loop
insl
sahf
mov
xor
jmp
fmull
push
mov
and
push
pop
clc
mov
dec
inc
pop
fucompp
xor
inc
sbb
or
mov
stc
icebp
rcrl
push
cmp
push
pop
pusha
mov
subl
sbb
mov
js
fldenv
pop
or
mov
fists
push
fs
stc
jno
pushl
inc
sbb
cmc
adc
sbb
test
push
pop
dec
cmp
out
xchg
adc
dec
je
aam
or
mov
sub
inc
lret
jmp
fnstcw
repnz
popl
scas
lahf
sbb
pop
icebp
push
jo
and
pop
cwtl
int
add
mov
xor
outsb
ds
dec
sub
shrb
push
imul
xchg
and
imul
and
pop
lds
test
gs
cmp
push
sub
pop
dec
xchg
fs
push
xchg
loope
aaa
mov
sbb
imul
mov
jmp
icebp
sub
xchg
sbb
scas
cmpl
xor
movsl
xchg
inc
sbb
xor
dec
and
push
shl
dec
and
ljmp
and
scas
sbb
sub
push
cli
mov
fcompl
push
popa
out
push
jnp
adcl
or
popa
lcall
fisubs
xor
sbb
call
and
lret
rorb
sbb
lcall
ja
enter
lds
adc
or
std
loop
repz
mov
popa
and
cmp
popa
cmpsl
addr16
nop
inc
mov
gs
push
jnp
and
cmp
icebp
fs
pusha
pop
loop
or
or
mov
and
cmp
notb
incl
test
aad
shrb
shll
xchg
pop
popa
loope
je
push
add
daa
std
add
bnd
incl
push
mov
dec
cs
les
sbbb
aad
xor
out
in
sti
mov
jmp
movsb
popa
sbb
xchg
in
sbb
dec
lahf
je
pusha
lods
inc
shrd
mov
jns
xor
jb
sbb
rcrb
popa
jg
cmpsl
clc
add
jl
mov
push
popf
xor
jae
popa
inc
fs
sbb
push
sub
mov
jl
cltd
xor
outsl
loopne
cmp
popa
popf
jb
xchg
int3
and
cs
int
push
or
or
sahf
cmp
popa
and
dec
xor
notb
jmp
xchg
in
adc
mov
ret
push
mov
xlat
test
je
fadds
outsl
adc
inc
dec
orl
ret
rcrb
test
xchg
mov
popa
loop
inc
cmp
lret
adc
loopne
aas
test
fldt
sti
and
shlb
aad
mov
data16
or
mov
and
in
insl
lcall
xor
xchg
popa
lds
movsb
sub
popa
aad
xlat
and
pop
dec
adc
and
lds
xchg
popa
fistpll
out
mov
ret
cmp
cwtl
adc
jb
jne
inc
xchg
xchg
adc
mov
outsl
loop
mov
xor
arpl
mov
js
mov
xor
bound
loopne
popa
clc
mov
jae
aam
push
out
popa
mov
mov
mov
push
cmpsl
push
popa
mov
jns
dec
mov
out
fildl
sub
popa
cmp
mov
movsl
mov
push
rol
or
mov
xchg
sub
gs
orl
xor
aaa
lahf
sub
fbld
adc
movsb
shlb
inc
imul
adc
jne
inc
push
es
jmp
mov
in
cltd
in
loope
stc
scas
and
sub
ljmp
out
sub
dec
pop
mov
bound
pop
ret
movsb
test
stc
sbb
imul
fisubl
jno
push
mov
dec
and
int3
pop
xchg
jg
pushf
cmp
in
loope
cmp
jns
ffree
bound
ret
sub
push
fld
mov
xchg
bound
sub
cmp
ss
pop
sbb
cmp
loop
or
mov
call
or
popa
add
into
xchg
scas
pop
lock
xor
int
pop
stos
push
ret
jge
popa
jo
push
inc
sbb
jo
jno
pusha
iret
or
push
mov
xchg
subl
cli
mov
fmuls
icebp
scas
test
jo
push
xor
dec
dec
mov
bound
ss
lods
mov
fistl
mov
test
cmc
popa
int
sub
call
lock
fwait
test
pushf
mov
cmpsb
stc
lcall
mov
lahf
dec
xor
jecxz
stos
mov
xlat
cmp
sar
mov
aaa
mov
mov
mov
popa
cmp
add
shrb
pop
out
xchg
mov
pop
jl
mov
sbb
repz
inc
mov
fimull
nop
popa
pop
daa
mov
popa
shrl
mov
loop
leave
mov
repz
movsl
pop
cwtl
shrb
xorl
cmp
out
xor
arpl
cmp
popa
repz
in
jne
mov
push
sahf
xchg
mov
and
cmp
movsb
lahf
jle
int3
push
call
pop
ja
xchg
mov
cwtl
sti
bound
std
mov
cmp
add
mov
popf
mov
and
ret
mov
mov
dec
or
pushf
adc
add
push
jae
outsl
int3
adc
xchg
imul
adc
xchg
sbb
popa
sbb
sbb
pop
stos
sub
arpl
xchg
mov
dec
divl
jb
popa
push
mov
sub
push
mov
jbe
pop
popa
insb
out
fwait
lahf
inc
mov
mov
popa
or
iret
or
bound
daa
int
push
adc
sbb
and
bound
or
mov
popa
hlt
aam
ds
addr16
push
cmp
mov
jbe
imul
pop
popa
and
les
popa
ret
cmp
push
inc
outsl
std
sub
mov
sub
popa
iret
push
jmp
rclb
sahf
mov
pop
mov
and
jns
scas
sub
and
or
inc
mov
outsl
rcr
inc
pop
mov
test
outsb
dec
ds
leave
popa
std
sarb
xchg
paddsw
and
push
test
out
popa
xchg
icebp
pushf
dec
out
ret
cmpl
shrl
bound
push
adc
dec
popa
mov
jne
popa
shll
mov
popf
mov
dec
int
mov
push
jae
sahf
icebp
popa
fcoms
das
imul
sbb
mov
pop
inc
dec
xorb
adc
jge
out
add
int3
fisttps
cmc
das
andb
sahf
pop
lahf
pop
test
xlat
mov
pop
out
push
popa
mov
xor
inc
xor
subb
xor
jle
jl
stos
pushf
arpl
fs
inc
and
cli
sbb
jmp
popa
fisttpl
btc
add
inc
insl
dec
inc
popa
mov
roll
sti
leave
aas
clc
mov
pop
jae
push
sub
stmxcsr
icebp
xchg
fsubl
dec
jge
jle
popa
data16
in
xor
cld
dec
jmp
mov
js
pop
push
test
lcall
mov
or
dec
jle
push
fcomip
or
or
out
loope
jb
fcomp
xchg
push
fbstp
test
fstpl
icebp
dec
push
ja
fadd
popf
aaa
loope
mov
sti
shrb
stos
imulb
inc
pop
fisttpll
stos
test
xchg
lcall
popf
call
popa
sub
daa
arpl
lods
rcrb
pop
xor
jb
fdivs
rcrl
gs
scas
rolb
cld
cmp
adc
popa
popf
xchg
clc
stos
add
pop
xor
sub
sbb
shlb
aad
pop
or
addr16
dec
mov
push
lods
popa
mov
xorb
bound
add
mov
into
fnsave
xor
in
ja
pop
push
rorb
sbb
fs
daa
les
nop
dec
popa
orb
push
jmp
cli
popa
cmp
outsl
cmp
les
xlat
shl
popa
and
xor
or
aam
out
jno
popa
and
xor
dec
outsl
iret
lods
outsl
mov
jle
out
aad
rcr
jmp
mov
fidivs
popa
pop
jge
xchg
je
decb
shll
jae
popa
scas
loopne
push
adc
xchg
adc
ret
push
cli
repnz
outsl
push
lret
add
mov
sbb
test
cmp
dec
push
mov
jmp
add
adc
test
loop
dec
shll
popa
mov
cmp
popa
lret
leave
mov
pop
fiadds
push
push
fwait
or
lods
cmpsb
mov
inc
inc
cmp
and
dec
xor
xchg
cmp
daa
mov
push
xorl
push
push
test
fistl
push
jmp
idiv
mov
mov
bound
and
adc
push
add
shrl
push
dec
mov
push
fistps
addr16
shr
and
imul
push
push
adc
imul
pop
aad
in
jae
xchg
rclb
ss
sarl
add
popf
test
sbb
lahf
cmpsl
pusha
lea
jg
je
push
jae
pop
sub
sbbl
imul
clc
cmp
jcxz
shll
mov
dec
push
xchg
and
inc
mov
xor
push
lds
mov
jbe
mov
cmp
pushf
fisttpl
sarl
sbb
fisttps
leave
xchg
pop
xor
inc
addr16
js
iret
add
js
dec
or
in
bound
lea
andl
xor
out
out
popa
inc
mov
and
popa
push
xchg
push
je
dec
and
add
scas
mov
popa
repnz
fucomip
pop
shll
push
stc
xchg
add
int
rolb
push
xchg
xchg
shlb
xchg
hlt
loope
jl
fs
into
sub
push
aam
jmp
push
imul
pusha
sahf
jno
xchg
and
mov
adc
out
push
jo
popa
jae
daa
mov
aad
push
mov
pop
jg
ret
adc
xchg
add
inc
cmp
loope
arpl
inc
neg
in
xchg
cltd
push
nop
inc
jo
push
cld
enter
sub
data16
bound
sub
mov
dec
inc
fstl
xchg
mov
push
mov
popa
fldt
cli
mov
cmp
xchg
repnz
xchg
mov
hlt
mov
clc
popa
and
scas
scas
dec
popa
in
shrb
ds
sbb
pop
sahf
test
in
xchg
out
mov
sub
xchg
cltd
arpl
mov
jnp
int
hlt
ret
fstpt
bound
shlb
xor
outsl
push
xlat
ja
jmp
popa
cmc
jnp
out
loop
jo
lret
and
fwait
mov
incl
popa
pop
gs
fldenv
imul
and
mov
popa
sahf
inc
cmp
int3
popa
inc
inc
loopne
arpl
cmpsb
xchg
imull
or
push
out
sub
push
ljmp
cmp
fisttpl
inc
xchg
loopne
bound
pop
inc
dec
or
pop
lcall
lock
adc
popa
rcl
imul
dec
popa
dec
pop
fucomip
pop
out
loop
shrl
mov
std
nop
daa
fldenv
sarl
popa
xchg
addr16
mov
popa
or
gs
cltd
pop
push
fsubl
jns
into
pop
je
jbe
mov
sarb
imul
jg
popa
inc
ds
lds
lods
popa
pop
paddd
popf
das
push
popa
rcrl
add
popa
rep
outsl
pop
adc
push
mov
mov
push
lahf
std
sub
or
sbb
pop
insl
mov
adc
or
jno
popa
nop
sbb
mov
popa
jge
mov
dec
popa
pop
mov
mov
jo
jne
fwait
popa
or
rolb
aas
test
lds
ret
jmp
xchg
xor
in
or
add
rolb
aaa
push
inc
lods
popa
rclb
popa
push
imul
jne
jp
fisubrl
insl
push
add
mov
popa
sub
pop
adc
popa
cmp
cmpsl
jne
xchg
mov
sub
sub
enter
sbb
popa
sarl
cmp
js
mov
popa
lret
jge
ja
add
popa
or
xchg
add
push
pop
xchg
adc
mov
mov
scas
sub
inc
and
xchg
mov
ja
gs
mov
and
sbb
sub
aaa
iret
cmp
push
add
cmpl
mov
adcb
insl
scas
sbb
jmp
in
negl
daa
add
mov
jb
push
out
or
mov
mov
stos
jo
add
mov
arpl
int
ret
cwtl
loope
imul
add
add
outsb
mov
inc
and
push
bound
popa
xchg
sub
movsl
mov
mov
fldenv
cwtl
jnp
fidivs
add
fisubl
adc
xor
popa
pop
xchg
push
cld
mov
in
fs
inc
add
test
mov
shll
ja
mov
jle
and
adc
leave
push
inc
lock
lahf
jle
jge
sti
fs
je
mov
adc
mov
scas
imul
cmp
mov
pop
fisttpll
repnz
popa
push
std
scas
cld
pop
fs
arpl
or
cltd
and
xorl
mov
outsb
lret
repnz
add
xchg
ficomps
fld
popa
jmp
es
or
movsl
push
dec
cli
ret
mov
push
in
popf
loope
sub
cmp
mov
jae
pop
imul
int3
or
popa
leave
sbb
sbb
push
jnp
jne
jmp
cmp
fadds
adc
roll
mov
xor
sarl
lahf
push
aas
pop
loope
pop
add
inc
mov
and
cmp
inc
xchg
imul
pop
fsubl
mov
popa
push
negb
stc
popa
pop
pminsw
pushf
xchg
cmp
ds
imul
arpl
mov
and
add
mov
cmp
popa
or
fists
std
popa
stc
sbb
pop
mov
jbe
and
stos
lds
mov
cmp
loope
xchg
sub
fidivrs
shr
and
inc
pushw
and
mov
pop
cmpsl
bound
xchg
fnsave
xchg
sbb
popa
pop
mov
popa
xor
aaa
jmp
xchg
sbb
popa
add
lods
dec
mov
inc
lcall
pop
lea
popa
fimuls
shll
mov
add
dec
and
popa
sub
test
sub
adc
add
and
ficomps
lahf
mov
and
or
jge
jmp
pop
mov
popa
fwait
cmpsl
insl
stos
mov
mov
aas
cld
xchg
push
ds
shl
popa
dec
ljmp
popa
xchg
fsin
mov
xor
and
add
xor
popa
xor
icebp
sbb
cltd
movsb
pop
cmc
cmpsl
jle
andl
das
ficoml
xor
xor
insb
lods
fstpt
lock
test
or
adc
jnp
push
sahf
mov
outsl
std
stos
jg
les
hlt
dec
dec
push
repz
lods
and
bound
mov
inc
out
arpl
pop
dec
add
pop
mov
and
sbb
mov
dec
and
fistps
mov
nop
mul
push
dec
pusha
popa
mov
pop
fsubs
insl
pop
insb
jmp
jge
mov
inc
popa
das
jo
arpl
cmp
test
mov
fsubrs
sub
and
sub
xor
push
jns
loope
xor
frstor
push
mov
popa
pop
subb
gs
popa
fmull
cwtl
popa
push
ret
lds
push
fs
mov
mov
jnp
arpl
cs
push
mov
repnz
int
jbe
mov
mov
popa
add
adcl
ss
dec
pop
sar
dec
je
xor
cwtl
pop
jle
mov
movmskpd
out
popa
pop
adc
xchg
xchg
push
call
dec
rclb
sahf
pop
bound
xor
out
jo
cmc
pop
xchg
pusha
cmp
adc
sbb
popa
insl
lods
fwait
push
pop
jle
jmp
in
addr16
pop
mov
rcrl
ljmp
clc
sub
cwtl
pop
and
out
rcrb
or
daa
popa
push
nop
mov
out
pop
xor
jmp
cmp
add
daa
imul
imul
fimuls
push
mov
aam
adc
xchg
scas
pop
fnstenv
enter
push
in
inc
jbe
sbb
das
fwait
mov
int3
stos
xchg
mov
jge
push
adc
jo
imul
inc
xadd
arpl
xchg
sub
pushf
aaa
dec
xor
loope
cmp
xor
ret
scas
popa
mov
pushf
push
aad
outsl
sbb
aas
and
xchg
cmpsb
cmpsl
mov
push
cli
pop
pop
or
cmp
mov
gs
mov
dec
pop
out
leave
pop
test
jb
mov
or
cmpsl
sub
loop
sub
pop
sbb
shlb
ljmp
pushf
popa
dec
loop
xchg
test
stos
push
shlb
insb
pop
int
mov
fbld
pop
rcl
mov
mov
rcrb
and
jnp
jns
mov
lea
sub
sub
and
add
xor
ret
out
pop
nop
cmpsb
idivl
aam
or
popf
xor
mov
mov
mov
mov
idiv
leave
sub
arpl
ds
out
cld
fs
shlb
rcrl
fstps
sbb
insl
xor
mov
pop
and
clc
jl
jge
cmp
shll
mov
push
orl
inc
cmp
in
out
aad
sub
arpl
fisubs
lret
inc
loopne
dec
pop
dec
fstl
mov
lret
pusha
push
loopne
pop
mov
add
mov
in
insl
movsl
push
add
mov
jbe
and
jae
add
and
leave
pop
mov
outsb
push
jne
and
mov
sbb
or
mov
mov
out
loope
dec
pop
mov
jno
int
jecxz
out
pop
mov
iret
adc
mov
stc
popa
leave
inc
fxch
icebp
push
mov
ljmp
mov
insb
in
loope
xchg
pop
rorb
dec
push
repz
and
out
mov
and
sbb
roll
dec
ret
std
fadds
leave
and
adc
dec
fmul
fiadds
inc
mov
in
insl
inc
xor
jns
fcomip
imul
jbe
std
sub
sub
push
xchg
mov
cmp
jo
fsubs
filds
cld
mov
jae
cmc
mov
jmp
stos
dec
fidivrs
scas
popa
std
sbb
mov
adc
cmc
loope
jge
mov
data16
ds
or
cli
or
ljmp
push
aam
mov
adc
push
pop
jno
jb
add
loopne
in
popa
icebp
ja
shlb
or
out
mov
mov
jns
xorb
popa
mov
mov
xchg
popa
scas
loope
aas
pop
lods
jmp
push
push
sbb
aad
adc
shrb
cmp
popa
loop
or
lret
movsb
push
jo
push
sub
mov
int3
inc
jb
fdivl
out
mov
fildll
ret
cmc
nop
mov
pop
pop
cmpsb
je
sbb
pop
cmpsl
push
push
stc
popa
or
pop
out
call
jo
ret
pop
leave
and
popa
mov
lret
add
pop
clc
adc
loope
stos
dec
fisubs
adc
sarb
sbb
loope
gs
sub
ret
ja
call
sti
scas
into
loope
or
test
add
popa
stc
ret
mov
fisubs
popa
popa
pop
je
jbe
popf
jmp
mov
leave
imul
push
popa
scas
adc
loopne
adc
or
popa
and
sub
mov
xchg
push
outsl
add
xor
pop
std
popa
in
fidivrs
shrl
loope
inc
sbb
je
icebp
ss
std
insb
ficomps
pop
popa
mov
les
bound
mov
cmp
and
inc
popa
dec
jecxz
imull
cmp
mov
movsl
pop
sete
mov
dec
imul
lds
outsb
inc
lods
mov
je
out
adc
and
inc
inc
popl
in
stc
sbb
mov
loope
and
xchg
int
popa
dec
inc
popa
std
and
lcall
je
adc
loope
sbb
xlat
enter
xchg
loope
dec
out
ja
push
bound
push
dec
in
mov
les
jl
stos
sub
xor
dec
inc
xchg
stos
int3
add
dec
popa
mov
in
pushf
cmp
dec
sub
sti
cld
popa
shlb
sub
push
shl
loope
mov
popa
inc
cmp
push
sub
in
add
xor
popa
cmp
aas
adc
xchg
jb
std
mov
in
jmp
sbb
shr
stos
jge
movsb
push
outsl
xlat
js
xchg
ss
dec
popa
mov
xorb
mull
lds
dec
pop
movsl
pushf
les
dec
ja
loop
sub
rcll
into
das
in
fldenv
cli
int
fbld
push
jae
mov
shl
testb
mov
repnz
inc
mov
sbb
movsb
xor
mov
mov
push
jno
out
or
rcl
fisttps
jmp
ja
push
popa
std
xchg
push
out
add
dec
fs
in
adc
jo
ljmp
in
push
outsb
hlt
popa
push
cmp
inc
fwait
push
cld
out
inc
add
cmc
out
popa
xchg
test
js
divb
pop
lods
out
je
popa
dec
test
dec
mov
pop
push
lahf
jnp
popa
insl
inc
sbb
push
sahf
outsb
popa
bound
sbb
popa
and
ret
or
sub
or
mov
dec
mov
add
jo
lret
mov
mov
popa
fldcw
lret
adc
dec
clc
cmp
adc
mov
sbb
mov
fbld
in
mov
in
outsb
popa
cmp
test
lock
popa
and
andl
cmpsb
mov
popa
jg
leave
fwait
cld
fimull
push
test
int
adc
popa
aad
jge
jno
incb
or
push
jo
pop
ss
cld
andl
xor
pushf
sub
pop
sub
xchg
or
rolb
xor
sbb
in
fstl
pop
popa
pop
push
mov
int3
mov
fimull
cwtl
xchg
loop
popa
ss
btrl
adc
mov
nop
and
xchg
in
xchg
mov
call
popa
int
cmp
or
ds
jae
or
shr
dec
add
loopne
lods
sub
popa
addb
ret
adc
test
mov
int3
mov
or
mov
inc
xor
push
js
mov
mov
movsb
mov
cmp
out
mov
inc
lcall
imul
int
jbe
mov
je
sahf
cmpsb
or
stos
sub
adc
mov
pop
dec
push
cmp
loope
jbe
ljmp
xor
push
in
popa
std
jl
pop
addb
cmp
fstl
popa
xchg
inc
int
mov
mov
or
mov
push
outsl
add
mov
mov
push
aam
cltd
xor
movsl
and
jmp
es
mov
sbb
lcall
push
dec
lcall
mov
jge
outsl
popf
sbb
cmp
adc
mov
and
fyl2x
xorl
xor
out
outsl
mov
mov
mov
mov
in
mov
cmp
lds
outsl
lret
jbe
popa
mov
lcall
popa
mov
out
popaw
and
mov
testb
stc
push
in
popa
and
sbb
xor
popa
fwait
mov
pop
inc
cmp
jge
mov
inc
jnp
xchg
scas
cli
dec
inc
add
repnz
xorl
ffreep
imul
inc
test
popa
ret
cld
sti
or
push
out
jp
mov
sbb
jae
popa
aaa
cmp
mov
repnz
sub
rclb
add
adc
or
mov
icebp
mov
xor
pop
cwtl
popf
stos
fsubl
data16
popa
jns
cmpsl
dec
ret
mov
and
mov
dec
inc
mov
pop
int
outsb
cld
movsl
push
pushw
pop
mov
or
stos
ja
sarb
and
popa
and
movsl
arpl
jns
mov
jo
sub
dec
inc
cmpsl
bound
mov
int
inc
test
pop
fwait
mov
loope
daa
movsl
popf
xor
movsb
jo
idivl
shlb
xor
adc
imul
sti
rolb
xor
push
inc
adcl
or
dec
jae
jle
cltd
xor
popa
sub
out
jl
out
sahf
pushf
mov
mov
dec
xchg
mov
popa
jae
inc
ret
adc
popa
call
dec
stos
or
or
mov
push
lods
pushf
pusha
popa
outsl
test
add
lea
inc
add
punpckhbw
jl
rorb
pop
popa
push
stc
sbb
arpl
mov
mov
dec
out
jmp
xor
pop
sub
lahf
ffree
enter
popa
sbb
lods
aas
dec
and
dec
nop
or
xchg
popa
loopne
lds
cmp
les
popa
push
pop
test
pop
cmp
push
push
sarl
mov
add
fcmovnbe
and
jo
imulb
sahf
or
add
cmc
and
jbe
inc
pusha
dec
cld
popa
out
mov
in
popa
inc
sub
jge
shll
popa
mov
mov
insb
loopne,pn
xchg
mov
push
popa
rcrl
xchg
cmpsb
inc
bound
and
roll
popa
xor
imul
popa
xor
test
mov
das
push
arpl
mov
or
push
popf
adc
popa
mov
push
lret
jns
movsl
push
popa
mov
mov
hlt
cmp
adc
jb
push
bound
xor
pushf
and
fbstp
fisttps
adcb
mov
dec
mov
repz
cmp
add
int
cwtl
popa
sbb
fs
jecxz
popf
cmp
fsubl
mov
push
cmc
push
jg
jb
xchg
scas
pop
bound
out
mov
movsl
scas
and
jb
dec
inc
and
cmp
repz
popa
cmp
rorl
mov
loopne
push
inc
adc
popa
ds
mov
mov
nop
in
fs
stos
bound
sub
bound
mov
or
repz
test
outsb
lret
cmp
out
jbe
and
push
pusha
push
dec
and
jae
push
cltd
add
bound
in
push
mov
dec
imul
in
jo
sbb
lea
dec
xchg
in
cld
jae
fistl
arpl
push
dec
cmp
icebp
jmp
mov
push
es
add
or
in
or
xchg
shlb
popa
outsb
hlt
leave
mov
jns
jbe
xchg
pushf
push
pop
fmull
jne
jge
pop
xor
mulb
sbb
std
in
mov
popa
mov
fxam
and
add
pop
stos
pusha
and
out
inc
mov
popa
mov
pop
xor
shrl
stos
mov
cmpsl
arpl
inc
pop
mov
pop
outsb
mov
and
movsb
cmc
dec
cltd
cmp
jecxz
cmp
lcall
mov
pop
xor
pop
push
aaa
xchg
ja
in
sub
lcall
movsl
add
popa
mov
add
mov
mov
mov
inc
pop
jns
rcrl
out
pop
mov
adc
leave
insb
in
adc
adc
movsl
fcoms
stc
jb
leave
push
and
shlb
movsb
mov
jl
pop
ret
in
pop
jecxz
lock
sub
in
bound
push
movsl
inc
or
add
dec
loop
popf
mov
pop
in
lret
jns
dec
xchg
aad
add
enter
aas
mov
adc
xchg
pop
dec
cmp
add
aas
shl
rclb
push
cmp
dec
xchg
inc
dec
ja
mov
sbb
addl
jl
sar
mov
mov
mov
fmuls
out
lods
add
and
loopne
mov
jb
adc
cmc
mov
lret
std
xor
or
divb
daa
loope
leave
xlat
mov
xchg
jmp
mov
ret
sub
in
mov
xchg
jnp
lock
sbb
in
fsin
push
adc
fisttps
int
jno
imul
adc
aas
and
outsl
mov
adc
mov
repz
insb
mov
enter
mov
in
ja
xchg
pop
lods
pop
mulb
mov
fcompl
into
nop
mov
dec
imul
push
negl
sbb
test
and
lret
sbb
jbe
xchg
adc
xchg
imul
fbstp
stc
sahf
mov
sub
dec
pop
jnp
fstl
aam
fs
and
inc
out
push
shrb
ljmp
add
dec
sbb
cmp
xor
push
popf
mov
and
cltd
shlb
dec
sbb
in
shl
ljmp
je
cmp
mov
aad
test
inc
push
popa
lds
jle
mov
adc
pusha
dec
jno
js
in
pop
popa
or
lock
loope
stos
xchg
das
inc
sbb
and
jae
xchg
aas
mov
sbb
xor
sbb
scas
movsb
faddl
mov
mov
cld
addr16
in
sahf
mov
pop
shll
imul
add
popa
cmpsb
das
in
and
mov
sub
cmp
lcall
dec
cmpsb
out
in
repnz
lods
push
or
bound
stos
jmp
nop
push
cmpsb
shrb
popa
outsl
daa
inc
xor
sti
xchg
cmp
inc
xchg
dec
mov
xchg
add
pop
loop
inc
pop
mov
sbb
mov
jp
enter
jle
jo
push
iret
pop
and
jns
inc
mov
pop
insl
sub
repz
mov
out
mov
je
dec
jmp
jl
in
add
aas
ss
xor
int
xor
cld
xchg
popf
push
inc
xor
mov
repnz
arpl
sbb
lods
es
add
imul
jae
push
push
daa
loop
lret
push
cmp
mov
std
fildl
cmc
mov
xchg
jns
pop
dec
fldl
stos
sbb
sbb
cmpsb
shrb
add
cmp
xor
fnsave
loop
add
pop
pop
mov
clc
jp
popa
push
nop
outsb
pop
cltd
pop
pop
xchg
push
adc
cmp
pop
imul
insl
mov
dec
scas
sub
out
pop
sub
sub
pushf
xchg
xchg
pop
push
arpl
in
pop
dec
jge
rcrl
and
popa
mov
leave
jbe
push
stos
cltd
mov
test
cmpsl
pop
xor
mov
add
jnp
out
rorl
fsubrs
imul
xor
test
fmuls
pop
stc
sbb
cmpsb
mov
xor
or
push
sbb
div
arpl
xor
aad
adc
lret
addr16
stos
cltd
mov
movsl
mov
pop
cltd
cmc
leave
xor
popa
fnsave
fs
leave
lods
movsb
jb
push
pop
stc
dec
int
inc
mov
mov
jae
add
rcl
and
add
and
mov
cmp
push
test
popf
shll
push
jno
sbb
or
pop
mov
cmp
mov
shll
icebp
ret
mov
add
jecxz
sub
dec
cld
or
lock
in
pushf
push
cmp
stos
inc
xchg
aas
mov
push
sub
fucomp
dec
and
jmp
shr
rcll
stos
push
cmpsl
addr16
repz
pusha
iret
adc
imul
std
or
mov
fnstcw
inc
sub
cwtl
repz
xchg
adc
rorl
shll
aad
stos
clc
fidivs
lret
jmp
repz
mov
jnp
xor
popa
les
dec
mov
jmp
loope
cmp
inc
test
je
icebp
imul
lahf
test
push
sarl
popa
add
or
in
sub
int
popa
xchg
mov
inc
cmc
in
add
popa
mov
push
and
pop
mov
fidivrs
test
cwtl
popa
loopne
inc
sub
popa
xchg
aam
int3
push
popa
dec
and
inc
cmc
xchg
ret
popa
in
jp
or
popa
movsl
ss
les
ds
in
dec
in
loope
pop
push
sbb
mov
cli
cmp
lea
adc
xorl
add
sub
out
popa
mov
mov
popa
push
mov
fstpl
mov
popa
mov
jmp
push
cmpsl
xchg
insb
mov
xchg
arpl
push
inc
scas
jle
add
test
je
loope
popa
imul
and
stc
sbb
mov
mov
popf
ss
dec
jmp
mov
or
mov
gs
push
ljmp
loope
mov
popa
addr16
hlt
out
into
pop
mov
push
sbb
xchg
push
popa
out
enter
jne
sub
pcmpgtd
lods
frstor
sbb
or
xchg
loopne
mov
sbb
inc
jno
loope
fcomip
arpl
inc
mov
stc
popf
xor
data16
sbb
xchg
arpl
popa
inc
push
xor
out
fsubrl
outsb
add
sbb
out
popa
into
je
pushf
adc
mov
or
mov
mov
repnz
adc
xchg
jecxz
sub
jle
movsb
inc
dec
xor
fsubl
in
out
cmp
add
shlb
mov
pop
andl
xchg
mov
out
sbb
jno
popa
mov
pop
adc
popa
or
daa
push
or
inc
sbb
inc
mov
popa
scas
cmp
filds
loope
pop
popa
nop
pop
push
int
cwtl
rol
orb
mov
cli
jge
push
punpcklwd
sarl
push
insl
loope
pusha
and
cmp
mov
cmc
adc
cld
dec
fstpl
popa
fstps
sub
decl
popa
push
jge
pop
popa
sti
pushf
in
jno
sbb
sub
xor
and
fs
imul
popa
lea
cmp
loope
insb
imul
out
adc
aaa
dec
lods
pushf
in
shlb
cltd
std
stos
cld
sbb
sub
sub
push
lcall
cli
sub
jg
dec
cld
and
outsb
inc
orl
dec
dec
in
outsl
pop
add
fs
imul
cmp
fcompl
mov
and
shlb
adc
leave
xorb
movsb
imul
push
sahf
inc
mov
jecxz
pop
push
js
sbb
mov
stos
cmpb
jb
repz
fs
inc
push
outsb
pop
cmc
lock
je
sbb
dec
popa
push
aad
movsb
xor
pushf
xchg
aaa
fisttpll
xor
call
xchg
or
cltd
dec
pop
jecxz
xchg
jo
mov
lds
dec
loopne
mov
jle
pop
addr16
pop
jmp
jg
inc
repnz
shr
lret
popa
dec
cld
sub
cltd
push
stc
mov
adc
push
sub
scas
in
jne
bound
and
inc
lcall
gs
dec
mov
and
dec
xor
sbbl
loope
mov
popa
inc
fcoms
xlat
fs
push
cmp
xor
jecxz
cltd
cmp
loope
push
stos
mov
mov
pop
sahf
popa
popf
daa
inc
int3
xor
xor
testl
loop
addr16
cli
popa
ret
mov
cmc
xchg
xchg
xorb
data16
repnz
pop
mov
loope
inc
ja
out
loope
mov
daa
stos
or
popa
insl
jno
jb
imul
test
xchg
dec
adc
stc
test
ss
in
pcmpeqw
sbb
shll
les
jp
mov
pop
pop
sahf
mov
push
mov
jae
cmp
or
cmp
int
popa
fnsave
shll
adc
rorb
bound
inc
adc
xchg
and
popa
xor
insl
jns
dec
push
fimull
push
in
clc
cmpsb
adc
insl
mov
sbb
xchg
mov
jmp
les
xchg
int3
inc
or
mov
mov
cmp
mov
sbb
inc
outsl
popf
dec
jae
adc
mov
sbb
xchg
mov
test
inc
in
aad
stos
cs
ficompl
ds
popa
xchg
inc
inc
mov
outsl
test
fcmovne
popa
bound
mov
popa
js
nop
mov
daa
push
inc
push
aad
int
pop
int3
popa
sub
jge
cli
inc
dec
fldcw
mov
dec
sub
icebp
in
dec
lret
call
lret
mov
insb
roll
loopne
push
js
add
sarl
jle
inc
xchg
mov
shll
icebp
mov
jg
outsl
inc
ds
add
and
inc
xchg
popa
in
scas
mov
popa
mov
inc
mov
inc
push
insb
or
or
pushf
add
mov
adc
jo
pop
popa
aam
pop
inc
das
adc
mov
add
sti
mov
and
sbbb
loope
subb
xchg
sti
pop
push
in
popa
lcall
inc
cmc
addl
les
sub
or
outsl
cli
xor
jp
and
popa
and
mov
sbb
cmp
ret
lcall
cmp
xor
pandn
add
or
test
data16
lods
inc
adc
or
xchg
inc
cmp
push
loope
lahf
idivl
pop
xor
mov
and
cwtl
jg,pt
adc
mov
xchg
sub
fsts
push
sub
in
or
stc
in
repnz
addb
mov
push
xchg
adc
push
inc
pop
ljmp
jge
mov
or
cmp
outsl
xchg
ds
jbe
lcall
pop
popa
sub
rorb
jmp
hlt
inc
fildll
aas
shll
rclb
clc
add
sbb
sbb
lods
in
sbb
call
push
cmpb
popa
pop
xchg
mov
and
fidivrl
stos
mov
pop
scas
call
cmpsb
xchg
popa
not
lret
sbb
pop
popa
cmp
mov
stc
jle
mov
rclb
xchg
or
popa
lret
loope
hlt
sar
ficomps
sub
mov
popa
aas
jmp
lods
scas
push
lea
inc
add
xchg
ds
pop
and
dec
jne
stos
xlat
jge
adc
dec
aas
or
outsb
popa
aaa
das
fiaddl
xor
popa
mov
aas
inc
jge
push
cmp
loopne
std
rolb
push
sub
xor
mov
sub
lods
outsl
rcrb
je
int
popa
int3
inc
gs
popa
sub
cwtl
in
dec
jecxz
xor
sti
sbbl
arpl
jp
sub
popa
mov
loope
nop
sbb
cmp
push
mov
lret
jns
out
sub
dec
addr16
inc
pop
stos
ret
in
popa
cmp
mov
shlb
sahf
shrl
popa
mov
ss
jnp
pop
and
dec
clc
jl
repnz
mov
mov
in
loopne
popa
and
aad
cs
popa
hlt
bound
popa
sbb
inc
and
popa
and
insb
mov
call
or
ss
adc
ja
shll
shll
incb
popa
lock
pop
push
mov
mov
adc
lds
mov
fisubs
fildll
ret
addr16
shr
dec
sub
popa
cli
xchg
mov
lret
popa
jp
and
cmpb
js
enter
popa
push
daa
das
test
xchg
xlat
pushf
fs
mov
adc
loop
cld
inc
dec
imul
or
xchg
popa
rcr
dec
bound
lods
pop
icebp
pop
pop
jae
mov
dec
mov
ja
xchg
int3
xchg
or
pop
mov
inc
cmp
fcomps
mov
add
mov
jmp
xor
rorl
leave
sub
fwait
add
mov
sbb
shrb
pop
pusha
stos
inc
fcmovnu
or
jge
inc
test
push
sbb
rcl
imul
in
cld
jle
push
ja
pop
loop
je
dec
push
dec
imul
out
loope
sahf
mov
ds
pop
in
jno
inc
popa
dec
scas
rclb
popa
push
and
push
xchg
ljmp
cmp
inc
push
pop
add
pop
push
push
fs
hlt
std
cltd
popa
lret
pop
inc
push
adc
dec
or
sub
xchg
mov
imul
cltd
dec
fiaddl
pop
rorb
dec
add
xchg
pop
xchg
mov
lods
mov
cmpsb
adc
fucom
mov
adc
div
xor
mov
pop
fs
sbb
nop
scas
jae
popf
pop
popa
xorb
push
mov
icebp
jb
pop
lock
lds
adc
loope
jnp
sub
int3
loop
and
cli
jae
js
or
jo
icebp
and
lods
dec
cmp
xchg
cmp
imul
test
in
pop
mov
xchg
popa
xor
xlat
incb
ds
popa
testl
push
lods
popf
sub
xchg
arpl
sub
jl
scas
fisubrs
insl
dec
ljmp
faddp
dec
mov
stos
or
inc
sub
add
jmp
movsb
test
insb
push
jle
fistl
aam
gs
and
adc
ret
adc
xor
push
inc
pop
lret
inc
orb
aam
xchg
fdivs
pushf
jge
test
push
adc
sub
orb
lcall
js
adc
sbb
cwtl
jle
inc
jnp
and
xlat
sbb
aaa
pop
repz
clc
push
imul
add
jb
dec
xor
test
mov
pop
stc
mov
imul
aas
popa
or
std
in
and
fisubl
push
cld
scas
jno
andl
mov
shll
ljmp
inc
std
add
stos
mov
aam
xchg
cmp
mov
dec
arpl
adc
out
and
xchg
adc
jae
lods
adc
popa
cli
adc
mov
arpl
mov
or
je
fildl
sub
jecxz
adc
mov
je
mov
fs
daa
or
inc
in
leave
cmp
loope
dec
test
enter
jge
pmaxsw
popl
dec
sub
inc
out
cmp
bound
jno
dec
sub
xchg
roll
stos
and
xor
inc
push
repnz
notl
push
push
cmp
pop
push
bound
mov
push
lods
push
pop
aad
call
pop
xor
pop
inc
pop
dec
pop
pop
pop
pop
pop
push
xchg
jle
xchg
lahf
int3
mov
in
stc
mov
and
dec
mov
imul
mov
lock
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
xor
xor
inc
xor
push
xor
xchg
scas
insl
out
ja
jge
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
xchg
insl
hlt
jae
js
jg
mov
inc
xchg
push
lcall
push
mov
mov
push
rcll
loopne
in
in
push
notb
add
adc
sbb
and
xor
ds
dec
push
dec
push
push
push
pop
push
arpl
jne
jle
test
pop
nop
pop
lcall
pop
mov
mov
pop
rcrb
pop
fstpl
pop
repz
stc
pop
lcall
pop
pop
pop
sbb
sub
pop
inc
pop
dec
sub
test
enter
or
xor
dec
inc
dec
push
dec
pop
inc
fs
js
xorb
cmp
inc
hlt
dec
or
pop
xor
pop
jbe
sarl
mov
xor
enter
loope
fstpl
js
cmpsb
lcall
popf
dec
sahf
push
lahf
pusha
outsl
imul
mov
andl
xchg
test
insl
dec
test
jle
call
or
rcll
pushf
shll
sbb
inc
push
inc
popf
shrl
mov
jle
aas
enter
fcoml
pushl
cmpb
sub
inc
mov
add
pop
cs
test
xor
dec
fmuls
push
pop
xor
inc
ds
arpl
sbb
push
pop
push
je
xchg
fistpl
in
sahf
repz
scas
enter
xchg
sub
dec
dec
push
dec
pop
inc
bound
cmpb
inc
stos
dec
mov
out
pop
negb
pop
in
adc
xchg
daa
push
cmp
cwtl
xchg
inc
mov
dec
movl
pop
dec
pop
push
xchg
pushf
pushf
popf
stos
sahf
mov
mov
mov
jmp
add
add
add
add
add
add
add
add
cmp
outsb
lcall
pop
push
fwait
repz
ret
fcomip
fistps
fistps
jge
fwait
jle
test
jmp
xorb
out
add
add
call
push
test
enter
or
popf
imull
cld
xor
cmp
sahf
rcrl
jge
lahf
cmp
jle
sti
jg
add
adc
pop
add
add
dec
add
insb
mov
cmp
dec
jmp
jno
xchg
mov
dec
mov
push
rcrl
pop
fistps
pop
hlt
pop
std
adc
fistpll
fists
pop
cmc
ja
mov
inc
jo
mov
int
add
adc
loopne
icebp
pop
cli
pop
cmp
inc
pop
pop
pop
sarl
dec
xor
push
xchg
lcall
xchg
xchg
lods
jo
mov
lock
xor
xor
sub
or
push
dec
pop
inc
xchg
cli
cmp
inc
push
dec
arpl
stos
inc
stos
sahf
pop
fstpl
pushf
jp
xorb
xor
ljmp
mov
and
xor
inc
or
sbb
xor
xchg
pop
dec
sqrtps
push
sub
pop
dec
pop
push
pop
pop
pop
ja
pushf
xchg
fwait
ret
pushf
ficomps
pop
mov
mov
jecxz
jmp
xor
sbbb
adc
and
xor
inc
and
dec
push
push
push
pusha
push
jnp
cwtl
inc
mov
push
fpatan
test
fisttps
je
cmp
jle
pushl
sbb
out
add
add
add
add
cltd
mov
stos
xor
ja
jl
mov
xor
inc
sub
stos
mov
test
mov
sub
repz
jge
xchg
mov
mov
jg
call
fldcw
testl
and
es
cmc
jns
aam
adc
and
dec
outsl
lock
add
loopne
inc
fwait
sti
std
stc
sub
and
ja
jl
mov
inc
jg
add
xor
sbb
cltd
adc
jmp
ret
mov
cmp
test
lcall
fs
rcl
stos
xlat
loopne
cmp
test
mov
test
enter
mov
adc
and
xor
xor
pop
jno
xchg
jb
xlat
xchg
fstps
mov
pop
pushf
mov
in
add
xchg
icebp
es
ds
dec
pop
push
pop
pop
pop
insb
lcall
popf
enter
mov
dec
cld
dec
or
pop
es
pop
inc
fs
jno
jbe
test
or
sti
mov
xor
or
adc
dec
inc
dec
dec
dec
xchg
mov
jo
lods
in
jmp
xor
cmp
and
cwtl
push
sub
cltd
rcl
aad
xlat
fsts
jge
lcall
and
add
adc
mov
sbb
push
pop
push
jns
sahf
lea
add
xrelease
cmp
ljmp
mov
push
mov
jne
out
adc
sbb
cmp
roll
iret
out
lock
jns
std
idiv
sbb
inc
ficomps
movsl
fsqrt
mov
pop
mov
je
jns
int3
xor
jo
mov
in
add
lea
call
movsb
test
enter
repz
pushl
aaa
jge
cltd
jecxz
loopne
repz
mov
fwait
inc
mov
repz
faddl
dec
cmc
dec
or
lahf
jb
jg
movsb
hlt
int3
mov
push
pop
or
push
dec
cmp
mov
add
pop
movsb
jmp
in
std
test
lcall
push
sub
xor
jae
xchg
out
xchg
incb
and
or
shll
aad
mov
fwait
jg
icebp
xchg
sbb
filds
fbstp
mov
fwait
fwait
pushf
fsubrl
scas
lcall
sub
cmpsl
mov
enter
or
and
inc
mov
push
adc
lcall
sahf
call
mov
cmp
inc
in
dec
icebp
push
repnz
and
inc
sti
dec
ss
scas
push
ljmp
adc
jge
xchg
sti
hlt
imul
cltd
in
hlt
repnz
adc
and
xor
inc
pop
push
addr16
out
dec
dec
push
push
pop
jno
roll
fnstcw
mov
ljmp
call
or
dec
ss
filds
popa
pushf
add
pop
outsl
mov
out
scas
sub
or
in
xor
cmp
inc
add
mov
pop
shrl
add
add
add
add
js
jge
subb
xchg
push
adc
outsl
xchg
je
jns
jle
xlat
jo
mov
lock
hlt
xchg
add
adc
and
xor
mov
filds
scas
cmp
lods
das
lcall
jne
or
sub
dec
dec
push
dec
call
mov
mov
insb
fwait
xchg
call
test
lds
jle
idivl
jle
clc
cmpsl
mov
outsl
jge
xor
cltd
lods
lcall
fwait
inc
pushf
dec
popf
pop
outsl
test
popf
insb
hlt
jle
lcall
pop
fs
popf
test
mov
add
movsl
repnz
push
lea
leave
hlt
and
jmp
inc
gs
jl
ret
xchg
dec
movsb
push
lods
push
mov
lret
fnstsw
fucomip
mov
insb
inc
or
xlat
sub
xor
shl
lret
inc
aaa
dec
pop
push
sahf
xchg
xchg
cltd
scas
pop
outsl
push
inc
xor
mov
mov
and
ljmp
das
dec
aaa
dec
insl
and
sub
mov
push
sbbb
sbbb
add
mov
jnp
fimuls
add
add
add
icebp
out
outsb
stos
cltd
out
dec
sub
sub
cmp
lcall
decl
xor
scas
mov
xor
xchg
popf
pusha
mov
sbb
sub
test
xor
mov
xlat
mov
jg
mov
cmp
xor
stc
repz
pop
outsl
or
xor
add
jnp
orb
call
fiaddl
push
lea
pop
cmp
pop
insb
sbb
idivl
jne
cmp
lods
fbstp
lods
loope
sub
sub
or
cs
hlt
jge
add
lods
jnp
xchg
push
jb
xor
fidivs
or
pop
inc
pop
mov
daa
jg
jae
mov
outsl
cmp
popf
push
gs
insl
repz
sbb
sub
mov
xchg
inc
jg
add
cmp
add
fwait
jmp
sbb
pushf
movsl
sbb
stos
loop
pop
jno
pop
pushf
rcrb
mov
inc
outsl
addr16
jbe
ss
inc
xor
and
dec
cmp
mov
ret
dec
je
rcll
fsts
pop
mov
outsl
sub
pop
fnstsw
filds
sbbb
mov
mov
outsl
decl
or
outsb
scas
jae
mov
mov
sbb
sti
or
xchg
enter
or
sub
dec
dec
push
inc
lds
div
mov
fldcw
fistl
pop
fistps
shll
cs
int
inc
xchg
shll
imul
fnstenv
ret
in
or
pop
fwait
cs
inc
xchg
rcrl
xchg
xor
roll
mov
aad
out
jmp
lahf
xchg
in
rcll
lret
xor
stos
inc
cvtps2pd
add
and
pop
and
dec
scas
dec
rcr
fsubr
out
jmp
dec
sbb
jl
cmp
shll
inc
testb
pop
outsb
xchg
shll
js
mov
ret
cld
test
fnsave
adcl
call
xchg
mov
movsl
xor
arpl
jmp
adc
xchg
mov
rcr
mov
xor
xor
xor
xor
mov
fwait
test
faddl
loope
out
jmp
dec
call
xchg
or
sub
dec
sti
dec
add
hlt
lret
inc
push
mov
jmp
jg
add
sbbb
fwait
decb
or
rcrl
dec
js
jge
mov
js
stos
das
les
sbb
push
cmp
pop
pop
pop
pop
pop
arpl
call
or
sub
inc
loop
cmpl
cmpsb
jle
repz
jbe
outsl
jo
xchg
mov
ret
repnz
and
inc
rcll
mov
push
push
xchg
std
sub
roll
lods
cli
jo
add
mov
shl
add
adc
cmp
icebp
pop
mov
xor
outsl
mov
sub
shrb
inc
jb
jge
or
xchg
das
xchg
or
xlat
jo
mov
lock
sub
or
push
jge
lcall
push
out
adc
xchg
and
inc
jo
sarl
mov
repnz
lock
inc
sbb
call
jbe
cld
enter
adc
arpl
xchg
enter
or
adcb
dec
test
lods
pop
arpl
add
and
mov
mov
inc
cmp
jge
xchg
xchg
cltd
jle
jmp
subb
cmp
scas
dec
mov
fcmovne
mov
pop
xor
pop
cmp
cmc
imul
test
sub
stos
xchg
dec
xchg
inc
adc
inc
cmpl
and
pushf
mov
popf
push
nop
sub
pop
pop
push
and
dec
adc
lds
mov
in
es
jle
call
mov
jg
jg
clc
sub
inc
arpl
mov
out
in
test
enter
or
push
inc
jnp
sub
push
loop
lcall
pop
repz
pop
js
push
xchg
mov
lahf
sbb
mov
fwait
mov
cltd
das
push
pushf
lods
mov
inc
dec
popf
dec
rol
mov
mov
flds
cwtl
in
scas
incb
movsb
das
sbb
outsb
sahf
sbb
shrl
jno
mov
or
lods
rcl
jae
xchg
int3
lods
loope
inc
popa
loope
rcrl
arpl
loope
jns
adcl
sub
mov
lods
xchg
outsl
cltd
test
aad
jo
fildll
dec
shll
fdivrs
fisttpll
imul
dec
and
pop
js
sbbl
mov
bound
arpl
adc
fisttpll
mov
add
adc
xor
fistpll
filds
mov
mulb
jmp
mov
mov
in
nop
push
loop
nop
xchg
add
in
pop
inc
test
pop
loope
ljmp
and
mov
jae
xchg
test
cmc
dec
jg
add
addb
dec
clc
lea
mov
sub
xor
mov
or
loopne
pop
lahf
daa
outsl
test
dec
fscale
stos
add
inc
rcrl
xlat
or
xor
aas
jge
popf
jno
jbe
inc
and
xlat
xor
mov
arpl
fs
insl
cmp
jg
jg
add
xor
sub
xor
xor
rcrl
lahf
sbb
xchg
lds
fwait
cmc
lea
or
cs
xchg
xchg
inc
lret
rorl
sbb
fldl
fistps
fbld
fists
pop
inc
xchg
rcrl
fnstcw
jae
xchg
mov
popf
sahf
in
lahf
and
fs
imul
shl
lea
jnp
and
gs
and
cmp
push
lcallw
sub
out
fstpt
jo
pop
xor
sub
lret
xor
scas
dec
sti
std
fistps
addr16
jg
test
or
pop
or
bound
jae
xchg
xchg
jecxz
divl
js
andl
add
xchg
outsb
lcall
popf
sbb
xlat
xor
or
nop
mov
daa
mov
cwtl
aad
test
cltd
outsb
out
mov
icebp
add
or
cmp
mov
add
add
addb
or
pop
lahf
ljmp
jb
mov
pop
add
xchg
fwait
or
xchg
sbb
cmpsl
inc
pop
inc
aad
dec
pop
push
pop
fildl
dec
xorl
jmp
int
roll
pop
loope
stc
nop
jmp
sti
mov
push
cmp
sbb
rcrl
pop
inc
dec
das
sub
add
aad
mov
lods
shrb
mov
fstpt
scas
inc
xchg
std
movsb
scas
xchg
aas
mulb
sbb
leave
scas
cmp
outsl
mov
in
xchg
mov
test
or
es
adc
lcall
jne
movsl
pop
popf
scas
mov
stc
xchg
mov
ret
mov
push
lahf
clc
push
and
scas
bound
stos
push
call
and
in
xor
lret
mov
inc
daa
or
pop
sbb
pop
xor
call
cwtl
jge
adcl
dec
cltd
dec
popf
dec
mov
lods
sbb
mov
mov
movsb
outsl
cli
sahf
push
stos
push
mov
arpl
shll
xchg
mov
int
repz
push
fwait
adc
mov
or
xchg
shll
fsubl
xor
lret
pop
inc
pop
dec
xchg
jge
mov
push
fnstenv
insb
scas
ja
sub
mov
xor
jecxz
in
fiadds
daa
add
andb
or
cltd
lods
hlt
mov
inc
nop
and
xchg
mov
scas
inc
dec
iret
dec
dec
and
xor
inc
in
push
imulb
pop
mov
fs
mov
fnsave
inc
aaa
dec
sub
ds
jne
mov
lret
popf
rorb
add
pop
dec
cli
scas
push
bound
adc
xchg
inc
dec
dec
or
mov
int3
stc
xor
pop
dec
clc
bound
xchg
add
or
add
pop
xchg
lret
and
dec
or
jmp
xchg
in
nop
icebp
call
or
es
ljmp
punpcklbw
add
sbb
andl
pop
imul
cmc
bound
xchg
jge
andl
popf
sub
movsl
repz
mov
pop
leave
pop
imul
inc
fsts
dec
dec
in
dec
in
add
jge
loope
pop
add
adc
jnp
pop
and
repz
fists
push
mov
xchg
gs
jne
cmp
adcl
scas
xchg
mov
mov
pop
mov
scas
mov
aad
mov
fldcw
in
hlt
jne
push
sbb
mov
sub
jno
subl
popf
lods
dec
mov
inc
mov
pop
inc
sti
and
jnp
xlat
test
or
dec
mov
mov
icebp
in
or
jg
jno
jge
mov
push
xor
sub
lcall
les
cmp
dec
push
movsl
jne
add
and
rcll
mov
cmp
std
inc
lods
sbb
pop
out
push
and
imul
mov
adc
and
mov
mov
and
and
sub
ljmp
lret
pop
cltd
or
jns
shl
stos
lds
test
mov
scas
out
or
or
cmp
stos
sbb
mov
minps
out
insl
lods
or
or
mov
mov
adc
in
pop
cmc
or
add
pop
hlt
sbb
sub
in
xor
fidivs
xor
push
aaa
enter
pushf
mov
jne
das
sub
xchg
push
mov
test
jo
mov
sub
mov
and
jmp
cmc
push
stc
push
std
push
or
das
lret
fnstcw
incb
shll
mov
test
in
jae
popf
lahf
mov
rcrl
leave
jg
rorl
or
xchg
out
or
nop
fsubs
rcll
clc
bound
fwait
stos
lret
insb
pop
xor
bound
data16
mov
lcall
xchg
mov
pop
insb
popf
jle
sbb
lea
xchg
ds
lods
jl
js
test
fistpl
mov
jge
adc
fadd
aad
insl
mov
shrl
push
xchg
iret
cwtl
cmp
jns
je
inc
add
cmp
aad
push
sub
lahf
sbb
loop
jb
test
xor
addr16
xchg
insl
lahf
xchg
push
lods
mov
arpl
lret
sbb
dec
rclb
aad
jae
mov
stc
add
xchg
test
fwait
scas
inc
loope
and
gs
mov
add
icebp
add
xchg
sub
loop
gs
outsl
mov
xchg
lahf
imulb
cs
sarb
test
jle
iret
jo
sti
add
lods
xor
and
fs
inc
xchg
in
or
sbb
mov
jae
xor
mov
xchg
shlb
jp
mov
push
call
pop
pushf
jne
mov
push
dec
ja
push
movl
data16
sub
mov
cwtl
mov
mov
dec
mov
dec
in
cltd
ljmp
xchg
test
jne
adcb
jge
testl
jns
insb
popf
fucom
sub
cwtl
sub
mov
loope
xchg
fistps
outsl
inc
test
and
xchg
repz
insb
pushf
shl
jge
popf
sahf
mov
or
mov
addl
fildll
sahf
jl
mov
xor
or
pop
jae
inc
and
jg
pushf
test
shl
xchg
repz
inc
fwait
shl
lcall
mov
repz
inc
fwait
bound
push
popf
lods
insb
add
lret
loop
pop
sahf
xor
stos
movsl
push
stos
shll
mov
cwtl
in
pop
mov
subl
xchg
iret
sbb
fwait
adcb
mov
adc
arpl
cltd
mov
ret
mov
rcrb
cltd
insl
clc
test
imul
shll
stos
cli
add
xchg
cmpsb
loope
rcl
and
xchg
or
xchg
fs
in
call
xor
xorl
movsl
rclb
in
xchg
jecxz
sub
lods
xchg
daa
ja
push
dec
mov
mov
sub
js
mov
jb
mov
cli
xor
js
inc
test
mov
lds
icebp
test
cmp
or
cmpsl
jp
xor
or
fnstsw
adc
fldenv
aad
jae
cwtl
cmc
add
and
stc
orl
fidivl
adc
push
mov
outsl
scas
xor
cmp
mov
push
arpl
xlat
rorl
arpl
sbb
rol
fcoms
imul
push
lahf
lahf
lcall
push
cmpl
jns
xchg
scas
adc
lods
cltd
mov
inc
subb
xchg
jae
mov
daa
add
and
cwtl
test
cmp
xchg
mov
daa
stc
cltd
cmc
add
sbb
test
imul
enter
notb
jecxz
xchg
sahf
mov
jle
gs
popf
rcr
mov
xchg
mov
adcl
insb
pop
xchg
cmpsb
inc
pop
cmp
stos
or
imul
jbe
imul
cmc
and
jbe
cltd
jmp
push
xorb
sbb
stos
insl
mov
daa
mov
push
stc
sub
aad
lahf
out
lcall
popf
mov
lahf
xchg
pop
mov
pusha
add
movsl
popf
ja
andb
and
clc
clc
push
mov
jmp
mov
ljmp
inc
mov
jecxz
cwtl
and
add
jne
push
sbb
in
or
mov
pusha
inc
fimull
pop
pop
das
or
in
sbb
adc
inc
ds
lahf
mov
divb
mov
cwtl
push
add
push
inc
aas
mov
movsl
dec
sti
scas
xor
mov
test
and
pop
jo
daa
into
nop
iret
ja
xor
push
and
es
sarb
push
xchg
hlt
sbb
out
scas
in
scas
hlt
push
cmpsb
lahf
fcoms
sahf
cltd
and
repnz
mov
inc
push
or
sbb
pop
pop
imul
cld
data16
pop
pop
sub
mov
dec
push
test
cmpsb
push
mov
shlb
mov
shr
mov
ljmp
inc
mov
xchg
mov
test
cmpsl
stos
xlat
dec
call
pop
pop
fnstsw
xchg
in
adc
push
mov
sub
mov
mov
sti
lods
out
ret
cmp
imul
cwtl
popa
mov
mov
push
sub
push
lcall
test
arpl
cli
push
pop
cltd
fwait
dec
in
jmp
pop
sub
addr16
jno
aad
aaa
xor
add
sbb
scas
pop
ret
aad
out
es
push
adc
cld
pop
push
add
cmp
cmp
pushf
pusha
pushf
lea
jb
pusha
cmp
push
lea
jae
shl
seto
mov
inc
add
movzbl
sbb
mov
bsf
mov
stc
sub
cmp
repnz
pushf
pusha
pushf
lea
jne
bsf
rol
rcr
lea
mov
inc
or
shrd
bt
sub
add
pushf
lea
bt
sub
pusha
clc
call
movw
jmp
pusha
pushl
popl
pushf
push
pushl
ret
dec
mov
sahf
cltd
scas
jp
in
mov
subl
lea
sub
pop
arpl
int3
sub
and
int
xorl
ljmp
dec
lret
mov
mov
sarb
aas
test
ret
dec
push
fs
xor
pop
inc
dec
test
sti
sub
adc
cltd
xor
cld
test
ljmp
aas
test
adc
dec
fadds
mov
dec
dec
ds
push
pop
jle
jp
insl
ret
negl
pop
test
xchg
xchg
int3
mov
push
call
pop
je
fldcw
movb
call
push
push
adc
sbb
adc
cld
mov
pop
xchg
call
es
xchg
std
enter
paddusw
jl
add
scas
jle
pop
adc
jo
scas
sub
push
das
mov
or
mov
or
scas
push
push
arpl
jne
pushf
dec
lret
push
clc
sti
loope
pop
or
cmp
adc
add
mov
xchg
sbb
mov
xorl
ljmp
int3
push
mov
add
push
call
push
repz
adc
cltd
pop
fs
test
push
mov
mov
in
inc
and
mov
mov
addr16
pop
hlt
ret
aas
pop
mov
sub
stos
shll
std
xchg
leave
shlb
cltd
adc
mov
pop
jecxz
mov
into
mov
les
add
ljmp
cmpsl
les
aaa
xchg
insb
repz
ret
mov
seta
jmp
btr
lea
add
test
pusha
pushf
stc
sub
clc
pushl
popl
pusha
pushl
call
jb
bt
test
xor
cmc
or
jmp
lea
jb
push
pusha
pushl
movb
pushl
ret
sub
cmc
cmc
test
neg
pusha
pusha
call
icebp
push
sub
out
lods
lods
stos
out
adc
enter
or
repz
or
test
xchg
push
sbb
clc
sbb
fdivp
mov
cmp
lret
jo
das
pop
xchg
jg
mov
and
sub
fmulp
xchg
cmp
mov
enter
in
mov
sub
orb
leave
sti
gs
je
stos
dec
mov
cmp
cwtl
inc
xor
xchg
jge
repz
xchg
push
pop
dec
mov
lods
aas
pop
in
mov
test
int3
mov
sahf
cltd
decb
sbb
scas
mov
sarb
mov
sbb
push
fwait
mov
mov
popf
dec
pop
dec
rorb
xchg
mov
loop
adc
aas
out
jp
jmp
pop
aad
loope
and
xchg
fimuls
pop
sbb
hlt
ljmp
cmc
jge
out
sub
jmp
test
je
test
jge
push
pop
ret
jl
mov
dec
lret
add
sahf
dec
pop
inc
test
add
add
fmul
push
and
out
and
fwait
mov
sub
add
pop
xchg
pushf
lea
je
pushf
mov
pusha
sub
cmp
test
clc
cmp
jmp
lea
jne
pushf
sub
aas
cmc
bswap
neg
mov
add
add
pushf
add
jmp
mov
movl
movb
push
pusha
pushl
ret
pushf
lea
ja
call
push
call
push
push
lea
jb
cmp
stc
jmp
inc
or
adc
push
dec
ljmp
xorb
mov
mov
pop
dec
fwait
cmp
rolb
ret
mov
push
push
les
xchg
fisubs
and
cmp
jmp
out
xchg
out
das
ret
pop
cmpsb
clc
and
fdiv
cmc
fmuls
sub
test
iret
imul
and
test
push
mov
cmp
jle
mov
in
testb
sub
lcall
lods
pop
xor
dec
inc
pop
and
in
divb
push
mov
jno
cmp
setle
dec
iret
xor
cwtl
or
push
adc
add
loopne
and
int3
jle
cmp
test
iret
pop
loope
add
push
adc
movsb
push
nop
cld
lret
std
add
jns
aaa
push
sub
xor
xchg
mov
push
lret
inc
mov
int3
jmp
pop
rcr
clc
mov
test
cmpb
push
pushf
call
cli
lock
sahf
cltd
jbe
mov
push
xchg
iret
xchg
adc
clc
clc
sub
insb
mov
pop
mull
add
xor
push
mov
mov
and
lahf
dec
js
mov
mov
pop
push
fs
push
imul
lock
sub
notb
xor
xchg
int3
setle
lea
movsb
test
inc
sbb
adc
aam
ror
dec
rolb
jo
scas
adc
adc
or
xor
xor
daa
fnstcw
jbe
aam
push
inc
pusha
fmuls
jmp
bnd
mov
pusha
adc
jecxz
nop
repz
insl
dec
mov
and
je
sub
dec
shl
mov
shr
movzbl
rcl
seto
add
push
mov
push
clc
mov
bt
cmc
test
jmp
pusha
pusha
mov
lea
call
bt
test
sub
jmp
pusha
pusha
jmp
push
call
dec
sti
stos
into
scas
pusha
mov
movw
cmc
test
test
push
lea
je
clc
stc
cmc
sub
bt
cmp
cmp
pusha
pushf
mov
lea
ja
call
xlat
lock
push
jecxz
push
xchg
mov
xorl
xor
test
xor
sbb
in
sahf
inc
push
test
inc
pop
dec
jns
arpl
cmp
mov
push
pop
shrl
add
jne
scas
cmp
inc
xchg
adc
je
mov
mov
mov
mov
mov
cmp
jl
sarb
es
mov
mov
test
test
and
push
add
jnp
bt
bt
push
movl
or
pusha
pushf
movw
lea
jno
je
pushf
bswap
movsbw
mov
pushf
lea
call
push
call
int3
push
call
cmp
xchg
les
push
sahf
cltd
test
fcmovu
sbb
adcb
das
jb
inc
push
xchg
mov
nop
mov
rorb
movsb
mov
lcall
outsl
aad
or
subb
push
inc
mulb
in
sahf
push
inc
push
aad
sub
mov
sbb
mov
push
adc
add
aaa
xchg
inc
loop
mov
push
cli
inc
mov
cs
std
aad
sahf
cltd
sbb
rcrl
and
push
lahf
ljmp
je
sti
shlb
repnz
leave
mov
je
ja
out
sub
xchg
xor
inc
repnz
lahf
cmp
xchg
xor
xor
adcl
mov
roll
push
dec
jl
sti
cltd
jno
push
faddl
xchg
xchg
jbe
and
gs
scas
fisubrs
push
inc
or
xchg
outsb
and
mov
xor
in
lea
movsbw
mov
push
mov
mov
lea
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
cltd
into
bound
or
repnz
into
aaa
mov
dec
shl
stc
xlat
and
and
xor
sar
mov
icebp
out
sbb
pop
popf
mov
stc
cwtl
imul
mov
icebp
lcall
enter
daa
outsb
cwtl
insb
fstps
hlt
mov
aas
adc
das
lar
in
or
insb
ret
das
negb
ret
push
sete
not
mov
pusha
push
push
lea
jmp
divl
or
cltd
pop
and
outsb
xchg
cmp
dec
sbb
mov
pop
jb
adc
leave
xchg
cltd
push
in
adc
mov
mov
cmp
xor
dec
mov
imulb
rcl
int3
mov
ja
int3
adc
ret
test
and
lret
jecxz
add
cmpb
push
mov
fldenv
pop
lcall
sbb
dec
outsl
iret
pop
dec
sbb
lods
pop
leave
inc
sbb
in
std
xchg
mov
pushl
pusha
lea
jmp
push
call
cli
push
jnp
dec
or
int3
or
outsl
jns
loope
adc
push
ret
dec
sti
lahf
mov
inc
outsb
clc
or
cmp
pop
repz
cmp
xchg
dec
aad
mov
test
sub
sbb
stc
cmp
in
popa
cmpsl
ds
and
sti
loopne
add
push
pop
out
mov
push
loope
or
pop
fsubp
sub
push
orb
insl
pop
mov
jno
imul
push
loope
aaa
pusha
lods
jge
or
fxch
rorb
popa
fucomp
repnz
sbb
jae
les
bound
lea
mov
xchg
jns
jno
add
mov
loope
xchg
inc
jns
or
fadd
popa
sub
out
mov
adc
rorl
repnz
cmp
test
dec
mov
outsb
mov
adc
add
cmpsl
mov
popa
mov
jne
cltd
lret
shll
mov
mov
lret
cmp
hlt
les
pop
dec
shll
enter
lds
lret
xlat
pusha
sbb
mov
sarb
inc
lret
fists
xchg
hlt
pop
sti
push
popa
les
pop
push
xchg
imul
inc
jl
cltd
jmp
mov
sub
pop
push
popa
idivb
loopne
loope
popa
xor
xchg
pushf
mov
push
bound
and
js
pop
lret
inc
dec
cmp
pop
insb
mov
popa
xchg
lds
gs
jae
popa
jle
adc
arpl
popa
imul
cltd
fstpl
fs
jge
jle
or
adc
fisubl
es
popa
cltd
lret
int
inc
dec
mov
add
jp
mov
sbb
jno
das
jmp
add
icebp
add
shrl
mov
adc
stos
and
rcr
out
les
aad
sbb
ror
arpl
push
outsl
rol
mov
lret
sub
cmpsb
mov
and
aaa
out
mov
or
mov
int
cmpsb
pushf
cmpsl
sbb
push
rcr
add
cmp
mov
insl
test
cli
mov
push
out
stos
enter
leave
xorb
into
mov
in
cmpsb
mov
test
outsl
fimull
add
cmovno
xor
xor
mov
push
aad
shll
iret
xlat
mov
cmc
mov
and
xchg
push
pop
mov
in
or
xchg
lahf
xlat
add
imul
rolb
jno
leave
aam
mov
cmc
je
cltd
pop
cltd
ret
cltd
enter
sub
inc
xchg
add
inc
test
test
jns
ror
enter
rorb
mov
les
inc
jbe
test
test
inc
mov
jbe
jb
inc
mov
xorb
iret
icebp
lahf
inc
sub
inc
sahf
or
and
and
sbb
mov
fs
movb
rol
mov
sahf
cli
popf
mov
lds
mov
xchg
aaa
in
mov
sti
or
adc
fst
data16
xchg
scas
scas
mov
mov
pop
iret
lods
adc
mov
push
mov
xchg
shrb
stos
jle
neg
out
xor
or
rorb
fwait
lods
mov
cmpsl
bound
mov
inc
vmovsldup
rolb
stc
int
subb
je
movsl
iret
mov
mov
xchg
test
shl
flds
jae
ffreep
lds
ret
outsb
lret
js
adc
xchg
fcom
fisttpl
sarb
sti
movsl
and
lea
test
mov
and
scas
xchg
lods
outsl
mov
fnstenv
sub
mov
imul
jnp
mov
lahf
repz
mov
test
movsb
mov
mov
mov
mov
push
scas
movsl
cmpsb
pop
loopne
addr16
push
push
mov
cmp
mov
xchg
scas
dec
leave
xchg
or
rcl
icebp
cmc
movlps
lea
xchg
test
mov
mov
adc
pop
cmp
ret
mov
dec
lods
ljmp
ret
in
stos
adc
adc
push
lahf
stos
inc
mov
outsb
mov
mov
mov
mov
cmc
cmp
leave
aad
mov
xchg
sbb
sub
pop
xor
xchg
xchg
xchg
mov
lret
out
pop
pushf
mov
enter
fildl
roll
add
shl
mov
jnp
mov
dec
pop
scas
cli
orb
cmp
movsl
mov
inc
inc
loop
les
int3
test
mov
mov
push
std
pop
mov
xlat
hlt
push
andb
mov
mov
adc
mov
scas
mov
adc
iret
fisubs
test
scas
stos
sbb
test
addr16
outsb
test
add
mov
imul
mov
mull
xchg
mov
mov
testl
cmp
lods
and
dec
mov
mov
push
xchg
arpl
xor
cmpsb
aas
push
lcall
jno
cmpsb
in
mov
mov
push
pop
fidivrl
idivb
fistps
arpl
sbb
cltd
adc
xchg
mov
enter
jno
repz
xlat
aam
jne
outsl
adc
bound
hlt
jecxz
lds
mov
decl
mov
mov
jbe
mov
mov
lret
mov
jecxz
into
and
and
mov
rorl
ljmp
aam
ret
cmp
push
add
mov
insl
test
inc
icebp
mov
xchg
sbb
push
xchg
fwait
jp
cmpsl
rcl
mov
movsl
scas
es
mov
mov
sub
cltd
popf
xchg
adc
mov
bnd
adc
iret
jecxz
cmp
lcall
or
das
sbb
pusha
aaa
mov
out
ret
sbb
fldenv
es
stc
in
and
adc
push
dec
fstpl
lods
mov
and
sub
sub
lds
movl
std
fucomp
jns
fcoms
into
out
lret
or
xchg
mov
enter
shll
xor
inc
mov
ret
lea
les
leavew
popf
movsl
jno
hlt
lods
and
mov
sbb
les
push
adc
enter
rclb
mov
movsl
mov
cmpsl
popf
shl
jne
in
and
mov
jns
aad
repnz
bound
rcl
inc
stc
das
cltd
movsb
mov
or
aad
jle
lods
mov
sarl
xchg
lea
xchg
xchg
xchg
cmp
mov
test
lret
leave
stos
iret
lret
and
push
imull
fisttpl
xor
mov
sub
in
rorl
sbb
leave
and
push
les
outsl
dec
sarb
xchg
sub
xchg
mov
std
jl,pt
add
fildl
pop
xchg
mov
cmp
sub
add
or
bound
fs
imul
outsb
outsl
jo
jb
popa
je
jbe
js
jp
popa
jl
jle
addb
xchg
popa
mov
xchg
xchg
popa
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
movsb
movsl
cmpsb
cmpsl
test
stos
stos
popa
lods
lods
scas
scas
mov
mov
popa
mov
mov
mov
mov
rol
lods
les
enter
int3
int
and
jg
xlat
fcomp
fcmovu
je
fnstsw
aad
cmp
xchg
in
mov
lret
incl
int
repnz
jae
pop
sbb
mov
xor
scas
nop
mov
lock
push
aaa
xchg
lcall
mov
test
iret
adc
sahf
push
in
sbb
sbb
mov
adc
dec
lds
mov
daa
lods
add
fnstcw
movsl
fadd
mov
xor
addr16
call
lahf
xorl
test
stos
mov
into
int3
js
xchg
imul
enter
ret
or
jmp
inc
xchg
or
cltd
jmp
mov
adc
je
fwait
xchg
mov
cwtl
enter
sbb
jae
mov
lods
in
outsb
cmpsb
idiv
test
xchg
ret
xor
mov
fildl
cmp
fwait
xor
dec
sti
cmpsl
mov
dec
mov
mov
lahf
into
mov
scas
cs
mov
jns
lret
jo
imul
push
loop
cmpsb
cmpsl
lods
shr
test
push
jnp
sbb
xchg
push
fidivrl
mov
and
push
fcomps
je
jne
shrb
adc
push
xchg
out
popf
adc
into
js
mov
cwtl
fwait
ds
rorl
and
jmp
das
mov
leave
lcall
sar
ret
roll
je
call
xchg
test
jns
mov
jmp
ja
test
mov
rol
mov
into
mov
mov
test
stc
adc
add
mov
fsubrs
and
test
mov
mov
cli
mov
arpl
test
add
cld
sbb
xchg
adc
out
sub
ret
hlt
and
mov
jb
pop
std
xor
sub
mov
ret
adc
mov
xchg
cltd
dec
jle
data16
jg
jle
pop
sbb
leave
pop
imull
test
leave
mov
sub
sub
dec
adc
andl
andl
fcoms
xchg
pop
xchg
sbb
fsubrl
cmpsl
or
cs
xchg
movsl
scas
mov
cltd
int
xlat
repz
or
test
add
mov
cmpsb
aad
ficoml
lods
add
or
imull
jg
sti
cmpsb
lahf
adcl
adc
fwait
pop
pop
add
adc
fcmovu
mov
push
fstps
mov
lret
adc
inc
js
adc
mov
rcrl
mov
pop
xchg
stos
inc
insl
xor
lret
push
or
outsl
repz
imul
loop
data16
out
ljmp
lea
leave
push
push
mov
aam
mov
push
leave
outsl
xchg
in
and
data16
cltd
mov
jecxz
gs
mov
adc
xchg
leave
lds
hlt
test
xchg
sbb
xchg
cmc
dec
xchg
dec
lods
gs
mov
testl
mul
sub
lahf
xchg
cmpsb
in
mov
mov
dec
inc
lods
mov
int
addr16
je
xorl
xchg
mov
push
les
aam
inc
iret
mov
inc
pop
dec
movl
sbbl
in
lds
xor
xchg
iret
inc
jno
ficompl
lret
aam
fs
lods
adc
jns
testb
mov
clc
sbb
fistpl
std
rcrl
xchg
dec
clc
not
hlt
mov
jmp
aas
push
arpl
cmpsl
arpl
mov
jb
enter
lds
mov
xchg
jmp
call
mov
fstps
aam
mov
lret
movb
mov
mov
jae
jo
xor
lods
outsb
mov
mov
arpl
add
iret
mov
jo
into
int3
lds
cmp
aad
push
shll
pop
rcl
aaa
mov
xor
cmpsl
ficoms
jae
cmp
fistpl
mov
adc
push
push
popl
sbb
rorl
ret
mov
popf
xor
inc
push
divl
clc
in
outsb
cmc
ficompl
fxch
add
loopne
rcll
mov
int
inc
push
and
in
in
mov
sbb
ljmp
mov
mov
pop
mov
fimull
imul
int
addl
fisubl
push
fidivs
adc
cltd
and
push
mov
out
sbb
in
dec
jo
icebp
inc
int3
add
cld
xlat
movb
or
sbb
pop
stos
fs
roll
stos
inc
stos
push
int3
jmp
pop
pop
push
inc
scas
mov
sub
cmc
mov
pop
push
repnz
mov
idivl
idiv
roll
adc
imul
ret
sub
xchg
test
xor
mov
aam
rol
les
shlb
dec
xchg
xor
jmp
pop
mov
mov
xchg
jnp
push
xlat
test
jno
cmp
mov
idivb
jne
mov
xorl
push
cwtl
and
aaa
push
fwait
out
or
cltd
std
inc
mov
mov
leave
push
xlat
lret
repz
add
mov
les
pusha
test
xchg
lcall
dec
rcr
andb
cltd
cli
out
ror
xchg
js
clc
negl
lahf
scas
into
fsubrs
push
iret
test
xchg
mov
push
and
lret
shlb
jbe
adc
cmp
add
icebp
mov
xchg
push
ret
aaa
jae
out
sti
bound
jecxz
mov
cli
cmp
pop
mov
in
adc
mov
clc
mov
es
ret
mov
mov
int3
ja
xchg
mov
sbb
xchg
xor
stos
adc
filds
pushf
sub
stc
mov
shrb
inc
into
sub
enter
inc
dec
ret
or
xor
daa
lret
sub
arpl
mov
ret
icebp
lods
test
test
adc
repnz
ljmp
fcompp
adc
and
mov
imull
ror
dec
in
lea
jle
or
inc
mov
lahf
test
push
aad
inc
add
stos
push
fimuls
add
push
mov
mov
push
jns
xorb
addr16
insl
inc
scas
adc
mulb
stos
or
push
mov
shrl
mov
sub
or
xchg
ljmp
cltd
test
pop
xchg
lods
cmpsl
mov
stos
mov
call
sbb
mov
and
sbb
pop
sub
sub
push
out
mov
ljmp
daa
cmpsl
pop
fadd
pop
movsb
cmp
jmp
int3
loop
and
mov
mov
jae
adc
cli
jns
pushf
stc
popa
sbbl
in
aaa
out
xor
stc
iret
negb
mov
inc
imull
cltd
xor
cmpsl
inc
shl
lret
mov
mov
mov
xor
add
jg
int
dec
movsl
xchg
icebp
fwait
or
mov
pop
mov
cmc
mov
mov
cltd
std
lahf
test
mov
mov
imul
and
arpl
bound
movsb
mov
arpl
popf
add
fildl
cmc
arpl
bound
arpl
xor
arpl
add
sub
arpl
jne
outsl
push
jg
bound
jg
mov
push
xor
jae
arpl
loope
jecxz
in
out
call
in
in
out
out
lock
repnz
hlt
cmc
div
clc
stc
cli
sti
popa
cld
std
incl
add
add
add
or
popa
or
push
movups
adc
popa
adc
push
pop
sbb
sbb
popa
sbb
push
pop
and
and
popa
and
es
sub
sub
popa
sub
cs
xor
xor
popa
xor
ss
cmp
cmp
popa
cmp
ds
inc
inc
inc
inc
popa
inc
inc
inc
inc
dec
dec
dec
dec
popa
dec
dec
dec
dec
push
push
push
push
popa
push
push
push
push
pop
pop
pop
pop
gs
pop
pop
pop
pusha
adc
add
popa
or
mov
loope
adc
ljmp
inc
jns
lea
push
fs
icebp
jns
aam
jae
lahf
mov
imul
and
imul
insl
inc
mov
xlat
mov
push
mov
enter
pop
stos
out
mov
in
mov
test
ret
leave
andb
les
and
push
insb
xor
jno
mov
lods
gs
movsl
movsl
jno
popf
mov
inc
popf
lds
cmpsl
movsl
pop
imul
jne
dec
movsb
pop
outsb
jne
imul
ror
add
cld
imul
test
add
sbb
leavew
add
in
andl
mulb
mov
sti
pop
adcb
pop
mov
cmp
or
mov
iret
cmp
mov
inc
adc
pop
in
jno
bnd
mov
stos
ret
inc
pop
test
or
push
ret
mov
sub
sbb
dec
cmp
xchg
and
lret
sarl
stos
xor
mov
ss
cmp
xchg
mov
nop
dec
rorl
fists
push
xor
shlb
mov
adc
movsb
mov
scas
in
ret
xchg
outsb
mov
fwait
sahf
test
mov
inc
fcmovnb
movsb
rorl
and
lods
inc
std
push
jg
cld
xor
imul
add
lds
jp
stos
jne
fwait
jbe
dec
mov
hlt
sbb
xor
lea
cltd
popf
pop
shrl
mov
movsb
add
je
push
mov
ja
or
or
fcomi
ret
or
push
xchg
dec
push
aaa
lods
mov
jno
ret
int3
xchg
jno
xchg
fwait
das
jns
mov
mov
mov
sbb
leave
repnz
lret
imul
xchg
out
mov
dec
fstps
rorl
lock
mov
push
lock
fists
mov
adc
inc
add
add
aad
sbb
jne
sub
and
adcl
cmpsb
cmpsl
mov
mov
cmp
push
scas
push
mov
push
fsubrs
jns
imul
nop
mov
rep
or
mov
mov
negl
mov
or
aad
mov
mov
rcl
mov
jno
loopne
add
dec
mov
mov
cmpsb
mov
sbb
nop
jmp
rclb
neg
stc
stos
xchg
sub
mov
incl
popf
xchg
leave
jnp
sarb
cmp
jg
test
in
pop
sub
lds
xchg
inc
icebp
add
cmp
scas
repnz
sub
repnz
mov
add
out
fnstcw
xchg
dec
test
mov
pop
rcll
add
imul
dec
imul
fnstenv
icebp
gs
rorl
lret
test
jo
xchg
movsl
mov
mov
subl
aad
mov
sub
in
mov
or
dec
aad
mov
cmpsl
aad
ret
ljmp
das
xchg
orb
jmp
mov
jno
fs
jno
arpl
cmpsb
arpl
xchg
sub
cltd
inc
mov
cwtl
xchg
sbb
pop
pop
add
or
leave
sub
fs
shl
fs
sbb
jo
pushw
jg
add
loope
imul
sbb
xchg
mov
push
icebp
sub
sub
adc
test
adc
mov
sub
jp
ljmp
cmc
sub
fsubrp
imul
cltd
jg
aad
add
iret
nop
mov
rclb
jno
sub
or
fucomi
sub
into
outsb
stos
iret
fsubrp
neg
cmp
je
into
test
mov
and
movsl
sbb
xlat
daa
in
out
jmp
negl
roll
mov
cmp
inc
add
push
inc
std
cmp
popa
out
mov
pop
lret
aas
push
popf
sub
and
out
sbb
mov
push
icebp
lahf
sbb
pop
sbb
mov
sub
cmp
mov
ja
add
scas
addr16
sarl
movsl
sub
inc
cwtl
fistl
aad
pusha
test
sti
enter
pop
stos
popf
mov
pusha
cmc
fldcw
arpl
stos
cli
pop
flds
addl
stc
test
push
push
mov
aam
fstl
cltd
nop
xchg
xchg
jno
jno
mov
cmpsl
popa
lods
fldt
jmp
mov
jae
ret
test
fld
sti
sar
je
movsl
insl
arpl
mov
imul
test
jg
mov
xor
popa
mov
ljmp
fcmovnu
mov
mul
std
cmp
adc
lods
push
lahf
ret
jno
or
cltd
or
add
sub
shrl
sbb
inc
fst
fcom
fists
pop
jmp
aas
sub
dec
sbb
fwait
mov
xlat
and
mov
aam
pop
jnp
ret
push
lds
push
movl
sbb
push
lret
and
shll
dec
hlt
or
std
xlat
neg
mov
clc
fldl
cmpsb
mov
or
jmp
jecxz
jne
notb
cmp
sub
ficoml
leave
stos
out
dec
adc
ret
push
jne
pop
test
mov
push
xchg
mov
mov
jbe
dec
aad
fnsave
scas
int
mov
int3
mov
xorb
sti
cli
xor
sub
mov
lea
jg
ljmp
pop
std
mov
push
sbb
scas
dec
std
and
add
xchg
icebp
mov
mov
rorb
insl
enter
aas
incl
sarl
leave
inc
rclb
mov
movsb
outsl
cmp
add
push
adc
mov
xchg
adc
repz
ja
lods
repz
push
mov
dec
leave
int
out
mov
nop
inc
mov
jnp
out
sub
sbb
jbe
add
int
outsl
loopew
out
loop
jae
fs
jno
jecxz
jne
cwtl
and
out
arpl
xchg
jmp
cltd
push
mov
out
xor
jmp
xchg
mov
and
inc
std
arpl
push
addr16
pop
xor
mov
ffree
inc
sahf
fwait
jge
std
pop
mov
out
jae
ja
adc
xor
int
fcoml
or
stc
arpl
aam
into
inc
bound
data16
jp
jno
lea
bound
aad
jb
add
dec
mov
inc
jns
sahf
imul
xchg
mov
jae
mov
sub
scas
push
add
fadd
popl
aaa
cmp
lods
xlat
adc
pop
imull
mov
inc
xor
scas
cli
icebp
repz
fsts
je
popf
add
sbb
mov
into
add
mov
lods
inc
sub
mov
mov
leave
mov
int3
mov
imull
adc
xchg
xchg
lea
xchg
and
arpl
xchg
lods
adc
mov
sub
movsl
loop,pn
xor
sbb
pop
test
or
call
rcl
hlt
stos
inc
jae
cmp
in
mov
sbb
add
or
mov
inc
xor
cld
add
sub
mul
lea
test
add
int3
scas
ds
jg
push
xor
aam
push
inc
mov
xor
cmp
addr16
xchg
mov
push
push
ror
fwait
add
stos
push
test
aad
sahf
push
pop
and
cmpsl
ljmp
enter
mov
out
cmp
ljmp
lahf
scas
or
adc
shl
mov
fistps
repz
movsl
lcall
mov
dec
ljmp
pop
push
jecxz
jae
out
int
pop
ret
enter
mov
cmp
std
scas
shlb
js
add
adc
pop
andl
fidivrs
jnp
xchg
mov
cmp
fisubl
mov
inc
jmp
gs
or
inc
cwtl
stos
ljmp
stos
push
fstpl
aad
pop
repz
jmp
outsl
jbe
push
xchg
lahf
daa
out
test
hlt
adc
das
fwait
hlt
sub
pop
pushf
nop
test
movsb
mov
test
scas
mov
cltd
xchg
addl
sub
lods
popf
paddb
int3
xor
test
movsb
aad
sub
lods
hlt
cmp
pop
sti
in
into
out
test
cmpsb
pop
test
std
add
pop
xor
and
daa
mov
mov
imul
mov
stos
fucomip
xchg
mov
sub
mov
bound
add
xchg
dec
mov
stc
popf
movsl
pusha
push
push
push
sar
adcb
xchg
mov
pop
pop
inc
mov
jnp
xchg
jp
aam
mov
out
enter
nop
popf
sarl
push
insl
push
adc
adc
push
fcmove
add
lcall
mov
rorb
insl
vmulss
or
pop
xchg
mov
lret
xchg
push
repnz
xor
ror
aad
dec
mov
mov
pop
mov
xor
xor
gs
mov
jmp
icebp
popl
jmp
stos
out
enter
cmp
pop
inc
xchg
fdivs
cmp
icebp
cmpsl
call
pop
sbbb
xchg
cmpsb
test
pop
xchg
lcall
sbb
mov
sti
test
inc
mov
inc
sub
xor
push
mov
ljmp
sub
stos
lret
mov
ret
mov
loope
mov
ja
xor
adc
mov
movsl
cmp
out
orl
cmp
jne
mov
imul
aam
lahf
out
imul
movsl
mov
stos
inc
add
sub
jmp
jb
enter
popf
movsl
sub
jmp
cmp
jmp
insb
sub
test
shr
movsl
or
and
push
jnp
hlt
push
ja
repnz
mov
fistpll
sarl
loop
shr
jne
xchg
jb
ret
test
pop
xchg
ljmp
test
addr16
outsb
inc
fistl
xor
mov
arpl
push
mov
test
sbb
pop
push
lds
popf
insl
sub
jae
xchg
lcall
icebp
jb
push
jmp
fldl
leave
add
sarl
mov
lods
repnz
popf
ljmp
repnz
ljmp
insl
movsl
imul
imul
cmp
adc
roll
adcl
sub
or
movsl
mov
jns
jne
insl
movsl
pop
lahf
imul
movsl
adc
mov
mov
movsl
sbb
ljmp
pop
popf
stc
mov
call
pop
lea
sbb
add
das
push
and
addr16
push
movsl
scas
cmpsl
jp
cmp
adc
xor
clc
ret
sub
popa
popa
push
push
out
icebp
dec
pop
popa
int3
or
sub
addr16
int
jp
fisttps
sub
inc
pusha
popa
call
xchg
push
bound
push
pop
sub
jg
faddl
pop
mov
cmpsl
pop
sahf
call
notl
pop
fld
push
stc
pop
jg
xchg
mov
movsl
mov
daa
lcall
test
movsl
enter
dec
pop
out
sbb
lods
scas
inc
xchg
or
mov
shl
arpl
icebp
push
leave
lds
jg
jle
sarl
ret
or
into
mov
mov
xor
mov
pusha
fs
mov
lcall
test
mov
pop
leave
shr
lea
mov
mov
shrl
movsb
aad
push
cmp
dec
pop
popa
or
push
sub
pop
pop
pop
roll
fnstsw
popa
outsl
nop
cmpsl
cs
repz
adc
imul
pop
lds
test
push
inc
xor
pushf
push
xorl
ret
lahf
outsl
mov
push
leave
imul
jbe
stos
jmp
sub
push
mov
push
test
mov
test
inc
mov
inc
sahf
leave
fwait
cltd
movsb
mov
mov
add
mov
sub
js
mov
in
orl
jmp
cli
int
bound
mov
inc
in
pop
mov
inc
ja
shrb
aam
inc
leave
out
or
sub
enter
push
lret
mov
outsb
stos
xorl
jmp
jg
and
push
stos
xchg
jmp
stos
sbb
test
adc
ds
sbb
insl
ret
stos
imul
xor
repz
mov
xchg
xchg
xchg
mov
add
xorl
push
cmc
mov
ret
lds
and
imul
cltd
cmp
imul
mov
xor
push
std
and
cmc
leave
ljmp
jb
push
into
popa
movsb
push
mov
sub
sti
popa
xor
repz
or
push
rorl
and
adc
stc
push
bound
leave
ret
inc
and
xor
aad
adc
adc
xor
mov
adc
test
leave
jae
fists
dec
sub
loopne
dec
sbb
sub
repz
or
sbb
cmc
mov
inc
ret
add
sti
scas
outsb
js
gs
out
scas
arpl
jmp
repnz
jno
mov
pop
mov
mov
xchg
movsl
xchg
jae
cmp
test
sub
std
sbb
aaa
jae
test
jno
imul
push
mov
repz
test
xor
mov
jnp
xchg
repnz
add
ljmp
aaa
repnz
shll
jae
test
and
repz
pop
jae
test
test
imul
ljmp
in
sti
orl
and
ljmp
jo
daa
mov
dec
sub
repnz
sbbl
add
dec
aas
andl
aad
mov
nop
repz
pop
rol
scas
rorl
popa
jg
xchg
enter
aas
outsl
pop
inc
addr16
dec
loopne
in
test
inc
ljmp
sbb
fiadds
pop
lock
and
shrl
lret
out
mov
jb
push
xchg
sub
push
lret
xor
inc
xlat
in
js
testb
call
sbb
push
lahf
add
call
push
push
dec
jp
popa
jo
dec
xchg
sbb
or
aas
mov
out
jo
outsb
loope
mov
out
mov
and
xchg
test
xchg
mov
mov
dec
cmp
fs
push
ds
or
inc
into
cmp
or
popa
pop
mov
shll
popf
pusha
sbb
dec
and
in
sbb
mov
cmp
mov
jmp
fcomps
xlat
call
fcmovnbe
ret
push
jge,pn
push
arpl
fs
into
mov
pop
mov
arpl
sbb
in
and
int
aam
fs
mov
mov
xchg
lock
popa
inc
or
inc
addr16
jl
add
popa
dec
cmp
push
pop
mov
xor
fsubp
mov
popa
mov
std
xchg
add
push
sbb
mov
sub
xorb
testl
fldenv
popa
js
addr16
outsl
jg
movsl
and
and
add
or
popf
mov
arpl
push
cmp
stc
mov
sub
in
cwtl
push
sub
test
popa
fstpt
mov
jae
dec
clc
jns
mov
xchg
add
mov
je
popa
out
sub
mov
and
mov
adc
mov
loope
add
mov
lock
std
mov
dec
cmp
dec
popa
sahf
xlat
xchg
push
push
push
lcall
dec
push
orl
or
xchg
cmp
popa
push
xchg
xor
cs
and
push
dec
scas
ja
test
pop
fstl
inc
add
inc
adc
gs
rcr
push
aaa
sbb
jmp
stos
enter
repz
fs
xchg
push
add
sbb
jae
mov
pop
mov
cli
iret
jnp
pop
jle
aad
mov
and
fwait
xchg
mov
xchg
mov
cmpsl
and
or
mov
popa
push
adc
lahf
popa
imul
dec
scas
xchg
das
inc
nop
dec
pusha
popa
es
jg
and
insl
push
xchg
mov
dec
lea
in
gs
mov
sub
icebp
adc
lcall
orb
cmpsl
call
jnp
mov
push
and
scas
xor
loope
add
pop
sbb
subl
xor
inc
icebp
jge
jle
popa
inc
lahf
xchg
addr16
std
cwtl
jge
mov
mov
hlt
cmpsb
pop
xchg
gs
inc
in
addl
bound
adc
ljmp
push
push
out
loope
xchg
mov
mov
call
mov
mov
mov
mov
popa
or
inc
add
lcall
pop
mov
push
and
dec
ret
mov
mov
jl
or
bound
into
sbb
cmp
add
jle
bound
sbb
pop
mov
frstor
insl
push
or
jbe
jo
push
and
in
cmp
call
daa
clc
xchg
jno
popa
scas
dec
call
test
jl
mov
test
dec
inc
imul
popa
sti
stos
mov
hlt
out
fnstenv
lretw
popa
or
add
pusha
insl
jno
pop
lods
popa
sbb
jl
sbb
push
cltd
shlb
push
mov
aad
popa
pop
aas
sti
cmc
push
mov
lock
cwtl
clc
repz
sbb
test
mov
ds
mov
call
rcrl
fsts
mov
shll
mov
std
push
jbe
mov
dec
mov
data16
loop
addb
sbb
sub
xor
jg
mov
mov
fadds
stc
call
popa
incl
adc
sbb
jle
and
leave
outsl
aam
pop
mov
jbe
aad
popa
fists
or
ja
xchg
push
and
pop
sub
inc
and
and
out
ljmp
xor
negl
into
je
bswap
add
push
popa
xorl
cld
shll
jl
xor
xchg
dec
dec
test
xchg
inc
rol
mov
faddp
ljmp
je
ja
mov
out
cli
popa
mov
push
jb
inc
imul
mov
mov
unpckhps
mov
push
mov
fstl
dec
imul
cwtl
dec
sub
cwtl
xchg
cltd
mov
fs
enter
add
cmp
push
inc
inc
int3
mov
cltd
jae
popa
stos
and
lret
out
outsl
jge
pop
pop
popa
stc
push
or
popa
dec
or
jge
lods
mov
call
and
out
popa
or
inc
leave
mov
inc
in
and
mov
popa
jle
sti
nop
cs
loop
test
scas
popa
mov
dec
pop
mulb
or
xor
popa
jg
adc
jbe
bound
jno
push
add
mov
fistps
mov
je
sbb
stos
punpcklwd
cmpsl
test
mov
sub
shll
add
sbb
movsl
sahf
jp
mov
jne
aad
lea
add
rcrl
mov
mov
mov
push
pop
nop
push
loope
sahf
cmc
jnp
fs
gs
and
mov
sbb
sbb
jns
lret
stos
imul
pushf
clc
test
insl
xchg
push
mov
fs
pop
add
pusha
insl
cmc
inc
or
pop
and
mov
mov
fistps
sbb
add
cmp
mov
cli
ret
or
jecxz
dec
lret
push
add
mov
cmpl
sahf
push
and
push
fldcw
push
jne
loop
push
sbb
mov
and
std
popa
mov
movsl
pusha
inc
cmp
inc
jp
rcrb
int3
rcll
adc
inc
mov
test
movsb
popa
jnp
xor
popa
shlw
mov
movsl
je
addr16
jg
movsb
add
repz
xchg
rolb
or
movsl
test
aam
test
push
add
mov
xor
les
xlat
into
popa
sub
shr
int
push
jo
vmovhpd
pusha
mov
xor
xorb
popa
and
sub
scas
bound
bound
lea
je
jmp
push
call
mov
pop
aas
loopne
cltd
jge
subl
and
inc
out
ja
div
xchg
div
ret
mov
xchg
cmp
mov
ljmp
mov
fildl
call
add
loop
cmp
mov
fwait
test
es
test
sarl
cmc
rcr
cs
inc
jns
lret
sub
bt
cmc
stc
cmp
cmp
jmp
mov
or
aas
lret
ltr
or
mov
add
add
add
add
mov
add
ret
or
aas
lret
verw
or
jecxz
or
mov
sldt
add
add
test
stc
jmp
ret
bt
cmp
pusha
jmp
jb
pushf
cmp
pushf
jmp
push
call
scas
aad
or
fistps
push
call
inc
cld
push
fdivp
cmp
test
jmp
jae
push
xor
movb
pushf
pushf
pushf
lea
call
pushf
pusha
call
xlat
lcall
fwait
test
cwtl
mov
cmp
aaa
mov
movsb
xchg
adc
jmp
pop
lock
xchg
icebp
mov
dec
out
cld
ja
push
pop
sub
cmp
bound
aad
inc
in
xor
ret
jmp
lret
inc
xchg
dec
out
or
dec
mov
lcall
flds
xlat
xchg
mov
add
push
ss
mov
jno
inc
push
call
mov
cmpsb
jp
ficomps
push
mov
push
push
cmp
outsl
push
dec
pusha
mov
sub
aas
sub
mov
jge
pop
fildll
cltd
divl
xor
stc
shlb
fwait
scas
adc
xchg
pop
pushf
cmc
enter
enter
xchg
xchg
sbb
popf
cltd
fdivl
in
mov
xchg
inc
shr
sar
or
xchg
pop
mov
adc
xchg
mov
je
data16
push
dec
rorb
hlt
push
mov
jmp
and
jmp
push
mov
out
in
lcall
std
mulb
cld
loope
incl
push
call
jmp
mov
jmp
push
call
cli
push
call
popf
lcall
and
push
sub
mov
jnp
adc
and
xchg
out
pop
mov
test
jmp
movsl
inc
pop
push
mov
fisttpl
outsl
movsl
jp
xor
ja
inc
push
mov
stc
jle
mov
push
pop
or
js
sbb
sub
inc
mov
adc
das
sbb
sub
daa
pusha
or
fdivl
dec
sbb
cli
orb
push
fldl
fs
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
mov
fistpl
imul
jno
stos
jmp
and
addb
mov
xorl
and
fwait
test
inc
testl
rcl
add
dec
dec
out
adc
sahf
xchg
out
movsl
adc
jb
jne
imul
icebp
mov
outsl
pop
mov
push
cmp
mov
cli
cmp
mov
xor
mov
stc
decl
test
cmp
bt
cmp
pushf
jmp
push
call
jne
cmp
out
je
add
push
call
xchg
int3
push
push
call
push
push
call
out
inc
cmpb
jmp
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
movb
call
mov
pop
push
call
cld
jae
enter
push
lea
jmp
xor
rorl
rol
arpl
dec
into
out
push
mov
jl
mov
push
xchg
xchg
mov
mov
arpl
lods
dec
out
mov
int
bnd
dec
out
pop
dec
push
enter
mov
andl
fnstsw
jo
es
adc
mov
cld
fisubrl
push
jp
push
sub
seto
inc
mov
call
popf
cpuid
push
call
mov
shrd
add
shl
sub
btr
pushf
shr
shl
add
jmp
lahf
adc
ficompl
jno
outsl
mov
fs
mov
aad
inc
and
scas
xchg
sbb
dec
xchg
in
insl
pusha
mov
ret
lret
and
int3
lahf
aaa
push
jmp
inc
dec
jle
fs
andb
and
jecxz
pop
fdivs
adc
jle
lds
push
dec
cmp
push
les
pop
aas
insb
jb
cmp
inc
sti
je
repnz
cwtl
jb
std
dec
nop
cmp
jns
ficompl
hlt
pop
push
sub
inc
or
daa
mov
jge
fwait
ss
push
leave
xlat
sub
mov
sahf
cmp
lahf
test
lahf
xor
inc
mulb
scas
mov
lahf
jns
sti
sahf
add
add
jno
push
movsb
cmpb
add
adc
insb
loopne
rolb
push
cld
sbb
sbb
out
dec
jbe
cmpsl
fwait
or
jmp
mov
cmpsb
ret
aam
in
mov
in
dec
fnstcw
and
je
mov
push
pushf
in
xchg
bound
jl
dec
push
out
pop
stos
sti
dec
push
test
and
add
pop
es
push
dec
jle
pushf
add
add
js
mov
movb
call
and
stc
clc
ljmp
int3
push
into
call
mov
or
add
movb
call
inc
lea
je
lea
add
and
not
rcl
push
mov
bt
cmp
add
pusha
clc
cmp
mov
mov
sar
seto
mov
pushf
call
xchg
cmp
fstps
into
test
adc
insb
das
fucom
imul
pop
xchg
jnp
dec
push
jne
popf
mov
test
sub
lahf
mov
mov
test
ret
pop
mov
mov
sub
aas
in
jne
jmp
cmp
das
loop
sbb
jae
pushf
inc
mov
dec
popf
xor
cltd
cmc
mov
mov
mov
pushl
ret
push
pusha
pushf
inc
push
not
jmp
cmpsb
std
loop
popf
cltd
das
cmp
mov
jecxz
jg
sahf
inc
push
push
jae
gs
jp
clc
jno
jbe
outsb
xchg
cli
scas
int3
sub
adc
or
dec
cmp
loope
outsb
or
je
leave
in
hlt
sub
pop
loop
push
sarl
pushf
or
mov
jbe
lcall
scas
ret
int3
push
xor
pop
ja
add
pop
push
movw
test
mov
pushf
jmp
inc
pop
out
xlat
popf
cltd
cmp
dec
mov
jge
mov
mov
adc
insl
lahf
xor
xor
ss
jmp
mov
std
mov
daa
inc
das
in
test
add
xchg
shrl
jg
popa
fdivrp
lret
pmulhw
jae
insl
dec
inc
ss
bound
in
fwait
pop
xor
pop
mov
and
dec
outsb
stc
out
mov
jo
nop
lods
cmp
addl
outsb
xchg
add
lret
ret
lret
std
not
push
jmp
push
call
test
xor
test
cmp
add
add
adc
mov
lea
jmp
lea
je
push
movb
call
lea
jne
lea
movzbw
not
pushf
mov
push
mov
pushl
pushf
pushf
popl
mov
cmp
test
or
call
ja
lret
cltd
pop
and
and
inc
repz
jmp
push
pop
cmp
stc
in
icebp
ret
mov
adc
popa
fcmovu
jl
xchg
lret
repz
subb
push
dec
mov
adcb
pop
cmp
fs
inc
fsubs
les
ljmp
fstp
stc
pop
lret
jae
jmp
push
sbb
and
call
jmp
inc
add
aad
cltd
xor
out
sub
rclb
xchg
cltd
jbe
nop
pushf
dec
jg
shll
jbe
jmp
iret
cmpl
icebp
and
nop
sbb
inc
test
add
inc
scas
xchg
mov
jb
stos
cwtl
scas
lock
dec
push
outsb
push
mov
fildll
dec
sbb
xchg
jle
adc
cmp
jno
pop
jle
sbbw
sub
or
dec
stos
push
call
add
cmp
popf
rdtsc
push
call
and
jb
lea
jns
push
or
pushl
jmp
pusha
lea
call
pushf
mov
lea
jne
cwtl
mov
pusha
push
lea
jmp
push
call
aam
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
popa
add
add
dec
or
inc
pop
xorl
inc
or
adcb
xor
dec
or
fs
mov
or
cld
cltd
aad
inc
or
pop
je
bound
add
add
mov
or
or
dec
or
fistpl
xor
pop
add
sarl
bound
dec
or
in
mov
mov
or
push
out
popf
test
add
icebp
sub
addr16
add
mov
fmuls
test
add
mov
lret
jno
add
arpl
dec
or
xchg
arpl
test
or
icebp
pop
clc
outsb
mov
add
sub
or
fdivrl
dec
or
icebp
sub
or
das
pop
and
push
leave
dec
or
jb
testb
or
sub
add
lret
adc
add
lea
xchg
mov
add
add
add
jne
dec
or
inc
jge
idivb
add
add
mov
or
xor
or
popf
mov
add
inc
test
test
add
test
push
lods
dec
mov
add
test
dec
mov
lods
add
add
arpl
or
add
sbb
outsl
test
popf
cltd
cmc
inc
lret
jg
add
sbb
push
imul
lea
daa
sub
xchg
pusha
sbb
fcmovnb
shll
add
dec
or
or
mov
das
cmp
imul
dec
mov
xchg
xchg
test
cmp
je
pop
iret
pop
sbb
sbb
jns
pop
out
inc
pop
push
mov
andb
outsb
xchg
mov
int
aad
lcall
aad
lahf
mov
sub
mov
xchg
lcall
sub
movb
mov
jmp
push
mov
mov
call
lea
jne
pusha
call
push
call
arpl
popa
push
call
lcall
aad
add
push
call
xor
rol
lea
call
push
call
push
call
mov
mov
and
jae
cmp
push
test
bt
xor
pushf
jmp
pusha
pusha
movl
sub
test
cmc
mov
neg
push
dec
movb
pushf
pushf
not
call
pushf
movb
pushf
lea
jae
pushf
lea
jmp
push
call
sub
cltd
cltd
sub
ds
dec
fdivs
sub
arpl
mov
dec
cmp
icebp
cltd
pop
add
sub
mov
mov
push
push
adc
cmp
fsubr
jnp
fnsetpm(287
add
or
jecxz
popa
movsb
test
es
xor
shll
adc
loope
sbb
lahf
outsb
xorl
xor
push
ljmp
sub
pop
cmp
push
cld
xchg
lahf
inc
rolb
cmp
inc
push
dec
pop
ja
or
cltd
cmp
add
movb
call
pushf
cmpsb
push
call
lods
xor
rcrb
inc
mov
fcomp
sbb
out
add
nop
pop
sti
pop
mov
cmc
mov
aam
jo
cs
cmc
xor
jne
shl
mov
or
cmp
pop
pop
cld
gs
cmpsl
icebp
cmc
push
mov
pop
dec
test
bound
xchg
popa
cld
cmp
push
outsl
les
xchg
and
xchg
in
dec
lret
pop
out
sbb
pusha
fcmovnb
cmpsb
imul
std
push
cmp
stos
push
sbb
aaa
loopne
ret
fildl
cwtl
dec
pop
and
jle
jno
adc
adc
rcrb
cmp
sbbl
cs
xor
test
addr16
xor
lock
mov
cmp
out
insl
and
xor
adc
mov
add
add
sub
jle
sar
inc
fs
jo
mov
or
mov
imul
sar
aam
xor
icebp
push
movsb
loop
lods
ficomps
cmc
lds
pop
sahf
int
shrl
sub
xchg
insl
imul
jle
rcrb
mov
push
sub
xchg
fs
test
iret
pushf
scas
sub
jb
pop
cltd
sar
dec
cmp
adc
dec
xor
sub
cmp
sub
lds
dec
xchg
xchg
pop
test
imul
gs
inc
add
cmc
scas
insl
std
lret
aaa
arpl
cltd
rcrl
dec
jbe
or
jae
mov
movsb
mov
lret
push
leave
push
sbb
xor
rorl
insl
inc
sbbl
sti
cld
push
mov
ret
aam
aaa
pop
adc
loope
sbb
clc
ljmp
movb
call
dec
pop
xorb
fucomip
sub
add
push
lea
jne
push
pop
movsbw
mov
pusha
push
lea
jmp
push
call
push
pusha
fildll
cltd
mov
sub
mov
test
add
mov
mov
sbb
leave
movsb
cwtl
cmp
adc
or
test
push
xchg
adc
pop
or
inc
shl
lea
pop
cli
sub
inc
int3
push
test
add
inc
sbb
popf
cltd
adc
imul
or
mov
mov
inc
loopne
mov
stos
pop
push
loop
sub
inc
push
add
clc
sbb
push
sub
dec
jo
push
adc
pushf
xor
xchg
xor
cltd
push
xchg
out
inc
and
pop
mov
adc
lahf
scas
outsl
shll
addr16
adc
xchg
pop
jg
imul
mov
movsb
fildll
int3
push
addr16
popa
add
jmp
add
movb
call
shl
sbb
add
push
call
or
push
into
popf
cltd
sahf
push
push
pop
push
sub
adc
in
inc
outsb
sbb
mov
inc
mov
hlt
and
insl
btc
mov
pop
jne
mov
fisubrs
insl
mov
adc
inc
movsl
ret
ljmp
xor
decl
pushl
push
pushl
ret
adc
int
cltd
adc
add
mov
jno
push
mov
sub
popa
push
shll
adc
adc
xor
and
mov
xor
stos
imul
push
and
fwait
cs
pop
mov
sahf
enter
jg
add
roll
ja
pop
orb
cwtl
lahf
in
or
mov
xor
cmp
pop
mov
mov
lret
cmc
lea
mov
loopne
push
inc
pop
inc
int
cltd
nop
sbb
sub
xchg
js
dec
adc
push
sahf
jle
jle
and
jl
dec
mov
xchg
cmc
sahf
repz
xor
cmp
lods
adc
cld
js
outsl
pop
or
cld
mov
xchg
ja
fcompl
dec
hlt
cli
jb
loopne
mov
aaa
xchg
fwait
lea
js
clc
popfw
jmp
pusha
jmp
xchg
out
popf
cltd
xor
fyl2x
arpl
inc
cmpsl
imulb
insl
stc
jno
add
in
jnp
xchg
pop
sub
lods
enter
addr16
lea
xorl
jb
jnp
cmpsb
pop
xor
pop
mov
ret
outsb
jg
push
fcomi
sub
xchg
stos
mov
je
fisubl
ljmp
pop
fdivrs
dec
push
ret
mov
mov
and
popf
cltd
mov
xchg
mov
fcomps
leave
bound
lret
push
cltd
jae
jnp
push
ljmp
dec
out
xor
aad
test
adc
pusha
dec
arpl
hlt
test
push
add
xchg
pop
lret
lock
loopne
xlat
arpl
sbb
in
sub
xchg
pop
leave
aas
or
cmp
insl
call
sub
jge
sub
in
scas
ja
push
insb
into
sbb
inc
adc
jns
lret
popf
cltd
stc
dec
mov
mov
test
mov
jmp
fldt
aad
out
jb
inc
xlat
icebp
or
ja
clc
and
popf
cmpl
sub
mov
je
in
sbb
ljmp
xchg
adc
push
dec
xor
push
xchg
inc
pop
inc
jmp
fsub
push
sub
gs
xchg
insb
int
fld1
imull
xchg
scas
je
or
fwait
daa
das
adc
push
pop
mov
outsb
sbb
lret
sbb
or
loop
loop
mov
add
mov
jb
mov
lea
pushf
movzbl
mov
pushf
call
xchg
cwtl
setle
seto
pushl
popl
movzbl
seto
lea
not
mov
push
movl
movsbw
bswap
not
lea
pusha
push
pushf
movl
movl
pushf
pushf
pushl
popl
pushl
pushl
ret
push
call
pop
pushl
popl
mov
movb
push
pushf
pushl
ret
dec
cmpsl
mov
popf
cltd
lret
cmp
xor
mov
xor
loope
xor
mov
xor
loopne
dec
xchg
pop
cmp
mov
sahf
mov
ljmp
loop
mov
mov
jle
loopne
jno
data16
cmp
inc
push
xor
incl
scas
lret
add
popf
cltd
inc
lahf
and
ja
inc
and
in
cltd
ja
push
jae
ds
jp
clc
jno
jp
roll
dec
daa
jp
out
mov
lds
ds
inc
hlt
adc
dec
jp
mulb
aam
lcall
jg
fsubrs
jnp
nop
and
or
test
imul
mov
and
add
push
js
sub
or
lret
and
in
xchg
rorl
xor
and
cwtl
jo
sti
cmp
das
out
or
xchg
cmpsb
rcrl
stos
aad
jecxz
fsubl
mov
dec
inc
sete
mov
pushf
inc
rol
sbb
add
jbe
cmp
xchg
lahf
bsr
aam
cmp
mov
pushf
mov
stc
call
test
jno
popf
cltd
scas
dec
gs
hlt
mov
nopl
cmp
pop
lea
xchg
fisttpl
jle
and
mov
clc
mov
aad
stc
mov
stos
pop
mov
lock
xlat
fldt
or
repz
cmp
inc
push
aad
dec
das
repz
jmp
inc
mov
and
out
shll
cmp
faddl
icebp
push
cmp
cmp
add
loopne
adc
cmp
ret
and
mov
jmp
lock
mov
push
mov
xor
cmp
fs
je
call
cmp
push
lea
ja
push
pushf
movl
lea
jmp
push
or
pushl
pushf
pusha
lea
jne
not
movsbw
movsbw
bswap
mov
push
pushf
popl
test
or
call
mov
push
call
push
call
iret
fsubl
pushf
push
mov
pushl
pusha
pushf
pushl
ret
je
sbb
popf
cltd
imul
pop
scas
clc
push
lock
add
daa
cld
mov
imul
mov
mov
stos
subl
dec
aas
dec
addl
lods
dec
sbb
mov
adc
insb
icebp
sbb
or
xchg
sbb
cmp
mov
jge
or
mov
mov
test
mov
push
sbb
xor
imul
cld
cwtl
pusha
push
call
movsl
jp
aaa
popl
clc
bt
cmc
push
cmp
mov
movb
lea
ja
shl
pusha
sbb
pushf
sub
rcr
pop
add
add
movsbw
mov
or
test
mov
shl
mov
cmp
jmp
setb
lods
call
push
call
data16
movb
call
int3
and
lods
add
pop
and
leave
add
movsbw
test
mov
setle
movl
xor
rcr
mov
cmc
test
push
jmp
push
call
cld
pop
jecxz
pop
or
popf
cltd
sub
in
sbb
mov
pusha
mov
imul
push
mov
daa
das
mov
data16
rol
cmpxchg
nop
lcall
test
xchg
rorl
nop
add
jo
insb
cmp
fdivp
cwtl
sbb
ljmp
mov
push
shrl
hlt
int
cmp
imul
cltd
test
xchg
neg
mov
adc
das
addr16
je
sub
jmp
popf
sub
sub
or
insb
add
mov
xor
add
mov
cld
or
out
repnz
cmp
xor
leave
mov
fsubrl
insb
fs
imul
mov
inc
cmp
movsl
dec
shll
push
fdivr
push
inc
pop
add
xchg
sub
das
mov
repz
xchg
sub
jl
ret
loopne
dec
xor
sub
xor
adc
lds
add
ret
sbb
repz
or
fs
aam
fsubp
clc
push
jg
je
clc
lea
lods
outsb
jo
cmpsb
xor
push
sbb
adc
dec
cs
nop
sahf
mov
inc
push
dec
inc
faddl
mov
mov
lods
jnp
mov
sub
and
push
lcall
pop
sub
lret
or
jmp
mov
cmpsb
push
adc
xor
bound
jb
add
pop
jns
lds
jmp
xor
push
insl
fdivrp
pop
and
adc
xchg
mov
pop
lret
inc
sbb
addr16
cmc
mov
out
sarb
xchg
push
or
mov
cmp
cmp
sbb
filds
call
xor
mov
loope
fsubr
aaa
test
mov
daa
pop
xchg
and
add
mov
das
das
call
das
jne
pop
imul
sub
popf
push
pushl
popl
pushf
pushf
pushf
movl
pushl
ret
xchg
xlat
scas
les
jae
movsb
aad
inc
mov
fwait
dec
pop
inc
adc
mov
and
aas
mov
dec
xor
xor
insb
fwait
jnp
cmp
repnz
imul
icebp
push
lahf
loopne
popa
decl
mov
mov
rclb
sarb
lea
mov
cld
cmc
mov
iret
ret
popf
cltd
push
stos
jg
cmc
push
dec
out
test
and
cwtl
and
and
aas
or
pushl
sub
jecxz
pusha
mov
pop
push
lds
ss
arpl
int
jmp
or
lods
int
int3
add
push
ret
call
adc
ja
jmp
lds
les
shlb
leave
mov
fcom
dec
push
mov
and
cmp
cmpsl
sbb
rorb
sbb
dec
je
les
adc
lea
and
adc
mov
lcall
add
push
jge
fs
ljmp
jne
mov
inc
adc
mov
xchg
insb
loop
push
inc
mov
xchg
inc
lods
xlat
mov
addr16
scas
roll
stos
das
jl
xorb
sub
aas
xchg
jle
mov
dec
test
fwait
repnz
jno
ret
adc
scas
cs
or
lods
lret
fucom
in
nop
push
stos
push
and
cmp
rep
jno
add
mov
pop
mulb
loope
sub
ljmp
pop
dec
adc
xchg
or
sbb
or
mov
dec
cltd
popf
test
aad
pop
lret
ds
divb
test
movb
push
lea
je
cmc
cmp
pushf
clc
sub
cmp
pushf
cmc
cmp
cmp
jmp
lahf
mov
rcrl
adc
mov
push
iret
test
shlb
mov
loop
mov
fs
mov
icebp
int3
push
mov
insl
cmpsb
mov
sub
xor
dec
dec
and
in
gs
pushf
popa
cmp
rcrl
aaa
jns
notb
mov
cmp
hlt
aaa
mov
jge
fidivrl
dec
out
test
ljmp
ljmp
adcl
mov
jge
loope
repz
sub
mov
xor
ds
pop
sub
mov
adc
or
mov
rcl
inc
pushf
mov
shrb
lcall
in
pushf
pushf
movl
pushf
pushf
pushf
push
mov
pushl
push
movw
pushf
pushl
ret
lea
call
call
sub
mov
movsb
push
pop
mov
jg
ljmp
mov
arpl
addr16
enter
lret
fadd
imul
add
out
aaa
push
out
cmp
roll
sahf
push
les
fcomip
push
loopne
bound
or
mov
rcrb
cmp
mov
cmp
cltd
mov
push
js
xchg
nop
ds
out
addb
fisubrl
daa
pop
test
and
dec
es
loop
in
and
cmp
add
jnp
sahf
sub
pop
sub
jg
test
movl
sub
lret
mov
cmp
mov
mov
iret
ret
xchg
sahf
or
and
ficompl
jns
and
lcall
ficoms
test
es
cmp
xor
mov
jno
dec
push
or
xor
and
popa
int
pop
and
add
lea
jne
jmp
pushf
lea
jne
aaa
sub
ror
neg
btc
clc
mov
pusha
dec
bt
bt
add
and
mov
cmc
pushf
test
mov
call
push
call
ljmp
popf
cltd
pop
xlat
mov
daa
scas
xorb
push
fs
pop
fsts
aam
ret
xchg
dec
insl
and
xchg
and
out
out
call
int3
sub
fadd
adcb
out
test
movsl
into
lods
jb
enter
sub
rcr
inc
jl
pop
dec
mov
outsl
push
add
xorl
or
sub
cmp
cs
xchg
pop
cmp
clc
pushf
add
loop
push
movzwl
mov
data16
or
push
inc
test
xchg
or
cmpsb
xchg
shlb
adcb
mov
fmul
aam
sub
or
xor
test
out
jnp
mov
sub
sahf
roll
xor
stos
dec
push
jmp
fwait
je
and
rcrl
fs
icebp
push
mov
cmp
push
les
mov
popa
je
jle
out
cmp
sbb
push
jl
jae
hlt
cmp
mov
aad
sarb
ret
es
out
sbb
sub
xchg
jns
adc
je
adc
insl
inc
ja
mov
sti
pop
push
mov
clc
mov
pop
das
insb
mov
sbb
orb
sbb
lds
loope
add
push
mov
bound
sub
rcr
sub
outsb
push
and
xor
test
or
fidivrl
push
das
xchg
imul
imul
das
push
mov
xor
fnstenv
and
icebp
and
in
test
inc
pop
sbb
pop
jnp
and
subl
aas
adc
pop
xor
xchg
pop
repz
jb
call
mov
push
sbb
jmp
fidivs
repnz
aaa
rcl
ret
enter
mov
sub
int
leave
mov
out
dec
and
sbb
sub
lds
mov
std
inc
test
mov
cmp
iret
jns
out
jb
shl
push
xchg
mov
xchg
int3
push
cmp
testb
daa
stos
orl
and
inc
and
mov
or
decl
xchg
rol
and
add
movl
cwtl
cwtl
lahf
push
pusha
not
pusha
lea
jmp
mov
dec
sub
lea
ror
mov
cmc
push
pushf
jmp
push
call
je
cltd
push
call
sti
test
in
popf
pusha
movb
pushl
lea
jmp
push
call
mov
mov
xor
movl
not
mov
not
lea
call
mov
pusha
lea
jns
jne
movzbw
seto
pushf
jmp
fidivrl
fiaddl
addr16
jecxz
sbb
mov
sub
sub
push
js
pop
adc
test
jae
or
testl
push
fidivl
cmpsb
outsb
test
jp
dec
jmp
xor
orl
dec
aaa
and
cltd
pop
add
xchg
mov
or
cmp
sub
mov
repnz
imul
lret
and
insl
or
jns
test
in
pushf
dec
call
push
lea
jne
movzbl
movb
cwtl
push
push
lea
pusha
call
push
cmc
movb
imul
pushf
add
pushf
pushf
lea
jmp
push
call
xchg
jg
aad
sub
shlb
and
dec
dec
lret
fnstsw
mov
lea
imul
scas
lahf
cmp
movsl
xor
loopne
stos
mov
daa
mov
xor
fildll
scas
test
mov
pushf
sub
stos
push
push
sub
ret
push
out
jo
rclw
jo,pn
jnp
into
insb
mov
pop
mov
fidivrl
jno
push
ds
pop
add
pushf
je
popf
cltd
mov
push
fwait
pop
loope
repnz
mov
xorb
mov
add
jae
aad
std
test
test
sbb
test
push
stc
lret
fildl
push
call
lods
push
imul
lea
test
stc
pusha
add
pusha
lea
jmp
push
call
dec
stc
pop
push
call
bound
and
jmp
hlt
xor
mov
cli
mov
push
out
das
movsl
dec
repz
es
mov
jl
push
mov
test
enter
xchg
inc
lods
dec
cmc
jne
sbbl
xchg
inc
movsl
cmp
jle
insl
movsb
outsl
pop
loope
test
outsl
xor
push
pop
push
fs
push
je
aaa
xchg
xor
or
pusha
lea
call
jmp
mov
movzbw
mov
call
jmp
cld
jge
mov
movb
mov
add
mov
loop
adc
xchg
stos
sub
mov
sub
push
xchg
cmc
jecxz
and
xchg
stos
cmp
shrl
outsb
loop
adc
mov
enter
fcomip
pop
cwtl
popa
cmpsb
cwtl
inc
in
pop
cmp
inc
bnd
jmp
and
cli
and
adc
js
inc
imul
test
push
sub
ds
addr16
mov
mov
cmp
sbb
inc
and
insl
or
adc
push
call
pushf
sub
pushf
pusha
pusha
mov
lea
jmp
push
call
hlt
jl
push
call
mov
and
push
lea
jb
call
xchg
lds
pop
clc
popf
in
sbb
mov
adc
xchg
in
mov
jl
mov
add
ja
cmc
mov
cld
mov
les
add
dec
inc
fwait
mov
fyl2x
icebp
imul
dec
jg
imul
push
fidivrl
jo
adc
dec
cmp
setg
xchg
mov
jnp
pop
outsl
or
and
sbb
cmp
jbe
xor
dec
xchg
and
jle
popf
cltd
mov
sbbl
cmc
xchg
inc
scas
jmp
adc
lahf
push
jl
lods
jne
out
sbb
add
push
insl
shll
imul
jne
push
or
outsl
mov
leave
and
hlt
ljmp
stc
jne
mov
leave
mov
repnz
clc
dec
orb
jns
ss
xchg
jge
pop
jae
push
aas
push
cmp
inc
fcoms
pop
in
mov
sti
lcall
inc
mov
jo
xchg
inc
lods
mov
xchg
inc
mov
daa
iret
jbe
loopne
jne
sarl
push
loope
mov
loopne
jecxz
fs
jge
xchg
mov
arpl
fildl
jp
repz
btr
and
and
mov
pushf
cmpb
pushf
lea
jne
btc
xor
xor
mov
inc
mov
add
test
dec
mov
bt
bt
test
push
call
mov
cltd
jmp
mov
dec
fstp
push
cwtl
popf
dec
dec
and
cltd
data16
mov
xor
movsb
int3
sbb
mov
xor
mov
push
mov
mov
lods
dec
and
mov
mov
rorb
aam
call
fstpt
loop
cld
mov
cmpsl
cmpsl
pop
jmp
push
cli
call
lcall
push
mov
inc
push
add
jnp
sahf
shll
leave
rcr
mov
shl
mov
stc
mov
clc
push
cmc
xor
bt
test
repnz
jmp
push
call
arpl
jbe
push
push
call
sahf
movl
lea
ja
jmp
push
call
adc
add
mov
and
jne
add
and
bswap
call
push
call
push
mov
popf
cltd
or
xor
dec
xchg
and
lret
fists
sub
adc
sbb
insl
sub
es
pushf
cmp
es
mov
out
jno
cmp
mov
mov
xchg
mov
lods
dec
push
jge
push
xchg
xchg
xchg
aam
outsb
sbb
fucomp
jb
sbb
mov
and
xchg
xchg
xchg
or
push
js
negb
adc
and
xchg
pop
pushf
lea
call
pusha
call
stos
or
mov
cltd
cmp
out
push
push
arpl
mov
pop
aad
cs
sbb
push
decl
xor
movb
lretw
mov
mov
ret
adc
sub
inc
ljmp
lret
insb
int
enter
cmp
xchg
test
cmp
cmp
sarb
cltd
pop
jmp
dec
jg
js
xor
cmc
popf
lea
ljmp
lret
jbe
and
fnstenv
mov
icebp
loopne
je
lock
push
popa
test
adc
iret
popf
iret
and
cmp
cmp
add
enter
das
insl
add
dec
hlt
jle
sub
movsb
jno
inc
sarl
lea
add
xorb
lcall
popf
xor
push
sbb
outsb
outsl
or
test
cmp
lds
mov
stos
aam
push
push
cmp
jle
sbb
push
inc
call
rolb
mov
and
pop
bound
push
push
inc
pushf
adc
lea
pusha
pushl
ret
jmp
jmp
adc
mov
mov
mov
lret
ljmp
je
adc
in
bound
sbbb
mov
arpl
insl
cmpsb
fisubrs
nop
and
add
outsb
push
lahf
sbb
stos
lahf
jo
inc
int3
push
push
add
mov
clc
push
btr
neg
test
push
lea
btc
lea
stc
push
movzbw
btc
mov
inc
or
adc
rcr
mov
shl
sete
adc
mov
cmc
rcr
shr
xor
not
mov
pusha
lods
jmp
push
call
bound
cmp
movl
movl
jmp
push
call
in
adc
jae
ljmp
stc
fildll
popf
cltd
in
rclb
mov
mov
or
sbbl
outsl
jl
adc
cmp
and
sub
and
xor
dec
aas
mov
clc
popf
pop
loop
test
outsl
pop
mov
lds
add
dec
mov
pop
inc
and
into
mov
add
xchg
call
pusha
lea
jne
lea
mov
pusha
push
push
movb
pushf
popl
stc
bt
pusha
test
or
push
lea
jne
pusha
pushl
popf
pusha
mov
push
lea
jmp
lea
jae
jmp
out
mov
popf
cltd
mov
mov
stos
dec
push
lods
mov
cmp
mov
imul
xor
mov
and
adc
lcall
and
cmp
push
mov
xor
cmovp
mov
jne
mov
lock
adc
and
adc
push
call
sub
mov
pop
ret
sbb
loop
fldcw
sub
sub
shll
and
fs
je
bt
sub
jmp
xor
cmp
repnz
call
pushf
xchg
lea
lea
pushl
popl
lea
jle
push
movsbw
not
bswap
push
lea
movsbw
lea
pushf
jmp
lea
push
xchg
xchg
jmp
jbe
sbb
mov
pop
rorl
loop
pop
bnd
rcrb
xchg
adc
adcl
daa
movsb
and
mov
xor
push
xor
lea
inc
push
sub
add
sub
scas
test
add
ljmp
fcmovb
imul
sbb
push
and
or
std
fdiv
imul
jmp
push
cld
inc
call
movb
jecxz
cmp
and
fwait
xlat
in
xchg
or
out
loop
push
fs
les
add
inc
js
je
jb
arpl
jae
arpl
ret
mov
cltd
adc
mov
jae
cli
cmp
mov
pop
pop
push
cmc
mov
xchg
adc
mov
sbbb
push
ret
int3
imul
inc
mov
ret
repnz
push
pop
inc
jo
cmpsb
mov
pop
adc
or
in
stc
ja
inc
and
movsl
cmpsl
inc
jne
jl
insb
add
xor
cmpsl
out
outsb
loop
gs
clc
lods
xorb
mov
pop
push
test
shlb
call
rep
jmp
push
call
xchg
add
push
imul
jb
gs
ret
test
popf
cltd
out
clc
adcb
aam
push
xor
xor
add
pushf
out
or
popa
pop
stos
mov
xor
daa
cmp
inc
pop
lds
mov
sbb
mov
mov
repz
xchg
ss
mov
cmp
dec
sar
roll
stc
out
push
jl
xchg
and
adc
addr16
icebp
adc
mov
mov
pop
cmpl
aaa
mov
bswap
movzbl
jns
lea
lea
movzwl
pushf
pusha
call
lea
je
test
stc
jmp
push
call
in
pop
push
call
test
mov
fs
je
clc
cmp
pushf
movl
jmp
push
call
popf
mov
jmp
call
xor
xchg
cmc
aad
lea
mov
ror
adc
sbb
rol
mov
stc
pushf
cmp
cmc
mov
movzbl
bsr
mov
test
stc
bt
sub
pushf
jmp
push
call
stc
cmc
call
bt
cmp
or
call
dec
arpl
scas
popf
cltd
jns
fistpll
and
sahf
or
lret
push
sub
adc
sbb
xchg
shlb
xor
les
cmp
dec
ret
push
pop
sub
fdivl
mov
fnstsw
push
inc
jae
insb
jbe
and
jb
clc
stc
push
bt
cmp
call
jmp
int3
popf
push
call
or
call
clc
shrb
push
sub
icebp
scas
aam
ss
mov
push
xor
dec
sahf
hlt
mov
clc
lea
in
dec
out
pop
and
scas
mov
adc
mov
arpl
int
in
ja
adc
dec
mov
ret
sahf
jmp
lahf
loop
hlt
push
xor
das
mov
push
sbb
add
mov
in
inc
outsb
jnp
jb
popf
shll
test
jl
add
add
lea
jmp
stc
pop
cld
lods
popf
cltd
dec
push
into
int3
enter
xorl
fildll
ret
inc
mov
popa
mov
jbe
pusha
imul
jbe
imull
in
add
fcompl
aaa
push
outsl
xchg
adc
sbb
aam
push
loope
mov
push
stos
daa
adc
rcl
mov
js
or
sbb
xchg
in
inc
sbb
adc
add
imul
dec
or
aaa
je
int
inc
repnz
dec
daa
mov
mov
cltd
shrl
lock
dec
push
xchg
mov
je
jge
or
pop
lret
imul
outsb
mov
pop
mov
push
fsub
dec
aam
push
xor
les
cmp
ja
aam
out
mov
add
pop
mov
dec
fs
pop
xchg
and
pop
push
push
push
inc
push
xor
cs
insb
add
and
test
adc
enter
addl
cld
mov
cmpsl
movsb
xchg
in
mov
sub
into
sbb
lret
pop
xchg
push
cwtl
mov
lahf
pushl
push
lea
je
jae
call
cmc
imul
push
mov
pushf
pushf
lea
jmp
mov
lahf
mov
bswap
not
lea
lea
movw
push
xchg
movsbw
pop
movl
lea
push
pusha
pushf
lea
call
cmpb
mov
call
mov
pop
lea
pop
pop
lea
not
not
pop
push
pushl
ret
sub
lods
popf
cltd
mov
fistpl
fsubrs
scas
add
fidivs
mov
lods
sbb
pusha
adc
xor
cmpsl
dec
push
jb
push
pop
add
cmc
sbb
jmp
sub
jge
fnstcw
outsb
xchg
data16
out
jg
aaa
mov
fwait
push
call
mov
pusha
pusha
lea
call
push
push
adc
push
pusha
jmp
push
call
xchg
lea
jne
call
stc
sub
neg
shl
neg
call
rep
call
pushf
pop
cld
stos
popf
cltd
inc
xchg
xchg
lods
jle
call
sbb
mov
xor
mov
pop
sahf
icebp
pop
and
mov
adc
pop
in
mov
pop
or
in
andl
and
dec
push
lea
fisttpl
ja
daa
je
mov
mov
xor
jb
xor
push
bound
pop
leave
rcrb
adc
add
and
test
addr16
push
call
dec
push
setns
pushfw
popw
test
setp
mov
test
mov
bt
call
push
call
data16
cwtl
fdivs
icebp
push
add
insl
xor
lcall
xor
punpckhbw
mov
mov
mov
push
out
jne
insl
cmpsb
lahf
jp
std
sbb
xor
fld
cmp
mov
outsl
inc
xor
ret
shrb
orb
pop
adc
pop
cld
inc
push
mov
sub
mov
sbb
jl
inc
mov
sbbb
and
jecxz
xchg
sub
dec
aad
icebp
fistpl
sbb
adc
inc
mov
push
call
dec
aam
push
add
fs
je
cmp
cmc
pushf
movb
cmp
jmp
scas
popa
inc
mov
movsl
pusha
pop
pop
dec
ds
repnz
adc
int
rol
pop
test
call
lds
data16
jle
jp
icebp
notl
test
out
jg
lock
jo
repz
hlt
popf
sub
repnz
lock
jbe
imul
mov
jae
jo
xchg
mov
xor
jno
jmp
or
test
jae
sbb
mov
aaa
stc
or
push
aad
mov
loope
ret
popa
enter
int3
int
iret
popa
rcl
rcl
aam
xlat
outsl
fcomp
fcmovu
jno
mov
popa
cmpsl
test
stos
stos
lods
lods
scas
popa
scas
mov
mov
mov
mov
mov
mov
mov
xchg
insb
fstl
lea
and
add
fisubrl
cmpb
inc
jb
push
loop
add
imul
add
sub
xchg
mov
xchg
cmp
add
inc
sarl
inc
mov
imul
pushw
sarl
lret
imul
xchg
sbb
bnd
arpl
imul
dec
and
test
fldl
test
imul
fidivl
popf
arpl
cli
mov
ljmp
lcall
movsb
mov
sub
mov
jns
ljmp
rorl
loope
adc
pop
subl
mov
jno
add
cmc
add
sbb
add
cli
cmpl
test
push
bound
test
mov
mov
add
mov
dec
push
out
sub
ljmp
cmp
or
je
mov
cmpl
movsl
jnp
ljmp
vmovdqu
mov
adc
mov
pop
jb
jno
bound
ljmp
pop
repnz
inc
mov
cmp
xor
sub
and
test
test
icebp
movsl
in
ljmp
shl
int
leave
movsl
vpminsw
test
cltd
mov
xchg
orl
jae
sbbl
dec
push
dec
inc
ljmp
push
push
cmc
xor
aad
jno
aad
jne
mov
bound
fwait
and
inc
divl
pop
jno
bound
in
mov
insb
andl
loope
lods
mov
mov
stos
mov
jns
mov
fbld
mov
push
cmp
insl
jb
sbbl
push
push
xor
xor
into
jns
fwait
adc
clc
fsubrs
fldenv
adc
cs
scas
movsl
int
mov
in
fiadds
dec
test
mov
ret
fld
stc
rcl
lret
iret
mov
inc
scas
subl
imul
arpl
inc
pop
inc
ljmp
aad
rol
shrb
shlb
loope
gs
cltd
jp
loope
imul
xchg
gs
loop
cmc
fs
lds
lods
cmp
bound
int
lea
ja
jmp
clc
shld
shr
mov
push
mov
and
pusha
jmp
clc
adc
movsl
popf
cltd
cmp
push
cld
adc
lods
xor
mov
inc
sub
ficoml
dec
insb
dec
pop
xor
lahf
les
xor
movsl
rcll
sbb
adc
or
sbb
push
test
push
cmp
adc
pop
ret
fisttpl
movsb
xchg
add
adc
jg
mov
jo
out
jo
mov
pop
sub
mov
mov
cmp
movsl
mov
fcomps
cld
mov
mov
std
pop
add
scas
aam
sbb
repz
and
lock
call
and
adc
call
mulb
cs
sub
push
test
idivl
ljmp
gs
cmp
hlt
cld
push
cmp
and
or
call
lea
lcall
dec
ljmp
push
movl
frstor
mov
fsts
pop
test
jne
lock
pop
xchg
push
xchg
popf
jne
aad
aaa
xchg
push
movsb
popf
cltd
and
test
xchg
lock
ret
and
and
aas
xchg
add
shll
mov
ror
jl
or
inc
vmwrite
xor
or
ret
xchg
xchg
enter
lods
cmpl
fwait
movsl
and
pushf
je
dec
jbe
stos
jae
stos
fisubs
mov
cltd
mov
sub
pop
pusha
cmp
lret
mov
pop
mov
mov
mov
inc
add
daa
inc
addl
movsl
inc
mov
xlat
in
jg
in
xchg
mov
jmp
push
and
sub
push
out
dec
pusha
subb
sahf
fsubp
gs
inc
mov
xlat
push
aam
cmp
push
xchg
stos
push
pusha
inc
fldl
mov
add
jb
pop
and
dec
mov
cs
add
mov
repz
mov
jnp
and
rcrl
push
es
add
jne
cmc
ret
bound
loopne
movups
fists
popf
cltd
clc
in
ret
xor
test
cmp
les
xchg
xchg
imul
int
pop
repz
push
sub
fcmovnu
mov
jo
ljmp
nop
mov
jmp
or
add
xor
jmp
inc
aam
mov
das
cmp
and
sti
les
mov
inc
cs
dec
nop
cwtl
sbb
inc
ljmp
cmpl
xor
hlt
xor
addl
popa
data16
fstpt
or
push
mov
push
push
jo
mov
aas
cmp
shrd
lock
jmp
in
shlb
or
push
mov
inc
mov
jns
xchg
mov
cs
lret
in
loop
push
add
mov
jle
mov
pop
in
insb
push
stos
jg
adc
cmc
jns
lds
lods
jge
mov
int3
call
js
mov
mov
inc
rclb
outsb
jbe
lods
mov
mov
push
mov
mov
jo
jb
ss
xchg
lea
jge
lods
dec
cli
cmc
jge
mov
push
or
adc
pop
and
inc
push
and
or
mov
mov
ja
xchg
jg
adc
mov
jge
pushf
sbb
es
push
call
mov
data16
and
mov
aad
aam
mov
push
in
jae
dec
or
jmp
push
or
pop
ss
movsb
andl
cmpsb
add
lea
adc
ss
push
mov
xor
jl
int3
xlat
add
xchg
subl
lods
fadd
or
adc
rdtsc
rcrb
pop
ljmp
xchg
jp
into
lock
sub
push
jnp
inc
fwait
or
xchg
mov
test
inc
stc
aas
pop
scas
loopne
adc
inc
mov
pushf
pushf
pushl
ret
pusha
jmp
jecxz
hlt
mov
mov
mov
call
test
out
cmp
cmc
int
inc
scas
mov
in
rclb
and
insl
inc
mov
sub
lahf
mov
dec
mov
mov
cld
imul
or
adc
idivb
or
mov
loopne
rclb
jg
in
add
adc
ja
arpl
add
jns
mov
imul
bound
sti
sub
sub
adc
or
test
or
add
pushf
test
sub
pushl
lea
jmp
rcl
add
movzbw
mov
pusha
bt
jmp
bt
add
pusha
jmp
inc
or
lahf
popf
cltd
imul
aas
ss
rorl
inc
repz
aad
mov
pop
mov
push
pop
sub
xor
mov
sub
add
imul
pop
ds
mov
lcall
cmpsb
mov
xor
outsl
adc
test
lods
pusha
dec
adc
mov
mov
sbb
stos
std
mov
rcl
jecxz
inc
nop
pusha
lods
push
push
fisttpll
dec
dec
movsb
test
mov
or
movsb
dec
pushl
mov
pushf
lea
jmp
push
call
add
pushl
popl
pushf
mov
push
pushl
ret
push
call
pop
fstpl
push
call
jae
push
call
mov
in
call
pop
leave
cmpl
popf
cltd
xchg
outsb
fbld
sahf
add
into
pop
std
push
push
cmp
stc
cmpsb
ret
lcall
movsl
sbb
cmp
aad
sub
lret
adc
enter
aaa
out
adc
mov
sbb
out
adc
imul
or
movsl
std
adc
jae
pop
hlt
das
dec
jmp
pop
add
and
xchg
subl
xor
fwait
icebp
gs
ljmp
mov
jp
sub
xor
stos
aad
jb
cmp
rcrl
into
jno
add
dec
inc
shrd
mov
bt
pusha
pushf
cmpsb
pushf
jmp
push
call
pop
into
xchg
mov
pushf
call
push
call
xlat
sub
mov
fcmovnu
shlb
mov
stos
mov
mov
and
dec
adc
inc
push
into
cmp
cmc
add
jo
lret
push
adc
fadds
daa
enter
jp
mov
aas
add
mov
cs
xchg
ds
insl
xor
inc
sub
gs
loopne
mov
and
fnstsw
icebp
jp
jmp
or
xchg
mov
cmp
pop
mov
lcall
cs
imul
into
pop
dec
pop
xchg
out
xorl
adc
mov
icebp
ret
pushf
movb
lea
jb
pushf
pusha
pusha
pushl
ret
lea
jne
btc
mov
pushf
bt
bt
add
cmp
pushf
movzwl
bswap
mov
clc
mov
pusha
test
add
stc
mov
call
call
repnz
popf
cltd
mov
subl
xlat
push
ret
outsl
lods
push
cmp
addl
fcomi
mov
mov
lods
add
mov
dec
and
mov
cmp
push
ret
jge
adc
call
fnstcw
fcmove
inc
mov
sub
mov
sub
xlat
or
stc
out
mov
jg
push
lret
dec
push
vmovddup
adc
pop
int
repnz
dec
gs
popa
addr16
outsl
js
add
movb
call
movsl
les
inc
jmp
test
pop
pusha
stc
movb
cmp
test
jmp
add
iret
pushf
popf
cltd
sbb
aad
inc
or
xor
mov
addr16
mov
xchg
add
fdivrs
sbb
jo
mov
imul
jmp
mov
aaa
push
pop
fsubrp
or
les
cmp
mov
lea
cmc
mov
lods
pop
mov
jno
lea
call
into
push
add
lods
add
mov
les
push
pop
sub
xor
mov
and
pop
je
push
mov
push
mov
or
cmpsb
shlb
test
push
mov
in
ja
dec
xchg
test
cld
xor
int3
in
fwait
popf
cltd
push
bound
mov
pusha
jns
sbb
push
test
iret
adc
sbb
imul
outsl
das
in
mov
cmp
jo
sbb
test
stos
add
arpl
inc
and
xchg
xchg
jns
hlt
sbb
xchg
inc
clc
pop
xchg
outsl
inc
dec
testl
pop
fwait
jne
inc
jae
xchg
pushf
dec
push
and
jp
subb
add
loop
cli
cwtl
pop
jle
cmpsb
mov
arpl
insb
dec
bound
jne
out
outsb
sbb
jbe
mov
add
pusha
pushf
pushf
jmp
xor
movb
jmp
cld
cmc
stc
popf
pushf
lea
jmp
mov
pushl
pushf
movl
pushf
pushl
ret
push
call
inc
adc
or
inc
icebp
je
push
lea
ja
call
cmpl
mov
jle
test
add
mov
add
in
push
jb
xchg
xor
sub
fcoml
push
rclb
xor
push
ret
push
inc
mov
outsl
cltd
out
xlat
addl
imul
lret
cwtl
movsb
lret
push
fsubrl
iret
mov
lret
add
ficoms
js
push
fiadds
sti
insl
daa
sbb
xor
dec
cmpl
inc
cmovae
mov
mov
or
lods
outsl
sbb
xor
pop
and
call
movsbw
pop
call
push
cltd
cmpsb
xchg
enter
dec
mov
mov
mov
aad
cmp
mov
fsubrs
inc
std
ds
adc
mov
push
cmp
lds
xor
cmp
addb
pop
movsl
imul
fnstsw
xor
pop
icebp
pop
add
shlb
mov
testb
sbb
mov
push
mulb
adc
lcall
aas
popaw
loope
mov
jl
shl
dec
loopne
cld
mov
iret
xor
cmp
lods
in
fiadds
pop
repz
cmp
icebp
aad
xorl
and
out
loop
rcrb
pushl
mov
adc
repnz
dec
lods
lcall
cs
mov
add
cmp
addr16
ret
arpl
add
mov
loopne
mov
test
dec
cmc
loopne
shr
adc
frstor
jno
adc
push
daa
push
adc
pop
mov
adc
inc
sarl
adc
or
out
fcompl
leave
rcrb
and
insb
les
push
ret
stos
bnd
lods
jge
call
push
call
fs
cltd
popf
cltd
dec
pop
mov
jmp
mov
cltd
fwait
outsb
insl
xchg
push
dec
icebp
xchg
paddusb
xor
paddusw
pop
subl
dec
movsb
add
mov
aaa
imul
pop
jecxz
dec
cmp
cmp
mov
shll
popa
xchg
mov
dec
lods
nop
imul
push
xchg
out
or
ds
stos
adc
and
adc
jp
inc
dec
sub
std
lret
mov
repnz
xchg
popf
cltd
and
in
mov
add
test
add
roll
xor
in
mov
lods
fcomp
mov
outsb
and
shll
add
mov
mov
jp
pop
bnd
push
out
mov
sbb
gs
or
add
out
shrb
xor
xchg
popf
cltd
dec
mov
out
rcrb
inc
and
sete
fld
mov
mov
sbb
pop
loop
jno
adc
xor
cmp
jmp
insb
dec
jge
sbb
js
xchg
xor
jge
push
cmpsb
dec
mov
in
int3
cmp
cmp
addr16
xchg
popf
cltd
mov
into
mov
cmp
xchg
mov
push
cmc
stc
stos
dec
dec
xchg
xor
insb
pop
mov
cmp
push
adc
movsl
gs
cs
jb
in
push
pop
or
wbinvd
sbb
out
or
shld
bts
mov
cmc
cmpb
push
mov
movb
movb
lea
jne
xor
xor
rol
and
lea
movzbw
mov
pusha
add
and
ror
not
shl
mov
pushf
pusha
cmc
jmp
xor
btr
lea
mov
add
bt
add
neg
call
call
pushf
lea
mov
lea
jmp
jmp
not
mov
lea
pusha
mov
lea
call
pusha
adc
jmp
adc
jge
popf
cltd
mov
and
add
sbb
mov
fs
je
push
out
pop
cld
test
sub
incl
jo
insl
pop
das
xchg
mov
sub
and
int3
push
ds
mov
imulb
xchg
popf
cltd
jl
adc
movsl
mov
rcl
mov
enter
insl
sarb
ret
lods
fwait
js
aad
xorl
cmp
subb
js
mov
mov
and
inc
pop
js
dec
loopne
cmpsl
clc
pop
ret
out
sub
je
ja
lds
inc
enter
xor
test
dec
fisubs
mov
cmp
test
and
fwait
pop
cli
out
xor
jmp
push
call
into
es
clc
shr
bt
pushl
cmp
movw
jmp
jmp
push
call
inc
call
call
call
cltd
mov
cmp
sub
push
lea
cmpsl
into
fimuls
fldt
loop
sub
sub
sbb
sbb
mov
loop
cmp
daa
cmp
sub
push
movsl
xchg
out
push
aad
bound
pop
daa
test
shr
cld
std
inc
pop
sub
cltd
iret
xchg
and
cmp
mov
test
jp
cmp
insl
jmp
xchg
dec
movsl
xchg
imul
clc
jmp
pushf
pushf
lea
jne
pushf
mov
push
pushl
ret
pushf
call
push
call
push
xor
or
movups
mov
adc
mov
pusha
not
pushf
lea
jge
push
stos
pushl
mov
lea
pusha
pushf
jmp
pusha
inc
mov
movw
inc
stc
pushf
cmpb
push
jmp
pushf
mov
call
push
call
shlb
xchg
icebp
push
pusha
setne
movzbw
mov
bswap
call
ljmp
adc
ret
cli
push
or
pcmpeqd
fisubrl
out
lea
test
lret
outsb
repnz
outsl
jmp
daa
mov
cltd
fstpl
cmp
movsl
inc
addb
ss
fucom
push
sti
fsubrs
jnp,pn
cwtl
push
rclb
enter
xchg
loope
scas
shl
adc
cmc
cmp
dec
js
loop
and
adc
mov
fcomip
pop
shrl
lods
xchg
popf
cltd
cli
inc
cmc
sbb
roll
inc
add
clc
int3
jo
push
or
mov
in
movsl
pop
pushf
js
jno
cld
js
pop
mov
dec
xchg
ret
rcll
mov
mov
sbb
into
out
in
loop
out
xchg
sbb
mov
or
stc
cs
stos
or
lods
jno
push
pop
mov
add
xchg
ss
cltd
or
out
add
mov
mov
inc
mull
mov
mov
inc
mov
push
aad
pop
and
mov
das
mov
clc
and
adc
or
cltd
add
cmp
test
cmpsb
stos
ficoml
push
mov
mov
movsb
or
add
in
dec
sti
dec
xor
jns
mov
mov
ljmp
pop
out
cmpsl
sbb
mov
mov
dec
and
cmp
adc
inc
lcall
xchg
popf
cltd
not
lret
xor
mov
xchg
test
subb
mov
pop
movsb
lods
repz
inc
push
sub
push
popf
adc
mov
ja
mov
sbb
lea
ja
sbb
rcr
sub
setns
add
not
movzbw
movsbw
mov
rcr
cmp
mov
test
bt
repnz
pusha
lea
jne
pusha
movb
pusha
jmp
push
pusha
call
mov
cltd
dec
sbb
pop
xor
sub
cmovnp
data16
cmp
sti
aam
jmp
jg,pn
ret
imul
adc
cli
imul
es
and
push
mov
pop
xchg
roll
push
scas
pop
push
push
rcrb
xchg
in
jg
sbb
rcr
push
pop
sub
cltd
pop
pop
jmp
fnstsw
movsl
xor
addr16
or
scas
icebp
cmp
jle
dec
scas
call
sar
gs
sub
push
mov
dec
xchg
popf
cltd
cwtl
movsb
push
das
lods
aam
shll
lods
sbb
push
mov
xchg
push
mov
mov
sbbl
mov
xchg
or
cmpsl
scas
loop
dec
xor
rcl
push
vpor
adc
loope
loopne
push
sbb
mov
mov
pop
cmp
mov
out
lods
mov
adcl
inc
gs
add
pop
pop
stos
and
cltd
adc
outsl
or
xor
imul
xor
lock
mov
cmp
call
jmp
add
add
popf
mov
dec
add
add
gs
add
add
add
add
add
add
push
adc
add
adc
add
adc
add
sbb
add
sub
add
add
add
add
add
add
add
adc
add
adc
inc
adc
add
adc
jae
je
jo
jae
popa
jb
add
popa
je
add
and
cmp
mov
inc
in
cmc
stos
xor
sahf
ret
add
mov
pop
insl
std
jmp
add
or
and
cmc
aam
loop
push
lahf
repz
push
negb
scas
pop
fistpl
xchg
push
cmp
or
mov
popl
xchg
loop
loope
add
inc
bound
or
dec
xor
cltd
jns
push
or
fistps
or
mov
jmp
and
stc
pop
adc
inc
notb
jg
aas
sub
ror
jb
jg
imul
adc
xor
cmp
cmpsl
enter
push
jne
xor
stos
jg
mov
aad
icebp
dec
mov
cmp
jne
inc
sub
aas
mov
jnp
ja
dec
inc
jns
adc
loopne
mov
jb
mov
push
clc
xor
es
pop
aam
inc
jne
call
inc
cmc
fisttpl
or
sub
addb
dec
fwait
push
notb
mov
adcl
mov
insb
cmp
lahf
pop
pop
sbb
jnp
test
adcb
dec
adc
xchg
outsb
adc
mov
popf
repnz
decl
xor
mov
jno
lods
stos
int3
test
jecxz
inc
pop
mov
dec
mov
sbb
nop
popa
rclb
xor
ret
mov
pusha
lock
jl
dec
pop
adcb
addr16
jg
push
leave
and
and
ds
mov
push
imul
mov
cmp
and
or
cltd
nop
pop
movsl
out
and
jae
adc
scas
stos
xchg
scas
fs
inc
jg
pop
daa
rcr
and
push
out
sub
loope
imul
mov
mov
push
adc
divl
loopne
out
adc
scas
ds
pop
mov
outsl
cmc
mov
lcall
xchg
xchg
arpl
xchg
inc
loopne
in
mov
sbb
sub
mov
xchg
mov
test
aas
xchg
jge
fbld
jp
scas
fldcw
lods
sti
mov
jmp
je
lea
jmp
cmp
test
mov
pop
int
xor
push
fisubs
insb
aam
pop
call
call
mov
dec
cmp
fisttps
cltd
or
test
test
mov
in
imul
sti
dec
sub
push
push
in
icebp
add
xlat
adc
insl
fidivrl
enter
ja
push
lods
mov
cltd
mov
adc
dec
mov
daa
inc
push
outsb
add
or
out
rcrb
sub
test
or
aas
push
aas
pusha
loope
lods
pop
mov
push
pop
adc
cmp
les
mov
push
adc
out
pop
add
dec
or
mov
inc
mov
xor
and
sub
es
inc
sbb
and
aad
cmp
mov
mov
das
cmp
js
mull
jae
inc
xlat
es
push
jns
test
cmc
stc
xor
stos
enter
lock
cmpsl
xchg
pop
ja
or
fs
pop
adc
and
aaa
mov
loop
cmp
fists
les
loopne
pop
insb
stos
fstpl
lret
inc
pop
bound
out
or
adc
and
xchg
and
notb
xorl
pusha
add
sub
jl
outsl
clc
lahf
rcrl
jp
enter
outsl
jo
push
jnp
shlb
pop
mov
dec
ds
loop
push
ja
rcl
xchg
jge
cli
imul
nop
repnz
xchg
xchg
sbb
cwtl
sarb
push
mov
adc
adc
lea
adc
out
mov
int3
aad
cmp
or
or
cmp
pop
push
mov
mov
call
push
dec
jb
fldpi
jno
outsb
dec
dec
push
adc
popa
inc
scas
dec
mov
out
outsb
aas
loopne
fcomps
rol
cmp
mov
mov
loopne
sbb
push
xor
xchg
les
sbb
data16
jg
sti
sti
out
ja
repnz
or
icebp
and
mov
repz
popf
add
subb
pop
test
cmp
push
daa
inc
lock
sbb
push
and
aas
dec
pop
or
arpl
adc
jnp
xchg
push
sub
sub
rcl
aad
push
mov
test
imul
repz
mov
daa
and
jg
jb
aas
add
jle
repnz
aad
loop
push
push
movsl
mov
lret
lock
add
dec
fmuls
jmp
jl
dec
mov
cmp
mov
cwtl
adc
daa
xchg
push
dec
ljmp
cltd
dec
decl
stos
jge
sbb
mov
gs
jmp
lods
cmpsl
fs
loope
fwait
bound
clc
pop
sarb
adc
push
daa
sub
inc
test
xchg
xchg
ja
int
lcall
sub
call
es
sbb
pop
imul
dec
lahf
outsl
or
mov
clc
add
cwtl
inc
or
ss
in
jg
jmp
push
repz
int3
sahf
push
dec
adc
pop
out
lea
scas
ficompl
mov
pushf
xor
push
sbbl
aam
mov
mov
cmp
jecxz
jmp
inc
fidivrs
push
jae
in
pop
adc
sub
ret
mov
sub
fisubrs
stos
xchg
lea
mov
inc
jmp
mov
sub
push
sbb
add
mov
ljmp
callw
cmpsl
test
inc
ret
std
neg
mov
cmp
or
loope
mov
or
mov
xor
lret
aad
ljmp
jnp
add
sbb
adc
cmc
inc
xor
aam
push
insb
push
pushf
adc
fisubrs
lret
cmp
mov
aas
cmp
test
cmp
cmp
pop
fs
negl
and
sbb
leave
in
stos
sbb
xchg
sbb
mov
shrl
mov
in
jo
das
shlb
dec
jae
dec
jae
gs
xor
xchg
loop
xorl
test
mov
vcvtps2dq
mov
nop
dec
mov
aaa
xchg
push
lcall
in
ss
shlb
punpcklwd
add
push
out
xchg
mov
cmp
nop
and
movl
xchg
sub
andb
inc
cmp
into
je
pop
stos
mov
ss
pop
push
imul
push
add
mov
dec
mov
movsb
dec
imul
jg
pushf
mov
mov
adc
arpl
int
sub
push
push
sbb
mov
test
jmp
xchg
xchg
test
xor
xor
lahf
or
int3
jg
std
ficoms
jg
in
xor
hlt
adc
flds
movsb
jbe
inc
sbb
and
jl
mov
fsubrl
xor
mov
pop
jg,pt
or
int
not
shl
jge
lret
shr
or
ret
xor
dec
mov
movl
scas
imul
mov
adc
lea
arpl
out
popa
mov
popf
and
leave
xor
jmp
jecxz
jl
xchg
cmp
inc
pushf
mov
xor
dec
je
test
inc
ss
xchg
mov
xor
into
sbb
sbbb
pop
and
out
mov
stc
insl
cmp
xchg
into
mov
leave
pop
sub
gs
cs
outsl
xor
int
or
jmp
cmp
int
inc
xor
inc
add
xchg
dec
jbe
push
mov
sti
addr16
cmp
movsb
mov
and
ret
popa
popf
fildll
dec
xchg
repnz
aad
lods
pop
add
or
int3
cwtl
mov
and
xchg
push
xchg
std
stos
aam
or
sub
repz
mov
xchg
jo
or
int3
out
pop
aad
rorl
adc
test
repz
sarl
or
ret
inc
cld
ret
aaa
test
je
bound
int3
sbb
pushf
andl
pop
sbb
imul
pop
jns
aad
lret
inc
scas
and
shrl
mov
push
push
pop
pop
adc
fdivp
cltd
xor
or
fstpl
lahf
adc
in
add
mov
addr16
aam
adc
enter
xor
add
popa
frstor
mov
xchg
or
shlb
in
and
sbbb
add
sub
lahf
mov
call
pop
cmp
jns
jne
inc
lock
add
mov
lcall
mov
or
xchg
scas
add
bound
jp
test
xor
movsb
mov
popf
sbb
test
xchg
mov
pop
mov
outsb
outsl
sbb
shlb
xorb
sbb
fistpll
xchg
arpl
or
push
mov
push
shrb
rclb
cltd
and
iret
or
xchg
adc
test
repz
xchg
pop
xor
sub
lock
outsl
xchg
ds
jno
inc
outsb
dec
mov
xorl
femms
pop
data16
and
inc
lods
sub
mov
icebp
aad
cmp
mov
cmp
xor
and
xorl
cmp
pop
scas
es
std
sbb
sub
out
repz
add
adc
lret
jo
xchg
adc
jnp
shrb
in
cmpsl
sahf
shlb
inc
cmp
mov
xor
imul
fisubrs
pop
les
mov
movsl
mov
aad
ficoml
imul
xor
dec
lret
add
sqrtps
stos
rcr
pop
sub
or
in
nop
int
lea
mov
xchg
push
ficoms
orb
xchg
pop
xchg
jl
cmp
pop
into
adc
push
gs
inc
dec
in
setl
mov
and
or
shrl
cmc
inc
out
les
dec
mov
adc
mov
jmp
or
dec
cmp
cwtl
aaa
mov
add
movsb
mov
or
cwtl
add
je
das
mov
cltd
cmp
imul
push
mov
pop
or
dec
inc
sub
jle
jl
pop
pusha
gs
fcoml
aam
mov
mov
xchg
test
xlat
pop
add
out
push
insb
ja
cs
insb
add
cltd
or
or
push
sbb
lods
cmp
lahf
in
loope
leave
data16
scas
jl
pop
je
ss
inc
rcl
sbbl
sub
popa
insl
sahf
int3
dec
jecxz
pop
sbb
jp
cwtl
push
cwtl
iret
lcall
sub
pop
xchg
pop
push
cltd
imul
adc
adc
xchg
mov
push
sti
mov
movsb
push
add
gs
lds
push
sub
mov
and
push
filds
push
cmp
dec
lea
popf
cltd
lock
in
push
cwtl
shl
int3
cmc
push
ficoms
ret
or
push
cli
test
mov
movsl
arpl
call
addl
xor
aaa
popl
cmp
pusha
test
cmp
pushf
lea
ja
adc
clc
sub
movsbw
mov
rol
add
ror
mov
adc
cmc
mov
clc
stc
repnz
jmp
movzwl
lea
pop
bswap
lea
jmp
adc
cltd
push
lret
pop
xchg
ds
popa
xor
and
mov
scas
int
adc
loope
mov
lret
cmc
adc
cli
int
insb
mov
jmp
cmp
shl
push
loope
fimuls
je
xchg
les
mov
in
push
mov
mov
mov
test
fsubp
pop
or
cmp
add
lods
clc
push
mov
int
or
add
cmc
or
mov
ret
std
inc
inc
push
mov
aam
jge
sbb
push
shr
sbb
add
fmuls
subl
lcall
jmp
push
jmp
bts
xchg
mov
push
sub
mov
cmc
push
call
mov
pushf
lea
jmp
mov
test
jmp
jmp
pushl
jmp
bswap
call
pushf
popl
jmp
daa
and
neg
mov
bt
stc
cmp
pusha
sub
jmp
mov
call
pusha
movb
mov
pusha
mov
call
mov
pusha
pushf
mov
movl
movb
call
mov
mov
movb
jmp
rol
pushf
lea
test
clc
bt
xor
jmp
mov
mov
setl
mov
not
bswap
mov
movb
movl
mov
mov
pushl
ret
mov
mov
push
pushf
lea
jmp
or
bsf
das
mov
cmp
stc
pusha
sub
movw
pushl
mov
mov
pusha
push
pushf
lea
jmp
pushf
mov
pusha
pushf
pushf
popl
push
jmp
mov
bswap
bswap
mov
push
not
mov
jmp
shr
cmc
cmc
or
jmp
jmp
test
sub
pushf
mov
mov
mov
pushl
call
call
bt
cmp
push
pusha
jmp
pop
movzbw
mov
pushl
lea
clc
movsbw
mov
jmp
movsbw
pushf
mov
mov
movzbw
mov
call
jmp
and
pusha
rcr
mov
cmp
mov
cmc
sub
jmp
add
pushf
sub
cmc
pushf
stc
not
call
btc
cmc
mov
not
xor
pushf
ror
movsbw
jmp
pushf
add
movb
setl
setno
mov
jmp
cmc
lahf
shl
mov
cmp
cmp
pusha
sub
pushf
pusha
call
stc
jmp
mov
push
lea
jmp
rol
pusha
pushf
lea
jmp
add
or
ret
add
xchg
or
mov
push
add
bound
or
inc
cmp
add
mov
add
add
mov
pop
add
push
add
mov
or
ret
add
pop
pop
add
or
bound
add
cmp
add
xlat
add
sub
add
pop
add
rorl
add
add
add
in
pop
add
push
pop
add
push
add
out
add
add
pop
add
or
mov
push
pop
add
mov
add
adc
add
add
add
mov
mov
pop
add
add
mov
cmp
add
or
mov
push
add
and
add
add
pop
add
add
ret
add
mov
add
loop
add
cmp
add
pop
add
or
clc
push
add
pop
pop
add
xchg
or
and
add
add
pop
pop
add
lret
bound
or
bound
or
and
pop
add
pop
add
mov
pop
add
add
add
or
and
pop
add
or
inc
rorl
add
fldl
add
or
ret
add
xlat
add
and
pop
add
loop
add
std
push
add
lret
and
pop
add
out
add
inc
repnz
add
pop
add
das
pop
add
in
add
pop
pop
add
add
add
pop
pop
add
fldl
add
pop
pop
add
fwait
pop
add
int3
add
add
add
pop
pop
add
or
ret
add
fldl
add
push
add
or
and
pop
add
add
add
xchg
or
inc
repnz
add
scas
add
add
arpl
add
lret
clc
push
add
in
add
pop
add
in
add
fwait
pop
add
push
add
mov
add
inc
mov
push
add
push
add
or
inc
rorl
add
int3
add
ret
add
or
bound
push
add
std
push
add
loop
add
or
mov
mov
add
or
inc
cmp
add
add
add
pop
add
lret
loop
pop
add
clc
push
add
mov
or
and
add
ret
add
adc
add
pop
add
pop
push
add
hlt
add
add
in
add
push
add
fwait
pop
add
adc
add
loop
push
add
adc
pop
add
xchg
or
clc
push
add
out
add
add
add
and
or
inc
jp
add
mov
add
push
add
in
add
xchg
or
xorb
inc
cmp
add
or
mov
pop
pop
add
mov
or
inc
adc
pop
add
or
loop
or
ret
add
fldl
add
xlat
add
inc
pop
pop
add
mov
add
add
push
add
in
add
in
add
xchg
or
loop
add
add
or
inc
pop
pop
add
or
bound
bound
pop
add
add
add
or
add
push
add
rorl
add
pop
pop
add
pop
push
add
pop
add
int3
add
inc
adc
add
ret
add
pop
add
pop
jae
pusha
pushf
mov
pusha
jmp
push
mov
xchg
bswap
lea
pop
mov
bswap
movw
jmp
push
clc
sub
jmp
clc
mov
test
xor
pusha
pusha
pushf
inc
movw
movb
decl
jmp
lea
jle
push
pushf
pushl
bswap
movsbl
mov
lea
movzbw
mov
movzbw
pushf
movl
not
pushf
popl
rol
push
movsbw
push
pusha
push
rcl
push
pushl
popl
stc
movl
not
mov
mov
bt
mov
pushf
pushf
rol
push
push
lea
jmp
pushf
inc
shr
add
shl
shl
mov
clc
add
mov
call
pusha
call
movsbw
mov
pushf
jmp
pusha
pusha
mov
jmp
add
mov
notl
pusha
btr
mov
pushf
sub
stc
pushf
mov
and
call
cld
pushf
jmp
jmp
pushl
pushf
popl
call
cmc
add
mov
pusha
mov
jmp
pushf
aaa
bsr
pushl
mov
sar
sub
shr
mov
push
test
add
movb
mov
pushf
movb
lea
jmp
mov
not
mov
lea
mov
jmp
add
jo
not
pusha
xor
push
add
pusha
movb
cbtw
stc
stc
pushl
cwtl
stc
call
push
mov
push
xchg
not
call
pushl
popl
clc
push
pusha
mov
clc
rol
pushf
lea
jmp
mov
mov
mov
movl
movl
lea
jmp
mov
movl
pusha
pushl
mov
mov
push
call
pushf
jmp
cmc
jmp
mov
not
pushf
jmp
rcr
not
rcr
push
bts
call
pushf
sub
bt
mov
cmp
cmc
add
pushf
mov
lea
jmp
mov
lea
jno
pusha
push
mov
mov
pusha
push
lea
jmp
sub
mov
jmp
add
pushf
pushf
popl
movb
call
rol
mov
pushf
movw
lea
jmp
mov
pushf
pushf
jmp
lea
jb
push
shl
pushl
pusha
movb
movb
mov
pushf
call
btr
mov
bsr
dec
or
add
mov
bsr
movsbw
dec
btc
pusha
pusha
bswap
rol
dec
call
movw
pushf
mov
pusha
mov
pushf
jmp
mov
movb
pushf
popl
call
pushf
push
jmp
push
mov
call
push
mov
btc
mov
rcr
pop
pop
lea
pushl
popl
bswap
movl
pushl
call
add
pushl
movb
pusha
push
mov
pushl
lea
jmp
mov
call
jmp
pushl
popl
movw
pushf
pushl
lea
jmp
push
mov
push
mov
call
mov
xchg
push
btr
rol
lea
or
add
shrd
dec
add
pusha
not
jmp
call
pushf
popl
lea
jg
bt
push
ror
ror
btr
lea
push
jmp
movw
movzbw
pushf
popl
not
pop
mov
push
btc
cmc
jmp
test
lea
jl
mov
cmc
cmp
pushf
clc
sub
push
mov
mov
pushf
lea
jmp
das
mov
xor
mov
cmc
sub
cmp
jg
push
cmc
shr
push
mov
pusha
push
pushf
popl
pushf
pushl
popl
mov
lea
jmp
test
shl
pushf
pushf
mov
push
call
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
push
pusha
mov
push
mov
movb
pop
push
not
mov
pushf
mov
movb
lea
jmp
pushl
mov
jmp
not
lea
push
mov
bswap
lea
mov
pushf
not
pushf
popl
rcl
pop
mov
not
bswap
not
lea
mov
not
btr
cmc
pushl
pushl
popl
not
movl
rcl
mov
push
bt
rol
pushl
mov
pushl
lea
jmp
push
mov
movb
pushf
jmp
rol
shr
not
jmp
mov
pusha
jmp
mov
shr
clc
rcl
pop
or
sar
xchg
pop
pusha
bts
mov
bt
shld
shld
mov
call
mov
inc
stc
add
cmp
cmp
jmp
pusha
mov
mov
mov
pushl
lea
jmp
xchg
pushl
xor
clc
movb
cwtl
jmp
pushf
mov
bswap
btc
push
mov
bswap
pushf
pushf
pushl
popl
call
stc
test
add
jmp
sub
test
jmp
stc
rcl
ror
mov
push
bt
stc
cmc
rol
pushf
lea
jmp
pushl
popl
movb
mov
lea
jmp
pushf
popl
rol
mov
rol
pop
bts
btr
mov
clc
bts
btr
rcl
pushl
popl
movsbl
bswap
pop
movl
ror
not
ror
mov
mov
rol
movb
push
mov
mov
lea
jmp
pushf
mov
call
pushf
mov
call
not
pusha
pushf
rol
bswap
pushf
bsr
pushf
dec
inc
xor
bswap
mov
call
mov
mov
mov
lea
jmp
mov
cmc
call
push
call
mov
pushf
pushf
lea
jmp
call
pusha
pushl
mov
pushl
movl
mov
movw
lea
jmp
pushf
mov
movb
push
mov
jmp
jmp
mov
bt
call
jmp
pushf
mov
mov
jmp
pushf
stc
add
pushf
mov
push
jmp
pushf
pusha
call
rdtsc
shl
neg
mov
add
lea
test
mov
neg
and
inc
mov
jmp
add
push
movb
mov
pushf
lea
jmp
mov
clc
cmp
cwtl
bt
pushf
sub
pushf
cmc
clc
clc
add
push
pusha
call
pushf
pusha
rep
mov
shld
adc
pushf
mov
pushl
call
bswap
pusha
pushf
popl
bts
cmc
bt
bt
mov
btc
rol
rcr
mov
xchg
rcl
pushl
popl
not
movl
clc
mov
not
rol
shld
add
bt
btr
xchg
call
call
ror
bts
pushl
call
bt
add
call
call
rcr
pushl
popl
bswap
movl
btr
call
pushf
bsf
add
mov
dec
movzbw
ror
pusha
bts
rol
not
inc
setg
movsbw
inc
mov
and
neg
btc
add
pop
rcr
bswap
movzbl
rcr
mov
jmp
mov
or
mov
test
xor
pusha
push
pusha
bt
not
pushl
cmc
rol
jmp
push
lea
jge
pushf
mov
jmp
movzbw
inc
movzbl
shr
add
stc
ror
bsr
xor
bswap
pushf
bsr
dec
inc
bsf
not
jmp
clc
bt
mov
bt
sub
push
jmp
mov
movsbw
pop
mov
jmp
call
cmc
ror
jmp
sar
mov
pushf
add
jmp
call
not
xchg
aad
jmp
pusha
call
bsf
bt
bswap
lea
test
clc
jmp
pusha
mov
mov
movw
mov
pushf
push
pusha
pushf
mov
mov
call
pushf
popl
pushf
pushl
popl
pusha
push
lea
jmp
add
add
mov
not
not
lea
jb
lea
pushf
rcl
push
jmp
pushf
popl
pusha
push
jmp
rol
stc
not
stc
add
cmp
cmc
pusha
call
clc
sub
cmc
bt
add
pusha
stc
sub
call
mov
pushf
lea
jmp
jmp
pushl
jmp
push
mov
pushf
push
push
pusha
mov
mov
mov
call
pushl
mov
pushf
pusha
call
pushf
call
mov
movsbl
mov
jmp
add
call
call
pushf
pusha
movb
mov
pusha
push
call
btr
pushl
popl
stc
btc
pushl
movl
rcl
not
rcr
mov
pushf
cmc
rol
pushf
mov
pushf
mov
lea
jmp
movb
div
jmp
add
jmp
mov
mov
pushl
popl
mov
lea
jmp
stc
sub
mov
pushf
mov
jmp
mov
jmp
daa
seto
cmc
pushl
popf
setl
setb
mov
not
jmp
pushl
popl
movb
pusha
pushf
lea
jmp
mov
pushf
pusha
pushf
pushf
popl
mov
jmp
jmp
xchg
movzbw
push
rol
pushl
stc
push
bt
pushf
bts
jmp
movl
call
pushf
pushf
mov
movb
mov
pushf
push
lea
jmp
jmp
push
bswap
jmp
add
not
movsbw
movzbl
movzbl
stc
mov
mov
jmp
call
sub
mov
mov
pushf
push
lea
jmp
mov
pushf
jmp
pushf
popl
pushf
jmp
jmp
add
pusha
mov
bt
mov
shld
pusha
mov
push
push
pushf
pushf
popl
pushf
pushf
jmp
not
mov
bswap
jmp
xchg
movzbw
lea
not
xchg
pop
movsbl
xchg
bswap
not
xchg
pushf
xchg
mov
lea
jp
not
pushf
mov
lea
pushf
call
clc
sar
pusha
mov
not
rcl
cmp
mov
pushf
pusha
cmp
sub
bt
pushf
push
bt
shl
call
jmp
push
pusha
push
lea
jge
push
call
setae
mov
pushf
bt
jmp
movb
mov
pusha
cwtl
push
call
rep
xadd
inc
mov
mov
bts
bts
sub
mov
test
stc
pushl
popf
movw
pushf
pushl
lea
jmp
clc
test
xor
test
jmp
xor
pusha
jmp
pushf
popl
jmp
pushf
btc
pushl
popl
cmc
movsbw
clc
movl
movzbw
cmc
btc
mov
bt
call
push
call
lea
sub
mov
shr
mov
push
mov
pushf
add
clc
stc
bt
stc
shrd
jmp
mov
cmc
pusha
push
push
rol
pushf
lea
jmp
mov
mov
mov
jmp
pusha
pushl
call
not
mov
lea
movzbw
pop
push
mov
not
pushl
pushf
popl
pushf
mov
movsbl
stc
movzbw
rcl
mov
pusha
pop
bt
pushl
popl
clc
movl
call
pushf
push
mov
pusha
jmp
pushf
popl
pushf
jmp
jmp
mov
push
pusha
pushl
ret
jmp
lea
cpuid
call
rol
push
pushl
mov
movb
lea
jmp
movzbw
lea
not
mov
lea
movzbw
movzbw
pushf
popl
push
rcl
mov
rcl
not
btc
mov
ror
pusha
pushl
popl
not
movw
pushf
clc
movl
bt
mov
pushf
rol
push
pushf
movw
push
lea
jmp
mov
mov
jmp
push
jmp
push
pushl
pushf
popl
bts
ror
mov
ror
bt
mov
movsbw
pushl
popl
stc
cmc
jmp
and
mov
push
mov
cmc
cmc
add
movw
pushl
pusha
mov
mov
mov
pushf
push
push
lea
jmp
mov
jmp
movl
lea
stc
clc
rcr
mov
bt
call
push
xchg
pushf
jmp
pushf
pusha
pushl
popl
pushl
pushf
movl
lea
jmp
pusha
pushl
pushf
jmp
bt
pusha
push
shl
movb
pushf
mov
jmp
pushf
mov
jmp
clc
movl
clc
sub
pushl
pushl
mov
pushf
mov
pushf
pushl
lea
jmp
xchg
movzbw
call
movsbw
push
mov
not
call
rol
shl
neg
xor
bsf
not
pushf
setge
dec
pusha
and
not
shrd
pusha
and
setp
and
bsf
mov
cmp
bt
cmp
pushl
add
mov
pushf
jmp
xchg
not
movzbl
mov
jmp
bsr
neg
aas
mov
mov
clc
rol
mov
jmp
pop
mov
lea
pop
pushf
popl
bt
pushf
stc
clc
mov
lea
ror
pushl
rcr
mov
jmp
pushf
popl
btc
btc
clc
bt
mov
rol
stc
push
mov
rol
pushf
not
pushl
popl
mov
movl
bt
movl
bswap
mov
bt
pushl
call
push
mov
call
shld
sets
mov
or
not
mov
push
cmp
add
pushf
mov
push
lea
jmp
bsf
mov
jmp
not
movsbw
pushf
popl
bts
stc
push
bt
push
bt
bswap
stc
pushl
ror
bswap
push
lea
movzbw
rcl
rol
mov
clc
pushf
pusha
pusha
rol
push
lea
jmp
pushf
popl
rcl
not
clc
mov
not
mov
cmc
btc
pushl
mov
stc
lea
push
rcr
mov
push
rol
movb
push
pushl
lea
jmp
adc
mov
xor
movzbw
dec
mov
cmc
test
cmc
not
cmp
pushf
movl
clc
not
stc
and
jmp
pushf
stc
cmp
pusha
mov
bt
push
bt
sub
pushf
jmp
ror
push
xor
movsbw
dec
clc
not
not
stc
call
mov
push
mov
call
movzbl
test
test
push
test
add
clc
call
mov
mov
pushf
bswap
lea
ja
not
push
movsbl
pushf
call
mov
pushf
mov
push
pushf
popl
movb
pushl
popl
pushl
pushl
mov
lea
jmp
ror
shld
sbb
rol
mov
movsbw
add
bswap
rcl
bts
xor
xor
bswap
sar
btc
pushf
mov
test
shl
test
jmp
jmp
lea
ja
rol
shrd
mov
rcr
neg
lea
rol
aam
xchg
sub
cwtl
lea
rol
or
shl
btr
and
inc
sub
movsbl
lea
call
ror
call
push
jmp
pushf
popl
mov
pushf
pushl
popl
push
pushf
push
push
lea
jmp
movzbw
add
shld
mov
stc
add
push
pushf
movb
lea
jmp
mov
movw
lea
jmp
mov
jmp
mov
movb
movl
jmp
call
clc
bt
pushl
popf
movb
pusha
lea
jmp
or
mov
rol
test
mov
pusha
clc
pushf
add
push
mov
call
lahf
adc
mov
cbtw
pusha
clc
pusha
mov
pushl
bt
pushf
sub
push
push
cmc
mul
jmp
pushf
pushf
pushf
popl
push
push
push
pushl
popl
mov
push
push
movw
lea
jmp
ror
mov
movsbw
rcr
movsbw
lea
mov
movsbw
lea
movsbw
rol
pushl
popl
bt
movzbw
movl
btr
rol
mov
stc
push
cmc
rol
push
movb
movw
lea
jmp
mov
pushf
pushf
popl
movzbw
movzbw
push
std
mov
pushf
lea
lea
jns
pushf
mov
bswap
jmp
pushl
rol
movb
lea
jmp
xor
test
bsr
mov
bt
bt
bt
sub
jno
push
push
mov
push
push
push
lea
jmp
mov
movb
pushl
pushf
popl
pusha
pushl
popl
pushf
push
push
mov
lea
jmp
call
mov
mov
mov
push
call
call
mov
jmp
pushf
mov
xchg
call
cmp
jmp
mov
jmp
pushl
mov
bswap
mov
pushl
movsbw
mov
mov
mov
mov
jmp
jmp
rol
rol
btc
mov
cmp
bsf
movzbw
mov
stc
call
jmp
setge
mov
jmp
pusha
mov
mov
push
mov
pushf
lea
jmp
push
push
mov
pushf
push
lea
jmp
pushf
popl
lea
jae
pusha
pusha
movw
pushl
popl
movw
pushf
lea
jmp
bt
push
pusha
add
lea
jl
pushf
jmp
movb
pushl
pushf
pushl
popl
mov
push
lea
jmp
call
call
movl
rcr
stc
jmp
pushl
popl
movw
movl
lea
jmp
movsbw
mov
call
pushf
popl
mov
pushl
popl
mov
pushf
lea
jmp
mov
pusha
push
lea
jmp
pushl
popl
pushf
lea
jmp
xor
cmc
xchg
bt
xor
jmp
push
pushf
call
btc
not
bt
mov
setno
shl
neg
sub
mov
pushf
sub
mov
pusha
shr
movb
pushf
call
adc
xchg
mov
cmp
add
pushf
mov
push
call
pushf
popl
movzbl
bts
rol
bts
mov
stc
movsbl
pop
bswap
mov
cmc
pushl
popl
rol
bts
movl
stc
pusha
not
mov
pushf
jmp
call
pushl
lea
jne
pushf
mov
mov
pushl
lea
jmp
jmp
movb
pushl
popl
mov
push
lea
jmp
movb
pushf
pushf
popl
push
pushl
popl
pushf
pushf
lea
jmp
or
sub
shl
mov
shrd
bswap
inc
clc
mov
jmp
mov
push
mov
jmp
mov
pushf
pushf
lea
jmp
bt
not
call
rcl
or
mov
pushf
sbb
mov
bt
cmp
movb
sub
push
cmc
push
movb
shr
jmp
mov
jmp
call
jmp
pushf
call
movw
jmp
pusha
pusha
mov
pushf
jmp
movb
pushf
pushf
pushl
popl
pushf
mov
lea
jmp
call
push
mov
push
pop
mov
not
push
call
rol
movb
lea
jmp
pusha
mov
jmp
pusha
sub
call
mov
stc
stc
pushl
popf
pushl
movb
lea
jmp
push
pushf
mov
bswap
pusha
pop
jmp
push
pusha
mov
mov
call
jmp
push
inc
setle
movzbl
pushf
inc
rol
test
call
call
mov
jmp
pushl
xchg
stc
bt
test
xor
cmc
test
sub
pusha
mov
pushf
pushf
lea
jmp
test
mov
clc
push
xor
call
jmp
pushf
xchg
pusha
bswap
movzbw
cld
mov
jmp
mov
mov
call
jmp
mov
mov
mov
lea
jmp
push
cmc
rol
bt
movl
pusha
push
xor
pushf
stc
jmp
pushl
mov
pushf
push
pushf
lea
jmp
bt
jmp
mov
push
jmp
dec
pushf
add
jmp
mov
pushf
pushf
mov
pushf
lea
jmp
pushf
pushf
mov
call
jmp
pusha
pushf
cmc
shr
lea
jae
pushf
mov
call
rcl
mov
call
lea
shrd
movsbw
pop
sub
mov
sbb
add
mov
sar
shr
bswap
mov
bt
rcl
and
add
bsf
mov
call
sbb
adc
mov
or
shl
mov
cmp
call
lea
cmc
mov
jmp
add
jmp
bt
rol
push
mov
lea
jmp
pushl
popl
movb
mov
movb
mov
lea
jmp
push
mov
mov
call
call
not
sub
neg
lea
shl
ror
sub
seto
not
btr
btr
mov
clc
rcl
mov
shl
add
rol
rol
mov
jmp
jmp
stc
bt
add
jmp
jmp
movzbw
pusha
movsbw
pushl
popl
stc
ror
movsbw
call
call
call
jmp
cmp
add
pushl
dec
cmc
pushl
mov
stc
xor
clc
jmp
pushf
movw
ror
cmp
cmp
jmp
push
sub
jmp
call
jmp
call
shl
shl
mov
pusha
movzbw
btr
mov
rcr
rcr
neg
call
mov
pop
lea
mov
bswap
jmp
pushf
popl
bts
pop
btr
lea
mov
rcr
clc
mov
bt
not
movzbw
pushl
popl
movw
rcr
rcr
btc
movl
bts
mov
clc
mov
clc
pushf
rol
pushf
pushf
pushf
lea
jmp
shr
rcl
bt
mov
push
movb
add
movb
pusha
lea
jmp
push
mov
pushl
add
jmp
jmp
pusha
push
jmp
push
jmp
jmp
pushf
popl
mov
call
rol
push
pushl
lea
jmp
movzbw
mov
bswap
pushf
pushf
popl
jmp
mov
call
call
mov
pushf
mov
pushl
mov
push
xchg
call
aad
mov
shrd
not
mov
cmc
pusha
not
stc
not
jmp
pusha
jmp
inc
jmp
movsbw
pushf
popl
stc
pushf
rcl
mov
mov
movzbw
push
clc
bts
bt
movzbw
pushl
btr
clc
rcr
btr
push
lea
jmp
jmp
call
pushf
mov
push
pushf
pushf
pusha
lea
jmp
pushf
call
mov
adc
shl
movzww
clc
push
cmc
xor
lea
jg
rol
clc
call
jmp
rol
movl
bts
btr
cmc
movsbw
mov
cmc
pusha
rol
push
push
lea
jmp
push
pusha
mov
pusha
lea
jmp
push
mov
jmp
call
bsr
rdtsc
bt
jmp
clc
pushf
pushl
popl
stc
stc
pusha
add
jmp
pushf
call
pushl
xchg
jmp
daa
mov
clc
inc
jo
rcr
mov
neg
mov
push
add
clc
cmc
cmp
shrd
call
pushf
popl
call
mov
jmp
jmp
call
not
bt
rol
movl
bswap
rcr
rol
lea
mov
clc
bt
pushf
movl
rol
push
pushf
pushl
push
lea
jmp
pushf
jmp
pushf
clc
rol
push
lea
jmp
pusha
movb
mov
push
mov
pushf
pushf
lea
jmp
jmp
setg
add
movzbl
jmp
push
xchg
lea
bswap
movzbl
not
mov
call
xchg
stc
sar
cwtl
mov
bsr
cmp
mov
cmp
bt
bt
add
pushf
pusha
push
mov
pushl
movb
movw
pushf
lea
jmp
pushf
pushf
xor
jmp
stc
test
cbtw
call
cld
jmp
mov
pushl
bt
clc
sub
call
push
pusha
pusha
call
jmp
mov
push
pusha
push
xchg
movzbw
lea
lea
jae
not
push
mov
push
lea
pushf
push
ror
mov
btc
push
call
call
mov
pusha
call
mov
pushf
popl
call
xchg
lea
call
mov
pusha
pop
jmp
mov
mov
pushf
mov
pushf
push
mov
call
jmp
mov
pushf
call
call
pushf
pusha
pusha
pushl
popl
push
lea
jmp
jmp
pushl
popl
mov
movw
mov
mov
lea
jmp
bts
rcl
clc
push
pushf
clc
mov
pushl
popl
mov
call
mov
mov
mov
mov
movb
pushl
ret
mov
pushf
push
push
lea
jmp
cmc
call
pushl
popl
push
pushl
push
lea
jmp
pushf
divl
push
mov
call
pusha
mov
mov
not
mov
pushl
lea
js
pushf
divl
pusha
jmp
shl
mov
cmc
cmp
call
movl
mov
call
add
push
mov
movw
jmp
mov
call
call
pushf
jmp
clc
cmp
sub
stc
clc
and
push
mov
pusha
mov
pushf
pushf
jmp
bswap
pop
mov
pushl
pushf
not
pushf
popl
movzbw
jmp
mov
movw
jmp
aam
mov
adc
bt
mov
cmp
stc
pusha
pushf
add
call
mov
pusha
mov
lea
jmp
add
add
add
dec
pusha
add
rorb
adc
jnp
add
add
add
add
inc
repz
fs
add
add
mov
add
mov
add
fcom
add
aas
cmpsb
or
and
verr
loop
.byte
.byte
.byte
.byte
