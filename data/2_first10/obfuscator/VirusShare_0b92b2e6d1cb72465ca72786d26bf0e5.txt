fbstp
addr16
adc
push
inc
mov
pop
push
mov
test
jno
aam
add
and
push
test
in
fdivrs
pop
lods
cmp
cmc
jne
adc
pop
pop
adc
inc
cmc
repnz
mov
gs
sbb
push
adc
adc
inc
adc
add
mov
mov
rclb
mov
orl
or
add
daa
adc
jno
cmpsl
mov
mov
sar
lds
mov
sbb
inc
cmp
xlat
jge
pop
jne
icebp
sahf
inc
inc
dec
mov
or
add
jae
pop
cmp
push
and
add
test
jae
or
pop
mov
in
shrl
sub
das
and
lea
nop
leave
add
test
pop
or
push
cmp
or
and
mov
push
nop
fcom
add
jo
cmp
add
imul
adc
test
add
add
and
aas
cmp
add
notb
loopne
jp
rol
sub
sbbl
jo
mov
mov
mov
loop
jl
xor
enter
or
add
sbb
mov
jo
insl
pusha
rcrb
ret
orl
mov
lock
in
push
outsl
jns
scas
xchg
dec
mov
jns
push
dec
and
lea
push
sbb
pusha
mov
cli
xor
nop
les
sbb
sbb
xor
mov
dec
or
add
mov
cmpsb
cmp
jno
inc
inc
add
mov
and
xor
shll
or
jno
sarl
mov
fldenv
push
mov
mov
popa
loope
hlt
nop
push
inc
cltd
dec
and
incl
push
sbb
jne
jecxz
gs
leave
popa
add
inc
addr16
mov
cmpsb
imul
inc
jmp
inc
xor
dec
xor
or
jnp
pop
sahf
push
leave
cwtl
aas
inc
push
loope
adc
xor
hlt
call
into
cmc
and
xor
enter
adcb
test
fmull
mov
cmpsb
addr16
popf
js
mov
aad
divb
loop
out
sbb
xor
mov
inc
ror
xor
bound
ljmp
outsb
push
arpl
addb
jge
movb
or
scas
andl
pop
loop
push
sbb
mov
aam
cmp
ret
lock
xchg
lret
adc
adc
xchg
fwait
or
jecxz
or
jg
mov
inc
loopne
sar
int3
inc
dec
xor
xor
ljmp
push
imul
cmc
add
mov
cmc
xchg
popa
dec
push
shll
cltd
loop
jne
adc
sub
sti
add
addl
cmp
pop
sub
bound
xchg
loope
shrb
or
cmp
cmp
mov
adc
mov
jg
jge
pop
xchg
aam
scas
xor
mov
addb
xchg
xchg
loope
xchg
jle
out
les
stos
cmp
into
adc
aas
push
or
lds
lock
or
or
sub
test
adc
or
jne
or
inc
add
movsl
mov
or
cwtl
insl
xchg
mov
dec
dec
leave
add
xor
push
addr16
lods
shll
add
inc
inc
scas
test
or
insl
sbb
xor
rorl
mov
in
and
pop
pop
add
sbb
sub
sub
or
roll
in
sbbl
or
sahf
lods
rcr
inc
in
adcl
pop
jmp
inc
pushf
inc
fsub
arpl
movsb
mov
xchg
sti
icebp
xchg
mov
mov
add
jns
adcl
test
jb
push
push
and
je
mov
movl
xchg
int
push
notl
fnsave
adc
je
dec
dec
test
push
xor
xchg
popa
imul
pop
imul
jl
dec
pop
xor
mov
add
add
imul
neg
mov
sub
imul
jae
imul
icebp
xchg
xor
mov
mov
adc
fadds
sub
sbb
pop
lea
test
enter
jmp
push
xchg
adc
repz
inc
jno
xchg
xor
mov
out
nop
mov
out
movsb
rcr
push
jns
out
cmpsl
sub
or
sarl
adc
sub
jne
or
popa
push
or
mov
mov
test
cltd
xchg
test
pusha
jb
and
add
sub
cmp
imul
negl
inc
jno
adcb
sahf
ja
pop
ja
cmpb
dec
lret
xlat
or
test
frstor
push
xchg
jle
xlat
sbb
sub
lret
xchg
sbb
lret
add
inc
xchg
adc
clc
push
inc
sbb
add
jecxz
sahf
mov
sbb
xor
xchg
adc
and
rcr
movb
mov
sbb
dec
aas
fstps
subl
xchg
sub
inc
mov
pushf
xchg
adc
add
int
and
movsl
or
mov
sub
push
test
xchg
fisubs
sahf
jmp
cmp
mov
mov
leave
sub
daa
daa
and
adc
jne
enter
in
cmp
test
cltd
inc
inc
popa
dec
or
and
sub
ja
mov
ret
add
sub
and
mov
mov
jle
sarl
adcb
push
jno
adc
inc
rclb
fnstsw
cmp
or
pushf
push
or
inc
sbb
enter
add
inc
daa
hlt
cli
xchg
sti
xchg
fwait
adc
fimuls
lret
shrb
jno
mov
cmp
sbb
xor
jmp
mov
push
xchg
jae
in
inc
push
movsl
xorb
int
mov
fwait
inc
lods
add
sub
inc
dec
mov
lcall
lret
fcomip
and
dec
rclb
or
mov
mov
inc
jb
adc
inc
pusha
dec
and
mov
cltd
pop
push
mov
daa
and
loope
xchg
daa
mov
lock
dec
adc
cli
out
inc
es
and
rolb
mov
xchg
and
mov
add
jbe
ret
enter
push
cmpsb
lock
mov
rcll
add
mov
adc
pop
dec
pop
adc
bound
dec
sahf
invd
mov
fwait
push
pop
jecxz
add
cmp
xor
add
or
ret
mov
outsl
or
push
mov
stc
and
adc
mov
inc
jmp
cmp
push
rorl
outsb
popa
popl
jno
lret
add
loope
and
lret
xchg
cmp
outsb
inc
add
mov
push
lock
rclb
lahf
mov
jl
xor
dec
mov
mov
and
adc
movsl
add
push
lods
sub
and
xchg
lcall
pop
jb
and
xchg
or
mov
sarl
mov
lods
jb
ljmp
mov
shr
sbb
jg
pop
jecxz
pop
out
dec
cwtl
adc
dec
pop
dec
inc
push
mov
enter
das
ret
pop
pop
cmp
lds
lds
andl
int
push
push
cmp
lret
arpl
mov
jp
sub
sbb
lods
mov
dec
fwait
sar
or
mov
mov
and
cmp
jecxz
loope
jb
cmp
push
dec
iret
divl
cmc
dec
adc
add
fcomps
inc
enter
jge
pop
dec
scas
idiv
cmp
dec
lret
mov
leave
fbstp
or
xchg
or
jmp
test
jae
loope
mov
add
les
dec
shll
or
inc
inc
test
leave
xchg
loop
xchg
pop
scas
mov
stc
movsl
inc
in
inc
jo
sbbl
arpl
dec
mov
dec
aas
nop
daa
mov
sahf
adc
lret
mov
ret
subl
xchg
test
inc
add
mov
ficoms
jae
add
xchg
insl
lcall
addb
or
xchg
xor
push
adc
stos
cmp
mov
loop
and
and
mov
mov
pop
cli
sbb
add
inc
mov
lods
icebp
mov
and
cmp
insb
xor
add
cmpsl
cwtl
test
push
data16
pop
movl
add
pop
jnp
adc
lds
bound
dec
mov
mov
and
xchg
fcomp
jmp
or
sti
sbbl
rcr
sub
inc
loope
xchg
dec
scas
mov
movsl
pop
pop
inc
cmpsl
and
and
inc
and
andl
js
dec
in
mov
xchg
push
hlt
add
xor
std
add
cmpsb
xlat
add
pop
subl
decb
mov
orb
mov
dec
sub
or
inc
fsts
and
xor
sub
enter
das
xor
mov
or
pop
les
inc
jne
arpl
sub
mov
xchg
lret
xchg
cmp
push
lods
xor
jge
outsl
jo
adc
mov
sbb
sbb
pop
jmp
gs
test
nop
sbb
mov
cmpsl
rclb
inc
lahf
out
mov
mov
inc
lret
cmpsb
test
mov
mov
outsb
gs
lret
or
mov
mov
adc
mov
mov
xchg
mov
inc
cmp
mov
loopne
and
rcll
xor
int
xor
dec
mov
dec
test
test
jne
lahf
inc
enter
loope
shll
mov
push
push
mov
pushf
adc
add
sub
add
and
sub
cwtl
inc
cli
ja
pushf
icebp
popa
pop
and
ret
jne
test
push
cmp
shll
loopne
aam
lods
in
lea
out
pusha
lcall
shrl
iret
in
pop
movsb
and
jle
clc
or
mov
jmp
or
sbb
adc
sub
xchg
cmp
and
dec
mov
sbb
mov
int
movsl
into
xchg
cmc
adc
arpl
jmp
cmpsb
dec
subl
leave
dec
or
lock
mov
gs
jmp
cmp
iret
push
push
mov
inc
sbb
push
scas
add
dec
push
cmp
dec
imul
mov
test
push
js
stos
movsb
mov
cmp
cmp
pop
popa
jae
xchg
sub
add
and
fcmove
lret
fwait
rol
loopne
sbb
insl
adc
nop
sub
rolb
cmp
cmp
call
stc
add
out
add
or
sysexit
and
inc
or
adc
pop
or
jne
mov
dec
jb
sub
mov
cmp
nop
push
aam
jmp
das
or
add
lds
clc
ret
or
cmp
dec
call
push
out
pop
addl
or
arpl
gs
rorl
dec
jmp
and
leave
lea
mov
vprotb
mov
imul
pusha
lret
ljmp
or
lods
or
icebp
andl
and
inc
inc
sub
subl
sbb
cmpsb
jl
jnp
push
sbb
push
popa
fstl
cltd
jb
adc
adc
insb
adc
inc
repnz
decb
test
push
imul
mov
jmp
arpl
addr16
add
jno
xor
pop
int
push
addr16
cmpsl
leave
mov
pop
mov
repnz
repnz
aaa
ret
add
pop
loopne
imul
test
or
andb
das
out
daa
xchg
arpl
mov
and
inc
xchg
out
sub
pop
push
jp
add
inc
xchg
cmp
aam
dec
and
daa
mov
lods
js
add
test
cs
test
and
mov
lret
bound
jecxz
xor
cmp
movsb
ret
fmuls
jge
push
in
pop
sbb
jb
decl
popa
push
fsubr
leave
push
int3
mov
sub
inc
mov
mov
test
mov
inc
xchg
mulb
testb
bnd
out
jp
stos
adc
inc
adc
repnz
ficoml
add
and
adcl
cli
cmp
movsl
xor
clc
mov
mov
mov
dec
rcl
adc
das
or
sub
push
add
inc
or
mov
aad
das
fs
dec
sub
sti
or
sbbb
std
inc
xchg
add
lahf
sub
aam
inc
inc
out
add
lret
jo
imul
daa
lahf
inc
mov
adc
fiadds
jg
jge
mov
fldt
or
fidivrs
adc
dec
pop
push
repz
inc
jne
jl
inc
ret
xchg
leave
and
jg
add
add
add
das
mov
imul
cmp
idivb
leave
pop
stc
dec
outsl
or
xchg
sbb
inc
ret
mov
arpl
xlat
xor
in
push
xchg
pushf
push
enter
xor
adc
pop
pop
pop
gs
jo
and
sub
test
and
dec
mov
sub
and
and
movsl
loop
sbb
ud2
pop
sub
jecxz
mov
adc
pop
cmp
pop
and
in
dec
lret
fsubrl
iret
sub
fbstp
adc
fbstp
lret
cmp
test
jne
and
stc
pop
lea
or
sbb
push
mov
mov
pop
pusha
adc
pop
inc
inc
lds
dec
sbb
mov
sbbl
ret
hlt
test
mov
add
cmp
arpl
jae
push
sbbb
add
push
jo
lods
add
aas
cmp
jmp
ds
sub
dec
pushf
js
xchg
int3
add
pop
jb
ret
inc
and
ljmp
add
cs
sbb
fs
faddl
stos
je
xchg
add
xchg
mov
ret
inc
add
xor
mov
out
nop
xor
loope
push
lret
inc
je
add
add
test
aam
inc
cmp
notl
out
add
mov
push
and
xor
xor
jge
push
int
pusha
add
jmp
jnp
por
or
mov
sub
gs
stc
js
les
add
jp
inc
wbinvd
xchg
cmp
aas
dec
xchg
shrl
xor
push
push
sub
mov
adc
or
pop
inc
les
adcb
aaa
push
xor
mov
add
or
adc
fnsave
aaa
inc
add
ja
gs
loope
mov
pushf
test
or
mov
ror
add
ret
mov
ja
push
ret
dec
stos
dec
pop
addl
cmp
dec
mov
jmp
imul
jbe
pop
pushf
sbb
js
push
movsl
xchg
sar
rolb
mov
insl
inc
in
imul
pop
adcb
out
add
out
int
xchg
roll
fisubs
pop
mov
std
inc
out
xorl
bound
addb
sub
inc
aam
jp
xchg
outsl
test
or
cmp
cmp
mov
cld
push
arpl
movsb
inc
add
jmp
xorl
cmp
jge
mov
enter
std
xchg
lea
out
xchg
jo
mov
rolb
inc
aaa
inc
scas
sub
mov
shl
int3
sub
repz
cmp
jae
mov
mov
addr16
mov
mov
pop
vmwrite
ret
es
xchg
xchg
lods
and
xor
fs
jp
insl
orb
sbb
in
inc
dec
fstpt
fbld
imul
mov
xor
adc
dec
jg
sub
mov
inc
xor
and
adc
jle
dec
sub
pusha
mov
dec
add
jecxz
cmp
cmc
sbb
adc
xchg
inc
aas
adc
or
sbb
jmp
clc
mov
cmpsl
sbb
adc
in
adc
push
or
dec
mov
adc
rol
orb
dec
popf
mov
xor
lods
cltd
cmp
xchg
pop
iret
inc
cwtl
scas
xchg
sbb
into
dec
add
dec
pushaw
push
loope
push
aas
ja
imul
adc
fidivs
sub
xchg
xchg
jbe
mov
adc
mov
and
jp
and
mov
sub
testl
mov
inc
and
xor
scas
adc
or
push
daa
or
fstl
loop
adc
scas
push
movsb
dec
addr16
pop
jnp
sahf
jecxz
lods
popf
sbb
jle
dec
push
loopne
lret
inc
push
mov
mov
xchg
add
jb
mov
insb
dec
mov
cs
or
mov
xchg
fisubs
dec
mov
xchg
push
mov
lods
test
daa
sbb
notb
int3
push
ljmp
into
pushl
mov
push
mov
jp
jne
and
icebp
xor
dec
rcl
dec
pop
and
imul
xlat
notl
lret
aaa
mov
loopne
dec
mov
movb
shrb
pop
mov
xchg
fldenv
sbb
or
mov
xor
fs
in
aas
ror
sub
cmp
xor
adc
mov
mov
leave
mov
stos
jbe
pop
into
push
bound
ljmp
jnp
push
sub
pop
xor
xor
adc
pop
mov
mov
enter
aaa
dec
add
es
test
arpl
lods
lret
sub
rcl
jle
and
or
sub
popa
loope
xor
or
mov
aas
sbb
nop
add
testb
push
inc
xchg
inc
sub
inc
mov
cmp
adc
or
sbb
or
dec
xor
inc
enter
and
rcrl
daa
or
js
daa
or
xor
push
js
arpl
cmp
and
outsb
xchg
push
xchg
test
pop
repz
jge
xchg
pop
inc
xchg
leave
out
in
xchg
push
xor
xchg
sbbb
and
ret
add
xchg
dec
shll
cli
orl
loopne
sbb
xor
mov
stos
cld
xor
or
or
imul
sbb
xchg
test
mov
dec
add
inc
pop
and
pop
inc
je
and
adc
and
ret
mov
mov
push
inc
push
pcmpgtd
imul
add
leave
dec
les
inc
push
je
sub
sub
out
pushl
mov
mov
mov
xor
cmp
and
arpl
push
test
movsl
push
dec
mov
andb
adc
jno
push
adc
addb
sub
punpckhwd
inc
aas
rcll
fsubrs
inc
lods
dec
adc
rep
xor
pop
inc
inc
sbb
pop
xchg
jbe
fdivl
pop
xlat
xchg
pushf
adc
mov
and
push
dec
test
das
xchg
rcrb
enter
adc
push
cld
cmpsl
repnz
xorb
fstpl
or
jge
jle
sub
mov
jbe
daa
adc
xor
adc
adc
inc
jns
cltd
dec
dec
add
mov
in
adc
mov
mov
xor
pusha
mov
adc
mov
adc
inc
inc
in
add
nop
arpl
mov
and
lcall
and
jno
out
packssdw
push
rclb
cwtl
aaa
and
js
adc
leave
vmovapd
mov
or
or
popf
movsb
loope
imul
inc
mov
cmpsl
addr16
mov
xlat
pop
pop
loope
and
mov
cld
sahf
cmp
and
pop
out
mov
mov
cmp
dec
lock
ret
pop
and
roll
mov
fwait
icebp
and
sbb
rolb
jns
arpl
or
inc
imul
sbb
xchg
jnp
jle
adc
enter
in
fs
mov
xchg
in
lret
shrl
sub
jge
mov
push
jae
mov
jnp
sub
cs
jae
cmp
pop
or
adc
test
xor
dec
adc
lock
cwtl
and
mov
cmpsl
loop
shr
fs
jno
dec
cmp
in
inc
xor
push
movb
lea
xchg
fldt
ret
inc
or
mov
adc
out
mov
mov
or
xchg
inc
mov
in
push
lret
arpl
andl
or
notl
rcrl
pop
jb
popf
mul
xor
stc
out
inc
cli
ret
xor
sub
enter
loope
add
jp
cmp
pop
cli
mov
fld
dec
pop
pushf
lock
repnz
mov
in
iret
loopne
lret
mov
sbb
test
xchg
xor
dec
mov
insb
rclb
push
testb
mov
leave
push
rcrl
gs
rolb
repz
cmpsb
cmovp
xchg
mov
insl
std
adc
bound
aaa
dec
shl
push
fcomi
lds
mov
jecxz
sbb
xor
testl
jne
das
dec
test
shll
sbb
mov
cmpl
cmp
inc
mov
fcoml
sub
fisttpl
cmp
ja
jae
dec
mov
sub
sbb
icebp
sub
inc
dec
das
ljmp
btc
dec
xchg
sbb
xchg
mov
adc
mov
leave
addl
testb
adc
mov
xor
or
sub
je
xlat
adc
fs
jl
rcr
mov
pop
xchg
dec
loope
mov
loope
cmp
in
xor
je
push
xchg
inc
mov
in
jae
jmp
and
mov
push
pop
lds
or
stos
ror
call
dec
mov
xorl
xor
dec
subl
mov
push
test
popa
stos
adc
test
jmp
in
or
lea
sarl
push
mov
pop
ror
dec
das
cmovne
ds
fwait
xchg
jmp
mov
jae
add
mov
inc
lods
adc
mov
iret
mov
movl
jnp
leave
mov
lar
push
ss
mov
xchg
into
jmp
sti
fs
inc
or
push
mov
test
arpl
pop
push
andb
cli
xor
pop
adc
push
sub
test
add
movsb
pop
xchg
movsl
ret
les
daa
and
imul
arpl
ljmp
dec
inc
mov
sbb
out
inc
push
add
push
sarl
cltd
cmp
scas
push
pusha
mov
and
in
test
jo
test
aad
sbb
mov
addb
dec
xchg
mov
cmpsb
adc
add
or
bound
enter
sub
stos
dec
xchg
and
push
negb
lea
pop
test
mov
xchg
push
add
sbb
outsl
or
xor
mov
in
lret
sbb
pop
sub
push
lods
xchg
mov
xchg
jno
or
xchg
adc
or
gs
jno
pop
sahf
lcall
jae
data16
test
inc
dec
jle
jnp
mov
fs
mov
ss
int3
inc
call
dec
out
jmp
xor
sbb
cli
xchg
fstps
bound
jne
push
xchg
jns
inc
nop
shl
mov
bound
xchg
and
and
rcrb
sub
lds
icebp
imull
popa
cmp
jge
push
loop
xchg
mov
add
rcrl
add
mov
sub
cwtl
pop
es
in
fwait
mov
fsts
data16
imul
sub
pop
adc
leave
fpatan
mov
ja
je
inc
mov
pop
ljmp
inc
divb
int
jp
dec
aaa
adcl
inc
add
sbb
jno
sub
fwait
movsl
push
stos
aaa
rcrl
std
imul
xchg
push
pop
xor
daa
sub
jecxz
leave
mov
mov
jne
in
bt
pop
mov
test
mov
inc
cmp
and
cmpb
pop
push
and
xor
inc
add
or
cmpsl
sub
nop
shlb
xchg
orl
xor
adcb
pop
xor
lea
pusha
push
adc
pop
xor
imul
sbb
pop
mov
adc
xchg
jae
jo
or
add
adcb
jae
out
inc
shlb
push
inc
and
nop
inc
add
call
mov
xchg
xchg
xor
jnp
adcl
cmp
and
fst
and
mov
mov
add
cmp
xchg
xchg
sbb
adc
or
cs
aaa
add
addl
loopne
fs
imul
sbbl
andb
mov
gs
shrl
int
push
paddd
syscall
pop
rolb
dec
movsb
in
adc
dec
test
xor
ret
loopne
loopne
andl
leave
cmp
leave
call
in
inc
icebp
inc
test
std
aam
scas
jbe
fmulp
mov
xor
in
pop
shlb
and
mov
mov
xor
xor
and
push
or
adc
orb
dec
jecxz
sub
sbb
lds
push
push
mov
pop
icebp
dec
dec
push
mov
sbb
leave
mov
cs
sbb
jnp
pushf
fsts
mov
shlb
leave
cmp
push
add
pusha
mov
in
pop
rolb
mov
sbb
push
inc
dec
and
push
inc
pop
in
or
cld
or
jno
adc
insl
daa
push
icebp
pop
adc
js
daa
arpl
add
cmp
xchg
and
pop
int
mov
pop
adc
dec
cmpsl
adc
sbb
and
test
shrb
push
mov
mov
mov
ja
jne
adc
and
adc
test
or
xor
lds
adc
xchg
push
test
test
fs
add
sti
lret
sub
nop
cmp
pop
mov
sbb
add
pop
adcb
mov
cmpsb
add
inc
and
and
mov
xchg
lahf
mov
mov
push
mov
push
mov
out
and
and
ljmp
mov
and
out
shlb
push
or
push
mov
push
mov
out
mov
ljmp
push
fadd
and
cld
les
jb
lahf
mov
shlb
push
lahf
mov
and
test
dec
inc
and
push
mov
push
int
and
out
mov
push
mov
out
loopne
and
repnz
dec
fidivs
lahf
mov
jnp
push
mov
sbb
shlb
and
stos
cwtl
out
sarl
mov
push
push
mov
mov
out
bound
and
inc
mov
test
ljmp
and
bnd
jne
push
mov
mov
and
ljmp
lret
pop
nop
adc
push
and
and
ljmp
pop
fstl
ljmp
push
mov
and
xchg
pop
ret
cmpsl
sbb
lahf
mov
lret
push
mov
push
shlb
fstl
push
mov
sbb
ljmp
and
stc
mov
ljmp
andl
out
ret
outsl
add
inc
sbb
ljmp
and
xchg
lahf
mov
and
ljmp
mov
push
mov
push
mov
lods
add
cltd
and
and
sbb
xor
xchg
lahf
mov
mov
push
mov
jno
mov
cmpsb
sbb
lahf
adc
mov
and
popf
push
add
and
mov
mov
xchg
mov
sbb
mov
cmpsb
jbe
jge
fists
mov
and
and
ljmp
sbb
aad
and
int
ret
xlat
push
mov
mov
cmpsb
mov
or
jb
lahf
mov
ljmp
mov
inc
rcrl
mov
sbb
add
mov
and
jb
lahf
mov
sub
loope
fldenv
enter
mov
mov
and
or
xchg
lahf
mov
ljmp
mov
jae
mov
jnp
push
or
and
add
rclb
ljmp
jnp
out
mov
jo
add
test
clc
shll
ret
jae
shll
push
mov
ret
xchg
scas
mov
and
and
mov
cli
jb
lahf
mov
push
mov
out
and
and
out
add
and
pop
mov
mov
mov
push
mov
mov
imul
movsl
out
fyl2x
push
mov
ret
js
out
fs
stc
push
mov
jge
mov
push
jne
pushf
fstpl
push
pop
inc
and
push
mov
push
dec
inc
and
lret
xor
jb
lahf
mov
and
ljmp
and
dec
push
jb
lahf
mov
and
cmpsb
nop
fists
lahf
mov
jnp
push
mov
out
arpl
and
popa
lret
adc
ljmp
and
xchg
lahf
mov
push
mov
push
js
and
movsb
ret
push
mov
out
ret
xchg
bound
push
mov
je
push
mov
out
inc
and
jne
aaa
pushf
dec
cli
add
ljmp
ljmp
out
and
and
lcall
sbb
loopne
and
in
pop
ret
jnp
push
mov
jb
jecxz
mov
and
sbb
ss
push
mov
mov
mov
ljmp
test
xchg
lahf
mov
and
popa
jae
xchg
cmp
ljmp
and
or
mov
mov
mov
and
aas
cmp
mov
jns
xchg
jecxz
and
inc
mov
xchg
lahf
mov
push
stos
ret
and
xor
mov
sti
push
mov
push
cmpsb
andl
daa
cmpl
ljmp
and
xchg
and
jp
in
sbb
inc
adc
and
jno
and
out
inc
and
enter
xchg
lahf
mov
mov
push
lods
and
and
popf
or
inc
xchg
adc
and
mov
xor
mov
and
jo
test
xchg
lahf
mov
jne
push
mov
mov
and
ljmp
and
lret
mov
and
fisubrl
inc
jae
andb
push
mov
mov
pop
and
and
ljmp
fs
jb
lahf
mov
je
push
mov
movsl
into
out
bound
and
or
and
push
mov
repnz
lcall
roll
and
data16
data16
test
mov
push
mov
push
mov
popl
in
and
jle
sbb
clc
push
mov
mov
mov
out
movsb
and
bound
ljmp
push
mov
mov
push
pusha
loop
and
mov
mov
and
jle
and
push
flds
out
arpl
and
ljmp
mov
sbb
lahf
mov
push
cmc
and
and
ljmp
jnp
push
fldl
mov
adc
mov
andl
push
mov
mov
xor
push
arpl
and
fst
mov
xchg
lahf
mov
mov
jns
mov
add
lods
jb
lahf
mov
inc
add
and
ljmp
and
in
inc
push
shll
push
mov
push
mov
push
mov
out
movsb
and
test
and
and
mov
js
mov
ljmp
and
pop
xor
lahf
mov
sbb
push
jb
lahf
mov
mov
push
mov
mov
and
jl
sub
and
ljmp
out
ret
and
jnp
shlb
lahf
mov
mov
ret
js
push
mov
out
shll
ljmp
outsl
sbb
and
push
mov
push
pop
inc
push
sbb
xchg
andl
out
mov
push
mov
push
inc
and
sbb
and
xchg
leave
out
add
and
mov
jb
lahf
mov
mov
mov
and
ljmp
out
shlb
dec
call
sub
ljmp
push
lock
and
or
sbbb
ret
and
ljmp
mov
out
les
out
loop
and
push
lahf
mov
and
and
ljmp
mov
and
push
and
fiadds
cmpsl
iret
and
xchg
lahf
mov
pop
push
movsb
and
nop
and
incb
mov
push
mov
out
movsb
and
cmpsl
not
outsl
ss
mov
ret
jmp
mov
bnd
out
and
and
mov
mov
mov
mov
push
mov
and
stc
push
in
jb
lahf
mov
out
bound
and
dec
mov
and
shlb
mov
pop
push
add
and
xchg
lahf
mov
mov
jns
xchg
mov
xor
lahf
mov
and
jmp
and
rcrl
ljmp
jecxz
and
ljmp
xchg
lahf
mov
pop
and
adc
and
push
mov
out
mov
jl
mov
out
arpl
and
push
sahf
ret
rclb
ljmp
mov
push
jmp
mov
xchg
aad
aas
push
mov
ret
je
push
mov
push
in
and
xchg
aam
mov
mov
mov
jecxz
mov
out
movsb
and
push
inc
das
push
mov
jmp
inc
push
mov
out
mov
in
jns
push
mov
mov
mov
loope
mov
push
aam
and
cli
dec
cmpl
lahf
mov
and
ljmp
mov
jb
lahf
mov
mov
and
popf
add
push
mov
mov
out
add
and
lock
jl
xchg
lahf
mov
mov
mov
out
loop
and
mov
push
mov
out
inc
and
and
imul
xor
push
or
and
jnp
push
and
and
push
call
sbb
out
mov
out
ret
and
push
mov
out
movsb
and
push
mov
out
andb
lds
daa
xor
xchg
lahf
mov
or
and
jbe
mov
out
mov
and
and
scas
xchg
and
and
and
push
mov
jb
add
mov
sbb
and
jnp
push
mov
mov
mov
and
lret
lods
bsr
lahf
mov
fdivs
push
mov
out
shll
mov
xchg
lahf
mov
xchg
mov
and
push
mov
mov
out
inc
and
pop
mov
jg
push
mov
sbb
ljmp
mov
out
out
jb
lahf
mov
push
xor
pop
out
push
mov
push
mov
push
mov
pop
push
mov
mov
out
loop
and
mov
sbb
ljmp
clc
loope
and
xchg
cmp
and
and
ljmp
pop
jmp
ret
cli
ret
lcall
jb
lahf
mov
push
test
and
cmovge
jb
lahf
mov
ljmp
and
repz
cmpsl
push
xlat
inc
pop
jb
lahf
mov
mov
jns
xchg
andb
pop
xchg
dec
mov
push
mov
out
mov
stos
rorl
out
bound
and
test
xor
stc
push
mov
inc
push
push
mov
or
and
and
incb
in
add
sti
push
push
shlb
mov
mov
push
mov
push
popa
test
in
inc
dec
push
mov
mov
jecxz
mov
mov
jecxz
mov
ret
flds
xchg
lret
and
push
mov
push
mov
out
andl
lds
xchg
mov
mov
push
mov
push
push
inc
and
pusha
dec
and
xchg
lahf
mov
ljmp
bnd
out
add
and
inc
js
or
push
sbb
mov
out
and
and
sbb
ljmp
and
push
mov
push
shlb
fwait
push
mov
mov
out
add
and
adc
push
mov
push
and
and
push
mov
out
andl
sbb
mov
xchg
arpl
and
and
lahf
mov
mov
sbb
std
mov
adc
adcl
mov
mov
and
or
mov
push
mov
push
mov
push
inc
inc
and
adc
push
mov
push
mov
sbb
ljmp
xor
lret
loope
push
mov
inc
mov
andl
push
mov
out
loop
and
mov
push
mov
push
sub
and
push
mov
push
mov
out
gs
add
jb
lahf
mov
mov
ret
jnp
out
andl
imul
pop
bnd
add
mov
sbb
ljmp
in
imul
and
ljmp
sbb
and
cmc
xchg
push
jb
lahf
mov
xor
and
mov
push
mov
push
mov
push
jnp
and
shll
and
mov
mov
and
push
inc
mov
push
mov
mov
push
mov
push
xlat
in
and
lret
mull
mov
and
ljmp
fstps
mov
mov
mov
and
rep
and
out
and
and
and
mov
cmp
ljmp
mov
mov
jae
and
and
mov
push
test
and
push
popf
push
repnz
mov
out
movsb
and
inc
or
stos
shlb
lahf
mov
xlat
and
ljmp
ljmp
and
ljmp
inc
ret
and
adc
or
out
add
and
mov
out
and
and
mov
out
and
and
loope
aaa
rclb
push
mov
sti
cmpsb
and
mov
sbb
ljmp
inc
sbb
adc
and
and
push
mov
out
andb
rcl
test
test
push
mov
sbb
ljmp
and
icebp
fwait
sti
jb
lahf
mov
out
ret
push
sahf
add
fdivrl
jb
lahf
mov
inc
sub
ljmp
repz
sbb
and
push
mov
and
xchg
out
jecxz
and
lahf
mov
mov
mov
sbb
arpl
arpl
jb
lahf
mov
and
mov
and
push
mov
ljmp
dec
push
lahf
mov
and
mov
push
sbb
jb
lahf
mov
mov
jb
test
jbe
and
dec
cltd
mov
xchg
lahf
mov
jecxz
popf
and
and
fstpl
mov
addl
and
ljmp
out
add
and
ljmp
push
xor
and
cmp
mov
lret
mov
push
mov
jns
mov
and
lret
xor
jb
lahf
mov
and
and
adc
loope
mov
mov
mov
and
add
mov
mov
sbb
iret
and
and
mov
mov
push
mov
mov
and
adc
and
adc
pop
cmpsb
pop
sbb
ljmp
out
ret
cld
data16
jb
lahf
mov
jnp
push
mov
ljmp
and
out
popf
adc
ljmp
and
lahf
and
and
out
add
and
lret
mov
mov
push
repz
push
out
and
and
xchg
lahf
mov
and
mov
out
ret
and
sbb
mov
cmpsb
aam
mov
jns
xchg
sbb
and
push
pop
pop
push
mov
push
mov
out
inc
and
and
js
lds
xchg
lahf
mov
ljmp
push
push
and
and
stc
push
jb
lahf
mov
test
xchg
ljmp
and
jge
mov
push
mov
push
mov
and
test
aaa
test
push
mov
push
fwait
mov
movsb
mov
out
add
mov
mov
bnd
push
mov
push
mov
and
outsb
shrb
xchg
inc
xchg
push
les
push
mov
mov
and
sbb
mov
mov
push
mov
mov
and
dec
inc
and
pop
lock
jb
lahf
mov
and
dec
ret
aam
push
xchg
add
xchg
lahf
mov
and
push
mov
inc
mov
test
out
gs
jno
andb
pop
ret
jnp
push
loop
and
cmp
jp
ret
and
mov
push
popf
adcl
and
out
gs
bnd
or
ret
mov
ljmp
and
dec
xor
mov
out
add
and
cmp
je
push
mov
out
and
lds
mov
cltd
jb
lahf
mov
and
mov
mov
and
adc
imul
push
mov
push
mov
out
es
out
les
xlat
xor
push
mov
std
popa
push
mov
mov
and
add
and
push
mov
mov
out
in
and
ret
xor
mov
lahf
mov
leave
push
mov
push
mov
stos
push
sbb
and
or
test
mov
push
mov
lods
jecxz
mov
out
and
and
clc
mov
jb
lahf
mov
jmp
lahf
xchg
repz
jb
lahf
mov
jp
push
mov
out
jecxz
and
xor
lret
push
mov
sbb
ljmp
inc
and
sub
rolb
sub
push
mov
push
mov
jns
xchg
ret
test
div
mov
mov
push
mov
mov
sahf
mov
xorb
mov
mov
push
fucom
and
xor
test
mov
bnd
push
mov
mov
jecxz
mov
push
pusha
ret
and
dec
testl
lahf
mov
and
test
push
sub
push
mov
push
into
jecxz
and
ljmp
xchg
xor
lahf
mov
ljmp
mov
out
and
pop
xlat
retw
xchg
lahf
mov
mov
sbb
mov
mov
mov
fsubp
and
ljmp
lahf
mov
push
in
gs
nop
addr16
xchg
lahf
mov
jnp
push
mov
ljmp
dec
dec
xchg
cwtl
xchg
jb
lahf
mov
and
int3
mov
out
add
and
ljmp
fldl
push
imul
imul
push
mov
out
gs
iret
xchg
int
loop
sbb
and
push
mov
push
sarl
movsb
and
mov
pop
repnz
push
mov
push
iret
test
fdivrl
lahf
mov
and
and
out
and
and
pop
pusha
or
lahf
mov
push
mov
push
mov
out
add
and
or
mov
mov
mov
and
mov
jb
lahf
mov
lret
mov
and
int3
seto
mov
test
ljmp
ljmp
rcl
jb
lahf
mov
mov
icebp
push
mov
sbb
insb
and
and
popf
jb
lahf
mov
je
and
and
inc
xor
and
push
mov
and
mov
and
xchg
jbe
mov
push
xchg
flds
sbb
in
and
push
mov
and
out
add
jo
sub
mov
cmp
out
and
out
xchg
and
push
js
and
ljmp
and
mov
and
add
and
mov
clc
into
ret
jmp
and
popa
les
xchg
push
mov
mov
and
lds
and
xchg
cmpl
mov
ret
sbb
call
push
mov
out
in
and
sarl
popa
stc
ror
adc
shl
leave
or
lret
cmp
xchg
lahf
mov
pop
ljmp
and
mov
mov
mov
movsl
push
mov
push
rep
and
and
mov
push
mov
ljmp
mov
andl
push
mov
out
andl
pop
or
jb
lahf
mov
jmp
push
mov
push
mov
and
mov
and
sti
cld
push
or
int
mov
sbb
and
push
mov
out
es
rolb
lahf
mov
mov
push
mov
jecxz
push
mov
out
fs
div
push
push
mov
ret
lret
push
mov
mov
push
mov
out
mov
bswap
and
sbb
pop
jo
jo
sbb
mov
jb
xchg
and
and
pop
add
and
icebp
mov
dec
jb
lahf
mov
push
movsb
and
jp
jb
lahf
mov
mov
mov
push
adc
jbe,pn
jb
lahf
mov
ljmp
ret
mov
and
fimuls
push
jb
lahf
mov
push
mov
push
mov
push
mov
push
push
inc
and
jge
jg
pop
push
mov
mov
out
in
and
dec
push
jae
xchg
lahf
mov
and
and
pop
inc
and
push
mov
sbb
and
inc
and
mov
push
mov
push
mov
cmp
ret
and
sub
out
ret
jmp
mov
push
outsb
add
and
sti
push
mov
adc
and
call
pop
jnp
lret
ficoms
and
ljmp
out
cmpsb
and
and
jb
lahf
mov
push
push
mov
inc
xchg
cmp
and
jbe
and
push
pop
push
mov
mov
ljmp
out
movsb
and
fadd
cmp
pop
xlat
rcll
ljmp
out
inc
and
dec
mov
in
mov
in
and
mov
mov
and
repnz
jb
lahf
mov
or
ljmp
ficomps
jnp
push
mov
ret
sbb
popf
push
mov
push
xlat
and
and
push
cmp
leave
outsl
push
mov
out
and
out
add
cmc
cltd
mov
mov
and
mov
and
out
add
xor
xchg
lahf
mov
push
inc
and
cmpsl
mov
imul
push
mov
push
test
push
mov
inc
mov
inc
and
push
cmp
jle
cmp
jns
jb
lahf
mov
xchg
xlat
and
ljmp
lds
jae
movsl
and
push
mov
into
push
mov
cmpsb
dec
push
lods
add
pop
xchg
mov
jb
mov
and
ljmp
mov
ret
call
ljmp
cld
jecxz
and
xchg
out
cmp
push
adc
int3
push
jb
lahf
mov
call
mov
mov
sbb
and
jl
pop
cmc
iret
jb
lahf
mov
mov
push
mov
out
and
outsb
and
mov
push
es
and
xchg
cmc
test
ljmp
ret
mov
and
aas
fadds
inc
jae
in
and
jne
push
mov
mov
and
cli
in
and
dec
pop
jae
jb
lahf
mov
and
ljmp
repz
sahf
and
jb
lahf
mov
gs
and
out
mov
ljmp
mov
inc
sub
inc
sub
and
sbb
sbb
xchg
lahf
mov
mov
mov
and
ljmp
and
ret
cmpsb
ljmp
mov
push
in
and
aam
andb
repnz
lahf
or
ljmp
ljmp
mov
mov
mov
sbb
ljmp
sti
orb
jb
lahf
mov
mov
jns
xchg
pusha
and
in
stos
mov
mov
out
fs
jmp
mov
push
mov
and
push
mov
clc
push
mov
mov
push
push
mov
push
sub
and
arpl
ja
mov
xchg
lahf
mov
and
cmp
ljmp
push
xchg
movb
add
imul
xchg
lahf
mov
mov
mov
pop
push
adc
and
ficoms
mov
push
mov
mov
push
mov
mov
and
mov
pmaxsw
pop
push
mov
and
and
ljmp
xchg
inc
and
out
and
out
cmp
lahf
mov
mov
out
add
and
jb
lahf
mov
ljmp
ret
lret
out
add
dec
jb
lahf
mov
push
mov
out
in
and
nop
cmpsl
dec
adc
lahf
mov
gs
sbb
enter
inc
and
push
mov
push
sarl
test
add
mov
and
push
mov
mov
push
mov
push
pop
inc
and
lea
dec
jb
lahf
mov
add
and
mov
adc
push
shl
and
cwtl
mov
mov
mov
out
and
and
adc
or
jb
lahf
mov
xchg
in
and
mov
stc
push
mov
cmpsb
inc
cmpb
and
mov
jnp
push
mov
mov
mov
and
daa
push
add
es
data16
push
mov
mov
mov
out
out
inc
and
int3
enter
sti
push
mov
or
push
stos
and
sbb
xor
and
push
mov
out
and
and
in
and
ljmp
and
xor
jle
push
shlb
and
push
mov
out
es
jns
insl
filds
sahf
fbstp
lahf
mov
pushf
les
push
mov
push
out
daa
and
push
or
ret
push
mov
mov
mov
push
and
mulb
and
push
sahf
movsl
and
stc
jp
xchg
push
mov
jns
jge
and
cmp
mov
push
loop
sbb
and
out
add
and
fstpl
xchg
adc
mov
inc
and
push
mov
mov
lahf
push
aaa
inc
and
das
aam
sbb
mov
mov
or
ljmp
imul
mov
fnstenv
jnp
out
inc
and
rorl
aaa
lods
jb
lahf
mov
inc
and
iret
push
and
ljmp
and
iret
mov
lods
lods
jb
lahf
mov
mov
ret
mov
out
movsb
and
add
push
mov
aam
xchg
lahf
mov
movsl
and
mov
scas
movsl
jb
lahf
mov
jne
and
add
and
or
push
cmp
jmp
inc
rcr
fs
push
pop
test
ret
xchg
or
push
mov
mov
and
ljmp
mov
out
les
cmc
pop
in
and
mov
push
popf
inc
and
scas
adc
ljmp
and
cwtl
movl
outsl
sbb
and
push
mov
push
mov
sbb
outsl
inc
and
push
cmp
and
push
and
push
mov
sbb
sbb
adc
mov
mov
mov
mov
mov
jnp
push
sbb
and
scas
mov
mov
ljmp
mov
ljmp
addb
mov
xchg
lahf
mov
mov
mov
push
out
add
and
in
dec
mov
push
sbb
and
push
mov
push
ret
fs
cmp
ljmp
roll
and
lret
dec
jmp
test
ljmp
push
mov
out
and
inc
push
lock
push
mov
out
es
aaa
pop
xchg
push
or
ljmp
and
jmp
inc
ja
xchg
frstor
and
push
mov
jge
and
adc
stos
and
jb
jp
push
mov
mov
pushf
push
mov
mov
add
push
mov
out
add
and
lea
stos
jb
lahf
mov
mov
out
daa
and
xor
bnd
push
mov
push
mov
mov
push
push
mov
push
arpl
and
sub
xchg
lahf
mov
mov
push
mov
out
and
scas
mov
sahf
das
dec
inc
dec
sbb
and
test
dec
sbb
cmp
jne
lret
adc
jae
lret
roll
loop
add
pop
mov
aam
leave
sbb
mov
rcl
aam
incl
test
or
add
fprem
dec
scas
movsl
movsl
adc
not
call
push
loopne
lea
mov
add
jmp
aam
sub
stc
or
flds
mov
mov
or
mov
add
add
add
mov
ror
rcl
or
jmp
pop
je
lods
sbb
in
call
and
divl
and
xor
mov
not
xor
call
iret
ret
push
test
sub
adc
mov
shr
cmp
jne
inc
adc
iret
call
sti
std
lods
pop
and
jecxz
push
mov
call
movsb
xchg
loop
ret
out
or
enter
fadds
bound
shr
call
xorl
test
dec
orl
or
pusha
in
adc
rcl
shl
rcl
jmp
add
repnz
add
xor
test
cmp
jne
pop
lcall
leave
jmp
dec
sub
loope
jbe
fs
mov
shl
mov
sub
call
scas
mov
add
jmp
stc
mov
sar
shl
call
jo
xchg
xor
aad
rcl
shl
or
adc
jmp
rorl
add
ret
or
add
imul
in
rcr
jmp
inc
jmp
and
inc
jmp
jbe
cmp
icebp
aas
shl
not
ror
cmp
jne
out
fiadds
sub
sbb
ror
jmp
ja
push
xor
not
dec
jmp
and
adc
add
testl
add
jne
iret
jg
std
not
ror
jmp
cmp
js
fld
iret
pop
shl
shl
call
mov
and
dec
jmp
adc
lahf
adc
dec
mov
add
cmp
jne
dec
aas
jnp
sbb
sbb
call
addb
cmp
loop
leave
and
rcl
shl
rcr
call
pop
test
pop
lea
sar
jmp
jno
xchg
push
scas
and
ror
call
stos
ret
and
ret
push
ror
xor
xor
jmp
outsw
add
add
ljmp
adc
call
rclb
lea
neg
rcr
adc
ror
cmp
jne
push
ds
jmp
ror
neg
adc
not
shl
cmp
jne
push
rorl
loope
std
adc
not
cmp
jne
gs
xor
lea
test
neg
jmp
mov
mov
inc
jne
xor
cmp
jne
sbb
fmuls
not
jmp
movsb
jp
fsubs
into
inc
sbb
jmp
notb
sbb
and
test
cmp
jne
repz
dec
sbb
test
and
shr
add
or
call
jg
pop
fstpt
shr
and
cmp
jne
gs
xor
or
jmp
fisubrl
jo
mov
loope
popa
daa
inc
adc
cmp
jne
call
mov
rcrb
jmp
push
inc
scas
lea
inc
rcr
call
mov
fistpll
add
rcr
add
and
shr
cmp
jne
nop
inc
push
lea
mov
adc
rcr
not
cmp
jne
xor
add
lea
sar
call
jl
out
test
jb
jne
fdivrl
movb
mov
call
and
xor
add
shl
or
call
js
test
dec
xor
shl
jmp
inc
xchg
push
mov
xchg
neg
shl
dec
shl
shr
mov
cmp
jne
push
xchg
mov
add
test
cmp
jmp
fcom
aad
sbb
and
shl
or
cmp
jne
and
lea
shl
and
add
rcl
jmp
push
push
ja
fwait
rol
rcrl
int
insb
add
add
lods
aam
ror
inc
and
cmp
cmp
jne
push
adc
rcrl
iret
and
sbb
and
sbb
call
mov
xchg
movsl
cltd
shl
test
ror
adc
rol
test
call
inc
aas
xlat
push
cmpsl
movsl
and
sbb
cmp
jne
pop
mov
and
rol
shl
call
mov
inc
xchg
cmp
or
fsubr
or
add
mov
shr
adc
cmp
jne
mov
ds
adc
or
rcr
cmp
jne
arpl
pop
pop
loope
shl
rcl
or
or
cmp
jne
jno
flds
adc
enter
and
popf
xor
rcl
cmp
jne
inc
fidivs
rol
adc
or
shr
mov
and
jmp
leave
push
inc
sub
shl
adc
cmp
jne
adc
shl
not
shl
add
ror
rcl
jmp
iret
xadd
test
cmp
jne
xchg
xchg
add
rcll
sub
xor
sub
xor
call
xlat
enter
dec
lea
rcr
test
ror
cmp
jne
fstpt
adc
sub
rcr
rcl
add
sar
jmp
repnz
adc
add
testb
stos
adc
add
rcl
call
push
mov
pop
pop
inc
shl
sar
cmp
jne
pop
cld
xchg
into
or
rcr
cmp
jne
in
push
in
hlt
rcl
dec
mov
shl
jmp
mov
xchg
test
cmp
lret
and
fadd
jmp
not
call
jecxz
test
cld
sbb
xor
rol
cmp
jne
xchg
cs
adc
loopne
shl
cmp
jne
fs
ret
sar
dec
adc
call
clc
sarb
inc
add
not
call
stc
sbb
jecxz
and
not
rcr
cmp
jne
add
scas
rcl
shl
rcl
and
jmp
dec
icebp
lahf
mov
and
cmp
jne
jmp
mov
cmp
ror
shl
test
adc
call
push
ljmp
loope
int
add
fsubrp
clc
add
add
dec
xor
shl
call
xor
jecxz
jmp
add
add
call
shlb
sbb
sar
or
rcr
jmp
inc
push
xor
lea
rcr
cmp
test
jmp
or
fistpll
mov
rol
rol
call
mov
aam
loop
les
repnz
shl
or
cmp
jne
popf
test
lret
scas
rcl
sub
rol
call
inc
pop
mov
push
rol
or
rcl
cmp
jne
stc
outsb
movsl
ds
bound
clc
xor
jmp
add
lods
and
sar
sub
adc
jmp
je
inc
sbb
and
sbb
rcr
ror
call
test
rcl
call
sub
cli
dec
xchg
lahf
sbb
and
mov
jmp
es
xchg
jo
lea
shl
xor
and
shl
call
inc
pop
je
shlb
out
shl
and
jmp
pop
mov
and
test
ror
jmp
bnd
xor
inc
ret
rol
jmp
int
mov
icebp
neg
shr
mov
adc
add
jmp
sbb
js
neg
cmp
sub
rcr
mov
sbb
cmp
jne
movsl
sysexit
sar
not
rcr
and
add
jmp
ja
repz
lock
stos
jne
push
ret
and
mov
es
neg
rcr
test
call
jp
fisttps
rcr
mov
mov
shr
cmp
jne
out
or
or
int3
sbb
call
cmp
fs
adc
jmp
or
inc
rol
ror
adc
call
in
push
xchg
push
adc
outsb
shr
mov
jmp
adc
lea
shl
sub
test
adc
cmp
jne
cmc
mov
rcl
mov
rcl
ror
neg
jmp
pop
ret
rol
ror
jmp
aad
pop
lea
test
mov
pop
cmp
jne
incb
xor
icebp
psrlq
shl
rcl
jmp
cmpsl
test
fs
rcl
rcr
add
cmp
jne
inc
dec
dec
sahf
mov
rcl
shr
call
cmp
sbb
test
dec
adc
ror
jmp
stos
lods
mov
test
rol
jmp
cwtl
repnz
and
ror
adc
cmp
jne
insb
mov
movsb
or
dec
adc
ror
cmp
adc
call
pop
jbe
mov
jl
lea
rcr
rcr
jmp
pop
mov
roll
clc
not
adc
jmp
or
inc
sbb
test
call
pop
xor
lea
inc
jmp
jl
cmp
adc
sar
shl
call
push
les
lea
adc
jmp
mov
and
fiaddl
inc
loope
xor
cmp
sbb
cmp
jne
into
mov
ret
xor
shl
adc
mov
sbb
rol
sbb
ror
test
adc
shl
and
call
sbb
push
rcl
dec
sar
sar
sub
cmp
jne
mov
js
test
or
jmp
sub
enter
rol
mov
xor
jmp
insb
inc
mov
fs
test
shr
jmp
out
sub
add
sub
call
sahf
ret
mov
cmpsl
sar
ror
sar
jmp
out
mov
sbb
add
shr
ror
add
and
jmp
mov
sti
add
adc
sbb
call
sub
fistps
mov
inc
sbb
cmp
jne
ret
pop
cmpsb
or
ror
jmp
xor
xor
sbb
clc
inc
dec
sub
jne
mov
pop
lea
and
or
sub
jmp
fimuls
addb
ror
cmp
jne
mov
push
not
cmp
rol
sar
xor
cmp
jne
xchg
aaa
pop
cmp
sar
shl
sbb
sbb
cmp
jne
aad
inc
shl
and
adc
xor
add
and
cmp
jne
dec
xchg
test
jp
int
je
shl
shr
add
call
std
and
xor
add
rcr
ror
sbb
jmp
int
mov
adc
shl
add
ror
cmp
jne
lahf
movsb
stos
test
rol
push
sar
rol
call
ljmp
and
dec
adc
shl
rcl
jmp
xor
fs
lahf
test
or
test
call
fsubs
icebp
lea
rcr
jmp
inc
mov
rclb
js
mov
inc
inc
xchg
mov
iret
ror
xor
call
lret
test
sbb
sbb
decl
lds
negl
add
cmp
jne
iret
pop
mov
lcall
fiaddl
lcall
jmp
dec
rol
adc
lret
sub
inc
shl
jmp
repnz
xor
fs
ror
or
int
cmp
jne
xor
fimuls
fwait
shr
call
cmp
arpl
jne
neg
jmp
xchg
aad
xor
add
adc
sbb
mov
jmp
sti
sbb
sbb
lret
and
add
ror
cmp
jne
jge
pop
popl
js
mov
clc
xchg
and
stc
jnp
jns
shl
shl
sbb
dec
rcr
call
pop
push
jmp
and
rcl
rol
call
mov
fisubl
test
sar
shl
rcl
cmp
jne
xor
in
adc
and
cmp
jne
aam
inc
lret
ror
xor
jmp
mov
and
mov
shr
cmp
jne
daa
enter
loopne
incb
mov
enter
jb
or
test
lock
lcall
sub
neg
and
rol
call
lahf
pop
xchg
dec
adc
and
or
rcr
xor
call
xor
lahf
pop
out
fs
dec
rcl
jmp
xor
sub
out
or
faddl
fwait
rcl
sbb
cmp
jne
out
sub
xchg
rorb
rcrl
jnp
dec
or
call
xor
shl
rcl
neg
rcr
adc
jmp
cmp
lret
dec
xchg
sbb
add
mov
or
xor
call
ret
enter
and
dec
shr
sbb
ror
jmp
lods
add
sub
not
sub
cmp
adc
jmp
loopne
adc
rol
shr
add
shl
sub
call
ret
ds
xor
jae
icebp
neg
test
not
xor
rcr
cmp
jne
and
dec
ljmp
ficoms
mov
cmp
jne
push
addr16
stc
lea
ror
rcl
mov
test
jmp
add
les
daa
cwtl
pop
or
test
idiv
incl
push
push
mov
